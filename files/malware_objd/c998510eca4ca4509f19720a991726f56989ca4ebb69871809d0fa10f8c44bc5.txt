
c998510eca4ca4509f19720a991726f56989ca4ebb69871809d0fa10f8c44bc5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [eax],eax
  402e93:	adc    ebx,0x7c7c7ca6
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0xd],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	pop    ds
  402f42:	mov    bl,0xe3
  402f44:	aam    0x4c
  402f46:	jmp    0x39197313
  402f4b:	mov    DWORD PTR [edx-0x4264d5df],0xed27fee1
  402f55:	std    
  402f56:	sub    BYTE PTR [esi+0xa],ah
  402f59:	inc    ecx
  402f5a:	pop    edi
  402f5b:	jge    0x402f52
  402f5d:	div    BYTE PTR [edi-0x5b]
  402f60:	into   
  402f61:	stos   BYTE PTR es:[edi],al
  402f62:	mov    al,0x2f
  402f64:	leave  
  402f65:	outs   dx,BYTE PTR ds:[esi]
  402f66:	sub    eax,0x6b7d5cde
  402f6b:	mov    al,BYTE PTR [ebx+ebx*8+0x37a408ab]
  402f72:	push   es
  402f73:	or     DWORD PTR [edi+0x4b680b46],ebp
  402f79:	add    eax,0xf4462459
  402f7e:	faddp  st(3),st
  402f80:	fild   WORD PTR [edi+0x5d]
  402f83:	jp     0x402f53
  402f85:	add    DWORD PTR [ecx+edx*2-0x23],ebx
  402f89:	mov    eax,0x332b190d
  402f8e:	repnz push edx
  402f90:	jg     0x402f2b
  402f92:	xchg   edi,eax
  402f93:	loopne 0x402f90
  402f95:	pop    esp
  402f96:	imul   eax,DWORD PTR [ebp+0x4],0x3e
  402f9a:	or     esi,edx
  402f9c:	jle    0x40300d
  402f9e:	mov    cl,0x65
  402fa0:	add    al,0xd8
  402fa2:	test   ebx,esi
  402fa4:	or     dh,BYTE PTR [edi+edx*1-0x6c]
  402fa8:	adc    eax,0xac753e85
  402fad:	icebp  
  402fae:	in     eax,0x2d
  402fb0:	dec    esi
  402fb1:	pop    ss
  402fb2:	pop    edi
  402fb3:	or     BYTE PTR [edx-0x3b],bl
  402fb6:	inc    ecx
  402fb7:	jg     0x403030
  402fb9:	mov    bh,ah
  402fbb:	aad    0x76
  402fbd:	sub    al,0xd9
  402fbf:	jmp    0x402f4b
  402fc1:	sub    BYTE PTR [edx+eiz*4-0x8],dh
  402fc5:	jae    0x402f66
  402fc7:	mov    esi,0xb7ec34d8
  402fcc:	das    
  402fcd:	xor    al,0x4b
  402fcf:	loope  0x402f6b
  402fd1:	scas   eax,DWORD PTR es:[edi]
  402fd2:	cmp    BYTE PTR [edi],0xeb
  402fd5:	fwait
  402fd6:	dec    eax
  402fd7:	jle    0x403039
  402fd9:	pop    esp
  402fda:	pop    edx
  402fdb:	cmp    eax,0xffffffe7
  402fde:	inc    ecx
  402fdf:	stos   BYTE PTR es:[edi],al
  402fe0:	ds jns 0x402fef
  402fe3:	jp     0x402ff6
  402fe5:	jl     0x403006
  402fe7:	and    edi,DWORD PTR [esp+esi*4+0x17bdf8e8]
  402fee:	mov    ds:0x104bbc92,al
  402ff3:	pusha  
  402ff4:	jmp    0x8eb83593
  402ff9:	mov    edx,0x6f278633
  402ffe:	cmp    eax,0xf119cc1c
  403003:	mov    ebx,0x9edf5bda
  403008:	jmp    0x4c81:0x3c569ab3
  40300f:	mov    BYTE PTR [edx+0x7d],dh
  403012:	clc    
  403013:	push   es
  403014:	retf   0x312f
  403017:	xchg   edx,eax
  403018:	stos   DWORD PTR es:[edi],eax
  403019:	push   ebp
  40301a:	shr    BYTE PTR [ebp+0x77817d9e],0x96
  403021:	push   cs
  403022:	mov    ecx,0xd862349c
  403027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403028:	jp     0x40303c
  40302a:	rcr    BYTE PTR [edx+eax*2+0x70ed98ef],cl
  403031:	(bad)  
  403032:	je     0x402fed
  403034:	repz pop edi
  403036:	retf   
  403037:	push   0x17
  403039:	sub    ebx,ecx
  40303b:	mov    eax,0x4e8b1749
  403040:	pop    ebx
  403041:	jmp    0x7906:0x9650355e
  403048:	loopne 0x403074
  40304a:	stc    
  40304b:	or     esp,ebx
  40304d:	repz adc al,0x61
  403050:	pop    esp
  403051:	nop
  403052:	aad    0x5c
  403054:	push   ss
  403055:	or     bl,BYTE PTR [eax+0x66]
  403058:	ror    bh,cl
  40305a:	pop    ebx
  40305b:	shl    DWORD PTR [ecx-0x2f0ed15],cl
  403061:	jns    0x403051
  403063:	clc    
  403064:	pop    edi
  403065:	lods   eax,DWORD PTR ds:[esi]
  403066:	fidivr DWORD PTR [edx]
  403068:	xchg   DWORD PTR [ebx+0x8],edi
  40306b:	test   DWORD PTR [eax+0x23f7e1d7],ecx
  403071:	mov    bh,0xe3
  403073:	mov    ch,0x5b
  403075:	jno    0x4030a8
  403077:	mov    WORD PTR [esi+0x17],ds
  40307a:	push   0x4e
  40307c:	sub    dh,0x8f
  40307f:	dec    edx
  403080:	mov    dh,0x6e
  403082:	dec    ecx
  403083:	mov    ah,0x95
  403085:	sub    esi,0x69
  403088:	pop    ebp
  403089:	out    0x72,eax
  40308b:	sbb    ebp,DWORD PTR [ecx+0x53f78a33]
  403091:	loop   0x403072
  403093:	in     al,0x4d
  403095:	into   
  403096:	cwde   
  403097:	mov    dh,0x8a
  403099:	adc    ebx,DWORD PTR [ebp+0x7f218215]
  40309f:	pop    edi
  4030a0:	fwait
  4030a1:	mov    ebx,0xd0a78926
  4030a6:	in     eax,dx
  4030a7:	call   eax
  4030a9:	inc    esi
  4030aa:	scas   al,BYTE PTR es:[edi]
  4030ab:	fs repnz ins DWORD PTR es:[edi],dx
  4030ae:	mov    edi,0xa31e3f11
  4030b3:	mov    WORD PTR [edi],cs
  4030b5:	push   esi
  4030b6:	xchg   BYTE PTR [esi],dh
  4030b8:	std    
  4030b9:	push   edi
  4030ba:	loop   0x403060
  4030bc:	xor    DWORD PTR [esi],ebx
  4030be:	cmp    al,0x3e
  4030c0:	push   edx
  4030c1:	xchg   esp,eax
  4030c2:	push   esp
  4030c3:	je     0x4030bf
  4030c5:	xor    edx,esp
  4030c7:	sub    al,0x21
  4030c9:	cmp    BYTE PTR [ebp-0x6c72b584],ch
  4030cf:	mov    bl,dh
  4030d1:	pop    ss
  4030d2:	sbb    BYTE PTR [edi+ecx*8+0x1174ce20],0x96
  4030da:	sub    dl,BYTE PTR [esi+0x49]
  4030dd:	xchg   ecx,eax
  4030de:	(bad)  
  4030df:	loop   0x4030c6
  4030e1:	call   0x9cf5:0x3160a857
  4030e8:	sar    BYTE PTR [eax+0x612dcf52],1
  4030ee:	pusha  
  4030ef:	in     al,dx
  4030f0:	(bad)  
  4030f1:	pop    esi
  4030f2:	mov    dh,0x0
  4030f4:	sbb    al,0xdd
  4030f6:	imul   ebp,DWORD PTR [ebx-0x4b8d93bc],0xffffffd8
  4030fd:	not    DWORD PTR [ebx]
  4030ff:	pop    edx
  403100:	repz mov dh,0xc3
  403103:	mov    dl,0xac
  403105:	jb     0x4030eb
  403107:	inc    esi
  403108:	rcl    edi,0x98
  40310b:	out    dx,eax
  40310c:	inc    ecx
  40310d:	dec    esp
  40310e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310f:	dec    edi
  403110:	fld    QWORD PTR [edx]
  403112:	dec    ecx
  403113:	ret    
  403114:	fbstp  TBYTE PTR [ebp-0x20]
  403117:	fiadd  DWORD PTR [eax+0xb]
  40311a:	dec    ecx
  40311b:	mov    gs,edx
  40311d:	fcomip st,st(5)
  40311f:	add    DWORD PTR [eax],esi
  403121:	lea    ebp,[edx-0x7514c35d]
  403127:	mov    ch,0x54
  403129:	push   cs
  40312a:	xchg   ebx,eax
  40312b:	or     DWORD PTR ds:0xfc70dce9,ecx
  403131:	mov    ebx,0xb0ab8e07
  403136:	mov    ebp,0x81c9a67a
  40313b:	xor    BYTE PTR [edx+0x596f808d],0xad
  403142:	sbb    al,BYTE PTR [edx]
  403144:	pusha  
  403145:	mov    bh,0x9a
  403147:	pop    ebp
  403148:	stos   DWORD PTR es:[edi],eax
  403149:	or     eax,0x48c1f8e5
  40314e:	sub    dh,BYTE PTR ds:0xbd9462a3
  403154:	sub    ebp,DWORD PTR [edi+eiz*8-0x21b713c4]
  40315b:	lods   al,BYTE PTR ds:[esi]
  40315c:	nop
  40315d:	push   0x14
  40315f:	lea    ebp,[ebx+0x2e]
  403162:	push   ds
  403163:	inc    ebp
  403164:	inc    ebx
  403165:	jb     0x403191
  403167:	mov    WORD PTR [ebp+0x3],cs
  40316a:	adc    al,0x50
  40316c:	xchg   edx,eax
  40316d:	lea    ecx,[edx]
  40316f:	pop    esi
  403170:	push   ebp
  403171:	(bad)  
  403172:	push   ecx
  403173:	fcomi  st,st(1)
  403175:	and    eax,DWORD PTR [eax-0x77]
  403178:	in     al,0x1
  40317a:	dec    eax
  40317b:	adc    eax,0xa88e4400
  403180:	or     dl,dl
  403182:	mov    ah,ah
  403184:	or     eax,0x4bc7fb79
  403189:	sti    
  40318a:	enter  0xa2ad,0xd4
  40318e:	test   al,0x3f
  403190:	mov    ds:0x8dd5207e,eax
  403195:	imul   ecx,DWORD PTR [ebx-0x6d],0xffffffc5
  403199:	repz dec ebx
  40319b:	dec    esp
  40319c:	add    ch,BYTE PTR [edi+edi*8+0x6f]
  4031a0:	fild   WORD PTR [edi]
  4031a2:	inc    ebp
  4031a3:	jbe    0x40317f
  4031a5:	or     eax,0x4eb11633
  4031aa:	int    0xfd
  4031ac:	pushf  
  4031ad:	jecxz  0x403219
  4031af:	xchg   bh,ah
  4031b1:	gs sub eax,0xcdf53335
  4031b7:	(bad)  
  4031b8:	pop    esi
  4031b9:	icebp  
  4031ba:	and    cl,BYTE PTR [eax-0x7]
  4031bd:	inc    ebp
  4031be:	retf   0xf5cc
  4031c1:	imul   ebx,DWORD PTR [edi+0x5a],0x5d337ad1
  4031c8:	ret    
  4031c9:	push   esi
  4031ca:	jnp    0x403238
  4031cc:	add    BYTE PTR [eax+0x48697f2],bl
  4031d2:	sub    bl,BYTE PTR [edi+0x62f155da]
  4031d8:	cmc    
  4031d9:	mov    esi,DWORD PTR es:[ebx]
  4031dc:	ret    
  4031dd:	cld    
  4031de:	dec    DWORD PTR [edi]
  4031e0:	fld    QWORD PTR [ebp+0x101739c]
  4031e6:	inc    ebp
  4031e7:	xchg   edi,eax
  4031e8:	outs   dx,BYTE PTR ds:[esi]
  4031e9:	out    dx,eax
  4031ea:	out    dx,al
  4031eb:	ins    BYTE PTR es:[edi],dx
  4031ec:	fild   QWORD PTR [eax]
  4031ee:	mov    eax,ds:0xcf3fa4cf
  4031f3:	jnp    0x4031e6
  4031f5:	in     eax,dx
  4031f6:	aam    0xb0
  4031f8:	repz xor al,dl
  4031fb:	mov    cl,0xc5
  4031fd:	cmp    al,0xf4
  4031ff:	sub    dl,bl
  403201:	push   ecx
  403202:	cmp    eax,0x62bfc0c7
  403207:	pop    esp
  403208:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403209:	adc    bh,dl
  40320b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40320c:	sbb    edi,ebx
  40320e:	aaa    
  40320f:	hlt    
  403210:	ror    esi,cl
  403212:	jbe    0x403257
  403214:	outs   dx,BYTE PTR ds:[esi]
  403215:	jmp    0x5411:0x174611d0
  40321c:	pop    ds
  40321d:	jmp    0x247d:0x11936e7
  403224:	imul   ecx,DWORD PTR [edi+0x21c5266d],0x6c
  40322b:	push   ecx
  40322c:	sub    ecx,DWORD PTR [esp+ecx*4+0x49]
  403230:	in     al,0xa6
  403232:	and    eax,0x542e54ac
  403237:	sbb    eax,0x71056572
  40323c:	aad    0xf
  40323e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40323f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403240:	jae    0x4031c2
  403242:	test   dl,dl
  403244:	add    eax,0x31c6368d
  403249:	(bad)  
  40324a:	aas    
  40324b:	or     dl,al
  40324d:	mov    WORD PTR [ecx-0x1d],ds
  403250:	imul   edi,ebp,0x66
  403253:	fsub   DWORD PTR [edx]
  403255:	jb     0x403242
  403257:	aam    0x91
  403259:	outs   dx,DWORD PTR ds:[esi]
  40325a:	dec    eax
  40325b:	cmp    dl,BYTE PTR [esi]
  40325d:	and    al,0x4c
  40325f:	xchg   DWORD PTR [edi+ecx*8],ebp
  403262:	and    eax,ebx
  403264:	inc    esp
  403265:	cwde   
  403266:	mov    cx,0x3c4a
  40326a:	das    
  40326b:	test   eax,0xd94e66d0
  403270:	push   ebp
  403271:	sub    DWORD PTR [ebx-0x4d],eax
  403274:	in     al,dx
  403275:	test   ecx,ecx
  403277:	inc    edi
  403278:	adc    bl,dh
  40327a:	adc    DWORD PTR [edx+ebx*4],ebx
  40327d:	adc    edx,DWORD PTR [ecx]
  40327f:	dec    esp
  403280:	test   BYTE PTR [ecx+0x3944e437],0x19
  403287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403288:	mov    BYTE PTR [ebx+0x18],dl
  40328b:	push   0xfffffffa
  40328d:	call   0x36d8e922
  403292:	lods   al,BYTE PTR ss:[esi]
  403294:	pop    ebp
  403295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403296:	mov    bh,0x5c
  403298:	cs add eax,0x9a2fc76f
  40329e:	dec    edi
  40329f:	imul   edx,DWORD PTR [ecx-0x77],0x12
  4032a3:	pushf  
  4032a4:	push   edx
  4032a5:	in     al,dx
  4032a6:	jle    0x4032a1
  4032a8:	dec    eax
  4032a9:	outs   dx,BYTE PTR ds:[esi]
  4032aa:	pop    ss
  4032ab:	dec    esi
  4032ac:	test   al,cl
  4032ae:	dec    ebx
  4032af:	in     eax,0xe1
  4032b1:	xchg   edi,eax
  4032b2:	retf   
  4032b3:	push   ebp
  4032b4:	call   0x5a9d4bfd
  4032b9:	data16 in al,dx
  4032bb:	push   ds
  4032bc:	pop    ebp
  4032bd:	or     al,0x11
  4032bf:	mov    ah,0xc0
  4032c1:	leave  
  4032c2:	jbe    0x40325a
  4032c4:	sub    BYTE PTR [esi],dh
  4032c6:	retf   
  4032c7:	lods   eax,DWORD PTR ds:[esi]
  4032c8:	add    eax,0xb41dbeb0
  4032cd:	inc    ecx
  4032ce:	call   0xf0fe4a58
  4032d3:	imul   edx,DWORD PTR [eax],0x2f9e3d1c
  4032d9:	adc    al,0x15
  4032db:	and    DWORD PTR [edi+edi*8],esi
  4032de:	es in  eax,dx
  4032e0:	repnz mov BYTE PTR [edi],ah
  4032e3:	dec    edi
  4032e4:	cs push cs
  4032e6:	cmp    DWORD PTR [edx-0x7e492367],edi
  4032ec:	std    
  4032ed:	dec    eax
  4032ee:	lea    edi,[eax+0x314c6801]
  4032f4:	sub    ecx,esi
  4032f6:	arpl   WORD PTR [ebp+eiz*4-0x4a],si
  4032fa:	dec    edi
  4032fb:	sub    ebx,DWORD PTR [edi+0x58]
  4032fe:	shl    DWORD PTR [esi+eiz*1],1
  403301:	clc    
  403302:	mov    dl,0x74
  403304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403305:	lods   al,BYTE PTR ds:[esi]
  403306:	ins    DWORD PTR es:[edi],dx
  403307:	sbb    al,BYTE PTR [eax-0x24]
  40330a:	repz gs and al,0x88
  40330e:	retf   
  40330f:	retf   0x86ae
  403312:	int3   
  403313:	pop    ds
  403314:	fdiv   QWORD PTR ds:0xb7347131
  40331a:	inc    eax
  40331b:	jge    0x403336
  40331d:	or     ebx,DWORD PTR [ebp-0x6910e5ce]
  403323:	pop    ebp
  403324:	outs   dx,DWORD PTR ds:[esi]
  403325:	adc    al,0xc0
  403327:	(bad)  
  403328:	int    0x9f
  40332a:	push   esp
  40332b:	inc    ecx
  40332c:	repnz les ebp,FWORD PTR es:[eax-0x1cb63b85]
  403334:	dec    ebp
  403335:	mov    cl,0x70
  403337:	mov    bl,0x74
  403339:	mov    ch,0x85
  40333b:	ret    0xcfe2
  40333e:	outs   dx,BYTE PTR ds:[esi]
  403340:	inc    edi
  403341:	mov    bh,0x2e
  403343:	cs ss mov bh,0x66
  403347:	sub    ebx,DWORD PTR [edi+0x72]
  40334a:	aad    0x9f
  40334c:	mov    BYTE PTR [esi-0x27265205],dl
  403352:	repnz and ah,BYTE PTR [ebp+0x32f39b0e]
  403359:	sub    al,0x47
  40335b:	pushf  
  40335c:	out    dx,eax
  40335d:	push   0x15
  40335f:	jb     0x403366
  403361:	ins    BYTE PTR es:[edi],dx
  403362:	xor    dl,BYTE PTR [edi-0x7d]
  403365:	enter  0xd41e,0x97
  403369:	stc    
  40336a:	mov    esp,DWORD PTR [ecx]
  40336c:	pop    esi
  40336d:	test   eax,0x662ffd1c
  403372:	lods   eax,DWORD PTR ds:[esi]
  403373:	mov    bl,0x66
  403375:	inc    esi
  403376:	cld    
  403377:	inc    ebx
  403378:	xchg   esi,eax
  403379:	iret   
  40337a:	sbb    bh,BYTE PTR [ebx+ecx*1]
  40337d:	jmp    0xe6b4294e
  403382:	xchg   BYTE PTR [ebp+0x52],ah
  403385:	pop    ebx
  403386:	stos   DWORD PTR es:[edi],eax
  403387:	inc    eax
  403388:	adc    BYTE PTR [edx+eax*2-0x28b15a89],al
  40338f:	outs   dx,BYTE PTR ds:[esi]
  403390:	(bad)  
  403391:	cdq    
  403392:	push   esp
  403393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403394:	or     eax,0xa32fb9e9
  403399:	inc    ebp
  40339a:	mov    ecx,ecx
  40339c:	mov    cl,0x5c
  40339e:	loop   0x4033dc
  4033a0:	imul   edx,ecx,0x1d
  4033a3:	xchg   BYTE PTR [esi-0x68],bl
  4033a6:	mov    al,ds:0xf3ca21d4
  4033ab:	add    cl,bl
  4033ad:	mov    bl,0x6f
  4033af:	push   ebx
  4033b0:	pop    eax
  4033b1:	(bad)  
  4033b2:	pop    esp
  4033b3:	mov    ?,WORD PTR [eax+0x6cdf8a9e]
  4033b9:	and    al,0xb7
  4033bb:	add    eax,0xdbf19fa2
  4033c0:	shl    BYTE PTR [eax-0x56367d68],cl
  4033c6:	dec    eax
  4033c7:	inc    ebp
  4033c8:	test   DWORD PTR [esi+0x2ba10000],ebx
  4033ce:	mov    dh,0x8c
  4033d0:	sub    al,0x95
  4033d2:	add    al,BYTE PTR [esi-0x19c6356b]
  4033d8:	mov    ebp,0xcbb1590e
  4033dd:	adc    ecx,esp
  4033df:	cmp    eax,0x9a279c5c
  4033e4:	sub    eax,0x697e37b7
  4033e9:	sub    al,0x16
  4033eb:	adc    al,BYTE PTR [esi+eax*8+0x2b]
  4033ef:	sub    al,0xd
  4033f1:	dec    edi
  4033f2:	mov    edi,0xc4db6de5
  4033f7:	xor    BYTE PTR [ebp+0x78d4b99d],bh
  4033fd:	dec    ebx
  4033fe:	xchg   ebx,eax
  4033ff:	nop
  403400:	mov    ecx,0x4a2b66a2
  403405:	push   edx
  403406:	mov    dl,0xda
  403408:	jo     0x403404
  40340a:	and    al,0x8c
  40340c:	test   BYTE PTR [edi-0x25],bl
  40340f:	push   esp
  403410:	and    DWORD PTR [edi+0x62],ebp
  403413:	daa    
  403414:	inc    esi
  403415:	push   0x7d
  403417:	jmp    0x4033fd
  403419:	ficomp DWORD PTR [ebx-0x26]
  40341c:	lea    eax,[esi-0xa]
  40341f:	lods   eax,DWORD PTR ds:[esi]
  403420:	scas   eax,DWORD PTR es:[edi]
  403421:	ins    DWORD PTR es:[edi],dx
  403422:	mov    ch,0xaf
  403424:	fsubr  QWORD PTR [esi-0x3a]
  403427:	adc    dh,0x32
  40342a:	repnz add eax,0xaa69b79b
  403430:	cli    
  403431:	mov    ebp,DWORD PTR [ebx]
  403433:	sbb    cl,cl
  403435:	ret    0xd0fb
  403438:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403439:	or     eax,0xbd0af14f
  40343e:	sub    BYTE PTR [ebx],bl
  403440:	call   FWORD PTR [ebx-0x1b]
  403443:	sbb    ebp,DWORD PTR [ebp-0x5f]
  403446:	mov    bh,0x4b
  403448:	sbb    edi,DWORD PTR [esi]
  40344a:	or     ch,cl
  40344c:	adc    BYTE PTR [eax-0x31],dh
  40344f:	leave  
  403450:	cdq    
  403451:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403452:	std    
  403453:	mov    dl,0xe4
  403455:	pop    es
  403456:	fstp   st(2)
  403458:	cmp    ah,BYTE PTR [ebp+ecx*4+0x46b4cc2f]
  40345f:	sar    DWORD PTR [edx+0x6],1
  403462:	pushf  
  403463:	and    DWORD PTR [ecx-0x63],eax
  403466:	sub    BYTE PTR ds:0xc38bf60f,al
  40346c:	loop   0x4033f1
  40346e:	mov    WORD PTR [ecx+0x26],gs
  403471:	add    ebx,DWORD PTR [esi+esi*4+0x42]
  403475:	cmp    bh,BYTE PTR [eax+ebp*8-0x82f42d5]
  40347c:	pop    eax
  40347d:	in     al,0xa8
  40347f:	loopne 0x4034f9
  403481:	and    eax,edi
  403483:	(bad)
  403486:	sbb    eax,0xb4e5603c
  40348b:	mov    dl,0xf
  40348d:	aad    0x5e
  40348f:	adc    al,0x42
  403491:	(bad)  
  403492:	mul    DWORD PTR [edi-0x36a9bcdf]
  403498:	(bad)  
  403499:	fsubr  QWORD PTR [edi-0x2a763b4d]
  40349f:	in     al,0x5d
  4034a1:	inc    ebp
  4034a2:	jge    0x403481
  4034a4:	in     eax,dx
  4034a5:	sbb    al,0x54
  4034a7:	aaa    
  4034a8:	sbb    bl,cl
  4034aa:	jle    0x4034d4
  4034ac:	sbb    al,0xfa
  4034ae:	jnp    0x403528
  4034b0:	stc    
  4034b1:	in     eax,0x99
  4034b3:	imul   ebp,DWORD PTR [esi-0x73],0x4aea3706
  4034ba:	das    
  4034bb:	xchg   edx,eax
  4034bc:	aam    0xf7
  4034be:	xor    al,0x1
  4034c0:	add    DWORD PTR [edi-0x4],edi
  4034c3:	jge    0x40345d
  4034c5:	inc    ebp
  4034c6:	xor    DWORD PTR [eax-0x6d],0x5a9d2ebe
  4034cd:	sub    BYTE PTR [ebx-0x43],al
  4034d0:	into   
  4034d1:	popf   
  4034d2:	mov    ebx,0xd708c0b8
  4034d7:	pop    edi
  4034d8:	mov    WORD PTR [edi+0x48],fs
  4034db:	push   ss
  4034dc:	jl     0x40351a
  4034de:	and    al,0x3b
  4034e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e1:	mov    ?,WORD PTR [eax+0x20544a86]
  4034e7:	jb     0x4034c9
  4034e9:	int3   
  4034ea:	push   0x50
  4034ec:	sbb    dh,BYTE PTR [edi+edx*8]
  4034ef:	mov    esp,0x4a3f3c4d
  4034f4:	loopne 0x4034df
  4034f6:	add    BYTE PTR [edi+0x22],ah
  4034f9:	inc    ebp
  4034fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034fb:	mov    eax,ds:0x829aa6df
  403500:	push   edi
  403501:	and    al,0x32
  403503:	aam    0xa4
  403505:	in     al,0x1
  403507:	ss jmp 0x3556:0x921779b8
  40350f:	loope  0x40357a
  403511:	test   DWORD PTR [edi+0x55],ecx
  403514:	push   ebx
  403515:	rcr    DWORD PTR [esi+eax*4],1
  403518:	stos   DWORD PTR es:[edi],eax
  403519:	fisub  WORD PTR [edi+0xd75a9e8]
  40351f:	cmp    eax,0xf5509cfe
  403524:	push   es
  403525:	inc    edx
  403526:	push   edi
  403527:	retf   
  403528:	cmp    DWORD PTR [edx],esi
  40352a:	mov    ch,0xb7
  40352c:	xchg   edx,eax
  40352d:	in     eax,0xc1
  40352f:	pusha  
  403530:	xchg   ebx,ebp
  403532:	push   ss
  403533:	gs xchg esi,eax
  403535:	jge    0x40351f
  403537:	adc    ah,bh
  403539:	pop    edx
  40353a:	push   ds
  40353b:	rcl    DWORD PTR [edi],0xf5
  40353e:	cwde   
  40353f:	pop    ebx
  403540:	add    esp,ecx
  403542:	es push ds
  403544:	xlat   BYTE PTR ds:[ebx]
  403545:	push   ebx
  403546:	call   0xd09fd9b6
  40354b:	(bad)  
  40354c:	in     al,0xf6
  40354e:	call   0xea1a:0xefde4a23
  403555:	aad    0xff
  403557:	ror    BYTE PTR [esi],0x5b
  40355a:	sub    eax,0xf31d394e
  40355f:	jl     0x403555
  403561:	jge    0x403500
  403563:	inc    ebx
  403564:	sbb    eax,0x8677fac5
  403569:	adc    ecx,DWORD PTR ds:0x51ab23d9
  40356f:	mov    ebp,0xff0585c7
  403574:	inc    ebx
  403575:	add    eax,0x4fafdff8
  40357a:	sub    BYTE PTR [edx-0x536d0caf],dh
  403580:	pop    esi
  403581:	in     al,0xb7
  403583:	retf   
  403584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403585:	(bad)  
  403586:	jne    0x4035c2
  403588:	sbb    al,0x7a
  40358a:	ins    BYTE PTR es:[edi],dx
  40358b:	popa   
  40358c:	jno    0x403516
  40358e:	xchg   ebx,eax
  40358f:	mov    eax,ds:0x40937390
  403594:	mov    al,0xa6
  403596:	es push esi
  403598:	(bad)  [esi-0x73]
  40359b:	add    eax,0xd17ed9e8
  4035a0:	pop    ebp
  4035a1:	push   ebp
  4035a2:	jae    0x40357b
  4035a4:	sti    
  4035a5:	pop    ss
  4035a6:	out    0x50,eax
  4035a8:	bound  eax,QWORD PTR [esi]
  4035aa:	or     esi,esp
  4035ac:	inc    esi
  4035ad:	lock cmc 
  4035af:	inc    ebx
  4035b0:	out    0xcd,al
  4035b2:	daa    
  4035b3:	add    BYTE PTR [ebp+ebx*4+0x12],0x77
  4035b8:	into   
  4035b9:	pushf  
  4035ba:	mov    esp,0x9c57e444
  4035bf:	mov    esp,0xdd59a418
  4035c4:	inc    ecx
  4035c5:	jmp    0x2c9d:0x575ff333
  4035cc:	outs   dx,DWORD PTR ds:[esi]
  4035cd:	test   al,0x9a
  4035cf:	in     al,dx
  4035d0:	sub    DWORD PTR ds:0xa04f7bcc,0xffffffe4
  4035d7:	pop    es
  4035d8:	cwde   
  4035d9:	aad    0x92
  4035db:	leave  
  4035dc:	push   0xce38aa18
  4035e1:	cs push eax
  4035e3:	out    dx,eax
  4035e4:	aad    0x5a
  4035e6:	jge    0x40365b
  4035e8:	sub    eax,0x52d8efdc
  4035ed:	bound  ebp,QWORD PTR [edi]
  4035ef:	and    bl,BYTE PTR [edx+0x7f]
  4035f2:	mov    ds:0x396e5f87,eax
  4035f7:	fidiv  WORD PTR [eax]
  4035f9:	test   edi,ecx
  4035fb:	mov    ebx,0xd456c4ab
  403600:	cld    
  403601:	sub    ebx,DWORD PTR [ebx]
  403603:	mov    ebp,0xf12335fa
  403608:	or     al,0x67
  40360a:	or     eax,0xd959ec3c
  40360f:	in     al,dx
  403610:	in     eax,0x51
  403612:	cld    
  403613:	das    
  403614:	clc    
  403615:	jp     0x4035c6
  403617:	aas    
  403618:	iret   
  403619:	mov    bl,BYTE PTR [ebx+ebp*2]
  40361c:	push   ds
  40361d:	or     al,0x9e
  40361f:	jno    0x40361d
  403621:	cmp    eax,0x1ae5888a
  403626:	push   ds
  403627:	ja     0x4035d5
  403629:	inc    edi
  40362a:	xor    DWORD PTR [ecx-0x6b],ebx
  40362d:	adc    edi,DWORD PTR [ebp-0x33a03b64]
  403633:	lock sbb DWORD PTR fs:[ebx],eax
  403637:	push   esi
  403638:	fsub   DWORD PTR [ecx]
  40363a:	add    ebp,ebp
  40363c:	std    
  40363d:	or     al,0x31
  40363f:	in     al,dx
  403640:	mov    BYTE PTR [esi],dh
  403642:	fld    DWORD PTR cs:[edx-0x29]
  403646:	in     eax,0x0
  403648:	popf   
  403649:	mov    al,0x67
  40364b:	inc    ebp
  40364c:	ins    BYTE PTR es:[edi],dx
  40364d:	add    ecx,DWORD PTR [eax+0x7d]
  403650:	push   ds
  403651:	rcl    DWORD PTR [esi],0x7c
  403654:	stos   DWORD PTR es:[edi],eax
  403655:	add    al,0x1b
  403657:	mov    edx,0x588bbdc9
  40365c:	mov    ch,0x5c
  40365e:	dec    esp
  40365f:	jae    0x4036b9
  403661:	mov    eax,0x8167ed8b
  403666:	(bad)  
  403667:	and    ecx,esp
  403669:	outs   dx,BYTE PTR ds:[esi]
  40366a:	mov    dl,0x3a
  40366c:	rcl    BYTE PTR es:[esi],0x22
  403670:	push   ebp
  403671:	cmp    BYTE PTR [esi],al
  403673:	dec    edi
  403674:	add    al,BYTE PTR [ebp-0x7ae0bee5]
  40367a:	adc    DWORD PTR [eax+0x50],0xc0d09183
  403681:	stc    
  403682:	retf   
  403683:	shl    BYTE PTR [edi+0x550fc8a9],0x1a
  40368a:	adc    ebp,DWORD PTR [ebx-0x23949d8f]
  403690:	sbb    DWORD PTR ds:0xdb886c38,0xffffff8d
  403697:	pop    ebx
  403698:	or     DWORD PTR [ebx+edi*8],ecx
  40369b:	nop
  40369c:	pushf  
  40369d:	adc    DWORD PTR [edi+0x5d],ebx
  4036a0:	out    dx,al
  4036a1:	je     0x4036ba
  4036a3:	rol    BYTE PTR [ecx-0x16514933],1
  4036a9:	loopne 0x40367f
  4036ab:	jge    0x40364e
  4036ad:	xor    BYTE PTR [esi+eax*1-0x7b],dl
  4036b1:	(bad)  
  4036b2:	mov    ds:0xc319e8eb,eax
  4036b7:	jg     0x4036d8
  4036b9:	adc    bl,BYTE PTR [ecx+0x76568aac]
  4036bf:	xlat   BYTE PTR ds:[ebx]
  4036c0:	cmp    dh,BYTE PTR [edx-0x7b045978]
  4036c6:	fsubrp st(2),st
  4036c8:	jecxz  0x4036ba
  4036ca:	push   ss
  4036cb:	leave  
  4036cc:	adc    DWORD PTR [esi-0x3d28e46a],edi
  4036d2:	or     BYTE PTR [ebp-0x3c1da272],0xf2
  4036d9:	mov    cl,0x97
  4036db:	ins    BYTE PTR es:[edi],dx
  4036dc:	jge    0x403751
  4036de:	push   es
  4036df:	xadd   BYTE PTR [ebx],dh
  4036e2:	into   
  4036e3:	(bad)  
  4036e4:	jns    0x4036b1
  4036e6:	cmp    al,0x62
  4036e8:	fwait
  4036e9:	sub    DWORD PTR [ebp+0x1d],ebx
  4036ec:	jbe    0x4036c1
  4036ee:	mov    es:0xc947bb3f,al
  4036f4:	ss jle 0x4036df
  4036f7:	(bad)  
  4036f8:	in     eax,0x59
  4036fa:	in     al,0x34
  4036fc:	jp     0x403711
  4036fe:	jg     0x403741
  403700:	mov    ds:0xa66c70d5,al
  403705:	or     DWORD PTR [edx],ebx
  403707:	push   ds
  403708:	fsubr  st(7),st
  40370a:	pop    eax
  40370b:	mov    dl,0xa3
  40370d:	div    DWORD PTR [ebx]
  40370f:	ror    BYTE PTR [edx],1
  403711:	inc    edx
  403712:	fmul   st(7),st
  403714:	shl    DWORD PTR [edx],cl
  403716:	push   ds
  403717:	or     al,0xaa
  403719:	adc    cl,al
  40371b:	pop    ebp
  40371c:	in     eax,0x7
  40371e:	sub    al,0x96
  403720:	mov    al,BYTE PTR [edi+0x6d]
  403723:	call   0xd30e:0xa02ab947
  40372a:	or     ebx,DWORD PTR ds:0x7e1fb7e1
  403730:	inc    ecx
  403731:	fcmovnb st,st(6)
  403733:	xor    BYTE PTR [esp+eax*1],dl
  403736:	inc    BYTE PTR [esi-0x4347b0b1]
  40373c:	(bad)  
  40373d:	call   0xdb1ae87e
  403742:	cmp    ch,ch
  403744:	mov    cl,dl
  403746:	mov    esi,0x62cd4330
  40374b:	xor    ch,bl
  40374d:	push   0xffffffd1
  40374f:	into   
  403750:	jae    0x40373d
  403752:	jbe    0x403770
  403754:	je     0x403757
  403756:	std    
  403757:	xor    al,0xdb
  403759:	push   edx
  40375a:	adc    dh,ah
  40375c:	mov    DWORD PTR [edx-0x36],eax
  40375f:	sbb    al,0x6d
  403761:	xchg   esi,eax
  403762:	das    
  403763:	adc    esi,ecx
  403765:	sahf   
  403766:	add    BYTE PTR [ecx],bl
  403768:	sub    DWORD PTR [esi],0x28818f4f
  40376e:	and    al,0xe9
  403770:	xor    bl,ah
  403772:	fwait
  403773:	mov    DWORD PTR [ecx],esi
  403775:	push   0x4e
  403777:	stos   BYTE PTR es:[edi],al
  403778:	std    
  403779:	clc    
  40377a:	xor    DWORD PTR [edi+0x673ec62],esp
  403780:	sub    al,0xb3
  403782:	adc    cl,bh
  403784:	loope  0x4037bd
  403786:	imul   ecx,DWORD PTR [esi+0x78e6bef],0x5bc526ba
  403790:	lods   eax,DWORD PTR ds:[esi]
  403791:	cmp    eax,0x17520f75
  403796:	sbb    dl,BYTE PTR ds:0x8381d0da
  40379c:	sbb    BYTE PTR [edx-0x1a1f0e1d],cl
  4037a2:	adc    ebp,DWORD PTR [eax+0x2b1ec219]
  4037a8:	mov    bh,0x7e
  4037aa:	ret    
  4037ab:	hlt    
  4037ac:	xchg   ebp,eax
  4037ad:	je     0x403802
  4037af:	add    edi,eax
  4037b1:	jae    0x4037e7
  4037b3:	push   ss
  4037b4:	adc    DWORD PTR [esi-0x1d48aca8],ecx
  4037ba:	and    ebx,DWORD PTR [ecx]
  4037bc:	clc    
  4037bd:	cmp    edx,DWORD PTR [eax-0x60916f28]
  4037c3:	push   eax
  4037c4:	sbb    BYTE PTR [eax+0x76837089],bh
  4037ca:	or     bl,BYTE PTR [ecx+0x29]
  4037cd:	add    ebx,0x980f3760
  4037d3:	jbe    0x403837
  4037d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037d6:	xor    DWORD PTR [esi],ebp
  4037d8:	mov    esp,0x133f3b22
  4037dd:	jl     0x403854
  4037df:	out    dx,eax
  4037e0:	add    DWORD PTR [edx+ebp*1],ebp
  4037e3:	int    0x36
  4037e5:	or     ch,dh
  4037e7:	add    ebx,DWORD PTR [ebx+0x64]
  4037ea:	add    bl,BYTE PTR [ebp-0x41]
  4037ed:	cli    
  4037ee:	xor    eax,0x77bc2ac
  4037f3:	jecxz  0x4037e0
  4037f5:	xor    al,0x26
  4037f7:	and    edx,DWORD PTR [esi]
  4037f9:	cmp    eax,0xac8d6d7c
  4037fe:	push   cs
  4037ff:	xchg   BYTE PTR [esi+0x41e2fcae],bh
  403805:	mov    ecx,ecx
  403807:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403808:	pop    ecx
  403809:	ror    BYTE PTR [ebx-0x22],0x10
  40380d:	cmp    dh,BYTE PTR ds:0xc6ca2d26
  403813:	gs test al,0x5c
  403816:	pushf  
  403817:	mov    ds:0x75b89432,eax
  40381c:	xor    bh,BYTE PTR [ecx]
  40381e:	sub    al,0xd3
  403820:	fcomp  DWORD PTR [ebp-0x88bf565]
  403826:	push   cs
  403827:	dec    edi
  403829:	mov    ds:0x86b6153d,eax
  40382e:	xor    DWORD PTR [ebx-0x3],edi
  403831:	xlat   BYTE PTR ds:[ebx]
  403832:	sub    DWORD PTR [ecx+0xa],ebp
  403835:	xchg   ecx,eax
  403836:	sar    BYTE PTR [edi],0xf8
  403839:	shr    DWORD PTR [esi],cl
  40383b:	pop    esi
  40383c:	and    ah,ah
  40383e:	popf   
  40383f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403840:	ret    0x54b2
  403843:	dec    esp
  403844:	dec    eax
  403845:	dec    esi
  403846:	mov    edx,0xbfc62b98
  40384b:	push   ecx
  40384c:	ja     0x40385c
  40384e:	pop    ebp
  40384f:	rol    DWORD PTR [esi-0x6c0b1a6b],cl
  403855:	data16 sub dl,dl
  403858:	fdivr  QWORD PTR [ecx-0x7f187307]
  40385e:	sbb    BYTE PTR [edx+0x23],al
  403861:	push   esp
  403862:	scas   eax,DWORD PTR es:[edi]
  403863:	xor    ah,BYTE PTR [esp+eiz*4-0x67]
  403867:	push   ds
  403868:	call   0x3b1f9e76
  40386d:	sub    eax,ebx
  40386f:	mov    al,0x3d
  403871:	pop    esi
  403872:	fnstenv [edi]
  403874:	jge    0x4038f5
  403876:	jge    0x40381e
  403878:	dec    esp
  403879:	push   eax
  40387a:	mov    BYTE PTR [ebx+0xbecc4c8],ch
  403880:	xor    bh,BYTE PTR [edx-0x570dcce]
  403886:	popa   
  403887:	hlt    
  403888:	sbb    eax,0xdba28a59
  40388d:	dec    ebp
  40388e:	mov    al,ds:0x92f9e91a
  403893:	jbe    0x4038e6
  403895:	dec    esp
  403896:	sub    eax,0x62671cd5
  40389b:	xchg   ebp,eax
  40389c:	jbe    0x40382c
  40389e:	mov    ds:0xee9c6c34,al
  4038a3:	sub    dh,bl
  4038a5:	lods   eax,DWORD PTR ds:[esi]
  4038a6:	inc    ebp
  4038a7:	sub    BYTE PTR [esi+edi*4-0x46084480],dl
  4038ae:	push   ecx
  4038af:	xor    eax,0x2722d291
  4038b4:	xor    ebp,esp
  4038b6:	pop    ds
  4038b7:	pop    ecx
  4038b8:	xor    ebx,edx
  4038ba:	test   BYTE PTR [edi+eiz*8-0x65],cl
  4038be:	loop   0x40385a
  4038c0:	clc    
  4038c1:	popa   
  4038c2:	xchg   esp,eax
  4038c3:	mov    dh,0xf7
  4038c5:	sub    al,0xca
  4038c7:	retf   0x2178
  4038ca:	pop    ss
  4038cb:	or     al,0x86
  4038cd:	shr    bh,cl
  4038cf:	loop   0x403911
  4038d1:	mov    ds:0xbb14bcac,al
  4038d6:	ss ja  0x4038c7
  4038d9:	inc    edx
  4038da:	cmp    DWORD PTR [ebp+0x54],edi
  4038dd:	push   ss
  4038de:	jg     0x4038d3
  4038e0:	stos   DWORD PTR es:[edi],eax
  4038e1:	imul   edi,DWORD PTR [ebp-0xdc73de5],0xffffff9d
  4038e8:	lahf   
  4038e9:	cdq    
  4038ea:	push   ss
  4038eb:	or     esp,edx
  4038ed:	jp     0x403873
  4038ef:	pop    esp
  4038f0:	mov    dl,BYTE PTR [ebx+0xe]
  4038f3:	stos   DWORD PTR es:[edi],eax
  4038f4:	fist   WORD PTR [ebp-0x79a00662]
  4038fa:	sti    
  4038fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fc:	sbb    DWORD PTR [ebp-0x20994c8a],eax
  403902:	int3   
  403903:	shl    BYTE PTR [esi],0xf9
  403906:	popa   
  403907:	or     DWORD PTR [edx+0x15],0xa8431a6e
  40390e:	jbe    0x403968
  403910:	add    BYTE PTR [edx],0x26
  403913:	out    dx,eax
  403914:	loopne 0x4038fd
  403916:	sub    dl,ah
  403918:	jmp    0xf4f8:0x3f474b4
  40391f:	and    eax,0x60881ddc
  403924:	addr16 mov eax,0xfa50b70d
  40392a:	ins    BYTE PTR es:[edi],dx
  40392b:	sbb    edi,0x311e22f1
  403931:	inc    esp
  403932:	test   eax,0xbb0efa63
  403937:	mov    ch,0xb9
  403939:	call   DWORD PTR [edx]
  40393b:	hlt    
  40393c:	jle    0x403997
  40393e:	mov    al,ds:0x1b95ef60
  403943:	adc    DWORD PTR [ecx+0x53],0xffffffa4
  403947:	scas   al,BYTE PTR es:[edi]
  403948:	xor    ebp,DWORD PTR [esi+esi*1-0x3a]
  40394c:	ffree  st(1)
  40394e:	sbb    DWORD PTR [edx+0x5b],ecx
  403951:	stos   DWORD PTR es:[edi],eax
  403952:	mov    es:0x7d81933e,eax
  403958:	jle    0x403946
  40395a:	inc    esi
  40395b:	mov    ds,edx
  40395d:	xchg   esi,eax
  40395e:	jp     0x403951
  403960:	test   eax,0xe5761a78
  403965:	scas   eax,DWORD PTR es:[edi]
  403966:	cs xchg edi,eax
  403968:	mov    eax,ds:0xfd4833b7
  40396d:	mov    ds:0x1bf84b9d,eax
  403972:	repnz daa 
  403974:	and    eax,0x1e823f4
  403979:	daa    
  40397a:	mov    ds:0xf560c6a4,al
  40397f:	push   eax
  403980:	push   eax
  403981:	xchg   edi,eax
  403982:	ja     0x4039b8
  403984:	retf   
  403985:	push   ebx
  403986:	daa    
  403987:	sbb    edi,DWORD PTR [esi-0x2b]
  40398a:	xor    eax,0x9afcfbb
  40398f:	ret    0xf604
  403992:	add    ebx,DWORD PTR [esp]
  403995:	push   ds
  403996:	mov    dh,0x7f
  403998:	xor    dh,ah
  40399a:	pop    edi
  40399b:	jp     0x403934
  40399d:	and    al,0x29
  40399f:	add    eax,0x82c6f06f
  4039a4:	loopne 0x4039d9
  4039a6:	adc    BYTE PTR [eax-0x69],bh
  4039a9:	loopne 0x403a21
  4039ab:	inc    edi
  4039ac:	nop
  4039ad:	xchg   ebp,eax
  4039ae:	pop    esi
  4039af:	mov    eax,0xa905dde0
  4039b4:	sbb    eax,DWORD PTR [ebp-0x22100075]
  4039ba:	inc    ecx
  4039bb:	or     DWORD PTR [edx-0x6e],ebp
  4039be:	cmp    eax,0x2e57bf9e
  4039c3:	ds imul ebx,DWORD PTR fs:[eax+0x52],0x8a5e21ea
  4039cc:	pusha  
  4039cd:	ss sti 
  4039cf:	rol    BYTE PTR [edx],cl
  4039d1:	lods   al,BYTE PTR ds:[esi]
  4039d2:	mov    dl,0x9a
  4039d4:	and    ch,cl
  4039d6:	cmp    al,0xd7
  4039d8:	out    0xea,eax
  4039da:	adc    eax,0xe05debaa
  4039df:	lds    edx,FWORD PTR [eax]
  4039e1:	push   esi
  4039e2:	xchg   ecx,eax
  4039e3:	lds    edi,FWORD PTR [edi-0x6194a5cf]
  4039e9:	aas    
  4039ea:	enter  0x15d2,0xe0
  4039ee:	mov    edx,0x25e7b009
  4039f3:	xchg   BYTE PTR [esi-0x280c18be],al
  4039f9:	xchg   DWORD PTR [edx-0x79],ebp
  4039fc:	rcl    dh,cl
  4039fe:	dec    ecx
  4039ff:	or     eax,0x3a
  403a02:	lods   al,BYTE PTR ds:[esi]
  403a03:	xor    ecx,esi
  403a05:	dec    eax
  403a06:	lds    edx,FWORD PTR [ecx+0x63]
  403a09:	jle    0x403a76
  403a0b:	dec    DWORD PTR [esi+0xf]
  403a0e:	imul   edx,DWORD PTR [ecx-0x7],0xef0ee8a6
  403a15:	push   ss
  403a16:	inc    edx
  403a17:	popf   
  403a18:	or     al,BYTE PTR [edi-0x1b]
  403a1b:	mov    bl,0xbd
  403a1d:	dec    edx
  403a1e:	sbb    al,0xc7
  403a20:	cmp    DWORD PTR [eax+edx*8+0x2692e8eb],0xd3d9d441
  403a2b:	ins    BYTE PTR es:[edi],dx
  403a2c:	gs int3 
  403a2e:	cmc    
  403a2f:	pop    ds
  403a30:	cmp    BYTE PTR [edi+0x6502c7cb],0xcf
  403a37:	f2xm1  
  403a39:	in     al,dx
  403a3a:	mov    eax,0x38828c0e
  403a3f:	pop    ebp
  403a40:	je     0x4039d9
  403a42:	jne    0x403a30
  403a44:	xchg   edx,eax
  403a45:	repz mov ah,BYTE PTR [esi]
  403a48:	and    ah,BYTE PTR [ebx+0x1]
  403a4b:	inc    ebp
  403a4c:	push   esi
  403a4d:	inc    edx
  403a4e:	mov    cl,0x67
  403a50:	ret    
  403a51:	inc    ebp
  403a52:	out    0x3c,eax
  403a54:	rcr    DWORD PTR [ebx+eiz*1],1
  403a57:	mov    BYTE PTR [ebx],al
  403a59:	data16 ror dh,1
  403a5c:	sub    DWORD PTR [bx-0x784d],eax
  403a61:	lea    edi,[edx+0x24b3be4a]
  403a67:	mov    ds:0x4c87a369,eax
  403a6c:	inc    edx
  403a6d:	pop    ds
  403a6e:	inc    esp
  403a6f:	fstp   st(4)
  403a71:	enter  0x1238,0x8e
  403a75:	inc    edi
  403a76:	loop   0x403a98
  403a78:	gs shl eax,cl
  403a7b:	frstor [edi]
  403a7d:	adc    BYTE PTR [ecx+ecx*8],0xd6
  403a81:	lea    ebp,ss:0x5e1f8591
  403a88:	cli    
  403a89:	push   esi
  403a8a:	fs jecxz 0x403a2f
  403a8d:	outs   dx,BYTE PTR ds:[esi]
  403a8e:	icebp  
  403a8f:	mov    al,ds:0x3b728f9f
  403a94:	mov    eax,0xaf4346e1
  403a99:	test   al,0x7c
  403a9b:	pushf  
  403a9c:	push   ebx
  403a9d:	(bad)  
  403a9e:	dec    ecx
  403a9f:	and    dh,BYTE PTR [ebp-0x74670db4]
  403aa5:	jmp    0x403a99
  403aa7:	jae    0x403a2a
  403aa9:	jnp    0x403b19
  403aab:	stos   DWORD PTR es:[edi],eax
  403aac:	mov    esp,0xb4339b63
  403ab1:	jae    0x403aa5
  403ab3:	jg     0x403a49
  403ab5:	ins    BYTE PTR es:[edi],dx
  403ab6:	in     al,dx
  403ab7:	or     dl,BYTE PTR [eax+0x5620e05b]
  403abd:	adc    DWORD PTR ds:0x7c8262d8,edx
  403ac3:	and    eax,0xa1b13af6
  403ac8:	cmp    eax,0x17c68c4a
  403acd:	sbb    bh,cl
  403acf:	add    ch,BYTE PTR [ebp+0x5e]
  403ad2:	(bad)  
  403ad4:	aaa    
  403ad5:	je     0x403b2d
  403ad7:	inc    eax
  403ad8:	les    esi,FWORD PTR [ebp+0x6d]
  403adb:	ds cmc 
  403add:	push   ecx
  403ade:	fst    DWORD PTR [eax+0xf]
  403ae1:	mov    DWORD PTR [edx-0x48],edx
  403ae4:	jecxz  0x403ab0
  403ae6:	cmc    
  403ae7:	inc    esp
  403ae8:	into   
  403ae9:	popa   
  403aea:	lock or bl,0x2d
  403aee:	mov    esp,0x97abccc2
  403af3:	xchg   eax,esp
  403af5:	imul   ecx,DWORD PTR [eax+0x3],0xffffffe9
  403af9:	push   ss
  403afa:	pop    eax
  403afb:	push   ds
  403afc:	fiadd  WORD PTR [esi-0x60]
  403aff:	or     eax,0x82844f50
  403b04:	push   ebp
  403b05:	sub    DWORD PTR [ebx],esp
  403b07:	push   edi
  403b08:	shr    BYTE PTR [ebp-0x5122ae5],0x27
  403b0f:	test   BYTE PTR [ecx+0x4a],ch
  403b12:	add    edx,DWORD PTR [esi]
  403b14:	mov    ebp,0x1af8dd34
  403b19:	mov    dl,0xd8
  403b1b:	jecxz  0x403aa5
  403b1d:	xor    DWORD PTR [ebx+0x1d635820],0xdf443b05
  403b27:	(bad)  
  403b28:	dec    esp
  403b29:	mov    DWORD PTR [ebp+eax*8+0x7c],ecx
  403b2d:	aas    
  403b2e:	lods   eax,DWORD PTR ds:[esi]
  403b2f:	outs   dx,BYTE PTR ds:[esi]
  403b30:	pushf  
  403b31:	mov    ecx,0x1a14667b
  403b36:	xchg   ebp,eax
  403b37:	jg     0x403aed
  403b39:	stos   DWORD PTR es:[edi],eax
  403b3a:	rcr    BYTE PTR [edi-0x23e9a9db],0x49
  403b41:	repz mov edi,DWORD PTR [ecx+0x1b]
  403b45:	sub    ebx,DWORD PTR fs:[edx+0x7e]
  403b49:	push   edi
  403b4a:	mov    al,0x48
  403b4c:	xor    DWORD PTR [ebx+0x2f165787],eax
  403b52:	mul    BYTE PTR ds:0x8e659a67
  403b58:	imul   eax,DWORD PTR [eax],0xffffffec
  403b5b:	cmp    dh,BYTE PTR [ebx-0x31]
  403b5e:	dec    esp
  403b5f:	inc    eax
  403b60:	cli    
  403b61:	push   ebp
  403b62:	add    DWORD PTR [ebp+0x3e],ecx
  403b65:	lock ret 0xa087
  403b69:	and    ebp,eax
  403b6b:	and    eax,0x30602033
  403b70:	push   ds
  403b71:	test   al,0xca
  403b73:	push   ecx
  403b74:	inc    esi
  403b75:	mov    edx,0x55e0d94c
  403b7a:	jmp    esp
  403b7c:	sbb    esi,ecx
  403b7e:	cmp    cl,BYTE PTR [edx+0x3d951d3c]
  403b84:	add    al,0x10
  403b86:	retf   0x7579
  403b89:	sti    
  403b8a:	ret    0xd7a7
  403b8d:	popf   
  403b8e:	mov    WORD PTR [edx+0x44],es
  403b91:	pop    edx
  403b92:	dec    edx
  403b93:	mov    ah,0xc9
  403b95:	mov    edx,0x62de1e77
  403b9a:	xor    ecx,DWORD PTR [esi]
  403b9c:	ud1    edx,ebx
  403b9f:	jl     0x403b5b
  403ba1:	dec    ecx
  403ba2:	and    al,BYTE PTR [esi+0x197c2220]
  403ba8:	lods   al,BYTE PTR ds:[esi]
  403ba9:	xchg   esi,esi
  403bab:	add    BYTE PTR [edx],ch
  403bad:	pop    ds
  403bae:	pop    es
  403baf:	ret    0xbe30
  403bb2:	test   al,0x56
  403bb4:	fadd   QWORD PTR [ebx-0x4b0960fa]
  403bba:	mov    ebp,0xe4b45b33
  403bbf:	sbb    BYTE PTR [ebp-0x62320fc4],0x88
  403bc6:	and    eax,DWORD PTR [ebx+edi*1]
  403bc9:	xchg   edx,eax
  403bca:	adc    al,0x44
  403bcc:	out    dx,eax
  403bcd:	jecxz  0x403bbb
  403bcf:	cmp    bl,dl
  403bd1:	xchg   esp,eax
  403bd2:	in     eax,0x20
  403bd4:	add    edx,DWORD PTR [ecx+0x208716b0]
  403bda:	retf   0x1852
  403bdd:	add    bl,bh
  403bdf:	adc    ebp,eax
  403be1:	sahf   
  403be2:	push   0x97bfecc9
  403be7:	push   es
  403be8:	pop    es
  403be9:	push   edi
  403bea:	fst    st(5)
  403bec:	rcr    DWORD PTR [eax+ebp*4-0x72],1
  403bf0:	mov    cl,0xce
  403bf2:	stos   DWORD PTR es:[edi],eax
  403bf3:	int3   
  403bf4:	in     eax,0xc5
  403bf6:	enter  0x813,0x15
  403bfa:	push   es
  403bfb:	sbb    ebp,ebx
  403bfd:	rol    DWORD PTR [ebx-0x19],1
  403c00:	popa   
  403c01:	pmullw mm4,QWORD PTR [ebp-0x4f76d41c]
  403c08:	pop    ds
  403c09:	sub    al,0xd3
  403c0b:	fdivr  DWORD PTR [eax]
  403c0d:	ret    
  403c0e:	xor    al,0xc8
  403c10:	mov    edi,0x8b8d39a9
  403c15:	scas   al,BYTE PTR es:[edi]
  403c16:	out    dx,al
  403c17:	out    0x10,al
  403c19:	and    dh,BYTE PTR [ebp+eiz*2+0x11a1bca3]
  403c20:	(bad)  
  403c21:	fidivr WORD PTR [edx+0x28416f11]
  403c27:	aaa    
  403c28:	nop
  403c29:	sbb    BYTE PTR [ebx+eiz*1],0xd
  403c2d:	lea    edx,[eax+0x1ecf8826]
  403c33:	inc    ecx
  403c34:	push   cs
  403c35:	jmp    0x403c96
  403c37:	mov    bp,0xef06
  403c3b:	setns  BYTE PTR [ebx-0x621350cb]
  403c42:	or     edi,edi
  403c44:	mov    esi,0x8dbf3461
  403c49:	lea    esp,[edx+0x4a1c58a]
  403c4f:	je     0x403cc9
  403c51:	repz ret 
  403c53:	lea    ebx,[ebx+0xc]
  403c56:	lea    ebp,[edi-0x6a]
  403c59:	jb     0x403c64
  403c5b:	jmp    0x403c4e
  403c5d:	pop    edi
  403c5e:	imul   ecx,edx,0xffffffc3
  403c61:	cmova  edx,esi
  403c64:	adc    al,0x2d
  403c66:	mov    ah,0x59
  403c68:	sbb    ch,BYTE PTR [ebx+0x7ebffa01]
  403c6e:	and    al,0x6e
  403c70:	es loopne 0x403c00
  403c73:	jnp    0x403c3f
  403c75:	mov    DWORD PTR [edx],ebx
  403c77:	lds    ebp,FWORD PTR [edi]
  403c79:	xor    ecx,0xad6181b9
  403c7f:	imul   esp,DWORD PTR [edi-0x68],0xffffffb9
  403c83:	cmp    al,0xd5
  403c85:	cmp    dh,ch
  403c87:	jns    0x403ce0
  403c89:	mov    esi,0xc8f5d91
  403c8e:	(bad)  
  403c8f:	push   ecx
  403c90:	mov    ds:0x94c07994,eax
  403c95:	(bad)  
  403c97:	xor    bh,BYTE PTR [ebp-0x94dde9b]
  403c9d:	cmp    al,0x57
  403c9f:	dec    dl
  403ca1:	adc    DWORD PTR [edi],ebx
  403ca3:	inc    esi
  403ca5:	push   0x31
  403ca7:	repz ds call 0x2bf3:0x4fd167f3
  403cb0:	inc    edx
  403cb1:	lock rcl DWORD PTR [edx+0x50],cl
  403cb5:	aam    0x4e
  403cb7:	sub    dh,BYTE PTR [ecx+0x1a]
  403cba:	jb     0x403d0a
  403cbc:	adc    eax,0x1789848e
  403cc1:	out    dx,eax
  403cc2:	jmp    0x74e4:0xcb92db45
  403cc9:	xchg   edx,eax
  403cca:	sar    DWORD PTR [eax+0x30],0x13
  403cce:	sub    cl,BYTE PTR [edx+0x79]
  403cd1:	and    eax,0x57652c14
  403cd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cd7:	hlt    
  403cd8:	out    0x53,eax
  403cda:	imul   edi,DWORD PTR [ebx+ecx*4+0x61],0x5422347
  403ce2:	out    dx,eax
  403ce3:	sub    eax,0x220f971
  403ce8:	jg     0x403cfc
  403cea:	push   cs
  403ceb:	xchg   ecx,eax
  403cec:	jb     0x403d33
  403cee:	adc    eax,0xaf9bfc4f
  403cf3:	ins    DWORD PTR es:[edi],dx
  403cf4:	mov    ah,0x1
  403cf6:	dec    esp
  403cf7:	jb     0x403cea
  403cf9:	stos   DWORD PTR es:[edi],eax
  403cfa:	scas   al,BYTE PTR es:[edi]
  403cfb:	jmp    0x205:0xee8b04b5
  403d02:	push   ebp
  403d03:	jmp    0x37a0:0x9d79c333
  403d0a:	bound  edi,QWORD PTR [edx-0x2fa3783d]
  403d10:	std    
  403d11:	pop    ecx
  403d12:	cmc    
  403d13:	inc    ebx
  403d14:	push   ds
  403d15:	push   ss
  403d16:	inc    eax
  403d17:	jl     0x403c9a
  403d19:	jo     0x403d51
  403d1b:	jg     0x403cab
  403d1d:	or     DWORD PTR [edi-0x7b1f77bc],edi
  403d23:	int3   
  403d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d25:	mov    bh,0xb0
  403d27:	xchg   edi,eax
  403d28:	xor    ch,ch
  403d2a:	jl     0x403cf5
  403d2c:	pop    ss
  403d2d:	inc    esi
  403d2e:	(bad)  
  403d2f:	out    dx,eax
  403d30:	test   eax,0x4bdc8aab
  403d35:	dec    esi
  403d36:	cmc    
  403d37:	in     eax,0xdd
  403d39:	out    0x9d,al
  403d3b:	sub    DWORD PTR [eax+0x194d9eed],ecx
  403d41:	push   esp
  403d42:	out    0xa8,eax
  403d44:	je     0x403cd6
  403d46:	pop    esp
  403d47:	mov    dl,0xe5
  403d49:	add    al,BYTE PTR [edi-0x14]
  403d4c:	jg     0x403cd9
  403d4e:	cmc    
  403d4f:	mov    DWORD PTR [ecx+0x4c],ebx
  403d52:	pop    ds
  403d53:	ret    
  403d54:	hlt    
  403d55:	adc    dl,BYTE PTR [esi]
  403d57:	es pop ebx
  403d59:	jp     0x403d93
  403d5b:	pop    ecx
  403d5c:	mov    ds:0x13b7a0b3,al
  403d61:	loopne 0x403d13
  403d63:	cld    
  403d64:	mov    esi,0xe23f08a
  403d69:	stos   BYTE PTR es:[edi],al
  403d6a:	cmp    BYTE PTR [esi-0x60],0x19
  403d6e:	jo     0x403da3
  403d70:	(bad)  
  403d71:	fdivr  st(2),st
  403d73:	cmc    
  403d74:	call   0x8354bca1
  403d79:	adc    DWORD PTR [eax],edi
  403d7b:	mov    al,0x6d
  403d7d:	mov    bl,0x30
  403d7f:	ret    0x8700
  403d82:	cwde   
  403d83:	retf   
  403d84:	pop    eax
  403d85:	mov    esi,0x897c7565
  403d8a:	ficomp WORD PTR [ebx+eax*8+0x6e]
  403d8e:	or     ebx,eax
  403d90:	inc    DWORD PTR [eax]
  403d92:	stc    
  403d93:	inc    ebp
  403d94:	inc    edx
  403d95:	fwait
  403d96:	lods   al,BYTE PTR ds:[esi]
  403d97:	inc    edi
  403d98:	mov    bh,0x15
  403d9a:	jp     0x403d6d
  403d9c:	jl     0x403deb
  403d9e:	jge    0x403dfc
  403da0:	inc    ecx
  403da1:	and    edi,DWORD PTR [edi+0x3bc4863a]
  403da7:	push   cs
  403da8:	inc    eax
  403da9:	pop    ds
  403daa:	dec    esp
  403dab:	xchg   ebx,eax
  403dac:	push   eax
  403dad:	xor    ebp,DWORD PTR [ebx]
  403daf:	push   eax
  403db0:	and    al,0xfd
  403db2:	xchg   ecx,eax
  403db3:	dec    esi
  403db4:	mov    al,ds:0x5d5937b5
  403db9:	aad    0x45
  403dbb:	neg    esi
  403dbd:	jp     0x403ddd
  403dbf:	sbb    DWORD PTR [edx+edi*2-0x1d],edi
  403dc3:	or     DWORD PTR [edx-0x2ca45571],esp
  403dc9:	out    dx,al
  403dca:	out    dx,al
  403dcb:	mov    ds:0x9c0118c3,al
  403dd0:	pop    eax
  403dd1:	push   edx
  403dd2:	cdq    
  403dd3:	mov    edi,0xa99e81ac
  403dd8:	jns    0x403d8c
  403dda:	fisub  DWORD PTR [ecx+eax*4+0x476381b5]
  403de1:	add    BYTE PTR [eax-0x20],ch
  403de4:	add    eax,0xdc5d4567
  403de9:	jge    0x403dae
  403deb:	pop    ebp
  403dec:	push   edx
  403ded:	push   ax
  403def:	dec    esi
  403df0:	cmp    DWORD PTR gs:[edx+0x5410de0a],0x31
  403df8:	daa    
  403df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dfa:	rol    BYTE PTR [eax-0x782216aa],0x35
  403e01:	cmp    eax,0xa30e45c4
  403e06:	sub    esi,DWORD PTR [edi+0x76b727df]
  403e0c:	xlat   BYTE PTR ds:[ebx]
  403e0d:	shl    BYTE PTR [eax+0x55abbf46],cl
  403e13:	loop   0x403dac
  403e15:	sbb    BYTE PTR [edi-0x51],ah
  403e18:	lods   eax,DWORD PTR ds:[esi]
  403e19:	cwde   
  403e1a:	jb     0x403da9
  403e1c:	inc    ebp
  403e1d:	adc    eax,0x68f7ffe
  403e22:	iret   
  403e23:	mov    edx,0x780a42cc
  403e28:	dec    eax
  403e29:	and    al,BYTE PTR [ecx]
  403e2b:	(bad)  
  403e2c:	std    
  403e2d:	outs   dx,BYTE PTR ds:[esi]
  403e2e:	mov    ebx,0x603465ab
  403e33:	mov    edx,0x3a69b53f
  403e38:	mov    edi,0xb43ac253
  403e3d:	lock imul eax,DWORD PTR [ebx-0x2707b57c],0xf85559e5
  403e48:	jmp    0x724d:0x3a909e43
  403e4f:	bound  ebx,QWORD PTR [eax]
  403e51:	xor    dh,ah
  403e53:	bound  ecx,QWORD PTR [edi-0x41]
  403e56:	daa    
  403e57:	(bad)  
  403e58:	rol    ebp,cl
  403e5a:	adc    eax,0x85c5e08c
  403e5f:	enter  0xd839,0x85
  403e63:	inc    esp
  403e64:	jae    0x403e2e
  403e66:	mov    ebp,DWORD PTR [edx-0x48]
  403e69:	adc    bh,BYTE PTR [esi+0x15d01d86]
  403e6f:	dec    ebp
  403e70:	imul   eax,ebp,0xffffffc1
  403e73:	ret    0xf7e4
  403e76:	popf   
  403e77:	stc    
  403e78:	pusha  
  403e79:	test   al,0xcb
  403e7b:	jbe    0x403ef6
  403e7d:	push   0x37
  403e7f:	loope  0x403e37
  403e81:	xor    ah,BYTE PTR [ebx-0x49db2244]
  403e87:	push   ebp
  403e88:	pop    eax
  403e89:	push   es
  403e8a:	sub    cl,BYTE PTR [edx-0x5fbc640b]
  403e90:	inc    edi
  403e91:	aad    0x33
  403e93:	fimul  DWORD PTR [esi]
  403e95:	or     esi,0x16bddbaa
  403e9b:	jbe    0x403ed4
  403e9d:	jl     0x403eab
  403e9f:	xchg   edi,edi
  403ea1:	test   eax,0xb44b5760
  403ea6:	or     eax,0xa30b9f17
  403eab:	mov    dl,0x6f
  403ead:	cld    
  403eae:	stc    
  403eaf:	mov    al,0xe1
  403eb1:	inc    ecx
  403eb2:	loope  0x403f1d
  403eb4:	sub    DWORD PTR [ecx+eax*4],esi
  403eb7:	jp     0x403efb
  403eb9:	mov    edx,0xc85d5e91
  403ebe:	in     al,0x5d
  403ec0:	iret   
  403ec1:	dec    esp
  403ec2:	stc    
  403ec3:	out    0x94,al
  403ec5:	lock or ebx,0xffffffba
  403ec9:	out    0xfa,eax
  403ecb:	push   esi
  403ecc:	cmp    ch,BYTE PTR [ebp+0x5a]
  403ecf:	std    
  403ed0:	push   esi
  403ed1:	adc    dl,BYTE PTR [edi+0x1a]
  403ed4:	fucomi st,st(7)
  403ed6:	loope  0x403f06
  403ed8:	sbb    al,0xb1
  403eda:	adc    BYTE PTR [eax-0x21],dh
  403edd:	mov    al,ds:0x9b92013f
  403ee2:	mov    esi,DWORD PTR [ebx]
  403ee4:	in     eax,dx
  403ee5:	daa    
  403ee6:	fs dec esi
  403ee8:	xor    edi,DWORD PTR [esi-0x32]
  403eeb:	push   ds
  403eec:	fsub   DWORD PTR ds:[edx]
  403eef:	and    DWORD PTR [edx-0x4180e492],edi
  403ef5:	mov    al,ds:0xde42ecca
  403efb:	les    esp,FWORD PTR [ebx+0x7b]
  403efe:	jno    0x403ed1
  403f00:	jb     0x403f0b
  403f02:	mov    ds:0x17a877e8,al
  403f07:	scas   al,BYTE PTR es:[edi]
  403f08:	into   
  403f09:	aaa    
  403f0a:	mov    eax,0xd4fb3fdb
  403f0f:	fldcw  WORD PTR gs:[esp+eax*1-0x68876837]
  403f17:	or     eax,0x6dd67365
  403f1c:	icebp  
  403f1d:	xor    DWORD PTR [eax+0x594c72fb],edi
  403f23:	lahf   
  403f24:	adc    BYTE PTR [edi],dl
  403f26:	ins    DWORD PTR es:[edi],dx
  403f27:	xor    BYTE PTR [ecx],bh
  403f29:	mov    ecx,0x8973d498
  403f2e:	stos   BYTE PTR es:[edi],al
  403f2f:	pop    eax
  403f30:	mov    eax,0x5b528a04
  403f35:	xor    eax,0xf61270f2
  403f3a:	pop    eax
  403f3b:	repz mov cl,0x8
  403f3e:	js     0x403ef5
  403f40:	dec    edi
  403f41:	out    0xeb,al
  403f43:	dec    eax
  403f44:	mov    bh,0x4b
  403f46:	jns    0x403f29
  403f48:	mov    esp,0x790ba3a9
  403f4d:	push   ss
  403f4e:	dec    esi
  403f4f:	sbb    DWORD PTR [esi+edx*8-0x4b],eax
  403f53:	jnp    0x403ee1
  403f55:	fidivr DWORD PTR [edx]
  403f57:	add    al,0x4c
  403f59:	mov    dl,al
  403f5b:	pop    ds
  403f5c:	or     DWORD PTR [ebx],esp
  403f5e:	scas   al,BYTE PTR es:[edi]
  403f5f:	ret    0x2af6
  403f62:	in     eax,0x58
  403f64:	int    0xa8
  403f66:	dec    esp
  403f67:	cs and eax,0xa28cfd62
  403f6d:	jecxz  0x403fa5
  403f6f:	mov    dh,0xb1
  403f71:	test   DWORD PTR [esi+ecx*8],0x684c6534
  403f78:	mov    edi,DWORD PTR [edx-0x7b23df23]
  403f7e:	or     al,0xe
  403f80:	lods   al,BYTE PTR ds:[esi]
  403f81:	dec    ebx
  403f82:	mov    dh,0x45
  403f84:	hlt    
  403f85:	into   
  403f86:	mov    WORD PTR [edx-0x42c0b1e6],fs
  403f8c:	in     al,0x15
  403f8e:	pop    eax
  403f8f:	loopne 0x403f80
  403f91:	sbb    dh,BYTE PTR [edi+0x653cdde5]
  403f97:	lods   al,BYTE PTR ds:[esi]
  403f98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f99:	push   ds
  403f9a:	pusha  
  403f9b:	call   0x1ceb:0xd74328c
  403fa2:	out    0x92,eax
  403fa4:	sbb    DWORD PTR [eax+0x23496c59],esi
  403faa:	retf   0x9c77
  403fad:	bound  esi,QWORD PTR [ecx-0xa976be4]
  403fb3:	gs cs in al,0x4
  403fb7:	repnz shl bl,cl
  403fba:	dec    ebp
  403fbb:	cli    
  403fbc:	ffree  st(3)
  403fbe:	dec    edi
  403fbf:	jg     0x403f50
  403fc1:	rcr    DWORD PTR [ecx+0x0],1
  403fc4:	dec    ecx
  403fc5:	pop    edx
  403fc6:	mov    dl,0x6d
  403fc8:	lea    edi,[edi+0x50c5700d]
  403fce:	ss sahf 
  403fd0:	sbb    DWORD PTR [edx+0x6],edi
  403fd3:	dec    edi
  403fd4:	repnz (bad) 
  403fd6:	repz fs xor al,0xc
  403fda:	pop    ss
  403fdb:	test   al,0x84
  403fdd:	lock pop edi
  403fdf:	js     0x404012
  403fe1:	push   esp
  403fe2:	and    DWORD PTR [esi-0x2e],ebp
  403fe5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fe6:	xlat   BYTE PTR ds:[ebx]
  403fe7:	mov    cl,0x86
  403fe9:	dec    edx
  403fea:	or     edi,DWORD PTR ds:0x955daf34
  403ff0:	sbb    DWORD PTR [esi],edx
  403ff2:	arpl   WORD PTR [ecx-0x435e106],ax
  403ff8:	mov    DWORD PTR [eax],esp
  403ffa:	gs xor dl,bl
  403ffd:	(bad)  
  403ffe:	mov    bl,0xae
  404000:	jg     0x403f86
  404002:	stos   DWORD PTR es:[edi],eax
  404003:	pop    ebx
  404004:	ja     0x404042
  404006:	cmp    DWORD PTR [edx-0x14266ecf],ecx
  40400c:	mov    BYTE PTR [ecx+0x7e],bh
  40400f:	and    al,0x67
  404011:	sti    
  404012:	dec    edi
  404013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404014:	mov    al,ds:0x54d3a0fe
  404019:	sub    cl,BYTE PTR [ecx]
  40401b:	sub    DWORD PTR [eax+0x37],eax
  40401e:	(bad)  
  40401f:	sub    dh,BYTE PTR [eax+0x48]
  404022:	ins    DWORD PTR es:[edi],dx
  404023:	xor    BYTE PTR [edx],dh
  404025:	inc    edx
  404026:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404027:	xchg   edi,eax
  404028:	loopne 0x404072
  40402a:	fnstsw WORD PTR [esi]
  40402c:	xchg   ebp,eax
  40402d:	xchg   BYTE PTR [ecx-0x45],ah
  404030:	aaa    
  404031:	inc    eax
  404032:	test   eax,0x1ed7aac5
  404037:	loop   0x40401b
  404039:	jnp    0x404080
  40403b:	data16 xor dl,BYTE PTR [eax+0x39e47d6b]
  404042:	jl     0x404002
  404044:	nop
  404045:	mov    eax,0x77335108
  40404a:	enter  0xa27f,0xbb
  40404e:	sub    eax,0xa318ee31
  404053:	in     eax,0x2f
  404055:	cmc    
  404056:	shr    BYTE PTR [ecx],cl
  404058:	jo     0x404023
  40405a:	call   0xb96d:0xc54205b7
  404061:	aas    
  404062:	(bad)
  404065:	std    
  404066:	loopne 0x40407d
  404068:	dec    ecx
  404069:	xor    al,0xb4
  40406b:	push   0x84d20f6e
  404070:	push   0xffffffd2
  404072:	sbb    DWORD PTR [esi+edx*1-0x2b4f34c2],edi
  404079:	ss mov dh,0x90
  40407c:	(bad)  
  40407d:	adc    al,BYTE PTR [eax+0x36]
  404080:	lahf   
  404081:	add    eax,0x9151129d
  404086:	pop    ebx
  404087:	(bad)  
  404089:	mov    dh,0xb0
  40408b:	nop    DWORD PTR [edx-0x38]
  40408f:	icebp  
  404090:	ficom  WORD PTR [edi+0x2a]
  404093:	loope  0x404034
  404095:	jge    0x4040a4
  404097:	es mov bh,0xd8
  40409a:	and    al,0xb2
  40409c:	xchg   ebx,eax
  40409d:	add    DWORD PTR [ebp-0x4c],ecx
  4040a0:	xor    eax,esp
  4040a2:	push   esi
  4040a3:	out    dx,eax
  4040a4:	xor    esp,DWORD PTR [ebx+0x7c7ddcd9]
  4040aa:	out    dx,al
  4040ab:	cmc    
  4040ac:	test   eax,0x915af960
  4040b1:	and    DWORD PTR [ebp-0x5652e596],esi
  4040b7:	pop    ss
  4040b8:	dec    edi
  4040b9:	arpl   WORD PTR ds:0xe023ef07,bp
  4040bf:	jecxz  0x4040d8
  4040c1:	fcomip st,st(7)
  4040c3:	jmp    0xdf5f19d8
  4040c8:	dec    ecx
  4040c9:	je     0x40410a
  4040cb:	repnz xchg ebp,eax
  4040cd:	outs   dx,DWORD PTR ds:[esi]
  4040ce:	(bad)  
  4040cf:	retf   
  4040d0:	jl     0x4040d0
  4040d2:	mov    al,ds:0xec68726e
  4040d7:	loopne 0x404120
  4040d9:	add    ecx,ecx
  4040db:	xlat   BYTE PTR ds:[ebx]
  4040dc:	xchg   esp,eax
  4040dd:	jbe    0x404092
  4040df:	sub    esi,DWORD PTR [ebx-0x45]
  4040e2:	scas   al,BYTE PTR es:[edi]
  4040e3:	mov    al,ds:0x3bbe1853
  4040e8:	mov    al,0xdd
  4040ea:	into   
  4040eb:	mov    edi,0x3b6ed025
  4040f0:	dec    eax
  4040f1:	cmp    al,0x81
  4040f3:	add    al,0xeb
  4040f5:	push   0xfffffffb
  4040f7:	dec    ebp
  4040f8:	inc    ecx
  4040f9:	dec    edi
  4040fa:	lock add DWORD PTR [edx],esi
  4040fd:	jo     0x4040f2
  4040ff:	loopne 0x4040de
  404101:	arpl   sp,bx
  404103:	ret    0x4c85
  404106:	loopne 0x40412c
  404108:	push   cs
  404109:	pop    edi
  40410a:	dec    esi
  40410b:	or     DWORD PTR [esi+0x498835c0],0xc6ca3bf4
  404115:	(bad)  
  404116:	push   esp
  404117:	mov    ecx,0x12b3d541
  40411c:	jbe    0x4040a7
  40411e:	js     0x404163
  404120:	test   eax,0x7348705f
  404125:	xchg   ecx,eax
  404126:	imul   esp,DWORD PTR [eax],0x3a
  404129:	pop    esp
  40412a:	ds xor esi,edi
  40412d:	scas   eax,DWORD PTR es:[edi]
  40412e:	outs   dx,BYTE PTR ds:[esi]
  40412f:	xor    bx,0xffe6
  404133:	cdq    
  404134:	das    
  404135:	retf   
  404136:	out    0x9f,al
  404138:	cdq    
  404139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40413a:	gs stos DWORD PTR es:[edi],eax
  40413c:	jae    0x4041bc
  40413e:	(bad)
  404142:	shr    al,0x61
  404145:	add    dl,cl
  404147:	inc    esi
  404148:	mov    dl,0x8a
  40414a:	into   
  40414b:	imul   esi,DWORD PTR cs:[edx+0x1567d7a6],0x70
  404153:	fimul  DWORD PTR [ebx]
  404155:	rcl    BYTE PTR es:[eax-0x38798e71],0x11
  40415d:	mov    BYTE PTR [ebp-0x5986299c],bh
  404163:	mov    dh,0xbb
  404165:	inc    edi
  404166:	mov    BYTE PTR [eax-0x5e],0xb1
  40416a:	and    cl,dl
  40416c:	dec    ebp
  40416d:	pop    edx
  40416e:	clc    
  40416f:	in     al,0xf8
  404171:	or     al,0x67
  404173:	or     eax,DWORD PTR cs:[esi-0x30]
  404177:	fisttp DWORD PTR [edx+edi*1-0x5d]
  40417b:	gs mov bh,0x65
  40417e:	add    al,0x53
  404180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404181:	into   
  404182:	or     DWORD PTR [edi-0x3c023cac],0x17
  404189:	loop   0x404127
  40418b:	xchg   ecx,eax
  40418c:	mov    WORD PTR [esi+0x46c82033],ss
  404192:	jecxz  0x404208
  404194:	shl    eax,cl
  404196:	and    esi,DWORD PTR [esi+0x1f]
  404199:	xchg   edi,eax
  40419a:	sub    ebx,edx
  40419c:	mov    ecx,ebx
  40419e:	inc    edi
  40419f:	loop   0x404121
  4041a1:	xor    eax,0x9268267a
  4041a6:	add    dh,0x23
  4041a9:	and    al,0xb2
  4041ab:	jb     0x4041b6
  4041ad:	ins    DWORD PTR es:[edi],dx
  4041ae:	lea    eax,[ecx]
  4041b0:	pop    eax
  4041b1:	mov    edx,0xc2bc438e
  4041b6:	lock jmp 0x404186
  4041b9:	sbb    BYTE PTR [eax+ebx*4],0x5b
  4041bd:	or     BYTE PTR [edx],dh
  4041bf:	mov    ?,WORD PTR [esi]
  4041c1:	stc    
  4041c2:	mov    bh,0xc2
  4041c4:	jne    0x40420e
  4041c6:	out    dx,al
  4041c7:	imul   eax,DWORD PTR [eax-0x663baa4e],0xffffffbd
  4041ce:	adc    al,0x66
  4041d0:	sbb    bh,bl
  4041d2:	je     0x4041f5
  4041d4:	sbb    eax,0xa7e78e44
  4041d9:	add    cl,BYTE PTR ds:0xe4017a7f
  4041df:	push   es
  4041e0:	dec    ebx
  4041e1:	in     eax,dx
  4041e2:	aam    0x79
  4041e4:	es xchg ecx,edi
  4041e7:	mov    dl,0x28
  4041e9:	mov    cl,0x63
  4041eb:	outs   dx,DWORD PTR ds:[esi]
  4041ec:	daa    
  4041ed:	dec    edx
  4041ee:	xor    eax,DWORD PTR [edx]
  4041f0:	repz dec eax
  4041f2:	in     al,0x1c
  4041f4:	retf   0xc195
  4041f7:	leave  
  4041f8:	jno    0x4041a5
  4041fa:	aad    0x7a
  4041fc:	sbb    al,0x2d
  4041fe:	(bad)  
  404201:	xchg   edx,eax
  404202:	(bad)  
  404203:	xlat   BYTE PTR ds:[ebx]
  404204:	jnp    0x40423e
  404206:	fwait
  404207:	sbb    DWORD PTR [ebp-0x28],ebp
  40420a:	(bad)  
  40420b:	repz rcr dh,0x31
  40420f:	sub    dl,al
  404211:	mov    WORD PTR [edi+0x5],es
  404214:	addr16 int3 
  404216:	stos   DWORD PTR es:[edi],eax
  404217:	cmp    ebx,DWORD PTR [eax]
  404219:	inc    ecx
  40421a:	xor    bl,cl
  40421c:	ror    esi,cl
  40421e:	jmp    0x4041da
  404220:	popa   
  404221:	mov    dl,0x6
  404223:	fild   DWORD PTR [ebp-0x37cb0158]
  404229:	fdiv   DWORD PTR [edx-0x2]
  40422c:	and    eax,0x5bd8e741
  404231:	mov    WORD PTR [edi-0x51],cs
  404234:	or     eax,0xa1864b09
  404239:	retf   0xd467
  40423c:	cmp    al,0xa5
  40423e:	jae    0x404249
  404240:	mov    ebp,0x61f8e1ff
  404245:	xlat   BYTE PTR ds:[ebx]
  404246:	icebp  
  404247:	nop
  404248:	out    dx,eax
  404249:	sbb    esi,DWORD PTR [ebx-0x2cc7c846]
  40424f:	pop    ebx
  404250:	fsub   DWORD PTR [eax-0x6d]
  404253:	stos   DWORD PTR es:[edi],eax
  404254:	sbb    eax,DWORD PTR [edx+0x1c]
  404257:	and    al,0x86
  404259:	or     DWORD PTR [esi-0x27],eax
  40425c:	mov    WORD PTR ds:0xf7cb3d09,ds
  404262:	add    eax,ebx
  404264:	jmp    DWORD PTR [esi+0x2b]
  404267:	(bad)  
  404269:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40426a:	div    DWORD PTR cs:[ebx]
  40426d:	or     BYTE PTR [ebp-0x13],bl
  404270:	daa    
  404271:	jno    0x40421d
  404273:	sbb    bl,dl
  404275:	cld    
  404276:	pminub mm0,QWORD PTR [ecx]
  404279:	sbb    cl,BYTE PTR [ecx+0x1d]
  40427c:	cmp    dl,ch
  40427e:	cmp    al,0xa8
  404280:	xchg   esi,eax
  404281:	mov    bl,0xcd
  404283:	jnp    0x404264
  404285:	scas   eax,DWORD PTR es:[edi]
  404286:	push   ds
  404287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404288:	imul   eax,DWORD PTR [eax-0x27],0xffffff8b
  40428c:	cmp    DWORD PTR [ecx+0x51],ecx
  40428f:	mov    dh,0x3
  404291:	daa    
  404292:	and    DWORD PTR [eax-0x36ac342b],ebx
  404298:	inc    esp
  404299:	add    esp,esi
  40429b:	jge    0x40426b
  40429d:	pusha  
  40429e:	cmp    cl,ch
  4042a0:	nop
  4042a1:	stc    
  4042a2:	sti    
  4042a3:	inc    ebx
  4042a4:	aam    0xed
  4042a6:	scas   al,BYTE PTR es:[edi]
  4042a7:	sub    al,BYTE PTR [ecx]
  4042a9:	ds jle 0x404294
  4042ac:	xor    dl,BYTE PTR [ecx]
  4042ae:	adc    edi,DWORD PTR [edi+0x5ca6a980]
  4042b4:	add    al,0xd3
  4042b6:	mov    eax,DWORD PTR [ebx]
  4042b8:	ror    BYTE PTR [eax+0x0],1
  4042bb:	mov    esi,0x49e9c5cc
  4042c0:	jge    0x404245
  4042c2:	sub    dl,ah
  4042c4:	sbb    bl,BYTE PTR [eax]
  4042c6:	cmp    DWORD PTR ds:0x5f8af3ae,edx
  4042cc:	sahf   
  4042cd:	lea    edi,[edx+0x34a0993]
  4042d3:	and    ebx,DWORD PTR [edx-0x60]
  4042d6:	xor    bl,BYTE PTR [eax]
  4042d8:	fild   DWORD PTR [edi+0x38]
  4042db:	frstor [edi]
  4042dd:	ret    0x5a11
  4042e0:	ret    0x8fbd
  4042e3:	mov    ds:0xb9461e89,eax
  4042e8:	cmp    cl,BYTE PTR [esi]
  4042ea:	xchg   ecx,eax
  4042eb:	ins    DWORD PTR es:[edi],dx
  4042ec:	pop    es
  4042ed:	mov    DWORD PTR [eax+0x665ebf8f],edx
  4042f3:	(bad)  
  4042f4:	pextrw edi,(bad),0xc5
  4042f6:	mul    BYTE PTR ds:[esi]
  4042f9:	pushf  
  4042fa:	scas   eax,DWORD PTR es:[edi]
  4042fb:	ins    BYTE PTR es:[edi],dx
  4042fc:	inc    edx
  4042fd:	or     al,0xe0
  4042ff:	xchg   edi,eax
  404300:	or     ebx,DWORD PTR [edx-0x3c]
  404303:	jne    0x404329
  404305:	push   0xf
  404307:	xchg   esp,eax
  404308:	aaa    
  404309:	sbb    al,0xd7
  40430b:	popa   
  40430c:	mov    ah,0x8e
  40430e:	je     0x4042dc
  404310:	mov    ecx,0xc9416626
  404315:	fisttp WORD PTR [ebx+0x3e]
  404318:	call   0xc781:0xe286ea02
  40431f:	mov    ds:0xfb05b66b,eax
  404324:	scas   eax,DWORD PTR es:[edi]
  404325:	xchg   ebp,eax
  404326:	and    edi,DWORD PTR [esi-0x6dbf899a]
  40432c:	mov    ebx,0xadc1deb7
  404331:	int3   
  404332:	leave  
  404333:	jbe    0x40430d
  404335:	or     dl,bh
  404337:	fisttp WORD PTR [edi+0x19]
  40433a:	dec    esi
  40433b:	inc    bx
  40433d:	xchg   edi,eax
  40433e:	mov    ah,0x8d
  404340:	cmp    eax,0x33ca76f9
  404345:	loop   0x4043bf
  404347:	test   bh,bl
  404349:	jmp    0x4043a4
  40434b:	mov    ebp,DWORD PTR [ebx+0x2b]
  40434e:	dec    DWORD PTR [edx-0x77b31268]
  404354:	jb     0x40436b
  404356:	push   cs
  404357:	xor    esi,DWORD PTR [ebp+0x3c]
  40435a:	sbb    BYTE PTR [eax],al
  40435c:	or     bl,bl
  40435e:	retf   0xbea9
  404361:	vmulsd xmm6,xmm7,QWORD PTR [ecx+0x6a333422]
  404369:	sub    cl,BYTE PTR [edx+0x5d7bd3f6]
  40436f:	push   ss
  404370:	(bad)  
  404371:	call   0x9da49aab
  404376:	mov    eax,ss:0xc9169a5d
  40437c:	xor    BYTE PTR [eax],ah
  40437e:	pop    ss
  40437f:	mov    eax,es:0xa69258b6
  404385:	es stos DWORD PTR es:[edi],eax
  404387:	test   DWORD PTR [esi],eax
  404389:	loopne 0x404347
  40438b:	xor    BYTE PTR [edx-0x6d],al
  40438e:	es stos DWORD PTR es:[edi],eax
  404390:	call   0x71104cd
  404395:	push   esi
  404396:	xor    BYTE PTR fs:[eax+0x1c],dl
  40439a:	loopne 0x40438e
  40439c:	sbb    eax,0x2eee6647
  4043a1:	js     0x40433a
  4043a3:	mov    bh,0xfc
  4043a5:	inc    ebx
  4043a6:	shl    DWORD PTR [eax],cl
  4043a8:	push   ss
  4043a9:	mov    bh,0x74
  4043ab:	jp     0x4043e7
  4043ad:	jp     0x4043bb
  4043af:	push   cs
  4043b0:	jmp    0x5a19:0x679813c4
  4043b7:	loope  0x4043f6
  4043b9:	out    0xc9,eax
  4043bb:	lahf   
  4043bc:	cmc    
  4043bd:	in     al,0xd2
  4043bf:	jae    0x4043be
  4043c1:	pop    edx
  4043c2:	mov    ch,0x97
  4043c4:	sub    BYTE PTR [eax+0xc55b50a],dl
  4043ca:	mov    esi,0xc94049a2
  4043cf:	mov    al,0xc2
  4043d1:	or     al,0x50
  4043d3:	and    al,ch
  4043d5:	sahf   
  4043d6:	fucomi st,st(7)
  4043d8:	add    BYTE PTR [esi],0x77
  4043db:	js     0x404389
  4043dd:	sbb    eax,0x4e10422a
  4043e2:	out    0xc8,eax
  4043e4:	fwait
  4043e5:	retf   0x1c5d
  4043e8:	fwait
  4043e9:	xor    ch,ch
  4043eb:	and    BYTE PTR [ebp+0x4d],0x8f
  4043ef:	inc    ebp
  4043f0:	cmp    ebp,DWORD PTR [edi]
  4043f2:	inc    esi
  4043f3:	outs   dx,DWORD PTR ds:[esi]
  4043f4:	nop
  4043f5:	test   cl,cl
  4043f7:	loopne 0x4043c8
  4043f9:	xor    cl,BYTE PTR [ecx+0x30595639]
  4043ff:	dec    ah
  404401:	dec    esi
  404402:	in     al,dx
  404403:	std    
  404404:	and    DWORD PTR [edi+eiz*8+0x4b],0xffffffd6
  404409:	pop    edi
  40440a:	ret    0x1f09
  40440d:	cli    
  40440e:	mov    ah,0xad
  404410:	retf   0x9390
  404413:	or     DWORD PTR [ebx],edi
  404415:	jmp    0x404464
  404417:	loop   0x404482
  404419:	add    al,0x25
  40441b:	xor    ebp,edx
  40441d:	adc    bl,0x3d
  404420:	out    dx,eax
  404421:	loop   0x404468
  404423:	inc    edi
  404424:	or     eax,0x58b8d0db
  404429:	adc    esi,DWORD PTR [ebx]
  40442b:	xor    eax,DWORD PTR [edx-0x67]
  40442e:	(bad)  
  40442f:	stc    
  404430:	cmp    al,0x38
  404432:	and    ecx,eax
  404434:	push   DWORD PTR [esi+esi*2+0x4d]
  404438:	or     BYTE PTR [edi+0x49],dh
  40443b:	mov    dl,0x26
  40443d:	cdq    
  40443e:	imul   edx,DWORD PTR [esi+edi*8],0x711dbc6f
  404445:	pop    ebp
  404446:	aas    
  404447:	stos   BYTE PTR es:[edi],al
  404448:	js     0x40447d
  40444a:	dec    edi
  40444b:	fnstcw WORD PTR [ebp+0x736c1217]
  404451:	sub    ebp,DWORD PTR [esi]
  404453:	inc    ecx
  404454:	mov    edx,0xd21e6de6
  404459:	jnp    0x4043e2
  40445b:	mov    dh,0x3e
  40445d:	cdq    
  40445e:	xor    DWORD PTR [edx+0x38f1f12b],esp
  404464:	push   ss
  404465:	jge    0x40445b
  404467:	fidiv  WORD PTR [edi+0x5d]
  40446a:	jnp    0x4043f4
  40446c:	pop    ecx
  40446d:	push   ebx
  40446e:	lahf   
  40446f:	cmp    BYTE PTR [ebx-0x41],cl
  404472:	iret   
  404473:	mov    ch,0xe2
  404475:	ss mov ch,0xf6
  404478:	inc    esi
  404479:	fistp  QWORD PTR [eax]
  40447b:	jae    0x40442a
  40447d:	fisttp DWORD PTR [esi-0x59]
  404480:	into   
  404481:	jnp    0x4044d8
  404483:	pushf  
  404484:	and    al,0x85
  404486:	cmp    al,0x96
  404488:	ins    DWORD PTR es:[edi],dx
  404489:	cmp    dh,BYTE PTR [ecx-0x672bcb56]
  40448f:	mov    esp,0xc97a7e63
  404494:	mov    edi,0x7931b3fc
  404499:	sbb    BYTE PTR [ecx+0x57],ah
  40449c:	outs   dx,BYTE PTR ds:[esi]
  40449d:	(bad)  
  40449f:	xchg   ecx,eax
  4044a0:	dec    ecx
  4044a1:	sub    ebp,edi
  4044a3:	and    BYTE PTR [edx*1-0x1eda2dff],ch
  4044aa:	sahf   
  4044ab:	rcr    WORD PTR [esi-0x36],0xc0
  4044b0:	dec    eax
  4044b1:	ret    0xa63f
  4044b4:	dec    edi
  4044b5:	push   ebx
  4044b6:	and    bh,dh
  4044b8:	add    BYTE PTR [ebx],ah
  4044ba:	pop    ebp
  4044bb:	movsx  edx,WORD PTR [eax-0x43]
  4044bf:	add    dh,BYTE PTR [edx]
  4044c1:	retf   0xd962
  4044c4:	fucomp st(5)
  4044c6:	mov    ebx,0xecfdb857
  4044cb:	nop
  4044cc:	ins    BYTE PTR es:[edi],dx
  4044cd:	(bad)
  4044d0:	cdq    
  4044d1:	idiv   DWORD PTR [ecx+ecx*4-0x1fa5f48]
  4044d8:	sbb    eax,0x808b335
  4044dd:	dec    edi
  4044de:	inc    esp
  4044df:	jbe    0x404557
  4044e1:	sbb    eax,0x384c1a1c
  4044e6:	pop    edx
  4044e7:	mov    eax,0xbb3ce9f0
  4044ec:	fdivr  QWORD PTR [eax+0x60]
  4044ef:	adc    DWORD PTR [esi],ebp
  4044f1:	stos   DWORD PTR es:[edi],eax
  4044f2:	adc    dl,bl
  4044f4:	mov    gs,WORD PTR [edx+0x2ac4fc6b]
  4044fa:	dec    ebx
  4044fb:	clc    
  4044fc:	pop    ss
  4044fd:	loop   0x404488
  4044ff:	mov    dh,0xf3
  404501:	push   cs
  404502:	fstp   DWORD PTR [ebx-0x74]
  404505:	iret   
  404506:	mov    ecx,0x2a4b94ce
  40450b:	nop
  40450c:	adc    ebx,0xfffffffc
  40450f:	jecxz  0x40451a
  404511:	fcomp  st(2)
  404513:	push   esi
  404514:	xchg   ecx,eax
  404515:	dec    ebp
  404516:	dec    eax
  404517:	inc    ebx
  404518:	inc    ebx
  404519:	adc    eax,0x103a7956
  40451e:	cdq    
  40451f:	bound  ebp,QWORD PTR [ecx+0x20]
  404522:	cmc    
  404523:	inc    edx
  404524:	lahf   
  404525:	sub    ecx,DWORD PTR [ecx-0x3e68c71a]
  40452b:	test   eax,0x764c085
  404530:	inc    edx
  404531:	out    0xc3,eax
  404533:	adc    eax,0x8eb6d5a
  404538:	xchg   edi,eax
  404539:	lods   al,BYTE PTR ds:[esi]
  40453a:	xchg   esi,eax
  40453b:	add    BYTE PTR [edi+eiz*8+0x4f],0x5b
  404540:	sahf   
  404541:	xchg   edi,eax
  404542:	inc    edi
  404543:	loope  0x404525
  404545:	xlat   BYTE PTR ds:[ebx]
  404546:	rcr    DWORD PTR [esp+eax*1],0x98
  40454a:	xlat   BYTE PTR ds:[ebx]
  40454b:	mov    dl,0x1f
  40454d:	ds mov cl,0x84
  404550:	hlt    
  404551:	pusha  
  404552:	add    bl,0x94
  404555:	fld    TBYTE PTR [eax-0x4a]
  404558:	sbb    eax,0x2cd30456
  40455d:	pop    esi
  40455e:	cdq    
  40455f:	push   eax
  404560:	retf   0x6e97
  404563:	test   BYTE PTR [ebp-0x7faf590e],ch
  404569:	sysexit 
  40456b:	push   cs
  40456c:	div    DWORD PTR [edi]
  40456e:	nop
  40456f:	jmp    0x764adace
  404574:	loop   0x40452d
  404576:	jae    0x4045f7
  404578:	lock rol edx,1
  40457b:	es pushf 
  40457d:	or     DWORD PTR [ebp+0x18f596db],esi
  404583:	mov    cl,0xcd
  404585:	arpl   WORD PTR [edi+0x7d],cx
  404588:	clc    
  404589:	add    eax,0x4239d739
  40458e:	jecxz  0x40455b
  404590:	jmp    0x62e9e245
  404595:	dec    eax
  404596:	add    al,0x79
  404598:	adc    BYTE PTR [eax+0x6e],ah
  40459b:	xchg   edi,eax
  40459c:	jmp    0xce56a639
  4045a1:	jl     0x40460c
  4045a3:	rol    DWORD PTR [esi-0x31],1
  4045a6:	ror    DWORD PTR [ecx],0xb0
  4045a9:	add    ebp,DWORD PTR [ecx+0x7cb20064]
  4045af:	pusha  
  4045b0:	inc    ebx
  4045b1:	or     eax,0x6925663b
  4045b6:	(bad)  
  4045b7:	add    esi,0x33
  4045ba:	xor    edi,ebp
  4045bc:	cwde   
  4045bd:	test   DWORD PTR [eax-0x1dd62ac8],ebx
  4045c3:	test   al,0x8d
  4045c5:	dec    edx
  4045c6:	js     0x404633
  4045c8:	mov    ss,edi
  4045ca:	sub    DWORD PTR [ebx-0x3827d2c0],ebx
  4045d0:	jne    0x4045eb
  4045d2:	add    ecx,eax
  4045d4:	xchg   ebx,eax
  4045d5:	in     eax,0x81
  4045d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045d8:	dec    edi
  4045d9:	lods   eax,DWORD PTR ds:[esi]
  4045da:	or     edi,DWORD PTR [esi-0x7b]
  4045dd:	mov    eax,0x64bac8ce
  4045e2:	ins    BYTE PTR es:[edi],dx
  4045e3:	in     eax,dx
  4045e4:	xor    ecx,DWORD PTR [esi+0x1a]
  4045e7:	popf   
  4045e8:	mov    ebx,0xeab20404
  4045ed:	inc    ebx
  4045ee:	xchg   edx,eax
  4045ef:	push   cs
  4045f0:	iret   
  4045f1:	jmp    0xf3339785
  4045f6:	dec    edi
  4045f7:	mov    esp,DWORD PTR [ebx]
  4045f9:	jg     0x404600
  4045fb:	xor    DWORD PTR [esi+0x1070d3cc],edx
  404601:	nop
  404602:	sub    eax,0x4982a8e8
  404607:	jbe    0x404660
  404609:	jae    0x404600
  40460b:	xor    al,0xd0
  40460d:	nop
  40460e:	or     BYTE PTR [ebp+0x616bbbc9],bh
  404614:	jecxz  0x404657
  404616:	std    
  404617:	scas   al,BYTE PTR es:[edi]
  404618:	ss xchg edi,eax
  40461a:	arpl   WORD PTR [ecx-0xde2bf47],ax
  404620:	fild   DWORD PTR [edx-0x54c13d73]
  404626:	cmp    eax,0x321f8e00
  40462b:	or     BYTE PTR [eax+0x3],bl
  40462e:	sbb    cl,bh
  404630:	retf   0xa808
  404633:	jp     0x404647
  404635:	push   0xb3b3299d
  40463a:	retf   
  40463b:	mov    dl,0xa3
  40463d:	fstp   DWORD PTR [esp+ecx*1-0x683e0842]
  404644:	sti    
  404645:	xchg   ebp,eax
  404646:	cmp    eax,0xc6053c4f
  40464b:	adc    eax,0xda42192d
  404650:	mov    bl,0xef
  404652:	retf   
  404653:	repnz cmp al,0x75
  404656:	inc    eax
  404657:	jo     0x404690
  404659:	push   cs
  40465a:	pop    ss
  40465b:	sti    
  40465c:	add    BYTE PTR [ecx-0x1b89a12f],bh
  404662:	fimul  WORD PTR [ebp-0x32d573ea]
  404668:	shl    DWORD PTR [edi-0x606b4126],1
  40466e:	jge    0x40460a
  404670:	or     esp,eax
  404672:	and    eax,0x14b11d17
  404677:	xor    DWORD PTR [edx-0x26],eax
  40467a:	push   ecx
  40467b:	inc    eax
  40467c:	pop    ebx
  40467d:	mov    ch,0x15
  40467f:	or     dl,BYTE PTR [edx+0x3a]
  404682:	inc    edi
  404683:	pavgw  mm4,QWORD PTR [edx]
  404686:	fdiv   DWORD PTR [edx]
  404688:	int    0x97
  40468a:	in     eax,0x98
  40468c:	jae    0x404688
  40468e:	sbb    al,bh
  404690:	paddsb mm1,mm5
  404693:	mov    dh,0x9c
  404695:	idiv   cl
  404697:	sbb    al,BYTE PTR [edi-0xa]
  40469a:	adc    BYTE PTR [esi+0x4b],cl
  40469d:	sub    bh,dh
  40469f:	dec    ecx
  4046a0:	aaa    
  4046a1:	sbb    DWORD PTR [esi-0x59],edx
  4046a4:	(bad)  
  4046a5:	push   ebx
  4046a6:	(bad)  [ecx+0x67e64094]
  4046ac:	lds    ebp,FWORD PTR [edx+0x2ddc036]
  4046b2:	pop    edx
  4046b3:	xchg   edi,eax
  4046b4:	jmp    0xc14a48de
  4046b9:	pop    ss
  4046ba:	ds ss shr bl,1
  4046be:	and    BYTE PTR [edi-0x23],dl
  4046c1:	fs dec ebx
  4046c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046c4:	lods   eax,DWORD PTR ds:[esi]
  4046c5:	and    ch,ch
  4046c7:	mov    esi,DWORD PTR [ecx+edx*1]
  4046ca:	push   eax
  4046cb:	aaa    
  4046cc:	out    0xaa,al
  4046ce:	xchg   edi,eax
  4046cf:	push   ebp
  4046d0:	lds    eax,FWORD PTR cs:[ebp+0x57350162]
  4046d7:	(bad)  
  4046d8:	jmp    0x4046e3
  4046da:	retf   
  4046db:	pop    ds
  4046dc:	and    eax,0xffcf54a9
  4046e1:	cmp    al,0xdc
  4046e3:	push   edi
  4046e4:	dec    ebx
  4046e5:	jo     0x404713
  4046e7:	fist   WORD PTR [ebx]
  4046e9:	jbe    0x404720
  4046eb:	(bad)  
  4046ec:	loope  0x40469a
  4046ee:	xor    ch,BYTE PTR [eax+0x4c]
  4046f1:	enter  0xb3be,0xf6
  4046f5:	sar    ah,1
  4046f7:	jnp    0x40472e
  4046f9:	push   es
  4046fa:	stc    
  4046fb:	jl     0x4046c2
  4046fd:	outs   dx,BYTE PTR ds:[esi]
  4046fe:	inc    esi
  4046ff:	fidiv  WORD PTR [esi-0x6d2df88e]
  404705:	fnstcw WORD PTR [edx]
  404707:	mov    al,ds:0xbe7aedaf
  40470c:	pop    esp
  40470d:	les    edi,FWORD PTR [edi+0x2d]
  404710:	(bad)  
  404712:	mov    dl,BYTE PTR [edi]
  404714:	mov    al,ds:0xedd7095f
  404719:	sbb    al,0x63
  40471b:	sub    BYTE PTR [esp+eax*8],al
  40471e:	lods   al,BYTE PTR ds:[esi]
  40471f:	rcr    BYTE PTR [ecx+0x751f3d23],0x80
  404726:	push   esi
  404727:	not    BYTE PTR [ebp-0x61]
  40472a:	cmp    dh,0x44
  40472d:	xor    al,0x11
  40472f:	retf   0xfa0
  404732:	std    
  404733:	xchg   edi,eax
  404734:	jmp    0x404744
  404736:	sub    bl,BYTE PTR [edx+0x46]
  404739:	sub    al,ah
  40473b:	inc    eax
  40473c:	xchg   DWORD PTR [eax+ebp*8+0x7d8c16eb],esp
  404743:	retf   0x7997
  404746:	jle    0x40474d
  404748:	inc    eax
  404749:	jge    0x404737
  40474b:	aam    0x4a
  40474d:	jo     0x4047a8
  40474f:	adc    al,0x49
  404751:	fcomp  QWORD PTR [edi+eax*8]
  404754:	and    eax,0xf839dbd9
  404759:	add    ch,BYTE PTR [edi+ebp*8+0x4c688742]
  404760:	dec    ecx
  404761:	push   ss
  404762:	push   ebx
  404763:	sbb    eax,0x47a2e412
  404768:	lea    ebp,[esi+0x799c5265]
  40476e:	jp     0x404742
  404770:	ror    DWORD PTR [edi+ebx*4+0x51],0x30
  404775:	xor    al,0x0
  404777:	pop    edx
  404778:	test   BYTE PTR fs:[ebx+0x4e52b8],0xbb
  404780:	test   edx,ebp
  404782:	repnz loope 0x404750
  404785:	mov    al,0x68
  404787:	icebp  
  404788:	push   ebx
  404789:	mov    ah,BYTE PTR [edi-0x2e40569d]
  40478f:	aaa    
  404790:	or     al,0x1f
  404792:	cmc    
  404793:	icebp  
  404794:	and    BYTE PTR [ebp+0x46],ah
  404797:	hlt    
  404798:	sbb    DWORD PTR [eax-0x2b],edx
  40479b:	sub    edx,edi
  40479d:	jno    0x4047a0
  40479f:	mov    al,0xe8
  4047a1:	es das 
  4047a3:	xchg   edx,eax
  4047a4:	adc    eax,0xef6b212e
  4047a9:	dec    edx
  4047aa:	adc    al,BYTE PTR [edx+0x15]
  4047ad:	cmp    bh,bl
  4047af:	cmp    DWORD PTR [esi-0x26b972df],ecx
  4047b5:	dec    eax
  4047b6:	int    0xf2
  4047b8:	mov    bh,0x59
  4047ba:	pop    esi
  4047bb:	jne    0x404785
  4047bd:	cdq    
  4047be:	sbb    ah,BYTE PTR [ebx]
  4047c0:	retf   0x36f7
  4047c3:	fs dec ebx
  4047c5:	push   ecx
  4047c6:	scas   eax,DWORD PTR es:[edi]
  4047c7:	bound  ecx,QWORD PTR [ecx+0xaef47b1]
  4047cd:	fcomi  st,st(2)
  4047cf:	adc    BYTE PTR [edx],0x1c
  4047d2:	leave  
  4047d3:	out    0x66,al
  4047d5:	xchg   esi,eax
  4047d6:	in     eax,dx
  4047d7:	and    DWORD PTR [eax+0x4fcd9212],ebx
  4047dd:	cmp    edx,DWORD PTR [ebx-0x49d3033f]
  4047e3:	dec    edx
  4047e4:	cmp    BYTE PTR [ebx-0x1e],bh
  4047e7:	fbstp  TBYTE PTR [eax+0x4b7dfd56]
  4047ed:	ss dec eax
  4047ef:	hlt    
  4047f0:	jno    0x404787
  4047f2:	mov    al,0x26
  4047f4:	push   eax
  4047f5:	inc    esp
  4047f6:	pop    ecx
  4047f7:	das    
  4047f8:	std    
  4047f9:	adc    eax,DWORD PTR [ecx+0x4026197b]
  4047ff:	popa   
  404800:	and    DWORD PTR [edi-0x15],ecx
  404803:	popa   
  404804:	inc    ebx
  404805:	ja     0x40478c
  404807:	lahf   
  404808:	pusha  
  404809:	scas   al,BYTE PTR es:[edi]
  40480a:	jg     0x404845
  40480c:	add    eax,0x114a6a29
  404811:	mov    esp,eax
  404813:	or     al,0x4f
  404815:	jp     0x40484b
  404817:	(bad)  
  404818:	fst    QWORD PTR [edx+0x6e]
  40481b:	ins    BYTE PTR es:[edi],dx
  40481c:	mov    ebp,0x77cbc779
  404821:	int3   
  404822:	fld    QWORD PTR [esi]
  404824:	adc    eax,0x9ff1b474
  404829:	(bad)  
  40482a:	cmc    
  40482b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40482c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40482d:	sbb    bh,BYTE PTR [edi]
  40482f:	popf   
  404830:	es mov eax,0x132c0854
  404836:	mov    bl,0x4f
  404838:	in     al,dx
  404839:	imul   ebp,ebx,0x2a63fa05
  40483f:	fld    TBYTE PTR [eax+0x214e7aa4]
  404845:	inc    esi
  404846:	test   eax,0x57498aa9
  40484b:	mov    edx,0xd5c66cd9
  404850:	jg     0x404849
  404852:	mov    al,0xb7
  404854:	mov    al,0x21
  404856:	nop
  404857:	pop    esp
  404858:	cmp    al,0x22
  40485a:	imul   edi,ecx,0x5a0d334c
  404860:	icebp  
  404861:	jno    0x4047f8
  404863:	test   al,0x7
  404865:	imul   edi,DWORD PTR [edx+esi*2],0x3df5d147
  40486c:	inc    ebx
  40486d:	popa   
  40486e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40486f:	(bad)  
  404870:	cmp    bh,dh
  404872:	mov    al,ds:0x866b6032
  404877:	jno    0x40487b
  404879:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40487a:	dec    edx
  40487b:	inc    esp
  40487c:	sub    BYTE PTR [eax*2+0x50988582],dh
  404883:	cwde   
  404884:	loopne 0x4048b6
  404886:	fwait
  404887:	jmp    0x404827
  404889:	sbb    al,0xc3
  40488b:	out    0xa1,al
  40488d:	loop   0x4048c2
  40488f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404890:	add    BYTE PTR [edx],ch
  404892:	jns    0x4048b1
  404894:	sbb    eax,0x638b0aa9
  404899:	push   es
  40489a:	push   cs
  40489b:	pop    edi
  40489c:	push   ebx
  40489d:	imul   DWORD PTR [esi+0x2f]
  4048a0:	inc    edi
  4048a1:	cmp    edx,ebx
  4048a3:	outs   dx,BYTE PTR ds:[esi]
  4048a4:	(bad)  
  4048a5:	mov    al,ds:0x50d901fb
  4048aa:	sbb    al,0x50
  4048ac:	cdq    
  4048ad:	shr    ch,1
  4048af:	ss add al,0xa4
  4048b2:	sub    bl,ch
  4048b4:	fbld   TBYTE PTR [ecx+0x2913f370]
  4048ba:	in     al,0x5d
  4048bc:	data16 (bad) 
  4048be:	and    eax,0x8276fa64
  4048c3:	and    BYTE PTR ds:0x80f391fb,0xac
  4048ca:	test   DWORD PTR [ebx],esp
  4048cc:	call   0x8d07e8ab
  4048d1:	xchg   edx,eax
  4048d2:	adc    al,0xa0
  4048d4:	bound  ecx,QWORD PTR [eax]
  4048d6:	sbb    al,0x58
  4048d8:	mov    al,0xef
  4048da:	lds    esi,FWORD PTR [edi-0x42889332]
  4048e0:	ret    
  4048e1:	dec    edi
  4048e2:	mov    bh,0x90
  4048e4:	or     eax,0x507c5740
  4048e9:	xor    cl,0x3d
  4048ec:	xchg   edi,eax
  4048ed:	xchg   ebp,eax
  4048ee:	inc    esi
  4048ef:	inc    esi
  4048f0:	xlat   BYTE PTR ds:[ebx]
  4048f1:	sahf   
  4048f2:	or     DWORD PTR [ebx+0x16],esi
  4048f5:	mov    esi,0x215c217
  4048fa:	pop    esp
  4048fb:	nop
  4048fc:	mov    ebx,0x45f60547
  404901:	and    eax,0xcce3dfc2
  404907:	mov    ebp,0x78ffa095
  40490c:	pop    esi
  40490d:	shl    BYTE PTR [ebp-0x4a207da0],cl
  404913:	cmc    
  404914:	out    dx,eax
  404915:	dec    esp
  404916:	retf   
  404917:	aam    0xa4
  404919:	nop
  40491a:	add    BYTE PTR [ebx],bh
  40491c:	aas    
  40491d:	xor    BYTE PTR [eax],al
  40491f:	mov    DWORD PTR [ecx-0x37618ba9],edx
  404925:	outs   dx,DWORD PTR ds:[esi]
  404926:	inc    ebp
  404927:	or     dl,0x3e
  40492a:	xchg   ebx,eax
  40492b:	adc    eax,0x43a66607
  404930:	mov    ss,WORD PTR [esp+eax*4+0x34e0d60]
  404937:	inc    eax
  404938:	or     BYTE PTR [ecx+0x2b4a8388],ch
  40493e:	retf   
  40493f:	sbb    al,0x8a
  404941:	mov    ecx,0xffde8a75
  404946:	popa   
  404947:	loop   0x4049c0
  404949:	push   eax
  40494a:	push   ebx
  40494b:	jbe    0x4049bb
  40494d:	dec    ecx
  40494e:	scas   eax,DWORD PTR es:[edi]
  40494f:	fcmove st,st(2)
  404952:	jo     0x4048d9
  404954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404955:	(bad)  
  404956:	mov    ebx,DWORD PTR ds:0xe3f02388
  40495c:	jg     0x4049d0
  40495e:	fiadd  DWORD PTR [edi-0x2f390128]
  404964:	or     al,0x66
  404966:	and    al,0x8d
  404968:	cmp    dl,ch
  40496a:	inc    edx
  40496b:	sub    al,BYTE PTR [esi]
  40496d:	in     al,dx
  40496e:	push   0xd52c6481
  404973:	pop    esi
  404974:	adc    BYTE PTR [ecx+0x4d846c4f],ah
  40497a:	jns    0x404931
  40497c:	mov    dl,0xed
  40497e:	nop
  40497f:	scas   eax,DWORD PTR es:[edi]
  404980:	idiv   bh
  404982:	call   0x1732ebbb
  404987:	int    0x22
  404989:	adc    eax,DWORD PTR [ebx+0x1e]
  40498c:	pusha  
  40498d:	addr16 sbb al,0x3a
  404990:	outs   dx,BYTE PTR ds:[esi]
  404991:	fdiv   QWORD PTR [edi+ebx*4+0x312afedf]
  404998:	xor    dh,al
  40499a:	cmp    eax,0xc5cd6ab9
  40499f:	pushf  
  4049a0:	adc    DWORD PTR [ecx+ebx*1+0x7a202354],0xd812421f
  4049ab:	push   cs
  4049ac:	rol    BYTE PTR [esi-0x43],0xcc
  4049b0:	xor    BYTE PTR [edi-0x3],ah
  4049b3:	iret   
  4049b4:	fdivr  DWORD PTR [esi]
  4049b6:	out    0x3e,al
  4049b8:	jmp    0x60cdc351
  4049bd:	inc    ecx
  4049be:	(bad)  
  4049bf:	(bad)  
  4049c0:	into   
  4049c1:	jo     0x404967
  4049c3:	pop    ecx
  4049c4:	sub    DWORD PTR [eax+0x10],ecx
  4049c7:	xchg   edx,eax
  4049c8:	sub    BYTE PTR [edx+edx*2+0x6663c966],cl
  4049cf:	stc    
  4049d0:	mov    dh,0x3
  4049d2:	cli    
  4049d3:	sbb    eax,0x503f7a15
  4049d8:	fimul  DWORD PTR ds:[edi+0x1b]
  4049dc:	dec    esi
  4049dd:	(bad)  
  4049de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049df:	(bad)  
  4049e0:	sbb    ecx,ecx
  4049e2:	push   ecx
  4049e3:	xchg   ebp,eax
  4049e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049e5:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e7:	mov    esp,0xbc31142a
  4049ec:	enter  0xd11e,0x28
  4049f0:	mov    cl,0x50
  4049f2:	sub    BYTE PTR [edx+0x36],cl
  4049f5:	fisub  WORD PTR [ecx]
  4049f7:	xor    bl,BYTE PTR [eax]
  4049f9:	sub    eax,0xa2b96cab
  4049fe:	cmp    dh,BYTE PTR [esi-0x55]
  404a01:	mov    al,ds:0x6af4c9a9
  404a06:	(bad)  
  404a07:	pop    ecx
  404a08:	adc    ebp,DWORD PTR [ebx-0x1c]
  404a0b:	xchg   ecx,eax
  404a0c:	xchg   BYTE PTR [edi],ch
  404a0e:	(bad)  
  404a0f:	imul   DWORD PTR [ecx+0x38]
  404a12:	pop    esp
  404a13:	dec    eax
  404a14:	mov    bl,0xb2
  404a16:	in     al,0x5f
  404a18:	jle    0x4049e9
  404a1a:	and    eax,ebp
  404a1c:	test   BYTE PTR [edi+ebx*2+0x28],al
  404a20:	cmp    eax,0xf75b951b
  404a25:	ror    DWORD PTR ss:[ecx+ebx*4+0x65],1
  404a2a:	xchg   ebp,eax
  404a2b:	mov    gs,WORD PTR [ebp+0x4e]
  404a2e:	push   esi
  404a2f:	jb     0x404ab0
  404a31:	fisubr DWORD PTR [esi]
  404a33:	div    edi
  404a35:	in     eax,dx
  404a36:	out    0x17,eax
  404a38:	into   
  404a39:	mov    al,ds:0x32d70240
  404a3e:	mov    ds:0x4d1b4ce0,al
  404a43:	loope  0x404aa4
  404a45:	jg     0x404aac
  404a47:	lds    edi,FWORD PTR [esi-0x16]
  404a4a:	cmp    BYTE PTR [ebp-0x3b],0xde
  404a4e:	xchg   ecx,eax
  404a4f:	(bad)  
  404a50:	mov    al,0x22
  404a52:	mov    al,ds:0xf25eb50e
  404a57:	aad    0x85
  404a59:	cmp    eax,0x39ff4341
  404a5e:	aam    0xbe
  404a60:	mov    esi,0x3648c42b
  404a65:	ja     0x404adc
  404a67:	mov    ebp,0x930b4db9
  404a6c:	cmp    BYTE PTR [edx-0x1a7534f],al
  404a72:	cmp    dl,dh
  404a74:	rol    BYTE PTR [ebp-0x56],cl
  404a77:	ja     0x404aee
  404a79:	and    ch,BYTE PTR [ebx-0x49]
  404a7c:	mov    ebp,0x135a72e9
  404a81:	ja     0x404a37
  404a83:	sbb    bh,ah
  404a85:	push   es
  404a86:	test   DWORD PTR [eax],eax
  404a88:	sub    eax,0x562cc32d
  404a8d:	sub    DWORD PTR [esi+0x5d34ca62],esi
  404a93:	shl    DWORD PTR [esp+ebx*2],1
  404a96:	stos   DWORD PTR es:[edi],eax
  404a97:	dec    edi
  404a98:	lea    eax,[ecx-0x7101f3d0]
  404a9e:	fisub  DWORD PTR [eax]
  404aa0:	lods   eax,DWORD PTR ds:[esi]
  404aa1:	lods   eax,DWORD PTR ds:[esi]
  404aa2:	push   ebp
  404aa3:	imul   ebp,DWORD PTR ds:[edi-0x275f2374],0x1b
  404aab:	fcomp  DWORD PTR [esp+ebp*2-0x4d]
  404aaf:	cmp    ebp,DWORD PTR [edi]
  404ab1:	sub    ecx,DWORD PTR [esi]
  404ab3:	lock jmp 0x79aea541
  404ab9:	pushf  
  404aba:	stos   BYTE PTR es:[edi],al
  404abb:	test   eax,0xc41d0b37
  404ac0:	(bad)  
  404ac1:	adc    al,0xf5
  404ac3:	adc    eax,0x835b95f9
  404ac8:	rcr    BYTE PTR [ecx+eiz*2],0xa1
  404acc:	sbb    cl,BYTE PTR [ecx-0x5cc4671f]
  404ad2:	enter  0x8b7f,0x54
  404ad6:	test   eax,0x2db8f6da
  404adb:	dec    esi
  404adc:	pop    ebp
  404add:	adc    bh,BYTE PTR [ecx+0x5c]
  404ae0:	cmc    
  404ae1:	push   es
  404ae2:	sbb    DWORD PTR ds:0xfa0a5e82,esi
  404ae8:	loope  0x404b68
  404aea:	add    al,0x56
  404aec:	xchg   DWORD PTR [ebx+0x41],ebx
  404aef:	sbb    cl,ch
  404af1:	ror    BYTE PTR [esi-0x4c75b3ac],cl
  404af7:	add    eax,0x780ed765
  404afc:	lods   eax,DWORD PTR ds:[esi]
  404afd:	mov    eax,0x72a4ade9
  404b02:	fiadd  DWORD PTR [ecx+0x496660e6]
  404b08:	push   0xb2902986
  404b0d:	add    DWORD PTR [ecx-0x6d69be46],0xffffff92
  404b14:	and    DWORD PTR ds:0xe7f4f867,ecx
  404b1a:	bnd jbe 0x404ab4
  404b1d:	xchg   ecx,eax
  404b1e:	sbb    eax,0x10b339d0
  404b23:	inc    eax
  404b24:	adc    dl,BYTE PTR [ebx]
  404b26:	std    
  404b27:	sub    ax,0x4f1
  404b2b:	or     eax,0x3d29cc6a
  404b30:	push   edx
  404b31:	je     0x404ae3
  404b33:	xor    eax,0x38
  404b36:	out    dx,eax
  404b37:	mov    ecx,0xb9e1fc7e
  404b3c:	(bad)  
  404b3d:	int    0x15
  404b3f:	or     eax,0xdd2b5534
  404b44:	adc    eax,0x64b32fd7
  404b49:	dec    eax
  404b4a:	(bad)  
  404b4b:	jmp    0xea3a4594
  404b50:	inc    esp
  404b51:	adc    BYTE PTR [ebx-0x4a46a74d],0x33
  404b58:	and    eax,DWORD PTR [ebp-0x4d235538]
  404b5e:	mov    bh,0x69
  404b60:	aam    0xec
  404b62:	inc    ebx
  404b63:	mov    WORD PTR [esi+0x2f316d17],es
  404b69:	addr16 test edi,0x62613fb9
  404b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b71:	(bad)  
  404b73:	popa   
  404b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b75:	in     eax,dx
  404b76:	mov    DWORD PTR [ebx-0x4db9bfd0],ebx
  404b7c:	imul   eax,DWORD PTR [ebx],0xac7ff457
  404b82:	add    eax,0x5a3fce93
  404b87:	stos   DWORD PTR es:[edi],eax
  404b88:	ins    BYTE PTR es:[edi],dx
  404b89:	je     0x404b27
  404b8b:	(bad)  
  404b8c:	mov    ds:0x4e1bfa0,eax
  404b91:	aaa    
  404b92:	xchg   ebp,eax
  404b93:	inc    edx
  404b94:	xchg   esi,eax
  404b95:	and    DWORD PTR [ebx-0x68094415],edx
  404b9b:	sti    
  404b9c:	jns    0x404b3a
  404b9e:	xor    BYTE PTR [ebx],al
  404ba0:	int3   
  404ba1:	and    BYTE PTR [edx],dl
  404ba3:	mov    DWORD PTR [eax-0x22],ebx
  404ba6:	or     cl,bh
  404ba8:	jp     0x404b4b
  404baa:	in     al,dx
  404bab:	or     BYTE PTR [ebp-0x4b],bl
  404bae:	xlat   BYTE PTR ds:[ebx]
  404baf:	add    eax,0xa9892192
  404bb4:	dec    ebx
  404bb5:	push   ss
  404bb6:	xchg   ebx,eax
  404bb7:	push   esi
  404bb8:	and    BYTE PTR [ebx-0x32],0xcb
  404bbc:	sbb    al,0xcd
  404bbe:	loop   0x404b9c
  404bc0:	je     0x404be4
  404bc2:	fwait
  404bc3:	nop
  404bc4:	ret    
  404bc5:	ret    
  404bc6:	hlt    
  404bc7:	mov    cl,cl
  404bc9:	(bad)  
  404bca:	pop    ecx
  404bcb:	sub    edi,edx
  404bcd:	in     eax,dx
  404bce:	inc    ebp
  404bcf:	cmp    eax,0x1cc89abe
  404bd4:	test   BYTE PTR [ebx-0x2a],0x3c
  404bd8:	push   edx
  404bd9:	icebp  
  404bda:	adc    cl,BYTE PTR [ecx+eiz*1+0x6ec36599]
  404be1:	lahf   
  404be2:	dec    edi
  404be3:	scas   eax,DWORD PTR es:[edi]
  404be4:	lock out dx,eax
  404be6:	retf   0x5315
  404be9:	in     eax,dx
  404bea:	dec    esi
  404beb:	cdq    
  404bec:	dec    esp
  404bed:	aaa    
  404bee:	xchg   DWORD PTR [esi+0x1d],eax
  404bf1:	inc    ecx
  404bf2:	test   al,0x84
  404bf4:	imul   esi,ecx,0xca54aec6
  404bfa:	ss lods al,BYTE PTR ss:[esi]
  404bfd:	xchg   esi,eax
  404bfe:	mov    eax,0xc8d9cb1e
  404c03:	mov    bl,0xce
  404c05:	lds    ecx,FWORD PTR ds:0x4f2f56e9
  404c0b:	adc    cl,BYTE PTR [eax-0x43]
  404c0e:	out    0x7a,al
  404c10:	xchg   ecx,eax
  404c11:	shr    BYTE PTR [eax+ecx*2+0x4c],1
  404c15:	scas   al,BYTE PTR es:[edi]
  404c16:	add    al,0x62
  404c18:	pop    ecx
  404c19:	inc    ecx
  404c1a:	iret   
  404c1b:	and    DWORD PTR [edx],eax
  404c1d:	retf   0x44c9
  404c20:	cmp    DWORD PTR [ebx+0x7ad162b4],edx
  404c26:	cli    
  404c27:	aaa    
  404c28:	rcl    BYTE PTR ss:[ecx],1
  404c2b:	push   ss
  404c2c:	stc    
  404c2d:	adc    ch,BYTE PTR [esi-0x31e09983]
  404c33:	sahf   
  404c34:	mov    ds:0xd7c810a4,al
  404c39:	(bad)
  404c3c:	sbb    eax,0x547f24f5
  404c41:	push   ds
  404c42:	outs   dx,DWORD PTR ds:[esi]
  404c43:	shr    eax,cl
  404c45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c46:	jmp    0xe5f2ccfe
  404c4b:	and    al,0xa9
  404c4d:	jo     0x404bd9
  404c4f:	imul   edi,DWORD PTR [ebx],0x58daa397
  404c55:	outs   dx,BYTE PTR ds:[esi]
  404c56:	loope  0x404c1d
  404c58:	mov    al,0xe9
  404c5a:	shr    bh,0x86
  404c5d:	cmp    DWORD PTR [esi+eax*8-0x6072e5fd],edi
  404c64:	pushf  
  404c65:	loop   0x404c50
  404c67:	ror    ch,1
  404c69:	mov    ah,BYTE PTR [esp+ebx*8+0x4a77883a]
  404c70:	popa   
  404c71:	push   ds
  404c72:	retf   
  404c73:	xor    al,0xa6
  404c75:	aad    0x7b
  404c77:	and    dh,BYTE PTR [ebx+0x25]
  404c7a:	int    0xd
  404c7c:	shl    DWORD PTR [esi-0x56],cl
  404c7f:	mov    ah,0xbc
  404c81:	(bad)  
  404c82:	sbb    eax,0xd6a5b921
  404c87:	cmp    esp,DWORD PTR [edi+0x25]
  404c8a:	add    eax,0x4248a61f
  404c8f:	jns    0x404c46
  404c91:	jge    0x404cbd
  404c93:	jmp    0xaa98:0xf222515d
  404c9a:	mov    al,ds:0x94d29c62
  404c9f:	ror    BYTE PTR [esi+0x6c865fea],0xfe
  404ca6:	lods   eax,DWORD PTR ds:[esi]
  404ca7:	not    BYTE PTR [ebp-0x50230524]
  404cad:	mov    bh,0xb7
  404caf:	repz jge 0x404c33
  404cb2:	in     eax,0xbb
  404cb4:	dec    ebx
  404cb5:	(bad)  
  404cb6:	and    al,0xb5
  404cb8:	mov    bl,0x1e
  404cba:	add    DWORD PTR [ebp-0x78d0349c],0x8c556aaa
  404cc4:	out    dx,eax
  404cc5:	aas    
  404cc6:	cld    
  404cc7:	call   0xfe04d91d
  404ccc:	stos   WORD PTR es:[edi],ax
  404cce:	outs   dx,DWORD PTR ds:[esi]
  404ccf:	push   edi
  404cd0:	fldcw  WORD PTR [edx]
  404cd2:	or     edx,ebp
  404cd4:	jno    0x404d29
  404cd6:	lods   al,BYTE PTR cs:[si]
  404cd9:	jl     0x404cbe
  404cdb:	mov    edi,0x3520eec
  404ce0:	sbb    DWORD PTR [eax-0x232fdb29],0xffffffcd
  404ce7:	or     ebx,DWORD PTR [edx-0x6baad3b1]
  404ced:	add    eax,0x1c048e8d
  404cf2:	mov    edx,?
  404cf4:	xchg   edx,eax
  404cf5:	retf   0xfccb
  404cf8:	cdq    
  404cf9:	xchg   BYTE PTR [esi-0x5f],dl
  404cfc:	data16 mov al,ds:0x2796ae3a
  404d02:	pop    ecx
  404d03:	pop    ecx
  404d04:	lock leave 
  404d06:	arpl   WORD PTR ds:0x9828b4d3,cx
  404d0c:	call   0x4c27:0x24d5fcfe
  404d13:	fadd   st,st(5)
  404d15:	mov    edi,gs
  404d17:	adc    eax,0x5f69d7c4
  404d1c:	dec    esp
  404d1d:	inc    ecx
  404d1e:	push   esi
  404d1f:	push   eax
  404d20:	add    esi,edi
  404d22:	into   
  404d23:	sbb    bl,ah
  404d25:	(bad)  
  404d26:	mov    bl,0x4e
  404d28:	cdq    
  404d29:	mov    al,ds:0x76f6965a
  404d2e:	and    al,0x77
  404d30:	fwait
  404d31:	and    al,0x62
  404d33:	xlat   BYTE PTR ds:[ebx]
  404d34:	imul   BYTE PTR [ecx-0x2f66739c]
  404d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3b:	mov    dh,0x62
  404d3d:	mov    ds:0x3f5bf1a6,eax
  404d42:	js     0x404d82
  404d44:	cmp    esp,DWORD PTR [edx+0x19ce4c37]
  404d4a:	outs   dx,BYTE PTR ds:[esi]
  404d4b:	outs   dx,BYTE PTR ds:[esi]
  404d4c:	xchg   edx,eax
  404d4d:	enter  0x6ee7,0xf7
  404d51:	into   
  404d52:	sub    al,0xd2
  404d54:	or     esp,ecx
  404d56:	int    0x7d
  404d58:	mov    ebx,DWORD PTR [edi]
  404d5a:	into   
  404d5b:	push   cs
  404d5c:	sbb    ecx,ebx
  404d5e:	loopne 0x404d0b
  404d60:	xchg   ebp,eax
  404d61:	stc    
  404d62:	inc    ebp
  404d63:	les    esp,FWORD PTR [esi-0x1b]
  404d66:	pop    ecx
  404d67:	jmp    DWORD PTR [edi]
  404d69:	inc    edx
  404d6a:	js     0x404da4
  404d6c:	mov    ecx,0xff4d5f4c
  404d71:	xchg   ecx,eax
  404d72:	bound  edi,QWORD PTR [esi+0x77]
  404d75:	adc    cl,bl
  404d77:	cdq    
  404d78:	into   
  404d79:	test   DWORD PTR [ebp-0x50cd9bd1],ebp
  404d7f:	or     DWORD PTR ds:0xc71e67ca,eax
  404d85:	retf   0xe40f
  404d88:	ins    DWORD PTR es:[edi],dx
  404d89:	pop    es
  404d8a:	ds xor edx,ecx
  404d8d:	loopne 0x404e0a
  404d8f:	jp     0x404de8
  404d91:	sbb    DWORD PTR [edx+0x68],ebp
  404d94:	inc    ebp
  404d95:	sub    al,BYTE PTR [ecx+edi*1]
  404d98:	fimul  DWORD PTR [edx]
  404d9a:	mov    ah,0x4b
  404d9c:	mov    ch,0x98
  404d9e:	push   edi
  404d9f:	jle    0x404dd0
  404da1:	add    eax,0x43e6cc8d
  404da6:	cmp    eax,0x6ff8cd2f
  404dab:	rcr    DWORD PTR [ebx+edi*1-0x3c],0x8b
  404db0:	add    cl,BYTE PTR [eax+0x73bb8476]
  404db6:	mov    cl,0xd0
  404db8:	rcr    BYTE PTR [ecx],cl
  404dba:	mov    esp,0x79492ff8
  404dbf:	jmp    0xb02acaf8
  404dc4:	popa   
  404dc5:	xor    dl,BYTE PTR [ecx+0x45d4da8c]
  404dcb:	pop    eax
  404dcc:	inc    ebp
  404dcd:	stos   BYTE PTR es:[edi],al
  404dce:	ret    0x2ec0
  404dd1:	adc    eax,0x5f51bae9
  404dd6:	add    esi,edx
  404dd8:	inc    ebx
  404dd9:	repz or eax,0x88a13488
  404ddf:	arpl   WORD PTR [esi+0x22],si
  404de2:	jae    0x404e2d
  404de4:	pop    esp
  404de5:	mov    ecx,0x443103b6
  404dea:	fxch   st(4)
  404dec:	pop    ss
  404ded:	jb     0x404e1e
  404def:	loope  0x404e2d
  404df1:	out    dx,al
  404df2:	push   edx
  404df3:	dec    ebx
  404df4:	xor    BYTE PTR [edi],cl
  404df6:	adc    eax,0xc9d454dd
  404dfb:	es xchg ecx,eax
  404dfd:	(bad)  
  404dfe:	ret    0x47da
  404e01:	xor    cl,dl
  404e03:	xchg   edx,eax
  404e04:	inc    edx
  404e05:	(bad)  
  404e06:	aam    0xde
  404e08:	and    al,0x3d
  404e0a:	mov    ds:0x259f85d1,al
  404e0f:	cmc    
  404e10:	dec    esi
  404e11:	test   BYTE PTR [ecx+0x4617a713],0x75
  404e18:	jmp    0xd741aad0
  404e1d:	dec    esp
  404e1e:	adc    BYTE PTR [ecx],cl
  404e20:	fild   DWORD PTR [ebp+0x1c]
  404e23:	dec    eax
  404e24:	aas    
  404e25:	arpl   WORD PTR [ebx+eiz*1],dx
  404e28:	repz and al,BYTE PTR [edi]
  404e2b:	out    dx,eax
  404e2c:	inc    edx
  404e2d:	pop    edx
  404e2e:	lds    edx,FWORD PTR [edx]
  404e30:	scas   al,BYTE PTR es:[edi]
  404e31:	clc    
  404e32:	jmp    0x3f5a0ea7
  404e37:	cwde   
  404e38:	pop    ebx
  404e39:	(bad)  
  404e3a:	fsubr  QWORD PTR [edi]
  404e3c:	sub    ebp,DWORD PTR [ebx]
  404e3e:	dec    ecx
  404e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e40:	(bad)
  404e43:	outs   dx,DWORD PTR ds:[esi]
  404e44:	and    ebp,DWORD PTR [edi-0x275065c7]
  404e4a:	adc    al,0x6f
  404e4c:	arpl   WORD PTR [eax+0x49c8b592],ax
  404e52:	push   ds
  404e53:	push   0x15381491
  404e58:	adc    eax,0x7c228571
  404e5d:	sub    cl,ch
  404e5f:	(bad)  
  404e60:	ja     0x404e59
  404e62:	fdiv   DWORD PTR [edx-0x75260618]
  404e68:	into   
  404e69:	leave  
  404e6a:	jmp    0x404e77
  404e6c:	int    0x1f
  404e6e:	adc    eax,0x782d4b9
  404e73:	xor    ch,al
  404e75:	out    dx,al
  404e76:	cmp    edi,DWORD PTR [ebx]
  404e78:	lock lock xchg esi,eax
  404e7b:	jbe    0x404e98
  404e7d:	mov    cl,0x6b
  404e7f:	and    DWORD PTR [edi],esp
  404e81:	fstp   TBYTE PTR [edi]
  404e83:	xchg   BYTE PTR [ebx],cl
  404e85:	lea    ecx,[eax-0x5221bea5]
  404e8b:	scas   eax,DWORD PTR es:[edi]
  404e8c:	push   cs
  404e8d:	outs   dx,BYTE PTR ds:[esi]
  404e8e:	sbb    BYTE PTR [edi+eax*2],0xb0
  404e92:	out    0xf2,eax
  404e94:	arpl   WORD PTR [ecx-0x70],sp
  404e97:	mov    BYTE PTR [edx+0x1f],0x16
  404e9b:	cmp    eax,0xd116db5c
  404ea0:	mov    al,BYTE PTR [ecx+0x55efe62]
  404ea6:	int    0xfa
  404ea8:	push   esi
  404ea9:	sub    DWORD PTR [esi-0x4],ebp
  404eac:	push   esi
  404ead:	add    al,0x38
  404eaf:	lds    ebp,FWORD PTR [ecx]
  404eb1:	push   0xffffffe9
  404eb3:	or     DWORD PTR [esi-0x747f7263],ebp
  404eb9:	mov    bl,0x12
  404ebb:	clc    
  404ebc:	push   edi
  404ebd:	std    
  404ebe:	das    
  404ebf:	int    0x76
  404ec1:	dec    eax
  404ec2:	and    eax,0x34aee42e
  404ec7:	es jb  0x404f1d
  404eca:	scas   eax,DWORD PTR es:[edi]
  404ecb:	ins    BYTE PTR es:[edi],dx
  404ecc:	jmp    0xd5d6df69
  404ed1:	mov    esi,0x8aadbccf
  404ed6:	pop    ecx
  404ed7:	and    ch,ah
  404ed9:	lds    esp,FWORD PTR [edx-0x7f]
  404edc:	inc    esi
  404edd:	add    ah,BYTE PTR [ebp+edx*8-0x662ecc8]
  404ee4:	xchg   BYTE PTR [edx-0x212f3736],dh
  404eea:	call   0x3dac7518
  404eef:	test   BYTE PTR [ebx+0x13b7c923],0xf0
  404ef6:	outs   dx,BYTE PTR ds:[esi]
  404ef7:	cdq    
  404ef8:	mov    ecx,?
  404efa:	mov    BYTE PTR [eax-0x295cba91],0x3a
  404f01:	pushf  
  404f02:	jge    0x404f35
  404f04:	(bad)  
  404f05:	xchg   DWORD PTR [esp+ebx*1],ebp
  404f08:	daa    
  404f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f0a:	fisub  WORD PTR [ebx]
  404f0c:	and    DWORD PTR [eax+0xbc70ada],ebx
  404f12:	sub    al,0xc7
  404f14:	fdivp  st(1),st
  404f16:	xabort 0x1e
  404f19:	pop    edi
  404f1a:	mov    ds:0x36dd4fbf,al
  404f1f:	shl    BYTE PTR [edx+0x6d],0x38
  404f23:	jmp    0x1e5cfe7a
  404f28:	(bad)  
  404f29:	hlt    
  404f2a:	xlat   BYTE PTR ds:[ebx]
  404f2b:	(bad)  
  404f2c:	test   DWORD PTR [ecx+0x1d],edx
  404f2f:	xchg   BYTE PTR [esi+0x4484f60f],cl
  404f35:	sti    
  404f36:	fs repz iret 
  404f39:	mov    esp,0xcb676c8
  404f3e:	sbb    edi,DWORD PTR [ebx-0x1826e8d4]
  404f44:	add    DWORD PTR [ecx-0x7748d012],eax
  404f4a:	xchg   esp,eax
  404f4b:	jle    0x404eee
  404f4d:	je     0x404f7d
  404f4f:	xchg   ebp,eax
  404f50:	push   edx
  404f51:	mov    ch,0x4d
  404f53:	fs in  al,0x9
  404f56:	jge    0x404f4a
  404f58:	sub    BYTE PTR [eax-0x31],ah
  404f5b:	in     eax,dx
  404f5c:	and    edx,DWORD PTR [ecx]
  404f5e:	inc    ecx
  404f5f:	mov    ecx,0xcbd81bdc
  404f64:	sub    DWORD PTR [edi+0x33],eax
  404f67:	shr    ch,0xaf
  404f6a:	dec    ecx
  404f6b:	push   ecx
  404f6c:	jmp    0x40494a1b
  404f71:	fsubrp st(0),st
  404f73:	cli    
  404f74:	fs sbb BYTE PTR fs:[ecx+0x2fa1fea0],ch
  404f7c:	xor    DWORD PTR [edi+eiz*8+0x40ac1cc5],edx
  404f83:	dec    esp
  404f84:	das    
  404f85:	jg     0x404f93
  404f87:	jecxz  0x404f4f
  404f89:	add    eax,DWORD PTR [eax-0x5a]
  404f8c:	popa   
  404f8d:	pop    ecx
  404f8e:	sti    
  404f8f:	(bad)  
  404f90:	cmp    esi,eax
  404f92:	xchg   ebp,eax
  404f93:	jbe    0x405006
  404f95:	mov    al,ds:0x8d184308
  404f9a:	sbb    al,0x3a
  404f9c:	xchg   DWORD PTR [ebp+0x6f],edx
  404f9f:	sbb    DWORD PTR ds:0x88c60287,ebp
  404fa5:	or     DWORD PTR [edx+0x238dbe53],edx
  404fab:	mov    al,ds:0xff25f524
  404fb0:	and    BYTE PTR [edi+0x254214c],dh
  404fb6:	int3   
  404fb7:	lahf   
  404fb8:	dec    DWORD PTR [edx-0x56c0449b]
  404fbe:	xchg   esp,eax
  404fbf:	sbb    al,0x8d
  404fc1:	cdq    
  404fc2:	out    dx,eax
  404fc3:	ja     0x405043
  404fc5:	into   
  404fc6:	push   edx
  404fc7:	mov    bh,0xba
  404fc9:	int    0x40
  404fcb:	leave  
  404fcc:	push   eax
  404fcd:	xchg   DWORD PTR fs:[edi+eax*1],ecx
  404fd1:	call   DWORD PTR [eax+ebp*8]
  404fd4:	mov    ds:0x2d9cf7b7,al
  404fd9:	xchg   esi,eax
  404fda:	adc    esp,DWORD PTR [ebx+edi*4]
  404fdd:	sbb    ebx,0x661bba2a
  404fe3:	or     BYTE PTR [ecx],0x3d
  404fe6:	sbb    eax,0xe7d75c10
  404feb:	ror    DWORD PTR [edi-0x51],0x43
  404fef:	xor    DWORD PTR [edi+0x3a],eax
  404ff2:	cwde   
  404ff3:	(bad)  
  404ff4:	pushf  
  404ff5:	(bad)
  404ff9:	cld    
  404ffa:	(bad)  
  404ffb:	mov    eax,ds:0x4655dbaf
  405000:	inc    ecx
  405001:	aaa    
  405002:	in     eax,0x6c
  405004:	jle    0x404fc2
  405006:	mov    dh,0x33
  405008:	xchg   edi,eax
  405009:	or     cl,bl
  40500b:	stc    
  40500c:	in     al,0x47
  40500e:	xor    bl,BYTE PTR [esi]
  405010:	jmp    0xb01ea266
  405015:	push   es
  405016:	mov    ds:0x30e26cca,al
  40501b:	or     BYTE PTR ds:0xb624ec44,dh
  405021:	cmp    esi,DWORD PTR [ecx+0x6b]
  405024:	data16 fistp WORD PTR [edx+0x10c6933d]
  40502b:	pop    DWORD PTR [edx-0x79fafd4f]
  405031:	dec    ebp
  405032:	add    BYTE PTR [ecx+0x5e4ff8a],dh
  405038:	mov    al,0xc3
  40503a:	sbb    dh,BYTE PTR [ecx-0x31]
  40503d:	mov    ebx,0x439c457e
  405042:	inc    eax
  405043:	cmp    DWORD PTR [ebp-0x16],0x54
  405047:	(bad)  
  405048:	js     0x4050a5
  40504a:	push   es
  40504b:	adc    BYTE PTR [eax-0x6d],0xb8
  40504f:	es cmp eax,0x547bd619
  405055:	jmp    0x76ec3971
  40505a:	sbb    BYTE PTR [ecx-0x7d86bea6],bh
  405060:	aad    0x2b
  405062:	dec    esp
  405063:	mov    ds:0x12dc5009,eax
  405068:	sbb    ecx,esi
  40506a:	sub    BYTE PTR [eax-0x618b70c2],cl
  405070:	std    
  405071:	dec    esi
  405072:	idiv   DWORD PTR [eax]
  405074:	xchg   ecx,eax
  405075:	daa    
  405076:	sbb    al,0xec
  405078:	fld    DWORD PTR [edi]
  40507a:	mov    ch,0xd6
  40507c:	mov    ah,BYTE PTR [eax-0x1b3bd731]
  405082:	or     eax,DWORD PTR [eax+0x0]
  405085:	and    al,0x8e
  405087:	sahf   
  405088:	mov    al,0x22
  40508a:	pop    ecx
  40508b:	cmp    ebx,DWORD PTR [edx+0x7d]
  40508e:	arpl   WORD PTR [ebx+0x365d4782],bx
  405094:	or     dh,ch
  405096:	fs push ebx
  405098:	fmulp  st(6),st
  40509a:	push   esi
  40509b:	lahf   
  40509c:	sub    BYTE PTR [ebx-0x21],ch
  40509f:	dec    esp
  4050a0:	pushf  
  4050a1:	dec    eax
  4050a2:	ja     0x405102
  4050a4:	fistp  QWORD PTR [ecx+esi*1-0x63]
  4050a8:	inc    ecx
  4050a9:	xor    ebx,eax
  4050ab:	test   eax,0x7cbef663
  4050b0:	pop    edi
  4050b1:	scas   eax,DWORD PTR es:[edi]
  4050b2:	(bad)  
  4050b3:	mov    esi,0x9b7390cb
  4050b8:	int    0xf
  4050ba:	ss push ss
  4050bc:	js     0x405093
  4050be:	mov    dh,0x37
  4050c0:	jmp    0x213e:0x2a29aebe
  4050c7:	push   ebx
  4050c8:	fisub  WORD PTR [ebp-0x614c4f99]
  4050ce:	pop    esi
  4050cf:	cmp    eax,0x270637d8
  4050d4:	sbb    al,0x78
  4050d6:	stos   BYTE PTR es:[edi],al
  4050d7:	push   ebx
  4050d8:	ins    DWORD PTR es:[edi],dx
  4050d9:	data16 aas 
  4050db:	or     esi,ebp
  4050dd:	rcr    ebp,1
  4050df:	outs   dx,DWORD PTR ds:[esi]
  4050e0:	bound  eax,QWORD PTR [edi+eiz*1]
  4050e3:	push   0x4f
  4050e5:	les    ebp,FWORD PTR [esi+0x1d8a65cd]
  4050eb:	fild   DWORD PTR [ebx+ecx*1]
  4050ee:	sbb    eax,0x378b0833
  4050f3:	in     eax,0xc
  4050f5:	jno    0x40510e
  4050f7:	push   edx
  4050f8:	cwde   
  4050f9:	es push edx
  4050fb:	sub    al,0x73
  4050fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4050fe:	rol    DWORD PTR [eax-0x50cc3b15],1
  405104:	icebp  
  405105:	lahf   
  405106:	ret    
  405107:	sub    al,BYTE PTR ds:0xfaebc10c
  40510d:	mov    eax,0x8b153d45
  405112:	sahf   
  405113:	mov    ?,WORD PTR [ebx+0x3211a0c]
  405119:	scas   eax,DWORD PTR es:[edi]
  40511a:	mov    eax,ds:0xe3c4f192
  40511f:	test   BYTE PTR [ecx-0x633649af],0xe8
  405126:	mov    ds:0x83661e31,eax
  40512b:	add    bh,BYTE PTR [ecx-0x71a743c]
  405131:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405132:	jb     0x405134
  405134:	imul   ebx,DWORD PTR [ebp-0x5d],0x35
  405138:	(bad)  
  405139:	cdq    
  40513a:	dec    edx
  40513b:	or     eax,0x270d68a7
  405140:	pusha  
  405141:	fistp  DWORD PTR [edx-0x68]
  405144:	imul   esp,ebx,0x3a
  405147:	pop    ecx
  405148:	mov    ah,dl
  40514a:	into   
  40514b:	hlt    
  40514c:	adc    ch,ah
  40514e:	aaa    
  40514f:	pop    esp
  405150:	mov    ah,0x1e
  405152:	mov    ecx,0x6ee8574d
  405157:	xor    BYTE PTR [edx+0x621b95d],al
  40515d:	out    0x6e,eax
  40515f:	xchg   edx,eax
  405160:	sti    
  405161:	mov    eax,ds
  405163:	sub    ebx,DWORD PTR [edx-0x24]
  405166:	(bad)  
  405167:	mov    ebp,edx
  405169:	jo     0x4051d0
  40516b:	sbb    eax,0xa3851f70
  405170:	dec    ebx
  405171:	xor    dh,ch
  405173:	ja     0x405142
  405175:	fistp  WORD PTR [ecx+esi*8-0x6c]
  405179:	mov    ds:0xc4e98385,eax
  40517e:	xchg   edi,eax
  40517f:	jae    0x40518a
  405181:	dec    ebx
  405182:	mov    edi,0x234600e3
  405187:	sub    eax,0xa3675006
  40518c:	stos   BYTE PTR es:[edi],al
  40518d:	adc    al,0xf2
  40518f:	mov    edi,0x1f4451f7
  405194:	mov    bl,0x82
  405196:	adc    eax,0xbbd572f9
  40519b:	xor    BYTE PTR [esp+edi*2+0x36def8a1],dl
  4051a2:	dec    ebx
  4051a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051a4:	aaa    
  4051a5:	fisttp WORD PTR [ebp+ebx*8+0x21c67390]
  4051ac:	jbe    0x405226
  4051ae:	sub    dl,cl
  4051b0:	adc    cl,BYTE PTR [ebx+ecx*2]
  4051b3:	adc    eax,DWORD PTR ds:0xefb677e9
  4051b9:	xor    ebp,0xffffffac
  4051bc:	lock push 0x69fe74a9
  4051c2:	jne    0x405240
  4051c4:	(bad)
  4051c8:	mov    dh,0x3a
  4051ca:	in     eax,0x5d
  4051cc:	stos   DWORD PTR es:[edi],eax
  4051cd:	and    DWORD PTR [esi],esi
  4051cf:	jb     0x405192
  4051d1:	xchg   edx,eax
  4051d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051d3:	test   al,0x21
  4051d5:	fstp   DWORD PTR [eax-0x7f]
  4051d8:	push   ebx
  4051d9:	jmp    0xca90e34e
  4051de:	ret    
  4051df:	cld    
  4051e0:	hlt    
  4051e1:	test   bl,0x4e
  4051e4:	inc    eax
  4051e5:	(bad)  
  4051e6:	hlt    
  4051e7:	aad    0xd
  4051e9:	ret    
  4051ea:	xor    ebx,DWORD PTR [ecx-0x22ff18c2]
  4051f0:	mov    cl,0x87
  4051f2:	push   0x8fbef290
  4051f7:	add    al,0x53
  4051f9:	aas    
  4051fa:	and    ch,cl
  4051fc:	sbb    ebx,edi
  4051fe:	call   0x3900fab7
  405203:	jne    0x4051aa
  405205:	mov    ?,WORD PTR [eax+0x3]
  405208:	test   bl,cl
  40520a:	cdq    
  40520b:	test   eax,0xf91e9c48
  405210:	in     eax,dx
  405211:	mov    eax,ds:0xe203c040
  405216:	xor    al,0x37
  405218:	shr    DWORD PTR [edx-0x45],cl
  40521b:	inc    ebp
  40521c:	push   ebx
  40521d:	xchg   ecx,eax
  40521e:	addr16 sub al,0x1f
  405221:	xor    eax,0xdc05c333
  405226:	jb     0x40525a
  405228:	add    cl,ch
  40522a:	add    DWORD PTR fs:[eax],eax
  40522d:	add    BYTE PTR [ebx+0x4d03c84d],cl
  405233:	or     BYTE PTR [ecx+0x4d8bf04d],cl
  405239:	in     al,0x85
  40523b:	leave  
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x475394ee
  405804:	aam    0xf4
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	popa   
  40580f:	sub    esi,esp
  405811:	cmp    BYTE PTR [eax-0x27],ch
  405814:	cs call 0xab316deb
  40581a:	hlt    
  40581b:	shl    BYTE PTR [edx],0x9f
  40581e:	xlat   BYTE PTR ds:[ebx]
  40581f:	nop
  405820:	fwait
  405821:	mov    cl,BYTE PTR [esi]
  405823:	sbb    ebp,DWORD PTR [esi]
  405825:	push   ebp
  405826:	popf   
  405827:	(bad)  [eax]
  405829:	pushf  
  40582a:	fwait
  40582b:	push   eax
  40582c:	sub    eax,0xcc1d637d
  405831:	repnz dec cx
  405834:	icebp  
  405835:	xrelease mov BYTE PTR [esi+0x7d],bh
  405839:	adc    eax,0xd281a166
  40583e:	mov    esi,0x22c5b3a3
  405843:	mov    dh,0x50
  405845:	pop    eax
  405846:	and    DWORD PTR [ebx],eax
  405848:	cwde   
  405849:	or     BYTE PTR [edx+0x5d98f472],al
  40584f:	cmp    al,BYTE PTR [edi+0x1a8d1861]
  405855:	fcomip st,st(2)
  405857:	cmp    al,0x1
  405859:	pusha  
  40585a:	arpl   WORD PTR [edi-0x18a70169],bp
  405860:	rcl    BYTE PTR [ebx],1
  405862:	loope  0x405872
  405864:	iret   
  405865:	and    eax,0x3be5ced5
  40586a:	je     0x40584c
  40586c:	in     eax,0x4f
  40586e:	push   0x86d31962
  405873:	jb     0x405895
  405875:	lea    ecx,[edi+0x2]
  405878:	fsubr  DWORD PTR [eax-0x49c2a977]
  40587e:	jno    0x4058f4
  405880:	stos   BYTE PTR es:[edi],al
  405881:	mov    ebx,0x1b134de8
  405886:	mov    cl,0x7e
  405888:	mov    bl,0x33
  40588a:	(bad)  
  40588b:	ds stos DWORD PTR es:[edi],eax
  40588d:	test   al,0x86
  40588f:	test   BYTE PTR [esi+ecx*1],0x3b
  405893:	push   edx
  405894:	es xchg esp,eax
  405896:	xchg   ebp,eax
  405897:	add    al,0x1f
  405899:	jp     0x40581f
  40589b:	shl    BYTE PTR [esi],1
  40589d:	fsub   QWORD PTR [edx-0x3b]
  4058a0:	(bad)  
  4058a1:	jo     0x405834
  4058a3:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4058a5:	in     al,dx
  4058a6:	xchg   esp,eax
  4058a7:	daa    
  4058a8:	dec    eax
  4058a9:	fmul   st(5),st
  4058ab:	pop    esp
  4058ac:	jae    0x40587a
  4058ae:	push   cs
  4058af:	adc    BYTE PTR [esi],al
  4058b1:	test   DWORD PTR [esi],esi
  4058b3:	imul   ecx,DWORD PTR ds:0xf85b5425,0xffffff8b
  4058ba:	in     al,dx
  4058bb:	clc    
  4058bc:	rcr    dl,cl
  4058be:	(bad)  
  4058bf:	jmp    0x40586c
  4058c1:	xchg   bx,ax
  4058c3:	push   ebx
  4058c4:	outs   dx,DWORD PTR ds:[esi]
  4058c5:	jge    0x40584b
  4058c7:	cs ss lock out 0x18,eax
  4058cc:	popf   
  4058cd:	mov    DWORD PTR [esi+ebp*8-0x6e],ebx
  4058d1:	xor    ah,BYTE PTR [ebx+0x72]
  4058d4:	mov    ch,0xc6
  4058d6:	mov    al,0xac
  4058d8:	xchg   esp,eax
  4058d9:	pop    es
  4058da:	push   edi
  4058db:	stos   BYTE PTR es:[edi],al
  4058dc:	sahf   
  4058dd:	add    eax,0x4e054650
  4058e2:	into   
  4058e3:	sub    edi,edi
  4058e5:	pop    ebp
  4058e6:	and    ebx,esp
  4058e8:	mov    ebx,0x1e82a9e2
  4058ed:	dec    ebp
  4058ee:	mov    al,0x17
  4058f0:	lahf   
  4058f1:	push   ebp
  4058f2:	out    0x6f,al
  4058f4:	pop    edx
  4058f5:	je     0x40596a
  4058f7:	add    edx,esi
  4058f9:	push   0x28
  4058fb:	mov    ?,edx
  4058fd:	or     BYTE PTR [edx],ch
  4058ff:	out    dx,al
  405900:	sbb    DWORD PTR [edi],0x3d
  405903:	retf   
  405904:	sbb    ebx,ebx
  405906:	daa    
  405907:	imul   edi,DWORD PTR [eax],0xffffffdd
  40590a:	xor    ecx,esi
  40590c:	arpl   WORD PTR [ecx],cx
  40590e:	jp     0x4058f3
  405910:	cmp    bl,BYTE PTR [esp+eax*8-0x6f7f32f5]
  405917:	cmc    
  405918:	adc    ch,BYTE PTR [eax+0x49bacb48]
  40591e:	jns    0x4058fb
  405920:	pop    eax
  405921:	push   ss
  405922:	inc    ecx
  405923:	add    esp,DWORD PTR [ebx]
  405925:	mov    cl,0x24
  405927:	add    ebp,DWORD PTR [ebx-0x54]
  40592a:	xchg   edx,eax
  40592b:	dec    DWORD PTR [edx+ebx*4-0x3388c1fe]
  405932:	ins    BYTE PTR es:[edi],dx
  405933:	sbb    al,0x1
  405935:	fldcw  WORD PTR [edx+0x428b8a06]
  40593b:	mov    al,ds:0x6b35dba6
  405940:	or     eax,0x539542f7
  405945:	sbb    eax,DWORD PTR [edx]
  405947:	cmp    DWORD PTR [edi-0x68],ecx
  40594a:	push   ebx
  40594b:	inc    ecx
  40594c:	call   0x5bd53f18
  405951:	addr16 pop edi
  405953:	xchg   edx,eax
  405954:	inc    ebp
  405955:	pushf  
  405956:	sub    DWORD PTR [edx+eiz*2],edx
  405959:	dec    DWORD PTR [edi+0x1b]
  40595c:	push   0x6
  40595e:	add    dh,bh
  405960:	cmc    
  405961:	jne    0x4059a9
  405963:	dec    edx
  405964:	push   0xfeab70d4
  405969:	dec    edi
  40596a:	ror    BYTE PTR [esi+ebx*2-0x7a],0xa4
  40596f:	sub    al,0x79
  405971:	daa    
  405972:	add    DWORD PTR [ebx],esp
  405974:	sahf   
  405975:	mov    bh,0x32
  405977:	push   ebx
  405978:	inc    ebx
  405979:	cmp    esi,DWORD PTR [ecx-0x60f7dfde]
  40597f:	daa    
  405980:	addr16 out 0x66,eax
  405983:	fdivr  DWORD PTR [ebx+ecx*8+0x432beada]
  40598a:	and    DWORD PTR [edx-0x13811c5f],ebx
  405990:	jb     0x4059c8
  405992:	retf   0x3f6c
  405995:	(bad)  
  405996:	neg    dh
  405998:	mov    edi,0x380118a2
  40599d:	push   edx
  40599e:	pop    edi
  40599f:	pop    edi
  4059a0:	add    edx,esp
  4059a2:	and    BYTE PTR [edi+0x47],0x6e
  4059a6:	push   esp
  4059a7:	mov    eax,ds:0xee9796f4
  4059ac:	mov    WORD PTR [eax],cs
  4059ae:	mov    al,BYTE PTR [edi]
  4059b0:	out    0x11,eax
  4059b2:	popa   
  4059b3:	(bad)  
  4059b4:	cli    
  4059b5:	out    0x5a,al
  4059b7:	fs adc esp,0xf7a6aa92
  4059be:	and    dl,BYTE PTR [edx]
  4059c0:	mov    es,WORD PTR [eax-0x1d]
  4059c3:	adc    al,0xe6
  4059c5:	enter  0x1497,0x71
  4059c9:	pusha  
  4059ca:	mov    ch,0x4a
  4059cc:	cmp    DWORD PTR [ecx+0x2f],ecx
  4059cf:	or     al,0x6
  4059d1:	test   eax,0x8370d4b9
  4059d6:	push   esi
  4059d7:	outs   dx,BYTE PTR ds:[si]
  4059d9:	(bad)  
  4059db:	push   ss
  4059dc:	sbb    DWORD PTR [ebx],0x5c3ffeb3
  4059e2:	mov    eax,cs
  4059e4:	mov    BYTE PTR [ecx-0x39b72add],dl
  4059ea:	mov    al,ds:0xa1b2b064
  4059ef:	call   0xc05c4858
  4059f4:	push   ebx
  4059f5:	pop    ds
  4059f6:	xor    eax,0xc4993cf9
  4059fb:	sbb    BYTE PTR [eax],cl
  4059fd:	jecxz  0x405a52
  4059ff:	lods   eax,DWORD PTR ds:[esi]
  405a00:	jo     0x405a60
  405a02:	jb     0x4059c9
  405a04:	cwde   
  405a05:	push   cs
  405a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a07:	jnp    0x4059b3
  405a09:	fadd   DWORD PTR [esi]
  405a0b:	cmp    al,0x6f
  405a0d:	int3   
  405a0e:	ds or  al,0x55
  405a11:	rcr    DWORD PTR [edx-0x10],0x1a
  405a15:	mov    al,BYTE PTR [ebp+esi*1+0x9bdefc9]
  405a1c:	sbb    cl,dh
  405a1e:	inc    eax
  405a1f:	pop    edi
  405a20:	shl    DWORD PTR [edi+0x170685f0],0xe
  405a27:	dec    cx
  405a29:	inc    edx
  405a2a:	inc    edi
  405a2b:	loopne 0x405a9c
  405a2d:	js     0x405a2f
  405a2f:	and    ch,ah
  405a31:	jnp    0x405a25
  405a33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a34:	xchg   edi,eax
  405a35:	outs   dx,DWORD PTR ds:[esi]
  405a36:	jp     0x405a00
  405a38:	xchg   esp,eax
  405a39:	jmp    0x405a3e
  405a3b:	inc    esp
  405a3c:	scas   eax,DWORD PTR es:[edi]
  405a3d:	test   al,cl
  405a3f:	push   ebp
  405a40:	int    0x3d
  405a42:	cld    
  405a43:	aam    0x64
  405a45:	ins    BYTE PTR es:[edi],dx
  405a46:	cs jg  0x405a4f
  405a49:	jge    0x4059e0
  405a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a4c:	stos   BYTE PTR es:[edi],al
  405a4d:	out    dx,al
  405a4e:	adc    bl,BYTE PTR [ebx]
  405a50:	ins    BYTE PTR es:[edi],dx
  405a51:	jmp    0x405a9b
  405a53:	xchg   edx,eax
  405a54:	mov    eax,ds:0x8866662b
  405a59:	fstp   st(7)
  405a5b:	push   0x6a
  405a5d:	xor    BYTE PTR [ebp-0x683cd64d],cl
  405a63:	lea    esp,[ebp+ecx*1-0x3d]
  405a67:	adc    ebp,DWORD PTR [edi]
  405a69:	ins    DWORD PTR es:[edi],dx
  405a6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a6b:	scas   al,BYTE PTR es:[edi]
  405a6c:	mov    ?,WORD PTR [esi-0x44]
  405a6f:	push   es
  405a70:	mov    ?,WORD PTR [edx]
  405a72:	xchg   edx,eax
  405a73:	mov    cl,0xf3
  405a75:	mov    ah,0xb7
  405a77:	or     al,0x2
  405a79:	idiv   BYTE PTR [esi-0x19ba0dbc]
  405a7f:	inc    edi
  405a80:	mov    ebx,0x16ce2d66
  405a85:	ret    0x5d50
  405a88:	mov    cl,BYTE PTR [edi+0x24]
  405a8b:	mov    al,0x29
  405a8d:	pusha  
  405a8e:	scas   al,BYTE PTR es:[edi]
  405a8f:	xchg   esi,eax
  405a90:	out    0x48,al
  405a92:	(bad)  
  405a93:	es mov edx,0x7322d889
  405a99:	jnp    0x405a56
  405a9b:	test   dh,0x1b
  405a9e:	sub    BYTE PTR [ecx],ah
  405aa0:	jp     0x405a23
  405aa2:	pop    ebx
  405aa3:	int    0x7c
  405aa5:	or     BYTE PTR [ecx-0x12582be8],dl
  405aab:	push   0x9
  405aad:	mov    eax,0x84e2beac
  405ab2:	mov    ebp,0xb2f9d569
  405ab7:	jbe    0x405b00
  405ab9:	out    dx,eax
  405aba:	cmp    al,0x4e
  405abc:	and    DWORD PTR [ecx],ebp
  405abe:	popa   
  405abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ac0:	adc    al,0x30
  405ac2:	shl    esi,0xed
  405ac5:	mov    ds:0x97948844,eax
  405aca:	mov    DWORD PTR [edi+0x23],edx
  405acd:	in     al,dx
  405ace:	dec    ecx
  405acf:	outs   dx,BYTE PTR ds:[esi]
  405ad0:	js     0x405a65
  405ad2:	sub    BYTE PTR [ebx+0x41],bh
  405ad5:	scas   al,BYTE PTR es:[edi]
  405ad6:	lods   eax,DWORD PTR ds:[esi]
  405ad7:	ins    DWORD PTR es:[edi],dx
  405ad8:	imul   edx,edx,0x4a6779e6
  405ade:	call   0x8fc68712
  405ae3:	icebp  
  405ae4:	repnz and al,dh
  405ae7:	mov    ss,edx
  405ae9:	or     BYTE PTR [eax-0x1025870c],0x2d
  405af0:	push   esi
  405af1:	fst    QWORD PTR [ecx-0x60a43d60]
  405af7:	(bad)  
  405af8:	lea    edx,[eax+0x14433e3e]
  405afe:	or     al,0x5c
  405b00:	xor    eax,0x8cfb0c22
  405b05:	ficomp DWORD PTR [edi+eiz*8+0x6a]
  405b09:	hlt    
  405b0a:	not    esi
  405b0c:	cmp    DWORD PTR [ebx],eax
  405b0e:	call   0xbb7c773f
  405b13:	pop    edx
  405b14:	ja     0x405b7a
  405b16:	jbe    0x405acc
  405b18:	stos   DWORD PTR es:[edi],eax
  405b19:	and    al,0xae
  405b1b:	fmul   st,st(4)
  405b1d:	dec    esp
  405b1e:	jno    0x405b18
  405b20:	and    bl,BYTE PTR [edi-0x7a]
  405b23:	test   al,0x75
  405b25:	int    0x44
  405b27:	xlat   BYTE PTR ds:[ebx]
  405b28:	(bad)  
  405b29:	iret   
  405b2a:	adc    eax,0xc3785ab8
  405b2f:	push   ds
  405b30:	fmul   DWORD PTR [esi-0x3dc479bf]
  405b36:	sub    BYTE PTR [esi-0x10],dh
  405b39:	jmp    0x32b8:0xf6b8f954
  405b40:	sub    eax,0xd36b3b49
  405b45:	jnp    0x405b6f
  405b47:	mov    esp,0x1cf70d46
  405b4c:	ja     0x405ba1
  405b4e:	sahf   
  405b4f:	dec    ebp
  405b50:	dec    ebx
  405b51:	lock jo 0x405bc5
  405b54:	aaa    
  405b55:	sbb    BYTE PTR [esi+esi*4],dl
  405b58:	fidiv  WORD PTR [si-0x68fc]
  405b5d:	mov    esp,0x19e88f20
  405b62:	clc    
  405b63:	adc    eax,0xc2c1bf0a
  405b68:	inc    edx
  405b69:	adc    al,0xa1
  405b6b:	adc    al,0x4a
  405b6d:	stos   DWORD PTR es:[edi],eax
  405b6e:	push   esp
  405b6f:	push   edi
  405b70:	cmp    dl,BYTE PTR [esi-0x4c]
  405b73:	lods   eax,DWORD PTR ds:[esi]
  405b74:	sbb    al,0x1d
  405b76:	in     eax,dx
  405b77:	fistp  DWORD PTR ds:0xc8ac4044
  405b7d:	add    edx,DWORD PTR [esi+0x76]
  405b80:	sub    al,0x8b
  405b82:	dec    ecx
  405b83:	stc    
  405b84:	stos   BYTE PTR es:[di],al
  405b86:	xor    al,0xdc
  405b88:	jle    0x405b90
  405b8a:	pushf  
  405b8b:	clc    
  405b8c:	outs   dx,BYTE PTR ds:[esi]
  405b8d:	jns    0x405b68
  405b8f:	sub    DWORD PTR [ecx-0x3b],0xffffffd3
  405b93:	lea    edx,[edi-0x279218a2]
  405b99:	push   edi
  405b9a:	int3   
  405b9b:	outs   dx,BYTE PTR ds:[esi]
  405b9c:	jg     0x405c08
  405b9e:	fwait
  405b9f:	mov    ch,BYTE PTR [esi]
  405ba1:	or     DWORD PTR [edx-0x55],0xc8f5c224
  405ba8:	cs sbb eax,0x95cf0437
  405bae:	push   ds
  405baf:	std    
  405bb0:	leave  
  405bb1:	cmovb  ecx,DWORD PTR [edi-0x5db28d3f]
  405bb8:	and    al,0xe9
  405bba:	lds    esp,FWORD PTR [edi+edx*4-0x62ed75d]
  405bc1:	jge    0x405ba8
  405bc3:	cmp    edi,0x1bcc250f
  405bc9:	inc    edx
  405bca:	imul   eax,DWORD PTR [ebp-0x154fe051],0xb
  405bd1:	or     DWORD PTR [esi+0x6a580cad],eax
  405bd7:	push   0xffffff9b
  405bd9:	xor    ebx,DWORD PTR [edx-0x6c]
  405bdc:	cmc    
  405bdd:	ficomp DWORD PTR [ebp-0x5a]
  405be0:	in     al,dx
  405be1:	mov    edi,0x25c8a8c0
  405be6:	pusha  
  405be7:	inc    esi
  405be8:	jne    0x405bc9
  405bea:	not    DWORD PTR [ecx]
  405bec:	sub    ch,cl
  405bee:	dec    esp
  405bef:	xor    bh,BYTE PTR [eax-0x4f]
  405bf2:	mov    edi,ebx
  405bf4:	push   edx
  405bf5:	cld    
  405bf6:	and    esp,esi
  405bf8:	xchg   dx,ax
  405bfa:	scas   al,BYTE PTR es:[edi]
  405bfb:	sbb    bh,cl
  405bfd:	mov    DWORD PTR [edx-0x5a999e9a],ecx
  405c03:	fldpi  
  405c05:	std    
  405c06:	or     eax,0xb06a2264
  405c0b:	pop    esi
  405c0c:	inc    ebp
  405c0d:	test   DWORD PTR [edi+0x7f],ebx
  405c10:	mov    eax,0xdcc4b10e
  405c15:	out    0x7d,eax
  405c17:	test   al,0xa1
  405c19:	jo     0x405bec
  405c1b:	lods   eax,DWORD PTR ds:[esi]
  405c1c:	inc    ebp
  405c1d:	mov    ?,WORD PTR [ebp+eiz*4-0x2abd172c]
  405c24:	aad    0xd9
  405c26:	mov    cl,0x98
  405c28:	sti    
  405c29:	inc    ebp
  405c2a:	push   0x25
  405c2c:	push   es
  405c2d:	(bad)  
  405c2e:	pop    ds
  405c2f:	jb     0x405c79
  405c31:	lods   al,BYTE PTR ds:[esi]
  405c32:	imul   ebx,DWORD PTR [ecx],0xf0687a77
  405c38:	inc    ebx
  405c39:	mov    dl,0x73
  405c3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c3c:	sti    
  405c3d:	inc    esi
  405c3e:	cmp    eax,0x1878bdbe
  405c43:	sar    DWORD PTR [eax+edi*1],1
  405c46:	aaa    
  405c47:	idiv   DWORD PTR fs:[edi]
  405c4a:	xchg   ecx,eax
  405c4b:	or     cl,ah
  405c4d:	pop    eax
  405c4e:	mov    dh,0x8f
  405c50:	mov    dl,0x97
  405c52:	add    eax,0x854a0d52
  405c57:	mov    bl,0x54
  405c59:	pop    esp
  405c5a:	dec    eax
  405c5b:	add    ecx,DWORD PTR [ecx]
  405c5d:	cld    
  405c5e:	cmp    eax,0x25b746cf
  405c63:	je     0x405ccb
  405c65:	xor    dh,BYTE PTR [esi]
  405c67:	jb     0x405c4b
  405c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c6a:	xchg   esi,eax
  405c6b:	xor    eax,0xe1d8845a
  405c70:	cmp    eax,0x65b7d5dc
  405c75:	pusha  
  405c76:	sub    eax,DWORD PTR [edi]
  405c78:	inc    edx
  405c79:	xor    BYTE PTR [ebx-0x74cdcc80],0x82
  405c80:	inc    DWORD PTR [edi-0x15c4987b]
  405c86:	and    esp,DWORD PTR [ebp-0x13]
  405c89:	fcomp  DWORD PTR [eax-0x2ce00d01]
  405c8f:	push   0xffffffce
  405c91:	cwde   
  405c92:	xlat   BYTE PTR ds:[ebx]
  405c93:	mov    dh,ch
  405c95:	int3   
  405c96:	push   esi
  405c97:	inc    DWORD PTR [edx-0x209d56a0]
  405c9d:	rol    DWORD PTR [eax-0x79],1
  405ca0:	dec    ebp
  405ca1:	mov    al,ds:0x40721c5d
  405ca6:	mov    WORD PTR ss:[edi+0x79fbc4b5],fs
  405cad:	sub    DWORD PTR [eax+0x70],esp
  405cb0:	mov    bl,0x7d
  405cb2:	xchg   edx,eax
  405cb3:	and    al,0x6
  405cb5:	stos   DWORD PTR es:[edi],eax
  405cb6:	push   ebp
  405cb7:	adc    ah,dh
  405cb9:	in     eax,0x91
  405cbb:	and    BYTE PTR [ecx],0xec
  405cbe:	out    dx,eax
  405cbf:	loope  0x405c57
  405cc1:	vmwrite ebp,edi
  405cc4:	adc    DWORD PTR [ebp+0x67abfb8d],0x7c1795f6
  405cce:	fst    DWORD PTR [edx-0x60127936]
  405cd4:	and    BYTE PTR [ecx+edx*1],dh
  405cd7:	(bad)  
  405cd8:	into   
  405cd9:	ror    BYTE PTR [esi+edx*4+0x5f77044c],1
  405ce0:	rol    DWORD PTR ds:[esi],cl
  405ce3:	push   cs
  405ce4:	aaa    
  405ce5:	jmp    0x78af:0xe58580bf
  405cec:	inc    edi
  405ced:	sub    bl,BYTE PTR [edx-0x67]
  405cf0:	mov    eax,0xf61d7031
  405cf5:	xor    al,BYTE PTR [ebp+ebp*1+0x4b]
  405cf9:	aam    0xd2
  405cfb:	ret    
  405cfc:	mov    dh,0x37
  405cfe:	inc    ecx
  405cff:	dec    edi
  405d00:	cmp    esi,ecx
  405d02:	stos   DWORD PTR es:[edi],eax
  405d03:	add    cl,BYTE PTR [edi]
  405d05:	or     al,0xd1
  405d07:	sbb    bh,cl
  405d09:	retf   
  405d0a:	repnz xor BYTE PTR [edi-0x47d855cd],cl
  405d11:	jmp    0x405d7b
  405d13:	mov    ebx,DWORD PTR [edx-0x24]
  405d16:	mov    ds:0x2d7fd35d,eax
  405d1b:	xchg   esp,eax
  405d1c:	aaa    
  405d1d:	mov    cl,0x5e
  405d1f:	mov    edx,0xa5e29f0a
  405d24:	fld    st(0)
  405d26:	xor    ebx,esp
  405d28:	sbb    ecx,DWORD PTR [edi+eiz*2]
  405d2b:	push   cs
  405d2c:	outs   dx,DWORD PTR ds:[esi]
  405d2d:	(bad)  
  405d2e:	sti    
  405d2f:	and    ebx,DWORD PTR [esi-0x5306787d]
  405d35:	rol    BYTE PTR [ebx+0xa],cl
  405d38:	and    DWORD PTR [eax],0x2df06995
  405d3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d3f:	imul   eax,DWORD PTR [esi-0x80],0x5effde35
  405d46:	sbb    al,0x50
  405d48:	je     0x405d64
  405d4a:	lds    ebx,FWORD PTR [ebx]
  405d4c:	sahf   
  405d4d:	int    0x23
  405d4f:	cmp    al,0xae
  405d51:	popf   
  405d52:	push   0xe74acd2f
  405d57:	fwait
  405d58:	push   ecx
  405d59:	sar    DWORD PTR ds:0x9d2abcdb,1
  405d5f:	and    DWORD PTR [esi],esi
  405d61:	test   DWORD PTR [ecx],esi
  405d63:	adc    ecx,ecx
  405d65:	outs   dx,BYTE PTR ds:[esi]
  405d66:	mov    edi,0x645fc25f
  405d6b:	into   
  405d6c:	mov    al,ds:0x90706d9b
  405d71:	out    0xcb,al
  405d73:	cmc    
  405d74:	and    eax,0x77b78bac
  405d79:	cld    
  405d7a:	fstp   DWORD PTR [ecx+0xf35b051]
  405d80:	jge    0x405dd2
  405d82:	xor    eax,DWORD PTR [edx]
  405d84:	bound  eax,QWORD PTR [eax]
  405d86:	add    dh,BYTE PTR ds:0xc1576446
  405d8c:	scas   al,BYTE PTR es:[edi]
  405d8d:	sbb    BYTE PTR [esi+0x3fb828d5],cl
  405d93:	xlat   BYTE PTR ds:[ebx]
  405d94:	repz push edi
  405d96:	jns    0x405d32
  405d98:	jnp    0x405d3f
  405d9a:	jg     0x405d4a
  405d9c:	cmp    eax,0x4cfbed40
  405da1:	out    0x7a,al
  405da3:	div    BYTE PTR [edi]
  405da5:	xchg   ebx,eax
  405da6:	mov    bl,0x4e
  405da8:	nop
  405da9:	aam    0x62
  405dab:	fild   QWORD PTR [esi]
  405dad:	push   esp
  405daf:	jmp    0x405d81
  405db1:	add    eax,0xcb172bbd
  405db6:	fwait
  405db7:	or     eax,0x48512a7c
  405dbc:	aam    0x83
  405dbe:	idiv   DWORD PTR [edx+0x3fce46d9]
  405dc4:	dec    edi
  405dc5:	dec    edi
  405dc6:	stos   DWORD PTR es:[edi],eax
  405dc7:	xor    BYTE PTR [ebp-0x267b9fbb],bh
  405dcd:	sub    BYTE PTR [esi],bh
  405dcf:	mov    edi,0x170a9396
  405dd4:	sbb    BYTE PTR [esi-0x75d702ad],cl
  405dda:	pop    esp
  405ddb:	out    0x39,eax
  405ddd:	jge    0x405e33
  405ddf:	xchg   BYTE PTR [eax],ah
  405de1:	jno    0x405db8
  405de3:	pop    edi
  405de4:	inc    ecx
  405de5:	fstp   TBYTE PTR [ebx-0x50]
  405de8:	mov    ds,WORD PTR [edx+0x34]
  405deb:	shl    BYTE PTR [ecx],cl
  405ded:	inc    sp
  405def:	add    DWORD PTR [ebp-0x3819298e],ecx
  405df5:	mov    edx,0xb111fad4
  405dfa:	stos   BYTE PTR es:[edi],al
  405dfb:	or     al,0x97
  405dfd:	inc    edx
  405dfe:	pop    ds
  405dff:	add    al,0x8e
  405e01:	sub    al,0x92
  405e03:	es iret 
  405e05:	jbe    0x405e24
  405e07:	xchg   BYTE PTR [edx],ch
  405e09:	dec    esi
  405e0a:	jp     0x405dad
  405e0c:	ins    DWORD PTR es:[edi],dx
  405e0d:	neg    DWORD PTR [eax-0x5a]
  405e10:	pop    edx
  405e11:	les    edi,FWORD PTR [eax]
  405e13:	fmul   DWORD PTR [esp+ebp*8]
  405e16:	sbb    eax,0x6ea09164
  405e1b:	sti    
  405e1c:	jnp    0x405e26
  405e1e:	fld    DWORD PTR [edi+0x0]
  405e21:	sub    edx,DWORD PTR [edx]
  405e23:	xchg   ecx,eax
  405e24:	fnsave [eax-0x3072ba5d]
  405e2a:	popf   
  405e2b:	mov    bl,bl
  405e2d:	or     al,0x6c
  405e2f:	xor    BYTE PTR [ebp+0x27],0x25
  405e33:	retf   
  405e34:	fwait
  405e35:	lahf   
  405e36:	dec    ebx
  405e37:	out    0xc1,eax
  405e39:	mov    al,0x4e
  405e3b:	stos   BYTE PTR es:[edi],al
  405e3c:	scas   eax,DWORD PTR es:[edi]
  405e3d:	imul   ebp,DWORD PTR [ecx-0x4a],0xf24ad268
  405e44:	adc    al,BYTE PTR ds:0x4c43d533
  405e4a:	pop    ebx
  405e4b:	mov    ecx,0x2a45fb72
  405e50:	sahf   
  405e51:	push   ss
  405e52:	shl    BYTE PTR [edi-0x7f],0x1d
  405e56:	std    
  405e57:	test   al,0xfd
  405e59:	cmp    esi,DWORD PTR [edi+0x35]
  405e5c:	arpl   WORD PTR [edi+0x41eb13be],bx
  405e62:	xchg   esi,eax
  405e63:	sbb    ch,BYTE PTR [ebx]
  405e65:	daa    
  405e66:	(bad)  
  405e68:	mov    esi,0x4a63d719
  405e6d:	mov    ah,0xbc
  405e6f:	das    
  405e70:	loope  0x405e86
  405e72:	xchg   ebx,eax
  405e73:	iret   
  405e74:	iret   
  405e75:	push   ebx
  405e76:	adc    bh,al
  405e78:	mov    bh,0x50
  405e7a:	xor    DWORD PTR [eax],ebp
  405e7c:	jb     0x405e75
  405e7e:	push   0x45
  405e80:	inc    edi
  405e81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e82:	ret    0x30e
  405e85:	in     eax,0x2
  405e87:	sbb    dl,BYTE PTR [edx]
  405e89:	out    dx,al
  405e8a:	mov    dl,0x74
  405e8c:	xor    dl,BYTE PTR [edx]
  405e8e:	and    bl,dl
  405e90:	or     DWORD PTR [edi],edx
  405e92:	shl    BYTE PTR [esi+edx*2],cl
  405e95:	sub    eax,0xa324914
  405e9a:	jbe    0x405e7c
  405e9c:	and    al,0x45
  405e9e:	xchg   esi,eax
  405e9f:	rol    dh,cl
  405ea1:	mov    al,ds:0x97b1aa8d
  405ea6:	mov    ch,bl
  405ea8:	cmp    al,BYTE PTR [ebx-0x797031c8]
  405eae:	ret    
  405eaf:	repnz sub ecx,DWORD PTR [ebx+ecx*1+0x251d528b]
  405eb7:	mov    ds:0x539c51ee,al
  405ebc:	out    dx,al
  405ebd:	jne    0x405f0c
  405ebf:	inc    esi
  405ec0:	dec    edi
  405ec1:	mov    eax,ds:0x6771f9cd
  405ec6:	push   ebx
  405ec7:	test   bl,cl
  405ec9:	rcl    BYTE PTR [edi],1
  405ecb:	adc    al,ah
  405ecd:	ins    DWORD PTR es:[edi],dx
  405ece:	xor    eax,0x7538fa7c
  405ed3:	push   0x51
  405ed5:	inc    eax
  405ed6:	mov    cl,0xcb
  405ed8:	adc    ecx,edi
  405eda:	mov    ds:0xf65c9484,eax
  405edf:	fcmovb st,st(7)
  405ee1:	sub    eax,0xfcc7fd76
  405ee6:	push   eax
  405ee7:	int3   
  405ee8:	mov    eax,ds:0xb0921dcd
  405eed:	loopne 0x405e72
  405eef:	jno    0x405f25
  405ef1:	push   eax
  405ef2:	outs   dx,WORD PTR ds:[esi]
  405ef4:	(bad)  
  405ef5:	add    cl,ch
  405ef7:	adc    al,0xa7
  405ef9:	jo     0x405f69
  405efb:	jne    0x405ed6
  405efd:	xchg   esp,eax
  405efe:	jbe    0x405eaa
  405f00:	ret    0xed7f
  405f03:	mov    ?,WORD PTR [ebx+eiz*1]
  405f06:	std    
  405f07:	ret    
  405f08:	repz jmp 0x438faf7d
  405f0e:	into   
  405f0f:	push   ecx
  405f10:	sbb    eax,ecx
  405f12:	mov    ds,WORD PTR [edi-0x5478e1fd]
  405f18:	mov    esi,0x45188b71
  405f1d:	push   0x4169d26
  405f22:	je     0x405f92
  405f24:	popf   
  405f25:	jo     0x405f89
  405f27:	(bad)  
  405f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f29:	cmp    al,0x3f
  405f2b:	jge    0x405f35
  405f2d:	shr    DWORD PTR [esi-0x56014c6f],0xeb
  405f34:	adc    DWORD PTR [edx-0x9f48ec1],esp
  405f3a:	push   esp
  405f3b:	sub    bh,al
  405f3d:	nop
  405f3e:	pop    ss
  405f3f:	sub    dh,BYTE PTR [edi]
  405f41:	jo     0x405f1f
  405f43:	adc    DWORD PTR [esi],edx
  405f45:	arpl   WORD PTR [edx],bx
  405f47:	xchg   ch,cl
  405f49:	into   
  405f4a:	xchg   DWORD PTR [esi-0x79],ecx
  405f4d:	jbe    0x405f7f
  405f4f:	nop
  405f50:	ret    0xe007
  405f53:	jno    0x405fbb
  405f55:	mov    cl,0x5b
  405f57:	add    bh,BYTE PTR [bp-0x3c4b]
  405f5c:	out    dx,eax
  405f5d:	pop    esi
  405f5e:	retf   0x4e04
  405f61:	cmp    esi,DWORD PTR [ebp+0x6f035425]
  405f67:	fisubr WORD PTR [edx]
  405f69:	cmc    
  405f6a:	es out dx,eax
  405f6c:	(bad)  
  405f6d:	adc    ch,BYTE PTR [ecx+0x4ff2cc7b]
  405f73:	mov    ds:0xa9fff8d4,al
  405f78:	sahf   
  405f79:	pop    ds
  405f7a:	xchg   edi,eax
  405f7b:	fadd   QWORD PTR [edi-0x3f]
  405f7e:	je     0x405f20
  405f80:	(bad)  
  405f81:	sub    ebx,edi
  405f83:	mov    ds:0x83074012,eax
  405f88:	loop   0x405f7c
  405f8a:	in     al,dx
  405f8b:	sti    
  405f8c:	iret   
  405f8d:	cdq    
  405f8e:	and    DWORD PTR [edx+edi*4+0x43],esi
  405f92:	cs jb  0x405fbf
  405f95:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405f97:	iret   
  405f98:	icebp  
  405f99:	ds nop
  405f9b:	inc    esi
  405f9c:	fdiv   DWORD PTR [esi-0x656c7dec]
  405fa2:	pop    DWORD PTR [esi+0x73]
  405fa5:	fmul   QWORD PTR [edi-0x21]
  405fa8:	mov    ebp,0xe7bd9f47
  405fad:	push   ss
  405fae:	mov    esi,0x587d4d1d
  405fb3:	repz adc al,0xd3
  405fb6:	cli    
  405fb7:	push   ss
  405fb8:	out    0xe3,eax
  405fba:	cmp    BYTE PTR [esp+ebp*1],al
  405fbd:	aaa    
  405fbe:	cwde   
  405fbf:	pop    ebp
  405fc0:	pusha  
  405fc1:	jno    0x405f66
  405fc3:	jns    0x405f87
  405fc5:	cmp    al,0x24
  405fc7:	pop    edi
  405fc8:	imul   edi,DWORD PTR ds:0x2abc4a39,0xffffff87
  405fcf:	pop    edi
  405fd0:	cmp    edx,DWORD PTR [edx+0x47ef09d6]
  405fd6:	out    0x5b,al
  405fd8:	push   edx
  405fd9:	add    DWORD PTR [ecx],edx
  405fdb:	pusha  
  405fdc:	ficom  DWORD PTR [edi]
  405fde:	hlt    
  405fdf:	and    al,0xe3
  405fe1:	mov    bh,0xc6
  405fe3:	stc    
  405fe4:	es jnp 0x40602f
  405fe7:	or     eax,edi
  405fe9:	fnstcw WORD PTR ds:0xa0bf537e
  405fef:	xor    BYTE PTR [ecx+0x15],bh
  405ff2:	pop    esp
  405ff3:	jne    0x406025
  405ff5:	fisub  DWORD PTR [eax*4+0x1b251034]
  405ffc:	test   al,0x4a
  405ffe:	lods   eax,DWORD PTR ds:[esi]
  405fff:	mov    bh,BYTE PTR [eax]
  406001:	fpatan 
  406003:	cmp    eax,ecx
  406005:	sub    esi,esp
  406007:	int    0x27
  406009:	ins    BYTE PTR es:[edi],dx
  40600a:	push   edi
  40600b:	dec    edi
  40600c:	mov    esp,0xd91d760
  406011:	stos   BYTE PTR es:[edi],al
  406012:	jle    0x406082
  406014:	loopne 0x406085
  406016:	add    al,0x6d
  406018:	ficomp WORD PTR [esi+0x4a]
  40601b:	test   edx,0xb14e40f4
  406021:	push   ds
  406022:	inc    ecx
  406023:	ins    DWORD PTR es:[edi],dx
  406024:	inc    edi
  406025:	or     dh,BYTE PTR [edi+0x232203c8]
  40602b:	jbe    0x405fdc
  40602d:	test   DWORD PTR [ebx+0x55b28ba],ecx
  406033:	clc    
  406034:	mov    WORD PTR [ecx+0x7450b84b],ds
  40603a:	mov    ds:0xd09a2859,al
  40603f:	es fwait
  406041:	push   ebx
  406042:	sahf   
  406043:	add    BYTE PTR [ecx+0x33],bl
  406046:	dec    eax
  406047:	add    dh,BYTE PTR [ecx+eiz*4+0x567c65d3]
  40604e:	dec    esi
  40604f:	or     eax,0xa3c6d03d
  406054:	shl    ch,1
  406056:	leave  
  406057:	popf   
  406058:	and    DWORD PTR [ebx+edi*1],eax
  40605b:	mov    bh,BYTE PTR [ebp+0x2ae48bf2]
  406061:	mov    al,ds:0xfd961be7
  406066:	in     eax,dx
  406067:	mul    bl
  406069:	add    ah,ah
  40606b:	dec    esp
  40606c:	cmp    BYTE PTR [ecx+0x4f687a66],cl
  406072:	pop    es
  406073:	mov    edi,0xdde773fb
  406078:	int3   
  406079:	inc    esi
  40607a:	push   esi
  40607b:	loope  0x4060f3
  40607d:	jmp    DWORD PTR [ebx-0x53e72e12]
  406083:	pop    ds
  406084:	lock jnp 0x40606e
  406087:	cmp    edx,eax
  406089:	mov    bl,0xb0
  40608b:	and    eax,ecx
  40608d:	cmp    al,0xe
  40608f:	mov    ah,0x2b
  406091:	cmp    DWORD PTR [edi],eax
  406093:	cmp    esi,eax
  406095:	pop    es
  406096:	jmp    0x406082
  406098:	mov    al,ds:0x669d980
  40609d:	and    ebx,ebx
  40609f:	lods   eax,DWORD PTR ds:[esi]
  4060a0:	pop    ecx
  4060a1:	cmp    eax,0xd3b3b3f6
  4060a6:	call   edi
  4060a8:	sub    al,0x94
  4060aa:	mov    BYTE PTR [eax],ah
  4060ac:	adc    BYTE PTR [edi+ebx*8],ah
  4060af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b0:	clc    
  4060b1:	(bad)
  4060b4:	fs retf 0xb7bb
  4060b8:	push   edi
  4060b9:	inc    ebp
  4060ba:	fs xor al,0xbb
  4060be:	scas   eax,DWORD PTR es:[edi]
  4060bf:	dec    eax
  4060c0:	adc    al,BYTE PTR [edx-0x61011d85]
  4060c6:	aas    
  4060c7:	stos   DWORD PTR es:[edi],eax
  4060c8:	mov    DWORD PTR [ebx-0x7231dfbc],ecx
  4060ce:	pop    DWORD PTR [edx]
  4060d0:	push   ecx
  4060d1:	aam    0xc2
  4060d3:	sub    ecx,DWORD PTR [ebp+ebp*2-0x6374f9a8]
  4060da:	call   0x17fe:0x236e33c8
  4060e1:	jg     0x40611b
  4060e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e4:	stos   BYTE PTR es:[edi],al
  4060e5:	and    ah,BYTE PTR [eax+0x53]
  4060e8:	in     eax,0x66
  4060ea:	push   esp
  4060eb:	cmp    bl,BYTE PTR [ebp+0x43790f3e]
  4060f1:	mov    esp,0xe71d05dd
  4060f6:	pop    ebx
  4060f7:	and    al,0xe9
  4060f9:	xlat   BYTE PTR ds:[ebx]
  4060fa:	faddp  st(2),st
  4060fc:	inc    ecx
  4060fd:	stc    
  4060fe:	mov    esi,0xbbeb5611
  406103:	sub    eax,ecx
  406105:	in     eax,0xa7
  406107:	neg    DWORD PTR [eax]
  406109:	aaa    
  40610a:	fstp   st(1)
  40610c:	sbb    ebp,DWORD PTR [edi-0x4487b117]
  406112:	mov    ds:0x9755ad7e,eax
  406117:	(bad)  
  406118:	rcr    BYTE PTR [esi+0x2e7f9727],1
  40611e:	push   es
  40611f:	jnp    0x406139
  406121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406122:	add    al,0x6d
  406124:	xchg   edi,eax
  406125:	mov    esp,0xd16ec65a
  40612a:	cli    
  40612b:	call   0x71ccb689
  406130:	sbb    ecx,edi
  406132:	adc    DWORD PTR [esi],ecx
  406134:	jmp    0x406196
  406136:	test   DWORD PTR [eax],eax
  406138:	sbb    dl,cl
  40613a:	xchg   esi,eax
  40613b:	loop   0x406193
  40613d:	(bad)  
  40613e:	mov    bl,0xa
  406140:	cmove  esi,DWORD PTR [esi-0x7bcfb3fc]
  406147:	push   eax
  406148:	cld    
  406149:	mov    dh,0xe3
  40614b:	pop    eax
  40614c:	dec    edi
  40614d:	(bad)  
  40614e:	mov    al,ds:0x1e4d191f
  406153:	ja     0x406110
  406155:	xchg   DWORD PTR cs:[edi+ebp*4-0x5d9184fa],esi
  40615d:	shl    al,cl
  40615f:	retf   
  406160:	cmp    BYTE PTR [ebp+0x45eebd62],dl
  406166:	mov    al,0x87
  406168:	fmulp  st(2),st
  40616a:	cmp    ch,BYTE PTR [edi-0x66fcb894]
  406170:	mov    BYTE PTR [bx+si],dl
  406173:	xor    al,0xaa
  406175:	or     bl,BYTE PTR [ecx]
  406177:	xchg   ecx,eax
  406178:	mov    ebp,0xbd252072
  40617d:	cmp    eax,0xf65c23ab
  406182:	or     DWORD PTR [edx+0x2b4d5981],ecx
  406188:	push   ebx
  406189:	xchg   esp,eax
  40618a:	fisub  WORD PTR ds:0x9ebbdbda
  406190:	mov    bh,0x29
  406192:	jle    0x406148
  406194:	sbb    eax,0xef01628c
  406199:	js     0x4061fd
  40619b:	mov    ch,BYTE PTR [esi+0x3d]
  40619e:	cmc    
  40619f:	jmp    0x62a739a8
  4061a4:	mov    bl,0x38
  4061a6:	sbb    ecx,edi
  4061a8:	sahf   
  4061a9:	out    0xce,eax
  4061ab:	popf   
  4061ac:	imul   DWORD PTR [ebp+0x2d]
  4061af:	pop    ebp
  4061b0:	fwait
  4061b1:	rcr    ebx,cl
  4061b3:	jge    0x4061cf
  4061b5:	pop    eax
  4061b6:	ret    
  4061b7:	icebp  
  4061b8:	cmp    BYTE PTR [ebp+ecx*2-0x7c638ed0],0x90
  4061c0:	orps   xmm5,XMMWORD PTR [ebx+eax*4+0x5e2fbcdf]
  4061c8:	ja     0x406201
  4061ca:	int3   
  4061cb:	lahf   
  4061cc:	or     eax,0xdcae39b9
  4061d1:	pop    eax
  4061d2:	jl     0x4061ed
  4061d4:	jmp    0x73be:0x2b9623c6
  4061db:	or     edi,ebx
  4061dd:	xchg   ebp,eax
  4061de:	dec    ebx
  4061df:	fbstp  TBYTE PTR [edi+0x9b3cb89]
  4061e5:	pop    esi
  4061e6:	std    
  4061e7:	add    eax,0xeacfa918
  4061ec:	es loopne 0x4061c4
  4061ef:	mov    ecx,0x77cbf808
  4061f4:	in     al,0x86
  4061f6:	aas    
  4061f7:	jg     0x4061ae
  4061f9:	adc    ecx,ebx
  4061fb:	popf   
  4061fc:	mov    ebx,ds
  4061fe:	pop    ds
  4061ff:	(bad)  
  406200:	mov    eax,ds:0x990b7451
  406205:	ror    DWORD PTR [edi-0x43201348],0xad
  40620c:	and    esi,DWORD PTR [ebx-0x2f]
  40620f:	fidivr WORD PTR [edx]
  406211:	mov    es,WORD PTR [eax]
  406213:	pop    eax
  406214:	mov    edx,0x56c23d53
  406219:	mov    WORD PTR [eax],?
  40621b:	call   0x93bd86d9
  406220:	aad    0xdd
  406222:	fcmovnbe st,st(2)
  406224:	push   esi
  406225:	and    eax,DWORD PTR [edi]
  406227:	out    0xef,al
  406229:	(bad)  
  40622a:	pop    ebx
  40622b:	imul   ebx,DWORD PTR [edi+ebx*1-0x7188c1c4],0x57a837af
  406236:	adc    BYTE PTR [edx-0x61],dh
  406239:	hlt    
  40623a:	inc    eax
  40623b:	pop    esp
  40623c:	push   ss
  40623d:	inc    ecx
  40623e:	or     al,bh
  406240:	mov    ecx,0xdd4ea39d
  406245:	inc    edi
  406246:	outs   dx,DWORD PTR ds:[esi]
  406247:	cmp    DWORD PTR [ebx-0x7321d1cb],0x5a
  40624e:	fwait
  40624f:	mov    ds:0x68d3d866,al
  406254:	pop    ebp
  406255:	xor    cl,al
  406257:	ja     0x406289
  406259:	(bad)  
  40625a:	idiv   BYTE PTR [edi+0x4f]
  40625d:	stos   DWORD PTR es:[edi],eax
  40625e:	xchg   ebp,eax
  40625f:	mov    al,ds:0xbc3408c4
  406264:	call   FWORD PTR [edi]
  406266:	adc    eax,0xc4a9c965
  40626b:	neg    BYTE PTR [ecx+0x5e]
  40626e:	adc    DWORD PTR [esi],edx
  406270:	add    eax,0xe82471d6
  406275:	in     eax,0x7c
  406277:	cmp    dh,BYTE PTR [ecx]
  406279:	push   ecx
  40627a:	sbb    ch,al
  40627c:	popa   
  40627d:	ins    BYTE PTR es:[edi],dx
  40627e:	jne    0x406238
  406280:	mov    bl,0x42
  406282:	mov    cl,0xa5
  406284:	test   al,0x6f
  406286:	ins    BYTE PTR es:[edi],dx
  406287:	fcom   QWORD PTR [ebx]
  406289:	add    al,0x71
  40628b:	push   ebx
  40628c:	mov    edi,0x76a246f7
  406291:	xor    DWORD PTR [ecx-0x4fd67ad8],0x63
  406298:	ror    DWORD PTR [ebx],0x2a
  40629b:	xchg   ebp,eax
  40629c:	fsincos 
  40629e:	and    BYTE PTR [ebx],cl
  4062a0:	xor    al,0x49
  4062a2:	mov    ds:0xcffe8841,eax
  4062a7:	xchg   esi,eax
  4062a8:	or     eax,0x2fd2287f
  4062ad:	sub    DWORD PTR [edx],esp
  4062af:	icebp  
  4062b0:	or     eax,0x77c32f36
  4062b5:	inc    ebx
  4062b6:	int3   
  4062b7:	xchg   edi,eax
  4062b8:	dec    edx
  4062b9:	xchg   ebp,eax
  4062ba:	and    BYTE PTR [esi+0x2],bh
  4062bd:	neg    BYTE PTR [esi-0x26]
  4062c0:	inc    eax
  4062c1:	(bad)  
  4062c2:	jecxz  0x40628a
  4062c4:	fcom   DWORD PTR [esp+edi*2]
  4062c7:	jmp    0x40628c
  4062c9:	pop    ss
  4062ca:	repnz icebp 
  4062cc:	adc    edx,0x1
  4062cf:	or     cl,BYTE PTR [ebx]
  4062d1:	call   0x73d58a55
  4062d6:	aas    
  4062d7:	test   eax,0x8552046e
  4062dc:	pop    edi
  4062dd:	add    eax,0x7d545ba2
  4062e2:	(bad)  
  4062e4:	adc    eax,0x1979a419
  4062e9:	push   ss
  4062ea:	pop    ecx
  4062eb:	jg     0x40634c
  4062ed:	cdq    
  4062ee:	retf   
  4062ef:	retf   0x41e
  4062f2:	push   0x2189941b
  4062f7:	fstp   DWORD PTR [esi]
  4062f9:	push   edx
  4062fa:	stos   DWORD PTR es:[edi],eax
  4062fb:	(bad)
  4062ff:	stc    
  406300:	sbb    bh,bl
  406302:	pop    ss
  406303:	dec    eax
  406304:	sbb    eax,0xa3d4166d
  406309:	and    al,BYTE PTR [ebp+0x60]
  40630c:	jg     0x4062b2
  40630e:	sahf   
  40630f:	call   0x8285568f
  406314:	lods   al,BYTE PTR ds:[esi]
  406315:	aam    0x8c
  406317:	clc    
  406318:	popf   
  406319:	xchg   esi,eax
  40631a:	cld    
  40631b:	jnp    0x406302
  40631d:	jle    0x406345
  40631f:	xor    DWORD PTR [ebx+0x1d0ac75f],ebp
  406325:	mov    esp,0x206d069
  40632a:	mov    edx,0x530963fd
  40632f:	adc    BYTE PTR [eax],dl
  406331:	in     al,dx
  406332:	scas   eax,DWORD PTR es:[edi]
  406333:	cli    
  406334:	aam    0x37
  406336:	xor    BYTE PTR [edx+ebx*4-0x2b],0xc7
  40633b:	(bad)  
  40633c:	fdiv   DWORD PTR [esi+0x2e46cde4]
  406342:	in     al,0x93
  406344:	xor    eax,0xebb31d08
  406349:	(bad)  
  40634a:	sbb    eax,0xa798a13f
  40634f:	mov    ecx,0x33720fe3
  406354:	lods   al,BYTE PTR ds:[esi]
  406355:	lds    eax,FWORD PTR [ebx-0x7b75ce60]
  40635b:	clc    
  40635c:	mov    ch,0x7c
  40635e:	dec    esi
  40635f:	(bad)  
  406360:	mov    ?,esi
  406362:	and    BYTE PTR [ebp-0x1860f69],cl
  406368:	shr    BYTE PTR [eax-0x2b],1
  40636b:	jo     0x40636f
  40636d:	sbb    ebx,DWORD PTR [esi]
  40636f:	xor    al,0x49
  406371:	(bad)  
  406372:	lea    edi,[ebx+ebx*4]
  406375:	icebp  
  406376:	add    BYTE PTR [eax+0xf],dh
  406379:	call   0x14fa1e95
  40637e:	stc    
  40637f:	pop    ecx
  406380:	mul    BYTE PTR [eax]
  406382:	clc    
  406383:	int    0xe3
  406385:	mov    ecx,0xfcbf4aea
  40638a:	ret    0x9092
  40638d:	daa    
  40638e:	jne    0x40636f
  406390:	mov    edi,0xff41df53
  406395:	lds    esi,FWORD PTR [ebp-0x4c0dc7d9]
  40639b:	and    eax,DWORD PTR [esi+0x16]
  40639e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40639f:	or     BYTE PTR ds:0x3daae521,ah
  4063a5:	scas   al,BYTE PTR es:[edi]
  4063a6:	cmp    bh,BYTE PTR [edi-0x5427182d]
  4063ac:	inc    ecx
  4063ad:	jge    0x40641e
  4063af:	jle    0x4063f2
  4063b1:	into   
  4063b2:	cmp    eax,0xc428018c
  4063b7:	pop    ecx
  4063b8:	mov    ebx,0x52b79877
  4063bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063be:	stos   DWORD PTR es:[edi],eax
  4063bf:	fisttp QWORD PTR [ebx+0x321c5b00]
  4063c5:	loopne 0x406375
  4063c7:	mov    ds:0x36ec58,al
  4063cc:	out    dx,eax
  4063cd:	sbb    BYTE PTR [edx+ebp*8-0x72],al
  4063d1:	or     edx,edx
  4063d3:	cmp    ch,BYTE PTR [esi+esi*2]
  4063d6:	aaa    
  4063d7:	jmp    0x411ca970
  4063dc:	jmp    0x8f14:0xa610d081
  4063e3:	jecxz  0x406400
  4063e5:	in     al,0xe
  4063e7:	mov    edi,0x6648004b
  4063ec:	inc    edi
  4063ed:	adc    esi,eax
  4063ef:	mov    BYTE PTR [edi],al
  4063f1:	add    DWORD PTR [edx+0x5c],esp
  4063f4:	aad    0xc
  4063f6:	and    al,0x63
  4063f8:	pop    eax
  4063f9:	sbb    ebx,DWORD PTR [edi]
  4063fb:	xor    ebx,0x1a
  4063fe:	pop    ecx
  4063ff:	xlat   BYTE PTR ds:[ebx]
  406400:	jbe    0x406446
  406402:	xor    BYTE PTR [ecx+ebx*1-0x2de7cfd7],cl
  406409:	pop    edx
  40640a:	cld    
  40640b:	int    0x94
  40640d:	inc    esi
  40640e:	adc    BYTE PTR [ebp-0x38],al
  406411:	pop    ecx
  406412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406413:	and    BYTE PTR [eax+0x47b0ab01],dh
  406419:	test   DWORD PTR [edi+0x6cd192f5],ebx
  40641f:	das    
  406420:	pusha  
  406421:	shr    DWORD PTR [edx+0x10],0xf3
  406425:	imul   ebp,DWORD PTR [edx-0x103f84a3],0x12
  40642c:	rol    BYTE PTR [edi+0x59b7e509],cl
  406432:	adc    eax,0x8148ba82
  406437:	popf   
  406438:	inc    ecx
  406439:	sub    eax,0xfed22dc1
  40643e:	je     0x4063d8
  406440:	iret   
  406441:	xchg   DWORD PTR [ebp-0x66],eax
  406444:	inc    eax
  406445:	retf   0xd7cb
  406448:	jo     0x406403
  40644a:	aam    0xae
  40644c:	add    eax,0x15d19fac
  406451:	popa   
  406452:	data16 (bad) 
  406454:	cs pop esp
  406456:	retf   
  406457:	(bad)  
  406458:	jg     0x406429
  40645a:	mov    esi,0x2163bd6a
  40645f:	addr16 fwait
  406461:	xor    al,0x58
  406463:	pop    ds
  406464:	inc    ebp
  406465:	inc    ecx
  406466:	push   0x15
  406468:	sub    ebp,DWORD PTR [edx-0x750c01a0]
  40646e:	addr16 mov ebp,0x4e5bca07
  406474:	das    
  406475:	and    DWORD PTR [edi],ebp
  406477:	dec    eax
  406478:	out    0xdf,eax
  40647a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40647b:	or     eax,0x7a98f280
  406480:	lsl    ebx,WORD PTR [ebx+0x55075d47]
  406487:	retf   
  406488:	sbb    BYTE PTR [ebp-0x48],0xcc
  40648c:	stos   DWORD PTR es:[edi],eax
  40648d:	int    0x6d
  40648f:	hlt    
  406490:	retf   0xc869
  406493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406494:	ss lahf 
  406496:	mov    WORD PTR [ebp+eiz*1+0x48410a8a],?
  40649d:	int    0x2d
  40649f:	mov    esi,0x32902bed
  4064a4:	sub    edx,esi
  4064a6:	pop    edi
  4064a7:	dec    esi
  4064a8:	add    al,0x7
  4064aa:	pushf  
  4064ab:	mov    bh,0xe6
  4064ad:	xchg   esp,eax
  4064ae:	and    DWORD PTR [ecx+0x1b],eax
  4064b1:	xor    DWORD PTR [esi+0x7e],ebx
  4064b4:	daa    
  4064b5:	(bad)
  4064b9:	jnp    0x40643b
  4064bb:	sub    ecx,DWORD PTR [ecx+0x78]
  4064be:	mov    bh,0x96
  4064c0:	ds leave 
  4064c2:	add    al,0x91
  4064c4:	std    
  4064c5:	les    esi,FWORD PTR [esi-0x467dc237]
  4064cb:	shr    DWORD PTR [esi],1
  4064cd:	repz mov dh,0xe2
  4064d0:	add    dh,BYTE PTR [eax+0x215af128]
  4064d6:	ret    
  4064d7:	mov    eax,ds:0x77167a8b
  4064dc:	or     edx,DWORD PTR [eax+0x11]
  4064df:	push   ds
  4064e0:	mov    edx,0x14a58a65
  4064e5:	out    0xba,al
  4064e7:	sbb    edi,DWORD PTR [ebp+0x75a371d1]
  4064ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ee:	jle    0x4064e4
  4064f0:	jb     0x40655a
  4064f2:	fiadd  WORD PTR [ebp-0x21]
  4064f5:	out    0x8e,eax
  4064f7:	into   
  4064f8:	rol    BYTE PTR [ebx+eax*4-0x20657a8],1
  4064ff:	sbb    al,0x60
  406501:	cld    
  406502:	cmc    
  406503:	jae    0x40656f
  406505:	inc    ebp
  406506:	push   eax
  406507:	and    al,0x4a
  406509:	sbb    ebp,0x44bc664d
  40650f:	ret    
  406510:	retf   
  406511:	(bad)  
  406512:	fsub   DWORD PTR ds:0xa7b5f71c
  406518:	arpl   WORD PTR [esi+eiz*8+0x1d8ff7c3],ax
  40651f:	push   ebp
  406520:	xor    al,0x73
  406522:	push   ecx
  406523:	enter  0x40e7,0x56
  406527:	out    dx,al
  406528:	mov    ah,0xad
  40652a:	and    DWORD PTR [eax],0xffffffdd
  40652d:	mov    bh,0x4f
  40652f:	push   es
  406530:	mov    ?,WORD PTR [ebx]
  406532:	add    ah,BYTE PTR ds:0xa7ca4040
  406538:	mov    ecx,0x66f051ff
  40653d:	ret    
  40653e:	add    al,dl
  406540:	lods   eax,DWORD PTR ds:[esi]
  406541:	push   ebp
  406542:	cmp    DWORD PTR [eax-0x13bc4f5],edi
  406548:	mov    al,0x7f
  40654a:	add    al,0x8c
  40654c:	adc    eax,0x40c7829a
  406551:	pop    es
  406552:	mov    BYTE PTR [ecx+0x7a],ah
  406555:	inc    edx
  406556:	retf   0xd1a7
  406559:	mov    gs,edi
  40655b:	sub    BYTE PTR [edx-0x2fae8e0],dl
  406561:	fdivr  DWORD PTR [eax+0x4a]
  406564:	out    dx,al
  406565:	push   edi
  406566:	popa   
  406567:	jae    0x406553
  406569:	retf   0x90c8
  40656c:	jnp    0x406555
  40656e:	and    al,0x80
  406570:	xor    ebx,DWORD PTR [esi]
  406572:	add    ebx,DWORD PTR ds:0x69f75c1d
  406578:	std    
  406579:	ins    DWORD PTR es:[edi],dx
  40657a:	leave  
  40657b:	sub    ah,dh
  40657d:	adc    edx,DWORD PTR [eax-0x71]
  406580:	repz ror bh,1
  406583:	mov    ebp,0x8ddcd655
  406588:	sub    eax,0x6a4d887f
  40658d:	jmp    0xcf8755cd
  406592:	add    dh,BYTE PTR [ebx]
  406594:	sbb    al,0x8e
  406596:	adc    ah,BYTE PTR [edx-0x7bd7eb80]
  40659c:	jo     0x406606
  40659e:	jmp    0x26f4:0x2e4f5287
  4065a5:	(bad)  
  4065a7:	clc    
  4065a8:	add    BYTE PTR [esi+eax*8],ah
  4065ab:	dec    eax
  4065ac:	rcl    BYTE PTR [edx],1
  4065ae:	ror    DWORD PTR [edi],cl
  4065b0:	bound  ebp,QWORD PTR [ebx]
  4065b2:	lea    ebp,[ecx*4-0x7198b06b]
  4065b9:	rcr    DWORD PTR ds:0xb48d97fc,1
  4065bf:	jno    0x406581
  4065c1:	jo     0x406610
  4065c3:	shl    bl,1
  4065c5:	rcl    DWORD PTR [esi+eiz*1+0x4a0c9d91],cl
  4065cc:	push   ebx
  4065cd:	mov    eax,0x1ef73c05
  4065d2:	int    0xce
  4065d4:	rcl    BYTE PTR [edi+0x4dbd98b8],cl
  4065da:	jne    0x40659e
  4065dc:	cli    
  4065dd:	in     al,dx
  4065de:	out    0x58,al
  4065e0:	jge    0x4065a6
  4065e2:	or     BYTE PTR [esi-0x68],dh
  4065e5:	push   eax
  4065e6:	aad    0xd
  4065e8:	cmp    ch,BYTE PTR [edx-0x59]
  4065eb:	lods   al,BYTE PTR ds:[esi]
  4065ec:	dec    esp
  4065ed:	aaa    
  4065ee:	dec    edi
  4065ef:	fdivr  DWORD PTR [esi]
  4065f1:	shl    DWORD PTR [esi],1
  4065f3:	pop    edi
  4065f4:	das    
  4065f5:	mov    ecx,0xbeca006a
  4065fa:	cmp    eax,0xf1a8dd8d
  4065ff:	in     eax,0x68
  406601:	mov    BYTE PTR [eax+0x4a770233],dl
  406607:	push   esi
  406608:	fwait
  406609:	cli    
  40660a:	retf   0x9606
  40660d:	outs   dx,BYTE PTR ds:[esi]
  40660e:	icebp  
  40660f:	(bad)  
  406610:	imul   edx,edx,0x7920721b
  406616:	jmp    0xf2c5a6a0
  40661b:	fs cli 
  40661d:	loope  0x4065e6
  40661f:	imul   ebx,DWORD PTR [esi+edi*2-0x5d6d97c1],0xffffffd1
  406627:	inc    eax
  406628:	mov    al,ds:0x4bc8e4dc
  40662d:	or     DWORD PTR [ebp-0x2e],esi
  406630:	lock mov dl,0x69
  406633:	ins    BYTE PTR es:[edi],dx
  406634:	sub    eax,0xacd5cec8
  406639:	jecxz  0x40662a
  40663b:	mov    ah,0x4c
  40663d:	push   ebx
  40663e:	pop    ds
  40663f:	test   eax,0x941ace71
  406644:	cmc    
  406645:	bnd jb 0x4065db
  406648:	cmp    DWORD PTR [ecx+0x41f0b91c],esi
  40664e:	jmp    0x2939:0xe25e233f
  406655:	enter  0x7cf1,0x2c
  406659:	je     0x4065f6
  40665b:	in     eax,dx
  40665c:	call   0xc97f:0x1d8eade2
  406663:	pop    ebx
  406664:	js     0x40663c
  406666:	aad    0xab
  406668:	stos   BYTE PTR es:[edi],al
  406669:	add    al,bl
  40666b:	push   eax
  40666c:	retf   
  40666d:	sub    DWORD PTR [edi],edx
  40666f:	int    0xae
  406671:	enter  0xa10d,0x6
  406675:	dec    ebx
  406676:	data16 int 0xc0
  406679:	ja     0x406638
  40667b:	inc    edx
  40667c:	mov    ebp,0xbeb2bf40
  406681:	mov    esi,0xcc47e3c7
  406686:	adc    eax,0x15f6b7fe
  40668b:	stc    
  40668c:	inc    esi
  40668d:	and    DWORD PTR [edi],ecx
  40668f:	fs adc esi,0xffffffcb
  406693:	jb     0x406711
  406695:	and    ah,cl
  406697:	push   cs
  406698:	js     0x406631
  40669a:	sar    DWORD PTR [ebp+0x5cce21f6],0xfb
  4066a1:	(bad)  
  4066a2:	repnz and BYTE PTR [esi-0x4c],cl
  4066a6:	retf   
  4066a7:	and    ecx,DWORD PTR [ebx-0x76]
  4066aa:	arpl   di,si
  4066ac:	jns    0x406663
  4066ae:	sub    eax,0xa4ea31a8
  4066b3:	inc    ebp
  4066b4:	jmp    0x4066fd
  4066b6:	add    BYTE PTR [ebx-0x439c96bf],bh
  4066bc:	scas   al,BYTE PTR es:[edi]
  4066bd:	mov    ds:0x855989e8,eax
  4066c2:	(bad)  
  4066c3:	call   0xf865b797
  4066c8:	ins    BYTE PTR es:[edi],dx
  4066c9:	add    al,0xaa
  4066cb:	loopne 0x4066da
  4066cd:	push   eax
  4066ce:	sub    DWORD PTR [ecx],ebp
  4066d0:	sbb    eax,0x3abc0e7f
  4066d5:	leave  
  4066d6:	jle    0x406687
  4066d8:	aad    0x51
  4066da:	or     esp,DWORD PTR [edi]
  4066dc:	mov    DWORD PTR ds:0xb918a32d,edi
  4066e2:	cmp    BYTE PTR [esi+esi*1],al
  4066e5:	mov    ds:0x828e80a9,al
  4066ea:	ja     0x4066e1
  4066ec:	retf   
  4066ed:	or     esp,edi
  4066ef:	mov    DWORD PTR [ecx+0x486e5bd6],eax
  4066f5:	stos   DWORD PTR es:[edi],eax
  4066f6:	mov    ecx,0x14ed4ecf
  4066fb:	xor    al,0xd3
  4066fd:	sbb    BYTE PTR [ebp+0x49],0x41
  406701:	lahf   
  406702:	pop    ss
  406703:	cld    
  406704:	in     al,dx
  406705:	int    0xd6
  406707:	fldenv [eax-0x10529be9]
  40670d:	or     ah,BYTE PTR [ebx-0x24b85b7f]
  406713:	mov    WORD PTR ds:0x1334f45,?
  406719:	je     0x40678e
  40671b:	rcl    DWORD PTR [esp+ecx*8+0x12],1
  40671f:	sbb    BYTE PTR [ecx-0x65],al
  406722:	and    esi,DWORD PTR [esi]
  406724:	call   0x87c681c2
  406729:	enter  0x75f8,0xdc
  40672d:	or     eax,0x492f6d79
  406732:	sbb    BYTE PTR [esi],ah
  406734:	xchg   BYTE PTR cs:[edx-0x38],bh
  406738:	mov    edx,0x8b5eb766
  40673d:	fnsave [esi+0x4f]
  406740:	sahf   
  406741:	sub    eax,0x7ed7bddd
  406746:	hlt    
  406747:	cmc    
  406748:	mov    esp,0x86cfd0fd
  40674d:	dec    ebx
  40674e:	scas   al,BYTE PTR es:[edi]
  40674f:	inc    esi
  406750:	mov    WORD PTR [esi-0x5b789947],fs
  406756:	sbb    eax,0xa76be77d
  40675b:	daa    
  40675c:	mov    ebx,0x194e957f
  406761:	lods   al,BYTE PTR ds:[esi]
  406762:	mov    esp,0xb2b18d1f
  406767:	xor    DWORD PTR [ecx+0xe],ebp
  40676a:	dec    edx
  40676b:	sbb    eax,0xa2b94563
  406770:	push   edx
  406771:	push   ds
  406772:	jne    0x406723
  406774:	mov    al,ds:0xffb2af0c
  406779:	mov    ecx,0x2fc6f73a
  40677e:	dec    ebp
  40677f:	ret    0xb0e
  406782:	iret   
  406783:	int    0x4c
  406785:	dec    eax
  406786:	call   0x33b5a9a
  40678b:	loope  0x40677b
  40678d:	lds    esi,FWORD PTR [ebx-0x23614d06]
  406793:	jo     0x406743
  406795:	popf   
  406796:	mov    DWORD PTR [ebx-0x3df31979],ebp
  40679c:	js     0x4067e1
  40679e:	out    dx,eax
  40679f:	xor    ebp,DWORD PTR [edx]
  4067a1:	int    0x5b
  4067a3:	mov    ds:0x6ec38daf,al
  4067a8:	addr16 lahf 
  4067aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067ab:	sbb    eax,0xa39b7782
  4067b0:	jmp    0x8c6:0x7b70728c
  4067b7:	mov    dh,0xf2
  4067b9:	pop    edi
  4067ba:	aas    
  4067bb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4067bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067be:	and    ebp,DWORD PTR [esi]
  4067c0:	cmc    
  4067c1:	outs   dx,BYTE PTR ds:[esi]
  4067c3:	int3   
  4067c4:	mov    fs,WORD PTR [eax+0x5c54814f]
  4067ca:	push   esp
  4067cb:	push   esi
  4067cc:	dec    ebx
  4067cd:	shl    BYTE PTR [ebx],1
  4067cf:	lock adc dh,BYTE PTR [eax+0x7a]
  4067d3:	int3   
  4067d4:	popf   
  4067d5:	dec    ecx
  4067d6:	repnz retf 0xd2b5
  4067da:	int    0x54
  4067dc:	inc    ebx
  4067dd:	mov    ds:0x99a30c41,eax
  4067e2:	punpckldq mm5,DWORD PTR [edx+0x2c]
  4067e6:	push   esp
  4067e7:	mov    bh,0xf9
  4067e9:	inc    ecx
  4067ea:	xor    al,0x86
  4067ec:	fist   DWORD PTR [ebx+ebx*2-0x47]
  4067f0:	sbb    dl,BYTE PTR [ecx]
  4067f2:	pop    ebx
  4067f3:	fsubr  st(1),st
  4067f5:	shl    DWORD PTR [ebx],cl
  4067f7:	mov    ch,0xad
  4067f9:	mov    ch,bl
  4067fb:	(bad)  
  4067fc:	es in  eax,0x3c
  4067ff:	ins    DWORD PTR es:[edi],dx
  406800:	pop    eax
  406801:	lds    esp,FWORD PTR ss:[ebp+0x3f]
  406805:	in     al,dx
  406806:	(bad)  
  406807:	mov    WORD PTR [esi-0x638d3792],ss
  40680d:	aam    0x6f
  40680f:	jmp    0xe286:0x95e5d5e0
  406816:	inc    esp
  406817:	leave  
  406818:	xor    ah,bh
  40681a:	repz mov esp,0xc0d992d3
  406820:	jne    0x4068a1
  406822:	xor    dh,BYTE PTR [edx+esi*4-0x33]
  406826:	dec    edi
  406827:	jnp    0x40684e
  406829:	xlat   BYTE PTR ds:[ebx]
  40682a:	inc    esi
  40682b:	mov    esi,0xde604e93
  406830:	sbb    eax,0x8f76e017
  406835:	pusha  
  406836:	jmp    0x6a65:0xf6f46148
  40683d:	ins    DWORD PTR es:[edi],dx
  40683e:	(bad)  
  40683f:	xchg   edx,eax
  406840:	inc    esi
  406841:	test   eax,0xadd6a8c0
  406846:	retf   
  406847:	inc    esi
  406848:	inc    esp
  406849:	add    bh,0xdf
  40684c:	pop    ebp
  40684d:	mov    ecx,0xb39cdbb5
  406852:	push   0xa7c2c46f
  406857:	push   esi
  406858:	adc    ebx,DWORD PTR [ebx+edx*2-0x61]
  40685c:	mov    eax,DWORD PTR [edi+0x5]
  40685f:	cdq    
  406860:	xchg   BYTE PTR [edx],bl
  406862:	std    
  406863:	shl    BYTE PTR [ebx],1
  406865:	scas   al,BYTE PTR es:[edi]
  406866:	fdivr  QWORD PTR [ecx+0x27]
  406869:	icebp  
  40686a:	pop    ds
  40686b:	cwde   
  40686c:	pusha  
  40686d:	fimul  WORD PTR [eax]
  40686f:	pop    ebx
  406870:	add    bl,BYTE PTR [eax+0x38a67874]
  406876:	adc    DWORD PTR [edx-0x2],ebp
  406879:	(bad)  
  40687a:	ss call 0xe0d1d90a
  406880:	cld    
  406881:	cld    
  406882:	jae    0x4068da
  406884:	and    bh,BYTE PTR [ebp-0x79]
  406887:	cmp    eax,0xc22f2caf
  40688c:	out    0x0,al
  40688e:	fist   DWORD PTR [ebx]
  406890:	out    dx,al
  406891:	test   eax,0xe2e1da9f
  406896:	pop    edx
  406897:	call   DWORD PTR [edx-0x2390597d]
  40689d:	popa   
  40689e:	dec    eax
  40689f:	sbb    DWORD PTR [ebp-0x64],edx
  4068a2:	xor    eax,0x52bcab52
  4068a7:	call   0xe179fa56
  4068ac:	ss in  eax,dx
  4068ae:	std    
  4068af:	mov    dl,0x9e
  4068b1:	test   al,0x6e
  4068b3:	mov    edi,0x9184a0cd
  4068b8:	outs   dx,DWORD PTR ds:[esi]
  4068b9:	jle    0x40687c
  4068bb:	jns    0x4068f1
  4068bd:	jns    0x406859
  4068bf:	dec    ebp
  4068c0:	add    BYTE PTR [edx],0x2b
  4068c3:	pop    edx
  4068c4:	sti    
  4068c5:	shl    BYTE PTR [ecx+ebp*4],1
  4068c8:	add    BYTE PTR [ecx-0x35baf0e4],ch
  4068ce:	mov    edx,0x73cae83a
  4068d3:	xchg   bh,dl
  4068d5:	(bad)  
  4068d6:	stos   DWORD PTR es:[edi],eax
  4068d7:	pusha  
  4068d8:	mov    dh,0xac
  4068da:	ret    
  4068db:	test   DWORD PTR [edi-0x37],0x2d5faee0
  4068e2:	out    0x3,eax
  4068e4:	push   0x1f
  4068e6:	in     al,dx
  4068e7:	add    ah,bl
  4068e9:	pushf  
  4068ea:	sbb    DWORD PTR [ecx+esi*4+0x3b160728],eax
  4068f1:	mov    ah,0x5a
  4068f3:	outs   dx,DWORD PTR ds:[esi]
  4068f4:	inc    edi
  4068f5:	pop    ecx
  4068f6:	lea    esp,[ecx-0xd7da0ca]
  4068fc:	fsub   DWORD PTR [ebx+0x1682f657]
  406902:	out    dx,eax
  406903:	mov    eax,DWORD PTR [ecx+0x73]
  406906:	idiv   ecx
  406908:	loope  0x40694f
  40690a:	cli    
  40690b:	js     0x4068eb
  40690d:	push   es
  40690e:	popa   
  40690f:	ucomiss xmm3,xmm6
  406912:	call   0x874996ce
  406917:	fcomp  QWORD PTR [edx+0x6a]
  40691a:	push   ebp
  40691b:	or     ecx,DWORD PTR [ecx+0x1aa39e5f]
  406921:	inc    esp
  406922:	fs in  eax,0x3b
  406925:	sbb    eax,0x1d7b5f24
  40692a:	push   esi
  40692b:	outs   dx,BYTE PTR ds:[esi]
  40692c:	sub    ecx,esp
  40692e:	sbb    DWORD PTR [edi+ebp*4],ecx
  406931:	sbb    dl,cl
  406933:	sub    ch,dh
  406935:	push   0x9a2f0395
  40693a:	wrmsr  
  40693c:	loopne 0x4068e6
  40693e:	repz adc al,0xe4
  406941:	push   0x9f5bf6af
  406946:	stos   BYTE PTR es:[edi],al
  406947:	mov    ah,0xbc
  406949:	ja     0x40693a
  40694b:	cdq    
  40694c:	mov    bh,0x77
  40694e:	jmp    0x1cd37a98
  406953:	xor    DWORD PTR [eax],edx
  406955:	xchg   BYTE PTR [ebp-0x6d851d91],ah
  40695b:	sbb    al,0x49
  40695d:	cmp    ebp,ecx
  40695f:	jmp    0x595f:0x68fcc500
  406966:	adc    DWORD PTR [eax+0x7388ff56],esi
  40696c:	loope  0x4069a6
  40696e:	je     0x40693f
  406970:	cdq    
  406971:	sbb    DWORD PTR [eax],esp
  406973:	inc    ebx
  406974:	sar    DWORD PTR [edx+ecx*4+0x303b8f8b],0xe8
  40697c:	add    eax,DWORD PTR [edi]
  40697e:	pop    edi
  40697f:	gs stc 
  406981:	ret    
  406982:	fisttp DWORD PTR [edi]
  406984:	in     al,0x5b
  406986:	mov    edx,0xe713a405
  40698b:	cmp    dh,BYTE PTR [esi-0x4dc67a74]
  406991:	sub    esp,eax
  406993:	dec    esp
  406994:	(bad)  
  406995:	ja     0x4069d3
  406997:	mov    al,ds:0x2463cf39
  40699c:	push   eax
  40699d:	retf   
  40699e:	sub    esp,DWORD PTR [edi+0x7]
  4069a1:	shr    BYTE PTR [ecx],cl
  4069a3:	xchg   BYTE PTR [edx+edi*2-0x116d30ac],dh
  4069aa:	push   ss
  4069ab:	xchg   ecx,eax
  4069ac:	addr16 and eax,0x687bf6bc
  4069b2:	pop    ds
  4069b3:	sbb    ebx,DWORD PTR [edx-0x11]
  4069b6:	ja     0x4069a3
  4069b8:	inc    edx
  4069b9:	and    al,0xef
  4069bb:	(bad)  
  4069bc:	cwde   
  4069bd:	sti    
  4069be:	mov    esp,0xa589364c
  4069c3:	stc    
  4069c4:	out    dx,eax
  4069c5:	test   cl,ch
  4069c7:	lods   eax,DWORD PTR ds:[esi]
  4069c8:	rcl    BYTE PTR [ebx-0x45024df1],0x8f
  4069cf:	arpl   WORD PTR [ecx-0x17],ax
  4069d2:	sub    edx,DWORD PTR [ebx]
  4069d4:	dec    eax
  4069d5:	test   eax,0x4930f9ae
  4069da:	lds    eax,FWORD PTR [esi-0x3d440e62]
  4069e0:	or     BYTE PTR [ecx+0x3f5f21c],0x4
  4069e7:	test   eax,0xb5f6b04a
  4069ec:	mov    edi,0xb7c2fb4f
  4069f1:	(bad)  
  4069f2:	repnz or esp,edi
  4069f5:	imul   esi,DWORD PTR [esi+ecx*8+0x3c],0x41
  4069fa:	add    eax,0xd9d4fe8b
  4069ff:	call   0x1f4f8f32
  406a04:	lahf   
  406a05:	and    DWORD PTR [eax-0x69013e49],eax
  406a0b:	call   0xd517:0x753a162f
  406a12:	dec    edi
  406a13:	mov    esp,0xdee698b7
  406a18:	ja     0x4069e3
  406a1a:	(bad)  
  406a1b:	pop    ebp
  406a1c:	in     eax,0xe9
  406a1e:	test   al,0x89
  406a20:	mov    BYTE PTR [edi],ah
  406a22:	lock fdivp st(0),st
  406a25:	pushf  
  406a26:	add    DWORD PTR [ebx],ebp
  406a28:	fistp  DWORD PTR [edi-0x3]
  406a2b:	fst    DWORD PTR [edi]
  406a2d:	ss dec eax
  406a2f:	mov    eax,0x1917b476
  406a34:	inc    edi
  406a35:	jbe    0x406ab3
  406a37:	inc    esi
  406a38:	rol    DWORD PTR [eax+0x14],cl
  406a3b:	repnz mov eax,ds:0x88e8d433
  406a41:	cmc    
  406a42:	and    edi,DWORD PTR [edx-0x6b1e49a]
  406a48:	fwait
  406a49:	cmp    DWORD PTR [ecx+0x4b3434a],0xffffffc4
  406a50:	push   esi
  406a51:	outs   dx,BYTE PTR ds:[esi]
  406a52:	call   0x18a39a7e
  406a57:	arpl   di,sp
  406a59:	push   ss
  406a5a:	loop   0x4069f8
  406a5c:	dec    ebx
  406a5d:	push   0xffffffb6
  406a5f:	retf   0xf343
  406a62:	cmp    eax,0x533ad2b8
  406a67:	stos   BYTE PTR es:[edi],al
  406a68:	sub    eax,0x4f29535e
  406a6d:	pop    ss
  406a6e:	es sub eax,0xff99806f
  406a74:	and    esi,DWORD PTR [ebx-0x24]
  406a77:	xchg   DWORD PTR [eax],esp
  406a79:	loope  0x406a03
  406a7b:	sbb    dl,BYTE PTR [edi+edx*4-0x17]
  406a7f:	cs sar ah,0xd0
  406a83:	push   0xffffffc7
  406a85:	loop   0x406aec
  406a87:	push   0x3526f8da
  406a8c:	mov    DWORD PTR [eax-0x4f],esi
  406a8f:	jb     0x406a51
  406a91:	pop    es
  406a92:	dec    eax
  406a93:	mov    eax,0xe221f31e
  406a98:	in     al,0x18
  406a9a:	test   esp,edx
  406a9c:	int3   
  406a9d:	mov    bl,BYTE PTR [esi+0x1f]
  406aa0:	js     0x406aff
  406aa2:	call   0x683b:0xa686cad0
  406aa9:	mov    eax,ds:0xa66333d7
  406aae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aaf:	adc    al,0x72
  406ab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ab2:	jae    0x406a96
  406ab4:	test   al,0x24
  406ab6:	push   esi
  406ab7:	and    eax,0xf03f9cca
  406abc:	mov    esp,0xe5e21fa1
  406ac1:	push   ecx
  406ac2:	inc    eax
  406ac3:	inc    BYTE PTR [ecx+0x1f5a3b97]
  406ac9:	push   esp
  406aca:	test   al,0x2a
  406acc:	sar    DWORD PTR ds:[edi],cl
  406acf:	(bad)
  406ad2:	xor    eax,0xc15c685
  406ad7:	cmp    al,0xf0
  406ad9:	sub    BYTE PTR [edx],dh
  406adb:	mov    ch,0xd2
  406add:	add    esp,0x1c48a9d6
  406ae3:	xchg   edi,eax
  406ae4:	pop    esp
  406ae5:	pop    eax
  406ae6:	(bad)  
  406ae7:	lds    edx,FWORD PTR [eax+eiz*8-0x350ec8ad]
  406aee:	ret    
  406aef:	lds    ebp,FWORD PTR [eax]
  406af1:	fisubr DWORD PTR [ecx+0x532ef143]
  406af7:	pop    ss
  406af8:	jmp    0x406b05
  406afa:	jge    0x406b52
  406afc:	sub    eax,DWORD PTR [ebx]
  406afe:	sub    al,0x5a
  406b00:	sbb    BYTE PTR [ebx-0x1592da56],0x11
  406b07:	xchg   ecx,eax
  406b08:	pop    eax
  406b09:	adc    eax,eax
  406b0b:	xor    al,0xfa
  406b0d:	or     esi,ebp
  406b0f:	ror    ch,cl
  406b11:	dec    edx
  406b12:	sub    BYTE PTR [ebx+0x1b40067c],0xaf
  406b19:	loop   0x406b02
  406b1b:	inc    esi
  406b1c:	rcr    DWORD PTR [edi+0x27ebab07],0x85
  406b23:	(bad)  [eax-0x778ae6e7]
  406b29:	dec    esi
  406b2a:	jno    0x406b9d
  406b2c:	loopne 0x406b00
  406b2e:	gs sbb eax,ebx
  406b31:	(bad)  
  406b32:	bswap  ebp
  406b34:	cmp    al,0xf
  406b36:	fdiv   st(6),st
  406b38:	fcom   DWORD PTR [edx+ecx*2]
  406b3b:	xchg   esp,eax
  406b3c:	jp     0x406b17
  406b3e:	out    0xad,eax
  406b40:	and    eax,0xe5966ea2
  406b45:	loopne 0x406af0
  406b47:	hlt    
  406b48:	adc    eax,0x8bc7a0d0
  406b4d:	stc    
  406b4e:	js     0x406ae5
  406b50:	(bad)  
  406b51:	ins    BYTE PTR es:[edi],dx
  406b52:	inc    esp
  406b53:	cs adc ebx,ebx
  406b56:	imul   esi,DWORD PTR [esi-0x6fb54401],0x5f3188e4
  406b60:	sbb    al,0x8b
  406b62:	fs cmp eax,0xc8d75c09
  406b68:	sbb    ah,cl
  406b6a:	mov    edi,0x80ff6851
  406b6f:	js     0x406b02
  406b71:	sbb    al,0x39
  406b73:	test   cl,bh
  406b75:	aad    0xc8
  406b77:	int3   
  406b78:	jno    0x406b17
  406b7a:	dec    ebx
  406b7b:	inc    ebx
  406b7c:	jmp    0x2acd7f67
  406b81:	or     BYTE PTR [edi-0x4b6398e5],dl
  406b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b88:	mul    DWORD PTR [ebp-0x44a01a45]
  406b8e:	data16 fwait
  406b90:	xor    ebp,DWORD PTR [edi]
  406b92:	cwde   
  406b93:	inc    ebp
  406b94:	sbb    BYTE PTR [esi+0x6afac028],bh
  406b9a:	std    
  406b9b:	add    bh,0x9e
  406b9e:	inc    edx
  406b9f:	add    eax,DWORD PTR [edi]
  406ba1:	adc    dh,BYTE PTR ds:0x46c3c696
  406ba7:	aaa    
  406ba8:	out    0xf3,al
  406baa:	scas   eax,DWORD PTR es:[edi]
  406bab:	out    dx,eax
  406bac:	and    eax,0x551f54bb
  406bb1:	and    BYTE PTR [ecx+0x7c],ah
  406bb4:	stc    
  406bb5:	cdq    
  406bb6:	call   0xd8c5:0xbeadec72
  406bbd:	aad    0xfb
  406bbf:	retf   0x138c
  406bc2:	inc    ebp
  406bc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc4:	(bad)  
  406bc6:	xchg   edx,eax
  406bc7:	fbld   TBYTE PTR [ebx-0x28]
  406bca:	scas   eax,DWORD PTR es:[edi]
  406bcb:	inc    ecx
  406bcc:	mov    WORD PTR [eax+0x65],?
  406bcf:	ret    
  406bd0:	and    BYTE PTR ss:[esi-0x64],ch
  406bd4:	mov    DWORD PTR [eax],0xf1abb832
  406bda:	popa   
  406bdb:	adc    DWORD PTR [ecx+0x58],ebx
  406bde:	test   eax,0x72fc6748
  406be3:	lods   eax,DWORD PTR ds:[esi]
  406be4:	or     bl,BYTE PTR [ecx+edx*1]
  406be7:	lods   eax,DWORD PTR ds:[esi]
  406be8:	jb     0x406be3
  406bea:	out    dx,eax
  406beb:	loop   0x406c5c
  406bed:	push   esp
  406bee:	xchg   edi,eax
  406bef:	xor    BYTE PTR [eax+edi*8-0xf],dh
  406bf3:	sbb    eax,0xc5a8086e
  406bf8:	xchg   BYTE PTR [ebx+ebp*1+0x78b1c0a2],bh
  406bff:	mov    ecx,DWORD PTR [ebx]
  406c01:	fsubrp st(7),st
  406c03:	fld    QWORD PTR [ebx+0x7ec8f0cd]
  406c09:	ffree  st(5)
  406c0b:	mov    DWORD PTR [ebp-0x13],esp
  406c0e:	mov    ds:0x181e77a8,al
  406c13:	retf   0x8253
  406c16:	cli    
  406c17:	jnp    0x406c21
  406c19:	sbb    eax,0xaab0e92
  406c1e:	pushf  
  406c1f:	adc    edi,ecx
  406c21:	or     bh,BYTE PTR [eax-0x425dd2cd]
  406c27:	rcl    BYTE PTR [ecx-0x1e42fa44],1
  406c2d:	aad    0x8b
  406c2f:	jne    0x406c60
  406c31:	gs mov esp,0x2c3c3ee6
  406c38:	lock xor BYTE PTR [edx+ecx*2-0x6a38edc3],al
  406c40:	jns    0x406bc7
  406c42:	xchg   DWORD PTR [ebp+0x2c981429],ebp
  406c48:	mov    cs,WORD PTR [ecx-0x747dcdd2]
  406c4e:	jbe    0x406cb5
  406c50:	inc    ebp
  406c51:	pop    ebx
  406c52:	fstp   TBYTE PTR [eax-0x3c8434b7]
  406c58:	sub    eax,0x91249c14
  406c5d:	pop    ss
  406c5e:	lea    ebx,[edi-0x7d]
  406c61:	mov    ebp,0x5bbdda2b
  406c66:	mov    bh,0xdc
  406c68:	adc    al,0x29
  406c6a:	pop    ds
  406c6b:	les    edi,FWORD PTR [edi+0x36f39b57]
  406c71:	or     eax,DWORD PTR ds:0x7603eaba
  406c77:	or     dl,BYTE PTR [esi-0x7c]
  406c7a:	add    esp,DWORD PTR [ecx+0x7b]
  406c7d:	in     al,dx
  406c7e:	jmp    0x310b81e8
  406c83:	lahf   
  406c84:	jecxz  0x406c2d
  406c86:	and    al,0x49
  406c88:	and    BYTE PTR [edx-0x320825cd],ch
  406c8e:	retf   
  406c8f:	xchg   ebp,eax
  406c90:	mov    ds:0xb7f357f4,al
  406c95:	xchg   ebp,eax
  406c96:	xchg   ebx,eax
  406c97:	cmc    
  406c98:	nop
  406c99:	mov    edx,0x9d586841
  406c9e:	add    ah,al
  406ca0:	mov    ah,0xce
  406ca2:	outs   dx,BYTE PTR ds:[esi]
  406ca3:	sbb    bh,BYTE PTR [edi+0x5b]
  406ca6:	xor    DWORD PTR [esi],esp
  406ca8:	push   esi
  406ca9:	pop    ss
  406caa:	add    DWORD PTR [edi+0x6b],eax
  406cad:	stc    
  406cae:	mov    ebx,ds
  406cb0:	push   edx
  406cb1:	inc    edx
  406cb2:	push   ebx
  406cb3:	out    dx,al
  406cb4:	inc    eax
  406cb5:	popa   
  406cb6:	jmp    DWORD PTR [edx]
  406cb8:	jge    0x406d0c
  406cba:	sbb    al,BYTE PTR [edi+0x39]
  406cbd:	adc    DWORD PTR [esi+0x689eb61],esi
  406cc3:	push   es
  406cc4:	xor    esi,DWORD PTR [ebp+0x105b3feb]
  406cca:	bound  esp,QWORD PTR [edi]
  406ccc:	sub    al,0xf2
  406cce:	cwde   
  406ccf:	push   0x8212f0f5
  406cd4:	addr16 aad 0xc8
  406cd7:	push   ebx
  406cd8:	pop    ebp
  406cd9:	push   0xca787306
  406cde:	sub    al,0xbf
  406ce0:	std    
  406ce1:	add    DWORD PTR ds:0xef89e4f2,edx
  406ce7:	mov    bl,0x2e
  406ce9:	out    dx,al
  406cea:	mov    ah,0x8d
  406cec:	mov    ss,WORD PTR [edx+0x2b]
  406cef:	call   0xda13:0x2bd8f47e
  406cf6:	cmp    DWORD PTR [ebp+0x6e85372],ebp
  406cfc:	div    DWORD PTR [ebx]
  406cfe:	sub    al,0xad
  406d00:	leave  
  406d01:	mov    DWORD PTR [ebx+0x26],ebx
  406d04:	retf   
  406d05:	outs   dx,DWORD PTR ds:[esi]
  406d06:	test   BYTE PTR gs:[edx],al
  406d09:	xor    esi,DWORD PTR [ecx-0x4966576b]
  406d0f:	jmp    FWORD PTR [ebx-0x131229d7]
  406d15:	push   ebp
  406d16:	jecxz  0x406d69
  406d18:	sbb    esi,DWORD PTR [edi+0x2a30d876]
  406d1e:	retf   0xf91c
  406d21:	jg     0x406d06
  406d23:	aam    0x79
  406d25:	imul   edi,DWORD PTR [ebx-0x501154b4],0xb9006802
  406d2f:	xchg   ecx,eax
  406d30:	ins    DWORD PTR es:[edi],dx
  406d31:	add    DWORD PTR [esi],ebx
  406d33:	cld    
  406d34:	clc    
  406d35:	dec    eax
  406d36:	retf   0x1413
  406d39:	and    dl,BYTE PTR [ecx]
  406d3b:	push   0x7687c927
  406d40:	(bad)  
  406d41:	cmp    BYTE PTR [ebx+0x74],ah
  406d44:	jl     0x406dc3
  406d46:	fwait
  406d47:	inc    eax
  406d48:	xor    eax,0x220cd223
  406d4d:	lds    esi,FWORD PTR [edi]
  406d4f:	mov    eax,esi
  406d51:	xor    esi,DWORD PTR [ebx+0x12bf76d5]
  406d57:	dec    edx
  406d59:	imul   ebp,DWORD PTR [edi-0x28],0xe
  406d5d:	shr    ecx,1
  406d5f:	push   edi
  406d60:	gs scas al,BYTE PTR es:[edi]
  406d62:	add    eax,0x8a6e28d9
  406d67:	cli    
  406d68:	int3   
  406d69:	adc    ebp,DWORD PTR [ebp-0x206c1701]
  406d6f:	or     ah,ah
  406d71:	xor    esp,DWORD PTR [edx-0x4e1779b2]
  406d77:	add    edx,DWORD PTR ss:[ebp+0x29971c40]
  406d7e:	sub    esp,edi
  406d80:	jl     0x406dc5
  406d82:	(bad)  
  406d83:	hlt    
  406d84:	shl    BYTE PTR [ebx],1
  406d86:	dec    ah
  406d88:	sbb    dh,0xc3
  406d8b:	sub    BYTE PTR [ebx],ch
  406d8d:	xor    al,0xe8
  406d8f:	adc    eax,0x70ceaf53
  406d94:	or     edx,edx
  406d96:	sbb    ecx,DWORD PTR [ebx-0x593ff04]
  406d9c:	dec    ecx
  406d9d:	cmp    edx,DWORD PTR [edi]
  406d9f:	imul   ebx,DWORD PTR [ecx],0x4b
  406da2:	in     al,0x41
  406da4:	pushf  
  406da5:	jge    0x406d28
  406da7:	imul   esi,DWORD PTR [edi-0x49],0x8cb8352e
  406dae:	arpl   WORD PTR [edx],ax
  406db0:	in     al,dx
  406db1:	psraw  mm2,QWORD PTR [ecx+0x65a42e4e]
  406db8:	fld    DWORD PTR [ecx+0x2b6ca85f]
  406dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dbf:	test   esp,edx
  406dc1:	sbb    al,0xb9
  406dc3:	repnz pop esi
  406dc5:	push   esi
  406dc6:	xor    dh,BYTE PTR [edi-0x2f]
  406dc9:	ins    BYTE PTR es:[edi],dx
  406dca:	pop    eax
  406dcb:	popa   
  406dcc:	mov    al,BYTE PTR [edx*1+0xe9c9bb8]
  406dd3:	push   ecx
  406dd4:	inc    edi
  406dd5:	lea    edx,[ecx-0x10cefdce]
  406ddb:	mov    bl,0x27
  406ddd:	adc    BYTE PTR [edx-0x30221676],bl
  406de3:	mov    esp,0x240335ee
  406de8:	sub    DWORD PTR [ecx+0x49],eax
  406deb:	shl    BYTE PTR [ecx+0x70],cl
  406dee:	mov    ds:0x37f7f029,al
  406df3:	sub    eax,0x2a720fc8
  406df8:	loop   0x406e0c
  406dfa:	push   edi
  406dfb:	aad    0x0
  406dfd:	mov    ebx,0x85ef138a
  406e02:	arpl   WORD PTR [ecx],cx
  406e04:	mov    ch,0x9f
  406e06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e07:	pushf  
  406e08:	sbb    BYTE PTR [ebp+0x57b675e8],ah
  406e0e:	xor    ecx,ecx
  406e10:	mov    ds:0x181c3fd6,eax
  406e15:	ficom  DWORD PTR [ebx+edx*4+0x75d51ac2]
  406e1c:	aam    0x2f
  406e1e:	sub    al,0xa8
  406e20:	sahf   
  406e21:	push   ebp
  406e22:	push   esp
  406e23:	clc    
  406e24:	push   ds
  406e25:	out    0xc2,al
  406e27:	test   ebp,ecx
  406e29:	inc    edx
  406e2a:	add    eax,0xce9533a1
  406e2f:	adc    esi,ebx
  406e31:	arpl   bx,sp
  406e33:	jmp    DWORD PTR [eax+0xee7d7ef]
  406e39:	inc    esp
  406e3a:	lock imul esi,DWORD PTR [eax],0xaa6132b7
  406e41:	addr16 pushw ss
  406e44:	jb     0x406eb2
  406e46:	pop    esp
  406e47:	sbb    eax,0x41913caf
  406e4c:	xor    al,0xf6
  406e4e:	mov    cl,ch
  406e50:	popf   
  406e51:	pusha  
  406e52:	sub    eax,0x2417d75a
  406e57:	push   ss
  406e58:	inc    esp
  406e59:	aad    0x16
  406e5b:	ins    BYTE PTR es:[edi],dx
  406e5c:	and    BYTE PTR [ebp-0x35aaac08],0x6a
  406e63:	in     al,dx
  406e64:	pop    ds
  406e65:	mov    ds:0xffc4f6b6,eax
  406e6a:	retf   
  406e6b:	loop   0x406e70
  406e6d:	dec    ebp
  406e6e:	retf   
  406e6f:	mov    BYTE PTR [esi-0x14],dl
  406e72:	jle    0x406e5b
  406e74:	shl    DWORD PTR [ebx],1
  406e76:	stos   DWORD PTR es:[edi],eax
  406e77:	adc    eax,0xb9f5b7e9
  406e7c:	add    al,BYTE PTR [ebx]
  406e7e:	mov    ah,0xed
  406e80:	in     eax,0x46
  406e82:	mov    WORD PTR [esi-0x16],?
  406e85:	pop    ss
  406e86:	cs jae 0x406e31
  406e89:	scas   eax,DWORD PTR es:[edi]
  406e8a:	cmovg  ecx,DWORD PTR fs:[ebx]
  406e8e:	push   0x4e8d4867
  406e93:	xchg   BYTE PTR [esi-0x442a2da8],bh
  406e99:	mov    ch,0x95
  406e9b:	int3   
  406e9c:	(bad)  
  406e9d:	(bad)  
  406e9e:	int3   
  406e9f:	xchg   ebx,eax
  406ea0:	jnp    0x406ef8
  406ea2:	mov    edx,0xbb0702ee
  406ea7:	(bad)  
  406ea8:	fstp   TBYTE PTR [ecx]
  406eaa:	shr    DWORD PTR [edx+0x6d],1
  406ead:	rcl    DWORD PTR [edx+0x561dbc6c],cl
  406eb3:	mov    ch,0x5c
  406eb5:	pop    ebx
  406eb6:	push   ebp
  406eb7:	data16 int3 
  406eb9:	add    eax,DWORD PTR [ebx]
  406ebb:	test   al,0xb9
  406ebd:	imul   edx,DWORD PTR [esp+edi*1+0x32],0x66
  406ec2:	jb     0x406f39
  406ec4:	in     al,dx
  406ec5:	adc    ebx,esi
  406ec7:	adc    ecx,esp
  406ec9:	cmp    al,dh
  406ecb:	xchg   edi,eax
  406ecc:	push   ds
  406ecd:	call   0xb7c60cf6
  406ed2:	(bad)  
  406ed3:	into   
  406ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ed5:	mov    cl,0xb2
  406ed7:	pushf  
  406ed8:	dec    ecx
  406ed9:	inc    ecx
  406eda:	mov    dh,0x51
  406edc:	inc    ebx
  406edd:	mov    ebp,0x9b96dd
  406ee2:	adc    BYTE PTR [edx+eax*1-0x20],al
  406ee6:	mov    al,ds:0x12dc8649
  406eeb:	xlat   BYTE PTR ds:[ebx]
  406eec:	repz push esi
  406eee:	dec    edx
  406eef:	rol    BYTE PTR [eax],1
  406ef1:	mov    edi,0xc0ffa180
  406ef6:	add    DWORD PTR [esi+edi*2],esp
  406ef9:	cwde   
  406efa:	and    BYTE PTR [edx+edi*8],0x1
  406efe:	fdivr  QWORD PTR [ebx]
  406f00:	test   bh,0x74
  406f03:	int3   
  406f04:	shl    BYTE PTR [edi+0x5c9dda67],cl
  406f0a:	jge    0x406ed1
  406f0c:	test   cl,ah
  406f0e:	inc    eax
  406f0f:	add    eax,0x5c
  406f12:	ss jp  0x406f25
  406f15:	test   al,0xb5
  406f17:	ins    BYTE PTR es:[edi],dx
  406f18:	test   al,0x22
  406f1a:	in     eax,dx
  406f1b:	loop   0x406ea7
  406f1d:	xlat   BYTE PTR ds:[ebx]
  406f1e:	es into 
  406f20:	in     eax,0x7f
  406f22:	test   ecx,0x5b24b88c
  406f28:	xchg   edi,eax
  406f29:	aaa    
  406f2a:	sub    eax,0xebf4e322
  406f2f:	out    dx,eax
  406f30:	outs   dx,DWORD PTR ds:[esi]
  406f31:	lea    edx,[ebx+0x23ff18a5]
  406f37:	daa    
  406f38:	outs   dx,BYTE PTR ds:[esi]
  406f39:	in     eax,0x5d
  406f3b:	mov    dh,0xd5
  406f3d:	mov    eax,ds:0xdca45e1a
  406f42:	push   esi
  406f43:	adc    BYTE PTR [eax+0xf15a3cb],0xa6
  406f4a:	push   ss
  406f4b:	leave  
  406f4c:	clc    
  406f4d:	lods   eax,DWORD PTR ds:[esi]
  406f4e:	in     al,dx
  406f4f:	addr16 pop ds
  406f51:	mov    edx,DWORD PTR [edi+edi*2]
  406f54:	and    BYTE PTR [ebx-0x1050b1c3],ch
  406f5a:	fcom   QWORD PTR [edi-0x494c839f]
  406f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f61:	jo     0x406fa8
  406f63:	xchg   BYTE PTR [edx+0xc],al
  406f66:	arpl   WORD PTR fs:[esi],di
  406f69:	ds jmp 0x409e:0xa8a5c503
  406f71:	adc    DWORD PTR [eax+0x7562aed],ecx
  406f77:	dec    ebx
  406f78:	sbb    eax,0xcdb9b67c
  406f7d:	add    edx,DWORD PTR [ebp+ecx*8+0x67]
  406f81:	call   0xcf56:0x660b1c53
  406f88:	in     eax,dx
  406f89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f8a:	cmp    dh,BYTE PTR [edx+0x48ae2903]
  406f90:	sti    
  406f91:	mov    esi,0xaf245fbc
  406f96:	aaa    
  406f97:	mov    ch,0x1d
  406f99:	pop    eax
  406f9a:	loop   0x406f9b
  406f9c:	outs   dx,DWORD PTR ds:[esi]
  406f9d:	mov    bl,0x28
  406f9f:	jmp    0x8ecd:0x20e9b9bf
  406fa6:	cld    
  406fa7:	(bad)  {k1}{z}
  406fac:	adc    BYTE PTR [eax+0x7e],0x25
  406fb0:	cli    
  406fb1:	fnstcw WORD PTR [edi+0x66]
  406fb4:	lea    edi,[ecx+0x3]
  406fb7:	fist   WORD PTR [edi+ebp*4]
  406fba:	mov    BYTE PTR [edi],bh
  406fbc:	dec    ecx
  406fbd:	cwde   
  406fbe:	dec    edi
  406fbf:	xchg   edi,eax
  406fc0:	out    0x6,eax
  406fc2:	cli    
  406fc3:	jge    0x407004
  406fc5:	push   ebx
  406fc6:	in     al,0xe0
  406fc8:	pop    ebp
  406fc9:	rcr    BYTE PTR [ebp-0x57506a99],0x19
  406fd0:	pushf  
  406fd1:	sbb    BYTE PTR ds:0x52c5091,bl
  406fd7:	cmp    ebp,DWORD PTR ds:0x8989dfd1
  406fdd:	clc    
  406fde:	lea    eax,[ecx-0x6f5945f2]
  406fe4:	pop    ds
  406fe5:	jne    0x40704c
  406fe7:	cld    
  406fe8:	sub    ah,ch
  406fea:	xor    DWORD PTR [esi],ebp
  406fec:	rol    DWORD PTR [ecx],1
  406fee:	sbb    al,0xba
  406ff0:	dec    ebp
  406ff1:	sub    al,BYTE PTR [eax+0xb]
  406ff4:	cld    
  406ff5:	push   0x630e20c8
  406ffa:	mov    edx,0x2fbde9b8
  406fff:	jno    0x406fd8
  407001:	or     al,0x92
  407003:	pop    edx
  407004:	inc    esp
  407005:	in     eax,dx
  407006:	cmp    al,0x96
  407008:	aas    
  407009:	mov    ebx,DWORD PTR [esi]
  40700b:	mov    BYTE PTR [ebp+eax*8-0x7d],ah
  40700f:	or     esi,ebx
  407011:	repnz sub bh,bl
  407014:	mov    edx,0xb6367415
  407019:	das    
  40701a:	pop    ebp
  40701b:	cmc    
  40701c:	arpl   cx,ax
  40701e:	mov    eax,ds:0xe8404868
  407023:	stos   BYTE PTR es:[edi],al
  407024:	fadd   QWORD PTR [esi]
  407026:	stc    
  407027:	jp     0x406fc0
  407029:	scas   eax,DWORD PTR es:[edi]
  40702a:	add    dl,0xe4
  40702d:	loop   0x40707f
  40702f:	scas   al,BYTE PTR es:[edi]
  407030:	sub    al,0x8d
  407032:	(bad)  
  407034:	mov    ecx,0x55431622
  407039:	jo     0x4070ad
  40703b:	vmwrite ebp,DWORD PTR [ebx]
  40703e:	retf   
  40703f:	inc    ebx
  407040:	or     eax,0x2b095624
  407045:	push   esp
  407046:	js     0x407011
  407048:	rcr    edi,1
  40704a:	test   BYTE PTR [edx+0x6b],ch
  40704d:	fwait
  40704e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40704f:	xlat   BYTE PTR ds:[ebx]
  407050:	retf   0x9528
  407053:	pop    es
  407054:	in     eax,0xe0
  407056:	push   eax
  407057:	inc    eax
  407058:	push   ss
  407059:	mov    DWORD PTR [edi+0x227a5bb4],edx
  40705f:	rol    BYTE PTR [edi],cl
  407061:	add    BYTE PTR ds:0x97b81238,cl
  407067:	mov    edx,0x7e93a86d
  40706c:	jge    0x407049
  40706e:	jmp    0xa86e7482
  407073:	aas    
  407074:	sub    cl,bh
  407076:	daa    
  407077:	scas   eax,DWORD PTR es:[edi]
  407078:	jle    0x4070d7
  40707a:	cli    
  40707b:	adc    DWORD PTR [ebp+edi*1-0x7b67871a],esp
  407082:	jle    0x407087
  407084:	cwde   
  407085:	push   esi
  407086:	std    
  407087:	xchg   esp,eax
  407088:	outs   dx,BYTE PTR ds:[esi]
  407089:	rdtsc  
  40708b:	lods   al,BYTE PTR ds:[esi]
  40708c:	std    
  40708d:	test   eax,0xc05d7029
  407092:	cmp    cl,BYTE PTR [esi]
  407094:	icebp  
  407095:	repz imul edi
  407098:	clc    
  407099:	add    eax,0xcc8cf023
  40709e:	and    al,0x1a
  4070a0:	sbb    ecx,esp
  4070a2:	stos   DWORD PTR es:[edi],eax
  4070a3:	xor    eax,0xce1ffe58
  4070a8:	stc    
  4070a9:	inc    edi
  4070aa:	jno    0x40705e
  4070ac:	sbb    cl,BYTE PTR [edx+0x4e]
  4070af:	sahf   
  4070b0:	jmp    0x4070b6
  4070b2:	stc    
  4070b3:	sub    al,0xc3
  4070b5:	call   DWORD PTR [edx-0xb]
  4070b8:	pop    esi
  4070b9:	sahf   
  4070ba:	dec    edi
  4070bb:	es popa 
  4070bd:	test   edi,0x28bc5a6b
  4070c3:	sbb    DWORD PTR [eax-0x2f],esp
  4070c6:	(bad)  [eax]
  4070c8:	sub    al,0x30
  4070ca:	scas   al,BYTE PTR es:[edi]
  4070cb:	pop    es
  4070cc:	adc    esi,edx
  4070ce:	cmp    al,0x68
  4070d0:	stos   DWORD PTR es:[edi],eax
  4070d1:	pusha  
  4070d2:	retf   
  4070d3:	aas    
  4070d4:	inc    edx
  4070d5:	xchg   ebx,eax
  4070d6:	imul   ebp,DWORD PTR [ecx+edx*8],0xffffffbb
  4070da:	ins    DWORD PTR es:[edi],dx
  4070db:	outs   dx,DWORD PTR ds:[esi]
  4070dc:	dec    ecx
  4070dd:	push   edi
  4070de:	bound  ebx,QWORD PTR [ecx+0x79]
  4070e1:	and    DWORD PTR [esi-0x71],ebp
  4070e4:	pop    ds
  4070e5:	sub    BYTE PTR [ecx+eiz*2+0x79],bh
  4070e9:	test   BYTE PTR [eax-0x48386f35],dh
  4070ef:	sub    BYTE PTR [ebx-0x74297b3],0xc4
  4070f6:	imul   eax,esp,0xaa967442
  4070fc:	stos   BYTE PTR es:[edi],al
  4070fd:	aas    
  4070fe:	add    BYTE PTR [edx+0x71],dl
  407101:	in     eax,dx
  407102:	xor    BYTE PTR [edx-0x5d],0x43
  407106:	sar    ebp,cl
  407108:	xor    dh,BYTE PTR [ecx-0x2e]
  40710b:	jl     0x4070a4
  40710d:	das    
  40710e:	outs   dx,BYTE PTR ds:[esi]
  40710f:	lahf   
  407110:	jmp    0x4538:0xb577f576
  407117:	and    dl,ch
  407119:	sub    al,0xb0
  40711b:	push   edi
  40711c:	push   ecx
  40711d:	pushf  
  40711e:	in     al,0xe4
  407120:	mov    bh,0x1e
  407122:	cmc    
  407123:	jbe    0x407194
  407125:	sub    al,0x44
  407127:	sbb    BYTE PTR ds:[edx],dl
  40712a:	add    edi,DWORD PTR [ebx-0x35]
  40712d:	push   edx
  40712e:	retf   
  40712f:	fldln2 
  407131:	ins    BYTE PTR es:[edi],dx
  407132:	mov    al,0xb3
  407134:	sub    DWORD PTR [eax+edi*4-0xf5bba7b],eax
  40713b:	mov    ebx,0x5d67a8ae
  407140:	jle    0x4070ee
  407142:	push   esp
  407143:	mov    al,0x70
  407145:	jo     0x407181
  407147:	sbb    DWORD PTR [ecx],0xffffffd0
  40714a:	imul   edi,edx,0x802ca907
  407150:	call   0x84c2:0x6e9e073c
  407157:	ficom  WORD PTR [ebx-0x4f]
  40715a:	pop    ss
  40715b:	loop   0x4070ed
  40715d:	and    ch,BYTE PTR [ebp+0x76]
  407160:	dec    esp
  407161:	add    al,BYTE PTR [ebp+0x1d]
  407164:	cmp    cl,al
  407166:	shl    DWORD PTR [ebx+0x2f],cl
  407169:	(bad)  
  40716a:	sub    ch,dh
  40716c:	lods   eax,DWORD PTR ds:[esi]
  40716d:	inc    ebp
  40716e:	sub    al,0x62
  407170:	pop    es
  407171:	hlt    
  407172:	or     DWORD PTR [ecx-0x65d0389a],esp
  407178:	sahf   
  407179:	inc    ebp
  40717a:	out    dx,eax
  40717b:	add    eax,0xf701b8ad
  407180:	jae    0x40717c
  407182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407183:	(bad)  
  407184:	jbe    0x4071a4
  407186:	mov    cl,BYTE PTR [eax-0x556f1472]
  40718c:	jbe    0x407192
  40718e:	cli    
  40718f:	mov    dl,0x5d
  407191:	xchg   ecx,eax
  407192:	mov    ecx,0xae3129db
  407197:	mov    edx,DWORD PTR [edx+0x1357fda6]
  40719d:	retf   
  40719e:	pop    ss
  40719f:	idiv   eax
  4071a1:	(bad)  
  4071a2:	clc    
  4071a3:	(bad)  
  4071a4:	dec    ebx
  4071a5:	loope  0x4071ef
  4071a7:	mov    edi,DWORD PTR [eax-0x59]
  4071aa:	dec    ebx
  4071ab:	xor    eax,0x462d6b02
  4071b0:	cmp    cl,BYTE PTR [ebp-0x293a155a]
  4071b6:	xchg   DWORD PTR [eax],esi
  4071b8:	mov    al,ds:0x3cd2ff0
  4071bd:	out    0x8d,al
  4071bf:	and    edi,DWORD PTR [edx-0x23]
  4071c2:	dec    ebx
  4071c3:	cli    
  4071c4:	dec    esi
  4071c5:	add    edi,edx
  4071c7:	je     0x407151
  4071c9:	in     al,0x45
  4071cb:	in     al,0x8
  4071cd:	ins    DWORD PTR es:[edi],dx
  4071ce:	pusha  
  4071cf:	push   eax
  4071d0:	adc    al,dh
  4071d2:	adc    dl,BYTE PTR [ecx+0x72]
  4071d5:	in     al,0x73
  4071d7:	push   ebx
  4071d8:	inc    edx
  4071d9:	lods   al,BYTE PTR ds:[esi]
  4071da:	sub    ah,cl
  4071dc:	mov    edi,0x6dca678f
  4071e1:	outs   dx,BYTE PTR ds:[esi]
  4071e2:	retfw  0x2236
  4071e6:	mov    bl,BYTE PTR [esi-0x73]
  4071e9:	ins    BYTE PTR es:[edi],dx
  4071ea:	dec    ecx
  4071eb:	cmc    
  4071ec:	sub    ch,BYTE PTR [edx]
  4071ee:	shl    esp,0xb8
  4071f1:	dec    ecx
  4071f2:	jge    0x4071ac
  4071f4:	cmp    BYTE PTR [eax-0x66],0xdd
  4071f8:	rol    DWORD PTR [edx-0x79b2539b],1
  4071fe:	ins    BYTE PTR es:[edi],dx
  4071ff:	pop    ecx
  407200:	cdq    
  407201:	loopne 0x4071f5
  407203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407204:	or     esp,ecx
  407206:	cli    
  407207:	sbb    al,0x3
  407209:	test   eax,0xa072a0fc
  40720e:	sub    BYTE PTR [esi-0x731ff4e5],dh
  407214:	cli    
  407215:	dec    ecx
  407216:	fcom   QWORD PTR [eax]
  407218:	push   0x1e848d44
  40721d:	ds (bad) 
  40721f:	(bad)  
  407220:	push   edi
  407221:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407223:	out    0xdb,al
  407225:	dec    esp
  407226:	scas   eax,DWORD PTR es:[edi]
  407227:	ss mov esi,0xdbbf1a2c
  40722d:	mov    al,ds:0xa0522c23
  407232:	aad    0x32
  407234:	sahf   
  407235:	stos   DWORD PTR es:[edi],eax
  407236:	xchg   edx,eax
  407237:	mov    edx,0x99bc7c1d
  40723c:	mov    edi,0xcd5966f6
  407241:	out    dx,eax
  407242:	inc    edx
  407243:	and    esi,DWORD PTR [ecx*1+0x72da33d5]
  40724a:	mov    esi,0x8adc3b77
  40724f:	mov    edi,0x7023b059
  407254:	lea    edx,[edx+0x4e]
  407257:	and    DWORD PTR [ecx],ecx
  407259:	pop    ebp
  40725a:	ja     0x407217
  40725c:	in     eax,dx
  40725d:	and    bl,BYTE PTR [eax+0x1a]
  407260:	stos   DWORD PTR es:[edi],eax
  407261:	push   ds
  407262:	pop    esp
  407263:	cmp    eax,ebx
  407265:	jge    0x4072a0
  407267:	mov    edi,0x321abca2
  40726c:	pop    ecx
  40726d:	mov    ah,BYTE PTR [esi+0x4be66c87]
  407273:	mov    cl,0x1b
  407275:	sbb    ah,BYTE PTR [ebx]
  407277:	dec    esp
  407278:	clc    
  407279:	es xchg esi,eax
  40727b:	mov    edx,0xbd63a854
  407280:	psrld  mm5,mm5
  407283:	adc    BYTE PTR [ecx+0x42],bh
  407286:	push   0x7ceb70f1
  40728b:	mov    al,ds:0x32c98930
  407290:	outs   dx,BYTE PTR ds:[esi]
  407291:	test   eax,0x5512b352
  407296:	xor    al,BYTE PTR [ecx-0x3ddc5e0]
  40729c:	repz daa 
  40729e:	add    eax,0x46ea2b37
  4072a3:	sub    BYTE PTR [ebp+0x5f],0x1b
  4072a7:	mov    edi,0xc0ae8d82
  4072ac:	add    al,0x23
  4072ae:	jecxz  0x407236
  4072b0:	pop    ebp
  4072b1:	arpl   WORD PTR [ecx],ax
  4072b3:	mov    BYTE PTR [eax-0x18570178],bl
  4072b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ba:	mov    eax,ds:0x974d8510
  4072bf:	mov    ah,0xf7
  4072c1:	test   BYTE PTR [ecx],al
  4072c3:	mov    edi,0x2a2c372f
  4072c8:	jnp    0x40732a
  4072ca:	add    eax,0x20f43a16
  4072cf:	push   esp
  4072d0:	gs jl  0x40733a
  4072d3:	retf   0x5690
  4072d6:	test   al,0x73
  4072d8:	pop    esp
  4072d9:	jmp    0x926:0x858539c8
  4072e0:	ror    ah,1
  4072e2:	addr16 loopne 0x4072fe
  4072e5:	test   DWORD PTR [edx+0x695a9798],0x7efe6f4
  4072ef:	jg     0x4072a8
  4072f1:	retf   0x1817
  4072f4:	xor    ebp,DWORD PTR [ebx]
  4072f6:	or     BYTE PTR [edx-0x70a2dbcd],dh
  4072fc:	cmc    
  4072fd:	or     esi,0x82c84b37
  407303:	adc    ecx,DWORD PTR ds:0xf894ac20
  407309:	mov    eax,0xdd689fc9
  40730e:	sbb    ah,bh
  407310:	xchg   BYTE PTR [ebx+0x46],ah
  407313:	mov    dl,0xd0
  407315:	imul   eax,DWORD PTR [edx+eiz*1],0x9db11aa2
  40731c:	push   ebp
  40731d:	fidiv  DWORD PTR [edx-0xdfddbd7]
  407323:	arpl   sp,ax
  407325:	(bad)  
  407326:	cli    
  407327:	nop
  407328:	lock test eax,0x61568385
  40732e:	(bad)  
  40732f:	in     eax,0x86
  407331:	mov    edx,esp
  407333:	or     bl,BYTE PTR [ebx]
  407335:	push   cs
  407336:	sbb    BYTE PTR [edx+ecx*2-0x52],cl
  40733a:	pop    ebx
  40733b:	popa   
  40733c:	adc    BYTE PTR [edi+0x5],0xf
  407340:	mov    dl,0x4b
  407342:	mov    edx,0x46c15bf1
  407347:	sub    dh,dh
  407349:	xchg   esp,ebp
  40734b:	cmp    al,0xae
  40734d:	xchg   ecx,eax
  40734e:	je     0x407396
  407350:	fsub   QWORD PTR [esi-0x3d87ecfc]
  407356:	test   BYTE PTR [ebx-0x4f],ah
  407359:	adc    al,0x55
  40735b:	xor    edx,DWORD PTR [edx+0x69]
  40735e:	fadd   QWORD PTR [ecx]
  407360:	sub    ebp,DWORD PTR [ecx]
  407362:	sub    edx,DWORD PTR [ebp+0x36]
  407365:	mov    ebx,gs
  407367:	ror    DWORD PTR [esi+esi*2],cl
  40736a:	xchg   esp,eax
  40736b:	pusha  
  40736c:	mov    edx,0xf8467fdf
  407371:	mov    WORD PTR [ecx-0x38ae2331],gs
  407377:	jecxz  0x407388
  407379:	ins    DWORD PTR es:[edi],dx
  40737a:	lahf   
  40737b:	fdiv   QWORD PTR [esi-0xe3d3d2e]
  407381:	inc    ebx
  407382:	popa   
  407383:	fistp  DWORD PTR [ecx-0x5c98fc6]
  407389:	sub    eax,0x6047a002
  40738e:	scas   al,BYTE PTR es:[edi]
  40738f:	cs dec ebp
  407392:	dec    edi
  407393:	xchg   edi,eax
  407394:	xchg   ebx,eax
  407395:	fiadd  WORD PTR [edi+0x1d0a78b1]
  40739b:	add    ecx,ebx
  40739d:	xor    bl,BYTE PTR [esi+0x23]
  4073a0:	and    eax,0x7863aceb
  4073a5:	fisttp QWORD PTR [esp+eiz*8-0x48a165d]
  4073ac:	pop    eax
  4073ad:	sub    eax,0xdc07c81d
  4073b2:	push   esi
  4073b3:	xchg   esp,eax
  4073b4:	jno    0x4073be
  4073b6:	cdq    
  4073b7:	add    edi,edx
  4073b9:	fist   DWORD PTR [esi-0x38]
  4073bc:	xchg   ebp,eax
  4073bd:	out    0x62,al
  4073bf:	sti    
  4073c0:	mov    al,BYTE PTR [ebp-0x2b968f4]
  4073c6:	cli    
  4073c7:	mov    dl,0xdd
  4073c9:	add    edx,DWORD PTR [edx]
  4073cb:	fist   WORD PTR [esi]
  4073cd:	push   ds
  4073ce:	nop
  4073cf:	aam    0x80
  4073d1:	pop    es
  4073d2:	jl     0x4073e9
  4073d4:	stos   DWORD PTR es:[edi],eax
  4073d5:	mov    ebx,ebx
  4073d7:	sbb    DWORD PTR [esi+0x4807013b],eax
  4073dd:	jl     0x40741d
  4073df:	aam    0x2a
  4073e1:	mov    eax,0x8f75220f
  4073e6:	jle    0x4073e8
  4073e8:	push   ebx
  4073e9:	mov    ch,0x18
  4073eb:	shl    BYTE PTR fs:[ebx+0x2d],1
  4073ef:	mov    eax,0xe4415ba8
  4073f4:	fdivr  QWORD PTR [bx+di]
  4073f7:	cmp    edi,DWORD PTR ds:0xc45bc4b8
  4073fd:	or     DWORD PTR [ebx+0x69c9cd65],eax
  407403:	imul   ebp,DWORD PTR [ecx+0x56a84b06],0xf895b7d7
  40740d:	xor    ch,BYTE PTR [eax+0x25435028]
  407413:	and    edx,esi
  407415:	stc    
  407416:	lods   eax,DWORD PTR ds:[esi]
  407417:	and    DWORD PTR [ecx],ecx
  407419:	sub    DWORD PTR [eax],ecx
  40741b:	pop    edi
  40741c:	sbb    BYTE PTR [eiz*2+0x599e57c5],bl
  407423:	sti    
  407424:	bound  edi,QWORD PTR [eax]
  407426:	sbb    BYTE PTR [ecx],bl
  407428:	retf   0x4ed4
  40742b:	fcom   DWORD PTR [edi+0x3d]
  40742e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40742f:	test   DWORD PTR [edx+0x21723a34],esp
  407435:	(bad)  [edi+ecx*1+0x4e]
  407439:	jecxz  0x407423
  40743b:	pop    edi
  40743c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40743d:	sbb    eax,0x2ffe4c55
  407442:	lahf   
  407443:	jle    0x4074c1
  407445:	cmp    DWORD PTR [esi-0x2],ecx
  407448:	test   eax,0x19e3e0eb
  40744d:	loopne 0x4074ab
  40744f:	jnp    0x40748f
  407451:	fstp   DWORD PTR [ecx+0x2680954c]
  407457:	sbb    BYTE PTR [ebx-0x564365d3],bh
  40745d:	(bad)  
  40745e:	sub    esp,DWORD PTR [esi+0x2649f8f9]
  407464:	outs   dx,DWORD PTR ds:[esi]
  407465:	jae    0x407452
  407467:	aad    0x3c
  407469:	mov    DWORD PTR [esi-0x591d480a],ebp
  40746f:	sbb    BYTE PTR es:[edx+0xf],dl
  407473:	mov    dl,0xda
  407475:	or     DWORD PTR [esi+0x23eee37],0x618b890a
  40747f:	fsubr  QWORD PTR [edi]
  407481:	push   edi
  407482:	test   eax,0x286bebc0
  407487:	sbb    esp,eax
  407489:	imul   ebx,eax,0x9a842f93
  40748f:	sub    ch,BYTE PTR [ebp+0x75143b06]
  407495:	or     BYTE PTR [ebp-0x79c776c7],0x39
  40749c:	adc    DWORD PTR [edi+0x50d44f1f],0x3519997d
  4074a6:	cs mov cl,dh
  4074a9:	outs   dx,DWORD PTR ds:[esi]
  4074aa:	lea    ebp,[ebp+ebx*4+0x258e9486]
  4074b1:	fwait
  4074b2:	pusha  
  4074b3:	mov    ebx,0x9ebf585c
  4074b8:	or     ebx,DWORD PTR [esi-0x1b9c9575]
  4074be:	sar    BYTE PTR [esi-0x11],0x2f
  4074c2:	repz cmp al,0xfa
  4074c5:	sbb    dl,BYTE PTR [edi]
  4074c7:	test   al,0xa5
  4074c9:	pusha  
  4074ca:	shl    edi,1
  4074cc:	test   eax,0x2db45f11
  4074d1:	fs pop esp
  4074d3:	push   ss
  4074d4:	mov    al,0xb0
  4074d6:	xchg   ebx,eax
  4074d7:	push   esp
  4074d8:	jns    0x407487
  4074da:	lahf   
  4074db:	jb     0x407534
  4074dd:	imul   ebx,DWORD PTR ds:0x8c9a68aa,0xa
  4074e4:	cmp    edi,DWORD PTR [esi+ecx*8-0x1d877a8f]
  4074eb:	stos   BYTE PTR es:[edi],al
  4074ec:	test   al,0x1a
  4074ee:	push   ebx
  4074ef:	repz sbb eax,0xbdfbc025
  4074f5:	fld    DWORD PTR [ebx+0x29]
  4074f8:	jecxz  0x4074b5
  4074fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074fb:	sub    esi,DWORD PTR ds:0xb26e43ff
  407501:	adc    esp,ebx
  407503:	pop    edi
  407504:	sub    eax,0xd9ea9e98
  407509:	test   eax,0xa24273f5
  40750e:	push   0x6
  407510:	fs mov dh,0x26
  407513:	retf   0x25b2
  407516:	repnz mov cl,0x35
  407519:	(bad)  
  40751a:	fnstenv [edi+eax*2+0x1a]
  40751e:	sub    edx,edx
  407520:	sub    ah,BYTE PTR [edi+0x7bef2ea7]
  407526:	jmp    0xfc6e:0xcea2a73
  40752d:	xchg   edi,eax
  40752e:	hlt    
  40752f:	test   DWORD PTR [edi-0x44d2ba8a],0xc88a8048
  407539:	mov    ebp,0x437a810
  40753e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40753f:	inc    esi
  407540:	push   ss
  407541:	xchg   ebx,eax
  407542:	in     eax,0xe2
  407544:	xchg   ebx,eax
  407545:	arpl   WORD PTR [esi-0xbff98c0],bx
  40754b:	xchg   edi,eax
  40754c:	daa    
  40754d:	inc    esi
  40754e:	push   ss
  40754f:	es xchg esp,eax
  407551:	or     DWORD PTR [edi],edx
  407553:	mov    edx,0xed409fd9
  407558:	cmp    ch,cl
  40755a:	cmp    dh,BYTE PTR [ebx-0x66]
  40755d:	mov    bl,0xc1
  40755f:	outs   dx,DWORD PTR es:[esi]
  407561:	sub    al,0xc0
  407563:	test   BYTE PTR [eax+0x1c2484f],al
  407569:	call   0x73b:0xe778bc0a
  407570:	fisub  WORD PTR [ecx+edi*4]
  407573:	mov    bl,0x40
  407575:	icebp  
  407576:	add    BYTE PTR [edi+0x34],0xc
  40757a:	call   0x6ade755a
  40757f:	int3   
  407580:	xchg   BYTE PTR [ebp+0x75db6e7f],dh
  407586:	pusha  
  407587:	xchg   esp,eax
  407588:	(bad)  
  407589:	ret    
  40758a:	sti    
  40758b:	adc    BYTE PTR [ebx+esi*4+0x60],bh
  40758f:	aad    0x92
  407591:	pop    edi
  407592:	lea    edi,[ecx-0x35]
  407595:	popf   
  407596:	daa    
  407597:	in     al,dx
  407598:	lea    edx,[edx+0x6c]
  40759b:	mov    ah,0xb4
  40759d:	call   0x98caeb74
  4075a2:	or     ebx,DWORD PTR [ecx]
  4075a4:	das    
  4075a5:	pop    ebp
  4075a6:	pop    edi
  4075a7:	cmp    DWORD PTR [ecx-0x559b8e40],0xffffffeb
  4075ae:	fild   QWORD PTR [edi]
  4075b0:	jae    0x4075f3
  4075b2:	(bad)  
  4075b3:	jp     0x4075df
  4075b5:	xchg   esp,eax
  4075b6:	sbb    al,0x4
  4075b8:	icebp  
  4075b9:	int3   
  4075ba:	inc    edi
  4075bb:	out    0xce,al
  4075bd:	fsubr  st(2),st
  4075bf:	je     0x407598
  4075c1:	xor    eax,edi
  4075c3:	xor    edx,DWORD PTR [esi]
  4075c5:	stos   DWORD PTR es:[edi],eax
  4075c6:	scas   eax,DWORD PTR es:[edi]
  4075c7:	(bad)  
  4075c8:	mov    BYTE PTR [eax+0x5602f6b2],cl
  4075ce:	fwait
  4075cf:	int    0x39
  4075d1:	xor    dl,BYTE PTR ss:[esi]
  4075d4:	push   cs
  4075d5:	xor    eax,0x5703b085
  4075da:	inc    eax
  4075db:	in     eax,dx
  4075dc:	sbb    eax,0x9da6154f
  4075e1:	es push ebx
  4075e3:	cmp    BYTE PTR [eax],bl
  4075e5:	cli    
  4075e6:	ins    BYTE PTR es:[edi],dx
  4075e7:	mov    BYTE PTR [eax-0x1abfaf4d],ah
  4075ed:	push   edx
  4075ee:	hlt    
  4075ef:	pusha  
  4075f0:	xchg   ecx,eax
  4075f1:	push   0x22
  4075f3:	dec    ecx
  4075f4:	xchg   ebx,eax
  4075f5:	mov    edx,?
  4075f7:	pop    ebp
  4075f8:	xchg   ebx,eax
  4075f9:	jnp    0x40758e
  4075fb:	push   ebp
  4075fc:	xchg   BYTE PTR [edx],bh
  4075fe:	jbe    0x4075a2
  407600:	cmp    ch,BYTE PTR [ecx-0x4]
  407603:	mov    ecx,0xac9ee08a
  407608:	stc    
  407609:	sbb    eax,0xecdde02b
  40760e:	ficomp DWORD PTR [esi]
  407610:	mov    ebp,0xfb246ff7
  407615:	sub    eax,DWORD PTR [esi]
  407617:	clc    
  407618:	inc    ecx
  407619:	pop    ss
  40761a:	sub    BYTE PTR [edi],0x21
  40761d:	pop    edi
  40761e:	mov    bh,0x71
  407620:	stos   DWORD PTR es:[edi],eax
  407621:	sbb    cl,0x42
  407624:	arpl   WORD PTR [edx+eiz*1-0x271aa8c6],bx
  40762b:	test   eax,0x17ead802
  407630:	jg     0x4075e1
  407632:	jnp    0x40769e
  407634:	call   0x55fcb610
  407639:	scas   eax,DWORD PTR es:[edi]
  40763a:	add    bh,bl
  40763c:	pop    esi
  40763d:	or     al,0xb
  40763f:	(bad)  
  407640:	out    0x2,eax
  407642:	lods   eax,DWORD PTR ds:[esi]
  407643:	jl     0x407616
  407645:	bound  ebx,QWORD PTR [ebx+0x2a]
  407648:	bound  eax,QWORD PTR [ebx+0x1fb3ec23]
  40764e:	cmp    BYTE PTR [ebx],bh
  407650:	adc    eax,0x818b0240
  407655:	pop    ebx
  407656:	cdq    
  407657:	jnp    0x407633
  407659:	sbb    ah,0x7
  40765c:	push   0x6f13de3
  407661:	(bad)  
  407662:	imul   esp,DWORD PTR [edi],0xffffff97
  407665:	mov    DWORD PTR [edx+ebx*2-0x3cd450e7],ecx
  40766c:	xor    eax,0xb3eaf2b
  407671:	sahf   
  407672:	addr16 pop esp
  407674:	aas    
  407675:	(bad)  
  407676:	lock and bl,BYTE PTR [ebx+0x2d449860]
  40767d:	lds    ebx,FWORD PTR ss:[ebp-0x5c]
  407681:	add    DWORD PTR [edx-0x6c6ebbb9],ecx
  407687:	push   esi
  407688:	leave  
  407689:	inc    eax
  40768a:	push   ebx
  40768b:	in     al,dx
  40768c:	loopne 0x407610
  40768e:	jae    0x407664
  407690:	hlt    
  407691:	add    al,0x6c
  407693:	ins    BYTE PTR es:[edi],dx
  407694:	mov    ds,ebx
  407696:	jmp    0xc4ef:0xc486dc71
  40769d:	iret   
  40769e:	jg     0x407691
  4076a0:	loopne 0x4076a4
  4076a2:	(bad)  
  4076a3:	cmc    
  4076a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076a5:	and    eax,0x6b10e4c3
  4076aa:	pop    es
  4076ab:	pop    edx
  4076ac:	sub    eax,0xd12e55d9
  4076b1:	ret    
  4076b2:	jmp    0x4076cf
  4076b4:	inc    edx
  4076b5:	in     al,dx
  4076b6:	or     BYTE PTR [eax-0x66],al
  4076b9:	xchg   ebp,eax
  4076ba:	inc    eax
  4076bb:	fnsave [ebx-0x68f32609]
  4076c1:	pop    edx
  4076c2:	xor    dl,cl
  4076c4:	ret    0xb47f
  4076c7:	push   es
  4076c8:	mov    eax,ds:0x6b50cead
  4076cd:	mov    DWORD PTR [ecx+0x4bb9212f],edx
  4076d3:	add    DWORD PTR [ecx-0xf],ebp
  4076d6:	mov    dl,0xc3
  4076d8:	imul   ebp,DWORD PTR [eax+eax*8-0x3d],0x41
  4076dd:	shr    BYTE PTR [ebp-0x43238772],0xd
  4076e4:	nop
  4076e5:	scas   al,BYTE PTR es:[edi]
  4076e6:	ds xchg ebp,eax
  4076e8:	xchg   ecx,eax
  4076e9:	jns    0x4076e7
  4076eb:	cmp    BYTE PTR [eax+0x50],0x6a
  4076ef:	cmp    edx,esi
  4076f1:	mov    bl,BYTE PTR [ebx+0x41]
  4076f4:	ja     0x40776c
  4076f6:	push   cs
  4076f7:	add    DWORD PTR [eax+0x6bc5351],0xe18750f8
  407701:	rol    ah,cl
  407703:	jne    0x40774c
  407705:	cs adc esp,ebx
  407708:	jbe    0x4076e2
  40770a:	xor    eax,0x667d735e
  40770f:	stc    
  407710:	xchg   dl,bl
  407712:	ja     0x4076b5
  407714:	bound  esi,QWORD PTR [esi-0x6f]
  407717:	out    0x6a,al
  407719:	sbb    BYTE PTR [edx+0x2ae0fdd5],ah
  40771f:	jb     0x407772
  407721:	mov    eax,ds:0x1e675888
  407726:	aad    0xd6
  407728:	xchg   edx,eax
  407729:	cdq    
  40772a:	pop    ss
  40772b:	enter  0xd673,0xc0
  40772f:	sahf   
  407730:	int3   
  407731:	shl    BYTE PTR [ebp-0x26],0x6b
  407735:	inc    ebp
  407736:	adc    eax,0xdfdbaf5d
  40773b:	adc    DWORD PTR [eax],0x5c856466
  407741:	xchg   DWORD PTR [ebx+0x44389cf3],edx
  407747:	das    
  407748:	rcr    BYTE PTR ds:0xf3aa2abb,1
  40774e:	arpl   WORD PTR [edi-0x41],sp
  407751:	dec    ebp
  407752:	hlt    
  407753:	(bad)  
  407754:	(bad)  
  407755:	cmc    
  407756:	or     al,0x44
  407758:	cmp    esp,DWORD PTR [eax-0x5e]
  40775b:	add    al,0x8d
  40775d:	mov    edi,0xbddbc89c
  407762:	in     eax,dx
  407763:	add    dl,BYTE PTR [edx]
  407765:	(bad)  
  407766:	mov    eax,0x21461d81
  40776b:	sbb    al,0x5
  40776d:	xchg   BYTE PTR [edi+0x6234ce3e],dl
  407773:	mov    dl,0x4e
  407775:	jo     0x4077c5
  407777:	inc    edi
  407778:	add    ebp,DWORD PTR [edi-0x6b]
  40777b:	cld    
  40777c:	mov    al,ds:0x9025d088
  407781:	push   0x1023d03e
  407786:	mov    BYTE PTR ds:0x1e742400,al
  40778c:	outs   dx,BYTE PTR ds:[esi]
  40778d:	repz mov eax,0x81e23bfc
  407793:	mov    edx,DWORD PTR [ebx-0x23cff099]
  407799:	dec    ebx
  40779a:	mov    ebx,0xb969d00f
  40779f:	sbb    eax,0x943688a0
  4077a4:	jo     0x4077b3
  4077a6:	xor    cl,0x86
  4077a9:	mov    DWORD PTR [edi+0x6131516a],ebp
  4077af:	mov    dh,0x57
  4077b1:	ds (bad) 
  4077b3:	mov    ch,0xa6
  4077b5:	sbb    BYTE PTR [ecx+0x2e],al
  4077b8:	xlat   BYTE PTR ds:[ebx]
  4077b9:	or     DWORD PTR [edi],edx
  4077bb:	dec    esi
  4077bc:	outs   dx,BYTE PTR ds:[esi]
  4077bd:	fisub  DWORD PTR [edi-0x17]
  4077c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c1:	pop    es
  4077c2:	xchg   esi,esp
  4077c4:	xchg   ebx,eax
  4077c5:	hlt    
  4077c6:	mov    dl,0xd7
  4077c8:	aas    
  4077c9:	jo     0x4077c1
  4077cb:	scas   eax,DWORD PTR es:[edi]
  4077cc:	push   esp
  4077cd:	inc    ebp
  4077ce:	mov    ecx,DWORD PTR [ebx-0x30]
  4077d1:	(bad)
  4077d4:	push   ds
  4077d5:	sahf   
  4077d6:	sti    
  4077d7:	ins    DWORD PTR es:[edi],dx
  4077d8:	in     eax,0x30
  4077da:	cmp    eax,0x65aac3bb
  4077df:	xchg   ebx,eax
  4077e0:	pop    ebx
  4077e1:	sub    eax,0x68551ba7
  4077e6:	jmp    0x407813
  4077e8:	retf   0xc9cb
  4077eb:	push   edi
  4077ec:	mov    edi,0xeef6625
  4077f1:	inc    edi
  4077f2:	xor    esi,DWORD PTR [ebx]
  4077f4:	mov    eax,ds:0x4d01f419
  4077f9:	call   0xbd4adf77
  4077fe:	popf   
  4077ff:	and    eax,0xf4d6ebe2
  407804:	xor    cl,ch
  407806:	fstp   QWORD PTR [ebp+ebp*4-0x5982e63b]
  40780d:	test   eax,0x4c32722f
  407812:	in     al,0x1f
  407814:	mov    ds:0x13d0c89f,al
  407819:	xor    dl,dl
  40781b:	jae    0x40783d
  40781d:	and    BYTE PTR [ebx-0x767645e8],0x8a
  407824:	jl     0x407824
  407826:	das    
  407827:	add    bl,bl
  407829:	jl     0x40788e
  40782b:	adc    al,0xc8
  40782d:	imul   ecx,edx,0xfffffff4
  407830:	jg     0x40789f
  407832:	addr16 mov dh,0x8d
  407835:	and    edx,eax
  407837:	in     eax,dx
  407838:	push   es
  407839:	push   0xffffffa4
  40783b:	lea    esi,[edi+ecx*1-0x8]
  40783f:	push   ds
  407840:	out    0xc6,al
  407842:	push   cs
  407843:	mov    dl,0x99
  407845:	sub    eax,0x1d273224
  40784a:	leave  
  40784b:	mov    edx,0xca16109d
  407850:	es pop DWORD PTR ss:[eax-0x2b]
  407855:	or     eax,0x196d45d9
  40785a:	jne    0x4077e7
  40785c:	shr    BYTE PTR [ebp-0x6c],0x1
  407860:	mov    ah,0x6f
  407862:	(bad)  
  407863:	(bad)  
  407864:	adc    esp,esi
  407866:	leave  
  407867:	call   0x9bfa767c
  40786c:	ss push eax
  40786e:	push   edx
  40786f:	mov    dl,0xbc
  407871:	sub    edx,DWORD PTR [esp+ebp*8-0x7e90c114]
  407878:	leave  
  407879:	mov    bl,BYTE PTR [edi+0x36]
  40787c:	jns    0x407820
  40787e:	push   ss
  40787f:	jmp    0x264c3685
  407884:	adc    eax,0x7faa40c5
  407889:	cmp    esi,DWORD PTR [eax]
  40788b:	(bad)  
  40788c:	pop    esi
  40788d:	cld    
  40788e:	mov    ecx,0x39969dee
  407893:	loope  0x407850
  407895:	pop    ss
  407896:	xor    DWORD PTR [eax],esi
  407898:	jp     0x407887
  40789a:	mov    DWORD PTR [edi+0x2a393a62],edi
  4078a0:	jmp    0x407902
  4078a2:	mov    ds:0x5e0c75a2,eax
  4078a7:	stos   BYTE PTR es:[edi],al
  4078a8:	sub    BYTE PTR [edi+esi*8-0x65],bh
  4078ac:	loope  0x4078f7
  4078ae:	(bad)  
  4078af:	neg    DWORD PTR [edi]
  4078b1:	add    eax,0xd11d4eb9
  4078b6:	sub    eax,0xbaf43ba8
  4078bb:	xchg   esi,eax
  4078bc:	sub    DWORD PTR [ebx-0x5c3701fe],0xffffff9e
  4078c3:	jb     0x40784c
  4078c5:	mov    WORD PTR [ecx-0x3c03618e],ss
  4078cb:	xor    dh,cl
  4078cd:	cdq    
  4078ce:	cmp    al,0xc9
  4078d0:	xchg   BYTE PTR [eax],ah
  4078d2:	enter  0xbcf9,0x72
  4078d6:	into   
  4078d7:	dec    eax
  4078d8:	stos   DWORD PTR es:[edi],eax
  4078d9:	int3   
  4078da:	cmp    eax,DWORD PTR [eax+0x46a4c6ef]
  4078e0:	sbb    bh,ah
  4078e2:	mov    edi,0x9f5ec1a7
  4078e7:	cmp    eax,0xac8ab389
  4078ec:	(bad)  
  4078ee:	fadd   QWORD PTR [ebx+ebx*1-0x3e]
  4078f2:	lds    eax,FWORD PTR [ebx]
  4078f4:	shr    DWORD PTR [ecx],0xf1
  4078f7:	mov    al,ds:0x7dae5475
  4078fc:	inc    esp
  4078fd:	pcmpeqb mm3,QWORD PTR [edi]
  407900:	mov    eax,ds:0x53ea0cab
  407905:	adc    ah,dh
  407907:	push   esi
  407908:	xor    al,0xb0
  40790a:	inc    ecx
  40790b:	inc    edi
  40790c:	retf   
  40790d:	cdq    
  40790e:	test   BYTE PTR [ebx-0x7c],dh
  407911:	leave  
  407912:	cmc    
  407913:	mov    eax,0x998d1e97
  407918:	icebp  
  407919:	aad    0x90
  40791b:	add    eax,0x31b4c10d
  407920:	fbstp  TBYTE PTR [edx*4-0x67a3b12b]
  407927:	mov    ds:0xadb619c6,al
  40792c:	mov    cl,0x30
  40792e:	and    ebp,esp
  407930:	imul   eax,edx,0x32
  407933:	sub    dl,BYTE PTR [edx]
  407935:	jmp    0x72de:0xf29ff96d
  40793c:	(bad)  
  40793d:	out    0xf5,eax
  40793f:	out    0xd1,eax
  407941:	sbb    ebx,DWORD PTR [edi+edi*2]
  407944:	scas   eax,DWORD PTR es:[edi]
  407945:	(bad)  
  407947:	loopne 0x4078c9
  407949:	mov    DWORD PTR [ecx-0x22],ecx
  40794c:	add    bl,BYTE PTR ds:0x37869951
  407952:	xor    edx,ecx
  407954:	nop
  407955:	and    eax,0xff14ef39
  40795a:	test   edx,ebp
  40795c:	nop
  40795d:	inc    edi
  40795e:	or     eax,0xaaea17ab
  407963:	sar    BYTE PTR ds:0x82275444,cl
  407969:	cmp    bl,BYTE PTR [esi+eiz*1-0x1148288f]
  407970:	hlt    
  407971:	pop    edx
  407972:	push   edx
  407973:	jb     0x4079c2
  407975:	fdiv   QWORD PTR [eax+esi*4+0x49]
  407979:	jl     0x407906
  40797b:	clc    
  40797c:	inc    eax
  40797d:	ja     0x4079f9
  40797f:	dec    edx
  407980:	sub    DWORD PTR [ebx+0x62],ecx
  407983:	xchg   ebx,eax
  407984:	(bad)  
  407985:	hlt    
  407986:	out    dx,eax
  407987:	pop    ds
  407988:	adc    ebp,esp
  40798a:	xor    BYTE PTR [eax+eiz*8+0x231b22ca],ah
  407991:	rcl    BYTE PTR [ecx-0x61],1
  407994:	ins    DWORD PTR es:[edi],dx
  407995:	jns    0x407975
  407997:	not    DWORD PTR [ebp+0x17]
  40799a:	daa    
  40799b:	cmp    ebx,DWORD PTR [ebp-0x5ce1e530]
  4079a1:	fst    DWORD PTR [edi-0x3bef2de9]
  4079a7:	ret    
  4079a8:	inc    esi
  4079a9:	xchg   esp,eax
  4079aa:	xlat   BYTE PTR ds:[ebx]
  4079ab:	jo     0x407940
  4079ad:	cdq    
  4079ae:	stos   BYTE PTR es:[edi],al
  4079af:	cmp    DWORD PTR [ebx*2+0x6b0149fc],edi
  4079b6:	xor    al,BYTE PTR ds:0xd5e28b3
  4079bc:	push   ss
  4079bd:	leave  
  4079be:	inc    ecx
  4079bf:	jo     0x4079ff
  4079c1:	mov    WORD PTR [edi+0x158f5efe],cs
  4079c7:	sahf   
  4079c8:	push   0x1b8ab569
  4079cd:	inc    edx
  4079ce:	loopne 0x407982
  4079d0:	mov    ecx,0x8a1290ec
  4079d5:	addr16 cmp esi,0x2f498660
  4079dc:	fs dec ebp
  4079de:	jl     0x4079ca
  4079e0:	loopne 0x4079fe
  4079e2:	fs pop ebx
  4079e4:	xchg   esp,eax
  4079e5:	sub    ah,cl
  4079e7:	sub    bh,bh
  4079e9:	sub    eax,0xdc24c495
  4079ee:	adc    eax,DWORD PTR [ebx]
  4079f0:	cmp    DWORD PTR [ecx],0x4a736689
  4079f6:	xor    esp,eax
  4079f8:	inc    esi
  4079f9:	call   0xbdae:0x869c2a21
  407a00:	jl     0x407a46
  407a02:	sti    
  407a03:	or     eax,0xa87e6c32
  407a08:	ret    
  407a09:	test   eax,0xcd8b4264
  407a0e:	mov    eax,ds:0x5f2f272b
  407a13:	aaa    
  407a14:	mov    WORD PTR [edx+0x277edca9],ss
  407a1a:	repz ss dec esi
  407a1d:	mov    cl,0x6
  407a1f:	pop    ss
  407a20:	stc    
  407a21:	xchg   edi,eax
  407a22:	jno    0xe33fac6c
  407a28:	idiv   DWORD PTR [esi]
  407a2a:	or     dl,BYTE PTR [ebp+eiz*1+0x22]
  407a2e:	jle    0x407a96
  407a30:	shr    esi,cl
  407a32:	mov    ah,0x37
  407a34:	jge    0x4079e2
  407a36:	xor    al,0x2a
  407a38:	imul   esp,esp,0x3e
  407a3b:	shl    BYTE PTR [ecx],0x78
  407a3e:	ret    
  407a3f:	sbb    eax,0x8abc8162
  407a44:	cli    
  407a45:	iret   
  407a46:	stos   BYTE PTR es:[edi],al
  407a47:	lea    edx,[edi]
  407a49:	xor    edx,ebx
  407a4b:	and    BYTE PTR [eax-0x3dde04ba],ah
  407a51:	sbb    ah,BYTE PTR [eax]
  407a53:	pop    edx
  407a54:	rcl    bl,0xfc
  407a57:	xchg   esp,eax
  407a58:	nop
  407a59:	mov    eax,0x901a6f5b
  407a5e:	popa   
  407a5f:	mov    esp,0x1cf7414
  407a64:	add    al,0x51
  407a66:	and    ecx,ebp
  407a68:	jmp    0x407ace
  407a6a:	and    BYTE PTR [esi+edx*2-0x4e],dl
  407a6e:	call   DWORD PTR gs:[ebx-0x6a]
  407a73:	ja     0x407ae1
  407a75:	loop   0x407a8e
  407a77:	mov    ah,0xbb
  407a79:	out    dx,eax
  407a7a:	push   ebp
  407a7b:	add    DWORD PTR [edx],edx
  407a7d:	stos   BYTE PTR es:[edi],al
  407a7e:	jne    0x407a15
  407a80:	repz ror DWORD PTR [bx+si+0x1b],cl
  407a85:	and    ecx,DWORD PTR ds:0x556cf790
  407a8b:	mov    WORD PTR [esi+edx*1+0x47120839],es
  407a92:	or     al,0x5c
  407a94:	pop    esp
  407a95:	ss sbb ebx,eax
  407a98:	or     bl,BYTE PTR [eax]
  407a9a:	stos   DWORD PTR es:[edi],eax
  407a9b:	mov    eax,ds:0xd7e1c265
  407aa0:	cli    
  407aa1:	add    DWORD PTR ds:[ecx+eax*2],esi
  407aa5:	out    dx,al
  407aa6:	call   0xaf674249
  407aab:	std    
  407aac:	xchg   ebp,eax
  407aad:	rol    edi,0x64
  407ab0:	stos   DWORD PTR es:[edi],eax
  407ab1:	dec    esp
  407ab2:	rcr    BYTE PTR [ecx],cl
  407ab4:	imul   edi,DWORD PTR [edi-0x55],0xffffffe5
  407ab8:	push   edx
  407ab9:	dec    edi
  407aba:	test   al,0xde
  407abc:	or     eax,DWORD PTR [ebp-0x53a456a]
  407ac2:	cld    
  407ac3:	les    edx,FWORD PTR [edi+eiz*2-0x4cecc4a4]
  407aca:	inc    ecx
  407acb:	mov    eax,0x5d9839ab
  407ad0:	xchg   edx,eax
  407ad1:	rol    DWORD PTR [ecx+0x2c1cd956],0xcc
  407ad8:	mov    cl,0xc5
  407ada:	lahf   
  407adb:	cwde   
  407adc:	xchg   edx,eax
  407add:	push   ebx
  407ade:	ins    BYTE PTR es:[edi],dx
  407adf:	dec    edx
  407ae0:	(bad)  
  407ae1:	int    0x1e
  407ae3:	bound  eax,QWORD PTR [eax+0x59]
  407ae6:	fisttp DWORD PTR [ebp+0x1d]
  407ae9:	pop    edi
  407aea:	je     0x407b14
  407aec:	dec    eax
  407aed:	push   0x2a7d2b80
  407af2:	mov    eax,ds:0x14d6cbb9
  407af8:	in     al,0x85
  407afa:	sub    eax,0xa18b93fe
  407aff:	or     al,0x93
  407b01:	sti    
  407b02:	jle    0x407ad9
  407b04:	sar    BYTE PTR [edi+0x46ef42ce],0x22
  407b0b:	scas   eax,DWORD PTR es:[edi]
  407b0c:	dec    ebx
  407b0d:	loopne 0x407b66
  407b0f:	pop    edx
  407b10:	and    al,0x57
  407b12:	xlat   BYTE PTR ds:[ebx]
  407b13:	xor    DWORD PTR es:[ecx-0x3a6a6bf6],edi
  407b1a:	lods   eax,DWORD PTR ds:[esi]
  407b1b:	dec    edx
  407b1c:	mov    ebp,0x7c97d3fc
  407b21:	pop    ecx
  407b22:	and    BYTE PTR [esp+eax*8+0x4ca91925],bl
  407b29:	mov    dl,cl
  407b2b:	lods   eax,DWORD PTR ds:[esi]
  407b2c:	add    al,0xa5
  407b2e:	jmp    0x4aa4326c
  407b33:	dec    ebp
  407b34:	mov    ecx,0x89fd18fa
  407b39:	adc    DWORD PTR [esi-0x6cc3dcf],edx
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x6f9370e0
  407e5b:	push   ebx
  407e5c:	ja     0x407e2d
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	dec    edx
  407e66:	add    BYTE PTR [ecx-0x328ed5ae],al
  407e6c:	icebp  
  407e6d:	scas   eax,DWORD PTR es:[edi]
  407e6e:	cmp    DWORD PTR [eax],esi
  407e70:	inc    esp
  407e71:	xchg   esp,eax
  407e72:	xchg   ecx,eax
  407e73:	jmp    0x407e3a
  407e75:	sar    DWORD PTR [esi+ecx*4],cl
  407e78:	push   es
  407e79:	sub    ecx,DWORD PTR [eax-0x4]
  407e7c:	or     eax,0xcc83a05e
  407e81:	pusha  
  407e82:	mov    eax,0x59206339
  407e87:	jecxz  0x407e74
  407e89:	retf   
  407e8a:	jne    0x407ea1
  407e8c:	xchg   ebp,eax
  407e8e:	sar    DWORD PTR [eax-0x2807d77f],1
  407e94:	push   esi
  407e95:	xor    eax,0xb7113a65
  407e9a:	jne    0x407e46
  407e9c:	in     eax,0x23
  407e9e:	fs cmp eax,0xac8289eb
  407ea4:	mov    bl,BYTE PTR [eax-0x73]
  407ea7:	jnp    0x407ef2
  407ea9:	mov    al,dh
  407eab:	imul   esi,DWORD PTR ds:0xc8ba3220,0x4767f743
  407eb5:	cmp    ebp,DWORD PTR [ebx+0x74]
  407eb8:	stos   DWORD PTR es:[edi],eax
  407eb9:	jbe    0x407e88
  407ebb:	xchg   edx,eax
  407ebc:	icebp  
  407ebd:	push   esp
  407ebe:	push   esp
  407ebf:	or     ah,BYTE PTR [ebx-0x7fa6d027]
  407ec5:	test   BYTE PTR [ecx+ebp*1],0xcf
  407ec9:	mov    ebx,0x350da6e1
  407ece:	add    BYTE PTR [ecx-0x6d902734],bh
  407ed4:	dec    ecx
  407ed5:	ins    DWORD PTR es:[edi],dx
  407ed6:	jg     0x407f28
  407ed8:	aas    
  407ed9:	mov    ebx,0x63aa398a
  407ede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407edf:	adc    BYTE PTR [edi],0x50
  407ee2:	xchg   DWORD PTR [edx+0x21],ebx
  407ee5:	jmp    0x407ed2
  407ee7:	aaa    
  407ee8:	xchg   ecx,eax
  407ee9:	stos   DWORD PTR es:[edi],eax
  407eea:	cld    
  407eeb:	xchg   edx,eax
  407eec:	stos   BYTE PTR es:[edi],al
  407eed:	xor    DWORD PTR [esi],ebx
  407eef:	sub    edx,DWORD PTR gs:[ebx-0x3c]
  407ef3:	mov    dh,0xac
  407ef5:	inc    ebp
  407ef6:	lock pop esp
  407ef8:	outs   dx,BYTE PTR ds:[esi]
  407ef9:	dec    ebp
  407efa:	xchg   edx,eax
  407efb:	loop   0x407ea1
  407efd:	pop    ss
  407efe:	mov    ds:0xe83ffa0d,eax
  407f03:	push   ss
  407f04:	(bad)  
  407f05:	and    eax,0x58f2c75c
  407f0a:	retf   0x6cd2
  407f0d:	cld    
  407f0e:	stos   BYTE PTR es:[edi],al
  407f0f:	push   ds
  407f10:	mov    al,ds:0xd5ab6fde
  407f15:	dec    ebx
  407f16:	fdiv   DWORD PTR [edi+0x504b5099]
  407f1c:	fsubr  QWORD PTR [edx]
  407f1e:	mov    ah,0x52
  407f20:	jbe    0x407ec9
  407f22:	lahf   
  407f23:	arpl   WORD PTR [ebp+0x73d7337],di
  407f29:	sub    dl,BYTE PTR [edi-0x71c48a08]
  407f2f:	repz add DWORD PTR [edx-0x574872f2],edi
  407f36:	aad    0xb6
  407f38:	jo     0x407f0c
  407f3a:	mov    bh,0xa2
  407f3c:	xlat   BYTE PTR ds:[ebx]
  407f3d:	sub    eax,0xd9a5d341
  407f42:	mov    ss,WORD PTR [ebx+0xa354d97]
  407f48:	mov    eax,ds:0x82347896
  407f4d:	pusha  
  407f4e:	adc    BYTE PTR [eax+0x16],cl
  407f51:	mov    eax,0x41e7db4
  407f56:	push   eax
  407f57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f58:	inc    edx
  407f59:	xor    bl,BYTE PTR [edx-0x31]
  407f5c:	mov    al,ds:0x86299294
  407f61:	mov    al,0x94
  407f63:	aad    0x14
  407f65:	std    
  407f66:	lahf   
  407f67:	ficomp DWORD PTR [edx]
  407f69:	(bad)  
  407f6a:	cmp    al,0x58
  407f6c:	xor    cl,BYTE PTR [ebx-0x1e]
  407f6f:	jns    0x407f12
  407f71:	repz sahf 
  407f73:	std    
  407f74:	xor    BYTE PTR [edi+0x2d],al
  407f77:	stos   DWORD PTR es:[edi],eax
  407f78:	dec    ebp
  407f79:	push   eax
  407f7a:	cld    
  407f7b:	es out dx,al
  407f7d:	mov    al,0x80
  407f7f:	xor    DWORD PTR [edx],esi
  407f81:	mov    ecx,0xbcf9e1cf
  407f86:	mov    eax,ds:0x54613129
  407f8b:	ror    bl,0xf7
  407f8e:	cmp    ecx,DWORD PTR [esi-0x13fa1e0]
  407f94:	(bad)  
  407f95:	fwait
  407f96:	mov    dl,BYTE PTR [ebx-0x62d22f4b]
  407f9c:	inc    edi
  407f9d:	shr    BYTE PTR [edi+0x38],0x59
  407fa1:	ins    BYTE PTR es:[edi],dx
  407fa2:	mov    DWORD PTR [ebx+eax*1+0x66],eax
  407fa6:	jmp    0x74c4:0xcf6fb5f6
  407fad:	add    edx,DWORD PTR [edx+0x1268f0ed]
  407fb3:	rcl    DWORD PTR [esi+0x1a],1
  407fb6:	or     eax,0xa9de2ecc
  407fbb:	xor    dh,BYTE PTR [edi+0x50]
  407fbe:	dec    edi
  407fbf:	cmp    ebx,esi
  407fc1:	mov    ds:0xf034fbc8,al
  407fc6:	dec    ecx
  407fc7:	adc    eax,0x55e7eee8
  407fcc:	mul    edi
  407fce:	arpl   WORD PTR [ebx],bx
  407fd0:	push   ebp
  407fd1:	mov    WORD PTR es:[edi-0x6b],ds
  407fd5:	lock pusha 
  407fd7:	push   ecx
  407fd8:	sub    al,0xd7
  407fda:	cmc    
  407fdb:	retf   0xcd74
  407fde:	leave  
  407fdf:	gs stos BYTE PTR es:[edi],al
  407fe1:	out    0x44,eax
  407fe3:	push   cs
  407fe4:	jno    0x40801d
  407fe6:	xor    DWORD PTR [esi+0x24ad61d4],edx
  407fec:	fidivr DWORD PTR [eax]
  407fee:	popf   
  407fef:	push   ss
  407ff0:	jb     0x407fae
  407ff2:	lea    edx,[ecx]
  407ff4:	jne    0x40806f
  407ff6:	test   al,0xd9
  407ff8:	ror    BYTE PTR [esi+0x39],1
  407ffb:	or     edi,ecx
  407ffd:	ds popa 
  407fff:	mov    ebp,0xa59f43b0
  408004:	sub    cl,dh
  408006:	inc    edi
  408007:	pop    ds
  408008:	stos   DWORD PTR es:[edi],eax
  408009:	out    0xf6,al
  40800b:	add    BYTE PTR [ebp+0x17838bd1],0x62
  408012:	mov    eax,0xf33378bc
  408017:	sub    al,0x8e
  408019:	mov    al,ds:0xed0d4fc7
  40801e:	mov    cl,BYTE PTR [edi-0x17d357cd]
  408024:	loop   0x40800f
  408026:	test   DWORD PTR [ebx+0x12bc3611],eax
  40802c:	sbb    al,0xdc
  40802e:	outs   dx,DWORD PTR ds:[esi]
  40802f:	pusha  
  408030:	or     bh,BYTE PTR [edx-0x1e]
  408033:	mov    ch,0x8c
  408035:	imul   edx,DWORD PTR [esi+0x39d76a1f],0xb8e45e75
  40803f:	xchg   edx,eax
  408040:	mov    DWORD PTR [eax+esi*1-0x58],ecx
  408044:	lods   al,BYTE PTR ds:[esi]
  408045:	(bad)  
  408047:	cli    
  408048:	fisttp WORD PTR [ebp+0x4c0718e1]
  40804e:	pushf  
  40804f:	and    al,0x8d
  408051:	addr16 inc esp
  408053:	push   ebx
  408054:	jbe    0x40805b
  408056:	mov    ebp,0xc8c074dc
  40805b:	xchg   esi,eax
  40805c:	adc    ah,BYTE PTR [edi]
  40805e:	dec    esi
  40805f:	imul   ebx,DWORD PTR [esi+0x69],0x9c956e49
  408066:	(bad)  
  408067:	popf   
  408068:	mov    esp,0xa8d907cd
  40806d:	daa    
  40806e:	popa   
  40806f:	jle    0x408036
  408071:	in     al,0xfe
  408073:	sbb    DWORD PTR [esi],0x41
  408076:	nop
  408077:	(bad)
  40807c:	icebp  
  40807d:	imul   edx,DWORD PTR [esi+0x35e9be4e],0xcae12b94
  408087:	jns    0x40809c
  408089:	push   ds
  40808a:	fsincos 
  40808c:	sub    bh,BYTE PTR [esi]
  40808e:	(bad)  
  408091:	push   es
  408092:	push   ss
  408093:	imul   eax,DWORD PTR [edi+ebx*2-0x1d8d861d],0xb939c564
  40809e:	jmp    0x40805d
  4080a0:	cmp    al,BYTE PTR [ebx]
  4080a2:	leave  
  4080a3:	cli    
  4080a4:	inc    ecx
  4080a5:	jg     0x4080b4
  4080a7:	push   ds
  4080a8:	cmp    BYTE PTR [ebx-0x1f],ah
  4080ab:	fisubr WORD PTR [edi-0x79]
  4080ae:	(bad)  
  4080af:	push   esp
  4080b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080b1:	leave  
  4080b2:	xchg   DWORD PTR [edi],edx
  4080b4:	aad    0xd
  4080b6:	jae    0x4080f0
  4080b8:	cmp    ebx,ebx
  4080ba:	in     eax,dx
  4080bb:	ret    
  4080bc:	mov    ebx,0xc0238247
  4080c1:	sbb    al,0x62
  4080c3:	push   0xffffffb3
  4080c5:	lock fmul st(7),st
  4080c8:	push   edx
  4080c9:	mov    ch,0x29
  4080cb:	xor    BYTE PTR [eax],cl
  4080cd:	ficom  WORD PTR [esp+eax*8+0x2e]
  4080d1:	or     edx,DWORD PTR [edi+ebx*8+0x1f056289]
  4080d8:	ret    0xf291
  4080db:	mov    ?,ebx
  4080dd:	mov    al,ds:0x5afdaca0
  4080e2:	out    dx,al
  4080e3:	daa    
  4080e4:	dec    eax
  4080e5:	mov    cl,0xc0
  4080e7:	jbe    0x408121
  4080e9:	daa    
  4080ea:	fwait
  4080eb:	jnp    0x40809c
  4080ed:	jg     0x40810b
  4080ef:	bound  esp,QWORD PTR [edx+0x56]
  4080f2:	push   es
  4080f3:	or     al,0xef
  4080f5:	or     eax,esp
  4080f7:	pusha  
  4080f8:	cmp    eax,0xceca0a25
  4080fd:	scas   al,BYTE PTR es:[edi]
  4080fe:	js     0x40813e
  408100:	mov    ebp,0x2c5f6b83
  408105:	and    edx,DWORD PTR [esi]
  408107:	mov    edi,0x84b6a6e2
  40810c:	or     bl,BYTE PTR [ebp+0x5381e6a7]
  408112:	mov    esp,0xc55ab3a2
  408117:	cmp    BYTE PTR [eax],ah
  408119:	inc    ebx
  40811a:	ins    BYTE PTR es:[edi],dx
  40811b:	mov    bh,0xf0
  40811d:	lods   al,BYTE PTR ds:[esi]
  40811e:	rcr    BYTE PTR ds:0x6c8b8afe,cl
  408124:	(bad)  
  408125:	ja     0x408158
  408127:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408128:	fist   WORD PTR [ebp+ebx*2-0x40af8445]
  40812f:	sbb    al,0x58
  408131:	inc    esp
  408132:	pusha  
  408133:	or     ecx,DWORD PTR [edi+0x0]
  408136:	mov    cl,0xc2
  408138:	aaa    
  408139:	sbb    esp,ecx
  40813b:	iret   
  40813c:	push   ebp
  40813d:	fcmovbe st,st(0)
  40813f:	inc    ebx
  408140:	mov    ah,0x13
  408142:	xor    BYTE PTR [esp+ecx*1-0x236e8230],ch
  408149:	cmp    BYTE PTR [eax],bh
  40814b:	push   ecx
  40814c:	loope  0x40810a
  40814e:	mov    DWORD PTR [eax+0x571c46b8],eax
  408154:	xor    dl,BYTE PTR [ebx-0x34]
  408157:	mov    DWORD PTR [ebp+0x4e0d0f76],ebx
  40815d:	pop    ebx
  40815e:	(bad)  
  40815f:	adc    cl,BYTE PTR [edx+0x5d8c148]
  408165:	and    ah,BYTE PTR [esi+edi*2+0x0]
  408169:	out    0xb5,eax
  40816b:	ja     0x408108
  40816d:	pop    ebp
  40816e:	es mov ah,0x4b
  408171:	(bad)  
  408172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408173:	pop    ebp
  408174:	mov    ds:0x32e23130,al
  408179:	jbe    0x408115
  40817b:	popf   
  40817c:	sahf   
  40817d:	cld    
  40817e:	(bad)  
  40817f:	mul    DWORD PTR [ebx-0x53e12bd7]
  408185:	scas   al,BYTE PTR es:[edi]
  408186:	stos   BYTE PTR es:[edi],al
  408187:	sub    bh,BYTE PTR [ebp-0x272c4a6d]
  40818d:	ja     0x4081fd
  40818f:	or     al,0xee
  408191:	stc    
  408192:	cmp    DWORD PTR [ecx+0x376ab525],edx
  408198:	pop    ds
  408199:	sbb    ecx,DWORD PTR [ebp-0x4a]
  40819c:	cmp    edi,DWORD PTR [esp+esi*1]
  40819f:	leave  
  4081a0:	out    0x35,al
  4081a2:	adc    BYTE PTR ds:[esi],ah
  4081a5:	inc    eax
  4081a6:	das    
  4081a7:	gs inc eax
  4081a9:	or     BYTE PTR [edx+ebp*4],al
  4081ac:	pop    edi
  4081ad:	fidiv  WORD PTR [esi]
  4081af:	sbb    ecx,DWORD PTR [esi]
  4081b1:	jnp    0x4081c0
  4081b3:	sub    DWORD PTR [ecx-0x56],ecx
  4081b6:	push   esp
  4081b7:	js     0x408158
  4081b9:	fld    QWORD PTR [esi+edi*4-0x3e]
  4081bd:	(bad)  
  4081be:	xor    DWORD PTR [ebx-0x2f64c6e5],ebx
  4081c4:	adc    eax,0xa3701325
  4081c9:	sub    esi,DWORD PTR [esi+0x767dad2d]
  4081cf:	js     0x408217
  4081d1:	sub    esp,DWORD PTR [edi-0x5c]
  4081d4:	das    
  4081d5:	(bad)  
  4081d6:	lods   al,BYTE PTR ds:[esi]
  4081d7:	imul   eax,DWORD PTR [eax-0x30],0x143334b3
  4081de:	sub    ebx,0xffffffa6
  4081e1:	lock in al,0x45
  4081e4:	ds push esp
  4081e6:	sub    bh,BYTE PTR [esi-0x5c]
  4081e9:	mov    edx,0x2da41b3d
  4081ee:	push   ecx
  4081ef:	test   eax,0x886781d7
  4081f5:	jmp    0x5032fb49
  4081fa:	dec    ecx
  4081fb:	retf   0x9392
  4081fe:	(bad)  
  408200:	bound  esp,QWORD PTR [ebx+0x25560d0a]
  408206:	jp     0x4081d1
  408208:	mov    cl,0x71
  40820a:	jns    0x408191
  40820c:	add    ah,BYTE PTR [esi+0xe]
  40820f:	inc    ebx
  408210:	into   
  408211:	pop    edx
  408212:	dec    eax
  408213:	jmp    0x64424dbd
  408218:	fdivr  st(2),st
  40821a:	retf   0x1592
  40821d:	cmp    al,0x46
  40821f:	shl    BYTE PTR [ecx+esi*1-0xe9d3291],0x7
  408227:	adc    BYTE PTR [esi-0x63],dl
  40822a:	mov    ecx,0xf9320af9
  40822f:	lea    ebx,[edx-0x1f]
  408232:	outs   dx,DWORD PTR ds:[esi]
  408233:	inc    ebx
  408234:	retf   
  408235:	data16 mov dh,0x5a
  408238:	enter  0x4bed,0x40
  40823c:	popa   
  40823d:	add    ecx,edi
  40823f:	dec    eax
  408240:	clc    
  408241:	mov    dl,0xdd
  408243:	add    al,BYTE PTR [ecx]
  408245:	and    eax,DWORD PTR [edx+0x9c3fcb1]
  40824b:	cmp    eax,0xf7999664
  408250:	cld    
  408251:	mov    ch,0xb4
  408253:	cmp    BYTE PTR [ecx+0x1b],dl
  408256:	inc    edx
  408257:	fstp   DWORD PTR [ebx-0x4a023ccd]
  40825d:	pop    esp
  40825e:	fldenv [eax+esi*8-0x6f]
  408262:	popf   
  408263:	xor    cl,BYTE PTR [esi+0x65177509]
  408269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40826a:	add    ch,BYTE PTR [eax+0x5b]
  40826d:	sahf   
  40826e:	cld    
  40826f:	or     ebp,DWORD PTR [ebx]
  408271:	mov    al,ds:0xf5b55b40
  408276:	lahf   
  408277:	cmp    ch,dh
  408279:	cdq    
  40827a:	cdq    
  40827b:	lock ficomp DWORD PTR [ebx-0xb820949]
  408282:	push   esi
  408283:	jnp    0x4082f5
  408285:	neg    DWORD PTR [esi]
  408287:	mov    edx,0x8b254598
  40828c:	lds    ebx,FWORD PTR [edx-0x78f29c01]
  408292:	loop   0x408302
  408294:	test   al,0xd5
  408296:	clc    
  408297:	inc    esi
  408298:	das    
  408299:	push   ebx
  40829a:	lods   al,BYTE PTR ds:[esi]
  40829b:	cld    
  40829c:	dec    esi
  40829d:	fs and eax,0x86212300
  4082a3:	lahf   
  4082a4:	cmp    edi,DWORD PTR [ecx]
  4082a6:	mul    BYTE PTR [ecx]
  4082a8:	push   0xe6783447
  4082ad:	cmp    DWORD PTR [edx+0x75],edx
  4082b0:	popa   
  4082b1:	lds    ebp,FWORD PTR [ecx+0x40]
  4082b4:	and    al,0x9b
  4082b6:	mov    DWORD PTR [edi+0x2afc1fb3],esi
  4082bc:	push   0x1038d376
  4082c1:	or     eax,0xec29aa8f
  4082c6:	or     dl,BYTE PTR [esi+0x51156cc4]
  4082cc:	and    DWORD PTR [edi+0x30],ebp
  4082cf:	js     0x40831e
  4082d1:	int    0xd4
  4082d3:	shl    BYTE PTR [ecx],0x82
  4082d6:	dec    esi
  4082d7:	jg     0x40832e
  4082d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082da:	ins    DWORD PTR es:[edi],dx
  4082db:	jo     0x408279
  4082dd:	push   0x7420384b
  4082e2:	pop    ss
  4082e3:	in     al,0x51
  4082e5:	das    
  4082e6:	fs adc al,0xca
  4082e9:	mov    esi,0x104cb522
  4082ee:	imul   ah
  4082f0:	test   BYTE PTR [ebx+0x7d325a],0x27
  4082f7:	repnz icebp 
  4082f9:	jge    0x408301
  4082fb:	mov    ecx,0xf5b409df
  408300:	jge    0x408357
  408302:	into   
  408303:	pop    edi
  408304:	jns    0x40831c
  408306:	push   0x1673c29
  40830b:	in     al,dx
  40830c:	cld    
  40830d:	mov    al,0x6a
  40830f:	mov    ah,0xf5
  408311:	rol    edi,1
  408313:	push   0xffffffa1
  408315:	sub    al,0x65
  408317:	or     DWORD PTR [eax],edx
  408319:	aaa    
  40831a:	xlat   BYTE PTR ds:[ebx]
  40831b:	outs   dx,BYTE PTR ds:[esi]
  40831c:	int    0xfb
  40831e:	add    esp,DWORD PTR [edi+0x58ab849f]
  408324:	sti    
  408325:	mov    edx,0xec693e30
  40832a:	inc    edx
  40832b:	pop    ss
  40832c:	pop    esp
  40832d:	jg     0x4082fe
  40832f:	fsub   DWORD PTR [ebx-0x13]
  408332:	add    bh,cl
  408334:	mov    ds:0xe5c592a0,al
  408339:	sahf   
  40833a:	dec    esi
  40833b:	and    esi,DWORD PTR [esi]
  40833d:	xor    al,0xb0
  40833f:	sub    al,0x2f
  408341:	mov    eax,ds:0xaf1a457f
  408346:	call   0xeeeb:0x8eb3d9cd
  40834d:	imul   ebp,DWORD PTR [ecx+0x74],0x6555dec2
  408354:	and    al,0xea
  408356:	pop    es
  408357:	or     BYTE PTR [esi],cl
  408359:	arpl   WORD PTR [edx],bx
  40835b:	sub    cl,ah
  40835d:	cwde   
  40835e:	ja     0x408350
  408360:	jns    0x4083c8
  408362:	sbb    eax,0xed3f5c5
  408367:	sahf   
  408368:	mov    BYTE PTR [edx],ch
  40836a:	daa    
  40836b:	push   esi
  40836c:	sbb    ebp,DWORD PTR [edx]
  40836e:	iret   
  40836f:	push   esp
  408370:	out    0x20,eax
  408372:	jecxz  0x40834c
  408374:	test   bh,dl
  408376:	mov    cl,dh
  408378:	xor    dh,ah
  40837a:	shl    BYTE PTR [esp+ebp*1],cl
  40837d:	push   es
  40837e:	or     BYTE PTR [edx-0x45995fe0],dh
  408384:	jg     0x4083ac
  408386:	es mov bl,0x18
  408389:	xor    ebx,ebx
  40838b:	mov    bl,0xae
  40838d:	les    esp,FWORD PTR ds:0x8e512e0f
  408393:	dec    esi
  408394:	popa   
  408395:	dec    esp
  408396:	mov    WORD PTR [esi-0x16387ac0],?
  40839c:	adc    BYTE PTR [ebp+0x6b047f8b],dh
  4083a2:	jnp    0x40834f
  4083a4:	popa   
  4083a5:	bound  ebx,QWORD PTR [eax]
  4083a7:	lods   eax,DWORD PTR ds:[esi]
  4083a8:	mov    al,0x18
  4083aa:	into   
  4083ab:	jbe    0x4083d8
  4083ad:	mov    WORD PTR ds:0xa3b08243,ds
  4083b3:	inc    ecx
  4083b4:	cmp    al,0x13
  4083b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b7:	stc    
  4083b8:	pop    edi
  4083b9:	jecxz  0x408431
  4083bb:	sbb    DWORD PTR [eax],edx
  4083bd:	mov    ds:0xfa425426,eax
  4083c2:	add    DWORD PTR [ebx+0x93ea3c1],edx
  4083c8:	dec    ebp
  4083c9:	pop    edx
  4083ca:	or     bh,BYTE PTR [eax+0x28fa5e81]
  4083d0:	bound  ebp,QWORD PTR [ebp+0x1230dc8b]
  4083d6:	arpl   WORD PTR [edx+0x7d],dx
  4083d9:	sbb    bl,BYTE PTR ds:[ebp+0x3dcb79af]
  4083e0:	in     eax,dx
  4083e1:	fs daa 
  4083e3:	or     esi,esi
  4083e5:	sbb    al,0x32
  4083e7:	push   ss
  4083e8:	cdq    
  4083e9:	inc    ebx
  4083ea:	and    BYTE PTR [esi],0xe5
  4083ed:	hlt    
  4083ee:	int3   
  4083ef:	jo     0x408456
  4083f1:	jbe    0x40844a
  4083f3:	scas   al,BYTE PTR es:[edi]
  4083f4:	scas   al,BYTE PTR es:[edi]
  4083f5:	test   eax,0x6e66ea00
  4083fa:	gs push ecx
  4083fc:	mov    edx,0x89e831f4
  408401:	das    
  408402:	ins    DWORD PTR es:[edi],dx
  408403:	les    eax,FWORD PTR [edi]
  408405:	jae    0x408420
  408407:	mov    edx,0x8b58ff48
  40840c:	jp     0x408450
  40840e:	xchg   ecx,eax
  40840f:	push   eax
  408410:	or     esp,DWORD PTR [ecx+0x2d1e68b6]
  408416:	test   al,0x8b
  408418:	inc    ebp
  408419:	add    DWORD PTR [esi+0x44],0xb5c52709
  408420:	or     eax,0xec718d3f
  408425:	sbb    DWORD PTR [edx-0x75006fe3],esi
  40842b:	ss pusha 
  40842d:	mov    bh,0x92
  40842f:	push   ds
  408430:	xor    BYTE PTR [ebp-0x25720ba9],bl
  408436:	mov    esp,0xda9f3dbf
  40843b:	jb     0x40849a
  40843d:	jns    0x408408
  40843f:	mov    ss,ecx
  408441:	test   al,0xb3
  408443:	inc    esp
  408444:	dec    edi
  408445:	xchg   DWORD PTR [esi],ecx
  408447:	inc    ebx
  408448:	jp     0x408403
  40844a:	arpl   WORD PTR [ebx],bx
  40844c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40844d:	and    DWORD PTR [edi],eax
  40844f:	and    BYTE PTR [esi],ch
  408451:	(bad)  
  408452:	in     eax,0x89
  408454:	mov    eax,ds:0xc1de5c25
  408459:	test   eax,0xed1c4390
  40845e:	fwait
  40845f:	jmp    0x3dbf2ea5
  408464:	add    eax,0x24a360ba
  408469:	sbb    BYTE PTR [edi],dl
  40846b:	cs (bad) 
  40846d:	hlt    
  40846e:	adc    al,0x9c
  408470:	push   ebx
  408471:	cmp    esi,DWORD PTR [ebp+0x12]
  408474:	xor    eax,0xac1e3a2d
  408479:	and    bh,0xb9
  40847c:	mov    BYTE PTR [ecx+0x38],cl
  40847f:	adc    eax,0x2d6d0a4f
  408484:	ret    0x412e
  408487:	loop   0x4084dc
  408489:	mov    ch,0xaf
  40848b:	lock or al,0x19
  40848e:	scas   al,BYTE PTR es:[edi]
  40848f:	test   eax,0x97435ed0
  408494:	nop
  408495:	jno    0x40845e
  408497:	xor    BYTE PTR [ebp+edi*4+0x630b87f0],bh
  40849e:	and    bh,BYTE PTR [ecx+0xd0a4555]
  4084a4:	rcr    ecx,1
  4084a6:	fnstsw WORD PTR [ebx+eiz*1]
  4084a9:	and    ebp,ebp
  4084ab:	push   DWORD PTR [edi-0x1d]
  4084ae:	or     ecx,eax
  4084b0:	aad    0x3d
  4084b2:	sbb    edx,DWORD PTR [ebp-0x62]
  4084b5:	(bad)  
  4084b7:	(bad)  
  4084b8:	sar    DWORD PTR [ebx+0x5],1
  4084bb:	bound  ecx,QWORD PTR [edi+0xf4e5af1]
  4084c1:	jmp    0x408492
  4084c3:	test   BYTE PTR [edi+0x6cf889a6],cl
  4084c9:	loopne 0x408544
  4084cb:	sbb    DWORD PTR [ebx-0x2c],esp
  4084ce:	ins    DWORD PTR es:[edi],dx
  4084cf:	mov    ebp,0x119f49e5
  4084d4:	mov    cl,0xf4
  4084d6:	adc    al,0x6b
  4084d8:	cli    
  4084d9:	mov    bl,0x2d
  4084db:	mov    cl,0xaa
  4084dd:	sbb    DWORD PTR [esi+0x4697f7e4],ecx
  4084e3:	es fwait
  4084e5:	push   edi
  4084e6:	dec    edi
  4084e7:	push   ecx
  4084e8:	mov    eax,ds:0xf838c3ce
  4084ed:	out    0xd5,al
  4084ef:	cmp    eax,0x4b09e685
  4084f4:	jp     0x408534
  4084f6:	mov    ds:0xf8c811ac,eax
  4084fb:	or     eax,0x7fb6aa55
  408500:	sub    BYTE PTR [edi],ah
  408502:	and    dh,0xbf
  408505:	push   ds
  408506:	push   ecx
  408507:	push   eax
  408508:	pop    ebp
  408509:	aaa    
  40850a:	scas   al,BYTE PTR es:[edi]
  40850b:	cmp    al,BYTE PTR ds:0xab55d93a
  408511:	or     BYTE PTR [edx],ch
  408513:	icebp  
  408514:	loope  0x4084c3
  408516:	enter  0xdf73,0x31
  40851a:	gs jl  0x4084ea
  40851d:	lock adc eax,DWORD PTR ds:0x56193eb1
  408524:	or     dl,BYTE PTR [eax]
  408526:	push   0x98f3658b
  40852b:	jmp    DWORD PTR [eax-0x6b]
  40852e:	xor    ecx,esi
  408530:	sbb    BYTE PTR [ecx-0x3f],ch
  408533:	(bad)  
  408534:	adc    BYTE PTR [ecx+0x20588473],dh
  40853a:	stos   DWORD PTR es:[edi],eax
  40853b:	mov    ds:0x23675400,al
  408540:	repz test eax,0x33c9164b
  408546:	aaa    
  408547:	mov    ebp,0x93d8852a
  40854c:	adc    edi,DWORD PTR [eax+eiz*4+0x1d]
  408550:	push   esi
  408551:	inc    esi
  408552:	jae    0x408592
  408554:	cdq    
  408555:	cwde   
  408556:	mov    bl,0x6b
  408558:	and    ecx,ecx
  40855a:	jge    0x408501
  40855c:	dec    edx
  40855d:	xor    al,0x8a
  40855f:	pop    ds
  408560:	jmp    0x4084f0
  408562:	jnp    0x408585
  408564:	imul   ebp,eax,0xffffffe7
  408567:	test   al,0x1
  408569:	ror    DWORD PTR [edx-0x4a7a1eb4],cl
  40856f:	pop    edi
  408570:	adc    al,0x10
  408572:	add    BYTE PTR [ebp+0x483a91b6],bh
  408578:	fsub   DWORD PTR [ebx+ebx*2+0x537c33c3]
  40857f:	mov    al,ds:0xdac740c9
  408584:	enter  0x34f6,0x82
  408588:	add    eax,0xaf9877a2
  40858d:	fdivr  st,st(4)
  40858f:	adc    al,0x9e
  408591:	inc    DWORD PTR [esi-0xb8a159a]
  408597:	mov    bl,0xf2
  408599:	push   0xffffff80
  40859b:	xor    dh,BYTE PTR [ebp-0x4f]
  40859e:	adc    ebx,DWORD PTR [edi]
  4085a0:	or     al,0x17
  4085a2:	jl     0x4085a9
  4085a4:	xor    ch,BYTE PTR [ebp-0x5d]
  4085a7:	and    bh,BYTE PTR [eax+0x4fd0e815]
  4085ad:	mul    edx
  4085af:	repnz test DWORD PTR [edi-0xe72ccea],edx
  4085b6:	fild   QWORD PTR [esi+0x58]
  4085b9:	scas   al,BYTE PTR es:[edi]
  4085ba:	inc    edx
  4085bb:	sub    DWORD PTR [esi+ecx*1+0x272dadb3],ebp
  4085c2:	test   BYTE PTR [edi-0x7b7bfbd7],bh
  4085c8:	cmp    DWORD PTR [edi-0x31e6dd79],ebx
  4085ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085d0:	out    0xa0,ax
  4085d3:	mov    al,0x99
  4085d5:	adc    bl,BYTE PTR [ebx-0x3df6fdb8]
  4085db:	inc    ecx
  4085dc:	retf   
  4085dd:	push   cs
  4085de:	xor    al,0x47
  4085e0:	sub    eax,0x3398defc
  4085e5:	dec    edx
  4085e6:	retf   
  4085e7:	push   edx
  4085e8:	or     eax,0x52a7a605
  4085ed:	adc    al,bh
  4085ef:	das    
  4085f0:	enter  0x345a,0xea
  4085f4:	dec    ebp
  4085f5:	(bad)  
  4085f6:	jae    0x408615
  4085f8:	fwait
  4085f9:	xchg   esi,eax
  4085fa:	js     0x40862e
  4085fc:	xor    DWORD PTR [ebp-0x6e],edx
  4085ff:	mov    BYTE PTR [edx-0x1a4dc285],dh
  408605:	cdq    
  408606:	retf   0x77ab
  408609:	(bad)  
  40860a:	mov    bl,0xca
  40860c:	push   eax
  40860d:	loop   0x4085a9
  40860f:	loopne 0x4085f0
  408611:	mov    al,0x94
  408613:	dec    ebp
  408614:	xchg   DWORD PTR [esi+0x59],eax
  408617:	xchg   edi,eax
  408618:	rcl    DWORD PTR [eax+0x1a],cl
  40861b:	ror    DWORD PTR [esi-0x3a],0xe
  40861f:	add    BYTE PTR [esp+eax*4+0x302c57bc],0x1d
  408627:	(bad)  
  408628:	mov    ebx,DWORD PTR [esi+0x75]
  40862b:	sbb    dl,BYTE PTR [ecx+esi*4+0x4b]
  40862f:	push   ebp
  408630:	outs   dx,DWORD PTR ds:[esi]
  408631:	inc    edx
  408632:	or     edi,ebp
  408634:	sbb    eax,0xf2e01129
  408639:	cmp    dl,BYTE PTR [ebp-0x2c]
  40863c:	int    0xc5
  40863e:	push   cs
  40863f:	mov    WORD PTR [ecx+0x319d269c],fs
  408645:	pop    ecx
  408646:	imul   ecx,DWORD PTR [ebx],0xae7db3ba
  40864c:	mov    dl,0xee
  40864e:	cmp    BYTE PTR ds:0x474b78ef,dl
  408654:	sub    esp,DWORD PTR [ebp+0x37]
  408657:	je     0x408654
  408659:	gs or  al,0xf6
  40865c:	mov    eax,ds:0xabdcaa61
  408661:	mov    edi,0x509cd2ff
  408666:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408667:	(bad)  
  408668:	mov    bh,0x8
  40866a:	clc    
  40866b:	sti    
  40866c:	sti    
  40866d:	inc    DWORD PTR [edi-0x26]
  408670:	pop    ss
  408671:	fldz   
  408673:	add    BYTE PTR [ebx],al
  408675:	cmc    
  408676:	push   es
  408677:	lea    eax,[edx-0x79]
  40867a:	add    esi,DWORD PTR ds:0x4da728d5
  408680:	sub    DWORD PTR [edi-0x3737d4d3],edx
  408686:	xchg   esi,eax
  408687:	repz xor al,0xf6
  40868a:	inc    edx
  40868b:	iret   
  40868c:	sub    edi,eax
  40868e:	inc    ebx
  40868f:	outs   dx,DWORD PTR ds:[esi]
  408690:	jne    0x4086cf
  408692:	push   cs
  408693:	loop   0x408674
  408695:	sbb    al,0x3f
  408697:	and    DWORD PTR ds:0x4b62011,0x7d
  40869e:	dec    edx
  40869f:	js     0x40870f
  4086a1:	outs   dx,DWORD PTR ds:[esi]
  4086a2:	mov    cl,0x8a
  4086a4:	ficom  DWORD PTR [edx-0x6327acba]
  4086aa:	repz jns 0x408693
  4086ad:	sbb    cl,BYTE PTR [esi+edx*2-0x62f93be1]
  4086b4:	mov    eax,0x2d6d63ee
  4086b9:	imul   eax,DWORD PTR [edi+edi*1-0x17d9c16],0xf1251059
  4086c4:	mov    ah,0x3f
  4086c6:	rcl    BYTE PTR [ecx+0x76],1
  4086c9:	pop    esi
  4086ca:	out    dx,eax
  4086cb:	arpl   WORD PTR [eax-0x42],di
  4086ce:	dec    esi
  4086cf:	fmul   QWORD PTR ds:0x3a844232
  4086d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d6:	mov    dl,cl
  4086d8:	sbb    DWORD PTR ds:0x7146692f,edx
  4086de:	loop   0x408697
  4086e0:	mov    eax,0xd6753d75
  4086e5:	imul   ecx,edx,0xf3e2451f
  4086eb:	adc    DWORD PTR [esi-0x7cceb900],ebx
  4086f1:	mov    edi,DWORD PTR [ebp-0x4e]
  4086f4:	aam    0xce
  4086f6:	sub    BYTE PTR [ecx+ebp*8-0x61],ch
  4086fa:	jge    0x408706
  4086fc:	mov    dl,0xfc
  4086fe:	(bad)  [edi]
  408700:	cld    
  408701:	jno    0x40875a
  408703:	leave  
  408704:	cmp    al,0x43
  408706:	fnstsw WORD PTR ds:0x399aaba2
  40870c:	add    BYTE PTR [esp+esi*4],ch
  40870f:	cs mov ebx,0x4e18704b
  408715:	jp     0x4086d9
  408717:	test   BYTE PTR [ecx-0x7b5c24c0],bh
  40871d:	pop    edi
  40871e:	rcr    DWORD PTR [ebx-0x7b],0x2c
  408722:	jge    0x408757
  408724:	inc    eax
  408725:	xchg   esi,eax
  408726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408727:	ucomiss xmm4,xmm2
  40872a:	cld    
  40872b:	mov    ebp,0x916f0465
  408730:	pop    ebp
  408731:	lock dec esp
  408733:	push   edi
  408734:	or     dl,BYTE PTR [edx-0x69]
  408737:	mov    ch,0xe0
  408739:	xor    al,0xd6
  40873b:	mov    al,ds:0xf006aaca
  408740:	cs xor al,ah
  408743:	pop    ebx
  408744:	dec    esp
  408745:	pop    edi
  408746:	push   0x7c
  408748:	pop    ecx
  408749:	mov    ebp,0x20b31486
  40874e:	jne    0x408744
  408750:	clc    
  408751:	xor    al,0x67
  408753:	sub    ah,BYTE PTR [ecx]
  408755:	jmp    0x4c10:0x1707b96a
  40875c:	push   edi
  40875d:	ss push esi
  40875f:	mov    al,ds:0xa18ea379
  408764:	cmp    cl,al
  408766:	xchg   BYTE PTR [ebx],ah
  408768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408769:	repz retf 
  40876b:	idiv   DWORD PTR [edi-0x727fa021]
  408771:	aas    
  408772:	test   DWORD PTR [edi+0x4e14587b],eax
  408778:	or     al,0x61
  40877a:	pop    ss
  40877b:	adc    esi,DWORD PTR [ecx-0x68503b72]
  408781:	mov    eax,ds:0x6c141f00
  408786:	pop    es
  408787:	les    ebx,FWORD PTR [ebx-0x24]
  40878a:	sbb    dl,BYTE PTR [ecx-0x32]
  40878d:	and    BYTE PTR [eax-0x63328b5f],dl
  408793:	stc    
  408794:	xchg   ecx,eax
  408795:	xlat   BYTE PTR ds:[ebx]
  408796:	(bad)
  40879a:	inc    eax
  40879b:	in     al,0x7a
  40879d:	lock lea ebx,[ebp+0x8e79678]
  4087a4:	les    esi,FWORD PTR [ebx-0x70c3110b]
  4087aa:	sbb    esi,esp
  4087ac:	mov    ebp,0x9bae716d
  4087b1:	iret   
  4087b2:	cmp    esp,edi
  4087b4:	scas   eax,DWORD PTR es:[edi]
  4087b5:	xor    al,0x31
  4087b7:	push   esp
  4087b8:	scas   al,BYTE PTR es:[edi]
  4087b9:	cmp    DWORD PTR [esi],ecx
  4087bb:	mov    ?,WORD PTR [ebx]
  4087bd:	dec    dx
  4087bf:	xchg   edi,eax
  4087c0:	(bad)  
  4087c1:	out    0xfb,eax
  4087c3:	es xor eax,0x87cbc577
  4087c9:	out    dx,al
  4087ca:	xchg   BYTE PTR [ebp+0xb],dl
  4087cd:	sub    eax,0x3ac62b80
  4087d2:	scas   eax,DWORD PTR es:[edi]
  4087d3:	mov    edi,0x23483ca
  4087d8:	adc    esi,DWORD PTR [edi+ecx*4-0x1b]
  4087dc:	adc    eax,DWORD PTR [ebp+eiz*4-0x3853e0fb]
  4087e3:	ret    
  4087e4:	cmp    DWORD PTR [ecx+ebp*8],0x4
  4087e8:	fs jmp 0x408861
  4087eb:	(bad)  
  4087ec:	mov    dl,0x9
  4087ee:	mov    edx,esi
  4087f0:	cmp    eax,edx
  4087f2:	add    eax,0x6f81ebb4
  4087f7:	or     al,dh
  4087f9:	jge    0x40887a
  4087fb:	repnz xor al,0xa1
  4087fe:	xor    edi,ebp
  408800:	pop    edx
  408801:	dec    esp
  408802:	imul   esp,ebx,0x3
  408805:	(bad)  
  408806:	div    DWORD PTR [edx-0x20161012]
  40880c:	nop
  40880d:	cmp    eax,DWORD PTR [ebp+0x1d2517c6]
  408813:	add    dh,BYTE PTR es:[edi+0x1fb342c]
  40881a:	xlat   BYTE PTR ds:[ebx]
  40881b:	lahf   
  40881c:	add    BYTE PTR [ebx-0x75],ah
  40881f:	cmp    ecx,DWORD PTR [eax-0x5a]
  408822:	mov    al,ds:0xf6ae3bd6
  408827:	dec    eax
  408828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408829:	ret    0x16c3
  40882c:	into   
  40882d:	cs pusha 
  40882f:	pushf  
  408830:	jge    0x408850
  408832:	call   DWORD PTR [esi-0x2c]
  408835:	enter  0xb925,0xe9
  408839:	jno    0x4088b8
  40883b:	in     al,0x5d
  40883d:	loop   0x408840
  40883f:	mov    esp,0xa8f01750
  408844:	fwait
  408845:	mov    BYTE PTR [ecx-0x27aaefb],ah
  40884b:	xchg   edi,eax
  40884c:	ret    
  40884d:	cwde   
  40884e:	xchg   ebp,eax
  40884f:	ror    BYTE PTR [ebx],1
  408851:	stc    
  408852:	repnz in al,dx
  408854:	push   ds
  408855:	outs   dx,DWORD PTR ds:[esi]
  408856:	jo     0x4087e1
  408858:	outs   dx,DWORD PTR ds:[esi]
  408859:	lds    esi,FWORD PTR [edi+0x28]
  40885c:	loopne 0x4087e3
  40885e:	dec    esi
  40885f:	mov    esp,DWORD PTR ds:0x4eb567a8
  408865:	xor    esi,esi
  408867:	sbb    DWORD PTR [esi*1+0x6657101f],0x6
  40886f:	cdq    
  408870:	scas   al,BYTE PTR es:[edi]
  408871:	hlt    
  408872:	aaa    
  408873:	out    dx,eax
  408874:	out    dx,al
  408875:	dec    ebx
  408876:	ja     0x4088df
  408878:	fcmove st,st(1)
  40887a:	cmp    al,0x9c
  40887c:	lock leave 
  40887e:	jp     0x408878
  408880:	adc    DWORD PTR [eax+0x27],edx
  408883:	leave  
  408884:	mov    al,ds:0xb983054e
  408889:	sub    al,BYTE PTR [edi-0x4b]
  40888c:	jbe    0x605447d3
  408892:	cmp    esi,DWORD PTR [ebx]
  408894:	imul   eax
  408896:	mov    DWORD PTR [eax],ebp
  408898:	shl    DWORD PTR [edx],cl
  40889a:	scas   al,BYTE PTR es:[edi]
  40889b:	mov    bl,0x1d
  40889d:	nop
  40889e:	xlat   BYTE PTR ds:[ebx]
  40889f:	inc    esp
  4088a0:	shr    BYTE PTR ds:[ebx+0x75],cl
  4088a4:	adc    DWORD PTR [ecx-0x62cd6fcd],0xffffffda
  4088ab:	xor    ebp,DWORD PTR [ecx+ebp*2-0x5cd9b5b]
  4088b2:	xor    esi,DWORD PTR [ecx+0x3d]
  4088b5:	popf   
  4088b6:	dec    edi
  4088b7:	sbb    dh,cl
  4088b9:	mov    ah,0x6e
  4088bb:	cmc    
  4088bc:	pop    ss
  4088bd:	add    al,0x87
  4088bf:	adc    al,0x2c
  4088c1:	pop    esi
  4088c2:	sub    bh,BYTE PTR [eax+0x1e]
  4088c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088c6:	sbb    BYTE PTR [esi],al
  4088c8:	retf   0xca
  4088cb:	xlat   BYTE PTR ds:[ebx]
  4088cc:	cmp    BYTE PTR [eax+0x68],0xfa
  4088d0:	repz mov dl,0x6c
  4088d3:	add    al,dh
  4088d5:	sub    BYTE PTR [ebx-0x54db0c31],0xad
  4088dc:	rcl    DWORD PTR [eax+0x73cda687],1
  4088e2:	adc    ebx,DWORD PTR [edx+0x7a]
  4088e5:	ss aaa 
  4088e7:	xor    eax,0x492bdb32
  4088ec:	mov    bh,0xf2
  4088ee:	xchg   esi,eax
  4088ef:	mov    ?,WORD PTR [esi-0x6b]
  4088f2:	and    BYTE PTR [edi+0x44bba072],al
  4088f8:	or     esp,DWORD PTR [edi+0x51374eee]
  4088fe:	ja     0x408942
  408900:	mov    al,0xc5
  408902:	pop    esp
  408903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408904:	enter  0xb024,0xf7
  408908:	aaa    
  408909:	std    
  40890a:	or     eax,DWORD PTR [ebp-0x18]
  40890d:	lock cmp BYTE PTR ds:0x67d5c1e7,cl
  408914:	sbb    ah,bl
  408916:	inc    edi
  408917:	mov    esp,0x1baab7fa
  40891c:	and    eax,edi
  40891e:	mov    bh,0x1
  408920:	sti    
  408921:	ins    DWORD PTR es:[edi],dx
  408922:	fs push 0x50
  408925:	cld    
  408926:	add    DWORD PTR [ecx+0x15],esi
  408929:	cwde   
  40892a:	adc    dh,BYTE PTR [ebp+0x3b471a24]
  408930:	and    al,0x4
  408932:	mov    dl,0xd0
  408934:	sbb    al,0x50
  408936:	sub    eax,DWORD PTR [ecx+ebx*4-0x1]
  40893a:	jl     0x408972
  40893c:	test   eax,0x91b8508
  408941:	ror    BYTE PTR [ecx],1
  408943:	aas    
  408944:	pop    ss
  408945:	lds    ecx,FWORD PTR [edx+0x41]
  408948:	inc    ecx
  408949:	cmp    al,BYTE PTR [edx+ebx*2-0x39ad6e5b]
  408950:	inc    eax
  408951:	out    0xc9,eax
  408953:	call   0xc9aad3fb
  408958:	xchg   esi,eax
  408959:	or     dh,ah
  40895b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40895c:	mov    ?,WORD PTR [ebx-0x1ff4fcb8]
  408962:	aad    0x9a
  408964:	jmp    0x4088ea
  408966:	xchg   esi,eax
  408967:	sar    DWORD PTR [ebp+esi*8-0x4244fc64],cl
  40896e:	mov    ecx,ebx
  408970:	mov    ah,0x6e
  408972:	sbb    BYTE PTR [edx-0x22],bh
  408975:	std    
  408976:	ret    0x1373
  408979:	sub    BYTE PTR [edi],al
  40897b:	mov    ch,0x85
  40897d:	and    eax,0x73bfeb62
  408982:	and    bh,al
  408984:	xor    BYTE PTR [ebx-0xaee5dc6],cl
  40898a:	es pushf 
  40898c:	(bad)  
  40898d:	mov    ds:0xb998f06c,eax
  408992:	jecxz  0x408970
  408994:	(bad)  
  408995:	fsub   QWORD PTR [eax]
  408997:	dec    ecx
  408998:	daa    
  408999:	call   0x1eb79126
  40899e:	in     al,0x4e
  4089a0:	xor    DWORD PTR [esi+0x6d6ec6c7],ebp
  4089a6:	xor    esp,ebp
  4089a8:	es jo  0x4089ce
  4089ab:	xchg   ebp,eax
  4089ac:	and    di,dx
  4089af:	jno    0x4089b8
  4089b1:	mov    ebp,0xd746b56b
  4089b6:	and    BYTE PTR [eax],al
  4089b8:	call   0x279d54e8
  4089bd:	push   eax
  4089be:	mov    edx,0x1a739d69
  4089c3:	fmul   DWORD PTR [edx]
  4089c5:	loopne 0x408998
  4089c7:	mov    bh,0xa7
  4089c9:	push   ebx
  4089ca:	add    eax,DWORD PTR ds:0x4369480f
  4089d0:	push   0x3ae23eae
  4089d5:	jmp    0x31e0a826
  4089da:	xor    DWORD PTR [esi+0x4ed7338f],0xc47f98d
  4089e4:	ins    DWORD PTR es:[edi],dx
  4089e5:	mov    ebx,0x81f5c73e
  4089ea:	xor    eax,edx
  4089ec:	rcl    ebp,0xff
  4089ef:	xchg   ecx,eax
  4089f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089f1:	arpl   WORD PTR [edx],cx
  4089f3:	mov    al,ds:0x776ed099
  4089f8:	cld    
  4089f9:	or     eax,0xacc22a4d
  4089fe:	jmp    0x408a19
  408a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a01:	test   DWORD PTR [eax],ecx
  408a03:	nop
  408a04:	sbb    dh,BYTE PTR [edi]
  408a06:	pop    ecx
  408a07:	call   0xf01788e
  408a0c:	adc    BYTE PTR [esp+edx*1+0x1e],0x70
  408a11:	lahf   
  408a12:	or     DWORD PTR [ebp+0x4f08926f],ebp
  408a18:	fld    QWORD PTR [edx+ecx*1+0x5feb78c3]
  408a1f:	mov    bl,ah
  408a21:	loopne 0x408a24
  408a23:	sub    bh,BYTE PTR [edx]
  408a25:	xchg   esp,eax
  408a26:	sub    al,0xf6
  408a28:	lock rcl DWORD PTR [ebx-0xa0ef381],cl
  408a2f:	xchg   bl,bl
  408a31:	hlt    
  408a32:	add    eax,ecx
  408a34:	sub    al,0xb4
  408a36:	xlat   BYTE PTR ds:[ebx]
  408a37:	(bad)  
  408a38:	idiv   BYTE PTR [ebp+0x16457f69]
  408a3e:	cmp    BYTE PTR [ebp+0x2752329b],ch
  408a44:	pop    ebp
  408a45:	loopne 0x4089ee
  408a47:	ret    
  408a48:	retf   0x3407
  408a4b:	mov    ch,ch
  408a4d:	cld    
  408a4e:	ja     0x408a36
  408a50:	jmp    0x6e5a9f81
  408a55:	xlat   BYTE PTR ds:[ebx]
  408a56:	push   ebx
  408a57:	nop    DWORD PTR [esi+esi*4]
  408a5b:	dec    eax
  408a5c:	cmp    DWORD PTR [edx-0x5c11ad4a],eax
  408a62:	clc    
  408a63:	shl    BYTE PTR [ebx],1
  408a65:	cli    
  408a66:	xchg   esp,eax
  408a67:	inc    edi
  408a68:	push   edi
  408a69:	sbb    al,BYTE PTR [esi+eax*2]
  408a6c:	out    dx,al
  408a6d:	inc    esi
  408a6e:	lahf   
  408a6f:	or     ebx,ebp
  408a71:	jae    0x408ac2
  408a73:	add    bl,bl
  408a75:	cmp    ebx,DWORD PTR [esi*4+0x7f23551e]
  408a7c:	daa    
  408a7d:	(bad)  
  408a7e:	js     0x408ae5
  408a80:	cwde   
  408a81:	in     al,dx
  408a82:	jae    0x408ac2
  408a84:	adc    ebx,DWORD PTR [edi-0x5]
  408a87:	and    DWORD PTR [edx-0x3589e898],0x43734a31
  408a91:	sbb    eax,0x87cea362
  408a96:	inc    esi
  408a97:	sar    DWORD PTR [edx-0x21],cl
  408a9a:	push   0xb294b16
  408a9f:	pop    edi
  408aa0:	ja     0x408a54
  408aa2:	sub    al,0x38
  408aa4:	push   0xffffffc0
  408aa6:	jns    0x408aca
  408aa8:	in     eax,0x6a
  408aaa:	repz iret 
  408aac:	sbb    bh,BYTE PTR [ebx+ebp*4-0x3af16d30]
  408ab3:	push   0x55
  408ab5:	pop    es
  408ab6:	imul   ebx,DWORD PTR [ecx-0x6a0acea6],0xd158c2f3
  408ac0:	or     al,0x7
  408ac2:	je     0x408b25
  408ac4:	pop    edx
  408ac5:	ror    DWORD PTR [esi-0x7aab016a],1
  408acb:	or     al,0x5c
  408acd:	mov    eax,ds:0x2fb9ef8e
  408ad2:	(bad)  
  408ad3:	lock mov bl,0x4d
  408ad6:	pushf  
  408ad7:	ret    0xd2e7
  408ada:	dec    ecx
  408adb:	xchg   ebx,eax
  408adc:	dec    ecx
  408add:	mov    edi,ds
  408adf:	xor    DWORD PTR [esi+0x1029ec3f],ebx
  408ae5:	and    eax,0x4a83a831
  408aea:	sub    bh,BYTE PTR [ebx+0x17b89c9]
  408af0:	scas   eax,DWORD PTR es:[edi]
  408af1:	cs mov ebp,0xee0a839c
  408af7:	xor    al,0x9a
  408af9:	mov    WORD PTR [edx+ebx*4],?
  408afc:	and    BYTE PTR [ebp-0x67a3b6b9],dl
  408b02:	loop   0x408aaf
  408b04:	outs   dx,DWORD PTR ds:[esi]
  408b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b06:	jle    0x408b73
  408b08:	cmc    
  408b09:	pop    ebx
  408b0a:	(bad)  
  408b0b:	call   0xa32e:0x9467fe14
  408b12:	jecxz  0x408aea
  408b14:	xchg   esp,eax
  408b15:	xor    BYTE PTR [ebx+eiz*2-0x23],ah
  408b19:	addr16 mov edx,0xb8969f3f
  408b1f:	cli    
  408b20:	ja     0x408b09
  408b22:	and    ebp,DWORD PTR [edx]
  408b24:	push   esp
  408b25:	retf   
  408b26:	ret    0x1ba1
  408b29:	mov    esp,eax
  408b2b:	shl    BYTE PTR [esi],1
  408b2d:	ror    eax,0x56
  408b30:	ficomp DWORD PTR [ebx+eax*4]
  408b33:	imul   ebp,DWORD PTR [ebx+0x7e],0x1f
  408b37:	inc    ecx
  408b38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b39:	cld    
  408b3a:	in     al,0x61
  408b3c:	jb     0x408b22
  408b3e:	test   edx,eax
  408b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b41:	test   dh,0x8c
  408b44:	and    al,BYTE PTR [ecx+0x76]
  408b47:	pop    ds
  408b48:	mov    bh,0xe3
  408b4a:	jle    0x408af3
  408b4c:	cwde   
  408b4d:	loope  0x408b48
  408b4f:	jmp    0x408b83
  408b51:	pop    ebp
  408b52:	stos   DWORD PTR es:[edi],eax
  408b53:	(bad)  
  408b55:	jns    0x408bcc
  408b57:	xor    al,0xcd
  408b59:	push   0x1f
  408b5b:	mov    DWORD PTR [eax],eax
  408b5d:	jp     0x408b72
  408b5f:	sahf   
  408b60:	and    BYTE PTR [edx],ch
  408b62:	or     al,0xa7
  408b64:	outs   dx,BYTE PTR ds:[esi]
  408b65:	ret    0x8859
  408b68:	cmp    ebx,DWORD PTR [esi+0x29]
  408b6b:	pusha  
  408b6c:	stos   DWORD PTR es:[edi],eax
  408b6d:	xchg   edx,eax
  408b6e:	lock (bad) 
  408b70:	not    BYTE PTR [ebx+ebp*8+0x15]
  408b74:	sub    BYTE PTR [edi],cl
  408b76:	sbb    bh,bh
  408b78:	fld    TBYTE PTR [edi+0x7a]
  408b7b:	xchg   edx,eax
  408b7c:	ins    BYTE PTR es:[edi],dx
  408b7d:	sbb    BYTE PTR [esi+0xf1b8d5c],al
  408b83:	sbb    BYTE PTR [edx-0x403b9485],dl
  408b89:	dec    ebx
  408b8a:	cmp    DWORD PTR [edi-0x2d],0x13cd198f
  408b91:	fwait
  408b92:	mov    ah,BYTE PTR [ecx-0x4670f64e]
  408b98:	popa   
  408b99:	repnz lods eax,DWORD PTR ds:[esi]
  408b9b:	jns    0x408b9b
  408b9d:	xchg   ebp,eax
  408b9e:	les    edx,FWORD PTR [ebp-0x51]
  408ba1:	test   al,0x7b
  408ba3:	rcr    BYTE PTR [ebp-0x6c],1
  408ba6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ba7:	inc    esi
  408ba8:	mov    ecx,0xe3eeb6b6
  408bad:	and    DWORD PTR [eax],eax
  408baf:	cmc    
  408bb0:	or     ch,BYTE PTR [ebx+eiz*1-0x64]
  408bb4:	mov    ebp,0x550b3a29
  408bb9:	nop
  408bba:	jp     0x408b60
  408bbc:	mov    ds:0xd98fa395,al
  408bc1:	mov    dl,0x1b
  408bc3:	in     eax,0x50
  408bc5:	jle    0x408baf
  408bc7:	ins    BYTE PTR es:[edi],dx
  408bc8:	push   es
  408bc9:	mov    WORD PTR [esi+0x5d],?
  408bcc:	in     al,dx
  408bcd:	mov    esp,0xef5b331a
  408bd2:	pop    eax
  408bd3:	fwait
  408bd4:	pop    eax
  408bd5:	pop    ss
  408bd6:	fisttp QWORD PTR [ebp+0x3e1492f6]
  408bdc:	sbb    edi,DWORD PTR [esi+0x6e]
  408bdf:	push   cs
  408be0:	xchg   ecx,eax
  408be1:	cs shl bh,1
  408be4:	dec    eax
  408be5:	cs mov eax,0x5713a550
  408beb:	sub    BYTE PTR [eax-0x64],cl
  408bee:	sub    cl,BYTE PTR [edi]
  408bf0:	mov    ebp,0x93be08f7
  408bf5:	mov    esi,0x5928dbe3
  408bfa:	or     al,0xab
  408bfc:	jle    0x408c3d
  408bfe:	sbb    edi,DWORD PTR [ebp+0x24]
  408c01:	sub    bl,BYTE PTR [ebx]
  408c03:	fwait
  408c04:	inc    edi
  408c05:	mov    ch,0x1
  408c07:	xchg   ebx,eax
  408c08:	adc    al,ch
  408c0a:	out    dx,eax
  408c0b:	lahf   
  408c0c:	jnp    0x408bb3
  408c0e:	jl     0x408b98
  408c10:	test   DWORD PTR [edx+0x18ec7dd4],edx
  408c16:	stos   DWORD PTR es:[edi],eax
  408c17:	mov    esp,0xca1c3632
  408c1c:	inc    ecx
  408c1d:	cmp    esp,DWORD PTR [ebp-0x75]
  408c20:	xor    BYTE PTR [edx+ebx*1+0x6f],bl
  408c24:	retf   0x505b
  408c27:	lods   eax,DWORD PTR ds:[esi]
  408c28:	push   ebp
  408c29:	sbb    BYTE PTR [edx+0x48a5446e],bl
  408c2f:	adc    eax,0x4482b674
  408c34:	jo     0x408bee
  408c36:	les    edx,FWORD PTR [edx-0x6c]
  408c39:	or     eax,DWORD PTR [edi-0x74]
  408c3c:	imul   eax,edx,0xa
  408c3f:	and    DWORD PTR [ebx],eax
  408c41:	push   eax
  408c42:	daa    
  408c43:	lods   al,BYTE PTR ds:[esi]
  408c44:	imul   eax,DWORD PTR [esi],0x4fa178fe
  408c4a:	and    al,0x67
  408c4c:	aaa    
  408c4d:	lock test BYTE PTR [edx-0x80],0x58
  408c52:	retf   0x7d73
  408c55:	and    cl,bh
  408c57:	jae    0x408caf
  408c59:	xor    eax,0x1e516407
  408c5e:	(bad)  
  408c5f:	mov    edi,0x29ad28d8
  408c64:	jno    0x408bf4
  408c66:	cmp    dl,ah
  408c68:	jle    0x408c38
  408c6a:	out    dx,eax
  408c6b:	in     al,0x1d
  408c6d:	cdq    
  408c6e:	imul   ebx,DWORD PTR ds:0x378db4c7,0x397bceda
  408c78:	leave  
  408c79:	adc    edi,DWORD PTR [esi-0x6f94b8]
  408c7f:	push   ebx
  408c80:	jmp    0xda8:0x3d0435eb
  408c87:	shl    bh,1
  408c89:	mov    ebx,0x32d0b299
  408c8e:	iret   
  408c8f:	jbe    0x408ce0
  408c91:	sbb    DWORD PTR [esi-0x4afb2912],ebp
  408c97:	ins    BYTE PTR es:[edi],dx
  408c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c99:	ins    DWORD PTR es:[edi],dx
  408c9a:	and    DWORD PTR [ecx+0x526f8812],esp
  408ca0:	jne    0x408c7e
  408ca2:	or     eax,0x5da4da67
  408ca7:	fnstcw WORD PTR [ebx+esi*1-0x6c]
  408cab:	cwde   
  408cac:	jne    0x408ce6
  408cae:	inc    edi
  408caf:	mov    es,WORD PTR [eax+edi*4-0x13d5a48a]
  408cb6:	mov    ah,0xd3
  408cb8:	adc    eax,edx
  408cba:	mov    dh,0x6e
  408cbc:	xchg   edi,eax
  408cbd:	mov    cl,0x21
  408cbf:	hlt    
  408cc0:	push   ecx
  408cc1:	loopne 0x408c5b
  408cc3:	outs   dx,DWORD PTR ds:[esi]
  408cc4:	pop    ecx
  408cc5:	lods   eax,DWORD PTR ds:[esi]
  408cc6:	sbb    cl,BYTE PTR [ecx]
  408cc8:	popf   
  408cc9:	xor    eax,0x3fb75e3
  408cce:	fist   DWORD PTR [ecx]
  408cd0:	dec    edi
  408cd1:	test   BYTE PTR [edi+0x77],0x62
  408cd5:	ds jns 0x408d3a
  408cd8:	lods   eax,DWORD PTR ds:[esi]
  408cd9:	int3   
  408cda:	pop    esi
  408cdb:	popf   
  408cdc:	xor    al,0xbe
  408cde:	push   cs
  408cdf:	mov    edi,0xc88c2aee
  408ce4:	jecxz  0x408d3e
  408ce6:	jae    0x408d5f
  408ce8:	nop
  408ce9:	push   ss
  408cea:	ret    
  408ceb:	jmp    0x408cfb
  408ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cee:	icebp  
  408cef:	imul   ebp,edx,0xf80b1e82
  408cf5:	lods   al,BYTE PTR ds:[esi]
  408cf6:	js     0x408c9c
  408cf8:	dec    ecx
  408cf9:	cwde   
  408cfa:	retf   
  408cfb:	or     al,0xf4
  408cfd:	cmc    
  408cfe:	cwde   
  408cff:	fstp   DWORD PTR [eax+eax*4-0x1daa8e17]
  408d06:	out    0x7b,eax
  408d08:	imul   eax,DWORD PTR [edx+edx*8+0x3d],0x5c4a69c
  408d10:	cmp    eax,0xc6a7f5f
  408d15:	icebp  
  408d16:	out    dx,eax
  408d17:	inc    ecx
  408d18:	jg     0x408d5d
  408d1a:	push   es
  408d1b:	inc    eax
  408d1c:	icebp  
  408d1d:	sub    ah,BYTE PTR [edx]
  408d1f:	js     0x408d69
  408d21:	sub    ch,BYTE PTR [edi-0x2e]
  408d24:	cld    
  408d25:	loope  0x408ce8
  408d27:	xchg   edx,eax
  408d28:	push   0xffffff96
  408d2a:	add    BYTE PTR [esi],dh
  408d2c:	shl    al,1
  408d2e:	xor    eax,DWORD PTR [eax+0x5f]
  408d31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d32:	std    
  408d33:	mov    al,0xdd
  408d35:	loopne 0x408d7a
  408d37:	xor    al,0xea
  408d39:	or     eax,0x7b98274c
  408d3e:	pop    ecx
  408d3f:	pop    ebp
  408d40:	push   ebp
  408d41:	pop    esp
  408d42:	in     al,dx
  408d43:	aaa    
  408d44:	pop    ebx
  408d45:	dec    ebx
  408d46:	mov    edi,0xae58a35b
  408d4b:	push   edi
  408d4c:	jnp    0x408ce6
  408d4e:	cmp    BYTE PTR ss:[ebp-0x36e2b233],0x73
  408d56:	jnp    0x408d60
  408d58:	(bad)  
  408d59:	scas   al,BYTE PTR es:[edi]
  408d5a:	or     edi,edx
  408d5c:	dec    edi
  408d5d:	ja     0x408d97
  408d5f:	(bad)  
  408d60:	sti    
  408d61:	out    0x96,al
  408d63:	lock jne 0x408d16
  408d66:	jne    0x408d05
  408d68:	mov    dl,0x9b
  408d6a:	dec    ebp
  408d6b:	and    BYTE PTR ds:0xf4e42de2,dh
  408d71:	and    eax,0xbdef218f
  408d76:	iret   
  408d77:	call   0x9ecd0745
  408d7c:	sbb    esp,DWORD PTR ss:[ebx]
  408d7f:	jns    0x408da3
  408d81:	xor    edx,DWORD PTR [edi+esi*1]
  408d84:	fstp   st(3)
  408d86:	adc    eax,0x1dfab5af
  408d8b:	pop    ebp
  408d8c:	mov    ecx,0xb5ba671d
  408d91:	sub    bl,BYTE PTR [ecx-0x4cfe60c2]
  408d97:	sbb    dh,al
  408d99:	dec    edi
  408d9a:	sub    BYTE PTR [ebx+0x77],cl
  408d9d:	xchg   ebx,eax
  408d9e:	sbb    bl,BYTE PTR [esi-0x2ec1f98d]
  408da4:	sbb    eax,0xcb80e67d
  408da9:	jbe    0x408e0e
  408dab:	sbb    eax,esp
  408dad:	lods   eax,DWORD PTR ds:[esi]
  408dae:	sahf   
  408daf:	arpl   bp,bp
  408db1:	xchg   edi,eax
  408db2:	stos   BYTE PTR es:[edi],al
  408db3:	(bad)  
  408db4:	int3   
  408db5:	in     al,0xbd
  408db7:	mov    eax,0x555b46d
  408dbc:	push   0xffffffa7
  408dbe:	jl     0x408db0
  408dc0:	cmp    DWORD PTR [edi+0x9a7ba5d],edi
  408dc6:	ret    0x5b0b
  408dc9:	xlat   BYTE PTR ds:[ebx]
  408dca:	mov    esi,0x837a0667
  408dcf:	pop    eax
  408dd0:	pop    eax
  408dd1:	test   BYTE PTR [eax],0xdf
  408dd4:	xchg   BYTE PTR [ebx-0x7c],bh
  408dd7:	mov    ch,0x4f
  408dd9:	mov    esp,0x4d4b716d
  408dde:	ret    
  408ddf:	mov    edi,0x516833b8
  408de4:	scas   al,BYTE PTR es:[edi]
  408de5:	inc    esi
  408de6:	jo     0x408d9c
  408de8:	std    
  408de9:	stc    
  408dea:	je     0x408e60
  408dec:	inc    edi
  408ded:	repz addr16 add dl,ah
  408df1:	mov    esp,0xf3336f8d
  408df6:	ret    0x9f49
  408df9:	pop    edi
  408dfa:	or     ch,BYTE PTR [ebp+ebp*2-0x4dadba11]
  408e01:	shr    BYTE PTR [ecx],0xec
  408e04:	iret   
  408e05:	(bad)  
  408e06:	xor    DWORD PTR [eax+0x25],esp
  408e09:	push   edx
  408e0a:	dec    ebp
  408e0b:	popf   
  408e0c:	xchg   esp,eax
  408e0d:	int3   
  408e0e:	xor    al,0x8f
  408e10:	pop    ebp
  408e11:	into   
  408e12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e13:	fs pop ebx
  408e15:	stos   DWORD PTR es:[edi],eax
  408e16:	xchg   ebx,eax
  408e17:	sti    
  408e18:	inc    ecx
  408e19:	add    eax,0x7c2a0442
  408e1e:	inc    eax
  408e1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e20:	mov    ebx,esp
  408e22:	(bad)  
  408e23:	pop    ecx
  408e24:	fwait
  408e25:	add    DWORD PTR cs:[esi+ebx*2],ebp
  408e29:	(bad)  
  408e2a:	out    dx,al
  408e2b:	mov    al,ds:0x9966ddec
  408e30:	dec    edx
  408e31:	dec    esi
  408e32:	jmp    0x408e44
  408e34:	pop    ebp
  408e35:	xchg   edi,eax
  408e36:	mov    ds:0xf7ddca55,eax
  408e3b:	in     eax,0x21
  408e3d:	cmp    BYTE PTR [ebx+0x11659c1e],bl
  408e43:	les    ebx,FWORD PTR [edx-0x15]
  408e46:	jne    0x408e40
  408e48:	loope  0x408e1e
  408e4a:	xchg   ebx,eax
  408e4b:	jbe    0x408deb
  408e4d:	cdq    
  408e4e:	fstp   QWORD PTR [edi+0x770e31dd]
  408e54:	shr    BYTE PTR [esi],1
  408e56:	repz mov esi,0xdfac7c4
  408e5c:	lea    ebp,[eax]
  408e5e:	leave  
  408e5f:	pop    ebp
  408e60:	icebp  
  408e61:	ds jnp 0x408e09
  408e64:	retf   0x62d0
  408e67:	in     eax,0xe6
  408e69:	push   ebx
  408e6a:	pop    esp
  408e6b:	adc    esp,DWORD PTR [edx+0x5f]
  408e6e:	dec    ebx
  408e6f:	jae    0x408e76
  408e71:	sub    eax,0x9dfd0dce
  408e76:	outs   dx,BYTE PTR ds:[esi]
  408e77:	jle    0x408ee8
  408e79:	into   
  408e7a:	sbb    bh,cl
  408e7c:	adc    eax,0x16650b8c
  408e81:	fwait
  408e82:	mov    dh,0x6f
  408e84:	jg     0x408e24
  408e86:	mov    edi,0x479df139
  408e8b:	in     eax,dx
  408e8c:	push   ebx
  408e8d:	sub    BYTE PTR [ecx-0x11],ah
  408e90:	arpl   WORD PTR [edx],ax
  408e92:	and    cl,BYTE PTR [eax]
  408e94:	popa   
  408e95:	dec    esi
  408e96:	jbe    0x408e2f
  408e98:	dec    esp
  408e99:	mov    al,ds:0xaeeb4684
  408e9e:	cdq    
  408e9f:	adc    ch,BYTE PTR [esi-0x2ef564f7]
  408ea5:	rcr    BYTE PTR [edx-0x3],1
  408ea8:	test   DWORD PTR [ebp-0x71ec3317],edi
  408eae:	enter  0x65c4,0xa6
  408eb2:	imul   BYTE PTR [edx]
  408eb4:	mov    dh,0xaf
  408eb6:	lea    esp,[edi]
  408eb8:	push   eax
  408eb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408eba:	loop   0x408ecb
  408ebc:	test   al,0x9
  408ebe:	push   ss
  408ebf:	sbb    al,0x8a
  408ec1:	les    eax,FWORD PTR [esi-0x6f66e989]
  408ec7:	out    dx,eax
  408ec8:	lods   al,BYTE PTR ds:[esi]
  408ec9:	cmp    DWORD PTR [edi+ecx*8],eax
  408ecc:	jns    0x408e92
  408ece:	and    dl,BYTE PTR [edi-0x723f0fd4]
  408ed4:	fisttp QWORD PTR [ebp+0x316b2de9]
  408eda:	mov    ebp,DWORD PTR [ebp-0x14]
  408edd:	push   edx
  408ede:	dec    ecx
  408edf:	mov    ah,0x83
  408ee1:	xor    DWORD PTR [ecx-0x3f],ecx
  408ee4:	sub    eax,0x9294fdc8
  408ee9:	ret    
  408eea:	sub    bh,BYTE PTR [edx-0x603bbdeb]
  408ef0:	push   ebx
  408ef1:	es fs jg 0x408ef9
  408ef5:	stos   BYTE PTR es:[edi],al
  408ef6:	push   edi
  408ef7:	xor    DWORD PTR [eax],edx
  408ef9:	sub    eax,0x1cad38cb
  408efe:	or     ebx,DWORD PTR [ebx-0x4d47826d]
  408f04:	mov    cl,0xfb
  408f06:	xor    al,cl
  408f08:	iret   
  408f09:	mov    esi,0x12d02fbb
  408f0e:	loopne 0x408ed1
  408f10:	fcmovnbe st,st(5)
  408f12:	jnp    0x408f23
  408f14:	sub    edx,ebp
  408f16:	pop    ecx
  408f17:	fcmovb st,st(0)
  408f19:	iret   
  408f1a:	adc    eax,0x4b46ee73
  408f1f:	mov    edi,0x4a9aa6f0
  408f24:	ror    DWORD PTR [eax],1
  408f26:	mov    ds:0x279f0777,eax
  408f2b:	js     0x408eb7
  408f2d:	mov    al,0x7
  408f2f:	mov    WORD PTR [esi],ss
  408f31:	dec    esp
  408f32:	in     al,dx
  408f33:	inc    edi
  408f34:	jnp    0x408ed9
  408f36:	mov    BYTE PTR [esi-0x4071433a],cl
  408f3c:	sub    ah,BYTE PTR [edi+0x39]
  408f3f:	iret   
  408f40:	cmovl  ebp,DWORD PTR [ebp+0x791fc063]
  408f47:	mov    bh,0xfa
  408f49:	(bad)  
  408f4a:	test   eax,0x6021a673
  408f4f:	cmp    bh,bl
  408f51:	into   
  408f52:	dec    ebx
  408f53:	mov    esp,DWORD PTR [esi-0x66]
  408f56:	mov    bh,0xf1
  408f58:	scas   eax,DWORD PTR es:[edi]
  408f59:	dec    edx
  408f5a:	cwde   
  408f5b:	sub    al,0xf0
  408f5d:	test   eax,0xd411f4c0
  408f62:	add    cl,BYTE PTR [eax+eiz*1-0x20]
  408f66:	les    eax,FWORD PTR [edx-0x4c72ed79]
  408f6c:	pop    es
  408f6d:	rol    BYTE PTR [edi],cl
  408f6f:	jb     0x408f91
  408f71:	dec    eax
  408f72:	out    0xa7,al
  408f74:	cld    
  408f75:	lods   al,BYTE PTR ds:[esi]
  408f76:	pop    ss
  408f77:	ret    0x6c72
  408f7a:	pop    eax
  408f7b:	popf   
  408f7c:	sub    bh,BYTE PTR [eax+0x12257078]
  408f82:	(bad)  
  408f83:	adc    dh,cl
  408f85:	outs   dx,DWORD PTR ds:[esi]
  408f86:	out    dx,al
  408f87:	fild   QWORD PTR ds:0x83bbacc8
  408f8d:	push   cs
  408f8e:	push   esp
  408f8f:	iret   
  408f90:	and    bh,BYTE PTR [edi+ecx*4-0x72]
  408f94:	mov    bh,0xcf
  408f96:	popf   
  408f97:	out    dx,eax
  408f98:	ret    0x8977
  408f9b:	add    esi,DWORD PTR [ebp-0x296c11b3]
  408fa1:	dec    ebp
  408fa2:	retf   0xfc3e
  408fa5:	sbb    ebp,DWORD PTR [ebp-0x48d04045]
  408fab:	outs   dx,DWORD PTR ds:[esi]
  408fac:	sub    DWORD PTR ds:0x87c88dea,eax
  408fb2:	cmc    
  408fb3:	test   BYTE PTR [edi-0x22690ca4],0x8
  408fba:	push   0xf092ea57
  408fbf:	mov    ebx,esi
  408fc1:	sar    BYTE PTR [edi-0x6d],cl
  408fc4:	xchg   esp,eax
  408fc5:	cmp    esp,DWORD PTR [ecx+0x465a7714]
  408fcb:	jge    0x409004
  408fcd:	xchg   esi,eax
  408fce:	mov    esp,0x6ce80416
  408fd3:	ins    DWORD PTR es:[edi],dx
  408fd4:	loopne 0x40900d
  408fd6:	xchg   BYTE PTR [ebx-0x6b],bh
  408fd9:	add    al,cl
  408fdb:	leave  
  408fdc:	inc    esi
  408fdd:	out    dx,al
  408fde:	xlat   BYTE PTR ds:[ebx]
  408fdf:	add    al,0x86
  408fe1:	adc    BYTE PTR [ebx-0x72c7bf6c],cl
  408fe7:	cmp    al,BYTE PTR [ecx]
  408fe9:	std    
  408fea:	pop    ecx
  408feb:	cmp    eax,edx
  408fed:	clc    
  408fee:	hlt    
  408fef:	push   0x38
  408ff1:	fwait
  408ff2:	stos   DWORD PTR es:[edi],eax
  408ff3:	xchg   BYTE PTR [ebx-0x54],dl
  408ff6:	ja     0x40906e
  408ff8:	loopne 0x409026
  408ffa:	adc    BYTE PTR [ebp+0x1b628c2e],bh
  409000:	les    ebp,FWORD PTR [eax-0x5d]
  409003:	mov    dh,0x8d
  409005:	mov    ecx,0xf15d6288
  40900a:	pusha  
  40900b:	push   eax
  40900c:	out    dx,eax
  40900d:	cmp    cl,dl
  40900f:	int3   
  409010:	fnsetpm(287 only) 
  409012:	div    BYTE PTR [esi-0xddc63e1]
  409018:	and    al,0xf5
  40901a:	jp     0x40900b
  40901c:	xchg   esp,eax
  40901d:	cmc    
  40901e:	or     al,0x35
  409020:	adc    DWORD PTR [ecx+0x26a0dd80],ecx
  409026:	push   edx
  409027:	and    eax,0xc3e6656f
  40902c:	xor    al,0x7b
  40902e:	mov    esp,0xf4058216
  409033:	jmp    0x40906d
  409035:	cli    
  409036:	add    BYTE PTR [eax+0x5f],0xde
  40903a:	pushf  
  40903b:	inc    eax
  40903c:	add    ebx,esi
  40903e:	xor    DWORD PTR [eax-0x28e75074],0xf02c5778
  409048:	mov    bh,0xda
  40904a:	jno    0x40908c
  40904c:	(bad)  
  40904e:	jno    0x409081
  409050:	mov    ds:0x9dc3430b,eax
  409055:	jb     0x408fdc
  409057:	sub    cl,BYTE PTR [ebp-0x769c437c]
  40905d:	(bad)  
  40905e:	mov    ebp,0x36abf267
  409063:	mov    BYTE PTR [eax+0x35367dab],ah
  409069:	repz rcl BYTE PTR [esi+0x6a0cd729],cl
  409070:	ret    0x3b0d
  409073:	pop    ecx
  409074:	pop    ebp
  409075:	call   0x4cfd:0x148fa222
  40907c:	mov    eax,0x3378dd1b
  409081:	add    eax,0xa599cd63
  409086:	(bad)  
  409087:	int    0x6e
  409089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40908a:	mov    ecx,0xb53308ab
  40908f:	inc    esp
  409090:	pop    ebp
  409091:	pop    edx
  409092:	push   es
  409093:	dec    esp
  409094:	out    dx,al
  409095:	std    
  409096:	sub    edx,DWORD PTR [ebp-0x879504e]
  40909c:	and    al,0x43
  40909e:	aas    
  40909f:	jmp    0xb76238a3
  4090a4:	popa   
  4090a5:	xor    DWORD PTR [ebp-0x699e1194],0x37
  4090ac:	lock push edx
  4090ae:	div    BYTE PTR [edx+0x4adc424]
  4090b4:	callw  0xd2e2
  4090b8:	inc    edi
  4090b9:	sbb    DWORD PTR [ecx],0x7f
  4090bc:	dec    ebx
  4090bd:	into   
  4090be:	mov    eax,0x233700d9
  4090c3:	or     eax,0x4d255362
  4090c8:	push   ebx
  4090c9:	xor    DWORD PTR [edi-0x1a1fde6d],0xbf3e1184
  4090d3:	popf   
  4090d4:	in     al,dx
  4090d5:	in     al,0x91
  4090d7:	jo     0x409116
  4090d9:	inc    eax
  4090da:	les    edi,FWORD PTR [edi-0x60]
  4090dd:	fisttp WORD PTR [ebx+0x51]
  4090e0:	add    BYTE PTR [eax-0x43e1a025],ah
  4090e6:	std    
  4090e7:	sar    esi,1
  4090e9:	sahf   
  4090ea:	and    cl,BYTE PTR [ebx-0x6c]
  4090ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090ee:	push   es
  4090ef:	bound  eax,QWORD PTR [ebp+0x7ffef4fe]
  4090f5:	mul    DWORD PTR [ecx+0x155ccc38]
  4090fb:	loop   0x40915e
  4090fd:	push   0x4b
  4090ff:	in     eax,dx
  409100:	loope  0x409089
  409102:	sahf   
  409103:	mov    ebx,0x411339fa
  409108:	cwde   
  409109:	pop    ebp
  40910a:	dec    ebx
  40910b:	cmp    dl,dl
  40910d:	mov    eax,DWORD PTR ds:0xb916c3b1
  409113:	(bad)  
  409114:	push   edx
  409115:	inc    ecx
  409116:	mov    cs,WORD PTR [ebp-0x44]
  409119:	or     cl,bh
  40911b:	xor    dh,BYTE PTR [esi]
  40911d:	mov    ah,0xe8
  40911f:	popf   
  409120:	sti    
  409121:	pop    esp
  409122:	and    BYTE PTR [ecx+eiz*8+0x56],bl
  409126:	into   
  409127:	and    edx,eax
  409129:	push   edi
  40912a:	pop    eax
  40912b:	push   edx
  40912c:	mov    WORD PTR [edi+0x6a],fs
  40912f:	xor    BYTE PTR [edi-0x5ee998d4],0x4e
  409136:	sub    al,0xb0
  409139:	or     eax,0x34e78e42
  40913e:	repz dec esi
  409140:	rol    DWORD PTR [eax+0x7f],cl
  409143:	mov    esp,0x6c361bd8
  409148:	ret    0xbe60
  40914b:	add    al,0xa0
  40914d:	pop    ds
  40914e:	lock pop eax
  409150:	in     al,0xb2
  409152:	das    
  409153:	lock push eax
  409155:	xchg   ebx,eax
  409156:	ins    DWORD PTR es:[edi],dx
  409157:	nop
  409158:	add    cl,BYTE PTR [eax]
  40915a:	cmp    eax,DWORD PTR [edi+0x33]
  40915d:	and    ch,BYTE PTR [edx+esi*8+0x77]
  409161:	mov    ecx,0xf415c3aa
  409166:	cmp    BYTE PTR [edi+0x3],bh
  409169:	dec    eax
  40916a:	and    al,0xd2
  40916c:	ret    
  40916d:	sbb    edx,ecx
  40916f:	pop    ebp
  409170:	fiadd  DWORD PTR [ecx+0x30]
  409173:	ss and bh,ah
  409176:	xlat   BYTE PTR ds:[ebx]
  409177:	ins    DWORD PTR es:[edi],dx
  409178:	mov    BYTE PTR [eax+0x7cc64ed7],ch
  40917e:	or     dh,bl
  409180:	cmp    DWORD PTR [edx+eax*2-0x32a7d976],ebp
  409187:	lahf   
  409188:	inc    esp
  409189:	jp     0x409111
  40918b:	(bad)  
  40918c:	dec    edi
  40918d:	es dec ecx
  40918f:	inc    edx
  409190:	cmp    edx,DWORD PTR [esi]
  409192:	leave  
  409193:	into   
  409194:	sub    eax,DWORD PTR [eax]
  409196:	inc    ebx
  409197:	jmp    0x40912e
  409199:	lea    esi,[ebx+0x53]
  40919c:	jo     0x409200
  40919e:	mov    bl,0x25
  4091a0:	sbb    BYTE PTR [edi],cl
  4091a2:	jne    0x4091a8
  4091a4:	pop    esi
  4091a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091a6:	adc    BYTE PTR [edi+0x5b],dl
  4091a9:	outs   dx,BYTE PTR ds:[esi]
  4091aa:	fwait
  4091ab:	outs   dx,BYTE PTR ds:[esi]
  4091ac:	push   edx
  4091ad:	fistp  QWORD PTR [ebp-0x33e3d698]
  4091b3:	sar    DWORD PTR [esi],1
  4091b5:	push   esp
  4091b6:	lds    eax,FWORD PTR [ecx+0x17]
  4091b9:	(bad)  
  4091ba:	or     eax,0x464a45ae
  4091bf:	jnp    0x4091f2
  4091c1:	bound  ecx,QWORD PTR [ebp+edi*8+0x1c]
  4091c5:	fld    QWORD PTR [esi-0x6]
  4091c8:	jp     0x409214
  4091ca:	iret   
  4091cb:	cli    
  4091cc:	push   es
  4091cd:	mov    edx,0xb24eb188
  4091d2:	or     cl,BYTE PTR [ebp+0x16]
  4091d5:	call   0x8813:0x73e7d45b
  4091dc:	mov    BYTE PTR [eax],dl
  4091de:	loope  0x40922e
  4091e0:	pop    esp
  4091e1:	sub    al,dh
  4091e3:	loopne 0x409201
  4091e5:	mov    ebx,0xcfaa6274
  4091ea:	or     esp,DWORD PTR [ecx-0x39]
  4091ed:	push   ebp
  4091ee:	(bad)  
  4091ef:	adc    BYTE PTR [ebp+0x48],dh
  4091f2:	ret    0xb4a5
  4091f5:	cmp    DWORD PTR [edx-0x5],0xc5e7bcfe
  4091fc:	mov    dh,0x29
  4091fe:	xor    bl,al
  409200:	push   esi
  409201:	shl    BYTE PTR [ebx-0x29],1
  409204:	enter  0x17d7,0x46
  409208:	cmp    dh,BYTE PTR [edi+0x1b]
  40920b:	adc    DWORD PTR [esi],esi
  40920d:	pop    ebx
  40920e:	mov    al,0x34
  409210:	xchg   edx,eax
  409211:	xchg   ebp,eax
  409212:	jne    0x4091e4
  409214:	dec    ecx
  409215:	lds    eax,FWORD PTR [ebx]
  409217:	out    0x4c,al
  409219:	pop    edx
  40921a:	mov    al,0x53
  40921c:	fisubr DWORD PTR [ebx]
  40921e:	sbb    DWORD PTR [ebx-0x35be009c],ebx
  409224:	cli    
  409225:	lahf   
  409226:	sub    DWORD PTR [ecx],esp
  409228:	jmp    0x409201
  40922a:	adc    bh,ch
  40922c:	dec    esp
  40922d:	adc    DWORD PTR [esi+0x74],ebp
  409230:	fs std 
  409232:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409233:	xchg   edi,eax
  409234:	mov    cl,dl
  409236:	test   BYTE PTR [ecx-0x6b],al
  409239:	rol    BYTE PTR [ebp-0x26],0x16
  40923d:	mov    esp,?
  40923f:	enter  0x533c,0x7b
  409243:	inc    ebx
  409244:	and    eax,0xe15b22b1
  409249:	aaa    
  40924a:	out    dx,eax
  40924b:	or     BYTE PTR [ebx],al
  40924d:	loope  0x409214
  40924f:	lahf   
  409250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409251:	jmp    0x4091db
  409253:	adc    esp,DWORD PTR [esi-0x66]
  409256:	adc    edx,edi
  409258:	push   ebx
  409259:	dec    eax
  40925a:	jo     0x409231
  40925c:	sti    
  40925d:	inc    esp
  40925e:	sbb    ecx,ecx
  409260:	add    edx,edi
  409262:	xchg   ebp,eax
  409263:	rcl    ebx,cl
  409265:	jmp    0x4092a8
  409267:	add    esp,0xece62e14
  40926d:	mov    ds:0x605717c1,al
  409272:	mov    cl,0x62
  409274:	inc    esi
  409275:	add    eax,0x6127cb59
  40927a:	lds    edi,FWORD PTR [esp+ebp*8-0x4345e1d6]
  409281:	cmp    al,0xce
  409283:	jns    0x40921a
  409285:	dec    esp
  409286:	icebp  
  409287:	neg    edi
  409289:	aaa    
  40928a:	call   0xe5da:0xaadc8f28
  409291:	not    DWORD PTR [eax]
  409293:	push   ecx
  409294:	push   es
  409295:	jmp    0x1721:0x5a2dd94a
  40929c:	mov    bh,0xe0
  40929e:	xor    eax,DWORD PTR [ecx-0x24da3e98]
  4092a4:	push   cs
  4092a5:	xchg   BYTE PTR [ecx-0x5d],bh
  4092a8:	jns    0x4092dc
  4092aa:	jns    0x4092c6
  4092ac:	ins    BYTE PTR es:[edi],dx
  4092ad:	jmp    0xeb36:0x6bd88cc
  4092b4:	ss sahf 
  4092b6:	jbe    0x4092e2
  4092b8:	jg     0x409292
  4092ba:	sbb    eax,0x63fd2901
  4092bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c0:	pop    ecx
  4092c2:	jp     0x40927e
  4092c4:	stos   DWORD PTR es:[edi],eax
  4092c5:	ss dec eax
  4092c7:	xor    eax,0xe4bba159
  4092cc:	sti    
  4092cd:	outs   dx,BYTE PTR ds:[esi]
  4092ce:	push   es
  4092cf:	fst    DWORD PTR [ebx-0x20]
  4092d2:	or     esi,0x74e3d8b6
  4092d8:	mov    dl,0xfd
  4092da:	loopne 0x4092df
  4092dc:	lahf   
  4092dd:	std    
  4092de:	mov    dh,BYTE PTR cs:[esi+0x55ea2f9c]
  4092e5:	and    esi,DWORD PTR ds:0x6876efbc
  4092eb:	das    
  4092ec:	add    eax,0xbfe0effc
  4092f1:	aam    0xda
  4092f3:	xor    BYTE PTR [edx+0x33],0xa0
  4092f7:	xchg   esp,eax
  4092f8:	cmp    ebx,DWORD PTR [ebp-0x60]
  4092fb:	fidiv  WORD PTR [eax+0x4696dc34]
  409301:	outs   dx,DWORD PTR ds:[esi]
  409302:	mov    ds:0x2f69c737,eax
  409307:	and    BYTE PTR [edi+0x401a483a],dl
  40930d:	mov    ah,0x27
  40930f:	xchg   ebx,eax
  409310:	stos   BYTE PTR es:[edi],al
  409311:	shr    BYTE PTR [esi-0x74],1
  409314:	cdq    
  409315:	aas    
  409316:	and    eax,0xee9cd400
  40931b:	test   DWORD PTR [ebx-0x5c],esp
  40931e:	pop    ds
  40931f:	cdq    
  409320:	jp     0x409326
  409322:	fld    TBYTE PTR [esi-0x44]
  409325:	or     al,0xbb
  409327:	lods   eax,DWORD PTR ds:[esi]
  409328:	mov    ebx,0x39e10c92
  40932d:	jecxz  0x4092cb
  40932f:	retf   
  409330:	popf   
  409331:	fdiv   QWORD PTR [ecx+0x651d99c6]
  409337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409338:	jb     0x409362
  40933a:	mov    eax,ds:0x47fee0e
  40933f:	and    BYTE PTR [edx+0x56aeff67],dh
  409345:	fidivr WORD PTR [edi+ebx*4+0x7bb45995]
  40934c:	dec    ebp
  40934d:	fstp   DWORD PTR [ebp+0x72]
  409350:	int3   
  409351:	dec    edi
  409352:	add    eax,0x18fbeeb3
  409357:	jb     0x409315
  409359:	pop    esi
  40935a:	cdq    
  40935b:	xchg   edx,eax
  40935c:	mov    BYTE PTR [edx+ecx*1],al
  40935f:	and    bl,dl
  409361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409362:	outs   dx,BYTE PTR ds:[esi]
  409363:	and    bh,al
  409365:	shl    DWORD PTR [ecx],cl
  409367:	fmul   st,st(3)
  409369:	(bad)  
  40936b:	retf   0x67be
  40936e:	dec    esi
  40936f:	cs lock stos BYTE PTR es:[edi],al
  409372:	dec    edi
  409373:	ins    BYTE PTR es:[edi],dx
  409374:	ins    BYTE PTR es:[edi],dx
  409375:	xchg   ebx,eax
  409376:	lahf   
  409377:	and    ecx,DWORD PTR [eax+0x5d]
  40937a:	lods   eax,DWORD PTR ds:[esi]
  40937b:	push   0x77
  40937d:	loop   0x409367
  40937f:	clc    
  409380:	jo     0x4093d5
  409382:	inc    ebp
  409383:	add    al,0xf8
  409385:	outs   dx,BYTE PTR ds:[esi]
  409386:	mov    esp,0xa6a38c06
  40938b:	or     eax,0xc6ce4d7d
  409390:	jne    0x4093cd
  409392:	inc    edi
  409393:	or     ebx,ebp
  409395:	jae    0x4093c7
  409397:	fwait
  409398:	sahf   
  409399:	sbb    ebp,DWORD PTR [ecx+0x43da3084]
  40939f:	push   edi
  4093a0:	sub    ch,bh
  4093a2:	dec    esp
  4093a3:	lods   eax,DWORD PTR ds:[esi]
  4093a4:	sbb    al,0x5b
  4093a6:	adc    bh,BYTE PTR [esi-0x51]
  4093a9:	lods   eax,DWORD PTR ds:[esi]
  4093aa:	gs call 0x2a1fbf00
  4093b0:	jmp    0x884051b7
  4093b5:	test   DWORD PTR [ebp-0x67fe1446],eax
  4093bb:	adc    al,0x7c
  4093bd:	cwde   
  4093be:	dec    ebx
  4093bf:	iret   
  4093c0:	add    DWORD PTR [edx-0x3d],ebx
  4093c3:	mov    dh,0xdd
  4093c5:	jmp    0x6fcb40fa
  4093ca:	(bad)  
  4093cb:	xor    BYTE PTR [edi],al
  4093cd:	or     DWORD PTR [eax-0x789f0c8],0xf30f4de8
  4093d7:	nop
  4093d8:	out    dx,eax
  4093d9:	xor    DWORD PTR [esi+0x2a3b8eb3],esp
  4093df:	push   edi
  4093e0:	sbb    ch,BYTE PTR [ebx]
  4093e2:	pop    esp
  4093e3:	cmp    esi,DWORD PTR [edi-0x4e19d2f3]
  4093e9:	xor    BYTE PTR [edi+0x5e70e997],ch
  4093ef:	ficom  DWORD PTR [esi+0x50ec9787]
  4093f5:	cmp    esi,ebp
  4093f7:	test   BYTE PTR [ebx-0x16095c78],dh
  4093fd:	pop    esi
  4093fe:	mov    ecx,ebx
  409400:	mov    al,0xb3
  409402:	pop    esp
  409403:	hlt    
  409404:	push   0x7f
  409406:	ror    DWORD PTR [edi-0x3cef4013],0xa7
  40940d:	xchg   edx,eax
  40940e:	jb     0x409415
  409410:	scas   al,BYTE PTR es:[edi]
  409411:	inc    eax
  409412:	add    BYTE PTR [eax],al
  409414:	jb     0x409472
  409416:	mov    eax,0x1849b89d
  40941b:	push   ds
  40941c:	or     dl,dl
  40941e:	sbb    BYTE PTR [esi-0x4f],ch
  409421:	retf   0xe8cf
  409424:	sahf   
  409425:	xchg   ebx,eax
  409426:	xor    eax,0xd923d8d
  40942b:	mov    al,0x4a
  40942d:	aaa    
  40942e:	inc    esi
  40942f:	jecxz  0x40947f
  409431:	xor    ecx,eax
  409433:	lds    ebx,FWORD PTR [edx-0x53]
  409436:	mov    esp,gs
  409438:	inc    esi
  409439:	mov    DWORD PTR [ecx+0x79],0x3a50f967
  409440:	sar    DWORD PTR [ebx+0x16],cl
  409443:	inc    edi
  409444:	and    DWORD PTR [edx-0x2d6b6351],edx
  40944a:	fstp   DWORD PTR [esi]
  40944c:	stc    
  40944d:	arpl   WORD PTR [edi-0x461f1538],cx
  409453:	test   DWORD PTR [ebx+esi*2],ebx
  409456:	imul   esi,DWORD PTR [edx+0x3c9febe8],0xf5481a46
  409460:	sbb    BYTE PTR [ebx+edi*2],0x35
  409464:	lods   al,BYTE PTR ds:[esi]
  409465:	shl    DWORD PTR [ebx+edi*4+0x68],cl
  409469:	or     al,0x5d
  40946b:	push   0x1
  40946d:	pop    ds
  40946e:	lock add BYTE PTR [eax],dh
  409471:	mov    bl,0xee
  409473:	push   ss
  409474:	and    BYTE PTR [eax+0x64],dh
  409477:	dec    edx
  409478:	(bad)  
  409479:	push   0xc69e3c71
  40947e:	jns    0x409465
  409480:	pop    es
  409481:	test   DWORD PTR [ebx],esp
  409483:	sti    
  409484:	ins    DWORD PTR es:[edi],dx
  409485:	das    
  409486:	and    DWORD PTR [edi-0x4c],ecx
  409489:	jle    0x409437
  40948b:	cs cli 
  40948d:	es jb  0x409422
  409490:	sbb    eax,0xb3acb17
  409495:	mov    al,0xf6
  409497:	clc    
  409498:	xchg   esi,eax
  409499:	mov    ah,0x4d
  40949b:	(bad)  
  40949c:	sub    esp,DWORD PTR [ebx]
  40949e:	cwde   
  40949f:	shl    ebx,cl
  4094a1:	leave  
  4094a2:	mov    bl,0x4c
  4094a4:	stos   BYTE PTR es:[edi],al
  4094a5:	mov    eax,0x2bf801a1
  4094aa:	(bad)  
  4094ab:	out    0x96,al
  4094ad:	hlt    
  4094ae:	pop    esi
  4094af:	ja     0x40948f
  4094b1:	pop    edi
  4094b2:	xchg   esp,eax
  4094b3:	push   esi
  4094b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094b5:	scas   al,BYTE PTR es:[edi]
  4094b6:	hlt    
  4094b7:	fs enter 0x7f5,0x5b
  4094bc:	cld    
  4094bd:	loopne 0x40948c
  4094bf:	pop    eax
  4094c0:	lds    ebp,FWORD PTR [edi+0x1babdf4a]
  4094c6:	jl     0x4094a3
  4094c8:	pop    edi
  4094c9:	not    BYTE PTR [eax-0x1782c4f6]
  4094cf:	xlat   BYTE PTR ds:[ebx]
  4094d0:	mov    eax,0xe782021e
  4094d5:	stc    
  4094d6:	push   edx
  4094d7:	rcr    BYTE PTR ds:0xef2cb487,1
  4094dd:	dec    eax
  4094de:	test   al,0xcc
  4094e0:	mov    ds:0xae014d64,al
  4094e5:	sbb    cl,BYTE PTR ds:0x3a457d60
  4094eb:	clc    
  4094ec:	sub    al,0xd0
  4094ee:	aad    0xe
  4094f0:	pop    eax
  4094f1:	pop    edi
  4094f2:	add    DWORD PTR [ebx+0x65],ecx
  4094f5:	sbb    ch,dh
  4094f7:	cs push edx
  4094f9:	xchg   ecx,eax
  4094fa:	sub    BYTE PTR [ebx],dh
  4094fc:	sbb    DWORD PTR [ebp+0xb7548ee],0xfcd76a4d
  409506:	adc    DWORD PTR [edi+0x1ba08fb9],eax
  40950c:	jle    0x409582
  40950e:	cmp    bh,BYTE PTR [eax]
  409510:	adc    DWORD PTR ds:0xd2c53951,eax
  409516:	inc    edx
  409518:	aad    0xd0
  40951a:	iret   
  40951b:	fwait
  40951c:	jecxz  0x40956e
  40951e:	retf   
  40951f:	mov    esp,0x25ecb3ca
  409524:	mov    edi,0x229cf0b8
  409529:	aam    0x68
  40952b:	mov    ebx,DWORD PTR [ebx-0xc577d51]
  409531:	push   ecx
  409532:	or     BYTE PTR ds:[ecx],cl
  409535:	mov    al,0xfa
  409537:	repnz iret 
  409539:	daa    
  40953a:	mov    eax,ds:0x1989ef21
  40953f:	jle    0x409586
  409541:	sub    dl,BYTE PTR [edi-0x29]
  409544:	loop   0x4094f9
  409546:	loopne 0x40955a
  409548:	pop    esp
  409549:	mov    bl,0xbd
  40954b:	xchg   edx,eax
  40954c:	and    edx,DWORD PTR [edi-0x368120ff]
  409552:	xor    cl,al
  409554:	mov    dh,0xcd
  409556:	(bad)  
  409557:	push   ecx
  409558:	std    
  409559:	add    al,0xea
  40955b:	cs retf 
  40955d:	pop    ecx
  40955e:	mov    al,0x6
  409560:	sbb    eax,0xe73a2711
  409565:	push   ecx
  409566:	dec    ebp
  409567:	out    0x24,eax
  409569:	sar    DWORD PTR es:0x82d51eb3,1
  409570:	and    BYTE PTR [ecx-0x66],ah
  409573:	sbb    esp,edi
  409575:	int3   
  409576:	es jno 0x409593
  409579:	daa    
  40957a:	bound  ebp,QWORD PTR [edi+0xced34d1]
  409580:	inc    ebp
  409581:	pop    esi
  409582:	stos   BYTE PTR es:[edi],al
  409583:	inc    eax
  409584:	adc    BYTE PTR [eax-0x4da33f8],bl
  40958a:	into   
  40958b:	mov    ds:0x86bacad,al
  409590:	sbb    esp,edx
  409592:	sub    al,ch
  409594:	push   ds
  409595:	outs   dx,BYTE PTR ds:[esi]
  409596:	fcmovnu st,st(6)
  409598:	fwait
  409599:	cld    
  40959a:	pop    esi
  40959b:	test   al,0x21
  40959d:	inc    edi
  40959e:	js     0x4095df
  4095a0:	dec    eax
  4095a1:	aaa    
  4095a2:	rol    DWORD PTR [ecx],cl
  4095a4:	ins    DWORD PTR es:[edi],dx
  4095a5:	dec    eax
  4095a6:	arpl   WORD PTR [esi+ebx*4],sp
  4095a9:	and    al,0x39
  4095ab:	aas    
  4095ac:	inc    edx
  4095ad:	adc    eax,0x3a625c0f
  4095b2:	sti    
  4095b3:	adc    BYTE PTR [edi-0x658366d4],ch
  4095b9:	dec    esp
  4095ba:	sub    al,0x65
  4095bc:	push   cs
  4095bd:	push   edx
  4095be:	std    
  4095bf:	dec    edi
  4095c0:	ja     0x4095bb
  4095c2:	gs aam 0xe4
  4095c5:	jmp    0x409584
  4095c7:	jne    0x40962f
  4095c9:	cli    
  4095ca:	pop    ebx
  4095cb:	mov    esi,0x78efc804
  4095d0:	in     al,0x16
  4095d2:	cmp    al,0x54
  4095d4:	sbb    BYTE PTR [ebp-0x6b],bh
  4095d7:	pusha  
  4095d8:	gs dec edx
  4095da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095db:	sub    eax,DWORD PTR [esp+esi*4+0x30]
  4095df:	pop    edi
  4095e0:	leave  
  4095e1:	enter  0xece7,0x9f
  4095e5:	sbb    al,0xd9
  4095e7:	clc    
  4095e8:	gs cdq 
  4095ea:	pop    ss
  4095eb:	dec    BYTE PTR [ebp-0x111538c0]
  4095f1:	fwait
  4095f2:	pop    edx
  4095f3:	outs   dx,DWORD PTR ds:[esi]
  4095f4:	pop    ss
  4095f5:	mov    esp,0x8984c837
  4095fa:	mov    DWORD PTR [ebx-0x174b3069],edx
  409600:	mov    ecx,0x37cbd89
  409605:	xchg   BYTE PTR ds:0xbc8abdd4,bl
  40960b:	add    al,0x11
  40960d:	ss and al,bh
  409610:	dec    esp
  409611:	jbe    0x9d4a65fd
  409617:	(bad)  
  409618:	jne    0x40963b
  40961a:	inc    ebx
  40961b:	xchg   ebx,eax
  40961c:	jae    0x4095c5
  40961e:	(bad)
  409621:	xlat   BYTE PTR ds:[ebx]
  409622:	mov    fs,WORD PTR [ebx+ecx*8]
  409625:	push   edi
  409626:	jecxz  0x4095d0
  409628:	loopne 0x409688
  40962a:	(bad)  
  40962b:	and    al,0x2b
  40962d:	and    BYTE PTR ss:[ebp-0x6728d9b1],bl
  409634:	pusha  
  409635:	jmp    0x1de5:0xce5dc5e
  40963c:	add    eax,0x1e122af5
  409641:	xchg   edi,eax
  409642:	aaa    
  409643:	jle    0x4096b5
  409645:	cdq    
  409646:	push   ebx
  409647:	ss inc edi
  409649:	std    
  40964a:	xor    eax,DWORD PTR ds:0x875ff6d7
  409650:	or     eax,0x3357061b
  409655:	jns    0x4096d5
  409657:	test   BYTE PTR [edx+0x1ce28121],0x56
  40965e:	push   edx
  40965f:	add    dh,BYTE PTR [ebp-0x79]
  409662:	out    dx,eax
  409663:	push   es
  409664:	gs out 0x90,eax
  409667:	les    edx,FWORD PTR [ebp+0x62cd99df]
  40966d:	xchg   esp,eax
  40966e:	and    eax,0x9d4f86bf
  409673:	fmul   st(0),st
  409675:	cmp    ecx,esp
  409677:	mov    cl,0x68
  409679:	and    ah,BYTE PTR [ecx-0x6]
  40967c:	jae    0x40966c
  40967e:	fldcw  WORD PTR [edx-0x441110e8]
  409684:	icebp  
  409685:	inc    esp
  409686:	adc    al,al
  409688:	add    DWORD PTR [ecx-0x5db274cc],esi
  40968e:	and    DWORD PTR [ebp+0x72],0xa89ac4ad
  409695:	dec    esp
  409696:	clc    
  409697:	pop    es
  409698:	mov    ds:0xf2efc432,eax
  40969d:	sahf   
  40969e:	loopne 0x409665
  4096a0:	ret    
  4096a1:	pop    ebp
  4096a2:	call   0x28f6:0x71810408
  4096a9:	pop    eax
  4096aa:	test   BYTE PTR [esi+0x5],bl
  4096ad:	mov    cl,0x5b
  4096af:	xor    DWORD PTR [edi],esi
  4096b1:	retf   0xea43
  4096b4:	(bad)  
  4096b5:	dec    esi
  4096b6:	ja     0x40966a
  4096b8:	cmc    
  4096b9:	cmp    DWORD PTR [ebx+0x736d0e2c],eax
  4096bf:	mov    bl,bl
  4096c1:	in     al,dx
  4096c2:	into   
  4096c3:	adc    DWORD PTR [ebx-0xac54d30],eax
  4096c9:	lea    ebp,[eax]
  4096cb:	push   ss
  4096cc:	push   ebp
  4096cd:	push   ebp
  4096ce:	jo     0x4096e5
  4096d0:	xor    cl,BYTE PTR [ecx]
  4096d2:	int3   
  4096d3:	fld    QWORD PTR [eax-0x15478652]
  4096d9:	inc    ecx
  4096da:	cld    
  4096db:	jg     0x40973a
  4096dd:	popa   
  4096de:	mov    cl,0xf1
  4096e0:	mov    al,0x2d
  4096e2:	repz add DWORD PTR [eax-0x65],eax
  4096e6:	push   0xb
  4096e8:	add    esi,DWORD PTR [ebp-0x4bbacba8]
  4096ee:	dec    eax
  4096ef:	ins    DWORD PTR es:[edi],dx
  4096f0:	pusha  
  4096f1:	data16 fsubrp st(2),st
  4096f4:	sub    eax,DWORD PTR ds:0x4ffd3faa
  4096fa:	aas    
  4096fb:	adc    al,0x6
  4096fd:	retf   
  4096fe:	mov    bh,0x9b
  409700:	es out dx,al
  409702:	mov    dh,0x4b
  409704:	ss inc ebp
  409706:	fsubr  st(3),st
  409708:	iret   
  409709:	nop
  40970a:	lods   eax,DWORD PTR ds:[esi]
  40970b:	push   cx
  40970d:	xchg   DWORD PTR [eax+0x53],eax
  409710:	(bad)  
  409711:	popf   
  409712:	dec    ebp
  409713:	mov    dl,0x89
  409715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409716:	dec    edi
  409717:	data16 add BYTE PTR ds:[eiz*4-0x15c61c96],0xf6
  409721:	clc    
  409722:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409724:	scas   al,BYTE PTR es:[edi]
  409725:	push   esi
  409726:	push   edi
  409727:	or     eax,0x7d6fd13e
  40972c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40972d:	ds add eax,0x599f318
  409733:	ins    BYTE PTR es:[edi],dx
  409734:	push   ebx
  409735:	das    
  409736:	xchg   ecx,eax
  409737:	and    ah,al
  409739:	lds    ecx,FWORD PTR [edx]
  40973b:	add    DWORD PTR [edx],eax
  40973d:	test   edi,0xeead404d
  409743:	mov    bl,0x2
  409745:	xor    edi,DWORD PTR [ebx]
  409747:	fcmovu st,st(1)
  409749:	push   ecx
  40974a:	mov    eax,0x35b49600
  40974f:	dec    edx
  409750:	js     0x409773
  409752:	jbe    0x409738
  409754:	ins    DWORD PTR es:[edi],dx
  409755:	sub    cl,BYTE PTR [edx]
  409757:	(bad)
  40975b:	pop    ecx
  40975c:	push   esi
  40975d:	ret    
  40975e:	fcmovu st,st(2)
  409760:	pop    es
  409761:	imul   edx,DWORD PTR [esp+ecx*4],0x1c0b4cc
  409768:	aaa    
  409769:	mov    dh,0xc8
  40976b:	inc    ecx
  40976c:	fadd   st,st(5)
  40976e:	mov    ecx,0xb6956916
  409773:	aad    0xa9
  409775:	shr    ch,1
  409777:	and    DWORD PTR [edx],edx
  409779:	cmp    eax,0x690b4bec
  40977e:	adc    al,0x40
  409780:	cmp    al,BYTE PTR fs:[eax]
  409783:	or     edi,DWORD PTR [edx+esi*1+0x43]
  409787:	test   BYTE PTR [ecx-0x137d3fa9],dh
  40978d:	in     eax,dx
  40978e:	aaa    
  40978f:	aaa    
  409790:	shl    DWORD PTR [eax-0x39],cl
  409793:	mov    cl,0xdf
  409795:	pop    ecx
  409796:	sar    al,0x84
  409799:	dec    ebp
  40979a:	dec    ebx
  40979b:	add    DWORD PTR [ebx+0x72],0xffffffaf
  40979f:	cmp    al,0xf8
  4097a1:	sbb    ah,BYTE PTR [esp+ecx*8+0x10]
  4097a5:	lds    eax,FWORD PTR ds:[ecx]
  4097a8:	or     DWORD PTR [ecx-0x2b],ebp
  4097ab:	or     ch,BYTE PTR [ecx-0x38480840]
  4097b1:	mov    ds:0xec7c6645,eax
  4097b6:	cwde   
  4097b7:	ss enter 0xd788,0x15
  4097bc:	pop    ebx
  4097bd:	leave  
  4097be:	push   edi
  4097bf:	call   0x239d1462
  4097c4:	hlt    
  4097c5:	cs mov bh,0x10
  4097c8:	aad    0x17
  4097ca:	xchg   ebx,eax
  4097cb:	or     ebx,DWORD PTR [edx]
  4097cd:	mov    edi,0x956b494b
  4097d2:	xor    eax,0xbf6284d1
  4097d7:	outs   dx,DWORD PTR ds:[esi]
  4097d8:	bound  ebp,QWORD PTR [eax]
  4097da:	or     esi,DWORD PTR [edi+0x68]
  4097dd:	pusha  
  4097de:	call   0x3ab2:0x20363b1d
  4097e5:	push   edi
  4097e6:	jp     0x4097b8
  4097e8:	inc    eax
  4097e9:	mov    ds:0xc596f00b,eax
  4097ee:	jns    0x40979e
  4097f0:	das    
  4097f1:	shl    BYTE PTR [edi+0x27abdebe],1
  4097f7:	cdq    
  4097f8:	push   esi
  4097f9:	mov    dl,0xb4
  4097fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097fc:	lods   eax,DWORD PTR ds:[esi]
  4097fd:	aad    0x5a
  4097ff:	fdiv   QWORD PTR [esi-0x1dd470a1]
  409805:	fist   DWORD PTR [ebp-0xf]
  409808:	nop
  409809:	mov    DWORD PTR [ebx],esi
  40980b:	cmc    
  40980c:	mul    DWORD PTR [edx+0x773c3e8a]
  409812:	lods   al,BYTE PTR ds:[esi]
  409813:	imul   ebx,edx,0xe7fdaea9
  409819:	xchg   edi,edx
  40981b:	xor    ebx,0x31b22412
  409821:	mov    cs,ecx
  409823:	(bad)  
  409825:	daa    
  409826:	mov    dl,0x2f
  409828:	jmp    DWORD PTR [edi+esi*8]
  40982b:	scas   eax,DWORD PTR es:[edi]
  40982c:	in     eax,dx
  40982d:	iret   
  40982e:	add    al,0x5f
  409830:	jae    0x40981d
  409832:	cmc    
  409833:	push   ebp
  409834:	jecxz  0x409874
  409836:	jne    0x4097e3
  409838:	jmp    0x2a2994c4
  40983d:	xor    cl,ch
  40983f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409840:	std    
  409841:	bound  esi,QWORD PTR [ecx]
  409843:	ret    
  409844:	mul    DWORD PTR [ecx-0x13]
  409847:	(bad)  
  409848:	clc    
  409849:	scas   eax,DWORD PTR es:[edi]
  40984a:	leave  
  40984b:	and    eax,0x49336bab
  409850:	fnstenv [eax-0x7e599b50]
  409856:	cmp    DWORD PTR [edx+ebx*4+0x5ab85d35],ebx
  40985d:	push   edx
  40985e:	enter  0x7ad,0x75
  409862:	jle    0x4097e5
  409864:	jg     0x409813
  409866:	push   esi
  409867:	imul   BYTE PTR [edx+0x26]
  40986a:	fild   WORD PTR [ebp-0x35]
  40986d:	dec    edi
  40986e:	adc    BYTE PTR [ebx-0x41],cl
  409871:	xor    BYTE PTR [edi+0x6e],bh
  409874:	in     eax,0x8b
  409876:	clc    
  409877:	inc    ecx
  409878:	fwait
  409879:	sub    al,0x7a
  40987b:	mov    bh,0xa4
  40987d:	iret   
  40987e:	jmp    0xede602d7
  409883:	inc    ebx
  409884:	mov    es,WORD PTR [eax-0x33]
  409887:	ror    BYTE PTR [esi+edi*4+0x74],cl
  40988b:	icebp  
  40988c:	mov    al,ds:0x32170309
  409891:	loopne 0x409837
  409893:	out    dx,eax
  409894:	jnp    0x409842
  409896:	mov    DWORD PTR [eax-0x2a],edi
  409899:	push   ds
  40989a:	int    0x6
  40989c:	add    esi,DWORD PTR [ecx]
  40989e:	mov    eax,0xdf2fa9fd
  4098a3:	inc    edi
  4098a4:	jbe    0x409830
  4098a6:	mov    ch,0x1a
  4098a8:	pop    ebx
  4098a9:	sbb    bl,BYTE PTR [ecx]
  4098ab:	or     eax,0xaf47d4a
  4098b0:	add    bl,BYTE PTR [eax+0x49421e0f]
  4098b6:	jge    0x40986f
  4098b8:	sbb    al,0x8e
  4098ba:	mov    ebx,0x7683d1d3
  4098bf:	scas   al,BYTE PTR es:[edi]
  4098c0:	xchg   DWORD PTR [edi-0x4b],esp
  4098c3:	or     bh,al
  4098c5:	ret    0xf915
  4098c8:	lods   al,BYTE PTR ds:[esi]
  4098c9:	jo     0x4098af
  4098cb:	or     DWORD PTR [edx-0x64],0x6d6dbe51
  4098d2:	cli    
  4098d3:	xchg   ecx,eax
  4098d4:	enter  0xf798,0x8d
  4098d8:	call   0xf6609b84
  4098dd:	jo     0x4098a6
  4098df:	hlt    
  4098e0:	sbb    eax,DWORD PTR [edx-0x55]
  4098e3:	ds mov ch,0x96
  4098e6:	ret    
  4098e7:	in     al,0x5e
  4098e9:	into   
  4098ea:	xchg   ecx,eax
  4098eb:	mov    ebx,0xaf547779
  4098f0:	push   es
  4098f1:	cmp    ch,BYTE PTR [ecx+0xac92671]
  4098f7:	pop    ebx
  4098f8:	out    dx,al
  4098f9:	sti    
  4098fa:	mov    esi,0x91f7f3e5
  4098ff:	sbb    BYTE PTR [ebx-0x2d],dl
  409902:	mov    eax,ds:0xfd0af4c2
  409907:	xchg   esp,eax
  409908:	xrelease mov BYTE PTR [eax],dl
  40990b:	cmp    bl,BYTE PTR [ebp-0x42]
  40990e:	mov    esi,0x3a6df0f7
  409913:	outs   dx,BYTE PTR ds:[esi]
  409914:	sti    
  409915:	sub    eax,0x934851d8
  40991a:	sub    BYTE PTR [esi],dh
  40991c:	and    edi,DWORD PTR [bp-0x34b]
  409921:	loop   0x409925
  409923:	repz inc esi
  409925:	stc    
  409926:	or     ch,BYTE PTR [edx]
  409928:	add    edi,DWORD PTR [esi-0xe6ffcc7]
  40992e:	ficomp WORD PTR [ecx+eax*4-0x71]
  409932:	outs   dx,BYTE PTR ds:[esi]
  409933:	jae    0x409913
  409935:	iret   
  409936:	test   BYTE PTR [edx],bl
  409938:	rol    BYTE PTR [eax+0x3a],0xc
  40993c:	mov    eax,0x23ef1601
  409941:	adc    dl,BYTE PTR [ebx]
  409943:	add    cl,ah
  409945:	mov    ecx,0x5b3192b3
  40994a:	jle    0x4099c9
  40994c:	xchg   ebx,eax
  40994d:	dec    eax
  40994e:	pop    ebx
  40994f:	adc    bl,cl
  409951:	xor    bl,BYTE PTR [edi-0x41]
  409954:	test   DWORD PTR [ecx-0x80],ebx
  409957:	dec    ebx
  409958:	test   eax,0x9fd687d2
  40995d:	and    BYTE PTR [eax+0x7f],bh
  409960:	mov    dl,0xda
  409962:	lods   eax,DWORD PTR ds:[esi]
  409963:	xlat   BYTE PTR ds:[ebx]
  409964:	pop    eax
  409965:	mov    ch,0xc0
  409967:	nop
  409968:	push   ebx
  409969:	mov    ah,0xd6
  40996b:	(bad)  
  40996d:	sbb    eax,0xa1f8c387
  409972:	pop    esi
  409973:	rcl    DWORD PTR [ecx+ebx*2+0x16249902],1
  40997a:	in     eax,0xea
  40997c:	mov    esp,0xf9c71386
  409981:	das    
  409982:	and    BYTE PTR [eax],0x2d
  409985:	cmp    edx,ebx
  409987:	fstp   TBYTE PTR [ecx+0x462a56a7]
  40998d:	lock shr DWORD PTR [ebx+0x2ec63f73],0xe1
  409995:	mov    esi,0xc0fc3516
  40999a:	push   es
  40999b:	jae    0x409999
  40999d:	lahf   
  40999e:	inc    edi
  40999f:	mov    BYTE PTR [eax+0x29],0xc4
  4099a3:	pop    esp
  4099a4:	xor    eax,DWORD PTR [ecx-0x809759]
  4099aa:	xchg   DWORD PTR [esi-0x7],esi
  4099ad:	pop    ecx
  4099ae:	jb     0x409998
  4099b0:	int3   
  4099b1:	rol    edx,cl
  4099b3:	mov    al,ds:0x38be43f2
  4099b8:	push   esp
  4099b9:	cdq    
  4099ba:	xchg   esp,eax
  4099bb:	inc    ebp
  4099bc:	shl    BYTE PTR [eax+0x5e],cl
  4099bf:	fst    DWORD PTR [ebp-0x16df6c9a]
  4099c5:	loopne 0x409a29
  4099c7:	adc    BYTE PTR [ecx+0x4a978a00],cl
  4099cd:	dec    ebx
  4099ce:	dec    edx
  4099cf:	push   ebp
  4099d0:	stos   DWORD PTR es:[edi],eax
  4099d1:	xchg   ebx,eax
  4099d2:	imul   ebp,eax,0xffffff94
  4099d5:	xchg   esi,eax
  4099d6:	repz jp 0x20ac802
  4099dd:	push   eax
  4099de:	add    esi,DWORD PTR ss:[edx-0x6226ca4e]
  4099e5:	add    BYTE PTR [esp+esi*4],cl
  4099e8:	jmp    0x87816bc0
  4099ed:	push   ebx
  4099ee:	std    
  4099ef:	in     eax,0xce
  4099f1:	repz ret 0x45c5
  4099f5:	loop   0x409a57
  4099f7:	pop    ebp
  4099f8:	mov    esp,0x1baf1124
  4099fd:	scas   eax,DWORD PTR es:[edi]
  4099fe:	add    DWORD PTR [edi-0x1b048623],ebx
  409a04:	aas    
  409a05:	push   ebp
  409a06:	out    dx,eax
  409a07:	mov    ebx,0x4525e784
  409a0c:	pusha  
  409a0d:	std    
  409a0e:	(bad)  
  409a0f:	or     DWORD PTR [ebp+0x2c],ebx
  409a12:	fdivp  st(5),st
  409a14:	mov    ah,0x6f
  409a16:	lea    ebx,[edi+0x1933ac43]
  409a1c:	stos   DWORD PTR es:[edi],eax
  409a1d:	cli    
  409a1e:	loope  0x4099d9
  409a20:	lock test BYTE PTR [eax+0xb],bh
  409a24:	jp     0x4099d1
  409a26:	out    dx,al
  409a27:	loopne 0x409a8c
  409a29:	xchg   BYTE PTR [eax+0xe1d4573],dh
  409a2f:	shl    edi,1
  409a31:	das    
  409a32:	in     eax,dx
  409a33:	je     0x409a86
  409a35:	sbb    al,0x32
  409a37:	jle    0x409a64
  409a39:	adc    DWORD PTR ds:0x3352b317,eax
  409a3f:	pop    ecx
  409a40:	and    al,0xcd
  409a42:	into   
  409a43:	out    0x37,eax
  409a45:	dec    esp
  409a46:	loope  0x409a97
  409a48:	inc    edx
  409a49:	aam    0x5a
  409a4b:	xchg   esi,eax
  409a4c:	(bad)  [bx+0x6a]
  409a50:	and    DWORD PTR [ebx+0x6cd5868e],edx
  409a56:	mov    ds:0x5ed0e17b,eax
  409a5b:	rol    BYTE PTR [ebx],1
  409a5d:	(bad)  
  409a5e:	push   0xef69a011
  409a63:	or     dh,BYTE PTR [esi]
  409a65:	js     0x409aa2
  409a67:	dec    esi
  409a68:	cmp    dh,cl
  409a6a:	cmp    eax,0x678fd4f6
  409a6f:	cmp    BYTE PTR [edx],dh
  409a71:	retf   
  409a72:	adc    edi,eax
  409a74:	out    dx,eax
  409a75:	jo     0x409a12
  409a77:	mov    ebp,0x8ae173a7
  409a7c:	scas   eax,DWORD PTR es:[edi]
  409a7d:	inc    BYTE PTR [ebp-0x78]
  409a80:	pop    edi
  409a81:	shl    DWORD PTR [esp+esi*8-0x47051256],0xdf
  409a89:	cmp    eax,0x661e34d3
  409a8e:	cmp    eax,0xab68453a
  409a93:	push   edx
  409a94:	out    dx,al
  409a95:	push   ebp
  409a96:	jp     0x409a83
  409a98:	test   BYTE PTR [esi+0x6329d820],ah
  409a9e:	retf   
  409a9f:	jbe    0x409a4b
  409aa1:	pop    eax
  409aa2:	lds    ebx,FWORD PTR [ecx+0x5274bac0]
  409aa8:	scas   al,BYTE PTR es:[edi]
  409aa9:	xor    al,0x44
  409aab:	outs   dx,BYTE PTR ds:[esi]
  409aac:	xchg   ebx,eax
  409aad:	shl    ebp,cl
  409aaf:	fist   WORD PTR [ecx+0x9]
  409ab2:	xchg   eax,edx
  409ab4:	jo     0x409ae4
  409ab6:	fiadd  WORD PTR [ecx+edx*4-0x5e]
  409aba:	push   edi
  409abb:	sbb    BYTE PTR [ebp-0x61eb2b72],ah
  409ac1:	and    ebp,DWORD PTR [edx+0x23]
  409ac4:	inc    ecx
  409ac5:	les    ebx,FWORD PTR [edx+0x2e]
  409ac8:	jmp    0x6903:0xdf443ed2
  409acf:	das    
  409ad0:	mov    ch,0x5e
  409ad2:	(bad)  
  409ad3:	cmp    eax,0xa5fc19e2
  409ad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ad9:	test   eax,0xd5e97ad3
  409ade:	sbb    DWORD PTR ds:0x205b2504,edx
  409ae4:	pop    ds
  409ae5:	push   0x6a7b89ba
  409aea:	mov    bh,0xde
  409aec:	inc    ebx
  409aed:	add    eax,0x800ab18
  409af2:	sbb    al,0x93
  409af4:	or     BYTE PTR [esi+0x2e],bh
  409af7:	out    0xf9,eax
  409af9:	inc    ebx
  409afa:	pop    ecx
  409afb:	ss push esi
  409afd:	je     0x409ae6
  409aff:	loope  0x409b2c
  409b01:	xor    cl,BYTE PTR [edx]
  409b03:	test   eax,0xb32c5725
  409b08:	sbb    al,0x20
  409b0a:	sub    DWORD PTR [ebp-0x4],0x1a
  409b0e:	push   edx
  409b0f:	mov    bl,0xdc
  409b11:	inc    eax
  409b12:	enter  0x637a,0x60
  409b16:	jo     0x409b81
  409b18:	dec    BYTE PTR ss:[edx-0x2829b03]
  409b1f:	or     al,0x4e
  409b21:	popf   
  409b22:	mov    esi,0x3681cc45
  409b27:	push   ss
  409b28:	cmp    edi,ecx
  409b2a:	mov    ds:0xa6038fd0,eax
  409b2f:	les    ebp,FWORD PTR [edx+0x28]
  409b32:	hlt    
  409b33:	mov    BYTE PTR [edi],bh
  409b35:	push   0xffffffdd
  409b37:	adc    eax,0x7ec11bf6
  409b3c:	push   0x7187f12b
  409b41:	sub    DWORD PTR cs:[ebx+ebp*2+0x6d],0x175c436c
  409b4a:	icebp  
  409b4b:	lds    ecx,FWORD PTR [edi+eiz*8]
  409b4e:	repz dec ecx
  409b50:	test   cl,dh
  409b52:	lock mov dl,0xb4
  409b55:	iret   
  409b56:	fdiv   QWORD PTR [edi+0x6ab93d4]
  409b5c:	outs   dx,BYTE PTR ds:[esi]
  409b5d:	leave  
  409b5e:	jbe    0x409ae6
  409b60:	out    dx,eax
  409b61:	cli    
  409b62:	popf   
  409b63:	iret   
  409b64:	xor    DWORD PTR [ebx-0x14e40772],0x2a
  409b6b:	cmp    bl,BYTE PTR [edx+ebp*8+0x3f]
  409b6f:	jae    0x409bdc
  409b71:	dec    eax
  409b72:	mov    ah,0xa5
  409b74:	inc    ecx
  409b75:	pop    ss
  409b76:	push   ecx
  409b77:	dec    ebx
  409b78:	nop
  409b79:	mov    ch,0x1a
  409b7b:	(bad)  
  409b7c:	mov    DWORD PTR ds:[eax],esi
  409b7f:	pop    eax
  409b80:	scas   al,BYTE PTR es:[edi]
  409b81:	jns    0x409b7c
  409b83:	cmp    DWORD PTR [eax-0x3930f317],edi
  409b89:	add    ebp,DWORD PTR cs:[ecx]
  409b8c:	sbb    al,BYTE PTR [ecx-0x8]
  409b8f:	xchg   esp,eax
  409b90:	cmp    eax,0x47436434
  409b95:	push   ebp
  409b96:	xchg   ebp,eax
  409b97:	out    dx,al
  409b98:	mov    ebx,0x5f4292d9
  409b9d:	dec    edi
  409b9e:	repz xor dh,ah
  409ba1:	(bad)
  409ba6:	int    0x25
  409ba8:	add    eax,0x3a8bd3a8
  409bad:	test   DWORD PTR [edx+0x1d6f3992],0xd08ff9f4
  409bb7:	test   eax,0xbce7e070
  409bbc:	mov    cl,ah
  409bbe:	jle    0x409b6e
  409bc0:	or     eax,0x81c59cfe
  409bc5:	adc    eax,0x3cbfa38f
  409bca:	test   DWORD PTR [edx+edx*2-0x5605f0b8],edx
  409bd1:	rcr    DWORD PTR [ebx-0x6399279c],0xc
  409bd8:	lea    esp,[ecx-0x6ded9027]
  409bde:	mov    esi,0xe9204561
  409be3:	hlt    
  409be4:	gs mov ebx,ss
  409be7:	pop    esp
  409be8:	lahf   
  409be9:	adc    eax,0x767e12a6
  409bee:	fs iret 
  409bf0:	dec    ebp
  409bf1:	dec    esi
  409bf2:	jmp    0x4dad:0x2d755f28
  409bf9:	es pushf 
  409bfb:	neg    DWORD PTR [edx+0x56]
  409bfe:	mov    bl,BYTE PTR [esi]
  409c00:	aas    
  409c01:	icebp  
  409c02:	push   cs
  409c03:	sar    DWORD PTR [ebp-0x76],1
  409c06:	int3   
  409c07:	xchg   esi,eax
  409c08:	loope  0x409c12
  409c0a:	(bad)  
  409c0b:	lahf   
  409c0c:	push   eax
  409c0d:	ror    ebx,0xee
  409c10:	mov    eax,ds:0x6ceadd3e
  409c15:	mov    ds:0xe9a88fd5,eax
  409c1a:	shl    WORD PTR [ebp-0x35cd6da3],cl
  409c21:	ins    DWORD PTR es:[edi],dx
  409c22:	push   0xffffff94
  409c24:	int    0xf3
  409c26:	sti    
  409c27:	inc    esp
  409c28:	jl     0x409c21
  409c2a:	xchg   ecx,eax
  409c2b:	test   eax,0x20017ba5
  409c30:	push   ebp
  409c31:	dec    ecx
  409c32:	pushf  
  409c33:	and    BYTE PTR [edx-0x45],al
  409c36:	xor    dl,ah
  409c38:	push   ss
  409c39:	lea    esi,[eax+0x21af2115]
  409c3f:	mov    esp,0xafdcd572
  409c44:	and    esp,edi
  409c46:	adc    DWORD PTR [esi+0x6ed41ae6],esp
  409c4c:	cwde   
  409c4d:	or     al,0x55
  409c4f:	sub    eax,0xb6f59d1f
  409c54:	mov    ds:0x6e34a0fc,eax
  409c59:	cmp    DWORD PTR [ecx+0x35aae317],0xffffffd4
  409c60:	fs push ebx
  409c62:	js     0x409c3a
  409c64:	clc    
  409c65:	xlat   BYTE PTR ds:[ebx]
  409c66:	cmp    ebx,ebx
  409c68:	sbb    DWORD PTR [ebp-0x1e],esi
  409c6b:	cmp    dl,BYTE PTR [ebp-0x43]
  409c6e:	clc    
  409c6f:	rol    BYTE PTR [eax-0x73ede838],0xee
  409c76:	stc    
  409c77:	ins    BYTE PTR es:[edi],dx
  409c78:	stc    
  409c79:	inc    eax
  409c7a:	mov    ecx,0x524e2ee7
  409c7f:	out    dx,al
  409c80:	mov    BYTE PTR [eax-0x741384d2],dh
  409c86:	setno  BYTE PTR [edx+0x10d56d32]
  409c8d:	cmp    cl,BYTE PTR [eax]
  409c8f:	cmp    BYTE PTR [eax],0x78
  409c92:	ss mov eax,0x24e8b48
  409c98:	xor    DWORD PTR [ebp+esi*1-0x62ae1681],edi
  409c9f:	inc    ebx
  409ca0:	and    bh,cl
  409ca2:	xor    al,0x7c
  409ca4:	inc    esi
  409ca5:	pop    esi
  409ca6:	sbb    DWORD PTR [eax+0x70a2fea0],edi
  409cac:	popf   
  409cad:	mov    ds:0xa7aa518b,eax
  409cb2:	dec    edi
  409cb3:	test   eax,0x689dab34
  409cb8:	xor    eax,0x7dabf487
  409cbd:	std    
  409cbe:	mov    al,0x25
  409cc0:	(bad)  
  409cc1:	pop    esp
  409cc2:	dec    esi
  409cc3:	pusha  
  409cc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cc5:	sub    dh,BYTE PTR [ebp-0x38]
  409cc8:	mov    esp,0xf62e1cd6
  409ccd:	jnp    0x409c60
  409ccf:	inc    edi
  409cd0:	test   BYTE PTR [esi],ch
  409cd2:	sbb    BYTE PTR [eax],dl
  409cd4:	(bad)  
  409cd5:	fidivr DWORD PTR [ecx+ebp*4+0x2a]
  409cd9:	pop    ebp
  409cda:	add    DWORD PTR [eax+0x30553c7],0x352bf7e7
  409ce4:	pop    es
  409ce5:	pop    ebp
  409ce6:	ret    
  409ce7:	adc    ch,dl
  409ce9:	mov    edx,0x61aa0683
  409cee:	test   DWORD PTR [edx-0x3f],eax
  409cf1:	and    bl,BYTE PTR [edi-0x6b]
  409cf4:	jae    0x409cf7
  409cf6:	push   ebx
  409cf7:	dec    edi
  409cf8:	call   0x38f3:0x558224b8
  409cff:	xchg   esi,eax
  409d00:	jno    0x409cf5
  409d02:	xor    al,0x31
  409d04:	fdivr  st,st(7)
  409d06:	out    dx,eax
  409d07:	in     eax,0x4d
  409d09:	loop   0x409d49
  409d0b:	xor    DWORD PTR ds:0x1376909,0x823731b8
  409d15:	adc    ebx,DWORD PTR [edi-0x71]
  409d18:	nop
  409d19:	mov    ah,0xda
  409d1b:	add    al,0x30
  409d1d:	stc    
  409d1e:	jne    0x409d17
  409d20:	call   DWORD PTR [edi-0x1e]
  409d23:	push   di
  409d25:	sub    BYTE PTR [edx-0x3aa2ea29],0x2b
  409d2c:	in     eax,0x89
  409d2e:	sbb    DWORD PTR [edx],eax
  409d30:	jno    0x409cb3
  409d32:	adc    al,0x72
  409d34:	div    BYTE PTR ds:0x4b01a78a
  409d3a:	std    
  409d3b:	push   edx
  409d3c:	in     al,dx
  409d3d:	jp     0x409d7a
  409d3f:	ror    BYTE PTR [eax],0x32
  409d42:	(bad)  
  409d43:	fptan  
  409d45:	mov    ebp,0x16c491bb
  409d4a:	inc    ebp
  409d4b:	sbb    eax,0xb375d981
  409d50:	sbb    eax,0xff355985
  409d55:	dec    ebx
  409d56:	leave  
  409d57:	pop    ebp
  409d58:	jbe    0x409d34
  409d5a:	mov    al,ds:0x341fc39a
  409d5f:	push   0x5
  409d61:	and    BYTE PTR [esi+0x5d],0x64
  409d65:	adc    BYTE PTR [eax+0x0],dl
  409d68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d69:	sub    dl,cl
  409d6b:	imul   ebx,DWORD PTR [ecx+0x66a4dd1d],0x7005eb34
  409d75:	clc    
  409d76:	std    
  409d77:	ja     0x409d17
  409d79:	xchg   esp,eax
  409d7a:	sbb    ch,BYTE PTR [esi]
  409d7c:	(bad)  
  409d7d:	lock jmp 0x8069d20d
  409d83:	cmp    BYTE PTR fs:[ecx+0x4e],ah
  409d87:	sbb    al,0x44
  409d89:	inc    esp
  409d8a:	pop    edi
  409d8b:	das    
  409d8c:	nop
  409d8d:	sub    eax,DWORD PTR [edi]
  409d8f:	(bad)  
  409d90:	push   edi
  409d91:	inc    edx
  409d92:	jno    0x409d24
  409d94:	xor    DWORD PTR [ecx],ebx
  409d96:	push   esi
  409d97:	sbb    eax,0xfe00c9dc
  409d9c:	out    0x4d,eax
  409d9e:	xchg   esi,eax
  409d9f:	mov    ds:0xaf80f332,al
  409da4:	xor    al,0x48
  409da6:	dec    esi
  409da7:	fdiv   QWORD PTR [ebx+0x7ed02925]
  409dad:	cmp    eax,0x87d1b097
  409db2:	call   0x96b86af
  409db7:	or     edi,esp
  409db9:	hlt    
  409dba:	xor    edi,DWORD PTR [eax]
  409dbc:	arpl   WORD PTR [ebx],bp
  409dbe:	or     al,cl
  409dc0:	xchg   esi,eax
  409dc1:	dec    edx
  409dc2:	jb     0x409da5
  409dc4:	jmp    0x82c8:0x5e7fb8a7
  409dcb:	daa    
  409dcc:	retf   0xfe6f
  409dcf:	mov    bh,0x26
  409dd1:	sub    eax,0x6a8203df
  409dd6:	mov    BYTE PTR [ebp-0x307260c1],bl
  409ddc:	add    ebp,edx
  409dde:	xchg   edi,eax
  409ddf:	stos   DWORD PTR es:[edi],eax
  409de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409de1:	repz xor bl,dl
  409de4:	ret    
  409de5:	adc    DWORD PTR [ebp-0x76],edx
  409de8:	lahf   
  409de9:	out    0x66,eax
  409deb:	cs xor eax,ecx
  409dee:	lds    eax,FWORD PTR [eax]
  409df0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df1:	xchg   esp,eax
  409df2:	fdivr  st(4),st
  409df4:	add    eax,0x3b1e4d98
  409df9:	mov    ebx,0xadda1803
  409dfe:	inc    ecx
  409dff:	retf   0x5f41
  409e02:	cmp    al,0x20
  409e04:	mov    DWORD PTR [eax+eiz*4-0x33],edx
  409e08:	call   0x43a4bc56
  409e0d:	add    dh,BYTE PTR [ebx-0x628ede7a]
  409e13:	jns    0x409da5
  409e15:	mov    al,ds:0xc23cfa3c
  409e1a:	call   0x414a:0xb8e44803
  409e21:	sar    BYTE PTR [ebx],0xca
  409e24:	and    eax,0xffffffb1
  409e27:	xor    dh,0x82
  409e2a:	shr    DWORD PTR [esi+0x1a4e0fd0],1
  409e30:	rcl    BYTE PTR [ebp-0x4f],cl
  409e33:	ins    DWORD PTR es:[edi],dx
  409e34:	xchg   esi,eax
  409e35:	adc    BYTE PTR [esi-0x65841d29],0x3
  409e3c:	retf   
  409e3d:	xor    al,0x1
  409e3f:	fild   DWORD PTR [edx]
  409e41:	or     al,0xe2
  409e43:	cmp    DWORD PTR [edx-0xb939e28],edi
  409e49:	enter  0x6bd2,0xbc
  409e4d:	hlt    
  409e4e:	xor    bh,BYTE PTR [ebx]
  409e50:	shr    DWORD PTR [esi-0xe],cl
  409e53:	pop    es
  409e54:	push   ebx
  409e55:	pop    edx
  409e56:	mov    dl,0x3d
  409e58:	loope  0x409e98
  409e5a:	mov    bl,0x86
  409e5c:	dec    ebx
  409e5d:	mov    BYTE PTR [ebx],ah
  409e5f:	xchg   ecx,eax
  409e60:	mov    ds:0x789d3816,eax
  409e65:	mov    cl,cl
  409e67:	inc    edi
  409e68:	dec    ecx
  409e69:	scas   al,BYTE PTR es:[edi]
  409e6a:	pushf  
  409e6b:	dec    ecx
  409e6c:	adc    ch,BYTE PTR [esp+eax*1-0x2544b149]
  409e73:	inc    ecx
  409e74:	shr    DWORD PTR [edi],0x4
  409e77:	fstp   DWORD PTR [ecx-0x75689e7d]
  409e7d:	xchg   ebx,eax
  409e7e:	test   BYTE PTR [edi-0x27],0xaa
  409e82:	xchg   DWORD PTR [ecx],edi
  409e84:	adc    al,0x3
  409e86:	xor    al,BYTE PTR [edi-0x5673c4d6]
  409e8c:	jae    0x409e57
  409e8e:	out    dx,eax
  409e8f:	mov    edx,DWORD PTR [esi+0x67]
  409e92:	sub    al,0x13
  409e94:	ja     0x409eb1
  409e96:	lods   eax,DWORD PTR ds:[esi]
  409e97:	xchg   edi,eax
  409e98:	xor    edx,ebp
  409e9a:	push   ecx
  409e9b:	iret   
  409e9c:	(bad)  
  409e9d:	lea    edx,[esp+edi*1]
  409ea0:	xchg   esi,eax
  409ea1:	xor    dl,BYTE PTR [esi-0x13]
  409ea4:	inc    ecx
  409ea5:	adc    DWORD PTR [ebx],ecx
  409ea7:	mov    edi,0xf76d79f7
  409eac:	pop    edx
  409ead:	sar    BYTE PTR [ecx+edi*1+0x1965ee37],0x3e
  409eb5:	and    BYTE PTR [eax],0x95
  409eb8:	and    edi,DWORD PTR [ebx]
  409eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ebb:	xor    ebp,edx
  409ebd:	xchg   DWORD PTR [ebx*4-0x3439f37f],edi
  409ec4:	mov    al,ds:0xdd5c03af
  409ec9:	lods   al,BYTE PTR ds:[esi]
  409eca:	fcomi  st,st(4)
  409ecc:	mov    ds:0x3c5cc727,eax
  409ed1:	push   edx
  409ed2:	mov    esp,0x6f4f3478
  409ed7:	outs   dx,DWORD PTR ds:[esi]
  409ed8:	fwait
  409ed9:	add    al,BYTE PTR [esi+0x2fb673da]
  409edf:	push   ds
  409ee0:	test   eax,0xf3cfb3ca
  409ee5:	lock jl 0x409f1f
  409ee8:	push   0xaf023271
  409eed:	(bad)  
  409eee:	cmp    ch,BYTE PTR [ebx+0x49]
  409ef1:	cmp    eax,0x589972b9
  409ef6:	jbe    0x409f4a
  409ef8:	mov    cl,0x5
  409efa:	in     eax,0x84
  409efc:	sbb    esi,ecx
  409efe:	ror    BYTE PTR [ecx-0x28],0xc7
  409f02:	iret   
  409f03:	pop    esi
  409f04:	mov    esi,ebp
  409f06:	adc    al,0x46
  409f08:	ja     0x409f0c
  409f0a:	icebp  
  409f0b:	xchg   edx,eax
  409f0c:	sbb    eax,0x7c36587
  409f11:	test   BYTE PTR [edx],bh
  409f13:	out    dx,eax
  409f14:	call   0x7d06:0xb9204238
  409f1b:	mov    cl,0x42
  409f1d:	jl     0x409ebd
  409f1f:	sub    dh,BYTE PTR [edx-0x53b85a55]
  409f25:	test   BYTE PTR gs:[edx+0x6c],al
  409f29:	mov    esi,0x4fafabe5
  409f2e:	daa    
  409f2f:	shl    ch,cl
  409f31:	pop    ecx
  409f32:	outs   dx,BYTE PTR ds:[esi]
  409f33:	arpl   WORD PTR [edx-0x2e],si
  409f36:	jb     0x409f26
  409f38:	rol    BYTE PTR [esi+esi*1+0xc],1
  409f3c:	es pop edx
  409f3e:	inc    ecx
  409f3f:	fwait
  409f40:	aad    0x9f
  409f42:	scas   al,BYTE PTR es:[edi]
  409f43:	aas    
  409f44:	pop    esi
  409f45:	cmp    eax,0x740ed2d2
  409f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f4b:	arpl   WORD PTR cs:[edi+eax*1],bp
  409f4f:	ds test al,0x1e
  409f52:	shl    bl,0xc9
  409f55:	clc    
  409f56:	or     ebp,eax
  409f58:	or     DWORD PTR [esi+ebp*8-0x412a2774],edx
  409f5f:	in     eax,dx
  409f60:	test   al,0x62
  409f62:	inc    ecx
  409f63:	jl     0x409f2b
  409f65:	sub    BYTE PTR [ebx+0x7112b8ba],ch
  409f6b:	into   
  409f6c:	xchg   ecx,eax
  409f6d:	sub    BYTE PTR [esi+0x348fc3b7],cl
  409f73:	mov    WORD PTR [eax],?
  409f75:	mov    eax,ds:0xc24e51cf
  409f7a:	ret    
  409f7b:	adc    eax,DWORD PTR ds:[ebp-0x6767cfe1]
  409f82:	mov    ebx,0x9df4702
  409f87:	(bad)  
  409f88:	ins    BYTE PTR es:[edi],dx
  409f89:	jo     0x409faa
  409f8b:	inc    esp
  409f8c:	push   ss
  409f8d:	jbe    0x409f23
  409f8f:	fsubr  DWORD PTR [edi+0x41]
  409f92:	clc    
  409f93:	fild   WORD PTR [ecx-0x45]
  409f96:	int    0xaa
  409f98:	fmul   QWORD PTR [eax]
  409f9a:	clc    
  409f9b:	mov    eax,ds:0x418b5897
  409fa0:	xor    al,0x85
  409fa2:	or     al,0x59
  409fa4:	out    dx,al
  409fa5:	clc    
  409fa6:	inc    eax
  409fa7:	push   ds
  409fa8:	adc    ah,ah
  409faa:	push   ds
  409fab:	bound  esi,QWORD PTR [ecx+0x3f81116]
  409fb1:	xchg   esp,eax
  409fb2:	sub    BYTE PTR [edx+edx*2+0xfa76184],cl
  409fb9:	jecxz  0x409f8a
  409fbb:	and    esi,0x1fa95dd1
  409fc1:	xor    al,0x57
  409fc3:	mov    edx,0x1b502c83
  409fc8:	adc    ch,dh
  409fca:	xor    al,0xa7
  409fcc:	je     0x40a031
  409fce:	xchg   ebp,edi
  409fd0:	cli    
  409fd1:	pop    es
  409fd2:	adc    al,dh
  409fd4:	pop    ecx
  409fd5:	pop    ds
  409fd6:	into   
  409fd7:	xchg   ecx,eax
  409fd8:	call   0x7552:0x20e308e
  409fdf:	pop    eax
  409fe0:	add    al,BYTE PTR [esi+0x6a]
  409fe3:	xchg   DWORD PTR [esi-0x1e],ebx
  409fe6:	in     eax,dx
  409fe7:	mov    BYTE PTR [ebp-0x1578ef61],al
  409fed:	and    esp,eax
  409fef:	push   cs
  409ff0:	(bad)  
  409ff1:	ins    BYTE PTR es:[edi],dx
  409ff2:	adc    DWORD PTR ds:0xca984ba3,ecx
  409ff8:	and    ecx,DWORD PTR [esi+0x2e]
  409ffb:	mov    al,0x95
  409ffd:	(bad)  
  40a000:	sub    dh,BYTE PTR [edi+0x7b0811f5]
  40a006:	dec    eax
  40a007:	jns    0x409f8d
  40a009:	bound  esi,QWORD PTR [eax-0x4e]
  40a00c:	push   0xf89c2757
  40a011:	cmp    bl,ah
  40a013:	mov    eax,ds:0x185994a0
  40a018:	test   al,0x31
  40a01a:	sub    al,0x8d
  40a01c:	es int3 
  40a01e:	xor    BYTE PTR [ecx],dh
  40a020:	sub    al,0xd2
  40a022:	das    
  40a023:	jmp    0xe525802d
  40a028:	xor    eax,0x7d271138
  40a02d:	inc    esi
  40a02e:	clc    
  40a02f:	or     eax,0x217e09e
  40a034:	ficomp DWORD PTR [ebx+0x46e6087a]
  40a03a:	in     al,0xd9
  40a03c:	or     al,0x1e
  40a03e:	(bad)  
  40a03f:	or     dl,dl
  40a041:	rep stos DWORD PTR es:[edi],eax
  40a043:	xchg   edx,eax
  40a044:	adc    dh,BYTE PTR [edx-0x34]
  40a047:	mov    bh,0x83
  40a049:	push   es
  40a04a:	mov    ch,0x47
  40a04c:	repnz mov eax,0xd4bd66f7
  40a052:	enter  0x683d,0xd1
  40a056:	xor    ah,BYTE PTR [edi+0x3a]
  40a059:	inc    edi
  40a05a:	test   al,0x7
  40a05c:	js     0x40a097
  40a05e:	scas   al,BYTE PTR es:[edi]
  40a05f:	pop    ds
  40a060:	aas    
  40a061:	lahf   
  40a062:	gs cmp al,0x91
  40a065:	pusha  
  40a066:	sub    dl,cl
  40a068:	sub    esp,ecx
  40a06a:	inc    esi
  40a06b:	fmul   QWORD PTR [ebx+0xe]
  40a06e:	sbb    al,0xa9
  40a070:	pop    eax
  40a071:	and    eax,0xa6cfc968
  40a077:	mov    dh,0x20
  40a079:	leave  
  40a07a:	mov    edx,0xc9a3c71b
  40a07f:	mov    edi,0x6385dcc1
  40a084:	mov    ds:0x656e7dfb,eax
  40a089:	out    0x55,al
  40a08b:	nop
  40a08c:	js     0x40a0e6
  40a08e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a08f:	(bad)  
  40a090:	out    0x1e,al
  40a092:	les    ebp,FWORD PTR [ecx-0xc9042f0]
  40a098:	mov    al,ds:0x70be63f8
  40a09d:	or     al,0x0
  40a09f:	pop    edx
  40a0a0:	out    dx,al
  40a0a1:	push   es
  40a0a2:	inc    esi
  40a0a3:	xor    ch,BYTE PTR [edi+0x67bac48f]
  40a0a9:	std    
  40a0aa:	inc    esp
  40a0ab:	(bad)  
  40a0ac:	mov    ah,0x42
  40a0ae:	ss pop edi
  40a0b0:	lahf   
  40a0b1:	ret    
  40a0b2:	mov    eax,0xd766ad91
  40a0b7:	pop    ecx
  40a0b8:	mov    ch,0x75
  40a0ba:	pop    ebx
  40a0bb:	mov    ch,ch
  40a0bd:	into   
  40a0be:	sub    ah,BYTE PTR [esi+0x163186d7]
  40a0c4:	mov    DWORD PTR [eax-0x6bc08637],edi
  40a0ca:	cdq    
  40a0cb:	mov    dh,0xf5
  40a0cd:	or     eax,0x3887578b
  40a0d2:	scas   al,BYTE PTR es:[edi]
  40a0d3:	leave  
  40a0d4:	pop    eax
  40a0d5:	lds    esi,FWORD PTR [ebx]
  40a0d7:	jae    0x40a13a
  40a0d9:	ret    
  40a0da:	stos   DWORD PTR es:[edi],eax
  40a0db:	jmp    0x57322f2e
  40a0e0:	jbe    0x40a0b2
  40a0e2:	arpl   WORD PTR [ebx],dx
  40a0e4:	xchg   ecx,eax
  40a0e5:	loop   0x40a101
  40a0e7:	mov    bh,0xec
  40a0e9:	dec    ecx
  40a0ea:	push   0xffffffef
  40a0ec:	dec    edx
  40a0ed:	shr    BYTE PTR [ebx-0x30],1
  40a0f0:	lea    esi,[ecx+0x104d7ad0]
  40a0f6:	xor    dl,bh
  40a0f8:	and    BYTE PTR [ebp+0x1e298c8f],ah
  40a0fe:	mov    eax,0x311fb8f6
  40a103:	push   edi
  40a104:	xchg   edi,eax
  40a105:	(bad)  
  40a106:	mov    eax,0x8d468717
  40a10b:	pop    ss
  40a10c:	xchg   esi,eax
  40a10d:	rol    esi,0x24
  40a110:	stos   BYTE PTR es:[edi],al
  40a111:	xchg   edx,eax
  40a112:	sbb    al,0x70
  40a114:	arpl   WORD PTR [ecx-0x6b],di
  40a117:	clc    
  40a118:	add    eax,edx
  40a11a:	dec    eax
  40a11b:	sub    eax,0x4cec7024
  40a120:	pop    ebp
  40a121:	addr16 dec ecx
  40a123:	dec    edi
  40a124:	ins    DWORD PTR es:[edi],dx
  40a125:	dec    ebp
  40a126:	mov    DWORD PTR [edi+0x1d],esi
  40a129:	pop    ecx
  40a12a:	xor    DWORD PTR [ebp+edi*8-0x3f159aef],0xdbbffd62
  40a135:	jl     0x40a0c4
  40a137:	mov    al,ds:0x4d35ed5
  40a13c:	cmp    cl,0x7
  40a13f:	(bad)  
  40a140:	into   
  40a141:	xor    eax,0x5e14efce
  40a146:	lds    eax,FWORD PTR ss:[ecx+0x21]
  40a14a:	mov    BYTE PTR [edi-0x31],ch
  40a14d:	jbe    0x40a178
  40a14f:	push   edi
  40a150:	adc    dl,0xee
  40a153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a154:	mov    ebp,0x4c4db340
  40a159:	push   esp
  40a15a:	adc    dh,BYTE PTR [ecx]
  40a15c:	xchg   ebp,eax
  40a15d:	in     al,0x1
  40a15f:	std    
  40a160:	xchg   edi,eax
  40a161:	inc    ebp
  40a162:	mov    bh,0x67
  40a164:	outs   dx,DWORD PTR ds:[esi]
  40a165:	repz mov ebp,0xe4d40e74
  40a16b:	sub    eax,0x5b636ddf
  40a170:	(bad)  
  40a171:	les    edx,FWORD PTR [ebp-0x5ad16312]
  40a177:	add    BYTE PTR [ebx+0x2aafaac0],cl
  40a17d:	and    eax,0xbdb1b3c
  40a182:	outs   dx,DWORD PTR ds:[esi]
  40a183:	pop    es
  40a184:	lahf   
  40a185:	pop    ebp
  40a186:	and    eax,0x76d341e1
  40a18b:	mov    ecx,0x7c4d5af8
  40a190:	ret    
  40a191:	mov    edx,esi
  40a193:	addr16 push esi
  40a195:	enter  0xa45b,0x26
  40a199:	bound  esp,QWORD PTR ss:[ebx+ebp*4]
  40a19d:	dec    ecx
  40a19e:	ror    DWORD PTR [eax+0x7],1
  40a1a1:	in     al,dx
  40a1a2:	(bad)  
  40a1a3:	or     DWORD PTR [bx+si-0x291],edi
  40a1a8:	xchg   BYTE PTR [eax-0x5e941e63],dl
  40a1ae:	pcmpeqb mm1,QWORD PTR [ecx]
  40a1b1:	iret   
  40a1b2:	clc    
  40a1b3:	inc    edi
  40a1b4:	sbb    cl,BYTE PTR [ecx-0x2676cc12]
  40a1ba:	add    eax,0x4348a116
  40a1bf:	lods   al,BYTE PTR ds:[esi]
  40a1c0:	mov    esi,DWORD PTR [eax]
  40a1c2:	fdivrp st(2),st
  40a1c4:	xchg   BYTE PTR [esp+esi*1+0x2617b5c3],cl
  40a1cb:	cwde   
  40a1cc:	sub    al,0xb0
  40a1ce:	push   edx
  40a1cf:	mov    al,0xbe
  40a1d1:	or     bl,ch
  40a1d3:	jge    0x40a1f1
  40a1d5:	in     al,0xed
  40a1d7:	enter  0x9973,0xe7
  40a1db:	pop    ss
  40a1dc:	push   edi
  40a1dd:	std    
  40a1de:	aam    0x51
  40a1e0:	shl    dh,1
  40a1e2:	aas    
  40a1e3:	sti    
  40a1e4:	xor    BYTE PTR ds:0xc7d21af3,al
  40a1ea:	sahf   
  40a1eb:	idiv   BYTE PTR [ecx+0x4d]
  40a1ee:	cmp    BYTE PTR [edx+0x384948bd],bl
  40a1f4:	rcl    cl,0xe0
  40a1f7:	sbb    DWORD PTR ds:0x72b09542,ebx
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	mov    dl,0x20
  40a5ea:	sub    esi,DWORD PTR [edi+eiz*1+0x77c7c06]
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	jecxz  0x40a590
  40a5f6:	pop    edx
  40a5f7:	xchg   esi,eax
  40a5f8:	dec    edx
  40a5f9:	out    dx,al
  40a5fa:	std    
  40a5fb:	dec    ecx
  40a5fc:	mov    al,al
  40a5fe:	int    0x83
  40a600:	xchg   BYTE PTR [esi],al
  40a602:	inc    ebp
  40a603:	leave  
  40a604:	push   es
  40a605:	adc    DWORD PTR [esi+0x1620e7c1],edx
  40a60b:	fmul   DWORD PTR [esi-0x4199d4c7]
  40a611:	dec    ebp
  40a612:	(bad)  
  40a613:	jmp    0x40a626
  40a615:	adc    ah,al
  40a617:	mov    ecx,0x1fabbbf0
  40a61c:	mov    edi,0xd5549e9c
  40a621:	pop    es
  40a622:	jmp    0x40a624
  40a624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a625:	mov    ds:0xb4ca17d5,al
  40a62a:	jae    0x40a61c
  40a62c:	test   DWORD PTR ds:0xbb12ea78,ebp
  40a632:	in     al,0xfe
  40a634:	dec    esi
  40a635:	test   al,0xc3
  40a637:	xor    DWORD PTR [ecx],edx
  40a639:	and    BYTE PTR [edx-0x6e],0xbb
  40a63d:	fimul  DWORD PTR [edi]
  40a63f:	pop    esi
  40a640:	cmc    
  40a641:	jb     0x40a629
  40a643:	mov    ds:0x84ff0c90,eax
  40a648:	adc    ebp,DWORD PTR ds:0x1dd21383
  40a64e:	pop    ebp
  40a64f:	xor    esi,DWORD PTR [edi]
  40a651:	cli    
  40a652:	(bad)  
  40a653:	int    0xb
  40a655:	(bad)  
  40a656:	pusha  
  40a657:	ss fadd st(1),st
  40a65a:	in     al,0xff
  40a65c:	sub    esp,DWORD PTR [edi]
  40a65e:	mov    ecx,0xbcef15f9
  40a663:	and    ebx,DWORD PTR [edx]
  40a665:	xor    dl,BYTE PTR [edx+0x6739c22c]
  40a66b:	xor    edx,edi
  40a66d:	push   ss
  40a66e:	xor    esp,esp
  40a670:	ss ins DWORD PTR es:[edi],dx
  40a672:	loopne 0x40a6a9
  40a674:	or     BYTE PTR [esi+0xfab7d94],0x4f
  40a67b:	fdiv   DWORD PTR es:[esi-0x5f0099ec]
  40a682:	lods   eax,DWORD PTR ds:[esi]
  40a683:	rol    DWORD PTR [bp+si],cl
  40a686:	fiadd  WORD PTR [edi+0x71565fb7]
  40a68c:	out    0x82,eax
  40a68e:	adc    ah,BYTE PTR [edx-0x1f]
  40a691:	xor    ch,BYTE PTR [edi-0x54]
  40a694:	mov    ch,0x44
  40a696:	mov    ecx,0xbbf41c05
  40a69b:	mov    BYTE PTR [ecx],bl
  40a69d:	fwait
  40a69e:	daa    
  40a69f:	stos   BYTE PTR es:[edi],al
  40a6a0:	cld    
  40a6a1:	jmp    0x4a1c:0xb6406ff2
  40a6a8:	in     al,dx
  40a6a9:	xchg   ebp,eax
  40a6aa:	loope  0x40a688
  40a6ac:	neg    dh
  40a6ae:	mov    al,ds:0xad94d37a
  40a6b3:	pop    esi
  40a6b4:	mov    WORD PTR [edx-0x73],?
  40a6b7:	js     0x40a6fe
  40a6b9:	sbb    al,0xf1
  40a6bb:	adc    BYTE PTR [esi-0x1d],cl
  40a6be:	(bad)  [ebp+edx*2+0x3d]
  40a6c2:	ret    0xe2e7
  40a6c5:	lds    esi,FWORD PTR [esi-0x15]
  40a6c8:	and    BYTE PTR [ebp-0x4f5e92f2],ah
  40a6ce:	push   ds
  40a6cf:	xor    BYTE PTR [edi-0x56],cl
  40a6d2:	add    ah,0xed
  40a6d5:	popa   
  40a6d6:	hlt    
  40a6d7:	add    ebp,esi
  40a6d9:	mov    esp,0xa15d2877
  40a6de:	jge    0x40a696
  40a6e0:	mov    eax,0xea591368
  40a6e5:	clc    
  40a6e6:	sti    
  40a6e7:	sbb    BYTE PTR [edx-0x4d],0x52
  40a6eb:	mov    al,ds:0x8363fb3f
  40a6f0:	pop    ebp
  40a6f1:	xchg   ebp,eax
  40a6f2:	jnp    0x40a71b
  40a6f4:	mov    cl,0xfd
  40a6f6:	scas   eax,DWORD PTR es:[edi]
  40a6f7:	fucomi st,st(1)
  40a6f9:	xor    ecx,DWORD PTR [ecx]
  40a6fb:	stos   BYTE PTR es:[edi],al
  40a6fc:	push   ss
  40a6fd:	mov    ebx,0x3b2b2fe9
  40a702:	mov    edx,0x11548577
  40a707:	ins    BYTE PTR es:[edi],dx
  40a708:	mov    esp,0x10bb0516
  40a70d:	inc    edx
  40a70e:	push   cs
  40a70f:	inc    esp
  40a710:	(bad)  
  40a711:	test   eax,0x39ba7254
  40a716:	sbb    DWORD PTR [edx+0xd],eax
  40a719:	or     eax,0x712273c4
  40a71e:	xchg   esp,eax
  40a71f:	repz repz inc eax
  40a722:	sbb    eax,ecx
  40a724:	xor    al,0xf0
  40a726:	enter  0xd5c0,0x18
  40a72a:	(bad)  
  40a72b:	sahf   
  40a72c:	popf   
  40a72d:	push   0x69
  40a72f:	xchg   edx,eax
  40a730:	call   DWORD PTR [ebp+0x1a]
  40a733:	lea    esi,[esp+ebp*8]
  40a736:	inc    edi
  40a737:	in     eax,dx
  40a738:	test   eax,0xc0c9fbba
  40a73d:	jnp    0x40a6c5
  40a73f:	loope  0x40a752
  40a741:	ja     0xd2c9ee0d
  40a747:	pop    eax
  40a748:	daa    
  40a749:	scas   eax,DWORD PTR es:[edi]
  40a74a:	ins    DWORD PTR es:[edi],dx
  40a74b:	gs mov cl,0xd9
  40a74e:	push   esp
  40a74f:	push   ebx
  40a750:	mov    al,ds:0x96960112
  40a755:	es pop edi
  40a757:	jb     0x40a7cf
  40a759:	ficom  DWORD PTR [esi]
  40a75b:	imul   ebp,edx,0x2c4f0b90
  40a761:	repz pop ecx
  40a763:	xchg   edi,eax
  40a764:	adc    ebx,DWORD PTR ds:0xad85e559
  40a76a:	ror    DWORD PTR [esi+0x76a40b43],1
  40a770:	cmp    DWORD PTR [eax-0x66245f5b],ecx
  40a776:	cwde   
  40a777:	mov    ecx,0x975da639
  40a77c:	je     0x40a75f
  40a77e:	push   esi
  40a77f:	inc    esp
  40a780:	sti    
  40a781:	adc    eax,0x4407ce20
  40a786:	xor    al,0x50
  40a788:	pop    eax
  40a789:	and    BYTE PTR [edi+0x5f9c58ac],dh
  40a78f:	test   BYTE PTR [eax+0x7202c15c],bh
  40a795:	lahf   
  40a796:	stos   BYTE PTR es:[edi],al
  40a797:	jg     0x40a7f9
  40a799:	xlat   BYTE PTR ds:[ebx]
  40a79a:	inc    edx
  40a79b:	shl    BYTE PTR [edx],0xf6
  40a79e:	daa    
  40a79f:	mov    WORD PTR [edi],?
  40a7a1:	mov    ecx,0x68a89efc
  40a7a6:	std    
  40a7a7:	(bad)  
  40a7a8:	adc    esp,ebx
  40a7aa:	dec    edi
  40a7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ac:	mov    bl,0x9c
  40a7ae:	in     al,dx
  40a7af:	lds    ebp,FWORD PTR [ecx-0x3a8eb7d8]
  40a7b5:	fsubr  st(3),st
  40a7b7:	ror    BYTE PTR [edi],1
  40a7b9:	fdiv   QWORD PTR [ebx]
  40a7bb:	or     DWORD PTR [ebp+0x2a],ebx
  40a7be:	xrelease mov DWORD PTR [ebp+0x6c8813b1],ecx
  40a7c5:	sbb    dl,al
  40a7c7:	loope  0x40a7e4
  40a7c9:	push   cs
  40a7ca:	xor    dh,ch
  40a7cc:	cli    
  40a7cd:	push   0xf3364b2a
  40a7d2:	cdq    
  40a7d3:	dec    edi
  40a7d4:	iret   
  40a7d5:	push   ecx
  40a7d6:	push   0xffffffaf
  40a7d8:	rcr    DWORD PTR [ebx],0xdf
  40a7db:	and    DWORD PTR [edi-0x42],ebp
  40a7de:	cmp    DWORD PTR [eax-0x58f16f4b],esi
  40a7e4:	xchg   esp,eax
  40a7e5:	mov    ?,WORD PTR [ebx+eax*8+0x6d46dc4c]
  40a7ec:	pop    DWORD PTR [ebx-0x2132045c]
  40a7f2:	loopne 0x40a80a
  40a7f4:	leave  
  40a7f5:	ror    DWORD PTR [edi-0x66136a92],cl
  40a7fb:	xor    BYTE PTR [ebp+0x21b5efba],cl
  40a801:	not    esi
  40a803:	inc    ebx
  40a804:	jg     0x40a85b
  40a806:	int3   
  40a807:	inc    edx
  40a808:	jae    0x40a795
  40a80a:	xor    eax,0x8fb0d8c0
  40a80f:	retf   0xc721
  40a812:	or     al,0xe7
  40a814:	mov    eax,ds:0xc7fa856c
  40a819:	or     DWORD PTR [edx+0x9],ebp
  40a81c:	add    al,0xcb
  40a81e:	xor    ebp,DWORD PTR [ebx-0x1a6f8c8b]
  40a824:	mov    WORD PTR cs:0xaff5a0f,cs
  40a82b:	fwait
  40a82c:	arpl   WORD PTR [ecx+0x7183be4f],sp
  40a832:	cmp    DWORD PTR [edi],ebx
  40a834:	add    al,0x8b
  40a836:	push   edi
  40a837:	or     eax,0xbb230c2c
  40a83c:	or     BYTE PTR [ebx],ah
  40a83e:	xchg   edx,eax
  40a83f:	dec    edi
  40a840:	xlat   BYTE PTR ds:[ebx]
  40a841:	iret   
  40a842:	out    dx,al
  40a843:	xchg   BYTE PTR [edx-0xf],bh
  40a846:	fldcw  WORD PTR [esi+ebp*4+0x77acd162]
  40a84d:	sbb    edx,esp
  40a84f:	jb     0x40a82f
  40a851:	fidiv  DWORD PTR [esi+edi*2]
  40a854:	push   eax
  40a855:	fidiv  DWORD PTR [ebx]
  40a857:	xchg   ecx,eax
  40a859:	pusha  
  40a85a:	imul   esi,DWORD PTR [ebp+0x3d07c614],0x6ca3f592
  40a864:	inc    eax
  40a865:	jns    0x40a876
  40a867:	mov    ebx,ebp
  40a869:	jle    0x40a8e1
  40a86b:	push   edx
  40a86c:	adc    DWORD PTR [eax+0x19],edi
  40a86f:	sti    
  40a870:	dec    ecx
  40a872:	pop    ss
  40a873:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a874:	dec    ebx
  40a875:	cmp    al,0x3a
  40a877:	cmp    eax,0x905ad7d5
  40a87c:	stos   DWORD PTR es:[edi],eax
  40a87d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a880:	into   
  40a881:	add    DWORD PTR [ebx-0x31e2bdce],eax
  40a887:	data16 mov al,al
  40a88a:	fld    DWORD PTR [edi+0x4edc5521]
  40a890:	xor    eax,0x66987b5
  40a895:	in     al,dx
  40a896:	js     0x40a876
  40a898:	pop    edi
  40a899:	add    al,0xc6
  40a89b:	sbb    al,0x39
  40a89d:	inc    edx
  40a89e:	inc    ebx
  40a89f:	ret    
  40a8a0:	and    eax,0x8d9228b2
  40a8a5:	cmp    al,0xd4
  40a8a7:	aam    0x4b
  40a8a9:	popf   
  40a8aa:	arpl   WORD PTR [ebx+0x82b7a09],dx
  40a8b0:	xor    al,0xaf
  40a8b2:	and    al,dl
  40a8b4:	and    al,0x7a
  40a8b6:	dec    eax
  40a8b7:	int    0xad
  40a8b9:	or     eax,0xf5f19fcc
  40a8be:	and    al,0x90
  40a8c0:	stos   BYTE PTR es:[edi],al
  40a8c1:	and    DWORD PTR [eax-0x292092f5],0x70
  40a8c8:	in     eax,dx
  40a8c9:	nop
  40a8ca:	mov    al,ds:0x89ba2778
  40a8cf:	jmp    0x36af:0x5508c4d6
  40a8d6:	or     DWORD PTR [edx],esi
  40a8d8:	and    DWORD PTR [ebx+esi*1+0x3b115478],esp
  40a8df:	push   esp
  40a8e0:	add    DWORD PTR [ebp-0x2e4329de],esi
  40a8e6:	(bad)  
  40a8e7:	int3   
  40a8e8:	test   DWORD PTR [esi],eax
  40a8ea:	es loope 0x40a915
  40a8ed:	xor    al,0xb5
  40a8ef:	call   0x5fcb1734
  40a8f4:	xor    al,BYTE PTR [ebx+ecx*8-0x52c87029]
  40a8fb:	jnp    0x40a959
  40a8fd:	mov    edx,0x3cddd4e
  40a902:	xchg   ecx,eax
  40a903:	gs stos DWORD PTR es:[edi],eax
  40a905:	add    al,0x1d
  40a907:	inc    edx
  40a908:	je     0x40a922
  40a90a:	and    ah,BYTE PTR ss:[esi+0x66]
  40a90e:	aam    0xdb
  40a910:	hlt    
  40a911:	(bad)  
  40a913:	int    0x95
  40a915:	inc    esi
  40a916:	jno    0x40a8c6
  40a918:	inc    ebx
  40a919:	sti    
  40a91a:	pop    esi
  40a91b:	rol    DWORD PTR [eax+0x1f],1
  40a91e:	and    DWORD PTR [esi],ecx
  40a920:	iret   
  40a921:	sbb    ebp,DWORD PTR [edi+esi*2+0x4d]
  40a925:	and    eax,0x1245cba8
  40a92a:	enter  0x88be,0x22
  40a92e:	stos   BYTE PTR es:[edi],al
  40a92f:	dec    esp
  40a930:	sub    ch,dh
  40a932:	lea    edi,[esi-0x7e]
  40a935:	fistp  WORD PTR [edx+0x77]
  40a938:	jbe    0x40a94a
  40a93a:	cmc    
  40a93b:	push   ss
  40a93c:	test   al,0xd9
  40a93e:	jge    0x40a976
  40a940:	sbb    ch,BYTE PTR [esi-0x7b]
  40a943:	int3   
  40a944:	jb     0x40a90b
  40a946:	mov    dl,0x48
  40a948:	jle    0x40a923
  40a94a:	cmp    edi,eax
  40a94c:	repnz daa 
  40a94e:	add    esi,DWORD PTR [esi+0x58092513]
  40a954:	test   al,0x48
  40a956:	xor    eax,0x328f2c39
  40a95b:	loope  0x40a986
  40a95d:	sti    
  40a95e:	mov    bh,0x8a
  40a960:	in     eax,0xdd
  40a962:	push   edi
  40a963:	xlat   BYTE PTR ds:[ebx]
  40a964:	outs   dx,DWORD PTR ds:[esi]
  40a965:	or     BYTE PTR [ecx],cl
  40a967:	stc    
  40a968:	pusha  
  40a969:	in     eax,dx
  40a96a:	inc    ebx
  40a96b:	mov    ecx,0xeee049a1
  40a970:	pushf  
  40a971:	xor    bl,BYTE PTR [edx-0x2fbd095c]
  40a977:	jl     0x40a9a7
  40a979:	add    edx,DWORD PTR [ebx+0x62]
  40a97c:	xchg   edx,eax
  40a97d:	or     dh,BYTE PTR [ebp+ebx*4+0x4b]
  40a981:	std    
  40a982:	mov    BYTE PTR [ebx-0x510b2663],dl
  40a988:	inc    edi
  40a989:	mov    ds:0x5e9568f2,eax
  40a98e:	enter  0x8e15,0x3b
  40a992:	adc    DWORD PTR [edx-0x11],0xffffff9d
  40a996:	mov    dh,dh
  40a998:	mov    cl,0xce
  40a99a:	stos   BYTE PTR es:[edi],al
  40a99b:	lahf   
  40a99c:	push   ss
  40a99d:	mov    eax,0x19f8d672
  40a9a2:	int    0xca
  40a9a4:	imul   eax,DWORD PTR [ebx+0x7752b388],0xb9cddbb6
  40a9ae:	pop    esp
  40a9af:	popa   
  40a9b0:	inc    eax
  40a9b1:	mov    ah,0xd
  40a9b3:	retf   
  40a9b4:	lock push edx
  40a9b6:	in     eax,dx
  40a9b7:	fisttp QWORD PTR [edi]
  40a9b9:	fnstcw WORD PTR [edi]
  40a9bb:	add    DWORD PTR [eax+0x33d22f0a],edi
  40a9c1:	cli    
  40a9c2:	adc    ebx,DWORD PTR [esi+0x7eb00880]
  40a9c8:	popf   
  40a9c9:	test   al,0xfa
  40a9cb:	push   0xeaaae530
  40a9d0:	lods   eax,DWORD PTR ds:[esi]
  40a9d1:	mov    ch,ah
  40a9d3:	ja     0x40aa40
  40a9d5:	inc    ebx
  40a9d6:	mov    al,0x2c
  40a9d8:	push   esp
  40a9d9:	fild   DWORD PTR [edx-0x1]
  40a9dc:	dec    ebx
  40a9dd:	mov    bl,ch
  40a9df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9e0:	out    dx,eax
  40a9e1:	xor    al,0xf5
  40a9e3:	repz faddp st(6),st
  40a9e6:	fimul  WORD PTR fs:[edi-0x7dac7f46]
  40a9ed:	xchg   DWORD PTR [edi+0x662ab1ec],edi
  40a9f3:	add    eax,esp
  40a9f5:	int3   
  40a9f6:	jl     0x40a9f1
  40a9f8:	sbb    al,0xf1
  40a9fa:	adc    DWORD PTR [edx-0x22],ebx
  40a9fd:	loop   0x40aa1e
  40a9ff:	fld    DWORD PTR [esp+ebx*1+0x65]
  40aa03:	xchg   ebx,eax
  40aa04:	pop    eax
  40aa05:	sbb    ch,0x4
  40aa08:	aas    
  40aa09:	mov    ebx,ecx
  40aa0b:	push   edx
  40aa0c:	pop    ecx
  40aa0d:	retf   
  40aa0e:	xor    BYTE PTR [ebx],al
  40aa10:	sub    bh,BYTE PTR [edx-0x32]
  40aa13:	rol    DWORD PTR [esp+eax*8],1
  40aa16:	xchg   BYTE PTR [edx-0x36e65bc5],ch
  40aa1c:	pusha  
  40aa1d:	stos   DWORD PTR es:[edi],eax
  40aa1e:	bound  ebx,QWORD PTR [edx]
  40aa20:	cmp    BYTE PTR [ebx-0x611efbbf],ah
  40aa26:	or     DWORD PTR [ecx+0x2862a268],ecx
  40aa2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa2d:	pusha  
  40aa2e:	call   0x17e8:0x6924d2c9
  40aa35:	dec    edx
  40aa36:	(bad)  
  40aa37:	dec    eax
  40aa38:	cmp    BYTE PTR [edi-0x34],bh
  40aa3b:	mov    ah,0x5c
  40aa3d:	outs   dx,BYTE PTR ds:[esi]
  40aa3e:	pop    ebx
  40aa3f:	in     eax,0xd
  40aa41:	jo     0x40aa0c
  40aa43:	inc    edx
  40aa44:	cmc    
  40aa45:	mov    ds:0x2b10b43a,eax
  40aa4a:	sub    BYTE PTR [esi],cl
  40aa4c:	inc    esi
  40aa4d:	jmp    0x40aaca
  40aa4f:	sbb    DWORD PTR [esi],0x21
  40aa52:	push   cs
  40aa53:	sub    dh,BYTE PTR [edx+0x73]
  40aa56:	sub    DWORD PTR [esi],eax
  40aa58:	pop    eax
  40aa59:	mov    bl,0x8f
  40aa5b:	pop    eax
  40aa5c:	scas   eax,DWORD PTR es:[edi]
  40aa5d:	sub    al,BYTE PTR [ebx+ecx*2+0x2]
  40aa61:	adc    cl,BYTE PTR [esi-0x12]
  40aa64:	jno    0x40a9e9
  40aa66:	lock mov ebp,0xc7568f22
  40aa6c:	hlt    
  40aa6d:	cmc    
  40aa6e:	pop    es
  40aa6f:	pop    esi
  40aa70:	mov    ds:0xdd1f455e,eax
  40aa75:	mov    dh,0x97
  40aa77:	shl    DWORD PTR [edi+0x6f],1
  40aa7a:	pusha  
  40aa7b:	hlt    
  40aa7c:	out    dx,al
  40aa7d:	mov    al,ds:0x8e9ccb4e
  40aa82:	lds    ecx,FWORD PTR [edi+0x13]
  40aa85:	jmp    0x7f97:0x92aa2ea7
  40aa8c:	mov    edx,DWORD PTR [ebp+0x24442203]
  40aa92:	jmp    0x7f273585
  40aa97:	or     BYTE PTR [edx+edx*2],al
  40aa9a:	sbb    BYTE PTR [edx-0x6],dl
  40aa9d:	or     eax,0x7e294558
  40aaa2:	pop    edi
  40aaa3:	out    dx,al
  40aaa4:	stos   DWORD PTR es:[edi],eax
  40aaa5:	pop    esi
  40aaa6:	push   0xffffffc0
  40aaa8:	cmp    al,0x39
  40aaaa:	cmp    BYTE PTR [edx+0xc27ee9e],0xe3
  40aab1:	cmp    cl,BYTE PTR [ebx-0x1d]
  40aab4:	and    BYTE PTR [ebp+0x19],ah
  40aab7:	jmp    0x90713a5
  40aabc:	xor    DWORD PTR [ebp+0x1187095f],ebx
  40aac2:	sbb    eax,0xa2505989
  40aac7:	mov    WORD PTR [edx+0x364e9023],cs
  40aacd:	daa    
  40aace:	sub    al,0x46
  40aad0:	enter  0x22b5,0xa9
  40aad4:	leave  
  40aad5:	xor    al,BYTE PTR [ecx+0x5e0313fb]
  40aadb:	xor    al,0xae
  40aadd:	call   0x52bc53e6
  40aae2:	cmp    edi,esp
  40aae4:	cmp    BYTE PTR [edi],ah
  40aae6:	sbb    dh,BYTE PTR [ebx-0x5fcabb1f]
  40aaec:	xor    ch,dl
  40aaee:	mov    bh,0x21
  40aaf0:	ret    
  40aaf1:	es push ecx
  40aaf3:	jmp    0x40aaca
  40aaf5:	sar    esi,0xdb
  40aaf8:	out    0x67,eax
  40aafa:	sbb    DWORD PTR [edx+0x46],0xa5ed332a
  40ab01:	add    ah,BYTE PTR [edi+0x73]
  40ab04:	adc    DWORD PTR [ebp-0x4374cf56],0x4c
  40ab0b:	push   ds
  40ab0c:	mov    dl,0x2d
  40ab0e:	pop    es
  40ab0f:	dec    eax
  40ab10:	cdq    
  40ab11:	shl    DWORD PTR [edx+0x30],cl
  40ab14:	dec    ecx
  40ab15:	and    BYTE PTR [edi],ah
  40ab17:	add    eax,0xae5eb874
  40ab1c:	mov    edx,0xf3f79a08
  40ab21:	or     esi,DWORD PTR [ecx-0x60]
  40ab24:	sbb    ecx,DWORD PTR [ecx]
  40ab26:	adc    BYTE PTR [edx],0xd1
  40ab29:	test   BYTE PTR [edi+0x10f0c2f4],al
  40ab2f:	fwait
  40ab30:	push   esi
  40ab31:	aaa    
  40ab32:	jb     0x40abaa
  40ab34:	sahf   
  40ab35:	add    al,0x3
  40ab37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab38:	push   ebx
  40ab39:	mov    BYTE PTR [ebx],ch
  40ab3b:	push   edx
  40ab3c:	cmp    DWORD PTR [edx-0x4f],edx
  40ab3f:	sub    BYTE PTR [ebx+ebp*8+0xd7dcc8e],bh
  40ab46:	scas   al,BYTE PTR es:[edi]
  40ab47:	adc    al,0xf0
  40ab49:	or     BYTE PTR [edi+0x66e5ceac],0x13
  40ab50:	xchg   BYTE PTR [esi+0x32250e47],dh
  40ab56:	stos   BYTE PTR es:[edi],al
  40ab57:	sub    al,0xce
  40ab59:	xchg   edi,eax
  40ab5a:	sbb    eax,0xbea23d5d
  40ab5f:	and    cl,cl
  40ab61:	push   eax
  40ab62:	aam    0xdf
  40ab64:	pop    ss
  40ab65:	outs   dx,DWORD PTR ds:[esi]
  40ab66:	lds    esp,FWORD PTR [esp+ebp*1-0x29]
  40ab6a:	push   0x60
  40ab6c:	jno    0x40abb3
  40ab6e:	(bad)  
  40ab6f:	cmc    
  40ab70:	ret    
  40ab71:	mov    bh,0x15
  40ab73:	fsubp  st(5),st
  40ab75:	jb     0x40ab30
  40ab77:	inc    ebp
  40ab78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab79:	ss mov ch,0xa7
  40ab7c:	xor    al,BYTE PTR gs:[edi+0x5c72519c]
  40ab83:	ins    DWORD PTR es:[edi],dx
  40ab84:	popa   
  40ab85:	xor    al,0xf7
  40ab87:	fldenv [esi]
  40ab89:	fwait
  40ab8a:	shr    eax,0x7e
  40ab8d:	and    DWORD PTR [eax+0x25],edx
  40ab90:	arpl   WORD PTR [edx-0x64dc750a],bp
  40ab96:	dec    ebx
  40ab97:	sub    eax,DWORD PTR [ebp-0x4c468aae]
  40ab9d:	inc    ebp
  40ab9e:	popf   
  40ab9f:	mov    ecx,DWORD PTR [esi+0x3b]
  40aba2:	xor    BYTE PTR [edx-0x14a0086c],dh
  40aba8:	clc    
  40aba9:	retf   
  40abaa:	(bad)  
  40abab:	fdivr  QWORD PTR ds:0xafa2e8a4
  40abb1:	jl     0x40ac24
  40abb3:	call   0xdc1b:0x152ad18f
  40abba:	push   esp
  40abbc:	sub    cl,BYTE PTR [ecx-0x28]
  40abbf:	or     BYTE PTR [ecx],dl
  40abc1:	hlt    
  40abc2:	or     bh,0x3e
  40abc5:	push   eax
  40abc6:	push   ebp
  40abc7:	xor    edi,DWORD PTR [eax+0x436a153a]
  40abcd:	pop    es
  40abce:	push   0x77
  40abd0:	xchg   BYTE PTR [edx-0x73],al
  40abd3:	in     al,dx
  40abd4:	xor    al,0x10
  40abd6:	xchg   ecx,eax
  40abd7:	jecxz  0x40ac3e
  40abd9:	or     BYTE PTR [edx+ecx*8+0x7c5638a9],dl
  40abe0:	inc    edx
  40abe1:	mov    esp,0x6aaf4014
  40abe6:	xadd   bl,ah
  40abe9:	mov    ch,0xc2
  40abeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abec:	aad    0xfd
  40abee:	or     bh,BYTE PTR [ecx-0x63]
  40abf1:	jmp    0xbee3:0xed733003
  40abf8:	shl    BYTE PTR [esi-0x504f0c59],cl
  40abfe:	sub    al,0x8d
  40ac00:	into   
  40ac01:	loope  0x40ac17
  40ac03:	std    
  40ac04:	lahf   
  40ac05:	pop    esi
  40ac06:	test   al,bh
  40ac08:	in     eax,dx
  40ac09:	call   0x85153125
  40ac0e:	inc    eax
  40ac0f:	repz sahf 
  40ac11:	adc    al,0xd6
  40ac13:	inc    esi
  40ac14:	mov    ch,0x77
  40ac16:	add    DWORD PTR [esi+eax*2],0x28
  40ac1a:	jmp    0x9c56:0xe1f00d23
  40ac21:	test   cl,0xc4
  40ac24:	je     0x40ac9c
  40ac26:	mov    edx,0x75f8d862
  40ac2b:	mov    dl,0x67
  40ac2d:	dec    BYTE PTR [eax]
  40ac2f:	xchg   ebp,eax
  40ac30:	cld    
  40ac31:	imul   BYTE PTR ds:0xa1128721
  40ac37:	cld    
  40ac38:	pop    ss
  40ac39:	push   edi
  40ac3a:	arpl   WORD PTR [ecx+eiz*8+0x34d80aac],sp
  40ac41:	mov    eax,0x272b67a4
  40ac46:	cmp    BYTE PTR [edx],al
  40ac48:	push   eax
  40ac49:	adc    ah,BYTE PTR [edx]
  40ac4b:	ret    0xfa2f
  40ac4e:	adc    BYTE PTR [ebx],dh
  40ac50:	jnp    0x40ac45
  40ac52:	sbb    DWORD PTR [esi+0x52],ecx
  40ac55:	out    dx,eax
  40ac56:	fwait
  40ac57:	pandn  mm1,QWORD PTR [ebx]
  40ac5a:	sbb    eax,0x83f54464
  40ac5f:	jo     0x40ac62
  40ac61:	pop    ebp
  40ac62:	arpl   si,dx
  40ac64:	jp     0x40ac41
  40ac66:	lods   al,BYTE PTR ds:[esi]
  40ac67:	daa    
  40ac68:	or     BYTE PTR [esi],ch
  40ac6a:	shr    DWORD PTR [eax+edx*8-0x13339928],cl
  40ac71:	ret    
  40ac72:	mov    eax,0xc27a5876
  40ac77:	xchg   ch,ah
  40ac79:	mov    dh,BYTE PTR [esi-0x6b]
  40ac7c:	xor    BYTE PTR [ebx-0x69],al
  40ac7f:	xchg   edi,eax
  40ac80:	push   es
  40ac81:	cmp    bl,al
  40ac83:	test   eax,0xee13819e
  40ac88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac89:	dec    eax
  40ac8a:	test   eax,0xdfff75f1
  40ac8f:	jle    0x40ad06
  40ac91:	mov    ds:0x75e0f39d,al
  40ac96:	loope  0x40ad03
  40ac98:	aaa    
  40ac99:	and    eax,0x83a825c3
  40ac9e:	ss add eax,0xb90e462e
  40aca4:	(bad)  
  40aca6:	mov    al,ds:0x8adb5996
  40acab:	mov    ds:0x29c00307,al
  40acb0:	jno    0x40ad0f
  40acb2:	pop    eax
  40acb3:	sahf   
  40acb4:	popf   
  40acb5:	xor    dh,BYTE PTR [ecx]
  40acb7:	cmp    dl,BYTE PTR [esi-0x79]
  40acba:	sub    esi,edx
  40acbc:	imul   eax,DWORD PTR [edx+0x1],0x44403fcb
  40acc3:	clc    
  40acc4:	loopne 0x40ad2b
  40acc6:	push   ss
  40acc7:	inc    eax
  40acc8:	es dec ecx
  40acca:	cdq    
  40accb:	xchg   ecx,eax
  40accc:	xchg   ebx,eax
  40accd:	retf   
  40acce:	gs (bad) 
  40acd0:	sub    edi,ecx
  40acd2:	call   0x506cab6d
  40acd7:	cwde   
  40acd8:	adc    al,0x4b
  40acda:	push   0xdef280e5
  40acdf:	repz (bad) 
  40ace1:	mov    bl,0x1f
  40ace3:	adc    BYTE PTR ss:[esi+ebx*4+0x340a2baf],dh
  40aceb:	sub    al,ch
  40aced:	pop    ds
  40acee:	cmp    al,0x4d
  40acf0:	mov    esp,0x2a63f34a
  40acf5:	fs addr16 xchg edx,eax
  40acf8:	fsubr  st,st(7)
  40acfa:	mov    bl,0x12
  40acfc:	lock xchg edi,eax
  40acfe:	sahf   
  40acff:	jg     0x40acd3
  40ad01:	xor    bl,BYTE PTR [esi-0x5]
  40ad04:	or     ah,BYTE PTR [eax+0x2812a33d]
  40ad0a:	jne    0x40acda
  40ad0c:	push   esi
  40ad0d:	rcr    DWORD PTR [ebp-0x19a11481],1
  40ad13:	fmul   st,st(4)
  40ad15:	push   eax
  40ad16:	fmul   DWORD PTR [edi+0x7d]
  40ad19:	cmp    eax,DWORD PTR [ebp-0x642c1d76]
  40ad1f:	aad    0xf3
  40ad21:	xor    BYTE PTR [ebp+0x3841161e],cl
  40ad27:	test   DWORD PTR [ebp+edx*4+0x3ebb94cf],edx
  40ad2e:	nop
  40ad2f:	(bad)  
  40ad30:	jp     0x40ad8d
  40ad32:	cmp    ebp,0xffffffa5
  40ad35:	ds loope 0x40acb8
  40ad38:	inc    edi
  40ad39:	pop    ebp
  40ad3a:	daa    
  40ad3b:	add    eax,0x796fcb87
  40ad40:	scas   al,BYTE PTR es:[edi]
  40ad41:	add    DWORD PTR [edi+ecx*8-0x80],0xffffffa6
  40ad46:	push   ebp
  40ad47:	repz or BYTE PTR [edi-0x796546a7],dl
  40ad4e:	das    
  40ad4f:	in     eax,dx
  40ad50:	leave  
  40ad51:	add    DWORD PTR [edx+0x3a],0x85ee90db
  40ad58:	add    eax,0x63d6f718
  40ad5d:	inc    edi
  40ad5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad5f:	in     eax,0x81
  40ad61:	xchg   esp,eax
  40ad62:	ret    0xa4cf
  40ad65:	sti    
  40ad66:	mov    edx,0xab8d9f22
  40ad6b:	sub    eax,DWORD PTR [esi-0x56]
  40ad6e:	mov    ds:0x5c73f9df,al
  40ad73:	or     edx,ebp
  40ad75:	and    esp,DWORD PTR [ecx+0x7943e0a6]
  40ad7b:	inc    edx
  40ad7d:	sub    ebp,esi
  40ad7f:	jo     0x40ad68
  40ad81:	push   esi
  40ad82:	push   ebp
  40ad83:	mov    bl,BYTE PTR [eax-0x5f95963f]
  40ad89:	cmp    BYTE PTR [ecx+0x688694da],bl
  40ad8f:	mov    ah,0xcd
  40ad91:	xchg   esp,eax
  40ad92:	sbb    esp,DWORD PTR [ebx]
  40ad94:	xor    eax,0x2b74a206
  40ad99:	mov    eax,ds:0xb5c53007
  40ad9e:	ins    BYTE PTR es:[edi],dx
  40ad9f:	xchg   esp,eax
  40ada0:	add    DWORD PTR [edx],0xfffffff3
  40ada3:	and    DWORD PTR [ecx-0x33],0xffffffbb
  40ada7:	call   ebx
  40ada9:	sub    ebx,DWORD PTR [ecx-0x7e4b115c]
  40adaf:	inc    ebx
  40adb0:	adc    bl,bl
  40adb2:	sbb    al,0x19
  40adb4:	in     eax,dx
  40adb5:	inc    ebx
  40adb6:	or     BYTE PTR [eax],bl
  40adb8:	pop    ebp
  40adb9:	ret    0xbb76
  40adbc:	das    
  40adbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adbe:	outs   dx,BYTE PTR ds:[esi]
  40adbf:	popf   
  40adc0:	push   cs
  40adc1:	pusha  
  40adc2:	(bad)  
  40adc3:	sti    
  40adc4:	or     ebx,DWORD PTR [ebx-0x76]
  40adc7:	add    DWORD PTR [edx+0x2],esi
  40adca:	and    BYTE PTR cs:[ebx+0x16],al
  40adce:	mov    esp,0xce8a086a
  40add3:	dec    DWORD PTR [ebx-0x23bae699]
  40add9:	or     dl,ch
  40addb:	sbb    ch,BYTE PTR [ebx]
  40addd:	mov    eax,ds:0xe63a3122
  40ade2:	imul   ebx,DWORD PTR [edi+0x42],0x3e
  40ade6:	jl     0x40ae25
  40ade8:	pop    ecx
  40ade9:	jmp    0xc538a118
  40adee:	loopne 0x40adc7
  40adf0:	mov    esp,0xfaf3d862
  40adf5:	sub    eax,0xe5e71f70
  40adfa:	jae    0x40ae0b
  40adfc:	pop    ss
  40adfd:	stc    
  40adfe:	sbb    dh,BYTE PTR [ebx-0x5d072b00]
  40ae04:	rcr    cl,cl
  40ae06:	scas   eax,DWORD PTR es:[edi]
  40ae07:	(bad)  
  40ae08:	xor    BYTE PTR [esi+edi*8-0xf],bh
  40ae0c:	add    eax,0xe1be4677
  40ae11:	dec    ecx
  40ae12:	mov    al,0x33
  40ae14:	fst    QWORD PTR [edi+esi*1]
  40ae17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae18:	sti    
  40ae19:	sahf   
  40ae1a:	jecxz  0x40ae92
  40ae1c:	jnp    0x40ae44
  40ae1e:	scas   al,BYTE PTR es:[edi]
  40ae1f:	and    DWORD PTR ds:0xad23060,esp
  40ae25:	cmp    BYTE PTR [eax+0x47],bh
  40ae28:	xchg   ebp,eax
  40ae29:	shl    BYTE PTR [ebx+0x661830b2],1
  40ae2f:	mov    eax,0xa68e2790
  40ae34:	cmp    eax,0x692d8b34
  40ae39:	out    0x9f,eax
  40ae3b:	add    BYTE PTR [eax-0x18],ah
  40ae3e:	das    
  40ae3f:	jbe    0x40ae80
  40ae41:	mov    eax,0xb00d3df
  40ae46:	xlat   BYTE PTR ds:[ebx]
  40ae47:	ins    DWORD PTR es:[edi],dx
  40ae48:	add    BYTE PTR [ebx+0x4b],0x27
  40ae4c:	js     0x40ae92
  40ae4e:	adc    BYTE PTR [esi+0x3d51c189],ah
  40ae54:	push   0xcd4384f4
  40ae59:	dec    ecx
  40ae5a:	dec    esp
  40ae5b:	push   ebx
  40ae5c:	test   eax,0x2a9a7ef0
  40ae61:	xchg   ebx,eax
  40ae62:	(bad)  
  40ae63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae64:	push   esi
  40ae65:	outs   dx,DWORD PTR ds:[esi]
  40ae66:	jl     0x40adf8
  40ae68:	pushf  
  40ae69:	mov    ecx,0x65d35a26
  40ae6e:	pushf  
  40ae6f:	icebp  
  40ae70:	test   DWORD PTR [eax+0x4efb370d],edx
  40ae76:	and    BYTE PTR [ebx+edx*2+0x556c24cf],cl
  40ae7d:	icebp  
  40ae7e:	std    
  40ae7f:	adc    esi,DWORD PTR [edx+0x3d566d4c]
  40ae85:	jbe    0x40aea5
  40ae87:	jmp    0xb2be8ef3
  40ae8c:	mov    cl,BYTE PTR [ecx]
  40ae8e:	adc    al,0x8d
  40ae90:	inc    edi
  40ae91:	les    esp,FWORD PTR [ebx]
  40ae93:	push   ebp
  40ae94:	mov    ebx,DWORD PTR [edx+0x5305882a]
  40ae9a:	and    ecx,DWORD PTR [ebx-0x22]
  40ae9d:	xchg   ebx,eax
  40ae9e:	mov    eax,0x8f8d93ba
  40aea3:	cmp    ah,bl
  40aea5:	pop    eax
  40aea6:	(bad)  
  40aea7:	xor    bl,BYTE PTR [edx+0x78]
  40aeaa:	pop    ss
  40aeab:	fs aam 0xb0
  40aeae:	retf   
  40aeaf:	pop    esp
  40aeb0:	sbb    eax,0xed87dee2
  40aeb5:	mov    WORD PTR [ecx],ss
  40aeb7:	lods   eax,DWORD PTR ds:[esi]
  40aeb8:	mov    bl,0x4c
  40aeba:	ficom  WORD PTR [eax]
  40aebc:	pop    ds
  40aebd:	sti    
  40aebe:	inc    ebp
  40aebf:	and    DWORD PTR [edi-0x7c65417b],eax
  40aec5:	xchg   ebx,eax
  40aec6:	or     edi,DWORD PTR ds:0x599e71a3
  40aecc:	cld    
  40aecd:	xchg   esi,eax
  40aece:	pushf  
  40aecf:	fisubr DWORD PTR [ecx+0x5]
  40aed2:	arpl   WORD PTR [ecx-0x29fea229],di
  40aed8:	cmc    
  40aed9:	loop   0x40aef0
  40aedb:	mov    al,ds:0x45da296
  40aee0:	sbb    dl,al
  40aee2:	cwde   
  40aee3:	je     0x40aea7
  40aee5:	jae    0x40af48
  40aee7:	dec    edi
  40aee8:	pop    edx
  40aee9:	xor    BYTE PTR [ebp+edi*4+0x43],ah
  40aeed:	cmp    cl,BYTE PTR ds:0x1ced8991
  40aef3:	cmp    al,ch
  40aef5:	cmc    
  40aef6:	cwde   
  40aef7:	jnp    0x40af46
  40aef9:	pop    eax
  40aefa:	xlat   BYTE PTR ds:[ebx]
  40aefb:	inc    edx
  40aefc:	scas   al,BYTE PTR es:[edi]
  40aefd:	hlt    
  40aefe:	or     BYTE PTR [edx+0x543b6d53],dl
  40af04:	dec    ebx
  40af05:	pop    esi
  40af06:	jmp    0xa339:0xb10bef46
  40af0d:	jnp    0x40af8c
  40af0f:	fxam   
  40af11:	add    eax,0x48a92bdb
  40af16:	pop    ds
  40af17:	add    DWORD PTR [ebx],ebp
  40af19:	inc    edi
  40af1a:	int3   
  40af1b:	xchg   edx,eax
  40af1c:	jo     0x40af83
  40af1e:	test   BYTE PTR [eax-0x6d],bl
  40af21:	ja     0x40af71
  40af23:	rcr    edi,1
  40af25:	retf   
  40af26:	or     al,0xe0
  40af28:	iret   
  40af29:	sub    al,0x20
  40af2b:	jmp    0x40af6a
  40af2d:	or     al,0xae
  40af2f:	retf   0x859c
  40af32:	mov    edi,0x5c63dbef
  40af37:	mov    ebp,DWORD PTR [edx-0x55]
  40af3a:	lds    esi,FWORD PTR [ecx]
  40af3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af3d:	scas   eax,DWORD PTR es:[edi]
  40af3e:	jp     0x40afa7
  40af40:	and    eax,0xe7f53813
  40af45:	or     eax,0x869b83ea
  40af4a:	mov    edi,0xe3bf77fb
  40af4f:	push   edi
  40af50:	popa   
  40af51:	adc    al,0x3a
  40af53:	sbb    BYTE PTR [edi-0x45],0xe7
  40af57:	imul   eax,DWORD PTR [edx],0x7e79ef89
  40af5d:	ins    DWORD PTR es:[edi],dx
  40af5e:	sub    dl,BYTE PTR [esi-0xb6868a3]
  40af64:	(bad)  [edx]
  40af66:	jmp    0x40af6d
  40af68:	(bad)  
  40af69:	cs nop
  40af6b:	sub    esi,edi
  40af6d:	cmp    edx,DWORD PTR [ecx-0x2e]
  40af70:	push   ds
  40af71:	mov    edi,0x2baf10a4
  40af76:	jne    0x40afec
  40af78:	xor    edx,DWORD PTR [ecx+0x2fbbd4e7]
  40af7e:	cmp    cl,BYTE PTR [ebp+0x68]
  40af81:	imul   ebx,esi,0x2d47c509
  40af87:	pop    ebp
  40af88:	pop    es
  40af89:	dec    eax
  40af8a:	rcl    DWORD PTR [ebx+0x51],0xd1
  40af8e:	ss dec esi
  40af90:	sbb    eax,0xfb4d82e6
  40af95:	push   ebp
  40af96:	retf   
  40af97:	mov    bh,0x4c
  40af99:	(bad)  
  40af9a:	loopne 0x40af6d
  40af9c:	push   0xfa54d3f9
  40afa1:	das    
  40afa2:	shl    BYTE PTR [ecx+0x1bc10e6d],1
  40afa8:	lods   eax,DWORD PTR ds:[esi]
  40afa9:	add    BYTE PTR [ebp+0x371f0fc4],ch
  40afaf:	inc    esp
  40afb0:	cld    
  40afb1:	retf   0x10be
  40afb4:	inc    esp
  40afb5:	dec    esp
  40afb6:	repz scas al,BYTE PTR es:[edi]
  40afb8:	cdq    
  40afb9:	push   ebx
  40afba:	pop    edx
  40afbb:	push   ecx
  40afbc:	inc    esp
  40afbd:	xchg   DWORD PTR [ebx],eax
  40afbf:	mov    esi,0x84e1e52b
  40afc4:	lods   eax,DWORD PTR ds:[esi]
  40afc5:	and    esi,DWORD PTR ds:0x7096c066
  40afcb:	sub    BYTE PTR [edi],ch
  40afcd:	push   eax
  40afce:	xor    BYTE PTR [ecx+0x23],bh
  40afd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd2:	jp     0x40b041
  40afd4:	adc    DWORD PTR [esi],esi
  40afd6:	dec    esp
  40afd7:	push   edi
  40afd8:	(bad)  [ebx-0x73]
  40afdb:	ror    DWORD PTR [ebp-0x56],1
  40afde:	or     BYTE PTR [ecx-0x7f],ch
  40afe1:	or     BYTE PTR [ebx+esi*4],ah
  40afe4:	adc    ebx,edi
  40afe6:	(bad)  
  40afe7:	loope  0x40af89
  40afe9:	and    esp,edi
  40afeb:	fisubr DWORD PTR [esi-0x7]
  40afee:	stos   DWORD PTR es:[edi],eax
  40afef:	cmp    BYTE PTR [edi],dl
  40aff1:	lahf   
  40aff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aff3:	sub    eax,0x3c8d08d0
  40aff8:	cmp    dh,BYTE PTR [esi-0x49]
  40affb:	inc    ebx
  40affc:	jp     0x40b04e
  40affe:	pop    ds
  40afff:	mov    edx,0xfc9e0b56
  40b004:	lods   eax,DWORD PTR ds:[esi]
  40b005:	cmp    bl,BYTE PTR [ecx-0x3]
  40b008:	ss sahf 
  40b00a:	sbb    ah,cl
  40b00c:	push   cs
  40b00d:	adc    ecx,DWORD PTR [edi+0x13ba538]
  40b013:	pop    ss
  40b014:	mov    bl,0xfb
  40b016:	add    al,0xfa
  40b018:	adc    eax,0x12586a13
  40b01d:	test   BYTE PTR [ebp+edx*2+0x55190eab],ch
  40b024:	fidiv  DWORD PTR [esi+0x0]
  40b027:	sbb    eax,0xc92aaadb
  40b02c:	div    DWORD PTR [eax]
  40b02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b02f:	outs   dx,BYTE PTR ds:[esi]
  40b030:	mov    cl,0x39
  40b032:	mov    ebx,0x62d5b13d
  40b037:	stos   DWORD PTR es:[edi],eax
  40b038:	outs   dx,BYTE PTR ds:[esi]
  40b039:	pop    ecx
  40b03a:	sub    bl,BYTE PTR [ecx]
  40b03c:	and    dh,dh
  40b03e:	cs push esi
  40b040:	out    dx,al
  40b041:	inc    esp
  40b042:	push   ebp
  40b043:	add    DWORD PTR [edi-0x438314d0],0x28df031b
  40b04d:	outs   dx,BYTE PTR ds:[esi]
  40b04e:	cmp    eax,0xf84c8f7e
  40b053:	outs   dx,BYTE PTR ds:[esi]
  40b054:	mov    ebp,DWORD PTR [ecx+esi*1]
  40b057:	in     eax,dx
  40b058:	sbb    DWORD PTR [edi+0x31411094],esp
  40b05e:	push   esp
  40b05f:	sbb    BYTE PTR [ebp+0xb77b358],cl
  40b065:	mov    eax,0xd697eb0b
  40b06a:	jg     0x40b06a
  40b06c:	pop    ebp
  40b06d:	stc    
  40b06e:	les    ebx,FWORD PTR [eax]
  40b070:	inc    edi
  40b071:	jno    0x40b0d6
  40b073:	mov    al,0xa9
  40b075:	add    eax,0xc526a24
  40b07a:	int3   
  40b07b:	lods   eax,DWORD PTR ds:[esi]
  40b07c:	mov    ch,0x4
  40b07e:	push   cs
  40b07f:	pop    ebp
  40b080:	dec    ebx
  40b081:	push   edi
  40b082:	push   ebp
  40b083:	pushf  
  40b084:	and    BYTE PTR [eax+ebx*4+0x672019],ch
  40b08b:	or     eax,0x50f522c0
  40b090:	pop    ecx
  40b091:	retf   0x5e2c
  40b094:	ds xor eax,0xd6e3630e
  40b09a:	dec    edi
  40b09b:	pop    ecx
  40b09c:	and    al,dh
  40b09e:	cmc    
  40b09f:	in     al,0xee
  40b0a1:	and    BYTE PTR [edi+0x19],0x29
  40b0a5:	dec    ebx
  40b0a6:	pop    esp
  40b0a7:	fstp   QWORD PTR [edx-0x4c]
  40b0aa:	cdq    
  40b0ab:	jmp    0x40b06f
  40b0ad:	push   0xffffff86
  40b0af:	push   esp
  40b0b0:	or     DWORD PTR ss:[ebp+0x1ad73c4],ecx
  40b0b7:	pop    ecx
  40b0b8:	pop    esi
  40b0b9:	xor    esi,ebp
  40b0bb:	jno    0x40b0f1
  40b0bd:	mov    ecx,0xd759f6b8
  40b0c2:	hlt    
  40b0c3:	cmp    eax,0xbdae15ad
  40b0c8:	sbb    BYTE PTR [eax+0x3b],ah
  40b0cb:	scas   eax,DWORD PTR es:[edi]
  40b0cc:	jnp    0x40b088
  40b0ce:	jmp    0x2b5a26e1
  40b0d3:	std    
  40b0d4:	loopne 0x40b0b8
  40b0d6:	(bad)  
  40b0d8:	dec    ecx
  40b0d9:	call   0xbf54494a
  40b0de:	mov    BYTE PTR [ecx+eiz*2-0x73be42e1],bl
  40b0e5:	and    BYTE PTR ds:0xffd6,cl
  40b0ea:	test   DWORD PTR [ecx],ebx
  40b0ec:	xchg   DWORD PTR [edi],ecx
  40b0ee:	mov    ds:0x27cf7fa1,al
  40b0f3:	inc    esp
  40b0f4:	and    DWORD PTR [edi*4-0xc947183],eax
  40b0fb:	jae    0x40b0fc
  40b0fd:	jmp    0x70ba:0xdd376523
  40b104:	jp     0x40b0b8
  40b106:	xlat   BYTE PTR ds:[ebx]
  40b107:	fdivr  QWORD PTR [ebx-0x4a4b3f78]
  40b10d:	or     DWORD PTR [edi+0x583dfcff],0xffffff8e
  40b114:	stc    
  40b115:	frstor [ebx+0x5a132621]
  40b11b:	in     al,0xda
  40b11d:	add    al,0x4f
  40b11f:	mov    eax,ds:0xd660526f
  40b124:	inc    eax
  40b125:	mov    eax,ds:0x836b5a00
  40b12a:	cmp    DWORD PTR [edx],edi
  40b12c:	xchg   ecx,eax
  40b12d:	call   0x70e36946
  40b132:	cdq    
  40b133:	xor    eax,0x9824828a
  40b138:	icebp  
  40b139:	xor    DWORD PTR [ebp+ecx*8-0x2e],0xffffffcb
  40b13e:	lods   al,BYTE PTR ds:[esi]
  40b13f:	in     al,0xbd
  40b141:	retf   
  40b142:	mov    ebx,0x5588d4f5
  40b147:	shl    dl,cl
  40b149:	fdivr  DWORD PTR ds:0xc4371b3b
  40b14f:	dec    eax
  40b150:	stc    
  40b151:	sbb    DWORD PTR [edx+0x34],esi
  40b154:	and    BYTE PTR [eax+ebx*2],al
  40b157:	in     eax,dx
  40b158:	push   ebp
  40b159:	in     eax,dx
  40b15a:	pop    ebp
  40b15b:	repz aas 
  40b15d:	xlat   BYTE PTR ds:[ebx]
  40b15e:	fsub   DWORD PTR ds:0x5f73602c
  40b164:	push   edi
  40b165:	jbe    0x40b159
  40b167:	mov    edx,0x5e04dbca
  40b16c:	pop    ecx
  40b16d:	out    dx,al
  40b16e:	cmp    bh,ah
  40b170:	ja     0x40b1e8
  40b172:	add    BYTE PTR [eax-0x4f],dl
  40b175:	cli    
  40b176:	sahf   
  40b177:	push   ebp
  40b178:	std    
  40b179:	add    DWORD PTR [edx],edx
  40b17b:	ins    DWORD PTR es:[edi],dx
  40b17c:	cmp    esi,DWORD PTR [esi+ebx*2-0x41]
  40b180:	loope  0x40b1b2
  40b182:	push   es
  40b183:	adc    al,BYTE PTR [ecx-0x2c7b6f81]
  40b189:	dec    esp
  40b18a:	jb     0x40b179
  40b18c:	sub    dh,BYTE PTR [eax-0x3f6209d9]
  40b192:	ss adc al,0x3c
  40b195:	outs   dx,DWORD PTR ds:[esi]
  40b196:	push   ss
  40b197:	lock mov esp,0xe22faf23
  40b19d:	sbb    BYTE PTR [edi-0x21],dl
  40b1a0:	mov    eax,0xb4a66a6a
  40b1a5:	jecxz  0x40b1c2
  40b1a7:	xor    BYTE PTR [edi-0x33],ch
  40b1aa:	add    cl,BYTE PTR [eax-0xd]
  40b1ad:	fcom   DWORD PTR [edi-0x7]
  40b1b0:	cld    
  40b1b1:	dec    esi
  40b1b2:	jb     0x40b209
  40b1b4:	aaa    
  40b1b5:	js     0x40b181
  40b1b7:	pop    ebx
  40b1b8:	jbe    0x40b168
  40b1ba:	sbb    al,0xf8
  40b1bc:	std    
  40b1bd:	inc    ebp
  40b1be:	or     DWORD PTR [ebp+edi*1-0x4c90e854],edi
  40b1c5:	sub    DWORD PTR [ebp-0x511096f3],eax
  40b1cb:	mov    cl,0xc1
  40b1cd:	je     0x40b1a9
  40b1cf:	inc    ebx
  40b1d0:	adc    al,BYTE PTR [edi-0x2]
  40b1d3:	cmp    al,0xec
  40b1d5:	jecxz  0x40b16b
  40b1d7:	popf   
  40b1d8:	xchg   ebp,eax
  40b1d9:	lea    ebx,[ecx+0x4d13d261]
  40b1df:	jae    0x40b256
  40b1e1:	push   ds
  40b1e2:	mov    al,0xd1
  40b1e4:	shr    DWORD PTR [eax+0x2fbacaff],0x1d
  40b1eb:	mov    edx,fs
  40b1ed:	push   ebp
  40b1ee:	fstp   QWORD PTR [edx-0x160fd9ee]
  40b1f4:	xor    DWORD PTR ds:0xf2b97c01,ebp
  40b1fa:	mov    dh,0x2
  40b1fc:	pop    es
  40b1fd:	shl    BYTE PTR [esi-0x31e6883],1
  40b203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b204:	or     ecx,DWORD PTR [edx-0x5f]
  40b207:	ja     0x40b220
  40b209:	pushf  
  40b20a:	test   bh,0x71
  40b20d:	aad    0x3e
  40b20f:	adc    eax,DWORD PTR [eax]
  40b211:	lock jge 0x40b1ed
  40b214:	cwde   
  40b215:	mov    ebx,0x75780542
  40b21a:	or     dh,ch
  40b21c:	jp     0x40b227
  40b21e:	mov    bh,0x32
  40b220:	ror    edx,cl
  40b222:	int    0xd4
  40b224:	ins    DWORD PTR es:[edi],dx
  40b225:	xor    edx,DWORD PTR [eax+0x3c6d0b47]
  40b22b:	inc    esp
  40b22c:	push   ebx
  40b22d:	(bad)  
  40b22e:	cmp    dl,BYTE PTR [ebx]
  40b230:	fld    QWORD PTR [ebx-0x3d]
  40b233:	loope  0x40b2ae
  40b235:	out    0x3f,al
  40b237:	inc    edi
  40b238:	pop    edi
  40b239:	mov    esi,0xa1a3b3eb
  40b23e:	sbb    ch,BYTE PTR [ecx]
  40b240:	adc    DWORD PTR [edx+0x73],ecx
  40b243:	out    0x98,eax
  40b245:	xchg   ebx,eax
  40b246:	div    DWORD PTR [ebx-0x28e5ffe7]
  40b24c:	xor    ch,BYTE PTR [eax+eiz*8+0x1c]
  40b250:	dec    edi
  40b251:	mov    ebx,0x3a0debe0
  40b256:	mov    ah,0xaa
  40b258:	xchg   ebx,eax
  40b259:	cmp    DWORD PTR [edx-0x7c090a63],ebx
  40b25f:	mov    ebp,gs
  40b261:	(bad)  
  40b262:	cmp    esi,DWORD PTR [esi+0x5]
  40b265:	xor    BYTE PTR [edi],dh
  40b267:	shl    BYTE PTR [edi],0xd6
  40b26a:	paddq  mm3,QWORD PTR [ebx]
  40b26d:	cdq    
  40b26e:	mov    dl,0x76
  40b270:	push   ecx
  40b271:	and    DWORD PTR [edx+0x20],ebp
  40b274:	jl     0x40b23d
  40b276:	shr    ah,cl
  40b278:	sbb    eax,DWORD PTR [ebp+0x14]
  40b27b:	out    0x4b,eax
  40b27d:	xchg   ebx,eax
  40b27e:	fld1   
  40b280:	inc    eax
  40b281:	mov    ah,0xe3
  40b283:	dec    edx
  40b284:	lods   al,BYTE PTR ds:[esi]
  40b285:	mov    WORD PTR [edi+edx*8],fs
  40b288:	jg     0x40b2a1
  40b28a:	aam    0x16
  40b28c:	adc    dh,BYTE PTR [ebp+0x60]
  40b28f:	sahf   
  40b290:	pop    ss
  40b291:	call   0xaed850a8
  40b296:	vmwrite esi,ecx
  40b299:	das    
  40b29a:	loope  0x40b226
  40b29c:	call   0x9240:0xe13724f2
  40b2a3:	test   eax,0x9ee3910a
  40b2a8:	popa   
  40b2a9:	shl    DWORD PTR [edx+0x101952d4],cl
  40b2af:	adc    bl,ah
  40b2b1:	(bad)  
  40b2b2:	imul   edx,DWORD PTR [ebx+0xc],0xffffffa3
  40b2b6:	cmc    
  40b2b7:	jl     0x40b2d4
  40b2b9:	jl     0x40b257
  40b2bb:	sar    DWORD PTR [edi-0x19],cl
  40b2be:	test   eax,0x7bf5fa89
  40b2c3:	retf   0x7a72
  40b2c6:	outs   dx,DWORD PTR ds:[esi]
  40b2c7:	dec    ecx
  40b2c8:	test   eax,0xa322c976
  40b2cd:	xchg   edi,eax
  40b2ce:	pop    eax
  40b2cf:	imul   esp,DWORD PTR [edi+edx*2-0x16],0x18
  40b2d4:	jl     0x40b28c
  40b2d6:	sar    DWORD PTR [ebp-0x55],cl
  40b2d9:	out    0xa2,al
  40b2db:	ins    BYTE PTR es:[edi],dx
  40b2dc:	outs   dx,BYTE PTR ds:[esi]
  40b2dd:	mov    ds:0x41252a90,eax
  40b2e2:	rcl    ch,0x61
  40b2e5:	lock inc esi
  40b2e7:	(bad)  
  40b2e8:	call   0xb231:0xb37ae4e1
  40b2ef:	cmp    ah,BYTE PTR [edx-0x6ccad985]
  40b2f5:	mov    ds:0x13bb3709,al
  40b2fa:	je     0x40b2de
  40b2fc:	(bad)  
  40b2fd:	mov    ecx,0x64de2338
  40b302:	not    DWORD PTR [esi]
  40b304:	mov    BYTE PTR [ebp+0x75288a38],dl
  40b30a:	hlt    
  40b30b:	mov    BYTE PTR [esp+ebp*8-0x1f],bh
  40b30f:	rcl    BYTE PTR [esp+edx*8-0x44],0x45
  40b314:	(bad)  
  40b315:	add    BYTE PTR [eax-0xa1da4b9],0xbc
  40b31c:	push   ebp
  40b31d:	out    dx,al
  40b31e:	mov    esi,0x3af3ba28
  40b323:	xor    DWORD PTR [eax],ebp
  40b325:	adc    DWORD PTR [ebx],edx
  40b327:	cmp    ebp,edx
  40b329:	pop    ds
  40b32a:	push   ss
  40b32b:	push   es
  40b32c:	(bad)  
  40b32d:	pop    ebx
  40b32e:	pop    ecx
  40b32f:	icebp  
  40b330:	sub    bl,BYTE PTR [ebx]
  40b332:	je     0x40b2e8
  40b334:	lods   al,BYTE PTR ds:[esi]
  40b335:	pushf  
  40b336:	jle    0x40b354
  40b338:	je     0x40b387
  40b33a:	aad    0xde
  40b33c:	fdiv   DWORD PTR [edx+esi*8+0x4138bd5b]
  40b343:	and    ah,0x4e
  40b346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b347:	or     BYTE PTR [ebp+0xc4be88a],cl
  40b34d:	push   ecx
  40b34e:	stos   DWORD PTR es:[edi],eax
  40b34f:	dec    ebp
  40b350:	leave  
  40b351:	adc    al,0x67
  40b353:	lea    eax,[edi+0x1c]
  40b356:	xchg   esi,eax
  40b357:	push   ebp
  40b358:	adc    cl,BYTE PTR [eax-0x50cb0a82]
  40b35e:	adc    DWORD PTR [esi-0x3a],0x48
  40b362:	(bad)  
  40b363:	mov    ah,0xf3
  40b365:	dec    esi
  40b366:	jns    0x40b2fc
  40b368:	or     eax,0xc306712a
  40b36d:	sahf   
  40b36e:	lods   eax,DWORD PTR ds:[esi]
  40b36f:	pop    ebx
  40b370:	and    DWORD PTR [edi],eax
  40b372:	loopne 0x40b3b9
  40b374:	mov    cl,0x45
  40b376:	xor    bl,BYTE PTR [esi+0x4d9d5e85]
  40b37c:	sub    eax,0xa33c0dc4
  40b381:	adc    BYTE PTR [esi],dh
  40b383:	lods   eax,DWORD PTR ds:[esi]
  40b384:	mov    bl,0xeb
  40b386:	icebp  
  40b387:	mul    cl
  40b389:	dec    edi
  40b38a:	ss ss jno 0x40b36d
  40b38e:	push   cs
  40b38f:	push   esp
  40b390:	cdq    
  40b391:	jns    0x40b3c3
  40b393:	imul   ebp,DWORD PTR [esi-0x1d857398],0xffffffe1
  40b39a:	mov    dl,BYTE PTR [edx+eax*1-0x6465f403]
  40b3a1:	repnz fisubr DWORD PTR [ebp-0x1c]
  40b3a5:	or     BYTE PTR ds:0xc1a0d40d,bl
  40b3ab:	int    0x11
  40b3ad:	xchg   edx,eax
  40b3ae:	out    dx,al
  40b3af:	sub    edi,DWORD PTR [ebp-0x7c]
  40b3b2:	adc    edx,DWORD PTR [ebx+0x26]
  40b3b5:	scas   eax,DWORD PTR es:[edi]
  40b3b6:	mov    ds:0x9be20913,al
  40b3bb:	aam    0x30
  40b3bd:	mov    ds:0x379f9203,eax
  40b3c2:	inc    edi
  40b3c3:	ds dec eax
  40b3c5:	pop    es
  40b3c6:	xor    BYTE PTR [ebx+0x2c],ah
  40b3c9:	in     eax,dx
  40b3ca:	ret    0xd3e
  40b3cd:	push   edi
  40b3ce:	mov    ch,0xf8
  40b3d0:	rol    BYTE PTR [ecx+0x7f1c4ecb],0x9d
  40b3d7:	mov    ch,BYTE PTR [eax]
  40b3d9:	mov    ebp,0x9654f709
  40b3de:	cmp    esi,DWORD PTR [edx-0x5c]
  40b3e1:	and    eax,DWORD PTR [esi-0x4145bcf8]
  40b3e7:	in     al,dx
  40b3e8:	push   edi
  40b3e9:	mov    edi,0xd6cae670
  40b3ee:	jno    0x40b42b
  40b3f0:	push   cs
  40b3f1:	xor    al,BYTE PTR [ebx]
  40b3f3:	inc    edi
  40b3f4:	mov    ds:0x8d16999,eax
  40b3f9:	scas   eax,DWORD PTR es:[edi]
  40b3fa:	(bad)  
  40b3fb:	sti    
  40b3fc:	push   es
  40b3fd:	ror    bl,0x85
  40b400:	sar    BYTE PTR [edx],1
  40b402:	outs   dx,DWORD PTR ds:[esi]
  40b403:	mov    edx,0x580a955
  40b408:	xor    BYTE PTR [esi+0x727326ed],0x41
  40b40f:	push   esi
  40b410:	sbb    al,0x71
  40b412:	js     0x40b3ad
  40b414:	jge    0x40b3df
  40b416:	shl    BYTE PTR [edx+esi*8-0x44],1
  40b41a:	xchg   esp,eax
  40b41b:	daa    
  40b41c:	(bad)  
  40b41d:	out    0x30,eax
  40b41f:	adc    eax,0x7d354865
  40b424:	addr16 cmc 
  40b426:	push   0x79
  40b428:	fs (bad) 
  40b42a:	push   ebp
  40b42b:	and    BYTE PTR [edx],ah
  40b42d:	in     eax,0xae
  40b42f:	jmp    0x40b465
  40b431:	or     eax,0x75d4d035
  40b436:	xchg   ecx,eax
  40b437:	popf   
  40b438:	jo     0x40b3c0
  40b43a:	mov    ecx,0x74d3447e
  40b43f:	push   ebx
  40b440:	loopne 0x40b475
  40b442:	cdq    
  40b443:	daa    
  40b444:	sar    BYTE PTR [edi-0x20],1
  40b447:	idiv   DWORD PTR [edi]
  40b449:	jb     0x40b427
  40b44b:	sub    al,0xf1
  40b44d:	out    dx,al
  40b44e:	and    al,0x27
  40b450:	push   esp
  40b451:	xor    BYTE PTR [ecx+0x4d],bl
  40b454:	ds push edi
  40b456:	mov    al,0x88
  40b458:	xchg   ebp,eax
  40b459:	mov    esp,0xd584c717
  40b45e:	fild   WORD PTR [eax]
  40b460:	mov    ah,BYTE PTR [edx]
  40b462:	fsub   DWORD PTR [eax-0x55b69a5b]
  40b468:	adc    eax,0x572f4062
  40b46d:	into   
  40b46e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b46f:	or     ecx,DWORD PTR [edx]
  40b471:	mov    ebp,0xf5550382
  40b476:	aas    
  40b477:	jbe    0x40b437
  40b479:	mov    esi,0x16d116bb
  40b47e:	fwait
  40b47f:	cld    
  40b480:	mov    edi,0x9a3cd0b9
  40b485:	jmp    0x2288:0x90e5351a
  40b48c:	dec    ebx
  40b48d:	add    DWORD PTR [esi-0x3f],esp
  40b490:	or     edx,DWORD PTR [esi+0x62]
  40b493:	cmp    eax,0x3c2b8a13
  40b498:	ins    DWORD PTR es:[edi],dx
  40b499:	mov    dl,0x5a
  40b49b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b49c:	aaa    
  40b49d:	mov    ebx,0x9c1795df
  40b4a2:	mov    ebp,0x65dbf65c
  40b4a7:	push   eax
  40b4a8:	or     eax,0xc287895c
  40b4ad:	lods   eax,DWORD PTR ds:[esi]
  40b4ae:	das    
  40b4af:	in     eax,dx
  40b4b0:	mov    ds:0x5a454ae,al
  40b4b5:	out    dx,eax
  40b4b6:	cld    
  40b4b7:	lds    ebx,FWORD PTR [ecx+ebx*1-0x1a9a59f8]
  40b4be:	loop   0x40b47c
  40b4c0:	loop   0x40b4e5
  40b4c2:	fcmovnbe st,st(3)
  40b4c4:	aas    
  40b4c5:	xchg   esi,eax
  40b4c6:	not    bh
  40b4c8:	lods   eax,DWORD PTR ds:[esi]
  40b4c9:	push   es
  40b4ca:	mov    cl,0x7d
  40b4cc:	push   edx
  40b4cd:	mov    edx,0xcb37f68b
  40b4d2:	pop    eax
  40b4d3:	lahf   
  40b4d4:	lds    eax,FWORD PTR [ebx+0x35]
  40b4d7:	mov    esp,0x92404dca
  40b4dc:	(bad)  
  40b4de:	and    ah,dl
  40b4e0:	or     eax,0x765d86e1
  40b4e5:	adc    al,0x44
  40b4e7:	mov    dl,BYTE PTR [edx+0x30b4a80d]
  40b4ed:	in     eax,dx
  40b4ee:	pusha  
  40b4ef:	cmp    eax,eax
  40b4f1:	data16 mov ah,0xc3
  40b4f4:	sub    BYTE PTR ss:0x4def216d,dh
  40b4fb:	xchg   DWORD PTR [edi+0x69aa5eba],eax
  40b501:	pop    esp
  40b503:	ja     0x40b4e4
  40b505:	iret   
  40b506:	mov    dl,al
  40b508:	mov    eax,0x27ca9103
  40b50d:	loop   0x40b4b4
  40b50f:	sub    cl,bh
  40b511:	aas    
  40b512:	mov    edi,0x4a2c443f
  40b517:	cmc    
  40b518:	sub    al,0x23
  40b51a:	xchg   ebx,eax
  40b51b:	cwde   
  40b51c:	imul   ebp,DWORD PTR [ebp-0x2de849bc],0x32
  40b523:	cmp    ch,BYTE PTR [eax-0x4]
  40b526:	fwait
  40b527:	cld    
  40b528:	mov    ebx,0x1b798b69
  40b52d:	fs push edx
  40b52f:	xchg   edx,eax
  40b530:	dec    ecx
  40b531:	pushf  
  40b532:	fld    QWORD PTR [ecx-0x58]
  40b535:	fwait
  40b536:	inc    eax
  40b537:	jno    0x40b5b1
  40b539:	sbb    BYTE PTR [ebp+0x277a892b],ah
  40b53f:	sbb    al,0xe3
  40b541:	sub    al,dh
  40b543:	(bad)  
  40b544:	jmp    FWORD PTR cs:[ebx+eiz*4]
  40b548:	enter  0x6754,0x64
  40b54c:	xchg   ebx,eax
  40b54d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54e:	dec    esi
  40b54f:	pop    ebx
  40b550:	jp     0x40b583
  40b552:	pop    ecx
  40b553:	and    al,BYTE PTR [ebp-0x5c651707]
  40b559:	dec    eax
  40b55a:	mov    ch,0xe5
  40b55c:	out    0x95,eax
  40b55e:	inc    ecx
  40b55f:	xchg   esi,eax
  40b560:	mov    bl,0x3c
  40b562:	scas   al,BYTE PTR es:[edi]
  40b563:	shl    BYTE PTR [edi],1
  40b565:	push   ds
  40b566:	(bad)  
  40b567:	int3   
  40b568:	push   edx
  40b569:	and    BYTE PTR [ebx+0x3b],ah
  40b56c:	mov    ebp,0xd148d3df
  40b571:	xor    ecx,DWORD PTR [eax-0x18]
  40b574:	repz mov bh,0x99
  40b577:	ret    
  40b578:	inc    esp
  40b579:	and    BYTE PTR [esi-0x7fca6620],cl
  40b57f:	test   al,0x75
  40b581:	inc    esi
  40b582:	out    0x4c,eax
  40b584:	jno    0x40b540
  40b586:	fsub   st,st(0)
  40b588:	lods   eax,DWORD PTR ds:[esi]
  40b589:	or     eax,0xf411c6d4
  40b58e:	xor    esi,DWORD PTR [esi-0x1786ed78]
  40b594:	dec    edi
  40b595:	fld    st(3)
  40b597:	xchg   esi,eax
  40b598:	fwait
  40b599:	(bad)
  40b59c:	call   0x2a97b7c3
  40b5a1:	sbb    eax,0xdfb43534
  40b5a6:	popa   
  40b5a7:	into   
  40b5a8:	sub    BYTE PTR [ebx],dh
  40b5aa:	dec    esp
  40b5ab:	mov    eax,ds:0xd1686a54
  40b5b0:	xchg   edi,eax
  40b5b1:	jl     0x40b5d8
  40b5b3:	pop    es
  40b5b4:	push   0xd60cde50
  40b5b9:	hlt    
  40b5ba:	scas   al,BYTE PTR es:[edi]
  40b5bb:	jl     0x40b5eb
  40b5bd:	lahf   
  40b5be:	outs   dx,DWORD PTR ds:[esi]
  40b5bf:	popa   
  40b5c0:	push   esi
  40b5c1:	dec    ebp
  40b5c2:	mov    ds:0xab94ec80,eax
  40b5c7:	lahf   
  40b5c8:	xchg   ebp,eax
  40b5c9:	or     esp,0xffffff92
  40b5cc:	iret   
  40b5cd:	cwde   
  40b5ce:	mov    edx,ss
  40b5d0:	les    esp,FWORD PTR [edi+0x35d8c5c4]
  40b5d6:	and    edx,esi
  40b5d8:	es cli 
  40b5da:	sbb    DWORD PTR [ecx+0x26],0xdefd0096
  40b5e1:	sub    al,0xb3
  40b5e3:	(bad)  
  40b5e4:	in     al,dx
  40b5e5:	pushf  
  40b5e6:	stos   DWORD PTR es:[edi],eax
  40b5e7:	add    DWORD PTR [edi-0x49a343d6],eax
  40b5ed:	mov    ebx,0x8fc9c026
  40b5f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b5f3:	dec    edx
  40b5f4:	push   ebx
  40b5f5:	mov    esi,0x84654637
  40b5fa:	scas   al,BYTE PTR es:[edi]
  40b5fb:	mov    DWORD PTR [edi-0x3c],edi
  40b5fe:	push   ecx
  40b5ff:	stos   BYTE PTR es:[edi],al
  40b600:	lods   eax,DWORD PTR es:[esi]
  40b602:	inc    esp
  40b603:	lea    esi,[eax-0x7f]
  40b606:	retf   
  40b607:	xchg   BYTE PTR [edx+0x7c],al
  40b60a:	out    0xe7,al
  40b60c:	pop    esi
  40b60d:	mov    ds:0xca364a4a,eax
  40b612:	sub    cl,al
  40b614:	stc    
  40b615:	cmc    
  40b616:	adc    ebx,ebp
  40b618:	mov    al,ds:0x36591066
  40b61d:	jne    0x40b606
  40b61f:	and    esi,DWORD PTR [ebx+ebx*2]
  40b622:	or     al,BYTE PTR [edx+ecx*2-0x281c7ef9]
  40b629:	mov    cl,0xf5
  40b62b:	xchg   esi,eax
  40b62c:	stos   BYTE PTR es:[edi],al
  40b62d:	test   dl,cl
  40b62f:	ins    DWORD PTR es:[edi],dx
  40b630:	bound  edx,QWORD PTR [esi-0x5]
  40b633:	mov    ebx,0x578392a7
  40b638:	jecxz  0x40b678
  40b63a:	ins    BYTE PTR es:[edi],dx
  40b63b:	push   0x47
  40b63d:	and    al,0xbd
  40b63f:	and    al,0xff
  40b641:	push   edi
  40b642:	dec    edx
  40b643:	jae    0x40b69a
  40b645:	popa   
  40b646:	fdivr  QWORD PTR [eax+0x73]
  40b649:	jle    0x40b6ac
  40b64b:	push   esp
  40b64c:	sub    esi,DWORD PTR [eax+0x7]
  40b64f:	mov    al,ds:0xf03c05aa
  40b654:	daa    
  40b655:	push   ss
  40b656:	sbb    eax,0xf5642747
  40b65b:	cs std 
  40b65d:	adc    ch,BYTE PTR [eax-0x14531bce]
  40b663:	sbb    eax,0x933b7a90
  40b668:	or     BYTE PTR [ebx-0x3e],dl
  40b66b:	jnp    0x40b689
  40b66d:	outs   dx,DWORD PTR ds:[esi]
  40b66e:	fisub  WORD PTR [ebp-0x3b]
  40b671:	ss ret 
  40b673:	or     bl,BYTE PTR [edi-0x1f]
  40b676:	dec    esi
  40b677:	mov    BYTE PTR [edi],bl
  40b679:	test   bh,bh
  40b67b:	pop    ebp
  40b67c:	mov    bh,0xcf
  40b67e:	xor    al,0x54
  40b680:	(bad)  
  40b681:	out    0x24,eax
  40b683:	aad    0x4
  40b685:	js     0x40b671
  40b687:	and    DWORD PTR [eax-0x6e],0xef50d1f4
  40b68e:	mov    al,0xa1
  40b690:	or     bl,BYTE PTR [edx]
  40b692:	gs ins DWORD PTR es:[edi],dx
  40b694:	ror    BYTE PTR [esi+0x314ec55],0x3d
  40b69b:	jge    0x40b6bc
  40b69d:	adc    DWORD PTR [ebx],edi
  40b69f:	retf   
  40b6a0:	cmp    ebx,0xffffff9c
  40b6a3:	dec    ebp
  40b6a4:	and    al,0xf2
  40b6a6:	jge    0x40b685
  40b6a8:	js     0x40b695
  40b6aa:	in     al,dx
  40b6ab:	data16 sbb BYTE PTR [esi-0x22bc63d2],al
  40b6b2:	dec    esi
  40b6b3:	inc    esi
  40b6b4:	rol    BYTE PTR [ecx],cl
  40b6b6:	div    esi
  40b6b8:	fwait
  40b6b9:	addr16 pop edi
  40b6bb:	(bad)  
  40b6bc:	(bad)  
  40b6bd:	sar    BYTE PTR [edx+0x6a],cl
  40b6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6c1:	test   eax,0x84385b7a
  40b6c6:	pandn  mm0,mm7
  40b6c9:	bound  esi,QWORD PTR [ecx-0x5ffb0e78]
  40b6cf:	in     eax,0x85
  40b6d1:	test   eax,0xa19fba28
  40b6d6:	outs   dx,DWORD PTR ds:[esi]
  40b6d7:	lods   al,BYTE PTR ds:[esi]
  40b6d8:	mov    ds:0xdeac71c3,al
  40b6dd:	mov    esp,es
  40b6df:	dec    esp
  40b6e0:	stos   DWORD PTR es:[edi],eax
  40b6e1:	mov    ah,0x8a
  40b6e3:	xchg   DWORD PTR [edi+0x1d],esp
  40b6e6:	jbe    0x40b752
  40b6e8:	inc    edi
  40b6e9:	jmp    0x6cd0be10
  40b6ee:	fs loope 0x40b67d
  40b6f1:	inc    ebx
  40b6f2:	packsswb mm3,QWORD PTR [ebx-0x4ace44ed]
  40b6f9:	(bad)  
  40b6fa:	mov    edx,0xcc3f08e5
  40b6ff:	add    eax,0x522da1
  40b704:	mov    eax,ds:0x5e902a63
  40b709:	ins    BYTE PTR es:[edi],dx
  40b70a:	cmp    BYTE PTR [edi+0x3f2355f8],dh
  40b710:	lahf   
  40b711:	mov    DWORD PTR [esp+ebx*8+0x740435e],esp
  40b718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b719:	cmp    BYTE PTR [edi],ah
  40b71b:	and    al,0x73
  40b71d:	mov    bl,BYTE PTR [edx+0x35ea9e54]
  40b723:	and    al,0x2a
  40b725:	test   BYTE PTR [ebp-0x19bc2906],dh
  40b72b:	inc    edi
  40b72c:	or     ebp,DWORD PTR [eax-0x21]
  40b72f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b730:	jo     0x40b79a
  40b732:	out    dx,al
  40b733:	fisub  DWORD PTR [ecx+0x76]
  40b736:	add    DWORD PTR [ebp+0x3],esp
  40b739:	and    eax,0x23dc62b2
  40b73e:	in     al,dx
  40b73f:	ins    BYTE PTR es:[edi],dx
  40b740:	retf   
  40b741:	add    esi,DWORD PTR [edx]
  40b743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b744:	test   al,0xba
  40b746:	mov    al,0x36
  40b748:	in     eax,dx
  40b749:	add    dh,bl
  40b74b:	ret    
  40b74c:	inc    edx
  40b74d:	jmp    0x40b77f
  40b74f:	push   ebx
  40b750:	(bad)  
  40b751:	fidivr WORD PTR [esi]
  40b753:	or     eax,0xcfb5115b
  40b758:	in     al,dx
  40b759:	and    eax,0x631463e8
  40b75e:	(bad)  
  40b75f:	outs   dx,BYTE PTR ds:[esi]
  40b760:	sub    esi,DWORD PTR ds:0x673049b
  40b766:	mov    ds:0xd5ccd524,al
  40b76b:	cmp    DWORD PTR [ebx+0x6c],edx
  40b76e:	out    0xaa,eax
  40b770:	aaa    
  40b771:	aad    0x3f
  40b773:	pop    ebx
  40b774:	outs   dx,DWORD PTR ds:[esi]
  40b775:	and    ebx,DWORD PTR [edi]
  40b777:	aam    0xba
  40b779:	sbb    ah,al
  40b77b:	inc    edx
  40b77c:	push   edi
  40b77d:	shl    DWORD PTR [ebx],0xd3
  40b780:	(bad)  
  40b781:	jecxz  0x40b7af
  40b783:	std    
  40b784:	stos   DWORD PTR es:[edi],eax
  40b785:	ins    BYTE PTR es:[edi],dx
  40b786:	into   
  40b787:	dec    esi
  40b788:	jge    0x40b78f
  40b78a:	aad    0xa8
  40b78c:	or     esp,DWORD PTR [ecx-0x62]
  40b78f:	adc    esp,DWORD PTR [esi-0x2b]
  40b792:	jno    0x40b717
  40b794:	fwait
  40b795:	div    BYTE PTR [ebp+0x7c]
  40b798:	sbb    al,0xc1
  40b79a:	xchg   ebx,eax
  40b79b:	ja     0x40b79c
  40b79d:	fiadd  DWORD PTR [ebx+ecx*2]
  40b7a0:	clc    
  40b7a1:	repnz iret 
  40b7a3:	repz xor dl,BYTE PTR [esi+0x41]
  40b7a7:	or     al,0x20
  40b7a9:	je     0x40b744
  40b7ab:	xchg   esp,eax
  40b7ac:	xchg   DWORD PTR [esi-0x6b3a0445],ecx
  40b7b2:	daa    
  40b7b3:	cmp    DWORD PTR [esi+0x6a],0x2abdb124
  40b7ba:	loop   0x40b73d
  40b7bc:	dec    ebp
  40b7bd:	cli    
  40b7be:	push   esp
  40b7bf:	xchg   ebp,eax
  40b7c0:	adc    DWORD PTR ds:0xace84e9e,0x330a33fc
  40b7ca:	sub    al,bl
  40b7cc:	mov    al,0x3a
  40b7ce:	call   0x49571808
  40b7d3:	stc    
  40b7d4:	lds    esi,FWORD PTR [ebp+0x4f48818]
  40b7da:	jae    0x40b809
  40b7dc:	adc    dl,BYTE PTR [ebx]
  40b7de:	jno    0x40b7a5
  40b7e0:	jecxz  0x40b7a2
  40b7e2:	mov    dl,0xd3
  40b7e4:	mov    eax,ds:0xd7e5d4de
  40b7e9:	xor    BYTE PTR ds:[eax],bh
  40b7ec:	addr16 sbb cl,ah
  40b7ef:	mov    al,0x1b
  40b7f1:	lods   al,BYTE PTR ds:[esi]
  40b7f2:	leave  
  40b7f3:	loope  0x40b7f8
  40b7f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f6:	inc    edi
  40b7f7:	xchg   DWORD PTR [edx-0x74cf0884],ebp
  40b7fd:	pop    edx
  40b7fe:	fcomp  QWORD PTR [edx+edx*2-0x27]
  40b802:	test   eax,0x3e985621
  40b807:	(bad)  
  40b808:	and    al,0x6f
  40b80a:	sub    DWORD PTR [esi+edx*4-0x6655cd80],esp
  40b811:	dec    esp
  40b812:	dec    esi
  40b813:	or     DWORD PTR [esp+ebx*8+0x644b91bd],eax
  40b81a:	fst    QWORD PTR [edx]
  40b81c:	daa    
  40b81d:	jmp    0x40b7a6
  40b81f:	stc    
  40b820:	cmp    DWORD PTR [eax-0x1b8b68c9],esp
  40b826:	push   ebp
  40b827:	xlat   BYTE PTR ds:[ebx]
  40b828:	cmp    ecx,eax
  40b82a:	mov    edx,0xe2a72549
  40b82f:	push   ecx
  40b830:	pop    esp
  40b831:	(bad)  
  40b832:	and    bh,BYTE PTR [ebx]
  40b834:	pop    ebp
  40b835:	cdq    
  40b836:	loope  0x40b83b
  40b838:	ror    DWORD PTR [ebx-0x91a0e77],1
  40b83e:	das    
  40b83f:	outs   dx,DWORD PTR ds:[esi]
  40b840:	fild   QWORD PTR [edx-0x67]
  40b843:	cmp    ah,BYTE PTR [esi+0x4]
  40b846:	mov    WORD PTR [esi+0x430deb85],gs
  40b84c:	fsubr  DWORD PTR [edi+0x7]
  40b84f:	and    ecx,DWORD PTR ds:0xa432c301
  40b855:	xchg   ecx,eax
  40b856:	fcom   DWORD PTR ds:0x4f5c6d7c
  40b85c:	mov    esp,0xd45384fe
  40b861:	jecxz  0x40b7fd
  40b863:	pop    ebx
  40b864:	mov    edi,0x8c4881b2
  40b869:	jo     0x40b8d9
  40b86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b86c:	mov    eax,esp
  40b86e:	add    eax,0x9fd9b930
  40b873:	pop    edi
  40b874:	hlt    
  40b875:	pop    edi
  40b876:	lods   al,BYTE PTR ds:[esi]
  40b877:	sbb    BYTE PTR [edi],al
  40b879:	lds    ebx,FWORD PTR [edi+0x6752445f]
  40b87f:	xchg   ecx,eax
  40b880:	out    dx,al
  40b881:	push   0xffffffa2
  40b883:	push   ebp
  40b884:	sbb    BYTE PTR [ecx],0x1b
  40b887:	and    al,0x63
  40b889:	add    ecx,DWORD PTR [edx]
  40b88b:	cdq    
  40b88c:	call   0x7ebd:0xa93bbcb0
  40b893:	pusha  
  40b894:	call   0xe2b4:0x4de7a79d
  40b89b:	rcl    DWORD PTR [ebx-0xb],1
  40b89e:	gs inc esp
  40b8a0:	outs   dx,BYTE PTR ds:[esi]
  40b8a1:	xor    BYTE PTR [eax+0xe],bh
  40b8a4:	jne    0x40b844
  40b8a6:	std    
  40b8a7:	fs cmp al,0x43
  40b8aa:	xor    DWORD PTR [ebp+0x6f250519],esp
  40b8b0:	cmp    eax,esi
  40b8b2:	fstp   st(7)
  40b8b4:	or     edi,DWORD PTR [edi-0x3f2c410f]
  40b8ba:	and    edx,DWORD PTR [edi-0xf60a6eb]
  40b8c0:	dec    ecx
  40b8c1:	sti    
  40b8c2:	sti    
  40b8c3:	je     0x40b8fe
  40b8c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8c6:	imul   esi,DWORD PTR [esp+edi*2+0x7d],0xffffffbf
  40b8cb:	dec    ebp
  40b8cc:	xchg   ebp,eax
  40b8cd:	xchg   ebx,eax
  40b8ce:	pop    ecx
  40b8cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8d0:	push   esi
  40b8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d2:	jbe    0x40b92f
  40b8d4:	push   ecx
  40b8d5:	popf   
  40b8d6:	js     0x40b901
  40b8d8:	inc    eax
  40b8d9:	jp     0x40b94c
  40b8db:	cmc    
  40b8dc:	nop
  40b8dd:	test   DWORD PTR [edi-0x567419d8],ecx
  40b8e3:	dec    ecx
  40b8e4:	mov    ebx,0xc7125f10
  40b8e9:	dec    ebp
  40b8ea:	cli    
  40b8eb:	ret    0x7a8e
  40b8ee:	pop    ebx
  40b8ef:	popa   
  40b8f0:	adc    BYTE PTR [edx],bh
  40b8f2:	mov    ds:0xa7be6a0d,eax
  40b8f7:	not    DWORD PTR [eax-0x38]
  40b8fa:	out    dx,eax
  40b8fb:	loope  0x40b93c
  40b8fd:	pop    ebx
  40b8fe:	adc    edi,DWORD PTR [edx]
  40b900:	ret    
  40b901:	fld    QWORD PTR [ecx]
  40b903:	push   esp
  40b904:	sub    edx,DWORD PTR [ebx+0x10]
  40b907:	imul   ebx,ebp,0x6e
  40b90a:	xchg   edx,eax
  40b90b:	repz dec edi
  40b90d:	retf   0xfcec
  40b910:	push   ss
  40b911:	std    
  40b912:	and    al,BYTE PTR [ecx+esi*4+0x2]
  40b916:	aad    0xbe
  40b918:	jp     0x40b943
  40b91a:	pop    ebp
  40b91b:	jp     0x40b945
  40b91d:	sub    BYTE PTR [eax+0x70],cl
  40b920:	sar    DWORD PTR [edi],1
  40b922:	rcl    DWORD PTR [ebp-0x38542711],0x5a
  40b929:	stc    
  40b92a:	jne    0x40b8d0
  40b92c:	mov    ebp,0xa937a42b
  40b931:	jno    0x40b911
  40b933:	mov    ebx,esp
  40b935:	jecxz  0x40b91b
  40b937:	jbe    0x40b963
  40b939:	jge    0x40b928
  40b93b:	sbb    cl,BYTE PTR [esi-0x347bff6]
  40b941:	sub    DWORD PTR [ecx+ebp*8],esi
  40b944:	mov    ?,WORD PTR [ebx+0x6924d123]
  40b94a:	inc    esi
  40b94b:	push   ecx
  40b94c:	mov    esp,0x23f4bb9a
  40b951:	and    DWORD PTR [ecx],edx
  40b953:	jbe    0x40b93d
  40b955:	jp     0x40b974
  40b957:	add    DWORD PTR [ebx],edx
  40b959:	cdq    
  40b95a:	and    ecx,DWORD PTR [ebx-0xcbb0c71]
  40b960:	outs   dx,BYTE PTR ds:[esi]
  40b961:	xchg   ecx,eax
  40b962:	jp     0x40b9dd
  40b964:	mov    eax,0x8906f497
  40b969:	es push eax
  40b96b:	jg     0x40b8ee
  40b96d:	sti    
  40b96e:	add    DWORD PTR [ebx+edx*1],0xffffffe0
  40b972:	xchg   ebx,eax
  40b973:	mov    ds,WORD PTR [edi+ecx*2]
  40b976:	(bad)  
  40b977:	shl    DWORD PTR [eax*8+0x19308c20],0xb1
  40b97f:	in     eax,dx
  40b980:	jno    0x40b9a4
  40b982:	cli    
  40b983:	rcl    ah,0x8a
  40b986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b987:	enter  0x5c73,0xa8
  40b98b:	ds mov dh,0x1
  40b98e:	mov    WORD PTR [ebx+ebp*8+0x2],?
  40b992:	mov    bh,0xb7
  40b994:	add    al,0xb5
  40b996:	push   edx
  40b997:	iret   
  40b998:	and    DWORD PTR [eax],ebx
  40b99a:	jle    0x40ba0e
  40b99c:	jo     0x40b928
  40b99e:	jmp    0xa47d:0x6b92efed
  40b9a5:	jecxz  0x40ba02
  40b9a7:	sbb    eax,0xa2ba6f3b
  40b9ac:	push   0x3d027120
  40b9b1:	fcmovnbe st,st(6)
  40b9b3:	loope  0x40b962
  40b9b5:	call   0xa298fe1c
  40b9ba:	retf   0x918d
  40b9bd:	add    DWORD PTR [edx+ecx*4],eax
  40b9c0:	or     BYTE PTR [ecx],0xbd
  40b9c3:	iret   
  40b9c4:	int3   
  40b9c5:	pusha  
  40b9c6:	loop   0x40ba1f
  40b9c8:	aas    
  40b9c9:	add    eax,0x9c742a1a
  40b9ce:	jle    0x40b9bd
  40b9d0:	jno    0x40b97c
  40b9d2:	dec    esi
  40b9d3:	cld    
  40b9d4:	es mov esi,0x6164bfdf
  40b9da:	and    ecx,eax
  40b9dc:	inc    edx
  40b9dd:	lahf   
  40b9de:	lock iret 
  40b9e0:	dec    eax
  40b9e1:	xor    al,BYTE PTR [esi]
  40b9e3:	jns    0x40b977
  40b9e5:	pop    esp
  40b9e6:	mov    dl,0xeb
  40b9e8:	jmp    0x40b97a
  40b9ea:	xor    eax,0x333adb62
  40b9ef:	inc    edi
  40b9f0:	stos   DWORD PTR es:[edi],eax
  40b9f1:	jp     0x40b990
  40b9f3:	adc    al,0xab
  40b9f5:	(bad)  
  40b9f6:	push   esi
  40b9f7:	nop
  40b9f8:	lods   eax,DWORD PTR ds:[esi]
  40b9f9:	int    0x56
  40b9fb:	sub    al,0xad
  40b9fd:	ja     0x40ba0f
  40b9ff:	es mov ecx,0x99653166
  40ba05:	loopne 0x40ba77
  40ba07:	shl    BYTE PTR [ebx],cl
  40ba09:	pop    edi
  40ba0a:	pop    ecx
  40ba0b:	aaa    
  40ba0c:	retf   0x5e3c
  40ba0f:	push   esp
  40ba10:	(bad)  
  40ba11:	(bad)  
  40ba12:	adc    cl,BYTE PTR [ecx+0x6a]
  40ba15:	mov    eax,ds:0x2d68ec09
  40ba1a:	dec    esi
  40ba1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1c:	push   edi
  40ba1d:	or     DWORD PTR [ebx-0x3d67bb11],0xfffffff5
  40ba24:	cmp    eax,0xd484ba31
  40ba29:	mov    ebx,0x7485aa24
  40ba2e:	out    0x43,eax
  40ba30:	test   DWORD PTR [eax-0x50aa8265],0x28ec165
  40ba3a:	and    DWORD PTR [edx+ebp*1-0x279b12cf],ebx
  40ba41:	inc    edi
  40ba42:	leave  
  40ba43:	fcmovnb st,st(0)
  40ba45:	pop    esi
  40ba46:	in     eax,0x55
  40ba48:	arpl   WORD PTR [ebp+0x59],sp
  40ba4b:	jb     0x40bab6
  40ba4d:	enter  0x2134,0xdc
  40ba51:	pop    ds
  40ba52:	mov    cl,al
  40ba54:	hlt    
  40ba55:	dec    eax
  40ba56:	mov    ebx,0xfc0c96ea
  40ba5b:	lahf   
  40ba5c:	xchg   esi,eax
  40ba5d:	pop    es
  40ba5e:	js     0x40ba20
  40ba60:	and    DWORD PTR [eax-0x598183fc],ebx
  40ba66:	shl    ah,0x27
  40ba69:	jnp    0x40ba6e
  40ba6b:	(bad)  
  40ba6c:	jle    0x40badf
  40ba6e:	or     esp,DWORD PTR ds:0x589d069f
  40ba74:	(bad)  
  40ba75:	mov    ds:0x3a8b7400,eax
  40ba7a:	cmp    eax,0xf0f677aa
  40ba7f:	xchg   edi,eax
  40ba80:	int3   
  40ba81:	push   esi
  40ba82:	call   0x4b1a:0x55095be8
  40ba89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8a:	jb     0x40ba70
  40ba8c:	adc    al,0xec
  40ba8e:	mov    ds:0x1e319167,al
  40ba93:	sbb    al,0xb
  40ba95:	dec    edi
  40ba96:	das    
  40ba97:	dec    esp
  40ba98:	cli    
  40ba99:	cmp    eax,0x41986366
  40ba9e:	(bad)  
  40ba9f:	retf   0x8f0a
  40baa2:	cwde   
  40baa3:	adc    DWORD PTR [edx+0x386147b3],esi
  40baa9:	mov    cl,0x94
  40baab:	clc    
  40baac:	data16 mov bl,0x1f
  40baaf:	fcomp  QWORD PTR [ebx-0x62e52f13]
  40bab5:	and    eax,0xd951249a
  40baba:	xchg   esi,eax
  40babb:	call   0x7a6e8e12
  40bac0:	dec    ebp
  40bac1:	out    0xc3,al
  40bac3:	xchg   ebp,eax
  40bac4:	mov    ss,WORD PTR [ecx-0xfd16867]
  40baca:	out    0x65,al
  40bacc:	push   0x857858b6
  40bad1:	loope  0x40bac8
  40bad3:	pop    esp
  40bad4:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40bad6:	mov    DWORD PTR [esi+edx*1+0x59],0x55f0841d
  40bade:	dec    edx
  40badf:	xlat   BYTE PTR ds:[ebx]
  40bae0:	and    eax,0x597bf6f2
  40bae5:	or     dh,BYTE PTR [eax+ecx*2-0x2ab8c562]
  40baec:	add    DWORD PTR [eax],0x95aa28cd
  40baf2:	inc    edx
  40baf3:	std    
  40baf4:	pmulhuw mm1,QWORD PTR [edi+0x24]
  40baf8:	sub    eax,0xb6c7fde0
  40bafd:	fist   DWORD PTR [esi+0x38]
  40bb00:	add    ecx,DWORD PTR [edi+ebp*4-0x2d760d7f]
  40bb07:	loop   0x40baa3
  40bb09:	push   0x1737e765
  40bb0e:	scas   eax,DWORD PTR es:[edi]
  40bb0f:	lea    esi,[eax]
  40bb11:	sti    
  40bb12:	push   ds
  40bb13:	test   esp,esi
  40bb15:	jmp    0x8b1767d8
  40bb1a:	adc    al,0xed
  40bb1c:	(bad)
  40bb1f:	pushf  
  40bb20:	pop    ss
  40bb21:	xor    al,0xb8
  40bb23:	sbb    BYTE PTR [esi+0x458f6850],dl
  40bb29:	call   0x9da3:0x7db662e3
  40bb30:	test   al,0x85
  40bb32:	push   ebx
  40bb33:	addps  xmm1,XMMWORD PTR [ecx+0x3714fd3a]
  40bb3a:	dec    edi
  40bb3b:	gs addr16 inc esi
  40bb3e:	out    dx,eax
  40bb3f:	retf   0xf1bb
  40bb42:	fild   QWORD PTR [edx-0x1f]
  40bb45:	adc    DWORD PTR ds:[edi+ebx*4],0xfffffffd
  40bb4a:	mov    ds:0xcf41b565,al
  40bb4f:	jns    0x40bb45
  40bb51:	mov    DWORD PTR [esi+esi*2+0x466c294e],esp
  40bb58:	not    BYTE PTR [esi-0x56]
  40bb5b:	int    0xb6
  40bb5d:	je     0x40bb48
  40bb5f:	cli    
  40bb60:	fstp   st(5)
  40bb62:	sbb    DWORD PTR [ebx+0x59],esp
  40bb65:	rcl    cl,cl
  40bb67:	mov    eax,ds:0x5823e5e8
  40bb6c:	out    0x7e,eax
  40bb6e:	and    dh,BYTE PTR [edi]
  40bb70:	outs   dx,BYTE PTR ds:[esi]
  40bb71:	cmp    ebp,DWORD PTR [ebp-0x6367eff3]
  40bb77:	mov    DWORD PTR [eax],ebx
  40bb79:	pop    ebx
  40bb7a:	into   
  40bb7b:	inc    eax
  40bb7c:	popf   
  40bb7d:	movsx  esi,WORD PTR [edx-0xf]
  40bb81:	int3   
  40bb82:	out    dx,eax
  40bb83:	xor    ebx,esp
  40bb85:	adc    BYTE PTR [ebp+0x46],dl
  40bb88:	and    ebx,DWORD PTR ds:0xfb0e0c47
  40bb8e:	push   0x1f
  40bb90:	add    ecx,edi
  40bb92:	pop    ecx
  40bb93:	pop    esp
  40bb94:	retf   
  40bb95:	or     DWORD PTR [edi+0x5b376a1],ebp
  40bb9b:	cdq    
  40bb9c:	arpl   WORD PTR ds:0x550ac621,di
  40bba2:	popa   
  40bba3:	fdiv   DWORD PTR [ebx-0x5a19fcac]
  40bba9:	sbb    al,0xaf
  40bbab:	iret   
  40bbac:	xor    ah,bh
  40bbae:	data16 or al,0x13
  40bbb1:	fistp  DWORD PTR [ecx+0x4b]
  40bbb4:	cs scas al,BYTE PTR es:[edi]
  40bbb6:	and    al,0xa6
  40bbb8:	cmp    bh,al
  40bbba:	inc    ecx
  40bbbb:	fstp   TBYTE PTR [ebx+0x63]
  40bbbe:	lock and eax,0xe75c36c0
  40bbc4:	sti    
  40bbc5:	daa    
  40bbc6:	mov    al,0xf
  40bbc8:	repnz sbb al,0xe6
  40bbcb:	or     al,0x83
  40bbcd:	mov    esp,0x7cbf69ee
  40bbd2:	arpl   WORD PTR [esi+edx*4+0x20d6b3bc],si
  40bbd9:	xchg   ebp,eax
  40bbda:	stos   WORD PTR es:[edi],ax
  40bbdc:	xchg   edi,eax
  40bbdd:	dec    edx
  40bbde:	mov    edi,0x3d16d369
  40bbe3:	and    ecx,edx
  40bbe5:	mov    ds:0x21b6a25d,al
  40bbea:	aad    0x77
  40bbec:	dec    eax
  40bbed:	push   edi
  40bbee:	std    
  40bbef:	aas    
  40bbf0:	xchg   esi,eax
  40bbf1:	ins    BYTE PTR es:[edi],dx
  40bbf2:	pusha  
  40bbf3:	adc    edx,ebp
  40bbf5:	xchg   BYTE PTR [edx-0xf],bl
  40bbf8:	mov    ch,0xdc
  40bbfa:	jl     0x40bc33
  40bbfc:	clc    
  40bbfd:	lods   al,BYTE PTR ds:[esi]
  40bbfe:	clc    
  40bbff:	sbb    al,0x73
  40bc01:	popa   
  40bc02:	dec    ebx
  40bc03:	bound  esp,QWORD PTR [ecx+0x6d]
  40bc06:	push   ebx
  40bc07:	je     0x40bc10
  40bc09:	ret    0xa41c
  40bc0c:	dec    esi
  40bc0d:	clc    
  40bc0e:	sub    ebx,DWORD PTR [ecx-0x6bdef627]
  40bc14:	sahf   
  40bc15:	inc    ebp
  40bc16:	cmp    DWORD PTR [edx-0x352da68a],0x5f
  40bc1d:	push   es
  40bc1e:	adc    al,0x83
  40bc20:	rcl    BYTE PTR [ebx+0x7b3acd37],cl
  40bc26:	xor    eax,0xd8cc0aa
  40bc2b:	add    BYTE PTR [ecx-0x5f],cl
  40bc2e:	fbld   TBYTE PTR ds:0x16105a4b
  40bc34:	jb     0x40bc4b
  40bc36:	in     al,0xa5
  40bc38:	mov    ebx,0x289eb6e6
  40bc3d:	stc    
  40bc3e:	iret   
  40bc3f:	aaa    
  40bc40:	pusha  
  40bc41:	iret   
  40bc42:	inc    edx
  40bc43:	xchg   edi,eax
  40bc44:	lahf   
  40bc45:	mov    cl,0x26
  40bc47:	cmp    DWORD PTR [edx],ebp
  40bc49:	retf   0x1d6c
  40bc4c:	adc    eax,DWORD PTR [edx+0x620eb3bd]
  40bc52:	xchg   ebx,eax
  40bc53:	pop    ecx
  40bc54:	mov    edi,0x110eedae
  40bc59:	xchg   ebx,eax
  40bc5a:	sub    BYTE PTR [eax+0x5e],cl
  40bc5d:	push   ss
  40bc5e:	mov    eax,ds:0x86b03f73
  40bc63:	cli    
  40bc64:	mov    ebx,0x27a0f7cf
  40bc69:	dec    edx
  40bc6a:	mov    ch,0xe7
  40bc6c:	mov    al,0x74
  40bc6e:	fidiv  DWORD PTR [edx-0x270b4627]
  40bc74:	adc    ch,BYTE PTR ds:0xbf286046
  40bc7a:	pop    edi
  40bc7b:	xchg   DWORD PTR [ecx+eiz*2-0x3ac615e3],esi
  40bc82:	test   eax,0x324fae9b
  40bc87:	popa   
  40bc88:	mov    ecx,0x2c26314
  40bc8d:	pusha  
  40bc8e:	and    al,0xee
  40bc90:	cmp    BYTE PTR [ebp+0x6],al
  40bc93:	arpl   bp,sp
  40bc95:	add    ebp,esp
  40bc97:	loope  0x40bcce
  40bc99:	aad    0xa
  40bc9b:	mov    DWORD PTR [esi],edi
  40bc9d:	(bad)  
  40bc9e:	adc    ecx,eax
  40bca0:	frstor [ebx+eiz*4]
  40bca3:	(bad)  
  40bca5:	je     0x40bcd1
  40bca7:	push   edi
  40bca8:	adc    eax,0xe0ccb3fa
  40bcad:	mov    cs,WORD PTR [edx-0x6225e742]
  40bcb3:	xor    edi,edx
  40bcb5:	(bad)  
  40bcb6:	cmp    al,0xe4
  40bcb8:	lahf   
  40bcb9:	pop    ebx
  40bcba:	gs inc esp
  40bcbc:	push   es
  40bcbd:	inc    ebx
  40bcbe:	fbld   TBYTE PTR [eax+0x40]
  40bcc1:	frstor [esi+0x66]
  40bcc4:	int    0xb7
  40bcc6:	jo     0x40bd37
  40bcc8:	mov    bh,BYTE PTR [edi]
  40bcca:	push   eax
  40bccb:	mov    ebp,0x7b5c9629
  40bcd0:	or     al,0x1e
  40bcd2:	jp     0x40bce5
  40bcd4:	daa    
  40bcd5:	fistp  DWORD PTR [edi+esi*1]
  40bcd8:	mov    ebp,0xe0a3e60c
  40bcdd:	imul   edx,DWORD PTR [ebx+0x278f8f03],0xffffffa6
  40bce4:	in     eax,dx
  40bce5:	or     BYTE PTR [eax+0x3b84acca],dl
  40bceb:	xchg   edx,eax
  40bcec:	retf   0xb1c5
  40bcef:	aad    0xd0
  40bcf1:	jno    0x40bd2c
  40bcf3:	jmp    0x9302:0x6e904487
  40bcfa:	loopne 0x40bd72
  40bcfc:	sub    DWORD PTR [eax],esi
  40bcfe:	cmp    DWORD PTR [ebp+0x72],0x45
  40bd02:	loopne 0x40bcb7
  40bd04:	xor    al,0x59
  40bd06:	cmp    cx,WORD PTR [edi]
  40bd09:	jp     0x40bcc5
  40bd0b:	or     bh,bh
  40bd0d:	loope  0x40bd78
  40bd0f:	jmp    0x40bd49
  40bd11:	mov    BYTE PTR [eax+0xd],al
  40bd14:	sub    BYTE PTR [edi+0x17],ah
  40bd17:	mov    dl,0xeb
  40bd19:	(bad)  
  40bd1b:	inc    edx
  40bd1c:	stos   DWORD PTR es:[edi],eax
  40bd1d:	push   esp
  40bd1e:	mov    ch,0xb5
  40bd20:	mov    eax,0xb06ded58
  40bd25:	cld    
  40bd26:	sar    DWORD PTR [edi-0x514c1b9],0x73
  40bd2d:	push   eax
  40bd2e:	js     0x40bd31
  40bd30:	mov    edx,0x7f2db5bb
  40bd35:	xchg   esi,eax
  40bd36:	xchg   edi,eax
  40bd37:	cs popa 
  40bd39:	ret    
  40bd3a:	sbb    ebp,DWORD PTR [ebx]
  40bd3c:	jmp    0xc28d2e9d
  40bd41:	adc    al,0xe
  40bd43:	push   ebp
  40bd44:	mov    eax,ds:0xfc633c46
  40bd49:	push   esi
  40bd4a:	mov    ebx,0x393d9f11
  40bd4f:	or     al,BYTE PTR [eax]
  40bd51:	mov    BYTE PTR [ebp+0x6afee1fa],al
  40bd57:	mov    BYTE PTR [eax-0x7d1b1dde],al
  40bd5d:	loope  0x40bd2d
  40bd5f:	mov    DWORD PTR [ecx],edx
  40bd61:	and    eax,0x66a50069
  40bd66:	mov    al,0xbd
  40bd68:	fstp   DWORD PTR [esi-0x378667e7]
  40bd6e:	aam    0x89
  40bd70:	cmc    
  40bd71:	cdq    
  40bd72:	sub    dh,BYTE PTR [esi]
  40bd74:	pushf  
  40bd75:	mov    ecx,0x8ccb5ad0
  40bd7a:	test   BYTE PTR [ebp+0x3ff68f64],ch
  40bd80:	dec    edi
  40bd81:	les    ebx,FWORD PTR [ebx+0x8]
  40bd84:	addr16 mov ch,0xb2
  40bd87:	(bad)  
  40bd88:	push   esi
  40bd89:	lahf   
  40bd8a:	test   BYTE PTR [ecx+edi*8+0x274b230d],dl
  40bd91:	in     eax,dx
  40bd92:	dec    esp
  40bd93:	sbb    esp,DWORD PTR [edx]
  40bd95:	lods   eax,DWORD PTR ds:[esi]
  40bd96:	setl   BYTE PTR [edi-0x31]
  40bd9a:	inc    ebx
  40bd9b:	shr    DWORD PTR [edx+0x43],0x1f
  40bd9f:	sbb    eax,0x3d2aa07e
  40bda4:	nop
  40bda5:	or     al,0x2b
  40bda7:	push   esi
  40bda8:	out    0x9c,eax
  40bdaa:	jmp    0xa22f:0x6de36602
  40bdb1:	in     al,0xc9
  40bdb3:	out    0x8d,al
  40bdb5:	pop    ebx
  40bdb6:	xor    edx,DWORD PTR [ebx]
  40bdb8:	hlt    
  40bdb9:	call   edx
  40bdbb:	in     al,0x8b
  40bdbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdbe:	xor    ebp,ecx
  40bdc0:	imul   ecx,DWORD PTR [eax+0x664844f0],0xe
  40bdc7:	push   ss
  40bdc8:	rcl    BYTE PTR ds:0x50c43898,0x38
  40bdcf:	aam    0x21
  40bdd1:	pop    ebx
  40bdd2:	cmp    al,0xa3
  40bdd4:	add    al,0x7
  40bdd6:	xor    eax,0x855c74f8
  40bddb:	test   eax,0x3c0cf4d0
  40bde0:	add    esi,DWORD PTR [ebp+0x6c]
  40bde3:	sbb    dl,ch
  40bde5:	push   0x3
  40bde7:	dec    edx
  40bde8:	sub    bl,BYTE PTR [edx]
  40bdea:	lds    ebx,FWORD PTR [esp+ebp*8]
  40bded:	imul   ecx,DWORD PTR [ebp+0x4c],0x2f78546d
  40bdf4:	sar    BYTE PTR [esi-0x3c],cl
  40bdf7:	int    0xa4
  40bdf9:	into   
  40bdfa:	aad    0x3c
  40bdfc:	mov    BYTE PTR [ecx+0x6c13b55c],bl
  40be02:	mov    eax,ds:0x8f320868
  40be07:	test   DWORD PTR [ebx-0x64],0xe157b163
  40be0e:	pop    ss
  40be0f:	stos   BYTE PTR es:[edi],al
  40be10:	mov    BYTE PTR [ebx+0x17],bh
  40be13:	push   ebx
  40be14:	pushf  
  40be15:	out    dx,al
  40be16:	xchg   BYTE PTR [ebx+0x7f7e20ad],ah
  40be1c:	ret    
  40be1d:	sub    ebp,DWORD PTR ds:0x48160564
  40be23:	jecxz  0x40be23
  40be25:	in     eax,0xd5
  40be27:	mov    ds,WORD PTR [edx-0x12e598d4]
  40be2d:	xchg   ecx,eax
  40be2e:	fs sbb bh,ch
  40be31:	push   ebp
  40be32:	lds    edi,FWORD PTR [ebx+0x64]
  40be35:	fwait
  40be36:	jnp    0x40bdd6
  40be38:	inc    ebp
  40be39:	adc    al,0x44
  40be3b:	fld    DWORD PTR [ebp+eax*4-0x74f3f2ec]
  40be42:	jl     0x40be3f
  40be44:	adc    eax,DWORD PTR [ebp-0x1401841d]
  40be4a:	loopne 0x40be3e
  40be4c:	rcl    DWORD PTR [ecx+edi*4+0x1f],cl
  40be50:	int3   
  40be51:	mov    esp,0x1a56e01b
  40be56:	fwait
  40be57:	sub    bh,BYTE PTR [edx-0xa]
  40be5a:	dec    esp
  40be5b:	mov    bl,0xb8
  40be5d:	mov    WORD PTR ds:0xdb880b1e,fs
  40be63:	or     DWORD PTR gs:[esi],ebx
  40be66:	rcl    DWORD PTR ds:0x8a11721a,0xdf
  40be6d:	push   edx
  40be6e:	push   ecx
  40be6f:	adc    BYTE PTR [esi],bl
  40be71:	out    dx,eax
  40be72:	xchg   DWORD PTR [eax+0x38df9b7c],ebx
  40be78:	jne    0x40bef9
  40be7a:	jmp    0x40be70
  40be7c:	and    eax,0xc241beaa
  40be81:	add    al,0xb0
  40be83:	rcr    DWORD PTR [ebp-0xcec546c],0x58
  40be8a:	scas   al,BYTE PTR es:[edi]
  40be8b:	cdq    
  40be8c:	fimul  WORD PTR [ebp+ecx*4+0x4c9b8b6e]
  40be93:	pavgw  mm6,QWORD PTR [ecx+0x1515aff7]
  40be9a:	popa   
  40be9b:	std    
  40be9c:	adc    al,0xd9
  40be9e:	push   ss
  40be9f:	push   cs
  40bea0:	or     BYTE PTR [ecx-0x7f],cl
  40bea3:	loope  0x40be67
  40bea5:	pop    ss
  40bea6:	mov    ecx,0x83fe8f4c
  40beab:	cmp    DWORD PTR [eax+0x63],ebx
  40beae:	jmp    0x157d3b4f
  40beb3:	nop
  40beb4:	ja     0x40be46
  40beb6:	mov    ?,WORD PTR [edi+0x222a81c4]
  40bebc:	xchg   DWORD PTR [esi],eax
  40bebe:	pop    edx
  40bebf:	popa   
  40bec0:	jne    0x40be93
  40bec2:	xor    BYTE PTR [esi],ch
  40bec4:	icebp  
  40bec5:	and    eax,0x976fa769
  40beca:	dec    ebp
  40becb:	stos   BYTE PTR es:[edi],al
  40becc:	mov    al,0xb9
  40bece:	or     al,dl
  40bed0:	pop    ds
  40bed1:	mov    al,0x25
  40bed3:	stc    
  40bed4:	fs sub eax,0x1778afc5
  40beda:	scas   eax,DWORD PTR es:[edi]
  40bedb:	cli    
  40bedc:	mov    dl,0x6c
  40bede:	aad    0x81
  40bee0:	push   ebp
  40bee1:	ins    BYTE PTR es:[edi],dx
  40bee2:	test   BYTE PTR [eax],0x42
  40bee5:	in     eax,dx
  40bee6:	add    esp,esp
  40bee8:	pushf  
  40bee9:	dec    edx
  40beea:	fsin   
  40beec:	les    ebx,FWORD PTR [eax-0x7d]
  40beef:	outs   dx,BYTE PTR ds:[esi]
  40bef0:	loop   0x40bf66
  40bef2:	add    edi,edx
  40bef4:	cdq    
  40bef5:	push   esp
  40bef6:	ret    
  40bef7:	fidivr WORD PTR [ecx*1-0x22dbf9a6]
  40befe:	mov    ebp,edx
  40bf00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf01:	(bad)  
  40bf02:	call   0xd196f6fa
  40bf07:	mov    eax,0xbfa313b9
  40bf0c:	jb     0x40bf67
  40bf0e:	fimul  DWORD PTR [ebx+0x1d1068c5]
  40bf14:	mov    ah,0x32
  40bf16:	sahf   
  40bf17:	mov    ebp,0x98381f9a
  40bf1c:	jnp    0x40bead
  40bf1e:	lds    ebx,FWORD PTR ds:0x1551c237
  40bf24:	arpl   WORD PTR [ecx+0x2e295434],bp
  40bf2a:	pop    ecx
  40bf2b:	xor    al,BYTE PTR [ecx+0x74]
  40bf2e:	mov    ah,0x11
  40bf30:	jno    0x40bf69
  40bf32:	int    0x24
  40bf34:	cmp    cl,cl
  40bf36:	idiv   DWORD PTR [edi+0x1e770799]
  40bf3c:	mov    ds:0xdd41a0ee,eax
  40bf41:	xchg   esi,eax
  40bf42:	popa   
  40bf43:	call   0xb082c6b4
  40bf48:	mov    ?,WORD PTR [ecx+0x74]
  40bf4b:	arpl   WORD PTR [ebp-0x3df06467],di
  40bf51:	adc    bh,ch
  40bf53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf54:	shr    BYTE PTR [edi+0x2c815d5f],1
  40bf5a:	jnp    0x40bf74
  40bf5c:	and    eax,0xb9357888
  40bf61:	cmp    BYTE PTR [esi-0x43],ah
  40bf64:	in     eax,0xdf
  40bf66:	pop    es
  40bf67:	ret    
  40bf68:	repz icebp 
  40bf6a:	dec    esp
  40bf6b:	or     al,0xfb
  40bf6d:	dec    edi
  40bf6e:	dec    ebx
  40bf6f:	nop
  40bf70:	sub    eax,0x36cbaa
  40bf75:	retf   
  40bf76:	xor    DWORD PTR [ecx+0x35],edi
  40bf79:	in     al,0x8e
  40bf7b:	or     ch,dl
  40bf7d:	mul    BYTE PTR [esi+0x4169c15b]
  40bf83:	push   ebp
  40bf84:	dec    esp
  40bf85:	adc    eax,0xcd18fd3f
  40bf8a:	jmp    0x604bda01
  40bf8f:	(bad)  
  40bf90:	fistp  WORD PTR [eax-0x1c]
  40bf93:	mov    BYTE PTR [ecx+0x56],0x56
  40bf97:	data16 clc 
  40bf99:	jns    0x40bf68
  40bf9b:	inc    edx
  40bf9c:	test   edx,0x7548b7e4
  40bfa2:	sbb    eax,0x23de9b3c
  40bfa7:	mov    bl,0x13
  40bfa9:	and    al,0x36
  40bfab:	sbb    DWORD PTR [ecx+esi*2],ecx
  40bfae:	pushf  
  40bfaf:	or     DWORD PTR [ecx],0xffffffc7
  40bfb2:	and    eax,0x704a3e02
  40bfb7:	mov    edx,0x2752c07f
  40bfbc:	xchg   ecx,eax
  40bfbd:	mov    ds:0xd5dcb068,eax
  40bfc2:	xor    DWORD PTR [ebx],eax
  40bfc4:	xor    dl,BYTE PTR [ecx-0x71]
  40bfc7:	add    eax,0xad630408
  40bfcc:	cmp    al,0x7d
  40bfce:	rcl    bh,cl
  40bfd0:	pop    ebp
  40bfd1:	pushf  
  40bfd2:	or     bh,BYTE PTR [ecx]
  40bfd4:	lahf   
  40bfd5:	sbb    al,0x35
  40bfd7:	shl    BYTE PTR [esi-0x59],1
  40bfda:	add    DWORD PTR [eax+0x1c42b70b],edi
  40bfe0:	repnz mov ds:0x8b9166b3,al
  40bfe6:	ror    DWORD PTR [edi-0xfe8be3],cl
  40bfec:	mov    ebp,DWORD PTR [edx+0x47946f1d]
  40bff2:	sbb    ebp,edx
  40bff4:	xor    eax,0xaefe0e32
  40bff9:	mov    bh,0x2d
  40bffb:	inc    ebp
  40bffc:	pop    esi
  40bffd:	xchg   ebp,eax
  40bffe:	addr16 dec edx
  40c000:	cli    
  40c001:	mov    al,BYTE PTR [ebp-0x7834bf59]
  40c007:	sbb    eax,DWORD PTR [esi+0x47e0e145]
  40c00d:	adc    eax,0xdc3d8ae1
  40c012:	in     eax,dx
  40c013:	push   esp
  40c014:	repnz push ss
  40c016:	jae    0x40bfd0
  40c018:	ins    DWORD PTR es:[edi],dx
  40c019:	idiv   DWORD PTR [edx-0x19c0782f]
  40c01f:	ss lock popa 
  40c022:	or     BYTE PTR [eax+0x79],bh
  40c025:	jge    0x40c09c
  40c027:	xchg   edi,eax
  40c028:	inc    ecx
  40c029:	iret   
  40c02a:	es add ebp,ebx
  40c02d:	jb     0x40bfec
  40c02f:	pop    edi
  40c030:	push   0x3590f3cf
  40c035:	cwde   
  40c036:	mov    ecx,0x725a2476
  40c03b:	dec    ebx
  40c03c:	jnp    0x40bfc4
  40c03e:	inc    ecx
  40c03f:	inc    ebp
  40c040:	dec    edx
  40c041:	pop    edi
  40c042:	imul   ecx,ebp,0x13cb0fd2
  40c048:	std    
  40c049:	test   BYTE PTR [ebp+0x4364b8b5],dh
  40c04f:	ss jne 0x40c028
  40c052:	pop    ds
  40c053:	ins    DWORD PTR es:[edi],dx
  40c054:	xchg   ecx,eax
  40c055:	out    0xe4,eax
  40c057:	or     esi,DWORD PTR [edx]
  40c059:	mov    DWORD PTR [edx],ebx
  40c05b:	and    esp,DWORD PTR [esi]
  40c05d:	ins    DWORD PTR es:[edi],dx
  40c05e:	and    ecx,DWORD PTR [ebx]
  40c060:	push   esi
  40c061:	repz test eax,0xeff4a510
  40c067:	ins    BYTE PTR es:[edi],dx
  40c068:	aad    0x9b
  40c06a:	pusha  
  40c06b:	fidivr WORD PTR [edx+0x1d]
  40c06e:	push   cs
  40c06f:	and    al,0xfc
  40c071:	js     0x40c08f
  40c073:	mov    bh,dh
  40c075:	hlt    
  40c076:	es push esi
  40c078:	mov    bl,0x68
  40c07a:	cmp    dl,BYTE PTR [eax-0x47]
  40c07d:	add    DWORD PTR ds:0x4f459fc9,0xffffffdf
  40c084:	sub    ch,0x6a
  40c087:	xchg   BYTE PTR [ebp+ebp*8+0x5149336a],ah
  40c08e:	mov    ah,0xd3
  40c090:	js     0x40c040
  40c092:	pushf  
  40c093:	and    eax,0xc8cb11dd
  40c098:	sub    BYTE PTR ds:0xc24e7427,dl
  40c09e:	push   ebp
  40c09f:	xchg   ecx,eax
  40c0a0:	into   
  40c0a1:	sar    BYTE PTR [esi+eiz*1-0x760dcd2d],cl
  40c0a8:	mov    esp,0x33500824
  40c0ad:	js     0x40c110
  40c0af:	dec    edx
  40c0b0:	fcmove st,st(5)
  40c0b2:	(bad)  
  40c0b3:	xor    edi,DWORD PTR [ecx]
  40c0b5:	add    al,0x32
  40c0b7:	push   esp
  40c0b8:	and    bh,BYTE PTR [edx+eax*2+0x50]
  40c0bc:	sahf   
  40c0bd:	in     eax,0x2
  40c0bf:	aam    0x6b
  40c0c1:	push   ss
  40c0c2:	popf   
  40c0c3:	std    
  40c0c4:	or     ecx,DWORD PTR [edx-0x32]
  40c0c7:	std    
  40c0c8:	call   0x5831:0x1dbb5d6c
  40c0cf:	push   cs
  40c0d0:	or     BYTE PTR [edi+0x51952231],bh
  40c0d6:	retf   0xe54a
  40c0d9:	in     eax,0x44
  40c0db:	push   ebx
  40c0dc:	into   
  40c0dd:	leave  
  40c0de:	pop    eax
  40c0df:	scas   eax,DWORD PTR es:[edi]
  40c0e0:	jmp    0x4a10:0x723b0cc5
  40c0e7:	jl     0x40c0c8
  40c0e9:	aam    0xa9
  40c0eb:	mov    dl,0x6b
  40c0ed:	adc    al,0x90
  40c0ef:	in     eax,0xa3
  40c0f1:	add    ebx,DWORD PTR [ebp-0x1e41be15]
  40c0f7:	icebp  
  40c0f8:	pop    ss
  40c0f9:	ror    DWORD PTR [ebx+0x1f],cl
  40c0fc:	xchg   edx,eax
  40c0fd:	pop    ebp
  40c0fe:	xchg   DWORD PTR [esi],ebx
  40c100:	push   cs
  40c101:	pop    esp
  40c102:	mov    fs,WORD PTR [edi-0x7b]
  40c105:	js     0x40c0b4
  40c107:	adc    DWORD PTR [ebp+0x57],ebx
  40c10a:	test   DWORD PTR [esp+ebp*8-0x11],0xc55dfc43
  40c112:	fild   DWORD PTR [ecx*8+0x35f5adcd]
  40c119:	jg     0x40c0b2
  40c11b:	aad    0xc9
  40c11d:	mov    ds:0x97d3e15e,al
  40c122:	mov    ?,WORD PTR [eax-0x78]
  40c125:	sub    DWORD PTR [ebx+0x7],ebp
  40c128:	pop    esi
  40c129:	adc    esp,0x58f911c1
  40c12f:	add    BYTE PTR [ebx+0x44],0x19
  40c133:	aas    
  40c134:	mov    bh,0x28
  40c136:	cmp    bl,dl
  40c138:	jl     0x40c197
  40c13a:	dec    esp
  40c13b:	pop    esp
  40c13c:	stos   DWORD PTR es:[edi],eax
  40c13d:	mov    ch,0x25
  40c13f:	call   0x290c7cb6
  40c144:	and    al,0xf5
  40c146:	shl    BYTE PTR [ecx],0xf2
  40c149:	pop    ecx
  40c14a:	pushf  
  40c14b:	and    BYTE PTR [edx+edi*2],ch
  40c14e:	mov    ds:0xecc9e891,al
  40c153:	aam    0xc9
  40c155:	xchg   esp,eax
  40c156:	sbb    ecx,eax
  40c158:	sub    ecx,DWORD PTR [ebx*4+0x202c970b]
  40c15f:	pop    ebp
  40c160:	sbb    esp,0xffffffa6
  40c163:	pop    ecx
  40c164:	scas   eax,DWORD PTR es:[edi]
  40c165:	sub    ebx,DWORD PTR [edx]
  40c167:	outs   dx,DWORD PTR ds:[esi]
  40c168:	in     al,dx
  40c169:	mov    gs,WORD PTR [ecx]
  40c16b:	(bad)  
  40c16d:	cli    
  40c16e:	push   ds
  40c16f:	(bad)  
  40c171:	es pop esp
  40c173:	sahf   
  40c174:	out    dx,eax
  40c175:	mov    cl,ch
  40c177:	jb     0x40c1e7
  40c179:	aas    
  40c17a:	jmp    0x5802:0xc533d2bf
  40c181:	popf   
  40c182:	xor    eax,0x4249ec81
  40c187:	jle    0x40c1b9
  40c189:	xor    eax,0x22aee67f
  40c18e:	mov    ebx,0x1473d128
  40c193:	fisttp DWORD PTR [edi-0x16]
  40c196:	into   
  40c197:	pop    ds
  40c198:	cmp    esp,0x64e1874f
  40c19e:	arpl   WORD PTR [ebp+ebp*4-0x170b7045],cx
  40c1a5:	sub    eax,0x34851a39
  40c1aa:	mov    WORD PTR [esi+0x41fa1166],?
  40c1b0:	and    DWORD PTR [ebx-0x32],0xffffffce
  40c1b4:	jmp    0x40c173
  40c1b6:	test   ebx,ecx
  40c1b8:	add    BYTE PTR [edi],bl
  40c1ba:	and    BYTE PTR [esi],ch
  40c1bc:	pop    ebp
  40c1bd:	mov    ecx,0x53614402
  40c1c2:	cmp    al,BYTE PTR [edi+0x5d645a8f]
  40c1c8:	ror    edi,0x9e
  40c1cb:	scas   eax,DWORD PTR es:[edi]
  40c1cc:	inc    ecx
  40c1cd:	jb     0x40c15b
  40c1cf:	dec    ebx
  40c1d0:	ret    0x8697
  40c1d3:	repnz cmp al,0xb2
  40c1d6:	mov    dl,0x5f
  40c1d8:	aaa    
  40c1d9:	push   ss
  40c1da:	in     al,0xe0
  40c1dc:	sahf   
  40c1dd:	mov    cl,0xf2
  40c1df:	cmp    esp,ebp
  40c1e1:	xor    eax,0xebb5b544
  40c1e6:	ret    0x4ec7
  40c1e9:	adc    ebp,DWORD PTR [di-0x43ff]
  40c1ee:	jb     0x40c1f2
  40c1f0:	js     0x40c263
  40c1f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f4:	push   ss
  40c1f5:	jno    0x40c21b
  40c1f7:	dec    ecx
  40c1f8:	and    DWORD PTR [ebx-0xa605846],edx
  40c1fe:	jge    0x40c22a
  40c200:	dec    ebx
  40c201:	pop    ebx
  40c202:	mov    dh,0xa4
  40c204:	fisttp QWORD PTR [ecx]
  40c206:	bound  esp,QWORD PTR [ebx-0x54]
  40c209:	in     eax,dx
  40c20a:	jb     0x40c217
  40c20c:	and    bh,BYTE PTR [edi]
  40c20e:	pop    di
  40c210:	bound  esp,QWORD PTR [ecx]
  40c212:	clc    
  40c213:	cmp    al,0x9d
  40c215:	int3   
  40c216:	mov    bh,0x5b
  40c218:	inc    ebp
  40c219:	fist   WORD PTR [ebp+0x314ba1cd]
  40c21f:	mov    esi,ebx
  40c221:	lea    edi,[ebp+0x73]
  40c224:	ror    DWORD PTR [eax],1
  40c226:	sub    cl,0x13
  40c229:	push   0xffffff8d
  40c22b:	ja     0x40c1d7
  40c22d:	icebp  
  40c22e:	scas   eax,DWORD PTR es:[edi]
  40c22f:	ja     0x40c22c
  40c231:	lods   al,BYTE PTR ds:[esi]
  40c232:	adc    al,0x86
  40c234:	scas   eax,DWORD PTR es:[edi]
  40c235:	cmp    ebx,edi
  40c237:	add    esp,ecx
  40c239:	push   cs
  40c23a:	lock or DWORD PTR [ecx+0x61],edx
  40c23e:	jmp    0x40c28a
  40c240:	xor    BYTE PTR [ebp-0x55],bh
  40c243:	sub    eax,0xfada75ae
  40c248:	jg     0x40c28b
  40c24a:	jnp    0x40c29b
  40c24c:	mov    dh,BYTE PTR [ecx+0x75]
  40c24f:	fild   QWORD PTR [edi]
  40c251:	inc    ebp
  40c252:	int    0xe0
  40c254:	and    BYTE PTR [esi+0x3],dh
  40c257:	sbb    DWORD PTR [ebx],0xffffff9d
  40c25a:	out    0x60,al
  40c25c:	and    bh,ch
  40c25e:	std    
  40c25f:	mov    DWORD PTR [edi],edi
  40c261:	cmp    ah,BYTE PTR [edx]
  40c263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c264:	or     al,0xb7
  40c266:	jp     0x40c29d
  40c268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c269:	pop    esi
  40c26a:	icebp  
  40c26b:	push   esi
  40c26c:	std    
  40c26d:	ret    0x95de
  40c270:	jle    0x40c2d8
  40c272:	pop    eax
  40c273:	imul   edx,ecx,0x29
  40c276:	test   eax,0xb444fe06
  40c27b:	push   ebp
  40c27c:	sahf   
  40c27d:	or     BYTE PTR [edx+0x5d93a0c],dl
  40c283:	cmc    
  40c284:	dec    ebx
  40c285:	cmp    ah,bl
  40c287:	xor    eax,0xca7773a1
  40c28c:	adc    bl,bh
  40c28e:	cmp    edx,DWORD PTR [esi-0x20]
  40c291:	mov    al,ds:0x19e35334
  40c296:	mov    ds:0xcbf5b86f,eax
  40c29b:	out    0xa7,eax
  40c29d:	push   ecx
  40c29e:	sbb    al,0x99
  40c2a0:	add    BYTE PTR [eax],0x82
  40c2a3:	and    eax,eax
  40c2a5:	cmp    BYTE PTR [ebp-0x70f73a84],0x86
  40c2ac:	pop    ds
  40c2ad:	pop    esp
  40c2ae:	cmp    al,0xe2
  40c2b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2b1:	mov    ah,0xd7
  40c2b3:	not    DWORD PTR [edi]
  40c2b5:	addr16 loope 0x40c2a7
  40c2b8:	aas    
  40c2b9:	and    bl,BYTE PTR [edi]
  40c2bb:	aad    0xa3
  40c2bd:	inc    eax
  40c2be:	xlat   BYTE PTR ds:[ebx]
  40c2bf:	mov    bl,0x96
  40c2c1:	lea    esp,[ecx+0x4849112b]
  40c2c7:	lea    ebx,[esi-0x945f7f4]
  40c2cd:	add    edx,DWORD PTR [eax-0x2d]
  40c2d0:	jg     0x40c25c
  40c2d2:	adc    al,0x43
  40c2d4:	stc    
  40c2d5:	in     eax,0x8a
  40c2d7:	rcr    BYTE PTR [ecx+0x5],1
  40c2da:	ja     0x40c26c
  40c2dc:	xchg   esi,eax
  40c2dd:	sbb    ebx,DWORD PTR [ebp-0x7db2bc6b]
  40c2e3:	and    ah,dl
  40c2e5:	pop    es
  40c2e6:	push   0x72a01dd
  40c2eb:	jno    0x40c30c
  40c2ed:	mov    edi,0xee32df45
  40c2f2:	xor    al,0x8b
  40c2f4:	sbb    edx,esi
  40c2f6:	aam    0x47
  40c2f8:	std    
  40c2f9:	into   
  40c2fa:	xor    BYTE PTR [eax-0x10085d7e],dh
  40c300:	loop   0x40c380
  40c302:	inc    esp
  40c303:	enter  0xa8bb,0x5a
  40c307:	mov    al,0x33
  40c309:	test   al,0x23
  40c30b:	and    ecx,DWORD PTR [ebx+0x7e8161d2]
  40c311:	pop    eax
  40c312:	or     al,0x3e
  40c314:	jb     0x40c2fe
  40c316:	pop    es
  40c317:	dec    edi
  40c318:	imul   edi,DWORD PTR [ebx-0x4d5f6301],0xec4f99cc
  40c322:	push   edi
  40c323:	push   0xf
  40c325:	pop    ecx
  40c326:	retf   
  40c327:	sbb    eax,0xf56e4d2d
  40c32c:	mov    cl,0x69
  40c32e:	mov    esi,0xefcd5b14
  40c333:	push   eax
  40c334:	xchg   edx,eax
  40c335:	push   cs
  40c336:	stc    
  40c337:	call   0x5bb75102
  40c33c:	dec    ebx
  40c33d:	imul   edi,DWORD PTR ds:0x6be49522,0xfffffff3
  40c344:	je     0x40c313
  40c346:	std    
  40c347:	fistp  WORD PTR [edx+0x62]
  40c34a:	jmp    0x1c0b6890
  40c34f:	stos   DWORD PTR es:[edi],eax
  40c350:	push   cs
  40c351:	or     al,ah
  40c353:	push   edi
  40c354:	rcl    ebx,0xab
  40c357:	pop    esi
  40c358:	push   edi
  40c359:	adc    DWORD PTR [eax+0x3fa3e1b8],edi
  40c35f:	jmp    0x3374:0xaea988bd
  40c366:	repz test DWORD PTR [edi+esi*4-0x648be967],eax
  40c36e:	icebp  
  40c36f:	mov    edi,0x8a067720
  40c374:	ja     0x40c3af
  40c376:	lea    eax,[edx+0x14ed7d26]
  40c37c:	dec    esp
  40c37d:	(bad)  
  40c37e:	(bad)  
  40c37f:	xchg   edx,eax
  40c380:	adc    BYTE PTR [ebx+0x46],bl
  40c383:	dec    esp
  40c384:	sbb    eax,0xb2e22a1b
  40c389:	dec    DWORD PTR [ebx+0x71]
  40c38c:	jmp    0x9765:0x5618f821
  40c393:	femms  
  40c395:	mov    eax,0xd16632c3
  40c39a:	mov    al,ds:0xbdc55ad3
  40c39f:	mov    esi,0x76ce3698
  40c3a4:	and    eax,0xfda7821
  40c3a9:	scas   eax,DWORD PTR es:[edi]
  40c3aa:	cmp    al,0x4a
  40c3ac:	jb     0x40c3a0
  40c3ae:	clc    
  40c3af:	scas   al,BYTE PTR es:[edi]
  40c3b0:	pop    esp
  40c3b1:	push   esi
  40c3b2:	ins    BYTE PTR es:[edi],dx
  40c3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3b4:	call   0x281a:0x1e376833
  40c3bb:	cmp    eax,0x496b8ff1
  40c3c0:	inc    ebx
  40c3c1:	enter  0x3b5c,0x81
  40c3c5:	dec    edi
  40c3c6:	inc    ebp
  40c3c7:	adc    al,0xba
  40c3c9:	xor    eax,0x8ec01554
  40c3ce:	pop    ebp
  40c3cf:	ins    DWORD PTR es:[edi],dx
  40c3d0:	(bad)  
  40c3d1:	jmp    0x53fe:0x7287ef8c
  40c3d8:	xlat   BYTE PTR ds:[ebx]
  40c3d9:	push   ds
  40c3da:	sti    
  40c3db:	pop    edx
  40c3dc:	out    dx,eax
  40c3dd:	pop    ecx
  40c3de:	jl     0x40c393
  40c3e0:	retf   0x3b33
  40c3e3:	aad    0x91
  40c3e5:	mov    cl,0x10
  40c3e7:	dec    esp
  40c3e8:	sbb    BYTE PTR [ecx],bl
  40c3ea:	rol    DWORD PTR [esi-0x6da88876],0x3c
  40c3f1:	out    0x30,eax
  40c3f3:	test   eax,0xed94c059
  40c3f8:	jbe    0x40c3a3
  40c3fa:	mov    dh,0xf9
  40c3fc:	dec    esp
  40c3fd:	mov    ds:0xc5a8ce81,eax
  40c402:	or     eax,0xd596ed98
  40c407:	mov    ch,0x1d
  40c409:	jmp    0x40c426
  40c40b:	or     ebp,DWORD PTR ds:0x5bd9d57b
  40c411:	adc    DWORD PTR [edx-0xd43aa79],ebp
  40c417:	call   0xa9c8767
  40c41c:	cmc    
  40c41d:	(bad)  
  40c41e:	in     eax,dx
  40c41f:	jmp    0x6865ef25
  40c424:	daa    
  40c425:	jnp    0x40c49c
  40c427:	pop    es
  40c428:	stc    
  40c429:	sahf   
  40c42a:	ins    DWORD PTR es:[edi],dx
  40c42b:	cmc    
  40c42c:	xor    ecx,DWORD PTR [ebp-0x7f90741d]
  40c432:	outs   dx,BYTE PTR ds:[esi]
  40c433:	mov    ah,0x34
  40c435:	jl     0x40c446
  40c437:	(bad)  
  40c438:	dec    esi
  40c439:	ror    edx,cl
  40c43b:	mov    cl,0xd
  40c43d:	(bad)  
  40c43e:	mov    edx,0x451833f1
  40c443:	repz sub DWORD PTR [eax-0x8],edx
  40c447:	fisttp QWORD PTR [ebx-0x50fdd9ef]
  40c44d:	imul   ecx,DWORD PTR [edi],0x8e67c5d7
  40c453:	dec    ecx
  40c454:	or     al,0x28
  40c456:	xor    eax,0xc9a202b6
  40c45b:	mov    ch,0x84
  40c45d:	jae    0x40c435
  40c45f:	or     bl,dl
  40c461:	mov    WORD PTR [ebx+0x630a35ff],?
  40c467:	dec    eax
  40c468:	jns    0x40c491
  40c46a:	in     al,0x6
  40c46c:	xchg   ebp,eax
  40c46d:	adc    eax,0xa198e7ad
  40c472:	xor    esi,ecx
  40c474:	push   ss
  40c475:	add    ecx,DWORD PTR [esi+0xd]
  40c478:	dec    ebp
  40c479:	ret    0x9d4
  40c47c:	push   0x5810793f
  40c481:	push   ds
  40c482:	pushf  
  40c483:	push   cs
  40c484:	fld    QWORD PTR [esi]
  40c486:	xchg   edx,eax
  40c487:	fist   WORD PTR [eax+edx*8+0x12]
  40c48b:	or     BYTE PTR [esi+0x70],dh
  40c48e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48f:	mov    BYTE PTR [ebx+0x38],dh
  40c492:	sbb    eax,0x1b89f1f8
  40c497:	push   0xf928f41b
  40c49c:	push   eax
  40c49d:	sbb    al,0x7d
  40c49f:	jp     0x40c4f4
  40c4a1:	sub    ch,BYTE PTR [eax+0x75]
  40c4a4:	enter  0x7d1c,0x46
  40c4a8:	add    cl,BYTE PTR [esp+eiz*2+0x461ebd66]
  40c4af:	jnp    0x40c44d
  40c4b1:	(bad)  
  40c4b2:	arpl   WORD PTR [eax-0x49],bx
  40c4b5:	mov    WORD PTR [ebx-0x39],ds
  40c4b8:	mov    esp,0xaf52c8fe
  40c4bd:	lds    esp,FWORD PTR [esi+0x46]
  40c4c0:	push   ebx
  40c4c1:	mov    edi,0xb5760787
  40c4c6:	xchg   esi,eax
  40c4c7:	add    al,0xe4
  40c4c9:	sub    BYTE PTR [edx],0xef
  40c4cc:	jg     0x40c51c
  40c4ce:	jo     0x40c47f
  40c4d0:	jg     0x40c473
  40c4d2:	cmp    al,0x2f
  40c4d4:	dec    ecx
  40c4d5:	xchg   DWORD PTR [eax+ecx*8-0x5],edx
  40c4d9:	out    dx,eax
  40c4da:	ficomp WORD PTR [bp+si-0x7f24]
  40c4df:	int    0x47
  40c4e1:	test   eax,0x1f344e3c
  40c4e6:	pop    edx
  40c4e7:	ja     0x40c520
  40c4e9:	mov    dh,0xdd
  40c4eb:	adc    cl,BYTE PTR [edx]
  40c4ed:	aad    0x2
  40c4ef:	jmp    0x6e9df638
  40c4f4:	or     cl,dh
  40c4f6:	jmp    0xc700:0xafb3d5d5
  40c4fd:	test   DWORD PTR [eax+0x69],ecx
  40c500:	cmp    esi,DWORD PTR [edi-0x5c]
  40c503:	mov    eax,ds:0x4808a664
  40c508:	mov    BYTE PTR [eax-0xd],cl
  40c50b:	xchg   edi,eax
  40c50c:	jnp    0x40c567
  40c50e:	or     eax,DWORD PTR [eax+0x65]
  40c511:	clc    
  40c512:	ins    BYTE PTR es:[edi],dx
  40c513:	inc    edi
  40c514:	adc    DWORD PTR [edi-0x37de4441],esp
  40c51a:	push   ebx
  40c51b:	mov    edi,0x6c4e1fc2
  40c520:	pop    ecx
  40c521:	mov    dl,0xac
  40c523:	mov    ch,0x43
  40c525:	push   cs
  40c526:	shl    BYTE PTR [edi-0x74210d30],1
  40c52c:	stc    
  40c52d:	loop   0x40c4eb
  40c52f:	add    al,0xa0
  40c531:	inc    edi
  40c532:	jmp    0x40c561
  40c534:	and    eax,0x375e3f89
  40c539:	inc    edi
  40c53a:	cmp    DWORD PTR [eax+0x4fbcccd2],0x8adf60de
  40c544:	mov    ebp,0xe5ef0dbf
  40c549:	dec    edi
  40c54a:	push   0xc506967b
  40c54f:	clc    
  40c550:	bnd jmp 0x7000d372
  40c556:	ss sub cl,ah
  40c559:	cmp    bl,dh
  40c55b:	pushf  
  40c55c:	imul   ecx,edx,0x7a5681ad
  40c562:	dec    DWORD PTR [ebp+0xb995c1f]
  40c568:	aam    0x6c
  40c56a:	sub    ah,BYTE PTR [edx-0x4abd3849]
  40c570:	push   ds
  40c571:	aas    
  40c572:	inc    edi
  40c573:	or     BYTE PTR [esp+edi*1+0x13e5056e],ch
  40c57a:	cmp    eax,0x31d52e7c
  40c57f:	mov    edi,0x59d29a7d
  40c584:	test   cl,ch
  40c586:	jo     0x40c58f
  40c588:	adc    eax,0x4c2f657e
  40c58d:	jo     0x40c524
  40c58f:	pop    esp
  40c590:	rcl    DWORD PTR [edx-0x625e0722],0xa7
  40c597:	pushf  
  40c598:	shr    DWORD PTR [esi],cl
  40c59a:	popa   
  40c59b:	nop
  40c59c:	mov    bh,0x76
  40c59e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c59f:	jnp    0x40c53c
  40c5a1:	mov    gs,WORD PTR [ecx]
  40c5a3:	add    eax,0xab7749ce
  40c5a8:	icebp  
  40c5a9:	es push ecx
  40c5ab:	and    BYTE PTR [edx+0x5b],0x4d
  40c5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b0:	out    0x82,eax
  40c5b2:	dec    esi
  40c5b3:	and    ebx,DWORD PTR [ecx+eiz*2]
  40c5b6:	loope  0x40c633
  40c5b8:	dec    eax
  40c5b9:	jo     0x40c623
  40c5bb:	cld    
  40c5bc:	push   eax
  40c5bd:	test   al,0x6c
  40c5bf:	mov    ch,0x60
  40c5c1:	xchg   ecx,eax
  40c5c2:	mov    ebp,0xca4293e5
  40c5c7:	loope  0x40c592
  40c5c9:	sub    DWORD PTR [ebx],0xffffffd2
  40c5cc:	test   DWORD PTR [eax+eiz*2+0x59892998],ebx
  40c5d3:	mov    bh,0xa0
  40c5d5:	imul   edx,DWORD PTR [esi+esi*2],0xfdeb3367
  40c5dc:	xor    bh,BYTE PTR [ecx+0x73]
  40c5df:	jae    0x40c5ee
  40c5e1:	push   edx
  40c5e2:	mov    ah,0x20
  40c5e4:	call   0xaa57:0xe622072f
  40c5eb:	gs cld 
  40c5ed:	fidivr WORD PTR [edx]
  40c5ef:	xor    al,0x30
  40c5f1:	sbb    eax,0x170f0539
  40c5f6:	jb     0x40c614
  40c5f8:	jb     0x40c65f
  40c5fa:	add    al,0x56
  40c5fc:	push   ds
  40c5fd:	push   ss
  40c5fe:	xchg   esp,eax
  40c5ff:	mov    edx,0xd5e14f07
  40c604:	mov    dh,0x17
  40c606:	mov    eax,DWORD PTR [edi]
  40c608:	xor    eax,0xf2f0bce1
  40c60d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c60e:	lea    esi,[esi-0x29]
  40c611:	je     0x40c5b3
  40c613:	sub    dh,dl
  40c615:	fcom   QWORD PTR [esi-0x74]
  40c618:	(bad)  
  40c619:	mov    bl,0x95
  40c61b:	fild   DWORD PTR [esi]
  40c61d:	mov    esi,DWORD PTR [ebp-0x1c4809bb]
  40c623:	out    0xbb,eax
  40c625:	xor    eax,0x7d47df17
  40c62a:	ret    
  40c62b:	clc    
  40c62c:	lea    ebx,[ecx]
  40c62e:	sbb    edi,ecx
  40c630:	ret    0x5afb
  40c633:	push   cs
  40c634:	mov    edx,0x8e8455c4
  40c639:	xlat   BYTE PTR ds:[ebx]
  40c63a:	mov    bh,0xa7
  40c63c:	cmp    eax,0x414d7e28
  40c641:	xchg   BYTE PTR [ebp+0x580dabcd],bh
  40c647:	call   0x1cbdf26
  40c64c:	xchg   edx,eax
  40c64d:	dec    edx
  40c64e:	xlat   BYTE PTR ds:[ebx]
  40c64f:	sub    DWORD PTR [ebp+0x2179271],ebx
  40c655:	push   eax
  40c656:	test   DWORD PTR [ebx],edi
  40c658:	jnp    0x40c6d4
  40c65a:	ins    DWORD PTR es:[edi],dx
  40c65b:	addr16 jle 0x40c641
  40c65e:	xchg   esi,eax
  40c65f:	push   eax
  40c660:	pop    ds
  40c661:	test   esi,eax
  40c663:	push   ecx
  40c664:	das    
  40c665:	cmp    esp,DWORD PTR [edi+0x4bb35b64]
  40c66b:	pop    ebx
  40c66c:	call   0x6cd2:0x24de6db1
  40c673:	mov    eax,ds:0x951eea3
  40c678:	jecxz  0x40c6d6
  40c67a:	and    DWORD PTR [edx],esp
  40c67c:	pop    ebx
  40c67d:	add    DWORD PTR [eax],0x455c7b8e
  40c683:	add    eax,DWORD PTR [edi+0x7e]
  40c686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c687:	sbb    edx,edi
  40c689:	add    eax,ebx
  40c68b:	pop    ds
  40c68c:	push   esi
  40c68d:	out    0xdc,eax
  40c68f:	(bad)  
  40c690:	ret    0x1c16
  40c693:	retf   
  40c694:	enter  0xbbe9,0xcd
  40c698:	xlat   BYTE PTR ds:[ebx]
  40c699:	jmp    0xe5d8:0x97d7890d
  40c6a0:	retf   0x9275
  40c6a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6a4:	xor    BYTE PTR [ecx-0x26],dh
  40c6a7:	mov    ebp,0x3f64ab7f
  40c6ac:	imul   edx,DWORD PTR [edi],0xffffff99
  40c6af:	or     esp,DWORD PTR [edx]
  40c6b1:	inc    esi
  40c6b2:	mov    es,WORD PTR [edi-0x4c51fec7]
  40c6b8:	inc    eax
  40c6b9:	cmp    al,ch
  40c6bb:	loopne 0x40c659
  40c6bd:	fsub   QWORD PTR [ecx+0x5b4a39b3]
  40c6c3:	repz inc esp
  40c6c5:	adc    BYTE PTR [edi],al
  40c6c7:	xlat   BYTE PTR ds:[ebx]
  40c6c8:	enter  0x7057,0x37
  40c6cc:	mov    WORD PTR [edi],?
  40c6ce:	pusha  
  40c6cf:	push   eax
  40c6d0:	sbb    al,0x9f
  40c6d2:	dec    ebp
  40c6d3:	inc    ebx
  40c6d4:	nop
  40c6d5:	add    DWORD PTR [esi-0x4569b972],esp
  40c6db:	inc    esi
  40c6dc:	ins    DWORD PTR es:[edi],dx
  40c6dd:	mov    ?,WORD PTR [ecx+0x7c]
  40c6e0:	mov    ss,esp
  40c6e2:	stc    
  40c6e3:	imul   edi,DWORD PTR [eax+0x465242c9],0x1336f172
  40c6ed:	in     al,dx
  40c6ee:	sub    DWORD PTR ds:0xb79453d1,esi
  40c6f4:	pop    edi
  40c6f5:	loop   0x40c766
  40c6f7:	outs   dx,BYTE PTR ds:[esi]
  40c6f8:	mov    ds:0x802ec29c,eax
  40c6fd:	pop    esp
  40c6fe:	mov    al,ds:0xa4e21394
  40c703:	call   0xd49a6132
  40c708:	and    eax,DWORD PTR [eax+ecx*2+0x76]
  40c70c:	stc    
  40c70d:	aam    0x97
  40c70f:	gs cld 
  40c711:	xor    BYTE PTR [ebp+0x7528d7b2],al
  40c717:	int    0x54
  40c719:	inc    esi
  40c71a:	outs   dx,DWORD PTR ds:[esi]
  40c71b:	inc    esi
  40c71c:	clc    
  40c71d:	push   edi
  40c71e:	call   0xdd1ad51
  40c723:	pop    ebp
  40c724:	leave  
  40c725:	das    
  40c726:	mov    ah,0x91
  40c728:	int    0x36
  40c72a:	mov    edx,ds
  40c72c:	pop    ebx
  40c72d:	jle    0x40c6b3
  40c72f:	cmp    eax,0xb1040745
  40c734:	je     0x40c6ca
  40c736:	daa    
  40c737:	adc    eax,0xc64d4cc6
  40c73c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73d:	sub    al,0x37
  40c73f:	pop    esi
  40c740:	div    ecx
  40c742:	inc    ecx
  40c743:	inc    ecx
  40c744:	push   edx
  40c745:	cli    
  40c746:	cmp    al,0xec
  40c748:	aam    0x7b
  40c74a:	mov    al,BYTE PTR [ebx]
  40c74c:	mov    BYTE PTR [edx-0x3d],dh
  40c74f:	pop    ebp
  40c750:	jmp    DWORD PTR [eax-0x53]
  40c753:	push   ss
  40c754:	stos   DWORD PTR es:[edi],eax
  40c755:	xlat   BYTE PTR ds:[ebx]
  40c756:	mov    dh,0xc3
  40c758:	add    BYTE PTR [eax+0x787e60b8],dl
  40c75e:	add    bl,BYTE PTR [ebx-0x1347e9d2]
  40c764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c765:	sbb    DWORD PTR [edx-0x5beba013],0xffffffc7
  40c76c:	xchg   esi,eax
  40c76d:	cmp    DWORD PTR [esi],0x9c35e534
  40c773:	jge    0x40c78f
  40c775:	ins    BYTE PTR es:[edi],dx
  40c776:	ficomp DWORD PTR [ecx-0x1ea45868]
  40c77c:	and    al,0x79
  40c77e:	or     DWORD PTR [eax-0x4d149d26],0x95fd91d1
  40c788:	arpl   WORD PTR [ecx+0x2276993b],sp
  40c78e:	repnz shl BYTE PTR [ebx],cl
  40c791:	jge    0x40c7bd
  40c793:	xchg   ebp,eax
  40c794:	or     dl,BYTE PTR [esi-0x341e26f5]
  40c79a:	mov    bl,0x4a
  40c79c:	pop    ss
  40c79d:	test   BYTE PTR [edx],cl
  40c79f:	add    eax,0x94c04071
  40c7a4:	pop    esp
  40c7a5:	jp     0x40c72a
  40c7a7:	ret    0xe6e7
  40c7aa:	jle    0x40c7bf
  40c7ac:	fdivr  QWORD PTR [ebx+0x2c40645b]
  40c7b2:	das    
  40c7b3:	push   ebx
  40c7b4:	arpl   WORD PTR ds:0x47fede4d,bp
  40c7ba:	imul   esi,ebx,0x4c1d6af1
  40c7c0:	out    dx,eax
  40c7c1:	lock mov DWORD PTR [eax-0x33e48f0f],ebx
  40c7c8:	add    al,0x56
  40c7ca:	je     0x40c847
  40c7cc:	pusha  
  40c7cd:	aad    0xcc
  40c7cf:	pop    edx
  40c7d0:	xchg   DWORD PTR [esi],ecx
  40c7d2:	sbb    dl,ah
  40c7d4:	retf   
  40c7d5:	push   ss
  40c7d6:	sub    ch,BYTE PTR [esi-0x62]
  40c7d9:	das    
  40c7da:	iret   
  40c7db:	inc    eax
  40c7dc:	int3   
  40c7dd:	sub    BYTE PTR [edi+eax*4+0x28],dl
  40c7e1:	jle    0x40c83d
  40c7e3:	push   esp
  40c7e4:	das    
  40c7e5:	jmp    FWORD PTR [ebp-0x10d378ec]
  40c7eb:	in     eax,dx
  40c7ec:	sbb    al,0x71
  40c7ee:	loop   0x40c843
  40c7f0:	(bad)  
  40c7f2:	inc    esi
  40c7f3:	pop    edi
  40c7f4:	sub    edi,DWORD PTR [ebx-0x74]
  40c7f7:	dec    BYTE PTR [edx+edi*4+0x5b656c4a]
  40c7fe:	pop    ss
  40c7ff:	mov    ds:0xe9f442bd,eax
  40c804:	mov    WORD PTR [ebx],cs
  40c806:	mov    edi,0x1e0f399a
  40c80b:	rcr    BYTE PTR [edx-0xf],1
  40c80e:	aam    0x9a
  40c810:	sbb    BYTE PTR [esi-0x869a933],0x6
  40c817:	lods   al,BYTE PTR ds:[esi]
  40c818:	pop    edi
  40c819:	jg     0x40c85a
  40c81b:	(bad)  
  40c81d:	and    al,0x56
  40c81f:	push   ss
  40c820:	addr16 jno 0x40c7db
  40c823:	iret   
  40c824:	repnz push ss
  40c826:	sub    BYTE PTR [ebp-0x29],ah
  40c829:	imul   BYTE PTR [eax]
  40c82b:	push   ebp
  40c82c:	push   ebp
  40c82d:	jle    0x40c812
  40c82f:	fild   DWORD PTR [ebx-0x48]
  40c832:	jne    0x40c839
  40c834:	cwde   
  40c835:	fistp  WORD PTR ds:0x41eebcf4
  40c83b:	cs retf 
  40c83d:	loop   0x40c846
  40c83f:	in     eax,0xdd
  40c841:	adc    ecx,DWORD PTR [edi+esi*1+0x4f]
  40c845:	jmp    0x40c86d
  40c847:	int3   
  40c848:	cmp    al,0x40
  40c84a:	xchg   edi,eax
  40c84b:	ja     0x40c807
  40c84d:	or     DWORD PTR [edi],ecx
  40c84f:	cld    
  40c850:	mov    ebx,0x9834cdb3
  40c855:	xchg   edi,eax
  40c856:	(bad)  
  40c857:	in     eax,0x66
  40c859:	inc    edi
  40c85a:	sbb    ebx,DWORD PTR [esi]
  40c85c:	and    DWORD PTR [ebp+0x6a],esi
  40c85f:	loop   0x40c849
  40c861:	jns    0x40c878
  40c863:	cmp    BYTE PTR [ebp+0x435f53e4],dh
  40c869:	add    eax,0xeda90ea8
  40c86e:	xchg   esp,eax
  40c86f:	cmp    bl,al
  40c871:	pop    esp
  40c872:	push   esp
  40c873:	cs or  edi,ebx
  40c876:	and    dl,BYTE PTR [ebx]
  40c878:	imul   esp,DWORD PTR [eax],0xea8b3829
  40c87e:	int3   
  40c87f:	dec    ebx
  40c880:	bound  ecx,QWORD PTR [edi]
  40c882:	push   ds
  40c883:	shl    DWORD PTR [edx-0x42],1
  40c886:	dec    ebp
  40c887:	aad    0x88
  40c889:	push   0xd3cbbb64
  40c88e:	inc    ecx
  40c88f:	aaa    
  40c890:	imul   ecx,DWORD PTR [edi+0x526145d],0x15
  40c897:	in     al,0xf9
  40c899:	fdivr  st,st(6)
  40c89b:	outs   dx,BYTE PTR ds:[esi]
  40c89c:	rcr    ah,1
  40c89e:	aas    
  40c89f:	lds    esp,FWORD PTR [eax+0x5b]
  40c8a2:	and    DWORD PTR [ecx+0x4b],0x3
  40c8a6:	jnp    0x40c84b
  40c8a8:	mov    bl,0x40
  40c8aa:	xchg   esi,eax
  40c8ab:	retf   
  40c8ac:	inc    esi
  40c8ad:	es sub al,0x9
  40c8b0:	adc    eax,0x6658a5c9
  40c8b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8b6:	rol    DWORD PTR [eax],0x76
  40c8b9:	adc    BYTE PTR [ebx+0xf4248ba],0x62
  40c8c0:	adc    ebp,eax
  40c8c2:	fist   DWORD PTR [edi]
  40c8c4:	cmp    edx,DWORD PTR [esi+0x79f89b75]
  40c8ca:	xor    ecx,ebx
  40c8cc:	xchg   dh,dh
  40c8ce:	mov    eax,ds:0xa01bac20
  40c8d3:	mov    edi,0x39eaf2ab
  40c8d8:	sbb    esp,DWORD PTR [eax+0x67de7420]
  40c8de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8df:	pop    ebp
  40c8e0:	pop    ebx
  40c8e1:	lock es daa 
  40c8e4:	adc    DWORD PTR [edi+0x6a],ebx
  40c8e7:	pop    edi
  40c8e8:	cmp    DWORD PTR [ebp+0x599ec15b],esp
  40c8ee:	jne    0x40c8f6
  40c8f0:	int3   
  40c8f1:	cmp    BYTE PTR [esp+ebx*8-0x6879ee0c],ah
  40c8f8:	stc    
  40c8f9:	cmp    al,BYTE PTR [ebx]
  40c8fb:	jns    0x40c8fc
  40c8fd:	and    esp,DWORD PTR [ebp-0x3d]
  40c900:	out    dx,eax
  40c901:	push   cs
  40c902:	bound  esi,QWORD PTR [esi-0x58489bb]
  40c908:	sub    BYTE PTR [esi+0x15],bh
  40c90b:	repz out 0x48,eax
  40c90e:	xor    ah,BYTE PTR [edx-0x72]
  40c911:	fdivr  st(4),st
  40c913:	sub    dl,ah
  40c915:	or     DWORD PTR [ebx+0x18af15fc],esp
  40c91b:	sub    bl,al
  40c91d:	jmp    0xc63c:0x837b304e
  40c924:	and    eax,DWORD PTR [ebx+0x6d]
  40c927:	fsub   st(5),st
  40c929:	in     eax,0x8e
  40c92b:	in     eax,dx
  40c92c:	inc    esi
  40c92d:	jl     0x40c8e3
  40c92f:	adc    al,0x47
  40c931:	mov    esi,0xb316e244
  40c936:	jnp    0x40c95f
  40c938:	cwde   
  40c939:	pop    ecx
  40c93a:	pop    ds
  40c93b:	adc    ch,ah
  40c93d:	call   0xdbe3dd67
  40c942:	pop    ds
  40c943:	adc    ebx,esp
  40c945:	(bad)  
  40c946:	mov    edx,0x65228673
  40c94b:	mov    dl,0x18
  40c94d:	mov    al,ds:0x500dbc2d
  40c952:	adc    ah,BYTE PTR [ecx*1-0x5fb369a0]
  40c959:	dec    eax
  40c95a:	cld    
  40c95b:	and    al,0x9f
  40c95d:	pop    ebp
  40c95e:	inc    eax
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax+0x66e7bd5d]
  40d00c:	push   ecx
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	inc    ebx
  40d016:	aam    0x70
  40d018:	mov    bh,0xf7
  40d01a:	test   al,0x3f
  40d01c:	sahf   
  40d01d:	vpcmpgtd ymm1,ymm3,ymm4
  40d021:	shr    BYTE PTR [eax+0xc],1
  40d024:	jg     0x40d02b
  40d026:	pop    ss
  40d027:	dec    ebp
  40d028:	das    
  40d029:	jmp    0x7937:0xe9ada116
  40d030:	pop    ds
  40d031:	pop    ss
  40d032:	test   al,0xc8
  40d034:	sbb    eax,0xe39ea95
  40d039:	pop    edx
  40d03a:	int3   
  40d03b:	inc    esi
  40d03c:	mov    DWORD PTR [ebp+0x6ed76cff],esi
  40d042:	je     0x40d041
  40d044:	daa    
  40d045:	xlat   BYTE PTR ds:[ebx]
  40d046:	bound  edx,QWORD PTR [esi-0x67daf7b1]
  40d04c:	dec    esp
  40d04d:	fwait
  40d04e:	addr16 out dx,al
  40d050:	fmul   QWORD PTR [eax+0x1fac548e]
  40d056:	mov    ebx,0x1e8a34e9
  40d05b:	mov    edi,0x9a0912cc
  40d060:	cli    
  40d061:	sub    al,0xbc
  40d063:	inc    BYTE PTR [ecx+0x55]
  40d066:	pop    esp
  40d067:	mov    eax,esp
  40d069:	pop    edi
  40d06a:	jne    0x40d004
  40d06c:	pop    ebx
  40d06d:	loop   0x40d0e7
  40d06f:	repz mov cl,BYTE PTR [ecx-0x3962f5ef]
  40d076:	sbb    bl,al
  40d078:	nop
  40d079:	bound  esi,QWORD PTR [edi-0x5c]
  40d07c:	mov    ah,0xb9
  40d07e:	xor    eax,0x49e9fc6
  40d083:	add    eax,0xd3ea31a5
  40d088:	adc    eax,0x5cab090d
  40d08d:	jmp    0x27d05105
  40d092:	leave  
  40d093:	push   ds
  40d094:	mov    esp,edx
  40d096:	mov    eax,ds:0xc857094d
  40d09b:	inc    edx
  40d09c:	jae    0x40d02d
  40d09e:	clts   
  40d0a0:	in     al,0x5d
  40d0a2:	mov    bh,0xa2
  40d0a4:	sbb    BYTE PTR [edx],ch
  40d0a6:	lods   eax,DWORD PTR gs:[esi]
  40d0a8:	cmove  esi,DWORD PTR [ecx]
  40d0ab:	icebp  
  40d0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ad:	bnd jo 0x40d0da
  40d0b0:	pop    ebx
  40d0b1:	sbb    DWORD PTR [ecx-0x26],ebp
  40d0b4:	xor    bl,bh
  40d0b6:	mov    edx,0x5a41ce97
  40d0bb:	mov    ds:0xe391ecee,al
  40d0c0:	(bad)  
  40d0c1:	js     0x40d0ea
  40d0c3:	push   cs
  40d0c4:	and    DWORD PTR [ecx],0xffffffb0
  40d0c7:	call   0xe296:0x86a9c784
  40d0ce:	call   esp
  40d0d0:	in     al,0xa6
  40d0d2:	scas   al,BYTE PTR es:[edi]
  40d0d3:	jle    0x40d092
  40d0d5:	loop   0x40d0b8
  40d0d7:	test   BYTE PTR [edx+0x58],ah
  40d0da:	dec    esp
  40d0db:	scas   al,BYTE PTR es:[edi]
  40d0dc:	loope  0x40d130
  40d0de:	cdq    
  40d0df:	(bad)  
  40d0e0:	out    dx,al
  40d0e1:	jnp    0x40d0c1
  40d0e3:	into   
  40d0e4:	fcmove st,st(1)
  40d0e6:	mov    ds:0x370ac8f7,eax
  40d0eb:	mov    ebp,0x8a6d84c2
  40d0f0:	jnp    0x40d0c9
  40d0f2:	adc    eax,0x505342e2
  40d0f7:	addr16 pusha 
  40d0f9:	and    eax,0xdf9e7c9d
  40d0fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ff:	mov    eax,ds:0x3550f4eb
  40d104:	xchg   edi,eax
  40d105:	fcmovb st,st(7)
  40d107:	inc    eax
  40d108:	pop    ecx
  40d109:	mov    ds:0xf76815,eax
  40d10e:	mov    ch,0x10
  40d110:	xchg   BYTE PTR [eax+eax*8-0x1157d14e],bh
  40d117:	in     al,dx
  40d118:	(bad)  
  40d11a:	mov    bl,0x97
  40d11c:	mov    ch,0x45
  40d11e:	add    DWORD PTR [eax+0x5b260d67],esi
  40d124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d125:	test   BYTE PTR [esi+0x10],dh
  40d128:	cmp    dh,dl
  40d12a:	loopne 0x40d0ff
  40d12c:	adc    bh,BYTE PTR [ecx+0x3e97cd52]
  40d132:	mov    edi,0xc6845ab
  40d137:	cmp    al,0xb3
  40d139:	loop   0x40d11a
  40d13b:	mov    bl,BYTE PTR [eax+esi*4]
  40d13e:	ds retf 0x3ded
  40d142:	sbb    eax,0x28a9fc9e
  40d147:	test   BYTE PTR [edx],ah
  40d149:	pmaxsw mm1,QWORD PTR [edi-0x66239e85]
  40d150:	mov    ds,WORD PTR [eax+0x23]
  40d153:	mov    gs,esi
  40d155:	sahf   
  40d156:	pusha  
  40d157:	xchg   ebx,eax
  40d158:	xchg   ecx,eax
  40d159:	sub    DWORD PTR [ebx-0x2e95db56],eax
  40d15f:	xchg   BYTE PTR [ebp-0xffe0610],ch
  40d165:	call   0x5a4b:0x1d6f3606
  40d16c:	xchg   edx,eax
  40d16d:	sbb    eax,0x9e326bdf
  40d172:	sub    eax,0x2d7f06eb
  40d177:	into   
  40d178:	and    esi,DWORD PTR [esi-0x3bc8b4f6]
  40d17e:	cli    
  40d17f:	js     0x40d156
  40d181:	xchg   DWORD PTR [edx-0x511401c6],ecx
  40d187:	pop    ebx
  40d188:	dec    ebx
  40d189:	cmp    DWORD PTR [esi+0x4f],ebp
  40d18c:	sub    BYTE PTR [edi],ch
  40d18e:	test   BYTE PTR ds:0x7724d5ff,bh
  40d194:	je     0x40d1da
  40d196:	sahf   
  40d197:	cmp    cl,cl
  40d199:	fstp   DWORD PTR gs:[eax+0x3f17d7f]
  40d1a0:	jbe    0x40d141
  40d1a2:	adc    ch,BYTE PTR [esi+eax*2+0x38]
  40d1a6:	aas    
  40d1a7:	jmp    0x40d1c2
  40d1a9:	and    BYTE PTR [esi],cl
  40d1ab:	ja     0x40d166
  40d1ad:	stos   DWORD PTR es:[edi],eax
  40d1ae:	(bad)  
  40d1af:	sub    edx,DWORD PTR [eax+0x56]
  40d1b2:	add    edx,DWORD PTR cs:[edx+0x5020d717]
  40d1b9:	mov    ch,0xf0
  40d1bb:	push   edx
  40d1bc:	inc    edx
  40d1bd:	push   ecx
  40d1be:	(bad)  
  40d1c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1c1:	int3   
  40d1c2:	jl     0x40d1de
  40d1c4:	dec    ebp
  40d1c5:	leave  
  40d1c6:	and    eax,0x58e312ba
  40d1cb:	enter  0x424f,0x52
  40d1cf:	sbb    BYTE PTR [edi+eiz*1],al
  40d1d2:	dec    edi
  40d1d3:	pop    ecx
  40d1d4:	dec    esp
  40d1d5:	test   BYTE PTR [edi-0x9aeaa5d],dh
  40d1db:	inc    eax
  40d1dc:	daa    
  40d1dd:	xchg   edi,eax
  40d1de:	cs inc ebp
  40d1e0:	jbe    0x40d24b
  40d1e2:	fsubr  st(1),st
  40d1e4:	sub    DWORD PTR [edi+0x3a],esp
  40d1e7:	add    eax,0x5710e4c4
  40d1ec:	xor    bl,dl
  40d1ee:	in     eax,dx
  40d1ef:	out    dx,al
  40d1f0:	lea    ebp,[esi]
  40d1f2:	xor    al,0x91
  40d1f4:	dec    esp
  40d1f5:	jl     0x40d254
  40d1f7:	mov    ds:0xf6d20ae5,eax
  40d1fc:	mov    BYTE PTR [ebx],cl
  40d1fe:	sbb    edx,DWORD PTR [ebp-0x4d]
  40d201:	xor    ch,0x1a
  40d204:	xor    ebx,DWORD PTR [ecx]
  40d206:	(bad)  [edi+0x6b]
  40d209:	outs   dx,DWORD PTR ds:[esi]
  40d20a:	push   eax
  40d20b:	scas   al,BYTE PTR es:[edi]
  40d20c:	add    DWORD PTR [esi+0x250fed38],esi
  40d212:	mov    ss,WORD PTR [edi+esi*8-0x12e1dd17]
  40d219:	call   0x4edd60a6
  40d21e:	mov    ebp,0x118328a8
  40d223:	mov    ch,0xe3
  40d225:	ins    BYTE PTR es:[edi],dx
  40d226:	mov    es:0x670da7a9,al
  40d22c:	xor    DWORD PTR [ecx+ecx*1-0x5],eax
  40d230:	dec    ebx
  40d231:	jge    0x40d1fc
  40d233:	or     bh,BYTE PTR [edx-0x4364b178]
  40d239:	push   ecx
  40d23a:	aaa    
  40d23b:	sbb    DWORD PTR [ebx+0x73a1782e],ebx
  40d241:	add    eax,0xa846aefb
  40d246:	mov    DWORD PTR fs:[eax-0x2cce0ed3],ebp
  40d24d:	test   bh,al
  40d24f:	add    bl,bh
  40d251:	in     al,dx
  40d252:	push   ecx
  40d253:	js     0x40d272
  40d255:	(bad)  
  40d256:	pop    esi
  40d257:	loop   0x40d287
  40d259:	mov    edi,cr4
  40d25c:	mov    ds:0xd05242f3,eax
  40d261:	or     BYTE PTR [esp+eiz*4-0x32],dh
  40d265:	arpl   WORD PTR [ebp+0x2c],dx
  40d268:	fs ret 
  40d26a:	cdq    
  40d26b:	jmp    0xdc6d5872
  40d270:	mov    ds:0x59392301,eax
  40d275:	mov    al,ds:0xc9dfc42a
  40d27a:	ja     0x40d26c
  40d27c:	nop
  40d27d:	mov    bh,0x9c
  40d27f:	iret   
  40d280:	push   0x813b8e25
  40d285:	fistp  QWORD PTR [ebp+0x3ffab328]
  40d28b:	loopne 0x40d271
  40d28d:	jo     0x40d2ae
  40d28f:	(bad)  
  40d290:	lock xor edi,DWORD PTR [esi]
  40d293:	fwait
  40d294:	adc    ch,0x52
  40d297:	aam    0xce
  40d299:	jbe    0x40d2d5
  40d29b:	mov    dl,0x8a
  40d29d:	push   edi
  40d29e:	mov    eax,0xff1bcbeb
  40d2a3:	push   cs
  40d2a4:	cdq    
  40d2a5:	mov    ds:0x1addcefd,eax
  40d2aa:	es adc eax,0x2a23e132
  40d2b0:	mov    DWORD PTR [edi-0x2e],edx
  40d2b3:	xchg   edx,eax
  40d2b4:	(bad)  
  40d2b5:	in     al,0x38
  40d2b7:	add    BYTE PTR [eax+0x3ef3ae85],dh
  40d2bd:	call   0xdecc:0x77f532db
  40d2c4:	jbe    0x40d2cc
  40d2c6:	inc    esp
  40d2c7:	out    0x80,eax
  40d2c9:	push   ds
  40d2ca:	jecxz  0x40d2e2
  40d2cc:	ret    
  40d2cd:	cwde   
  40d2ce:	pop    edi
  40d2cf:	out    0xaf,al
  40d2d1:	imul   ecx,DWORD PTR [ecx+0x787d3f26],0xffffff96
  40d2d8:	dec    esp
  40d2d9:	and    BYTE PTR [edi],dl
  40d2db:	jecxz  0x40d305
  40d2dd:	sbb    edx,DWORD PTR [eax-0x2e55a081]
  40d2e3:	xchg   esi,eax
  40d2e4:	sub    al,0xff
  40d2e6:	mov    al,0x2
  40d2e8:	push   ds
  40d2e9:	mov    ch,0x21
  40d2eb:	cwde   
  40d2ec:	pop    edi
  40d2ed:	add    al,dh
  40d2ef:	shl    DWORD PTR [eax+0x4517147e],1
  40d2f5:	add    ecx,DWORD PTR [esp+ebp*1]
  40d2f8:	stc    
  40d2f9:	push   ebx
  40d2fa:	cmp    esi,edi
  40d2fc:	lea    ebp,[ebx+0x566033c0]
  40d302:	retf   
  40d303:	push   cs
  40d304:	xor    al,BYTE PTR [ecx+ebp*2]
  40d307:	out    dx,al
  40d308:	dec    ebp
  40d309:	add    edx,DWORD PTR [ebx-0x6c4a92f3]
  40d30f:	outs   dx,DWORD PTR ds:[esi]
  40d310:	stos   DWORD PTR es:[edi],eax
  40d311:	out    dx,al
  40d312:	mov    esp,0xc79446a2
  40d317:	add    DWORD PTR [ecx-0x7a],ecx
  40d31a:	cli    
  40d31b:	mov    cl,0xc8
  40d31d:	sbb    al,0xb7
  40d31f:	(bad)  
  40d320:	aas    
  40d321:	lods   al,BYTE PTR cs:[esi]
  40d323:	(bad)  
  40d324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d325:	pop    edi
  40d326:	pop    es
  40d327:	xor    al,0xd4
  40d329:	sbb    DWORD PTR [edx+0x5a],ebp
  40d32c:	aam    0xe4
  40d32e:	push   ebp
  40d32f:	ins    DWORD PTR es:[edi],dx
  40d330:	nop
  40d331:	nop
  40d332:	push   cs
  40d333:	cwde   
  40d334:	int3   
  40d335:	rcr    BYTE PTR [edx+esi*2+0x548862d1],cl
  40d33c:	cmp    BYTE PTR [ebp-0x28a0a87f],0xcd
  40d343:	retf   0x29c5
  40d346:	fistp  DWORD PTR [eax]
  40d348:	mov    dh,BYTE PTR [edi]
  40d34a:	ins    DWORD PTR es:[edi],dx
  40d34b:	xor    DWORD PTR [esi-0x212da32],esp
  40d351:	push   esp
  40d352:	pop    DWORD PTR [eax]
  40d354:	fmul   QWORD PTR [edx+esi*8+0x5a]
  40d358:	inc    ebx
  40d359:	dec    ecx
  40d35a:	pusha  
  40d35b:	adc    DWORD PTR [eax+eax*2+0x1c],ecx
  40d35f:	push   0x337f80c0
  40d364:	xchg   BYTE PTR [esi+ecx*8-0x1f],ah
  40d368:	cmp    al,0x37
  40d36a:	into   
  40d36b:	sbb    eax,0xf292029d
  40d370:	push   ecx
  40d371:	xchg   esp,eax
  40d372:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d373:	xor    edx,0x4abf075a
  40d379:	out    0x8,eax
  40d37b:	dec    ebx
  40d37c:	adc    bl,BYTE PTR ds:0x8df2618f
  40d382:	jno    0x40d348
  40d384:	lahf   
  40d385:	cmp    BYTE PTR [ebx+0x76],ch
  40d388:	je     0x40d31d
  40d38a:	fistp  QWORD PTR [ebx-0x29]
  40d38d:	(bad)  
  40d38e:	mov    al,BYTE PTR [ebx]
  40d390:	inc    ecx
  40d391:	dec    esi
  40d392:	pop    ebp
  40d393:	adc    BYTE PTR [eax],al
  40d395:	into   
  40d396:	pusha  
  40d397:	pop    ebx
  40d398:	cmp    DWORD PTR cs:0x778d8f0b,0xffffffb0
  40d3a0:	test   eax,0xc005f234
  40d3a5:	call   0xddb9296c
  40d3aa:	sub    eax,0xca19937b
  40d3af:	aas    
  40d3b0:	xchg   ebp,eax
  40d3b1:	dec    ebp
  40d3b2:	jge    0x40d33c
  40d3b4:	ins    DWORD PTR es:[edi],dx
  40d3b5:	mov    dl,dh
  40d3b7:	and    eax,0xce479f6e
  40d3bc:	cmc    
  40d3bd:	add    al,0x94
  40d3bf:	mov    esi,0x22024f46
  40d3c4:	mov    ebp,esp
  40d3c6:	std    
  40d3c7:	mov    edx,0x28d08de8
  40d3cc:	(bad)  
  40d3cd:	cmp    bl,bl
  40d3cf:	jnp    0x40d432
  40d3d1:	out    dx,al
  40d3d2:	cmp    BYTE PTR [ebx-0x4cff0ae9],al
  40d3d8:	adc    DWORD PTR ds:0x956cbc39,esi
  40d3de:	pop    ss
  40d3df:	mov    WORD PTR ds:0x52ced3bf,cs
  40d3e5:	push   eax
  40d3e6:	xor    dl,dh
  40d3e8:	and    BYTE PTR [edi+0x320f473a],0xed
  40d3ef:	popf   
  40d3f0:	or     ebp,DWORD PTR [ecx+0x55]
  40d3f3:	cmp    DWORD PTR [esi+0x38fdc01c],0x6f
  40d3fa:	outs   dx,BYTE PTR ds:[esi]
  40d3fb:	(bad)  
  40d3fc:	or     BYTE PTR [edi+0x11],dl
  40d3ff:	fsubp  st(4),st
  40d401:	out    0x40,eax
  40d403:	popa   
  40d404:	cmp    ecx,DWORD PTR [ebx-0x75]
  40d407:	and    BYTE PTR [edi+edi*2],bh
  40d40a:	jg     0x40d3b1
  40d40c:	ins    BYTE PTR es:[edi],dx
  40d40d:	add    DWORD PTR [eax+0x760bf7ca],ecx
  40d413:	adc    DWORD PTR [eax],esi
  40d415:	add    edi,DWORD PTR [edx+0x43]
  40d418:	out    dx,al
  40d419:	loope  0x40d488
  40d41b:	lahf   
  40d41c:	mov    eax,0x1d3bb013
  40d421:	int    0xf
  40d423:	stc    
  40d424:	cs loop 0x40d457
  40d427:	mov    edi,0xbf0a5adc
  40d42c:	adc    BYTE PTR [ebx-0x6e],cl
  40d42f:	sbb    bl,ah
  40d431:	push   ebp
  40d432:	mov    al,ds:0x16698d2c
  40d437:	mov    al,ds:0xda30fa7e
  40d43c:	sub    BYTE PTR [ebp-0x5],0x98
  40d440:	aad    0x3e
  40d442:	inc    ecx
  40d443:	sbb    eax,0x58d3bcc6
  40d448:	pop    ebp
  40d449:	mov    edx,0xee078618
  40d44e:	mov    ds:0xf999fda5,al
  40d453:	inc    ecx
  40d454:	div    DWORD PTR [edx-0x10de5bc4]
  40d45a:	push   ds
  40d45b:	add    cl,BYTE PTR [esi-0x12ec4db6]
  40d461:	shl    DWORD PTR [edi],cl
  40d463:	std    
  40d464:	fs inc ebx
  40d466:	dec    esi
  40d467:	sbb    al,0xf5
  40d469:	xchg   ebx,eax
  40d46a:	aam    0x7
  40d46c:	cld    
  40d46d:	repz arpl WORD PTR [eax+0x41d95dbb],bp
  40d474:	test   dh,dh
  40d476:	add    BYTE PTR [ebp+0x47],ah
  40d479:	and    BYTE PTR [esp+eiz*8-0x2c],0xa1
  40d47e:	fsubr  st,st(6)
  40d480:	xchg   esi,eax
  40d481:	popf   
  40d482:	fistp  WORD PTR [esi-0x149b2bb9]
  40d488:	inc    eax
  40d489:	inc    ebx
  40d48a:	icebp  
  40d48b:	adc    al,0x8
  40d48d:	and    ebp,ebx
  40d48f:	fild   DWORD PTR [edx-0x23]
  40d492:	loop   0x40d490
  40d494:	mov    ds:0x2fd4939b,al
  40d499:	mov    edi,DWORD PTR [ebx-0x73756c3d]
  40d49f:	pushf  
  40d4a0:	adc    al,0xc6
  40d4a2:	mov    eax,ds:0xb2e494f1
  40d4a7:	jl     0x40d481
  40d4a9:	jle    0x40d485
  40d4ab:	fs (bad) 
  40d4ae:	mov    al,ds:0xf55f5d2f
  40d4b3:	dec    ebx
  40d4b4:	rcr    BYTE PTR [edx],0x59
  40d4b7:	cmp    BYTE PTR [esi-0x674b5737],ch
  40d4bd:	jp     0x40d51b
  40d4bf:	addr16 data16 (bad) 
  40d4c2:	mov    esp,0xcc4eb26c
  40d4c7:	in     al,0xd0
  40d4c9:	mov    bl,0xc1
  40d4cb:	push   0xc09028af
  40d4d0:	cmp    ch,BYTE PTR ds:[ebx-0x5510aed]
  40d4d7:	pop    ecx
  40d4d8:	inc    esp
  40d4d9:	push   0xffffffec
  40d4db:	sub    al,0x7a
  40d4dd:	leave  
  40d4de:	test   eax,0xa7d7106
  40d4e3:	mov    bh,0x25
  40d4e5:	cli    
  40d4e6:	push   ecx
  40d4e7:	xor    edi,DWORD PTR [ebx+0x238e1448]
  40d4ed:	(bad)  
  40d4ee:	cdq    
  40d4ef:	add    esi,DWORD PTR [ecx+0x7bdac7c7]
  40d4f5:	mov    ebp,0xade542ca
  40d4fa:	fidiv  WORD PTR [ebp-0x73]
  40d4fd:	or     BYTE PTR [esi+0x6],dh
  40d500:	push   ebx
  40d501:	test   ebx,eax
  40d503:	std    
  40d504:	push   edx
  40d505:	les    ecx,FWORD PTR [edx+eax*4-0x58b63a41]
  40d50c:	push   ss
  40d50d:	push   0x25
  40d50f:	cmp    al,0xd2
  40d511:	rcr    DWORD PTR [eax],cl
  40d513:	mov    ecx,0xa454f0b
  40d518:	loop   0x40d516
  40d51a:	jmp    0x1769:0xffc0629
  40d521:	les    esi,FWORD PTR [ebp-0x318adacc]
  40d527:	or     BYTE PTR [ecx],ah
  40d529:	sar    BYTE PTR ds:0x7f257adf,0x32
  40d530:	pop    ds
  40d531:	(bad)  
  40d532:	mul    dl
  40d534:	xor    eax,0xaf3ea461
  40d539:	ja     0x40d4be
  40d53b:	mov    ecx,0xabef6400
  40d541:	jg     0x40d4d8
  40d543:	push   ds
  40d544:	pop    ss
  40d545:	sti    
  40d546:	pop    ebp
  40d547:	mov    edi,0xa9a67ac0
  40d54c:	pop    es
  40d54d:	dec    edx
  40d54e:	pop    edx
  40d54f:	push   eax
  40d550:	jnp    0x40d59d
  40d552:	xor    eax,0x3b800dd0
  40d557:	adc    cl,al
  40d559:	push   es
  40d55a:	gs xchg esi,eax
  40d55c:	inc    ebp
  40d55d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d55e:	btc    ebp,0x58
  40d562:	jge    0x40d545
  40d564:	test   edi,0x8afce761
  40d56a:	push   eax
  40d56b:	lahf   
  40d56c:	loopne 0x40d5b2
  40d56e:	out    0x3e,eax
  40d570:	lods   eax,DWORD PTR ds:[esi]
  40d571:	outs   dx,BYTE PTR ds:[esi]
  40d572:	mov    cl,0x7d
  40d574:	pop    ebx
  40d575:	or     eax,0x6b0af3c9
  40d57a:	mov    ebp,0x6658aa0d
  40d57f:	pand   mm2,mm4
  40d582:	aaa    
  40d583:	jns    0x40d5f1
  40d585:	ins    BYTE PTR es:[edi],dx
  40d586:	mov    ebx,0xd181d869
  40d58b:	pcmpgtw mm3,mm1
  40d58e:	pop    es
  40d58f:	(bad)  
  40d590:	mov    dl,0x3a
  40d592:	cmp    eax,0xdb61ef81
  40d597:	pop    edx
  40d598:	out    dx,al
  40d599:	dec    ebp
  40d59a:	cmp    al,0x3
  40d59c:	push   ss
  40d59d:	pop    bp
  40d59f:	ss ret 0xef
  40d5a3:	pop    esi
  40d5a4:	pop    ss
  40d5a5:	pushf  
  40d5a6:	inc    ecx
  40d5a7:	fmul   QWORD PTR [ecx+esi*8+0x14fbf0ab]
  40d5ae:	rcl    DWORD PTR [ecx-0x1c],0x92
  40d5b2:	jle    0x40d564
  40d5b4:	mov    edi,0xadc55e90
  40d5b9:	(bad)  
  40d5ba:	adc    al,0xd8
  40d5bc:	call   DWORD PTR [esi]
  40d5be:	(bad)  
  40d5c0:	xlat   BYTE PTR ds:[ebx]
  40d5c2:	loope  0x40d5ec
  40d5c4:	retf   0xce38
  40d5c7:	call   0x250ecd49
  40d5cc:	popa   
  40d5cd:	repnz xor ecx,DWORD PTR [ecx+0x58315d93]
  40d5d4:	xchg   edx,eax
  40d5d5:	call   0x5befdbd3
  40d5da:	sar    DWORD PTR ds:0xa153822,0x9d
  40d5e1:	sbb    al,0x29
  40d5e3:	test   eax,0x9cd5b7bd
  40d5e8:	js     0x40d630
  40d5ea:	sbb    ecx,0xffffff8a
  40d5ed:	test   ebp,eax
  40d5ef:	into   
  40d5f0:	mov    ss,WORD PTR ds:0x7179e19c
  40d5f6:	push   edi
  40d5f7:	or     al,BYTE PTR [ebp+0x10]
  40d5fa:	mov    ebp,DWORD PTR [edi-0x37cfe1ae]
  40d600:	pop    esp
  40d601:	push   ss
  40d602:	jne    0x40d58b
  40d604:	push   cs
  40d605:	jo     0x40d63c
  40d607:	popf   
  40d608:	or     edi,esp
  40d60a:	ja     0x40d667
  40d60c:	pusha  
  40d60d:	adc    ax,0x5b3d
  40d611:	and    dl,BYTE PTR [ecx-0x5a]
  40d614:	pushf  
  40d615:	bound  edx,QWORD PTR [ecx-0x101e68d]
  40d61b:	ret    0xf658
  40d61e:	add    al,BYTE PTR [ecx+0x49]
  40d621:	out    dx,al
  40d622:	add    bl,BYTE PTR [ecx-0x34]
  40d625:	shl    al,cl
  40d627:	(bad)  
  40d628:	stos   BYTE PTR es:[edi],al
  40d629:	lds    esi,FWORD PTR [ecx-0x30]
  40d62c:	(bad)  
  40d62d:	fdiv   st(5),st
  40d62f:	addr16 (bad) 
  40d631:	xchg   ecx,eax
  40d632:	out    0x68,eax
  40d634:	pusha  
  40d635:	cmp    eax,0xbb9b8b2c
  40d63a:	push   esi
  40d63b:	enter  0xe228,0xc
  40d63f:	popf   
  40d640:	jo     0x40d5d2
  40d642:	mov    ds:0xd55f1df3,eax
  40d647:	sub    bh,BYTE PTR [eax+0x34]
  40d64a:	xchg   ebp,eax
  40d64b:	in     eax,dx
  40d64c:	mov    cl,0x83
  40d64e:	push   0x4e2d2c0b
  40d653:	jnp    0x40d631
  40d655:	push   edi
  40d656:	rcl    DWORD PTR [edi-0x4b],0x26
  40d65a:	pop    es
  40d65b:	jmp    0x40d63c
  40d65d:	call   0x2dc7:0x1b09d19e
  40d664:	in     al,0xfb
  40d666:	sar    DWORD PTR [ebx+0x7bd90eee],1
  40d66c:	lods   al,BYTE PTR ds:[esi]
  40d66d:	xor    DWORD PTR [esi-0x7da72639],0xffffffe8
  40d674:	pop    edi
  40d675:	jl     0x40d622
  40d677:	fisub  WORD PTR [esi]
  40d679:	ret    0x5395
  40d67c:	inc    edx
  40d67d:	add    eax,0xf951e1cd
  40d682:	pop    esi
  40d683:	pop    ds
  40d684:	div    DWORD PTR [ebp-0x7cd80d46]
  40d68a:	sti    
  40d68b:	sub    esi,DWORD PTR [ebx-0x14969ab5]
  40d691:	hlt    
  40d692:	sbb    BYTE PTR [edx-0xe461223],ch
  40d698:	and    cl,bl
  40d69a:	sbb    ah,BYTE PTR [ebx+0xc4c80e4]
  40d6a0:	push   edx
  40d6a1:	jp     0x40d69e
  40d6a3:	mov    bl,BYTE PTR [edi+0x4ac94ef1]
  40d6a9:	push   ecx
  40d6aa:	call   FWORD PTR [edx+esi*4]
  40d6ad:	iret   
  40d6ae:	add    DWORD PTR [ecx],esi
  40d6b0:	cmc    
  40d6b1:	push   esp
  40d6b2:	and    eax,0x42c80f83
  40d6b7:	in     eax,0x21
  40d6b9:	(bad)  
  40d6ba:	jg     0x40d6a5
  40d6bc:	(bad)
  40d6c0:	cmp    ebx,DWORD PTR [esi]
  40d6c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6c3:	mov    ah,0x59
  40d6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6c6:	lds    ebp,FWORD PTR [ecx+ebp*2]
  40d6c9:	fs sbb ch,cl
  40d6cc:	ret    0xd06
  40d6cf:	(bad)  
  40d6d0:	call   0x98a8:0x5585bf08
  40d6d7:	ret    0x63cd
  40d6da:	mov    cl,0xc2
  40d6dc:	sbb    cl,bh
  40d6de:	adc    ebx,DWORD PTR [esi]
  40d6e0:	jb     0x40d746
  40d6e2:	icebp  
  40d6e3:	hlt    
  40d6e4:	push   es
  40d6e5:	sub    BYTE PTR [ebx+ecx*1],ah
  40d6e8:	int3   
  40d6e9:	sbb    DWORD PTR [ebx-0x62],0x3e972d39
  40d6f0:	mov    dh,0xf4
  40d6f2:	or     al,0xee
  40d6f4:	mov    ss,WORD PTR [ecx+0x527d3b27]
  40d6fa:	sub    eax,0xe25d4022
  40d6ff:	ss xchg ebx,eax
  40d701:	out    dx,eax
  40d702:	push   0x226d69e1
  40d707:	add    al,0xd
  40d709:	adc    dh,BYTE PTR [ebx+0x7da35a90]
  40d70f:	mov    ?,WORD PTR [edx+0x6b]
  40d712:	jl     0x40d6ae
  40d714:	mov    cl,0x13
  40d716:	pop    ecx
  40d717:	fcomp  DWORD PTR [esi-0x17]
  40d71a:	outs   dx,DWORD PTR ds:[esi]
  40d71b:	aad    0x3c
  40d71d:	dec    edx
  40d71e:	(bad)  
  40d71f:	xchg   edi,eax
  40d720:	arpl   WORD PTR [edx],di
  40d722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d723:	dec    ecx
  40d724:	iret   
  40d725:	pop    ebp
  40d726:	sub    eax,0x45e383fa
  40d72b:	pushf  
  40d72c:	sub    dh,BYTE PTR [edi]
  40d72e:	shl    BYTE PTR [ebx-0x509873b0],1
  40d734:	(bad)  
  40d735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d736:	and    dl,cl
  40d738:	stos   DWORD PTR es:[edi],eax
  40d739:	xchg   esp,eax
  40d73a:	sub    eax,0x82b273db
  40d73f:	jge    0x40d6ed
  40d741:	(bad)  
  40d742:	fucomp st(1)
  40d744:	clc    
  40d745:	pop    eax
  40d746:	dec    ebx
  40d747:	xchg   edx,eax
  40d748:	and    eax,0xf41a84e6
  40d74d:	icebp  
  40d74e:	sbb    edi,DWORD PTR ds:0x6801a8d6
  40d754:	aaa    
  40d755:	add    eax,0x27774124
  40d75a:	mov    al,0x2
  40d75c:	mov    ds:0x3d7eb9be,al
  40d761:	sub    edx,DWORD PTR [edi-0x4819282a]
  40d767:	adc    BYTE PTR [edx+0x58d0f563],dl
  40d76d:	repnz pop edi
  40d76f:	neg    BYTE PTR [eax+0x1f]
  40d772:	stc    
  40d773:	int3   
  40d774:	cmp    ax,0x1525
  40d778:	mov    bl,BYTE PTR [ecx+0xba19c43]
  40d77e:	or     ch,dl
  40d780:	cmp    bh,bh
  40d782:	xchg   esi,eax
  40d783:	dec    edi
  40d784:	or     eax,DWORD PTR [ecx]
  40d786:	popf   
  40d787:	cdq    
  40d788:	xchg   ebp,eax
  40d789:	ins    DWORD PTR es:[edi],dx
  40d78a:	in     al,0xd8
  40d78c:	mov    bh,0xb7
  40d78e:	ficom  WORD PTR [ecx]
  40d790:	dec    edi
  40d791:	add    ebp,ebx
  40d793:	push   ecx
  40d794:	dec    ebp
  40d795:	mov    cl,0x8e
  40d797:	or     edi,DWORD PTR [eax+0x125ae14e]
  40d79d:	pop    ebx
  40d79e:	mov    al,0x21
  40d7a0:	(bad)  
  40d7a1:	pop    esp
  40d7a2:	mov    dx,WORD PTR [ebx+0x78]
  40d7a6:	ret    0x18b7
  40d7a9:	push   0xedc50b6a
  40d7ae:	mov    al,0xfb
  40d7b0:	int3   
  40d7b1:	adc    edx,ebp
  40d7b3:	dec    ecx
  40d7b4:	push   ebx
  40d7b5:	in     eax,dx
  40d7b6:	mov    dh,0xa9
  40d7b8:	pusha  
  40d7b9:	jecxz  0x40d74d
  40d7bb:	stc    
  40d7bc:	ins    BYTE PTR es:[edi],dx
  40d7bd:	pop    edi
  40d7be:	call   0x15d05368
  40d7c3:	mov    gs,ebp
  40d7c5:	push   0xffffffa4
  40d7c7:	imul   edx,DWORD PTR [edi+eax*2],0xc6c7b1ae
  40d7ce:	fcom   DWORD PTR [edx]
  40d7d0:	inc    esp
  40d7d1:	jnp    0x40d841
  40d7d3:	inc    eax
  40d7d4:	(bad)  
  40d7d5:	pusha  
  40d7d6:	test   ch,ch
  40d7d8:	retf   0x1393
  40d7db:	cmp    eax,DWORD PTR [edx+edi*8-0x5f]
  40d7df:	pop    ebp
  40d7e0:	jle    0x40d7c5
  40d7e2:	lods   eax,DWORD PTR ds:[esi]
  40d7e3:	lods   al,BYTE PTR ds:[esi]
  40d7e4:	mov    eax,0xd179c3e9
  40d7e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ea:	in     eax,dx
  40d7eb:	push   ss
  40d7ec:	xchg   DWORD PTR [esi],eax
  40d7ee:	push   eax
  40d7ef:	jle    0x40d809
  40d7f1:	shl    DWORD PTR [ecx+0x258b0f2a],cl
  40d7f7:	xor    BYTE PTR [eax-0x23],0x92
  40d7fb:	arpl   di,ax
  40d7fd:	xchg   esp,eax
  40d7fe:	push   cs
  40d7ff:	mov    edi,0x6ca33f44
  40d804:	jmp    0x330f:0x4beb5968
  40d80b:	add    esi,ebp
  40d80d:	xor    BYTE PTR [edi-0x347d0759],bl
  40d813:	retf   0x43c9
  40d816:	inc    ebp
  40d817:	cmp    eax,0xab7abdb3
  40d81c:	mov    dh,0x8
  40d81e:	and    BYTE PTR [edi+edi*8-0x1e],bh
  40d822:	inc    eax
  40d823:	xchg   ecx,eax
  40d824:	jo     0x40d814
  40d826:	add    DWORD PTR [eax-0x1f752a4a],esi
  40d82c:	lods   eax,DWORD PTR ds:[esi]
  40d82d:	arpl   di,bx
  40d82f:	adc    edi,DWORD PTR [ebx+0x255389b3]
  40d835:	jge    0x40d8a5
  40d837:	(bad)  
  40d838:	mov    dl,0xd3
  40d83a:	pushf  
  40d83b:	in     eax,0x73
  40d83d:	fdivr  DWORD PTR [esi]
  40d83f:	xor    eax,0xa3fdd75e
  40d844:	loopne 0x40d83d
  40d846:	dec    ebp
  40d847:	daa    
  40d848:	push   ecx
  40d84a:	xchg   ebp,esi
  40d84c:	add    ebx,DWORD PTR [edx]
  40d84e:	dec    ebx
  40d84f:	add    bl,0xd0
  40d852:	inc    eax
  40d853:	fild   DWORD PTR [edi-0x63d71a3d]
  40d859:	mov    ds:0xb9daa0ac,eax
  40d85e:	pop    esi
  40d85f:	cmp    BYTE PTR [ebx-0x46],bh
  40d862:	mov    esi,0x5f8fe32f
  40d867:	cmp    al,0xae
  40d869:	in     eax,0x41
  40d86b:	fild   DWORD PTR ds:0x91e868d1
  40d871:	shr    DWORD PTR [ebp-0x70],1
  40d874:	cmp    al,0x6b
  40d876:	fisubr DWORD PTR [ecx-0x74381291]
  40d87c:	lods   al,BYTE PTR ds:[esi]
  40d87d:	f2xm1  
  40d87f:	xor    DWORD PTR [ebx],esi
  40d881:	push   ds
  40d882:	into   
  40d883:	loop   0x40d8ef
  40d885:	daa    
  40d886:	mov    ds:0x9554c9f5,eax
  40d88b:	out    dx,eax
  40d88c:	imul   edi,DWORD PTR [edi],0xa695d67c
  40d892:	pop    ecx
  40d893:	das    
  40d894:	mov    al,ds:0x24207acb
  40d899:	in     eax,0x1c
  40d89b:	add    dl,bl
  40d89d:	cmc    
  40d89e:	pop    esi
  40d89f:	jg     0x40d905
  40d8a1:	in     al,0xab
  40d8a3:	jns    0x40d85a
  40d8a5:	in     al,0x7a
  40d8a7:	aaa    
  40d8a8:	mov    ebx,0xe04af7e8
  40d8ad:	mov    esi,0x2c4ab7a7
  40d8b2:	sub    BYTE PTR [edi],dh
  40d8b4:	and    DWORD PTR [edi+edx*1],esp
  40d8b7:	push   ecx
  40d8b8:	mov    bl,ah
  40d8ba:	pop    esi
  40d8bb:	mov    ebx,0xd761a29e
  40d8c0:	dec    esp
  40d8c1:	push   es
  40d8c2:	add    BYTE PTR [esi-0x69],dl
  40d8c5:	cmp    eax,0x5040449b
  40d8ca:	retf   0xae1d
  40d8cd:	add    dl,BYTE PTR [edx-0x74]
  40d8d0:	cmp    eax,0x8a6e56a0
  40d8d5:	fild   WORD PTR [esi-0x2d]
  40d8d8:	pop    edi
  40d8d9:	adc    al,0xd2
  40d8db:	add    eax,0x35c08a62
  40d8e0:	out    0x95,al
  40d8e2:	pusha  
  40d8e3:	sub    eax,0x4b98b7af
  40d8e8:	push   ebx
  40d8e9:	mov    ecx,0xf02e2c44
  40d8ee:	(bad)  
  40d8ef:	mov    ss,WORD PTR [edi-0x7]
  40d8f2:	iret   
  40d8f3:	mov    al,0xad
  40d8f5:	pushf  
  40d8f6:	int    0x29
  40d8f8:	rcl    esp,0xb3
  40d8fb:	dec    esp
  40d8fc:	and    eax,0x24f3d9a8
  40d901:	in     eax,dx
  40d902:	mov    dl,0x7f
  40d904:	push   cs
  40d905:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d906:	sbb    edx,eax
  40d908:	dec    ecx
  40d909:	sbb    al,ah
  40d90b:	in     eax,0x5c
  40d90d:	cmp    BYTE PTR [ebp-0x35],al
  40d910:	out    dx,al
  40d911:	inc    ebx
  40d912:	mov    ds:0x5ab26811,al
  40d917:	xchg   ecx,eax
  40d918:	or     al,0xed
  40d91a:	dec    ebx
  40d91b:	mov    DWORD PTR [edi-0x31],0x4b435bc5
  40d922:	std    
  40d923:	sbb    DWORD PTR [edi-0x24ea8dee],edi
  40d929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d92a:	lods   eax,DWORD PTR ds:[esi]
  40d92b:	push   edi
  40d92c:	test   eax,0x5ae74079
  40d931:	fist   DWORD PTR [edx+edi*4+0x3b]
  40d935:	ret    0x3196
  40d938:	pushf  
  40d939:	(bad)  
  40d93a:	aas    
  40d93b:	std    
  40d93c:	popf   
  40d93d:	daa    
  40d93e:	mov    ch,0x8
  40d940:	mov    al,ds:0x6e629fcf
  40d945:	lock setae BYTE PTR [ebx-0x77827735]
  40d94d:	push   ebx
  40d94e:	mov    eax,ds:0x6eae606f
  40d953:	xchg   ecx,eax
  40d954:	cmp    DWORD PTR [ecx-0xd5e6279],esi
  40d95a:	retf   
  40d95b:	push   ecx
  40d95c:	mov    cl,0x6e
  40d95e:	pop    ecx
  40d95f:	pop    esp
  40d960:	in     eax,dx
  40d961:	push   0x66
  40d963:	pop    ds
  40d964:	mov    ecx,0x8fe3c482
  40d969:	lods   eax,DWORD PTR ds:[esi]
  40d96a:	xor    ch,BYTE PTR [ebp-0x7b]
  40d96d:	pushf  
  40d96e:	xchg   esi,eax
  40d96f:	xchg   edi,eax
  40d970:	imul   ebx,ebx,0xee0533b1
  40d976:	pop    ecx
  40d977:	lock test al,0xb
  40d97a:	adc    dl,bh
  40d97c:	push   ebx
  40d97d:	push   ebp
  40d97e:	int    0x13
  40d980:	adc    DWORD PTR [edx],esp
  40d982:	mov    bl,0x21
  40d984:	push   0x1f
  40d986:	xchg   ecx,eax
  40d987:	push   edx
  40d988:	sbb    esp,esi
  40d98a:	mov    ebx,0xc617a189
  40d98f:	cld    
  40d990:	adc    dl,dl
  40d992:	inc    eax
  40d993:	mov    dl,0x5b
  40d995:	inc    ebx
  40d996:	jle    0x40d9cf
  40d998:	ficomp DWORD PTR [eax+0x4c]
  40d99b:	(bad)  
  40d99c:	(bad)  
  40d99e:	in     al,0xf3
  40d9a0:	outs   dx,DWORD PTR ds:[esi]
  40d9a1:	call   0x9d361284
  40d9a6:	mov    ds:0x6848a048,al
  40d9ab:	out    dx,eax
  40d9ac:	and    ebx,DWORD PTR [edi+0x7064f4d0]
  40d9b2:	xchg   ecx,eax
  40d9b3:	lods   eax,DWORD PTR ds:[esi]
  40d9b4:	mov    ecx,0x24d61b3a
  40d9b9:	test   DWORD PTR ds:0x74124de2,ebp
  40d9bf:	sbb    esi,DWORD PTR [esp+edi*4]
  40d9c2:	pop    ebp
  40d9c3:	xor    ch,BYTE PTR [esp+ecx*1]
  40d9c6:	popf   
  40d9c7:	test   eax,0xd41e5a8b
  40d9cc:	jbe    0x40d99a
  40d9ce:	xor    esi,ecx
  40d9d0:	in     eax,dx
  40d9d1:	pop    ecx
  40d9d2:	add    eax,0x14e1193b
  40d9d7:	dec    ecx
  40d9d8:	xchg   esi,eax
  40d9d9:	sbb    al,bl
  40d9db:	pop    ebp
  40d9dc:	aas    
  40d9dd:	mov    BYTE PTR [eax+esi*8+0x45],ah
  40d9e1:	sub    eax,0xe684a8d8
  40d9e6:	paddq  mm0,QWORD PTR [edi-0x3e77b0ed]
  40d9ed:	in     al,0x4f
  40d9ef:	xchg   edi,eax
  40d9f0:	ret    0xe4a2
  40d9f3:	push   ebx
  40d9f4:	pushf  
  40d9f5:	aas    
  40d9f6:	outs   dx,BYTE PTR ds:[esi]
  40d9f7:	cmp    eax,0x59ea6069
  40d9fc:	jl     0x40d9ea
  40d9fe:	and    al,0xe9
  40da00:	jg     0x40d9bb
  40da02:	daa    
  40da03:	mov    eax,0x3865c37d
  40da08:	add    DWORD PTR [eax-0x46016462],edi
  40da0e:	ficom  DWORD PTR [edx-0x57]
  40da11:	popf   
  40da12:	sbb    DWORD PTR [eax+0x65],eax
  40da15:	sub    dh,dh
  40da17:	jle    0x40da75
  40da19:	xchg   esi,eax
  40da1a:	sub    cl,BYTE PTR [ebp-0x43c74128]
  40da20:	add    eax,0x286a58a2
  40da25:	das    
  40da26:	mov    cl,0xfa
  40da28:	mov    edx,esp
  40da2a:	push   es
  40da2b:	(bad)  
  40da2c:	fbld   TBYTE PTR [edi+ecx*1+0x4f]
  40da30:	das    
  40da31:	sbb    DWORD PTR [esi+esi*8-0x7d32b53d],esp
  40da38:	push   ds
  40da39:	jbe    0x40d9ea
  40da3b:	aam    0x4a
  40da3d:	xor    BYTE PTR [edx-0x6c62180a],ch
  40da43:	adc    dh,BYTE PTR [ebp+0x1]
  40da46:	push   ss
  40da47:	into   
  40da48:	adc    BYTE PTR [edx],cl
  40da4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da4b:	adc    dh,dl
  40da4d:	ins    BYTE PTR es:[edi],dx
  40da4e:	(bad)  
  40da4f:	in     al,dx
  40da50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da51:	out    dx,al
  40da52:	shr    BYTE PTR [edx-0x5a27b5c4],cl
  40da58:	inc    edx
  40da59:	or     al,0xff
  40da5b:	inc    edx
  40da5c:	mov    edi,0x2826ff3
  40da61:	push   ebp
  40da62:	adc    DWORD PTR [eax-0x66],ebp
  40da65:	jb     0x40da8e
  40da67:	js     0x40da82
  40da69:	lods   al,BYTE PTR ds:[esi]
  40da6a:	push   es
  40da6b:	cli    
  40da6c:	jge    0x40da11
  40da6e:	repz adc DWORD PTR [edx-0x18],esp
  40da72:	push   ss
  40da73:	and    al,0x2
  40da75:	mov    BYTE PTR [esi+0x1f503cbe],ah
  40da7b:	in     al,0x23
  40da7d:	xor    eax,0x2ef4bbaa
  40da82:	mov    al,0x1f
  40da84:	sub    eax,0xe1f0a991
  40da89:	xchg   esi,eax
  40da8a:	or     al,0xae
  40da8c:	or     eax,0xd0ceefa1
  40da91:	je     0x40daa3
  40da93:	cmp    al,0xba
  40da95:	mov    eax,ds:0xeec7734e
  40da9a:	and    eax,0x78b41b98
  40da9f:	xchg   BYTE PTR [ebx-0x77],ah
  40daa2:	pop    ss
  40daa3:	mov    ecx,0x5d61b877
  40daa8:	pop    ds
  40daa9:	and    edx,eax
  40daab:	inc    edx
  40daac:	sub    esp,edi
  40daae:	sbb    al,0x5b
  40dab0:	adc    al,0x17
  40dab2:	pop    esi
  40dab3:	jmp    0x40da75
  40dab5:	fcomip st,st(6)
  40dab7:	repnz xor DWORD PTR [edx-0x5c770a02],ebp
  40dabe:	dec    esp
  40dabf:	shr    dh,1
  40dac1:	cli    
  40dac2:	cmc    
  40dac3:	sub    dh,al
  40dac5:	rcr    BYTE PTR [ebx-0x77b31ad6],1
  40dacb:	smsw   WORD PTR [eax+ebx*8-0x16]
  40dad0:	cld    
  40dad1:	mov    al,0xc3
  40dad3:	sti    
  40dad4:	sub    ecx,eax
  40dad6:	sbb    ah,BYTE PTR [ebp+0x2e]
  40dad9:	add    eax,0xbc5cdf7a
  40dade:	ins    BYTE PTR es:[edi],dx
  40dadf:	ins    BYTE PTR es:[edi],dx
  40dae0:	ror    bl,1
  40dae2:	sbb    DWORD PTR [edi+0xb],0x54dff077
  40dae9:	xchg   edx,eax
  40daea:	pop    es
  40daeb:	mov    edx,0xc5cd426d
  40daf0:	mov    dh,0x14
  40daf2:	test   eax,0x70b3cbbd
  40daf7:	and    eax,0x178d7d41
  40dafc:	in     eax,dx
  40dafd:	jg     0x40db5d
  40daff:	in     eax,0xc7
  40db01:	out    0x4a,eax
  40db03:	and    BYTE PTR [eax-0x7a196440],bh
  40db09:	dec    edx
  40db0a:	xchg   ebp,eax
  40db0b:	sub    DWORD PTR ds:0x381895f6,edi
  40db11:	ins    BYTE PTR es:[edi],dx
  40db12:	lock xlat BYTE PTR ds:[ebx]
  40db14:	mov    esi,0xce384cfa
  40db19:	xchg   edx,eax
  40db1a:	stos   BYTE PTR es:[edi],al
  40db1b:	popf   
  40db1c:	adc    edi,DWORD PTR [esi]
  40db1e:	sar    BYTE PTR [ecx+0x43d882c1],0xe0
  40db25:	push   edi
  40db26:	rol    BYTE PTR [ecx+0x8e0918],0x80
  40db2d:	std    
  40db2e:	cmp    eax,DWORD PTR [eax]
  40db30:	loope  0x40dafd
  40db32:	data16 aad 0x4
  40db35:	into   
  40db36:	popa   
  40db37:	pop    esi
  40db38:	sbb    DWORD PTR [edx],0x49
  40db3b:	cs jnp 0x40dac4
  40db3e:	mov    DWORD PTR [esi+0xa25e17b],edi
  40db44:	or     al,0x31
  40db46:	sti    
  40db47:	aam    0x9b
  40db49:	ins    BYTE PTR es:[edi],dx
  40db4a:	xchg   edx,eax
  40db4b:	int    0x52
  40db4d:	push   ds
  40db4e:	cwde   
  40db4f:	and    al,0xbf
  40db51:	scas   eax,DWORD PTR es:[edi]
  40db52:	sbb    esp,DWORD PTR [ebx-0x4]
  40db55:	adc    edi,DWORD PTR [ecx-0x51]
  40db58:	out    0x4b,eax
  40db5a:	or     eax,0x23c773d0
  40db5f:	repz lds eax,FWORD PTR gs:[ebp+0x2f6b0f2f]
  40db67:	cld    
  40db68:	xchg   DWORD PTR [ebp+ecx*2+0x46],eax
  40db6c:	sbb    ebx,DWORD PTR [edx]
  40db6e:	mov    fs:0xf93b6198,al
  40db74:	sar    BYTE PTR [edi+eax*2-0x73],1
  40db78:	mov    ebx,0x2c5a99cc
  40db7d:	lahf   
  40db7e:	mov    ebp,0x6c303bdb
  40db83:	test   DWORD PTR [eax+eax*4-0x2b],esi
  40db87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db88:	xor    ebp,eax
  40db8a:	dec    eax
  40db8b:	push   cs
  40db8c:	test   BYTE PTR [eax+0x7c],bl
  40db8f:	sbb    DWORD PTR [eax],ebx
  40db91:	adc    eax,esp
  40db93:	aad    0x36
  40db95:	ss mov eax,0x2151b6a4
  40db9b:	mov    edx,0x749f3fbe
  40dba0:	aad    0x47
  40dba2:	xor    eax,0xae5bd9d7
  40dba7:	and    BYTE PTR [ebp-0x79136a6c],cl
  40dbad:	inc    ebp
  40dbae:	xchg   edx,eax
  40dbaf:	repz cmp BYTE PTR [edi],al
  40dbb2:	pop    esp
  40dbb3:	test   al,0x50
  40dbb5:	sub    al,0x76
  40dbb7:	lock cmc 
  40dbb9:	int3   
  40dbba:	jae    0x40dba2
  40dbbc:	retf   
  40dbbd:	mov    eax,ds:0xd41539
  40dbc2:	es sub eax,eax
  40dbc5:	in     eax,0xf9
  40dbc7:	into   
  40dbc8:	imul   ecx,DWORD PTR [ecx+0x4a],0xffffff83
  40dbcc:	cdq    
  40dbcd:	xor    al,0x53
  40dbcf:	hlt    
  40dbd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbd1:	sbb    DWORD PTR [ecx],esi
  40dbd3:	mov    DWORD PTR [esi-0x34],0x65f7f8aa
  40dbda:	add    DWORD PTR [ebx+0x3a],ecx
  40dbdd:	pop    edx
  40dbde:	sbb    eax,0xe560994b
  40dbe3:	lahf   
  40dbe4:	lea    ebp,[ebx+0x3]
  40dbe7:	xlat   BYTE PTR ds:[ebx]
  40dbe8:	repnz daa 
  40dbea:	lock fild QWORD PTR [ebp-0x64]
  40dbee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbef:	nop
  40dbf0:	scas   al,BYTE PTR es:[edi]
  40dbf1:	jl     0x40dbd0
  40dbf3:	jle    0x40db8a
  40dbf5:	stc    
  40dbf6:	cmp    ebx,esi
  40dbf8:	aaa    
  40dbf9:	xor    dh,BYTE PTR [ebx-0x5e]
  40dbfc:	mov    cl,0xd0
  40dbfe:	adc    eax,0x705a52e1
  40dc03:	ret    0xdb24
  40dc06:	cmp    eax,ebp
  40dc08:	rcl    ch,1
  40dc0a:	push   eax
  40dc0b:	into   
  40dc0c:	stc    
  40dc0d:	cmp    eax,eax
  40dc0f:	xchg   ecx,eax
  40dc10:	stos   DWORD PTR es:[edi],eax
  40dc11:	(bad)
  40dc15:	and    eax,0xa68a9d56
  40dc1a:	inc    edi
  40dc1b:	lods   eax,DWORD PTR ds:[esi]
  40dc1c:	mov    ecx,0xb6018f59
  40dc21:	imul   eax,DWORD PTR [edx+0x53c783ce],0xfffffff2
  40dc28:	fsub   st,st(7)
  40dc2a:	test   al,0x5d
  40dc2c:	sahf   
  40dc2d:	(bad)  
  40dc2e:	push   cs
  40dc2f:	cmp    al,0xe5
  40dc31:	mov    ah,0xcc
  40dc33:	push   eax
  40dc34:	(bad)  
  40dc35:	mov    dl,0x13
  40dc37:	shr    DWORD PTR [esi+0x4659ff1a],0x70
  40dc3e:	mov    ds:0xb41c9a08,al
  40dc43:	adc    ch,BYTE PTR [edx+0x44113033]
  40dc49:	mov    dh,0x6e
  40dc4b:	adc    bl,0x47
  40dc4e:	lods   eax,DWORD PTR ds:[esi]
  40dc4f:	and    eax,0x952225a3
  40dc54:	push   ebp
  40dc55:	pop    esp
  40dc56:	cs (bad) 
  40dc58:	repnz inc esp
  40dc5a:	sub    eax,0x182d8774
  40dc5f:	(bad)  
  40dc60:	xlat   BYTE PTR ds:[ebx]
  40dc61:	inc    esi
  40dc62:	xchg   ebp,eax
  40dc63:	je     0x40dc92
  40dc65:	cmp    DWORD PTR [esi-0x4a3399bc],ecx
  40dc6b:	jbe    0x40dc8d
  40dc6d:	addr16 push edx
  40dc6f:	or     eax,0x77cb3db0
  40dc74:	addr16 inc ebp
  40dc76:	out    dx,al
  40dc77:	xchg   esi,eax
  40dc78:	std    
  40dc79:	popa   
  40dc7a:	mov    ebx,DWORD PTR [edx+0x334529c5]
  40dc80:	pushf  
  40dc81:	sub    al,0xcf
  40dc83:	xchg   DWORD PTR [eax+0x31],edi
  40dc86:	lds    ecx,FWORD PTR [ecx-0x79]
  40dc89:	push   ebp
  40dc8a:	imul   edi,DWORD PTR [ecx+0x5e0a988e],0x6
  40dc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc92:	cmp    DWORD PTR [edx-0x47],0xda01bea5
  40dc99:	(bad)
  40dc9c:	mov    ebx,0xedfbc044
  40dca1:	call   0xb791:0x17b902a9
  40dca8:	cdq    
  40dca9:	mov    bl,0x11
  40dcab:	(bad)  
  40dcad:	adc    DWORD PTR cs:[edx+0x77],ebx
  40dcb1:	mov    edi,cs
  40dcb3:	mov    ah,0xbf
  40dcb5:	fsub   st(1),st
  40dcb7:	xor    bh,BYTE PTR [eax+ebp*1]
  40dcba:	push   ds
  40dcbb:	bnd jl 0x40dce4
  40dcbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcbf:	or     esi,DWORD PTR [edi+0x5fac7a33]
  40dcc5:	aad    0x1d
  40dcc7:	or     DWORD PTR [edx-0x36],edx
  40dcca:	fdiv   DWORD PTR [ebx]
  40dccc:	dec    ecx
  40dccd:	or     edx,DWORD PTR [edx+0x4a392851]
  40dcd3:	sub    eax,0x52334fa2
  40dcd8:	and    BYTE PTR [eax+0x32],ch
  40dcdb:	mov    ebp,DWORD PTR [eax+0x69133576]
  40dce1:	sahf   
  40dce2:	inc    esi
  40dce3:	xor    DWORD PTR [ecx],ecx
  40dce5:	inc    esp
  40dce6:	xlat   BYTE PTR ds:[ebx]
  40dce7:	outs   dx,DWORD PTR ds:[esi]
  40dce8:	shr    BYTE PTR [ebp-0x6f],0x3e
  40dcec:	ret    0x14ab
  40dcef:	xor    ax,0xcb97
  40dcf3:	jb     0x40dcd5
  40dcf5:	mov    ah,0x3f
  40dcf7:	cmp    ecx,DWORD PTR [eax+0x7f]
  40dcfa:	(bad)  
  40dcfb:	int3   
  40dcfc:	pop    esi
  40dcfd:	int3   
  40dcfe:	aad    0xe0
  40dd00:	xchg   esp,eax
  40dd01:	mov    esi,0x9d3aa2aa
  40dd06:	adc    al,BYTE PTR [ecx-0x1d]
  40dd09:	mov    dh,0x62
  40dd0b:	push   esi
  40dd0c:	or     al,0x1b
  40dd0e:	ins    BYTE PTR es:[edi],dx
  40dd0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd10:	push   0x19
  40dd12:	pop    ecx
  40dd13:	cmovbe ebp,edx
  40dd16:	loopne 0x40dcb9
  40dd18:	mov    ds:0xb72ba4a6,al
  40dd1d:	lock push 0x29
  40dd20:	sti    
  40dd21:	out    dx,eax
  40dd22:	fiadd  WORD PTR [ecx-0x42]
  40dd25:	retf   0x41a0
  40dd28:	test   al,0x45
  40dd2a:	dec    ebp
  40dd2b:	enter  0xcda7,0xbf
  40dd2f:	adc    esi,DWORD PTR [ebx]
  40dd31:	call   0x4dd:0xc944e857
  40dd38:	imul   esp,eax,0x5d149884
  40dd3e:	dec    BYTE PTR [esi-0x6712d40b]
  40dd44:	aad    0x77
  40dd46:	sbb    edi,edi
  40dd48:	mov    cl,BYTE PTR [eax]
  40dd4a:	(bad)  
  40dd4b:	and    edx,edi
  40dd4d:	add    ebx,DWORD PTR [edi-0x5c9089f7]
  40dd53:	push   ss
  40dd54:	jne    0x40dd00
  40dd56:	call   0x298b:0x1e8209d6
  40dd5d:	popa   
  40dd5e:	sub    BYTE PTR [ebx-0x12],ch
  40dd61:	mov    ah,0x38
  40dd63:	or     BYTE PTR [ebp-0x68],ch
  40dd66:	mov    edx,0x77acb93f
  40dd6b:	loopne 0x40dd00
  40dd6d:	fwait
  40dd6e:	enter  0xba6c,0x75
  40dd72:	fdivr  QWORD PTR [eax+0x3c72ed75]
  40dd78:	mov    BYTE PTR [ebp+0x7e],dl
  40dd7b:	rcl    BYTE PTR [ebp+edi*8+0xaa6ce08],0x57
  40dd83:	mov    edx,DWORD PTR [edx]
  40dd85:	pop    edi
  40dd86:	sub    bh,cl
  40dd88:	push   ecx
  40dd89:	adc    bh,dh
  40dd8b:	fistp  DWORD PTR [ecx+ebp*8]
  40dd8e:	arpl   di,ax
  40dd90:	pop    es
  40dd91:	mov    ebp,0xf49ed5e
  40dd96:	fs aad 0xc5
  40dd99:	pop    esi
  40dd9a:	lahf   
  40dd9b:	xor    al,0xe
  40dd9d:	cmp    dl,bh
  40dd9f:	dec    esi
  40dda0:	pop    es
  40dda1:	outs   dx,BYTE PTR ds:[esi]
  40dda2:	dec    edx
  40dda3:	jb     0x40dd5b
  40dda5:	lods   al,BYTE PTR ds:[esi]
  40dda6:	push   esp
  40dda7:	add    DWORD PTR [edx+0xf],ecx
  40ddaa:	cmp    BYTE PTR [edi+0x5a68d692],ah
  40ddb0:	xor    al,dl
  40ddb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddb3:	imul   eax,DWORD PTR [eax-0x12e1100d],0xffffff9a
  40ddba:	in     eax,dx
  40ddbb:	shl    esi,cl
  40ddbd:	and    ebx,DWORD PTR [eax+0x4f]
  40ddc0:	mov    dl,BYTE PTR [ecx-0x60]
  40ddc3:	inc    esi
  40ddc4:	or     BYTE PTR [eax-0x60],bl
  40ddc7:	aam    0xde
  40ddc9:	mov    al,dl
  40ddcb:	loopne 0x40ddd5
  40ddcd:	outs   dx,BYTE PTR ds:[esi]
  40ddce:	dec    ebp
  40ddcf:	jg     0x40dddf
  40ddd1:	jmp    0x40dde7
  40ddd3:	jo     0x40ddfe
  40ddd5:	mov    dh,0xb8
  40ddd7:	mov    ch,0x6a
  40ddd9:	fisttp WORD PTR [edx+0x7c]
  40dddc:	inc    ecx
  40dddd:	xor    al,0x32
  40dddf:	ins    DWORD PTR es:[edi],dx
  40dde0:	test   ah,cl
  40dde2:	popf   
  40dde3:	xchg   BYTE PTR [ecx-0x2d],dl
  40dde6:	pop    es
  40dde7:	loop   0x40de17
  40dde9:	dec    ebp
  40ddea:	ret    
  40ddeb:	imul   edi,DWORD PTR [eax*8+0x569b68c6],0xc0484fde
  40ddf6:	mov    esi,ebp
  40ddf8:	cmp    DWORD PTR [esi-0x6a379cef],ebx
  40ddfe:	ret    
  40ddff:	push   ds
  40de00:	add    esi,ecx
  40de02:	inc    ebx
  40de03:	fs sti 
  40de05:	lahf   
  40de06:	mov    cs,WORD PTR [ebx]
  40de08:	push   edi
  40de09:	and    eax,0x569b1384
  40de0e:	pop    ecx
  40de0f:	int3   
  40de10:	call   DWORD PTR [esi]
  40de12:	rol    dh,1
  40de14:	and    al,0x15
  40de16:	fidivr WORD PTR [ecx-0x17]
  40de19:	sbb    al,ah
  40de1b:	xchg   ebp,eax
  40de1c:	fs out 0xe6,al
  40de1f:	imul   ebp,edx,0xae04bdd8
  40de25:	mov    ss,edi
  40de27:	lods   eax,DWORD PTR ds:[esi]
  40de28:	xchg   esp,eax
  40de29:	data16 jo 0x40dea2
  40de2c:	pusha  
  40de2d:	or     al,0xd0
  40de2f:	out    0x66,al
  40de31:	sub    cl,bl
  40de33:	dec    eax
  40de34:	sbb    BYTE PTR [ebx+ebx*4],cl
  40de37:	popf   
  40de38:	imul   ebx,edx,0x70
  40de3b:	pop    ebx
  40de3c:	imul   esi,DWORD PTR [ebp+0x3a7b228f],0xffffffe0
  40de43:	int    0x1f
  40de45:	ja     0x40de71
  40de47:	retf   0xa6b6
  40de4a:	cmc    
  40de4b:	inc    edi
  40de4c:	int    0xd5
  40de4e:	ror    DWORD PTR [ecx],cl
  40de50:	aas    
  40de51:	test   DWORD PTR [edi+0x60],ebp
  40de54:	dec    esi
  40de55:	or     dh,ah
  40de57:	mov    eax,ds:0xe9dd50b9
  40de5c:	pop    ss
  40de5d:	push   0x3f
  40de5f:	xchg   esp,eax
  40de60:	sbb    eax,0x2e1e1fb2
  40de65:	push   edi
  40de66:	nop
  40de67:	out    0xd2,al
  40de69:	outs   dx,DWORD PTR ds:[esi]
  40de6a:	dec    ebp
  40de6b:	mov    ah,0xcd
  40de6d:	dec    ebp
  40de6e:	xchg   esp,eax
  40de6f:	mov    esp,0xc8b0d9d6
  40de74:	mov    edx,0xc2245997
  40de79:	inc    edx
  40de7a:	jmp    0x40defa
  40de7c:	call   0x7f83a4da
  40de81:	in     al,dx
  40de82:	mov    ch,0xdb
  40de84:	pop    edx
  40de85:	mov    esi,0xdbc0e689
  40de8a:	xchg   BYTE PTR [edx-0x71803d71],bh
  40de90:	adc    DWORD PTR [esi+0x52],edi
  40de93:	mov    ds:0x47f5daa0,al
  40de98:	sar    BYTE PTR [edx],cl
  40de9a:	pusha  
  40de9b:	sbb    esi,DWORD PTR [edi]
  40de9d:	mov    al,ds:0x4b4c66b4
  40dea2:	cmp    al,0x42
  40dea4:	sub    al,0x92
  40dea6:	bound  ebx,QWORD PTR [edx-0x6f]
  40dea9:	into   
  40deaa:	cmp    esp,esi
  40deac:	test   eax,edx
  40deae:	addr16 in eax,dx
  40deb0:	mov    ch,0x5
  40deb2:	inc    edx
  40deb3:	iret   
  40deb4:	sub    ecx,DWORD PTR [ebx+0x7d]
  40deb7:	add    BYTE PTR [ecx+0x5881d949],cl
  40debd:	mov    ebp,0x9074e1b3
  40dec2:	xor    al,0xbb
  40dec4:	mov    ah,0x98
  40dec6:	inc    ebp
  40dec7:	dec    ebx
  40dec8:	mov    cl,0x72
  40deca:	or     eax,0xc6452ef9
  40decf:	and    al,0x35
  40ded1:	and    eax,0x3cf1a883
  40ded6:	dec    esi
  40ded7:	pop    ebp
  40ded8:	inc    edi
  40ded9:	arpl   WORD PTR [eax+0x55],di
  40dedc:	dec    ecx
  40dedd:	je     0x40de6b
  40dedf:	inc    ebp
  40dee0:	fistp  QWORD PTR [edi]
  40dee2:	in     eax,dx
  40dee3:	mov    edi,0xa77bf540
  40dee8:	test   eax,0xf5c27526
  40deed:	rcl    al,cl
  40deef:	imul   ebp,ebp,0xffffffb0
  40def2:	stc    
  40def3:	in     eax,dx
  40def4:	xor    DWORD PTR [edi],eax
  40def6:	fucomi st,st(6)
  40def8:	mov    edx,0x51782f59
  40defd:	or     eax,0x805b4a18
  40df02:	xchg   esp,eax
  40df03:	aas    
  40df04:	mov    ebp,DWORD PTR ds:0x3c073509
  40df0a:	nop
  40df0b:	popa   
  40df0c:	stc    
  40df0d:	inc    eax
  40df0e:	repz loopne 0x40df38
  40df11:	repz mov WORD PTR [edi],ss
  40df14:	std    
  40df15:	outs   dx,DWORD PTR ds:[esi]
  40df16:	stos   DWORD PTR es:[edi],eax
  40df17:	push   ebx
  40df18:	lods   al,BYTE PTR ds:[esi]
  40df19:	addr16 cmp al,0xc3
  40df1c:	jnp    0x40df64
  40df1e:	sbb    al,0xaa
  40df20:	jne    0x40df83
  40df22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df23:	jmp    0x394c:0xb4b412ed
  40df2a:	jnp    0x40dedb
  40df2c:	int    0xac
  40df2e:	cmp    eax,esi
  40df30:	test   ebp,esp
  40df32:	daa    
  40df33:	mov    ebp,DWORD PTR [esi+0x74]
  40df36:	test   BYTE PTR [ebx-0x50],ch
  40df39:	pop    eax
  40df3a:	xchg   ecx,eax
  40df3b:	xor    BYTE PTR [eax+0x10c07d25],dl
  40df41:	cmc    
  40df42:	jae    0x40ded2
  40df44:	cmp    eax,ecx
  40df46:	rcr    BYTE PTR [esp+edi*1-0x75],1
  40df4a:	sbb    ebp,esi
  40df4c:	jo     0x40df1c
  40df4e:	mov    cl,0x5d
  40df50:	retf   
  40df51:	stos   BYTE PTR es:[edi],al
  40df52:	or     al,0xf1
  40df54:	or     BYTE PTR [esi],ch
  40df56:	lock pop eax
  40df58:	ds jmp 0xfda35e55
  40df5e:	mov    eax,0x737c7477
  40df63:	cmp    eax,0x8c72c5bf
  40df68:	mov    ebp,DWORD PTR [ecx-0x29]
  40df6b:	cmc    
  40df6c:	inc    ebp
  40df6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df6e:	daa    
  40df6f:	adc    al,0xd
  40df71:	push   0xf60de53e
  40df76:	lock push ebp
  40df78:	retf   0x6a4
  40df7b:	and    al,0x13
  40df7d:	and    cl,BYTE PTR ds:0x104f2a89
  40df83:	and    dh,BYTE PTR [esp+eax*2]
  40df86:	imul   ecx,DWORD PTR [ebx],0xed065603
  40df8c:	test   DWORD PTR [edx-0x15572d45],esp
  40df92:	sbb    esi,DWORD PTR [ebp+0x2f]
  40df95:	aad    0xb8
  40df97:	test   al,0x96
  40df99:	or     BYTE PTR [edx],bl
  40df9b:	loope  0x40e013
  40df9d:	xor    eax,DWORD PTR [ebx+0x93885d6]
  40dfa3:	adc    DWORD PTR [ebx+0x65b29dda],esi
  40dfa9:	mov    bl,0x52
  40dfab:	mov    edi,0x85e6c146
  40dfb0:	push   edx
  40dfb1:	add    al,0xa1
  40dfb3:	lahf   
  40dfb4:	iret   
  40dfb5:	(bad)
  40dfb9:	ss jmp 0xe387bcb8
  40dfbf:	or     BYTE PTR [edi+0x4d],dl
  40dfc2:	int3   
  40dfc3:	push   ebp
  40dfc4:	arpl   WORD PTR [di],bp
  40dfc7:	clc    
  40dfc8:	jne    0x40df5a
  40dfca:	test   BYTE PTR [eax+eiz*4],bl
  40dfcd:	xchg   DWORD PTR [ecx+edx*1+0x61],ecx
  40dfd1:	jmp    0x52c11457
  40dfd6:	sbb    eax,0xa56fc096
  40dfdb:	sub    DWORD PTR [eax-0x2be42ce7],ebx
  40dfe1:	aam    0x55
  40dfe3:	pop    ecx
  40dfe4:	or     bh,al
  40dfe6:	repnz fdivr DWORD PTR [ebx+0x22]
  40dfea:	mov    edi,0xb8a3e0e4
  40dfef:	outs   dx,BYTE PTR ds:[esi]
  40dff0:	jmp    0x40e022
  40dff2:	int3   
  40dff3:	hlt    
  40dff4:	dec    esi
  40dff5:	xor    edi,DWORD PTR [ebx-0x7f325700]
  40dffb:	clc    
  40dffc:	and    DWORD PTR [ebx],ecx
  40dffe:	test   eax,0x3501fff1
  40e003:	dec    BYTE PTR [edx-0x49]
  40e006:	xor    esp,0x1451b27a
  40e00c:	sbb    eax,0x8b6c14e7
  40e011:	lods   al,BYTE PTR ds:[esi]
  40e012:	lods   al,BYTE PTR ds:[esi]
  40e013:	inc    ebx
  40e014:	je     0x40dfd2
  40e016:	fld    DWORD PTR [ecx+0x13]
  40e019:	inc    esp
  40e01a:	xor    eax,0x67b482f6
  40e01f:	(bad)  
  40e021:	mov    ch,0x96
  40e023:	in     al,0x5f
  40e025:	stc    
  40e026:	jp     0x40e034
  40e028:	in     al,dx
  40e029:	leave  
  40e02a:	xchg   esp,eax
  40e02b:	dec    eax
  40e02c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e02d:	adc    eax,0xca17d676
  40e032:	mov    edx,0x27227622
  40e037:	scas   al,BYTE PTR es:[edi]
  40e038:	sbb    al,0xa1
  40e03a:	mov    ch,BYTE PTR [ebx-0xeae2540]
  40e040:	push   ecx
  40e041:	jne    0x40e045
  40e043:	push   edi
  40e044:	mul    BYTE PTR [ecx+ebp*1-0x26]
  40e048:	dec    edi
  40e049:	add    BYTE PTR ds:0x1a4c3212,0x43
  40e050:	jne    0x40e001
  40e052:	out    0x49,eax
  40e054:	or     esi,DWORD PTR [ebx]
  40e056:	ror    bl,1
  40e058:	mov    ds:0xf6db62e4,eax
  40e05d:	lds    ebx,FWORD PTR [edx+0x3c]
  40e060:	pop    esi
  40e061:	xor    al,0x6b
  40e063:	push   ebp
  40e064:	lock jmp 0xb7d:0xa65e3054
  40e06c:	push   ebp
  40e06d:	fcmovnbe st,st(3)
  40e06f:	xor    eax,0x90ee4491
  40e074:	inc    ebp
  40e075:	bnd ret 0xaada
  40e079:	test   DWORD PTR [ebp-0x74],0x1b7561b3
  40e080:	out    0x3c,eax
  40e082:	dec    ebx
  40e083:	lods   al,BYTE PTR ds:[esi]
  40e084:	or     BYTE PTR [ecx-0x28],0x48
  40e088:	fiadd  WORD PTR [ebx+0x25b6fb37]
  40e08e:	xchg   ebx,eax
  40e08f:	jg     0x40e0a6
  40e091:	fdivr  QWORD PTR [edx]
  40e093:	div    BYTE PTR [ecx+0x35e56247]
  40e099:	in     al,0x1b
  40e09b:	jo     0x40e0d3
  40e09d:	xchg   ebp,eax
  40e09e:	(bad)  
  40e09f:	mov    al,0xc3
  40e0a1:	sti    
  40e0a2:	outs   dx,BYTE PTR ds:[esi]
  40e0a3:	cmp    edx,edi
  40e0a5:	daa    
  40e0a6:	push   0x197f4b4a
  40e0ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0ac:	dec    ecx
  40e0ad:	fldenv [esi-0x5332d28c]
  40e0b3:	sbb    eax,edx
  40e0b5:	in     al,dx
  40e0b6:	fist   WORD PTR [ecx+0xd]
  40e0b9:	outs   dx,BYTE PTR ds:[esi]
  40e0ba:	mov    bh,0xe2
  40e0bc:	push   cs
  40e0bd:	outs   dx,BYTE PTR ds:[esi]
  40e0be:	popf   
  40e0bf:	fdivr  DWORD PTR [edi+ebx*4+0xf]
  40e0c3:	test   DWORD PTR [bx+di],ecx
  40e0c6:	pop    edx
  40e0c7:	push   ss
  40e0c8:	das    
  40e0c9:	mov    ?,WORD PTR [ecx-0x1]
  40e0cc:	jecxz  0x40e128
  40e0ce:	jns    0x40e11d
  40e0d0:	out    0x81,eax
  40e0d2:	lods   al,BYTE PTR ds:[esi]
  40e0d3:	(bad)  
  40e0d4:	cmp    al,BYTE PTR [edx-0x56f4679]
  40e0da:	jmp    0x40e061
  40e0dc:	sti    
  40e0dd:	and    edi,DWORD PTR [ecx+0x1]
  40e0e0:	sar    BYTE PTR [esi+0x4ef428c0],cl
  40e0e6:	mov    bh,0xf0
  40e0e8:	push   cs
  40e0e9:	test   BYTE PTR [eax+0x1a],ch
  40e0ec:	xchg   edi,eax
  40e0ed:	xchg   BYTE PTR [ecx+0x23],dl
  40e0f0:	dec    eax
  40e0f1:	push   edx
  40e0f2:	shr    DWORD PTR [ebp-0x59],0x4f
  40e0f6:	into   
  40e0f7:	adc    BYTE PTR [esi+0x14],0xe3
  40e0fb:	jb     0x40e099
  40e0fd:	adc    eax,0x33afac7f
  40e102:	addr16 retf 0xcd05
  40e106:	ret    
  40e107:	push   ecx
  40e108:	call   0xf4ab:0x12774566
  40e10f:	dec    ecx
  40e110:	xchg   ebx,eax
  40e111:	jl     0x40e175
  40e113:	cdq    
  40e114:	test   al,0x4b
  40e116:	shl    BYTE PTR [ecx],0x32
  40e119:	add    ch,dh
  40e11b:	cmp    bl,BYTE PTR [edi+0xf59d0ce]
  40e121:	aad    0x7a
  40e123:	jo     0x40e174
  40e125:	(bad)  
  40e126:	mov    eax,ds:0x15f1d5f9
  40e12b:	push   0x996612a5
  40e130:	pop    esp
  40e131:	ds cdq 
  40e133:	ja     0x40e170
  40e135:	push   es
  40e136:	cmp    eax,0xb8e1e75b
  40e13b:	and    al,0x16
  40e13d:	mov    dl,0x80
  40e13f:	mov    ebp,0x768dbe5d
  40e144:	xchg   BYTE PTR [edx+0x5306d330],dl
  40e14a:	xor    DWORD PTR [ecx+0x76c33d2a],0x1e
  40e151:	fdivr  QWORD PTR [ecx]
  40e153:	dec    ebp
  40e154:	push   ecx
  40e155:	cmp    eax,0x2c5a3ee6
  40e15a:	arpl   WORD PTR [esi-0x1e45867],si
  40e160:	adc    DWORD PTR [esi],edi
  40e162:	sbb    BYTE PTR [ecx-0x533d097],cl
  40e168:	mov    al,0x2f
  40e16a:	xor    DWORD PTR [esp+ebx*1+0x3c],esp
  40e16e:	or     eax,0x618d41d6
  40e173:	pop    esi
  40e175:	push   ebx
  40e176:	les    edi,FWORD PTR [eax-0x18349faa]
  40e17c:	and    ah,BYTE PTR [edi-0x14]
  40e17f:	inc    edx
  40e180:	retf   
  40e181:	icebp  
  40e182:	pop    ebp
  40e183:	push   edi
  40e184:	and    al,0xe0
  40e186:	xor    al,0xd8
  40e188:	or     esi,DWORD PTR [edi+0x3b9a980d]
  40e18e:	leave  
  40e18f:	mov    bl,0x6e
  40e191:	test   DWORD PTR ds:0xcd16a510,edi
  40e197:	mov    BYTE PTR ds:[ebx],bl
  40e19a:	jbe    0x40e164
  40e19c:	inc    ebx
  40e19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e19e:	dec    eax
  40e19f:	or     DWORD PTR [ebp+0x7a],0x6a
  40e1a3:	int3   
  40e1a4:	aas    
  40e1a5:	add    ch,dh
  40e1a7:	mov    esp,0xad8ddd41
  40e1ac:	pop    es
  40e1ad:	sahf   
  40e1ae:	xor    BYTE PTR [edi],cl
  40e1b0:	cdq    
  40e1b1:	push   esi
  40e1b2:	dec    ebp
  40e1b3:	xor    ecx,esi
  40e1b5:	hlt    
  40e1b6:	mov    ecx,0xdc795f2a
  40e1bb:	jl     0x40e1aa
  40e1bd:	pop    edx
  40e1be:	jne    0x40e1b5
  40e1c0:	or     edx,DWORD PTR [si]
  40e1c3:	dec    edx
  40e1c4:	mov    WORD PTR [edi+0x7f59b1b7],?
  40e1ca:	adc    esp,DWORD PTR [esi-0x1b]
  40e1cd:	jo     0x40e181
  40e1cf:	and    al,0x20
  40e1d1:	adc    dh,BYTE PTR [ecx+0x17799158]
  40e1d7:	xchg   DWORD PTR [ebp+0x79],eax
  40e1da:	push   es
  40e1db:	sbb    al,0xa4
  40e1dd:	push   eax
  40e1de:	dec    ebx
  40e1df:	(bad)  
  40e1e0:	retf   
  40e1e1:	xchg   edi,eax
  40e1e2:	inc    edi
  40e1e3:	mov    cl,bl
  40e1e5:	(bad)  
  40e1e6:	hlt    
  40e1e7:	sub    al,0x24
  40e1e9:	fist   DWORD PTR [edi+esi*1]
  40e1ec:	xor    ch,BYTE PTR ds:0xea1bc356
  40e1f2:	xchg   ecx,eax
  40e1f3:	shl    BYTE PTR [eax],1
  40e1f5:	mov    esp,0xc7a8e66b
  40e1fa:	mov    eax,ds:0x752311e1
  40e1ff:	fs jbe 0x40e27f
  40e202:	push   esi
  40e203:	ja     0x40e25e
  40e205:	nop
  40e206:	sub    BYTE PTR [eax],ch
  40e208:	js     0x40e18c
  40e20a:	jle    0x40e26d
  40e20c:	push   ebp
  40e20d:	in     al,dx
  40e20e:	ss jne 0x40e274
  40e211:	xor    DWORD PTR [ecx+0x5b09d53d],edi
  40e217:	jns    0x40e20c
  40e219:	fld1   
  40e21b:	xor    eax,0x2f6eccf5
  40e220:	int3   
  40e221:	mov    bh,0xa9
  40e223:	push   es
  40e224:	dec    esi
  40e225:	cmp    ebp,DWORD PTR [edi+0x2b]
  40e228:	or     BYTE PTR [ebx],ch
  40e22a:	or     eax,0x34cf5479
  40e22f:	popa   
  40e230:	ins    BYTE PTR es:[edi],dx
  40e231:	adc    BYTE PTR [edi],ch
  40e233:	or     eax,0x2a7cd789
  40e238:	cmp    al,0x77
  40e23a:	ret    0x9b5a
  40e23d:	jp     0x40e1c1
  40e23f:	imul   ebx,DWORD PTR [esi],0x71
  40e242:	mov    dh,0x95
  40e244:	cmp    eax,ebx
  40e246:	mov    ds:0x9c26cdfc,al
  40e24b:	lock adc BYTE PTR [esi+0x4f4e5560],ah
  40e252:	lock mov ebx,0x77f60558
  40e258:	inc    eax
  40e259:	std    
  40e25a:	arpl   WORD PTR [ecx+0x48],bp
  40e25d:	test   BYTE PTR [edx],al
  40e25f:	pop    esi
  40e260:	test   al,0xa2
  40e262:	push   esp
  40e263:	mov    ecx,0x98396592
  40e268:	mov    ah,0xdd
  40e26a:	xchg   DWORD PTR [eax-0x13706932],esp
  40e270:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e271:	sar    DWORD PTR ds:0x6251b98a,cl
  40e277:	push   ds
  40e278:	cmc    
  40e279:	mov    edi,0x6448c574
  40e27e:	in     al,dx
  40e27f:	jmp    0xfb15:0xfb47a367
  40e286:	push   cs
  40e287:	rcl    dh,1
  40e289:	cmp    eax,0xf25ab41b
  40e28e:	or     DWORD PTR [edx],edi
  40e290:	jmp    FWORD PTR [ebx-0x424f2cd5]
  40e296:	push   esp
  40e297:	dec    ebp
  40e298:	gs mov al,ah
  40e29b:	push   es
  40e29c:	dec    ebp
  40e29d:	xchg   ebp,eax
  40e29e:	out    0x97,al
  40e2a0:	jl     0x40e299
  40e2a2:	sub    bl,0x38
  40e2a5:	or     ah,BYTE PTR [ecx]
  40e2a7:	out    dx,eax
  40e2a8:	pop    ss
  40e2a9:	daa    
  40e2aa:	and    eax,0x163ff093
  40e2af:	stos   BYTE PTR es:[edi],al
  40e2b0:	or     DWORD PTR ds:0x557204ad,esp
  40e2b6:	inc    edi
  40e2b7:	sub    BYTE PTR [esi-0xb],cl
  40e2ba:	adc    al,0x2
  40e2bc:	je     0x40e24c
  40e2be:	imul   ebp,DWORD PTR [eax+0x51],0xffffffd1
  40e2c2:	xchg   edx,eax
  40e2c3:	push   ebp
  40e2c4:	daa    
  40e2c5:	out    dx,al
  40e2c6:	sbb    BYTE PTR [ecx-0x6a65ec11],dh
  40e2cc:	push   ds
  40e2cd:	in     eax,0x8c
  40e2cf:	mov    ecx,0x1b925911
  40e2d4:	pop    eax
  40e2d5:	sbb    DWORD PTR [edi],esp
  40e2d7:	mov    edx,0xf61b278
  40e2dc:	fwait
  40e2dd:	ins    BYTE PTR es:[edi],dx
  40e2de:	retf   0xedd1
  40e2e1:	mov    eax,0x9a863116
  40e2e6:	push   ebx
  40e2e7:	mov    edi,0xcadea5dd
  40e2ec:	adc    ah,bl
  40e2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2ef:	adc    al,0xc9
  40e2f1:	xchg   edi,eax
  40e2f2:	cmp    DWORD PTR [esp+ebx*2-0x29],0xe669312d
  40e2fa:	adc    ch,BYTE PTR [edx+0x75f183f7]
  40e300:	ja     0x40e306
  40e302:	and    al,0x21
  40e304:	scas   eax,DWORD PTR es:[edi]
  40e305:	imul   edi,DWORD PTR [eax-0x14],0xffffffa3
  40e309:	jb     0x40e329
  40e30b:	addr16 pop ds
  40e30d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e30e:	enter  0x1ca8,0x74
  40e312:	arpl   WORD PTR [eax+ecx*1+0x6319bf6c],sp
  40e319:	xor    ch,cl
  40e31b:	mov    al,0x89
  40e31d:	loopne 0x40e2df
  40e31f:	pop    eax
  40e320:	sbb    DWORD PTR [ebp+edx*2+0x69],0xffffff94
  40e325:	pop    ecx
  40e326:	scas   al,BYTE PTR es:[edi]
  40e327:	jmp    0xcc8ba903
  40e32c:	jae    0x40e31e
  40e32e:	pop    edi
  40e32f:	push   ds
  40e330:	cs inc esi
  40e332:	ins    BYTE PTR es:[edi],dx
  40e333:	or     esp,DWORD PTR ds:0x1181d0ec
  40e339:	mov    edi,0x10aa102b
  40e33e:	add    eax,0x186160a4
  40e343:	xchg   edi,eax
  40e344:	push   ds
  40e345:	add    al,0x6f
  40e347:	sahf   
  40e348:	cmp    dl,BYTE PTR [eax]
  40e34a:	jmp    0x38122a6e
  40e34f:	fdiv   DWORD PTR [edi]
  40e351:	xor    BYTE PTR [ecx-0x6a913a73],dh
  40e357:	push   0xbb5a44ef
  40e35c:	(bad)  
  40e35d:	mov    ecx,0xf1c28c13
  40e362:	jne    0x40e2eb
  40e364:	or     cl,BYTE PTR fs:[edx+0x45]
  40e368:	xor    eax,DWORD PTR [eax]
  40e36a:	aad    0x13
  40e36c:	pop    es
  40e36d:	cmp    DWORD PTR [ebx-0x42532ea3],edx
  40e373:	das    
  40e374:	sub    esi,edx
  40e376:	rol    DWORD PTR [edi],1
  40e378:	popa   
  40e379:	mov    cl,0x2d
  40e37b:	adc    al,0x52
  40e37d:	or     dh,BYTE PTR [esi-0x60]
  40e380:	or     esi,DWORD PTR [ebp+0x4bc5f76a]
  40e386:	push   ebp
  40e387:	inc    eax
  40e388:	and    esi,DWORD PTR [edi]
  40e38a:	mov    bh,al
  40e38c:	neg    DWORD PTR [ecx-0x1b58461b]
  40e392:	fcomp  QWORD PTR [ecx]
  40e394:	jg     0x40e35a
  40e396:	push   ebp
  40e397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e398:	jmp    0x7f63:0xeb9d6668
  40e39f:	mov    edx,0x48148d4
  40e3a4:	loopne 0x40e36f
  40e3a6:	jp     0x40e409
  40e3a8:	ins    BYTE PTR es:[edi],dx
  40e3a9:	cld    
  40e3aa:	ror    DWORD PTR [esi+0x5bb1d2af],cl
  40e3b0:	mov    fs,WORD PTR [ebp-0x28]
  40e3b3:	(bad)  
  40e3b4:	cmp    cl,cl
  40e3b6:	dec    ecx
  40e3b7:	lods   al,BYTE PTR ds:[esi]
  40e3b8:	pop    edx
  40e3b9:	mov    ds:0x2222e05,al
  40e3be:	or     al,0x43
  40e3c0:	adc    BYTE PTR [ecx],ah
  40e3c2:	out    dx,eax
  40e3c3:	xlat   BYTE PTR ds:[ebx]
  40e3c4:	mov    ebx,0x45b3d429
  40e3c9:	sbb    DWORD PTR [eax+ebx*2+0x27],edx
  40e3cd:	pop    ss
  40e3ce:	mov    cl,0xc6
  40e3d0:	dec    edi
  40e3d1:	call   0xe0f2:0xf3dff3bb
  40e3d8:	loope  0x40e3b3
  40e3da:	pop    ss
  40e3db:	daa    
  40e3dc:	push   ds
  40e3dd:	dec    esp
  40e3de:	or     al,0x7c
  40e3e0:	sub    DWORD PTR ds:0x349b902b,0xffffffa1
  40e3e7:	popa   
  40e3e8:	gs xchg edi,eax
  40e3ea:	sbb    BYTE PTR [ebp-0x48],0xd9
  40e3ee:	fst    DWORD PTR [edx+0x989573b]
  40e3f4:	repz jmp 0x711bf6d3
  40e3fa:	push   ds
  40e3fb:	adc    eax,0x7d7a5f1d
  40e400:	int3   
  40e401:	inc    eax
  40e402:	sub    edx,edi
  40e404:	out    0x69,al
  40e406:	and    DWORD PTR [esi],esp
  40e408:	xchg   esp,eax
  40e409:	jns    0x40e396
  40e40b:	aas    
  40e40c:	xchg   edi,eax
  40e40d:	in     eax,0x80
  40e40f:	push   ds
  40e410:	jbe    0x40e43e
  40e412:	and    DWORD PTR [ebp-0x51],edx
  40e415:	sub    al,0x66
  40e417:	out    0x94,eax
  40e419:	ret    
  40e41a:	xchg   DWORD PTR [eax-0x9],edx
  40e41d:	xchg   ebx,eax
  40e41e:	out    0x41,al
  40e420:	inc    ebx
  40e421:	js     0x40e404
  40e423:	push   eax
  40e424:	mov    eax,0x24460346
  40e429:	pop    edx
  40e42a:	ror    DWORD PTR [ecx-0x6e],1
  40e42d:	ds jg  0x40e428
  40e430:	hlt    
  40e431:	ret    
  40e432:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e433:	jge    0x40e3e4
  40e435:	xchg   esi,eax
  40e436:	jl     0x40e40b
  40e438:	jo     0x40e4b0
  40e43a:	or     BYTE PTR [esi+0x292a50d9],ah
  40e440:	push   ebx
  40e441:	int    0x1b
  40e443:	sub    DWORD PTR [eax],edx
  40e445:	push   ecx
  40e446:	and    cl,al
  40e448:	inc    DWORD PTR [ebp+0x3984c617]
  40e44e:	adc    BYTE PTR [edx+0x64afbdf9],ch
  40e454:	and    eax,0xb6225679
  40e459:	pop    ecx
  40e45a:	jb     0x40e427
  40e45c:	or     DWORD PTR [ebx],esp
  40e45e:	add    bl,BYTE PTR [ebp+0x4fa56c56]
  40e464:	inc    esi
  40e465:	push   esi
  40e466:	or     BYTE PTR [edx+ecx*4-0x21],al
  40e46a:	add    ch,BYTE PTR [edi+0x47]
  40e46d:	mov    eax,0xe52c8f13
  40e472:	push   ss
  40e473:	dec    edx
  40e474:	pushf  
  40e475:	cmp    DWORD PTR [edi+0x5],0x1086978c
  40e47c:	xchg   DWORD PTR [ebx],eax
  40e47e:	addr16 mov edi,0xc0950bcd
  40e484:	mov    eax,ds:0x863f6050
  40e489:	mov    bl,0xaf
  40e48b:	aas    
  40e48c:	shld   DWORD PTR [ebp+0x227addf0],edi,0xfd
  40e494:	mov    ecx,DWORD PTR [edx+edi*1-0x74fbc7a0]
  40e49b:	xor    esi,DWORD PTR [ebx+eax*2+0x2]
  40e49f:	add    BYTE PTR [eax+0x49decad0],bh
  40e4a5:	push   0xd
  40e4a7:	imul   DWORD PTR [eax+0x239a1b9]
  40e4ad:	sub    ah,BYTE PTR [eax+0x2e8bb75b]
  40e4b3:	mov    ds:0x5b610a0f,eax
  40e4b8:	adc    ah,BYTE PTR [edi]
  40e4ba:	mov    bh,BYTE PTR [eax+0x4e]
  40e4bd:	mov    esi,0x52af1eaa
  40e4c2:	test   DWORD PTR [ebp+0xcddf3e6],0xc0d9464e
  40e4cc:	nop
  40e4cd:	dec    eax
  40e4ce:	ret    
  40e4cf:	fwait
  40e4d0:	in     al,0xc5
  40e4d2:	xchg   edi,eax
  40e4d3:	pop    ss
  40e4d4:	sub    al,0x90
  40e4d6:	mov    esp,0x339fae45
  40e4db:	push   eax
  40e4dc:	mov    edi,0x82116753
  40e4e1:	mov    ds:0xc013ef07,eax
  40e4e6:	sbb    al,0xe6
  40e4e8:	fwait
  40e4e9:	test   BYTE PTR [ebx+0x51],0x57
  40e4ed:	sbb    esi,DWORD PTR [ebp+0x7a69f061]
  40e4f3:	popf   
  40e4f4:	aad    0xa4
  40e4f6:	test   dl,bh
  40e4f8:	out    0x9c,al
  40e4fa:	or     edx,ecx
  40e4fc:	add    dh,BYTE PTR [edx+0x296d0c1e]
  40e502:	fmul   QWORD PTR [ecx+0x6f969e89]
  40e508:	jmp    FWORD PTR [esi+0xa4a16fe]
  40e50e:	pop    eax
  40e50f:	or     al,0x2c
  40e511:	inc    esi
  40e512:	stos   BYTE PTR es:[edi],al
  40e513:	jp     0x40e57b
  40e515:	xor    bl,BYTE PTR [ebp+edx*1+0x31]
  40e519:	mov    eax,0x1e8ad1b4
  40e51e:	cmp    eax,0x7a6900f4
  40e523:	add    bh,BYTE PTR [edi]
  40e525:	cmp    al,0xf4
  40e527:	xchg   edi,eax
  40e528:	jl     0x40e4fc
  40e52a:	cwde   
  40e52b:	icebp  
  40e52c:	fcomp  DWORD PTR [esi+0x5083e71e]
  40e532:	pop    ecx
  40e533:	ja     0x40e561
  40e535:	dec    ecx
  40e536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e537:	mov    cl,BYTE PTR [ebp+esi*8+0x3e32be4f]
  40e53e:	ds pop ds
  40e540:	sub    ebp,DWORD PTR [edx]
  40e542:	ds jbe 0x40e566
  40e545:	dec    ecx
  40e546:	pusha  
  40e547:	stos   DWORD PTR es:[edi],eax
  40e548:	sti    
  40e549:	pusha  
  40e54a:	inc    ecx
  40e54b:	cmp    bl,BYTE PTR [esi+0x73]
  40e54e:	and    DWORD PTR [eax-0x498d20d],edx
  40e554:	ja     0x40e5ac
  40e556:	enter  0x4fa2,0x76
  40e55a:	add    DWORD PTR [ebx+ebp*1+0x44],edi
  40e55e:	cs mov ah,0x1c
  40e562:	lds    eax,FWORD PTR [ecx+0x39]
  40e565:	pop    ss
  40e566:	sbb    ah,BYTE PTR [ebx-0x36]
  40e569:	adc    ecx,DWORD PTR [edx]
  40e56b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56c:	int    0x90
  40e56e:	sbb    cl,BYTE PTR [esi]
  40e570:	xchg   edx,eax
  40e571:	arpl   WORD PTR [esi+0x56],bx
  40e574:	lock test BYTE PTR [edi+0x6124c230],ah
  40e57b:	pop    esi
  40e57c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e57d:	inc    esp
  40e57e:	mov    ebx,0x92454d1f
  40e583:	xchg   esp,eax
  40e584:	int3   
  40e585:	scas   al,BYTE PTR es:[edi]
  40e586:	stc    
  40e587:	mov    DWORD PTR [edx],eax
  40e589:	pop    ebx
  40e58a:	pop    ebp
  40e58b:	sti    
  40e58c:	(bad)  
  40e58e:	mov    bl,0x9f
  40e590:	div    BYTE PTR [ecx+eiz*4]
  40e593:	mov    es,WORD PTR [eax-0x41]
  40e596:	fbstp  TBYTE PTR ds:0x5bf6363b
  40e59c:	jae    0x40e520
  40e59e:	push   edx
  40e59f:	nop
  40e5a0:	dec    ecx
  40e5a1:	jg     0x40e539
  40e5a3:	push   esp
  40e5a4:	sbb    ch,BYTE PTR [ebp+0xd813fe0]
  40e5aa:	lods   eax,DWORD PTR ds:[esi]
  40e5ab:	add    BYTE PTR [ebx+ebx*8],ah
  40e5ae:	push   ecx
  40e5af:	rol    al,1
  40e5b1:	pushf  
  40e5b2:	push   ecx
  40e5b3:	sbb    DWORD PTR [ebx+0x7499c5e4],ebx
  40e5b9:	jo     0x40e611
  40e5bb:	fld    QWORD PTR [esi]
  40e5bd:	sbb    al,0x7f
  40e5bf:	jae    0x40e5e2
  40e5c1:	out    dx,al
  40e5c2:	call   0xd6355d4c
  40e5c7:	test   eax,0x6c645181
  40e5cc:	icebp  
  40e5cd:	mov    ds:0x7b4a8611,al
  40e5d2:	mov    eax,ds:0x44407dbd
  40e5d7:	repz loope 0x40e5de
  40e5da:	addr16 mov dl,0xe4
  40e5dd:	sbb    eax,0xc7b1d1a4
  40e5e2:	fdivr  st,st(0)
  40e5e4:	fidiv  WORD PTR [ecx-0x5b]
  40e5e7:	or     al,0x8d
  40e5e9:	iret   
  40e5ea:	jnp    0x40e5e3
  40e5ec:	or     eax,0x42a345b7
  40e5f1:	mov    edi,0x1a6c0b30
  40e5f6:	dec    ebx
  40e5f7:	and    edx,DWORD PTR [ebp+0x77]
  40e5fa:	repz mov ds:0xd042bd4a,al
  40e600:	adc    ch,ch
  40e602:	dec    edx
  40e603:	jmp    0x40e5d4
  40e605:	sub    eax,0x1a3971a9
  40e60a:	dec    ecx
  40e60b:	jns    0x40e684
  40e60d:	and    al,0x62
  40e60f:	pusha  
  40e610:	pop    eax
  40e611:	ins    BYTE PTR es:[edi],dx
  40e612:	mov    ax,ds:0xedb850b5
  40e618:	push   ebp
  40e619:	scas   al,BYTE PTR es:[edi]
  40e61a:	xor    BYTE PTR [eax+eax*8+0x75],0xcf
  40e61f:	(bad)  
  40e620:	repnz cmp bl,BYTE PTR [ebp-0x23]
  40e624:	cs jge 0x40e5f6
  40e627:	pop    edi
  40e628:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e629:	aam    0x13
  40e62b:	push   DWORD PTR [esi]
  40e62d:	jle    0x40e688
  40e62f:	cs and eax,0x1f898e1a
  40e635:	push   edx
  40e636:	add    al,al
  40e638:	inc    esi
  40e639:	cld    
  40e63a:	lods   eax,DWORD PTR ds:[esi]
  40e63b:	push   esi
  40e63c:	lods   eax,DWORD PTR ds:[esi]
  40e63d:	and    al,BYTE PTR [ebp-0x62]
  40e640:	lods   al,BYTE PTR ds:[esi]
  40e641:	pop    es
  40e642:	pop    esp
  40e643:	inc    ebp
  40e644:	in     al,0xbc
  40e646:	loop   0x40e6bf
  40e648:	ror    ecx,0xd9
  40e64b:	into   
  40e64c:	shl    DWORD PTR [eax+ebp*4+0x3fdd6f29],0xcc
  40e654:	repz push ss
  40e656:	xchg   edx,eax
  40e657:	(bad)  
  40e658:	fcomp  QWORD PTR [eax-0x1a3de152]
  40e65e:	stos   DWORD PTR es:[edi],eax
  40e65f:	inc    esi
  40e660:	jecxz  0x40e63a
  40e662:	xor    dh,BYTE PTR [ebx+0x2b3ac5e4]
  40e668:	inc    ecx
  40e669:	in     al,dx
  40e66a:	(bad)  
  40e66b:	retf   0xd9d8
  40e66e:	mov    ebx,0xfe3e5e98
  40e673:	aam    0xff
  40e675:	pusha  
  40e676:	jne    0x40e6e6
  40e678:	xchg   ecx,eax
  40e679:	ret    
  40e67a:	push   ebp
  40e67b:	(bad)  
  40e67c:	jmp    0xe901c3a1
  40e681:	ins    BYTE PTR es:[edi],dx
  40e682:	xchg   edi,eax
  40e683:	xor    BYTE PTR [edx-0x7754a40e],0xe6
  40e68a:	push   DWORD PTR [esi+0x3e]
  40e68d:	aad    0xa9
  40e68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e690:	push   0x1c
  40e692:	pop    eax
  40e693:	aas    
  40e694:	sub    DWORD PTR [ebp+0x2a1c1e5],esi
  40e69a:	and    ebp,DWORD PTR [ebp+0x2a66555d]
  40e6a0:	mov    dh,0xb8
  40e6a2:	cdq    
  40e6a3:	stc    
  40e6a4:	mov    bh,0x90
  40e6a6:	shr    BYTE PTR [eax-0x3635d7ce],cl
  40e6ac:	les    ebx,FWORD PTR [esi-0x4809092e]
  40e6b2:	repz push cs
  40e6b4:	mov    ch,0xe9
  40e6b6:	mov    bh,BYTE PTR [eax+eax*4-0x4]
  40e6ba:	mov    bl,0x6e
  40e6bc:	cmp    eax,DWORD PTR [ecx-0x65]
  40e6bf:	rol    BYTE PTR [eax+0x6f46a6b0],cl
  40e6c5:	adc    al,0x43
  40e6c7:	or     BYTE PTR [ebp-0x37],cl
  40e6ca:	(bad)  [esi]
  40e6cc:	(bad)  
  40e6cd:	(bad)  
  40e6ce:	jmp    0xb909b53e
  40e6d3:	or     dl,cl
  40e6d5:	popf   
  40e6d6:	ins    BYTE PTR es:[edi],dx
  40e6d7:	jb     0x40e666
  40e6d9:	sbb    al,0xdb
  40e6db:	pop    edx
  40e6dc:	js     0x40e663
  40e6de:	cmp    dl,BYTE PTR [edi]
  40e6e0:	xor    esi,DWORD PTR [esi+0x64]
  40e6e3:	test   cl,dh
  40e6e5:	aam    0xca
  40e6e7:	in     eax,0xa7
  40e6e9:	mov    ds:0x804b5fa0,al
  40e6ee:	mov    bh,BYTE PTR [ebx]
  40e6f0:	or     dh,dl
  40e6f2:	int    0xd7
  40e6f4:	leave  
  40e6f5:	aas    
  40e6f6:	stos   BYTE PTR es:[edi],al
  40e6f7:	xchg   DWORD PTR [eax],esp
  40e6f9:	cmc    
  40e6fa:	(bad)  
  40e6fb:	jmp    0xae970969
  40e700:	fcom   QWORD PTR [ebx-0x6e]
  40e703:	jmp    0x40e74c
  40e705:	or     ah,BYTE PTR [eax-0x28]
  40e708:	ins    DWORD PTR es:[edi],dx
  40e709:	jl     0x40e708
  40e70b:	add    eax,0xa3d57d43
  40e710:	fist   DWORD PTR [ebx-0xab1a8df]
  40e716:	or     eax,DWORD PTR [ebx]
  40e718:	or     esp,DWORD PTR es:[eax+edi*1]
  40e71c:	hlt    
  40e71d:	pop    ss
  40e71e:	mov    esp,edx
  40e720:	add    eax,0xfe0b2ab8
  40e725:	lds    esp,FWORD PTR [ecx+0x52bf871f]
  40e72b:	inc    eax
  40e72c:	push   esi
  40e72d:	pop    es
  40e72e:	inc    esi
  40e72f:	xchg   DWORD PTR [esi],eax
  40e731:	rcr    BYTE PTR [ecx-0x31b85485],0x42
  40e738:	stos   BYTE PTR es:[edi],al
  40e739:	dec    ebp
  40e73a:	mov    al,0xf8
  40e73c:	outs   dx,BYTE PTR ds:[esi]
  40e73d:	lea    ebx,[eax]
  40e73f:	jno    0x40e6d8
  40e741:	inc    ecx
  40e742:	push   ecx
  40e743:	sbb    eax,0xd13fbbe6
  40e749:	sbb    esp,DWORD PTR [ebx+ebx*8-0x3d07fe90]
  40e750:	fld    TBYTE PTR [eax]
  40e752:	inc    ebx
  40e753:	mov    al,0x66
  40e755:	call   0xf26ff6fd
  40e75a:	cli    
  40e75b:	push   ss
  40e75c:	out    dx,al
  40e75d:	das    
  40e75e:	pop    edx
  40e75f:	mov    dl,BYTE PTR [ecx+eax*2]
  40e762:	cmp    al,0x51
  40e764:	pop    es
  40e765:	mov    cl,0x5a
  40e767:	cmp    ebx,DWORD PTR [esi]
  40e769:	aas    
  40e76a:	xchg   ebp,eax
  40e76b:	test   BYTE PTR [eax-0x73],0x85
  40e76f:	outs   dx,DWORD PTR ds:[esi]
  40e770:	mov    ?,WORD PTR [eax-0x13]
  40e773:	stos   BYTE PTR es:[edi],al
  40e774:	and    eax,0xf8353a0d
  40e779:	mov    esi,0xcbae479b
  40e77e:	jne    0x40e79c
  40e780:	mov    ebp,0x73340962
  40e785:	inc    ecx
  40e786:	out    dx,al
  40e787:	das    
  40e788:	pusha  
  40e789:	arpl   WORD PTR [esi],cx
  40e78b:	js     0x40e711
  40e78d:	xchg   edx,eax
  40e78e:	scas   al,BYTE PTR es:[edi]
  40e78f:	daa    
  40e790:	mov    bh,0x78
  40e792:	sub    DWORD PTR [eax-0x77],ebp
  40e795:	xchg   ecx,eax
  40e796:	pop    ecx
  40e797:	cmp    esi,eax
  40e799:	mov    ds:0xd719400,eax
  40e79e:	xchg   ebx,eax
  40e79f:	xor    DWORD PTR [ebx+0x63],ecx
  40e7a2:	dec    esi
  40e7a3:	xchg   esp,eax
  40e7a4:	xchg   ebp,eax
  40e7a5:	push   ecx
  40e7a6:	pop    ss
  40e7a7:	dec    edx
  40e7a8:	adc    DWORD PTR [esi],esp
  40e7aa:	inc    edx
  40e7ab:	sub    BYTE PTR [edx-0x26382dae],al
  40e7b1:	in     eax,0x4c
  40e7b3:	rcr    ebx,cl
  40e7b5:	imul   ecx,DWORD PTR [edx+esi*1],0xffffffcc
  40e7b9:	or     DWORD PTR [edx+eax*1+0x3709f941],esi
  40e7c0:	sbb    BYTE PTR [ebp+0x3707b2c5],dl
  40e7c6:	jl     0x40e79d
  40e7c8:	out    dx,al
  40e7c9:	mov    ds:0xd51b80b,eax
  40e7ce:	fadd   st(7),st
  40e7d0:	jge    0x40e7d3
  40e7d2:	mov    dl,dl
  40e7d4:	xor    eax,0x3e0f1bb0
  40e7d9:	ficomp DWORD PTR [edi+0x28]
  40e7dc:	jo     0x40e804
  40e7de:	pop    ecx
  40e7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e0:	ds dec edi
  40e7e2:	inc    esp
  40e7e3:	in     eax,0x89
  40e7e5:	jns    0x40e808
  40e7e7:	lods   al,BYTE PTR ds:[esi]
  40e7e8:	mov    ebp,0xb708b99e
  40e7ed:	inc    eax
  40e7ee:	jg     0x40e7da
  40e7f0:	add    DWORD PTR [eax-0x1b],ebx
  40e7f3:	pushf  
  40e7f4:	or     BYTE PTR [esi],al
  40e7f6:	sar    BYTE PTR ds:0x203ba443,1
  40e7fc:	pop    es
  40e7fd:	jb     0x40e790
  40e7ff:	ret    
  40e800:	inc    edi
  40e801:	cmc    
  40e802:	fnstenv [eax+eiz*4+0x79]
  40e806:	int    0x1d
  40e808:	cmp    eax,0x5948cf8c
  40e80d:	mov    ?,WORD PTR [eax+0x79f028a]
  40e813:	mov    ecx,0xafba4ea
  40e818:	dec    ecx
  40e819:	clc    
  40e81a:	in     eax,dx
  40e81b:	mov    ah,BYTE PTR [esi+0x22]
  40e81e:	lods   eax,DWORD PTR ds:[esi]
  40e81f:	aam    0x3c
  40e821:	test   al,0xa5
  40e823:	aas    
  40e824:	and    bh,dl
  40e826:	adc    ah,BYTE PTR [esi-0x43]
  40e829:	adc    ebx,DWORD PTR [ecx-0x79]
  40e82c:	into   
  40e82d:	mov    ecx,0x776a08d4
  40e832:	and    eax,0xe6f64598
  40e837:	fsub   QWORD PTR [ecx+0x7a198709]
  40e83d:	cli    
  40e83e:	xchg   ebp,eax
  40e83f:	push   esi
  40e840:	pop    edi
  40e841:	inc    edx
  40e842:	loope  0x40e8a3
  40e844:	xor    BYTE PTR [edi],ch
  40e846:	mov    dh,0xd3
  40e848:	or     ah,dl
  40e84a:	push   eax
  40e84b:	pop    esp
  40e84c:	sub    ch,BYTE PTR [esi+0x3e1c0ff3]
  40e852:	fsub   DWORD PTR [edi-0x3d]
  40e855:	push   0xffffffc0
  40e857:	stos   BYTE PTR es:[edi],al
  40e858:	xchg   esi,eax
  40e859:	push   es
  40e85a:	jl     0x40e8da
  40e85c:	add    al,0xd4
  40e85e:	add    al,BYTE PTR [ebp+0x7c0c7d5d]
  40e864:	xchg   ebp,eax
  40e865:	(bad)  
  40e866:	jp     0x40e847
  40e868:	sub    esp,DWORD PTR [ebx]
  40e86a:	sbb    eax,0xe4eff0e2
  40e86f:	sub    BYTE PTR [edx+0x438227b2],al
  40e875:	jmp    0x7149112e
  40e87a:	pop    esp
  40e87b:	add    ebx,esp
  40e87d:	repz out 0x4c,al
  40e880:	add    BYTE PTR [ebx],al
  40e882:	pop    ecx
  40e883:	cwde   
  40e884:	cmp    eax,0x9010fc0c
  40e889:	adc    cl,cl
  40e88b:	int3   
  40e88c:	lods   eax,DWORD PTR ds:[esi]
  40e88d:	scas   al,BYTE PTR es:[edi]
  40e88e:	lods   eax,DWORD PTR ds:[esi]
  40e88f:	arpl   WORD PTR [edx+0x670b159e],bp
  40e895:	fwait
  40e896:	cmp    eax,0xb820822a
  40e89b:	add    eax,0x117d2f34
  40e8a0:	mov    dh,0x29
  40e8a2:	adc    eax,0x29979738
  40e8a7:	and    edi,esp
  40e8a9:	jle    0x40e8ad
  40e8ab:	mov    ds:0xf101a38,al
  40e8b0:	cli    
  40e8b1:	jp     0x40e87d
  40e8b3:	mov    ecx,0x256700fc
  40e8b8:	mov    al,ds:0xdc48852a
  40e8bd:	push   ebp
  40e8be:	enter  0x94a,0xff
  40e8c2:	dec    esi
  40e8c3:	or     bh,al
  40e8c5:	ins    DWORD PTR es:[edi],dx
  40e8c6:	xchg   BYTE PTR [edi],ah
  40e8c8:	aam    0x6c
  40e8ca:	idiv   DWORD PTR [ecx]
  40e8cc:	dec    edx
  40e8cd:	(bad)  
  40e8ce:	push   edx
  40e8cf:	lea    ecx,[ecx]
  40e8d1:	rol    DWORD PTR [edx+0x18],0x21
  40e8d5:	push   ecx
  40e8d6:	push   0x161d8d57
  40e8db:	mov    al,ds:0x30f7d952
  40e8e0:	add    DWORD PTR [eax+0x2b],edi
  40e8e3:	push   esi
  40e8e4:	(bad)  
  40e8e5:	and    edx,edx
  40e8e7:	leave  
  40e8e8:	push   eax
  40e8e9:	xlat   BYTE PTR ds:[ebx]
  40e8ea:	clc    
  40e8eb:	sbb    ecx,DWORD PTR [edx+0x4]
  40e8ee:	popa   
  40e8ef:	sub    eax,0x9310ddb0
  40e8f4:	imul   ecx,DWORD PTR [eax-0x725b81f5],0xf699aaed
  40e8fe:	jae    0x40e935
  40e900:	sub    edx,0x3dedef8e
  40e906:	jno    0x40e8a7
  40e908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e909:	dec    eax
  40e90a:	push   ds
  40e90b:	fld    st(2)
  40e90d:	xor    ah,BYTE PTR [ebx+ebp*1+0x364575d]
  40e914:	push   esi
  40e916:	shl    DWORD PTR [ecx+ebp*2-0x1d],1
  40e91a:	data16 into 
  40e91c:	or     BYTE PTR [esi+0x4874d59e],dl
  40e922:	jmp    0xc0cb5ea5
  40e927:	and    cl,bl
  40e929:	popf   
  40e92a:	and    eax,0x4696a779
  40e92f:	das    
  40e930:	inc    esp
  40e931:	repz and esp,DWORD PTR [edi+0x64]
  40e935:	add    eax,0xb9956144
  40e93a:	int    0xc1
  40e93c:	mov    bh,0x98
  40e93e:	sahf   
  40e93f:	mov    edx,0x7f8e02ad
  40e944:	fisttp QWORD PTR [ebp+0xb32c775]
  40e94a:	shl    bh,cl
  40e94c:	rol    esp,1
  40e94e:	test   al,0xb4
  40e950:	cwde   
  40e951:	xor    al,0x85
  40e953:	pop    esi
  40e954:	jmp    0x40e8e4
  40e956:	jne    0x40e977
  40e958:	fcomp  st(2)
  40e95a:	sbb    esp,0x14
  40e95d:	add    bh,BYTE PTR [eax+0x13e0f073]
  40e963:	sbb    al,0x6f
  40e965:	dec    esi
  40e966:	or     esp,DWORD PTR [ebx-0x66]
  40e969:	cmp    bh,BYTE PTR [esi-0x20]
  40e96c:	lock int3 
  40e96e:	ins    BYTE PTR es:[edi],dx
  40e96f:	in     al,0x5f
  40e971:	iret   
  40e972:	adc    ebp,DWORD PTR [edi]
  40e974:	daa    
  40e975:	loope  0x40e996
  40e977:	fnstenv [esi*2+0xadde8d3]
  40e97e:	xor    DWORD PTR [eax+edi*8-0x523d6c58],ebx
  40e985:	add    al,cl
  40e987:	mov    cs,WORD PTR [ebp+0x2ee3d6f1]
  40e98d:	pop    edx
  40e98e:	(bad)  
  40e98f:	cli    
  40e990:	scas   eax,DWORD PTR es:[edi]
  40e991:	and    eax,0x2a4557b9
  40e996:	sahf   
  40e997:	and    BYTE PTR [eax-0x49],0xb2
  40e99b:	adc    DWORD PTR [eax],edi
  40e99d:	pop    esi
  40e99e:	push   0x60b8ee83
  40e9a3:	jp     0x40e9de
  40e9a5:	aad    0x8
  40e9a7:	or     BYTE PTR [ebp+0x279ced84],bl
  40e9ad:	retf   0x62cb
  40e9b0:	push   esi
  40e9b1:	sbb    BYTE PTR [eax-0x1f],al
  40e9b4:	jge    0x40e95c
  40e9b6:	mov    ds:0x28925cd7,al
  40e9bb:	adc    al,0x5a
  40e9bd:	push   esp
  40e9be:	clc    
  40e9bf:	lahf   
  40e9c0:	enter  0x18c4,0x7e
  40e9c4:	sbb    dl,BYTE PTR [ebp+0x1]
  40e9c7:	xchg   esi,eax
  40e9c8:	sbb    eax,0xf260deaa
  40e9cd:	add    al,0xa8
  40e9cf:	outs   dx,BYTE PTR ds:[esi]
  40e9d0:	in     al,dx
  40e9d1:	jge    0x40e9ce
  40e9d3:	addr16 out 0x9a,eax
  40e9d6:	icebp  
  40e9d7:	push   edi
  40e9d8:	push   ss
  40e9d9:	or     DWORD PTR [edx],esi
  40e9db:	and    ch,BYTE PTR [esi+0x3e19f99a]
  40e9e1:	xchg   esi,eax
  40e9e2:	pop    ecx
  40e9e3:	outs   dx,DWORD PTR ds:[esi]
  40e9e4:	jbe    0x40e9d4
  40e9e6:	add    edi,ebx
  40e9e8:	fadd   QWORD PTR [edx+0x63]
  40e9eb:	jg     0x40ea30
  40e9ed:	mov    ch,0x2e
  40e9ef:	aam    0x5b
  40e9f1:	arpl   bp,cx
  40e9f3:	jp     0x40e9f7
  40e9f5:	ud1    ebx,DWORD PTR [eax]
  40e9f8:	or     ebp,0x4e
  40e9fb:	mov    esp,0x391a2eb5
  40ea00:	fnstenv [esi+0x2d]
  40ea03:	sbb    ebx,DWORD PTR [ecx+eax*2+0xc]
  40ea07:	cmp    al,0xcd
  40ea09:	sub    bl,dh
  40ea0b:	mov    dh,0x74
  40ea0d:	dec    ecx
  40ea0e:	cmp    al,bh
  40ea10:	enter  0x9935,0x36
  40ea14:	cmp    esp,DWORD PTR [edx]
  40ea16:	mov    cl,dh
  40ea18:	jno    0x40ea1a
  40ea1a:	adc    DWORD PTR [ecx+0x6d658ecf],eax
  40ea20:	xor    DWORD PTR [ebx],edi
  40ea22:	jbe    0x40e9c1
  40ea24:	push   ebx
  40ea25:	fcmovnbe st,st(3)
  40ea27:	mov    bh,BYTE PTR [esi+eax*2+0x38525b69]
  40ea2e:	lahf   
  40ea2f:	int    0x5d
  40ea31:	add    BYTE PTR [eax-0x560f8ff],cl
  40ea37:	out    0xd,eax
  40ea39:	jle    0x40e9ff
  40ea3b:	lods   al,BYTE PTR ds:[esi]
  40ea3c:	stos   BYTE PTR es:[edi],al
  40ea3d:	sbb    al,0x5e
  40ea3f:	inc    ecx
  40ea40:	cli    
  40ea41:	mov    dl,0x75
  40ea43:	dec    edi
  40ea44:	dec    si
  40ea46:	jp     0x40ea31
  40ea48:	adc    DWORD PTR ds:[ebx],esi
  40ea4b:	daa    
  40ea4c:	pushf  
  40ea4d:	dec    eax
  40ea4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea4f:	imul   ebx,DWORD PTR [ebx],0x5dccdfe2
  40ea55:	outs   dx,BYTE PTR ds:[esi]
  40ea56:	lea    edi,[eax+0x2cdee03e]
  40ea5c:	push   edx
  40ea5d:	mov    al,ds:0xb85dbdd8
  40ea62:	sar    DWORD PTR [ecx-0x12],1
  40ea65:	pop    eax
  40ea66:	cld    
  40ea67:	xchg   ebp,eax
  40ea68:	test   eax,0x11b918fb
  40ea6d:	push   ebp
  40ea6e:	scas   al,BYTE PTR es:[edi]
  40ea6f:	ins    DWORD PTR es:[edi],dx
  40ea70:	mov    WORD PTR es:[edi-0x17],?
  40ea74:	(bad)  
  40ea75:	stos   DWORD PTR es:[edi],eax
  40ea76:	test   eax,0x16c115e2
  40ea7b:	mov    cl,0x6
  40ea7d:	sub    al,0xf1
  40ea7f:	sti    
  40ea80:	mov    bl,0x1d
  40ea82:	mov    ds:0xf2cf5eb4,al
  40ea87:	(bad)  
  40ea88:	in     al,0xb6
  40ea8a:	jp     0x40ea42
  40ea8c:	dec    edx
  40ea8d:	mov    eax,ds:0xc0b872d7
  40ea92:	sub    al,0xae
  40ea94:	test   BYTE PTR [ebp+eiz*2-0x7f],0x92
  40ea99:	adc    DWORD PTR [esi-0x794d248b],ebp
  40ea9f:	sub    DWORD PTR [ebp-0x6d],edx
  40eaa2:	xor    DWORD PTR [edi],edi
  40eaa4:	push   0x886a23c7
  40eaa9:	xchg   edi,eax
  40eaaa:	mov    esp,0xcdeb2ed2
  40eaaf:	mov    DWORD PTR [eax],esp
  40eab1:	(bad)  
  40eab2:	daa    
  40eab3:	mov    dl,0xad
  40eab5:	push   edi
  40eab6:	jg     0x40ea86
  40eab8:	sbb    bl,al
  40eaba:	xchg   esp,eax
  40eabb:	xor    al,0x92
  40eabd:	sbb    eax,0x2317add4
  40eac2:	xchg   DWORD PTR [ecx-0x6a353ed3],esp
  40eac8:	sbb    ebx,esi
  40eaca:	xchg   ebx,eax
  40eacb:	dec    edx
  40eacc:	iret   
  40eacd:	lods   al,BYTE PTR ds:[esi]
  40eace:	mov    al,0x21
  40ead0:	inc    edx
  40ead1:	xor    BYTE PTR [ebx-0x7ae54977],bh
  40ead7:	aas    
  40ead8:	xchg   edi,eax
  40ead9:	push   ss
  40eada:	and    al,dh
  40eadc:	mov    edx,0x2b3c0871
  40eae1:	fidivr DWORD PTR [ebx]
  40eae3:	call   0xe232:0x9584b73
  40eaea:	cs xor bl,bl
  40eaed:	(bad)  
  40eaee:	and    al,0x97
  40eaf0:	or     esp,ecx
  40eaf2:	fnstsw WORD PTR [ecx]
  40eaf4:	test   DWORD PTR [ecx-0x1b],esp
  40eaf7:	add    eax,DWORD PTR [edx]
  40eaf9:	jnp    0x40eaf1
  40eafb:	mov    eax,ds:0xfe2929b3
  40eb00:	and    BYTE PTR [edi+eiz*4],dl
  40eb03:	and    eax,0x53f6266f
  40eb08:	out    0x16,eax
  40eb0a:	pop    ds
  40eb0b:	push   0x35539036
  40eb10:	adc    ebp,eax
  40eb12:	paddd  mm6,QWORD PTR [eax]
  40eb15:	and    ah,dl
  40eb17:	test   dh,ch
  40eb19:	mov    al,ds:0xd225d91a
  40eb1e:	ja     0x40eaf4
  40eb20:	adc    al,BYTE PTR [ecx]
  40eb22:	ja     0x40eabe
  40eb24:	pop    eax
  40eb25:	cmp    esp,eax
  40eb27:	and    BYTE PTR [esi],cl
  40eb29:	mov    eax,0x4bca34b0
  40eb2e:	fisttp WORD PTR [edi+eiz*4-0x61]
  40eb32:	xor    BYTE PTR [ecx],ah
  40eb34:	out    0x90,al
  40eb36:	cmp    edx,esi
  40eb38:	mov    DWORD PTR [edi+0x42],edx
  40eb3b:	cmp    al,0x1b
  40eb3d:	pusha  
  40eb3e:	push   ds
  40eb3f:	dec    ebp
  40eb40:	add    eax,0xf5352266
  40eb45:	cmp    bh,dh
  40eb47:	scas   eax,DWORD PTR es:[edi]
  40eb48:	sbb    esi,edx
  40eb4a:	sub    DWORD PTR ds:0x5727c954,ecx
  40eb50:	ret    
  40eb51:	into   
  40eb52:	jo     0x40eb1b
  40eb54:	clc    
  40eb55:	and    al,0x21
  40eb57:	out    0x1e,al
  40eb59:	pop    ebx
  40eb5a:	outs   dx,BYTE PTR ds:[esi]
  40eb5b:	sbb    eax,0xaf66e61a
  40eb60:	mov    dl,0x0
  40eb62:	inc    eax
  40eb63:	(bad)  
  40eb64:	call   0xe67f:0xafd1c782
  40eb6b:	test   al,0x17
  40eb6d:	xor    al,0xc2
  40eb6f:	outs   dx,DWORD PTR ds:[esi]
  40eb70:	sahf   
  40eb71:	cmp    eax,0xbb15c807
  40eb76:	add    dh,BYTE PTR [eax+0x39]
  40eb79:	ret    
  40eb7a:	retf   
  40eb7b:	dec    esi
  40eb7c:	ins    BYTE PTR es:[edi],dx
  40eb7d:	pushf  
  40eb7e:	mov    esp,0x1ddf9bcc
  40eb83:	test   DWORD PTR [ebx],ecx
  40eb85:	xchg   ecx,eax
  40eb86:	sub    esp,ebp
  40eb88:	mov    ch,bh
  40eb8a:	stos   BYTE PTR es:[edi],al
  40eb8b:	scas   eax,DWORD PTR es:[edi]
  40eb8c:	fimul  DWORD PTR [edx+0x52]
  40eb8f:	push   ss
  40eb90:	sub    DWORD PTR [ebx+0x3791c329],ebx
  40eb96:	push   0xa6c6eba1
  40eb9b:	ins    DWORD PTR es:[edi],dx
  40eb9c:	and    eax,DWORD PTR [esi]
  40eb9e:	leave  
  40eb9f:	popa   
  40eba0:	enter  0x8a7f,0x7e
  40eba4:	pop    edx
  40eba5:	jnp    0x40ebe0
  40eba7:	fcom   QWORD PTR [edi]
  40eba9:	fnstsw WORD PTR [esi+0x4afa92bd]
  40ebaf:	js     0x40eb9a
  40ebb1:	in     eax,0xd4
  40ebb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb4:	bound  esp,QWORD PTR [edx-0x7dbde9c4]
  40ebba:	or     eax,0x8365970
  40ebbf:	mov    esi,0x87ff1e4b
  40ebc4:	jns    0x40eb59
  40ebc6:	outs   dx,DWORD PTR ds:[esi]
  40ebc7:	dec    ecx
  40ebc8:	sbb    DWORD PTR [edi+0x6f80e501],0x5c7c8555
  40ebd2:	push   DWORD PTR [eax-0x3]
  40ebd5:	ficom  WORD PTR [eax+0x4f]
  40ebd8:	jne    0x40eba4
  40ebda:	mov    edx,0x47ebf053
  40ebdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebe0:	xchg   esp,eax
  40ebe1:	xor    al,0x8d
  40ebe3:	cmc    
  40ebe4:	xchg   ecx,eax
  40ebe5:	div    BYTE PTR [eax]
  40ebe7:	neg    ah
  40ebe9:	neg    edx
  40ebeb:	outs   dx,BYTE PTR ds:[esi]
  40ebec:	and    dh,ch
  40ebee:	lds    edx,FWORD PTR [ecx-0x4b]
  40ebf1:	aaa    
  40ebf2:	xor    ebx,esi
  40ebf4:	mov    edx,0x6f202b2c
  40ebf9:	div    BYTE PTR [eax]
  40ebfb:	(bad)  
  40ebfc:	mov    ah,0xb5
  40ebfe:	sub    BYTE PTR [ebp+0x2dd8975c],0x2e
  40ec05:	pop    ss
  40ec06:	add    al,BYTE PTR [esi]
  40ec08:	xchg   ebp,eax
  40ec09:	cmc    
  40ec0a:	leave  
  40ec0b:	cld    
  40ec0c:	and    DWORD PTR [esi],esp
  40ec0e:	add    eax,0xc96de58
  40ec13:	int    0xe3
  40ec15:	jmp    0xa050:0x576f89c0
  40ec1c:	pop    ds
  40ec1d:	push   eax
  40ec1e:	jmp    0x40ec73
  40ec20:	pop    es
  40ec21:	popa   
  40ec22:	cmp    edi,ebx
  40ec24:	in     eax,0x0
  40ec26:	cvtps2pi mm1,QWORD PTR es:[esi-0xff26660]
  40ec2e:	pop    esi
  40ec2f:	pop    ss
  40ec30:	push   cs
  40ec31:	aas    
  40ec32:	pop    ecx
  40ec33:	sbb    dh,bl
  40ec35:	enter  0xaf77,0x0
  40ec39:	jb     0x40ec7e
  40ec3b:	or     ah,BYTE PTR [edi+0xbf23113]
  40ec41:	(bad)
  40ec44:	push   0x6a785b77
  40ec49:	cld    
  40ec4a:	shl    DWORD PTR [ecx-0x168a4c75],1
  40ec50:	jae    0x40ebfa
  40ec52:	gs jb  0x40ebd9
  40ec55:	test   DWORD PTR [eax-0x7c],edi
  40ec58:	ds je  0x40ebe7
  40ec5b:	addr16 adc ch,cl
  40ec5e:	mov    edx,0x5c0e1143
  40ec63:	mov    cl,0x6e
  40ec65:	and    al,0xd3
  40ec67:	inc    ebp
  40ec68:	call   0xf50f:0x3049f72
  40ec6f:	xchg   edi,edi
  40ec71:	mov    al,ds:0xc34d4b1c
  40ec76:	mov    esp,0x2c83d6bd
  40ec7b:	test   al,0x1c
  40ec7d:	stos   BYTE PTR es:[edi],al
  40ec7e:	test   eax,0xd9c9eb33
  40ec83:	sub    BYTE PTR [ecx],al
  40ec85:	lods   al,BYTE PTR ds:[esi]
  40ec86:	lds    ebp,FWORD PTR [ebp+0x695ae62c]
  40ec8c:	ss push ebp
  40ec8e:	push   ss
  40ec8f:	in     al,0x9e
  40ec91:	pop    edx
  40ec92:	test   WORD PTR [edi-0x49],bp
  40ec96:	lea    ecx,[ebx+0x3d]
  40ec99:	mov    bh,0xb1
  40ec9b:	mov    ds:0xbaa63a91,eax
  40eca0:	ins    BYTE PTR es:[edi],dx
  40eca1:	fcom   DWORD PTR [esi]
  40eca3:	add    BYTE PTR [ebx+eax*8],ah
  40eca6:	scas   eax,DWORD PTR es:[edi]
  40eca7:	pop    ds
  40eca8:	lahf   
  40eca9:	add    ebp,eax
  40ecab:	add    al,0xbd
  40ecad:	xchg   BYTE PTR [esi-0x71],al
  40ecb0:	ror    DWORD PTR [eax],cl
  40ecb2:	int    0x26
  40ecb4:	and    ch,BYTE PTR [eax+0x1d]
  40ecb7:	pushf  
  40ecb8:	dec    edi
  40ecba:	adc    BYTE PTR [ecx],bh
  40ecbc:	bound  ecx,QWORD PTR [edi+0x2cb80adc]
  40ecc2:	xchg   edx,eax
  40ecc3:	push   ecx
  40ecc4:	sub    eax,0xc64a5664
  40ecc9:	inc    ebx
  40ecca:	fadd   DWORD PTR [ecx-0x29bb0066]
  40ecd0:	repz jle 0x40ec66
  40ecd3:	xchg   edi,eax
  40ecd4:	ins    DWORD PTR es:[edi],dx
  40ecd5:	lods   al,BYTE PTR ds:[esi]
  40ecd6:	push   esi
  40ecd8:	out    dx,al
  40ecd9:	dec    ecx
  40ecda:	mov    ah,0xcf
  40ecdc:	cld    
  40ecdd:	xchg   ebp,eax
  40ecde:	adc    bl,ch
  40ece0:	repz leave 
  40ece2:	sahf   
  40ece3:	loop   0x40ec96
  40ece5:	jbe    0x40ec99
  40ece7:	inc    ecx
  40ece8:	(bad)  
  40ece9:	xor    eax,0xdedfa4c0
  40ecee:	or     al,BYTE PTR [ecx+0x14]
  40ecf1:	mov    ah,0xee
  40ecf3:	add    eax,DWORD PTR [edx-0x7f]
  40ecf6:	das    
  40ecf7:	xchg   BYTE PTR [esi+ebx*8],bl
  40ecfa:	mov    ecx,0x4e099c0f
  40ecff:	in     eax,dx
  40ed00:	sbb    eax,0x885f4912
  40ed05:	or     eax,0x1a7d55b5
  40ed0a:	test   eax,0x35bd4822
  40ed0f:	sub    DWORD PTR [ebp+ecx*1-0x2e],ebp
  40ed13:	gs mov cl,0xc9
  40ed16:	repnz fldcw WORD PTR gs:[ecx+eax*2+0x5d]
  40ed1c:	daa    
  40ed1d:	adc    eax,0x85ee34d5
  40ed22:	popf   
  40ed23:	xor    bh,BYTE PTR [ecx+0x10]
  40ed26:	cmp    al,0x9d
  40ed28:	push   0x7b6938c
  40ed2d:	mov    ah,0x14
  40ed2f:	test   al,0xfd
  40ed31:	dec    esp
  40ed32:	mov    ds:0x5c1e008a,eax
  40ed37:	repnz inc ecx
  40ed39:	or     BYTE PTR [eax+ebx*1-0x1d],bh
  40ed3d:	arpl   bx,dx
  40ed3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed40:	aas    
  40ed41:	(bad)  
  40ed42:	ror    DWORD PTR [ebx+edi*8-0x7d],1
  40ed46:	stc    
  40ed47:	mov    ebp,esi
  40ed49:	in     eax,0xda
  40ed4b:	add    DWORD PTR [ecx+edx*8],edi
  40ed4e:	xchg   ecx,eax
  40ed50:	pusha  
  40ed51:	in     eax,dx
  40ed52:	in     al,dx
  40ed53:	jae    0x40ed6b
  40ed55:	fdivr  st(7),st
  40ed57:	push   0x47
  40ed59:	cs je  0x40ed14
  40ed5c:	push   es
  40ed5d:	and    esi,edi
  40ed5f:	lea    esp,[ebx-0x5fb3e4d6]
  40ed65:	stc    
  40ed66:	outs   dx,DWORD PTR ds:[esi]
  40ed67:	test   eax,0x6cdaca1d
  40ed6c:	adc    al,0x7e
  40ed6e:	arpl   WORD PTR [edx+0x69],sp
  40ed71:	push   ebx
  40ed72:	xchg   esp,eax
  40ed73:	jge    0x40eda4
  40ed75:	aaa    
  40ed76:	jmp    0xfafa:0x6e99f029
  40ed7d:	pop    DWORD PTR ds:[eax-0x6d]
  40ed81:	fwait
  40ed82:	hlt    
  40ed83:	adc    al,0xa6
  40ed85:	mov    eax,ds:0xfa47d707
  40ed8a:	jl     0x40edb4
  40ed8c:	pop    ebx
  40ed8d:	out    dx,al
  40ed8e:	leave  
  40ed8f:	inc    edi
  40ed90:	mov    BYTE PTR [esi-0x2d],bl
  40ed93:	enter  0xb4b5,0xf0
  40ed97:	mov    ah,0x1c
  40ed99:	stc    
  40ed9a:	aaa    
  40ed9b:	mov    bh,0x81
  40ed9d:	cli    
  40ed9e:	pop    ecx
  40ed9f:	retf   
  40eda0:	out    0xa7,eax
  40eda2:	retf   
  40eda3:	sub    al,0xd1
  40eda5:	js     0x40ed87
  40eda7:	in     eax,0x7b
  40eda9:	or     ebp,eax
  40edab:	repz scas eax,DWORD PTR es:[edi]
  40edad:	jmp    0x6748:0x6787b58a
  40edb4:	cmp    DWORD PTR [esp+ebp*4+0x4c],edx
  40edb8:	pop    edx
  40edb9:	das    
  40edba:	loop   0x40edcc
  40edbc:	pop    ebp
  40edbd:	mov    cl,0xd9
  40edbf:	mov    bh,0xd0
  40edc1:	fmulp  st(3),st
  40edc3:	jmp    FWORD PTR [ebx]
  40edc5:	sbb    esi,DWORD PTR [ebx-0x6c]
  40edc8:	add    ah,BYTE PTR [esi+0xa]
  40edcb:	out    dx,eax
  40edcc:	jmp    0x40ee42
  40edce:	cdq    
  40edcf:	push   ss
  40edd0:	jmp    0x4b9314f5
  40edd5:	in     eax,dx
  40edd6:	in     eax,dx
  40edd7:	or     DWORD PTR [ebx-0x3],edx
  40edda:	mov    esi,0xd01753e
  40eddf:	stos   DWORD PTR es:[edi],eax
  40ede0:	cld    
  40ede1:	mov    fs,WORD PTR [edx+eiz*8]
  40ede4:	push   esp
  40ede5:	cwde   
  40ede6:	add    esp,DWORD PTR [ebx+0x11]
  40ede9:	sub    DWORD PTR [ebx+0x15],edx
  40edec:	imul   eax,DWORD PTR [ebx],0xffffffd6
  40edef:	mov    al,0xc6
  40edf1:	adc    DWORD PTR [ebp-0x3d],ecx
  40edf4:	loop   0x40ee23
  40edf6:	ret    0x6573
  40edf9:	or     edi,DWORD PTR [ebx+0x60]
  40edfc:	pop    eax
  40edfd:	cdq    
  40edfe:	mov    dl,0x9b
  40ee00:	fxch   st(4)
  40ee02:	lods   eax,DWORD PTR ds:[esi]
  40ee03:	lahf   
  40ee04:	ins    DWORD PTR es:[edi],dx
  40ee05:	fsubp  st(5),st
  40ee07:	pop    esi
  40ee08:	and    edi,DWORD PTR [ecx+ecx*8+0xe6fc614]
  40ee0f:	or     ecx,DWORD PTR ds:0x829c787d
  40ee15:	loopne 0x40ee4c
  40ee17:	xor    edi,esp
  40ee19:	dec    ecx
  40ee1a:	loope  0x40ee04
  40ee1c:	push   ds
  40ee1d:	stc    
  40ee1e:	lods   al,BYTE PTR ds:[esi]
  40ee1f:	rcl    DWORD PTR [edi],cl
  40ee21:	ret    0x6f7a
  40ee24:	dec    ebp
  40ee25:	nop
  40ee26:	outs   dx,DWORD PTR ds:[esi]
  40ee27:	ror    BYTE PTR [esi-0x7a8e92a7],1
  40ee2d:	jnp    0x40ee6e
  40ee2f:	xor    BYTE PTR [ebx],bh
  40ee31:	mov    bh,0x4e
  40ee33:	es mov dl,0x30
  40ee36:	add    DWORD PTR [esi+eax*8-0x1eafcdf7],ecx
  40ee3d:	(bad)  
  40ee3e:	int3   
  40ee3f:	add    DWORD PTR [ebp-0x6c],eax
  40ee42:	inc    esp
  40ee43:	jecxz  0x40ee22
  40ee45:	or     eax,0x578676c9
  40ee4a:	fistp  QWORD PTR [esi+0x774969d]
  40ee50:	(bad)  
  40ee51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee52:	xor    BYTE PTR [ebx-0x35],dl
  40ee55:	loop   0x40eec0
  40ee57:	mov    ecx,es
  40ee59:	out    0x54,eax
  40ee5b:	xchg   ebp,eax
  40ee5c:	(bad)  
  40ee5d:	(bad)  
  40ee5e:	hlt    
  40ee5f:	mov    eax,0x8b26a8f8
  40ee64:	jne    0x40eec0
  40ee66:	and    bl,cl
  40ee68:	xor    eax,edx
  40ee6a:	outs   dx,DWORD PTR ds:[esi]
  40ee6b:	je     0x40ee08
  40ee6d:	or     DWORD PTR [esi+eiz*8+0x4a],edx
  40ee71:	imul   esi
  40ee73:	(bad)  
  40ee74:	push   ecx
  40ee75:	or     DWORD PTR [edi-0xbe3b05],ebp
  40ee7b:	fwait
  40ee7c:	dec    edi
  40ee7d:	inc    ebx
  40ee7e:	mov    DWORD PTR [ecx+0x146297aa],ebx
  40ee84:	adc    edx,DWORD PTR es:[esi+ebp*2+0x47]
  40ee89:	jecxz  0x40eed8
  40ee8b:	pop    edi
  40ee8c:	jno    0x40eed4
  40ee8e:	test   al,0xba
  40ee90:	or     ecx,DWORD PTR [esp+eax*8]
  40ee93:	shl    DWORD PTR [esi-0x44],cl
  40ee96:	and    al,0x30
  40ee98:	xchg   esp,eax
  40ee99:	jecxz  0x40ee68
  40ee9b:	cmp    bl,BYTE PTR [eax-0x19fb8a17]
  40eea1:	gs mov esp,0xe49bce41
  40eea7:	shr    BYTE PTR [eax+ebx*1],1
  40eeaa:	fidiv  DWORD PTR [ebp-0x13]
  40eead:	sar    BYTE PTR [ebx],0x99
  40eeb0:	(bad)  
  40eeb2:	mov    al,cl
  40eeb4:	cli    
  40eeb5:	push   ebx
  40eeb6:	stc    
  40eeb7:	push   eax
  40eeb9:	mul    BYTE PTR [eax-0x17201c92]
  40eebf:	mov    eax,0x23ee66f8
  40eec4:	shl    DWORD PTR [edi-0x39],0xbf
  40eec8:	mov    edx,DWORD PTR [esi+0x54b74f6d]
  40eece:	stc    
  40eecf:	daa    
  40eed0:	or     DWORD PTR ds:0x74c1fb65,esp
  40eed6:	(bad)  [eax+0x65]
  40eed9:	mov    ebx,0xf0023762
  40eede:	pop    edx
  40eedf:	jb     0x40eefe
  40eee1:	jmp    0x40eeec
  40eee3:	cmp    eax,0xbc61e1ba
  40eee8:	(bad)  
  40eee9:	xchg   edx,eax
  40eeea:	aas    
  40eeeb:	sti    
  40eeec:	mov    dh,BYTE PTR [edi+0xccea3b6]
  40eef2:	sbb    edi,DWORD PTR [edi-0x1ac1aec2]
  40eef8:	jg     0x40ef62
  40eefa:	mov    cl,0xbc
  40eefc:	cmp    dl,BYTE PTR [eax+0x397cbb2f]
  40ef02:	data16 mov ah,BYTE PTR [ebx+0x7fb7313c]
  40ef09:	loopne 0x40ef4d
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	mov    ch,0x35
  40ef0e:	out    dx,eax
  40ef0f:	dec    eax
  40ef10:	sub    ch,0x61
  40ef13:	cmp    DWORD PTR [eax],edx
  40ef15:	jno    0x40eed4
  40ef17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef18:	pop    eax
  40ef19:	std    
  40ef1a:	pushf  
  40ef1b:	popf   
  40ef1c:	and    BYTE PTR [edi],bl
  40ef1e:	jne    0x40ef86
  40ef20:	jp     0x40eeff
  40ef22:	jmp    0x4536f419
  40ef27:	sbb    BYTE PTR [eax],dl
  40ef29:	retf   0xa1b4
  40ef2c:	clc    
  40ef2d:	pop    ds
  40ef2e:	inc    ebx
  40ef2f:	and    eax,0x44ddc4
  40ef34:	sub    DWORD PTR [edi],ecx
  40ef36:	pop    edx
  40ef37:	(bad)  
  40ef38:	sbb    al,0x5d
  40ef3a:	fstp   QWORD PTR [esi]
  40ef3c:	seta   BYTE PTR [eax+0x5c]
  40ef40:	adc    ecx,ebp
  40ef42:	inc    eax
  40ef43:	enter  0xd0ca,0x40
  40ef47:	jmp    0xbf22:0x3741e018
  40ef4e:	and    eax,0xeb02aac
  40ef53:	arpl   di,cx
  40ef55:	jne    0x40ef74
  40ef57:	pop    ds
  40ef58:	div    BYTE PTR [esi]
  40ef5a:	stos   DWORD PTR es:[edi],eax
  40ef5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef5c:	mov    ecx,0xaabee55e
  40ef61:	or     ebp,ebp
  40ef63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef64:	jbe    0x40ef6f
  40ef66:	loopne 0x40ef16
  40ef68:	push   ds
  40ef69:	call   0xcd6fa0b1
  40ef6e:	neg    DWORD PTR [ecx-0x70d7dd4f]
  40ef74:	loop   0x40efb0
  40ef76:	(bad)  [esi-0x29]
  40ef79:	jbe    0x40ef07
  40ef7b:	call   0x145e:0xf0fc43ac
  40ef82:	jbe    0x40efc9
  40ef84:	push   0xffffffb3
  40ef86:	ins    BYTE PTR es:[edi],dx
  40ef87:	out    0xce,eax
  40ef89:	jg     0x40ef54
  40ef8b:	xor    esi,DWORD PTR ss:[ebx]
  40ef8e:	xchg   esp,eax
  40ef8f:	adc    al,0xa1
  40ef91:	mov    esp,DWORD PTR [ecx]
  40ef93:	add    eax,0x3ab99f70
  40ef98:	mov    ch,BYTE PTR [ecx]
  40ef9a:	adc    cl,0x27
  40ef9d:	not    BYTE PTR [ebp+ebx*4+0x51c129d5]
  40efa4:	and    eax,esp
  40efa6:	dec    esi
  40efa7:	push   edi
  40efa8:	rcl    ebp,0x3f
  40efab:	hlt    
  40efac:	jo     0x40efb9
  40efae:	jl     0x40ef38
  40efb0:	test   al,0x0
  40efb2:	ja     0x40ef86
  40efb4:	pop    esp
  40efb5:	inc    eax
  40efb6:	aad    0xff
  40efb8:	shr    BYTE PTR [eax-0x4b],1
  40efbb:	mov    bh,0xf0
  40efbd:	test   al,0xfa
  40efbf:	xchg   esp,eax
  40efc0:	push   ss
  40efc1:	inc    edx
  40efc2:	int3   
  40efc3:	loopne 0x40efd5
  40efc5:	pop    ebx
  40efc6:	loopne 0x40f022
  40efc8:	xchg   esi,eax
  40efc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efca:	mov    bl,0x40
  40efcc:	retf   
  40efcd:	dec    ebp
  40efce:	mov    BYTE PTR [eax-0x2f6de9a8],al
  40efd4:	xchg   ecx,eax
  40efd5:	outs   dx,BYTE PTR ds:[esi]
  40efd6:	pop    es
  40efd7:	jno    0x40efad
  40efd9:	push   eax
  40efda:	jmp    0x74b9:0x3badf27f
  40efe1:	pushf  
  40efe2:	jmp    0x40efcc
  40efe4:	int3   
  40efe5:	push   0x72f829b6
  40efea:	and    al,0xcb
  40efec:	icebp  
  40efed:	xor    ah,BYTE PTR [ebx]
  40efef:	rcr    DWORD PTR [ebx-0x7844990],1
  40eff5:	jbe    0x40f04f
  40eff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eff8:	out    0x2c,eax
  40effa:	fbstp  TBYTE PTR [esi-0x1]
  40effd:	cld    
  40effe:	imul   ebp,ecx,0x77
  40f001:	lahf   
  40f002:	xchg   edx,eax
  40f003:	(bad)  
  40f005:	dec    eax
  40f006:	jnp    0x40efd5
  40f008:	lds    ebp,FWORD PTR [edx-0x7a]
  40f00b:	push   ss
  40f00c:	jo     0x40eff7
  40f00e:	fist   DWORD PTR [ebp+0x2d]
  40f011:	out    dx,al
  40f012:	sbb    edi,edi
  40f014:	out    0xc8,eax
  40f016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f017:	push   ss
  40f018:	mov    ds:0xc84b4e5d,al
  40f01d:	(bad)  
  40f01e:	xor    ebx,edi
  40f020:	mov    bl,0x90
  40f022:	sub    al,0xc0
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	push   0x20
  40f027:	enter  0xb948,0x5b
  40f02b:	(bad)  
  40f02c:	mov    edi,0xc80984da
  40f031:	mov    ecx,0xf7afc8d7
  40f036:	ja     0x40f046
  40f038:	mul    ebp
  40f03a:	sub    eax,0xc454d85e
  40f03f:	mov    ch,0x9e
  40f041:	add    ch,BYTE PTR [edi+ecx*8]
  40f044:	inc    eax
  40f045:	push   cs
  40f046:	xor    bl,BYTE PTR [eax+0x5d31308a]
  40f04c:	sub    ecx,DWORD PTR [eax]
  40f04e:	or     BYTE PTR [edi-0x70dfb8d2],cl
  40f054:	xor    DWORD PTR [ebp+0x31],edx
  40f057:	test   eax,0xb527d846
  40f05c:	bound  ebx,QWORD PTR [edi+ecx*1+0x2b38265e]
  40f063:	imul   ebx,DWORD PTR [esi],0xffffffac
  40f066:	mov    DWORD PTR [eax],ebp
  40f068:	mov    ds:0x5533c5cc,eax
  40f06d:	inc    ebp
  40f06e:	cmp    al,dh
  40f070:	dec    ecx
  40f071:	and    eax,0x41053c3a
  40f076:	daa    
  40f077:	jmp    0x40f09b
  40f079:	sub    ecx,0x3e86545f
  40f07f:	mov    dh,0x2d
  40f081:	sti    
  40f082:	mov    eax,ds:0x5b32b02d
  40f087:	dec    ecx
  40f088:	cmp    dl,bh
  40f08a:	mov    dl,0xe8
  40f08c:	or     al,0x47
  40f08e:	inc    edx
  40f08f:	daa    
  40f090:	pop    esp
  40f091:	push   esi
  40f092:	icebp  
  40f093:	leave  
  40f094:	add    al,0x51
  40f096:	pop    ebx
  40f097:	out    0x5b,al
  40f099:	cdq    
  40f09a:	(bad)
  40f09d:	or     esp,DWORD PTR [edx]
  40f09f:	mov    WORD PTR [edi-0x11],?
  40f0a2:	imul   edi,DWORD PTR [esi],0xc4c3e3d4
  40f0a8:	inc    esp
  40f0a9:	lds    edx,FWORD PTR [ebp+edx*8+0x3b3e7150]
  40f0b0:	push   ds
  40f0b1:	ss in  al,dx
  40f0b3:	push   esi
  40f0b4:	dec    ebx
  40f0b5:	out    dx,eax
  40f0b6:	and    BYTE PTR [esi+0x22cc6ecc],0x2
  40f0bd:	mov    edx,0xb1968120
  40f0c2:	shl    DWORD PTR [edi],0x19
  40f0c5:	test   al,cl
  40f0c7:	div    bl
  40f0c9:	fwait
  40f0ca:	push   ebx
  40f0cb:	popf   
  40f0cc:	jg     0x40f083
  40f0ce:	dec    ebx
  40f0cf:	cmp    eax,0x4474cf6f
  40f0d4:	aaa    
  40f0d5:	stos   BYTE PTR es:[edi],al
  40f0d6:	dec    ebx
  40f0d7:	or     ebp,edx
  40f0d9:	sub    eax,0x1ea2e6be
  40f0de:	not    BYTE PTR [esi]
  40f0e0:	mov    ?,WORD PTR [edi-0x783d0dd5]
  40f0e6:	inc    ecx
  40f0e7:	sub    al,0x5f
  40f0e9:	daa    
  40f0ea:	fucomp st(7)
  40f0ec:	xchg   esi,eax
  40f0ed:	in     eax,0x1e
  40f0ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0f0:	or     eax,0xc60eec89
  40f0f5:	mov    dh,0x67
  40f0f7:	add    BYTE PTR [ebp+0x3e3ba0f7],al
  40f0fd:	mov    ds:0x621b1c3b,eax
  40f102:	or     BYTE PTR [esi],0xff
  40f105:	test   al,0x65
  40f107:	mov    ebp,0xdbb6e2a4
  40f10c:	stos   BYTE PTR es:[edi],al
  40f10d:	jo     0x40f186
  40f10f:	ret    0x4b1b
  40f112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f113:	out    dx,eax
  40f114:	pop    eax
  40f115:	ins    DWORD PTR es:[edi],dx
  40f116:	or     cl,BYTE PTR [ebx]
  40f118:	push   ebx
  40f119:	rcl    BYTE PTR es:[ebx+0x59],cl
  40f11d:	jo     0x40f16f
  40f11f:	cmp    DWORD PTR [edx+0x6de71740],0xffffffbb
  40f126:	mov    edx,DWORD PTR [ebx+0x7f91d16c]
  40f12c:	inc    ebp
  40f12d:	push   0x5c
  40f12f:	mov    eax,0xd0e4bd1b
  40f134:	pusha  
  40f135:	in     eax,0xdc
  40f137:	push   ds
  40f138:	cdq    
  40f139:	shr    DWORD PTR [esi+0x42],cl
  40f13c:	enter  0x6d67,0xfa
  40f140:	and    ah,bh
  40f142:	test   al,0xc2
  40f144:	mov    al,ds:0xfaed7cbf
  40f149:	(bad)  
  40f14a:	jp     0x40f14f
  40f14c:	enter  0x5d15,0xbe
  40f150:	push   0x57
  40f152:	jmp    0x40f182
  40f154:	jb     0x40f18d
  40f156:	cli    
  40f157:	cmp    al,0x34
  40f159:	xchg   ebx,eax
  40f15a:	sti    
  40f15b:	and    al,0x3b
  40f15d:	fbld   TBYTE PTR [ebx]
  40f15f:	dec    edx
  40f160:	ficom  WORD PTR [ebx]
  40f162:	mov    ebx,0xf9a885e8
  40f167:	ins    BYTE PTR es:[edi],dx
  40f168:	mov    bl,dh
  40f16a:	sahf   
  40f16b:	mov    eax,ds:0x67a86716
  40f170:	mov    dh,0xdc
  40f172:	loope  0x40f1ad
  40f174:	popa   
  40f175:	ret    
  40f176:	sti    
  40f177:	push   dx
  40f179:	retf   
  40f17a:	add    esp,DWORD PTR cs:[ebp+0x1d8b30e6]
  40f181:	out    0xe1,eax
  40f183:	inc    ecx
  40f184:	adc    DWORD PTR fs:[edx-0x60],edi
  40f188:	sbb    DWORD PTR [ebp+0x63],ecx
  40f18b:	add    DWORD PTR [ecx-0x112668a7],esi
  40f191:	rep ins DWORD PTR es:[edi],dx
  40f193:	push   es
  40f194:	mov    ah,BYTE PTR [eax-0x713ea160]
  40f19a:	aaa    
  40f19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f19c:	and    eax,0x994a1d09
  40f1a1:	cmp    al,0xbb
  40f1a3:	pop    edi
  40f1a4:	ret    
  40f1a5:	jo     0x40f1ee
  40f1a7:	xor    al,BYTE PTR [ebp-0x235333cf]
  40f1ad:	in     al,0x8
  40f1af:	daa    
  40f1b0:	ds repz sbb cl,al
  40f1b4:	push   ebp
  40f1b5:	clc    
  40f1b6:	mov    al,0x38
  40f1b8:	retf   0x374f
  40f1bb:	repnz xor ebx,ebp
  40f1be:	mov    cl,0xd
  40f1c0:	(bad)  
  40f1c2:	push   DWORD PTR [eax+ebp*2-0x27]
  40f1c6:	ins    DWORD PTR es:[edi],dx
  40f1c7:	xchg   DWORD PTR [ebx+0x7d0156e9],ecx
  40f1cd:	jo     0x40f1c6
  40f1cf:	retf   
  40f1d0:	mov    bl,0xd
  40f1d2:	inc    ebx
  40f1d3:	dec    ebx
  40f1d4:	lahf   
  40f1d5:	adc    ch,BYTE PTR [esi-0x7f904cb0]
  40f1db:	push   ebx
  40f1dc:	fstp   DWORD PTR [ecx+edx*2+0x66]
  40f1e0:	je     0x40f208
  40f1e2:	loop   0x40f1eb
  40f1e4:	mov    ebx,0xa532eacb
  40f1e9:	(bad)  
  40f1ea:	mov    ecx,0x58a7e21c
  40f1ef:	in     eax,dx
  40f1f0:	mov    al,ds:0xd6566dcf
  40f1f5:	or     eax,0x4b9a0011
  40f1fb:	pop    ss
  40f1fc:	xor    esi,DWORD PTR [esp+ecx*2-0x5]
  40f200:	or     edi,edx
  40f202:	add    al,0xb6
  40f204:	into   
  40f205:	aaa    
  40f206:	lods   al,BYTE PTR ds:[esi]
  40f207:	mov    edi,0x8bca03f4
  40f20c:	jmp    0x40f241
  40f20e:	cmp    ebx,DWORD PTR [eax-0x71b3a22e]
  40f214:	inc    esp
  40f215:	xchg   edx,eax
  40f216:	dec    eax
  40f217:	outs   dx,DWORD PTR ds:[esi]
  40f218:	mov    esp,0xa7d0a27e
  40f21d:	ins    BYTE PTR es:[edi],dx
  40f21e:	mov    edx,0xf90e6116
  40f223:	or     BYTE PTR [ecx+0x68],dl
  40f226:	out    dx,al
  40f227:	xchg   ebx,esp
  40f229:	mov    dh,0x3b
  40f22b:	xor    BYTE PTR [esi],ch
  40f22d:	add    al,0x81
  40f22f:	mov    bh,0x16
  40f231:	mov    bl,BYTE PTR [ebx]
  40f233:	cmp    ebx,DWORD PTR [bp+di-0x2d]
  40f237:	out    dx,al
  40f238:	ins    DWORD PTR es:[edi],dx
  40f239:	clc    
  40f23a:	jbe    0x40f207
  40f23c:	call   0xddc82419
  40f241:	ret    0xd42
  40f244:	pop    ecx
  40f245:	hlt    
  40f246:	std    
  40f247:	mov    ds:0x135d75c3,al
  40f24c:	leave  
  40f24d:	lea    eax,[edx+0x4a]
  40f250:	stos   BYTE PTR es:[edi],al
  40f251:	jbe    0x40f1ee
  40f253:	cmp    al,0x2a
  40f255:	fst    st(0)
  40f257:	dec    ecx
  40f258:	loope  0x40f21b
  40f25a:	cmp    eax,0xeb694519
  40f25f:	test   al,0x69
  40f261:	lea    ecx,[eax+ecx*2]
  40f264:	lods   eax,DWORD PTR ds:[esi]
  40f265:	pop    esp
  40f266:	sbb    DWORD PTR [eax+ebp*1+0x27aacf32],ebp
  40f26d:	shr    BYTE PTR [edi],1
  40f26f:	push   ebp
  40f270:	add    al,0x54
  40f272:	fst    QWORD PTR [edi]
  40f274:	xchg   ebx,eax
  40f275:	jne    0x40f29e
  40f277:	pusha  
  40f278:	call   0xfcdd:0x90d6321d
  40f27f:	xchg   ecx,eax
  40f280:	ins    BYTE PTR es:[edi],dx
  40f281:	cmc    
  40f282:	push   edi
  40f283:	cmp    ebp,edx
  40f285:	push   edx
  40f286:	cld    
  40f287:	ins    BYTE PTR es:[edi],dx
  40f288:	clc    
  40f289:	push   esi
  40f28a:	sub    al,ah
  40f28c:	push   0xffffffd1
  40f28e:	jg     0x40f2e5
  40f290:	retfw  
  40f292:	repz test esi,0x7e214f23
  40f299:	jno    0x40f23e
  40f29b:	test   BYTE PTR [edi-0x6b],dh
  40f29e:	fcmovu st,st(4)
  40f2a0:	mov    WORD PTR [edi-0x3],cs
  40f2a3:	jmp    0x40f320
  40f2a5:	cwde   
  40f2a6:	cmp    al,0x5
  40f2a8:	sub    esi,edi
  40f2aa:	xor    eax,DWORD PTR [ebx-0x60]
  40f2ad:	out    dx,eax
  40f2ae:	iret   
  40f2af:	cs aam 0x57
  40f2b2:	jno    0x40f241
  40f2b4:	adc    edi,esi
  40f2b6:	add    al,0x1e
  40f2b8:	sbb    esp,esi
  40f2ba:	xchg   BYTE PTR [edx-0x1e36b8af],cl
  40f2c0:	or     edi,DWORD PTR [esi+ebp*8-0x3a]
  40f2c4:	ja     0x40f33b
  40f2c6:	mov    dh,0xff
  40f2c8:	sbb    cl,dh
  40f2ca:	push   ss
  40f2cb:	inc    ebx
  40f2cc:	call   0xd57b:0x80ed7c7c
  40f2d3:	int3   
  40f2d4:	dec    edx
  40f2d5:	sbb    eax,0xeeb79d80
  40f2da:	sub    edx,DWORD PTR [ecx+0x1d]
  40f2dd:	push   ebx
  40f2de:	cmp    eax,0xd09702fb
  40f2e3:	hlt    
  40f2e4:	lds    edi,FWORD PTR [ebx]
  40f2e6:	fiadd  WORD PTR [esi]
  40f2e8:	add    DWORD PTR [eax+0x48322e12],eax
  40f2ee:	out    0x3d,eax
  40f2f0:	mov    ebp,0xf63e1678
  40f2f5:	push   ebx
  40f2f6:	jle    0x40f33d
  40f2f8:	fstp   DWORD PTR [edx+0x2b]
  40f2fb:	(bad)  
  40f2fc:	repnz xchg edi,eax
  40f2fe:	shr    BYTE PTR [ebp-0x1c],cl
  40f301:	mov    esi,0xde19b2c4
  40f306:	cmp    BYTE PTR fs:[edi-0x6afebf92],ch
  40f30d:	jo     0x40f37b
  40f30f:	dec    edi
  40f310:	cmp    BYTE PTR [ebx+0x59761fe1],ch
  40f316:	sbb    eax,DWORD PTR [esi+ecx*2+0xd]
  40f31a:	fadd   st(1),st
  40f31c:	jecxz  0x40f2c2
  40f31e:	jmp    DWORD PTR [eax]
  40f320:	add    DWORD PTR [ebp+0x2ddc71e7],esp
  40f326:	add    al,0xdc
  40f328:	inc    edx
  40f329:	inc    ecx
  40f32a:	mov    DWORD PTR ds:0x4144105b,0x6b20912f
  40f334:	jo     0x40f35f
  40f336:	or     eax,0x91c5385d
  40f33b:	adc    eax,0xf362e656
  40f340:	and    eax,0x4a00eaa6
  40f345:	adc    DWORD PTR [esi-0x72f76a05],0xffffffa4
  40f34c:	and    edi,esp
  40f34e:	dec    DWORD PTR [edx-0x16]
  40f351:	sti    
  40f352:	jp     0x40f2e5
  40f354:	xchg   ebp,eax
  40f355:	stos   DWORD PTR es:[edi],eax
  40f356:	mov    esp,0x40063027
  40f35b:	arpl   WORD PTR [ecx-0x76],sp
  40f35e:	push   ebx
  40f35f:	pop    ds
  40f360:	(bad)  
  40f361:	jne    0x40f34e
  40f363:	push   esp
  40f364:	cmp    BYTE PTR [esi+edi*4-0x8c96366],bl
  40f36b:	add    BYTE PTR [ebx-0x6a],ah
  40f36e:	bswap  ecx
  40f370:	movzx  eax,BYTE PTR [eax+0x41]
  40f374:	mov    ah,0x27
  40f376:	jmp    0x9b18:0x12b3d614
  40f37d:	ins    DWORD PTR es:[edi],dx
  40f37e:	(bad)  
  40f37f:	push   edx
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x926c6dea,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	test   eax,0x8bb71d2
  40f488:	ret    0x553a
  40f48b:	call   0xef755e80
  40f490:	(bad)  
  40f491:	stos   DWORD PTR es:[edi],eax
  40f492:	shl    BYTE PTR [eax+eax*4],0x9e
  40f496:	sub    ah,bh
  40f498:	and    dh,BYTE PTR [edx+ecx*4+0x5e]
  40f49c:	adc    BYTE PTR [esi+edx*8+0x2b],0xa6
  40f4a1:	fistp  WORD PTR [edx+0x436c9c34]
  40f4a7:	retf   0x717b
  40f4aa:	iret   
  40f4ab:	cli    
  40f4ac:	jbe    0x40f520
  40f4ae:	fbstp  TBYTE PTR ds:0x48ee441
  40f4b4:	rol    BYTE PTR [edx-0x5542f3f1],0x9b
  40f4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4bc:	ret    0x9f26
  40f4bf:	(bad)  
  40f4c0:	cli    
  40f4c1:	sahf   
  40f4c2:	cmpps  xmm6,XMMWORD PTR [esi],0x55
  40f4c6:	neg    BYTE PTR [eax+0x3c793664]
  40f4cc:	push   edx
  40f4cd:	adc    dl,BYTE PTR [ebp-0x238703ea]
  40f4d3:	imul   esp,ecx,0x5a
  40f4d6:	adc    BYTE PTR [ecx],al
  40f4d8:	and    BYTE PTR [edi+0x10],bl
  40f4db:	mov    al,ds:0xc42b65d8
  40f4e0:	retf   0x6762
  40f4e3:	repz cld 
  40f4e5:	aad    0x9
  40f4e7:	add    al,0xa1
  40f4e9:	jmp    0x382d:0x3078ee83
  40f4f0:	and    esi,DWORD PTR [edx-0x7cda58bd]
  40f4f6:	cld    
  40f4f7:	mov    eax,ds:0x5637aee6
  40f4fc:	jo     0x40f4bb
  40f4fe:	call   0x66c2:0x3773a9c9
  40f505:	sub    dl,bh
  40f507:	push   ss
  40f508:	ds popa 
  40f50a:	sub    cl,al
  40f50c:	pop    ss
  40f50d:	cmp    ebp,DWORD PTR [eax+0x48]
  40f510:	sub    al,0x13
  40f512:	jnp    0x40f560
  40f514:	clc    
  40f515:	cmp    al,0xd6
  40f517:	adc    DWORD PTR ds:0x2b0b7bb0,eax
  40f51d:	jg     0x40f4e6
  40f51f:	push   ds
  40f520:	and    dh,BYTE PTR [edx-0x112e6f53]
  40f526:	cwde   
  40f527:	push   0x77
  40f529:	add    eax,0x3d772052
  40f52e:	pop    eax
  40f52f:	mov    esp,0x6cc15fe7
  40f534:	add    BYTE PTR ds:0xe0f88ac,0xa6
  40f53b:	or     eax,0xd7d44773
  40f540:	mov    edx,?
  40f542:	mov    dl,0x2b
  40f544:	pop    eax
  40f545:	fst    DWORD PTR [esi]
  40f547:	out    0xfe,al
  40f549:	or     al,0x35
  40f54b:	out    0xe3,al
  40f54d:	xor    DWORD PTR ds:0x678fecfc,0x7a
  40f554:	push   esi
  40f555:	sbb    DWORD PTR [ecx-0x6f],esi
  40f558:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f559:	jmp    0x40f5a7
  40f55b:	mov    edi,esi
  40f55d:	popf   
  40f55e:	push   0x673ae761
  40f563:	xor    eax,0xf3260556
  40f568:	xor    BYTE PTR [eax-0xe19658e],ch
  40f56e:	lock (bad) 
  40f570:	and    eax,0x84569b55
  40f575:	jnp    0x40f567
  40f577:	add    cl,BYTE PTR [eax+ecx*4+0x35]
  40f57b:	cmp    eax,ebp
  40f57d:	push   0x28
  40f57f:	sbb    BYTE PTR [edi],bl
  40f581:	bound  edx,QWORD PTR fs:[edx-0x1]
  40f585:	stos   BYTE PTR es:[edi],al
  40f586:	lock pop ebx
  40f588:	add    ch,BYTE PTR [ecx-0x4316ff78]
  40f58e:	test   BYTE PTR [ebx+0x75060c23],bl
  40f594:	ret    0x1d48
  40f597:	(bad)  
  40f599:	cli    
  40f59a:	sbb    dh,bl
  40f59c:	enter  0x5455,0xd1
  40f5a0:	push   edi
  40f5a1:	dec    eax
  40f5a2:	pop    ecx
  40f5a3:	loopne 0x40f536
  40f5a5:	imul   esp,DWORD PTR [esi-0x57009ddb],0xfffffff5
  40f5ac:	xor    ebp,ebp
  40f5ae:	aaa    
  40f5af:	call   0x3f3c5fdf
  40f5b4:	inc    ecx
  40f5b5:	or     al,0x48
  40f5b7:	push   ebp
  40f5b8:	call   0x591ec3ea
  40f5bd:	aaa    
  40f5be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5bf:	dec    edi
  40f5c0:	call   0x2037:0xff102bd7
  40f5c7:	mov    esp,0xfcef054c
  40f5cc:	enter  0x630b,0x24
  40f5d0:	adc    edi,edx
  40f5d2:	jne    0x40f586
  40f5d4:	mov    al,0xd
  40f5d6:	jae    0x40f615
  40f5d8:	cmp    al,0x19
  40f5da:	test   eax,0x440204ff
  40f5df:	sub    al,0xc7
  40f5e1:	ins    DWORD PTR es:[edi],dx
  40f5e2:	popf   
  40f5e3:	(bad)  
  40f5e4:	in     eax,dx
  40f5e5:	xchg   BYTE PTR [ebp+0x325c0e7d],ch
  40f5eb:	(bad)  
  40f5ec:	jo     0x40f5dd
  40f5ee:	in     ax,dx
  40f5f0:	std    
  40f5f1:	sbb    cl,BYTE PTR [ecx]
  40f5f3:	mov    bh,0x9e
  40f5f5:	mov    dl,0xf8
  40f5f7:	cmp    al,0xe7
  40f5f9:	mov    al,0xb0
  40f5fb:	mul    esi
  40f5fd:	lock aad 0xb5
  40f600:	aaa    
  40f601:	hlt    
  40f602:	jo     0x40f5ec
  40f604:	retf   
  40f605:	cmp    DWORD PTR [eax],edi
  40f607:	icebp  
  40f608:	pop    esi
  40f609:	sub    al,0x1c
  40f60b:	ret    0xb982
  40f60e:	jnp    0x40f67b
  40f610:	inc    esi
  40f611:	pop    ecx
  40f612:	cmp    al,0xdd
  40f614:	sub    DWORD PTR [edx],eax
  40f616:	arpl   si,cx
  40f618:	out    dx,eax
  40f619:	and    ch,BYTE PTR [esi+0x2e92fd69]
  40f61f:	mov    ebx,0x5f176046
  40f624:	stos   BYTE PTR es:[edi],al
  40f625:	sub    al,0x12
  40f627:	jmp    0x40f5f3
  40f629:	lds    ebp,FWORD PTR [esi]
  40f62b:	scas   eax,DWORD PTR es:[edi]
  40f62c:	pop    sp
  40f62e:	rol    DWORD PTR [esi-0x5f],cl
  40f631:	fs mov ss,ebp
  40f634:	xchg   edi,eax
  40f635:	(bad)  
  40f639:	ja     0x40f684
  40f63b:	or     cl,BYTE PTR [eax]
  40f63d:	sbb    eax,0xcb7ae600
  40f642:	jne    0x40f5f1
  40f644:	pop    edi
  40f645:	ins    BYTE PTR es:[edi],dx
  40f646:	mov    bl,0xb4
  40f648:	call   FWORD PTR [ebx]
  40f64a:	or     al,BYTE PTR [edi+0x2112e01a]
  40f650:	leave  
  40f651:	sbb    eax,0xbefbd54f
  40f656:	ins    DWORD PTR es:[edi],dx
  40f657:	inc    edi
  40f658:	and    DWORD PTR [esi+0x6c],ebp
  40f65b:	lock adc BYTE PTR [edi],dl
  40f65e:	add    al,0xaa
  40f660:	push   ebx
  40f661:	push   edi
  40f662:	add    esi,edx
  40f664:	pushf  
  40f665:	mov    cl,BYTE PTR [ecx]
  40f667:	imul   edi,ebp,0x7002f829
  40f66d:	xchg   edi,eax
  40f66e:	mov    BYTE PTR [esi],dh
  40f670:	and    al,0x6
  40f672:	cmp    DWORD PTR [edi],ecx
  40f674:	lods   eax,DWORD PTR ds:[esi]
  40f675:	adc    BYTE PTR [edx+0x50],bl
  40f678:	xlat   BYTE PTR ds:[ebx]
  40f679:	test   al,0x9c
  40f67b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f67c:	scas   eax,DWORD PTR es:[edi]
  40f67d:	outs   dx,BYTE PTR ds:[esi]
  40f67e:	or     ah,bh
  40f680:	or     ebp,DWORD PTR [eax-0x264d1f3b]
  40f686:	in     eax,0xc7
  40f688:	inc    eax
  40f689:	adc    al,0x4f
  40f68b:	inc    edi
  40f68c:	inc    eax
  40f68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f68e:	(bad)  [edi+0x27c85c40]
  40f694:	xchg   edx,eax
  40f695:	xchg   esp,eax
  40f696:	xchg   ebx,eax
  40f697:	popa   
  40f698:	sub    DWORD PTR [ebx-0x60],0xa7ca2ed8
  40f69f:	rcr    ah,cl
  40f6a1:	cmp    eax,0x5798a715
  40f6a6:	cmc    
  40f6a7:	xor    edi,edi
  40f6a9:	jae    0x40f6c3
  40f6ab:	retf   
  40f6ac:	inc    esi
  40f6ad:	mov    BYTE PTR [edi],bl
  40f6af:	fwait
  40f6b0:	and    edi,DWORD PTR [ecx+0x461d3751]
  40f6b6:	pop    esi
  40f6b7:	in     al,0xec
  40f6b9:	int3   
  40f6ba:	hlt    
  40f6bb:	aas    
  40f6bc:	popa   
  40f6bd:	pop    ss
  40f6be:	test   DWORD PTR [edx-0x7],ebx
  40f6c1:	bound  ecx,QWORD PTR [edx-0x5224791b]
  40f6c7:	sahf   
  40f6c8:	dec    ebp
  40f6c9:	pop    ss
  40f6ca:	fwait
  40f6cb:	call   0xaa4202a8
  40f6d0:	and    al,0x85
  40f6d2:	push   edx
  40f6d3:	or     bl,BYTE PTR [ecx-0x21]
  40f6d6:	add    al,0x6f
  40f6d8:	and    al,0x56
  40f6da:	cmp    BYTE PTR [ecx],dh
  40f6dc:	lahf   
  40f6dd:	cmp    ecx,DWORD PTR [edi]
  40f6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e0:	mov    eax,ds:0x646217b4
  40f6e5:	cmp    DWORD PTR [eax-0x3c],esi
  40f6e8:	dec    edx
  40f6e9:	in     eax,dx
  40f6ea:	inc    ebx
  40f6eb:	int3   
  40f6ec:	xchg   edx,eax
  40f6ed:	pop    ss
  40f6ee:	push   esp
  40f6ef:	mov    fs,WORD PTR [edi]
  40f6f1:	out    dx,al
  40f6f2:	xchg   esp,eax
  40f6f3:	mov    edi,0x25683196
  40f6f8:	xor    BYTE PTR [edx+0x7eafed78],0x63
  40f6ff:	pop    es
  40f700:	pop    esi
  40f701:	mov    ecx,0x60e438a9
  40f706:	and    ebp,DWORD PTR [esi-0x7296d257]
  40f70c:	mov    esp,0xb8b7dd52
  40f711:	or     edx,DWORD PTR [eax]
  40f713:	das    
  40f714:	ins    DWORD PTR es:[edi],dx
  40f715:	(bad)  
  40f716:	mov    esp,esp
  40f718:	cmc    
  40f719:	rol    BYTE PTR [ecx],0xee
  40f71c:	xor    bl,BYTE PTR [ecx+eax*4+0x5d]
  40f720:	cmp    DWORD PTR [eax-0x70],0xe0da4e60
  40f727:	ins    DWORD PTR es:[edi],dx
  40f728:	je     0x40f73e
  40f72a:	sub    al,0xa6
  40f72c:	inc    ecx
  40f72d:	xlat   BYTE PTR ds:[ebx]
  40f72e:	repnz push 0x73
  40f731:	ins    DWORD PTR es:[edi],dx
  40f732:	mov    al,0xed
  40f734:	mov    ds:0xa0260c6a,al
  40f739:	shr    ch,cl
  40f73b:	(bad)  
  40f73c:	adc    BYTE PTR [ecx-0x7a27976e],dl
  40f742:	(bad)  
  40f743:	data16 out dx,al
  40f745:	fsubr  DWORD PTR [ecx-0x1112b7bf]
  40f74b:	ins    BYTE PTR es:[edi],dx
  40f74c:	pop    esp
  40f74d:	bound  ebp,QWORD PTR [ebx+eiz*1+0x56]
  40f751:	outs   dx,BYTE PTR ds:[esi]
  40f752:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f754:	push   ss
  40f755:	and    ebx,ebx
  40f757:	cmc    
  40f758:	mov    cl,0xd4
  40f75a:	mov    ch,0xed
  40f75c:	adc    eax,0x1551efd1
  40f761:	cmp    eax,0x494819d1
  40f766:	(bad)  
  40f767:	push   esi
  40f768:	mov    dh,BYTE PTR [esi+0x52]
  40f76b:	fnstcw WORD PTR [ecx-0x3e]
  40f76e:	shl    esi,cl
  40f770:	fucomip st,st(2)
  40f772:	jp     0x40f745
  40f774:	addr16 hlt 
  40f776:	add    ebp,DWORD PTR [edi+ebx*8+0x7a77c269]
  40f77d:	jg     0x40f7ae
  40f77f:	and    edi,ebx
  40f781:	fidivr WORD PTR [ebp-0x18]
  40f784:	xchg   edi,eax
  40f785:	shr    DWORD PTR [ecx+ebx*1],1
  40f788:	or     BYTE PTR [ecx-0x3481f00b],bl
  40f78e:	arpl   WORD PTR [ecx+0x257d21ea],bp
  40f794:	pop    eax
  40f795:	in     eax,0x86
  40f797:	mov    cl,0xb
  40f799:	leave  
  40f79a:	cmp    DWORD PTR [eax+edx*2],ebx
  40f79d:	cmp    eax,0x3371a59a
  40f7a2:	mov    ecx,0xb20e6d53
  40f7a7:	inc    eax
  40f7a8:	xchg   edi,eax
  40f7a9:	mov    DWORD PTR [edi-0x7e6100a4],eax
  40f7af:	cmp    al,0x99
  40f7b1:	ss sbb eax,0xa05bb3c2
  40f7b7:	add    bl,BYTE PTR [ebx+ecx*4-0x7]
  40f7bb:	or     DWORD PTR [eax+eiz*2+0x30],ebp
  40f7bf:	popa   
  40f7c0:	out    0x9a,eax
  40f7c2:	or     eax,0xfea51ee8
  40f7c7:	dec    esi
  40f7c8:	repz inc edi
  40f7ca:	pop    esi
  40f7cb:	sbb    BYTE PTR [eax+0x323f6dcf],bh
  40f7d1:	cdq    
  40f7d2:	or     al,0x25
  40f7d4:	xchg   esp,eax
  40f7d5:	inc    ecx
  40f7d6:	sub    DWORD PTR [ebx+0x2a697574],0x61d4fa62
  40f7e0:	(bad)  
  40f7e1:	(bad)  
  40f7e2:	jecxz  0x40f7de
  40f7e4:	xor    BYTE PTR [eax+0x6a],cl
  40f7e7:	ret    
  40f7e8:	icebp  
  40f7e9:	pop    ecx
  40f7ea:	fbstp  TBYTE PTR [ebx+ebp*2]
  40f7ed:	popa   
  40f7ee:	mov    ecx,0xdd0f1995
  40f7f3:	push   ebx
  40f7f4:	jno    0x40f875
  40f7f6:	out    0x1a,eax
  40f7f8:	or     eax,0x6bfab37
  40f7fd:	cmp    edi,DWORD PTR [ebx-0x1c326a29]
  40f803:	push   eax
  40f804:	pop    edi
  40f805:	xor    bh,bl
  40f807:	pop    esi
  40f808:	or     edi,DWORD PTR [edi+0x7f]
  40f80b:	cmp    BYTE PTR [ebx],bh
  40f80d:	xchg   ebx,eax
  40f80e:	out    dx,eax
  40f80f:	retf   0xed5e
  40f812:	dec    ecx
  40f813:	cmp    DWORD PTR [edx],edx
  40f815:	loop   0x40f814
  40f817:	jge    0x40f870
  40f819:	mov    esi,DWORD PTR [ebx+0x45eb26dd]
  40f81f:	loop   0x40f7e6
  40f821:	mov    dh,0xde
  40f823:	adc    al,0xa9
  40f825:	and    bh,BYTE PTR [ebx+0x13]
  40f828:	leave  
  40f829:	bound  eax,QWORD PTR [ebp-0x37]
  40f82c:	ss sti 
  40f82e:	cmp    al,0x32
  40f830:	xor    BYTE PTR [edi+0x40],dl
  40f833:	mov    dh,0x2f
  40f835:	and    eax,0x79fa989c
  40f83a:	adc    DWORD PTR [ecx+0x213c21c2],edi
  40f840:	or     BYTE PTR [ecx],dh
  40f842:	in     al,0x1b
  40f844:	sbb    al,0xb
  40f846:	nop
  40f847:	(bad)  
  40f848:	and    esi,DWORD PTR [ebx-0x60c20123]
  40f84e:	cmp    al,0x58
  40f850:	stos   DWORD PTR es:[edi],eax
  40f851:	push   ss
  40f852:	or     BYTE PTR [edx-0x42],0x42
  40f856:	gs sub ecx,edi
  40f859:	out    0x10,al
  40f85b:	sbb    dl,BYTE PTR [eax-0x3e2a3414]
  40f861:	pop    ebp
  40f862:	rcl    BYTE PTR [ecx+0x5478f464],cl
  40f868:	neg    DWORD PTR [ebx+0x5d55b88a]
  40f86e:	div    DWORD PTR [edx-0x7c7a0975]
  40f874:	xchg   BYTE PTR [ebx],bl
  40f876:	xlat   BYTE PTR ds:[ebx]
  40f877:	dec    ebx
  40f878:	test   al,0xd1
  40f87a:	call   0x3a0309f2
  40f87f:	stos   BYTE PTR es:[edi],al
  40f880:	retf   0x6bb6
  40f883:	mov    ds:0x794398c4,al
  40f888:	popf   
  40f889:	dec    esp
  40f88a:	out    dx,al
  40f88b:	sub    bl,BYTE PTR ds:[ebx+0x3cf92929]
  40f892:	nop
  40f893:	repnz mov WORD PTR [esi-0x20d15130],?
  40f89a:	mov    ebp,DWORD PTR [esi+edx*4]
  40f89d:	clc    
  40f89e:	dec    ebx
  40f89f:	fs je  0x40f8a8
  40f8a2:	push   esp
  40f8a3:	jbe    0x40f848
  40f8a5:	pop    ds
  40f8a6:	les    eax,FWORD PTR [edi-0x40]
  40f8a9:	in     al,0x84
  40f8ab:	sub    edi,DWORD PTR [eax]
  40f8ad:	call   0xcc0d:0x7c41abf0
  40f8b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8b5:	shl    BYTE PTR [eax-0x60f67141],1
  40f8bb:	pop    esi
  40f8bc:	dec    ebp
  40f8bd:	xor    bh,dl
  40f8bf:	sahf   
  40f8c0:	sbb    DWORD PTR [esi+0x177c732],esi
  40f8c6:	dec    eax
  40f8c7:	jb     0x40f8bd
  40f8c9:	mov    ah,0x9a
  40f8cb:	xchg   edi,eax
  40f8cc:	(bad)  
  40f8cd:	rol    edi,cl
  40f8cf:	pop    ebp
  40f8d0:	test   al,0xec
  40f8d2:	stos   DWORD PTR es:[edi],eax
  40f8d3:	lea    ebp,[edx+0x6d]
  40f8d6:	xchg   DWORD PTR [ecx+0x72],ebp
  40f8d9:	jle    0x40f92f
  40f8db:	fst    QWORD PTR [ecx-0x6f]
  40f8de:	(bad)  [edx-0x77]
  40f8e1:	test   al,0x96
  40f8e3:	mov    esi,0x4af04adf
  40f8e8:	(bad)  
  40f8e9:	(bad)  
  40f8ea:	in     eax,0xa1
  40f8ec:	mov    ebp,0x44d5ef68
  40f8f1:	bound  edi,QWORD PTR [esi-0x18]
  40f8f4:	mov    eax,ds:0xc0313ffe
  40f8f9:	mov    ebx,DWORD PTR [ebp-0x656ae13e]
  40f8ff:	dec    eax
  40f900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f901:	dec    edi
  40f902:	sbb    ecx,ebx
  40f904:	add    ch,BYTE PTR [edx+0x3]
  40f907:	xchg   edi,eax
  40f908:	sbb    ebp,DWORD PTR [esi-0x14]
  40f90b:	xchg   esp,eax
  40f90c:	inc    ecx
  40f90d:	push   ecx
  40f90e:	or     bl,BYTE PTR [eax+eax*8]
  40f911:	les    edi,FWORD PTR [esi-0x71]
  40f914:	mov    ecx,ebp
  40f916:	sar    eax,0xca
  40f919:	adc    DWORD PTR [ebx+eax*8-0x6f],ebx
  40f91d:	or     dl,BYTE PTR [ebp-0x60fc026b]
  40f923:	push   0xffffffea
  40f925:	test   BYTE PTR [ebp+0x3bbe21f1],ch
  40f92b:	addr16 (bad) 
  40f92e:	mov    cl,0xf5
  40f930:	xchg   esp,eax
  40f931:	ins    DWORD PTR es:[edi],dx
  40f932:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f933:	ds cli 
  40f935:	je     0x40f8b9
  40f937:	inc    edx
  40f938:	add    BYTE PTR [bp+si],cl
  40f93b:	mov    al,cs:0xd681e78f
  40f941:	mov    ?,WORD PTR [ecx+0x62a2b7e9]
  40f947:	jge    0x40f9aa
  40f949:	dec    ebx
  40f94a:	fadd   DWORD PTR [eax+ebp*8+0x4d]
  40f94e:	cmp    bh,BYTE PTR [esi+ebp*8]
  40f951:	add    eax,0x82c28b97
  40f956:	(bad)  
  40f957:	and    dl,BYTE PTR [edx+0x22d20f34]
  40f95d:	mov    ch,0x70
  40f95f:	mov    BYTE PTR [ebx-0x12],ch
  40f962:	mov    dh,0x8
  40f964:	(bad)  
  40f965:	mov    edi,0x75e90fa4
  40f96a:	sbb    BYTE PTR [ebx],bh
  40f96c:	sbb    BYTE PTR [edi-0x33c5621],dl
  40f972:	aam    0x22
  40f974:	mov    al,ds:0xeaff08a5
  40f979:	loopne 0x40f9ad
  40f97b:	mov    edx,0x487470a7
  40f980:	mov    ah,BYTE PTR [esi+0x48]
  40f983:	out    dx,al
  40f984:	cli    
  40f985:	lods   eax,DWORD PTR ds:[esi]
  40f986:	repz xchg edx,eax
  40f988:	pop    edx
  40f989:	scas   al,BYTE PTR es:[edi]
  40f98a:	jne    0x40f970
  40f98c:	call   0xd8da:0x243e203e
  40f993:	dec    edx
  40f994:	fwait
  40f995:	cmp    eax,0x3fb3a6ed
  40f99a:	jge    0x40f958
  40f99c:	jmp    0xfb71:0x4110589f
  40f9a3:	jnp    0x40f977
  40f9a5:	lock xor dh,BYTE PTR [esi-0x41]
  40f9a9:	add    ebp,DWORD PTR [eax+0x2d]
  40f9ac:	dec    esi
  40f9ad:	dec    edx
  40f9ae:	push   ss
  40f9af:	mov    ?,WORD PTR [ecx+0x83d7ea7]
  40f9b5:	mov    ds,WORD PTR [edi-0x464392fd]
  40f9bb:	add    eax,0x26ce2a57
  40f9c0:	or     bh,BYTE PTR ds:0x78b46ef6
  40f9c6:	xor    al,0x5e
  40f9c8:	and    eax,0x26171cf1
  40f9cd:	push   ecx
  40f9ce:	mov    ds:0x621cd637,eax
  40f9d3:	lods   eax,DWORD PTR ds:[esi]
  40f9d4:	aam    0xca
  40f9d6:	test   al,0xca
  40f9d8:	xchg   ebx,eax
  40f9d9:	xchg   esi,eax
  40f9da:	fwait
  40f9db:	cmovge eax,DWORD PTR [eax-0xb18489b]
  40f9e2:	dec    esi
  40f9e3:	add    al,0xc4
  40f9e5:	icebp  
  40f9e6:	jmp    0x40f9b4
  40f9e8:	ror    ah,cl
  40f9ea:	or     edi,edi
  40f9ec:	ror    BYTE PTR [eax-0x1c7b00ed],1
  40f9f2:	sahf   
  40f9f3:	not    BYTE PTR [ebx-0x9]
  40f9f6:	jecxz  0x40f98f
  40f9f8:	xor    al,BYTE PTR [eax-0x6f]
  40f9fb:	sub    ebp,DWORD PTR [edx]
  40f9fd:	adc    al,0xce
  40f9ff:	pop    edx
  40fa00:	int3   
  40fa01:	jg     0x40fa1a
  40fa03:	jne    0x40fa7c
  40fa05:	jbe    0x40fa14
  40fa07:	mov    DWORD PTR [esi],ebp
  40fa09:	ror    al,1
  40fa0b:	aad    0xd2
  40fa0d:	out    0xee,eax
  40fa0f:	jae    0x40f9cd
  40fa11:	inc    edi
  40fa12:	jmp    0x7b2f59ed
  40fa17:	push   cs
  40fa18:	cli    
  40fa19:	out    0x25,eax
  40fa1b:	rcr    BYTE PTR [edx-0xb30741b],1
  40fa21:	cmp    eax,0x965f05d3
  40fa26:	mov    edi,0x79ef11ed
  40fa2b:	mov    DWORD PTR [ebx+eax*8+0x58],esi
  40fa2f:	push   0x4bb88d68
  40fa34:	aam    0x7a
  40fa36:	mov    ecx,0xe08ab75
  40fa3b:	ror    DWORD PTR [ebx+0x53],0xc1
  40fa3f:	xchg   ebx,eax
  40fa40:	jbe    0x40f9e5
  40fa42:	push   ebp
  40fa43:	lea    edi,[ebx-0x1c8d4a85]
  40fa49:	mov    DWORD PTR [ecx-0x3bd4a5ac],ecx
  40fa4f:	xor    edi,DWORD PTR [eax]
  40fa51:	aam    0xf7
  40fa53:	mov    ds:0x4de044a4,eax
  40fa58:	xor    DWORD PTR [edx+eiz*4+0x46b17214],ebp
  40fa5f:	fdiv   QWORD PTR [ecx-0x4f]
  40fa62:	mov    ebx,0x9e16a1de
  40fa67:	fs add al,0x56
  40fa6a:	stos   BYTE PTR es:[edi],al
  40fa6b:	sbb    esi,DWORD PTR [ebx-0x38]
  40fa6e:	xor    ebp,0x487c3476
  40fa74:	adc    DWORD PTR [esi],edi
  40fa76:	add    DWORD PTR ds:0x5305eac4,eax
  40fa7c:	jmp    ebp
  40fa7e:	loopne 0x40fa94
  40fa80:	push   ebx
  40fa81:	pop    ebp
  40fa82:	ja     0x40faa8
  40fa84:	lahf   
  40fa85:	dec    esp
  40fa86:	xchg   ecx,eax
  40fa87:	or     DWORD PTR [ecx-0x541dac76],esi
  40fa8d:	pop    edi
  40fa8e:	dec    ebp
  40fa8f:	aas    
  40fa90:	mov    ecx,DWORD PTR [edx]
  40fa92:	mov    eax,ds:0x8ec7a235
  40fa97:	inc    ecx
  40fa98:	pop    esp
  40fa99:	gs ins DWORD PTR es:[edi],dx
  40fa9b:	cmp    eax,0xb54ca243
  40faa0:	cmp    DWORD PTR [ecx],0xffffffb1
  40faa3:	inc    ebp
  40faa4:	test   eax,0x6a1474fe
  40faa9:	jmp    0x8990:0x1d7f6152
  40fab0:	dec    esi
  40fab1:	ds or  dl,0xae
  40fab5:	test   al,0x14
  40fab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fab8:	dec    eax
  40fab9:	xor    dh,BYTE PTR [ebx+0x7db2689f]
  40fabf:	and    BYTE PTR [esi+0x7facccf6],ah
  40fac5:	xchg   edx,eax
  40fac6:	cdq    
  40fac7:	jb     0x40fb32
  40fac9:	not    BYTE PTR [esi+ecx*8]
  40facc:	and    esp,DWORD PTR [ebp+0x6a]
  40facf:	mov    esi,0xd7122729
  40fad4:	xor    eax,0xc95e523d
  40fad9:	jno    0x40fb36
  40fadb:	int3   
  40fadc:	outs   dx,WORD PTR ds:[esi]
  40fade:	push   es
  40fadf:	test   al,0x8c
  40fae1:	repnz and ecx,edx
  40fae4:	dec    esp
  40fae5:	rcl    BYTE PTR [ebx+ecx*4],1
  40fae8:	sbb    BYTE PTR [ecx+edi*4-0x2],ah
  40faec:	sub    ebx,eax
  40faee:	sub    DWORD PTR [esi-0x5d],eax
  40faf1:	push   edx
  40faf2:	inc    esp
  40faf3:	iret   
  40faf4:	sub    edx,DWORD PTR [esi]
  40faf6:	(bad)  
  40faf7:	not    BYTE PTR [edi-0x10]
  40fafa:	popf   
  40fafb:	dec    esi
  40fafc:	nop
  40fafd:	xor    BYTE PTR [eax],al
  40faff:	mov    ds:0x152fb60e,al
  40fb04:	cmp    BYTE PTR [esp+ecx*4],ch
  40fb07:	scas   al,BYTE PTR es:[edi]
  40fb08:	popf   
  40fb09:	cmp    DWORD PTR [esp+eax*1+0x5b],edx
  40fb0d:	idiv   BYTE PTR gs:[ebp+0x30]
  40fb11:	pop    ds
  40fb12:	aam    0xb4
  40fb14:	jno    0x40fb2c
  40fb16:	and    al,0x76
  40fb18:	pop    esi
  40fb19:	pop    ebx
  40fb1a:	shl    dl,0xc5
  40fb1d:	aaa    
  40fb1e:	add    DWORD PTR [edx-0x60],eax
  40fb21:	cmp    esi,esp
  40fb23:	dec    esi
  40fb24:	adc    eax,0xcd89227d
  40fb29:	iret   
  40fb2a:	inc    eax
  40fb2b:	mov    ebp,0x35ec60e3
  40fb30:	and    eax,0x1c3f85ee
  40fb35:	inc    eax
  40fb36:	inc    ebp
  40fb37:	iret   
  40fb38:	or     al,0xec
  40fb3a:	out    0x8c,al
  40fb3c:	cmp    DWORD PTR [ecx+0x1d],0xffffffd0
  40fb40:	sbb    edx,eax
  40fb42:	pop    ds
  40fb43:	call   0x1f571f8e
  40fb48:	and    al,0xc1
  40fb4a:	mov    bh,0x8f
  40fb4c:	ins    BYTE PTR es:[edi],dx
  40fb4d:	pop    ds
  40fb4e:	jne    0x40fb1b
  40fb50:	cwde   
  40fb51:	dec    esp
  40fb52:	mov    esi,DWORD PTR ds:0xdad55665
  40fb58:	and    edi,DWORD PTR cs:[edx-0x51]
  40fb5c:	aad    0x5a
  40fb5e:	push   esp
  40fb5f:	ret    0x97c
  40fb62:	shr    DWORD PTR cs:[edi],1
  40fb65:	sbb    ch,BYTE PTR [ecx+0x26]
  40fb68:	bound  edi,QWORD PTR [eax+0x7c]
  40fb6b:	lods   al,BYTE PTR ds:[esi]
  40fb6c:	inc    ebx
  40fb6d:	nop
  40fb6e:	icebp  
  40fb6f:	or     ebp,esp
  40fb71:	pop    ebx
  40fb72:	jmp    0x40fb4b
  40fb74:	push   0xfffffff0
  40fb76:	adc    al,0xf5
  40fb78:	add    al,0x3
  40fb7a:	push   eax
  40fb7b:	mov    ebx,0xe2393989
  40fb80:	and    BYTE PTR [edx-0x2c69ef6b],al
  40fb86:	fs arpl si,dx
  40fb89:	stos   DWORD PTR es:[edi],eax
  40fb8a:	dec    edx
  40fb8b:	push   ebp
  40fb8c:	mov    ch,0x8a
  40fb8e:	add    DWORD PTR [esi+0x3466fab3],ebx
  40fb94:	fisub  WORD PTR [ecx]
  40fb96:	cmp    al,0x28
  40fb98:	js     0x40fb27
  40fb9a:	inc    esi
  40fb9b:	adc    edx,DWORD PTR [edx+0x6b]
  40fb9e:	mov    edx,ebp
  40fba0:	in     al,dx
  40fba1:	scas   eax,DWORD PTR es:[edi]
  40fba2:	leave  
  40fba3:	fild   QWORD PTR [ebx+0x5a]
  40fba6:	cmp    eax,0x253ced88
  40fbab:	sahf   
  40fbac:	xor    DWORD PTR [ebp-0x3a],0x9f5f7172
  40fbb3:	add    ebx,edx
  40fbb5:	in     eax,0x7c
  40fbb7:	and    BYTE PTR [esi-0x39],0xb6
  40fbbb:	jnp    0x98a78e
  40fbc1:	fs jne 0x40fc07
  40fbc4:	cli    
  40fbc5:	mov    ah,0x4f
  40fbc7:	mov    al,cl
  40fbc9:	inc    edi
  40fbca:	mov    ch,0xb6
  40fbcc:	xor    al,0x33
  40fbce:	neg    BYTE PTR [edi-0x776ee42]
  40fbd4:	fdiv   st(4),st
  40fbd6:	je     0x40fb68
  40fbd8:	mov    ebp,0x6e1c2818
  40fbdd:	fadd   QWORD PTR [edx-0x58c82fe7]
  40fbe3:	pop    ecx
  40fbe4:	mov    edx,0x5dacfc77
  40fbe9:	mov    BYTE PTR [eax+0x5a],al
  40fbec:	mov    ds:0x26180ce9,eax
  40fbf1:	out    dx,al
  40fbf2:	jmp    0x1ee6:0xb1e81bd2
  40fbf9:	add    BYTE PTR [edi-0x5c487c66],ch
  40fbff:	or     al,0x68
  40fc01:	sbb    al,0x47
  40fc03:	jg     0x40fc04
  40fc05:	push   ecx
  40fc06:	outs   dx,BYTE PTR ds:[esi]
  40fc07:	imul   edx,DWORD PTR [ebx+0x31],0xfffffff2
  40fc0b:	pop    ebp
  40fc0c:	mov    edx,0xa2c702d9
  40fc11:	adc    BYTE PTR [ecx-0x45],0x71
  40fc15:	cmp    eax,0x9a0b72db
  40fc1a:	cwde   
  40fc1b:	sbb    al,0x32
  40fc1d:	fcom   DWORD PTR [edx]
  40fc1f:	pop    edi
  40fc20:	inc    edi
  40fc21:	mov    cl,0x78
  40fc23:	imul   edi,DWORD PTR ds:0x37b0f10d,0x39
  40fc2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc2b:	outs   dx,DWORD PTR ds:[esi]
  40fc2c:	mov    ch,0xe4
  40fc2e:	lahf   
  40fc2f:	xor    al,BYTE PTR [edx-0x4c]
  40fc32:	int3   
  40fc33:	add    edx,DWORD PTR [esi+0x5dcc3a74]
  40fc39:	fisttp WORD PTR [ebx+0x73db0d0d]
  40fc3f:	mov    edi,esp
  40fc41:	mov    dh,0x6e
  40fc43:	cmp    edx,DWORD PTR [edi+eiz*4+0x31]
  40fc47:	pop    ds
  40fc48:	inc    edx
  40fc49:	ret    0xdad7
  40fc4c:	loopne 0x40fc24
  40fc4e:	push   0xffffff8c
  40fc50:	pop    es
  40fc51:	mov    esi,DWORD PTR [ecx+0x441e8a14]
  40fc57:	call   0x2f6de83b
  40fc5c:	jle    0x40fca1
  40fc5e:	push   cs
  40fc5f:	pop    edi
  40fc60:	fadd   QWORD PTR [ecx+0x57fec855]
  40fc66:	(bad)  
  40fc67:	mov    edi,0x33a63b86
  40fc6c:	jmp    0x40fc13
  40fc6e:	push   esi
  40fc6f:	ret    0xbe16
  40fc72:	inc    esp
  40fc73:	mov    dh,0x53
  40fc75:	mov    dl,0x4a
  40fc77:	and    al,0xe0
  40fc79:	cwde   
  40fc7a:	xor    cl,BYTE PTR [eiz*8+0x71fe384f]
  40fc81:	test   al,0x9
  40fc83:	pushf  
  40fc84:	push   ebx
  40fc85:	cld    
  40fc86:	add    BYTE PTR [esi+0x79],0x8c
  40fc8a:	pop    ecx
  40fc8b:	(bad)  
  40fc8c:	fist   DWORD PTR [eax]
  40fc8e:	mov    edi,0x3e0f02ef
  40fc93:	dec    ebp
  40fc94:	pop    ebx
  40fc95:	jae    0x40fca7
  40fc97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc98:	outs   dx,DWORD PTR ds:[esi]
  40fc99:	call   0x4cc0:0xf7138403
  40fca0:	adc    edi,DWORD PTR [ecx+0x64c3a974]
  40fca6:	add    BYTE PTR [ebp-0x50],0x7e
  40fcaa:	jle    0x40fc45
  40fcac:	cli    
  40fcad:	pop    ecx
  40fcae:	call   0x58f42453
  40fcb3:	xor    ch,BYTE PTR fs:[ecx]
  40fcb6:	fdiv   DWORD PTR ds:0xa1bcb251
  40fcbc:	push   edx
  40fcbd:	cld    
  40fcbe:	(bad)  
  40fcbf:	pop    esi
  40fcc0:	sub    eax,DWORD PTR [esi+eax*2+0x2b]
  40fcc4:	fisub  DWORD PTR [edi+eiz*4]
  40fcc7:	xchg   ebx,eax
  40fcc8:	and    DWORD PTR [eax+eax*2-0x6e275239],ebx
  40fccf:	int3   
  40fcd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd1:	lahf   
  40fcd2:	addr16 dec esp
  40fcd4:	std    
  40fcd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcd6:	(bad)
  40fcda:	push   0xffffffe2
  40fcdc:	(bad)  
  40fcdd:	mov    ebp,DWORD PTR [edx]
  40fcdf:	scas   eax,DWORD PTR es:[edi]
  40fce0:	jbe    0x40fd54
  40fce2:	test   BYTE PTR [edx-0x5c],ch
  40fce5:	adc    eax,0x871d0443
  40fcea:	mov    esi,0x62e989ba
  40fcef:	mov    dl,0xd
  40fcf1:	sub    al,0x47
  40fcf3:	cli    
  40fcf4:	pop    ss
  40fcf5:	(bad)  
  40fcf6:	adc    eax,0x1ad523e1
  40fcfb:	jo     0x40fc84
  40fcfd:	xor    ch,ah
  40fcff:	pop    edx
  40fd00:	or     dh,BYTE PTR [esi]
  40fd02:	mov    cl,0xa9
  40fd04:	push   ebx
  40fd05:	adc    al,0xf6
  40fd07:	cld    
  40fd08:	inc    ebp
  40fd09:	ins    DWORD PTR es:[edi],dx
  40fd0a:	lods   eax,DWORD PTR ds:[esi]
  40fd0b:	test   al,0xe0
  40fd0d:	or     DWORD PTR [ebp-0x23],ebp
  40fd10:	je     0x40fd5e
  40fd12:	and    eax,0xa63d62fd
  40fd17:	retf   0xc480
  40fd1a:	mov    ds:0xca33ca54,al
  40fd1f:	or     al,BYTE PTR [ebx-0x3a7db7ae]
  40fd25:	test   al,0x24
  40fd27:	jg     0x40fd06
  40fd29:	inc    ebx
  40fd2a:	pop    esp
  40fd2b:	adc    ecx,DWORD PTR [esi-0x68]
  40fd2e:	lahf   
  40fd2f:	or     edx,DWORD PTR [eax-0x3a]
  40fd32:	cli    
  40fd33:	mov    dl,BYTE PTR [ebp+0x151a8ea7]
  40fd39:	pop    esi
  40fd3a:	fstp   QWORD PTR ds:0xc5057746
  40fd40:	jmp    0xacc6:0x7e2262b3
  40fd47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd48:	in     eax,0x5f
  40fd4a:	sbb    eax,0xfe58fece
  40fd50:	mov    BYTE PTR ds:0x67ace6b0,cl
  40fd56:	xchg   edi,eax
  40fd57:	lgs    esi,FWORD PTR [ebx]
  40fd5a:	arpl   WORD PTR [ecx],si
  40fd5c:	mov    eax,0xb28ced8
  40fd61:	mov    ch,0x38
  40fd63:	sbb    DWORD PTR [esi+0x3f1fdae2],0xfffffff5
  40fd6a:	mov    esp,0x52244886
  40fd6f:	jg     0x40fdcf
  40fd71:	and    ah,BYTE PTR [esi+esi*8+0x2dc4f47b]
  40fd78:	inc    esi
  40fd79:	cmc    
  40fd7a:	jbe    0x40fd61
  40fd7c:	popaw  
  40fd7e:	add    ah,BYTE PTR [edi]
  40fd80:	and    BYTE PTR gs:[esi-0x5afa3805],ch
  40fd87:	data16 cmc 
  40fd89:	cwde   
  40fd8a:	in     al,dx
  40fd8b:	xchg   edx,eax
  40fd8c:	inc    ebx
  40fd8d:	cmp    DWORD PTR [ebp+0x5b],edi
  40fd90:	and    cl,cl
  40fd92:	out    0xe,eax
  40fd94:	jp     0x40fd33
  40fd96:	cmp    eax,0x1ed1fc52
  40fd9b:	ins    DWORD PTR es:[edi],dx
  40fd9c:	aaa    
  40fd9d:	and    al,BYTE PTR [ecx+0x7794949]
  40fda3:	inc    ecx
  40fda4:	int    0xdc
  40fda6:	ja     0x40fdfd
  40fda8:	jne    0x40fd5c
  40fdaa:	ins    BYTE PTR es:[edi],dx
  40fdab:	push   esi
  40fdac:	jno    0x40fd60
  40fdae:	sub    al,0xcb
  40fdb0:	aas    
  40fdb1:	xchg   BYTE PTR [ebp-0x3c7c118a],al
  40fdb7:	jg     0x40fdba
  40fdb9:	jg     0x40fd93
  40fdbb:	enter  0x6057,0x90
  40fdbf:	sub    al,0x2e
  40fdc1:	std    
  40fdc2:	mov    ds:0xcf565d51,eax
  40fdc7:	sbb    DWORD PTR [edx],esp
  40fdc9:	jno    0x40fe43
  40fdcb:	out    dx,al
  40fdcc:	fwait
  40fdcd:	bound  esi,QWORD PTR [edx]
  40fdcf:	mov    ecx,DWORD PTR [esi-0x31141bc2]
  40fdd5:	shl    ah,1
  40fdd7:	lods   eax,DWORD PTR ds:[esi]
  40fdd8:	enter  0x78f5,0xe5
  40fddc:	jne    0x40fe02
  40fdde:	mov    ds:0xce186d9e,eax
  40fde3:	fadd   DWORD PTR [ecx+eax*1-0x2c5c8773]
  40fdea:	lea    eax,[eax-0x1adbaa6c]
  40fdf0:	int    0xae
  40fdf2:	imul   ecx,DWORD PTR [ebp-0x1f],0xffffffb1
  40fdf6:	ror    BYTE PTR [ebx+0xd],1
  40fdf9:	(bad)  
  40fdfa:	popf   
  40fdfb:	test   dl,0x97
  40fdfe:	mov    DWORD PTR [ebx+0x52389974],esp
  40fe04:	xlat   BYTE PTR ds:[ebx]
  40fe05:	inc    ebx
  40fe06:	dec    DWORD PTR [ecx+0x6]
  40fe09:	lea    ebp,[edi+0x7f]
  40fe0c:	sub    BYTE PTR [esi],al
  40fe0e:	pop    edx
  40fe0f:	je     0x40fe0d
  40fe11:	leave  
  40fe12:	loope  0x40fe5b
  40fe14:	push   edx
  40fe15:	pushf  
  40fe16:	nop
  40fe17:	cwde   
  40fe18:	std    
  40fe19:	jno    0x40fe46
  40fe1b:	or     DWORD PTR [ebp-0x2c],ecx
  40fe1e:	dec    ebx
  40fe1f:	cmp    BYTE PTR [ebp+0x126136ef],al
  40fe25:	test   al,0xfa
  40fe27:	xor    ecx,DWORD PTR [esi+0x380146c3]
  40fe2d:	out    dx,eax
  40fe2e:	sbb    eax,0x3e1f989b
  40fe33:	cmp    ebp,esi
  40fe35:	fstp   QWORD PTR [esi-0x62a4c5ed]
  40fe3b:	inc    edi
  40fe3c:	sbb    BYTE PTR [esi],dl
  40fe3e:	push   es
  40fe3f:	xchg   ebp,eax
  40fe40:	jl     0x40fdf2
  40fe42:	test   eax,0x471abe09
  40fe48:	mov    cx,0x45b1
  40fe4c:	call   0x6bed0f73
  40fe51:	fidiv  WORD PTR [ecx-0x2403741e]
  40fe57:	fwait
  40fe58:	pop    ds
  40fe59:	jae    0x40fe83
  40fe5b:	jns    0x40fe25
  40fe5d:	stc    
  40fe5e:	jno    0x40fe3d
  40fe60:	cmc    
  40fe61:	leave  
  40fe62:	inc    esp
  40fe63:	sbb    BYTE PTR [di+0x67],0x73
  40fe68:	loop   0x40fe99
  40fe6a:	out    dx,eax
  40fe6b:	test   DWORD PTR [ebp-0x38983705],esp
  40fe71:	mov    al,ds:0x13859419
  40fe76:	mov    ecx,0x7e220620
  40fe7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe7c:	and    BYTE PTR [ebp+eax*2+0x7a],al
  40fe80:	(bad)  
  40fe81:	push   edx
  40fe82:	paddsw mm6,QWORD PTR [edx+eax*8-0x5c]
  40fe87:	pop    eax
  40fe88:	add    eax,0x760e2eae
  40fe8d:	rcr    BYTE PTR [ebx+0x55fb42d0],0xf6
  40fe94:	mov    ebx,0xb6e9ab8c
  40fe99:	mov    ah,0x3d
  40fe9b:	fisub  DWORD PTR [esp+ebx*2-0x3e]
  40fe9f:	xor    eax,0xda8c8fea
  40fea4:	das    
  40fea5:	push   esp
  40fea6:	xchg   ebp,eax
  40fea7:	inc    esp
  40fea8:	sbb    bh,0x91
  40feab:	ds or  ebp,ecx
  40feae:	push   0xebe7a19e
  40feb3:	test   DWORD PTR [edx],edi
  40feb5:	mov    ds:0x5f670924,eax
  40feba:	dec    ecx
  40febb:	(bad)  [edi]
  40febd:	jns    0x40fe64
  40febf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fec0:	or     eax,0x1389996a
  40fec5:	add    dl,ch
  40fec7:	and    eax,0xa3f6dfd
  40fecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fecd:	aas    
  40fece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fecf:	test   BYTE PTR [ecx],al
  40fed1:	dec    esp
  40fed2:	ins    BYTE PTR es:[edi],dx
  40fed3:	repnz enter 0x2cdf,0x39
  40fed8:	mov    al,bl
  40feda:	pop    es
  40fedb:	jecxz  0x40ff0e
  40fedd:	test   al,0x2d
  40fedf:	loope  0x40ff5e
  40fee1:	jge    0x40ff15
  40fee3:	jae    0x40fe7a
  40fee5:	lods   eax,DWORD PTR ds:[esi]
  40fee6:	jne    0x40ff01
  40fee8:	enter  0x5277,0x9d
  40feec:	jmp    0x40ff3e
  40feee:	jnp    0x40fe82
  40fef0:	xchg   esp,eax
  40fef1:	sub    al,0xdd
  40fef3:	push   ss
  40fef4:	mov    al,ds:0x11a99f67
  40fef9:	dec    edx
  40fefa:	xchg   esp,eax
  40fefb:	jl     0x40ff07
  40fefd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fefe:	call   0x7ea0e6d0
  40ff03:	mov    esi,0x167ae49c
  40ff08:	mov    cl,0x46
  40ff0a:	and    al,0xa5
  40ff0c:	xor    eax,esp
  40ff0e:	test   BYTE PTR [ebx-0x78],ah
  40ff11:	pop    eax
  40ff12:	mov    esp,0x2b121094
  40ff17:	jbe    0x40ff18
  40ff19:	dec    ebx
  40ff1a:	push   es
  40ff1b:	xlat   BYTE PTR ds:[ebx]
  40ff1c:	mov    cl,BYTE PTR [edi-0x80]
  40ff1f:	cmp    al,0xb5
  40ff21:	shr    DWORD PTR [ecx-0x56],1
  40ff24:	imul   ecx,DWORD PTR [ecx-0xf],0xffffff9a
  40ff28:	ret    0x3143
  40ff2b:	ret    
  40ff2c:	dec    edi
  40ff2d:	pop    ds
  40ff2e:	and    ebp,DWORD PTR [ecx+ebp*8-0x5bc4844b]
  40ff35:	popf   
  40ff36:	dec    eax
  40ff37:	scas   al,BYTE PTR es:[edi]
  40ff38:	push   cs
  40ff39:	sbb    esi,edi
  40ff3b:	jl     0x40ff2d
  40ff3d:	pushf  
  40ff3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff3f:	push   ds
  40ff40:	data16 fidivr DWORD PTR [edx-0x36]
  40ff44:	add    DWORD PTR [ebp-0x47],edi
  40ff47:	fidivr DWORD PTR [esi+0x672ebc47]
  40ff4d:	sbb    al,0xfd
  40ff4f:	dec    bx
  40ff51:	mov    al,0x12
  40ff53:	cmp    BYTE PTR [ebx+0x6c],al
  40ff56:	test   DWORD PTR [eax-0x75],edx
  40ff59:	lea    ecx,[ebx+0x21ef1f52]
  40ff5f:	cmp    edx,edi
  40ff61:	mov    fs,ebx
  40ff63:	pop    ecx
  40ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff65:	jbe    0x40ff0c
  40ff67:	or     eax,0x79a768db
  40ff6c:	inc    edi
  40ff6d:	adc    ecx,esi
  40ff6f:	jbe    0x40ff67
  40ff71:	adc    esp,DWORD PTR [eax+0x104511c2]
  40ff77:	xchg   edx,eax
  40ff78:	pop    edx
  40ff79:	push   ss
  40ff7a:	adc    edx,DWORD PTR [edx-0x23]
  40ff7d:	xlat   BYTE PTR ds:[ebx]
  40ff7e:	sub    DWORD PTR [ebx],edi
  40ff80:	dec    ecx
  40ff81:	mov    bh,0x8b
  40ff83:	fld    DWORD PTR [edi]
  40ff85:	sub    DWORD PTR [edi-0x5c9cf9],esp
  40ff8b:	xchg   esp,eax
  40ff8c:	jp     0x40ffeb
  40ff8e:	mov    ch,0xf2
  40ff90:	adc    BYTE PTR [eax+edx*2+0x4f],bl
  40ff94:	sub    ebx,DWORD PTR [eax-0x69]
  40ff97:	xor    eax,0x8c92f343
  40ff9c:	ins    DWORD PTR es:[edi],dx
  40ff9d:	push   0x66
  40ff9f:	mov    esi,0x6d3d8bc5
  40ffa4:	push   esp
  40ffa5:	jge    0x40ff8f
  40ffa7:	movq   mm7,QWORD PTR [eax+0x6140a759]
  40ffae:	xchg   edi,eax
  40ffaf:	sub    DWORD PTR [esi],ecx
  40ffb1:	sti    
  40ffb2:	arpl   WORD PTR [edx],si
  40ffb4:	cdq    
  40ffb5:	dec    edi
  40ffb6:	adc    al,0x19
  40ffb8:	cmp    edi,ecx
  40ffba:	pop    esp
  40ffbb:	gs pushf 
  40ffbd:	iret   
  40ffbe:	fiadd  DWORD PTR [ecx-0x2961df0d]
  40ffc4:	dec    eax
  40ffc5:	jbe    0x40ff76
  40ffc7:	mov    esp,0x74f571d
  40ffcc:	std    
  40ffcd:	push   0x104af42d
  40ffd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd3:	lods   eax,DWORD PTR ds:[esi]
  40ffd4:	xchg   ebp,eax
  40ffd5:	rol    BYTE PTR [ebx+0x25],0xea
  40ffd9:	ins    DWORD PTR es:[edi],dx
  40ffda:	or     eax,0xc7ac45a
  40ffdf:	test   BYTE PTR [ecx-0x36e01703],bl
  40ffe5:	retf   0xdb3d
  40ffe8:	mov    WORD PTR [esp+ecx*1-0x30000af5],cs
  40ffef:	mov    DWORD PTR [ebp+0x19],ebp
  40fff2:	loope  0x40ff7b
  40fff4:	sbb    al,0xdc
  40fff6:	push   edx
  40fff7:	xchg   DWORD PTR [eax],edx
  40fff9:	push   ebx
  40fffa:	jge    0x40ffdc
  40fffc:	xor    eax,0x5338b102
  410001:	stos   DWORD PTR es:[edi],eax
  410002:	pop    ds
  410003:	outs   dx,BYTE PTR ds:[esi]
  410004:	lea    ebx,[esi-0x73595bb8]
  41000a:	pop    eax
  41000b:	rcr    DWORD PTR [esi+ecx*1+0x58],0xfb
  410010:	mov    eax,DWORD PTR [edi-0x20]
  410013:	mov    eax,0xdf879a5b
  410018:	pop    esp
  410019:	call   0xefdb:0x29f2b02f
  410020:	test   al,0xff
  410022:	mov    edx,eax
  410024:	pop    ds
  410025:	jp     0x40ffab
  410027:	mov    al,ds:0x83ad1d5c
  41002c:	leave  
  41002d:	mov    cl,al
  41002f:	cmp    al,0x8e
  410031:	sbb    al,0x87
  410033:	fcmovnu st,st(3)
  410035:	pop    ebp
  410036:	rcr    DWORD PTR [eax],1
  410038:	stos   BYTE PTR es:[edi],al
  410039:	ja     0x41007a
  41003b:	sub    edi,DWORD PTR [esi-0x26b912ae]
  410041:	mov    bl,0x4b
  410043:	rdmsr  
  410045:	gs hlt 
  410047:	shl    ah,1
  410049:	iret   
  41004a:	out    dx,al
  41004b:	repz test DWORD PTR ds:0x475f8a71,edx
  410052:	adc    DWORD PTR [ecx+0x46ac6122],edi
  410058:	cmp    DWORD PTR [ecx],0x405ea258
  41005e:	rol    DWORD PTR [esi*4-0x521b9abd],cl
  410065:	jb     0x41004f
  410067:	sbb    eax,0x8c1b24e6
  41006c:	rol    BYTE PTR [ebp+0x64],cl
  41006f:	xchg   esi,eax
  410070:	lods   eax,DWORD PTR ds:[esi]
  410071:	ss push edi
  410073:	push   ds
  410074:	(bad)  
  410075:	jo     0x410043
  410077:	adc    DWORD PTR [ecx+0xe],ecx
  41007a:	inc    esp
  41007b:	cs std 
  41007d:	xor    edx,DWORD PTR [ebx]
  41007f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410080:	jge    0x41005f
  410082:	aad    0x53
  410084:	or     bl,dl
  410086:	pushf  
  410087:	call   0x8f7c3f2d
  41008c:	popa   
  41008d:	pop    ebx
  41008e:	js     0x4100c3
  410090:	rol    DWORD PTR gs:[ecx],0x80
  410094:	push   ebx
  410096:	sbb    eax,0x6e7d28f
  41009b:	je     0x4100ec
  41009d:	sub    DWORD PTR [ebp+esi*2+0x425c2c17],esp
  4100a4:	out    0x10,al
  4100a6:	repz pop esp
  4100a8:	je     0x41008a
  4100aa:	sub    eax,0x7b15aca3
  4100af:	ror    ecx,1
  4100b1:	fdivr  DWORD PTR [edx]
  4100b3:	js     0x4100bd
  4100b5:	mov    bh,cl
  4100b7:	es in  eax,dx
  4100b9:	mov    edx,0x2e67d87a
  4100be:	dec    esi
  4100bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c0:	xor    al,0x20
  4100c2:	ret    0xac6b
  4100c5:	hlt    
  4100c6:	sbb    ebp,DWORD PTR ds:0xa1a96f96
  4100cc:	loope  0x4100a9
  4100ce:	(bad)  
  4100d0:	fnstenv [eax-0x23fa9f6d]
  4100d6:	sti    
  4100d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100d8:	push   0xaabff880
  4100dd:	sar    BYTE PTR [eax-0x4],cl
  4100e0:	ss (bad) 
  4100e2:	mov    al,ds:0x557a28a6
  4100e7:	xchg   DWORD PTR [eax+0x6c],ebx
  4100ea:	dec    eax
  4100eb:	scas   al,BYTE PTR es:[edi]
  4100ec:	out    dx,eax
  4100ed:	mov    DWORD PTR [ecx-0x46d2c5c6],eax
  4100f3:	mov    DWORD PTR [esi],eax
  4100f5:	js     0x4100c2
  4100f7:	mov    ds:0x21925687,eax
  4100fc:	outs   dx,BYTE PTR ds:[esi]
  4100fd:	in     al,dx
  4100fe:	xchg   edi,eax
  4100ff:	sub    al,0x21
  410101:	mov    cl,0xa2
  410103:	push   edx
  410104:	sub    BYTE PTR [eax-0x35caa45c],ch
  41010a:	push   ecx
  41010b:	lea    ebx,ds:0x98fcebb8
  410111:	pop    edi
  410112:	and    BYTE PTR [ebx-0x3c],bl
  410115:	loop   0x4100bc
  410117:	inc    ebp
  410118:	outs   dx,BYTE PTR ds:[esi]
  410119:	xchg   dh,bh
  41011b:	sbb    dh,bl
  41011d:	int    0xb
  41011f:	daa    
  410120:	fstp   DWORD PTR [ecx+edi*8]
  410123:	outs   dx,DWORD PTR ds:[esi]
  410124:	outs   dx,BYTE PTR ds:[esi]
  410125:	daa    
  410126:	mov    dl,0x35
  410128:	dec    ecx
  410129:	mov    ah,0x49
  41012b:	xchg   ebp,eax
  41012c:	jmp    0x19e6699a
  410131:	and    BYTE PTR [eax+0x7],dh
  410134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410135:	je     0x4100d6
  410137:	mov    al,0x8c
  410139:	push   edi
  41013a:	dec    ecx
  41013b:	sub    BYTE PTR [esi+0x18],ch
  41013e:	(bad)  
  41013f:	sar    DWORD PTR [ebx-0x44],1
  410142:	stos   DWORD PTR es:[edi],eax
  410143:	mov    DWORD PTR [eax-0x60],ebp
  410146:	cmp    DWORD PTR [edi],ecx
  410148:	xchg   BYTE PTR [ecx-0xf],dl
  41014b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41014c:	mov    ecx,0xc102983d
  410151:	jle    0x4101ac
  410153:	and    esp,ebp
  410155:	(bad)  
  410156:	fistp  QWORD PTR [edi]
  410158:	dec    ebx
  410159:	adc    eax,0xe33a9bcf
  41015e:	mov    ebx,DWORD PTR [edx+0x6c985d46]
  410164:	mov    eax,0x63ec95b6
  410169:	inc    ebp
  41016a:	push   es
  41016b:	inc    eax
  41016c:	push   es
  41016d:	xchg   BYTE PTR [ebx+0x1a630588],dl
  410173:	jo     0x410186
  410175:	xor    eax,0xf5488b2c
  41017a:	mov    bh,0xa1
  41017c:	jecxz  0x4101fa
  41017e:	repnz or al,0xb9
  410181:	xchg   esi,eax
  410182:	ss fucompp 
  410185:	sub    BYTE PTR [edx],0x3d
  410188:	rol    DWORD PTR [edi+0x4962983e],cl
  41018e:	push   edx
  41018f:	bound  ebx,QWORD PTR [eax]
  410191:	sbb    ebp,0x13a21a74
  410197:	fimul  WORD PTR [eax]
  410199:	dec    ebp
  41019a:	mov    BYTE PTR [edx+0x15e9d6b7],al
  4101a0:	loop   0x4101d1
  4101a2:	sar    DWORD PTR [esp+eiz*8-0x28d94b09],0x6f
  4101aa:	or     eax,0xe012e823
  4101af:	mov    dl,0xcc
  4101b1:	dec    esp
  4101b2:	dec    edi
  4101b3:	mov    edi,DWORD PTR [ebp+0x19]
  4101b6:	cs xor al,0x7
  4101b9:	stc    
  4101ba:	sbb    ch,BYTE PTR [ebp+0x28b2747e]
  4101c0:	cmp    DWORD PTR [esi+eax*8+0x2c],0x7b
  4101c5:	xchg   edx,eax
  4101c6:	dec    ecx
  4101c7:	in     eax,0xe9
  4101c9:	les    eax,FWORD PTR [edi+0x42ee9ef4]
  4101cf:	lds    esi,FWORD PTR [edx+0x42]
  4101d2:	cmp    DWORD PTR [ebx],edx
  4101d4:	jo     0x410196
  4101d6:	je     0x410250
  4101d8:	and    al,ah
  4101da:	xchg   ecx,eax
  4101db:	adc    BYTE PTR [ecx-0x29],0x2a
  4101df:	push   esi
  4101e0:	es mov ah,0x2b
  4101e3:	jle    0x410166
  4101e5:	add    ch,BYTE PTR [esi+0x12]
  4101e8:	ja     0x410259
  4101ea:	adc    edi,DWORD PTR [bx+si+0x28]
  4101ee:	call   0xc9fa:0x5a37c4e0
  4101f5:	or     bh,dl
  4101f7:	pop    esi
  4101f8:	push   cs
  4101f9:	xor    ah,BYTE PTR ds:0x34f6eb35
  4101ff:	or     al,0x5b
  410201:	and    bl,BYTE PTR [esi+0x35c2fcce]
  410207:	jnp    0x4101a9
  410209:	dec    edx
  41020a:	in     eax,dx
  41020b:	push   ecx
  41020c:	outs   dx,BYTE PTR ds:[esi]
  41020e:	lock js 0x4101ca
  410211:	rcl    BYTE PTR [ebx],1
  410213:	cld    
  410214:	xchg   ecx,eax
  410215:	mov    cl,0x26
  410217:	push   eax
  410218:	shr    BYTE PTR [eax+ebx*2],1
  41021b:	or     al,0x4b
  41021d:	sbb    DWORD PTR [esp+ebp*2],ebx
  410220:	hlt    
  410221:	cs mov esi,0xe7d7c1ea
  410227:	ds inc ebp
  410229:	rol    BYTE PTR [ebx+ebx*1+0x6d],cl
  41022d:	lock mov esi,0x246f30a5
  410233:	mov    bh,0x2e
  410235:	push   esi
  410236:	xchg   BYTE PTR [ebx+esi*4-0x1d],ah
  41023a:	test   DWORD PTR [esi+0x78bbdccb],ebp
  410240:	mov    esi,ecx
  410242:	mov    gs,WORD PTR [ebx-0x215a88da]
  410248:	fadd   QWORD PTR [bp+si+0x5319]
  41024d:	cmp    edx,DWORD PTR ds:0x4be04ef8
  410253:	fsub   DWORD PTR [ecx+eax*2-0x4c]
  410257:	push   0xe3c549be
  41025c:	xchg   ebx,eax
  41025d:	mov    esi,0x5e2ebc4f
  410262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410263:	fwait
  410264:	in     eax,0x74
  410266:	aad    0x44
  410268:	add    BYTE PTR [edi-0x51],ah
  41026b:	xor    esi,ebp
  41026d:	sub    al,0x2f
  41026f:	pop    ecx
  410270:	mov    bh,0x1
  410272:	enter  0xb0fd,0x64
  410276:	(bad)  
  410278:	mov    edx,gs
  41027a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41027b:	mov    DWORD PTR [ebx-0x4d6b2706],0x27d872e2
  410285:	adc    al,BYTE PTR [edi-0x5e8d255c]
  41028b:	xchg   DWORD PTR [edx],ecx
  41028d:	test   BYTE PTR [eax],cl
  41028f:	loop   0x41029f
  410291:	add    al,0x8b
  410293:	ror    DWORD PTR [edi+0x1be68fee],1
  410299:	jne    0x410264
  41029b:	ds mov esi,0xb308f50
  4102a1:	ret    0x5ec0
  4102a4:	out    0xb4,al
  4102a6:	retf   0xafcb
  4102a9:	jge    0x41026d
  4102ab:	mov    ds:0x7bb0d77f,eax
  4102b0:	xlat   BYTE PTR ds:[ebx]
  4102b1:	sub    eax,0x9aaaa945
  4102b6:	mov    al,ds:0x88f72943
  4102bb:	mov    esp,ebx
  4102bd:	mov    edi,0x9a29962e
  4102c2:	arpl   WORD PTR [ebx],sp
  4102c4:	fwait
  4102c5:	xchg   esi,eax
  4102c6:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102c8:	bound  edx,QWORD PTR [eax+0x5f]
  4102cb:	sub    edx,0x19974b48
  4102d1:	test   eax,0x30ccde28
  4102d6:	pop    ds
  4102d7:	popf   
  4102d8:	rep outs dx,BYTE PTR ds:[esi]
  4102da:	fiadd  DWORD PTR [esi]
  4102dc:	push   0x2c45d0c1
  4102e1:	sbb    ebp,DWORD PTR [ebp+edi*4-0x4a]
  4102e5:	ret    0x3de2
  4102e8:	mov    al,ds:0x8c80a89c
  4102ed:	jnp    0x410364
  4102ef:	or     al,0x93
  4102f1:	in     eax,0xf6
  4102f3:	push   ecx
  4102f4:	mov    edi,0xed38a6c3
  4102f9:	add    DWORD PTR [ebp+eiz*1-0x17],ebp
  4102fd:	bound  eax,QWORD PTR [ebx-0x7d]
  410300:	sbb    al,0x9f
  410302:	mov    bh,BYTE PTR [ebx+0x178bdd5b]
  410308:	fld    DWORD PTR [esi+0x6d03458d]
  41030e:	mov    edx,0xe39d0734
  410313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410314:	es push ebp
  410316:	sub    DWORD PTR ds:0x66aab42a,ecx
  41031c:	retf   0xc404
  41031f:	inc    esp
  410320:	add    DWORD PTR [ecx],ebp
  410322:	daa    
  410323:	adc    BYTE PTR [esi-0x75],bl
  410326:	sar    DWORD PTR [ebx-0x59c1e4f7],0x65
  41032d:	adc    BYTE PTR [edx-0x44],al
  410330:	jge    0x4103b1
  410332:	sub    eax,0x5d64c10
  410337:	sub    dl,BYTE PTR [edi]
  410339:	scas   eax,DWORD PTR es:[edi]
  41033a:	shl    DWORD PTR [edx],cl
  41033c:	cld    
  41033d:	fstp   DWORD PTR [eax]
  41033f:	add    ecx,ecx
  410341:	xchg   ebp,eax
  410342:	out    dx,eax
  410343:	jle    0x4103ab
  410345:	retf   0xc08a
  410348:	data16 loope 0x4102f6
  41034b:	mov    ds:0xdf7b5e53,eax
  410350:	not    DWORD PTR [ebx]
  410352:	mov    ss,WORD PTR [ebx]
  410354:	aaa    
  410355:	add    ebx,DWORD PTR [edi-0x1542c89c]
  41035b:	cli    
  41035c:	enter  0x2480,0xd1
  410360:	sub    al,0x7d
  410362:	jne    0x410348
  410364:	pop    ss
  410365:	retf   0x97d4
  410368:	push   0xffffffe7
  41036a:	(bad)  
  41036b:	ja     0x410333
  41036d:	dec    edi
  41036e:	loope  0x410324
  410370:	sbb    ebx,DWORD PTR [ebp+esi*8-0xa38294f]
  410377:	test   ax,0x6493
  41037b:	cld    
  41037c:	sub    DWORD PTR [ecx+0x60],esi
  41037f:	out    0x28,al
  410381:	dec    esp
  410382:	add    al,dh
  410384:	lea    ebp,[ebp-0x52]
  410387:	in     eax,dx
  410388:	mov    eax,ds:0x20b4422a
  41038d:	dec    edi
  41038e:	mov    edi,0x51d274b8
  410393:	mov    edi,0xcb99f549
  410398:	inc    ebx
  410399:	add    dh,al
  41039b:	(bad)  
  41039c:	push   cs
  41039d:	gs sti 
  41039f:	xor    ecx,edi
  4103a1:	in     eax,0x67
  4103a3:	jmp    0x344d:0xb8269940
  4103aa:	jb     0x4103aa
  4103ac:	idiv   bl
  4103ae:	out    0xcd,eax
  4103b0:	sub    eax,eax
  4103b2:	cmp    ebp,DWORD PTR [esi]
  4103b4:	call   0xf85e:0xb9c14170
  4103bb:	in     eax,0x2a
  4103bd:	mov    edi,0xa354851c
  4103c2:	mov    dh,0x25
  4103c4:	fdivr  DWORD PTR [eax-0x3f6acfdc]
  4103ca:	push   esi
  4103cb:	mov    ah,0xe3
  4103cd:	adc    al,0x16
  4103cf:	loop   0x41036e
  4103d1:	jo     0x410403
  4103d3:	loope  0x4103e5
  4103d5:	cmp    esi,eax
  4103d7:	rcl    BYTE PTR [ecx-0x4b],cl
  4103da:	push   esp
  4103db:	mov    ecx,0xbc7e6967
  4103e0:	or     eax,0x929a3eb8
  4103e5:	jne    0x4103c4
  4103e7:	adc    ebp,DWORD PTR [ebp+0x78a7859c]
  4103ed:	mov    WORD PTR [eax-0x70],ss
  4103f0:	sub    edx,DWORD PTR [ebx-0x10]
  4103f3:	std    
  4103f4:	in     al,0x82
  4103f6:	adc    BYTE PTR [esi+edx*8],cl
  4103f9:	jmp    0x97d85e82
  4103fe:	in     al,0x45
  410400:	lds    ebx,FWORD PTR [esi+ebx*1-0x4166afbd]
  410407:	inc    ecx
  410408:	xlat   BYTE PTR ds:[ebx]
  410409:	fcom   DWORD PTR [ecx+0x6bfb8b9e]
  41040f:	ds (bad) 
  410411:	jl     0x41045c
  410413:	arpl   WORD PTR [edx+0x78ac4179],sp
  410419:	fcom   QWORD PTR [eax+edi*1-0x1e]
  41041d:	cmp    esi,ebp
  41041f:	popa   
  410420:	fild   WORD PTR [esi+0x641564b5]
  410426:	es mov esp,0x5660ea74
  41042c:	jae    0x4103f0
  41042e:	xchg   edi,eax
  41042f:	fisubr WORD PTR [edi]
  410431:	xchg   ecx,eax
  410432:	mov    edx,0xb8d2e96e
  410437:	repz jmp 0x3567:0x80682ebd
  41043f:	mov    al,ds:0x4a6111de
  410444:	xchg   ecx,eax
  410445:	jle    0x410488
  410447:	xor    edx,DWORD PTR [ebp+ebp*2+0x38b7e6cf]
  41044e:	mov    ecx,0xe2376e93
  410453:	fild   WORD PTR [eax+0x4c1846e5]
  410459:	repnz out 0x5a,al
  41045c:	mov    ecx,ecx
  41045e:	mov    ds:0xa1f5d5d5,eax
  410463:	enter  0x599,0x6a
  410467:	mov    ebp,0x3e3d6e6d
  41046c:	cmp    BYTE PTR [edx-0x23addbaa],ah
  410472:	sub    al,BYTE PTR [edx]
  410474:	ss pop ds
  410476:	inc    ebx
  410477:	xchg   ebp,eax
  410478:	inc    eax
  410479:	adc    BYTE PTR [ecx],dh
  41047b:	lds    ebp,FWORD PTR ds:0xfd091927
  410481:	(bad)  
  410482:	mov    dh,0x46
  410484:	and    DWORD PTR [edi+0x61],edx
  410487:	daa    
  410488:	mov    edx,0xdb648027
  41048d:	cld    
  41048e:	not    al
  410490:	dec    edi
  410491:	xchg   ebp,eax
  410492:	pusha  
  410493:	add    bh,BYTE PTR [esi+0x7]
  410496:	leave  
  410497:	xor    eax,0xf463240f
  41049c:	sbb    BYTE PTR ds:0xfc6ce342,ah
  4104a2:	fnsave [eax+0x4f25f345]
  4104a8:	cmp    DWORD PTR ds:0x4129f2be,ebx
  4104ae:	pop    eax
  4104af:	or     eax,0xe513bd02
  4104b4:	sbb    BYTE PTR [edx+eax*1],ah
  4104b7:	push   DWORD PTR [ebp-0x50208a28]
  4104bd:	ins    DWORD PTR es:[edi],dx
  4104be:	or     ecx,DWORD PTR [ebx+edi*1+0x49]
  4104c2:	sbb    edx,DWORD PTR [edi]
  4104c4:	jge    0x410473
  4104c6:	xor    eax,0x2ff12d7c
  4104cb:	stos   BYTE PTR es:[edi],al
  4104cc:	mov    al,0x7f
  4104ce:	ficomp DWORD PTR [esi-0x5486a50a]
  4104d4:	xchg   edx,eax
  4104d5:	(bad)  
  4104d6:	inc    edx
  4104d7:	and    DWORD PTR [esi+0x79],ebp
  4104da:	cmc    
  4104db:	and    BYTE PTR [ebp+0x35],cl
  4104de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104df:	xchg   DWORD PTR [ebx],ebx
  4104e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e2:	mov    eax,0x729b4cbd
  4104e7:	mov    ds:0x304255bb,eax
  4104ec:	xchg   esp,eax
  4104ed:	rol    ecx,0xaf
  4104f0:	xchg   ebp,eax
  4104f1:	cdq    
  4104f2:	pop    es
  4104f3:	and    al,0x5a
  4104f5:	inc    ebp
  4104f6:	inc    edi
  4104f7:	or     al,0x5
  4104f9:	jne    0x4104b9
  4104fb:	adc    bh,BYTE PTR [edi+edi*8-0x4d]
  4104ff:	jae    0x410547
  410501:	test   eax,0xe07d26ad
  410506:	es mov dh,0x51
  410509:	jle    0x4104c9
  41050b:	popa   
  41050c:	jmp    0x2901795d
  410511:	ja     0x4104a5
  410513:	pop    es
  410514:	std    
  410515:	and    ebx,DWORD PTR [edx-0x4ccb0f88]
  41051b:	push   cs
  41051c:	mov    dl,0x11
  41051e:	psubsb mm4,QWORD PTR [ebx]
  410521:	mov    edi,0x1cb8e74
  410526:	push   ebx
  410527:	cld    
  410528:	icebp  
  410529:	ins    DWORD PTR es:[edi],dx
  41052a:	xlat   BYTE PTR ds:[ebx]
  41052b:	ds xchg esi,eax
  41052d:	dec    edi
  41052e:	mov    esp,0xf4cec1db
  410533:	mov    bh,0xa2
  410535:	adc    dl,BYTE PTR [edx]
  410537:	(bad)  
  410538:	in     eax,dx
  410539:	jge    0x410561
  41053b:	cbw    
  41053d:	mov    al,0xbc
  41053f:	push   0xffffff86
  410541:	jecxz  0x410561
  410543:	sti    
  410544:	xor    BYTE PTR [ecx+ecx*8-0x214b09bd],ah
  41054b:	sub    ebp,ebx
  41054d:	jmp    0xf76a:0x8502a00b
  410554:	xor    eax,0x595d16e4
  410559:	pop    ecx
  41055a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41055b:	and    BYTE PTR [eax-0x3e720690],dl
  410561:	jmp    0x7200a1a6
  410566:	jmp    0xd1c0736
  41056b:	outs   dx,DWORD PTR ds:[esi]
  41056c:	ror    DWORD PTR [ebx-0x53c4605f],0x7c
  410573:	in     eax,dx
  410574:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410576:	dec    esi
  410577:	into   
  410578:	addr16 or al,0x37
  41057b:	je     0x4105f9
  41057d:	xor    al,0x57
  41057f:	mov    WORD PTR [ebx+esi*4-0x2e],?
  410583:	cld    
  410584:	xchg   esi,eax
  410585:	ins    DWORD PTR es:[edi],dx
  410586:	xlat   BYTE PTR ds:[ebx]
  410587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410588:	mov    ds:0x35e4e2f0,al
  41058d:	dec    edx
  41058e:	nop
  41058f:	lods   al,BYTE PTR ds:[esi]
  410590:	test   eax,0xf8f3a8ab
  410595:	xlat   BYTE PTR ds:[ebx]
  410596:	repz bound eax,QWORD PTR [eax]
  410599:	push   esp
  41059a:	mov    ch,0x7c
  41059c:	cmp    edi,DWORD PTR [ecx-0x74]
  41059f:	stc    
  4105a0:	sahf   
  4105a1:	bnd jo 0x41055a
  4105a4:	arpl   WORD PTR [ebp+ebp*1+0x37],cx
  4105a8:	xchg   edi,eax
  4105a9:	push   esp
  4105aa:	popf   
  4105ab:	add    bh,BYTE PTR [edx]
  4105ad:	xchg   edi,eax
  4105ae:	sbb    BYTE PTR ds:0x6ad6c375,dl
  4105b4:	cmp    DWORD PTR [ecx-0x7d],esi
  4105b7:	ret    0x4e94
  4105ba:	cli    
  4105bb:	into   
  4105bc:	ret    
  4105bd:	xchg   BYTE PTR [edx-0x207bb23a],ch
  4105c3:	xchg   ebx,eax
  4105c4:	lods   eax,DWORD PTR ds:[esi]
  4105c5:	jnp    0x41060d
  4105c7:	sti    
  4105c8:	xchg   esi,eax
  4105c9:	repz scas al,BYTE PTR es:[edi]
  4105cb:	sub    BYTE PTR [eax],ch
  4105cd:	jne    0x410604
  4105cf:	xlat   BYTE PTR ds:[ebx]
  4105d0:	in     al,0xaf
  4105d2:	mov    BYTE PTR [ebx],bl
  4105d4:	out    dx,al
  4105d5:	fbld   TBYTE PTR [eax]
  4105d7:	(bad)  
  4105d8:	es sbb ah,ch
  4105db:	jbe    0x4105f2
  4105dd:	sbb    ebx,DWORD PTR [edx]
  4105df:	mov    ah,BYTE PTR [ecx-0x1e]
  4105e2:	jl     0x4105ef
  4105e4:	mov    al,0xd6
  4105e6:	int    0x6
  4105e8:	mov    ds:0xca43ede8,al
  4105ed:	jb     0x41058e
  4105ef:	cmp    BYTE PTR [ebx-0x1e07b87],cl
  4105f5:	stos   BYTE PTR es:[edi],al
  4105f6:	test   BYTE PTR [ebp+0x561bfa7d],cl
  4105fc:	out    dx,eax
  4105fd:	pop    es
  4105fe:	jno    0x41066a
  410600:	subps  xmm2,xmm5
  410603:	jb     0x410607
  410605:	and    ch,BYTE PTR [ebx]
  410607:	and    ebp,DWORD PTR [ebp+0xbb6b8cc]
  41060d:	rol    BYTE PTR [edx-0x43],1
  410610:	ins    BYTE PTR es:[edi],dx
  410611:	xor    cl,BYTE PTR [edx+ebp*4]
  410614:	clc    
  410615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410616:	cli    
  410617:	mov    al,ds:0x551dd1aa
  41061c:	cmp    eax,0xd7e904a8
  410621:	loop   0x4105aa
  410623:	mov    esp,0xb2c5e1f8
  410628:	repz xor eax,0x3c81b7b2
  41062e:	pop    eax
  41062f:	jo     0x410620
  410631:	adc    ebx,edi
  410633:	in     al,0xeb
  410635:	xchg   edx,eax
  410636:	jne    0x4105d1
  410638:	fistp  DWORD PTR [esi-0x4d]
  41063b:	and    al,0x86
  41063d:	inc    ecx
  41063e:	and    dl,BYTE PTR [ebx+0x5d54dbc6]
  410644:	sub    dl,cl
  410646:	neg    BYTE PTR [ecx+esi*4+0x33]
  41064a:	xchg   DWORD PTR [edx-0x47],ecx
  41064d:	xor    edi,ebp
  41064f:	inc    eax
  410650:	and    ah,dh
  410652:	(bad)
  410655:	test   al,0x41
  410657:	mov    edi,0x31a7e71d
  41065c:	pusha  
  41065d:	mov    dl,0xb0
  41065f:	sbb    al,0xd5
  410661:	(bad)  
  410662:	mov    edi,0x2e0491fc
  410667:	rcr    BYTE PTR [esi+0x26d3ec4d],0x3d
  41066e:	xchg   edi,eax
  41066f:	or     DWORD PTR [esi+0x2268e608],eax
  410675:	shl    DWORD PTR [ebx+0xd],1
  410678:	sahf   
  410679:	(bad)  
  41067a:	push   ebp
  41067b:	lahf   
  41067c:	cmc    
  41067d:	jnp    0x410677
  41067f:	(bad)  
  410680:	je     0x41062c
  410682:	retf   
  410683:	cvtpi2ps xmm6,QWORD PTR [eax+0x37]
  410687:	cld    
  410688:	pusha  
  410689:	mov    esp,0xe6a1fba1
  41068e:	inc    esi
  41068f:	and    BYTE PTR [ecx],dh
  410691:	neg    DWORD PTR [edi+0x67aa433]
  410697:	je     0x410683
  410699:	ror    esp,1
  41069b:	dec    ecx
  41069c:	mov    esp,0x98038890
  4106a1:	pop    esp
  4106a2:	xor    ebx,DWORD PTR [edx-0x74]
  4106a5:	mov    BYTE PTR [eax-0x59],cl
  4106a8:	push   ebp
  4106a9:	inc    edi
  4106aa:	pop    edi
  4106ab:	into   
  4106ac:	pop    edi
  4106ad:	outs   dx,DWORD PTR ds:[esi]
  4106ae:	hlt    
  4106af:	mov    edx,DWORD PTR [edi]
  4106b1:	mov    bl,0xa5
  4106b3:	in     al,dx
  4106b4:	and    ch,bl
  4106b6:	adc    dl,BYTE PTR [eax]
  4106b8:	jns    0x4106e6
  4106ba:	pop    ebx
  4106bb:	enter  0xc9e6,0x49
  4106bf:	(bad)  
  4106c0:	xor    ah,cl
  4106c2:	icebp  
  4106c3:	sbb    BYTE PTR [ebx],ch
  4106c5:	retf   
  4106c6:	pusha  
  4106c7:	push   0xfc27d67d
  4106cc:	fdivr  st,st(6)
  4106ce:	stos   DWORD PTR es:[edi],eax
  4106cf:	loope  0x41070d
  4106d1:	push   ss
  4106d2:	jecxz  0x4106dd
  4106d4:	fisubr WORD PTR [ebx+0x7540e9bb]
  4106da:	mov    esi,0x3a77938b
  4106df:	sub    eax,0xa13dd44d
  4106e4:	cwde   
  4106e5:	out    0x1c,eax
  4106e7:	adc    edx,ebp
  4106e9:	sbb    eax,esi
  4106eb:	jmp    0x4106da
  4106ed:	fsubr  DWORD PTR [eax+0x3]
  4106f0:	mov    DWORD PTR [ebp+0x26ba7807],ecx
  4106f6:	out    0x60,eax
  4106f8:	jbe    0x410750
  4106fa:	xor    dl,BYTE PTR [edx+0x70]
  4106fd:	adc    esp,DWORD PTR [edx-0x72d5c8dd]
  410703:	and    DWORD PTR [edx-0x37c2ebaf],esp
  410709:	aaa    
  41070a:	jmp    0x2755:0x93837f63
  410711:	push   edx
  410712:	in     al,0xdb
  410714:	add    ch,BYTE PTR [eax-0x3f]
  410717:	ror    DWORD PTR [esi-0x17],1
  41071a:	jnp    0x410719
  41071c:	push   0x8420f618
  410721:	rol    DWORD PTR [edx-0x1536d102],0x2e
  410728:	neg    DWORD PTR [ecx-0x45]
  41072b:	and    BYTE PTR [ebp-0x8],ch
  41072e:	add    al,0x12
  410730:	inc    esp
  410731:	hlt    
  410732:	sub    al,0xeb
  410734:	push   ebx
  410735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410736:	xchg   DWORD PTR [ebx],eax
  410738:	pop    eax
  410739:	xchg   BYTE PTR [edi+0x70e7739d],dl
  41073f:	add    ecx,esi
  410741:	adc    DWORD PTR [ebx],esp
  410743:	fisub  DWORD PTR [eax]
  410745:	fstp   QWORD PTR [ebx]
  410747:	sub    BYTE PTR [eax-0x7f],cl
  41074a:	loop   0x4106fd
  41074c:	push   es
  41074d:	in     eax,0xee
  41074f:	xor    al,0x9
  410751:	mov    dl,0x10
  410753:	sub    ch,BYTE PTR [esi+0x6e68e9c4]
  410759:	and    BYTE PTR [esi+ebp*2+0x31],ch
  41075d:	and    dh,bh
  41075f:	mov    cl,0xe0
  410761:	mov    edi,eax
  410763:	or     al,BYTE PTR [ebp+0x152c441e]
  410769:	inc    ebp
  41076a:	cli    
  41076b:	dec    ecx
  41076c:	sahf   
  41076d:	push   esi
  41076e:	vsubpd ymm4,ymm0,ymm0
  410772:	leave  
  410773:	pop    esp
  410774:	mov    dl,0xce
  410776:	repz cmp edx,DWORD PTR [esp+esi*4]
  41077a:	pushf  
  41077b:	loope  0x41074b
  41077d:	and    DWORD PTR gs:[edi+0x10],ecx
  410781:	jl     0x410724
  410783:	enter  0x23da,0x4d
  410787:	ins    DWORD PTR es:[edi],dx
  410788:	pop    ecx
  410789:	cmp    dl,bh
  41078b:	mov    ebx,0x9b36cbdf
  410790:	iret   
  410791:	sbb    eax,0xb0a4a5db
  410796:	xchg   esi,eax
  410797:	fist   WORD PTR [esi]
  410799:	or     eax,0x9a2933d4
  41079e:	out    dx,al
  41079f:	pop    es
  4107a0:	mov    DWORD PTR [edx],eax
  4107a2:	out    0x31,eax
  4107a4:	jmp    0x410792
  4107a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107a7:	js     0x410789
  4107a9:	mov    eax,0x4e16cb46
  4107ae:	ins    DWORD PTR es:[edi],dx
  4107af:	xor    esp,DWORD PTR [esi+eax*2+0x6]
  4107b3:	fiadd  WORD PTR [eax+0x2c]
  4107b6:	int3   
  4107b7:	out    dx,eax
  4107b8:	ret    
  4107b9:	jle    0x410827
  4107bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107bc:	xor    al,0xf2
  4107be:	add    DWORD PTR [edx-0x5f],esp
  4107c1:	retf   
  4107c2:	lea    edi,[edx+0x2332f96]
  4107c8:	call   DWORD PTR [ebx+0x3e6653cb]
  4107ce:	mov    dl,0x57
  4107d0:	sub    BYTE PTR [esi-0xb],bh
  4107d3:	cmp    al,0x97
  4107d5:	jno    0x410782
  4107d7:	(bad)  
  4107d8:	sbb    al,0xee
  4107da:	inc    edx
  4107db:	dec    esp
  4107dc:	arpl   WORD PTR [eax-0x7d],dx
  4107df:	mov    edx,0x3d0a4acc
  4107e4:	xchg   esi,eax
  4107e5:	push   esi
  4107e6:	jbe    0x410846
  4107e8:	sub    DWORD PTR [edx+ebp*4+0x7c],0xf10b3251
  4107f0:	cld    
  4107f1:	push   ds
  4107f2:	jl     0x410795
  4107f4:	arpl   WORD PTR [eax],di
  4107f6:	cld    
  4107f7:	sbb    eax,0x9345b36c
  4107fc:	fucomi st,st(0)
  4107fe:	adc    DWORD PTR [ebp-0x4db2cb0f],ebp
  410804:	sub    DWORD PTR ds:0xf16ee71d,edi
  41080a:	adc    ah,BYTE PTR [esi-0x7d]
  41080d:	bound  edx,QWORD PTR [edx+edi*1-0x353d4e15]
  410814:	(bad)  ds:0x63919d44
  41081a:	add    BYTE PTR [ecx+0x1199f49d],cl
  410820:	jno    0x4107da
  410822:	add    al,0x1b
  410824:	pop    ss
  410825:	ins    BYTE PTR es:[edi],dx
  410826:	sbb    esp,0xf5913088
  41082c:	enter  0xd7ee,0x10
  410830:	adc    al,0x13
  410832:	in     eax,0xd3
  410834:	cmc    
  410835:	js     0x4107f5
  410837:	cs nop
  410839:	test   eax,0xb1cfcf64
  41083e:	ret    0x8078
  410841:	adc    ah,ch
  410843:	cmc    
  410844:	les    ebx,FWORD PTR [ebp+0x1d]
  410847:	jne    0x410893
  410849:	test   BYTE PTR [esi-0x32],bl
  41084c:	and    dl,al
  41084e:	add    esp,DWORD PTR [ebp+edx*4+0x22]
  410852:	cmp    eax,ecx
  410854:	ins    DWORD PTR es:[edi],dx
  410855:	pop    edi
  410856:	outs   dx,BYTE PTR ds:[esi]
  410857:	cmp    ecx,DWORD PTR [edx]
  410859:	rol    DWORD PTR [eax-0x10de4599],cl
  41085f:	cmp    esp,DWORD PTR [ebx+eax*2]
  410862:	mov    al,ds:0xe961bd82
  410867:	dec    ebp
  410868:	xchg   bh,al
  41086a:	xor    al,0xe4
  41086c:	fisub  DWORD PTR [eax+0x35]
  41086f:	std    
  410870:	sar    esi,cl
  410872:	std    
  410873:	ss jl  0x410895
  410876:	push   eax
  410877:	test   BYTE PTR [esi+0x5899c3b2],cl
  41087d:	add    BYTE PTR [edx+ebp*1-0x33],ch
  410881:	adc    BYTE PTR [ebp+0x2021dc6c],cl
  410887:	je     0x4108ab
  410889:	mov    ebp,0xa59d93e8
  41088e:	mov    ch,0xba
  410890:	je     0x410857
  410892:	add    ah,BYTE PTR [edi]
  410894:	sub    DWORD PTR [ecx+edi*2-0x685a20e7],edi
  41089b:	jb     0x4108eb
  41089d:	dec    esi
  41089e:	ror    ah,1
  4108a0:	or     al,0xa4
  4108a2:	stos   DWORD PTR es:[edi],eax
  4108a3:	xor    al,0x9e
  4108a5:	dec    edx
  4108a6:	scas   eax,DWORD PTR es:[edi]
  4108a7:	sub    cl,BYTE PTR [ecx-0x2964843e]
  4108ad:	push   esi
  4108ae:	(bad)  
  4108af:	ins    DWORD PTR es:[edi],dx
  4108b0:	mov    ebp,0xad52746d
  4108b5:	rol    DWORD PTR [ebp-0x2f39e0a8],0xed
  4108bc:	pop    eax
  4108bd:	sbb    bl,dl
  4108bf:	(bad)  
  4108c1:	lock gs mov ah,0x36
  4108c5:	push   ss
  4108c6:	out    0x6d,eax
  4108c8:	fiadd  DWORD PTR ds:0x38442353
  4108ce:	mov    ah,0xbe
  4108d0:	scas   eax,DWORD PTR es:[edi]
  4108d1:	push   ebx
  4108d2:	fdivr  QWORD PTR [eax-0x5d]
  4108d5:	cmp    DWORD PTR [ecx-0x43dd7419],edi
  4108db:	scas   al,BYTE PTR es:[edi]
  4108dc:	mov    esp,0x3a19b457
  4108e1:	mov    esi,0x144b16f0
  4108e6:	rcr    ah,cl
  4108e8:	mov    dl,0x97
  4108ea:	pop    esp
  4108eb:	push   ecx
  4108ec:	arpl   WORD PTR es:[edx-0x76556b91],dx
  4108f3:	push   0xf
  4108f5:	mov    DWORD PTR [edx-0x14d13ce5],edi
  4108fb:	loopne 0x41089e
  4108fd:	fcom   DWORD PTR [eax+0x11]
  410900:	data16 jno 0x4108ed
  410903:	xchg   DWORD PTR [ecx],edx
  410905:	and    eax,0x17fff990
  41090a:	rcr    BYTE PTR [eax-0x9],1
  41090d:	push   ecx
  41090e:	jl     0x410971
  410910:	int3   
  410911:	push   ecx
  410912:	lahf   
  410913:	rol    bl,cl
  410915:	cmp    eax,edi
  410917:	fcmovnbe st,st(3)
  410919:	mov    eax,0xd9ae775
  41091e:	and    eax,0x5f0ffee0
  410923:	test   BYTE PTR [ecx+0x4a3a8350],dl
  410929:	dec    esp
  41092a:	pop    es
  41092b:	jbe    0x410937
  41092d:	push   ecx
  41092e:	dec    dh
  410930:	fstp   TBYTE PTR [esi]
  410932:	push   edi
  410933:	pop    eax
  410934:	addr16 inc ebp
  410936:	pop    ebx
  410937:	shl    edi,1
  410939:	repz (bad) 
  41093b:	adc    eax,0xbe05b252
  410940:	call   0xefd3:0x166c127f
  410947:	inc    esp
  410948:	mov    DWORD PTR ds:0xbbf55a0,esi
  41094e:	pop    edx
  41094f:	jecxz  0x410937
  410951:	jg     0x410946
  410953:	jno    0x4109b2
  410955:	pop    edx
  410956:	mov    edx,0x4d180b93
  41095b:	dec    ebp
  41095c:	sub    ah,dh
  41095e:	and    bl,BYTE PTR [esp+edx*2]
  410961:	mov    esi,0xe19503c1
  410966:	mov    ds:0xa6a19a14,eax
  41096b:	ret    0x475e
  41096e:	loopne 0x410992
  410970:	pop    ebx
  410971:	into   
  410972:	enter  0x4bcf,0x6f
  410976:	data16 jecxz 0x410931
  410979:	scas   eax,DWORD PTR es:[edi]
  41097a:	cwde   
  41097b:	call   0x9132bfff
  410980:	lea    ecx,[ecx]
  410982:	bound  ebp,QWORD PTR [esi]
  410984:	repz or eax,0x4a8b091d
  41098a:	xlat   BYTE PTR ds:[ebx]
  41098b:	ins    DWORD PTR es:[edi],dx
  41098c:	push   edi
  41098d:	lea    edx,[edi-0x46130318]
  410993:	inc    eax
  410994:	xchg   ebp,eax
  410995:	jbe    0x4109cf
  410997:	push   cs
  410998:	cld    
  410999:	icebp  
  41099a:	pop    ss
  41099b:	(bad)  
  41099c:	adc    BYTE PTR ds:0xbfee37b4,ah
  4109a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a3:	dec    ecx
  4109a4:	mov    dl,BYTE PTR [eax]
  4109a6:	cli    
  4109a7:	call   0x1d3bac06
  4109ac:	jmp    0x4109bb
  4109ae:	sbb    al,bl
  4109b0:	cmp    al,BYTE PTR [edi+0x45492b9f]
  4109b6:	rep stos BYTE PTR es:[edi],al
  4109b8:	sbb    DWORD PTR [ecx+0x7343a7f5],edx
  4109be:	adc    dh,BYTE PTR [esi+ecx*8-0x18be87d9]
  4109c5:	clc    
  4109c6:	retf   0x63f0
  4109c9:	push   esi
  4109ca:	ret    
  4109cb:	inc    eax
  4109cc:	adc    edi,esp
  4109ce:	stos   DWORD PTR es:[edi],eax
  4109cf:	sbb    ebp,DWORD PTR [ebp+0x50c0b66a]
  4109d5:	and    BYTE PTR [ecx+0x5e1e5610],cl
  4109db:	ret    0x46d5
  4109de:	jle    0x4109ae
  4109e0:	not    DWORD PTR [edx+0x53884f61]
  4109e6:	push   edi
  4109e7:	mov    al,ds:0x52561244
  4109ec:	push   edx
  4109ed:	fsubr  DWORD PTR [ecx]
  4109ef:	mov    ebp,0x5f195a67
  4109f4:	xchg   DWORD PTR [ebx+0x4c],esp
  4109f7:	nop
  4109f8:	dec    ecx
  4109f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109fa:	and    dh,bl
  4109fc:	mov    ds:0x7c48995c,eax
  410a01:	out    dx,al
  410a02:	sar    DWORD PTR [esi+0x4b5ffe7a],cl
  410a08:	mov    BYTE PTR [edi-0x547814b9],ch
  410a0e:	adc    bh,BYTE PTR [ebx+0x50]
  410a11:	and    ch,BYTE PTR [ebx-0x578a414b]
  410a17:	(bad)  [ebx+ecx*1]
  410a1a:	inc    eax
  410a1b:	ins    DWORD PTR es:[edi],dx
  410a1c:	add    BYTE PTR [edi-0x6034ec59],0xa1
  410a23:	test   eax,0x53408ddb
  410a28:	fwait
  410a29:	xor    edi,ecx
  410a2b:	mov    ch,0x1
  410a2d:	(bad)  
  410a2e:	push   cs
  410a2f:	fistp  DWORD PTR [edi-0x4]
  410a32:	dec    esp
  410a33:	cli    
  410a34:	std    
  410a35:	les    ecx,FWORD PTR [edx]
  410a37:	fmul   QWORD PTR [eax]
  410a39:	shl    DWORD PTR [eax+eax*4],cl
  410a3c:	add    eax,ebx
  410a3e:	add    eax,0x70ed542d
  410a43:	mov    dl,0x3e
  410a45:	add    al,0xc8
  410a47:	or     al,dl
  410a49:	inc    esp
  410a4a:	push   ebx
  410a4b:	mov    ds:0xc81eb415,eax
  410a50:	leave  
  410a51:	push   edx
  410a52:	jle    0x410a27
  410a54:	repnz loopne 0x410a24
  410a57:	fcmovne st,st(1)
  410a59:	out    0xcb,al
  410a5b:	dec    edi
  410a5c:	dec    esp
  410a5d:	scas   al,BYTE PTR es:[edi]
  410a5e:	xlat   BYTE PTR ds:[ebx]
  410a5f:	fdiv   QWORD PTR [edi+ecx*4+0x14]
  410a63:	xchg   ebx,eax
  410a64:	add    eax,0x60d1fcb1
  410a69:	aaa    
  410a6a:	jmp    0xdb3c523b
  410a6f:	jge    0x410a25
  410a71:	mov    dh,0x98
  410a73:	dec    eax
  410a74:	xchg   BYTE PTR [eax+0x21],dl
  410a77:	icebp  
  410a78:	pop    ss
  410a79:	std    
  410a7a:	stos   DWORD PTR es:[edi],eax
  410a7b:	jmp    0x3e9c7630
  410a80:	aas    
  410a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a82:	and    dl,BYTE PTR ds:0x361e838c
  410a88:	sbb    bl,BYTE PTR [esi-0x478d56b5]
  410a8e:	cmp    ebx,DWORD PTR ss:[ebx+eax*4+0x49bd8dee]
  410a96:	and    dh,BYTE PTR [ebp-0x2825a5dc]
  410a9c:	or     ebp,DWORD PTR [eax-0x59]
  410a9f:	gs mov eax,eax
  410aa2:	pop    ecx
  410aa3:	add    eax,0x62bb193d
  410aa8:	(bad)  
  410aa9:	js     0x410b22
  410aab:	xlat   BYTE PTR ds:[ebx]
  410aac:	inc    ebp
  410aad:	and    al,0x8c
  410aaf:	dec    ecx
  410ab0:	hlt    
  410ab1:	cmp    DWORD PTR [edi+0x515e0fd],ebp
  410ab7:	jae    0x410b15
  410ab9:	es jl  0x410af2
  410abc:	cmp    al,0x22
  410abe:	mov    eax,0xee95bcef
  410ac3:	pop    ebx
  410ac4:	in     eax,dx
  410ac5:	mov    edi,0xae031de
  410aca:	mov    BYTE PTR cs:[ecx-0x17],bl
  410ace:	call   0xfe9d:0x3d6bd8f6
  410ad5:	dec    eax
  410ad6:	sbb    eax,0x4bbb9920
  410adb:	mov    eax,ds:0xdf54e95c
  410ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ae1:	add    ebx,DWORD PTR [ebx]
  410ae3:	test   al,0xa
  410ae5:	mov    ecx,0x88fbb0f8
  410aea:	fwait
  410aeb:	or     bl,dl
  410aed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aee:	push   ebp
  410aef:	xchg   edi,eax
  410af0:	mov    cl,0x20
  410af2:	cdq    
  410af3:	sub    DWORD PTR [esi],esp
  410af5:	cs loope 0x410b43
  410af8:	inc    ebx
  410af9:	ficomp WORD PTR [esi]
  410afb:	loopne 0x410adf
  410afd:	pop    esp
  410afe:	repz mov ch,0xa4
  410b01:	sbb    bl,bl
  410b03:	pop    esp
  410b04:	xchg   esp,eax
  410b05:	(bad)  
  410b07:	xchg   ebx,eax
  410b08:	ds std 
  410b0a:	lods   al,BYTE PTR ds:[esi]
  410b0b:	imul   edi,DWORD PTR [edx+0x40904f97],0xffffffe1
  410b12:	jg     0x410b09
  410b14:	gs push cs
  410b16:	in     al,0xe6
  410b18:	cmp    al,0x5c
  410b1a:	xchg   ebp,eax
  410b1b:	cmp    ebp,esp
  410b1d:	bound  esi,QWORD PTR [esi]
  410b1f:	mov    edx,0xa3f1172
  410b24:	and    DWORD PTR [esi+0x64],ebx
  410b27:	arpl   WORD PTR [eax+0x2f],ax
  410b2a:	mov    dl,bl
  410b2c:	sbb    bh,dl
  410b2e:	push   0xc0548cfd
  410b33:	lock outs dx,BYTE PTR ds:[esi]
  410b35:	rcr    DWORD PTR [esi+ebp*2-0x4e5be43],0xf6
  410b3d:	retf   0xaab5
  410b40:	mov    edi,0xa67a0811
  410b45:	scas   eax,DWORD PTR es:[edi]
  410b46:	adc    BYTE PTR [edx+0x3bfd56ec],cl
  410b4c:	or     ecx,DWORD PTR [ecx]
  410b4e:	jne    0x410b61
  410b50:	das    
  410b51:	or     DWORD PTR [ebx],0x76
  410b54:	and    al,0x85
  410b56:	xlat   BYTE PTR ds:[ebx]
  410b57:	test   al,0x91
  410b59:	retf   
  410b5a:	fld    TBYTE PTR [esi-0x424f8e99]
  410b60:	dec    ebx
  410b61:	cli    
  410b62:	xchg   DWORD PTR [ecx-0x2e6e50a7],eax
  410b68:	and    eax,0x8f7a52ea
  410b6d:	mov    bl,0xa
  410b6f:	sub    al,0x86
  410b71:	push   eax
  410b72:	div    BYTE PTR [edi]
  410b74:	add    al,0x36
  410b76:	or     edi,DWORD PTR [ebx-0x1a9a8632]
  410b7c:	jo     0x410b46
  410b7e:	call   0x9a5d7f60
  410b83:	mov    al,ds:0xa126971a
  410b88:	std    
  410b89:	sbb    eax,0xfd070f01
  410b8e:	push   cs
  410b8f:	jge    0x410bcc
  410b91:	jle    0x410b89
  410b93:	sbb    bh,0xfc
  410b96:	cld    
  410b97:	retf   
  410b98:	xchg   ebp,eax
  410b99:	sub    eax,0x30e6cc65
  410b9e:	shr    edx,0x3b
  410ba1:	clc    
  410ba2:	pop    ebp
  410ba3:	popa   
  410ba4:	lds    ecx,FWORD PTR [eax+0x6e]
  410ba7:	push   cs
  410ba8:	mov    al,ds:0x9916c806
  410bad:	clc    
  410bae:	ret    0x11b3
  410bb1:	pusha  
  410bb2:	mov    esp,0x4d8d2dbb
  410bb7:	vpsllq xmm2,xmm2,XMMWORD PTR ds:0xcd48b236
  410bbf:	sbb    al,0xdd
  410bc1:	and    eax,0xd4b4c1de
  410bc6:	push   esi
  410bc7:	test   BYTE PTR [ebp-0x5c],ah
  410bca:	mov    esi,0xf87d17db
  410bcf:	leave  
  410bd0:	sbb    esp,DWORD PTR [ebp+0x71]
  410bd3:	pushf  
  410bd4:	add    edx,DWORD PTR [esi+edx*1+0xc0dd888]
  410bdb:	(bad)  [ebp+0x60]
  410bde:	xchg   ebx,eax
  410bdf:	sbb    BYTE PTR [edi-0x6e],ah
  410be2:	loope  0x410be3
  410be4:	imul   ebp,DWORD PTR [edi-0x7d],0xffffffa3
  410be8:	sbb    eax,DWORD PTR [ecx]
  410bea:	mov    ah,0x98
  410bec:	fldcw  WORD PTR [ebp-0x28]
  410bef:	fucomip st,st(3)
  410bf1:	jl     0x410c54
  410bf3:	js     0x410bb5
  410bf5:	adc    eax,esp
  410bf7:	push   ebx
  410bf8:	sub    bh,BYTE PTR [ebx-0x21]
  410bfb:	mov    ?,WORD PTR [esi-0x3eb5be8]
  410c01:	mov    ds:0x9e5de9d6,al
  410c06:	addr16 cmc 
  410c08:	push   ss
  410c09:	jge    0x410c06
  410c0b:	xchg   DWORD PTR [ecx+edi*8-0x6510fba3],esp
  410c12:	mov    ecx,0xbe557d0
  410c17:	repnz cmp DWORD PTR [edx],ecx
  410c1a:	dec    edx
  410c1b:	ror    BYTE PTR [ebp+0x59],cl
  410c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c1f:	or     DWORD PTR [edx],ebp
  410c21:	je     0x410c3d
  410c23:	(bad)  
  410c24:	call   0xd7b5:0xc802b810
  410c2b:	mov    ds:0x22d9fe04,al
  410c30:	mov    ds:0x56605204,eax
  410c35:	or     al,0x1c
  410c37:	adc    BYTE PTR [ecx+0x6ecfc1e4],0xb0
  410c3e:	pop    ebp
  410c3f:	mov    al,ds:0x5d2c8226
  410c44:	gs stos BYTE PTR es:[edi],al
  410c46:	iret   
  410c47:	add    al,0x5b
  410c49:	das    
  410c4a:	ins    BYTE PTR es:[edi],dx
  410c4b:	repz loope 0x410cc4
  410c4e:	ffree  st(3)
  410c50:	in     al,0xf5
  410c52:	mov    esi,0xa4a6a67d
  410c57:	push   cs
  410c58:	and    al,0x2b
  410c5a:	xchg   edi,ecx
  410c5c:	and    DWORD PTR [ecx],esi
  410c5e:	lds    edx,FWORD PTR [eax-0x31]
  410c61:	xchg   edx,eax
  410c62:	rol    al,0x4c
  410c65:	mov    esp,DWORD PTR [edx-0x25]
  410c68:	into   
  410c69:	add    ah,BYTE PTR [edi+ecx*1]
  410c6c:	daa    
  410c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c6e:	int    0x20
  410c70:	test   BYTE PTR [ecx+0x41],al
  410c73:	push   ecx
  410c74:	cmp    eax,0x9e859863
  410c79:	inc    esi
  410c7a:	ret    0xc00
  410c7d:	add    ebx,DWORD PTR [eax]
  410c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c80:	mov    dl,0x1b
  410c82:	or     eax,0xb0620b16
  410c87:	std    
  410c88:	loope  0x410c51
  410c8a:	or     al,0x3d
  410c8c:	test   cl,cl
  410c8e:	int    0xed
  410c90:	push   ebp
  410c91:	lds    edx,FWORD PTR [edx-0x39]
  410c94:	(bad)  
  410c95:	xchg   edi,eax
  410c96:	mov    ?,edi
  410c98:	xlat   BYTE PTR ds:[ebx]
  410c99:	ficom  WORD PTR [edx-0x740f6e43]
  410c9f:	aaa    
  410ca0:	into   
  410ca1:	fsubp  st(5),st
  410ca3:	mov    edi,0xf49520f
  410ca8:	xor    al,0x89
  410caa:	push   ecx
  410cab:	scas   eax,DWORD PTR es:[edi]
  410cac:	cmp    ecx,DWORD PTR ds:0xc2bebcdb
  410cb2:	(bad)
  410cb5:	jo     0x410c5c
  410cb7:	push   ecx
  410cb8:	sbb    eax,0xaf2c8fca
  410cbd:	and    esp,DWORD PTR [ebx]
  410cbf:	retf   
  410cc0:	add    eax,0x9110cb2c
  410cc5:	in     eax,dx
  410cc6:	xor    ch,ch
  410cc8:	pop    ecx
  410cc9:	cdq    
  410cca:	and    eax,0xb6b458f1
  410ccf:	mov    DWORD PTR [ebx-0x5a60640b],ecx
  410cd5:	mov    ebp,0xfbe6a6b3
  410cda:	jg     0x410cc5
  410cdc:	xchg   edx,eax
  410cdd:	add    BYTE PTR [ebp-0x41],bh
  410ce0:	cs popf 
  410ce2:	add    al,0x70
  410ce4:	sqrtps xmm5,XMMWORD PTR [esi*2+0x78735cc]
  410cec:	mov    eax,ds:0x2a706061
  410cf1:	mov    DWORD PTR [ecx],eax
  410cf3:	add    eax,eax
  410cf5:	clc    
  410cf6:	sbb    eax,0x714329a
  410cfb:	out    dx,al
  410cfc:	sub    eax,0x80ba3702
  410d01:	addr16 addr16 pop edx
  410d04:	cmp    edx,DWORD PTR [edx]
  410d06:	in     al,0xa0
  410d08:	mov    al,0x9f
  410d0a:	xor    DWORD PTR [ebp-0x2cfdb07e],ebp
  410d10:	ret    
  410d11:	cwde   
  410d12:	rol    BYTE PTR [ebp-0x2d],1
  410d15:	lock sub BYTE PTR [esp+esi*8],bl
  410d19:	inc    edi
  410d1a:	mov    ah,0x3a
  410d1c:	sub    edi,DWORD PTR [edx]
  410d1e:	fistp  QWORD PTR [edx-0x64cf07d7]
  410d24:	les    edx,FWORD PTR [ebx]
  410d26:	push   es
  410d27:	jle    0x410d50
  410d29:	retf   0x1e3b
  410d2c:	popf   
  410d2d:	mov    bh,0x23
  410d2f:	lahf   
  410d30:	stos   DWORD PTR es:[edi],eax
  410d31:	pop    ecx
  410d32:	ja     0x410d8e
  410d34:	jbe    0x410cfc
  410d36:	mov    eax,0x7cee5c6e
  410d3b:	cmp    DWORD PTR [ebx],esi
  410d3d:	xchg   bh,al
  410d3f:	sbb    BYTE PTR [edx+0x9224c1c],cl
  410d45:	mov    ds:0xb85e0f10,ax
  410d4b:	(bad)  
  410d4c:	dec    edi
  410d4d:	iret   
  410d4e:	bound  eax,QWORD PTR [esi+edi*1+0x4351d646]
  410d55:	dec    edi
  410d56:	mov    edx,0xcc37e4c1
  410d5b:	pop    ebx
  410d5c:	or     eax,0x286101f
  410d61:	(bad)  [ebp-0x7e39ceaf]
  410d67:	outs   dx,BYTE PTR ds:[esi]
  410d68:	sti    
  410d69:	or     BYTE PTR [esp+ebp*8-0x6b0c664b],ch
  410d70:	mov    ah,0xd3
  410d72:	in     eax,dx
  410d73:	dec    esi
  410d74:	ret    
  410d75:	xchg   ecx,eax
  410d76:	mov    esp,0xa2a6faa5
  410d7b:	cdq    
  410d7c:	js     0x410d4c
  410d7e:	cli    
  410d7f:	dec    edx
  410d80:	pop    es
  410d81:	pop    ss
  410d82:	add    DWORD PTR [ebp+0x11],ecx
  410d85:	bound  edx,QWORD PTR [ebx-0x4c]
  410d88:	pop    es
  410d89:	cmp    eax,0xfc45ddca
  410d8e:	mov    ebx,0xcaed7b62
  410d93:	icebp  
  410d94:	popa   
  410d95:	xor    eax,0xcf27f004
  410d9a:	inc    esp
  410d9b:	stc    
  410d9c:	pop    ebp
  410d9d:	mov    ds:0x458502b7,eax
  410da2:	jb     0x410db6
  410da4:	rcl    BYTE PTR [ebp+0x18],1
  410da7:	aas    
  410da8:	data16 test al,0xc2
  410dab:	cmp    BYTE PTR [eax-0x7c],bh
  410dae:	frstor [esi+0x3d]
  410db1:	pop    es
  410db2:	jle    0x410d7b
  410db4:	add    ch,BYTE PTR [ebx+0x3328bf6]
  410dba:	outs   dx,BYTE PTR ds:[esi]
  410dbb:	mov    esp,0x26abe0d0
  410dc0:	inc    ebp
  410dc1:	pop    si
  410dc3:	popf   
  410dc4:	jns    0x410d98
  410dc6:	popf   
  410dc7:	jge    0x410e39
  410dc9:	cld    
  410dca:	rcr    BYTE PTR [edi+edi*4+0x785fad6c],1
  410dd1:	mov    bl,0x1c
  410dd3:	shl    DWORD PTR [eax-0x25],1
  410dd6:	xchg   ebp,eax
  410dd7:	fst    DWORD PTR [esi+0x73435d73]
  410dde:	mov    edx,ds
  410de0:	out    0x13,al
  410de2:	sbb    dl,BYTE PTR [ebp+0x386ad4cf]
  410de8:	(bad)  
  410de9:	fwait
  410dea:	sbb    eax,0x1e2b687
  410def:	test   al,0xb1
  410df1:	jge    0x410de3
  410df3:	xchg   DWORD PTR ds:0xdd3f9a68,ebx
  410df9:	aad    0x67
  410dfb:	aaa    
  410dfc:	idiv   dl
  410dfe:	mov    al,ds:0x99629160
  410e03:	cdq    
  410e04:	in     al,dx
  410e05:	fs inc esi
  410e07:	retf   0x49ff
  410e0a:	outs   dx,DWORD PTR ds:[esi]
  410e0b:	sbb    eax,0xd05ab68c
  410e10:	push   ecx
  410e11:	int    0xd4
  410e13:	adc    DWORD PTR [esi-0x7ef06c38],ecx
  410e19:	jecxz  0x410e11
  410e1b:	cmp    DWORD PTR [eax+0x34],edx
  410e1e:	cmp    dh,BYTE PTR [ecx-0x4989e239]
  410e24:	loope  0x410e02
  410e26:	fild   DWORD PTR [eax]
  410e28:	xchg   ebx,eax
  410e29:	pop    ebx
  410e2a:	push   edi
  410e2b:	add    eax,0xf87fc0b3
  410e30:	stos   BYTE PTR es:[edi],al
  410e31:	dec    esp
  410e32:	cs jnp 0x410e48
  410e35:	retf   
  410e36:	fldenv [ecx-0x3d]
  410e39:	xor    ah,BYTE PTR [edx]
  410e3b:	pusha  
  410e3c:	push   ecx
  410e3d:	mov    ds:0xc9678d8a,al
  410e42:	loop   0x410e94
  410e44:	(bad)  [edx+ebp*8]
  410e47:	xchg   ebx,eax
  410e48:	fucomip st,st(7)
  410e4a:	lahf   
  410e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4c:	out    0xdb,al
  410e4e:	shl    BYTE PTR [eax-0x15],0x60
  410e52:	jno    0x410e8a
  410e54:	mov    DWORD PTR [ecx],ebx
  410e56:	add    eax,0xd09acdaf
  410e5b:	push   esp
  410e5c:	lds    esi,FWORD PTR [ebx]
  410e5e:	dec    esp
  410e5f:	sbb    ch,BYTE PTR [edx-0x44]
  410e62:	or     edx,ecx
  410e64:	mov    esp,0x953e5009
  410e69:	push   cs
  410e6a:	(bad)  
  410e6b:	(bad)  
  410e6c:	imul   edx,DWORD PTR [edi-0x69fb6edc],0x644ff042
  410e76:	arpl   WORD PTR [edx-0x47b7eb21],di
  410e7c:	xchg   esp,eax
  410e7d:	cli    
  410e7e:	retf   0xd010
  410e81:	mov    ebp,0x6f004719
  410e86:	adc    edx,DWORD PTR ds:0x1a905c55
  410e8c:	popf   
  410e8d:	or     ecx,DWORD PTR [esi+ecx*2-0x306c6aa5]
  410e94:	(bad)  
  410e95:	int    0x7c
  410e97:	frstor [edi+0x13]
  410e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e9b:	ins    DWORD PTR es:[edi],dx
  410e9c:	mov    edx,DWORD PTR [edi+0xbd91fb6]
  410ea2:	scas   al,BYTE PTR es:[edi]
  410ea3:	add    esp,eax
  410ea5:	sub    BYTE PTR [esi+edi*2+0x45],al
  410ea9:	sub    BYTE PTR [esi],bh
  410eab:	xchg   BYTE PTR [ebp-0xd],al
  410eae:	xor    al,0x64
  410eb0:	imul   eax,DWORD PTR [ebx+ebp*1-0xf],0x1a0bc2ed
  410eb8:	sub    DWORD PTR [eiz*1-0x646657f7],0x18
  410ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec1:	in     eax,0x90
  410ec3:	mov    ds,WORD PTR [edx]
  410ec5:	push   edi
  410ec6:	push   esp
  410ec7:	mov    ecx,0x79c16101
  410ecc:	lods   al,BYTE PTR ds:[esi]
  410ecd:	and    eax,0x7d7a1ef
  410ed2:	lds    eax,FWORD PTR [ebx+0x77]
  410ed5:	push   cs
  410ed6:	add    al,0x59
  410ed8:	cmp    BYTE PTR [ebx-0x18],0x9b
  410edc:	(bad)  
  410edd:	push   0x4fdf4a1d
  410ee2:	sub    cl,dh
  410ee4:	rep outs dx,BYTE PTR ds:[esi]
  410ee6:	dec    esi
  410ee7:	sub    al,0xd9
  410ee9:	sub    al,0x43
  410eeb:	jo     0x410eb4
  410eed:	(bad)  
  410eee:	pushf  
  410eef:	jnp    0x410f6c
  410ef1:	mov    al,ds:0x33c498b6
  410ef6:	push   es
  410ef7:	gs dec edi
  410ef9:	pop    edi
  410efa:	mov    esi,0x3eb48c68
  410eff:	pop    ebp
  410f00:	sub    edx,DWORD PTR [edx+0x22285dc5]
  410f06:	cmp    esp,DWORD PTR [ebx]
  410f08:	mov    DWORD PTR [ebx+0x4f],0x48a09491
  410f0f:	frstor [ebp-0x4e]
  410f12:	mov    ah,BYTE PTR [esi+ecx*4+0x69]
  410f16:	pop    esi
  410f17:	clc    
  410f18:	cmp    DWORD PTR [ecx-0x47],esi
  410f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f1c:	adc    bh,BYTE PTR [eax+0x5c1250e4]
  410f22:	cli    
  410f23:	and    BYTE PTR [edx+0x64],cl
  410f26:	into   
  410f27:	dec    ecx
  410f28:	cld    
  410f29:	pop    edx
  410f2a:	and    al,0x37
  410f2c:	imul   eax
  410f2e:	push   edi
  410f2f:	jns    0x410fac
  410f31:	lahf   
  410f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f33:	inc    ebx
  410f34:	pop    ds
  410f35:	stos   BYTE PTR es:[edi],al
  410f36:	xchg   esi,edx
  410f38:	lock inc eax
  410f3a:	push   ds
  410f3b:	pusha  
  410f3c:	dec    esi
  410f3d:	jmp    0x13ca1302
  410f42:	push   eax
  410f43:	xlat   BYTE PTR ds:[ebx]
  410f44:	dec    esi
  410f45:	outs   dx,DWORD PTR ds:[esi]
  410f46:	fs jecxz 0x410fc0
  410f49:	lea    esp,[eax]
  410f4b:	jle    0x410efb
  410f4d:	call   0xd8a0:0x899656b1
  410f54:	mov    esi,0xe7dbb2d3
  410f59:	mov    eax,ds:0x186cdb68
  410f5e:	popf   
  410f5f:	mov    bl,0x43
  410f61:	mov    eax,0xf7b305a6
  410f66:	xor    esi,esp
  410f68:	jb     0x410fb7
  410f6a:	ret    
  410f6b:	imul   edx,ecx,0x1d
  410f6e:	mul    BYTE PTR [ebx]
  410f70:	into   
  410f71:	mov    esp,0x2e55295e
  410f76:	fcomp  QWORD PTR [eax-0xa8b1a76]
  410f7c:	mov    edx,0x5a8dd6a8
  410f81:	lods   al,BYTE PTR ds:[esi]
  410f82:	or     eax,0x602d7da3
  410f87:	es lahf 
  410f89:	dec    ebp
  410f8a:	imul   eax,DWORD PTR [edx],0xff2c8b67
  410f90:	mov    ds:0xb6b2fde5,al
  410f95:	mov    esi,0x72636438
  410f9a:	lods   eax,DWORD PTR ds:[esi]
  410f9b:	rsqrtps xmm3,XMMWORD PTR [esi-0x5be74bb8]
  410fa2:	js     0x410f54
  410fa4:	sub    dh,BYTE PTR [ebp+ebp*8+0x2c]
  410fa8:	jne    0x410f61
  410faa:	cdq    
  410fab:	mov    cl,0x2b
  410fad:	mov    BYTE PTR [edx+0x3a],ch
  410fb0:	adc    eax,0x42cdcff3
  410fb5:	cmp    bh,cl
  410fb7:	add    eax,DWORD PTR [ecx+0x709609e9]
  410fbd:	cmp    al,0x69
  410fbf:	ins    BYTE PTR es:[edi],dx
  410fc0:	sar    BYTE PTR [esi],1
  410fc2:	dec    ecx
  410fc3:	or     DWORD PTR [esi+0x4ab838ec],edx
  410fc9:	ins    BYTE PTR es:[edi],dx
  410fca:	xchg   ebp,eax
  410fcb:	data16 rcr dl,cl
  410fce:	jno    0x410fa1
  410fd0:	jmp    0xe8f4e68f
  410fd5:	js     0x410ffe
  410fd7:	imul   BYTE PTR [ebx]
  410fd9:	(bad)
  410fdc:	mov    esi,0xfd24ac62
  410fe1:	mov    edi,0x3ef58c67
  410fe6:	mov    DWORD PTR ds:0x3c5c7676,esi
  410fec:	and    eax,0x1785e88a
  410ff1:	xchg   edi,eax
  410ff2:	mov    ecx,0xfa377831
  410ff7:	and    ah,BYTE PTR [ecx-0x1c]
  410ffa:	mov    ebp,0xd82e4470
  410fff:	(bad)  
  411000:	mov    ebp,0x7d9e89e7
  411005:	xor    al,0x71
  411007:	pop    esp
  411008:	pop    esp
  411009:	pop    ecx
  41100a:	inc    ecx
  41100b:	mov    ebp,DWORD PTR [edx+0x78]
  41100e:	push   eax
  41100f:	je     0x410fe5
  411011:	int3   
  411012:	dec    ecx
  411013:	lods   al,BYTE PTR ds:[esi]
  411014:	sub    bl,bl
  411016:	cli    
  411017:	stos   DWORD PTR es:[edi],eax
  411018:	in     eax,dx
  411019:	call   0xd787d995
  41101e:	xor    DWORD PTR [esi],0x4578f005
  411024:	jbe    0x410fd7
  411026:	in     al,dx
  411027:	aad    0x1
  411029:	das    
  41102a:	adc    esi,esp
  41102c:	jae    0x411071
  41102e:	xchg   ebp,eax
  41102f:	cs mov dh,0x8f
  411032:	ins    BYTE PTR es:[edi],dx
  411033:	xchg   DWORD PTR [esi+0x21],ebp
  411036:	add    eax,0x25ea92ab
  41103b:	cmp    eax,0xf26026a
  411040:	inc    ecx
  411041:	cmp    eax,0x908dc707
  411046:	lods   al,BYTE PTR ds:[esi]
  411047:	xor    dh,ah
  411049:	pop    ebx
  41104a:	pop    esi
  41104b:	pushf  
  41104c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104d:	(bad)  
  41104f:	pop    edi
  411050:	inc    ebp
  411051:	sub    ebx,DWORD PTR [ebp+0x9c4f72d]
  411057:	daa    
  411058:	aas    
  411059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41105a:	sar    DWORD PTR [edx+0x6743763e],0x71
  411061:	or     al,0x72
  411063:	or     DWORD PTR [edx],ebp
  411065:	shl    dh,1
  411067:	or     bl,ch
  411069:	dec    ebp
  41106a:	loopne 0x4110dd
  41106c:	sbb    DWORD PTR [edx+0x76],esi
  41106f:	aam    0xc6
  411071:	jl     0x41105a
  411073:	fdiv   DWORD PTR ds:0x663ea9ff
  411079:	and    eax,0x3aae1613
  41107e:	sbb    al,0x1
  411080:	jg     0x411040
  411082:	dec    ebx
  411083:	mov    ch,0xad
  411085:	jb     0x41100e
  411087:	shrd   eax,edi,cl
  41108a:	dec    esi
  41108b:	and    al,ah
  41108d:	xor    cl,BYTE PTR [ebx+eax*2]
  411090:	inc    edi
  411091:	mov    cl,0x28
  411093:	(bad)
  411096:	cmp    edi,edi
  411098:	loopne 0x41104c
  41109a:	stos   BYTE PTR es:[edi],al
  41109b:	pop    ebp
  41109d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109e:	push   0xfd30a79c
  4110a3:	add    ah,cl
  4110a5:	pop    edx
  4110a6:	mov    edi,0x9a7dcabe
  4110ab:	xchg   DWORD PTR [esp+eax*8],esi
  4110ae:	inc    esp
  4110af:	lods   eax,DWORD PTR ds:[esi]
  4110b0:	cli    
  4110b1:	jg     0x411129
  4110b3:	iret   
  4110b4:	jecxz  0x4110e5
  4110b6:	ds popf 
  4110b8:	xchg   ebx,eax
  4110b9:	dec    edi
  4110ba:	icebp  
  4110bb:	lock jge 0x411137
  4110be:	mov    ds:0x23c53b22,al
  4110c3:	jg     0x4110a8
  4110c5:	adc    eax,0xb68edfe
  4110ca:	pop    ebp
  4110cb:	dec    ebp
  4110cc:	push   0x8510fef2
  4110d1:	cmp    ah,ch
  4110d3:	rol    BYTE PTR [edx+0x36],cl
  4110d6:	fwait
  4110d7:	repz in eax,dx
  4110d9:	mov    ah,0x6
  4110db:	popa   
  4110dc:	pop    ecx
  4110dd:	or     DWORD PTR [ecx-0x7f],edx
  4110e0:	mov    ch,0xeb
  4110e2:	repz pop ds
  4110e4:	adc    DWORD PTR [esp+0x4ae63150],ebp
  4110eb:	test   esi,edx
  4110ed:	in     eax,0x47
  4110ef:	xchg   BYTE PTR [ecx+eax*1],bl
  4110f2:	jne    0x411172
  4110f4:	jno    0x41109f
  4110f6:	nop
  4110f7:	mov    es,WORD PTR [ecx-0x55]
  4110fa:	aad    0x1
  4110fc:	pop    esi
  4110fd:	and    BYTE PTR [ecx+0x46e7a53a],dh
  411103:	add    edx,ebx
  411105:	xor    al,0xb9
  411107:	int3   
  411108:	in     al,dx
  411109:	add    eax,ebp
  41110b:	or     ebp,DWORD PTR [esi]
  41110d:	xchg   esp,eax
  41110e:	gs push edx
  411110:	stos   DWORD PTR es:[edi],eax
  411111:	retf   0xb608
  411114:	fwait
  411115:	je     0x4110e1
  411117:	ins    DWORD PTR es:[edi],dx
  411118:	mov    eax,0xccff9e53
  41111d:	xor    DWORD PTR [ebx],edi
  41111f:	sti    
  411120:	repnz stos DWORD PTR es:[edi],eax
  411122:	push   ebp
  411123:	jb     0x41115a
  411125:	out    dx,al
  411126:	call   DWORD PTR [ecx+edx*4-0x6f8a1d6a]
  41112d:	or     al,0x83
  41112f:	scas   al,BYTE PTR es:[edi]
  411130:	pop    ebp
  411131:	jp     0x4111a2
  411133:	test   BYTE PTR [eax],0xef
  411136:	add    DWORD PTR [ecx],esi
  411138:	mov    ds:0xf32cabbd,eax
  41113d:	mov    al,0x85
  41113f:	gs jbe 0x4110e7
  411142:	dec    esi
  411143:	ret    0xa933
  411146:	aaa    
  411147:	int    0x3e
  411149:	std    
  41114a:	imul   esp,DWORD PTR [esp+edx*1-0x53],0x95082bf5
  411152:	push   esi
  411153:	push   0x7f
  411155:	into   
  411156:	jae    0x41117c
  411158:	lahf   
  411159:	repnz inc edx
  41115b:	(bad)  
  41115c:	adc    dl,ch
  41115e:	int3   
  41115f:	popa   
  411160:	pop    ebp
  411161:	sub    bl,bh
  411163:	push   es
  411164:	mov    bh,al
  411166:	and    dl,BYTE PTR [ebx-0x6b]
  411169:	jge    0x4110ee
  41116b:	mov    DWORD PTR cs:[ebx+esi*4],ebp
  41116f:	aas    
  411170:	and    eax,0xe2b28624
  411175:	pop    esi
  411176:	cmp    esi,DWORD PTR [ebp-0x22]
  411179:	lahf   
  41117a:	in     eax,dx
  41117b:	outs   dx,BYTE PTR ds:[esi]
  41117c:	jle    0x4111c0
  41117e:	mov    es,WORD PTR cs:[ecx-0x4f]
  411182:	hlt    
  411183:	hlt    
  411184:	cmp    eax,0x9550bfc0
  411189:	fstp   st(4)
  41118b:	gs jle 0x41116e
  41118e:	je     0x41115e
  411190:	sahf   
  411191:	aas    
  411192:	nop
  411193:	stc    
  411194:	add    al,0x33
  411196:	div    ebx
  411198:	clc    
  411199:	mov    dl,0x20
  41119b:	das    
  41119c:	leave  
  41119d:	dec    ecx
  41119e:	inc    ebx
  41119f:	loopne 0x411157
  4111a1:	scas   eax,DWORD PTR es:[edi]
  4111a2:	ret    0x4821
  4111a5:	adc    al,0xdf
  4111a7:	and    DWORD PTR [esi-0x54d48bc3],ebx
  4111ad:	ds push ebp
  4111af:	push   ds
  4111b0:	mov    ah,0x2
  4111b2:	add    al,0x27
  4111b4:	retf   0xfa1
  4111b7:	jmp    DWORD PTR [esi-0x2e7625f3]
  4111bd:	lods   eax,DWORD PTR ds:[esi]
  4111be:	pop    eax
  4111bf:	and    BYTE PTR [ecx],0xdb
  4111c2:	and    al,0x6b
  4111c4:	cs in  al,dx
  4111c6:	and    BYTE PTR [esi],bl
  4111c8:	or     eax,0x14c37dc
  4111cd:	test   BYTE PTR [edx+0x62],cl
  4111d0:	out    dx,eax
  4111d1:	adc    bh,ah
  4111d3:	dec    esi
  4111d4:	sar    BYTE PTR [esi],1
  4111d6:	mov    ah,0xd4
  4111d8:	inc    eax
  4111d9:	daa    
  4111da:	mov    ds:0x32f50bc3,eax
  4111df:	xor    eax,0x9750a94b
  4111e4:	sub    BYTE PTR [ebp+eax*2-0x4eb9905b],0xdc
  4111ec:	ins    DWORD PTR es:[edi],dx
  4111ed:	push   esi
  4111ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111ef:	sub    DWORD PTR [edx],esp
  4111f1:	pminub mm6,mm4
  4111f4:	mov    eax,DWORD PTR [ebp-0x73]
  4111f7:	hlt    
  4111f8:	xchg   edi,eax
  4111f9:	imul   ebp,DWORD PTR [ecx-0x17975208],0x2
  411200:	jno    0x41125c
  411202:	sbb    eax,0x99464251
  411207:	mov    esi,0xbab11cdf
  41120c:	jp     0x41120b
  41120e:	pop    esi
  41120f:	adc    dl,BYTE PTR [ebp+0x27]
  411212:	xchg   esp,eax
  411213:	scas   al,BYTE PTR es:[edi]
  411214:	adc    ah,al
  411216:	xchg   ebx,eax
  411217:	test   eax,0xf34d9789
  41121c:	nop
  41121d:	mov    eax,ds:0xce15ff3c
  411222:	fstp   st(2)
  411224:	dec    ebp
  411225:	adc    al,0x35
  411227:	aas    
  411228:	add    BYTE PTR [ecx+eax*1-0x4a7ac512],cl
  41122f:	mov    ebx,0xd60742b4
  411234:	cmp    eax,0x6c9b6e0
  411239:	aam    0x5c
  41123b:	add    esp,esi
  41123d:	ret    0xf4ae
  411240:	cmp    eax,0xad6a748f
  411245:	jns    0x41126c
  411247:	jmp    0x41128b
  411249:	and    BYTE PTR [edi+0x18],al
  41124c:	xchg   ecx,eax
  41124d:	enter  0x699b,0xce
  411251:	bound  ebx,QWORD PTR [esi-0x80]
  411254:	leave  
  411255:	pushf  
  411256:	leave  
  411257:	icebp  
  411258:	div    DWORD PTR [esi-0x1f22c75b]
  41125e:	cld    
  41125f:	xchg   ebp,eax
  411260:	les    eax,FWORD PTR [edi-0x7f]
  411263:	adc    DWORD PTR [edx-0x5a],edx
  411266:	jb     0x411247
  411268:	imul   ebp,DWORD PTR [eax+ecx*2-0x36236b44],0x1f
  411270:	les    edx,FWORD PTR [esi-0x23]
  411273:	xchg   esi,eax
  411274:	in     eax,dx
  411275:	loope  0x41121b
  411277:	bound  ebp,QWORD PTR [esp+ebp*4]
  41127a:	hlt    
  41127b:	mov    DWORD PTR [ebp-0x73],esi
  41127e:	push   eax
  41127f:	adc    BYTE PTR [ebx-0x41c7a800],bh
  411285:	repnz xchg edi,eax
  411287:	retf   0x4519
  41128a:	sbb    al,BYTE PTR [ebp-0x39]
  41128d:	mov    edi,0xd8082c11
  411292:	jmp    0x41130f
  411294:	sbb    cl,BYTE PTR ds:[ebx]
  411297:	and    DWORD PTR [esi-0x2b],edx
  41129a:	push   ebp
  41129b:	and    ah,BYTE PTR [edx+ecx*1]
  41129e:	mov    bh,0xb9
  4112a0:	sub    ebp,edi
  4112a2:	adc    eax,DWORD PTR [esi+0x39332803]
  4112a8:	stos   BYTE PTR es:[edi],al
  4112a9:	shl    DWORD PTR [ebx+0x3733681c],1
  4112af:	push   es
  4112b0:	adc    eax,0x6c4f8430
  4112b5:	push   edx
  4112b6:	pop    es
  4112b7:	jae    0x4112bd
  4112b9:	xor    edi,DWORD PTR [edi+0x69ab84b0]
  4112bf:	lahf   
  4112c0:	adc    DWORD PTR [ecx+0x56],0xff4d4c23
  4112c7:	or     bl,BYTE PTR [esi+0xf]
  4112ca:	(bad)  
  4112cb:	jg     0x4112fd
  4112cd:	loope  0x4112ff
  4112cf:	push   cs
  4112d0:	rol    ebx,1
  4112d2:	gs (bad) 
  4112d6:	nop
  4112d7:	outs   dx,DWORD PTR ds:[esi]
  4112d8:	mov    ch,0xd6
  4112da:	lock mov al,ds:0xdc09e4c3
  4112e0:	mov    BYTE PTR [ebp-0x77b08163],dl
  4112e6:	cwde   
  4112e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e8:	jns    0x4112d8
  4112ea:	mov    fs,WORD PTR [ebx+0x8f684fc]
  4112f0:	(bad)  
  4112f2:	inc    ebx
  4112f3:	invd   
  4112f5:	push   0xd7b9cb5b
  4112fa:	pop    edi
  4112fb:	stos   DWORD PTR es:[edi],eax
  4112fc:	cld    
  4112fd:	hlt    
  4112fe:	addr16 dec esi
  411300:	fild   QWORD PTR [esi+0x16]
  411303:	mov    ebx,0x762fbb45
  411308:	inc    edi
  411309:	jmp    0x50bb:0xff5c7cd4
  411310:	jbe    0x411324
  411312:	fnsave [ecx]
  411314:	sub    eax,esp
  411316:	ror    DWORD PTR [esi-0x45],cl
  411319:	sub    eax,0xb1890754
  41131e:	inc    DWORD PTR [ebx-0x3f]
  411321:	mov    ebp,0x5e944f75
  411326:	or     bh,cl
  411328:	ret    0x69b8
  41132b:	clc    
  41132c:	dec    ecx
  41132d:	fsubr  st,st(6)
  41132f:	test   bl,bh
  411331:	clc    
  411332:	imul   esi,ecx,0x35
  411335:	xchg   ebx,eax
  411336:	imul   edx,DWORD PTR [eax+0x3f5b4326],0xd7a4c77f
  411340:	pop    ds
  411341:	add    BYTE PTR ds:[ecx],0x13
  411345:	lods   al,BYTE PTR ds:[esi]
  411346:	xlat   BYTE PTR ds:[ebx]
  411347:	sar    BYTE PTR [edi],0xc4
  41134a:	mov    eax,ds:0x48a2f2ed
  41134f:	std    
  411350:	sbb    al,0x14
  411352:	add    al,0xbd
  411354:	mov    eax,0xb59ff371
  411359:	in     al,0x1f
  41135b:	repnz in al,dx
  41135d:	push   es
  41135e:	les    esp,FWORD PTR [edi+eiz*2-0x59]
  411362:	sub    dh,bh
  411364:	cmc    
  411365:	fadd   st(1),st
  411367:	xor    cl,BYTE PTR [edi-0x72]
  41136a:	sbb    dl,BYTE PTR [ecx+0x18]
  41136d:	frstor [ebx-0x45]
  411370:	pop    ebx
  411371:	jl     0x4112fe
  411373:	mov    dl,0xd6
  411375:	idiv   BYTE PTR [ecx-0xa47e131]
  41137b:	dec    ebp
  41137c:	outs   dx,BYTE PTR ds:[esi]
  41137d:	pop    ds
  41137e:	shr    BYTE PTR [esi],0x84
  411381:	xor    al,BYTE PTR [edi+0x7d]
  411384:	dec    ebp
  411385:	(bad)  
  411386:	loop   0x411394
  411388:	inc    esi
  411389:	std    
  41138a:	jno    0x411330
  41138c:	outs   dx,DWORD PTR ds:[esi]
  41138d:	retf   
  41138e:	pop    esp
  41138f:	adc    ebx,ebx
  411391:	and    DWORD PTR [edx+0x2a],edx
  411394:	inc    edi
  411395:	cwde   
  411396:	adc    BYTE PTR [ecx-0x3af2452],ch
  41139c:	enter  0xec2d,0x4a
  4113a0:	repnz scas al,BYTE PTR es:[edi]
  4113a2:	popa   
  4113a3:	imul   ecx,DWORD PTR [ebx-0x77],0xfa2e14aa
  4113aa:	and    eax,0x74b4cd47
  4113af:	adc    DWORD PTR [bx+0xf],eax
  4113b3:	icebp  
  4113b4:	or     DWORD PTR [ebx-0x77],edx
  4113b7:	iret   
  4113b8:	(bad)  
  4113b9:	popf   
  4113ba:	push   ebp
  4113bb:	outs   dx,DWORD PTR ds:[esi]
  4113bc:	sahf   
  4113bd:	sub    al,0x3b
  4113bf:	cmp    BYTE PTR [ecx],al
  4113c1:	sbb    bh,dl
  4113c3:	je     0x41134e
  4113c5:	(bad)  
  4113c6:	jmp    0xf35b6a9b
  4113cb:	inc    esi
  4113cc:	fnstenv [ecx+esi*4]
  4113cf:	jns    0x41137b
  4113d1:	xor    DWORD PTR [eax],edx
  4113d3:	in     eax,0x21
  4113d5:	mov    dl,0x65
  4113d7:	(bad)  
  4113d8:	sbb    BYTE PTR [esi],dl
  4113da:	je     0x4113a0
  4113dc:	or     al,0x3c
  4113de:	mov    dh,0x78
  4113e0:	ja     0x4113b3
  4113e2:	ret    
  4113e3:	pop    edx
  4113e4:	lods   al,BYTE PTR ds:[esi]
  4113e5:	popf   
  4113e6:	and    bh,bh
  4113e8:	addr16 in eax,dx
  4113ea:	(bad)  [edi-0x7f4606ab]
  4113f0:	retf   
  4113f1:	int    0x16
  4113f3:	das    
  4113f4:	cs dec ebx
  4113f6:	lods   eax,DWORD PTR ds:[esi]
  4113f7:	icebp  
  4113f8:	loop   0x411430
  4113fa:	cmp    DWORD PTR [edx+0x41],ebp
  4113fd:	mov    ?,WORD PTR [ecx+0x338c21a]
  411403:	dec    ebp
  411404:	cwde   
  411405:	pop    es
  411406:	das    
  411407:	cdq    
  411408:	add    al,0xb7
  41140a:	shl    DWORD PTR [edx],1
  41140c:	lea    ebx,[ecx+0x7e]
  41140f:	and    DWORD PTR [ebx],ebp
  411411:	xor    al,0x3
  411413:	lahf   
  411414:	(bad)  
  411415:	in     eax,0xde
  411417:	pop    eax
  411418:	push   ss
  411419:	pop    ebx
  41141a:	and    BYTE PTR [ebx+ecx*8+0x49c2d220],ah
  411421:	jecxz  0x411489
  411423:	or     BYTE PTR ds:0x8e0f3980,dh
  411429:	push   eax
  41142a:	repz xchg esi,eax
  41142c:	lock xchg esp,eax
  41142e:	leave  
  41142f:	cmp    al,0x6f
  411431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411432:	dec    edx
  411433:	dec    esp
  411434:	sub    al,0xe9
  411436:	mov    ecx,0xe9c1284d
  41143b:	or     cl,ah
  41143d:	jmp    0x8003:0xb1a2980f
  411444:	mov    bl,0x57
  411446:	mov    ah,0x53
  411448:	mov    eax,es
  41144a:	mov    ebp,0x5fbd3777
  41144f:	xlat   BYTE PTR ds:[ebx]
  411450:	inc    ebp
  411451:	mov    cl,0xdf
  411453:	test   eax,0x8ce4d784
  411458:	lods   al,BYTE PTR ds:[esi]
  411459:	sub    eax,0x81cf4d24
  41145e:	es and eax,0x305df389
  411464:	shl    BYTE PTR [esi+0x66],cl
  411467:	mov    DWORD PTR [eax+0x3d],ebp
  41146a:	xadd   DWORD PTR [esi+0x23],ebx
  41146e:	xchg   esi,eax
  41146f:	bnd jns 0x411474
  411472:	mov    esp,0xc1a2b39d
  411477:	sub    ebp,DWORD PTR [esi-0x1a]
  41147a:	fnstenv [esi]
  41147c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41147d:	into   
  41147e:	punpcklwd mm1,mm5
  411481:	pop    ds
  411482:	mov    ds:0x984b6d1b,al
  411487:	call   0x12f6:0xdd343df5
  41148e:	ret    0x2d78
  411491:	sbb    DWORD PTR [ecx],edx
  411493:	sub    BYTE PTR ds:0x6c459e94,cl
  411499:	mov    DWORD PTR [esi+0x47],edi
  41149c:	lahf   
  41149d:	add    al,0x71
  41149f:	pop    ebx
  4114a0:	retf   0xde8b
  4114a3:	sahf   
  4114a4:	sbb    al,0xc2
  4114a6:	cmp    DWORD PTR [ebx-0x3219232],ebp
  4114ac:	js     0x411438
  4114ae:	lock push es
  4114b0:	push   ebx
  4114b1:	aad    0x29
  4114b3:	clc    
  4114b4:	push   esi
  4114b5:	inc    ebx
  4114b6:	and    bh,BYTE PTR [eax-0x20]
  4114b9:	jl     0x411468
  4114bb:	xor    ch,BYTE PTR [ecx+eax*4-0x75]
  4114bf:	test   DWORD PTR [esi-0x44],ecx
  4114c2:	mov    bh,0x61
  4114c4:	fnstcw WORD PTR [ebp-0x45514d5f]
  4114ca:	hlt    
  4114cb:	dec    edx
  4114cc:	mov    esp,0x6f469b26
  4114d1:	es test ah,ch
  4114d4:	int    0x56
  4114d6:	mov    ds:0xa79dcd36,eax
  4114db:	mov    al,0xda
  4114dd:	aaa    
  4114de:	aad    0x20
  4114e0:	and    eax,0xb90cf1ba
  4114e5:	adc    edx,DWORD PTR [edi+0x60]
  4114e8:	pop    edx
  4114e9:	jg     0x41150f
  4114eb:	xor    al,0xf3
  4114ed:	cmp    bl,BYTE PTR [ecx-0x1e]
  4114f0:	inc    BYTE PTR [ecx-0x5030383f]
  4114f6:	jne    0x411481
  4114f8:	dec    edi
  4114f9:	outs   dx,DWORD PTR ds:[esi]
  4114fa:	call   0xe7e60ef9
  4114ff:	lahf   
  411500:	sub    BYTE PTR [edx],dl
  411502:	dec    esp
  411503:	pop    esi
  411504:	ins    BYTE PTR es:[edi],dx
  411505:	mov    bh,0xa3
  411507:	pop    edx
  411508:	push   es
  411509:	sub    eax,DWORD PTR [ebx]
  41150b:	out    dx,eax
  41150c:	clc    
  41150d:	and    al,0x6b
  41150f:	inc    ecx
  411510:	adc    al,dl
  411512:	jge    0x411560
  411514:	inc    esp
  411515:	cmp    al,0x2f
  411517:	jecxz  0x411579
  411519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151a:	(bad)  
  41151b:	loop   0x411571
  41151d:	jns    0x4114e4
  41151f:	inc    ebx
  411520:	std    
  411521:	(bad)  
  411523:	nop
  411524:	retf   
  411525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411526:	adc    BYTE PTR [edx-0xdccccdb],0x13
  41152d:	fisubr DWORD PTR ds:0xcc4086f6
  411533:	dec    ebx
  411534:	sbb    ecx,DWORD PTR [edx-0x47183c5f]
  41153a:	push   esp
  41153b:	sub    eax,0xb4160a9f
  411540:	jmp    0x4c2f:0xb162bcd0
  411547:	push   0x9adb1c97
  41154c:	jmp    0xe19a7b30
  411551:	xchg   ebx,eax
  411552:	jae    0x4115c3
  411554:	mov    eax,ds:0x9922022a
  411559:	mov    BYTE PTR [ecx+0x3016e5a8],bh
  41155f:	jmp    0xce95:0xa6c8c4b8
  411566:	dec    esi
  411567:	stc    
  411568:	inc    ebp
  411569:	mov    al,ds:0xd438cbcf
  41156e:	xor    al,0x99
  411570:	out    0xd2,al
  411572:	lock adc esi,DWORD PTR fs:[edx-0x29ddc9d6]
  41157a:	iret   
  41157b:	push   edi
  41157c:	adc    BYTE PTR [edx+0x773606ee],al
  411582:	sbb    BYTE PTR [ebx+0x68],0x52
  411586:	jnp    0x411591
  411588:	pop    edx
  411589:	jo     0x411526
  41158b:	push   eax
  41158c:	lods   al,BYTE PTR ds:[esi]
  41158d:	rdpmc  
  41158f:	fist   WORD PTR [ebx+0x28]
  411592:	cs ret 0x21a1
  411596:	xor    al,0x4b
  411598:	mov    BYTE PTR [eax-0xd],bh
  41159b:	dec    eax
  41159c:	mov    al,al
  41159e:	ficom  WORD PTR [edi-0x76068b05]
  4115a4:	push   ecx
  4115a5:	cmc    
  4115a6:	add    ebp,DWORD PTR ds:0x48377969
  4115ac:	mov    bl,0xef
  4115ae:	and    bh,BYTE PTR [ebx+ebx*8+0x5832716e]
  4115b5:	mov    ds:0x5a7e803e,eax
  4115ba:	mov    eax,ds:0x8bf0559e
  4115bf:	xor    al,0xe6
  4115c1:	mov    al,0x67
  4115c3:	or     eax,0x47fed3c8
  4115c8:	inc    ebp
  4115c9:	push   ds
  4115ca:	lods   al,BYTE PTR ds:[esi]
  4115cb:	gs mov ah,0x75
  4115ce:	mov    dh,0xf1
  4115d0:	lock and esp,0x7b
  4115d4:	out    0x63,al
  4115d6:	dec    esi
  4115d7:	aam    0x72
  4115d9:	inc    ecx
  4115da:	jmp    0xaf9b6afd
  4115df:	or     ch,cl
  4115e1:	(bad)  
  4115e2:	ds lock nop
  4115e5:	pop    es
  4115e6:	push   0x28
  4115e8:	fcmovu st,st(0)
  4115ea:	adc    al,0xf0
  4115ec:	repnz dec ebp
  4115ee:	pop    eax
  4115ef:	(bad)  
  4115f0:	cmp    DWORD PTR [ebx-0x282a081b],esp
  4115f6:	mov    edi,0x176742d5
  4115fb:	leave  
  4115fc:	cs push cs
  4115fe:	xor    al,0xf5
  411600:	lock push ebp
  411602:	or     ebx,DWORD PTR ss:[edx+0x527b0219]
  411609:	pop    eax
  41160a:	pop    ds
  41160b:	xchg   esi,eax
  41160c:	pusha  
  41160d:	add    ebp,DWORD PTR ds:0xff27a3e5
  411613:	add    al,0x26
  411615:	popa   
  411616:	sub    dh,cl
  411618:	adc    DWORD PTR [edx+0x4d],0xffffff98
  41161c:	mov    ds:0x2d6ca1b4,al
  411621:	xchg   esi,esi
  411623:	pop    ebx
  411624:	add    eax,0x20325971
  411629:	and    bl,BYTE PTR [eax-0x1]
  41162c:	loope  0x4115c9
  41162e:	out    dx,eax
  41162f:	mov    BYTE PTR [eax-0x13cb6245],0x41
  411636:	loop   0x4115db
  411638:	iret   
  411639:	retf   
  41163a:	jno    0x411643
  41163c:	(bad)  
  41163d:	jle    0x4116b1
  41163f:	push   ebp
  411640:	aaa    
  411641:	in     al,0xf9
  411643:	xchg   ebx,eax
  411644:	(bad)  
  411645:	sbb    bl,dh
  411647:	xchg   esi,eax
  411648:	inc    edx
  411649:	out    0x70,al
  41164b:	or     edx,0xffffffcd
  41164e:	xchg   BYTE PTR [edi+0x7491407a],bl
  411654:	mov    ds:0xd94d1da2,eax
  411659:	jb     0x411678
  41165b:	jmp    0x411634
  41165d:	lods   al,BYTE PTR ds:[esi]
  41165e:	mov    dl,0x5f
  411660:	test   eax,0x3a76e236
  411665:	pop    esp
  411666:	mov    ebx,0xe756518d
  41166b:	add    dh,BYTE PTR [esi-0x7bd4e8ac]
  411671:	leave  
  411672:	ss and eax,0xaad293cf
  411678:	mov    eax,ds:0xb653204d
  41167d:	fcomp  DWORD PTR [edi]
  41167f:	rcl    BYTE PTR [edx-0x7dcf1538],1
  411685:	jmp    0xfecdfc08
  41168a:	jmp    0x70adf261
  41168f:	pop    edx
  411690:	jne    0x4116e8
  411692:	and    eax,0x34191cf6
  411697:	jns    0x41161a
  411699:	cmp    BYTE PTR [edx],ah
  41169b:	xchg   edi,eax
  41169c:	dec    ebp
  41169d:	test   BYTE PTR [edi-0x3ef6303d],ah
  4116a3:	pop    ecx
  4116a4:	mov    esp,ebx
  4116a6:	adc    edi,DWORD PTR [esi+0x44]
  4116a9:	imul   ebp,DWORD PTR ds:0xa99e8904,0x5243720c
  4116b3:	loope  0x411694
  4116b5:	and    BYTE PTR [ebp+0x47018fa3],ch
  4116bb:	jmp    0x41169c
  4116bd:	fiadd  DWORD PTR [eax+0x70]
  4116c0:	aad    0x3f
  4116c2:	aam    0xc9
  4116c4:	cmp    al,0xd4
  4116c6:	xchg   esp,eax
  4116c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116c8:	dec    edx
  4116c9:	and    DWORD PTR [ebx-0x1],0xffffffb2
  4116cd:	or     eax,0x701aa506
  4116d2:	dec    eax
  4116d3:	inc    eax
  4116d4:	sar    BYTE PTR [ebx+0x20e2ae90],cl
  4116da:	stos   DWORD PTR es:[edi],eax
  4116db:	fsub   DWORD PTR [eax]
  4116dd:	push   cs
  4116de:	mov    ebp,0xedf7203
  4116e3:	mov    BYTE PTR [ecx-0x80],dl
  4116e6:	dec    edx
  4116e7:	adc    BYTE PTR [ebx+eax*2-0x2b],bl
  4116eb:	scas   al,BYTE PTR es:[edi]
  4116ec:	in     al,0xe3
  4116ee:	in     al,0xd0
  4116f0:	push   esi
  4116f1:	mov    eax,0xf7364e7b
  4116f6:	jns    0x4116f3
  4116f8:	imul   ecx,DWORD PTR [edi+edi*8-0xd],0xa61570ec
  411700:	xor    al,0x3
  411702:	mov    ecx,0x422e6d49
  411707:	test   BYTE PTR [ebx+0x69],dh
  41170a:	dec    ecx
  41170b:	mov    eax,DWORD PTR [edx-0x233a8c3]
  411711:	fistp  WORD PTR [ebx+0x44829580]
  411717:	shl    BYTE PTR [edi+0x43e117c6],cl
  41171d:	mov    cl,0x81
  41171f:	mov    eax,0x8b88b2ec
  411724:	int3   
  411725:	jmp    0xd424cb
  41172a:	jmp    0x7465e5de
  41172f:	fs loope 0x41173c
  411732:	loope  0x4116e5
  411734:	add    bh,ah
  411736:	icebp  
  411737:	xor    eax,esp
  411739:	lods   al,BYTE PTR ds:[esi]
  41173a:	inc    edx
  41173b:	adc    al,0x80
  41173d:	jmp    0xd42:0xdb3cbcee
  411744:	jmp    0x4116e0
  411746:	inc    esp
  411747:	aad    0x27
  411749:	call   0xae14:0x3431e64d
  411750:	neg    DWORD PTR [ebp-0x3ef535c7]
  411756:	xor    ebp,DWORD PTR [edi]
  411758:	mov    ebp,0xda49747e
  41175d:	add    al,0x10
  41175f:	(bad)  
  411760:	jns    0x41174a
  411762:	fcom   DWORD PTR [edi-0x568b2d72]
  411768:	xchg   ebx,eax
  41176a:	std    
  41176b:	pop    ecx
  41176c:	(bad)  [esi+ebx*4]
  41176f:	xor    BYTE PTR [ecx+0x2c],dl
  411772:	in     eax,0xa6
  411774:	dec    edi
  411775:	push   es
  411776:	or     al,0x36
  411778:	pop    ecx
  411779:	clc    
  41177a:	sbb    BYTE PTR [eax+eax*8+0x111c4e7],bh
  411781:	and    al,0x71
  411783:	das    
  411784:	pop    edx
  411785:	lock in eax,dx
  411787:	mov    ebx,0x6792d14e
  41178c:	adc    esp,DWORD PTR [eax-0x52f15d8c]
  411792:	push   edx
  411793:	into   
  411794:	or     dh,dl
  411796:	(bad)  
  411797:	pop    ecx
  411798:	xchg   edx,eax
  411799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41179a:	push   ebx
  41179b:	ret    0x1168
  41179e:	push   edx
  41179f:	mov    ebp,0x15e8c5ef
  4117a4:	pop    edi
  4117a5:	jecxz  0x411768
  4117a7:	dec    ebp
  4117a8:	or     eax,0x2176f8b6
  4117ad:	adc    eax,0x4c951d3c
  4117b2:	sbb    al,0xd
  4117b4:	in     eax,dx
  4117b5:	mov    edx,0x1cc4100f
  4117ba:	arpl   WORD PTR [edi+ebx*8-0x51],bp
  4117be:	in     al,0xdf
  4117c0:	aam    0x78
  4117c2:	add    BYTE PTR [ebp-0x43],dl
  4117c5:	mov    edx,0xc7250f45
  4117ca:	jnp    0x411777
  4117cc:	push   esp
  4117cd:	or     al,bl
  4117cf:	mov    esi,0x708eeba1
  4117d4:	sub    al,0x6a
  4117d6:	call   0x18f0:0x66fe54b6
  4117dd:	xlat   BYTE PTR ds:[ebx]
  4117de:	sub    dh,BYTE PTR es:[esi+0x2327b47c]
  4117e5:	xchg   edx,eax
  4117e6:	shr    ch,0x94
  4117e9:	(bad)  [eax+0x7d]
  4117ec:	nop
  4117ed:	test   al,0x2b
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	cdq    
  41186d:	dec    esp
  41186e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41186f:	add    al,0xe8
  411871:	nop
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	jo     0x40f37a44
  41187e:	out    dx,al
  41187f:	sbb    al,0x77
  411881:	out    0x7f,al
  411883:	mov    al,0xbb
  411885:	cmp    DWORD PTR [eax+0x73],ecx
  411888:	rcl    DWORD PTR [edx],1
  41188a:	shl    DWORD PTR [ecx+0x7b4ee02c],1
  411890:	jno    0x411858
  411892:	bound  ebx,QWORD PTR [ebp-0x3d]
  411895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411896:	or     al,0x92
  411898:	sbb    BYTE PTR [ebp+0x6e],al
  41189b:	syscall 
  41189d:	retf   0xcfa4
  4118a0:	ja     0x41190b
  4118a2:	xchg   esp,eax
  4118a3:	shr    ebp,1
  4118a5:	sub    esp,ebx
  4118a7:	test   BYTE PTR ds:0x5bf55182,bh
  4118ad:	pop    ds
  4118ae:	mov    gs,eax
  4118b0:	out    0x93,eax
  4118b2:	xchg   ebx,eax
  4118b3:	add    DWORD PTR [ebx],ecx
  4118b5:	scas   al,BYTE PTR es:[edi]
  4118b6:	leave  
  4118b7:	outs   dx,BYTE PTR ds:[esi]
  4118b8:	popf   
  4118b9:	fmul   QWORD PTR [edx]
  4118bb:	add    BYTE PTR [eax-0x5d],ch
  4118be:	iret   
  4118bf:	pop    esi
  4118c0:	shl    DWORD PTR [ecx],cl
  4118c2:	mov    edx,ebx
  4118c4:	sbb    ch,bh
  4118c6:	repz pop es
  4118c8:	jbe    0x41187d
  4118ca:	shl    eax,1
  4118cc:	mov    ch,0x56
  4118ce:	fsubr  DWORD PTR [ebx-0x6659d97d]
  4118d4:	test   BYTE PTR [ebx-0x7f],0x6b
  4118d8:	mov    al,ds:0x238b53bb
  4118dd:	mov    eax,0x5d07ad8f
  4118e2:	out    dx,eax
  4118e3:	hlt    
  4118e4:	ja     0x4118cf
  4118e6:	mov    eax,0x77cf880d
  4118eb:	sbb    DWORD PTR [edx],esp
  4118ed:	dec    edx
  4118ee:	cli    
  4118ef:	(bad)  
  4118f0:	mov    cl,0xbd
  4118f2:	rcr    BYTE PTR [ebx],cl
  4118f4:	add    eax,ecx
  4118f6:	add    eax,0x5bba96ac
  4118fb:	adc    eax,0xa8b8123f
  411900:	addr16 daa 
  411902:	sub    cl,dh
  411904:	mov    esp,0xceebe6d0
  411909:	xlat   BYTE PTR ds:[ebx]
  41190a:	dec    eax
  41190b:	mov    cl,0x73
  41190d:	faddp  st(3),st
  41190f:	pusha  
  411910:	pop    esi
  411911:	(bad)  [esi+edi*8]
  411914:	cmp    eax,DWORD PTR [edi+0x694c7210]
  41191a:	rcr    BYTE PTR [ebp+0x1b494b82],1
  411920:	sub    bh,BYTE PTR ds:0x50da6505
  411926:	mov    esi,0xba7ffde7
  41192b:	test   DWORD PTR ds:0x6097b873,0xfc743e3c
  411935:	fcmovne st,st(1)
  411937:	div    DWORD PTR [esi+0x59]
  41193a:	lods   eax,DWORD PTR ds:[esi]
  41193b:	data16 sbb BYTE PTR [esi+0x52],dl
  41193f:	sub    al,0xd2
  411941:	not    DWORD PTR [ebx+0x791fc4a1]
  411947:	or     ebp,0x43
  41194a:	fdiv   st(0),st
  41194c:	mov    esp,0xe27d56bc
  411951:	sub    ebp,DWORD PTR [ebx]
  411953:	lods   al,BYTE PTR ds:[esi]
  411954:	aad    0x13
  411956:	adc    al,dl
  411958:	adc    al,0x6e
  41195a:	in     al,0xcf
  41195c:	pusha  
  41195d:	es add al,0x57
  411960:	mov    edi,0x1580868a
  411965:	xchg   ebp,eax
  411966:	lock sub eax,0xf72a276e
  41196c:	push   esp
  41196d:	shl    BYTE PTR [edi-0x21],1
  411970:	mov    al,0xd8
  411972:	data16 loopne 0x411941
  411975:	pop    ds
  411976:	mov    ecx,0xf93a20d9
  41197b:	mov    BYTE PTR ds:0x121fa63a,dl
  411981:	call   0x22a3f9a4
  411986:	ss pop ecx
  411988:	imul   edx,ebp,0xb
  41198b:	test   al,0x89
  41198d:	mov    ds:0xe4a6ee43,eax
  411992:	vshufps ymm4,ymm6,YMMWORD PTR [edi],0xf8
  411997:	add    BYTE PTR [edx+0x21],0x41
  41199b:	data16 jne 0x41195e
  41199e:	test   al,0xcd
  4119a0:	pop    ds
  4119a1:	cmp    esi,ebp
  4119a3:	out    0x8d,eax
  4119a5:	jl     0x411a14
  4119a7:	fisubr DWORD PTR [edx]
  4119a9:	es xchg ebx,eax
  4119ab:	dec    eax
  4119ac:	les    esi,FWORD PTR [edx]
  4119ae:	add    bl,BYTE PTR [ecx]
  4119b0:	cmp    al,0x72
  4119b3:	in     eax,0x77
  4119b5:	arpl   WORD PTR [ebp-0x5cef10fe],ax
  4119bb:	daa    
  4119bc:	ret    0x8181
  4119bf:	mov    ecx,0xeb88a5ce
  4119c4:	cmp    eax,0x7bc68dae
  4119c9:	cmc    
  4119ca:	sub    al,0xed
  4119cc:	imul   esp,DWORD PTR es:[eax],0xffffffc7
  4119d0:	pop    es
  4119d1:	call   0x33a6:0x37b4837e
  4119d8:	fucomp st(0)
  4119da:	fwait
  4119db:	inc    esp
  4119dc:	ins    DWORD PTR es:[edi],dx
  4119dd:	inc    edx
  4119de:	imul   esi,DWORD PTR [ebx-0x4e],0xe9517933
  4119e5:	xchg   edi,eax
  4119e6:	and    al,0x4f
  4119e8:	ins    DWORD PTR es:[edi],dx
  4119e9:	push   0x130221e8
  4119ee:	sub    BYTE PTR [esi],0xb0
  4119f1:	push   0xffffffa2
  4119f3:	pop    ebp
  4119f4:	out    0xbf,al
  4119f6:	xchg   ecx,eax
  4119f7:	push   ss
  4119f8:	add    eax,0xb215c914
  4119fd:	test   DWORD PTR [ebp-0x5c1370d],0xaa6d0826
  411a07:	and    eax,0xedb0a87a
  411a0c:	les    ecx,FWORD PTR [edx]
  411a0e:	jle    0x411a0a
  411a10:	xlat   BYTE PTR ds:[ebx]
  411a11:	or     eax,0xa95e8bea
  411a16:	xchg   ecx,eax
  411a17:	int    0x14
  411a19:	ret    
  411a1a:	cs nop
  411a1c:	push   esp
  411a1d:	mov    ch,0x72
  411a1f:	arpl   WORD PTR [esi],dx
  411a21:	(bad)  
  411a22:	pop    edi
  411a23:	fnstenv [edi-0x1c]
  411a26:	retf   
  411a27:	jb     0x4119f7
  411a29:	sbb    al,0xaf
  411a2b:	xchg   esi,eax
  411a2c:	fs and bh,ch
  411a2f:	lea    edx,[eax+eiz*4]
  411a32:	sti    
  411a33:	mov    al,0x8a
  411a35:	call   0xc421:0xfdfa58f7
  411a3c:	dec    esp
  411a3d:	ins    DWORD PTR es:[edi],dx
  411a3e:	cdq    
  411a3f:	push   eax
  411a40:	cmp    edi,ecx
  411a42:	in     al,0x68
  411a44:	mov    ebx,ss
  411a46:	jg     0x4119cc
  411a48:	push   esp
  411a49:	rol    DWORD PTR [eax],0x29
  411a4c:	xchg   ebp,eax
  411a4d:	mov    edx,edi
  411a4f:	jmp    0x6293:0x43208d3f
  411a56:	outs   dx,BYTE PTR ds:[esi]
  411a57:	lds    esi,FWORD PTR [edi]
  411a59:	test   ebp,esi
  411a5b:	dec    esp
  411a5c:	inc    edi
  411a5d:	and    eax,0xa54ce86b
  411a62:	sbb    eax,0x5fdda2d7
  411a67:	dec    ecx
  411a68:	push   0x2ee913d
  411a6d:	push   eax
  411a6e:	test   DWORD PTR [eax+0x64298e98],ecx
  411a74:	xchg   DWORD PTR [eax+0x50],edx
  411a77:	ficomp DWORD PTR [edx-0x311762d9]
  411a7d:	repz mul BYTE PTR [eax+0x5d]
  411a81:	add    al,0xbb
  411a83:	cmp    eax,0x5844db41
  411a88:	cmp    edx,DWORD PTR [edi+0x1cf09a41]
  411a8e:	or     BYTE PTR [edi-0x74],al
  411a91:	in     al,dx
  411a92:	xor    DWORD PTR [edi],esp
  411a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a95:	and    ecx,ebp
  411a97:	loope  0x411af9
  411a99:	mov    BYTE PTR [ecx-0x40],ah
  411a9c:	cmp    ch,BYTE PTR [edi-0x77]
  411a9f:	das    
  411aa0:	nop
  411aa1:	cs in  eax,dx
  411aa3:	ins    BYTE PTR es:[edi],dx
  411aa4:	push   ds
  411aa5:	adc    esp,DWORD PTR [edi]
  411aa7:	jg     0x411ab1
  411aa9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411aaa:	sbb    BYTE PTR [edx+0x25],ah
  411aad:	sub    eax,0xae83814e
  411ab2:	iret   
  411ab3:	pop    ds
  411ab4:	mov    cl,0x8b
  411ab6:	push   esi
  411ab7:	jmp    0xeff1:0x24479b3b
  411abe:	sbb    dl,ch
  411ac0:	or     al,0xee
  411ac2:	add    edx,DWORD PTR [edi+0x74]
  411ac5:	imul   esi,DWORD PTR [ebx-0x5f],0xffffffb9
  411ac9:	hlt    
  411aca:	int3   
  411acb:	cvtdq2ps xmm1,XMMWORD PTR [edi+ecx*1+0x6f]
  411ad0:	push   esi
  411ad1:	ds shr di,1
  411ad5:	mov    ds:0x5b691c31,al
  411ada:	inc    eax
  411adb:	inc    esp
  411adc:	mov    edi,0x14f3ac4a
  411ae1:	adc    dl,BYTE PTR [ebx-0x27]
  411ae4:	in     al,dx
  411ae5:	push   esp
  411ae6:	scas   eax,DWORD PTR es:[edi]
  411ae7:	adc    al,0x14
  411ae9:	mov    cl,0x84
  411aeb:	dec    eax
  411aec:	inc    eax
  411aed:	cli    
  411aee:	icebp  
  411aef:	mov    edx,0x8a776051
  411af4:	mov    dl,0x5d
  411af6:	or     ecx,DWORD PTR [edi+0x1475d486]
  411afc:	sub    DWORD PTR [edi-0x42],ebx
  411aff:	jmp    0xbf6cd23d
  411b04:	cmp    dh,BYTE PTR [eax]
  411b06:	push   eax
  411b07:	test   al,0xa9
  411b09:	push   cs
  411b0a:	and    eax,esi
  411b0c:	push   ebx
  411b0d:	rcr    BYTE PTR [edi+0x64845ac1],0x35
  411b14:	mov    BYTE PTR [edi+0x4f65f1be],0xda
  411b1b:	xchg   esp,eax
  411b1c:	imul   edx,DWORD PTR [ecx-0x34983ff1],0xffffffcd
  411b23:	out    dx,al
  411b24:	das    
  411b25:	xlat   BYTE PTR ds:[ebx]
  411b26:	addr16 jns 0x411ab4
  411b29:	or     eax,0x6910ae9d
  411b2e:	test   al,0x49
  411b30:	xchg   ebx,eax
  411b31:	push   ebp
  411b32:	out    0xdb,eax
  411b34:	rol    bh,0x84
  411b37:	cmc    
  411b38:	out    0x2a,eax
  411b3a:	out    dx,al
  411b3b:	dec    esi
  411b3c:	adc    eax,0xba2e1010
  411b41:	loopne 0x411bb4
  411b43:	into   
  411b44:	or     esp,0x3e
  411b47:	xor    DWORD PTR [ecx-0x7e],0x4e
  411b4b:	addr16 repz adc eax,0x97a9299b
  411b52:	or     DWORD PTR [esi],ebx
  411b54:	hlt    
  411b55:	mov    al,ds:0x4f714f6f
  411b5a:	or     BYTE PTR [ebp-0x29],dh
  411b5d:	fmul   st,st(1)
  411b5f:	scas   eax,DWORD PTR es:[edi]
  411b60:	adc    DWORD PTR [esi+0x2405feec],edx
  411b66:	inc    ecx
  411b67:	mov    ch,BYTE PTR [esi+0x47]
  411b6a:	pop    edi
  411b6b:	aam    0xdf
  411b6d:	adc    al,0x7
  411b6f:	xchg   esi,eax
  411b70:	ds pop ebx
  411b72:	or     eax,0xea5b2cd2
  411b77:	das    
  411b78:	test   al,0x5d
  411b7a:	outs   dx,BYTE PTR ds:[esi]
  411b7b:	hlt    
  411b7c:	dec    esi
  411b7d:	push   eax
  411b7e:	mov    ds,WORD PTR [ecx-0x72c91f47]
  411b84:	aad    0xc0
  411b86:	mul    DWORD PTR [esi-0x1a]
  411b89:	sbb    dh,bh
  411b8b:	lahf   
  411b8c:	fsub   st,st(6)
  411b8e:	repz jnp 0x411b58
  411b91:	or     dh,dh
  411b93:	dec    edx
  411b94:	fucomi st,st(6)
  411b96:	jg     0x411b91
  411b98:	sbb    BYTE PTR [ebx-0x3c],cl
  411b9b:	shr    DWORD PTR [ecx+0xa4b546e],0x7c
  411ba2:	and    bl,0xc9
  411ba5:	fs stos BYTE PTR es:[edi],al
  411ba7:	push   0xd129cbfd
  411bac:	inc    ebx
  411bae:	dec    ecx
  411baf:	xchg   ecx,eax
  411bb0:	sub    esi,DWORD PTR [edi+0x2c]
  411bb3:	popa   
  411bb4:	fs (bad) 
  411bb6:	push   ss
  411bb7:	push   eax
  411bb8:	pop    ecx
  411bb9:	icebp  
  411bba:	mov    al,0x1f
  411bbc:	mov    fs,WORD PTR [eax+0x1f387c42]
  411bc2:	daa    
  411bc3:	cli    
  411bc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bc5:	stos   BYTE PTR es:[edi],al
  411bc6:	test   al,0x30
  411bc8:	out    dx,eax
  411bc9:	(bad)  
  411bca:	sti    
  411bcb:	sbb    DWORD PTR [ebx-0x63c84e2e],eax
  411bd1:	scas   al,BYTE PTR es:[edi]
  411bd2:	call   0x9f8c:0xd0686457
  411bd9:	scas   eax,DWORD PTR es:[edi]
  411bda:	fcmovb st,st(7)
  411bdc:	adc    BYTE PTR [ebx+0x1f7b1146],cl
  411be2:	jb     0x411bab
  411be4:	mov    edi,0x54a61db6
  411be9:	xor    DWORD PTR [ecx],esi
  411beb:	lds    ebp,FWORD PTR [esi+0x56554594]
  411bf1:	ds cmp dl,0x86
  411bf5:	sub    BYTE PTR [eax-0x12cfcb0c],bl
  411bfb:	sub    DWORD PTR [edi],0xd0262b3f
  411c01:	cmp    BYTE PTR [edi-0x7a],cl
  411c04:	xchg   ebp,eax
  411c05:	jno    0x411bd2
  411c07:	rcr    DWORD PTR [ebp+0x2],cl
  411c0a:	inc    edi
  411c0b:	mov    ds:0xc4644d33,al
  411c10:	clc    
  411c11:	bound  esp,QWORD PTR [ecx-0x56]
  411c14:	test   DWORD PTR [ebx+0x4dd2542a],0x7d4029be
  411c1e:	outs   dx,BYTE PTR ds:[esi]
  411c1f:	jle    0x411c40
  411c21:	inc    ebx
  411c22:	out    dx,al
  411c23:	add    BYTE PTR [edi],dl
  411c25:	or     DWORD PTR [edi+0x465d9b1f],ecx
  411c2b:	sub    eax,0x511f35eb
  411c30:	mov    bl,0x40
  411c32:	fiadd  WORD PTR [edx-0x3b6c9fbe]
  411c38:	loope  0x411c03
  411c3a:	pop    eax
  411c3b:	imul   ecx,DWORD PTR [edx+edx*4],0xa6d3d67f
  411c42:	mov    dh,0x52
  411c44:	es mov esp,0xcca6500d
  411c4a:	hlt    
  411c4b:	std    
  411c4c:	fldenv [edx+eax*4-0x67ad2a6]
  411c53:	dec    ebp
  411c54:	scas   eax,DWORD PTR es:[edi]
  411c55:	xchg   ebx,eax
  411c56:	xchg   esp,eax
  411c57:	leave  
  411c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c59:	xchg   ebx,eax
  411c5a:	mov    cl,0x4f
  411c5c:	xor    BYTE PTR [ecx],al
  411c5e:	mov    bh,0xf3
  411c60:	(bad)  
  411c61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c62:	adc    DWORD PTR [ebp+0x388a1694],ebp
  411c68:	mov    BYTE PTR [edi+0x8],bh
  411c6b:	push   esp
  411c6c:	sbb    bl,ch
  411c6e:	cld    
  411c6f:	clc    
  411c70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c71:	inc    eax
  411c72:	lahf   
  411c73:	je     0x411c13
  411c75:	cmp    al,ch
  411c77:	lds    ebp,FWORD PTR [ecx+0x5500c19a]
  411c7d:	or     BYTE PTR [ecx+0x30],0x2c
  411c81:	call   DWORD PTR [ecx-0x114d882d]
  411c87:	inc    ecx
  411c88:	ret    0x6178
  411c8b:	and    eax,0xe4802b3b
  411c90:	idiv   cl
  411c92:	mov    esp,0x8190608
  411c97:	fcom   QWORD PTR [eax-0x1215d6a5]
  411c9d:	pop    es
  411c9e:	inc    BYTE PTR [esp+esi*2+0x4d7740be]
  411ca5:	sbb    al,0xb1
  411ca7:	fnstenv [ebx+edx*1]
  411caa:	leave  
  411cab:	push   es
  411cac:	rcr    BYTE PTR [edi-0x701f6af6],0xbd
  411cb3:	sbb    DWORD PTR [edi+0x20],esp
  411cb6:	loop   0x411cfa
  411cb8:	ret    0x1ce
  411cbb:	mov    bh,0x61
  411cbd:	adc    ah,BYTE PTR [ebx+0x6d3af7b3]
  411cc3:	sar    BYTE PTR [ebp-0x588198e8],0xb8
  411cca:	fcom   DWORD PTR [edx-0x3ce42541]
  411cd0:	or     ch,BYTE PTR [edi-0x34]
  411cd3:	loop   0x411cb1
  411cd5:	jecxz  0x411cc8
  411cd7:	cld    
  411cd8:	xor    al,0x20
  411cda:	or     dl,ah
  411cdc:	outs   dx,BYTE PTR ds:[esi]
  411cdd:	cmp    DWORD PTR [ebx-0x28],0x71f83ef3
  411ce4:	inc    esp
  411ce5:	popa   
  411ce6:	jecxz  0x411cdf
  411ce8:	test   al,0x6
  411cea:	jb     0x411ce5
  411cec:	mov    cl,bl
  411cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cef:	lds    edx,FWORD PTR [eax]
  411cf1:	inc    ebx
  411cf2:	push   ss
  411cf3:	add    dh,BYTE PTR [eax+0x2b]
  411cf6:	mov    WORD PTR [ebx],cs
  411cf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411cf9:	fidivr DWORD PTR [ecx+0x1ff29c63]
  411cff:	data16 es es stc 
  411d03:	mov    ds,WORD PTR [esi-0x636dfcb1]
  411d09:	xchg   BYTE PTR [esi+0x39],bh
  411d0c:	loop   0x411c9f
  411d0e:	lock loop 0x411d79
  411d11:	inc    esi
  411d12:	sbb    al,0xa6
  411d14:	les    edx,FWORD PTR cs:[edi-0x1e]
  411d18:	lods   al,BYTE PTR ds:[esi]
  411d19:	fst    DWORD PTR [ebx-0xb]
  411d1c:	cmc    
  411d1d:	mov    ebp,0xba56529d
  411d22:	lock shl DWORD PTR [esi],0xf5
  411d26:	mov    ah,0x85
  411d28:	sti    
  411d29:	nop
  411d2a:	push   esp
  411d2b:	out    dx,al
  411d2c:	lock xor eax,0x32556607
  411d32:	int3   
  411d33:	loope  0x411d01
  411d35:	cmp    DWORD PTR [edi+eax*1-0x38cd6118],ecx
  411d3c:	xor    bl,BYTE PTR [esi]
  411d3e:	add    DWORD PTR [esi-0x1a],ebx
  411d41:	not    eax
  411d43:	push   esi
  411d44:	scas   al,BYTE PTR es:[edi]
  411d45:	add    eax,0x8ad467ec
  411d4a:	test   ecx,ebp
  411d4c:	sbb    eax,0xdfcec19b
  411d51:	xor    ah,BYTE PTR [edi-0x7c3b344]
  411d57:	sub    al,BYTE PTR [ebx-0x59]
  411d5a:	dec    ecx
  411d5b:	bnd jp 0x411d18
  411d5e:	adc    eax,DWORD PTR [esi+eax*4]
  411d61:	sub    DWORD PTR [edx-0x7dd0e32d],esi
  411d67:	bound  ebp,QWORD PTR [ebp+0x3c66e44b]
  411d6d:	pop    ds
  411d6e:	mov    ah,0x2
  411d70:	jnp    0x411dad
  411d72:	xchg   esp,eax
  411d73:	and    dh,BYTE PTR [edi]
  411d75:	sbb    ecx,DWORD PTR [ebp-0x3c0c7819]
  411d7b:	in     eax,dx
  411d7c:	cmp    ebp,edx
  411d7e:	in     al,dx
  411d7f:	test   ah,bl
  411d81:	sbb    DWORD PTR [ebx+0x171cab95],0x5b
  411d88:	mov    bl,0xbd
  411d8a:	dec    eax
  411d8b:	cmp    BYTE PTR [edi-0x67720449],ah
  411d91:	push   eax
  411d92:	mov    BYTE PTR [ebp+0x604b162c],dh
  411d98:	adc    eax,DWORD PTR [esi-0x51104f91]
  411d9e:	cmp    eax,0x723071e
  411da3:	dec    ebp
  411da4:	les    esp,FWORD PTR [esi]
  411da6:	nop
  411da7:	dec    ebp
  411da8:	and    BYTE PTR [eax+0x291e24d9],0xae
  411daf:	test   eax,0x366eda87
  411db4:	in     al,dx
  411db5:	push   edx
  411db6:	xor    BYTE PTR [ecx],ah
  411db8:	add    DWORD PTR [ebx],0x486f5c5c
  411dbe:	stos   DWORD PTR es:[edi],eax
  411dbf:	mov    esp,0x54294cf6
  411dc4:	mov    ebx,cs
  411dc6:	or     cl,ah
  411dc8:	rol    ah,0x11
  411dcb:	idiv   BYTE PTR [ecx]
  411dcd:	(bad)  
  411dce:	clc    
  411dcf:	je     0x411e4c
  411dd1:	int    0xef
  411dd3:	pop    ebx
  411dd4:	je     0x411e49
  411dd6:	push   0x44
  411dd8:	pop    ecx
  411dd9:	cmp    BYTE PTR [eax+0x10343bb9],dh
  411ddf:	jge    0x411db0
  411de1:	iret   
  411de2:	bound  edx,QWORD PTR [ecx+ecx*2]
  411de5:	lea    ecx,[edx-0x1d]
  411de8:	dec    esi
  411de9:	call   0x495c:0x3f879a1e
  411df0:	(bad)  
  411df1:	scas   eax,DWORD PTR es:[edi]
  411df2:	test   DWORD PTR [ecx+0xb],ebp
  411df5:	daa    
  411df6:	xor    ecx,edx
  411df8:	das    
  411df9:	xchg   ebx,eax
  411dfa:	outs   dx,DWORD PTR ds:[esi]
  411dfb:	fist   WORD PTR [edi-0x1]
  411dfe:	or     BYTE PTR [eax+0x77ecdc17],dh
  411e04:	or     eax,0xc83fd358
  411e09:	test   DWORD PTR [esi-0x2daeb7a2],ebx
  411e0f:	mov    edx,0x53826fcd
  411e14:	and    DWORD PTR [ebp*4+0x19de957d],edx
  411e1b:	stc    
  411e1c:	shl    ah,0x49
  411e1f:	lahf   
  411e20:	les    ecx,FWORD PTR [ebp-0x9f57288]
  411e26:	jle    0x411e90
  411e28:	push   ds
  411e29:	je     0x411e98
  411e2b:	fs call 0x762:0xdac197a9
  411e33:	rol    DWORD PTR [edx-0x24],1
  411e36:	test   BYTE PTR [ebp+ecx*1+0x2b],bh
  411e3a:	les    eax,FWORD PTR ds:[ecx+ebp*1+0x65d0e29c]
  411e42:	(bad)  
  411e43:	mov    ch,0x4d
  411e45:	movd   DWORD PTR [ebx],mm7
  411e48:	and    DWORD PTR [ecx-0x70487d6f],esi
  411e4e:	push   0x1d
  411e50:	test   DWORD PTR [esi-0x51],ecx
  411e53:	push   esi
  411e54:	dec    esp
  411e55:	out    dx,al
  411e56:	fdiv   st,st(2)
  411e58:	in     al,dx
  411e59:	out    dx,al
  411e5a:	popa   
  411e5b:	das    
  411e5c:	jo     0x411e56
  411e5e:	sahf   
  411e5f:	sub    al,0x6a
  411e61:	xor    al,0x81
  411e63:	dec    esi
  411e64:	sbb    eax,0x32ed97f7
  411e69:	jo     0x411e00
  411e6b:	out    0x10,al
  411e6d:	stos   DWORD PTR es:[edi],eax
  411e6e:	dec    edx
  411e6f:	aad    0xaa
  411e71:	add    edi,DWORD PTR [edi-0x2a]
  411e74:	pop    esp
  411e75:	int3   
  411e76:	aaa    
  411e77:	sub    BYTE PTR [edi-0x3eb3bdff],dh
  411e7d:	mov    eax,ds:0x51546554
  411e82:	out    dx,al
  411e83:	and    al,0x11
  411e85:	repnz or BYTE PTR [esi],al
  411e88:	jo     0x411e86
  411e8a:	jne    0x411e0f
  411e8c:	cmc    
  411e8d:	(bad)  
  411e8e:	fmul   DWORD PTR [ecx+edx*2-0x3f465de9]
  411e95:	and    edx,edx
  411e97:	inc    ebx
  411e98:	das    
  411e99:	std    
  411e9a:	pop    edi
  411e9b:	into   
  411e9c:	or     BYTE PTR [ebp+0x6e4e65f7],ch
  411ea2:	rol    dl,1
  411ea4:	jl     0x411e56
  411ea6:	dec    ecx
  411ea7:	into   
  411ea8:	xchg   bl,bh
  411eaa:	out    0xba,al
  411eac:	pop    ss
  411ead:	nop
  411eae:	mov    ebp,0xce994775
  411eb3:	adc    al,0xba
  411eb5:	push   ebx
  411eb6:	repnz add edx,DWORD PTR [esi-0x745bd247]
  411ebd:	outs   dx,BYTE PTR ss:[esi]
  411ebf:	mov    bl,0xfa
  411ec1:	xor    eax,0x74346d10
  411ec6:	and    cl,ch
  411ec8:	adc    al,BYTE PTR [ebp+0x1987222]
  411ece:	and    eax,0x9d0fd356
  411ed3:	sbb    eax,0x29c13e18
  411ed8:	mov    bh,BYTE PTR [ecx-0x1]
  411edb:	daa    
  411edc:	cli    
  411edd:	ret    0x2f79
  411ee0:	push   esi
  411ee1:	mov    dl,0xcd
  411ee3:	cmp    DWORD PTR [eax+edx*1+0x2d069739],edx
  411eea:	push   0xda18c9f3
  411eef:	loope  0x411f3d
  411ef1:	inc    esi
  411ef2:	xchg   BYTE PTR ds:0x7b4081bd,dh
  411ef8:	or     DWORD PTR [esp+ebx*1-0x57],ebp
  411efc:	jecxz  0x411e88
  411efe:	repnz mov bh,0x3f
  411f01:	dec    eax
  411f02:	test   DWORD PTR [ecx+0x3916044],edx
  411f08:	and    DWORD PTR [eax+0x40b0a872],ebx
  411f0e:	in     al,dx
  411f0f:	xchg   ebp,eax
  411f10:	je     0x411f1e
  411f12:	fnstenv [esi]
  411f14:	int3   
  411f15:	mul    DWORD PTR [ebx-0x295ca518]
  411f1b:	mov    ds:0xac25aca,al
  411f20:	dec    eax
  411f21:	pop    esi
  411f22:	lods   eax,DWORD PTR ds:[esi]
  411f23:	(bad)  [edx]
  411f25:	sahf   
  411f26:	adc    al,0x13
  411f28:	sbb    eax,0xe3018f81
  411f2d:	pop    edx
  411f2e:	call   0xfd85:0x85545040
  411f35:	nop
  411f36:	xor    al,0x9c
  411f38:	ds scas al,BYTE PTR es:[edi]
  411f3a:	jmp    0x9ea6:0xce680fde
  411f41:	push   es
  411f42:	popa   
  411f43:	push   ecx
  411f44:	add    DWORD PTR [edi],edx
  411f46:	sub    al,0xcd
  411f48:	sub    al,0xf1
  411f4a:	test   DWORD PTR [edx],ebx
  411f4c:	and    eax,0xb31a3777
  411f51:	adc    bl,BYTE PTR [ebx]
  411f53:	cdq    
  411f54:	pop    es
  411f55:	dec    edi
  411f56:	js     0x411fb1
  411f58:	or     eax,0x297632b6
  411f5d:	xchg   ebp,edi
  411f5f:	sbb    al,0x8b
  411f61:	sbb    cl,BYTE PTR [edi-0x10c5235a]
  411f67:	loope  0x411f17
  411f69:	or     DWORD PTR ds:0x14dfe7bc,eax
  411f6f:	inc    eax
  411f70:	and    BYTE PTR [edx-0x1ec1b57],0x98
  411f77:	and    edi,DWORD PTR [ecx+0x437acbf2]
  411f7d:	pop    ss
  411f7e:	shr    BYTE PTR [esi-0x55],1
  411f81:	push   edx
  411f82:	sti    
  411f83:	(bad)  
  411f84:	(bad)  ds:0x54009816
  411f8a:	(bad)  
  411f8b:	mov    bl,0x6f
  411f8d:	cmp    bl,BYTE PTR [eax+ecx*2]
  411f90:	hlt    
  411f91:	xchg   esp,esi
  411f93:	test   DWORD PTR [edi+ebx*2],0x8c2717a8
  411f9a:	neg    BYTE PTR [ebx]
  411f9c:	test   al,0x7b
  411f9e:	push   ebx
  411f9f:	dec    edi
  411fa0:	nop
  411fa1:	fcom   DWORD PTR [ecx-0x7dad5b01]
  411fa7:	adc    DWORD PTR [ecx-0x74],esp
  411faa:	retf   0x555d
  411fad:	mov    ebx,0x77437374
  411fb2:	add    DWORD PTR [ebp+ecx*1+0x1a30bf0e],esp
  411fb9:	arpl   WORD PTR [ecx+0x6eb97928],dx
  411fbf:	mov    DWORD PTR [ecx+0x1e],ecx
  411fc2:	lea    edx,[ebp+edx*2-0x7ea9a28f]
  411fc9:	push   ebp
  411fca:	add    edi,edx
  411fcc:	scas   eax,DWORD PTR es:[edi]
  411fcd:	ret    0x33b6
  411fd0:	xchg   edx,eax
  411fd1:	aam    0xc2
  411fd3:	fdiv   DWORD PTR [edi-0x11]
  411fd6:	mov    ebx,0xb8bdb362
  411fdb:	cvtpi2ps xmm5,QWORD PTR [eax+0x2c993505]
  411fe2:	inc    ebx
  411fe3:	dec    BYTE PTR [ebx+ebp*2+0x2a]
  411fe7:	jmp    0xb273f692
  411fec:	std    
  411fed:	idiv   BYTE PTR [ebp-0x23]
  411ff0:	sbb    BYTE PTR es:[ecx+0x2c860a],dh
  411ff7:	icebp  
  411ff8:	jae    0x411fc2
  411ffa:	mov    ebp,0x897da67d
  411fff:	pushf  
  412000:	jo     0x411fa8
  412002:	jp     0x411feb
  412004:	add    eax,0x404126d
  412009:	ds loopne 0x41205b
  41200c:	jno    0x412032
  41200e:	cmp    esp,ebp
  412010:	fcomp  st(0)
  412012:	sub    dl,dl
  412014:	add    edi,esi
  412016:	jne    0x412004
  412018:	aad    0xac
  41201a:	ret    0x2385
  41201d:	ds pop ebx
  41201f:	jmp    0x411fc8
  412021:	or     al,0xbe
  412023:	aaa    
  412024:	jg     0x41206f
  412026:	test   edx,edx
  412028:	int    0x40
  41202a:	cmp    DWORD PTR [esi+0x44],edi
  41202d:	jecxz  0x411fbb
  41202f:	dec    eax
  412030:	popa   
  412031:	rcl    DWORD PTR [ecx+0xc4adf9d],1
  412037:	sbb    bh,al
  412039:	fidiv  WORD PTR [ecx-0x39412196]
  41203f:	mov    ch,0x76
  412041:	cwde   
  412042:	ret    
  412043:	fs inc esi
  412045:	push   cs
  412046:	outs   dx,DWORD PTR ds:[esi]
  412047:	shl    DWORD PTR [esi],1
  412049:	(bad)  
  41204a:	xchg   ebx,eax
  41204b:	add    al,0x60
  41204d:	int3   
  41204e:	sub    DWORD PTR [ebx-0x5248e157],ecx
  412054:	in     al,dx
  412055:	mov    ebx,0x3b656da7
  41205a:	popa   
  41205b:	mov    esi,0xcd920e32
  412060:	fidivr DWORD PTR [ebp+0x78f97136]
  412066:	mov    bh,0xea
  412068:	es mov gs,esp
  41206b:	cdq    
  41206c:	mov    ds:0x882989e6,eax
  412071:	push   ds
  412072:	dec    esi
  412073:	sbb    ebp,DWORD PTR [edi-0x5ec06cf3]
  412079:	mov    edx,0xd55eb84d
  41207e:	fiadd  WORD PTR [edi+0x1e]
  412081:	sbb    eax,0x7072f23f
  412086:	push   esp
  412087:	add    ch,ch
  412089:	lahf   
  41208a:	cmp    ebx,edi
  41208c:	(bad)  
  41208d:	std    
  41208e:	sub    BYTE PTR [edx+0x61],0xd6
  412092:	or     DWORD PTR ss:[ebx],0x5097925d
  412099:	sbb    dh,ah
  41209b:	dec    edi
  41209c:	cld    
  41209d:	push   ebp
  41209e:	sub    DWORD PTR gs:[esi+0x5a207e27],esp
  4120a5:	inc    esi
  4120a6:	or     BYTE PTR [eax],al
  4120a8:	inc    ebx
  4120a9:	inc    eax
  4120aa:	orps   xmm3,XMMWORD PTR [ebx+ebp*2-0x22]
  4120af:	jae    0x412121
  4120b1:	popf   
  4120b2:	mov    ecx,edx
  4120b4:	ja     0x4120bd
  4120b6:	cmc    
  4120b7:	jae    0x412056
  4120b9:	add    ebx,DWORD PTR [esi+ecx*4]
  4120bc:	das    
  4120bd:	add    eax,0x771ba1cc
  4120c2:	dec    ebx
  4120c3:	xor    bh,0x78
  4120c6:	aaa    
  4120c7:	int3   
  4120c8:	pop    edx
  4120c9:	aaa    
  4120ca:	push   0xfffffffb
  4120cc:	dec    ebx
  4120cd:	add    BYTE PTR [esi-0xbd192a2],cl
  4120d3:	in     eax,dx
  4120d4:	fcomp  QWORD PTR [edi-0x2f]
  4120d7:	nop
  4120d8:	pushf  
  4120d9:	jg     0x412140
  4120db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120dc:	(bad)  
  4120dd:	jge    0x41209f
  4120df:	das    
  4120e0:	imul   ebx,DWORD PTR [edi],0xe2cf16a2
  4120e6:	pop    esp
  4120e7:	push   0xb5f6ce0f
  4120ec:	sub    DWORD PTR [edi-0x53],esi
  4120ef:	pop    eax
  4120f0:	in     al,dx
  4120f1:	scas   eax,DWORD PTR es:[edi]
  4120f2:	mov    WORD PTR [eax],fs
  4120f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120f5:	sub    eax,0xd9a2f899
  4120fa:	xchg   esi,eax
  4120fb:	loopne 0x412147
  4120fd:	ret    
  4120fe:	cli    
  4120ff:	mov    WORD PTR [ecx+edi*1-0x7a],cs
  412103:	mov    ch,BYTE PTR [edi-0x370c0b3e]
  412109:	push   cs
  41210a:	inc    edi
  41210b:	lock push eax
  41210d:	das    
  41210e:	lahf   
  41210f:	shr    edx,cl
  412111:	leave  
  412112:	test   DWORD PTR [ebp+edi*1-0x27ec03f6],edx
  412119:	imul   eax,DWORD PTR [edi-0x6a36443a],0xffffffb4
  412120:	push   ss
  412121:	stc    
  412122:	ins    BYTE PTR es:[edi],dx
  412123:	js     0x412107
  412125:	mov    eax,edi
  412127:	cmp    DWORD PTR [ecx-0x5e],esp
  41212a:	test   DWORD PTR [bp+di],0xd2b60291
  412131:	mov    ch,0x81
  412133:	pop    edi
  412134:	mov    esp,0x7da2c6f3
  412139:	in     eax,0x80
  41213b:	xchg   BYTE PTR [esi-0x67ce56db],dh
  412141:	jle    0x41213e
  412143:	cld    
  412144:	cmp    dl,cl
  412146:	das    
  412147:	fs (bad) 
  412149:	cs jae 0x412103
  41214c:	es fwait
  41214e:	loop   0x41211d
  412150:	push   esp
  412151:	push   ss
  412152:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412153:	cdq    
  412154:	mov    ah,BYTE PTR [ebx]
  412156:	mov    ch,0xc5
  412158:	int    0x4
  41215a:	popa   
  41215b:	adc    eax,0x7693d02c
  412160:	jg     0x412162
  412162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412163:	push   es
  412164:	test   al,0x9e
  412166:	stos   BYTE PTR es:[edi],al
  412167:	sbb    BYTE PTR [eax+ecx*2+0x5ff818a0],dl
  41216e:	sub    al,0xb1
  412170:	outs   dx,BYTE PTR ds:[esi]
  412171:	(bad)  
  412172:	jmp    0x4121d8
  412174:	add    edi,DWORD PTR [eax+0x6aa8c284]
  41217a:	std    
  41217b:	imul   ebx,DWORD PTR [edx],0x7b
  41217e:	das    
  41217f:	test   BYTE PTR [ebx+0x17431c63],cl
  412185:	mov    eax,ds:0xd1fc6570
  41218a:	mov    bl,bh
  41218c:	sahf   
  41218d:	bound  edx,QWORD PTR [ebx+ebp*2]
  412190:	jge    0x412201
  412192:	xchg   ebp,eax
  412193:	icebp  
  412194:	sub    ah,BYTE PTR [ebp-0x57]
  412197:	pop    es
  412198:	adc    al,cl
  41219a:	xchg   esi,eax
  41219b:	pop    edi
  41219c:	outs   dx,BYTE PTR ds:[esi]
  41219d:	out    dx,al
  41219e:	rcr    DWORD PTR [eax],cl
  4121a0:	jnp    0x4121ff
  4121a2:	adc    BYTE PTR gs:[ebp-0x4d],dh
  4121a6:	sub    al,0x0
  4121a8:	popf   
  4121a9:	push   0xd6bf09f9
  4121ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121af:	mov    ?,WORD PTR [edx]
  4121b1:	lods   al,BYTE PTR ds:[esi]
  4121b2:	sub    edi,DWORD PTR [ebp-0x1d]
  4121b5:	dec    ebp
  4121b6:	jecxz  0x412211
  4121b8:	jno    0x412239
  4121ba:	mov    edi,0xe46a6204
  4121bf:	add    al,0x45
  4121c1:	lahf   
  4121c2:	mov    ebp,0x946e0fa9
  4121c7:	loopne 0x41221b
  4121c9:	pushf  
  4121ca:	xchg   esi,eax
  4121cb:	pop    ebp
  4121cc:	push   eax
  4121cd:	add    al,0x63
  4121cf:	cmp    DWORD PTR [edi],ebp
  4121d1:	pop    edx
  4121d2:	or     al,0x88
  4121d4:	loopne 0x412194
  4121d6:	or     DWORD PTR [ebx-0x71],ebp
  4121d9:	lahf   
  4121da:	mov    bh,0x17
  4121dc:	mov    ah,0x22
  4121de:	mov    eax,0x2e13060b
  4121e3:	sub    DWORD PTR [esi+0x10],esp
  4121e6:	hlt    
  4121e7:	and    ebx,eax
  4121e9:	xor    edi,DWORD PTR [edx-0x68c57edf]
  4121ef:	sbb    edx,DWORD PTR [eax-0x2225a82c]
  4121f5:	lock cld 
  4121f7:	xchg   DWORD PTR [ecx+0x964a356],edx
  4121fd:	and    BYTE PTR [ebp+0x7fd40a9],0x95
  412204:	ror    ebx,0x8a
  412207:	push   ebp
  412208:	test   DWORD PTR [eax+0x344a1710],eax
  41220e:	aaa    
  41220f:	out    0xcd,al
  412211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412212:	mov    cl,0xe7
  412214:	pushf  
  412215:	clc    
  412216:	xchg   edi,eax
  412217:	lods   al,BYTE PTR ds:[esi]
  412218:	push   edi
  412219:	(bad)  
  41221a:	mov    eax,ds:0x90248b07
  41221f:	scas   eax,DWORD PTR es:[edi]
  412220:	sub    dl,BYTE PTR [edx+eiz*2-0x33]
  412224:	push   eax
  412225:	mov    dl,0x52
  412227:	xchg   esp,eax
  412228:	(bad)  
  412229:	xchg   ecx,eax
  41222a:	in     al,0xa0
  41222c:	mov    BYTE PTR [ecx+0x7d2ed1f4],bl
  412232:	out    0x3b,al
  412234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412235:	mov    dh,0xce
  412237:	daa    
  412238:	jno    0x4121c3
  41223a:	cmp    eax,0x5d5bfa58
  41223f:	mov    esp,0xbe627f51
  412244:	js     0x412213
  412246:	pusha  
  412247:	cmp    esp,ebp
  412249:	test   eax,0xda8458c8
  41224e:	fimul  WORD PTR [ecx-0x60b4fe31]
  412254:	jl     0x4122ce
  412256:	pop    ds
  412257:	out    dx,al
  412258:	out    dx,al
  412259:	fcomp  QWORD PTR [edi+0x2a]
  41225c:	dec    esp
  41225d:	sbb    eax,0xf3cee931
  412262:	inc    esi
  412263:	outs   dx,DWORD PTR ds:[esi]
  412264:	xor    bh,dh
  412266:	jge    0x41228f
  412268:	inc    ebp
  412269:	mov    edi,0xc90cf2a0
  41226e:	push   ecx
  41226f:	in     al,dx
  412270:	adc    BYTE PTR [eax+0x3d8fcdd8],dl
  412276:	cmp    edi,DWORD PTR ds:0x3743516b
  41227c:	mov    esp,esp
  41227e:	jne    0x412233
  412280:	mov    ecx,0x695cbd4b
  412285:	nop
  412286:	mov    eax,0xe2552de8
  41228b:	sbb    al,0x1e
  41228d:	xchg   ebp,eax
  41228e:	stos   DWORD PTR es:[edi],eax
  41228f:	idiv   esp
  412291:	and    dl,cl
  412293:	xor    esi,DWORD PTR [ecx-0x72]
  412296:	lock (bad) 
  412298:	pop    edi
  412299:	jmp    0x412247
  41229b:	es retf 
  41229d:	repnz or dh,BYTE PTR [ecx-0x5c8b9054]
  4122a4:	jns    0x4122eb
  4122a6:	adc    al,0x8c
  4122a8:	lods   al,BYTE PTR ds:[esi]
  4122a9:	shl    DWORD PTR ds:0x2c3794c,cl
  4122af:	sub    edx,ecx
  4122b1:	dec    edx
  4122b2:	push   es
  4122b3:	jne    0x4122e5
  4122b5:	jae    0x412297
  4122b7:	mov    eax,edi
  4122b9:	cld    
  4122ba:	add    edi,esi
  4122bc:	push   eax
  4122bd:	jge    0x41224d
  4122bf:	dec    eax
  4122c0:	fwait
  4122c1:	call   0xc2e2dea4
  4122c6:	push   es
  4122c7:	push   ss
  4122c8:	popf   
  4122c9:	popa   
  4122ca:	jmp    0x412258
  4122cc:	inc    eax
  4122cd:	jmp    0x412263
  4122cf:	xchg   DWORD PTR ds:0xf49b7fbb,ebx
  4122d5:	int3   
  4122d6:	jb     0x41226f
  4122d8:	sub    dh,BYTE PTR [ecx]
  4122da:	aaa    
  4122db:	cwde   
  4122dc:	adc    eax,0x7958473e
  4122e1:	in     eax,dx
  4122e2:	mov    ah,0xbb
  4122e4:	aam    0xc7
  4122e6:	lahf   
  4122e7:	retf   0x11b7
  4122ea:	test   DWORD PTR [ecx+0x8],0x22ab01fc
  4122f1:	jl     0x412319
  4122f3:	in     al,0xef
  4122f5:	stos   DWORD PTR es:[edi],eax
  4122f6:	mov    eax,0x89e63e0c
  4122fb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122fd:	jne    0x4122ef
  4122ff:	adc    BYTE PTR [ebx-0x1c],dh
  412302:	fild   WORD PTR [ecx+edi*1]
  412305:	cli    
  412306:	adc    edi,DWORD PTR [ecx]
  412308:	cli    
  412309:	into   
  41230a:	cmc    
  41230b:	sbb    al,0x4e
  41230d:	clc    
  41230e:	mov    dh,0x1f
  412310:	and    ebx,DWORD PTR [ebx+0x20231f56]
  412316:	into   
  412317:	add    BYTE PTR gs:[esi+0x34],al
  41231b:	xchg   ebx,eax
  41231c:	out    0x2a,eax
  41231e:	mov    dh,0xf0
  412320:	inc    esi
  412321:	or     BYTE PTR [ecx],al
  412323:	jmp    0x4324:0x1b5b51cd
  41232a:	mov    DWORD PTR [eax+0xd],ebx
  41232d:	loop   0x4122f0
  41232f:	cmp    BYTE PTR [esi],bh
  412331:	loopne 0x412357
  412333:	ja     0x41237b
  412335:	sub    cl,BYTE PTR [edi+ecx*2]
  412338:	fadd   DWORD PTR [esi+0x29baa3d0]
  41233e:	lea    edx,[ecx+0xc]
  412341:	push   es
  412342:	loop   0x412385
  412344:	(bad)  
  412346:	push   ecx
  412347:	icebp  
  412348:	pop    es
  412349:	jmp    0x412377
  41234b:	add    ah,BYTE PTR [eax-0x47fe1475]
  412351:	add    cl,BYTE PTR [eax+0x49]
  412354:	mov    ecx,0x7bb3b84b
  412359:	fist   DWORD PTR [edx-0x133ab5e3]
  41235f:	jmp    0x2853d23b
  412364:	or     DWORD PTR [eax-0x4a],esi
  412367:	mov    fs,WORD PTR [edx+edi*4-0x1c]
  41236b:	push   eax
  41236c:	in     al,dx
  41236d:	dec    esi
  41236e:	mov    al,0x85
  412370:	push   ebx
  412371:	pusha  
  412372:	nop
  412373:	les    esi,FWORD PTR [edx+0x34d24d93]
  412379:	xchg   esi,eax
  41237a:	jae    0x4123d9
  41237c:	into   
  41237d:	pop    ss
  41237e:	aaa    
  41237f:	das    
  412380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412381:	inc    edi
  412382:	jno    0x412315
  412384:	stc    
  412385:	add    DWORD PTR [eax+0x455b7e9d],ebx
  41238b:	repz xchg ebp,eax
  41238d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41238e:	xor    eax,DWORD PTR [bx-0x7ce9]
  412393:	cmp    eax,0x73d5d620
  412398:	mov    WORD PTR [eax-0x39],?
  41239b:	test   BYTE PTR [ebp+0x965ce5f],dh
  4123a1:	mov    ecx,0xb068d217
  4123a6:	inc    edi
  4123a7:	call   0xfa9c:0x682b0d1f
  4123ae:	pop    ecx
  4123af:	add    DWORD PTR [ebp-0x2c985d3a],0xfffffffa
  4123b6:	push   ds
  4123b7:	push   0xbb29034c
  4123bc:	sbb    eax,0xf2ad6f9f
  4123c1:	or     ecx,DWORD PTR [esp+ebp*1]
  4123c4:	adc    edx,DWORD PTR [ebx]
  4123c6:	inc    esp
  4123c7:	dec    edx
  4123c8:	leave  
  4123c9:	loope  0x412373
  4123cb:	loopne 0x4123d5
  4123cd:	fisubr WORD PTR [edi-0x27]
  4123d0:	bound  edx,QWORD PTR [eax]
  4123d2:	xlat   BYTE PTR ds:[ebx]
  4123d3:	into   
  4123d4:	mov    ah,0x21
  4123d6:	aam    0xf6
  4123d8:	and    al,0x8e
  4123da:	mov    ds:0xc1170b6f,al
  4123df:	shl    BYTE PTR [esi],1
  4123e1:	mov    esp,0xce510a2f
  4123e6:	mov    al,0x7d
  4123e8:	rol    BYTE PTR [ebp-0x2c],1
  4123eb:	adc    BYTE PTR [ebx],0x5e
  4123ee:	dec    edi
  4123ef:	mov    ah,BYTE PTR [ebx+0x6dcced92]
  4123f5:	jle    0x412378
  4123f7:	ins    DWORD PTR es:[edi],dx
  4123f8:	lea    eax,[edi]
  4123fa:	sbb    eax,0xb410156d
  4123ff:	mov    dh,BYTE PTR [eax+ebx*1-0x20]
  412403:	cmp    eax,esi
  412405:	and    eax,0xd91e5040
  41240a:	sbb    ecx,DWORD PTR [esi+0x108b2ab7]
  412410:	mov    edi,0x9681a293
  412415:	adc    DWORD PTR [eax-0x2897e710],0xffffffec
  41241c:	jl     0x41248e
  41241e:	es sti 
  412420:	pcmpgtb mm6,mm5
  412423:	jl     0x41247c
  412425:	popa   
  412426:	inc    ecx
  412427:	bound  edx,QWORD PTR [esi]
  412429:	fisubr DWORD PTR [edi-0x10]
  41242c:	les    ebx,FWORD PTR [esp+edi*8]
  41242f:	imul   esp,DWORD PTR [edi],0x15
  412432:	das    
  412433:	bound  esi,QWORD PTR [ecx-0x7f471816]
  412439:	mov    BYTE PTR [esi+0x25111ea3],0x3c
  412440:	jl     0x412452
  412442:	inc    ebp
  412443:	dec    esp
  412444:	into   
  412445:	daa    
  412446:	std    
  412447:	dec    edx
  412448:	pop    edx
  412449:	ror    BYTE PTR [edi+0x5c],cl
  41244c:	clc    
  41244d:	inc    ecx
  41244e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41244f:	int3   
  412450:	inc    esi
  412451:	scas   eax,DWORD PTR es:[edi]
  412452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412453:	dec    esi
  412454:	xor    al,0x14
  412456:	fwait
  412457:	mov    DWORD PTR [edx],ebp
  412459:	cmc    
  41245a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41245b:	push   edi
  41245c:	jbe    0x412402
  41245e:	repnz mov esp,0x534a4ec8
  412464:	xor    BYTE PTR [esi-0x11920d8],0xa4
  41246b:	loope  0x412447
  41246d:	popa   
  41246e:	stc    
  41246f:	and    bl,BYTE PTR [edi+eax*1-0x6ee6da92]
  412476:	out    0xc0,eax
  412478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412479:	mov    dh,0x5c
  41247b:	xor    edx,esi
  41247d:	adc    BYTE PTR [ecx+0x23],ch
  412480:	adc    ebx,DWORD PTR [esi]
  412482:	addr16 jge 0x4124d5
  412485:	dec    esp
  412486:	aad    0x92
  412488:	repz xchg edx,eax
  41248a:	mov    al,0x4c
  41248c:	(bad)  
  41248e:	xor    dl,BYTE PTR [edx+0x50012c1]
  412494:	xchg   esi,eax
  412495:	ror    bh,1
  412497:	mov    edx,0xa89023b3
  41249c:	mov    eax,ds:0xa1e7022c
  4124a1:	adc    DWORD PTR [ebx],eax
  4124a3:	in     al,0x6e
  4124a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124a6:	push   dx
  4124a8:	xchg   ecx,eax
  4124a9:	loop   0x4124cc
  4124ab:	inc    ebp
  4124ac:	jl     0x412522
  4124ae:	ret    0x8f9d
  4124b1:	sub    ebp,ecx
  4124b3:	xor    ebp,DWORD PTR [ebp-0x37]
  4124b6:	jp     0x41251c
  4124b8:	iret   
  4124b9:	pop    esp
  4124ba:	jecxz  0x41247c
  4124bc:	arpl   WORD PTR [ebx+0x43],dx
  4124bf:	push   ss
  4124c0:	adc    al,0x9
  4124c2:	pop    ds
  4124c3:	xchg   ecx,eax
  4124c4:	sub    ecx,eax
  4124c6:	jne    0x412481
  4124c8:	mov    ds:0xf0997641,al
  4124cd:	mov    ecx,0x5d41b6e3
  4124d2:	out    0xee,al
  4124d4:	rcl    DWORD PTR [ecx-0x5e60ade5],cl
  4124da:	sub    eax,0xb5e200a4
  4124df:	(bad)  
  4124e0:	repnz shl DWORD PTR [ebp+0x7f],1
  4124e4:	add    al,0x8c
  4124e6:	push   0x27ffc3b2
  4124eb:	jp     0x412548
  4124ed:	push   ecx
  4124ee:	mov    ebp,0xe1b46379
  4124f3:	inc    BYTE PTR [esi]
  4124f5:	cmp    eax,0xa93daac
  4124fa:	stc    
  4124fb:	jae    0x4124c8
  4124fd:	pop    ebx
  4124fe:	jge    0x4124be
  412500:	loop   0x4124f1
  412502:	in     al,dx
  412503:	adc    DWORD PTR [edx],esp
  412505:	xchg   ebx,eax
  412506:	jle    0x412524
  412508:	out    dx,al
  412509:	jle    0x4124b1
  41250b:	lea    edx,cs:[esi+0x69]
  41250f:	scas   al,BYTE PTR es:[edi]
  412510:	dec    ebx
  412511:	cmp    DWORD PTR [edx-0x42192cc5],ecx
  412517:	loopne 0x41255e
  412519:	aas    
  41251a:	sub    al,0xbf
  41251c:	jmp    0x41251e
  41251e:	popf   
  41251f:	lods   eax,DWORD PTR ds:[esi]
  412520:	enter  0xb2fb,0x2
  412524:	dec    edx
  412525:	mov    dl,dl
  412527:	pop    esp
  412528:	jbe    0x41259f
  41252a:	pop    edi
  41252b:	(bad)  
  41252d:	lods   eax,DWORD PTR ds:[esi]
  41252e:	or     al,0x62
  412530:	mov    ch,0xbe
  412532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412533:	sub    esp,DWORD PTR [ebp-0x5f]
  412536:	repnz in al,0xa5
  412539:	sbb    ecx,esi
  41253b:	test   BYTE PTR [ecx+ebx*2-0x66],bl
  41253f:	xlat   BYTE PTR ds:[ebx]
  412540:	dec    eax
  412541:	inc    esp
  412542:	test   eax,0xa5c98396
  412547:	mov    esi,0x382be4c8
  41254c:	shl    BYTE PTR [ecx],1
  41254e:	mov    bl,0x59
  412550:	xor    cl,BYTE PTR [ebp-0x63e4d110]
  412556:	xchg   esp,eax
  412557:	pop    edx
  412558:	and    BYTE PTR [esi],0xec
  41255b:	aam    0xbc
  41255d:	pop    eax
  41255e:	jo     0x412508
  412560:	out    0x7,eax
  412562:	mov    dh,0x67
  412564:	cdq    
  412565:	test   ebp,ebp
  412567:	lock iret 
  412569:	dec    eax
  41256a:	cmp    BYTE PTR [esi+0x6b08031b],0x91
  412571:	inc    eax
  412572:	test   eax,0x263f3996
  412577:	xor    eax,DWORD PTR [edi+0x3f]
  41257a:	shr    DWORD PTR [eax-0x71],cl
  41257d:	mov    ch,0xae
  41257f:	pop    esi
  412580:	jge    0x41258b
  412582:	dec    eax
  412583:	sbb    edx,DWORD PTR [ebx+0xf]
  412586:	sbb    eax,0x5fd5e1e3
  41258b:	xor    esp,DWORD PTR [ebp-0x5a]
  41258e:	jmp    0x4125ff
  412590:	cmp    BYTE PTR [ecx-0xd398161],0x79
  412597:	jg     0x4125e4
  412599:	sub    al,0x4d
  41259b:	dec    esi
  41259c:	(bad)  
  41259d:	aam    0xc2
  41259f:	gs jno 0x412531
  4125a2:	sbb    DWORD PTR [edx],eax
  4125a4:	or     eax,0x4fe0bd2a
  4125a9:	in     al,dx
  4125aa:	retf   0xf94
  4125ad:	mov    esp,eax
  4125af:	mov    ebx,0x6d95495
  4125b4:	ss sub al,0xb3
  4125b7:	mov    bh,0x49
  4125b9:	pop    esi
  4125ba:	loopne 0x412615
  4125bc:	cwde   
  4125bd:	ja     0x412599
  4125bf:	loope  0x412596
  4125c1:	sub    edi,DWORD PTR [eax]
  4125c3:	shr    DWORD PTR [edi],0xca
  4125c6:	or     BYTE PTR [edx+0x5457446a],cl
  4125cc:	call   0x58676c97
  4125d1:	xchg   ebp,eax
  4125d2:	dec    BYTE PTR [esi-0x384c9049]
  4125d8:	int    0x9f
  4125da:	(bad)  
  4125dc:	sub    eax,0x96418e14
  4125e1:	outs   dx,DWORD PTR ds:[esi]
  4125e2:	xlat   BYTE PTR ds:[ebx]
  4125e3:	mov    bl,BYTE PTR [edx+esi*8-0x74]
  4125e7:	or     DWORD PTR [edi+edx*8-0x5e1dd6a2],esi
  4125ee:	jge    0x412629
  4125f0:	pop    ss
  4125f1:	inc    esi
  4125f2:	mov    fs,WORD PTR [eax-0x7ce34f28]
  4125f8:	push   0xffffffde
  4125fa:	add    al,0x87
  4125fc:	sbb    ch,BYTE PTR [ebp-0x74]
  4125ff:	sub    ebp,esp
  412601:	xlat   BYTE PTR ds:[ebx]
  412602:	fst    DWORD PTR [edi+0x1e9e5719]
  412608:	dec    edi
  412609:	in     al,0x58
  41260b:	mov    WORD PTR [ebx+0x15],ss
  41260e:	adc    BYTE PTR [eax+edx*8],ch
  412611:	mov    eax,0x8b3f0d18
  412616:	je     0x4125b3
  412618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412619:	mov    eax,ds:0x7ccbe4a9
  41261e:	xor    al,0x54
  412620:	ja     0x4125c1
  412622:	mov    edi,0x88e5c613
  412627:	(bad)  
  412628:	nop
  412629:	fwait
  41262a:	jp     0x412627
  41262c:	(bad)  
  41262d:	dec    esp
  41262e:	xchg   DWORD PTR [eax-0x21],ebp
  412631:	fmul   DWORD PTR [esi+0x4e]
  412634:	mov    ah,0xb4
  412636:	pusha  
  412637:	fwait
  412638:	inc    esi
  412639:	(bad)  
  41263d:	repnz inc ebx
  41263f:	lds    esp,FWORD PTR [esi+0x21]
  412642:	or     eax,0x11cb7455
  412647:	rol    DWORD PTR [edx+0x261a8b47],0x10
  41264e:	jmp    0xc8c9:0x9f8aec5a
  412655:	mov    al,0x20
  412657:	pop    es
  412658:	stos   DWORD PTR es:[edi],eax
  412659:	rcr    BYTE PTR [ecx+0x2f],0x98
  41265d:	adc    al,0x78
  41265f:	inc    eax
  412660:	mov    al,ds:0xe393555f
  412665:	jge    0x412601
  412667:	jae    0x4126de
  412669:	jns    0x4125f1
  41266b:	inc    esi
  41266c:	faddp  st(1),st
  41266e:	mov    bh,0xc7
  412670:	jmp    0xb3b8:0xf56aafe7
  412677:	test   al,0xd2
  412679:	add    ebp,eax
  41267b:	and    eax,0x3a446925
  412680:	push   0x47
  412682:	sub    ah,BYTE PTR [edi+0x594a539b]
  412688:	test   BYTE PTR [edi-0x46041b2b],dl
  41268e:	rcl    BYTE PTR [edx*4-0x1f75fe5f],1
  412695:	lock fs xchg ebx,eax
  412698:	pop    ecx
  412699:	test   WORD PTR cs:[edi],0xd81f
  41269f:	fld    TBYTE PTR [ecx-0x6a]
  4126a2:	es dec ebx
  4126a4:	loope  0x4126eb
  4126a6:	mov    bl,0x4f
  4126a8:	jno    0x412660
  4126aa:	out    0x45,eax
  4126ac:	(bad)  
  4126ad:	mov    dl,0x69
  4126af:	cmp    al,0x44
  4126b1:	std    
  4126b2:	in     eax,0x92
  4126b4:	call   FWORD PTR [eax+0x5]
  4126b7:	xchg   edi,eax
  4126b8:	arpl   WORD PTR ds:0x51869266,si
  4126be:	inc    ebx
  4126bf:	call   0x2faea58f
  4126c4:	leave  
  4126c5:	and    DWORD PTR [edx-0x38d244d9],eax
  4126cb:	jl     0x412670
  4126cd:	adc    bl,BYTE PTR [eax-0x23]
  4126d0:	cmp    eax,0x4255af18
  4126d5:	inc    ebx
  4126d6:	inc    ebp
  4126d7:	cmc    
  4126d8:	inc    edi
  4126da:	(bad)  [edi-0x13]
  4126dd:	call   0xbf6d7e38
  4126e2:	pop    esi
  4126e3:	mov    dl,0xb8
  4126e5:	xchg   ebx,eax
  4126e6:	sbb    DWORD PTR [eax-0x3a],eax
  4126e9:	jbe    0x41274d
  4126eb:	dec    ecx
  4126ec:	sbb    eax,0xba0faeb3
  4126f1:	call   0x51a1469f
  4126f6:	sub    dl,dh
  4126f8:	jo     0x4126ad
  4126fa:	ds sbb al,0x6
  4126fd:	bound  esi,QWORD PTR [eax-0x73]
  412700:	dec    esi
  412701:	jns    0x412741
  412703:	push   0x22a03ffd
  412708:	lahf   
  412709:	add    dh,dl
  41270b:	pop    edi
  41270c:	loop   0x412711
  41270e:	cmp    al,bh
  412710:	leave  
  412711:	out    dx,al
  412712:	fst    QWORD PTR [ebx]
  412714:	outs   dx,BYTE PTR ds:[esi]
  412715:	stc    
  412716:	repnz outs dx,DWORD PTR ds:[esi]
  412718:	and    al,0x3d
  41271a:	jnp    0x4126e8
  41271c:	inc    ebp
  41271d:	sbb    esi,DWORD PTR [edi+0x29]
  412720:	(bad)  
  412721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412722:	std    
  412723:	push   ecx
  412724:	pop    ebp
  412725:	int    0xd0
  412727:	retf   
  412728:	lea    edx,[ebp-0x1a]
  41272b:	xor    dh,BYTE PTR ds:0xe65c45a5
  412731:	jne    0x4127af
  412733:	pop    esp
  412734:	jne    0x4126cd
  412736:	loop   0x41273a
  412738:	pushf  
  412739:	lds    esp,FWORD PTR [eax-0x1657833d]
  41273f:	jmp    DWORD PTR [ebx+0x52e4289a]
  412745:	movhps xmm4,QWORD PTR [eax+0x31]
  412749:	add    al,dh
  41274b:	inc    ebx
  41274c:	es mov bl,0xec
  41274f:	aaa    
  412750:	(bad)  
  412751:	pop    es
  412752:	out    0x44,al
  412754:	push   0x752ac86b
  412759:	daa    
  41275a:	mov    dl,0x65
  41275c:	adc    esi,DWORD PTR [ebp+0x7f]
  41275f:	scas   eax,DWORD PTR es:[edi]
  412760:	out    dx,al
  412761:	pop    es
  412762:	packuswb mm2,QWORD PTR [ebx]
  412765:	mov    edi,0x2e10e1cf
  41276a:	ds (bad) 
  41276c:	mov    ds:0x62f90ff9,eax
  412771:	es pop ss
  412773:	jg     0x4127a0
  412775:	xchg   ebx,eax
  412776:	aas    
  412777:	loope  0x412752
  412779:	push   0x33c1819d
  41277e:	gs stos BYTE PTR es:[edi],al
  412780:	add    BYTE PTR [esi-0x10],dl
  412783:	test   DWORD PTR [ebx+edi*8],ecx
  412786:	inc    edx
  412787:	add    BYTE PTR [esi],cl
  412789:	sub    dh,BYTE PTR [eax]
  41278b:	xchg   edx,eax
  41278c:	jl     0x4127c2
  41278e:	cmp    dl,BYTE PTR ds:0x6c9b3757
  412794:	or     DWORD PTR [edi-0x44],esp
  412797:	add    eax,0x36bfd864
  41279c:	ins    DWORD PTR es:[edi],dx
  41279d:	mov    esi,0x15e310d6
  4127a2:	jg     0x412818
  4127a4:	cmp    BYTE PTR [edx+0x168a6d6],0xc2
  4127ab:	cmc    
  4127ac:	das    
  4127ad:	jb     0x41274d
  4127af:	daa    
  4127b0:	add    al,al
  4127b2:	int3   
  4127b3:	pop    edx
  4127b4:	data16 loop 0x41280d
  4127b7:	sbb    al,0x8d
  4127b9:	adc    al,0x73
  4127bb:	or     DWORD PTR [ebx+0x2a],esi
  4127be:	cmp    BYTE PTR [ebp+eax*8+0x72],ah
  4127c2:	int3   
  4127c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c4:	dec    ebx
  4127c5:	pop    esi
  4127c6:	rcr    esi,0x91
  4127c9:	cli    
  4127ca:	bound  ebp,QWORD PTR es:0xce11fd15
  4127d1:	mov    bl,0xfd
  4127d3:	in     al,0x9f
  4127d5:	(bad)  
  4127d6:	sub    al,0x23
  4127d8:	fmul   DWORD PTR [eax+0x76]
  4127db:	fidiv  DWORD PTR ds:0xc099bc51
  4127e1:	nop
  4127e2:	test   ch,bh
  4127e4:	shl    BYTE PTR [eax+0x53],cl
  4127e7:	inc    edx
  4127e8:	repz ds push ebp
  4127eb:	add    DWORD PTR ds:0x26618176,edi
  4127f1:	mov    eax,ds:0x1c72a38a
  4127f6:	fdivr  DWORD PTR [edi+0x49]
  4127f9:	cdq    
  4127fa:	les    esi,FWORD PTR [ebx+0xd]
  4127fd:	and    eax,0xa958b9c6
  412802:	out    dx,al
  412803:	and    al,0x44
  412805:	sub    esp,DWORD PTR [ebx+0x78]
  412808:	je     0x412870
  41280a:	sub    BYTE PTR [ebx+0x5831af3b],dl
  412810:	mov    dl,0xc6
  412812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412813:	lods   al,BYTE PTR ds:[esi]
  412814:	les    ecx,FWORD PTR [ecx+0x1e]
  412817:	fiadd  WORD PTR [edi]
  412819:	mov    ecx,0x5de1226e
  41281e:	and    DWORD PTR [ebx-0x4c],ebp
  412821:	push   esi
  412822:	cwde   
  412823:	loope  0x4127fd
  412825:	jae    0x412824
  412827:	cmp    BYTE PTR [eax-0x1b],0x3b
  41282b:	cwde   
  41282c:	pop    edi
  41282d:	and    ch,0x14
  412830:	push   ecx
  412831:	repnz sbb eax,0xb3644e07
  412837:	inc    edx
  412838:	lock (bad) 
  41283a:	and    edi,DWORD PTR [ebp-0x1f614da5]
  412840:	mov    ds:0xe5a0b2ce,eax
  412845:	shl    DWORD PTR [esi+esi*8+0x13],1
  412849:	stos   DWORD PTR es:[edi],eax
  41284a:	ins    DWORD PTR es:[edi],dx
  41284b:	loopne 0x4127d0
  41284d:	pop    esi
  41284e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41284f:	gs xchg esp,eax
  412851:	arpl   WORD PTR [edi-0x2f5923],dx
  412857:	test   DWORD PTR [edi+0x28],0xce6be232
  41285e:	(bad)  
  41285f:	fcom   QWORD PTR [esi-0x65]
  412862:	test   eax,0x2eb66cf
  412867:	je     0x4128b1
  412869:	ffree  st(1)
  41286b:	(bad)  
  41286d:	fucomip st,st(2)
  41286f:	lods   eax,DWORD PTR ds:[esi]
  412870:	sub    DWORD PTR [edi-0x6e],ecx
  412873:	add    BYTE PTR [ebx-0x760dd872],0x15
  41287a:	fild   QWORD PTR [edi-0x55]
  41287d:	jae    0x412873
  41287f:	jo     0x4128b7
  412881:	push   esi
  412882:	loope  0x4128eb
  412884:	or     DWORD PTR ds:0xdec27917,ebp
  41288a:	xor    eax,0xb21107ba
  41288f:	dec    edi
  412890:	pop    DWORD PTR [esi]
  412892:	mov    ?,WORD PTR [ebp-0x64]
  412895:	shr    dh,1
  412897:	adc    bh,BYTE PTR [ecx-0x17c10fb7]
  41289d:	adc    ch,0xb9
  4128a0:	add    DWORD PTR [esi+0x22],ecx
  4128a3:	iret   
  4128a4:	gs out dx,eax
  4128a6:	lds    ebp,FWORD PTR [edi]
  4128a8:	xchg   esp,eax
  4128a9:	mov    eax,ds:0x858fa650
  4128ae:	ja     0x412830
  4128b0:	jbe    0x412837
  4128b2:	retf   0x80fd
  4128b5:	mov    ebx,0xf4e8c6f5
  4128ba:	in     al,dx
  4128bb:	and    ebx,edx
  4128bd:	xor    ecx,esi
  4128bf:	cmp    al,0x21
  4128c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c2:	ret    
  4128c3:	push   ebx
  4128c4:	dec    edi
  4128c5:	add    esi,DWORD PTR [esi+0x5d5890d3]
  4128cb:	cmp    BYTE PTR [esi],bh
  4128cd:	xor    dh,BYTE PTR [ebx]
  4128cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128d0:	pop    es
  4128d1:	iret   
  4128d2:	jge    0x41294d
  4128d4:	mov    eax,0x2e428d89
  4128d9:	(bad)  
  4128da:	aaa    
  4128db:	push   cs
  4128dc:	xchg   ah,al
  4128de:	cmp    al,0xfb
  4128e0:	cmc    
  4128e1:	scas   al,BYTE PTR es:[edi]
  4128e2:	push   edx
  4128e3:	jmp    0x57005888
  4128e8:	jbe    0x4128c2
  4128ea:	pop    ecx
  4128eb:	xchg   BYTE PTR [eax],ch
  4128ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ee:	ret    0xb877
  4128f1:	ficomp WORD PTR [ecx]
  4128f3:	(bad)
  4128f6:	fild   DWORD PTR [edx+0x70d059b5]
  4128fc:	pop    eax
  4128fd:	mov    DWORD PTR [edx+eiz*2],esp
  412900:	imul   edx,esi,0xffffff90
  412903:	shl    BYTE PTR [ecx-0x1ee1756a],1
  412909:	arpl   WORD PTR [eax+0x3f],ax
  41290c:	sub    BYTE PTR [ebx+0x7],dl
  41290f:	fadd   DWORD PTR [edx-0x66]
  412912:	popf   
  412913:	clc    
  412914:	mul    BYTE PTR [eax+ebx*8]
  412917:	push   ds
  412918:	pop    ss
  412919:	jmp    0x41290d
  41291b:	push   esi
  41291c:	test   DWORD PTR [ebx+0x52],edi
  41291f:	adc    DWORD PTR [ecx-0x6aaf0071],esp
  412925:	outs   dx,BYTE PTR ds:[esi]
  412926:	fld    TBYTE PTR ds:0xbb9926ba
  41292c:	mov    dl,0x17
  41292e:	and    ebp,esp
  412930:	imul   ebp,DWORD PTR [esi],0x2067c20b
  412936:	shr    eax,1
  412938:	and    eax,0x79cfdfc7
  41293d:	add    bl,BYTE PTR [eax+0x47bf54ea]
  412943:	stos   DWORD PTR es:[edi],eax
  412944:	ins    BYTE PTR es:[edi],dx
  412945:	xchg   edx,eax
  412946:	add    DWORD PTR [esi+edi*1-0x66a2a0cf],esi
  41294d:	jmp    0x41292e
  41294f:	mov    esp,0x30dfa1da
  412954:	outs   dx,BYTE PTR ds:[esi]
  412955:	mov    ebx,0x66e09d3f
  41295a:	xor    eax,0xb65d41c3
  41295f:	popa   
  412960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412961:	mov    edx,0x3c688989
  412966:	mov    al,0x48
  412968:	jmp    0x4b808e63
  41296d:	aas    
  41296e:	outs   dx,BYTE PTR ds:[esi]
  41296f:	ins    BYTE PTR es:[edi],dx
  412970:	addr16 jge 0x412984
  412973:	out    dx,al
  412974:	(bad)  
  412975:	mov    al,ds:0x78b3398
  41297a:	push   ds
  41297b:	gs pushf 
  41297d:	clc    
  41297e:	icebp  
  41297f:	dec    esi
  412980:	bound  ecx,QWORD PTR [ebp-0x16]
  412983:	aam    0xf4
  412985:	not    edx
  412987:	or     al,0x2
  412989:	jp     0x412994
  41298b:	pop    eax
  41298c:	sar    cl,0xce
  41298f:	adc    BYTE PTR [esp+eiz*2+0x1f],ah
  412993:	cs mov bh,0x7c
  412996:	pop    esi
  412997:	xor    esp,ecx
  412999:	loop   0x41293f
  41299b:	arpl   ax,ax
  41299d:	fild   DWORD PTR [ebp-0x72d2dfc7]
  4129a3:	inc    eax
  4129a4:	push   ebx
  4129a5:	jne    0x41295e
  4129a7:	push   0xd8ee5746
  4129ac:	(bad)  
  4129ae:	push   ss
  4129af:	(bad)  
  4129b0:	jno    0x4129fa
  4129b2:	add    BYTE PTR [esi+ebp*2],ch
  4129b5:	(bad)  
  4129b6:	sbb    eax,DWORD PTR [edx+0xc698ba5]
  4129bc:	jb     0x412a3c
  4129be:	out    0xca,al
  4129c0:	call   FWORD PTR [ecx]
  4129c2:	lods   al,BYTE PTR ds:[esi]
  4129c3:	or     eax,DWORD PTR [ecx]
  4129c5:	fist   WORD PTR [eax+edx*2-0x5b]
  4129c9:	sbb    DWORD PTR [edx-0x60],esp
  4129cc:	(bad)  
  4129cd:	aas    
  4129ce:	in     eax,0xe
  4129d0:	scas   al,BYTE PTR es:[edi]
  4129d1:	(bad)  [ebp+0x45e24fc6]
  4129d7:	(bad)  
  4129d8:	stc    
  4129d9:	hlt    
  4129da:	and    eax,0x65b5e28d
  4129df:	push   0x35
  4129e1:	jno    0x4129e3
  4129e3:	xchg   DWORD PTR [edx+0x7],edi
  4129e6:	mul    ecx
  4129e8:	ret    0x4ac4
  4129eb:	mov    WORD PTR [ecx],es
  4129ed:	bound  ebp,QWORD PTR [esi-0x620af52f]
  4129f3:	mov    esp,0x5dea9a86
  4129f8:	xchg   ecx,eax
  4129f9:	aam    0x15
  4129fb:	jp     0x412a55
  4129fd:	dec    ecx
  4129fe:	sahf   
  4129ff:	sar    esp,1
  412a01:	lods   eax,DWORD PTR ds:[esi]
  412a02:	(bad)  
  412a03:	cmp    DWORD PTR [esi-0x779bf1b1],ecx
  412a09:	mov    esi,0xdbe04a61
  412a0e:	cmc    
  412a0f:	mov    DWORD PTR [esi],ecx
  412a11:	push   edi
  412a12:	mov    bl,0xa9
  412a14:	add    al,bl
  412a16:	retf   0x2654
  412a19:	pop    ebx
  412a1a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  412a1c:	sbb    al,0xc8
  412a1e:	cmp    al,bl
  412a20:	xchg   BYTE PTR [esi],ch
  412a22:	icebp  
  412a23:	xchg   esi,eax
  412a24:	inc    edi
  412a25:	(bad)  
  412a26:	mov    eax,ds:0x2e1e42a6
  412a2b:	sub    eax,0x3d677c13
  412a30:	push   ebx
  412a31:	test   DWORD PTR [edx+0x62],ebx
  412a34:	std    
  412a35:	push   ss
  412a36:	popa   
  412a37:	adc    eax,0xda69a6dc
  412a3c:	push   0x2d
  412a3e:	inc    eax
  412a3f:	enter  0xabd4,0x54
  412a43:	test   BYTE PTR [eax-0x6d3bac5],dl
  412a49:	(bad)  
  412a4a:	sub    eax,0xb488e2c
  412a4f:	xchg   ecx,eax
  412a50:	inc    ebp
  412a51:	int    0xc6
  412a53:	fcom   DWORD PTR [ebx]
  412a55:	ret    0xa712
  412a58:	test   DWORD PTR [eax-0x26c1d5d],edx
  412a5e:	in     eax,0x96
  412a60:	cmp    ebx,DWORD PTR [edi+0x17efb5cf]
  412a66:	mov    al,ds:0xc26ec5e2
  412a6b:	xor    ebp,DWORD PTR [ecx+0x4a]
  412a6e:	hlt    
  412a6f:	loope  0x412a7a
  412a71:	xchg   ecx,eax
  412a72:	inc    ebp
  412a73:	pusha  
  412a74:	ds push ecx
  412a76:	imul   DWORD PTR [edx]
  412a78:	cmp    edx,DWORD PTR [ebp+esi*8-0x301666e6]
  412a7f:	mov    bl,0x4f
  412a81:	pop    ecx
  412a82:	jmp    0x8b60:0x5c331856
  412a89:	cdq    
  412a8a:	sahf   
  412a8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a8c:	test   eax,0x151684a5
  412a91:	sub    DWORD PTR [eax+0x13],0xd5025570
  412a98:	mov    ch,0x62
  412a9a:	mov    bh,0x64
  412a9c:	in     eax,dx
  412a9d:	dec    ecx
  412a9e:	sub    edx,DWORD PTR [ebx]
  412aa0:	jle    0x412a97
  412aa2:	fisub  WORD PTR [edi]
  412aa4:	pusha  
  412aa5:	add    BYTE PTR [eax-0x70a91495],dl
  412aab:	and    ecx,ebp
  412aad:	push   esp
  412aae:	jecxz  0x412a6d
  412ab0:	and    bl,BYTE PTR [edx+esi*4-0x77]
  412ab4:	inc    esp
  412ab5:	mov    ds:0x23ef139a,al
  412aba:	(bad)  
  412abb:	int3   
  412abc:	ja     0x412b1f
  412abe:	into   
  412abf:	std    
  412ac0:	push   ebp
  412ac1:	ds jb  0x412b2a
  412ac4:	push   0x69f4a095
  412ac9:	int    0x22
  412acb:	ret    
  412acc:	pop    edx
  412acd:	les    ebx,FWORD PTR [esi]
  412acf:	test   eax,0x824ecaaf
  412ad4:	outs   dx,BYTE PTR ds:[esi]
  412ad5:	cmc    
  412ad6:	sub    ebx,0xcf3eeea8
  412adc:	loopne 0x412a7e
  412ade:	jmp    0x412acd
  412ae0:	mov    ss,esp
  412ae2:	leave  
  412ae3:	inc    ebx
  412ae4:	push   eax
  412ae5:	sahf   
  412ae6:	dec    esp
  412ae7:	add    eax,0xa1ff63cc
  412aec:	sar    esi,1
  412aee:	sar    BYTE PTR [ebx+0x4d],1
  412af1:	xlat   BYTE PTR ds:[ebx]
  412af2:	andps  xmm7,XMMWORD PTR [ebx+0x54]
  412af6:	fsub   DWORD PTR [edx]
  412af8:	add    BYTE PTR [ebp-0x1a],bl
  412afb:	cmp    ah,BYTE PTR [edx+0x59e09ee5]
  412b01:	mov    ds:0x50235c2c,al
  412b06:	dec    ebp
  412b07:	add    DWORD PTR [esi-0x6e85154],ebx
  412b0d:	leave  
  412b0e:	outs   dx,DWORD PTR ds:[esi]
  412b0f:	sbb    eax,0xeaab9403
  412b14:	mov    cl,BYTE PTR [bx-0x5506]
  412b19:	stos   DWORD PTR es:[edi],eax
  412b1a:	popa   
  412b1b:	and    ebp,DWORD PTR [eax]
  412b1d:	enter  0xbdc7,0x93
  412b21:	inc    edx
  412b22:	rcl    DWORD PTR [esi+0xd59fcc9],cl
  412b28:	out    dx,al
  412b29:	pop    ebp
  412b2a:	js     0x412b7c
  412b2c:	cdq    
  412b2d:	(bad)  [ecx]
  412b2f:	add    ebp,0xfedd53fa
  412b35:	dec    edi
  412b36:	sbb    BYTE PTR [ecx+0x5f],0xfe
  412b3a:	mov    dl,BYTE PTR [ecx]
  412b3c:	pushf  
  412b3d:	xor    BYTE PTR [edx],0xa2
  412b40:	sti    
  412b41:	push   0xa707359f
  412b46:	cmp    ah,BYTE PTR ds:0x450014e8
  412b4c:	adc    dl,ch
  412b4e:	(bad)  
  412b4f:	int3   
  412b50:	iret   
  412b51:	mov    bl,0x46
  412b53:	or     esi,edi
  412b55:	in     eax,0xc4
  412b57:	jae    0x412b77
  412b59:	xchg   edi,eax
  412b5a:	inc    edi
  412b5b:	jge    0x412b45
  412b5d:	jecxz  0x412bb9
  412b5f:	ret    0x52ca
  412b62:	repz dec ebp
  412b64:	retf   
  412b65:	or     DWORD PTR [edx],0x2f
  412b68:	leave  
  412b69:	cs pop ss
  412b6b:	fsubr  DWORD PTR [ebp-0x1f44068e]
  412b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b72:	mov    ebx,0x22450e35
  412b77:	xor    BYTE PTR [ebp+edx*1+0x7e],ah
  412b7b:	fwait
  412b7c:	fwait
  412b7d:	mov    ecx,DWORD PTR [esi+0xabd2ea9]
  412b83:	cmp    esp,DWORD PTR [edx]
  412b85:	fisttp DWORD PTR [esi-0x4d34eef3]
  412b8b:	sbb    dh,bh
  412b8d:	and    al,0x30
  412b8f:	adc    ch,bl
  412b91:	pop    eax
  412b92:	aam    0xcb
  412b94:	and    DWORD PTR [ebx-0x3dfd8338],0xec4c9d58
  412b9e:	fisub  WORD PTR [ecx+esi*1+0x75]
  412ba2:	sub    eax,0xa8265752
  412ba7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ba8:	push   0x150271c8
  412bad:	add    eax,0xf84e4cdc
  412bb2:	ja     0x412c00
  412bb4:	xchg   edx,eax
  412bb5:	mov    ebp,0x228f68ba
  412bba:	fsubr  QWORD PTR [ebp+0x13]
  412bbd:	in     eax,dx
  412bbe:	shl    DWORD PTR [esi-0x32],1
  412bc1:	adc    eax,0x8121c48f
  412bc6:	pop    ecx
  412bc7:	fwait
  412bc8:	fwait
  412bc9:	mov    esi,0x1dc2dd91
  412bce:	lods   al,BYTE PTR ds:[esi]
  412bcf:	adc    eax,DWORD PTR [esi-0x1e]
  412bd2:	xor    esi,DWORD PTR [eax*1-0xd439204]
  412bd9:	inc    edx
  412bda:	rol    DWORD PTR [eax+0x6d],0x3
  412bde:	push   cs
  412bdf:	adc    al,0x25
  412be1:	cld    
  412be2:	add    eax,0x39c5390a
  412be7:	xchg   ah,dl
  412be9:	shl    ebx,1
  412beb:	jmp    0x412bd0
  412bed:	pop    es
  412bee:	jnp    0x412bb9
  412bf0:	out    0x9e,al
  412bf2:	cs jl  0x412c0e
  412bf5:	xchg   ebp,eax
  412bf6:	cdq    
  412bf7:	mov    edx,0xbf0716ef
  412bfc:	js     0x412bf3
  412bfe:	cwde   
  412bff:	cwde   
  412c00:	push   edx
  412c01:	and    eax,edi
  412c03:	test   DWORD PTR [ebx+0x2b98e521],edx
  412c09:	inc    esi
  412c0a:	mov    ds:0xfb286bb2,eax
  412c0f:	cmc    
  412c10:	mov    ch,0xb5
  412c12:	push   0x7a693467
  412c17:	loop   0x412bfd
  412c19:	nop
  412c1a:	sahf   
  412c1b:	jmp    0x412c64
  412c1d:	(bad)  
  412c1e:	lods   al,BYTE PTR ds:[esi]
  412c1f:	mov    ?,WORD PTR [ebx-0x10]
  412c22:	cwde   
  412c23:	dec    ebx
  412c24:	je     0x412bbb
  412c26:	(bad)  
  412c27:	pop    esp
  412c28:	pushf  
  412c29:	mov    ebx,ebx
  412c2b:	jbe    0x412c3f
  412c2d:	imul   edx,DWORD PTR es:[di],0xb24d0071
  412c35:	xchg   ebx,eax
  412c36:	out    dx,eax
  412c37:	cs xchg edi,eax
  412c39:	in     al,dx
  412c3a:	jne    0x412bcb
  412c3c:	or     al,0x4d
  412c3e:	mov    bl,0x81
  412c40:	adc    BYTE PTR [edx+0x4e],ah
  412c43:	dec    ebx
  412c44:	mov    al,BYTE PTR [edi-0x66686f31]
  412c4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c4b:	test   al,0x5b
  412c4d:	mov    al,ds:0x410fff7d
  412c52:	es and eax,0xfeb1e31a
  412c58:	in     al,dx
  412c59:	jl     0x412bfa
  412c5b:	ins    BYTE PTR es:[edi],dx
  412c5c:	fsub   st,st(4)
  412c5e:	xor    al,0xda
  412c60:	mov    dh,0xab
  412c62:	jne    0x412cbc
  412c64:	mov    es,WORD PTR [esi]
  412c66:	ja     0x412c1d
  412c68:	sub    eax,0xa86feaee
  412c6d:	adc    BYTE PTR [ecx-0x32fedaae],cl
  412c73:	add    eax,0x6df75c5b
  412c78:	(bad)  [ecx-0x26f85bfc]
  412c7e:	mov    DWORD PTR [edx-0x20bf36cc],edx
  412c84:	ret    0x8c81
  412c87:	pushf  
  412c88:	stos   DWORD PTR es:[edi],eax
  412c89:	icebp  
  412c8a:	cdq    
  412c8b:	xchg   ecx,eax
  412c8c:	cmp    al,0x13
  412c8e:	ret    
  412c8f:	and    BYTE PTR [edi],ch
  412c91:	fwait
  412c92:	inc    edx
  412c93:	jge    0x412cf3
  412c95:	dec    ebx
  412c96:	fnstcw WORD PTR [ecx-0x7c3e1ae9]
  412c9c:	imul   ebx,DWORD PTR [ebp-0x3d2aa41b],0x40
  412ca3:	imul   eax,DWORD PTR [edi+0x52],0x17
  412ca7:	js     0x412d12
  412ca9:	call   0x63ac:0x48e9e015
  412cb0:	int3   
  412cb1:	in     eax,dx
  412cb2:	test   BYTE PTR [esp+eiz*2-0x76],ch
  412cb6:	std    
  412cb7:	ror    BYTE PTR [ebp+0x295212aa],1
  412cbd:	ror    esi,0xab
  412cc0:	pop    esp
  412cc1:	adc    bh,BYTE PTR [esi+0x6f7c2fe2]
  412cc7:	cwde   
  412cc8:	in     eax,0x67
  412cca:	adc    cl,BYTE PTR [esp+eiz*4-0xb8310ed]
  412cd1:	pusha  
  412cd2:	push   ss
  412cd3:	fs cmp al,0x98
  412cd6:	cmp    ch,ch
  412cd8:	push   ecx
  412cd9:	sbb    BYTE PTR [ebx+edx*2+0x2c],ch
  412cdd:	push   es
  412cde:	fdivr  DWORD PTR [esi+0x66]
  412ce1:	fs pop edi
  412ce3:	mov    esi,0x353fe0a
  412ce8:	test   DWORD PTR [esi],eax
  412cea:	cmp    BYTE PTR [esi+eiz*4],ah
  412ced:	sahf   
  412cee:	mov    esp,0x71354c2c
  412cf3:	(bad)  
  412cf4:	in     eax,0xea
  412cf6:	sbb    ah,BYTE PTR [edi]
  412cf8:	pop    esp
  412cf9:	stos   BYTE PTR es:[edi],al
  412cfa:	shr    DWORD PTR [edx+0x38],1
  412cfd:	fimul  DWORD PTR [edi]
  412cff:	sti    
  412d00:	push   cs
  412d01:	cld    
  412d02:	push   0x4d78d15b
  412d07:	push   ebx
  412d08:	dec    esi
  412d09:	mov    ?,WORD PTR [ebp+0x65cf1079]
  412d0f:	fild   DWORD PTR [ebx-0x33]
  412d12:	imul   ebx,DWORD PTR [edx-0xb],0x38131720
  412d19:	icebp  
  412d1a:	aam    0xe8
  412d1c:	(bad)  
  412d1d:	iret   
  412d1e:	test   al,0x4
  412d21:	sbb    ebx,0xffffff85
  412d24:	jp     0x412d88
  412d26:	repnz mov ah,0x88
  412d29:	push   esi
  412d2a:	out    dx,al
  412d2b:	inc    edi
  412d2c:	outs   dx,DWORD PTR ds:[esi]
  412d2d:	lods   al,BYTE PTR ds:[esi]
  412d2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d2f:	sbb    DWORD PTR [ebx],edx
  412d31:	shl    BYTE PTR [eax],1
  412d33:	dec    ebp
  412d34:	in     al,0xdf
  412d36:	into   
  412d37:	jnp    0x412dab
  412d39:	cmp    bl,dh
  412d3b:	inc    esp
  412d3c:	and    BYTE PTR [ecx],0x2b
  412d3f:	(bad)  
  412d40:	push   edi
  412d41:	ins    DWORD PTR es:[edi],dx
  412d42:	dec    ecx
  412d43:	and    al,0x31
  412d45:	jnp    0x412d32
  412d47:	ss xchg ch,dh
  412d4a:	jecxz  0x412d16
  412d4c:	jmp    0xe9867d8d
  412d51:	adc    DWORD PTR [eax+0x2adef0cb],esp
  412d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d58:	jb     0x412dd8
  412d5a:	cld    
  412d5b:	clc    
  412d5c:	cmp    BYTE PTR [eax+esi*8],bh
  412d5f:	or     esp,DWORD PTR [ecx-0x17]
  412d62:	fxch   st(7)
  412d64:	lock neg DWORD PTR [eax*8+0x31a35125]
  412d6c:	pop    esi
  412d6d:	cmp    eax,0x9786a614
  412d72:	mov    eax,0x4efc330
  412d77:	fwait
  412d78:	or     ch,BYTE PTR [edi-0x212987f7]
  412d7e:	mov    bh,0xc7
  412d80:	jge    0x412d69
  412d82:	jecxz  0x412d92
  412d84:	sub    BYTE PTR [esi+esi*2+0x32634c7e],bh
  412d8b:	pusha  
  412d8c:	mov    esi,0x2f114813
  412d91:	jnp    0x412dad
  412d93:	loopne 0x412d23
  412d95:	jb     0x412d2d
  412d97:	xchg   esp,eax
  412d98:	and    BYTE PTR [edi+edi*1],bh
  412d9b:	jbe    0x412df4
  412d9d:	lods   eax,DWORD PTR ds:[esi]
  412d9e:	aaa    
  412d9f:	inc    ebp
  412da0:	mul    DWORD PTR [edi]
  412da2:	push   esi
  412da3:	pop    esi
  412da4:	cdq    
  412da5:	lods   al,BYTE PTR ds:[esi]
  412da6:	push   ebp
  412da7:	dec    esi
  412da8:	jbe    0x412d3f
  412daa:	stos   DWORD PTR es:[edi],eax
  412dab:	(bad)  [esi-0x53850d9f]
  412db1:	aam    0xe5
  412db3:	xchg   esp,eax
  412db4:	ror    esi,1
  412db6:	fld    st(6)
  412db8:	ficomp WORD PTR [esp+eiz*8+0x64]
  412dbc:	daa    
  412dbd:	sub    ebx,DWORD PTR [edi-0xcb90dd4]
  412dc3:	push   ds
  412dc4:	mov    al,0xa0
  412dc6:	ret    
  412dc7:	ins    BYTE PTR es:[edi],dx
  412dc8:	adc    edx,ebp
  412dca:	out    0xad,al
  412dcc:	jns    0x412e41
  412dce:	jo     0x412dfe
  412dd0:	(bad)  
  412dd1:	jg     0x412d6a
  412dd3:	inc    eax
  412dd4:	fs push ds
  412dd6:	test   BYTE PTR [edi-0x72],dh
  412dd9:	mov    edx,0x652deb73
  412dde:	fstp   TBYTE PTR [eax+0x30fff610]
  412de4:	and    al,0xd3
  412de6:	xchg   ebp,eax
  412de7:	mov    dl,cl
  412de9:	sbb    ebx,ebx
  412deb:	adc    BYTE PTR [edx+edi*2+0x5a],ch
  412def:	xor    dl,cl
  412df1:	jmp    0xa7d4:0xb2256bcc
  412df8:	(bad)  [eax+ebx*2+0x21d12ca3]
  412dff:	mov    ebp,0x6ff3dc51
  412e04:	(bad)  
  412e05:	int3   
  412e06:	mov    esi,0xad18784c
  412e0b:	lock mov dl,0xd7
  412e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e0f:	imul   DWORD PTR [edx-0x19]
  412e12:	xor    bl,BYTE PTR [edi-0x31]
  412e15:	ss pop eax
  412e17:	jge    0x412e91
  412e19:	sbb    BYTE PTR [edx+0x70293a9e],dl
  412e1f:	adc    bl,bh
  412e21:	jb     0x412db2
  412e23:	jb     0x412e44
  412e25:	pop    edx
  412e26:	stos   BYTE PTR es:[edi],al
  412e27:	fdiv   st,st(4)
  412e29:	imul   esi,DWORD PTR [esi+0x40fff0d2],0xdefec782
  412e33:	push   eax
  412e34:	cli    
  412e35:	aaa    
  412e36:	ss jle 0x412dc4
  412e39:	push   es
  412e3a:	mov    ah,0x1
  412e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e3d:	int    0x41
  412e3f:	push   esi
  412e40:	fiadd  WORD PTR [eax+0x36]
  412e43:	and    ebp,ecx
  412e45:	(bad)  
  412e46:	(bad)  
  412e47:	xor    ch,ch
  412e49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4a:	xchg   ebp,esp
  412e4c:	jl     0x412e98
  412e4e:	cmp    esp,DWORD PTR [ebp-0x4df7958c]
  412e54:	or     eax,0x71f3d6dc
  412e59:	mov    edx,0xcd655d34
  412e5e:	test   al,0xd6
  412e60:	sbb    DWORD PTR ds:0x3e28b510,0xffffff8c
  412e67:	jp     0x412e45
  412e69:	mov    ebp,0xab774235
  412e6e:	xchg   BYTE PTR [esi],cl
  412e70:	bound  ebx,QWORD PTR [ecx+0x133db54d]
  412e76:	pop    ss
  412e77:	aam    0x17
  412e79:	pop    ebx
  412e7a:	imul   BYTE PTR [esp+ecx*1]
  412e7d:	aam    0x86
  412e7f:	repnz dec esp
  412e81:	xchg   ebx,eax
  412e82:	das    
  412e83:	mov    cl,0xb3
  412e85:	add    al,0xb
  412e87:	dec    ecx
  412e88:	push   ss
  412e89:	es mov esp,0x3634125d
  412e8f:	out    dx,al
  412e90:	xchg   esp,eax
  412e91:	shl    al,cl
  412e93:	jp     0x412edd
  412e95:	pop    ecx
  412e96:	jb     0x412eda
  412e98:	test   al,0x7e
  412e9a:	pop    ebp
  412e9b:	dec    ebx
  412e9c:	lods   al,BYTE PTR ds:[esi]
  412e9d:	jne    0x412e7b
  412e9f:	sub    al,0xd1
  412ea1:	mov    ah,0xab
  412ea3:	call   FWORD PTR [edi-0x3923ceeb]
  412ea9:	push   ss
  412eaa:	inc    ebp
  412eab:	cmp    al,0x9d
  412ead:	bound  esi,QWORD PTR [ebx-0x45]
  412eb0:	adc    esi,DWORD PTR [ebx]
  412eb2:	and    DWORD PTR [ecx+0x300c5c47],0xffffffe5
  412eb9:	gs or  eax,0xf3edbf1b
  412ebf:	add    DWORD PTR [edx-0x28],0x37
  412ec3:	bound  ebp,QWORD PTR [ecx]
  412ec5:	or     DWORD PTR [edx+eax*1+0x741f2ad4],0x5af17bc0
  412ed0:	ror    bl,1
  412ed2:	pop    ebx
  412ed3:	mov    esi,DWORD PTR [ebp-0x33]
  412ed6:	shl    BYTE PTR [eax+0x63],cl
  412ed9:	sub    eax,0x840b9b1c
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	jmp    0x6b9aa32a
  412ee4:	mov    bl,0x4c
  412ee6:	fld    QWORD PTR [edx-0x4a1e82b4]
  412eec:	pop    eax
  412eed:	xchg   ebp,eax
  412eee:	js     0x412ea5
  412ef0:	adc    eax,0x632619c6
  412ef5:	inc    edi
  412ef6:	jle    0x412e7e
  412ef8:	xchg   esp,eax
  412ef9:	outs   dx,DWORD PTR ds:[esi]
  412efa:	mov    dh,0x1e
  412efc:	add    al,0x36
  412efe:	mov    esp,0x14f23315
  412f03:	repz dec ebp
  412f05:	(bad)  
  412f06:	iret   
  412f07:	dec    eax
  412f08:	fdivr  QWORD PTR [ebx]
  412f0a:	enter  0x5fac,0x28
  412f0e:	pop    esp
  412f0f:	fistp  DWORD PTR [ecx+0x21]
  412f12:	dec    edx
  412f13:	sub    eax,0x903700f2
  412f18:	jge    0x412f08
  412f1a:	adc    eax,DWORD PTR [edx-0x6dd4c1b4]
  412f20:	fbstp  TBYTE PTR [ecx-0x46]
  412f23:	cmp    DWORD PTR [ecx+0x2a8062e3],eax
  412f29:	jg     0x412f00
  412f2b:	inc    ebp
  412f2c:	xchg   ebx,eax
  412f2d:	fiadd  WORD PTR [edi]
  412f2f:	cmp    dh,BYTE PTR [eax+0x79]
  412f32:	call   0x169e8f19
  412f37:	dec    ecx
  412f38:	xlat   BYTE PTR ds:[ebx]
  412f39:	retf   0xe2c1
  412f3c:	mov    BYTE PTR [ecx-0x5f],al
  412f3f:	and    esi,DWORD PTR [esi]
  412f41:	rol    DWORD PTR [edi-0x16a5df1],1
  412f47:	mov    dl,0x38
  412f49:	arpl   WORD PTR [edx+0x1f6e77a0],ax
  412f4f:	cmp    edx,DWORD PTR [edi+edx*2+0x5716b0ce]
  412f56:	xor    eax,0x270bf132
  412f5b:	mov    dh,BYTE PTR [esi-0x78e87d63]
  412f61:	push   cs
  412f62:	and    BYTE PTR [edx],ah
  412f64:	jl     0x412f83
  412f66:	sub    al,0x82
  412f68:	shr    al,cl
  412f6a:	ins    BYTE PTR es:[edi],dx
  412f6b:	add    al,0x2
  412f6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f6e:	arpl   cx,cx
  412f70:	pop    esp
  412f71:	ret    
  412f72:	aas    
  412f73:	jl     0x412fdb
  412f75:	mov    ecx,?
  412f77:	mov    eax,ds:0x6bbc70ba
  412f7c:	test   al,0x45
  412f7e:	loopne 0x412fa6
  412f80:	repz repz adc DWORD PTR [ebx+ebp*2],ecx
  412f85:	fstp   QWORD PTR [edx]
  412f87:	lds    edi,FWORD PTR [ebp-0x330ca065]
  412f8d:	pop    ebp
  412f8e:	cmp    ebx,DWORD PTR [ebp-0x5b82210c]
  412f94:	jmp    0xc8c8:0x55278e2b
  412f9b:	inc    ebp
  412f9c:	push   edi
  412f9d:	push   esi
  412f9e:	push   edx
  412f9f:	cmp    al,BYTE PTR [esi]
  412fa1:	fdivr  QWORD PTR [ecx]
  412fa3:	pop    ds
  412fa4:	mov    ah,0x1e
  412fa6:	enter  0x55e0,0x4b
  412faa:	gs and ch,bh
  412fad:	lea    esi,[ebx-0x4c]
  412fb0:	adc    al,0x47
  412fb2:	sahf   
  412fb3:	test   al,0x51
  412fb5:	mov    bh,0x16
  412fb7:	(bad)  [eax+ebx*2]
  412fba:	aam    0xf2
  412fbc:	idiv   BYTE PTR [edi+0xa]
  412fbf:	xchg   esi,eax
  412fc0:	jp     0x412ffd
  412fc2:	shr    BYTE PTR [eax+esi*8+0x7d],0xaf
  412fc7:	mov    BYTE PTR [edx+0x6e],ah
  412fca:	cmp    BYTE PTR [eax-0x287380c],0x6e
  412fd1:	mov    ecx,0xff22e35b
  412fd6:	out    0xa,al
  412fd8:	iret   
  412fd9:	sub    edi,DWORD PTR [ebp+0x15]
  412fdc:	dec    esi
  412fdd:	scas   eax,DWORD PTR es:[edi]
  412fde:	and    bh,BYTE PTR [eax-0x48]
  412fe1:	mov    dl,0x1f
  412fe3:	fiadd  WORD PTR [ebp+0x6e]
  412fe6:	and    esi,ecx
  412fe8:	retf   
  412fe9:	sbb    ebp,DWORD PTR [esi-0x24]
  412fec:	xchg   edx,eax
  412fed:	loop   0x412f83
  412fef:	cmp    al,BYTE PTR [esp+esi*4-0x3c]
  412ff3:	ds xchg esp,eax
  412ff5:	jmp    0x412f95
  412ff7:	repz push ebx
  412ff9:	(bad)  
  412ffa:	pushf  
  412ffb:	pop    ecx
  412ffc:	push   ecx
  412ffd:	aam    0x83
  412fff:	nop
  413000:	adc    cl,BYTE PTR [edi-0x6f]
  413003:	mov    eax,0x5171de38
  413008:	xlat   BYTE PTR ds:[ebx]
  413009:	retf   0x5c24
  41300c:	test   eax,0x9500dc8b
  413011:	sti    
  413012:	inc    esi
  413013:	jo     0x41306e
  413015:	sub    BYTE PTR [ebx+0x4b],dh
  413018:	add    dl,BYTE PTR [ebp+0x61]
  41301b:	addr16 mov eax,ds:0x6054
  41301f:	ret    0xb2c4
  413022:	in     eax,0xcc
  413024:	pop    edx
  413025:	xchg   BYTE PTR [edx-0x24],bl
  413028:	(bad)  
  413029:	popf   
  41302a:	sub    BYTE PTR [edx],0x2f
  41302d:	jno    0x4130ae
  41302f:	(bad)  
  413030:	mov    ebx,0x1f333976
  413035:	mov    WORD PTR [ebp-0x232a7322],ss
  41303b:	inc    edx
  41303c:	and    eax,0xda7770cf
  413041:	in     al,0xd1
  413043:	sbb    DWORD PTR [eax+0x20d9fed5],ecx
  413049:	or     BYTE PTR [ebp+0x3c],0xeb
  41304d:	test   BYTE PTR [ebx-0x6e],bl
  413050:	pop    ss
  413051:	pop    ebp
  413052:	add    esi,DWORD PTR [edi]
  413054:	xor    BYTE PTR [edx],bh
  413056:	sar    BYTE PTR [edx-0x1a],cl
  413059:	jmp    FWORD PTR [ebp*1-0x1f5c20e9]
  413060:	adc    eax,0xbd6747e3
  413065:	iret   
  413066:	test   DWORD PTR [eax],0x871722c3
  41306c:	mov    ch,0x1b
  41306e:	mov    al,ds:0x59e0868d
  413073:	and    ebx,0x110e126d
  413079:	lock and edi,DWORD PTR [esi+0x2b6d4e8e]
  413080:	and    esp,DWORD PTR [ebp-0x3b]
  413083:	ins    BYTE PTR es:[edi],dx
  413084:	cmp    DWORD PTR [edx],edi
  413086:	jbe    0x413030
  413088:	add    DWORD PTR ds:0x560cf67e,esi
  41308e:	adc    BYTE PTR [ebx+0x77],cl
  413091:	ins    BYTE PTR es:[edi],dx
  413092:	aam    0x6e
  413094:	loope  0x41303d
  413096:	inc    esi
  413097:	shl    bh,0x4f
  41309a:	aam    0xc4
  41309c:	retf   
  41309d:	enter  0xdda4,0xe0
  4130a1:	dec    esi
  4130a2:	push   es
  4130a3:	jno    0x4130b8
  4130a5:	sub    al,0x4b
  4130a7:	push   ebx
  4130a8:	mov    bh,0xb1
  4130aa:	int3   
  4130ab:	mov    esi,0xb1fa137e
  4130b0:	xor    edx,DWORD PTR [eax-0x71]
  4130b3:	imul   esi,esp,0xb184e9e
  4130b9:	jge    0x41304b
  4130bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130bc:	fcomp  DWORD PTR [edx+0x3ae022e7]
  4130c2:	lods   eax,DWORD PTR ds:[esi]
  4130c3:	dec    esi
  4130c4:	push   0xa1c93d04
  4130c9:	inc    ebx
  4130ca:	push   ss
  4130cb:	clc    
  4130cc:	ja     0x4130c1
  4130ce:	dec    ecx
  4130cf:	mov    WORD PTR [edx-0x48e62170],ds
  4130d5:	jp     0x4130b3
  4130d7:	xchg   BYTE PTR [ebx],ah
  4130d9:	mov    eax,ds:0xd11a6df8
  4130de:	sbb    al,0x58
  4130e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130e1:	jns    0x4130a4
  4130e3:	arpl   di,di
  4130e5:	mov    WORD PTR [edi-0x41],ss
  4130e8:	mov    cl,0x5a
  4130ea:	loopne 0x4130d7
  4130ec:	dec    eax
  4130ed:	push   cs
  4130ee:	inc    ecx
  4130ef:	pusha  
  4130f0:	ja     0x4130aa
  4130f2:	sbb    bh,ch
  4130f4:	inc    edx
  4130f5:	sbb    eax,0x9e2c53be
  4130fa:	cmp    esi,DWORD PTR [edi]
  4130fc:	rol    BYTE PTR [ebx+0x21],1
  4130ff:	sub    eax,0xf7225857
  413104:	xchg   ebx,eax
  413105:	retf   
  413106:	and    eax,0x64ea048
  41310b:	ins    DWORD PTR es:[edi],dx
  41310c:	push   0xffffffd0
  41310e:	pop    ds
  41310f:	adc    BYTE PTR [edi-0x382f9c0b],ah
  413115:	cld    
  413116:	test   ah,dh
  413118:	and    eax,0xc91985c3
  41311d:	out    dx,eax
  41311e:	add    al,0xa6
  413120:	mov    ds:0xd026d1f3,al
  413125:	xor    al,0xaa
  413127:	jp     0x4130eb
  413129:	sbb    edi,DWORD PTR [edx]
  41312b:	push   esi
  41312c:	mov    al,0x3f
  41312e:	xchg   esi,eax
  41312f:	loopne 0x413138
  413131:	dec    esp
  413132:	sub    BYTE PTR [edi+0x5927aa82],ch
  413138:	test   al,0xb0
  41313a:	retf   
  41313b:	xchg   ebx,eax
  41313c:	iret   
  41313d:	sar    BYTE PTR fs:[edi],1
  413140:	adc    eax,0xd620f77
  413145:	add    al,0xd4
  413147:	dec    eax
  413148:	or     edx,DWORD PTR [eax-0x232d7e18]
  41314e:	or     ebx,DWORD PTR [esi-0x650b662d]
  413154:	or     DWORD PTR [ebp-0x67],edx
  413157:	ds inc ecx
  413159:	out    0x32,eax
  41315b:	jbe    0x41319a
  41315d:	xchg   edi,eax
  41315e:	cmp    al,0x99
  413160:	add    ch,BYTE PTR [edi]
  413162:	loop   0x41310b
  413164:	dec    edx
  413165:	hlt    
  413166:	rol    BYTE PTR [edx-0x71],cl
  413169:	lea    edx,[esi]
  41316b:	jl     0x4131d9
  41316d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316e:	imul   DWORD PTR [eax+eiz*4+0x558ba4d2]
  413175:	scas   al,BYTE PTR es:[edi]
  413176:	loopne 0x4131aa
  413178:	nop
  413179:	and    eax,0x1bfa5f4b
  41317e:	jg     0x4131cc
  413180:	inc    esp
  413181:	lds    esi,FWORD PTR [eax]
  413183:	in     eax,dx
  413184:	(bad)  
  413185:	leave  
  413186:	push   esi
  413187:	cmp    BYTE PTR [edi],bh
  413189:	push   ecx
  41318a:	rol    cl,0x5d
  41318d:	xchg   edx,eax
  41318e:	outs   dx,BYTE PTR ds:[esi]
  41318f:	inc    esp
  413190:	cwde   
  413191:	clc    
  413192:	sbb    bh,0x91
  413195:	mov    al,ds:0xa623aaff
  41319a:	pushf  
  41319b:	mov    esi,0x8ae977fe
  4131a0:	lahf   
  4131a1:	inc    ebp
  4131a2:	add    ecx,DWORD PTR [edx]
  4131a4:	add    DWORD PTR [edi-0x2b],esp
  4131a7:	es scas al,BYTE PTR es:[edi]
  4131a9:	(bad)  
  4131aa:	xor    edx,eax
  4131ac:	mov    edi,0xe48216f0
  4131b1:	rol    BYTE PTR [eax+0x9],cl
  4131b4:	inc    esp
  4131b5:	icebp  
  4131b6:	int    0x92
  4131b8:	cwde   
  4131b9:	sbb    BYTE PTR [edx],dh
  4131bb:	dec    edx
  4131bc:	ja     0x4131f7
  4131be:	cdq    
  4131bf:	les    edi,FWORD PTR [edx-0x5badc2da]
  4131c5:	in     eax,0xac
  4131c7:	sub    eax,0xf1627969
  4131cc:	data16 adc BYTE PTR [edx+0x59bb1f12],ch
  4131d3:	inc    esp
  4131d4:	rcl    BYTE PTR [esi+0x28],0x8
  4131d8:	push   edx
  4131d9:	call   0xc39c:0x76f05928
  4131e0:	imul   ecx,DWORD PTR [eax-0x2e],0x6b
  4131e4:	and    edi,DWORD PTR [edi+0x60]
  4131e7:	mov    ds:0x9aaf1655,al
  4131ec:	test   eax,0x353ea84f
  4131f1:	mov    esp,0x9d61a111
  4131f6:	sub    BYTE PTR [ebx+0x77],0x67
  4131fa:	daa    
  4131fb:	sub    dh,BYTE PTR [edx+ebx*4+0x3c55facb]
  413202:	dec    esp
  413203:	aad    0xdb
  413205:	fld    TBYTE PTR [esi-0x476bb491]
  41320b:	push   ebx
  41320c:	sbb    eax,0x914d970d
  413212:	stos   DWORD PTR es:[edi],eax
  413213:	cmp    eax,0x917fee62
  413218:	dec    ebp
  413219:	cwde   
  41321a:	dec    esi
  41321b:	scas   al,BYTE PTR es:[edi]
  41321c:	es pop ebx
  41321e:	(bad)  
  41321f:	test   DWORD PTR [esi-0x507552d7],0xe73dfc48
  413229:	sbb    DWORD PTR ds:0xb85276da,esp
  41322f:	inc    esp
  413230:	push   esp
  413231:	lahf   
  413232:	lock add cl,dh
  413235:	fiadd  DWORD PTR [esi+ebx*4]
  413238:	lods   al,BYTE PTR ds:[esi]
  413239:	inc    ebx
  41323a:	push   es
  41323b:	add    edi,edx
  41323d:	or     eax,0x12eed8e2
  413242:	cmp    BYTE PTR [edi+0x79],0xb0
  413246:	rcl    DWORD PTR [esi+0x558f1d15],cl
  41324c:	bound  esi,QWORD PTR [eax+0x5c]
  41324f:	into   
  413250:	sbb    al,0xad
  413252:	xchg   esi,eax
  413253:	cld    
  413254:	xor    al,0x51
  413256:	adc    esp,DWORD PTR [ecx-0x8]
  413259:	nop
  41325a:	fidiv  WORD PTR [edx-0x7a40132a]
  413260:	lods   eax,DWORD PTR ds:[esi]
  413261:	sub    dh,BYTE PTR [eax-0x69ebb3dd]
  413267:	sbb    BYTE PTR ds:0xb12d946a,bl
  41326d:	inc    esi
  41326e:	out    0x5,al
  413270:	out    dx,eax
  413271:	add    al,0xa6
  413273:	inc    ecx
  413274:	dec    edi
  413275:	adc    eax,DWORD PTR [ecx+0x3e]
  413278:	pop    ebx
  413279:	add    al,0x12
  41327b:	cmc    
  41327c:	pop    edi
  41327d:	jnp    0x413296
  41327f:	push   0x5555b25
  413284:	or     DWORD PTR [eax+edi*1],ecx
  413287:	cli    
  413288:	pop    ebp
  413289:	add    eax,0x26a8d7f1
  41328e:	sbb    DWORD PTR [esp+ecx*4-0x80],edx
  413292:	push   edi
  413293:	fdivrp st(6),st
  413295:	sub    bh,BYTE PTR [edi-0x1b23b8b3]
  41329b:	push   0x2f
  41329d:	sahf   
  41329e:	xchg   esp,eax
  41329f:	xor    BYTE PTR [edx+0x706aef9d],0x5f
  4132a6:	mov    ch,0x6b
  4132a8:	sbb    BYTE PTR [edx+esi*4+0x3bc949d],0x28
  4132b0:	aam    0xd1
  4132b2:	mov    al,ds:0xafe31724
  4132b7:	inc    esp
  4132b8:	add    eax,0xded379bf
  4132bd:	push   eax
  4132be:	lods   eax,DWORD PTR ds:[esi]
  4132bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132c0:	and    ah,BYTE PTR [eax-0x2527aed7]
  4132c6:	iret   
  4132c7:	mov    ds:0x627ca1e2,al
  4132cc:	ds jns 0x4132f4
  4132cf:	stos   BYTE PTR es:[edi],al
  4132d0:	shl    BYTE PTR [edx+0x0],1
  4132d3:	mov    eax,DWORD PTR [ebp+0xbb3f311]
  4132d9:	fwait
  4132da:	add    eax,0xb7ebb96a
  4132df:	jbe    0x41334d
  4132e1:	bound  esi,QWORD PTR [ecx]
  4132e3:	mov    ds:0x164eaa84,al
  4132e8:	xor    al,0xc0
  4132ea:	fild   WORD PTR [ecx+0x7e]
  4132ed:	neg    BYTE PTR [edi+esi*2-0x5aa45a1d]
  4132f4:	enter  0xd9a8,0xbc
  4132f8:	sbb    BYTE PTR [ecx],dl
  4132fa:	das    
  4132fb:	arpl   WORD PTR [esi*1+0x64112f87],ax
  413302:	fist   DWORD PTR [ebp-0x5c0b92b4]
  413308:	rol    BYTE PTR ds:0x3f326d82,0x10
  41330f:	sahf   
  413310:	sar    dl,1
  413312:	fs mov cl,0xd4
  413315:	test   al,0x59
  413317:	sbb    BYTE PTR ds:0xf0e7abf6,al
  41331d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41331e:	adc    dl,BYTE PTR [edx+0x554e91f]
  413324:	adc    eax,0xbd29e83d
  413329:	pushf  
  41332a:	call   FWORD PTR [esi+0x5e0ce824]
  413330:	jl     0x4132fd
  413332:	sbb    bh,bh
  413334:	sbb    DWORD PTR [ecx],0x5497178c
  41333a:	add    al,0x49
  41333c:	sbb    eax,0x73db009f
  413341:	push   0xfffffff0
  413343:	cmp    cl,BYTE PTR [esi]
  413345:	imul   edi,DWORD PTR ds:0xa40977d4,0x71
  41334c:	cmp    al,0xb5
  41334e:	xchg   ecx,eax
  41334f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413351:	cmp    BYTE PTR [ebx-0x7f],dh
  413354:	outs   dx,DWORD PTR ds:[esi]
  413355:	xchg   DWORD PTR [eax+0x6b],esp
  413358:	mov    ecx,0x86249e59
  41335d:	cs add eax,0xef76b83f
  413363:	je     0x413355
  413365:	adc    BYTE PTR [ebx],bh
  413367:	pop    esp
  413368:	or     BYTE PTR [edi],cl
  41336a:	leave  
  41336b:	pop    esi
  41336c:	out    dx,al
  41336d:	cli    
  41336e:	fsubr  DWORD PTR [edx-0x6c]
  413371:	iret   
  413372:	imul   eax,eax,0x760b7eb8
  413378:	xchg   esp,eax
  413379:	out    0x6c,eax
  41337b:	jmp    0xfd383b67
  413380:	popf   
  413381:	mov    dl,0xea
  413383:	repz imul esi
  413386:	jo     0x4133d4
  413388:	push   cs
  413389:	adc    ah,BYTE PTR [edi]
  41338b:	cld    
  41338c:	shl    DWORD PTR [ecx],cl
  41338e:	pop    ss
  41338f:	dec    esp
  413390:	cmp    esp,DWORD PTR [edi]
  413392:	nop
  413393:	cdq    
  413394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413395:	int    0xc3
  413397:	mov    esp,0x776ef157
  41339c:	lahf   
  41339d:	test   DWORD PTR [ebx-0x4e15c535],0x2b5d3c3f
  4133a7:	xchg   ebp,eax
  4133a8:	xchg   BYTE PTR [ecx+0x75],dh
  4133ab:	xor    DWORD PTR [ebp+0x6eb46a15],edi
  4133b1:	(bad)  
  4133b2:	pop    eax
  4133b3:	je     0x4133c6
  4133b5:	addr16 out 0x74,eax
  4133b8:	mov    ds:0x98e71469,al
  4133bd:	ror    BYTE PTR [edi+0x66],cl
  4133c0:	dec    edx
  4133c1:	and    al,bl
  4133c3:	or     dl,BYTE PTR [edi]
  4133c5:	cdq    
  4133c6:	cmp    eax,0xbe31a1b0
  4133cb:	nop
  4133cc:	mov    dh,BYTE PTR [ebx-0x70]
  4133cf:	addr16 push ebx
  4133d1:	adc    DWORD PTR [ecx+0x31299b30],eax
  4133d7:	or     bh,bh
  4133d9:	cmp    eax,0xd833e03b
  4133de:	test   al,0xd0
  4133e0:	add    dx,ax
  4133e3:	call   DWORD PTR [edx-0x66]
  4133e6:	sub    BYTE PTR [ebx],dl
  4133e8:	adc    BYTE PTR [edi],bl
  4133ea:	in     al,0x0
  4133ec:	add    eax,0x1350c76d
  4133f1:	jae    0x413399
  4133f3:	push   0xc775b79b
  4133f8:	repnz retf 
  4133fa:	inc    edx
  4133fb:	xchg   esi,eax
  4133fc:	xchg   ebx,eax
  4133fd:	icebp  
  4133fe:	pop    esp
  4133ff:	cmp    DWORD PTR [ebp-0x321127a1],0xffffff9a
  413406:	and    edx,DWORD PTR [ebp-0x63efb9ad]
  41340c:	popa   
  41340d:	xchg   edi,eax
  41340e:	fs out dx,al
  413410:	inc    esp
  413411:	sub    eax,0xbb90c789
  413416:	xor    DWORD PTR [edx+ebp*2-0x8],0x234269f3
  41341e:	xchg   edx,eax
  41341f:	jno    0x41347d
  413421:	mul    ebx
  413423:	jl     0x41340e
  413425:	popa   
  413426:	pop    esp
  413427:	test   BYTE PTR [edi-0x12],bl
  41342a:	mov    dh,0x78
  41342c:	hlt    
  41342d:	call   0xe695:0xec77b7a3
  413434:	and    al,0x49
  413436:	enter  0xdd4d,0x30
  41343a:	sub    al,0xba
  41343c:	fisub  DWORD PTR [ebx+0x1d3581be]
  413442:	retf   0x6a49
  413445:	mov    BYTE PTR [ebp+0x15],0x70
  413449:	nop    DWORD PTR [ebx]
  41344c:	sub    BYTE PTR [edx+0x53a22268],dh
  413452:	push   cs
  413453:	(bad)  
  413454:	and    bh,BYTE PTR [edx-0x31]
  413457:	js     0x413486
  413459:	std    
  41345a:	sti    
  41345b:	test   BYTE PTR [eax+0x6f],dl
  41345e:	jge    0x41343b
  413460:	adc    ch,BYTE PTR [ecx+0x72e87691]
  413466:	adc    ah,BYTE PTR [edi+eiz*8+0x18]
  41346a:	and    ebp,DWORD PTR [edx]
  41346c:	dec    esp
  41346d:	add    al,0xeb
  41346f:	add    eax,0x6bf16bf1
  413474:	sahf   
  413475:	cmp    bl,BYTE PTR [ecx]
  413477:	nop
  413478:	push   eax
  413479:	dec    esi
  41347a:	jbe    0x41349b
  41347c:	or     ah,ah
  41347e:	pop    edx
  41347f:	leave  
  413480:	in     al,0x1c
  413482:	aam    0xcb
  413484:	repnz pop edi
  413486:	icebp  
  413487:	in     eax,dx
  413488:	cmp    DWORD PTR [eax],ecx
  41348a:	fs daa 
  41348c:	imul   eax,DWORD PTR [ebp*4-0x2712ec97],0xffffff9a
  413494:	loopne 0x41344b
  413496:	pop    ebx
  413497:	and    eax,0x57a31b45
  41349c:	cli    
  41349d:	nop
  41349e:	je     0x413504
  4134a0:	push   ebp
  4134a1:	call   0x53c634d9
  4134a6:	adc    eax,0x218fc774
  4134ab:	(bad)  
  4134ac:	pop    ebp
  4134ad:	dec    ecx
  4134ae:	and    al,0x93
  4134b0:	cmp    al,0x9e
  4134b2:	test   cl,ah
  4134b4:	jge    0x413456
  4134b6:	std    
  4134b7:	pop    ss
  4134b8:	pop    ds
  4134b9:	std    
  4134ba:	push   ds
  4134bb:	adc    DWORD PTR [esp+edx*1-0x6fcde26c],esi
  4134c2:	cld    
  4134c3:	xor    DWORD PTR [ecx+0x53],eax
  4134c6:	mov    dl,0xcf
  4134c8:	push   eax
  4134c9:	das    
  4134ca:	inc    ecx
  4134cb:	cmp    BYTE PTR [edi-0x2f],dh
  4134ce:	sbb    eax,DWORD PTR [ecx-0x78]
  4134d1:	mov    dl,0x61
  4134d3:	push   esp
  4134d4:	xor    BYTE PTR [edx],0xc5
  4134d7:	pop    esi
  4134d8:	mov    eax,ds:0x85c8c8fa
  4134dd:	sbb    al,0x8
  4134df:	mov    ecx,0x86247b7b
  4134e4:	or     ebp,DWORD PTR [eax]
  4134e6:	aaa    
  4134e7:	(bad)  
  4134e8:	in     eax,0x49
  4134ea:	stos   BYTE PTR es:[edi],al
  4134eb:	push   edx
  4134ec:	fwait
  4134ed:	loope  0x4134cd
  4134ef:	mov    dh,BYTE PTR [ebx-0x120751a]
  4134f5:	in     al,0x97
  4134f7:	xor    al,0x50
  4134f9:	adc    al,0xe5
  4134fb:	jecxz  0x4134f1
  4134fd:	xchg   BYTE PTR [edi+0xd603260],bl
  413503:	fistp  WORD PTR [ecx+0x5453a1a2]
  413509:	xchg   edx,eax
  41350a:	fstp   TBYTE PTR [esi]
  41350c:	sahf   
  41350d:	outs   dx,BYTE PTR ds:[esi]
  41350e:	xchg   edx,eax
  41350f:	pop    es
  413510:	mov    ebp,0xc8752fe5
  413515:	cld    
  413516:	pusha  
  413517:	fstp   st(5)
  413519:	sbb    ch,al
  41351b:	push   edi
  41351c:	sbb    al,0xbc
  41351e:	push   esi
  41351f:	popa   
  413520:	push   es
  413521:	inc    ecx
  413522:	ss and bh,bh
  413525:	outs   dx,DWORD PTR ds:[esi]
  413526:	add    DWORD PTR [edi-0x13],edi
  413529:	mov    ebx,0x28017d67
  41352e:	in     al,dx
  41352f:	pop    es
  413530:	and    eax,0x76eebc29
  413535:	cdq    
  413536:	dec    edi
  413537:	js     0x41354d
  413539:	aaa    
  41353a:	xchg   edx,eax
  41353b:	in     eax,0xa6
  41353d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41353e:	out    0xc4,eax
  413540:	sbb    al,0x4f
  413542:	stc    
  413543:	jns    0x41354d
  413545:	cwde   
  413546:	loope  0x41355a
  413548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413549:	in     eax,0xab
  41354b:	addr16 adc dl,cl
  41354e:	int3   
  41354f:	nop
  413550:	fcom   DWORD PTR [ecx-0x61]
  413553:	ins    BYTE PTR es:[edi],dx
  413554:	into   
  413555:	add    BYTE PTR [ecx+0x62483c5b],0x44
  41355c:	inc    esi
  41355d:	test   DWORD PTR [edx+ebp*8+0x22002e83],ebx
  413564:	sar    bh,1
  413566:	clc    
  413567:	fsub   st(2),st
  413569:	inc    ebp
  41356a:	add    eax,DWORD PTR [ebp+0x5b]
  41356d:	or     al,0x17
  41356f:	and    DWORD PTR [ebp+0x4d365081],ebx
  413575:	jge    0x4135bd
  413577:	sbb    ch,BYTE PTR [eax-0x2a]
  41357a:	lahf   
  41357b:	add    DWORD PTR [ebx],ebp
  41357d:	cdq    
  41357e:	push   0xffffffc0
  413580:	push   ss
  413581:	pop    edi
  413582:	sbb    esp,DWORD PTR [edi+0x4dd88a3a]
  413588:	inc    esp
  413589:	pop    edi
  41358a:	gs mov bh,0xc2
  41358d:	push   ebx
  41358e:	inc    ecx
  41358f:	fsubr  QWORD PTR [ebx+ebx*4]
  413592:	adc    edx,eax
  413594:	inc    edi
  413595:	mov    dh,ch
  413597:	ja     0x413573
  413599:	cmp    BYTE PTR [esi+esi*2],ah
  41359c:	pop    es
  41359d:	lods   eax,DWORD PTR ds:[esi]
  41359e:	add    dh,BYTE PTR [edi+ebp*1]
  4135a1:	data16 jge 0x41352e
  4135a4:	pop    esi
  4135a5:	aad    0x6b
  4135a7:	mov    ebp,0x13f00b0
  4135ac:	mov    al,0x31
  4135ae:	(bad)  
  4135af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135b0:	aam    0x41
  4135b2:	push   cs
  4135b3:	call   0x5b7:0xc99062a8
  4135ba:	pop    ds
  4135bb:	iret   
  4135bc:	nop
  4135bd:	jno    0x4135f1
  4135bf:	adc    cl,BYTE PTR [ecx+0x3a]
  4135c2:	adc    bh,BYTE PTR [ebx-0x77be171c]
  4135c8:	pop    DWORD PTR [edi]
  4135ca:	mov    ?,WORD PTR [edi-0x1d]
  4135cd:	(bad)  
  4135ce:	push   0xe37bef17
  4135d3:	out    0x57,eax
  4135d5:	dec    edx
  4135d6:	loope  0x4135c9
  4135d8:	and    eax,0x2a6cdbd8
  4135dd:	add    esp,0x10
  4135e0:	out    dx,eax
  4135e1:	xor    ebp,0x91e97706
  4135e7:	ss sar dh,1
  4135ea:	(bad)  
  4135eb:	adc    dl,BYTE PTR [eax]
  4135ed:	dec    esp
  4135ee:	fmul   st,st(6)
  4135f0:	test   al,0x19
  4135f2:	vmwrite ebp,edx
  4135f5:	arpl   WORD PTR [eax-0xf868b86],ax
  4135fb:	das    
  4135fc:	mov    ebx,0x898ea348
  413601:	jmp    0x1b4d:0x21948fd4
  413608:	fs popf 
  41360a:	dec    BYTE PTR [edi+0x4c]
  41360d:	or     dl,ch
  41360f:	(bad)  [ebx+0x6baf0125]
  413615:	and    ah,BYTE PTR [ebp+0x4f]
  413618:	in     eax,dx
  413619:	inc    esi
  41361a:	fnstcw WORD PTR [edx]
  41361c:	mov    ebx,0x5f46f934
  413621:	push   ecx
  413622:	mov    eax,0xa89e8865
  413627:	ret    
  413628:	lahf   
  413629:	pop    ebp
  41362a:	jnp    0x413653
  41362c:	daa    
  41362d:	inc    edx
  41362e:	fwait
  41362f:	pushf  
  413630:	dec    ecx
  413631:	cmp    DWORD PTR [eax+eiz*1+0x65],edx
  413635:	(bad)  
  413636:	(bad)  
  413637:	lds    ecx,FWORD PTR [esi+eax*2+0x70139f2d]
  41363e:	mov    ebp,0xf39094ad
  413643:	fsubr  QWORD PTR [esi-0x14]
  413646:	movq   QWORD PTR [edx-0x67d17655],mm2
  41364d:	ins    DWORD PTR es:[edi],dx
  41364e:	add    eax,DWORD PTR [ebp-0x26d83e7b]
  413654:	push   ebx
  413655:	shr    DWORD PTR [ebp+edx*8-0x6eb799ca],1
  41365c:	xor    DWORD PTR [edx+0x1d],edi
  41365f:	les    ecx,FWORD PTR [eax]
  413661:	mov    al,fs:0x4e73802b
  413667:	enter  0xe526,0x91
  41366b:	shl    BYTE PTR [edi],1
  41366d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41366e:	rol    BYTE PTR [edi+0x17],0x74
  413672:	xchg   esi,eax
  413673:	loopne 0x413642
  413675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413676:	mov    edx,0x68d6f8b9
  41367b:	shl    ebp,0x77
  41367e:	imul   esp,eax,0xffffffdf
  413681:	jecxz  0x4136c7
  413683:	popf   
  413684:	jmp    0x4136b8
  413686:	and    ebx,DWORD PTR [ecx+0x690da07a]
  41368c:	in     al,dx
  41368d:	lods   al,BYTE PTR ds:[esi]
  41368e:	nop
  41368f:	retf   0xe91
  413692:	mov    ds:0xfe9672e,eax
  413697:	xlat   BYTE PTR ds:[ebx]
  413698:	es cwde 
  41369a:	sub    al,0x4d
  41369c:	mov    BYTE PTR ds:0x5bd7478b,ch
  4136a2:	adc    eax,0xec43fc26
  4136a7:	xor    al,0x37
  4136a9:	loopne 0x4136ae
  4136ab:	mov    al,0x80
  4136ad:	push   esp
  4136ae:	push   ebp
  4136af:	lds    eax,FWORD PTR [ebp-0x39]
  4136b2:	sbb    ebp,DWORD PTR [esi+0x6820eaa4]
  4136b8:	xchg   edi,ebp
  4136ba:	push   esp
  4136bb:	das    
  4136bc:	inc    esi
  4136bd:	sub    eax,0xbede0e98
  4136c2:	xchg   esi,eax
  4136c3:	dec    eax
  4136c4:	sbb    DWORD PTR [eax-0x4eea960e],esi
  4136ca:	mov    esp,es
  4136cc:	mov    ebp,eax
  4136ce:	nop
  4136cf:	lods   al,BYTE PTR ds:[esi]
  4136d0:	scas   eax,DWORD PTR es:[edi]
  4136d1:	cli    
  4136d2:	sti    
  4136d3:	sbb    bl,al
  4136d5:	les    edi,FWORD PTR [esi-0x4a5e53e2]
  4136db:	jnp    0x4136fa
  4136dd:	mov    ecx,0x21bba1ca
  4136e2:	or     eax,0xf740d809
  4136e7:	push   ebx
  4136e8:	lods   al,BYTE PTR ds:[esi]
  4136e9:	xor    BYTE PTR [ecx-0x17],0x47
  4136ed:	jb     0x41370c
  4136ef:	lea    eax,[eax+0x2d]
  4136f2:	js     0x4136bc
  4136f4:	mov    bl,0x52
  4136f6:	and    eax,0xdae805e2
  4136fb:	mov    BYTE PTR [esi+ecx*4+0x1e],ch
  4136ff:	mov    eax,ds:0xc6093dfa
  413704:	test   al,0x3b
  413706:	add    eax,0xdea6dc76
  41370b:	xor    eax,0x2c29cfa1
  413710:	jo     0x413755
  413712:	inc    ecx
  413713:	mov    ch,0x92
  413715:	scas   eax,DWORD PTR es:[edi]
  413716:	sub    dl,ah
  413718:	inc    ebp
  413719:	sub    ecx,0x53487a6a
  41371f:	push   ecx
  413720:	call   0x5d8:0x886651bd
  413727:	not    ebx
  413729:	mov    edi,0x6cfc917f
  41372e:	ror    BYTE PTR [ebx+0x58],0x36
  413732:	call   0x2fd2:0x5db61514
  413739:	(bad)  
  41373a:	sbb    al,0x4
  41373c:	les    eax,FWORD PTR [ecx-0x270370d1]
  413742:	adc    cl,BYTE PTR [edx+0xeca7858]
  413748:	pop    esp
  413749:	out    dx,al
  41374a:	fwait
  41374b:	mov    ebp,0x42e6152a
  413750:	icebp  
  413751:	jnp    0x413707
  413753:	dec    edx
  413754:	xchg   edi,eax
  413755:	sub    dl,al
  413757:	inc    ebp
  413758:	in     eax,dx
  413759:	(bad)  
  41375b:	cmp    edi,DWORD PTR fs:[ecx-0x53]
  41375f:	stos   DWORD PTR es:[edi],eax
  413760:	xchg   esi,eax
  413761:	daa    
  413762:	test   edx,ecx
  413764:	inc    esp
  413765:	or     DWORD PTR [edi-0x7d4bdb1e],0x150a0e70
  41376f:	cwde   
  413770:	inc    ebp
  413771:	aaa    
  413772:	ret    
  413773:	clc    
  413774:	xor    DWORD PTR [edx+0x3f6d3efe],edi
  41377a:	fwait
  41377b:	out    0x5d,al
  41377d:	into   
  41377e:	xchg   esp,ecx
  413780:	adc    esp,DWORD PTR [ebx-0x19901958]
  413786:	xchg   ebp,eax
  413787:	sbb    BYTE PTR [eax+0x65],dh
  41378a:	(bad)
  41378d:	adc    DWORD PTR [ebp+0x1dea51f2],esi
  413793:	xor    DWORD PTR [ebx-0x49b95438],0x81315692
  41379d:	mov    bl,0x65
  41379f:	(bad)  
  4137a0:	and    eax,0x79545319
  4137a5:	(bad)  
  4137a6:	push   esp
  4137a7:	lds    ecx,FWORD PTR [ebx-0x3b5e7b93]
  4137ad:	push   es
  4137ae:	add    bl,dl
  4137b0:	pop    ebp
  4137b1:	push   ss
  4137b2:	xor    eax,0xa7bca888
  4137b7:	inc    ebx
  4137b8:	push   edi
  4137b9:	sbb    DWORD PTR [eax+0x6fe7e597],esp
  4137bf:	mov    esi,0x2f0ae34b
  4137c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137c5:	lock test al,0x24
  4137c8:	and    BYTE PTR [esi+0x17],dl
  4137cb:	call   0xa3c1:0x9f4ec5ac
  4137d2:	or     eax,ebx
  4137d4:	jmp    0x413806
  4137d6:	jo     0x41376d
  4137d8:	jnp    0x41376a
  4137da:	loope  0x41378d
  4137dc:	xor    eax,0xb0809d93
  4137e1:	push   ebp
  4137e2:	movzx  esi,BYTE PTR [ebp+0x6d344fca]
  4137e9:	and    al,0x42
  4137eb:	inc    ecx
  4137ec:	scas   al,BYTE PTR es:[edi]
  4137ed:	mov    al,0xca
  4137ef:	aas    
  4137f0:	in     al,dx
  4137f1:	sbb    ch,cl
  4137f3:	popf   
  4137f4:	sahf   
  4137f5:	fadd   DWORD PTR [ecx+0x60d63670]
  4137fb:	xor    DWORD PTR [ecx],esi
  4137fd:	xchg   esi,eax
  4137fe:	in     eax,0xa8
  413800:	lock mov ecx,0x8d2927e0
  413806:	pop    eax
  413807:	push   edx
  413808:	mov    al,ds:0x9410f89c
  41380d:	push   ebx
  41380e:	into   
  41380f:	inc    edi
  413810:	(bad)  
  413812:	repnz leave 
  413814:	jmp    0x4137bd
  413816:	inc    edx
  413817:	shl    BYTE PTR ds:0x6beedf53,1
  41381d:	or     bh,BYTE PTR [ecx-0x2f]
  413820:	inc    ebx
  413821:	int3   
  413822:	fnsave [edi-0xa]
  413825:	(bad)  
  413826:	inc    esp
  413827:	jne    0x4138a5
  413829:	(bad)  
  41382a:	lods   al,BYTE PTR ds:[esi]
  41382b:	xchg   esi,eax
  41382c:	hlt    
  41382d:	and    ch,BYTE PTR [edx+0x11426603]
  413833:	test   eax,0x6da9aa52
  413838:	mov    edi,DWORD PTR [eax]
  41383a:	pusha  
  41383b:	mov    bh,0x6
  41383d:	loope  0x4138b2
  41383f:	sbb    dh,cl
  413841:	mov    DWORD PTR [ebx+0x5bed88f1],ebx
  413847:	mov    ah,0x40
  413849:	(bad)  
  41384a:	loope  0x413890
  41384c:	(bad)  
  41384d:	int    0xaa
  41384f:	es ss sub al,0x15
  413853:	cwde   
  413854:	mov    edx,0x8273bd7
  413859:	mov    ds:0x8dc71a00,al
  41385e:	clc    
  41385f:	xchg   ebx,eax
  413860:	test   BYTE PTR [edx+0x42a90dd4],0x9d
  413867:	outs   dx,DWORD PTR ds:[esi]
  413868:	sbb    ebp,DWORD PTR [ebx-0x15d67ba4]
  41386e:	or     DWORD PTR [edx+0x49],esi
  413871:	into   
  413872:	retf   
  413873:	hlt    
  413874:	mov    dh,0x49
  413876:	cmp    ebp,DWORD PTR [ecx+0x42]
  413879:	(bad)
  41387d:	or     eax,0xbe8a0f03
  413882:	shl    DWORD PTR [eax+0x67bf54ac],0xcf
  413889:	jne    0x413885
  41388b:	fstp   DWORD PTR [edx-0x357941c5]
  413891:	cmp    BYTE PTR ss:[edx+0x4],al
  413895:	call   0xf9d0:0xd66dfb4c
  41389c:	or     esi,DWORD PTR [ebp+eax*8+0x79]
  4138a0:	add    al,0x9b
  4138a2:	sbb    BYTE PTR [edx+0x13c038f6],bl
  4138a8:	lea    ebx,[ebx+0x4]
  4138ab:	fcom   DWORD PTR [ebx]
  4138ad:	aas    
  4138ae:	arpl   WORD PTR ds:0xce17894f,bx
  4138b4:	cmp    dh,BYTE PTR [eax]
  4138b6:	aaa    
  4138b7:	pop    esi
  4138b8:	fmul   QWORD PTR [ebx]
  4138ba:	lahf   
  4138bb:	test   BYTE PTR [ebp-0xa101c19],0xb3
  4138c2:	das    
  4138c3:	inc    edx
  4138c4:	mov    cl,0xca
  4138c6:	iret   
  4138c7:	and    ecx,DWORD PTR [edi-0x44b52821]
  4138cd:	mov    bl,0x39
  4138cf:	jno    0x413934
  4138d1:	jne    0x413881
  4138d3:	pushf  
  4138d4:	push   es
  4138d5:	push   es
  4138d6:	dec    esp
  4138d7:	adc    al,0x9e
  4138d9:	gs (bad) 
  4138dc:	ds out 0xb4,eax
  4138df:	adc    dl,ah
  4138e1:	fnstcw WORD PTR [ebp-0x4183e02]
  4138e7:	jge    0x4138b2
  4138e9:	push   ss
  4138ea:	xchg   DWORD PTR [eax+0x2114c3d7],eax
  4138f0:	mov    edi,0x29567e24
  4138f5:	cmp    BYTE PTR [edi-0x6d4e69f9],bh
  4138fb:	dec    ecx
  4138fc:	retf   
  4138fd:	jl     0x413887
  4138ff:	jmp    0xe9d5c78f
  413904:	rol    DWORD PTR [ebx+0x39],cl
  413907:	xchg   esi,eax
  413908:	(bad)  
  413909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41390a:	cmp    BYTE PTR [edi+edx*2+0x3acde89e],ch
  413911:	sti    
  413912:	fwait
  413913:	jns    0x4138f4
  413915:	repz ror BYTE PTR [ecx+0x57abf37a],0xbe
  41391d:	fisub  DWORD PTR [ecx]
  41391f:	call   0x78212e
  413924:	xchg   edi,eax
  413925:	jns    0x413969
  413927:	and    BYTE PTR gs:[ecx],al
  41392a:	xchg   ecx,eax
  41392b:	imul   edx,ebx,0xb8053610
  413931:	jge    0x41393a
  413933:	push   ecx
  413934:	mov    esp,esp
  413936:	sti    
  413937:	jbe    0x413988
  413939:	call   0x9a94:0xff8e67ea
  413940:	and    BYTE PTR [ebx-0x1e1cc1b7],ah
  413946:	fnop   
  413948:	sti    
  413949:	push   ds
  41394a:	xchg   esp,eax
  41394b:	push   esp
  41394c:	push   esi
  41394d:	scas   al,BYTE PTR es:[edi]
  41394e:	add    DWORD PTR [edx-0x46],ebp
  413951:	pop    es
  413952:	repnz sub al,0xc0
  413955:	fs push 0x62
  413958:	jo     0x4138dc
  41395a:	add    edx,esp
  41395c:	dec    esi
  41395d:	repnz and edi,DWORD PTR [esi]
  413960:	add    eax,0xbe4767da
  413965:	arpl   WORD PTR [ebx+0x17],bp
  413968:	in     eax,0x9f
  41396a:	(bad)  
  41396b:	call   0x1cec:0x5236d8cf
  413972:	sub    DWORD PTR [esi+0x51],eax
  413975:	je     0x413918
  413977:	pusha  
  413978:	push   0x4280fd61
  41397d:	(bad)  
  41397e:	stc    
  41397f:	push   0x4cfd6cb3
  413984:	sub    ebx,ebx
  413986:	mov    dl,0xc4
  413988:	(bad)  
  413989:	repz jno 0x413978
  41398c:	in     al,0x79
  41398e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41398f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413990:	ins    BYTE PTR es:[edi],dx
  413991:	imul   ebx,DWORD PTR [edx+eax*2+0x3a9e8e8a],0x1125d210
  41399c:	popf   
  41399d:	inc    ebp
  41399e:	dec    esi
  41399f:	mov    ecx,0xb98c2862
  4139a4:	popf   
  4139a5:	arpl   WORD PTR [ebp-0x697bc4c5],dx
  4139ab:	xchg   ebp,eax
  4139ac:	xor    eax,0x74e30633
  4139b1:	or     eax,0xccc27cbe
  4139b6:	jae    0x413a11
  4139b8:	iret   
  4139b9:	mov    eax,ds:0xea6463c4
  4139be:	(bad)  
  4139bf:	xlat   BYTE PTR ds:[ebx]
  4139c0:	dec    esi
  4139c1:	push   edx
  4139c2:	in     al,dx
  4139c3:	mov    dh,0xbc
  4139c5:	add    eax,0x51eafd48
  4139ca:	pop    ss
  4139cb:	and    ah,BYTE PTR [ebx-0x25]
  4139ce:	dec    ebx
  4139cf:	jbe    0x413968
  4139d1:	jge    0x4139d7
  4139d3:	je     0x413963
  4139d5:	or     al,0x59
  4139d7:	and    BYTE PTR [eax+eiz*1],ah
  4139da:	test   dl,cl
  4139dc:	adc    bh,BYTE PTR [esp+ecx*1]
  4139df:	das    
  4139e0:	fs push esp
  4139e2:	jmp    0xd73a:0x4515894a
  4139e9:	pop    eax
  4139ea:	jmp    0x413a3d
  4139ec:	dec    ecx
  4139ed:	xchg   DWORD PTR [ebp+0x629fe331],esp
  4139f3:	and    ebx,0x15dc2666
  4139f9:	xor    al,0x9d
  4139fb:	sub    eax,0xa891458c
  413a00:	jbe    0x4139a0
  413a02:	inc    ebp
  413a03:	cli    
  413a04:	neg    BYTE PTR [ebx-0x22]
  413a07:	sbb    al,0x1d
  413a09:	ds mov ah,0xf6
  413a0c:	pop    ss
  413a0d:	xchg   ecx,eax
  413a0e:	test   DWORD PTR [ecx+0x3],esi
  413a11:	mov    cl,0xa1
  413a13:	test   al,0xbc
  413a15:	push   ebx
  413a16:	mul    DWORD PTR ds:0x6f5bbe90
  413a1c:	push   edx
  413a1d:	pop    edx
  413a1e:	inc    ebp
  413a1f:	sbb    ah,BYTE PTR [ecx+0x61]
  413a22:	mov    dh,0x9d
  413a24:	sti    
  413a25:	fdiv   DWORD PTR es:[esi-0x4f3db909]
  413a2c:	std    
  413a2d:	cmp    eax,0xc7887785
  413a32:	mov    esp,0x8ad9d41d
  413a37:	mov    ebp,0x35dd4ea9
  413a3c:	add    cl,BYTE PTR [edi]
  413a3e:	es in  al,0xa9
  413a41:	pop    edx
  413a42:	lds    ebx,FWORD PTR [ebp+0x20]
  413a45:	or     eax,0xba128c00
  413a4a:	pop    DWORD PTR [edx]
  413a4c:	sbb    DWORD PTR [edi],esi
  413a4e:	lahf   
  413a4f:	mov    bh,BYTE PTR [esi]
  413a51:	mov    ds:0x44971409,al
  413a56:	cmp    ch,BYTE PTR [edi+edi*2-0x9d86acb]
  413a5d:	jg     0x413a7d
  413a5f:	call   0x161daa53
  413a64:	mov    DWORD PTR [edx+0x3f4f30c],ebp
  413a6a:	xor    DWORD PTR [ebx-0x478769c],esp
  413a70:	sbb    al,0x1a
  413a72:	push   0x83c28f0a
  413a77:	ins    BYTE PTR es:[edi],dx
  413a78:	ret    0xd94b
  413a7b:	clc    
  413a7c:	out    0x4d,al
  413a7e:	mov    dl,0x5b
  413a80:	aaa    
  413a81:	inc    ecx
  413a82:	xor    DWORD PTR [edi+0x23],esp
  413a85:	fldcw  WORD PTR ds:0x91a46bac
  413a8b:	(bad)  
  413a8c:	(bad)  
  413a8d:	adc    DWORD PTR [ebp+0x75],ebx
  413a90:	loope  0x413a28
  413a92:	popf   
  413a93:	sub    DWORD PTR [esi-0x23ad1790],esp
  413a99:	mov    gs,esi
  413a9b:	sub    dl,BYTE PTR [esi]
  413a9d:	lea    ebx,[eax]
  413a9f:	mov    ebx,DWORD PTR [edi+0x6e]
  413aa2:	std    
  413aa3:	in     al,dx
  413aa4:	clc    
  413aa5:	push   ebp
  413aa6:	sbb    al,0x66
  413aa8:	push   0xffffffe8
  413aaa:	xor    eax,0x5617c73e
  413aaf:	xchg   edi,eax
  413ab0:	ds loop 0x413a4f
  413ab3:	sbb    eax,0xf0589716
  413ab8:	test   al,0x1b
  413aba:	mov    dl,0xce
  413abc:	jle    0x413b01
  413abe:	ret    
  413abf:	lods   al,BYTE PTR ds:[esi]
  413ac0:	cwde   
  413ac1:	int3   
  413ac2:	inc    esp
  413ac3:	dec    esp
  413ac4:	out    0xec,al
  413ac6:	addr16 hlt 
  413ac8:	and    DWORD PTR [ebp+0x413eeb1e],ebp
  413ace:	or     eax,DWORD PTR ds:0x1bcd2347
  413ad4:	outs   dx,DWORD PTR ds:[esi]
  413ad5:	push   ss
  413ad6:	gs (bad) 
  413ad8:	push   ss
  413ad9:	xchg   ecx,eax
  413ada:	mov    dl,0xa8
  413adc:	add    edi,DWORD PTR [ecx+0x4678fdc6]
  413ae2:	div    BYTE PTR [ebp-0x73801fdc]
  413ae8:	cmp    al,0xcf
  413aea:	mov    eax,ds:0xf8e9adf4
  413aef:	jmp    0x2a3e:0xe4d5bbb7
  413af6:	or     al,BYTE PTR [edi]
  413af8:	int    0x43
  413afa:	inc    edx
  413afb:	(bad)  
  413afc:	fild   QWORD PTR [esp+eax*8-0x5d90de3e]
  413b03:	sar    BYTE PTR [esi-0x57184d44],1
  413b09:	or     edx,DWORD PTR [esi]
  413b0b:	pop    esi
  413b0c:	retf   
  413b0d:	sbb    DWORD PTR [ebx+0x4c1610cf],eax
  413b13:	lahf   
  413b14:	imul   edx,DWORD PTR [ebx-0x2386629a],0xffffff95
  413b1b:	dec    ebx
  413b1c:	repnz mov dh,0xe1
  413b1f:	inc    esp
  413b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b21:	scas   al,BYTE PTR es:[edi]
  413b22:	mov    al,ds:0xc4575166
  413b27:	sub    cl,dh
  413b29:	xor    DWORD PTR [ecx],esi
  413b2b:	clc    
  413b2c:	popa   
  413b2d:	in     eax,0xaa
  413b2f:	lods   eax,DWORD PTR ds:[esi]
  413b30:	add    eax,0x2e747c0f
  413b35:	xchg   edi,eax
  413b36:	push   ds
  413b37:	push   ss
  413b38:	int3   
  413b39:	cs pop edx
  413b3b:	inc    esi
  413b3c:	inc    edx
  413b3d:	out    0xf4,eax
  413b3f:	xor    DWORD PTR [edi+0xf5f761b],ebx
  413b45:	into   
  413b46:	loope  0x413b0e
  413b48:	nop
  413b49:	outs   dx,BYTE PTR ds:[esi]
  413b4a:	dec    BYTE PTR [esi]
  413b4c:	test   BYTE PTR [edx+ebx*8+0x14c9acc9],bh
  413b53:	cli    
  413b54:	mov    DWORD PTR [esp+eax*4],edx
  413b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b58:	leave  
  413b59:	test   DWORD PTR [esi+0x64],eax
  413b5c:	aas    
  413b5d:	cmp    ah,dl
  413b5f:	add    al,BYTE PTR [eax]
  413b61:	lds    ecx,FWORD PTR [eax+0x306050c9]
  413b67:	test   al,0xa9
  413b69:	sub    BYTE PTR [ebx+0x25dd49ae],bl
  413b6f:	loop   0x413b0e
  413b71:	jae    0x413b52
  413b73:	ficomp DWORD PTR [eax]
  413b75:	mov    dh,0x20
  413b77:	inc    edx
  413b78:	jmp    0xb163:0x1b72f68
  413b7f:	fild   QWORD PTR [ebx-0x3dd02922]
  413b85:	nop
  413b86:	repz call 0x15f35d9e
  413b8c:	cmp    eax,0x74b62eb6
  413b91:	and    al,0xdd
  413b93:	sbb    BYTE PTR [esi-0x405d244b],cl
  413b99:	adc    DWORD PTR [edx+0x49],eax
  413b9c:	mov    ecx,0xbf0ba882
  413ba1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba2:	sbb    BYTE PTR [esi-0x5cca76c0],bh
  413ba8:	lahf   
  413ba9:	scas   eax,DWORD PTR es:[edi]
  413baa:	dec    ebp
  413bab:	(bad)  
  413bac:	or     DWORD PTR [eax+0x1776f809],ecx
  413bb2:	and    al,0x7e
  413bb4:	pushf  
  413bb5:	pop    ds
  413bb6:	iret   
  413bb7:	or     eax,0xf1a4c457
  413bbc:	or     eax,0x49c076f7
  413bc1:	fucomp st(1)
  413bc3:	sub    bh,al
  413bc5:	pop    edx
  413bc6:	sbb    dl,BYTE PTR [esi]
  413bc8:	repz mov esp,DWORD PTR ds:0xab65933d
  413bcf:	cmp    ah,BYTE PTR [eax-0x3f]
  413bd2:	jb     0x413b85
  413bd4:	xor    DWORD PTR [ebx+ebp*2+0x5f],ebp
  413bd8:	outs   dx,DWORD PTR ds:[esi]
  413bd9:	mov    dl,0xd5
  413bdb:	fcomp  st(6)
  413bdd:	dec    edi
  413bde:	dec    edx
  413bdf:	cmp    ch,BYTE PTR [ecx+0x4d8bb07e]
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	dec    esi
  413d45:	call   0xeada1abe
  413d4a:	ret    0xa948
  413d4d:	add    al,0x98
  413d4f:	scas   eax,DWORD PTR es:[edi]
  413d50:	xor    ebx,ecx
  413d52:	jns    0x413cec
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
