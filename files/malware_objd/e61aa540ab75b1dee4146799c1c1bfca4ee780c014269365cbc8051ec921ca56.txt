
e61aa540ab75b1dee4146799c1c1bfca4ee780c014269365cbc8051ec921ca56.exe:     file format pei-i386


Disassembly of section UPX1:

00508000 <UPX1>:
  508000:	sbb    al,BYTE PTR [ebx]
  508002:	add    BYTE PTR [eax],al
  508004:	outs   dx,DWORD PTR ds:[esi]
  508005:	std    
  508006:	out    dx,eax
  508007:	cdq    
  508008:	inc    ecx
  508009:	sbb    al,0xab
  50800b:	push   ebp
  50800c:	idiv   ebx
  50800e:	fst    DWORD PTR [edx]
  508010:	pop    ecx
  508011:	test   eax,0x3e5316
  508016:	mov    dh,0xf6
  508018:	mov    edx,0x9886259b
  50801d:	out    dx,al
  50801e:	sahf   
  50801f:	sbb    al,0xcd
  508021:	mov    al,BYTE PTR [esi+ebp*2]
  508024:	shr    DWORD PTR [esi-0x20],1
  508027:	jo     0x508050
  508029:	push   edi
  50802a:	mov    esp,0xd1e0a85a
  50802f:	xchg   ebp,eax
  508030:	add    bl,dl
  508032:	cs pushf 
  508034:	shl    BYTE PTR [edi-0x739f7f25],cl
  50803a:	jmp    0x508070
  50803c:	dec    eax
  50803d:	fs sbb dh,ah
  508040:	outs   dx,DWORD PTR ds:[esi]
  508041:	div    esp
  508043:	sub    esp,DWORD PTR ds:0x8c41fd17
  508049:	mov    esi,0xdb1cc1c3
  50804e:	shl    DWORD PTR [edx-0x411107a9],0x8a
  508055:	and    bh,dl
  508057:	cdq    
  508058:	and    DWORD PTR [esi],ecx
  50805a:	pop    DWORD PTR [ecx]
  50805c:	pop    ebx
  50805d:	popf   
  50805e:	inc    eax
  50805f:	retf   0xe266
  508062:	xor    BYTE PTR [edx],ch
  508064:	push   esp
  508065:	xor    esi,DWORD PTR [ecx-0xb75ca30]
  50806b:	iret   
  50806c:	cmp    ch,BYTE PTR [edi]
  50806e:	xlat   BYTE PTR ds:[ebx]
  50806f:	adc    eax,DWORD PTR [ecx-0x35]
  508072:	xor    eax,0x41b238c3
  508077:	ficomp DWORD PTR [ebx+0x78]
  50807a:	cmp    ebp,DWORD PTR [edx]
  50807c:	push   0x6f
  50807e:	sahf   
  50807f:	pop    eax
  508080:	shl    BYTE PTR [ebx+eiz*8],1
  508083:	fwait
  508084:	add    eax,0xb90e4ce6
  508089:	inc    eax
  50808a:	ret    0x26d7
  50808d:	popf   
  50808e:	or     cl,BYTE PTR [esi+0xc]
  508091:	imul   eax,DWORD PTR [ebx-0x5f7d4940],0xffffffaa
  508098:	or     BYTE PTR [edx+eax*4+0x57],cl
  50809c:	or     DWORD PTR [ebp+ebp*8-0x72],esp
  5080a0:	or     eax,0xb072a303
  5080a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5080a6:	adc    eax,0x44aa61e4
  5080ab:	(bad)  
  5080ac:	and    DWORD PTR [edx+edx*1],esi
  5080af:	xor    eax,0x44c6a9bd
  5080b4:	pushf  
  5080b5:	or     al,0x8
  5080b7:	xor    BYTE PTR [edx],bh
  5080b9:	call   0x3805:0x2172d062
  5080c0:	loope  0x508106
  5080c2:	push   esi
  5080c3:	mov    ebp,edi
  5080c5:	aas    
  5080c6:	mov    ch,0xca
  5080c8:	jmp    0xe48c8186
  5080cd:	mov    bh,0xdc
  5080cf:	jo     0x5080f5
  5080d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5080d2:	call   0x57f54253
  5080d7:	jo     0x50805a
  5080d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5080da:	sub    eax,0xd3cda278
  5080df:	(bad)  
  5080e2:	repnz rol dl,1
  5080e5:	sar    bh,0xcd
  5080e8:	popa   
  5080e9:	fisttp DWORD PTR [eax]
  5080eb:	or     DWORD PTR [esi+edx*1+0xb972002],0x6d
  5080f3:	loope  0x50811d
  5080f5:	cmp    BYTE PTR [edx-0x58],ch
  5080f8:	and    eax,0xc3484cf1
  5080fd:	xchg   esp,eax
  5080fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5080ff:	(bad)  
  508100:	aas    
  508101:	inc    esp
  508102:	jb     0x50809b
  508104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  508105:	pop    ebx
  508106:	aad    0x8d
  508108:	aas    
  508109:	sub    ebp,DWORD PTR [ecx+0x2f]
  50810c:	add    al,0x94
  50810e:	cmp    eax,0xdf954c6b
  508113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  508114:	fnstenv [edx+0x18002996]
  50811a:	cdq    
  50811b:	xchg   DWORD PTR [ebp+ecx*8+0x4d],eax
  50811f:	sub    ebx,DWORD PTR [edi+eax*1]
  508122:	icebp  
  508123:	and    BYTE PTR [esi],dl
  508125:	aad    0x21
  508127:	and    bh,bh
  508129:	sahf   
  50812a:	pop    esi
  50812b:	bound  edx,QWORD PTR [eax-0x44b54c4b]
  508131:	jb     0x508139
  508133:	sti    
  508134:	sbb    DWORD PTR [eax+0x2ad5f2c0],esi
  50813a:	jle    0x50817c
  50813c:	data16 mov al,0xac
  50813f:	lds    edx,FWORD PTR [edx+0x51]
  508142:	push   0xffffff85
  508144:	cld    
  508145:	jns    0x5081c4
  508147:	or     BYTE PTR [ecx+0x197d02a9],bh
  50814d:	inc    ecx
  50814e:	mov    al,ds:0x45c043a2
  508153:	lds    ecx,FWORD PTR [ebx-0x2e]
  508156:	dec    ecx
  508157:	jae    0x5080de
  508159:	xchg   ecx,eax
  50815a:	jecxz  0x5080fe
  50815c:	jnp    0x5080e9
  50815e:	inc    edi
  50815f:	je     0x5081ca
  508161:	mov    ?,WORD PTR [esi+ebp*1]
  508164:	dec    ecx
  508165:	mov    cl,cl
  508167:	mov    ds:0x5863ba96,al
  50816c:	pop    edi
  50816d:	pusha  
  50816e:	cwde   
  50816f:	inc    esi
  508170:	mov    ebx,0xad88c7a1
  508175:	xchg   ecx,eax
  508176:	mov    ah,dh
  508178:	dec    ebx
  508179:	ret    
  50817a:	ror    DWORD PTR [eiz*2-0x7a8227d4],0x75
  508182:	mov    ecx,0x8f6f8cbe
  508187:	cmp    edi,esi
  508189:	pushf  
  50818a:	push   es
  50818b:	enter  0x82e9,0x7f
  50818f:	mov    ds:0xf4000f6a,al
  508194:	push   esp
  508195:	bound  edi,QWORD PTR [ebx]
  508197:	sar    DWORD PTR [edi+0x59],cl
  50819a:	and    edi,0x40f73f95
  5081a0:	not    ecx
  5081a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5081a3:	xchg   esi,eax
  5081a4:	jo     0x50813c
  5081a6:	mov    ah,0x61
  5081a8:	mov    ebx,0x8cb66c5b
  5081ad:	sub    eax,0xfd2994a9
  5081b2:	mov    al,0xbb
  5081b4:	imul   edi,DWORD PTR [ecx-0x37],0x13afe1b2
  5081bb:	fwait
  5081bc:	addr16 sahf 
  5081be:	mov    ebx,0xbc7f28b8
  5081c3:	mov    edx,0xfe84f1a9
  5081c8:	addr16 (bad) 
  5081cb:	xor    edi,ebp
  5081cd:	nop
  5081ce:	retf   0x483d
  5081d1:	rcr    DWORD PTR [edx],cl
  5081d3:	xor    DWORD PTR [edx-0x56f25de6],esp
  5081d9:	unpckhps xmm1,xmm2
  5081dc:	jl     0x50819f
  5081de:	inc    edx
  5081df:	std    
  5081e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5081e1:	ret    0x57b
  5081e4:	lods   al,BYTE PTR ds:[esi]
  5081e5:	inc    esi
  5081e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5081e7:	pop    edx
  5081e8:	aam    0xa5
  5081ea:	gs pop ss
  5081ec:	call   0x461ee08c
  5081f1:	shl    BYTE PTR [esi+0x1b],0x13
  5081f5:	(bad)  
  5081f6:	sbb    BYTE PTR [eax],ch
  5081f8:	jl     0x5081d3
  5081fa:	mov    WORD PTR [ecx],gs
  5081fc:	or     al,0x7f
  5081fe:	repnz popf 
  508200:	cmp    eax,DWORD PTR [eax+0x4bdc2a2f]
  508206:	add    ebx,DWORD PTR cs:[ecx+0x45]
  50820a:	scas   al,BYTE PTR es:[edi]
  50820b:	pop    ebx
  50820c:	sahf   
  50820d:	mov    esp,0x2a901858
  508212:	ret    0x664b
  508215:	mov    ds:0x30d31833,eax
  50821a:	sub    BYTE PTR [edx+0x47],cl
  50821d:	cs ret 
  50821f:	dec    esi
  508220:	pop    ds
  508221:	rcr    ch,1
  508223:	mov    al,0x94
  508225:	mov    eax,ds:0x5dfcf8b7
  50822a:	jno    0x5081e7
  50822c:	lea    ebp,[ecx]
  50822e:	inc    ecx
  50822f:	fild   DWORD PTR [edi]
  508231:	stc    
  508232:	dec    ecx
  508233:	sbb    eax,0xd34780ff
  508238:	cmc    
  508239:	dec    ebx
  50823a:	xor    BYTE PTR [ecx-0xecaa7c7],al
  508240:	add    al,0xf6
  508242:	aad    0x94
  508244:	inc    eax
  508245:	shr    DWORD PTR [esi-0x5e],1
  508248:	and    DWORD PTR [esi],esp
  50824a:	retf   0xd491
  50824d:	jns    0x50820e
  50824f:	repz cdq 
  508251:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  508252:	fldcw  WORD PTR [ebx]
  508254:	sbb    ah,BYTE PTR [esi-0x4b]
  508257:	add    eax,0x2e9d1b57
  50825c:	popa   
  50825d:	jbe    0x50823b
  50825f:	loopne 0x508262
  508261:	rol    BYTE PTR [ebp+0xb7373f8],cl
  508267:	sub    eax,0x1f76a71b
  50826c:	xchg   edi,eax
  50826d:	cmp    BYTE PTR [edx+0x71],bl
  508270:	(bad)
  508273:	lods   eax,DWORD PTR ds:[esi]
  508274:	xchg   edi,eax
  508275:	sub    bh,BYTE PTR [ebx]
  508277:	mov    dl,0x70
  508279:	jle    0x50822c
  50827b:	call   0x5d65:0xe473c0fb
  508282:	(bad)  
  508283:	cs scas al,BYTE PTR es:[edi]
  508285:	pop    ecx
  508286:	sbb    DWORD PTR [ecx-0x7c],ebp
  508289:	int    0x97
  50828b:	add    edi,ebx
  50828d:	dec    ebx
  50828e:	jge    0x5082f7
  508290:	in     eax,0x62
  508292:	inc    ebx
  508293:	jg     0x50825e
  508295:	fist   DWORD PTR [eax+eiz*2-0x75]
  508299:	pop    edi
  50829a:	mov    eax,0x773a66f8
  50829f:	sub    eax,0x2c2f07dd
  5082a4:	xor    DWORD PTR [ebx],0x460ddda0
  5082aa:	shr    DWORD PTR [ebp+0x3f],1
  5082ad:	sti    
  5082ae:	sbb    BYTE PTR [edi-0xf],bh
  5082b1:	lds    ebp,FWORD PTR [eax*1+0x51070cc]
  5082b8:	mov    dh,0xed
  5082ba:	sub    eax,0x3f3053e5
  5082bf:	out    0x74,eax
  5082c1:	mov    al,ss:0xc972924
  5082c7:	mov    ds:0xb29691e5,eax
  5082cc:	ins    DWORD PTR es:[edi],dx
  5082cd:	xor    eax,0x36b21e24
  5082d2:	sbb    DWORD PTR [ecx],eax
  5082d4:	pop    es
  5082d5:	stos   DWORD PTR es:[edi],eax
  5082d6:	pop    edx
  5082d7:	mov    ah,0xc3
  5082d9:	pop    esp
  5082da:	add    eax,0xf5ad1667
  5082df:	xor    edx,DWORD PTR [ebx-0x7d]
  5082e2:	out    0xc2,al
  5082e4:	sahf   
  5082e5:	mul    BYTE PTR [ebx+ebx*2-0x36bfc069]
  5082ec:	dec    edx
  5082ed:	and    al,0x0
  5082ef:	retf   0xc28c
  5082f2:	fidiv  WORD PTR ds:0x106660b2
  5082f8:	inc    eax
  5082f9:	jecxz  0x508327
  5082fb:	popf   
  5082fc:	sbb    BYTE PTR [edi-0x1d430f23],ch
  508302:	int    0x6d
  508304:	call   0x4517d696
  508309:	mov    dh,0xb2
  50830b:	int    0x36
  50830d:	cli    
  50830e:	xchg   edx,eax
  50830f:	mov    edx,0x727b0b29
  508314:	jo     0x508368
  508316:	fcomi  st,st(5)
  508318:	push   esi
  508319:	(bad)  
  50831a:	icebp  
  50831b:	dec    ebp
  50831c:	mov    bx,0x462
  508320:	test   BYTE PTR [ebp-0x372b96f6],ch
  508326:	push   0xffffffef
  508328:	loopne 0x5083a3
  50832a:	xor    DWORD PTR ss:[edi+0x27cb37b4],edx
  508331:	mov    edx,0x2b658e0b
  508336:	sbb    dl,BYTE PTR gs:[edx+0x180f6816]
  50833d:	adc    DWORD PTR [ecx+0x2c],0x3dc11e6a
  508344:	mov    edx,0xdcffb623
  508349:	std    
  50834a:	fst    DWORD PTR [esi+0x67]
  50834d:	fild   DWORD PTR [ebp*8+0x33c9506e]
  508354:	adc    eax,0x44317b7a
  508359:	cmp    BYTE PTR [esi+0x6f87d3b2],ch
  50835f:	(bad)  
  508360:	in     eax,0xa9
  508362:	retf   
  508363:	sbb    eax,edx
  508365:	sub    eax,0x4abb281c
  50836a:	mov    ch,0xce
  50836c:	mov    ds:0x594712e9,eax
  508371:	push   0xffffffe5
  508373:	repnz add esp,DWORD PTR [eax]
  508376:	ins    DWORD PTR es:[edi],dx
  508377:	push   ebp
  508378:	sub    dl,BYTE PTR [ebp+0x53]
  50837b:	fist   DWORD PTR [esi]
  50837d:	into   
  50837e:	mov    ecx,0x2c73ca04
  508383:	leave  
  508384:	pop    edi
  508385:	ret    0x50ca
  508388:	pop    es
  508389:	dec    edi
  50838a:	jnp    0x508369
  50838c:	mov    bl,0xd9
  50838e:	push   edx
  50838f:	and    bh,dl
  508391:	sbb    dl,BYTE PTR [ebx+esi*4-0x3f4c044f]
  508398:	mov    esp,0xb3ad6ab8
  50839d:	jbe    0x508394
  50839f:	outs   dx,BYTE PTR ds:[esi]
  5083a0:	rcl    DWORD PTR [eax+0x18],cl
  5083a3:	push   0xffffffaa
  5083a5:	pop    esp
  5083a6:	call   0x48a0:0x6235705c
  5083ad:	test   bh,ch
  5083af:	xchg   ebx,eax
  5083b0:	dec    ecx
  5083b1:	push   ds
  5083b2:	xchg   esp,eax
  5083b3:	xor    DWORD PTR [esi-0x703b702],edi
  5083b9:	(bad)  
  5083ba:	sbb    ecx,DWORD PTR [edi+0x17]
  5083bd:	xor    ecx,DWORD PTR [esi-0x5b]
  5083c0:	xchg   ecx,eax
  5083c1:	fadd   QWORD PTR [edx+edx*2-0x7e]
  5083c5:	ja     0x5083d3
  5083c7:	mov    ah,0x95
  5083c9:	(bad)  
  5083ca:	sbb    edx,DWORD PTR [ebx-0x355e395b]
  5083d0:	ins    BYTE PTR es:[edi],dx
  5083d1:	int3   
  5083d2:	pop    eax
  5083d3:	pushf  
  5083d4:	add    DWORD PTR [ecx],ebx
  5083d6:	inc    esp
  5083d7:	popa   
  5083d8:	push   eax
  5083d9:	sbb    eax,0x35e02604
  5083de:	xchg   ebx,eax
  5083df:	pop    esi
  5083e0:	scas   al,BYTE PTR es:[edi]
  5083e1:	test   eax,0xb58518a0
  5083e6:	dec    ebp
  5083e7:	aad    0x6f
  5083e9:	jo     0x508450
  5083eb:	mov    cl,BYTE PTR [ecx+0x6bd079b3]
  5083f1:	inc    ebp
  5083f2:	xchg   ecx,eax
  5083f3:	outs   dx,BYTE PTR ds:[esi]
  5083f4:	jno    0x5083d1
  5083f6:	cmp    BYTE PTR [ecx-0x7e19d094],bl
  5083fc:	mov    BYTE PTR [esi-0x38bb43ea],0x1
  508403:	xchg   ebx,eax
  508404:	stos   DWORD PTR es:[edi],eax
  508405:	dec    edi
  508406:	or     cl,BYTE PTR [ebx+0x528e4b1a]
  50840c:	mov    eax,0x41c7138d
  508411:	jl     0x5083c9
  508413:	(bad)  
  508414:	jg     0x50841b
  508416:	in     eax,0x6d
  508418:	fwait
  508419:	mov    edx,0xc002333f
  50841e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50841f:	fnstenv [edx]
  508421:	inc    ecx
  508422:	daa    
  508423:	aaa    
  508424:	sbb    DWORD PTR [esi+0x45],esp
  508427:	das    
  508428:	inc    edi
  508429:	xor    ah,BYTE PTR [ecx+esi*4-0x4e]
  50842d:	in     al,dx
  50842e:	inc    DWORD PTR [ebx]
  508430:	and    al,0xd3
  508432:	jg     0x5083dc
  508434:	mov    ds:0x1bb4e4c6,al
  508439:	aad    0x9a
  50843b:	mov    cl,BYTE PTR [esi+0x6e]
  50843e:	adc    cl,BYTE PTR cs:[eax+edx*4]
  508442:	push   ebx
  508443:	(bad)  
  508444:	popa   
  508445:	mov    ds:0x53dfb988,eax
  50844a:	fstp   QWORD PTR [bp+si]
  50844d:	cmp    dl,BYTE PTR [ecx]
  50844f:	pop    ss
  508450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  508451:	stos   DWORD PTR es:[edi],eax
  508452:	mov    edx,0x25b08102
  508457:	pop    ecx
  508458:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  50845a:	pop    esi
  50845b:	sub    bh,ah
  50845d:	add    ecx,DWORD PTR [ebx+eax*8+0x1932f9c8]
  508464:	cmp    al,0xfb
  508466:	cmp    al,0x2b
  508468:	stos   BYTE PTR es:[edi],al
  508469:	cdq    
  50846a:	ds pop edx
  50846c:	sub    BYTE PTR [ebp-0x497e0bf0],ah
  508472:	sub    al,0x64
  508474:	stc    
  508475:	jmp    0x50844d
  508477:	iret   
  508478:	(bad)  
  508479:	pop    ebp
  50847a:	lods   eax,DWORD PTR ds:[esi]
  50847b:	lock pop ecx
  50847d:	and    ch,BYTE PTR [eax]
  50847f:	fdivr  QWORD PTR [ecx-0x52a83342]
  508485:	scas   al,BYTE PTR es:[edi]
  508486:	jns    0x50848f
  508488:	cmp    al,0x10
  50848a:	ss pop esi
  50848c:	psllw  mm0,QWORD PTR ds:0x607ea270
  508493:	add    BYTE PTR [esi-0x76],bh
  508496:	dec    esp
  508497:	jns    0x5084db
  508499:	add    bh,BYTE PTR [edi-0x3c]
  50849c:	sub    ecx,eax
  50849e:	test   DWORD PTR [esi-0x67d5800a],0x34394987
  5084a8:	fs das 
  5084aa:	xchg   DWORD PTR [ebx+0x7ed92c09],edx
  5084b0:	popf   
  5084b1:	mov    al,ds:0x21fd9ce
  5084b6:	xor    DWORD PTR [esi],esp
  5084b8:	jo     0x5084f8
  5084ba:	xor    DWORD PTR ds:0x3dba2785,edx
  5084c0:	cdq    
  5084c1:	(bad)  
  5084c2:	and    BYTE PTR [ecx-0x775518bc],dl
  5084c8:	(bad)  
  5084c9:	pop    ecx
  5084ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5084cb:	sub    ch,dh
  5084cd:	push   ebp
  5084ce:	jl     0x50853f
  5084d0:	mov    esp,0x43b6a2cf
  5084d5:	inc    DWORD PTR [esi]
  5084d7:	sub    eax,0x279b367d
  5084dc:	xor    eax,0x27bccd68
  5084e1:	mov    al,ds:0x34c9b1f2
  5084e6:	je     0x50855d
  5084e8:	jns    0x508563
  5084ea:	jae    0x508534
  5084ec:	adc    cl,BYTE PTR [esi]
  5084ee:	mov    ah,0x62
  5084f0:	loop   0x5084de
  5084f2:	mov    ?,WORD PTR [ecx+0x46d48158]
  5084f8:	lea    eax,[esi]
  5084fa:	les    esp,FWORD PTR [edi+eax*2+0x73]
  5084fe:	cwde   
  5084ff:	sub    al,0x2f
  508501:	mov    esp,0x3f192a82
  508506:	cwde   
  508507:	inc    ebp
  508508:	cmp    eax,0x2ff0428f
  50850d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50850e:	fistp  DWORD PTR [esi+eiz*4-0x29]
  508512:	dec    eax
  508513:	mov    bl,BYTE PTR [esi+0x61c1347e]
  508519:	inc    ecx
  50851a:	aaa    
  50851b:	jp     0x5084b2
  50851d:	xlat   BYTE PTR ds:[ebx]
  50851e:	pushf  
  50851f:	sahf   
  508520:	cmp    eax,0x5ba84f1a
  508525:	mov    bl,0x9
  508527:	stc    
  508528:	sbb    al,0xff
  50852a:	in     al,0xb3
  50852c:	stos   DWORD PTR es:[edi],eax
  50852d:	lods   al,BYTE PTR ds:[esi]
  50852e:	mov    esp,0x4c0bf59e
  508533:	es jmp 0x7eeb32a5
  508539:	pop    ebp
  50853a:	mov    esp,0x89ff2a38
  50853f:	out    0xab,al
  508541:	push   ss
  508542:	popa   
  508543:	inc    ebp
  508544:	jae    0x508597
  508546:	add    BYTE PTR [edx+0x2],ah
  508549:	mov    esi,0x3cb5e9e1
  50854e:	cmp    al,0x56
  508550:	(bad)  
  508551:	push   edx
  508552:	pop    es
  508553:	or     al,0xc7
  508555:	push   0xffffffab
  508557:	test   al,0x93
  508559:	retf   0x3a9e
  50855c:	aaa    
  50855d:	cmp    eax,0xf107dca2
  508562:	xlat   BYTE PTR ds:[ebx]
  508563:	ror    BYTE PTR [ebp+0x2e1483b],0x3e
  50856a:	shl    bl,1
  50856c:	pop    es
  50856d:	fist   WORD PTR ds:0x4b598163
  508573:	pop    esi
  508574:	bswap  eax
  508576:	es pusha 
  508578:	mov    ebp,eax
  50857a:	sbb    bh,BYTE PTR [eax]
  50857c:	xchg   DWORD PTR [ebx],edx
  50857e:	mov    BYTE PTR [esi-0x60],al
  508581:	in     eax,0xe8
  508583:	sbb    DWORD PTR [edi-0xe],0x5a
  508587:	out    dx,al
  508588:	jl     0x50851e
  50858a:	jno    0x50860a
  50858c:	leave  
  50858d:	lea    esi,[ebx]
  50858f:	call   0xe608d1fc
  508594:	xchg   esi,eax
  508595:	in     al,0xd6
  508597:	mov    eax,0x1665cf71
  50859c:	cwde   
  50859d:	loop   0x50853a
  50859f:	xor    eax,0x4c39882e
  5085a5:	push   cs
  5085a6:	mov    bh,0x69
  5085a8:	retf   
  5085a9:	icebp  
  5085aa:	test   BYTE PTR [esp+ebp*1-0x2a16f9b4],cl
  5085b1:	mov    ch,0xef
  5085b3:	jg     0x50860e
  5085b5:	daa    
  5085b6:	into   
  5085b7:	shl    esi,cl
  5085b9:	push   ecx
  5085ba:	mov    esi,0xbbf102f7
  5085bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5085c0:	xchg   ebp,eax
  5085c1:	add    BYTE PTR [esi+ecx*4-0x6f],dh
  5085c5:	inc    esi
  5085c6:	add    al,0x62
  5085c8:	in     al,0x66
  5085ca:	int    0x4
  5085cc:	(bad)  
  5085cd:	retf   
  5085ce:	iret   
  5085cf:	pusha  
  5085d0:	push   edx
  5085d1:	mov    ds:0xfdf1218,eax
  5085d6:	popf   
  5085d7:	mov    ch,0x98
  5085d9:	int3   
  5085da:	xchg   esp,eax
  5085db:	adc    BYTE PTR [edx+0x52],ch
  5085de:	jbe    0x5085df
  5085e0:	and    DWORD PTR [esi+0x53c7b08d],ebp
  5085e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5085e7:	or     edi,edi
  5085e9:	jbe    0x5085bd
  5085eb:	cmp    bh,BYTE PTR [esi-0x26eb83ba]
  5085f1:	bsf    esi,edi
  5085f4:	push   ebp
  5085f5:	popa   
  5085f6:	sub    DWORD PTR [edi+0x46],ebx
  5085f9:	pusha  
  5085fa:	aam    0x5b
  5085fc:	outs   dx,DWORD PTR ds:[esi]
  5085fd:	or     ebp,DWORD PTR [esi+0x37]
  508600:	push   0xffffff8b
  508602:	dec    ecx
  508603:	push   0x7f1e7344
  508608:	sbb    eax,0x528d5eac
  50860d:	mov    dl,BYTE PTR [eax+0x1]
  508610:	cld    
  508611:	pop    esp
  508612:	inc    DWORD PTR es:[ebp-0x7]
  508616:	jecxz  0x508643
  508618:	sti    
  508619:	std    
  50861a:	ret    
  50861b:	mov    DWORD PTR [edx],esi
  50861d:	loop   0x5085d2
  50861f:	in     eax,0xbb
  508621:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508622:	out    dx,al
  508623:	or     al,0x93
  508625:	pop    edx
  508626:	xchg   BYTE PTR [eax],ch
  508628:	data16 lahf 
  50862a:	mov    dl,0x81
  50862c:	and    DWORD PTR [ebx-0x6064214c],ebp
  508632:	int    0x4a
  508634:	and    eax,0xd7cfaeb1
  508639:	sti    
  50863a:	sub    DWORD PTR [esi+0x631a48b5],ebx
  508640:	mov    bl,0xb0
  508642:	push   ss
  508643:	inc    edx
  508644:	int3   
  508645:	pop    esi
  508646:	loop   0x508603
  508648:	pop    ds
  508649:	retf   0xac4a
  50864c:	stc    
  50864d:	rcr    cl,0xb3
  508650:	scas   eax,DWORD PTR es:[edi]
  508651:	and    edx,DWORD PTR [ecx+0xe]
  508654:	and    eax,0xd246f65c
  508659:	fdivr  QWORD PTR [esi-0x7711f472]
  50865f:	inc    eax
  508660:	rcr    DWORD PTR [ebx+esi*2+0x403fbe9d],1
  508667:	add    eax,0x9a14edca
  50866c:	push   0x2260fea6
  508671:	popa   
  508672:	sub    BYTE PTR [esi+0x67],0xf5
  508676:	jne    0x50865d
  508678:	hlt    
  508679:	out    dx,eax
  50867a:	int3   
  50867b:	in     eax,dx
  50867c:	add    eax,0xa3b45d32
  508681:	(bad)  
  508682:	aam    0x6a
  508684:	and    eax,0x88715c86
  508689:	rol    esp,0x29
  50868c:	ss mov dh,0xe1
  50868f:	adc    dl,BYTE PTR [edi-0x37cb2ca7]
  508695:	mov    edx,0x98e25105
  50869a:	fucompp 
  50869c:	mov    edi,0xc74d759b
  5086a1:	push   edx
  5086a2:	(bad)  
  5086a5:	rcr    BYTE PTR [ecx],0x9a
  5086a8:	leave  
  5086a9:	add    al,0xf
  5086ab:	sub    edx,DWORD PTR [ecx+eax*4]
  5086ae:	sub    ch,BYTE PTR [edi+0x36]
  5086b1:	dec    eax
  5086b2:	repnz add dh,BYTE PTR ss:[edi]
  5086b6:	jne    0x5086e0
  5086b8:	mov    al,0x2f
  5086ba:	nop
  5086bb:	jnp    0x508656
  5086bd:	sbb    cl,ah
  5086bf:	and    bl,al
  5086c1:	fdivr  QWORD PTR [eax-0x2462ef38]
  5086c7:	and    al,0xbb
  5086c9:	test   ah,ch
  5086cb:	or     eax,0x7e532ba3
  5086d0:	(bad)  
  5086d1:	lea    ebx,[edi]
  5086d3:	mov    ds:0x77c4e110,eax
  5086d8:	adc    ebx,DWORD PTR [eax+eiz*1-0x70]
  5086dc:	nop
  5086dd:	sub    ebp,DWORD PTR [edx-0x30]
  5086e0:	jnp    0x50875a
  5086e2:	dec    edi
  5086e3:	js     0x5086e7
  5086e5:	outs   dx,DWORD PTR ds:[esi]
  5086e6:	nop
  5086e7:	fdiv   DWORD PTR [edi]
  5086e9:	xchg   ebx,eax
  5086ea:	retf   
  5086eb:	and    DWORD PTR [edx+0x1d],ebx
  5086ee:	lds    ecx,FWORD PTR [ebx]
  5086f0:	sahf   
  5086f1:	xor    BYTE PTR [edi-0x76],al
  5086f4:	mov    ebx,0x37be4792
  5086f9:	cmp    eax,0xc5e2bf8e
  5086fe:	sub    esp,edi
  508700:	sbb    eax,DWORD PTR [ebp+0x64000351]
  508706:	push   ds
  508707:	push   ss
  508708:	adc    eax,0x29ffdbde
  50870d:	cmp    al,0xde
  50870f:	xor    edi,eax
  508711:	js     0x508751
  508713:	stos   DWORD PTR es:[edi],eax
  508714:	fst    DWORD PTR [edx-0x3e]
  508717:	or     ch,cl
  508719:	jmp    DWORD PTR [ecx-0x25]
  50871c:	hlt    
  50871d:	fisubr DWORD PTR gs:[ebp-0x3c]
  508721:	ror    BYTE PTR [esi],1
  508723:	aam    0x78
  508725:	jecxz  0x508717
  508727:	pop    ds
  508728:	add    al,0xb
  50872a:	aad    0xd1
  50872c:	lock ja 0x5086cb
  50872f:	ins    BYTE PTR es:[edi],dx
  508730:	repnz shl DWORD PTR [edi+0x278c36e4],1
  508737:	sub    al,BYTE PTR [ecx+edi*2-0x59]
  50873b:	js     0x50873f
  50873d:	mov    ebp,0x4eccfa7b
  508742:	test   DWORD PTR [ebx+0x5a],edx
  508745:	ins    BYTE PTR es:[edi],dx
  508746:	pop    edx
  508747:	pop    edx
  508748:	sub    eax,0xdb1081ed
  50874d:	mov    bh,0x8f
  50874f:	popa   
  508750:	fild   WORD PTR [esi]
  508752:	sub    cl,cl
  508754:	shl    BYTE PTR [eax+0x39],1
  508757:	in     eax,dx
  508758:	dec    DWORD PTR ds:0x1b030105
  50875e:	test   DWORD PTR [eax-0x696b4612],0x32304863
  508768:	fmul   st(5),st
  50876a:	push   esi
  50876b:	ins    DWORD PTR es:[edi],dx
  50876c:	xchg   ecx,eax
  50876d:	or     eax,0xe6f5958f
  508772:	add    eax,0x6b895145
  508777:	gs inc esi
  508779:	pop    ds
  50877a:	ds into 
  50877c:	iret   
  50877d:	sub    eax,0x774c631e
  508782:	sahf   
  508783:	repnz adc edi,ebx
  508786:	add    DWORD PTR [edi],eax
  508788:	shr    ax,0xbc
  50878c:	scas   al,BYTE PTR es:[edi]
  50878d:	retf   0x3ef0
  508790:	jno    0x5087b6
  508792:	sub    bl,BYTE PTR [ebp-0x7f]
  508795:	push   eax
  508796:	and    ah,BYTE PTR [esi-0x45b7b86a]
  50879c:	jp     0x5087e5
  50879e:	push   ecx
  50879f:	sbb    DWORD PTR [eax-0x2ad43fcd],0x211fc2fc
  5087a9:	push   cs
  5087aa:	loope  0x5087c9
  5087ac:	test   BYTE PTR [edx+0x6],ch
  5087af:	xor    al,0x3b
  5087b1:	daa    
  5087b2:	push   ss
  5087b3:	sub    ah,BYTE PTR [ecx+0x749eb5f7]
  5087b9:	nop
  5087ba:	shl    dh,1
  5087bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5087bd:	gs lock sbb eax,0xc14341f1
  5087c4:	pusha  
  5087c5:	cmp    eax,DWORD PTR [esi]
  5087c7:	pop    es
  5087c8:	sub    eax,0xfc2ed702
  5087cd:	dec    esi
  5087ce:	int3   
  5087cf:	pop    edx
  5087d0:	std    
  5087d1:	(bad)  
  5087d2:	mov    al,ds:0x95545e99
  5087d7:	retf   
  5087d8:	and    eax,0x425fa2c1
  5087dd:	daa    
  5087de:	call   FWORD PTR [edi+ebx*2-0x70e6934f]
  5087e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5087e6:	lock jle 0x5087c8
  5087e9:	cmc    
  5087ea:	repz push ds
  5087ec:	jmp    0xc5120fc8
  5087f1:	iret   
  5087f2:	mov    bl,0x92
  5087f4:	or     eax,eax
  5087f6:	mov    dl,0x30
  5087f8:	jo     0x5087bf
  5087fa:	out    dx,eax
  5087fb:	ss push 0x71858032
  508801:	cs mov ecx,ds
  508804:	lods   al,BYTE PTR ds:[esi]
  508805:	(bad)  
  508806:	sti    
  508807:	bound  ecx,QWORD PTR [edi-0x2b]
  50880a:	in     eax,0xeb
  50880c:	outs   dx,DWORD PTR ds:[esi]
  50880d:	and    esi,ebp
  50880f:	dec    esp
  508810:	les    eax,FWORD PTR ds:0x97726905
  508816:	jne    0x508834
  508818:	iret   
  508819:	or     esp,edi
  50881b:	mov    DWORD PTR [edx],edi
  50881d:	cmp    dl,dh
  50881f:	or     edi,edx
  508821:	jb     0x508819
  508823:	and    al,0x8b
  508825:	push   cs
  508826:	lahf   
  508827:	fmul   QWORD PTR [esi-0x5a]
  50882a:	lea    esi,[edx]
  50882c:	mov    ds:0xedab37ee,eax
  508831:	xchg   BYTE PTR [edx+0x5f],bl
  508834:	call   0x746f:0xbee73d7b
  50883b:	add    BYTE PTR [esi+0x73],bh
  50883e:	cmp    ch,BYTE PTR [edx]
  508840:	lods   al,BYTE PTR ds:[esi]
  508841:	jnp    0x508816
  508843:	(bad)  
  508844:	pop    eax
  508845:	add    BYTE PTR [esi+0x6d],dl
  508848:	sub    BYTE PTR [edi],ch
  50884a:	push   ebx
  50884b:	push   ecx
  50884c:	fiadd  DWORD PTR [ebx+0x44]
  50884f:	into   
  508850:	scas   al,BYTE PTR es:[edi]
  508851:	jnp    0x5087fd
  508853:	les    ebp,FWORD PTR [eax+0x33fc9482]
  508859:	test   BYTE PTR [ecx-0x50],ch
  50885c:	xchg   ecx,eax
  50885d:	and    eax,0x15a6d540
  508862:	cmp    DWORD PTR [esi],0xdcdf87d4
  508868:	cmp    ah,BYTE PTR [eax+0x59]
  50886b:	test   esp,eax
  50886d:	in     eax,dx
  50886e:	dec    esp
  50886f:	xor    BYTE PTR ds:0xbcae8d0d,ah
  508875:	pop    esi
  508876:	cmc    
  508877:	dec    ecx
  508878:	scas   al,BYTE PTR es:[edi]
  508879:	arpl   WORD PTR [edx-0x4b],cx
  50887c:	xor    eax,DWORD PTR [edi-0x738e1cfe]
  508882:	xor    al,0x1d
  508884:	popf   
  508885:	das    
  508886:	call   0x1bb62982
  50888b:	push   edi
  50888c:	fiadd  DWORD PTR [ebx+0x73]
  50888f:	loopne 0x50887a
  508891:	int    0x97
  508893:	jg     0x508823
  508895:	arpl   WORD PTR [edi],bp
  508897:	sub    al,0xdc
  508899:	xchg   ebp,ebx
  50889b:	xchg   ebx,eax
  50889c:	(bad)  
  50889d:	pop    ebp
  50889e:	xchg   DWORD PTR cs:[edx+0x4b],esp
  5088a2:	and    BYTE PTR [edi-0x2b],dl
  5088a5:	out    dx,eax
  5088a6:	ins    DWORD PTR es:[edi],dx
  5088a7:	loopne 0x508897
  5088a9:	aad    0x3d
  5088ab:	call   DWORD PTR [ecx+0x3]
  5088ae:	addr16 pusha 
  5088b0:	or     DWORD PTR [ecx+eax*1],ecx
  5088b3:	call   0x70d2b5ba
  5088b8:	push   ebp
  5088b9:	aam    0xe9
  5088bb:	lahf   
  5088bc:	push   ebx
  5088bd:	enter  0xea96,0x45
  5088c1:	call   0xd3ccd2cd
  5088c6:	jo     0x5088cf
  5088c8:	hlt    
  5088c9:	push   eax
  5088ca:	loop   0x508874
  5088cc:	sbb    ebp,DWORD PTR [ecx-0x2ca03956]
  5088d2:	inc    esi
  5088d3:	adc    esp,esp
  5088d5:	push   ebx
  5088d6:	int    0x2d
  5088d8:	xor    BYTE PTR [ebx+0x6e],dl
  5088db:	into   
  5088dc:	mov    ah,0xa
  5088de:	inc    ecx
  5088df:	rol    ah,cl
  5088e1:	vandps xmm7,xmm0,XMMWORD PTR [edi+eiz*8-0x56]
  5088e7:	popf   
  5088e8:	and    DWORD PTR [esi],eax
  5088ea:	mov    ecx,0x3cecaf86
  5088ef:	pop    esp
  5088f0:	push   ecx
  5088f1:	mov    eax,0x78060b3a
  5088f6:	aas    
  5088f7:	mov    esp,0x4217c67d
  5088fc:	push   esp
  5088fd:	in     al,dx
  5088fe:	mov    edi,DWORD PTR [ebx]
  508900:	push   ebp
  508901:	pop    ebp
  508902:	sub    al,0xe8
  508904:	aad    0x9d
  508906:	xchg   esi,eax
  508907:	sub    dl,BYTE PTR [eax+0x216a7ff7]
  50890d:	or     DWORD PTR [edx+0x5f],ecx
  508910:	mov    esp,0x98849e19
  508915:	icebp  
  508916:	test   DWORD PTR [edx+0x31],eax
  508919:	jp     0x508972
  50891b:	shr    bl,cl
  50891d:	jmp    0x8e683e29
  508922:	xor    BYTE PTR [edi],bh
  508924:	jg     0x50890d
  508926:	jne    0x508990
  508928:	jle    0x508956
  50892a:	scas   al,BYTE PTR es:[edi]
  50892b:	inc    ebp
  50892c:	(bad)  
  50892e:	jno    0x508928
  508930:	jp     0x5088bd
  508932:	out    dx,al
  508933:	jecxz  0x50893e
  508935:	mov    bl,0x6c
  508937:	push   es
  508938:	and    BYTE PTR [eax-0x35],ch
  50893b:	cli    
  50893c:	sahf   
  50893d:	rcr    DWORD PTR [ebp+0x53178b37],cl
  508943:	repnz fld TBYTE PTR [edx-0x30]
  508947:	add    al,0xca
  508949:	arpl   WORD PTR [esi],ax
  50894b:	pop    es
  50894c:	arpl   cx,bp
  50894e:	pop    esp
  50894f:	jns    0x5088f3
  508951:	xchg   BYTE PTR [ecx],dl
  508953:	dec    esi
  508954:	sbb    bl,BYTE PTR ds:0xdebe646c
  50895a:	pop    ss
  50895b:	xchg   ebp,eax
  50895c:	rcl    DWORD PTR [edx],cl
  50895e:	es stos BYTE PTR es:[edi],al
  508960:	(bad)  
  508961:	and    BYTE PTR [esi+0x13],dl
  508964:	jae    0x5088e8
  508966:	arpl   dx,ax
  508968:	cli    
  508969:	pop    ss
  50896a:	sub    al,BYTE PTR [ebx+0x6b]
  50896d:	popa   
  50896e:	xor    eax,0x8f3e19a9
  508973:	js     0x508916
  508975:	sub    BYTE PTR [eax-0xd],ah
  508978:	(bad)  
  508979:	fild   WORD PTR [edi]
  50897b:	(bad)  
  50897c:	sbb    al,0x36
  50897e:	add    al,0xd
  508980:	jp     0x508965
  508982:	mov    ds:0xf3807fa8,eax
  508987:	inc    ebp
  508988:	add    eax,0xb4e2fb93
  50898d:	inc    edx
  50898e:	cs jo  0x508946
  508991:	jmp    FWORD PTR [eax+0x7c20a3e0]
  508997:	fcomp  DWORD PTR [edi]
  508999:	test   al,0xb9
  50899b:	test   DWORD PTR [ebp-0x13],eax
  50899e:	cmp    DWORD PTR ds:0xfecbe952,eax
  5089a4:	and    al,0x73
  5089a6:	loope  0x508980
  5089a8:	adc    DWORD PTR [ebp+eiz*2-0x47],edx
  5089ac:	sbb    al,BYTE PTR [ebx-0x663e4b70]
  5089b2:	shl    DWORD PTR [edx-0x24e846b3],0xdf
  5089b9:	or     eax,0x5ccd7c72
  5089be:	arpl   WORD PTR [eax+0x38],sp
  5089c1:	pop    ecx
  5089c2:	shl    BYTE PTR ds:0x87923eb2,0x5d
  5089c9:	xlat   BYTE PTR ds:[ebx]
  5089ca:	(bad)  
  5089cb:	xor    eax,0xebc5fea2
  5089d0:	jge    0x5089bc
  5089d2:	mov    ah,0x79
  5089d4:	jnp    0x508a41
  5089d6:	(bad)  [edi]
  5089d8:	outs   dx,BYTE PTR ds:[esi]
  5089d9:	push   0xffffffe0
  5089db:	sar    BYTE PTR [esi-0x60],1
  5089de:	dec    edx
  5089df:	dec    esp
  5089e0:	cmp    eax,0x1c28588b
  5089e5:	mov    dl,0x72
  5089e7:	in     al,dx
  5089e8:	xchg   esp,eax
  5089e9:	xchg   esi,eax
  5089ea:	jne    0x5089e3
  5089ec:	in     eax,0x7c
  5089ee:	pop    ebx
  5089ef:	lock sbb al,BYTE PTR [eax]
  5089f2:	jl     0x508a6f
  5089f4:	dec    edx
  5089f5:	repnz add eax,0x6c724475
  5089fb:	adc    ecx,esp
  5089fd:	frstor [edx]
  5089ff:	sahf   
  508a00:	xchg   edi,eax
  508a01:	add    BYTE PTR [ebx],bl
  508a03:	call   0x42728448
  508a08:	cmp    ebp,DWORD PTR [edi-0x7c8f3f63]
  508a0e:	pop    es
  508a0f:	ret    0xfbe0
  508a12:	sub    eax,0xad2e5319
  508a17:	fcomp  st(6)
  508a19:	cmp    eax,0x563bdeb5
  508a1e:	dec    ebp
  508a1f:	mov    cl,0x82
  508a21:	(bad)  
  508a22:	stos   BYTE PTR es:[edi],al
  508a23:	sub    eax,0x8f7392d3
  508a28:	pop    edx
  508a29:	dec    eax
  508a2a:	cmc    
  508a2b:	daa    
  508a2c:	mov    ds:0x43eb48e0,al
  508a31:	mov    es,WORD PTR [edi]
  508a33:	add    al,0x55
  508a35:	or     al,0x3a
  508a37:	mov    ebx,0x511f2ceb
  508a3c:	scas   al,BYTE PTR es:[edi]
  508a3d:	dec    edx
  508a3e:	cmp    BYTE PTR [eax],0x19
  508a41:	add    al,0x8c
  508a43:	rcr    ebx,cl
  508a45:	xor    eax,0x6caeb03b
  508a4a:	cmp    eax,DWORD PTR [edx]
  508a4c:	mov    al,ds:0xe64c06ba
  508a51:	arpl   WORD PTR [edi],bp
  508a53:	sub    eax,0xa0701df
  508a58:	pop    ss
  508a59:	mov    esp,0xd3d8ca5
  508a5e:	mov    WORD PTR [edi],?
  508a60:	scas   eax,DWORD PTR es:[edi]
  508a61:	inc    edx
  508a62:	xchg   edx,eax
  508a63:	mov    esp,0x28c23802
  508a68:	adc    eax,0x5b91d4d7
  508a6d:	dec    eax
  508a6e:	inc    ecx
  508a6f:	mov    esp,0x3458d9ed
  508a74:	arpl   WORD PTR [ebx],ax
  508a76:	dec    edx
  508a77:	mov    ebx,0x51ce5369
  508a7c:	inc    edx
  508a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508a7e:	pop    eax
  508a7f:	add    eax,ebx
  508a81:	aam    0x22
  508a83:	jne    0x508afe
  508a85:	mov    ebx,0xeb2983d6
  508a8a:	daa    
  508a8b:	sub    eax,0x8d232cbd
  508a90:	(bad)  
  508a91:	loope  0x508a6e
  508a93:	stos   BYTE PTR es:[edi],al
  508a94:	or     al,0x60
  508a96:	arpl   ax,cx
  508a98:	push   esp
  508a99:	jne    0x508a98
  508a9b:	fisub  DWORD PTR [edx+0xf]
  508a9e:	std    
  508a9f:	call   DWORD PTR [ebp+0x7d863738]
  508aa5:	jg     0x508a9f
  508aa7:	imul   ebp,DWORD PTR [esi+0x19c514e2],0xffffffbd
  508aae:	jmp    0x32e827e6
  508ab3:	retf   0x5b60
  508ab6:	sbb    DWORD PTR [ecx+0x65],0xffffff8d
  508aba:	cmp    esp,DWORD PTR [esp+edi*4]
  508abd:	sub    edi,DWORD PTR [ecx+eiz*2]
  508ac0:	(bad)  
  508ac1:	les    esi,FWORD PTR [esi]
  508ac3:	clc    
  508ac4:	je     0x508a6e
  508ac6:	mov    ebx,DWORD PTR [edx]
  508ac8:	push   edx
  508ac9:	push   esi
  508aca:	mov    dh,0xa0
  508acc:	je     0x508b27
  508ace:	shl    bl,cl
  508ad0:	xchg   ebx,eax
  508ad1:	mov    BYTE PTR [edi],dh
  508ad3:	and    eax,0x71701e9c
  508ad8:	sbb    BYTE PTR [edi+0x5b],0xf4
  508adc:	out    0xa1,al
  508ade:	jae    0x508a76
  508ae0:	push   esi
  508ae1:	(bad)  
  508ae3:	bound  ebx,QWORD PTR [ebp*1-0x22399478]
  508aea:	fldcw  WORD PTR [ebp-0x158caedc]
  508af0:	adc    al,0x14
  508af2:	arpl   WORD PTR [ecx],di
  508af4:	mov    eax,0x338707df
  508af9:	test   al,0x6f
  508afb:	ins    BYTE PTR es:[edi],dx
  508afc:	pop    edi
  508afd:	jo     0x508a9d
  508aff:	add    al,0x6c
  508b01:	dec    edx
  508b02:	inc    ebp
  508b03:	mov    ebp,0x34c2aebd
  508b08:	xchg   edi,eax
  508b09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  508b0a:	mov    eax,0xf62268d6
  508b0f:	in     al,dx
  508b10:	cmp    eax,0x3048ffaf
  508b15:	inc    eax
  508b16:	inc    edi
  508b17:	mov    al,ds:0x3b445018
  508b1c:	retf   0xb3fa
  508b1f:	rcl    bl,0x6c
  508b22:	bound  ebx,QWORD PTR ds:0x400438b8
  508b28:	cmp    DWORD PTR [eax+0x1338e69f],ebx
  508b2e:	fwait
  508b2f:	pop    ebx
  508b30:	push   ecx
  508b31:	pop    ss
  508b32:	cmp    bl,BYTE PTR [eax-0x66]
  508b35:	in     al,dx
  508b36:	xor    dh,BYTE PTR [edi-0x45]
  508b39:	xor    al,0xf4
  508b3b:	mov    ebp,0x6e4fa3be
  508b40:	and    edx,DWORD PTR [esi+edi*1+0x1f134ade]
  508b47:	ret    
  508b48:	leave  
  508b49:	jge    0x508ba3
  508b4b:	retf   0xb6c2
  508b4e:	lahf   
  508b4f:	and    cl,ch
  508b51:	aam    0x60
  508b53:	inc    ebx
  508b54:	iret   
  508b55:	jge    0x508b8b
  508b57:	cwde   
  508b58:	aam    0x87
  508b5a:	idiv   DWORD PTR [edx+0x32]
  508b5d:	sbb    ah,BYTE PTR [eax-0x1d]
  508b60:	xor    DWORD PTR [ebx+eax*2+0x52],0xe6ce4868
  508b68:	mov    ah,0xda
  508b6a:	neg    ah
  508b6c:	jmp    0x508bc7
  508b6e:	sub    al,BYTE PTR [ebx+eiz*8-0x697c5ba7]
  508b75:	cmp    BYTE PTR [ebx+0x4b699e95],cl
  508b7b:	fwait
  508b7c:	sti    
  508b7d:	aas    
  508b7e:	inc    edx
  508b7f:	repnz add ebp,DWORD PTR [ebp-0x1a0ba365]
  508b86:	pop    edi
  508b87:	or     BYTE PTR [edx],0x48
  508b8a:	not    BYTE PTR [edi+eiz*4]
  508b8d:	jae    0x508bfe
  508b8f:	inc    ebx
  508b90:	xor    DWORD PTR [edx-0x41fe69a1],0x39104411
  508b9a:	lods   al,BYTE PTR ds:[esi]
  508b9b:	xchg   edi,eax
  508b9c:	cmp    BYTE PTR [edi],ah
  508b9e:	mov    ah,ch
  508ba0:	hlt    
  508ba1:	mov    esp,es
  508ba3:	add    DWORD PTR [ecx-0x3236ce78],edx
  508ba9:	push   eax
  508baa:	sbb    bl,BYTE PTR [ebp-0x424b3721]
  508bb0:	mov    WORD PTR [edx+0x43741406],?
  508bb6:	inc    ebx
  508bb7:	cmp    al,0xec
  508bb9:	(bad)  
  508bba:	mov    dl,0xf
  508bbc:	cmp    eax,0x7c294909
  508bc1:	fsubp  st(2),st
  508bc3:	cmp    ah,BYTE PTR [esi]
  508bc5:	push   ebp
  508bc6:	mov    DWORD PTR [ebx-0x6789475d],ebx
  508bcc:	fist   WORD PTR [ebp+0x4a37ed25]
  508bd2:	out    dx,eax
  508bd3:	clc    
  508bd4:	mov    al,ds:0x6e6ed6cd
  508bd9:	popf   
  508bda:	dec    ebp
  508bdb:	cmp    eax,0x99d24067
  508be0:	mov    ds:0x29bb0c29,al
  508be5:	jl     0x508bb9
  508be7:	pop    eax
  508be8:	sahf   
  508be9:	push   0xffffffc1
  508beb:	stos   DWORD PTR es:[edi],eax
  508bec:	(bad)  [ecx-0x7a66f1e8]
  508bf2:	(bad)  
  508bf3:	lods   eax,DWORD PTR ds:[esi]
  508bf4:	push   cs
  508bf5:	sahf   
  508bf6:	shl    DWORD PTR [esi+0x5b],cl
  508bf9:	in     al,dx
  508bfa:	dec    edx
  508bfb:	out    0x57,eax
  508bfd:	sbb    BYTE PTR [ecx-0x60],dh
  508c00:	out    0x77,al
  508c02:	xchg   edx,eax
  508c03:	or     al,0xd6
  508c05:	pop    edi
  508c06:	or     al,0xa9
  508c08:	add    bh,BYTE PTR [ecx+0x19]
  508c0b:	imul   esp,DWORD PTR [esi-0x604ba6a4],0x75fffbbd
  508c15:	shr    DWORD PTR [esi],0x57
  508c18:	xchg   ebp,eax
  508c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508c1a:	aas    
  508c1b:	in     eax,dx
  508c1c:	and    al,0x87
  508c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508c1f:	sbb    DWORD PTR [edx+0x1c],0xdf7793ac
  508c26:	jb     0x508bff
  508c28:	fnstsw WORD PTR [eax]
  508c2a:	lea    esi,[edi-0x21]
  508c2d:	loop   0x508bee
  508c2f:	fild   WORD PTR [edx]
  508c31:	adc    ch,BYTE PTR [ebp-0x2b]
  508c34:	or     dl,cl
  508c36:	sub    eax,0x42186b6c
  508c3b:	jo     0x508bd7
  508c3d:	sub    ch,BYTE PTR [ecx-0x3b]
  508c40:	mov    esi,ebx
  508c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  508c43:	in     al,dx
  508c44:	retf   
  508c45:	push   ds
  508c46:	adc    bh,BYTE PTR [ebp-0x78192da4]
  508c4c:	inc    ebp
  508c4d:	xor    bl,BYTE PTR [eax]
  508c4f:	mov    ebx,esi
  508c51:	add    edx,DWORD PTR [esi+ecx*1-0x6a]
  508c55:	or     BYTE PTR [ecx+0x59],0x67
  508c59:	hlt    
  508c5a:	sbb    eax,0xf8a1a8a3
  508c5f:	shl    BYTE PTR [edi+edx*2-0x34],cl
  508c63:	pop    ss
  508c64:	push   esi
  508c65:	(bad)  
  508c66:	mov    al,ds:0x4d1f03e4
  508c6b:	xchg   ebp,eax
  508c6c:	push   ecx
  508c6d:	je     0x508bf1
  508c6f:	pop    ebp
  508c71:	gs jmp 0x508ca3
  508c74:	sbb    DWORD PTR [eax+0x43cd643e],esp
  508c7a:	fcmovnu st,st(2)
  508c7c:	lods   al,BYTE PTR ds:[esi]
  508c7d:	xor    bh,ch
  508c7f:	mov    ?,WORD PTR [ecx-0xd4ef492]
  508c85:	lock or ecx,DWORD PTR [eax-0x333a2f1]
  508c8c:	loop   0x508cfa
  508c8e:	jl     0x508c1a
  508c90:	xchg   ebp,eax
  508c91:	jno    0x508cc4
  508c93:	retf   0xa1e0
  508c96:	xchg   ecx,eax
  508c97:	inc    edi
  508c98:	fisttp WORD PTR [ebp-0x35a4a913]
  508c9e:	cwde   
  508c9f:	dec    esi
  508ca0:	cmp    BYTE PTR [esi-0x5e8fbe70],dl
  508ca6:	cmp    edx,DWORD PTR [ebx]
  508ca8:	scas   al,BYTE PTR es:[edi]
  508ca9:	push   esp
  508caa:	pusha  
  508cab:	lods   eax,DWORD PTR ds:[esi]
  508cac:	pop    esp
  508cad:	sub    DWORD PTR [edi-0x3be04c74],ebx
  508cb3:	lods   al,BYTE PTR ds:[esi]
  508cb4:	mov    eax,0xce0e6344
  508cb9:	sub    bl,BYTE PTR [ebx+0x64]
  508cbc:	push   ss
  508cbd:	ins    BYTE PTR es:[edi],dx
  508cbe:	ffree  st(2)
  508cc0:	scas   al,BYTE PTR es:[di]
  508cc2:	pop    esi
  508cc3:	in     al,dx
  508cc4:	dec    edi
  508cc5:	xchg   ecx,eax
  508cc6:	mov    bh,0xa3
  508cc8:	mov    al,ds:0x910c7492
  508ccd:	and    ah,cl
  508ccf:	call   0x95d8ad4e
  508cd4:	ret    
  508cd5:	popa   
  508cd6:	cmp    ah,BYTE PTR [eax+eax*4-0x76]
  508cda:	xor    DWORD PTR [edx+0x42704589],esp
  508ce0:	jmp    0x2c84:0xfafe222f
  508ce7:	shl    BYTE PTR [esp+edx*8+0x63a856b1],0x96
  508cef:	fimul  WORD PTR [edi+0x69d3970f]
  508cf5:	pop    ebp
  508cf6:	(bad)  
  508cf7:	push   cs
  508cf8:	cmp    al,0x5a
  508cfa:	fadd   QWORD PTR [eax-0x1c]
  508cfd:	jmp    FWORD PTR [ebx]
  508cff:	sti    
  508d00:	adc    al,0x30
  508d02:	js     0x508cb8
  508d04:	sbb    BYTE PTR [edi+0x21415b01],dl
  508d0a:	out    0xeb,eax
  508d0c:	push   es
  508d0d:	cwde   
  508d0e:	mov    WORD PTR [ebp+0x1],?
  508d11:	mov    dh,BYTE PTR [ecx]
  508d13:	inc    esi
  508d14:	mov    dh,0xe8
  508d16:	dec    eax
  508d17:	mov    cl,0xff
  508d19:	into   
  508d1a:	jle    0x508cc4
  508d1c:	jns    0x508d20
  508d1e:	pop    ebp
  508d1f:	jnp    0x508ce5
  508d21:	addr16 sahf 
  508d23:	xchg   edx,eax
  508d24:	sub    edx,esi
  508d26:	jne    0x508cfd
  508d28:	stc    
  508d29:	push   ds
  508d2a:	xchg   edx,eax
  508d2b:	sbb    eax,0x564c7c97
  508d30:	icebp  
  508d31:	push   ebx
  508d32:	and    eax,0x53da4c51
  508d37:	pop    esi
  508d38:	jecxz  0x508d85
  508d3a:	retf   
  508d3b:	mov    esp,0xcd404184
  508d40:	mov    ds:0x1901d948,al
  508d45:	int    0xff
  508d47:	push   esp
  508d48:	int    0xba
  508d4a:	jge    0x508d49
  508d4c:	stos   DWORD PTR es:[di],eax
  508d4e:	jmp    0x6eeb:0x7039ab2b
  508d55:	inc    edi
  508d56:	test   eax,0x6af78c36
  508d5b:	fmul   QWORD PTR [ebx]
  508d5d:	sbb    al,0xb8
  508d5f:	(bad)  
  508d60:	js     0x508d80
  508d62:	(bad)  ds:0xb5f19f5d
  508d68:	in     al,0x56
  508d6a:	rol    DWORD PTR [esi+0x6f],1
  508d6d:	pop    es
  508d6e:	push   esp
  508d6f:	loop   0x508d5d
  508d71:	mov    esp,0x7a534794
  508d76:	sub    bl,BYTE PTR [ebp+0x12ef068b]
  508d7c:	mov    cl,0x16
  508d7e:	in     eax,dx
  508d7f:	adc    cl,BYTE PTR [ecx+0x1f]
  508d82:	jp     0x508e03
  508d84:	(bad)  
  508d85:	call   0xf6386f8b
  508d8a:	add    DWORD PTR [edx+0x7ddb3d17],ebx
  508d90:	mov    ds:0x53f827b0,al
  508d95:	daa    
  508d96:	xor    DWORD PTR [ebx-0x4f2ad427],ebp
  508d9c:	dec    ebp
  508d9d:	jbe    0x508dd0
  508d9f:	js     0x508df2
  508da1:	push   ss
  508da2:	in     eax,dx
  508da3:	mov    ah,0x29
  508da5:	add    esp,DWORD PTR [edi-0x3b]
  508da8:	and    al,0xd8
  508daa:	dec    eax
  508dab:	jbe    0x508d93
  508dad:	mov    ebp,ebx
  508daf:	push   esi
  508db0:	in     eax,dx
  508db1:	adc    eax,0x624b4885
  508db6:	xor    DWORD PTR [ebx],0x5b
  508db9:	mov    ebx,0x2ad205c7
  508dbe:	loopne 0x508e02
  508dc0:	xor    BYTE PTR [ebx-0x72],bl
  508dc3:	lahf   
  508dc4:	and    eax,0x9abfb91e
  508dc9:	mov    eax,ds:0x33f0ff1
  508dce:	outs   dx,BYTE PTR ds:[esi]
  508dcf:	sbb    eax,0xb53521d2
  508dd4:	mov    dl,0xdf
  508dd6:	icebp  
  508dd7:	clc    
  508dd8:	mov    eax,ds:0x759d6a1d
  508ddd:	int    0xe1
  508ddf:	add    al,0x4b
  508de1:	js     0x508e3b
  508de3:	push   esp
  508de4:	mov    ebp,0x3f4d4d28
  508de9:	in     al,0x9f
  508deb:	sbb    ebp,edi
  508ded:	cwde   
  508dee:	out    dx,eax
  508def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508df0:	sbb    ch,dh
  508df2:	xor    al,0x9c
  508df4:	and    BYTE PTR [ebx+eax*2+0xd8a6599],bh
  508dfb:	xchg   edx,eax
  508dfc:	int3   
  508dfd:	rcr    BYTE PTR [ecx+0x2a],1
  508e00:	xchg   ecx,eax
  508e01:	lea    ebp,[edi+eiz*4+0x6c]
  508e05:	cmc    
  508e06:	push   0x13
  508e08:	(bad)  
  508e09:	jb     0x508e19
  508e0b:	dec    edi
  508e0c:	sub    eax,0x20f4289d
  508e11:	xchg   edx,eax
  508e12:	hlt    
  508e13:	jmp    DWORD PTR [ebp+ecx*8-0x42c07d9c]
  508e1a:	xor    DWORD PTR [edx],esi
  508e1c:	pusha  
  508e1d:	jl     0x508da7
  508e1f:	xchg   BYTE PTR [edx],cl
  508e21:	and    ah,ah
  508e23:	outs   dx,DWORD PTR ds:[esi]
  508e24:	scas   al,BYTE PTR es:[edi]
  508e25:	push   esp
  508e26:	adc    al,BYTE PTR [eax-0x6f5af4ac]
  508e2c:	ds loope 0x508e9e
  508e2f:	(bad)  
  508e30:	and    ecx,ecx
  508e32:	xor    eax,0x8e82ebe1
  508e37:	sub    al,0x77
  508e39:	clc    
  508e3a:	cwde   
  508e3b:	adc    edi,DWORD PTR [esi+ecx*2]
  508e3e:	push   cs
  508e3f:	icebp  
  508e40:	int3   
  508e41:	out    0x70,eax
  508e43:	and    eax,0x9bf0691
  508e48:	sub    DWORD PTR [edx],esp
  508e4a:	rol    BYTE PTR [ebx+esi*4+0x71cf4092],1
  508e51:	dec    eax
  508e52:	bound  ebp,QWORD PTR [edx-0x4b]
  508e55:	arpl   WORD PTR [edi-0x1e],ax
  508e58:	ins    BYTE PTR es:[edi],dx
  508e59:	pop    ebp
  508e5a:	sbb    dh,BYTE PTR [esi]
  508e5c:	xor    edx,ebp
  508e5e:	loop   0x508ecf
  508e60:	test   BYTE PTR [esi+0x4978a55b],dl
  508e66:	jl     0x508e27
  508e68:	and    ecx,DWORD PTR [edx]
  508e6a:	push   ss
  508e6b:	or     DWORD PTR [edi+0x6],edi
  508e6e:	pop    ss
  508e6f:	xor    eax,0xf9ada657
  508e74:	jnp    0x508eb9
  508e76:	pop    ebp
  508e77:	hlt    
  508e78:	xchg   esp,eax
  508e79:	enter  0x2635,0xdf
  508e7d:	jp     0x508edb
  508e7f:	cmp    ebx,edi
  508e81:	retf   0x904f
  508e84:	cmp    eax,0xb31a1572
  508e89:	fdivr  DWORD PTR [esi-0x4b5dfc92]
  508e8f:	push   ds
  508e90:	cmp    ebp,DWORD PTR ds:0x4022e00f
  508e96:	dec    esp
  508e97:	push   eax
  508e98:	into   
  508e99:	cmc    
  508e9a:	mov    DWORD PTR [eax-0xc],edx
  508e9d:	aam    0x35
  508e9f:	clc    
  508ea0:	in     eax,0x1c
  508ea2:	(bad)  [edx+ebx*1]
  508ea5:	sbb    eax,0xd854e988
  508eaa:	adc    eax,0x99cbdb03
  508eaf:	stos   BYTE PTR es:[edi],al
  508eb0:	sahf   
  508eb1:	cmp    DWORD PTR [edx+esi*1-0x8],ebx
  508eb5:	test   eax,0x37c4b0b6
  508eba:	mov    bh,0x7
  508ebc:	sub    DWORD PTR [edx+edx*4-0x78],esp
  508ec0:	pop    ss
  508ec1:	arpl   WORD PTR [eax],di
  508ec3:	mov    WORD PTR [edi-0x50fb0fa1],fs
  508ec9:	scas   eax,DWORD PTR es:[edi]
  508eca:	enter  0x3a5e,0x9
  508ece:	out    0xb4,eax
  508ed0:	mov    eax,ds:0xa74cb1c
  508ed5:	mov    ecx,0xbc6210ab
  508eda:	rol    BYTE PTR [edx-0x3d],1
  508edd:	in     al,dx
  508ede:	jnp    0x508f57
  508ee0:	loopne 0x508eb2
  508ee2:	(bad)  
  508ee3:	mov    ebp,0x17d0c5ee
  508ee8:	sub    al,bh
  508eea:	int    0xb0
  508eec:	jae    0x508e76
  508eee:	dec    ecx
  508eef:	arpl   cx,di
  508ef1:	cmp    eax,0x77bfb3b8
  508ef6:	fsubr  st(2),st
  508ef8:	jp     0x508f34
  508efa:	ins    DWORD PTR es:[edi],dx
  508efb:	adc    BYTE PTR [esi],cl
  508efd:	or     DWORD PTR [ecx],eax
  508eff:	in     eax,dx
  508f00:	xchg   esp,eax
  508f01:	jmp    0x703c:0xdbabcd8b
  508f08:	ret    0x958
  508f0b:	data16 xor BYTE PTR [eax-0x6833d4ba],bh
  508f12:	int    0xc9
  508f14:	addr16 hlt 
  508f16:	into   
  508f17:	and    ecx,DWORD PTR [esi]
  508f19:	and    DWORD PTR [edi],ebp
  508f1b:	jp     0x508ed6
  508f1d:	push   0xffffffb5
  508f1f:	pop    ebp
  508f20:	mov    ebp,DWORD PTR ds:0xafc9c51c
  508f26:	lea    edi,[ebx-0x48]
  508f29:	add    eax,0xdd9e50d
  508f2e:	add    al,0xc2
  508f30:	push   ecx
  508f31:	mov    dh,0xa4
  508f33:	or     edx,0x227f8cf4
  508f39:	pop    ecx
  508f3a:	push   edx
  508f3b:	lahf   
  508f3c:	xchg   esi,eax
  508f3d:	bound  esp,QWORD PTR fs:[ebp+ebp*1+0x751cb350]
  508f45:	jle    0x508f63
  508f47:	mov    esi,0x640a1f4b
  508f4c:	stos   BYTE PTR es:[edi],al
  508f4d:	sbb    eax,0x32f9fb5e
  508f52:	add    al,0xc6
  508f54:	mov    dl,0xc4
  508f56:	mov    dh,0x33
  508f58:	adc    ecx,DWORD PTR ds:0x66fbb80
  508f5e:	pop    esp
  508f5f:	fst    QWORD PTR [ecx+ebx*4+0x48f52ee1]
  508f66:	(bad)  
  508f67:	out    dx,eax
  508f68:	sbb    edi,DWORD PTR [ebx]
  508f6a:	xor    BYTE PTR [edx+0x495f96ae],0x31
  508f71:	and    ebp,eax
  508f73:	push   ecx
  508f74:	nop
  508f75:	loopne 0x508fd1
  508f77:	stos   BYTE PTR es:[edi],al
  508f78:	cli    
  508f79:	lds    di,DWORD PTR [ebp-0x573d04d7]
  508f80:	sub    bl,al
  508f82:	mov    ah,0x3d
  508f84:	mov    ebx,ebx
  508f86:	pop    edi
  508f87:	push   edi
  508f88:	sbb    ebp,DWORD PTR ds:0x511dc5ca
  508f8e:	pop    edx
  508f8f:	scas   eax,DWORD PTR es:[edi]
  508f90:	mov    ebx,0x1f266c22
  508f95:	hlt    
  508f96:	ror    BYTE PTR [esi+edx*4-0x4d],1
  508f9a:	icebp  
  508f9b:	retf   0xb9d2
  508f9e:	iret   
  508f9f:	sbb    DWORD PTR [ebp+0x43],0x2c471d3b
  508fa6:	jo     0x508f61
  508fa8:	mov    ch,0x5b
  508faa:	or     bh,al
  508fac:	pop    edx
  508fad:	mov    DWORD PTR [edi+0x6a85ac52],0x47b510cb
  508fb7:	out    dx,al
  508fb8:	inc    esi
  508fb9:	add    al,0xe0
  508fbb:	sub    DWORD PTR [esi],esi
  508fbd:	ss mov bl,dl
  508fc0:	push   esi
  508fc1:	stos   BYTE PTR es:[edi],al
  508fc2:	jb     0x508f9a
  508fc4:	inc    ebp
  508fc5:	ins    DWORD PTR es:[edi],dx
  508fc6:	cmp    ecx,edx
  508fc8:	cmp    eax,0x532ff0cc
  508fcd:	nop    DWORD PTR [edx+eiz*1-0x43]
  508fd2:	loope  0x508fba
  508fd4:	test   DWORD PTR [ebx-0x742d9cfd],ebx
  508fda:	and    DWORD PTR [edx],edi
  508fdc:	les    esi,FWORD PTR [eax+ecx*2-0x1d]
  508fe0:	mov    ds:0xd60b4e3b,eax
  508fe5:	daa    
  508fe6:	xchg   ecx,eax
  508fe7:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  508fe9:	pop    ecx
  508fea:	push   ecx
  508feb:	jmp    0x98130734
  508ff0:	aad    0x7c
  508ff2:	and    BYTE PTR [ecx-0x36e4d46d],cl
  508ff8:	jo     0x508ff9
  508ffa:	arpl   cx,ax
  508ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  508ffd:	jg     0x508fa5
  508fff:	sbb    al,0x13
  509001:	xchg   ecx,eax
  509002:	outs   dx,BYTE PTR ds:[esi]
  509003:	xor    eax,0x9c2d2ad7
  509008:	lahf   
  509009:	imul   edx,DWORD PTR [esp+ebp*2],0x9b54d88b
  509010:	jp     0x508fe9
  509012:	jbe    0x509064
  509014:	imul   edi,DWORD PTR [edx+0x35bcbb68],0xffffffca
  50901b:	pop    eax
  50901c:	mov    dl,0x7f
  50901e:	dec    esi
  50901f:	(bad)  
  509020:	mov    dh,al
  509022:	jnp    0x509073
  509024:	daa    
  509025:	inc    ecx
  509026:	clc    
  509027:	outs   dx,BYTE PTR ds:[esi]
  509028:	cmp    DWORD PTR [esi+0x64f36f85],0xdefd0e94
  509032:	dec    ebp
  509033:	es data16 sti 
  509036:	retf   
  509037:	push   eax
  509038:	jno    0x509078
  50903a:	ret    0xb747
  50903d:	xor    dl,dh
  50903f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  509040:	ds mov dl,0x65
  509043:	scas   al,BYTE PTR es:[edi]
  509044:	leave  
  509045:	and    ebx,DWORD PTR [eax]
  509047:	push   0xb8ebb348
  50904c:	stos   BYTE PTR es:[edi],al
  50904d:	mov    eax,ds:0xbaba8760
  509052:	gs mov ch,0xca
  509055:	pop    edx
  509056:	into   
  509057:	test   DWORD PTR [edx-0x36c8d432],0x60178624
  509061:	xchg   ecx,eax
  509062:	sbb    esi,eax
  509064:	mov    ds:0x705d4871,al
  509069:	pop    esi
  50906a:	les    esp,FWORD PTR [ebp-0x20b47784]
  509070:	mov    dh,0x35
  509072:	jl     0x50900e
  509074:	popa   
  509075:	nop
  509076:	mov    ecx,0x8badd081
  50907b:	mov    ecx,0x38854d70
  509080:	push   edi
  509081:	pop    esi
  509082:	push   cs
  509083:	cdq    
  509084:	inc    edi
  509085:	push   ebp
  509086:	sbb    BYTE PTR [eax],ch
  509088:	mov    dl,BYTE PTR [edx]
  50908a:	ja     0x5090e9
  50908c:	outs   dx,BYTE PTR ds:[esi]
  50908d:	mov    al,0x17
  50908f:	pop    esp
  509090:	sbb    ebx,DWORD PTR ds:0xda285636
  509096:	push   ds
  509097:	cmp    esp,DWORD PTR [ebx-0x4c]
  50909a:	popa   
  50909b:	test   al,dl
  50909d:	stos   DWORD PTR es:[edi],eax
  50909e:	shl    BYTE PTR [edx+0xe],0x96
  5090a2:	xchg   ebp,eax
  5090a3:	mov    ds:0x6bcbdf3e,al
  5090a8:	pop    esp
  5090a9:	shl    BYTE PTR [ebp+0x68],cl
  5090ac:	and    BYTE PTR [ebp+ecx*8-0x2947c58b],bl
  5090b3:	icebp  
  5090b4:	arpl   WORD PTR [ebp+0x13efb727],cx
  5090ba:	rcl    DWORD PTR [edi+0x1a],0x81
  5090be:	jle    0x50913c
  5090c0:	mov    cl,0x8a
  5090c2:	rcl    DWORD PTR [edx+0x5a850c77],cl
  5090c8:	jl     0x50904a
  5090ca:	scas   al,BYTE PTR es:[edi]
  5090cb:	mov    eax,ds:0x712a7229
  5090d0:	and    bl,BYTE PTR [ebp+0x5c77d965]
  5090d6:	(bad)  
  5090d7:	fimul  DWORD PTR [edx+0x1c]
  5090da:	fisub  WORD PTR [edx-0x4f]
  5090dd:	cmp    BYTE PTR [edx-0x49],0x37
  5090e1:	out    0xd4,eax
  5090e3:	and    ebx,edx
  5090e5:	and    ecx,edx
  5090e7:	fldenv [eax]
  5090e9:	mov    bl,0xa2
  5090eb:	(bad)  
  5090ed:	pop    esp
  5090ee:	xor    DWORD PTR [esi+0x5],ebx
  5090f1:	loop   0x509074
  5090f3:	jo     0x509152
  5090f5:	cld    
  5090f6:	push   edi
  5090f7:	sti    
  5090f8:	pushf  
  5090f9:	mov    edi,0x1ddf815d
  5090fe:	sbb    eax,0x856d90e1
  509103:	and    DWORD PTR [ecx+0x2afa6f51],ebp
  509109:	iret   
  50910a:	int3   
  50910b:	mov    cl,0x0
  50910d:	loope  0x5090fe
  50910f:	lahf   
  509110:	enter  0x8dda,0xb8
  509114:	nop
  509115:	out    0xf,al
  509117:	repz in al,0x87
  50911a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50911b:	cld    
  50911c:	rcl    edi,1
  50911e:	xchg   esi,eax
  50911f:	pop    edi
  509120:	jmp    0xb703f50d
  509125:	jmp    0x8c3d:0xa357de3b
  50912c:	inc    ecx
  50912d:	inc    edi
  50912e:	sub    edx,ecx
  509130:	cld    
  509131:	outs   dx,DWORD PTR ds:[esi]
  509132:	cmp    eax,0x22a6d9ab
  509137:	icebp  
  509138:	add    BYTE PTR [esi+0x2e],bl
  50913b:	xor    ecx,DWORD PTR [edx-0x78ff1df2]
  509141:	popa   
  509142:	jno    0x5090dd
  509144:	lds    esi,FWORD PTR [eax]
  509146:	cmp    al,0xfa
  509148:	mov    ebp,0xaf1ea380
  50914d:	rcr    BYTE PTR [eax],0x17
  509150:	(bad)
  509154:	lahf   
  509155:	pushf  
  509156:	adc    eax,0xef5d3cd7
  50915b:	mov    ebx,0xf37962b3
  509160:	pop    ebx
  509161:	sbb    BYTE PTR [eax+esi*4-0x30],al
  509165:	std    
  509166:	icebp  
  509167:	push   ebp
  509168:	loop   0x509179
  50916a:	cmc    
  50916b:	sub    DWORD PTR [edi-0x11a2ac93],0x47fd7af2
  509175:	rcr    DWORD PTR ds:[edi],0xc9
  509179:	mov    ch,0xd4
  50917b:	jmp    0x50913d
  50917d:	outs   dx,BYTE PTR ds:[esi]
  50917e:	dec    edi
  50917f:	dec    eax
  509180:	inc    esp
  509181:	fwait
  509182:	cld    
  509183:	rcr    DWORD PTR [edx+edx*1-0x384a9f8a],cl
  50918a:	pop    esi
  50918b:	jb     0x50920a
  50918d:	lahf   
  50918e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50918f:	push   es
  509190:	je     0x509184
  509192:	scas   eax,DWORD PTR es:[edi]
  509193:	xchg   esi,eax
  509194:	aaa    
  509195:	in     eax,dx
  509196:	mov    cl,0xa8
  509198:	sbb    DWORD PTR [ebp+0x2a],0xffffffbd
  50919c:	lock push ss
  50919e:	(bad)  
  50919f:	xor    eax,0x9ddbe3b
  5091a4:	mov    edi,0xa702a3bd
  5091a9:	neg    edi
  5091ab:	or     eax,0x53947865
  5091b0:	(bad)  
  5091b1:	outs   dx,BYTE PTR ds:[esi]
  5091b2:	gs sub edi,ebp
  5091b5:	clc    
  5091b6:	add    bh,ah
  5091b8:	pop    edi
  5091b9:	push   0x5d
  5091bb:	mov    edx,0x55f463e9
  5091c0:	in     al,dx
  5091c1:	adc    eax,0x69ede740
  5091c6:	(bad)  
  5091c7:	xor    esi,esp
  5091c9:	pop    es
  5091ca:	jmp    0xc849ad89
  5091cf:	dec    esp
  5091d0:	loop   0x50920a
  5091d2:	jne    0x5091aa
  5091d4:	frstor [ebp-0x2d]
  5091d7:	cwde   
  5091d8:	sbb    eax,0x1f54231
  5091dd:	add    BYTE PTR [edi+esi*4+0x41eb33f6],cl
  5091e4:	mov    WORD PTR [edx+0x75a5ba40],ds
  5091ea:	push   ecx
  5091eb:	add    esi,DWORD PTR [eax]
  5091ed:	inc    ebx
  5091ee:	or     bh,bh
  5091f0:	add    dh,BYTE PTR [esi]
  5091f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5091f3:	cmp    BYTE PTR ds:0xe79a6282,0x90
  5091fa:	xchg   DWORD PTR [ecx+0x4c40685f],eax
  509200:	mov    eax,ds:0xc59171c7
  509205:	sub    DWORD PTR [edi],ebp
  509207:	outs   dx,BYTE PTR ds:[esi]
  509208:	push   ecx
  509209:	ret    
  50920a:	fcomip st,st(0)
  50920c:	ins    DWORD PTR es:[edi],dx
  50920d:	xor    eax,0xed2be8ca
  509212:	test   eax,0x572a4a7c
  509217:	rcl    BYTE PTR ds:0x5913f3b7,0x45
  50921e:	push   es
  50921f:	lods   al,BYTE PTR ds:[esi]
  509220:	cmp    al,BYTE PTR [esi]
  509222:	cmp    eax,0x3848aa6
  509227:	test   al,0x7b
  509229:	mov    ds:0x9d788b54,eax
  50922e:	jmp    0xa131:0x9e6900a3
  509235:	adc    edx,esi
  509237:	int3   
  509238:	xor    eax,DWORD PTR [esi-0x6b73240]
  50923e:	adc    al,0xec
  509240:	or     eax,0x9ed8f859
  509245:	jo     0x5091f2
  509247:	sbb    al,0x4
  509249:	ins    BYTE PTR es:[edi],dx
  50924a:	add    eax,0x14fa84f9
  50924f:	add    DWORD PTR [edi-0x441f5896],esp
  509255:	mov    ds:0x68107e90,eax
  50925a:	mov    ebx,0xfec3fc5
  509260:	mov    bl,0x8
  509262:	add    eax,0xedb1c11b
  509267:	lahf   
  509268:	pop    edi
  509269:	xchg   ecx,eax
  50926a:	sti    
  50926b:	mov    ds:0x6dccd36e,al
  509270:	add    BYTE PTR [esi],bl
  509272:	pushf  
  509273:	ret    
  509274:	fwait
  509275:	test   DWORD PTR [ecx-0x24],ecx
  509278:	dec    edi
  509279:	loop   0x50926b
  50927b:	xor    al,0xef
  50927d:	dec    ebp
  50927e:	push   eax
  50927f:	mov    ebx,0x60bbff97
  509284:	add    al,BYTE PTR [edi-0x32e782b3]
  50928a:	int3   
  50928b:	test   eax,0xc5f7d1ec
  509290:	adc    dl,ch
  509292:	or     BYTE PTR [edx+edx*1],ah
  509295:	adc    al,BYTE PTR [esi]
  509297:	adc    al,BYTE PTR [ebx-0x6b]
  50929a:	inc    esp
  50929b:	lea    eax,[edx]
  50929d:	stc    
  50929e:	int    0xf8
  5092a0:	inc    ecx
  5092a1:	and    eax,0x73d46a88
  5092a6:	and    eax,0x586f70ce
  5092ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5092ac:	lds    ebp,FWORD PTR [edi]
  5092ae:	adc    cl,BYTE PTR [esi]
  5092b0:	iret   
  5092b1:	inc    edx
  5092b2:	mov    al,ds:0x97a9efe4
  5092b7:	pop    ebx
  5092b8:	nop
  5092b9:	pop    ss
  5092ba:	push   edi
  5092bb:	and    eax,0x6d4da631
  5092c0:	mov    eax,0xbce12c88
  5092c5:	and    ecx,DWORD PTR [ebp+0x1a35a693]
  5092cb:	lahf   
  5092cc:	jb     0x5092df
  5092ce:	in     al,0xba
  5092d0:	jae    0x5092a4
  5092d2:	jbe    0x5092c8
  5092d4:	lds    esp,FWORD PTR [edi]
  5092d6:	jmp    0xf9dc6d0c
  5092db:	nop
  5092dc:	pop    ebp
  5092dd:	repz retf 
  5092df:	and    eax,0x73389b37
  5092e4:	xor    ecx,ebp
  5092e6:	nop
  5092e7:	cmp    dh,BYTE PTR [esp+ecx*4-0x3aaf608]
  5092ee:	loopne 0x5092e2
  5092f0:	aaa    
  5092f1:	or     edi,DWORD PTR [ebp-0x202cd1c3]
  5092f7:	inc    edi
  5092f8:	dec    ebx
  5092f9:	cmp    DWORD PTR [eax+0x60],ebp
  5092fc:	aaa    
  5092fd:	push   esp
  5092fe:	bound  ebp,QWORD PTR [ebx+ebp*4+0x71dcf59c]
  509305:	mov    eax,ds:0x51dac2df
  50930a:	pop    es
  50930b:	bound  esp,QWORD PTR [eax]
  50930d:	and    BYTE PTR [edi],al
  50930f:	test   al,0x4c
  509311:	add    edi,DWORD PTR [ebx-0x68]
  509314:	ror    BYTE PTR [edx],0xed
  509317:	and    ah,BYTE PTR [eax]
  509319:	pop    esi
  50931a:	dec    esi
  50931b:	outs   dx,BYTE PTR ds:[esi]
  50931c:	or     al,0xed
  50931e:	pop    ecx
  50931f:	aas    
  509320:	push   ecx
  509321:	mov    dh,0x10
  509323:	xchg   ebp,eax
  509324:	xchg   edi,eax
  509325:	push   ss
  509326:	pop    esi
  509327:	pusha  
  509328:	pop    edx
  509329:	mov    ch,0xe3
  50932b:	cli    
  50932c:	sbb    ebp,DWORD PTR [ecx]
  50932e:	inc    edi
  50932f:	in     eax,dx
  509330:	adc    ah,dl
  509332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  509333:	dec    ebp
  509334:	jmp    DWORD PTR [ebp+0x5fb51a32]
  50933a:	mov    eax,ds:0x9b9d010e
  50933f:	push   0x35
  509341:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509342:	mov    bl,0xb7
  509344:	or     BYTE PTR [eax+0x36],ah
  509347:	fdivr  DWORD PTR [eax]
  509349:	or     bh,BYTE PTR [ecx+0x305ee85d]
  50934f:	push   es
  509350:	(bad)  
  509351:	sti    
  509352:	xor    bl,BYTE PTR [ebp+0xb]
  509355:	out    0xec,al
  509357:	mul    DWORD PTR [ebx-0x38]
  50935a:	cli    
  50935b:	or     DWORD PTR [edx],ecx
  50935d:	out    0xbf,al
  50935f:	jno    0x50931a
  509361:	pop    edi
  509362:	icebp  
  509363:	dec    ebp
  509364:	retf   
  509365:	mov    al,0xca
  509367:	inc    edx
  509368:	xchg   ecx,eax
  509369:	aas    
  50936a:	push   cs
  50936b:	push   0x9ee371cd
  509370:	fsubr  st(6),st
  509373:	int3   
  509374:	and    esp,DWORD PTR [edi+0x7a]
  509377:	push   esp
  509378:	cli    
  509379:	popa   
  50937a:	(bad)  
  50937b:	mov    eax,ds:0x953f95c1
  509380:	call   0x1fc9bd33
  509385:	and    BYTE PTR [edx],cl
  509387:	repz inc esi
  509389:	aaa    
  50938a:	sbb    BYTE PTR [ecx-0x66],ah
  50938d:	xor    eax,0x6711f0be
  509392:	mov    ah,0x95
  509394:	dec    edx
  509395:	shl    DWORD PTR [edi+0x7ca63109],cl
  50939b:	jecxz  0x50939f
  50939d:	mov    al,ds:0x52e91c1c
  5093a2:	(bad)  
  5093a3:	pop    ebp
  5093a4:	push   es
  5093a5:	dec    ebx
  5093a6:	mov    BYTE PTR [edx+ebx*4+0x790e3afc],cl
  5093ad:	mov    ah,0x97
  5093af:	jecxz  0x50939b
  5093b1:	xor    al,0xa7
  5093b3:	cmp    BYTE PTR [ebx],cl
  5093b5:	daa    
  5093b6:	add    ebp,DWORD PTR [edi-0x1c07ca0]
  5093bc:	and    BYTE PTR [ecx],al
  5093be:	dec    edi
  5093bf:	dec    edi
  5093c0:	(bad)  
  5093c1:	cli    
  5093c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5093c3:	out    0xce,al
  5093c5:	out    dx,eax
  5093c6:	outs   dx,DWORD PTR ds:[esi]
  5093c7:	cld    
  5093c8:	add    bh,BYTE PTR [ebx+0x54]
  5093cb:	lock xchg edx,eax
  5093cd:	inc    ebp
  5093ce:	fild   WORD PTR [edx-0x309b274c]
  5093d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5093d5:	je     0x50941f
  5093d7:	or     eax,0x5a5b6249
  5093dc:	enter  0xef1e,0x9b
  5093e0:	inc    edx
  5093e1:	inc    esp
  5093e2:	push   edx
  5093e3:	mov    edi,0x9651f41c
  5093e8:	or     bl,ah
  5093ea:	xchg   edi,eax
  5093eb:	gs mov ebp,0xd9b2c958
  5093f1:	sub    edi,DWORD PTR [edx+eax*8]
  5093f4:	into   
  5093f5:	dec    edi
  5093f6:	or     DWORD PTR [esi-0x9],esp
  5093f9:	inc    ecx
  5093fa:	mov    cl,0x35
  5093fc:	out    dx,eax
  5093fd:	sbb    al,0x56
  5093ff:	in     eax,dx
  509400:	cmp    esi,esi
  509402:	push   edi
  509403:	xchg   edx,eax
  509404:	push   edi
  509405:	add    ah,BYTE PTR [esi]
  509407:	mov    ecx,0x895c4ecd
  50940c:	test   BYTE PTR [edx],bl
  50940e:	test   BYTE PTR [ebx],bh
  509410:	jnp    0x5093ff
  509412:	les    edx,FWORD PTR [esi-0x720d33d0]
  509418:	outs   dx,BYTE PTR ds:[esi]
  509419:	sbb    al,0xf8
  50941b:	aas    
  50941c:	mov    esi,0xcfbd6209
  509421:	das    
  509422:	fild   QWORD PTR [ebp+0x37]
  509425:	add    eax,0xca02022a
  50942a:	ror    bh,0xf7
  50942d:	fist   WORD PTR [ebx]
  50942f:	leave  
  509430:	push   esi
  509431:	dec    esi
  509432:	xor    esi,esp
  509434:	pusha  
  509435:	sar    edx,0x25
  509438:	cmc    
  509439:	inc    edi
  50943a:	repnz inc eax
  50943c:	sub    edx,edx
  50943e:	pop    edx
  50943f:	mov    dh,0xdf
  509441:	xchg   edi,eax
  509442:	add    al,0x22
  509444:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  509445:	ret    
  509446:	mov    BYTE PTR ds:0x45fabd03,dh
  50944c:	push   edi
  50944d:	mov    dl,0x9
  50944f:	ja     0x5093db
  509451:	xchg   edx,eax
  509452:	add    BYTE PTR [ebx],bl
  509454:	mov    ecx,DWORD PTR [ebp-0x66feef16]
  50945a:	dec    edi
  50945b:	imul   ebp,DWORD PTR ds:0x14c86fb1,0x7a0bbdb2
  509465:	push   esi
  509466:	add    bl,cl
  509468:	cmp    DWORD PTR [ebp-0x401e0fe9],esp
  50946e:	pop    edx
  50946f:	sbb    al,0x5a
  509471:	iret   
  509472:	bound  esi,QWORD PTR [ecx+0x4]
  509475:	mov    bl,0x9f
  509477:	jnp    0x509428
  509479:	jg     0x5094e9
  50947b:	retf   0x1294
  50947e:	or     ah,BYTE PTR [edi]
  509480:	out    0xe2,al
  509482:	ins    BYTE PTR es:[edi],dx
  509483:	mov    ?,WORD PTR [ebp+0x50c0cdf7]
  509489:	add    eax,0xef3dbda9
  50948e:	loopne 0x50942f
  509490:	ror    DWORD PTR [ebx+0x42ee0ddb],0x7f
  509497:	inc    esi
  509498:	mov    DWORD PTR [ecx+0x103a0323],esi
  50949e:	pop    eax
  50949f:	aaa    
  5094a0:	int    0xc
  5094a2:	out    0x93,al
  5094a4:	in     eax,dx
  5094a5:	xchg   ebp,eax
  5094a6:	out    dx,eax
  5094a7:	jns    0x509528
  5094a9:	mov    ch,BYTE PTR [edi-0x18c76e1]
  5094af:	gs scas al,BYTE PTR es:[edi]
  5094b1:	jle    0x5094a6
  5094b3:	pop    ebx
  5094b4:	sub    dh,0x0
  5094b7:	mov    ebx,0xdc54a442
  5094bc:	cmp    esi,ebx
  5094be:	add    BYTE PTR [eax+0x5b1df4e0],cl
  5094c4:	ins    DWORD PTR es:[edi],dx
  5094c5:	push   ss
  5094c6:	pop    eax
  5094c7:	cmp    eax,0xa5775d2c
  5094cc:	rol    DWORD PTR [ecx-0x7d496189],cl
  5094d2:	or     BYTE PTR [eax+0x76],bl
  5094d5:	test   BYTE PTR [edi+0x28],cl
  5094d8:	inc    si
  5094da:	jmp    0x5094c2
  5094dc:	xchg   esi,eax
  5094dd:	sbb    eax,0xe2257fbc
  5094e2:	mov    ds:0xda4d6ed3,al
  5094e7:	add    esp,DWORD PTR [eax+eax*4-0x61e67f5e]
  5094ee:	cli    
  5094ef:	ja     0x5094ac
  5094f1:	arpl   WORD PTR [eax],di
  5094f3:	jecxz  0x509512
  5094f5:	loope  0x5094ae
  5094f7:	out    0xef,al
  5094f9:	out    0x9f,eax
  5094fb:	loopne 0x509540
  5094fd:	imul   edx,DWORD PTR gs:[edi-0x56],0xffffffc3
  509502:	mov    edi,0x3118258
  509507:	push   0xffffffcb
  509509:	test   bh,bh
  50950b:	scas   eax,DWORD PTR es:[edi]
  50950c:	mov    bl,BYTE PTR [esp+ebp*2]
  50950f:	mov    bl,0x6a
  509511:	and    DWORD PTR [edx],eax
  509513:	popa   
  509514:	ficom  WORD PTR [edi+0x203980ff]
  50951a:	jl     0x509508
  50951c:	ss xchg ebp,eax
  50951e:	xchg   esp,eax
  50951f:	push   DWORD PTR [edx+0x5a04ff23]
  509525:	or     eax,ebx
  509527:	clc    
  509528:	push   cs
  509529:	scas   al,BYTE PTR es:[edi]
  50952a:	push   ds
  50952b:	pusha  
  50952c:	jg     0x5094c7
  50952e:	and    ah,BYTE PTR [eax]
  509530:	out    0x91,eax
  509532:	(bad)  
  509533:	jb     0x5094f5
  509535:	cmp    bl,BYTE PTR [ebx+0x5c]
  509538:	xchg   esi,eax
  509539:	add    al,0x92
  50953b:	mov    eax,ds:0x8db0291a
  509540:	lock mov ebx,0xf4648421
  509546:	ret    0x868b
  509549:	ja     0x50952a
  50954b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50954c:	inc    ebp
  50954d:	push   es
  50954e:	cmp    esi,esp
  509550:	test   BYTE PTR [edx],dl
  509552:	add    al,0x48
  509554:	dec    ebp
  509555:	cdq    
  509556:	jnp    0x5095d0
  509558:	sar    BYTE PTR [eax-0x220693ce],cl
  50955e:	adc    BYTE PTR es:[edx-0x20f52eca],0x6d
  509566:	xchg   esi,eax
  509567:	popf   
  509568:	lock fcmovnbe st,st(1)
  50956b:	cmp    DWORD PTR [edi-0x7549bb20],esp
  509571:	es push es
  509573:	hlt    
  509574:	stc    
  509575:	iret   
  509576:	(bad)  
  509577:	loopne 0x509523
  509579:	and    BYTE PTR [edx+0x30],ah
  50957c:	and    eax,ebx
  50957e:	jmp    0xf7bd:0x99fb509b
  509585:	retf   0xae8d
  509588:	dec    ecx
  509589:	mov    dl,0x7b
  50958b:	cmp    ebp,DWORD PTR gs:[eax+ebp*4]
  50958f:	fidiv  DWORD PTR [ecx]
  509591:	mov    edx,ebp
  509593:	mov    esi,0x28356237
  509598:	jmp    DWORD PTR [ebx+0x323c1f27]
  50959e:	add    DWORD PTR [edx+eiz*4-0x2b3a769a],ebx
  5095a5:	test   bl,ch
  5095a7:	neg    ah
  5095a9:	inc    eax
  5095aa:	xor    esp,DWORD PTR ds:0xdb3b6903
  5095b0:	ins    DWORD PTR es:[edi],dx
  5095b1:	cmc    
  5095b2:	test   BYTE PTR [edx],bh
  5095b4:	cs sbb cl,cl
  5095b7:	xor    dh,BYTE PTR [ebp+0x16]
  5095ba:	out    0x9,al
  5095bc:	mov    ?,WORD PTR [edi]
  5095be:	or     al,0xf8
  5095c0:	jo     0x5095d4
  5095c2:	or     edx,DWORD PTR [esi]
  5095c4:	fs out dx,eax
  5095c6:	mov    ds,WORD PTR [edi]
  5095c8:	jge    0x509592
  5095ca:	and    al,0x62
  5095cc:	mov    edx,0xe0e69d6a
  5095d1:	or     eax,0xe6552458
  5095d6:	mov    ebx,0x543ea8ce
  5095db:	inc    esp
  5095dc:	xchg   ecx,eax
  5095dd:	std    
  5095de:	dec    ebx
  5095df:	(bad)  
  5095e0:	cdq    
  5095e1:	(bad)  
  5095e3:	es jecxz 0x50962f
  5095e6:	and    al,0x99
  5095e8:	push   esi
  5095e9:	(bad)  
  5095ec:	(bad)  
  5095ed:	jg     0x5095c1
  5095ef:	fidivr DWORD PTR ds:0x51fb4e41
  5095f5:	pop    ebx
  5095f6:	xor    edx,DWORD PTR [ebx]
  5095f8:	sub    BYTE PTR [ebx-0x63],bh
  5095fb:	xchg   esi,eax
  5095fc:	sub    al,0x86
  5095fe:	add    BYTE PTR [ebx],0x3
  509601:	call   0xb7a2:0xe65b2c30
  509608:	and    BYTE PTR [ebp-0x418f4c45],bh
  50960e:	jecxz  0x5095ad
  509610:	mov    ecx,0x1f22c121
  509615:	and    BYTE PTR gs:[edi],0x39
  509619:	outs   dx,DWORD PTR ds:[esi]
  50961a:	(bad)  
  50961c:	push   0x242021ba
  509621:	or     eax,0x5f74b325
  509626:	shr    BYTE PTR [eax+0x6a],cl
  509629:	sub    BYTE PTR [ecx-0x3057597e],ah
  50962f:	shl    DWORD PTR [ebx+0x63],1
  509632:	xlat   BYTE PTR ds:[ebx]
  509633:	pop    ecx
  509634:	inc    edx
  509635:	les    eax,FWORD PTR [esi]
  509637:	jg     0x509657
  509639:	repnz fdiv QWORD PTR [ebp+0x713cc4e4]
  509640:	cmp    BYTE PTR [esi],ch
  509642:	enter  0x5b25,0x3b
  509646:	inc    esi
  509647:	jns    0x509644
  509649:	shr    ah,cl
  50964b:	repnz sbb bh,BYTE PTR [ecx+0x10]
  50964f:	mov    eax,esi
  509651:	popa   
  509652:	cmp    esi,DWORD PTR [edi-0x3340a57c]
  509658:	ret    0x5021
  50965b:	add    BYTE PTR [ebp+0x43],dl
  50965e:	pop    ds
  50965f:	popa   
  509660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509661:	retf   
  509662:	int    0x31
  509664:	sbb    DWORD PTR [edx+0x4e2f995f],esi
  50966a:	pop    ebp
  50966b:	or     DWORD PTR [esi-0x5f],esi
  50966e:	imul   esi,DWORD PTR [ecx+0x21],0x866c3f12
  509675:	mov    esi,DWORD PTR [ebp+0x28]
  509678:	mov    dh,BYTE PTR [ebx+0x68beb848]
  50967e:	outs   dx,BYTE PTR ds:[esi]
  50967f:	imul   edx,DWORD PTR [edx+0x2f],0x714b4006
  509686:	jbe    0x5096f4
  509688:	je     0x509633
  50968a:	xchg   DWORD PTR [eax],ebp
  50968c:	pop    edi
  50968d:	push   cs
  50968e:	jae    0x50965f
  509690:	xchg   BYTE PTR [edi+0x2dcfe90b],dl
  509696:	lods   al,BYTE PTR ds:[esi]
  509697:	scas   eax,DWORD PTR es:[edi]
  509698:	rol    dh,0xe9
  50969b:	push   es
  50969c:	mov    esp,0x3bdc7135
  5096a1:	xchg   ebx,eax
  5096a2:	sub    edi,esp
  5096a4:	sbb    BYTE PTR [edx-0x20620a2b],cl
  5096aa:	out    dx,al
  5096ab:	sahf   
  5096ac:	sbb    eax,0xcc42591e
  5096b1:	popf   
  5096b2:	inc    edx
  5096b3:	xlat   BYTE PTR ds:[ebx]
  5096b4:	xor    ch,BYTE PTR [eax+ebx*8-0xd]
  5096b8:	test   eax,0x30200857
  5096bd:	adc    eax,0xc4428739
  5096c2:	hlt    
  5096c3:	sub    al,0xac
  5096c5:	stos   DWORD PTR es:[edi],eax
  5096c6:	lds    ebx,FWORD PTR ds:0xd24c888
  5096cc:	pusha  
  5096cd:	int    0xf
  5096cf:	fist   DWORD PTR [esi-0x42c64515]
  5096d5:	inc    esi
  5096d6:	jg     0x50973a
  5096d8:	adc    esi,DWORD PTR [edi-0x7e]
  5096db:	mov    esp,0x37fc8ae7
  5096e0:	cs aad 0x4e
  5096e3:	stc    
  5096e4:	repnz ins DWORD PTR es:[edi],dx
  5096e6:	sbb    ebx,DWORD PTR [esi+0x3f75d864]
  5096ec:	mov    esp,0x8a989e1a
  5096f1:	add    esi,ebp
  5096f3:	jecxz  0x50973b
  5096f5:	stc    
  5096f6:	sbb    DWORD PTR [edx*8+0x21560eb3],ecx
  5096fd:	lock sub ecx,DWORD PTR [edx]
  509700:	shl    BYTE PTR ds:0x2933711,0xd0
  509707:	ins    DWORD PTR es:[edi],dx
  509708:	test   esi,esp
  50970a:	dec    ebx
  50970b:	call   0x9ef55c0c
  509710:	gs push esp
  509712:	bnd jne 0x5096cd
  509715:	pushf  
  509716:	xor    al,0xf4
  509718:	or     al,BYTE PTR [edx+0x663f5939]
  50971e:	and    edi,edx
  509720:	lahf   
  509721:	stc    
  509722:	movlps xmm4,QWORD PTR [ebp+eax*4-0x38b5392c]
  50972a:	dec    ecx
  50972b:	aad    0xe1
  50972d:	sbb    ah,BYTE PTR [ebp-0x13]
  509730:	cs (bad) 
  509732:	js     0x5096b4
  509734:	adc    bl,BYTE PTR [ebp-0x4c]
  509737:	dec    ebx
  509738:	pand   mm3,QWORD PTR [ebp+0x325f738e]
  50973f:	imul   edi,ebp,0x2da511f4
  509745:	cld    
  509746:	jecxz  0x50976b
  509748:	sub    DWORD PTR [esi],0x4316fe3a
  50974e:	lods   al,BYTE PTR ds:[esi]
  50974f:	(bad)  
  509750:	mov    cl,BYTE PTR [ebp+0x351559e5]
  509756:	mov    dl,0x48
  509758:	inc    esp
  509759:	les    esi,FWORD PTR [edi+0x65]
  50975c:	add    eax,0x6cb25f5
  509761:	adc    BYTE PTR [ecx+0xec2f607],ah
  509767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509768:	mov    DWORD PTR [ecx+edi*2],ebx
  50976b:	jg     0x50974f
  50976d:	mov    ebx,?
  50976f:	pop    ss
  509770:	ss cmp eax,0x2ec2f460
  509776:	push   esi
  509777:	pushf  
  509778:	xchg   DWORD PTR [edi+0x7c6dfebd],esp
  50977e:	xchg   ebx,eax
  50977f:	retf   
  509780:	neg    ebx
  509782:	je     0x50979e
  509784:	sub    BYTE PTR [ecx+eiz*8+0x1f],cl
  509788:	jp     0x509786
  50978a:	cmc    
  50978b:	xchg   ebx,eax
  50978c:	cmp    BYTE PTR [ebx+0x61],ch
  50978f:	mov    al,ds:0x49b97445
  509794:	cmp    eax,0xa9e2ee23
  509799:	push   eax
  50979a:	loope  0x50971c
  50979c:	sub    al,0xec
  50979e:	mov    edx,es
  5097a0:	and    esi,DWORD PTR [ebp-0x5c]
  5097a3:	cmc    
  5097a4:	mov    DWORD PTR [edx+edx*8],edi
  5097a7:	jbe    0x509785
  5097a9:	mov    dl,0x1d
  5097ab:	mov    BYTE PTR [edi],ch
  5097ad:	out    dx,eax
  5097ae:	mov    ecx,0x6a881445
  5097b3:	jbe    0x509817
  5097b5:	mov    ah,0x1e
  5097b7:	es push edi
  5097b9:	and    bh,bl
  5097bb:	jne    0x509834
  5097bd:	in     eax,0xd0
  5097bf:	out    dx,eax
  5097c0:	rcr    DWORD PTR [eax-0x56],cl
  5097c3:	(bad)
  5097c7:	jnp    0x509751
  5097c9:	repnz (bad) 
  5097cb:	popf   
  5097cc:	cmp    eax,0xabb9f965
  5097d1:	fiadd  WORD PTR [esi]
  5097d3:	into   
  5097d4:	into   
  5097d5:	fnstcw WORD PTR [esi-0x72]
  5097d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5097d9:	xchg   ebx,eax
  5097da:	mov    ebp,0x852e6ce4
  5097df:	jbe    0x509785
  5097e1:	xchg   ah,ah
  5097e3:	out    dx,al
  5097e4:	bound  eax,QWORD PTR [ebx-0x15a1892a]
  5097ea:	adc    BYTE PTR [esi],dh
  5097ec:	mov    ebp,0xd92db6ed
  5097f1:	scas   al,BYTE PTR es:[edi]
  5097f2:	mov    eax,0x6dd0532e
  5097f7:	call   0x46b5:0xc1b92797
  5097fe:	enter  0x30ec,0xec
  509802:	iret   
  509803:	jg     0x509813
  509805:	rcr    bl,0x7b
  509808:	repnz imul bh
  50980b:	xchg   esp,eax
  50980c:	cli    
  50980d:	out    0x95,eax
  50980f:	xchg   esi,eax
  509810:	in     al,0x2d
  509812:	mov    dh,0x43
  509814:	aad    0x21
  509816:	hlt    
  509817:	aas    
  509818:	xor    al,0x2f
  50981a:	icebp  
  50981b:	xor    dl,dh
  50981d:	(bad)  
  50981e:	jnp    0x509804
  509820:	aaa    
  509821:	mov    ch,0xdf
  509823:	and    eax,0x11a6b12f
  509828:	lea    esi,[ecx+ebx*4-0x55b4c2a7]
  50982f:	xchg   edx,eax
  509830:	mov    ds:0xd3c47be5,eax
  509835:	jmp    DWORD PTR cs:[edi-0x28]
  509839:	sub    eax,0x719d6516
  50983e:	cmp    esi,DWORD PTR [ebp-0x2c]
  509841:	fcom   QWORD PTR [ebp+0x3ad0947d]
  509847:	fdivp  st(5),st
  509849:	jbe    0x509859
  50984b:	xor    eax,0xfa6e1221
  509850:	mov    edi,0xc8bd246e
  509855:	inc    ebx
  509856:	cld    
  509857:	inc    eax
  509858:	mov    DWORD PTR [eax],0x56e8b65
  50985e:	dec    ecx
  50985f:	sbb    eax,0x7b45b0a9
  509864:	je     0x5097e8
  509866:	popa   
  509867:	loopne 0x5098ce
  509869:	sbb    eax,0x48d2c200
  50986e:	lock cwde 
  509870:	fisttp DWORD PTR [ecx+0x70]
  509873:	icebp  
  509874:	adc    BYTE PTR [ecx-0x4a7de333],bh
  50987a:	test   eax,0xeb555672
  50987f:	cmp    DWORD PTR [edx],0x5d
  509882:	aas    
  509883:	test   DWORD PTR [ecx],ebx
  509885:	mov    DWORD PTR [eax-0x6d],0x4632b3af
  50988c:	mov    edx,0x1a2bd30f
  509891:	mov    ds:0x17806b62,al
  509896:	ins    DWORD PTR es:[edi],dx
  509897:	not    eax
  509899:	sub    dl,BYTE PTR [eax+0x1bf91a7e]
  50989f:	fld    QWORD PTR [edi-0x4e]
  5098a2:	mov    ah,0xcf
  5098a4:	out    dx,al
  5098a5:	sbb    eax,0xd18de9e8
  5098aa:	jp     0x5098f2
  5098ac:	jmp    0x19af:0xb19da884
  5098b3:	pop    ebp
  5098b4:	pop    esp
  5098b5:	fdiv   DWORD PTR [esi-0x54f51096]
  5098bb:	cmp    eax,0x91f170b
  5098c0:	mov    bh,BYTE PTR [eax-0x4d]
  5098c3:	and    edi,DWORD PTR [esi-0x54]
  5098c6:	or     eax,0x51dce06b
  5098cb:	or     al,0x44
  5098cd:	push   ebp
  5098ce:	das    
  5098cf:	in     eax,0xe7
  5098d1:	cmp    eax,0x18ce4819
  5098d6:	sahf   
  5098d7:	stos   BYTE PTR es:[edi],al
  5098d8:	mov    edi,0x1bc83b9d
  5098dd:	int3   
  5098de:	test   DWORD PTR [ebx],edx
  5098e0:	push   edi
  5098e1:	rcl    BYTE PTR [eax+0x7b],cl
  5098e4:	mov    bl,0x8e
  5098e6:	sar    BYTE PTR [ecx],0x97
  5098e9:	adc    al,0x10
  5098eb:	sbb    BYTE PTR ds:[eax],bh
  5098ee:	adc    edi,ecx
  5098f0:	shl    BYTE PTR [eax],cl
  5098f2:	and    BYTE PTR [edx+0x760ae2c1],ch
  5098f8:	pop    ebp
  5098f9:	mov    esi,0x8645c255
  5098fe:	push   ss
  5098ff:	rcl    BYTE PTR [edi],1
  509901:	sbb    eax,0xd216a92a
  509906:	dec    ebp
  509908:	pop    esi
  509909:	xor    eax,0x6624070a
  50990e:	je     0x50992d
  509910:	xchg   esi,eax
  509911:	mov    al,ds:0xe3db6741
  509916:	stos   DWORD PTR es:[edi],eax
  509917:	test   al,0x5d
  509919:	and    ah,BYTE PTR [edx+0x4d342d09]
  50991f:	test   eax,0xf2371f5d
  509924:	jmp    0x5098d2
  509926:	push   ss
  509927:	dec    edx
  509928:	outs   dx,BYTE PTR ds:[esi]
  509929:	or     BYTE PTR [esi+0x57b8b7ff],dh
  50992f:	inc    ebp
  509930:	ins    DWORD PTR es:[edi],dx
  509931:	mov    dh,0xd4
  509933:	test   DWORD PTR [esi+0x69682e4a],edx
  509939:	ret    0x99fb
  50993c:	loop   0x5098df
  50993e:	mov    eax,0x3e47ed6d
  509943:	jb     0x509903
  509945:	in     eax,dx
  509946:	xor    ah,BYTE PTR [ebx+0x73]
  509949:	outs   dx,BYTE PTR ds:[esi]
  50994a:	sub    eax,0x1598a3a1
  50994f:	cmp    eax,0x84c0f30d
  509954:	lock call DWORD PTR [ecx+ecx*2+0x796e8fdf]
  50995c:	add    bh,BYTE PTR [eax-0x7e]
  50995f:	call   0x9f60d3a5
  509964:	mov    dl,0xb5
  509966:	dec    edx
  509967:	ins    DWORD PTR es:[edi],dx
  509968:	and    ecx,ebp
  50996a:	mov    esi,0xffaa3854
  50996f:	(bad)  
  509970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509971:	inc    edx
  509972:	xor    ebx,DWORD PTR [edx-0x64]
  509975:	ret    0xa5e
  509978:	xor    BYTE PTR [esi],al
  50997a:	jp     0x509917
  50997c:	out    dx,al
  50997d:	adc    bh,BYTE PTR [ebp-0x4909addd]
  509983:	mov    al,ds:0xdbeeabf4
  509988:	push   0x3d10a488
  50998d:	(bad)  
  50998e:	scas   eax,DWORD PTR es:[edi]
  50998f:	enter  0xe38f,0x5e
  509993:	cmp    DWORD PTR [ecx-0x360ff650],esp
  509999:	mov    bl,ah
  50999b:	test   BYTE PTR [edi],ah
  50999d:	mov    edi,0x39d7a786
  5099a2:	pushf  
  5099a3:	dec    edx
  5099a4:	xchg   esp,eax
  5099a5:	mov    DWORD PTR [esi],esp
  5099a7:	push   cs
  5099a8:	sub    ah,al
  5099aa:	jae    0x5099bf
  5099ac:	or     al,0x27
  5099ae:	js     0x5099ae
  5099b0:	pushf  
  5099b1:	test   al,0x4d
  5099b4:	sbb    al,0xf7
  5099b6:	rcr    DWORD PTR [edx+eiz*8],1
  5099b9:	test   al,0xe7
  5099bb:	fldenv [ecx-0x1]
  5099be:	jle    0x509a12
  5099c0:	jmp    0x1ec1:0x1a64deff
  5099c7:	pop    ebx
  5099c8:	xor    DWORD PTR ds:0x491bb704,ebx
  5099ce:	xchg   ebp,eax
  5099cf:	test   eax,0x78f3cd57
  5099d4:	dec    esp
  5099d5:	dec    ecx
  5099d6:	leave  
  5099d7:	mov    edi,0x5e702177
  5099dc:	jl     0x5099ec
  5099de:	in     al,dx
  5099df:	push   cs
  5099e0:	inc    esp
  5099e1:	fld    QWORD PTR [edx-0x1bb57667]
  5099e7:	and    cl,ah
  5099e9:	inc    ebx
  5099ea:	sbb    ebp,edx
  5099ec:	sub    al,0xa1
  5099ee:	and    DWORD PTR [ebp-0x1e],eax
  5099f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5099f2:	dec    ecx
  5099f3:	ins    DWORD PTR es:[edi],dx
  5099f4:	lea    edi,[eax+0x53c2bcd7]
  5099fa:	xchg   BYTE PTR [edi+0x6e3fc18b],bl
  509a00:	or     al,0x45
  509a02:	mov    al,ds:0xdbc29f6a
  509a07:	repz add eax,0x806a3af4
  509a0d:	repz cmc 
  509a0f:	mov    ebp,ss
  509a11:	(bad)  
  509a13:	mov    DWORD PTR [ecx-0x2c],ecx
  509a16:	stos   BYTE PTR es:[edi],al
  509a17:	sbb    DWORD PTR [esi],esi
  509a19:	cld    
  509a1a:	xor    edi,esp
  509a1c:	dec    BYTE PTR [ecx]
  509a1e:	rcl    DWORD PTR [ecx],1
  509a20:	lock sbb al,0xd
  509a23:	or     DWORD PTR [ecx],esp
  509a25:	clc    
  509a26:	pop    esp
  509a27:	and    al,0x10
  509a29:	add    bh,BYTE PTR [edx+0x3a]
  509a2c:	call   0x645ba1f9
  509a31:	jp     0x5099f4
  509a33:	shl    BYTE PTR [ebp-0x556fe40c],cl
  509a39:	mov    bl,0xbd
  509a3b:	xchg   BYTE PTR [edi],ch
  509a3d:	mov    edx,0xebb8ff16
  509a42:	adc    BYTE PTR [esi],cl
  509a44:	fidiv  DWORD PTR [eax+0x10]
  509a47:	push   0xec52efdb
  509a4c:	jmp    edi
  509a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509a4f:	mov    WORD PTR [edx],es
  509a51:	test   al,0xb7
  509a53:	lds    edx,FWORD PTR [ecx]
  509a55:	cdq    
  509a56:	push   es
  509a57:	test   al,0x65
  509a59:	jl     0x509a47
  509a5b:	imul   ecx,DWORD PTR [eax-0x24],0x2c4470f3
  509a62:	or     eax,0x286ad985
  509a67:	adc    DWORD PTR [edx],ecx
  509a69:	mov    al,ds:0x82ed316e
  509a6e:	cmp    DWORD PTR [ecx+0x46b100fc],ecx
  509a74:	jno    0x509ac8
  509a76:	call   0x9ed3c458
  509a7b:	pop    ebx
  509a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  509a7d:	sbb    al,0xca
  509a7f:	xchg   ebp,eax
  509a80:	neg    ebp
  509a82:	and    ax,WORD PTR ds:0xe0bba80f
  509a89:	xchg   edi,eax
  509a8a:	add    DWORD PTR [esi+ebx*8+0x201bf48a],esp
  509a91:	out    0xfb,eax
  509a93:	pop    es
  509a94:	sbb    DWORD PTR [esi],eax
  509a96:	repz push edx
  509a98:	add    al,0x37
  509a9a:	mov    eax,ds:0x64ebe0c1
  509a9f:	jae    0x509ab7
  509aa1:	(bad)  
  509aa2:	dec    esp
  509aa3:	imul   ebx,DWORD PTR [eax],0xe1803514
  509aa9:	(bad)
  509aac:	dec    eax
  509aad:	xor    ebx,esi
  509aaf:	push   es
  509ab0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  509ab1:	arpl   WORD PTR [ebx],ax
  509ab3:	rcr    DWORD PTR [ecx+0x7d],1
  509ab6:	jno    0x509abb
  509ab8:	aaa    
  509ab9:	imul   edi,ebx,0x1356a79b
  509abf:	lods   eax,DWORD PTR ds:[esi]
  509ac0:	xchg   edi,eax
  509ac1:	(bad)  [ebx-0x32d1fea4]
  509ac7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  509ac8:	inc    eax
  509ac9:	retf   
  509aca:	popa   
  509acb:	ja     0x509a82
  509acd:	and    DWORD PTR gs:[ebx+edi*8],ebp
  509ad1:	clc    
  509ad2:	(bad)  
  509ad3:	fisubr WORD PTR [ebp-0x3a]
  509ad6:	pop    ebx
  509ad7:	mov    edi,0x1ca06e3
  509adc:	das    
  509add:	idiv   BYTE PTR [ebx+0x2032d88a]
  509ae3:	pop    ebx
  509ae4:	aas    
  509ae5:	in     eax,dx
  509ae6:	jecxz  0x509b21
  509ae8:	je     0x509af3
  509aea:	inc    ecx
  509aeb:	dec    esp
  509aec:	aad    0x78
  509aee:	or     al,0xf7
  509af0:	fbstp  TBYTE PTR [esi-0x1f]
  509af3:	retf   
  509af4:	mov    dh,BYTE PTR [edx+0x703b1fa1]
  509afa:	retf   0x17d0
  509afd:	(bad)  
  509afe:	retf   0xabf5
  509b01:	pop    es
  509b02:	fwait
  509b03:	sbb    DWORD PTR [eax-0x3],edi
  509b06:	hlt    
  509b07:	lods   al,BYTE PTR ds:[esi]
  509b08:	inc    ebp
  509b09:	cmp    eax,0x635cd4ff
  509b0e:	aaa    
  509b0f:	xchg   ecx,eax
  509b10:	out    dx,eax
  509b11:	bound  ebp,QWORD PTR ds:0xd02d5491
  509b17:	int    0xe3
  509b19:	bound  eax,QWORD PTR [ebx+eax*2]
  509b1c:	push   ebp
  509b1d:	pop    ecx
  509b1e:	and    eax,0xd4199b22
  509b23:	or     al,dh
  509b25:	jmp    0xd05a9f0d
  509b2a:	enter  0xa322,0xb6
  509b2e:	and    bh,BYTE PTR [esi+0x147717b6]
  509b34:	test   eax,0x707ea8ec
  509b39:	jb     0x509ba9
  509b3b:	in     eax,dx
  509b3c:	jns    0x509b8b
  509b3e:	mov    ecx,0xaee366b5
  509b43:	dec    esp
  509b44:	pop    eax
  509b45:	out    0x9d,al
  509b47:	jne    0x509ae9
  509b49:	lea    esp,[edi]
  509b4b:	pushf  
  509b4c:	lds    ebp,FWORD PTR [ebx+0x78]
  509b4f:	lock mov ds:0x4209873c,al
  509b55:	mov    ch,0xa5
  509b57:	mov    DWORD PTR [edx-0x277f6cf2],eax
  509b5d:	test   DWORD PTR [ebx+0x1f],ebx
  509b60:	inc    eax
  509b61:	jbe    0x509b66
  509b63:	jb     0x509b61
  509b65:	sbb    DWORD PTR [esi-0x27419198],0x1fbaf4ba
  509b6f:	(bad)  
  509b70:	frstor [ecx]
  509b72:	xor    eax,0xa6a3eafe
  509b77:	and    DWORD PTR [edx-0x72],esp
  509b7a:	sar    DWORD PTR [esi+0x1d],1
  509b7d:	mov    al,0x82
  509b7f:	iret   
  509b80:	clc    
  509b81:	push   esi
  509b82:	xor    DWORD PTR [esp+ebp*1],esi
  509b85:	mov    esi,0xa7f2b28b
  509b8a:	sub    ecx,ecx
  509b8c:	out    0xf9,eax
  509b8e:	shl    DWORD PTR [edi-0x7f],1
  509b91:	(bad)  
  509b92:	jl     0x509b92
  509b94:	or     al,0x80
  509b96:	cmp    al,0x1b
  509b98:	inc    esi
  509b99:	push   ebx
  509b9a:	and    BYTE PTR [eax],0x9c
  509b9d:	xor    eax,0xb3640200
  509ba2:	cdq    
  509ba3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509ba4:	adc    dh,al
  509ba6:	or     al,0xd2
  509ba8:	hlt    
  509ba9:	jp     0x509b79
  509bab:	mov    eax,0x24b34ccb
  509bb0:	in     eax,0x1e
  509bb2:	mov    bl,0xfb
  509bb4:	cmp    dl,BYTE PTR [ebp+0x1596f87c]
  509bba:	mov    ds:0x2ac4f0e0,eax
  509bbf:	inc    DWORD PTR [edx+0x24]
  509bc2:	aad    0x85
  509bc4:	push   ebp
  509bc5:	xor    DWORD PTR [ecx-0x3d7dffca],0x11
  509bcc:	push   ebp
  509bcd:	sub    BYTE PTR [ebx+esi*4-0x3e03d36c],0x57
  509bd5:	dec    ebx
  509bd6:	(bad)  
  509bd7:	daa    
  509bd8:	ins    BYTE PTR es:[edi],dx
  509bd9:	pop    eax
  509bda:	fcmovnu st,st(7)
  509bdc:	xchg   esp,eax
  509bdd:	pop    esp
  509bde:	popf   
  509bdf:	pop    ss
  509be0:	sub    al,0x46
  509be2:	push   ebp
  509be3:	lds    ecx,FWORD PTR [ebp+0x69]
  509be6:	data16 je 0x509bb9
  509be9:	inc    eax
  509bea:	and    ah,BYTE PTR [eax+0x312e4889]
  509bf0:	repz push ds
  509bf2:	loop   0x509b79
  509bf4:	lock shl DWORD PTR [ecx],0x64
  509bf8:	bswap  edx
  509bfa:	mov    al,ds:0x51c944b6
  509bff:	test   BYTE PTR [esi],ah
  509c01:	jmp    0x509ba8
  509c03:	mov    esi,0x7daf2dc5
  509c08:	xchg   ebp,eax
  509c09:	fwait
  509c0a:	dec    ecx
  509c0b:	cmp    eax,0xf3b6c27e
  509c10:	mov    cl,0x24
  509c12:	idiv   bh
  509c14:	xchg   DWORD PTR [esi+0x58a4ab92],edi
  509c1a:	daa    
  509c1b:	jae    0x509c44
  509c1d:	or     ch,0x52
  509c20:	leave  
  509c21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  509c22:	mov    al,ds:0x5e628952
  509c27:	and    edi,DWORD PTR [edx+0x3e]
  509c2a:	xor    eax,edx
  509c2c:	rol    BYTE PTR [ebx],cl
  509c2e:	pop    es
  509c2f:	sbb    eax,0x803bdb30
  509c34:	repnz mov edx,0x178b25ef
  509c3a:	sti    
  509c3b:	xor    ebp,DWORD PTR [ebp+0x9463d19]
  509c41:	adc    ch,BYTE PTR [edx]
  509c43:	dec    eax
  509c44:	mov    bl,0x1c
  509c46:	mov    esp,0xf6bd3cd
  509c4b:	dec    DWORD PTR [eax+esi*2+0x3b3620e8]
  509c52:	cdq    
  509c53:	xchg   edx,eax
  509c54:	das    
  509c55:	hlt    
  509c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509c57:	out    0x3d,al
  509c59:	pop    esi
  509c5a:	sub    DWORD PTR ss:[ecx-0x2b],0x9ccb8f09
  509c62:	cmp    BYTE PTR [eax+eax*2],0xb0
  509c66:	sbb    al,0xe5
  509c68:	ins    BYTE PTR es:[edi],dx
  509c69:	pusha  
  509c6a:	inc    DWORD PTR [edx+0x6d]
  509c6d:	jo     0x509c83
  509c6f:	pop    eax
  509c70:	addr16 and al,0x9b
  509c73:	les    edx,FWORD PTR [edx+0x70]
  509c76:	push   edi
  509c77:	pop    es
  509c78:	leave  
  509c79:	cli    
  509c7a:	jne    0x509c94
  509c7c:	(bad)  
  509c7d:	clc    
  509c7e:	inc    ebp
  509c7f:	mov    dh,0xb8
  509c81:	mov    ds,WORD PTR [ebx+0x45bdcf97]
  509c87:	jb     0x509c48
  509c89:	jmp    ecx
  509c8b:	lock dec esp
  509c8d:	or     al,0x8a
  509c8f:	adc    DWORD PTR [edx+0x54],0xa135c216
  509c96:	aad    0xc5
  509c98:	dec    esi
  509c99:	jb     0x509c39
  509c9b:	call   0x2c83:0xef8e1c8f
  509ca2:	cmp    esi,DWORD PTR [ebx]
  509ca4:	mov    edx,0x3294258b
  509ca9:	jmp    0x509d25
  509cab:	shl    edx,0xb2
  509cae:	mov    DWORD PTR [esi-0x5dda1bee],edx
  509cb4:	clc    
  509cb5:	sub    al,0xe6
  509cb7:	jb     0x509d0c
  509cb9:	iret   
  509cba:	add    esp,esi
  509cbc:	xchg   ecx,eax
  509cbd:	lahf   
  509cbe:	rol    DWORD PTR [eax-0x1c8420cb],cl
  509cc4:	push   ds
  509cc5:	fsub   st(6),st
  509cc7:	jns    0x509ccb
  509cc9:	push   0x18
  509ccb:	vcvtsi2sd xmm3,xmm1,DWORD PTR [ebp+0x51de254b]
  509cd3:	pop    ebp
  509cd4:	jmp    0x47e44c6f
  509cd9:	in     eax,dx
  509cda:	mov    bh,BYTE PTR [esi]
  509cdc:	jnp    0x509cb0
  509cde:	xchg   DWORD PTR [ecx],ebx
  509ce0:	mov    WORD PTR [edi+0x23],ds
  509ce3:	and    edi,esi
  509ce5:	pop    ds
  509ce6:	inc    esp
  509ce7:	xor    eax,0x37c13c25
  509cec:	test   ebx,ebp
  509cee:	fwait
  509cef:	dec    eax
  509cf0:	into   
  509cf1:	add    BYTE PTR [eax+0x51],dh
  509cf4:	mov    eax,0x5690aa8c
  509cf9:	mov    ah,0x56
  509cfb:	or     DWORD PTR [ecx-0x40a915c1],0x9
  509d02:	mov    edi,0x24d50b3b
  509d07:	sub    al,BYTE PTR [ecx]
  509d09:	xchg   ebp,eax
  509d0a:	jno    0x509ca4
  509d0c:	mov    dh,0xae
  509d0e:	sbb    ah,ah
  509d10:	addr16 mov esi,0xecd04eae
  509d16:	jl     0x509cd5
  509d18:	mov    al,0x7
  509d1a:	sbb    eax,0x427bd0ee
  509d1f:	ins    BYTE PTR es:[edi],dx
  509d20:	popf   
  509d21:	cmc    
  509d22:	sbb    bl,BYTE PTR [ecx]
  509d24:	div    BYTE PTR [ecx]
  509d26:	mov    eax,DWORD PTR [eax+eax*4+0x3de699b4]
  509d2d:	inc    edi
  509d2e:	(bad)  [ecx]
  509d30:	cmp    DWORD PTR [edi+eax*8+0x4cb5c8fb],esi
  509d37:	adc    ecx,esp
  509d39:	sub    eax,0x5965669a
  509d3e:	dec    ecx
  509d3f:	sub    DWORD PTR [edx],ebx
  509d41:	popf   
  509d42:	jmp    0x1b03:0xfd86357a
  509d49:	fdiv   DWORD PTR ss:[eax-0x273a5810]
  509d50:	es pop ecx
  509d52:	mov    dl,0xfb
  509d54:	test   eax,0xfceae883
  509d59:	adc    ecx,DWORD PTR [edi]
  509d5b:	adc    ch,BYTE PTR [ebx+0x5f]
  509d5e:	push   es
  509d5f:	outs   dx,DWORD PTR ds:[esi]
  509d60:	inc    ebp
  509d61:	clc    
  509d62:	(bad)  
  509d63:	xor    BYTE PTR [edi],bh
  509d65:	inc    ebp
  509d66:	sar    DWORD PTR [esp+edx*2],1
  509d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  509d6a:	fs mov esp,0xb56b7081
  509d70:	sti    
  509d71:	inc    ebx
  509d72:	and    ah,bl
  509d74:	ja     0x509da0
  509d76:	fcmovnu st,st(5)
  509d78:	inc    ebp
  509d79:	inc    ebp
  509d7a:	pop    ebp
  509d7b:	dec    DWORD PTR [ebp+edx*8-0xf73970]
  509d82:	xchg   ebx,eax
  509d83:	xchg   edx,eax
  509d84:	cmp    eax,0x55cb4986
  509d89:	test   al,0x1
  509d8b:	inc    ebp
  509d8c:	cld    
  509d8d:	and    BYTE PTR es:[esi+0x7794a3cc],bh
  509d94:	xor    esi,DWORD PTR [esi-0x12eda6d3]
  509d9a:	mov    esp,0xa6498da4
  509d9f:	and    eax,0x6ca48e18
  509da4:	out    dx,eax
  509da5:	cs pop ds
  509da7:	xchg   ebp,eax
  509da8:	loopne 0x509de3
  509daa:	pop    ebx
  509dab:	xor    ebp,DWORD PTR [ecx+0x4fcacafb]
  509db1:	xlat   BYTE PTR ds:[ebx]
  509db2:	inc    eax
  509db3:	add    bl,0x27
  509db6:	jecxz  0x509dec
  509db8:	mov    ss,esi
  509dba:	and    bl,dl
  509dbc:	(bad)  
  509dbd:	xor    esi,DWORD PTR [ebp+0x10]
  509dc0:	popa   
  509dc1:	add    DWORD PTR [ecx],ebx
  509dc3:	jns    0x509d6d
  509dc5:	out    dx,eax
  509dc6:	in     eax,dx
  509dc7:	push   ecx
  509dc8:	call   0x33b:0xac34cd6f
  509dcf:	pop    ss
  509dd0:	lods   al,BYTE PTR ds:[esi]
  509dd1:	pop    edi
  509dd2:	nop
  509dd3:	mov    esp,0x24d51892
  509dd8:	test   al,0x8e
  509dda:	imul   esi,DWORD PTR [esi],0xffffffc3
  509ddd:	pop    edx
  509dde:	cmp    DWORD PTR [ebp+0x50],esp
  509de1:	outs   dx,BYTE PTR ds:[esi]
  509de2:	clc    
  509de3:	ss aam 0xe
  509de6:	xor    al,0x86
  509de8:	mov    ebp,0xc7a15750
  509ded:	arpl   sp,dx
  509def:	jg     0x509dda
  509df1:	cmp    BYTE PTR [ecx+0x483cf1c9],cl
  509df7:	enter  0x6e0b,0x93
  509dfb:	ins    BYTE PTR es:[edi],dx
  509dfc:	test   DWORD PTR [ecx-0x38],edi
  509dff:	mov    bl,0x58
  509e01:	add    DWORD PTR [ecx+0x1a],esi
  509e04:	mov    ds,WORD PTR [eax+0xed9118c]
  509e0a:	js     0x509e02
  509e0c:	mov    edi,0x77ff1903
  509e11:	jmp    0x8560:0xb68b9281
  509e18:	inc    ebp
  509e19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509e1a:	mov    edi,0x675db54d
  509e1f:	loopne 0x509dff
  509e21:	rol    DWORD PTR [ebp-0x6b],cl
  509e24:	fs push ebp
  509e26:	add    ah,BYTE PTR [eax-0x11]
  509e29:	sbb    al,BYTE PTR [ebx+ebp*2+0xa6ab82d]
  509e30:	test   BYTE PTR [edx],ch
  509e32:	mov    cl,0x9d
  509e34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509e35:	pop    ecx
  509e36:	arpl   WORD PTR [ecx-0x59],ax
  509e39:	cmp    ebp,DWORD PTR [edx+ecx*4-0x3322f00f]
  509e40:	adc    eax,0xc153538b
  509e45:	and    al,BYTE PTR [edi+0x7d779e20]
  509e4b:	mov    eax,ds:0x3eba6fa3
  509e50:	lahf   
  509e51:	scas   eax,DWORD PTR es:[edi]
  509e52:	jb     0x509e48
  509e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509e55:	jge    0x509eb3
  509e57:	inc    edi
  509e58:	outs   dx,BYTE PTR ds:[esi]
  509e59:	sbb    ebp,ebp
  509e5b:	iret   
  509e5c:	push   esp
  509e5d:	adc    eax,DWORD PTR [edi]
  509e5f:	push   edi
  509e60:	addr16 sub eax,0xe546006d
  509e66:	xor    eax,0x8c7cb9e
  509e6b:	sub    BYTE PTR [esi],0x4d
  509e6e:	dec    eax
  509e6f:	aad    0x60
  509e71:	in     eax,0xa7
  509e73:	mov    ebp,0x940d834c
  509e78:	or     esi,DWORD PTR [edx]
  509e7a:	dec    esi
  509e7b:	int    0xd5
  509e7d:	mov    al,ds:0x6480b8cd
  509e82:	test   eax,0xe507bbb4
  509e87:	iret   
  509e88:	xchg   edi,eax
  509e89:	les    edx,FWORD PTR [esi+0x5f887a3d]
  509e8f:	mov    ds,ebx
  509e91:	test   al,0xad
  509e93:	jmp    0x509efb
  509e95:	jne    0x509e49
  509e97:	test   BYTE PTR [ecx+ecx*4-0xe],0xfb
  509e9c:	push   ecx
  509e9d:	pop    esi
  509e9e:	outs   dx,DWORD PTR ds:[esi]
  509e9f:	or     esp,ebx
  509ea1:	sbb    al,0xbd
  509ea3:	int3   
  509ea4:	clc    
  509ea5:	fsubr  st(3),st
  509ea7:	inc    eax
  509ea8:	stc    
  509ea9:	stos   DWORD PTR es:[edi],eax
  509eaa:	jmp    0x3089:0xf50d5da
  509eb1:	lock cdq 
  509eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509eb4:	(bad)  
  509eb6:	add    BYTE PTR [esi],cl
  509eb8:	jno    0x509e95
  509eba:	and    eax,0xa9323ec9
  509ebf:	lock push eax
  509ec1:	icebp  
  509ec2:	shl    DWORD PTR [ecx+0x27],1
  509ec5:	stos   DWORD PTR es:[edi],eax
  509ec6:	dec    eax
  509ec7:	sub    al,BYTE PTR [edi+0x4a]
  509eca:	retf   
  509ecb:	fwait
  509ecc:	xchg   ebx,eax
  509ecd:	retf   
  509ece:	fstp   DWORD PTR [ebx+0x13]
  509ed1:	add    eax,0xbe6039a3
  509ed6:	push   ecx
  509ed7:	gs and ah,ch
  509eda:	xchg   BYTE PTR [eax+0x60],dl
  509edd:	es pop edi
  509edf:	add    eax,0x7b6a311e
  509ee4:	rcl    cl,0xe2
  509ee7:	xor    eax,eax
  509ee9:	fisubr DWORD PTR [edx+ecx*2]
  509eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  509eed:	jmp    0x509e70
  509eef:	or     edi,esi
  509ef1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  509ef2:	and    BYTE PTR [ebx],ch
  509ef4:	and    bh,dl
  509ef6:	fisttp QWORD PTR [ecx]
  509ef8:	or     DWORD PTR ds:0xa1a72359,ebp
  509efe:	mov    ds:0xaac217b8,al
  509f03:	lahf   
  509f04:	(bad)  
  509f05:	push   esp
  509f06:	pusha  
  509f07:	arpl   WORD PTR [ebx],bx
  509f09:	jmp    0x509f77
  509f0b:	into   
  509f0c:	loope  0x509f60
  509f0e:	icebp  
  509f0f:	jo     0x509e99
  509f11:	dec    ebx
  509f12:	push   ds
  509f13:	add    eax,ebp
  509f15:	test   BYTE PTR [edi-0x46],dh
  509f18:	repz sbb DWORD PTR [ecx],edx
  509f1b:	mov    al,ds:0x99b2f87c
  509f20:	jecxz  0x509eae
  509f22:	lods   al,BYTE PTR ds:[esi]
  509f23:	cwde   
  509f24:	(bad)  
  509f25:	xor    edx,eax
  509f27:	shl    BYTE PTR [ecx],cl
  509f29:	sub    ebp,DWORD PTR [ebx-0x7240d6f3]
  509f2f:	xor    edx,ecx
  509f31:	(bad)  
  509f33:	jno    0x509faa
  509f35:	call   0xa027:0xd7a494f9
  509f3c:	push   cs
  509f3d:	xor    eax,0xacfcc8f7
  509f42:	nop
  509f43:	into   
  509f44:	test   al,0x6c
  509f46:	std    
  509f47:	rcr    DWORD PTR [ecx-0x36d786af],1
  509f4d:	test   eax,0x7a3e4a6
  509f52:	push   ebp
  509f53:	sbb    esp,DWORD PTR [edi]
  509f55:	and    DWORD PTR [ebx],edi
  509f57:	(bad)  
  509f58:	jmp    0x577a:0x626fb883
  509f5f:	mov    BYTE PTR [edx+0x3b],0xa3
  509f63:	div    DWORD PTR [edx]
  509f65:	mov    edi,0x5e460072
  509f6a:	cmp    al,0xb7
  509f6c:	cmp    ah,BYTE PTR [ebx-0x33b13440]
  509f72:	inc    ecx
  509f73:	dec    ebx
  509f74:	inc    DWORD PTR ds:0xef581e78
  509f7a:	retf   0xb039
  509f7d:	lea    esp,[edi-0x65]
  509f80:	jnp    0x509f8f
  509f82:	addr16 fpatan 
  509f85:	popf   
  509f86:	jecxz  0x509fbb
  509f88:	pop    ebp
  509f89:	xchg   esp,eax
  509f8a:	(bad)  
  509f8b:	mov    ebp,0x52e76a9f
  509f90:	add    DWORD PTR [esi],0xaa5b3bd3
  509f96:	(bad)  
  509f97:	sub    DWORD PTR [edx],ecx
  509f99:	sub    al,0x30
  509f9b:	test   BYTE PTR [ecx],cl
  509f9d:	ret    
  509f9e:	jmp    0xcd7e:0x8772cea4
  509fa5:	dec    ecx
  509fa6:	xchg   DWORD PTR [esi+0x3e837819],ecx
  509fac:	seto   BYTE PTR [esi+0x39fac70d]
  509fb3:	fwait
  509fb4:	sub    eax,ebp
  509fb6:	adc    al,0x36
  509fb8:	xor    eax,0xe3e5eb89
  509fbd:	out    0x52,eax
  509fbf:	push   edx
  509fc0:	or     al,0xae
  509fc2:	pop    ecx
  509fc3:	lods   al,BYTE PTR ds:[esi]
  509fc4:	test   eax,0x3be6b9a3
  509fc9:	xchg   esi,eax
  509fca:	hlt    
  509fcb:	das    
  509fcc:	ret    
  509fcd:	cmp    al,0x16
  509fcf:	rol    BYTE PTR [ebx+0x34],1
  509fd2:	push   0xffffff83
  509fd4:	ficomp WORD PTR [ebp+0x48]
  509fd7:	sbb    al,0xb5
  509fd9:	sbb    eax,0xcd778fb3
  509fde:	jle    0x509fae
  509fe0:	push   0x2b
  509fe2:	fsubr  DWORD PTR [ebx+0x32]
  509fe5:	pusha  
  509fe6:	mov    bl,0xba
  509fe8:	dec    eax
  509fe9:	pop    ebp
  509fea:	js     0x50a01e
  509fec:	rol    BYTE PTR [edx+0x6ca637a1],1
  509ff2:	in     eax,dx
  509ff3:	out    dx,al
  509ff4:	retf   
  509ff5:	stos   DWORD PTR es:[edi],eax
  509ff6:	mov    BYTE PTR [edi+0x5411eef5],al
  509ffc:	mov    eax,DWORD PTR [ebx+eax*2]
  509fff:	sbb    al,0x8e
  50a001:	inc    edx
  50a002:	in     eax,0x9f
  50a004:	(bad)  
  50a006:	mov    ecx,0xc28f22ba
  50a00b:	mov    esi,DWORD PTR [edx+edx*2-0x43]
  50a00f:	add    DWORD PTR [ebx+0x53],esp
  50a012:	push   0xacfd7db4
  50a017:	mov    fs,WORD PTR [ebx-0x24241d87]
  50a01d:	sbb    ebp,ebx
  50a01f:	pop    ebx
  50a020:	inc    esp
  50a021:	shl    edi,1
  50a023:	rol    DWORD PTR [ecx+edi*8],cl
  50a026:	or     DWORD PTR [edx+0x33],ecx
  50a029:	mov    al,BYTE PTR [edi-0x2fcc7c96]
  50a02f:	mov    eax,ds:0x3797a2fa
  50a034:	and    DWORD PTR [eax+ebx*2-0x60],edx
  50a038:	adc    eax,0x214cd3b
  50a03d:	cmp    eax,DWORD PTR [ebp+0x40ae275c]
  50a043:	lea    ebx,[ebp-0x7078777b]
  50a049:	maskmovq mm2,mm2
  50a04c:	xchg   esi,eax
  50a04d:	inc    ebp
  50a04e:	rcr    BYTE PTR [edx],0x1c
  50a051:	xchg   ecx,eax
  50a052:	ficomp WORD PTR [ecx-0x4b4f8ea2]
  50a058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50a059:	aam    0x5
  50a05b:	dec    ebp
  50a05c:	jmp    0x5919:0x5ea33e2
  50a063:	inc    edx
  50a064:	xchg   esp,eax
  50a065:	shl    BYTE PTR [ecx],cl
  50a067:	les    ebx,FWORD PTR [edi+0x11]
  50a06a:	jl     0x50a06f
  50a06c:	fidiv  DWORD PTR cs:[ebx-0x6f9dcdcd]
  50a073:	cmp    ebp,DWORD PTR [ebx+0x5f]
  50a076:	or     edx,DWORD PTR [edi-0xd0cd082]
  50a07c:	sbb    ch,ah
  50a07e:	jle    0x50a085
  50a080:	shl    BYTE PTR [ebx],0x5b
  50a083:	xchg   edx,eax
  50a084:	sbb    bh,BYTE PTR [edx]
  50a086:	push   ds
  50a087:	cmp    eax,0xc9216a95
  50a08c:	sub    al,0xca
  50a08e:	push   0xa3ff95d2
  50a093:	or     edx,DWORD PTR [ebp+0x37]
  50a096:	pop    ecx
  50a097:	mov    al,0x68
  50a099:	(bad)  
  50a09b:	maskmovq mm5,mm5
  50a09e:	mov    esi,0x6b06eb24
  50a0a3:	aas    
  50a0a4:	pop    es
  50a0a5:	mov    ah,0x59
  50a0a7:	mov    eax,0x3747c7ee
  50a0ac:	push   0xcf0a6f3f
  50a0b1:	cmp    edi,DWORD PTR [ebx]
  50a0b3:	add    dl,BYTE PTR ds:0x7845d109
  50a0b9:	xchg   ebp,eax
  50a0ba:	fimul  DWORD PTR [edx-0x57]
  50a0bd:	xchg   esp,eax
  50a0be:	ret    
  50a0bf:	jge    0x50a049
  50a0c1:	inc    ebx
  50a0c2:	cmp    esi,DWORD PTR ds:0xef1f2c0e
  50a0c8:	mov    bh,0xa3
  50a0ca:	clc    
  50a0cb:	cmp    DWORD PTR [ecx-0x2aa4b31a],eax
  50a0d1:	aaa    
  50a0d2:	push   ebx
  50a0d3:	jae    0x50a0c8
  50a0d5:	push   0x78
  50a0d7:	inc    eax
  50a0d8:	and    DWORD PTR [eax+ecx*8],esp
  50a0db:	not    BYTE PTR [edi]
  50a0dd:	jl     0x50a087
  50a0df:	add    DWORD PTR [ecx-0x20],ebx
  50a0e2:	cmp    eax,0x3f987621
  50a0e7:	out    0x90,al
  50a0e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50a0ea:	ret    0x3710
  50a0ed:	push   esp
  50a0ee:	jmp    0x50a16f
  50a0f0:	std    
  50a0f1:	jl     0x50a0e6
  50a0f3:	(bad)  
  50a0f4:	cs cmp al,0x2e
  50a0f7:	add    al,0xc4
  50a0f9:	jg     0x50a0cc
  50a0fb:	ins    BYTE PTR es:[edi],dx
  50a0fc:	jp     0x50a17d
  50a0fe:	dec    eax
  50a0ff:	mov    dl,0x6d
  50a101:	pop    ecx
  50a102:	sbb    eax,0x1c1b6b80
  50a107:	or     DWORD PTR [eax+0x63],0xdc6c85e0
  50a10e:	leave  
  50a10f:	push   0x22
  50a111:	retf   0x5bd3
  50a114:	je     0x50a0e7
  50a116:	fmul   DWORD PTR [esi-0x124e07bb]
  50a11c:	(bad)  
  50a11e:	outs   dx,BYTE PTR ds:[esi]
  50a11f:	in     al,dx
  50a120:	(bad)  
  50a121:	jne    0x50a171
  50a123:	inc    edi
  50a124:	or     DWORD PTR [ebp-0x17],eax
  50a127:	and    ebx,DWORD PTR [esi]
  50a129:	call   0x6273:0xa25cf130
  50a130:	and    edi,DWORD PTR [ebp+0x24]
  50a133:	adc    edi,DWORD PTR [edi+0x24045afd]
  50a139:	bound  esp,QWORD PTR [bx]
  50a13c:	lods   al,BYTE PTR ds:[esi]
  50a13d:	std    
  50a13e:	cmp    al,0x80
  50a140:	aad    0xd3
  50a142:	addr16 es jne 0x50a1b6
  50a146:	adc    al,bh
  50a148:	add    dl,BYTE PTR [edi]
  50a14a:	xor    al,0x30
  50a14c:	and    DWORD PTR [ecx+0x73],0xffffffb5
  50a150:	gs fdiv st,st(7)
  50a153:	sbb    DWORD PTR [edx-0x5d],ebp
  50a156:	js     0x50a135
  50a158:	sub    ebp,eax
  50a15a:	cli    
  50a15b:	cmp    BYTE PTR [ebx-0x532d122e],dh
  50a161:	mov    dh,0x48
  50a163:	cmp    al,0x82
  50a165:	(bad)  
  50a166:	push   edx
  50a167:	inc    esi
  50a168:	mov    cl,0x67
  50a16a:	mov    dh,0xc7
  50a16c:	addr16 and dh,ah
  50a16f:	mov    bl,0xe3
  50a171:	jmp    0x50a18b
  50a173:	psllw  mm4,QWORD PTR [esi+0x1d4df43b]
  50a17a:	adc    eax,0x34599e3c
  50a17f:	xor    eax,0xf3c8d278
  50a184:	stos   DWORD PTR es:[edi],eax
  50a185:	push   esp
  50a186:	xor    dl,BYTE PTR [edi]
  50a188:	jno    0x50a132
  50a18a:	inc    esp
  50a18b:	mov    edi,ebp
  50a18d:	call   0x8ee9f7bc
  50a192:	push   ebp
  50a193:	je     0x50a18e
  50a195:	mov    ebp,0x4f69d9e0
  50a19a:	jle    0x50a14b
  50a19c:	out    dx,eax
  50a19d:	fstp   TBYTE PTR [ebx]
  50a19f:	mov    dl,0xbf
  50a1a1:	add    ch,bh
  50a1a3:	cwde   
  50a1a4:	push   edi
  50a1a5:	sahf   
  50a1a6:	in     al,0xa8
  50a1a8:	das    
  50a1a9:	mov    es,WORD PTR gs:[ebp+0x53]
  50a1ad:	adc    al,0x6f
  50a1af:	arpl   sp,bp
  50a1b1:	jge    0x50a160
  50a1b3:	into   
  50a1b4:	or     al,0x5
  50a1b6:	ins    BYTE PTR es:[edi],dx
  50a1b7:	out    0x94,eax
  50a1b9:	cwde   
  50a1ba:	sbb    DWORD PTR [eax-0x5a],0x5c
  50a1be:	retf   0x5ac1
  50a1c1:	lahf   
  50a1c2:	mov    al,ds:0x5c877204
  50a1c7:	pop    eax
  50a1c8:	pop    ss
  50a1c9:	jmp    0xb1ed:0xc8b77e7f
  50a1d0:	iret   
  50a1d1:	clc    
  50a1d2:	mov    ah,0xc
  50a1d4:	sub    eax,DWORD PTR [ebx+0x438d1df3]
  50a1da:	inc    ebp
  50a1db:	mov    dl,0xbc
  50a1dd:	xchg   cx,ax
  50a1df:	imul   edx,DWORD PTR ds:[eax],0x52
  50a1e3:	dec    edi
  50a1e4:	pop    edx
  50a1e5:	gs jnp 0x50a229
  50a1e8:	mov    bl,0x81
  50a1ea:	adc    eax,0xd34ffaad
  50a1ef:	cwde   
  50a1f0:	xor    al,0x56
  50a1f2:	int3   
  50a1f3:	test   BYTE PTR [ecx+ebp*1+0x630514b0],bl
  50a1fa:	cmp    DWORD PTR [ebx+eiz*4+0x1c],esi
  50a1fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50a1ff:	ins    BYTE PTR es:[edi],dx
  50a200:	rol    al,0x78
  50a203:	sti    
  50a204:	out    0xd,al
  50a206:	sbb    esp,ebx
  50a208:	sub    bh,BYTE PTR [edi-0x2e]
  50a20b:	sahf   
  50a20c:	add    DWORD PTR [edi-0x7d],esp
  50a20f:	arpl   si,bx
  50a211:	bound  ebx,QWORD PTR [edi+0x15]
  50a214:	addr16 push ebp
  50a216:	cld    
  50a217:	push   0xfdac8868
  50a21c:	ins    BYTE PTR es:[edi],dx
  50a21d:	and    edx,eax
  50a21f:	sbb    dl,BYTE PTR [esi+0x20b3d39e]
  50a225:	inc    ecx
  50a226:	loope  0x50a1df
  50a228:	jmp    0x61cd:0x8dc66e63
  50a22f:	or     al,0xe5
  50a231:	and    bl,ah
  50a233:	ror    BYTE PTR [ebx-0x31],0x34
  50a237:	cmp    ch,bh
  50a239:	pop    ebp
  50a23a:	mov    ebx,0x78b2779
  50a23f:	jmp    0x2b06:0x736ad911
  50a246:	out    0x31,al
  50a248:	mov    al,ds:0x38b6aae
  50a24d:	pop    eax
  50a24e:	lock pop ebp
  50a250:	loope  0x50a219
  50a252:	into   
  50a253:	stc    
  50a254:	mov    bh,0xf3
  50a256:	repz retf 0xf3d0
  50a25a:	loop   0x50a2b2
  50a25c:	outs   dx,DWORD PTR ds:[esi]
  50a25d:	popf   
  50a25e:	mov    ch,0xbd
  50a260:	mov    dl,0x76
  50a262:	aad    0x9c
  50a264:	dec    esp
  50a265:	sub    dl,BYTE PTR [esi+0x6673d6ad]
  50a26b:	push   0x3cf0ef84
  50a270:	nop
  50a271:	test   eax,0xd0650421
  50a276:	call   FWORD PTR [ecx]
  50a278:	push   esi
  50a279:	rcl    BYTE PTR [eax],cl
  50a27b:	mov    WORD PTR ds:0x68962316,?
  50a281:	cmp    esp,DWORD PTR [edi-0x39f35142]
  50a287:	int3   
  50a288:	stos   BYTE PTR es:[edi],al
  50a289:	jmp    0x50a2e8
  50a28b:	fsubr  QWORD PTR [esi-0x6a]
  50a28e:	test   BYTE PTR [edi-0x7ffc8694],ch
  50a294:	push   ss
  50a295:	repz jae 0x50a2e5
  50a298:	jne    0x50a21b
  50a29a:	mov    dl,BYTE PTR [edi+0x2cf2db3e]
  50a2a0:	icebp  
  50a2a1:	cdq    
  50a2a2:	mov    eax,ds:0x6209a6a6
  50a2a7:	in     eax,0xe4
  50a2a9:	sbb    ch,BYTE PTR [ebx]
  50a2ab:	aaa    
  50a2ac:	div    ecx
  50a2ae:	push   ss
  50a2af:	cmp    al,0x8f
  50a2b1:	push   es
  50a2b2:	push   eax
  50a2b3:	sbb    eax,0x95f10aae
  50a2b8:	cmp    DWORD PTR [esi+0x2a],esp
  50a2bb:	js     0x50a24c
  50a2bd:	rcl    BYTE PTR [eax],cl
  50a2bf:	ds adc ah,0x87
  50a2c3:	jl     0x50a2b9
  50a2c5:	outs   dx,BYTE PTR ds:[esi]
  50a2c6:	and    DWORD PTR [eax-0x1f],ebx
  50a2c9:	jnp    0x50a325
  50a2cb:	shr    eax,cl
  50a2cd:	adc    eax,0xa797bf3b
  50a2d2:	push   esp
  50a2d3:	push   cs
  50a2d4:	cmp    eax,0xce47455a
  50a2d9:	mov    ebx,0xd10feff8
  50a2de:	lods   eax,DWORD PTR ds:[esi]
  50a2df:	mov    al,0x62
  50a2e1:	sub    ebx,DWORD PTR [ebx]
  50a2e3:	lds    edi,FWORD PTR [eax]
  50a2e5:	mov    ebp,ds
  50a2e7:	mov    esi,0xd5186fae
  50a2ec:	inc    eax
  50a2ed:	jmp    0xe7d4:0x22e3d91b
  50a2f4:	and    al,0xe1
  50a2f6:	ins    DWORD PTR es:[edi],dx
  50a2f7:	ja     0x50a2f6
  50a2f9:	dec    edi
  50a2fa:	push   ecx
  50a2fb:	into   
  50a2fc:	mov    ebx,DWORD PTR [ebx-0x38a417ce]
  50a302:	dec    edi
  50a303:	fistp  QWORD PTR [ebx-0x6949c47b]
  50a309:	dec    edi
  50a30a:	pop    esp
  50a30b:	in     eax,dx
  50a30c:	vminsd xmm3,xmm4,xmm0
  50a310:	sbb    esi,DWORD PTR [edx]
  50a312:	mov    eax,0x92330309
  50a317:	ret    
  50a318:	pop    ecx
  50a319:	jle    0x50a358
  50a31b:	xor    BYTE PTR ds:0x22b41624,ah
  50a321:	dec    eax
  50a322:	out    dx,al
  50a323:	push   0xe2590515
  50a328:	dec    esi
  50a329:	fdivp  st(2),st
  50a32b:	and    BYTE PTR [edx],ch
  50a32d:	adc    ecx,DWORD PTR [ecx]
  50a32f:	cmp    DWORD PTR [ecx],esp
  50a331:	adc    ah,BYTE PTR [ebx+0x76]
  50a334:	enter  0x8d3b,0x11
  50a338:	xor    esi,edx
  50a33a:	stos   DWORD PTR es:[edi],eax
  50a33b:	imul   BYTE PTR [ebp-0x54]
  50a33e:	jecxz  0x50a351
  50a340:	jne    0x50a396
  50a342:	lock sahf 
  50a344:	imul   ebx,DWORD PTR [esi-0x2613f6ea],0xea953a5e
  50a34e:	jns    0x50a385
  50a350:	iret   
  50a351:	gs mov bh,0x73
  50a354:	cmp    DWORD PTR [ecx-0x15],edx
  50a357:	repnz pusha 
  50a359:	mov    BYTE PTR [eax+edi*2+0x20],dh
  50a35d:	add    cl,BYTE PTR [ebx+0x502e91c8]
  50a363:	or     dl,BYTE PTR [ecx+0x4b]
  50a366:	mov    bl,0x5
  50a368:	cmp    eax,0x57319c62
  50a36d:	push   ecx
  50a36e:	push   ecx
  50a36f:	in     al,dx
  50a370:	mov    eax,DWORD PTR [ecx-0x39610ce9]
  50a376:	js     0x50a3bf
  50a378:	ds inc esi
  50a37a:	aaa    
  50a37b:	ror    DWORD PTR [ebx-0x5f4b3240],1
  50a381:	sbb    eax,0xd7cdd721
  50a386:	into   
  50a387:	jne    0x50a3d4
  50a389:	pop    ebp
  50a38a:	fwait
  50a38b:	and    BYTE PTR [ebp+0x58],dh
  50a38e:	xchg   ebx,eax
  50a38f:	inc    ebp
  50a390:	push   0x78
  50a392:	(bad)  
  50a393:	inc    DWORD PTR [ebp+0x1805c4fe]
  50a399:	pop    eax
  50a39a:	ror    BYTE PTR [edi+edi*8],cl
  50a39d:	daa    
  50a39e:	sub    ebx,DWORD PTR [ebp-0x78]
  50a3a1:	mov    bl,BYTE PTR [edx+0x3c5218e2]
  50a3a7:	leave  
  50a3a8:	mov    cl,0xb6
  50a3aa:	cmp    DWORD PTR [edx-0x26],edi
  50a3ad:	sti    
  50a3ae:	jl     0x50a39e
  50a3b0:	mov    cl,0xc7
  50a3b2:	push   ebp
  50a3b3:	and    eax,0x36339d5d
  50a3b8:	jmp    0x50a388
  50a3ba:	leave  
  50a3bb:	add    DWORD PTR [edi-0x6fde60b3],eax
  50a3c1:	xchg   ebp,eax
  50a3c2:	out    0x21,eax
  50a3c4:	outs   dx,BYTE PTR ds:[esi]
  50a3c5:	stos   DWORD PTR es:[edi],eax
  50a3c6:	inc    ebp
  50a3c7:	leave  
  50a3c8:	mov    bl,0x21
  50a3ca:	sub    eax,0x8c48dab6
  50a3cf:	aaa    
  50a3d0:	aaa    
  50a3d1:	push   edx
  50a3d2:	lods   eax,DWORD PTR ds:[esi]
  50a3d3:	lock adc al,0xec
  50a3d6:	daa    
  50a3d7:	leave  
  50a3d8:	mov    cl,0xdc
  50a3da:	jnp    0x50a408
  50a3dc:	fcomp  QWORD PTR [ebp-0x67]
  50a3df:	xor    ch,BYTE PTR ds:0x5dd246cd
  50a3e5:	fisttp WORD PTR [ebx+0x7ffed253]
  50a3eb:	ins    BYTE PTR es:[edi],dx
  50a3ec:	js     0x50a438
  50a3ee:	sbb    al,0x28
  50a3f0:	cmp    ah,BYTE PTR [edx]
  50a3f2:	jo     0x50a417
  50a3f4:	iret   
  50a3f5:	jge    0x50a3f3
  50a3f7:	pop    ss
  50a3f8:	pop    edi
  50a3f9:	div    DWORD PTR [ecx+0x24]
  50a3fc:	int3   
  50a3fd:	cmp    BYTE PTR [edx-0x3b7d185b],bl
  50a403:	out    0x69,al
  50a405:	pop    ecx
  50a406:	push   esp
  50a407:	push   esi
  50a408:	fistp  DWORD PTR [eax+ecx*2+0x4d7ba083]
  50a40f:	pop    edx
  50a410:	xchg   ebp,eax
  50a411:	cld    
  50a412:	add    al,0xab
  50a414:	fsubr  st(5),st
  50a416:	mov    DWORD PTR ss:0x484081b9,esi
  50a41d:	test   esp,ebx
  50a41f:	ret    0xed75
  50a422:	iret   
  50a423:	sbb    esp,ecx
  50a425:	fwait
  50a426:	add    DWORD PTR [edi],esi
  50a428:	in     al,0x97
  50a42a:	cld    
  50a42b:	jno    0x50a414
  50a42d:	mov    ebp,0x860a7941
  50a432:	ds jns 0x50a40b
  50a435:	popf   
  50a436:	lods   al,BYTE PTR ds:[esi]
  50a437:	test   eax,0xe53a6f4
  50a43c:	and    DWORD PTR [edx],esp
  50a43e:	nop
  50a43f:	mov    esi,0xa7b4e67
  50a444:	sahf   
  50a445:	pop    edi
  50a446:	adc    BYTE PTR [esi+0x22],bh
  50a449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50a44a:	clc    
  50a44b:	sbb    DWORD PTR [ebp+0x3e],ebx
  50a44e:	sbb    esi,ebx
  50a450:	popf   
  50a451:	sub    DWORD PTR [esi],esp
  50a453:	jo     0x50a3ed
  50a455:	(bad)  
  50a456:	push   ecx
  50a457:	push   0x7
  50a459:	test   eax,0x84f7210
  50a45e:	leave  
  50a45f:	push   esp
  50a460:	in     eax,dx
  50a461:	add    BYTE PTR [ebx+0x17a9de58],bh
  50a467:	mov    BYTE PTR [ebx+0x5],0x3c
  50a46b:	aam    0x8f
  50a46d:	bound  esp,QWORD PTR [ebx-0x74]
  50a470:	xchg   ecx,eax
  50a471:	cmp    al,0x26
  50a473:	loop   0x50a40e
  50a475:	pop    edx
  50a476:	les    ebp,FWORD PTR [edx-0x4941f480]
  50a47c:	loope  0x50a494
  50a47e:	imul   ebx,DWORD PTR [ebp+0x71],0xffffffc9
  50a482:	fcomp  DWORD PTR [ebp+0x6b28800d]
  50a488:	push   ds
  50a489:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  50a48b:	outs   dx,BYTE PTR ds:[esi]
  50a48c:	ins    BYTE PTR es:[edi],dx
  50a48d:	gs (bad) 
  50a48f:	mov    al,ds:0x45d0b9bc
  50a494:	pop    edx
  50a495:	add    BYTE PTR [eax-0x77892f85],ch
  50a49b:	jmp    0x50a4b7
  50a49d:	pop    es
  50a49e:	fdiv   st(7),st
  50a4a0:	sbb    ebp,DWORD PTR [ecx]
  50a4a2:	loope  0x50a517
  50a4a4:	xchg   ebx,eax
  50a4a5:	jns    0x50a463
  50a4a7:	mov    esp,0xb096c4c8
  50a4ac:	cmp    DWORD PTR [ebp+0x6a36038a],edi
  50a4b2:	fadd   QWORD PTR [esi-0x3e]
  50a4b5:	retf   0xec41
  50a4b8:	add    edx,DWORD PTR [esi]
  50a4ba:	jmp    0x50a52f
  50a4bc:	sub    bl,BYTE PTR [ebx-0x2f]
  50a4bf:	jg     0x50a484
  50a4c1:	inc    ecx
  50a4c2:	mov    dh,0x63
  50a4c4:	pop    ebx
  50a4c5:	add    dh,BYTE PTR [esi+ebp*2]
  50a4c8:	inc    ebp
  50a4c9:	dec    ecx
  50a4ca:	inc    ebx
  50a4cb:	repz (bad) [ecx+0x2f]
  50a4cf:	pop    ss
  50a4d0:	xchg   esp,eax
  50a4d1:	xor    dl,BYTE PTR [edx]
  50a4d3:	lods   eax,DWORD PTR ds:[esi]
  50a4d4:	push   esp
  50a4d5:	fcmovb st,st(0)
  50a4d7:	dec    ecx
  50a4d8:	ficom  DWORD PTR [edi-0x51]
  50a4db:	imul   ebp,ebx,0xffffffda
  50a4de:	pop    ebx
  50a4df:	and    ch,BYTE PTR [edx+0x6ede012]
  50a4e5:	xchg   DWORD PTR [esi+0x23],esi
  50a4e8:	and    BYTE PTR [esi+0x45],al
  50a4eb:	add    DWORD PTR [eax+eiz*1-0x634f95a3],edx
  50a4f2:	cmp    ebx,DWORD PTR [ebx+0xa]
  50a4f5:	cmc    
  50a4f6:	xchg   edi,eax
  50a4f7:	sti    
  50a4f8:	jg     0x50a51c
  50a4fa:	clc    
  50a4fb:	jg     0x50a4a1
  50a4fd:	mov    bh,0xb8
  50a4ff:	and    al,0xae
  50a501:	rol    BYTE PTR [eax+0x3c],cl
  50a504:	inc    ebx
  50a505:	mov    al,ds:0x95086565
  50a50a:	pop    ds
  50a50b:	fisubr DWORD PTR [ecx+0x1fd1ce10]
  50a511:	fisttp QWORD PTR [eax+0x44]
  50a514:	mov    edi,0xc84c831a
  50a519:	jmp    0x1a99:0xbaa6d70b
  50a520:	sti    
  50a521:	pop    ebx
  50a522:	imul   esi,DWORD PTR [edx],0x8612e05a
  50a528:	ins    DWORD PTR es:[edi],dx
  50a529:	enter  0x6b4b,0xc7
  50a52d:	mov    dl,BYTE PTR [esi]
  50a52f:	loope  0x50a530
  50a531:	ss add al,0x92
  50a534:	fcmovb st,st(1)
  50a536:	add    BYTE PTR [ecx-0x45fe3e76],bl
  50a53c:	int3   
  50a53d:	and    bh,al
  50a53f:	pop    edi
  50a540:	pop    edx
  50a541:	pop    ebx
  50a542:	outs   dx,BYTE PTR ds:[esi]
  50a543:	push   ecx
  50a544:	(bad)  
  50a545:	jmp    0x616c:0xfb1496c5
  50a54c:	test   eax,0x2b6850ec
  50a551:	js     0x50a555
  50a553:	in     eax,dx
  50a554:	(bad)  
  50a555:	into   
  50a556:	sar    BYTE PTR [edx-0x5f986298],1
  50a55c:	cld    
  50a55d:	clc    
  50a55e:	cmp    BYTE PTR ds:[eax-0x71],cl
  50a562:	mov    edx,0x9a269d64
  50a567:	push   esi
  50a568:	jle    0x50a550
  50a56a:	sbb    ch,BYTE PTR [esi+0x65199b06]
  50a570:	push   ebx
  50a571:	hlt    
  50a572:	arpl   di,bx
  50a574:	cmp    BYTE PTR [ecx],dl
  50a576:	mul    DWORD PTR [esi]
  50a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50a579:	(bad)  
  50a57a:	sub    dl,BYTE PTR [ebp-0x118b1f80]
  50a580:	lock lods al,BYTE PTR ds:[esi]
  50a582:	loop   0x50a580
  50a584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50a585:	mov    WORD PTR [edx],fs
  50a587:	mov    cl,0xf0
  50a589:	retf   0x5c00
  50a58c:	cld    
  50a58d:	scas   eax,DWORD PTR es:[edi]
  50a58e:	in     al,0x38
  50a590:	fadd   QWORD PTR [esp+ecx*1]
  50a593:	mov    ?,WORD PTR [eax+edx*8-0x41]
  50a597:	js     0x50a5af
  50a599:	push   edx
  50a59a:	fist   WORD PTR [ecx-0x16aa6cef]
  50a5a1:	(bad)  
  50a5a2:	mov    edx,0xc13c5541
  50a5a7:	adc    dl,0xe8
  50a5aa:	push   eax
  50a5ab:	jno    0x50a61c
  50a5ad:	and    al,0xb2
  50a5af:	mov    dh,al
  50a5b1:	and    esi,ebp
  50a5b3:	push   ss
  50a5b4:	in     eax,0x93
  50a5b6:	cmp    BYTE PTR [edi+0x4214ce5f],bh
  50a5bc:	in     al,dx
  50a5bd:	sub    ebp,eax
  50a5bf:	adc    ch,cl
  50a5c1:	daa    
  50a5c2:	or     ebp,DWORD PTR [ebx+0x1951b12c]
  50a5c8:	dec    ecx
  50a5c9:	(bad)  
  50a5ca:	test   al,0xb8
  50a5cc:	push   0x6a089625
  50a5d1:	(bad)  
  50a5d3:	mov    edx,0x1deb7ef1
  50a5d8:	xor    al,0x13
  50a5da:	mov    al,0xd1
  50a5dc:	sub    eax,0x61dc0450
  50a5e1:	mov    ebp,0x84c371aa
  50a5e6:	jg     0x50a625
  50a5e8:	push   0xffffffdd
  50a5ea:	cmc    
  50a5eb:	loop   0x50a642
  50a5ed:	xor    ebp,DWORD PTR ds:0x9f56b6e7
  50a5f3:	inc    eax
  50a5f4:	mov    bl,0xc
  50a5f6:	rol    DWORD PTR [ebp+eiz*4-0x1a],0x9c
  50a5fb:	pop    es
  50a5fc:	push   ss
  50a5fd:	repnz sbb cl,cl
  50a600:	cmp    BYTE PTR [esi-0x7804a22b],dl
  50a606:	mov    eax,ebx
  50a608:	hlt    
  50a609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50a60a:	fiadd  DWORD PTR [ebx]
  50a60c:	mov    ds:0xa5108271,al
  50a611:	adc    eax,0xc4806322
  50a616:	add    al,0x7c
  50a618:	lds    ebx,FWORD PTR [edi]
  50a61a:	idiv   DWORD PTR ds:0xd3586042
  50a620:	inc    esi
  50a621:	inc    eax
  50a622:	and    al,0x20
  50a625:	pop    esi
  50a626:	lods   al,BYTE PTR ds:[esi]
  50a627:	enter  0x88ca,0xb3
  50a62b:	push   ebx
  50a62c:	adc    BYTE PTR [ebx-0x5415d145],0xab
  50a633:	ja     0x50a606
  50a635:	xchg   esp,eax
  50a636:	sahf   
  50a637:	cdq    
  50a638:	mov    eax,ds:0xccfa93c9
  50a63d:	adc    ch,BYTE PTR [ecx+ebx*8]
  50a640:	ret    
  50a641:	adc    ecx,DWORD PTR [esi]
  50a643:	je     0x50a5cb
  50a645:	xor    ch,BYTE PTR [ecx-0x6c]
  50a648:	arpl   cx,bx
  50a64a:	ds call 0x2c60:0x51b6139e
  50a652:	xchg   esi,eax
  50a653:	mov    dh,BYTE PTR [ebx]
  50a655:	adc    eax,0xb8475906
  50a65a:	sti    
  50a65b:	into   
  50a65c:	jle    0x50a5fb
  50a65e:	nop
  50a65f:	pop    ss
  50a660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50a661:	jns    0x50a6cf
  50a663:	scas   al,BYTE PTR es:[edi]
  50a664:	mov    eax,ds:0x2a9e37bb
  50a669:	ds es div ah
  50a66d:	sbb    DWORD PTR [eax],0xbb085a01
  50a673:	xor    edx,DWORD PTR [ecx-0x22da9710]
  50a679:	push   edx
  50a67a:	mov    bh,0xd4
  50a67c:	jmp    0x50a6c3
  50a67e:	push   DWORD PTR [ecx+0x7a2d7011]
  50a684:	retf   0xe945
  50a687:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50a688:	mov    al,ds:0x287c9125
  50a68d:	cs sbb al,0x3a
  50a690:	push   esi
  50a691:	repz add eax,0xbb2ccfd6
  50a697:	jb     0x50a6c8
  50a699:	in     al,dx
  50a69a:	repz iret 
  50a69c:	jmp    0x50a62f
  50a69e:	mov    bh,0xe0
  50a6a0:	dec    esp
  50a6a1:	dec    ebp
  50a6a2:	int3   
  50a6a3:	mov    esp,0xd912a06e
  50a6a8:	xor    DWORD PTR [eax],ebx
  50a6aa:	fmul   QWORD PTR [ebx+0x7dd4a25f]
  50a6b0:	mov    ah,0x4e
  50a6b2:	inc    ebp
  50a6b3:	xor    DWORD PTR [edi-0x7c],esi
  50a6b6:	xlat   BYTE PTR ds:[ebx]
  50a6b7:	pusha  
  50a6b8:	xchg   esp,eax
  50a6b9:	in     eax,0xd3
  50a6bb:	ficom  DWORD PTR [edx-0x57]
  50a6be:	push   esi
  50a6bf:	popa   
  50a6c0:	pop    esi
  50a6c1:	mov    ebx,?
  50a6c3:	js     0x50a699
  50a6c5:	sbb    eax,0xf43d39c8
  50a6ca:	and    BYTE PTR [ebp-0x634f2abf],bh
  50a6d0:	jmp    FWORD PTR [ebp+ebx*2-0x72]
  50a6d4:	retf   
  50a6d5:	sub    al,0xdd
  50a6d7:	push   eax
  50a6d8:	push   esp
  50a6d9:	pop    ecx
  50a6da:	dec    edi
  50a6db:	shr    DWORD PTR [eax-0x43],0x8f
  50a6df:	push   esi
  50a6e0:	nop
  50a6e1:	ficomp DWORD PTR [edi]
  50a6e3:	(bad)  
  50a6e4:	(bad)  
  50a6e5:	and    cl,BYTE PTR [ebx+0x8]
  50a6e8:	xor    dh,BYTE PTR [ecx+0x6f4beabb]
  50a6ee:	sbb    al,0xa2
  50a6f0:	jns    0x50a6eb
  50a6f2:	mov    dh,0x5f
  50a6f4:	mov    al,0x6f
  50a6f6:	push   edx
  50a6f7:	(bad)  
  50a6f8:	shr    BYTE PTR ds:0xb2845957,0x6
  50a6ff:	sbb    eax,0x87db2949
  50a704:	dec    edi
  50a705:	fcmovbe st,st(3)
  50a707:	jl     0x50a70e
  50a709:	mov    esp,0xd8a613ce
  50a70e:	ins    BYTE PTR es:[edi],dx
  50a70f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50a710:	shl    BYTE PTR [edx+0x14cc8cad],1
  50a716:	mov    ah,0x85
  50a718:	cmc    
  50a719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50a71a:	add    dl,BYTE PTR [eax+0x5e834377]
  50a720:	jbe    0x50a6c7
  50a722:	pop    ds
  50a723:	jnp    0x50a77c
  50a725:	jns    0x50a6d6
  50a727:	or     BYTE PTR [esi-0x44d907a7],ah
  50a72d:	cld    
  50a72e:	sub    DWORD PTR [ebx+eax*8+0x4e2bb600],eax
  50a735:	cld    
  50a736:	mov    bh,0xc9
  50a738:	popf   
  50a739:	out    dx,al
  50a73a:	sti    
  50a73b:	push   ebx
  50a73c:	sbb    eax,0x7bfa2f15
  50a741:	ds mov ch,0x75
  50a744:	sbb    esi,ebp
  50a746:	leave  
  50a747:	(bad)  
  50a748:	(bad)  
  50a749:	sub    ebp,ebp
  50a74b:	jmp    0x50a78a
  50a74d:	sub    al,0x6e
  50a74f:	mov    ecx,0x3b2c05e0
  50a754:	jge    0x50a6f0
  50a756:	xor    edi,edx
  50a758:	xchg   ebx,eax
  50a759:	imul   esi,DWORD PTR [ebx],0xfffffff6
  50a75c:	jns    0x50a700
  50a75e:	aaa    
  50a75f:	sub    eax,0x5b3f695a
  50a764:	push   ebx
  50a765:	push   ds
  50a766:	cmp    DWORD PTR [ebp-0x58740133],ecx
  50a76c:	jmp    0x50a7ea
  50a76e:	or     al,0x8f
  50a770:	mov    bl,ch
  50a772:	xchg   ebp,eax
  50a773:	add    BYTE PTR [esi+0x2],bh
  50a776:	enter  0xfd0b,0x48
  50a77a:	test   al,0x48
  50a77c:	sub    DWORD PTR [esi+0x7e18c0f],edi
  50a782:	test   edx,0x6859960f
  50a788:	jmp    0x284bc0d3
  50a78d:	pop    ebx
  50a78e:	lahf   
  50a78f:	xor    al,0x65
  50a791:	shr    eax,1
  50a793:	pop    es
  50a794:	stos   BYTE PTR es:[edi],al
  50a795:	fisttp DWORD PTR [esi+0x2]
  50a798:	cdq    
  50a799:	and    al,0xf4
  50a79b:	or     al,0xab
  50a79d:	inc    ecx
  50a79e:	xlat   BYTE PTR ds:[ebx]
  50a79f:	test   BYTE PTR [edi+ecx*8-0x14],ch
  50a7a3:	or     eax,0x443ded1d
  50a7a8:	sub    eax,0x55f6090e
  50a7ad:	cmp    edx,DWORD PTR [esi+0x55]
  50a7b0:	scas   al,BYTE PTR es:[edi]
  50a7b1:	aam    0x25
  50a7b3:	push   ebp
  50a7b4:	loope  0x50a7d4
  50a7b6:	leave  
  50a7b7:	or     al,al
  50a7b9:	push   cs
  50a7ba:	out    dx,eax
  50a7bb:	daa    
  50a7bc:	stc    
  50a7bd:	outs   dx,DWORD PTR ds:[esi]
  50a7be:	lods   al,BYTE PTR ds:[esi]
  50a7bf:	in     al,0xb9
  50a7c1:	(bad)  
  50a7c2:	scas   al,BYTE PTR es:[edi]
  50a7c3:	mov    dl,0xe7
  50a7c5:	and    eax,esi
  50a7c7:	repz loop 0x50a816
  50a7ca:	dec    ebp
  50a7cb:	aas    
  50a7cc:	pop    edi
  50a7cd:	jmp    0x50a76e
  50a7cf:	xor    eax,0xba780071
  50a7d4:	or     eax,0x57415b92
  50a7d9:	mov    ch,0x84
  50a7db:	outs   dx,BYTE PTR ds:[esi]
  50a7dc:	sbb    ah,BYTE PTR [eax-0x19]
  50a7df:	xlat   BYTE PTR ds:[ebx]
  50a7e0:	jo     0x50a7af
  50a7e2:	stos   DWORD PTR es:[edi],eax
  50a7e3:	mov    ah,0x6e
  50a7e5:	pushf  
  50a7e6:	or     DWORD PTR [edi],edi
  50a7e8:	retf   0xcc2d
  50a7eb:	mov    bh,0xb2
  50a7ed:	mov    al,0xbf
  50a7ef:	ror    BYTE PTR [ebp-0x261e7b0],cl
  50a7f5:	addr16 push ds
  50a7f7:	mov    ebx,0xf34ecea4
  50a7fc:	mov    cl,0x23
  50a7fe:	cmp    al,BYTE PTR [ecx]
  50a800:	mov    dh,0x19
  50a802:	leave  
  50a803:	aad    0xee
  50a805:	pop    ss
  50a806:	pop    ss
  50a807:	(bad)  
  50a809:	cmp    eax,edi
  50a80b:	add    eax,0xe2c5f8b9
  50a810:	pop    ss
  50a811:	jle    0x50a821
  50a813:	inc    edi
  50a814:	repnz pop edx
  50a816:	push   eax
  50a817:	mov    dl,0xa1
  50a819:	add    al,0x4a
  50a81b:	sub    BYTE PTR [ebx+eax*2],bl
  50a81e:	bound  ebp,QWORD PTR [edx+0x67092778]
  50a824:	sub    al,0xe
  50a826:	scas   eax,DWORD PTR es:[edi]
  50a827:	sub    dl,ch
  50a829:	sti    
  50a82a:	cmpxchg BYTE PTR [esi+0x169ab2e9],dl
  50a831:	popf   
  50a832:	test   BYTE PTR [ebx+ebx*8-0x1e634a48],0xc
  50a83a:	pop    ss
  50a83b:	mov    DWORD PTR [edi],eax
  50a83d:	mov    edx,DWORD PTR ss:[ebx]
  50a840:	sub    al,0xed
  50a842:	adc    eax,0xa4b37b7e
  50a847:	leave  
  50a848:	pop    edx
  50a849:	push   ss
  50a84a:	pop    eax
  50a84b:	inc    edi
  50a84c:	repnz int 0x1e
  50a84f:	bound  ecx,QWORD PTR es:[edx+0x1c]
  50a853:	cwde   
  50a854:	xor    esi,DWORD PTR [esi+0x400e8217]
  50a85a:	adc    bh,dh
  50a85c:	fs ja  0x50a81f
  50a85f:	jno    0x50a8a7
  50a861:	loopne 0x50a874
  50a863:	pop    ebx
  50a864:	ret    
  50a865:	pop    ebp
  50a866:	mov    dl,0xa9
  50a868:	ds xor ch,BYTE PTR cs:[esi+0x3e]
  50a86d:	arpl   si,cx
  50a86f:	mov    dh,0x98
  50a871:	mov    ebx,0x476060c2
  50a876:	imul   ecx,esi,0x741dfdb0
  50a87c:	cmp    DWORD PTR [ebp+eiz*2+0xf],eax
  50a880:	aaa    
  50a881:	scas   al,BYTE PTR es:[edi]
  50a882:	fs loope 0x50a83a
  50a885:	push   edi
  50a886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50a887:	xor    BYTE PTR [esi+0x2f],0xf5
  50a88b:	mov    ch,0xd4
  50a88d:	fidiv  DWORD PTR [eax]
  50a88f:	adc    eax,0xe3f78d54
  50a894:	in     al,0x57
  50a896:	mov    ch,0xad
  50a898:	dec    edi
  50a899:	mov    dl,0xc7
  50a89b:	inc    ebx
  50a89c:	cmp    al,0x1b
  50a89e:	popa   
  50a89f:	clc    
  50a8a0:	clc    
  50a8a1:	shr    BYTE PTR [esp+ebx*1],0x40
  50a8a5:	cmp    edx,DWORD PTR [esi-0x7d10d03d]
  50a8ab:	dec    DWORD PTR ds:0xc0015a4c
  50a8b1:	cmc    
  50a8b2:	rcr    ecx,cl
  50a8b4:	mov    ch,0x80
  50a8b6:	cdq    
  50a8b7:	mov    ah,0x80
  50a8b9:	xchg   ebx,eax
  50a8ba:	outs   dx,DWORD PTR ds:[esi]
  50a8bb:	push   0xbfcf8a5b
  50a8c0:	cmp    DWORD PTR [ebx+ebx*8],0x5fcc999d
  50a8c7:	inc    esp
  50a8c8:	pop    esp
  50a8c9:	fld    st(2)
  50a8cb:	(bad)  
  50a8cc:	in     eax,0xaf
  50a8ce:	fisub  DWORD PTR [edx-0x29]
  50a8d1:	repz mov ebp,0x359e42c2
  50a8d7:	das    
  50a8d8:	xor    BYTE PTR [eax+0x41],al
  50a8db:	inc    edi
  50a8dc:	inc    edi
  50a8dd:	into   
  50a8de:	pop    ds
  50a8df:	rol    ecx,0x84
  50a8e2:	out    0xce,al
  50a8e4:	outs   dx,DWORD PTR ds:[esi]
  50a8e5:	push   0x71eb9f9
  50a8ea:	dec    ecx
  50a8eb:	call   0x3bb3cddf
  50a8f0:	mov    edx,0x200c4f5d
  50a8f5:	push   ss
  50a8f6:	push   cs
  50a8f7:	jl     0x50a888
  50a8f9:	pop    eax
  50a8fa:	addr16 jb 0x50a91b
  50a8fd:	gs mov cl,0x5
  50a900:	adc    eax,0x2aa4ad5c
  50a905:	cmp    ecx,ebx
  50a907:	xor    edi,DWORD PTR [ebp-0x7973aeda]
  50a90d:	cld    
  50a90e:	push   edi
  50a90f:	pop    edx
  50a910:	push   edx
  50a911:	mov    esi,edi
  50a913:	cmp    eax,eax
  50a915:	adc    al,0xbe
  50a917:	ja     0x50a89f
  50a919:	nop
  50a91a:	(bad)  
  50a91b:	sbb    dh,BYTE PTR [esi+0xf]
  50a91e:	lock mov bh,0x8e
  50a921:	cmp    ah,cl
  50a923:	jecxz  0x50a95d
  50a925:	bt     DWORD PTR [ecx+0x2123d88b],ecx
  50a92c:	out    0xdb,al
  50a92e:	or     BYTE PTR [edx],cl
  50a930:	jne    0x50a95a
  50a932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50a933:	mov    ds:0xa6ca72d6,eax
  50a938:	dec    edi
  50a939:	mov    edx,gs
  50a93b:	and    ecx,DWORD PTR [eax+0x25bcef11]
  50a941:	fsub   QWORD PTR [eax]
  50a943:	mov    edi,0x9bbc512e
  50a948:	add    bl,dl
  50a94a:	retf   
  50a94b:	imul   ebx,DWORD PTR [edi+0x69],0x3cc46500
  50a952:	adc    al,0xe8
  50a954:	cmp    eax,0x20899a5e
  50a959:	jne    0x50a9da
  50a95b:	out    dx,al
  50a95c:	lea    esp,[ecx]
  50a95e:	jle    0x50a927
  50a960:	adc    al,0x3f
  50a962:	fnstsw WORD PTR [ecx+0x9]
  50a965:	mov    DWORD PTR [esi],ebx
  50a967:	pusha  
  50a968:	(bad)  
  50a969:	inc    cl
  50a96b:	ret    
  50a96c:	and    ecx,0xb8659cb1
  50a972:	shl    BYTE PTR [eax-0x6c291a05],0x64
  50a979:	cmp    eax,0xd5708928
  50a97e:	rol    DWORD PTR [ebp+0x345e3204],cl
  50a984:	jno    0x50a9d5
  50a986:	jae    0x50a95b
  50a988:	push   0xdcb0291a
  50a98d:	mov    dh,0xa8
  50a98f:	ror    DWORD PTR [eax],1
  50a991:	ror    BYTE PTR [ebx],1
  50a993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50a994:	test   DWORD PTR [ebp-0x1f3f545d],0x432d381b
  50a99e:	cmp    bh,BYTE PTR ds:0x5450a7af
  50a9a4:	lea    edi,[ecx]
  50a9a6:	gs jg  0x50a982
  50a9a9:	outs   dx,BYTE PTR ds:[esi]
  50a9aa:	pushf  
  50a9ab:	push   esp
  50a9ac:	ins    BYTE PTR es:[edi],dx
  50a9ad:	call   0x4cc018a7
  50a9b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50a9b3:	add    edi,DWORD PTR [esi]
  50a9b5:	lods   eax,DWORD PTR ds:[esi]
  50a9b6:	ds mov eax,0xaa41320c
  50a9bc:	jno    0x50aa20
  50a9be:	(bad)  
  50a9c0:	das    
  50a9c1:	(bad)  
  50a9c2:	pop    edx
  50a9c3:	xor    eax,0x49fdbacb
  50a9c8:	inc    eax
  50a9c9:	mov    esp,0x850c43b8
  50a9ce:	xor    BYTE PTR [eax-0x33e18c03],bl
  50a9d4:	pop    es
  50a9d5:	cmp    edx,eax
  50a9d7:	add    DWORD PTR [esi+0x5],0xfffffff6
  50a9db:	or     al,0x2e
  50a9dd:	jno    0x50a9ff
  50a9df:	in     eax,0xfe
  50a9e1:	adc    al,0xf5
  50a9e3:	out    0xcd,al
  50a9e5:	mov    ?,edx
  50a9e7:	iret   
  50a9e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50a9e9:	xlat   BYTE PTR ds:[ebx]
  50a9ea:	or     bl,dh
  50a9ec:	(bad)  
  50a9ed:	fwait
  50a9ee:	mov    ah,0x1c
  50a9f0:	mov    cl,0x3e
  50a9f2:	cs or  edx,0x10c01e7c
  50a9f9:	push   esp
  50a9fa:	xchg   edx,eax
  50a9fb:	push   0x48adb54
  50aa00:	(bad)  
  50aa01:	sbb    BYTE PTR [edx+0x3e],ch
  50aa04:	imul   edx,DWORD PTR [ecx+0x734b7736],0x2e2ad837
  50aa0e:	lock sar DWORD PTR [esi],0x4c
  50aa12:	jne    0x50a9b0
  50aa14:	scas   al,BYTE PTR es:[edi]
  50aa15:	jl     0x50a9fa
  50aa17:	test   al,0x5f
  50aa19:	jg     0x50a9e1
  50aa1b:	push   0x24
  50aa1d:	fild   DWORD PTR [ecx]
  50aa1f:	push   0x53
  50aa21:	jo     0x50a9c4
  50aa23:	mov    bh,0x5e
  50aa25:	fisub  DWORD PTR [ecx-0xcb69e5]
  50aa2b:	jne    0x50aa56
  50aa2d:	cmp    DWORD PTR [eax+0x79],edi
  50aa30:	or     al,0xf2
  50aa32:	push   edi
  50aa33:	scas   eax,DWORD PTR es:[edi]
  50aa34:	adc    eax,0xa4302f38
  50aa39:	mov    esi,0x8e00ca1f
  50aa3e:	sar    BYTE PTR [esi-0x399cdf31],1
  50aa44:	mov    esp,0xe93bbfa8
  50aa49:	outs   dx,DWORD PTR ds:[esi]
  50aa4a:	pop    ds
  50aa4b:	inc    ebx
  50aa4c:	add    edx,DWORD PTR [ecx]
  50aa4e:	cs pop eax
  50aa50:	fsubr  QWORD PTR [ebp+0x4]
  50aa53:	dec    esi
  50aa54:	mov    esi,0x907281f8
  50aa59:	inc    edi
  50aa5a:	cmp    al,BYTE PTR cs:[esi]
  50aa5d:	arpl   bx,sp
  50aa5f:	lahf   
  50aa60:	or     eax,0xf84649f5
  50aa65:	xlat   BYTE PTR ds:[ebx]
  50aa66:	icebp  
  50aa67:	mov    esi,0x5ce99cb8
  50aa6c:	mov    ch,0x7f
  50aa6e:	retf   0x1798
  50aa71:	sbb    dh,dl
  50aa73:	pop    ss
  50aa74:	jo     0x50aa66
  50aa76:	mov    ah,0x1
  50aa78:	fdivr  DWORD PTR [ecx+0x78]
  50aa7b:	fld    QWORD PTR [ecx+0x7e]
  50aa7e:	or     dh,BYTE PTR [ebp+eiz*1+0x57]
  50aa82:	out    0x30,eax
  50aa84:	push   eax
  50aa85:	repnz outs dx,BYTE PTR ds:[esi]
  50aa87:	repnz loope 0x50aa8f
  50aa8a:	or     ecx,edx
  50aa8c:	sbb    BYTE PTR [edi],bl
  50aa8e:	popf   
  50aa8f:	mov    ebp,0x77ffc8da
  50aa94:	pop    ecx
  50aa95:	(bad)  
  50aa96:	jl     0x50aa27
  50aa98:	test   ebp,0xd7218b62
  50aa9e:	xchg   ecx,eax
  50aa9f:	push   esp
  50aaa0:	clc    
  50aaa1:	inc    esi
  50aaa2:	mov    al,ds:0x800a9ff7
  50aaa7:	adc    dl,BYTE PTR [edx-0x2fd3d04b]
  50aaad:	imul   ebp,DWORD PTR [edx],0x832e809e
  50aab3:	adc    BYTE PTR [edi+ebp*1-0x1c79dcb1],ah
  50aaba:	sbb    BYTE PTR [esi+0x735959fc],bl
  50aac0:	adc    ebp,eax
  50aac2:	or     al,0xd1
  50aac4:	xchg   esp,eax
  50aac5:	sbb    eax,0x7bdd9320
  50aaca:	cwde   
  50aacb:	stc    
  50aacc:	enter  0x28a8,0x2f
  50aad0:	aad    0x91
  50aad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50aad3:	fidiv  DWORD PTR [ebx+0x5dce149]
  50aad9:	jg     0x50aab9
  50aadb:	push   0x1d
  50aadd:	mov    ebx,0x898a4d12
  50aae2:	sub    BYTE PTR ds:0xac493a03,ah
  50aae8:	adc    bh,bh
  50aaea:	js     0x50aa8d
  50aaec:	xor    bh,cl
  50aaee:	adc    cl,BYTE PTR [edx+0x2bf5216]
  50aaf4:	jbe    0x50aaa1
  50aaf6:	hlt    
  50aaf7:	and    cl,BYTE PTR [edi-0x76]
  50aafa:	repz ds in eax,dx
  50aafd:	mov    bl,0x74
  50aaff:	shl    DWORD PTR [ebp+0x7],cl
  50ab02:	(bad)  
  50ab04:	fiadd  WORD PTR [edi-0x5a]
  50ab07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ab08:	or     eax,0x5a65967b
  50ab0d:	in     al,dx
  50ab0e:	sub    ah,BYTE PTR [edi+esi*8-0x7a9b30db]
  50ab15:	fmul   QWORD PTR [edx-0x4992d2a]
  50ab1b:	add    al,0xc0
  50ab1d:	xor    al,0xd
  50ab1f:	dec    ecx
  50ab20:	pop    edi
  50ab21:	out    dx,eax
  50ab22:	xchg   ebp,eax
  50ab23:	and    BYTE PTR [ecx],ch
  50ab25:	or     ecx,DWORD PTR [eax-0x14]
  50ab28:	pop    esi
  50ab29:	les    edx,FWORD PTR [edx+0x26]
  50ab2c:	fadd   QWORD PTR [ecx]
  50ab2e:	outs   dx,BYTE PTR ds:[esi]
  50ab2f:	xor    eax,0xdb31eaf8
  50ab34:	or     cl,BYTE PTR [esi]
  50ab36:	sbb    BYTE PTR [edi+0x40663994],dl
  50ab3c:	push   cs
  50ab3d:	sub    BYTE PTR [ecx+0x0],dh
  50ab40:	mov    ds:0x55982216,al
  50ab45:	shl    cl,0x0
  50ab48:	out    0xdc,al
  50ab4a:	lahf   
  50ab4b:	pop    ds
  50ab4c:	sub    al,BYTE PTR [ebx]
  50ab4e:	mov    dh,0x7d
  50ab50:	mov    al,ds:0x680c346d
  50ab55:	or     DWORD PTR [esi+0x74a868f],0x6edfa658
  50ab5f:	sbb    DWORD PTR [eax],ebp
  50ab61:	push   0x150f2f4f
  50ab66:	rcl    BYTE PTR [ebx],cl
  50ab68:	mov    ch,0xf8
  50ab6a:	cmp    cl,BYTE PTR [ebp-0x47b1110a]
  50ab70:	out    0x10,eax
  50ab72:	(bad)
  50ab75:	xchg   edi,eax
  50ab76:	mov    ebx,0x645cd31e
  50ab7b:	cdq    
  50ab7c:	adc    BYTE PTR ds:0xa3b97260,0x5b
  50ab83:	jl     0x50ab54
  50ab85:	push   ebx
  50ab86:	inc    edx
  50ab87:	or     eax,0xa8e24cd5
  50ab8c:	inc    eax
  50ab8d:	adc    al,0x23
  50ab8f:	xor    BYTE PTR [ecx],cl
  50ab91:	loopne 0x50ab1c
  50ab93:	(bad)  
  50ab94:	nop
  50ab95:	fild   QWORD PTR gs:[edx-0xf4759f1]
  50ab9c:	in     eax,dx
  50ab9d:	mov    al,ds:0x446e1c8f
  50aba2:	pop    ecx
  50aba3:	sbb    eax,0x602a3047
  50aba8:	or     eax,0x68d3a6cd
  50abad:	jle    0x50ac13
  50abaf:	int3   
  50abb0:	xchg   BYTE PTR [ebp+0x8],ah
  50abb3:	fnsave [edx-0x3bf4a2d1]
  50abb9:	push   0x51692010
  50abbe:	adc    bh,bh
  50abc0:	inc    eax
  50abc1:	retf   0xa372
  50abc4:	and    eax,0xc4d34411
  50abc9:	sbb    al,0x5
  50abcb:	retf   0x66c9
  50abce:	in     al,dx
  50abcf:	cld    
  50abd0:	mov    bl,0x71
  50abd2:	xor    esp,DWORD PTR [edi-0x5c]
  50abd5:	mov    eax,ds:0x2ab12d0a
  50abda:	repnz and eax,0x701e530c
  50abe0:	pop    edi
  50abe1:	leave  
  50abe2:	sbb    DWORD PTR [ebx],eax
  50abe4:	cmp    ebp,0x6e906c23
  50abea:	mov    edi,0x12d4196b
  50abef:	(bad)  
  50abf0:	in     al,0x65
  50abf2:	gs jmp 0x50abdb
  50abf5:	jno    0x50ab78
  50abf7:	nop
  50abf8:	(bad)  
  50abfa:	jp     0x50ac60
  50abfc:	es test eax,0x8e08a990
  50ac02:	fcomp  QWORD PTR [ecx+0x1b558265]
  50ac08:	push   cs
  50ac09:	sub    al,0x50
  50ac0b:	rol    BYTE PTR [esi-0x4ac7db76],0x69
  50ac12:	adc    esi,DWORD PTR [ebx]
  50ac14:	data16 js 0x50ac8c
  50ac17:	shl    cl,0xd9
  50ac1a:	in     eax,dx
  50ac1b:	and    al,0x9e
  50ac1d:	leave  
  50ac1e:	adc    BYTE PTR [ebx+0x77],bl
  50ac21:	mov    al,ds:0xda6d161c
  50ac26:	xchg   ecx,eax
  50ac27:	cwde   
  50ac28:	add    al,0xa3
  50ac2a:	out    0xc1,al
  50ac2c:	ficomp DWORD PTR [ebp-0x411b6bc3]
  50ac32:	mov    bh,0x6b
  50ac34:	jo     0x50ac2b
  50ac36:	les    ecx,FWORD PTR [edi+0x2f13a2d4]
  50ac3c:	mov    ebx,DWORD PTR [esi+0x2d]
  50ac3f:	jno    0x50ac97
  50ac41:	sub    BYTE PTR [edx-0x40],0x64
  50ac45:	imul   eax,DWORD PTR [edi+ebp*2+0x43],0xbf1ca245
  50ac4d:	adc    eax,0xea3eb159
  50ac52:	pop    eax
  50ac53:	push   ebp
  50ac54:	xchg   BYTE PTR [ebx+0x56],bl
  50ac57:	ret    0xc9d4
  50ac5a:	push   edi
  50ac5b:	je     0x50aca0
  50ac5d:	inc    eax
  50ac5e:	shl    cl,1
  50ac60:	cli    
  50ac61:	sbb    DWORD PTR [edi-0x3c],esp
  50ac64:	inc    esp
  50ac65:	push   esi
  50ac66:	rcl    DWORD PTR [ecx-0x357fa57c],cl
  50ac6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ac6d:	xor    al,0x4
  50ac6f:	jle    0x50ac2e
  50ac71:	pop    esi
  50ac72:	xor    eax,0xc666639a
  50ac78:	pop    ebx
  50ac79:	xchg   DWORD PTR [ebx],eax
  50ac7b:	sub    BYTE PTR [eax-0x9],ah
  50ac7e:	or     eax,0xd73fcc26
  50ac83:	cmp    DWORD PTR [ebx],ebx
  50ac85:	adc    al,bh
  50ac87:	pop    edi
  50ac88:	jecxz  0x50aceb
  50ac8a:	fist   WORD PTR [ebp-0x5c]
  50ac8d:	in     eax,0x2d
  50ac8f:	enter  0x776,0x26
  50ac93:	mov    edx,DWORD PTR [edi]
  50ac95:	les    eax,FWORD PTR [esi-0x4]
  50ac98:	out    dx,eax
  50ac99:	or     DWORD PTR [ebx-0x2e],0x5531a388
  50aca0:	cmp    eax,0x480bcdf8
  50aca5:	mov    bh,0xbd
  50aca7:	sub    al,0x4d
  50aca9:	lahf   
  50acaa:	xor    al,0xa7
  50acac:	mov    al,0x20
  50acae:	push   eax
  50acaf:	sahf   
  50acb0:	mov    ch,0xd2
  50acb2:	in     al,dx
  50acb3:	stos   BYTE PTR es:[edi],al
  50acb4:	shl    esi,1
  50acb6:	(bad)  
  50acb8:	jmp    esi
  50acba:	aas    
  50acbb:	mov    al,0xd6
  50acbd:	add    al,0xd1
  50acbf:	int3   
  50acc0:	into   
  50acc1:	enter  0x9995,0x78
  50acc5:	jmp    0x4ce4:0xa96aea45
  50accc:	cli    
  50accd:	dec    eax
  50acce:	dec    edx
  50accf:	push   cs
  50acd0:	cmp    BYTE PTR [ecx-0x73],bh
  50acd3:	out    0x3a,eax
  50acd5:	test   DWORD PTR [ecx+0x4e],edx
  50acd8:	sub    ebx,edi
  50acda:	or     DWORD PTR [ecx+0x2d],edx
  50acdd:	jp     0x50ace4
  50acdf:	pop    ecx
  50ace0:	jo     0x50ad3f
  50ace2:	pop    eax
  50ace3:	and    BYTE PTR [ecx],al
  50ace5:	pushw  0x5d40
  50ace9:	adc    al,0x4c
  50aceb:	pop    ebp
  50acec:	out    0x1e,eax
  50acee:	repz shl ch,cl
  50acf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50acf2:	adc    bh,0x1
  50acf5:	outs   dx,DWORD PTR ds:[esi]
  50acf6:	xor    al,0xcd
  50acf8:	ds (bad) 
  50acfa:	jbe    0x50acc8
  50acfc:	test   cl,ah
  50acfe:	or     BYTE PTR [ecx],dl
  50ad00:	and    al,0x50
  50ad02:	mov    ds,WORD PTR [esi+eax*1+0x13198a0c]
  50ad09:	add    al,BYTE PTR [ebx]
  50ad0b:	inc    ebp
  50ad0c:	push   0xffffffbf
  50ad0e:	stos   BYTE PTR es:[edi],al
  50ad0f:	call   0xa4a6:0xa778feb7
  50ad16:	sbb    BYTE PTR [ebx],0x11
  50ad19:	pop    ebx
  50ad1a:	int3   
  50ad1b:	cdq    
  50ad1c:	iret   
  50ad1d:	arpl   WORD PTR [eax-0xe],di
  50ad20:	or     DWORD PTR [eax-0x40],ebx
  50ad23:	push   esi
  50ad24:	xor    DWORD PTR [eax+ebp*8+0xb],ecx
  50ad28:	in     al,dx
  50ad29:	cld    
  50ad2a:	out    dx,al
  50ad2b:	xchg   ebx,eax
  50ad2c:	fdivp  st(5),st
  50ad2e:	in     eax,dx
  50ad2f:	xor    dl,bl
  50ad31:	imul   ebp,ecx,0x62
  50ad34:	sbb    ebx,ecx
  50ad36:	jns    0x50ad6d
  50ad38:	mov    BYTE PTR [ecx-0x1bd85d8f],bl
  50ad3e:	mov    BYTE PTR [ebx-0x6de112c1],bh
  50ad44:	bound  esp,QWORD PTR ds:0x268948f7
  50ad4a:	es rcl al,cl
  50ad4d:	jp     0x50ad70
  50ad4f:	out    dx,al
  50ad50:	add    esp,edx
  50ad52:	jno    0x50adad
  50ad54:	gs mov dl,0x9d
  50ad57:	rol    DWORD PTR [edx-0x363dc6b7],cl
  50ad5d:	loope  0x50ad44
  50ad5f:	dec    ecx
  50ad60:	int3   
  50ad61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ad62:	jmp    0x50ad2f
  50ad64:	xor    ch,BYTE PTR [edx]
  50ad66:	or     eax,0xaeed4d2b
  50ad6b:	or     ebp,ebx
  50ad6d:	sub    BYTE PTR [eax+esi*1-0x4e7ce92d],0x47
  50ad75:	shl    BYTE PTR [esi-0x5029bce0],1
  50ad7b:	sub    al,0x1d
  50ad7d:	mov    dl,0xf2
  50ad7f:	js     0x50ad83
  50ad81:	dec    eax
  50ad82:	aaa    
  50ad83:	mov    eax,ecx
  50ad85:	test   eax,ebx
  50ad87:	aas    
  50ad88:	or     eax,0x757c0bd9
  50ad8d:	(bad)
  50ad90:	neg    DWORD PTR [ecx-0x7f]
  50ad93:	ja     0x50ad39
  50ad95:	dec    esp
  50ad96:	in     eax,0x4a
  50ad98:	cwde   
  50ad99:	jmp    0xd0e0:0x404314fc
  50ada0:	loope  0x50ae16
  50ada2:	add    bl,0xd5
  50ada5:	imul   ebp,edx,0x565d467e
  50adab:	jno    0x50adbd
  50adad:	ss out 0x2e,al
  50adb0:	js     0x50adf7
  50adb2:	addr16 clc 
  50adb4:	leave  
  50adb5:	(bad)  [ecx-0x68e0c921]
  50adbb:	test   DWORD PTR [edi+ebp*4],edi
  50adbe:	leave  
  50adbf:	or     eax,0x7a5542a2
  50adc4:	fmul   DWORD PTR [ecx+0x19514921]
  50adca:	(bad)  
  50adcb:	pop    eax
  50adcc:	rol    BYTE PTR [edi+0x7b],cl
  50adcf:	cmp    dl,dh
  50add1:	and    eax,edi
  50add3:	dec    edi
  50add4:	data16 js 0x50ad6a
  50add7:	xchg   esi,eax
  50add8:	adc    DWORD PTR [edx+0x35],ebp
  50addb:	es adc eax,0xd4b8c68
  50ade1:	rcl    DWORD PTR [eax+0x20],0xb4
  50ade5:	cmp    bh,BYTE PTR [ebx-0x51]
  50ade8:	xor    ah,BYTE PTR ss:[edi*4+0x7d6bab36]
  50adf0:	lea    edi,[ebx]
  50adf2:	push   edx
  50adf3:	shr    esi,1
  50adf5:	dec    esp
  50adf6:	stos   DWORD PTR es:[edi],eax
  50adf7:	ins    DWORD PTR es:[edi],dx
  50adf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50adf9:	(bad)  
  50adfa:	fcmove st,st(3)
  50adfc:	push   ss
  50adfd:	imul   BYTE PTR [ecx]
  50adff:	sar    BYTE PTR [ebp-0x10f3a004],1
  50ae05:	ucomiss xmm0,DWORD PTR [eax]
  50ae08:	(bad)  
  50ae09:	mov    ch,0xb0
  50ae0b:	dec    ebp
  50ae0c:	(bad)  
  50ae0d:	xchg   ebp,eax
  50ae0e:	into   
  50ae0f:	pop    edx
  50ae10:	cmp    BYTE PTR [ebx],ch
  50ae12:	xor    eax,0x68f7fba0
  50ae17:	aam    0xfe
  50ae19:	iret   
  50ae1a:	scas   al,BYTE PTR es:[edi]
  50ae1b:	sbb    edx,0xa
  50ae1e:	jae    0x50ae25
  50ae20:	popf   
  50ae21:	ret    0x94b0
  50ae24:	xor    DWORD PTR [ebx-0x2a],0x24
  50ae28:	add    al,BYTE PTR [esi+eax*2]
  50ae2b:	stc    
  50ae2c:	lea    ebx,[edi+0x1b]
  50ae2f:	add    BYTE PTR [edi],0x65
  50ae32:	out    0x4,al
  50ae34:	test   DWORD PTR [ebp+0x2c],0x7658ffcc
  50ae3b:	ret    
  50ae3c:	leave  
  50ae3d:	aas    
  50ae3e:	mov    es,WORD PTR ss:[ebp+esi*2-0x12]
  50ae43:	popa   
  50ae44:	not    DWORD PTR [ebp-0x35]
  50ae47:	mov    dh,BYTE PTR [ecx-0x14]
  50ae4a:	mov    ?,WORD PTR [esi]
  50ae4c:	sub    BYTE PTR [eiz*2-0x389e9250],al
  50ae53:	into   
  50ae54:	mov    ebp,0x1dce570c
  50ae59:	lahf   
  50ae5a:	ins    BYTE PTR es:[edi],dx
  50ae5b:	(bad)  
  50ae5c:	sti    
  50ae5d:	inc    edx
  50ae5e:	mov    al,0xf2
  50ae60:	mov    al,0xbf
  50ae62:	push   eax
  50ae63:	dec    eax
  50ae64:	adc    al,0x5e
  50ae66:	add    ch,BYTE PTR [ecx-0xe]
  50ae69:	loop   0x50ae8e
  50ae6b:	sbb    ch,BYTE PTR [edx]
  50ae6d:	mov    esi,0x81673109
  50ae72:	mov    bl,0xf2
  50ae74:	es in  eax,dx
  50ae76:	or     DWORD PTR [eax-0x40],edi
  50ae79:	sbb    DWORD PTR [esi],ebx
  50ae7b:	sbb    esi,DWORD PTR [ebx+0x6a3fcf29]
  50ae81:	jbe    0x50aece
  50ae83:	ret    0x4ca5
  50ae86:	retf   0xad86
  50ae89:	xchg   DWORD PTR [edx+edi*2+0x21c0edcf],esi
  50ae90:	pop    es
  50ae91:	neg    BYTE PTR [ecx]
  50ae93:	stos   DWORD PTR es:[edi],eax
  50ae94:	mov    cl,0xed
  50ae96:	sbb    dh,BYTE PTR [ebx-0x1b0d9e62]
  50ae9c:	fsubr  st(1),st
  50ae9e:	jg     0x50af13
  50aea0:	popa   
  50aea1:	push   esp
  50aea2:	jne    0x50ae88
  50aea4:	and    al,0xcf
  50aea6:	rol    DWORD PTR [ebp+0x4e246752],1
  50aeac:	inc    ecx
  50aead:	(bad)  [ecx+0x44]
  50aeb0:	fdiv   QWORD PTR [edx-0x5f0413a7]
  50aeb6:	add    BYTE PTR [edx-0x15],dl
  50aeb9:	lahf   
  50aeba:	pusha  
  50aebb:	out    dx,al
  50aebc:	(bad)  
  50aebe:	jb     0x50ae4e
  50aec0:	sbb    ah,ch
  50aec2:	inc    eax
  50aec3:	mov    ds:0x859abc3d,al
  50aec8:	jb     0x50aeae
  50aeca:	xchg   esp,eax
  50aecb:	int    0xc4
  50aecd:	inc    edi
  50aece:	sbb    BYTE PTR [edi-0x1c0db4cb],ch
  50aed4:	jg     0x50aeb7
  50aed6:	es xchg edx,eax
  50aed8:	jbe    0x50aeda
  50aeda:	je     0x50ae6d
  50aedc:	ret    0x6fd6
  50aedf:	aam    0x1d
  50aee1:	mov    dh,0x25
  50aee3:	or     al,0x7b
  50aee5:	in     al,0x0
  50aee7:	xchg   esi,esp
  50aee9:	add    ebp,DWORD PTR [eax+eiz*4+0x60a8047e]
  50aef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50aef1:	push   edi
  50aef2:	sahf   
  50aef3:	mov    al,0xe8
  50aef5:	mov    ch,0x7a
  50aef7:	cmp    al,0xf8
  50aef9:	mov    es,WORD PTR [ebx+edx*8]
  50aefc:	dec    ecx
  50aefd:	xchg   BYTE PTR [edx-0x245e9821],dl
  50af03:	imul   eax,DWORD PTR ss:[eax],0x379b44a9
  50af0a:	ret    0xcbd5
  50af0d:	jae    0x50aee7
  50af0f:	shl    DWORD PTR [ebx+0x25],cl
  50af12:	push   0xffffff86
  50af14:	aam    0x6a
  50af16:	mov    ch,0x95
  50af18:	outs   dx,BYTE PTR ds:[esi]
  50af19:	mov    ds:0x8c108f29,eax
  50af1e:	int    0xca
  50af20:	je     0x50af93
  50af22:	aas    
  50af23:	aas    
  50af24:	mov    ebp,0x209d54d
  50af29:	mov    ds:0x281fa1a3,al
  50af2e:	pop    ss
  50af2f:	call   FWORD PTR [ebx+0x3e0dfc54]
  50af35:	xchg   esi,eax
  50af36:	adc    BYTE PTR [edx+0x4d62e366],bl
  50af3c:	sub    eax,0x6f6a0c3d
  50af41:	outs   dx,BYTE PTR ds:[esi]
  50af42:	sbb    bl,BYTE PTR [edi+0x425a89ce]
  50af48:	scas   eax,DWORD PTR es:[edi]
  50af49:	mov    ah,0x4e
  50af4b:	cmp    al,0x76
  50af4d:	mov    ch,0x90
  50af4f:	or     bl,bl
  50af51:	pop    es
  50af52:	mov    ch,0xe6
  50af54:	push   ss
  50af55:	pop    ebx
  50af56:	mov    cl,0x25
  50af58:	xchg   bl,ah
  50af5a:	aaa    
  50af5b:	fs push ebx
  50af5d:	cli    
  50af5e:	out    0x8a,eax
  50af60:	daa    
  50af61:	fwait
  50af62:	adc    eax,0xab75d1fc
  50af67:	icebp  
  50af68:	xchg   eax,ebx
  50af6a:	jle    0x50af4f
  50af6c:	mov    bh,0xd9
  50af6e:	xchg   esi,eax
  50af6f:	or     BYTE PTR [ebx+0x7b],0xe
  50af73:	jmp    0xaa48f170
  50af78:	(bad)  
  50af79:	into   
  50af7a:	cs into 
  50af7c:	ins    BYTE PTR es:[edi],dx
  50af7d:	test   BYTE PTR [esi-0x4e],0x1b
  50af81:	jo     0x50af18
  50af83:	hlt    
  50af84:	iret   
  50af85:	aaa    
  50af86:	mov    ah,0xdd
  50af88:	jnp    0x50b009
  50af8a:	cmp    dh,BYTE PTR [edx-0x3d]
  50af8d:	sbb    al,0x21
  50af8f:	mov    bl,0x4e
  50af91:	or     bl,bl
  50af93:	or     DWORD PTR [edi+0x746eb43b],esi
  50af99:	hlt    
  50af9a:	cmp    bl,ch
  50af9c:	ror    BYTE PTR [ebx+0x609113c2],0xab
  50afa3:	sub    al,0xc0
  50afa5:	in     al,dx
  50afa6:	mov    al,0xb6
  50afa8:	mov    ch,0x8b
  50afaa:	cmp    ecx,DWORD PTR [ecx]
  50afac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50afad:	psubd  mm5,mm3
  50afb0:	sbb    edx,edx
  50afb2:	cwde   
  50afb3:	loop   0x50af81
  50afb5:	in     eax,0xaa
  50afb7:	dec    edi
  50afb8:	stos   DWORD PTR es:[edi],eax
  50afb9:	in     al,dx
  50afba:	clc    
  50afbb:	mov    BYTE PTR [ecx+0x6c],dl
  50afbe:	int3   
  50afbf:	xor    al,0xd3
  50afc1:	(bad)  
  50afc2:	fdivrp st(6),st
  50afc4:	inc    esi
  50afc5:	mov    dh,0x91
  50afc7:	xchg   BYTE PTR [ecx+0x4055ab24],bl
  50afcd:	sub    eax,0x51c1db7a
  50afd2:	mov    ecx,0x5dca041d
  50afd7:	mov    al,0xb
  50afd9:	fdivr  st,st(3)
  50afdb:	in     al,dx
  50afdc:	scas   eax,DWORD PTR es:[edi]
  50afdd:	pop    ecx
  50afde:	loop   0x50b019
  50afe0:	scas   eax,DWORD PTR es:[edi]
  50afe1:	push   ebp
  50afe2:	imul   eax,DWORD PTR [ebx-0x13],0x2b75d62f
  50afe9:	icebp  
  50afea:	stos   BYTE PTR es:[edi],al
  50afeb:	(bad)  
  50afec:	(bad)  
  50afed:	nop
  50afee:	mov    esp,0x4978cbe4
  50aff3:	call   0xb1bd:0xe3a413c6
  50affa:	sub    DWORD PTR [esi+ebx*2],ebx
  50affd:	jb     0x50afab
  50afff:	and    DWORD PTR [eax],esi
  50b001:	(bad)  
  50b002:	sbb    eax,0x220bc120
  50b007:	adc    eax,0x64371b2e
  50b00c:	or     BYTE PTR [eax-0x6c],ch
  50b00f:	inc    ecx
  50b010:	add    DWORD PTR [edi+0x3ec37a5b],ecx
  50b016:	in     eax,dx
  50b017:	in     eax,0x3b
  50b019:	ins    BYTE PTR es:[edi],dx
  50b01a:	mov    ds:0x75b88843,eax
  50b01f:	and    BYTE PTR ds:0x5c469f04,bh
  50b025:	les    eax,FWORD PTR [esi-0x33]
  50b028:	add    eax,0x31ee288d
  50b02d:	ins    DWORD PTR es:[edi],dx
  50b02e:	jns    0x50b00d
  50b030:	xchg   ebp,eax
  50b031:	das    
  50b032:	enter  0x3d59,0xb1
  50b036:	in     al,dx
  50b037:	and    eax,0x2cfd181f
  50b03c:	or     eax,0xf201cd87
  50b041:	push   ecx
  50b042:	leave  
  50b043:	cmc    
  50b044:	ret    0x80a4
  50b047:	(bad)  
  50b048:	jecxz  0x50b051
  50b04a:	dec    edi
  50b04b:	add    eax,DWORD PTR [ecx]
  50b04d:	push   0x55050ba8
  50b052:	popf   
  50b053:	or     eax,0x2473bcc2
  50b058:	mov    ebx,0xbe9380d0
  50b05d:	add    DWORD PTR [esi],edx
  50b05f:	(bad)  
  50b060:	ss aas 
  50b062:	add    DWORD PTR [eax-0x4c],0xffffffd9
  50b066:	mov    esp,0x28050270
  50b06b:	cwde   
  50b06c:	sub    al,BYTE PTR [edx-0x6a42df0]
  50b072:	ror    esi,0xa3
  50b075:	jbe    0x50b063
  50b077:	retf   0x3230
  50b07a:	mov    al,0x4e
  50b07c:	ret    0xc448
  50b07f:	or     eax,0x1e09b0c3
  50b084:	popf   
  50b085:	aaa    
  50b086:	pushf  
  50b087:	fnstcw WORD PTR [edi+0x18fab5b9]
  50b08d:	out    0x75,al
  50b08f:	repz ja 0x50b0be
  50b092:	imul   edx,DWORD PTR [ecx-0x3e],0xd109f0db
  50b099:	es ret 0x53ef
  50b09d:	sub    dl,al
  50b09f:	(bad)  
  50b0a0:	mov    al,ds:0xc267767
  50b0a5:	mov    eax,ebp
  50b0a7:	adc    dh,BYTE PTR [ebx+0x4b58095b]
  50b0ad:	aad    0x89
  50b0af:	popa   
  50b0b0:	cmp    eax,DWORD PTR [ebx-0x2f]
  50b0b3:	cmp    esp,DWORD PTR [ecx]
  50b0b5:	xlat   BYTE PTR ds:[ebx]
  50b0b6:	jl     0x50b0a5
  50b0b8:	jb     0x50b05c
  50b0ba:	jecxz  0x50b0a8
  50b0bc:	sbb    eax,0x16b58229
  50b0c1:	sahf   
  50b0c2:	(bad)  
  50b0c3:	clc    
  50b0c4:	and    al,0xdc
  50b0c6:	or     BYTE PTR ds:0xbbd9ed8f,0x7f
  50b0cd:	push   eax
  50b0ce:	(bad)  
  50b0cf:	mov    ?,ecx
  50b0d1:	(bad)  
  50b0d3:	xor    eax,DWORD PTR [edx]
  50b0d5:	std    
  50b0d6:	cmc    
  50b0d7:	in     eax,0x37
  50b0d9:	addr16 cpuid 
  50b0dc:	aad    0xb0
  50b0de:	out    dx,al
  50b0df:	stc    
  50b0e0:	stos   DWORD PTR es:[edi],eax
  50b0e1:	fisub  WORD PTR [ebp+0x4ce86fa7]
  50b0e7:	mov    eax,gs:0x49ee0898
  50b0ed:	pop    edi
  50b0ee:	or     DWORD PTR [ecx-0x42e44e3e],esi
  50b0f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50b0f5:	mov    sp,bp
  50b0f8:	rcr    BYTE PTR [eax],cl
  50b0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b0fb:	gs enter 0x89f0,0x34
  50b100:	pushf  
  50b101:	cmp    eax,0xa12bbc2
  50b106:	lahf   
  50b107:	or     ecx,0x70
  50b10a:	data16 jle 0x50b178
  50b10d:	int    0x6e
  50b10f:	cwde   
  50b110:	mov    ch,BYTE PTR [edx-0x7a7e8311]
  50b116:	sti    
  50b117:	out    dx,eax
  50b118:	sub    bh,dh
  50b11a:	and    cl,BYTE PTR [eax+0xfcef0df]
  50b120:	jecxz  0x50b131
  50b122:	leave  
  50b123:	jns    0x50b101
  50b125:	fnstenv ds:0xb4992f30
  50b12b:	ss cmc 
  50b12d:	mov    al,0xb6
  50b12f:	lds    esi,FWORD PTR [eax]
  50b131:	dec    ebp
  50b132:	push   eax
  50b133:	into   
  50b134:	cmc    
  50b135:	cmc    
  50b136:	mov    dl,BYTE PTR [esi+0x71]
  50b139:	test   eax,0x943f46d8
  50b13e:	(bad)  
  50b13f:	pop    ss
  50b140:	or     al,0xbc
  50b142:	dec    esp
  50b143:	add    BYTE PTR [edx-0x66b6f95f],ch
  50b149:	cmp    dl,BYTE PTR [ebp+0x51]
  50b14c:	mov    ah,0x5f
  50b14e:	aam    0xfa
  50b150:	cmp    bh,BYTE PTR [ebp+0x7b]
  50b153:	mov    dh,0x2
  50b155:	daa    
  50b156:	jo     0x50b135
  50b158:	dec    ecx
  50b159:	je     0x50b19e
  50b15b:	push   ebx
  50b15c:	(bad)  
  50b15d:	pop    edx
  50b15e:	nop
  50b15f:	xchg   edi,eax
  50b160:	cdq    
  50b161:	pop    ecx
  50b162:	fsub   DWORD PTR [eax+0xd]
  50b165:	add    DWORD PTR cs:[esi+0x6a08cc42],ecx
  50b16c:	jb     0x50b103
  50b16e:	jne    0x50b173
  50b170:	gs mov dh,0xa8
  50b173:	mov    DWORD PTR [ebp-0x4c2af8a8],esp
  50b179:	push   eax
  50b17a:	sub    BYTE PTR [ebx-0x50],cl
  50b17d:	std    
  50b17e:	ret    0x15a2
  50b181:	icebp  
  50b182:	lods   al,BYTE PTR ds:[esi]
  50b183:	mov    eax,ds:0x622d9217
  50b188:	in     al,0xfb
  50b18a:	dec    esi
  50b18b:	aas    
  50b18c:	shl    BYTE PTR [ebx+0x6b],cl
  50b18f:	adc    BYTE PTR [ecx+0x74],0x4b
  50b193:	push   ds
  50b194:	das    
  50b195:	jno    0x50b20a
  50b197:	or     ebx,esp
  50b199:	aaa    
  50b19a:	daa    
  50b19b:	mov    ah,BYTE PTR [ebx]
  50b19d:	pop    ebx
  50b19e:	les    esp,FWORD PTR [ecx+0x65]
  50b1a1:	ss aad 0x14
  50b1a4:	out    0x73,eax
  50b1a6:	mov    ah,0x7
  50b1a8:	sub    al,0x2f
  50b1aa:	mov    ch,0x0
  50b1ac:	sub    esp,DWORD PTR [ebx+0x74fbb4d5]
  50b1b2:	inc    eax
  50b1b3:	mov    esp,0x41fe3bb
  50b1b8:	xchg   edx,eax
  50b1b9:	test   cl,al
  50b1bb:	dec    esi
  50b1bc:	sti    
  50b1bd:	sub    edi,esp
  50b1bf:	dec    dx
  50b1c1:	out    dx,al
  50b1c2:	aas    
  50b1c3:	or     al,0x8b
  50b1c5:	out    0x2a,al
  50b1c7:	mov    DWORD PTR [edi+0x29],ebp
  50b1ca:	and    ch,BYTE PTR [esi-0x71]
  50b1cd:	jp     0x50b1fa
  50b1cf:	adc    DWORD PTR ds:0xd8f0f6b4,0x37
  50b1d6:	int3   
  50b1d7:	jne    0x50b16d
  50b1d9:	out    dx,al
  50b1da:	or     al,0x6b
  50b1dc:	sub    al,0xb8
  50b1de:	scas   al,BYTE PTR es:[edi]
  50b1df:	cmc    
  50b1e0:	inc    edi
  50b1e1:	mov    ds:0x35f8eb6,al
  50b1e6:	jmp    0x50b25d
  50b1e8:	outs   dx,DWORD PTR ds:[esi]
  50b1e9:	out    dx,eax
  50b1ea:	inc    eax
  50b1eb:	repnz out 0xc5,eax
  50b1ee:	imul   ebx,DWORD PTR [ebx+0xd],0xffffff81
  50b1f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b1f3:	repnz (bad) 
  50b1f5:	jo     0x50b19b
  50b1f7:	outs   dx,BYTE PTR ds:[esi]
  50b1f8:	mov    eax,0x6c43ef4a
  50b1fd:	clc    
  50b1fe:	or     ebp,DWORD PTR [ecx]
  50b200:	lods   al,BYTE PTR ds:[esi]
  50b201:	inc    ebp
  50b202:	xchg   edi,eax
  50b203:	dec    esi
  50b204:	jbe    0x50b215
  50b206:	mov    ds:0xc85c2f9a,al
  50b20b:	add    DWORD PTR [edx],ecx
  50b20d:	dec    esi
  50b20e:	lea    eax,[eax+0x63f4bb10]
  50b214:	stos   DWORD PTR es:[edi],eax
  50b215:	inc    esp
  50b216:	jge    0x50b1f9
  50b218:	adc    DWORD PTR [esi+0x7057a6f],edi
  50b21e:	leave  
  50b21f:	jge    0x50b297
  50b221:	sub    BYTE PTR [eax],0xac
  50b224:	repz jle 0x50b22d
  50b227:	stc    
  50b228:	ss xchg edx,eax
  50b22a:	lock add eax,0xe8514094
  50b230:	jnp    0x50b1e9
  50b232:	push   ecx
  50b233:	clc    
  50b234:	out    dx,eax
  50b235:	je     0x50b1c8
  50b237:	cmp    DWORD PTR [esi],ebp
  50b239:	ds pop ecx
  50b23b:	inc    edi
  50b23c:	jns    0x50b2a3
  50b23e:	add    ebp,DWORD PTR [edx+esi*8+0x64]
  50b242:	xor    BYTE PTR [ebx+0x1a3d0a2c],dl
  50b248:	js     0x50b1e0
  50b24a:	fsub   QWORD PTR [edi]
  50b24c:	xor    BYTE PTR [ebx+0x7ae68686],al
  50b252:	mov    ss,WORD PTR [edx-0x6df132f1]
  50b258:	(bad)  
  50b259:	cld    
  50b25a:	inc    ebx
  50b25b:	sbb    eax,DWORD PTR [ebx+0x76eaa805]
  50b261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50b263:	xor    dh,BYTE PTR ds:[esi-0x64a8199b]
  50b26a:	jo     0x50b2dd
  50b26c:	adc    al,0xae
  50b26e:	mov    esi,0x82eabdfd
  50b273:	add    DWORD PTR [ecx],esi
  50b275:	repz test al,0xed
  50b278:	jmp    0xac7b:0xc05a276f
  50b27f:	pop    es
  50b280:	aas    
  50b281:	jno    0x50b2a1
  50b283:	stos   BYTE PTR es:[edi],al
  50b284:	sbb    BYTE PTR [ecx-0x2f915fd9],dl
  50b28a:	orps   xmm2,xmm6
  50b28d:	std    
  50b28e:	in     al,dx
  50b28f:	or     DWORD PTR [ebx],0x42
  50b292:	sub    eax,0x217cdfb
  50b297:	in     eax,dx
  50b298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50b299:	dec    eax
  50b29a:	xlat   BYTE PTR ds:[ebx]
  50b29b:	jmp    0x50b304
  50b29d:	shr    DWORD PTR [ecx],1
  50b29f:	adc    dl,BYTE PTR [edx-0x29]
  50b2a2:	cmp    al,0x54
  50b2a4:	sti    
  50b2a5:	fadd   QWORD PTR [edi+0x70c07dca]
  50b2ab:	in     al,0x3f
  50b2ad:	inc    edi
  50b2ae:	mov    BYTE PTR [ebp+0x50528f6],ah
  50b2b4:	cli    
  50b2b5:	pop    ebx
  50b2b6:	ja     0x50b2aa
  50b2b8:	popa   
  50b2b9:	ins    DWORD PTR es:[edi],dx
  50b2ba:	test   DWORD PTR [eax-0x7a8a29df],esi
  50b2c0:	leave  
  50b2c1:	int    0xf6
  50b2c3:	loope  0x50b285
  50b2c5:	push   edi
  50b2c6:	dec    ebp
  50b2c7:	aad    0x73
  50b2c9:	adc    ecx,0x7
  50b2cc:	mov    al,ds:0x5c43e209
  50b2d1:	mov    ds:0x40f08116,al
  50b2d6:	dec    DWORD PTR [edi]
  50b2d8:	(bad)  
  50b2d9:	loopne 0x50b2e3
  50b2db:	fstp   st(3)
  50b2dd:	je     0x50b277
  50b2df:	xchg   DWORD PTR [eax],edi
  50b2e1:	mov    DWORD PTR [esi],edx
  50b2e3:	push   0x98f4e23
  50b2e8:	fsub   st(5),st
  50b2ea:	in     al,0x52
  50b2ec:	sub    DWORD PTR [eax+0x7fbbce20],eax
  50b2f2:	ins    DWORD PTR es:[edi],dx
  50b2f3:	inc    eax
  50b2f4:	xchg   DWORD PTR [ebp-0xe],esp
  50b2f7:	jecxz  0x50b2be
  50b2f9:	bound  esp,QWORD PTR [esi+0x58]
  50b2fc:	jl     0x50b331
  50b2fe:	or     eax,0xe8fe730a
  50b303:	cmp    eax,0xc65f27b5
  50b308:	lods   al,BYTE PTR ds:[esi]
  50b309:	ins    DWORD PTR es:[edi],dx
  50b30a:	out    dx,al
  50b30b:	cmp    BYTE PTR [ebx],ch
  50b30d:	jmp    0x50b2f6
  50b30f:	jmp    ebx
  50b311:	fisubr DWORD PTR [edi]
  50b313:	or     dh,BYTE PTR [eax+0x52]
  50b316:	out    dx,eax
  50b317:	mov    ds:0x97f4f4d6,eax
  50b31c:	mov    edi,0xd9fa5a5c
  50b321:	fistp  WORD PTR [ecx+0x3e]
  50b324:	imul   eax,DWORD PTR [edi-0x3c4c52f5],0xf49ec17f
  50b32e:	mov    edi,0x23d30949
  50b333:	aaa    
  50b334:	adc    dl,BYTE PTR [ecx-0xdcf318f]
  50b33a:	fcomp  QWORD PTR [edi-0x50bb03a7]
  50b340:	fistp  WORD PTR [ecx]
  50b342:	test   BYTE PTR [ebx+edx*1+0x4f8ea2cd],al
  50b349:	loopne 0x50b3ac
  50b34b:	fcomp  QWORD PTR [ecx-0x39935dba]
  50b351:	lahf   
  50b352:	pop    ds
  50b353:	jp     0x50b327
  50b355:	shr    DWORD PTR [eax+0x28d11ecc],0xa
  50b35c:	stos   BYTE PTR es:[edi],al
  50b35d:	sub    BYTE PTR [eax-0x3ede430],cl
  50b363:	add    BYTE PTR [ebx],bh
  50b365:	lahf   
  50b366:	pop    eax
  50b367:	jge    0x50b3ae
  50b369:	aaa    
  50b36a:	dec    edi
  50b36b:	repz cmp al,0xc5
  50b36e:	jmp    0xcf29:0xa04cf1fd
  50b375:	imul   esp,esp,0x3d
  50b378:	add    al,0x70
  50b37a:	xchg   esi,eax
  50b37b:	mov    cs,edi
  50b37d:	add    al,0x12
  50b37f:	(bad)  
  50b381:	dec    ecx
  50b382:	test   DWORD PTR [edx],edi
  50b384:	mov    ebp,0xe3c37d76
  50b389:	xchg   ecx,eax
  50b38a:	fmul   DWORD PTR [edi+esi*4+0x280cb054]
  50b391:	jae    0x50b368
  50b393:	icebp  
  50b394:	cmp    DWORD PTR [eax+0x15],ecx
  50b397:	or     DWORD PTR [esi+0x3a],esp
  50b39a:	mov    ds:0xb4f16128,al
  50b39f:	mov    esi,DWORD PTR [ebx+edx*2]
  50b3a2:	or     dh,BYTE PTR [eax+eiz*4-0x29f42f5a]
  50b3a9:	hlt    
  50b3aa:	inc    ebx
  50b3ab:	in     al,0x4f
  50b3ad:	out    0x82,al
  50b3af:	push   ss
  50b3b0:	push   cs
  50b3b1:	pop    edi
  50b3b2:	xchg   esp,eax
  50b3b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b3b4:	shl    BYTE PTR [edi+eax*1+0x7a],0x83
  50b3b9:	pop    ebx
  50b3ba:	jle    0x50b425
  50b3bc:	mov    ch,0x9e
  50b3be:	retf   
  50b3bf:	jl     0x50b3fd
  50b3c1:	shr    DWORD PTR [ebx+0x10],1
  50b3c4:	gs fsub st,st(3)
  50b3c7:	xchg   edi,eax
  50b3c8:	add    BYTE PTR [ecx-0x4615c1e0],dh
  50b3ce:	mov    cl,BYTE PTR [ebx]
  50b3d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50b3d1:	(bad)  
  50b3d2:	cmp    eax,0x15ccdcba
  50b3d7:	sub    eax,0xcc92d151
  50b3dc:	jb     0x50b3b0
  50b3de:	jl     0x50b371
  50b3e0:	(bad)
  50b3e3:	lock push ebx
  50b3e5:	inc    esp
  50b3e6:	add    BYTE PTR [edx+edi*4-0xe53d101],bl
  50b3ed:	inc    DWORD PTR [ebx+0xf2fb62f]
  50b3f3:	ret    
  50b3f4:	sbb    DWORD PTR [edx+0x471750fa],edi
  50b3fa:	mov    BYTE PTR [ebp+0x16e891b4],bh
  50b400:	loopne 0x50b3cc
  50b402:	repz ss addr16 aam 0xef
  50b407:	xchg   edx,eax
  50b408:	out    dx,eax
  50b409:	aas    
  50b40a:	mov    ah,0xa3
  50b40c:	loope  0x50b3c1
  50b40e:	jl     0x50b397
  50b410:	sti    
  50b411:	mov    ah,0xd5
  50b413:	add    ch,BYTE PTR [edi+0x76]
  50b416:	xchg   ecx,eax
  50b417:	ret    
  50b418:	pop    DWORD PTR [ebx+edx*1]
  50b41b:	nop
  50b41c:	or     BYTE PTR [ebx+edi*2],cl
  50b41f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50b420:	test   al,0xb
  50b422:	out    0xc1,eax
  50b424:	sub    edi,ebx
  50b426:	fmul   st,st(0)
  50b428:	popa   
  50b429:	popf   
  50b42a:	sbb    BYTE PTR [ebx-0x53],bh
  50b42d:	dec    ecx
  50b42e:	call   0x8cb4f00f
  50b433:	aam    0xa0
  50b435:	cmp    bl,bh
  50b437:	in     al,dx
  50b438:	fsubrp st(5),st
  50b43a:	jp     0x50b461
  50b43c:	fs mov ebx,0x84b0d11b
  50b442:	dec    ecx
  50b443:	das    
  50b444:	clc    
  50b445:	sbb    eax,0x88540789
  50b44a:	pushf  
  50b44b:	loopne 0x50b4a1
  50b44d:	outs   dx,DWORD PTR ds:[esi]
  50b44e:	push   es
  50b44f:	jns    0x50b42e
  50b451:	add    al,dh
  50b453:	pusha  
  50b454:	jb     0x50b42f
  50b456:	div    bl
  50b458:	ds add ebx,esp
  50b45b:	xchg   ecx,eax
  50b45c:	push   eax
  50b45d:	ss ss jge 0x50b480
  50b461:	vprotb ymm8,xmm3,[eax+r9d*4+0x72]
  50b468:	inc    esp
  50b469:	iret   
  50b46a:	rcr    BYTE PTR [ebx+0x2],cl
  50b46d:	les    edi,FWORD PTR [eax+0x610290]
  50b473:	scas   eax,DWORD PTR es:[edi]
  50b474:	xchg   edx,eax
  50b475:	jno    0x50b468
  50b477:	loop   0x50b435
  50b479:	ret    0x2130
  50b47c:	cmp    al,0xa8
  50b47e:	mov    eax,DWORD PTR [ecx-0x5a]
  50b481:	test   al,0xe2
  50b483:	ficomp WORD PTR [bx+0x40d8]
  50b488:	dec    eax
  50b489:	pushf  
  50b48a:	inc    ebx
  50b48b:	jns    0x50b46a
  50b48d:	push   esi
  50b48e:	mov    ds:0xf8183bb4,eax
  50b493:	ja     0x50b4b5
  50b495:	in     al,dx
  50b496:	mov    ebp,0x768d44a3
  50b49b:	outs   dx,DWORD PTR ds:[esi]
  50b49c:	xchg   BYTE PTR [ebx+0x9],cl
  50b49f:	iret   
  50b4a0:	dec    ebp
  50b4a1:	ret    
  50b4a2:	imul   edx,DWORD PTR ds:0x59e3437d,0xe6c9a42d
  50b4ac:	jge    0x50b508
  50b4ae:	fdivr  DWORD PTR [edi-0x70497dcc]
  50b4b4:	stc    
  50b4b5:	push   edx
  50b4b6:	mov    cl,0x6b
  50b4b8:	mov    edi,edx
  50b4ba:	inc    ebx
  50b4bb:	pop    ebp
  50b4bc:	and    al,0xed
  50b4be:	mov    gs,WORD PTR [eax]
  50b4c0:	xor    bh,BYTE PTR [edi-0x58]
  50b4c3:	push   edi
  50b4c4:	pop    ebp
  50b4c5:	adc    BYTE PTR [esi+0x14],dh
  50b4c8:	imul   ebx,DWORD PTR [esi-0x18d5838e],0x4d
  50b4cf:	xchg   DWORD PTR [edx+0x32],ebx
  50b4d2:	repnz and eax,0xe58ea5fe
  50b4d8:	div    cl
  50b4da:	push   esi
  50b4db:	out    dx,eax
  50b4dc:	mov    ds:0x135f9679,eax
  50b4e1:	xchg   ecx,eax
  50b4e2:	push   edx
  50b4e3:	scas   eax,DWORD PTR es:[edi]
  50b4e4:	jae    0x50b4b9
  50b4e6:	inc    ebx
  50b4e7:	mov    dl,0x5b
  50b4e9:	sbb    BYTE PTR [ebx+0x51a617ed],bh
  50b4ef:	dec    esi
  50b4f0:	push   edi
  50b4f1:	mov    al,0x5c
  50b4f3:	adc    DWORD PTR [ecx+ebp*1],ebx
  50b4f6:	xor    DWORD PTR [eax+0x21],eax
  50b4f9:	pop    ds
  50b4fa:	in     eax,dx
  50b4fb:	jmp    0x92f5:0xaa72a05b
  50b502:	sbb    dh,BYTE PTR [ecx+0x607deab6]
  50b508:	cld    
  50b509:	xor    ch,BYTE PTR [eax]
  50b50b:	lods   al,BYTE PTR ds:[esi]
  50b50c:	mov    bh,BYTE PTR [edi]
  50b50e:	test   BYTE PTR [edx+0x192c48d8],bh
  50b514:	sub    dh,dh
  50b516:	push   0x6e472b76
  50b51b:	push   eax
  50b51c:	xor    al,0xac
  50b51e:	scas   eax,DWORD PTR es:[edi]
  50b51f:	add    edx,ebx
  50b521:	cld    
  50b522:	lahf   
  50b523:	mov    ebp,0xfde21267
  50b528:	test   BYTE PTR [edi-0x314075c6],ah
  50b52e:	stos   DWORD PTR es:[edi],eax
  50b52f:	(bad)  
  50b530:	dec    edi
  50b531:	push   esp
  50b532:	push   ss
  50b533:	mov    al,0xd9
  50b535:	out    dx,eax
  50b536:	test   eax,0xa7b8c271
  50b53b:	sbb    DWORD PTR [edi+0x622efa52],edi
  50b541:	or     DWORD PTR [eax+0x75],ebx
  50b544:	push   ebp
  50b545:	aas    
  50b546:	mov    edx,?
  50b548:	and    edi,ecx
  50b54a:	call   0x1ca2fcfe
  50b54f:	sbb    al,ah
  50b551:	jmp    0xb57be8dc
  50b556:	jp     0x50b4d8
  50b558:	test   eax,0xcd7ef9bd
  50b55d:	jbe    0x50b4eb
  50b55f:	retf   0x9b00
  50b562:	and    BYTE PTR [ebp-0xf127a6],dl
  50b568:	mov    edx,ecx
  50b56a:	mov    bl,0xd9
  50b56c:	push   ecx
  50b56d:	stc    
  50b56e:	mov    dh,BYTE PTR [esi+0x54d71eb8]
  50b574:	fist   WORD PTR [edi+0x580047d2]
  50b57a:	inc    ecx
  50b57b:	aas    
  50b57c:	xchg   edx,eax
  50b57d:	(bad)
  50b582:	push   esp
  50b583:	or     edi,ebp
  50b585:	sbb    eax,0xe21b6efd
  50b58a:	fs ja  0x50b5fa
  50b58d:	add    esi,edx
  50b58f:	xchg   esi,eax
  50b590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50b591:	dec    esi
  50b592:	lods   al,BYTE PTR ds:[esi]
  50b593:	cmp    BYTE PTR [eax-0x65],dl
  50b596:	mov    bl,0x88
  50b598:	dec    esi
  50b599:	mov    eax,ds:0x4cd8a306
  50b59e:	add    DWORD PTR [edi+eiz*8],edx
  50b5a1:	and    BYTE PTR [bx+di+0xd88],dh
  50b5a6:	mov    dl,BYTE PTR [esi-0x32]
  50b5a9:	in     eax,0xdd
  50b5ab:	out    0xaa,eax
  50b5ad:	xor    BYTE PTR [ebx],cl
  50b5af:	xor    eax,0xed793ff0
  50b5b4:	dec    esi
  50b5b5:	test   DWORD PTR [esi-0x4d6dc2f6],ebp
  50b5bb:	mov    edx,0xad0730ac
  50b5c0:	out    dx,al
  50b5c1:	in     al,0x71
  50b5c3:	sub    eax,esp
  50b5c5:	loope  0x50b600
  50b5c7:	into   
  50b5c8:	shl    DWORD PTR [ecx+eax*1-0x9],0xb7
  50b5cd:	push   edi
  50b5ce:	outs   dx,BYTE PTR ds:[esi]
  50b5cf:	cmove  eax,ebx
  50b5d2:	xchg   edi,eax
  50b5d3:	js     0x50b5d2
  50b5d5:	push   ecx
  50b5d6:	ret    
  50b5d7:	outs   dx,DWORD PTR ds:[esi]
  50b5d8:	pushf  
  50b5d9:	push   cs
  50b5da:	(bad)  
  50b5db:	gs push ebx
  50b5dd:	xchg   ebx,eax
  50b5de:	or     ecx,edi
  50b5e0:	outs   dx,DWORD PTR ds:[esi]
  50b5e1:	mov    ebp,0xcd0aa524
  50b5e6:	fwait
  50b5e7:	test   DWORD PTR [ebx+esi*2+0x368c7bca],ecx
  50b5ee:	aaa    
  50b5ef:	shl    BYTE PTR [edx],0xf9
  50b5f2:	clc    
  50b5f3:	inc    esp
  50b5f4:	pop    ecx
  50b5f5:	mov    ebx,0x4ee7dcee
  50b5fa:	rcl    esi,0xd0
  50b5fd:	dec    esi
  50b5fe:	jmp    0x255dd8e
  50b603:	test   eax,0x95a9ae15
  50b608:	inc    ecx
  50b609:	mov    al,ds:0x1018529
  50b60e:	mov    WORD PTR [ecx+0x60be2088],?
  50b614:	(bad)
  50b617:	ss das 
  50b619:	out    dx,eax
  50b61a:	xchg   edx,eax
  50b61b:	cld    
  50b61c:	mov    ebx,0xfa20dc90
  50b621:	test   al,0x87
  50b623:	inc    edi
  50b624:	test   al,0x27
  50b626:	mov    ds:0xd4eb416f,al
  50b62b:	(bad)  [edi+0x59fe90b6]
  50b631:	sbb    bh,BYTE PTR [esi+0x5a]
  50b634:	pop    edi
  50b635:	repnz cmc 
  50b637:	mov    cs,ecx
  50b639:	or     DWORD PTR [ecx-0x7ccbaa6f],edx
  50b63f:	stos   BYTE PTR es:[edi],al
  50b640:	rcr    cl,1
  50b642:	neg    BYTE PTR [ebp+0x586b3153]
  50b648:	dec    ebp
  50b649:	pushf  
  50b64a:	out    dx,eax
  50b64b:	push   edx
  50b64c:	cdq    
  50b64d:	xor    eax,0x98e930c
  50b652:	in     eax,dx
  50b653:	call   0x4b1c0637
  50b658:	stc    
  50b659:	popa   
  50b65a:	ja     0x50b66b
  50b65c:	in     eax,dx
  50b65d:	dec    edx
  50b65e:	adc    edi,esi
  50b660:	ins    BYTE PTR es:[edi],dx
  50b661:	xchg   edi,eax
  50b662:	or     ah,ch
  50b664:	dec    esp
  50b665:	adc    dh,BYTE PTR [ecx]
  50b667:	jbe    0x50b61c
  50b669:	arpl   WORD PTR [ebx+0x59df624b],si
  50b66f:	xor    al,0x3c
  50b671:	rcr    bh,1
  50b673:	mov    ?,WORD PTR [esp+ecx*1+0x683329c3]
  50b67a:	jl     0x50b65e
  50b67c:	shl    edi,1
  50b67e:	dec    esp
  50b67f:	jnp    0x50b6b7
  50b681:	(bad)  
  50b683:	rol    bh,1
  50b685:	fist   WORD PTR [edi+0x68]
  50b688:	lds    ebp,FWORD PTR [ebp-0x7b]
  50b68b:	in     eax,dx
  50b68c:	outs   dx,BYTE PTR ds:[esi]
  50b68d:	into   
  50b68e:	sti    
  50b68f:	pusha  
  50b690:	mov    al,ds:0xd2b27d06
  50b695:	popa   
  50b696:	xchg   ebp,eax
  50b697:	pusha  
  50b698:	inc    edi
  50b699:	daa    
  50b69a:	mov    ah,BYTE PTR [eax]
  50b69c:	mov    bh,0x80
  50b69e:	add    DWORD PTR [ecx],0xd9798378
  50b6a4:	or     eax,0x571773bc
  50b6a9:	jl     0x50b6c5
  50b6ab:	icebp  
  50b6ac:	pop    es
  50b6ad:	mov    bl,0xa
  50b6af:	aaa    
  50b6b0:	jp     0x50b651
  50b6b2:	xor    cl,BYTE PTR [eax+0x4]
  50b6b5:	xchg   esp,eax
  50b6b6:	mov    bh,BYTE PTR [esi+0x7e6a1259]
  50b6bc:	or     eax,0x74bfc866
  50b6c1:	pop    ebp
  50b6c2:	cli    
  50b6c3:	push   ss
  50b6c4:	xchg   esi,eax
  50b6c5:	inc    ebx
  50b6c6:	stos   BYTE PTR es:[edi],al
  50b6c7:	or     dl,BYTE PTR [eax]
  50b6c9:	ror    BYTE PTR [eax],0xa0
  50b6cc:	cmp    BYTE PTR [ebp-0x1a],0x6
  50b6d0:	inc    esi
  50b6d1:	inc    esi
  50b6d2:	pop    es
  50b6d3:	es ret 
  50b6d5:	ja     0x50b705
  50b6d7:	or     BYTE PTR [eax+0xcd729b9],ah
  50b6dd:	shr    DWORD PTR [edi-0x46],cl
  50b6e0:	test   BYTE PTR [ebx-0x7a0693b7],dh
  50b6e6:	xchg   ecx,eax
  50b6e7:	jne    0x50b75a
  50b6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b6ea:	aad    0x14
  50b6ec:	aam    0x3
  50b6ee:	inc    eax
  50b6ef:	popf   
  50b6f0:	jmp    0x7afb:0x6fb1f615
  50b6f7:	jg     0x50b74f
  50b6f9:	nop
  50b6fa:	test   al,0xfe
  50b6fc:	call   0xd98:0xb754b76e
  50b703:	and    edi,ecx
  50b705:	arpl   WORD PTR [edi-0x3bc69d04],cx
  50b70b:	jb     0x50b710
  50b70d:	or     al,0xfc
  50b70f:	in     al,0xe4
  50b711:	imul   ecx,DWORD PTR [edx+0x1c877df6],0xdbefa711
  50b71b:	int3   
  50b71c:	test   al,0x6f
  50b71e:	push   eax
  50b71f:	cmp    ch,BYTE PTR [edi+edi*1+0x3da2e892]
  50b726:	sti    
  50b727:	dec    edi
  50b728:	pop    esi
  50b729:	out    dx,al
  50b72a:	add    BYTE PTR [ecx-0x2c],dl
  50b72d:	outs   dx,BYTE PTR ds:[esi]
  50b72e:	xor    al,0x42
  50b730:	enter  0x1f48,0xae
  50b734:	call   0x79e3:0x5314068
  50b73b:	fwait
  50b73c:	cs dec ebx
  50b73e:	jg     0x50b6da
  50b740:	xlat   BYTE PTR ds:[ebx]
  50b741:	cld    
  50b742:	js     0x50b6d3
  50b744:	ins    BYTE PTR es:[edi],dx
  50b745:	retf   0xe612
  50b748:	mov    al,ds:0x444d8311
  50b74d:	arpl   WORD PTR [eax],sp
  50b74f:	js     0x50b75e
  50b751:	scas   eax,DWORD PTR es:[edi]
  50b752:	sbb    BYTE PTR [ebx-0x9],bh
  50b755:	push   ebx
  50b756:	jb     0x50b6f5
  50b758:	pusha  
  50b759:	lock xchg BYTE PTR [ecx],bh
  50b75c:	sar    BYTE PTR ds:0xca9ec3ed,0x1e
  50b763:	out    0x3d,al
  50b765:	and    BYTE PTR [edx+edi*8],ch
  50b768:	mov    al,0x83
  50b76a:	sar    DWORD PTR [edx],1
  50b76c:	pop    esp
  50b76d:	mov    ah,0x5b
  50b76f:	adc    DWORD PTR [edx+0x18],ecx
  50b772:	inc    edx
  50b773:	mov    WORD PTR ds:0x8db9e26,gs
  50b779:	rcr    BYTE PTR [ebx-0x10],cl
  50b77c:	jmp    0x50b728
  50b77e:	call   0x21ef723d
  50b783:	in     eax,dx
  50b784:	push   0x56
  50b786:	sbb    ebx,DWORD PTR [eax-0x4ab9b00a]
  50b78c:	stc    
  50b78d:	jle    0x50b717
  50b78f:	adc    bh,BYTE PTR [edi-0x6a]
  50b792:	stos   DWORD PTR es:[edi],eax
  50b793:	iret   
  50b794:	cmp    eax,0x97400a55
  50b799:	stos   DWORD PTR es:[edi],eax
  50b79a:	and    ah,BYTE PTR [ebx]
  50b79c:	xchg   ecx,eax
  50b79d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b79e:	xchg   ecx,eax
  50b79f:	dec    esi
  50b7a0:	add    edi,edx
  50b7a2:	jno    0x50b772
  50b7a4:	or     ebp,DWORD PTR [edx+0x7bd60e6d]
  50b7aa:	push   ebx
  50b7ab:	sbb    cl,BYTE PTR [edi-0x45]
  50b7ae:	(bad)  
  50b7af:	sti    
  50b7b0:	xlat   BYTE PTR ds:[ebx]
  50b7b1:	mov    ?,WORD PTR gs:[edx+0x4d]
  50b7b5:	neg    DWORD PTR [ebx+eax*2+0x3029076c]
  50b7bc:	inc    ecx
  50b7bd:	das    
  50b7be:	push   es
  50b7bf:	add    cl,BYTE PTR cs:[eax]
  50b7c2:	call   0xd05c:0xdac9b310
  50b7c9:	pop    es
  50b7ca:	adc    al,0x20
  50b7cc:	xchg   ebp,eax
  50b7cd:	mov    bh,0xef
  50b7cf:	pop    eax
  50b7d0:	sub    ebp,DWORD PTR [ebp-0x6f58f42f]
  50b7d6:	out    dx,eax
  50b7d7:	mov    esi,0xf3653173
  50b7dc:	push   cs
  50b7dd:	mov    dl,0x54
  50b7df:	jmp    0x50b76b
  50b7e1:	jg     0x50b77d
  50b7e3:	fsubp  st(4),st
  50b7e5:	stos   BYTE PTR es:[edi],al
  50b7e6:	push   ecx
  50b7e7:	xchg   esp,eax
  50b7e8:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  50b7ea:	add    bh,BYTE PTR ds:0xe1bb1b33
  50b7f0:	loope  0x50b813
  50b7f2:	ins    DWORD PTR es:[edi],dx
  50b7f3:	fucom  st(7)
  50b7f5:	fild   WORD PTR [edx]
  50b7f7:	in     al,0x4d
  50b7f9:	mov    ds:0x9eefa859,eax
  50b7fe:	adc    esp,0xdab77d40
  50b804:	push   ds
  50b805:	mov    BYTE PTR [ebx+0x7bb6c997],dl
  50b80b:	fld    DWORD PTR [edi+0x5500da45]
  50b811:	pop    ecx
  50b812:	sub    eax,0xed508f74
  50b817:	into   
  50b818:	xor    edi,esi
  50b81a:	push   ds
  50b81b:	int3   
  50b81c:	pop    es
  50b81d:	xchg   ch,dh
  50b81f:	clc    
  50b820:	sub    eax,0xe9925952
  50b825:	and    ecx,DWORD PTR [esi]
  50b827:	and    eax,0xa9c22a71
  50b82c:	popf   
  50b82d:	jl     0x50b872
  50b82f:	fs ret 
  50b831:	mov    dl,0x85
  50b833:	es leave 
  50b835:	inc    edx
  50b836:	add    bl,BYTE PTR [ecx-0x1c1eda63]
  50b83c:	pop    ecx
  50b83d:	popf   
  50b83e:	int    0xb8
  50b840:	shr    DWORD PTR cs:[esi-0x270b46c],1
  50b847:	in     al,dx
  50b848:	addr16 inc edx
  50b84a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50b84b:	jae    0x50b7fb
  50b84d:	and    ch,ch
  50b84f:	jmp    0x75bafb22
  50b854:	outs   dx,DWORD PTR ds:[esi]
  50b855:	pop    esp
  50b856:	shl    DWORD PTR [edi-0x58],0x35
  50b85a:	mov    dl,dl
  50b85c:	int    0x8b
  50b85e:	pop    esp
  50b85f:	push   edi
  50b860:	fild   QWORD PTR [ebp+0x1a]
  50b863:	outs   dx,DWORD PTR ds:[esi]
  50b864:	lock cs adc DWORD PTR fs:[ebp-0x2e],eax
  50b86a:	jne    0x50b840
  50b86c:	jnp    0x50b82a
  50b86e:	shl    BYTE PTR [ebx+ebx*4+0x496d1bf2],cl
  50b875:	jp     0x50b895
  50b877:	or     BYTE PTR [ebx],bl
  50b879:	js     0x50b869
  50b87b:	call   0xd644:0x41b310e4
  50b882:	repnz xchg ebp,eax
  50b884:	mov    ds:0x1e31b75b,eax
  50b889:	(bad)  
  50b88a:	cmp    al,0x4f
  50b88c:	sahf   
  50b88d:	fadd   DWORD PTR [esi]
  50b88f:	and    al,0x5
  50b891:	les    edx,FWORD PTR [ecx-0x49]
  50b894:	aad    0xd2
  50b896:	mov    esp,0xfa025d0b
  50b89b:	lock xor eax,0x54634f42
  50b8a1:	leave  
  50b8a2:	inc    eax
  50b8a3:	leave  
  50b8a4:	cli    
  50b8a5:	fnsave [esi-0x60]
  50b8a8:	add    ecx,DWORD PTR [edi+0x60b8c4ef]
  50b8ae:	leave  
  50b8af:	xor    BYTE PTR [esi-0x366916a0],dl
  50b8b5:	inc    esp
  50b8b6:	cmp    eax,0xa8e65411
  50b8bb:	mov    bh,0x81
  50b8bd:	push   edx
  50b8be:	int    0x34
  50b8c0:	stc    
  50b8c1:	(bad)  
  50b8c2:	xlat   BYTE PTR ds:[ebx]
  50b8c3:	and    al,0xf6
  50b8c5:	cdq    
  50b8c6:	(bad)  
  50b8c7:	into   
  50b8c8:	lds    ebx,FWORD PTR [ebp-0x52]
  50b8cb:	cmp    eax,0x6b95c75e
  50b8d0:	cmp    DWORD PTR [ecx-0xc52cde1],eax
  50b8d6:	addr16 mov dl,0x73
  50b8d9:	and    al,0x96
  50b8db:	call   0x5b907dab
  50b8e0:	adc    eax,0x7f05da3e
  50b8e5:	xchg   ebp,eax
  50b8e6:	pushf  
  50b8e7:	add    BYTE PTR ds:0x83703003,bh
  50b8ed:	push   esp
  50b8ee:	xor    ebx,DWORD PTR [edi]
  50b8f0:	push   0x4603ca32
  50b8f5:	push   eax
  50b8f6:	imul   esi,DWORD PTR [eax],0xffffffdb
  50b8f9:	inc    edx
  50b8fa:	cmp    eax,0x538f5bf0
  50b8ff:	jge    0x50b94f
  50b901:	cmp    DWORD PTR [eax+0x665f197b],edx
  50b907:	ds stc 
  50b909:	aaa    
  50b90a:	sahf   
  50b90b:	adc    eax,0x6a9edf26
  50b910:	es jae 0x50b917
  50b913:	bound  ecx,QWORD PTR [edi+ebp*8+0x63]
  50b917:	fwait
  50b918:	vpaddusw xmm7,xmm6,XMMWORD PTR [edi+0x16]
  50b91d:	jo     0x50b930
  50b91f:	jne    0x50b8d8
  50b921:	mov    bl,0xe
  50b923:	or     BYTE PTR [eax+0x5e],bh
  50b926:	gs enter 0x56c7,0x4f
  50b92b:	xor    DWORD PTR [edi-0x169b885],esp
  50b931:	jns    0x50b991
  50b933:	xor    DWORD PTR [edx],ebx
  50b935:	popa   
  50b936:	(bad)  
  50b937:	jnp    0x50b9a5
  50b939:	add    al,0x13
  50b93b:	dec    ecx
  50b93c:	daa    
  50b93d:	jmp    0xc7bb02e3
  50b942:	cmp    DWORD PTR [edx-0x7b],ebp
  50b945:	or     eax,0xcd98af36
  50b94a:	js     0x50b9ae
  50b94c:	cmp    edx,edx
  50b94e:	pushf  
  50b94f:	push   edx
  50b950:	pop    edx
  50b951:	out    0xd,eax
  50b953:	ins    DWORD PTR es:[edi],dx
  50b954:	lods   eax,DWORD PTR ds:[esi]
  50b955:	(bad)  
  50b956:	inc    ch
  50b958:	xchg   edx,eax
  50b959:	inc    ebx
  50b95a:	in     eax,0x23
  50b95c:	shl    ah,0x74
  50b95f:	mov    esp,0x1fa2cd7d
  50b964:	(bad)  
  50b965:	mov    ah,0xec
  50b967:	sub    dh,ah
  50b969:	das    
  50b96a:	shl    DWORD PTR [esi],0x76
  50b96d:	sahf   
  50b96e:	xor    al,0x13
  50b970:	inc    edi
  50b971:	push   cs
  50b972:	sub    BYTE PTR [ebx],al
  50b974:	fidiv  DWORD PTR [ebx+0x6f]
  50b977:	inc    ecx
  50b978:	dec    esp
  50b979:	out    dx,al
  50b97a:	hlt    
  50b97b:	and    al,bl
  50b97d:	scas   eax,DWORD PTR es:[edi]
  50b97e:	test   DWORD PTR [esi+0x59],ebp
  50b981:	add    esp,DWORD PTR [edx+0x6811131]
  50b987:	gs jb  0x50b9f2
  50b98a:	or     eax,0x3ec882f9
  50b98f:	fyl2x  
  50b991:	fisub  DWORD PTR [ebp-0x3]
  50b994:	dec    esp
  50b995:	leave  
  50b996:	inc    edx
  50b997:	(bad)  [ebp-0x56eba6fc]
  50b99d:	or     DWORD PTR [esp+ecx*1+0x1],edi
  50b9a1:	out    dx,eax
  50b9a2:	push   esi
  50b9a3:	sub    BYTE PTR [edi],bh
  50b9a5:	sbb    al,0xc3
  50b9a8:	add    al,0xbb
  50b9aa:	fdiv   DWORD PTR [edx]
  50b9ac:	dec    ebp
  50b9ad:	ficom  DWORD PTR [edi+edx*2+0x69]
  50b9b1:	in     al,dx
  50b9b2:	mov    esp,0xb24b4f85
  50b9b7:	add    DWORD PTR [ecx+0x45],0x40959f2c
  50b9be:	mov    eax,0xb501f43e
  50b9c3:	dec    eax
  50b9c4:	push   es
  50b9c5:	inc    BYTE PTR [edx+ecx*4]
  50b9c8:	and    ecx,DWORD PTR [edx]
  50b9ca:	push   edx
  50b9cb:	stos   DWORD PTR es:[edi],eax
  50b9cc:	adc    al,0x2a
  50b9ce:	and    eax,0x97b97d3
  50b9d3:	ins    BYTE PTR es:[edi],dx
  50b9d4:	push   esp
  50b9d5:	and    al,BYTE PTR [esi-0x53]
  50b9d8:	int    0x5f
  50b9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50b9db:	sub    eax,0xb396cb39
  50b9e0:	jns    0x50b9c4
  50b9e2:	sub    BYTE PTR [ebp+0x227d14d9],ah
  50b9e8:	lahf   
  50b9e9:	mov    ds:0xc0619ec7,eax
  50b9ee:	push   ss
  50b9ef:	inc    ebx
  50b9f0:	mov    eax,0xd6788a5c
  50b9f5:	ss push cs
  50b9f7:	sub    DWORD PTR ds:0x6e95479d,eax
  50b9fd:	das    
  50b9fe:	jp     0x50b9b6
  50ba00:	push   eax
  50ba01:	pop    eax
  50ba02:	and    al,0xf4
  50ba04:	cmp    DWORD PTR [eax-0x4e314e1f],edi
  50ba0a:	add    edx,edi
  50ba0c:	push   esi
  50ba0d:	test   BYTE PTR [eax],al
  50ba0f:	xchg   esp,eax
  50ba10:	fidiv  WORD PTR [ebp-0x6961011b]
  50ba16:	push   esp
  50ba17:	addr16 adc esi,ebp
  50ba1a:	std    
  50ba1b:	push   ecx
  50ba1c:	jbe    0x50b9ef
  50ba1e:	mov    bl,0xd6
  50ba20:	add    al,0x86
  50ba22:	sar    ah,0xd
  50ba25:	test   eax,0x80f036f7
  50ba2a:	rol    BYTE PTR [ebx+edx*8-0x68],1
  50ba2e:	iret   
  50ba2f:	retf   0x35ff
  50ba32:	cmc    
  50ba33:	xchg   esp,eax
  50ba34:	lods   al,BYTE PTR ds:[esi]
  50ba35:	cmp    al,0x9d
  50ba37:	ret    
  50ba38:	ins    BYTE PTR es:[edi],dx
  50ba39:	fcom   DWORD PTR [eax+0x75]
  50ba3c:	scas   eax,DWORD PTR es:[edi]
  50ba3d:	ins    BYTE PTR es:[edi],dx
  50ba3e:	mov    bl,ch
  50ba40:	aaa    
  50ba41:	jge    0x50ba48
  50ba43:	iret   
  50ba44:	inc    edx
  50ba45:	stos   BYTE PTR es:[edi],al
  50ba46:	add    eax,0xb7f443d4
  50ba4b:	aad    0xb7
  50ba4d:	mov    al,0x74
  50ba4f:	sbb    bh,bh
  50ba51:	dec    edx
  50ba52:	icebp  
  50ba53:	and    eax,0xb634c2fd
  50ba58:	bound  ebx,QWORD PTR [esi+0x18]
  50ba5b:	jnp    0x50ba57
  50ba5d:	test   eax,0xa9248a9c
  50ba62:	fisttp WORD PTR [edx+0x33906b60]
  50ba68:	mov    BYTE PTR [eax+0x39],0x99
  50ba6c:	cmc    
  50ba6d:	add    DWORD PTR [eax-0x77],esp
  50ba70:	mov    ebp,0x9a68578c
  50ba75:	daa    
  50ba76:	dec    ecx
  50ba77:	lahf   
  50ba78:	scas   eax,DWORD PTR es:[edi]
  50ba79:	jecxz  0x50ba62
  50ba7b:	cwde   
  50ba7c:	popa   
  50ba7d:	ret    
  50ba7e:	jae    0x50bac4
  50ba80:	(bad)  
  50ba81:	leave  
  50ba82:	push   ds
  50ba83:	cs cwde 
  50ba85:	jg     0x50ba2d
  50ba87:	lods   eax,DWORD PTR ds:[esi]
  50ba88:	in     eax,0xa3
  50ba8a:	jne    0x50baed
  50ba8c:	pop    ds
  50ba8d:	jl     0x50ba52
  50ba8f:	stos   DWORD PTR es:[edi],eax
  50ba90:	mov    ah,ch
  50ba92:	ret    0xd0de
  50ba95:	mov    edi,?
  50ba97:	aas    
  50ba98:	fwait
  50ba99:	lods   al,BYTE PTR ds:[esi]
  50ba9a:	mov    ch,0xe8
  50ba9c:	mov    es,ebp
  50ba9e:	fsub   DWORD PTR [esp+edx*1]
  50baa1:	adc    esi,DWORD PTR [edi]
  50baa3:	rcr    DWORD PTR [eax+0x3ad0e809],0xda
  50baaa:	pop    edx
  50baab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50baac:	mov    ecx,0x90ddf9c4
  50bab1:	adc    cl,BYTE PTR [esi+0x6e1b304d]
  50bab7:	cmp    BYTE PTR [esi-0x213493ca],0x6
  50babe:	pop    edi
  50babf:	fadd   st,st(3)
  50bac1:	and    cl,BYTE PTR [ecx]
  50bac3:	push   0x79
  50bac5:	mov    ebx,0x1a6ab6cd
  50baca:	jmp    0x8ec1:0x70510bf7
  50bad1:	xor    esi,DWORD PTR [eax-0x64]
  50bad4:	mov    edx,0x33726a92
  50bad9:	inc    eax
  50bada:	lea    edi,[ebp+ebx*2+0x7d]
  50bade:	nop
  50badf:	arpl   WORD PTR ds:0xb2468a7a,si
  50bae5:	or     bh,0x94
  50bae8:	or     DWORD PTR [edi+0x30c65266],eax
  50baee:	push   ecx
  50baef:	mov    ?,ebx
  50baf1:	adc    eax,0xb937be58
  50baf7:	cmp    dh,al
  50baf9:	pushf  
  50bafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50bafb:	lods   al,BYTE PTR ds:[esi]
  50bafc:	sub    bl,BYTE PTR [edi+0x7a9c323a]
  50bb02:	div    BYTE PTR [ebx+0x38]
  50bb05:	aad    0x8f
  50bb07:	cdq    
  50bb08:	clc    
  50bb09:	cs inc edx
  50bb0b:	xchg   ch,dl
  50bb0d:	repz sbb edi,edx
  50bb10:	iret   
  50bb11:	sbb    eax,0xbf436bfa
  50bb16:	bound  eax,QWORD PTR [ecx+edi*1]
  50bb19:	das    
  50bb1a:	sub    al,0xf9
  50bb1c:	jp     0x50bb93
  50bb1e:	xchg   DWORD PTR [edx+ebp*4+0x7a],ebp
  50bb22:	jne    0x50bb17
  50bb24:	leave  
  50bb25:	inc    eax
  50bb26:	push   ebp
  50bb27:	xchg   ebx,eax
  50bb28:	fnstenv [eax-0x30]
  50bb2b:	mov    ecx,0x20ae0158
  50bb30:	xchg   BYTE PTR [edx],bl
  50bb32:	loop   0x50baf4
  50bb34:	mov    dl,0x16
  50bb36:	nop
  50bb37:	ret    0x6c3f
  50bb3a:	inc    edx
  50bb3b:	leave  
  50bb3c:	(bad)  
  50bb3d:	dec    ecx
  50bb3e:	outs   dx,DWORD PTR ds:[esi]
  50bb3f:	fbld   TBYTE PTR [ebp+0x46e2935c]
  50bb45:	sar    DWORD PTR [edi],0x69
  50bb48:	pop    ss
  50bb49:	dec    edi
  50bb4a:	xchg   ebp,eax
  50bb4b:	fdivr  st,st(5)
  50bb4d:	dec    ecx
  50bb4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50bb4f:	fcomp  QWORD PTR [edx+0x48315f9a]
  50bb55:	stos   BYTE PTR es:[edi],al
  50bb56:	loop   0x50bba7
  50bb58:	xor    edi,DWORD PTR [ecx]
  50bb5a:	and    eax,0x5ad7eb98
  50bb5f:	xor    al,BYTE PTR [eax+eax*2+0x3d73d501]
  50bb66:	sub    al,0x21
  50bb68:	out    0xf6,al
  50bb6a:	xchg   edi,eax
  50bb6b:	outs   dx,BYTE PTR ds:[esi]
  50bb6c:	les    ebp,FWORD PTR [ebp+0x67cc2c45]
  50bb72:	push   ebx
  50bb73:	mov    ah,0xc9
  50bb75:	aam    0x6b
  50bb77:	jmp    0x174d:0xf2090389
  50bb7e:	ror    BYTE PTR [ecx],1
  50bb80:	pop    ebp
  50bb81:	call   0x6f8b3742
  50bb86:	inc    ebp
  50bb87:	push   0x67
  50bb89:	sti    
  50bb8a:	ror    DWORD PTR [esp+ebp*2+0x6cb5f3a1],0xbd
  50bb92:	ins    BYTE PTR es:[edi],dx
  50bb93:	js     0x50bbf7
  50bb95:	jl     0x50bbef
  50bb97:	xchg   ebx,eax
  50bb98:	pop    edx
  50bb99:	(bad)  
  50bb9a:	or     DWORD PTR [ecx+0x57a9e8cf],esp
  50bba0:	xchg   ecx,eax
  50bba1:	xchg   ebp,eax
  50bba2:	idiv   DWORD PTR ds:0x3dee1af7
  50bba8:	loopne 0x50bc10
  50bbaa:	jbe    0x50bb3b
  50bbac:	xchg   ebx,eax
  50bbad:	mov    bh,0x31
  50bbaf:	pop    es
  50bbb0:	jns    0x50bb6d
  50bbb2:	lock pop ss
  50bbb4:	or     BYTE PTR [esp+eax*8+0x4cb94333],al
  50bbbb:	sahf   
  50bbbc:	cmp    eax,DWORD PTR [eax+0x46a65693]
  50bbc2:	call   0x3318:0x9fb36a33
  50bbc9:	sahf   
  50bbca:	dec    esp
  50bbcb:	pop    eax
  50bbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50bbcd:	jnp    0x50bc09
  50bbcf:	push   0xa584e527
  50bbd4:	cmp    BYTE PTR [edx],ch
  50bbd6:	and    bl,bh
  50bbd8:	dec    edx
  50bbd9:	(bad)  
  50bbda:	data16 (bad) 
  50bbdc:	bnd jp 0x50bbf1
  50bbdf:	fimul  DWORD PTR [ebx+0x597a3888]
  50bbe5:	int    0x81
  50bbe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50bbe8:	and    DWORD PTR [eax+0x77],esp
  50bbeb:	mov    DWORD PTR [ebx+0x5b9a269a],ebp
  50bbf1:	sub    eax,0xcc46155a
  50bbf6:	sbb    al,0x2e
  50bbf8:	push   es
  50bbf9:	xchg   ebp,eax
  50bbfa:	mov    ecx,0x9c3c52cf
  50bbff:	mov    esp,0xb755608d
  50bc04:	out    0xcb,al
  50bc06:	mov    dl,BYTE PTR [eax+0x29]
  50bc09:	fcmovnb st,st(7)
  50bc0b:	xor    eax,0x9b293013
  50bc10:	or     al,0xfe
  50bc12:	loopne 0x50bc42
  50bc14:	mov    ch,0x4
  50bc16:	sbb    DWORD PTR [ecx-0x77890c25],0x8bc30fc0
  50bc20:	fmul   DWORD PTR [esi]
  50bc23:	fbld   TBYTE PTR [edi-0x10ca1ac7]
  50bc29:	cli    
  50bc2a:	in     al,dx
  50bc2b:	jle    0x50bca4
  50bc2d:	cdq    
  50bc2e:	cmc    
  50bc2f:	clc    
  50bc30:	dec    ebx
  50bc31:	xor    DWORD PTR [esi+edi*4-0x2ad20a23],0x151db9
  50bc3c:	mov    bl,BYTE PTR [eax]
  50bc3e:	xchg   edi,eax
  50bc3f:	xchg   esp,eax
  50bc40:	gs dec ebx
  50bc42:	push   es
  50bc43:	xchg   ebx,eax
  50bc44:	shl    DWORD PTR [ebx+0x6a],1
  50bc47:	push   esi
  50bc48:	adc    eax,0xf88dbc62
  50bc4d:	fwait
  50bc4e:	in     eax,dx
  50bc4f:	push   cs
  50bc50:	dec    ebp
  50bc51:	xchg   ebx,eax
  50bc52:	scas   eax,DWORD PTR es:[edi]
  50bc53:	mov    BYTE PTR [eax+0x43],ah
  50bc56:	mov    ebp,0x6ea20f9f
  50bc5b:	ficomp WORD PTR [ecx+0x4ceeac5e]
  50bc61:	fs jnp 0x50bc1f
  50bc64:	pop    edi
  50bc65:	je     0x50bc03
  50bc67:	push   cs
  50bc68:	imul   esi,DWORD PTR [esi+ebp*1-0x25],0x6252a08b
  50bc70:	add    ch,BYTE PTR [ecx]
  50bc72:	hlt    
  50bc73:	std    
  50bc74:	push   edi
  50bc75:	mov    al,0x25
  50bc77:	popa   
  50bc78:	pop    ss
  50bc79:	les    esi,FWORD PTR [ecx-0x44]
  50bc7c:	adc    al,0xfc
  50bc7e:	dec    esp
  50bc7f:	xchg   ecx,eax
  50bc80:	xor    eax,0x8668fa0d
  50bc85:	ins    BYTE PTR es:[edi],dx
  50bc86:	lods   eax,DWORD PTR ds:[esi]
  50bc87:	sub    al,0x3
  50bc89:	jno    0x50bccb
  50bc8b:	call   0xfa98:0x947e0005
  50bc92:	push   ds
  50bc93:	and    cl,BYTE PTR [esp+ecx*2+0x13]
  50bc97:	jno    0x50bc70
  50bc99:	push   ebp
  50bc9a:	jb     0x50bce4
  50bc9c:	dec    esi
  50bc9d:	pop    esp
  50bc9e:	mov    dh,0xa3
  50bca0:	sbb    cl,dl
  50bca2:	add    eax,0x9c0cb388
  50bca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50bca8:	mov    eax,ds:0x1d911844
  50bcad:	lea    esi,[edx+ebp*2-0x11420205]
  50bcb4:	cli    
  50bcb5:	pop    ebp
  50bcb6:	push   ecx
  50bcb7:	fdiv   st,st(7)
  50bcb9:	fsubr  QWORD PTR [edi-0x6652628b]
  50bcbf:	iret   
  50bcc0:	push   ss
  50bcc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50bcc2:	xchg   esp,eax
  50bcc3:	inc    sp
  50bcc5:	xlat   BYTE PTR ds:[ebx]
  50bcc6:	mov    esp,0xbe2a4bcf
  50bccb:	sub    BYTE PTR [ecx-0x4d66c0a2],ch
  50bcd1:	pop    es
  50bcd2:	xor    edx,DWORD PTR [eax]
  50bcd4:	lds    esp,FWORD PTR [ebp-0x38]
  50bcd7:	jp     0x50bccf
  50bcd9:	fld    QWORD PTR [ebx]
  50bcdb:	mov    ds:0x806b5fbc,al
  50bce0:	bound  esp,QWORD PTR [edi+ecx*2-0x5c157b80]
  50bce7:	sbb    DWORD PTR [ebx],ecx
  50bce9:	mov    edi,0x639be25c
  50bcee:	push   0xffffffb1
  50bcf0:	adc    eax,0x20cf3213
  50bcf5:	cmp    eax,edi
  50bcf7:	mov    ch,0xe9
  50bcf9:	sub    BYTE PTR [edx+esi*8+0x6a],dh
  50bcfd:	cmp    eax,0x98d79ad6
  50bd02:	push   eax
  50bd03:	test   DWORD PTR [ecx-0x283c057],ecx
  50bd09:	jp     0x50bcb6
  50bd0b:	daa    
  50bd0c:	sar    BYTE PTR [edi],cl
  50bd0e:	test   DWORD PTR [eax-0x2e3529fe],0xbc94bea5
  50bd18:	ret    
  50bd19:	rcr    edx,1
  50bd1b:	jp     0x50bcc0
  50bd1d:	jle    0x50bd64
  50bd1f:	mov    al,ds:0x4cf923b3
  50bd24:	lea    esp,[ebx]
  50bd26:	jp     0x50bd51
  50bd28:	retf   0x6f85
  50bd2b:	mov    dl,0x1d
  50bd2d:	and    DWORD PTR [edx-0x79],edi
  50bd30:	in     eax,dx
  50bd31:	mov    dh,0x1d
  50bd33:	jecxz  0x50bd1e
  50bd35:	xlat   BYTE PTR ds:[ebx]
  50bd36:	je     0x50bd0f
  50bd38:	pop    edi
  50bd39:	sub    al,0xfa
  50bd3b:	lods   al,BYTE PTR ds:[esi]
  50bd3c:	rcr    DWORD PTR [edi+0x6672a815],cl
  50bd42:	dec    edx
  50bd43:	out    dx,al
  50bd44:	or     bh,BYTE PTR [ebx-0x3c]
  50bd47:	shl    DWORD PTR [edx+0x4f],0x29
  50bd4b:	fdivr  DWORD PTR [ecx+0x1252d1c8]
  50bd51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50bd52:	jb     0x50bcf0
  50bd54:	rcr    BYTE PTR [eax],cl
  50bd56:	call   0x32a8:0xe62cb3e2
  50bd5d:	push   cs
  50bd5e:	cmp    al,0x7c
  50bd60:	pop    eax
  50bd61:	add    ah,BYTE PTR [edx+esi*4-0x34]
  50bd65:	mov    ah,0xa0
  50bd67:	rcl    BYTE PTR [ebp-0x27f7cf2b],0x4
  50bd6e:	(bad)  [ecx]
  50bd70:	xor    DWORD PTR [esi],ebx
  50bd72:	data16 in al,0x3
  50bd75:	js     0x50bd01
  50bd77:	jl     0x50bd1a
  50bd79:	data16 add al,0x20
  50bd7c:	fidiv  WORD PTR [eax]
  50bd7e:	(bad)  [ebp+0x1d664f36]
  50bd84:	push   edi
  50bd85:	or     BYTE PTR [esp+edx*4-0x60],0xf4
  50bd8a:	cs scas al,BYTE PTR es:[edi]
  50bd8c:	inc    ebx
  50bd8d:	mov    esi,0x639f54c9
  50bd92:	fild   QWORD PTR [ebx-0x45]
  50bd95:	mov    ecx,0xae52a6df
  50bd9a:	js     0x50bd31
  50bd9c:	xchg   edx,eax
  50bd9d:	sbb    dl,ch
  50bd9f:	push   eax
  50bda0:	mov    WORD PTR [edi],ds
  50bda2:	popf   
  50bda3:	mov    ebp,0xfc1106a9
  50bda8:	(bad)  
  50bda9:	das    
  50bdaa:	mov    bl,0x6e
  50bdac:	stos   DWORD PTR es:[edi],eax
  50bdad:	add    eax,0xebb83301
  50bdb2:	(bad)  
  50bdb3:	enter  0x7371,0xf5
  50bdb7:	pop    esp
  50bdb8:	xchg   esp,eax
  50bdb9:	sub    ebx,DWORD PTR [edi-0x21d41b31]
  50bdbf:	fild   WORD PTR [ebp+0x4402144c]
  50bdc5:	mov    ecx,ds
  50bdc7:	mov    edx,0x97814d52
  50bdcc:	ins    BYTE PTR es:[edi],dx
  50bdcd:	add    ebx,DWORD PTR [ebx-0x34eaf738]
  50bdd3:	cli    
  50bdd4:	dec    edi
  50bdd5:	rcr    DWORD PTR [edx],0x7a
  50bdd8:	mov    cs,WORD PTR [ecx+ecx*2]
  50bddb:	add    al,0x31
  50bddd:	mov    dl,0x57
  50bddf:	adc    al,0x6d
  50bde1:	fcomp  QWORD PTR [ebp+0x36]
  50bde4:	xchg   ebx,eax
  50bde5:	pop    ecx
  50bde6:	push   ebx
  50bde7:	jns    0x50be13
  50bde9:	div    edi
  50bdeb:	dec    ebx
  50bdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50bded:	or     al,0x63
  50bdef:	jnp    0x50be32
  50bdf1:	mov    edx,cs
  50bdf3:	jl     0x50be27
  50bdf5:	cmp    DWORD PTR es:[edi],0xffffffb7
  50bdf9:	arpl   WORD PTR [edx-0x38],si
  50bdfc:	rcr    BYTE PTR [ebx-0x41e34ea7],0x2d
  50be03:	mov    ah,0x13
  50be05:	adc    DWORD PTR [ebp+0xc],0xb6a48030
  50be0c:	adc    BYTE PTR [edx-0x3f],al
  50be0f:	aam    0xeb
  50be11:	jp     0x50be5c
  50be13:	cwde   
  50be14:	aaa    
  50be15:	sahf   
  50be16:	fisttp DWORD PTR ds:0x8782a4da
  50be1c:	inc    DWORD PTR [ecx-0x70583e10]
  50be22:	in     al,dx
  50be23:	gs ret 
  50be25:	(bad)  
  50be26:	adc    ah,dh
  50be28:	lods   al,BYTE PTR ds:[esi]
  50be29:	inc    esi
  50be2a:	int3   
  50be2b:	add    bl,BYTE PTR [edi]
  50be2d:	sbb    edi,DWORD PTR [esi+0x16c822a6]
  50be33:	jmp    0x50be91
  50be35:	push   eax
  50be36:	pushf  
  50be37:	xor    eax,DWORD PTR [esi]
  50be39:	adc    al,BYTE PTR [eax-0x5da21595]
  50be3f:	jmp    FWORD PTR ds:0x8453d710
  50be45:	mov    ebp,0x8eb07c44
  50be4a:	jnp    0x50bddd
  50be4c:	sub    eax,0xf8956295
  50be51:	pop    edx
  50be52:	mov    edi,0x163368aa
  50be57:	loop   0x50be58
  50be59:	xchg   ecx,eax
  50be5a:	sub    eax,0x44892a98
  50be5f:	push   0xffffffe4
  50be61:	loope  0x50bed9
  50be63:	sub    cl,BYTE PTR ds:0xdbe75a42
  50be69:	mov    ch,0x55
  50be6b:	scas   al,BYTE PTR es:[edi]
  50be6c:	sbb    al,0x12
  50be6e:	retf   
  50be6f:	ret    
  50be70:	adc    al,ah
  50be72:	aaa    
  50be73:	sbb    al,BYTE PTR [ecx-0x6c5f0e16]
  50be79:	mov    ch,0x1e
  50be7b:	(bad)  
  50be7c:	and    eax,0xb2e4851e
  50be81:	ds push edx
  50be83:	in     al,dx
  50be84:	sti    
  50be85:	mov    ebx,0x31939803
  50be8a:	cmp    al,0x7a
  50be8c:	jmp    0xe7b6540f
  50be91:	jo     0x50be8c
  50be93:	iret   
  50be94:	jg     0x50befb
  50be96:	mov    bl,0xfc
  50be98:	push   edi
  50be99:	je     0x50beab
  50be9b:	cdq    
  50be9c:	(bad)  
  50be9d:	pusha  
  50be9e:	ret    0x4300
  50bea1:	jp     0x50be5d
  50bea3:	out    0x1f,eax
  50bea5:	lock mov esp,esp
  50bea8:	repnz or esp,DWORD PTR [eax-0x3062b018]
  50beaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50beb0:	loope  0x50bee1
  50beb2:	test   ah,al
  50beb4:	adc    esi,DWORD PTR [eax]
  50beb6:	and    dh,cl
  50beb8:	(bad)  
  50beba:	inc    ebp
  50bebb:	imul   dl
  50bebd:	or     al,0x4
  50bebf:	in     al,0xda
  50bec1:	push   esp
  50bec2:	push   esi
  50bec3:	add    ebp,ebp
  50bec5:	jns    0x50bea4
  50bec7:	fisubr WORD PTR [edi-0x47fe9197]
  50becd:	and    DWORD PTR [edx+0x15],edi
  50bed0:	mov    ds:0xaa497302,al
  50bed5:	xchg   edx,eax
  50bed6:	push   edi
  50bed7:	daa    
  50bed8:	mov    ?,WORD PTR [edi]
  50beda:	in     al,0x51
  50bedc:	add    DWORD PTR [edx+0x0],ebx
  50bedf:	(bad)  
  50bee0:	or     al,0x3a
  50bee2:	lock sub edx,eax
  50bee5:	and    edx,DWORD PTR [edi]
  50bee7:	mov    al,0x32
  50bee9:	adc    DWORD PTR [esi+eax*2],esp
  50beec:	dec    esp
  50beed:	xor    BYTE PTR [ebx],0x0
  50bef0:	pop    ds
  50bef1:	pop    edx
  50bef2:	mov    ebx,0x8e4bbe51
  50bef7:	ret    0x71c
  50befa:	add    cl,bh
  50befc:	lods   al,BYTE PTR ds:[esi]
  50befd:	ds mov cl,0xb7
  50bf00:	test   eax,0x3b85ab25
  50bf05:	test   BYTE PTR [ebx+ebp*1+0xb1a7f34],al
  50bf0c:	je     0x50bf18
  50bf0e:	clc    
  50bf0f:	add    DWORD PTR [edx+0x643065a5],0xf6a36088
  50bf19:	pop    edx
  50bf1a:	jge    0x50bf29
  50bf1c:	xchg   DWORD PTR [ebp-0xce59f7],ebx
  50bf22:	maskmovq mm2,(bad)
  50bf23:	not    DWORD PTR [ecx]
  50bf25:	dec    ecx
  50bf26:	int3   
  50bf27:	ret    0x1795
  50bf2a:	dec    ebx
  50bf2b:	and    esp,DWORD PTR [ecx-0x34]
  50bf2e:	add    BYTE PTR [eax],0xf4
  50bf31:	dec    esi
  50bf32:	push   eax
  50bf33:	loop   0x50bf8e
  50bf35:	sub    ebp,DWORD PTR [eax]
  50bf37:	push   edx
  50bf38:	sub    bh,cl
  50bf3a:	mov    esi,0x34436b25
  50bf3f:	mov    ecx,0xc1f62128
  50bf44:	ret    
  50bf45:	cmp    eax,0xebae8268
  50bf4a:	push   ecx
  50bf4b:	outs   dx,DWORD PTR ds:[esi]
  50bf4c:	nop
  50bf4d:	sub    eax,0x4fdaf030
  50bf52:	daa    
  50bf53:	js     0x50bf48
  50bf55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50bf56:	dec    edi
  50bf57:	jo     0x50bf5f
  50bf59:	sub    ebx,DWORD PTR [edi+eiz*8]
  50bf5c:	xchg   esp,eax
  50bf5d:	mov    esi,0xdc9cdfae
  50bf62:	hlt    
  50bf63:	cmp    BYTE PTR [ebp+0x5c],bl
  50bf66:	pop    edx
  50bf67:	(bad)  
  50bf68:	stos   BYTE PTR es:[edi],al
  50bf69:	lods   eax,DWORD PTR ds:[esi]
  50bf6a:	sub    al,0xc1
  50bf6c:	lds    ebx,FWORD PTR [ebx-0x55]
  50bf6f:	outs   dx,DWORD PTR ds:[esi]
  50bf70:	mov    eax,ds:0xb9fecc03
  50bf75:	mov    dh,bh
  50bf77:	mov    ds:0xb83fb6ab,al
  50bf7c:	dec    esi
  50bf7d:	rcl    DWORD PTR [ebp-0x2e],0x9c
  50bf81:	and    BYTE PTR [edx+edi*2+0xf],al
  50bf85:	cmp    DWORD PTR [ebx],esp
  50bf87:	(bad)  
  50bf88:	mov    ecx,0x370834c0
  50bf8d:	ins    BYTE PTR es:[edi],dx
  50bf8e:	das    
  50bf8f:	xchg   BYTE PTR [edx],bh
  50bf91:	and    DWORD PTR [ecx+0x4581360d],edx
  50bf97:	cmp    BYTE PTR [ecx],dh
  50bf99:	pop    ecx
  50bf9a:	popf   
  50bf9b:	test   BYTE PTR [ebp+0x6abc5654],bl
  50bfa1:	pop    ebp
  50bfa2:	frstor [edi]
  50bfa4:	int    0xf5
  50bfa6:	shr    DWORD PTR [ebx],cl
  50bfa8:	pop    esp
  50bfa9:	push   ebx
  50bfaa:	jbe    0x50bf95
  50bfac:	lahf   
  50bfad:	add    eax,0x2fdc185d
  50bfb2:	jns    0x50bf5f
  50bfb4:	dec    esi
  50bfb5:	inc    eax
  50bfb6:	sub    eax,0xbe727ff4
  50bfbb:	idiv   esi
  50bfbd:	dec    ebp
  50bfbe:	adc    eax,0xaa72eda3
  50bfc3:	pop    esp
  50bfc4:	jmp    0x9e3bb3ea
  50bfc9:	int3   
  50bfca:	int    0xc7
  50bfcc:	inc    ecx
  50bfcd:	(bad)  
  50bfce:	into   
  50bfcf:	jmp    0x1e8ba5b
  50bfd4:	aam    0xf0
  50bfd6:	dec    ecx
  50bfd7:	repnz (bad) 
  50bfd9:	fbld   TBYTE PTR [edi+0x7d685776]
  50bfdf:	fmul   DWORD PTR [edx+0x4b]
  50bfe2:	and    edx,DWORD PTR [eax+0x5c]
  50bfe5:	daa    
  50bfe6:	mov    edi,0xd440dece
  50bfeb:	jno    0x50bfd6
  50bfed:	out    dx,eax
  50bfee:	arpl   WORD PTR [ebx-0x3e1d243b],bp
  50bff4:	mov    cl,0xfb
  50bff6:	sub    BYTE PTR ds:0x1673998d,0x29
  50bffd:	into   
  50bffe:	xchg   BYTE PTR [ebp+0x2b],ah
  50c001:	mov    ecx,0x364ab8f9
  50c006:	jmp    0x22c624f2
  50c00b:	dec    esi
  50c00c:	ret    0x14f6
  50c00f:	mov    gs,WORD PTR [ecx+0x15dc8953]
  50c015:	aaa    
  50c016:	fdivr  DWORD PTR [esi+0x4aadd502]
  50c01c:	inc    ebx
  50c01d:	mul    DWORD PTR [edi]
  50c01f:	cmc    
  50c020:	xor    BYTE PTR [ebx+0x4016fc08],ah
  50c026:	dec    edx
  50c027:	fs (bad) 
  50c029:	mov    dh,0x48
  50c02b:	loop   0x50c06f
  50c02d:	adc    dl,bh
  50c02f:	push   ecx
  50c030:	popa   
  50c031:	popf   
  50c032:	xor    DWORD PTR [ebx-0x49],esi
  50c035:	repnz call 0x7661:0x5f300b43
  50c03d:	pop    ebp
  50c03e:	inc    ebp
  50c03f:	push   esp
  50c040:	pop    esi
  50c041:	addr16 mov dl,0x98
  50c044:	imul   esi,DWORD PTR [eax+0x7365536b],0x2e
  50c04b:	iret   
  50c04c:	ja     0x50bfeb
  50c04e:	sti    
  50c04f:	bound  eax,QWORD PTR [ebp-0x3d]
  50c052:	pop    eax
  50c053:	push   esi
  50c054:	sub    ch,bl
  50c056:	mov    eax,0xfaeaeee4
  50c05b:	xlat   BYTE PTR ds:[ebx]
  50c05c:	fdivr  QWORD PTR [ebp+eiz*4-0x77]
  50c060:	cmc    
  50c061:	sti    
  50c062:	(bad)  
  50c063:	iret   
  50c064:	jmp    0x17ec:0xa641df3
  50c06b:	js     0x50c06d
  50c06d:	xchg   ebx,eax
  50c06e:	ss add al,0x80
  50c071:	sbb    BYTE PTR [edi],0x5d
  50c074:	imul   esp,esi,0xb2135dd8
  50c07a:	add    al,0x60
  50c07c:	sbb    ch,BYTE PTR [ebx-0x66ff6473]
  50c082:	inc    ebp
  50c083:	mov    ah,0xe0
  50c085:	jmp    0x3d47:0xa873dd
  50c08c:	dec    ecx
  50c08d:	fincstp 
  50c08f:	and    DWORD PTR [edi+ebp*2],0xb02c9d4c
  50c096:	pop    ebx
  50c097:	mov    ?,esp
  50c099:	aas    
  50c09a:	xchg   edi,eax
  50c09b:	or     eax,0x19997b21
  50c0a0:	fstp   DWORD PTR [ecx+ecx*8]
  50c0a3:	inc    ebx
  50c0a4:	lock out dx,al
  50c0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50c0a7:	dec    esp
  50c0a8:	sar    BYTE PTR [eax+ebp*4],cl
  50c0ab:	xchg   esp,eax
  50c0ac:	out    dx,al
  50c0ad:	add    al,ah
  50c0af:	fcomp  QWORD PTR [edi+edx*1-0x9eecd57]
  50c0b6:	and    BYTE PTR [ebp+0x70],al
  50c0b9:	test   al,0xce
  50c0bb:	fwait
  50c0bc:	inc    edx
  50c0bd:	out    dx,eax
  50c0be:	aaa    
  50c0bf:	xchg   esi,eax
  50c0c0:	ret    
  50c0c1:	sub    DWORD PTR [eax+0x3a],ebp
  50c0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50c0c5:	idiv   BYTE PTR [eax-0x48]
  50c0c8:	les    ecx,FWORD PTR [edi-0x2f1778f]
  50c0ce:	mov    cl,0x5f
  50c0d0:	(bad)  
  50c0d1:	sbb    DWORD PTR [ebx+0x69],ecx
  50c0d4:	rcl    BYTE PTR [ebp-0x1c],0x89
  50c0d8:	in     eax,0xef
  50c0da:	jae    0x50c137
  50c0dc:	jns    0x50c0d0
  50c0de:	in     eax,0xb
  50c0e0:	fisub  DWORD PTR [eax]
  50c0e2:	(bad)
  50c0e6:	rol    DWORD PTR [esi],cl
  50c0e8:	cld    
  50c0e9:	adc    bl,bl
  50c0eb:	int    0xc1
  50c0ed:	std    
  50c0ee:	xchg   ecx,eax
  50c0ef:	(bad)  
  50c0f0:	jg     0x50c159
  50c0f2:	fmul   QWORD PTR [ebp+0x1f0d45c1]
  50c0f8:	ss pop ecx
  50c0fa:	out    dx,eax
  50c0fb:	(bad)  
  50c0fc:	fdiv   st,st(6)
  50c0fe:	sub    esp,eax
  50c100:	xor    ch,ah
  50c102:	mov    ebp,0x3d6f853
  50c107:	and    DWORD PTR [ecx+ebx*2-0x4f],esi
  50c10b:	pusha  
  50c10c:	ins    DWORD PTR es:[edi],dx
  50c10d:	enter  0xf0e5,0x5b
  50c111:	ja     0x50c15b
  50c113:	mov    eax,0x646d2fd9
  50c118:	cmpxchg DWORD PTR [edx+ebp*1+0x25a473f8],edx
  50c120:	jecxz  0x50c122
  50c122:	aam    0x80
  50c124:	rol    BYTE PTR [esi-0x4d],1
  50c127:	jbe    0x50c0bd
  50c129:	push   ebx
  50c12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50c12b:	push   ebx
  50c12c:	jo     0x50c155
  50c12e:	mov    edx,0xf6122c6c
  50c133:	ins    DWORD PTR es:[edi],dx
  50c134:	arpl   bx,bx
  50c136:	cmp    eax,0xf8d6087c
  50c13b:	lds    esp,FWORD PTR [eax+0x4f]
  50c13e:	cmp    DWORD PTR [ebx-0x5a489adf],ebx
  50c144:	mov    ?,WORD PTR [eax+0x57]
  50c147:	jbe    0x50c10c
  50c149:	jnp    0x50c0d8
  50c14b:	xor    cl,ah
  50c14d:	popa   
  50c14e:	xor    ah,BYTE PTR [edi]
  50c150:	stc    
  50c151:	mov    bl,0x2e
  50c153:	xchg   BYTE PTR [edi+0xaf3871a],cl
  50c159:	xor    BYTE PTR [ebx+0x1924f490],ah
  50c15f:	das    
  50c160:	fdiv   DWORD PTR [ecx+0x43]
  50c163:	mov    al,0xd8
  50c165:	push   ds
  50c166:	add    ch,BYTE PTR [ecx+eiz*4]
  50c169:	shr    DWORD PTR [edx],cl
  50c16b:	dec    ebx
  50c16c:	cmp    BYTE PTR [ecx-0x3e66a470],dl
  50c172:	mov    ebp,0xe31e5b5
  50c177:	xor    DWORD PTR [ecx+0x6bd930e0],esp
  50c17d:	(bad)  
  50c17e:	ja     0x50c1db
  50c180:	cmp    eax,0x7f2f91f4
  50c185:	leave  
  50c186:	mov    ds:0x147aeb26,eax
  50c18b:	sahf   
  50c18c:	ins    DWORD PTR es:[edi],dx
  50c18d:	xchg   esi,eax
  50c18e:	mov    bl,0xb0
  50c190:	pop    eax
  50c191:	idiv   BYTE PTR [edi]
  50c193:	xchg   edx,eax
  50c194:	adc    ebp,DWORD PTR ds:0xeba0b257
  50c19a:	leave  
  50c19b:	lock loop 0x50c13a
  50c19e:	js     0x50c15f
  50c1a0:	cld    
  50c1a1:	repz adc cx,di
  50c1a5:	xor    ecx,DWORD PTR [edi]
  50c1a7:	adc    ebx,edi
  50c1a9:	dec    ebx
  50c1aa:	mov    edi,0xe99f9c74
  50c1af:	fistp  WORD PTR [ebp-0x20]
  50c1b2:	mov    edx,0x284579bb
  50c1b7:	in     eax,0x25
  50c1b9:	inc    eax
  50c1ba:	ror    BYTE PTR [edi+0x1f],0xe3
  50c1be:	add    DWORD PTR [ebx-0x4b],edi
  50c1c1:	dec    esi
  50c1c2:	sub    ecx,DWORD PTR [esi]
  50c1c4:	and    dl,BYTE PTR [eax+0x6f]
  50c1c7:	out    0x93,al
  50c1c9:	lds    edx,FWORD PTR [esi]
  50c1cb:	mov    al,0x17
  50c1cd:	xor    BYTE PTR [edx-0x34b33627],cl
  50c1d3:	jg     0x50c232
  50c1d5:	sub    al,0xf9
  50c1d7:	leave  
  50c1d8:	mov    ebx,0xfb5a9847
  50c1dd:	mov    ebx,0x9dc8d7f3
  50c1e2:	xchg   edi,eax
  50c1e3:	bound  ebx,QWORD PTR [ebx-0x2]
  50c1e6:	cli    
  50c1e7:	adc    ecx,DWORD PTR [eax+0x10]
  50c1ea:	in     eax,0xf
  50c1ec:	ins    DWORD PTR es:[edi],dx
  50c1ed:	xchg   edx,eax
  50c1ee:	pop    eax
  50c1ef:	out    0xa8,eax
  50c1f1:	test   BYTE PTR [ecx],0xd6
  50c1f4:	dec    ecx
  50c1f5:	imul   edx,DWORD PTR [edi+0x56],0x2a1313c5
  50c1fc:	in     al,0x6c
  50c1fe:	add    al,0x7c
  50c200:	or     eax,0xfe8480ca
  50c205:	ja     0x50c1be
  50c207:	xchg   ecx,eax
  50c208:	stos   BYTE PTR es:[edi],al
  50c209:	das    
  50c20a:	push   ds
  50c20b:	mov    esi,0x2ac1df61
  50c210:	push   es
  50c211:	int3   
  50c212:	les    edi,FWORD PTR [ecx]
  50c214:	dec    eax
  50c215:	or     eax,0xcac32f51
  50c21a:	add    eax,0xe418abf0
  50c21f:	js     0x50c261
  50c221:	scas   eax,DWORD PTR es:[edi]
  50c222:	cli    
  50c223:	and    cl,cl
  50c225:	jp     0x50c230
  50c227:	retf   
  50c228:	add    edi,DWORD PTR [edi+ebx*4+0x1bfe7ae2]
  50c22f:	jl     0x50c293
  50c231:	jecxz  0x50c277
  50c233:	out    dx,al
  50c234:	mov    bh,0xcb
  50c236:	push   edi
  50c237:	daa    
  50c238:	sub    al,0x9b
  50c23a:	push   ebp
  50c23b:	out    dx,al
  50c23c:	fsub   DWORD PTR [eax+0x7728af30]
  50c242:	sbb    bh,dh
  50c244:	sub    edi,DWORD PTR [ebx-0x1fcf2886]
  50c24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50c24b:	xor    BYTE PTR [ecx-0x52d7e2dd],0xab
  50c252:	mov    ebx,DWORD PTR [edi]
  50c254:	mov    eax,0xeeaf2f77
  50c259:	mov    ch,0x6f
  50c25b:	dec    esp
  50c25c:	out    0x7a,eax
  50c25e:	sar    eax,cl
  50c260:	cmp    al,0xbb
  50c262:	and    DWORD PTR [eax+ecx*1],ebp
  50c265:	sub    esp,ecx
  50c267:	and    ah,dh
  50c269:	push   cs
  50c26a:	addr16 pop esi
  50c26c:	xchg   ebp,eax
  50c26d:	cmp    eax,DWORD PTR [esi]
  50c26f:	dec    esp
  50c270:	pushf  
  50c271:	(bad)  
  50c272:	or     al,0x67
  50c274:	enter  0x773c,0x6c
  50c278:	fcomip st,st(6)
  50c27a:	std    
  50c27b:	jo     0x50c2cf
  50c27d:	pushf  
  50c27e:	cmp    DWORD PTR [ebp+0x50a8fb6f],eax
  50c284:	cmp    dl,dh
  50c286:	push   ecx
  50c287:	shl    BYTE PTR [esi+0x51e7a130],cl
  50c28d:	pop    ecx
  50c28e:	xchg   DWORD PTR [eax],ebx
  50c290:	fidivr DWORD PTR [ebx]
  50c292:	call   0x6f42:0xbe731e38
  50c299:	js     0x50c240
  50c29b:	adc    BYTE PTR [ebp-0x71fe0bb8],0x7d
  50c2a2:	data16 lahf 
  50c2a4:	jp     0x50c2f4
  50c2a6:	mov    dh,0x36
  50c2a8:	out    dx,eax
  50c2a9:	fnstenv [esi-0x68]
  50c2ac:	out    dx,eax
  50c2ad:	inc    esp
  50c2ae:	add    ah,dh
  50c2b0:	mov    dh,0xf9
  50c2b2:	mov    dl,dl
  50c2b4:	jecxz  0x50c279
  50c2b6:	icebp  
  50c2b7:	inc    bp
  50c2b9:	out    0xec,eax
  50c2bb:	and    BYTE PTR [ebx-0x68e87e97],bh
  50c2c1:	mov    esp,ecx
  50c2c3:	pop    ebx
  50c2c4:	lahf   
  50c2c5:	pop    ds
  50c2c6:	jmp    0x8954:0x35fbaf59
  50c2cd:	fist   DWORD PTR [ebp+eax*4-0x40]
  50c2d1:	nop
  50c2d2:	fstp   TBYTE PTR [edx+ebx*1-0x2b502e81]
  50c2d9:	jge    0x50c2b0
  50c2db:	mov    ch,0xe8
  50c2dd:	iret   
  50c2de:	jnp    0x50c294
  50c2e0:	and    al,0x3e
  50c2e2:	stc    
  50c2e3:	adc    dh,BYTE PTR [edi]
  50c2e5:	fistp  DWORD PTR [ebx-0x73]
  50c2e8:	rcl    BYTE PTR [ebx+0x6b],0xe9
  50c2ec:	repnz dec eax
  50c2ee:	sub    BYTE PTR [eax+0x6fe3bd2],ah
  50c2f4:	sub    ebp,eax
  50c2f6:	leave  
  50c2f7:	and    al,0xfb
  50c2f9:	jne    0x50c2f1
  50c2fb:	aaa    
  50c2fc:	lods   al,BYTE PTR ds:[esi]
  50c2fd:	adc    DWORD PTR [esi+eiz*8-0x25efda52],eax
  50c304:	add    DWORD PTR [ebp-0x3e],esp
  50c307:	or     ebx,DWORD PTR [esi-0x2d]
  50c30a:	aam    0x6c
  50c30c:	js     0x50c2d5
  50c30e:	xchg   ebx,eax
  50c30f:	add    cl,BYTE PTR [ebx]
  50c311:	xor    dh,BYTE PTR ds:0xed7f951c
  50c317:	in     eax,dx
  50c318:	ds lock pop eax
  50c31b:	enter  0xe96c,0x30
  50c31f:	in     eax,dx
  50c320:	mov    bh,0xc8
  50c322:	dec    esi
  50c323:	push   ecx
  50c324:	bound  esp,QWORD PTR [ebx-0x455b5e0e]
  50c32a:	xchg   esp,eax
  50c32b:	mov    es,WORD PTR [esi-0x44e2e906]
  50c331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50c332:	pop    ebp
  50c333:	gs retf 0xdec3
  50c337:	out    dx,eax
  50c338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50c339:	xor    bh,ch
  50c33b:	xchg   edx,eax
  50c33c:	push   esp
  50c33d:	pop    eax
  50c33e:	call   0x7722ffd4
  50c343:	push   ebp
  50c344:	aaa    
  50c345:	fdiv   DWORD PTR [eax-0x62]
  50c348:	mov    ds:0xb1a96f7f,eax
  50c34d:	cmp    dh,0x6f
  50c350:	adc    eax,esp
  50c352:	hlt    
  50c353:	into   
  50c354:	sbb    eax,0x4a272a5a
  50c359:	inc    ecx
  50c35a:	add    bh,ch
  50c35c:	jne    0x50c39b
  50c35e:	push   0x24
  50c360:	jg     0x50c3be
  50c362:	push   DWORD PTR [edi+edx*4-0x40]
  50c366:	push   es
  50c367:	sbb    BYTE PTR [eax],dl
  50c369:	pusha  
  50c36a:	jmp    0x50c317
  50c36c:	and    al,0xe9
  50c36e:	pop    esp
  50c36f:	mov    bh,bl
  50c371:	loop   0x50c3da
  50c373:	(bad)  
  50c374:	int3   
  50c375:	xchg   edx,eax
  50c376:	sar    cl,1
  50c378:	mov    WORD PTR [edi+0x129d95d6],?
  50c37e:	stos   BYTE PTR es:[edi],al
  50c37f:	push   ebp
  50c380:	or     esp,DWORD PTR [ecx+0x52acdfbb]
  50c386:	push   0x1b
  50c388:	mov    esp,0xdf9f3238
  50c38d:	std    
  50c38e:	mov    es,WORD PTR [esi+0x29]
  50c391:	test   ebx,ebx
  50c393:	jge    0x50c3e6
  50c395:	mov    bh,0x74
  50c397:	mov    dl,0xeb
  50c399:	cmp    DWORD PTR [ebp-0x497cfb48],edx
  50c39f:	je     0x50c35f
  50c3a1:	mov    ebx,0xafafc09c
  50c3a6:	je     0x50c33b
  50c3a8:	mov    ebp,0x9722698e
  50c3ad:	push   ds
  50c3ae:	add    DWORD PTR [esi],ebx
  50c3b0:	jmp    0xce5d82f0
  50c3b5:	jmp    0x50c33f
  50c3b7:	mov    edi,0x7066b102
  50c3bc:	sbb    dh,ah
  50c3be:	and    ch,BYTE PTR es:[esi]
  50c3c1:	pop    ds
  50c3c2:	mov    ebx,eax
  50c3c4:	cmp    eax,0xa796aa91
  50c3c9:	popa   
  50c3ca:	pop    ds
  50c3cb:	cmc    
  50c3cc:	lahf   
  50c3cd:	fisttp WORD PTR [ecx+edi*1+0x2dc8945e]
  50c3d4:	cmp    bl,BYTE PTR [edx+0x1b]
  50c3d7:	pop    edi
  50c3d8:	inc    eax
  50c3d9:	out    0x2c,al
  50c3db:	fiadd  DWORD PTR [edx]
  50c3dd:	mov    bl,0x49
  50c3df:	push   edi
  50c3e0:	mov    esi,DWORD PTR [edi+eax*2-0x5258c56b]
  50c3e7:	mov    ebx,0xb554a51d
  50c3ec:	xlat   BYTE PTR ds:[ebx]
  50c3ed:	sahf   
  50c3ee:	jecxz  0x50c463
  50c3f0:	and    cl,BYTE PTR [edx]
  50c3f2:	nop
  50c3f3:	adc    esp,ebp
  50c3f5:	int    0x64
  50c3f7:	ins    BYTE PTR es:[edi],dx
  50c3f8:	mov    cl,0x26
  50c3fa:	inc    bp
  50c3fc:	les    edx,FWORD PTR [ebx-0x16]
  50c3ff:	xor    DWORD PTR ds:[esi],ebx
  50c402:	paddd  mm4,QWORD PTR [edi+0x1716919f]
  50c409:	jmp    0x50c431
  50c40b:	pop    ds
  50c40c:	pop    ebp
  50c40d:	loop   0x50c3ce
  50c40f:	inc    DWORD PTR [ebp+0x32]
  50c412:	sub    BYTE PTR [ecx+0x65],dh
  50c415:	pop    edx
  50c416:	cwde   
  50c417:	mov    esp,eax
  50c419:	into   
  50c41a:	imul   eax,DWORD PTR [ebp-0x44],0x472f40f7
  50c421:	sbb    BYTE PTR [edx+0x1c8047f5],cl
  50c427:	xor    esp,DWORD PTR [ebp-0x39]
  50c42a:	fimul  DWORD PTR [ecx-0xf]
  50c42d:	mov    dl,0x26
  50c42f:	push   edx
  50c430:	dec    edi
  50c431:	cmp    cl,ah
  50c433:	pop    esi
  50c434:	cmp    esp,eax
  50c436:	dec    edi
  50c437:	jp     0x50c3d7
  50c439:	inc    esp
  50c43a:	mov    eax,0x45618542
  50c43f:	inc    eax
  50c440:	pop    esi
  50c441:	cld    
  50c442:	adc    ebx,DWORD PTR ds:0x3434a540
  50c448:	xor    al,0x71
  50c44a:	xchg   ebp,eax
  50c44b:	(bad)  
  50c44c:	stc    
  50c44d:	sbb    eax,0x6cd8c8b0
  50c452:	push   0xfffffffb
  50c454:	dec    ecx
  50c455:	dec    esi
  50c456:	and    edi,edx
  50c458:	mov    al,0x9a
  50c45a:	xchg   ebx,eax
  50c45b:	fstp   TBYTE PTR [eax-0x32]
  50c45e:	fild   QWORD PTR [edi+0x7f2d2902]
  50c464:	pusha  
  50c465:	scas   eax,DWORD PTR es:[edi]
  50c466:	in     al,dx
  50c467:	bound  esi,QWORD PTR [eax-0x71]
  50c46a:	sar    DWORD PTR [esi+ebx*2-0x81c7437],0xd8
  50c472:	fistp  DWORD PTR [esp+edx*4+0x25]
  50c476:	or     dl,BYTE PTR [esi+0x3e66d96a]
  50c47c:	adc    ebx,DWORD PTR [esi-0x12]
  50c47f:	mov    eax,0xb8ada805
  50c484:	xor    al,0x18
  50c486:	js     0x50c47c
  50c488:	out    0xbf,al
  50c48a:	xor    BYTE PTR [edx-0xb],al
  50c48d:	jmp    0x50c45b
  50c48f:	push   ds
  50c490:	and    al,0xa2
  50c492:	aaa    
  50c493:	mov    al,ds:0x5a4825bf
  50c498:	ins    DWORD PTR es:[edi],dx
  50c499:	mov    eax,0xbf5af268
  50c49e:	push   es
  50c49f:	test   DWORD PTR [ebx+0x1208c3bd],eax
  50c4a5:	aad    0x3b
  50c4a7:	pop    ss
  50c4a8:	mov    ch,0xdd
  50c4aa:	(bad)  
  50c4ab:	call   0xf53b0832
  50c4b0:	shr    DWORD PTR [edi+0x1094d3d9],0xe4
  50c4b7:	ja     0x50c4cf
  50c4b9:	inc    edi
  50c4ba:	cmc    
  50c4bb:	dec    esp
  50c4bc:	loope  0x50c45a
  50c4be:	clc    
  50c4bf:	xor    al,0x34
  50c4c1:	in     al,dx
  50c4c2:	(bad)  
  50c4c3:	xor    ecx,DWORD PTR [eax-0x37]
  50c4c6:	add    DWORD PTR [esi-0x4a7a4193],edx
  50c4cc:	adc    DWORD PTR [ecx+ecx*1+0x4],edi
  50c4d0:	jge    0x50c4d5
  50c4d2:	push   0x7f
  50c4d4:	std    
  50c4d5:	adc    dl,bl
  50c4d7:	push   edx
  50c4d8:	jno    0x50c4db
  50c4da:	imul   ecx,DWORD PTR [ecx],0x3a32834
  50c4e0:	and    bh,BYTE PTR [esi+0x20]
  50c4e3:	pop    edx
  50c4e4:	mov    ecx,0xb093995f
  50c4e9:	retf   0x15aa
  50c4ec:	shl    dl,0x8d
  50c4ef:	leave  
  50c4f0:	jns    0x50c536
  50c4f2:	mov    ecx,DWORD PTR [edi-0x97a8b67]
  50c4f8:	lock (bad) 
  50c4fa:	cli    
  50c4fb:	hlt    
  50c4fc:	cmp    ecx,DWORD PTR [eax+eiz*2]
  50c4ff:	das    
  50c500:	or     BYTE PTR [esp+ebx*4],bl
  50c503:	xor    bh,al
  50c505:	and    ebx,DWORD PTR [ebx]
  50c507:	pop    esi
  50c508:	mov    DWORD PTR [esi+ebp*2-0x1e35436d],esp
  50c50f:	jl     0x50c4ca
  50c511:	out    0x13,eax
  50c513:	mov    ch,0xf4
  50c515:	test   BYTE PTR [edx],0xe9
  50c518:	retf   0x48fc
  50c51b:	xchg   ebp,eax
  50c51c:	hlt    
  50c51d:	pop    esp
  50c51e:	adc    bl,BYTE PTR [ebp-0x78bfd39e]
  50c524:	jmp    0xa3c163c1
  50c529:	ror    DWORD PTR [edi+0x35],cl
  50c52c:	and    BYTE PTR [edi],cl
  50c52e:	xchg   esp,eax
  50c52f:	pop    eax
  50c530:	lods   eax,DWORD PTR ds:[esi]
  50c531:	lds    edx,FWORD PTR [edx-0x5d681d96]
  50c537:	sbb    al,0x82
  50c539:	push   es
  50c53a:	call   0x8b0b2a91
  50c53f:	mov    bl,0x6a
  50c541:	mov    dh,0x71
  50c543:	in     eax,dx
  50c544:	in     al,0x56
  50c546:	fld    TBYTE PTR [eax]
  50c548:	in     al,dx
  50c549:	mov    ebx,0x710f774a
  50c54e:	iret   
  50c54f:	sub    eax,0x9f28952f
  50c554:	push   0x1
  50c556:	ss cmp al,0x2
  50c559:	loopne 0x50c521
  50c55b:	pop    ebp
  50c55c:	inc    esi
  50c55d:	pop    ss
  50c55e:	sti    
  50c55f:	je     0x50c500
  50c561:	out    dx,eax
  50c562:	and    BYTE PTR [eax],0xa3
  50c565:	gs pop ebp
  50c567:	push   edi
  50c568:	repz cmp DWORD PTR [eax],esi
  50c56b:	xchg   ecx,eax
  50c56c:	cdq    
  50c56d:	add    eax,DWORD PTR [esi+0x11ee8267]
  50c573:	sbb    eax,0x3259f6b4
  50c578:	gs pop ebx
  50c57a:	xor    DWORD PTR fs:[edi+0x9bfa9ac],esi
  50c581:	dec    ecx
  50c582:	and    DWORD PTR [edx],esp
  50c584:	push   esp
  50c585:	out    dx,eax
  50c586:	mov    edx,0xad9e6396
  50c58b:	or     edx,DWORD PTR [edx-0x63b7869c]
  50c591:	xor    BYTE PTR [ebx-0x69],0x18
  50c595:	push   ss
  50c596:	out    0xe4,eax
  50c598:	loope  0x50c557
  50c59a:	pusha  
  50c59b:	das    
  50c59c:	or     al,0x2
  50c59e:	sahf   
  50c59f:	mov    esi,0x38111142
  50c5a4:	mov    cl,0x6b
  50c5a6:	(bad)  [edx-0x78]
  50c5a9:	and    al,0x80
  50c5ab:	test   DWORD PTR es:[ebx+0x62eea0e2],esp
  50c5b2:	jnp    0x50c5fa
  50c5b4:	sahf   
  50c5b5:	or     al,0x55
  50c5b7:	es pop es
  50c5b9:	shr    DWORD PTR [ebx+eiz*1-0x64120070],0x62
  50c5c1:	push   edi
  50c5c2:	add    bh,bh
  50c5c4:	or     BYTE PTR [edi-0x4],dl
  50c5c7:	in     al,dx
  50c5c8:	inc    esp
  50c5c9:	das    
  50c5ca:	jle    0x50c5db
  50c5cc:	shl    ah,cl
  50c5ce:	sub    cl,BYTE PTR [eax-0x3]
  50c5d1:	xor    al,0xaa
  50c5d3:	ret    
  50c5d4:	or     eax,ebp
  50c5d6:	and    eax,0x622b30f7
  50c5db:	mov    esi,0x5e8858bc
  50c5e0:	icebp  
  50c5e1:	mov    al,ds:0x1163891f
  50c5e6:	mov    dl,0xeb
  50c5e8:	sub    al,0x7c
  50c5ea:	fsub   QWORD PTR [eax-0x67]
  50c5ed:	or     ebx,DWORD PTR [ebp+0x152d4931]
  50c5f3:	dec    edx
  50c5f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50c5f5:	lods   al,BYTE PTR ds:[esi]
  50c5f6:	push   ebp
  50c5f7:	call   DWORD PTR [edx+edi*8+0x52]
  50c5fb:	sbb    al,BYTE PTR [ebp-0x1e]
  50c5fe:	push   esp
  50c5ff:	pop    ebx
  50c600:	repnz xchg ecx,eax
  50c602:	dec    ebx
  50c603:	ror    DWORD PTR [esp+ecx*1+0x26fe4ee],1
  50c60a:	scas   al,BYTE PTR es:[edi]
  50c60b:	push   ebx
  50c60c:	push   0x9
  50c60e:	stos   DWORD PTR es:[edi],eax
  50c60f:	call   0x35197e5c
  50c614:	xchg   cl,dl
  50c616:	ja     0x50c5b0
  50c618:	or     BYTE PTR [ebx-0x4de4580f],al
  50c61e:	test   DWORD PTR [esi-0x5a],eax
  50c621:	es sub esp,edi
  50c624:	push   esi
  50c625:	add    eax,0x27a5b65a
  50c62a:	cmp    bl,BYTE PTR [ebp+esi*2+0x7c]
  50c62e:	adc    esp,DWORD PTR [ebx-0x7d67dc08]
  50c634:	ins    BYTE PTR es:[edi],dx
  50c635:	ret    0xd40f
  50c638:	dec    esp
  50c639:	sbb    DWORD PTR [edi+0x5a],eax
  50c63c:	xchg   edi,eax
  50c63d:	das    
  50c63e:	cmc    
  50c63f:	xchg   esi,eax
  50c640:	sub    dl,BYTE PTR [edx+0x8]
  50c643:	sbb    eax,DWORD PTR [eax]
  50c645:	xor    bl,bl
  50c647:	repz dec ebx
  50c649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50c64a:	fld    TBYTE PTR [edx+eax*8]
  50c64d:	cld    
  50c64e:	adc    ebx,eax
  50c650:	(bad)  
  50c651:	retf   0xd437
  50c654:	mov    eax,0xb5ff0256
  50c659:	cdq    
  50c65a:	jg     0x50c67e
  50c65c:	test   eax,0xcbd2fc88
  50c661:	sar    BYTE PTR [eax+0x70],cl
  50c664:	xchg   ebp,eax
  50c665:	mov    dl,0xe9
  50c667:	ret    
  50c668:	xchg   DWORD PTR [ecx+0x4d],esp
  50c66b:	add    dl,BYTE PTR [edi+0x318317e5]
  50c671:	inc    esi
  50c672:	push   eax
  50c673:	lds    esp,FWORD PTR [ebp+0x50]
  50c676:	arpl   si,bx
  50c678:	mov    cs,edi
  50c67a:	aam    0xbb
  50c67c:	or     BYTE PTR ds:0xf81c842e,dl
  50c682:	jbe    0x50c6fb
  50c684:	hlt    
  50c685:	add    bh,ch
  50c687:	inc    ebp
  50c688:	sub    DWORD PTR [ebx+0x30],0xfffffff6
  50c68c:	mov    cl,0xd
  50c68e:	push   0x5f
  50c690:	push   ebx
  50c691:	jns    0x50c61c
  50c693:	sub    DWORD PTR [ebx],ebp
  50c695:	js     0x50c690
  50c697:	cdq    
  50c698:	sbb    al,0x9b
  50c69a:	cs jb  0x50c62a
  50c69d:	jns    0x50c6cf
  50c69f:	idiv   BYTE PTR [ebx+edx*4-0x26316f2c]
  50c6a6:	dec    ebp
  50c6a7:	mov    ds:0x35325b69,eax
  50c6ac:	push   es
  50c6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50c6ae:	test   al,0x6f
  50c6b0:	jmp    0x2cfb14e1
  50c6b5:	push   edx
  50c6b6:	jne    0x50c722
  50c6b8:	dec    esi
  50c6b9:	jns    0x50c64a
  50c6bb:	adc    eax,0x1b884306
  50c6c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50c6c1:	pop    eax
  50c6c2:	push   esi
  50c6c3:	adc    esp,DWORD PTR [edx-0x29]
  50c6c6:	jmp    0xfb800d7
  50c6cb:	xchg   edi,eax
  50c6cc:	mov    eax,0xd28296ad
  50c6d1:	mov    esi,0xceeb611b
  50c6d6:	jecxz  0x50c6e9
  50c6d8:	dec    ebp
  50c6d9:	ss sub eax,0x127abd73
  50c6df:	dec    ebx
  50c6e0:	test   DWORD PTR [edi],ebx
  50c6e2:	in     eax,0xc
  50c6e4:	pop    ebp
  50c6e5:	add    ch,cl
  50c6e7:	add    BYTE PTR [ebx+0x45d1ddf1],ch
  50c6ed:	dec    esi
  50c6ee:	sbb    DWORD PTR [edi-0x55547b33],ebp
  50c6f4:	jp     0x50c719
  50c6f6:	(bad)  
  50c6f7:	ds cwde 
  50c6f9:	mov    BYTE PTR [edx-0x6a36ff0b],dl
  50c6ff:	rcr    eax,1
  50c701:	gs loope 0x50c750
  50c704:	addr16 aad 0xd
  50c707:	mov    DWORD PTR [esi-0x75e973c9],esp
  50c70d:	and    bl,BYTE PTR [eax+0x433b2373]
  50c713:	sub    DWORD PTR [esi],edx
  50c715:	(bad)  
  50c716:	fwait
  50c717:	jo     0x50c772
  50c719:	xchg   edx,eax
  50c71a:	not    edx
  50c71c:	pop    ebp
  50c71d:	jb     0x50c6c7
  50c71f:	sub    eax,0xb0d35d96
  50c724:	push   0x9364aef4
  50c729:	aam    0x93
  50c72b:	push   ebp
  50c72c:	lahf   
  50c72d:	sbb    BYTE PTR [edx],al
  50c72f:	adc    eax,0x577cc8e2
  50c734:	pop    ebx
  50c735:	in     eax,dx
  50c736:	sub    al,0xae
  50c738:	in     al,0xd6
  50c73a:	fwait
  50c73b:	dec    eax
  50c73c:	xor    ch,bh
  50c73e:	push   0xffffffd0
  50c740:	push   eax
  50c741:	or     cl,bh
  50c743:	pusha  
  50c744:	es xchg ebp,eax
  50c746:	mov    cl,0x6f
  50c748:	in     eax,dx
  50c749:	xor    ah,cl
  50c74b:	fidivr WORD PTR [edi]
  50c74d:	push   ebx
  50c74e:	add    ecx,edi
  50c750:	ret    
  50c751:	add    dh,BYTE PTR [edx-0x73]
  50c754:	fstp   TBYTE PTR [ebx+0x2f52596b]
  50c75a:	ret    
  50c75b:	loope  0x50c773
  50c75d:	cwde   
  50c75e:	fst    st(4)
  50c760:	mov    ecx,DWORD PTR [ecx]
  50c762:	test   al,0x44
  50c764:	mov    cl,0x27
  50c766:	sub    BYTE PTR [edi+edi*2+0x2b2f61bb],bh
  50c76d:	sbb    ah,BYTE PTR [edi]
  50c76f:	push   eax
  50c770:	(bad)  
  50c771:	mov    ah,0xe6
  50c773:	cwde   
  50c774:	idiv   edi
  50c776:	adc    esi,edx
  50c778:	adc    esi,esi
  50c77a:	mov    ecx,DWORD PTR [eax+0x4c]
  50c77d:	sbb    eax,0x67a4a2b3
  50c782:	mov    ebp,0x2e080a74
  50c787:	jmp    0xc153:0xce20258b
  50c78e:	push   esp
  50c78f:	clc    
  50c790:	fcmove st,st(3)
  50c792:	push   esi
  50c793:	xchg   edi,eax
  50c794:	iret   
  50c795:	add    al,0xcb
  50c797:	fs dec ebp
  50c799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50c79a:	pop    ss
  50c79b:	pushf  
  50c79c:	dec    esi
  50c79d:	cmp    DWORD PTR [edi+0x7b696e46],0x7bdc1828
  50c7a7:	sub    cl,BYTE PTR [edi]
  50c7a9:	pop    ecx
  50c7aa:	cmp    edi,ebx
  50c7ac:	jo     0x50c764
  50c7ae:	xchg   ebx,eax
  50c7af:	sub    DWORD PTR [edi+0x74e45454],edi
  50c7b5:	inc    bp
  50c7b7:	ret    0x1433
  50c7ba:	(bad)  
  50c7bb:	jbe    0x50c7d7
  50c7bd:	ins    BYTE PTR es:[edi],dx
  50c7be:	cmp    BYTE PTR [edi],bl
  50c7c0:	ja     0x50c7a7
  50c7c2:	(bad)  
  50c7c3:	aad    0xcb
  50c7c5:	cmp    eax,0xbe1c54c0
  50c7ca:	xchg   ebx,eax
  50c7cb:	sbb    edx,0xfffffffc
  50c7ce:	xlat   BYTE PTR ds:[ebx]
  50c7cf:	or     al,0x67
  50c7d1:	ret    0xb943
  50c7d4:	lds    ebp,FWORD PTR [edi-0x5]
  50c7d7:	or     ebp,edx
  50c7d9:	jl     0x50c7fc
  50c7db:	pop    esi
  50c7dc:	rol    BYTE PTR ds:[edx+0x1996967e],0xa4
  50c7e4:	adc    DWORD PTR [edx-0x25],ecx
  50c7e7:	ror    DWORD PTR [ecx-0x3de7afae],1
  50c7ed:	call   0xaa2fb5d4
  50c7f2:	dec    ebp
  50c7f3:	mov    esi,0xa777e496
  50c7f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50c7f9:	or     eax,0xde887636
  50c7fe:	sahf   
  50c7ff:	scas   al,BYTE PTR es:[edi]
  50c800:	adc    BYTE PTR [eax-0xb],0x36
  50c804:	xor    esp,DWORD PTR [eax]
  50c806:	sub    al,bh
  50c808:	xchg   ebp,eax
  50c809:	div    DWORD PTR [ebp-0x43021bda]
  50c80f:	push   edx
  50c810:	sbb    eax,0x2ea16dff
  50c815:	mov    al,0xda
  50c817:	icebp  
  50c818:	stos   DWORD PTR es:[edi],eax
  50c819:	pop    ss
  50c81a:	jo     0x50c7f8
  50c81c:	xchg   ebx,eax
  50c81d:	dec    ebx
  50c81e:	fs mov esp,0x78089eac
  50c824:	jmp    0xee3:0x79f16c53
  50c82b:	or     al,0xa6
  50c82d:	aaa    
  50c82e:	jmp    0xf554:0x6ff05ec0
  50c835:	in     al,dx
  50c836:	mov    dl,0x77
  50c838:	mov    bh,0xe5
  50c83a:	je     0x50c824
  50c83c:	jmp    0x50c80f
  50c83e:	pop    ebx
  50c83f:	pushf  
  50c840:	cmc    
  50c841:	fstp   TBYTE PTR [ebx+0xd]
  50c844:	popf   
  50c845:	repz aad 0x82
  50c848:	or     DWORD PTR [edi+0x50],ebx
  50c84b:	mov    dh,0x0
  50c84d:	ds cli 
  50c84f:	sub    eax,0xeba4f998
  50c854:	jns    0x50c882
  50c856:	scas   al,BYTE PTR es:[edi]
  50c857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50c858:	push   ebx
  50c859:	loopne 0x50c812
  50c85b:	mov    al,0xc1
  50c85d:	adc    al,BYTE PTR [ebp+0xf]
  50c860:	mov    al,0x14
  50c862:	mov    dh,0x2e
  50c864:	mov    ah,0xe1
  50c866:	ffree  st(0)
  50c868:	xchg   DWORD PTR [eax-0xa0373bd],ecx
  50c86e:	jmp    0xba25:0xb5ba584f
  50c875:	and    eax,0x7f8ce3e6
  50c87a:	xor    eax,0xf64ab6d0
  50c87f:	push   0x193e5ac3
  50c884:	adc    ebp,DWORD PTR [esi]
  50c886:	dec    eax
  50c887:	or     esp,edi
  50c889:	mov    DWORD PTR [ebp-0x6e],esp
  50c88c:	scas   eax,DWORD PTR es:[edi]
  50c88d:	ins    WORD PTR es:[edi],dx
  50c88f:	mov    eax,ds:0xcada8e39
  50c894:	imul   edx,DWORD PTR ds:0xca59c291,0xffffff8c
  50c89b:	test   al,0x9a
  50c89d:	mov    bl,BYTE PTR [edx+0x4d]
  50c8a0:	fldenv [edi]
  50c8a2:	sub    BYTE PTR [edx-0x1],al
  50c8a5:	das    
  50c8a6:	cmp    cl,0xb8
  50c8a9:	test   DWORD PTR [ebx-0x19],eax
  50c8ac:	icebp  
  50c8ad:	ret    0x4739
  50c8b0:	lods   al,BYTE PTR ds:[esi]
  50c8b1:	pop    ds
  50c8b2:	lock inc edx
  50c8b4:	add    ch,dh
  50c8b6:	sbb    DWORD PTR [ebp+0x5414ed76],ebx
  50c8bc:	pop    es
  50c8bd:	icebp  
  50c8be:	mov    eax,ds:0x44330c20
  50c8c3:	adc    al,0x1b
  50c8c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50c8c6:	inc    ebp
  50c8c7:	push   eax
  50c8c8:	push   0xffffff9e
  50c8ca:	pop    ds
  50c8cb:	dec    esi
  50c8cc:	add    BYTE PTR [edx],ah
  50c8ce:	jno    0x50c92e
  50c8d0:	fsub   QWORD PTR [edi]
  50c8d2:	sub    cl,al
  50c8d4:	cli    
  50c8d5:	fwait
  50c8d6:	mov    cl,BYTE PTR [ebp+0x1f9ed220]
  50c8dc:	or     esp,DWORD PTR [edi]
  50c8de:	adc    BYTE PTR [ebx-0x553f513b],dh
  50c8e4:	dec    ebp
  50c8e5:	dec    ecx
  50c8e6:	loopne 0x50c912
  50c8e8:	xchg   edx,eax
  50c8e9:	sub    ebp,DWORD PTR [ebp-0x70]
  50c8ec:	pop    ecx
  50c8ed:	popf   
  50c8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50c8ef:	xchg   edx,eax
  50c8f0:	fwait
  50c8f1:	leave  
  50c8f2:	push   DWORD PTR [ebp+0x74d84979]
  50c8f8:	mov    al,0xd
  50c8fa:	ret    0xbc7f
  50c8fd:	push   0x18
  50c8ff:	and    eax,0xa47ea7ad
  50c904:	mov    al,0xb4
  50c906:	fdivr  st,st(0)
  50c908:	iret   
  50c909:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50c90a:	mov    edi,0x8e496ffb
  50c90f:	inc    esp
  50c910:	call   0xa647:0x40bf7e91
  50c917:	in     al,0x53
  50c919:	cmp    BYTE PTR [edx-0x7d502108],cl
  50c91f:	les    ebp,FWORD PTR [ebx]
  50c921:	push   ecx
  50c922:	aam    0x7d
  50c924:	out    0xed,eax
  50c926:	cmp    eax,0x49339ee
  50c92b:	iret   
  50c92c:	and    DWORD PTR ds:0xef9a3cdc,ebx
  50c932:	xor    ah,ah
  50c934:	(bad)  
  50c936:	mov    al,ds:0x64b143b3
  50c93b:	jae    0x50c9aa
  50c93d:	add    bh,BYTE PTR [ebx-0x20b30a41]
  50c943:	or     eax,0xdd9850dc
  50c948:	and    al,0x91
  50c94a:	aad    0xad
  50c94c:	cmp    ebx,DWORD PTR fs:[edi*2+0x13e9cdef]
  50c954:	pop    eax
  50c955:	and    al,0xf1
  50c957:	sub    DWORD PTR [esi+0x1cf8ad02],edx
  50c95d:	out    dx,al
  50c95e:	(bad)
  50c961:	call   0x871e3f38
  50c966:	inc    esp
  50c967:	mov    esp,0x7a789259
  50c96c:	sbb    al,bh
  50c96e:	pop    ecx
  50c96f:	xchg   BYTE PTR [ebx+edx*1-0x11],dl
  50c973:	mov    ecx,DWORD PTR [ecx+0x7a331a1a]
  50c979:	sub    al,0xe4
  50c97b:	js     0x50c93b
  50c97d:	push   edx
  50c97e:	jb     0x50c98b
  50c980:	adc    al,0x61
  50c982:	into   
  50c983:	or     dl,BYTE PTR [ebp+0x43784025]
  50c989:	inc    ebx
  50c98a:	jmp    0xaf79:0x99e1807b
  50c991:	je     0x50c97c
  50c993:	adc    DWORD PTR [ebp+0x874bf14],ecx
  50c999:	int    0x38
  50c99b:	inc    edi
  50c99c:	daa    
  50c99d:	pop    ebp
  50c99e:	fs pushf 
  50c9a0:	push   0xb4c0ac6a
  50c9a5:	ror    ebx,cl
  50c9a7:	push   ss
  50c9a8:	rcl    dh,0xac
  50c9ab:	jns    0x50c967
  50c9ad:	je     0x50c936
  50c9af:	sub    eax,0x771a723a
  50c9b4:	push   edi
  50c9b5:	lods   al,BYTE PTR ds:[esi]
  50c9b6:	or     BYTE PTR [esi-0xc4122f9],0x0
  50c9bd:	jge    0x50ca24
  50c9bf:	loopne 0x50c9db
  50c9c1:	(bad)  
  50c9c2:	xor    DWORD PTR [ebp+0x6178b86e],eax
  50c9c8:	xchg   ecx,eax
  50c9c9:	xlat   BYTE PTR ds:[ebx]
  50c9ca:	inc    eax
  50c9cb:	jge    0x50c983
  50c9cd:	iret   
  50c9ce:	push   ecx
  50c9cf:	ss ins DWORD PTR es:[edi],dx
  50c9d1:	popa   
  50c9d2:	adc    esp,DWORD PTR [ebx*8+0xc268585]
  50c9d9:	pop    es
  50c9da:	ret    0xe700
  50c9dd:	ss ret 
  50c9df:	jne    0x50ca21
  50c9e1:	mov    ebx,0x93c5dc8f
  50c9e6:	mov    ebx,0x30475932
  50c9eb:	sahf   
  50c9ec:	pop    eax
  50c9ed:	aad    0x4c
  50c9ef:	rcr    BYTE PTR [esi-0x15bcc224],1
  50c9f5:	out    0x5e,al
  50c9f7:	add    dl,BYTE PTR [ebp+0x22c18e67]
  50c9fd:	fisubr WORD PTR [ecx]
  50ca00:	ins    DWORD PTR es:[edi],dx
  50ca01:	mov    ds:0xff95afdc,eax
  50ca06:	nop
  50ca07:	push   edx
  50ca08:	hlt    
  50ca09:	xlat   BYTE PTR ds:[ebx]
  50ca0a:	mov    bh,0xef
  50ca0c:	call   0x1af81de8
  50ca11:	in     al,dx
  50ca12:	sub    bh,BYTE PTR [ecx+0x1]
  50ca15:	in     al,dx
  50ca16:	and    esp,DWORD PTR [ebp+0x8]
  50ca19:	dec    ecx
  50ca1a:	(bad)  
  50ca1b:	outs   dx,DWORD PTR ds:[esi]
  50ca1c:	cmp    BYTE PTR [ecx-0x34],ch
  50ca1f:	or     al,0x60
  50ca21:	or     DWORD PTR [ebp+0x4d],0x16480149
  50ca28:	fs push 0x4f
  50ca2b:	stos   DWORD PTR es:[edi],eax
  50ca2c:	or     BYTE PTR [ebx-0x27],al
  50ca2f:	aad    0x7
  50ca31:	or     eax,0x6845f5ce
  50ca36:	jbe    0x50ca1c
  50ca38:	ins    DWORD PTR es:[edi],dx
  50ca39:	test   DWORD PTR [edx+0x128c3f61],esp
  50ca3f:	xor    DWORD PTR [esi],edi
  50ca41:	push   0x59
  50ca43:	cmp    al,0x48
  50ca45:	xchg   esi,eax
  50ca46:	clc    
  50ca47:	stos   DWORD PTR es:[edi],eax
  50ca48:	rcl    esi,0xd0
  50ca4b:	es pop esp
  50ca4d:	cmp    ecx,ecx
  50ca4f:	repz pop ebp
  50ca51:	stc    
  50ca52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50ca53:	inc    ecx
  50ca54:	push   cs
  50ca55:	xchg   edi,eax
  50ca56:	xchg   ebp,eax
  50ca57:	ret    
  50ca58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50ca59:	add    esp,DWORD PTR [ebp+edx*1-0x4dd5ed18]
  50ca60:	test   al,0x3b
  50ca62:	dec    ebx
  50ca63:	in     eax,dx
  50ca64:	ret    
  50ca65:	jmp    0xe5a94977
  50ca6a:	shr    DWORD PTR [ebx-0x38c62c6d],0xb9
  50ca71:	mov    cl,0xf2
  50ca73:	pushf  
  50ca74:	hlt    
  50ca75:	mov    cl,0xf8
  50ca77:	imul   eax,DWORD PTR [eax],0x63281147
  50ca7d:	adc    al,BYTE PTR [esp+ecx*4]
  50ca80:	xor    BYTE PTR [ebx],dh
  50ca82:	or     al,0xa1
  50ca84:	lods   eax,DWORD PTR ds:[esi]
  50ca85:	rcr    ebp,cl
  50ca87:	dec    edx
  50ca88:	sti    
  50ca89:	cli    
  50ca8a:	enter  0xeaac,0xc3
  50ca8e:	cmp    BYTE PTR [eax+0x19],dl
  50ca91:	xor    edx,edx
  50ca93:	and    esi,DWORD PTR [edx+0x20]
  50ca96:	sub    eax,0x83c45290
  50ca9b:	dec    edx
  50ca9c:	les    edi,FWORD PTR [edx]
  50ca9e:	arpl   WORD PTR [ecx+0x63],cx
  50caa1:	mov    esp,0x8aaa88a2
  50caa6:	out    dx,eax
  50caa7:	mov    ds:0xffdf2ec8,al
  50caac:	jnp    0x50ca41
  50caae:	clc    
  50caaf:	neg    DWORD PTR [edi+0x32]
  50cab2:	jecxz  0x50cb1b
  50cab4:	jbe    0x50cb0a
  50cab6:	rcr    DWORD PTR [eax+ecx*2],0x60
  50caba:	and    DWORD PTR [eax+edi*4],edx
  50cabd:	add    DWORD PTR [ebp-0x38],edi
  50cac0:	push   esp
  50cac1:	cmp    al,BYTE PTR [edi]
  50cac3:	mov    DWORD PTR [eax-0x18],edi
  50cac6:	int    0xa7
  50cac8:	pop    esi
  50cac9:	stos   DWORD PTR es:[edi],eax
  50caca:	or     ebx,DWORD PTR [ecx+0x7c]
  50cacd:	stc    
  50cace:	dec    edx
  50cacf:	sbb    al,0x28
  50cad1:	cmc    
  50cad2:	xchg   ebp,eax
  50cad3:	nop
  50cad4:	and    edi,ebx
  50cad6:	int    0x73
  50cad8:	enter  0xd2aa,0x27
  50cadc:	outs   dx,DWORD PTR ds:[esi]
  50cadd:	lahf   
  50cade:	dec    eax
  50cadf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50cae0:	add    BYTE PTR [eax-0x10aa0ac9],ch
  50cae6:	cmp    ebx,DWORD PTR ds:0x259d6993
  50caec:	push   0xbde13a69
  50caf1:	ins    BYTE PTR es:[edi],dx
  50caf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50caf3:	or     al,dl
  50caf5:	inc    eax
  50caf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50caf7:	xchg   edx,eax
  50caf8:	pusha  
  50caf9:	loopne 0x50ca8e
  50cafb:	(bad)
  50caff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50cb00:	jne    0x50cb01
  50cb02:	sub    bl,BYTE PTR [esi-0x12]
  50cb05:	mov    dl,0x3
  50cb07:	add    cl,ch
  50cb09:	in     al,dx
  50cb0a:	mov    al,0xef
  50cb0c:	addr16 fcmovne st,st(2)
  50cb0f:	xor    ch,ch
  50cb11:	ins    BYTE PTR es:[edi],dx
  50cb12:	int    0x39
  50cb14:	out    0x36,al
  50cb16:	push   esi
  50cb17:	in     eax,0xc0
  50cb19:	adc    BYTE PTR [edi+esi*8],dl
  50cb1c:	dec    esi
  50cb1d:	cmp    ch,BYTE PTR [edi+0xa209c2f]
  50cb23:	dec    ebx
  50cb24:	xor    ebp,edi
  50cb26:	mov    eax,0x3ecca95b
  50cb2b:	sub    al,0x4b
  50cb2d:	inc    edx
  50cb2e:	mov    dh,0xf6
  50cb30:	mov    ds:0x7bd06d51,al
  50cb35:	or     edx,esi
  50cb37:	bound  esp,QWORD PTR [eax]
  50cb39:	test   BYTE PTR [edx+0x7e],al
  50cb3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50cb3d:	xor    dl,dh
  50cb3f:	imul   esp,DWORD PTR [eax],0xc84b870c
  50cb45:	(bad)  
  50cb46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50cb47:	adc    al,BYTE PTR [edx-0x6ba2ad79]
  50cb4d:	mov    ecx,0xa41ded5b
  50cb52:	ins    BYTE PTR es:[edi],dx
  50cb53:	iret   
  50cb54:	and    al,0xbf
  50cb56:	xchg   ebx,eax
  50cb57:	call   0x58d8523
  50cb5c:	inc    esi
  50cb5d:	cli    
  50cb5e:	not    al
  50cb60:	iret   
  50cb61:	push   ebp
  50cb62:	mov    bh,0x1a
  50cb64:	jp     0x50cbad
  50cb66:	stos   BYTE PTR es:[edi],al
  50cb67:	mov    BYTE PTR [ebp+0x675a551],dl
  50cb6d:	sub    dl,0x1f
  50cb70:	int    0x75
  50cb72:	jo     0x50cb65
  50cb74:	sub    al,0x70
  50cb76:	es dec edx
  50cb78:	xor    eax,0x3155b8b3
  50cb7d:	lods   eax,DWORD PTR ds:[esi]
  50cb7e:	test   al,0x9a
  50cb80:	ins    DWORD PTR es:[edi],dx
  50cb81:	add    BYTE PTR [eax+0x44],0x84
  50cb85:	mov    WORD PTR [eax-0x40],?
  50cb88:	call   0x3718c394
  50cb8d:	dec    esi
  50cb8e:	clc    
  50cb8f:	xor    al,0x3f
  50cb91:	push   cs
  50cb92:	and    al,0xcd
  50cb94:	out    0xe8,eax
  50cb96:	shl    DWORD PTR cs:[edx+0x711836b1],1
  50cb9d:	dec    esi
  50cb9e:	dec    esp
  50cb9f:	fs ss jl 0x50cbde
  50cba3:	outs   dx,BYTE PTR ds:[esi]
  50cba4:	jmp    0x50cbd7
  50cba6:	jp     0x50cb3e
  50cba8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50cba9:	or     BYTE PTR [esi],ah
  50cbab:	inc    esi
  50cbac:	xchg   esi,eax
  50cbad:	mov    ch,0x49
  50cbaf:	xchg   dh,ah
  50cbb1:	add    eax,0x94296c74
  50cbb6:	sbb    BYTE PTR [edi-0x3978d455],0x90
  50cbbd:	pop    es
  50cbbe:	out    dx,eax
  50cbbf:	sti    
  50cbc0:	stos   DWORD PTR es:[edi],eax
  50cbc1:	inc    ebx
  50cbc2:	cld    
  50cbc3:	jbe    0x50cb98
  50cbc5:	and    ebx,0x20
  50cbc8:	(bad)  
  50cbc9:	(bad)  
  50cbcb:	scas   al,BYTE PTR es:[edi]
  50cbcc:	mov    bh,0x5e
  50cbce:	cmp    eax,0x4a814801
  50cbd3:	pop    edi
  50cbd4:	iret   
  50cbd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50cbd6:	shl    BYTE PTR [eax-0x7a],0x8d
  50cbda:	xor    al,0x4f
  50cbdc:	jp     0x50cb8d
  50cbde:	sahf   
  50cbdf:	cmc    
  50cbe0:	sub    DWORD PTR [edi+0x73b04706],0x1b
  50cbe7:	xchg   edx,edi
  50cbe9:	and    eax,0xab3069b2
  50cbee:	jge    0x5836f1b6
  50cbf4:	add    ebx,edx
  50cbf6:	mov    bl,0x94
  50cbf8:	sti    
  50cbf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50cbfa:	fstp   TBYTE PTR [esi-0x72fd0751]
  50cc00:	inc    edx
  50cc01:	test   edx,edi
  50cc03:	in     al,0x74
  50cc05:	jae    0x50cc6d
  50cc07:	sub    eax,0x466d739
  50cc0c:	cs xchg ebp,eax
  50cc0e:	arpl   WORD PTR [eax-0x62],cx
  50cc11:	pop    ebp
  50cc12:	sub    DWORD PTR [esp+ecx*4],0x374fca6c
  50cc19:	and    BYTE PTR [ebp-0x3417f48f],ch
  50cc1f:	mov    dh,0xa
  50cc21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50cc22:	xchg   BYTE PTR [ebx],al
  50cc24:	mov    ch,BYTE PTR [ebp-0x64bdff26]
  50cc2a:	out    0xfb,al
  50cc2c:	stos   DWORD PTR es:[edi],eax
  50cc2d:	loope  0x50cca7
  50cc2f:	ds push eax
  50cc31:	xchg   DWORD PTR [ebx+0x5f70a92a],edi
  50cc37:	pop    esp
  50cc38:	mov    ds:0x3ac2777b,al
  50cc3d:	je     0x50ccb9
  50cc3f:	aam    0x9b
  50cc41:	dec    edx
  50cc42:	stos   BYTE PTR es:[edi],al
  50cc43:	aam    0xde
  50cc45:	jo     0x50cc98
  50cc47:	in     al,dx
  50cc48:	(bad)  
  50cc49:	or     al,0x62
  50cc4b:	or     eax,0x78bd42a4
  50cc50:	adc    BYTE PTR [edx+eiz*4],ah
  50cc53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50cc54:	ficom  DWORD PTR [edi+0x5bccd4e3]
  50cc5a:	ret    0x9e10
  50cc5d:	out    0xa3,eax
  50cc5f:	push   edi
  50cc60:	les    ecx,FWORD PTR [esi-0x51]
  50cc63:	and    bh,bh
  50cc65:	sub    esp,DWORD PTR [ecx+0x6cfafd76]
  50cc6b:	pop    ebp
  50cc6c:	lods   eax,DWORD PTR ds:[esi]
  50cc6d:	aaa    
  50cc6e:	ja     0x50cc8f
  50cc70:	retf   0x955c
  50cc73:	cmp    dl,ch
  50cc75:	out    0x7e,al
  50cc77:	in     al,0x3b
  50cc79:	test   eax,0x2ce682c5
  50cc7e:	fs mov dl,0x71
  50cc81:	loop   0x50cca2
  50cc83:	iret   
  50cc84:	inc    ebp
  50cc85:	and    edi,DWORD PTR [eax-0x4468a213]
  50cc8b:	cdq    
  50cc8c:	shl    DWORD PTR [edx+eax*2+0x1d9c0e6d],1
  50cc93:	cli    
  50cc94:	sahf   
  50cc95:	inc    esp
  50cc96:	pusha  
  50cc97:	mov    cl,0x9b
  50cc99:	je     0x50cc89
  50cc9b:	cwde   
  50cc9c:	imul   ebp,DWORD PTR [ecx+0x16],0xa3dc5eb9
  50cca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50cca4:	dec    ecx
  50cca5:	jnp    0x50cccd
  50cca7:	int3   
  50cca8:	dec    esp
  50cca9:	and    ch,BYTE PTR [edx]
  50ccab:	and    eax,0x3c7e3948
  50ccb0:	mov    ch,0xef
  50ccb2:	push   ss
  50ccb3:	cdq    
  50ccb4:	stos   BYTE PTR es:[edi],al
  50ccb5:	sub    al,0xde
  50ccb7:	fidivr WORD PTR [ebp-0x51]
  50ccba:	ja     0x50cce7
  50ccbc:	cli    
  50ccbd:	adc    BYTE PTR [eax],al
  50ccbf:	xchg   edx,eax
  50ccc0:	mov    cs,WORD PTR [edi-0x472fbc3e]
  50ccc6:	int    0xb9
  50ccc8:	imul   edi,DWORD PTR [esi-0x6dee0141],0xffffff9d
  50cccf:	mov    BYTE PTR [edx],dl
  50ccd1:	mov    bh,0x29
  50ccd3:	repz fsubr DWORD PTR [edx]
  50ccd6:	xchg   ebp,eax
  50ccd7:	scas   eax,DWORD PTR es:[edi]
  50ccd8:	push   cs
  50ccd9:	sti    
  50ccda:	pop    edi
  50ccdb:	sbb    DWORD PTR [ebp+0x54],0xffffff86
  50ccdf:	pop    edi
  50cce0:	xor    BYTE PTR [edx-0x68],0x8c
  50cce4:	stc    
  50cce5:	dec    ebx
  50cce6:	pop    esp
  50cce7:	and    eax,0x40e0185f
  50ccec:	add    BYTE PTR [ecx],al
  50ccee:	xchg   esp,eax
  50ccef:	call   0x6892:0x69bd14bb
  50ccf6:	retf   
  50ccf7:	inc    edx
  50ccf8:	lea    ebp,[ebx]
  50ccfa:	ja     0x50cd6b
  50ccfc:	stos   BYTE PTR es:[edi],al
  50ccfd:	mov    edx,0x341fc55f
  50cd02:	mov    ah,0x7d
  50cd04:	inc    edx
  50cd05:	xor    BYTE PTR [esi+0x32],0xf5
  50cd09:	fwait
  50cd0a:	mov    cl,BYTE PTR [edi+esi*8-0x2e351aea]
  50cd11:	xchg   BYTE PTR ds:0xc1d3256,cl
  50cd17:	fild   WORD PTR [esi+0x2f]
  50cd1a:	lds    ebp,FWORD PTR [ecx]
  50cd1c:	leave  
  50cd1d:	(bad)  
  50cd1e:	rol    DWORD PTR [esi+0x798937e],1
  50cd24:	test   DWORD PTR [edx+0x49],ebx
  50cd27:	aaa    
  50cd28:	xor    al,0xc
  50cd2a:	test   al,0x95
  50cd2c:	test   DWORD PTR [eax+0x17262a51],ebx
  50cd32:	(bad)  
  50cd33:	mov    ss,WORD PTR [edx-0x1aa8ac9a]
  50cd39:	fcmovnu st,st(7)
  50cd3b:	mov    ds:0x6502e5fe,al
  50cd40:	fstp   QWORD PTR [ebp+0x5d]
  50cd43:	daa    
  50cd44:	push   ss
  50cd45:	cmc    
  50cd46:	sahf   
  50cd47:	adc    BYTE PTR [ecx+eax*1+0x60],ah
  50cd4b:	sub    cl,bh
  50cd4d:	xchg   esp,eax
  50cd4e:	aas    
  50cd4f:	sbb    eax,0xc8118a9f
  50cd54:	das    
  50cd55:	jae    0x50cda7
  50cd57:	inc    ebp
  50cd58:	std    
  50cd59:	mov    esi,0x988c5db7
  50cd5e:	lds    eax,FWORD PTR [edx+ebx*1-0x42572b15]
  50cd65:	arpl   WORD PTR [edi+0x15],bp
  50cd68:	icebp  
  50cd69:	or     ch,al
  50cd6b:	call   0x196ae0f5
  50cd70:	sbb    eax,DWORD PTR [ecx]
  50cd72:	mov    esi,0xff132a80
  50cd77:	mov    esi,0xe9715264
  50cd7c:	xor    ebp,DWORD PTR [esi+0x11]
  50cd7f:	les    edi,FWORD PTR [eax]
  50cd81:	pop    esi
  50cd82:	mov    dl,al
  50cd84:	ss ja  0x50cdeb
  50cd87:	retf   0x3328
  50cd8a:	mov    ds,ebx
  50cd8c:	push   0xecca52a
  50cd91:	adc    eax,0xa5769720
  50cd96:	add    DWORD PTR [ecx],esi
  50cd98:	out    0x3,al
  50cd9a:	stos   BYTE PTR es:[edi],al
  50cd9b:	inc    esp
  50cd9c:	push   ebp
  50cd9d:	inc    esi
  50cd9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50cd9f:	leave  
  50cda0:	enter  0x720a,0x64
  50cda4:	inc    esi
  50cda5:	xchg   edi,eax
  50cda6:	daa    
  50cda7:	dec    ecx
  50cda8:	(bad)  
  50cda9:	test   DWORD PTR [eax],0x7ad7cb69
  50cdaf:	add    al,0x7a
  50cdb1:	in     al,0xef
  50cdb3:	mov    dh,0x29
  50cdb5:	daa    
  50cdb6:	pop    esp
  50cdb7:	inc    ah
  50cdb9:	mov    ebp,0xc4964fcb
  50cdbe:	bound  esp,QWORD PTR ds:0xe4b98ad8
  50cdc4:	sti    
  50cdc5:	popa   
  50cdc6:	xor    DWORD PTR [edx+0x6559d8d],ebx
  50cdcc:	dec    esi
  50cdcd:	sub    al,0x1f
  50cdcf:	imul   esp,DWORD PTR [ebp+0x79fb413],0xffffffca
  50cdd6:	pop    ds
  50cdd7:	test   eax,0x2e0ce058
  50cddc:	lock nop
  50cdde:	neg    DWORD PTR ds:0x9756c083
  50cde4:	push   0xffffffc4
  50cde6:	movaps xmm4,XMMWORD PTR [edx+0x2d]
  50cdea:	ja     0x50cdfb
  50cdec:	loopne 0x50cdac
  50cdee:	add    edx,edi
  50cdf0:	sub    DWORD PTR [ebp+0x4c],ecx
  50cdf3:	add    ch,ah
  50cdf5:	ins    DWORD PTR es:[edi],dx
  50cdf6:	mov    ebx,0x6375be4a
  50cdfb:	retf   
  50cdfc:	iret   
  50cdfd:	test   DWORD PTR [edx],eax
  50cdff:	add    ebp,0xfffffffd
  50ce02:	fchs   
  50ce04:	cld    
  50ce05:	push   0x1ab4e0ee
  50ce0a:	adc    eax,0x29cd30d
  50ce0f:	in     al,dx
  50ce10:	xor    DWORD PTR [edi-0x3e3d2434],eax
  50ce16:	repnz lods eax,DWORD PTR ds:[esi]
  50ce18:	call   DWORD PTR [edi-0x5e]
  50ce1b:	jl     0x50ce53
  50ce1d:	push   ss
  50ce1e:	mov    ch,0x3e
  50ce20:	or     eax,0xb89fb40a
  50ce25:	cmp    ah,BYTE PTR [esi]
  50ce27:	cs in  eax,dx
  50ce29:	pop    es
  50ce2a:	push   ebx
  50ce2b:	pop    ss
  50ce2c:	scas   eax,DWORD PTR es:[edi]
  50ce2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ce2e:	pusha  
  50ce2f:	popa   
  50ce30:	push   ecx
  50ce31:	cdq    
  50ce32:	and    ebx,DWORD PTR ds:0x87b69234
  50ce38:	sbb    al,0x2b
  50ce3a:	jns    0x50ce29
  50ce3c:	test   eax,0x64bd84ff
  50ce41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ce42:	popa   
  50ce43:	aaa    
  50ce44:	cmp    eax,0xcf2ef0cf
  50ce49:	push   esp
  50ce4a:	in     al,dx
  50ce4b:	cmp    ecx,esp
  50ce4d:	dec    ecx
  50ce4e:	pop    es
  50ce4f:	ds inc esi
  50ce51:	and    ch,BYTE PTR [ebx]
  50ce53:	xchg   ebx,eax
  50ce54:	and    BYTE PTR [di],dh
  50ce57:	imul   esp,DWORD PTR [ecx+0x346aac50],0xffffff93
  50ce5e:	mov    edx,0x40bf3589
  50ce63:	or     ecx,eax
  50ce65:	popw   ss
  50ce67:	ficom  WORD PTR fs:[ebx]
  50ce6b:	sti    
  50ce6c:	xor    ebp,0xffffffcd
  50ce6f:	lods   eax,DWORD PTR ds:[esi]
  50ce70:	and    DWORD PTR [ebp-0x1b],ecx
  50ce73:	add    al,0x46
  50ce75:	fcomi  st,st(1)
  50ce77:	dec    ebp
  50ce78:	test   eax,0x698bc518
  50ce7d:	bound  ecx,QWORD PTR [ebx-0x523445d7]
  50ce83:	outs   dx,DWORD PTR ds:[esi]
  50ce84:	aas    
  50ce85:	add    bh,BYTE PTR [edi]
  50ce87:	js     0x50cece
  50ce89:	mov    bh,0xa
  50ce8b:	mov    dh,0xc4
  50ce8d:	xor    al,0x7d
  50ce8f:	stc    
  50ce90:	loope  0x50ced4
  50ce92:	into   
  50ce93:	loopne 0x50ce25
  50ce95:	fs hlt 
  50ce97:	cmp    eax,0xb038c4fd
  50ce9c:	jno    0x50ce74
  50ce9e:	scas   al,BYTE PTR es:[edi]
  50ce9f:	xchg   ebx,eax
  50cea0:	mov    edx,0x4dd020c5
  50cea5:	dec    esp
  50cea6:	ret    
  50cea7:	addr16 clc 
  50cea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50ceaa:	pop    ds
  50ceab:	lods   al,BYTE PTR ds:[esi]
  50ceac:	mov    ebp,0xdcd7dd14
  50ceb1:	ret    
  50ceb2:	inc    eax
  50ceb3:	pop    es
  50ceb4:	and    al,dl
  50ceb6:	(bad)  
  50ceb7:	gs ss inc esp
  50ceba:	push   esp
  50cebb:	(bad)  
  50cebd:	stc    
  50cebe:	xchg   esi,eax
  50cebf:	xor    DWORD PTR [edx],ebp
  50cec1:	cmp    eax,esi
  50cec3:	cmp    al,0xed
  50cec5:	inc    ebx
  50cec6:	dec    edi
  50cec7:	and    ecx,ecx
  50cec9:	add    ebx,DWORD PTR [eax+0x3b]
  50cecc:	xchg   BYTE PTR [ebx-0x666e1ae6],bh
  50ced2:	mov    esp,esp
  50ced4:	fdiv   st,st(3)
  50ced6:	mov    DWORD PTR [esi+ebx*4+0x3180f1de],edi
  50cedd:	(bad)
  50cee0:	ror    DWORD PTR [ebx],1
  50cee2:	mov    ds:0x74e3df0f,eax
  50cee7:	dec    edi
  50cee8:	lock pop ebx
  50ceea:	repnz aas 
  50ceec:	or     ecx,edi
  50ceee:	push   edx
  50ceef:	int3   
  50cef0:	jg     0x50ceab
  50cef2:	out    dx,al
  50cef3:	dec    esp
  50cef4:	outs   dx,DWORD PTR ds:[esi]
  50cef5:	cmp    eax,ecx
  50cef7:	pusha  
  50cef8:	pushf  
  50cef9:	xchg   ebx,eax
  50cefa:	scas   al,BYTE PTR es:[edi]
  50cefb:	sahf   
  50cefc:	or     eax,0xa50de588
  50cf01:	fisttp QWORD PTR [edi]
  50cf03:	shl    DWORD PTR [ebx+0x5de2ca4b],1
  50cf09:	xchg   DWORD PTR [esi+0x6eac032],edx
  50cf0f:	mov    edx,0xcb832347
  50cf14:	cmp    cl,cl
  50cf16:	add    al,0x59
  50cf18:	int3   
  50cf19:	out    dx,al
  50cf1a:	xlat   BYTE PTR ds:[ebx]
  50cf1b:	call   0x3b6a:0xf703e693
  50cf22:	adc    bl,BYTE PTR [ebx+0x47]
  50cf25:	mov    edx,0x64e9f7dc
  50cf2a:	push   ebp
  50cf2b:	mov    bh,0x96
  50cf2d:	scas   al,BYTE PTR es:[edi]
  50cf2e:	popa   
  50cf2f:	rcr    al,0x1e
  50cf32:	and    esi,DWORD PTR [edi]
  50cf34:	sub    BYTE PTR [esi+0x37],bh
  50cf37:	add    eax,DWORD PTR [ebp+0x0]
  50cf3a:	mov    edx,0x4fe1ab1b
  50cf3f:	jg     0x50cecc
  50cf41:	ror    DWORD PTR [ecx+0x1],cl
  50cf44:	inc    ebx
  50cf45:	mov    eax,0xa5adf319
  50cf4a:	(bad)  
  50cf4b:	cmp    ecx,eax
  50cf4d:	cmp    bh,BYTE PTR [edx+ebx*8+0x1305368f]
  50cf54:	aas    
  50cf55:	mov    bh,BYTE PTR [esi-0x2e]
  50cf58:	outs   dx,DWORD PTR ds:[esi]
  50cf59:	rep ins DWORD PTR es:[edi],dx
  50cf5b:	and    bh,BYTE PTR [ebx+0x6e591151]
  50cf61:	js     0x50cfcd
  50cf63:	mov    esi,0x4201a3dd
  50cf68:	in     eax,0xf7
  50cf6a:	xchg   esp,eax
  50cf6b:	ret    0xda0f
  50cf6e:	test   BYTE PTR [edx-0x190fcc7a],0x75
  50cf75:	push   ss
  50cf76:	ss lock leave 
  50cf79:	idiv   DWORD PTR [esi]
  50cf7b:	mov    esi,0x991f3b6d
  50cf80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50cf81:	fst    DWORD PTR [ebp+0x60]
  50cf84:	sbb    eax,0xb99ae625
  50cf89:	gs test ebp,0x8acc0ced
  50cf90:	stc    
  50cf91:	aam    0xbb
  50cf93:	nop
  50cf94:	or     DWORD PTR [ecx+ecx*4+0x2a9b4d48],edx
  50cf9b:	pop    esp
  50cf9c:	pop    es
  50cf9d:	scas   eax,DWORD PTR es:[edi]
  50cf9e:	cmc    
  50cf9f:	icebp  
  50cfa0:	pop    ecx
  50cfa1:	test   BYTE PTR [ebp+edi*2+0x20],al
  50cfa5:	arpl   WORD PTR [ecx-0x48],dx
  50cfa8:	cmp    eax,0x993e5cc
  50cfad:	and    BYTE PTR [ebp-0x73d7b6ef],bl
  50cfb3:	jl     0x50d000
  50cfb5:	jle    0x50cf81
  50cfb7:	xchg   ecx,eax
  50cfb8:	fwait
  50cfb9:	pop    ds
  50cfba:	jnp    0x50cf96
  50cfbc:	lods   al,BYTE PTR ds:[esi]
  50cfbd:	popf   
  50cfbe:	dec    ebx
  50cfbf:	int3   
  50cfc0:	cmc    
  50cfc1:	xchg   esp,eax
  50cfc2:	jnp    0x50cff6
  50cfc4:	push   ecx
  50cfc5:	inc    ebx
  50cfc6:	and    eax,0xc710e062
  50cfcb:	xchg   edi,eax
  50cfcc:	sub    BYTE PTR [ecx+edi*1],0x33
  50cfd0:	loope  0x50cf6c
  50cfd2:	sbb    dl,BYTE PTR [ebx+0x45]
  50cfd5:	call   0xaef065cf
  50cfda:	adc    al,0xf4
  50cfdc:	test   DWORD PTR [esi],0x91c59506
  50cfe2:	cmp    BYTE PTR [esi],0x6c
  50cfe5:	jp     0x50cfd8
  50cfe7:	out    0x66,eax
  50cfe9:	out    0xb4,al
  50cfeb:	out    0xf9,al
  50cfed:	cmp    BYTE PTR [ebx],dh
  50cfef:	and    BYTE PTR [ebx-0x46fb88d1],al
  50cff5:	ret    0x8aa0
  50cff8:	lods   eax,DWORD PTR ds:[esi]
  50cff9:	sbb    BYTE PTR [esi],0x33
  50cffc:	sub    al,dh
  50cffe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50cfff:	out    dx,eax
  50d000:	mov    ds,ecx
  50d002:	adc    BYTE PTR [ebx+esi*4-0x1d],bh
  50d006:	mov    esi,0x3aa0dc89
  50d00b:	rcr    BYTE PTR [edi+ebx*1+0x2575949d],1
  50d012:	mov    ah,BYTE PTR [edx-0x15]
  50d015:	inc    ecx
  50d016:	mov    dl,0xe4
  50d018:	push   esi
  50d019:	repz or BYTE PTR es:[ebx],cl
  50d01d:	inc    BYTE PTR [ecx+0x2fa91775]
  50d023:	mov    cl,BYTE PTR [ebx-0x790b7550]
  50d029:	xor    eax,0x1f25c180
  50d02e:	shr    BYTE PTR [ebp-0x736efab6],cl
  50d034:	xchg   ecx,eax
  50d035:	jge    0x50d011
  50d037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d038:	add    al,0xcf
  50d03a:	xchg   edx,eax
  50d03b:	inc    esi
  50d03c:	inc    eax
  50d03d:	std    
  50d03e:	pop    edx
  50d03f:	mov    ds:0x19ae2763,eax
  50d044:	mov    bh,0xce
  50d046:	call   0x41fca078
  50d04b:	mov    eax,ds:0xa2cbd204
  50d050:	(bad)  [edi+edx*4-0x641d2f7a]
  50d057:	mov    al,0xd4
  50d059:	push   cs
  50d05a:	mov    edx,0x355c5f37
  50d05f:	mov    ah,0x7b
  50d061:	mov    cl,dh
  50d063:	hlt    
  50d064:	shl    edi,0xda
  50d067:	xor    dh,BYTE PTR [esp+ebp*4+0x3369835f]
  50d06e:	loope  0x50d032
  50d070:	loopne 0x50d012
  50d072:	in     eax,0x8b
  50d074:	jno    0x50d0d8
  50d076:	mov    bl,0xa1
  50d078:	push   ds
  50d079:	vmread DWORD PTR [eax+0x418d5992],esi
  50d080:	test   eax,0xa97a5690
  50d085:	jl     0x50d0ba
  50d087:	int3   
  50d088:	mov    ebx,DWORD PTR [ebp+0x43]
  50d08b:	popa   
  50d08c:	(bad)
  50d08f:	retf   0x5382
  50d092:	gs mov al,0x33
  50d095:	xchg   esp,eax
  50d096:	sets   ch
  50d099:	bound  esp,QWORD PTR ds:[edx-0x77]
  50d09d:	in     eax,dx
  50d09e:	or     al,0xbd
  50d0a0:	popa   
  50d0a1:	sub    esp,DWORD PTR [edi+0x67]
  50d0a4:	bound  esp,QWORD PTR [eax-0x37]
  50d0a7:	xor    al,0xca
  50d0a9:	mov    DWORD PTR [eax],edi
  50d0ab:	retf   0x9b08
  50d0ae:	inc    ebx
  50d0af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d0b0:	pop    ebx
  50d0b1:	jge    0x50d119
  50d0b3:	cwde   
  50d0b4:	sbb    BYTE PTR [eax-0x2c5fef06],ch
  50d0ba:	jno    0x50d0fb
  50d0bc:	div    BYTE PTR [ecx-0x75]
  50d0bf:	and    bh,BYTE PTR [ebp-0x78a971a3]
  50d0c5:	in     eax,0xc0
  50d0c7:	fistp  DWORD PTR [ecx+0x16]
  50d0ca:	pop    edx
  50d0cb:	sbb    ch,0xff
  50d0ce:	hlt    
  50d0cf:	lods   al,BYTE PTR ds:[esi]
  50d0d0:	lods   al,BYTE PTR ds:[esi]
  50d0d1:	sbb    BYTE PTR [esi+0x13],bh
  50d0d4:	or     al,BYTE PTR [eax]
  50d0d6:	push   ebp
  50d0d7:	jns    0x50d0d3
  50d0d9:	(bad)  
  50d0da:	out    dx,al
  50d0db:	cmp    DWORD PTR [esi],edx
  50d0dd:	sahf   
  50d0de:	mov    es,WORD PTR [eax]
  50d0e0:	mov    esp,0x39b4f5cd
  50d0e5:	add    esp,DWORD PTR [edx+0x1d5073b1]
  50d0eb:	adc    eax,0xc62d4cff
  50d0f0:	xchg   ebx,eax
  50d0f1:	xchg   ecx,eax
  50d0f2:	ja     0x50d099
  50d0f4:	sub    edx,edx
  50d0f6:	dec    ebx
  50d0f7:	je     0x50d122
  50d0f9:	ret    
  50d0fa:	mov    BYTE PTR [ebx],0x5e
  50d0fd:	icebp  
  50d0fe:	aad    0x57
  50d100:	out    0x7c,eax
  50d102:	scas   eax,DWORD PTR es:[edi]
  50d103:	xchg   BYTE PTR [edi+0x6f],bh
  50d106:	adc    esi,ebp
  50d108:	cmc    
  50d109:	leave  
  50d10a:	xor    eax,0x1dc21822
  50d10f:	outs   dx,DWORD PTR ds:[esi]
  50d110:	xchg   ebp,eax
  50d111:	(bad)  
  50d112:	lahf   
  50d113:	cmp    BYTE PTR [esi-0x7d],dl
  50d116:	ret    0xf4d0
  50d119:	cmp    ah,BYTE PTR [ecx]
  50d11b:	mov    al,ds:0xd24a0219
  50d120:	dec    esp
  50d121:	(bad)  
  50d122:	mov    ch,0xa6
  50d124:	push   ds
  50d125:	mov    es,edi
  50d127:	mov    esi,0xd89de093
  50d12c:	iret   
  50d12d:	jo     0x50d0d1
  50d12f:	xor    BYTE PTR [ebp+0x7e21597f],bh
  50d135:	xor    BYTE PTR [eax-0x4f63b9b5],0x91
  50d13c:	loopne 0x50d0d2
  50d13e:	test   BYTE PTR [eax+0x50],0x40
  50d142:	ss jb  0x50d144
  50d145:	sub    bl,BYTE PTR [edi+ecx*4+0x5965c33f]
  50d14c:	or     cl,ch
  50d14e:	dec    esi
  50d14f:	loope  0x50d0e3
  50d151:	ss inc esp
  50d153:	shl    ah,1
  50d155:	pop    ds
  50d156:	sbb    BYTE PTR gs:[eax-0x37357adf],bh
  50d15d:	not    BYTE PTR [edi]
  50d15f:	mov    eax,0xab3d3eb8
  50d164:	(bad)  
  50d165:	fwait
  50d166:	vmwrite ecx,edx
  50d169:	ss cs pusha 
  50d16c:	ret    
  50d16d:	add    eax,0xa28b3a15
  50d172:	adc    ebp,DWORD PTR [edx-0x6f]
  50d175:	sbb    bl,0xb7
  50d178:	nop
  50d179:	cdq    
  50d17a:	cmc    
  50d17b:	jmp    0x647393f7
  50d180:	mov    ds:0xe671043f,eax
  50d185:	in     eax,dx
  50d186:	nop
  50d187:	stos   DWORD PTR es:[edi],eax
  50d188:	imul   ecx,DWORD PTR [edx-0x10e8543e],0xf7dd92db
  50d192:	push   0xffffffbf
  50d194:	fmul   st(5),st
  50d196:	pop    esp
  50d197:	jnp    0x50d153
  50d199:	fimul  WORD PTR [esi]
  50d19b:	push   cs
  50d19c:	lods   al,BYTE PTR ds:[esi]
  50d19d:	jle    0x50d1ab
  50d19f:	cli    
  50d1a0:	mov    WORD PTR [edx-0x46],es
  50d1a3:	lock (bad) 
  50d1a5:	mov    ds:0x44bffc77,eax
  50d1aa:	pushf  
  50d1ab:	dec    eax
  50d1ac:	mov    esi,0x167f50a8
  50d1b1:	jle    0x50d1f2
  50d1b3:	inc    edx
  50d1b4:	sub    BYTE PTR [ebp+0x0],bl
  50d1b7:	in     eax,dx
  50d1b8:	cmp    edi,DWORD PTR [ecx]
  50d1ba:	dec    ebp
  50d1bb:	(bad)  
  50d1bc:	fld    TBYTE PTR [ecx]
  50d1be:	mov    bh,0x26
  50d1c0:	xchg   ecx,eax
  50d1c1:	sahf   
  50d1c2:	shl    DWORD PTR [ebx],cl
  50d1c4:	ret    0x7f95
  50d1c7:	or     eax,DWORD PTR [ebp-0x1d]
  50d1ca:	gs dec ebp
  50d1cc:	dec    ebx
  50d1cd:	cmp    al,0x6b
  50d1cf:	inc    ebp
  50d1d0:	adc    al,0x70
  50d1d2:	mov    esi,0x84c8ba6
  50d1d7:	dec    edx
  50d1d8:	out    dx,al
  50d1d9:	sahf   
  50d1da:	xchg   ebx,eax
  50d1db:	jmp    0x7fb50cff
  50d1e0:	mov    edi,DWORD PTR [edx-0x25]
  50d1e3:	add    ch,BYTE PTR [ebx-0x75]
  50d1e6:	mov    es,WORD PTR [ebx+ebx*1+0x47]
  50d1ea:	scas   al,BYTE PTR es:[edi]
  50d1eb:	mov    esp,0xdc6d8d4a
  50d1f0:	ret    
  50d1f1:	pop    ds
  50d1f2:	fnstcw WORD PTR [edx+0x20]
  50d1f5:	mov    ebp,0x15364e33
  50d1fa:	sub    al,0x91
  50d1fc:	sub    esi,DWORD PTR [ebx+0x12]
  50d1ff:	sbb    bl,dl
  50d201:	mov    ecx,DWORD PTR [ebx]
  50d203:	xchg   ebx,eax
  50d204:	test   DWORD PTR [ebx],esi
  50d206:	shl    DWORD PTR [ecx],cl
  50d208:	sub    eax,0xc656f9c3
  50d20d:	mov    eax,ds:0xb44f7d2d
  50d212:	popa   
  50d213:	jae    0x50d272
  50d215:	cmp    eax,0x4b86ce0d
  50d21a:	push   esi
  50d21b:	push   0x4a1d2b51
  50d220:	cmc    
  50d221:	nop
  50d222:	add    edi,esi
  50d224:	bound  edi,QWORD PTR [eax]
  50d226:	sbb    edx,DWORD PTR [eax]
  50d228:	scas   al,BYTE PTR es:[edi]
  50d229:	pop    esp
  50d22a:	aad    0xf3
  50d22c:	dec    edx
  50d22d:	in     eax,dx
  50d22e:	dec    esi
  50d22f:	into   
  50d230:	aas    
  50d231:	jp     0x50d23d
  50d233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d234:	sbb    DWORD PTR [ebx-0x26faccdd],edx
  50d23a:	inc    esi
  50d23b:	clc    
  50d23c:	(bad)  
  50d23d:	jge    0x50d1ef
  50d23f:	test   al,0x89
  50d241:	push   esi
  50d242:	push   eax
  50d243:	repz sar BYTE PTR [edx],1
  50d246:	push   ecx
  50d247:	jbe    0x50d1fc
  50d249:	fldcw  WORD PTR [edx+edi*4-0x65]
  50d24d:	cld    
  50d24e:	adc    eax,0x3262293
  50d253:	stc    
  50d254:	stos   BYTE PTR es:[edi],al
  50d255:	dec    esi
  50d256:	bound  ebp,QWORD PTR [ebp-0xc17c0ef]
  50d25c:	fldlg2 
  50d25e:	into   
  50d25f:	icebp  
  50d260:	sbb    dh,BYTE PTR [eax]
  50d262:	pop    ds
  50d263:	push   DWORD PTR [ebx+0x7838b381]
  50d269:	jecxz  0x50d248
  50d26b:	sbb    DWORD PTR [esi-0xb],esp
  50d26e:	cmp    ebp,DWORD PTR [esi+ecx*4-0x64]
  50d272:	ins    DWORD PTR es:[edi],dx
  50d273:	add    DWORD PTR [edi],esp
  50d275:	pop    ss
  50d276:	(bad)  
  50d277:	shl    BYTE PTR [ebp-0x5e],1
  50d27a:	cli    
  50d27b:	fidiv  DWORD PTR [esi-0x1f]
  50d27e:	mov    ebx,0xa1cc8ae2
  50d283:	jge    0x50d2f7
  50d285:	or     eax,0x4c2d3a33
  50d28a:	pop    ebp
  50d28b:	xor    BYTE PTR [ecx-0x18],dl
  50d28e:	xchg   ecx,eax
  50d28f:	ins    BYTE PTR es:[edi],dx
  50d290:	lahf   
  50d291:	and    al,0x9f
  50d293:	xor    DWORD PTR [ecx+edi*2],0xdf79e8c7
  50d29a:	es dec edi
  50d29c:	or     cl,BYTE PTR [esi]
  50d29e:	out    dx,al
  50d29f:	std    
  50d2a0:	add    bh,BYTE PTR [edi]
  50d2a2:	xor    BYTE PTR [eax],0xf0
  50d2a5:	xor    DWORD PTR [ebx+0x1221c3a2],0x56a65d9c
  50d2af:	xor    esp,esp
  50d2b1:	aaa    
  50d2b2:	xor    bh,ch
  50d2b4:	int    0x1c
  50d2b6:	mov    ebp,0xd5039106
  50d2bb:	pop    es
  50d2bc:	retf   0x9ee0
  50d2bf:	xor    ah,BYTE PTR [ebp+0x67]
  50d2c2:	int3   
  50d2c3:	add    BYTE PTR [esi],0x5
  50d2c6:	pushf  
  50d2c7:	bound  esp,QWORD PTR [ecx]
  50d2c9:	jo     0x50d2b7
  50d2cb:	fild   DWORD PTR [edi+0x6c3ca41e]
  50d2d1:	cmc    
  50d2d2:	add    ch,BYTE PTR [ecx+ecx*1-0x85c977d]
  50d2d9:	lods   al,BYTE PTR ds:[esi]
  50d2da:	inc    edx
  50d2db:	jmp    0x50d2bf
  50d2dd:	lods   al,BYTE PTR ds:[esi]
  50d2de:	aaa    
  50d2df:	test   al,0xd8
  50d2e1:	jmp    0x62dcd57d
  50d2e6:	jno    0x50d331
  50d2e8:	inc    esp
  50d2e9:	inc    edi
  50d2ea:	inc    ecx
  50d2eb:	jae    0x50d33a
  50d2ed:	push   ebx
  50d2ee:	inc    esp
  50d2ef:	in     al,dx
  50d2f0:	aad    0x22
  50d2f2:	dec    BYTE PTR [edx+0x2acb77a7]
  50d2f8:	mov    dl,0x2c
  50d2fa:	pop    esi
  50d2fb:	cmp    al,0x55
  50d2fd:	mov    cl,0xa2
  50d2ff:	div    BYTE PTR [edi+0x6c]
  50d302:	or     ch,BYTE PTR [edx]
  50d304:	inc    eax
  50d305:	ja     0x50d36c
  50d307:	or     DWORD PTR [edi+0x1b24c899],esi
  50d30d:	out    0x99,al
  50d30f:	sbb    BYTE PTR [edi+0x6d],dh
  50d312:	xchg   ecx,eax
  50d313:	scas   al,BYTE PTR es:[edi]
  50d314:	dec    edx
  50d315:	inc    eax
  50d316:	or     edx,ebp
  50d318:	in     eax,0x96
  50d31a:	gs mov eax,0x6720d4e1
  50d320:	dec    ebp
  50d321:	mov    ebp,0x8cb043fd
  50d326:	fwait
  50d327:	push   ds
  50d328:	lods   eax,DWORD PTR ds:[esi]
  50d329:	inc    edi
  50d32a:	add    DWORD PTR [edi],ecx
  50d32c:	jo     0x50d2d8
  50d32e:	or     bh,dl
  50d330:	sar    eax,1
  50d332:	call   0x1cdaccd
  50d337:	cmp    al,0x54
  50d339:	rcr    DWORD PTR [edi-0x12],cl
  50d33c:	pop    eax
  50d33d:	imul   edx,DWORD PTR [eax],0xffffff99
  50d340:	xor    DWORD PTR [esi-0x64b79e3b],0xff7e5f5c
  50d34a:	popa   
  50d34b:	fistp  QWORD PTR [ecx-0x27c727ad]
  50d351:	mov    al,0x6b
  50d353:	imul   ebx,DWORD PTR [esi],0xffffffc0
  50d356:	int    0xe7
  50d358:	mov    WORD PTR [edx+0x71],fs
  50d35b:	pop    eax
  50d35c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d35d:	xchg   ebp,eax
  50d35e:	loope  0x50d3d6
  50d360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d361:	aas    
  50d362:	lock mov ebp,0x8a2c1a4b
  50d368:	adc    BYTE PTR [ecx-0x3b8c0822],al
  50d36e:	es pushf 
  50d370:	loopne 0x50d345
  50d372:	pop    ss
  50d373:	retf   0xbf5b
  50d376:	stos   BYTE PTR es:[edi],al
  50d377:	lods   eax,DWORD PTR ds:[esi]
  50d378:	cmp    ebp,DWORD PTR [eax+0x3b3c1d59]
  50d37e:	stos   DWORD PTR es:[edi],eax
  50d37f:	add    al,BYTE PTR ds:0x23063847
  50d385:	dec    edx
  50d386:	je     0x50d39f
  50d388:	pop    esp
  50d389:	fcom   DWORD PTR [esi+0x73ee0dcf]
  50d38f:	ins    BYTE PTR es:[edi],dx
  50d390:	call   0xcfc:0xcfe1a2f3
  50d397:	fiadd  WORD PTR [edx-0x64c53e2a]
  50d39d:	sbb    al,0x84
  50d39f:	cwde   
  50d3a0:	lds    ebp,FWORD PTR [edi-0x45]
  50d3a3:	mov    ds:0x9e518443,eax
  50d3a8:	push   eax
  50d3a9:	mov    eax,0x86a5726b
  50d3ae:	xchg   ebx,eax
  50d3af:	dec    edx
  50d3b0:	dec    edx
  50d3b1:	push   cs
  50d3b2:	repz add eax,0x5c538679
  50d3b8:	mov    ch,0xef
  50d3ba:	add    DWORD PTR [edx-0xa226c34],esi
  50d3c0:	clc    
  50d3c1:	sbb    al,0x6f
  50d3c3:	dec    ecx
  50d3c4:	inc    ebp
  50d3c5:	jnp    0x50d3b5
  50d3c7:	inc    edx
  50d3c8:	add    DWORD PTR [eax+0x68],eax
  50d3cb:	inc    esi
  50d3cc:	mov    dh,0x23
  50d3ce:	enter  0x85d5,0x9d
  50d3d2:	inc    ecx
  50d3d3:	xchg   DWORD PTR [eax-0x5c2ad770],ecx
  50d3d9:	pusha  
  50d3da:	ins    DWORD PTR es:[edi],dx
  50d3db:	mov    eax,ds:0x71a073b4
  50d3e0:	stc    
  50d3e1:	fdivr  DWORD PTR [edx]
  50d3e3:	push   ecx
  50d3e4:	jne    0x50d372
  50d3e6:	fwait
  50d3e7:	shl    DWORD PTR [esi-0x3],cl
  50d3ea:	cmp    BYTE PTR [ecx+ebp*8+0x50ebf329],al
  50d3f1:	and    eax,0x9c932f1d
  50d3f6:	sub    al,0xfb
  50d3f8:	mov    dl,0x30
  50d3fa:	sub    DWORD PTR [ebx-0x23],edx
  50d3fd:	and    al,0xa4
  50d3ff:	push   esp
  50d400:	push   0xc610511a
  50d405:	mov    cl,0x6a
  50d407:	mov    eax,ds:0x97a684eb
  50d40c:	add    ebp,0xcaf94c95
  50d412:	cmp    al,0xad
  50d414:	ins    DWORD PTR es:[edi],dx
  50d415:	in     al,dx
  50d416:	pop    ebp
  50d417:	hlt    
  50d418:	rcr    DWORD PTR [ecx+0xa],cl
  50d41b:	shr    DWORD PTR [ebp-0x680c71da],1
  50d421:	jne    0x50d3fb
  50d423:	stos   BYTE PTR es:[edi],al
  50d424:	fs xchg ecx,eax
  50d426:	inc    edx
  50d427:	and    edi,edx
  50d429:	es dec edx
  50d42b:	sar    eax,0x34
  50d42e:	test   eax,0x81835262
  50d433:	repnz lea ebx,[edx]
  50d436:	jmp    0xb10f95ea
  50d43b:	(bad)  
  50d43c:	dec    edi
  50d43d:	rol    DWORD PTR [ecx-0x1a],0xd0
  50d441:	and    esp,DWORD PTR [ebx-0x48502b7a]
  50d447:	inc    edx
  50d448:	cmp    al,0xa0
  50d44a:	push   eax
  50d44b:	inc    edx
  50d44c:	out    dx,al
  50d44d:	mov    ecx,0xfea0b22d
  50d452:	cmp    esp,ebp
  50d454:	mov    BYTE PTR [esi],dl
  50d456:	test   DWORD PTR [edx+eax*4-0x7210b47f],eax
  50d45d:	mov    BYTE PTR [esi-0x65],cl
  50d460:	repz add eax,0xc67bb09a
  50d466:	push   ebp
  50d467:	pop    ebp
  50d468:	add    al,0x93
  50d46a:	(bad)  
  50d46b:	lods   al,BYTE PTR ds:[si]
  50d46d:	scas   al,BYTE PTR es:[edi]
  50d46e:	push   edi
  50d46f:	dec    esp
  50d470:	ds dec eax
  50d472:	arpl   si,di
  50d474:	daa    
  50d475:	idiv   DWORD PTR [ebp+0x46]
  50d478:	dec    esi
  50d479:	cld    
  50d47a:	ja     0x50d469
  50d47c:	outs   dx,BYTE PTR ds:[esi]
  50d47d:	jp     0x50d40b
  50d47f:	mov    WORD PTR [ebx+esi*4-0x28],ds
  50d483:	ss dec eax
  50d485:	adc    al,0x98
  50d487:	fcmovne st,st(0)
  50d489:	je     0x50d4c3
  50d48b:	dec    edi
  50d48c:	adc    ebx,DWORD PTR [edi]
  50d48e:	inc    esp
  50d48f:	or     ch,BYTE PTR [ebp-0x683e34e7]
  50d495:	shl    BYTE PTR [esi],0xb
  50d498:	jecxz  0x50d443
  50d49a:	callw  0x233e
  50d49e:	push   esp
  50d49f:	test   BYTE PTR [edx-0x59],0x27
  50d4a3:	jl     0x50d469
  50d4a5:	sub    BYTE PTR [edi],dl
  50d4a7:	jmp    0xb695bf69
  50d4ac:	(bad)  
  50d4ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d4af:	fdiv   st(4),st
  50d4b1:	jp     0x50d472
  50d4b3:	out    0xde,eax
  50d4b5:	sub    al,BYTE PTR [ecx+ecx*1+0x6067fdb3]
  50d4bc:	mov    edi,0xdd09721c
  50d4c1:	(bad)  
  50d4c2:	pop    ebp
  50d4c3:	mov    edx,0x9fff1ca0
  50d4c8:	cmp    eax,0x8b0be2eb
  50d4cd:	mov    ch,0xad
  50d4cf:	pop    edi
  50d4d0:	(bad)  
  50d4d1:	data16 ja 0x50d4c5
  50d4d4:	mov    ah,0x69
  50d4d6:	xchg   ebp,eax
  50d4d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d4d8:	fmul   DWORD PTR [esi]
  50d4da:	pop    esp
  50d4db:	cmp    al,0x81
  50d4dd:	push   ecx
  50d4de:	add    ah,BYTE PTR [edi+ecx*4+0x6d9464ed]
  50d4e5:	mov    edi,0x64170252
  50d4ea:	fs aaa 
  50d4ec:	jp     0x50d4c4
  50d4ee:	pop    es
  50d4ef:	inc    ebp
  50d4f0:	mov    ebx,0xe264f770
  50d4f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d4f6:	jmp    0x2340:0x54294149
  50d4fd:	pop    edx
  50d4fe:	popf   
  50d4ff:	dec    esi
  50d500:	inc    esp
  50d501:	mov    dh,0x7a
  50d503:	in     al,0xfc
  50d505:	lahf   
  50d506:	imul   edx,DWORD PTR [edi+0x51b24eab],0xffffff9d
  50d50d:	fnstsw WORD PTR [ecx+0x7b]
  50d510:	icebp  
  50d511:	dec    ebx
  50d512:	sbb    edx,DWORD PTR [eax+eax*4]
  50d515:	mov    cs,WORD PTR ds:0x38e5a02d
  50d51b:	stos   DWORD PTR es:[edi],eax
  50d51c:	jp     0x50d585
  50d51e:	sahf   
  50d51f:	mov    ds:0x63a24fda,al
  50d524:	push   esi
  50d525:	and    DWORD PTR [eax+0x73551427],edi
  50d52b:	idiv   DWORD PTR [ebx+0x3d]
  50d52e:	xchg   edi,eax
  50d52f:	add    ch,bh
  50d531:	add    al,0x17
  50d533:	(bad)  
  50d534:	mov    ds:0xfc1d81c8,eax
  50d539:	int    0xb0
  50d53b:	push   edx
  50d53c:	xor    al,0x5
  50d53e:	inc    esi
  50d53f:	add    esi,eax
  50d541:	outs   dx,BYTE PTR ds:[esi]
  50d542:	and    DWORD PTR [esi-0x62ca8f4a],ecx
  50d548:	xor    eax,0xabadfd5c
  50d54d:	pop    ss
  50d54e:	popa   
  50d54f:	retf   
  50d550:	push   edi
  50d551:	dec    edx
  50d552:	fmul   DWORD PTR [eax+0x78d5dc71]
  50d558:	pop    eax
  50d559:	fiadd  DWORD PTR [ecx+0x2c]
  50d55c:	icebp  
  50d55d:	push   ecx
  50d55e:	pusha  
  50d55f:	dec    esi
  50d560:	(bad)  
  50d561:	xchg   edi,eax
  50d562:	jmp    0x13873ed7
  50d567:	cwde   
  50d568:	add    BYTE PTR [eax+ebp*2],dl
  50d56b:	(bad)  
  50d56d:	cmp    edx,ebx
  50d56f:	(bad)  
  50d570:	xchg   esp,eax
  50d571:	pop    edi
  50d572:	jl     0x50d5ce
  50d574:	daa    
  50d575:	jmp    0xe98b:0xe28bc5fb
  50d57c:	in     al,dx
  50d57d:	add    eax,0x693ea447
  50d582:	jae    0x50d516
  50d584:	xor    esp,eax
  50d586:	add    al,0x25
  50d588:	les    ebp,FWORD PTR [edi-0x67]
  50d58b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d58c:	rcl    cl,1
  50d58e:	dec    ebp
  50d58f:	mov    al,ds:0x8af98165
  50d594:	push   eax
  50d595:	ret    
  50d596:	imul   ebx,DWORD PTR [edi+0x54083b1e],0x6b
  50d59d:	sbb    cl,0xe7
  50d5a0:	and    dh,BYTE PTR [ebp+0x50eeee96]
  50d5a6:	mov    al,dl
  50d5a8:	nop
  50d5a9:	call   DWORD PTR [ecx+0x43]
  50d5ac:	cdq    
  50d5ad:	out    0x84,eax
  50d5af:	sub    al,0x0
  50d5b1:	(bad)  
  50d5b2:	mov    ah,0xe0
  50d5b4:	jmp    0x50d5a9
  50d5b6:	(bad)  
  50d5b8:	mov    eax,0x2552eea9
  50d5bd:	inc    esp
  50d5be:	je     0x50d574
  50d5c0:	dec    esi
  50d5c1:	es ja  0x50d5e2
  50d5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d5c5:	pop    esp
  50d5c6:	inc    esi
  50d5c7:	repnz daa 
  50d5c9:	fimul  DWORD PTR [edx]
  50d5cb:	inc    ebx
  50d5cc:	(bad)  
  50d5cd:	outs   dx,DWORD PTR ds:[esi]
  50d5ce:	adc    ecx,DWORD PTR [ecx-0x63adea08]
  50d5d4:	add    eax,0x65c14d34
  50d5d9:	adc    ah,BYTE PTR [ecx*2-0x4434ba64]
  50d5e0:	cmp    al,bl
  50d5e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d5e3:	xchg   ebx,eax
  50d5e4:	int3   
  50d5e5:	inc    edx
  50d5e6:	pop    ebx
  50d5e7:	ret    
  50d5e8:	jmp    FWORD PTR [edi+0x4ac66dbf]
  50d5ee:	dec    edi
  50d5ef:	add    DWORD PTR [ebp+0x13],ecx
  50d5f2:	inc    edx
  50d5f3:	pop    edi
  50d5f4:	mov    eax,esi
  50d5f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d5f7:	popa   
  50d5f8:	sub    esp,ebp
  50d5fa:	xlat   BYTE PTR ds:[ebx]
  50d5fb:	mov    ecx,0x89df16f5
  50d600:	xchg   edx,eax
  50d601:	inc    esp
  50d602:	fsin   
  50d604:	sub    eax,0xe8d83b2
  50d609:	fist   WORD PTR [ebp+0x3b]
  50d60c:	jnp    0x50d60a
  50d60e:	in     al,0x68
  50d610:	dec    ebx
  50d611:	and    ebp,DWORD PTR [ebp+0x70]
  50d614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d615:	mov    eax,0xefe16f54
  50d61a:	div    DWORD PTR [ebx-0x3c442104]
  50d620:	cmp    ebx,ecx
  50d622:	dec    esi
  50d623:	repnz iret 
  50d625:	or     dl,BYTE PTR [edi+0x21]
  50d628:	xor    eax,0x9ff3095e
  50d62d:	mov    DWORD PTR [edx],eax
  50d62f:	loope  0x50d689
  50d631:	sub    DWORD PTR [edx+edx*2+0x2bdc3dc0],0x65
  50d639:	jl     0x50d687
  50d63b:	les    edx,FWORD PTR [ebx+esi*1+0x55]
  50d63f:	rol    BYTE PTR [ebx],cl
  50d641:	adc    eax,0xf7e2679a
  50d646:	iret   
  50d647:	xchg   BYTE PTR [edx],ch
  50d649:	xor    BYTE PTR ds:0x9d69166f,0x90
  50d650:	das    
  50d651:	mov    edx,0x98d72bc7
  50d656:	mov    ss,WORD PTR [ecx]
  50d658:	inc    edx
  50d659:	ins    BYTE PTR es:[edi],dx
  50d65a:	push   cs
  50d65b:	mov    ds:0xfe71828a,eax
  50d660:	in     eax,dx
  50d661:	dec    esp
  50d662:	fild   WORD PTR [ebp-0x4a]
  50d665:	xor    eax,0xd7b64811
  50d66a:	ret    
  50d66b:	mov    cl,0xf1
  50d66d:	popf   
  50d66e:	or     bl,BYTE PTR [eax+0x29faffcb]
  50d674:	adc    ebp,esi
  50d676:	aaa    
  50d677:	rol    dh,0xff
  50d67a:	sbb    al,0x86
  50d67c:	test   al,0xef
  50d67e:	add    ch,ch
  50d680:	dec    edi
  50d681:	sub    al,0x2d
  50d683:	mul    BYTE PTR [ecx]
  50d685:	les    ecx,FWORD PTR [ecx+0x29]
  50d688:	fdiv   st(7),st
  50d68a:	push   ecx
  50d68b:	ds das 
  50d68d:	jbe    0x50d668
  50d68f:	mov    ebp,0x8aa68cd2
  50d694:	jp     0x50d648
  50d696:	loopne 0x50d686
  50d698:	or     BYTE PTR [edi],dh
  50d69a:	mov    al,0x42
  50d69c:	repz add BYTE PTR [edi],bl
  50d69f:	(bad)
  50d6a3:	(bad)  
  50d6a4:	lock mov eax,ds:0x1296d8b4
  50d6aa:	cwde   
  50d6ab:	mov    BYTE PTR [edi],bl
  50d6ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d6ae:	ss jg  0x50d70e
  50d6b1:	jge    0x50d678
  50d6b3:	in     eax,dx
  50d6b4:	out    dx,al
  50d6b5:	push   ebx
  50d6b6:	dec    DWORD PTR [ebp+0x4f7b9200]
  50d6bc:	sahf   
  50d6bd:	sbb    al,dh
  50d6bf:	cmp    cl,dl
  50d6c1:	std    
  50d6c2:	pop    ds
  50d6c3:	cwde   
  50d6c4:	jmp    0x7a3be6dc
  50d6c9:	inc    edx
  50d6ca:	int    0x92
  50d6cc:	fdivr  QWORD PTR [ebp-0x574f1eaf]
  50d6d2:	sub    BYTE PTR [ecx+eiz*8+0xa28af2],dl
  50d6d9:	xchg   ebx,eax
  50d6da:	hlt    
  50d6db:	popf   
  50d6dc:	div    DWORD PTR [edi+0x5b]
  50d6df:	add    ah,BYTE PTR [eax+ebx*4+0x34]
  50d6e3:	push   ss
  50d6e4:	mov    gs,esi
  50d6e6:	stos   BYTE PTR es:[edi],al
  50d6e7:	lods   eax,DWORD PTR ds:[esi]
  50d6e8:	lods   eax,DWORD PTR ds:[esi]
  50d6e9:	(bad)  
  50d6eb:	mov    bl,0xdf
  50d6ed:	push   edi
  50d6ee:	sti    
  50d6ef:	jge    0x50d6aa
  50d6f1:	cmc    
  50d6f2:	pop    sp
  50d6f4:	and    BYTE PTR [edi+0x2acdbe75],dh
  50d6fa:	jmp    0x50d755
  50d6fc:	test   BYTE PTR [ebp-0x11],ah
  50d6ff:	(bad)
  50d702:	xchg   esi,eax
  50d703:	add    esi,DWORD PTR [ebx+0x58a0a789]
  50d709:	sub    esp,DWORD PTR [ebx-0x5b0d279d]
  50d70f:	in     al,0x5b
  50d711:	sub    BYTE PTR [edx-0x1c406eb0],0x34
  50d718:	mov    eax,ds:0x1d982793
  50d71d:	inc    esi
  50d71e:	(bad)  
  50d720:	cmp    al,0x16
  50d722:	ret    
  50d723:	xor    cl,BYTE PTR [edx-0x5b]
  50d726:	xor    eax,0x7b349008
  50d72b:	sub    bh,BYTE PTR [ebx]
  50d72d:	jno    0x50d705
  50d72f:	aam    0x9b
  50d731:	or     edi,0xffffffe0
  50d734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d735:	sahf   
  50d736:	xor    cl,cl
  50d738:	into   
  50d739:	push   eax
  50d73a:	xor    ebp,DWORD PTR [esi-0x8]
  50d73d:	sub    al,0x81
  50d73f:	(bad)  
  50d741:	rcl    DWORD PTR [edx-0x27d27c82],1
  50d747:	cli    
  50d748:	add    dh,BYTE PTR [eax+0x19]
  50d74b:	clc    
  50d74c:	repnz pop eax
  50d74e:	sbb    DWORD PTR [esi+0x36cb80d1],ebx
  50d754:	mov    dl,0x6f
  50d756:	scas   eax,DWORD PTR es:[edi]
  50d757:	shr    edi,0xd2
  50d75a:	es daa 
  50d75c:	push   ecx
  50d75d:	jbe    0x50d701
  50d75f:	pop    edi
  50d760:	sbb    BYTE PTR [ecx],bl
  50d762:	or     DWORD PTR [ebp+0x16],edx
  50d765:	add    esi,eax
  50d767:	push   es
  50d768:	xchg   al,al
  50d76a:	mov    ch,BYTE PTR [ebx-0x2]
  50d76d:	push   0x666a852d
  50d772:	hlt    
  50d773:	mov    esp,0x8aa97493
  50d778:	popa   
  50d779:	or     bl,BYTE PTR [ecx+0x39bf1ffe]
  50d77f:	aad    0x25
  50d781:	fs jno 0x50d7f5
  50d784:	xchg   edi,eax
  50d785:	scas   eax,DWORD PTR es:[edi]
  50d786:	nop
  50d787:	inc    ebp
  50d788:	pushf  
  50d789:	inc    edx
  50d78a:	jle    0x50d719
  50d78c:	xchg   edx,eax
  50d78d:	mov    edi,0x2cd768a2
  50d792:	aas    
  50d793:	mov    eax,0x2988dec9
  50d798:	sbb    ah,BYTE PTR [ebx-0xb]
  50d79b:	mov    al,0x32
  50d79d:	sub    al,0xde
  50d79f:	fild   QWORD PTR [edi+0x15]
  50d7a2:	cmp    eax,0x3e8a1590
  50d7a7:	out    dx,al
  50d7a8:	jp     0x50d765
  50d7aa:	enter  0x48f2,0x69
  50d7ae:	dec    ecx
  50d7af:	jmp    0x50d7bf
  50d7b1:	mov    edx,0x90809792
  50d7b6:	jbe    0x50d740
  50d7b8:	loop   0x50d759
  50d7ba:	adc    al,0xcf
  50d7bc:	adc    eax,0x372b3a40
  50d7c1:	inc    eax
  50d7c2:	cs pushf 
  50d7c4:	ror    eax,0x21
  50d7c7:	hlt    
  50d7c8:	ror    BYTE PTR [eax],0x45
  50d7cb:	call   0xbb85:0xa6dec919
  50d7d2:	cli    
  50d7d3:	stc    
  50d7d4:	xchg   ebx,eax
  50d7d5:	mov    ebp,0x2fd46b85
  50d7da:	clc    
  50d7db:	outs   dx,BYTE PTR ds:[esi]
  50d7dc:	(bad)  
  50d7dd:	out    0xec,eax
  50d7df:	sbb    eax,edi
  50d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50d7e2:	sar    ebp,0xee
  50d7e5:	push   edx
  50d7e6:	mov    ds:0x97b8f4ab,al
  50d7eb:	mov    dl,0x12
  50d7ed:	dec    ebx
  50d7ee:	out    dx,eax
  50d7ef:	fidiv  DWORD PTR [esi]
  50d7f1:	clc    
  50d7f2:	(bad)  
  50d7f3:	xor    eax,0x55d1ed86
  50d7f8:	jle    0x50d83c
  50d7fa:	pop    ecx
  50d7fb:	push   ebp
  50d7fc:	fcmovb st,st(5)
  50d7fe:	add    ebp,DWORD PTR [ecx-0x4a]
  50d801:	dec    eax
  50d802:	push   ecx
  50d803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50d804:	out    0xbb,eax
  50d806:	out    dx,eax
  50d807:	out    0xec,al
  50d809:	xor    ax,0x696d
  50d80d:	cmc    
  50d80e:	jle    0x50d7ed
  50d810:	test   eax,0xbe1555fb
  50d815:	xchg   ebp,eax
  50d816:	or     al,0xe1
  50d818:	xchg   DWORD PTR [edx-0x49c5e3b6],ebp
  50d81e:	jp     0x50d842
  50d820:	shl    DWORD PTR [esi+0x7130f76e],0x86
  50d827:	fwait
  50d828:	dec    edx
  50d829:	test   al,0x6e
  50d82b:	xor    dh,dh
  50d82d:	sahf   
  50d82e:	adc    eax,0x2a216668
  50d833:	sub    DWORD PTR [eax-0x2a5ac8cc],ebx
  50d839:	add    bl,BYTE PTR [ecx-0x62ac99cb]
  50d83f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50d840:	in     al,dx
  50d841:	sub    al,0x8c
  50d843:	xchg   edx,eax
  50d844:	(bad)  
  50d845:	in     eax,dx
  50d846:	stc    
  50d847:	cwde   
  50d848:	or     al,0xc6
  50d84a:	and    DWORD PTR [esi-0x55],ebx
  50d84d:	jmp    0x3d8e:0x5789ccc2
  50d854:	dec    eax
  50d855:	ins    DWORD PTR es:[edi],dx
  50d856:	cwde   
  50d857:	xlat   BYTE PTR ds:[ebx]
  50d858:	pop    ss
  50d859:	les    edi,FWORD PTR [eax]
  50d85b:	fild   DWORD PTR [edx]
  50d85d:	loop   0x50d8ab
  50d85f:	and    eax,0x43887a80
  50d864:	jb     0x50d816
  50d866:	xchg   ecx,eax
  50d867:	or     eax,0xab198892
  50d86c:	mov    bl,0xee
  50d86e:	mov    dh,0x20
  50d870:	ror    BYTE PTR [edx+0x45],cl
  50d873:	arpl   di,bx
  50d875:	pop    ecx
  50d876:	aaa    
  50d877:	mov    al,0xf6
  50d879:	xchg   edi,eax
  50d87a:	sbb    al,0xe9
  50d87c:	aas    
  50d87d:	jo     0x50d829
  50d87f:	dec    edx
  50d880:	in     eax,dx
  50d881:	mov    ch,0x69
  50d883:	mov    WORD PTR [ecx],ds
  50d885:	add    al,0xe8
  50d887:	jb     0x50d843
  50d889:	popa   
  50d88a:	loope  0x50d8c8
  50d88c:	ror    DWORD PTR [eax],0x46
  50d88f:	dec    esi
  50d890:	loope  0x50d8b4
  50d892:	dec    ecx
  50d893:	or     al,0x13
  50d896:	adc    esi,DWORD PTR [eax+0x6465055a]
  50d89c:	je     0x50d870
  50d89e:	fdivr  DWORD PTR [esp+edx*8]
  50d8a1:	sbb    bl,BYTE PTR [eax+0x1a74b32c]
  50d8a7:	test   eax,0xd6eff20d
  50d8ac:	imul   esp,DWORD PTR [esi-0x799d3e34],0xc1496715
  50d8b6:	repz je 0x50d8c4
  50d8b9:	push   es
  50d8ba:	cmp    eax,0xae53be81
  50d8bf:	dec    ecx
  50d8c0:	test   BYTE PTR [eax-0x6fbd1171],0x97
  50d8c7:	out    dx,al
  50d8c8:	jo     0x50d886
  50d8ca:	xor    al,0xa4
  50d8cc:	loop   0x50d903
  50d8ce:	in     al,0x5c
  50d8d0:	xchg   esp,eax
  50d8d1:	jmp    0x9bb5:0x66e818e9
  50d8d8:	les    ebp,FWORD PTR [eax]
  50d8da:	push   0x1e
  50d8dc:	push   edi
  50d8dd:	(bad)  
  50d8df:	std    
  50d8e0:	mov    WORD PTR [ecx-0x5b6ec3cd],gs
  50d8e6:	lods   al,BYTE PTR ds:[esi]
  50d8e7:	mov    esi,0xbb5d5bdc
  50d8ec:	dec    ecx
  50d8ed:	inc    edx
  50d8ee:	inc    edx
  50d8ef:	jno    0x50d909
  50d8f1:	ja     0x50d8ea
  50d8f3:	pop    ecx
  50d8f4:	lods   eax,DWORD PTR ds:[si]
  50d8f6:	inc    edi
  50d8f7:	retf   
  50d8f8:	adc    al,0x97
  50d8fa:	jno    0x50d91e
  50d8fc:	add    eax,0x9fb55e67
  50d901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d902:	cmp    BYTE PTR [ebx],0xd3
  50d905:	xor    al,0xf4
  50d907:	mov    ds:0x48cb7e79,eax
  50d90c:	xor    al,0xf4
  50d90e:	add    BYTE PTR [ebx],al
  50d910:	lock ss push 0x4d25bef
  50d917:	mov    ?,WORD PTR [edx+0x12]
  50d91a:	inc    ecx
  50d91b:	retf   0x68bd
  50d91e:	cld    
  50d91f:	xor    BYTE PTR [ebp+eiz*1+0x20],bl
  50d923:	dec    ebx
  50d924:	and    ecx,DWORD PTR [ebp-0x17]
  50d927:	xchg   ebx,eax
  50d928:	iret   
  50d929:	mov    dl,0x5e
  50d92b:	pop    ebx
  50d92c:	push   edx
  50d92d:	out    0xb9,eax
  50d92f:	sub    bh,BYTE PTR [ecx-0x6f]
  50d932:	test   BYTE PTR [esi],ch
  50d934:	mov    edx,0xb974c8f8
  50d939:	jbe    0x50d930
  50d93b:	call   0xb4ef094
  50d940:	bound  edx,QWORD PTR [ebp-0x18]
  50d943:	add    al,0x18
  50d945:	in     al,dx
  50d946:	jb     0x50d9c2
  50d948:	das    
  50d949:	(bad)  
  50d94a:	and    eax,0xfd25b053
  50d94f:	fldcw  WORD PTR cs:[ecx-0x7f115784]
  50d956:	xchg   BYTE PTR [eax],bl
  50d958:	mov    ecx,0x202167b4
  50d95d:	mov    ds:0x6de35fc8,al
  50d962:	xchg   ecx,eax
  50d963:	das    
  50d964:	gs jbe 0x50d93e
  50d967:	cmp    bh,ah
  50d969:	ss in  al,dx
  50d96b:	dec    ebp
  50d96c:	mov    edx,0x6db723a5
  50d971:	fnstenv [edi]
  50d973:	and    eax,0x701d31ba
  50d978:	pop    esi
  50d979:	push   eax
  50d97a:	sbb    DWORD PTR [edx+edi*1+0xd],ebp
  50d97e:	mov    BYTE PTR [edi+0x60],bl
  50d981:	cmp    DWORD PTR [edi+0x3c0a41e6],esi
  50d987:	mov    ah,0x15
  50d989:	mov    WORD PTR [eax-0xde7b20f],?
  50d98f:	mov    ds:0x850e3fe4,al
  50d994:	pusha  
  50d995:	push   esp
  50d997:	fadd   QWORD PTR [edi+0x5034408f]
  50d99d:	pop    ds
  50d99e:	mov    al,ds:0xea87bd7
  50d9a3:	adc    DWORD PTR [ebx],edi
  50d9a5:	pop    eax
  50d9a6:	push   eax
  50d9a7:	pusha  
  50d9a8:	sub    al,0x58
  50d9aa:	ret    
  50d9ab:	in     eax,0xbb
  50d9ad:	outs   dx,BYTE PTR ds:[esi]
  50d9ae:	mov    cs,WORD PTR [ecx-0x2b95ddbe]
  50d9b4:	mov    dh,0x85
  50d9b6:	add    edx,0xa7b71fe8
  50d9bc:	mov    ebp,0x4b716499
  50d9c1:	cwde   
  50d9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50d9c3:	xchg   ecx,eax
  50d9c4:	xlat   BYTE PTR ds:[ebx]
  50d9c5:	ret    0x73a3
  50d9c8:	push   ebp
  50d9c9:	ror    BYTE PTR [eax],0x6f
  50d9cc:	and    DWORD PTR [edi],edi
  50d9ce:	cli    
  50d9cf:	or     bh,ah
  50d9d1:	pop    ebp
  50d9d2:	mov    ebp,0xf4274f70
  50d9d7:	mov    esp,0x3677b095
  50d9dc:	fisttp WORD PTR ds:0xba862e0e
  50d9e2:	out    dx,al
  50d9e3:	bound  edx,QWORD PTR [ebx+0x7f]
  50d9e6:	shld   DWORD PTR [edx],ecx,0x7e
  50d9ea:	or     ah,BYTE PTR [ecx-0x23]
  50d9ed:	adc    edx,esi
  50d9ef:	out    0x9b,al
  50d9f1:	push   edi
  50d9f2:	xor    ebp,edi
  50d9f4:	outs   dx,DWORD PTR ds:[esi]
  50d9f5:	mov    WORD PTR [eax-0x48],?
  50d9f8:	xchg   DWORD PTR [esi+0x52bb14f2],eax
  50d9fe:	sar    DWORD PTR [esi+0x2c],1
  50da01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50da02:	stos   DWORD PTR es:[edi],eax
  50da03:	sbb    esi,DWORD PTR [edi]
  50da05:	mov    dh,0x7
  50da07:	mov    al,0xe8
  50da09:	push   edx
  50da0a:	push   ebp
  50da0b:	test   al,0x80
  50da0d:	ins    DWORD PTR es:[edi],dx
  50da0e:	(bad)  
  50da0f:	loopne 0x50d995
  50da11:	imul   esp,ebx,0xffffffb2
  50da14:	xchg   ebp,eax
  50da15:	sahf   
  50da16:	xchg   esp,eax
  50da17:	sti    
  50da18:	xchg   ecx,eax
  50da19:	or     esi,DWORD PTR [esi+0x473d4065]
  50da1f:	dec    esp
  50da20:	sbb    al,0xd
  50da22:	out    dx,al
  50da23:	std    
  50da24:	pop    esi
  50da25:	lock in al,dx
  50da27:	sti    
  50da28:	pop    eax
  50da29:	cmp    eax,0x96bef1bf
  50da2e:	scas   al,BYTE PTR es:[edi]
  50da2f:	scas   eax,DWORD PTR es:[edi]
  50da30:	(bad)  
  50da31:	sti    
  50da32:	fwait
  50da33:	in     eax,0xfe
  50da35:	mov    ds:0x6742921d,eax
  50da3a:	inc    eax
  50da3b:	or     DWORD PTR [ebp+0x47],edi
  50da3e:	mov    DWORD PTR [ebx-0x69],edi
  50da41:	test   DWORD PTR [esi-0x2e],edi
  50da44:	pop    ebp
  50da45:	cdq    
  50da46:	adc    DWORD PTR [esi],0x75
  50da49:	leave  
  50da4a:	(bad)  
  50da4b:	(bad)  
  50da4c:	lods   al,BYTE PTR ds:[esi]
  50da4d:	sbb    eax,0xe590d2d4
  50da52:	dec    eax
  50da53:	lods   al,BYTE PTR ds:[esi]
  50da54:	mov    edi,0x55ebb926
  50da59:	or     al,BYTE PTR [esi]
  50da5b:	mov    edi,0xf1fd7f00
  50da60:	and    dl,BYTE PTR [ebx+0x20]
  50da63:	shl    BYTE PTR [eax+0x70],1
  50da66:	xlat   BYTE PTR ds:[ebx]
  50da67:	addr16 dec eax
  50da69:	mov    dh,0xa5
  50da6b:	(bad)  
  50da6c:	std    
  50da6d:	adc    DWORD PTR [esi+0x79d1c2b4],ebx
  50da73:	ja     0x50da53
  50da75:	pop    esp
  50da76:	xchg   BYTE PTR [eax+edx*1+0x1c65b4d5],dl
  50da7d:	or     esp,eax
  50da7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50da80:	mov    esi,0xee1f88fe
  50da85:	lea    edi,[ebx+0x3052893a]
  50da8b:	test   DWORD PTR [esi+0x1c276213],eax
  50da91:	push   edi
  50da92:	daa    
  50da93:	arpl   WORD PTR [edi+0x77],dx
  50da96:	popa   
  50da97:	stos   DWORD PTR es:[edi],eax
  50da98:	int    0xa3
  50da9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50da9b:	and    eax,0xe6caa7fc
  50daa0:	int3   
  50daa1:	dec    esi
  50daa2:	ss fwait
  50daa4:	pop    edx
  50daa5:	gs or  ebp,ebp
  50daa8:	dec    esp
  50daa9:	cs mov ebx,0x78a97efa
  50daaf:	pusha  
  50dab0:	push   ebp
  50dab1:	std    
  50dab2:	jb     0x50db33
  50dab4:	xchg   esp,eax
  50dab5:	xchg   edi,eax
  50dab6:	jmp    0x8f79:0x5c1d65dd
  50dabd:	(bad)
  50dac0:	jmp    0x2de932ea
  50dac5:	xor    eax,ebx
  50dac7:	mov    ch,0x30
  50dac9:	push   DWORD PTR [edi+0x1cd06bd9]
  50dacf:	xchg   edi,eax
  50dad0:	adc    al,0xfc
  50dad2:	rol    BYTE PTR [ebp+0x20a0373e],0xf5
  50dad9:	jge    0x50dac9
  50dadb:	xchg   esi,eax
  50dadc:	test   DWORD PTR [ebx],esi
  50dade:	stos   BYTE PTR es:[edi],al
  50dadf:	add    edi,DWORD PTR [edx]
  50dae1:	jmp    0x16db321d
  50dae6:	fcom   DWORD PTR [ebx]
  50dae8:	push   es
  50dae9:	loopne 0x50dafe
  50daeb:	xchg   ax,ax
  50daed:	outs   dx,BYTE PTR ds:[esi]
  50daee:	jmp    0xc525f3e1
  50daf3:	push   0x16
  50daf5:	and    BYTE PTR [esp+esi*2-0x22bd502d],bh
  50dafc:	add    al,ch
  50dafe:	adc    bh,BYTE PTR [edi]
  50db00:	xor    DWORD PTR [esi+0xa66eab],edx
  50db06:	and    ecx,DWORD PTR [esi+0x16fd9dc9]
  50db0c:	dec    edi
  50db0d:	rcr    edi,0xab
  50db10:	out    dx,eax
  50db11:	or     BYTE PTR [ebp+eax*1-0x4b],dl
  50db15:	push   ebx
  50db16:	into   
  50db17:	xchg   BYTE PTR [edx+0x3],al
  50db1a:	pop    edi
  50db1b:	xchg   ebp,eax
  50db1c:	js     0x50db86
  50db1e:	addr16 jmp 0x50db4e
  50db21:	xchg   ecx,eax
  50db22:	inc    esi
  50db23:	inc    ecx
  50db24:	mov    al,0xfb
  50db26:	xor    al,0xe4
  50db28:	lock lods al,BYTE PTR ds:[esi]
  50db2a:	cmp    ax,0x2c69
  50db2e:	ja     0x50db0a
  50db30:	addr16 jno 0x50db7b
  50db33:	sub    ebp,DWORD PTR [ecx]
  50db35:	mov    ecx,0x9d50f10f
  50db3a:	sbb    DWORD PTR [eax+eax*4-0x4ddc5d97],edi
  50db41:	mov    ds:0x52eac015,eax
  50db46:	cmp    DWORD PTR ds:0xddb7e03d,ebx
  50db4c:	cmp    eax,0x1ef4df01
  50db51:	scas   eax,DWORD PTR es:[edi]
  50db52:	enter  0x30dd,0x7f
  50db56:	mov    ds:0xb555d416,eax
  50db5b:	mov    edi,0xe50497d3
  50db60:	mov    ds:0x4563c0d2,al
  50db65:	inc    ecx
  50db66:	ret    0xb0ad
  50db69:	mov    ds:0x6ad54176,al
  50db6e:	mov    al,0x14
  50db70:	pop    esp
  50db71:	jle    0x50db00
  50db73:	aaa    
  50db74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50db75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50db76:	jnp    0x50db26
  50db78:	js     0x50db31
  50db7a:	or     DWORD PTR [edi-0xf],0xffffff94
  50db7e:	outs   dx,DWORD PTR ds:[esi]
  50db7f:	addr16 test eax,0xf82ac9d8
  50db85:	add    bh,BYTE PTR [ebp+0x33]
  50db88:	push   edi
  50db89:	or     eax,0x5ac9d02a
  50db8e:	xchg   esi,eax
  50db8f:	loope  0x50dbef
  50db91:	ret    0xd005
  50db94:	(bad)  
  50db95:	in     al,dx
  50db96:	lahf   
  50db97:	sbb    DWORD PTR [edx],esp
  50db99:	and    dh,BYTE PTR [eax-0x64a8dee2]
  50db9f:	clc    
  50dba0:	fcmovnbe st,st(3)
  50dba2:	xor    eax,0x8cfa6fb6
  50dba7:	shl    DWORD PTR [esi+0x5a],0x23
  50dbab:	xchg   ebp,eax
  50dbac:	inc    ebx
  50dbad:	jbe    0x50db52
  50dbaf:	pop    ebp
  50dbb0:	ret    0x9ff
  50dbb3:	dec    edx
  50dbb4:	jp     0x50dbc8
  50dbb6:	test   BYTE PTR [esi-0x47],dh
  50dbb9:	fs lahf 
  50dbbb:	out    dx,al
  50dbbc:	jnp    0x50dc15
  50dbbe:	mov    BYTE PTR [eax-0x6e],al
  50dbc1:	faddp  st(0),st
  50dbc3:	(bad)  
  50dbc4:	jge    0x50dbad
  50dbc6:	test   DWORD PTR [ecx-0x4a51340b],edx
  50dbcc:	or     esp,DWORD PTR [ebp+0x53]
  50dbcf:	stos   DWORD PTR es:[edi],eax
  50dbd0:	clc    
  50dbd1:	fsub   st(2),st
  50dbd3:	inc    ecx
  50dbd4:	std    
  50dbd5:	jge    0x50db59
  50dbd7:	lock aad 0xe8
  50dbda:	xchg   ebx,eax
  50dbdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50dbdc:	and    al,0xb4
  50dbde:	shl    esp,1
  50dbe0:	xor    eax,0xe1f03046
  50dbe5:	int3   
  50dbe6:	jbe    0x50dc33
  50dbe8:	out    dx,eax
  50dbe9:	or     edi,DWORD PTR [eax]
  50dbeb:	stos   DWORD PTR es:[edi],eax
  50dbec:	shr    ebx,cl
  50dbee:	inc    ebx
  50dbef:	aam    0xe9
  50dbf1:	loope  0x50dc08
  50dbf3:	and    ebp,DWORD PTR [ebx+0x1965a5ed]
  50dbf9:	adc    DWORD PTR [esi+0x48],ebx
  50dbfc:	xchg   edx,eax
  50dbfd:	xchg   DWORD PTR [edi],esp
  50dbff:	dec    edi
  50dc00:	push   edi
  50dc01:	xlat   BYTE PTR ds:[ebx]
  50dc02:	push   ebp
  50dc03:	addr16 enter 0x8ebc,0x60
  50dc08:	xchg   DWORD PTR [esi-0x80],ecx
  50dc0b:	mov    ch,0x5e
  50dc0d:	cld    
  50dc0e:	out    dx,al
  50dc0f:	sub    al,0x26
  50dc11:	mov    edx,0xf6ca4cd9
  50dc16:	push   ss
  50dc17:	dec    esp
  50dc18:	ins    BYTE PTR es:[edi],dx
  50dc19:	cmp    BYTE PTR [ebx+0x685e9bbe],al
  50dc1f:	or     esp,ebx
  50dc21:	retf   0xa530
  50dc24:	cld    
  50dc25:	xor    esp,DWORD PTR [esi-0x6217550]
  50dc2b:	out    0x65,al
  50dc2d:	shr    BYTE PTR [edi+0x4bf7f8ea],1
  50dc33:	lds    esp,FWORD PTR [esi+ebx*1]
  50dc36:	into   
  50dc37:	xchg   edi,eax
  50dc38:	push   ds
  50dc39:	aam    0x76
  50dc3b:	xchg   esp,eax
  50dc3c:	sbb    eax,0x8e428b8e
  50dc41:	or     BYTE PTR [esi],bh
  50dc43:	in     al,dx
  50dc44:	scas   eax,DWORD PTR es:[edi]
  50dc45:	addr16 out 0xbf,ax
  50dc49:	cmp    DWORD PTR [edi-0x60],ebx
  50dc4c:	aas    
  50dc4d:	stos   DWORD PTR es:[edi],eax
  50dc4e:	clc    
  50dc4f:	test   eax,0x9b1bb3f8
  50dc54:	sar    esi,0x2d
  50dc57:	(bad)  
  50dc58:	xchg   edi,eax
  50dc59:	aaa    
  50dc5a:	dec    eax
  50dc5b:	pop    esp
  50dc5c:	inc    ebx
  50dc5d:	mov    ecx,0x315c3816
  50dc62:	scas   eax,DWORD PTR es:[edi]
  50dc63:	xlat   BYTE PTR ds:[ebx]
  50dc64:	jecxz  0x50dcb5
  50dc66:	fdiv   QWORD PTR [edi*1+0x32fe84f8]
  50dc6d:	jbe    0x50dc61
  50dc6f:	call   0xe3e1:0x3a253010
  50dc76:	ret    0xeb55
  50dc79:	iret   
  50dc7a:	mov    eax,ds:0x6458f853
  50dc7f:	loopne 0x50dcd6
  50dc81:	retf   0x1bb9
  50dc84:	mov    ds:0x5fd4873a,eax
  50dc89:	shr    DWORD PTR [esi],1
  50dc8b:	sti    
  50dc8c:	daa    
  50dc8d:	retf   0xfb38
  50dc90:	lods   eax,DWORD PTR ds:[esi]
  50dc91:	push   edx
  50dc92:	cmp    BYTE PTR [ecx],0xed
  50dc95:	aad    0xa6
  50dc97:	js     0x50dd16
  50dc99:	imul   eax,edi,0xffffffea
  50dc9c:	jecxz  0x50dc66
  50dc9e:	lds    esi,FWORD PTR [ebx+0x1890f9fd]
  50dca4:	ins    DWORD PTR es:[edi],dx
  50dca5:	(bad)  
  50dca6:	sub    DWORD PTR [edi-0x24],edi
  50dca9:	pop    ebx
  50dcaa:	cmp    ah,BYTE PTR [edx-0x56]
  50dcad:	int3   
  50dcae:	pop    ss
  50dcaf:	outs   dx,DWORD PTR ds:[esi]
  50dcb0:	cli    
  50dcb1:	ror    DWORD PTR [ebp-0x4b],0xb5
  50dcb5:	jl     0x50dc69
  50dcb7:	cmp    ch,dl
  50dcb9:	fisub  WORD PTR [ebp+0x7dee1ab9]
  50dcbf:	xchg   ebp,eax
  50dcc0:	pop    edi
  50dcc1:	inc    esp
  50dcc2:	xchg   BYTE PTR [ebx+eiz*2-0x412dabe1],ah
  50dcc9:	daa    
  50dcca:	je     0x50dc57
  50dccc:	pop    esi
  50dccd:	imul   ebp,esi,0x24390850
  50dcd3:	push   esp
  50dcd4:	adc    eax,0xd167a174
  50dcd9:	inc    ebx
  50dcda:	in     al,dx
  50dcdb:	ja     0x50dcb0
  50dcdd:	sahf   
  50dcde:	cmp    eax,0x1a264585
  50dce3:	push   esi
  50dce4:	cmp    bh,BYTE PTR [edx+edx*2-0x5c]
  50dce8:	icebp  
  50dce9:	mov    ah,0x77
  50dceb:	inc    edi
  50dcec:	popf   
  50dced:	in     eax,dx
  50dcee:	cmp    DWORD PTR [esi+0x9be9f46],esi
  50dcf4:	aas    
  50dcf5:	add    BYTE PTR [esi-0x28ce7492],bh
  50dcfb:	mov    bh,0x6c
  50dcfd:	or     al,dh
  50dcff:	mov    ah,0x9e
  50dd01:	mov    ah,0x4f
  50dd03:	fstp   st(1)
  50dd05:	icebp  
  50dd06:	std    
  50dd07:	dec    ebp
  50dd08:	scas   al,BYTE PTR es:[edi]
  50dd09:	add    edx,DWORD PTR ds:0x32897ea2
  50dd0f:	jecxz  0x50dcaf
  50dd11:	retf   
  50dd12:	ret    0x211a
  50dd15:	pusha  
  50dd16:	mov    al,ds:0x5613b894
  50dd1b:	jne    0x50dd24
  50dd1d:	mov    dh,BYTE PTR [esp+eax*4]
  50dd20:	sub    DWORD PTR ds:[edi-0xf],0xffffffc7
  50dd25:	xchg   DWORD PTR [esi],esp
  50dd27:	mov    dl,0x8e
  50dd29:	push   0xd39f8969
  50dd2e:	mov    ds:0x8df5d5c0,al
  50dd33:	and    dh,bh
  50dd35:	mov    dl,0xec
  50dd37:	xor    ah,BYTE PTR [ecx-0x5b7f402e]
  50dd3d:	add    DWORD PTR ds:0x89ebb740,0xb79ea072
  50dd47:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  50dd49:	in     al,dx
  50dd4a:	cmc    
  50dd4b:	clc    
  50dd4c:	into   
  50dd4d:	aad    0xdb
  50dd4f:	or     BYTE PTR [esi+0x22],ah
  50dd52:	or     BYTE PTR [eax],0x76
  50dd55:	and    esi,DWORD PTR [edx+0x714e3ccf]
  50dd5b:	pop    ss
  50dd5c:	sub    edi,esp
  50dd5e:	addr16 add al,0x55
  50dd61:	mov    edi,0xb3805907
  50dd66:	in     al,dx
  50dd67:	push   ecx
  50dd68:	rcl    cl,cl
  50dd6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50dd6b:	or     eax,0x21ecc550
  50dd70:	icebp  
  50dd71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50dd72:	fucomi st,st(7)
  50dd74:	int    0x88
  50dd76:	xchg   esp,eax
  50dd77:	div    DWORD PTR [ebp-0x26113656]
  50dd7d:	out    dx,eax
  50dd7e:	outs   dx,DWORD PTR ds:[esi]
  50dd7f:	push   0xffffffd3
  50dd81:	xlat   BYTE PTR ds:[ebx]
  50dd82:	pop    ebx
  50dd83:	xor    DWORD PTR [esi+eax*8+0x32bc48c4],0x9a237cbe
  50dd8e:	jno    0x50dd16
  50dd90:	jb     0x50ddf9
  50dd92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50dd93:	sbb    ebp,DWORD PTR [esi+0x50]
  50dd96:	ja     0x50de01
  50dd98:	out    dx,eax
  50dd99:	dec    ecx
  50dd9a:	push   edi
  50dd9b:	aam    0x12
  50dd9d:	(bad)  
  50dd9e:	jmp    0x9def:0x28020388
  50dda5:	sahf   
  50dda6:	cli    
  50dda7:	enter  0x96a3,0x96
  50ddab:	cs cli 
  50ddad:	lock bound esi,QWORD PTR [esi+ebp*8+0x1f]
  50ddb2:	out    0xe5,al
  50ddb4:	mov    ebp,0xdfa160c4
  50ddb9:	gs loopne 0x50de3a
  50ddbc:	jb     0x50dde4
  50ddbe:	mov    gs,WORD PTR [esi]
  50ddc0:	xor    al,dh
  50ddc2:	jbe    0x50dd73
  50ddc4:	jmp    0xa466:0xf745ad6a
  50ddcb:	sahf   
  50ddcc:	mov    ebp,0xefe2f792
  50ddd1:	adc    ah,BYTE PTR es:[edx+0x572b2198]
  50ddd8:	dec    ebp
  50ddd9:	imul   edi,DWORD PTR [ecx-0x1af8e023],0x6179fdb4
  50dde3:	jnp    0x50de47
  50dde5:	cmc    
  50dde6:	fcomp  DWORD PTR [edx+eiz*1-0x4f16257b]
  50dded:	xchg   edi,eax
  50ddee:	pop    edx
  50ddef:	adc    al,0xba
  50ddf1:	mov    edx,0x174b300a
  50ddf6:	pop    edi
  50ddf7:	push   edi
  50ddf8:	imul   ebx,DWORD PTR [esi],0xf8b04301
  50ddfe:	(bad)  
  50ddff:	ret    
  50de00:	lds    esp,FWORD PTR [ebx+0x30d9c0ca]
  50de06:	das    
  50de07:	in     eax,dx
  50de08:	xchg   esp,eax
  50de09:	pop    esp
  50de0a:	cmp    BYTE PTR [eax],0x9b
  50de0d:	cmp    eax,0x63f34630
  50de12:	dec    ebp
  50de13:	(bad)  
  50de14:	scas   al,BYTE PTR es:[edi]
  50de15:	mov    DWORD PTR [ebx],0x2d0358a
  50de1b:	inc    esi
  50de1c:	and    edx,ebx
  50de1e:	shl    DWORD PTR [ebp+edi*1+0x2642e896],1
  50de25:	cmp    eax,0x1154a1d7
  50de2a:	mov    cl,0x28
  50de2c:	lock or bh,BYTE PTR [esi+eax*2+0x560eb05b]
  50de34:	cmp    DWORD PTR [eax-0x54],eax
  50de37:	mov    BYTE PTR [eax-0x45],bh
  50de3a:	inc    esi
  50de3b:	pushf  
  50de3c:	(bad)  
  50de3d:	std    
  50de3e:	popf   
  50de3f:	xchg   edx,eax
  50de40:	pop    esi
  50de41:	xchg   ebx,eax
  50de42:	jns    0x50de37
  50de44:	mov    al,cl
  50de46:	fwait
  50de47:	inc    BYTE PTR [edi+0x5a]
  50de4a:	inc    ecx
  50de4b:	add    eax,0x370698ae
  50de50:	pushf  
  50de51:	dec    esp
  50de52:	gs jmp 0x50de60
  50de55:	sbb    al,0xe
  50de57:	cmp    ebx,DWORD PTR [ebx]
  50de59:	ins    BYTE PTR es:[edi],dx
  50de5a:	(bad)  
  50de5b:	lods   al,BYTE PTR ds:[esi]
  50de5c:	(bad)  
  50de5d:	adc    BYTE PTR [esi-0x7f],ch
  50de60:	and    DWORD PTR [ebp+0xf22f82d],0x33
  50de67:	add    eax,0xc83ef4a9
  50de6c:	fiadd  DWORD PTR [edx+0x4f]
  50de6f:	push   ebx
  50de70:	stos   BYTE PTR es:[edi],al
  50de71:	(bad)  
  50de72:	mov    al,0xae
  50de74:	cmp    eax,0xcf189c96
  50de79:	jp     0x50ded9
  50de7b:	call   0x78051b3a
  50de80:	inc    esp
  50de81:	pusha  
  50de82:	cmc    
  50de83:	dec    eax
  50de84:	and    edx,eax
  50de86:	stos   BYTE PTR es:[edi],al
  50de87:	mov    edx,0xd90dfebc
  50de8c:	mov    ch,0x76
  50de8e:	ficom  DWORD PTR [ebp+0x21]
  50de91:	inc    ecx
  50de92:	(bad)  
  50de93:	xchg   esp,eax
  50de94:	xchg   esp,eax
  50de95:	mov    esi,0x5efeafc7
  50de9a:	fst    st(5)
  50de9c:	adc    al,0x1f
  50de9e:	aam    0x97
  50dea0:	cmp    DWORD PTR [ebp-0x3610434b],esi
  50dea6:	arpl   WORD PTR [eax],sp
  50dea8:	in     al,0xad
  50deaa:	and    BYTE PTR [esi-0x25],ch
  50dead:	neg    DWORD PTR [eax+0x6c]
  50deb0:	dec    ebp
  50deb1:	loop   0x50ded8
  50deb3:	mov    edi,0xeb5112f4
  50deb8:	push   esi
  50deb9:	outs   dx,BYTE PTR ds:[esi]
  50deba:	pmaxsw mm6,QWORD PTR [esp+ebp*4]
  50debe:	popf   
  50debf:	(bad)  [ebp+ecx*2+0x69]
  50dec3:	push   ecx
  50dec4:	jne    0x50df3f
  50dec6:	sbb    eax,0xd980a853
  50decb:	pop    es
  50decc:	adc    DWORD PTR [edx+0x527a4b65],edx
  50ded2:	outs   dx,BYTE PTR ds:[esi]
  50ded3:	gs (bad) 
  50ded5:	in     al,0x5c
  50ded7:	loop   0x50dec4
  50ded9:	jnp    0x50dead
  50dedb:	ss aas 
  50dedd:	ins    BYTE PTR es:[edi],dx
  50dede:	(bad)  
  50dedf:	jle    0x50ded1
  50dee1:	mov    dh,0x12
  50dee3:	cmp    BYTE PTR [eax+edx*8-0x2a],dh
  50dee7:	jle    0x50deff
  50dee9:	pop    es
  50deea:	xchg   esi,eax
  50deeb:	(bad)  
  50deec:	loop   0x50deb1
  50deee:	dec    esi
  50deef:	cmp    DWORD PTR [ebx],esi
  50def1:	jmp    0xcb3465d
  50def6:	push   edx
  50def7:	in     eax,dx
  50def8:	cmp    BYTE PTR [esi+0x17],bl
  50defb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50defc:	mov    cl,bh
  50defe:	xor    bl,BYTE PTR [ebx-0x65297e4e]
  50df04:	in     eax,dx
  50df05:	push   bx
  50df07:	jb     0x50df08
  50df09:	lods   al,BYTE PTR ds:[esi]
  50df0a:	and    eax,ebp
  50df0c:	sub    BYTE PTR [edx+ecx*1+0x5c],bh
  50df10:	xor    al,0x2f
  50df12:	inc    edx
  50df13:	mov    edi,0x7a8d2640
  50df18:	loopne 0x50def3
  50df1a:	in     eax,dx
  50df1b:	test   DWORD PTR [esi],ebp
  50df1d:	push   ss
  50df1e:	mov    ds:0xa49893f3,eax
  50df23:	mov    eax,ds:0xe477e648
  50df28:	fldcw  WORD PTR [ebp-0x5dcbefa5]
  50df2e:	scas   eax,DWORD PTR es:[edi]
  50df2f:	ret    0x2fe9
  50df32:	or     BYTE PTR [esi],bh
  50df34:	data16 aam 0xec
  50df37:	out    dx,al
  50df38:	mov    cl,0xfc
  50df3a:	scas   al,BYTE PTR es:[edi]
  50df3b:	xchg   ecx,eax
  50df3c:	fcom   QWORD PTR [ebp+0x732d815c]
  50df42:	mov    ebp,0xb9a4bfd5
  50df47:	xchg   edx,eax
  50df48:	xchg   edi,eax
  50df49:	in     eax,dx
  50df4a:	adc    dh,BYTE PTR [edx-0x64b6005e]
  50df50:	fisubr DWORD PTR [edx]
  50df52:	xchg   BYTE PTR [esi+0x31],bl
  50df55:	sbb    esi,ebp
  50df57:	xor    DWORD PTR [ebx],esp
  50df59:	lods   al,BYTE PTR ds:[esi]
  50df5a:	int    0x9
  50df5c:	push   edi
  50df5d:	aam    0x99
  50df5f:	xlat   BYTE PTR ds:[ebx]
  50df60:	xchg   ah,cl
  50df62:	scas   al,BYTE PTR es:[edi]
  50df63:	(bad)
  50df67:	add    dh,BYTE PTR [ebp-0x3daadb6a]
  50df6d:	add    al,0xae
  50df6f:	stos   BYTE PTR es:[edi],al
  50df70:	mov    BYTE PTR [ebp+0x47],cl
  50df73:	shr    ch,0xdb
  50df76:	aad    0x91
  50df78:	shr    DWORD PTR [esi+ecx*2],cl
  50df7b:	jg     0x50dfa7
  50df7d:	jns    0x50df85
  50df7f:	mov    ah,0xa6
  50df81:	enter  0x23d5,0x15
  50df85:	out    0x77,eax
  50df87:	ret    0xc0eb
  50df8a:	jb     0x50df4e
  50df8c:	(bad)  
  50df8e:	mov    edx,0x7e5151c7
  50df93:	ins    BYTE PTR es:[edi],dx
  50df94:	or     BYTE PTR [ebx+0x5b],dl
  50df97:	(bad)  [ebx-0x5d6c543a]
  50df9d:	inc    edx
  50df9e:	mov    eax,0x9ca6df1f
  50dfa3:	stos   DWORD PTR es:[edi],eax
  50dfa4:	rol    DWORD PTR [edx-0x69],0xbd
  50dfa8:	(bad)  
  50dfa9:	push   eax
  50dfaa:	mov    bl,0x19
  50dfac:	dec    ecx
  50dfad:	jnp    0x50dfd4
  50dfaf:	jmp    0x50dfa9
  50dfb1:	daa    
  50dfb2:	pushf  
  50dfb3:	std    
  50dfb4:	adc    eax,0x3ff475ab
  50dfb9:	fwait
  50dfba:	xchg   esp,eax
  50dfbb:	mov    esp,0xd3297d4a
  50dfc0:	ror    BYTE PTR [ecx],cl
  50dfc2:	dec    esi
  50dfc3:	push   ss
  50dfc4:	pop    edx
  50dfc5:	outs   dx,BYTE PTR ds:[esi]
  50dfc6:	pop    esi
  50dfc7:	sub    eax,DWORD PTR [edi-0x7afa2900]
  50dfcd:	outs   dx,DWORD PTR ds:[esi]
  50dfce:	inc    eax
  50dfcf:	sub    al,0xab
  50dfd1:	sbb    dh,BYTE PTR [ecx]
  50dfd3:	xlat   BYTE PTR ds:[ebx]
  50dfd4:	jne    0x50df83
  50dfd6:	xlat   BYTE PTR ds:[ebx]
  50dfd7:	scas   al,BYTE PTR es:[edi]
  50dfd8:	in     al,dx
  50dfd9:	ja     0x50dfc1
  50dfdb:	xchg   esp,eax
  50dfdc:	pop    ebp
  50dfdd:	dec    edx
  50dfde:	shl    DWORD PTR [ebp+0x4f],1
  50dfe1:	add    eax,0xce2ba837
  50dfe6:	icebp  
  50dfe7:	lods   al,BYTE PTR ds:[esi]
  50dfe8:	cmp    al,0x10
  50dfea:	int    0xe9
  50dfec:	(bad)  
  50dfed:	pop    esi
  50dfee:	mov    edx,DWORD PTR [esi+0x13ec60d9]
  50dff4:	or     DWORD PTR [ebx-0x3e],esp
  50dff7:	sbb    BYTE PTR [esi-0x38eee278],0xcf
  50dffe:	dec    ebx
  50dfff:	int3   
  50e000:	test   DWORD PTR [ebx+eax*4-0x7c49f6a1],esi
  50e007:	rol    eax,cl
  50e009:	lds    esp,FWORD PTR [ecx+0x2ccfc8b2]
  50e00f:	mov    edi,0xa5a4486c
  50e014:	or     BYTE PTR [ebx],al
  50e016:	mov    al,0xfc
  50e018:	out    dx,eax
  50e019:	rcr    DWORD PTR [ebx+0x24a599a8],1
  50e01f:	mov    BYTE PTR [ebp+ecx*2-0x61],bl
  50e023:	mov    esp,0x7057f94
  50e028:	mov    edi,0x48de9c9
  50e02d:	mov    al,0x75
  50e02f:	loopne 0x50e075
  50e031:	push   cs
  50e032:	fwait
  50e033:	sub    eax,0xa10ab6a3
  50e038:	lods   al,BYTE PTR ds:[esi]
  50e039:	and    BYTE PTR [edi+ebx*4],dl
  50e03c:	les    edi,FWORD PTR ds:0xaf00eaf5
  50e042:	es mov ecx,0x4de8ff32
  50e048:	dec    ecx
  50e049:	nop
  50e04a:	add    esi,ebp
  50e04c:	retf   
  50e04d:	mov    cl,0x89
  50e04f:	and    BYTE PTR [eax],dh
  50e051:	call   ecx
  50e053:	mov    eax,ds:0x14762150
  50e058:	jmp    0xab8eca9b
  50e05d:	test   eax,0xb5543829
  50e062:	aas    
  50e063:	scas   eax,DWORD PTR es:[edi]
  50e064:	mov    cl,0xa5
  50e066:	(bad)  
  50e067:	(bad)  
  50e068:	jl     0x50e03e
  50e06a:	xor    DWORD PTR [eax],0xffffffe0
  50e06d:	jg     0x50e02f
  50e06f:	mov    DWORD PTR [edx],esp
  50e071:	(bad)  
  50e072:	leave  
  50e073:	inc    ebp
  50e074:	stos   BYTE PTR es:[edi],al
  50e075:	fcom   QWORD PTR ds:0xb143f76
  50e07b:	stos   DWORD PTR es:[edi],eax
  50e07c:	xchg   BYTE PTR [ebx+0x68c2ec0f],bh
  50e082:	jg     0x50e090
  50e084:	outs   dx,DWORD PTR ds:[esi]
  50e085:	cmp    ch,BYTE PTR [edx-0x61]
  50e088:	mov    edx,0x35849e0d
  50e08d:	nop
  50e08e:	pop    es
  50e08f:	sub    eax,0x354ccc22
  50e094:	sbb    dh,ch
  50e096:	mov    bl,BYTE PTR [ebp-0x2b305a7f]
  50e09c:	scas   al,BYTE PTR es:[edi]
  50e09d:	pop    esi
  50e09e:	jae    0x50e11d
  50e0a0:	push   eax
  50e0a1:	mov    al,ds:0xdc4fa9fd
  50e0a6:	push   0x30
  50e0a8:	mov    fs,esp
  50e0aa:	mov    dl,0x57
  50e0ac:	ins    BYTE PTR es:[edi],dx
  50e0ad:	push   ebp
  50e0ae:	div    ch
  50e0b0:	popf   
  50e0b1:	and    eax,0x480d1e85
  50e0b6:	ja     0x50e090
  50e0b8:	add    ebx,DWORD PTR [edi+0x47ff8a94]
  50e0be:	std    
  50e0bf:	outs   dx,BYTE PTR ds:[esi]
  50e0c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e0c1:	ror    BYTE PTR ds:0xc4d08e92,cl
  50e0c7:	scas   al,BYTE PTR es:[edi]
  50e0c8:	ds gs jb 0x50e130
  50e0cc:	dec    edi
  50e0cd:	cli    
  50e0ce:	jecxz  0x50e0d7
  50e0d0:	inc    edx
  50e0d1:	fcomp  DWORD PTR [edx+0x20982e90]
  50e0d7:	mov    esp,0x538f7dbe
  50e0dc:	and    eax,0x6763867c
  50e0e1:	test   DWORD PTR ds:0x8257c8ca,edx
  50e0e7:	leave  
  50e0e8:	inc    edx
  50e0e9:	aaa    
  50e0ea:	das    
  50e0eb:	shl    bh,cl
  50e0ed:	xchg   esp,ecx
  50e0ef:	xor    cl,0xfb
  50e0f2:	mov    ebp,0x5990fb1f
  50e0f7:	stos   DWORD PTR es:[edi],eax
  50e0f8:	fist   WORD PTR [eax]
  50e0fa:	or     ebp,esp
  50e0fc:	mov    cl,al
  50e0fe:	xor    al,0x45
  50e100:	mov    al,0x90
  50e102:	xchg   ebx,eax
  50e103:	xchg   ebp,esp
  50e105:	jo     0x50e122
  50e107:	int    0x14
  50e109:	xchg   esp,eax
  50e10a:	out    dx,al
  50e10b:	sub    DWORD PTR [ecx*1-0x1a8d8370],ecx
  50e112:	xor    al,BYTE PTR [ecx+0x2c]
  50e115:	pushf  
  50e116:	pop    es
  50e117:	mov    esi,0x1989e10f
  50e11c:	(bad)  
  50e11d:	out    0x7e,al
  50e11f:	mov    dh,0x21
  50e121:	inc    edi
  50e122:	xor    eax,0x7b78e653
  50e127:	lods   eax,DWORD PTR ds:[esi]
  50e128:	aaa    
  50e129:	dec    edi
  50e12a:	sbb    eax,0xbe0e8165
  50e12f:	xchg   ebp,eax
  50e130:	mov    edx,0x9e184042
  50e135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e136:	pop    edi
  50e137:	or     BYTE PTR [ebx-0x167a803f],dh
  50e13d:	outs   dx,DWORD PTR ds:[esi]
  50e13e:	fild   DWORD PTR [ebx]
  50e140:	dec    eax
  50e141:	sbb    BYTE PTR [eax],al
  50e143:	xor    al,0x55
  50e145:	dec    eax
  50e146:	fsub   QWORD PTR [esi+0x74]
  50e149:	not    DWORD PTR [esi+0x7dc34c2c]
  50e14f:	push   es
  50e150:	aam    0xae
  50e152:	jmp    0x3866c8ee
  50e157:	pushf  
  50e158:	or     al,0xaf
  50e15a:	icebp  
  50e15b:	lock mov edi,0xde7ed46
  50e161:	push   cs
  50e162:	xor    al,0xfb
  50e164:	outs   dx,DWORD PTR ds:[esi]
  50e165:	test   BYTE PTR [ebx+esi*1+0x3049248f],0x59
  50e16d:	mov    ecx,DWORD PTR [bp+si-0x2da]
  50e172:	jle    0x50e195
  50e174:	in     al,0x6c
  50e176:	inc    eax
  50e177:	lahf   
  50e178:	sar    BYTE PTR [eax-0x141f8ca8],1
  50e17e:	inc    edi
  50e17f:	jbe    0x50e162
  50e181:	push   es
  50e182:	xchg   esi,eax
  50e183:	iret   
  50e184:	mov    esi,0xfe005b0b
  50e189:	das    
  50e18a:	inc    ecx
  50e18b:	cmp    edx,DWORD PTR [esi+ecx*4]
  50e18e:	das    
  50e18f:	ja     0x50e177
  50e191:	push   esi
  50e192:	mov    esi,0x6223eaf9
  50e197:	and    DWORD PTR [eax+esi*2],ecx
  50e19a:	rcr    DWORD PTR cs:[ebx+0x5f48e3b3],1
  50e1a1:	pop    esi
  50e1a2:	dec    ebp
  50e1a3:	push   ds
  50e1a4:	cmp    dh,BYTE PTR [ecx]
  50e1a6:	cld    
  50e1a7:	mov    ebp,0x4730d259
  50e1ac:	pop    ds
  50e1ad:	cwde   
  50e1ae:	ja     0x50e225
  50e1b0:	shl    ch,cl
  50e1b2:	cmp    BYTE PTR [ebx],al
  50e1b4:	sbb    al,bl
  50e1b6:	push   ss
  50e1b7:	pop    ebx
  50e1b8:	pushf  
  50e1b9:	test   ecx,edi
  50e1bb:	inc    eax
  50e1bc:	popf   
  50e1bd:	js     0x50e1f9
  50e1bf:	sahf   
  50e1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e1c1:	pop    ebx
  50e1c2:	dec    ebp
  50e1c3:	jg     0x50e1a4
  50e1c5:	lds    eax,FWORD PTR [ecx]
  50e1c7:	aaa    
  50e1c8:	je     0x50e210
  50e1ca:	jmp    0xc94599dd
  50e1cf:	add    eax,esi
  50e1d1:	sti    
  50e1d2:	mov    esp,0xcb11989a
  50e1d7:	jge    0x50e19d
  50e1d9:	mov    eax,ds:0x1f497928
  50e1de:	shl    DWORD PTR [edi+0x26],0xc4
  50e1e2:	enter  0x911e,0x7
  50e1e6:	aam    0x0
  50e1e8:	cli    
  50e1e9:	adc    al,0xb5
  50e1eb:	push   0xfbb7b901
  50e1f0:	xchg   edi,eax
  50e1f1:	pop    edi
  50e1f2:	fcom   QWORD PTR [edi-0x4d]
  50e1f5:	test   DWORD PTR [edx-0x14ab5e8b],ecx
  50e1fb:	xchg   BYTE PTR [ebx+0x80e6a2c],ch
  50e201:	jle    0x50e26e
  50e203:	add    al,0x5d
  50e205:	je     0x50e1d6
  50e207:	inc    ebp
  50e208:	xor    ah,BYTE PTR [ebx]
  50e20a:	jae    0x50e268
  50e20c:	inc    ebx
  50e20d:	loop   0x50e192
  50e20f:	mov    ds:0xcc9d7b2f,al
  50e214:	scas   eax,DWORD PTR es:[edi]
  50e215:	or     eax,DWORD PTR [edx+ecx*4+0x58]
  50e219:	jmp    0x92ee:0xbeaf3ed0
  50e220:	std    
  50e221:	pop    ecx
  50e222:	xlat   BYTE PTR ds:[ebx]
  50e223:	loopne 0x50e299
  50e225:	fwait
  50e226:	cld    
  50e227:	scas   al,BYTE PTR es:[edi]
  50e228:	rol    BYTE PTR [esi-0x5cf14028],1
  50e22e:	ds mov ebp,0xf6fa9a01
  50e234:	js     0x50e2aa
  50e236:	xor    bl,bl
  50e238:	cwde   
  50e239:	pop    esp
  50e23a:	pop    cx
  50e23c:	aaa    
  50e23d:	push   ebp
  50e23e:	ret    0x2eb
  50e241:	inc    ebp
  50e242:	xor    eax,0x5e457275
  50e247:	into   
  50e248:	fild   DWORD PTR [ecx]
  50e24a:	ret    0xc4bf
  50e24d:	push   ss
  50e24e:	mov    ds:0xfa2438ca,al
  50e253:	icebp  
  50e254:	cmp    DWORD PTR [edx-0x1cd0325a],ebx
  50e25a:	xor    eax,0xfcd92d21
  50e25f:	mov    edi,0xc714d5fa
  50e264:	mov    ds:0x1ba79d7c,eax
  50e269:	ret    
  50e26a:	jno    0x50e272
  50e26c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50e26d:	pop    es
  50e26e:	imul   esp,DWORD PTR ds:0x31dbc95e,0x6b
  50e275:	in     al,0x8f
  50e277:	add    ah,bl
  50e279:	gs jns 0x50e2c4
  50e27c:	push   ecx
  50e27d:	add    al,0x3e
  50e27f:	jecxz  0x50e2a7
  50e281:	stos   BYTE PTR es:[edi],al
  50e282:	inc    edx
  50e283:	int3   
  50e284:	out    0x92,al
  50e286:	ja     0x50e2c6
  50e288:	mov    DWORD PTR [edi-0x717797c4],esp
  50e28e:	popa   
  50e28f:	mov    dl,0x1b
  50e292:	ins    BYTE PTR es:[edi],dx
  50e293:	test   eax,0x740e78e3
  50e298:	adc    eax,DWORD PTR [edx]
  50e29a:	inc    ecx
  50e29b:	and    ah,BYTE PTR [edx+edx*8-0x456d70da]
  50e2a2:	cdq    
  50e2a3:	xchg   esi,eax
  50e2a4:	pop    ebp
  50e2a5:	cmp    edi,0xffffffaa
  50e2a8:	fisttp WORD PTR [edx]
  50e2aa:	jmp    0x4940:0x5b298d85
  50e2b1:	out    0x58,al
  50e2b3:	xor    cl,cl
  50e2b5:	and    al,0x1f
  50e2b7:	jp     0x50e29b
  50e2b9:	adc    eax,0xfcec5048
  50e2be:	push   eax
  50e2bf:	or     DWORD PTR [eax+0x161bcc3a],0x3d
  50e2c6:	fist   WORD PTR [ecx]
  50e2c8:	js     0x50e289
  50e2ca:	xor    eax,0xa8bd4143
  50e2cf:	xchg   ebp,eax
  50e2d0:	sbb    edx,DWORD PTR [esi-0xe]
  50e2d3:	add    al,0xf5
  50e2d5:	mov    esi,0xa98e0a2
  50e2da:	fist   WORD PTR [esi]
  50e2dc:	inc    eax
  50e2dd:	shl    DWORD PTR [ecx-0x2a],cl
  50e2e0:	jo     0x50e35c
  50e2e2:	push   ebp
  50e2e3:	aas    
  50e2e4:	test   al,0x4b
  50e2e6:	jmp    0x6a9caa8
  50e2eb:	mov    ch,0xb0
  50e2ed:	cs cwde 
  50e2ef:	xchg   esp,eax
  50e2f0:	rcl    DWORD PTR [ecx+0x5a475b5e],1
  50e2f6:	or     esi,DWORD PTR [edi+0xc]
  50e2f9:	test   BYTE PTR [edi+0x5f],bh
  50e2fc:	dec    edi
  50e2fd:	jne    0x50e370
  50e2ff:	stos   BYTE PTR es:[edi],al
  50e300:	retf   0xb6c4
  50e303:	mov    ecx,0x78ba815a
  50e308:	xchg   ecx,eax
  50e309:	nop
  50e30a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50e30b:	cmp    dh,BYTE PTR [edi-0x5ebe0726]
  50e311:	hlt    
  50e312:	rcl    BYTE PTR [ebx-0x51064a1e],cl
  50e318:	inc    edi
  50e319:	sub    bh,dh
  50e31b:	shr    DWORD PTR [ebx-0x58],0x4a
  50e31f:	mov    ebp,esp
  50e321:	mov    ecx,esi
  50e323:	adc    ebx,DWORD PTR [ebx-0x21]
  50e326:	jmp    0x8a623e8b
  50e32b:	mov    cl,0xf0
  50e32d:	call   0x12c2cb69
  50e332:	push   edi
  50e333:	ins    BYTE PTR es:[edi],dx
  50e334:	lock jl 0x50e2f9
  50e337:	call   0xa8bb:0xcefda7b0
  50e33e:	ds push ebx
  50e340:	push   0x32
  50e342:	mov    al,ds:0x7ab593c8
  50e347:	sub    al,0xc6
  50e349:	xor    eax,DWORD PTR [eax+0x29]
  50e34c:	ficomp WORD PTR [esi+esi*8-0x41e02e23]
  50e353:	invd   
  50e355:	jne    0x50e35d
  50e357:	sub    eax,esi
  50e359:	into   
  50e35a:	pop    edi
  50e35b:	sub    al,0x48
  50e35d:	jle    0x50e349
  50e35f:	dec    ebp
  50e360:	rcr    DWORD PTR [edx+0xc459ae1],0xf3
  50e367:	sub    eax,0x3d47ad98
  50e36c:	arpl   WORD PTR [edi+0x39596365],ax
  50e372:	stos   DWORD PTR es:[edi],eax
  50e373:	sbb    BYTE PTR [ebx-0x4e],dl
  50e376:	push   ebx
  50e377:	in     al,0x53
  50e379:	push   ecx
  50e37a:	xlat   BYTE PTR ds:[ebx]
  50e37b:	ret    0x8be7
  50e37e:	jecxz  0x50e36b
  50e380:	jl     0x50e31e
  50e382:	shl    dl,1
  50e384:	push   ebp
  50e385:	ud2    
  50e387:	add    eax,0xcec21f4c
  50e38c:	call   0xe23c:0x714af7aa
  50e393:	xor    ah,dh
  50e395:	lock cmp eax,0x6b366989
  50e39b:	les    ecx,FWORD PTR ds:0xade010d9
  50e3a1:	clc    
  50e3a2:	or     bh,al
  50e3a4:	jp     0x50e420
  50e3a6:	push   ebx
  50e3a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e3a8:	push   0x111b3a05
  50e3ad:	stos   DWORD PTR es:[edi],eax
  50e3ae:	mov    edx,0xc79b0ab6
  50e3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50e3b4:	in     eax,dx
  50e3b5:	pop    esp
  50e3b6:	dec    eax
  50e3b7:	mov    BYTE PTR [esi+0x5cab30aa],al
  50e3bd:	add    DWORD PTR [ecx+0x181fc785],0x6e
  50e3c4:	sub    al,0xfc
  50e3c6:	push   ecx
  50e3c7:	int    0x56
  50e3c9:	sub    eax,DWORD PTR [ebx+edx*8]
  50e3cc:	idiv   eax
  50e3ce:	xor    esp,DWORD PTR [edx]
  50e3d0:	push   edi
  50e3d1:	mov    es,WORD PTR [edx]
  50e3d3:	adc    bl,BYTE PTR [edx+0x1210f68a]
  50e3d9:	push   ds
  50e3da:	pop    esi
  50e3db:	add    ch,BYTE PTR [eax+ecx*2-0x187a59ee]
  50e3e2:	sar    DWORD PTR [ecx-0x16],cl
  50e3e5:	std    
  50e3e6:	jg     0x50e3b9
  50e3e8:	add    bh,BYTE PTR [edx]
  50e3ea:	popfw  
  50e3ec:	push   edi
  50e3ed:	aas    
  50e3ee:	and    al,0xe2
  50e3f0:	jb     0x50e45b
  50e3f2:	adc    al,0xb4
  50e3f4:	out    dx,eax
  50e3f5:	imul   ebx,edx,0x11
  50e3f8:	xchg   ebx,eax
  50e3f9:	cwde   
  50e3fa:	push   edi
  50e3fb:	push   ss
  50e3fc:	psadbw mm3,QWORD PTR [ecx]
  50e3ff:	push   ecx
  50e400:	or     esp,DWORD PTR [esi]
  50e402:	stos   BYTE PTR es:[edi],al
  50e403:	jmp    0x526f82a
  50e408:	lock pop eax
  50e40a:	mov    cl,0xdc
  50e40c:	mov    eax,ds:0x70341d81
  50e411:	fdiv   QWORD PTR [ebp+0x6f]
  50e414:	sbb    al,0xb0
  50e416:	cmp    eax,0x72cfe07
  50e41b:	mov    cl,0xe1
  50e41d:	outs   dx,DWORD PTR ds:[esi]
  50e41e:	push   ss
  50e41f:	stos   BYTE PTR es:[edi],al
  50e420:	out    0x84,al
  50e422:	fnstsw WORD PTR [ebp+edx*2-0x7f95bab1]
  50e429:	adc    al,0x33
  50e42b:	xchg   ecx,eax
  50e42c:	mov    ah,BYTE PTR ds:0xf36d6d6a
  50e432:	inc    ecx
  50e433:	(bad)  
  50e434:	cmp    BYTE PTR ds:[edx+eiz*8+0x190ab07a],ah
  50e43c:	lock mov esi,0x3d70b112
  50e442:	adc    ebx,0xffffffc8
  50e445:	stc    
  50e446:	hlt    
  50e447:	inc    ebx
  50e448:	cld    
  50e449:	mov    ebx,0x3019b2a8
  50e44e:	mov    eax,0xe53ae0db
  50e453:	push   edi
  50e454:	leave  
  50e455:	cmp    BYTE PTR [eax],0x49
  50e458:	xlat   BYTE PTR ds:[ebx]
  50e459:	push   edi
  50e45a:	rcl    BYTE PTR [esp+ecx*1+0x2d88eea2],0x12
  50e462:	out    dx,al
  50e463:	out    dx,eax
  50e464:	lods   al,BYTE PTR ds:[esi]
  50e465:	xor    eax,DWORD PTR [eax+0x5c28699f]
  50e46b:	lock loopne 0x50e3ef
  50e46e:	mov    ds:0xabca9ba6,eax
  50e473:	dec    ecx
  50e474:	push   ebx
  50e475:	int    0x68
  50e477:	int    0xaa
  50e479:	out    0x1c,al
  50e47b:	imul   ebx,DWORD PTR [ebx],0x1
  50e47e:	cld    
  50e47f:	mov    ecx,0x9cac52e7
  50e484:	xchg   ecx,eax
  50e485:	push   ss
  50e486:	call   0x8d61eeb9
  50e48b:	mov    ecx,0xd974d65e
  50e490:	in     eax,dx
  50e491:	adc    eax,0x8839bce1
  50e496:	rol    BYTE PTR [eax],1
  50e498:	(bad)  
  50e499:	pop    ebp
  50e49a:	jne    0x50e4a8
  50e49c:	mov    edx,DWORD PTR [ebp+ebx*1+0x2f94544]
  50e4a3:	pop    es
  50e4a4:	popa   
  50e4a5:	fild   WORD PTR [edx]
  50e4a7:	out    dx,eax
  50e4a8:	repz or DWORD PTR [ebx+0x5f],ebx
  50e4ac:	test   al,0xc5
  50e4ae:	dec    edx
  50e4af:	mov    cl,0x72
  50e4b1:	pop    esp
  50e4b2:	aad    0x9
  50e4b4:	mov    WORD PTR [ebx+0x71],fs
  50e4b7:	fs scas eax,DWORD PTR es:[edi]
  50e4b9:	mov    dh,0xe3
  50e4bb:	inc    edi
  50e4bc:	pop    ecx
  50e4bd:	repnz add bl,al
  50e4c0:	pop    edi
  50e4c1:	out    0x73,al
  50e4c3:	lds    ecx,FWORD PTR [ecx]
  50e4c5:	jns    0x50e50c
  50e4c7:	aas    
  50e4c8:	push   es
  50e4c9:	pushf  
  50e4ca:	outs   dx,BYTE PTR ds:[esi]
  50e4cb:	jbe    0x50e468
  50e4cd:	add    al,0xda
  50e4cf:	pop    edi
  50e4d0:	push   ss
  50e4d1:	xor    ah,BYTE PTR ds:0x132676f3
  50e4d7:	jecxz  0x50e494
  50e4d9:	es ret 0x3160
  50e4dd:	outs   dx,DWORD PTR ds:[esi]
  50e4de:	cmp    DWORD PTR [ebp+0x3c],esi
  50e4e1:	or     ah,ah
  50e4e3:	lock rcr ch,0xf1
  50e4e7:	mov    esp,0x7772467d
  50e4ec:	dec    ebp
  50e4ed:	test   al,0xab
  50e4ef:	call   0x94de78ea
  50e4f4:	cmp    BYTE PTR [ecx+0x231c22b5],ah
  50e4fa:	aam    0xa2
  50e4fc:	inc    edx
  50e4fd:	add    BYTE PTR [ecx-0x1acd23fc],ch
  50e503:	lea    esi,[ebx-0x2f4c603c]
  50e509:	adc    BYTE PTR [ecx],bl
  50e50b:	add    cl,0x45
  50e50e:	(bad)  
  50e50f:	jle    0x50e529
  50e511:	xor    eax,0x6f36b209
  50e516:	fisub  WORD PTR [esi+ecx*8-0x3c]
  50e51a:	aas    
  50e51b:	fsub   DWORD PTR [ebx+esi*2+0x7f]
  50e51f:	pop    es
  50e520:	push   ebx
  50e521:	xchg   cl,al
  50e523:	mov    ebp,0xe5b46d19
  50e528:	push   0xffffffbb
  50e52a:	sbb    DWORD PTR [eax],edi
  50e52c:	jecxz  0x50e4bf
  50e52e:	pop    ebp
  50e52f:	stos   DWORD PTR es:[edi],eax
  50e530:	outs   dx,BYTE PTR ds:[esi]
  50e531:	cli    
  50e532:	adc    DWORD PTR [eax-0xa],ecx
  50e535:	test   al,0xe
  50e537:	or     dh,BYTE PTR [ecx-0x68]
  50e53a:	mov    eax,0x64ef92d2
  50e53f:	shl    BYTE PTR [ecx-0x3d],1
  50e542:	js     0x50e4cb
  50e544:	mov    WORD PTR [ebp+0x27f3ebe3],gs
  50e54a:	mov    eax,ds:0x48e411d0
  50e54f:	xor    ecx,DWORD PTR [ecx+0x5aa1396a]
  50e555:	repz test BYTE PTR [esi+0x6e6cf19a],0x60
  50e55d:	daa    
  50e55e:	mov    ds:0x5955e60f,eax
  50e563:	mov    bh,0xe3
  50e565:	jns    0x50e56b
  50e567:	xchg   ecx,eax
  50e568:	stc    
  50e569:	dec    edx
  50e56a:	add    al,0x82
  50e56c:	mov    esp,0xcce13a3
  50e571:	pop    ebp
  50e572:	mov    ebx,0x70d04a5c
  50e577:	loope  0x50e5e0
  50e579:	pop    ebx
  50e57a:	fst    DWORD PTR [edi-0x10]
  50e57d:	dec    esi
  50e57e:	add    al,0x77
  50e580:	push   edx
  50e581:	lods   eax,DWORD PTR ds:[esi]
  50e582:	xor    BYTE PTR [edi-0x6e969d74],ah
  50e588:	out    dx,al
  50e589:	cwde   
  50e58a:	jmp    FWORD PTR [ebp+0x50]
  50e58d:	mov    cl,0xfa
  50e58f:	sub    eax,0xd7fe9340
  50e594:	pop    ecx
  50e595:	ins    DWORD PTR es:[edi],dx
  50e596:	dec    edx
  50e597:	lds    ecx,FWORD PTR [edx+0x15408a68]
  50e59d:	sar    DWORD PTR [ecx-0x461ba44e],0x46
  50e5a4:	mov    ecx,0xb6383c94
  50e5a9:	addr16 mov eax,0x8731033a
  50e5af:	cmp    al,0x9e
  50e5b1:	out    0x90,eax
  50e5b3:	add    dh,BYTE PTR [ecx]
  50e5b5:	jecxz  0x50e58c
  50e5b7:	mov    esp,DWORD PTR ds:[eax]
  50e5ba:	xor    al,0x0
  50e5bc:	repz cmp dl,BYTE PTR [esp+eiz*2-0x6969fe02]
  50e5c4:	dec    ecx
  50e5c5:	icebp  
  50e5c6:	clc    
  50e5c7:	jbe    0x50e59c
  50e5c9:	pop    ecx
  50e5ca:	push   ebx
  50e5cb:	iret   
  50e5cc:	test   al,0xee
  50e5ce:	dec    ecx
  50e5cf:	adc    bh,bl
  50e5d1:	call   0xddbd:0x14f6ac45
  50e5d8:	pop    edi
  50e5d9:	outs   dx,BYTE PTR ds:[esi]
  50e5da:	bound  edi,QWORD PTR [edx]
  50e5dc:	jle    0x50e631
  50e5de:	lock in eax,0xa8
  50e5e1:	mov    ah,0x92
  50e5e3:	leave  
  50e5e4:	xor    esi,edx
  50e5e6:	js     0x50e5d1
  50e5e8:	test   DWORD PTR fs:[edx+0x1],esi
  50e5ec:	adc    al,0xc5
  50e5ee:	inc    eax
  50e5ef:	stos   BYTE PTR es:[edi],al
  50e5f0:	push   esi
  50e5f1:	mov    ecx,DWORD PTR [esi+ebp*8]
  50e5f4:	rcr    dh,cl
  50e5f6:	and    al,dh
  50e5f8:	mov    ds,WORD PTR [eax+edx*4+0x3a]
  50e5fc:	mov    ebp,0x88ed816f
  50e601:	xchg   esi,eax
  50e602:	sub    ch,bh
  50e604:	out    dx,al
  50e605:	pop    ebp
  50e606:	jmp    0x911558a4
  50e60b:	jo     0x50e673
  50e60d:	pop    eax
  50e60e:	les    edi,FWORD PTR [ebx-0x209450a1]
  50e614:	ins    DWORD PTR es:[edi],dx
  50e615:	dec    esi
  50e617:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  50e619:	push   0xffffff85
  50e61b:	or     BYTE PTR [eax+0x62f8a371],0xc7
  50e622:	aam    0x1d
  50e624:	fld    TBYTE PTR [ebp+0x394c9ca5]
  50e62a:	fisubr DWORD PTR [ebp+ebp*4-0x75]
  50e62e:	lods   eax,DWORD PTR ds:[esi]
  50e62f:	xlat   BYTE PTR ds:[ebx]
  50e630:	mov    esp,0x7785a85b
  50e635:	jmp    0x50e690
  50e637:	fwait
  50e638:	jbe    0x50e64b
  50e63a:	iret   
  50e63b:	push   esp
  50e63c:	sub    eax,0xbf6ae173
  50e641:	push   0x166059a9
  50e646:	pop    edi
  50e647:	xchg   BYTE PTR [edx-0x18],bh
  50e64a:	mov    edx,DWORD PTR [ebx+0x36528732]
  50e650:	jmp    0x785deb33
  50e655:	or     DWORD PTR [esi+0x6a53c2db],0x31d8c595
  50e65f:	ins    DWORD PTR es:[edi],dx
  50e660:	ss aad 0x34
  50e663:	sub    DWORD PTR [ebp+0x37d8516b],edi
  50e669:	jnp    0x50e666
  50e66b:	gs inc esi
  50e66d:	inc    ecx
  50e66e:	mov    cl,BYTE PTR [edi-0x2]
  50e671:	mov    ah,0xc2
  50e673:	sahf   
  50e674:	inc    eax
  50e675:	sbb    DWORD PTR [edx],edx
  50e677:	mov    esi,0x5e6db255
  50e67c:	(bad)  
  50e67d:	sub    ebx,DWORD PTR [edx-0x40]
  50e680:	sbb    eax,0xe7f58cfa
  50e685:	sbb    BYTE PTR [esp+eiz*8+0x38],0xe2
  50e68a:	cmp    al,0x85
  50e68c:	dec    eax
  50e68d:	outs   dx,DWORD PTR ds:[esi]
  50e68e:	out    0x2c,eax
  50e690:	jnp    0x50e6ea
  50e692:	jp     0x50e629
  50e694:	or     BYTE PTR [edi],bl
  50e696:	mov    esp,0xe3f994c1
  50e69b:	call   0xfe7ae499
  50e6a0:	mul    DWORD PTR [ebx+esi*8-0x40e4054e]
  50e6a7:	xlat   BYTE PTR ds:[ebx]
  50e6a8:	aam    0xb
  50e6aa:	test   BYTE PTR [esi-0xb],bl
  50e6ad:	mov    bh,0x25
  50e6af:	leave  
  50e6b0:	and    dh,BYTE PTR [eax+0x3e]
  50e6b3:	(bad)  
  50e6b5:	cmp    WORD PTR [ecx],0x67d2
  50e6ba:	cmp    bh,BYTE PTR ds:0xe55d71
  50e6c0:	(bad)  
  50e6c1:	xor    dl,BYTE PTR [ebx]
  50e6c3:	outs   dx,BYTE PTR ds:[esi]
  50e6c4:	(bad)  
  50e6c6:	lea    eax,[ebx]
  50e6c8:	imul   ebx,DWORD PTR [edx-0x43],0xf4c2fcb9
  50e6cf:	and    al,0xb5
  50e6d1:	add    eax,DWORD PTR [ebx]
  50e6d3:	fldcw  WORD PTR [ebx-0xc]
  50e6d6:	lods   eax,DWORD PTR ds:[esi]
  50e6d7:	pop    ss
  50e6d8:	repz (bad) 
  50e6da:	shl    DWORD PTR [ecx],1
  50e6dc:	repnz not ebp
  50e6df:	rcl    BYTE PTR [ebx-0x1c],1
  50e6e2:	(bad)  [ebp+0xe53f50e]
  50e6e8:	gs cli 
  50e6ea:	xor    edi,edx
  50e6ec:	sbb    ch,BYTE PTR [ebx+0x37]
  50e6ef:	xchg   esp,eax
  50e6f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50e6f1:	and    eax,0xd775d2f9
  50e6f6:	loope  0x50e6e7
  50e6f8:	jno    0x50e6d1
  50e6fa:	push   ss
  50e6fb:	add    al,0x14
  50e6fd:	push   cs
  50e6fe:	pop    esi
  50e6ff:	scas   eax,DWORD PTR es:[edi]
  50e700:	inc    ebp
  50e701:	push   0x82dc34ab
  50e706:	mov    cl,0xe5
  50e708:	mov    DWORD PTR [edi-0x4d1dc589],eax
  50e70e:	daa    
  50e70f:	out    dx,eax
  50e710:	test   DWORD PTR [ebx],eax
  50e712:	daa    
  50e713:	sbb    DWORD PTR [edi],esi
  50e715:	int3   
  50e716:	mov    al,ds:0xaead69f0
  50e71b:	ror    DWORD PTR [ebp+ebx*2+0x15f1ad75],1
  50e722:	(bad)  
  50e723:	daa    
  50e724:	mov    cl,0xf1
  50e726:	shl    BYTE PTR [edi-0x61c24c69],0x9f
  50e72d:	pop    esi
  50e72e:	jne    0x50e710
  50e730:	lods   al,BYTE PTR ds:[esi]
  50e731:	shl    BYTE PTR [edx-0x74],1
  50e734:	cmp    bh,cl
  50e736:	mov    edi,0x477c938
  50e73b:	mov    BYTE PTR [ebp+0x25],cl
  50e73e:	fnstcw WORD PTR [ebx-0x1e]
  50e741:	js     0x50e6e9
  50e743:	iret   
  50e744:	mov    al,0xd9
  50e746:	push   esi
  50e747:	adc    al,0xe9
  50e749:	jle    0x50e70a
  50e74b:	push   ds
  50e74c:	inc    eax
  50e74d:	xor    DWORD PTR [eax],ebp
  50e74f:	pop    ecx
  50e750:	and    bl,dh
  50e752:	mov    esp,0x2ac8f577
  50e757:	shl    DWORD PTR [ebx+0x1b57ca2a],0x2a
  50e75e:	cmp    al,0x7c
  50e760:	mov    eax,0x6bb21590
  50e765:	jmp    0x50e74c
  50e767:	cmp    ebx,eax
  50e769:	mov    ecx,0xed376112
  50e76e:	mov    edi,DWORD PTR [esi-0x61a6b3ca]
  50e774:	test   al,0xe6
  50e776:	dec    esi
  50e777:	cld    
  50e778:	mov    ecx,0xc3472a95
  50e77d:	xchg   edi,edx
  50e77f:	and    DWORD PTR [esi],ebp
  50e781:	fwait
  50e782:	ror    cl,cl
  50e784:	pop    edi
  50e785:	inc    eax
  50e786:	jne    0x50e74b
  50e788:	cmp    al,0x42
  50e78a:	mov    ebx,0xb1d07116
  50e78f:	sar    DWORD PTR [edx+0x1aa5813d],cl
  50e795:	add    al,ch
  50e797:	xchg   ecx,eax
  50e798:	inc    ecx
  50e799:	mov    ch,0x5e
  50e79b:	xchg   ebp,eax
  50e79c:	stos   DWORD PTR es:[edi],eax
  50e79d:	repnz sub ah,cl
  50e7a0:	arpl   WORD PTR [esi-0x43],cx
  50e7a3:	mov    bl,al
  50e7a5:	inc    eax
  50e7a6:	dec    esp
  50e7a7:	or     BYTE PTR [eax],ah
  50e7a9:	add    cl,ah
  50e7ab:	stos   BYTE PTR es:[edi],al
  50e7ac:	push   ecx
  50e7ad:	dec    ebx
  50e7ae:	(bad)  
  50e7b0:	adc    dl,BYTE PTR [edi]
  50e7b2:	scas   eax,DWORD PTR es:[edi]
  50e7b3:	lods   al,BYTE PTR ds:[esi]
  50e7b4:	loope  0x50e826
  50e7b6:	push   ebp
  50e7b7:	into   
  50e7b8:	ror    DWORD PTR [ebp+0x259bab76],1
  50e7be:	enter  0x9eaa,0x4e
  50e7c2:	cmp    BYTE PTR [ecx+0x3e],dh
  50e7c5:	or     BYTE PTR [ebx-0x7d],bh
  50e7c8:	mov    DWORD PTR [esi+0x1e],edi
  50e7cb:	add    al,0x66
  50e7cd:	out    dx,eax
  50e7ce:	fidiv  WORD PTR [ecx-0x42]
  50e7d1:	mov    bl,0x4
  50e7d3:	cmp    BYTE PTR [ecx-0x21],0xe4
  50e7d7:	sbb    cl,dl
  50e7d9:	sub    al,0x20
  50e7db:	jae    0x50e770
  50e7dd:	sbb    esi,edi
  50e7df:	dec    ebx
  50e7e0:	xchg   ebx,eax
  50e7e1:	dec    edx
  50e7e2:	dec    ebx
  50e7e3:	pusha  
  50e7e4:	retf   
  50e7e5:	int    0xab
  50e7e7:	push   ecx
  50e7e8:	adc    ecx,DWORD PTR [ebx-0x2cdaa1da]
  50e7ee:	jbe    0x50e78f
  50e7f0:	jmp    0x77edeb93
  50e7f5:	aas    
  50e7f6:	xchg   esp,eax
  50e7f7:	cdq    
  50e7f8:	ins    BYTE PTR es:[edi],dx
  50e7f9:	adc    al,0x68
  50e7fb:	(bad)  
  50e7fc:	ins    DWORD PTR es:[edi],dx
  50e7fd:	pop    esi
  50e7fe:	push   edx
  50e7ff:	xchg   ebx,eax
  50e800:	rcr    DWORD PTR [ecx+0x1404d95f],1
  50e806:	inc    ebp
  50e807:	shl    BYTE PTR [edi],cl
  50e809:	imul   BYTE PTR [eax]
  50e80b:	sahf   
  50e80c:	and    eax,0xd61db279
  50e811:	jecxz  0x50e7ae
  50e813:	mov    bl,al
  50e815:	mov    ch,0xaa
  50e817:	lock sub al,BYTE PTR [ecx]
  50e81a:	jecxz  0x50e855
  50e81c:	ret    
  50e81d:	test   al,0xe0
  50e81f:	sahf   
  50e820:	dec    eax
  50e821:	jl     0x50e800
  50e823:	out    dx,eax
  50e824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50e825:	pop    edx
  50e826:	in     al,0x9c
  50e828:	and    BYTE PTR [esi-0xd],ch
  50e82b:	push   0x3e
  50e82d:	inc    ebx
  50e82e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50e82f:	(bad)  
  50e830:	stc    
  50e831:	or     eax,DWORD PTR [edx]
  50e833:	sbb    bh,BYTE PTR [edx-0xe27ba40]
  50e839:	dec    ebp
  50e83a:	or     eax,0x5441ed63
  50e83f:	sub    DWORD PTR [eax+ebp*2-0x55],eax
  50e843:	into   
  50e844:	adc    ah,0x4
  50e847:	bound  esp,QWORD PTR [ebx+0x19]
  50e84a:	out    dx,al
  50e84b:	or     eax,0x1c2b2851
  50e850:	adc    DWORD PTR [eax+0x65b31cc2],0x92b7d32f
  50e85a:	sub    eax,0x4e5070b2
  50e85f:	clc    
  50e860:	retf   
  50e861:	jo     0x50e7ec
  50e863:	icebp  
  50e864:	sbb    ecx,DWORD PTR [edx-0x57e7edfd]
  50e86a:	sbb    eax,DWORD PTR [ebx-0x10]
  50e86d:	pop    ebp
  50e86e:	mov    BYTE PTR [ebp+0x28],0x55
  50e872:	jbe    0x50e879
  50e874:	push   ss
  50e875:	adc    DWORD PTR [edx],0x9427af13
  50e87b:	mov    bl,0x67
  50e87d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50e87e:	cmp    esi,ecx
  50e880:	xchg   ebp,eax
  50e881:	out    0x17,eax
  50e883:	ret    
  50e884:	jl     0x50e8ed
  50e886:	dec    esp
  50e887:	scas   al,BYTE PTR es:[edi]
  50e888:	test   BYTE PTR [ebp-0x7c],bl
  50e88b:	mov    al,ds:0x10a1466
  50e890:	xchg   edx,eax
  50e891:	clc    
  50e892:	xchg   esi,eax
  50e893:	rcl    BYTE PTR fs:[ecx+edi*1+0x5ebba01e],cl
  50e89b:	mov    bh,0xe7
  50e89d:	push   es
  50e89e:	mov    cl,0x81
  50e8a0:	mov    ?,eax
  50e8a2:	arpl   WORD PTR [ebp+0x6d],ax
  50e8a5:	aas    
  50e8a6:	pop    esi
  50e8a7:	inc    edi
  50e8a8:	jns    0x50e875
  50e8aa:	enter  0xced0,0xa1
  50e8ae:	xor    ebp,esi
  50e8b0:	xor    ecx,DWORD PTR [ecx+0x2936fc48]
  50e8b6:	push   ebx
  50e8b7:	cli    
  50e8b8:	add    dh,BYTE PTR [edi+0x1f266186]
  50e8be:	(bad)  
  50e8c0:	mov    ch,0x51
  50e8c2:	add    BYTE PTR [edx-0x1b7a33b8],al
  50e8c8:	popa   
  50e8c9:	mov    edi,0xe116ad6a
  50e8ce:	dec    ecx
  50e8cf:	pop    si
  50e8d1:	in     al,dx
  50e8d2:	mov    ah,BYTE PTR [edx]
  50e8d4:	stos   BYTE PTR es:[edi],al
  50e8d5:	mov    DWORD PTR [edx+0x38],eax
  50e8d8:	imul   ebp,edi,0x6a93aee6
  50e8de:	cmp    eax,0x5f165e33
  50e8e3:	sbb    bh,dh
  50e8e5:	nop
  50e8e6:	cmp    bl,BYTE PTR [ebx+ecx*4+0x24]
  50e8ea:	xchg   al,dh
  50e8ec:	shl    BYTE PTR [ecx+0x40],0x5f
  50e8f0:	clc    
  50e8f1:	(bad)  
  50e8f2:	cs cmc 
  50e8f4:	adc    ah,cl
  50e8f6:	or     dl,bh
  50e8f8:	and    al,BYTE PTR [edi+0x27f71bf5]
  50e8fe:	mov    al,0x74
  50e900:	js     0x50e922
  50e902:	push   0x4552532e
  50e907:	daa    
  50e908:	xor    ecx,DWORD PTR [ebx*1-0x17c2f862]
  50e90f:	pop    eax
  50e910:	test   BYTE PTR [ebp+0x7a],al
  50e913:	mov    ch,0x61
  50e915:	jl     0x50e91d
  50e917:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  50e919:	sbb    al,0x7b
  50e91b:	xchg   edx,eax
  50e91c:	sahf   
  50e91d:	jecxz  0x50e8cb
  50e91f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50e920:	out    dx,eax
  50e921:	or     al,0xae
  50e923:	js     0x50e8cc
  50e925:	repnz nop
  50e927:	or     ecx,0xfffffffb
  50e92a:	test   BYTE PTR [edi+0x38386c61],bl
  50e930:	adc    ebp,ecx
  50e932:	pusha  
  50e933:	loopne 0x50e92e
  50e935:	add    BYTE PTR [edi+0x490ffe0b],cl
  50e93b:	pop    ecx
  50e93c:	push   ds
  50e93d:	loop   0x50e98c
  50e93f:	(bad)  
  50e940:	pop    esi
  50e941:	enter  0x8c77,0xd2
  50e945:	jno    0x50e942
  50e947:	pop    ss
  50e948:	mov    ds:0xad4b9fa9,eax
  50e94d:	data16 cld 
  50e94f:	xchg   DWORD PTR [esi],esp
  50e951:	inc    esi
  50e952:	cli    
  50e953:	jbe    0x50e99b
  50e955:	dec    ebx
  50e956:	not    DWORD PTR ds:0x1e47ddb8
  50e95c:	jg     0x50e932
  50e95e:	or     dh,bh
  50e960:	mov    cl,0xb5
  50e962:	or     al,0x36
  50e964:	sbb    BYTE PTR [edi+eiz*4],dl
  50e967:	cmc    
  50e968:	call   FWORD PTR [eax]
  50e96a:	push   esp
  50e96b:	imul   edx,DWORD PTR [esi-0x20],0x743026fb
  50e972:	adc    bh,BYTE PTR [eax-0x74]
  50e975:	mov    eax,0xa8c37754
  50e97a:	inc    ebx
  50e97b:	data16 sahf 
  50e97d:	mov    ds:0x56d9b4ee,eax
  50e982:	cmp    al,0x68
  50e984:	fisttp WORD PTR [ebx-0x4a7ab40]
  50e98a:	push   ebp
  50e98b:	sbb    al,0x39
  50e98d:	cmc    
  50e98e:	mov    ebx,0x9415a787
  50e993:	pop    edx
  50e994:	push   0x14
  50e996:	mov    ebx,0xa941a862
  50e99b:	js     0x50e9da
  50e99d:	stos   DWORD PTR es:[edi],eax
  50e99e:	outs   dx,DWORD PTR ds:[esi]
  50e99f:	inc    esp
  50e9a0:	push   edi
  50e9a1:	lock cmp bh,0xc8
  50e9a5:	(bad)  
  50e9a8:	sbb    edx,DWORD PTR [ebp+eiz*2-0x3d88fc39]
  50e9af:	sbb    DWORD PTR [ecx+edx*2],edx
  50e9b2:	int    0x4a
  50e9b4:	aam    0x7b
  50e9b6:	loop   0x50e9f1
  50e9b8:	mov    eax,ds:0x11e868dc
  50e9bd:	(bad)  [edi]
  50e9bf:	hlt    
  50e9c0:	mov    DWORD PTR [ebx-0x667b981d],ebp
  50e9c6:	or     DWORD PTR [ebx+0x41],0x53e10424
  50e9cd:	adc    dl,BYTE PTR [edi-0x71389ed2]
  50e9d3:	mov    bh,0x85
  50e9d5:	and    ch,BYTE PTR [ecx+0x3c]
  50e9d8:	adc    eax,0xeb1d1bff
  50e9dd:	mov    BYTE PTR [edi-0x60],bl
  50e9e0:	sbb    al,0xf
  50e9e2:	int    0x3d
  50e9e4:	lds    edi,FWORD PTR [ebp-0x2c]
  50e9e7:	mov    eax,0x781df2e9
  50e9ec:	jmp    0xe4d4:0x4bd4c18
  50e9f3:	div    BYTE PTR [ebp+eax*8+0x3ca17105]
  50e9fa:	in     al,0x48
  50e9fc:	and    BYTE PTR [esi+edx*8],ch
  50e9ff:	mov    eax,0x244e7d8c
  50ea04:	stc    
  50ea05:	cmp    ebx,DWORD PTR ds:0x66a45684
  50ea0b:	dec    ebp
  50ea0c:	test   DWORD PTR ds:0xc3e69b5,0x7277081b
  50ea16:	xchg   edi,eax
  50ea17:	and    edi,DWORD PTR [esi-0x19]
  50ea1a:	xchg   ecx,eax
  50ea1b:	pop    esi
  50ea1c:	pop    ebp
  50ea1d:	mov    dh,0x76
  50ea1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ea20:	mov    bl,0x21
  50ea22:	add    ch,BYTE PTR [ebp-0x6e]
  50ea25:	out    dx,al
  50ea26:	xchg   esi,eax
  50ea27:	jno    0x50e9da
  50ea29:	mov    esp,0x2cbded6c
  50ea2e:	xor    DWORD PTR [ecx+0xe],ebp
  50ea31:	test   eax,0xc4197b3a
  50ea36:	add    DWORD PTR [ecx+0x14],0xffffffa1
  50ea3a:	push   esi
  50ea3b:	icebp  
  50ea3c:	popa   
  50ea3d:	shl    DWORD PTR [eax],1
  50ea3f:	out    dx,al
  50ea40:	inc    esp
  50ea41:	sbb    bl,BYTE PTR [esi+ebp*2+0x692f121a]
  50ea48:	rcr    edi,1
  50ea4a:	out    0x7f,al
  50ea4c:	xor    dh,0x2f
  50ea4f:	rcr    DWORD PTR [ecx],1
  50ea51:	and    al,0xc
  50ea53:	pop    edi
  50ea54:	loopne 0x50ea6e
  50ea56:	dec    esp
  50ea57:	and    DWORD PTR [esi-0x7c],edx
  50ea5a:	cmp    BYTE PTR [ebx-0x48],dh
  50ea5d:	fs add bh,ah
  50ea60:	shl    DWORD PTR ds:0x4970963b,cl
  50ea66:	xor    al,0xa2
  50ea68:	lea    eax,[esi+0x78957687]
  50ea6e:	sub    eax,0x7dad87e8
  50ea73:	repnz ins DWORD PTR es:[edi],dx
  50ea75:	aaa    
  50ea76:	ret    0x8ad3
  50ea79:	lods   eax,DWORD PTR ds:[esi]
  50ea7a:	inc    ebp
  50ea7b:	or     eax,0xf0509ae4
  50ea80:	test   BYTE PTR [eax-0x4a],al
  50ea83:	or     DWORD PTR [ebx+0x3e],esp
  50ea86:	ja     0x50eaa3
  50ea88:	sub    al,0x94
  50ea8a:	mov    dh,0xe6
  50ea8c:	pusha  
  50ea8d:	sub    ebp,DWORD PTR [eax]
  50ea8f:	add    al,0x23
  50ea91:	jecxz  0x50ea29
  50ea93:	push   ecx
  50ea94:	inc    eax
  50ea95:	pop    esp
  50ea96:	imul   esi,esi,0x72
  50ea99:	ficomp DWORD PTR [ecx+esi*4]
  50ea9c:	(bad)  
  50ea9d:	dec    edx
  50ea9e:	(bad)  
  50ea9f:	mov    BYTE PTR [ebx+0x34878970],bl
  50eaa5:	and    eax,ebp
  50eaa7:	out    dx,eax
  50eaa8:	les    esi,FWORD PTR [edx]
  50eaaa:	jbe    0x50eab8
  50eaac:	jo     0x50ea5c
  50eaae:	xor    DWORD PTR [ebp-0x3d],0x903f258a
  50eab5:	xlat   BYTE PTR ds:[ebx]
  50eab6:	enter  0x3dc0,0x58
  50eaba:	inc    ebp
  50eabb:	ins    DWORD PTR es:[edi],dx
  50eabc:	lahf   
  50eabd:	mov    ebx,ss
  50eabf:	mov    dh,0xf1
  50eac1:	jo     0x50eaf2
  50eac3:	dec    edi
  50eac4:	call   0x5a7502c7
  50eac9:	dec    eax
  50eaca:	pop    es
  50eacb:	lods   eax,DWORD PTR ds:[esi]
  50eacc:	push   edx
  50eacd:	jbe    0x50eab2
  50eacf:	add    al,0xcc
  50ead1:	pop    ebx
  50ead2:	inc    edi
  50ead3:	js     0x50ead3
  50ead5:	repnz push fs
  50ead8:	loop   0x50eb02
  50eada:	mov    dh,0xd1
  50eadc:	jmp    0xcc7a:0x52a9defc
  50eae3:	addr16 clc 
  50eae5:	into   
  50eae6:	adc    eax,0x4895f89e
  50eaeb:	pop    ds
  50eaec:	scas   eax,DWORD PTR es:[edi]
  50eaed:	inc    esp
  50eaee:	sbb    al,0x92
  50eaf0:	mov    eax,ds:0x257e2df8
  50eaf5:	sbb    DWORD PTR [esi],ebx
  50eaf7:	push   ds
  50eaf8:	jbe    0x50eb69
  50eafa:	loopne 0x50eb67
  50eafc:	add    al,0xb4
  50eafe:	test   al,0x16
  50eb00:	popf   
  50eb01:	test   DWORD PTR [esi-0x9f63aa7],eax
  50eb07:	mov    bh,0x11
  50eb09:	jl     0x50eaf1
  50eb0b:	xchg   DWORD PTR [ecx*2+0x13d45d0d],edi
  50eb12:	fidiv  DWORD PTR [ebx+0x313fbe3c]
  50eb18:	mov    ebx,0x7c2ad622
  50eb1d:	inc    esp
  50eb1e:	mov    edi,0xa3405d87
  50eb23:	mov    eax,0x946ba302
  50eb28:	dec    ebx
  50eb29:	shl    BYTE PTR [ebx+edi*2],cl
  50eb2c:	aad    0xeb
  50eb2e:	mov    eax,edx
  50eb30:	test   eax,0xf2e8a0a
  50eb35:	xor    eax,DWORD PTR [esi+0x2d19bc89]
  50eb3b:	js     0x50eb0d
  50eb3d:	fisubr WORD PTR [eax-0x37]
  50eb40:	and    dh,BYTE PTR [esp+ebp*2-0x16]
  50eb44:	xor    DWORD PTR [edi-0x64cff9aa],esi
  50eb4a:	add    BYTE PTR [esp+eax*8-0x43b49b33],ch
  50eb51:	daa    
  50eb52:	xlat   BYTE PTR ds:[ebx]
  50eb53:	rcl    DWORD PTR [edi+eax*1],0x61
  50eb57:	jecxz  0x50ebc0
  50eb59:	gs sti 
  50eb5b:	fidiv  WORD PTR [ebx]
  50eb5d:	cmp    edi,DWORD PTR [eax]
  50eb5f:	xlat   BYTE PTR ds:[ebx]
  50eb60:	jae    0x50eb1b
  50eb62:	jmp    0xd895b30e
  50eb67:	(bad)  
  50eb68:	cld    
  50eb69:	je     0x50ebdf
  50eb6b:	mov    dl,0xec
  50eb6d:	inc    eax
  50eb6e:	stc    
  50eb6f:	push   0x3e43ff90
  50eb74:	mov    dl,0xfa
  50eb76:	aam    0x8
  50eb78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50eb79:	outs   dx,BYTE PTR ds:[esi]
  50eb7a:	pop    edi
  50eb7b:	fiadd  WORD PTR [edx-0x14352de2]
  50eb81:	mov    bl,0xb5
  50eb83:	or     cl,BYTE PTR [eax-0x77]
  50eb86:	mov    ebx,0x7aa70c08
  50eb8b:	xchg   ebx,eax
  50eb8c:	mov    ecx,0xa2f07146
  50eb91:	jecxz  0x50eb8b
  50eb93:	repz mov dh,0x7e
  50eb96:	jmp    0x19dc:0x7fe215af
  50eb9d:	jmp    0x50eb57
  50eb9f:	add    dl,BYTE PTR [ebx]
  50eba1:	aam    0xf1
  50eba3:	inc    eax
  50eba4:	adc    ebp,DWORD PTR [ebx]
  50eba6:	test   BYTE PTR [edx-0x55b258e9],0xb7
  50ebad:	int    0x7d
  50ebaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50ebb0:	inc    eax
  50ebb1:	outs   dx,BYTE PTR ds:[esi]
  50ebb2:	in     eax,dx
  50ebb3:	enter  0xcaff,0x21
  50ebb7:	pop    eax
  50ebb8:	mov    cl,0xc
  50ebba:	jnp    0x50eb4d
  50ebbc:	popa   
  50ebbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ebbe:	jg     0x50ebb6
  50ebc0:	jne    0x50eb9a
  50ebc2:	jae    0x50ec2b
  50ebc4:	enter  0x773a,0x1a
  50ebc8:	iret   
  50ebc9:	cmp    dh,ah
  50ebcb:	sti    
  50ebcc:	sbb    dl,BYTE PTR [esi+0x48]
  50ebcf:	cmp    dh,bh
  50ebd1:	sub    eax,0x7c3e8a8c
  50ebd6:	cmp    esi,edi
  50ebd8:	pop    eax
  50ebd9:	sub    al,BYTE PTR [ecx+0x472f6fad]
  50ebdf:	mov    edi,0xa7c99a02
  50ebe4:	add    eax,0x79b768fc
  50ebe9:	sahf   
  50ebea:	and    eax,DWORD PTR [edi+0x6fd9bce1]
  50ebf0:	sar    ebx,1
  50ebf2:	cld    
  50ebf3:	and    eax,0x8330f0a2
  50ebf8:	or     eax,0xa8b51e83
  50ebfd:	mov    ecx,0xb77d0052
  50ec02:	dec    ebp
  50ec03:	scas   eax,DWORD PTR es:[edi]
  50ec04:	adc    eax,0x474dfdac
  50ec09:	pop    ss
  50ec0a:	or     eax,DWORD PTR [eax]
  50ec0c:	aas    
  50ec0d:	mov    dh,BYTE PTR [eax]
  50ec0f:	xchg   ecx,eax
  50ec10:	adc    al,BYTE PTR [ebx+0x6b]
  50ec13:	mov    dl,0xf
  50ec15:	or     BYTE PTR [ebx+eax*8],0xd7
  50ec19:	lock and BYTE PTR [edx-0x33],0x84
  50ec1e:	cmp    edx,ecx
  50ec20:	je     0x50ec98
  50ec22:	mov    eax,ds:0xd1eb6776
  50ec27:	jb     0x50ec6a
  50ec29:	and    ecx,DWORD PTR [esi-0x3d76e721]
  50ec2f:	jno    0x50ec18
  50ec31:	xchg   esp,eax
  50ec32:	test   BYTE PTR [edx+0x4aa4de28],bl
  50ec38:	sbb    DWORD PTR [eax-0x36141d22],edx
  50ec3e:	outs   dx,DWORD PTR ds:[esi]
  50ec3f:	inc    ebx
  50ec40:	fst    DWORD PTR [ebx-0x531c2b92]
  50ec46:	jmp    ebx
  50ec48:	mov    al,cs:0xedfc821
  50ec4e:	inc    ebx
  50ec4f:	pop    ecx
  50ec50:	adc    ah,BYTE PTR [edi+0x11a961da]
  50ec56:	sbb    BYTE PTR ds:0xfe9dec60,0xa0
  50ec5d:	rcr    dl,0xab
  50ec60:	inc    ecx
  50ec61:	or     eax,0x2936237f
  50ec66:	mov    ds:0x3bf2817f,al
  50ec6b:	ins    BYTE PTR es:[edi],dx
  50ec6c:	mov    ch,cl
  50ec6e:	mov    bh,0xf
  50ec70:	loop   0x50ec80
  50ec72:	cs xchg edx,eax
  50ec74:	and    dh,bh
  50ec76:	test   DWORD PTR [eax],esi
  50ec78:	jae    0x50ec5e
  50ec7a:	jns    0x50ec06
  50ec7c:	iret   
  50ec7d:	ffreep st(6)
  50ec7f:	sbb    ebx,esp
  50ec81:	(bad)  
  50ec82:	jnp    0x50ec37
  50ec84:	imul   eax,esp,0x13
  50ec87:	push   0xffffffcd
  50ec89:	mov    ah,0xa5
  50ec8b:	popa   
  50ec8c:	xchg   ebp,eax
  50ec8d:	mov    cl,0x7d
  50ec8f:	inc    ebx
  50ec90:	je     0x50ecb7
  50ec92:	cdq    
  50ec93:	into   
  50ec94:	inc    edx
  50ec95:	mov    DWORD PTR [esi],ebx
  50ec97:	repz sbb al,0xc9
  50ec9a:	sub    DWORD PTR [ecx+0x28],esi
  50ec9d:	jg     0x50ecf7
  50ec9f:	in     eax,dx
  50eca0:	fild   QWORD PTR [esi-0x70d4f4b9]
  50eca6:	mov    eax,ds:0xbebbed64
  50ecab:	cmp    BYTE PTR [ecx+0x7f31a5a1],0x6c
  50ecb2:	jo     0x50ec3a
  50ecb4:	cmp    BYTE PTR [ebp+0x4d],bh
  50ecb7:	xlat   BYTE PTR ds:[ebx]
  50ecb8:	imul   edi,edx,0xda4d07c3
  50ecbe:	add    bh,ah
  50ecc0:	push   0xc4509114
  50ecc5:	sub    esi,ebp
  50ecc7:	aam    0xc0
  50ecc9:	cmp    eax,0x6686eaa
  50ecce:	aad    0x92
  50ecd0:	pusha  
  50ecd1:	adc    eax,0x401380c4
  50ecd6:	inc    ecx
  50ecd7:	pop    ebx
  50ecd8:	and    BYTE PTR [esi-0x54],bh
  50ecdb:	mov    ah,0xd3
  50ecdd:	sbb    DWORD PTR [ecx+eiz*8+0x58],0xffffffc1
  50ece2:	xchg   esp,eax
  50ece3:	ret    
  50ece4:	in     eax,dx
  50ece5:	ret    0xfd74
  50ece8:	or     ebp,0xc6f14d57
  50ecee:	xchg   ebx,eax
  50ecef:	aaa    
  50ecf0:	aam    0x3d
  50ecf2:	push   ebx
  50ecf3:	and    al,0x97
  50ecf5:	push   ebp
  50ecf6:	test   al,0xc0
  50ecf8:	in     eax,dx
  50ecf9:	out    dx,al
  50ecfa:	shl    BYTE PTR [edi+0x554f4165],cl
  50ed00:	imul   ebx,DWORD PTR [edx],0x84d58560
  50ed06:	dec    DWORD PTR [edx+0x123b1c93]
  50ed0c:	mov    ebx,0xa905a657
  50ed11:	xor    BYTE PTR [ecx+0x2c440212],0x23
  50ed18:	xor    ch,BYTE PTR [edi-0xcc954e]
  50ed1e:	aas    
  50ed1f:	fisubr WORD PTR [edx-0x37b21db5]
  50ed25:	push   edi
  50ed26:	ret    
  50ed27:	cmp    al,0x82
  50ed29:	mov    eax,ds:0x26e7618a
  50ed2e:	dec    edx
  50ed2f:	sar    dl,1
  50ed31:	ret    
  50ed32:	clc    
  50ed33:	fdivr  st,st(2)
  50ed35:	shr    edi,1
  50ed37:	mov    cl,0xd1
  50ed39:	(bad)  
  50ed3c:	xchg   edx,eax
  50ed3d:	mov    ah,0x32
  50ed3f:	or     bl,BYTE PTR [edi]
  50ed41:	mov    ebx,DWORD PTR [ecx+0x51]
  50ed44:	loopne 0x50ed8d
  50ed46:	xor    DWORD PTR [eax-0x25],ebp
  50ed49:	xchg   edx,eax
  50ed4a:	push   esp
  50ed4b:	daa    
  50ed4c:	sub    esi,DWORD PTR [edi+0xe]
  50ed4f:	sub    bl,BYTE PTR [eax]
  50ed51:	aad    0x94
  50ed53:	mov    bh,0xa2
  50ed55:	jbe    0x50ed2a
  50ed57:	and    bl,BYTE PTR [esi-0x4b]
  50ed5a:	jb     0x50ed78
  50ed5c:	xlat   BYTE PTR ds:[ebx]
  50ed5d:	inc    ecx
  50ed5e:	fdiv   QWORD PTR [ecx]
  50ed60:	sub    eax,0x1e085951
  50ed65:	push   0x1881056c
  50ed6a:	cmp    BYTE PTR [eax-0x1d9cdaf1],0x58
  50ed71:	iret   
  50ed72:	mov    ebx,DWORD PTR [esi]
  50ed74:	cmc    
  50ed75:	pop    ebp
  50ed76:	(bad)  
  50ed79:	and    al,0x40
  50ed7b:	cmp    al,0x52
  50ed7d:	xor    BYTE PTR [ecx-0x35c3532b],bl
  50ed83:	cmp    esi,edi
  50ed85:	(bad)  
  50ed86:	push   ecx
  50ed87:	loopne 0x50ed7d
  50ed89:	mov    ebp,0x23bdc541
  50ed8e:	arpl   WORD PTR [bp+0x3e77],ax
  50ed93:	rcr    DWORD PTR [edi+edi*4+0x56c4394b],cl
  50ed9a:	(bad)  [ebp+0x17a8ec3a]
  50eda0:	lea    esi,[ebx]
  50eda2:	xchg   DWORD PTR [edi+ebp*1-0x61624ecc],eax
  50eda9:	jbe    0x50ed87
  50edab:	out    dx,al
  50edac:	retf   
  50edad:	jmp    0x50edec
  50edaf:	sub    cl,BYTE PTR [ecx]
  50edb1:	(bad)  
  50edb2:	in     al,0x15
  50edb4:	mov    ebx,eax
  50edb6:	test   eax,0xb9380c85
  50edbb:	push   edi
  50edbc:	inc    edx
  50edbd:	xchg   DWORD PTR ds:0xc9880d56,ebp
  50edc3:	nop
  50edc4:	xor    DWORD PTR [ebp+ebx*1-0xb],ebx
  50edc8:	sub    edx,0x4d06bdb5
  50edce:	adc    esp,DWORD PTR [edx]
  50edd0:	mov    dh,0xf6
  50edd2:	xchg   esi,eax
  50edd3:	cmp    ecx,DWORD PTR [eax-0x6f]
  50edd6:	inc    ebp
  50edd7:	xor    bh,dh
  50edd9:	lods   al,BYTE PTR ds:[esi]
  50edda:	push   edi
  50eddb:	mov    eax,ds:0xec2412ba
  50ede0:	retf   
  50ede1:	int    0x33
  50ede3:	out    0x26,al
  50ede5:	addr16 aaa 
  50ede7:	cmp    eax,0x1e27e65d
  50edec:	add    ecx,eax
  50edee:	fisttp DWORD PTR [ecx+0x3d]
  50edf1:	push   0xb8c57852
  50edf6:	sar    eax,0x8a
  50edf9:	addr16 inc edi
  50edfb:	pusha  
  50edfc:	je     0x50edb9
  50edfe:	jbe    0x50edfd
  50ee00:	mov    dl,0x7d
  50ee02:	mov    edx,0x6575dff
  50ee07:	cmp    ecx,esp
  50ee09:	icebp  
  50ee0a:	mov    ecx,0xfd4371af
  50ee0f:	scas   al,BYTE PTR es:[edi]
  50ee10:	jno    0x50ee7d
  50ee12:	inc    eax
  50ee13:	mov    al,BYTE PTR [esi]
  50ee15:	sub    BYTE PTR [eax+0x43d3d4b3],dh
  50ee1b:	pop    ebx
  50ee1c:	sub    dl,BYTE PTR [edi+0x11]
  50ee1f:	or     BYTE PTR [ebp-0x1fe0492f],al
  50ee25:	(bad)  
  50ee26:	jns    0x50ee98
  50ee28:	push   ebx
  50ee29:	or     bl,0xad
  50ee2c:	adc    BYTE PTR [edi],bl
  50ee2e:	test   eax,0xca87e77c
  50ee33:	xchg   edx,eax
  50ee35:	xor    BYTE PTR [ebx-0x29],dl
  50ee38:	pusha  
  50ee39:	push   edi
  50ee3a:	jae    0x50edc3
  50ee3c:	xlat   BYTE PTR ds:[ebx]
  50ee3d:	lods   al,BYTE PTR ds:[esi]
  50ee3e:	mul    BYTE PTR [ebx+0x2d]
  50ee41:	lock push eax
  50ee43:	jae    0x50ee6a
  50ee45:	mov    ch,0x2f
  50ee47:	ds cdq 
  50ee49:	sub    bl,dh
  50ee4b:	fwait
  50ee4c:	outs   dx,DWORD PTR ds:[esi]
  50ee4d:	int    0x7
  50ee4f:	mov    al,BYTE PTR [ecx-0x10f82f5a]
  50ee55:	xchg   esi,eax
  50ee56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50ee57:	pop    ecx
  50ee58:	sbb    DWORD PTR [edx-0x342bda0f],ebx
  50ee5e:	ret    
  50ee5f:	jmp    0x4e7466c1
  50ee64:	sbb    ah,BYTE PTR [esi-0x4e59633a]
  50ee6a:	fwait
  50ee6b:	jno    0x50ee1b
  50ee6d:	xchg   esi,eax
  50ee6e:	cld    
  50ee6f:	pop    ds
  50ee70:	pop    esi
  50ee71:	jns    0x50eec4
  50ee73:	mov    edi,0x3a925608
  50ee78:	xchg   esp,eax
  50ee79:	cmp    BYTE PTR [ebx+esi*4],al
  50ee7c:	jo     0x50ee00
  50ee7e:	lds    edi,FWORD PTR [ecx+0x3d]
  50ee81:	add    dl,cl
  50ee83:	pop    eax
  50ee84:	inc    edx
  50ee85:	fimul  DWORD PTR [ecx]
  50ee87:	inc    esp
  50ee88:	aad    0xf
  50ee8a:	xor    DWORD PTR [eax-0x7c],esp
  50ee8d:	xor    WORD PTR [edi],bp
  50ee90:	setl   BYTE PTR [edx]
  50ee93:	mov    ebp,0x96e50f2d
  50ee98:	(bad)  
  50ee99:	jl     0x50ef10
  50ee9b:	sbb    ah,BYTE PTR [ecx]
  50ee9d:	stos   DWORD PTR es:[edi],eax
  50ee9e:	shl    BYTE PTR [eax-0x26],0x68
  50eea2:	sub    eax,0x3a7af5d7
  50eea7:	sub    edx,DWORD PTR [ebx+0x5490c05a]
  50eead:	clc    
  50eeae:	xor    al,0xc9
  50eeb0:	dec    ebp
  50eeb1:	ss icebp 
  50eeb3:	adc    al,0xbf
  50eeb5:	xchg   edi,eax
  50eeb6:	(bad)  
  50eeb7:	(bad)  
  50eeb8:	retw   
  50eeba:	push   cs
  50eebb:	arpl   WORD PTR [edi+0x8],sp
  50eebe:	aaa    
  50eebf:	add    eax,0xc831f5be
  50eec4:	mov    WORD PTR ss:[eax+0x13],ss
  50eec8:	hlt    
  50eec9:	and    eax,0x330fb432
  50eece:	rcl    BYTE PTR [ebp-0x4d828f0f],0xf1
  50eed5:	mov    ah,0x1e
  50eed7:	jecxz  0x50ee80
  50eed9:	ret    0xddb6
  50eedc:	add    DWORD PTR ds:0xd71e5d5a,esp
  50eee2:	in     al,dx
  50eee3:	pop    esi
  50eee4:	nop
  50eee5:	push   esp
  50eee6:	adc    eax,0xb06424b5
  50eeeb:	mov    ds:0xf88e1e40,eax
  50eef0:	sub    BYTE PTR [eax],0x89
  50eef3:	xchg   ecx,eax
  50eef4:	aam    0xfa
  50eef6:	rol    DWORD PTR [ecx-0x3e],0x18
  50eefa:	iret   
  50eefb:	bound  esi,QWORD PTR [ebx]
  50eefd:	(bad)  
  50eefe:	cmp    BYTE PTR [edi+0x5b],dl
  50ef01:	push   ebx
  50ef02:	sbb    al,0xcd
  50ef04:	popa   
  50ef05:	js     0x50ef67
  50ef07:	pop    edi
  50ef08:	popa   
  50ef09:	popf   
  50ef0a:	sub    eax,0x8f09443c
  50ef0f:	sub    DWORD PTR [ebx-0x351a3a2d],0x443ac324
  50ef19:	or     al,BYTE PTR [esi+ebp*1-0x5b]
  50ef1d:	out    0x52,eax
  50ef1f:	inc    esi
  50ef20:	pop    eax
  50ef21:	(bad)
  50ef25:	or     eax,0xd9c800ef
  50ef2a:	les    ebx,FWORD PTR [ebx-0x54b0c0a9]
  50ef30:	test   al,0xe
  50ef32:	aad    0x9f
  50ef34:	imul   ebx,DWORD PTR [eax+ebx*2+0x7e],0xffffffc6
  50ef39:	or     ebp,DWORD PTR ds:0x5132edaa
  50ef3f:	out    dx,eax
  50ef40:	and    DWORD PTR [edi+0x4b],0x2d5fdbb9
  50ef47:	xor    BYTE PTR [eax+0x25],dl
  50ef4a:	mov    ecx,0xb9fecb88
  50ef4f:	bnd jp 0x50eeee
  50ef52:	inc    edx
  50ef53:	cs inc ebx
  50ef55:	in     eax,0xc4
  50ef57:	sahf   
  50ef58:	push   0xbf08c104
  50ef5d:	inc    ecx
  50ef5e:	js     0x50efb5
  50ef60:	cmp    BYTE PTR [eax-0x60],cl
  50ef63:	sbb    bh,BYTE PTR [ecx+0x64]
  50ef66:	xchg   edi,eax
  50ef67:	mov    eax,0x1bc18828
  50ef6c:	cmc    
  50ef6d:	mov    eax,ds:0x693056f5
  50ef72:	fsub   DWORD PTR [eax]
  50ef74:	pop    eax
  50ef75:	cmp    BYTE PTR [ebp-0x1a57d5c1],dl
  50ef7b:	(bad)  
  50ef7c:	sbb    DWORD PTR [edx+eax*1],ecx
  50ef7f:	lock fst DWORD PTR [edi-0x43]
  50ef83:	ficomp DWORD PTR [eax-0x42]
  50ef86:	and    eax,0x9094a27e
  50ef8b:	add    edx,DWORD PTR [edi]
  50ef8d:	dec    esi
  50ef8e:	jno    0x50ef1d
  50ef90:	dec    esp
  50ef91:	leave  
  50ef92:	cmp    al,0xe7
  50ef94:	mov    ebp,0xca2540c6
  50ef99:	add    DWORD PTR [esi],esp
  50ef9b:	jb     0x50efe7
  50ef9d:	push   0xffffff96
  50ef9f:	lea    ebx,[ebx+eiz*4-0x7f25e6]
  50efa6:	cdq    
  50efa7:	mov    ch,0x5c
  50efa9:	jnp    0x50efa9
  50efab:	or     al,0x54
  50efad:	xchg   BYTE PTR [ebx-0x11311295],cl
  50efb3:	icebp  
  50efb4:	mov    dh,0x38
  50efb6:	dec    BYTE PTR [eax]
  50efb8:	call   0x682c:0x3ba45ca2
  50efbf:	out    dx,eax
  50efc0:	or     DWORD PTR [ecx+eiz*2],ebp
  50efc3:	loopne 0x50f043
  50efc5:	or     DWORD PTR [eax],eax
  50efc7:	or     ebx,esp
  50efc9:	adc    eax,0xfdccd142
  50efce:	std    
  50efcf:	ret    
  50efd0:	jnp    0x50f003
  50efd2:	xor    edi,DWORD PTR [ebx-0x45]
  50efd5:	inc    edx
  50efd6:	jmp    0xdd807730
  50efdb:	jecxz  0x50ef98
  50efdd:	xchg   al,ch
  50efdf:	arpl   WORD PTR [ebx+ebp*8-0x79],cx
  50efe3:	repz jbe 0x50efa1
  50efe6:	bound  edx,QWORD PTR [ebp+ebx*8+0x15]
  50efea:	mov    ecx,?
  50efec:	mov    gs,eax
  50efee:	fcomp  QWORD PTR [bp+di]
  50eff1:	scas   eax,DWORD PTR es:[edi]
  50eff2:	outs   dx,DWORD PTR ds:[esi]
  50eff3:	mov    ch,0xab
  50eff5:	ret    
  50eff6:	mov    eax,ds:0x1fefb92d
  50effb:	jns    0x50efaa
  50effd:	inc    esi
  50effe:	jbe    0x50f050
  50f000:	sub    BYTE PTR [ebp+0x667c05c0],bl
  50f006:	mov    BYTE PTR [edx-0x175eb90c],cl
  50f00c:	jbe    0x50f089
  50f00e:	sbb    al,0x96
  50f010:	mov    dh,0x1c
  50f012:	call   0xcea6b03a
  50f017:	sbb    al,0xc7
  50f019:	in     al,0x34
  50f01b:	retf   
  50f01c:	int3   
  50f01d:	jmp    0xa462d43
  50f022:	adc    BYTE PTR ds:0x56525f74,dl
  50f028:	mov    ebx,0x3606a3ce
  50f02d:	sub    esp,DWORD PTR [ecx-0x6d]
  50f030:	mov    eax,0x62e8ac08
  50f035:	out    0x7c,al
  50f037:	push   0xdb3f8aad
  50f03c:	xchg   ecx,eax
  50f03d:	push   0x72
  50f03f:	add    eax,0xb067616e
  50f044:	std    
  50f045:	sbb    DWORD PTR [ebx+0x5d],eax
  50f048:	cmp    BYTE PTR [edi],0x7
  50f04b:	std    
  50f04c:	inc    ebp
  50f04d:	inc    eax
  50f04e:	icebp  
  50f04f:	call   0xd9dbfced
  50f054:	icebp  
  50f055:	xor    BYTE PTR [esi+0x1e],0x2d
  50f059:	fimul  DWORD PTR [esi]
  50f05b:	pop    eax
  50f05c:	js     0x50f03c
  50f05e:	loop   0x50f073
  50f060:	sub    al,0x87
  50f062:	inc    edi
  50f063:	mov    al,cl
  50f065:	jle    0x50effd
  50f067:	dec    eax
  50f068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f069:	xor    esi,DWORD PTR [ecx]
  50f06b:	dec    esp
  50f06c:	push   0x9728c11e
  50f071:	sti    
  50f072:	xchg   cl,cl
  50f074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f075:	push   esi
  50f076:	loopne 0x50effc
  50f078:	add    eax,0x17de390c
  50f07d:	das    
  50f07e:	push   eax
  50f07f:	retf   
  50f080:	test   al,0x92
  50f082:	int3   
  50f083:	jmp    0x50f040
  50f085:	sbb    eax,0x3106d80d
  50f08a:	bound  esp,QWORD PTR [ebp+0x37cefb96]
  50f090:	mov    ebx,0x50c8964
  50f095:	cli    
  50f096:	test   eax,0xe740dc8f
  50f09b:	mov    ch,0xa9
  50f09e:	sar    DWORD PTR [ebp+edi*2-0x74],0xb7
  50f0a3:	cmp    al,0x35
  50f0a5:	adc    BYTE PTR [esi-0xff70d4c],cl
  50f0ab:	xchg   ecx,eax
  50f0ac:	repnz repz addr16 or eax,0x65843d4a
  50f0b4:	push   esp
  50f0b5:	and    ebx,DWORD PTR es:[esp+eax*4-0x401c51f8]
  50f0bd:	outs   dx,BYTE PTR ds:[esi]
  50f0be:	in     eax,0x10
  50f0c0:	inc    esp
  50f0c1:	fild   WORD PTR [eax+0x1fa75c3]
  50f0c7:	jge    0x50f0a1
  50f0c9:	dec    ecx
  50f0ca:	into   
  50f0cb:	mov    edx,0xc12d4a22
  50f0d0:	fcomp  st(7)
  50f0d2:	jb     0x50f13a
  50f0d4:	aaa    
  50f0d5:	mov    es,WORD PTR [esi-0x5a]
  50f0d8:	loop   0x50f08f
  50f0da:	loopne 0x50f0d5
  50f0dc:	mov    gs,WORD PTR [ebx-0x37]
  50f0df:	fwait
  50f0e0:	add    al,ch
  50f0e2:	mov    bh,0x5b
  50f0e4:	neg    BYTE PTR [edi]
  50f0e6:	fadd   QWORD PTR [ecx]
  50f0e8:	aas    
  50f0e9:	out    dx,al
  50f0ea:	mov    BYTE PTR ss:[esi],bl
  50f0ed:	test   al,0x39
  50f0ef:	and    ch,BYTE PTR [ebp+0x23e3c0c9]
  50f0f5:	stos   DWORD PTR es:[edi],eax
  50f0f6:	jnp    0x50f0da
  50f0f8:	or     al,dl
  50f0fa:	mov    bh,0xa0
  50f0fc:	cs pop eax
  50f0fe:	test   BYTE PTR [ecx],dl
  50f100:	adc    ebp,DWORD PTR ds:0x5dcf0264
  50f106:	dec    edx
  50f107:	fs push ss
  50f109:	jg     0x50f11b
  50f10b:	scas   eax,DWORD PTR es:[edi]
  50f10c:	sbb    BYTE PTR [edx],ah
  50f10e:	aaa    
  50f10f:	fcmove st,st(6)
  50f111:	mov    edi,DWORD PTR [edx-0x2340d829]
  50f117:	inc    edx
  50f118:	push   esp
  50f119:	neg    BYTE PTR [ebp-0x5025e3fc]
  50f11f:	and    ebp,DWORD PTR [eax]
  50f121:	and    ebx,DWORD PTR [ebx]
  50f123:	sbb    bh,BYTE PTR [ebx-0x17]
  50f126:	sbb    al,0x53
  50f128:	dec    eax
  50f129:	cmp    eax,0x2171d9e1
  50f12e:	xchg   ebp,eax
  50f12f:	dec    ebx
  50f130:	lds    edi,FWORD PTR [edx]
  50f132:	sbb    bh,bh
  50f134:	adc    eax,0x8597a1e1
  50f139:	sti    
  50f13a:	xchg   edi,eax
  50f13b:	dec    esp
  50f13c:	xor    ebp,DWORD PTR [esi-0x1f9c466e]
  50f142:	adc    eax,0x679b82b9
  50f147:	sub    al,0x8d
  50f149:	mov    ds:0x450bd4ba,al
  50f14e:	mov    ah,0xfa
  50f150:	cdq    
  50f151:	jne    0x50f0f6
  50f153:	xor    esi,DWORD PTR [edx-0x6ed37c73]
  50f159:	pop    ebp
  50f15a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f15b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f15d:	sbb    DWORD PTR [ebp-0x2de1a8ff],ebp
  50f163:	mov    edx,0x2960c19b
  50f168:	cmp    BYTE PTR [ebx+ebx*8],0x3b
  50f16c:	adc    BYTE PTR [esi],cl
  50f16e:	or     DWORD PTR [ebx+0x41],esp
  50f171:	aaa    
  50f172:	stos   DWORD PTR es:[edi],eax
  50f173:	jne    0x50f178
  50f175:	adc    esp,DWORD PTR [ebp-0x2dc55ac9]
  50f17b:	sub    eax,0x784d0a59
  50f180:	inc    esi
  50f181:	sub    eax,0x1d2a6659
  50f186:	xchg   edx,eax
  50f187:	sbb    eax,0x4c81cc39
  50f18c:	arpl   WORD PTR [edi-0x81696e3],dx
  50f192:	sub    ebp,DWORD PTR [edx+0x5c]
  50f195:	lea    edx,[edi+0x5cc512a1]
  50f19b:	mov    eax,ds:0xf4f4443b
  50f1a0:	lds    ecx,FWORD PTR [edi-0x27d4b2e9]
  50f1a6:	jge    0x50f12c
  50f1a8:	sbb    edi,DWORD PTR [ecx]
  50f1aa:	test   al,0x52
  50f1ac:	xor    cl,BYTE PTR [edi+0x9]
  50f1af:	pop    ss
  50f1b0:	push   ecx
  50f1b1:	jo     0x50f1a1
  50f1b3:	cmp    al,0xc9
  50f1b5:	mov    eax,0x26497891
  50f1ba:	pop    edx
  50f1bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f1bc:	repnz and eax,0xff102a5b
  50f1c2:	fld    QWORD PTR [ecx-0x54]
  50f1c5:	add    al,bh
  50f1c7:	xchg   ecx,eax
  50f1c8:	mov    ds:0xb1829de0,eax
  50f1cd:	xor    BYTE PTR [eax-0x6171da2f],dl
  50f1d3:	imul   esp,DWORD PTR [ebp+0x6d4e53eb],0x2b7ebb1e
  50f1dd:	mov    dh,0x8f
  50f1df:	aaa    
  50f1e0:	dec    ecx
  50f1e1:	sub    esp,ebp
  50f1e3:	mov    gs,WORD PTR [esi+0x59]
  50f1e6:	out    dx,eax
  50f1e7:	ficomp DWORD PTR [esi]
  50f1e9:	icebp  
  50f1ea:	adc    dl,dl
  50f1ec:	(bad)  
  50f1ed:	sahf   
  50f1ee:	mov    esp,esp
  50f1f0:	test   BYTE PTR [ecx+0x51],dl
  50f1f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f1f4:	jmp    0xa8fb:0x61826a98
  50f1fb:	cmp    DWORD PTR [eax],edi
  50f1fd:	inc    edi
  50f1fe:	mov    ebx,0xa87f6aa4
  50f203:	xchg   ecx,eax
  50f204:	push   cs
  50f205:	lods   eax,DWORD PTR ds:[esi]
  50f206:	inc    ecx
  50f207:	or     DWORD PTR [esi],esi
  50f209:	leave  
  50f20a:	imul   edx,DWORD PTR [ecx],0x830f8a4a
  50f210:	rcl    DWORD PTR [edx],1
  50f212:	sbb    BYTE PTR [eax],ah
  50f214:	cld    
  50f215:	adc    dl,BYTE PTR [ebx]
  50f217:	loopne 0x50f231
  50f219:	aad    0xf0
  50f21b:	(bad)  
  50f21c:	sti    
  50f21d:	sub    edx,DWORD PTR [edx-0x55421e79]
  50f223:	sub    eax,0x3ab863e9
  50f228:	sbb    cl,0x44
  50f22b:	adc    edx,edx
  50f22d:	mov    eax,DWORD PTR [edx+0x52]
  50f230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f231:	mov    eax,0xb2e51b37
  50f236:	jecxz  0x50f20e
  50f238:	or     al,0x61
  50f23a:	mov    BYTE PTR [eax],ah
  50f23c:	sbb    al,0xcf
  50f23e:	fistp  QWORD PTR [ecx+ebx*2+0x13eb976]
  50f245:	fwait
  50f246:	mov    ebp,DWORD PTR [ecx+0x71331eb5]
  50f24c:	or     eax,DWORD PTR [ecx]
  50f24e:	xor    eax,0xeff5caf1
  50f253:	cmp    BYTE PTR [edx],bh
  50f255:	pop    edx
  50f256:	or     eax,0x57a26d5a
  50f25b:	shr    DWORD PTR [edx+0x18],0x13
  50f25f:	adc    eax,0x98c95bdb
  50f264:	fs mov bh,0xdb
  50f267:	int3   
  50f268:	(bad)  
  50f26a:	mov    ch,0x52
  50f26c:	retf   0xe5e8
  50f26f:	call   0x2726:0xcb520ee1
  50f276:	or     eax,0xaa06c0f6
  50f27b:	sub    eax,0x683aadd0
  50f280:	jg     0x50f2bf
  50f282:	mov    edi,0x6fdf2c0f
  50f287:	xor    DWORD PTR [esi-0x50],0xa49046ba
  50f28e:	inc    edx
  50f28f:	icebp  
  50f290:	shl    ebp,1
  50f292:	jnp    0x50f275
  50f294:	mov    ds,WORD PTR [edi-0x4123d91a]
  50f29a:	or     DWORD PTR [eax+0x4e50ebfa],edi
  50f2a0:	cld    
  50f2a1:	ds cs mov eax,0x904c2196
  50f2a8:	push   ecx
  50f2a9:	jmp    0x3dfe79ef
  50f2ae:	mov    ebp,0x39f53424
  50f2b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f2b4:	outs   dx,BYTE PTR ds:[esi]
  50f2b5:	addr16 xchg edx,eax
  50f2b7:	jne    0x50f2e7
  50f2b9:	pop    es
  50f2ba:	fxch   st(3)
  50f2bc:	xlat   BYTE PTR ds:[ebx]
  50f2bd:	dec    ebx
  50f2be:	jmp    0x50f30b
  50f2c0:	cmp    al,0xe6
  50f2c2:	mov    edx,0xdd30fc8c
  50f2c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f2c8:	in     al,dx
  50f2c9:	cmc    
  50f2ca:	xor    bh,BYTE PTR [ebx]
  50f2cc:	and    edx,edi
  50f2ce:	aas    
  50f2cf:	sbb    BYTE PTR [eax+0x3f0cf35b],al
  50f2d5:	xchg   ecx,eax
  50f2d6:	call   FWORD PTR [edx]
  50f2d8:	push   0x8041b7de
  50f2dd:	(bad)  
  50f2de:	in     eax,0xb8
  50f2e0:	jae    0x50f30d
  50f2e2:	stos   BYTE PTR es:[edi],al
  50f2e3:	sahf   
  50f2e4:	ds xchg ebx,eax
  50f2e6:	jmp    0x50f329
  50f2e8:	imul   edi,DWORD PTR ds:0x7000881e,0xffffffde
  50f2ef:	inc    eax
  50f2f0:	mov    WORD PTR [esi-0x7e],fs
  50f2f3:	xor    ebx,ebp
  50f2f5:	push   ecx
  50f2f6:	pop    esi
  50f2f7:	push   0xcb68cad0
  50f2fc:	lods   al,BYTE PTR ds:[esi]
  50f2fd:	fisub  WORD PTR [esi+eiz*4+0x69fb28df]
  50f304:	into   
  50f305:	cmp    dl,ch
  50f307:	pop    edx
  50f308:	(bad)  
  50f309:	fisttp QWORD PTR [eax+0x28]
  50f30c:	cs loopne 0x50f2b7
  50f30f:	mov    cl,0x2d
  50f311:	jbe    0x50f352
  50f313:	xchg   edi,eax
  50f314:	(bad)  
  50f315:	gs push es
  50f317:	sub    ecx,DWORD PTR [edi+0x71]
  50f31a:	mov    ds,ecx
  50f31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f31d:	inc    edx
  50f31e:	jge    0x50f321
  50f320:	icebp  
  50f321:	(bad)  
  50f322:	retf   0xe971
  50f325:	and    eax,0xf9ba3292
  50f32a:	jbe    0x50f34d
  50f32c:	add    eax,0xdc3da1a4
  50f331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f332:	mov    al,ds:0xd2e243f0
  50f337:	add    dx,WORD PTR [ebx]
  50f33a:	and    BYTE PTR [edi+0x4e],0x18
  50f33e:	ins    DWORD PTR es:[edi],dx
  50f33f:	and    eax,0xac8cdb3
  50f344:	in     al,0x3b
  50f346:	mov    ecx,0x84648550
  50f34b:	add    ecx,ecx
  50f34d:	fidivr DWORD PTR [esi-0x7c]
  50f350:	(bad)  
  50f352:	adc    edx,eax
  50f354:	test   DWORD PTR [ecx-0x69],ecx
  50f357:	push   0xffffffb1
  50f359:	mov    ebx,DWORD PTR [ebx]
  50f35b:	sub    ah,BYTE PTR [edi+0x3e]
  50f35e:	xchg   ah,dh
  50f360:	imul   edx,DWORD PTR [ebx],0xc54ae8ae
  50f366:	stos   DWORD PTR es:[edi],eax
  50f367:	mov    ch,BYTE PTR [edx+0x15]
  50f36a:	out    dx,al
  50f36b:	popa   
  50f36c:	test   DWORD PTR [ebx-0x656c4e6],ebp
  50f372:	xchg   esp,eax
  50f373:	sbb    DWORD PTR [esi+eiz*1+0x7e],ebp
  50f377:	pop    ebx
  50f378:	inc    ebx
  50f379:	or     al,0x5b
  50f37b:	dec    ecx
  50f37c:	mov    ds:0x601eb16b,eax
  50f381:	adc    ebp,DWORD PTR [edi+0x69]
  50f384:	xor    DWORD PTR [ebx+0x416a248b],0xffffffaf
  50f38b:	bound  edi,QWORD PTR [edi-0x753f5e56]
  50f391:	jecxz  0x50f3fb
  50f393:	dec    esi
  50f394:	jg     0x50f364
  50f396:	and    BYTE PTR [esi+0x2],bh
  50f399:	pop    ss
  50f39a:	sbb    eax,0x9d123c6
  50f39f:	cmp    BYTE PTR [esi+0x40c9081c],dh
  50f3a5:	jae    0x50f378
  50f3a7:	sub    bh,BYTE PTR [edx+esi*1-0x3940e1ab]
  50f3ae:	aaa    
  50f3af:	mov    edx,0x4ca3ddfa
  50f3b4:	ss mov ebx,0x27aeb8ec
  50f3ba:	cli    
  50f3bb:	sub    BYTE PTR cs:[edi],dl
  50f3be:	xor    ebp,DWORD PTR [edx-0x46]
  50f3c1:	out    dx,al
  50f3c2:	sahf   
  50f3c3:	lds    ebp,FWORD PTR [ebx+0x1e184ff1]
  50f3c9:	mov    ebp,0xeb5b30e1
  50f3ce:	dec    ecx
  50f3cf:	out    0xd8,al
  50f3d1:	jmp    0xb3427697
  50f3d6:	(bad)  [edx-0x510de349]
  50f3dc:	mov    ch,0xb5
  50f3de:	pop    ecx
  50f3df:	sbb    DWORD PTR [eax+0x45],ebp
  50f3e2:	xchg   esi,eax
  50f3e3:	fsubr  QWORD PTR [ebx+0x7d]
  50f3e6:	push   es
  50f3e7:	mov    ecx,0xdd3341d2
  50f3ec:	or     BYTE PTR [eax],cl
  50f3ee:	add    BYTE PTR [ebx],ch
  50f3f0:	ins    BYTE PTR es:[edi],dx
  50f3f1:	and    DWORD PTR [ebp+0x6b2756cd],esi
  50f3f7:	pop    esi
  50f3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f3f9:	hlt    
  50f3fa:	scas   eax,DWORD PTR es:[edi]
  50f3fb:	push   esp
  50f3fc:	sbb    eax,0xfadd8bb6
  50f401:	push   0xffffffcf
  50f403:	repz push edx
  50f405:	gs or  bl,ch
  50f408:	nop
  50f409:	and    dl,BYTE PTR [eax]
  50f40b:	push   ds
  50f40c:	aam    0x7a
  50f40e:	cld    
  50f40f:	dec    esi
  50f410:	jmp    0x7c14:0xed635d4a
  50f417:	mov    dl,0x4c
  50f419:	das    
  50f41a:	mov    ah,0xc2
  50f41c:	adc    DWORD PTR [edi+ebp*4+0x0],esp
  50f420:	jnp    0x50f3d2
  50f422:	cmp    DWORD PTR [edi-0x3f],ebx
  50f425:	push   0x28
  50f427:	inc    eax
  50f428:	(bad)  
  50f429:	jo     0x50f4a4
  50f42b:	dec    ecx
  50f42c:	rcl    DWORD PTR [ecx],1
  50f42e:	cmc    
  50f42f:	rcr    eax,0x59
  50f432:	or     eax,0x4395faf0
  50f437:	js     0x50f415
  50f439:	dec    ecx
  50f43a:	popa   
  50f43b:	setae  bl
  50f43e:	mov    bh,0xc5
  50f440:	sbb    bh,bh
  50f442:	add    edi,DWORD PTR [eax+0x11]
  50f445:	imul   esp,DWORD PTR [edi+0x458b85f9],0x86c1ade5
  50f44f:	xor    eax,0xb2b89d46
  50f454:	pusha  
  50f455:	mov    cl,0x6f
  50f457:	adc    ah,0xd5
  50f45a:	std    
  50f45b:	xor    BYTE PTR [edi+0x55],dl
  50f45e:	iret   
  50f45f:	test   DWORD PTR [edx+0x69],esi
  50f462:	inc    ecx
  50f463:	mov    edi,0xf0fcaeee
  50f468:	inc    ebx
  50f469:	pop    eax
  50f46a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f46b:	jmp    0xe3ad680d
  50f470:	data16 mov WORD PTR [edx+0xb],gs
  50f474:	clc    
  50f475:	xor    al,0x63
  50f477:	(bad)  
  50f479:	mov    ah,0xc5
  50f47b:	mov    esp,cs
  50f47d:	inc    esp
  50f47e:	adc    bl,BYTE PTR [edi-0x172c0a36]
  50f484:	jle    0x50f40b
  50f486:	inc    ebx
  50f487:	retf   0x33ed
  50f48a:	ret    0x5ebc
  50f48d:	or     eax,0x766acf02
  50f492:	jnp    0x50f43e
  50f494:	sysenter 
  50f496:	jp     0x50f43a
  50f498:	and    BYTE PTR [edi+0x5456e013],bl
  50f49e:	cmp    bl,BYTE PTR [ecx-0x6]
  50f4a1:	mov    edi,0x2f52e32f
  50f4a6:	dec    edx
  50f4a7:	inc    esi
  50f4a8:	scas   al,BYTE PTR es:[edi]
  50f4a9:	xchg   esi,eax
  50f4aa:	loopne 0x50f48f
  50f4ac:	dec    eax
  50f4ad:	pop    ebx
  50f4ae:	das    
  50f4af:	test   BYTE PTR [esi-0x4b],al
  50f4b2:	inc    ebx
  50f4b3:	fwait
  50f4b4:	stos   DWORD PTR es:[edi],eax
  50f4b5:	mov    ah,0xe9
  50f4b7:	pop    ss
  50f4b8:	ins    DWORD PTR es:[edi],dx
  50f4b9:	repnz pop edx
  50f4bb:	mov    ah,0x69
  50f4bd:	lock cmc 
  50f4bf:	adc    al,0xbe
  50f4c1:	shl    BYTE PTR [ebp+0x1f],1
  50f4c4:	mov    ds:0x156ccd34,eax
  50f4c9:	outs   dx,DWORD PTR ds:[esi]
  50f4ca:	adc    ebp,edx
  50f4cc:	mov    fs,WORD PTR [ebx+0x39]
  50f4cf:	pushf  
  50f4d0:	rcr    BYTE PTR [ebp-0x3c02ad84],0xee
  50f4d7:	jnp    0x50f478
  50f4d9:	adc    DWORD PTR [ebx-0x1b47d5b5],ebx
  50f4df:	mov    al,0xc7
  50f4e1:	dec    esi
  50f4e2:	push   ecx
  50f4e3:	ins    DWORD PTR es:[edi],dx
  50f4e4:	jecxz  0x50f529
  50f4e6:	ds push ds
  50f4e8:	sbb    ecx,DWORD PTR [edx+0x7095f389]
  50f4ee:	std    
  50f4ef:	add    ah,al
  50f4f1:	lods   eax,DWORD PTR ds:[esi]
  50f4f2:	pop    esi
  50f4f3:	and    bl,BYTE PTR [ecx]
  50f4f5:	stc    
  50f4f6:	dec    ebp
  50f4f7:	jmp    0x50f4d3
  50f4f9:	data16 icebp 
  50f4fb:	call   0x14753c24
  50f500:	mov    al,0x5a
  50f502:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  50f504:	dec    ebx
  50f505:	inc    ebp
  50f506:	(bad)  
  50f507:	push   ecx
  50f508:	lods   eax,DWORD PTR ds:[esi]
  50f509:	jne    0x50f49e
  50f50b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f50c:	enter  0x4b13,0x6
  50f510:	or     esi,0x7a910c22
  50f516:	xor    edi,0xffffff83
  50f519:	cld    
  50f51a:	pop    esi
  50f51b:	sbb    esp,DWORD PTR [ecx-0x30]
  50f51e:	vcvtss2sd xmm3,xmm7,xmm6
  50f522:	push   esp
  50f523:	adc    al,0x91
  50f525:	sub    al,0xb2
  50f527:	mov    ebx,0xd29e1bbc
  50f52c:	jnp    0x50f575
  50f52e:	xchg   ebx,eax
  50f52f:	daa    
  50f530:	pop    edx
  50f531:	sbb    ah,BYTE PTR [esi]
  50f533:	sub    esp,DWORD PTR [edx]
  50f535:	push   esp
  50f536:	lahf   
  50f537:	mov    ebx,0x1e43676e
  50f53c:	dec    edi
  50f53d:	pop    eax
  50f53e:	enter  0xb5f6,0x1a
  50f542:	cmp    BYTE PTR ds:0x9d1a728a,ch
  50f548:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f549:	and    eax,0xb92793a6
  50f54e:	(bad)  
  50f54f:	jle    0x50f507
  50f551:	int    0xd
  50f553:	fiadd  DWORD PTR [ebx+edi*4]
  50f556:	retf   
  50f557:	loope  0x50f56f
  50f559:	push   esi
  50f55a:	aad    0xe6
  50f55c:	cmp    eax,0xde01542e
  50f561:	pop    edx
  50f562:	sbb    DWORD PTR [eax-0x3d],ebx
  50f565:	sbb    dl,dh
  50f567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f568:	pop    ebx
  50f569:	sbb    al,0x91
  50f56b:	mov    esp,0xcc248e05
  50f570:	lods   eax,DWORD PTR ds:[esi]
  50f571:	pop    esp
  50f572:	not    BYTE PTR [edx+0x53293a69]
  50f578:	mov    bl,0xa0
  50f57a:	xchg   BYTE PTR [edx-0x37477978],ch
  50f580:	daa    
  50f581:	adc    eax,0x45fc089e
  50f586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f587:	xor    DWORD PTR [edi+esi*4],ebx
  50f58a:	and    BYTE PTR [edi+0x61],0x94
  50f58e:	imul   eax,DWORD PTR [esi],0x9ab01c02
  50f594:	clc    
  50f595:	cmp    bh,ch
  50f597:	sub    bl,dl
  50f599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f59a:	lods   eax,DWORD PTR ds:[esi]
  50f59b:	cli    
  50f59c:	push   ds
  50f59d:	mov    eax,0xaa0d5768
  50f5a2:	fimul  WORD PTR [esi+0x5f]
  50f5a5:	shl    ebp,cl
  50f5a7:	cli    
  50f5a8:	xchg   edi,eax
  50f5a9:	inc    edx
  50f5aa:	mov    eax,0xf219bdf2
  50f5af:	mov    bl,0x9f
  50f5b1:	nop
  50f5b2:	dec    ebx
  50f5b3:	pop    ebp
  50f5b4:	pop    ss
  50f5b5:	xchg   BYTE PTR [edi+0x12151cca],bh
  50f5bb:	push   edx
  50f5bc:	push   ebp
  50f5bd:	je     0x50f570
  50f5bf:	push   cs
  50f5c0:	dec    ebx
  50f5c1:	dec    edx
  50f5c2:	cmp    DWORD PTR [esi+edi*1+0x50],0x36
  50f5c7:	mov    al,0xde
  50f5c9:	sub    ah,bl
  50f5cb:	xlat   BYTE PTR ds:[ebx]
  50f5cc:	sti    
  50f5cd:	out    dx,eax
  50f5ce:	das    
  50f5cf:	ficomp WORD PTR [edx]
  50f5d1:	out    0x7b,al
  50f5d3:	mov    DWORD PTR ds:0x21e4555d,esi
  50f5d9:	test   BYTE PTR [edx-0x18854228],0x4f
  50f5e0:	xchg   ebx,eax
  50f5e1:	out    0x8f,eax
  50f5e3:	sbb    al,0x65
  50f5e5:	push   ds
  50f5e6:	inc    ecx
  50f5e7:	sub    esi,DWORD PTR [ebx]
  50f5e9:	fsubr  QWORD PTR [edi-0x31]
  50f5ec:	fs popf 
  50f5ee:	int    0x36
  50f5f0:	mov    edi,0xb6d4db2d
  50f5f5:	fcmovnu st,st(2)
  50f5f7:	push   esi
  50f5f8:	mov    ebx,0xb10e8904
  50f5fd:	mov    eax,ds:0x26a0a2c4
  50f602:	outs   dx,DWORD PTR ds:[esi]
  50f603:	jae    0x50f5b5
  50f605:	push   ds
  50f606:	mov    dl,0x4d
  50f608:	mov    BYTE PTR [eax+edi*2-0x3e31662c],bh
  50f60f:	xchg   ebx,eax
  50f610:	cmp    eax,0x382b34c2
  50f615:	ss jl  0x50f598
  50f618:	repnz (bad) 
  50f61a:	fist   WORD PTR [eax+0x5b7dca90]
  50f620:	dec    eax
  50f621:	sar    BYTE PTR [eax+0x42ab92],0x7c
  50f628:	xchg   esp,eax
  50f629:	es out 0x97,eax
  50f62c:	popa   
  50f62d:	mov    ecx,0x8a0cda45
  50f632:	into   
  50f633:	sahf   
  50f634:	jns    0x50f63b
  50f636:	xchg   bh,ch
  50f638:	dec    eax
  50f639:	pop    es
  50f63a:	outs   dx,BYTE PTR ds:[esi]
  50f63b:	clc    
  50f63c:	leave  
  50f63d:	jno    0x50f5ea
  50f63f:	neg    BYTE PTR [edi]
  50f641:	mov    ds:0x4754685,eax
  50f646:	(bad)  
  50f647:	cmp    bl,bl
  50f649:	add    dl,BYTE PTR [ebx]
  50f64b:	lea    eax,[ecx]
  50f64d:	iret   
  50f64e:	ficom  DWORD PTR [ebx+eax*2-0x5b]
  50f652:	fadd   DWORD PTR [ebx+0x73]
  50f655:	mov    BYTE PTR [ebx+ebp*4+0x73],ch
  50f659:	ja     0x50f602
  50f65b:	call   0x21518e0e
  50f660:	or     BYTE PTR [edx+0x3b],al
  50f663:	jp     0x50f6bd
  50f665:	add    al,0x5e
  50f667:	push   eax
  50f668:	cmp    DWORD PTR [edx+0x5f8cc90d],edi
  50f66e:	test   DWORD PTR [eax-0xc],0xd61a89c4
  50f675:	push   esp
  50f676:	xor    edx,DWORD PTR [edi+ebp*1+0x43]
  50f67a:	push   es
  50f67b:	stos   BYTE PTR es:[edi],al
  50f67c:	pop    ss
  50f67d:	jo     0x50f618
  50f67f:	or     eax,edi
  50f681:	or     eax,0x227caf14
  50f686:	rcr    DWORD PTR [eax+0x7d],1
  50f689:	mov    WORD PTR [ebx+0x65],cs
  50f68c:	test   DWORD PTR [ecx-0x39],edx
  50f68f:	fcom   QWORD PTR [edx+0x6d]
  50f692:	(bad)  
  50f694:	mul    DWORD PTR [esi+0x7cba0d0a]
  50f69a:	sbb    dl,BYTE PTR [esi+0x3024875f]
  50f6a0:	push   ds
  50f6a1:	sub    al,BYTE PTR [eax+0x45280c6b]
  50f6a7:	sbb    esp,edx
  50f6a9:	int3   
  50f6aa:	dec    ebx
  50f6ab:	cli    
  50f6ac:	cmp    al,0x86
  50f6ae:	aam    0x19
  50f6b0:	mov    bh,0x76
  50f6b2:	add    al,0xe7
  50f6b4:	repz ror BYTE PTR [eax],cl
  50f6b7:	mov    ch,0x81
  50f6b9:	sar    al,1
  50f6bb:	faddp  st(3),st
  50f6bd:	nop
  50f6be:	pop    ss
  50f6bf:	inc    edx
  50f6c0:	sbb    ecx,DWORD PTR [ebp+ebx*4-0x62f18357]
  50f6c7:	jnp    0x50f6d7
  50f6c9:	mov    al,ds:0xb3cc5b51
  50f6ce:	aam    0x33
  50f6d0:	jns    0x50f69a
  50f6d2:	sbb    eax,0x2d4c2f19
  50f6d7:	cmp    DWORD PTR [esi-0x6c137367],ecx
  50f6dd:	stc    
  50f6de:	aaa    
  50f6df:	jo     0x50f6e2
  50f6e1:	dec    ebx
  50f6e2:	fs add eax,0x8e1adf06
  50f6e8:	popa   
  50f6e9:	repz and eax,0xf3745061
  50f6ef:	repz adc al,0x0
  50f6f2:	add    eax,DWORD PTR [eax+0x6e7a14fb]
  50f6f8:	test   al,0x36
  50f6fa:	js     0x50f6c6
  50f6fc:	push   ecx
  50f6fd:	cmp    DWORD PTR [ecx+edi*1+0x7d],ebp
  50f701:	sti    
  50f702:	add    DWORD PTR [ebx+0x7fed12ef],edi
  50f708:	dec    ecx
  50f709:	mov    al,0x82
  50f70b:	sbb    ecx,DWORD PTR [edx]
  50f70d:	xchg   edi,eax
  50f70e:	jmp    0xa97090e8
  50f713:	icebp  
  50f714:	bound  esp,QWORD PTR [esi-0x2e9d4b58]
  50f71a:	ret    
  50f71b:	dec    edx
  50f71c:	test   BYTE PTR [ecx-0xc],0xdc
  50f720:	and    esp,DWORD PTR [ecx]
  50f722:	cdq    
  50f723:	sar    DWORD PTR [ecx-0x430d5005],cl
  50f729:	fdiv   st(5),st
  50f72b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f72d:	mov    edi,0x1d048bcc
  50f732:	push   ds
  50f733:	mov    DWORD PTR [edi+0x5a],esp
  50f736:	aad    0xc3
  50f738:	add    DWORD PTR [ecx],0x82846979
  50f73e:	and    esi,eax
  50f740:	test   bh,ah
  50f742:	lods   eax,DWORD PTR ds:[esi]
  50f743:	lea    edi,[ecx-0x6aae6e7f]
  50f749:	sub    bl,BYTE PTR ds:0x3a570fa4
  50f74f:	(bad)  
  50f750:	jo     0x50f723
  50f752:	jbe    0x50f76b
  50f754:	int3   
  50f755:	inc    ebx
  50f756:	ficomp WORD PTR [ecx+0x34]
  50f759:	mov    ds:0x4baf1dfe,eax
  50f75e:	aam    0xa
  50f760:	je     0x50f703
  50f762:	mov    bl,0x5
  50f764:	pop    ss
  50f765:	pminub mm0,QWORD PTR [ecx-0x73]
  50f769:	add    edi,DWORD PTR [edi]
  50f76b:	cmp    eax,0x860b94b8
  50f770:	fisttp DWORD PTR [esp+ebx*4-0x78034132]
  50f777:	pop    esi
  50f778:	call   0x82decd1
  50f77d:	add    eax,0xf1dc2cca
  50f782:	jle    0x50f7a9
  50f784:	and    ebx,DWORD PTR [esi]
  50f786:	out    0xb6,al
  50f788:	stos   DWORD PTR es:[edi],eax
  50f789:	scas   al,BYTE PTR es:[edi]
  50f78a:	out    0x4a,al
  50f78c:	iret   
  50f78d:	test   al,0xc0
  50f78f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50f790:	stos   DWORD PTR es:[edi],eax
  50f791:	jp     0x50f795
  50f793:	mov    al,al
  50f795:	call   0xf34e083c
  50f79a:	loopne 0x50f72f
  50f79c:	xor    DWORD PTR [edi-0xc],eax
  50f79f:	std    
  50f7a0:	xchg   DWORD PTR [edi+0x42a3cb16],ecx
  50f7a6:	jecxz  0x50f7db
  50f7a8:	sub    edx,DWORD PTR [ebx-0xf]
  50f7ab:	dec    edi
  50f7ac:	pushf  
  50f7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f7ae:	push   es
  50f7af:	fcomp  QWORD PTR [eax]
  50f7b1:	retf   
  50f7b2:	adc    al,0xf2
  50f7b4:	cmp    al,BYTE PTR ds:0xde24ea61
  50f7ba:	mov    eax,ds:0xac4424d2
  50f7bf:	and    esp,ebp
  50f7c1:	pusha  
  50f7c2:	sbb    DWORD PTR [edi],esi
  50f7c4:	mov    esi,0xed545e8e
  50f7c9:	lock repnz test esi,ebp
  50f7cd:	shl    DWORD PTR [ebx+ebp*2-0x49905137],1
  50f7d4:	xchg   edx,eax
  50f7d5:	js     0x50f764
  50f7d7:	adc    BYTE PTR [esp+ebp*8+0x5a],cl
  50f7db:	xlat   BYTE PTR ds:[ebx]
  50f7dc:	fcom   DWORD PTR [eax+0xb]
  50f7df:	outs   dx,DWORD PTR ds:[esi]
  50f7e0:	xchg   ebp,eax
  50f7e1:	or     DWORD PTR [esi+eax*2+0x29f09d7a],esi
  50f7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f7e9:	add    esp,DWORD PTR [eax]
  50f7eb:	(bad)  
  50f7ed:	je     0x50f7d8
  50f7ef:	hlt    
  50f7f0:	inc    ebp
  50f7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f7f2:	add    DWORD PTR [ebp-0x75fce194],ecx
  50f7f8:	sbb    esp,ebx
  50f7fa:	xlat   BYTE PTR ds:[ebx]
  50f7fb:	mov    esp,0x3737c4e0
  50f800:	push   ds
  50f801:	fiadd  WORD PTR gs:[ecx+0x694bf57c]
  50f808:	mov    dl,ch
  50f80a:	ja     0x50f7b9
  50f80c:	adc    eax,0x491ea74a
  50f811:	xor    al,0xc4
  50f813:	rcl    DWORD PTR cs:[eax-0x34],1
  50f817:	(bad)  
  50f818:	mov    ch,0x6c
  50f81a:	mov    ah,0xe8
  50f81c:	pop    ss
  50f81d:	sbb    al,0xef
  50f81f:	ins    BYTE PTR es:[edi],dx
  50f820:	jge    0x50f831
  50f822:	nop
  50f823:	sbb    al,0xe6
  50f826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f827:	mov    ah,0x52
  50f82a:	cs adc esi,eax
  50f82d:	ds and al,0xf9
  50f830:	cmp    ch,BYTE PTR [edx+eiz*4]
  50f833:	aam    0xa3
  50f835:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50f836:	pop    ebx
  50f837:	add    dl,BYTE PTR [esi+0x69]
  50f83a:	(bad)  
  50f83b:	loopne 0x50f7ec
  50f83d:	push   eax
  50f83e:	mov    ds:0xc192532a,al
  50f843:	and    al,0xb8
  50f845:	jp     0x50f8a3
  50f847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50f848:	xchg   ebp,eax
  50f849:	ret    0x233b
  50f84c:	push   ebx
  50f84d:	arpl   WORD PTR ds:0x2523d9dd,cx
  50f853:	loopne 0x50f7e3
  50f855:	sub    esp,DWORD PTR [eax+0x9]
  50f858:	cdq    
  50f859:	cmc    
  50f85a:	int    0xa8
  50f85c:	mov    ebp,0xca92c233
  50f861:	cli    
  50f862:	(bad)  
  50f863:	data16 ins BYTE PTR es:[edi],dx
  50f865:	ins    BYTE PTR es:[edi],dx
  50f866:	lea    edx,[edi+eiz*4+0xe0bffbf]
  50f86d:	je     0x50f8ed
  50f86f:	in     al,0x16
  50f871:	ins    BYTE PTR es:[edi],dx
  50f872:	js     0x50f7f4
  50f874:	push   esi
  50f875:	(bad)  
  50f876:	std    
  50f877:	mov    eax,ds:0x3c35d2de
  50f87c:	sub    al,0x21
  50f87e:	push   es
  50f87f:	xchg   edi,eax
  50f880:	pusha  
  50f881:	sbb    al,0x2c
  50f883:	adc    al,0x56
  50f885:	inc    ecx
  50f886:	leave  
  50f887:	jecxz  0x50f844
  50f889:	jecxz  0x50f823
  50f88b:	(bad)  
  50f88c:	in     al,dx
  50f88d:	inc    ecx
  50f88e:	sar    ch,0x3e
  50f891:	mov    al,ds:0x4fa9e7ff
  50f896:	sbb    al,0x2f
  50f898:	aad    0x51
  50f89a:	retf   0xd3b
  50f89d:	pop    esp
  50f89e:	add    DWORD PTR [esp+esi*1+0x22d9dd9d],0xffffffa9
  50f8a6:	(bad)  
  50f8a7:	push   esp
  50f8a8:	inc    esp
  50f8a9:	into   
  50f8aa:	fcomp  QWORD PTR [edi+0x2ef1aa88]
  50f8b0:	jmp    0x50f8e9
  50f8b2:	jge    0x50f8ec
  50f8b4:	jbe    0x50f88b
  50f8b6:	mov    edx,0x48b0639
  50f8bb:	jmp    0x1c7532a2
  50f8c0:	push   eax
  50f8c1:	sbb    eax,0x9272e437
  50f8c6:	add    al,0x37
  50f8c8:	jae    0x50f922
  50f8ca:	ror    DWORD PTR [edx+ecx*4+0x320bc9c],cl
  50f8d1:	gs shl bl,0xae
  50f8d5:	leave  
  50f8d6:	retf   
  50f8d7:	pop    ebx
  50f8d8:	mov    edi,0x73e0f1d8
  50f8dd:	sbb    esi,ebx
  50f8df:	adc    BYTE PTR [esi+0x58],dl
  50f8e2:	js     0x50f94d
  50f8e4:	mov    al,0xd8
  50f8e6:	dec    esi
  50f8e7:	sti    
  50f8e8:	repz test eax,0x4ba90767
  50f8ee:	pop    esp
  50f8ef:	mov    dh,0x8b
  50f8f1:	jp     0x50f87f
  50f8f3:	dec    edi
  50f8f4:	push   ebp
  50f8f5:	xor    BYTE PTR [edx+0x5df4e931],cl
  50f8fb:	cdq    
  50f8fc:	cli    
  50f8fd:	or     BYTE PTR [ebx+0x30],bh
  50f900:	add    edx,ebx
  50f902:	mov    ebx,DWORD PTR [edx]
  50f904:	jle    0x50f887
  50f906:	repnz ficomp DWORD PTR [ebx+ecx*4]
  50f90a:	jl     0x50f972
  50f90c:	add    DWORD PTR [edi-0xb],ecx
  50f90f:	ficomp DWORD PTR [esi+eax*8+0x79]
  50f913:	nop
  50f914:	test   ch,0xfe
  50f917:	ins    DWORD PTR es:[edi],dx
  50f918:	(bad)  
  50f919:	sub    al,0xdd
  50f91b:	test   BYTE PTR [ebx-0x22],dl
  50f91e:	retf   
  50f91f:	add    eax,0x45395d1f
  50f924:	lods   eax,DWORD PTR ds:[esi]
  50f925:	pop    edi
  50f926:	dec    esp
  50f927:	jle    0x50f940
  50f929:	mov    esi,0x8a8c27bd
  50f92e:	push   0x1
  50f930:	push   es
  50f931:	inc    BYTE PTR [ebx+0xf3d60da]
  50f937:	mov    BYTE PTR [edx],dl
  50f939:	sbb    eax,0x8db34abe
  50f93e:	hlt    
  50f93f:	loope  0x50f8fb
  50f941:	xor    al,0x4b
  50f943:	cld    
  50f944:	(bad)  
  50f945:	loop   0x50f903
  50f947:	popa   
  50f948:	ror    DWORD PTR [ebp-0x12],1
  50f94b:	mov    al,0x32
  50f94d:	sub    BYTE PTR [ecx],ah
  50f94f:	dec    eax
  50f950:	jecxz  0x50f99f
  50f952:	and    ebx,DWORD PTR [ebx-0x70ab7f5b]
  50f958:	dec    ebp
  50f959:	adc    BYTE PTR [esi-0x7fbab439],bl
  50f95f:	into   
  50f960:	xchg   ecx,eax
  50f961:	std    
  50f962:	inc    ecx
  50f963:	cmp    eax,0x49b2490b
  50f968:	sub    al,0xc1
  50f96a:	pop    ebx
  50f96b:	xchg   esi,eax
  50f96c:	adc    al,cl
  50f96e:	es mov ch,0x5a
  50f971:	mov    ch,0x4d
  50f973:	adc    DWORD PTR [edx],0xffbeb718
  50f979:	dec    esp
  50f97a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  50f97b:	add    ch,BYTE PTR [esi+0x33]
  50f97e:	mov    esi,0x932ddc42
  50f983:	aam    0xf
  50f985:	mov    BYTE PTR [edx+0x49e6fe13],ah
  50f98b:	ret    0xa5ea
  50f98e:	and    ebp,DWORD PTR ds:0xa164b30d
  50f994:	outs   dx,BYTE PTR ds:[esi]
  50f995:	(bad)  
  50f996:	and    al,0x3d
  50f998:	xor    BYTE PTR [eax],bh
  50f99a:	jae    0x50f920
  50f99c:	pop    sp
  50f99e:	sbb    bh,BYTE PTR [edx-0x8]
  50f9a1:	or     ebx,DWORD PTR [esi-0x1320c27e]
  50f9a7:	inc    ecx
  50f9a8:	mov    eax,0xaca5fa6b
  50f9ad:	jge    0x50f9a2
  50f9af:	shl    BYTE PTR [edi+0x52894bea],cl
  50f9b5:	push   edx
  50f9b6:	jb     0x50f945
  50f9b8:	popf   
  50f9b9:	fnstenv [edx-0x40]
  50f9bc:	scas   al,BYTE PTR es:[edi]
  50f9bd:	fiadd  WORD PTR [eax+ecx*1]
  50f9c0:	mov    eax,0x78a6a4d0
  50f9c5:	xchg   BYTE PTR [esi+edx*4+0x63],cl
  50f9c9:	dec    BYTE PTR [ebp+0x6fd655a6]
  50f9cf:	in     al,dx
  50f9d0:	cmp    DWORD PTR [edi-0xbb3e9eb],esp
  50f9d6:	push   0xffffffda
  50f9d8:	or     ebx,ecx
  50f9da:	pop    ss
  50f9db:	xchg   esi,eax
  50f9dc:	dec    eax
  50f9dd:	loope  0x50f961
  50f9df:	ja     0x50f96b
  50f9e1:	fldcw  WORD PTR [eax]
  50f9e3:	mov    ?,ebp
  50f9e5:	daa    
  50f9e6:	jae    0x50fa2a
  50f9e8:	hlt    
  50f9e9:	mov    al,0x8f
  50f9eb:	cmp    eax,0xbaca9acd
  50f9f0:	and    al,0xbf
  50f9f2:	mov    al,0xea
  50f9f4:	popf   
  50f9f5:	mov    al,0xf
  50f9f7:	sbb    al,0xec
  50f9f9:	retf   0x7016
  50f9fc:	push   edi
  50f9fd:	pop    ds
  50f9fe:	mov    esp,0x31debb83
  50fa03:	hlt    
  50fa04:	push   ds
  50fa05:	pop    ecx
  50fa06:	xchg   BYTE PTR [ebx+edx*2-0x2d0fae4b],dh
  50fa0d:	mov    eax,0x452b73a1
  50fa12:	adc    eax,0x54204494
  50fa17:	test   BYTE PTR [edi],bh
  50fa19:	(bad)  
  50fa1a:	fidivr WORD PTR [ebx+0x63]
  50fa1d:	int3   
  50fa1e:	sbb    ebx,esp
  50fa20:	fs movlhps xmm5,xmm4
  50fa24:	clc    
  50fa25:	mov    bh,dh
  50fa27:	xchg   edx,eax
  50fa28:	gs push es
  50fa2a:	inc    eax
  50fa2b:	fdivr  st(3),st
  50fa2d:	or     edx,DWORD PTR [ebx-0x68da4057]
  50fa33:	sub    dl,BYTE PTR [esi]
  50fa35:	icebp  
  50fa36:	sbb    BYTE PTR [esi-0x1c5f15a2],bh
  50fa3c:	xor    esi,DWORD PTR [eax-0x226e8d65]
  50fa42:	fiadd  WORD PTR [ebx+ebp*8+0x5b]
  50fa46:	mov    cl,0x50
  50fa48:	iret   
  50fa49:	pop    edi
  50fa4a:	push   0x6b
  50fa4c:	and    BYTE PTR [ebx-0x7a],al
  50fa4f:	imul   eax,DWORD PTR [eax-0x6d7975e3],0xc5b26bc5
  50fa59:	clc    
  50fa5a:	adc    dl,BYTE PTR [esi+0x6]
  50fa5d:	sub    DWORD PTR [ebx-0x64],0x12
  50fa61:	dec    esi
  50fa62:	or     dh,BYTE PTR ds:0x71f8ad6f
  50fa68:	jg     0x50fada
  50fa6a:	mov    cl,0x65
  50fa6c:	fnsave [ebx]
  50fa6e:	shr    BYTE PTR [esi+0x6b],cl
  50fa71:	push   es
  50fa72:	ja     0x50fad2
  50fa74:	jle    0x50fadf
  50fa76:	and    DWORD PTR [ebx-0x4d16d1aa],esp
  50fa7c:	and    al,0x6
  50fa7e:	arpl   WORD PTR [edx-0x7179213e],cx
  50fa84:	jge    0x50faf7
  50fa86:	fidivr WORD PTR [esi]
  50fa88:	adc    dl,dl
  50fa8a:	rol    DWORD PTR [ebp+eax*1-0x1f],0x4b
  50fa8f:	lock out dx,eax
  50fa91:	xlat   BYTE PTR ds:[ebx]
  50fa92:	pop    edx
  50fa93:	xchg   edx,eax
  50fa94:	adc    BYTE PTR [ebp+0x1a354954],0xf9
  50fa9b:	ret    0x66c0
  50fa9e:	shr    BYTE PTR [ebp*2+0x257c7387],1
  50faa5:	xor    eax,0x5b99cf85
  50faaa:	xor    esi,DWORD PTR [ebx-0x7bbde246]
  50fab0:	lods   eax,DWORD PTR ds:[esi]
  50fab1:	neg    BYTE PTR [edx-0x534490b9]
  50fab7:	adc    bh,BYTE PTR [esi-0x78]
  50faba:	mov    eax,0x941413e6
  50fabf:	in     eax,0xda
  50fac1:	add    al,0xa5
  50fac3:	jae    0x50fae2
  50fac5:	push   ebp
  50fac6:	fs dec esi
  50fac8:	rcl    ah,cl
  50faca:	xor    DWORD PTR [bp+si],edi
  50facd:	jnp    0x50fa61
  50facf:	shl    BYTE PTR [esp+ebp*1+0x39685cd5],0x78
  50fad7:	sti    
  50fad8:	repz pop ss
  50fada:	je     0x50fad5
  50fadc:	aaa    
  50fadd:	push   0x9011f456
  50fae2:	or     DWORD PTR [di+0x3f],eax
  50fae6:	inc    ebp
  50fae7:	mov    edi,0x2b18e686
  50faec:	pop    ds
  50faed:	push   edi
  50faee:	push   edi
  50faef:	inc    esi
  50faf0:	sub    dh,BYTE PTR [edx+0x22]
  50faf3:	out    0x64,eax
  50faf5:	add    eax,0xe86bb6f4
  50fafa:	cmp    cl,dl
  50fafc:	sar    DWORD PTR [eax-0x4774e26a],1
  50fb02:	push   ds
  50fb03:	retf   0x5e1f
  50fb06:	and    eax,0x1d7d17f8
  50fb0b:	outs   dx,DWORD PTR ds:[esi]
  50fb0c:	fist   WORD PTR [esi-0x7f0aefa]
  50fb12:	or     BYTE PTR [ebx+edi*2],0xdd
  50fb16:	jge    0x50fafa
  50fb18:	mov    ds:0xa23d8803,al
  50fb1d:	mov    bh,0x1d
  50fb1f:	adc    dh,bl
  50fb21:	ret    0x5c4e
  50fb24:	add    BYTE PTR [eax],al
  50fb26:	jae    0x50fb43
  50fb28:	jnp    0x50fb33
  50fb2a:	(bad)  
  50fb2b:	fdiv   DWORD PTR [eax]
  50fb2d:	fcmovnb st,st(5)
  50fb2f:	clc    
  50fb30:	shr    DWORD PTR [esi-0x1022aebb],1
  50fb36:	sbb    eax,0xce901b27
  50fb3b:	popf   
  50fb3c:	mul    DWORD PTR [eax]
  50fb3e:	dec    ebp
  50fb3f:	and    DWORD PTR [edi],ebx
  50fb41:	xchg   BYTE PTR [esi-0x46],ch
  50fb44:	out    0x42,al
  50fb46:	arpl   WORD PTR [edi+ebp*8+0x15],ax
  50fb4a:	stc    
  50fb4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50fb4c:	cmp    ah,BYTE PTR [ebx-0x513adb64]
  50fb52:	push   0x17
  50fb54:	into   
  50fb55:	mov    eax,ds:0xa299a4a1
  50fb5a:	test   DWORD PTR ds:0xd85b4822,esp
  50fb60:	loopne 0x50fbd5
  50fb62:	std    
  50fb63:	push   0x1400dff3
  50fb68:	xchg   ecx,eax
  50fb69:	int    0xd6
  50fb6b:	adc    edi,DWORD PTR [esi*8-0x7027ebb9]
  50fb72:	rcr    BYTE PTR [eax+edi*8-0x765244b],1
  50fb79:	bnd jp 0x50fb16
  50fb7c:	adc    dl,dl
  50fb7e:	pushf  
  50fb7f:	adc    DWORD PTR [ebp+0x3a],0xb76ff9be
  50fb86:	rol    BYTE PTR [ebp-0x3c3c779d],cl
  50fb8c:	push   ebx
  50fb8d:	sub    ecx,DWORD PTR [esi]
  50fb8f:	imul   esp,DWORD PTR [ebp+0x7111d164],0xcbcef5f2
  50fb99:	int    0xa7
  50fb9b:	adc    bh,BYTE PTR [ecx-0x15197b2b]
  50fba1:	stos   BYTE PTR es:[edi],al
  50fba2:	ins    DWORD PTR es:[edi],dx
  50fba3:	mov    ch,0x95
  50fba5:	inc    edi
  50fba6:	cmp    DWORD PTR [ebp-0x2987cf22],eax
  50fbac:	jno    0x50fbd2
  50fbae:	in     eax,0x62
  50fbb0:	pop    ebx
  50fbb1:	push   eax
  50fbb2:	push   esi
  50fbb3:	inc    esp
  50fbb4:	and    edi,DWORD PTR [eax+esi*1-0x722d9f5f]
  50fbbb:	loop   0x50fb5c
  50fbbd:	pop    es
  50fbbe:	out    dx,eax
  50fbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50fbc0:	pop    edx
  50fbc1:	xchg   esi,eax
  50fbc2:	xor    ecx,DWORD PTR [ecx-0x60]
  50fbc5:	ret    0x386d
  50fbc8:	mov    edx,0xb31fd819
  50fbcd:	or     al,0x8d
  50fbcf:	test   eax,0x16881920
  50fbd4:	or     DWORD PTR [edx-0x523ba1e5],edx
  50fbda:	retf   0xccab
  50fbdd:	fld    st(5)
  50fbdf:	test   BYTE PTR ds:0xf0b1d903,cl
  50fbe5:	add    al,0x64
  50fbe7:	adc    BYTE PTR [esi+ebp*4-0xca112e0],dl
  50fbee:	or     al,0x28
  50fbf0:	arpl   WORD PTR [ebx],si
  50fbf2:	(bad)  
  50fbf3:	jo     0x50fbdc
  50fbf5:	mov    ebx,DWORD PTR ds:0xb680d04c
  50fbfb:	repnz pop ebx
  50fbfd:	ja     0x50fc67
  50fbff:	jmp    0x50fc03
  50fc01:	dec    ebx
  50fc02:	xor    eax,ebx
  50fc04:	cmp    eax,0xb0df1050
  50fc09:	iret   
  50fc0a:	dec    eax
  50fc0b:	cs (bad) 
  50fc0e:	dec    edi
  50fc0f:	fiadd  WORD PTR [ebx]
  50fc11:	loop   0x50fba2
  50fc13:	out    0x13,eax
  50fc15:	je     0x50fc45
  50fc17:	ret    
  50fc18:	imul   esp,ecx,0xebd0e304
  50fc1e:	retf   
  50fc1f:	lahf   
  50fc20:	shl    ah,0xd0
  50fc23:	or     bl,bh
  50fc25:	push   es
  50fc26:	sbb    eax,0xb3d3a63b
  50fc2b:	gs inc esi
  50fc2d:	mov    ds:0xcdc57dc,eax
  50fc32:	pushf  
  50fc33:	fstp   TBYTE PTR [ecx]
  50fc35:	fistp  WORD PTR [esi+0x38]
  50fc38:	in     eax,dx
  50fc39:	nop
  50fc3a:	bound  ebp,QWORD PTR [ecx+0x44cbc7e7]
  50fc40:	cs fcomip st,st(1)
  50fc43:	xchg   ebx,eax
  50fc44:	fwait
  50fc45:	rcl    DWORD PTR [esi-0x1c],1
  50fc48:	mov    eax,0x4888b894
  50fc4d:	iret   
  50fc4e:	sbb    BYTE PTR [ecx],bl
  50fc50:	fistp  WORD PTR [edi+0x14]
  50fc53:	jg     0x50fbf4
  50fc55:	ss loop 0x50fbfb
  50fc58:	std    
  50fc59:	sub    BYTE PTR [ebx],0xe8
  50fc5c:	xor    ebx,esi
  50fc5e:	sbb    al,BYTE PTR [esi-0x40]
  50fc61:	jo     0x50fc2b
  50fc63:	shl    DWORD PTR [eax-0x7ca6fd7a],1
  50fc69:	jecxz  0x50fc0d
  50fc6b:	and    ebp,DWORD PTR [ecx-0x14]
  50fc6e:	fbld   TBYTE PTR [edx]
  50fc70:	stos   BYTE PTR es:[edi],al
  50fc71:	(bad)  
  50fc72:	adc    eax,0xc0718066
  50fc77:	in     al,dx
  50fc78:	mov    al,ds:0x205f154f
  50fc7d:	(bad)  
  50fc7f:	or     al,0x69
  50fc81:	retf   
  50fc82:	int    0xa9
  50fc84:	or     DWORD PTR [ecx],0xe4d787fe
  50fc8a:	add    eax,0xdbb230b9
  50fc8f:	cmp    ecx,DWORD PTR [esi+0x40cea429]
  50fc95:	xchg   esp,eax
  50fc96:	daa    
  50fc97:	mov    BYTE PTR [edi],ch
  50fc99:	xor    edx,edi
  50fc9b:	out    dx,al
  50fc9c:	dec    edx
  50fc9d:	push   ds
  50fc9e:	inc    edx
  50fc9f:	ins    DWORD PTR es:[edi],dx
  50fca0:	das    
  50fca1:	mov    eax,ds:0xddceafcb
  50fca6:	mov    eax,0xd81d3aff
  50fcab:	lahf   
  50fcac:	es jge 0x50fc9a
  50fcaf:	popf   
  50fcb0:	add    eax,edx
  50fcb2:	mov    ebp,DWORD PTR [edx-0x57]
  50fcb5:	mov    ds,WORD PTR [ebx-0x3ff77fe8]
  50fcbb:	mov    ds:0xd85045c3,al
  50fcc0:	mov    esp,0x39878776
  50fcc5:	mov    esp,0xcaa5cffb
  50fcca:	jp     0x50fd2e
  50fccc:	in     eax,0x72
  50fcce:	call   0xa9d0458c
  50fcd3:	xchg   DWORD PTR [ecx-0x61b0ab96],esi
  50fcd9:	int3   
  50fcda:	popf   
  50fcdb:	mov    al,0x1
  50fcdd:	popa   
  50fcde:	cdq    
  50fcdf:	into   
  50fce0:	sub    cl,BYTE PTR [ecx+0x7f412d93]
  50fce6:	ins    DWORD PTR es:[edi],dx
  50fce7:	sbb    eax,0xb68faa1a
  50fcec:	in     eax,0xd8
  50fcee:	cmp    dl,BYTE PTR [eax+0x279e4643]
  50fcf4:	mov    esp,0x339efe54
  50fcf9:	loope  0x50fd43
  50fcfb:	jno    0x50fca0
  50fcfd:	inc    esp
  50fcfe:	add    eax,0x890c3b0b
  50fd03:	lock xchg ebp,eax
  50fd05:	add    ebp,ebx
  50fd07:	pop    es
  50fd08:	cli    
  50fd09:	leave  
  50fd0a:	xchg   esi,eax
  50fd0b:	nop
  50fd0c:	push   esi
  50fd0d:	ret    0x6c9a
  50fd10:	sub    al,0x46
  50fd12:	xor    al,0xeb
  50fd14:	jne    0x50fccf
  50fd16:	fstcw  WORD PTR [ebx]
  50fd19:	push   ss
  50fd1a:	test   BYTE PTR [edx+0x3f2b0978],bl
  50fd20:	cli    
  50fd21:	out    0x97,al
  50fd23:	cdq    
  50fd24:	test   BYTE PTR [edx+0x70],dl
  50fd27:	leave  
  50fd28:	cmp    al,0xed
  50fd2a:	adc    BYTE PTR [ecx+esi*4+0x29],dh
  50fd2e:	outs   dx,BYTE PTR ds:[esi]
  50fd2f:	mov    WORD PTR [ecx+0x7b2f7c40],ds
  50fd35:	cmc    
  50fd36:	mov    ebx,DWORD PTR [edx]
  50fd38:	sub    DWORD PTR [ebx+0x7c],0x3e
  50fd3c:	mov    bl,0x5f
  50fd3e:	xchg   ecx,eax
  50fd3f:	imul   edx,esp,0x5057131f
  50fd45:	dec    esi
  50fd46:	and    eax,0x8084b74c
  50fd4b:	pusha  
  50fd4c:	jae    0x50fdc1
  50fd4e:	cdq    
  50fd4f:	les    ecx,FWORD PTR [edx+0x40c9c098]
  50fd55:	cli    
  50fd56:	sub    eax,0x4003ef1b
  50fd5b:	mov    esp,0xfb3fa885
  50fd60:	or     ebx,edi
  50fd62:	loop   0x50fd14
  50fd64:	mov    esi,0xcd2635a7
  50fd69:	add    esp,DWORD PTR ds:0x7104888d
  50fd6f:	inc    eax
  50fd70:	(bad)  
  50fd72:	jle    0x50fd2d
  50fd74:	sbb    ax,0xc0c4
  50fd78:	sub    al,0x40
  50fd7a:	adc    al,0x8
  50fd7c:	jb     0x50fdcf
  50fd7e:	push   eax
  50fd7f:	push   0x5182860f
  50fd84:	jo     0x50fd17
  50fd86:	adc    esi,DWORD PTR [edi+0xc]
  50fd89:	es (bad) 
  50fd8b:	sub    al,0xd6
  50fd8d:	add    eax,0xd18e3c4c
  50fd92:	aad    0x16
  50fd94:	daa    
  50fd95:	leave  
  50fd96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  50fd97:	push   ds
  50fd98:	mov    bl,0x54
  50fd9a:	(bad)  
  50fd9b:	(bad)  [ebx]
  50fd9d:	cli    
  50fd9e:	inc    ebp
  50fd9f:	xor    ebx,edx
  50fda1:	(bad)  
  50fda2:	xor    dl,BYTE PTR [ebx+0x795b5546]
  50fda8:	sbb    bl,dl
  50fdaa:	test   cl,cl
  50fdac:	shr    DWORD PTR [esi-0x4f],1
  50fdaf:	xchg   edi,eax
  50fdb0:	inc    eax
  50fdb1:	icebp  
  50fdb2:	mov    edx,DWORD PTR fs:[ebx]
  50fdb5:	aas    
  50fdb6:	ficomp WORD PTR [ebx-0x62ec20cb]
  50fdbc:	scas   al,BYTE PTR es:[edi]
  50fdbd:	(bad)  
  50fdbe:	and    al,0x8b
  50fdc0:	(bad)  
  50fdc1:	dec    edi
  50fdc3:	and    eax,0x27ee0239
  50fdc8:	(bad)  
  50fdc9:	jge    0x50fd8f
  50fdcb:	cli    
  50fdcc:	cmp    DWORD PTR [ebx+0x520d2540],edi
  50fdd2:	xor    al,0xb2
  50fdd4:	cmc    
  50fdd5:	fdivp  st(5),st
  50fdd7:	mov    ebx,0xdca1092b
  50fddc:	jge    0x50fe40
  50fdde:	iret   
  50fddf:	push   es
  50fde0:	(bad)  
  50fde1:	pop    ebx
  50fde2:	imul   eax,ebp,0xffffff9f
  50fde5:	mov    esi,0xb85116d5
  50fdea:	push   es
  50fdeb:	mov    bl,BYTE PTR [edx]
  50fded:	mov    esp,0x9749b94e
  50fdf2:	ds mov ch,0x61
  50fdf5:	push   0xa24c67f9
  50fdfa:	jbe    0x50fe05
  50fdfc:	fisubr DWORD PTR [ecx-0x49459aa8]
  50fe02:	push   ss
  50fe03:	xor    BYTE PTR [ebx],bl
  50fe05:	xor    dh,BYTE PTR [esi]
  50fe07:	sub    esp,DWORD PTR [eax+0x18]
  50fe0a:	inc    esp
  50fe0b:	repnz sub BYTE PTR [esi],bh
  50fe0e:	stos   DWORD PTR es:[edi],eax
  50fe0f:	pusha  
  50fe10:	sub    eax,eax
  50fe12:	nop
  50fe13:	sar    dl,cl
  50fe15:	leave  
  50fe16:	cli    
  50fe17:	cmp    ch,al
  50fe19:	lods   eax,DWORD PTR ds:[esi]
  50fe1a:	outs   dx,DWORD PTR ds:[esi]
  50fe1b:	inc    edi
  50fe1c:	shl    dl,cl
  50fe1e:	sub    BYTE PTR [edi+0x42db64c4],0xae
  50fe25:	in     al,0xa2
  50fe27:	cmp    DWORD PTR [ebp+0x67],esp
  50fe2a:	mov    ds:0xcf3025f7,al
  50fe2f:	ficom  DWORD PTR [edi-0x4746956e]
  50fe35:	retf   0x306c
  50fe38:	jns    0x50fdd3
  50fe3a:	inc    ecx
  50fe3b:	push   edx
  50fe3c:	jmp    0x50fdd3
  50fe3e:	jae    0x50fdea
  50fe40:	out    dx,al
  50fe41:	dec    edx
  50fe42:	xchg   edx,eax
  50fe43:	xchg   DWORD PTR [ecx],ebp
  50fe45:	iret   
  50fe46:	xor    BYTE PTR [esi],bl
  50fe48:	mov    esp,0x60aea00e
  50fe4d:	sbb    edi,DWORD PTR [ebp+edi*1-0x3e]
  50fe51:	clc    
  50fe52:	sbb    ch,BYTE PTR [ebp+0x75457152]
  50fe58:	jne    0x50fdec
  50fe5a:	fs lahf 
  50fe5c:	(bad)  
  50fe5d:	stc    
  50fe5e:	cdq    
  50fe5f:	lahf   
  50fe60:	pusha  
  50fe61:	aam    0xf6
  50fe63:	les    esi,FWORD PTR [esi-0x566ad43a]
  50fe69:	rol    BYTE PTR [edi],cl
  50fe6b:	repz add dl,ch
  50fe6e:	jmp    0x50fe8a
  50fe70:	fild   WORD PTR [ecx+0x348f3516]
  50fe76:	fwait
  50fe77:	mov    bl,0xa2
  50fe79:	jmp    0x50fdfc
  50fe7b:	cmc    
  50fe7c:	jmp    0x71420023
  50fe81:	out    dx,al
  50fe82:	pop    ebp
  50fe83:	test   eax,0x3f8e6eb4
  50fe88:	sbb    eax,0x61c07bed
  50fe8d:	mov    ds:0x745c7eb0,al
  50fe92:	dec    esi
  50fe93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  50fe94:	cli    
  50fe95:	mov    DWORD PTR [eax-0x3f67cb23],edx
  50fe9b:	sub    DWORD PTR [ebx-0x71d55272],ecx
  50fea1:	push   edi
  50fea2:	in     eax,0xc9
  50fea4:	into   
  50fea5:	test   eax,0x760e19b6
  50feaa:	call   0x7bc09f32
  50feaf:	fwait
  50feb0:	or     al,0xb1
  50feb2:	push   edi
  50feb3:	int3   
  50feb4:	pop    esp
  50feb5:	mov    ch,0x9a
  50feb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50feb8:	je     0x50fe87
  50feba:	cmp    cl,dl
  50febc:	mov    ah,0x4a
  50febe:	arpl   cx,di
  50fec0:	and    edx,DWORD PTR ds:0x98d84852
  50fec6:	ins    DWORD PTR es:[edi],dx
  50fec7:	(bad)  
  50fec8:	fcomp  QWORD PTR [edx-0x3f]
  50fecb:	jo     0x50fea4
  50fecd:	(bad)  
  50fece:	repz and esp,edx
  50fed1:	lahf   
  50fed2:	cdq    
  50fed3:	stos   BYTE PTR es:[edi],al
  50fed4:	xchg   ecx,eax
  50fed5:	loopne 0x50fee0
  50fed7:	mov    al,ds:0x95489d07
  50fedc:	mov    edi,0xac6aba0b
  50fee1:	pop    ecx
  50fee2:	cmp    ebp,eax
  50fee4:	rol    BYTE PTR [edx],0xaa
  50fee7:	or     edx,DWORD PTR [eax-0x7a9e95be]
  50feed:	lea    ebp,[ebp-0x14]
  50fef0:	nop
  50fef1:	ja     0x50feff
  50fef3:	pop    eax
  50fef4:	mov    dh,0x8a
  50fef6:	stos   DWORD PTR es:[edi],eax
  50fef7:	xor    bh,BYTE PTR [ecx]
  50fef9:	jg     0x50ff4f
  50fefb:	sbb    BYTE PTR [ebx-0x3a438f05],dl
  50ff01:	ret    
  50ff02:	mov    WORD PTR [esi+0x6c],?
  50ff05:	retf   0x61ae
  50ff08:	cmc    
  50ff09:	es xor al,0x87
  50ff0c:	bswap  ebx
  50ff0e:	push   eax
  50ff0f:	dec    ebp
  50ff10:	cli    
  50ff11:	xlat   BYTE PTR ds:[ebx]
  50ff12:	dec    edx
  50ff13:	dec    ebp
  50ff14:	inc    esi
  50ff15:	lahf   
  50ff16:	retf   0x7ee6
  50ff19:	out    dx,eax
  50ff1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  50ff1b:	dec    edi
  50ff1c:	xchg   esp,eax
  50ff1d:	dec    esi
  50ff1e:	mov    ds:0x906ecb96,eax
  50ff23:	mov    esp,0x2d66aa48
  50ff28:	in     eax,dx
  50ff29:	pop    ebp
  50ff2a:	cmp    eax,0x9d8a092b
  50ff2f:	push   edx
  50ff30:	loope  0x50ff19
  50ff32:	inc    edx
  50ff33:	test   eax,0xcedf19b8
  50ff38:	xlat   BYTE PTR ds:[ebx]
  50ff39:	stc    
  50ff3a:	lds    esp,FWORD PTR [ebx-0x1a]
  50ff3d:	lahf   
  50ff3e:	ret    
  50ff3f:	pop    ecx
  50ff40:	addr16 mov esi,0x223e8dd6
  50ff46:	lahf   
  50ff47:	std    
  50ff48:	shl    ch,cl
  50ff4a:	fisubr DWORD PTR [edx]
  50ff4c:	cwde   
  50ff4d:	lock out 0x48,al
  50ff50:	add    esp,ebp
  50ff52:	jae    0x50ff5c
  50ff54:	pop    esi
  50ff55:	mov    al,ds:0x3b64ec3a
  50ff5a:	nop
  50ff5b:	push   cs
  50ff5c:	mov    al,0x95
  50ff5e:	xor    edx,DWORD PTR [esi]
  50ff60:	pusha  
  50ff61:	mov    ds:0x7d77a875,eax
  50ff66:	push   edi
  50ff67:	adc    DWORD PTR [ecx],ecx
  50ff69:	arpl   WORD PTR [ebx],ax
  50ff6b:	icebp  
  50ff6c:	push   esi
  50ff6d:	and    BYTE PTR fs:[ebx+0x29],al
  50ff71:	ss sub esi,ebx
  50ff74:	push   ebx
  50ff75:	cwde   
  50ff76:	mov    al,0x4f
  50ff78:	fs jb  0x50ff39
  50ff7b:	pop    esp
  50ff7c:	xchg   edx,edx
  50ff7e:	das    
  50ff7f:	jl     0x50ff38
  50ff81:	std    
  50ff82:	sub    esp,DWORD PTR [edi+eax*1]
  50ff85:	xor    cl,dh
  50ff87:	xchg   esi,eax
  50ff88:	(bad)  
  50ff89:	mov    ecx,0x85bd932e
  50ff8e:	in     eax,dx
  50ff8f:	jne    0x50ff94
  50ff91:	test   eax,0xed639bcf
  50ff96:	cwde   
  50ff97:	ss test eax,0x1e998b91
  50ff9d:	xor    ch,BYTE PTR [ebx-0x4e]
  50ffa0:	inc    eax
  50ffa1:	cmp    BYTE PTR [ecx],dh
  50ffa3:	push   eax
  50ffa4:	dec    esi
  50ffa5:	and    DWORD PTR [eax-0x755e9db5],edi
  50ffab:	xor    ecx,DWORD PTR [eax]
  50ffad:	sub    eax,0x42a4214d
  50ffb2:	rol    BYTE PTR [ecx-0x7b],cl
  50ffb5:	sub    BYTE PTR [edx+0x6d2bfd93],al
  50ffbb:	jge    0x51000a
  50ffbd:	in     eax,dx
  50ffbe:	call   DWORD PTR [esi]
  50ffc0:	enter  0x80f6,0xb5
  50ffc4:	ja     0x50ff67
  50ffc6:	leave  
  50ffc7:	push   ss
  50ffc8:	int    0xcc
  50ffca:	push   ecx
  50ffcb:	sub    al,0xd4
  50ffcd:	dec    esi
  50ffce:	cmp    al,0x39
  50ffd0:	mov    bh,0xf8
  50ffd2:	or     al,dh
  50ffd4:	fnstcw WORD PTR gs:[edx]
  50ffd7:	(bad)  
  50ffd8:	or     esp,DWORD PTR [edx+0x16d49b91]
  50ffde:	int3   
  50ffdf:	sub    al,0xfb
  50ffe1:	sbb    al,0x9b
  50ffe3:	mov    cl,0xcc
  50ffe5:	ror    DWORD PTR [ecx+edi*4-0xd],0xac
  50ffea:	pop    es
  50ffeb:	xchg   ebx,eax
  50ffec:	xor    ah,bl
  50ffee:	mov    BYTE PTR [ebx+edi*1+0x1],0x67
  50fff3:	jmp    0x51002e
  50fff5:	xchg   esp,eax
  50fff6:	bound  edx,QWORD PTR [edi]
  50fff8:	das    
  50fff9:	adc    al,bl
  50fffb:	call   DWORD PTR [ebx+0x65ffe9d4]
  510001:	jl     0x510065
  510003:	arpl   WORD PTR [esi+ebp*1],sp
  510006:	sbb    eax,edi
  510008:	ins    DWORD PTR es:[edi],dx
  510009:	ds jp  0x51007a
  51000c:	and    al,0x92
  51000e:	retf   
  51000f:	xchg   ecx,eax
  510010:	dec    esi
  510011:	fxch   st(5)
  510013:	sub    DWORD PTR [ebx+0x57],0xffffff82
  510017:	pop    esi
  510018:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510019:	loope  0x510009
  51001b:	rcl    DWORD PTR [ebp+0x2d96add6],cl
  510021:	jmp    0x3c1f2955
  510026:	jbe    0x510015
  510028:	push   edx
  510029:	push   eax
  51002a:	js     0x51008e
  51002c:	cmp    eax,0x1d8ad02
  510031:	push   ss
  510032:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510033:	stc    
  510034:	jl     0x51009e
  510036:	in     eax,dx
  510037:	sub    DWORD PTR [edi],0xd137555e
  51003d:	inc    ebp
  51003e:	sub    ecx,DWORD PTR [ecx]
  510040:	mov    ebx,DWORD PTR [edi-0x4e]
  510043:	in     eax,0x4b
  510045:	repnz jecxz 0x510033
  510048:	pop    ds
  510049:	cmp    DWORD PTR [edx+eiz*2-0x45],ecx
  51004d:	xchg   BYTE PTR [ebp+0x2a1aade2],ah
  510053:	add    DWORD PTR ds:0xe0622b38,edx
  510059:	ret    0xf5bd
  51005c:	ds mov ebp,0x2d20018d
  510062:	mov    eax,0x1a236cdf
  510067:	and    DWORD PTR [edi],ebp
  510069:	or     DWORD PTR [eax+0x7e],ebp
  51006c:	pop    ds
  51006d:	bound  esp,QWORD PTR [eax-0x16f9fb44]
  510073:	xor    al,0x43
  510075:	sbb    DWORD PTR es:[eax-0x65],edx
  510079:	xchg   DWORD PTR [eax+0x667f87ec],esi
  51007f:	and    bl,BYTE PTR [ecx+0x75]
  510082:	adc    eax,0xb98b918b
  510087:	outs   dx,DWORD PTR ds:[esi]
  510088:	inc    edi
  510089:	mov    dh,0x2
  51008b:	test   BYTE PTR [edi-0x32],dl
  51008e:	hlt    
  51008f:	cmp    edi,DWORD PTR [edi]
  510091:	mov    ah,0xca
  510093:	out    dx,al
  510094:	cmp    edi,DWORD PTR [edi-0x67]
  510097:	mov    cl,0x55
  510099:	retf   
  51009a:	add    dh,bh
  51009c:	mov    edi,0x9509dfcd
  5100a1:	in     al,0xa1
  5100a3:	mov    bl,BYTE PTR [edx+0x6d]
  5100a6:	mov    bl,0xb9
  5100a8:	jl     0x510102
  5100aa:	add    bh,BYTE PTR [edx+0x77dbc406]
  5100b0:	xor    ecx,DWORD PTR [edx-0x5e02f990]
  5100b6:	mov    edi,0xa2410962
  5100bb:	sbb    al,dh
  5100bd:	cmp    esp,esp
  5100bf:	xchg   ebx,eax
  5100c0:	jbe    0x510134
  5100c2:	jb     0x5100b7
  5100c4:	popa   
  5100c5:	xchg   esp,edi
  5100c7:	sbb    ebp,DWORD PTR [ecx]
  5100c9:	(bad)  
  5100ca:	push   ds
  5100cb:	fsub   QWORD PTR [ebp-0x62]
  5100ce:	test   ah,dh
  5100d0:	xor    BYTE PTR [ecx*2+0x68b8eed1],ch
  5100d7:	lahf   
  5100d8:	jbe    0x51007b
  5100da:	cmc    
  5100db:	sahf   
  5100dc:	mov    eax,cs:0x367a92f5
  5100e2:	outs   dx,DWORD PTR ds:[esi]
  5100e3:	imul   BYTE PTR [ebx]
  5100e5:	sahf   
  5100e6:	jae    0x9f357acc
  5100ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5100ed:	xchg   edx,eax
  5100ee:	xlat   BYTE PTR ds:[ebx]
  5100ef:	cmp    eax,0x43f16ecf
  5100f4:	test   eax,0x9e31a779
  5100f9:	jnp    0x510088
  5100fb:	sub    bh,cl
  5100fd:	in     al,dx
  5100fe:	ss aad 0xb
  510101:	sub    edi,DWORD PTR [ebx+0x22]
  510104:	mov    cl,0xd7
  510106:	sbb    edi,DWORD PTR [esi+0x5f]
  510109:	lods   al,BYTE PTR gs:[esi]
  51010b:	int3   
  51010c:	dec    edx
  51010d:	mov    dl,BYTE PTR [esi]
  51010f:	repz mov ecx,0x274222d4
  510115:	shl    BYTE PTR [edi+ebx*2-0x3],cl
  510119:	leave  
  51011a:	lods   al,BYTE PTR ds:[esi]
  51011b:	test   al,0xaa
  51011d:	cmp    DWORD PTR [edi+eiz*2+0x60cae69c],ebx
  510124:	hlt    
  510125:	dec    ebp
  510126:	jo     0x51012c
  510128:	stos   DWORD PTR es:[edi],eax
  510129:	rol    BYTE PTR [ecx],1
  51012b:	(bad)  
  51012c:	xor    cl,dh
  51012e:	cwde   
  51012f:	or     BYTE PTR [edi+0x2],al
  510132:	adc    al,0x44
  510134:	mov    bl,0xbe
  510136:	push   ss
  510137:	sahf   
  510138:	push   cs
  510139:	xor    ebx,DWORD PTR [ebp+0x3730eb10]
  51013f:	hlt    
  510140:	sbb    ebp,ebp
  510142:	cli    
  510143:	push   edi
  510144:	sbb    edx,DWORD PTR ds:0xac04466c
  51014a:	push   0xffffff96
  51014c:	or     bh,BYTE PTR [edx-0x17]
  51014f:	inc    edi
  510150:	mov    ch,BYTE PTR [ebx+ebp*1+0x507c1abd]
  510157:	or     edi,eax
  510159:	push   edi
  51015a:	cli    
  51015b:	popf   
  51015c:	popa   
  51015d:	adc    ebx,esp
  51015f:	adc    BYTE PTR [ebp-0x3b],al
  510162:	dec    esi
  510163:	add    eax,0xb9a6641c
  510168:	pop    ss
  510169:	iret   
  51016a:	push   cs
  51016b:	add    al,0xe
  51016d:	retf   
  51016e:	aam    0xa3
  510170:	mov    es:0xf2d04619,eax
  510176:	add    eax,0x903bd5d0
  51017b:	pusha  
  51017c:	fistp  DWORD PTR [ebp+0x3a]
  51017f:	shl    DWORD PTR [edx+ecx*2-0xd],1
  510183:	not    DWORD PTR [ecx+0x7c]
  510186:	push   ebp
  510187:	jns    0x510195
  510189:	cmp    DWORD PTR [esi-0x6],esi
  51018c:	std    
  51018d:	jns    0x5101f2
  51018f:	cmp    DWORD PTR [eax],esp
  510191:	lahf   
  510192:	imul   ebp,DWORD PTR [edx],0x75
  510195:	jp     0x5101de
  510197:	inc    ecx
  510198:	mov    edi,0x3083020c
  51019d:	fistp  DWORD PTR [ebp+0x2072b216]
  5101a3:	es xchg edi,eax
  5101a5:	and    dl,bh
  5101a7:	gs std 
  5101a9:	xor    DWORD PTR [ebp+0x2e],eax
  5101ac:	cmp    BYTE PTR [edi-0x3],bh
  5101af:	sub    DWORD PTR [ebp+ebp*2-0x55],edx
  5101b3:	stos   DWORD PTR es:[edi],eax
  5101b4:	mov    eax,0xe767e523
  5101b9:	and    DWORD PTR ds:0x74739751,edx
  5101bf:	push   ss
  5101c0:	nop
  5101c1:	cwde   
  5101c2:	push   edx
  5101c3:	gs jle 0x5101d4
  5101c6:	imul   esi,DWORD PTR [edi-0x76747b1e],0x8d8800c7
  5101d0:	ins    DWORD PTR es:[edi],dx
  5101d1:	push   esi
  5101d2:	mov    dl,0x62
  5101d4:	push   ecx
  5101d5:	mov    esp,DWORD PTR [edx]
  5101d7:	lods   al,BYTE PTR ds:[esi]
  5101d8:	in     eax,0xe0
  5101da:	(bad)  
  5101db:	lea    ebx,[esi+0x1db0b0ee]
  5101e1:	cmp    eax,0x6b33b19c
  5101e6:	sbb    DWORD PTR [eax],ebx
  5101e8:	xor    al,0xdb
  5101ea:	pop    edi
  5101eb:	outs   dx,BYTE PTR ds:[esi]
  5101ec:	and    DWORD PTR [ecx-0x1d],0x7f
  5101f0:	cs lock aad 0x2c
  5101f4:	call   0xf6d0:0xe92730e4
  5101fb:	pop    DWORD PTR [esi]
  5101fd:	loopne 0x51017f
  5101ff:	cmp    DWORD PTR [edi],edi
  510201:	popa   
  510202:	add    al,0x3
  510204:	pop    ebp
  510205:	loopne 0x51018d
  510207:	sbb    ebx,DWORD PTR [esi]
  510209:	or     BYTE PTR [edi-0x71],bl
  51020c:	iret   
  51020d:	pushf  
  51020e:	inc    edi
  51020f:	fsubr  QWORD PTR [ecx]
  510211:	pop    ds
  510212:	adc    eax,0x6fd3af6a
  510217:	imul   ebp,DWORD PTR [ebx+esi*1-0x5fce1b63],0xfffffffa
  51021f:	je     0x510206
  510221:	push   0x2
  510223:	xchg   ebp,eax
  510224:	add    al,0xc
  510226:	mov    bl,0x5a
  510228:	xor    al,0x2e
  51022a:	push   edi
  51022b:	jge    0x5101e0
  51022d:	mov    al,ds:0x69bc7a7f
  510232:	outs   dx,DWORD PTR ds:[esi]
  510233:	ror    BYTE PTR [ecx+0x17],0x86
  510237:	push   ds
  510238:	inc    esp
  510239:	pop    edx
  51023a:	xchg   edi,eax
  51023b:	adc    BYTE PTR [ecx-0x6762d8cc],0x14
  510242:	retf   0x2083
  510245:	(bad)  
  510246:	ror    DWORD PTR [edi],cl
  510248:	fsubr  DWORD PTR [ebx-0x6e339bf]
  51024e:	push   DWORD PTR [eax-0x4a]
  510251:	or     ah,BYTE PTR [ebx-0x3a4143c]
  510257:	inc    ebp
  510258:	fucomi st,st(3)
  51025a:	mov    ds:0x5fd12501,al
  51025f:	mov    BYTE PTR [eax],bl
  510261:	fcom   QWORD PTR [esp+eax*1-0x18]
  510265:	cdq    
  510266:	sbb    esp,DWORD PTR [ebp-0x21ab3d6e]
  51026c:	call   0xb178:0xcc533425
  510273:	mov    ds:0xc7abaf9b,al
  510278:	mov    dh,BYTE PTR ds:0x72ba7f
  51027e:	add    eax,0xf3350939
  510283:	adc    ah,ah
  510285:	fld    QWORD PTR [ebx]
  510287:	ret    0xaced
  51028a:	daa    
  51028b:	sbb    ebp,DWORD PTR [edx]
  51028d:	mov    bl,0x6d
  51028f:	jnp    0x510277
  510291:	mov    eax,ds:0x64ffcf0a
  510296:	mov    fs,WORD PTR [ebx-0x5e7c9922]
  51029c:	icebp  
  51029d:	push   ebx
  51029e:	inc    esp
  51029f:	lea    ecx,[esi]
  5102a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5102a2:	fst    DWORD PTR [ebx-0x290b895c]
  5102a8:	repnz in eax,0x32
  5102ab:	ret    
  5102ac:	xlat   BYTE PTR ds:[ebx]
  5102ad:	inc    edi
  5102ae:	push   edx
  5102af:	ret    0x39f6
  5102b2:	fcmovb st,st(6)
  5102b4:	int3   
  5102b5:	les    ecx,FWORD PTR [edx+ebp*8-0x2a]
  5102b9:	retf   0xb843
  5102bc:	dec    edx
  5102bd:	call   0x2a97:0xf92234e7
  5102c4:	mov    al,ds:0xd0fd4690
  5102c9:	rdtsc  
  5102cb:	std    
  5102cc:	scas   eax,DWORD PTR es:[edi]
  5102cd:	inc    ebp
  5102ce:	jmp    0xf2a6:0xd3839fdd
  5102d5:	cmp    eax,0x84b0a476
  5102da:	les    edx,FWORD PTR [eax-0x2d8fc884]
  5102e0:	mov    eax,ds:0xa00e5025
  5102e5:	push   ebx
  5102e6:	aad    0x3e
  5102e8:	lahf   
  5102e9:	xchg   BYTE PTR [ecx],ah
  5102eb:	push   0x866a00e5
  5102f0:	cmp    al,0x98
  5102f2:	sub    esp,esi
  5102f4:	mov    al,0x45
  5102f6:	jg     0x51034c
  5102f8:	xor    cl,ch
  5102fa:	in     al,0xb0
  5102fc:	stos   BYTE PTR es:[edi],al
  5102fd:	(bad)  
  5102fe:	mov    ecx,0x8045ed0d
  510303:	xchg   BYTE PTR [ebx-0x525c90a2],ch
  510309:	and    al,0xf3
  51030b:	push   esp
  51030c:	in     eax,0x48
  51030e:	jecxz  0x510378
  510310:	cli    
  510311:	call   0xc217b884
  510316:	jnp    0x5102ff
  510318:	add    BYTE PTR [edx+0x1fac330f],cl
  51031e:	das    
  51031f:	fcmovbe st,st(3)
  510321:	inc    BYTE PTR [esi+0x236d7008]
  510327:	sbb    al,0x5
  510329:	rcr    DWORD PTR [ebp-0x5b],0x64
  51032d:	(bad)  
  51032e:	aam    0xdf
  510330:	pop    esp
  510331:	push   0x2e
  510333:	mov    dl,0x55
  510335:	xchg   ebx,eax
  510336:	hlt    
  510337:	xchg   ebp,eax
  510338:	popf   
  510339:	aam    0x4d
  51033b:	cmp    eax,0x829ac72a
  510340:	jge    0x510304
  510342:	jo     0x510384
  510344:	xor    DWORD PTR [eax-0x5c69a5ae],esi
  51034a:	imul   esp,DWORD PTR ds:0x2e60d21a,0xe915f14d
  510354:	pop    ebx
  510355:	out    dx,eax
  510356:	ins    DWORD PTR es:[edi],dx
  510357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510358:	jbe    0x5103cc
  51035a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51035b:	sbb    al,0xc5
  51035d:	jmp    0x51038d
  51035f:	inc    eax
  510360:	adc    eax,0x67530160
  510366:	sbb    edi,esp
  510368:	and    dl,cl
  51036a:	push   ss
  51036b:	sbb    ch,0xe1
  51036e:	cli    
  51036f:	fisubr DWORD PTR [ebx]
  510371:	es cmp eax,0xf5781320
  510377:	ss popf 
  510379:	and    eax,0x19eca749
  51037e:	push   esi
  51037f:	dec    ebx
  510380:	test   ebx,ebp
  510382:	(bad)  
  510383:	xchg   ebx,eax
  510384:	push   ss
  510385:	ds gs lahf 
  510388:	sbb    al,0xb0
  51038a:	shl    BYTE PTR [esi],0x89
  51038d:	popa   
  51038e:	xlat   BYTE PTR ds:[ebx]
  51038f:	jmp    0x5103f0
  510391:	daa    
  510392:	inc    ebp
  510393:	aam    0xd9
  510395:	cmp    eax,0x302a623e
  51039a:	pop    esi
  51039b:	popf   
  51039c:	jecxz  0x51035b
  51039e:	and    ah,BYTE PTR [edx+ebp*4-0x2c]
  5103a2:	call   0x5e0b:0x7e339d9e
  5103a9:	sub    edi,esi
  5103ab:	mov    ecx,es
  5103ad:	fst    QWORD PTR [edi]
  5103af:	ins    DWORD PTR es:[edi],dx
  5103b0:	xchg   DWORD PTR [eax+0x8ba067b],edi
  5103b6:	sbb    bl,ch
  5103b8:	add    BYTE PTR [esi-0x40],dh
  5103bb:	daa    
  5103bc:	retf   0xcda7
  5103bf:	mov    ah,0x41
  5103c1:	cld    
  5103c2:	test   BYTE PTR [edi-0x10],0x87
  5103c6:	jo     0x51036e
  5103c8:	inc    edx
  5103c9:	sbb    al,cl
  5103cb:	jecxz  0x51043b
  5103cd:	adc    DWORD PTR [bx-0x11],esi
  5103d1:	cmp    eax,0xa8a9f948
  5103d6:	lock sahf 
  5103d8:	jg     0x510387
  5103da:	inc    esi
  5103db:	cwde   
  5103dc:	out    dx,al
  5103dd:	push   edi
  5103de:	cmp    eax,0x41d9a3c6
  5103e3:	out    dx,al
  5103e4:	xor    cl,BYTE PTR [edx+0x4b]
  5103e7:	or     DWORD PTR [ebx+ecx*2+0x33a0bb94],ebp
  5103ee:	addr16 test eax,0xbf1255f8
  5103f4:	(bad)  
  5103f5:	fild   QWORD PTR [ebx+0x35]
  5103f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5103f9:	push   esp
  5103fa:	sub    DWORD PTR [eax],eax
  5103fc:	mov    es,WORD PTR [ecx+0x3384246e]
  510402:	mov    ds:0x864c61da,eax
  510407:	xor    esi,DWORD PTR [eax+0x5c]
  51040a:	clc    
  51040b:	xor    eax,0xba32d7b7
  510410:	push   0x2cfe5267
  510415:	rcl    bl,1
  510417:	pop    esp
  510418:	std    
  510419:	mov    ebp,0x15bf30b4
  51041e:	add    BYTE PTR [ecx-0x2],0x9d
  510422:	cdq    
  510423:	rcl    BYTE PTR [esi+0x39],1
  510426:	inc    ecx
  510427:	xor    eax,0x69aa963f
  51042c:	cmp    bh,BYTE PTR [ebx-0x10]
  51042f:	mov    BYTE PTR [edx],dl
  510431:	jmp    0x4279:0x62698fd7
  510438:	lods   eax,DWORD PTR ds:[esi]
  510439:	cmp    al,BYTE PTR [ebx-0x1a5a3e10]
  51043f:	push   edi
  510440:	push   ebp
  510441:	pop    ss
  510442:	out    0xf,eax
  510444:	stos   DWORD PTR es:[edi],eax
  510445:	lea    esi,[ecx]
  510447:	mov    edi,0x73c9bf36
  51044c:	mov    DWORD PTR [edx+0x57],eax
  51044f:	or     al,0x0
  510451:	aam    0x35
  510453:	mul    BYTE PTR [ecx+0x15]
  510456:	pop    ds
  510457:	and    edi,DWORD PTR [ebp+0x78c2bf66]
  51045d:	sub    al,0x66
  51045f:	fist   DWORD PTR [ebx-0x25]
  510462:	and    dh,BYTE PTR [ecx-0x1b4920e]
  510468:	cmp    dl,al
  51046a:	add    BYTE PTR [ebp-0x44677b3f],0xe3
  510471:	sahf   
  510472:	jmp    0xd9d6:0xcb86f1a
  510479:	test   DWORD PTR [esi],esp
  51047b:	repnz and BYTE PTR [ebp+0x1f33807d],bh
  510482:	stos   BYTE PTR es:[edi],al
  510483:	in     al,0xb3
  510485:	fsub   QWORD PTR [edx+0x3d]
  510488:	mov    ds:0x77eeae5b,al
  51048d:	fs push ecx
  51048f:	jecxz  0x51045f
  510491:	cli    
  510492:	lods   eax,DWORD PTR ds:[esi]
  510493:	popa   
  510494:	stos   DWORD PTR es:[edi],eax
  510495:	mov    cl,0x59
  510497:	lea    edi,[ebp+0xe3676a6]
  51049d:	push   esp
  51049e:	pushf  
  51049f:	sbb    DWORD PTR [edx],esi
  5104a1:	add    eax,0x611cf6a3
  5104a6:	test   eax,0x92e887ed
  5104ab:	cmp    ecx,DWORD PTR [edx+0x41]
  5104ae:	sub    ebp,eax
  5104b0:	cmp    dh,BYTE PTR [esi]
  5104b2:	(bad)  
  5104b4:	sub    DWORD PTR [edx-0x36],edx
  5104b7:	push   0x3b
  5104b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5104ba:	cmp    DWORD PTR [edi+0x723e88f8],edx
  5104c0:	sahf   
  5104c1:	nop
  5104c2:	or     al,0x59
  5104c4:	jmp    0xf3d8:0x85f2bd81
  5104cb:	or     eax,0xcc017962
  5104d0:	push   cs
  5104d1:	loopne 0x510536
  5104d3:	mov    eax,ds:0x5eba1b15
  5104d8:	dec    ecx
  5104d9:	mov    esi,0xe705485
  5104de:	pop    esp
  5104df:	xchg   ebx,eax
  5104e0:	clc    
  5104e1:	xchg   DWORD PTR [eax],eax
  5104e3:	or     al,0x79
  5104e5:	mov    BYTE PTR [edx+edi*1],al
  5104e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5104e9:	out    dx,al
  5104ea:	jg     0x5104d5
  5104ec:	aaa    
  5104ed:	ret    
  5104ee:	mov    cl,BYTE PTR [eax]
  5104f0:	adc    cl,BYTE PTR [ebp+0x73]
  5104f3:	enter  0x63bd,0xf
  5104f7:	lods   al,BYTE PTR ds:[esi]
  5104f8:	push   edx
  5104f9:	lock sub ebp,DWORD PTR [ecx]
  5104fc:	cwde   
  5104fd:	push   cs
  5104fe:	xor    al,0xf6
  510500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510501:	sbb    eax,0x67e54d70
  510506:	pop    ss
  510507:	pop    ebx
  510508:	push   esp
  510509:	test   eax,0x8b5338a9
  51050e:	aas    
  51050f:	in     al,0xb7
  510511:	das    
  510512:	sbb    al,dh
  510514:	cld    
  510515:	sbb    bl,BYTE PTR [ecx+0x36d5283a]
  51051b:	pop    ds
  51051c:	cmp    DWORD PTR [ebx+0x3b940146],edi
  510522:	inc    esp
  510523:	aam    0x79
  510525:	fs stc 
  510527:	pop    ss
  510528:	adc    eax,0xfe46b3bc
  51052d:	push   eax
  51052e:	push   eax
  51052f:	and    DWORD PTR [edx-0x6f],0xffffffd7
  510533:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510534:	ds scas al,BYTE PTR es:[edi]
  510536:	xchg   DWORD PTR [ebp+0x476e38c7],edi
  51053c:	push   ebx
  51053d:	cmp    esi,esi
  51053f:	or     dh,BYTE PTR [ecx]
  510541:	xchg   BYTE PTR [esi+0x63dc3e58],al
  510547:	fmul   QWORD PTR [esp+edi*1-0x48]
  51054b:	and    ch,0x2a
  51054e:	hlt    
  51054f:	loop   0x51058d
  510551:	xor    ah,BYTE PTR [edi-0x62]
  510554:	adc    BYTE PTR [ecx+0x26ed2d3c],bl
  51055a:	arpl   di,dx
  51055c:	daa    
  51055d:	call   0xdbe4677d
  510562:	or     BYTE PTR [ebx+0x1d17ffd1],al
  510568:	arpl   dx,si
  51056a:	ror    ebp,cl
  51056c:	enter  0xcac2,0x5f
  510570:	sar    BYTE PTR [edx+eiz*8],0xea
  510574:	(bad)  
  510575:	adc    BYTE PTR ds:0x84f95cd1,al
  51057b:	inc    ecx
  51057c:	adc    DWORD PTR [edx-0x44],esi
  51057f:	xchg   ecx,eax
  510580:	jne    0x510571
  510582:	test   al,0xa2
  510584:	sub    eax,0x64d15b63
  510589:	out    0x8f,eax
  51058b:	cmp    eax,0x77eb715d
  510590:	sar    cl,1
  510592:	push   edi
  510593:	shl    DWORD PTR [edx],0x4d
  510596:	ds push ds
  510598:	leave  
  510599:	hlt    
  51059a:	and    eax,eax
  51059c:	mov    edx,0x3714a80
  5105a1:	mov    ch,0x2f
  5105a3:	int3   
  5105a4:	daa    
  5105a5:	adc    BYTE PTR [eax+0xd],ch
  5105a8:	pop    edx
  5105a9:	add    dh,cl
  5105ab:	(bad)  
  5105ac:	mov    ebx,0xe6996eb6
  5105b1:	loop   0x5105ce
  5105b3:	fcom   QWORD PTR [esi+0x7d]
  5105b6:	add    ah,BYTE PTR [edi-0x2b]
  5105b9:	push   ds
  5105ba:	lea    edx,[edi]
  5105bc:	xchg   ebx,eax
  5105bd:	xchg   ebx,eax
  5105be:	icebp  
  5105bf:	rcl    al,cl
  5105c1:	and    ecx,esi
  5105c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5105c4:	add    dl,dl
  5105c6:	adc    eax,0x80121011
  5105cb:	xchg   ebx,eax
  5105cc:	jns    0x510635
  5105ce:	mov    bh,0x30
  5105d0:	neg    BYTE PTR [ecx-0x20]
  5105d3:	push   ecx
  5105d4:	jnp    0x5105e0
  5105d6:	lock push edi
  5105d8:	xchg   ah,bh
  5105da:	xchg   bh,dl
  5105dc:	int3   
  5105dd:	jae    0x51059f
  5105df:	sbb    eax,0x88e385d3
  5105e4:	adc    eax,0xf0f46753
  5105e9:	out    dx,eax
  5105ea:	not    BYTE PTR [ebx+0x1e]
  5105ed:	dec    ebp
  5105ee:	arpl   WORD PTR cs:[ebp+0x17187503],di
  5105f5:	pop    ecx
  5105f6:	xor    esi,DWORD PTR [edi]
  5105f8:	dec    ebp
  5105f9:	mov    ebx,0x1f0817ce
  5105fe:	adc    bh,BYTE PTR ds:0xfa6dd7e2
  510604:	(bad)  [edi+0x2578326]
  51060a:	push   ds
  51060b:	mov    edx,0xafa0ef45
  510610:	dec    eax
  510611:	mov    al,ds:0x4dc50d02
  510616:	imul   esi,DWORD PTR [ecx],0xffffffcc
  510619:	fbstp  TBYTE PTR [eax]
  51061b:	dec    eax
  51061c:	xchg   edi,eax
  51061d:	inc    edi
  51061e:	mov    esi,0xe6915f04
  510623:	xchg   edi,eax
  510624:	xchg   edi,eax
  510625:	call   DWORD PTR [ecx+0x6193fe44]
  51062b:	pusha  
  51062c:	sub    eax,0x728ba3c5
  510631:	add    dh,BYTE PTR [ebp-0x423be042]
  510637:	jno    0x510622
  510639:	cs sub eax,0x79ce5b7c
  51063f:	popf   
  510640:	stos   DWORD PTR es:[edi],eax
  510641:	mov    ch,0x91
  510643:	mov    edi,DWORD PTR [edi+0x3833ad38]
  510649:	mov    bl,0x42
  51064b:	out    0x52,eax
  51064d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51064e:	sub    ebx,DWORD PTR ds:[edi+0x3ca128e0]
  510655:	inc    edx
  510656:	mov    esi,DWORD PTR [ebx]
  510658:	in     al,dx
  510659:	adc    esp,ecx
  51065b:	mov    bl,0x47
  51065d:	add    eax,edi
  51065f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  510660:	sub    BYTE PTR [edi-0x5c340ff8],dl
  510666:	mov    eax,0x62d45385
  51066b:	sub    esp,DWORD PTR [ecx]
  51066d:	sbb    dh,dl
  51066f:	cmp    ecx,DWORD PTR [edi]
  510671:	push   ss
  510672:	jl     0x510663
  510674:	test   al,0x3d
  510676:	aad    0xe6
  510678:	xchg   ecx,eax
  510679:	dec    BYTE PTR [ecx-0x23d15a0b]
  51067f:	fmul   DWORD PTR [eax+0x5b39dcc9]
  510685:	push   cs
  510686:	arpl   WORD PTR [ecx-0x1d],cx
  510689:	mov    ds:0x52932c44,al
  51068e:	pushf  
  51068f:	or     edi,0x23
  510692:	(bad)  
  510693:	adc    eax,0xeb022f5c
  510698:	fwait
  510699:	jnp    0x5106ff
  51069b:	retf   0xb2e8
  51069e:	or     BYTE PTR [eax+eiz*2-0x2],0xf
  5106a3:	fdiv   QWORD PTR [ebp+0x49]
  5106a6:	into   
  5106a7:	push   ss
  5106a8:	mov    esp,0x840d8a29
  5106ad:	adc    BYTE PTR [eax-0x7a],0x4a
  5106b1:	cwde   
  5106b2:	jp     0x5106ac
  5106b4:	sahf   
  5106b5:	xchg   esi,eax
  5106b6:	jnp    0x5106a4
  5106b8:	not    BYTE PTR [esi-0x69]
  5106bb:	jge    0x51066c
  5106bd:	outs   dx,BYTE PTR ds:[esi]
  5106be:	addr16 in al,0xdd
  5106c1:	fild   WORD PTR [eax-0xac978b4]
  5106c7:	xchg   esi,eax
  5106c8:	or     eax,0x1fd198f8
  5106cd:	in     al,dx
  5106ce:	push   0xd2c267e9
  5106d3:	xchg   esi,eax
  5106d4:	jne    0x510710
  5106d6:	out    dx,al
  5106d7:	aaa    
  5106d8:	add    BYTE PTR [edx],ah
  5106da:	jnp    0x51073c
  5106dc:	retf   0x66da
  5106df:	add    eax,0x39fed0d9
  5106e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5106e5:	outs   dx,BYTE PTR ds:[esi]
  5106e6:	js     0x510753
  5106e8:	(bad)  
  5106e9:	mov    bl,0x21
  5106eb:	add    DWORD PTR [eax+0x20],0x8793fa12
  5106f2:	push   cs
  5106f3:	pop    ebx
  5106f4:	nop
  5106f5:	push   eax
  5106f6:	mov    WORD PTR [ebx+0x1830fe04],ss
  5106fc:	adc    al,0xd0
  5106fe:	int3   
  5106ff:	ja     0x5106df
  510701:	fidiv  WORD PTR [edi-0x4e694a60]
  510707:	aam    0xfc
  510709:	outs   dx,BYTE PTR ds:[esi]
  51070a:	cmp    ebp,DWORD PTR [ecx+0x17]
  51070d:	in     eax,0x7
  51070f:	les    edi,FWORD PTR [ecx-0x6f2e3594]
  510715:	push   ebp
  510716:	xor    eax,0xd06a5d96
  51071b:	lds    ebp,FWORD PTR [esi+0x1227266]
  510721:	lahf   
  510722:	jmp    0x36a1e127
  510727:	sahf   
  510728:	mov    ch,0xc9
  51072a:	sbb    DWORD PTR [esp+ecx*2],eax
  51072d:	sti    
  51072e:	cld    
  51072f:	add    BYTE PTR [ecx],dl
  510731:	shr    BYTE PTR ds:0x2e567a04,1
  510737:	ret    0xb903
  51073a:	repz or ch,ah
  51073d:	leave  
  51073e:	ds pop ebx
  510740:	cmp    ebp,DWORD PTR [edx]
  510742:	mov    edi,DWORD PTR [ecx-0x3287e120]
  510748:	dec    ecx
  510749:	xor    eax,0xf086f9e2
  51074e:	fs cmp al,0x4d
  510751:	mov    WORD PTR [edx-0x31add16f],?
  510757:	cs push esp
  510759:	or     BYTE PTR [eax],ch
  51075b:	pop    es
  51075c:	inc    esi
  51075d:	clc    
  51075e:	popa   
  51075f:	xchg   edi,eax
  510760:	xchg   ebx,eax
  510761:	or     al,0xc3
  510763:	in     al,0x80
  510765:	jl     0x510725
  510767:	xchg   ebp,eax
  510768:	and    eax,0x683e010e
  51076d:	clc    
  51076e:	adc    BYTE PTR ds:0x34608f0f,bh
  510774:	dec    esp
  510775:	lds    eax,FWORD PTR [ebx]
  510777:	xchg   ebx,eax
  510778:	icebp  
  510779:	ret    
  51077a:	or     al,0xf3
  51077c:	mov    al,0x75
  51077e:	fdiv   DWORD PTR [ebp+0x4d]
  510781:	outs   dx,BYTE PTR ds:[esi]
  510782:	mov    bl,0x21
  510784:	pop    es
  510785:	mov    al,ds:0xcd70a15
  51078a:	imul   eax,DWORD PTR [ebx-0x41831a9b],0xfffffff2
  510791:	nop
  510792:	div    DWORD PTR [edi+0x3a]
  510795:	jae    0x5107bd
  510797:	repz scas eax,DWORD PTR es:[edi]
  510799:	repnz adc BYTE PTR [edi],dh
  51079c:	jp     0x51075e
  51079e:	and    BYTE PTR [esi+0x49ccda66],ah
  5107a4:	idiv   BYTE PTR [esi]
  5107a6:	mov    dh,0x1
  5107a8:	clc    
  5107a9:	fiadd  WORD PTR [esi+0x508ce28a]
  5107af:	cmp    BYTE PTR [ebx-0x36095999],0xb8
  5107b6:	test   DWORD PTR [eax],ecx
  5107b8:	push   esp
  5107b9:	cli    
  5107ba:	or     DWORD PTR [esi-0x65],0xffffffee
  5107be:	sub    BYTE PTR [ebx],bl
  5107c0:	ds cdq 
  5107c2:	popa   
  5107c3:	ins    BYTE PTR es:[edi],dx
  5107c4:	hlt    
  5107c5:	pop    ds
  5107c6:	test   al,0x1b
  5107c8:	mov    eax,0x91a99fe3
  5107cd:	mov    ebp,0xbc0ee8c
  5107d2:	hlt    
  5107d3:	(bad)  
  5107d4:	in     eax,dx
  5107d5:	mov    eax,esp
  5107d7:	icebp  
  5107d8:	mov    dh,0x52
  5107da:	sub    al,0x0
  5107dc:	adc    al,0x9b
  5107de:	push   ecx
  5107df:	mov    WORD PTR [edx+0x5d],?
  5107e2:	ror    DWORD PTR [edi-0x7dbb48f8],0xae
  5107e9:	dec    edx
  5107ea:	jae    0x5107dd
  5107ec:	xor    DWORD PTR [ebp+0x4b],esi
  5107ef:	test   dh,0x61
  5107f2:	jg     0x51077c
  5107f4:	xchg   BYTE PTR ds:0xd9fee0fe,dh
  5107fa:	mov    dh,dl
  5107fc:	cmp    ebx,DWORD PTR [edi]
  5107fe:	sbb    BYTE PTR [edx],ah
  510800:	mov    eax,0xcc32ba3
  510805:	call   0x9dff:0x435ee189
  51080c:	(bad)  
  51080d:	xlat   BYTE PTR ds:[ebx]
  51080e:	push   esi
  51080f:	pop    ds
  510810:	xor    esi,DWORD PTR ds:0x46733422
  510816:	mov    edi,?
  510818:	pop    ds
  510819:	out    dx,eax
  51081a:	add    eax,DWORD PTR [esi-0x3d6fd27]
  510820:	stc    
  510821:	ja     0x510892
  510823:	stos   DWORD PTR es:[edi],eax
  510824:	stos   BYTE PTR es:[edi],al
  510825:	sar    BYTE PTR [esi+ecx*8-0x1ed9d839],cl
  51082c:	xchg   BYTE PTR [esi-0x515530e7],dh
  510832:	fistp  DWORD PTR [esi+0x40a59a89]
  510838:	ss mov ebp,0xf810dd7b
  51083e:	add    DWORD PTR [ebp-0x25],ebp
  510841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510842:	xchg   esi,eax
  510843:	adc    bh,cl
  510845:	dec    edi
  510846:	and    bh,BYTE PTR [ebp-0x12da5fdc]
  51084c:	and    bl,BYTE PTR [ecx-0x50]
  51084f:	push   es
  510850:	ficomp WORD PTR [ebx-0x52]
  510853:	mov    ch,0xec
  510855:	arpl   bx,di
  510857:	inc    esp
  510858:	(bad)  
  510859:	loop   0x5108a8
  51085b:	mov    bh,0x66
  51085d:	bound  esp,QWORD PTR [ecx-0x2f]
  510860:	pop    edx
  510861:	ficom  WORD PTR [ebx-0x52]
  510864:	shl    dl,0xef
  510867:	sub    al,BYTE PTR ds:0x9411e0f4
  51086d:	adc    ecx,DWORD PTR [edi]
  51086f:	dec    ecx
  510870:	aam    0xdf
  510872:	jnp    0x51087c
  510874:	adc    ecx,esp
  510876:	add    DWORD PTR [ecx],esp
  510878:	loope  0x5108f1
  51087a:	scas   eax,DWORD PTR es:[edi]
  51087b:	mov    bl,0x8
  51087d:	iret   
  51087e:	mov    esi,0x1a27f8fe
  510883:	add    ch,bl
  510885:	push   edi
  510886:	adc    DWORD PTR ss:[esi-0x21],edi
  51088a:	add    al,0x2f
  51088c:	pop    esi
  51088d:	mov    ebp,0xa0d27134
  510892:	ret    
  510893:	pop    ecx
  510894:	mov    ds:0x835fd9d0,al
  510899:	and    DWORD PTR [esi+0x60],edi
  51089c:	dec    ebx
  51089d:	or     cl,BYTE PTR [edx]
  51089f:	mov    dh,0xa8
  5108a1:	call   0xb388:0x836f77ea
  5108a8:	adc    DWORD PTR [eax+0x5299f816],esp
  5108ae:	push   edi
  5108af:	ret    
  5108b0:	retf   
  5108b1:	dec    eax
  5108b2:	dec    edi
  5108b3:	ret    
  5108b4:	rcl    BYTE PTR [esi],cl
  5108b6:	jg     0x5108ca
  5108b8:	mov    dh,0xe9
  5108ba:	paddb  mm3,mm6
  5108bd:	(bad)  
  5108be:	jb     0x5108ac
  5108c0:	mov    eax,0xb2f4bd1
  5108c5:	cdq    
  5108c6:	jp     0x5108a1
  5108c8:	test   al,0x69
  5108ca:	stos   DWORD PTR es:[edi],eax
  5108cb:	push   edx
  5108cc:	pop    ecx
  5108cd:	(bad)  
  5108ce:	addr16 retw 0x7445
  5108d3:	frstor [eax-0x3e343f10]
  5108d9:	loop   0x5108e5
  5108db:	push   ecx
  5108dc:	in     al,dx
  5108dd:	sub    BYTE PTR [ecx],ch
  5108df:	jo     0x5108b6
  5108e1:	pop    edi
  5108e2:	pop    esp
  5108e3:	and    DWORD PTR [ebx],ebx
  5108e5:	pushf  
  5108e6:	mov    eax,0xf03adf21
  5108eb:	out    dx,eax
  5108ec:	mov    al,0xf
  5108ee:	pop    eax
  5108ef:	lods   eax,DWORD PTR ds:[esi]
  5108f0:	mov    eax,0x6130bbd5
  5108f5:	xchg   ebx,eax
  5108f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5108f7:	cmp    BYTE PTR [ebx-0x2d5e95d],dl
  5108fd:	xor    DWORD PTR [eax+0x77],esi
  510900:	ins    BYTE PTR es:[edi],dx
  510901:	pop    ds
  510902:	adc    ebx,ebx
  510904:	daa    
  510905:	sti    
  510906:	jnp    0x510974
  510908:	fld    TBYTE PTR ds:0x3fa67429
  51090e:	mov    eax,ds:0x9320e9cc
  510913:	mov    bh,0x87
  510915:	adc    edx,DWORD PTR [eax]
  510917:	sqrtps xmm2,XMMWORD PTR gs:[esi+eax*1]
  51091c:	bswap  ebp
  51091e:	mov    DWORD PTR [edx+0x64998270],edx
  510924:	pushf  
  510925:	add    al,0x7e
  510927:	sub    BYTE PTR [ebx+0x2d6dab8a],ah
  51092d:	jle    0x5108b9
  51092f:	js     0x51096e
  510931:	gs xchg esp,eax
  510933:	jmp    0xf8ec:0xd194947c
  51093a:	ret    0x5669
  51093d:	mov    ch,0x9
  51093f:	mov    BYTE PTR [ecx-0x75],0x50
  510943:	neg    cl
  510945:	fisub  WORD PTR [edx-0x5b]
  510948:	add    al,0x40
  51094a:	and    ebp,edx
  51094c:	xor    eax,0xdaf1f01
  510951:	pushf  
  510952:	fnstsw WORD PTR [edx]
  510954:	mov    ebp,0x9fb19735
  510959:	cld    
  51095a:	push   ss
  51095b:	loope  0x5108e6
  51095d:	(bad)  
  51095e:	and    bl,BYTE PTR [edi-0x5c]
  510961:	ins    DWORD PTR es:[edi],dx
  510962:	out    0x39,eax
  510964:	inc    esp
  510965:	(bad)  
  510966:	test   BYTE PTR [ebx-0x69e43a65],0x7b
  51096d:	dec    edx
  51096e:	inc    esp
  51096f:	ss ss pop esi
  510972:	pop    ss
  510973:	out    dx,al
  510974:	push   eax
  510975:	adc    BYTE PTR [eax-0x392a32ce],ah
  51097b:	inc    edx
  51097c:	mov    edi,0xc67d6664
  510981:	push   esp
  510982:	xchg   ebx,eax
  510983:	jmp    0x51092d
  510985:	jne    0x5109ee
  510987:	push   es
  510988:	mov    ebp,0x4b01d267
  51098d:	xchg   esi,eax
  51098e:	dec    ebp
  51098f:	or     edx,ebp
  510991:	aaa    
  510992:	pop    ebx
  510993:	rol    dh,0x66
  510996:	push   ds
  510997:	sahf   
  510998:	cs mov ah,0x6e
  51099b:	xor    eax,0xcc7115ab
  5109a0:	cli    
  5109a1:	daa    
  5109a2:	test   DWORD PTR [esi-0x74],0x3d956a8c
  5109a9:	(bad)  
  5109ab:	add    al,0xcd
  5109ad:	xchg   esi,eax
  5109ae:	mov    dl,0x52
  5109b0:	xor    edi,edi
  5109b2:	cmp    al,0x2a
  5109b4:	mov    ebx,0x584732e9
  5109b9:	in     eax,dx
  5109ba:	shl    DWORD PTR [ecx+0x34b90c59],cl
  5109c0:	and    DWORD PTR [ecx+0x31],ecx
  5109c3:	and    esp,ecx
  5109c5:	cmp    ecx,edi
  5109c7:	(bad)  
  5109c8:	loope  0x51094e
  5109ca:	hlt    
  5109cb:	mov    esi,DWORD PTR [eax]
  5109cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5109ce:	enter  0xa7b1,0xa8
  5109d2:	add    cl,dl
  5109d4:	cmp    ch,BYTE PTR [edx-0x5]
  5109d7:	sti    
  5109d8:	inc    esp
  5109d9:	push   eax
  5109da:	or     BYTE PTR [eax-0xe],0x91
  5109de:	cmc    
  5109df:	sar    BYTE PTR [ebx],cl
  5109e1:	pop    esp
  5109e2:	pusha  
  5109e3:	ror    ebx,1
  5109e5:	shl    DWORD PTR [eax+0x8],1
  5109e8:	(bad)  
  5109e9:	rol    DWORD PTR [eax],cl
  5109eb:	pushf  
  5109ec:	pop    edx
  5109ed:	jae    0x5109a2
  5109ef:	sub    DWORD PTR [eiz*1-0x1ac9b8c4],ecx
  5109f6:	in     al,0x55
  5109f8:	cld    
  5109f9:	lds    eax,FWORD PTR [ecx+edx*8]
  5109fc:	push   cs
  5109fd:	cmp    eax,0xa0acb28d
  510a02:	dec    edx
  510a03:	adc    ebp,DWORD PTR [edx]
  510a05:	push   ds
  510a06:	xor    BYTE PTR [ecx+0x9],dh
  510a09:	js     0x510a03
  510a0b:	jnp    0x5109d1
  510a0d:	outs   dx,DWORD PTR ds:[esi]
  510a0e:	imul   edi,DWORD PTR [edx-0x23],0x22c559db
  510a15:	ss popf 
  510a17:	push   esi
  510a18:	retf   
  510a19:	jno    0x510a1b
  510a1b:	pop    ss
  510a1c:	rcl    DWORD PTR [ebx+0x1b93bd8a],0x56
  510a23:	jle    0x5109e2
  510a25:	push   esp
  510a26:	adc    eax,0x48fdc848
  510a2b:	pop    ebx
  510a2c:	das    
  510a2d:	mov    ds,WORD PTR [ecx-0x59]
  510a30:	fld    QWORD PTR [ecx-0x3e760163]
  510a36:	pop    es
  510a37:	mov    WORD PTR [eax],es
  510a39:	dec    edx
  510a3a:	inc    ebx
  510a3b:	or     al,0x72
  510a3d:	je     0x5109d9
  510a3f:	xor    DWORD PTR [edx+ebx*1-0x5d2b94bc],edx
  510a46:	sub    al,0xa9
  510a48:	mov    esi,edx
  510a4a:	test   eax,0xb1c8009e
  510a4f:	repz adc BYTE PTR [ebp-0x43],0xd4
  510a54:	int3   
  510a55:	leave  
  510a56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  510a57:	scas   al,BYTE PTR es:[edi]
  510a58:	xchg   edi,eax
  510a59:	dec    esi
  510a5a:	inc    eax
  510a5b:	xchg   esi,eax
  510a5c:	pop    esp
  510a5d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  510a5f:	mov    bl,0xa1
  510a61:	fwait
  510a62:	inc    esp
  510a63:	retf   
  510a64:	xchg   esp,eax
  510a65:	call   0xae478e2c
  510a6a:	push   ebp
  510a6b:	and    BYTE PTR [edi-0x145930b],bh
  510a71:	leave  
  510a72:	jb     0x510abe
  510a74:	aad    0xb9
  510a76:	xor    DWORD PTR [edi-0xc43cb59],esi
  510a7c:	mov    ebp,DWORD PTR [esi]
  510a7e:	or     eax,0xa9526932
  510a83:	pop    ebx
  510a84:	adc    DWORD PTR [edx+eax*1-0x6567c9e4],0xd1af5b01
  510a8f:	or     al,0x5e
  510a91:	imul   edi,esi,0xb4ed4195
  510a97:	imul   ebx,DWORD PTR [ecx],0x25
  510a9a:	lahf   
  510a9b:	pop    edi
  510a9c:	mov    cl,0xcd
  510a9e:	scas   eax,DWORD PTR es:[edi]
  510a9f:	and    BYTE PTR [edi],cl
  510aa1:	jl     0x510adc
  510aa3:	xor    BYTE PTR [ebx-0x3f],dl
  510aa6:	pop    esi
  510aa7:	arpl   WORD PTR [edi],sp
  510aa9:	push   cs
  510aaa:	ins    BYTE PTR es:[edi],dx
  510aab:	retf   0x279b
  510aae:	sub    dh,BYTE PTR [eax+0x20fa4e2b]
  510ab4:	es sub ecx,edi
  510ab7:	pop    ebx
  510ab8:	mov    ecx,0xe4d5d659
  510abd:	lods   eax,DWORD PTR ds:[esi]
  510abe:	(bad)  
  510abf:	in     eax,0xd8
  510ac1:	dec    eax
  510ac2:	xchg   ecx,eax
  510ac3:	fisubr DWORD PTR [ebx-0x28752bff]
  510ac9:	mov    dh,0xa3
  510acb:	in     al,0xfc
  510acd:	or     eax,0x652bf15d
  510ad2:	loope  0x510a6a
  510ad4:	popf   
  510ad5:	std    
  510ad6:	ja     0x510aed
  510ad8:	(bad)  
  510ad9:	xor    BYTE PTR [esi-0x38],0xfc
  510add:	add    edx,edi
  510adf:	nop
  510ae0:	inc    esp
  510ae1:	mov    bl,BYTE PTR [eax+0x222494e3]
  510ae7:	sbb    eax,0x39f5ba15
  510aec:	lea    edx,[edx-0x6429554d]
  510af2:	outs   dx,DWORD PTR ds:[esi]
  510af3:	add    cl,BYTE PTR [ebp-0x2]
  510af6:	mov    cl,0x71
  510af8:	sub    BYTE PTR [esi-0x752757d9],bl
  510afe:	sbb    DWORD PTR [edx-0x80],ebp
  510b01:	hlt    
  510b02:	test   ecx,0x72f813b6
  510b08:	ins    BYTE PTR es:[edi],dx
  510b09:	mov    BYTE PTR [ebp+0xf],ah
  510b0c:	or     esp,DWORD PTR [ecx-0x4e8a6bed]
  510b12:	and    BYTE PTR [esi+eiz*2+0x24978ea2],0xed
  510b1a:	dec    eax
  510b1b:	int3   
  510b1c:	cwde   
  510b1d:	cwde   
  510b1e:	and    ah,BYTE PTR [ecx+0x79]
  510b21:	mov    ebp,0x84288d73
  510b26:	stos   BYTE PTR es:[edi],al
  510b27:	lahf   
  510b28:	into   
  510b29:	js     0x510b44
  510b2b:	scas   eax,DWORD PTR es:[edi]
  510b2c:	in     eax,dx
  510b2d:	xchg   DWORD PTR [esi-0x5c074add],eax
  510b33:	leave  
  510b34:	adc    BYTE PTR [eax+0x67cce1dc],cl
  510b3a:	push   0xf9fea836
  510b3f:	pusha  
  510b40:	loope  0x510b84
  510b42:	or     eax,DWORD PTR [esi+0x66]
  510b45:	(bad)  
  510b47:	jno    0x510b87
  510b49:	loop   0x510b77
  510b4b:	pop    ebp
  510b4c:	jo     0x510ba5
  510b4e:	lock jge 0x510bb9
  510b51:	push   esp
  510b52:	mov    ebp,0x56d06c33
  510b57:	mov    bh,cl
  510b59:	xor    eax,0xe153e63a
  510b5e:	js     0x510bd4
  510b60:	mov    cl,0x41
  510b62:	dec    bx
  510b64:	repz sub DWORD PTR [ebx+ecx*4-0x908457c],edi
  510b6c:	hlt    
  510b6d:	lods   al,BYTE PTR ds:[esi]
  510b6e:	xor    eax,0x84561f76
  510b73:	sbb    ebp,0x9bffb097
  510b79:	dec    esi
  510b7a:	xchg   BYTE PTR [ecx-0x4b],ch
  510b7d:	sbb    eax,0x68ae4885
  510b82:	ins    BYTE PTR es:[edi],dx
  510b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510b84:	jmp    0x18069f1f
  510b89:	pop    ebx
  510b8a:	jbe    0x510b5d
  510b8c:	mov    ds:0x3f52f07,al
  510b91:	mov    ebx,0x5eb9c6df
  510b96:	clc    
  510b97:	sub    DWORD PTR [ebp+0x7a322a87],eax
  510b9d:	sar    DWORD PTR [ebx-0x32],0xa6
  510ba1:	push   esp
  510ba2:	cmp    esp,DWORD PTR [ecx+0x337c6c9e]
  510ba8:	popa   
  510ba9:	outs   dx,DWORD PTR ds:[esi]
  510baa:	mov    edx,0x4c1551c9
  510baf:	pop    eax
  510bb0:	clc    
  510bb1:	in     eax,dx
  510bb2:	dec    ecx
  510bb3:	dec    edx
  510bb4:	ret    0x8637
  510bb7:	inc    edi
  510bb8:	add    DWORD PTR [ebp-0x42cd5419],eax
  510bbe:	mov    ah,0x3e
  510bc0:	mov    DWORD PTR [edi+0x3977055b],eax
  510bc6:	inc    edx
  510bc7:	xchg   ecx,eax
  510bc8:	(bad)  
  510bc9:	fisttp WORD PTR [edx]
  510bcb:	mov    ds:0x7165ed34,al
  510bd0:	out    0x8c,eax
  510bd2:	push   esi
  510bd3:	cmp    eax,0xf1f86bab
  510bd8:	mov    al,ds:0x99cbdf4e
  510bdd:	sub    ebp,DWORD PTR [edi-0x50]
  510be0:	(bad)  
  510be1:	jns    0x510b72
  510be3:	xchg   esi,eax
  510be4:	dec    esi
  510be5:	fucomp st(2)
  510be7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510be8:	push   eax
  510be9:	or     bh,dl
  510beb:	rcr    al,cl
  510bed:	inc    ecx
  510bee:	sbb    al,0x25
  510bf0:	test   eax,0x72e934fa
  510bf5:	push   esi
  510bf6:	add    DWORD PTR [esi],eax
  510bf8:	pop    eax
  510bf9:	int3   
  510bfa:	call   0x4f4c:0x36074c2d
  510c01:	outs   dx,BYTE PTR ds:[esi]
  510c02:	adc    eax,0x2d4c731b
  510c07:	sub    al,BYTE PTR [esi]
  510c09:	adc    al,BYTE PTR [edi]
  510c0b:	fild   WORD PTR [esi]
  510c0d:	adc    eax,0xe71a74c7
  510c12:	retf   
  510c13:	pop    esi
  510c14:	mov    dh,0x4d
  510c16:	jecxz  0x510bc2
  510c18:	jg     0x510bd9
  510c1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  510c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  510c1c:	retf   0x7caa
  510c1f:	jnp    0x510bc8
  510c21:	test   DWORD PTR [esi+0x73],ebx
  510c24:	pop    ecx
  510c25:	scas   al,BYTE PTR es:[edi]
  510c26:	shl    edi,cl
  510c28:	jno    0x510c3b
  510c2a:	sub    cl,ah
  510c2c:	lods   eax,DWORD PTR ds:[esi]
  510c2d:	dec    eax
  510c2e:	nop
  510c2f:	js     0x510c34
  510c31:	mov    esp,0xbd3eec7c
  510c36:	aad    0x13
  510c38:	fs mov ebp,0x6cd5fc2c
  510c3e:	or     ch,BYTE PTR ds:0xd80617fd
  510c44:	xchg   ecx,eax
  510c45:	mov    esi,0xc0812213
  510c4a:	xchg   ecx,eax
  510c4b:	ja     0x510c20
  510c4d:	scas   eax,DWORD PTR es:[edi]
  510c4e:	test   DWORD PTR [ebp-0x3661e0d7],esi
  510c54:	mov    DWORD PTR [esi-0x15],eax
  510c57:	scas   eax,DWORD PTR es:[edi]
  510c58:	adc    BYTE PTR [eax+0x5aa88c6a],ah
  510c5e:	cmp    bl,BYTE PTR [esi+edx*1+0x1c]
  510c62:	adc    edi,DWORD PTR [eax+0x1c]
  510c65:	(bad)  
  510c66:	loop   0x510c50
  510c68:	add    bl,ah
  510c6a:	mov    eax,ds:0xb1096a38
  510c6f:	and    bh,ch
  510c71:	repnz scas eax,DWORD PTR es:[edi]
  510c73:	mov    DWORD PTR [ecx+0x13],esi
  510c76:	div    bl
  510c78:	mov    ebx,DWORD PTR [edx+edi*2-0x8]
  510c7c:	inc    eax
  510c7d:	dec    ebp
  510c7e:	sahf   
  510c7f:	aas    
  510c80:	cmp    DWORD PTR [ebx-0x27],ecx
  510c83:	xchg   edx,eax
  510c84:	or     dh,BYTE PTR [eax-0x53]
  510c87:	sbb    al,0xa9
  510c89:	mov    al,0x27
  510c8b:	(bad)  
  510c8c:	clc    
  510c8d:	pop    ecx
  510c8e:	test   al,dh
  510c90:	das    
  510c91:	mov    eax,0x5bfc9bf2
  510c96:	push   ebx
  510c97:	or     al,0x47
  510c99:	es (bad) 
  510c9b:	jmp    0x510c30
  510c9d:	jl     0x510c7e
  510c9f:	fs mov eax,0x59f908cc
  510ca5:	push   ebx
  510ca6:	xchg   DWORD PTR [esi-0x21],esp
  510ca9:	stc    
  510caa:	jno    0x510d0e
  510cac:	fistp  QWORD PTR [ebx]
  510cae:	mov    ds:0xb5e8f1b9,al
  510cb3:	(bad)  
  510cb5:	test   eax,0x9b3b0369
  510cba:	pop    es
  510cbb:	retf   0x70e3
  510cbe:	cli    
  510cbf:	icebp  
  510cc0:	(bad)  
  510cc1:	sub    al,0x63
  510cc3:	ret    0xd92a
  510cc6:	sti    
  510cc7:	mov    al,ds:0x80f5e1cf
  510ccc:	lea    edx,[esi+0x53b04a5f]
  510cd2:	inc    esp
  510cd3:	mov    al,0x68
  510cd5:	lahf   
  510cd6:	dec    esi
  510cd7:	into   
  510cd8:	and    esp,DWORD PTR [edi-0x7674715a]
  510cde:	lds    esp,FWORD PTR [eax-0x3eb557c9]
  510ce4:	and    bl,dh
  510ce6:	xchg   edi,eax
  510ce7:	stos   BYTE PTR es:[edi],al
  510ce8:	jecxz  0x510d22
  510cea:	push   ecx
  510ceb:	mov    cl,0x53
  510ced:	pop    esp
  510cee:	or     cl,al
  510cf0:	mov    ch,BYTE PTR [esi]
  510cf2:	neg    DWORD PTR [edx+0x5f4ed994]
  510cf8:	and    eax,0x539803a6
  510cfd:	mov    ecx,0x6eb1988a
  510d02:	dec    edx
  510d03:	icebp  
  510d04:	test   BYTE PTR [edx-0x53],ch
  510d07:	mov    bl,0x57
  510d09:	stos   DWORD PTR es:[edi],eax
  510d0a:	(bad)  
  510d0b:	mov    esp,0x81bc3aa5
  510d10:	pusha  
  510d11:	sbb    eax,ecx
  510d13:	dec    edi
  510d14:	ins    BYTE PTR es:[edi],dx
  510d15:	and    ebx,DWORD PTR [ecx-0x6c8d1d51]
  510d1b:	pop    ds
  510d1c:	mov    ecx,0x2ba8ca0f
  510d21:	popa   
  510d22:	std    
  510d23:	mov    eax,ds:0x1953dc38
  510d28:	pop    esp
  510d29:	mov    dh,0xf4
  510d2b:	jno    0x510d72
  510d2d:	pushf  
  510d2e:	rol    edi,0x79
  510d31:	hlt    
  510d32:	jno    0x510d22
  510d34:	sbb    al,bl
  510d36:	add    al,0xc8
  510d38:	sbb    BYTE PTR [eax+0x3a],bl
  510d3b:	call   0x492a6d9b
  510d40:	jb     0x510d17
  510d42:	push   ebx
  510d43:	or     ch,BYTE PTR [ebp-0x278d06f0]
  510d49:	retf   0xc043
  510d4c:	push   esp
  510d4d:	jle    0x510d72
  510d4f:	ins    DWORD PTR es:[edi],dx
  510d50:	or     eax,0x91767410
  510d55:	adc    DWORD PTR [esi],edi
  510d57:	into   
  510d58:	xchg   ebx,eax
  510d59:	or     esp,DWORD PTR [edx-0x66]
  510d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510d5d:	std    
  510d5e:	or     BYTE PTR [eax+0x5293f592],bh
  510d64:	sti    
  510d65:	div    BYTE PTR [eax]
  510d67:	repz fcmovne st,st(4)
  510d6a:	ins    BYTE PTR es:[edi],dx
  510d6b:	fcmovb st,st(5)
  510d6d:	jne    0x510d66
  510d6f:	add    BYTE PTR [edx+0x19],cl
  510d72:	icebp  
  510d73:	aam    0xbf
  510d75:	xor    eax,DWORD PTR [esi+0x78]
  510d78:	push   cs
  510d79:	add    BYTE PTR [edi-0x71e91695],dh
  510d7f:	gs push esi
  510d81:	jmp    0x510dc2
  510d83:	(bad)  
  510d84:	cmc    
  510d85:	jo     0x510db5
  510d87:	mov    BYTE PTR [edx+esi*1],dh
  510d8a:	xchg   BYTE PTR [ecx],dl
  510d8c:	xor    BYTE PTR [esp+edi*2-0xc],ah
  510d90:	jge    0x510dcc
  510d92:	xchg   esi,eax
  510d93:	jne    0x510d34
  510d95:	repz mov ds:0xb0a6c6b0,al
  510d9b:	jo     0x510d30
  510d9d:	add    ah,bh
  510d9f:	dec    esp
  510da0:	jmp    0x510da3
  510da2:	jmp    0x534c29f6
  510da7:	and    bl,BYTE PTR [ecx+0x4dac6d84]
  510dad:	or     BYTE PTR [ebp+0x8adc174],bl
  510db3:	(bad)  
  510db4:	into   
  510db5:	nop
  510db6:	stc    
  510db7:	fisttp QWORD PTR [ecx+0x72]
  510dba:	pop    edi
  510dbb:	outs   dx,BYTE PTR ds:[esi]
  510dbc:	inc    eax
  510dbd:	inc    edi
  510dbe:	pop    esi
  510dbf:	imul   esi,DWORD PTR [eax+0x1a75025a],0xffffff8b
  510dc6:	bound  esp,QWORD PTR [esi-0x1ce31a37]
  510dcc:	xchg   BYTE PTR [ebp+0x6],ch
  510dcf:	pushf  
  510dd0:	jge    0x510dfe
  510dd2:	jbe    0x510e49
  510dd4:	dec    eax
  510dd5:	mov    edi,DWORD PTR [esp+ebx*8+0x6f]
  510dd9:	fisubr WORD PTR [ebp-0x77]
  510ddc:	xor    DWORD PTR [ebx+0x6690368f],ebx
  510de2:	mov    dh,ch
  510de4:	mov    es,WORD PTR [edi-0x4b]
  510de7:	pop    esp
  510de8:	fwait
  510de9:	daa    
  510dea:	icebp  
  510deb:	out    0x83,eax
  510ded:	dec    edi
  510dee:	test   al,0xd9
  510df0:	mov    WORD PTR [ecx],es
  510df2:	push   0xffffffbf
  510df4:	push   0x412671f3
  510df9:	neg    BYTE PTR gs:[eax+0x618a2f3e]
  510e00:	repz fld st(0)
  510e03:	lahf   
  510e04:	sbb    al,0x3e
  510e06:	call   0x7f39d13c
  510e0b:	adc    eax,0x2fd79152
  510e10:	das    
  510e11:	sar    BYTE PTR [edx],1
  510e13:	dec    ebp
  510e14:	sub    esp,DWORD PTR [eax-0x4e]
  510e17:	dec    esi
  510e18:	into   
  510e19:	sbb    eax,0x4ff83f4e
  510e1e:	jmp    FWORD PTR [esi+0x124bf12c]
  510e24:	js     0x510dcc
  510e26:	add    DWORD PTR [esi],ebx
  510e28:	out    dx,eax
  510e29:	sub    esp,ebx
  510e2b:	xor    DWORD PTR fs:[edx+0x45],edx
  510e2f:	shl    DWORD PTR [edx-0x342b3bff],cl
  510e35:	mov    bh,0xf4
  510e37:	mov    al,0x9c
  510e39:	jb     0x510e08
  510e3b:	dec    edx
  510e3c:	icebp  
  510e3d:	je     0x510e15
  510e3f:	fcmovb st,st(3)
  510e42:	xchg   edi,eax
  510e43:	push   eax
  510e44:	xor    DWORD PTR [ecx],ecx
  510e46:	add    BYTE PTR [esi-0x13],bl
  510e49:	jns    0x510ead
  510e4b:	jmp    0xd7b0:0xa31eee44
  510e52:	push   ebp
  510e53:	and    DWORD PTR [edi],ebx
  510e55:	ret    
  510e56:	add    BYTE PTR [edx-0x47a92d7a],ah
  510e5c:	pop    ecx
  510e5d:	shl    BYTE PTR [ecx],1
  510e5f:	inc    eax
  510e60:	inc    ebx
  510e61:	(bad)  
  510e62:	cli    
  510e63:	iret   
  510e64:	(bad)  
  510e65:	push   ebx
  510e66:	nop
  510e67:	in     al,dx
  510e68:	inc    eax
  510e69:	scas   eax,DWORD PTR es:[edi]
  510e6a:	pusha  
  510e6b:	outs   dx,DWORD PTR ds:[esi]
  510e6c:	aam    0xd1
  510e6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  510e6f:	push   eax
  510e70:	inc    ebx
  510e71:	xchg   esp,eax
  510e72:	dec    ecx
  510e73:	rol    ecx,0x20
  510e76:	cwde   
  510e77:	retf   
  510e78:	(bad)  
  510e79:	stos   BYTE PTR es:[edi],al
  510e7a:	or     DWORD PTR [edi],edx
  510e7c:	xor    ebp,0x3d
  510e7f:	mov    edx,0xf6330ea5
  510e84:	(bad)  
  510e85:	call   0xaeab:0xf22f1bd
  510e8c:	je     0x510e2f
  510e8e:	jo     0x510e7b
  510e90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  510e91:	xor    al,0x24
  510e93:	jnp    0x510e1a
  510e95:	icebp  
  510e96:	cs fwait
  510e98:	adc    al,0x70
  510e9a:	fs jae 0x510e9a
  510e9d:	bnd jg 0x510ea6
  510ea0:	push   edi
  510ea1:	lahf   
  510ea2:	jns    0x510e5c
  510ea4:	pop    esi
  510ea5:	jbe    0x510e81
  510ea7:	imul   esp,esp,0x2e
  510eaa:	retf   
  510eab:	jae    0x510ec6
  510ead:	fcom   QWORD PTR [ebp-0x7e8d650c]
  510eb3:	dec    esi
  510eb4:	test   ebx,esi
  510eb6:	pop    DWORD PTR [edi]
  510eb8:	adc    eax,0xf39133c4
  510ebd:	or     ch,ah
  510ebf:	icebp  
  510ec0:	je     0xa30a8ea0
  510ec6:	ret    0xca46
  510ec9:	sub    ebp,DWORD PTR [eax]
  510ecb:	(bad)  
  510ecd:	ins    DWORD PTR es:[edi],dx
  510ece:	call   0xcce3:0x1d772fdd
  510ed5:	hlt    
  510ed6:	add    DWORD PTR [ebp-0x3938ee68],ebx
  510edc:	inc    ebp
  510edd:	aas    
  510ede:	jg     0x510e85
  510ee0:	and    edi,DWORD PTR [edx]
  510ee2:	jno    0x510f0b
  510ee4:	cmp    DWORD PTR [eax-0x6],ecx
  510ee7:	inc    edx
  510ee8:	sbb    DWORD PTR ds:0x928ac2ea,ebp
  510eee:	in     al,dx
  510eef:	repnz mov ds:0xde0a42a8,al
  510ef5:	icebp  
  510ef6:	dec    edx
  510ef7:	cmp    esi,DWORD PTR [esi+0x8c80914]
  510efd:	mov    ebx,0xe58a78a7
  510f02:	mov    eax,ds:0x8681b3be
  510f07:	cld    
  510f08:	pop    es
  510f09:	mov    ebp,DWORD PTR [edi-0xd]
  510f0c:	mov    ah,0x75
  510f0e:	sbb    cl,BYTE PTR [ebp+0x74837512]
  510f14:	sub    ebp,0xffffffa8
  510f17:	push   ebp
  510f18:	pop    es
  510f19:	push   esi
  510f1a:	outs   dx,BYTE PTR ds:[esi]
  510f1b:	jecxz  0x510f2c
  510f1d:	cmp    eax,0xadb3f612
  510f22:	cmp    al,0xbf
  510f24:	fistp  DWORD PTR [ecx+0x252e5a4e]
  510f2a:	jnp    0x510f82
  510f2c:	mov    edx,0xd0548062
  510f31:	jnp    0x510fb0
  510f33:	sub    esp,DWORD PTR [ecx]
  510f35:	sbb    ecx,DWORD PTR [esp+esi*2-0x13]
  510f39:	or     ebx,ecx
  510f3b:	(bad)  
  510f3c:	leave  
  510f3d:	vpunpckldq ymm0,ymm3,YMMWORD PTR [ecx-0x4ec7acef]
  510f45:	pop    eax
  510f46:	jo     0x510f58
  510f48:	sub    DWORD PTR [ebx+esi*4-0x1492ffa0],esi
  510f4f:	jnp    0x510f66
  510f51:	es in  al,dx
  510f53:	bound  edi,QWORD PTR [esi]
  510f55:	mov    ecx,0xd6a039a0
  510f5a:	mov    bh,0x3e
  510f5c:	ins    BYTE PTR es:[edi],dx
  510f5d:	mov    cl,0x73
  510f5f:	dec    edi
  510f60:	mov    esp,0xb974f8cb
  510f65:	xor    DWORD PTR [ebp+0x6b],edi
  510f68:	sub    DWORD PTR [eax],edi
  510f6a:	call   0x442b:0xc5a47491
  510f71:	dec    edx
  510f72:	mov    esp,ebx
  510f74:	lock in eax,dx
  510f76:	push   0x66fbf63d
  510f7b:	sbb    BYTE PTR [ebx-0x75],cl
  510f7e:	pop    esi
  510f7f:	ror    edi,1
  510f81:	mov    esi,0xd028bf89
  510f86:	cmp    DWORD PTR [ecx+0x1c],edx
  510f89:	adc    cl,BYTE PTR [ebp+0x6ee13d78]
  510f8f:	scas   eax,DWORD PTR es:[edi]
  510f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  510f91:	sti    
  510f92:	mov    al,ds:0xa4123c14
  510f97:	(bad)  [edx+0x1d]
  510f9a:	clc    
  510f9b:	daa    
  510f9c:	push   ss
  510f9d:	(bad)  
  510f9e:	stos   DWORD PTR es:[edi],eax
  510f9f:	jl     0x510fdb
  510fa1:	mov    gs,WORD PTR [ebx-0x16]
  510fa4:	ffreep st(5)
  510fa6:	inc    esi
  510fa7:	rol    eax,cl
  510fa9:	pop    esi
  510faa:	jno    0x510f81
  510fac:	daa    
  510fad:	ds nop
  510faf:	iret   
  510fb0:	ror    DWORD PTR [ebx+0x68],cl
  510fb3:	xor    ah,dh
  510fb5:	in     al,0x57
  510fb7:	gs push ss
  510fb9:	inc    esi
  510fba:	aas    
  510fbb:	jge    0x510f5a
  510fbd:	inc    esi
  510fbe:	cmp    ebx,ebp
  510fc0:	lds    ebp,FWORD PTR [ebx+ecx*8+0x366d3a57]
  510fc7:	outs   dx,DWORD PTR ds:[esi]
  510fc8:	imul   BYTE PTR [edx-0x47]
  510fcb:	rcr    DWORD PTR [ebx+0x68],1
  510fce:	xor    al,0x1d
  510fd0:	das    
  510fd1:	pop    edx
  510fd2:	loope  0x511018
  510fd4:	das    
  510fd5:	push   esp
  510fd6:	(bad)  
  510fd7:	xchg   edi,eax
  510fd8:	daa    
  510fd9:	mov    bh,0x4e
  510fdb:	ja     0x51105c
  510fdd:	fstp   QWORD PTR [eax-0x66084c83]
  510fe3:	mov    DWORD PTR ds:0xc9fd8f4a,eax
  510fe9:	mov    cl,BYTE PTR [edi+0x3]
  510fec:	out    0xaa,al
  510fee:	popf   
  510fef:	(bad)  
  510ff0:	call   FWORD PTR [esi+0x26a9691b]
  510ff6:	retf   0x7369
  510ff9:	xchg   esi,eax
  510ffa:	sti    
  510ffb:	push   ecx
  510ffc:	stc    
  510ffd:	mov    edi,0xb2f55f07
  511002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511003:	inc    eax
  511004:	nop
  511005:	test   BYTE PTR [eax-0x3a],bl
  511008:	sub    BYTE PTR [ebx+0x2d],ah
  51100b:	add    DWORD PTR [ebx-0x2038719],ebp
  511011:	cmp    esp,esi
  511013:	push   edi
  511014:	xchg   ebx,eax
  511015:	or     al,0x6a
  511017:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511018:	pop    ebx
  511019:	cwde   
  51101a:	gs ja  0x511001
  51101d:	retf   0x1398
  511020:	test   eax,0xd8e37fc3
  511025:	jmp    0x2f6f4201
  51102a:	xor    cl,bl
  51102c:	call   0x928c:0xe123d65f
  511033:	js     0x510fc4
  511035:	(bad)
  511038:	pop    ebp
  511039:	add    ebp,ebp
  51103b:	test   al,0xf0
  51103d:	dec    esi
  51103e:	push   ds
  51103f:	js     0x511039
  511041:	push   edx
  511042:	shr    DWORD PTR [eax],1
  511044:	ret    
  511045:	fld    QWORD PTR [esi-0x5f]
  511048:	mov    esp,0xe5d70ca9
  51104d:	jmp    0xd3cefba6
  511052:	sbb    cl,BYTE PTR [ebx]
  511054:	adc    al,0x87
  511056:	add    dh,BYTE PTR [edx+edx*8]
  511059:	or     BYTE PTR [eax*8-0x62f60fa3],dl
  511060:	dec    edi
  511061:	ret    
  511062:	loopne 0x5110c9
  511064:	in     eax,dx
  511065:	loop   0x51103a
  511067:	xlat   BYTE PTR ds:[ebx]
  511068:	aaa    
  511069:	inc    ebx
  51106a:	ret    
  51106b:	pusha  
  51106c:	gs cld 
  51106e:	cs mov ebp,0xb150fefa
  511074:	cmp    al,BYTE PTR [ebx+0x69]
  511077:	stos   BYTE PTR es:[edi],al
  511078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511079:	ds call 0x26bd:0xedf9c596
  511081:	iret   
  511082:	ret    0x3538
  511085:	pop    ds
  511086:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511087:	jmp    0x521c76e0
  51108c:	xor    edx,DWORD PTR [eax]
  51108e:	jg     0x5110ab
  511090:	icebp  
  511091:	add    DWORD PTR [ebx+0x17c9cbae],eax
  511097:	mov    ebp,0x24010d7f
  51109c:	in     eax,0xf3
  51109e:	test   eax,0xaf1d4dbc
  5110a3:	mov    dl,0x87
  5110a5:	push   es
  5110a6:	aaa    
  5110a7:	repz fwait
  5110a9:	pop    es
  5110aa:	pop    eax
  5110ab:	call   0xc861c35b
  5110b0:	out    dx,al
  5110b1:	stc    
  5110b2:	rol    ebx,1
  5110b4:	mov    cl,0xbb
  5110b6:	hlt    
  5110b7:	xchg   ah,ah
  5110b9:	or     ch,BYTE PTR [edx-0x64]
  5110bc:	popa   
  5110bd:	sub    ecx,esi
  5110bf:	call   0x645ff39c
  5110c4:	sub    BYTE PTR [ecx-0xb6c7e08],ch
  5110ca:	adc    ebp,ebp
  5110cc:	jae    0x5110cf
  5110ce:	(bad)  
  5110cf:	mov    ecx,0x9e459612
  5110d4:	mov    al,ds:0x7819db80
  5110d9:	inc    ebp
  5110da:	mov    eax,0xfb7a578f
  5110df:	clc    
  5110e0:	inc    cx
  5110e2:	xchg   ebp,eax
  5110e3:	or     esi,DWORD PTR [ebx-0x49256b4a]
  5110e9:	fld    TBYTE PTR [eax+0x5e]
  5110ec:	(bad)  
  5110ee:	into   
  5110ef:	and    DWORD PTR [esi+eiz*4-0x48],edi
  5110f3:	mov    edx,esp
  5110f5:	or     bl,ah
  5110f7:	loop   0x51108f
  5110f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5110fa:	mov    ecx,0x522bafc2
  5110ff:	or     dl,BYTE PTR [ebx+0x73]
  511102:	sub    BYTE PTR [edx],0xfe
  511105:	rcr    ah,1
  511107:	stos   BYTE PTR es:[edi],al
  511108:	mov    ch,0xd2
  51110a:	call   0x76def647
  51110f:	push   eax
  511110:	gs fs jne 0x511143
  511114:	aad    0x98
  511116:	leave  
  511117:	sbb    ah,BYTE PTR [edi-0x5c]
  51111a:	and    DWORD PTR [eax],0xb9b5ed6b
  511120:	adc    al,0xc6
  511122:	(bad)  
  511124:	pop    ebp
  511125:	dec    edx
  511126:	adc    DWORD PTR [ecx+0x37],esi
  511129:	loope  0x51117f
  51112b:	in     al,dx
  51112c:	mul    BYTE PTR [edi]
  51112e:	pop    ds
  51112f:	iret   
  511130:	inc    edx
  511131:	imul   ebx,ecx,0x1c
  511134:	fistp  DWORD PTR [eax]
  511136:	ja     0x5111b5
  511138:	outs   dx,DWORD PTR ds:[esi]
  511139:	fisttp WORD PTR [ebp+0x14374926]
  51113f:	dec    edi
  511140:	les    eax,FWORD PTR [ebp+0x26]
  511143:	fst    QWORD PTR [ecx]
  511145:	sbb    ecx,DWORD PTR [edi]
  511147:	test   BYTE PTR [ebx],al
  511149:	and    DWORD PTR [edi],edi
  51114b:	cmp    esp,0xdafda259
  511151:	test   al,0xbd
  511153:	dec    edi
  511154:	push   0xffffffd0
  511156:	xchg   edx,eax
  511157:	and    eax,0xd2ead9a
  51115c:	push   ds
  51115d:	sahf   
  51115e:	add    al,0x86
  511160:	dec    edi
  511161:	lea    ecx,[ecx-0x8]
  511164:	mov    WORD PTR [edx],?
  511166:	xor    BYTE PTR [ebp-0x38],bh
  511169:	dec    eax
  51116a:	arpl   WORD PTR [ebx],si
  51116c:	(bad)  
  51116d:	shr    BYTE PTR [eax+edi*8-0x63ebd812],0x71
  511175:	and    edx,edx
  511177:	push   ebp
  511178:	xor    DWORD PTR [ebx-0x80],ecx
  51117b:	ins    BYTE PTR es:[edi],dx
  51117c:	push   0x9d0f7d3d
  511181:	cmc    
  511182:	inc    ecx
  511183:	mov    eax,esi
  511185:	pop    eax
  511186:	nop
  511187:	push   edx
  511188:	mov    cl,0x94
  51118a:	sbb    al,0x88
  51118c:	and    cl,bh
  51118e:	and    ebx,DWORD PTR [ecx+0x2728b15f]
  511194:	adc    bh,BYTE PTR [edx-0x49f361ef]
  51119a:	cmp    BYTE PTR [eax+0x32c23be8],dl
  5111a0:	inc    eax
  5111a1:	push   edi
  5111a2:	imul   DWORD PTR [ecx-0x71c8a42f]
  5111a8:	inc    edx
  5111a9:	in     eax,0xe5
  5111ab:	sbb    eax,DWORD PTR [ebx+ecx*1]
  5111ae:	mov    ah,0xfe
  5111b0:	jbe    0x51118a
  5111b2:	arpl   bx,sp
  5111b4:	cmp    BYTE PTR [ebx-0x12],dl
  5111b7:	sbb    bl,0x69
  5111ba:	stos   DWORD PTR es:[edi],eax
  5111bb:	dec    edi
  5111bc:	mov    ebp,0x94a96a72
  5111c1:	loopne 0x5111d3
  5111c3:	and    eax,ebp
  5111c5:	inc    esp
  5111c6:	inc    edx
  5111c7:	out    dx,al
  5111c8:	pushf  
  5111c9:	call   0xc127:0x95f2d041
  5111d0:	(bad)  
  5111d1:	xchg   ecx,eax
  5111d2:	push   eax
  5111d3:	rcr    BYTE PTR [ecx],1
  5111d5:	test   DWORD PTR [edx-0x13984b06],0xa5fa0fd4
  5111df:	dec    ebp
  5111e0:	mov    dh,0x74
  5111e2:	addr16 out dx,eax
  5111e4:	bound  ebp,QWORD PTR [ebp-0x7d91cbe6]
  5111ea:	push   ds
  5111eb:	and    BYTE PTR [ecx-0x7fee0802],0x19
  5111f2:	loope  0x511194
  5111f4:	cmp    BYTE PTR [eax-0x13],0xa1
  5111f8:	call   0x5589d62b
  5111fd:	sti    
  5111fe:	xor    BYTE PTR [esi],ch
  511200:	sbb    eax,DWORD PTR [esi-0x22b3d1c5]
  511206:	popa   
  511207:	pop    ebp
  511208:	push   0x58e95383
  51120d:	sbb    ah,BYTE PTR ds:0x51e3624d
  511213:	mov    eax,ds:0xe74becb4
  511218:	fisubr WORD PTR ds:0xf6bab289
  51121e:	(bad)
  511222:	adc    DWORD PTR [ebx],0xffffffd1
  511225:	xlat   BYTE PTR ds:[ebx]
  511226:	cmp    eax,0x412b1d78
  51122b:	dec    eax
  51122c:	xor    bl,0x84
  51122f:	je     0x51126a
  511231:	and    dh,BYTE PTR [edx+eax*4-0x3904fa1c]
  511238:	push   0x4c
  51123a:	out    0x95,al
  51123c:	push   ebx
  51123d:	and    eax,0x77ec1d30
  511242:	jmp    0x51126a
  511244:	push   ecx
  511245:	push   ebp
  511246:	cmp    ecx,DWORD PTR [esi-0x4b4091da]
  51124c:	retf   0xab05
  51124f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511250:	(bad)  
  511251:	(bad)  
  511252:	lea    esi,[ebx-0x4c]
  511255:	out    dx,al
  511256:	ja     0x51124e
  511258:	jl     0x51129b
  51125a:	les    eax,FWORD PTR [edx+0x45]
  51125d:	clc    
  51125e:	arpl   WORD PTR ds:0x14714818,bx
  511264:	xor    al,BYTE PTR [ebx+0x5a]
  511267:	sub    esi,DWORD PTR [ecx]
  511269:	(bad)  
  51126a:	rcl    BYTE PTR [ebx+esi*8],cl
  51126d:	sbb    BYTE PTR [edx],al
  51126f:	jnp    0x51122d
  511271:	push   ebx
  511272:	test   DWORD PTR [eax+0x1ea76d93],0x723ef5d7
  51127c:	push   eax
  51127d:	jo     0x51123f
  51127f:	shl    DWORD PTR [ebx],cl
  511281:	xor    BYTE PTR [edx+0x4284fc6f],ch
  511287:	dec    esp
  511288:	adc    DWORD PTR [edx-0x4f],esp
  51128b:	jb     0x511236
  51128d:	push   esp
  51128e:	cmp    BYTE PTR [edi],bl
  511290:	jle    0x5112f9
  511292:	add    al,BYTE PTR [eax]
  511294:	inc    ebx
  511295:	jg     0x51130e
  511297:	test   BYTE PTR [eax-0x20f08443],dh
  51129d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51129e:	jbe    0x511286
  5112a0:	lea    ecx,[ebp-0x1abf11bf]
  5112a6:	ins    BYTE PTR es:[edi],dx
  5112a7:	sub    WORD PTR [ecx+0x45cba4ff],cx
  5112ae:	xchg   edx,eax
  5112af:	add    bh,cl
  5112b1:	dec    eax
  5112b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5112b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5112b4:	test   al,0xfb
  5112b7:	jmp    0x5e16:0x7dc97817
  5112be:	sbb    ecx,DWORD PTR [ecx+0x6d]
  5112c1:	and    eax,0x17f5a62b
  5112c6:	adc    BYTE PTR [esi+0x23],ah
  5112c9:	andps  xmm2,XMMWORD PTR [edi+0xc]
  5112cd:	xchg   edi,edi
  5112cf:	(bad)  
  5112d0:	nop
  5112d1:	repnz mov ds:0xa65979d8,al
  5112d7:	push   eax
  5112d8:	mov    eax,0x48861243
  5112dd:	adc    DWORD PTR [esi+ebx*1],ecx
  5112e0:	cmc    
  5112e1:	cmp    DWORD PTR [esp+ebx*1+0x75],edx
  5112e5:	xlat   BYTE PTR ds:[ebx]
  5112e6:	cmp    ebx,DWORD PTR [esi-0x25d27943]
  5112ec:	loope  0x5112b2
  5112ee:	ins    DWORD PTR es:[edi],dx
  5112ef:	test   DWORD PTR [edx-0x7],edx
  5112f2:	dec    esi
  5112f3:	bswap  edx
  5112f5:	cmp    BYTE PTR [esi-0x46],cl
  5112f8:	adc    eax,0x5632f2cd
  5112fd:	pushf  
  5112fe:	cld    
  5112ff:	stos   BYTE PTR es:[edi],al
  511300:	(bad)  
  511301:	(bad)
  511304:	outs   dx,BYTE PTR ds:[esi]
  511305:	loopne 0x511307
  511307:	nop
  511308:	(bad)  
  511309:	adc    eax,0xb8ec87f1
  51130e:	or     DWORD PTR [edi],0xd1ed75e6
  511314:	inc    esp
  511315:	jle    0x51130b
  511317:	xor    BYTE PTR [edi+0x18ec77f7],ah
  51131d:	xor    eax,0x9dd12805
  511322:	(bad)  
  511323:	adc    esp,DWORD PTR [ebp+0x3533ea6c]
  511329:	jne    0x5112e5
  51132b:	ret    0x37db
  51132e:	arpl   cx,bx
  511330:	xor    BYTE PTR [ebx-0x70],ch
  511333:	or     ecx,esi
  511335:	rcr    DWORD PTR [ecx+ebp*4+0xe],1
  511339:	sbb    ah,BYTE PTR [edi]
  51133b:	pop    es
  51133c:	cs ja  0x511346
  51133f:	clc    
  511340:	or     eax,0x6c423512
  511345:	pop    ebx
  511346:	cli    
  511347:	adc    BYTE PTR [ecx],dl
  511349:	in     eax,dx
  51134a:	xchg   edx,eax
  51134b:	mov    eax,fs:0x957a5306
  511351:	sub    eax,0xf781151d
  511356:	shl    DWORD PTR [edx-0x2a],cl
  511359:	xchg   DWORD PTR [edx],ebx
  51135b:	cs pop esi
  51135d:	(bad)  
  51135f:	mov    dl,0x36
  511361:	xchg   ebx,eax
  511362:	clc    
  511363:	into   
  511364:	ds jae 0x511307
  511367:	std    
  511368:	jns    0x51130a
  51136a:	out    dx,eax
  51136b:	das    
  51136c:	adc    ah,ah
  51136e:	add    eax,0xffffff9e
  511371:	push   edx
  511372:	xor    ah,BYTE PTR [edi]
  511374:	or     esp,edi
  511376:	arpl   WORD PTR [eax-0xd],bp
  511379:	retf   0x9297
  51137c:	ja     0x51138a
  51137e:	pop    edx
  51137f:	loope  0x511387
  511381:	pusha  
  511382:	push   ss
  511383:	push   0x43
  511385:	(bad)  
  511386:	scas   al,BYTE PTR es:[edi]
  511387:	push   esp
  511388:	rcr    ecx,cl
  51138a:	dec    esp
  51138b:	push   ds
  51138c:	mov    dh,0x65
  51138e:	cmc    
  51138f:	dec    ecx
  511390:	pop    edi
  511391:	in     eax,dx
  511392:	pop    edx
  511393:	sub    eax,ecx
  511395:	sar    BYTE PTR [eax-0x15503594],1
  51139b:	loope  0x511352
  51139d:	ins    DWORD PTR es:[edi],dx
  51139e:	xor    dh,al
  5113a0:	lds    eax,FWORD PTR [ecx-0x6f19c141]
  5113a6:	retf   
  5113a7:	ins    DWORD PTR es:[edi],dx
  5113a8:	push   DWORD PTR ds:[edi]
  5113ab:	dec    edx
  5113ac:	es push ss
  5113ae:	jl     0x5113fe
  5113b0:	xchg   edi,eax
  5113b1:	std    
  5113b2:	mov    dh,0x11
  5113b4:	shl    DWORD PTR [esi],1
  5113b6:	pushf  
  5113b7:	outs   dx,BYTE PTR ds:[esi]
  5113b8:	fwait
  5113b9:	dec    eax
  5113ba:	pushf  
  5113bb:	mov    ds:0xbd783acf,al
  5113c0:	fsub   QWORD PTR [edi]
  5113c2:	dec    edx
  5113c3:	clc    
  5113c4:	setnp  dl
  5113c7:	jbe    0x5113d9
  5113c9:	or     DWORD PTR [edi+ebx*1],ecx
  5113cc:	and    al,0x14
  5113ce:	xchg   edi,eax
  5113cf:	(bad)  
  5113d1:	cmp    esi,DWORD PTR [ebx+0x65]
  5113d4:	jmp    0xa5f6:0x87c7f80c
  5113db:	sti    
  5113dc:	nop
  5113dd:	scas   eax,DWORD PTR es:[edi]
  5113de:	or     DWORD PTR [eax],eax
  5113e0:	adc    eax,0x42e69590
  5113e5:	sub    al,0x45
  5113e7:	cs (bad) 
  5113e9:	rcl    dh,cl
  5113eb:	shl    DWORD PTR [ecx+eax*2+0xdaf0150],cl
  5113f2:	les    ecx,FWORD PTR [ebx+0x57]
  5113f5:	mov    BYTE PTR [ecx+0x48aaeca9],dh
  5113fb:	mov    DWORD PTR [eax],eax
  5113fd:	xlat   BYTE PTR ds:[ebx]
  5113fe:	aas    
  5113ff:	sbb    ebp,DWORD PTR [edi-0x56a74a41]
  511405:	jb     0x5113a9
  511407:	push   0x3
  511409:	dec    edi
  51140a:	cmp    DWORD PTR [eax+ebp*2],ecx
  51140d:	add    BYTE PTR [ecx+edi*1],bl
  511410:	outs   dx,BYTE PTR ds:[esi]
  511411:	inc    esi
  511412:	loop   0x511430
  511414:	push   edi
  511415:	repnz nop
  511417:	cmp    DWORD PTR [ebp-0x2d66771f],0xffffffd4
  51141e:	ds aad 0x5f
  511421:	cmp    al,BYTE PTR [edi+ebx*4-0x564e52da]
  511428:	and    al,0x65
  51142a:	in     al,0x97
  51142c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51142d:	or     esp,ebp
  51142f:	in     eax,dx
  511430:	push   ss
  511431:	cdq    
  511432:	inc    eax
  511433:	add    esp,DWORD PTR [edx-0x7c]
  511436:	cmp    eax,0xaee0ba4e
  51143b:	jp     0x511435
  51143d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51143e:	push   ebx
  51143f:	dec    eax
  511440:	aaa    
  511441:	ins    DWORD PTR es:[edi],dx
  511442:	add    ebp,0xa1334fbd
  511448:	jge    0x511437
  51144a:	sar    DWORD PTR [esp+eiz*8],cl
  51144d:	jp     0x511427
  51144f:	mov    dh,0xd0
  511451:	push   0xffffffcf
  511453:	push   ss
  511454:	hlt    
  511455:	jne    0x5114a8
  511457:	fdivr  QWORD PTR cs:[eax]
  51145a:	out    0xd9,eax
  51145c:	(bad)  
  51145d:	or     ebx,DWORD PTR [edi]
  51145f:	mov    ?,WORD PTR [ecx-0x28]
  511462:	pop    eax
  511463:	mov    ah,0xf6
  511465:	mov    BYTE PTR [ecx],bh
  511467:	inc    ebx
  511468:	cmp    BYTE PTR [edx],dl
  51146a:	add    bl,bl
  51146c:	push   esi
  51146d:	shl    DWORD PTR [ecx+edi*1+0x68],cl
  511471:	fcmovnbe st,st(2)
  511473:	nop
  511474:	jnp    0x5114d7
  511476:	(bad)  
  511477:	mov    BYTE PTR [edx],cl
  511479:	stc    
  51147a:	psraw  mm4,QWORD PTR [eax]
  51147d:	xchg   esi,eax
  51147f:	sti    
  511480:	das    
  511481:	js     0x511435
  511483:	gs xchg ebx,eax
  511485:	dec    ecx
  511486:	xor    esp,DWORD PTR [ecx]
  511488:	push   ebx
  511489:	in     al,0xd3
  51148b:	sti    
  51148c:	or     ebx,edi
  51148e:	add    eax,0x13bd495f
  511493:	daa    
  511494:	bound  edi,QWORD PTR [ecx]
  511496:	loop   0x51143b
  511498:	test   cl,cl
  51149a:	inc    esp
  51149b:	mov    ebp,0x486b92eb
  5114a0:	add    BYTE PTR [eax+eiz*4-0x1ed87c52],dl
  5114a7:	jmp    0x32a9:0x55fc2308
  5114ae:	fst    st(2)
  5114b0:	jmp    0x511473
  5114b2:	js     0x511438
  5114b4:	push   edx
  5114b5:	xchg   esi,eax
  5114b6:	cmp    BYTE PTR [edi+0x2b],ah
  5114b9:	adc    DWORD PTR [edi+0x4455cd2],ebx
  5114bf:	add    eax,0xabd457b2
  5114c4:	mov    edx,0xe4ac439a
  5114c9:	nop
  5114ca:	jne    0x5114b3
  5114cc:	adc    eax,0x8ccaed64
  5114d1:	cs jbe 0x511511
  5114d4:	push   edx
  5114d5:	imul   esi,DWORD PTR [bp+si+0x77],0xffffffa7
  5114da:	xchg   esp,eax
  5114db:	jg     0x5114fd
  5114dd:	repz dec esi
  5114df:	popa   
  5114e0:	cld    
  5114e1:	inc    edx
  5114e2:	adc    DWORD PTR [esi],0x1e3df314
  5114e8:	add    DWORD PTR [edi+ebp*1],ebx
  5114eb:	test   DWORD PTR [edi+0x3b0eff2b],0x8ffe699e
  5114f5:	aam    0x93
  5114f7:	inc    edi
  5114f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5114f9:	sub    eax,0x2747c40f
  5114fe:	dec    edx
  5114ff:	cli    
  511500:	mov    dl,0x8a
  511502:	jnp    0x5114f3
  511504:	xlat   BYTE PTR ds:[ebx]
  511505:	leave  
  511506:	push   ds
  511507:	loope  0x51150c
  511509:	repnz (bad) 
  51150b:	test   DWORD PTR [ebp+0x66c08850],ebp
  511511:	clc    
  511512:	dec    ebp
  511513:	cmp    eax,0x7414321b
  511518:	mov    cs,WORD PTR [edx]
  51151a:	jns    0x511510
  51151c:	fld    st(0)
  51151e:	sbb    esi,DWORD PTR [ecx]
  511520:	sub    DWORD PTR [ecx+0x77],0xc91e6f05
  511527:	outs   dx,BYTE PTR ds:[esi]
  511528:	stc    
  511529:	push   DWORD PTR [edi-0x44]
  51152c:	test   eax,0xb76495c0
  511531:	hlt    
  511532:	and    ah,bh
  511534:	out    0x90,al
  511536:	xor    eax,0x64ab31f9
  51153b:	jmp    0x51153b
  51153d:	sahf   
  51153e:	pop    ss
  51153f:	in     al,0x16
  511541:	ins    DWORD PTR es:[edi],dx
  511542:	dec    esi
  511543:	std    
  511544:	adc    ah,ch
  511546:	mov    al,ds:0x53a92338
  51154b:	dec    ebp
  51154c:	push   ebx
  51154d:	mov    DWORD PTR [edi],ebp
  51154f:	jl     0x5114e9
  511551:	imul   esp,DWORD PTR [esi-0x2d],0x6047579e
  511558:	jo     0x51154f
  51155a:	jno    0x511512
  51155c:	les    eax,FWORD PTR [edi-0x15]
  51155f:	test   BYTE PTR [ebx+0x4d],al
  511562:	out    0x42,al
  511564:	xchg   edx,eax
  511565:	stc    
  511566:	mov    ds:0xb353b614,eax
  51156b:	xor    eax,0x8c83324b
  511570:	in     al,0x38
  511572:	(bad)  
  511574:	lock inc edx
  511576:	mov    ecx,0x20288e54
  51157b:	pop    ss
  51157c:	stc    
  51157d:	push   ebp
  51157e:	mov    esp,0xc7cb7af5
  511583:	stc    
  511584:	int    0xf8
  511586:	rcl    BYTE PTR [edx+0x14cdfc3a],1
  51158c:	mov    edx,0xc7a053f0
  511591:	(bad)
  511594:	inc    ebp
  511595:	jmp    0x7778:0xbf282a3e
  51159c:	ja     0x511574
  51159e:	into   
  51159f:	mov    bl,0x9a
  5115a1:	jne    0x5115d9
  5115a3:	xor    BYTE PTR [edi+0xcb85531],dh
  5115a9:	aad    0x50
  5115ab:	mov    ebx,0xce7bd83d
  5115b0:	dec    esp
  5115b1:	mov    bl,0x2e
  5115b3:	(bad)  
  5115b4:	(bad)  
  5115b5:	imul   esp,edi,0xffffffb7
  5115b8:	inc    edx
  5115b9:	mov    ah,0x47
  5115bb:	mov    ?,WORD PTR [ecx-0x4c]
  5115be:	mov    esp,DWORD PTR [ebp+0x51658ed0]
  5115c4:	cmp    al,0x2d
  5115c6:	cmp    al,0x9d
  5115c8:	lahf   
  5115c9:	or     ecx,DWORD PTR [eax]
  5115cb:	pop    es
  5115cc:	or     eax,0x8e31d03d
  5115d1:	jns    0x511648
  5115d3:	jl     0x511569
  5115d5:	daa    
  5115d6:	enter  0xc90,0xc1
  5115da:	dec    ebp
  5115db:	fld    DWORD PTR [ebp-0x9]
  5115de:	bound  ecx,QWORD PTR [esi+0x6d]
  5115e1:	mov    dl,0x3a
  5115e3:	daa    
  5115e4:	sar    DWORD PTR [esi+0x35a2aad4],1
  5115ea:	adc    eax,0xcb2dff40
  5115ef:	gs mov bh,0x16
  5115f2:	in     eax,0x90
  5115f4:	into   
  5115f5:	jnp    0x51157c
  5115f7:	jl     0x5115b9
  5115f9:	iret   
  5115fa:	js     0x5115e6
  5115fc:	gs retf 
  5115fe:	dec    esi
  5115ff:	push   ebx
  511600:	leave  
  511601:	mov    eax,DWORD PTR [eax-0x39]
  511604:	mov    ah,0x8f
  511606:	int    0xb7
  511608:	sbb    bh,0x85
  51160b:	pop    ds
  51160c:	scas   al,BYTE PTR es:[edi]
  51160d:	or     BYTE PTR [ecx-0x6e1819a1],bl
  511613:	popa   
  511614:	jnp    0x511616
  511616:	mov    edx,0xe1a3dcdc
  51161b:	mov    ds:0xafd482c7,al
  511620:	sub    ecx,ebp
  511622:	mov    ah,0xa2
  511624:	bound  ecx,QWORD PTR [ebp*8-0x3ed35e9e]
  51162b:	or     esi,DWORD PTR [eax]
  51162d:	xchg   BYTE PTR [eax],ch
  51162f:	jns    0x511698
  511631:	xor    eax,DWORD PTR [ebp+0x71]
  511634:	cmp    BYTE PTR [ecx],al
  511636:	cwde   
  511637:	aam    0x8
  511639:	call   0xbd3e0211
  51163e:	arpl   bp,bx
  511640:	(bad)  
  511641:	fwait
  511642:	mov    cl,0xd4
  511644:	cli    
  511645:	cmp    BYTE PTR [ecx+0x9],0x91
  511649:	xor    BYTE PTR [ebx+0x2f],dl
  51164c:	push   0xffffffee
  51164e:	icebp  
  51164f:	mov    WORD PTR [eax+0x18a3b0a7],fs
  511655:	cli    
  511656:	fidiv  WORD PTR [edx]
  511658:	inc    edi
  511659:	jo     0x51168e
  51165b:	(bad)  
  51165c:	stc    
  51165d:	clc    
  51165e:	fmulp  st(0),st
  511660:	loope  0x511647
  511662:	les    ebx,FWORD PTR [edi+0x7e]
  511665:	xchg   BYTE PTR [esi+0x60],ch
  511668:	sar    dh,cl
  51166a:	xor    al,0x93
  51166c:	mov    ch,0xca
  51166e:	sbb    eax,0x17eb0a7e
  511673:	mov    ah,0x77
  511675:	adc    al,0x8d
  511677:	mov    ds:0x13be82d2,al
  51167c:	outs   dx,DWORD PTR ds:[esi]
  51167d:	dec    esi
  51167e:	jle    0x5116c4
  511680:	pop    ss
  511681:	and    eax,0xe0c89023
  511686:	add    al,ch
  511688:	dec    ebp
  511689:	les    ecx,FWORD PTR [esi]
  51168b:	mov    edx,0x50e8df35
  511690:	mov    ah,0x9a
  511692:	inc    ebp
  511693:	js     0x5116b3
  511695:	push   ds
  511696:	cli    
  511697:	ret    0xf4a6
  51169a:	adc    DWORD PTR [ecx],ebx
  51169c:	test   BYTE PTR [ebp-0x5],bl
  51169f:	mov    eax,ds:0xb610845a
  5116a4:	fsub   DWORD PTR [eax+eiz*4]
  5116a7:	sbb    cl,ch
  5116a9:	cmp    esp,DWORD PTR [esi]
  5116ab:	mov    cl,0x59
  5116ad:	add    al,0x5e
  5116af:	xchg   edx,eax
  5116b0:	cmp    eax,0x33873b92
  5116b5:	aaa    
  5116b6:	add    al,0x92
  5116b8:	rcl    DWORD PTR [edx+0x5930e684],0x7b
  5116bf:	leave  
  5116c0:	xor    DWORD PTR [ecx],esi
  5116c2:	imul   dl
  5116c4:	and    ah,BYTE PTR [ebp+0x36]
  5116c7:	jecxz  0x511708
  5116c9:	sub    BYTE PTR [ebp-0x1db3e51d],0x59
  5116d0:	push   esi
  5116d1:	mov    esi,DWORD PTR [ebp+ebp*1-0x27]
  5116d5:	lock out dx,al
  5116d7:	cmp    ch,ah
  5116d9:	cdq    
  5116da:	or     al,0x78
  5116dc:	adc    cl,BYTE PTR [ecx+0x2d619f85]
  5116e2:	cmp    bl,BYTE PTR [esi+0x5de90d8b]
  5116e8:	sub    esi,DWORD PTR [ecx]
  5116ea:	les    ecx,FWORD PTR [edi+esi*2]
  5116ed:	out    dx,eax
  5116ee:	mov    al,0x3a
  5116f0:	pop    es
  5116f1:	cli    
  5116f2:	push   DWORD PTR [ebx-0x11]
  5116f5:	outs   dx,BYTE PTR ds:[esi]
  5116f6:	jge    0x511694
  5116f8:	or     edi,DWORD PTR [ebp-0x1c]
  5116fb:	ss popa 
  5116fd:	mov    ds:0x56bf8888,al
  511702:	das    
  511703:	es inc esi
  511705:	mov    ch,0xcc
  511707:	xchg   ebp,eax
  511708:	idiv   DWORD PTR [ecx-0x31]
  51170b:	mov    ah,0xd2
  51170d:	cmp    DWORD PTR [edi+edx*4+0x6],esi
  511711:	aaa    
  511712:	das    
  511713:	inc    edi
  511714:	mov    ah,0x65
  511716:	popa   
  511717:	lock (bad) 
  511719:	cmp    ecx,DWORD PTR [edi-0x79551e3d]
  51171f:	vhaddps xmm5,xmm4,xmm7
  511723:	add    edi,DWORD PTR [edx+0x3f]
  511726:	not    DWORD PTR [esp+edx*1+0x3203f0cf]
  51172d:	(bad)  
  51172e:	rcl    ch,0x46
  511731:	dec    edi
  511732:	int    0x3d
  511734:	push   ecx
  511735:	mov    dl,0x96
  511737:	ss cwde 
  511739:	push   ecx
  51173a:	in     al,0xaf
  51173c:	in     eax,dx
  51173d:	loopne 0x511728
  51173f:	mov    bl,0x22
  511741:	ret    0x8064
  511744:	sbb    cl,BYTE PTR [ebp-0x2efef0f7]
  51174a:	out    dx,al
  51174b:	and    al,BYTE PTR [eax+esi*1]
  51174e:	cmp    DWORD PTR [eax],eax
  511750:	in     al,dx
  511751:	fisttp DWORD PTR [edx+0x45]
  511754:	adc    al,BYTE PTR [ebx]
  511756:	jae    0x5116f0
  511758:	int    0xc1
  51175a:	lods   eax,DWORD PTR ds:[esi]
  51175b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51175c:	rcr    DWORD PTR [ebp-0x77],1
  51175f:	mov    esi,0x413bf989
  511764:	mov    edi,0x75b29ae1
  511769:	in     eax,0xe5
  51176b:	pop    edi
  51176c:	test   DWORD PTR [ebx-0x662bfa3e],eax
  511772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511773:	and    al,0x82
  511775:	lods   al,BYTE PTR ds:[esi]
  511776:	cli    
  511777:	and    eax,0x12a5edd7
  51177c:	ins    BYTE PTR es:[edi],dx
  51177d:	scas   eax,DWORD PTR es:[edi]
  51177e:	cmp    eax,0x7ecad37e
  511783:	test   al,bh
  511785:	clc    
  511786:	sbb    eax,0x9e489c3b
  51178b:	cli    
  51178c:	cmp    DWORD PTR [ebx-0x2b],ebx
  51178f:	xchg   esi,eax
  511790:	or     eax,0x98e59bae
  511795:	push   cs
  511796:	das    
  511797:	loopne 0x51180a
  511799:	pop    esp
  51179a:	xchg   esi,eax
  51179b:	or     DWORD PTR [esi+0x39],edx
  51179e:	pop    esp
  51179f:	sti    
  5117a0:	into   
  5117a1:	(bad)  
  5117a2:	stc    
  5117a3:	sbb    esp,DWORD PTR [esp+ecx*8]
  5117a6:	sub    BYTE PTR [edx-0x17],ah
  5117a9:	sub    esp,ecx
  5117ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5117ac:	mov    dh,0x2f
  5117ae:	sub    BYTE PTR [ebx+0x5f],ah
  5117b1:	push   DWORD PTR [ebx+0xd7d3321]
  5117b7:	mov    WORD PTR [esi+0x75cadd6f],ds
  5117bd:	jae    0x5117bf
  5117bf:	dec    edi
  5117c0:	jle    0x511750
  5117c2:	xchg   ebp,eax
  5117c3:	(bad)  
  5117c4:	pushf  
  5117c5:	and    eax,DWORD PTR es:[edx+ebp*8-0x64]
  5117ca:	xor    DWORD PTR [eax+0x328fe7de],esp
  5117d0:	test   eax,0x29ec0808
  5117d5:	cmc    
  5117d6:	retf   0x8d99
  5117d9:	repnz test esi,0x922beea1
  5117e0:	sub    eax,0xc324f26e
  5117e5:	mov    ds:0xab30e9e,al
  5117ea:	add    eax,0xa4b8ba3d
  5117ef:	jecxz  0x5117f6
  5117f1:	and    DWORD PTR [edi+ecx*8-0x18],ebx
  5117f5:	xor    DWORD PTR [eiz*1-0x5f9b77ff],eax
  5117fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5117fd:	data16 sbb al,BYTE PTR [edx-0x18]
  511801:	sbb    dh,al
  511803:	fldcw  WORD PTR [esi+ebp*1+0x1750d054]
  51180a:	inc    ecx
  51180b:	jmp    0x6926386f
  511810:	loope  0x511822
  511812:	xchg   ecx,eax
  511813:	out    0x2f,al
  511815:	jg     0x511811
  511817:	add    eax,0xe94d969f
  51181c:	mov    esp,0x3c397949
  511821:	add    ebx,DWORD PTR [eax-0x4c]
  511824:	push   ds
  511825:	daa    
  511826:	xchg   esp,eax
  511827:	pop    ecx
  511828:	lahf   
  511829:	loop   0x511888
  51182b:	push   ecx
  51182c:	xchg   edi,eax
  51182d:	ret    
  51182e:	test   al,0xd4
  511830:	sbb    esi,esp
  511832:	(bad)  
  511833:	jmp    0x7b33:0x81523b88
  51183a:	fsubr  st,st(1)
  51183c:	jecxz  0x5117d1
  51183e:	pop    eax
  51183f:	jns    0x511831
  511841:	sbb    edi,DWORD PTR [ebx-0x6e]
  511844:	mov    ch,0xbb
  511846:	xchg   ebp,eax
  511847:	fwait
  511848:	lods   eax,DWORD PTR ds:[esi]
  511849:	mov    al,0xfe
  51184b:	nop
  51184c:	jne    0x51188a
  51184e:	mov    eax,0x79362303
  511853:	hlt    
  511854:	call   0xe39a:0x83ed8272
  51185b:	add    ch,ah
  51185d:	imul   edi,DWORD PTR [esi-0x5c],0xa505ca49
  511864:	mov    ds:0xad2a4f09,al
  511869:	popa   
  51186a:	aam    0x55
  51186c:	jmp    0x18ca:0xb78079c8
  511873:	enter  0x8c1d,0x52
  511877:	fld    QWORD PTR [ebx-0x4bd2ad2b]
  51187d:	jo     0x51186c
  51187f:	cld    
  511880:	push   0x0
  511882:	xchg   esp,eax
  511883:	add    eax,0x674256c9
  511888:	xor    ebp,DWORD PTR [eax]
  51188a:	int3   
  51188b:	adc    ebp,DWORD PTR [edi-0x68]
  51188e:	mov    al,0xc9
  511890:	push   0xfffffff9
  511892:	inc    edi
  511893:	(bad)  
  511894:	push   ss
  511895:	or     eax,0x66620be5
  51189a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51189b:	sub    bl,BYTE PTR [edx]
  51189d:	fdiv   QWORD PTR [eax-0x23]
  5118a0:	sub    eax,edx
  5118a2:	mov    edx,0x7c9cfa5
  5118a7:	cs dec ebx
  5118a9:	hlt    
  5118aa:	es inc eax
  5118ad:	cmp    eax,DWORD PTR [ebp-0x41]
  5118b0:	jge    0x51186b
  5118b2:	jmp    0x52b8be4
  5118b7:	xchg   esp,eax
  5118b8:	xchg   BYTE PTR [ebx-0x6551b475],cl
  5118be:	adc    bh,al
  5118c0:	mov    eax,0x77f085dd
  5118c5:	mov    ch,0x74
  5118c7:	out    dx,eax
  5118c8:	pop    edx
  5118c9:	popf   
  5118ca:	sbb    ah,dh
  5118cc:	mov    dh,0x2f
  5118ce:	inc    edx
  5118cf:	sbb    DWORD PTR [ebx],esp
  5118d1:	in     eax,0x93
  5118d3:	dec    esi
  5118d4:	ret    
  5118d5:	repnz xchg edi,eax
  5118d7:	imul   edi,DWORD PTR [ebp-0x9],0x53
  5118db:	repz repnz jmp 0x38af:0x2872ab0b
  5118e4:	mov    eax,DWORD PTR [ebx]
  5118e6:	mov    WORD PTR [edx-0x1a02dad2],cs
  5118ec:	repnz sbb BYTE PTR [ebp-0x39bb7508],bh
  5118f3:	dec    edx
  5118f4:	xchg   esi,eax
  5118f5:	xchg   edi,eax
  5118f6:	fistp  QWORD PTR [edx]
  5118f8:	cmp    BYTE PTR [edx-0x5f3fa91c],bl
  5118fe:	inc    ebx
  5118ff:	cwde   
  511900:	jo     0x5118ca
  511902:	inc    ecx
  511903:	xchg   edi,eax
  511904:	daa    
  511905:	dec    eax
  511906:	aam    0xce
  511908:	cld    
  511909:	dec    ebx
  51190a:	dec    ebp
  51190b:	test   eax,0x1620a50e
  511910:	mov    DWORD PTR [esi],ecx
  511912:	pushf  
  511913:	gs sbb esp,esi
  511916:	loop   0x511949
  511918:	(bad)  
  511919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51191a:	ficomp DWORD PTR [esi-0x5b]
  51191d:	jbe    0x5118a6
  51191f:	xchg   esp,eax
  511920:	xor    bl,BYTE PTR [ecx+0x7b]
  511923:	xchg   edi,eax
  511924:	fdiv   st(7),st
  511926:	mov    ecx,0x5dffbf33
  51192b:	jl     0x51194a
  51192d:	js     0x5118da
  51192f:	pop    edi
  511930:	in     eax,0xc
  511932:	es out dx,eax
  511934:	xchg   ebx,ebp
  511936:	dec    edi
  511937:	and    esi,DWORD PTR [edx]
  511939:	mov    ds:0xe9d8ad3,al
  51193e:	jnp    0x5119a8
  511940:	inc    eax
  511941:	call   0x7e88:0x7ce601a6
  511948:	and    ecx,eax
  51194a:	dec    edx
  51194b:	fisttp QWORD PTR [ebx]
  51194d:	jb     0x511953
  51194f:	stc    
  511950:	jae    0x51195f
  511952:	xlat   BYTE PTR ds:[ebx]
  511953:	or     ebp,DWORD PTR [ebx-0x30]
  511956:	call   DWORD PTR [edx]
  511958:	sub    bl,BYTE PTR [esi]
  51195a:	adc    DWORD PTR [edi-0x32],esp
  51195d:	mov    bh,0x15
  51195f:	xchg   ecx,eax
  511960:	mov    BYTE PTR [ebx+0x4a9b0f10],dl
  511966:	fnstenv [ebp+0x507640ba]
  51196c:	call   0xadffb7ce
  511971:	dec    ebx
  511972:	dec    ebp
  511973:	ja     0x5119c2
  511975:	ror    DWORD PTR [edi-0x3240620e],cl
  51197b:	stos   DWORD PTR es:[edi],eax
  51197c:	aam    0xda
  51197e:	jecxz  0x511916
  511980:	out    dx,eax
  511981:	xchg   edx,eax
  511982:	jns    0x511985
  511984:	pop    edi
  511985:	ret    
  511986:	icebp  
  511987:	ss pop esp
  511989:	shl    BYTE PTR [edx-0xd92af1d],1
  51198f:	inc    eax
  511990:	repz in eax,dx
  511992:	fld    st(2)
  511994:	push   cs
  511995:	test   eax,0x47521686
  51199a:	xchg   edx,eax
  51199b:	outs   dx,DWORD PTR ds:[esi]
  51199c:	nop
  51199d:	idiv   BYTE PTR [edx+0x23]
  5119a0:	lods   eax,DWORD PTR ds:[esi]
  5119a1:	int3   
  5119a2:	sbb    eax,0xdcb242da
  5119a7:	mov    ebx,gs
  5119a9:	xchg   esp,eax
  5119aa:	mov    ah,0xb4
  5119ac:	fwait
  5119ad:	jno    0x5119e1
  5119af:	hlt    
  5119b0:	xor    eax,0x8eb5f123
  5119b5:	test   eax,0x2f9fbb13
  5119ba:	mov    eax,0x9c1aa836
  5119bf:	sub    eax,0x2c7dfe52
  5119c4:	in     eax,dx
  5119c5:	mov    ds:0xb6b0ce32,al
  5119ca:	inc    edi
  5119cb:	test   DWORD PTR [ecx],eax
  5119cd:	daa    
  5119ce:	int    0x44
  5119d0:	xchg   edx,eax
  5119d1:	push   ecx
  5119d2:	imul   ecx,DWORD PTR [ecx+0x32],0x63
  5119d6:	out    0x2e,al
  5119d8:	mov    dl,0xe1
  5119da:	lea    esp,[ebx+edx*2]
  5119dd:	dec    ebx
  5119de:	nop
  5119df:	ds iret 
  5119e1:	pop    ebp
  5119e2:	xchg   esi,eax
  5119e3:	push   ds
  5119e4:	push   ecx
  5119e5:	arpl   bp,di
  5119e7:	jmp    0x5119dc
  5119e9:	sbb    cl,BYTE PTR [ebx-0x58]
  5119ec:	rcr    BYTE PTR [edi-0x5d],1
  5119ef:	in     eax,0x55
  5119f1:	sub    eax,0x939056cb
  5119f6:	loope  0x511984
  5119f8:	push   esi
  5119f9:	push   0x47
  5119fb:	mov    eax,ds:0xd38ad7d7
  511a00:	repnz fimul WORD PTR [ebx+eax*1+0x50]
  511a05:	sti    
  511a06:	test   eax,0x4d25b156
  511a0b:	and    ebp,DWORD PTR [ebp-0x3e]
  511a0e:	clc    
  511a0f:	add    BYTE PTR [eax],dl
  511a11:	loop   0x511a90
  511a13:	sahf   
  511a14:	cs dec ecx
  511a16:	fdivr  QWORD PTR [eax+0x7b14ec0f]
  511a1c:	xchg   esi,eax
  511a1d:	in     eax,0x2d
  511a1f:	sti    
  511a20:	fidiv  DWORD PTR [esi]
  511a22:	cdq    
  511a23:	stc    
  511a24:	imul   eax,DWORD PTR [esi-0x39cbb0e],0x6a7e2233
  511a2e:	xor    ecx,ecx
  511a30:	or     DWORD PTR [ebx+0x1a61331a],ebp
  511a36:	and    al,0xc2
  511a38:	dec    edx
  511a39:	jno    0x511a12
  511a3b:	mov    ebx,0x66b0e529
  511a40:	inc    edx
  511a41:	push   ebx
  511a42:	mov    esi,0x77db2b6
  511a47:	mov    DWORD PTR [edx-0x710c8784],esi
  511a4d:	mov    edx,0xc902b2d9
  511a52:	aaa    
  511a53:	add    dh,BYTE PTR ds:0xfba76d0
  511a59:	xor    dl,BYTE PTR [edi+ebx*4]
  511a5c:	repz mov bl,0xb3
  511a5f:	iret   
  511a60:	idiv   BYTE PTR [ebp-0x67]
  511a63:	(bad)  
  511a64:	sbb    eax,0xa252413
  511a69:	jnp    0x511a8c
  511a6b:	cmp    BYTE PTR [ecx],dh
  511a6d:	bound  eax,QWORD PTR [edx-0x37]
  511a70:	add    BYTE PTR [ecx+edi*1],al
  511a73:	add    eax,0xb9b6046
  511a78:	mov    ch,0xcb
  511a7a:	xchg   edi,eax
  511a7b:	ror    cl,cl
  511a7d:	pop    ss
  511a7e:	sub    ch,bh
  511a80:	mov    dh,0x8e
  511a82:	cs or  eax,0x9e67e1c7
  511a88:	add    al,0x2
  511a8a:	adc    esi,0x326370ce
  511a90:	dec    edi
  511a91:	mov    eax,0x208f24ae
  511a96:	inc    esi
  511a97:	ja     0x511ac1
  511a99:	mov    ecx,0xce9c9eba
  511a9e:	push   esp
  511aa0:	mov    bl,al
  511aa2:	cld    
  511aa3:	iret   
  511aa4:	sub    ch,BYTE PTR [ecx]
  511aa6:	or     eax,0x2d53b4b5
  511aab:	mov    ds:0x55a89bf3,al
  511ab0:	push   eax
  511ab1:	sbb    ebp,edx
  511ab3:	jo     0x511ad8
  511ab5:	sar    al,cl
  511ab7:	sahf   
  511ab8:	popa   
  511ab9:	mov    esp,0x66404909
  511abe:	adc    dl,BYTE PTR [ebx-0x67]
  511ac1:	mov    esp,0x994130bd
  511ac6:	sub    ebx,edi
  511ac8:	pushf  
  511ac9:	loope  0x511abe
  511acb:	in     eax,0xe3
  511acd:	mov    DWORD PTR [ebx+0x19638c67],edi
  511ad3:	jle    0x511a85
  511ad5:	lods   eax,DWORD PTR ds:[esi]
  511ad6:	jns    0x511b22
  511ad8:	mov    esi,0xec1b871c
  511add:	push   eax
  511ade:	js     0x511aa1
  511ae0:	fsubr  DWORD PTR [ebx+0x39]
  511ae3:	xchg   ebp,eax
  511ae4:	ja     0x511b4b
  511ae6:	push   ebp
  511ae7:	ret    
  511ae8:	jno    0x511b5f
  511aea:	jmp    0x547e:0x121a36f3
  511af1:	pop    ebp
  511af2:	in     eax,dx
  511af3:	sub    al,0x86
  511af5:	xchg   esi,eax
  511af6:	mov    al,0x9a
  511af8:	push   es
  511af9:	shl    BYTE PTR [ebp+0x45],cl
  511afc:	mov    edx,0x7120759e
  511b01:	cli    
  511b02:	idiv   DWORD PTR [ebx+eax*1+0x619cbb6c]
  511b09:	xor    al,0xdb
  511b0b:	mov    WORD PTR [esi],fs
  511b0d:	adc    ebp,DWORD PTR [edx-0x4e]
  511b10:	mov    ds:0x7266f61e,eax
  511b15:	jae    0x511b4f
  511b17:	inc    ebp
  511b18:	aas    
  511b19:	add    al,BYTE PTR [esi-0x6b]
  511b1c:	shl    ebx,cl
  511b1e:	in     al,dx
  511b1f:	stc    
  511b20:	and    al,0x1e
  511b22:	call   0xfde2:0x589ea416
  511b29:	mov    esp,0xe19ced71
  511b2f:	xchg   BYTE PTR [ecx-0x4d],ch
  511b32:	fld    st(3)
  511b34:	mov    ebp,0xc908002a
  511b39:	xor    BYTE PTR [ebx-0xd],bl
  511b3c:	retf   0x2e17
  511b3f:	into   
  511b40:	adc    BYTE PTR [esi-0x4d],bl
  511b43:	pop    ds
  511b44:	xchg   ecx,eax
  511b45:	push   cs
  511b46:	adc    BYTE PTR [ebx],bl
  511b48:	int    0x28
  511b4a:	xor    eax,DWORD PTR [ebx+0x76e2c10d]
  511b50:	sbb    dl,bh
  511b52:	adc    eax,0x3dd0cd56
  511b57:	xchg   al,bl
  511b59:	cmp    ecx,DWORD PTR [ebx]
  511b5b:	outs   dx,BYTE PTR ds:[esi]
  511b5c:	xor    eax,ebp
  511b5e:	fisub  WORD PTR [ebx]
  511b60:	xchg   ecx,eax
  511b61:	sti    
  511b62:	or     BYTE PTR [eax+eax*1],cl
  511b65:	push   edx
  511b66:	push   cs
  511b67:	mov    dl,0x3d
  511b69:	int3   
  511b6a:	leave  
  511b6b:	ds add dl,cl
  511b6e:	dec    edi
  511b6f:	adc    ebx,eax
  511b71:	scas   al,BYTE PTR es:[edi]
  511b72:	outs   dx,DWORD PTR ds:[esi]
  511b73:	xchg   ecx,eax
  511b74:	call   0xd501:0x9afc02de
  511b7b:	mov    ah,0xa3
  511b7d:	imul   esp,esi,0xffffffc0
  511b80:	fxch   st(4)
  511b82:	pusha  
  511b83:	mov    BYTE PTR [ecx-0x7],cl
  511b86:	pop    ebx
  511b87:	iret   
  511b88:	xchg   esi,eax
  511b89:	sti    
  511b8a:	pop    ecx
  511b8b:	sbb    cl,BYTE PTR [eax]
  511b8d:	rcl    DWORD PTR [eax+0x26],1
  511b90:	jmp    0x1eba9e72
  511b95:	aad    0x42
  511b97:	push   0x89020615
  511b9c:	xlat   BYTE PTR ds:[ebx]
  511b9d:	div    DWORD PTR [ebx+0x76eaa7df]
  511ba3:	lods   eax,DWORD PTR ds:[esi]
  511ba4:	sbb    BYTE PTR [edi+0x33],ch
  511ba7:	or     bh,BYTE PTR [ecx+0x34]
  511baa:	xchg   BYTE PTR [esi+0x7eb39d28],ch
  511bb0:	jb     0x511c26
  511bb2:	sahf   
  511bb3:	les    ecx,FWORD PTR [ebx-0x4cec0a6c]
  511bb9:	mov    ?,WORD PTR [ebp-0xe7ee683]
  511bbf:	(bad)  
  511bc0:	in     al,0x27
  511bc2:	jg     0x511b89
  511bc4:	xchg   ecx,eax
  511bc5:	sti    
  511bc6:	pop    ebx
  511bc7:	or     ch,BYTE PTR [eax]
  511bc9:	inc    eax
  511bca:	add    DWORD PTR [esi+0x1c022bff],ebp
  511bd0:	scas   eax,DWORD PTR es:[edi]
  511bd1:	adc    DWORD PTR [eax+0x38],edi
  511bd4:	popw   ds
  511bd6:	leave  
  511bd7:	ins    DWORD PTR es:[edi],dx
  511bd8:	push   edi
  511bd9:	call   0xd72c:0x215cbb1a
  511be0:	cs sbb al,0xe7
  511be3:	add    DWORD PTR [esi-0x58],0xd6e10599
  511bea:	dec    edx
  511beb:	and    edi,edx
  511bed:	les    edx,FWORD PTR [ecx+0x38fb4d6d]
  511bf3:	xor    dl,BYTE PTR [ebx-0xc]
  511bf6:	ins    DWORD PTR es:[edi],dx
  511bf7:	adc    DWORD PTR [esi+0x1e4caa02],ecx
  511bfd:	pusha  
  511bfe:	in     al,dx
  511bff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511c00:	outs   dx,BYTE PTR ds:[esi]
  511c01:	xchg   esi,eax
  511c02:	xchg   esp,eax
  511c03:	and    BYTE PTR [eax+ebp*4-0x76b452e9],0xc9
  511c0b:	mov    esp,0x9de71480
  511c10:	clc    
  511c11:	in     al,dx
  511c12:	sbb    al,al
  511c14:	sbb    eax,0x4db1a225
  511c19:	sar    BYTE PTR [ecx-0x7c],cl
  511c1c:	call   0xfde4:0x75592082
  511c23:	cmp    ecx,DWORD PTR [eax]
  511c25:	mov    edx,0x6eb36f06
  511c2a:	test   bh,ch
  511c2c:	cmc    
  511c2d:	lahf   
  511c2e:	pop    ds
  511c2f:	cmp    eax,0xfa918b06
  511c34:	xor    bl,BYTE PTR [esi]
  511c36:	cwde   
  511c37:	fstp   QWORD PTR [esi-0x32]
  511c3a:	dec    esp
  511c3b:	xchg   DWORD PTR [ecx-0x69],ebx
  511c3e:	inc    ebx
  511c3f:	leave  
  511c40:	cmc    
  511c41:	push   ecx
  511c42:	cwde   
  511c43:	xchg   esi,eax
  511c44:	inc    ecx
  511c45:	cs add al,0x38
  511c48:	ret    
  511c49:	push   eax
  511c4a:	jo     0x511bda
  511c4c:	xlat   BYTE PTR ds:[ebx]
  511c4d:	(bad)  
  511c4e:	iret   
  511c4f:	call   0xe3bb35da
  511c54:	je     0x511c9a
  511c56:	fcmovu st,st(0)
  511c58:	mov    dh,0x9f
  511c5a:	les    ecx,FWORD PTR [edx+eiz*1-0x25]
  511c5e:	inc    edi
  511c5f:	(bad)  
  511c60:	das    
  511c61:	and    al,0xe8
  511c63:	test   eax,0xa295d79d
  511c68:	or     al,0xe7
  511c6a:	sub    BYTE PTR [ebx+0x2e],dl
  511c6d:	aam    0x79
  511c6f:	xchg   DWORD PTR [edx-0xee945ab],edi
  511c75:	popf   
  511c76:	je     0x511cb3
  511c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511c79:	or     al,0x68
  511c7b:	and    DWORD PTR [ebx+0x654123dc],ebx
  511c81:	xchg   BYTE PTR [ebx+0x6e],cl
  511c84:	add    al,0x4d
  511c86:	in     eax,dx
  511c87:	aam    0xca
  511c89:	arpl   WORD PTR [ecx],cx
  511c8b:	push   edi
  511c8c:	into   
  511c8d:	out    dx,al
  511c8e:	out    0x30,eax
  511c90:	mov    ch,0x23
  511c92:	cmp    eax,0xc2e6fe72
  511c97:	or     cl,BYTE PTR [edx+0x9]
  511c9a:	aam    0x35
  511c9c:	imul   BYTE PTR [ebx*2-0xb94a1d7]
  511ca3:	fcomp  DWORD PTR [eax]
  511ca5:	in     al,dx
  511ca6:	mov    dl,0xa7
  511ca8:	xchg   edi,eax
  511ca9:	lods   al,BYTE PTR ds:[esi]
  511caa:	leave  
  511cab:	call   0xe15810b9
  511cb0:	or     BYTE PTR ds:0xb5e4f926,0xae
  511cb7:	int3   
  511cb8:	scas   eax,DWORD PTR es:[edi]
  511cb9:	mov    ebx,0x41c5210d
  511cbe:	repnz mov bh,0x41
  511cc1:	int3   
  511cc2:	inc    ebp
  511cc3:	pop    ebx
  511cc4:	ficomp DWORD PTR [ebp-0x6e]
  511cc7:	imul   edi,DWORD PTR [eax],0xd0b1c3f
  511ccd:	or     cl,ch
  511ccf:	adc    DWORD PTR [ebx-0x76],eax
  511cd2:	pop    es
  511cd3:	inc    ebx
  511cd4:	adc    eax,0x249042bf
  511cd9:	int3   
  511cda:	ja     0x511d01
  511cdc:	out    dx,al
  511cdd:	scas   eax,DWORD PTR es:[edi]
  511cde:	push   ds
  511cdf:	add    al,0x6d
  511ce1:	mov    al,0xc1
  511ce3:	test   bl,dl
  511ce5:	pop    ebx
  511ce6:	and    BYTE PTR [edi],dl
  511ce8:	and    bl,BYTE PTR [ebx+0x6a]
  511ceb:	(bad)  
  511cec:	out    0xcf,eax
  511cee:	xor    BYTE PTR [ebx-0x53],bh
  511cf1:	stos   DWORD PTR es:[edi],eax
  511cf2:	mov    dh,0x36
  511cf4:	mov    bh,0xc2
  511cf6:	inc    edi
  511cf7:	mov    esi,0xcec182e5
  511cfc:	cmp    BYTE PTR [ebp+0x77],dh
  511cff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511d00:	jmp    0x511cd3
  511d02:	xor    ch,BYTE PTR [ebx]
  511d04:	mov    DWORD PTR [esi-0x5015b737],edi
  511d0a:	inc    esp
  511d0b:	push   es
  511d0c:	xchg   esi,eax
  511d0d:	jp     0x511d19
  511d0f:	sar    DWORD PTR [ebx+0x5e757abb],0xdc
  511d16:	sbb    DWORD PTR [edx+0x37],0xe6606dd
  511d1d:	sbb    al,0xd4
  511d1f:	pop    ss
  511d20:	sbb    esi,esp
  511d22:	inc    BYTE PTR [eax-0x5cc977c5]
  511d28:	inc    ecx
  511d29:	out    dx,al
  511d2a:	int3   
  511d2b:	loopne 0x511d9e
  511d2d:	jge    0x511d25
  511d2f:	lods   eax,DWORD PTR ds:[esi]
  511d30:	cmp    eax,0xba38fec1
  511d35:	fdiv   st,st(2)
  511d37:	jg     0x511cc5
  511d39:	ror    al,cl
  511d3b:	mov    edi,ecx
  511d3d:	sar    BYTE PTR [esi],cl
  511d3f:	pop    es
  511d40:	mov    DWORD PTR [edx+0x321aed8c],ebp
  511d46:	rol    DWORD PTR [ebx],1
  511d48:	mov    ebx,DWORD PTR [edx+0x4b]
  511d4b:	xor    al,0x7b
  511d4d:	push   eax
  511d4e:	fimul  WORD PTR [eax+eax*8]
  511d51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511d52:	js     0x511cef
  511d54:	enter  0x51fe,0x19
  511d58:	pop    ecx
  511d59:	xchg   edx,eax
  511d5a:	out    0x92,eax
  511d5c:	imul   edi,DWORD PTR [eax-0x60],0xffffffb4
  511d60:	aas    
  511d61:	retf   
  511d62:	(bad)  
  511d64:	mov    ah,0x36
  511d66:	push   ds
  511d67:	fiadd  WORD PTR [ebx]
  511d69:	jmp    0x511d0c
  511d6b:	jno    0x511cf7
  511d6d:	dec    ecx
  511d6e:	fsubr  DWORD PTR [ebx+0xe0f5757]
  511d74:	(bad)  
  511d75:	in     eax,dx
  511d76:	dec    esi
  511d77:	dec    ebx
  511d78:	adc    eax,edi
  511d7a:	outs   dx,DWORD PTR ds:[esi]
  511d7b:	les    eax,FWORD PTR [edx-0x36db8935]
  511d81:	cld    
  511d82:	push   ebx
  511d83:	cmp    ah,bl
  511d85:	fwait
  511d86:	dec    eax
  511d87:	ds ins BYTE PTR es:[edi],dx
  511d89:	out    dx,al
  511d8a:	fisttp WORD PTR [esi]
  511d8c:	sbb    edi,DWORD PTR [ebx]
  511d8e:	jno    0x511df4
  511d90:	and    edx,DWORD PTR [ebp+0x32c7cbae]
  511d96:	xor    ch,BYTE PTR [ebp+ebx*2+0x883a6c7]
  511d9d:	ret    
  511d9e:	(bad)  
  511d9f:	aas    
  511da0:	mov    al,0x63
  511da2:	loop   0x511d94
  511da4:	adc    DWORD PTR [ebx+edx*2+0x3570b636],0x2b675c34
  511daf:	sbb    eax,0xaa88d9c0
  511db4:	das    
  511db5:	add    eax,0xa3113a5
  511dba:	call   0xdcdd:0x59e4e393
  511dc1:	mov    ecx,0x3ddb81e0
  511dc6:	push   esi
  511dc7:	or     BYTE PTR [eax-0x3a9dce47],ah
  511dcd:	js     0x511d60
  511dcf:	das    
  511dd0:	ins    DWORD PTR es:[edi],dx
  511dd1:	nop
  511dd2:	xchg   ebp,eax
  511dd3:	lock das 
  511dd5:	mov    al,ds:0x610a9941
  511dda:	push   0x8450923a
  511ddf:	jns    0x511de4
  511de1:	aas    
  511de2:	pop    ds
  511de3:	shl    BYTE PTR gs:[esi-0x7c],0x64
  511de8:	jmp    DWORD PTR [ecx+0x5f]
  511deb:	fs pop ecx
  511ded:	cmp    edx,DWORD PTR [ebx-0x7e0d5387]
  511df3:	add    edx,ebp
  511df5:	sbb    eax,0x55555a89
  511dfa:	xchg   edx,eax
  511dfb:	int    0xfe
  511dfd:	(bad)
  511e00:	loop   0x511e37
  511e02:	xchg   esi,eax
  511e03:	jle    0x511da4
  511e05:	sub    ebp,DWORD PTR [ebx]
  511e07:	jmp    0x511dfb
  511e09:	pop    edi
  511e0a:	or     DWORD PTR [edx],eax
  511e0c:	adc    DWORD PTR [ebx],ebp
  511e0e:	push   ecx
  511e0f:	test   eax,0x743501d1
  511e14:	xchg   BYTE PTR [edx+ecx*2-0x7c],cl
  511e18:	in     al,0xf9
  511e1a:	idiv   BYTE PTR [edx-0x28]
  511e1d:	cdq    
  511e1e:	jle    0x511e58
  511e20:	loop   0x511dd3
  511e22:	or     ecx,esi
  511e24:	stos   DWORD PTR es:[edi],eax
  511e25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  511e26:	or     DWORD PTR [esi-0x14],ebp
  511e29:	sub    al,0x9f
  511e2b:	sub    al,0x5d
  511e2d:	sub    BYTE PTR [ebx-0x70a5346b],bl
  511e33:	adc    DWORD PTR [edi-0xc],esi
  511e36:	out    0xd3,al
  511e38:	sar    DWORD PTR [esi],1
  511e3a:	xlat   BYTE PTR ds:[ebx]
  511e3b:	in     al,0x1a
  511e3d:	xchg   ebx,eax
  511e3e:	inc    ebx
  511e3f:	mov    edi,0xa4955f51
  511e44:	lahf   
  511e45:	push   edx
  511e46:	mov    esp,0x94973431
  511e4b:	aam    0x96
  511e4d:	sub    eax,0xdf739eee
  511e52:	mov    esp,0x3c4c41be
  511e57:	and    BYTE PTR [eax+0x5f],cl
  511e5a:	sbb    al,0xec
  511e5c:	pop    edi
  511e5d:	mov    edi,0x57a17b28
  511e62:	xchg   ebx,eax
  511e63:	jns    0x511ea1
  511e65:	or     DWORD PTR [ecx-0xa],ecx
  511e68:	mov    ebp,esi
  511e6a:	not    esp
  511e6c:	jecxz  0x511e56
  511e6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511e6f:	adc    dl,bl
  511e71:	faddp  st(5),st
  511e73:	sahf   
  511e74:	mov    al,ds:0x4baf9855
  511e79:	push   0x5ff1c0ea
  511e7e:	sub    DWORD PTR [ecx+0x1db865c],eax
  511e84:	out    0xbe,eax
  511e86:	and    BYTE PTR [esi-0x31],al
  511e89:	xor    bl,BYTE PTR [edi+0x65]
  511e8c:	mov    al,ds:0xc88363fe
  511e91:	mov    bh,0xe2
  511e93:	fsub   DWORD PTR [ecx]
  511e95:	mov    edx,0x81378f40
  511e9a:	fistp  WORD PTR [esi]
  511e9c:	rcl    DWORD PTR [edx],cl
  511e9e:	xchg   ecx,eax
  511e9f:	imul   edx,DWORD PTR [ebp-0x30],0xffffffa6
  511ea3:	push   cs
  511ea4:	or     al,dh
  511ea6:	les    eax,FWORD PTR [ebx]
  511ea8:	(bad)  
  511eaa:	mov    edx,DWORD PTR [ebp-0x71]
  511ead:	out    0x1,al
  511eaf:	jmp    0x511e36
  511eb1:	and    BYTE PTR [esp+esi*2],ch
  511eb4:	mov    esp,0x3e67ebad
  511eb9:	xchg   edi,eax
  511eba:	cmp    ch,BYTE PTR [eax-0x34]
  511ebd:	stos   BYTE PTR es:[edi],al
  511ebe:	jb     0x511e87
  511ec0:	je     0x511e88
  511ec2:	jg     0x511e95
  511ec4:	or     DWORD PTR [ebx],ebx
  511ec6:	fprem  
  511ec8:	bound  ebx,QWORD PTR [edi-0x6475a7de]
  511ece:	mov    dl,0x45
  511ed0:	retf   0x424b
  511ed3:	fdivp  st(4),st
  511ed5:	outs   dx,BYTE PTR ds:[esi]
  511ed6:	into   
  511ed7:	xor    al,0xdc
  511ed9:	out    dx,al
  511eda:	jno    0x511f40
  511edc:	dec    ebp
  511edd:	sti    
  511ede:	adc    dh,BYTE PTR [edx+0x71cda1c6]
  511ee4:	dec    ebp
  511ee5:	ror    BYTE PTR [edx+0x7b7f23ac],1
  511eeb:	cs (bad) 
  511eed:	pop    ebx
  511eee:	sbb    eax,0x41b4659b
  511ef3:	les    ecx,FWORD PTR [eax+0x5b]
  511ef6:	fadd   st,st(7)
  511ef8:	cmp    BYTE PTR [eax+0x61],bh
  511efb:	or     ebp,ecx
  511efd:	(bad)  
  511efe:	int3   
  511eff:	xchg   ebp,eax
  511f00:	mov    al,0x70
  511f02:	pusha  
  511f03:	dec    esp
  511f04:	das    
  511f05:	dec    ebx
  511f06:	or     al,0x41
  511f08:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  511f0a:	push   edx
  511f0b:	dec    eax
  511f0c:	pop    esp
  511f0d:	pop    esp
  511f0e:	fisubr WORD PTR [esi+0x1fcf611f]
  511f14:	push   edx
  511f15:	in     eax,0xb0
  511f17:	inc    ebp
  511f18:	or     esp,ebx
  511f1a:	xchg   esp,eax
  511f1b:	sbb    ah,BYTE PTR [ebp-0x72]
  511f1e:	and    al,0xf8
  511f20:	sbb    eax,0xb5d28153
  511f25:	mov    esi,0x5556ba58
  511f2a:	out    dx,eax
  511f2b:	mov    ecx,0x65f9f9d1
  511f30:	sub    al,cl
  511f32:	(bad)  
  511f33:	pop    esp
  511f34:	sbb    dl,BYTE PTR [edx+0x6d]
  511f37:	das    
  511f38:	pusha  
  511f39:	int    0xf6
  511f3b:	loop   0x511efe
  511f3d:	(bad)  
  511f3e:	jns    0x511f96
  511f40:	(bad)  [eax]
  511f42:	mov    al,0xc
  511f44:	add    al,BYTE PTR [eax]
  511f46:	retf   
  511f47:	inc    ebp
  511f48:	dec    edx
  511f49:	div    DWORD PTR [ebp-0x7d07de33]
  511f4f:	mov    ?,WORD PTR [ebx+0x7db7155]
  511f55:	jmp    0xa3144f77
  511f5a:	int3   
  511f5b:	xchg   bl,ah
  511f5d:	inc    edi
  511f5e:	sbb    ebp,eax
  511f60:	push   ebx
  511f61:	ficomp DWORD PTR [ebx-0xd991018]
  511f67:	sahf   
  511f68:	(bad)  
  511f69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  511f6a:	jle    0x511f9a
  511f6c:	xchg   edi,eax
  511f6d:	imul   edi,DWORD PTR [esi+0xf],0xec2391f4
  511f74:	or     ebp,0x18
  511f77:	lods   al,BYTE PTR ds:[esi]
  511f78:	sbb    DWORD PTR [esi+0xd9afcaa],esp
  511f7e:	stos   DWORD PTR es:[edi],eax
  511f7f:	outs   dx,BYTE PTR ds:[esi]
  511f80:	mov    edx,0x5f152d3f
  511f85:	or     BYTE PTR [ebx-0x7a00cb7d],cl
  511f8b:	mov    cl,0xfb
  511f8d:	and    BYTE PTR [ecx-0x52e730f9],ch
  511f93:	and    ah,BYTE PTR [esi-0x358afdf5]
  511f99:	push   0x4e
  511f9b:	ins    DWORD PTR es:[edi],dx
  511f9c:	dec    esi
  511f9d:	xor    BYTE PTR [edi-0x2cc2a800],ah
  511fa3:	les    edx,FWORD PTR [ecx+0x5b]
  511fa6:	aam    0x53
  511fa8:	fld    DWORD PTR [ebx+0x63]
  511fab:	jae    0x511f70
  511fad:	bound  esi,QWORD PTR [edx-0x78]
  511fb0:	xchg   edx,eax
  511fb1:	mov    eax,ds:0x85362833
  511fb6:	dec    ebx
  511fb7:	icebp  
  511fb8:	ds hlt 
  511fba:	imul   edi,DWORD PTR [edx-0x36],0x9
  511fbe:	xchg   BYTE PTR [ebx+0x126cc193],ch
  511fc4:	xor    eax,0x4a732298
  511fc9:	inc    ecx
  511fca:	(bad)  
  511fcb:	lods   al,BYTE PTR ds:[esi]
  511fcc:	imul   ebp,eax,0x34
  511fcf:	sti    
  511fd0:	and    ecx,DWORD PTR [ecx+eax*4+0x37a66d6a]
  511fd7:	aad    0x62
  511fd9:	sbb    ebp,DWORD PTR [edi+0x10fed13a]
  511fdf:	loopne 0x511faf
  511fe1:	int    0x6b
  511fe3:	inc    ecx
  511fe4:	pop    ebp
  511fe5:	sbb    al,0xd
  511fe7:	cmp    BYTE PTR [eax],ah
  511fe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  511fea:	sub    eax,0x8fd114ab
  511fef:	(bad)  
  511ff0:	out    0x68,eax
  511ff2:	pop    es
  511ff3:	shl    BYTE PTR [edi],1
  511ff5:	mov    ah,0x35
  511ff7:	push   ebp
  511ff8:	in     al,dx
  511ff9:	inc    esi
  511ffa:	jg     0x512020
  511ffc:	pop    esi
  511ffd:	adc    ah,BYTE PTR [edi+0x65b5032a]
  512003:	jl     0x511fec
  512005:	iret   
  512006:	jbe    0x51200a
  512008:	call   0xccd:0x37081aad
  51200f:	cmp    ebp,DWORD PTR [ebx+eax*8]
  512012:	mov    eax,0xbd6cbce
  512017:	ins    DWORD PTR es:[edi],dx
  512018:	arpl   WORD PTR [ebx],ax
  51201a:	retf   
  51201b:	adc    ecx,ebx
  51201d:	call   0x41f1:0x2011bcfd
  512024:	add    DWORD PTR [ebp+0x4e5f01b2],edx
  51202a:	ja     0x51201f
  51202c:	inc    ecx
  51202d:	push   es
  51202e:	push   ebx
  51202f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512030:	push   ebx
  512031:	bound  edi,QWORD PTR [ebx+0x5c]
  512034:	sub    ch,BYTE PTR [esp+edi*4-0x41c3878e]
  51203b:	adc    al,0xb5
  51203d:	jl     0x512016
  51203f:	pop    esi
  512040:	jmp    0x511ffc
  512042:	jbe    0x51201d
  512044:	into   
  512045:	add    eax,eax
  512047:	dec    ebx
  512048:	add    ah,al
  51204a:	or     eax,0xacd1f651
  51204f:	add    dl,BYTE PTR [ebx]
  512051:	mov    DWORD PTR [esi-0x4f],edi
  512054:	aas    
  512055:	fisub  WORD PTR ds:0x8e00abc6
  51205b:	icebp  
  51205c:	(bad)  
  51205d:	(bad)
  512060:	mov    dh,0xf5
  512062:	add    al,0x27
  512064:	in     eax,0x71
  512066:	dec    ecx
  512067:	inc    eax
  512068:	mov    ds:0x8ad0899e,eax
  51206d:	std    
  51206e:	mov    bh,0xf1
  512070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512071:	fwait
  512072:	stos   BYTE PTR es:[edi],al
  512073:	xor    al,0x59
  512075:	sbb    BYTE PTR [ecx-0x269dc49a],0x3d
  51207c:	lock xor DWORD PTR [ecx],esi
  51207f:	retf   0x693f
  512082:	jnp    0x51207e
  512084:	bndldx (bad),[ebx]
  512087:	cmp    bh,bh
  512089:	sub    ebp,DWORD PTR [ebx-0x7c]
  51208c:	stos   DWORD PTR es:[edi],eax
  51208d:	xlat   BYTE PTR ds:[ebx]
  51208e:	and    al,0x42
  512090:	dec    ebx
  512091:	nop
  512092:	mov    eax,0xb2d98390
  512097:	mov    ch,0x6d
  512099:	push   ebx
  51209a:	int3   
  51209b:	mov    DWORD PTR [ecx+0x7ef6fb53],esi
  5120a1:	sub    al,BYTE PTR [ebp-0x6]
  5120a4:	and    eax,0x50c85061
  5120a9:	scas   al,BYTE PTR es:[edi]
  5120aa:	inc    edi
  5120ab:	jns    0x5120ef
  5120ad:	sub    al,0x67
  5120af:	cwde   
  5120b0:	fisub  WORD PTR [edx]
  5120b2:	or     edi,DWORD PTR [esp+eax*4-0x21e10d87]
  5120b9:	jl     0x5120ac
  5120bb:	popa   
  5120bc:	loopne 0x512047
  5120be:	ds in  eax,dx
  5120c0:	bound  ebp,QWORD PTR [eax+0x5f]
  5120c3:	add    al,0x86
  5120c5:	ret    0x19b2
  5120c8:	mov    dl,0x53
  5120ca:	adc    al,al
  5120cc:	inc    esp
  5120cd:	jmp    0x2012:0x245df179
  5120d4:	mul    BYTE PTR [eax+eiz*8]
  5120d7:	adc    dl,BYTE PTR [esp+ebp*8+0x57494255]
  5120de:	jp     0x512074
  5120e0:	in     eax,dx
  5120e1:	mov    bh,0x20
  5120e3:	xor    esp,0xbdf65a4
  5120e9:	icebp  
  5120ea:	ds xchg ecx,eax
  5120ec:	aam    0x53
  5120ee:	addr16 jge 0x5120dc
  5120f1:	mov    edi,0x2ce6f9f9
  5120f6:	jl     0x51216e
  5120f8:	loop   0x512158
  5120fa:	(bad)  
  5120fb:	scas   al,BYTE PTR es:[edi]
  5120fc:	xchg   esi,eax
  5120fd:	stos   DWORD PTR es:[edi],eax
  5120fe:	mov    ds:0xd281d6b8,al
  512103:	in     al,0xc9
  512105:	or     ch,BYTE PTR gs:[edx-0x421af5a9]
  51210c:	pop    DWORD PTR [esi+0x25899e03]
  512112:	aad    0xa1
  512114:	xor    ebx,edx
  512116:	(bad)  [esi-0x3ea1040b]
  51211c:	adc    edi,DWORD PTR [eax]
  51211e:	cmp    eax,DWORD PTR fs:[edi]
  512121:	dec    edi
  512122:	pop    ebp
  512123:	dec    BYTE PTR [ecx+0x70045122]
  512129:	scas   al,BYTE PTR es:[edi]
  51212a:	fild   QWORD PTR [ecx-0x3e460263]
  512130:	cmp    cl,BYTE PTR [esi+0x4c102d07]
  512136:	push   ecx
  512137:	mov    BYTE PTR [ecx+0x43],ch
  51213a:	mov    edi,DWORD PTR [edi-0x15]
  51213d:	mov    al,0xb9
  51213f:	mov    ds:0x4c1a1906,al
  512144:	sbb    eax,0x953fee47
  512149:	icebp  
  51214a:	mov    ecx,0x8c73a40
  51214f:	ins    DWORD PTR es:[edi],dx
  512150:	fsub   DWORD PTR [edi+ebp*1]
  512153:	test   BYTE PTR [ecx],al
  512155:	std    
  512156:	adc    cl,BYTE PTR [eax-0x63372026]
  51215c:	mov    esi,0x6a7b625c
  512161:	in     eax,dx
  512162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512163:	leave  
  512164:	sub    esp,DWORD PTR [ecx+0x3e]
  512167:	sub    eax,0x7a94b4d4
  51216c:	imul   eax,edi,0xfffffffa
  51216f:	push   edi
  512170:	dec    edi
  512171:	shr    ebp,cl
  512173:	mov    cl,0xee
  512175:	or     BYTE PTR [esi],ah
  512177:	adc    al,0xdf
  512179:	ret    
  51217a:	sar    BYTE PTR [esi+ebx*1+0x3],1
  51217e:	mov    al,0x46
  512180:	cli    
  512181:	(bad)  
  512182:	out    dx,eax
  512183:	daa    
  512184:	je     0x512153
  512186:	dec    ecx
  512187:	add    eax,0x8c7f331d
  51218c:	jne    0x5121cc
  51218e:	sbb    bl,BYTE PTR [ecx]
  512190:	push   ebp
  512191:	sbb    dl,BYTE PTR [edx+0x1c3651db]
  512197:	test   al,0x6
  512199:	loope  0x51216a
  51219b:	cbw    
  51219d:	add    ch,0xe
  5121a0:	adc    BYTE PTR [esp+edi*1-0x3a38f6d4],ah
  5121a7:	inc    edx
  5121a8:	xor    ch,BYTE PTR ds:0x4839e865
  5121ae:	push   cs
  5121af:	ss mov edi,0xc54983bd
  5121b5:	pop    eax
  5121b6:	int    0xab
  5121b8:	pop    edx
  5121b9:	popa   
  5121ba:	retf   
  5121bb:	cli    
  5121bc:	dec    ecx
  5121bd:	pop    edi
  5121be:	or     bh,dh
  5121c0:	fdiv   DWORD PTR [eax]
  5121c2:	push   0xffffff9b
  5121c4:	push   ebp
  5121c5:	fcomp  st(5)
  5121c7:	sti    
  5121c8:	or     al,0xb5
  5121ca:	repz sti 
  5121cc:	cmc    
  5121cd:	inc    ebp
  5121ce:	sub    ch,ah
  5121d0:	nop
  5121d1:	dec    edi
  5121d2:	mov    ecx,0x988f4caa
  5121d7:	or     al,0xb0
  5121d9:	popf   
  5121da:	pop    ecx
  5121db:	add    al,0xda
  5121dd:	test   BYTE PTR [esi+edi*2-0x51],bh
  5121e1:	inc    edx
  5121e2:	int3   
  5121e3:	xor    ah,ch
  5121e5:	adc    bh,bh
  5121e7:	sub    eax,0x770b2b5
  5121ec:	lea    ebp,[ecx+0x1e56cd2f]
  5121f2:	xor    al,0x41
  5121f4:	int3   
  5121f5:	push   edx
  5121f6:	outs   dx,BYTE PTR ds:[esi]
  5121f7:	inc    esi
  5121f8:	cmc    
  5121f9:	add    ah,BYTE PTR [ebp-0x62f9b68a]
  5121ff:	rcr    DWORD PTR es:[edx-0x1a],0xef
  512204:	lahf   
  512205:	ins    BYTE PTR es:[edi],dx
  512206:	outs   dx,DWORD PTR ds:[esi]
  512207:	cmp    al,al
  512209:	out    dx,eax
  51220a:	jnp    0x512215
  51220c:	icebp  
  51220d:	cmp    cl,BYTE PTR [edi-0x16]
  512210:	jle    0x5121e9
  512212:	ss mov eax,0xa57aa55f
  512218:	jmp    0xd3ab21ff
  51221d:	jno    0x51227f
  51221f:	retf   0x5de1
  512222:	(bad)  
  512223:	push   0xffffff81
  512225:	iret   
  512226:	and    BYTE PTR [edi],0x51
  512229:	pop    esp
  51222a:	js     0x5121e2
  51222c:	ss push ebp
  51222e:	ss int 0x28
  512231:	pop    ss
  512232:	ins    DWORD PTR es:[di],dx
  512234:	lods   al,BYTE PTR ds:[esi]
  512235:	lds    ebp,FWORD PTR [eax-0x18]
  512238:	or     bh,ch
  51223a:	das    
  51223b:	mov    ch,0x36
  51223d:	push   ebp
  51223e:	mov    al,ds:0x9ae042dd
  512243:	data16 scas al,BYTE PTR es:[edi]
  512245:	mov    ch,0x4d
  512247:	xchg   ebx,eax
  512248:	mov    edx,0x8a3e5d7
  51224d:	or     ecx,DWORD PTR [ecx-0x1a4c8e7e]
  512253:	rcl    BYTE PTR [edi-0x2c],0x36
  512257:	pop    ecx
  512258:	push   eax
  512259:	sub    ah,dh
  51225b:	rol    DWORD PTR [eax+0x4a],1
  51225e:	mov    edi,0xe9912e78
  512263:	mov    edi,0xfa102a6e
  512268:	(bad)  
  512269:	push   0x5b
  51226b:	ss sahf 
  51226d:	aaa    
  51226e:	test   BYTE PTR [edi+edi*8-0x3d],al
  512272:	fdivr  DWORD PTR ds:[ecx+0x2b]
  512276:	leave  
  512277:	sbb    dh,BYTE PTR [ebx]
  512279:	mov    ss,WORD PTR [ebp+0x79d7f7ce]
  51227f:	mov    bl,BYTE PTR [ecx]
  512281:	aas    
  512282:	rol    BYTE PTR ds:0x83d0e363,0x79
  512289:	jbe    0x512213
  51228b:	cdq    
  51228c:	(bad)  
  51228d:	cmp    DWORD PTR [esi],ebx
  51228f:	mov    dl,0xd2
  512291:	xor    BYTE PTR [ecx-0x5d],0x4f
  512295:	fimul  WORD PTR [edx-0x7c469a8f]
  51229b:	cs pop ebp
  51229d:	mov    bl,0xde
  51229f:	sub    eax,0xb0ebf417
  5122a4:	scas   al,BYTE PTR es:[edi]
  5122a5:	mov    eax,ds:0x89add99f
  5122aa:	push   cs
  5122ab:	push   es
  5122ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5122ad:	dec    edx
  5122ae:	daa    
  5122af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5122b0:	out    dx,al
  5122b1:	inc    edi
  5122b2:	or     eax,0x830d1d1f
  5122b7:	pop    ss
  5122b8:	es test al,0xbb
  5122bb:	cmp    ecx,DWORD PTR [esi]
  5122bd:	sahf   
  5122be:	imul   BYTE PTR [ecx+0x6bc1af74]
  5122c4:	iret   
  5122c5:	(bad)  
  5122c6:	pop    ds
  5122c7:	aam    0x7c
  5122c9:	div    BYTE PTR ds:0xaf6eb723
  5122cf:	inc    eax
  5122d0:	xor    DWORD PTR [edi],edx
  5122d2:	cdq    
  5122d3:	mov    eax,ds:0xe6f402b5
  5122d8:	mov    ebx,0xbd4a38ba
  5122dd:	sahf   
  5122de:	xor    edi,eax
  5122e0:	jg     0x5122ec
  5122e2:	adc    bh,BYTE PTR [ebp-0xb]
  5122e5:	fwait
  5122e6:	pop    ss
  5122e7:	gs popa 
  5122e9:	retf   0x33
  5122ec:	mov    BYTE PTR [edi-0x50],cl
  5122ef:	sbb    al,0x9a
  5122f1:	retf   
  5122f2:	xchg   esp,eax
  5122f3:	out    dx,eax
  5122f4:	xor    DWORD PTR [esi+0x43],ebp
  5122f7:	sbb    al,0x4e
  5122f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5122fa:	arpl   bp,cx
  5122fc:	push   eax
  5122fd:	clc    
  5122fe:	mov    al,0x96
  512300:	dec    ebx
  512301:	ret    0x779d
  512304:	imul   edi,DWORD PTR [ebp+0x4ea1875],0xffffffa6
  51230b:	xor    DWORD PTR [ebx+0xce67a00],esi
  512311:	mov    ds:0x37191b4c,eax
  512316:	out    0x47,al
  512318:	push   edi
  512319:	daa    
  51231a:	dec    esp
  51231b:	loopne 0x5122fe
  51231d:	mov    ds:0xb27be2c8,al
  512322:	int3   
  512323:	sahf   
  512324:	add    ecx,DWORD PTR [edi-0xd480fb8]
  51232a:	cmc    
  51232b:	les    esp,FWORD PTR [edx+0x39]
  51232e:	nop
  51232f:	fisttp WORD PTR [edx+edi*4-0x27]
  512333:	and    ah,dh
  512335:	bound  esi,QWORD PTR [ecx]
  512337:	mov    BYTE PTR [eax+ebx*4],cl
  51233a:	fimul  DWORD PTR [eax-0x6f55b026]
  512340:	jle    0x512308
  512342:	loope  0x51237b
  512344:	mov    BYTE PTR [ecx],bh
  512346:	sub    DWORD PTR [ebx+esi*2+0x5f],0xffffffdd
  51234b:	sti    
  51234c:	adc    ebp,DWORD PTR [ebx]
  51234e:	jmp    0x36ade9e6
  512353:	fbld   TBYTE PTR [esi-0x6b]
  512356:	xor    eax,0xfb5f044d
  51235b:	mov    dh,0xd8
  51235d:	adc    eax,0xf9ea6e50
  512362:	mov    WORD PTR [ebx-0x23],ds
  512365:	icebp  
  512366:	mov    cl,0x20
  512368:	mov    ebx,DWORD PTR [eax]
  51236a:	in     al,0x1d
  51236c:	xchg   edx,eax
  51236d:	fstp   DWORD PTR [edx-0x76]
  512370:	popa   
  512371:	dec    ebx
  512372:	lock adc DWORD PTR [edx+esi*8+0x264981fe],ecx
  51237a:	clc    
  51237b:	and    edi,DWORD PTR [ebp-0x3070feb]
  512381:	pop    eax
  512382:	xor    edx,DWORD PTR [edx-0x7c]
  512385:	mov    edx,0x7b684c61
  51238a:	ds retf 
  51238c:	es call 0x8253:0xf5ac33ae
  512394:	jae    0x5123bf
  512396:	psubw  mm3,mm6
  512399:	es jp  0x512404
  51239c:	mul    BYTE PTR ds:0xa97f2081
  5123a2:	repz dec ebx
  5123a4:	pop    edx
  5123a5:	xlat   BYTE PTR ds:[ebx]
  5123a6:	pop    ds
  5123a7:	xchg   ebx,eax
  5123a8:	mov    eax,0xc5e36672
  5123ad:	pop    ecx
  5123ae:	ret    
  5123af:	stos   DWORD PTR es:[edi],eax
  5123b0:	sbb    DWORD PTR [esi-0x1944e696],esi
  5123b6:	in     eax,dx
  5123b7:	stc    
  5123b8:	in     eax,dx
  5123b9:	int3   
  5123ba:	mov    ebx,0x13186ed6
  5123bf:	sub    al,0x90
  5123c1:	jge    0x512429
  5123c3:	into   
  5123c4:	sub    edx,0x11
  5123c7:	lods   al,BYTE PTR ds:[esi]
  5123c8:	int3   
  5123c9:	cli    
  5123ca:	push   esi
  5123cb:	inc    esp
  5123cc:	popf   
  5123cd:	cmc    
  5123ce:	inc    ecx
  5123cf:	add    bh,BYTE PTR [esi]
  5123d1:	fstp   QWORD PTR [esi-0x4e]
  5123d4:	cmp    al,0x29
  5123d6:	inc    ebx
  5123d7:	ret    
  5123d8:	sbb    ch,BYTE PTR [ebx+esi*2]
  5123db:	xchg   ebp,eax
  5123dc:	stos   BYTE PTR es:[edi],al
  5123dd:	pop    ebx
  5123de:	pop    edi
  5123df:	mov    bh,0x9e
  5123e1:	imul   ebx,DWORD PTR ds:0xab2c5208,0x51
  5123e8:	call   0x3844:0x404a7ae5
  5123ef:	les    edx,FWORD PTR [eax]
  5123f1:	sar    DWORD PTR [ebx],cl
  5123f3:	sub    DWORD PTR [edx-0x751b01c8],esi
  5123f9:	popf   
  5123fa:	imul   esi,DWORD PTR [edi],0x77
  5123fd:	in     eax,0x67
  5123ff:	add    DWORD PTR [esi-0x351799ec],esi
  512405:	ins    DWORD PTR es:[edi],dx
  512406:	mov    db3,ecx
  512409:	(bad)  
  51240a:	dec    edx
  51240b:	scas   al,BYTE PTR es:[edi]
  51240c:	dec    edx
  51240d:	xor    cl,bl
  51240f:	jno    0x512412
  512411:	sti    
  512412:	or     BYTE PTR [ebx+0x70],0x4b
  512416:	cli    
  512417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512418:	jp     0x51246b
  51241a:	retf   0xb93e
  51241d:	repnz xchg esi,eax
  51241f:	stos   DWORD PTR es:[edi],eax
  512420:	or     eax,0xfa755479
  512425:	or     esi,ebp
  512427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512428:	pop    es
  512429:	gs popw es
  51242c:	pop    ebx
  51242d:	xor    al,BYTE PTR [edi-0x1521314e]
  512433:	shl    DWORD PTR [edx],1
  512435:	jmp    0x512401
  512437:	mov    eax,ds:0xe2beee62
  51243c:	mov    ebp,0x8fb67ca5
  512441:	out    0xe8,eax
  512443:	imul   edi,edi,0x7bfb3aa4
  512449:	add    eax,0xb23d87ff
  51244e:	pop    ds
  51244f:	in     al,0xd5
  512451:	sub    DWORD PTR [esi-0x28331d8b],edx
  512457:	int3   
  512458:	sti    
  512459:	scas   al,BYTE PTR es:[edi]
  51245a:	pop    eax
  51245b:	repz in eax,dx
  51245d:	push   eax
  51245e:	mov    al,0x31
  512460:	xor    al,0x81
  512462:	ds out dx,eax
  512464:	pop    ebp
  512465:	retf   0x8617
  512468:	scas   al,BYTE PTR es:[edi]
  512469:	mov    ?,edi
  51246b:	in     eax,dx
  51246c:	(bad)  
  51246d:	xchg   ecx,eax
  51246e:	mov    ebx,0xe9c0af0b
  512473:	xchg   ebp,eax
  512474:	aam    0xac
  512476:	fdivr  QWORD PTR [edx+0x21]
  512479:	icebp  
  51247a:	(bad)  
  51247b:	jge    0x512477
  51247d:	inc    ecx
  51247e:	jae    0x51244e
  512480:	lods   eax,DWORD PTR ds:[esi]
  512481:	mov    esp,0x4c8d0c8b
  512486:	dec    ebp
  512487:	mov    ds:0x81c3dc57,al
  51248c:	pushw  0x5c
  51248f:	pusha  
  512490:	je     0x51242e
  512492:	xlat   BYTE PTR ds:[ebx]
  512493:	cmc    
  512494:	sbb    eax,0x43afd9e3
  512499:	lods   eax,DWORD PTR ds:[esi]
  51249a:	cli    
  51249b:	int3   
  51249c:	xor    BYTE PTR [esi+0x31],dh
  51249f:	inc    ebx
  5124a0:	jp     0x512452
  5124a2:	imul   ebp,DWORD PTR [edx-0x487e484e],0x64fff4f7
  5124ac:	xchg   ebx,eax
  5124ad:	out    0xcb,eax
  5124af:	jg     0x512505
  5124b1:	jo     0x5124bf
  5124b3:	es aam 0xa8
  5124b6:	xchg   ecx,eax
  5124b7:	cmc    
  5124b8:	and    eax,0x9bbc2c5d
  5124bd:	test   BYTE PTR gs:[eax],dl
  5124c0:	clc    
  5124c1:	shr    DWORD PTR [edi-0x3c8a6a90],cl
  5124c7:	or     eax,0x6ea9a282
  5124cc:	ins    DWORD PTR es:[edi],dx
  5124cd:	ds xchg esp,eax
  5124cf:	sub    BYTE PTR [ebp+0x6e],ah
  5124d2:	in     eax,0xd6
  5124d4:	test   DWORD PTR [ebx-0x1e],ebp
  5124d7:	pop    ecx
  5124d8:	cs adc al,0xe2
  5124db:	and    eax,0xcab4beeb
  5124e0:	add    eax,0x28f58b8e
  5124e5:	enter  0x2faf,0x9d
  5124e9:	test   eax,esp
  5124eb:	(bad)  
  5124ed:	xchg   BYTE PTR [ecx],al
  5124ef:	fidivr DWORD PTR [ebx+0x6d0b2162]
  5124f5:	pop    ss
  5124f6:	xor    DWORD PTR [ecx],esi
  5124f8:	pop    ecx
  5124f9:	sbb    bl,BYTE PTR [edx-0x4307e461]
  5124ff:	rcl    edi,cl
  512501:	sbb    ebx,ebx
  512503:	or     al,0x55
  512505:	pushf  
  512506:	or     BYTE PTR [ebp+edi*1-0x19502d4],ch
  51250d:	(bad)  
  51250e:	push   esp
  51250f:	adc    ecx,DWORD PTR [ecx]
  512511:	jge    0x51258f
  512513:	jmp    0x27b6:0xf143439a
  51251a:	pop    es
  51251b:	sub    DWORD PTR [esp+eax*8+0x32e60b73],0x88fadf6c
  512526:	retf   
  512527:	push   ebp
  512528:	push   ecx
  512529:	cld    
  51252a:	inc    ebp
  51252b:	or     esp,DWORD PTR [edx-0x6ea9d208]
  512531:	adc    BYTE PTR [ecx],dl
  512533:	pop    edx
  512534:	scas   al,BYTE PTR es:[edi]
  512535:	js     0x51251d
  512537:	push   cs
  512538:	aad    0xa8
  51253a:	mov    DWORD PTR [ecx-0x783d9c57],0xab9c0c8
  512544:	xlat   BYTE PTR ds:[ebx]
  512545:	xchg   edi,eax
  512546:	push   ecx
  512547:	fisub  WORD PTR fs:[edx]
  51254a:	ins    BYTE PTR es:[edi],dx
  51254b:	or     eax,DWORD PTR [ebx+ebx*2+0x4f70407f]
  512552:	mov    bl,bh
  512554:	jbe    0x512513
  512556:	and    BYTE PTR [ebx],bh
  512558:	xchg   edi,eax
  512559:	mov    ecx,DWORD PTR [eax-0x714becb1]
  51255f:	pop    ebp
  512560:	mov    edi,0xf9587848
  512565:	mov    al,0xd8
  512567:	sbb    edi,DWORD PTR [esi+0x68]
  51256a:	idiv   DWORD PTR [ebx-0x376991b8]
  512570:	pushf  
  512571:	jle    0x512576
  512573:	adc    ebx,esp
  512575:	cs push cs
  512577:	sbb    BYTE PTR [esi],ch
  512579:	ret    
  51257a:	fidiv  WORD PTR [eax+eax*2-0x6a]
  51257e:	(bad)  [esi+0x66e2851c]
  512584:	dec    esp
  512585:	pop    esi
  512586:	push   ds
  512587:	push   0x37ab2f91
  51258c:	or     al,BYTE PTR [edi]
  51258e:	in     al,0x35
  512590:	inc    ebp
  512591:	stos   DWORD PTR es:[edi],eax
  512592:	inc    ebx
  512593:	and    al,0x4
  512595:	fisttp WORD PTR ds:0x3b4ade48
  51259b:	dec    edx
  51259c:	loope  0x51254d
  51259e:	mov    ah,0x8
  5125a0:	ret    
  5125a1:	gs pop esp
  5125a3:	cmp    BYTE PTR [ebp-0x1b],0xe1
  5125a7:	fisttp QWORD PTR [edi-0x21]
  5125aa:	or     DWORD PTR [ebx+0x14ac5293],0xa58d535c
  5125b4:	or     DWORD PTR [eax-0x63],ebx
  5125b7:	xor    DWORD PTR [ebp+0x6],ebp
  5125ba:	sub    bh,BYTE PTR [edi]
  5125bc:	cli    
  5125bd:	sti    
  5125be:	out    dx,eax
  5125bf:	mov    ds:0x63509b24,eax
  5125c4:	jmp    0xadb18f57
  5125c9:	cmp    al,0x86
  5125cb:	jecxz  0x512609
  5125cd:	icebp  
  5125ce:	not    DWORD PTR [edx]
  5125d0:	loope  0x512644
  5125d2:	cs popf 
  5125d4:	imul   ebp,DWORD PTR [ecx],0x38d5d179
  5125da:	loope  0x512600
  5125dc:	(bad)  
  5125dd:	cmp    cl,BYTE PTR [eax]
  5125df:	(bad)  
  5125e0:	(bad)  
  5125e1:	jnp    0x5125af
  5125e3:	sub    bh,BYTE PTR [ebx-0x79]
  5125e6:	inc    eax
  5125e7:	pop    esp
  5125e8:	xor    al,0x6e
  5125ea:	scas   eax,DWORD PTR es:[edi]
  5125eb:	cmp    eax,0x7b0534c3
  5125f0:	gs mov dl,0x42
  5125f3:	shl    DWORD PTR [esi+0x79],0x72
  5125f7:	rol    BYTE PTR [esi+0x66a9b0ae],cl
  5125fd:	push   edi
  5125fe:	and    ecx,DWORD PTR [edx-0x46ea006e]
  512604:	aad    0x59
  512606:	push   esp
  512607:	cmp    ch,BYTE PTR [ecx]
  512609:	fdiv   DWORD PTR [ecx-0x32]
  51260c:	in     al,dx
  51260d:	jg     0x512638
  51260f:	fxch   st(2)
  512611:	hlt    
  512612:	enter  0x604c,0x8e
  512616:	aas    
  512617:	leave  
  512618:	bound  edx,QWORD PTR [ecx+0x12]
  51261b:	nop    DWORD PTR [ebp-0x1279f3f3]
  512622:	aam    0x3d
  512624:	inc    edi
  512625:	lea    ebx,[ebp-0x72]
  512628:	jbe    0x512601
  51262a:	shl    esi,1
  51262c:	or     DWORD PTR [edx-0x7fa48c55],edi
  512632:	push   edi
  512633:	inc    edi
  512634:	test   ecx,edi
  512636:	jne    0x5125eb
  512638:	ins    BYTE PTR es:[di],dx
  51263a:	aad    0x27
  51263c:	mov    ah,0x9a
  51263e:	sub    esp,DWORD PTR [ebx]
  512640:	push   ds
  512641:	pop    edx
  512642:	add    al,0x1a
  512644:	icebp  
  512645:	call   0xffbe:0x1d7a132e
  51264c:	jle    0x512639
  51264e:	mov    ecx,0x924f2266
  512653:	cmp    dh,BYTE PTR ds:0x42c107d0
  512659:	hlt    
  51265a:	test   ah,al
  51265c:	imul   edi,esp,0xffffffcb
  51265f:	clc    
  512660:	xchg   edi,eax
  512661:	jns    0x5126a7
  512663:	push   eax
  512664:	aas    
  512665:	pop    esp
  512666:	cmp    dh,dl
  512668:	add    al,0xd9
  51266a:	push   cs
  51266b:	adc    edi,eax
  51266d:	int3   
  51266e:	and    ecx,ebp
  512670:	adc    edx,DWORD PTR [edi-0x19]
  512673:	retf   0xe2c6
  512676:	pop    ebp
  512677:	xor    al,BYTE PTR ds:0x99730e47
  51267d:	jmp    0x51268c
  51267f:	mov    ds:0xa17d6884,eax
  512684:	fimul  DWORD PTR [edx-0x532d856a]
  51268a:	sar    DWORD PTR [eax],cl
  51268c:	and    BYTE PTR [esi],dl
  51268e:	into   
  51268f:	test   edi,ebp
  512691:	inc    ecx
  512692:	cs loop 0x51267d
  512695:	not    BYTE PTR [ebp-0x964a96a]
  51269b:	fadd   QWORD PTR [ecx]
  51269d:	or     ah,BYTE PTR [ecx+0x19]
  5126a0:	ds stos DWORD PTR es:[edi],eax
  5126a2:	and    eax,0x61e7a04a
  5126a7:	ja     0x5126c8
  5126a9:	arpl   WORD PTR [ecx],sp
  5126ab:	add    ah,BYTE PTR [edi+0x22]
  5126ae:	out    dx,al
  5126af:	sbb    al,BYTE PTR [edx-0x12]
  5126b2:	sbb    ebp,esp
  5126b4:	out    0xa6,eax
  5126b6:	fstp   QWORD PTR ds:0xf32dc562
  5126bc:	mov    dh,0xa
  5126be:	sbb    edx,eax
  5126c0:	ret    
  5126c1:	jno    0x512725
  5126c3:	sbb    DWORD PTR [edi],esp
  5126c5:	shl    DWORD PTR [edi+0x4161240e],0x5
  5126cc:	addr16 leave 
  5126ce:	(bad)
  5126d2:	repnz ss in eax,0x9a
  5126d6:	sub    bl,ch
  5126d8:	dec    ebp
  5126d9:	pop    ebp
  5126da:	mov    ebx,0xc0deab32
  5126df:	aaa    
  5126e0:	mov    bl,BYTE PTR [eax+0x7f]
  5126e3:	xlat   BYTE PTR ds:[ebx]
  5126e4:	cwde   
  5126e5:	inc    ebx
  5126e6:	fcom   DWORD PTR [ebx+0x21]
  5126e9:	pop    eax
  5126ea:	jno    0x512702
  5126ec:	out    dx,al
  5126ed:	adc    dl,BYTE PTR [ebx-0x58]
  5126f0:	mov    al,0xb4
  5126f2:	call   0x2a0ab48d
  5126f7:	mov    ds:0xc7c7b046,al
  5126fc:	sub    bl,BYTE PTR [eax]
  5126fe:	mov    es,WORD PTR [eax]
  512700:	inc    edi
  512701:	jnp    0x5126eb
  512703:	xchg   edx,eax
  512704:	inc    ecx
  512705:	push   ebp
  512706:	mov    cl,0xa6
  512708:	cli    
  512709:	lock or dl,BYTE PTR [ebx+0x48f91c7a]
  512710:	pop    esi
  512711:	dec    edi
  512712:	(bad)  
  512713:	cmp    ebx,edx
  512715:	sbb    eax,0x8e88e1bb
  51271a:	shl    eax,0x90
  51271d:	out    0x7,al
  51271f:	cmp    bl,BYTE PTR [edx]
  512721:	es mov ebx,0x731cdcf2
  512727:	out    0xa9,eax
  512729:	jle    0x512726
  51272b:	enter  0xe9d8,0xd9
  51272f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512730:	and    ebx,DWORD PTR [ebp+eax*4+0x4c4b51d]
  512737:	jle    0x512706
  512739:	pop    edi
  51273a:	in     eax,0x5c
  51273c:	mov    esp,0x2ff41465
  512741:	mov    DWORD PTR [eax-0x19d824f1],eax
  512747:	cmp    al,0x24
  512749:	das    
  51274a:	(bad)  
  51274b:	in     eax,0xf1
  51274d:	mov    ah,0xbb
  51274f:	mov    dl,0xd1
  512751:	jbe    0x512732
  512753:	add    al,0xdd
  512755:	jp     0x5126e5
  512757:	mov    WORD PTR [esi+0x52],fs
  51275a:	and    dh,BYTE PTR [ecx-0x5e86bb4a]
  512760:	test   BYTE PTR [eax],cl
  512762:	outs   dx,BYTE PTR ds:[esi]
  512763:	int3   
  512764:	rol    DWORD PTR [edi],1
  512766:	outs   dx,BYTE PTR ds:[esi]
  512767:	dec    edi
  512768:	push   edx
  512769:	js     0x51275e
  51276b:	data16 fucompp 
  51276e:	daa    
  51276f:	outs   dx,DWORD PTR ds:[esi]
  512770:	mov    al,ds:0xd01af366
  512775:	inc    esp
  512776:	sbb    DWORD PTR [edx],esi
  512778:	xor    ch,BYTE PTR [ebp+ebx*2-0x3b0376fd]
  51277f:	leave  
  512780:	jmp    0x512740
  512782:	scas   eax,DWORD PTR es:[edi]
  512783:	mov    ah,bl
  512785:	sub    cl,BYTE PTR [edi]
  512787:	out    dx,eax
  512788:	add    bh,BYTE PTR [eax+0x26698da5]
  51278e:	iret   
  51278f:	iret   
  512790:	rcl    DWORD PTR [esi],0xf6
  512793:	push   ebp
  512794:	(bad)  
  512795:	ins    BYTE PTR es:[edi],dx
  512796:	pmaxsw mm6,QWORD PTR [edx+edi*8-0x7e7307c5]
  51279e:	in     eax,0xd8
  5127a0:	push   edi
  5127a1:	xchg   edx,eax
  5127a2:	adc    eax,edi
  5127a4:	mov    dl,0x83
  5127a6:	sbb    eax,0x26d8dec
  5127ab:	out    dx,eax
  5127ac:	retf   
  5127ad:	xchg   DWORD PTR [ebp+0x66],esp
  5127b0:	stos   BYTE PTR es:[di],al
  5127b2:	enter  0x7e02,0xd
  5127b6:	mov    cl,0x95
  5127b8:	mov    ch,0x8a
  5127ba:	jo     0x512773
  5127bc:	mov    eax,ds:0xdd44b06d
  5127c1:	adc    DWORD PTR [edx+0x53],edx
  5127c4:	add    edi,esi
  5127c6:	push   ebp
  5127c7:	jae    0x512825
  5127c9:	fwait
  5127ca:	fwait
  5127cb:	sti    
  5127cc:	mov    ?,WORD PTR [ebp+0x46987e0d]
  5127d2:	xor    BYTE PTR [ebx+0x8ba58c],0x83
  5127d9:	cwde   
  5127da:	xor    ebx,0x29
  5127dd:	scas   eax,DWORD PTR es:[edi]
  5127de:	daa    
  5127df:	sub    ebp,DWORD PTR ds:0x537a4551
  5127e5:	cmc    
  5127e6:	repz fsub st(3),st
  5127e9:	imul   ecx,DWORD PTR [ebx],0x56
  5127ec:	jns    0x5127bb
  5127ee:	ret    0x3edc
  5127f1:	jle    0x5127c3
  5127f3:	xchg   ecx,eax
  5127f4:	inc    DWORD PTR [edi+0x33253a45]
  5127fa:	mov    dl,0x51
  5127fc:	sti    
  5127fd:	nop
  5127fe:	mov    edi,0xdff5e58c
  512803:	pop    eax
  512804:	cld    
  512805:	mov    esi,esp
  512807:	aad    0x31
  512809:	inc    edi
  51280a:	sbb    dh,BYTE PTR [edx]
  51280c:	add    al,0x31
  51280e:	add    bl,dh
  512810:	mov    ah,0xe8
  512812:	add    eax,0xd2d51633
  512817:	fdivr  QWORD PTR [eax]
  512819:	or     DWORD PTR [esi-0x1425818f],ecx
  51281f:	mov    ds:0xf48abc6d,al
  512824:	adc    eax,0xf0b59a39
  512829:	and    cl,BYTE PTR [ecx]
  51282b:	pop    ds
  51282c:	fs xchg ebx,eax
  51282e:	lods   al,BYTE PTR ds:[esi]
  51282f:	out    dx,eax
  512830:	mov    esp,DWORD PTR [ebx-0x6e944aed]
  512836:	pop    es
  512837:	adc    al,0xaa
  512839:	sbb    al,0x7f
  51283b:	xor    cl,0x4b
  51283e:	add    eax,0xaf6a0ae0
  512843:	add    edi,DWORD PTR [ebx+0xc]
  512846:	xor    DWORD PTR [edi+0x75bdf31e],ebp
  51284c:	push   ds
  51284d:	or     eax,0xc87da3c3
  512852:	retf   
  512853:	pop    es
  512854:	(bad)  
  512855:	pop    ebp
  512856:	adc    ah,BYTE PTR [eax-0x54]
  512859:	adc    al,0xcc
  51285b:	rcr    BYTE PTR [edi+0x69c05b8d],0x67
  512862:	popa   
  512863:	fstp   QWORD PTR [edi+0x13]
  512866:	cmp    eax,0x3da9fde
  51286b:	call   DWORD PTR [ecx+ebp*1]
  51286e:	add    al,0xb0
  512870:	shl    BYTE PTR [esi-0x27b312bb],cl
  512876:	pop    esp
  512877:	repnz mov ch,0x2a
  51287a:	std    
  51287b:	(bad)  
  51287c:	xlat   BYTE PTR ds:[ebx]
  51287d:	push   esi
  51287e:	push   ebx
  51287f:	hlt    
  512880:	or     BYTE PTR [eax+0x7bc1c51d],dl
  512886:	test   edx,0x14bdee0f
  51288c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51288d:	sub    DWORD PTR [ecx+0xf],esp
  512890:	pop    ss
  512891:	shl    DWORD PTR [ebx-0x1ca7b07f],1
  512897:	fsubp  st(3),st
  512899:	sbb    eax,0xa656a416
  51289e:	pop    ebx
  51289f:	loope  0x5128f7
  5128a1:	daa    
  5128a2:	xor    BYTE PTR [esp+edx*1+0x62a0a2e],0xd0
  5128aa:	or     eax,ecx
  5128ac:	mov    edx,0x70fd0335
  5128b1:	dec    ebx
  5128b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5128b3:	jmp    0x5128fb
  5128b5:	push   es
  5128b6:	nop
  5128b7:	pop    edx
  5128b8:	mov    esi,0xaef7bf37
  5128bd:	not    DWORD PTR [eax+eiz*4+0x52]
  5128c1:	and    DWORD PTR [edi-0x23],ebp
  5128c4:	push   ds
  5128c5:	test   DWORD PTR [eax-0x39aaeccb],esp
  5128cb:	and    BYTE PTR [edi],cl
  5128cd:	dec    ecx
  5128ce:	push   edi
  5128cf:	out    dx,eax
  5128d0:	sbb    ah,BYTE PTR [ebx]
  5128d2:	mov    edx,0xdfa351ff
  5128d7:	call   0x333a:0x2e755755
  5128de:	ret    
  5128df:	mov    ds:0x30d10f24,al
  5128e4:	jle    0x512922
  5128e6:	and    al,0x42
  5128e8:	cld    
  5128e9:	pop    eax
  5128ea:	ss mov ecx,0x7722a0ef
  5128f0:	add    dl,al
  5128f2:	cmc    
  5128f3:	inc    esp
  5128f4:	leave  
  5128f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5128f6:	ret    
  5128f7:	cmp    al,0xfc
  5128f9:	xor    esi,esi
  5128fb:	ret    0x5c98
  5128fe:	sub    eax,DWORD PTR [edi]
  512900:	call   0x7d35740a
  512905:	sub    BYTE PTR [ebx+ecx*8-0x50],ch
  512909:	in     eax,dx
  51290a:	ins    DWORD PTR es:[edi],dx
  51290b:	and    al,0xdc
  51290d:	nop
  51290e:	inc    BYTE PTR [esi+0x57]
  512911:	lods   al,BYTE PTR ds:[esi]
  512912:	(bad)  
  512913:	pop    ebp
  512914:	sar    BYTE PTR ds:0x87f1e50b,0xb7
  51291b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51291c:	fdivr  QWORD PTR [esi]
  51291e:	out    dx,eax
  51291f:	in     eax,dx
  512920:	outs   dx,BYTE PTR ds:[esi]
  512921:	scas   al,BYTE PTR es:[edi]
  512922:	shl    DWORD PTR [ecx-0x1fa385b9],1
  512928:	das    
  512929:	sti    
  51292a:	xchg   ebp,eax
  51292b:	das    
  51292c:	cmovnp esi,DWORD PTR [esi]
  51292f:	ss mov dh,0x12
  512932:	repnz mov dl,0xb6
  512935:	test   dh,0x1f
  512938:	nop
  512939:	int    0x9f
  51293b:	mov    gs,WORD PTR [ebp-0x3cd4375]
  512941:	retf   
  512942:	div    BYTE PTR ds:0x9610b446
  512948:	scas   eax,DWORD PTR es:[edi]
  512949:	mov    ds:0xa674eda1,eax
  51294e:	push   ebx
  51294f:	dec    edi
  512950:	mov    ecx,0xaee300f8
  512955:	adc    eax,0xf9206509
  51295a:	push   esi
  51295b:	rol    BYTE PTR [edx-0x3d],cl
  51295e:	repz cmp eax,DWORD PTR [ebp-0x6031c032]
  512965:	int    0x37
  512967:	xchg   ebp,eax
  512968:	mov    edx,0x28f5baf9
  51296d:	push   esi
  51296e:	push   eax
  51296f:	arpl   WORD PTR [edx+0x2908ba4e],dx
  512975:	dec    ecx
  512976:	imul   ecx,DWORD PTR [edi+eiz*8],0xffffffb6
  51297a:	xor    DWORD PTR [edi+ebx*2],esi
  51297d:	or     al,BYTE PTR [edx-0x80]
  512980:	push   es
  512981:	inc    esi
  512982:	xchg   BYTE PTR [eax+0x45],al
  512985:	or     bl,BYTE PTR [edx]
  512987:	cmp    cl,BYTE PTR [eax-0x24]
  51298a:	sub    eax,0x2aa8c393
  51298f:	adc    al,0xa2
  512991:	pop    ss
  512992:	leave  
  512993:	dec    esp
  512994:	add    bl,BYTE PTR [eax+edi*1+0x5c208316]
  51299b:	popf   
  51299c:	adc    cl,BYTE PTR [esi-0x72]
  51299f:	cmp    DWORD PTR [ecx-0x4932a0a8],ebp
  5129a5:	rol    BYTE PTR [ebp-0x7934ef97],0x36
  5129ac:	addr16 pushf 
  5129ae:	xchg   esi,eax
  5129af:	push   ds
  5129b0:	scas   eax,DWORD PTR es:[edi]
  5129b1:	stc    
  5129b2:	sbb    dl,BYTE PTR [eax+0x74]
  5129b5:	dec    ebp
  5129b6:	je     0x51294d
  5129b8:	sub    bh,dl
  5129ba:	and    ebx,DWORD PTR [esi]
  5129bc:	dec    ecx
  5129bd:	js     0x77208ab1
  5129c3:	mov    dh,0x37
  5129c5:	shl    al,1
  5129c7:	pop    esi
  5129c8:	sub    al,0xf8
  5129ca:	iret   
  5129cb:	xchg   edi,eax
  5129cc:	jmp    0x7a8e:0xc24ba264
  5129d3:	sub    eax,0x32278716
  5129d8:	outs   dx,BYTE PTR ds:[esi]
  5129d9:	add    al,BYTE PTR [eax+0xa591cb9]
  5129df:	cmp    eax,0x478caff3
  5129e4:	or     dl,BYTE PTR [ecx]
  5129e6:	mov    cl,0x86
  5129e8:	push   ecx
  5129e9:	nop
  5129ea:	add    cl,ch
  5129ec:	mov    edx,0xb6d17c95
  5129f1:	outs   dx,BYTE PTR ds:[esi]
  5129f2:	and    al,0x42
  5129f4:	ret    0xa285
  5129f7:	inc    ebp
  5129f8:	push   ebp
  5129f9:	out    dx,al
  5129fa:	xchg   ecx,eax
  5129fb:	push   ebx
  5129fc:	nop
  5129fd:	push   0x31
  5129ff:	xchg   edi,eax
  512a00:	ror    esi,0x3a
  512a03:	add    eax,0xa842dfa4
  512a08:	sbb    al,0x8c
  512a0a:	in     al,0xc6
  512a0c:	sbb    ebp,DWORD PTR [ecx]
  512a0e:	push   ebx
  512a0f:	fadd   DWORD PTR [ebp+0x3d]
  512a12:	sbb    ecx,DWORD PTR [edi-0x4479d4e1]
  512a18:	and    BYTE PTR [eax-0x64],al
  512a1b:	push   esp
  512a1c:	cmp    al,0xb7
  512a1e:	pop    eax
  512a1f:	aam    0xf3
  512a21:	mov    cl,0xa9
  512a23:	ds sub al,0xea
  512a26:	das    
  512a27:	test   al,0x5a
  512a2a:	rol    DWORD PTR [edx],1
  512a2c:	xor    dh,BYTE PTR [esi-0x5b3de477]
  512a32:	outs   dx,BYTE PTR ds:[esi]
  512a33:	rol    BYTE PTR [ebx-0xd3f4967],0x3f
  512a3a:	push   esp
  512a3b:	adc    esp,0x6071cbb6
  512a41:	mov    ecx,0x8e3c5c24
  512a46:	push   edi
  512a47:	(bad)  
  512a48:	mov    eax,ds:0xbedc0983
  512a4d:	outs   dx,DWORD PTR ds:[esi]
  512a4e:	mov    DWORD PTR [ecx+0x6be8d786],esp
  512a54:	arpl   bp,si
  512a56:	dec    ebp
  512a57:	mov    esi,gs
  512a59:	sbb    eax,0x974c3004
  512a5e:	sbb    al,0xda
  512a60:	mov    cs,edi
  512a62:	xchg   esi,eax
  512a63:	jmp    0x4ce7:0x9a0c2938
  512a6a:	ins    DWORD PTR es:[edi],dx
  512a6b:	mov    al,ds:0xddefe2e3
  512a70:	adc    eax,0x773a71fd
  512a75:	imul   esi,DWORD PTR [eax-0x61],0x4d
  512a79:	mov    dl,0x65
  512a7b:	sbb    esp,ecx
  512a7d:	aad    0x53
  512a7f:	ret    0xa518
  512a82:	shl    DWORD PTR [ecx+0x46ea6d33],0x9f
  512a89:	pop    esp
  512a8a:	pop    ss
  512a8b:	not    DWORD PTR [eax]
  512a8d:	push   ss
  512a8e:	stos   DWORD PTR es:[edi],eax
  512a8f:	jne    0x512ad7
  512a91:	stc    
  512a92:	cli    
  512a93:	sub    BYTE PTR [edx-0x1f],ch
  512a96:	das    
  512a97:	(bad)  
  512a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512a99:	inc    ebx
  512a9a:	sar    ebp,0xb9
  512a9d:	adc    bh,cl
  512a9f:	inc    ebp
  512aa0:	jmp    0x512b0c
  512aa2:	out    dx,eax
  512aa3:	jae    0x512a49
  512aa5:	(bad)  [ecx+0x40555b1a]
  512aab:	ret    
  512aac:	pusha  
  512aad:	out    dx,eax
  512aae:	xchg   ebp,eax
  512aaf:	mov    al,BYTE PTR [eax+0x36]
  512ab2:	retf   0x4913
  512ab5:	inc    ebp
  512ab6:	cmp    ebp,esi
  512ab8:	cmp    bl,BYTE PTR [ebx+0x74]
  512abb:	aas    
  512abc:	cmc    
  512abd:	loopne 0x512ab0
  512abf:	cld    
  512ac0:	sbb    DWORD PTR [ecx-0x13],edx
  512ac3:	dec    edi
  512ac4:	aas    
  512ac5:	in     eax,0x2a
  512ac7:	bound  eax,QWORD PTR [edi-0x78895f95]
  512acd:	stc    
  512ace:	add    DWORD PTR [ebx-0x11],ebx
  512ad1:	push   esp
  512ad2:	mov    esi,0x6cad4abb
  512ad7:	mov    ds:0xe8e00556,eax
  512adc:	sahf   
  512add:	xchg   dh,bh
  512adf:	mov    cl,0x6c
  512ae1:	cli    
  512ae2:	hlt    
  512ae3:	or     ebx,DWORD PTR [edi+0x57]
  512ae6:	ja     0x512ac3
  512ae8:	int    0x3e
  512aea:	add    al,BYTE PTR [edi]
  512aec:	push   edx
  512aed:	mov    WORD PTR [edx-0x20],cs
  512af0:	or     al,al
  512af2:	xchg   esi,eax
  512af3:	jge    0x512ad1
  512af5:	hlt    
  512af6:	inc    esi
  512af7:	xchg   BYTE PTR [ecx],bh
  512af9:	cwde   
  512afa:	out    0x33,al
  512afc:	cmp    cx,WORD PTR [ebx+0x47ab49d7]
  512b03:	mov    dl,0x85
  512b05:	icebp  
  512b06:	or     al,0x90
  512b08:	sub    DWORD PTR [edi+edx*8+0x6a],ecx
  512b0c:	rol    edx,1
  512b0e:	(bad)  
  512b10:	push   esi
  512b11:	imul   edx,edi,0xffffffee
  512b14:	or     BYTE PTR [edx-0x9c9b6fa],0x93
  512b1b:	pop    es
  512b1c:	mov    bh,0xff
  512b1e:	out    dx,al
  512b1f:	xor    dl,BYTE PTR [ecx-0x4e631f4a]
  512b25:	cdq    
  512b26:	jle    0x512b7d
  512b28:	mov    ecx,0x1b92b8f0
  512b2d:	pop    es
  512b2e:	pop    es
  512b2f:	repz dec ebp
  512b31:	hlt    
  512b32:	addr16 clc 
  512b34:	or     al,0x23
  512b36:	jbe    0x512abe
  512b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512b39:	jmp    0x2a86:0xf901c410
  512b40:	push   ebx
  512b41:	inc    edi
  512b42:	in     al,dx
  512b43:	in     al,0x72
  512b45:	loop   0x512b39
  512b47:	test   DWORD PTR [esi+0x5ce4137e],ecx
  512b4d:	push   ebx
  512b4e:	or     ebx,DWORD PTR [eax+0x5c]
  512b51:	mov    bl,0xf3
  512b53:	iret   
  512b54:	inc    eax
  512b55:	push   ecx
  512b56:	jb     0x512b90
  512b58:	mov    edx,fs
  512b5a:	dec    esi
  512b5b:	adc    al,0x42
  512b5d:	test   eax,0x79fc436b
  512b62:	sub    al,0x9f
  512b64:	push   cs
  512b65:	sbb    dl,bh
  512b67:	xchg   esp,eax
  512b68:	sub    DWORD PTR [edi+0x41444e8c],esi
  512b6e:	pushf  
  512b6f:	pusha  
  512b70:	inc    edi
  512b71:	inc    esp
  512b72:	sub    al,BYTE PTR ds:0x4651a68e
  512b78:	xchg   ecx,eax
  512b79:	sub    al,cl
  512b7b:	and    ah,BYTE PTR [ebx+0x20]
  512b7e:	pop    ds
  512b7f:	call   0xfe4b0fb9
  512b84:	out    dx,al
  512b85:	es mov bh,0x6c
  512b88:	mov    ?,WORD PTR [edx-0x24070718]
  512b8e:	retf   0x868
  512b91:	ins    DWORD PTR es:[edi],dx
  512b92:	jmp    0x1123:0xc70fe9e1
  512b99:	call   0x92f74769
  512b9e:	mov    dl,0x14
  512ba0:	or     ch,BYTE PTR [ebx+0x3e]
  512ba3:	jg     0x512bba
  512ba5:	dec    ebp
  512ba6:	lods   eax,DWORD PTR ds:[esi]
  512ba7:	repnz ror BYTE PTR [ebp-0x6d5fbaaf],1
  512bae:	sub    al,0xdc
  512bb0:	mov    cl,0xec
  512bb2:	das    
  512bb3:	or     cl,BYTE PTR [eax-0x7f3216b9]
  512bb9:	loop   0x512bc5
  512bbb:	imul   esp,ebx,0xffffffc9
  512bbe:	nop
  512bbf:	(bad)  
  512bc0:	fs push edi
  512bc2:	jmp    0x512bc1
  512bc4:	cmp    cl,BYTE PTR [esi+eiz*4]
  512bc7:	mov    esp,0x360384ee
  512bcc:	mov    ds:0x93ae4481,al
  512bd1:	add    al,0x12
  512bd3:	adc    DWORD PTR [ebx-0x31bc9975],eax
  512bd9:	xchg   esp,eax
  512bda:	adc    DWORD PTR [edx],edx
  512bdc:	out    0x5b,eax
  512bde:	sbb    al,0x47
  512be0:	mov    edi,0xa7ff8570
  512be5:	mov    bh,0xda
  512be7:	inc    eax
  512be8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  512be9:	add    DWORD PTR [eax],ecx
  512beb:	iret   
  512bec:	mov    WORD PTR [ecx-0x57],cs
  512bef:	retf   
  512bf0:	ins    BYTE PTR es:[edi],dx
  512bf1:	cmp    DWORD PTR [esi+0x7d],edx
  512bf4:	call   0x75b0:0x73575404
  512bfb:	iret   
  512bfc:	lock pushf 
  512bfe:	nop
  512bff:	dec    esi
  512c00:	adc    ah,BYTE PTR [ecx]
  512c02:	inc    edi
  512c03:	inc    ecx
  512c04:	(bad)  
  512c05:	cmp    al,0x78
  512c07:	cld    
  512c08:	out    0x4f,al
  512c0a:	sub    eax,0x4a6593a7
  512c0f:	adc    ecx,DWORD PTR [ecx]
  512c11:	sbb    ebx,eax
  512c13:	fisttp QWORD PTR [edx-0x66]
  512c16:	out    0x8a,al
  512c18:	xchg   esi,eax
  512c19:	add    ebx,ecx
  512c1b:	pusha  
  512c1c:	xchg   esi,edi
  512c1e:	loop   0x512c13
  512c20:	xchg   bx,ax
  512c22:	arpl   WORD PTR [esi],sp
  512c24:	ret    0xc53c
  512c27:	inc    ecx
  512c28:	les    eax,FWORD PTR [eax-0x5]
  512c2b:	cmp    al,0xd8
  512c2d:	and    DWORD PTR [edi+0x2],esi
  512c30:	mov    bl,0x3
  512c32:	and    DWORD PTR [eax],ecx
  512c34:	jo     0x512c52
  512c36:	adc    esi,DWORD PTR [edx-0x42]
  512c39:	pop    es
  512c3a:	push   ecx
  512c3b:	outs   dx,DWORD PTR ds:[esi]
  512c3c:	arpl   WORD PTR [ecx],sp
  512c3e:	push   ebp
  512c3f:	ret    0x8828
  512c42:	test   al,0x77
  512c44:	aaa    
  512c45:	je     0x512bce
  512c47:	or     eax,0x13d48fb1
  512c4c:	cmp    cl,0xc4
  512c4f:	jne    0x512c79
  512c51:	ja     0x512ca4
  512c53:	adc    BYTE PTR [edx+0x1c82ee6c],ah
  512c59:	cmp    eax,0xb26628b1
  512c5e:	adc    al,0x81
  512c60:	shr    ah,0x71
  512c63:	mov    ah,0x6b
  512c65:	mov    ebx,0xd94b8e98
  512c6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512c6b:	sbb    eax,0x1f27fd6a
  512c70:	mov    dh,0xdc
  512c72:	pushf  
  512c73:	fdiv   QWORD PTR [eax]
  512c75:	(bad)  
  512c76:	mov    edx,DWORD PTR [edi+ebp*4]
  512c79:	pop    ebx
  512c7a:	sahf   
  512c7b:	mov    DWORD PTR [edi+0x89ff02c],ebp
  512c81:	mov    edi,0x2472e222
  512c86:	jge    0x512cc8
  512c88:	clc    
  512c89:	jl     0x512cdb
  512c8b:	xlat   BYTE PTR ds:[ebx]
  512c8c:	lea    edi,[eax]
  512c8e:	stos   DWORD PTR es:[edi],eax
  512c8f:	call   0xc3791db
  512c94:	jo     0x512c8d
  512c96:	es retf 0x8f0d
  512c9a:	int    0xfb
  512c9c:	pop    ss
  512c9d:	push   0x576f5bfa
  512ca2:	push   cs
  512ca3:	out    dx,al
  512ca4:	add    DWORD PTR [esi+0x68ec8a8f],0x2a487130
  512cae:	or     al,0xab
  512cb0:	sbb    al,BYTE PTR [edx]
  512cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  512cb3:	push   eax
  512cb4:	int3   
  512cb5:	sub    BYTE PTR ds:0x335bbf28,al
  512cbb:	ja     0x512ce8
  512cbd:	arpl   WORD PTR [ebp+0x2f],ax
  512cc0:	mov    eax,0xc8b1eb1b
  512cc5:	pushf  
  512cc6:	xchg   ecx,eax
  512cc7:	(bad)
  512ccc:	sahf   
  512ccd:	rcr    esp,1
  512ccf:	push   DWORD PTR [ecx+0x574e24]
  512cd5:	imul   ebx,esp,0x22
  512cd8:	(bad)  
  512cd9:	or     ah,BYTE PTR [edi+edi*1]
  512cdc:	clc    
  512cdd:	push   0x4ac978c3
  512ce2:	and    ebx,esi
  512ce4:	push   ebx
  512ce5:	mov    al,ds:0x8925f668
  512cea:	mov    al,ds:0x11b7621
  512cef:	outs   dx,DWORD PTR ds:[esi]
  512cf0:	(bad)  
  512cf1:	fst    DWORD PTR [ebx-0x25]
  512cf4:	div    BYTE PTR [eax+0x5]
  512cf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512cf8:	jle    0x512d49
  512cfa:	iret   
  512cfb:	pushf  
  512cfc:	or     eax,0x86aaef4d
  512d01:	es call 0x6a1c:0x1e24035f
  512d09:	ret    0xd81b
  512d0c:	mov    dh,0x2d
  512d0e:	sar    DWORD PTR [edx],1
  512d10:	adc    ah,BYTE PTR [ebp-0x31dc1bce]
  512d16:	mov    eax,ds:0x3d0fa9ae
  512d1b:	pop    esp
  512d1c:	outs   dx,BYTE PTR ds:[esi]
  512d1d:	sub    al,0x2e
  512d1f:	sub    eax,0xd7b3ee5f
  512d24:	pop    ebp
  512d25:	cmp    DWORD PTR [ecx],ecx
  512d27:	mov    eax,ds:0x62ae29be
  512d2c:	mov    BYTE PTR [ebx-0x6d727b6a],dl
  512d32:	rcl    esi,cl
  512d34:	(bad)  
  512d35:	xchg   ecx,eax
  512d36:	je     0x512cee
  512d38:	jmp    0xf12f:0x522c90d0
  512d3f:	xor    BYTE PTR [ebx+0x3],bh
  512d42:	cwde   
  512d43:	inc    edi
  512d44:	push   ecx
  512d45:	xchg   edx,eax
  512d46:	jo     0x512d4c
  512d48:	repz mov fs:0xf06abae9,al
  512d4f:	repz add al,BYTE PTR [esi-0x5e]
  512d53:	popf   
  512d54:	xchg   DWORD PTR [ebx+0x2507682a],eax
  512d5a:	(bad)  
  512d5c:	xchg   ecx,eax
  512d5d:	xchg   ecx,eax
  512d5e:	add    al,0x82
  512d60:	stos   DWORD PTR es:[edi],eax
  512d61:	mov    ebx,0xc0c1f2c0
  512d66:	and    ecx,edi
  512d68:	adc    ch,dh
  512d6a:	xlat   BYTE PTR ds:[ebx]
  512d6b:	popa   
  512d6c:	and    eax,0xa0d9c51b
  512d71:	hlt    
  512d72:	in     al,dx
  512d73:	push   ds
  512d74:	ds nop
  512d76:	dec    ecx
  512d77:	bound  esp,QWORD PTR [edx+0x5]
  512d7a:	dec    esi
  512d7b:	rol    esp,cl
  512d7d:	jmp    0x848bd8cd
  512d82:	xor    DWORD PTR [eax-0x55b43909],0xffffffb3
  512d89:	adc    al,BYTE PTR [ebx]
  512d8b:	shl    ebx,1
  512d8d:	pop    es
  512d8e:	retf   
  512d8f:	ins    DWORD PTR es:[edi],dx
  512d90:	add    DWORD PTR [ebx+0x6956f6ec],ebp
  512d96:	dec    eax
  512d97:	jnp    0x512d57
  512d99:	shl    al,cl
  512d9b:	dec    ecx
  512d9c:	into   
  512d9d:	fs outs dx,BYTE PTR cs:[esi]
  512da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512da2:	shl    BYTE PTR [edx+0x62],1
  512da5:	aad    0x8e
  512da7:	leave  
  512da8:	jno    0x512db9
  512daa:	xchg   BYTE PTR [ebp-0x5c440d05],dh
  512db0:	int3   
  512db1:	xor    edi,DWORD PTR [edi+ebp*2-0x1b0c24e9]
  512db8:	scas   eax,DWORD PTR es:[edi]
  512db9:	aaa    
  512dba:	into   
  512dbb:	xchg   esp,eax
  512dbc:	xchg   esp,eax
  512dbd:	outs   dx,DWORD PTR ds:[esi]
  512dbe:	pop    esi
  512dbf:	ins    BYTE PTR es:[edi],dx
  512dc0:	loopne 0x512d94
  512dc2:	xor    eax,0xa228de25
  512dc7:	(bad)  
  512dc9:	aad    0x68
  512dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512dcc:	adc    ecx,DWORD PTR [ecx+0x79]
  512dcf:	sar    BYTE PTR [esi],0xdd
  512dd2:	or     eax,0xc8e419a6
  512dd7:	sahf   
  512dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512dd9:	dec    edi
  512dda:	out    dx,eax
  512ddb:	mov    bh,0xbd
  512ddd:	push   ebp
  512dde:	xchg   ecx,ebx
  512de0:	arpl   WORD PTR [esi-0x13a68e8d],bx
  512de6:	sub    DWORD PTR [esi-0x5f],ebp
  512de9:	cmp    al,0xcf
  512deb:	(bad)  
  512dec:	mov    DWORD PTR [esi+0xbbe6ecc],0xd27e03f7
  512df6:	shr    BYTE PTR [edx+ecx*8+0x7ba64786],0x73
  512dfe:	sbb    bl,BYTE PTR [esi]
  512e00:	mov    edi,0xd3b3d3d3
  512e05:	pusha  
  512e06:	lea    eax,[edi-0x153707fe]
  512e0c:	lea    eax,[ebx+0x41]
  512e0f:	mov    al,0x9e
  512e11:	cmp    cl,BYTE PTR [eax+esi*4+0x4]
  512e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512e16:	int    0x33
  512e18:	dec    eax
  512e19:	je     0x512e4e
  512e1b:	xlat   BYTE PTR fs:[ebx]
  512e1d:	jns    0x512db1
  512e1f:	mov    edx,gs
  512e21:	pop    ds
  512e22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  512e23:	xor    BYTE PTR [edi-0x7bab2fc8],ah
  512e29:	(bad)  [ecx+eiz*4-0x2f3790b1]
  512e30:	cli    
  512e31:	mov    esi,0x2a72b346
  512e36:	jne    0x512e6b
  512e38:	fwait
  512e39:	pop    ss
  512e3a:	push   ebx
  512e3b:	sub    BYTE PTR [ebx+0x42cc9031],0xf0
  512e42:	push   ds
  512e43:	push   ecx
  512e44:	mov    dh,0x6a
  512e46:	lahf   
  512e47:	lea    edx,[ebx-0x7f]
  512e4a:	jmp    0x6623:0x182f1650
  512e51:	pop    edx
  512e52:	xchg   WORD PTR [ebp-0x45053a6a],bx
  512e59:	adc    ah,cl
  512e5b:	xor    eax,0xe075f59
  512e61:	xor    esp,ebp
  512e63:	or     BYTE PTR [edi+0x4aa0f57c],bl
  512e69:	inc    esp
  512e6a:	jae    0x512e85
  512e6c:	mov    ah,0x18
  512e6e:	inc    ebp
  512e6f:	repnz sbb edx,DWORD PTR es:[ecx-0x3022e390]
  512e77:	loopne 0x512e83
  512e79:	scas   al,BYTE PTR es:[edi]
  512e7a:	js     0x512ec2
  512e7c:	mov    eax,ds:0x5585b973
  512e81:	int3   
  512e82:	mov    al,ds:0x73392f46
  512e87:	imul   eax,DWORD PTR [ecx+0x29],0xd89e8b4c
  512e8e:	cmp    DWORD PTR [ecx+0x74],esi
  512e91:	bound  esi,QWORD PTR [ebp-0x5d]
  512e94:	sahf   
  512e95:	cmc    
  512e96:	sub    DWORD PTR [edx+edi*1],esp
  512e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512e9a:	stos   DWORD PTR es:[edi],eax
  512e9b:	mov    ds:0xc341a81c,eax
  512ea0:	push   edi
  512ea1:	icebp  
  512ea2:	xor    al,0x2e
  512ea4:	xchg   ebx,eax
  512ea5:	cs sub al,0xc9
  512ea8:	xchg   edx,eax
  512ea9:	inc    edx
  512eaa:	and    esi,ebx
  512eac:	push   cs
  512ead:	test   esi,edi
  512eaf:	cld    
  512eb0:	in     eax,0xfa
  512eb2:	dec    edi
  512eb3:	mov    edi,0x32a122d8
  512eb8:	dec    edi
  512eb9:	scas   eax,DWORD PTR es:[edi]
  512eba:	cmc    
  512ebb:	dec    ebx
  512ebc:	retf   0xf3bc
  512ebf:	inc    eax
  512ec0:	cld    
  512ec1:	inc    eax
  512ec2:	mov    eax,DWORD PTR [esi]
  512ec4:	icebp  
  512ec5:	les    ebx,FWORD PTR [ebp+0x54b30f57]
  512ecb:	mov    BYTE PTR [esi+0x2b],bh
  512ece:	push   eax
  512ecf:	xor    ecx,DWORD PTR [edi-0x28]
  512ed2:	pop    esp
  512ed3:	adc    al,BYTE PTR [ebx]
  512ed5:	push   0x29e9060f
  512eda:	jp     0x512f4f
  512edc:	push   esi
  512edd:	adc    bh,dl
  512edf:	xchg   esp,eax
  512ee0:	add    dl,BYTE PTR [edi]
  512ee2:	(bad)  
  512ee3:	mov    DWORD PTR [edi+0x4c],0xc2b400fb
  512eea:	sub    DWORD PTR [esi+0x66],esi
  512eed:	repz sbb al,0x1
  512ef0:	daa    
  512ef1:	ror    BYTE PTR [ecx],1
  512ef3:	call   0x8165d7b2
  512ef8:	push   eax
  512ef9:	cs xor al,0x49
  512efc:	cmp    esi,DWORD PTR [edx-0xd]
  512eff:	and    bh,dh
  512f01:	addr16 in al,dx
  512f03:	out    0xab,eax
  512f05:	pusha  
  512f06:	dec    esi
  512f07:	cmp    eax,0xd3a92b33
  512f0c:	sub    eax,0x79778140
  512f11:	ss into 
  512f13:	sbb    eax,0xc60aceea
  512f18:	outs   dx,BYTE PTR ds:[esi]
  512f19:	stos   DWORD PTR es:[edi],eax
  512f1a:	add    BYTE PTR [ebx-0x651c08fa],al
  512f20:	adc    ch,dl
  512f22:	data16 mov ch,0xd6
  512f25:	dec    esp
  512f26:	jmp    0xa5cb1f98
  512f2b:	jle    0x512f58
  512f2d:	imul   ecx,DWORD PTR [edx],0x63
  512f30:	not    BYTE PTR [edx+0x68]
  512f33:	hlt    
  512f34:	inc    DWORD PTR [edi-0x17]
  512f37:	popa   
  512f38:	xchg   esp,eax
  512f39:	dec    ebx
  512f3a:	push   ebx
  512f3b:	stos   DWORD PTR es:[edi],eax
  512f3c:	push   es
  512f3d:	mov    ecx,0xac788ea3
  512f42:	mov    al,ds:0xaceb79af
  512f47:	idiv   BYTE PTR [ecx]
  512f49:	out    0xf9,eax
  512f4b:	out    dx,eax
  512f4c:	iret   
  512f4d:	hlt    
  512f4e:	xor    BYTE PTR [ebx+edi*1+0x6d1da742],0x63
  512f56:	xchg   BYTE PTR [edx-0x31],cl
  512f59:	retf   0x12c6
  512f5c:	mov    eax,0xc899e44c
  512f61:	sbb    DWORD PTR [ebx+0x55],ecx
  512f64:	loope  0x512f5c
  512f66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  512f67:	and    eax,0x98f8da70
  512f6c:	xchg   ecx,eax
  512f6d:	sti    
  512f6e:	stc    
  512f6f:	mov    BYTE PTR [ebp+0x60],dh
  512f72:	in     al,dx
  512f73:	inc    ebp
  512f74:	in     al,dx
  512f75:	fdiv   st,st(7)
  512f77:	sub    DWORD PTR [ebp-0x67],ebp
  512f7a:	out    dx,al
  512f7b:	jbe    0x512f74
  512f7d:	add    cl,BYTE PTR [ebp+0x17cf7d18]
  512f83:	leave  
  512f84:	push   esp
  512f85:	cmp    DWORD PTR [edx],ebx
  512f87:	jae    0x512f0b
  512f89:	scas   eax,DWORD PTR es:[edi]
  512f8a:	mov    bh,BYTE PTR [ecx+eax*2+0x5828fe81]
  512f91:	scas   eax,DWORD PTR es:[edi]
  512f92:	mov    al,ds:0x6bd26ae5
  512f97:	mov    bh,0xdd
  512f99:	inc    edi
  512f9a:	xchg   edx,eax
  512f9b:	add    ecx,DWORD PTR ds:0x15844054
  512fa1:	test   DWORD PTR [ecx+0x2b],eax
  512fa4:	into   
  512fa5:	imul   eax,DWORD PTR [edx-0x78d4474d],0xd86fce55
  512faf:	cmc    
  512fb0:	stc    
  512fb1:	xor    DWORD PTR [ebx-0x549a178d],esi
  512fb7:	cli    
  512fb8:	pop    edi
  512fb9:	sar    edi,0x64
  512fbc:	cmp    edx,edx
  512fbe:	sti    
  512fbf:	mov    ah,0x9b
  512fc1:	out    dx,al
  512fc2:	jns    0x513013
  512fc4:	js     0x512fb4
  512fc6:	jge    0x513018
  512fc8:	(bad)  
  512fc9:	sti    
  512fca:	dec    ebp
  512fcb:	fisubr DWORD PTR [eax-0x2fb979cc]
  512fd1:	mov    ebx,0x55b4dd16
  512fd6:	inc    esp
  512fd7:	mov    ds:0x4396aa4b,eax
  512fdc:	xor    edx,ebx
  512fde:	add    BYTE PTR [edi-0x53],dh
  512fe1:	(bad)  [esi+0x9d26810]
  512fe7:	xchg   ecx,eax
  512fe8:	popf   
  512fe9:	loop   0x512ff6
  512feb:	xchg   ebx,eax
  512fec:	sti    
  512fed:	dec    ebp
  512fee:	mov    dl,0x82
  512ff0:	in     eax,0x56
  512ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  512ff3:	adc    al,0x4e
  512ff5:	ss xchg ebp,eax
  512ff7:	or     eax,0xb3b7b462
  512ffc:	(bad)  
  512ffd:	js     0x513051
  512fff:	lock fisttp QWORD PTR [ebx+0x73]
  513003:	push   esi
  513004:	or     al,0x3a
  513006:	push   ebx
  513007:	mov    bh,0xfd
  513009:	in     eax,0xf
  51300b:	dec    BYTE PTR [edx]
  51300d:	bound  ecx,QWORD PTR [edi+0x65676824]
  513013:	ds push esp
  513015:	ficom  DWORD PTR [ebp-0x55]
  513018:	push   ds
  513019:	inc    esp
  51301a:	or     al,0xd8
  51301c:	cwde   
  51301d:	iret   
  51301e:	cmp    ebx,ebx
  513020:	or     BYTE PTR [edi-0x4a],bl
  513023:	(bad)  
  513024:	in     eax,0xae
  513026:	dec    eax
  513027:	adc    DWORD PTR [edi+0x5045526d],ebx
  51302d:	popa   
  51302e:	push   0xffffff88
  513030:	dec    edx
  513031:	int    0x39
  513033:	mov    dh,0x1b
  513035:	mov    WORD PTR [edx],?
  513037:	or     DWORD PTR [ebp+0xd724ca4],eax
  51303d:	cs stos BYTE PTR es:[edi],al
  51303f:	sub    ebp,DWORD PTR [eax+0x3702e30f]
  513045:	jg     0x513057
  513047:	inc    esp
  513048:	sbb    BYTE PTR [ebp+0x8e70e23],0x82
  51304f:	adc    BYTE PTR [eax+0x39],bl
  513052:	push   ds
  513053:	jno    0x513019
  513055:	imul   esp,ebp,0xce8500b5
  51305b:	and    esp,DWORD PTR [ecx+0x72bbcd3c]
  513061:	xor    eax,0xb3fd0898
  513066:	and    eax,DWORD PTR [ebx-0xd]
  513069:	(bad)  
  51306a:	mov    edx,0xceef0699
  51306f:	and    edi,ebx
  513071:	std    
  513072:	outs   dx,DWORD PTR ds:[esi]
  513073:	sbb    edx,esp
  513075:	mov    bl,0x7c
  513077:	mov    esp,0xc4187d48
  51307c:	pop    eax
  51307d:	push   ecx
  51307e:	scas   eax,DWORD PTR es:[edi]
  51307f:	xor    ch,BYTE PTR [eax-0x1d4aa407]
  513085:	ret    
  513086:	mov    WORD PTR [edx+0xb],ss
  513089:	mov    dl,BYTE PTR [ebp+0x1915593c]
  51308f:	ins    BYTE PTR es:[edi],dx
  513090:	dec    ebx
  513091:	sbb    eax,0xc1d8b17c
  513096:	inc    ecx
  513097:	lods   al,BYTE PTR ds:[esi]
  513098:	dec    edx
  513099:	cmp    esp,DWORD PTR [bp+0x30]
  51309d:	fdiv   DWORD PTR [eax-0x38]
  5130a0:	mov    eax,ds:0x7204f88c
  5130a5:	jno    0x513069
  5130a7:	and    al,0x7c
  5130a9:	lods   eax,DWORD PTR ds:[esi]
  5130aa:	push   cs
  5130ab:	inc    ecx
  5130ac:	jns    0x5130fb
  5130ae:	fwait
  5130af:	sub    al,BYTE PTR [esi+0x6c9d275]
  5130b5:	push   edx
  5130b6:	fisttp QWORD PTR [edx-0x1fb9b2a6]
  5130bc:	push   cs
  5130bd:	stc    
  5130be:	xchg   esp,eax
  5130bf:	mov    edi,0xe3bf681e
  5130c4:	dec    eax
  5130c5:	shl    DWORD PTR fs:[ebx+0x7f],cl
  5130c9:	dec    esi
  5130ca:	xchg   BYTE PTR [ecx-0x510b55b2],dh
  5130d0:	bound  ebp,QWORD PTR [ecx+0x41caac9f]
  5130d6:	push   esp
  5130d7:	xor    ebx,DWORD PTR [eax+0x1f1595c6]
  5130dd:	or     BYTE PTR [ecx+0x18],al
  5130e0:	(bad)  
  5130e1:	aam    0xa7
  5130e3:	push   esi
  5130e4:	jbe    0x5130e3
  5130e6:	xor    edi,edi
  5130e8:	jmp    0x59d5:0xddb32948
  5130ef:	dec    esi
  5130f0:	scas   eax,DWORD PTR es:[edi]
  5130f1:	inc    edi
  5130f2:	stos   DWORD PTR es:[edi],eax
  5130f3:	jnp    0x513130
  5130f5:	xchg   edi,eax
  5130f6:	cmp    BYTE PTR [edx+0x56c7feb7],dl
  5130fc:	test   al,0x98
  5130fe:	dec    ecx
  5130ff:	hlt    
  513100:	push   0x7
  513102:	jmp    0x380781d5
  513107:	stc    
  513108:	hlt    
  513109:	aam    0x98
  51310b:	fiadd  DWORD PTR [ebx+0x40433818]
  513111:	or     esp,esi
  513113:	pop    edi
  513114:	(bad)
  513117:	push   0x3c
  513119:	pop    ebx
  51311a:	sahf   
  51311b:	dec    esi
  51311c:	xchg   edi,eax
  51311d:	jmp    0x3fbc:0x38ff19bc
  513124:	adc    al,0x6b
  513126:	adc    al,0x70
  513128:	mov    bh,0xd3
  51312a:	nop
  51312b:	out    dx,eax
  51312c:	ror    DWORD PTR [eax+0x4658ecc4],1
  513132:	fisubr DWORD PTR [ebx+esi*4-0x67275abd]
  513139:	sub    al,0x4
  51313b:	gs lock retf 0xd563
  513140:	pop    esp
  513141:	and    bl,BYTE PTR [ebp-0x7bf2560a]
  513147:	call   0x4c61:0x6bac152c
  51314e:	or     DWORD PTR [ecx-0x6b31e7f],ebp
  513154:	enter  0xd14d,0x4f
  513158:	dec    ecx
  513159:	sbb    ah,BYTE PTR [ebp+0x39]
  51315c:	or     dl,0xf4
  51315f:	xchg   edx,eax
  513160:	adc    eax,0xf488cf15
  513165:	in     eax,0x4
  513167:	cmp    edi,DWORD PTR [eax-0x2e]
  51316a:	xchg   esi,eax
  51316b:	xchg   DWORD PTR [ebp+0x2a],ebx
  51316e:	aad    0x2d
  513170:	ficom  WORD PTR [ebp-0x5e]
  513173:	push   ebp
  513174:	xchg   ebx,eax
  513175:	test   BYTE PTR [esi-0x1],0x4a
  513179:	jle    0x51313f
  51317b:	data16 jl 0x51311c
  51317e:	int    0x6f
  513180:	(bad)  
  513181:	adc    dh,BYTE PTR [esi]
  513183:	or     esp,DWORD PTR [ebx-0x4c]
  513186:	shl    BYTE PTR [esi],0xa7
  513189:	in     al,0xc3
  51318b:	sbb    dh,cl
  51318d:	ss ds inc eax
  513190:	jmp    0xcdcf:0x63b68400
  513197:	inc    eax
  513198:	call   0xfda7b5e8
  51319d:	loop   0x513123
  51319f:	enter  0x54e6,0x45
  5131a3:	out    dx,eax
  5131a4:	dec    esp
  5131a5:	sbb    bh,dl
  5131a7:	jl     0x513133
  5131a9:	gs inc edx
  5131ab:	pushf  
  5131ac:	adc    al,0x56
  5131ae:	scas   eax,DWORD PTR es:[edi]
  5131af:	neg    edi
  5131b1:	jne    0x513164
  5131b3:	jge    0x51322d
  5131b5:	sub    eax,0x8336efa
  5131ba:	je     0x513169
  5131bc:	jne    0x5131c3
  5131be:	inc    esp
  5131bf:	push   edi
  5131c0:	dec    esp
  5131c1:	mov    esp,0x3880bf12
  5131c6:	jae    0x513176
  5131c8:	cmp    al,dl
  5131ca:	jl     0x5131de
  5131cc:	bnd jns 0x5131eb
  5131cf:	dec    ebx
  5131d0:	js     0x513245
  5131d2:	and    DWORD PTR [ebx],esp
  5131d4:	cwde   
  5131d5:	xchg   BYTE PTR ds:0x27a05fd6,dh
  5131db:	push   0xffffffaa
  5131dd:	xchg   esi,eax
  5131de:	icebp  
  5131df:	mov    bl,0x6d
  5131e1:	and    al,ah
  5131e3:	ds je  0x513216
  5131e6:	leave  
  5131e7:	mov    al,0x24
  5131e9:	sub    BYTE PTR [esi-0x28],bl
  5131ec:	inc    esp
  5131ed:	jbe    0x5131c3
  5131ef:	test   DWORD PTR [edi],esi
  5131f1:	pushf  
  5131f2:	das    
  5131f3:	and    DWORD PTR [edx],ecx
  5131f5:	stos   BYTE PTR es:[edi],al
  5131f6:	or     ah,BYTE PTR [ebp-0x11d0f35d]
  5131fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5131fd:	pop    ss
  5131fe:	pop    edi
  5131ff:	inc    ebp
  513200:	lods   al,BYTE PTR ds:[esi]
  513201:	in     eax,dx
  513202:	dec    edx
  513203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  513204:	pop    edx
  513205:	repz bound edx,QWORD PTR [edx+0x1ba3528f]
  51320c:	repnz rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51320f:	push   esi
  513210:	out    0x17,al
  513212:	dec    esi
  513213:	imul   esp,DWORD PTR [esi+0x25b694e4],0xffffffe7
  51321a:	outs   dx,DWORD PTR ds:[esi]
  51321b:	ins    BYTE PTR es:[edi],dx
  51321c:	sbb    edi,DWORD PTR [eax+0x48]
  51321f:	and    al,0x47
  513221:	jne    0x513203
  513223:	retf   0xaa2c
  513226:	pop    ds
  513227:	sub    eax,0x646e8f54
  51322c:	fsub   st,st(7)
  51322e:	dec    ebx
  51322f:	and    dh,BYTE PTR [esi]
  513231:	xchg   ebp,eax
  513232:	rcr    DWORD PTR [edi],0x26
  513235:	idiv   DWORD PTR [edx+0x4e]
  513238:	jae    0x5131e5
  51323a:	aaa    
  51323b:	pop    eax
  51323c:	or     bh,0x5b
  51323f:	fisttp DWORD PTR [edi+0x3b]
  513242:	sbb    edi,DWORD PTR [esi-0x66]
  513245:	jle    0x5131d9
  513247:	sbb    ebx,DWORD PTR ds:0x4716062b
  51324d:	inc    edx
  51324e:	xchg   esp,eax
  51324f:	xchg   esi,eax
  513250:	add    BYTE PTR [edx],bl
  513252:	mov    cl,0x3c
  513254:	lds    eax,FWORD PTR [ebp+0x39]
  513257:	outs   dx,DWORD PTR ds:[esi]
  513258:	pusha  
  513259:	mov    al,ds:0xcc44fa2d
  51325e:	lods   al,BYTE PTR ds:[esi]
  51325f:	not    ebx
  513261:	daa    
  513262:	rol    BYTE PTR [eax+0x5c4df748],1
  513268:	test   BYTE PTR [ecx-0x17786843],bh
  51326e:	popf   
  51326f:	adc    eax,0x9df548d4
  513274:	bound  edx,QWORD PTR [ecx]
  513276:	lock inc ebp
  513278:	mov    esi,0x36688af1
  51327d:	lea    esp,[eax]
  51327f:	scas   eax,DWORD PTR es:[edi]
  513280:	ds cld 
  513282:	inc    ecx
  513283:	mov    ah,0xcf
  513285:	fbstp  TBYTE PTR [eax-0x12]
  513288:	repnz loopne 0x513302
  51328b:	adc    ch,bl
  51328d:	fbld   TBYTE PTR [ebx-0x512e5180]
  513293:	or     ah,BYTE PTR [edx-0x2c]
  513296:	push   ebx
  513297:	mov    WORD PTR [edx],cs
  513299:	add    eax,DWORD PTR [ebp+ebx*2+0x7fe7d934]
  5132a0:	adc    al,0xb
  5132a2:	dec    ebp
  5132a3:	jbe    0x513269
  5132a5:	sar    DWORD PTR [ebp+ebp*1-0x4],1
  5132a9:	sub    ah,BYTE PTR ds:0xf36ecb67
  5132af:	js     0x5132a3
  5132b1:	fwait
  5132b2:	or     edx,DWORD PTR [edi-0x64216d6a]
  5132b8:	xlat   BYTE PTR ds:[ebx]
  5132b9:	imul   eax,DWORD PTR [ecx+ebx*8+0x63],0xffffffb6
  5132be:	test   DWORD PTR [edi-0x63],ecx
  5132c1:	fwait
  5132c2:	aad    0x64
  5132c4:	jp     0x5132ca
  5132c6:	and    BYTE PTR [esi],ch
  5132c8:	inc    esi
  5132c9:	or     BYTE PTR [eax],bl
  5132cb:	jns    0x51331c
  5132cd:	fwait
  5132ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5132cf:	rol    WORD PTR [esi],1
  5132d2:	sbb    eax,0x35fb3325
  5132d7:	packssdw mm1,QWORD PTR ds:0x536ad7aa
  5132de:	xchg   edx,eax
  5132df:	push   edi
  5132e0:	and    cl,BYTE PTR [edx-0x32]
  5132e3:	ins    DWORD PTR es:[edi],dx
  5132e4:	inc    edi
  5132e5:	(bad)  
  5132e6:	in     eax,dx
  5132e7:	mov    WORD PTR [edx],es
  5132e9:	xchg   ebx,eax
  5132ea:	inc    eax
  5132eb:	xchg   edi,eax
  5132ec:	(bad)  
  5132ed:	dec    esi
  5132ee:	repnz fidivr WORD PTR [edx+0x325c0e70]
  5132f5:	es mov edx,0x4db86e30
  5132fb:	add    BYTE PTR [edx],dh
  5132fd:	shl    BYTE PTR ds:[ecx],1
  513300:	mov    ebp,0x8b00c10a
  513305:	push   ss
  513306:	sub    edx,DWORD PTR es:[ebx-0x7f]
  51330a:	inc    eax
  51330b:	mov    ebp,DWORD PTR [edx-0x730bc516]
  513311:	fwait
  513312:	into   
  513313:	test   al,0x15
  513315:	popa   
  513316:	(bad)  
  513317:	fstp   QWORD PTR ds:0x763c1784
  51331d:	pop    esp
  51331e:	cdq    
  51331f:	shr    ecx,1
  513321:	push   ss
  513322:	add    DWORD PTR [edx-0x47],ebp
  513325:	pop    edx
  513326:	test   DWORD PTR [edi],eax
  513328:	jo     0x513398
  51332a:	adc    eax,0xc8de0df
  51332f:	(bad)  
  513330:	pop    ss
  513331:	shl    BYTE PTR [ebx+0x2393664d],0x9c
  513338:	fcomp  DWORD PTR [ebx+0x2f]
  51333b:	arpl   WORD PTR [edi],di
  51333d:	gs jmp 0x51334e
  513340:	ds jno 0x513349
  513343:	sub    esp,esp
  513345:	ret    0x1834
  513348:	popa   
  513349:	ss push ds
  51334b:	lods   al,BYTE PTR ds:[esi]
  51334c:	dec    ebx
  51334d:	es cmp bh,0xe
  513351:	inc    esi
  513352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513353:	mov    dh,0xc9
  513355:	jmp    0x8809:0xdbf768ba
  51335c:	enter  0x7971,0x5e
  513360:	dec    BYTE PTR [ebx]
  513362:	sbb    BYTE PTR [edi+esi*1+0x9efd0d8],dh
  513369:	pop    eax
  51336a:	jg     0x513337
  51336c:	dec    edi
  51336d:	in     eax,dx
  51336e:	ret    
  51336f:	mov    cl,0x1c
  513371:	or     BYTE PTR [ecx+0x65b1bd55],cl
  513377:	imul   edx,ebx,0xaecc1c6c
  51337d:	std    
  51337e:	sbb    al,0xcb
  513380:	push   es
  513381:	ret    
  513382:	inc    ecx
  513383:	sbb    ah,dh
  513385:	sbb    ecx,DWORD PTR [eax+ecx*2+0x4df5ab05]
  51338c:	jne    0x5133e2
  51338e:	mov    bl,0x67
  513390:	push   ecx
  513391:	xchg   ebx,eax
  513392:	addr16 jae 0x513387
  513395:	lds    edi,FWORD PTR [eax+0x78a367ed]
  51339b:	dec    eax
  51339c:	mov    ds,eax
  51339e:	pop    esp
  51339f:	sbb    eax,0xf76228d1
  5133a4:	xlat   BYTE PTR ds:[ebx]
  5133a5:	aaa    
  5133a6:	js     0x5133b3
  5133a8:	mov    ebp,0x3a1cf12f
  5133ad:	imul   esp,DWORD PTR [esi*2+0x3b7b7e3c],0x73
  5133b5:	mov    al,ds:0xe19cc932
  5133ba:	lock xchg DWORD PTR [ecx],eax
  5133bd:	sar    BYTE PTR [esi+eax*8-0x7e],cl
  5133c1:	inc    BYTE PTR [esi+0x33f27d95]
  5133c7:	sbb    BYTE PTR gs:[ecx-0x23],cl
  5133cb:	sub    DWORD PTR [edx],eax
  5133cd:	dec    ebp
  5133ce:	mov    ch,0xb
  5133d0:	cmp    edx,DWORD PTR [esi+eax*2-0x51887ba7]
  5133d7:	test   DWORD PTR [eax+edx*1+0x7cdf7a34],esi
  5133de:	mov    ebx,0xbab8acbb
  5133e3:	outs   dx,DWORD PTR ds:[esi]
  5133e4:	ins    DWORD PTR es:[edi],dx
  5133e5:	inc    ebx
  5133e6:	cmp    DWORD PTR [bx+si+0x5e],ebx
  5133ea:	iret   
  5133eb:	sub    DWORD PTR [edi+ecx*8-0x49],ebp
  5133ef:	sub    bl,BYTE PTR [ebx+0x29]
  5133f2:	mov    ss,edx
  5133f4:	and    DWORD PTR [eax],0xffffffb8
  5133f7:	cmc    
  5133f8:	int3   
  5133f9:	dec    edx
  5133fa:	ret    
  5133fb:	loop   0x51338e
  5133fd:	mov    BYTE PTR [edx],ch
  5133ff:	jl     0x5133a9
  513401:	out    0x60,al
  513403:	scas   eax,DWORD PTR es:[edi]
  513404:	loopne 0x513401
  513406:	aam    0x73
  513408:	adc    bl,BYTE PTR [ecx]
  51340a:	lds    ebp,FWORD PTR [ebp-0x7f]
  51340d:	push   edx
  51340e:	sti    
  51340f:	add    BYTE PTR [edi],0x93
  513412:	xchg   esp,eax
  513413:	dec    ebx
  513414:	imul   eax,DWORD PTR [edi-0x40],0xffffffd4
  513418:	push   ebp
  513419:	xchg   edi,eax
  51341a:	test   DWORD PTR [edi+0x628f1782],edx
  513420:	iret   
  513421:	dec    ebp
  513422:	popa   
  513423:	inc    edi
  513424:	sbb    bl,BYTE PTR [edx+edi*4+0x67207a7f]
  51342b:	test   al,0x2a
  51342d:	xchg   BYTE PTR [eax+0x58],ah
  513430:	jg     0x5134a6
  513432:	mov    dh,0xe9
  513434:	aam    0x55
  513436:	push   ebx
  513437:	retf   0x2ca6
  51343a:	stos   BYTE PTR es:[edi],al
  51343b:	scas   eax,DWORD PTR es:[edi]
  51343c:	push   edx
  51343d:	jp     0x513445
  51343f:	or     esi,esp
  513441:	sub    BYTE PTR [edx-0x7c6caa12],ah
  513447:	and    BYTE PTR [edi],cl
  513449:	xchg   BYTE PTR [edi-0x6f8a008d],dl
  51344f:	sub    bh,dh
  513451:	fxch   st(6)
  513453:	push   eax
  513454:	adc    esp,0x7
  513457:	inc    esp
  513458:	mov    eax,ds:0xf0756add
  51345d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51345e:	clc    
  51345f:	(bad)  
  513460:	repz fidiv DWORD PTR [edx+esi*4]
  513464:	mov    bl,0xb2
  513466:	or     eax,0x438c15f5
  51346b:	test   DWORD PTR [esi+0x13a3b866],esi
  513471:	(bad)  
  513472:	jg     0x5134e1
  513474:	(bad)  
  513475:	mov    ch,0xdd
  513477:	jnp    0x51348e
  513479:	xchg   edi,ebx
  51347b:	sbb    al,0xa4
  51347d:	push   edx
  51347e:	mov    BYTE PTR [eax],bh
  513480:	mov    DWORD PTR [edx-0x63],edx
  513483:	iret   
  513484:	push   ss
  513485:	ins    DWORD PTR es:[edi],dx
  513486:	mov    edx,0xa19e3592
  51348b:	cdq    
  51348c:	imul   edi,edi,0xf
  51348f:	jb     0x513448
  513491:	mov    cl,0x55
  513493:	xchg   edx,eax
  513494:	iret   
  513495:	arpl   WORD PTR [ecx+edx*8-0x26],dx
  513499:	inc    edx
  51349a:	mov    edi,0x7272a217
  51349f:	icebp  
  5134a0:	paddusw mm2,mm0
  5134a3:	or     BYTE PTR [edx+0x37],dl
  5134a6:	xchg   ebp,eax
  5134a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5134a8:	inc    esi
  5134a9:	lock pop esi
  5134ab:	jge    0x5134ca
  5134ad:	out    0x24,eax
  5134af:	in     eax,dx
  5134b0:	xchg   esp,eax
  5134b1:	cld    
  5134b2:	sahf   
  5134b3:	jmp    0x92b4:0x6471c0fa
  5134ba:	sub    bl,BYTE PTR [ecx-0x1e7030ac]
  5134c0:	call   0x2a0e:0xadc282d0
  5134c7:	cdq    
  5134c8:	les    eax,FWORD PTR [esi+0x24]
  5134cb:	add    BYTE PTR [ebp+edx*1+0xc],dl
  5134cf:	fcomip st,st(0)
  5134d1:	das    
  5134d2:	lods   al,BYTE PTR ds:[esi]
  5134d3:	rcl    edi,0x62
  5134d6:	popa   
  5134d7:	jae    0x5134af
  5134d9:	(bad)  
  5134da:	(bad)  
  5134db:	jg     0x5134fe
  5134dd:	fwait
  5134de:	sbb    eax,0xace02e31
  5134e3:	shl    dh,1
  5134e5:	pop    ebp
  5134e6:	mov    ebp,edi
  5134e8:	adc    esi,DWORD PTR [esi-0xeb16a81]
  5134ee:	sti    
  5134ef:	and    ch,dh
  5134f1:	jno    0x513566
  5134f3:	test   al,0xb0
  5134f5:	dec    ebx
  5134f6:	mov    bh,0x74
  5134f8:	pop    ecx
  5134f9:	icebp  
  5134fa:	jmp    0xb362:0xc2074c21
  513501:	call   0x5c85:0x2fed25a0
  513508:	mov    bh,0xbe
  51350a:	jle    0x5134da
  51350c:	ja     0x51356b
  51350e:	stos   DWORD PTR es:[edi],eax
  51350f:	nop    DWORD PTR [ebx+0x125fa344]
  513516:	cmp    bh,ch
  513518:	mov    ah,0x73
  51351a:	aaa    
  51351b:	inc    edx
  51351c:	out    0x47,al
  51351e:	stc    
  51351f:	adc    al,0xd0
  513521:	push   ss
  513522:	call   0x759f:0x33376436
  513529:	loop   0x513564
  51352b:	inc    edx
  51352c:	add    al,0xe5
  51352e:	dec    esi
  51352f:	lds    ecx,FWORD PTR [ebp-0x46c5efd5]
  513535:	mov    esp,0x92d4e1fc
  51353a:	jl     0x51353a
  51353c:	daa    
  51353d:	inc    ebx
  51353e:	inc    esi
  51353f:	inc    ebp
  513540:	pusha  
  513541:	call   0x13ab:0xe7827b5e
  513548:	adc    BYTE PTR [ebp+0x7f],0x30
  51354c:	mov    ecx,0x632ab4dd
  513551:	call   0x5970:0xae57fcda
  513558:	push   ecx
  513559:	lods   al,BYTE PTR ds:[esi]
  51355a:	lods   eax,DWORD PTR ds:[esi]
  51355b:	mov    ds:0x951c6303,eax
  513560:	pop    ebp
  513561:	xchg   edx,eax
  513562:	mov    edi,0x4242922d
  513567:	pop    ss
  513568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513569:	shl    BYTE PTR [edi-0x3e8600a3],cl
  51356f:	leave  
  513570:	mov    cl,0x88
  513572:	out    dx,al
  513573:	mov    dl,0x95
  513575:	jae    0x5135ee
  513577:	xor    eax,0x48398bc7
  51357c:	into   
  51357d:	add    esi,DWORD PTR [edx-0x4890540b]
  513583:	xor    DWORD PTR [edi+eax*2+0x69],edi
  513587:	sti    
  513588:	outs   dx,DWORD PTR ds:[esi]
  513589:	xor    DWORD PTR [ecx+0x5a],0xf4f9e790
  513590:	je     0x513580
  513592:	test   DWORD PTR [ebp+0x78],0x32c8ee8d
  513599:	lods   eax,DWORD PTR ds:[esi]
  51359a:	mov    bh,0x2c
  51359c:	ins    DWORD PTR es:[edi],dx
  51359d:	lea    ecx,ds:0x506ac6a2
  5135a3:	inc    ebp
  5135a4:	adc    BYTE PTR [esi+0xa],bh
  5135a7:	ffreep st(3)
  5135a9:	push   eax
  5135aa:	fdivp  st(7),st
  5135ac:	push   esi
  5135ad:	shl    BYTE PTR [ebx],0x3c
  5135b0:	add    al,0xe7
  5135b2:	fmulp  st(0),st
  5135b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5135b5:	mov    cl,0xd2
  5135b7:	imul   ecx,DWORD PTR [edi],0x3c
  5135ba:	loopne 0x51357e
  5135bc:	bnd jo 0x513635
  5135bf:	adc    esp,DWORD PTR [ebx-0x53]
  5135c2:	sub    DWORD PTR [edi],eax
  5135c4:	scas   al,BYTE PTR es:[edi]
  5135c5:	sbb    al,0xbb
  5135c7:	jmp    0xc1a3:0x31518572
  5135ce:	call   0x1d25:0x8b4f3ded
  5135d5:	aaa    
  5135d6:	pop    eax
  5135d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5135d8:	ror    BYTE PTR [esi-0x27],cl
  5135db:	imul   DWORD PTR [eax]
  5135dd:	int3   
  5135de:	ss ins BYTE PTR es:[edi],dx
  5135e0:	pop    ebp
  5135e1:	bound  eax,QWORD PTR [eax+0x21]
  5135e4:	jp     0x513586
  5135e6:	ja     0x513658
  5135e8:	(bad)  ds:0xcd5ef086
  5135ee:	mov    bl,0x7b
  5135f0:	xchg   ebx,edx
  5135f2:	adc    eax,0xa106c2b
  5135f7:	popf   
  5135f8:	fistp  WORD PTR [edx]
  5135fa:	cmc    
  5135fb:	jmp    0x86e1f451
  513600:	std    
  513601:	out    dx,al
  513602:	pusha  
  513603:	imul   edx,esi,0xffffff95
  513606:	mov    eax,0x2b7ecc95
  51360b:	or     eax,DWORD PTR [edi+eiz*4-0x1b4e108c]
  513612:	sbb    ebp,ecx
  513614:	pop    ebx
  513615:	adc    DWORD PTR [ebx+0x57],0xfffffff9
  513619:	aad    0x9b
  51361b:	stos   DWORD PTR es:[edi],eax
  51361c:	imul   ebx,ecx,0x7c
  51361f:	les    esp,FWORD PTR [ebx-0x21]
  513622:	fisttp DWORD PTR ds:0x330ac5a5
  513628:	dec    eax
  513629:	adc    eax,0x29fa9164
  51362e:	xchg   edi,eax
  51362f:	loop   0x51360c
  513631:	inc    ecx
  513632:	inc    esp
  513633:	pushf  
  513634:	and    DWORD PTR [edx-0x9],ebx
  513637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513638:	jmp    0x8eef4bc2
  51363d:	outs   dx,DWORD PTR ds:[esi]
  51363e:	jmp    0x5136ba
  513640:	mov    dl,0x1e
  513642:	test   dh,ch
  513644:	and    BYTE PTR [ebx+0xadbe666],cl
  51364a:	cmp    ch,BYTE PTR [edx-0x7e]
  51364d:	fxch   st(5)
  51364f:	leave  
  513650:	sahf   
  513651:	push   esp
  513652:	or     al,0x2e
  513654:	stos   BYTE PTR es:[edi],al
  513655:	repz sbb al,0x3a
  513658:	test   DWORD PTR [ebx+eax*8-0x3661cf5d],ebx
  51365f:	or     al,0xa6
  513661:	add    ah,dl
  513663:	dec    ebp
  513664:	mov    ebp,0x87e0b37c
  513669:	mov    eax,0x613cdd4f
  51366e:	jns    0x5136e2
  513670:	(bad)  
  513671:	fst    DWORD PTR [eax]
  513673:	inc    ecx
  513674:	or     ebp,DWORD PTR [edx+0x67]
  513677:	arpl   WORD PTR [esi],dx
  513679:	into   
  51367a:	push   ds
  51367b:	cdq    
  51367c:	inc    esi
  51367d:	fnstsw WORD PTR [esi]
  51367f:	std    
  513680:	mov    ch,BYTE PTR [ebp-0x6673177c]
  513686:	sahf   
  513687:	es fwait
  513689:	cmp    dh,bl
  51368b:	mov    ebx,0x3dbd8739
  513690:	in     al,0x7f
  513692:	mov    edx,0xdab730fe
  513697:	inc    edx
  513698:	pop    edx
  513699:	stos   BYTE PTR es:[edi],al
  51369a:	lods   eax,DWORD PTR ds:[esi]
  51369b:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51369d:	ficom  DWORD PTR [eax+0x2de6a81f]
  5136a3:	cmp    eax,0x35d53b1e
  5136a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5136a9:	mov    dh,0x8
  5136ab:	jmp    0x2281:0xca3a05fc
  5136b2:	pop    ecx
  5136b3:	push   ebx
  5136b4:	xlat   BYTE PTR ds:[ebx]
  5136b5:	mov    ebx,eax
  5136b7:	jbe    0x5136d7
  5136b9:	out    dx,eax
  5136ba:	(bad)  
  5136bb:	sbb    al,0xcb
  5136bd:	lds    esi,FWORD PTR [edi+0x16a0ea04]
  5136c3:	mov    cl,0x2b
  5136c5:	jecxz  0x51365b
  5136c7:	enter  0xacd3,0x6a
  5136cb:	sti    
  5136cc:	sub    eax,0x722afc9
  5136d1:	cmp    dh,bl
  5136d3:	icebp  
  5136d4:	adc    eax,0xc932cf62
  5136d9:	scas   eax,DWORD PTR es:[edi]
  5136da:	int3   
  5136db:	adc    DWORD PTR [esi+0x63f8a26],esp
  5136e1:	or     BYTE PTR ds:0x1b18e064,0x4e
  5136e8:	mov    eax,0xdf4bfeae
  5136ed:	mov    al,ds:0x90832228
  5136f2:	aad    0xc3
  5136f4:	mov    edi,0xf19d2b21
  5136f9:	call   0x8753:0x342d0a90
  513700:	(bad)  [edx]
  513702:	clc    
  513703:	dec    ebx
  513704:	xchg   esp,eax
  513705:	mov    esp,0x8aaddf6e
  51370a:	mov    ah,0xff
  51370c:	mov    bl,0x4c
  51370e:	mov    bl,0x5a
  513710:	gs fucom st(3)
  513714:	adc    al,0xec
  513716:	lds    edx,FWORD PTR [edi+0x1b]
  513719:	or     bl,BYTE PTR [edi+eax*1-0x4]
  51371d:	test   DWORD PTR [ebx+0xc],edi
  513720:	mov    cl,0x23
  513722:	arpl   WORD PTR [ecx-0x6d0e6023],bx
  513728:	jae    0x513755
  51372a:	jmp    0x5136ed
  51372c:	add    DWORD PTR [ecx+ecx*8+0x13],esi
  513730:	mov    eax,ds:0x8fec12b9
  513735:	adc    DWORD PTR [ecx+0x5b9891e4],ebp
  51373b:	adc    DWORD PTR [eax-0xa],0xc
  51373f:	jmp    0x5136cd
  513741:	dec    esi
  513742:	out    dx,al
  513743:	jbe    0x513731
  513745:	lea    ebx,[ebp-0x57]
  513748:	fwait
  513749:	mov    dl,0x5c
  51374b:	int3   
  51374c:	sbb    ecx,ebp
  51374e:	scas   al,BYTE PTR es:[edi]
  51374f:	add    al,0x69
  513751:	mov    cl,0xc3
  513753:	cmp    esp,DWORD PTR [ebx]
  513755:	pop    eax
  513756:	cmp    eax,0x15951b8b
  51375b:	inc    edi
  51375c:	data16 daa 
  51375e:	int3   
  51375f:	cdq    
  513760:	stos   BYTE PTR es:[edi],al
  513761:	cwde   
  513762:	jg     0x5136ee
  513764:	mov    ebx,0x26c71d40
  513769:	popa   
  51376a:	hlt    
  51376b:	je     0x513711
  51376d:	and    edx,DWORD PTR [esi-0x37efa597]
  513773:	jge    0x51375f
  513775:	fstp   TBYTE PTR [esi+0x1e4fab66]
  51377b:	mov    ebx,0x99137d18
  513780:	mov    cl,0x6a
  513782:	leave  
  513783:	fnsave [edi+0x7f]
  513786:	jecxz  0x513708
  513788:	cmp    al,0xb0
  51378a:	xchg   ch,dl
  51378c:	or     eax,0xcff59694
  513791:	jns    0x513800
  513793:	xchg   edi,eax
  513794:	push   ds
  513795:	call   DWORD PTR [ecx-0x68]
  513798:	(bad)  
  513799:	mov    edx,ebp
  51379b:	add    esp,DWORD PTR [ebx-0x29]
  51379e:	aam    0x3c
  5137a0:	mov    bl,0x76
  5137a2:	aad    0x9c
  5137a4:	call   0xbbad:0xf64286da
  5137ab:	scas   al,BYTE PTR es:[edi]
  5137ac:	cwde   
  5137ad:	shr    DWORD PTR ds:0xe2ad929f,1
  5137b3:	leave  
  5137b4:	fbstp  TBYTE PTR fs:[esi-0x7d48eb7d]
  5137bb:	xor    DWORD PTR [ebx-0x63],esp
  5137be:	sub    DWORD PTR [ebp+0x1b],ecx
  5137c1:	ret    0xbb78
  5137c4:	pushf  
  5137c5:	push   ebx
  5137c6:	enter  0xeb71,0x64
  5137ca:	mov    esi,0xca0db29c
  5137cf:	adc    eax,0x4f577262
  5137d4:	mov    esi,0xe559bd25
  5137d9:	sbb    ebp,DWORD PTR [edi+0x4a]
  5137dc:	inc    eax
  5137dd:	sbb    bl,ch
  5137df:	bnd ja 0x5137b3
  5137e2:	mov    ch,0xc8
  5137e4:	jmp    0x6c88410b
  5137e9:	add    BYTE PTR [edi-0x3773589],cl
  5137ef:	ds pop esi
  5137f1:	inc    esi
  5137f2:	ror    DWORD PTR [eax],1
  5137f4:	repnz mov DWORD PTR [ebp+0x68397117],ebp
  5137fb:	ror    DWORD PTR [eax],0x8
  5137fe:	dec    edx
  5137ff:	addr16 into 
  513801:	push   0x2
  513803:	outs   dx,DWORD PTR ds:[esi]
  513804:	cli    
  513805:	or     eax,0xe2560cc
  51380a:	scas   eax,DWORD PTR es:[edi]
  51380b:	mov    eax,0xcb3e4bc0
  513810:	mov    bh,0x4a
  513812:	enter  0x8534,0x6f
  513816:	data16 ja 0x51380b
  513819:	dec    ebx
  51381a:	(bad)  
  51381b:	fadd   QWORD PTR [eax+0x6ee26715]
  513821:	cmp    al,0xc1
  513823:	mov    dh,0x6c
  513825:	add    BYTE PTR [eax+0x24ac1c55],dl
  51382b:	jnp    0x51389d
  51382d:	jle    0x5137b4
  51382f:	or     al,0x9d
  513831:	iret   
  513832:	xor    eax,ecx
  513834:	pushf  
  513835:	cwde   
  513836:	mov    ch,0xc3
  513838:	shl    DWORD PTR [ecx+0x6e2ee9c2],cl
  51383e:	sbb    DWORD PTR [ebp-0x5c722954],edi
  513844:	mov    dh,0xdf
  513846:	mov    esi,?
  513848:	fst    DWORD PTR ss:[eax]
  51384b:	fwait
  51384c:	mov    bh,0xcf
  51384e:	ror    DWORD PTR [ecx-0x3d],cl
  513851:	dec    edi
  513852:	cmp    bl,BYTE PTR [eax]
  513854:	les    edi,FWORD PTR [edi+0x13]
  513857:	data16 fcmovnu st,st(2)
  51385a:	or     DWORD PTR [ebp-0x66],eax
  51385d:	out    0x32,al
  51385f:	jnp    0x5138a8
  513861:	jo     0x5138de
  513863:	dec    ebp
  513864:	ds mov esp,0x497f0224
  51386a:	sub    ecx,ebx
  51386c:	cmp    al,0x39
  51386e:	das    
  51386f:	les    ecx,FWORD PTR [ecx+0x60]
  513872:	ss xchg edi,eax
  513874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513875:	pop    eax
  513876:	sub    esp,DWORD PTR [eax+0x16d9f134]
  51387c:	iret   
  51387d:	ss xchg ebx,eax
  51387f:	sub    ch,BYTE PTR [eax+0x1c4e90d0]
  513885:	jl     0x513816
  513887:	pop    ebx
  513888:	ins    BYTE PTR es:[edi],dx
  513889:	lock or DWORD PTR [ebx],0x2da4fd57
  513890:	push   eax
  513891:	sbb    DWORD PTR [eax+ebx*1-0x2e3c448c],esp
  513898:	popf   
  513899:	push   cs
  51389a:	xchg   ecx,eax
  51389b:	mov    edi,0xd1d12477
  5138a0:	xor    BYTE PTR [esi+0x126bfe52],ah
  5138a6:	mov    BYTE PTR [edx-0x6d104f6a],al
  5138ac:	lahf   
  5138ad:	rcr    DWORD PTR [ebp+0x22789316],cl
  5138b3:	mov    ebp,0x1f45740
  5138b8:	add    ebp,DWORD PTR [edx-0x5a]
  5138bb:	leave  
  5138bc:	in     al,0x33
  5138be:	pushf  
  5138bf:	not    DWORD PTR [esi-0x14]
  5138c2:	lds    esp,FWORD PTR [ecx+0x19]
  5138c5:	es jecxz 0x5138e7
  5138c8:	xor    BYTE PTR [ebp+0x4b],bl
  5138cb:	pop    ss
  5138cc:	pop    eax
  5138cd:	xchg   ecx,eax
  5138ce:	xor    eax,0xad0b8c74
  5138d3:	shl    DWORD PTR [edx],1
  5138d5:	sbb    eax,0xe5aa0bea
  5138da:	push   esp
  5138db:	ret    
  5138dc:	imul   esi,DWORD PTR [edx+0x7b29d930],0xffffffd9
  5138e3:	into   
  5138e4:	sub    eax,0x551e75e1
  5138e9:	stos   BYTE PTR es:[edi],al
  5138ea:	repz add eax,0x84caf228
  5138f0:	push   ebp
  5138f1:	xor    DWORD PTR [esi-0x4230dc9e],ebp
  5138f7:	xchg   esi,eax
  5138f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5138f9:	adc    eax,DWORD PTR [ebp-0x69]
  5138fc:	jnp    0x513905
  5138fe:	mov    esi,0x29c897a9
  513903:	popa   
  513904:	imul   esi,DWORD PTR [ecx],0xe70aeb0c
  51390a:	retf   0xf037
  51390d:	inc    esi
  51390e:	dec    esp
  51390f:	outs   dx,BYTE PTR ds:[esi]
  513910:	cmc    
  513911:	cmp    BYTE PTR [edx],ch
  513913:	jne    0x5138a0
  513915:	jo     0x51390d
  513917:	std    
  513918:	ins    DWORD PTR es:[edi],dx
  513919:	cli    
  51391a:	cmova  ebp,DWORD PTR [esi-0x3c]
  51391e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51391f:	out    dx,eax
  513920:	xchg   esp,eax
  513921:	mov    ah,0xb0
  513923:	dec    edx
  513924:	and    cl,BYTE PTR [ebp+ecx*8+0x57]
  513928:	iret   
  513929:	popf   
  51392a:	and    DWORD PTR [edx+0x249f0085],ebp
  513930:	daa    
  513931:	clc    
  513932:	sar    DWORD PTR [eax],1
  513934:	dec    esi
  513935:	sbb    BYTE PTR [ebx+0x3a],bl
  513938:	sahf   
  513939:	dec    eax
  51393a:	push   ss
  51393b:	pop    ebp
  51393c:	(bad)  
  51393e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51393f:	shr    BYTE PTR [edx+0x7fa4145f],1
  513945:	call   0x32f79b69
  51394a:	xor    DWORD PTR [esi],0xfffffffc
  51394d:	int3   
  51394e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51394f:	or     bh,bl
  513951:	loop   0x5139ab
  513953:	fcomp  DWORD PTR [eax+0x20]
  513956:	mov    esp,0xcee88d3a
  51395b:	test   eax,0xbadcdd23
  513960:	jg     0x5139a2
  513962:	addr16 xor al,0x0
  513965:	jmp    0x975189c3
  51396a:	mov    dh,0x44
  51396c:	scas   al,BYTE PTR es:[edi]
  51396d:	inc    ebp
  51396e:	add    DWORD PTR [ebp+0x33],esi
  513971:	mov    al,ds:0x771a8355
  513976:	lds    edx,FWORD PTR [eax]
  513978:	adc    BYTE PTR [eax-0x506b8fd8],0x53
  51397f:	loope  0x5139a3
  513981:	or     al,BYTE PTR [edi]
  513983:	adc    bl,BYTE PTR ds:0x3c25f1ef
  513989:	inc    eax
  51398a:	mov    edx,0xe02b46ed
  51398f:	popf   
  513990:	and    ch,BYTE PTR [edi]
  513992:	push   ebx
  513993:	neg    DWORD PTR [esi+0x6638540f]
  513999:	scas   eax,DWORD PTR es:[edi]
  51399a:	ins    DWORD PTR es:[edi],dx
  51399b:	dec    eax
  51399c:	mov    eax,0xd6ace8e1
  5139a1:	outs   dx,BYTE PTR ds:[esi]
  5139a2:	push   cs
  5139a3:	sbb    BYTE PTR [ecx-0x5c],cl
  5139a6:	push   esp
  5139a7:	mov    al,ds:0xe2262f2e
  5139ac:	shl    DWORD PTR [ebx],0xd7
  5139af:	pop    ecx
  5139b0:	push   ss
  5139b1:	jl     0x51394a
  5139b3:	push   esi
  5139b4:	jge    0x513a1e
  5139b6:	es dec esi
  5139b8:	je     0x513993
  5139ba:	jl     0x513979
  5139bc:	or     eax,0x441e99c1
  5139c1:	or     eax,0xde068df7
  5139c6:	push   edi
  5139c7:	(bad)  
  5139cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5139cc:	jbe    0x5139f5
  5139ce:	push   0x26
  5139d0:	mov    al,ds:0x848b506b
  5139d5:	jbe    0x513a51
  5139d7:	or     eax,0xe5bd1937
  5139dc:	stos   BYTE PTR es:[edi],al
  5139dd:	push   edx
  5139de:	or     eax,0xd56b5e9e
  5139e3:	mov    bh,0xa9
  5139e5:	push   ds
  5139e6:	sub    bl,BYTE PTR [edx+0x716a1935]
  5139ec:	mov    edi,DWORD PTR [edx]
  5139ee:	mov    ch,0xe8
  5139f0:	(bad)  
  5139f1:	adc    eax,DWORD PTR ds:[ebx+0x26f9a3bc]
  5139f8:	mov    eax,ds:0xb307848b
  5139fd:	push   ebp
  5139fe:	rcl    esi,0xb1
  513a01:	xor    BYTE PTR [eax-0x75ce0b8a],ch
  513a07:	dec    esp
  513a08:	mov    ecx,0x9f9f2034
  513a0d:	and    bh,dh
  513a0f:	xor    al,0xe2
  513a11:	fwait
  513a12:	out    dx,al
  513a13:	ret    0x78
  513a16:	xor    eax,0x206e8a72
  513a1b:	and    BYTE PTR [esi+ebp*1],bh
  513a1e:	dec    ecx
  513a1f:	mov    cl,0xab
  513a21:	and    DWORD PTR [edx-0x23],0xffffff9a
  513a25:	in     al,0x8a
  513a27:	rcl    BYTE PTR [eax-0x33d2efcd],1
  513a2d:	cmp    DWORD PTR [eax-0x7f],eax
  513a30:	cdq    
  513a31:	into   
  513a32:	adc    al,0x14
  513a34:	push   ss
  513a35:	mov    al,0x81
  513a37:	push   esi
  513a38:	push   eax
  513a39:	rol    BYTE PTR ds:[ebx+0x56],1
  513a3d:	jmp    0x513a78
  513a3f:	xor    ebp,DWORD PTR [edi-0x35304726]
  513a45:	add    eax,0x74032529
  513a4a:	cdq    
  513a4b:	adc    ah,BYTE PTR fs:[ebp+edx*1+0x35]
  513a50:	or     al,0x6d
  513a52:	push   ss
  513a53:	cmp    BYTE PTR [ebx-0xe],cl
  513a56:	cli    
  513a57:	inc    ebp
  513a58:	mov    DWORD PTR [ebp-0x1ca58582],0x3298a1c
  513a62:	scas   al,BYTE PTR es:[edi]
  513a63:	xor    ebp,eax
  513a65:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  513a67:	les    esp,FWORD PTR [edx-0x65f69c58]
  513a6d:	jae    0x513ab1
  513a6f:	loope  0x513ad0
  513a71:	sbb    cl,BYTE PTR [esi+ebx*8-0x78f3e690]
  513a78:	daa    
  513a79:	pop    es
  513a7a:	jnp    0x513a8e
  513a7c:	les    edi,FWORD PTR ds:0x50a17752
  513a82:	add    edx,DWORD PTR [edi+0x20]
  513a85:	jae    0x513a41
  513a87:	test   al,0x88
  513a89:	jbe    0x513a60
  513a8b:	popa   
  513a8c:	call   0xbb5a:0x903dfd2d
  513a93:	(bad)  
  513a94:	leave  
  513a95:	xchg   edx,eax
  513a96:	test   al,bl
  513a98:	or     ebx,edi
  513a9a:	jp     0x513a37
  513a9c:	sbb    eax,0x2bc2c09
  513aa1:	rol    DWORD PTR [edi-0x472708a4],1
  513aa7:	jns    0x513a5b
  513aa9:	add    eax,DWORD PTR [esi-0x3]
  513aac:	cmp    esi,DWORD PTR [esi-0x1d]
  513aaf:	mov    ecx,DWORD PTR [eax+0x77997f7f]
  513ab5:	retf   
  513ab6:	bound  ebx,QWORD PTR [esi+0x47]
  513ab9:	aaa    
  513aba:	jbe    0x513a60
  513abc:	xchg   edx,eax
  513abd:	jmp    0x848c1b16
  513ac2:	loop   0x513af0
  513ac4:	repz test DWORD PTR [ebp-0x41],0xf4a87361
  513acc:	jae    0x513af6
  513ace:	adc    DWORD PTR [edx+ebp*8-0x7fbb373e],esi
  513ad5:	pushf  
  513ad6:	fdivr  DWORD PTR [esi]
  513ad8:	data16 fcomp st(5)
  513adb:	stos   DWORD PTR es:[edi],eax
  513adc:	dec    esi
  513add:	rep ins DWORD PTR es:[edi],dx
  513adf:	fisttp WORD PTR [ebp-0x15805e3b]
  513ae5:	inc    esi
  513ae6:	retf   
  513ae7:	aaa    
  513ae8:	mov    ds:0xc3ee72b8,al
  513aed:	fldcw  WORD PTR [eax-0x11]
  513af0:	jl     0x513a7e
  513af2:	and    eax,0x4b512f9e
  513af7:	push   0xffffffe8
  513af9:	jl     0x513a85
  513afb:	shl    bh,0xbd
  513afe:	mov    edx,0x64fa7bce
  513b03:	pop    ds
  513b04:	mov    esi,0xd3eff367
  513b09:	data16 aam 0x58
  513b0c:	retf   0x7484
  513b0f:	sub    eax,0x74048707
  513b14:	icebp  
  513b15:	jle    0x513b0f
  513b17:	cmp    BYTE PTR [edx],0x4c
  513b1a:	mov    ah,0x51
  513b1c:	adc    esi,DWORD PTR [eax]
  513b1e:	add    DWORD PTR [esi+ebx*1],esp
  513b21:	bound  ecx,QWORD PTR [ebp-0x58]
  513b24:	dec    edi
  513b25:	rcl    DWORD PTR [edi-0x641521a2],cl
  513b2b:	test   eax,0x2fa57367
  513b30:	lahf   
  513b31:	ss inc ebp
  513b33:	lods   eax,DWORD PTR ds:[esi]
  513b34:	and    eax,DWORD PTR [edx-0x7f]
  513b37:	mov    eax,ds:0x6454ba6b
  513b3c:	outs   dx,BYTE PTR ds:[esi]
  513b3d:	out    0x22,eax
  513b3f:	jmp    0xdf92:0xf30181ce
  513b46:	push   ss
  513b47:	push   0xfffffffe
  513b49:	and    DWORD PTR [edx+0x22aebb5b],eax
  513b4f:	or     bh,BYTE PTR [ecx-0x6]
  513b52:	in     eax,0x95
  513b54:	jl     0x513ad7
  513b56:	xchg   esp,eax
  513b57:	jb     0x513ba7
  513b59:	dec    ebx
  513b5a:	mov    cl,0xa7
  513b5c:	add    al,0x42
  513b5e:	inc    ebp
  513b5f:	js     0x513bbd
  513b61:	aam    0xbe
  513b63:	jbe    0x513aef
  513b65:	inc    eax
  513b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  513b67:	fild   WORD PTR [esi-0x6e72bcfa]
  513b6d:	(bad)  
  513b6e:	sbb    ebp,edx
  513b70:	mov    BYTE PTR [ecx],0x25
  513b73:	pop    eax
  513b74:	imul   edi,ebx,0x3d
  513b77:	sub    ebx,0x7a
  513b7a:	sbb    dl,BYTE PTR [edi]
  513b7c:	jns    0x513bd1
  513b7e:	dec    ebx
  513b7f:	repz ficom WORD PTR [edx]
  513b82:	lods   al,BYTE PTR ds:[esi]
  513b83:	bound  edi,QWORD PTR [eax-0x3e]
  513b86:	sti    
  513b87:	mov    DWORD PTR [esi-0x66],esi
  513b8a:	(bad)  
  513b8b:	mov    al,0x22
  513b8d:	clc    
  513b8e:	sub    eax,0xf26fd9dc
  513b93:	(bad)  
  513b95:	pop    ebp
  513b96:	test   BYTE PTR [ecx],al
  513b98:	push   ecx
  513b99:	xor    DWORD PTR [ecx+edx*1-0x649bc84d],esi
  513ba0:	cmp    esi,DWORD PTR [esi+0x4295979b]
  513ba6:	(bad)  
  513ba7:	ins    BYTE PTR es:[edi],dx
  513ba8:	lds    edx,FWORD PTR [eax-0x7d09b121]
  513bae:	jge    0x513b4d
  513bb0:	cmp    eax,0xb191a016
  513bb5:	sti    
  513bb6:	mov    bl,BYTE PTR [ebx+0x969b0e0]
  513bbc:	and    bl,BYTE PTR [esi+0x5a7157f7]
  513bc2:	or     al,0x82
  513bc4:	add    eax,0x417c8553
  513bc9:	out    0x60,al
  513bcb:	sub    ebp,edi
  513bcd:	xor    DWORD PTR [edi],ebp
  513bcf:	mov    dh,0xee
  513bd1:	inc    ecx
  513bd2:	cmp    eax,ebp
  513bd4:	prefetch BYTE PTR [ebx-0x15b12f1b]
  513bdb:	(bad)  
  513bdd:	mov    dh,0xa
  513bdf:	sub    ecx,0x7721cc3
  513be5:	xchg   edi,eax
  513be6:	into   
  513be7:	(bad)  
  513be8:	cmp    esp,ecx
  513bea:	inc    esp
  513beb:	xor    BYTE PTR [edx-0x21],0x37
  513bef:	packsswb mm6,mm6
  513bf2:	ins    BYTE PTR es:[edi],dx
  513bf3:	push   ss
  513bf4:	or     DWORD PTR ds:0x778767,esp
  513bfa:	jl     0x513b88
  513bfc:	jne    0x109b826f
  513c02:	es pop eax
  513c04:	and    cl,BYTE PTR [edx+0x27]
  513c07:	jnp    0x513c09
  513c09:	fistp  QWORD PTR ds:0x194d4457
  513c0f:	push   ds
  513c10:	add    BYTE PTR [edi+0x5e],0x28
  513c14:	pop    ss
  513c15:	fs int 0x7c
  513c18:	addr16 (bad) 
  513c1a:	retf   0x69b8
  513c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  513c1e:	adc    al,0xeb
  513c20:	test   DWORD PTR [edi+ebp*8],0xf58e7b0f
  513c27:	jbe    0x513c36
  513c29:	cld    
  513c2a:	sub    BYTE PTR [edx-0xe],0xb1
  513c2e:	mov    BYTE PTR [ebp-0x711551d8],dl
  513c34:	and    BYTE PTR [esi],0x5f
  513c37:	pop    edx
  513c38:	sub    WORD PTR [ecx+edx*4],si
  513c3c:	loopne 0x513bc2
  513c3e:	xchg   esi,eax
  513c3f:	pop    esi
  513c40:	test   al,0xb4
  513c42:	and    BYTE PTR [esi+0x1e],0x58
  513c46:	aad    0xb6
  513c48:	xor    ch,BYTE PTR [edi]
  513c4a:	cmp    ebp,DWORD PTR [ebx+0x33]
  513c4d:	inc    esp
  513c4e:	fisubr DWORD PTR [ecx]
  513c50:	lahf   
  513c51:	sbb    esi,esp
  513c53:	aaa    
  513c54:	sub    BYTE PTR [edi+0x25a0925d],ch
  513c5a:	test   BYTE PTR [ebx+esi*8+0x73722a96],cl
  513c61:	xchg   BYTE PTR [edx],bl
  513c63:	popfw  
  513c65:	shl    BYTE PTR [edi-0x250ffa7b],0x83
  513c6c:	fimul  WORD PTR [ebx+0x615b05d9]
  513c72:	mov    eax,ds:0x43fbc3fe
  513c77:	in     eax,0xe2
  513c79:	adc    DWORD PTR [ebx+0x558b8194],esp
  513c7f:	adc    eax,0x7586d667
  513c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  513c85:	adc    BYTE PTR [edx-0x54a227fc],al
  513c8b:	je     0x513c2f
  513c8d:	jbe    0x513c25
  513c8f:	add    BYTE PTR [edi+0x46],ah
  513c92:	in     eax,0x29
  513c94:	in     al,dx
  513c95:	shr    BYTE PTR [ecx+0x262f84b0],0xf6
  513c9c:	rcr    DWORD PTR [ebx-0x3c03dd53],0x51
  513ca3:	fs cli 
  513ca5:	mov    dl,dh
  513ca7:	cli    
  513ca8:	ja     0x513cdf
  513caa:	iret   
  513cab:	(bad)  
  513cad:	nop
  513cae:	jg     0x513c31
  513cb0:	mov    WORD PTR [ebx],?
  513cb2:	retf   
  513cb3:	dec    ecx
  513cb4:	inc    esp
  513cb5:	pop    ds
  513cb6:	mov    edi,0x69a58e8e
  513cbb:	repz inc BYTE PTR [edx+0x33f06aa6]
  513cc2:	dec    DWORD PTR [edi]
  513cc4:	fstp   DWORD PTR [edi+0x3b2d814b]
  513cca:	in     eax,0x70
  513ccc:	inc    ebx
  513ccd:	ss xor eax,0x526edff7
  513cd3:	(bad)  
  513cd4:	retf   0x11e0
  513cd7:	lea    ecx,[edx-0x5b]
  513cda:	int    0x79
  513cdc:	das    
  513cdd:	xor    esi,DWORD PTR [ebx+0x6f2e936]
  513ce3:	or     bl,bh
  513ce5:	lods   eax,DWORD PTR ds:[esi]
  513ce6:	cmp    dh,BYTE PTR [ecx-0x6]
  513ce9:	shl    ecx,1
  513ceb:	mov    esi,0xd426a536
  513cf0:	ja     0x513ca8
  513cf2:	inc    esp
  513cf3:	stos   DWORD PTR es:[edi],eax
  513cf4:	addr16 jno 0x513d6f
  513cf7:	mov    ?,esp
  513cf9:	push   esi
  513cfa:	mov    ebx,0x1d653773
  513cff:	inc    esp
  513d00:	test   al,0x84
  513d02:	mov    bl,0x23
  513d04:	inc    edx
  513d05:	xor    DWORD PTR [eax-0x4a12ffd],ecx
  513d0b:	icebp  
  513d0c:	(bad)  
  513d0d:	mov    fs,WORD PTR [esi+0x1414f9e5]
  513d13:	and    DWORD PTR [eax],0xf
  513d16:	popf   
  513d17:	js     0x513cc5
  513d19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  513d1a:	cdq    
  513d1b:	push   ss
  513d1c:	xlat   BYTE PTR ds:[ebx]
  513d1d:	loope  0x513cef
  513d1f:	xchg   ecx,eax
  513d20:	daa    
  513d21:	out    dx,al
  513d22:	adc    DWORD PTR [eax],esi
  513d24:	sbb    edi,ebp
  513d26:	add    esi,edx
  513d28:	jecxz  0x513d82
  513d2a:	pop    ebp
  513d2b:	jns    0x513d7f
  513d2d:	and    al,0xc1
  513d2f:	push   edi
  513d30:	and    DWORD PTR [edi],0xffffffd2
  513d33:	xlat   BYTE PTR ds:[ebx]
  513d34:	jle    0x513d26
  513d36:	fimul  WORD PTR [ecx-0x366f3342]
  513d3c:	shr    DWORD PTR [ebp-0x158b498c],0xb5
  513d43:	push   edx
  513d44:	or     DWORD PTR [esi],esi
  513d46:	loopne 0x513cd1
  513d48:	repz xchg edi,eax
  513d4a:	test   BYTE PTR [edx+ecx*4],ch
  513d4d:	test   eax,0x2adb2c16
  513d52:	jle    0x513d2f
  513d54:	mov    ds:0x76fefdf0,al
  513d59:	pop    edx
  513d5a:	mov    dl,0x2f
  513d5c:	pushf  
  513d5d:	jnp    0x513d75
  513d5f:	push   es
  513d60:	xchg   edi,eax
  513d61:	xor    DWORD PTR ds:0x7247777a,esi
  513d67:	dec    ebx
  513d68:	idiv   DWORD PTR [edi-0x6d]
  513d6b:	or     DWORD PTR [ebx-0x4a],ecx
  513d6e:	out    0xf4,al
  513d70:	sbb    ebp,DWORD PTR [esi-0x65]
  513d73:	fwait
  513d74:	push   edi
  513d75:	sbb    bh,bl
  513d77:	push   0xebb984d4
  513d7c:	data16 arpl WORD PTR [edi-0x5226f794],di
  513d83:	or     DWORD PTR [edx-0x54],ecx
  513d86:	inc    ebp
  513d87:	or     ebp,ecx
  513d89:	retf   
  513d8a:	or     al,0xad
  513d8c:	leave  
  513d8d:	xchg   ebp,eax
  513d8e:	(bad)  
  513d8f:	loopne 0x513d78
  513d91:	lahf   
  513d92:	and    BYTE PTR [ebx],bh
  513d94:	jo     0x513dd5
  513d96:	sti    
  513d97:	sbb    eax,0x536e5372
  513d9c:	addr16 sbb al,0x58
  513d9f:	push   edi
  513da0:	adc    dh,BYTE PTR [eax+ebp*4]
  513da3:	inc    BYTE PTR [ebx-0x4d]
  513da6:	rcl    BYTE PTR [esi+edx*2-0xd],1
  513daa:	je     0x513d88
  513dac:	mov    bh,0x43
  513dae:	cmp    BYTE PTR [ebx-0x4],dl
  513db1:	mov    ah,0x4
  513db3:	pop    edx
  513db4:	in     eax,dx
  513db5:	sbb    BYTE PTR [edx+0x7c996d46],bl
  513dbb:	rcl    DWORD PTR [ecx],0xcd
  513dbe:	and    BYTE PTR [esi+0x6],cl
  513dc1:	sub    dl,BYTE PTR [edx]
  513dc3:	in     eax,dx
  513dc4:	or     eax,0x42aaef07
  513dc9:	add    ebx,DWORD PTR [edi-0x65363a55]
  513dcf:	jmp    0x513dc4
  513dd1:	enter  0xa51,0xc3
  513dd5:	jnp    0x513e4c
  513dd7:	mov    ch,0x66
  513dd9:	ja     0x513d6d
  513ddb:	mov    ebp,0xcba18287
  513de0:	adc    dh,BYTE PTR [esi+0x68001981]
  513de6:	packssdw mm4,QWORD PTR [edi]
  513de9:	xor    DWORD PTR [edi-0x5e],0x6b
  513ded:	pop    ebx
  513dee:	xchg   al,cl
  513df0:	cmp    ebx,ecx
  513df2:	inc    esp
  513df3:	push   cs
  513df4:	jmp    0x8aa5:0x26836f12
  513dfb:	fild   QWORD PTR fs:[esi-0x3e63da1]
  513e02:	and    BYTE PTR [edi-0x29bc64d5],bh
  513e08:	fwait
  513e09:	adc    eax,0x906834ad
  513e0e:	adc    eax,0x726ce3ae
  513e13:	and    BYTE PTR [edi+0x3f36df38],0x89
  513e1a:	pop    esp
  513e1b:	cmp    cl,ch
  513e1d:	and    ah,BYTE PTR [ecx-0x14bff7ab]
  513e23:	fld    DWORD PTR [eax]
  513e25:	rcr    DWORD PTR [eax+0x6a],0x48
  513e29:	in     al,dx
  513e2a:	mov    ah,0xdb
  513e2c:	aas    
  513e2d:	xchg   DWORD PTR [edx-0x2ae28bf3],edi
  513e33:	mov    ds:0x5f602469,eax
  513e38:	push   esi
  513e39:	into   
  513e3a:	fs lahf 
  513e3c:	jmp    0x513e67
  513e3e:	cmp    edx,edx
  513e40:	ret    0x7468
  513e43:	scas   eax,DWORD PTR es:[edi]
  513e44:	mov    dl,0x1
  513e46:	pop    ds
  513e47:	jbe    0x513e2a
  513e49:	dec    eax
  513e4a:	aaa    
  513e4b:	pop    esp
  513e4c:	cmp    al,0xa2
  513e4e:	pop    ebp
  513e4f:	loop   0x513e88
  513e51:	inc    esp
  513e52:	call   0x40ce:0xb8ca048d
  513e59:	add    dl,bl
  513e5b:	pop    esp
  513e5c:	fild   WORD PTR [esp+eax*1]
  513e5f:	fdivr  DWORD PTR [edi+0x76]
  513e62:	jo     0x513ecd
  513e64:	retf   
  513e65:	push   ss
  513e66:	mov    esp,0xd2bc5c57
  513e6b:	sub    bl,BYTE PTR [ebx-0x45fbd7be]
  513e71:	adc    bl,dl
  513e73:	add    bl,bl
  513e75:	sbb    eax,0x45773589
  513e7a:	cmp    ecx,ebx
  513e7c:	icebp  
  513e7d:	jns    0x513e64
  513e7f:	(bad)  
  513e80:	mov    esp,esp
  513e82:	mov    ecx,0x199b997d
  513e87:	jmp    0x5cb9:0x86bd8a24
  513e8e:	jb     0x513eda
  513e90:	xchg   ecx,eax
  513e91:	ficomp DWORD PTR ds:0x3fa69922
  513e97:	mov    ds:0x72695da9,eax
  513e9c:	pop    ecx
  513e9d:	fldcw  WORD PTR [esi+0x12]
  513ea0:	out    0x6c,al
  513ea2:	cs aad 0x48
  513ea5:	adc    eax,0x6c9530dd
  513eaa:	mov    ebp,es
  513eac:	mov    esi,0x24436e2a
  513eb1:	es jbe 0x513f0c
  513eb4:	inc    eax
  513eb5:	out    dx,eax
  513eb6:	popa   
  513eb7:	enter  0x9e7f,0x28
  513ebb:	add    eax,0x690f7041
  513ec0:	mov    ecx,0x5fccbfe4
  513ec5:	dec    edx
  513ec6:	add    bl,BYTE PTR [eax+0x19]
  513ec9:	lods   eax,DWORD PTR ss:[esi]
  513ecb:	fnstcw WORD PTR [esp+eiz*4-0x73]
  513ecf:	addr16 hlt 
  513ed1:	mov    eax,0x8e9c8b4c
  513ed6:	xchg   esp,eax
  513ed7:	push   eax
  513ed8:	mov    al,BYTE PTR [eax+edi*1]
  513edb:	aas    
  513edc:	or     bl,ch
  513ede:	and    bh,BYTE PTR [edi+eax*4+0x57e5b30]
  513ee5:	xchg   ebp,eax
  513ee6:	popa   
  513ee7:	jge    0x513f13
  513ee9:	push   0xdb7f5e75
  513eee:	retf   
  513eef:	ja     0x513ed5
  513ef1:	hlt    
  513ef2:	sbb    bl,ch
  513ef4:	shl    BYTE PTR [edi-0x22],0xe6
  513ef8:	(bad)  
  513ef9:	pop    edx
  513efa:	aam    0xab
  513efc:	push   ds
  513efd:	inc    esi
  513efe:	gs (bad) 
  513f00:	idiv   dl
  513f02:	fadd   st,st(1)
  513f04:	xor    eax,0x2f2cf032
  513f09:	add    DWORD PTR [ebx],ebx
  513f0b:	pop    esi
  513f0c:	jne    0x513ea4
  513f0e:	xchg   BYTE PTR [eax],ah
  513f10:	daa    
  513f11:	cmc    
  513f12:	mov    ch,0xd5
  513f14:	setg   BYTE PTR [esi-0x5e]
  513f18:	or     edi,DWORD PTR [ebp+ebp*4-0x2783e5db]
  513f1f:	scas   al,BYTE PTR es:[edi]
  513f20:	pop    ds
  513f21:	adc    al,0xb1
  513f23:	inc    esi
  513f24:	fidiv  WORD PTR [eax]
  513f26:	push   edx
  513f27:	pop    esp
  513f28:	jae    0x513eb1
  513f2a:	dec    ebp
  513f2b:	jmp    FWORD PTR [esi]
  513f2d:	mov    esp,0x92f25d47
  513f32:	(bad)  
  513f33:	cld    
  513f34:	(bad)  
  513f35:	(bad)  
  513f37:	repnz inc eax
  513f39:	in     eax,0x2
  513f3b:	(bad)
  513f3e:	adc    eax,0x5cb8069f
  513f43:	je     0x513f18
  513f45:	pop    esp
  513f46:	and    dl,ch
  513f48:	xor    DWORD PTR [edx],esi
  513f4a:	rol    BYTE PTR [edi-0x2d18252e],1
  513f50:	loope  0x513f46
  513f52:	in     al,dx
  513f53:	and    BYTE PTR [edi],cl
  513f55:	push   ebx
  513f56:	lds    ebp,FWORD PTR [edx+0x6c63b89b]
  513f5c:	(bad)  
  513f5d:	and    bl,BYTE PTR [edx+0x42]
  513f60:	outs   dx,BYTE PTR ds:[esi]
  513f61:	xlat   BYTE PTR ds:[ebx]
  513f62:	fisub  WORD PTR [edx]
  513f64:	cwde   
  513f65:	ins    BYTE PTR es:[edi],dx
  513f66:	test   DWORD PTR [ebx-0x62],ecx
  513f69:	bound  edx,QWORD PTR [ecx]
  513f6b:	sbb    ch,BYTE PTR [eax-0x39f68316]
  513f71:	lock add BYTE PTR [ecx-0x56],dl
  513f75:	retf   
  513f76:	xor    al,al
  513f78:	imul   esi,DWORD PTR ds:0x81355f18,0x3e
  513f7f:	add    al,0xae
  513f81:	dec    eax
  513f82:	sub    eax,0xd4fec474
  513f87:	cld    
  513f88:	in     eax,dx
  513f89:	sti    
  513f8a:	mov    ss:0x52bdd477,eax
  513f90:	cmp    ebx,DWORD PTR [esi+0x7a]
  513f93:	int3   
  513f94:	ins    BYTE PTR es:[edi],dx
  513f95:	adc    ebp,ecx
  513f97:	test   BYTE PTR [edi-0x47],bl
  513f9a:	enter  0x4d60,0x70
  513f9e:	push   edx
  513f9f:	stc    
  513fa0:	iret   
  513fa1:	repz cmp DWORD PTR [eax+eax*8+0x32],0xffffffa6
  513fa7:	adc    esi,DWORD PTR [eax]
  513fa9:	adc    BYTE PTR [esi-0x6d869341],al
  513faf:	dec    ebp
  513fb0:	imul   edi,DWORD PTR [ebp+ebx*2+0x76],0x9c3a5d23
  513fb8:	test   eax,0x2aad5f7c
  513fbd:	add    DWORD PTR [esi],esi
  513fbf:	dec    esp
  513fc0:	pop    edx
  513fc1:	rcr    BYTE PTR [ecx],1
  513fc3:	mov    ebx,0xb3f1fb41
  513fc8:	inc    esi
  513fc9:	adc    al,bl
  513fcb:	add    ebx,DWORD PTR ds:[ecx]
  513fce:	jnp    0x514031
  513fd0:	dec    ecx
  513fd1:	xor    ch,cl
  513fd3:	cwde   
  513fd4:	and    cl,bh
  513fd6:	pop    edi
  513fd7:	cld    
  513fd8:	mov    esp,0xc877ae79
  513fdd:	pushf  
  513fde:	jbe    0x51403e
  513fe0:	and    BYTE PTR [esi-0x67],0x34
  513fe4:	push   esp
  513fe5:	outs   dx,DWORD PTR ds:[esi]
  513fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  513fe7:	or     esi,DWORD PTR [edi]
  513fe9:	(bad)  
  513fea:	daa    
  513feb:	fcom   DWORD PTR [edi-0x4f55a80e]
  513ff1:	repz leave 
  513ff3:	sub    DWORD PTR [esi-0x7a69834d],0x66
  513ffa:	lock xlat BYTE PTR ds:[ebx]
  513ffc:	dec    edx
  513ffd:	popa   
  513ffe:	sub    DWORD PTR [edi+0x24],ecx
  514001:	icebp  
  514002:	aas    
  514003:	push   edx
  514004:	(bad)  
  514005:	and    al,0x30
  514007:	out    dx,eax
  514008:	les    esp,FWORD PTR [ebx-0x1c]
  51400b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51400c:	cld    
  51400d:	imul   esi,DWORD PTR [esi-0x72dfe5f9],0x3
  514014:	clc    
  514015:	out    0x4e,al
  514017:	inc    edi
  514018:	ret    0xab1d
  51401b:	(bad)  
  51401c:	push   edx
  51401d:	add    edi,edx
  51401f:	xor    al,0x24
  514021:	and    eax,0x6a517ad0
  514026:	jnp    0x514062
  514028:	and    eax,0xbfbf7367
  51402d:	dec    eax
  51402e:	dec    eax
  51402f:	sub    DWORD PTR [edx+0x27e164de],ebx
  514035:	sti    
  514036:	std    
  514037:	sbb    ebp,DWORD PTR [eax-0x42]
  51403a:	or     eax,0xd1b80ec1
  51403f:	push   0xffffffbe
  514041:	out    0x9d,al
  514043:	or     al,0x86
  514045:	mov    esp,ecx
  514047:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514048:	xor    eax,0x646fd990
  51404d:	ror    ch,1
  51404f:	pop    ebx
  514050:	out    dx,al
  514051:	sub    BYTE PTR [edx],0x25
  514054:	int    0x67
  514056:	adc    ecx,esi
  514058:	adc    edi,ebx
  51405a:	sub    ah,BYTE PTR ds:0x9065544b
  514060:	loop   0x51401b
  514062:	sub    eax,DWORD PTR [edx]
  514064:	adc    dh,BYTE PTR [eax-0x7ae1aedc]
  51406a:	jge    0x51402d
  51406c:	mov    ah,0x3a
  51406e:	(bad)  
  51406f:	gs and esp,eax
  514072:	dec    esi
  514073:	cmp    al,BYTE PTR [ebx+0x17]
  514076:	xchg   edi,eax
  514077:	cs adc edx,0xe2c34375
  51407e:	adc    bh,bh
  514080:	ret    0xe041
  514083:	cmp    ecx,DWORD PTR [ebx+0x3296cbb]
  514089:	sar    esi,1
  51408b:	push   esi
  51408c:	sbb    eax,0xa6b26fa9
  514091:	ins    DWORD PTR es:[edi],dx
  514092:	je     0x514019
  514094:	sub    al,0xbd
  514096:	cmp    ch,BYTE PTR ds:0x12f28872
  51409c:	dec    edx
  51409d:	sbb    eax,0x63653765
  5140a2:	jmp    0xf37d:0xd048146a
  5140a9:	mov    dh,0x71
  5140ab:	sub    DWORD PTR ds:0x53d627b,ebp
  5140b1:	pop    esi
  5140b2:	stc    
  5140b3:	mov    es,WORD PTR [ecx]
  5140b5:	adc    DWORD PTR gs:[edx+0x35b25186],ecx
  5140bc:	adc    DWORD PTR [esp+edi*8+0xa2b1067],eax
  5140c3:	jb     0x5140bb
  5140c5:	out    dx,eax
  5140c6:	das    
  5140c7:	imul   ecx,DWORD PTR [edi],0xc96eb0f2
  5140cd:	out    dx,eax
  5140ce:	xchg   edi,eax
  5140cf:	das    
  5140d0:	cli    
  5140d1:	jbe    0x514109
  5140d3:	nop
  5140d4:	dec    esp
  5140d5:	xor    BYTE PTR [edx],0x3f
  5140d8:	mov    ebp,0xadc21b04
  5140dd:	loope  0x514089
  5140df:	jge    0x514079
  5140e1:	xor    al,0xeb
  5140e3:	push   ebp
  5140e4:	mov    edi,0x710b5346
  5140e9:	neg    cl
  5140eb:	xchg   ecx,eax
  5140ec:	js     0x5140e0
  5140ee:	js     0x5140f8
  5140f0:	fdivr  QWORD PTR [edx]
  5140f2:	fistp  WORD PTR [edx-0xddde206]
  5140f8:	dec    esp
  5140f9:	pop    ss
  5140fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5140fb:	shl    DWORD PTR [edi],cl
  5140fd:	sub    cl,BYTE PTR [ecx+0x30]
  514100:	push   cs
  514101:	mov    bh,0xa4
  514103:	rol    BYTE PTR [edx+0xd],1
  514106:	xchg   ecx,eax
  514107:	add    edi,DWORD PTR [eax]
  514109:	shr    BYTE PTR [eax],1
  51410b:	popa   
  51410c:	retf   
  51410d:	es jle 0x5140b8
  514110:	and    dl,bl
  514112:	call   0xfff0:0xb6009584
  514119:	loop   0x51419a
  51411b:	push   ecx
  51411c:	imul   esi,DWORD PTR [edx-0x2cf3cdd],0x36
  514123:	push   ecx
  514124:	mov    dh,0x63
  514126:	pop    es
  514127:	xor    al,0xee
  514129:	mov    WORD PTR [esp+edi*1-0x76],?
  51412d:	push   cs
  51412e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51412f:	lods   eax,DWORD PTR ds:[esi]
  514130:	outs   dx,DWORD PTR ds:[esi]
  514131:	addr16 hlt 
  514133:	xor    dl,ah
  514135:	(bad)  
  514136:	jns    0x514100
  514138:	jne    0x514153
  51413a:	fcmovbe st,st(6)
  51413c:	mov    bh,0xe5
  51413e:	mov    cl,BYTE PTR [esi+0x7]
  514141:	xchg   ebp,eax
  514142:	adc    al,0x24
  514144:	sbb    eax,0x2b95b69b
  514149:	out    dx,al
  51414a:	ror    BYTE PTR [ebx+0x65],1
  51414d:	repz xor esi,DWORD PTR [ecx]
  514150:	xchg   ecx,eax
  514151:	cmp    BYTE PTR [esi+0x4a],dl
  514154:	push   ss
  514155:	dec    eax
  514156:	in     al,0xe9
  514158:	ret    
  514159:	pop    ds
  51415a:	xchg   BYTE PTR ds:0x13280645,ah
  514160:	sub    eax,0xee57a3f6
  514165:	cmp    ch,bl
  514167:	in     al,dx
  514168:	push   es
  514169:	(bad)  
  51416a:	inc    ecx
  51416b:	leave  
  51416c:	adc    cl,BYTE PTR [ebx-0x2323c0e7]
  514172:	mov    DWORD PTR [ecx],edx
  514174:	push   0x55
  514176:	repz jmp 0x5140ff
  514179:	xor    ebx,DWORD PTR [ebx+0x70c7d699]
  51417f:	loopne 0x514155
  514181:	and    ebp,ecx
  514183:	rcl    DWORD PTR [edx+0x2f427378],cl
  514189:	xlat   BYTE PTR ds:[ebx]
  51418a:	das    
  51418b:	(bad)  
  51418c:	jle    0x5141b3
  51418e:	adc    cl,BYTE PTR [edx+0x10]
  514191:	xor    al,0xbd
  514193:	(bad)
  514197:	xchg   esp,eax
  514198:	inc    esi
  514199:	mov    edx,0xcc335bb8
  51419e:	mov    ?,WORD PTR [esi+0x2e]
  5141a1:	dec    ebx
  5141a2:	fist   DWORD PTR [ebp+0x58]
  5141a5:	data16 (bad) 
  5141a7:	fnstenv [ebx]
  5141a9:	xchg   esp,eax
  5141aa:	dec    esi
  5141ab:	jge    0x5141c3
  5141ad:	repnz test al,0x88
  5141b0:	pop    esp
  5141b1:	int    0x82
  5141b3:	xchg   edi,eax
  5141b4:	hlt    
  5141b5:	loopne 0x5141b1
  5141b7:	push   esi
  5141b8:	sbb    dl,ch
  5141ba:	and    dh,bh
  5141bc:	and    DWORD PTR [esi+0x42],0x59dfbe62
  5141c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5141c4:	add    BYTE PTR [esi+0x45],dl
  5141c7:	push   ecx
  5141c8:	scas   eax,DWORD PTR es:[edi]
  5141c9:	sbb    eax,0x61125fb6
  5141ce:	push   cs
  5141cf:	stc    
  5141d0:	outs   dx,BYTE PTR ds:[esi]
  5141d1:	mov    edx,0xbc00f578
  5141d6:	or     bl,BYTE PTR [ebx]
  5141d8:	jl     0x514229
  5141da:	pop    edi
  5141db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5141dc:	jecxz  0x5141fb
  5141de:	loope  0x514161
  5141e0:	js     0x51423f
  5141e2:	pminub mm7,QWORD PTR [ebx-0x73]
  5141e6:	or     dh,BYTE PTR [edi-0x17]
  5141e9:	aas    
  5141ea:	les    edi,FWORD PTR [esp+edi*4]
  5141ed:	or     BYTE PTR [edx],dl
  5141ef:	or     eax,DWORD PTR [ebx]
  5141f1:	rol    BYTE PTR [ebx-0x47293d12],0xf1
  5141f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5141f9:	(bad)  
  5141fa:	ftst   
  5141fc:	ret    
  5141fd:	das    
  5141fe:	cli    
  5141ff:	xchg   esp,eax
  514200:	sub    dh,dh
  514202:	ror    edx,cl
  514204:	lahf   
  514205:	xlat   BYTE PTR ds:[ebx]
  514206:	imul   ebp,DWORD PTR [ebx],0xffffffd6
  514209:	es cwde 
  51420b:	(bad)
  51420f:	sub    BYTE PTR [ebp+edx*2-0x61],dh
  514213:	fist   WORD PTR [edx+edx*4+0x5f]
  514217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514218:	daa    
  514219:	lods   eax,DWORD PTR ds:[esi]
  51421a:	fistp  QWORD PTR [edx]
  51421c:	sub    BYTE PTR [ebx+0x2a4b2041],ch
  514222:	xor    eax,0xfab9919d
  514227:	push   es
  514228:	(bad)  
  514229:	or     edx,DWORD PTR [edx]
  51422b:	(bad)  
  51422c:	xchg   ecx,eax
  51422d:	test   esp,ecx
  51422f:	dec    ebx
  514230:	dec    edx
  514231:	sar    ah,0x7b
  514234:	sbb    DWORD PTR [ebx],0xffffffee
  514237:	sub    BYTE PTR [edx-0xa],dl
  51423a:	mov    dh,dl
  51423c:	out    dx,al
  51423d:	mov    eax,0xf5265c06
  514242:	and    ebp,ebx
  514244:	outs   dx,BYTE PTR ds:[esi]
  514245:	jmp    0x514225
  514247:	mov    WORD PTR [esp+esi*4+0xf],?
  51424b:	add    edi,DWORD PTR [esi]
  51424d:	sub    dh,BYTE PTR [di]
  514250:	inc    ebx
  514251:	ja     0x514211
  514253:	popa   
  514254:	in     eax,0xa
  514256:	jmp    DWORD PTR [eax-0x2e]
  514259:	push   eax
  51425a:	stos   BYTE PTR es:[edi],al
  51425b:	mov    DWORD PTR [ebp-0x78],edx
  51425e:	in     al,dx
  51425f:	push   esp
  514260:	lods   eax,DWORD PTR ds:[esi]
  514261:	leave  
  514262:	addr16 mov dl,0x89
  514265:	call   0x443c8a37
  51426a:	inc    ebp
  51426b:	xor    al,0x6f
  51426d:	sbb    al,0xa9
  51426f:	sub    al,0x5e
  514271:	sbb    bl,BYTE PTR [eax]
  514273:	imul   edi,edx,0xf1713f24
  514279:	cwde   
  51427a:	and    DWORD PTR [edx+ecx*2+0x1e4b3d11],0x6b11a2c4
  514285:	arpl   dx,bx
  514287:	jecxz  0x514275
  514289:	and    al,0x1
  51428b:	sbb    al,0xfb
  51428e:	mov    ecx,0x56131687
  514293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514294:	lahf   
  514295:	ins    DWORD PTR es:[edi],dx
  514296:	repz and ch,BYTE PTR [esi-0x161f602f]
  51429d:	mov    edi,0xfcc4ddef
  5142a2:	inc    ecx
  5142a3:	mov    al,0xdd
  5142a5:	cli    
  5142a6:	fcomp  QWORD PTR [edx+0x759b81da]
  5142ac:	push   ss
  5142ad:	loopne 0x5142b3
  5142af:	es popa 
  5142b1:	xlat   BYTE PTR ds:[ebx]
  5142b2:	sbb    DWORD PTR ds:0x6d852e90,ecx
  5142b8:	mov    ah,0xf6
  5142ba:	fld    DWORD PTR [eax]
  5142bc:	dec    ebp
  5142bd:	and    DWORD PTR [ebp-0x3f],edx
  5142c0:	or     al,bl
  5142c2:	mov    edi,DWORD PTR [eax-0x46af1a04]
  5142c8:	cmp    al,0xe2
  5142ca:	out    0x89,eax
  5142cc:	mov    esp,0xb14287a4
  5142d1:	sbb    al,0x6
  5142d3:	test   BYTE PTR [esi-0x44],al
  5142d6:	jp     0x514272
  5142d8:	(bad)  
  5142d9:	mov    ebp,0xcd4aba0f
  5142de:	(bad)  
  5142df:	push   edi
  5142e0:	test   edi,ebx
  5142e2:	int    0xcf
  5142e4:	icebp  
  5142e5:	aam    0xfd
  5142e7:	in     eax,0xd4
  5142e9:	xor    ch,BYTE PTR [eax+ebp*2+0x4778b9]
  5142f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5142f1:	(bad)  [edx-0x67]
  5142f4:	pop    edi
  5142f5:	hlt    
  5142f6:	adc    DWORD PTR [ecx+0x14f8fdf6],ebx
  5142fc:	or     DWORD PTR [eax+esi*1-0x215da609],esi
  514303:	aad    0x7
  514305:	xchg   edi,eax
  514306:	push   eax
  514307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514308:	push   edx
  514309:	jle    0x5142ce
  51430b:	push   eax
  51430c:	lds    esp,FWORD PTR ds:0x99ccfd82
  514312:	div    BYTE PTR [edi-0x5bbe3ba7]
  514318:	dec    esi
  514319:	or     BYTE PTR es:[esi*1-0x5be851ab],bh
  514321:	sti    
  514322:	mov    ss,WORD PTR gs:[esi]
  514325:	jae    0x5142fd
  514327:	test   BYTE PTR [eax+0x6c6878df],dl
  51432d:	repz iret 
  51432f:	pushf  
  514330:	jg     0x514314
  514332:	cmp    DWORD PTR [ebp-0x132f7152],edi
  514338:	sar    esi,cl
  51433a:	mov    ebx,0xfb1f1a8
  51433f:	or     al,0xe3
  514341:	and    BYTE PTR [esi+0x1cf94ba1],bl
  514347:	sbb    esi,DWORD PTR [eax+0x143e6ab0]
  51434d:	int3   
  51434e:	and    al,0x6c
  514350:	cmp    BYTE PTR [edx],ah
  514352:	mov    dh,0x98
  514354:	mov    eax,0xcdca78a4
  514359:	pushf  
  51435a:	inc    esp
  51435b:	loope  0x51437c
  51435d:	lea    ebp,[edi-0x79]
  514360:	add    edi,0x67a32e0a
  514366:	jmp    0x531e:0xc89c2db2
  51436d:	call   0xb2843798
  514372:	xor    bh,BYTE PTR ds:0x1fbb3a16
  514378:	push   es
  514379:	mov    ecx,0xa71ac9a9
  51437e:	std    
  51437f:	pushf  
  514380:	or     al,0x71
  514382:	mov    dh,ah
  514384:	jno    0x5143e7
  514386:	loop   0x514370
  514388:	loope  0x5143ae
  51438a:	adc    esp,DWORD PTR [esi]
  51438c:	sbb    BYTE PTR ds:0x58840eee,dh
  514392:	dec    edi
  514393:	icebp  
  514394:	jg     0x5143b8
  514396:	pop    esp
  514397:	and    DWORD PTR [eax-0x42df641f],eax
  51439d:	sbb    DWORD PTR [edx-0x4c7be14f],ebp
  5143a3:	or     esi,DWORD PTR [si-0x1bbb]
  5143a8:	and    dh,BYTE PTR [ebx]
  5143aa:	push   edi
  5143ab:	mov    ebx,0xfbd9557c
  5143b0:	sbb    BYTE PTR [ecx],bh
  5143b2:	stos   DWORD PTR es:[edi],eax
  5143b3:	sbb    eax,0xa7e1a780
  5143b8:	stos   BYTE PTR es:[edi],al
  5143b9:	cmp    BYTE PTR [ebp+0x29],ch
  5143bc:	mov    eax,0x2c59816e
  5143c1:	or     dh,BYTE PTR [ecx]
  5143c3:	sub    BYTE PTR [ecx+0x4f3831dd],dl
  5143c9:	(bad)  
  5143cb:	ja     0x5143df
  5143cd:	push   ebx
  5143ce:	stos   BYTE PTR es:[edi],al
  5143cf:	sbb    eax,0x62
  5143d2:	sbb    ah,cl
  5143d4:	push   ds
  5143d5:	lds    esp,FWORD PTR [ebp+0x19]
  5143d8:	ja     0x514365
  5143da:	in     al,dx
  5143db:	aad    0xe9
  5143dd:	sar    BYTE PTR [ecx],0x96
  5143e0:	scas   eax,DWORD PTR es:[edi]
  5143e1:	dec    esi
  5143e2:	mov    ebp,0x3513c3f5
  5143e7:	popf   
  5143e8:	pop    ebx
  5143e9:	xor    bl,bh
  5143eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5143ec:	fwait
  5143ed:	mov    dl,0x41
  5143ef:	jns    0x514395
  5143f1:	repnz and eax,DWORD PTR [edi+0x4]
  5143f5:	in     al,0x54
  5143f7:	test   BYTE PTR [edx+0x65],dl
  5143fa:	popa   
  5143fb:	jbe    0x51438e
  5143fd:	scas   al,BYTE PTR es:[edi]
  5143fe:	mov    al,0x4
  514400:	inc    ecx
  514401:	out    0x77,eax
  514403:	xchg   ebx,eax
  514404:	mov    ebx,DWORD PTR [ebp-0xa155bf3]
  51440a:	out    dx,al
  51440b:	inc    ebx
  51440c:	push   ebp
  51440d:	ficom  WORD PTR [ebx+ebp*1+0x6b]
  514411:	lahf   
  514412:	add    DWORD PTR [eax+0x6d2cc3b6],edx
  514418:	and    BYTE PTR cs:[edi-0x26348ea4],ah
  51441f:	(bad)
  514422:	data16 mov dl,0x5e
  514425:	imul   ebp,ebp,0x78
  514428:	dec    eax
  514429:	cmp    al,0xef
  51442b:	out    dx,eax
  51442c:	push   cs
  51442d:	push   edi
  51442e:	fadd   QWORD PTR [ecx]
  514430:	cld    
  514431:	sahf   
  514432:	imul   edi,DWORD PTR [eax],0xd788560c
  514438:	xor    ah,BYTE PTR [ebp+0x2917c96f]
  51443e:	inc    ecx
  51443f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514440:	push   es
  514441:	out    dx,eax
  514442:	mov    eax,0xe971af1
  514447:	je     0x5143cd
  514449:	ds cmp eax,0xabc030aa
  51444f:	leave  
  514450:	push   cs
  514451:	(bad)  
  514452:	hlt    
  514453:	mov    edi,0x78f23ba7
  514458:	stc    
  514459:	data16 rol BYTE PTR [ecx],cl
  51445c:	std    
  51445d:	xor    al,0xaa
  51445f:	push   0xd5a20746
  514464:	fimul  WORD PTR [esi+0xa]
  514467:	out    0x90,al
  514469:	or     al,0x8a
  51446c:	sbb    edx,esi
  51446e:	mov    dl,0xa7
  514470:	in     eax,0x2c
  514472:	dec    ebp
  514473:	in     eax,0xc6
  514475:	mov    cl,0xbb
  514477:	cmp    eax,DWORD PTR ds:0xfc14a84c
  51447d:	adc    DWORD PTR [edi+0x6a6947b0],0x75
  514484:	(bad)  
  514485:	jg     0x51441a
  514487:	mov    ecx,0x70f78ee0
  51448c:	sti    
  51448d:	jp     0x51449d
  51448f:	fldcw  WORD PTR [esi-0x18e519c2]
  514495:	js     0x514471
  514497:	test   DWORD PTR [edx-0x65],ebp
  51449a:	stos   DWORD PTR es:[edi],eax
  51449b:	xchg   ebp,eax
  51449c:	mov    esi,0x10e05b6
  5144a1:	mov    ecx,0x95d9f346
  5144a6:	call   0xa302fc63
  5144ab:	jns    0x514501
  5144ad:	mov    WORD PTR [edi+0x6f],?
  5144b0:	cld    
  5144b1:	ds lock push 0x1fe0f785
  5144b8:	push   cs
  5144b9:	rol    BYTE PTR [esi-0x7c],0x3
  5144bd:	push   ecx
  5144be:	mov    eax,ss
  5144c0:	pop    edx
  5144c1:	xchg   esp,eax
  5144c2:	and    dl,0xe2
  5144c5:	push   0xffffffbf
  5144c7:	ins    DWORD PTR es:[edi],dx
  5144c8:	fsub   st(5),st
  5144ca:	clc    
  5144cb:	imul   edi,DWORD PTR [ebp+0x374b058],0xffffffa2
  5144d2:	nop
  5144d3:	push   edx
  5144d4:	adc    DWORD PTR [edi+0x68],esp
  5144d7:	sbb    BYTE PTR [ebx+0x21d2c48d],ch
  5144dd:	push   0xffffffe6
  5144df:	push   ss
  5144e0:	mov    al,0x31
  5144e2:	js     0x514545
  5144e4:	arpl   WORD PTR [ebp-0x5f],dx
  5144e7:	mov    ebp,0x3e1ae93d
  5144ec:	cmc    
  5144ed:	jae    0x514471
  5144ef:	jno    0x24aa7716
  5144f5:	out    dx,eax
  5144f6:	scas   al,BYTE PTR es:[edi]
  5144f7:	sub    al,0x5a
  5144f9:	sbb    DWORD PTR [esi+0x53f53c8f],edx
  5144ff:	sub    al,0xa5
  514501:	sti    
  514502:	sub    BYTE PTR [esi],dl
  514504:	out    0xc6,al
  514506:	fwait
  514507:	push   es
  514508:	enter  0x3ce8,0xaa
  51450c:	ja     0x514584
  51450e:	dec    ebx
  51450f:	xchg   edx,eax
  514510:	and    bh,cl
  514512:	push   edx
  514513:	sbb    cl,BYTE PTR [ebp-0x61ff25bc]
  514519:	pop    es
  51451a:	push   0x5cced87d
  51451f:	sbb    al,0xaa
  514521:	xchg   ecx,eax
  514522:	das    
  514523:	fisttp WORD PTR [esi+0x1d]
  514526:	add    ebx,DWORD PTR [ebx-0xc5c1a96]
  51452c:	sub    esp,esp
  51452e:	int3   
  51452f:	push   ebx
  514530:	fistp  QWORD PTR [edi]
  514532:	imul   ebp,DWORD PTR [esp+edi*1-0x37],0x1e
  514537:	icebp  
  514538:	mov    edx,DWORD PTR fs:[edx]
  51453b:	adc    esi,ebp
  51453d:	(bad)  
  51453e:	mov    dl,0x0
  514540:	xchg   edx,eax
  514541:	jecxz  0x5144dc
  514543:	test   eax,0x24038bcb
  514548:	pop    ss
  514549:	sub    DWORD PTR [eax-0x64c8964c],ecx
  51454f:	sbb    bl,dh
  514551:	jne    0x51456f
  514553:	aaa    
  514554:	pop    ebx
  514555:	xchg   edx,eax
  514556:	cmp    BYTE PTR [ebx-0x41bbb0d4],bh
  51455c:	cmp    dh,BYTE PTR [esi+0x64929130]
  514562:	in     eax,0xbc
  514564:	mul    DWORD PTR [edx]
  514566:	sbb    ch,BYTE PTR [ebp-0x57ec8319]
  51456c:	jmp    0x5145b3
  51456e:	jns    0x514553
  514570:	dec    ecx
  514571:	add    al,0xf4
  514573:	push   es
  514574:	daa    
  514575:	scas   eax,DWORD PTR es:[edi]
  514576:	sub    eax,0x33d48b18
  51457b:	ins    BYTE PTR es:[edi],dx
  51457c:	(bad)  
  51457d:	rcl    DWORD PTR [ebp-0x3b],cl
  514580:	push   ecx
  514581:	and    eax,0x87bd4e
  514586:	ins    BYTE PTR es:[edi],dx
  514587:	out    dx,eax
  514588:	jb     0x5145a7
  51458a:	mov    eax,ds:0x98acdf5c
  51458f:	pop    eax
  514590:	dec    edx
  514591:	lock div edx
  514594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  514595:	fistp  QWORD PTR [ecx]
  514597:	or     edx,DWORD PTR [edx]
  514599:	sbb    BYTE PTR [edi+0x15],0x50
  51459d:	neg    DWORD PTR [edx+ebp*1-0x21]
  5145a1:	push   ss
  5145a2:	popf   
  5145a3:	mov    cl,0xa7
  5145a5:	gs retf 0x6d6c
  5145a9:	loopne 0x514603
  5145ab:	fidiv  DWORD PTR es:[edx-0x3b2fcb46]
  5145b2:	jb     0x514557
  5145b4:	cmp    edi,eax
  5145b6:	dec    ebp
  5145b7:	inc    esi
  5145b8:	jae    0x51461c
  5145ba:	push   esi
  5145bb:	pushf  
  5145bc:	and    al,0x70
  5145be:	ds pusha 
  5145c0:	stc    
  5145c1:	test   al,0xe1
  5145c3:	push   0x39ecc8af
  5145c8:	js     0x514614
  5145ca:	mov    edi,0xdb04c834
  5145cf:	loopne 0x514570
  5145d1:	mov    dl,0x3
  5145d3:	jne    0x5145e0
  5145d5:	std    
  5145d6:	inc    esi
  5145d7:	sbb    edi,DWORD PTR [edx+eax*8+0x4f8960c6]
  5145de:	imul   esi,DWORD PTR [edx+0xb3e793f],0xacbcc9d8
  5145e8:	xchg   ebx,eax
  5145e9:	outs   dx,DWORD PTR ds:[esi]
  5145ea:	(bad)  
  5145eb:	dec    eax
  5145ec:	out    0xb3,eax
  5145ee:	stos   BYTE PTR es:[edi],al
  5145ef:	jecxz  0x5145bf
  5145f1:	sbb    ebx,ebp
  5145f3:	scas   eax,DWORD PTR es:[edi]
  5145f4:	inc    ecx
  5145f5:	(bad)  
  5145f6:	outs   dx,DWORD PTR ds:[esi]
  5145f8:	xchg   ebp,eax
  5145f9:	adc    edi,DWORD PTR [edx]
  5145fb:	mov    ah,0x99
  5145fd:	xchg   esi,eax
  5145fe:	lods   al,BYTE PTR ds:[esi]
  5145ff:	popa   
  514600:	inc    eax
  514601:	and    al,0xb4
  514603:	ja     0x5145d9
  514605:	or     ah,BYTE PTR [ebx]
  514607:	and    dh,cl
  514609:	rol    BYTE PTR [eax+ecx*1+0x5e8adcd7],0x1a
  514611:	clc    
  514612:	pop    ebp
  514613:	fcomp  QWORD PTR [esi]
  514615:	pop    edx
  514616:	stc    
  514617:	ret    
  514618:	cld    
  514619:	sub    eax,0x91fc8505
  51461e:	mov    bh,0x57
  514620:	mov    WORD PTR [esi+0x55],?
  514623:	xor    DWORD PTR [edx-0x22b63be2],0x96eb5c2
  51462d:	add    DWORD PTR [edx-0x5337bf1c],ebp
  514633:	or     eax,0x5aa75f1d
  514638:	add    DWORD PTR [edx],esi
  51463a:	cmp    dl,ch
  51463c:	dec    esi
  51463d:	mov    esp,0x83803a07
  514642:	fstp   TBYTE PTR [edx+0x63]
  514645:	jno    0x514617
  514647:	btc    ebp,ebp
  51464a:	push   0x47
  51464c:	mov    al,0xbd
  51464e:	dec    ebp
  51464f:	inc    edx
  514650:	out    dx,al
  514651:	push   ecx
  514652:	ret    
  514653:	popa   
  514654:	out    0xba,eax
  514656:	pop    ecx
  514657:	retf   
  514658:	mov    ah,0xf
  51465a:	leave  
  51465b:	pop    esi
  51465c:	mov    bh,0x4d
  51465e:	sbb    al,0x33
  514660:	ret    
  514661:	ret    
  514662:	arpl   WORD PTR [eax-0x7b7acada],sp
  514668:	xchg   esp,eax
  514669:	jp     0x514667
  51466b:	stos   BYTE PTR es:[edi],al
  51466c:	sub    edx,DWORD PTR [edx]
  51466e:	push   0x32
  514670:	test   DWORD PTR [ecx+0x59e9d368],ebx
  514676:	out    dx,eax
  514677:	mov    al,0xdb
  514679:	fs loopne 0x514616
  51467c:	inc    ebp
  51467d:	(bad)  
  51467e:	mov    dh,0x5f
  514680:	cmp    ch,BYTE PTR [esi+eax*1+0xedb28e0]
  514687:	nop
  514688:	cmp    eax,0x608b4966
  51468d:	mov    dl,0x40
  51468f:	mov    bh,0xf1
  514691:	test   DWORD PTR [eax],0xea8b5ecc
  514697:	out    0xc6,al
  514699:	ficom  DWORD PTR [edi+0x5d]
  51469c:	call   0xd07c:0xea24b19
  5146a3:	pusha  
  5146a4:	mov    eax,ds:0x2bc952a
  5146a9:	sub    al,0x30
  5146ab:	cld    
  5146ac:	popf   
  5146ad:	bound  ebx,QWORD PTR [esi+ecx*1-0x67428768]
  5146b4:	jno    0x5146dd
  5146b6:	lock push cs
  5146b8:	iret   
  5146b9:	pop    ds
  5146ba:	ins    BYTE PTR es:[edi],dx
  5146bb:	out    dx,eax
  5146bc:	(bad)  
  5146be:	mov    ah,0x82
  5146c0:	sbb    DWORD PTR [ecx],eax
  5146c2:	(bad)  
  5146c4:	or     ch,al
  5146c6:	imul   esi,DWORD PTR [ebp-0x11cca4c2],0xcd67fd8f
  5146d0:	dec    edx
  5146d1:	es popf 
  5146d3:	jae    0x5146d1
  5146d5:	pop    edx
  5146d6:	je     0x514699
  5146d8:	cmp    DWORD PTR [edi-0x13e3f87a],0x9cd96279
  5146e2:	add    bh,ch
  5146e4:	mov    cl,0xb5
  5146e6:	mov    ebx,0x3c4643f7
  5146eb:	mov    dl,0xe6
  5146ed:	pop    es
  5146ee:	int3   
  5146ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5146f0:	dec    eax
  5146f1:	fcom   st(7)
  5146f3:	xchg   esi,eax
  5146f4:	mov    edi,0x3a2ce1c4
  5146f9:	push   esp
  5146fa:	adc    ebp,esi
  5146fc:	mov    bl,0x93
  5146fe:	dec    edi
  5146ff:	popf   
  514700:	div    BYTE PTR [edx-0x19fc65b5]
  514706:	xor    ah,BYTE PTR [ecx]
  514708:	and    eax,0xd2d73670
  51470d:	js     0x5146ea
  51470f:	cmp    eax,DWORD PTR ds:0x7621e1db
  514715:	outs   dx,BYTE PTR ds:[esi]
  514716:	pop    eax
  514717:	mov    edi,0xf29576a5
  51471c:	cmp    BYTE PTR [ebx-0x55db018c],ah
  514722:	mov    dl,0xa9
  514724:	xor    eax,0x57d1fc55
  514729:	test   al,0xc3
  51472b:	and    eax,0x6f54149b
  514730:	dec    ebx
  514731:	mov    al,ds:0xa547be69
  514736:	retf   
  514737:	fnstcw WORD PTR [edi+0x37]
  51473a:	outs   dx,BYTE PTR ds:[esi]
  51473b:	cmc    
  51473c:	or     DWORD PTR [ebx],edi
  51473e:	mov    ah,0x34
  514740:	push   ebp
  514741:	repnz mov fs,WORD PTR es:[eax+0x2c]
  514746:	das    
  514747:	jns    0x5147bf
  514749:	mov    ebx,ebx
  51474b:	cmp    bh,BYTE PTR [edi+0x6c411dda]
  514751:	dec    ebx
  514752:	sbb    ecx,eax
  514754:	lods   al,BYTE PTR ds:[esi]
  514755:	xor    dh,BYTE PTR [ebx]
  514757:	sahf   
  514758:	sbb    cl,BYTE PTR [ebp+0x54ed83aa]
  51475e:	push   eax
  51475f:	das    
  514760:	ror    BYTE PTR [ebx+0x4be068ea],0x46
  514767:	loop   0x51479f
  514769:	aad    0xa0
  51476b:	(bad)  
  51476c:	cmp    eax,0x444abeab
  514771:	push   ecx
  514772:	je     0x51474e
  514774:	cmp    dl,al
  514776:	pop    edx
  514777:	sub    ebp,DWORD PTR [ebx-0x18]
  51477a:	sbb    esp,0xffffff9f
  51477d:	cld    
  51477e:	jecxz  0x514708
  514780:	out    0xcb,eax
  514782:	jb     0x51474b
  514784:	sub    eax,0x1c054cd5
  514789:	inc    esi
  51478a:	stc    
  51478b:	pop    esi
  51478c:	pop    ecx
  51478d:	in     eax,0xb3
  51478f:	pop    esi
  514790:	mov    WORD PTR [ebp-0x21],?
  514793:	fist   DWORD PTR [esi+0x4e35d32]
  514799:	add    DWORD PTR [eax-0x7c],edi
  51479c:	mov    edx,0xf8b6dc2e
  5147a1:	pop    ss
  5147a2:	xor    bh,BYTE PTR [edi]
  5147a4:	pusha  
  5147a5:	inc    DWORD PTR [ebx]
  5147a7:	adc    edx,DWORD PTR [eax-0x79]
  5147aa:	mov    ch,0x6f
  5147ac:	xor    eax,0x8986f01e
  5147b1:	js     0x5147eb
  5147b3:	mov    al,ds:0xc85bc677
  5147b8:	xchg   BYTE PTR [esi],dh
  5147ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5147bb:	pop    ss
  5147bc:	jp     0x5147f7
  5147be:	jge    0x51478a
  5147c0:	neg    BYTE PTR ds:0xa75bf55e
  5147c6:	sub    dl,ch
  5147c8:	inc    edx
  5147c9:	jecxz  0x5147f2
  5147cb:	adc    eax,0x5c690563
  5147d0:	jecxz  0x51479c
  5147d2:	mov    ecx,0x4e775f29
  5147d7:	mov    bl,0xcf
  5147d9:	ret    
  5147da:	jp     0x5147dc
  5147dc:	adc    ecx,esp
  5147de:	cmp    BYTE PTR ds:0x7571ef5d,dl
  5147e4:	(bad)  
  5147e5:	mov    ecx,0x27a8cf62
  5147ea:	xchg   ecx,eax
  5147eb:	push   ebx
  5147ec:	loop   0x5147ee
  5147ee:	jle    0x514852
  5147f0:	(bad)  
  5147f2:	pushf  
  5147f3:	retf   0x2fff
  5147f6:	push   edx
  5147f7:	in     eax,dx
  5147f8:	mov    edi,0x4ad66360
  5147fd:	ins    BYTE PTR es:[edi],dx
  5147fe:	je     0x51483d
  514800:	pop    ss
  514801:	fbld   TBYTE PTR [edx+ecx*1+0x7ff21994]
  514808:	xchg   ebp,eax
  514809:	jb     0x5147fb
  51480b:	mov    cl,BYTE PTR [edi-0x7164b182]
  514811:	push   cs
  514812:	lods   al,BYTE PTR ds:[esi]
  514813:	in     al,dx
  514814:	pushf  
  514815:	repnz push ss
  514817:	out    dx,al
  514818:	xchg   ebx,eax
  514819:	pop    eax
  51481a:	dec    ecx
  51481b:	push   0xffffffac
  51481d:	out    dx,al
  51481e:	aas    
  51481f:	xchg   ebx,eax
  514820:	and    ah,BYTE PTR [ebx+0x46]
  514823:	add    eax,0xc13a3610
  514828:	(bad)  [eax+0x59691386]
  51482e:	shl    BYTE PTR [ebx-0x4a],cl
  514831:	cld    
  514832:	retf   0xfd28
  514835:	pop    ss
  514836:	xchg   esi,eax
  514837:	xchg   ebp,eax
  514838:	hlt    
  514839:	stc    
  51483a:	fisttp QWORD PTR [esi-0x2010c169]
  514840:	std    
  514841:	and    dl,BYTE PTR [edx-0x74]
  514844:	inc    edi
  514845:	xor    BYTE PTR [edi],bh
  514847:	retf   
  514848:	xchg   ah,dl
  51484a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51484b:	pop    ds
  51484c:	push   cs
  51484d:	jns    0x514886
  51484f:	sahf   
  514850:	ret    0xba56
  514853:	rcr    DWORD PTR [eax],cl
  514855:	xor    dl,ah
  514857:	imul   ebp,edx,0x37983c1a
  51485d:	sbb    eax,0xc5f4407a
  514862:	(bad)  
  514863:	std    
  514864:	aaa    
  514865:	ds cmp eax,0x4e32eba4
  51486b:	cmp    al,0x84
  51486d:	xor    ah,BYTE PTR [ecx-0x35]
  514870:	arpl   WORD PTR [eax],sp
  514872:	cmp    esi,DWORD PTR [eax+esi*8]
  514875:	ss cwde 
  514877:	cdq    
  514878:	clc    
  514879:	adc    eax,0x7b39ba1a
  51487e:	sub    al,0x6
  514880:	mov    esp,DWORD PTR [edx]
  514882:	xchg   esp,eax
  514883:	fwait
  514884:	ins    BYTE PTR es:[edi],dx
  514885:	inc    ebp
  514886:	xchg   ebx,eax
  514887:	cdq    
  514888:	mov    al,0xb0
  51488a:	pop    eax
  51488b:	jg     0x514875
  51488d:	lar    ebp,WORD PTR [esi+0x66]
  514891:	cmp    bl,bl
  514893:	icebp  
  514894:	frstor [esi+0x3787dc05]
  51489a:	int3   
  51489b:	jmp    0xf631e204
  5148a0:	aad    0x15
  5148a2:	sbb    DWORD PTR [eax],esi
  5148a4:	repz bound ebx,QWORD PTR [eax-0x7a8aff68]
  5148ab:	push   ecx
  5148ac:	jae    0x51486d
  5148ae:	inc    ecx
  5148af:	mov    WORD PTR [edx],?
  5148b1:	add    DWORD PTR [ecx+0x6f498238],eax
  5148b7:	fadd   st,st(0)
  5148b9:	pusha  
  5148ba:	repnz mov eax,ds:0xf3aea4fc
  5148c0:	outs   dx,DWORD PTR ds:[esi]
  5148c1:	call   0x7c3d:0x5b1ea5af
  5148c8:	(bad)  
  5148c9:	out    0x98,al
  5148cb:	hlt    
  5148cc:	imul   ebp,DWORD PTR [ecx],0xfffffff2
  5148cf:	mov    ds:0xbad81886,al
  5148d4:	test   al,0x6a
  5148d6:	adc    eax,0x4c22235b
  5148db:	adc    eax,0xace98e74
  5148e0:	push   ss
  5148e1:	inc    edi
  5148e2:	fstp   DWORD PTR [ecx]
  5148e4:	(bad)  
  5148e6:	push   ebx
  5148e7:	loope  0x51488f
  5148e9:	inc    ecx
  5148ea:	mov    ds:0xdbf2e21f,al
  5148ef:	rcl    DWORD PTR [ebp+ecx*1-0x24],1
  5148f3:	into   
  5148f4:	xchg   DWORD PTR [esi-0x51d0d36d],ebx
  5148fa:	dec    esp
  5148fb:	sbb    ebx,ebx
  5148fd:	add    eax,0xfa303421
  514902:	clc    
  514903:	adc    bh,BYTE PTR [eax]
  514905:	mov    ?,WORD PTR [ebp-0xd]
  514908:	pop    ebp
  514909:	pop    edx
  51490a:	jae    0x51496d
  51490c:	test   bh,dl
  51490e:	sahf   
  51490f:	mov    esi,0x324244d1
  514914:	jl     0x51490c
  514916:	fsub   DWORD PTR [ebx]
  514918:	loope  0x514969
  51491a:	adc    ah,BYTE PTR [esi+esi*4]
  51491d:	shr    ch,cl
  51491f:	das    
  514920:	call   0x1bbc0938
  514925:	push   cs
  514926:	sub    ebx,DWORD PTR [eax-0x4c86c3eb]
  51492c:	jge    0x514996
  51492e:	out    0x59,al
  514930:	scas   al,BYTE PTR es:[edi]
  514931:	cdq    
  514932:	or     al,0x83
  514934:	cdq    
  514935:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514936:	mov    cl,0x3d
  514938:	(bad)  
  514939:	in     eax,dx
  51493a:	xchg   dh,cl
  51493c:	sbb    eax,0xc205d158
  514941:	cs sbb eax,0xae10d0aa
  514947:	add    dl,dl
  514949:	add    al,0x91
  51494b:	cmp    esi,edi
  51494d:	pop    ds
  51494e:	sar    DWORD PTR [edx+0x5d0f1d5f],1
  514954:	iret   
  514955:	jmp    0xc1310889
  51495a:	add    eax,eax
  51495c:	test   DWORD PTR [ebx+esi*4],ecx
  51495f:	inc    esi
  514960:	jl     0x514968
  514962:	jmp    0x2b12:0xa729facd
  514969:	lods   eax,DWORD PTR ds:[esi]
  51496a:	mov    ds:0x51e7eb30,eax
  51496f:	cmp    ecx,edx
  514971:	pop    edx
  514972:	mov    bh,BYTE PTR gs:[esi+0x1]
  514976:	pop    edi
  514977:	jae    0x5149cf
  514979:	ror    BYTE PTR [eax],0x1d
  51497c:	aas    
  51497d:	ficom  WORD PTR [ebx-0x2b91e6e]
  514983:	into   
  514984:	nop
  514985:	es test al,0xa8
  514988:	rol    DWORD PTR [edx+0x1ef243c9],cl
  51498e:	ins    BYTE PTR es:[edi],dx
  51498f:	mov    DWORD PTR [eax],eax
  514991:	test   DWORD PTR [edx+0x29],0xf3cc65ae
  514998:	add    ebp,DWORD PTR [esi+ecx*8]
  51499b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51499c:	iret   
  51499d:	push   edx
  51499e:	dec    edx
  51499f:	jl     0x5149c0
  5149a1:	test   eax,0x44730ef8
  5149a6:	xchg   esp,eax
  5149a7:	adc    DWORD PTR ds:0x9aa9ab86,edi
  5149ad:	add    al,0xdb
  5149af:	jo     0x514a25
  5149b1:	addr16 (bad) 
  5149b3:	push   ebx
  5149b4:	jns    0x51494a
  5149b6:	lods   al,BYTE PTR ds:[esi]
  5149b7:	push   ds
  5149b8:	jecxz  0x5149ce
  5149ba:	xor    BYTE PTR [edx],dl
  5149bc:	inc    ebp
  5149bd:	and    BYTE PTR [edx+edx*4-0x1d],ah
  5149c1:	pop    ds
  5149c2:	enter  0x9e1a,0x39
  5149c6:	arpl   WORD PTR [esp+ecx*1-0x44],di
  5149ca:	add    eax,DWORD PTR [ebp-0x1d]
  5149cd:	xor    al,0xd9
  5149cf:	pushf  
  5149d0:	push   edx
  5149d1:	sub    eax,0x1e17b4dd
  5149d6:	das    
  5149d7:	add    al,al
  5149d9:	rol    ch,cl
  5149db:	xor    dl,BYTE PTR [edx]
  5149dd:	mov    ebx,0x53465a3c
  5149e2:	test   DWORD PTR ds:0xe4ba4eec,edx
  5149e8:	push   cs
  5149e9:	imul   ebp,edi,0x1e34ecae
  5149ef:	clc    
  5149f0:	push   cs
  5149f1:	push   ebp
  5149f2:	inc    eax
  5149f3:	mov    ah,0xf4
  5149f5:	and    dl,BYTE PTR [ebx+0x73f2a14a]
  5149fb:	(bad)  
  5149fc:	dec    esi
  5149fd:	xchg   ecx,eax
  5149fe:	dec    eax
  5149ff:	xor    DWORD PTR [ecx-0x33],ebp
  514a02:	inc    ecx
  514a03:	cwde   
  514a04:	lods   eax,DWORD PTR ds:[esi]
  514a05:	xchg   esi,eax
  514a06:	sub    al,0x92
  514a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514a09:	jmp    0x514a10
  514a0b:	inc    edi
  514a0c:	aad    0x9d
  514a0e:	js     0x514a14
  514a10:	or     ah,BYTE PTR [edx-0x4]
  514a13:	lock out 0x3b,al
  514a16:	xchg   edx,eax
  514a17:	mov    ebp,DWORD PTR [eax+0x68]
  514a1a:	leave  
  514a1b:	ret    0xfa71
  514a1e:	jg     0x5149ba
  514a20:	or     BYTE PTR [edi+0x66],0x63
  514a24:	mov    dl,BYTE PTR [eax-0x5266549]
  514a2a:	retf   
  514a2b:	xor    al,0x7a
  514a2d:	adc    al,0x24
  514a2f:	cdq    
  514a30:	mov    ecx,ecx
  514a32:	inc    esp
  514a33:	cmp    DWORD PTR [esi+ebp*4-0x21],edx
  514a37:	mov    al,0x4a
  514a39:	cmp    eax,0x65e7081b
  514a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514a3f:	or     ah,BYTE PTR [ebp+eiz*4+0x4a]
  514a43:	lods   eax,DWORD PTR ds:[esi]
  514a44:	adc    bl,bl
  514a46:	and    eax,0x75099a1e
  514a4b:	sbb    eax,0xbe287f28
  514a50:	pop    eax
  514a51:	pushf  
  514a52:	mov    ebp,0xf0679863
  514a57:	sar    DWORD PTR ds:0x7d1d5fd6,0xca
  514a5e:	sbb    eax,0xb3ca1b94
  514a63:	dec    ebp
  514a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514a65:	cmc    
  514a66:	ret    0x132
  514a69:	cmp    DWORD PTR [edx+0x7f8684d3],ecx
  514a6f:	and    ebx,eax
  514a71:	imul   esi,DWORD PTR [ebp-0x13],0x7939e61c
  514a78:	jg     0x514ae5
  514a7a:	dec    edi
  514a7b:	sbb    BYTE PTR [edi+0x425ae0f],bh
  514a81:	ret    0x97fa
  514a84:	cmp    al,0x3a
  514a86:	xchg   esi,eax
  514a87:	push   cs
  514a88:	mov    al,0x4f
  514a8a:	mov    fs,WORD PTR [edi-0xcdaa3bb]
  514a90:	adc    dl,bh
  514a92:	fnsave [esi+0x61]
  514a95:	jl     0x514a5d
  514a97:	into   
  514a98:	mov    eax,ds:0x328ea75c
  514a9d:	test   eax,0x71bd6b60
  514aa2:	lods   al,BYTE PTR ds:[esi]
  514aa3:	ret    0x8aa3
  514aa6:	nop
  514aa7:	jg     0x514a98
  514aa9:	jae    0x514ae0
  514aab:	mov    bl,BYTE PTR [esi-0x1f]
  514aae:	mov    al,0xeb
  514ab0:	test   eax,0xe2018bd5
  514ab5:	ja     0x514a68
  514ab7:	adc    BYTE PTR [edx],0xce
  514aba:	das    
  514abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514abc:	rcr    BYTE PTR [edx+0x3a5f5d7b],0x69
  514ac3:	call   0xbcf7:0x1c770415
  514aca:	loope  0x514b2f
  514acc:	cs aas 
  514ace:	sub    cl,BYTE PTR [edx]
  514ad0:	outs   dx,BYTE PTR ds:[esi]
  514ad1:	mov    dh,0x1e
  514ad3:	jo     0x514aea
  514ad5:	test   al,0x3d
  514ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514ad8:	mov    al,ds:0x127a9101
  514add:	mov    cl,0xe
  514adf:	es cli 
  514ae1:	cmp    eax,0x2a17aee7
  514ae6:	call   0x37eb:0x6ce87737
  514aed:	comiss xmm3,DWORD PTR [eax-0x76]
  514af1:	add    eax,0xa0a0ce22
  514af6:	sbb    edx,DWORD PTR [ebx+ebp*1]
  514af9:	push   edi
  514afa:	js     0x514aba
  514afc:	xchg   esi,eax
  514afd:	fistp  DWORD PTR [ecx]
  514aff:	and    ch,bh
  514b01:	jo     0x514b5c
  514b03:	outs   dx,DWORD PTR ds:[esi]
  514b04:	add    bh,al
  514b06:	jge    0x514b3b
  514b08:	test   BYTE PTR ds:0xa28ad60c,bh
  514b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514b0f:	and    bl,BYTE PTR [edx-0x7a956c9c]
  514b15:	pop    esi
  514b16:	xchg   DWORD PTR [eax+edi*2+0x24],esp
  514b1a:	or     edx,DWORD PTR [esi+0xf]
  514b1d:	add    al,BYTE PTR [ecx]
  514b1f:	sub    DWORD PTR [ebp+0x63],esi
  514b22:	iret   
  514b23:	outs   dx,BYTE PTR ds:[esi]
  514b24:	dec    esi
  514b25:	ror    DWORD PTR [edx+0x29500b53],0x43
  514b2c:	popf   
  514b2d:	push   edi
  514b2e:	cmp    bl,BYTE PTR [edi+0x70]
  514b31:	repnz xchg esp,eax
  514b33:	pop    edx
  514b34:	xor    ah,dh
  514b36:	cmp    dh,BYTE PTR [edi-0x3e9cff3f]
  514b3c:	cdq    
  514b3d:	jecxz  0x514ae6
  514b3f:	repz fsqrt 
  514b42:	mov    cl,0xf2
  514b44:	lahf   
  514b45:	adc    esi,DWORD PTR [ebp-0x7dfae88d]
  514b4b:	xor    al,0xc9
  514b4d:	inc    edi
  514b4e:	or     ah,BYTE PTR [ebp-0x65]
  514b51:	sub    edx,DWORD PTR ds:0xa47afcea
  514b57:	jge    0x514b65
  514b59:	std    
  514b5a:	fs or  dl,bl
  514b5d:	or     al,0x61
  514b5f:	xor    al,BYTE PTR [esi-0x7a]
  514b62:	repnz les ebx,FWORD PTR [ecx]
  514b65:	inc    edi
  514b66:	enter  0x5fd8,0xb6
  514b6a:	jmp    0x2148fa18
  514b6f:	mov    esi,esi
  514b71:	xchg   esp,eax
  514b72:	cmp    bh,BYTE PTR [ebp+0x89db65d]
  514b78:	add    al,BYTE PTR [edx+0x4e8547f5]
  514b7e:	das    
  514b7f:	sbb    al,0x6b
  514b81:	jo     0x514ba7
  514b83:	ds cmp eax,0x2e82f419
  514b89:	into   
  514b8a:	adc    esp,esi
  514b8c:	pushf  
  514b8d:	sub    BYTE PTR [esi],ch
  514b8f:	dec    edx
  514b90:	test   BYTE PTR [ebx-0x6bcf153a],cl
  514b96:	(bad)  
  514b97:	cmp    ebx,DWORD PTR [edi-0x46]
  514b9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514b9b:	imul   ebp,DWORD PTR ds:0x26767555,0x573dc3dd
  514ba5:	in     al,dx
  514ba6:	and    al,0x8c
  514ba8:	in     eax,dx
  514ba9:	rdtsc  
  514bab:	popf   
  514bac:	enter  0x4876,0x33
  514bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514bb1:	test   eax,0xc5639074
  514bb6:	ja     0x514b44
  514bb8:	aam    0x3
  514bba:	mov    eax,0x60df28e6
  514bbf:	ins    DWORD PTR es:[edi],dx
  514bc0:	popa   
  514bc1:	je     0x514b9e
  514bc3:	mov    edi,edi
  514bc5:	pop    esp
  514bc6:	pop    edi
  514bc7:	jle    0x514c34
  514bc9:	mul    BYTE PTR [ebx+0x5d]
  514bcc:	xchg   esi,eax
  514bcd:	pop    edi
  514bcf:	mov    al,al
  514bd1:	or     al,0xd5
  514bd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514bd4:	jle    0x514bad
  514bd6:	sub    al,BYTE PTR [ebx-0x4c]
  514bd9:	nop
  514bda:	lods   eax,DWORD PTR ds:[esi]
  514bdb:	ds pop edi
  514bdd:	pusha  
  514bde:	sub    DWORD PTR [ecx],edi
  514be0:	ds mov cl,0x5c
  514be3:	sub    DWORD PTR [ebx-0xe],edi
  514be6:	fst    DWORD PTR [esi+0x57]
  514be9:	pslld  mm0,QWORD PTR es:[esi+0x70d2b2e0]
  514bf1:	cdq    
  514bf2:	jmp    0xc333d421
  514bf7:	xor    BYTE PTR [eax+0x4302c764],dl
  514bfd:	xchg   esi,eax
  514bfe:	push   ebp
  514bff:	and    al,0x77
  514c01:	cmc    
  514c02:	push   edx
  514c03:	xchg   esi,edi
  514c05:	xor    eax,0x47bbf6cb
  514c0a:	mov    eax,0x4e4884ef
  514c0f:	xchg   DWORD PTR [eax+0x57236461],edx
  514c15:	sahf   
  514c16:	mov    bh,0xdf
  514c18:	xchg   esi,eax
  514c19:	das    
  514c1a:	adc    BYTE PTR [edi-0x74],bl
  514c1d:	fnsave [esp+edx*1+0x4b3a9a41]
  514c24:	out    0x1c,eax
  514c26:	aaa    
  514c27:	add    esi,ebx
  514c29:	ror    DWORD PTR [ecx+0x1d7c8a49],1
  514c2f:	clc    
  514c30:	out    dx,eax
  514c31:	in     al,0x87
  514c33:	xchg   edi,eax
  514c34:	pop    eax
  514c35:	stos   BYTE PTR es:[edi],al
  514c36:	ss jg  0x514c37
  514c39:	idiv   DWORD PTR [eax]
  514c3b:	adc    BYTE PTR [edx+0x5536a4d8],0x33
  514c42:	mov    esi,0x490ff1aa
  514c47:	pop    ebp
  514c48:	dec    ecx
  514c49:	add    BYTE PTR [ebx+eiz*2+0x7d97c3d8],dl
  514c50:	mov    cl,0x73
  514c52:	sbb    al,0x27
  514c54:	mov    al,0x8a
  514c56:	and    eax,0x5f8074af
  514c5b:	inc    edi
  514c5c:	out    0xb4,al
  514c5e:	jmp    0x71c50d3
  514c63:	out    0x84,al
  514c65:	push   edx
  514c66:	retf   
  514c67:	div    DWORD PTR [edi-0x73]
  514c6a:	enter  0xbaf4,0x4e
  514c6e:	retf   
  514c6f:	inc    edx
  514c70:	adc    ch,al
  514c72:	rcpps  xmm6,XMMWORD PTR [ebp+0x513861a7]
  514c79:	push   ebx
  514c7a:	add    DWORD PTR [ecx+0x77],eax
  514c7d:	cmp    al,BYTE PTR [esi]
  514c7f:	jp     0x514cb6
  514c81:	call   0x6e5e:0xe0ab38b7
  514c88:	retf   
  514c89:	les    edi,FWORD PTR [edx-0x7]
  514c8c:	aas    
  514c8d:	sti    
  514c8e:	bound  esp,QWORD PTR [edi+0x7f78a800]
  514c94:	and    al,0xd4
  514c96:	(bad)  
  514c97:	jae    0x514c4f
  514c99:	xchg   esp,eax
  514c9a:	bnd jge 0x514d08
  514c9d:	jno    0x514c5c
  514c9f:	cdq    
  514ca0:	add    ebx,0x66
  514ca3:	sub    ch,bl
  514ca5:	mov    ah,0x36
  514ca7:	idiv   ebp
  514ca9:	push   ebx
  514caa:	imul   ecx,DWORD PTR [eax-0x6659ad1b],0x8b217df5
  514cb4:	addr16 push ebp
  514cb6:	mov    fs,WORD PTR [edx+edx*1]
  514cb9:	call   0xa08768cf
  514cbe:	stc    
  514cbf:	jl     0x514c77
  514cc1:	imul   ebx,DWORD PTR [ebp-0xba923ba],0x4d6a5d35
  514ccb:	dec    ecx
  514ccc:	and    BYTE PTR [ebp+0x5c06f25],0x41
  514cd3:	pop    ebp
  514cd4:	or     al,0x28
  514cd6:	test   al,0x82
  514cd8:	clc    
  514cd9:	dec    eax
  514cda:	sar    BYTE PTR [ecx-0x7e242324],cl
  514ce0:	pusha  
  514ce1:	fldenv [eax]
  514ce3:	mov    cl,0x4
  514ce5:	sysexit 
  514ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  514ce8:	add    ch,BYTE PTR [ecx+0x17fe79f3]
  514cee:	pop    esp
  514cef:	mov    ds:0x85733cd7,al
  514cf4:	shl    BYTE PTR [ebx+ebx*2-0x79],cl
  514cf8:	adc    bh,dh
  514cfa:	mov    ch,dh
  514cfc:	xchg   ah,ah
  514cfe:	imul   esi,DWORD PTR [ecx-0x78],0x2cb7e624
  514d05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514d06:	das    
  514d07:	adc    BYTE PTR [eax+0x21],bh
  514d0a:	push   0x7f68e745
  514d0f:	push   es
  514d10:	shl    DWORD PTR [edi-0x71],0xc0
  514d14:	aas    
  514d15:	ja     0x514cd3
  514d17:	leave  
  514d18:	jo     0x514d2e
  514d1a:	jp     0x514d7b
  514d1c:	jne    0x514d9d
  514d1e:	or     al,0xd7
  514d20:	mov    dl,0xc8
  514d22:	ret    
  514d23:	loope  0x514d8b
  514d25:	mov    WORD PTR [edi+0x4c],?
  514d28:	cld    
  514d29:	jmp    FWORD PTR [ebx+0x4e131d48]
  514d2f:	sti    
  514d30:	adc    eax,0xe9c1e3e5
  514d35:	(bad)  
  514d36:	mov    edx,0x5b5500db
  514d3b:	push   edi
  514d3c:	mov    ecx,0x7d95ba7e
  514d41:	lea    ecx,ds:0x4f3b7cf0
  514d47:	outs   dx,DWORD PTR ds:[esi]
  514d48:	repz rcl ebp,0x62
  514d4c:	pop    eax
  514d4d:	or     eax,0x70fae59c
  514d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514d53:	push   0xffffffce
  514d55:	rol    BYTE PTR [eax+0x71],1
  514d58:	ins    BYTE PTR es:[edi],dx
  514d59:	imul   ebp,DWORD PTR [ebx],0xffffffed
  514d5c:	xchg   esp,eax
  514d5d:	xchg   edx,eax
  514d5e:	mov    bh,0x5e
  514d60:	push   0xcaf8e585
  514d65:	fcomi  st,st(2)
  514d67:	out    0x17,al
  514d69:	dec    esi
  514d6a:	dec    esi
  514d6b:	add    al,0xba
  514d6d:	pop    ds
  514d6e:	fdiv   st,st(0)
  514d70:	repz gs sub ebp,esp
  514d74:	inc    edx
  514d75:	call   0xbbf9711f
  514d7a:	nop
  514d7b:	pop    eax
  514d7c:	loope  0x514d6b
  514d7e:	cwde   
  514d7f:	icebp  
  514d80:	mov    es,WORD PTR [ebp-0x75fca9fa]
  514d86:	mov    DWORD PTR [eax],eax
  514d88:	xchg   esp,eax
  514d89:	(bad)  
  514d8a:	or     al,0x8a
  514d8c:	sub    eax,0x9d23b84b
  514d91:	cmp    bl,dh
  514d93:	add    eax,0x7a5b4cc9
  514d98:	jl     0x514dd8
  514d9a:	and    BYTE PTR [ecx-0x2cc6ae41],al
  514da0:	cdq    
  514da1:	ins    BYTE PTR es:[edi],dx
  514da2:	pop    esi
  514da3:	sub    BYTE PTR [edi-0x4af67901],ah
  514da9:	cld    
  514daa:	xchg   ecx,eax
  514dab:	loopne 0x514d7c
  514dad:	(bad)  
  514dae:	mov    dl,0x15
  514db0:	inc    ebp
  514db1:	push   esp
  514db3:	xor    bl,BYTE PTR [eax-0x26f1dddb]
  514db9:	mov    bh,0x3d
  514dbb:	aas    
  514dbc:	inc    esp
  514dbd:	hlt    
  514dbe:	dec    esi
  514dbf:	scas   eax,DWORD PTR es:[edi]
  514dc0:	iret   
  514dc1:	mov    ds:0x1d75bc79,eax
  514dc6:	les    esp,FWORD PTR [edx-0x20bc6c4e]
  514dcc:	stos   DWORD PTR es:[edi],eax
  514dcd:	mov    DWORD PTR [ebx-0x5b6ea136],ecx
  514dd3:	cdq    
  514dd4:	sti    
  514dd5:	test   dh,ch
  514dd7:	pop    es
  514dd8:	mov    esi,0xce4f3374
  514ddd:	mov    dh,0xc4
  514ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514de0:	imul   esi,DWORD PTR [eax],0x22784cd7
  514de6:	rol    BYTE PTR [ecx+0x6d],0x24
  514dea:	adc    cl,bl
  514dec:	das    
  514ded:	mov    edx,DWORD PTR [edi+0xa]
  514df0:	pop    ebp
  514df1:	sub    al,0x7e
  514df3:	adc    dh,bl
  514df5:	jo     0x514d84
  514df7:	dec    esi
  514df8:	mov    dl,0x5f
  514dfa:	ja     0x514dd4
  514dfc:	ins    DWORD PTR es:[edi],dx
  514dfd:	and    edx,ecx
  514dff:	jecxz  0x514de5
  514e01:	loopne 0x514def
  514e03:	and    cl,cl
  514e05:	xor    eax,0xd1e43f7b
  514e0a:	dec    eax
  514e0b:	mov    bh,0xc7
  514e0d:	and    bl,BYTE PTR [eax]
  514e0f:	mov    gs,WORD PTR [eax+0x33345cec]
  514e15:	rol    DWORD PTR [eax+0xc],1
  514e18:	mov    dl,0xce
  514e1a:	xchg   ebp,eax
  514e1b:	out    dx,al
  514e1c:	xor    eax,0x5060d98c
  514e21:	popa   
  514e22:	adc    eax,0xcc5194a8
  514e27:	arpl   WORD PTR [esi+0x402245ff],dx
  514e2d:	cmp    BYTE PTR [eax+0x5a3a5396],dh
  514e33:	mov    esi,0x63422a5d
  514e38:	cli    
  514e39:	inc    edx
  514e3a:	iret   
  514e3b:	bound  edi,QWORD PTR [ebx+0x2e34a1ec]
  514e41:	inc    ecx
  514e42:	sbb    DWORD PTR [esi+0x20],esp
  514e45:	mov    ds:0xed17373d,al
  514e4a:	clc    
  514e4b:	dec    ecx
  514e4c:	push   0x1
  514e4e:	cmp    ah,ah
  514e50:	jge    0x514e42
  514e52:	push   ds
  514e53:	sti    
  514e54:	and    ecx,DWORD PTR [ebp-0xcbcf979]
  514e5a:	sbb    BYTE PTR [eax+0x3a],cl
  514e5d:	arpl   bx,si
  514e5f:	cmc    
  514e60:	jge    0x514e87
  514e62:	inc    esp
  514e63:	mov    eax,ds:0x90e2c614
  514e68:	sub    eax,0x45b0ecde
  514e6d:	lock xchg ebp,eax
  514e6f:	fcomp  st(4)
  514e71:	add    eax,0x6cc764c3
  514e76:	call   0xf3cc21be
  514e7b:	push   cs
  514e7c:	adc    al,0xc0
  514e7e:	(bad)  
  514e7f:	int3   
  514e80:	xchg   edx,eax
  514e81:	inc    esi
  514e82:	push   eax
  514e83:	xor    al,0xa4
  514e85:	js     0x514e9a
  514e87:	out    dx,al
  514e88:	loop   0x514e8e
  514e8a:	push   ds
  514e8b:	stc    
  514e8c:	or     BYTE PTR [edi+0x24],al
  514e8f:	push   0x3d55bd05
  514e94:	sub    ah,al
  514e96:	or     BYTE PTR [ebx],dl
  514e98:	mov    DWORD PTR ds:0x5b9510cd,ebx
  514e9e:	mov    edi,0x25f1438b
  514ea3:	dec    ebp
  514ea4:	or     BYTE PTR [ecx+0x7a],ch
  514ea7:	cli    
  514ea8:	loop   0x514eea
  514eaa:	push   esp
  514eab:	sbb    eax,0x769d5b44
  514eb0:	adc    BYTE PTR [edx+edi*1-0x584014b1],cl
  514eb7:	pusha  
  514eb8:	rol    esi,1
  514eba:	stc    
  514ebb:	xchg   bh,bh
  514ebd:	jnp    0x514e5a
  514ebf:	lahf   
  514ec0:	lods   al,BYTE PTR ds:[esi]
  514ec1:	sub    esi,ebp
  514ec3:	mov    eax,ds:0xfdf6a03c
  514ec8:	loopne 0x514ecb
  514eca:	inc    edx
  514ecb:	xlat   BYTE PTR ds:[ebx]
  514ecc:	push   ds
  514ecd:	jp     0x514e9d
  514ecf:	mov    db2,ecx
  514ed2:	jno    0x514e65
  514ed4:	sub    ebp,DWORD PTR ds:0xa75733fe
  514eda:	push   esi
  514edb:	sar    BYTE PTR [esi-0x56],1
  514ede:	sbb    eax,0x5f2b652e
  514ee3:	fcomp  QWORD PTR [edi]
  514ee5:	xor    DWORD PTR fs:[edx],esi
  514ee8:	pop    es
  514ee9:	mov    ebx,0xc473234c
  514eee:	bound  edi,QWORD PTR [edx]
  514ef0:	sub    eax,esp
  514ef2:	mov    ebp,tr7
  514ef5:	sahf   
  514ef6:	sbb    al,0xc5
  514ef8:	fiadd  WORD PTR [edi+0x67]
  514efb:	xchg   edi,eax
  514efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  514efd:	jecxz  0x514f5c
  514eff:	adc    al,0x7
  514f01:	test   DWORD PTR [ebx+0xc],ebx
  514f04:	cwde   
  514f05:	mov    ds:0xac07e4d2,al
  514f0a:	and    al,0x6d
  514f0c:	push   esi
  514f0d:	adc    BYTE PTR [esi-0x25],dl
  514f10:	out    dx,eax
  514f11:	mov    edi,0x3fa6b28d
  514f16:	jmp    0x514eed
  514f18:	into   
  514f19:	scas   al,BYTE PTR es:[edi]
  514f1a:	jns    0x514ea7
  514f1c:	(bad)  
  514f1d:	popf   
  514f1e:	mov    cl,0xb
  514f20:	cmp    al,0x2a
  514f22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  514f23:	arpl   di,bx
  514f25:	out    0x96,al
  514f27:	je     0x514f3e
  514f29:	repnz loopne 0x514f40
  514f2c:	mov    ebp,0xa3d1c140
  514f31:	sti    
  514f32:	xchg   edx,eax
  514f33:	adc    DWORD PTR ds:0xc3ed6cd9,ebx
  514f39:	jmp    0x514f4f
  514f3b:	ins    BYTE PTR es:[edi],dx
  514f3c:	les    ebx,FWORD PTR [ecx+edx*2-0x349ba81b]
  514f43:	push   edx
  514f44:	pop    ss
  514f45:	aas    
  514f46:	rol    DWORD PTR [esi-0x5d],1
  514f49:	jae    0x514f4a
  514f4b:	or     dl,ch
  514f4d:	jo     0x514fa5
  514f4f:	(bad)  [ebx+0x74]
  514f52:	(bad)  
  514f53:	neg    ecx
  514f55:	jl     0x514f3d
  514f57:	inc    esp
  514f58:	jp     0x514f47
  514f5a:	or     DWORD PTR [esi-0x32bd1da],edx
  514f60:	mov    eax,0x1e7d89a3
  514f65:	dec    edx
  514f66:	pop    ebx
  514f67:	and    DWORD PTR [ebx-0x6d6780a1],0x75444140
  514f71:	push   ebp
  514f72:	pop    ebp
  514f73:	aad    0x3c
  514f75:	xchg   BYTE PTR [esi],ch
  514f77:	inc    ebp
  514f78:	mov    eax,ds:0x841c6f3b
  514f7d:	fldenv [ebx-0x13]
  514f80:	adc    ah,BYTE PTR [ebx-0x613a0382]
  514f86:	lea    esi,[edx+0x48]
  514f89:	gs fwait
  514f8b:	cli    
  514f8c:	fldcw  WORD PTR [ecx-0x276495b2]
  514f92:	arpl   sp,ax
  514f94:	push   cs
  514f95:	and    eax,0x3b7a1d8e
  514f9a:	shl    BYTE PTR [ecx+0xee71fe4],cl
  514fa0:	in     al,dx
  514fa1:	jecxz  0x514f74
  514fa3:	dec    ebp
  514fa4:	data16 imul BYTE PTR [ecx+0x27]
  514fa8:	jo     0x514ff6
  514faa:	push   0x20
  514fac:	popf   
  514fad:	add    BYTE PTR [esi+0x7e],bh
  514fb0:	mov    ecx,0xb4717e8a
  514fb5:	adc    dl,BYTE PTR [ebx+0x50]
  514fb8:	(bad)  
  514fb9:	call   0xc8f065c8
  514fbe:	mov    edx,edx
  514fc0:	jge    0x515006
  514fc2:	jo     0x515028
  514fc4:	push   ebp
  514fc5:	push   edx
  514fc6:	xor    edx,DWORD PTR [edx-0xd7ff076]
  514fcc:	daa    
  514fcd:	add    eax,0xb686608d
  514fd2:	int    0x85
  514fd4:	xor    al,0xd3
  514fd6:	cmp    dh,cl
  514fd8:	std    
  514fd9:	adc    DWORD PTR [ebp+0x3e],edx
  514fdc:	inc    edx
  514fdd:	ins    BYTE PTR es:[edi],dx
  514fde:	mov    ebp,0x45ad3c4f
  514fe3:	mov    cl,BYTE PTR ds:0xcacd5d9d
  514fe9:	pusha  
  514fea:	loope  0x514f87
  514fec:	cmp    dl,BYTE PTR [eax-0x6722ba80]
  514ff2:	loopne 0x515017
  514ff4:	in     al,dx
  514ff5:	inc    ebp
  514ff6:	inc    ebx
  514ff7:	retf   0x4de0
  514ffa:	adc    BYTE PTR [edx],dh
  514ffc:	mov    ah,0x49
  514ffe:	mov    ch,0x4
  515000:	push   esp
  515001:	dec    esi
  515002:	cld    
  515003:	aaa    
  515004:	in     al,0x5
  515006:	sbb    ebp,DWORD PTR [eax+0x4ab543d4]
  51500c:	mov    eax,ds:0x9e1213c
  515011:	aam    0x77
  515013:	aas    
  515014:	mov    ebp,0xa801fb0b
  515019:	add    al,0xb3
  51501b:	xor    dl,BYTE PTR [edx+0x498ed493]
  515021:	pop    edx
  515022:	fild   DWORD PTR [edx-0x27]
  515025:	and    al,0x99
  515027:	mov    ah,0xdd
  515029:	jmp    0x514fb2
  51502b:	adc    BYTE PTR [edi+0x55],dl
  51502e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51502f:	inc    DWORD PTR [edi]
  515031:	imul   ebp,DWORD PTR [esi+ebp*1],0x51f06961
  515038:	push   0x43ff5c8d
  51503d:	add    ah,BYTE PTR [edi+0x353ce4e7]
  515043:	inc    eax
  515044:	js     0x515006
  515046:	or     BYTE PTR [eax-0x4fd2020d],dl
  51504c:	push   esp
  51504d:	stos   DWORD PTR es:[edi],eax
  51504e:	push   ds
  51504f:	or     eax,0x18d9dd3f
  515054:	xor    eax,0xffffffd1
  515057:	imul   edx,ecx,0xffffffa4
  51505a:	test   al,0x7b
  51505c:	inc    edi
  51505d:	and    al,0x58
  51505f:	repz (bad) 
  515061:	(bad)  
  515062:	cmc    
  515063:	pop    DWORD PTR [ebx+0x6d]
  515066:	mov    ebx,0x131bfa0d
  51506b:	icebp  
  51506c:	iret   
  51506d:	inc    esi
  51506e:	daa    
  51506f:	adc    edi,edi
  515071:	mov    dl,0x18
  515073:	sti    
  515074:	and    eax,0x86a7710e
  515079:	(bad)  ds:0x6e367fc1
  51507f:	sub    ch,al
  515081:	shl    DWORD PTR [edx+0x4b],cl
  515084:	rcl    BYTE PTR [ebx-0x7d],cl
  515087:	mov    esi,0x3dd95e7a
  51508c:	fcmovne st,st(6)
  51508e:	xchg   eax,edx
  515090:	adc    al,0x8d
  515092:	punpckhwd mm3,QWORD PTR [ebx+edx*2+0x73]
  515097:	cdq    
  515098:	jg     0x515097
  51509a:	fnsave [ecx]
  51509c:	(bad)  
  51509d:	retf   
  51509e:	pop    ebx
  51509f:	mov    eax,edi
  5150a1:	xchg   BYTE PTR [esi+0x4fec49be],al
  5150a7:	test   eax,0xc2ff8bf8
  5150ac:	jmp    0x5544:0xbbe3b797
  5150b3:	and    al,0x9
  5150b5:	dec    ebx
  5150b6:	call   0x8532:0xffcb5feb
  5150bd:	sub    eax,0x4d80ebb0
  5150c2:	daa    
  5150c3:	sub    edi,DWORD PTR [esi]
  5150c5:	lahf   
  5150c6:	dec    ebx
  5150c7:	sahf   
  5150c8:	sub    esp,ebx
  5150ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5150cb:	sbb    BYTE PTR [ecx-0x603d230d],ch
  5150d1:	arpl   WORD PTR [edx],bx
  5150d3:	iret   
  5150d4:	add    BYTE PTR [esi-0x358eccb8],al
  5150da:	sbb    ebx,esp
  5150dc:	repz push 0x40
  5150df:	(bad)
  5150e2:	arpl   WORD PTR [esi+0x716f2fac],dx
  5150e8:	cdq    
  5150e9:	push   esi
  5150ea:	or     al,0x1e
  5150ec:	fs cs pop es
  5150ef:	fiadd  DWORD PTR [ebx]
  5150f1:	add    ebx,DWORD PTR [eax+0x7f7f7c05]
  5150f7:	ins    BYTE PTR es:[edi],dx
  5150f8:	imul   esp,DWORD PTR [eax+0x114c07d9],0x225d8f2d
  515102:	xor    esp,DWORD PTR [edx-0x31dafd6d]
  515108:	ins    DWORD PTR es:[edi],dx
  515109:	mov    esp,0xef6825
  51510e:	xchg   edi,eax
  51510f:	mov    bh,0x3b
  515111:	mov    dl,0x30
  515113:	mov    ah,BYTE PTR [edi-0x11e3c3b7]
  515119:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51511a:	iret   
  51511b:	xchg   ecx,eax
  51511c:	sbb    DWORD PTR [esi+ebp*2-0x213318a1],ebp
  515123:	jg     0x515193
  515125:	test   al,0xe4
  515127:	inc    ebp
  515128:	cld    
  515129:	push   edi
  51512a:	cdq    
  51512b:	fnstsw WORD PTR [eax+0x231afb9a]
  515131:	cwde   
  515132:	mov    ebx,0x3789c331
  515137:	neg    BYTE PTR [edi+0x6950d9dd]
  51513d:	mov    esi,esp
  51513f:	inc    ebp
  515140:	mov    ebp,0xcf8f6ede
  515145:	iret   
  515146:	ins    BYTE PTR es:[edi],dx
  515147:	out    0xb2,eax
  515149:	mov    ecx,0x3608624b
  51514e:	aad    0x3e
  515150:	(bad)  
  515152:	xor    ch,cl
  515154:	mov    ebx,DWORD PTR [ebx+0x42]
  515157:	jns    0x51515b
  515159:	xchg   ecx,eax
  51515a:	fst    QWORD PTR [edi]
  51515c:	or     ebp,DWORD PTR [esp+ecx*1-0x3d]
  515160:	or     DWORD PTR [esi+0x78fa5cff],0x6
  515167:	in     eax,0x54
  515169:	(bad)  
  51516a:	hlt    
  51516b:	jge    0x51510b
  51516d:	out    dx,eax
  51516e:	gs in  al,dx
  515170:	retf   
  515171:	cld    
  515172:	mov    ebp,0x768b4b3e
  515177:	mov    ch,0xcc
  515179:	ret    0x6cff
  51517c:	jl     0x5151c2
  51517e:	push   ds
  51517f:	dec    esp
  515180:	(bad)
  515185:	(bad)  
  515186:	xor    dh,BYTE PTR [ecx+0x73]
  515189:	sbb    eax,0xa4ba2425
  51518e:	mov    ah,0xd8
  515190:	pop    edx
  515191:	xchg   ebx,esp
  515193:	aas    
  515194:	cli    
  515195:	and    eax,0xf76dffda
  51519a:	repnz inc ebx
  51519c:	jl     0x51517a
  51519e:	leave  
  51519f:	add    eax,esp
  5151a1:	(bad)  
  5151a2:	fcomp  st(5)
  5151a4:	cmp    eax,0x3a3d6738
  5151a9:	cmp    eax,0x1e83152a
  5151ae:	ficom  WORD PTR [ebx]
  5151b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5151b1:	es push ds
  5151b3:	pop    eax
  5151b4:	and    edx,DWORD PTR [edi]
  5151b6:	adc    al,0x3
  5151b8:	pop    eax
  5151b9:	and    esp,eax
  5151bb:	and    ebp,ecx
  5151bd:	xchg   BYTE PTR [edi-0x67],dl
  5151c0:	lea    ebx,ds:0xc803dd47
  5151c6:	pop    ss
  5151c7:	push   esp
  5151c8:	add    al,0x32
  5151ca:	and    DWORD PTR [ebx-0x70],edx
  5151cd:	in     eax,0x6b
  5151cf:	retf   
  5151d0:	ins    BYTE PTR es:[edi],dx
  5151d1:	and    DWORD PTR [esi-0x27eec2a],0xd75d9b89
  5151db:	cmp    al,0x77
  5151dd:	mov    ds:0x655709f3,al
  5151e2:	das    
  5151e3:	dec    edx
  5151e4:	mov    ebp,0x4834bb39
  5151e9:	ja     0x515180
  5151eb:	xlat   BYTE PTR ds:[ebx]
  5151ec:	lods   al,BYTE PTR ds:[esi]
  5151ed:	jge    0x51519a
  5151ef:	(bad)  
  5151f0:	adc    DWORD PTR [edi],ebp
  5151f2:	(bad)  
  5151f3:	sbb    eax,0xb8c25759
  5151f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5151f9:	xchg   esp,eax
  5151fa:	mov    esi,0xf7c11cfb
  5151ff:	int3   
  515200:	jmp    0x4f5c:0x3dac77dd
  515207:	iret   
  515208:	das    
  515209:	(bad)
  51520c:	repnz not DWORD PTR [edi]
  51520f:	cmp    BYTE PTR [edx+ebx*8-0x7b],bh
  515213:	pushw  es
  515215:	jmp    0x51524e
  515217:	mov    cs,WORD PTR [ebx]
  515219:	add    DWORD PTR [edx+0x2d58d6e4],edx
  51521f:	test   DWORD PTR [ecx],ebx
  515221:	or     eax,0xea577249
  515226:	iret   
  515227:	push   0x52a5f648
  51522c:	pop    ss
  51522d:	cmp    bh,BYTE PTR [eax+0x55]
  515230:	sbb    DWORD PTR [ecx+0xa51c836],edi
  515236:	dec    ebx
  515237:	fild   DWORD PTR [ebx+0x7eb80fe2]
  51523d:	xor    eax,DWORD PTR [esi]
  51523f:	arpl   WORD PTR [edx],ax
  515241:	divps  xmm5,xmm1
  515244:	bound  edx,QWORD PTR [ebx+0x71]
  515247:	xor    BYTE PTR [esp+ecx*8+0x51cffe2],dh
  51524e:	cmp    BYTE PTR [esi-0x69],cl
  515251:	(bad)  
  515252:	in     eax,0x79
  515254:	cmovns esi,DWORD PTR [edi-0x3221916a]
  51525b:	popa   
  51525c:	sti    
  51525d:	stos   BYTE PTR es:[edi],al
  51525e:	aas    
  51525f:	push   cs
  515260:	mov    al,ds:0x6cc5d8a6
  515265:	dec    ebp
  515266:	lods   eax,DWORD PTR ds:[esi]
  515267:	cmp    eax,0xd5fb0ce7
  51526c:	jle    0x51527d
  51526e:	sub    ax,0x581
  515272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515273:	ret    
  515274:	and    edx,edx
  515276:	mov    al,ds:0x6292c60a
  51527b:	push   ss
  51527c:	jecxz  0x515285
  51527e:	xchg   ecx,eax
  51527f:	and    DWORD PTR [ebx],ebp
  515281:	push   edi
  515282:	push   ebp
  515283:	call   0xeaa8fc1
  515288:	sahf   
  515289:	and    BYTE PTR [eax-0x7e],dh
  51528c:	mov    dh,0x9f
  51528e:	inc    ebx
  51528f:	popa   
  515290:	je     0x5152f7
  515292:	mov    edi,0x6857be1d
  515297:	add    DWORD PTR [edx],0x180c38fb
  51529d:	popf   
  51529e:	mov    ecx,0x36f9372a
  5152a3:	sbb    dl,BYTE PTR [eax-0x6a]
  5152a6:	sti    
  5152a7:	or     eax,0x93bc116
  5152ac:	ret    0x779f
  5152af:	xchg   DWORD PTR [esi],esp
  5152b1:	js     0x51524f
  5152b3:	out    dx,al
  5152b4:	out    0x28,eax
  5152b6:	sub    BYTE PTR ss:[edi],ch
  5152b9:	ror    DWORD PTR [edi-0x40],0x9
  5152bd:	cmp    DWORD PTR [eax],edx
  5152bf:	ja     0x5152ea
  5152c1:	test   eax,0x3df45312
  5152c6:	pusha  
  5152c7:	outs   dx,DWORD PTR ds:[esi]
  5152c8:	mov    ch,0x93
  5152ca:	adc    esi,ecx
  5152cc:	lds    edx,FWORD PTR [eax-0x365da060]
  5152d2:	inc    edi
  5152d3:	jb     0x51526a
  5152d5:	adc    DWORD PTR [edi],ebp
  5152d7:	lahf   
  5152d8:	xchg   esp,eax
  5152d9:	sbb    al,0x58
  5152db:	dec    ebx
  5152dc:	pop    eax
  5152dd:	mov    ch,BYTE PTR [eax+eax*4-0x2a8bc766]
  5152e4:	sub    BYTE PTR [edi+0x3e0ca4af],0x4c
  5152eb:	pushf  
  5152ec:	jge    0x515307
  5152ee:	xchg   ebx,eax
  5152ef:	xlat   BYTE PTR ds:[ebx]
  5152f0:	(bad)  
  5152f1:	xchg   ebx,eax
  5152f2:	jp     0x515371
  5152f4:	inc    edi
  5152f5:	and    al,0x11
  5152f7:	push   0x295762b4
  5152fc:	fs fwait
  5152fe:	xchg   esp,eax
  5152ff:	lods   eax,DWORD PTR ds:[esi]
  515300:	ds in  al,0x72
  515303:	inc    ebp
  515304:	xor    edx,0xb3287748
  51530a:	sbb    eax,0xd8e0a3ff
  51530f:	inc    esp
  515310:	in     eax,0x2e
  515312:	or     al,0xd
  515314:	adc    edx,esp
  515316:	push   cs
  515317:	mov    esi,0x610aa014
  51531c:	inc    esi
  51531d:	sbb    al,0x8f
  51531f:	xchg   ebx,eax
  515320:	cmp    ebp,DWORD PTR [ecx-0x31]
  515323:	stc    
  515324:	dec    esi
  515325:	xlat   BYTE PTR ds:[ebx]
  515326:	fs mov eax,0x5e59119e
  51532c:	aas    
  51532d:	pop    ecx
  51532e:	lea    ecx,[edi]
  515330:	mov    ah,0x9e
  515332:	mov    ecx,0x68781778
  515337:	cmp    bh,bl
  515339:	fimul  WORD PTR [esi+0x65122604]
  51533f:	pop    ecx
  515340:	mov    ds,ecx
  515342:	out    0x70,eax
  515344:	adc    ebp,DWORD PTR ds:0xb9c4fc99
  51534a:	mov    eax,ds:0xbe287e1f
  51534f:	cmp    DWORD PTR [edi],ecx
  515351:	ret    0x841b
  515354:	in     al,dx
  515355:	loop   0x5153bd
  515357:	je     0x5153a3
  515359:	leave  
  51535a:	xchg   ebp,eax
  51535b:	cmc    
  51535c:	(bad)  
  51535d:	xor    eax,0xc363b074
  515362:	mov    ch,0x16
  515364:	push   eax
  515365:	cli    
  515366:	loopne 0x515320
  515368:	call   0xbac4:0x4b8de013
  51536f:	ss inc ebp
  515371:	les    ebx,FWORD PTR [edi+0x36]
  515374:	xor    BYTE PTR [ebx],dh
  515376:	imul   ebx,ebp,0x43e64a7a
  51537c:	cli    
  51537d:	lods   al,BYTE PTR ds:[esi]
  51537e:	mov    dh,0x9
  515380:	jmp    0xcbb4:0xf5a67acd
  515387:	pop    ss
  515388:	cmp    DWORD PTR [ebx-0x45],esi
  51538b:	xor    al,bh
  51538d:	or     al,0x68
  51538f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515391:	jne    0x5153a8
  515393:	jg     0x5153e5
  515395:	popf   
  515396:	sub    ebp,0x91111e87
  51539c:	es xchg esi,eax
  51539e:	xchg   edx,eax
  51539f:	outs   dx,BYTE PTR ds:[esi]
  5153a0:	dec    ecx
  5153a1:	and    ebp,DWORD PTR [ebp-0x7bf23a29]
  5153a7:	retf   
  5153a8:	and    BYTE PTR [esi],0xbe
  5153ab:	jl     0x515368
  5153ad:	repnz int 0x24
  5153b0:	bound  ebp,QWORD PTR [esi-0x3fe7c1e6]
  5153b6:	dec    ebx
  5153b7:	in     eax,dx
  5153b8:	loopne 0x51541c
  5153ba:	daa    
  5153bb:	sahf   
  5153bc:	pop    ds
  5153bd:	outs   dx,DWORD PTR ds:[esi]
  5153be:	in     eax,0xc
  5153c0:	pop    ebp
  5153c1:	inc    ebp
  5153c2:	or     ah,dl
  5153c4:	lock xchg si,ax
  5153c7:	dec    ecx
  5153c8:	int3   
  5153c9:	std    
  5153ca:	in     eax,dx
  5153cb:	and    eax,0x3991064c
  5153d0:	aad    0xd3
  5153d2:	mov    esp,0x715d16ce
  5153d7:	add    BYTE PTR [esi-0x2a],dh
  5153da:	and    eax,ecx
  5153dc:	ja     0x5153d3
  5153de:	mov    cl,0x50
  5153e0:	sbb    ebx,DWORD PTR [esp+ebp*8]
  5153e3:	inc    eax
  5153e4:	cmp    al,0x91
  5153e6:	push   0x2f
  5153e8:	jae    0x5153d4
  5153ea:	test   eax,0x9da74c2
  5153ef:	xor    eax,DWORD PTR [edx]
  5153f1:	pop    es
  5153f2:	dec    ebx
  5153f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5153f4:	in     al,0x29
  5153f6:	and    BYTE PTR [eax-0x4a],0x60
  5153fa:	or     DWORD PTR [ebx],edx
  5153fc:	cmp    bh,BYTE PTR [ecx+0x6]
  5153ff:	je     0xb04934d1
  515405:	jmp    0x5153ae
  515407:	xor    bh,dl
  515409:	mov    bh,0x9c
  51540b:	jmp    0x98ac6ce3
  515410:	or     dl,ah
  515412:	jo     0x515450
  515414:	mov    eax,ds:0x23302372
  515419:	adc    ebx,DWORD PTR [edx+0x5f]
  51541c:	div    bh
  51541e:	xor    al,0xa8
  515420:	xor    ebx,DWORD PTR [eax]
  515422:	pop    ss
  515423:	jb     0x51542b
  515425:	push   edx
  515426:	out    0x94,eax
  515428:	pop    eax
  515429:	leave  
  51542a:	push   0x737fa392
  51542f:	fistp  WORD PTR [edx+0x21c57750]
  515435:	das    
  515436:	enter  0x3fd5,0xc1
  51543a:	xchg   ebp,eax
  51543b:	ret    
  51543c:	push   edi
  51543d:	clc    
  51543e:	mov    ebx,DWORD PTR ss:[ebx-0x3f956934]
  515445:	jle    0x515486
  515447:	dec    eax
  515448:	add    al,0xff
  51544a:	push   0x20
  51544c:	adc    DWORD PTR cs:[ebp+0x1f131938],ecx
  515453:	mov    WORD PTR [eax+0x61],ss
  515456:	stos   BYTE PTR es:[edi],al
  515457:	pop    ecx
  515458:	data16 sub dl,BYTE PTR [ecx+0x42]
  51545c:	call   0x8fdff267
  515461:	sub    DWORD PTR [edx+0x237187e0],edi
  515467:	cmc    
  515468:	sub    DWORD PTR [ebx-0x21a57a75],ebx
  51546e:	or     eax,0xd4522243
  515473:	out    dx,al
  515474:	mov    es,WORD PTR [eax+0x78]
  515477:	inc    esp
  515478:	jno    0x51542a
  51547a:	enter  0xa8c,0x1e
  51547e:	fst    QWORD PTR [edi+ebp*4+0x1c]
  515482:	mov    gs,WORD PTR [edi+eiz*1]
  515485:	sti    
  515486:	adc    bh,BYTE PTR [ebx-0x58806ddf]
  51548c:	dec    ebp
  51548d:	ss pop ss
  51548f:	pop    ds
  515490:	add    edx,DWORD PTR [eax-0x50]
  515493:	xchg   esi,eax
  515494:	cli    
  515495:	dec    ecx
  515496:	add    eax,0x77b260b4
  51549b:	dec    ebp
  51549c:	adc    edi,DWORD PTR [edx-0x3ccae895]
  5154a2:	mov    ecx,0xaf97bd81
  5154a7:	sar    ebx,0x7c
  5154aa:	mov    ds:0x3e868da0,eax
  5154af:	push   ecx
  5154b0:	fcom   DWORD PTR [edx+0x2e49ceca]
  5154b6:	cwde   
  5154b7:	or     ebx,ebx
  5154b9:	es cmp dl,dh
  5154bc:	shr    dl,1
  5154be:	ins    DWORD PTR es:[edi],dx
  5154bf:	mov    ebp,0xeddf7947
  5154c4:	ins    DWORD PTR es:[edi],dx
  5154c5:	mov    ecx,0x53e02263
  5154ca:	in     al,dx
  5154cb:	daa    
  5154cc:	retf   
  5154cd:	fsubp  st(3),st
  5154cf:	mov    ebx,0xfbfc06f8
  5154d4:	dec    eax
  5154d5:	jae    0x515524
  5154d7:	sub    bl,dh
  5154d9:	jmp    0x51552f
  5154db:	jmp    0x8ae6da26
  5154e0:	cdq    
  5154e1:	cmp    ebp,DWORD PTR [eax-0xf]
  5154e4:	cld    
  5154e5:	pop    esi
  5154e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5154e7:	ds in  eax,0x61
  5154ea:	mov    edx,0x5ccf4138
  5154ef:	push   ss
  5154f0:	and    bl,BYTE PTR [esi+0x55e80d65]
  5154f6:	lods   eax,DWORD PTR ds:[esi]
  5154f7:	mov    al,ds:0x320deda3
  5154fc:	popf   
  5154fd:	imul   esi,DWORD PTR [ecx],0xfffffff8
  515500:	mov    esi,DWORD PTR [esi+0x71f274bf]
  515506:	jmp    0x5154d8
  515508:	inc    ecx
  515509:	push   esp
  51550a:	and    DWORD PTR [eax],ebp
  51550c:	test   eax,0xd6814d5d
  515511:	loopne 0x51551c
  515513:	int3   
  515514:	dec    ecx
  515515:	scas   eax,DWORD PTR es:[edi]
  515516:	fisubr DWORD PTR [edx+0x71448974]
  51551c:	ins    DWORD PTR es:[edi],dx
  51551d:	cli    
  51551e:	adc    al,dh
  515520:	cwde   
  515521:	or     bl,BYTE PTR [esi+0x37]
  515524:	sub    DWORD PTR [edi+0x2e],eax
  515527:	sti    
  515528:	push   esi
  515529:	mov    edx,esi
  51552b:	icebp  
  51552c:	or     DWORD PTR [esi-0x4b],0x9
  515530:	lds    esp,FWORD PTR [eax+0x33]
  515533:	push   ebp
  515534:	adc    ch,cl
  515536:	out    dx,eax
  515537:	mov    edi,0x863e344f
  51553c:	stc    
  51553d:	dec    ecx
  51553e:	ins    DWORD PTR es:[edi],dx
  51553f:	ss jecxz 0x515554
  515542:	sbb    BYTE PTR [eax-0x13ba1828],0xc0
  515549:	clc    
  51554a:	xchg   ecx,eax
  51554b:	jle    0x515585
  51554d:	dec    esi
  51554e:	jnp    0x51559a
  515550:	aam    0x44
  515552:	mov    esp,0x593bbcd9
  515557:	or     cl,bl
  515559:	lea    esi,[edx-0x3d]
  51555c:	adc    al,0xb6
  51555e:	leave  
  51555f:	sbb    al,0xe6
  515561:	pop    ebp
  515562:	ret    0x2cd8
  515565:	xchg   esi,eax
  515566:	dec    ebp
  515567:	push   edi
  515568:	imul   esp,ebx,0x7396b06d
  51556e:	mov    ecx,0xf06bd505
  515573:	rcr    ch,1
  515575:	and    eax,0x108ad87c
  51557a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51557b:	mov    dl,0xd6
  51557d:	cmp    al,0xde
  51557f:	in     eax,0x67
  515581:	xchg   edi,eax
  515582:	mov    bh,cl
  515584:	jmp    0x51551b
  515586:	push   cs
  515587:	xor    edi,0xbd27ec50
  51558d:	pop    ebx
  51558e:	adc    DWORD PTR [edx],ebx
  515590:	add    al,0x4f
  515592:	cld    
  515593:	test   eax,0x6f96732e
  515598:	in     eax,dx
  515599:	les    edi,FWORD PTR [edi-0x41]
  51559c:	mov    edx,0x943f760a
  5155a1:	mov    ecx,0xc421e7f4
  5155a6:	jmp    DWORD PTR [esp+ebp*8+0x7d]
  5155aa:	imul   DWORD PTR cs:[ebx-0x2655970e]
  5155b1:	lock aad 0x86
  5155b4:	fldcw  WORD PTR [esi]
  5155b6:	add    eax,0x1cba2365
  5155bb:	mov    ds:0xef5d3edf,al
  5155c0:	lods   al,BYTE PTR ds:[esi]
  5155c1:	adc    DWORD PTR [ebx-0x4c68177c],ebp
  5155c7:	shl    BYTE PTR [edi],0x9a
  5155ca:	jle    0x51555e
  5155cc:	xchg   BYTE PTR [eax],ah
  5155ce:	xor    al,0x37
  5155d0:	sbb    al,0xce
  5155d2:	imul   ebx,DWORD PTR [edi-0x5f],0x1
  5155d6:	pop    ebx
  5155d7:	xchg   edi,eax
  5155d8:	cmp    edx,DWORD PTR [ecx]
  5155da:	cmc    
  5155db:	sti    
  5155dc:	push   cs
  5155dd:	inc    ebp
  5155de:	xchg   edx,eax
  5155df:	or     BYTE PTR [edi+0x4c],ah
  5155e2:	mov    edx,0xaf19ec4e
  5155e7:	xchg   BYTE PTR [edx-0x5f],ch
  5155ea:	test   al,0x7
  5155ec:	xchg   ecx,eax
  5155ed:	mov    esp,0xb7764e64
  5155f2:	(bad)  
  5155f3:	sbb    BYTE PTR [eax-0x6b70a68c],ch
  5155f9:	retf   
  5155fa:	out    0xcc,al
  5155fc:	mov    ebx,DWORD PTR [esi-0x28]
  5155ff:	sahf   
  515600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515601:	push   ss
  515602:	in     eax,dx
  515603:	push   esi
  515604:	mov    dl,0x98
  515606:	aaa    
  515607:	stos   BYTE PTR es:[edi],al
  515608:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515609:	mov    al,ds:0x3fd65999
  51560e:	std    
  51560f:	inc    eax
  515610:	dec    edi
  515611:	push   esp
  515612:	dec    ebx
  515613:	xchg   ecx,eax
  515614:	mov    edi,0x8d56fc98
  515619:	sti    
  51561a:	retf   0x15d1
  51561d:	xor    BYTE PTR [ebx-0xf],0xd2
  515621:	rcl    DWORD PTR [ebp-0x2d],cl
  515624:	and    esp,DWORD PTR [esi-0x5a]
  515627:	enter  0x5d11,0xae
  51562b:	in     eax,dx
  51562c:	and    ebx,DWORD PTR [ebx+0x2b087ff6]
  515632:	pop    ebp
  515633:	mov    ebx,0xc1eb35d3
  515638:	fstp   TBYTE PTR [ecx]
  51563a:	cmp    eax,0xce8e0e48
  51563f:	mov    ecx,0xcbdd6183
  515644:	jmp    0xaf50bed8
  515649:	mov    al,ds:0xf81763c3
  51564e:	dec    ebp
  51564f:	lds    ebx,FWORD PTR [ecx+0x1]
  515652:	mov    WORD PTR [eax+0x69],ds
  515655:	mov    edx,0x424dc173
  51565a:	inc    esi
  51565b:	xchg   BYTE PTR ds:0x2ae9d52a,cl
  515661:	sbb    DWORD PTR [edx],ebp
  515663:	and    BYTE PTR [edx+0x71],cl
  515666:	loope  0x515649
  515668:	pop    ss
  515669:	jnp    0x5156c8
  51566b:	or     DWORD PTR [edi+0x5d],ebp
  51566e:	dec    esi
  51566f:	(bad)  [eax-0x66]
  515672:	xlat   BYTE PTR ds:[ebx]
  515673:	jle    0x515603
  515675:	retf   
  515676:	mov    ah,0x40
  515678:	xor    eax,0x766a8d8c
  51567d:	and    BYTE PTR [ecx-0x9],al
  515680:	fcmovbe st,st(7)
  515682:	jl     0x5156f2
  515684:	sbb    dl,BYTE PTR [edx-0x4d]
  515687:	push   ebp
  515688:	loop   0x5156e2
  51568a:	add    al,0xd1
  51568c:	stos   BYTE PTR es:[edi],al
  51568d:	daa    
  51568e:	inc    ebx
  51568f:	scas   al,BYTE PTR es:[edi]
  515690:	adc    eax,0x1f6aa259
  515695:	push   ds
  515696:	out    0x4e,al
  515698:	mov    bl,0xe0
  51569a:	inc    edi
  51569b:	sub    al,0xf2
  51569d:	xor    BYTE PTR [edx+0x19],bh
  5156a0:	mov    al,0x22
  5156a2:	pop    esp
  5156a3:	dec    esi
  5156a4:	push   eax
  5156a5:	mul    DWORD PTR [edx]
  5156a7:	sti    
  5156a8:	pushf  
  5156a9:	(bad)  
  5156ab:	repnz (bad) 
  5156ae:	loope  0x5156b9
  5156b0:	(bad)  
  5156b1:	ds das 
  5156b3:	clc    
  5156b4:	data16 mov al,ds:0xeeaee559
  5156ba:	idiv   DWORD PTR [eax+edx*4]
  5156bd:	inc    edx
  5156be:	fstp   QWORD PTR [edx-0x5b]
  5156c1:	mov    dh,0x2
  5156c3:	iret   
  5156c4:	js     0x515655
  5156c6:	arpl   WORD PTR [edi],ax
  5156c8:	std    
  5156c9:	fcmovu st,st(3)
  5156cb:	in     eax,dx
  5156cc:	mov    ah,0xe9
  5156ce:	sbb    DWORD PTR [ebp-0x4c],edi
  5156d1:	mov    BYTE PTR [esi-0x7bb9bb59],dh
  5156d7:	mov    dl,0x4
  5156d9:	(bad)  
  5156da:	push   esp
  5156db:	(bad)  
  5156dd:	fnstenv [ebp+0x38b03d6d]
  5156e3:	mov    al,0xab
  5156e5:	cmp    BYTE PTR [ecx-0x69],bh
  5156e8:	aam    0x19
  5156ea:	mov    ds:0x201c207c,al
  5156ef:	aam    0xd9
  5156f1:	rcl    eax,cl
  5156f3:	add    al,0xd4
  5156f5:	push   0x13df878e
  5156fa:	add    DWORD PTR [edi+edi*2-0x3],esp
  5156fe:	jns    0x515738
  515700:	xchg   ebp,eax
  515701:	jno    0x515685
  515703:	dec    ecx
  515704:	xor    ah,BYTE PTR [ecx-0x17f90b43]
  51570a:	ja     0x51571b
  51570c:	pop    ecx
  51570d:	mov    edi,0xd151a9e
  515712:	mov    cl,BYTE PTR [ecx+0x26]
  515715:	xchg   esi,eax
  515716:	pop    es
  515717:	or     BYTE PTR [esi+0x6b],al
  51571a:	inc    ebp
  51571b:	fsub   DWORD PTR [edi+0x41c7c634]
  515721:	and    al,0x30
  515723:	cwde   
  515724:	fmul   QWORD PTR [ebp+ebp*4-0xbddc671]
  51572b:	ficomp WORD PTR [edi+0x7d]
  51572e:	cwde   
  51572f:	sar    ch,1
  515731:	jle    0x515717
  515733:	call   0xed852b50
  515738:	add    al,0x7f
  51573a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51573b:	add    BYTE PTR [ecx+ecx*8-0x5445cac6],bh
  515742:	cli    
  515743:	rol    BYTE PTR [edi+0x2593e21a],1
  515749:	jb     0x5156f8
  51574b:	mov    eax,ds:0x4608a165
  515750:	push   ecx
  515751:	imul   edx,DWORD PTR [ebp+ecx*4-0x2eae78fc],0xda638a51
  51575c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51575d:	pop    ecx
  51575e:	hlt    
  51575f:	mov    ah,0x67
  515761:	mov    edx,0x4bb852b0
  515766:	push   0xffffffaa
  515768:	fsubp  st(1),st
  51576a:	xchg   BYTE PTR [edx],dh
  51576c:	xor    DWORD PTR [ebp+ebp*8-0x4a1a65c6],edx
  515773:	lods   eax,DWORD PTR ds:[esi]
  515774:	cdq    
  515775:	pop    DWORD PTR [esi]
  515777:	cli    
  515778:	mov    ch,0x88
  51577a:	or     ah,cl
  51577c:	mov    al,0x4
  51577e:	and    DWORD PTR cs:[ecx-0x31bc5a50],ebp
  515785:	xchg   BYTE PTR [ecx],al
  515787:	sbb    al,0x29
  515789:	lods   al,BYTE PTR ds:[esi]
  51578a:	sbb    edi,DWORD PTR [ebx]
  51578c:	mov    bl,0x1
  51578e:	and    eax,0x51088032
  515793:	xchg   ebx,eax
  515794:	inc    eax
  515795:	push   edx
  515796:	int3   
  515797:	or     edi,esp
  515799:	call   0x521a7792
  51579e:	mov    eax,ds:0x3f8f229b
  5157a3:	pop    ebx
  5157a4:	mov    bh,0xd1
  5157a6:	mov    ebx,0x35a1b0f7
  5157ab:	xor    eax,0x3ce67a6
  5157b0:	mov    ebx,0xb720bc52
  5157b5:	fdiv   DWORD PTR [ebp-0x799c9446]
  5157bb:	inc    edi
  5157bc:	jg     0x515835
  5157be:	inc    esp
  5157bf:	cmp    DWORD PTR [edi+0xa0c8433],edx
  5157c5:	arpl   WORD PTR [ebx+0x2c],sp
  5157c8:	mov    cl,0x29
  5157ca:	dec    edx
  5157cb:	(bad)  
  5157cc:	and    al,0x8
  5157ce:	data16 or al,0x93
  5157d1:	(bad)  
  5157d2:	jno    0x5157f6
  5157d4:	clc    
  5157d5:	icebp  
  5157d6:	out    0x72,eax
  5157d8:	es mov cl,0xb8
  5157db:	add    ch,BYTE PTR [esi+0x441b4a63]
  5157e1:	inc    ecx
  5157e2:	scas   al,BYTE PTR es:[edi]
  5157e3:	enter  0x9408,0xb1
  5157e7:	pushf  
  5157e8:	jno    0x5157e4
  5157ea:	clc    
  5157eb:	aad    0x9
  5157ed:	jecxz  0x515819
  5157ef:	sbb    al,BYTE PTR [ebx+0x3d]
  5157f2:	push   edx
  5157f3:	imul   ecx,DWORD PTR [edi+0x71],0xffffffdc
  5157f7:	sbb    al,0xad
  5157f9:	pop    ebx
  5157fa:	mov    al,ds:0x840b4721
  5157ff:	loop   0x5157f1
  515801:	push   esp
  515802:	pushf  
  515803:	pop    edi
  515804:	cmp    al,0x5c
  515806:	ins    BYTE PTR es:[edi],dx
  515807:	(bad)  
  515808:	out    0x99,al
  51580a:	cmp    DWORD PTR gs:[edx+0x61],0xffffffbe
  51580f:	ins    BYTE PTR es:[edi],dx
  515810:	push   cs
  515811:	or     WORD PTR [edi-0x6e17cf8d],di
  515818:	cld    
  515819:	mov    cl,0x5c
  51581b:	pop    ecx
  51581c:	mov    ch,0x46
  51581e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51581f:	test   DWORD PTR [ecx+0x3],esp
  515822:	int3   
  515823:	sahf   
  515824:	clc    
  515825:	mov    ecx,0xa49121b9
  51582a:	add    esi,DWORD PTR [edi+0x66254b69]
  515830:	mov    ecx,DWORD PTR ds:0x34c20112
  515836:	fimul  DWORD PTR [edx+0x676c493c]
  51583c:	test   edx,edx
  51583e:	add    dl,BYTE PTR [edx-0xfa43231]
  515844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515845:	pusha  
  515846:	sbb    dh,BYTE PTR [ebx+ecx*4+0x71bc300a]
  51584d:	test   al,0x22
  51584f:	aam    0xd9
  515851:	mov    dh,0xc7
  515853:	jns    0x5158a2
  515855:	aad    0xb3
  515857:	push   0xf95971a
  51585c:	iret   
  51585d:	lock cli 
  51585f:	xchg   ebx,eax
  515860:	outs   dx,DWORD PTR ds:[esi]
  515861:	pusha  
  515862:	sbb    esp,esi
  515864:	sub    al,0x23
  515866:	mov    al,ds:0xed842c6
  51586b:	xchg   esi,eax
  51586c:	sbb    eax,0x8c03e6a0
  515871:	push   edi
  515872:	or     BYTE PTR [ecx+0x2],dh
  515875:	or     ah,bl
  515877:	jle    0x51584e
  515879:	icebp  
  51587a:	xchg   edx,eax
  51587b:	nop
  51587c:	pop    ecx
  51587d:	inc    edx
  51587e:	jbe    0x5158dd
  515880:	mov    ch,0x6b
  515882:	mov    edx,0xb2d7ae4d
  515887:	into   
  515888:	(bad)  
  515889:	jns    0x51586b
  51588b:	es mov al,0xd6
  51588e:	imul   ecx,DWORD PTR [ecx],0xa59aa1aa
  515894:	mov    bh,0x9b
  515896:	jnp    0x5158bd
  515898:	loope  0x5158e7
  51589a:	jns    0x5158e5
  51589c:	sar    DWORD PTR [edx],0x3
  51589f:	mov    esp,0x8ea0f0a
  5158a4:	push   ebp
  5158a5:	cli    
  5158a6:	jne    0x51590d
  5158a8:	sahf   
  5158a9:	inc    ebx
  5158aa:	and    DWORD PTR [ecx],0x24
  5158ad:	shl    dh,1
  5158af:	daa    
  5158b0:	sub    cl,BYTE PTR [ecx-0x6b]
  5158b3:	dec    ebx
  5158b4:	cmp    eax,0xdffc82cd
  5158b9:	loopne 0x51585f
  5158bb:	test   BYTE PTR [ebx+0x70845001],ah
  5158c1:	pop    ss
  5158c2:	(bad)
  5158c6:	mov    ecx,0xdcffc0ee
  5158cb:	jne    0x5158c0
  5158cd:	mov    ds:0xda0c025d,al
  5158d2:	les    edx,FWORD PTR [edi+0x6fbc3ab7]
  5158d8:	ds std 
  5158da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5158db:	mov    dh,0xe6
  5158dd:	arpl   WORD PTR [ebx+0x66c29767],cx
  5158e3:	lods   al,BYTE PTR ds:[esi]
  5158e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5158e5:	jl     0x5158f4
  5158e7:	pop    esp
  5158e8:	dec    edi
  5158e9:	lds    esi,FWORD PTR [edx-0x54]
  5158ec:	dec    eax
  5158ed:	in     eax,0x42
  5158ef:	stos   BYTE PTR es:[edi],al
  5158f0:	or     edi,DWORD PTR [edx]
  5158f2:	mov    ch,0x1c
  5158f4:	addr16 pushf 
  5158f6:	sub    cl,BYTE PTR [eax-0x1e]
  5158f9:	(bad)
  5158fd:	popf   
  5158fe:	not    BYTE PTR cs:[eax-0x49]
  515902:	pushf  
  515903:	inc    edi
  515904:	add    bh,BYTE PTR [ebx+0x271d3eff]
  51590a:	dec    ebx
  51590b:	and    esp,DWORD PTR [eax-0x5f]
  51590e:	lea    ecx,[ebp+0x69]
  515911:	add    ch,BYTE PTR [ecx]
  515913:	jmp    0x87b0:0xadc14a14
  51591a:	mov    dh,0x98
  51591c:	out    dx,al
  51591d:	int3   
  51591e:	mov    ebp,0xfce2936d
  515923:	and    ch,BYTE PTR [edi+0x79ae9df2]
  515929:	mov    al,0x17
  51592b:	add    BYTE PTR [esi],ch
  51592d:	mov    eax,ds:0x566f7ca
  515932:	pop    ebx
  515933:	cmp    eax,0xf1af5b0b
  515938:	mov    ah,0x1a
  51593a:	adc    dl,BYTE PTR [eax+0x31781b76]
  515940:	adc    ecx,esi
  515942:	pop    ss
  515943:	ror    DWORD PTR [edi-0x6cc442a4],1
  515949:	stos   DWORD PTR es:[edi],eax
  51594a:	xlat   BYTE PTR ds:[ebx]
  51594b:	aaa    
  51594c:	dec    eax
  51594d:	pushf  
  51594e:	adc    ecx,DWORD PTR [eax]
  515950:	aad    0xa1
  515952:	fdivr  st(2),st
  515954:	push   edi
  515955:	jp     0x515951
  515957:	dec    ecx
  515958:	mov    ds:0x950df9bf,eax
  51595d:	jb     0x5159ce
  51595f:	add    al,0xed
  515961:	cmc    
  515962:	loope  0x51599f
  515964:	mov    eax,0xa3940f41
  515969:	push   cs
  51596a:	jl     0x515996
  51596c:	cmp    cl,BYTE PTR [esi]
  51596e:	push   esp
  51596f:	pop    ecx
  515970:	outs   dx,DWORD PTR ds:[esi]
  515971:	rcr    ah,1
  515973:	fimul  WORD PTR [esi+0x7d17ee05]
  515979:	sbb    ebp,ecx
  51597b:	call   0x25486ecb
  515980:	sub    dl,dh
  515982:	pop    ss
  515983:	add    al,0x34
  515985:	mov    eax,0x97627014
  51598a:	(bad)  
  51598b:	jge    0x5159d4
  51598d:	xchg   edx,eax
  51598e:	add    al,0xd4
  515990:	nop
  515991:	fs test ebp,0xd1fad4e6
  515998:	jle    0x5159eb
  51599a:	jmp    0x7729:0xd6bff6d6
  5159a1:	xchg   edi,eax
  5159a2:	xor    al,0xb
  5159a4:	cs nop
  5159a6:	pop    ds
  5159a7:	push   ebp
  5159a8:	mov    dl,0x6e
  5159aa:	push   ebp
  5159ab:	into   
  5159ac:	sbb    bl,dh
  5159ae:	cmp    bh,ch
  5159b0:	add    BYTE PTR [esi+ecx*2+0x22c4928b],ch
  5159b7:	ds add eax,0xbf6df338
  5159bd:	xchg   edi,eax
  5159be:	hlt    
  5159bf:	and    ch,0x80
  5159c2:	xchg   esp,eax
  5159c3:	das    
  5159c4:	pop    ebx
  5159c5:	cs add eax,0x9e32f224
  5159cb:	fst    DWORD PTR [edx]
  5159cd:	mov    ch,BYTE PTR [edx+0x68]
  5159d0:	and    cl,BYTE PTR [esp+edi*1]
  5159d3:	dec    ebp
  5159d4:	push   ss
  5159d5:	pop    edi
  5159d6:	ins    DWORD PTR es:[edi],dx
  5159d7:	pop    edi
  5159d8:	or     edi,DWORD PTR [ecx+eax*2]
  5159db:	cmp    al,0x26
  5159dd:	and    ah,bh
  5159df:	(bad)  
  5159e0:	inc    ecx
  5159e1:	pop    esi
  5159e2:	rol    BYTE PTR [esi+0x517520fd],0x5a
  5159e9:	inc    edx
  5159ea:	push   0x3a
  5159ec:	sahf   
  5159ed:	addr16 (bad) 
  5159ef:	mov    edi,0xeb1ef762
  5159f4:	test   dh,ch
  5159f6:	push   0xcac6c06b
  5159fb:	push   ebx
  5159fc:	adc    DWORD PTR [esi],edx
  5159fe:	pop    ss
  5159ff:	xchg   esi,eax
  515a00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515a01:	cmp    ebp,eax
  515a03:	xchg   ebp,eax
  515a04:	cli    
  515a05:	cmp    BYTE PTR [edx],0xfe
  515a08:	dec    esi
  515a09:	mov    esp,0xa7789a84
  515a0e:	retf   0x12de
  515a11:	gs xchg edx,eax
  515a13:	nop
  515a14:	(bad)  [edi]
  515a16:	popf   
  515a17:	mov    bl,0xb4
  515a19:	call   0x269d27d
  515a1e:	add    ch,BYTE PTR [ebp+edx*4+0x4]
  515a22:	retf   
  515a23:	jns    0x515a90
  515a25:	das    
  515a26:	sub    DWORD PTR [ecx+0x7b57fc91],esp
  515a2c:	int    0xad
  515a2e:	xchg   edx,eax
  515a2f:	mov    dl,0x66
  515a31:	mov    bh,0xa6
  515a33:	shl    edx,0x4e
  515a36:	fdiv   DWORD PTR [eax]
  515a38:	(bad)  
  515a39:	fcmovnbe st,st(3)
  515a3b:	add    DWORD PTR [esi],0xe5958bd2
  515a41:	cmp    DWORD PTR [eax-0x5f],ebx
  515a44:	sbb    ch,BYTE PTR fs:[ebp-0x47]
  515a48:	popa   
  515a49:	and    edx,esp
  515a4b:	(bad)  
  515a4c:	lods   eax,DWORD PTR ds:[esi]
  515a4d:	xchg   edx,eax
  515a4e:	mov    ds:0x19263ae0,al
  515a53:	(bad)  
  515a54:	xlat   BYTE PTR ds:[ebx]
  515a55:	sbb    BYTE PTR [edx-0x4b],0x68
  515a59:	add    al,0x25
  515a5b:	pop    edx
  515a5c:	bound  ecx,QWORD PTR [ebx]
  515a5e:	push   ecx
  515a5f:	jg     0x515ab6
  515a61:	xchg   ecx,eax
  515a62:	mov    eax,0xae3d049f
  515a67:	jno    0x515a40
  515a69:	mov    bl,0x9f
  515a6b:	cmc    
  515a6c:	sub    DWORD PTR [eax],ebx
  515a6e:	scas   al,BYTE PTR es:[edi]
  515a6f:	rcl    dh,1
  515a71:	test   BYTE PTR [edi],0xb3
  515a74:	jns    0x515ac0
  515a76:	(bad)  
  515a77:	fidiv  DWORD PTR [ebx+ebx*1]
  515a7a:	ins    BYTE PTR es:[edi],dx
  515a7b:	dec    ebx
  515a7c:	xchg   ebx,eax
  515a7d:	lahf   
  515a7e:	fidiv  WORD PTR [esi+ecx*4-0x2a]
  515a82:	sub    ch,BYTE PTR gs:[ebp+ebx*2-0x7f]
  515a87:	cwde   
  515a88:	cs enter 0x2dff,0x79
  515a8d:	fiadd  WORD PTR [edx+0xf67c9c6]
  515a93:	loopne 0x515a5d
  515a95:	jl     0x515aa1
  515a97:	jecxz  0x515a85
  515a99:	dec    ebp
  515a9a:	pusha  
  515a9b:	cld    
  515a9c:	and    eax,0x9cce832b
  515aa1:	sub    eax,0xe6999702
  515aa6:	mov    cl,0xe7
  515aa8:	sub    al,0xc4
  515aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515aab:	or     eax,0xe41ce86c
  515ab0:	pinsrw mm3,WORD PTR [esi],0x11
  515ab4:	pop    ss
  515ab5:	inc    esp
  515ab6:	dec    edx
  515ab7:	lock outs dx,BYTE PTR ds:[esi]
  515ab9:	sub    BYTE PTR [eax-0x5c],dh
  515abc:	pop    edx
  515abd:	cmp    al,0x31
  515abf:	popf   
  515ac0:	call   DWORD PTR [ecx+ebp*8-0x38]
  515ac4:	xchg   esi,eax
  515ac5:	mov    dh,dl
  515ac7:	and    al,0xfd
  515ac9:	test   BYTE PTR [esp+ebx*2],ch
  515acc:	fsub   st,st(4)
  515ace:	mov    BYTE PTR [ecx+0x7af65041],cl
  515ad4:	test   BYTE PTR [ebp+ebx*4+0x5190f8bd],al
  515adb:	enter  0x9fe8,0x6b
  515adf:	and    BYTE PTR [edx+0x72dd7af4],0xe8
  515ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515ae7:	inc    edi
  515ae8:	in     eax,dx
  515ae9:	xchg   esp,eax
  515aea:	jmp    0x515ae0
  515aec:	jbe    0x515afd
  515aee:	clc    
  515aef:	jne    0x515ad2
  515af1:	hlt    
  515af2:	or     ecx,DWORD PTR [ebp-0x19]
  515af5:	push   eax
  515af6:	adc    al,ah
  515af8:	ret    
  515af9:	cs js  0x515ae2
  515afc:	sbb    al,0xc9
  515afe:	jmp    0x3ef2:0x25e87395
  515b05:	stos   BYTE PTR es:[edi],al
  515b06:	test   BYTE PTR [edx+ecx*8],ah
  515b09:	dec    esp
  515b0a:	mov    ebp,0xf26a8241
  515b0f:	sbb    al,ch
  515b11:	popf   
  515b12:	cmp    BYTE PTR [ebx],dl
  515b14:	iret   
  515b15:	fsubr  DWORD PTR [edi]
  515b17:	xor    BYTE PTR [ebx-0x7d],bl
  515b1a:	mov    cl,0xed
  515b1c:	mov    cl,BYTE PTR [ecx-0x507b5111]
  515b22:	loopne 0x515b1c
  515b24:	(bad)  
  515b26:	xchg   esi,eax
  515b27:	pop    ebx
  515b28:	nop
  515b29:	mov    ebx,0x64a83cfc
  515b2e:	jmp    0x86ee3a26
  515b33:	bound  eax,QWORD PTR [ebx]
  515b35:	jmp    0x2a921482
  515b3a:	sbb    ebx,edx
  515b3c:	test   eax,0x410d1df6
  515b41:	fwait
  515b42:	or     al,BYTE PTR [esi]
  515b44:	mov    BYTE PTR [eax+ebx*8-0x3fb28cd7],ah
  515b4b:	ins    DWORD PTR es:[edi],dx
  515b4c:	and    ah,BYTE PTR [ecx+0x78]
  515b4f:	mov    dl,bl
  515b51:	xor    eax,0x4b9b8aae
  515b56:	adc    BYTE PTR [ecx-0x32],cl
  515b59:	in     eax,0x10
  515b5b:	cmp    DWORD PTR [eax+0x4d],0x30
  515b5f:	adc    DWORD PTR [ebp+0x6a],esp
  515b62:	les    ecx,FWORD PTR [ecx]
  515b64:	sahf   
  515b65:	aam    0x89
  515b67:	inc    edx
  515b68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515b69:	push   0xee900469
  515b6e:	loopne 0x515b57
  515b70:	outs   dx,BYTE PTR ds:[esi]
  515b71:	(bad)  
  515b72:	mov    esi,0x94c24800
  515b77:	jae    0x515b57
  515b79:	dec    esp
  515b7a:	jmp    0xe2a3d701
  515b7f:	lock sub BYTE PTR ss:[esi-0x29],bl
  515b84:	jno    0x515b56
  515b86:	push   ds
  515b87:	loope  0x515be9
  515b89:	adc    al,0xb3
  515b8b:	cmp    BYTE PTR [ebx+eax*8-0x33],dl
  515b8f:	jbe    0x515bb3
  515b91:	in     al,0x36
  515b93:	sti    
  515b94:	jbe    0x515bf6
  515b96:	std    
  515b97:	inc    eax
  515b98:	sub    BYTE PTR [esi],ch
  515b9a:	cld    
  515b9b:	pop    edx
  515b9c:	fadd   QWORD PTR [ecx]
  515b9e:	fs (bad) 
  515ba0:	xchg   esi,eax
  515ba1:	and    bl,ah
  515ba3:	rcr    DWORD PTR [ebx+0x76],cl
  515ba6:	dec    esi
  515ba7:	push   es
  515ba8:	xor    DWORD PTR [ecx+0x6a9d2ac],esp
  515bae:	not    BYTE PTR ds:0x51eb67f8
  515bb4:	cmp    ebx,ebp
  515bb6:	ja     0x515be9
  515bb8:	lock add edx,DWORD PTR ds:0x9969c4a1
  515bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  515bc0:	mov    bh,0x8f
  515bc2:	(bad)  
  515bc3:	aam    0x7b
  515bc5:	arpl   WORD PTR [ecx+0x381728b5],sp
  515bcb:	scas   eax,DWORD PTR es:[edi]
  515bcc:	jnp    0x515b58
  515bce:	sar    ecx,0xe
  515bd1:	jbe    0x515b96
  515bd3:	imul   esi,DWORD PTR [esi],0x48
  515bd6:	fadd   st,st(0)
  515bd8:	sub    DWORD PTR [eax+0x32bb161a],eax
  515bde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515bdf:	pushf  
  515be0:	mov    ebp,0xdfb718c6
  515be5:	add    dh,BYTE PTR [esi+0x6a]
  515be8:	popa   
  515be9:	xchg   ebx,eax
  515bea:	pop    ebx
  515beb:	call   0x16d9fa27
  515bf0:	adc    bh,BYTE PTR [ecx]
  515bf2:	xor    ah,ch
  515bf4:	xchg   ebx,eax
  515bf5:	add    BYTE PTR [edi-0x6a],dh
  515bf8:	pop    ss
  515bf9:	mov    ebp,0x46651b85
  515bfe:	icebp  
  515bff:	das    
  515c00:	and    DWORD PTR [edx+eiz*4],ecx
  515c03:	pop    ds
  515c04:	inc    esi
  515c05:	push   esp
  515c06:	pop    ds
  515c07:	(bad)  
  515c0a:	mov    ch,0xd2
  515c0c:	xchg   DWORD PTR [eax-0xccf487b],edi
  515c12:	fwait
  515c13:	sub    BYTE PTR [eax+0x77],bl
  515c16:	mov    esi,0x48dc8a83
  515c1b:	int    0xcb
  515c1d:	js     0x515c1e
  515c1f:	in     eax,0x7e
  515c21:	inc    esp
  515c22:	lea    esp,[esi+ebx*8]
  515c25:	xchg   edx,eax
  515c26:	jmp    0xa4e4:0xe3cd342
  515c2d:	test   eax,0x5b937b9c
  515c32:	jno    0x515bec
  515c34:	inc    edx
  515c35:	test   eax,0x683ec4c1
  515c3a:	pop    ecx
  515c3b:	call   0xd9ac:0x3673434c
  515c42:	mov    ds:0xcd52b1ae,al
  515c47:	sti    
  515c48:	int    0x3d
  515c4a:	fbld   TBYTE PTR [ebx+0xdef6bc6]
  515c50:	xchg   esp,eax
  515c51:	jmp    0xd707882d
  515c56:	fisttp DWORD PTR [edx-0x62b7373c]
  515c5c:	push   esp
  515c5d:	fild   WORD PTR [ebx+eiz*8]
  515c60:	lock sbb eax,0x1977138
  515c66:	xchg   BYTE PTR [ecx+0x138209c1],bh
  515c6c:	xchg   edi,eax
  515c6d:	jecxz  0x515cac
  515c6f:	push   ebx
  515c70:	sub    DWORD PTR [edi],esi
  515c72:	mov    cl,0x2f
  515c74:	push   es
  515c75:	stos   DWORD PTR es:[edi],eax
  515c76:	jmp    0x515c2a
  515c78:	mov    dh,0xa0
  515c7a:	sub    DWORD PTR [ebx-0x41],0xd386175d
  515c81:	call   FWORD PTR [bx+si+0x7fce]
  515c86:	(bad)  
  515c88:	loop   0x515c97
  515c8a:	sbb    eax,0x5870f751
  515c8f:	aaa    
  515c90:	lea    edx,[ebx+0x287d9fd2]
  515c96:	loopne 0x515c35
  515c98:	inc    ebp
  515c99:	aam    0xc4
  515c9b:	cmp    al,0x88
  515c9d:	and    DWORD PTR [ebp-0x2e],edi
  515ca0:	xchg   esp,eax
  515ca1:	jno    0x515d04
  515ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515ca4:	mov    edx,0x7784edd8
  515ca9:	in     al,0x4
  515cab:	ds (bad) 
  515cad:	out    dx,al
  515cae:	popa   
  515caf:	cmp    al,0xf4
  515cb1:	loope  0x515d0c
  515cb3:	gs aas 
  515cb5:	imul   ebx,DWORD PTR [ebp-0x2a],0xbf3a9c34
  515cbc:	adc    DWORD PTR [ebx+0x57],edi
  515cbf:	cmp    BYTE PTR [eax+0x22],bh
  515cc2:	and    ah,BYTE PTR [eax-0x748ed948]
  515cc8:	out    0xde,eax
  515cca:	sub    al,BYTE PTR [esi+0x1d]
  515ccd:	push   ebx
  515cce:	int3   
  515ccf:	mov    dh,0xd0
  515cd1:	mov    bl,BYTE PTR [edi-0x5309aef9]
  515cd7:	jbe    0x515ce8
  515cd9:	push   esp
  515cda:	pop    es
  515cdb:	leave  
  515cdc:	icebp  
  515cdd:	xchg   ecx,eax
  515cde:	(bad)  
  515cdf:	jle    0x515d17
  515ce1:	mov    ch,BYTE PTR [edi]
  515ce3:	xchg   esi,eax
  515ce4:	iret   
  515ce5:	jnp    0x515cf5
  515ce7:	or     esi,DWORD PTR [ebx+ebx*4-0x71]
  515ceb:	dec    ebp
  515cec:	lods   al,BYTE PTR ds:[esi]
  515ced:	lods   al,BYTE PTR ds:[esi]
  515cee:	sar    ebp,0xea
  515cf1:	add    al,0x7c
  515cf3:	or     BYTE PTR [eax+0x24ca74b7],ch
  515cf9:	add    edx,DWORD PTR [esp+eax*4+0xc]
  515cfd:	(bad)  
  515cfe:	jnp    0x515ce2
  515d00:	ret    0x20dd
  515d03:	cmp    BYTE PTR [edi],al
  515d05:	loope  0x515d83
  515d07:	clc    
  515d08:	push   ecx
  515d09:	(bad)  
  515d0a:	shl    dl,cl
  515d0c:	inc    ebx
  515d0d:	jns    0x515d82
  515d0f:	inc    ebp
  515d10:	lahf   
  515d11:	mov    bh,0x44
  515d13:	mov    eax,DWORD PTR [ecx-0x47]
  515d16:	mov    ds,WORD PTR [esi+0xd]
  515d19:	aad    0x3d
  515d1b:	cmp    esi,DWORD PTR [ebx+eiz*4]
  515d1e:	xchg   edx,eax
  515d1f:	jmp    0x9740:0x35856023
  515d26:	adc    al,0x4d
  515d28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515d29:	inc    edi
  515d2a:	call   0xf9d08d95
  515d2f:	cmp    al,0x46
  515d31:	(bad)  
  515d32:	xlat   BYTE PTR ds:[ebx]
  515d33:	jne    0x515cc1
  515d35:	jecxz  0x515d68
  515d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515d38:	or     eax,0xd367c7b4
  515d3d:	imul   ecx,DWORD PTR ds:0xfdf7da99,0x9
  515d44:	test   ebp,ecx
  515d46:	ds (bad) 
  515d48:	xchg   ecx,eax
  515d49:	mov    dl,0xf0
  515d4b:	pop    esi
  515d4c:	test   BYTE PTR [ecx],ah
  515d4e:	in     eax,0x37
  515d50:	sbb    DWORD PTR [eax-0x6a],eax
  515d53:	mov    esp,0x129800b8
  515d58:	test   BYTE PTR [ebp+ecx*2-0x50979917],al
  515d5f:	sti    
  515d60:	jno    0x515cff
  515d62:	shl    DWORD PTR [edx-0x67],1
  515d65:	shl    ecx,0x84
  515d68:	cdq    
  515d69:	push   ebx
  515d6a:	in     eax,dx
  515d6b:	cwde   
  515d6c:	push   0x6f
  515d6e:	adc    ecx,ebx
  515d70:	or     BYTE PTR [ecx+0x64f428dc],0xd4
  515d77:	ss mov ah,0x13
  515d7a:	(bad)  
  515d7b:	out    0x53,al
  515d7d:	test   DWORD PTR [ecx],edx
  515d7f:	fadd   DWORD PTR [edi]
  515d81:	pushf  
  515d82:	inc    edx
  515d83:	adc    eax,0xca954aeb
  515d88:	rol    DWORD PTR [ecx+0xc],0xc4
  515d8c:	push   ss
  515d8d:	mov    eax,0x93bcfb2e
  515d92:	mov    gs,WORD PTR fs:[eax+esi*4]
  515d96:	jg     0x515d48
  515d98:	nop
  515d99:	leave  
  515d9a:	or     BYTE PTR [ecx],dh
  515d9c:	iret   
  515d9d:	lods   al,BYTE PTR ds:[esi]
  515d9e:	mov    cl,0xb5
  515da0:	lods   eax,DWORD PTR ds:[esi]
  515da1:	pop    edi
  515da2:	test   DWORD PTR es:[esi+0x193a3c98],esi
  515da9:	inc    edx
  515daa:	popf   
  515dab:	lods   al,BYTE PTR ds:[esi]
  515dac:	jmp    0x515d68
  515dae:	sti    
  515daf:	xor    ch,0x42
  515db2:	rcr    BYTE PTR [esi-0x52],1
  515db5:	adc    bl,bl
  515db7:	adc    esi,DWORD PTR [ebx]
  515db9:	dec    ebp
  515dba:	xor    ch,dh
  515dbc:	rcr    BYTE PTR [ebx+0x3329dabc],cl
  515dc2:	inc    ebp
  515dc3:	retf   
  515dc4:	and    DWORD PTR [edi],0x822b271
  515dca:	fstp   QWORD PTR ds:0x2c619e
  515dd0:	mov    edx,0x43772cb0
  515dd5:	adc    DWORD PTR [ebp-0x3b],0xfffffff2
  515dd9:	shr    DWORD PTR ds:0xea38259f,1
  515ddf:	adc    DWORD PTR [esi],edi
  515de1:	mov    ebp,0x3ca11566
  515de6:	mov    eax,DWORD PTR [ebx+0x5eee3ec3]
  515dec:	push   ebx
  515ded:	pop    esp
  515dee:	retf   
  515def:	xor    BYTE PTR [eax-0x7],0xe8
  515df3:	lods   eax,DWORD PTR ds:[esi]
  515df4:	jae    0x515dcd
  515df6:	popa   
  515df7:	mov    dh,0xf8
  515df9:	inc    edx
  515dfa:	ror    BYTE PTR [ecx-0x77],1
  515dfd:	mov    eax,0x9cae7bb
  515e02:	dec    ecx
  515e03:	stos   DWORD PTR es:[edi],eax
  515e04:	aaa    
  515e05:	inc    edi
  515e06:	xchg   BYTE PTR [esi-0x64fc9a1c],dl
  515e0c:	mov    bh,dl
  515e0e:	fwait
  515e0f:	out    dx,eax
  515e10:	jmp    0x8380:0x686937f6
  515e17:	jle    0x515dec
  515e19:	imul   ebp,DWORD PTR ds:0x747f6c3c,0xfffffff2
  515e20:	and    esi,esp
  515e22:	mov    bl,0x1f
  515e24:	call   0x5db2c399
  515e29:	push   es
  515e2a:	cmp    al,0x5e
  515e2c:	loopne 0x515e00
  515e2e:	arpl   WORD PTR [ebp+0x6a],sp
  515e31:	xor    ah,BYTE PTR [ebp-0x315f0938]
  515e37:	pop    ebx
  515e38:	(bad)  
  515e39:	(bad)  
  515e3a:	adc    BYTE PTR [ecx-0x3a],bl
  515e3d:	xchg   esi,eax
  515e3e:	mov    esi,0xfced86a3
  515e43:	cmp    BYTE PTR [edi+0x29],dl
  515e46:	call   0xfea3:0x3268c438
  515e4d:	into   
  515e4e:	mov    edi,0x5be6eb1
  515e53:	fwait
  515e54:	jae    0x515e65
  515e56:	pop    es
  515e57:	jle    0x515e6d
  515e59:	mov    al,0x64
  515e5b:	cmc    
  515e5c:	mov    dl,0xd3
  515e5e:	pop    ebx
  515e5f:	sub    DWORD PTR [ebp-0x70],0xffffffe1
  515e63:	xchg   ebp,eax
  515e64:	pop    edx
  515e65:	(bad)  
  515e66:	daa    
  515e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  515e68:	inc    ebx
  515e69:	mov    ecx,0x961da207
  515e6e:	(bad)  
  515e70:	sub    bh,BYTE PTR [ecx]
  515e72:	mov    cl,0x77
  515e74:	mov    ds:0x94c08d63,eax
  515e79:	push   edi
  515e7a:	push   ss
  515e7b:	jg     0x515e3f
  515e7d:	mov    dl,ah
  515e7f:	aam    0xfe
  515e81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515e82:	call   0x823a:0xd812b1aa
  515e89:	adc    BYTE PTR [eax+eax*4],dh
  515e8c:	or     al,0x53
  515e8e:	arpl   WORD PTR [edi-0x402629da],bx
  515e94:	in     al,0xed
  515e96:	inc    ebx
  515e97:	cmc    
  515e98:	xor    DWORD PTR [ebx+edx*8-0x436c4e28],ebx
  515e9f:	jo     0x515e5f
  515ea1:	lods   al,BYTE PTR ds:[esi]
  515ea2:	xor    BYTE PTR [edx+esi*4+0x6e],ah
  515ea6:	sbb    eax,0xcf638978
  515eab:	mov    bh,0x42
  515ead:	jo     0x515ed2
  515eaf:	xchg   esp,eax
  515eb0:	dec    eax
  515eb1:	adc    edi,DWORD PTR [edx+0x2a]
  515eb4:	jp     0x515eb7
  515eb6:	pop    edx
  515eb7:	mov    ds:0x3144b85f,al
  515ebc:	jnp    0x515ea1
  515ebe:	dec    ebx
  515ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515ec0:	fldenv [ebx+ebp*4]
  515ec3:	jne    0x515eb3
  515ec5:	jmp    0x2470ca6a
  515eca:	ins    DWORD PTR es:[edi],dx
  515ecb:	div    DWORD PTR [edx+0x1a38a04b]
  515ed1:	nop
  515ed2:	xor    cl,dh
  515ed4:	rol    bh,0x56
  515ed7:	cld    
  515ed8:	pop    ecx
  515ed9:	test   DWORD PTR [ebx],ebp
  515edb:	pop    edi
  515edc:	or     eax,0xcc4d572c
  515ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515ee2:	int3   
  515ee3:	jns    0x515f44
  515ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515ee6:	inc    ebp
  515ee7:	imul   esi,DWORD PTR ds:0x62ac8bcb,0xbf6f9c0
  515ef1:	push   edi
  515ef2:	push   eax
  515ef3:	mov    fs,eax
  515ef5:	and    dl,BYTE PTR [ebp+ecx*8-0x44]
  515ef9:	sbb    DWORD PTR [ebx-0x3843929a],0xffffffa3
  515f00:	jne    0x515f55
  515f02:	jge    0x515f69
  515f04:	lock mov ch,0xf6
  515f07:	sub    BYTE PTR [ebx-0x75],bl
  515f0a:	xchg   BYTE PTR [ecx],dl
  515f0c:	mov    ds:0xdd8dcaa9,al
  515f11:	dec    edi
  515f12:	repnz push eax
  515f14:	int3   
  515f15:	rol    cl,cl
  515f17:	adc    al,BYTE PTR [eax-0x6b47696]
  515f1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515f1e:	or     bl,ah
  515f20:	(bad)  [esi+0x41ad2286]
  515f26:	xchg   edi,eax
  515f27:	cmp    esp,DWORD PTR ds:0x2f6de1f8
  515f2d:	adc    BYTE PTR [edx],dl
  515f2f:	adc    eax,0xc94770d3
  515f34:	jo     0x515ed7
  515f36:	dec    edi
  515f37:	inc    ebx
  515f38:	cmp    dh,dl
  515f3a:	cld    
  515f3b:	mov    esi,0x10a83ef4
  515f40:	mov    ebp,0x6dd5b8f8
  515f45:	pop    eax
  515f46:	inc    eax
  515f47:	add    eax,0x1766374d
  515f4c:	fsub   st(3),st
  515f4e:	scas   al,BYTE PTR es:[edi]
  515f4f:	mov    ds:0xc24203f7,eax
  515f54:	test   BYTE PTR ds:0xbaeda530,bh
  515f5a:	sbb    esp,edi
  515f5c:	in     al,dx
  515f5d:	inc    ebx
  515f5e:	or     dl,BYTE PTR [ebx+0x696108ac]
  515f64:	cmp    DWORD PTR [eax],edi
  515f66:	fild   DWORD PTR [edi+0x33]
  515f69:	arpl   WORD PTR [esi],ax
  515f6b:	push   esi
  515f6c:	xor    al,0xae
  515f6e:	pop    edx
  515f6f:	cmp    eax,0x4cd6f5b8
  515f74:	or     ebx,DWORD PTR [edx+0x7d65c683]
  515f7a:	xor    al,BYTE PTR ds:0x8ce41622
  515f80:	push   es
  515f81:	push   0xffffff87
  515f83:	jnp    0x515f89
  515f85:	lds    eax,FWORD PTR [edi-0x68]
  515f88:	mov    al,0x78
  515f8a:	daa    
  515f8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  515f8c:	xchg   esp,eax
  515f8d:	xchg   ecx,ecx
  515f8f:	mov    fs,esi
  515f91:	pop    ecx
  515f92:	js     0x515f62
  515f94:	mov    ds:0x4154d532,eax
  515f99:	inc    esp
  515f9a:	stos   BYTE PTR es:[edi],al
  515f9b:	jecxz  0x515fa5
  515f9d:	lock mov eax,0x816ae3b2
  515fa3:	push   ss
  515fa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515fa5:	in     eax,0x9c
  515fa7:	cdq    
  515fa8:	in     al,0x54
  515faa:	xchg   ecx,eax
  515fab:	mov    ch,dl
  515fad:	mov    ah,0xc7
  515faf:	sub    esi,eax
  515fb1:	sub    DWORD PTR [edi-0x57],0xffffffd4
  515fb5:	sbb    BYTE PTR [esi+edi*8+0x413bd44],al
  515fbc:	ja     0x516028
  515fbe:	aaa    
  515fbf:	xchg   edi,eax
  515fc0:	sub    DWORD PTR [edx-0x16e057c0],eax
  515fc6:	sub    BYTE PTR [ebx-0x78],dl
  515fc9:	and    BYTE PTR [ebp-0x1e],bl
  515fcc:	gs cmp al,dl
  515fcf:	in     al,0x6f
  515fd1:	push   ebx
  515fd2:	add    eax,0xb48587fb
  515fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  515fd8:	mov    ebx,0x2859e9dd
  515fdd:	pop    es
  515fde:	add    BYTE PTR [ecx-0x25e7d340],dh
  515fe4:	pop    es
  515fe5:	sbb    al,0x2a
  515fe7:	loopne 0x51600d
  515fe9:	ins    BYTE PTR es:[edi],dx
  515fea:	retf   
  515feb:	mov    al,0x42
  515fed:	jecxz  0x51602d
  515fef:	jae    0x516001
  515ff1:	xchg   ebx,eax
  515ff2:	or     esp,DWORD PTR [esi-0x9]
  515ff5:	scas   eax,DWORD PTR es:[edi]
  515ff6:	xchg   esp,eax
  515ff7:	lahf   
  515ff8:	dec    edi
  515ff9:	push   es
  515ffa:	aad    0x7e
  515ffc:	out    dx,eax
  515ffd:	or     eax,0xf3241f2f
  516002:	pop    esp
  516003:	jl     0x515fc8
  516005:	ret    0x5ace
  516008:	test   eax,0x34995b8e
  51600d:	or     dh,BYTE PTR [eax-0x66679ff1]
  516013:	dec    ebp
  516014:	adc    al,0xf4
  516016:	or     DWORD PTR [edx+ebp*1],edx
  516019:	pop    esi
  51601a:	mov    eax,ds:0x556823b6
  51601f:	jno    0x516051
  516021:	cmp    eax,DWORD PTR [edi]
  516023:	jns    0x515fef
  516025:	sbb    eax,0x8593dab8
  51602a:	mov    esi,0xc27f3ad8
  51602f:	mov    ds:0xacf989c1,eax
  516034:	fnstsw WORD PTR [esi+0x706493a6]
  51603a:	xor    edi,DWORD PTR [edi+0x6f]
  51603d:	sbb    ebx,esi
  51603f:	jge    0x516006
  516041:	mov    WORD PTR [ebp+ecx*4-0x4f478148],?
  516048:	adc    ecx,DWORD PTR [edx+eiz*2-0x43]
  51604c:	jecxz  0x51602e
  51604e:	xchg   esp,eax
  51604f:	dec    ecx
  516050:	dec    eax
  516051:	xchg   edi,eax
  516052:	loopne 0x51604d
  516054:	and    ah,BYTE PTR [eax+0xc6adac5]
  51605a:	push   edx
  51605b:	(bad)  
  51605c:	dec    ebp
  51605d:	adc    dh,cl
  51605f:	int3   
  516060:	test   DWORD PTR [ebx-0x2d7a01c5],edx
  516066:	dec    esp
  516067:	push   edx
  516068:	out    dx,eax
  516069:	or     ebp,DWORD PTR [edx]
  51606b:	popa   
  51606c:	rcr    DWORD PTR [ebx],cl
  51606e:	dec    ebx
  51606f:	cmp    al,0x5f
  516071:	jmp    0x516090
  516073:	imul   edi
  516075:	add    ch,al
  516077:	sbb    eax,0xc754470e
  51607c:	inc    ch
  51607e:	jge    0x516012
  516080:	inc    esi
  516081:	lods   eax,DWORD PTR ds:[esi]
  516082:	lock std 
  516084:	push   esp
  516085:	ins    DWORD PTR es:[edi],dx
  516086:	into   
  516087:	inc    esi
  516088:	and    BYTE PTR [edi-0x46],0xf5
  51608c:	xor    al,0x3f
  51608e:	test   eax,0xba8e05e9
  516093:	iret   
  516094:	jl     0x516021
  516096:	data16 loope 0x51606f
  516099:	bound  esi,QWORD PTR [ebp-0x2aac4e76]
  51609f:	jmp    0xda946203
  5160a4:	ds mov ecx,0xe7a08b24
  5160aa:	push   ds
  5160ab:	push   0xffffffd1
  5160ad:	pop    esi
  5160ae:	jnp    0x5160bf
  5160b0:	sub    bl,BYTE PTR [edi+0x6e8e47a9]
  5160b6:	pop    ds
  5160b7:	(bad)  
  5160b8:	cld    
  5160b9:	push   edi
  5160ba:	jle    0x516127
  5160bc:	sub    al,0xac
  5160be:	outs   dx,BYTE PTR ds:[esi]
  5160bf:	fcom   DWORD PTR [ebp+0x6a08a4fb]
  5160c5:	stc    
  5160c6:	or     BYTE PTR [ebp+0x6eea577f],ch
  5160cc:	pop    edx
  5160cd:	out    0xad,al
  5160cf:	mov    dl,0xb8
  5160d1:	call   0x5ac17022
  5160d6:	mov    edx,0xd2fd4d87
  5160db:	mov    esp,0x74282a38
  5160e0:	lahf   
  5160e1:	out    dx,al
  5160e2:	pop    es
  5160e3:	cmp    al,0x1c
  5160e5:	xor    DWORD PTR [esi-0x41531c72],esi
  5160eb:	dec    edx
  5160ec:	jo     0x516151
  5160ee:	pop    eax
  5160ef:	xchg   ebx,eax
  5160f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5160f1:	or     edx,DWORD PTR [eax-0x70]
  5160f4:	outs   dx,BYTE PTR ds:[esi]
  5160f5:	dec    ecx
  5160f6:	cmp    DWORD PTR [edi-0x40],esp
  5160f9:	pop    eax
  5160fa:	pop    eax
  5160fb:	in     eax,0x74
  5160fd:	and    al,0x8f
  5160ff:	add    esp,DWORD PTR [ecx-0x59]
  516102:	xchg   edi,eax
  516103:	xor    al,bh
  516105:	(bad)
  516108:	xor    DWORD PTR [ebp+0x45e79706],eax
  51610e:	mov    al,0xe
  516110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516111:	or     al,0x49
  516113:	inc    ecx
  516114:	daa    
  516115:	cmp    eax,0xbfc8e30f
  51611a:	sub    bl,BYTE PTR [esi-0x2f517d3c]
  516120:	jecxz  0x516178
  516122:	adc    ebx,ebx
  516124:	je     0x5160c0
  516126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516127:	sbb    edi,ebx
  516129:	(bad)  
  51612a:	mov    esp,0x4f07ff14
  51612f:	push   eax
  516130:	sub    bl,BYTE PTR [ecx]
  516132:	xor    eax,0x7073cca2
  516137:	jnp    0x516196
  516139:	sub    dh,BYTE PTR [edx]
  51613b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51613c:	lods   al,BYTE PTR ds:[esi]
  51613d:	push   ss
  51613e:	rcr    DWORD PTR [esi],1
  516140:	(bad)  
  516141:	jge    0x516104
  516143:	das    
  516144:	add    ah,BYTE PTR [eax+0x69]
  516147:	mov    esp,DWORD PTR [edi-0x64479f2]
  51614d:	xor    eax,0xd3a9beb7
  516152:	xor    ebp,DWORD PTR [ecx]
  516154:	pop    esp
  516155:	clc    
  516156:	jge    0x5160ef
  516158:	push   cs
  516159:	jl     0x5161c0
  51615b:	mov    cl,0x23
  51615d:	in     al,dx
  51615e:	in     eax,0x31
  516160:	stc    
  516161:	fidiv  DWORD PTR [ebx]
  516163:	xchg   ebp,eax
  516164:	lahf   
  516165:	push   eax
  516166:	mov    bh,0x69
  516168:	xchg   DWORD PTR [eax],ecx
  51616a:	sub    ebp,DWORD PTR [edi]
  51616c:	enter  0x138d,0x77
  516170:	sahf   
  516171:	mov    ecx,0x9b173cb4
  516176:	jnp    0x5161d8
  516178:	and    DWORD PTR [edi],edx
  51617a:	sbb    bl,al
  51617c:	es inc esp
  51617e:	std    
  51617f:	test   bh,dh
  516181:	repnz pop ss
  516183:	add    ecx,esi
  516185:	and    dl,0xea
  516188:	cwde   
  516189:	sbb    esp,DWORD PTR [edi+0x20970787]
  51618f:	pusha  
  516190:	fidiv  DWORD PTR [edx]
  516192:	(bad)  
  516193:	aam    0x8f
  516195:	nop    DWORD PTR [esi-0x1]
  516199:	and    ebp,DWORD PTR [ecx+0x5f]
  51619c:	cmc    
  51619d:	ret    0x9b26
  5161a0:	fstp   st(6)
  5161a2:	iret   
  5161a3:	sahf   
  5161a4:	inc    esi
  5161a5:	pop    esp
  5161a6:	xlat   BYTE PTR ds:[ebx]
  5161a7:	loope  0x5161bc
  5161a9:	xchg   ebp,eax
  5161aa:	call   0xbe2e:0xcfe99fd7
  5161b1:	push   ecx
  5161b2:	lea    edx,[ebx]
  5161b4:	push   ebp
  5161b5:	outs   dx,BYTE PTR ds:[esi]
  5161b6:	and    ch,BYTE PTR [edi]
  5161b8:	mov    dh,0x97
  5161ba:	aas    
  5161bb:	leave  
  5161bc:	mov    WORD PTR [eax-0x393de926],ds
  5161c2:	(bad)  
  5161c3:	int    0x82
  5161c5:	jbe    0x516195
  5161c7:	jmp    0x73cf368c
  5161cc:	push   ebx
  5161cd:	call   FWORD PTR [ebp+0x30e40d0e]
  5161d3:	in     al,0xd5
  5161d5:	daa    
  5161d6:	jbe    0x5161c7
  5161d8:	push   eax
  5161d9:	push   cs
  5161da:	mov    ds:0x82818f05,eax
  5161df:	pushf  
  5161e0:	ror    ecx,cl
  5161e2:	test   BYTE PTR [ebx],cl
  5161e4:	or     al,0xb0
  5161e6:	pop    ebx
  5161e7:	cmp    esi,DWORD PTR [eax-0x7515a5f6]
  5161ed:	aaa    
  5161ee:	push   es
  5161ef:	fisttp DWORD PTR ds:0x2bbaef4c
  5161f5:	inc    eax
  5161f6:	mov    esi,0x9dd39dae
  5161fb:	repnz cmp bl,BYTE PTR [eax]
  5161fe:	pop    edi
  5161ff:	ds mov ebp,0xda830a7f
  516205:	mov    ss,WORD PTR [edi]
  516207:	fwait
  516208:	mov    ds:0x7f367ee9,al
  51620d:	test   DWORD PTR [esi+0x28],eax
  516210:	les    ebx,FWORD PTR [edx+ecx*1]
  516213:	push   edi
  516214:	inc    edx
  516215:	daa    
  516216:	push   0x40
  516218:	in     eax,dx
  516219:	inc    esi
  51621a:	push   ebx
  51621b:	leave  
  51621c:	mov    eax,ds:0xe154884
  516221:	xchg   esp,eax
  516222:	xor    eax,DWORD PTR [eax+0x7a1ebea7]
  516228:	cmp    edx,esi
  51622a:	cmp    ah,BYTE PTR [eax+0x77d3bb7c]
  516230:	jmp    0x5161ef
  516232:	jmp    0x5161cd
  516234:	outs   dx,BYTE PTR ds:[esi]
  516235:	les    eax,FWORD PTR [eax]
  516237:	test   al,0xc1
  516239:	mov    dl,0xe8
  51623b:	addr16 nop
  51623d:	sub    dl,BYTE PTR [ebx]
  51623f:	xlat   BYTE PTR ds:[ebx]
  516240:	pop    ecx
  516241:	(bad)  
  516242:	pop    eax
  516243:	ins    BYTE PTR es:[edi],dx
  516244:	fdiv   QWORD PTR [ebx]
  516246:	add    al,0x6
  516248:	hlt    
  516249:	xor    bl,BYTE PTR [ebp+ecx*1+0x18]
  51624d:	imul   esi,DWORD PTR [edi-0x15138969],0x5c46f039
  516257:	push   0x1a2adc4c
  51625c:	mov    al,0x90
  51625e:	or     ebp,DWORD PTR [esi+0x2540eff9]
  516264:	jne    0x516299
  516266:	mov    eax,ds:0xf0f859f4
  51626b:	lahf   
  51626c:	unpckhps xmm5,XMMWORD PTR [eax+0x2affeef8]
  516273:	cmp    BYTE PTR [edx+0x71f53302],al
  516279:	pop    es
  51627a:	call   0xc5068d39
  51627f:	cdq    
  516280:	inc    edx
  516281:	out    dx,eax
  516282:	test   BYTE PTR [ebp+0x30],0xe2
  516286:	inc    ebx
  516287:	test   al,0x8f
  516289:	call   0xa3775897
  51628e:	sbb    eax,0x226310a
  516293:	inc    esp
  516294:	lea    ebp,[eax]
  516296:	lock push edx
  516298:	in     al,dx
  516299:	jg     0x5162ff
  51629b:	mov    ebx,0xcfe932ba
  5162a0:	sub    eax,0xba60f6b6
  5162a5:	in     eax,0xe3
  5162a7:	jae    0x516288
  5162a9:	xchg   edi,eax
  5162aa:	sar    DWORD PTR [esi+0x58],cl
  5162ad:	mov    ss,WORD PTR [eax+esi*2+0x5626f27]
  5162b4:	ds add bh,dh
  5162b7:	popf   
  5162b8:	jecxz  0x516271
  5162ba:	xor    al,0x9d
  5162bc:	mov    BYTE PTR [ecx+0x5b],dh
  5162bf:	lds    edi,FWORD PTR [edi+0x7e9316d]
  5162c5:	add    DWORD PTR [ebx-0x72],ebx
  5162c8:	mul    DWORD PTR [esi+eiz*4+0x4c]
  5162cc:	cmp    al,0x3e
  5162ce:	or     dl,BYTE PTR [edi-0x7d]
  5162d1:	inc    esi
  5162d2:	sbb    cl,BYTE PTR [edx-0x557b59e4]
  5162d8:	jmp    0x8c58:0xd011bbe3
  5162df:	add    bl,BYTE PTR [ebp+0x55adb0d]
  5162e5:	dec    ecx
  5162e6:	jge    0x51635a
  5162e8:	div    DWORD PTR [ecx+0x56b9fd05]
  5162ee:	dec    eax
  5162ef:	mov    bl,0x1e
  5162f1:	pusha  
  5162f2:	jo     0x516353
  5162f4:	and    al,0xfd
  5162f6:	cmp    eax,0x5a325fca
  5162fb:	pop    ebp
  5162fc:	adc    al,0xd6
  5162fe:	mov    al,0x2d
  516300:	shl    BYTE PTR [edx+ecx*1-0x17041ba8],1
  516307:	shr    DWORD PTR ds:0xe3c0ae89,0xa1
  51630e:	or     al,0x43
  516310:	dec    edx
  516311:	stc    
  516312:	mov    edx,0x37ca939f
  516317:	rcl    edx,1
  516319:	xchg   sp,ax
  51631b:	xor    esi,edx
  51631d:	push   0xc4bb6640
  516322:	mov    bh,BYTE PTR [edx]
  516324:	mov    ch,cl
  516326:	int    0x88
  516328:	mov    ecx,0x5048a16e
  51632d:	cmp    DWORD PTR [eax-0x8a206a0],0xc2682d56
  516337:	fsub   QWORD PTR [edx-0x4841bbb9]
  51633d:	sub    cl,dl
  51633f:	cwde   
  516340:	mov    cl,0x90
  516342:	xchg   ebx,eax
  516343:	sub    al,0x15
  516345:	xor    BYTE PTR [esi],0x6b
  516348:	out    dx,eax
  516349:	jmp    0x2a2:0x92058aa9
  516350:	mov    esi,0x4c49cf01
  516355:	jns    0x51638c
  516357:	shl    DWORD PTR [esi+0x1b],1
  51635a:	xchg   edx,eax
  51635b:	xchg   ebx,eax
  51635c:	add    al,0x9c
  51635e:	and    dh,BYTE PTR [ebp+0x32]
  516361:	xchg   ebx,eax
  516362:	test   BYTE PTR [edi-0x389589b4],al
  516368:	sbb    ch,bl
  51636a:	fs xchg ebp,eax
  51636c:	inc    eax
  51636d:	xchg   esp,eax
  51636e:	jmp    0xc046:0x8b337f26
  516375:	aad    0xc9
  516377:	(bad)  
  516378:	push   ebx
  516379:	ss (bad) 
  51637b:	fdiv   QWORD PTR [edi-0x5c]
  51637e:	cld    
  51637f:	mov    esp,0xfaf4dea7
  516384:	add    ecx,DWORD PTR [edi]
  516386:	out    0xb3,al
  516388:	jmp    0x9fcf:0xda086917
  51638f:	loop   0x516325
  516391:	aas    
  516392:	xor    ah,BYTE PTR [edx]
  516394:	out    0x36,al
  516396:	mov    esp,0x87c77331
  51639b:	outs   dx,BYTE PTR ds:[esi]
  51639c:	mov    dh,0x8d
  51639e:	loope  0x516337
  5163a0:	xchg   DWORD PTR [eax],ebp
  5163a2:	lods   eax,DWORD PTR ds:[esi]
  5163a3:	fisubr WORD PTR [ebx+0x3b6b24e]
  5163a9:	fs pop ecx
  5163ab:	call   DWORD PTR [edi-0x79b81194]
  5163b1:	imul   ebx,DWORD PTR [ebx-0x2a],0x8eb771f7
  5163b8:	sti    
  5163b9:	push   0x4cf6e1d0
  5163be:	cmp    ebx,DWORD PTR [esi+0x5e]
  5163c1:	adc    DWORD PTR [ecx+0x324f927e],edi
  5163c7:	iret   
  5163c8:	mov    al,0x11
  5163ca:	inc    DWORD PTR [ecx+0x110dcfcc]
  5163d0:	push   esi
  5163d1:	mov    dh,ch
  5163d3:	xor    BYTE PTR [eax],cl
  5163d5:	mov    eax,0x429636b6
  5163da:	stos   DWORD PTR es:[edi],eax
  5163db:	dec    ecx
  5163dc:	adc    dl,BYTE PTR [ecx-0x5]
  5163df:	jp     0x51643e
  5163e1:	inc    edx
  5163e2:	add    DWORD PTR [edi+ebp*1],0xffffff90
  5163e6:	in     eax,dx
  5163e7:	mov    edi,0xce47645e
  5163ec:	cwde   
  5163ed:	hlt    
  5163ee:	xlat   BYTE PTR ds:[ebx]
  5163ef:	stos   DWORD PTR es:[edi],eax
  5163f0:	sbb    BYTE PTR [ebx+0x13],0x41
  5163f4:	pop    edx
  5163f5:	ins    DWORD PTR es:[edi],dx
  5163f6:	sbb    edi,ebp
  5163f8:	fisttp DWORD PTR [ecx-0x3]
  5163fb:	std    
  5163fc:	je     0x5163f2
  5163fe:	fyl2xp1 
  516400:	dec    esp
  516401:	inc    ecx
  516402:	pop    ebx
  516403:	pop    es
  516404:	aaa    
  516405:	jb     0x5163c5
  516407:	fstp   QWORD PTR [edx]
  516409:	mov    bh,0xb7
  51640b:	dec    edi
  51640c:	add    ebp,ebp
  51640e:	lds    ebx,FWORD PTR [ecx-0x69408b43]
  516414:	push   ecx
  516415:	in     al,dx
  516416:	aad    0x85
  516418:	ins    BYTE PTR es:[edi],dx
  516419:	mov    fs,ecx
  51641b:	or     DWORD PTR [ebp+0x596987b],ebp
  516421:	test   eax,0x952f1dd8
  516426:	mov    esp,0xa6ca911f
  51642b:	sub    BYTE PTR [edi+0x23],0xa7
  51642f:	adc    ebp,DWORD PTR [ebp+edx*2-0x40]
  516433:	cli    
  516434:	(bad)  [esi]
  516436:	cdq    
  516437:	mov    ebx,0xaff7e0f9
  51643c:	xlat   BYTE PTR ds:[ebx]
  51643d:	fiadd  WORD PTR [ebx]
  51643f:	call   DWORD PTR [ebx+0x5d]
  516442:	rol    DWORD PTR [edx+0x226b3ae0],1
  516448:	and    eax,0x2ab6ff2
  51644d:	in     eax,0xe2
  51644f:	je     0x5163f4
  516451:	adc    al,0x53
  516453:	ja     0x51649d
  516455:	shl    BYTE PTR ds:0xa682aa05,cl
  51645b:	pop    es
  51645c:	sub    DWORD PTR [esi-0x35],ebp
  51645f:	push   0xa1afd502
  516464:	pavgw  mm0,mm3
  516467:	aas    
  516468:	or     cl,bh
  51646a:	js     0x516488
  51646c:	loop   0x5164dd
  51646e:	into   
  51646f:	xchg   ebx,eax
  516470:	dec    esi
  516471:	hlt    
  516472:	xchg   ebx,eax
  516473:	mov    cl,0xed
  516475:	sub    al,0x36
  516477:	stos   DWORD PTR es:[edi],eax
  516478:	add    cl,BYTE PTR [ecx+0x76ea3878]
  51647e:	test   al,0x4d
  516480:	loop   0x516462
  516482:	cmp    dl,BYTE PTR [esi]
  516484:	adc    eax,eax
  516486:	push   ecx
  516487:	mov    ah,0x9a
  516489:	in     al,0x18
  51648b:	rol    BYTE PTR [eax+0x5a02b2a3],1
  516491:	cs in  eax,0x46
  516494:	cmp    al,bh
  516496:	mov    ah,0x9f
  516498:	sbb    DWORD PTR [esi],ebp
  51649a:	mov    edi,0xe466da5c
  51649f:	cmp    DWORD PTR [ebx],eax
  5164a1:	push   0xd075183
  5164a6:	(bad)  
  5164a8:	stos   BYTE PTR es:[edi],al
  5164a9:	scas   al,BYTE PTR es:[edi]
  5164aa:	mov    ebx,0xfba74d8e
  5164af:	sub    eax,0x45832b90
  5164b4:	fcom   DWORD PTR [esi-0x3f]
  5164b7:	push   ss
  5164b8:	cmp    ebx,DWORD PTR [ecx-0x7082b8f5]
  5164be:	sbb    ch,bh
  5164c0:	xor    DWORD PTR [edx+ebp*1+0x2e],0x5a
  5164c5:	aaa    
  5164c6:	adc    DWORD PTR [esi],esp
  5164c8:	pop    ds
  5164c9:	sub    eax,0xf9dbfa6b
  5164ce:	mov    esi,0x673ad24c
  5164d3:	push   ebp
  5164d4:	in     al,0xfd
  5164d6:	(bad)  
  5164d7:	mov    ebx,0x5a6b933e
  5164dc:	int    0xcc
  5164de:	push   cs
  5164df:	cdq    
  5164e0:	popf   
  5164e1:	fwait
  5164e2:	pushf  
  5164e3:	mov    ds:0x42f4cf16,al
  5164e8:	cmc    
  5164e9:	pop    ebx
  5164ea:	aam    0xbe
  5164ec:	leave  
  5164ed:	adc    ecx,DWORD PTR ds:[ecx+0x17]
  5164f1:	bndldx bnd2,[edi-0x3]
  5164f5:	xor    al,0x35
  5164f7:	lods   eax,DWORD PTR ds:[esi]
  5164f8:	pop    esp
  5164f9:	enter  0x21fa,0xa3
  5164fd:	sbb    BYTE PTR [ebx-0x7ded8b6c],0xd
  516504:	dec    esp
  516505:	add    eax,ebx
  516507:	xchg   BYTE PTR [edi+0x2243ee7a],dh
  51650d:	cmp    DWORD PTR [ecx+0x54],esi
  516510:	gs jno 0x5164f3
  516513:	mov    BYTE PTR [edi-0x39],bh
  516516:	fsubr  st(4),st
  516518:	scas   al,BYTE PTR es:[edi]
  516519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51651a:	xor    BYTE PTR [esi],cl
  51651c:	movsx  ebp,ah
  51651f:	mov    eax,0x8bb22f00
  516524:	mov    ch,0x4b
  516526:	jo     0x51650a
  516528:	inc    edx
  516529:	sbb    eax,0xc4a2f42f
  51652e:	xor    BYTE PTR [esi-0x6b],dh
  516531:	xor    al,0x64
  516533:	test   DWORD PTR [ebp+0x53f9167c],esp
  516539:	jno    0x516574
  51653b:	(bad)  
  51653c:	fimul  WORD PTR [ebp+0x30]
  51653f:	xchg   eax,esi
  516541:	inc    edx
  516542:	aas    
  516543:	in     al,0x40
  516545:	inc    edi
  516546:	mov    DWORD PTR [edi],ecx
  516548:	mov    bh,0xda
  51654a:	es jbe 0x51657e
  51654d:	jl     0x5164ed
  51654f:	adc    dl,bl
  516551:	jb     0x5164f9
  516553:	pop    es
  516554:	cld    
  516555:	add    BYTE PTR [esi-0x2d],ch
  516558:	pop    ecx
  516559:	xchg   BYTE PTR [edi-0xd],al
  51655c:	loope  0x5164e8
  51655e:	daa    
  51655f:	xchg   DWORD PTR [ebp+0x68],edi
  516562:	sbb    ah,BYTE PTR [eax-0x26]
  516565:	bound  edx,QWORD PTR [esi+ebp*2-0x462bd899]
  51656c:	and    al,0x32
  51656e:	cmp    DWORD PTR [esi-0x7a],0xad9b8eb7
  516575:	and    dl,bl
  516577:	shl    BYTE PTR [ecx],1
  516579:	add    DWORD PTR [eax+ebx*4],0xffffffe5
  51657d:	stc    
  51657e:	mov    al,0xf5
  516580:	retf   0xaf12
  516583:	fmul   st(3),st
  516585:	cli    
  516586:	repnz out 0xf3,al
  516589:	icebp  
  51658a:	cmp    al,ch
  51658c:	adc    ecx,DWORD PTR [esp+edx*1-0x62]
  516590:	inc    edx
  516591:	imul   esp,DWORD PTR [eax+0x4f],0xffffff90
  516595:	ins    DWORD PTR es:[edi],dx
  516596:	adc    al,BYTE PTR [esi+0x2b]
  516599:	ret    
  51659a:	aas    
  51659b:	lods   eax,DWORD PTR ds:[esi]
  51659c:	mov    edx,0x478f7c0b
  5165a1:	sbb    DWORD PTR [ebp+0x43025769],0x62
  5165a8:	cmp    eax,0x4ca27b7c
  5165ad:	rcr    DWORD PTR [ebp-0x10],1
  5165b0:	sub    al,0xf4
  5165b2:	mov    esp,0x9194c6a8
  5165b7:	and    DWORD PTR [edi+0x25],edx
  5165ba:	popa   
  5165bb:	inc    ebx
  5165bc:	pop    ss
  5165bd:	cli    
  5165be:	xchg   DWORD PTR [esi],eax
  5165c0:	dec    esp
  5165c1:	arpl   WORD PTR [eax-0xc],si
  5165c4:	repnz shl DWORD PTR [ebp-0x43],0x9e
  5165c9:	jno    0x516635
  5165cb:	(bad)  
  5165cc:	nop
  5165cd:	mov    ds,WORD PTR [edi+0xa6da966]
  5165d3:	inc    esp
  5165d4:	jg     0x516651
  5165d6:	dec    ecx
  5165d7:	loopne 0x51664d
  5165d9:	mov    edi,0x28554f45
  5165de:	idiv   BYTE PTR [eax+eax*4+0x1c15db90]
  5165e5:	pusha  
  5165e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5165e7:	cmp    al,0x48
  5165e9:	lock mov ch,0x2c
  5165ec:	ret    0x7dd
  5165ef:	inc    ebx
  5165f0:	or     DWORD PTR [ebx],ecx
  5165f2:	adc    al,0x53
  5165f4:	aam    0x42
  5165f6:	xor    al,0x0
  5165f8:	xchg   ecx,eax
  5165f9:	idiv   bl
  5165fb:	xchg   esp,eax
  5165fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5165fd:	or     al,0xb
  5165ff:	out    0x3a,al
  516601:	xchg   esi,eax
  516602:	mov    dl,0x86
  516604:	cli    
  516605:	mov    ebx,0x6a010c0b
  51660a:	sub    BYTE PTR ds:0x520ce73e,bh
  516610:	add    eax,0x3d13bb2b
  516615:	loope  0x51663d
  516617:	xor    eax,0x513974ea
  51661c:	test   DWORD PTR [esi],edi
  51661e:	movq   QWORD PTR ds:0xdcdbd5bf,mm6
  516625:	mov    ebp,esp
  516627:	nop
  516628:	pop    edx
  516629:	add    DWORD PTR [esi],edi
  51662b:	sahf   
  51662c:	mov    BYTE PTR [edx-0x4b171ce5],0x93
  516633:	inc    ebp
  516634:	pop    es
  516635:	das    
  516636:	sbb    eax,0x7bf8b034
  51663b:	jns    0x5165d4
  51663d:	in     eax,0x67
  51663f:	add    DWORD PTR [esi-0x61],0x2c
  516643:	arpl   WORD PTR [eax-0x4d],di
  516646:	rep lods al,BYTE PTR ds:[esi]
  516648:	pop    ebx
  516649:	pop    esp
  51664a:	mov    esp,0x84d41bca
  51664f:	shl    BYTE PTR [eax-0x2],1
  516652:	aas    
  516653:	push   edi
  516654:	dec    ecx
  516655:	fbld   TBYTE PTR [esi-0x74]
  516658:	cmp    eax,0x9b6688dd
  51665d:	repz pusha 
  51665f:	xor    al,0x5c
  516661:	jbe    0x516636
  516663:	adc    edx,DWORD PTR [ecx+eiz*4+0x25]
  516667:	sub    bl,ch
  516669:	lds    ebp,FWORD PTR [edx-0x57fc5caa]
  51666f:	ret    0xfe70
  516672:	out    0xb5,al
  516674:	or     al,0xb3
  516676:	(bad)  
  516677:	lods   eax,DWORD PTR ds:[esi]
  516678:	adc    ecx,DWORD PTR [ecx+0x7a]
  51667b:	pop    ds
  51667c:	scas   eax,DWORD PTR es:[edi]
  51667d:	cld    
  51667e:	scas   al,BYTE PTR es:[edi]
  51667f:	mov    WORD PTR [edi+eiz*4-0x46],?
  516683:	and    DWORD PTR [eax-0x52],eax
  516686:	(bad)  
  516687:	hlt    
  516688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516689:	mov    eax,0xebb0a778
  51668e:	xchg   edi,eax
  51668f:	dec    esi
  516690:	rol    BYTE PTR [edx+ebx*1],1
  516693:	rcr    DWORD PTR [ecx],cl
  516695:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516696:	adc    eax,0xe8dd86ea
  51669b:	jmp    0xa69e:0x947f8441
  5166a2:	lock jge 0x516691
  5166a5:	jecxz  0x516691
  5166a7:	int3   
  5166a8:	les    edx,FWORD PTR [ebx+0x4d613169]
  5166ae:	stos   DWORD PTR es:[edi],eax
  5166af:	mov    ds:0x6e1df0b3,al
  5166b4:	and    ch,bh
  5166b6:	push   edi
  5166b7:	jmp    0x634c03fe
  5166bc:	dec    ecx
  5166bd:	(bad)  
  5166be:	xlat   BYTE PTR ds:[ebx]
  5166bf:	push   cs
  5166c0:	sahf   
  5166c1:	addr16 out 0x8,eax
  5166c4:	cmp    edx,DWORD PTR [eax-0x1b]
  5166c7:	mov    dh,0x8
  5166c9:	loope  0x516744
  5166cb:	shr    esp,cl
  5166cd:	pop    ebp
  5166ce:	ror    BYTE PTR [esi-0x19],0x7b
  5166d2:	mov    ds:0xf1e07511,al
  5166d7:	and    al,0xfb
  5166d9:	jno    0x51668c
  5166db:	push   ebx
  5166dc:	xor    edi,DWORD PTR ds:0xc9545202
  5166e2:	call   0x6c5f83db
  5166e7:	scas   al,BYTE PTR es:[edi]
  5166e8:	mov    dh,BYTE PTR [ecx]
  5166ea:	ret    
  5166eb:	sub    bl,BYTE PTR [eax-0x53]
  5166ee:	stos   DWORD PTR es:[edi],eax
  5166ef:	neg    DWORD PTR [eax+ebp*8+0x67]
  5166f3:	mov    ebx,0xb28c4a8e
  5166f8:	add    edi,ebp
  5166fa:	div    BYTE PTR [edx+eax*2]
  5166fd:	and    BYTE PTR [ecx-0x7bf9346a],0xe1
  516704:	jl     0x51668f
  516706:	mov    edx,ecx
  516708:	ret    
  516709:	jb     0x516703
  51670b:	pop    ecx
  51670c:	cmp    DWORD PTR [ecx],edi
  51670e:	call   0xd0162171
  516713:	mov    BYTE PTR [esi+esi*4+0x213ab240],dh
  51671a:	hlt    
  51671b:	xchg   edx,eax
  51671c:	cmc    
  51671d:	mov    ds:0xf9a26a8f,al
  516722:	lahf   
  516723:	lds    esi,FWORD PTR [ebx]
  516725:	test   edx,0x32f412b0
  51672b:	or     eax,0x8da9f0c1
  516730:	mov    al,ds:0x3eac1578
  516735:	dec    eax
  516736:	ss cmp eax,0x281e26b2
  51673c:	push   esi
  51673d:	nop
  51673e:	jmp    0x5166c1
  516740:	ins    DWORD PTR es:[edi],dx
  516741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516742:	pushf  
  516743:	js     0x51677b
  516745:	xchg   esi,eax
  516746:	pushf  
  516747:	push   edx
  516748:	sahf   
  516749:	jne    0x5167be
  51674b:	daa    
  51674c:	mov    bh,0xec
  51674e:	mov    ch,al
  516750:	add    BYTE PTR [edx-0x54],bl
  516753:	stos   BYTE PTR es:[edi],al
  516754:	ror    BYTE PTR [esi+0x6745bf8b],0xb3
  51675b:	or     ebx,ebp
  51675d:	mov    al,fs:0xb27a7b31
  516763:	mov    bh,0xfc
  516765:	jo     0x5167ae
  516767:	pop    ecx
  516768:	or     ah,ch
  51676a:	or     ebx,DWORD PTR [edi]
  51676c:	cmc    
  51676d:	ds mov ch,0xe8
  516770:	xchg   ebp,eax
  516771:	out    0x59,al
  516773:	sub    al,0xc9
  516775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516776:	sbb    al,0xb3
  516778:	xor    al,0xc9
  51677a:	shr    bl,cl
  51677c:	cmp    ebx,ebx
  51677e:	mov    esp,0x5a7aa137
  516783:	sbb    al,0x4c
  516785:	mov    ah,0x1c
  516787:	fild   WORD PTR [ebx+0x7c]
  51678a:	jmp    0x5167de
  51678c:	mov    dl,0x2b
  51678e:	das    
  51678f:	data16 test al,0xc9
  516792:	shr    BYTE PTR [edx],0x49
  516795:	sbb    eax,0x5e1fffe
  51679a:	data16 sub BYTE PTR [edi-0x9158f79],cl
  5167a1:	and    ebx,DWORD PTR [ecx]
  5167a3:	adc    edi,DWORD PTR [edx]
  5167a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5167a6:	adc    ebp,esi
  5167a8:	inc    eax
  5167a9:	dec    edi
  5167aa:	and    DWORD PTR [eax],esp
  5167ac:	ins    BYTE PTR es:[edi],dx
  5167ad:	xor    al,0x17
  5167af:	inc    ch
  5167b1:	dec    esp
  5167b2:	call   0xc6638067
  5167b7:	jne    0x5167b6
  5167b9:	(bad)  [edi]
  5167bb:	jb     0x5167af
  5167bd:	ss sbb eax,0x96a693
  5167c3:	push   ss
  5167c4:	pop    sp
  5167c6:	sbb    BYTE PTR [ebp-0x67],al
  5167c9:	es cmp eax,0x389bf9a9
  5167cf:	mov    ds:0x4980fa60,eax
  5167d4:	int    0xf1
  5167d6:	scas   eax,DWORD PTR es:[edi]
  5167d7:	scas   eax,DWORD PTR es:[edi]
  5167d8:	add    al,0x95
  5167da:	pop    edx
  5167db:	je     0x51676e
  5167dd:	in     eax,dx
  5167de:	not    DWORD PTR [ebp+0x3548849b]
  5167e4:	mov    edi,0x3f67321b
  5167e9:	xchg   ebx,eax
  5167ea:	nop
  5167eb:	lods   eax,DWORD PTR ds:[esi]
  5167ec:	lds    ebx,FWORD PTR [edx+0x4f]
  5167ef:	xor    al,0xa0
  5167f1:	test   DWORD PTR [edx+edx*2],ebx
  5167f4:	nop
  5167f5:	sbb    dh,BYTE PTR [ecx]
  5167f7:	call   0x217d6316
  5167fc:	ret    0x9e2c
  5167ff:	dec    ebx
  516800:	pusha  
  516801:	lods   al,BYTE PTR ds:[esi]
  516802:	enter  0x1cf9,0x2
  516806:	xchg   ebx,eax
  516807:	mov    ah,0x46
  516809:	lds    ecx,FWORD PTR [eax-0x3f]
  51680c:	jno    0x5167b6
  51680e:	mov    ch,0x8f
  516810:	mov    dl,0x43
  516812:	mov    edi,0xd01abbe2
  516817:	jmp    FWORD PTR [esi+ebx*1-0x7]
  51681b:	cdq    
  51681c:	icebp  
  51681d:	mov    ecx,0x703ba71b
  516822:	cmp    al,0x2f
  516824:	inc    esi
  516825:	in     eax,0x57
  516827:	enter  0x4892,0x7
  51682b:	adc    DWORD PTR [edi],0xffffffb8
  51682e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51682f:	std    
  516830:	add    DWORD PTR [edi+0x25],ebp
  516833:	mov    ecx,0xb128c5b9
  516838:	push   0xffffffe4
  51683a:	pop    edi
  51683b:	jnp    0x516860
  51683d:	call   0xb798e17a
  516842:	lds    esp,FWORD PTR [edi]
  516844:	xchg   edx,eax
  516845:	sti    
  516846:	cdq    
  516847:	adc    ebp,edx
  516849:	mov    dh,0xb4
  51684b:	out    dx,eax
  51684c:	inc    ebp
  51684d:	mov    edi,0x978b751
  516852:	xchg   ebp,eax
  516853:	mov    edi,0x51b230a6
  516858:	loope  0x5167e9
  51685a:	push   di
  51685c:	enter  0xab50,0x97
  516860:	out    dx,eax
  516861:	mov    ecx,DWORD PTR [ebp+0x1009b1fc]
  516867:	outs   dx,DWORD PTR ds:[esi]
  516868:	aaa    
  516869:	rcr    eax,0x58
  51686c:	inc    eax
  51686d:	out    dx,al
  51686e:	enter  0x4fcf,0xaa
  516872:	ds xchg ebx,eax
  516874:	int3   
  516875:	xchg   edx,eax
  516876:	std    
  516877:	sub    bh,BYTE PTR [edx+0x7101bd5c]
  51687d:	inc    ebp
  51687e:	mov    cl,0xe5
  516880:	popf   
  516881:	popa   
  516882:	add    al,0x87
  516884:	mov    bl,cl
  516886:	and    dl,BYTE PTR [esi-0x5e]
  516889:	xchg   bh,cl
  51688b:	cld    
  51688c:	int3   
  51688d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51688e:	icebp  
  51688f:	sbb    BYTE PTR [ebp-0xc],dl
  516892:	mov    bl,0xdf
  516894:	add    BYTE PTR [esp+edi*1],0xfd
  516898:	test   eax,0x4dee1eb8
  51689d:	shl    DWORD PTR [esi],cl
  51689f:	dec    ebx
  5168a0:	ja     0x516910
  5168a2:	inc    edi
  5168a3:	sub    esi,edx
  5168a5:	mov    bl,0x2f
  5168a7:	mov    eax,0x9e6b80ab
  5168ac:	and    BYTE PTR [esp+edx*2-0x612559c2],al
  5168b3:	stos   BYTE PTR es:[edi],al
  5168b4:	lods   al,BYTE PTR ds:[esi]
  5168b5:	cmp    BYTE PTR [esi+0xe],bl
  5168b8:	or     cl,bl
  5168ba:	inc    esi
  5168bb:	pop    ebp
  5168bc:	data16 mov ds:0x1c6a6d58,al
  5168c2:	mov    edx,DWORD PTR [edx]
  5168c4:	adc    eax,0x7359291b
  5168c9:	in     al,0x26
  5168cb:	mov    esp,0x7221065a
  5168d0:	sub    dl,BYTE PTR [esi-0x64a4a78f]
  5168d6:	push   eax
  5168d7:	jmp    0x51687f
  5168d9:	push   edi
  5168da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5168db:	int    0xbc
  5168dd:	in     eax,dx
  5168de:	fimul  DWORD PTR [esi+0x6e]
  5168e1:	inc    esi
  5168e2:	xor    esp,edx
  5168e4:	xor    al,0xd0
  5168e6:	div    DWORD PTR [ecx-0x68]
  5168e9:	mov    esi,0xcfa10999
  5168ee:	aam    0xd
  5168f0:	mov    eax,0x4a942f3e
  5168f5:	inc    di
  5168f7:	cmc    
  5168f8:	fild   DWORD PTR [eax+0x78806a5c]
  5168fe:	fmul   st(1),st
  516900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516901:	or     ebp,ecx
  516903:	and    esp,DWORD PTR gs:[ebx+esi*1]
  516907:	mov    ds:0x733d0ae6,al
  51690c:	mov    bl,0x83
  51690e:	cmp    ebp,esp
  516910:	icebp  
  516911:	(bad)  
  516913:	leave  
  516914:	cmc    
  516915:	push   eax
  516916:	pop    ds
  516917:	sbb    edx,DWORD PTR [ecx]
  516919:	inc    esp
  51691a:	and    al,0xf4
  51691c:	sar    DWORD PTR [ebx-0x4b],0x2a
  516920:	push   cs
  516921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516922:	lahf   
  516923:	adc    BYTE PTR [ebx+0x48],bh
  516926:	add    eax,DWORD PTR [edx]
  516928:	test   DWORD PTR [edx-0x219bbe66],ebx
  51692e:	ret    0x49af
  516931:	call   0x3ad8:0x2d7dfa5a
  516938:	dec    edi
  516939:	sub    eax,0xe4ebed82
  51693e:	iret   
  51693f:	mov    al,0xb7
  516941:	dec    ebx
  516942:	sub    ah,BYTE PTR [ebp+0x6c]
  516945:	push   esi
  516946:	inc    ebx
  516947:	jp     0x516946
  516949:	ds pop esi
  51694b:	inc    ecx
  51694c:	je     0x516971
  51694e:	mov    eax,ds:0xe22100d7
  516953:	sbb    al,bl
  516955:	aas    
  516956:	syscall 
  516958:	cdq    
  516959:	addr16 sbb ebp,ecx
  51695c:	sbb    BYTE PTR [ecx+0xb3204b0],ch
  516962:	sar    BYTE PTR [esi],0x2e
  516965:	aas    
  516966:	pop    esi
  516967:	xchg   ebp,eax
  516968:	repz mov cl,0x55
  51696b:	out    0x1b,al
  51696d:	les    esi,FWORD PTR ds:[ecx-0x12513b35]
  516974:	cld    
  516975:	loope  0x5168fb
  516977:	dec    edi
  516978:	je     0x516900
  51697a:	addr16 loope 0x51693f
  51697d:	inc    edx
  51697e:	push   edx
  51697f:	lods   eax,DWORD PTR ds:[esi]
  516980:	dec    ecx
  516981:	and    BYTE PTR [esi+0x7a92aeb],ch
  516987:	mov    edi,DWORD PTR [ebp+0x1af64d21]
  51698d:	push   es
  51698e:	icebp  
  51698f:	push   0x248d90af
  516994:	repz xchg ecx,esi
  516997:	adc    DWORD PTR [edx-0x6b],esp
  51699a:	mov    eax,ds:0xc8e3d691
  51699f:	jmp    0x84a8:0x5136bfeb
  5169a6:	jmp    0x516963
  5169a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5169a9:	jnp    0x516a0c
  5169ab:	fistp  QWORD PTR [ebx]
  5169ad:	mov    ds:0x4cc59111,eax
  5169b2:	cmp    al,0xe4
  5169b4:	gs into 
  5169b6:	test   eax,0x46ad7f8d
  5169bb:	es push eax
  5169bd:	mov    edi,0x6c361edf
  5169c2:	jl     0x5169b2
  5169c4:	push   edi
  5169c5:	scas   al,BYTE PTR es:[edi]
  5169c6:	xor    BYTE PTR [ecx+0x32c18bfa],ah
  5169cc:	out    0x4,al
  5169ce:	xor    al,0x67
  5169d0:	push   cs
  5169d1:	int3   
  5169d2:	pop    ebx
  5169d3:	pusha  
  5169d4:	not    DWORD PTR [eax-0x4345c480]
  5169da:	cmp    ebx,DWORD PTR [ecx-0x4c99c0ca]
  5169e0:	shl    DWORD PTR [eax-0x4c],cl
  5169e3:	mov    edx,0x2e715038
  5169e8:	mov    WORD PTR [esi+0x36],ds
  5169eb:	jecxz  0x5169e2
  5169ed:	pop    dx
  5169ef:	pop    eax
  5169f0:	or     eax,0xaac69ece
  5169f5:	cmp    al,0x2
  5169f7:	frstor [ebp+0x164d1ba1]
  5169fd:	out    dx,al
  5169fe:	fistp  WORD PTR [esi]
  516a00:	lahf   
  516a01:	push   ebp
  516a02:	jle    0x51698d
  516a04:	xor    DWORD PTR [eax+0x4af35ccd],eax
  516a0a:	pop    es
  516a0b:	sbb    al,0xa7
  516a0d:	inc    eax
  516a0e:	mov    WORD PTR [eax-0x5a],?
  516a11:	iret   
  516a12:	xor    ch,al
  516a14:	inc    esi
  516a15:	adc    BYTE PTR [esi+0x391eec39],ch
  516a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516a1c:	xor    ebp,DWORD PTR [ecx]
  516a1e:	mov    ah,0x2c
  516a20:	(bad)  [ebx]
  516a22:	xchg   esi,eax
  516a23:	fidiv  WORD PTR [ebp-0x62]
  516a26:	mov    ah,0xbb
  516a28:	addr16 pop ebx
  516a2a:	repz or ch,BYTE PTR [ebp+0xdc4fbdc]
  516a31:	or     eax,0x1500b64e
  516a36:	jnp    0x516aa8
  516a38:	push   edi
  516a39:	test   BYTE PTR es:[ebp-0x38],0x9
  516a3e:	sub    eax,0x27a40ab9
  516a43:	pop    esp
  516a44:	jmp    0x516a91
  516a46:	imul   edi,esp,0xffffffcf
  516a49:	cmc    
  516a4a:	push   ss
  516a4b:	icebp  
  516a4c:	cwde   
  516a4d:	add    BYTE PTR [esi],0x5a
  516a50:	xchg   edi,eax
  516a51:	imul   esi,DWORD PTR [edx+0x1f],0x77c30e39
  516a58:	xchg   BYTE PTR [ebx-0x55],bl
  516a5b:	fdivr  QWORD PTR ds:0x71b4063f
  516a61:	retf   0x9df7
  516a64:	xor    DWORD PTR ds:0xb45990cc,0xfffffffe
  516a6b:	dec    edx
  516a6c:	or     BYTE PTR ds:0xb88fe6f5,ch
  516a72:	mov    al,ds:0x29218a21
  516a77:	dec    ecx
  516a78:	adc    esp,ebp
  516a7a:	cmp    al,0x14
  516a7c:	test   BYTE PTR [esi],0x63
  516a7f:	(bad)  
  516a80:	hlt    
  516a81:	js     0x516a1b
  516a83:	cld    
  516a84:	mov    gs,WORD PTR [ebx+0x222cec83]
  516a8a:	(bad)  
  516a8b:	jbe    0x516a7f
  516a8d:	inc    esi
  516a8e:	(bad)  
  516a8f:	and    al,0xab
  516a91:	xlat   BYTE PTR ds:[ebx]
  516a92:	sub    BYTE PTR [edi+ecx*4+0x47],bh
  516a96:	scas   al,BYTE PTR es:[edi]
  516a97:	lea    eax,[ebx]
  516a99:	cli    
  516a9a:	in     al,0x94
  516a9c:	into   
  516a9d:	push   ecx
  516a9e:	(bad)
  516aa3:	and    BYTE PTR [ebp+0x33],ah
  516aa6:	aam    0x15
  516aa8:	push   ds
  516aa9:	inc    eax
  516aaa:	lahf   
  516aab:	xor    al,0x7b
  516aad:	mov    ebp,0x6f693597
  516ab2:	bound  ecx,QWORD PTR [eax+ebx*8]
  516ab5:	leave  
  516ab6:	xor    edi,ecx
  516ab8:	cmp    ch,bh
  516aba:	inc    esp
  516abb:	rcr    BYTE PTR [edi-0x346da276],cl
  516ac1:	repnz lahf 
  516ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  516ac4:	les    edi,FWORD PTR [edi]
  516ac6:	xchg   ebp,eax
  516ac7:	js     0x516ae7
  516ac9:	jnp    0x516aa1
  516acb:	leave  
  516acc:	inc    esi
  516acd:	add    edx,ebx
  516acf:	jae    0x516b31
  516ad1:	mov    al,ds:0x4c1810ec
  516ad6:	xor    BYTE PTR [eax+eiz*1+0x63969974],bh
  516add:	jns    0x516b47
  516adf:	mov    eax,ds:0xe77fe0f9
  516ae4:	push   es
  516ae5:	dec    edi
  516ae6:	and    BYTE PTR [edi],dl
  516ae8:	and    ebx,DWORD PTR [esp+edi*2]
  516aeb:	mov    bh,0x30
  516aed:	stos   DWORD PTR es:[edi],eax
  516aee:	int3   
  516aef:	sbb    eax,0xbd2b0dd0
  516af4:	cmp    ebp,esi
  516af6:	leave  
  516af7:	and    al,0x32
  516af9:	nop
  516afa:	test   ecx,esi
  516afc:	daa    
  516afd:	fidiv  WORD PTR [ebx+0x31]
  516b00:	jne    0x516b38
  516b02:	(bad)  
  516b03:	and    dh,dl
  516b05:	sbb    al,0x9
  516b07:	sbb    BYTE PTR ds:0x70f557fd,dl
  516b0d:	pop    edx
  516b0e:	(bad)  
  516b0f:	inc    ebx
  516b10:	mov    dh,0x67
  516b12:	mov    WORD PTR ds:0x555b4453,ss
  516b18:	mov    dh,0xf5
  516b1a:	pop    esp
  516b1b:	ja     0x516b75
  516b1d:	inc    eax
  516b1e:	shl    bl,1
  516b20:	mul    BYTE PTR [eax+0x19e832e0]
  516b26:	fcos   
  516b28:	adc    DWORD PTR [ebx+0x6d],0xdf558bc9
  516b2f:	call   0x3e3691a3
  516b34:	mov    al,ds:0xf72a19d9
  516b39:	fs out dx,al
  516b3b:	mov    cl,0xf2
  516b3d:	ja     0x516afa
  516b3f:	in     al,dx
  516b40:	repz or eax,0x5e9ad8da
  516b46:	leave  
  516b47:	clc    
  516b48:	rcr    DWORD PTR [ebx],cl
  516b4a:	cdq    
  516b4b:	add    DWORD PTR [edi+ecx*4-0x73],esp
  516b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516b50:	xor    BYTE PTR [ebx-0x6e],bl
  516b53:	lahf   
  516b54:	inc    edx
  516b55:	adc    al,BYTE PTR [ecx]
  516b57:	sbb    al,0x6
  516b59:	inc    esp
  516b5a:	lods   al,BYTE PTR ds:[esi]
  516b5b:	xor    edx,DWORD PTR [ebp+0x7fc7c100]
  516b61:	jecxz  0x516b0c
  516b63:	sub    al,0xe
  516b65:	rcr    ecx,cl
  516b67:	xchg   ecx,eax
  516b68:	add    ah,ch
  516b6a:	lods   al,BYTE PTR ds:[esi]
  516b6b:	ins    BYTE PTR es:[edi],dx
  516b6c:	dec    edi
  516b6d:	adc    ah,BYTE PTR [ebp-0x55]
  516b70:	(bad)  
  516b72:	mov    cl,0x16
  516b74:	cmp    BYTE PTR [ebx+0xec5dc08],0xb6
  516b7b:	test   DWORD PTR [ecx+0x30],0x8e65645d
  516b82:	dec    ebp
  516b83:	mov    edx,DWORD PTR [edx-0x31fcb8b7]
  516b89:	sub    DWORD PTR [edx+0x46],0x70
  516b8d:	cmc    
  516b8e:	cmp    edi,DWORD PTR [esi-0x18a7ec14]
  516b94:	push   esi
  516b95:	xor    edx,DWORD PTR [ebp-0x71]
  516b98:	mov    ds:0x9bbe6447,al
  516b9d:	in     eax,0x82
  516b9f:	pop    esp
  516ba0:	pop    eax
  516ba1:	bound  ecx,QWORD PTR es:[edi-0x1d]
  516ba5:	sub    al,0x36
  516ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516ba8:	in     eax,0x48
  516baa:	loopne 0x516c18
  516bac:	push   esi
  516bad:	jmp    0x54b7:0x55a79090
  516bb4:	ja     0x516b8a
  516bb6:	pop    ds
  516bb7:	cld    
  516bb8:	sub    cl,dl
  516bba:	test   al,0x91
  516bbc:	sbb    eax,0xa648b30e
  516bc1:	sahf   
  516bc2:	xchg   BYTE PTR [ebx+ecx*4-0x3525ce],cl
  516bc9:	ror    DWORD PTR [bx+di-0x73],1
  516bcd:	int    0x5c
  516bcf:	shr    BYTE PTR [ecx-0x37],1
  516bd2:	sub    DWORD PTR [ecx-0x28b2e1fa],ebp
  516bd8:	fistp  DWORD PTR cs:[ebx-0xbfdd641]
  516bdf:	push   ss
  516be0:	ins    DWORD PTR es:[edi],dx
  516be1:	push   ss
  516be2:	imul   ecx,DWORD PTR [esi-0x60],0x8f2732e
  516be9:	es push edx
  516beb:	xor    al,0x8b
  516bed:	and    DWORD PTR [ebp-0x35a0edee],0xb293300f
  516bf7:	mov    ds:0x7650779c,al
  516bfc:	mov    ds:0x40aa9e93,eax
  516c01:	jne    0x516b88
  516c03:	fcom   st(2)
  516c05:	cmp    esp,DWORD PTR [edi+0x3e2d4b8e]
  516c0b:	mov    bh,0x97
  516c0d:	in     eax,0x2e
  516c0f:	cmp    ebx,ebx
  516c11:	sbb    ecx,edx
  516c13:	or     al,0xfc
  516c15:	pop    eax
  516c16:	adc    BYTE PTR [esi+0x28],al
  516c19:	int3   
  516c1a:	iret   
  516c1b:	ins    BYTE PTR es:[edi],dx
  516c1c:	xchg   ebp,eax
  516c1d:	cmp    al,0x67
  516c1f:	and    BYTE PTR [edi-0x6577cbf9],0x5b
  516c26:	leave  
  516c27:	mov    edi,0x7f7e7c4c
  516c2c:	mov    ds,WORD PTR [edi+edx*1+0x6e]
  516c30:	imul   esp,DWORD PTR [ebp+0x13],0xbf24092b
  516c37:	xor    BYTE PTR [edi],dl
  516c39:	pop    eax
  516c3a:	fld    QWORD PTR [ebp+0x703f6e2]
  516c40:	sub    edi,DWORD PTR [edx+0x21]
  516c43:	ficomp WORD PTR [eax]
  516c45:	lods   al,BYTE PTR ds:[esi]
  516c46:	cmc    
  516c47:	cmc    
  516c48:	xor    al,ah
  516c4a:	loop   0x516ca0
  516c4c:	add    DWORD PTR [ebx],esi
  516c4e:	mov    cl,0x4
  516c50:	adc    eax,0xff7e72fe
  516c55:	ret    0xd3c7
  516c58:	popf   
  516c59:	and    DWORD PTR [edi+0x65],0xb4e00c84
  516c60:	aad    0xd5
  516c62:	in     al,dx
  516c63:	or     ebp,edi
  516c65:	fnstenv [ebx+0x2c]
  516c68:	es pop ebx
  516c6a:	stc    
  516c6b:	aad    0xca
  516c6d:	test   ch,bh
  516c6f:	mov    eax,ds:0x7ded9670
  516c74:	sbb    al,0xaa
  516c76:	or     ch,BYTE PTR [ecx-0x781bbe88]
  516c7c:	cwde   
  516c7d:	idiv   BYTE PTR [edi+0x4d17254d]
  516c83:	lahf   
  516c84:	sub    eax,0x8ad3a9f0
  516c89:	pop    ss
  516c8a:	enter  0x43de,0xce
  516c8e:	jmp    0xfd0:0x117a3dc8
  516c95:	sub    eax,edx
  516c97:	push   edx
  516c98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516c99:	inc    eax
  516c9a:	shl    bh,0xa2
  516c9d:	mov    ss,WORD PTR [ebp+0x3145f88]
  516ca3:	mov    cl,0x2b
  516ca5:	push   ds
  516ca6:	mov    dh,0x38
  516ca8:	fwait
  516ca9:	xchg   eax,ebp
  516cab:	pop    ecx
  516cac:	sbb    DWORD PTR [edi+0x29],esp
  516caf:	ret    
  516cb0:	call   0x41e3e6f0
  516cb5:	jmp    0x5ae4:0xeb13469
  516cbc:	adc    al,0x26
  516cbe:	xlat   BYTE PTR ds:[ebx]
  516cbf:	jne    0x516c7b
  516cc1:	mov    cl,0x1d
  516cc3:	sub    edx,DWORD PTR [ecx+0x3e]
  516cc6:	mov    edi,0x8e1cfccd
  516ccb:	aad    0xfd
  516ccd:	xor    BYTE PTR [ecx+eax*1],al
  516cd0:	retf   0x1a0
  516cd3:	pushf  
  516cd4:	lock or dh,BYTE PTR [edi+0x14]
  516cd8:	jmp    0x516cca
  516cda:	jle    0x516d0f
  516cdc:	inc    esi
  516cdd:	mov    ebp,0x6bfd3c31
  516ce2:	(bad)  
  516ce3:	pop    edi
  516ce4:	xor    dl,BYTE PTR [edi]
  516ce6:	ss push edx
  516ce8:	aas    
  516ce9:	call   0x735df566
  516cee:	xchg   ecx,eax
  516cef:	dec    edx
  516cf0:	xchg   edi,eax
  516cf1:	xor    al,0x2c
  516cf3:	fwait
  516cf4:	shl    DWORD PTR [esi+0x4c],1
  516cf7:	cs jl  0x516d45
  516cfa:	shr    DWORD PTR [eax],cl
  516cfc:	or     dl,BYTE PTR [ecx]
  516cfe:	arpl   ax,si
  516d00:	mov    esp,0x9ddc4e80
  516d05:	and    eax,edx
  516d07:	inc    esp
  516d08:	xor    al,BYTE PTR [edx]
  516d0a:	sbb    al,0x9e
  516d0c:	mov    ebp,0x6a67962
  516d11:	ret    0x76de
  516d14:	ss call DWORD PTR es:[ecx-0x11]
  516d19:	mov    ch,0xb4
  516d1b:	sar    DWORD PTR [eax+0x1ea34e5c],0x1b
  516d22:	mov    ds,esi
  516d24:	pop    edx
  516d25:	push   eax
  516d26:	call   0xede57b95
  516d2b:	lods   eax,DWORD PTR ds:[esi]
  516d2c:	adc    ebx,edx
  516d2e:	mov    dl,0x17
  516d30:	les    edx,FWORD PTR [edi-0x4d7d9166]
  516d36:	cdq    
  516d37:	jns    0x516d95
  516d39:	cmp    al,0xf3
  516d3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516d3c:	stc    
  516d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516d3e:	loope  0x516cd6
  516d40:	cmp    ecx,0x50
  516d43:	cdq    
  516d44:	js     0x516d5d
  516d46:	shr    al,cl
  516d48:	test   DWORD PTR [eax-0x111f5bf8],esi
  516d4e:	mov    al,0x5b
  516d50:	mov    ds:0x988c7ed9,al
  516d55:	mov    ch,0xc4
  516d57:	xchg   ecx,eax
  516d58:	pop    eax
  516d59:	shl    ebp,cl
  516d5b:	pop    edi
  516d5c:	jle    0x516da4
  516d5e:	jp     0x516d69
  516d60:	cld    
  516d61:	jl     0x516d01
  516d63:	daa    
  516d64:	mov    edx,0xeab5155d
  516d69:	push   0xcf68dac0
  516d6e:	enter  0x44e6,0xc2
  516d72:	add    BYTE PTR [ebp-0x69ce5741],ah
  516d78:	ret    0xd9a3
  516d7b:	pop    edx
  516d7c:	jno    0x516d3f
  516d7e:	add    DWORD PTR es:[ebp-0x19],eax
  516d82:	iret   
  516d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516d84:	adc    DWORD PTR [ecx-0x4779435c],ebp
  516d8a:	and    edx,DWORD PTR [edi-0x79]
  516d8d:	pop    edx
  516d8e:	ret    
  516d8f:	cs jb  0x516d4c
  516d92:	sti    
  516d93:	mov    ecx,0xfc44e292
  516d98:	jae    0x516d98
  516d9a:	sub    cl,bh
  516d9c:	clc    
  516d9d:	outs   dx,DWORD PTR ds:[esi]
  516d9e:	(bad)  
  516d9f:	stos   BYTE PTR es:[edi],al
  516da0:	in     eax,dx
  516da1:	pop    ss
  516da2:	out    dx,eax
  516da3:	shr    ch,0x60
  516da6:	and    eax,0x4d3ee0d9
  516dab:	jp     0x516df4
  516dad:	popf   
  516dae:	fwait
  516daf:	daa    
  516db0:	push   edi
  516db1:	imul   esp,DWORD PTR [esi],0x4b976cac
  516db7:	mov    ch,0x84
  516db9:	scas   al,BYTE PTR es:[edi]
  516dba:	lock in eax,0x54
  516dbd:	and    ebx,DWORD PTR [esi]
  516dbf:	or     BYTE PTR [eax*2-0x16857e58],bh
  516dc6:	in     al,0x62
  516dc8:	mov    DWORD PTR [esi+0x7d6b1ebe],edx
  516dce:	ss int 0x94
  516dd1:	jmp    0x56b01682
  516dd6:	xchg   cl,cl
  516dd8:	push   esi
  516dd9:	pop    edi
  516dda:	lahf   
  516ddb:	(bad)  [ecx+0x34a917a6]
  516de1:	loope  0x516dab
  516de3:	loope  0x516e5d
  516de5:	pop    ds
  516de6:	mov    dh,BYTE PTR [edi+0x29]
  516de9:	js     0x516d94
  516deb:	and    edx,DWORD PTR [edi]
  516ded:	iret   
  516dee:	cmp    cl,BYTE PTR [ebp+eiz*2-0x3b]
  516df2:	push   0x2235d1c3
  516df7:	rcl    DWORD PTR [edi-0x68099c1b],0x5e
  516dfe:	fs jo  0x516e0b
  516e01:	push   eax
  516e02:	inc    eax
  516e03:	xor    bh,al
  516e05:	imul   edi,DWORD PTR [edx-0x3066c04d],0x74f4b933
  516e0f:	out    0x2,al
  516e11:	clc    
  516e12:	std    
  516e13:	jle    0x516e2a
  516e15:	call   0xdeabe795
  516e1a:	sahf   
  516e1b:	ja     0x516e23
  516e1d:	fs cmp al,0x15
  516e20:	xchg   edx,eax
  516e21:	fiadd  DWORD PTR [ebx+eax*1-0x3d54a5ca]
  516e28:	ja     0x516e72
  516e2a:	repnz mov ch,0xbb
  516e2d:	add    esp,0x23
  516e30:	fidiv  DWORD PTR [bx+di]
  516e33:	add    DWORD PTR [eax+0x6085d9c],eax
  516e39:	mov    cl,0x48
  516e3b:	lods   al,BYTE PTR ds:[esi]
  516e3c:	in     al,0xe4
  516e3e:	adc    DWORD PTR [ecx+0x4e],esp
  516e41:	cdq    
  516e42:	ret    
  516e43:	int    0xdd
  516e45:	retf   0xd0c2
  516e48:	icebp  
  516e49:	or     dh,ah
  516e4b:	adc    DWORD PTR [eax],eax
  516e4d:	fisttp WORD PTR [ebp-0x65]
  516e50:	ret    
  516e51:	mov    edx,0x6dfa6a5f
  516e56:	adc    bl,BYTE PTR [eax-0xf]
  516e59:	mov    bl,0x75
  516e5b:	scas   al,BYTE PTR es:[edi]
  516e5c:	loop   0x516e1f
  516e5e:	dec    ecx
  516e5f:	fadd   st,st(2)
  516e61:	cmp    al,0x22
  516e63:	sub    DWORD PTR [esi+0x10b97de5],eax
  516e69:	imul   eax,DWORD PTR [esi-0x404c085d],0xffffffe9
  516e70:	ins    DWORD PTR es:[edi],dx
  516e71:	icebp  
  516e72:	hlt    
  516e73:	sub    BYTE PTR [ebp+0x45d731e7],dh
  516e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516e7a:	or     DWORD PTR [edi+0x74c8e0e],0xc6f946d5
  516e84:	lds    ecx,FWORD PTR [eax-0x1bee57e]
  516e8a:	xchg   edx,eax
  516e8b:	xor    eax,DWORD PTR [edx+0x5e5c9e41]
  516e91:	mov    BYTE PTR [ebx-0x5c],cl
  516e94:	(bad)  gs:[edx+0x7f1f8d97]
  516e9b:	ficom  WORD PTR [esi+0x7c]
  516e9e:	pop    esi
  516e9f:	std    
  516ea0:	sbb    eax,0xe9292bc0
  516ea5:	mov    WORD PTR [eax-0x15],ss
  516ea8:	int    0x49
  516eaa:	inc    ebp
  516eab:	dec    esi
  516eac:	mov    ebp,0x6dd305f6
  516eb1:	jecxz  0x516e4d
  516eb3:	in     eax,dx
  516eb4:	repz or dh,ch
  516eb7:	inc    edx
  516eb8:	out    dx,al
  516eb9:	in     al,dx
  516eba:	jmp    0x516ed7
  516ebc:	add    edx,esi
  516ebe:	(bad)  
  516ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  516ec1:	(bad)  
  516ec3:	adc    BYTE PTR [edi-0x1d],al
  516ec6:	cmp    DWORD PTR [esi],0xffffff91
  516ec9:	jmp    0x516f05
  516ecb:	adc    al,0x7c
  516ecd:	dec    esp
  516ece:	call   0x5deb:0x8da64d3a
  516ed5:	fild   DWORD PTR [ebx+0x35]
  516ed8:	rcr    DWORD PTR [eax],1
  516eda:	fdiv   DWORD PTR [edi-0x27384e40]
  516ee0:	out    0x5f,eax
  516ee2:	sub    edi,0xffffffa2
  516ee5:	push   ss
  516ee6:	mov    esi,0xedb6be82
  516eeb:	or     esp,ebp
  516eed:	dec    edi
  516eee:	scas   eax,DWORD PTR es:[edi]
  516eef:	cvtps2pd xmm7,QWORD PTR [edi-0x5a79b977]
  516ef6:	mov    ebp,0xf5a61cef
  516efb:	dec    edi
  516efc:	xchg   BYTE PTR [edx+0x4a96b310],bh
  516f02:	adc    al,BYTE PTR [edx+edi*4]
  516f05:	bound  ebx,QWORD PTR [edi-0x3688d5c3]
  516f0b:	arpl   WORD PTR [edx+0x36],bx
  516f0e:	out    0x40,eax
  516f10:	add    edi,ebp
  516f12:	jbe    0x516f04
  516f14:	(bad)  
  516f15:	and    eax,DWORD PTR [ebx+0x4c1ebfa7]
  516f1b:	push   es
  516f1c:	xchg   ebx,eax
  516f1d:	out    dx,eax
  516f1e:	cmp    al,0xbf
  516f20:	xchg   ebp,eax
  516f21:	pop    ecx
  516f22:	dec    ebp
  516f23:	ds scas eax,DWORD PTR es:[edi]
  516f25:	in     eax,0xe6
  516f27:	imul   ebp,DWORD PTR [eax],0x94688419
  516f2d:	cmp    esi,DWORD PTR [ebx]
  516f2f:	in     eax,dx
  516f30:	jno    0x516eb4
  516f32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516f33:	inc    edx
  516f34:	fisttp DWORD PTR [esi-0x18db824e]
  516f3a:	pop    ebx
  516f3b:	mov    bh,BYTE PTR ds:0x9780f3a5
  516f41:	retf   0x9c90
  516f44:	cld    
  516f45:	inc    eax
  516f46:	(bad)  
  516f47:	daa    
  516f48:	orps   xmm3,XMMWORD PTR [eax]
  516f4b:	outs   dx,DWORD PTR ds:[esi]
  516f4c:	lds    eax,FWORD PTR [esi+ecx*1-0x4560dfd]
  516f53:	sbb    ecx,DWORD PTR [ecx+0x60042add]
  516f59:	mov    dl,0x5d
  516f5b:	push   esp
  516f5c:	xor    ebp,DWORD PTR [ebp+0x268cea6f]
  516f62:	mov    bh,0x6b
  516f64:	inc    ebp
  516f65:	xchg   ebx,eax
  516f66:	rcl    DWORD PTR ds:0xefa270ec,1
  516f6c:	and    eax,0x14252a0b
  516f71:	inc    ecx
  516f72:	mov    eax,0x2efdcd05
  516f77:	(bad)  
  516f78:	shr    al,cl
  516f7a:	rcr    DWORD PTR [edi],cl
  516f7c:	add    ebp,DWORD PTR [edi+ecx*4-0x7af6f3c0]
  516f83:	xor    eax,0xcd33509b
  516f88:	imul   eax,DWORD PTR [esi-0x26344005],0x30433aac
  516f92:	cwde   
  516f93:	xchg   edi,eax
  516f94:	test   al,0xa7
  516f96:	fild   QWORD PTR [ebp+0x48]
  516f99:	xchg   BYTE PTR [ebx],dh
  516f9b:	push   ebx
  516f9c:	mov    bh,0xc
  516f9e:	sub    eax,0x322ea426
  516fa3:	(bad)  
  516fa4:	mov    esi,0x21b5df0a
  516fa9:	push   ecx
  516faa:	stc    
  516fab:	and    ah,BYTE PTR [ecx]
  516fad:	ficomp DWORD PTR [ebx+0x35c5cf80]
  516fb3:	in     eax,dx
  516fb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  516fb5:	push   0xffffff8f
  516fb7:	push   ebp
  516fb8:	out    dx,al
  516fb9:	int3   
  516fba:	dec    ebp
  516fbb:	in     eax,0x4c
  516fbd:	pop    eax
  516fbe:	adc    ebp,DWORD PTR [ecx-0x4c60b777]
  516fc4:	scas   al,BYTE PTR es:[edi]
  516fc5:	stos   BYTE PTR es:[edi],al
  516fc6:	mov    edi,0x4cf4213d
  516fcb:	mov    dh,0xe2
  516fcd:	add    eax,edi
  516fcf:	mov    ch,0xd1
  516fd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  516fd2:	sub    bh,dl
  516fd4:	hlt    
  516fd5:	sahf   
  516fd6:	jo     0x51700b
  516fd8:	xor    eax,0x781cf497
  516fdd:	sbb    eax,0xca5d77d1
  516fe2:	call   0x6db508d0
  516fe7:	xor    ebp,DWORD PTR [edi+0x3836625b]
  516fed:	or     eax,0x157f495b
  516ff2:	pop    eax
  516ff3:	das    
  516ff4:	xor    BYTE PTR [esi-0x2e],dl
  516ff7:	je     0x516fc5
  516ff9:	xor    ebx,DWORD PTR [esi+0x76]
  516ffc:	adc    DWORD PTR [ebp+0x2d45bf56],0x364a6c16
  517006:	cld    
  517007:	repz loop 0x517004
  51700a:	mov    eax,ds:0x4a938749
  51700f:	cwde   
  517010:	cmp    al,0xd6
  517012:	cdq    
  517013:	push   esp
  517014:	test   al,0x78
  517016:	or     ebx,eax
  517018:	lahf   
  517019:	push   si
  51701b:	pop    edi
  51701c:	jne    0x51706c
  51701e:	loope  0x517085
  517020:	or     edx,DWORD PTR [ecx]
  517022:	repnz pop esi
  517024:	mov    ds:0xe9cfdebb,al
  517029:	sbb    eax,0xfdd28c40
  51702e:	jp     0x516ff0
  517030:	fwait
  517031:	mov    ecx,0xad3549a5
  517036:	dec    edi
  517037:	repnz cmp BYTE PTR [esi],bh
  51703a:	out    dx,ax
  51703c:	adc    al,0x53
  51703e:	mov    eax,0x7c199817
  517043:	mov    esi,0xec1aa0d9
  517048:	adc    DWORD PTR [esi+0x7e4ad10d],ebp
  51704e:	sub    eax,0xed19ccfc
  517053:	cmp    BYTE PTR [edi+0x3],ah
  517056:	arpl   WORD PTR [eax+0x6],dx
  517059:	push   edx
  51705a:	push   edx
  51705b:	inc    edx
  51705c:	outs   dx,BYTE PTR ds:[esi]
  51705d:	(bad)  
  51705e:	and    eax,0xae79723e
  517063:	ds (bad) 
  517066:	mov    ch,BYTE PTR [ebx-0x7c8de7fd]
  51706c:	scas   eax,DWORD PTR es:[edi]
  51706d:	stc    
  51706e:	out    0x55,al
  517070:	out    0x41,eax
  517072:	sbb    esp,DWORD PTR ss:[esi-0x44]
  517076:	and    ecx,DWORD PTR [esi+0x24]
  517079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51707a:	dec    ebx
  51707b:	xchg   ebp,eax
  51707c:	cmp    eax,0x54caf9b9
  517081:	stos   DWORD PTR es:[edi],eax
  517082:	adc    edx,edx
  517084:	xlat   BYTE PTR ds:[ebx]
  517085:	outs   dx,BYTE PTR ds:[esi]
  517086:	cmp    esi,ebx
  517088:	mov    al,ds:0xe0988fa1
  51708d:	cmp    edi,DWORD PTR [ebp-0x20]
  517090:	adc    eax,0xd6fe001f
  517095:	(bad)  
  517096:	push   esi
  517097:	xchg   eax,esp
  517099:	or     DWORD PTR [eax-0xfcbad13],edx
  51709f:	pop    es
  5170a0:	pop    ebp
  5170a1:	adc    eax,0x8ceb5fc6
  5170a6:	scas   eax,DWORD PTR es:[edi]
  5170a7:	gs mov ch,0x99
  5170aa:	cld    
  5170ab:	jecxz  0x517069
  5170ad:	mov    ch,0x6d
  5170af:	jl     0x51703b
  5170b1:	mov    ds,WORD PTR [ebp-0x60ad9faa]
  5170b7:	out    dx,al
  5170b8:	mov    ?,WORD PTR [edx-0x154ce9c2]
  5170be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5170bf:	std    
  5170c0:	div    BYTE PTR [edx]
  5170c2:	ins    BYTE PTR es:[edi],dx
  5170c3:	js     0x51710d
  5170c5:	adc    DWORD PTR [ebx+ecx*2-0x23],esp
  5170c9:	or     BYTE PTR [ebp-0x6884abac],cl
  5170cf:	jnp    0x51711d
  5170d1:	test   eax,0xedc667e5
  5170d6:	push   edx
  5170d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5170d8:	mov    ebx,0x92122696
  5170dd:	xchg   edx,eax
  5170de:	fsubr  st(3),st
  5170e0:	add    DWORD PTR [edx+0x38769fee],edx
  5170e6:	daa    
  5170e7:	repnz or BYTE PTR [ebx-0x7bbb6f36],al
  5170ee:	adc    al,0xa8
  5170f0:	xchg   esp,eax
  5170f1:	shl    DWORD PTR [eax],0x7e
  5170f4:	or     ebp,ebx
  5170f6:	dec    ebp
  5170f7:	mov    ds:0x9c0e97ff,al
  5170fc:	push   0x23
  5170fe:	lds    ebx,FWORD PTR [ebp+0x8]
  517101:	jbe    0x5170fa
  517103:	xchg   ebp,eax
  517104:	push   0xc0648c
  517109:	popa   
  51710a:	inc    edi
  51710b:	dec    esi
  51710c:	mov    ch,0x4c
  51710e:	or     BYTE PTR [edi],dh
  517110:	into   
  517111:	cld    
  517112:	cld    
  517113:	inc    ebx
  517114:	stos   DWORD PTR es:[edi],eax
  517115:	add    edi,DWORD PTR [ebx]
  517117:	cmp    ebx,DWORD PTR [edi+0x1a391bda]
  51711d:	test   BYTE PTR [ebx-0x74669eb0],dh
  517123:	out    dx,eax
  517124:	push   ecx
  517125:	cmc    
  517126:	dec    edi
  517127:	mov    bl,0xa1
  517129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51712a:	adc    DWORD PTR [esp+ebp*8+0x51612f22],edx
  517131:	xchg   bp,ax
  517133:	add    al,0x52
  517135:	rcl    BYTE PTR [edi+eiz*1+0x7e],1
  517139:	ins    BYTE PTR es:[edi],dx
  51713a:	or     DWORD PTR [ecx],esi
  51713c:	xchg   edx,eax
  51713d:	fist   DWORD PTR [ebp+0x28]
  517140:	push   ecx
  517141:	xor    BYTE PTR [edx+0x51f7a92c],al
  517147:	in     eax,0xde
  517149:	sbb    ecx,DWORD PTR gs:[ecx]
  51714c:	stc    
  51714d:	imul   edi,DWORD PTR [ecx-0x1227a80c],0xffffff90
  517154:	jmp    0x55d01ab1
  517159:	addr16 test al,0xf3
  51715c:	jno    0x51717e
  51715e:	xchg   DWORD PTR [ebx+0xf],ecx
  517161:	cmp    al,0xaa
  517163:	mov    esi,0x53169047
  517168:	hlt    
  517169:	or     dl,BYTE PTR [ebx+0x43]
  51716c:	jne    0x51715b
  51716e:	(bad)  
  51716f:	pop    edi
  517170:	push   ebx
  517171:	lea    eax,[ebp-0x5b]
  517174:	cmp    BYTE PTR [ebx],ah
  517176:	stos   DWORD PTR es:[edi],eax
  517177:	ret    0x1c23
  51717a:	popa   
  51717b:	out    0xc6,al
  51717d:	jbe    0x5171d6
  51717f:	xlat   BYTE PTR ds:[ebx]
  517180:	fsubr  QWORD PTR [edx+0x71]
  517183:	adc    esi,DWORD PTR [ecx+0x341ea988]
  517189:	rol    BYTE PTR [edi-0x7d],0x96
  51718d:	(bad)  
  51718e:	dec    edi
  51718f:	mov    ah,0x52
  517191:	and    esi,DWORD PTR [edi+ebx*8-0x60]
  517195:	aad    0xd8
  517197:	pop    esp
  517198:	mov    esp,0x874e7ec5
  51719d:	or     BYTE PTR [edx-0x66],0x6f
  5171a1:	inc    edx
  5171a2:	dec    esp
  5171a3:	adc    DWORD PTR [ebp-0x7a],ebp
  5171a6:	shl    bl,1
  5171a8:	and    BYTE PTR [eax-0x635a7326],ah
  5171ae:	and    esp,DWORD PTR [ebp-0x49]
  5171b1:	cmp    eax,0x8f3024ac
  5171b6:	popf   
  5171b7:	repz and ebx,ebp
  5171ba:	fdivr  QWORD PTR [ecx]
  5171bc:	pop    esi
  5171bd:	pusha  
  5171be:	mov    esp,0x584d793b
  5171c3:	aas    
  5171c4:	cmc    
  5171c5:	mov    eax,ds:0xd892f475
  5171ca:	mov    eax,ebx
  5171cc:	repnz lods al,BYTE PTR ds:[esi]
  5171ce:	pop    ecx
  5171cf:	lahf   
  5171d0:	push   ss
  5171d1:	inc    ebp
  5171d2:	push   esi
  5171d3:	ins    BYTE PTR es:[edi],dx
  5171d4:	pop    ds
  5171d5:	(bad)  
  5171d6:	lock mov dh,0xd7
  5171d9:	push   edi
  5171da:	add    DWORD PTR [ebp+0x170d8516],esi
  5171e0:	jl     0x5171c6
  5171e2:	loop   0x5171a1
  5171e4:	mov    cl,0xb0
  5171e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5171e7:	stos   DWORD PTR es:[edi],eax
  5171e8:	push   0x78
  5171ea:	int3   
  5171eb:	cmp    eax,0x561d3de8
  5171f0:	pusha  
  5171f1:	pop    edi
  5171f2:	cmp    al,0xec
  5171f4:	sub    eax,0x10d24b83
  5171f9:	sub    cl,al
  5171fb:	sbb    dh,BYTE PTR [edi+0x59]
  5171fe:	cmc    
  5171ff:	push   0x3ab5b7ec
  517204:	sar    DWORD PTR [edi+0xbc4f80a],0xd9
  51720b:	cmp    al,0x55
  51720d:	mov    ebx,0xe30407fe
  517212:	lds    cx,DWORD PTR [edi]
  517215:	inc    esi
  517216:	add    edi,DWORD PTR [edx]
  517218:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517219:	jns    0x5171ba
  51721b:	std    
  51721c:	rcr    bl,1
  51721e:	ret    
  51721f:	cwde   
  517220:	mov    esi,0xbedbdd20
  517225:	add    DWORD PTR [esi],edx
  517227:	and    BYTE PTR ss:[eax+0x1a],dh
  51722b:	lock and ah,BYTE PTR [ecx]
  51722e:	mov    dh,0x5f
  517230:	pop    ebp
  517231:	fnstcw WORD PTR [eax+eiz*4]
  517234:	lea    edx,[edi]
  517236:	xchg   edi,eax
  517237:	test   DWORD PTR [edi+0x305eac80],ebx
  51723d:	push   eax
  51723e:	mov    eax,ds:0xc756a16
  517243:	mov    cl,0x9b
  517245:	into   
  517246:	punpckhwd mm4,QWORD PTR [ecx+0x23]
  51724a:	cmp    eax,DWORD PTR [ecx+0x25ba3e23]
  517250:	add    al,0x9c
  517252:	fbstp  TBYTE PTR [esi-0x1e8efcd3]
  517258:	sbb    ch,BYTE PTR [ecx+0x1e37d117]
  51725e:	or     BYTE PTR [eax+edi*8-0x44d76dda],dh
  517265:	std    
  517266:	hlt    
  517267:	test   al,0xa5
  517269:	jmp    0x9b3b:0xfd44579
  517270:	xor    BYTE PTR [edi+ecx*4-0x4],0x39
  517275:	retf   
  517276:	jno    0x517235
  517278:	jmp    0x517270
  51727a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51727b:	sbb    dh,bl
  51727d:	nop
  51727e:	cmp    eax,0x4451bb72
  517283:	stos   DWORD PTR es:[edi],eax
  517284:	popf   
  517285:	push   edi
  517286:	test   BYTE PTR [esi+0x5a7d8b52],bl
  51728c:	fwait
  51728d:	das    
  51728e:	sub    dh,cl
  517290:	pop    eax
  517291:	sub    bh,bl
  517293:	pop    esp
  517294:	aaa    
  517295:	icebp  
  517296:	ret    
  517297:	inc    ebx
  517298:	in     eax,dx
  517299:	in     al,dx
  51729a:	aam    0xf5
  51729c:	stc    
  51729d:	inc    BYTE PTR [eax+0x13]
  5172a0:	cmp    al,0x71
  5172a2:	push   edx
  5172a3:	rol    edx,cl
  5172a5:	mov    ebx,0xb018dde8
  5172aa:	pop    ss
  5172ab:	ds out 0x42,eax
  5172ae:	xor    BYTE PTR [edx],0xe2
  5172b1:	cmp    eax,0x4448295a
  5172b6:	aad    0x65
  5172b8:	sub    BYTE PTR [esi-0x1c153397],dl
  5172be:	(bad)  
  5172bf:	jl     0x5172e4
  5172c1:	hlt    
  5172c2:	sti    
  5172c3:	mov    ah,0x83
  5172c5:	es jae 0x51724f
  5172c8:	retf   
  5172c9:	call   0xb80d91e
  5172ce:	test   si,0xc1b7
  5172d3:	int3   
  5172d4:	ret    
  5172d5:	and    BYTE PTR [ecx-0x5c4adfeb],0x7d
  5172dc:	je     0x51732e
  5172de:	mov    ?,WORD PTR [ecx+0x6c]
  5172e1:	ins    BYTE PTR es:[edi],dx
  5172e2:	(bad)  
  5172e3:	test   al,0x15
  5172e5:	adc    DWORD PTR [ecx+0x7994bb08],0xca8c7b6c
  5172ef:	fdivr  QWORD PTR [edx+eiz*8+0x1fd822c5]
  5172f6:	pand   mm3,QWORD PTR [edx+edx*2-0x2e49feb0]
  5172fe:	fbld   TBYTE PTR [eax]
  517300:	sub    eax,0x447664e9
  517305:	pop    edx
  517306:	clc    
  517307:	jmp    0x7ca4343f
  51730c:	xor    al,0xdf
  51730e:	and    DWORD PTR [ecx+0x17dc1553],0xffffffd0
  517315:	dec    ebx
  517316:	inc    ebp
  517317:	sbb    eax,0x812dd5c3
  51731c:	loop   0x517311
  51731e:	lods   eax,DWORD PTR ds:[esi]
  51731f:	xchg   sp,ax
  517321:	fwait
  517322:	sbb    al,BYTE PTR [edx-0x1a]
  517325:	daa    
  517326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  517327:	das    
  517328:	ja     0x5172db
  51732a:	xchg   ebp,eax
  51732b:	cs in  eax,dx
  51732d:	sub    BYTE PTR [edi],0x8
  517330:	push   eax
  517331:	jg     0x517329
  517333:	xchg   ebx,eax
  517334:	mov    ds,WORD PTR [edx+edi*4]
  517337:	sub    DWORD PTR [esi-0x1f],edx
  51733a:	xchg   ecx,eax
  51733b:	mov    cs,WORD PTR [edi-0x5b]
  51733e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  517340:	fidiv  DWORD PTR [edx-0x6]
  517343:	bnd jmp 0x999774b5
  517349:	leave  
  51734a:	ins    DWORD PTR es:[edi],dx
  51734b:	retf   
  51734c:	pop    DWORD PTR [edx+0x34]
  51734f:	pop    esi
  517350:	ret    0x6fc2
  517353:	ins    BYTE PTR es:[edi],dx
  517354:	fdiv   st(4),st
  517356:	iret   
  517357:	pushf  
  517358:	adc    BYTE PTR [ecx-0x527f7c53],0x81
  51735f:	out    0x88,eax
  517361:	dec    esi
  517362:	inc    esp
  517363:	data16 jl 0x5172ed
  517366:	mov    eax,0x65a5496a
  51736b:	dec    ebx
  51736c:	cmp    cl,BYTE PTR [edi+ebx*1]
  51736f:	push   eax
  517370:	std    
  517371:	daa    
  517372:	data16 das 
  517374:	push   edx
  517375:	sbb    DWORD PTR [edi+ecx*2-0x55],edx
  517379:	fisttp DWORD PTR [ebx+esi*8]
  51737c:	cmp    eax,0x124ab3f3
  517381:	mov    edx,0xb3a2f659
  517386:	loop   0x5173b9
  517388:	(bad)  
  517389:	cmp    ch,dh
  51738b:	pop    esp
  51738c:	or     ah,BYTE PTR [esi]
  51738e:	(bad)  
  51738f:	jmp    0xc082fe0
  517394:	int3   
  517395:	and    dh,BYTE PTR [esi-0x11]
  517398:	mov    ch,0xd2
  51739a:	ss cdq 
  51739c:	sbb    al,0x2f
  51739e:	sub    al,0x5a
  5173a0:	or     esi,ebp
  5173a2:	jnp    0x517414
  5173a4:	inc    ebp
  5173a5:	mov    esi,0x9f02de7f
  5173aa:	cmp    al,0xd4
  5173ac:	dec    ebx
  5173ad:	push   ss
  5173ae:	inc    eax
  5173af:	push   ebp
  5173b0:	or     eax,ebx
  5173b2:	sub    ebp,0xfd5f4fc0
  5173b8:	add    esp,eax
  5173ba:	out    0x87,al
  5173bc:	cmp    eax,0x6b00fc7d
  5173c1:	xchg   ebp,eax
  5173c2:	pop    ebx
  5173c3:	adc    bl,al
  5173c5:	stos   BYTE PTR es:[edi],al
  5173c6:	and    DWORD PTR ds:0xebdbb08b,edx
  5173cc:	test   eax,0xc69136f
  5173d1:	dec    ecx
  5173d2:	mov    bh,0xe1
  5173d4:	adc    BYTE PTR [ebx+0x53],0xa5
  5173d8:	inc    ebx
  5173d9:	sub    BYTE PTR [ebx-0x78de4675],dh
  5173df:	jne    0x5173a9
  5173e1:	or     esi,DWORD PTR [ecx+edx*2]
  5173e4:	xchg   ebx,eax
  5173e5:	fist   WORD PTR [ebx+0x6b]
  5173e8:	sbb    ebx,DWORD PTR [edx+0x7f]
  5173eb:	push   esi
  5173ec:	mov    ch,BYTE PTR [ecx+0x4c]
  5173ef:	jo     0x517413
  5173f1:	inc    ebp
  5173f2:	sub    eax,0x9b999568
  5173f7:	ins    BYTE PTR es:[edi],dx
  5173f8:	sbb    ah,BYTE PTR [ebp-0x6f]
  5173fb:	(bad)  
  5173fc:	das    
  5173fd:	aaa    
  5173fe:	inc    edi
  5173ff:	adc    DWORD PTR [esp+ebx*4-0x1d7f30f9],0xffffffb0
  517407:	adc    BYTE PTR [ebx],bh
  517409:	or     eax,0x416f3d21
  51740e:	pushf  
  51740f:	mov    DWORD PTR [edx-0x78],edi
  517412:	add    DWORD PTR [esi],edx
  517414:	sub    bl,BYTE PTR [edi-0x1c]
  517417:	dec    ebx
  517418:	xchg   esp,eax
  517419:	or     BYTE PTR [ecx],bh
  51741b:	add    BYTE PTR [esi-0x77],al
  51741e:	push   cs
  51741f:	pop    ds
  517420:	daa    
  517421:	mov    bh,0xa7
  517423:	(bad)  
  517425:	adc    eax,0x35b008c2
  51742a:	mov    esp,cs
  51742c:	jge    0x517447
  51742e:	mov    ds:0xf1a77da0,al
  517433:	pusha  
  517434:	and    al,0xc0
  517436:	repz push 0x62
  517439:	fidiv  WORD PTR [ebx-0x29bdd018]
  51743f:	xchg   ebp,eax
  517440:	or     eax,0x25fb7d3b
  517445:	inc    edi
  517446:	mov    es,WORD PTR [ebx-0x62]
  517449:	mov    dh,0xe5
  51744b:	inc    esi
  51744c:	xor    eax,0xc03c31da
  517451:	stc    
  517452:	mov    al,ds:0x2df7db0f
  517457:	bound  edx,QWORD PTR [esi]
  517459:	inc    eax
  51745a:	gs xchg ecx,eax
  51745c:	ror    BYTE PTR [edx],0x5f
  51745f:	pop    es
  517460:	inc    edi
  517461:	inc    ebp
  517462:	pop    ebx
  517463:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517465:	mov    cl,0x8e
  517467:	push   ecx
  517468:	cmp    eax,0x99a1b589
  51746d:	test   BYTE PTR [esi],ch
  51746f:	arpl   WORD PTR [edi-0x4ffd13c],bx
  517475:	mov    WORD PTR [esi-0x2fdadcc7],gs
  51747b:	jmp    0x5174ef
  51747d:	pop    esi
  51747e:	in     eax,dx
  51747f:	and    ecx,DWORD PTR [esi+eiz*2-0x69]
  517483:	dec    ebx
  517484:	and    dl,bl
  517486:	xchg   ebp,eax
  517487:	test   eax,0x558ccfd2
  51748c:	retfw  
  51748e:	jns    0x5174cb
  517490:	xchg   edi,eax
  517491:	sub    DWORD PTR [ecx-0x2f3c1b53],ecx
  517497:	sahf   
  517498:	cmp    bl,BYTE PTR [ebp+0x28]
  51749b:	push   esi
  51749c:	xchg   edi,eax
  51749d:	xchg   esi,eax
  51749e:	jmp    0x5d8f:0x842eea3c
  5174a5:	cwde   
  5174a6:	push   es
  5174a7:	les    esi,FWORD PTR [edx+0xfa3f45]
  5174ad:	aas    
  5174ae:	or     bl,ch
  5174b0:	fs mov al,ds:0x2137751a
  5174b7:	dec    edx
  5174b8:	out    dx,al
  5174b9:	test   DWORD PTR [edi+0x3d],ebx
  5174bc:	mov    dl,0x8c
  5174be:	test   eax,0x2f2e42f3
  5174c3:	xor    BYTE PTR [ecx+0x7ee05061],dl
  5174c9:	(bad)  
  5174ca:	lods   al,BYTE PTR ds:[esi]
  5174cb:	into   
  5174cc:	jmp    0x2cb30bd7
  5174d1:	xor    BYTE PTR [edx+ebp*4],dl
  5174d4:	dec    edx
  5174d5:	pop    ds
  5174d6:	icebp  
  5174d7:	les    esp,FWORD PTR [ecx-0x8]
  5174da:	cmp    dl,al
  5174dc:	xchg   ecx,eax
  5174dd:	inc    esi
  5174de:	aas    
  5174df:	outs   dx,BYTE PTR ds:[esi]
  5174e0:	xor    BYTE PTR [esi-0x736494e7],dl
  5174e6:	lds    edx,FWORD PTR [esi+0x14]
  5174e9:	stc    
  5174ea:	out    dx,al
  5174eb:	sti    
  5174ec:	sub    eax,0x5820eb44
  5174f1:	mul    DWORD PTR [ebp+0x25de9fbc]
  5174f7:	stos   BYTE PTR es:[edi],al
  5174f8:	loop   0x5174f7
  5174fa:	inc    ebp
  5174fb:	(bad)  
  5174fc:	shl    BYTE PTR [eax],cl
  5174fe:	mov    edx,DWORD PTR [edx+0x4]
  517501:	push   eax
  517502:	sub    al,0x24
  517504:	ins    DWORD PTR es:[edi],dx
  517505:	dec    edx
  517506:	dec    ecx
  517507:	inc    ecx
  517508:	cmp    DWORD PTR [edx],ebx
  51750a:	pop    edi
  51750b:	popa   
  51750c:	and    al,0xb5
  51750e:	test   al,0x3
  517510:	or     al,0xb9
  517512:	add    edx,DWORD PTR gs:[ebx]
  517515:	cmp    eax,0xc04fd6da
  51751a:	inc    edi
  51751b:	add    BYTE PTR [ebx+0x23],bl
  51751e:	shr    BYTE PTR [ebx],cl
  517520:	sbb    ch,cl
  517522:	jg     0x51755f
  517524:	mov    ebx,0xa482e41a
  517529:	ins    DWORD PTR es:[edi],dx
  51752a:	inc    edx
  51752b:	xchg   edx,eax
  51752c:	mov    edx,0xb35b47b
  517531:	(bad)  
  517532:	or     ecx,0xf9842cb0
  517538:	int    0xfd
  51753a:	or     edx,DWORD PTR [ebx]
  51753c:	jle    0x517584
  51753e:	fdivr  DWORD PTR [esi-0x1a]
  517541:	jmp    0xb04f:0xa74208ee
  517548:	nop
  517549:	push   esi
  51754a:	mov    bl,0x96
  51754c:	out    0xbb,eax
  51754e:	mov    edx,0x634d7d4a
  517553:	stos   BYTE PTR es:[edi],al
  517554:	cdq    
  517555:	ret    0x8bfe
  517558:	inc    edi
  517559:	xor    esi,0xffffffc6
  51755c:	(bad)  
  51755d:	ficomp WORD PTR ds:0x2d13e44f
  517563:	mov    bh,0xa8
  517565:	out    0xbe,al
  517567:	nop
  517568:	sbb    eax,0xb214ec89
  51756d:	add    cl,BYTE PTR [eax-0x39]
  517570:	mov    eax,ds:0x84418523
  517575:	jg     0x5175ec
  517577:	push   0xe384d539
  51757c:	mov    ch,0x18
  51757e:	int    0xb2
  517580:	mov    eax,ds:0xd267101d
  517585:	dec    edi
  517586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  517587:	add    al,BYTE PTR [eax-0x3]
  51758a:	dec    esi
  51758b:	mov    edx,0xf7718264
  517590:	ret    
  517591:	mov    bl,ah
  517593:	repz shr DWORD PTR [ecx-0x3fa259d6],1
  51759a:	gs sub al,0x12
  51759d:	les    ecx,FWORD PTR [edx]
  51759f:	fstp   TBYTE PTR [edi+0x7a]
  5175a2:	les    eax,FWORD PTR [esi]
  5175a4:	or     DWORD PTR [ebx-0x1f],esp
  5175a7:	lods   eax,DWORD PTR ds:[esi]
  5175a8:	dec    ecx
  5175a9:	jp     0x517555
  5175ab:	pop    edi
  5175ac:	sub    DWORD PTR [esi],ecx
  5175ae:	(bad)  
  5175af:	hlt    
  5175b0:	sbb    bl,BYTE PTR [ebx+esi*4-0x47]
  5175b4:	or     edx,ecx
  5175b6:	pop    edi
  5175b7:	pop    ecx
  5175b8:	jmp    0x169aa8e
  5175bd:	ds push ecx
  5175bf:	and    DWORD PTR [eax],edi
  5175c1:	std    
  5175c2:	add    DWORD PTR [esi],eax
  5175c4:	xchg   esi,eax
  5175c5:	outs   dx,DWORD PTR ds:[esi]
  5175c6:	xor    dh,ch
  5175c8:	pop    esi
  5175c9:	scas   eax,DWORD PTR es:[edi]
  5175ca:	jbe    0x5175d0
  5175cc:	and    ch,ah
  5175ce:	cmp    BYTE PTR [eax],dl
  5175d0:	pop    ds
  5175d1:	aad    0xa2
  5175d3:	in     eax,dx
  5175d4:	ret    
  5175d5:	call   FWORD PTR [esi-0x80]
  5175d8:	sbb    ebx,DWORD PTR [ebp+ecx*2+0x53]
  5175dc:	xor    DWORD PTR [ecx],edx
  5175de:	ret    
  5175df:	lea    esp,ds:0x9304af1b
  5175e5:	(bad)  
  5175e6:	fst    QWORD PTR [edi-0x17943b1e]
  5175ec:	iret   
  5175ed:	adc    bh,BYTE PTR [eax-0x4279aa6b]
  5175f3:	pop    ecx
  5175f4:	in     eax,0x8b
  5175f6:	not    DWORD PTR [ebx-0x2181ecfe]
  5175fc:	test   al,0x3c
  5175fe:	in     al,0x58
  517600:	sbb    ah,BYTE PTR [edi]
  517602:	sbb    ch,ah
  517604:	pop    es
  517605:	push   ds
  517606:	xchg   edi,eax
  517607:	xchg   ebp,eax
  517608:	cmp    eax,0xe0d3d322
  51760d:	inc    edi
  51760e:	aad    0xf7
  517610:	add    al,0xa
  517612:	mov    eax,ds:0x1734ad19
  517617:	stos   BYTE PTR es:[edi],al
  517618:	out    0x11,eax
  51761a:	xchg   ebx,eax
  51761b:	cmp    ah,bl
  51761d:	aas    
  51761e:	imul   edi,DWORD PTR [ecx+0x442cc57d],0xffffffe7
  517625:	int    0xa0
  517627:	(bad)  
  517628:	jns    0x5175ac
  51762a:	push   ds
  51762b:	loop   0x51764b
  51762d:	sub    dl,BYTE PTR [esi]
  51762f:	fnstcw WORD PTR [eax+0x17]
  517632:	pop    ds
  517633:	stos   DWORD PTR es:[edi],eax
  517634:	sub    ebx,DWORD PTR [ebx]
  517636:	and    DWORD PTR [edi+0x57],ebx
  517639:	push   ss
  51763a:	and    BYTE PTR [edi],ah
  51763c:	cmp    esi,DWORD PTR [esi]
  51763e:	mov    DWORD PTR [ebx-0x7d98cbb5],edi
  517644:	sbb    eax,0x3ce4248a
  517649:	push   ecx
  51764a:	and    al,0xe
  51764c:	push   cs
  51764d:	inc    edx
  51764e:	xchg   BYTE PTR [edx],cl
  517650:	daa    
  517651:	add    ax,0x60c9
  517655:	dec    ebx
  517656:	jne    0x51769c
  517658:	dec    esp
  517659:	(bad)  
  51765a:	ss sti 
  51765c:	or     DWORD PTR [edi],edx
  51765e:	and    eax,0x37ace57f
  517663:	js     0x517641
  517665:	xor    eax,edi
  517667:	xchg   edx,eax
  517668:	enter  0x947c,0xbe
  51766c:	loop   0x517680
  51766e:	sbb    BYTE PTR ds:0x36b7ba3d,dh
  517674:	cmp    cl,bl
  517676:	icebp  
  517677:	arpl   WORD PTR [ebx],dx
  517679:	dec    edi
  51767a:	test   BYTE PTR [ebx+0x3a],ch
  51767d:	jmp    0x517665
  51767f:	cli    
  517680:	aas    
  517681:	fnstcw WORD PTR [esp+ebp*1]
  517684:	add    eax,0x6244052f
  517689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51768a:	fist   DWORD PTR [edi-0x24]
  51768d:	les    ebx,FWORD PTR [edi]
  51768f:	sub    eax,0x2e71e7d3
  517694:	sub    ebp,ebp
  517696:	ret    0x1a1a
  517699:	out    0x6a,al
  51769b:	and    al,0xf1
  51769d:	hlt    
  51769e:	add    al,0xf1
  5176a0:	test   eax,0x2920e328
  5176a5:	bound  ebp,QWORD PTR [edi+0x1d]
  5176a8:	inc    ecx
  5176a9:	(bad)  
  5176aa:	shl    DWORD PTR [eax-0x5a],1
  5176ad:	hlt    
  5176ae:	dec    ebp
  5176af:	xlat   BYTE PTR ds:[ebx]
  5176b0:	cdq    
  5176b1:	push   es
  5176b2:	cli    
  5176b3:	sti    
  5176b4:	push   esi
  5176b5:	mov    edi,0xfeb5a749
  5176ba:	pusha  
  5176bb:	lods   al,BYTE PTR ds:[esi]
  5176bc:	out    dx,eax
  5176bd:	scas   al,BYTE PTR es:[edi]
  5176be:	push   es
  5176bf:	fisttp WORD PTR [ecx+0x4e]
  5176c2:	aam    0x73
  5176c4:	or     BYTE PTR [ebx],0x81
  5176c7:	inc    ebp
  5176c8:	push   cs
  5176c9:	xor    ecx,DWORD PTR [eax-0x41]
  5176cc:	into   
  5176cd:	ficom  DWORD PTR [ebx-0x1c43fe3c]
  5176d3:	dec    ecx
  5176d4:	pop    ebx
  5176d5:	and    ecx,eax
  5176d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5176d8:	mov    ?,WORD PTR [eax-0x41]
  5176db:	cld    
  5176dc:	pop    esp
  5176dd:	push   cs
  5176de:	aaa    
  5176df:	sub    eax,0xf0b9d8e2
  5176e4:	push   ecx
  5176e5:	jecxz  0x5176c9
  5176e7:	xor    BYTE PTR [esi-0x2a],ah
  5176ea:	mov    ecx,0x80d0bf81
  5176ef:	push   ds
  5176f0:	adc    eax,0xb5b7f438
  5176f5:	(bad)  
  5176f7:	gs retf 
  5176f9:	sar    ch,0xca
  5176fc:	fnstcw WORD PTR [edx-0x75]
  5176ff:	cmp    eax,0x833476e4
  517704:	mov    al,0xf3
  517706:	jge    0x517715
  517708:	push   ebx
  517709:	scas   al,BYTE PTR es:[edi]
  51770a:	jb     0x4ab6bf0f
  517710:	test   eax,0x27cf9ad8
  517715:	sbb    eax,0xd9249901
  51771a:	(bad)  
  51771b:	dec    esi
  51771c:	jp     0x5176b1
  51771e:	xchg   ecx,eax
  51771f:	dec    eax
  517720:	ins    BYTE PTR es:[edi],dx
  517721:	push   edi
  517722:	adc    ebp,DWORD PTR [eax]
  517724:	out    0xa4,eax
  517726:	adc    BYTE PTR [ecx-0x1b],dl
  517729:	(bad)  
  51772a:	out    0x2,eax
  51772c:	nop
  51772d:	arpl   WORD PTR [eax],bp
  51772f:	dec    ebp
  517730:	xor    eax,0xe3d54201
  517735:	lods   al,BYTE PTR ds:[esi]
  517736:	mov    WORD PTR [ebx+ebx*2],?
  517739:	lods   eax,DWORD PTR ds:[esi]
  51773a:	mov    ch,0xc1
  51773c:	cmp    esp,ebx
  51773e:	sub    eax,0xbe5f0fa6
  517743:	add    bh,BYTE PTR [ebx]
  517745:	xchg   ecx,eax
  517746:	xchg   ecx,eax
  517747:	or     al,0x78
  517749:	pop    eax
  51774a:	jbe    0x5177c0
  51774c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51774d:	adc    bl,ah
  51774f:	mul    DWORD PTR [edx+0x64445916]
  517755:	jns    0x517745
  517757:	(bad)  
  517758:	loopne 0x5176dc
  51775a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51775b:	sub    ch,0xd5
  51775e:	cmp    ebp,DWORD PTR [ebp+eiz*4+0x7b]
  517762:	jecxz  0x5176fc
  517764:	xlat   BYTE PTR ds:[ebx]
  517765:	and    al,BYTE PTR [ecx-0x1f]
  517768:	cld    
  517769:	or     al,0xf4
  51776b:	cmp    BYTE PTR [ecx+0x2b0c09e6],0x3b
  517772:	xchg   ebx,eax
  517773:	ret    
  517774:	outs   dx,BYTE PTR ds:[esi]
  517775:	adc    eax,0x14136d18
  51777a:	add    BYTE PTR [esi+0x28],dh
  51777d:	mov    ebx,0x3fd69ef2
  517782:	sbb    eax,0x12654f82
  517787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517788:	pop    es
  517789:	mov    esi,DWORD PTR [ebp+0x1518d0a8]
  51778f:	les    ebx,FWORD PTR [edx]
  517791:	add    eax,0xd07dd0e4
  517796:	aaa    
  517797:	add    DWORD PTR [eax+0x4aedca7c],0xa1e21e11
  5177a1:	xchg   esi,eax
  5177a2:	int3   
  5177a3:	outs   dx,BYTE PTR ds:[esi]
  5177a4:	cwde   
  5177a5:	and    BYTE PTR [ecx-0x3b],cl
  5177a8:	test   al,0xcc
  5177aa:	mov    ecx,0x190802e8
  5177af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5177b0:	push   ss
  5177b1:	div    BYTE PTR ds:0xb81414c6
  5177b7:	mov    edx,0x78f3e271
  5177bc:	std    
  5177bd:	push   ebp
  5177be:	xchg   DWORD PTR [ebx-0x4ef5c92a],ebp
  5177c4:	mov    cl,0xd0
  5177c6:	pushf  
  5177c7:	cmp    eax,0xb08315bb
  5177cc:	ss push eax
  5177ce:	mov    ds:0x3f53c85f,eax
  5177d3:	jmp    0x5177dd
  5177d5:	je     0x5177a2
  5177d7:	jno    0x517779
  5177d9:	mov    esp,DWORD PTR [edx]
  5177db:	xchg   DWORD PTR [esi],edx
  5177dd:	mov    ebx,0xdf75ef62
  5177e2:	retf   
  5177e3:	add    DWORD PTR [edx-0x4d],0xffffff86
  5177e7:	push   ebp
  5177e8:	icebp  
  5177e9:	or     eax,0xdc90b281
  5177ee:	mov    ecx,0xf8e22edf
  5177f3:	jl     0x51782c
  5177f5:	aad    0x21
  5177f7:	arpl   WORD PTR [esi+0x6b],bx
  5177fa:	call   0xa08486d3
  5177ff:	mov    ds:0x3ce1c20c,al
  517804:	inc    eax
  517805:	out    dx,al
  517806:	cmp    DWORD PTR [edx+0x14],ecx
  517809:	pop    edi
  51780a:	ret    0xfd92
  51780d:	ins    DWORD PTR es:[edi],dx
  51780e:	cmp    ebp,DWORD PTR [esi+0xbccf03e]
  517814:	sub    eax,0xc5e6ae61
  517819:	shl    DWORD PTR [ecx-0x22],0x74
  51781d:	xchg   DWORD PTR [eax],eax
  51781f:	sahf   
  517820:	jae    0x51783e
  517822:	mov    edi,0x2fc7bf21
  517827:	adc    ah,ch
  517829:	xchg   DWORD PTR [eax+0x5b],ebp
  51782c:	xchg   ebx,eax
  51782d:	in     eax,dx
  51782e:	leave  
  51782f:	mov    eax,0x8111a4fd
  517834:	xor    cl,BYTE PTR [esi]
  517836:	mov    cl,BYTE PTR [ebp-0xe]
  517839:	fild   WORD PTR [ebx+edx*8+0x7a]
  51783d:	jno    0x517808
  51783f:	ja     0x51784d
  517841:	or     eax,0x34dfdc40
  517846:	mov    ebp,0xb64125b9
  51784b:	jbe    0x517870
  51784d:	pusha  
  51784e:	stc    
  51784f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517850:	cmp    eax,DWORD PTR [eax+0x453b98d5]
  517856:	or     eax,0xc14853a1
  51785b:	outs   dx,DWORD PTR ds:[esi]
  51785c:	leave  
  51785d:	xchg   DWORD PTR [edx],ebx
  51785f:	fist   WORD PTR [ebx+0x1e03805f]
  517865:	dec    cl
  517867:	in     eax,dx
  517868:	aad    0x9d
  51786a:	je     0x5177fc
  51786c:	rcl    DWORD PTR [eax],1
  51786e:	cli    
  51786f:	mov    ch,0x9
  517871:	imul   ebx,edx,0x2b
  517874:	mov    edx,0x8f0b2b79
  517879:	nop
  51787a:	test   BYTE PTR [edi],0x9b
  51787d:	pop    edx
  51787e:	lods   eax,DWORD PTR ds:[esi]
  51787f:	jecxz  0x517815
  517881:	icebp  
  517882:	push   ebx
  517883:	out    0xa5,al
  517885:	hlt    
  517886:	push   ebx
  517887:	jns    0x517811
  517889:	je     0x517839
  51788b:	popa   
  51788c:	inc    ecx
  51788d:	mov    ebp,0x40892243
  517892:	shl    ecx,cl
  517894:	das    
  517895:	ins    DWORD PTR es:[edi],dx
  517896:	cmp    al,0x2
  517898:	int    0xcf
  51789a:	push   ss
  51789b:	dec    ebx
  51789c:	inc    edx
  51789d:	gs scas al,BYTE PTR es:[edi]
  51789f:	ret    0x212d
  5178a2:	mov    edi,0x4e1c8160
  5178a7:	clc    
  5178a8:	mov    bl,0xd6
  5178aa:	adc    BYTE PTR [ebp+0x1d8c1417],dl
  5178b0:	push   edx
  5178b1:	cmp    DWORD PTR [ebx+0x19],edi
  5178b4:	mov    edi,0x74823ef8
  5178b9:	push   ecx
  5178ba:	je     0x5178b7
  5178bc:	mov    ecx,0xb62e11e5
  5178c1:	and    esp,DWORD PTR [ebx]
  5178c3:	jmp    0x52a2a46f
  5178c8:	fcom   QWORD PTR [edi-0x49935fd3]
  5178ce:	leave  
  5178cf:	pop    eax
  5178d0:	mov    BYTE PTR [ecx-0x44],bh
  5178d3:	sub    esp,eax
  5178d5:	bound  ebp,QWORD PTR [esi]
  5178d7:	leave  
  5178d8:	jle    0x517876
  5178da:	rcl    BYTE PTR [edi-0x2d],cl
  5178dd:	clc    
  5178de:	xchg   esi,eax
  5178df:	ja     0x5178f3
  5178e1:	in     al,0x53
  5178e3:	lahf   
  5178e4:	out    dx,al
  5178e5:	jp     0x51794f
  5178e7:	jb     0x51790d
  5178e9:	out    dx,al
  5178ea:	sbb    esi,ebx
  5178ec:	popf   
  5178ed:	in     al,dx
  5178ee:	and    edx,DWORD PTR [ecx+0x2deb8ae0]
  5178f4:	xor    eax,0xda651065
  5178f9:	lock ret 0x4cb9
  5178fd:	loopne 0x517903
  5178ff:	test   DWORD PTR [ecx+0x2faa0a83],esi
  517905:	mov    DWORD PTR cs:0x72dfe74a,ecx
  51790c:	sbb    al,0xe2
  51790e:	fsubr  st,st(2)
  517910:	cwde   
  517911:	mov    dl,0x53
  517913:	gs stc 
  517915:	mov    bl,0x31
  517917:	into   
  517918:	xor    BYTE PTR [esi-0x3c13c46e],al
  51791e:	ins    DWORD PTR es:[edi],dx
  51791f:	sahf   
  517920:	xchg   esp,eax
  517921:	or     BYTE PTR [edx],dl
  517923:	fndisi(8087 only) 
  517925:	mov    edi,0xbeb523e4
  51792a:	xchg   esp,eax
  51792b:	out    0x34,eax
  51792d:	retf   
  51792e:	stos   DWORD PTR es:[edi],eax
  51792f:	xor    DWORD PTR [eax+ebp*1-0x49],ebx
  517933:	sbb    BYTE PTR [edi-0x75],ah
  517936:	out    dx,al
  517937:	int3   
  517938:	jmp    0x603bb5f5
  51793d:	adc    esp,esi
  51793f:	iret   
  517940:	rol    BYTE PTR [ebx+0x22220b],0x5c
  517947:	sub    eax,0xcd27b381
  51794c:	mov    cl,BYTE PTR [eax-0x30f0f74]
  517952:	mov    ebp,0xe91d5ea6
  517957:	sub    eax,0x513400ac
  51795c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51795d:	jne    0x51794e
  51795f:	outs   dx,BYTE PTR ds:[esi]
  517960:	or     al,0x1f
  517962:	sub    dl,dl
  517964:	cmc    
  517965:	jmp    0x51796f
  517967:	xchg   BYTE PTR [esi],cl
  517969:	icebp  
  51796a:	mov    WORD PTR [esi-0x371fc296],gs
  517970:	sub    eax,edi
  517972:	clc    
  517973:	out    dx,al
  517974:	pop    esi
  517975:	sbb    edi,DWORD PTR [edx-0x3972c024]
  51797b:	mov    ebx,0x3fdd6bcf
  517980:	int    0xdf
  517982:	les    ebx,FWORD PTR [ebp-0x17]
  517985:	inc    esp
  517986:	icebp  
  517987:	adc    edi,ecx
  517989:	xor    dl,BYTE PTR [edx]
  51798b:	fs xchg ecx,eax
  51798d:	popa   
  51798e:	mov    cl,0x1d
  517990:	fcomp  st(7)
  517992:	and    BYTE PTR [ebp+0x49],bl
  517995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517996:	call   0x7f944253
  51799b:	aad    0x2b
  51799d:	fisttp QWORD PTR [esi]
  51799f:	jbe    0x517945
  5179a1:	sub    bh,BYTE PTR [esp+edi*4-0xa]
  5179a5:	push   0xffffff8b
  5179a7:	fisubr WORD PTR [ebp-0x5f1d0c67]
  5179ad:	frstor [ebx+0x5c601f3]
  5179b3:	int    0xa2
  5179b5:	in     eax,dx
  5179b6:	out    0x3b,al
  5179b8:	repz cli 
  5179ba:	jge    0x517a23
  5179bc:	mov    ah,0x35
  5179be:	dec    edx
  5179bf:	jno    0x517a19
  5179c1:	dec    eax
  5179c2:	xchg   edi,eax
  5179c3:	dec    esi
  5179c4:	popf   
  5179c5:	outs   dx,DWORD PTR ds:[esi]
  5179c6:	or     dl,ah
  5179c8:	jno    0x5179d8
  5179ca:	xor    BYTE PTR [esi-0x769d03d4],0x41
  5179d1:	cmp    ebp,ebx
  5179d3:	mov    dl,0x4f
  5179d5:	dec    ebp
  5179d6:	sbb    dh,BYTE PTR [edx+0x11]
  5179d9:	add    ebx,DWORD PTR [eax]
  5179db:	fs stos DWORD PTR es:[edi],eax
  5179dd:	adc    eax,0x86cb3caf
  5179e2:	imul   ecx,edi,0xffffffd7
  5179e5:	and    edi,0x101fb2b3
  5179eb:	and    al,0x67
  5179ed:	(bad)  
  5179ee:	fdivrp st(2),st
  5179f0:	xor    al,0xef
  5179f2:	mov    ebp,0xe35da7ed
  5179f7:	dec    esi
  5179f8:	mov    ch,0xc4
  5179fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5179fb:	pop    ss
  5179fc:	popf   
  5179fd:	retf   0x278b
  517a00:	bound  ecx,QWORD PTR [ecx-0x210907f7]
  517a06:	push   eax
  517a07:	inc    edi
  517a08:	out    0x86,al
  517a0a:	mov    cl,0x74
  517a0c:	retf   0x25ec
  517a0f:	(bad)  
  517a10:	stos   DWORD PTR es:[edi],eax
  517a11:	pop    edi
  517a12:	aaa    
  517a13:	mov    al,0x6c
  517a15:	mov    esi,0x1485a647
  517a1a:	pusha  
  517a1b:	cs out dx,al
  517a1d:	cmp    DWORD PTR [esi],0xe3eb8fb2
  517a23:	jo     0x517a73
  517a25:	inc    edx
  517a26:	xchg   DWORD PTR [ebx],ebp
  517a28:	loop   0x517a0d
  517a2a:	cmp    al,0x3a
  517a2c:	cmp    eax,DWORD PTR [edi+edx*4-0x45]
  517a30:	xchg   ecx,eax
  517a31:	sbb    al,0x7
  517a33:	inc    esp
  517a34:	lods   eax,DWORD PTR ds:[esi]
  517a35:	aad    0x6c
  517a37:	nop
  517a38:	push   ebp
  517a39:	add    al,0x90
  517a3b:	mov    dh,BYTE PTR [ebx-0x2d]
  517a3e:	dec    edi
  517a3f:	sbb    al,0x91
  517a41:	cli    
  517a42:	jecxz  0x517a5b
  517a44:	cmp    al,0x18
  517a46:	jmp    0xd2f4:0x4b6934e1
  517a4d:	mov    ecx,0x8e442c86
  517a52:	mov    edi,edx
  517a54:	cld    
  517a55:	(bad)  
  517a56:	rcl    BYTE PTR [ebx-0x38],1
  517a59:	or     DWORD PTR [eax+0x1e07b7fb],ecx
  517a5f:	xchg   bh,ch
  517a61:	inc    esp
  517a62:	test   al,0xe0
  517a64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  517a65:	gs mov al,0xbc
  517a68:	xor    al,0x4b
  517a6a:	xchg   edi,eax
  517a6b:	add    DWORD PTR [ebp-0x58],esi
  517a6e:	dec    edx
  517a6f:	aam    0x12
  517a71:	xor    ebx,edi
  517a73:	dec    ecx
  517a74:	dec    esi
  517a75:	pop    esp
  517a76:	(bad)  
  517a77:	jae    0x5179f9
  517a79:	sahf   
  517a7a:	or     BYTE PTR [eax+edi*1+0x7e],dh
  517a7e:	popf   
  517a7f:	sbb    BYTE PTR [edi-0x5b7944f7],dl
  517a85:	pop    es
  517a86:	call   0x4257:0x1867dd97
  517a8d:	test   BYTE PTR [eax],cl
  517a8f:	push   ds
  517a90:	jbe    0x517ab7
  517a92:	fsubr  DWORD PTR [edi+0x25047cf5]
  517a98:	push   ss
  517a99:	jl     0x517a6e
  517a9b:	add    al,0xbe
  517a9d:	xor    edi,DWORD PTR [esi+0xa921fe3]
  517aa3:	xchg   DWORD PTR [ebp+0x1338b86e],ebx
  517aa9:	mov    al,0xdf
  517aab:	out    0x7,eax
  517aad:	gs popa 
  517aaf:	mov    bh,0xf4
  517ab1:	inc    eax
  517ab2:	ss push 0xe489cb1a
  517ab8:	mov    edi,0xaa85fe53
  517abd:	stos   BYTE PTR es:[edi],al
  517abe:	and    dl,bh
  517ac0:	jno    0x517af4
  517ac2:	ds mov ecx,0xff5ec068
  517ac8:	cld    
  517ac9:	pushf  
  517aca:	cmc    
  517acb:	aad    0x39
  517acd:	repz rol DWORD PTR [eax],0x24
  517ad1:	and    al,0xc
  517ad3:	imul   DWORD PTR [edx]
  517ad5:	sbb    eax,DWORD PTR [eax+ebp*4]
  517ad8:	lods   al,BYTE PTR ds:[esi]
  517ad9:	jbe    0x517a72
  517adb:	in     eax,dx
  517adc:	fucomi st,st(0)
  517ade:	fwait
  517adf:	jge    0x517b55
  517ae1:	jle    0x517af6
  517ae3:	test   ebp,esp
  517ae5:	data16 jnp 0x517b07
  517ae8:	inc    esi
  517ae9:	mov    ds:0x5004ef7f,eax
  517aee:	mov    cs,WORD PTR [esi+0x79a8002f]
  517af4:	adc    ecx,edi
  517af6:	or     al,0x49
  517af8:	sahf   
  517af9:	mov    BYTE PTR [ebx-0x3],bl
  517afc:	adc    bl,ch
  517afe:	ss dec eax
  517b00:	xor    DWORD PTR [ebx],ebp
  517b02:	inc    esi
  517b03:	and    al,0x54
  517b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517b06:	fist   DWORD PTR [ebx-0x28]
  517b09:	pop    eax
  517b0a:	and    eax,0xeb39fb96
  517b0f:	icebp  
  517b10:	inc    BYTE PTR cs:[ecx-0x5a]
  517b14:	out    0x14,eax
  517b16:	or     BYTE PTR [ebp+0xb],ch
  517b19:	ins    BYTE PTR es:[edi],dx
  517b1a:	xor    ecx,edx
  517b1c:	shl    BYTE PTR [eax+esi*1+0x31],1
  517b20:	push   ebp
  517b21:	xor    eax,0x9e036ebe
  517b26:	sbb    al,0x4a
  517b28:	dec    ecx
  517b29:	dec    ebp
  517b2a:	mov    esi,0xb89ead29
  517b2f:	and    edi,DWORD PTR [ebx-0x43]
  517b32:	or     eax,0x93d8461f
  517b37:	xlat   BYTE PTR ds:[ebx]
  517b38:	push   ds
  517b39:	mov    eax,ebx
  517b3b:	div    DWORD PTR ds:0xd8075e92
  517b41:	jmp    0x13ba7ef
  517b46:	out    0xde,al
  517b48:	fs test eax,0x281dd6e3
  517b4e:	cwde   
  517b4f:	sbb    eax,0x5b91bf12
  517b54:	jecxz  0x517b10
  517b56:	scas   eax,DWORD PTR es:[edi]
  517b57:	inc    eax
  517b58:	(bad)  
  517b59:	push   ds
  517b5a:	add    BYTE PTR [eax+0x68],dh
  517b5d:	popa   
  517b5e:	call   0xc02e7a56
  517b63:	push   0x400bed6e
  517b68:	add    DWORD PTR [eax+0x26b092ba],0x7e
  517b6f:	rol    BYTE PTR [ecx*8+0x41fdfbe],0x1b
  517b77:	ds loop 0x517b68
  517b7a:	enter  0xbff3,0x3d
  517b7e:	jae    0x517b6f
  517b80:	into   
  517b81:	jbe    0x517b3b
  517b83:	and    edx,0x72
  517b86:	add    BYTE PTR [ecx-0x19],al
  517b89:	adc    ebp,esp
  517b8b:	dec    edi
  517b8c:	daa    
  517b8d:	inc    esi
  517b8e:	add    eax,0x891bd761
  517b93:	(bad)  
  517b94:	cdq    
  517b95:	sub    al,0x66
  517b97:	ins    BYTE PTR es:[edi],dx
  517b98:	inc    esp
  517b99:	dec    edi
  517b9a:	in     eax,dx
  517b9b:	push   ebp
  517b9c:	push   ecx
  517b9d:	mov    bh,0x42
  517b9f:	push   edi
  517ba0:	pop    esp
  517ba1:	adc    cl,dl
  517ba3:	cmp    eax,0xadab0873
  517ba8:	hlt    
  517ba9:	mov    eax,0x976d4967
  517bae:	jle    0x517bfc
  517bb0:	cmp    bl,BYTE PTR [ebx+0x5c0a8c5]
  517bb6:	xchg   BYTE PTR [eax-0x29],ah
  517bb9:	jmp    0x5a9c19b4
  517bbe:	push   edi
  517bbf:	adc    edx,edi
  517bc1:	arpl   WORD PTR [edx],bp
  517bc3:	push   ebx
  517bc4:	push   ecx
  517bc5:	xchg   esp,eax
  517bc6:	jbe    0x517b8a
  517bc8:	inc    edi
  517bc9:	and    ch,BYTE PTR [edx-0x4]
  517bcc:	sub    eax,0xde4ee12c
  517bd1:	jg     0x517b65
  517bd3:	iret   
  517bd4:	fmul   QWORD PTR [eax-0x13]
  517bd7:	popa   
  517bd8:	(bad)  
  517bd9:	push   esi
  517bda:	or     BYTE PTR [ecx+0x2d71fd7a],bl
  517be0:	mov    ch,0x54
  517be2:	aam    0x33
  517be4:	jecxz  0x517be1
  517be6:	popf   
  517be7:	(bad)  [eax-0x7afe8ecf]
  517bed:	push   cs
  517bee:	mov    cl,0x5b
  517bf0:	jb     0x517bd4
  517bf2:	and    ah,dl
  517bf4:	lds    esi,FWORD PTR [edx+0x1334ac48]
  517bfa:	pusha  
  517bfb:	outs   dx,BYTE PTR ds:[esi]
  517bfc:	outs   dx,BYTE PTR ds:[esi]
  517bfd:	jno    0x517bef
  517bff:	idiv   BYTE PTR [ebx]
  517c01:	xlat   BYTE PTR ds:[ebx]
  517c02:	adc    BYTE PTR [eax-0x2],dl
  517c05:	mov    al,0x87
  517c07:	push   eax
  517c08:	sahf   
  517c09:	sti    
  517c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  517c0b:	or     edi,DWORD PTR [esi-0x14]
  517c0e:	push   es
  517c0f:	(bad)  
  517c10:	mov    esp,DWORD PTR [esi+0x4c]
  517c13:	adc    ch,BYTE PTR [edx-0x23602d15]
  517c19:	imul   ebp,edx,0x5f40b044
  517c1f:	pushf  
  517c20:	mov    eax,ds:0x1ecd7e1f
  517c25:	mov    esp,ss
  517c27:	inc    esp
  517c28:	push   ebp
  517c29:	hlt    
  517c2a:	adc    esp,edi
  517c2c:	pop    edx
  517c2d:	xlat   BYTE PTR ds:[ebx]
  517c2e:	inc    ebx
  517c2f:	retf   0x43f0
  517c32:	or     al,0x6e
  517c34:	icebp  
  517c35:	mov    edi,0xb82b100d
  517c3a:	out    0x3c,al
  517c3c:	dec    ecx
  517c3d:	inc    edx
  517c3e:	push   0x287cf3b7
  517c43:	loop   0x517bde
  517c45:	ja     0x517c18
  517c47:	pushf  
  517c48:	xchg   edi,eax
  517c49:	ins    DWORD PTR es:[edi],dx
  517c4a:	out    0x39,al
  517c4c:	adc    DWORD PTR [eax],edx
  517c4e:	xor    ecx,edx
  517c50:	into   
  517c51:	punpcklwd mm1,DWORD PTR [ebp-0x526f9bc3]
  517c58:	adc    eax,0x8ef1055e
  517c5d:	cdq    
  517c5e:	mov    ds:0x8ca435d0,eax
  517c63:	and    DWORD PTR [esi],esp
  517c65:	ret    0x9f0
  517c68:	popf   
  517c69:	ss xchg edi,eax
  517c6b:	inc    edx
  517c6c:	cmp    al,0xf
  517c6e:	adc    cl,BYTE PTR [edi+0x51]
  517c71:	jl     0x517c73
  517c73:	inc    esp
  517c74:	xor    ecx,ebx
  517c76:	fstp   TBYTE PTR [esi+0x984e6c3]
  517c7c:	pop    ebx
  517c7d:	mov    ah,0xca
  517c7f:	and    DWORD PTR [esi+0x1f],0x99eaf1e0
  517c86:	out    dx,eax
  517c87:	jge    0x517ca8
  517c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517c8a:	aaa    
  517c8b:	loopne 0x517c34
  517c8d:	add    ebp,DWORD PTR [eax+0x28]
  517c90:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  517c92:	mov    edx,0x6cfc66e
  517c97:	sub    eax,DWORD PTR es:[ebx-0x32bb8bbc]
  517c9e:	cmp    al,0x6f
  517ca0:	fistp  QWORD PTR [ebx+ebp*4+0x795f9e35]
  517ca7:	es cdq 
  517ca9:	fucomi st,st(2)
  517cab:	pop    edx
  517cac:	lahf   
  517cad:	pop    eax
  517cae:	xor    eax,0x2546dd65
  517cb3:	in     al,0x19
  517cb5:	adc    DWORD PTR [edi+0x5d3aed8d],edi
  517cbb:	(bad)  
  517cbc:	push   edi
  517cbd:	xchg   esi,eax
  517cbe:	xor    ch,ah
  517cc0:	fs scas al,BYTE PTR es:[edi]
  517cc2:	outs   dx,BYTE PTR ds:[esi]
  517cc3:	jbe    0x517ce5
  517cc5:	mov    bl,0xa1
  517cc7:	pop    ss
  517cc8:	ins    BYTE PTR es:[edi],dx
  517cc9:	loop   0x517cba
  517ccb:	dec    ebp
  517ccc:	push   es
  517ccd:	mov    ds:0x78656495,al
  517cd2:	jp     0x517cb1
  517cd4:	xchg   DWORD PTR [esi-0x27],eax
  517cd7:	pop    esp
  517cd8:	dec    ebx
  517cd9:	sub    ebx,DWORD PTR [edx-0x3]
  517cdc:	xchg   edi,eax
  517cdd:	in     eax,dx
  517cde:	add    al,BYTE PTR ds:0x7fa693ce
  517ce4:	mov    al,0x1f
  517ce6:	or     edx,DWORD PTR [ecx+0x3255bf83]
  517cec:	cmc    
  517ced:	test   al,ah
  517cef:	cli    
  517cf0:	mov    ds:0xb89a9d36,al
  517cf5:	sub    BYTE PTR [esi],ah
  517cf7:	pop    ebp
  517cf8:	push   0x17
  517cfa:	pop    esi
  517cfb:	mov    esp,DWORD PTR [eax+0x1d61af4e]
  517d01:	imul   BYTE PTR [ebx]
  517d03:	xchg   ebx,eax
  517d04:	jp     0x517c9a
  517d06:	inc    esp
  517d07:	ds inc esi
  517d09:	popf   
  517d0a:	addr16 inc ebp
  517d0c:	cmp    al,0x26
  517d0e:	mov    DWORD PTR [edx],ebp
  517d10:	dec    edx
  517d11:	ja     0x517d50
  517d13:	push   edi
  517d14:	gs int3 
  517d16:	int    0xb7
  517d18:	repnz mov ds,WORD PTR [esp+esi*4]
  517d1c:	and    al,0x5f
  517d1e:	mov    dl,0x8e
  517d20:	jnp    0x517d48
  517d22:	(bad)  
  517d23:	aad    0x81
  517d25:	adc    ecx,ecx
  517d27:	aam    0x77
  517d29:	mov    esp,0xef05977a
  517d2e:	push   esp
  517d2f:	sar    DWORD PTR [ecx+eiz*2+0x3d0e2fb5],0x2
  517d37:	xor    edx,ecx
  517d39:	sahf   
  517d3a:	rcr    BYTE PTR [edi-0x53],0xc7
  517d3e:	inc    esp
  517d3f:	imul   ebp,DWORD PTR [edx+ebx*1+0x57],0xcd148bc6
  517d47:	mov    al,ds:0x453f56ff
  517d4c:	add    DWORD PTR [edx],edi
  517d4e:	pop    ebx
  517d4f:	clc    
  517d50:	inc    ebp
  517d51:	cli    
  517d52:	mov    ebp,0x2d0bc898
  517d57:	fcomi  st,st(0)
  517d59:	mov    ds:0x4305e74e,al
  517d5e:	sub    al,0x69
  517d60:	(bad)  
  517d61:	sub    edx,DWORD PTR [ecx+edx*2+0x51c88e18]
  517d68:	mov    ebp,edi
  517d6a:	or     eax,0x45eb2f4f
  517d6f:	out    dx,al
  517d70:	rcr    BYTE PTR [eax+0x394b035e],0xa7
  517d77:	repz mov eax,0x2e4a3294
  517d7d:	sahf   
  517d7e:	arpl   WORD PTR [ecx],cx
  517d80:	push   ecx
  517d81:	sub    BYTE PTR [esi],bl
  517d83:	mov    es,WORD PTR [ebp+eax*2+0x6a]
  517d87:	pop    eax
  517d88:	mov    DWORD PTR [eax-0x31b8900d],ebx
  517d8e:	call   0xe54fb0ab
  517d93:	call   0x133b0af
  517d98:	xchg   ebx,eax
  517d99:	inc    eax
  517d9a:	(bad)  
  517d9b:	dec    ebp
  517d9c:	mov    eax,ds:0x2d8258f0
  517da1:	aaa    
  517da2:	xchg   ebp,eax
  517da3:	loopne 0x517d7a
  517da5:	aam    0x8
  517da7:	bound  edi,QWORD PTR [edi+0x2c14a5d1]
  517dad:	shl    eax,0x90
  517db0:	push   ds
  517db1:	xchg   DWORD PTR [ebp-0x7],edx
  517db4:	push   ebp
  517db5:	push   0x51a54619
  517dba:	scas   al,BYTE PTR es:[edi]
  517dbb:	lods   al,BYTE PTR ds:[esi]
  517dbc:	jmp    0x2819:0xfd15c923
  517dc3:	iret   
  517dc4:	jmp    0xd89f33f4
  517dc9:	mov    edx,DWORD PTR [edi+0x44f927fa]
  517dcf:	jo     0x517daa
  517dd1:	inc    esp
  517dd2:	rcl    ch,0x7
  517dd5:	fs in  al,dx
  517dd7:	scas   eax,DWORD PTR es:[edi]
  517dd8:	icebp  
  517dd9:	hlt    
  517dda:	sub    BYTE PTR [ecx-0xd861f8e],ch
  517de0:	fsubr  QWORD PTR [edx+edx*8]
  517de3:	mov    ch,0xb8
  517de5:	adc    BYTE PTR ds:0x549dbd02,ah
  517deb:	cld    
  517dec:	adc    DWORD PTR [ecx],esp
  517dee:	daa    
  517def:	mov    ch,0x20
  517df1:	loopne 0x517db7
  517df3:	ss dec esi
  517df5:	fild   QWORD PTR [edi]
  517df7:	jmp    0x4474:0x23ee08f8
  517dfe:	cli    
  517dff:	xor    dh,bl
  517e01:	inc    edi
  517e02:	xchg   esi,eax
  517e03:	out    dx,al
  517e04:	inc    edx
  517e05:	push   ss
  517e06:	inc    ebx
  517e07:	fs push eax
  517e09:	cmp    al,0x9e
  517e0b:	push   eax
  517e0c:	pop    esi
  517e0d:	mov    esi,0x5cc7f6fa
  517e12:	gs popa 
  517e14:	inc    esi
  517e15:	dec    ebx
  517e16:	nop
  517e17:	pop    ebp
  517e18:	jnp    0x517e30
  517e1a:	jbe    0x517d9f
  517e1c:	adc    edx,DWORD PTR [ebp+0x7b]
  517e1f:	es ja  0x517db5
  517e22:	pop    ebx
  517e23:	test   dl,cl
  517e25:	fstp   DWORD PTR [eax]
  517e27:	inc    ecx
  517e28:	xchg   esp,eax
  517e29:	popa   
  517e2a:	sbb    DWORD PTR [edx+ebp*4+0x1c],esp
  517e2e:	mov    eax,0x2a19b527
  517e33:	mov    al,0xcb
  517e35:	in     al,0xbc
  517e37:	(bad)
  517e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  517e3c:	sub    ebx,edx
  517e3e:	jmp    0x517dcd
  517e40:	sub    edi,DWORD PTR [ebx+0x38a1644c]
  517e46:	lock dec ebp
  517e48:	aaa    
  517e49:	scas   al,BYTE PTR es:[edi]
  517e4a:	cdq    
  517e4b:	dec    ebx
  517e4c:	inc    DWORD PTR [eax+0x2c]
  517e4f:	or     DWORD PTR [edx],eax
  517e51:	mov    dh,0x1e
  517e53:	test   DWORD PTR [ebp-0x754df5a4],ebx
  517e59:	cli    
  517e5a:	sbb    eax,0xd35f5aa7
  517e5f:	push   ss
  517e60:	shr    BYTE PTR [ecx],cl
  517e62:	sub    ch,BYTE PTR [eax-0x6a11e929]
  517e68:	out    dx,al
  517e69:	in     eax,dx
  517e6a:	mov    bl,cl
  517e6c:	ficom  WORD PTR [eax+0x6ea976bc]
  517e72:	sbb    edi,DWORD PTR [eax+ebp*1-0x6f]
  517e76:	lds    edx,FWORD PTR ss:[edi]
  517e79:	stos   BYTE PTR es:[edi],al
  517e7a:	cmp    al,0x24
  517e7c:	mov    bh,0x86
  517e7e:	idiv   BYTE PTR [edi+0x31]
  517e81:	adc    ch,BYTE PTR [edi]
  517e83:	fld    QWORD PTR [edx]
  517e85:	scas   al,BYTE PTR es:[edi]
  517e86:	in     al,0x8f
  517e88:	je     0x517e6d
  517e8a:	call   0x90fb:0x36dc6c54
  517e91:	dec    ebx
  517e92:	test   al,0x41
  517e94:	mov    eax,ds:0x415ce7fe
  517e99:	mov    esi,0x6eeefe85
  517e9e:	popf   
  517e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  517ea0:	(bad)  
  517ea1:	int3   
  517ea2:	sbb    eax,0x476a732d
  517ea7:	inc    esi
  517ea8:	inc    esp
  517ea9:	ins    DWORD PTR es:[edi],dx
  517eaa:	add    BYTE PTR [ebp+0x3ca00329],ah
  517eb0:	or     DWORD PTR [ebx-0x17],edx
  517eb3:	jnp    0x517edf
  517eb5:	shr    bl,cl
  517eb7:	pop    eax
  517eb8:	jo     0x517e55
  517eba:	dec    edx
  517ebb:	lock out 0x15,eax
  517ebe:	push   ecx
  517ebf:	mov    DWORD PTR [ebx-0x23aa6354],edi
  517ec5:	jo     0x517eef
  517ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  517ec8:	jne    0x517e7d
  517eca:	mov    bl,0x63
  517ecc:	pop    ecx
  517ecd:	(bad)  
  517ece:	out    0x74,eax
  517ed0:	push   ss
  517ed1:	test   eax,0x5ac6ca71
  517ed6:	sbb    ebp,DWORD PTR [ebp+0x6e08f467]
  517edc:	inc    esi
  517edd:	cmp    cl,BYTE PTR [ecx-0x64f799b9]
  517ee3:	push   cs
  517ee4:	dec    edi
  517ee5:	scas   al,BYTE PTR es:[edi]
  517ee6:	aad    0x9
  517ee8:	mov    dl,BYTE PTR [ecx-0x6d168e48]
  517eee:	and    ebx,DWORD PTR ds:0x674d5927
  517ef4:	clc    
  517ef5:	ret    0x7cad
  517ef8:	or     dh,BYTE PTR [ecx-0x75e5c60c]
  517efe:	outs   dx,DWORD PTR ds:[esi]
  517eff:	push   edx
  517f00:	mov    ecx,0xbf2dc92d
  517f05:	outs   dx,BYTE PTR ds:[esi]
  517f06:	jno    0x517f1f
  517f08:	push   ebp
  517f09:	sub    al,BYTE PTR [eax+0x48]
  517f0c:	inc    eax
  517f0d:	jg     0x517f36
  517f0f:	mov    bl,0x9c
  517f11:	pop    ds
  517f12:	pusha  
  517f13:	mov    al,0x23
  517f15:	and    al,0xb9
  517f17:	xor    bp,WORD PTR [eax+0x51c8b2cd]
  517f1e:	mov    al,0xcb
  517f20:	call   0x60f4fab0
  517f25:	inc    ebp
  517f26:	int3   
  517f27:	lahf   
  517f28:	jle    0x517f94
  517f2a:	call   0x8752:0x512775ff
  517f31:	(bad)  
  517f32:	and    DWORD PTR [ebx],eax
  517f34:	pop    esi
  517f35:	test   BYTE PTR [edx+0x314c755b],ch
  517f3b:	pop    eax
  517f3c:	mov    WORD PTR [edx],cs
  517f3e:	sbb    bl,ch
  517f40:	or     BYTE PTR [ecx+0x59bb5fb4],bh
  517f46:	sbb    ebx,DWORD PTR [edi-0x39]
  517f49:	ret    0x313f
  517f4c:	aad    0x2
  517f4e:	lahf   
  517f4f:	test   bh,al
  517f51:	pop    edi
  517f52:	fild   DWORD PTR [ebx]
  517f54:	xchg   esi,eax
  517f55:	idiv   BYTE PTR ds:0xdaf5859c
  517f5b:	xchg   ecx,eax
  517f5c:	add    DWORD PTR [eax+0x18aacb75],edi
  517f62:	adc    dh,BYTE PTR [esi-0x6c]
  517f65:	fucomi st,st(4)
  517f67:	and    esi,0xd08462
  517f6d:	adc    DWORD PTR [esi+0x33],ebx
  517f70:	jnp    0x517f4e
  517f72:	fucomp st(1)
  517f74:	pop    ebx
  517f75:	cmp    al,0x5a
  517f77:	xor    ecx,eax
  517f79:	mov    eax,ds:0x1ce2bc70
  517f7e:	xor    BYTE PTR [eax+0x54413af8],dl
  517f84:	out    dx,al
  517f85:	push   ecx
  517f86:	push   cs
  517f87:	push   ebp
  517f88:	fadd   QWORD PTR [edx+0x31]
  517f8b:	mov    DWORD PTR [edx-0x4dab0989],edi
  517f91:	xor    bl,dh
  517f93:	cs pusha 
  517f95:	dec    esi
  517f96:	aam    0xb7
  517f98:	jne    0x517f60
  517f9a:	xor    DWORD PTR [edi],esp
  517f9c:	sahf   
  517f9d:	and    al,0x1c
  517f9f:	xchg   ecx,eax
  517fa0:	sub    edi,DWORD PTR [edx+0x67]
  517fa3:	xor    edi,ecx
  517fa5:	fnstenv [ebx-0x18897f83]
  517fab:	adc    BYTE PTR [edx],dh
  517fad:	(bad)  
  517fae:	out    0xfe,al
  517fb0:	fs (bad) 
  517fb2:	xor    al,0x7
  517fb4:	jg     0x517fbe
  517fb6:	mov    ebx,ebp
  517fb8:	sbb    DWORD PTR [esi],edx
  517fba:	mov    ch,0xa3
  517fbc:	inc    ebx
  517fbd:	inc    ebp
  517fbe:	xor    dh,BYTE PTR [esp+eax*2]
  517fc1:	and    dh,cl
  517fc3:	cmp    BYTE PTR [edx-0x7],bl
  517fc6:	dec    ebp
  517fc7:	sbb    BYTE PTR [edx],0xe5
  517fca:	cmovnp edx,DWORD PTR [ecx-0x53]
  517fce:	stc    
  517fcf:	xor    ecx,0x7e
  517fd2:	adc    DWORD PTR [esi-0x19f6ecc1],edx
  517fd8:	imul   ecx,DWORD PTR [edx],0x44ea7e78
  517fde:	retf   0x1926
  517fe1:	xlat   BYTE PTR ds:[ebx]
  517fe2:	cli    
  517fe3:	lds    edi,FWORD PTR [edx+0x1ef307e6]
  517fe9:	nop
  517fea:	shr    dh,cl
  517fec:	in     eax,dx
  517fed:	dec    bl
  517fef:	or     eax,0xfa6c6fd0
  517ff4:	rcr    BYTE PTR [esp+ebp*1-0x4b9f0ec1],0x26
  517ffc:	fistp  DWORD PTR [eax]
  517ffe:	or     BYTE PTR [eax],0xd
  518001:	mov    gs,edi
  518003:	mov    cl,0xd1
  518005:	inc    ebp
  518006:	inc    ebp
  518007:	pop    ds
  518008:	mov    edi,0xdd13336c
  51800d:	inc    esp
  51800e:	jg     0x517fa9
  518010:	test   eax,0xb792b9e
  518015:	add    BYTE PTR [ecx-0x661821e6],dl
  51801b:	push   cs
  51801c:	push   ds
  51801d:	xchg   ebp,eax
  51801e:	test   BYTE PTR [eax],bl
  518020:	inc    ebp
  518021:	push   edx
  518022:	mov    dh,0x5e
  518024:	mov    esp,0xedc74685
  518029:	xchg   edi,eax
  51802a:	nop
  51802b:	retf   
  51802c:	arpl   WORD PTR [esi+0x3d],bx
  51802f:	in     al,dx
  518030:	in     al,0x17
  518032:	fldcw  WORD PTR [esi]
  518034:	pop    es
  518035:	das    
  518036:	into   
  518037:	push   eax
  518038:	aaa    
  518039:	jmp    0xf38:0x2d1ca23f
  518040:	xchg   ebp,eax
  518041:	mov    eax,ds:0x9916e47e
  518046:	inc    ecx
  518047:	pop    DWORD PTR [edx]
  518049:	mov    ch,dl
  51804b:	add    BYTE PTR ds:0x1e24bcb0,ch
  518051:	cs scas al,BYTE PTR es:[edi]
  518053:	popf   
  518054:	jmp    0x5180b4
  518056:	push   es
  518057:	jae    0x51808a
  518059:	in     eax,dx
  51805a:	sub    BYTE PTR [esi],0x25
  51805d:	cmp    eax,0x6268957d
  518062:	jns    0x518038
  518064:	enter  0xe10c,0x78
  518068:	sti    
  518069:	sub    BYTE PTR [edi-0x24],al
  51806c:	sahf   
  51806d:	pop    edi
  51806e:	mov    esi,0x75f07e4
  518073:	xchg   edx,eax
  518074:	test   al,0x85
  518076:	das    
  518077:	adc    ecx,esi
  518079:	aas    
  51807a:	je     0x518017
  51807c:	mov    ecx,0x22771d5a
  518081:	and    eax,0xfb70a419
  518086:	ja     0x51805d
  518088:	std    
  518089:	sub    ebx,DWORD PTR [edx-0x7d866062]
  51808f:	xor    bh,BYTE PTR [eax-0x44]
  518092:	test   eax,0x72c3fbb1
  518097:	pop    edx
  518098:	cmp    esi,edx
  51809a:	sub    edx,edx
  51809c:	inc    ecx
  51809d:	jl     0x5180c4
  51809f:	push   es
  5180a0:	xchg   ebx,eax
  5180a1:	cs jns 0x5180c4
  5180a4:	(bad)  
  5180a5:	shl    DWORD PTR [ebx-0x64],cl
  5180a8:	jge    0x5180a0
  5180aa:	mov    ebp,0x33f20d52
  5180af:	mov    ah,0xfe
  5180b1:	mov    BYTE PTR [eax-0x329aa1da],dl
  5180b7:	xlat   BYTE PTR ds:[ebx]
  5180b8:	out    dx,al
  5180b9:	fld    DWORD PTR [edi+0x7e]
  5180bc:	clc    
  5180bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5180be:	iret   
  5180bf:	xor    al,BYTE PTR [edx+0x591d515d]
  5180c5:	xchg   esi,eax
  5180c6:	or     BYTE PTR [ebp+0x5eee263e],dl
  5180cc:	xor    eax,0x7e75772e
  5180d1:	into   
  5180d2:	sub    ebp,ebp
  5180d4:	or     bh,BYTE PTR [ebx-0x8e6c12a]
  5180da:	stc    
  5180db:	jne    0x518116
  5180dd:	dec    DWORD PTR [eax-0x7]
  5180e0:	call   0xd380deee
  5180e5:	xchg   DWORD PTR [ecx+0x61],esi
  5180e8:	out    dx,eax
  5180e9:	fsub   DWORD PTR [eax+0x4c]
  5180ec:	xor    dh,BYTE PTR [ebx+0x45a87cdc]
  5180f2:	imul   DWORD PTR [eax-0x71]
  5180f5:	mov    al,0x68
  5180f7:	daa    
  5180f8:	mul    DWORD PTR [esi]
  5180fa:	or     bl,bh
  5180fc:	sbb    al,0xef
  5180fe:	push   ebx
  5180ff:	push   esi
  518100:	lea    ebx,[edx]
  518102:	loop   0x5180c0
  518104:	xor    DWORD PTR [ecx],ebx
  518106:	lods   al,BYTE PTR ds:[esi]
  518107:	mov    ecx,0x97bbe990
  51810c:	dec    edx
  51810d:	mov    al,ds:0x8c2ce6f9
  518112:	xchg   ecx,edi
  518114:	adc    edi,DWORD PTR [esi]
  518116:	shl    esi,0xf5
  518119:	repnz inc ebp
  51811b:	dec    ebp
  51811c:	test   al,0x86
  51811e:	sub    BYTE PTR [eax+0x207b5d14],ah
  518124:	call   DWORD PTR [ebx+ebx*2]
  518127:	xor    edx,DWORD PTR [edi+edi*1+0x21]
  51812b:	aas    
  51812c:	jb     0x5180b5
  51812e:	jne    0x518131
  518130:	aad    0xff
  518132:	scas   eax,DWORD PTR es:[edi]
  518133:	neg    ecx
  518135:	or     al,0xdd
  518137:	es das 
  518139:	in     al,dx
  51813a:	jge    0x51819a
  51813c:	dec    edx
  51813d:	jle    0x518149
  51813f:	arpl   di,si
  518141:	mov    ecx,0x7b793249
  518146:	popf   
  518147:	lahf   
  518148:	rcl    BYTE PTR [eax+ebp*4-0x28],1
  51814c:	mov    eax,esi
  51814e:	js     0x518130
  518150:	sub    BYTE PTR ds:0x8c899888,bl
  518156:	sar    DWORD PTR [ebx+eax*8-0x3e],0x45
  51815b:	loopne 0x518104
  51815d:	cmp    esp,eax
  51815f:	ins    DWORD PTR es:[edi],dx
  518160:	jo     0x518168
  518162:	jo     0x518118
  518164:	pop    ds
  518165:	xor    DWORD PTR [esp+eax*4+0x105fcfea],ebp
  51816c:	jecxz  0x518178
  51816e:	xchg   ebp,eax
  51816f:	sub    esp,DWORD PTR [edx+0x34]
  518172:	jns    0x51819a
  518174:	leave  
  518175:	jge    0x51814e
  518177:	pop    edi
  518178:	rol    ecx,0xcd
  51817b:	int    0x1d
  51817d:	popa   
  51817e:	aas    
  51817f:	aaa    
  518180:	ins    DWORD PTR es:[edi],dx
  518181:	and    al,0x1c
  518183:	cmp    edx,esi
  518185:	iret   
  518186:	mov    BYTE PTR [edx+0x4d],bl
  518189:	xor    al,0x81
  51818b:	and    edx,esi
  51818d:	xchg   esi,eax
  51818e:	lock xchg edi,eax
  518190:	lock fild QWORD PTR [ebp-0x61]
  518194:	cld    
  518195:	rcr    edx,cl
  518197:	push   0x57418b4e
  51819c:	aam    0x67
  51819e:	int3   
  51819f:	pop    es
  5181a0:	jmp    0xeaac:0xf4c333ab
  5181a7:	ja     0x518190
  5181a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5181aa:	ret    
  5181ab:	inc    eax
  5181ac:	dec    ebp
  5181ad:	das    
  5181ae:	or     BYTE PTR [ecx+0x2f],0x78
  5181b2:	xchg   edx,eax
  5181b3:	das    
  5181b4:	and    al,0xc7
  5181b6:	pop    eax
  5181b7:	push   ds
  5181b8:	inc    esp
  5181b9:	sahf   
  5181ba:	in     eax,dx
  5181bb:	(bad)  
  5181bc:	push   ds
  5181bd:	push   ebp
  5181be:	test   BYTE PTR [edx],ah
  5181c0:	hlt    
  5181c1:	xchg   BYTE PTR [edi],al
  5181c3:	inc    ecx
  5181c4:	std    
  5181c5:	mov    edx,0x5a468295
  5181ca:	mov    al,ds:0x486ac74a
  5181cf:	mov    eax,ds:0x2df0a621
  5181d4:	cmp    DWORD PTR [ebx+0x1c7e9b80],eax
  5181da:	adc    eax,0x79d963bf
  5181df:	sbb    eax,edx
  5181e1:	mov    al,dl
  5181e3:	sbb    edx,ebp
  5181e5:	xlat   BYTE PTR ds:[ebx]
  5181e6:	cwde   
  5181e7:	stos   DWORD PTR es:[edi],eax
  5181e8:	aas    
  5181e9:	gs push ds
  5181eb:	xchg   edx,eax
  5181ec:	add    BYTE PTR [esp+ebp*2],cl
  5181ef:	in     eax,0x71
  5181f1:	inc    ecx
  5181f2:	jg     0x5181a0
  5181f4:	adc    DWORD PTR [ebp+0x28],eax
  5181f7:	sub    eax,ecx
  5181f9:	frstor [edi+0x6b491b83]
  5181ff:	cdq    
  518200:	bound  esi,QWORD PTR [edi-0x53700a57]
  518206:	daa    
  518207:	aaa    
  518208:	mov    ecx,0xef08526b
  51820d:	mov    bh,0xf5
  51820f:	push   ebx
  518210:	adc    al,0xd4
  518212:	adc    ax,WORD PTR [edx-0x41]
  518216:	stos   BYTE PTR es:[edi],al
  518217:	aaa    
  518218:	xchg   BYTE PTR [eax-0x77dd8395],bl
  51821e:	retf   0xa169
  518221:	je     0x518285
  518223:	clc    
  518224:	sub    DWORD PTR [ecx+ebx*1+0x13401644],ecx
  51822b:	mov    ch,bl
  51822d:	lods   eax,DWORD PTR ds:[esi]
  51822e:	mov    cl,0x5f
  518230:	jo     0x5181bd
  518232:	sub    edx,edi
  518234:	repnz call 0x5ecf:0x6031e7c0
  51823c:	pop    edx
  51823d:	mov    al,0xf0
  51823f:	dec    ebx
  518240:	jecxz  0x5181f0
  518242:	xchg   esp,eax
  518243:	(bad)  
  518244:	je     0x518256
  518246:	pop    ds
  518247:	jae    0x518231
  518249:	dec    ebx
  51824a:	jmp    0x5181cd
  51824c:	add    eax,0x82fea95d
  518251:	xchg   ch,dh
  518253:	push   cs
  518254:	mov    ecx,0xef9af840
  518259:	cmc    
  51825a:	fcmovnu st,st(5)
  51825c:	pop    ebx
  51825d:	mov    cl,0x9f
  51825f:	inc    esp
  518260:	add    eax,0x4c
  518263:	jae    0x5182ac
  518265:	xchg   BYTE PTR [edx-0x21446783],dh
  51826b:	sub    bl,cl
  51826d:	push   esp
  51826e:	push   0x74
  518270:	in     eax,0x51
  518272:	push   0x21
  518274:	stos   BYTE PTR es:[edi],al
  518275:	(bad)  
  518276:	cmp    eax,0x8394537d
  51827b:	adc    ah,BYTE PTR [edx]
  51827d:	fcom   QWORD PTR [eax]
  51827f:	in     al,dx
  518280:	xchg   ebx,eax
  518281:	sub    BYTE PTR [ecx+0x7f4ec22b],bl
  518287:	dec    eax
  518288:	push   ebp
  518289:	rcl    BYTE PTR [ebx+0x2],0xd1
  51828d:	adc    al,0x62
  51828f:	push   esp
  518290:	mov    edi,0x4f3afe5d
  518295:	les    ebp,FWORD PTR [ebp-0x75]
  518298:	ja     0x51822e
  51829a:	mov    eax,ds:0xe813cb7c
  51829f:	shr    DWORD PTR ds:0xd61ebff8,0x50
  5182a6:	sbb    DWORD PTR [ecx+edi*2-0x49],eax
  5182aa:	out    dx,al
  5182ab:	push   0x70
  5182ad:	daa    
  5182ae:	mov    ch,0x77
  5182b0:	dec    esp
  5182b1:	xchg   ebp,eax
  5182b2:	outs   dx,BYTE PTR cs:[esi]
  5182b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5182b5:	xor    ecx,DWORD PTR [edi]
  5182b7:	pop    esi
  5182b8:	rcr    ebp,1
  5182ba:	adc    DWORD PTR ds:0x6674c93e,eax
  5182c0:	jmp    0xa8f07467
  5182c5:	ds je  0x5182da
  5182c8:	(bad)  
  5182c9:	stc    
  5182ca:	lds    ebp,FWORD PTR [ebx]
  5182cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5182cd:	dec    edx
  5182ce:	or     ebx,DWORD PTR [ebx-0x4b14234]
  5182d4:	sub    eax,0x46ffb172
  5182d9:	shl    BYTE PTR [ecx+0x49cfe6b2],1
  5182df:	mov    edx,0x7f6bed49
  5182e4:	int3   
  5182e5:	pop    esi
  5182e6:	test   bl,dl
  5182e8:	push   esi
  5182e9:	frstor [ecx+0x45]
  5182ec:	sbb    al,0xdc
  5182ee:	or     ah,dh
  5182f0:	or     BYTE PTR [ebp-0x6e],cl
  5182f3:	mov    ?,WORD PTR ds:0xdb199eaf
  5182f9:	push   ebp
  5182fa:	sub    al,0xf1
  5182fc:	add    eax,0xc9106aaa
  518301:	and    ch,BYTE PTR [eax+0x6a]
  518304:	xchg   BYTE PTR [esi],dh
  518306:	loope  0x5182cb
  518308:	mov    dl,0x6d
  51830a:	xchg   ebp,eax
  51830b:	fmul   DWORD PTR [eax+0x45]
  51830e:	fwait
  51830f:	mov    ds,edi
  518311:	daa    
  518312:	out    dx,eax
  518313:	pop    eax
  518314:	xor    al,bh
  518316:	inc    ebp
  518317:	add    al,0xe8
  518319:	data16 add ch,BYTE PTR [edx]
  51831c:	xchg   BYTE PTR [edi+0x1e69035e],dl
  518322:	mov    al,0x59
  518324:	aaa    
  518325:	dec    ecx
  518326:	sbb    DWORD PTR [eax+0x54ab65c0],edx
  51832c:	xor    al,0xe
  51832e:	lock cmp al,0x31
  518331:	cmp    al,0xac
  518333:	jo     0x518371
  518335:	cmp    DWORD PTR [ecx],0xc774617c
  51833b:	add    BYTE PTR [ecx+0x5a9b1c33],ch
  518341:	int    0x6e
  518343:	and    esp,edi
  518345:	sub    bh,BYTE PTR [ecx-0x79fda684]
  51834b:	dec    esp
  51834c:	add    DWORD PTR [esi],eax
  51834e:	mov    dh,0xe3
  518350:	mov    WORD PTR [eax-0x75a7cba4],cs
  518356:	ret    0x3c0e
  518359:	mov    eax,0xe905323
  51835e:	mov    bh,0xb0
  518360:	jns    0x5183a9
  518362:	in     eax,dx
  518363:	idiv   ah
  518365:	pop    ebx
  518366:	jp     0x518303
  518368:	ss int3 
  51836a:	sub    bh,BYTE PTR ds:0xeec705eb
  518370:	or     BYTE PTR [edx],ch
  518372:	lea    edx,[edx]
  518374:	ds jp  0x51838e
  518377:	mov    ds:0xf80f3bf4,eax
  51837c:	add    DWORD PTR ds:0x913ecc91,edx
  518382:	arpl   WORD PTR [edi+0x72],bx
  518385:	dec    esi
  518386:	push   edx
  518387:	std    
  518388:	(bad)  
  518389:	ss push ds
  51838b:	fimul  WORD PTR [edi+0x35]
  51838e:	cmp    BYTE PTR [edx+0x740521d4],ch
  518394:	dec    ebx
  518395:	inc    esi
  518396:	jo     0x5183d2
  518398:	out    0xae,eax
  51839a:	cmp    DWORD PTR ds:[esi-0x47],ebx
  51839e:	or     al,0xec
  5183a0:	fdiv   st,st(2)
  5183a2:	das    
  5183a3:	gs and edx,esp
  5183a6:	and    al,0x44
  5183a8:	mov    bh,0xf6
  5183aa:	dec    edi
  5183ab:	cmp    al,0x76
  5183ad:	push   edi
  5183ae:	mov    edx,0x20f4f4a4
  5183b3:	ret    0xe5b5
  5183b6:	pusha  
  5183b7:	pop    eax
  5183b8:	pop    es
  5183b9:	ficom  DWORD PTR cs:[edx+0x254db25]
  5183c0:	stos   DWORD PTR es:[edi],eax
  5183c1:	lods   al,BYTE PTR ds:[esi]
  5183c2:	dec    ecx
  5183c3:	adc    eax,0xce8bd620
  5183c8:	push   esp
  5183c9:	push   0x10
  5183cb:	xor    eax,0x3838aead
  5183d0:	es xchg edi,eax
  5183d2:	outs   dx,DWORD PTR ds:[esi]
  5183d3:	inc    esp
  5183d4:	inc    eax
  5183d5:	xlat   BYTE PTR ds:[ebx]
  5183d6:	xor    al,0x55
  5183d8:	jmp    0xd1fe:0x9472de4
  5183df:	jb     0x518389
  5183e1:	lds    edi,FWORD PTR [edi]
  5183e3:	mov    dh,0x83
  5183e5:	mov    al,ds:0x16edbfdc
  5183ea:	mov    ebx,0xd7beb998
  5183ef:	jno    0x5183ea
  5183f1:	stos   BYTE PTR es:[edi],al
  5183f2:	inc    ebp
  5183f3:	inc    esp
  5183f4:	cmp    al,0xf5
  5183f6:	rcr    DWORD PTR [edi-0x58e2fcf],1
  5183fc:	loop   0x518431
  5183fe:	jmp    0xa7dc:0x212ad7b0
  518405:	(bad)  
  518406:	adc    dl,cl
  518408:	ret    
  518409:	jns    0x51846c
  51840b:	test   DWORD PTR [eax-0x5a1b5e6f],edi
  518411:	cwde   
  518412:	add    BYTE PTR [esi+0x61],ah
  518415:	sti    
  518416:	or     eax,0x165b2db3
  51841b:	mov    eax,0x762ec92c
  518420:	div    BYTE PTR [ebx*1+0x31d54a87]
  518427:	fsubr  st,st(7)
  518429:	xlat   BYTE PTR ds:[ebx]
  51842a:	stos   BYTE PTR es:[edi],al
  51842b:	xchg   BYTE PTR [esi+0x572ec040],bh
  518431:	xchg   ecx,eax
  518432:	(bad)  
  518433:	out    dx,al
  518434:	sbb    esi,DWORD PTR [eax-0xd88e610]
  51843a:	cmp    al,0xae
  51843c:	in     eax,0xfb
  51843e:	shl    DWORD PTR [edx+0x7e03dcb5],cl
  518444:	mov    eax,ds:0xd1fb5ba2
  518449:	push   edi
  51844a:	push   esp
  51844b:	(bad)  
  51844c:	push   0xb5d684f8
  518451:	neg    BYTE PTR [esi+esi*8]
  518454:	jae    0x51844f
  518456:	sbb    eax,0x64df7335
  51845b:	mov    esi,0xac4aedc8
  518460:	loope  0x5184ba
  518462:	xor    edi,DWORD PTR [edi+edi*1-0x1232b7d7]
  518469:	outs   dx,BYTE PTR ds:[esi]
  51846a:	push   ebp
  51846b:	cmc    
  51846c:	inc    esp
  51846e:	sar    DWORD PTR ds:0xf4e0925,1
  518474:	dec    ebx
  518475:	shufps xmm2,XMMWORD PTR [edx],0xb0
  518479:	adc    BYTE PTR ds:0x539aabcc,bh
  51847f:	pop    esi
  518480:	mov    DWORD PTR [ebp+0x6d],0xde50433b
  518487:	rol    BYTE PTR [edx-0xf],cl
  51848a:	mov    ebp,0x372fc336
  51848f:	sub    DWORD PTR ds:0x2a043683,edx
  518495:	addr16 icebp 
  518497:	and    bh,dl
  518499:	or     esp,DWORD PTR [edi]
  51849b:	loopne 0x518480
  51849d:	mov    eax,0xc80d094d
  5184a2:	mov    edi,0x25ee3bf5
  5184a7:	cmp    esi,DWORD PTR [edx-0xdeff0]
  5184ad:	push   esi
  5184ae:	lds    ebx,FWORD PTR [esi+0x27]
  5184b1:	inc    esi
  5184b2:	(bad)  
  5184b3:	enter  0xc049,0x8b
  5184b7:	into   
  5184b8:	leave  
  5184b9:	sti    
  5184ba:	mov    dh,0xd3
  5184bc:	adc    eax,0x4704c5c5
  5184c1:	fs pop edx
  5184c3:	mov    DWORD PTR [edx+esi*8],edi
  5184c6:	and    ch,BYTE PTR [ebx]
  5184c8:	dec    esi
  5184c9:	and    DWORD PTR [eax+0x36],edi
  5184cc:	xchg   edi,eax
  5184cd:	and    BYTE PTR [ebx-0x1c],bl
  5184d0:	stos   BYTE PTR es:[edi],al
  5184d1:	pop    edi
  5184d2:	sbb    DWORD PTR [edi+0x5b],edi
  5184d5:	repnz and DWORD PTR [ebx+eiz*1-0x5],ebp
  5184da:	repnz cmp DWORD PTR [ebx],0x71db5d88
  5184e1:	fiadd  DWORD PTR [esi-0x309dd168]
  5184e7:	retf   0x601c
  5184ea:	inc    ebx
  5184eb:	xor    bh,BYTE PTR [edi]
  5184ed:	jno    0x518538
  5184ef:	adc    eax,0x63de3fa
  5184f4:	add    BYTE PTR [ebx],dl
  5184f6:	es cli 
  5184f8:	int    0x3e
  5184fa:	push   ebx
  5184fb:	int3   
  5184fc:	cmp    eax,0xfa894816
  518501:	in     eax,dx
  518502:	pop    edx
  518504:	cmp    DWORD PTR [edx+0x27069075],ebx
  51850a:	in     al,0xf5
  51850c:	sbb    eax,DWORD PTR [eax+0x7c]
  51850f:	scas   al,BYTE PTR es:[edi]
  518510:	push   ecx
  518511:	imul   esp,DWORD PTR [esi-0x31bf8740],0x938b576a
  51851b:	xchg   DWORD PTR [edi+ebx*8],esp
  51851e:	pop    esi
  51851f:	xor    BYTE PTR [ebx-0x71],al
  518522:	jmp    0x51858b
  518524:	mov    cl,0xd8
  518526:	outs   dx,DWORD PTR ds:[esi]
  518527:	adc    eax,0x2a94a11d
  51852c:	aas    
  51852d:	sti    
  51852e:	and    DWORD PTR [ebp+eax*1+0x7b3c0dd8],0x44
  518536:	add    DWORD PTR ds:0xec4e31e6,0xbea78f7a
  518540:	xchg   esp,eax
  518541:	fnstenv [edi+0x18]
  518544:	(bad)  
  518545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518546:	adc    BYTE PTR [eax],bh
  518548:	push   ebp
  518549:	cmp    DWORD PTR [ebp-0x6a],esi
  51854c:	push   ds
  51854d:	jecxz  0x51850b
  51854f:	inc    eax
  518550:	loopne 0x51859c
  518552:	and    BYTE PTR [ebx],ch
  518554:	and    eax,0xe4221044
  518559:	mov    ebx,0x985a9a08
  51855e:	div    BYTE PTR [ecx+0x3]
  518561:	sub    BYTE PTR [ebp+0x4f],ch
  518564:	jmp    0x5184f5
  518566:	mov    esp,0x5dfd4e9
  51856b:	aam    0x43
  51856d:	sub    DWORD PTR [ebp+esi*4+0x13503db8],0x2e2cdc52
  518578:	sahf   
  518579:	sar    BYTE PTR [ebx+edx*2+0x43f28567],cl
  518580:	clc    
  518581:	push   ecx
  518582:	or     eax,ecx
  518584:	(bad)  
  518585:	sbb    BYTE PTR [esp+eax*2+0x2792e57a],bh
  51858c:	pop    esp
  51858d:	je     0x51860a
  51858f:	hlt    
  518590:	enter  0x58af,0x77
  518594:	inc    ebp
  518595:	add    ecx,DWORD PTR [edx+0x1a]
  518598:	je     0x5185fc
  51859a:	add    BYTE PTR [ebp+0x7e],al
  51859d:	loope  0x518571
  51859f:	pusha  
  5185a0:	push   edx
  5185a1:	ficom  DWORD PTR [ebp-0x73b04f5a]
  5185a7:	fidivr WORD PTR [eax+0xb6b4313]
  5185ad:	ss (bad) 
  5185b0:	test   ah,0x71
  5185b3:	ds cmp bx,di
  5185b7:	popa   
  5185b8:	xor    DWORD PTR [ebp+0x41ffa7eb],eax
  5185be:	add    al,ch
  5185c0:	(bad)
  5185c3:	psrlw  mm7,QWORD PTR [eax+ecx*8-0xe]
  5185c8:	pop    edx
  5185c9:	pop    eax
  5185ca:	and    esp,DWORD PTR [ebp*4-0x4b26c3ac]
  5185d1:	into   
  5185d2:	add    al,0x6f
  5185d4:	arpl   WORD PTR [eax+0x78c59a07],si
  5185da:	jle    0x5185d8
  5185dc:	call   0xd210:0x289349b6
  5185e3:	or     al,0xf0
  5185e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5185e6:	inc    BYTE PTR [esi+0x76f6c968]
  5185ec:	xor    al,0xa3
  5185ee:	sbb    al,0x93
  5185f0:	data16 hlt 
  5185f2:	lahf   
  5185f3:	imul   esi,DWORD PTR [edi-0x6647b0a3],0xffffffcc
  5185fa:	cld    
  5185fb:	lds    ebp,FWORD PTR [edi-0x5a73ca4]
  518601:	sbb    BYTE PTR [ecx],bh
  518603:	enter  0x2b20,0x87
  518607:	test   al,0x9c
  518609:	fidivr DWORD PTR [eax]
  51860b:	int    0x96
  51860d:	dec    esp
  51860e:	xor    esp,DWORD PTR [ecx-0x1677c8e4]
  518614:	ja     0x518653
  518616:	mov    al,ds:0xcdcefd2
  51861b:	int3   
  51861c:	in     eax,dx
  51861d:	sbb    eax,0x14ed602d
  518622:	push   ebp
  518623:	aas    
  518624:	jns    0x51861e
  518626:	imul   ebx,esp,0x3d70ef19
  51862c:	xor    eax,0x217f075
  518631:	aaa    
  518632:	mov    bl,0xc2
  518634:	jnp    0x51860e
  518636:	add    al,0x7d
  518638:	fwait
  518639:	dec    esp
  51863a:	cmp    eax,0x24090383
  51863f:	mov    ah,0x68
  518641:	ror    eax,1
  518643:	xchg   edi,eax
  518644:	fisub  WORD PTR [ebp+0x78]
  518647:	fdivp  st(1),st
  518649:	dec    eax
  51864a:	bound  esi,QWORD PTR [ebx]
  51864c:	(bad)  
  51864d:	jns    0x5185e0
  51864f:	lahf   
  518650:	sub    dl,BYTE PTR [edi-0x622e46fe]
  518656:	pop    ds
  518657:	repnz pop ebp
  518659:	push   esi
  51865a:	mov    ds:0xe63076a3,al
  51865f:	dec    ecx
  518660:	inc    ecx
  518661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518662:	hlt    
  518663:	sub    BYTE PTR [esi-0x31],cl
  518666:	xchg   ecx,eax
  518667:	or     BYTE PTR [edi+0x4],dh
  51866a:	push   edi
  51866b:	or     al,0x35
  51866d:	nop
  51866e:	bound  ebx,QWORD PTR [edx]
  518670:	jo     0x5186ca
  518672:	cmp    DWORD PTR [ebx],edi
  518674:	ds call 0x82d4:0x224f0b4a
  51867c:	(bad)  
  51867d:	jl     0x518606
  51867f:	jle    0x51867b
  518681:	pop    ss
  518682:	xchg   ecx,eax
  518683:	mov    al,0xaf
  518685:	call   0xc91f63c5
  51868a:	sub    DWORD PTR [edx],ebp
  51868c:	jb     0x5186ba
  51868e:	(bad)  
  51868f:	outs   dx,DWORD PTR ds:[esi]
  518690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518691:	lods   al,BYTE PTR ds:[esi]
  518692:	pop    ecx
  518693:	cmc    
  518694:	jl     0x51863b
  518696:	das    
  518697:	pop    ds
  518698:	adc    eax,0x216622f6
  51869d:	sub    dh,ch
  51869f:	stc    
  5186a0:	push   eax
  5186a1:	arpl   WORD PTR [edi],sp
  5186a3:	inc    ebp
  5186a4:	push   0x5c
  5186a6:	add    BYTE PTR [edx-0x61],ch
  5186a9:	fiadd  DWORD PTR [edx+eiz*2+0x798983bc]
  5186b0:	dec    ebx
  5186b1:	or     ch,BYTE PTR [ebx+0x1]
  5186b4:	inc    edx
  5186b5:	mov    dh,0x3b
  5186b7:	lods   al,BYTE PTR ds:[esi]
  5186b8:	mov    eax,0x8f623e8c
  5186bd:	imul   edi,DWORD PTR [esi],0x65
  5186c0:	imul   edx,DWORD PTR [esi+eax*8],0xffffff98
  5186c4:	jmp    0x51865d
  5186c6:	and    bh,BYTE PTR [edi]
  5186c8:	dec    esp
  5186c9:	jl     0x518675
  5186cb:	sub    eax,DWORD PTR [ecx]
  5186cd:	jnp    0x518734
  5186cf:	cmp    DWORD PTR [eax-0x3dba3fd6],eax
  5186d5:	sub    cl,BYTE PTR [ebx+0x53]
  5186d8:	in     eax,dx
  5186d9:	imul   edi,ebx,0x66
  5186dc:	les    ebp,FWORD PTR [edx-0x7a423c74]
  5186e2:	retf   
  5186e3:	clc    
  5186e4:	push   ebx
  5186e6:	mov    ds:0xd42560e8,eax
  5186eb:	adc    BYTE PTR [ecx],bh
  5186ed:	loope  0x518769
  5186ef:	aaa    
  5186f0:	and    BYTE PTR gs:[esi-0x79],dl
  5186f4:	shl    bh,1
  5186f6:	arpl   dx,si
  5186f8:	rol    BYTE PTR [edi-0x14a3b69e],cl
  5186fe:	cmp    BYTE PTR [edi+0x70],ch
  518701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518702:	dec    eax
  518703:	sbb    DWORD PTR [esi+0x59],edx
  518706:	or     DWORD PTR [edi+0x685996e6],ecx
  51870c:	push   0xedcb1a5e
  518711:	or     ah,BYTE PTR [eax-0x55]
  518714:	das    
  518715:	sub    BYTE PTR [esi],dh
  518717:	dec    BYTE PTR [eax-0x48]
  51871a:	inc    ebp
  51871b:	test   DWORD PTR [eax+0x8b5d7ee],edi
  518721:	push   es
  518722:	(bad)  
  518723:	mov    cl,0xa5
  518725:	jecxz  0x5186af
  518727:	xor    eax,0x10dbd964
  51872c:	xor    BYTE PTR ds:0x3ca5f981,cl
  518732:	push   edi
  518733:	fisttp WORD PTR ds:0xbceb0a0f
  518739:	es mov ebx,0x7c41c7bd
  51873f:	sahf   
  518740:	jae    0x5186f1
  518742:	outs   dx,DWORD PTR ds:[esi]
  518743:	loopne 0x5187c4
  518745:	sub    BYTE PTR [edx+ebp*4+0x5e43c0c9],0xb
  51874d:	cmp    eax,0x34d5bdf
  518752:	push   0xa983a574
  518757:	mov    cl,0xa9
  518759:	cmc    
  51875a:	hlt    
  51875b:	repz clc 
  51875d:	mov    ebx,0x1b4a4fd3
  518762:	cmp    ebp,DWORD PTR [edx+edx*2]
  518765:	cdq    
  518766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518767:	stos   BYTE PTR es:[edi],al
  518768:	imul   ebx,DWORD PTR [edi-0x64],0x80f30d65
  51876f:	rol    DWORD PTR [ecx+0x48],0x90
  518773:	push   cs
  518774:	xor    eax,0x7ffdd140
  518779:	push   ebp
  51877a:	gs xchg edx,eax
  51877c:	xor    al,0xa
  51877e:	scas   eax,DWORD PTR es:[edi]
  51877f:	xchg   DWORD PTR [ecx-0x59],esp
  518782:	or     edx,DWORD PTR [ebp+0x35c65c61]
  518788:	cld    
  518789:	out    0xad,eax
  51878b:	add    ch,BYTE PTR [edx-0x1bb4e8cb]
  518791:	mov    dh,0xc6
  518793:	(bad)  
  518794:	lea    esi,[esp+edx*1+0xa]
  518798:	add    BYTE PTR [edi-0x4f],0xab
  51879c:	sbb    BYTE PTR [edx+0x51],ah
  51879f:	lds    ebx,FWORD PTR [eax-0x5d]
  5187a2:	sahf   
  5187a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5187a4:	aam    0xf5
  5187a6:	sub    ebp,DWORD PTR [ecx-0x4d5a071c]
  5187ac:	(bad)  
  5187ae:	dec    ecx
  5187af:	shr    esi,0x56
  5187b2:	mov    esp,0x5a0a1cf7
  5187b7:	pop    edx
  5187b8:	adc    eax,0x8b532ce
  5187bd:	jl     0x518833
  5187bf:	mov    dh,ch
  5187c1:	jmp    0x30ef:0x79296cc2
  5187c8:	pushf  
  5187c9:	cdq    
  5187ca:	lods   eax,DWORD PTR ds:[esi]
  5187cb:	out    dx,eax
  5187cc:	jp     0x51878e
  5187ce:	jno    0x5187b0
  5187d0:	mov    edi,0x6182755c
  5187d5:	jl     0x51880a
  5187d7:	stc    
  5187d8:	push   edx
  5187d9:	push   0x4
  5187db:	arpl   WORD PTR [edi],bx
  5187dd:	aad    0xcc
  5187df:	jne    0x518786
  5187e1:	pop    ebx
  5187e2:	pop    ecx
  5187e3:	sub    esi,DWORD PTR [ebx+0x5]
  5187e6:	inc    edx
  5187e7:	push   ds
  5187e8:	inc    edi
  5187e9:	cdq    
  5187ea:	jns    0x518842
  5187ec:	gs inc esi
  5187ee:	syscall 
  5187f0:	xchg   DWORD PTR [edi+0x63db384f],ebp
  5187f6:	lahf   
  5187f7:	mov    gs,WORD PTR [esi-0xf59ac16]
  5187fd:	mov    ah,0x44
  5187ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518800:	pop    ecx
  518801:	inc    edi
  518802:	cmp    eax,0x74cae7ba
  518807:	sbb    eax,0xcef20e0c
  51880c:	imul   ebp,ecx,0xc
  51880f:	in     eax,dx
  518810:	pushf  
  518811:	and    edi,esi
  518813:	popf   
  518814:	adc    dh,BYTE PTR [ebx+ecx*8+0x4a32967a]
  51881b:	sbb    DWORD PTR [ebx-0x208307ef],ecx
  518821:	js     0x518867
  518823:	sbb    BYTE PTR [edi],ah
  518825:	fcomi  st,st(1)
  518827:	int    0x5b
  518829:	popf   
  51882a:	push   eax
  51882b:	neg    DWORD PTR [ebp-0x447baee1]
  518831:	loopne 0x5187ca
  518833:	inc    ebx
  518834:	add    DWORD PTR [eax],edi
  518836:	sub    DWORD PTR [edx],ecx
  518838:	sub    ah,dl
  51883a:	push   cs
  51883b:	rol    eax,0x9a
  51883e:	aad    0x4c
  518840:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518841:	fst    QWORD PTR [ecx]
  518843:	ja     0x5187fe
  518845:	jge    0x518884
  518847:	dec    ebx
  518848:	pop    ecx
  518849:	inc    edi
  51884a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51884b:	inc    esp
  51884c:	fstp   QWORD PTR [edi+0x44bb350d]
  518852:	inc    esi
  518853:	sbb    BYTE PTR [edi+0x23],bh
  518856:	xchg   ecx,eax
  518857:	inc    edx
  518858:	mov    eax,0xbd27518e
  51885d:	les    ecx,FWORD PTR [eax+0x5d]
  518860:	mov    ebx,0x47d1f3a6
  518865:	pushf  
  518866:	mov    ds:0x2e45d3c1,al
  51886b:	es (bad) 
  51886d:	sti    
  51886e:	(bad)  
  51886f:	xor    dl,BYTE PTR [eax-0x6e]
  518872:	aaa    
  518873:	add    DWORD PTR [ecx+0x1a],0x8f6d9186
  51887a:	in     al,0x25
  51887c:	adc    BYTE PTR [ecx],cl
  51887e:	sahf   
  51887f:	mov    ds:0x7cada4ed,eax
  518884:	in     eax,dx
  518885:	xor    eax,0x131eb0e9
  51888a:	test   al,0xd3
  51888c:	pusha  
  51888d:	scas   al,BYTE PTR es:[edi]
  51888e:	dec    ebp
  51888f:	jmp    0x5188d5
  518891:	ja     0x5188a3
  518893:	jae    0x5188d3
  518895:	mov    eax,0xc57a5526
  51889a:	fstp   QWORD PTR [ecx-0x6a]
  51889d:	adc    al,0x31
  51889f:	pushf  
  5188a0:	xchg   edi,eax
  5188a1:	nop
  5188a2:	mov    ebp,0x1c4fde89
  5188a7:	aas    
  5188a8:	add    ch,BYTE PTR [ebx-0xdc5cb3e]
  5188ae:	in     eax,0x34
  5188b0:	jle    0x5188d5
  5188b2:	push   0x36
  5188b4:	or     ecx,0x3d
  5188b7:	add    eax,0x74d2fb95
  5188bc:	push   esp
  5188bd:	rol    DWORD PTR [esi],cl
  5188bf:	xlat   BYTE PTR ds:[ebx]
  5188c0:	icebp  
  5188c1:	bound  edx,QWORD PTR [esi+0x42084a8e]
  5188c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5188c8:	dec    eax
  5188c9:	xchg   edi,eax
  5188ca:	repz mov dh,0xbc
  5188cd:	push   ebp
  5188ce:	and    DWORD PTR [esi],edx
  5188d0:	stos   BYTE PTR es:[edi],al
  5188d1:	scas   eax,DWORD PTR es:[edi]
  5188d2:	out    0xaf,al
  5188d4:	fnstcw WORD PTR [esi]
  5188d6:	xchg   ebp,eax
  5188d7:	idiv   BYTE PTR [edi]
  5188d9:	iret   
  5188da:	stos   BYTE PTR es:[edi],al
  5188db:	add    BYTE PTR [esi-0x41],bl
  5188de:	pusha  
  5188df:	add    eax,DWORD PTR [edi]
  5188e1:	dec    edi
  5188e2:	nop
  5188e3:	inc    ebp
  5188e4:	dec    edi
  5188e5:	daa    
  5188e6:	add    al,0x1e
  5188e8:	clc    
  5188e9:	loop   0x518967
  5188eb:	cmp    DWORD PTR [edx],ebp
  5188ed:	lods   al,BYTE PTR ds:[esi]
  5188ee:	iret   
  5188ef:	fs xchg edx,eax
  5188f1:	jns    0x5188ef
  5188f3:	out    dx,eax
  5188f4:	(bad)  
  5188f5:	and    dh,ch
  5188f7:	fmul   DWORD PTR [edi-0x4b]
  5188fa:	in     al,0xd3
  5188fc:	js     0x5188f0
  5188fe:	(bad)  
  5188ff:	leave  
  518900:	je     0x518948
  518902:	jecxz  0x518946
  518904:	retf   
  518905:	out    dx,al
  518906:	psrld  mm2,mm7
  518909:	pop    ebp
  51890a:	shl    BYTE PTR [ecx+0x430b2f45],cl
  518910:	sbb    al,0x7b
  518912:	call   0x737c:0xa86682d4
  518919:	adc    ecx,ebp
  51891b:	dec    edi
  51891c:	jbe    0x5188f6
  51891e:	mov    ebp,0xb825c708
  518923:	(bad)
  518926:	jecxz  0x518928
  518928:	add    al,0xa2
  51892a:	and    ebp,DWORD PTR [edx+0x1]
  51892d:	(bad)  
  51892e:	fist   DWORD PTR [esi+0xa]
  518931:	sub    eax,0xb1efa6a7
  518936:	test   eax,0xe1ba66b4
  51893b:	mov    al,0xda
  51893d:	int    0x35
  51893f:	lods   eax,DWORD PTR ds:[esi]
  518940:	scas   al,BYTE PTR es:[edi]
  518941:	fisttp QWORD PTR [ebx-0x14]
  518944:	loopne 0x518972
  518946:	adc    BYTE PTR [edi-0x397c0f51],0x9b
  51894d:	jl     0x5189c2
  51894f:	lahf   
  518950:	pop    edx
  518951:	adc    eax,0xdfc0ace8
  518956:	adc    al,BYTE PTR [ecx]
  518958:	xor    eax,0xfa380faf
  51895d:	pushf  
  51895e:	call   0x2c27:0xad1a412c
  518965:	aam    0x72
  518967:	mov    ds:0x79249a4a,al
  51896c:	pop    esi
  51896d:	fidiv  WORD PTR [edx]
  51896f:	add    BYTE PTR [edx+0x2123c678],dh
  518975:	imul   esi,ebx,0x6a1f928e
  51897b:	(bad)  
  51897d:	fs pop esi
  51897f:	pop    ecx
  518980:	inc    edi
  518981:	xchg   ecx,eax
  518982:	add    BYTE PTR [edi],dh
  518984:	dec    esp
  518985:	dec    esp
  518986:	pop    edi
  518987:	aam    0x92
  518989:	adc    BYTE PTR [edi],ah
  51898b:	out    dx,al
  51898c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51898d:	aas    
  51898e:	pushf  
  51898f:	ret    0xc3a1
  518992:	or     ebx,edi
  518994:	mov    esp,0x4830d45b
  518999:	aas    
  51899a:	ror    DWORD PTR [ecx],cl
  51899c:	loop   0x518941
  51899e:	mov    ecx,0xf3645adc
  5189a3:	mov    cl,0x69
  5189a5:	in     al,0xd9
  5189a7:	scas   al,BYTE PTR es:[edi]
  5189a8:	outs   dx,BYTE PTR ds:[esi]
  5189a9:	push   esi
  5189aa:	sub    al,0x25
  5189ac:	xor    BYTE PTR [esp+ebx*8],al
  5189af:	push   esp
  5189b0:	popa   
  5189b1:	call   0xd299:0xf0f80e77
  5189b8:	jmp    0x99db:0x2bf63c80
  5189bf:	imul   edx,eax,0x35
  5189c2:	pop    esi
  5189c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5189c4:	mov    edx,0x593866b1
  5189c9:	test   BYTE PTR [edx+0xc2da026],0x3a
  5189d0:	mov    bl,dl
  5189d2:	pop    es
  5189d3:	jecxz  0x5189f7
  5189d5:	jbe    0x518a17
  5189d7:	mov    ebp,0x4cf7b7ee
  5189dc:	jo     0x518a19
  5189de:	cmp    dh,BYTE PTR [edx]
  5189e0:	mov    dl,0xcc
  5189e2:	pop    esp
  5189e3:	popf   
  5189e4:	stos   BYTE PTR es:[edi],al
  5189e5:	inc    esp
  5189e6:	and    esp,DWORD PTR [ebp+0x35]
  5189e9:	jl     0x5189a1
  5189eb:	mov    ecx,0xe7f1e948
  5189f0:	xchg   DWORD PTR [ebp-0xa1431a9],esi
  5189f6:	jo     0x5189a5
  5189f8:	call   0xed41:0x322a0840
  5189ff:	mov    ebx,0xec9193ed
  518a04:	mov    ebx,0x21a2ca51
  518a09:	xor    eax,DWORD PTR [eax-0x34]
  518a0c:	les    esp,FWORD PTR [eax+0x2c1ea552]
  518a12:	dec    edx
  518a13:	inc    ebx
  518a14:	out    dx,eax
  518a15:	jns    0x518a37
  518a17:	inc    eax
  518a18:	sub    DWORD PTR [esi-0x1839e65c],esi
  518a1e:	xchg   DWORD PTR [edi-0x48e7a43f],ecx
  518a24:	call   0x28a0c825
  518a29:	jne    0x518a55
  518a2b:	ins    BYTE PTR es:[edi],dx
  518a2c:	mov    WORD PTR [edi+0x7a],cs
  518a2f:	push   es
  518a30:	sar    BYTE PTR [eax+0x338cd02b],1
  518a36:	sbb    al,0x58
  518a38:	in     al,dx
  518a39:	or     ebx,DWORD PTR [ebx]
  518a3b:	mov    ebx,0x1427d90d
  518a40:	push   0x616774ed
  518a45:	xchg   ebp,eax
  518a46:	loopne 0x518a26
  518a48:	cmp    BYTE PTR [ebp-0x5],0xf8
  518a4c:	je     0x5189e8
  518a4e:	mov    eax,DWORD PTR [edx]
  518a50:	pop    ebp
  518a51:	je     0x518a33
  518a53:	or     DWORD PTR [ebx+0x7b],ebp
  518a56:	(bad)  [eax+0x4f3de2da]
  518a5c:	int    0x58
  518a5e:	inc    esi
  518a5f:	add    al,0xd9
  518a61:	inc    esp
  518a62:	fs into 
  518a64:	xchg   esi,eax
  518a65:	or     DWORD PTR ds:0x5af3b5c0,esp
  518a6b:	in     eax,0xbe
  518a6d:	data16 adc al,0x7c
  518a70:	imul   ebx,DWORD PTR [ecx+0x7e],0x5c
  518a74:	fldcw  WORD PTR [eax-0x64a9d455]
  518a7b:	mov    bl,0xd4
  518a7d:	stos   BYTE PTR es:[edi],al
  518a7e:	repnz mov dh,0x58
  518a81:	mov    edx,0xf25b890b
  518a86:	gs cmp al,dh
  518a89:	pushf  
  518a8a:	jnp    0x518ad8
  518a8c:	add    eax,0xecd3bff8
  518a91:	mov    al,ds:0x9013bb75
  518a96:	addr16 ret 
  518a98:	jmp    0xbe952a83
  518a9d:	dec    edi
  518a9e:	shl    DWORD PTR [eax],1
  518aa0:	punpckhdq mm6,QWORD PTR [edx-0x56]
  518aa4:	imul   edx,DWORD PTR ds:[ebp-0x679e4ca5],0x3c
  518aac:	mov    ds:0xba1366ee,eax
  518ab1:	jge    0x518ad2
  518ab3:	shl    BYTE PTR [ebp+0x7],1
  518ab6:	adc    eax,0xff75ca25
  518abb:	xchg   esp,eax
  518abc:	arpl   WORD PTR [edx],ax
  518abe:	xchg   esi,eax
  518abf:	ret    
  518ac0:	xor    BYTE PTR [ebp+0x665f5c9b],bh
  518ac6:	xlat   BYTE PTR ds:[ebx]
  518ac7:	push   ebp
  518ac8:	sub    eax,ecx
  518aca:	dec    edi
  518acb:	inc    DWORD PTR [ebx]
  518acd:	adc    eax,0x3968951f
  518ad2:	out    0xf2,al
  518ad4:	pop    ss
  518ad5:	jle    0x518ac9
  518ad7:	les    ecx,FWORD PTR [eax+ebp*2+0x4d0c08f1]
  518ade:	icebp  
  518adf:	sbb    ah,BYTE PTR [edx+edi*1-0x4541595]
  518ae6:	and    cl,BYTE PTR [ebx]
  518ae8:	xchg   edx,eax
  518ae9:	mov    dh,0x46
  518aeb:	pop    edi
  518aec:	cmp    DWORD PTR [ebp-0x2b],esi
  518aef:	les    ebx,FWORD PTR [eax+edx*1]
  518af2:	fisubr WORD PTR es:[esi-0xc]
  518af6:	jbe    0x518b45
  518af8:	out    dx,eax
  518af9:	jmp    0xc0dd75d
  518afe:	push   esi
  518aff:	push   eax
  518b00:	scas   al,BYTE PTR es:[edi]
  518b01:	pcmpeqd mm1,QWORD PTR [esi+0x573a3c15]
  518b08:	dec    esi
  518b09:	jbe    0x518ab6
  518b0b:	add    eax,0x38fc6901
  518b10:	jmp    0x518b42
  518b12:	test   eax,0xe1915bcd
  518b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518b18:	pusha  
  518b19:	gs pop eax
  518b1b:	adc    eax,0x3687b968
  518b20:	inc    esi
  518b21:	ja     0x518b5d
  518b23:	leave  
  518b24:	repnz push es
  518b26:	out    dx,eax
  518b27:	(bad)  
  518b28:	loop   0x518ac3
  518b2a:	or     al,0xc7
  518b2c:	cmp    DWORD PTR [ebp+0x1f8ebdec],ecx
  518b32:	ror    DWORD PTR ds:0x9d1ab736,1
  518b38:	dec    edx
  518b39:	adc    ebp,ebx
  518b3b:	xor    dh,BYTE PTR [ecx+0x4c486ebe]
  518b41:	sbb    bl,ah
  518b43:	adc    eax,0x9d0944a0
  518b48:	mov    ah,BYTE PTR [esi+0x13]
  518b4b:	dec    ecx
  518b4c:	stos   DWORD PTR es:[edi],eax
  518b4d:	sti    
  518b4e:	mov    WORD PTR [ebx-0x60],gs
  518b51:	jge    0x518b60
  518b53:	rcr    DWORD PTR [ebp-0x67e7d15f],0xa8
  518b5a:	push   esp
  518b5b:	push   ebx
  518b5c:	pop    esi
  518b5d:	xchg   DWORD PTR [ecx-0x52cb97a1],ebx
  518b63:	mov    al,ds:0xb696f9d0
  518b68:	loop   0x518bcf
  518b6a:	sbb    esp,ecx
  518b6c:	sbb    edx,DWORD PTR [ebx]
  518b6e:	push   edx
  518b6f:	cmc    
  518b70:	sub    DWORD PTR [ecx-0x741c0a91],esi
  518b76:	pushf  
  518b77:	rcl    DWORD PTR [ebx],0xc0
  518b7a:	sbb    DWORD PTR [eax+eiz*1+0x26],edi
  518b7e:	or     esi,DWORD PTR [esi-0x47b4efd8]
  518b84:	ret    0xfeb4
  518b87:	out    0x2d,eax
  518b89:	mov    edi,0x33dd82fa
  518b8e:	sub    BYTE PTR [eax+0x13e2f8e1],0x5e
  518b95:	sbb    DWORD PTR [edx+0x6a],0x51
  518b99:	and    BYTE PTR [edi+ebp*2+0x18],al
  518b9d:	out    dx,al
  518b9e:	jecxz  0x518b25
  518ba0:	sti    
  518ba1:	rcl    DWORD PTR [edx-0x18],0xc8
  518ba5:	sbb    ch,BYTE PTR [ebx-0x75]
  518ba8:	es adc ah,cl
  518bab:	or     BYTE PTR [eax+esi*1],bl
  518bae:	fsubr  DWORD PTR [edx]
  518bb0:	pop    eax
  518bb1:	bnd jb 0x518c1c
  518bb4:	mov    cl,0x98
  518bb6:	add    DWORD PTR [edi+0x76],ebp
  518bb9:	loop   0x518c14
  518bbb:	pusha  
  518bbc:	lahf   
  518bbd:	or     ecx,DWORD PTR [ebx+0x228181ea]
  518bc3:	push   edi
  518bc4:	xor    eax,0xfb491d28
  518bc9:	imul   BYTE PTR [eax+0x76c8583]
  518bcf:	mov    ds:0x18d0b365,eax
  518bd4:	cmp    eax,0x8ad85f3a
  518bd9:	sbb    ah,0x91
  518bdc:	jg     0x518b9f
  518bde:	sub    dl,BYTE PTR [edi]
  518be0:	push   ds
  518be1:	push   cs
  518be2:	hlt    
  518be3:	repz aas 
  518be5:	push   ds
  518be6:	mov    al,ch
  518be8:	inc    eax
  518be9:	sahf   
  518bea:	mov    BYTE PTR [esi+0x1b47c86],ch
  518bf0:	scas   eax,DWORD PTR es:[edi]
  518bf1:	shl    DWORD PTR [ebx+0x530ddb85],1
  518bf7:	xor    BYTE PTR [edi+0x5b8d7d85],ch
  518bfd:	jmp    0x518b92
  518bff:	add    al,dh
  518c01:	jge    0x518c3b
  518c03:	dec    esi
  518c04:	cmp    al,0x83
  518c06:	cdq    
  518c07:	or     DWORD PTR [edx+0x573d2350],esi
  518c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518c0e:	rcr    BYTE PTR [eax+0x2f],cl
  518c11:	lea    ebx,[ebx+eiz*2-0x18fa7af1]
  518c18:	mov    ch,0xbd
  518c1a:	(bad)  
  518c1b:	dec    ebx
  518c1c:	adc    ecx,esi
  518c1e:	leave  
  518c1f:	push   edi
  518c20:	xchg   ecx,eax
  518c21:	rcl    bl,cl
  518c23:	gs jmp 0x1ab5:0x9cba66c
  518c2b:	xchg   ebx,eax
  518c2c:	cmp    ch,ah
  518c2e:	repz mov ?,WORD PTR [eax-0x33]
  518c32:	inc    esi
  518c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518c34:	jae    0x518c3d
  518c36:	push   0xe43ca148
  518c3b:	pop    eax
  518c3c:	fld    DWORD PTR [ecx-0x1918de18]
  518c42:	sub    bl,BYTE PTR [edx+esi*2-0x68100cf9]
  518c49:	adc    al,0xe4
  518c4b:	lds    eax,FWORD PTR [edi+edi*1-0x7062b094]
  518c52:	scas   al,BYTE PTR es:[edi]
  518c53:	gs addr16 mov edx,ecx
  518c57:	jmp    0x4c4f:0xc233604e
  518c5e:	add    edx,DWORD PTR [ebx+0x54]
  518c61:	sti    
  518c62:	int    0xa5
  518c64:	or     eax,0x38b37390
  518c69:	lock ror DWORD PTR [eax],1
  518c6c:	nop
  518c6d:	test   DWORD PTR [edi-0x635d696],esi
  518c73:	push   0x29
  518c75:	sti    
  518c76:	fistp  QWORD PTR [ebx+0x8]
  518c79:	xchg   esp,eax
  518c7a:	pop    esi
  518c7b:	or     cl,BYTE PTR [esi-0x709fc845]
  518c81:	inc    ebp
  518c82:	clc    
  518c83:	loop   0x518c7f
  518c85:	jmp    0x518cb2
  518c87:	pop    es
  518c88:	clc    
  518c89:	mov    ebp,0xa8183970
  518c8e:	gs mov esi,0x82298ade
  518c94:	popa   
  518c95:	loopne 0x518c19
  518c97:	sub    edx,DWORD PTR [eax-0x1d673c0]
  518c9d:	fnstenv [ebx+0x54]
  518ca0:	sar    DWORD PTR [ebx],0x8a
  518ca3:	or     BYTE PTR [ebx+0x40],ah
  518ca6:	inc    edx
  518ca7:	inc    edi
  518ca8:	mov    eax,0xc1e9f528
  518cad:	retf   
  518cae:	cmp    al,BYTE PTR ds:0xb8d9b5a3
  518cb4:	jge    0x518c83
  518cb6:	inc    ecx
  518cb7:	shl    cl,1
  518cb9:	je     0x518c9e
  518cbb:	cmp    al,cl
  518cbd:	jns    0x518c53
  518cbf:	add    dh,cl
  518cc1:	or     eax,0x3873f661
  518cc6:	inc    ebx
  518cc7:	aaa    
  518cc8:	pop    ds
  518cc9:	imul   ebp,esi,0xfffffff5
  518ccc:	fist   DWORD PTR [esi-0x6e0c12f3]
  518cd2:	popa   
  518cd3:	pop    ds
  518cd4:	rol    DWORD PTR [ebp+0x675977f1],cl
  518cda:	push   0x19e01c14
  518cdf:	push   esp
  518ce0:	inc    ebp
  518ce1:	dec    edi
  518ce2:	test   BYTE PTR [edx+0x78],dl
  518ce5:	and    eax,0xb6ae8fd4
  518cea:	lds    ebp,FWORD PTR [eax]
  518cec:	sar    BYTE PTR [esi+edi*1-0x77],cl
  518cf0:	add    DWORD PTR [ebp+edi*2+0x31],ebp
  518cf4:	in     al,dx
  518cf5:	test   DWORD PTR [edx-0x7caac52],eax
  518cfb:	push   ecx
  518cfc:	jbe    0x518d3e
  518cfe:	ds mov ah,0xc4
  518d01:	mov    bl,0x1e
  518d03:	lea    ebx,[esi-0x55]
  518d06:	and    eax,0x43dba63e
  518d0b:	(bad)  
  518d0c:	fcmovb st,st(0)
  518d0e:	ret    0x63cb
  518d11:	xor    DWORD PTR [ebx+0x53b79abc],ecx
  518d17:	test   al,0x48
  518d19:	je     0x518cf6
  518d1b:	pop    esp
  518d1c:	mov    gs,ebp
  518d1e:	jle    0x518cb3
  518d20:	xchg   ecx,eax
  518d21:	arpl   WORD PTR [ebx],di
  518d23:	jbe    0x518d23
  518d25:	das    
  518d26:	jmp    0x25458b6b
  518d2b:	xor    bl,BYTE PTR [esi+0x19fe5910]
  518d31:	pop    eax
  518d32:	out    dx,eax
  518d33:	in     eax,0x9f
  518d35:	int3   
  518d36:	outs   dx,DWORD PTR ds:[esi]
  518d37:	dec    ecx
  518d38:	loopne 0x518cea
  518d3a:	mov    ds:0xda1f2d8f,eax
  518d3f:	or     BYTE PTR [eax+0x5c],0x7f
  518d43:	sub    BYTE PTR [esi],cl
  518d45:	lock push cs
  518d47:	cmp    bl,BYTE PTR ds:0xa00a6caa
  518d4d:	and    esi,DWORD PTR [eax]
  518d4f:	push   ebp
  518d50:	imul   esi,DWORD PTR [edx-0x650b13cd],0xdb062601
  518d5a:	fmul   QWORD PTR [esi]
  518d5c:	(bad)  
  518d5d:	push   esi
  518d5e:	push   ss
  518d5f:	ror    BYTE PTR [edx],cl
  518d61:	adc    ch,BYTE PTR [edi-0x3c]
  518d64:	aad    0xfb
  518d66:	inc    esi
  518d67:	dec    ebp
  518d68:	mov    ch,0xfa
  518d6a:	loope  0x518dde
  518d6c:	mov    al,0x26
  518d6e:	adc    ch,BYTE PTR ds:0x80934244
  518d74:	(bad)  
  518d75:	scas   al,BYTE PTR es:[edi]
  518d76:	cld    
  518d77:	out    0x71,al
  518d79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518d7a:	fcom   QWORD PTR [esi+0x38]
  518d7d:	ret    
  518d7e:	mov    BYTE PTR [ecx+eax*2],ah
  518d81:	adc    edi,edx
  518d83:	cmp    BYTE PTR [ebx],0xa5
  518d86:	into   
  518d87:	cs inc eax
  518d89:	test   cl,ah
  518d8b:	pop    ds
  518d8c:	add    al,0x4
  518d8e:	fisubr WORD PTR [edx-0x4a]
  518d91:	or     ebx,DWORD PTR [esi-0x4a3367e8]
  518d97:	cmp    eax,edx
  518d99:	call   0x90f4:0x8b0fa011
  518da0:	mov    dh,0x78
  518da2:	pop    edx
  518da3:	retf   0x521b
  518da6:	in     eax,dx
  518da7:	dec    ebx
  518da8:	mov    esi,0x6b41cf8f
  518dad:	or     eax,DWORD PTR [eax]
  518daf:	inc    ebp
  518db0:	and    al,0xcb
  518db2:	outs   dx,BYTE PTR ds:[esi]
  518db3:	aas    
  518db4:	inc    edx
  518db5:	jmp    0x518e1c
  518db7:	sbb    al,dl
  518db9:	stc    
  518dba:	(bad)  
  518dbb:	fdivr  QWORD PTR [ebp+0x73]
  518dbe:	jecxz  0x518e1d
  518dc0:	xchg   ebx,eax
  518dc1:	iret   
  518dc2:	sbb    DWORD PTR [ecx+ebx*1+0x59],ecx
  518dc6:	test   DWORD PTR ds:0xb703b99f,ebx
  518dcc:	dec    eax
  518dcd:	(bad)  
  518dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518dd2:	test   BYTE PTR [ebx+0x17],ah
  518dd5:	inc    eax
  518dd6:	pop    edx
  518dd7:	shl    DWORD PTR [edx-0x4e41b71f],1
  518ddd:	jp     0x518e22
  518ddf:	inc    edi
  518de0:	jl     0x518e38
  518de2:	jg     0x518d9c
  518de4:	jne    0x518dda
  518de6:	pusha  
  518de7:	and    BYTE PTR [ebx+0x41],dl
  518dea:	std    
  518deb:	jmp    0xe034:0xfead5d59
  518df2:	mov    al,ds:0xec0bc30e
  518df7:	jecxz  0x518d8f
  518df9:	pusha  
  518dfa:	mov    ebp,0x1e8e1187
  518dff:	jb     0x518ded
  518e01:	out    dx,eax
  518e02:	mov    edi,0xd757f231
  518e07:	or     WORD PTR [edx+0x3ac19ff4],si
  518e0e:	aas    
  518e0f:	cmp    al,bh
  518e11:	xchg   edi,eax
  518e12:	std    
  518e13:	pusha  
  518e14:	outs   dx,DWORD PTR ds:[esi]
  518e15:	retf   0xbee6
  518e18:	inc    edi
  518e19:	pop    ebx
  518e1a:	dec    esp
  518e1b:	outs   dx,DWORD PTR ds:[esi]
  518e1c:	jmp    0x342d:0xfb5fa205
  518e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  518e24:	stc    
  518e25:	xor    DWORD PTR [esp+eax*8],ecx
  518e28:	shl    esp,cl
  518e2a:	dec    ecx
  518e2b:	jmp    0x518e8f
  518e2d:	add    eax,0x413a3265
  518e32:	jmp    0x85e:0x4a8966ad
  518e39:	jae    0x518ddf
  518e3b:	pushf  
  518e3c:	pop    ss
  518e3d:	pop    esi
  518e3e:	repz pop eax
  518e40:	pushf  
  518e41:	ds sbb al,0x1e
  518e44:	add    DWORD PTR [edi+eiz*1+0x53],0x58a55089
  518e4c:	loopne 0x518de8
  518e4e:	cmp    BYTE PTR ss:[ebx+0x357cad96],bh
  518e55:	dec    ebp
  518e56:	pop    ebx
  518e57:	inc    ebx
  518e58:	xchg   edi,eax
  518e59:	add    BYTE PTR [ecx+eax*4],bh
  518e5c:	push   0xbedf6427
  518e61:	xchg   edx,eax
  518e62:	dec    ebx
  518e63:	call   0xaa0a5719
  518e68:	jmp    0x518df3
  518e6a:	jge    0x518e72
  518e6c:	(bad)  
  518e6d:	sbb    al,0xcd
  518e6f:	jbe    0x518ecf
  518e71:	or     ebx,esi
  518e73:	icebp  
  518e74:	stc    
  518e75:	dec    esi
  518e76:	dec    eax
  518e77:	jg     0x518e30
  518e79:	retf   0x65e3
  518e7c:	fild   DWORD PTR [edi]
  518e7e:	fadd   DWORD PTR [ecx]
  518e80:	xchg   DWORD PTR [edx-0x1bd63f0],edx
  518e86:	outs   dx,DWORD PTR ds:[esi]
  518e87:	mov    al,0x45
  518e89:	and    ah,BYTE PTR [edi]
  518e8b:	inc    eax
  518e8c:	push   ebx
  518e8d:	lods   eax,DWORD PTR ds:[esi]
  518e8e:	mov    cs,WORD PTR [ebx-0xef4c68e]
  518e94:	hlt    
  518e95:	mov    ebx,0xf05e92b8
  518e9a:	aas    
  518e9b:	cmp    DWORD PTR [ebp+0xa8d4e7a],ebx
  518ea1:	xchg   ebp,eax
  518ea2:	pop    esi
  518ea3:	ret    0xe2d3
  518ea6:	(bad)  
  518ea8:	or     edi,ecx
  518eaa:	gs push ebx
  518eac:	in     al,0xe
  518eae:	shr    BYTE PTR [esi],0xd3
  518eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518eb2:	cli    
  518eb3:	lahf   
  518eb4:	add    al,0x1e
  518eb6:	js     0x518e4b
  518eb8:	xcrypt-cbc (bad)
  518eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518eba:	xlat   BYTE PTR ds:[ebx]
  518ebb:	mov    ebp,0x822540e3
  518ec0:	loope  0x518f0c
  518ec2:	mov    cl,0xbb
  518ec4:	xor    eax,0x3fd07d7a
  518ec9:	sbb    ecx,ebp
  518ecb:	rol    BYTE PTR [edi],1
  518ecd:	or     ecx,DWORD PTR [ebx-0x45]
  518ed0:	mov    ds:0xdc0ee556,al
  518ed5:	test   BYTE PTR [eax],0xd4
  518ed8:	imul   eax,DWORD PTR ds:0x693ea42e,0xffffff9d
  518edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518ee0:	push   cs
  518ee1:	adc    DWORD PTR [ebx-0x729fc1a7],ebx
  518ee7:	out    0x43,al
  518ee9:	mov    ebp,0x85171da2
  518eee:	and    al,0x34
  518ef0:	pop    edi
  518ef1:	pop    ebp
  518ef2:	jo     0x518ef2
  518ef4:	out    dx,al
  518ef5:	sub    eax,0x8066f8c7
  518efa:	pop    edi
  518efb:	or     al,0x2e
  518efd:	(bad)  
  518efe:	in     eax,0xca
  518f00:	fwait
  518f01:	inc    ebx
  518f02:	std    
  518f03:	push   ds
  518f04:	cmp    dl,bl
  518f06:	in     eax,dx
  518f07:	adc    al,0x3f
  518f09:	jne    0x518f22
  518f0b:	idiv   dl
  518f0d:	xor    BYTE PTR [edx],dl
  518f0f:	outs   dx,DWORD PTR ds:[esi]
  518f10:	pop    edx
  518f11:	pushf  
  518f12:	(bad)  
  518f13:	shl    bl,1
  518f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518f16:	ficomp DWORD PTR [edi+0x66]
  518f19:	mov    cl,0xa6
  518f1b:	dec    eax
  518f1c:	push   eax
  518f1d:	push   ebx
  518f1e:	popf   
  518f1f:	sbb    BYTE PTR [ecx+0x72],ah
  518f22:	sub    edx,edi
  518f24:	enter  0x4194,0x45
  518f28:	js     0x518eda
  518f2a:	cdq    
  518f2b:	jg     0x518f4d
  518f2d:	add    al,BYTE PTR [ebx+edi*4]
  518f30:	or     eax,0x7949f887
  518f35:	in     eax,0xaa
  518f37:	(bad)  
  518f38:	leave  
  518f39:	mov    edx,0xbb2a43db
  518f3e:	push   ebx
  518f3f:	jmp    DWORD PTR [ebp-0x5bee8296]
  518f45:	iret   
  518f46:	inc    edx
  518f47:	sub    eax,0x35d13ace
  518f4c:	mov    eax,0x5c668d9e
  518f51:	push   eax
  518f52:	arpl   WORD PTR [edx+0x26],si
  518f55:	fldcw  WORD PTR [esi-0x692a47]
  518f5b:	iret   
  518f5c:	xchg   dh,al
  518f5e:	movhps xmm7,QWORD PTR [esi-0x21]
  518f62:	cmc    
  518f63:	cmp    DWORD PTR [esp+esi*4-0x1491629a],ebx
  518f6a:	push   ebx
  518f6b:	leave  
  518f6c:	pusha  
  518f6d:	lods   al,BYTE PTR ds:[esi]
  518f6e:	fistp  WORD PTR [ecx+0x1]
  518f71:	adc    BYTE PTR [ebx-0x35],0x50
  518f75:	cwde   
  518f76:	push   esp
  518f77:	in     eax,dx
  518f78:	push   0xffffff9c
  518f7a:	push   ecx
  518f7b:	push   es
  518f7c:	jo     0x518f5a
  518f7e:	sbb    al,0x51
  518f80:	adc    ecx,DWORD PTR [eax]
  518f82:	cmc    
  518f83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518f84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  518f85:	in     eax,0x71
  518f87:	stos   DWORD PTR es:[edi],eax
  518f88:	call   0x45d2:0x9147c834
  518f8f:	mov    dl,0xb5
  518f91:	or     edx,DWORD PTR [edi-0x22]
  518f94:	into   
  518f95:	mov    eax,ds:0xda58d0d1
  518f9a:	cwde   
  518f9b:	mov    bh,0x58
  518f9d:	int3   
  518f9e:	push   ds
  518f9f:	rol    esi,cl
  518fa1:	out    0x0,eax
  518fa3:	jnp    0x519003
  518fa5:	sbb    DWORD PTR [ecx],ecx
  518fa7:	mov    dh,0x60
  518fa9:	jnp    0x518f85
  518fab:	or     BYTE PTR [ecx],ah
  518fad:	push   esi
  518fae:	mov    ah,0xe
  518fb0:	xor    eax,DWORD PTR [eax]
  518fb2:	shr    esp,0xa3
  518fb5:	addr16 mov ebx,0x79d331fb
  518fbb:	push   0x47135d2
  518fc0:	call   0xc0e7:0x1fb140fb
  518fc7:	(bad)  
  518fc8:	pushf  
  518fc9:	int3   
  518fca:	out    dx,eax
  518fcb:	popa   
  518fcc:	(bad)  
  518fcd:	out    0xd5,eax
  518fcf:	out    0x4b,eax
  518fd1:	arpl   WORD PTR [ebp+0x6690ca44],dx
  518fd7:	int    0x47
  518fd9:	sub    eax,0x3126619a
  518fde:	pop    edx
  518fdf:	push   esi
  518fe0:	out    dx,eax
  518fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518fe2:	xchg   esi,eax
  518fe3:	pop    edi
  518fe4:	fisttp QWORD PTR [ebx-0xb7b0886]
  518fea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  518feb:	or     al,0x2a
  518fed:	xchg   esi,eax
  518fee:	popa   
  518fef:	mov    ds:0x8d7ea072,eax
  518ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  518ff5:	inc    BYTE PTR [ebx]
  518ff7:	aas    
  518ff8:	and    al,0x73
  518ffa:	push   edx
  518ffb:	xchg   ebx,eax
  518ffc:	pop    ecx
  518ffd:	cli    
  518ffe:	xlat   BYTE PTR ds:[ebx]
  518fff:	addr16 (bad) 
  519001:	cwde   
  519002:	push   ebx
  519003:	xchg   ebx,eax
  519004:	add    al,0x7c
  519006:	add    DWORD PTR [edx+0x55],0xc6eb671f
  51900d:	pop    ss
  51900e:	inc    esp
  51900f:	dec    ebp
  519010:	sub    al,0x33
  519012:	dec    dl
  519014:	mov    edx,0xb4e96c07
  519019:	mov    ch,0xec
  51901b:	dec    ecx
  51901c:	hlt    
  51901d:	and    al,0x28
  51901f:	pop    ss
  519020:	inc    BYTE PTR [esi+0x42]
  519023:	and    DWORD PTR [esi],0xe
  519026:	jg     0x518fc4
  519028:	add    edx,DWORD PTR [ebp-0x6f1526fc]
  51902e:	push   ss
  51902f:	or     al,0xd2
  519031:	mov    esp,DWORD PTR [edx]
  519033:	jle    0x5190b3
  519035:	ret    
  519036:	or     DWORD PTR cs:[esi+0x49d56412],esi
  51903d:	cmp    al,0x24
  51903f:	loopne 0x5190a6
  519041:	sub    eax,0x50d7ebd5
  519046:	jmp    DWORD PTR [edx]
  519048:	mov    edi,0x877ede6e
  51904d:	or     DWORD PTR [esi-0x41],0xe
  519051:	mov    ss,WORD PTR [esi-0x8]
  519054:	push   edi
  519055:	mov    WORD PTR [edi-0x34],cs
  519058:	nop
  519059:	imul   edi,DWORD PTR [esi-0x5c183df6],0x56a0b409
  519063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519064:	add    eax,0x67a88da2
  519069:	je     0x5190b8
  51906b:	pusha  
  51906c:	cmp    al,0x4d
  51906e:	jmp    0x99874ea
  519073:	and    eax,0x33fc90a0
  519078:	arpl   WORD PTR [ecx],sp
  51907a:	fistp  DWORD PTR [ebp+0x9]
  51907d:	(bad)  ds:0xf9fcaf7e
  519083:	mov    dh,0x7d
  519085:	pop    ss
  519086:	mov    ds:0x7a9bfc85,al
  51908b:	mov    BYTE PTR [esi],al
  51908d:	leave  
  51908e:	inc    cl
  519090:	repnz es mov ah,0x4b
  519094:	or     BYTE PTR [ebx+0x46],0xa8
  519098:	test   eax,0x314c564a
  51909d:	push   edx
  51909e:	sbb    BYTE PTR [ebp+0x63],bh
  5190a1:	jne    0x5190b8
  5190a3:	jns    0x519058
  5190a5:	inc    edx
  5190a6:	xlat   BYTE PTR ds:[ebx]
  5190a7:	and    esi,DWORD PTR [eax+0x4d]
  5190aa:	(bad)  
  5190ab:	add    cl,cl
  5190ad:	dec    ecx
  5190ae:	repnz mov dl,BYTE PTR es:[ecx+0x55]
  5190b3:	jae    0x5190d0
  5190b5:	adc    DWORD PTR [ebp-0x5],ecx
  5190b8:	pop    edx
  5190b9:	dec    ebx
  5190ba:	das    
  5190bb:	lahf   
  5190bc:	mov    dl,0x77
  5190be:	push   eax
  5190bf:	jne    0x519047
  5190c1:	sbb    eax,0xad2a1656
  5190c6:	mov    dh,0x4e
  5190c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5190c9:	mov    dl,0xbf
  5190cb:	mov    cl,0x2
  5190cd:	cs cmp al,0xfe
  5190d0:	push   esp
  5190d1:	pop    ecx
  5190d2:	pop    edx
  5190d3:	or     ah,bh
  5190d5:	jne    0x5190b7
  5190d7:	das    
  5190d8:	and    esi,DWORD PTR gs:[ebp-0x3]
  5190dc:	inc    edx
  5190dd:	ds inc eax
  5190df:	adc    DWORD PTR [ebx+0x4537b085],ecx
  5190e5:	pop    ebp
  5190e6:	loop   0x5190ae
  5190e8:	pop    es
  5190e9:	mov    edi,0x7d77941f
  5190ee:	in     al,0x64
  5190f0:	cmp    ecx,DWORD PTR [bx+0x74]
  5190f4:	(bad)  
  5190f5:	mov    ds:0x5c20f00a,al
  5190fa:	rcr    BYTE PTR [ecx],1
  5190fc:	in     al,0x12
  5190fe:	mov    dh,0x85
  519100:	xor    eax,0xe9fc2b0
  519105:	stos   BYTE PTR es:[edi],al
  519106:	jp     0x519103
  519108:	push   ss
  519109:	out    dx,al
  51910a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51910b:	or     al,0x4a
  51910d:	jg     0x519165
  51910f:	cli    
  519110:	outs   dx,BYTE PTR ds:[esi]
  519111:	out    0x3b,eax
  519113:	dec    ax
  519115:	fbld   TBYTE PTR [edx-0x5e0c4421]
  51911b:	inc    esp
  51911c:	outs   dx,BYTE PTR ds:[esi]
  51911d:	adc    ah,BYTE PTR [ebx-0x1dcd868e]
  519123:	out    0x19,al
  519125:	sti    
  519126:	sti    
  519127:	loopne 0x51915c
  519129:	mov    bl,0xfd
  51912b:	call   0x95e504f2
  519130:	push   esp
  519131:	pop    eax
  519132:	int    0x47
  519134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519135:	cmc    
  519136:	or     bh,BYTE PTR [ebp+0x60]
  519139:	lods   al,BYTE PTR ds:[esi]
  51913a:	pop    ebx
  51913b:	ficom  WORD PTR [eax-0x609a9883]
  519141:	xor    BYTE PTR [esi-0x60],0x4d
  519145:	cld    
  519146:	lss    esp,FWORD PTR [edi-0x11]
  51914a:	mov    eax,0x57f608c7
  51914f:	arpl   WORD PTR [ebx-0x6962a7ea],bp
  519155:	cdq    
  519156:	pop    ebp
  519157:	sbb    bh,cl
  519159:	arpl   bp,di
  51915b:	mov    al,0xc6
  51915d:	sahf   
  51915e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51915f:	xchg   ebp,eax
  519160:	outs   dx,DWORD PTR ds:[esi]
  519161:	push   DWORD PTR [edi]
  519163:	fidivr WORD PTR [edi-0x24]
  519166:	jp     0x51911c
  519168:	add    ecx,DWORD PTR [ebp+esi*2-0x4b]
  51916c:	lahf   
  51916d:	cmp    BYTE PTR [ebx+esi*4],dh
  519170:	call   0x1ad5:0x58c32b7d
  519177:	and    cl,BYTE PTR [edi-0x63]
  51917a:	lahf   
  51917b:	adc    BYTE PTR [esi],ah
  51917d:	icebp  
  51917e:	pop    ss
  51917f:	and    BYTE PTR [edi],0xa6
  519182:	sar    BYTE PTR [eax+eiz*1-0x4d],cl
  519186:	pop    es
  519187:	int3   
  519188:	adc    eax,DWORD PTR [ebx+0x1a]
  51918b:	jno    0x519134
  51918d:	add    esp,esi
  51918f:	add    ah,ah
  519191:	shr    DWORD PTR [eax+ebx*2-0x9f34c34],0xd3
  519199:	stos   BYTE PTR es:[edi],al
  51919a:	mov    ds:0x548d45fd,al
  51919f:	cmp    BYTE PTR [edx],0x5d
  5191a2:	data16 add sp,WORD PTR fs:[edx]
  5191a7:	imul   edi,DWORD PTR [ecx+0x711ae06f],0x2b
  5191ae:	aam    0x26
  5191b0:	dec    edx
  5191b1:	push   edx
  5191b2:	adc    ch,BYTE PTR [eax]
  5191b4:	gs popa 
  5191b6:	add    al,0xae
  5191b8:	imul   edx,DWORD PTR [eax+0x2bc76017],0x7a
  5191bf:	jp     0x51915f
  5191c1:	mov    cl,0xd5
  5191c3:	js     0x519216
  5191c5:	adc    DWORD PTR [edx-0x3b],0xd98aad05
  5191cc:	and    al,dl
  5191ce:	ds mov eax,0x5b5f2dbf
  5191d4:	sti    
  5191d5:	inc    edi
  5191d6:	stc    
  5191d7:	sbb    al,0x53
  5191d9:	sub    dh,al
  5191db:	ins    BYTE PTR es:[edi],dx
  5191dc:	mov    edx,0xf852a2bd
  5191e1:	jmp    0x51919e
  5191e3:	mov    BYTE PTR es:[edx-0x3e2a2480],0x3e
  5191eb:	pop    esp
  5191ec:	add    BYTE PTR [eax-0x17],dl
  5191ef:	popf   
  5191f0:	imul   ecx,DWORD PTR [eax+edx*1-0x47ef61e5],0xffffff83
  5191f8:	iret   
  5191f9:	push   ss
  5191fa:	sbb    DWORD PTR [edx-0x787e57a1],eax
  519200:	mov    ah,0xf6
  519202:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  519204:	not    DWORD PTR [ecx+eiz*8]
  519207:	or     BYTE PTR [ebp-0x2d],cl
  51920a:	jmp    0x47f24f5d
  51920f:	std    
  519210:	outs   dx,BYTE PTR ds:[esi]
  519211:	loope  0x5191e3
  519213:	xchg   ebp,eax
  519214:	mov    ah,0x25
  519216:	sbb    BYTE PTR [ecx+0x7dbe5541],bl
  51921c:	mov    dl,0xf3
  51921e:	sahf   
  51921f:	mov    edi,0x37143e88
  519224:	leave  
  519225:	jno    0x519270
  519227:	or     BYTE PTR ds:0xd3f9d2de,ah
  51922d:	sbb    DWORD PTR [edi-0x40f4ad34],eax
  519233:	dec    edx
  519234:	shr    DWORD PTR [ecx+0x1b04d96e],1
  51923a:	mov    ch,0x1
  51923c:	mov    esp,0xa20d6f6b
  519241:	add    DWORD PTR [eax],0xe0c3a12c
  519247:	cdq    
  519248:	addr16 mov ah,0x45
  51924b:	cmc    
  51924c:	inc    edx
  51924d:	mov    esp,0x7cf8add1
  519252:	(bad)  
  519253:	lods   al,BYTE PTR ds:[esi]
  519254:	rol    cl,1
  519256:	xor    cl,BYTE PTR [esi-0x2e]
  519259:	lods   eax,DWORD PTR ds:[esi]
  51925a:	fdiv   DWORD PTR [ecx]
  51925c:	dec    ecx
  51925d:	imul   ecx,DWORD PTR [edx],0xd3e7898f
  519263:	jmp    0x940ef54d
  519268:	rcl    DWORD PTR [edx-0x7c7f41ea],1
  51926e:	ins    DWORD PTR es:[edi],dx
  51926f:	mov    al,0xf0
  519271:	(bad)  
  519273:	ficom  WORD PTR [ecx+eiz*4]
  519276:	and    BYTE PTR [esi+edi*2],bh
  519279:	pop    esi
  51927a:	xor    al,BYTE PTR [edi-0x14cd27ca]
  519280:	js     0x51921e
  519282:	addr16 xor al,0x54
  519285:	pop    esp
  519286:	lahf   
  519287:	sbb    eax,0xbe24d890
  51928c:	xchg   edx,eax
  51928d:	or     eax,0x916fd8f0
  519292:	repnz mov ah,0xb
  519295:	ins    DWORD PTR es:[edi],dx
  519296:	loop   0x519307
  519298:	dec    ebp
  519299:	sub    al,0xd
  51929b:	xor    BYTE PTR [eax],dl
  51929d:	shl    BYTE PTR [esi-0x7af7d596],0x2f
  5192a4:	inc    ebx
  5192a5:	fidiv  WORD PTR fs:[esi-0x1b]
  5192a9:	push   cs
  5192aa:	xchg   edi,eax
  5192ab:	pop    esp
  5192ac:	call   0x32f65801
  5192b1:	(bad)  
  5192b2:	(bad)  
  5192b4:	das    
  5192b5:	dec    esp
  5192b6:	jns    0x5192c6
  5192b8:	je     0x51924a
  5192ba:	fldcw  WORD PTR [esp+edx*4+0x5c55dfa9]
  5192c1:	sbb    bl,BYTE PTR [ecx-0x68]
  5192c4:	sbb    eax,0x60f59c8
  5192c9:	mov    eax,0xde059f82
  5192ce:	aaa    
  5192cf:	jne    0x519341
  5192d1:	pop    esp
  5192d2:	jno    0x51930c
  5192d4:	shl    ah,1
  5192d6:	in     eax,dx
  5192d7:	and    DWORD PTR [edx+0x41e293fc],0x42696e45
  5192e1:	inc    edi
  5192e2:	test   al,0xb8
  5192e4:	inc    ebx
  5192e5:	push   0x15692ea0
  5192ea:	test   BYTE PTR [eax+ecx*4-0x725ca8e0],dl
  5192f1:	xchg   edx,eax
  5192f2:	aaa    
  5192f3:	bound  ecx,QWORD PTR [eax-0x47bb182f]
  5192f9:	mov    edi,0x31f0ee16
  5192fe:	sbb    eax,0x27b211a4
  519303:	data16 lahf 
  519305:	pop    ebx
  519306:	bound  eax,QWORD PTR ds:[ebp-0x17499783]
  51930d:	xchg   ecx,eax
  51930e:	scas   al,BYTE PTR es:[edi]
  51930f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519311:	aad    0xfe
  519313:	add    esi,DWORD PTR [edi+0x77]
  519316:	pop    ebp
  519317:	sbb    eax,0x356a975e
  51931c:	pop    edi
  51931d:	ret    0x8141
  519320:	(bad)  
  519321:	mov    eax,0x2867604e
  519326:	aas    
  519327:	dec    ecx
  519328:	sti    
  519329:	xlat   BYTE PTR ds:[ebx]
  51932a:	push   0xffffffb3
  51932c:	xor    dh,BYTE PTR [edi-0x19aa350f]
  519332:	int3   
  519333:	mov    eax,ds:0xb1439841
  519338:	aaa    
  519339:	in     al,0xd9
  51933b:	add    bh,cl
  51933d:	add    DWORD PTR [bx+si-0xf4e],esp
  519342:	ret    
  519343:	mov    DWORD PTR [ebp+0x2e],esi
  519346:	jg     0x5192f9
  519348:	ret    
  519349:	fiadd  DWORD PTR [ecx+0x7d]
  51934c:	out    0xea,al
  51934e:	mov    al,ds:0x1ad6dd18
  519353:	out    dx,eax
  519354:	int    0x88
  519356:	fsub   QWORD PTR [eax+0x7554a522]
  51935c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51935d:	ins    BYTE PTR es:[edi],dx
  51935e:	jmp    0x5193d2
  519360:	les    ebx,FWORD PTR [edx+0x31]
  519363:	push   ecx
  519364:	mov    ch,0x56
  519366:	cmp    al,BYTE PTR [edx]
  519368:	idiv   BYTE PTR [ebp+0x600c0ab3]
  51936e:	stos   BYTE PTR es:[edi],al
  51936f:	leave  
  519370:	mov    al,0x12
  519372:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519373:	aas    
  519374:	lods   al,BYTE PTR ds:[esi]
  519375:	sar    DWORD PTR [ebx],0xaa
  519378:	aaa    
  519379:	ret    
  51937a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51937b:	sub    dh,BYTE PTR [edx*8-0x6ce99e0c]
  519382:	outs   dx,BYTE PTR ds:[esi]
  519383:	rep lods al,BYTE PTR ds:[esi]
  519385:	adc    al,0xb7
  519387:	sahf   
  519388:	push   esi
  519389:	stos   DWORD PTR es:[edi],eax
  51938a:	push   ds
  51938b:	enter  0xfb9,0x0
  51938f:	mov    edi,0x2af1c5f5
  519394:	int3   
  519395:	fwait
  519396:	scas   eax,DWORD PTR es:[edi]
  519397:	inc    edi
  519398:	adc    DWORD PTR [ebx+0x1c7fdd61],ebp
  51939e:	xchg   esp,eax
  51939f:	push   ebp
  5193a0:	push   ebx
  5193a1:	inc    edi
  5193a2:	push   ds
  5193a3:	out    0x6f,eax
  5193a5:	mov    eax,ds:0xd1af525b
  5193aa:	mov    ds,WORD PTR ss:[edx+eax*8-0x7b8c526f]
  5193b2:	cmp    esp,esi
  5193b4:	or     DWORD PTR [ebx+0x4b],esp
  5193b7:	dec    ebp
  5193b8:	dec    esi
  5193b9:	fild   QWORD PTR [edx+0x606c7f46]
  5193bf:	add    bl,BYTE PTR [eax+esi*1+0x7c]
  5193c3:	inc    ebx
  5193c4:	mov    ebp,0x5ac0d345
  5193c9:	retf   
  5193ca:	mov    edi,0xdda38292
  5193cf:	cmp    cl,BYTE PTR [ecx+0x38]
  5193d2:	pusha  
  5193d3:	push   cs
  5193d4:	in     al,0x5f
  5193d6:	shr    DWORD PTR ds:0xe1690971,1
  5193dc:	iret   
  5193dd:	in     al,0xd7
  5193df:	push   cs
  5193e0:	ja     0x51936d
  5193e2:	xchg   ecx,eax
  5193e3:	xor    al,0xbf
  5193e5:	pop    edi
  5193e6:	mov    ebp,0x73abdbd2
  5193eb:	mov    cl,0x96
  5193ed:	and    DWORD PTR [edi+ecx*8-0x161d597c],esp
  5193f4:	ret    0x8250
  5193f7:	mov    ah,cl
  5193f9:	test   ecx,esp
  5193fb:	dec    ebx
  5193fc:	pop    es
  5193fd:	sub    al,0x34
  5193ff:	iret   
  519400:	das    
  519401:	dec    ebx
  519402:	(bad)
  519405:	repnz xchg edi,eax
  519407:	leave  
  519408:	lds    ebp,FWORD PTR [ebx+0x5d]
  51940b:	cwde   
  51940c:	leave  
  51940d:	iret   
  51940e:	cmp    DWORD PTR [esi-0x44],esp
  519411:	mov    esi,0xc3feeb99
  519416:	cmp    edx,ebp
  519418:	adc    edi,eax
  51941a:	pop    esp
  51941b:	retf   
  51941c:	cmp    DWORD PTR [edx],edx
  51941e:	or     BYTE PTR [ecx+0x76d59e5a],al
  519424:	(bad)  
  519425:	jbe    0x519465
  519427:	pop    es
  519428:	shl    ebp,1
  51942a:	sbb    edx,DWORD PTR [esi-0x59]
  51942d:	jp     0x51944b
  51942f:	int3   
  519430:	mov    ebp,0x6ec18ee8
  519435:	(bad)  [ecx-0x6d]
  519438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519439:	pop    es
  51943a:	sbb    ebx,esi
  51943c:	iret   
  51943d:	jmp    0xe34f:0xd579decd
  519444:	(bad)  
  519445:	adc    DWORD PTR [ebx+0x4186e3e2],ebx
  51944b:	aad    0x60
  51944d:	add    DWORD PTR [ebx+eiz*1+0x74cf972d],edi
  519454:	sahf   
  519455:	adc    al,0xdb
  519457:	adc    DWORD PTR [ecx+ebx*1],esi
  51945a:	iret   
  51945b:	pop    esi
  51945c:	clc    
  51945d:	into   
  51945e:	xchg   ebx,eax
  51945f:	test   al,0xb2
  519461:	mov    eax,eax
  519463:	pop    edi
  519464:	adc    eax,0xbb47c0da
  519469:	xor    eax,ecx
  51946b:	lahf   
  51946c:	in     eax,0x8f
  51946e:	es adc eax,0xb1765db9
  519474:	rcr    DWORD PTR [esi+0x24032d98],1
  51947a:	inc    eax
  51947b:	(bad)  
  51947c:	xchg   ebp,eax
  51947d:	cdq    
  51947e:	rcl    ah,cl
  519480:	test   eax,0x460446c1
  519485:	in     al,dx
  519486:	mov    ch,0xe
  519488:	(bad)  
  519489:	jnp    0x519473
  51948b:	jb     0x51947a
  51948d:	adc    eax,0xd8b4e1c7
  519492:	lock aaa 
  519494:	in     al,dx
  519495:	cmp    BYTE PTR [edi+0x855e7c6],dh
  51949b:	push   ebx
  51949c:	pop    edx
  51949d:	dec    esp
  51949e:	popf   
  51949f:	jmp    0x6427:0x25dd8802
  5194a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5194a7:	in     eax,dx
  5194a8:	push   ebp
  5194a9:	mov    ss,WORD PTR [ebx-0x78]
  5194ac:	enter  0xa79f,0x32
  5194b0:	and    al,0x41
  5194b2:	scas   al,BYTE PTR es:[edi]
  5194b3:	xchg   ecx,eax
  5194b4:	or     al,0x2c
  5194b6:	daa    
  5194b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5194b8:	shr    esp,0xee
  5194bb:	call   0x5df7b70f
  5194c0:	aas    
  5194c1:	fcmovne st,st(1)
  5194c3:	in     eax,dx
  5194c4:	ret    
  5194c5:	or     ebx,DWORD PTR [ecx]
  5194c7:	adc    al,0xbd
  5194c9:	jg     0x5194a8
  5194cb:	hlt    
  5194cc:	push   0x5c26ca88
  5194d1:	push   es
  5194d2:	sub    esi,DWORD PTR [esi]
  5194d4:	sbb    al,0x67
  5194d6:	push   ebx
  5194d7:	jl     0x519528
  5194d9:	test   al,0x6
  5194db:	pop    es
  5194dc:	(bad)  [ebx+0x32ac7d94]
  5194e2:	mov    ebx,DWORD PTR [ecx+0x2e500949]
  5194e8:	push   ebp
  5194e9:	cmp    eax,0xb40433d1
  5194ee:	pusha  
  5194ef:	outs   dx,DWORD PTR ds:[esi]
  5194f0:	pusha  
  5194f1:	pop    ebp
  5194f2:	add    BYTE PTR [ecx],dh
  5194f4:	push   es
  5194f5:	aad    0x2d
  5194f7:	pop    esi
  5194f8:	ret    
  5194f9:	and    eax,0x5eadf6ea
  5194fe:	jmp    0x519572
  519500:	push   0x33
  519502:	add    eax,0xedc51367
  519507:	dec    ebx
  519508:	add    edi,DWORD PTR [ebx-0x43c1c2e5]
  51950e:	push   ebx
  51950f:	pop    esp
  519510:	frstor [ecx-0x501e319d]
  519516:	xchg   esi,eax
  519517:	pop    ecx
  519518:	fcmovnbe st,st(6)
  51951a:	pushf  
  51951b:	sub    BYTE PTR [ebx-0x4d],bl
  51951e:	int    0x7d
  519520:	ja     0x5194c5
  519522:	hlt    
  519523:	pop    ebx
  519524:	ficom  WORD PTR [ecx+0x68]
  519527:	or     esi,ecx
  519529:	mov    al,0x6e
  51952b:	and    ch,BYTE PTR [eax+0x1e098bd4]
  519531:	xchg   esp,eax
  519532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519533:	daa    
  519534:	in     eax,0xc7
  519536:	fbstp  TBYTE PTR [ebp-0x6d690209]
  51953c:	cmc    
  51953d:	inc    esi
  51953e:	icebp  
  51953f:	out    0x57,al
  519541:	enter  0x8858,0xb4
  519545:	test   al,0x8
  519547:	fsubp  st(1),st
  519549:	in     eax,0x33
  51954b:	jmp    0x519560
  51954d:	loopne 0x519591
  51954f:	mov    bl,dh
  519551:	jo     0x5194ef
  519553:	lds    esi,FWORD PTR [esi-0x138782b5]
  519559:	into   
  51955a:	xchg   esi,eax
  51955b:	mov    esi,0x80ce05a6
  519560:	out    dx,eax
  519561:	js     0x5195df
  519563:	data16 hlt 
  519565:	popa   
  519566:	cli    
  519567:	jp     0x519512
  519569:	mov    ecx,0xcbff2303
  51956e:	scas   al,BYTE PTR es:[edi]
  51956f:	inc    eax
  519570:	fsub   st(7),st
  519572:	mov    ds:0xb8f9756c,al
  519577:	sbb    BYTE PTR [eax+0x720387c3],dh
  51957d:	stc    
  51957e:	jmp    0x519536
  519580:	add    edi,DWORD PTR fs:[ebx-0x1b32bad7]
  519587:	mov    ebx,0x6dc8b300
  51958c:	cmp    eax,0xf989a27c
  519591:	and    ebp,ebx
  519593:	(bad)  
  519594:	pop    ebp
  519595:	dec    ebx
  519596:	mov    eax,ds:0x44a2f3df
  51959b:	xor    ch,BYTE PTR [edx+ecx*1+0x4b]
  51959f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5195a0:	pop    ds
  5195a1:	cmp    DWORD PTR [ebx+0xdcfb7d5],edi
  5195a7:	call   0x4fe8:0xc7215ab0
  5195ae:	iret   
  5195af:	test   DWORD PTR es:[ecx+0x44],edi
  5195b3:	dec    esi
  5195b4:	add    esi,DWORD PTR [ebx+eax*4]
  5195b7:	in     al,dx
  5195b8:	mov    bh,0x3
  5195ba:	dec    ebx
  5195bb:	test   DWORD PTR [edx],edi
  5195bd:	mov    WORD PTR [ecx+0x2b426cf7],?
  5195c3:	aam    0xf0
  5195c5:	inc    eax
  5195c6:	scas   eax,DWORD PTR es:[edi]
  5195c7:	or     al,0x10
  5195c9:	push   ecx
  5195ca:	adc    al,0xb7
  5195cc:	mov    ds:0x12a9f2a9,al
  5195d1:	(bad)  
  5195d2:	sbb    edi,DWORD PTR [ecx]
  5195d4:	inc    edi
  5195d5:	or     al,0x32
  5195d7:	and    BYTE PTR [esi+0x593112b0],ch
  5195dd:	cs hlt 
  5195df:	sbb    al,0x62
  5195e1:	xchg   ecx,eax
  5195e2:	cmp    ecx,DWORD PTR [esi]
  5195e4:	jle    0x5195b6
  5195e6:	fisub  WORD PTR [edi]
  5195e8:	fnstenv [ecx-0x6020a220]
  5195ee:	mov    eax,ds:0x5be33dfc
  5195f3:	adc    DWORD PTR [eax+ebx*1-0x3cce250f],eax
  5195fa:	xlat   BYTE PTR ds:[ebx]
  5195fb:	call   0xf9d4:0x3865e757
  519602:	push   edx
  519603:	out    0xf2,al
  519605:	fcomp  QWORD PTR [edx-0x35f14a0a]
  51960b:	aaa    
  51960c:	pushf  
  51960d:	push   ecx
  51960e:	sub    eax,0x91ac5333
  519613:	and    eax,0x81e97adf
  519618:	es (bad) 
  51961a:	mov    ah,0x9a
  51961c:	or     BYTE PTR [ecx],ah
  51961e:	xchg   BYTE PTR [edx-0x2b],ah
  519621:	pushf  
  519622:	push   edi
  519623:	adc    esi,DWORD PTR [ebx-0x11]
  519626:	mov    al,ds:0x2ca0e3c0
  51962b:	inc    edx
  51962c:	mov    WORD PTR [eax],cs
  51962e:	sub    eax,0xbd454c27
  519633:	mov    esi,0x8c5e688a
  519638:	mov    esi,0xd2785cb3
  51963d:	push   edx
  51963e:	sbb    eax,0xa69b37c
  519643:	sub    DWORD PTR [ebp+0x48a9708b],edx
  519649:	stos   BYTE PTR es:[edi],al
  51964a:	es jge 0x519650
  51964d:	cwde   
  51964e:	shl    DWORD PTR [edx],1
  519650:	mov    dh,0x1b
  519652:	mov    WORD PTR [edx],ds
  519654:	lods   eax,DWORD PTR ds:[esi]
  519655:	mov    edi,0x82dc22ed
  51965a:	outs   dx,BYTE PTR ds:[esi]
  51965b:	out    dx,al
  51965c:	push   DWORD PTR [ebx+ebp*4]
  51965f:	retf   
  519660:	or     edi,esi
  519662:	rcr    DWORD PTR [eax-0x69],cl
  519665:	sub    DWORD PTR [eax-0x5e],0xffffffd1
  519669:	sbb    eax,DWORD PTR [ecx]
  51966b:	ss sbb eax,0x82890f6
  519671:	into   
  519672:	in     eax,0xf6
  519674:	or     BYTE PTR [eax+0x66437f6],al
  51967a:	out    dx,eax
  51967b:	cdq    
  51967c:	imul   edx,DWORD PTR [edi+0x33025d7d],0xffffffd7
  519683:	pop    edx
  519684:	out    0x46,al
  519686:	mov    ecx,?
  519688:	push   edx
  519689:	jbe    0x519652
  51968b:	int3   
  51968c:	pusha  
  51968d:	xchg   esi,eax
  51968e:	leave  
  51968f:	repnz leave 
  519691:	fstp   st(6)
  519693:	test   eax,0x2c17adcc
  519698:	imul   esp,esp,0x7e
  51969b:	sbb    esp,DWORD PTR [ebp-0x102eee4e]
  5196a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5196a2:	and    cl,BYTE PTR [esi+0x5400143a]
  5196a8:	pop    ecx
  5196a9:	jnp    0x519694
  5196ab:	push   es
  5196ac:	jmp    0x6b31:0x8b090fe
  5196b3:	in     al,0x11
  5196b5:	jb     0x519680
  5196b7:	mov    esi,0x280b46ee
  5196bc:	jl     0x51964c
  5196be:	inc    esi
  5196bf:	arpl   WORD PTR [ebx],sp
  5196c1:	sahf   
  5196c2:	daa    
  5196c3:	sbb    esp,DWORD PTR [ecx-0x7d5e239c]
  5196c9:	fidiv  WORD PTR [ebp+0x33]
  5196cc:	xor    al,0x1
  5196ce:	jg     0x519735
  5196d0:	adc    dl,cl
  5196d2:	outs   dx,BYTE PTR ds:[esi]
  5196d3:	sbb    eax,0xad29dc82
  5196d8:	add    DWORD PTR [edx-0x4e],esp
  5196db:	adc    DWORD PTR [ecx+0x7c],0x4f068ee7
  5196e2:	push   edx
  5196e3:	dec    edx
  5196e4:	into   
  5196e5:	shl    BYTE PTR [ecx-0x5b],1
  5196e8:	push   0xffffffb6
  5196ea:	push   0xffa3b604
  5196ef:	lock inc esp
  5196f1:	cdq    
  5196f2:	dec    ebp
  5196f3:	xchg   BYTE PTR [ecx-0x50],bh
  5196f6:	cmp    eax,0x6dd8db77
  5196fb:	das    
  5196fc:	mov    ds:0xe03c55b9,al
  519701:	cli    
  519702:	mov    edi,0xd2e9a201
  519707:	sbb    dh,BYTE PTR [esi-0x34f95596]
  51970d:	mov    dh,BYTE PTR [ebx+0x3e]
  519710:	jae    0x5196df
  519712:	fisubr DWORD PTR [ebx+0x61]
  519715:	dec    edi
  519716:	in     al,0xfc
  519718:	(bad)  
  519719:	cmp    ebx,edx
  51971b:	aam    0x4
  51971d:	pop    ebp
  51971e:	pop    ss
  51971f:	jnp    0x5196bc
  519721:	push   edi
  519722:	xchg   BYTE PTR [edi+edi*2-0x58],bl
  519726:	cmp    BYTE PTR [edi-0x7b47103a],0x1
  51972d:	out    dx,al
  51972e:	or     edx,ebx
  519730:	fild   QWORD PTR [edi+0x4eeecd0]
  519736:	jg     0x519761
  519738:	arpl   dx,cx
  51973a:	adc    esp,DWORD PTR [ebx+ebp*2+0x36]
  51973e:	out    0xa8,eax
  519740:	scas   eax,DWORD PTR es:[edi]
  519741:	pop    ebp
  519742:	loopne 0x51975a
  519744:	pop    ebp
  519745:	add    ch,BYTE PTR [esi]
  519747:	fisttp DWORD PTR [edx+edi*8-0x179fdc6e]
  51974e:	mov    DWORD PTR [edi+eiz*4],edi
  519751:	sahf   
  519752:	clc    
  519753:	hlt    
  519754:	inc    edx
  519755:	push   es
  519756:	dec    ecx
  519757:	mov    DWORD PTR [eax+0x86d1e00],ebp
  51975d:	sbb    BYTE PTR [esi],bl
  51975f:	sbb    BYTE PTR [ebp-0x40fb4eb7],dh
  519765:	test   eax,0x1de076a8
  51976a:	test   al,0x33
  51976c:	sbb    al,0xd1
  51976e:	call   0xd4f9:0xf80b71b4
  519775:	and    al,BYTE PTR [ebx-0x637d7c0e]
  51977b:	enter  0x7b64,0x83
  51977f:	pushf  
  519780:	or     DWORD PTR [eax-0x2e],edx
  519783:	call   0x60a:0x5eb7f42a
  51978a:	outs   dx,BYTE PTR ds:[esi]
  51978b:	push   ecx
  51978c:	rol    DWORD PTR [edi],cl
  51978e:	or     DWORD PTR [ecx+eiz*1],0x6da3a3c9
  519795:	daa    
  519796:	out    0x3d,eax
  519798:	cmp    BYTE PTR [ecx-0x58],dl
  51979b:	dec    edi
  51979c:	int3   
  51979d:	xchg   ebp,eax
  51979e:	test   BYTE PTR [esi],0xad
  5197a1:	jno    0x5197f1
  5197a3:	jecxz  0x519780
  5197a5:	fdivr  DWORD PTR [ebx]
  5197a7:	fisttp QWORD PTR [eax+0x46]
  5197aa:	pop    edi
  5197ab:	outs   dx,BYTE PTR ds:[esi]
  5197ac:	mov    ecx,0xd25995da
  5197b1:	je     0x5197df
  5197b3:	dec    ebx
  5197b4:	repz sbb BYTE PTR [eax],bh
  5197b7:	mov    ch,0xae
  5197b9:	popf   
  5197ba:	xchg   DWORD PTR [ebx+eiz*4+0x6a064242],ebx
  5197c1:	inc    ecx
  5197c2:	inc    edx
  5197c3:	push   eax
  5197c4:	mov    bh,0x29
  5197c6:	push   esp
  5197c7:	sub    edx,DWORD PTR [ecx]
  5197c9:	imul   ecx,eax,0x34ecb1c2
  5197cf:	scas   eax,DWORD PTR es:[edi]
  5197d0:	in     al,dx
  5197d1:	xlat   BYTE PTR ds:[ebx]
  5197d2:	in     al,dx
  5197d3:	out    dx,al
  5197d4:	mov    ebp,ebp
  5197d6:	mov    dh,0xa8
  5197d8:	and    al,0x65
  5197da:	test   BYTE PTR [eax-0x32633d1],dh
  5197e0:	xchg   ebp,eax
  5197e1:	iret   
  5197e2:	mov    edx,0x8de46c35
  5197e7:	loope  0x5197ae
  5197e9:	mov    edx,0xd98f7e3f
  5197ee:	adc    al,0xc9
  5197f0:	mov    edx,DWORD PTR [eax]
  5197f2:	jns    0x5197bc
  5197f4:	xor    al,0xab
  5197f6:	cmp    DWORD PTR [edx-0x4c],edx
  5197f9:	stc    
  5197fa:	ins    DWORD PTR es:[edi],dx
  5197fb:	shl    DWORD PTR [edx+0x7c],0x59
  5197ff:	pop    eax
  519800:	sbb    eax,0x8c759e1e
  519805:	cmp    bh,BYTE PTR ds:0x6685d307
  51980b:	sbb    edi,DWORD PTR [edi]
  51980d:	or     DWORD PTR [esi],ebp
  51980f:	pop    edi
  519810:	cdq    
  519811:	inc    eax
  519812:	outs   dx,DWORD PTR ds:[esi]
  519813:	pop    edx
  519814:	hlt    
  519815:	xchg   ebx,eax
  519816:	pop    ebx
  519817:	inc    ebx
  519818:	lods   al,BYTE PTR ds:[esi]
  519819:	ds nop
  51981b:	push   edi
  51981c:	in     al,0x62
  51981e:	cmp    BYTE PTR [ecx+0x35d9ccc6],al
  519824:	or     DWORD PTR [edx],edi
  519826:	push   esp
  519827:	or     DWORD PTR [eax+0x2a],0x7fad0212
  51982e:	pop    ss
  51982f:	fwait
  519830:	cmp    eax,0x300ae6ec
  519835:	pusha  
  519836:	(bad)  
  519837:	inc    ecx
  519838:	out    0x2f,eax
  51983a:	loopne 0x519874
  51983c:	xchg   ebp,eax
  51983d:	adc    eax,DWORD PTR [edi+0x619f401]
  519843:	pop    ss
  519844:	cmp    ebx,ebx
  519846:	stc    
  519847:	xchg   esi,ecx
  519849:	jnp    0x5197f9
  51984b:	sub    esp,DWORD PTR [ebx]
  51984d:	pop    esp
  51984e:	arpl   WORD PTR [edi-0x29],si
  519851:	push   edi
  519852:	fistp  DWORD PTR [ecx+0x284c0b69]
  519858:	and    eax,0xb75e4476
  51985d:	or     dh,BYTE PTR ds:0x95527f25
  519863:	cmp    DWORD PTR [ecx+0x4c],ecx
  519866:	popa   
  519867:	je     0x5198db
  519869:	call   0x793a:0x87e44f36
  519870:	xchg   edi,eax
  519871:	retf   
  519872:	sub    BYTE PTR [ebp-0x70],bh
  519875:	jne    0x519858
  519877:	adc    eax,DWORD PTR [edx+0x15695544]
  51987d:	pop    ecx
  51987e:	out    dx,eax
  51987f:	adc    al,0xeb
  519882:	mov    eax,ds:0x1c7aa4d3
  519887:	lock and eax,0xc780bc55
  51988d:	push   cs
  51988e:	or     BYTE PTR [ebx-0x32],0xfa
  519892:	cmc    
  519893:	adc    DWORD PTR [edi+0x89c7864],0xa5897b05
  51989d:	push   es
  51989e:	imul   ebx,ebx,0x50c9124e
  5198a4:	mov    ebp,0xd4c90adb
  5198a9:	or     eax,DWORD PTR [ebx+ebp*1-0x16ed5265]
  5198b0:	ss and eax,0x55dca830
  5198b6:	leave  
  5198b7:	das    
  5198b8:	mov    ah,0xcd
  5198ba:	sub    eax,DWORD PTR [ebx]
  5198bc:	mov    BYTE PTR [edi+ebp*8+0x35],dl
  5198c0:	daa    
  5198c1:	push   esi
  5198c2:	popa   
  5198c3:	mov    ebp,0x3a82bb20
  5198c8:	push   ds
  5198c9:	cs loop 0x519897
  5198cc:	xchg   esp,eax
  5198cd:	idiv   BYTE PTR [edx+ebp*1-0x7676fb4d]
  5198d4:	out    0x26,eax
  5198d6:	or     BYTE PTR [edx+eax*1+0x6bbca64f],dl
  5198dd:	xchg   esp,eax
  5198de:	adc    al,BYTE PTR [eax]
  5198e0:	(bad)  
  5198e1:	imul   ebx
  5198e3:	or     ecx,DWORD PTR [edx+0x42625825]
  5198e9:	mov    cl,0x2
  5198eb:	cmc    
  5198ec:	push   ss
  5198ed:	jns    0x519914
  5198ef:	xchg   esi,eax
  5198f0:	iret   
  5198f1:	xor    al,0x9b
  5198f3:	jge    0x5198bc
  5198f5:	fisub  WORD PTR [esi+0x7b]
  5198f8:	jnp    0x519973
  5198fa:	jb     0x519944
  5198fc:	imul   edi,DWORD PTR [ebx],0xe
  5198ff:	add    BYTE PTR [esi],0x5
  519902:	inc    ebp
  519903:	fsubr  st(3),st
  519905:	add    al,0x5c
  519907:	inc    edx
  519908:	inc    edx
  519909:	loopne 0x519933
  51990b:	sbb    ecx,edx
  51990d:	jg     0x5198c9
  51990f:	inc    ebp
  519910:	push   esi
  519911:	xor    ch,bl
  519913:	jbe    0x519928
  519915:	cmp    al,0xe2
  519917:	loop   0x519901
  519919:	call   0x877e:0xd890ebf0
  519920:	push   esp
  519921:	adc    ebp,eax
  519923:	(bad)  
  519924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519925:	das    
  519926:	sbb    dh,bl
  519928:	inc    esp
  519929:	aas    
  51992a:	inc    ebx
  51992b:	call   0xd3fd4fc2
  519930:	xor    ah,BYTE PTR [ebx]
  519932:	mov    al,0xb9
  519934:	aaa    
  519935:	inc    edi
  519936:	mov    dh,0xa9
  519938:	pop    esi
  519939:	int3   
  51993a:	pop    esi
  51993b:	pop    ebx
  51993c:	test   al,0x4d
  51993e:	cwde   
  51993f:	stos   DWORD PTR es:[edi],eax
  519940:	data16 shl BYTE PTR [edx+esi*1-0x2e99395a],0xe0
  519949:	sub    DWORD PTR [esi+0x8b5b272],0xb26cd5e5
  519953:	clc    
  519954:	cmc    
  519955:	hlt    
  519956:	int3   
  519957:	loope  0x519911
  519959:	mov    bh,BYTE PTR ds:0x6fe34829
  51995f:	add    al,BYTE PTR [edx]
  519961:	das    
  519962:	jne    0x51994e
  519964:	cmp    eax,DWORD PTR [ecx-0x65]
  519967:	gs (bad) 
  519969:	jp     0x5199a7
  51996b:	addr16 add al,0xc3
  51996e:	jg     0x519996
  519970:	jge    0x5199d8
  519972:	pop    ecx
  519973:	clc    
  519974:	dec    ebp
  519975:	call   0x434d:0xfc6db9fb
  51997c:	push   es
  51997d:	adc    cl,BYTE PTR [esi]
  51997f:	hlt    
  519980:	lods   al,BYTE PTR ds:[esi]
  519981:	xor    ebp,DWORD PTR [ecx]
  519983:	sub    eax,0xd15996e5
  519988:	(bad)  
  519989:	adc    eax,0x861da095
  51998e:	into   
  51998f:	push   es
  519990:	pop    edx
  519991:	sub    eax,0x73f78a3
  519996:	pop    ebp
  519997:	mov    esi,0xcbc02cbc
  51999c:	adc    al,bh
  51999e:	push   cs
  51999f:	cmp    DWORD PTR [ebp*8-0x422921bc],0x511ff1a6
  5199aa:	std    
  5199ab:	sbb    BYTE PTR [edx-0x35994cd7],0xc3
  5199b2:	push   eax
  5199b3:	into   
  5199b4:	stc    
  5199b5:	in     eax,0x1a
  5199b7:	mov    esi,0x62436cc2
  5199bc:	retf   0x1324
  5199bf:	fs jbe 0x5199b8
  5199c2:	scas   eax,DWORD PTR es:[edi]
  5199c3:	mov    DWORD PTR [edi+0x4d],eax
  5199c6:	jno    0x519a1b
  5199c8:	and    al,0x86
  5199ca:	sub    BYTE PTR [ebp+0x2611da5b],al
  5199d0:	pop    ebx
  5199d1:	cmp    eax,0xea0c2e4d
  5199d6:	push   esp
  5199d7:	mov    bh,0xb0
  5199d9:	jns    0x51996d
  5199db:	call   0xdebe9e80
  5199e0:	dec    esp
  5199e1:	adc    eax,0xf55814b
  5199e6:	or     DWORD PTR [ebx+0x0],0xfffffffa
  5199ea:	retf   0x665b
  5199ed:	mov    ecx,0x7f0cb9b1
  5199f2:	cmc    
  5199f3:	fcmovnb st,st(7)
  5199f5:	mov    ecx,0xcef800f8
  5199fa:	mov    ds:0x1d1017f7,eax
  5199ff:	leave  
  519a00:	repz xor ebx,ecx
  519a03:	das    
  519a04:	shl    esp,0x56
  519a07:	sub    al,0x82
  519a09:	inc    eax
  519a0a:	sub    BYTE PTR [edx+0x4e],bl
  519a0d:	mov    bl,0x59
  519a0f:	sub    al,0xeb
  519a11:	test   BYTE PTR [ebx-0x2e199800],al
  519a17:	pop    ds
  519a18:	(bad)  
  519a19:	lock popf 
  519a1b:	xchg   esp,eax
  519a1c:	cmp    al,0x3e
  519a1e:	inc    eax
  519a1f:	inc    eax
  519a20:	xchg   cl,dl
  519a22:	pop    edi
  519a23:	mov    eax,ds:0xd05060d3
  519a28:	test   esp,esi
  519a2a:	arpl   WORD PTR [ecx+0x2adcc6f8],ax
  519a30:	xchg   esp,eax
  519a31:	sbb    eax,0x95e948a2
  519a36:	gs cmp al,0x8e
  519a39:	push   ecx
  519a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519a3b:	jl     0x519a7b
  519a3d:	sub    al,BYTE PTR [esi+0x4e]
  519a40:	shl    dl,cl
  519a42:	addr16 jle 0x5199e2
  519a45:	enter  0xe63d,0x87
  519a49:	pushf  
  519a4a:	(bad)  
  519a4b:	in     al,dx
  519a4c:	add    cl,BYTE PTR [ebx]
  519a4e:	enter  0x29d0,0xed
  519a52:	and    al,0x7
  519a54:	sti    
  519a55:	dec    edi
  519a56:	neg    DWORD PTR [eax+0x7e]
  519a59:	aaa    
  519a5a:	repnz repnz popfw 
  519a5e:	test   BYTE PTR [esi],bl
  519a60:	xor    bl,dh
  519a62:	mov    cl,0x2f
  519a64:	test   eax,0x826c08d2
  519a69:	das    
  519a6a:	js     0x5199f2
  519a6c:	mov    bh,0x79
  519a6e:	xor    ch,BYTE PTR [ebx+0x6f]
  519a71:	mov    ebx,0xc294c383
  519a76:	jno    0x519a65
  519a78:	adc    eax,0xf94c43af
  519a7d:	test   DWORD PTR [ebp+0x44],edx
  519a80:	aaa    
  519a81:	mov    ebp,0x8ca6ee2a
  519a86:	mov    ebx,0xa7df5983
  519a8b:	hlt    
  519a8c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519a8e:	les    eax,FWORD PTR [ecx-0x110d975e]
  519a94:	adc    DWORD PTR [eax+eax*4+0x49e698df],0x9ad7b0b1
  519a9f:	inc    ebx
  519aa0:	stos   BYTE PTR es:[edi],al
  519aa1:	inc    edi
  519aa2:	cmp    DWORD PTR [ebp+0x60],edx
  519aa5:	retf   0x9556
  519aa8:	sar    DWORD PTR [ecx-0x34434405],1
  519aae:	leave  
  519aaf:	jg     0x519af8
  519ab1:	or     DWORD PTR [edx+0x72961767],0xfffffffc
  519ab8:	and    BYTE PTR ds:0x2190527d,al
  519abe:	pop    ebx
  519abf:	pop    ds
  519ac0:	rcl    BYTE PTR [eax+0x66],cl
  519ac3:	(bad)  
  519ac4:	cmc    
  519ac5:	rol    esp,1
  519ac7:	fistp  QWORD PTR [ecx+esi*1+0x72c6215a]
  519ace:	loop   0x519aff
  519ad0:	mov    al,ds:0x3265718b
  519ad5:	arpl   WORD PTR [eax],ax
  519ad7:	fimul  DWORD PTR [edx-0x50]
  519ada:	jbe    0x519a9b
  519adc:	xchg   ebp,eax
  519add:	or     BYTE PTR [ecx],ah
  519adf:	aaa    
  519ae0:	les    esp,FWORD PTR [ecx*2-0x3c684860]
  519ae7:	mov    ah,0x6d
  519ae9:	mov    edx,0x454f3619
  519aee:	ret    0x1607
  519af1:	fisttp WORD PTR [edx+eiz*8+0x4364c3d1]
  519af8:	mov    ds:0x4076955,eax
  519afd:	mov    bl,0x19
  519aff:	int3   
  519b00:	xchg   ecx,eax
  519b01:	adc    bl,BYTE PTR [edx+ecx*8+0x5]
  519b05:	push   esp
  519b06:	out    dx,eax
  519b07:	mov    DWORD PTR [ecx-0x37],esi
  519b0a:	gs cld 
  519b0c:	sbb    DWORD PTR [ecx+0x44],0x49
  519b10:	pop    eax
  519b11:	or     al,0x1d
  519b13:	idiv   BYTE PTR [ebx]
  519b15:	pop    ds
  519b16:	daa    
  519b17:	or     al,0x8c
  519b19:	loope  0x519aff
  519b1b:	push   edx
  519b1c:	add    BYTE PTR [edx+0x22],dl
  519b1f:	leave  
  519b20:	jne    0x519b87
  519b22:	std    
  519b23:	div    ebp
  519b25:	stos   BYTE PTR es:[edi],al
  519b26:	push   edx
  519b27:	ficom  DWORD PTR [eax-0x77]
  519b2a:	cmp    ah,BYTE PTR [ecx+0x45cab8d6]
  519b30:	push   ebp
  519b31:	test   BYTE PTR cs:[esi-0x4c],bh
  519b35:	pop    eax
  519b36:	shr    BYTE PTR [eax],0x99
  519b39:	arpl   si,di
  519b3b:	sub    esi,DWORD PTR [edi-0x34]
  519b3e:	test   bh,al
  519b40:	iret   
  519b41:	pop    ss
  519b42:	pop    eax
  519b43:	pusha  
  519b44:	dec    ecx
  519b45:	data16 cld 
  519b47:	rol    DWORD PTR [eax],0x9c
  519b4a:	dec    edx
  519b4b:	xor    al,dl
  519b4d:	mov    dl,0x9b
  519b4f:	push   ebx
  519b50:	pop    ss
  519b51:	dec    eax
  519b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519b53:	pop    ebx
  519b54:	or     BYTE PTR [edi],bh
  519b56:	leave  
  519b57:	add    ah,al
  519b59:	cmc    
  519b5a:	dec    edi
  519b5b:	jns    0x519bd6
  519b5d:	test   BYTE PTR [eax+0x66],0x28
  519b61:	sti    
  519b62:	int    0xcc
  519b64:	leave  
  519b65:	outs   dx,DWORD PTR ds:[esi]
  519b66:	mov    WORD PTR ds:0x6838bd6c,ds
  519b6c:	aaa    
  519b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519b6e:	add    al,0x2d
  519b70:	fs clc 
  519b72:	lods   al,BYTE PTR ds:[esi]
  519b73:	mov    BYTE PTR [eax],cl
  519b75:	add    eax,0x483995d6
  519b7a:	xor    eax,0x32f00a1b
  519b7f:	leave  
  519b80:	add    dh,dh
  519b82:	cmp    esp,DWORD PTR [esi]
  519b84:	adc    al,0x89
  519b86:	fs call 0xc0984cf2
  519b8c:	shl    ebx,0xcc
  519b8f:	adc    BYTE PTR [edi-0x7d],cl
  519b92:	jnp    0x519c05
  519b94:	shl    cl,cl
  519b96:	icebp  
  519b97:	or     ch,BYTE PTR [ebp-0x287f20ad]
  519b9d:	hlt    
  519b9e:	rcl    BYTE PTR [eax],0x17
  519ba1:	in     eax,dx
  519ba2:	fnsave ds:0x87a58480
  519ba8:	push   DWORD PTR [edi+0x20]
  519bab:	jmp    0x519b8a
  519bad:	das    
  519bae:	and    al,ah
  519bb0:	sar    al,0xa2
  519bb3:	or     al,0x17
  519bb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519bb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  519bb7:	push   edx
  519bb8:	test   DWORD PTR [edx],ecx
  519bba:	adc    ecx,DWORD PTR [edi]
  519bbc:	jecxz  0x519b70
  519bbe:	daa    
  519bbf:	iret   
  519bc0:	shr    DWORD PTR [esi],1
  519bc2:	add    esp,DWORD PTR [ebp-0x66935518]
  519bc8:	nop
  519bc9:	sbb    BYTE PTR [ebx],0x3c
  519bcc:	mov    ds:0x98375171,eax
  519bd1:	push   cs
  519bd2:	inc    eax
  519bd3:	arpl   ax,dx
  519bd5:	push   esi
  519bd6:	call   0x6d98:0x3456fdab
  519bdd:	in     al,0xcb
  519bdf:	clc    
  519be0:	dec    edx
  519be1:	or     DWORD PTR [ebp+0x36],esi
  519be4:	aad    0x7
  519be6:	or     al,dl
  519be8:	in     al,0x50
  519bea:	or     edi,eax
  519bec:	pop    ebx
  519bed:	pop    esi
  519bee:	loope  0x519bc2
  519bf0:	lock fstp DWORD PTR [ecx]
  519bf4:	dec    edx
  519bf5:	cdq    
  519bf6:	adc    edi,edx
  519bf8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519bf9:	test   eax,0x257b7a9d
  519bfe:	pusha  
  519bff:	or     ecx,esi
  519c01:	cmp    ch,BYTE PTR [edx+0x4f]
  519c04:	loop   0x519b98
  519c06:	or     esp,DWORD PTR [ecx+0x5e]
  519c09:	jbe    0x519bd4
  519c0b:	je     0x519c84
  519c0d:	inc    esi
  519c0e:	test   BYTE PTR [ebp+0x5d],dh
  519c11:	fmul   DWORD PTR [edx+edi*8-0x193faddd]
  519c18:	es and al,0x2c
  519c1b:	and    cl,dl
  519c1d:	and    al,0x2f
  519c1f:	mov    eax,edx
  519c21:	js     0x519bb3
  519c23:	xlat   BYTE PTR ds:[ebx]
  519c24:	pop    ecx
  519c25:	mov    al,0xb0
  519c27:	xchg   DWORD PTR [ebx*8+0x45c78004],ebp
  519c2e:	dec    edx
  519c2f:	xchg   DWORD PTR [edi+0x76c6f5a3],edx
  519c35:	pop    ss
  519c36:	loopne 0x519c7f
  519c38:	cmp    eax,0xb8c29beb
  519c3d:	jmp    0x1726:0xddfbdb4d
  519c44:	out    0xcc,al
  519c46:	inc    esi
  519c47:	iret   
  519c48:	cs dec ebx
  519c4a:	ins    BYTE PTR es:[edi],dx
  519c4b:	cli    
  519c4c:	and    edx,DWORD PTR [ecx+0x5ebeb91e]
  519c52:	jb     0x519c4e
  519c54:	xchg   edx,eax
  519c55:	mov    bh,0x70
  519c57:	sbb    DWORD PTR [eax-0x454ecc8c],edi
  519c5d:	lock js 0x519c28
  519c60:	xchg   esp,eax
  519c61:	adc    al,0xee
  519c63:	call   0x7a6d2056
  519c68:	out    dx,eax
  519c69:	daa    
  519c6a:	add    BYTE PTR [eax+eiz*1-0x677dd7e4],al
  519c71:	aas    
  519c72:	xchg   esp,eax
  519c73:	pop    ebx
  519c74:	push   0x3c
  519c76:	mov    esi,0xf9db3c7c
  519c7b:	or     eax,0x36d206e
  519c80:	clc    
  519c81:	cdq    
  519c82:	addr16 mov al,ds:0x6239
  519c87:	mov    edi,0x998632b7
  519c8c:	adc    bl,dh
  519c8e:	test   BYTE PTR [edx-0x2a200ecd],ah
  519c94:	pop    ecx
  519c95:	mov    ch,0x7c
  519c97:	push   ecx
  519c98:	out    0x56,al
  519c9a:	pop    es
  519c9b:	inc    ebp
  519c9c:	and    dl,BYTE PTR [edi-0x51]
  519c9f:	repnz ins DWORD PTR es:[edi],dx
  519ca1:	cli    
  519ca2:	addr16 mov ebx,0xf957e400
  519ca8:	das    
  519ca9:	pop    eax
  519caa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  519cab:	xor    DWORD PTR [ebx+0x7c977769],esi
  519cb1:	rcr    BYTE PTR [ebp-0x73fc198c],0x93
  519cb8:	int3   
  519cb9:	push   ss
  519cba:	inc    eax
  519cbb:	xchg   DWORD PTR [eax+0x66],edi
  519cbe:	pop    esi
  519cbf:	shl    DWORD PTR [eax+0x2bd1b0aa],0xb0
  519cc6:	stos   BYTE PTR es:[edi],al
  519cc7:	fsub   st,st(6)
  519cc9:	or     al,BYTE PTR [ebx-0x79]
  519ccc:	test   BYTE PTR [ecx+0x751193fd],dl
  519cd2:	sbb    esi,edx
  519cd4:	push   ss
  519cd5:	call   FWORD PTR [edx+ecx*8]
  519cd8:	push   eax
  519cd9:	retf   0x19e
  519cdc:	cs dec esi
  519cde:	bound  eax,QWORD PTR [ecx-0x20adc1cc]
  519ce4:	or     eax,0xc6a54333
  519ce9:	push   esp
  519cea:	add    al,ch
  519cec:	(bad)  
  519cee:	jmp    edx
  519cf0:	mov    ecx,0xf3fafe9c
  519cf5:	es dec ebx
  519cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519cf8:	jae    0x519d0f
  519cfa:	cmp    DWORD PTR [ecx],esp
  519cfc:	int    0xb3
  519cfe:	jae    0x519cc7
  519d00:	jbe    0x519d3a
  519d02:	call   0xc153:0x2543b1f7
  519d09:	les    edx,FWORD PTR [ebp+edx*2+0x75]
  519d0d:	jle    0x519ce4
  519d0f:	add    eax,0x82f01107
  519d14:	mov    cl,0x5
  519d16:	in     al,dx
  519d17:	mov    ah,0x76
  519d19:	or     ecx,DWORD PTR [edi+0x41925184]
  519d1f:	mov    bh,0xec
  519d21:	jnp    0x519cab
  519d23:	stc    
  519d24:	call   0x97f2:0xc881168f
  519d2b:	xchg   ebx,eax
  519d2c:	mov    ecx,0x182d53
  519d31:	or     ah,BYTE PTR [eax-0x774e47db]
  519d37:	into   
  519d38:	or     DWORD PTR [esi+ebp*4+0x3e5294fe],edx
  519d3f:	cmp    DWORD PTR [esi+ebp*4],esi
  519d42:	cmc    
  519d43:	ss inc edx
  519d45:	cmp    esp,DWORD PTR [eax]
  519d47:	mov    esi,0xb5c1ddce
  519d4c:	(bad)  
  519d4e:	push   ebp
  519d4f:	sbb    DWORD PTR [eax+0x434d0008],0xffffff91
  519d56:	in     al,0x3f
  519d58:	(bad)
  519d5c:	ds push es
  519d5e:	mov    gs,WORD PTR [ebp+ecx*2-0x66c1c8e2]
  519d65:	mov    dl,0x83
  519d67:	pop    ds
  519d68:	adc    esi,edx
  519d6a:	mov    esp,0x8be54002
  519d6f:	nop
  519d70:	mov    ah,0xeb
  519d72:	jb     0x519d9b
  519d74:	push   ebx
  519d75:	and    DWORD PTR [esp+edx*1+0x7eeb803a],0x3594b6bc
  519d80:	mov    dl,0x3b
  519d82:	mov    cl,0x9c
  519d84:	xchg   ebp,eax
  519d85:	sub    dl,cl
  519d87:	(bad)  
  519d88:	adc    eax,0xb3c8aa3c
  519d8d:	or     ebx,esi
  519d8f:	cwde   
  519d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519d91:	adc    eax,DWORD PTR [ebx-0x236caf9d]
  519d97:	cmp    eax,0x50689741
  519d9c:	sub    eax,0xe78846df
  519da1:	and    cl,BYTE PTR [eax+0x6d11a922]
  519da7:	push   cs
  519da8:	xor    dl,BYTE PTR [ebx]
  519daa:	vpaddsb xmm0,xmm4,XMMWORD PTR [edx-0x5c]
  519daf:	test   BYTE PTR [ecx],ah
  519db1:	retf   
  519db2:	inc    ecx
  519db3:	fist   WORD PTR [esi+0x4c7c46b6]
  519db9:	adc    edx,DWORD PTR [esp+edx*8+0x4554afb8]
  519dc0:	or     esp,ebp
  519dc2:	sub    ah,BYTE PTR [edi+0x1843db92]
  519dc8:	sub    dl,BYTE PTR [edi+0x531e2da1]
  519dce:	mov    ch,BYTE PTR [ebp+0x23]
  519dd1:	aas    
  519dd2:	jno    0x519d95
  519dd4:	push   esp
  519dd5:	ret    
  519dd6:	enter  0xc066,0x71
  519dda:	gs aas 
  519ddc:	xchg   esi,eax
  519ddd:	sbb    DWORD PTR [edi+0x3a],edi
  519de0:	jmp    0x519e4a
  519de2:	fucomp st(5)
  519de4:	mov    ecx,0xbd21cf63
  519de9:	mov    edx,0x7726e400
  519dee:	sbb    al,0xc0
  519df0:	and    al,0x3d
  519df2:	lock xchg ah,ch
  519df5:	call   0x7fec:0xd0cb67
  519dfc:	push   esi
  519dfd:	mov    ds:0xaeb3ee07,eax
  519e02:	sbb    DWORD PTR [eax],esi
  519e04:	xchg   edi,eax
  519e05:	popf   
  519e06:	push   esp
  519e07:	mov    WORD PTR [ebx+0x4f52a188],gs
  519e0d:	pop    ss
  519e0e:	stos   BYTE PTR es:[edi],al
  519e0f:	lock sbb al,0x41
  519e12:	jns    0x519e4e
  519e14:	retf   0xdbd8
  519e17:	addr16 lahf 
  519e19:	pop    esp
  519e1a:	xor    dh,al
  519e1c:	retf   
  519e1d:	mov    cl,0x42
  519e1f:	aaa    
  519e20:	loop   0x519def
  519e22:	add    eax,0xdd424187
  519e27:	ror    edx,0xe
  519e2a:	(bad)  
  519e2b:	cmp    al,0xf1
  519e2d:	mov    WORD PTR [esi+eiz*4+0x48],?
  519e31:	push   ecx
  519e32:	call   0x339c:0xab177862
  519e39:	jns    0x519e0f
  519e3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519e3c:	loopne 0x519e49
  519e3e:	dec    esp
  519e3f:	pop    esp
  519e40:	xchg   BYTE PTR [esi+0x6bf76b84],dl
  519e46:	out    dx,eax
  519e47:	bound  ebp,QWORD PTR [eax]
  519e49:	repnz arpl WORD PTR [ecx+0x6d8836e8],sp
  519e50:	mov    edx,0x4d2615a9
  519e55:	add    al,0x52
  519e57:	dec    edx
  519e58:	outs   dx,DWORD PTR ds:[esi]
  519e59:	ins    BYTE PTR es:[edi],dx
  519e5a:	mov    esp,0xd80d7a4f
  519e5f:	mov    ds,WORD PTR [ecx+0x71e79e58]
  519e65:	icebp  
  519e66:	dec    edx
  519e67:	xor    BYTE PTR [eax-0x46f0084f],0x62
  519e6e:	rcr    dl,1
  519e70:	hlt    
  519e71:	popa   
  519e72:	add    BYTE PTR [ebx+0x2e],0x5f
  519e76:	mov    esp,0xa8e8185
  519e7b:	cld    
  519e7c:	xchg   ebx,eax
  519e7d:	adc    esi,DWORD PTR [edx+0x70]
  519e80:	jne    0x519e8d
  519e82:	or     edx,ebx
  519e84:	aas    
  519e85:	adc    al,0x62
  519e87:	in     eax,dx
  519e88:	mov    esi,0xbe68970f
  519e8d:	dec    ecx
  519e8e:	mov    al,0x8a
  519e90:	xlat   BYTE PTR ds:[ebx]
  519e91:	stos   DWORD PTR es:[edi],eax
  519e92:	mov    ebx,0x234415fe
  519e97:	leave  
  519e98:	xor    ebp,DWORD PTR [esi+0x51]
  519e9b:	ins    DWORD PTR es:[edi],dx
  519e9c:	ins    BYTE PTR es:[edi],dx
  519e9d:	imul   ebp,edi,0x6c1c7acd
  519ea3:	inc    ecx
  519ea4:	xchg   edx,eax
  519ea5:	inc    ecx
  519ea6:	shl    DWORD PTR [ebx-0x3e],1
  519ea9:	adc    DWORD PTR [ebp+eax*8-0x3363e563],ebp
  519eb0:	or     ebp,DWORD PTR [ecx+0x70]
  519eb3:	and    DWORD PTR [ebp+0x256c8091],ebx
  519eb9:	mov    al,0x77
  519ebb:	pop    esp
  519ebc:	push   edx
  519ebd:	mov    ecx,ebx
  519ebf:	int    0x1c
  519ec1:	fwait
  519ec2:	dec    ebx
  519ec3:	dec    esp
  519ec4:	nop
  519ec5:	in     eax,0xf0
  519ec7:	lods   al,BYTE PTR ds:[esi]
  519ec8:	sbb    eax,0xd66e37f7
  519ecd:	push   0x7f385752
  519ed2:	fcom   QWORD PTR [edi+0x6fa54a88]
  519ed8:	lds    edx,FWORD PTR [edx]
  519eda:	mov    bh,0x25
  519edc:	pop    edi
  519edd:	xor    bh,BYTE PTR [ecx+0x4d8ff511]
  519ee3:	leave  
  519ee4:	js     0x519f43
  519ee6:	shl    DWORD PTR [eax],0x11
  519ee9:	xor    ebx,DWORD PTR [esi-0x3980bbc8]
  519eef:	outs   dx,DWORD PTR ds:[esi]
  519ef0:	cmp    bh,al
  519ef2:	mov    BYTE PTR [eax-0x21],bl
  519ef5:	adc    eax,0x76b518cb
  519efa:	das    
  519efb:	std    
  519efc:	dec    ecx
  519efd:	int3   
  519efe:	pop    esi
  519eff:	bound  esi,QWORD PTR [edx-0x1ea7cc29]
  519f05:	mov    ds:0x1758dd48,eax
  519f0a:	fidivr DWORD PTR [ecx-0x47dd2e2e]
  519f10:	pop    ebp
  519f11:	les    eax,FWORD PTR [edi]
  519f13:	shl    DWORD PTR [esi],cl
  519f15:	and    DWORD PTR [edx-0x690b0073],ebp
  519f1b:	push   ss
  519f1c:	loopne 0x519f55
  519f1e:	out    0xe0,al
  519f20:	sub    DWORD PTR [eax],esi
  519f22:	test   al,0xe
  519f24:	aas    
  519f25:	cmp    esp,DWORD PTR [esi]
  519f27:	loope  0x519f8d
  519f29:	neg    dl
  519f2b:	into   
  519f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  519f2d:	jbe    0x519f7b
  519f2f:	mov    ch,bh
  519f31:	pop    esi
  519f32:	and    ebx,DWORD PTR ds:0xa1c6df2d
  519f38:	mov    al,0x0
  519f3a:	dec    ecx
  519f3b:	(bad)  
  519f3d:	jae    0x519f6e
  519f3f:	rcl    bl,cl
  519f41:	fidivr WORD PTR [ebx]
  519f43:	aas    
  519f44:	jecxz  0x519f86
  519f46:	xlat   BYTE PTR ds:[ebx]
  519f47:	xchg   BYTE PTR [esi-0x74ef91a7],ch
  519f4d:	xchg   ecx,eax
  519f4e:	in     al,dx
  519f4f:	loope  0x519fc9
  519f51:	xlat   BYTE PTR ds:[ebx]
  519f52:	jb     0x519fa7
  519f54:	enter  0xef8f,0x5d
  519f58:	adc    eax,0x48436541
  519f5d:	push   cs
  519f5e:	or     eax,0x674255b4
  519f63:	in     eax,0xfe
  519f65:	imul   edx,DWORD PTR [edi-0x1a0bce3e],0xffffffca
  519f6c:	cdq    
  519f6d:	jle    0x519fdb
  519f6f:	and    dh,BYTE PTR [eax]
  519f71:	sub    al,0x9c
  519f73:	mov    DWORD PTR [edx],eax
  519f75:	jne    0x519f8c
  519f77:	imul   edi,DWORD PTR [edx],0x34824d7a
  519f7d:	lods   eax,DWORD PTR ds:[esi]
  519f7e:	out    0xf0,al
  519f80:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  519f82:	ds adc eax,0xd7f0b84a
  519f88:	xor    DWORD PTR [ebx-0x7c795011],0x3e6b5609
  519f92:	and    BYTE PTR [esi-0x19366c12],bl
  519f98:	mov    ah,0x75
  519f9a:	lea    edi,[edi+ebx*8]
  519f9d:	push   ecx
  519f9e:	dec    edi
  519f9f:	call   0xd54b:0x9421ec99
  519fa6:	test   ebx,edi
  519fa8:	or     BYTE PTR [edx],bh
  519faa:	xchg   ebp,eax
  519fab:	xchg   edx,eax
  519fac:	cmp    al,0x99
  519fae:	mov    ds:0xf2ea2d59,eax
  519fb3:	ins    DWORD PTR es:[edi],dx
  519fb4:	mov    ebp,0x99b900a1
  519fb9:	mov    ch,0x1
  519fbb:	xchg   edx,eax
  519fbc:	cmc    
  519fbd:	imul   edx,DWORD PTR [ebx+edi*1-0x2b],0x64
  519fc2:	imul   esp,DWORD PTR [ecx+0x39],0xffffffd8
  519fc6:	sar    BYTE PTR [edx+0x3d9094ee],cl
  519fcc:	dec    ebp
  519fcd:	add    DWORD PTR [edx+0x22],esp
  519fd0:	div    BYTE PTR [ebp+0x12]
  519fd3:	inc    ebp
  519fd4:	addr16 push 0x5fb468e
  519fda:	inc    eax
  519fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  519fdc:	xor    al,0x46
  519fde:	mov    ds:0x38754fcb,eax
  519fe3:	inc    edx
  519fe4:	dec    esp
  519fe5:	bound  edi,QWORD PTR [edi+0x53]
  519fe8:	inc    ecx
  519fe9:	(bad)  [ebx]
  519feb:	jns    0x519f89
  519fed:	lock xor DWORD PTR [edi+0x5e3cb6bb],0x10
  519ff5:	call   0x84c:0x96aa4ff2
  519ffc:	jg     0x519fd2
  519ffe:	ins    DWORD PTR es:[edi],dx
  519fff:	push   0x62
  51a001:	std    
  51a002:	jne    0x519fdb
  51a004:	mov    bl,0x73
  51a006:	mov    DWORD PTR [ebp-0x68e36ce],eax
  51a00c:	imul   ebp,ebp,0x3ea917bc
  51a012:	jmp    0x519fb6
  51a014:	push   es
  51a015:	dec    esp
  51a016:	adc    al,0xa9
  51a018:	aam    0x76
  51a01a:	jo     0x51a066
  51a01c:	test   DWORD PTR [ebx-0x62],ebx
  51a01f:	sub    ecx,DWORD PTR [ebx-0x3441b42d]
  51a025:	in     eax,0xd5
  51a027:	scas   eax,DWORD PTR es:[edi]
  51a028:	sbb    DWORD PTR [edx+0x75],esi
  51a02b:	loopne 0x51a0a6
  51a02d:	push   ebp
  51a02e:	jecxz  0x51a034
  51a030:	jmp    0x255e:0x450cf266
  51a037:	jl     0x51a067
  51a039:	or     ebx,DWORD PTR [esi+0x23]
  51a03c:	addr16 push eax
  51a03e:	jge    0x51a083
  51a040:	ret    
  51a041:	xchg   esi,eax
  51a042:	and    ch,BYTE PTR [eax+ebp*4-0x40399a5c]
  51a049:	and    ah,ah
  51a04b:	xor    eax,0xc2f03ce
  51a050:	and    DWORD PTR [ebp+0xa],0xffffffa9
  51a054:	mov    edi,DWORD PTR [edi]
  51a056:	add    eax,0x6e95430a
  51a05b:	xor    DWORD PTR ds:0x1fe98c90,ebx
  51a061:	ss gs pop edi
  51a064:	or     bh,BYTE PTR [ebx-0x76]
  51a067:	in     al,dx
  51a068:	popf   
  51a069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a06a:	dec    ebp
  51a06b:	fcom   DWORD PTR [edi+0x3f2116b8]
  51a071:	sub    bl,BYTE PTR [edi+0x9]
  51a074:	add    al,ch
  51a076:	jno    0x51a02d
  51a078:	sub    BYTE PTR [ebx+0x23],bh
  51a07b:	fdivr  QWORD PTR [edx-0x62]
  51a07e:	cld    
  51a07f:	pushf  
  51a080:	outs   dx,DWORD PTR ds:[esi]
  51a081:	mov    al,ds:0x696188ae
  51a086:	sub    eax,DWORD PTR [ecx]
  51a088:	rcl    edx,cl
  51a08a:	push   ds
  51a08b:	inc    eax
  51a08c:	xchg   edi,eax
  51a08d:	xor    al,0x41
  51a08f:	push   ds
  51a090:	call   0x347f:0x1f5c095
  51a097:	lock mov BYTE PTR ds:0x8bc8d33f,dh
  51a09e:	dec    edx
  51a09f:	into   
  51a0a0:	xchg   edx,eax
  51a0a1:	sbb    DWORD PTR [ebp+edi*1-0x2f049841],esi
  51a0a8:	rcl    DWORD PTR [ecx+edx*1-0x12],1
  51a0ac:	test   ebp,edx
  51a0ae:	nop
  51a0af:	cmp    ax,0x57e2
  51a0b3:	test   ecx,edi
  51a0b5:	sbb    BYTE PTR [esi+0x5105b66b],ch
  51a0bb:	push   0xb40455b2
  51a0c0:	fistp  WORD PTR [ebx+eiz*4+0x2d]
  51a0c4:	xchg   ecx,eax
  51a0c5:	fwait
  51a0c6:	or     bh,dh
  51a0c8:	outs   dx,DWORD PTR ds:[esi]
  51a0c9:	mov    al,ds:0xce49dd53
  51a0ce:	push   ss
  51a0cf:	in     eax,dx
  51a0d0:	repnz clc 
  51a0d2:	out    0x81,al
  51a0d4:	retf   
  51a0d5:	in     eax,0x3b
  51a0d7:	leave  
  51a0d8:	pop    esp
  51a0d9:	xchg   esi,eax
  51a0da:	or     bh,BYTE PTR [edx-0x64608219]
  51a0e0:	mov    BYTE PTR [ecx],0x69
  51a0e3:	and    DWORD PTR [ebx+edx*2-0x20f2300a],0xfffffff9
  51a0eb:	jecxz  0x51a0d6
  51a0ed:	jp     0x51a070
  51a0ef:	xchg   esp,eax
  51a0f0:	xor    ch,BYTE PTR [edi]
  51a0f2:	pop    ebx
  51a0f3:	fcmovu st,st(0)
  51a0f5:	popa   
  51a0f6:	in     eax,dx
  51a0f7:	mov    ds:0x24ef5d3,al
  51a0fc:	sbb    al,0xf9
  51a0fe:	pop    edi
  51a0ff:	mov    esi,0xd86f194c
  51a104:	cwde   
  51a105:	dec    edi
  51a106:	jg     0x51a0e3
  51a108:	mov    esi,0x3922c4e7
  51a10d:	sub    cl,BYTE PTR [edx-0x3e]
  51a110:	mov    ebp,0xbe3b340f
  51a115:	lods   al,BYTE PTR ds:[esi]
  51a116:	popf   
  51a117:	pop    ss
  51a118:	cmc    
  51a119:	and    dl,BYTE PTR [esi]
  51a11b:	cmp    al,0x8b
  51a11d:	xchg   edx,eax
  51a11e:	adc    DWORD PTR [edx+0x29],esp
  51a121:	mov    bh,0x9
  51a123:	adc    ebp,edx
  51a125:	inc    edi
  51a126:	xor    ch,BYTE PTR [esi-0x77beef21]
  51a12c:	add    DWORD PTR [ebx+ecx*8-0x3f],0x98081de8
  51a134:	scas   al,BYTE PTR es:[edi]
  51a135:	scas   al,BYTE PTR es:[edi]
  51a136:	pop    ss
  51a137:	iret   
  51a138:	sub    al,BYTE PTR [edi-0x40]
  51a13b:	pop    edx
  51a13c:	jo     0x51a154
  51a13e:	cli    
  51a13f:	xchg   esp,eax
  51a140:	sbb    bh,ch
  51a142:	je     0x51a196
  51a144:	push   esi
  51a145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a146:	pop    edx
  51a147:	mov    ebx,0xa82201f5
  51a14c:	jno    0xc32910f5
  51a152:	out    dx,al
  51a153:	ja     0x51a1c3
  51a155:	inc    eax
  51a156:	out    dx,eax
  51a157:	test   ebp,edx
  51a159:	pop    eax
  51a15a:	jle    0x51a153
  51a15c:	cdq    
  51a15d:	out    dx,al
  51a15e:	std    
  51a15f:	push   edi
  51a160:	(bad)  
  51a161:	sahf   
  51a162:	out    dx,al
  51a163:	cmp    ebp,esi
  51a165:	pop    es
  51a166:	mov    ds:0x5cf1ffe7,eax
  51a16b:	aas    
  51a16c:	sub    DWORD PTR [ebp-0x2e],ebp
  51a16f:	mov    al,ds:0xa6a18a3a
  51a174:	mov    ebp,0xe013fd16
  51a179:	imul   ecx,DWORD PTR [esi-0xf440e70],0x6a9cbc86
  51a183:	sti    
  51a184:	and    BYTE PTR [esi],dh
  51a186:	xor    DWORD PTR [eax+0x7f],ebp
  51a189:	fs jo  0x51a159
  51a18c:	fimul  DWORD PTR [ebx+0x5249d0f3]
  51a192:	push   ebp
  51a193:	jne    0x51a170
  51a195:	fs mov edx,0xf795e9e
  51a19b:	stc    
  51a19c:	jmp    0x49f6:0x4822e693
  51a1a3:	enter  0x4362,0x2b
  51a1a7:	and    bl,bl
  51a1a9:	dec    eax
  51a1aa:	inc    esp
  51a1ab:	stos   DWORD PTR es:[edi],eax
  51a1ac:	repz stc 
  51a1ae:	shr    esi,1
  51a1b0:	or     bh,dl
  51a1b2:	stos   BYTE PTR es:[edi],al
  51a1b3:	data16 mov dh,0x23
  51a1b6:	mov    ecx,0x44e66ffe
  51a1bb:	jns    0x51a144
  51a1bd:	dec    ebx
  51a1be:	jns    0x51a211
  51a1c0:	std    
  51a1c1:	jge    0x51a186
  51a1c3:	or     DWORD PTR [edi+edx*2],ebx
  51a1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51a1c7:	jle    0x51a19c
  51a1c9:	cmp    DWORD PTR [eax-0x41e66e00],eax
  51a1cf:	shr    bl,0x39
  51a1d2:	scas   al,BYTE PTR es:[edi]
  51a1d3:	mov    dl,0xb1
  51a1d5:	and    eax,0x48cf96a0
  51a1da:	add    al,0x18
  51a1dc:	ins    BYTE PTR es:[edi],dx
  51a1dd:	pop    ds
  51a1de:	cmp    edi,ecx
  51a1e0:	adc    BYTE PTR [eax],bh
  51a1e2:	xor    esp,DWORD PTR [eax+0x7b]
  51a1e5:	repz xchg ecx,eax
  51a1e7:	shl    edx,0x9
  51a1ea:	test   BYTE PTR [ebp+0x7d],bl
  51a1ed:	pop    ds
  51a1ee:	pop    ss
  51a1ef:	popa   
  51a1f0:	scas   eax,DWORD PTR es:[edi]
  51a1f1:	or     ch,ch
  51a1f3:	mov    ah,0x9c
  51a1f5:	push   eax
  51a1f6:	mov    ah,0xcd
  51a1f8:	add    eax,0x71d34747
  51a1fd:	lock inc ebp
  51a1ff:	rol    cl,cl
  51a201:	dec    edx
  51a202:	and    eax,0x3d6f9f2
  51a207:	cmp    al,0x6a
  51a209:	pusha  
  51a20a:	in     al,dx
  51a20b:	dec    ebx
  51a20c:	jo     0x51a1f6
  51a20e:	jg     0x51a20d
  51a210:	aad    0x87
  51a212:	sub    eax,0xb1469ab3
  51a217:	jmp    FWORD PTR [ecx]
  51a219:	pop    eax
  51a21a:	push   eax
  51a21b:	mov    ecx,?
  51a21d:	xor    dl,dh
  51a21f:	cs pop ds
  51a221:	xor    ah,0xed
  51a224:	icebp  
  51a225:	mov    ebp,0xe2ff1c2
  51a22a:	adc    edi,DWORD PTR [edi+ebx*4-0x2d7d1f95]
  51a231:	xor    al,0xe2
  51a233:	mul    BYTE PTR [edx+0x1c]
  51a236:	adc    al,0xd2
  51a238:	xchg   ebx,eax
  51a239:	mov    WORD PTR [edx-0xb73a9a1],es
  51a23f:	push   eax
  51a240:	dec    BYTE PTR ds:0xfec842e6
  51a246:	inc    edi
  51a247:	scas   al,BYTE PTR es:[edi]
  51a248:	ret    
  51a249:	div    edi
  51a24b:	push   ss
  51a24c:	and    esp,DWORD PTR [ebx-0xcc270c6]
  51a252:	in     eax,dx
  51a253:	outs   dx,BYTE PTR ds:[esi]
  51a254:	mov    eax,0x23933a7e
  51a259:	dec    ebx
  51a25a:	in     al,0x4f
  51a25c:	in     al,dx
  51a25d:	nop
  51a25e:	repz push es
  51a260:	push   esi
  51a261:	and    BYTE PTR [edx-0x59964db8],0xea
  51a268:	sbb    ecx,DWORD PTR [ebx+0x18dead7c]
  51a26e:	jno    0x51a2b6
  51a270:	inc    esi
  51a271:	gs out dx,al
  51a273:	fcomip st,st(1)
  51a275:	add    ebp,DWORD PTR [ebp-0x1ce61ae8]
  51a27b:	jae    0x51a2a9
  51a27d:	pop    eax
  51a27e:	jl     0x51a246
  51a280:	scas   al,BYTE PTR es:[edi]
  51a281:	jecxz  0x51a264
  51a283:	jns    0x51a298
  51a285:	push   esi
  51a286:	arpl   WORD PTR [edx+0x24],si
  51a289:	inc    ebx
  51a28a:	and    edx,DWORD PTR [edx+0x25]
  51a28d:	sbb    eax,0x5b8cbf69
  51a292:	cmp    bl,BYTE PTR [ebx+0x1e0a1ea0]
  51a298:	adc    al,0x25
  51a29a:	imul   eax,edi,0x155f09cf
  51a2a0:	inc    ebp
  51a2a1:	jno    0x51a288
  51a2a3:	inc    ebp
  51a2a4:	gs add edx,esi
  51a2a7:	mov    esi,0x8070ba3e
  51a2ac:	push   es
  51a2ad:	inc    esi
  51a2ae:	inc    eax
  51a2af:	iret   
  51a2b0:	aas    
  51a2b1:	hlt    
  51a2b2:	cmp    BYTE PTR [eax+0x7715dcea],ah
  51a2b8:	pop    ebx
  51a2b9:	jnp    0x51a2ce
  51a2bb:	mov    ah,0x49
  51a2bd:	sbb    BYTE PTR [edi+0x46],bl
  51a2c0:	mov    ah,0xf6
  51a2c2:	inc    eax
  51a2c3:	xchg   esi,eax
  51a2c4:	inc    edi
  51a2c5:	stc    
  51a2c6:	dec    esi
  51a2c7:	dec    edx
  51a2c8:	or     al,0x84
  51a2ca:	push   ebx
  51a2cb:	push   ds
  51a2cc:	fild   WORD PTR ds:0xeed083f
  51a2d2:	mov    al,0xa4
  51a2d4:	test   eax,0xcb1ac5b1
  51a2d9:	cld    
  51a2da:	dec    ebp
  51a2db:	adc    DWORD PTR [eax+0x6],ebx
  51a2de:	iret   
  51a2df:	fnsetpm(287 only) 
  51a2e1:	ret    0xa3c
  51a2e4:	dec    ebp
  51a2e5:	test   ebx,ecx
  51a2e7:	shl    BYTE PTR [edx+0x484efb91],1
  51a2ed:	call   DWORD PTR [ebp+0x67]
  51a2f0:	mov    ebx,ss
  51a2f2:	fcos   
  51a2f4:	push   esi
  51a2f5:	je     0x51a29c
  51a2f7:	test   al,0xb1
  51a2f9:	xchg   ebp,eax
  51a2fa:	lds    ebp,FWORD PTR [edi-0x45843d29]
  51a300:	loope  0x51a31d
  51a302:	int    0x36
  51a304:	js     0x51a32a
  51a306:	jmp    0x893693d4
  51a30b:	cmp    DWORD PTR [ecx],eax
  51a30d:	xchg   ecx,eax
  51a30e:	daa    
  51a30f:	dec    esi
  51a310:	mov    ch,0x5
  51a312:	bound  ecx,QWORD PTR [ebx+0x6b]
  51a315:	fst    DWORD PTR [ebx-0x40]
  51a318:	jae    0x51a36c
  51a31a:	sbb    dh,dl
  51a31c:	maskmovq mm5,(bad)
  51a31d:	imul   DWORD PTR [ecx-0x62]
  51a320:	pop    ss
  51a321:	mov    edx,0xdcf24645
  51a326:	sbb    edi,DWORD PTR [esi]
  51a328:	ja     0x51a37d
  51a32a:	psadbw mm0,QWORD PTR ds:0x90ff5f8
  51a331:	cmp    eax,DWORD PTR [ebp-0x69e09e27]
  51a337:	mov    bh,BYTE PTR [edi+edi*2-0x748a8127]
  51a33e:	fidiv  WORD PTR ds:0x2724ee8d
  51a344:	lods   eax,DWORD PTR ds:[esi]
  51a345:	inc    ecx
  51a346:	inc    esp
  51a347:	js     0x51a2e8
  51a349:	cmp    edx,DWORD PTR [edx-0x29a201a6]
  51a34f:	(bad)  
  51a350:	imul   edi,DWORD PTR [ebp-0x5b09f952],0xa75ffd6e
  51a35a:	and    DWORD PTR [edx],eax
  51a35c:	data16 or bh,BYTE PTR [ebp+edi*2-0x4555ad76]
  51a364:	stos   DWORD PTR es:[edi],eax
  51a365:	jge    0x51a3b1
  51a367:	mov    edi,0x24e24bbd
  51a36c:	repnz into 
  51a36e:	xlat   BYTE PTR ds:[ebx]
  51a36f:	mov    dh,0x8
  51a371:	adc    esp,ebx
  51a373:	ins    DWORD PTR es:[edi],dx
  51a374:	neg    ecx
  51a376:	scas   ax,WORD PTR es:[edi]
  51a378:	(bad)  
  51a379:	shl    DWORD PTR ds:0xff22225f,1
  51a37f:	ja     0x51a3ec
  51a381:	push   ecx
  51a382:	mov    ah,0x7b
  51a384:	call   0x59feed7d
  51a389:	mov    edi,0x2767e527
  51a38e:	dec    eax
  51a38f:	cvtpi2ps xmm5,QWORD PTR [esi+0x3bc265f2]
  51a396:	jmp    0xf8aa:0x8b0af017
  51a39d:	add    BYTE PTR [ecx-0x72],dl
  51a3a0:	shr    BYTE PTR [edi+0xf],0x86
  51a3a4:	sub    ah,dh
  51a3a6:	pushf  
  51a3a7:	sahf   
  51a3a8:	repz or BYTE PTR [ecx-0x25f0809e],bh
  51a3af:	xchg   ch,ch
  51a3b1:	(bad)  
  51a3b2:	xor    ecx,ebx
  51a3b4:	sub    DWORD PTR [esi-0x7e],edi
  51a3b7:	jmp    0x51a3ab
  51a3b9:	(bad)  
  51a3ba:	xor    BYTE PTR [eax],dh
  51a3bc:	ret    0x57e6
  51a3bf:	fdivr  DWORD PTR [edi+esi*2+0x39552a7]
  51a3c6:	sbb    BYTE PTR [eax],ch
  51a3c8:	mov    ebx,0x4f22da4e
  51a3cd:	fisttp QWORD PTR [eax+eiz*2]
  51a3d0:	xor    DWORD PTR [eax],esi
  51a3d2:	sti    
  51a3d3:	jae    0x51a395
  51a3d5:	sbb    BYTE PTR [esi+edi*1-0x19f5f8c4],dl
  51a3dc:	mov    WORD PTR [edi+0xd711bc8],es
  51a3e2:	hlt    
  51a3e3:	mov    bh,BYTE PTR [ebp+0x58]
  51a3e6:	push   ecx
  51a3e7:	ret    0x1403
  51a3ea:	aas    
  51a3eb:	mov    al,ds:0x383c4a8c
  51a3f0:	fdivr  DWORD PTR [edi]
  51a3f2:	fprem  
  51a3f4:	lds    ebx,FWORD PTR [ebp+0x50378b23]
  51a3fa:	dec    ebp
  51a3fb:	xor    eax,0xac07c9b9
  51a400:	mov    al,cl
  51a402:	inc    ebp
  51a403:	sub    eax,0xcc243d7
  51a408:	fst    QWORD PTR [ecx]
  51a40a:	shl    BYTE PTR [esi+0x3d42170a],cl
  51a410:	(bad)  
  51a411:	fadd   DWORD PTR [edi]
  51a413:	or     ecx,ecx
  51a415:	push   esi
  51a416:	cmp    al,0x45
  51a418:	imul   edx,DWORD PTR [edx+0x55655b7c],0xc0d5401b
  51a422:	sub    dh,BYTE PTR [ebp+0x2e]
  51a425:	adc    ah,bh
  51a427:	pop    es
  51a428:	and    DWORD PTR [edi+ecx*4],ebx
  51a42b:	in     al,0xa1
  51a42d:	and    al,0xd3
  51a42f:	pop    edx
  51a430:	test   al,0xb4
  51a432:	or     al,0x54
  51a434:	out    0xf9,eax
  51a436:	sbb    al,0x2d
  51a438:	call   DWORD PTR [esi+ebp*8-0x6f]
  51a43c:	femms  
  51a43e:	lock xchg edx,eax
  51a440:	and    DWORD PTR [eax+0x1],0xffffffc1
  51a444:	mov    ds:0x1c2c6705,al
  51a449:	inc    ebx
  51a44a:	push   eax
  51a44b:	mov    dh,0x14
  51a44d:	mov    dh,0xee
  51a44f:	jge    0x51a44f
  51a451:	sbb    dh,ah
  51a453:	push   0x5e
  51a455:	sbb    eax,DWORD PTR [esi]
  51a457:	mov    esi,edx
  51a459:	and    eax,0x13d8fe1f
  51a45e:	lods   al,BYTE PTR ds:[esi]
  51a45f:	clc    
  51a460:	cmp    BYTE PTR [edx-0x2],bh
  51a463:	rcr    DWORD PTR ds:0xe87648e6,0x74
  51a46a:	and    DWORD PTR [esi+0x8],edi
  51a46d:	add    al,0xa5
  51a46f:	mov    eax,0xb64495a9
  51a474:	sbb    eax,0x2fc675d6
  51a479:	daa    
  51a47a:	inc    edi
  51a47b:	enter  0x7618,0x2
  51a47f:	sub    BYTE PTR [edi+0x716474ad],bh
  51a485:	jle    0x51a42f
  51a487:	xor    BYTE PTR [esp+ebp*1-0x48d36924],al
  51a48e:	(bad)  
  51a490:	je     0x51a48d
  51a492:	(bad)  [edi-0x1f59145f]
  51a498:	repz (bad) 
  51a49a:	retf   0x9280
  51a49d:	jmp    0x5dd1d8c7
  51a4a2:	test   al,0x45
  51a4a4:	nop
  51a4a5:	mov    edx,0xb6983041
  51a4aa:	lock adc ebx,eax
  51a4ad:	(bad)  
  51a4ae:	das    
  51a4af:	push   es
  51a4b0:	xchg   ah,ah
  51a4b2:	addr16 (bad) 
  51a4b4:	test   DWORD PTR [ecx],ebx
  51a4b6:	jo     0x51a4ef
  51a4b8:	ror    dh,1
  51a4ba:	ret    
  51a4bb:	aam    0xb7
  51a4bd:	fwait
  51a4be:	cmp    bh,BYTE PTR [edx+0xd]
  51a4c1:	repz or dh,BYTE PTR [ecx-0x34]
  51a4c5:	mov    ch,0x24
  51a4c7:	xchg   edi,eax
  51a4c8:	loope  0x51a4e4
  51a4ca:	jle    0x51a4e4
  51a4cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a4cd:	push   ebx
  51a4ce:	push   esp
  51a4cf:	xchg   DWORD PTR [edi-0x7a753001],esp
  51a4d5:	xor    al,0x2c
  51a4d7:	adc    esp,ecx
  51a4d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a4da:	mov    cl,0x7a
  51a4dc:	and    al,0xc8
  51a4de:	shr    BYTE PTR [ebp-0x15804c9f],cl
  51a4e4:	adc    DWORD PTR [edx-0x44],edx
  51a4e7:	adc    al,0x5c
  51a4e9:	mov    al,BYTE PTR [eax+0x6b3040ff]
  51a4ef:	scas   eax,DWORD PTR es:[edi]
  51a4f0:	gs in  eax,0x61
  51a4f3:	cmp    cl,BYTE PTR [esi-0x71]
  51a4f6:	popf   
  51a4f7:	push   ebx
  51a4f8:	push   ebx
  51a4f9:	xchg   edx,eax
  51a4fa:	fcmovnbe st,st(0)
  51a4fc:	(bad)  
  51a4fd:	stos   BYTE PTR es:[edi],al
  51a4fe:	pop    eax
  51a4ff:	pusha  
  51a500:	jle    0x51a483
  51a502:	ins    DWORD PTR es:[edi],dx
  51a503:	adc    ebp,DWORD PTR [edx]
  51a505:	xor    eax,0x740c663e
  51a50a:	pop    edx
  51a50b:	adc    eax,0x1c
  51a50e:	fstp   QWORD PTR [eax]
  51a510:	xchg   ebp,eax
  51a512:	or     bl,BYTE PTR [eax-0x6cb9e5c5]
  51a518:	jnp    0x51a559
  51a51a:	sahf   
  51a51b:	or     eax,0x7ed0bd07
  51a520:	std    
  51a521:	pop    esp
  51a522:	fnstsw WORD PTR [ebx-0x1f]
  51a525:	jecxz  0x51a4a9
  51a527:	push   ebx
  51a528:	(bad)  
  51a529:	or     al,0x80
  51a52b:	shr    BYTE PTR [ebp-0x4d],0xf4
  51a52f:	test   al,0xb0
  51a531:	clc    
  51a532:	dec    eax
  51a533:	popf   
  51a534:	aam    0x73
  51a536:	mov    edi,0x5b2f6c47
  51a53b:	push   0x1565ef9c
  51a540:	add    eax,0x311cd0f0
  51a545:	fnsave [eax]
  51a547:	add    DWORD PTR [edx-0x5db44f6c],ebx
  51a54d:	and    dh,BYTE PTR [ebx-0x71]
  51a550:	add    ch,ah
  51a552:	imul   ebx,DWORD PTR [ebx+0x6416f404],0x1807efc1
  51a55c:	xor    BYTE PTR [eax+0x41],ch
  51a55f:	xchg   cl,bh
  51a561:	adc    al,0x16
  51a563:	sub    esp,DWORD PTR ds:0x1865ab7e
  51a569:	sbb    eax,eax
  51a56b:	mov    ah,0xb9
  51a56d:	sahf   
  51a56e:	xor    ah,BYTE PTR [ebx-0x55f70c98]
  51a574:	jmp    0x51a525
  51a576:	add    ebx,edi
  51a578:	dec    ebx
  51a579:	cs inc edx
  51a57b:	pop    esi
  51a57c:	scas   eax,DWORD PTR es:[edi]
  51a57d:	sub    al,0xbf
  51a57f:	clc    
  51a580:	sbb    BYTE PTR [ebx+ebp*1],0x2f
  51a584:	push   edx
  51a585:	jg     0x51a56e
  51a587:	scas   al,BYTE PTR es:[edi]
  51a588:	hlt    
  51a589:	ds out 0x10,al
  51a58c:	mov    esp,0xa7a7652c
  51a591:	push   edi
  51a592:	dec    eax
  51a593:	stc    
  51a594:	jbe    0x51a57c
  51a596:	rol    DWORD PTR [ebx-0x65],cl
  51a599:	scas   eax,DWORD PTR es:[edi]
  51a59a:	or     ecx,esi
  51a59c:	lahf   
  51a59d:	mov    bl,dh
  51a59f:	outs   dx,DWORD PTR ds:[esi]
  51a5a0:	jo     0x51a539
  51a5a2:	retf   
  51a5a3:	retf   0xd7f6
  51a5a6:	push   ecx
  51a5a7:	test   DWORD PTR [edx*1+0x511d24f5],ebx
  51a5ae:	ror    BYTE PTR [esi+esi*1+0x3c4704da],cl
  51a5b5:	adc    esp,DWORD PTR [ecx-0x39]
  51a5b8:	add    cl,dh
  51a5ba:	dec    ebx
  51a5bb:	dec    ecx
  51a5bc:	inc    esi
  51a5bd:	fstp   QWORD PTR [ecx-0x7a672a21]
  51a5c3:	adc    DWORD PTR [ecx],esi
  51a5c5:	push   ebx
  51a5c6:	cmp    ah,ah
  51a5c8:	xchg   ecx,eax
  51a5c9:	pop    eax
  51a5ca:	fcom   QWORD PTR [esi-0x27]
  51a5cd:	aaa    
  51a5ce:	test   dh,bl
  51a5d0:	cmp    eax,esi
  51a5d2:	and    bl,bh
  51a5d4:	adc    esp,DWORD PTR [edi-0x65b8078c]
  51a5da:	xchg   BYTE PTR [edi+0x51],dl
  51a5dd:	addr16 inc ecx
  51a5df:	int3   
  51a5e0:	lods   eax,DWORD PTR ds:[esi]
  51a5e1:	cmp    dh,BYTE PTR [edx-0x4d]
  51a5e4:	rcl    BYTE PTR [edx+0x782eea6],0x7b
  51a5eb:	rcl    BYTE PTR [ebp-0x37],0x21
  51a5ef:	push   0x5f829cff
  51a5f4:	hlt    
  51a5f5:	addr16 (bad) 
  51a5f7:	sbb    al,0xa7
  51a5f9:	add    BYTE PTR [ebp-0x5941ad28],bh
  51a5ff:	popa   
  51a600:	repnz push edx
  51a602:	mov    ecx,DWORD PTR fs:[eax+ecx*8-0x11]
  51a607:	sub    dl,BYTE PTR [ecx+0x68e55880]
  51a60d:	pushf  
  51a60e:	out    dx,al
  51a60f:	sahf   
  51a610:	jle    0x51a632
  51a612:	mov    ecx,DWORD PTR [eax]
  51a614:	push   ebx
  51a615:	mov    ds:0x4c2a592b,eax
  51a61a:	addr16 mov ebx,0x2c6bdb8f
  51a620:	cmp    eax,0xea60ab45
  51a625:	add    eax,0x6269c1e5
  51a62a:	push   0x1a
  51a62c:	xchg   esp,eax
  51a62d:	pop    ds
  51a62e:	or     dl,ah
  51a630:	sub    al,0xb1
  51a632:	mov    DWORD PTR [edi],ebx
  51a634:	xchg   edx,eax
  51a635:	adc    eax,0x88225a75
  51a63a:	jnp    0x51a64b
  51a63c:	sub    esi,edi
  51a63e:	adc    BYTE PTR [ebp+0x510545ab],dl
  51a644:	cmp    al,0x1e
  51a646:	stos   DWORD PTR es:[edi],eax
  51a647:	repnz push esi
  51a649:	adc    DWORD PTR [edi+0x79],0x14ffef35
  51a650:	sbb    edx,ecx
  51a652:	shl    BYTE PTR [ebx-0x79],1
  51a655:	(bad)  
  51a656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51a657:	add    BYTE PTR [ecx-0x30],bh
  51a65a:	rcr    bh,0x61
  51a65d:	and    al,0x61
  51a65f:	mov    eax,0x882253cc
  51a664:	or     al,0xd5
  51a666:	mov    esi,0x3d6d058a
  51a66b:	jecxz  0x51a6a3
  51a66d:	push   0x1
  51a66f:	in     eax,0x85
  51a671:	sbb    al,dh
  51a673:	je     0x51a634
  51a675:	mov    DWORD PTR [ebx+0x6d],ebx
  51a678:	sub    al,0x1a
  51a67a:	cmp    BYTE PTR ds:0xa36287d6,al
  51a680:	loop   0x51a688
  51a682:	fistp  QWORD PTR [esi-0x49]
  51a685:	out    dx,al
  51a686:	fistp  QWORD PTR [esi-0x73]
  51a689:	sbb    BYTE PTR [ecx],ch
  51a68b:	push   ebx
  51a68c:	(bad)  
  51a68d:	cmp    BYTE PTR [eax-0x42],bl
  51a690:	mov    ebp,0x27d29ab3
  51a695:	stos   DWORD PTR es:[edi],eax
  51a696:	mov    WORD PTR [ecx-0x23],es
  51a699:	div    DWORD PTR [edx-0x10]
  51a69c:	daa    
  51a69d:	inc    edi
  51a69e:	mov    esi,0x163982ca
  51a6a3:	adc    dl,BYTE PTR [ebx+0x53]
  51a6a6:	cmp    ch,BYTE PTR [ecx-0x2]
  51a6a9:	xchg   ecx,eax
  51a6aa:	ins    BYTE PTR es:[edi],dx
  51a6ab:	dec    edx
  51a6ac:	stos   BYTE PTR es:[edi],al
  51a6ad:	inc    ebx
  51a6ae:	shl    DWORD PTR [ebp-0x2a],1
  51a6b1:	pop    es
  51a6b2:	jns    0x51a64d
  51a6b4:	sti    
  51a6b5:	fld    DWORD PTR [edx-0x69]
  51a6b8:	inc    ebx
  51a6b9:	lock cwde 
  51a6bb:	mov    ah,0x2c
  51a6bd:	lock inc edx
  51a6bf:	retf   0xf2ad
  51a6c2:	fnstsw WORD PTR [edx]
  51a6c4:	test   BYTE PTR [edi*1+0x3e50da8c],ah
  51a6cb:	int3   
  51a6cc:	mov    eax,0x7e5377ef
  51a6d1:	jno    0x51a708
  51a6d3:	xchg   DWORD PTR [ecx+0x42],edx
  51a6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a6d7:	mov    dh,0x25
  51a6d9:	jmp    0x449fa3c1
  51a6de:	inc    ecx
  51a6df:	aas    
  51a6e0:	xchg   esp,eax
  51a6e1:	push   ebp
  51a6e2:	xchg   ecx,eax
  51a6e3:	icebp  
  51a6e4:	and    edi,edi
  51a6e6:	in     eax,0x33
  51a6e8:	repz cmp al,0xc3
  51a6eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a6ec:	ds stc 
  51a6ee:	mov    DWORD PTR [edi+0x75],edi
  51a6f1:	xchg   edx,eax
  51a6f2:	jmp    0x51a717
  51a6f4:	dec    esi
  51a6f5:	sar    DWORD PTR [ebp+0x18],cl
  51a6f8:	ja     0x51a772
  51a6fa:	imul   ebp,DWORD PTR [ecx-0x37e074e5],0xe6449872
  51a704:	mov    ecx,0x849607fb
  51a709:	sbb    DWORD PTR gs:[ebp-0x7a],0xd2fe6e64
  51a711:	xchg   edi,eax
  51a712:	sbb    eax,0xae7ef622
  51a717:	call   DWORD PTR [ecx+0x37]
  51a71a:	push   es
  51a71b:	xchg   edx,eax
  51a71c:	jmp    0x51a6ff
  51a71e:	mov    edx,0x9633f71
  51a723:	(bad)  
  51a725:	jmp    0xa811b19a
  51a72a:	or     DWORD PTR [ebx-0x7572d4e8],edx
  51a730:	test   BYTE PTR [ebx],dh
  51a732:	sub    DWORD PTR [ebx-0x1a],eax
  51a735:	cmp    BYTE PTR [ecx-0xb],bl
  51a738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51a739:	loop   0x51a72d
  51a73b:	scas   al,BYTE PTR es:[edi]
  51a73c:	mov    edi,DWORD PTR [edi]
  51a73e:	mov    eax,ds:0x9ca03acd
  51a743:	or     eax,0xf560a81e
  51a748:	test   al,0x12
  51a74a:	mov    cl,0x86
  51a74c:	popa   
  51a74d:	or     DWORD PTR [ebx],edx
  51a74f:	dec    ebx
  51a750:	mov    ecx,0x72e32d
  51a755:	sub    BYTE PTR [edi],bh
  51a757:	std    
  51a758:	pop    es
  51a759:	jg     0x51a704
  51a75b:	xor    eax,0xb7658b5d
  51a760:	and    al,0x73
  51a762:	xor    esp,DWORD PTR [eax-0x25ef0c46]
  51a768:	dec    edx
  51a769:	mov    ebx,fs
  51a76b:	aad    0x79
  51a76d:	arpl   WORD PTR es:[eax-0x8521761],bp
  51a774:	mov    es,WORD PTR [edi]
  51a776:	hlt    
  51a777:	jle    0x51a7c8
  51a779:	mov    ebx,0xe5cbeb43
  51a77e:	fistp  QWORD PTR [edx-0x39]
  51a781:	mov    BYTE PTR [edi+ebp*1-0x747c0c85],ch
  51a788:	adc    DWORD PTR [esi+0x1cac6a73],0x262e04f3
  51a792:	test   DWORD PTR ds:0x17a7e408,0x873ecd34
  51a79c:	xchg   edx,eax
  51a79d:	cld    
  51a79e:	sbb    BYTE PTR [edx],bh
  51a7a0:	sbb    DWORD PTR ds:0xd760efc1,ebp
  51a7a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51a7a7:	dec    ecx
  51a7a8:	sbb    ch,BYTE PTR [edi+0x6b46f261]
  51a7ae:	jo     0x51a80d
  51a7b0:	mov    dl,0xdf
  51a7b2:	fsubrp st(6),st
  51a7b4:	add    cl,BYTE PTR [ebp-0x55950bfe]
  51a7ba:	mov    ds:0xef31b7d6,al
  51a7bf:	xor    esp,DWORD PTR [edx+0x41487fc7]
  51a7c5:	xor    DWORD PTR [ecx+0xb],edx
  51a7c8:	add    DWORD PTR [edi+ecx*8-0x34df6edf],eax
  51a7cf:	xor    eax,0xcd76bf0e
  51a7d4:	mov    dl,0xbf
  51a7d6:	mov    esp,0xc3c62b24
  51a7dc:	sbb    BYTE PTR [esi-0x24],dh
  51a7df:	sahf   
  51a7e0:	pushf  
  51a7e1:	ret    0xf9df
  51a7e4:	je     0x51a768
  51a7e6:	pop    esp
  51a7e7:	xor    ah,BYTE PTR [edx+0x2fdc5131]
  51a7ed:	mov    al,ds:0x2fafa57c
  51a7f2:	aas    
  51a7f3:	jae    0x51a802
  51a7f5:	(bad)  [ebx-0x28c97d7e]
  51a7fb:	fsub   DWORD PTR [ecx+0x71]
  51a7fe:	leave  
  51a7ff:	aam    0xba
  51a801:	ins    BYTE PTR es:[edi],dx
  51a802:	sbb    al,0x6
  51a804:	jo     0x51a7ee
  51a806:	(bad)  
  51a807:	cmp    bl,al
  51a809:	gs gs (bad) 
  51a80c:	adc    DWORD PTR [edx+0x3],ebp
  51a80f:	push   DWORD PTR [edi]
  51a811:	cmp    BYTE PTR [edi-0x2f],al
  51a814:	xchg   esp,eax
  51a815:	in     eax,dx
  51a816:	fadd   DWORD PTR [esi+0x180f480]
  51a81c:	ss sub al,0x85
  51a81f:	mov    edx,0xacd8ed43
  51a824:	leave  
  51a825:	sbb    esp,DWORD PTR [ebx-0x62]
  51a828:	mov    bl,0xbc
  51a82a:	xchg   ebx,eax
  51a82b:	es pop ds
  51a82d:	mov    edx,0x3399b98d
  51a832:	test   al,0xa4
  51a834:	fprem1 
  51a836:	cmp    DWORD PTR [esi-0x41f89fb3],esi
  51a83c:	loopne 0x51a831
  51a83e:	aad    0x11
  51a840:	pop    edx
  51a841:	jmp    0x51a859
  51a843:	cmp    eax,DWORD PTR [eax]
  51a845:	addr16 cmp al,0x77
  51a848:	xchg   BYTE PTR [edi+0x28],dl
  51a84b:	aaa    
  51a84c:	pop    edi
  51a84d:	hlt    
  51a84e:	pushf  
  51a84f:	rcr    DWORD PTR [esi-0x351af5c4],0x38
  51a856:	enter  0x87ce,0x12
  51a85a:	das    
  51a85b:	or     eax,0xfa40c0ba
  51a860:	(bad)  
  51a861:	out    dx,al
  51a862:	mov    edx,0x8b3a15e6
  51a867:	inc    ecx
  51a868:	cwde   
  51a869:	inc    ebx
  51a86a:	mov    ah,0x7b
  51a86c:	pop    edi
  51a86d:	and    dl,dh
  51a86f:	dec    eax
  51a870:	push   es
  51a871:	iret   
  51a872:	mov    DWORD PTR [ebp+0x22],esi
  51a875:	pop    ecx
  51a876:	(bad)  
  51a877:	adc    dh,BYTE PTR [ebx]
  51a879:	adc    BYTE PTR [ebx],ch
  51a87b:	mov    al,0x9
  51a87d:	(bad)  
  51a87e:	popf   
  51a87f:	cmp    al,0x88
  51a881:	jp     0x51a8ae
  51a883:	xchg   ebx,eax
  51a884:	gs sbb eax,0xc0e37367
  51a88a:	mov    dl,0x1d
  51a88c:	shr    BYTE PTR [eax+ebx*2],1
  51a88f:	mov    dl,ah
  51a891:	jecxz  0x51a8bc
  51a893:	int    0xa2
  51a895:	adc    DWORD PTR [ebx-0x3a252794],eax
  51a89b:	jo     0x51a85b
  51a89d:	stc    
  51a89e:	xchg   esi,eax
  51a89f:	in     eax,0x34
  51a8a1:	jmp    0x4529:0xd8367815
  51a8a8:	xor    al,0x71
  51a8aa:	mov    ah,0xa9
  51a8ac:	loopne 0x51a90e
  51a8ae:	or     BYTE PTR [esi],dl
  51a8b0:	shr    BYTE PTR [ebx],0xcd
  51a8b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a8b4:	fcomp  DWORD PTR [edi+0x1253b036]
  51a8ba:	adc    eax,0x6a10803
  51a8bf:	es jecxz 0x51a875
  51a8c2:	das    
  51a8c3:	mov    ds:0x46b29465,eax
  51a8c8:	out    0x96,al
  51a8ca:	mov    edx,0xcde0d23e
  51a8cf:	jne    0x51a855
  51a8d1:	rcl    DWORD PTR [ecx+eax*8-0x3b],0xb5
  51a8d6:	psraw  mm0,QWORD PTR [eax+0x419530d5]
  51a8dd:	lahf   
  51a8de:	mov    ds:0x620a7508,eax
  51a8e3:	push   ds
  51a8e4:	ret    
  51a8e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51a8e6:	jmp    0x80c178d5
  51a8eb:	stos   DWORD PTR es:[edi],eax
  51a8ec:	push   esi
  51a8ed:	mov    eax,ds:0x6f48f33d
  51a8f2:	stos   BYTE PTR es:[edi],al
  51a8f3:	aam    0xa0
  51a8f5:	aaa    
  51a8f6:	mov    eax,0x15ee5c49
  51a8fb:	in     eax,0x1
  51a8fd:	jmp    0xae6147af
  51a902:	ins    BYTE PTR es:[edi],dx
  51a903:	ret    
  51a904:	pusha  
  51a905:	fidiv  DWORD PTR [ebp+0x35a34c9e]
  51a90b:	cdq    
  51a90c:	mov    si,0x8154
  51a910:	mov    ch,0x1e
  51a912:	leave  
  51a913:	test   eax,0x6277b06d
  51a918:	loopne 0x51a8ce
  51a91a:	mov    eax,0x576ea9ad
  51a91f:	add    eax,0xccf58b25
  51a924:	aaa    
  51a925:	inc    esp
  51a926:	pop    esi
  51a927:	lock cmp ch,al
  51a92a:	cld    
  51a92b:	cld    
  51a92c:	pop    ecx
  51a92d:	mov    esp,0xb1bb9b40
  51a932:	mov    ah,0x42
  51a934:	dec    ebx
  51a936:	or     ah,bl
  51a938:	or     al,0xdb
  51a93a:	jmp    0x86fc:0x151f4f7a
  51a941:	fs aaa 
  51a943:	cmp    al,0x35
  51a945:	(bad)  
  51a946:	fnstenv [edx]
  51a948:	lods   eax,DWORD PTR ds:[esi]
  51a949:	mov    esi,ds
  51a94b:	retf   0x3a73
  51a94e:	sub    dh,BYTE PTR [esi-0x4337a139]
  51a954:	pop    es
  51a955:	imul   ebp,ebp,0xa908ceb4
  51a95b:	sub    eax,DWORD PTR [esi+0x7ce19bea]
  51a961:	inc    esi
  51a962:	cmp    eax,DWORD PTR [ebx]
  51a964:	sbb    DWORD PTR [esi],ebx
  51a966:	enter  0xef24,0x23
  51a96a:	hlt    
  51a96b:	in     eax,dx
  51a96c:	enter  0x5e5c,0x4d
  51a970:	popa   
  51a971:	call   0x39e1:0x3caaab75
  51a978:	fisttp DWORD PTR [edi]
  51a97a:	and    DWORD PTR [ebp+0x74],edi
  51a97d:	push   ds
  51a97e:	ficomp WORD PTR [ebp+0x6c]
  51a981:	mov    esi,0x37a76802
  51a986:	xchg   esi,eax
  51a987:	(bad)  
  51a988:	jl     0x51a969
  51a98a:	rcr    BYTE PTR [esi+0x8ad68f4],cl
  51a990:	mov    ch,0xe
  51a992:	pop    es
  51a993:	or     BYTE PTR [ebp+0x1aa1d07f],ah
  51a999:	leave  
  51a99a:	test   DWORD PTR [ebx+ebp*4],ebp
  51a99d:	add    eax,0x391a234f
  51a9a2:	push   ebp
  51a9a3:	int3   
  51a9a4:	or     ebp,DWORD PTR [ebx-0x1b]
  51a9a7:	movaps XMMWORD PTR [esi],xmm2
  51a9aa:	pop    esi
  51a9ab:	sbb    ecx,ebx
  51a9ad:	aam    0x70
  51a9af:	push   eax
  51a9b0:	js     0x51aa2d
  51a9b2:	or     BYTE PTR [edi+eax*1+0x60da6508],bl
  51a9b9:	pop    ecx
  51a9ba:	or     ebp,0x64
  51a9bd:	lea    edi,[ebp+0x42]
  51a9c0:	retf   
  51a9c1:	jmp    0xa5d081a4
  51a9c6:	sub    eax,0xbe491e43
  51a9cb:	std    
  51a9cc:	pop    ecx
  51a9cd:	push   0x53
  51a9cf:	xor    dl,BYTE PTR [ecx-0x37f000d4]
  51a9d5:	popf   
  51a9d6:	pop    ebp
  51a9d7:	or     ch,BYTE PTR [ebx+ecx*2+0x55265ed1]
  51a9de:	mov    al,0xbf
  51a9e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51a9e1:	inc    ebp
  51a9e2:	adc    eax,0x836c79e5
  51a9e7:	add    al,0x2d
  51a9e9:	in     al,0xb5
  51a9eb:	or     esp,DWORD PTR [edx]
  51a9ed:	sub    DWORD PTR [ebp+0x37f3ec6d],esp
  51a9f3:	(bad)  
  51a9f5:	fbstp  TBYTE PTR [edi+0x6c]
  51a9f8:	data16 neg BYTE PTR [edi-0x57]
  51a9fc:	or     eax,0xad9c15b2
  51aa01:	jno    0x51a9e0
  51aa03:	mov    ecx,0x4eef7956
  51aa08:	pop    eax
  51aa09:	push   cs
  51aa0a:	adc    ecx,eax
  51aa0c:	xlat   BYTE PTR ds:[ebx]
  51aa0d:	into   
  51aa0e:	cmp    DWORD PTR [ecx-0x50],edx
  51aa11:	fdecstp 
  51aa13:	std    
  51aa14:	out    dx,eax
  51aa15:	cwde   
  51aa16:	dec    eax
  51aa17:	inc    ecx
  51aa18:	pop    esi
  51aa19:	mov    al,ds:0x1596cb3f
  51aa1e:	push   esi
  51aa1f:	or     bh,BYTE PTR [ebx]
  51aa21:	sbb    bh,BYTE PTR ds:0x3550deee
  51aa27:	jp     0x51aa94
  51aa29:	lahf   
  51aa2a:	mov    esi,0x2e41039a
  51aa2f:	rcl    DWORD PTR [ebx-0x20ae9ba5],cl
  51aa35:	cmp    DWORD PTR [esi+0x4b061174],0xffffffe0
  51aa3c:	das    
  51aa3d:	jmp    0x3cfdb67d
  51aa42:	jns    0x51aa0f
  51aa44:	lock push ss
  51aa46:	and    al,0xa6
  51aa48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51aa49:	adc    bl,BYTE PTR [ebx-0x69528646]
  51aa4f:	retf   0x7864
  51aa52:	add    BYTE PTR [edi],0xf2
  51aa55:	icebp  
  51aa56:	ret    0x9464
  51aa59:	cmp    al,0x35
  51aa5b:	fisttp QWORD PTR [ecx]
  51aa5d:	(bad)  
  51aa5e:	xor    DWORD PTR [esi+esi*2-0x471d4804],ebx
  51aa65:	(bad)  
  51aa66:	shl    BYTE PTR [edi],1
  51aa68:	add    eax,edi
  51aa6a:	rol    DWORD PTR [ecx],cl
  51aa6c:	in     eax,0x6d
  51aa6e:	loop   0x51aa82
  51aa70:	sub    eax,0xa8e78e09
  51aa75:	outs   dx,DWORD PTR ds:[esi]
  51aa76:	cdq    
  51aa77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51aa78:	in     al,0x72
  51aa7a:	sub    al,0xf3
  51aa7c:	stc    
  51aa7d:	mov    dh,0xa6
  51aa7f:	cli    
  51aa80:	sub    eax,0x842738cc
  51aa85:	stc    
  51aa86:	in     eax,dx
  51aa87:	js     0x51aaea
  51aa89:	(bad)  
  51aa8a:	cmp    ah,BYTE PTR [ebp-0x20]
  51aa8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51aa8e:	out    0x2e,al
  51aa90:	push   eax
  51aa91:	test   eax,0xeff26dae
  51aa96:	das    
  51aa97:	jmp    0x51aa1b
  51aa99:	(bad)  
  51aa9b:	cli    
  51aa9c:	imul   edx,DWORD PTR [ecx-0x3c557b6f],0x8a8d040e
  51aaa6:	call   0x946a:0x897748c8
  51aaad:	push   ds
  51aaae:	push   ebp
  51aaaf:	call   0xd5c90af9
  51aab4:	repnz enter 0x1a33,0x8a
  51aab9:	lods   al,BYTE PTR ds:[esi]
  51aaba:	cmc    
  51aabb:	jmp    0x14ff:0xf069bc5b
  51aac2:	pop    edx
  51aac3:	sub    DWORD PTR fs:[ebx+0x7],0xe0c55baa
  51aacb:	adc    dh,BYTE PTR [ebx]
  51aacd:	add    BYTE PTR [esi-0x6c],cl
  51aad0:	xchg   ebp,eax
  51aad1:	sub    DWORD PTR [edx-0x36bca21f],ecx
  51aad7:	sub    al,0xfb
  51aad9:	and    esi,DWORD PTR ds:0xbe8564c6
  51aadf:	push   0x83ddcdf
  51aae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51aae5:	jmp    0xcf35:0xd7a2f19a
  51aaec:	jb     0x51ab1b
  51aaee:	push   ds
  51aaef:	jl     0x51aa94
  51aaf1:	test   al,0x34
  51aaf3:	xor    bl,dl
  51aaf5:	aad    0x47
  51aaf7:	in     al,dx
  51aaf8:	rol    DWORD PTR [ebp-0x47a9dca0],cl
  51aafe:	mov    eax,DWORD PTR [ebp+0x13ac6f8e]
  51ab04:	sbb    BYTE PTR [eax+eax*8],bh
  51ab07:	aaa    
  51ab08:	jbe    0x51aabf
  51ab0a:	ja     0x51aab6
  51ab0c:	sbb    eax,0x14c05f6b
  51ab11:	add    ecx,DWORD PTR [edi-0x64]
  51ab14:	jl     0x51aaee
  51ab16:	lahf   
  51ab17:	sub    DWORD PTR [edx],eax
  51ab19:	ds xchg ebx,eax
  51ab1b:	mov    DWORD PTR [ebx-0x2],ecx
  51ab1e:	cli    
  51ab1f:	pop    edi
  51ab20:	cmp    eax,0x569caa44
  51ab25:	fsub   st(3),st
  51ab27:	ja     0x51aab8
  51ab29:	mov    cl,0xff
  51ab2b:	push   cs
  51ab2c:	cli    
  51ab2d:	addr16 add esi,0xffffff84
  51ab31:	hlt    
  51ab32:	mov    BYTE PTR [ebp+0x375e3368],dl
  51ab38:	pop    ss
  51ab39:	adc    bh,ah
  51ab3b:	jno    0x51ab9b
  51ab3d:	arpl   WORD PTR [eax+0x19],ax
  51ab40:	js     0x51ab7e
  51ab42:	or     DWORD PTR [ebx-0x29],esp
  51ab45:	loop   0x51aba0
  51ab47:	cdq    
  51ab48:	lea    ebp,[edi-0x3532a86b]
  51ab4e:	test   DWORD PTR [edi-0x36],0x799927df
  51ab55:	mov    edx,esp
  51ab57:	adc    esi,DWORD PTR [edx+0x5d]
  51ab5a:	pop    esp
  51ab5b:	imul   ebx,DWORD PTR [ebp+ebx*1-0x37efe6cd],0xffffffd6
  51ab63:	cwde   
  51ab64:	mov    eax,ds:0xd12d989
  51ab69:	rcr    BYTE PTR [ecx],0xad
  51ab6c:	mov    ch,0x3e
  51ab6e:	or     DWORD PTR [edx],0x45
  51ab71:	or     eax,0xbaa14e89
  51ab76:	neg    cl
  51ab78:	sbb    al,0x44
  51ab7a:	xchg   DWORD PTR [ebx+0x22],eax
  51ab7d:	cmp    al,0xb4
  51ab7f:	les    esp,FWORD PTR [eax+0x5]
  51ab82:	sbb    ecx,0x9cc9ef7a
  51ab88:	ret    
  51ab89:	or     ebp,DWORD PTR [ebx]
  51ab8b:	sbb    ecx,DWORD PTR [ebp-0x55]
  51ab8e:	test   BYTE PTR [esi],cl
  51ab90:	shl    BYTE PTR [edi],0x6
  51ab93:	mov    ch,0x5
  51ab95:	pop    edi
  51ab96:	shl    BYTE PTR [edi],cl
  51ab98:	aam    0x2d
  51ab9a:	mov    edi,0xf18485d6
  51ab9f:	fist   DWORD PTR [ecx-0x69]
  51aba2:	mov    ah,BYTE PTR [ecx-0x7]
  51aba5:	sbb    dh,ah
  51aba7:	pop    edx
  51aba8:	in     eax,0xd5
  51abaa:	sub    DWORD PTR [esi-0x72],0x44
  51abae:	cs jmp 0x51ab96
  51abb1:	leave  
  51abb2:	hlt    
  51abb3:	test   esp,ebx
  51abb5:	mov    ds:0xef9e60fc,eax
  51abba:	sub    edi,DWORD PTR [ebx+0x57d44999]
  51abc0:	mov    al,0x6e
  51abc2:	js     0x51abea
  51abc4:	mov    BYTE PTR [eax+esi*2-0x13],al
  51abc8:	das    
  51abc9:	xchg   edi,eax
  51abca:	adc    edi,DWORD PTR [ebp+0x5e]
  51abcd:	adc    eax,0x76ab0b9e
  51abd2:	test   BYTE PTR [ebx-0x2f],ch
  51abd5:	pop    ecx
  51abd6:	lea    eax,[ebx]
  51abd8:	jns    0x51ac30
  51abda:	mov    dl,0x6d
  51abdc:	mov    ah,0xaa
  51abde:	jle    0x51ac16
  51abe0:	sbb    eax,0x2619f48d
  51abe5:	pop    es
  51abe6:	sahf   
  51abe7:	stos   DWORD PTR es:[edi],eax
  51abe8:	xor    dl,ch
  51abea:	inc    eax
  51abeb:	fbstp  TBYTE PTR [edx+0x22]
  51abee:	push   0xf08b42c
  51abf3:	or     BYTE PTR [ecx],0xf1
  51abf6:	enter  0x845f,0x23
  51abfa:	aad    0x1e
  51abfc:	mov    bl,0x7b
  51abfe:	cmp    ebx,DWORD PTR [ebx-0x707c852e]
  51ac04:	inc    ebx
  51ac05:	jns    0x51ac6c
  51ac07:	jno    0x51ac36
  51ac09:	mov    dl,0x22
  51ac0b:	cs std 
  51ac0d:	enter  0x4598,0xa3
  51ac11:	push   es
  51ac12:	outs   dx,DWORD PTR ds:[esi]
  51ac13:	cmp    BYTE PTR [eax-0x2b12410c],bh
  51ac19:	jecxz  0x51abbd
  51ac1b:	popa   
  51ac1c:	test   DWORD PTR [esi-0x7e37369c],ecx
  51ac22:	sub    DWORD PTR [edx],ecx
  51ac24:	mov    ebx,0x92208e6a
  51ac29:	mov    al,dh
  51ac2b:	retf   
  51ac2c:	retf   0x5c85
  51ac2f:	sub    BYTE PTR [ecx+0x4d],dl
  51ac32:	ja     0x51abd4
  51ac34:	dec    eax
  51ac35:	int3   
  51ac36:	mov    BYTE PTR [eax+0x4f],dl
  51ac39:	les    edx,FWORD PTR [edx]
  51ac3b:	inc    esp
  51ac3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51ac3d:	sbb    cl,0xa5
  51ac40:	push   ebx
  51ac41:	or     bh,ch
  51ac43:	pop    es
  51ac44:	add    al,BYTE PTR [esi+0x5e]
  51ac47:	call   0x90e2:0xae398297
  51ac4e:	popa   
  51ac4f:	push   edx
  51ac50:	inc    ecx
  51ac51:	sti    
  51ac52:	jnp    0x51acc6
  51ac54:	lods   al,BYTE PTR ds:[esi]
  51ac55:	test   DWORD PTR [edx-0x1b92b0c9],ebx
  51ac5b:	sbb    ecx,DWORD PTR [esi+0x10467dfb]
  51ac61:	xchg   ecx,eax
  51ac62:	test   eax,0x30a44166
  51ac67:	mov    ah,0xd8
  51ac69:	repnz mov cl,0xef
  51ac6c:	inc    edi
  51ac6d:	neg    DWORD PTR [ecx-0x6f1544b0]
  51ac73:	jne    0x51ac59
  51ac75:	cld    
  51ac76:	sub    eax,0xb51c6165
  51ac7b:	sub    BYTE PTR [ecx+0xf],dl
  51ac7e:	cmc    
  51ac7f:	sub    BYTE PTR [esp+ebp*2+0x7e094885],ah
  51ac86:	inc    eax
  51ac87:	cmp    BYTE PTR [ebp-0xb37b8e5],ch
  51ac8d:	push   ecx
  51ac8e:	lods   al,BYTE PTR ds:[esi]
  51ac8f:	aad    0xeb
  51ac91:	add    esi,DWORD PTR [ebp+0xa]
  51ac94:	lock sub dl,BYTE PTR ds:0x761d8985
  51ac9b:	sbb    DWORD PTR [edi+eiz*1-0x6a9fda22],ebx
  51aca2:	add    eax,0xfe75c2bd
  51aca7:	shl    DWORD PTR [edi+0x0],0xef
  51acab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51acac:	adc    esp,ebp
  51acae:	out    dx,eax
  51acaf:	(bad)  
  51acb0:	scas   al,BYTE PTR es:[edi]
  51acb1:	stos   BYTE PTR es:[edi],al
  51acb2:	call   FWORD PTR [ebx+edx*8]
  51acb5:	div    BYTE PTR [esi]
  51acb7:	push   edi
  51acb8:	mov    al,0x79
  51acba:	retf   0x8fbd
  51acbd:	push   ss
  51acbe:	mov    cl,BYTE PTR [ebp+0x41f79a6b]
  51acc4:	dec    esi
  51acc5:	mov    edx,0x7d00338c
  51acca:	xor    ecx,DWORD PTR ds:0x62742e31
  51acd0:	mov    ds:0x4125f678,al
  51acd5:	ja     0x51ac91
  51acd7:	push   ss
  51acd8:	inc    ebx
  51acd9:	mov    eax,0xc14f7ed2
  51acde:	sub    DWORD PTR [ecx-0x387a3f1a],esi
  51ace4:	out    0x8c,al
  51ace6:	xchg   BYTE PTR [esi],cl
  51ace8:	repz lock pushf 
  51aceb:	clc    
  51acec:	and    ecx,DWORD PTR [eax+0x53]
  51acef:	aad    0xe9
  51acf1:	fst    st(7)
  51acf3:	repz pop edx
  51acf5:	xchg   eax,ebx
  51acf7:	fld    QWORD PTR [edx-0x56]
  51acfa:	mov    DWORD PTR [eax],esi
  51acfc:	inc    esi
  51acfd:	stos   BYTE PTR es:[edi],al
  51acfe:	inc    ebp
  51acff:	inc    edi
  51ad00:	mov    dl,0x85
  51ad02:	rcr    BYTE PTR [esi+0x26],1
  51ad05:	ja     0x51aca0
  51ad07:	cmp    BYTE PTR [ecx+ecx*2-0x30],dl
  51ad0b:	cli    
  51ad0c:	out    0xdc,al
  51ad0e:	sbb    eax,0xfc0f4b30
  51ad13:	out    0x2c,al
  51ad15:	adc    al,0x45
  51ad17:	xchg   esp,eax
  51ad18:	xor    dh,0x8b
  51ad1b:	and    esi,DWORD PTR [ebx+0x5e78b40d]
  51ad21:	mul    BYTE PTR [esi]
  51ad23:	jg     0x51acb7
  51ad25:	push   es
  51ad26:	inc    ebp
  51ad27:	mov    ch,0xc5
  51ad29:	out    dx,eax
  51ad2a:	and    eax,DWORD PTR [eax+eiz*2+0x6c]
  51ad2e:	fcomp  DWORD PTR [edx]
  51ad30:	test   DWORD PTR [ebx+esi*2+0x7fc6b1e3],esp
  51ad37:	xchg   ecx,eax
  51ad38:	adc    esi,DWORD PTR [edi]
  51ad3a:	daa    
  51ad3b:	les    ebp,FWORD PTR [ebx-0x1e]
  51ad3e:	cmp    BYTE PTR [ebp-0x13],dh
  51ad41:	sub    bl,ah
  51ad43:	mov    al,ds:0x2e900344
  51ad48:	pop    ebp
  51ad49:	inc    edx
  51ad4a:	call   0xb3ab:0xf8b038f
  51ad51:	sahf   
  51ad52:	arpl   WORD PTR [edi+0x28],dx
  51ad55:	in     eax,dx
  51ad56:	add    al,0xf1
  51ad58:	push   cs
  51ad59:	(bad)  
  51ad5b:	stc    
  51ad5c:	pop    ebx
  51ad5d:	cmp    bh,BYTE PTR [edx-0x35fcac8c]
  51ad63:	mov    dl,cl
  51ad65:	(bad)  
  51ad66:	mov    ebx,edx
  51ad68:	lea    edx,[edx-0x7]
  51ad6b:	fisub  DWORD PTR [edx+0x5e]
  51ad6e:	aad    0x2d
  51ad70:	sbb    ecx,eax
  51ad72:	stc    
  51ad73:	add    esp,edx
  51ad75:	int    0xf3
  51ad77:	pop    edx
  51ad78:	movzx  ebp,BYTE PTR [ebp-0x3e]
  51ad7c:	mov    WORD PTR [ecx],ds
  51ad7e:	iret   
  51ad7f:	pop    esp
  51ad80:	pop    es
  51ad81:	mov    esp,esi
  51ad83:	test   BYTE PTR ds:0xc6ed8eb1,dl
  51ad89:	xchg   edi,eax
  51ad8a:	add    bh,ch
  51ad8c:	push   0x48
  51ad8e:	inc    ecx
  51ad8f:	xlat   BYTE PTR ds:[ebx]
  51ad90:	push   edx
  51ad91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51ad92:	adc    DWORD PTR [edx+edi*1-0x36],0x67
  51ad97:	iret   
  51ad98:	pushf  
  51ad99:	not    bl
  51ad9b:	bound  eax,QWORD PTR [edi+ecx*2]
  51ad9e:	jp     0x51ad5e
  51ada0:	pop    ss
  51ada1:	ss clc 
  51ada3:	pop    ds
  51ada4:	lds    eax,FWORD PTR [ebx+0x12]
  51ada7:	cdq    
  51ada8:	retf   
  51ada9:	mov    edi,ecx
  51adab:	xchg   ebx,eax
  51adac:	test   DWORD PTR [ecx+0x15],eax
  51adaf:	and    esp,DWORD PTR ds:0x9ec41b05
  51adb5:	aas    
  51adb6:	dec    edx
  51adb7:	out    0x68,al
  51adb9:	neg    DWORD PTR [esi+0x2f]
  51adbc:	nop
  51adbd:	xchg   esp,eax
  51adbe:	sub    DWORD PTR [edi+0x44],eax
  51adc1:	mov    ds,WORD PTR [edx-0xf]
  51adc4:	test   al,0x5e
  51adc6:	jp     0x51adde
  51adc8:	popf   
  51adc9:	retf   
  51adca:	out    0x1b,al
  51adcc:	(bad)  
  51adcd:	adc    DWORD PTR [esi+0x349a4ff6],edx
  51add3:	int    0xb4
  51add5:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  51add7:	add    al,0x1a
  51add9:	mov    WORD PTR [ecx+ecx*2-0x2c],?
  51addd:	pop    edx
  51adde:	mov    BYTE PTR [ebx+eiz*1+0x10a6d375],ah
  51ade5:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  51ade7:	aaa    
  51ade8:	add    BYTE PTR [edi-0x4385b0a],0xfd
  51adef:	retf   0x4e33
  51adf2:	adc    ebp,DWORD PTR [ecx]
  51adf4:	and    BYTE PTR [ebx],cl
  51adf6:	repz add DWORD PTR [ecx+ebp*2+0x14f22292],edx
  51adfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51adff:	test   al,0x5d
  51ae01:	ror    dh,0x1a
  51ae04:	or     BYTE PTR [edi-0x33],ah
  51ae07:	fcomp  DWORD PTR [ecx]
  51ae09:	in     al,dx
  51ae0a:	cmp    BYTE PTR [ecx],bl
  51ae0c:	call   0x76fd05ff
  51ae11:	imul   edi,DWORD PTR [ecx-0x3b4a713f],0x54
  51ae18:	lock dec esi
  51ae1a:	lock mov ah,0xdf
  51ae1d:	jge    0x51adaf
  51ae1f:	xchg   BYTE PTR [edi+0x6b],ah
  51ae22:	imul   ebx,ebp,0xffffffca
  51ae25:	jne    0x51adf4
  51ae27:	sbb    DWORD PTR [esi+0x2a],edi
  51ae2a:	adc    eax,0x7f80df1f
  51ae2f:	cmp    esi,DWORD PTR ds:0x6dd19a86
  51ae35:	mov    es,WORD PTR [edi+0xb7496b4]
  51ae3b:	dec    edx
  51ae3c:	mov    ebp,0x6532f333
  51ae41:	ret    
  51ae42:	(bad)  
  51ae43:	call   0xd7e61058
  51ae48:	int3   
  51ae49:	retf   0x8fe5
  51ae4c:	fisttp DWORD PTR [ebx+0x5485c963]
  51ae52:	mov    ecx,0x3252f632
  51ae57:	cmp    DWORD PTR [ecx+ebx*2-0xccec783],ecx
  51ae5e:	loopne 0x51ae1e
  51ae60:	lds    esi,FWORD PTR [eax]
  51ae62:	(bad)  
  51ae63:	out    dx,eax
  51ae64:	adc    al,0x22
  51ae66:	push   0xffffffc5
  51ae68:	out    0x16,al
  51ae6a:	aam    0xf0
  51ae6c:	mov    DWORD PTR [eax-0x28296ec2],edx
  51ae72:	repnz push esi
  51ae74:	sub    al,0xde
  51ae76:	test   al,bh
  51ae78:	call   FWORD PTR [ebp-0x1f]
  51ae7b:	jecxz  0x51ae75
  51ae7d:	fild   QWORD PTR [ebp+ecx*2-0x37]
  51ae81:	cmp    al,0xa0
  51ae83:	mov    dh,0x42
  51ae85:	sti    
  51ae86:	sub    ecx,DWORD PTR [ebx+ebp*2]
  51ae89:	ror    DWORD PTR [eax-0x5e77999f],1
  51ae8f:	imul   ecx,DWORD PTR [ebx-0x52],0xbffd92eb
  51ae96:	inc    edx
  51ae97:	mov    cl,0x1b
  51ae99:	enter  0x52e3,0xb3
  51ae9d:	inc    esp
  51ae9e:	xor    BYTE PTR [esi+esi*8+0x4a3c5f65],0xca
  51aea6:	and    DWORD PTR [esi+0x54751ffd],ebp
  51aeac:	inc    ebp
  51aead:	or     ecx,ecx
  51aeaf:	cld    
  51aeb0:	ror    DWORD PTR [edx-0x5],1
  51aeb3:	push   ebx
  51aeb4:	popa   
  51aeb5:	add    al,0x4f
  51aeb7:	sub    al,0x2f
  51aeb9:	cdq    
  51aeba:	sub    BYTE PTR [ebx],ah
  51aebc:	and    eax,0x8f28dbbf
  51aec1:	das    
  51aec2:	or     ebx,0x39
  51aec5:	ds ret 0x81e8
  51aec9:	in     al,0xff
  51aecb:	int3   
  51aecc:	adc    bh,BYTE PTR [eax-0xead2c65]
  51aed2:	retf   
  51aed3:	mov    ch,0xa6
  51aed5:	push   ds
  51aed6:	dec    esp
  51aed7:	retf   0x797a
  51aeda:	sbb    BYTE PTR [ebx],dh
  51aedc:	retf   0xb64f
  51aedf:	lock xor eax,0x76125bc3
  51aee5:	rcr    DWORD PTR [esi+0x5e273247],1
  51aeeb:	and    ebx,DWORD PTR [eax]
  51aeed:	add    ah,BYTE PTR [ebp+0x74]
  51aef0:	imul   ebx,DWORD PTR [ebx+0x10045508],0x29
  51aef7:	and    BYTE PTR [edx-0x70],dl
  51aefa:	dec    ebx
  51aefb:	ja     0x51af13
  51aefd:	repnz clc 
  51aeff:	inc    eax
  51af00:	shl    BYTE PTR [esi],1
  51af02:	add    cl,BYTE PTR [ecx-0x5d]
  51af05:	pusha  
  51af06:	in     eax,0x98
  51af08:	rcl    DWORD PTR [ebx+0x36],0x6f
  51af0c:	mov    ds:0xebf45957,eax
  51af11:	loopne 0x51af81
  51af13:	aam    0xa8
  51af15:	and    ch,BYTE PTR [edx]
  51af17:	jmp    0x51aee7
  51af19:	mov    WORD PTR [edx],ss
  51af1b:	call   0x405c:0x6db32a2d
  51af22:	(bad)  
  51af23:	sub    DWORD PTR [esi],edi
  51af25:	test   dh,bl
  51af27:	inc    esi
  51af28:	call   0x47e4:0x51e0f052
  51af2f:	lds    esi,FWORD PTR [edx+0x55]
  51af32:	and    DWORD PTR [esi],edi
  51af34:	sub    eax,0x19724575
  51af39:	xchg   edi,eax
  51af3a:	push   ds
  51af3b:	and    BYTE PTR [esi],al
  51af3d:	push   esp
  51af3e:	in     al,0x99
  51af40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51af41:	cwde   
  51af42:	cmp    DWORD PTR [esi+0x6],ebp
  51af45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51af46:	pop    ss
  51af47:	mov    ah,BYTE PTR [esp+eiz*4+0x50ba96bf]
  51af4e:	in     eax,dx
  51af4f:	call   0xc1fb:0x7ef73c83
  51af56:	mov    fs,WORD PTR [edx-0x66e6f524]
  51af5c:	lods   al,BYTE PTR ds:[esi]
  51af5d:	call   0x6dd2:0x3f615f35
  51af64:	xor    DWORD PTR [esi],edi
  51af66:	sbb    al,0x3e
  51af68:	add    eax,0xc1269a87
  51af6d:	cmp    DWORD PTR [ebx+0x1012f3a2],ebp
  51af73:	lods   eax,DWORD PTR ds:[esi]
  51af74:	sub    bl,ch
  51af76:	pop    esi
  51af77:	push   edx
  51af78:	js     0x51af51
  51af7a:	scas   eax,DWORD PTR es:[edi]
  51af7b:	add    ebp,DWORD PTR [eax+edx*1-0x70982280]
  51af82:	sti    
  51af83:	or     eax,ebx
  51af85:	cmp    BYTE PTR [edx-0x72],ch
  51af88:	or     al,BYTE PTR [edx]
  51af8a:	mov    es,WORD PTR [edx]
  51af8c:	jmp    0x51afe5
  51af8e:	xchg   BYTE PTR [edi],dh
  51af90:	ins    DWORD PTR es:[edi],dx
  51af91:	in     al,dx
  51af92:	clc    
  51af93:	cwde   
  51af94:	xchg   esp,eax
  51af95:	push   esi
  51af96:	mov    BYTE PTR [eax-0x9],ch
  51af99:	out    0xb8,eax
  51af9b:	daa    
  51af9c:	div    BYTE PTR [esp+eiz*4]
  51af9f:	mov    bl,0xeb
  51afa1:	call   0x8973:0x779702ca
  51afa8:	xchg   ebx,eax
  51afa9:	clc    
  51afaa:	(bad)  
  51afab:	cmp    cl,al
  51afad:	bound  edx,QWORD PTR [ebx]
  51afaf:	adc    BYTE PTR [edx+ecx*2-0x17],al
  51afb3:	in     eax,dx
  51afb4:	call   0xd82dab0d
  51afb9:	sbb    esi,DWORD PTR [ecx+0x20]
  51afbc:	aam    0x42
  51afbe:	hlt    
  51afbf:	push   esi
  51afc0:	adc    BYTE PTR [edx+0x22],ah
  51afc3:	(bad)  
  51afc4:	ins    DWORD PTR es:[edi],dx
  51afc5:	jns    0x51af6b
  51afc7:	xor    eax,0x6f8d0eaf
  51afcc:	fild   DWORD PTR [eax-0x39]
  51afcf:	jl     0x51af54
  51afd1:	icebp  
  51afd2:	call   0x645c:0xaf61628a
  51afd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51afda:	sub    cl,ah
  51afdc:	push   0xffffffce
  51afde:	and    DWORD PTR [ebx],esp
  51afe0:	fild   WORD PTR [ebx-0x3b]
  51afe3:	jmp    0x51b01a
  51afe5:	imul   eax,DWORD PTR [edx+0x4efce9ea],0x38
  51afec:	xchg   BYTE PTR [esi+ebx*1],dh
  51afef:	retf   0x929f
  51aff2:	outs   dx,BYTE PTR ds:[esi]
  51aff3:	nop
  51aff4:	and    DWORD PTR [edi-0x1b],esp
  51aff7:	pop    es
  51aff8:	ins    BYTE PTR es:[edi],dx
  51aff9:	retf   0x2e71
  51affc:	sbb    esi,DWORD PTR [edx+0xb0e21fb]
  51b002:	mov    ebp,0xeecaf8dd
  51b007:	add    BYTE PTR [edi-0x68],0xe5
  51b00b:	pop    esi
  51b00c:	jg     0x51af93
  51b00e:	inc    ebx
  51b00f:	and    ah,BYTE PTR [edx+0x14]
  51b012:	or     DWORD PTR [ebp+0x7a],ecx
  51b015:	mov    bl,0x69
  51b017:	(bad)  
  51b018:	(bad)  
  51b019:	mov    ebx,0x2052a239
  51b01e:	icebp  
  51b01f:	xchg   bl,bh
  51b021:	sbb    BYTE PTR [edx+0x22ab7dd4],dl
  51b027:	adc    esp,eax
  51b029:	adc    al,0x8f
  51b02b:	pop    edi
  51b02c:	mov    bh,0x91
  51b02e:	lea    esp,[ecx-0x27fa22f2]
  51b034:	test   al,0xc9
  51b036:	stos   BYTE PTR es:[edi],al
  51b037:	pop    es
  51b038:	push   esi
  51b039:	sub    al,cl
  51b03b:	add    BYTE PTR [edi-0x16],al
  51b03e:	call   0x7d9e34f5
  51b043:	mov    cl,0x98
  51b045:	jg     0x51b092
  51b047:	clc    
  51b048:	pop    DWORD PTR [edx+0x724dd19a]
  51b04e:	xor    BYTE PTR ds:0xe9ed856d,0xde
  51b055:	ja     0x51b070
  51b057:	sbb    eax,0xdd87823a
  51b05c:	test   BYTE PTR ds:0xc8c74d60,0x47
  51b063:	pop    esp
  51b064:	test   al,0x97
  51b066:	mov    ah,0x51
  51b068:	in     eax,0x2c
  51b06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b06b:	jge    0x51b059
  51b06d:	data16 lods al,BYTE PTR ds:[esi]
  51b06f:	jmp    0x2a97:0x40265f9b
  51b076:	std    
  51b077:	push   ebp
  51b078:	and    cl,al
  51b07a:	aaa    
  51b07b:	lahf   
  51b07c:	in     eax,dx
  51b07d:	mov    edx,0xd1c5f57a
  51b082:	popf   
  51b083:	pop    edx
  51b084:	mov    ah,BYTE PTR [edx+0x62]
  51b087:	hlt    
  51b088:	sub    ch,BYTE PTR [esi]
  51b08a:	pop    esi
  51b08b:	imul   esi,eax,0x9154dcff
  51b091:	add    eax,0xafe4f52
  51b096:	or     esp,DWORD PTR [esi+0x57]
  51b099:	mov    eax,ds:0xa2d35d36
  51b09e:	mov    eax,0x78a6d12f
  51b0a3:	fstp   TBYTE PTR ds:0x5665fc9f
  51b0a9:	sbb    dh,BYTE PTR [edi+0x32554d80]
  51b0af:	lock aam 0x32
  51b0b2:	cmp    al,0xbd
  51b0b4:	stc    
  51b0b5:	test   eax,0x92a17d69
  51b0ba:	retf   0xf70a
  51b0bd:	jae    0x51b051
  51b0bf:	adc    eax,0x983623cc
  51b0c4:	cs mov dl,0xe3
  51b0c7:	daa    
  51b0c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b0c9:	inc    eax
  51b0ca:	add    al,0x90
  51b0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b0cd:	mov    ch,0xda
  51b0cf:	imul   eax,ebp,0xd130ad02
  51b0d5:	pop    eax
  51b0d6:	sar    BYTE PTR [edi-0x4573869c],cl
  51b0dc:	mov    DWORD PTR [ebp+0x2d],esp
  51b0df:	loope  0x51b156
  51b0e1:	ins    BYTE PTR es:[edi],dx
  51b0e2:	push   ecx
  51b0e3:	xor    ebx,DWORD PTR [ecx]
  51b0e5:	fcmovbe st,st(2)
  51b0e7:	and    al,0xe2
  51b0e9:	jae    0x51b111
  51b0eb:	rcl    bh,cl
  51b0ed:	jp     0x51b0e1
  51b0ef:	(bad)  
  51b0f0:	pop    es
  51b0f1:	outs   dx,DWORD PTR ds:[esi]
  51b0f2:	nop
  51b0f3:	inc    ch
  51b0f5:	fmul   QWORD PTR [ecx+eax*8]
  51b0f8:	dec    esp
  51b0f9:	cmp    BYTE PTR [edi],0xc5
  51b0fc:	lds    ebp,FWORD PTR ds:0xd4348c5
  51b102:	sub    al,0x59
  51b104:	outs   dx,DWORD PTR ds:[esi]
  51b105:	in     al,0xdb
  51b107:	lods   al,BYTE PTR ds:[esi]
  51b108:	inc    ebx
  51b109:	xchg   dh,cl
  51b10b:	(bad)  
  51b10c:	cwde   
  51b10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b10e:	adc    dh,BYTE PTR [ebp+0x3de1154d]
  51b114:	aad    0xd1
  51b116:	loop   0x51b16e
  51b118:	cmp    cl,BYTE PTR [edi]
  51b11a:	or     al,0xa7
  51b11c:	cli    
  51b11d:	std    
  51b11e:	and    al,0x15
  51b120:	push   esi
  51b121:	jmp    0x6e47e7af
  51b126:	test   DWORD PTR [ebp-0x4c],ebp
  51b129:	sbb    DWORD PTR [esi],edi
  51b12b:	mov    ecx,0x28d44d92
  51b130:	fstp   QWORD PTR [ecx+0x7f]
  51b133:	mov    ebp,0x37f1fe52
  51b138:	push   ss
  51b139:	enter  0x2335,0x9e
  51b13d:	(bad)  
  51b13f:	es fbstp TBYTE PTR gs:[si+0x33]
  51b145:	mov    WORD PTR [esi-0x7f],?
  51b148:	add    ecx,ebx
  51b14a:	popf   
  51b14b:	mov    dh,0x4a
  51b14d:	pop    edi
  51b14e:	int    0x63
  51b150:	js     0x51b0f1
  51b152:	adc    DWORD PTR [ecx-0x12],esi
  51b155:	pop    eax
  51b156:	jo     0x51b12e
  51b158:	jp     0x51b0f2
  51b15a:	add    DWORD PTR [edx-0x60e60200],ebx
  51b160:	mov    ecx,0x6e939eb3
  51b165:	ins    DWORD PTR es:[edi],dx
  51b166:	mov    al,ds:0xf640192a
  51b16b:	mov    ds:0x5a726c97,eax
  51b170:	out    dx,al
  51b171:	ror    DWORD PTR ds:0x46507f30,0xa4
  51b178:	or     ch,dl
  51b17a:	fisub  WORD PTR [ecx-0x727c2f81]
  51b180:	out    dx,eax
  51b181:	addr16 sbb ecx,edi
  51b184:	imul   ebp,DWORD PTR [edi],0xffffffda
  51b187:	fidivr WORD PTR [ecx-0x6102dbd7]
  51b18d:	cmp    ch,ch
  51b18f:	addr16 lock rcl ah,1
  51b193:	sahf   
  51b194:	xchg   BYTE PTR [eax],ch
  51b196:	aam    0xba
  51b198:	push   eax
  51b199:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b19b:	ret    0x9f4f
  51b19e:	jo     0x51b1bc
  51b1a0:	cli    
  51b1a1:	hlt    
  51b1a2:	inc    ebx
  51b1a3:	adc    ebp,0xe89c7aae
  51b1a9:	or     edi,DWORD PTR [edi]
  51b1ab:	push   0xffffffef
  51b1ad:	mov    al,0xda
  51b1af:	xchg   esp,eax
  51b1b0:	mov    ah,0x48
  51b1b2:	jmp    0x51b207
  51b1b4:	lds    ebx,FWORD PTR [eax+0x42]
  51b1b7:	fwait
  51b1b8:	fwait
  51b1b9:	mov    ecx,0x123dd251
  51b1be:	adc    esi,DWORD PTR [ebx-0x1df64134]
  51b1c4:	push   esi
  51b1c5:	pop    esp
  51b1c6:	push   0x90c96c62
  51b1cb:	out    0x56,al
  51b1cd:	or     BYTE PTR [ecx],bh
  51b1cf:	push   es
  51b1d0:	xchg   ecx,eax
  51b1d1:	shl    BYTE PTR [ebp+0x73],cl
  51b1d4:	or     dl,BYTE PTR [ebx]
  51b1d6:	fwait
  51b1d7:	and    ah,BYTE PTR [ecx]
  51b1d9:	push   0xffffffb3
  51b1db:	mov    ch,0x88
  51b1dd:	das    
  51b1de:	sbb    eax,0xf6fa8bcd
  51b1e3:	je     0x51b236
  51b1e5:	outs   dx,BYTE PTR ds:[esi]
  51b1e6:	and    eax,DWORD PTR [ebp+ebx*2-0x7f2d3d7f]
  51b1ed:	(bad)  
  51b1ee:	(bad)  
  51b1ef:	retf   0xc85b
  51b1f2:	mov    ebp,0x80b8af7f
  51b1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b1f8:	pop    es
  51b1f9:	and    eax,0x313cda4d
  51b1fe:	pop    ecx
  51b1ff:	dec    ebx
  51b200:	mov    dh,0x2e
  51b202:	push   ds
  51b203:	push   edi
  51b204:	outs   dx,BYTE PTR ds:[esi]
  51b205:	push   ebp
  51b206:	mov    esi,0x419d9fcd
  51b20b:	sub    ebx,DWORD PTR [esi]
  51b20d:	inc    eax
  51b20e:	addr16 in al,dx
  51b210:	cmp    DWORD PTR [ebp-0x64],eax
  51b213:	jmp    0x9e82:0xc070a911
  51b21a:	daa    
  51b21b:	lods   al,BYTE PTR ds:[esi]
  51b21c:	push   ebx
  51b21d:	jmp    DWORD PTR [eax-0x447b5150]
  51b223:	pop    ecx
  51b224:	adc    BYTE PTR [edx+0x3f],0x6c
  51b228:	dec    ebp
  51b229:	hlt    
  51b22a:	mov    bl,0x1b
  51b22c:	cmp    eax,0xe9941a3
  51b231:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b232:	adc    BYTE PTR [edi-0x64],ch
  51b235:	pop    esp
  51b236:	rcl    BYTE PTR [edi-0x56866500],cl
  51b23c:	call   FWORD PTR [ebx+eiz*2]
  51b23f:	dec    ecx
  51b240:	mov    dh,0xf5
  51b242:	popa   
  51b243:	and    ebp,DWORD PTR [ebx-0x6e]
  51b246:	fdiv   QWORD PTR [edi]
  51b248:	test   ebx,ebp
  51b24a:	shl    BYTE PTR ds:0xd144757d,cl
  51b250:	sbb    esi,DWORD PTR [ebp+eax*2+0x5edec265]
  51b257:	fdivr  QWORD PTR [ebx]
  51b259:	es pop esp
  51b25b:	push   esp
  51b25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b25d:	rol    DWORD PTR [esi],1
  51b25f:	call   0x2facfae2
  51b264:	jbe    0x51b20b
  51b266:	ror    edi,0xaa
  51b269:	jmp    0x6f19:0xd7736de5
  51b270:	not    DWORD PTR [esi+0x14fddde2]
  51b276:	out    dx,al
  51b277:	mov    ebx,0xf87f8832
  51b27c:	cmp    eax,0x218ae786
  51b281:	mov    ds:0xd2292f8a,al
  51b286:	sbb    al,0xfb
  51b288:	cli    
  51b289:	cmp    eax,0xa7870675
  51b28e:	icebp  
  51b28f:	fsubr  st(3),st
  51b291:	xor    al,0x5
  51b293:	sub    al,0x76
  51b295:	push   0x26
  51b297:	add    ebp,0xe0079477
  51b29d:	dec    edi
  51b29e:	out    0x79,al
  51b2a0:	ins    DWORD PTR es:[edi],dx
  51b2a1:	aam    0x1e
  51b2a3:	test   DWORD PTR [esi+0x5c],edi
  51b2a6:	dec    edi
  51b2a7:	xchg   edx,eax
  51b2a8:	pop    ds
  51b2a9:	out    dx,al
  51b2aa:	(bad)  
  51b2ab:	mov    cl,0x58
  51b2ad:	rcr    DWORD PTR [edi+0x37],0xb9
  51b2b1:	push   edi
  51b2b2:	cmp    BYTE PTR [ecx+0x17],dh
  51b2b5:	xor    esi,DWORD PTR [esi-0x29717b75]
  51b2bb:	jae    0x51b318
  51b2bd:	adc    cl,BYTE PTR [edx-0x1c]
  51b2c0:	cmp    DWORD PTR [ebx+0x5f],esp
  51b2c3:	sahf   
  51b2c4:	dec    eax
  51b2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b2c6:	sbb    DWORD PTR [ebx+0x321e7f59],0x47d13f64
  51b2d0:	std    
  51b2d1:	mov    ds:0x509a8,eax
  51b2d6:	cmc    
  51b2d7:	iret   
  51b2d8:	jecxz  0x51b356
  51b2da:	hlt    
  51b2db:	lock push edx
  51b2dd:	ret    0x69ee
  51b2e0:	jne    0x51b29f
  51b2e2:	daa    
  51b2e3:	arpl   WORD PTR [eax+0x436635f4],bp
  51b2e9:	sbb    al,0xc4
  51b2eb:	xchg   ebx,eax
  51b2ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b2ed:	xor    BYTE PTR [ebp+eiz*2-0x65],cl
  51b2f1:	sub    DWORD PTR [edi+ecx*4+0x3d],ebp
  51b2f5:	jae    0x51b305
  51b2f7:	ins    BYTE PTR es:[edi],dx
  51b2f8:	mov    ebp,0xee41cb65
  51b2fd:	pop    edx
  51b2fe:	cmp    esi,DWORD PTR [ebp+0x1a]
  51b301:	push   ebx
  51b302:	inc    esi
  51b303:	add    eax,0x5dc97b23
  51b308:	mov    dh,0x49
  51b30a:	or     BYTE PTR [ebp+0x6eeaeefc],dh
  51b310:	out    0x53,al
  51b312:	(bad)  
  51b313:	in     eax,dx
  51b314:	sub    eax,0x7256ba10
  51b319:	sub    DWORD PTR [ecx+ecx*1-0x69],0x6212c1bc
  51b321:	int    0xd2
  51b323:	sub    BYTE PTR [ecx],dl
  51b325:	mov    esp,0x4516934f
  51b32a:	out    0x53,eax
  51b32c:	fistp  WORD PTR [ebx+ebx*2-0x5efc6ccc]
  51b333:	cld    
  51b334:	sub    ebx,DWORD PTR [ecx-0xab84522]
  51b33a:	mov    bl,0x15
  51b33c:	pop    esi
  51b33d:	je     0x51b3bb
  51b33f:	adc    esp,DWORD PTR [esi+ecx*2-0x36]
  51b343:	mov    al,0x5e
  51b345:	hlt    
  51b346:	lods   eax,DWORD PTR ds:[esi]
  51b347:	pop    ebp
  51b348:	punpckhdq mm6,QWORD PTR [edi]
  51b34b:	adc    al,0x5a
  51b34d:	ds mov ch,0x9a
  51b350:	inc    edi
  51b351:	test   al,0xd4
  51b353:	js     0x51b371
  51b355:	jg     0x51b378
  51b357:	push   0xffffffa9
  51b359:	sub    BYTE PTR [ebx],dh
  51b35b:	push   0x4b0e0bda
  51b360:	sbb    ebp,0x35
  51b363:	mov    cl,0x3e
  51b365:	xor    al,0x75
  51b367:	mov    eax,ebp
  51b369:	inc    edx
  51b36a:	xchg   ebp,eax
  51b36b:	mov    ch,0x3b
  51b36d:	imul   edi,DWORD PTR [eax+ebx*1-0x34c0f2a0],0xffffffc7
  51b375:	nop
  51b376:	xchg   ebp,ecx
  51b378:	xor    eax,0x81340c23
  51b37d:	pop    ebx
  51b37e:	loope  0x51b3d3
  51b380:	fsub   DWORD PTR [ecx+ebp*2-0x79f9e037]
  51b387:	add    BYTE PTR [ebx],0x71
  51b38a:	adc    DWORD PTR [eax],ebp
  51b38c:	les    esp,FWORD PTR [ebp+eax*2+0x7d]
  51b390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b391:	pop    edx
  51b392:	rcr    DWORD PTR [ecx],cl
  51b394:	sub    BYTE PTR [eax-0x1a],ch
  51b397:	in     eax,0x46
  51b399:	lds    ecx,FWORD PTR [esi+0x35d4b81e]
  51b39f:	les    eax,FWORD PTR [ecx]
  51b3a1:	ins    DWORD PTR es:[edi],dx
  51b3a2:	adc    ebp,edi
  51b3a4:	add    DWORD PTR [edi+0x6daf3ee0],0x4ad55c89
  51b3ae:	mov    edi,0xda784e98
  51b3b3:	daa    
  51b3b4:	cmp    eax,0x5c1f1bed
  51b3b9:	xchg   ecx,eax
  51b3ba:	in     al,0x87
  51b3bc:	mov    ss,WORD PTR [edi+0x1]
  51b3bf:	cmp    BYTE PTR [esi],al
  51b3c1:	pop    edx
  51b3c2:	loop   0x51b3f7
  51b3c4:	cwde   
  51b3c5:	sahf   
  51b3c6:	jo     0x51b350
  51b3c8:	push   ebp
  51b3c9:	or     dl,BYTE PTR [edi+0x3a]
  51b3cc:	clc    
  51b3cd:	and    ebx,DWORD PTR cs:[esi+ebp*4+0x5f]
  51b3d2:	pusha  
  51b3d3:	sub    bh,al
  51b3d5:	stos   DWORD PTR es:[edi],eax
  51b3d6:	fcmovbe st,st(1)
  51b3d8:	bound  ebx,QWORD PTR [ebx]
  51b3da:	xor    edx,ecx
  51b3dc:	js     0x51b456
  51b3de:	xor    BYTE PTR [edi+ebx*4-0x528eeb7c],bl
  51b3e5:	bound  esp,QWORD PTR [ecx+ecx*1-0x6e]
  51b3e9:	and    BYTE PTR [eax-0x10750ec6],ch
  51b3ef:	mov    WORD PTR ds:0x480fa548,?
  51b3f5:	sbb    eax,0xe57f1c5a
  51b3fa:	je     0x51b3a8
  51b3fc:	fs jmp 0x51b3e7
  51b3ff:	stos   BYTE PTR es:[edi],al
  51b400:	cmc    
  51b401:	scas   al,BYTE PTR es:[edi]
  51b402:	pop    edx
  51b403:	and    al,0xff
  51b405:	test   BYTE PTR [ecx+0x35619fa0],bl
  51b40b:	push   es
  51b40c:	cmp    bh,bh
  51b40e:	jecxz  0x51b3db
  51b410:	ss pop es
  51b412:	leave  
  51b413:	daa    
  51b414:	out    dx,eax
  51b415:	retf   0x26d0
  51b418:	sub    DWORD PTR [eax+0x14],0x793ceb37
  51b41f:	cwde   
  51b420:	test   BYTE PTR [ebx],cl
  51b422:	fsub   DWORD PTR [esi+ecx*1]
  51b425:	push   ss
  51b426:	jnp    0x51b3c8
  51b428:	or     BYTE PTR [edi+0x4e],0xdc
  51b42c:	fxch   st(4)
  51b42e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b42f:	sub    esp,0xffffffc5
  51b432:	sbb    esp,DWORD PTR [edx+0x4e]
  51b435:	mov    dl,0xd2
  51b437:	sub    al,0x1a
  51b439:	jge    0x51b42a
  51b43b:	(bad)  
  51b43c:	(bad)  
  51b43f:	enter  0x63b7,0xea
  51b443:	jbe    0x51b48b
  51b445:	pop    eax
  51b446:	or     al,0x5b
  51b448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b449:	sahf   
  51b44a:	jo     0x51b410
  51b44c:	imul   esp,DWORD PTR [edi],0xffffffbf
  51b44f:	jmp    0x51b4a1
  51b451:	pop    ss
  51b452:	imul   BYTE PTR [eax]
  51b454:	or     ch,ah
  51b456:	xor    ax,0xbf85
  51b45a:	pop    edi
  51b45b:	push   0xffffffa0
  51b45d:	adc    ecx,esi
  51b45f:	shl    DWORD PTR [eax+0x2b1814b4],1
  51b465:	mov    edx,0xed732272
  51b46a:	push   ecx
  51b46b:	mov    ds:0x624ab92b,al
  51b470:	gs pop esp
  51b472:	inc    esp
  51b473:	jno    0x51b404
  51b475:	jecxz  0x51b41a
  51b477:	push   eax
  51b478:	std    
  51b479:	mov    dh,0x98
  51b47b:	push   ebx
  51b47c:	or     DWORD PTR [eax+0x3f677056],0x31
  51b483:	loopne 0x51b4a6
  51b485:	mov    ch,0x37
  51b487:	out    dx,eax
  51b488:	mov    DWORD PTR [edx-0x7d300e9a],esi
  51b48e:	retf   
  51b48f:	add    ecx,DWORD PTR [edi]
  51b491:	cli    
  51b492:	fs loop 0x51b424
  51b495:	rol    BYTE PTR [ebp+0x76],1
  51b498:	and    BYTE PTR [eax],dh
  51b49a:	mov    BYTE PTR [edx-0x4eeb97a5],ah
  51b4a0:	pop    edi
  51b4a1:	addr16 sbb eax,0x32dbd663
  51b4a7:	xchg   edx,eax
  51b4a8:	jo     0x51b47d
  51b4aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b4ab:	loop   0x51b44f
  51b4ad:	xchg   esi,eax
  51b4ae:	in     eax,0xcf
  51b4b0:	vmaxps ymm5,ymm7,ymm0
  51b4b4:	and    al,0x5d
  51b4b6:	sbb    ebx,ebp
  51b4b8:	jl     0x51b529
  51b4ba:	and    ebp,edi
  51b4bc:	pop    ss
  51b4bd:	pop    ecx
  51b4be:	rol    DWORD PTR [eax-0x33ee2979],cl
  51b4c4:	push   esp
  51b4c5:	in     al,dx
  51b4c6:	xor    bh,BYTE PTR [edi+0x1b]
  51b4c9:	push   ss
  51b4ca:	ficomp DWORD PTR ds:0xf4c28567
  51b4d0:	cs jle 0x51b4db
  51b4d3:	aaa    
  51b4d4:	sub    ebp,ebp
  51b4d6:	ret    
  51b4d7:	lods   al,BYTE PTR ds:[esi]
  51b4d8:	xor    DWORD PTR [edx+0x105d8fd],esi
  51b4de:	stos   BYTE PTR es:[edi],al
  51b4df:	ins    DWORD PTR es:[edi],dx
  51b4e0:	push   0x1e
  51b4e2:	aad    0xd2
  51b4e4:	test   eax,0x27357858
  51b4e9:	cmp    BYTE PTR [eax-0x396ad384],cl
  51b4ef:	inc    ebp
  51b4f0:	mov    ch,cl
  51b4f2:	lods   eax,DWORD PTR ds:[esi]
  51b4f3:	push   es
  51b4f4:	adc    BYTE PTR [eax],cl
  51b4f6:	push   ds
  51b4f7:	jnp    0x51b53b
  51b4f9:	pop    ebx
  51b4fa:	add    BYTE PTR [ebx],bh
  51b4fc:	jo     0x51b571
  51b4fe:	je     0x51b55b
  51b500:	cmp    esp,edi
  51b502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51b503:	xlat   BYTE PTR ds:[ebx]
  51b504:	aad    0xfb
  51b506:	stos   DWORD PTR es:[di],eax
  51b508:	and    eax,0x88bfbaa6
  51b50d:	cmp    eax,0xb898c6b9
  51b512:	cmp    al,0xa5
  51b514:	add    eax,0xcbfa6d45
  51b519:	adc    DWORD PTR [edx+0x415b8f1f],ebp
  51b51f:	stos   DWORD PTR es:[edi],eax
  51b520:	mov    edx,0xa7411225
  51b525:	mov    ds:0x1abbc506,eax
  51b52a:	cmc    
  51b52b:	add    eax,0x6de98913
  51b530:	leave  
  51b531:	nop
  51b532:	jg     0x51b573
  51b534:	xchg   edx,eax
  51b535:	push   0x4ab35f54
  51b53a:	test   al,0x12
  51b53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b53d:	rcr    esp,0x28
  51b540:	jmp    0x51b560
  51b542:	(bad)  [ebx+edi*4+0x76868408]
  51b549:	sbb    DWORD PTR [esi],edx
  51b54b:	and    DWORD PTR [edx-0x11],ebp
  51b54e:	inc    ecx
  51b54f:	mov    WORD PTR [eax+0x38a550eb],ds
  51b555:	mov    ch,0x61
  51b557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b558:	rcl    DWORD PTR [eax],1
  51b55a:	sbb    edx,DWORD PTR [edx+eiz*8-0x61]
  51b55e:	mov    ds:0x6a1669ff,al
  51b563:	cmp    eax,0x3e7bec1a
  51b568:	int    0xc1
  51b56a:	inc    ebp
  51b56b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b56c:	je     0x51b527
  51b56e:	add    BYTE PTR [edi+0x1b9a92d2],bl
  51b574:	xchg   ebp,eax
  51b575:	clc    
  51b576:	mov    fs,WORD PTR [eax-0x7a1c7a45]
  51b57c:	aam    0x1c
  51b57e:	jnp    0x51b5a5
  51b580:	mov    edi,0xd1a3800d
  51b585:	gs jle 0x51b569
  51b588:	push   eax
  51b589:	jne    0x51b50d
  51b58b:	inc    esi
  51b58c:	xchg   edx,ebx
  51b58e:	int3   
  51b58f:	dec    edx
  51b590:	mov    esp,0xe426cd2
  51b595:	push   eax
  51b596:	cwde   
  51b597:	mov    DWORD PTR [ecx+0x5e0bcab9],edx
  51b59d:	sbb    BYTE PTR [eax],dl
  51b59f:	jmp    0x79f8:0xae982153
  51b5a6:	shl    BYTE PTR [edx],1
  51b5a8:	loop   0x51b5f6
  51b5aa:	retf   0xf320
  51b5ad:	stos   BYTE PTR es:[edi],al
  51b5ae:	cmc    
  51b5af:	aam    0x40
  51b5b1:	shl    BYTE PTR [edi],0x3b
  51b5b4:	mov    dl,0x51
  51b5b6:	in     eax,0x1c
  51b5b8:	in     al,dx
  51b5b9:	mov    ebp,0x38faf7a9
  51b5be:	je     0x51b57e
  51b5c0:	xlat   BYTE PTR ds:[ebx]
  51b5c1:	add    DWORD PTR [ebp-0x4f801e4c],edi
  51b5c7:	inc    esp
  51b5c8:	xchg   esi,eax
  51b5c9:	daa    
  51b5ca:	and    al,0x65
  51b5cc:	cdq    
  51b5cd:	std    
  51b5ce:	sahf   
  51b5cf:	inc    esi
  51b5d0:	leave  
  51b5d1:	adc    al,BYTE PTR [ebp+0x104f2c41]
  51b5d7:	out    dx,eax
  51b5d8:	rcl    DWORD PTR [ebx+0x4],1
  51b5db:	xchg   esi,eax
  51b5dc:	lods   eax,DWORD PTR ds:[esi]
  51b5dd:	xchg   ecx,eax
  51b5de:	add    eax,0xbe70254e
  51b5e3:	mov    eax,0x3d4c6fca
  51b5e8:	sub    DWORD PTR [ebp+0x4f],ebx
  51b5eb:	inc    edx
  51b5ec:	hlt    
  51b5ed:	cmp    DWORD PTR [edi-0x59],eax
  51b5f0:	adc    bl,bh
  51b5f2:	(bad)  [eax]
  51b5f4:	xchg   bh,dl
  51b5f6:	push   eax
  51b5f7:	push   ss
  51b5f8:	jmp    0x51b648
  51b5fa:	mov    ebp,0xb23fa67b
  51b5ff:	sbb    ecx,DWORD PTR [ebp+0x2c]
  51b602:	pop    eax
  51b603:	ret    0xe242
  51b606:	xor    dl,ah
  51b608:	pop    ebx
  51b609:	jnp    0x51b641
  51b60b:	add    BYTE PTR [esi+ebp*8+0x5249e858],ch
  51b612:	push   eax
  51b613:	add    DWORD PTR [ecx],ebx
  51b615:	sahf   
  51b616:	xchg   esi,eax
  51b617:	cdq    
  51b618:	cmp    ebp,DWORD PTR ds:0x9d4e1663
  51b61e:	jl     0x51b5bb
  51b620:	jae    0x51b63a
  51b622:	stc    
  51b623:	or     al,0xb
  51b625:	jle    0x51b5d5
  51b627:	addr16 push ebx
  51b629:	sub    dh,bl
  51b62b:	test   DWORD PTR [ecx+edi*2-0xb287dc5],ebp
  51b632:	jmp    0xd96a050e
  51b637:	mov    ebx,0x925a03be
  51b63c:	retf   
  51b63d:	mul    ah
  51b63f:	cmp    al,0x71
  51b641:	fild   QWORD PTR [ecx]
  51b643:	dec    eax
  51b644:	std    
  51b645:	fs sub al,al
  51b648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51b649:	add    al,0xce
  51b64b:	adc    eax,edi
  51b64d:	jbe    0x51b60f
  51b64f:	push   es
  51b650:	mov    esi,0xf01583a4
  51b655:	or     edi,edi
  51b657:	lahf   
  51b658:	dec    DWORD PTR [ecx]
  51b65a:	in     eax,0xed
  51b65c:	mov    eax,ds:0x69053641
  51b661:	add    dl,bl
  51b663:	cmp    al,0x5f
  51b665:	cmc    
  51b666:	or     ch,BYTE PTR [edi+0xc]
  51b669:	pusha  
  51b66a:	out    0xd3,eax
  51b66c:	fldcw  WORD PTR [edi+0x71964807]
  51b672:	cmp    BYTE PTR [edx-0x59],al
  51b675:	pop    eax
  51b676:	enter  0x21cb,0x32
  51b67a:	adc    BYTE PTR [ecx],bh
  51b67c:	xor    al,0xa
  51b67e:	jmp    0x51b6e6
  51b680:	js     0x51b6ba
  51b682:	jmp    0xac91a974
  51b687:	imul   ecx,DWORD PTR [edi],0x60a24381
  51b68d:	add    BYTE PTR [ebx+0x43f90b8e],ch
  51b693:	xchg   ebp,eax
  51b694:	sub    ecx,DWORD PTR [esi+0x7]
  51b697:	(bad)  
  51b698:	shl    DWORD PTR [ebx],cl
  51b69a:	fiadd  WORD PTR [edi]
  51b69c:	ret    
  51b69d:	dec    esi
  51b69e:	push   esi
  51b69f:	adc    DWORD PTR [esi+0x6b],ebp
  51b6a2:	pop    eax
  51b6a3:	out    0xed,eax
  51b6a5:	ret    
  51b6a6:	xor    BYTE PTR [edi+ebp*8],bl
  51b6a9:	daa    
  51b6aa:	shl    BYTE PTR [edx-0x6d4a9263],0xb5
  51b6b1:	cdq    
  51b6b2:	rcl    BYTE PTR [ecx+0x46db2770],cl
  51b6b8:	ja     0x51b729
  51b6ba:	aaa    
  51b6bb:	int    0x85
  51b6bd:	and    eax,0xb11dc77a
  51b6c2:	das    
  51b6c3:	mov    eax,0x96869085
  51b6c8:	lods   al,BYTE PTR ds:[esi]
  51b6c9:	or     DWORD PTR [esi-0x22],edx
  51b6cc:	int3   
  51b6cd:	xor    eax,0xa59969da
  51b6d2:	dec    ecx
  51b6d3:	or     eax,0xfd90d5f6
  51b6d8:	hlt    
  51b6d9:	pop    esi
  51b6da:	add    dh,BYTE PTR [esi+0x2e]
  51b6dd:	inc    edx
  51b6de:	dec    edx
  51b6df:	aaa    
  51b6e0:	cli    
  51b6e1:	addr16 mov ds:0x1f4e,al
  51b6e5:	aaa    
  51b6e6:	and    al,0x8f
  51b6e8:	jb     0x51b718
  51b6ea:	in     al,dx
  51b6eb:	push   ds
  51b6ec:	sahf   
  51b6ed:	(bad)  
  51b6ee:	fidivr WORD PTR [ebx]
  51b6f0:	sahf   
  51b6f1:	stc    
  51b6f2:	jo     0x51b6fc
  51b6f4:	sar    DWORD PTR [ecx],1
  51b6f6:	xchg   esp,eax
  51b6f7:	cmp    bh,BYTE PTR ds:0x1789c20a
  51b6fd:	jns    0x51b729
  51b6ff:	push   eax
  51b700:	arpl   bp,bp
  51b702:	cli    
  51b703:	fcomp  st(7)
  51b705:	loop   0x51b6b1
  51b707:	or     DWORD PTR [esi+0x6f1e9869],0xc9d3cb53
  51b711:	pop    esp
  51b712:	data16 xlat BYTE PTR ds:[bx]
  51b715:	(bad)  
  51b716:	push   esp
  51b717:	rcl    DWORD PTR [edx+0x7],1
  51b71a:	ins    DWORD PTR es:[edi],dx
  51b71b:	cwde   
  51b71c:	test   ch,ch
  51b71e:	pop    ecx
  51b71f:	xchg   ebx,eax
  51b720:	call   0xa0e6:0x391fd97f
  51b727:	cwde   
  51b728:	cld    
  51b729:	je     0x51b75a
  51b72b:	mov    dl,0x43
  51b72d:	and    BYTE PTR [edi],dh
  51b72f:	mov    BYTE PTR [ebx-0x2d],cl
  51b732:	xor    ebx,ecx
  51b734:	or     ch,bh
  51b736:	adc    edx,esi
  51b738:	inc    DWORD PTR [ecx-0x30]
  51b73b:	add    BYTE PTR [esi],al
  51b73d:	mov    BYTE PTR [edx-0x7c],ah
  51b740:	jno    0x51b6df
  51b742:	shl    DWORD PTR [ebp+0xdd8a553],cl
  51b748:	fnstcw WORD PTR [ecx+0x7dc7e9ae]
  51b74e:	xchg   ebx,eax
  51b74f:	out    0x2a,eax
  51b751:	or     al,0x96
  51b753:	pop    edi
  51b754:	mov    ds:0xb13fd9cf,eax
  51b759:	dec    eax
  51b75a:	in     al,0x37
  51b75c:	out    dx,eax
  51b75d:	(bad)  
  51b75e:	retf   0x1d00
  51b761:	pop    edi
  51b762:	(bad)  
  51b763:	sub    bh,BYTE PTR [ebp+0xb7e5cef]
  51b769:	jge    0x51b72d
  51b76b:	jnp    0x51b75f
  51b76d:	les    esp,FWORD PTR [edx+0x6aa98b44]
  51b773:	xchg   edx,eax
  51b774:	lea    ebp,[ebp-0x78930299]
  51b77a:	push   ebp
  51b77b:	pop    edx
  51b77c:	stc    
  51b77d:	sub    eax,0x7eb0a275
  51b782:	dec    eax
  51b783:	add    al,0x1
  51b785:	inc    ebx
  51b786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b787:	dec    edi
  51b788:	iret   
  51b789:	loope  0x51b760
  51b78b:	lock pushf 
  51b78d:	sub    BYTE PTR [eax],al
  51b78f:	xchg   BYTE PTR [eax],dh
  51b791:	add    esi,DWORD PTR [edx-0x4f]
  51b794:	xor    DWORD PTR [esi+0x51],0x74aaba23
  51b79b:	fild   WORD PTR [ebx-0x4a7bd3f5]
  51b7a1:	sbb    eax,0xfd35774b
  51b7a6:	sub    al,BYTE PTR [esi+edi*1]
  51b7a9:	or     ebx,DWORD PTR [edx]
  51b7ab:	push   esi
  51b7ac:	mov    bl,0xce
  51b7ae:	adc    DWORD PTR [edx+0x762b6af9],esp
  51b7b4:	icebp  
  51b7b5:	cdq    
  51b7b6:	cli    
  51b7b7:	nop
  51b7b8:	sub    esi,DWORD PTR [eax]
  51b7ba:	fild   DWORD PTR [esi]
  51b7bc:	ins    DWORD PTR es:[edi],dx
  51b7bd:	or     BYTE PTR [ebp-0x4d],cl
  51b7c0:	inc    eax
  51b7c1:	arpl   WORD PTR [ebp+0x46],sp
  51b7c4:	xor    BYTE PTR [ebx-0x1b133cfc],bl
  51b7ca:	popa   
  51b7cb:	icebp  
  51b7cc:	sbb    al,0xad
  51b7ce:	xchg   ecx,eax
  51b7cf:	popf   
  51b7d0:	lds    ebp,FWORD PTR [edx-0x50]
  51b7d3:	push   ecx
  51b7d4:	test   edi,0xc94cead5
  51b7da:	outs   dx,BYTE PTR ds:[esi]
  51b7db:	mov    edx,0xed32d127
  51b7e0:	xchg   ebx,eax
  51b7e1:	enter  0x8b9e,0xb0
  51b7e5:	cld    
  51b7e6:	jecxz  0x51b79e
  51b7e8:	jge    0x51b81e
  51b7ea:	bnd jno 0x51b7b4
  51b7ed:	add    BYTE PTR [edi+edi*1-0x26],0xaf
  51b7f2:	xor    eax,DWORD PTR [edx]
  51b7f4:	outs   dx,BYTE PTR ds:[esi]
  51b7f5:	test   BYTE PTR [edi-0x36],ah
  51b7f8:	stos   BYTE PTR es:[edi],al
  51b7f9:	jnp    0x51b7db
  51b7fb:	hlt    
  51b7fc:	call   0xe9bbf99
  51b801:	xchg   ecx,eax
  51b802:	mov    ebp,DWORD PTR [ecx]
  51b804:	cmp    eax,0x266aa944
  51b809:	lahf   
  51b80a:	adc    BYTE PTR [edx-0x687638a0],bh
  51b810:	mov    al,0xec
  51b812:	sbb    ebx,DWORD PTR [edx]
  51b814:	call   0x65f6:0xfb0b76c1
  51b81b:	mov    DWORD PTR [ebx+0x47719273],0x242af5cc
  51b825:	and    BYTE PTR [esi-0x51908484],0xc6
  51b82c:	mov    edx,0x36bd9135
  51b831:	dec    ebx
  51b832:	and    esi,ebx
  51b834:	push   ebx
  51b835:	pop    edx
  51b836:	daa    
  51b837:	pushf  
  51b838:	aad    0x75
  51b83a:	leave  
  51b83b:	addr16 jo 0x51b7d6
  51b83e:	xor    BYTE PTR [ebx],ah
  51b840:	add    esp,DWORD PTR [ebx]
  51b842:	repnz push edx
  51b844:	jb     0x51b8ba
  51b846:	xlat   BYTE PTR ds:[ebx]
  51b847:	mov    edx,0xd1d471d9
  51b84c:	nop
  51b84d:	xchg   esi,eax
  51b84e:	push   esi
  51b84f:	fild   DWORD PTR [ebx+0x2e]
  51b852:	mov    bl,0x51
  51b854:	or     eax,0xdf845b15
  51b859:	add    BYTE PTR [edi+0x3e164a1c],ah
  51b85f:	push   esi
  51b860:	mov    WORD PTR [esi-0x513d0069],fs
  51b866:	add    DWORD PTR [edx+edi*8],0xffffffce
  51b86a:	test   eax,0xc04a700
  51b86f:	or     al,0x3e
  51b871:	imul   ah
  51b873:	scas   al,BYTE PTR es:[edi]
  51b874:	jl     0x51b7fc
  51b876:	sbb    ebp,ebx
  51b878:	mov    WORD PTR [eax+edi*1],?
  51b87b:	push   eax
  51b87c:	and    ebp,DWORD PTR [ecx+ebx*1-0x4cb307a6]
  51b883:	cmp    dh,BYTE PTR [ebx-0x4bbe809d]
  51b889:	mov    eax,ds
  51b88b:	sti    
  51b88c:	rcr    esp,0x35
  51b88f:	jnp    0x51b845
  51b891:	cmc    
  51b892:	test   bl,0xc3
  51b895:	nop
  51b896:	hlt    
  51b897:	lods   al,BYTE PTR ds:[esi]
  51b898:	pushf  
  51b899:	cmp    ebp,edi
  51b89b:	(bad)  
  51b89c:	xor    BYTE PTR [ebp-0x7a],dl
  51b89f:	test   BYTE PTR [esi+0x73b8951d],dh
  51b8a5:	cmp    edi,esp
  51b8a7:	sub    DWORD PTR [edx-0x5d],esi
  51b8aa:	add    al,0xbf
  51b8ac:	movaps xmm3,XMMWORD PTR [ecx+0x60]
  51b8b0:	pop    esp
  51b8b1:	mov    bh,0x6a
  51b8b3:	(bad)  
  51b8b4:	cs jecxz 0x51b8e7
  51b8b7:	mov    ds:0x62f83ced,al
  51b8bc:	mov    edx,ecx
  51b8be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51b8bf:	icebp  
  51b8c0:	cmc    
  51b8c1:	adc    eax,0xf1ed9ce3
  51b8c6:	dec    edx
  51b8c7:	jmp    0x6e58bc0a
  51b8cc:	ret    0x7b80
  51b8cf:	xlat   BYTE PTR ds:[ebx]
  51b8d0:	test   eax,0xc31c72f1
  51b8d5:	arpl   WORD PTR [eax+0x6b],sp
  51b8d8:	mov    ecx,0x76ce5c52
  51b8dd:	icebp  
  51b8de:	and    eax,0xae096a86
  51b8e3:	fld    DWORD PTR [eax]
  51b8e5:	scas   eax,DWORD PTR es:[edi]
  51b8e6:	sub    dh,al
  51b8e8:	jmp    0x51b8d7
  51b8ea:	sbb    eax,0x1d49681c
  51b8ef:	stos   DWORD PTR es:[edi],eax
  51b8f0:	push   ss
  51b8f1:	xchg   esp,eax
  51b8f2:	push   cs
  51b8f3:	jle    0x51b8b3
  51b8f5:	jl     0x51b90c
  51b8f7:	dec    eax
  51b8f8:	push   ss
  51b8f9:	aas    
  51b8fa:	dec    ecx
  51b8fb:	jmp    0x51b8b5
  51b8fd:	mov    cl,0x69
  51b8ff:	(bad)  
  51b900:	rcl    BYTE PTR [esi+0x665a8101],cl
  51b906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b907:	cld    
  51b908:	clc    
  51b909:	pop    ss
  51b90a:	xor    BYTE PTR [ecx-0x56ff339f],dh
  51b910:	int    0xfb
  51b912:	dec    ecx
  51b913:	cld    
  51b914:	fstp   QWORD PTR [esi-0x5c2285ca]
  51b91a:	loopne 0x51b94c
  51b91c:	push   ecx
  51b91d:	cmp    al,0xba
  51b91f:	gs fwait
  51b921:	mov    edi,0xd8b42750
  51b926:	and    ecx,DWORD PTR [esi]
  51b928:	xor    esp,ebx
  51b92a:	sub    DWORD PTR [edx-0x1db0f834],0xdbf577d9
  51b934:	aam    0x80
  51b936:	mov    ch,0x52
  51b938:	call   0xe3ce:0xc9511f2d
  51b93f:	iret   
  51b940:	inc    ebx
  51b941:	mov    edx,0xb16710c8
  51b946:	in     al,dx
  51b947:	out    dx,eax
  51b948:	call   0xb3fcb648
  51b94d:	jb     0x51b95e
  51b94f:	lock hlt 
  51b951:	leave  
  51b952:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51b953:	fnstsw ax
  51b955:	add    eax,0xcaf384c5
  51b95a:	pop    esi
  51b95b:	test   eax,0x2258cf5a
  51b960:	pop    ecx
  51b961:	add    dh,BYTE PTR [ebp+edx*2+0x3a]
  51b965:	ja     0x51b942
  51b967:	pop    edi
  51b968:	add    DWORD PTR [eax],0x12
  51b96b:	fucomi st,st(5)
  51b96d:	and    ecx,ecx
  51b96f:	cli    
  51b970:	mov    ds:0x1b31449d,eax
  51b975:	mov    esp,0x68a19452
  51b97a:	aam    0xcc
  51b97c:	stos   DWORD PTR es:[edi],eax
  51b97d:	in     eax,0xd1
  51b97f:	shl    DWORD PTR [ebp-0x5e],cl
  51b982:	iret   
  51b983:	mov    dh,0x53
  51b985:	and    ebp,DWORD PTR [eax+0x57]
  51b988:	xor    eax,DWORD PTR [edx-0x47]
  51b98b:	ins    DWORD PTR es:[edi],dx
  51b98c:	xchg   edx,eax
  51b98d:	sti    
  51b98e:	and    eax,0xc1315b97
  51b993:	mov    dh,0x3e
  51b995:	cwde   
  51b996:	mov    al,ds:0x1cae3846
  51b99b:	cli    
  51b99c:	lods   al,BYTE PTR ds:[esi]
  51b99d:	and    DWORD PTR [esi+0xa23a71a],eax
  51b9a3:	outs   dx,BYTE PTR ds:[esi]
  51b9a4:	pop    edi
  51b9a5:	pop    ebp
  51b9a6:	jmp    FWORD PTR [edi-0x2fd10111]
  51b9ac:	outs   dx,BYTE PTR ds:[esi]
  51b9ad:	pop    esi
  51b9ae:	xchg   esi,eax
  51b9af:	ja     0x51ba28
  51b9b1:	outs   dx,BYTE PTR ds:[esi]
  51b9b2:	mov    DWORD PTR [ebx+0x384f969a],edx
  51b9b8:	xor    BYTE PTR [edx+0x29cbcfa],ah
  51b9be:	sbb    DWORD PTR [ebp-0x72],0x31111655
  51b9c5:	es nop
  51b9c7:	out    0x5f,eax
  51b9c9:	add    eax,0x47fb7c3e
  51b9ce:	lea    ecx,[eax-0x58]
  51b9d1:	push   esp
  51b9d2:	jl     0x51b9b9
  51b9d4:	call   0x5d87:0xbc6f9298
  51b9db:	cld    
  51b9dc:	mov    edi,0x312a55a9
  51b9e1:	andnps xmm5,XMMWORD PTR [eax+0x1cdeb9aa]
  51b9e8:	pop    ebp
  51b9ea:	cdq    
  51b9eb:	xor    al,BYTE PTR [ebx+ebx*1+0x3d]
  51b9ef:	inc    eax
  51b9f0:	test   al,0xc6
  51b9f2:	push   ds
  51b9f3:	retf   
  51b9f4:	cmp    DWORD PTR [ecx+0x18775544],esi
  51b9fa:	mov    dl,cl
  51b9fc:	push   cs
  51b9fd:	or     BYTE PTR [ebp+edx*8-0x7487a8c5],ch
  51ba04:	pop    ss
  51ba05:	jmp    0x4c6c5877
  51ba0a:	or     cl,BYTE PTR [ebp-0x7bd1bb22]
  51ba10:	sub    bl,BYTE PTR [eax*4-0x24e1272d]
  51ba17:	aad    0xf1
  51ba19:	push   esi
  51ba1a:	jge    0x51ba81
  51ba1c:	pop    ecx
  51ba1d:	stos   BYTE PTR es:[edi],al
  51ba1e:	fld    TBYTE PTR [eax+0x724751c4]
  51ba24:	pop    esi
  51ba25:	repz leave 
  51ba27:	xchg   esp,eax
  51ba28:	adc    ah,BYTE PTR [ebx]
  51ba2a:	shl    BYTE PTR [eax-0x278565b1],cl
  51ba30:	ss test al,0xaa
  51ba33:	sbb    ecx,edi
  51ba35:	cwde   
  51ba36:	retf   
  51ba37:	cs jnp 0x51ba2f
  51ba3a:	ds cwde 
  51ba3c:	or     ecx,DWORD PTR [ecx-0x19]
  51ba3f:	sbb    BYTE PTR [eax-0x7d5739d7],ch
  51ba45:	adc    DWORD PTR [esi],edx
  51ba47:	sub    DWORD PTR [ecx],edi
  51ba49:	out    dx,eax
  51ba4a:	rol    BYTE PTR [ebx+0x76],cl
  51ba4d:	dec    edi
  51ba4e:	cmp    DWORD PTR [ecx+eax*8],ebp
  51ba51:	out    0x7e,eax
  51ba53:	inc    esp
  51ba54:	sbb    dl,BYTE PTR [edi]
  51ba56:	push   0x78bc2284
  51ba5b:	hlt    
  51ba5c:	xor    ebx,edi
  51ba5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51ba5f:	xchg   BYTE PTR [eax+0x72],dl
  51ba62:	xor    DWORD PTR [esp+eax*1+0x170c5529],ebp
  51ba69:	mov    eax,0xe2d7001b
  51ba6e:	pop    eax
  51ba6f:	dec    esi
  51ba70:	push   eax
  51ba71:	mov    ds,WORD PTR [ebx+0x60]
  51ba74:	push   ebp
  51ba75:	leave  
  51ba76:	push   esi
  51ba77:	mov    al,ds:0xbd0ddf50
  51ba7c:	or     eax,0x32df4f35
  51ba81:	sbb    BYTE PTR [eax+edi*8],bh
  51ba84:	jbe    0x51ba78
  51ba86:	or     eax,0xac9152a0
  51ba8b:	cmp    al,0xb5
  51ba8e:	jno    0x51bae2
  51ba90:	jl     0x51bae3
  51ba92:	xchg   ebp,eax
  51ba93:	lea    edi,[esi]
  51ba95:	outs   dx,DWORD PTR ds:[esi]
  51ba96:	fisttp QWORD PTR ds:0xc18d
  51ba9b:	push   0xffffff9d
  51ba9d:	dec    ecx
  51ba9e:	mov    bh,0x19
  51baa0:	jg     0x51bb15
  51baa2:	jecxz  0x51baa1
  51baa4:	enter  0x46ac,0x11
  51baa8:	retf   
  51baa9:	pop    ss
  51baaa:	pop    ebx
  51baab:	lock pop ds
  51baad:	cwde   
  51baae:	mov    esi,0x726161d1
  51bab3:	aad    0x89
  51bab5:	test   eax,0xa6bcfb37
  51baba:	mov    cl,0x8a
  51babc:	cmovbe esi,DWORD PTR ds:0x20a470b6
  51bac3:	repz in al,dx
  51bac5:	in     al,dx
  51bac6:	aas    
  51bac7:	lahf   
  51bac8:	mov    ah,0x5e
  51baca:	in     eax,dx
  51bacb:	repz (bad) 
  51bacd:	or     edi,eax
  51bacf:	cdq    
  51bad0:	push   0x19
  51bad2:	cmp    cl,cl
  51bad4:	stos   BYTE PTR es:[edi],al
  51bad5:	enter  0xc8e0,0x3a
  51bad9:	adc    BYTE PTR [ebp+0x6c3173fd],bh
  51badf:	jmp    0x51bb3e
  51bae1:	shr    DWORD PTR [esi-0x1be5499],cl
  51bae7:	push   edi
  51bae8:	icebp  
  51bae9:	test   ecx,ebx
  51baeb:	add    eax,0xaec78cc
  51baf0:	mov    dh,0x84
  51baf2:	add    ch,BYTE PTR [eax-0x27]
  51baf5:	pop    esp
  51baf6:	pop    ebx
  51baf7:	dec    ecx
  51baf8:	push   eax
  51baf9:	ret    0x9d69
  51bafc:	sbb    eax,0x97624b83
  51bb01:	fsubr  DWORD PTR [edi-0x65]
  51bb04:	nop
  51bb05:	mov    DWORD PTR [eax],esp
  51bb07:	pop    edi
  51bb08:	or     eax,0x3144dd72
  51bb0d:	outs   dx,DWORD PTR ds:[esi]
  51bb0e:	sub    BYTE PTR [edi-0x65],ch
  51bb11:	out    0x57,al
  51bb13:	shl    cl,1
  51bb15:	shl    BYTE PTR [edi+0x270ee14c],0xf1
  51bb1c:	dec    eax
  51bb1d:	xchg   ecx,eax
  51bb1e:	xchg   esi,eax
  51bb1f:	sub    DWORD PTR [edi],edx
  51bb21:	jo     0x51bab2
  51bb23:	loope  0x51bab1
  51bb25:	aas    
  51bb26:	mov    DWORD PTR [esi],edi
  51bb28:	pop    ss
  51bb29:	repnz ss mov edx,cs
  51bb2d:	jbe    0x51bb80
  51bb2f:	retf   
  51bb30:	and    BYTE PTR [ebx],cl
  51bb32:	xchg   ebp,eax
  51bb33:	mov    esi,0xdcf7d07d
  51bb38:	jo     0x51bb2d
  51bb3a:	ins    DWORD PTR es:[edi],dx
  51bb3b:	pop    esp
  51bb3c:	sub    BYTE PTR [eax+0x6b],0x5a
  51bb40:	loop   0x51bb23
  51bb42:	xchg   edi,eax
  51bb43:	push   cs
  51bb44:	jns    0x51bba4
  51bb46:	daa    
  51bb47:	sbb    al,0xb0
  51bb49:	in     al,0x7d
  51bb4b:	mov    eax,0x4cd843e7
  51bb50:	in     al,0x27
  51bb52:	mov    ah,0xfb
  51bb54:	nop
  51bb55:	daa    
  51bb56:	mov    WORD PTR [esi+ebx*8-0x2b],ss
  51bb5a:	std    
  51bb5b:	jg     0x51bb0d
  51bb5d:	das    
  51bb5e:	ds jae 0x51bb9a
  51bb61:	inc    DWORD PTR [edi+0x44de2dc8]
  51bb67:	adc    DWORD PTR [eax-0x4f53ec66],edx
  51bb6d:	pop    ebx
  51bb6e:	add    eax,0xf64d00c5
  51bb73:	repnz popf 
  51bb75:	push   cs
  51bb76:	adc    al,0xaf
  51bb78:	je     0x51bbd8
  51bb7a:	pushf  
  51bb7b:	cmp    eax,0x38cc3584
  51bb80:	pusha  
  51bb81:	dec    ecx
  51bb82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51bb83:	add    esp,DWORD PTR [ecx]
  51bb85:	xchg   ecx,eax
  51bb86:	popa   
  51bb87:	shr    DWORD PTR [ebp+0x7e18e39e],0xec
  51bb8e:	in     al,0xf0
  51bb90:	pop    ecx
  51bb91:	sub    al,BYTE PTR [edx-0x5d04edf9]
  51bb97:	mov    eax,ds:0xa4927a25
  51bb9c:	jecxz  0x51bb44
  51bb9e:	loope  0x51bbef
  51bba0:	pusha  
  51bba1:	gs std 
  51bba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51bba4:	push   esi
  51bba5:	sub    edi,edx
  51bba7:	out    0xc9,eax
  51bba9:	shl    DWORD PTR [edx],1
  51bbab:	test   al,0x77
  51bbad:	cmp    BYTE PTR [eax-0x17],bh
  51bbb0:	in     al,0x87
  51bbb2:	ins    DWORD PTR es:[edi],dx
  51bbb3:	shl    BYTE PTR [esi-0x79a121b2],0x25
  51bbba:	mov    dl,al
  51bbbc:	fbstp  TBYTE PTR [ebp-0x6832d715]
  51bbc2:	dec    eax
  51bbc3:	cmp    edi,DWORD PTR [esi-0x77]
  51bbc6:	or     BYTE PTR [ecx],dh
  51bbc8:	or     ah,bh
  51bbca:	call   0x99249f01
  51bbcf:	mov    ebx,0xb9acd421
  51bbd4:	push   edi
  51bbd5:	cmp    WORD PTR [ebx+0x43],dx
  51bbd9:	icebp  
  51bbda:	xor    eax,0x77e0cc59
  51bbdf:	scas   al,BYTE PTR es:[edi]
  51bbe0:	in     eax,0x11
  51bbe2:	cmp    ebx,esi
  51bbe4:	pop    ebp
  51bbe5:	push   esi
  51bbe6:	inc    edx
  51bbe7:	addr16 retf 
  51bbe9:	push   es
  51bbea:	test   BYTE PTR [eax-0x74704224],dh
  51bbf0:	xchg   BYTE PTR [ebp+0x79],ah
  51bbf3:	bound  edi,QWORD PTR [ebp-0x56752810]
  51bbf9:	leave  
  51bbfa:	fidivr WORD PTR [edi]
  51bbfc:	xchg   esp,eax
  51bbfd:	push   ds
  51bbfe:	jae    0x51bb90
  51bc00:	fcomp  st(4)
  51bc02:	inc    esi
  51bc03:	mov    ds:0x565ce4d,eax
  51bc08:	or     eax,0xc47ed423
  51bc0d:	adc    al,0x3f
  51bc0f:	xor    eax,0x2ea1f4e0
  51bc14:	jecxz  0x51bbf6
  51bc16:	inc    ebx
  51bc17:	xchg   edx,eax
  51bc18:	ret    
  51bc19:	or     ah,bh
  51bc1b:	scas   al,BYTE PTR es:[edi]
  51bc1c:	jl     0x51bc21
  51bc1e:	xor    al,0xcf
  51bc20:	and    al,0x28
  51bc22:	sbb    BYTE PTR [ebp-0x3acc4426],dl
  51bc28:	push   0xffffff9e
  51bc2a:	mov    ?,esi
  51bc2c:	add    DWORD PTR [esp+ecx*4],ecx
  51bc2f:	xor    DWORD PTR [ebp+ecx*1-0x61],edx
  51bc33:	fidivr DWORD PTR ds:0x4a628241
  51bc39:	ss cmc 
  51bc3b:	fwait
  51bc3c:	inc    ebp
  51bc3d:	dec    esi
  51bc3e:	sahf   
  51bc3f:	xlat   BYTE PTR ds:[ebx]
  51bc40:	cmp    dh,BYTE PTR [ebp+0x1f6e3813]
  51bc46:	aaa    
  51bc47:	pusha  
  51bc48:	mov    al,ds:0xeb5b01d1
  51bc4d:	cmc    
  51bc4e:	jge    0x51bc85
  51bc50:	fwait
  51bc51:	pop    ds
  51bc52:	mov    ecx,DWORD PTR [ebp-0x52064907]
  51bc58:	sahf   
  51bc59:	xchg   BYTE PTR ds:0xad19816d,bl
  51bc5f:	stos   DWORD PTR es:[edi],eax
  51bc60:	dec    ebx
  51bc61:	ss (bad) 
  51bc63:	mov    ah,0xda
  51bc65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bc66:	add    dh,BYTE PTR [ebp-0x175957ba]
  51bc6c:	mov    al,0xae
  51bc6e:	sar    esp,0xf4
  51bc71:	add    esp,ebp
  51bc73:	dec    edi
  51bc74:	jmp    0xde70edf7
  51bc79:	push   0xbab95de0
  51bc7e:	dec    ebp
  51bc7f:	adc    DWORD PTR [eax+0x6e],ebx
  51bc82:	xlat   BYTE PTR ds:[ebx]
  51bc83:	inc    eax
  51bc84:	sbb    DWORD PTR [ebx-0x55],0x36f3bbc8
  51bc8b:	(bad)  
  51bc8c:	jmp    0x51bc95
  51bc8e:	(bad)  
  51bc8f:	pop    ds
  51bc90:	jmp    0xe0ec6433
  51bc95:	hlt    
  51bc96:	xchg   esi,eax
  51bc97:	inc    ecx
  51bc98:	inc    eax
  51bc99:	cdq    
  51bc9a:	(bad)  
  51bc9b:	pop    ds
  51bc9c:	cmc    
  51bc9d:	and    eax,0xf4c6f2e9
  51bca2:	push   edx
  51bca3:	push   ebx
  51bca4:	cmp    al,0x7a
  51bca6:	daa    
  51bca7:	mov    al,ds:0x85fc096b
  51bcac:	ja     0x51bcdc
  51bcae:	mov    esp,0x6889f8b1
  51bcb3:	inc    esp
  51bcb4:	inc    esp
  51bcb5:	lods   al,BYTE PTR ds:[esi]
  51bcb6:	popf   
  51bcb7:	neg    BYTE PTR [ebx+0x0]
  51bcba:	das    
  51bcbb:	dec    esp
  51bcbc:	mov    dh,0xaf
  51bcbe:	aas    
  51bcbf:	mov    DWORD PTR [edx+0x4d6e3953],esi
  51bcc5:	loop   0x51bc4a
  51bcc7:	cmp    al,0xee
  51bcc9:	mov    WORD PTR ds:0x1e62d420,es
  51bccf:	mov    ah,0x89
  51bcd1:	call   0x3341:0xc8ebdb92
  51bcd8:	push   ecx
  51bcd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51bcda:	inc    edi
  51bcdb:	stc    
  51bcdc:	jbe    0x51bc97
  51bcde:	dec    ecx
  51bcdf:	cli    
  51bce0:	dec    esp
  51bce1:	inc    esi
  51bce2:	sub    edi,DWORD PTR [ecx-0x6c]
  51bce5:	inc    eax
  51bce6:	and    eax,0xf7fa607d
  51bceb:	inc    BYTE PTR [ecx+ecx*8-0x32]
  51bcef:	pushf  
  51bcf0:	add    DWORD PTR [edx-0x5a],0xffffffdd
  51bcf4:	pop    esp
  51bcf5:	push   ss
  51bcf6:	je     0x51bd29
  51bcf8:	out    0x78,al
  51bcfa:	dec    edi
  51bcfb:	test   eax,0xd60ef160
  51bd00:	jg     0x51bd55
  51bd02:	push   0x733b6bb6
  51bd07:	fimul  DWORD PTR [eax+0x6]
  51bd0a:	jl     0x51bccc
  51bd0c:	cmp    ah,BYTE PTR [esi-0x1f]
  51bd0f:	outs   dx,BYTE PTR ds:[esi]
  51bd10:	sbb    BYTE PTR ds:0xfb31e9a1,dh
  51bd16:	outs   dx,BYTE PTR ds:[esi]
  51bd17:	xchg   edx,eax
  51bd18:	add    eax,0xa410e59c
  51bd1d:	and    DWORD PTR [ecx-0xa57cfba],0xc7d8250d
  51bd27:	or     esi,esp
  51bd29:	aas    
  51bd2a:	loopne 0x51bcc7
  51bd2c:	sbb    al,0x8f
  51bd2e:	jl     0x51bd63
  51bd30:	loop   0x51bd22
  51bd32:	jb     0x51bd82
  51bd34:	cmc    
  51bd35:	sub    BYTE PTR [edi*1-0x2f011a03],al
  51bd3c:	push   ss
  51bd3d:	lahf   
  51bd3e:	lods   eax,DWORD PTR ds:[esi]
  51bd3f:	sbb    DWORD PTR [esi+ebx*8+0x60],0xc6ad6b4
  51bd47:	xchg   ebp,eax
  51bd48:	call   0x7092:0xdab55289
  51bd4f:	jmp    0x51bd64
  51bd51:	mov    ds:0x9683af4e,al
  51bd56:	fwait
  51bd57:	rcr    BYTE PTR ds:0xe204fcb7,cl
  51bd5d:	clc    
  51bd5e:	(bad)  
  51bd5f:	out    dx,al
  51bd60:	test   dl,bh
  51bd62:	pop    ss
  51bd63:	rol    DWORD PTR es:[edi+0x470d26a9],cl
  51bd6a:	dec    ebp
  51bd6b:	add    al,0x84
  51bd6d:	push   ebx
  51bd6e:	xchg   edx,eax
  51bd6f:	mov    bl,0xd4
  51bd71:	pop    esp
  51bd72:	cmp    DWORD PTR [ebx],edi
  51bd74:	fsubrp st(0),st
  51bd76:	loopne 0x51bd9a
  51bd78:	in     al,0x63
  51bd7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51bd7b:	es sbb eax,0xc12dc3bd
  51bd81:	push   edi
  51bd82:	rcr    BYTE PTR [ebx+0x23d2e4eb],1
  51bd88:	ss mov dh,0x80
  51bd8b:	cmp    al,0x4
  51bd8d:	scas   al,BYTE PTR es:[edi]
  51bd8e:	mov    dl,0xd5
  51bd90:	pop    esi
  51bd91:	outs   dx,BYTE PTR ds:[esi]
  51bd92:	iret   
  51bd93:	loope  0x51bd28
  51bd95:	inc    esp
  51bd96:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  51bd98:	push   ss
  51bd99:	mov    bh,0x92
  51bd9b:	pusha  
  51bd9c:	mov    eax,0x1126eac7
  51bda1:	loope  0x51be14
  51bda3:	jle    0x51bd30
  51bda5:	std    
  51bda6:	mov    al,0x39
  51bda8:	nop
  51bda9:	adc    esp,DWORD PTR [esi]
  51bdab:	and    al,0x84
  51bdad:	mov    ebp,0x3101c9d5
  51bdb2:	xchg   edx,eax
  51bdb3:	mov    DWORD PTR [eax-0x7409d906],esp
  51bdb9:	outs   dx,DWORD PTR ds:[esi]
  51bdba:	jge    0x51bd8f
  51bdbc:	gs cmp al,0x4f
  51bdbf:	inc    esi
  51bdc0:	mov    ah,0x1e
  51bdc2:	scas   al,BYTE PTR es:[edi]
  51bdc3:	adc    cl,bl
  51bdc5:	imul   esi,DWORD PTR [eax+0x1d7cbdda],0xffffffc6
  51bdcc:	add    dl,bl
  51bdce:	addr16 inc esp
  51bdd0:	and    edi,DWORD PTR [edx-0x49682e29]
  51bdd6:	jle    0x51be4f
  51bdd8:	jmp    0x51bd8a
  51bdda:	js     0x51bd83
  51bddc:	xchg   DWORD PTR [edx+0x1dcf7072],esp
  51bde2:	adc    al,0x34
  51bde4:	sahf   
  51bde5:	and    BYTE PTR [ebx-0x63],bl
  51bde8:	or     ch,BYTE PTR [esi+0x77bc3b33]
  51bdee:	popa   
  51bdef:	scas   eax,DWORD PTR es:[edi]
  51bdf0:	inc    edi
  51bdf1:	cmp    DWORD PTR [esi+0x6b],0x96b168d5
  51bdf8:	mov    dh,0x3c
  51bdfa:	push   esi
  51bdfb:	or     edx,ebx
  51bdfd:	shl    BYTE PTR [ebx+esi*4],cl
  51be00:	fwait
  51be01:	add    dl,bh
  51be03:	sbb    ch,BYTE PTR [edx]
  51be05:	jns    0x51be66
  51be07:	imul   ecx,DWORD PTR ds:0xc8d9ef2e,0xb3669a41
  51be11:	or     ecx,esp
  51be13:	jg     0x51bddb
  51be15:	mov    al,ds:0x410c2f2d
  51be1a:	out    0x95,al
  51be1c:	or     DWORD PTR [esi+ecx*4],esp
  51be1f:	sahf   
  51be20:	mov    DWORD PTR [ebx+0x74],edi
  51be23:	pop    esi
  51be24:	push   0x78
  51be26:	ss push esp
  51be28:	(bad)
  51be2b:	pop    es
  51be2c:	bound  edi,QWORD PTR [eax-0x5b2d724e]
  51be32:	lahf   
  51be33:	retf   
  51be34:	sbb    ecx,DWORD PTR cs:[eax]
  51be37:	retf   
  51be38:	mov    cs,esp
  51be3a:	push   0xa0c46cd9
  51be3f:	and    BYTE PTR [ebp-0x58],bh
  51be42:	inc    ebx
  51be43:	dec    esi
  51be44:	or     DWORD PTR [edx-0x38a50129],ecx
  51be4a:	js     0x51bdd5
  51be4c:	neg    DWORD PTR [ebx+0x2a]
  51be4f:	mov    ebp,0x650592cd
  51be54:	add    edi,DWORD PTR [ebp+eax*4+0x2093290e]
  51be5b:	jne    0x51be15
  51be5d:	in     eax,dx
  51be5e:	shr    DWORD PTR [esi+eiz*8],0x39
  51be62:	loopne 0x51be9b
  51be64:	scas   al,BYTE PTR es:[edi]
  51be65:	mov    al,ds:0xb736cf3d
  51be6a:	jge    0x51be5f
  51be6c:	lock sub ecx,esi
  51be6f:	dec    ebp
  51be70:	sbb    ebx,DWORD PTR [edi-0x43]
  51be73:	rcl    DWORD PTR [ebx+0x14],cl
  51be76:	enter  0xf579,0x0
  51be7a:	(bad)  
  51be7b:	sbb    al,0xa0
  51be7d:	mov    edi,DWORD PTR [ebx+0x4d4177d7]
  51be83:	iret   
  51be84:	xchg   BYTE PTR [eax+0x22],bh
  51be87:	lea    ebx,ds:0x220cf03f
  51be8d:	sbb    BYTE PTR [edi+0x1b],0xe3
  51be91:	hlt    
  51be92:	pop    ebx
  51be93:	push   es
  51be94:	add    eax,0x128f66c5
  51be99:	clc    
  51be9a:	loope  0x51be2f
  51be9c:	shr    BYTE PTR [ebp-0x79],0x75
  51bea0:	lahf   
  51bea1:	popf   
  51bea2:	sbb    al,0x10
  51bea4:	push   eax
  51bea5:	sub    al,0x5d
  51bea7:	fstp   QWORD PTR [ecx-0x20]
  51beaa:	or     bh,dh
  51beac:	aas    
  51bead:	push   0x4a9a94f5
  51beb2:	ret    0x9fee
  51beb5:	je     0x51bf24
  51beb7:	dec    ebx
  51beb8:	scas   al,BYTE PTR es:[edi]
  51beb9:	jp     0x51be92
  51bebb:	or     eax,DWORD PTR [esi]
  51bebd:	out    dx,al
  51bebe:	push   ds
  51bebf:	mov    ch,0x94
  51bec1:	mov    ebx,0x15217cdb
  51bec6:	enter  0x1088,0x91
  51beca:	imul   eax,DWORD PTR [edi+0x3d],0x55
  51bece:	inc    ecx
  51becf:	loopne 0x51beac
  51bed1:	shl    BYTE PTR [edx+0x3a036a4d],1
  51bed7:	sub    eax,0x6de1b182
  51bedc:	stc    
  51bedd:	(bad)
  51bee0:	dec    esi
  51bee1:	cld    
  51bee2:	sbb    BYTE PTR [edi],al
  51bee4:	xchg   edx,eax
  51bee5:	xor    al,0xba
  51bee7:	pop    esi
  51bee8:	sub    BYTE PTR [ecx-0x4833fca2],al
  51beee:	xchg   ecx,eax
  51beef:	dec    ecx
  51bef0:	retf   
  51bef1:	addr16 cmp eax,ebp
  51bef4:	mov    fs:0x3e779664,al
  51befa:	xor    al,0xbd
  51befc:	pushf  
  51befd:	fucomip st,st(1)
  51beff:	push   cs
  51bf00:	or     DWORD PTR [ebx+0x1fd69f34],edi
  51bf06:	addr16 aad 0x52
  51bf09:	sti    
  51bf0a:	fld    TBYTE PTR [ebx-0x5c]
  51bf0d:	inc    ecx
  51bf0e:	or     al,BYTE PTR [edx-0x7e]
  51bf11:	(bad)
  51bf15:	mov    DWORD PTR [ebp-0x1bac6bd8],ecx
  51bf1b:	or     DWORD PTR [esi+0xa],0x37
  51bf1f:	jmp    0x51bebe
  51bf21:	mov    BYTE PTR [ebx-0x33a4a930],al
  51bf27:	pop    ds
  51bf28:	jne    0x51bf33
  51bf2a:	sbb    ebx,DWORD PTR [edx]
  51bf2c:	rcl    BYTE PTR [ecx+0x5eb94fbb],1
  51bf32:	shl    BYTE PTR [ebx+0x1720dae6],1
  51bf38:	clc    
  51bf39:	and    esi,DWORD PTR [ecx-0x5cb16371]
  51bf3f:	mov    ah,0x44
  51bf41:	pop    ds
  51bf42:	sbb    eax,DWORD PTR [esi+ebx*2-0x46436057]
  51bf49:	push   es
  51bf4a:	ss cmp al,0xe7
  51bf4d:	adc    eax,0xf5ae3c98
  51bf52:	test   dh,ah
  51bf54:	jae    0x51bf2e
  51bf56:	pop    ecx
  51bf57:	mov    al,BYTE PTR [edx+0x66]
  51bf5a:	das    
  51bf5b:	xor    DWORD PTR ds:0x1a6e520e,esi
  51bf61:	mov    bl,BYTE PTR [edi]
  51bf63:	cmp    BYTE PTR [edi+0x3fad9462],cl
  51bf69:	xor    esi,edi
  51bf6b:	imul   esi,esp,0xffffffdc
  51bf6e:	cmovg  ecx,ecx
  51bf71:	mov    ebp,0x2eb6959c
  51bf76:	push   ebx
  51bf77:	fist   WORD PTR ds:0x4d04e0ca
  51bf7d:	mov    bl,0xe5
  51bf7f:	ds popf 
  51bf81:	jecxz  0x51bf3b
  51bf83:	pop    ebx
  51bf84:	mov    DWORD PTR [ecx+0x1b],esi
  51bf87:	push   edi
  51bf88:	aad    0xf
  51bf8a:	test   BYTE PTR [edx-0x19],dh
  51bf8d:	cwde   
  51bf8e:	into   
  51bf8f:	repz pop eax
  51bf91:	test   BYTE PTR [eax-0x35],ah
  51bf94:	int3   
  51bf95:	xchg   edx,eax
  51bf96:	in     eax,dx
  51bf97:	(bad)  
  51bf98:	mov    ds:0x7fe72aae,eax
  51bf9d:	xchg   esi,eax
  51bf9e:	pop    es
  51bf9f:	jl     0x51bf86
  51bfa1:	pop    eax
  51bfa2:	es hlt 
  51bfa4:	jl     0x51c01a
  51bfa6:	rcl    BYTE PTR [ebx+ebp*8+0x7a0ba3dd],1
  51bfad:	sar    DWORD PTR [ecx],cl
  51bfaf:	aad    0xce
  51bfb1:	jae    0x51bf4e
  51bfb3:	inc    esi
  51bfb4:	sbb    ecx,edx
  51bfb6:	das    
  51bfb7:	shl    BYTE PTR [ecx+0x553091a3],1
  51bfbd:	cmp    eax,0xd2392081
  51bfc2:	daa    
  51bfc3:	sbb    DWORD PTR [ebp-0x67],esi
  51bfc6:	add    BYTE PTR ds:0xe185e5d8,0xe6
  51bfcd:	sbb    DWORD PTR ds:0xf0a2a262,ecx
  51bfd3:	xchg   edx,ebx
  51bfd5:	es jle 0x51bf74
  51bfd8:	dec    esp
  51bfd9:	inc    ebp
  51bfda:	call   0x3eb3:0x8a1f853d
  51bfe1:	stos   BYTE PTR es:[edi],al
  51bfe2:	and    BYTE PTR [edx+0x27],0x8e
  51bfe6:	push   ebp
  51bfe7:	inc    BYTE PTR [ebx+0x25]
  51bfea:	cli    
  51bfeb:	shl    al,0xd7
  51bfee:	rcl    BYTE PTR [edi-0x24c79f36],1
  51bff4:	(bad)  
  51bff5:	cwde   
  51bff6:	push   edx
  51bff7:	xchg   esi,eax
  51bff8:	dec    edi
  51bff9:	scas   al,BYTE PTR es:[edi]
  51bffa:	mov    WORD PTR [edx+0x35c6c06],?
  51c000:	loope  0x51bf85
  51c002:	lods   al,BYTE PTR ds:[esi]
  51c003:	adc    DWORD PTR [edx+0xb3fa0d3],esp
  51c009:	xor    cl,cl
  51c00b:	push   ebx
  51c00c:	stos   BYTE PTR es:[edi],al
  51c00d:	cmp    eax,0x39d654df
  51c012:	mov    eax,ds:0xa325287f
  51c017:	push   esp
  51c018:	stc    
  51c019:	jge    0x51c085
  51c01b:	push   esi
  51c01c:	adc    DWORD PTR [edx+ecx*4],edi
  51c01f:	mov    dl,0x94
  51c021:	(bad)  
  51c022:	jbe    0x51c054
  51c024:	add    eax,0xab5df6ce
  51c029:	and    BYTE PTR [edi],0x5f
  51c02c:	xor    ecx,esp
  51c02e:	and    eax,0x7bb1e9ab
  51c033:	xchg   DWORD PTR [ebp-0x2a],ebp
  51c036:	dec    edi
  51c037:	or     DWORD PTR [ebx],0xb548f442
  51c03d:	fnstsw WORD PTR [esi]
  51c03f:	scas   eax,DWORD PTR es:[edi]
  51c040:	xchg   edx,edx
  51c042:	cmp    eax,0x8eb1507b
  51c047:	jl     0x51c0bd
  51c049:	shl    BYTE PTR [edx],1
  51c04b:	cmp    edx,DWORD PTR [ebp-0x61]
  51c04e:	(bad)  
  51c04f:	mov    BYTE PTR [eax-0x58aa748a],dl
  51c055:	or     esp,DWORD PTR [ebx+ebp*1-0x4c36e715]
  51c05c:	mov    al,0xca
  51c05e:	inc    esi
  51c05f:	and    BYTE PTR ds:0xefc74aa2,0x57
  51c066:	lods   al,BYTE PTR ds:[esi]
  51c067:	arpl   si,bp
  51c069:	pushf  
  51c06a:	gs and eax,ebx
  51c06d:	jae    0x51c039
  51c06f:	pop    ebx
  51c070:	hlt    
  51c071:	jns    0x51c0cd
  51c073:	das    
  51c074:	xchg   esp,eax
  51c075:	jns    0x51bfff
  51c077:	mov    esp,0xbb0b18d9
  51c07c:	lahf   
  51c07d:	mov    al,ds:0xd0c0ad85
  51c082:	pop    edi
  51c083:	mov    edi,0x1507ad72
  51c088:	xchg   edx,eax
  51c089:	xchg   ecx,eax
  51c08a:	out    0xa1,eax
  51c08c:	scas   al,BYTE PTR es:[edi]
  51c08d:	push   edi
  51c08e:	inc    DWORD PTR [ebx-0x23]
  51c091:	idiv   DWORD PTR [esi+0x4f2cc979]
  51c097:	jne    0x51c0a6
  51c099:	dec    ebx
  51c09a:	xchg   ecx,eax
  51c09b:	add    eax,0x4529dec2
  51c0a0:	pushf  
  51c0a1:	iret   
  51c0a2:	gs cmp edi,esp
  51c0a5:	test   eax,0x6f80dec5
  51c0aa:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  51c0ac:	enter  0xb044,0x48
  51c0b0:	cmp    BYTE PTR [ebx],al
  51c0b2:	fxch   st(5)
  51c0b4:	fs xor eax,0x2ff81add
  51c0ba:	adc    DWORD PTR [eax+0x5],esp
  51c0bd:	ret    
  51c0be:	xchg   ecx,eax
  51c0bf:	and    ebp,ecx
  51c0c1:	jbe    0x51c051
  51c0c3:	xchg   ebx,eax
  51c0c4:	jne    0x51c050
  51c0c6:	xchg   esi,eax
  51c0c7:	cmp    eax,0x9ab78e90
  51c0cc:	cmp    al,0x82
  51c0ce:	mov    dl,0xff
  51c0d0:	mov    bh,bh
  51c0d2:	ret    0x29be
  51c0d5:	jl     0x51c141
  51c0d7:	mov    ebp,0x2b877b5d
  51c0dc:	add    ebp,esi
  51c0de:	push   di
  51c0e0:	jo     0x51c108
  51c0e2:	daa    
  51c0e3:	lods   al,BYTE PTR ds:[esi]
  51c0e4:	lods   eax,DWORD PTR ds:[esi]
  51c0e5:	xor    dh,ah
  51c0e7:	mov    bl,0xf9
  51c0e9:	jmp    0x8407:0x4576e703
  51c0f0:	xor    dh,bh
  51c0f2:	dec    eax
  51c0f3:	inc    DWORD PTR [esi+eax*2-0x51edc758]
  51c0fa:	int3   
  51c0fb:	mov    al,0x95
  51c0fd:	add    DWORD PTR [eax-0x525365e4],edx
  51c103:	and    BYTE PTR fs:[edx+0x32],bh
  51c107:	inc    ebp
  51c108:	fimul  DWORD PTR [edx-0x11149a5f]
  51c10e:	ffree  st(7)
  51c110:	mov    WORD PTR ds:0xf17bbd6a,es
  51c116:	and    al,0x72
  51c118:	xor    BYTE PTR [ebx+0x5a7ecfda],cl
  51c11e:	cwde   
  51c11f:	jns    0x51c190
  51c121:	mov    ah,0xee
  51c123:	mov    ebp,DWORD PTR [ebp-0x499104c7]
  51c129:	rcl    DWORD PTR [ebp-0x17],0x76
  51c12d:	(bad)  
  51c12e:	aas    
  51c12f:	nop
  51c130:	pop    ebx
  51c131:	xchg   ebx,eax
  51c132:	sbb    al,0x2c
  51c134:	ins    BYTE PTR es:[edi],dx
  51c135:	pusha  
  51c136:	out    0x61,al
  51c138:	hlt    
  51c139:	xor    bh,BYTE PTR [ebp+0x77]
  51c13c:	mov    dx,0x5dce
  51c140:	inc    DWORD PTR [edx]
  51c142:	jnp    0x51c142
  51c144:	rcr    BYTE PTR ds:0x674dfd25,0x22
  51c14b:	repz dec edx
  51c14d:	daa    
  51c14e:	call   0xf3e56e56
  51c153:	pop    es
  51c154:	add    edx,DWORD PTR [edx-0x51]
  51c157:	dec    eax
  51c158:	repz mov ch,0x8b
  51c15b:	dec    ebp
  51c15c:	call   0x8826:0x10186b07
  51c163:	mov    ebx,0xce37f1da
  51c168:	cmp    ah,0xf
  51c16b:	xchg   edx,eax
  51c16c:	mov    BYTE PTR [eax+0x19408e3e],bh
  51c172:	and    DWORD PTR [edx+0x74],edx
  51c175:	les    edi,FWORD PTR [edi]
  51c177:	jg     0x51c1b2
  51c179:	inc    edi
  51c17a:	(bad)  
  51c17b:	popa   
  51c17c:	xchg   dh,bl
  51c17e:	dec    eax
  51c17f:	(bad)  
  51c180:	fdivr  QWORD PTR [edi]
  51c182:	ins    DWORD PTR es:[edi],dx
  51c183:	repz ret 
  51c185:	sub    DWORD PTR [esi-0x327492bb],edx
  51c18b:	mov    dh,0x14
  51c18d:	outs   dx,BYTE PTR ds:[esi]
  51c18e:	shl    DWORD PTR [edi],1
  51c190:	inc    ecx
  51c191:	ja     0x51c152
  51c193:	xchg   esi,eax
  51c194:	paddsb mm4,QWORD PTR [edx]
  51c197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c198:	loop   0x51c1e5
  51c19a:	xchg   ecx,eax
  51c19b:	addr16 mov ebx,0x4cd89c7c
  51c1a1:	ins    BYTE PTR es:[edi],dx
  51c1a2:	clc    
  51c1a3:	scas   eax,DWORD PTR es:[edi]
  51c1a4:	stos   DWORD PTR es:[edi],eax
  51c1a5:	xchg   esi,eax
  51c1a6:	inc    edi
  51c1a7:	enter  0x9952,0x2d
  51c1ab:	ja     0x51c171
  51c1ad:	imul   eax,DWORD PTR [ebx],0xbf932c49
  51c1b3:	or     DWORD PTR [ecx+0x586ffcd0],edx
  51c1b9:	jmp    0x6129832f
  51c1be:	out    0x91,al
  51c1c0:	mov    BYTE PTR [ebp+0x1f23167d],0xf5
  51c1c7:	popa   
  51c1c8:	loope  0x51c220
  51c1ca:	out    dx,eax
  51c1cb:	ins    BYTE PTR es:[edi],dx
  51c1cc:	iret   
  51c1cd:	aas    
  51c1ce:	nop
  51c1cf:	xor    cl,bh
  51c1d1:	xor    BYTE PTR [ecx-0x1f],dl
  51c1d4:	(bad)  
  51c1d5:	clc    
  51c1d6:	test   BYTE PTR [ebx+0xc2ae680],dl
  51c1dc:	mov    cl,0x17
  51c1de:	mov    al,0x3d
  51c1e0:	mov    ecx,0x631b4b35
  51c1e5:	aam    0x3c
  51c1e7:	cmc    
  51c1e8:	cmp    al,0x79
  51c1ea:	jle    0x51c17c
  51c1ec:	ficom  WORD PTR [esi]
  51c1ee:	mov    al,ds:0xdc9199b
  51c1f3:	sub    DWORD PTR [edi],ebx
  51c1f5:	pop    es
  51c1f6:	cwde   
  51c1f7:	retf   0x787e
  51c1fa:	lock aad 0x1e
  51c1fd:	jae    0x51c216
  51c1ff:	outs   dx,DWORD PTR ds:[esi]
  51c200:	xlat   BYTE PTR ds:[ebx]
  51c201:	dec    ebp
  51c202:	push   ss
  51c203:	dec    ebx
  51c204:	adc    eax,0x6ced7e3e
  51c209:	fcmovbe st,st(5)
  51c20b:	retf   0x2e05
  51c20e:	hlt    
  51c20f:	mov    edx,DWORD PTR [ebx+0x402c52fd]
  51c215:	ret    0x6ba5
  51c218:	cmp    al,0xec
  51c21a:	test   eax,0x94643c0e
  51c21f:	mov    bh,0x7f
  51c221:	adc    ch,BYTE PTR [edx+0x11]
  51c224:	mov    DWORD PTR [eax-0x4d],ecx
  51c227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51c228:	(bad)  [ebx]
  51c22a:	xchg   esp,eax
  51c22b:	data16 aaa 
  51c22d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c22e:	shr    DWORD PTR [eax-0x7d70cc4f],cl
  51c234:	push   cs
  51c235:	jb     0x51c1e6
  51c237:	dec    ebp
  51c238:	ret    
  51c239:	mov    dl,0xdc
  51c23b:	or     esp,DWORD PTR [edx+0x19]
  51c23e:	inc    eax
  51c23f:	in     eax,0x98
  51c241:	xchg   BYTE PTR [esi-0x29baf2b1],cl
  51c247:	sub    BYTE PTR [eax+ecx*4+0x146382fb],dl
  51c24e:	loopne 0x51c1f0
  51c250:	shr    ebx,1
  51c252:	sbb    eax,0xeea359b4
  51c257:	pop    esp
  51c258:	adc    DWORD PTR [esp+eax*4+0x30a224e1],0x6b
  51c260:	jb     0x51c2dc
  51c262:	cld    
  51c263:	inc    ebx
  51c264:	mov    dl,0xeb
  51c266:	xchg   edi,edi
  51c268:	or     eax,0xe8b5ce1e
  51c26d:	pusha  
  51c26e:	das    
  51c26f:	pop    ebx
  51c270:	xchg   ecx,eax
  51c271:	mov    edx,0x9bac3bae
  51c276:	dec    ecx
  51c277:	bound  ecx,QWORD PTR [eax]
  51c279:	into   
  51c27a:	mov    ah,0xd3
  51c27c:	mov    dh,0x49
  51c27e:	cmp    DWORD PTR [ecx+0x6d],0x1b
  51c282:	pop    ebp
  51c283:	mov    edi,0x42cc2425
  51c288:	mov    ds:0x87435988,al
  51c28d:	shl    DWORD PTR [esi-0x2c],0xf3
  51c291:	push   es
  51c292:	inc    edi
  51c293:	aas    
  51c294:	lods   al,BYTE PTR ds:[esi]
  51c295:	stos   DWORD PTR es:[edi],eax
  51c296:	mov    ch,BYTE PTR [ecx-0x15b670c7]
  51c29c:	arpl   WORD PTR [edx-0xd],bp
  51c29f:	xor    eax,edi
  51c2a1:	cwde   
  51c2a2:	jns    0x51c2fb
  51c2a4:	(bad)  
  51c2a5:	dec    esp
  51c2a6:	xchg   DWORD PTR [ebx],ebp
  51c2a8:	cmc    
  51c2a9:	fist   WORD PTR ds:0x637b3822
  51c2af:	ins    DWORD PTR es:[edi],dx
  51c2b0:	pop    es
  51c2b1:	cld    
  51c2b2:	or     BYTE PTR [eax],dh
  51c2b4:	mov    DWORD PTR [ebp+0x38ea160b],eax
  51c2ba:	das    
  51c2bb:	mov    es,WORD PTR [ebp+0x72]
  51c2be:	fstp   QWORD PTR [ecx]
  51c2c0:	fs nop
  51c2c2:	jno    0x51c2f3
  51c2c4:	push   ebp
  51c2c5:	xchg   ecx,eax
  51c2c6:	sti    
  51c2c7:	jmp    0x51c2a2
  51c2c9:	jge    0x51c2b1
  51c2cb:	cwde   
  51c2cc:	jo     0x51c315
  51c2ce:	outs   dx,DWORD PTR ds:[esi]
  51c2cf:	inc    eax
  51c2d0:	pop    ss
  51c2d1:	cwde   
  51c2d2:	pop    esp
  51c2d3:	mov    edx,0xff5b7567
  51c2d8:	gs dec eax
  51c2da:	add    ebx,DWORD PTR [edx+0x1f4d48b4]
  51c2e0:	loope  0x51c306
  51c2e2:	dec    edi
  51c2e3:	aam    0x21
  51c2e5:	icebp  
  51c2e6:	aaa    
  51c2e7:	stos   DWORD PTR es:[edi],eax
  51c2e8:	jb     0x51c32e
  51c2ea:	or     DWORD PTR [esi-0x16e0e8f5],eax
  51c2f0:	aam    0xdb
  51c2f2:	mov    al,ds:0x1fb18378
  51c2f7:	inc    ebx
  51c2f8:	shl    BYTE PTR cs:[esi],cl
  51c2fb:	ss into 
  51c2fd:	sbb    DWORD PTR [edi-0x6a],edi
  51c300:	dec    esi
  51c301:	mov    ebp,0x9ffc9eaa
  51c306:	pop    ebp
  51c307:	popa   
  51c308:	les    ebp,FWORD PTR ss:[edi-0x4a457a72]
  51c30f:	scas   al,BYTE PTR es:[edi]
  51c310:	dec    eax
  51c311:	fwait
  51c312:	iret   
  51c313:	pusha  
  51c314:	pop    ds
  51c315:	nop
  51c316:	push   ebx
  51c317:	fdiv   QWORD PTR [ecx]
  51c319:	push   esi
  51c31a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51c31b:	leave  
  51c31c:	(bad)  
  51c31e:	out    dx,eax
  51c31f:	in     eax,dx
  51c320:	test   ebx,edi
  51c322:	sti    
  51c323:	add    esi,DWORD PTR [eax]
  51c325:	ins    DWORD PTR es:[edi],dx
  51c326:	popa   
  51c327:	sub    DWORD PTR [ebx+0x429725ac],ebp
  51c32d:	into   
  51c32e:	jne    0x51c357
  51c330:	dec    esp
  51c331:	lds    esi,FWORD PTR [edx-0x49]
  51c334:	or     ebp,DWORD PTR [edi]
  51c336:	repz xor DWORD PTR [edi],ebp
  51c339:	mov    ds:0x99ee3c94,al
  51c33e:	bnd data16 jns 0x51c35d
  51c342:	ja     0x51c2d0
  51c344:	mov    al,ds:0x8180196f
  51c349:	jecxz  0x51c375
  51c34b:	out    0xa5,eax
  51c34d:	js     0x51c3b4
  51c34f:	je     0x51c376
  51c351:	adc    bh,BYTE PTR [edi+0x5f]
  51c354:	imul   ebx,DWORD PTR [ebp-0x1f0b4537],0x36f8b3b8
  51c35e:	call   0xbb75:0xefc2034
  51c365:	dec    ebx
  51c366:	hlt    
  51c367:	imul   esp,esp,0xfffffff5
  51c36a:	shl    BYTE PTR [esp+eax*8],cl
  51c36d:	push   cs
  51c36e:	out    dx,al
  51c36f:	dec    esi
  51c370:	psadbw mm6,QWORD PTR [ebx+0x27]
  51c374:	mov    cl,BYTE PTR [ecx]
  51c376:	stos   BYTE PTR es:[edi],al
  51c377:	cmp    edx,DWORD PTR [ebx+0x4dfee5f5]
  51c37d:	or     cl,dh
  51c37f:	(bad)  
  51c380:	pop    ecx
  51c381:	setbe  BYTE PTR [ecx-0x56]
  51c385:	ret    
  51c386:	rcl    BYTE PTR [edx+0x47cbee02],cl
  51c38c:	loop   0x51c349
  51c38e:	lods   eax,DWORD PTR ds:[esi]
  51c38f:	ror    DWORD PTR [edi+0x5e],1
  51c392:	nop
  51c393:	sbb    ecx,edi
  51c395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c396:	into   
  51c397:	xlat   BYTE PTR ds:[ebx]
  51c398:	jae    0x51c3e9
  51c39a:	sub    eax,0xdf6e0493
  51c39f:	jbe    0x51c36c
  51c3a1:	jl     0x51c3d9
  51c3a3:	fisttp QWORD PTR ds:0xfb231ab6
  51c3a9:	repz xchg ecx,eax
  51c3ab:	add    BYTE PTR [esi-0xc],cl
  51c3ae:	inc    esp
  51c3af:	cli    
  51c3b0:	mul    DWORD PTR [edx+ecx*1-0x67]
  51c3b4:	(bad)  
  51c3b5:	in     al,0xa5
  51c3b7:	je     0x51c356
  51c3b9:	cld    
  51c3ba:	test   eax,0xd5ea5d5c
  51c3bf:	or     esp,DWORD PTR [ecx+0x27894a2f]
  51c3c5:	sub    eax,0xe3653c9b
  51c3ca:	addr16 push 0x77
  51c3cd:	cmp    DWORD PTR [esi-0x1150f58d],ecx
  51c3d3:	je     0x51c3b9
  51c3d5:	fnstsw WORD PTR [edi]
  51c3d7:	jno    0x51c447
  51c3d9:	xor    BYTE PTR [edi],dh
  51c3db:	pop    esp
  51c3dc:	or     DWORD PTR ds:0xd7fa3a4e,edx
  51c3e2:	(bad)  
  51c3e3:	sub    edx,DWORD PTR [esi-0xc]
  51c3e6:	retf   0xbdde
  51c3e9:	add    DWORD PTR [ecx+0x9],edi
  51c3ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51c3ed:	cmp    BYTE PTR [esi+0x6c],0xb1
  51c3f1:	sbb    al,0x75
  51c3f3:	sub    ebx,0x5a
  51c3f6:	mov    eax,0xf8b2b383
  51c3fb:	fiadd  WORD PTR [eax+0x32]
  51c3fe:	(bad)  
  51c3ff:	sti    
  51c400:	sub    BYTE PTR [esi],bh
  51c402:	xor    ah,BYTE PTR [ebx+0x78712137]
  51c408:	arpl   WORD PTR [edi+0x122c7323],bp
  51c40e:	add    edx,DWORD PTR [eax]
  51c410:	shl    DWORD PTR [eax+0x1f],1
  51c413:	sub    al,0x8d
  51c415:	push   edi
  51c416:	sar    BYTE PTR [ebp+ebp*4-0x46],0x0
  51c41b:	sub    BYTE PTR [eax-0x29cf832e],bl
  51c421:	aaa    
  51c422:	fwait
  51c423:	nop
  51c424:	inc    ebp
  51c425:	enter  0xd149,0x9c
  51c429:	jge    0x51c47b
  51c42b:	and    BYTE PTR [edx],0xc5
  51c42e:	xor    al,0x5f
  51c430:	out    0x7e,eax
  51c432:	pop    esp
  51c433:	pop    ebx
  51c434:	adc    BYTE PTR [esi+0x36],dh
  51c437:	xor    al,0x27
  51c439:	inc    esi
  51c43a:	mov    bh,0x2c
  51c43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c43d:	dec    eax
  51c43e:	dec    ebp
  51c43f:	imul   esi,DWORD PTR [edx+ebx*4-0x68],0x30
  51c444:	ret    
  51c445:	cwde   
  51c446:	into   
  51c447:	mov    DWORD PTR [eax+eiz*4+0x70],esp
  51c44b:	jl     0x51c3dd
  51c44d:	mov    esi,0x126af482
  51c452:	add    DWORD PTR [ecx+0x3a],esp
  51c455:	jmp    0x51c441
  51c457:	jo     0x51c45f
  51c459:	ja     0x51c3f2
  51c45b:	inc    ebp
  51c45c:	sub    al,0x57
  51c45e:	out    0xb5,al
  51c460:	mov    bl,0x19
  51c462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c463:	sub    ecx,DWORD PTR [esi-0x6c]
  51c466:	sbb    esi,DWORD PTR [esi+0x31ee79eb]
  51c46c:	cli    
  51c46d:	stos   BYTE PTR es:[edi],al
  51c46e:	aad    0x0
  51c470:	mov    esp,0xa4e2df3a
  51c475:	xchg   ecx,eax
  51c476:	or     eax,0x9a194c0b
  51c47b:	and    ebp,DWORD PTR [edx+0x0]
  51c47e:	jmp    0x51c41b
  51c480:	or     eax,0x99ed79c7
  51c485:	jnp    0x51c40f
  51c487:	jnp    0x51c4a8
  51c489:	mov    WORD PTR [edx-0x46],ds
  51c48c:	sbb    BYTE PTR [edi],ch
  51c48e:	mov    ds:0xfcce57cf,eax
  51c493:	(bad)  
  51c494:	cwde   
  51c495:	push   ds
  51c496:	mov    eax,ds:0x3828bc9c
  51c49b:	imul   esi,DWORD PTR [eax+ebp*2-0xf28a1],0x5874e7ea
  51c4a6:	stc    
  51c4a7:	push   esp
  51c4a8:	(bad)  
  51c4aa:	stos   BYTE PTR es:[edi],al
  51c4ab:	icebp  
  51c4ac:	dec    edx
  51c4ad:	or     cl,BYTE PTR [esi+esi*4-0x37]
  51c4b1:	aad    0xe4
  51c4b3:	(bad)  
  51c4b4:	mov    eax,ds:0x33b3aaea
  51c4b9:	dec    esi
  51c4ba:	cmp    al,0x3
  51c4bc:	mov    dh,ah
  51c4be:	cmp    ecx,DWORD PTR [ebp+0x67]
  51c4c1:	jp     0x51c483
  51c4c3:	push   cs
  51c4c4:	adc    eax,ebx
  51c4c6:	icebp  
  51c4c7:	xor    bh,BYTE PTR [eax+0x35]
  51c4ca:	xor    DWORD PTR [esi-0x26],ebx
  51c4cd:	sub    ecx,ecx
  51c4cf:	xor    esp,DWORD PTR [eax+0x16]
  51c4d2:	and    esp,ebp
  51c4d4:	and    esi,DWORD PTR [eax+0x41f83f5f]
  51c4da:	sub    al,0x32
  51c4dc:	mov    edi,DWORD PTR ds:0x94f7c59f
  51c4e2:	inc    ecx
  51c4e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51c4e4:	dec    DWORD PTR [ecx+0x7b6c572e]
  51c4ea:	(bad)  
  51c4eb:	mov    ch,0x1a
  51c4ed:	test   al,0x73
  51c4ef:	lods   eax,DWORD PTR ds:[esi]
  51c4f0:	mov    ds:0xe90c2c9e,eax
  51c4f5:	inc    ebp
  51c4f6:	and    ch,bh
  51c4f8:	out    dx,eax
  51c4f9:	pop    ebx
  51c4fa:	cwde   
  51c4fb:	(bad)  
  51c4fc:	adc    eax,0x4276bde9
  51c501:	xor    al,0x61
  51c503:	pop    ds
  51c504:	push   es
  51c505:	shr    BYTE PTR [esp+ebx*8+0x60],1
  51c509:	fwait
  51c50a:	mov    esi,0x4d111e78
  51c50f:	sub    ebx,DWORD PTR [edx-0x3f560bca]
  51c515:	sub    ebp,ecx
  51c517:	and    eax,0x44e5c250
  51c51c:	push   ecx
  51c51d:	sbb    eax,0xcb9d4548
  51c522:	push   ebp
  51c523:	sbb    cl,BYTE PTR [edx-0x55]
  51c526:	pop    edi
  51c527:	push   ss
  51c528:	dec    edx
  51c529:	xor    esp,edx
  51c52b:	loopne 0x51c4bf
  51c52d:	add    eax,0xbaae722d
  51c532:	fsub   DWORD PTR [ebx-0x76]
  51c535:	repz xor esp,DWORD PTR [eax+0x310b134a]
  51c53c:	inc    edx
  51c53d:	(bad)  
  51c53e:	or     ch,al
  51c540:	adc    DWORD PTR ds:0xca448005,ebx
  51c546:	cwde   
  51c547:	push   eax
  51c548:	add    ch,0x55
  51c54b:	jg     0x51c56f
  51c54d:	mov    bl,0x71
  51c54f:	inc    eax
  51c550:	jns    0x51c597
  51c552:	sub    eax,edx
  51c554:	repnz inc BYTE PTR [ebp-0x126f77e0]
  51c55b:	ss cdq 
  51c55d:	xchg   BYTE PTR [ecx],dl
  51c55f:	jle    0x51c5d0
  51c561:	inc    eax
  51c562:	push   edx
  51c563:	scas   al,BYTE PTR es:[edi]
  51c564:	jge    0x51c504
  51c566:	sub    eax,0x72f4115c
  51c56b:	push   es
  51c56c:	lods   al,BYTE PTR ds:[esi]
  51c56d:	push   cs
  51c56e:	sub    BYTE PTR [ebx-0x726ecb58],bh
  51c574:	adc    eax,0xda44bc47
  51c579:	jae    0x51c5de
  51c57b:	mov    ah,0xbe
  51c57d:	xchg   ebx,eax
  51c57e:	jmp    0x27d:0xd1b3cafc
  51c585:	xchg   esp,eax
  51c586:	or     eax,0x58fdb25
  51c58b:	(bad)  
  51c58c:	(bad)  
  51c58d:	jns    0x51c5ec
  51c58f:	lds    ecx,FWORD PTR [edi+0x4]
  51c592:	xchg   esi,eax
  51c593:	mov    eax,0xd8faa456
  51c598:	sub    esp,DWORD PTR [esi-0x1fff6dc2]
  51c59e:	push   ebp
  51c59f:	jbe    0x51c57d
  51c5a1:	cs scas eax,DWORD PTR es:[edi]
  51c5a3:	not    BYTE PTR [ebp+0x62778233]
  51c5a9:	xor    al,0x1f
  51c5ab:	clc    
  51c5ac:	xor    esi,edx
  51c5ae:	ja     0x51c536
  51c5b0:	fnstsw WORD PTR [eax+0x3a]
  51c5b3:	xchg   DWORD PTR [ebp-0x67],ebx
  51c5b6:	push   ebx
  51c5b7:	(bad)  
  51c5b8:	lock inc ebp
  51c5ba:	imul   edi,eax,0xffffffda
  51c5bd:	rcr    BYTE PTR [ebp+0x64],0x9e
  51c5c1:	lahf   
  51c5c2:	push   ds
  51c5c3:	or     ecx,ebx
  51c5c5:	and    al,0x24
  51c5c7:	push   ebx
  51c5c8:	pop    eax
  51c5c9:	rcr    BYTE PTR [esi+0x49],cl
  51c5cc:	out    0xb1,al
  51c5ce:	sbb    al,0x62
  51c5d0:	push   cs
  51c5d1:	sub    DWORD PTR [edi+0x5f],ebx
  51c5d4:	(bad)  
  51c5d6:	ss push esp
  51c5d8:	call   0xd4f8:0x753b759a
  51c5df:	dec    ebx
  51c5e0:	sbb    ebp,DWORD PTR [ebx]
  51c5e2:	fcmovnbe st,st(4)
  51c5e4:	push   edi
  51c5e5:	sar    BYTE PTR [eax+0x755a49a8],1
  51c5eb:	aam    0xc8
  51c5ed:	sbb    BYTE PTR [esi],ch
  51c5ef:	sti    
  51c5f0:	je     0x51c5ca
  51c5f2:	fdivr  QWORD PTR [eax+esi*2+0xf88e68f]
  51c5f9:	mov    al,ds:0xe0a2e47d
  51c5fe:	fisttp WORD PTR [esi+0x552db7f9]
  51c604:	jmp    0xf615ab66
  51c609:	test   DWORD PTR [edx-0x26],ebp
  51c60c:	std    
  51c60d:	lahf   
  51c60e:	adc    bh,al
  51c610:	add    ecx,edx
  51c612:	and    eax,DWORD PTR [esi+0x75463560]
  51c618:	jle    0x51c5fe
  51c61a:	fdivr  DWORD PTR [edx]
  51c61c:	mov    esi,0x3d8c7d9e
  51c621:	sar    DWORD PTR [edi],cl
  51c623:	inc    ebx
  51c624:	dec    esi
  51c625:	dec    ebp
  51c626:	(bad)  
  51c627:	pushf  
  51c628:	inc    ebx
  51c629:	loop   0x51c5e6
  51c62b:	adc    eax,0x2b478a95
  51c630:	mov    bh,0xd3
  51c632:	xchg   ebx,eax
  51c633:	inc    ebp
  51c634:	imul   edx,DWORD PTR [esi+0x30],0x263cf276
  51c63b:	sub    DWORD PTR [ebp-0x40fe71ca],ebx
  51c641:	fistp  DWORD PTR [edi-0x71210d0c]
  51c647:	cs pusha 
  51c649:	sbb    dh,BYTE PTR [ecx+0xc]
  51c64c:	xor    al,0xe1
  51c64e:	stc    
  51c64f:	cmp    al,0x49
  51c651:	je     0x51c6b1
  51c653:	inc    ebx
  51c654:	cdq    
  51c655:	cs push esi
  51c657:	sbb    edi,DWORD PTR [edx+0x77]
  51c65a:	inc    eax
  51c65b:	xchg   ecx,eax
  51c65c:	push   cs
  51c65d:	loop   0x51c60f
  51c65f:	jae    0x51c682
  51c661:	push   esi
  51c662:	mov    ah,0xce
  51c664:	sub    eax,esi
  51c666:	jecxz  0x51c6cc
  51c668:	sub    edx,ebx
  51c66a:	clc    
  51c66b:	mov    bh,al
  51c66d:	sbb    al,dl
  51c66f:	mov    cl,al
  51c671:	xor    bh,BYTE PTR [ebx+0x65]
  51c674:	stos   BYTE PTR es:[edi],al
  51c675:	repnz sti 
  51c677:	test   DWORD PTR [esi+0x17],esi
  51c67a:	push   es
  51c67b:	mov    esp,0xaf29bd27
  51c680:	popf   
  51c681:	test   eax,ebx
  51c683:	cmp    BYTE PTR [ebx-0x79],bl
  51c686:	fdiv   st(2),st
  51c688:	jp     0x51c6ab
  51c68a:	dec    esp
  51c68b:	xor    DWORD PTR [edi],esi
  51c68d:	inc    eax
  51c68e:	test   dh,bh
  51c690:	aaa    
  51c691:	or     BYTE PTR [edx-0x1a],dl
  51c694:	and    BYTE PTR [edi],bh
  51c696:	call   0x78d2:0xd9c3a82a
  51c69d:	push   0x2410ec79
  51c6a2:	mov    esi,0x9adac770
  51c6a7:	or     eax,esp
  51c6a9:	mov    bl,0x97
  51c6ab:	or     eax,0x2d2ecd3a
  51c6b0:	sub    eax,0x42acbb7c
  51c6b5:	or     al,0xb3
  51c6b7:	and    BYTE PTR [ebx],ah
  51c6b9:	in     al,dx
  51c6ba:	fistp  DWORD PTR [edi]
  51c6bc:	xor    DWORD PTR [edx+ecx*4-0x13d5abc6],0x6dc71af
  51c6c7:	mov    eax,0x20cab20b
  51c6cc:	pop    ds
  51c6cd:	mov    cl,BYTE PTR [edx+ebp*1]
  51c6d0:	ins    DWORD PTR es:[edi],dx
  51c6d1:	inc    ebp
  51c6d2:	daa    
  51c6d3:	xchg   edx,eax
  51c6d4:	div    cl
  51c6d6:	ds out dx,al
  51c6d8:	cli    
  51c6d9:	mov    cl,0x4c
  51c6db:	(bad)  
  51c6dc:	out    dx,al
  51c6dd:	inc    edi
  51c6de:	or     eax,0x7ae8d9ac
  51c6e3:	push   ss
  51c6e4:	jp     0x51c6e2
  51c6e6:	cwde   
  51c6e7:	outs   dx,DWORD PTR ds:[esi]
  51c6e8:	ficom  WORD PTR [eax+0x6b]
  51c6eb:	mov    ds:0x71b63835,eax
  51c6f0:	mov    al,0xac
  51c6f2:	push   cs
  51c6f3:	mov    DWORD PTR [edi-0x261425f0],ebp
  51c6f9:	outs   dx,DWORD PTR ds:[esi]
  51c6fa:	and    dh,BYTE PTR [eax-0x7d231ad4]
  51c700:	mov    ebx,0x1cbe9714
  51c705:	call   0xd6cfed44
  51c70a:	psubusw mm2,QWORD PTR [ebp-0x3b]
  51c70e:	push   edi
  51c70f:	cld    
  51c710:	fs push ecx
  51c712:	jmp    0x4ddb:0x393576f6
  51c719:	pop    ecx
  51c71a:	sbb    BYTE PTR [edx+0x5f],al
  51c71d:	xor    eax,0x43e95475
  51c722:	aam    0x1
  51c724:	sar    DWORD PTR [esi+0x562e44f6],cl
  51c72a:	call   DWORD PTR [eax]
  51c72c:	test   eax,0x2ba86a6a
  51c731:	int3   
  51c732:	cwde   
  51c733:	jo     0x51c72e
  51c735:	and    eax,0xf0fefcf7
  51c73a:	lods   al,BYTE PTR ds:[esi]
  51c73b:	pop    esp
  51c73c:	outs   dx,DWORD PTR ds:[esi]
  51c73d:	jg     0x51c7a0
  51c73f:	mov    edx,0x72feb6b5
  51c744:	cli    
  51c745:	xor    eax,0xce932fd7
  51c74a:	jle    0x51c7b9
  51c74c:	dec    eax
  51c74d:	xchg   edx,eax
  51c74e:	jge    0x51c6e5
  51c750:	and    BYTE PTR [eax+ecx*2-0x2a],cl
  51c754:	or     edx,eax
  51c756:	xor    al,bl
  51c758:	mov    cl,0x29
  51c75a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51c75b:	inc    esp
  51c75c:	rol    BYTE PTR [ecx-0x3b],0xc0
  51c760:	push   ds
  51c761:	or     eax,0x78397cbe
  51c766:	fwait
  51c767:	neg    BYTE PTR [ecx]
  51c769:	sbb    ch,BYTE PTR [ebp-0xaed35ab]
  51c76f:	ret    0x35b
  51c772:	push   0x111c5d9f
  51c777:	pop    edi
  51c778:	pop    ebp
  51c779:	mov    bh,0x64
  51c77b:	adc    DWORD PTR [edx+eiz*1-0x13b2b3d],ecx
  51c782:	retf   
  51c783:	stos   DWORD PTR es:[edi],eax
  51c784:	fld    DWORD PTR [eax-0x15]
  51c787:	xchg   ebx,eax
  51c788:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c789:	and    al,0x11
  51c78b:	lock call 0x4406:0x9f15ec80
  51c793:	push   0xdbdb8593
  51c798:	scas   al,BYTE PTR es:[edi]
  51c799:	cmc    
  51c79a:	push   edx
  51c79b:	dec    ebx
  51c79c:	fnsave [eax-0x716a09e8]
  51c7a2:	dec    ebp
  51c7a3:	sub    dl,BYTE PTR [ebx-0x44]
  51c7a6:	loop   0x51c760
  51c7a8:	push   ebp
  51c7a9:	mov    cl,0x24
  51c7ab:	and    cl,bl
  51c7ad:	mov    bh,0xc0
  51c7af:	outs   dx,BYTE PTR ds:[esi]
  51c7b0:	out    dx,al
  51c7b1:	ins    DWORD PTR es:[edi],dx
  51c7b2:	sub    ah,BYTE PTR [esp+ebp*8+0x18]
  51c7b6:	mov    eax,0xcc9658ee
  51c7bb:	push   0x7f034516
  51c7c0:	mov    eax,ds:0x1a431588
  51c7c5:	xor    BYTE PTR [edx+0x3603107b],ch
  51c7cb:	jno    0x51c819
  51c7cd:	or     al,0x5e
  51c7cf:	leave  
  51c7d0:	mov    edi,eax
  51c7d2:	xchg   esp,eax
  51c7d3:	or     al,0xbe
  51c7d5:	loop   0x51c75e
  51c7d7:	mov    BYTE PTR [edi+0x38a4ca27],cl
  51c7dd:	adc    eax,0xcdd3da50
  51c7e2:	dec    edi
  51c7e3:	test   bh,0x5c
  51c7e6:	sbb    eax,0x7682475b
  51c7eb:	and    BYTE PTR [di-0x18],0x40
  51c7f0:	test   al,0xef
  51c7f2:	pop    ebx
  51c7f3:	push   es
  51c7f4:	mov    bh,0x79
  51c7f6:	push   0xffd8126
  51c7fb:	push   ecx
  51c7fc:	retf   
  51c7fd:	cmp    eax,0x5920c779
  51c802:	mov    DWORD PTR [eax],esp
  51c804:	and    eax,0xaf433a10
  51c809:	aad    0x9d
  51c80b:	push   ebp
  51c80c:	mov    ebp,0x1a2c16f6
  51c811:	scas   al,BYTE PTR es:[edi]
  51c812:	sbb    DWORD PTR ds:0xa0ca3610,0xffffffb7
  51c819:	mov    ch,0xb
  51c81b:	cmp    ebp,DWORD PTR [ebx]
  51c81d:	bound  ecx,QWORD PTR [edi+eax*1+0x29]
  51c821:	dec    esi
  51c822:	pop    edi
  51c823:	xor    eax,0x9e434d71
  51c828:	fwait
  51c829:	sub    eax,0xe8f23eb1
  51c82e:	retf   0x143c
  51c831:	fdiv   DWORD PTR [ebx]
  51c833:	adc    bl,BYTE PTR [ebp-0x32]
  51c836:	xchg   edi,eax
  51c837:	dec    eax
  51c838:	hlt    
  51c839:	adc    al,0xc5
  51c83b:	je     0x51c7ed
  51c83d:	cmp    al,0xdb
  51c83f:	ds aam 0x7f
  51c842:	xchg   al,cl
  51c844:	xor    BYTE PTR [edi+0x198276e8],bl
  51c84a:	ja     0x51c896
  51c84c:	add    BYTE PTR [ecx+0x16],ch
  51c84f:	and    al,BYTE PTR [eax+ecx*4+0xbd4114e]
  51c856:	cdq    
  51c857:	push   0x82bcf2b
  51c85c:	cld    
  51c85d:	or     eax,0x8467f0f8
  51c862:	(bad)  
  51c864:	or     eax,0xffffffcb
  51c867:	jl     0x51c832
  51c869:	int3   
  51c86a:	sbb    BYTE PTR [edx-0x385af4d5],al
  51c870:	xor    DWORD PTR [eax+eax*1+0xd76a5bd],edi
  51c877:	test   al,0xa8
  51c879:	and    al,bh
  51c87b:	xchg   edi,eax
  51c87c:	cmovg  edi,DWORD PTR [ebx-0x6d]
  51c880:	cwde   
  51c881:	sub    eax,DWORD PTR [ebx]
  51c883:	shl    DWORD PTR [ecx],cl
  51c885:	mov    DWORD PTR [ebp-0x13cb8742],ecx
  51c88b:	inc    esp
  51c88c:	ret    0x806b
  51c88f:	push   edi
  51c890:	cmp    al,0xa6
  51c892:	pop    esi
  51c893:	adc    DWORD PTR [edi-0x5759036f],esp
  51c899:	sub    dh,ch
  51c89b:	hlt    
  51c89c:	pop    esi
  51c89d:	add    BYTE PTR [esi],ch
  51c89f:	sub    bl,BYTE PTR [edx]
  51c8a1:	das    
  51c8a2:	into   
  51c8a3:	aas    
  51c8a4:	sbb    cl,0x64
  51c8a7:	xor    cl,dl
  51c8a9:	mov    esp,0x18bb3156
  51c8ae:	sub    BYTE PTR [edi+ecx*1],cl
  51c8b1:	stos   DWORD PTR es:[edi],eax
  51c8b2:	scas   al,BYTE PTR es:[edi]
  51c8b3:	jle    0x51c848
  51c8b5:	(bad)  
  51c8b6:	xchg   edx,eax
  51c8b7:	cmp    eax,0xe54d3274
  51c8bc:	mov    eax,ds:0xbd8972c5
  51c8c1:	repz test DWORD PTR [ebx+0x59ec8497],edi
  51c8c8:	outs   dx,DWORD PTR ds:[esi]
  51c8c9:	repz out dx,al
  51c8cb:	push   es
  51c8cc:	lahf   
  51c8cd:	dec    ecx
  51c8ce:	cmp    al,0xd6
  51c8d0:	jecxz  0x51c946
  51c8d2:	mov    eax,ds:0x11f60c1f
  51c8d7:	into   
  51c8d8:	push   0xfe92133b
  51c8dd:	(bad)  
  51c8de:	jbe    0x51c958
  51c8e0:	adc    ch,dl
  51c8e2:	and    ch,BYTE PTR [ebp+0x3b0bcf88]
  51c8e8:	jno    0x51c89b
  51c8ea:	imul   edi,DWORD PTR [ebx+0xb341851],0x37
  51c8f1:	shl    BYTE PTR [esi],0x31
  51c8f4:	ins    DWORD PTR es:[edi],dx
  51c8f5:	dec    ebx
  51c8f6:	jns    0x51c8c9
  51c8f8:	rcl    DWORD PTR [ebx+0xd6e56e8],cl
  51c8fe:	xchg   edx,eax
  51c8ff:	pop    ebp
  51c900:	std    
  51c901:	pop    esi
  51c902:	aam    0x21
  51c904:	aaa    
  51c905:	adc    DWORD PTR [edx],ebp
  51c907:	mov    ss,WORD PTR [ecx+0x127c21b4]
  51c90d:	gs call 0xb717b400
  51c913:	xchg   ebx,eax
  51c914:	sbb    BYTE PTR [eax-0xd9704c1],dh
  51c91a:	mov    bl,0x2a
  51c91c:	add    BYTE PTR [ebp-0x2c],ch
  51c91f:	cmp    DWORD PTR [eax+ebx*1+0x7b],ecx
  51c923:	or     DWORD PTR [esi],0x57
  51c926:	add    DWORD PTR [edx-0x4df4bc2a],0x7a2bf219
  51c930:	inc    edx
  51c931:	inc    edi
  51c932:	aam    0xcc
  51c934:	or     al,0x3f
  51c936:	cmc    
  51c937:	sub    dl,BYTE PTR [ebx+0x66c77ab1]
  51c93d:	and    dl,BYTE PTR ds:0x2aaf859b
  51c943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51c944:	cwde   
  51c945:	push   ds
  51c946:	adc    WORD PTR [esi],bp
  51c949:	sub    al,0xa1
  51c94b:	mov    edi,0x975ae64a
  51c950:	sub    al,0x72
  51c952:	xchg   edi,eax
  51c953:	pop    edx
  51c954:	mov    ch,0x92
  51c956:	xor    al,dl
  51c958:	rol    DWORD PTR [eax+0x2d],1
  51c95b:	nop
  51c95c:	(bad)  
  51c95d:	mov    ah,ch
  51c95f:	ja     0x51c930
  51c961:	test   BYTE PTR [ecx+0x5f],ch
  51c964:	sbb    eax,0x5016d907
  51c969:	mov    edx,0x28dc5e35
  51c96e:	pop    edx
  51c96f:	jl     0x51c930
  51c971:	push   es
  51c972:	mov    ecx,0xae49226d
  51c977:	ins    DWORD PTR es:[edi],dx
  51c978:	rol    BYTE PTR [ecx+ebx*1],1
  51c97b:	retw   0xf043
  51c97f:	adc    DWORD PTR [esi-0x542dda39],edx
  51c985:	call   0x73ab:0x1298f84a
  51c98c:	fwait
  51c98d:	lods   eax,DWORD PTR ds:[esi]
  51c98e:	fistp  QWORD PTR [esi]
  51c990:	jae    0x51c91d
  51c992:	jge    0x51c9fa
  51c994:	pop    esp
  51c995:	fdivr  DWORD PTR [eax]
  51c997:	xlat   BYTE PTR ds:[ebx]
  51c998:	imul   ecx,esi,0xa0ea33e6
  51c99e:	and    DWORD PTR [esi+0x39],ebp
  51c9a1:	bound  eax,QWORD PTR [ecx+eiz*2+0x1c]
  51c9a5:	inc    esp
  51c9a6:	sar    DWORD PTR [ebx-0x623d55a9],0xe1
  51c9ad:	hlt    
  51c9ae:	jnp    0x51c94c
  51c9b0:	js     0x51c951
  51c9b2:	fsub   DWORD PTR ds:0xc67bc334
  51c9b8:	fnstsw WORD PTR [esi]
  51c9ba:	mul    DWORD PTR [edx-0x787cd693]
  51c9c0:	adc    eax,0xc6e7c936
  51c9c5:	mov    ch,cl
  51c9c7:	ret    
  51c9c8:	add    DWORD PTR [ecx],ecx
  51c9ca:	(bad)  
  51c9cc:	pop    edi
  51c9cd:	jecxz  0x51c977
  51c9cf:	fs jne 0x51c9cb
  51c9d2:	repnz and DWORD PTR ds:0xf0784554,esi
  51c9d9:	inc    edx
  51c9da:	rol    DWORD PTR [eax+0x8c13a04],cl
  51c9e0:	pusha  
  51c9e1:	jge    0x51c9d9
  51c9e3:	pop    eax
  51c9e4:	les    ebp,FWORD PTR [ecx+0x2b]
  51c9e7:	into   
  51c9e8:	sbb    esp,DWORD PTR [edx]
  51c9ea:	cli    
  51c9eb:	(bad)  
  51c9ec:	sar    cl,cl
  51c9ee:	inc    edi
  51c9ef:	das    
  51c9f0:	icebp  
  51c9f1:	scas   eax,DWORD PTR es:[edi]
  51c9f2:	fst    QWORD PTR [edi+0x36]
  51c9f5:	sbb    al,ch
  51c9f7:	and    edi,DWORD PTR [ebx+0x55]
  51c9fa:	xor    DWORD PTR [ebp-0x45],esi
  51c9fd:	mov    cl,0xb7
  51c9ff:	cld    
  51ca00:	jns    0x51ca6f
  51ca02:	push   ss
  51ca03:	psubusw mm0,QWORD PTR [edx+ebp*8-0x11]
  51ca08:	xor    al,BYTE PTR [ebp+eax*2-0x13bc93ff]
  51ca0f:	data16 mov ah,al
  51ca12:	adc    ecx,edi
  51ca14:	jp     0x51ca27
  51ca16:	sub    al,0x5b
  51ca18:	enter  0xf177,0x14
  51ca1c:	jecxz  0x51c9ec
  51ca1e:	jl     0x51c9d7
  51ca20:	sub    eax,0x75735b05
  51ca25:	je     0x51c9b4
  51ca27:	je     0x51c9c4
  51ca29:	les    edi,FWORD PTR [ebp-0x6cd18007]
  51ca2f:	fld    DWORD PTR [ecx]
  51ca31:	iret   
  51ca32:	push   esi
  51ca33:	sbb    DWORD PTR [eax],0xb498b267
  51ca39:	sub    cl,BYTE PTR [esi+edx*1]
  51ca3c:	mov    ebp,0xd1529b6d
  51ca41:	inc    edi
  51ca42:	jmp    0x3ac5:0xb6a336b
  51ca49:	mov    bh,0xd0
  51ca4b:	call   0x3694:0xf1363aa6
  51ca52:	outs   dx,DWORD PTR ds:[esi]
  51ca53:	(bad)  
  51ca54:	in     al,dx
  51ca55:	mov    eax,ds:0x764a0f2d
  51ca5a:	jno    0x51ca26
  51ca5c:	cld    
  51ca5d:	dec    ebp
  51ca5e:	cmp    BYTE PTR [ecx-0x446e39fb],0x63
  51ca65:	sub    ecx,ebx
  51ca67:	mov    dh,0x5e
  51ca69:	jne    0x51cae8
  51ca6b:	pop    ds
  51ca6c:	pushf  
  51ca6d:	mov    ?,WORD PTR [edi+0x26]
  51ca70:	inc    ebp
  51ca71:	std    
  51ca72:	or     eax,0xdd0cb423
  51ca77:	ficom  DWORD PTR ds:0x3ff98f21
  51ca7d:	mov    ch,0xd6
  51ca7f:	jl     0x51ca74
  51ca81:	scas   eax,DWORD PTR es:[edi]
  51ca82:	or     ch,BYTE PTR [ecx-0x3dd26218]
  51ca88:	add    DWORD PTR [eax+0x2827007e],0xffffff9d
  51ca8f:	mov    ds:0xc6bdd5fb,eax
  51ca94:	sar    BYTE PTR ds:0xa3bd922c,cl
  51ca9a:	jp     0x51caa8
  51ca9c:	iret   
  51ca9d:	cmp    ebx,DWORD PTR [ebx-0x6398793e]
  51caa3:	dec    ebp
  51caa4:	mov    ecx,0xdc3a4902
  51caa9:	mov    WORD PTR [eax+0x2a],ss
  51caac:	dec    edx
  51caad:	pop    esi
  51caae:	loopne 0x51ca86
  51cab0:	mov    eax,ds:0xa166ad9a
  51cab5:	pop    ecx
  51cab6:	int    0xd4
  51cab8:	mov    ds:0xfce07d04,al
  51cabd:	dec    ebx
  51cabe:	jne    0x51caa5
  51cac0:	jo     0x51caf6
  51cac2:	adc    bh,BYTE PTR [ebx-0x32]
  51cac5:	test   al,0x17
  51cac7:	or     DWORD PTR [edi-0x50fe8906],edi
  51cacd:	jns    0x51cadb
  51cacf:	mov    WORD PTR [eax-0x7165eec7],?
  51cad5:	outs   dx,BYTE PTR ds:[esi]
  51cad6:	div    esi
  51cad8:	inc    esi
  51cad9:	cmp    al,BYTE PTR [edx-0x2e]
  51cadc:	loopne 0x51cb3e
  51cade:	mov    ds:0xefcafbac,eax
  51cae3:	xor    eax,edi
  51cae5:	std    
  51cae6:	or     ebx,DWORD PTR [ebp+0x38f6e7df]
  51caec:	ja     0x51cab1
  51caee:	shr    DWORD PTR [ecx-0x18],1
  51caf1:	pop    esi
  51caf2:	iret   
  51caf3:	cld    
  51caf4:	cmp    al,0x3c
  51caf6:	or     BYTE PTR [edx],al
  51caf8:	cmp    DWORD PTR [ecx],edx
  51cafa:	inc    edx
  51cafb:	dec    ebp
  51cafc:	xor    dh,ch
  51cafe:	mov    WORD PTR [esi],es
  51cb00:	or     al,BYTE PTR [ebp-0x70]
  51cb03:	sti    
  51cb04:	inc    esi
  51cb05:	pop    edx
  51cb06:	push   es
  51cb07:	pop    ecx
  51cb08:	cli    
  51cb09:	mov    al,ds:0x5a2d85be
  51cb0e:	lock adc edi,0x24de428a
  51cb15:	jecxz  0x51cac3
  51cb17:	and    dh,dl
  51cb19:	add    eax,0xa750cc6a
  51cb1e:	mov    dh,0x8b
  51cb20:	retf   
  51cb21:	out    0xac,al
  51cb23:	jg     0x51caf9
  51cb25:	pop    ds
  51cb26:	retf   
  51cb27:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  51cb29:	pop    ebp
  51cb2a:	stos   BYTE PTR es:[edi],al
  51cb2b:	stc    
  51cb2c:	stc    
  51cb2d:	dec    edx
  51cb2e:	ja     0x51cb74
  51cb30:	(bad)  
  51cb32:	cmp    edi,DWORD PTR [ebx-0x2a]
  51cb35:	dec    esp
  51cb36:	ret    
  51cb37:	push   esp
  51cb38:	(bad)  
  51cb39:	repz push es
  51cb3b:	mov    ebx,0x49ab14b3
  51cb40:	(bad)  
  51cb41:	jmp    0x88555fd6
  51cb46:	mov    dh,0x7
  51cb48:	jl     0x51cbc7
  51cb4a:	mov    esi,0xd25543a3
  51cb4f:	test   DWORD PTR [ecx+0x5],0x36105d57
  51cb56:	and    edi,DWORD PTR [edx+0x5866943f]
  51cb5c:	out    dx,al
  51cb5d:	cmp    al,0xfa
  51cb5f:	es sub eax,0xc8097cbd
  51cb65:	cdq    
  51cb66:	mov    ds:0x252e3b0e,eax
  51cb6b:	jae    0x51cb8b
  51cb6d:	lock mov ds:0x9fa30816,al
  51cb73:	(bad)  
  51cb74:	mov    ch,0xca
  51cb76:	xlat   BYTE PTR ds:[ebx]
  51cb77:	mov    ebx,es
  51cb79:	jo     0x51cbb3
  51cb7b:	xor    esp,ebp
  51cb7d:	sbb    edx,edx
  51cb7f:	dec    eax
  51cb80:	and    dh,ch
  51cb82:	(bad)  
  51cb83:	(bad)  [edi-0x27]
  51cb86:	out    0x59,eax
  51cb88:	int3   
  51cb89:	push   0x6c
  51cb8b:	mov    al,BYTE PTR [ebp+0x34663147]
  51cb91:	ins    DWORD PTR es:[edi],dx
  51cb92:	sub    bh,BYTE PTR [ebp+0x28eece44]
  51cb98:	jg     0x51cc15
  51cb9a:	sub    BYTE PTR [edi+0x29],al
  51cb9d:	dec    ebp
  51cb9e:	mov    ds:0x8bac2c8a,al
  51cba3:	loop   0x51cc10
  51cba5:	jg     0x51cbbf
  51cba7:	and    ebp,edx
  51cba9:	div    BYTE PTR [esi-0x5f]
  51cbac:	in     al,dx
  51cbad:	jp     0x51cb58
  51cbaf:	rcr    DWORD PTR [ebp+0x63b9801d],1
  51cbb5:	enter  0xf7ca,0xe1
  51cbb9:	in     eax,0x3b
  51cbbb:	pop    edi
  51cbbc:	daa    
  51cbbd:	xchg   ebx,eax
  51cbbe:	stc    
  51cbbf:	mov    ecx,0x2509deba
  51cbc4:	mov    cl,bl
  51cbc6:	mov    ebx,0xf85b1531
  51cbcb:	sub    al,0xdc
  51cbcd:	cmc    
  51cbce:	push   ebp
  51cbcf:	fistp  QWORD PTR [esi]
  51cbd1:	add    eax,0xa6991737
  51cbd6:	ja     0x51cb7a
  51cbd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51cbd9:	pusha  
  51cbda:	sbb    DWORD PTR [ebx-0x2bd9194c],ebp
  51cbe0:	push   es
  51cbe1:	lea    esi,[ebx]
  51cbe3:	jp     0x51cbfb
  51cbe5:	add    DWORD PTR [ecx+0x37],0xffffffbd
  51cbe9:	inc    eax
  51cbea:	inc    edi
  51cbeb:	lods   eax,DWORD PTR ds:[esi]
  51cbec:	lods   eax,DWORD PTR ds:[esi]
  51cbed:	xchg   edx,eax
  51cbee:	jge    0x51cbf1
  51cbf0:	mov    eax,0x6d896d48
  51cbf5:	xor    eax,0xadbe0f78
  51cbfa:	or     cl,BYTE PTR [esi+0x4c]
  51cbfd:	in     eax,0xad
  51cbff:	adc    DWORD PTR [ecx+0x55],esp
  51cc02:	add    DWORD PTR [ebp-0x8fd5bb7],ebx
  51cc08:	or     dl,ch
  51cc0a:	or     al,0xd9
  51cc0c:	ja     0x51cbb8
  51cc0e:	fist   WORD PTR [ebp+0x6b]
  51cc11:	dec    esi
  51cc12:	mov    esp,0x3ec1f749
  51cc17:	inc    eax
  51cc18:	lods   al,BYTE PTR ds:[esi]
  51cc19:	sbb    edx,DWORD PTR [ebp+0x30b32681]
  51cc1f:	push   esi
  51cc20:	(bad)  
  51cc21:	mov    ecx,0xdfce65bf
  51cc26:	test   al,0x5e
  51cc28:	sbb    al,0x31
  51cc2a:	push   edx
  51cc2b:	cmp    al,0x2
  51cc2d:	loopne 0x51cbf2
  51cc2f:	cwde   
  51cc30:	scas   eax,DWORD PTR es:[edi]
  51cc31:	jg     0x51cc25
  51cc33:	fstp   QWORD PTR [edx-0x42999ada]
  51cc39:	push   es
  51cc3a:	mov    ah,0x1b
  51cc3c:	inc    edi
  51cc3d:	dec    ebx
  51cc3e:	push   0xffffff86
  51cc40:	pop    edx
  51cc41:	cld    
  51cc42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51cc43:	or     cl,BYTE PTR [ebx]
  51cc45:	loop   0x51cbca
  51cc47:	inc    edx
  51cc48:	mov    ah,0xe7
  51cc4a:	icebp  
  51cc4b:	dec    eax
  51cc4c:	inc    ebp
  51cc4d:	xchg   ebx,eax
  51cc4e:	pop    ecx
  51cc4f:	or     esi,0x66
  51cc52:	jge    0x51cc5d
  51cc54:	and    al,0xc0
  51cc56:	ficom  DWORD PTR [edi+0x25]
  51cc59:	mov    edi,0x166efef0
  51cc5e:	enter  0x2c10,0x5
  51cc62:	pop    ebx
  51cc63:	sbb    edx,esp
  51cc65:	lods   al,BYTE PTR ds:[esi]
  51cc66:	sub    esi,DWORD PTR [edi+edi*2]
  51cc69:	adc    ecx,DWORD PTR [ebp-0x43]
  51cc6c:	push   ebp
  51cc6d:	push   ecx
  51cc6e:	pop    esi
  51cc6f:	imul   edx,ecx,0xffffffe4
  51cc72:	inc    ebp
  51cc73:	call   0xeb58a6d2
  51cc78:	xor    edi,DWORD PTR [edi+0x28]
  51cc7b:	mov    ch,0xa1
  51cc7d:	fs sub al,0x87
  51cc80:	xor    bh,ch
  51cc82:	or     DWORD PTR [ebp-0x77],edx
  51cc85:	push   esp
  51cc86:	mov    ebx,0x2df1e988
  51cc8b:	push   edx
  51cc8c:	xchg   ebx,eax
  51cc8d:	add    ecx,DWORD PTR [ecx+0x57]
  51cc90:	mov    cl,0xc8
  51cc92:	add    DWORD PTR [edi+0x73a8df07],ebx
  51cc98:	xchg   edi,eax
  51cc99:	and    DWORD PTR [edi],edx
  51cc9b:	mov    dl,0x29
  51cc9d:	test   BYTE PTR ds:0x629355df,0x2e
  51cca4:	mov    bh,0xcd
  51cca6:	push   0x50
  51cca8:	pop    ebp
  51cca9:	minps  xmm0,xmm1
  51ccac:	and    dh,BYTE PTR ss:[ebp-0x10]
  51ccb0:	jge    0x51cd2a
  51ccb2:	ficomp WORD PTR [eax-0x7e]
  51ccb5:	xchg   BYTE PTR [ebp-0x39383183],al
  51ccbb:	scas   eax,DWORD PTR es:[edi]
  51ccbc:	inc    esi
  51ccbd:	and    eax,0x80b512ac
  51ccc2:	xor    BYTE PTR [bx+si+0x5ff0],ah
  51ccc7:	cmp    BYTE PTR [edx+esi*8+0x2b],al
  51cccb:	fwait
  51cccc:	inc    esp
  51cccd:	mov    DWORD PTR [eax+0x46],0xab72143a
  51ccd4:	out    dx,al
  51ccd5:	add    al,0x2e
  51ccd7:	mov    ebx,0x1535b4e5
  51ccdc:	pop    ecx
  51ccdd:	int    0xe0
  51ccdf:	cmp    eax,esi
  51cce1:	xor    BYTE PTR [esi-0x51086f41],0x73
  51cce8:	mov    ecx,0x56da1f88
  51cced:	mov    ebp,0x2b13d3b0
  51ccf2:	mov    bl,0x70
  51ccf4:	push   edx
  51ccf5:	sub    BYTE PTR [ebx],ch
  51ccf7:	sti    
  51ccf8:	call   0x91e0:0x9b73a5ac
  51ccff:	add    dl,BYTE PTR [eax-0x420616fc]
  51cd05:	(bad)  
  51cd06:	push   edi
  51cd07:	cmp    al,BYTE PTR [ecx+0x5ddfb86b]
  51cd0d:	aad    0x64
  51cd0f:	push   ebp
  51cd10:	sub    al,al
  51cd12:	out    dx,al
  51cd13:	jg     0x51cca2
  51cd15:	mov    al,0x5b
  51cd17:	int    0x9
  51cd19:	retf   
  51cd1a:	fs aaa 
  51cd1c:	int    0xa1
  51cd1e:	out    0x99,al
  51cd20:	push   ds
  51cd21:	mov    ds:0x31158bb9,al
  51cd26:	cwde   
  51cd27:	cmp    ecx,DWORD PTR [edx]
  51cd29:	out    0x69,eax
  51cd2b:	loopne 0x51cd32
  51cd2d:	std    
  51cd2e:	repnz mov ds:0xd3a44887,eax
  51cd34:	and    eax,0x7ec743c3
  51cd39:	sbb    DWORD PTR [esi+ecx*8],esp
  51cd3c:	mov    al,ds:0xe63379ea
  51cd41:	les    edi,FWORD PTR [ebx]
  51cd43:	jge    0x51cd48
  51cd45:	dec    ebp
  51cd46:	and    bl,ah
  51cd48:	mov    dl,0xaa
  51cd4a:	adc    al,0x7e
  51cd4c:	call   0xc0dc:0xae416bb
  51cd53:	fldenv [edi-0x74]
  51cd56:	jmp    0xf31b:0xca71baa4
  51cd5d:	les    eax,FWORD PTR [ebp-0x6fd02bef]
  51cd63:	pop    edx
  51cd64:	not    ebp
  51cd66:	or     eax,0x742a9a4a
  51cd6b:	pop    eax
  51cd6c:	pop    esi
  51cd6d:	jnp    0x51cd75
  51cd6f:	mov    al,ds:0x47004126
  51cd74:	inc    edi
  51cd75:	jge    0x51cd3c
  51cd77:	mov    eax,ds:0x8d9f7041
  51cd7c:	out    0x80,al
  51cd7e:	pop    eax
  51cd7f:	les    ecx,FWORD PTR [ecx]
  51cd81:	sub    BYTE PTR [ebp+eax*4-0x422222b7],dh
  51cd88:	mov    WORD PTR [edx],gs
  51cd8a:	mov    esi,0x4b804731
  51cd8f:	outs   dx,BYTE PTR ds:[esi]
  51cd90:	push   ebp
  51cd91:	stc    
  51cd92:	test   DWORD PTR [ebp-0x69],0x19ef96ec
  51cd99:	and    DWORD PTR [ebp+0xa],0x1
  51cd9d:	inc    ebp
  51cd9e:	iret   
  51cd9f:	xor    al,0xbf
  51cda1:	rcr    DWORD PTR [edx-0x10],1
  51cda4:	mov    dh,0xec
  51cda6:	pop    edi
  51cda7:	and    cl,BYTE PTR [edx+ebx*4+0x16]
  51cdab:	mov    ecx,0x33d70c78
  51cdb0:	add    cl,ah
  51cdb2:	test   BYTE PTR [esi-0x2f],0x5e
  51cdb6:	scas   al,BYTE PTR es:[edi]
  51cdb7:	ss push esp
  51cdb9:	ja     0x51cde6
  51cdbb:	dec    ebp
  51cdbc:	xor    dl,0xd3
  51cdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51cdc0:	test   eax,0x65e2ff5a
  51cdc5:	jo     0x51ce0d
  51cdc7:	cmp    al,0x9c
  51cdc9:	mov    edx,DWORD PTR [edx]
  51cdcb:	mov    ebx,0x59411083
  51cdd0:	jl     0x51cd63
  51cdd2:	jecxz  0x51ce3f
  51cdd4:	mov    dh,0x49
  51cdd6:	fst    DWORD PTR [esi]
  51cdd8:	arpl   WORD PTR [ecx-0x50],si
  51cddb:	and    edx,esi
  51cddd:	data16 cmp BYTE PTR [esp+esi*1],0xfa
  51cde2:	jp     0x51ce19
  51cde4:	mov    WORD PTR [ebx],cs
  51cde6:	jne    0x51cd79
  51cde8:	sti    
  51cde9:	push   0x59d5c0e7
  51cdee:	or     esp,DWORD PTR [edi+0x6f]
  51cdf1:	enter  0x5bc4,0x20
  51cdf5:	stos   BYTE PTR es:[edi],al
  51cdf6:	mov    cl,0x35
  51cdf8:	je     0x51cdd5
  51cdfa:	(bad)  
  51cdfb:	(bad)  
  51cdfc:	js     0x51ce0c
  51cdfe:	rcl    DWORD PTR ds:0x5ce552ae,cl
  51ce04:	aam    0x14
  51ce06:	jge    0x51ce33
  51ce08:	daa    
  51ce09:	sti    
  51ce0a:	sti    
  51ce0b:	mov    ds:0xbaa92625,eax
  51ce10:	fst    DWORD PTR [edi+0x36]
  51ce13:	xchg   esi,eax
  51ce14:	inc    edx
  51ce15:	outs   dx,BYTE PTR ds:[esi]
  51ce16:	loope  0x51ce8d
  51ce18:	popa   
  51ce19:	adc    eax,0x7fdc3ed5
  51ce1e:	mov    ah,dh
  51ce20:	lahf   
  51ce21:	cli    
  51ce22:	(bad)  
  51ce23:	mov    edx,0x507074e7
  51ce28:	hlt    
  51ce29:	in     eax,0x80
  51ce2b:	scas   eax,DWORD PTR es:[edi]
  51ce2c:	mov    al,0xfc
  51ce2e:	inc    esi
  51ce2f:	jmp    0x95748652
  51ce34:	push   ss
  51ce35:	fdiv   st(6),st
  51ce37:	fdivr  DWORD PTR [esi+0x29b32807]
  51ce3d:	sub    ah,BYTE PTR [edx+0xfbf9caf]
  51ce43:	in     eax,0x1e
  51ce45:	pop    esp
  51ce46:	push   es
  51ce47:	sub    eax,0xfa9d2789
  51ce4c:	(bad)  
  51ce4d:	jmp    0x6fb8:0x66d527d2
  51ce54:	mov    dh,0x20
  51ce56:	jmp    0x51cde9
  51ce58:	ret    
  51ce59:	mov    al,ds:0x4a91e1ea
  51ce5e:	cmp    eax,0x3605287a
  51ce63:	xor    eax,0x24ef213e
  51ce68:	xor    ah,BYTE PTR [eax+edi*4]
  51ce6b:	pop    edx
  51ce6c:	cmp    eax,ebx
  51ce6e:	scas   al,BYTE PTR es:[edi]
  51ce6f:	je     0x51ced2
  51ce71:	jne    0x51ce64
  51ce73:	iret   
  51ce74:	inc    edi
  51ce75:	dec    esp
  51ce76:	aam    0x48
  51ce78:	inc    eax
  51ce79:	push   ebx
  51ce7a:	and    ch,BYTE PTR [ebp-0x441803d1]
  51ce80:	push   edx
  51ce81:	aad    0xcb
  51ce83:	or     ah,BYTE PTR [eax+ecx*4-0x69d2f546]
  51ce8a:	pop    edi
  51ce8b:	(bad)  
  51ce8d:	neg    esi
  51ce8f:	mov    cl,BYTE PTR [edi+0x40fbdd8b]
  51ce95:	cmp    al,0xf8
  51ce97:	out    0xfc,al
  51ce99:	lods   eax,DWORD PTR ds:[esi]
  51ce9a:	cs dec esi
  51ce9c:	or     BYTE PTR [ecx],0x93
  51ce9f:	push   ss
  51cea0:	dec    ecx
  51cea1:	and    al,0x69
  51cea3:	std    
  51cea4:	rcr    DWORD PTR [edx+0x1e2042bf],1
  51ceaa:	repnz mov eax,0x742164b5
  51ceb0:	gs jne 0x51cedc
  51ceb3:	mov    ds:0xb271c911,eax
  51ceb8:	fstp   TBYTE PTR [eax+0x33]
  51cebb:	adc    BYTE PTR [edx-0x3eb5ca3f],dh
  51cec1:	mov    ebp,0x430cf62e
  51cec6:	mov    ebp,0x67afa774
  51cecb:	cwde   
  51cecc:	sub    BYTE PTR [esi],dl
  51cece:	jp     0x51cf16
  51ced0:	cmp    eax,0xfb4a9ca9
  51ced5:	test   eax,0x5496932a
  51ceda:	imul   esi,DWORD PTR [eax+ebp*2-0x57a5c2cd],0x6f
  51cee2:	data16 and BYTE PTR [edx],cl
  51cee5:	mov    eax,0x9348ea97
  51ceea:	loopne 0x51cf1f
  51ceec:	push   esp
  51ceed:	retf   
  51ceee:	dec    ecx
  51ceef:	jl     0x51ce7f
  51cef1:	xchg   DWORD PTR [edi+0x42],esp
  51cef4:	sti    
  51cef5:	dec    esi
  51cef6:	dec    eax
  51cef7:	dec    esp
  51cef8:	nop
  51cef9:	pop    ecx
  51cefa:	dec    eax
  51cefb:	loop   0x51ceef
  51cefd:	das    
  51cefe:	test   eax,0xb708bc7c
  51cf03:	arpl   WORD PTR [ecx-0x4f],ax
  51cf06:	retf   
  51cf07:	inc    ebp
  51cf08:	push   es
  51cf09:	sbb    edi,DWORD PTR [edi+0x1b]
  51cf0c:	mov    al,ds:0xa651b02f
  51cf11:	iret   
  51cf12:	jno    0x51cf69
  51cf14:	sub    DWORD PTR [ebx],esi
  51cf16:	ins    BYTE PTR es:[edi],dx
  51cf17:	pusha  
  51cf18:	lahf   
  51cf19:	sti    
  51cf1a:	ret    
  51cf1b:	and    dl,BYTE PTR [edx+0x7fdc6fe]
  51cf21:	jmp    0x9ac9:0x1361f3e1
  51cf28:	push   ebx
  51cf29:	and    DWORD PTR [ebx],eax
  51cf2b:	inc    esp
  51cf2c:	or     eax,0xd20d7c67
  51cf31:	enter  0x32cf,0xe5
  51cf35:	ret    0x40d6
  51cf38:	push   ebp
  51cf39:	mov    gs,WORD PTR [edx]
  51cf3b:	mov    DWORD PTR [edx+0x2e313416],esp
  51cf41:	or     eax,0xe4e27ac2
  51cf46:	scas   al,BYTE PTR es:[edi]
  51cf47:	retf   0x8a3f
  51cf4a:	jl     0x51cf95
  51cf4c:	sbb    BYTE PTR [ecx],dh
  51cf4e:	int3   
  51cf4f:	fstp   DWORD PTR [ebx+ebx*4-0x21]
  51cf53:	pop    ebx
  51cf54:	cwde   
  51cf55:	aas    
  51cf56:	out    0x1b,eax
  51cf58:	rcr    DWORD PTR [ebx+0x54ac7648],0xe
  51cf5f:	arpl   WORD PTR [eax+ecx*8+0x2de3a4ec],di
  51cf66:	and    eax,ebp
  51cf68:	sbb    DWORD PTR [eax+esi*8],0xffffffa1
  51cf6c:	(bad)  
  51cf6d:	dec    ebx
  51cf6e:	adc    DWORD PTR [edx],esi
  51cf70:	inc    eax
  51cf71:	fidiv  WORD PTR [eax-0x6]
  51cf74:	in     al,0xef
  51cf76:	mov    fs,WORD PTR [edx]
  51cf78:	cwde   
  51cf79:	pop    ss
  51cf7a:	push   ecx
  51cf7b:	jo     0x51cfea
  51cf7d:	(bad)  
  51cf7e:	and    al,BYTE PTR [edi]
  51cf80:	xchg   ecx,eax
  51cf81:	jmp    0x51cfd5
  51cf83:	dec    eax
  51cf84:	dec    eax
  51cf85:	cmp    DWORD PTR [esi-0x49],eax
  51cf88:	and    BYTE PTR ds:0xaf9a60a7,0xa5
  51cf8f:	scas   al,BYTE PTR es:[edi]
  51cf90:	pop    ecx
  51cf91:	mov    edi,0x948d4c9f
  51cf96:	pop    edx
  51cf97:	dec    ebx
  51cf98:	xor    eax,0x62892463
  51cf9d:	inc    ebp
  51cf9e:	jmp    0xb2090d33
  51cfa3:	xor    eax,DWORD PTR [ebp-0x19]
  51cfa6:	dec    esp
  51cfa7:	out    0x6b,eax
  51cfa9:	je     0x51d009
  51cfab:	and    bh,ah
  51cfad:	out    dx,eax
  51cfae:	adc    al,BYTE PTR [eax]
  51cfb0:	adc    esi,DWORD PTR [ebx]
  51cfb2:	hlt    
  51cfb3:	add    al,0x59
  51cfb5:	mov    ecx,0x18c035cf
  51cfba:	add    eax,ecx
  51cfbc:	mov    ch,0xe5
  51cfbe:	push   es
  51cfbf:	jbe    0x51cfb3
  51cfc1:	sub    BYTE PTR [eax-0x60],ah
  51cfc4:	push   0xb74e1955
  51cfc9:	or     BYTE PTR [ebx],al
  51cfcb:	cmp    esp,DWORD PTR [ecx-0x51117e36]
  51cfd1:	add    ecx,DWORD PTR [esi-0x7c]
  51cfd4:	cs jge 0x51cf82
  51cfd7:	shl    BYTE PTR ds:0xa278cd81,0xde
  51cfde:	push   es
  51cfdf:	loop   0x51cfcb
  51cfe1:	stos   DWORD PTR es:[edi],eax
  51cfe2:	clc    
  51cfe3:	sub    BYTE PTR [ecx+0x14],dh
  51cfe6:	sbb    BYTE PTR [eax-0x45b93d26],bh
  51cfec:	cld    
  51cfed:	repz mov ds:0x6884653,eax
  51cff3:	lock dec edi
  51cff5:	sti    
  51cff6:	mov    WORD PTR [esi],ds
  51cff8:	cmp    BYTE PTR [esp+eiz*4],0xd0
  51cffc:	or     esp,esi
  51cffe:	sub    al,0x47
  51d000:	ins    DWORD PTR es:[edi],dx
  51d001:	adc    esp,DWORD PTR [eax-0x6c789b22]
  51d007:	sbb    esp,DWORD PTR [edi]
  51d009:	sbb    ch,BYTE PTR [edi-0x29]
  51d00c:	ja     0x51cfa1
  51d00e:	push   0x126ea346
  51d013:	mov    DWORD PTR [esi+edi*2],ecx
  51d016:	sbb    eax,0x14f16fb0
  51d01b:	jle    0x51cfc4
  51d01d:	lock shl BYTE PTR [eax],1
  51d020:	add    edx,ebp
  51d022:	aas    
  51d023:	bound  esi,QWORD PTR [eax+ebp*4]
  51d026:	(bad)  
  51d027:	jmp    0x5753c44f
  51d02c:	rol    BYTE PTR [edi-0x3d],cl
  51d02f:	add    BYTE PTR [esi-0x6d],al
  51d032:	sahf   
  51d033:	mov    esi,0x185cae86
  51d038:	in     eax,0xf1
  51d03a:	and    al,0x66
  51d03c:	mov    DWORD PTR [edx-0x4b7a083c],edx
  51d042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d043:	dec    esp
  51d044:	push   edi
  51d045:	scas   eax,DWORD PTR es:[edi]
  51d046:	popa   
  51d047:	mov    edi,0xda371668
  51d04c:	push   0xc89d00e9
  51d051:	or     DWORD PTR [edi-0x62],eax
  51d054:	dec    ecx
  51d055:	inc    edx
  51d056:	jbe    0x51d01b
  51d058:	cdq    
  51d059:	test   eax,0x9ec55b50
  51d05e:	jnp    0x51d07a
  51d060:	push   0x30
  51d062:	loopne 0x51d06f
  51d064:	sti    
  51d065:	push   edi
  51d066:	retf   0x8d56
  51d069:	add    dl,cl
  51d06b:	retf   
  51d06c:	cmc    
  51d06d:	adc    ch,bh
  51d06f:	ficom  WORD PTR [ebp-0x51346856]
  51d075:	(bad)  
  51d076:	dec    esp
  51d077:	or     edi,esi
  51d079:	rol    DWORD PTR [edx+0x7e],0x7e
  51d07d:	mov    esp,0xc1f7928
  51d082:	loopne 0x51d0d1
  51d084:	test   BYTE PTR [ecx+eiz*1],ch
  51d087:	pop    edx
  51d088:	push   ds
  51d089:	mov    esi,0xf3ef3d47
  51d08e:	or     BYTE PTR [ebp+0x7b6ce8f6],dh
  51d094:	lods   al,BYTE PTR ds:[esi]
  51d095:	in     eax,dx
  51d096:	xlat   BYTE PTR ds:[ebx]
  51d097:	inc    ebp
  51d098:	pusha  
  51d099:	retf   
  51d09a:	lds    eax,FWORD PTR [edx]
  51d09c:	outs   dx,DWORD PTR ds:[esi]
  51d09d:	xor    DWORD PTR [eax],ecx
  51d09f:	ret    
  51d0a0:	cvtps2pd xmm6,QWORD PTR [esi+0x1a]
  51d0a4:	loope  0x51d042
  51d0a6:	popf   
  51d0a7:	int    0x41
  51d0a9:	cmp    al,BYTE PTR [ecx+0x26b48bff]
  51d0af:	aad    0x75
  51d0b1:	dec    ebx
  51d0b2:	add    ch,BYTE PTR [ebp+0x5525a9eb]
  51d0b8:	out    dx,al
  51d0b9:	or     al,ah
  51d0bb:	xor    BYTE PTR [ebx-0x62],bh
  51d0be:	mov    BYTE PTR [ebp+eax*4+0x4dfa5f9f],bh
  51d0c5:	or     DWORD PTR ss:[ecx],0xffffff9f
  51d0c9:	push   cs
  51d0ca:	out    dx,al
  51d0cb:	div    BYTE PTR [ecx-0x309888c5]
  51d0d1:	dec    esi
  51d0d2:	pop    edi
  51d0d3:	sbb    eax,edx
  51d0d5:	sub    esi,DWORD PTR [edx+0x525a093f]
  51d0db:	daa    
  51d0dc:	dec    eax
  51d0dd:	pop    esi
  51d0de:	inc    edi
  51d0df:	cmc    
  51d0e0:	pop    esp
  51d0e1:	xchg   esp,eax
  51d0e2:	rcr    DWORD PTR ds:0xafd062d2,0x42
  51d0e9:	push   ecx
  51d0ea:	and    al,0xa
  51d0ec:	and    ch,BYTE PTR [ebx-0xc]
  51d0ef:	pop    eax
  51d0f0:	sub    eax,0x72b6dd24
  51d0f5:	push   es
  51d0f6:	or     eax,0xc213918e
  51d0fb:	add    eax,0x59b2abb
  51d100:	je     0x51d0c2
  51d102:	fmul   QWORD PTR [edx+0x41]
  51d105:	neg    DWORD PTR [eax]
  51d107:	adc    DWORD PTR [edx+0x5494a97a],ebp
  51d10d:	(bad)  [esi+0x515d88c5]
  51d113:	pop    edx
  51d114:	pop    esp
  51d115:	jmp    FWORD PTR [ecx]
  51d117:	iret   
  51d118:	add    dl,ah
  51d11a:	lods   al,BYTE PTR ds:[esi]
  51d11b:	dec    edx
  51d11c:	cmp    ebp,DWORD PTR [ebp-0x3a3be46c]
  51d122:	sbb    BYTE PTR [esi+ecx*8+0x7d967eed],bh
  51d129:	mov    bl,al
  51d12b:	cmp    BYTE PTR [eax+0x38],bl
  51d12e:	fldcw  WORD PTR [ebp-0x4e]
  51d131:	iret   
  51d132:	bound  edi,QWORD PTR [ecx+0xa38157b]
  51d138:	jge    0x51d154
  51d13a:	or     edi,DWORD PTR [ebp+0x74914b1b]
  51d140:	sti    
  51d141:	lss    ebp,FWORD PTR [edx]
  51d144:	in     al,dx
  51d145:	rcl    DWORD PTR [ecx+0x1ce3cbbb],cl
  51d14b:	fldenv [esi+ecx*1-0x615ed970]
  51d152:	sub    bh,al
  51d154:	sub    eax,0xcfa2605d
  51d159:	cmp    al,BYTE PTR [esi-0x33d70496]
  51d15f:	cmp    ch,BYTE PTR [esi+0x233819da]
  51d165:	call   0xac736b7b
  51d16a:	addr16 jb 0x51d0f8
  51d16d:	cwde   
  51d16e:	dec    ebx
  51d16f:	push   ds
  51d170:	adc    ebx,DWORD PTR [ecx-0x65]
  51d173:	ds pop edx
  51d175:	repz xchg edi,eax
  51d177:	jnp    0x51d1b9
  51d179:	jae    0x51d124
  51d17b:	jg     0x51d17f
  51d17d:	lds    esp,FWORD PTR [ebx-0x78]
  51d180:	aam    0xcd
  51d182:	clc    
  51d183:	outs   dx,BYTE PTR ds:[esi]
  51d184:	cmc    
  51d185:	adc    eax,0xce0168c6
  51d18a:	cmp    ebx,DWORD PTR gs:[ecx]
  51d18d:	xchg   ebp,eax
  51d18e:	mov    ch,0xbd
  51d190:	lds    ebx,FWORD PTR [edi-0x1f]
  51d193:	adc    edx,DWORD PTR [eax-0x7d]
  51d196:	lahf   
  51d197:	or     al,0xac
  51d199:	xchg   edx,eax
  51d19a:	std    
  51d19b:	pop    ss
  51d19c:	push   edx
  51d19d:	sub    eax,0xff133285
  51d1a2:	add    BYTE PTR [ebp+0x8],cl
  51d1a5:	push   ss
  51d1a6:	stc    
  51d1a7:	xchg   esp,eax
  51d1a8:	sbb    ecx,DWORD PTR [ebx+0xa8c04fb]
  51d1ae:	adc    ch,BYTE PTR [esp+edx*4]
  51d1b1:	pop    es
  51d1b2:	mov    al,ds:0x2fb21f6b
  51d1b7:	into   
  51d1b8:	push   0x5c
  51d1ba:	mov    WORD PTR [edi-0x5c],?
  51d1bd:	push   es
  51d1be:	mov    eax,ds:0x1de10bbc
  51d1c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d1c4:	mov    es,WORD PTR [ebp+eax*2-0x56]
  51d1c8:	mov    ds:0x6e068a3f,eax
  51d1cd:	dec    edx
  51d1ce:	(bad)  
  51d1cf:	stc    
  51d1d0:	lds    esi,FWORD PTR [ebp+0x76491744]
  51d1d6:	call   0x919e:0xa15e6b6b
  51d1dd:	test   al,0x6
  51d1df:	arpl   WORD PTR [eax+0x7c87dcb3],dx
  51d1e5:	xor    eax,0xa6617d45
  51d1eb:	loop   0x51d1ca
  51d1ed:	ret    0xe2ab
  51d1f0:	or     BYTE PTR [ebx],dh
  51d1f2:	int    0x6b
  51d1f4:	fs repz int3 
  51d1f7:	xchg   ebx,eax
  51d1f8:	mov    ch,0x25
  51d1fa:	lods   al,BYTE PTR ds:[esi]
  51d1fb:	pop    ebx
  51d1fc:	adc    al,BYTE PTR [esi]
  51d1fe:	jns    0x51d1db
  51d200:	inc    ebp
  51d201:	pop    esp
  51d202:	into   
  51d203:	jmp    0x37280888
  51d208:	xchg   edx,eax
  51d209:	sub    edx,DWORD PTR [ebx+0x17d59890]
  51d20f:	dec    esp
  51d210:	push   esp
  51d211:	mov    DWORD PTR [ecx+ebp*1+0x0],edi
  51d215:	callw  0x5f8a
  51d219:	sahf   
  51d21a:	sti    
  51d21b:	push   eax
  51d21c:	shr    BYTE PTR ds:0x7f74bb1b,0xea
  51d223:	pop    ecx
  51d224:	(bad)  
  51d225:	aaa    
  51d226:	scas   eax,DWORD PTR es:[edi]
  51d227:	fmul   st,st(5)
  51d229:	mov    ds:0x63eb65d8,al
  51d22e:	mov    bh,al
  51d230:	adc    eax,DWORD PTR [ecx+ecx*2]
  51d233:	dec    ebx
  51d234:	or     al,0x1d
  51d236:	out    0x28,eax
  51d238:	rol    BYTE PTR [ecx-0x5a],1
  51d23b:	mov    edx,0x90db6729
  51d240:	inc    ebp
  51d241:	dec    esp
  51d242:	inc    edi
  51d243:	(bad)  
  51d244:	jmp    0x51d2b7
  51d246:	pop    edx
  51d247:	push   edx
  51d248:	fnstcw WORD PTR [edx+edx*8]
  51d24b:	sbb    eax,0x71938b60
  51d250:	push   esp
  51d251:	cld    
  51d252:	mov    eax,ds:0xc084a626
  51d257:	not    ecx
  51d259:	mov    ah,0x8
  51d25b:	ss (bad) 
  51d25d:	xchg   edx,eax
  51d25e:	ja     0x51d25d
  51d260:	leave  
  51d261:	stc    
  51d262:	pop    ebp
  51d263:	retf   
  51d264:	out    0x83,eax
  51d266:	test   DWORD PTR [edx+0x5b],edx
  51d269:	enter  0xf504,0x70
  51d26d:	shl    BYTE PTR [ebx+0x558b154a],0x52
  51d274:	enter  0xf369,0x55
  51d278:	add    edx,ebx
  51d27a:	or     al,0x20
  51d27c:	xor    BYTE PTR [edx+eiz*1],0xa9
  51d280:	mov    edx,0xba4dde9c
  51d285:	(bad)  
  51d286:	lea    ebp,[ebp-0x47]
  51d289:	inc    esp
  51d28a:	mov    esp,0x4224e72b
  51d28f:	gs xor eax,0xa4bd1126
  51d295:	jbe    0x51d268
  51d297:	retf   0x3f74
  51d29a:	fcmovbe st,st(4)
  51d29c:	adc    eax,0x2ba1eed5
  51d2a1:	popf   
  51d2a2:	mov    bp,0x4a5c
  51d2a6:	sar    BYTE PTR [edi],0x8e
  51d2a9:	jp     0x51d237
  51d2ab:	jmp    0x687d:0xdfaf
  51d2b1:	iret   
  51d2b2:	jne    0x51d23b
  51d2b4:	rcl    DWORD PTR [ebx+0x1],cl
  51d2b7:	mov    edx,0x9b170cb9
  51d2bc:	lods   eax,DWORD PTR ds:[esi]
  51d2bd:	je     0x51d324
  51d2bf:	cwde   
  51d2c0:	mov    ds:0x9716aba,eax
  51d2c5:	jl     0x51d284
  51d2c7:	xor    eax,0x30737ce1
  51d2cc:	stos   BYTE PTR es:[edi],al
  51d2cd:	ss dec edx
  51d2cf:	(bad)  
  51d2d0:	xor    al,0xec
  51d2d2:	push   es
  51d2d3:	in     al,dx
  51d2d4:	out    dx,al
  51d2d5:	mov    edi,0xe44cffea
  51d2da:	fisub  WORD PTR [edx-0x39]
  51d2dd:	or     BYTE PTR [eax-0x23],dl
  51d2e0:	das    
  51d2e1:	cmc    
  51d2e2:	sbb    eax,0xb3f4d97f
  51d2e7:	push   esp
  51d2e8:	push   edx
  51d2e9:	das    
  51d2ea:	or     BYTE PTR [ebx-0x3c7fcbf3],0x1
  51d2f1:	pop    es
  51d2f2:	pop    ecx
  51d2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d2f4:	or     ebx,ebx
  51d2f6:	jmp    edi
  51d2f8:	nop
  51d2f9:	ficom  WORD PTR [ecx]
  51d2fb:	or     edx,DWORD PTR [edx]
  51d2fd:	out    dx,eax
  51d2fe:	jl     0x51d2c6
  51d300:	sti    
  51d301:	sub    eax,0x5ff4439e
  51d306:	cld    
  51d307:	mov    dl,0x51
  51d309:	les    edi,FWORD PTR [eax-0x63226c63]
  51d30f:	imul   edi,DWORD PTR [ecx-0xd],0x63757aef
  51d316:	cld    
  51d317:	fisttp WORD PTR [esi]
  51d319:	lods   eax,DWORD PTR ds:[esi]
  51d31a:	popa   
  51d31b:	jecxz  0x51d2c8
  51d31d:	xchg   esi,eax
  51d31e:	jmp    0x8a78:0x14d0baf8
  51d325:	dec    edi
  51d326:	lahf   
  51d327:	shr    BYTE PTR [ebp+0x3],1
  51d32a:	test   BYTE PTR [esi],bh
  51d32c:	xor    al,0x43
  51d32e:	ficom  WORD PTR [ebx-0x1964084c]
  51d334:	mov    bh,0xb
  51d336:	mov    edx,0xc8a15c0a
  51d33b:	int    0xe9
  51d33d:	cld    
  51d33e:	mov    al,0x95
  51d340:	fsubr  QWORD PTR [edx-0x6d]
  51d343:	lahf   
  51d344:	jmp    0x4d6:0xf2aaedda
  51d34b:	xlat   BYTE PTR ds:[ebx]
  51d34c:	popf   
  51d34d:	rcr    DWORD PTR [eax+esi*2-0x35cb9db9],cl
  51d354:	push   edx
  51d355:	sub    DWORD PTR [ebx+0x3a],ebx
  51d358:	cmp    DWORD PTR ds:0x3c0a7a7,edi
  51d35e:	call   0xa17e59ae
  51d363:	int    0x80
  51d365:	xchg   ebp,eax
  51d366:	and    ebx,esp
  51d368:	push   ds
  51d369:	retf   
  51d36a:	cmp    DWORD PTR [ebx],ebp
  51d36c:	sti    
  51d36d:	(bad)  
  51d36e:	shr    ebx,0xc1
  51d371:	pusha  
  51d372:	imul   esp,DWORD PTR [ebp-0x79],0xffffff89
  51d376:	sbb    al,0xcd
  51d378:	mov    eax,ds:0xb1fe62af
  51d37d:	and    eax,DWORD PTR [edx]
  51d37f:	je     0x51d3c4
  51d381:	ds dec esp
  51d383:	lods   eax,DWORD PTR ds:[esi]
  51d384:	pop    ds
  51d385:	fwait
  51d386:	and    bh,BYTE PTR [edi-0x7dc06df8]
  51d38c:	daa    
  51d38d:	sbb    ebx,ecx
  51d38f:	scas   eax,DWORD PTR es:[edi]
  51d390:	xchg   ebp,eax
  51d391:	xchg   esi,eax
  51d392:	adc    al,0x89
  51d394:	lahf   
  51d395:	jl     0x51d3d2
  51d397:	push   ebp
  51d398:	shl    BYTE PTR [esi+ebx*1-0x4b],0x6d
  51d39d:	pop    edi
  51d39e:	fisttp WORD PTR [eax+0x72]
  51d3a1:	scas   al,BYTE PTR es:[edi]
  51d3a2:	leave  
  51d3a3:	imul   esp,DWORD PTR [esi+0x74],0xffffffab
  51d3a7:	popa   
  51d3a8:	fdivr  st,st(4)
  51d3aa:	in     al,dx
  51d3ab:	dec    ecx
  51d3ac:	inc    esi
  51d3ad:	mov    ah,0x3d
  51d3af:	inc    edi
  51d3b0:	lea    esp,[edi+0x3c]
  51d3b3:	or     bl,ah
  51d3b5:	hlt    
  51d3b6:	push   0xffffff80
  51d3b8:	mov    bh,0x41
  51d3ba:	addr16 out 0x43,al
  51d3bd:	mov    ebp,0x60f17222
  51d3c2:	add    ebp,DWORD PTR [eax-0x7f]
  51d3c5:	loop   0x51d36a
  51d3c7:	fimul  WORD PTR [edi+ebx*4-0x2e5a8f7b]
  51d3ce:	shl    DWORD PTR [ebp+0x64],1
  51d3d1:	idiv   ebp
  51d3d3:	mov    BYTE PTR [edi+0x73],ch
  51d3d6:	inc    edx
  51d3d7:	pop    ecx
  51d3d8:	fld    QWORD PTR [edi-0x7a544ab4]
  51d3de:	sti    
  51d3df:	dec    edx
  51d3e0:	lea    edx,es:[ebx+ebp*1-0x1]
  51d3e5:	pop    eax
  51d3e6:	sub    ah,bl
  51d3e8:	imul   edx,DWORD PTR [eax-0x35ce23a3],0xee22acb
  51d3f2:	arpl   WORD PTR [ebx+0x5cdd06c4],si
  51d3f8:	nop
  51d3f9:	repz inc ebp
  51d3fb:	stos   DWORD PTR es:[edi],eax
  51d3fc:	add    eax,0x3ea2180c
  51d401:	aam    0x9c
  51d403:	jbe    0x51d45e
  51d405:	mov    ch,0x24
  51d407:	mov    edx,DWORD PTR [ebp-0x7c]
  51d40a:	aam    0x3b
  51d40c:	fs push ds
  51d40e:	dec    ebx
  51d40f:	cmp    DWORD PTR [edi+esi*2+0x1],ebp
  51d413:	sub    DWORD PTR [edi],edx
  51d415:	sbb    edi,ebx
  51d417:	or     bh,cl
  51d419:	in     eax,dx
  51d41a:	and    bh,BYTE PTR [eax-0x4c]
  51d41d:	sub    BYTE PTR [ebx-0x6297eada],al
  51d423:	(bad)  
  51d424:	dec    ecx
  51d425:	sub    eax,DWORD PTR [ebp+0x2040437a]
  51d42b:	in     al,dx
  51d42c:	or     DWORD PTR [ecx*4+0x77c22e18],edi
  51d433:	or     bh,BYTE PTR [ecx-0x713fd187]
  51d439:	fstp   TBYTE PTR [ecx+0x5f08cb66]
  51d43f:	int    0x1d
  51d441:	leave  
  51d442:	mov    esi,0xccb8060d
  51d447:	stc    
  51d448:	pop    esi
  51d449:	pop    ebx
  51d44a:	pop    edi
  51d44b:	lahf   
  51d44c:	into   
  51d44d:	sub    eax,0x9f687f1c
  51d452:	rcpps  xmm6,xmm5
  51d455:	add    BYTE PTR [ebp-0x57bcb967],ah
  51d45b:	add    eax,0xb03fc696
  51d460:	jl     0x51d497
  51d462:	or     ah,BYTE PTR [eax]
  51d464:	mov    edi,ss
  51d466:	mov    cl,0x55
  51d468:	shl    BYTE PTR [eax],1
  51d46a:	aam    0x45
  51d46c:	or     eax,0xf99d56a6
  51d471:	repz mov ah,0x3f
  51d474:	push   ebp
  51d475:	fwait
  51d476:	push   0xffffffea
  51d478:	fs push ecx
  51d47a:	adc    eax,0xaa9e4d6a
  51d47f:	rol    BYTE PTR fs:[esi+0x6a016b75],0xa6
  51d487:	lods   eax,DWORD PTR ds:[esi]
  51d488:	and    ch,dl
  51d48a:	out    0x88,eax
  51d48c:	pop    edx
  51d48d:	jp     0x51d4dd
  51d48f:	jb     0x51d41c
  51d491:	push   cs
  51d492:	or     BYTE PTR [edx+0xd],ah
  51d495:	repnz xor eax,0xf77c0d9c
  51d49b:	jecxz  0x51d444
  51d49d:	mov    dl,0x81
  51d49f:	outs   dx,DWORD PTR ds:[esi]
  51d4a0:	call   0xaf18c116
  51d4a5:	mov    eax,0x9e823af1
  51d4aa:	lds    edx,FWORD PTR [ecx]
  51d4ac:	(bad)  
  51d4ad:	outs   dx,DWORD PTR ds:[esi]
  51d4ae:	or     edx,DWORD PTR ds:0xd312df6b
  51d4b4:	sbb    al,0x34
  51d4b6:	int3   
  51d4b7:	dec    esi
  51d4b8:	and    BYTE PTR [esi+0x29],bl
  51d4bb:	sbb    dl,BYTE PTR [esi-0x69]
  51d4be:	and    DWORD PTR [ebp-0x47],0x63
  51d4c2:	jnp    0x51d47b
  51d4c4:	adc    BYTE PTR [ebp+0x4f0c2d54],al
  51d4ca:	pop    eax
  51d4cb:	mov    ebp,0x8950f459
  51d4d0:	sub    BYTE PTR [ebx-0x2eef70c5],dl
  51d4d6:	jmp    0x51d51f
  51d4d8:	repz sti 
  51d4da:	mov    ah,0x2f
  51d4dc:	ficom  DWORD PTR [edi-0x57]
  51d4df:	jo     0x51d4a0
  51d4e1:	fmulp  st(7),st
  51d4e3:	in     eax,dx
  51d4e4:	ss (bad) 
  51d4e6:	loop   0x51d4a6
  51d4e8:	mov    ch,0x9c
  51d4ea:	(bad)  
  51d4eb:	adc    al,0xfb
  51d4ed:	sbb    DWORD PTR [eax],esi
  51d4ef:	iret   
  51d4f0:	test   DWORD PTR [ecx+0xae6ad91],esp
  51d4f6:	or     cl,BYTE PTR [edi]
  51d4f8:	pop    esp
  51d4f9:	das    
  51d4fa:	out    dx,al
  51d4fb:	bound  ebx,QWORD PTR [eax+ebx*1+0x34]
  51d4ff:	cmp    BYTE PTR [edx-0x420cf460],ah
  51d505:	stos   BYTE PTR es:[edi],al
  51d506:	dec    ebp
  51d507:	stc    
  51d508:	pop    esi
  51d509:	add    dh,ah
  51d50b:	lods   al,BYTE PTR ds:[esi]
  51d50c:	test   al,0xd4
  51d50e:	call   0x4da90050
  51d513:	or     al,0x1f
  51d515:	push   ecx
  51d516:	inc    edx
  51d517:	ret    
  51d518:	getsec 
  51d51a:	in     eax,dx
  51d51b:	stos   DWORD PTR es:[edi],eax
  51d51c:	ds aam 0xc9
  51d51f:	or     dh,BYTE PTR [eax+ebx*1+0x2e]
  51d523:	cs test esi,esp
  51d526:	pop    ss
  51d527:	xchg   esp,eax
  51d528:	inc    ebp
  51d529:	cs iret 
  51d52b:	fidiv  DWORD PTR [ecx+0x72]
  51d52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d52f:	dec    eax
  51d530:	in     al,dx
  51d531:	mov    cl,0x21
  51d533:	xor    BYTE PTR [ecx+0x7e],ah
  51d536:	push   ecx
  51d537:	add    eax,0xa93b219f
  51d53c:	ins    BYTE PTR es:[edi],dx
  51d53d:	in     al,dx
  51d53e:	jne    0x51d59a
  51d540:	xchg   ebp,eax
  51d541:	adc    eax,0x3040ea49
  51d546:	daa    
  51d547:	aaa    
  51d548:	jb     0x51d545
  51d54a:	pop    ecx
  51d54b:	xor    bh,0x36
  51d54e:	outs   dx,DWORD PTR ds:[esi]
  51d54f:	out    0xd6,eax
  51d551:	xor    DWORD PTR ds:0xc5f2317c,esi
  51d557:	and    ebp,DWORD PTR [ecx]
  51d559:	(bad)  
  51d55a:	stos   BYTE PTR es:[edi],al
  51d55b:	pop    eax
  51d55c:	into   
  51d55d:	jmp    0x54086417
  51d562:	or     eax,0x27a3ed15
  51d567:	mov    bl,0x20
  51d569:	jg     0x51d55e
  51d56b:	push   ds
  51d56c:	ins    BYTE PTR es:[edi],dx
  51d56d:	mov    esi,0xe2e6a78d
  51d572:	lea    edx,[ecx-0x3b943be4]
  51d578:	lahf   
  51d579:	call   0xcd7f:0x947d454d
  51d580:	jmp    0x51d528
  51d582:	add    DWORD PTR [ecx+0x7d],esi
  51d585:	xor    ebx,DWORD PTR [edx]
  51d587:	cmp    eax,0xc398d947
  51d58c:	div    esi
  51d58e:	lea    ecx,[ebx-0x4d]
  51d591:	aam    0x51
  51d593:	or     al,0xb
  51d595:	lahf   
  51d596:	inc    eax
  51d597:	repnz inc ecx
  51d599:	sub    eax,0x39dc00c2
  51d59e:	outs   dx,DWORD PTR ds:[esi]
  51d59f:	pop    es
  51d5a0:	add    ebx,esi
  51d5a2:	push   ss
  51d5a3:	retf   0x8517
  51d5a6:	out    0xe8,eax
  51d5a8:	mov    eax,0xc0bd6d9f
  51d5ad:	in     al,0x35
  51d5af:	sbb    edi,ebp
  51d5b1:	sub    DWORD PTR [ecx*2+0x75068852],ebx
  51d5b8:	cli    
  51d5b9:	jge    0x51d607
  51d5bb:	or     eax,0xb61b1f8a
  51d5c0:	out    0x36,eax
  51d5c2:	ins    DWORD PTR es:[edi],dx
  51d5c3:	call   0x6f7a:0x56af0ee3
  51d5ca:	imul   ecx,DWORD PTR [edi-0x72061a8],0xffffffdd
  51d5d1:	sbb    al,0xc4
  51d5d3:	push   esi
  51d5d4:	(bad)  [eax]
  51d5d6:	fidiv  DWORD PTR [edi-0x2a]
  51d5d9:	arpl   ax,ax
  51d5db:	in     eax,0x68
  51d5dd:	stc    
  51d5de:	pop    esp
  51d5df:	xchg   edx,eax
  51d5e0:	cmp    dl,bl
  51d5e2:	mov    bh,0xbb
  51d5e4:	ds cmc 
  51d5e6:	mov    ah,0xc1
  51d5e8:	adc    bl,bh
  51d5ea:	popf   
  51d5eb:	retf   
  51d5ec:	xor    DWORD PTR [ebx],esi
  51d5ee:	cli    
  51d5ef:	leave  
  51d5f0:	and    edx,DWORD PTR [esi+0x17]
  51d5f3:	add    edi,DWORD PTR [esi]
  51d5f5:	pop    ds
  51d5f6:	arpl   WORD PTR [edx],cx
  51d5f8:	cmp    BYTE PTR [ebp-0x58c3f342],al
  51d5fe:	jp     0x51d5f3
  51d600:	mov    cl,0xae
  51d602:	out    0x67,al
  51d604:	jno    0x51d598
  51d606:	test   BYTE PTR [edi],dl
  51d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d609:	call   0x247e345f
  51d60e:	movups XMMWORD PTR [ebx+0x7a],xmm4
  51d612:	les    ebx,FWORD PTR [ebx]
  51d614:	cmp    DWORD PTR [edi],ecx
  51d616:	xchg   edx,eax
  51d617:	ror    DWORD PTR [ebx-0x75],cl
  51d61a:	icebp  
  51d61b:	sub    DWORD PTR [esi],0x67d7bf6d
  51d621:	dec    esp
  51d622:	into   
  51d623:	stos   BYTE PTR es:[edi],al
  51d624:	or     BYTE PTR [esi+ecx*4-0x738d9f74],dh
  51d62b:	pop    ss
  51d62c:	push   eax
  51d62d:	(bad)  
  51d62e:	nop
  51d62f:	push   eax
  51d630:	(bad)  
  51d631:	in     eax,dx
  51d632:	ds jbe 0x51d603
  51d635:	cmp    BYTE PTR [ecx+eiz*1-0x70],ch
  51d639:	jl     0x51d64b
  51d63b:	push   es
  51d63c:	rcr    BYTE PTR [edi+0x40ae08a0],0xc3
  51d643:	rol    BYTE PTR [edx+0x50580c5d],1
  51d649:	push   edi
  51d64a:	pop    esp
  51d64b:	js     0x51d5f7
  51d64d:	iret   
  51d64e:	daa    
  51d64f:	adc    eax,DWORD PTR [edx+0x687a7317]
  51d655:	arpl   si,bp
  51d657:	les    esp,FWORD PTR [esi+ebp*2-0x4346b35d]
  51d65e:	gs pop edx
  51d660:	jne    0x51d66e
  51d662:	loope  0x51d67c
  51d664:	mov    ecx,0xd77d22d8
  51d669:	aas    
  51d66a:	dec    eax
  51d66b:	imul   ebp,DWORD PTR [esi],0xffffffb2
  51d66e:	lods   eax,DWORD PTR ds:[esi]
  51d66f:	mov    eax,ds:0x6fba3cbc
  51d674:	inc    ebx
  51d675:	cmp    esp,DWORD PTR gs:[eax]
  51d678:	pop    ecx
  51d679:	stc    
  51d67a:	mov    ?,WORD PTR [esi-0x3a98ea76]
  51d680:	outs   dx,BYTE PTR ds:[esi]
  51d681:	test   eax,0x5eb2f546
  51d686:	pop    ds
  51d687:	or     eax,0xd4564ad1
  51d68c:	xor    al,0x52
  51d68e:	jl     0x51d629
  51d690:	rcl    WORD PTR [edi+0x14b5c5ed],0x5d
  51d698:	in     al,0xba
  51d69a:	push   ss
  51d69b:	jno    0x51d6dd
  51d69d:	cdq    
  51d69e:	inc    edx
  51d69f:	inc    edi
  51d6a0:	not    DWORD PTR [esp+ebx*2-0x3ac2d29e]
  51d6a7:	icebp  
  51d6a8:	inc    edi
  51d6a9:	arpl   WORD PTR [eax-0x48],sp
  51d6ac:	sbb    al,0x2c
  51d6ae:	je     0x51d707
  51d6b0:	add    DWORD PTR [esi+0x44dee795],ecx
  51d6b6:	adc    esp,edi
  51d6b8:	jle    0x51d644
  51d6ba:	(bad)  [ebx+eiz*8]
  51d6bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51d6be:	pop    ecx
  51d6bf:	push   edx
  51d6c0:	pop    ss
  51d6c1:	fcmovbe st,st(5)
  51d6c3:	xchg   edx,eax
  51d6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d6c5:	inc    ebp
  51d6c6:	mov    esi,0x8aa7d908
  51d6cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51d6cc:	je     0x51d71d
  51d6ce:	sub    ah,BYTE PTR [ebx]
  51d6d0:	int3   
  51d6d1:	int3   
  51d6d2:	push   0xd73d12b4
  51d6d7:	js     0x51d6e0
  51d6d9:	dec    esp
  51d6da:	xchg   ebp,eax
  51d6db:	mov    ebx,0x9e6b35b7
  51d6e0:	dec    eax
  51d6e1:	fldenv [edx+0x24054eea]
  51d6e7:	(bad)  
  51d6e8:	(bad)  
  51d6e9:	fbstp  TBYTE PTR [esi]
  51d6eb:	sbb    DWORD PTR [edx],esi
  51d6ed:	scas   al,BYTE PTR es:[edi]
  51d6ee:	cld    
  51d6ef:	aas    
  51d6f0:	inc    edi
  51d6f1:	lods   al,BYTE PTR ds:[esi]
  51d6f2:	push   ecx
  51d6f3:	jb     0x51d6d4
  51d6f5:	rcr    edx,cl
  51d6f7:	jo     0x51d734
  51d6f9:	push   ecx
  51d6fa:	arpl   WORD PTR [esi],sp
  51d6fc:	addr16 or al,0x59
  51d6ff:	inc    eax
  51d700:	popa   
  51d701:	fistp  WORD PTR [esi-0x6f]
  51d704:	aaa    
  51d705:	jmp    0xc473:0x5a8c1eb0
  51d70c:	fiadd  DWORD PTR fs:[esi-0x33d7876]
  51d713:	and    ebx,DWORD PTR [eax+0x86f1c70]
  51d719:	sub    BYTE PTR [ecx-0x7e83e59b],ah
  51d71f:	jnp    0x51d728
  51d721:	jecxz  0x51d79b
  51d723:	push   ebx
  51d724:	inc    eax
  51d725:	addr16 xor eax,ebx
  51d728:	jl     0x51d77d
  51d72a:	push   es
  51d72b:	pop    ss
  51d72c:	jae    0x51d763
  51d72e:	or     cl,BYTE PTR [ebx]
  51d730:	in     al,dx
  51d731:	(bad)  
  51d732:	aad    0x60
  51d734:	jbe    0x51d70f
  51d736:	xlat   BYTE PTR ds:[ebx]
  51d737:	ins    BYTE PTR es:[edi],dx
  51d738:	adc    dl,BYTE PTR [edx-0x61]
  51d73b:	add    ebx,DWORD PTR [eax-0x62e8a91a]
  51d741:	popa   
  51d742:	int    0x60
  51d744:	push   ecx
  51d745:	xor    ah,bh
  51d747:	pop    ds
  51d748:	dec    esi
  51d749:	sti    
  51d74a:	icebp  
  51d74b:	mov    ebx,0x6add6af8
  51d751:	mov    edi,0x7bde894e
  51d756:	test   DWORD PTR [edx-0x32ef6ccc],edx
  51d75c:	cmp    ah,BYTE PTR [ecx-0x3f]
  51d75f:	imul   edi,DWORD PTR [edi+0x14fe4b67],0xe41f61a1
  51d769:	pop    es
  51d76a:	ja     0x51d7a0
  51d76c:	fst    DWORD PTR [edx]
  51d76e:	xchg   esp,eax
  51d76f:	push   esi
  51d770:	dec    edx
  51d771:	cwde   
  51d772:	(bad)
  51d776:	lds    ebp,FWORD PTR [ebp+0x20794d7b]
  51d77c:	inc    ebp
  51d77d:	sub    edx,DWORD PTR [ebx+edx*2]
  51d780:	ins    BYTE PTR es:[edi],dx
  51d781:	push   edx
  51d782:	imul   edx,DWORD PTR [edi+0x4f4b259c],0xffffff84
  51d789:	cmc    
  51d78a:	or     al,0xac
  51d78c:	mov    ss,WORD PTR [ebx]
  51d78e:	push   edi
  51d78f:	cmp    eax,0x9c0005ea
  51d794:	sbb    al,0x3d
  51d796:	rol    BYTE PTR ds:0x8d08bd94,0xdd
  51d79d:	cli    
  51d79e:	jmp    0x8b1d:0xc01cb8d7
  51d7a5:	ds aad 0x84
  51d7a8:	arpl   WORD PTR [eax-0x20],di
  51d7ab:	out    0x35,eax
  51d7ad:	pop    esp
  51d7ae:	and    BYTE PTR [edx],bh
  51d7b0:	in     al,0x90
  51d7b2:	rol    BYTE PTR [edi],1
  51d7b4:	cmp    eax,0x11fb4ff3
  51d7b9:	cmp    ah,al
  51d7bb:	cmc    
  51d7bc:	sti    
  51d7bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51d7be:	les    eax,FWORD PTR ds:0x6d83270
  51d7c4:	pop    esp
  51d7c5:	push   cs
  51d7c6:	rcr    DWORD PTR ds:0x109da97f,1
  51d7cc:	lods   eax,DWORD PTR ds:[esi]
  51d7cd:	in     al,0x8c
  51d7cf:	jle    0x51d822
  51d7d1:	in     al,dx
  51d7d2:	adc    edx,DWORD PTR [edi+0x383787e8]
  51d7d8:	pop    es
  51d7d9:	push   ebp
  51d7da:	mov    edi,ecx
  51d7dc:	mov    esp,0xddfb6aa4
  51d7e1:	inc    ebp
  51d7e2:	cmp    BYTE PTR [eax],al
  51d7e4:	inc    esi
  51d7e5:	dec    edi
  51d7e6:	ins    DWORD PTR es:[edi],dx
  51d7e7:	push   cs
  51d7e8:	iret   
  51d7e9:	jae    0x51d7c5
  51d7eb:	ss or  eax,0x88308982
  51d7f1:	cmc    
  51d7f2:	jecxz  0x51d777
  51d7f4:	test   al,0x57
  51d7f6:	inc    edi
  51d7f7:	imul   ebx,DWORD PTR [esi-0x58e051e9],0x958a5703
  51d801:	mov    ebx,0x6a909753
  51d806:	mov    ah,0xb0
  51d808:	mov    eax,DWORD PTR [edi-0x721f069b]
  51d80e:	sub    ebx,ecx
  51d810:	mov    edx,0xe0cd476e
  51d815:	inc    edx
  51d816:	jns    0x51d813
  51d818:	sar    BYTE PTR [eax],0x3
  51d81b:	add    al,BYTE PTR [ebp-0x2f]
  51d81e:	sbb    ecx,ebx
  51d820:	lds    esp,FWORD PTR [edi]
  51d822:	stos   BYTE PTR es:[edi],al
  51d823:	(bad)  
  51d824:	mov    ebp,0x78ef5392
  51d829:	pop    ebx
  51d82a:	mov    dl,0xbd
  51d82c:	push   ebx
  51d82d:	rcr    BYTE PTR [ebx+0x2c],cl
  51d830:	or     BYTE PTR ds:0xd5696a21,dl
  51d836:	scas   al,BYTE PTR es:[edi]
  51d837:	jg     0x51d7e6
  51d839:	(bad)  
  51d83a:	enter  0xaa5,0xf4
  51d83e:	jae    0x51d895
  51d840:	rcr    BYTE PTR ds:0x389837d3,0x7
  51d847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d848:	push   eax
  51d849:	and    DWORD PTR [ecx],ebp
  51d84b:	jp     0x51d8b0
  51d84d:	call   0xebc9ed7f
  51d852:	mov    ecx,DWORD PTR [esi]
  51d854:	arpl   WORD PTR [esi-0x38e44aa4],ax
  51d85a:	xor    eax,eax
  51d85c:	adc    BYTE PTR [ebp-0x21],dl
  51d85f:	outs   dx,DWORD PTR ds:[esi]
  51d860:	dec    eax
  51d861:	imul   esp,DWORD PTR [esi+0x765e20f],0xaa976736
  51d86b:	lock es int 0x5d
  51d86f:	jo     0x51d822
  51d871:	test   bl,0xc3
  51d874:	out    0xa0,eax
  51d876:	mov    esi,0x356a13b1
  51d87b:	inc    esp
  51d87c:	adc    DWORD PTR [eax+0x31],esi
  51d87f:	mov    bh,0x17
  51d881:	fwait
  51d882:	xor    edi,edi
  51d884:	push   ecx
  51d885:	repnz xor ecx,DWORD PTR [ebp-0x65f3928e]
  51d88c:	adc    DWORD PTR [ebx-0x1f],edx
  51d88f:	neg    BYTE PTR [eax-0xb601d7b]
  51d895:	pop    ebp
  51d896:	lods   eax,DWORD PTR ds:[esi]
  51d897:	pop    esp
  51d898:	push   edx
  51d899:	mov    ecx,0xa066d055
  51d89e:	xlat   BYTE PTR ds:[ebx]
  51d89f:	push   edx
  51d8a0:	je     0x51d8e4
  51d8a2:	sub    eax,edi
  51d8a4:	sub    al,0x92
  51d8a6:	sub    al,0x51
  51d8a8:	inc    esi
  51d8a9:	popf   
  51d8aa:	loope  0x51d88b
  51d8ac:	push   ebp
  51d8ad:	pop    ecx
  51d8ae:	and    ecx,ebp
  51d8b0:	add    BYTE PTR [ebx+0x3d811482],ah
  51d8b6:	ins    DWORD PTR es:[edi],dx
  51d8b7:	mov    ds:0x8e587b7b,al
  51d8bc:	cmp    ch,BYTE PTR [eax+0x19eafa32]
  51d8c2:	dec    edi
  51d8c3:	pop    edx
  51d8c4:	sti    
  51d8c5:	and    ebp,edi
  51d8c7:	out    0xcc,al
  51d8c9:	sub    BYTE PTR [edi+edi*1],0xa5
  51d8cd:	xchg   esp,eax
  51d8ce:	jmp    0x51d94a
  51d8d0:	(bad)  
  51d8d1:	push   esp
  51d8d2:	pop    ds
  51d8d3:	cdq    
  51d8d4:	shr    BYTE PTR [edi+0x41],0x33
  51d8d8:	or     DWORD PTR ds:0x2b306471,0x44
  51d8df:	lods   eax,DWORD PTR ds:[esi]
  51d8e0:	and    al,0xf4
  51d8e2:	inc    esp
  51d8e3:	fs hlt 
  51d8e5:	and    BYTE PTR [ecx-0x1d6b09dc],cl
  51d8eb:	and    BYTE PTR [ecx+0x78],ah
  51d8ee:	repnz bound ebx,QWORD PTR [edx]
  51d8f1:	adc    bl,cl
  51d8f3:	xchg   ebp,eax
  51d8f4:	xor    al,0x2e
  51d8f6:	sub    cl,BYTE PTR [esi]
  51d8f8:	das    
  51d8f9:	jns    0x51d92c
  51d8fb:	fwait
  51d8fc:	inc    ebx
  51d8fd:	and    DWORD PTR [esi-0x3b],ebp
  51d900:	lahf   
  51d901:	pop    ds
  51d902:	gs (bad) 
  51d904:	enter  0xede8,0x54
  51d908:	jb     0x51d933
  51d90a:	mov    ebx,0xda042370
  51d90f:	pop    ebp
  51d910:	mov    ecx,0xd94d04d3
  51d915:	xor    eax,0x39cba508
  51d91a:	pop    ds
  51d91b:	jmp    0x51d8dc
  51d91d:	mov    bl,0x22
  51d91f:	jle    0x51d90e
  51d921:	std    
  51d922:	jle    0x51d8cc
  51d924:	fs icebp 
  51d926:	cmp    al,0xa7
  51d928:	xchg   esi,eax
  51d929:	pusha  
  51d92a:	push   ecx
  51d92b:	push   edx
  51d92c:	jle    0x51d8e1
  51d92e:	lahf   
  51d92f:	imul   ebp,DWORD PTR ds:0xc32143a8,0xfffffff3
  51d936:	pop    esi
  51d937:	cmp    DWORD PTR [ebx-0xd],ebx
  51d93a:	jnp    0x51d984
  51d93c:	push   eax
  51d93d:	or     DWORD PTR [ebp+esi*4+0x7d3b704f],edi
  51d944:	push   ecx
  51d945:	mov    ebp,0x77d82df0
  51d94a:	inc    eax
  51d94b:	sbb    bl,BYTE PTR [eax-0x40]
  51d94e:	pushf  
  51d94f:	dec    ebx
  51d950:	adc    ebp,DWORD PTR [ebx+esi*4-0x305a0159]
  51d957:	xor    dh,BYTE PTR [edi-0x71145c5c]
  51d95d:	pmuludq mm4,QWORD PTR [edx-0x70a4d30f]
  51d964:	mov    ebx,0xf8bcb6dd
  51d969:	dec    esp
  51d96a:	sub    al,0x8a
  51d96c:	push   ss
  51d96d:	and    dh,BYTE PTR [ebp+ebx*2-0x6f]
  51d971:	mov    bh,0xd4
  51d973:	mov    al,ds:0xbb977c67
  51d978:	icebp  
  51d979:	mov    dh,0x90
  51d97b:	push   ds
  51d97c:	(bad)  
  51d97e:	jle    0x51d954
  51d980:	stos   DWORD PTR es:[edi],eax
  51d981:	cmp    al,0xbe
  51d983:	xchg   ecx,eax
  51d984:	push   cs
  51d985:	out    0xa6,al
  51d987:	and    ah,bl
  51d989:	and    DWORD PTR [ecx+0x68],edx
  51d98c:	sub    DWORD PTR [edi-0x44508a27],0x8fb4bb22
  51d996:	loope  0x51d9be
  51d998:	push   edi
  51d999:	xchg   ebx,eax
  51d99a:	xlat   BYTE PTR ds:[ebx]
  51d99b:	xchg   BYTE PTR [esi+ebx*1],bh
  51d99e:	adc    DWORD PTR [edi-0x8],esi
  51d9a1:	enter  0xe3bf,0xbc
  51d9a5:	ret    
  51d9a6:	jnp    0x51d9f9
  51d9a8:	dec    esp
  51d9a9:	cld    
  51d9aa:	dec    ebx
  51d9ab:	or     al,0x3f
  51d9ad:	xor    esp,DWORD PTR [edi]
  51d9af:	mov    ds:0x14c1998e,al
  51d9b4:	call   0x94492987
  51d9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51d9ba:	xchg   ebx,ebx
  51d9bc:	(bad)  
  51d9bd:	icebp  
  51d9be:	outs   dx,DWORD PTR ds:[esi]
  51d9bf:	sub    al,0x33
  51d9c1:	cmp    eax,0x4469aad2
  51d9c6:	or     DWORD PTR [edx-0x1],edi
  51d9c9:	mov    al,ds:0xff2012fe
  51d9ce:	push   eax
  51d9cf:	sub    al,0x4b
  51d9d1:	hlt    
  51d9d2:	sbb    BYTE PTR [esi+0x40],0xb0
  51d9d6:	arpl   WORD PTR [esp+ebp*4],sp
  51d9d9:	test   esi,esi
  51d9db:	mov    ?,WORD PTR [ecx-0x80]
  51d9de:	inc    ecx
  51d9df:	add    DWORD PTR [ecx-0x41],edx
  51d9e2:	jne    0x51da4f
  51d9e4:	adc    al,0x37
  51d9e6:	push   0x1cc2ec1
  51d9eb:	test   BYTE PTR [ecx],0xcb
  51d9ee:	fild   QWORD PTR [esi]
  51d9f0:	push   ecx
  51d9f1:	mov    bl,0xe0
  51d9f3:	aas    
  51d9f4:	mov    ds:0xbc4ebc6e,al
  51d9f9:	jmp    DWORD PTR [eax-0x9b01c65]
  51d9ff:	pushf  
  51da00:	cmp    ah,BYTE PTR [esi-0x5b481c4c]
  51da06:	cmc    
  51da07:	cmp    al,0xeb
  51da09:	popf   
  51da0a:	ss scas al,BYTE PTR es:[edi]
  51da0c:	cmp    dl,bl
  51da0e:	mov    WORD PTR [ebp-0x6422e97b],?
  51da14:	into   
  51da15:	jns    0x51da7d
  51da17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51da18:	loopne 0x51da72
  51da1a:	xchg   ecx,esp
  51da1c:	das    
  51da1d:	ror    BYTE PTR [eax],1
  51da1f:	clc    
  51da20:	and    edi,DWORD PTR [edx]
  51da22:	stos   BYTE PTR es:[edi],al
  51da23:	sbb    BYTE PTR [ebp-0x33],dl
  51da26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51da27:	xor    ebp,DWORD PTR [ecx-0x238eed77]
  51da2d:	test   BYTE PTR [ebx-0xe],al
  51da30:	inc    eax
  51da31:	shl    ebp,cl
  51da33:	sbb    al,0x32
  51da35:	(bad)  
  51da36:	hlt    
  51da37:	cs dec eax
  51da39:	mov    dh,0xe0
  51da3b:	stos   DWORD PTR es:[edi],eax
  51da3c:	cmp    al,ah
  51da3e:	repnz inc edi
  51da40:	callw  0xdd45
  51da44:	inc    eax
  51da45:	mov    ch,0x8a
  51da47:	out    0xf3,al
  51da49:	daa    
  51da4a:	cmp    dl,BYTE PTR [ebp+0x56]
  51da4d:	idiv   BYTE PTR [ecx]
  51da4f:	daa    
  51da50:	add    ch,al
  51da52:	mov    BYTE PTR [ebx-0x36],ch
  51da55:	mov    ebp,0x700975d
  51da5a:	je     0x51dada
  51da5c:	pop    esp
  51da5d:	lea    ebp,[esi]
  51da5f:	cs ss jo 0x51da0d
  51da63:	fisub  WORD PTR [edi-0x76168cf9]
  51da69:	adc    eax,0x31613250
  51da6e:	jae    0x51d9f9
  51da70:	push   ebp
  51da71:	inc    esi
  51da72:	mov    eax,0xe511e36b
  51da77:	call   0x4bd925a3
  51da7c:	xlat   BYTE PTR ds:[ebx]
  51da7d:	inc    ecx
  51da7e:	jbe    0x51da27
  51da80:	push   0x65
  51da82:	pop    ecx
  51da83:	push   0x6aa90bd8
  51da88:	pushf  
  51da89:	bound  ecx,QWORD PTR [esi+0x7ed64d5]
  51da8f:	inc    di
  51da91:	jae    0x51da93
  51da93:	cmp    eax,0xdc91e43b
  51da98:	push   ss
  51da99:	push   ebp
  51da9a:	cli    
  51da9b:	clc    
  51da9c:	ins    BYTE PTR es:[edi],dx
  51da9d:	adc    bh,BYTE PTR [esi+esi*4+0x689160c0]
  51daa4:	push   ebx
  51daa5:	add    al,BYTE PTR [eax+0x7bf58ce1]
  51daab:	push   edx
  51daac:	sbb    edx,DWORD PTR [ebp-0xff6457d]
  51dab2:	xlat   BYTE PTR ds:[ebx]
  51dab3:	inc    edi
  51dab4:	mov    bh,0xe3
  51dab6:	test   DWORD PTR [esi],ebp
  51dab8:	jg     0x51daec
  51daba:	dec    ecx
  51dabb:	pushf  
  51dabc:	popf   
  51dabd:	add    BYTE PTR [ebp-0x68c8a2b5],ch
  51dac3:	call   0x655c:0x1c38b5d9
  51daca:	test   DWORD PTR [eax+0x1af72d8],0xb09d39d3
  51dad4:	fs sbb eax,0xd3c3c9b0
  51dada:	add    DWORD PTR [ecx],esp
  51dadc:	and    eax,0xfcf669bc
  51dae1:	pop    ds
  51dae2:	pop    eax
  51dae3:	inc    eax
  51dae4:	and    BYTE PTR [ecx-0x4ae7566a],dh
  51daea:	inc    edi
  51daeb:	mov    edx,0xc857b0c3
  51daf0:	mov    cs,WORD PTR [eax+0x1a]
  51daf3:	test   eax,0x941b375
  51daf8:	sub    BYTE PTR [edi+edx*8],bl
  51dafb:	add    BYTE PTR [edx],ch
  51dafd:	push   ebx
  51dafe:	or     al,0x40
  51db00:	inc    esp
  51db01:	retf   
  51db02:	daa    
  51db03:	add    al,0x7d
  51db05:	shl    DWORD PTR [eax-0x228a36cc],cl
  51db0b:	call   0x3a56:0x7a5f86c2
  51db12:	fiadd  WORD PTR [ecx-0x4f]
  51db15:	out    0x54,al
  51db17:	mov    ch,0xcc
  51db19:	enter  0x6f6c,0xee
  51db1d:	mul    edx
  51db1f:	xor    eax,0x538ec51e
  51db24:	push   esp
  51db25:	pop    DWORD PTR [edi+0x2207be1b]
  51db2b:	lock js 0x51db31
  51db2e:	push   ebp
  51db2f:	lds    eax,FWORD PTR [ebx]
  51db31:	mov    dl,0xb2
  51db33:	or     edx,edi
  51db35:	mov    ch,0x20
  51db37:	jmp    0x51dbaa
  51db39:	call   0x889f:0xa7a59d56
  51db40:	inc    ebp
  51db41:	icebp  
  51db42:	xchg   edi,eax
  51db43:	scas   al,BYTE PTR es:[edi]
  51db44:	xor    edx,ecx
  51db46:	push   ebx
  51db47:	add    eax,0x79ca9cd1
  51db4c:	mov    DWORD PTR [eax+0x561395d6],eax
  51db52:	or     DWORD PTR [ebx+edx*2],ebp
  51db55:	outs   dx,BYTE PTR ds:[esi]
  51db56:	or     BYTE PTR [esi-0x4ccc82b9],cl
  51db5c:	xchg   esi,eax
  51db5d:	mov    dh,0x13
  51db5f:	xchg   edi,eax
  51db60:	hlt    
  51db61:	adc    al,BYTE PTR [edi+0x2362c355]
  51db67:	jle    0x51db54
  51db69:	adc    al,0x1a
  51db6b:	sbb    DWORD PTR [esi+0x1f9eec81],esi
  51db71:	clc    
  51db72:	int3   
  51db73:	stos   DWORD PTR es:[edi],eax
  51db74:	push   eax
  51db75:	lds    esp,FWORD PTR ds:0xb9de6c8b
  51db7b:	adc    eax,0xaa9290eb
  51db80:	in     al,dx
  51db81:	xchg   ebx,eax
  51db82:	shr    BYTE PTR [ebp+0x84c4a16],1
  51db88:	dec    ebp
  51db89:	into   
  51db8a:	retf   0x6558
  51db8d:	xchg   esi,eax
  51db8e:	mov    ecx,0x49462b00
  51db93:	dec    ecx
  51db94:	ins    DWORD PTR es:[edi],dx
  51db95:	push   0x90edfcc6
  51db9a:	test   eax,0x66975b92
  51db9f:	sbb    ch,BYTE PTR [ebx]
  51dba1:	pop    ebp
  51dba2:	imul   ebp,ecx,0xffffff83
  51dba5:	sahf   
  51dba6:	inc    ecx
  51dba7:	xor    eax,0x5e42df8b
  51dbac:	dec    ecx
  51dbad:	jl     0x51db8b
  51dbaf:	push   cs
  51dbb0:	pop    ecx
  51dbb1:	in     eax,0x89
  51dbb3:	leave  
  51dbb4:	nop
  51dbb5:	mov    ds:0x7b024b1c,eax
  51dbba:	sbb    ch,BYTE PTR [edx+edx*4+0x6c9e4354]
  51dbc1:	xchg   esi,eax
  51dbc2:	mov    ebx,0x2d6cad64
  51dbc7:	mov    ds:0x7bb20cc0,al
  51dbcc:	in     eax,dx
  51dbcd:	cwde   
  51dbce:	ss push ecx
  51dbd0:	iret   
  51dbd1:	mov    ebx,0x1a7025ac
  51dbd6:	jbe    0x51dc06
  51dbd8:	xchg   al,dh
  51dbda:	and    BYTE PTR gs:[esi],0xb2
  51dbde:	push   eax
  51dbdf:	outs   dx,BYTE PTR ds:[esi]
  51dbe0:	mov    ebp,0x763737a0
  51dbe5:	dec    ebx
  51dbe6:	call   0xb30c4027
  51dbeb:	sti    
  51dbec:	das    
  51dbed:	cmp    dl,BYTE PTR [edi-0x68d5cc8f]
  51dbf3:	inc    BYTE PTR [edi]
  51dbf5:	push   edx
  51dbf6:	lahf   
  51dbf7:	cmc    
  51dbf8:	nop
  51dbf9:	jae    0x51dc1d
  51dbfb:	and    ebx,DWORD PTR [ebp+0x3ac71b85]
  51dc01:	xchg   ecx,eax
  51dc02:	push   ecx
  51dc03:	or     edx,DWORD PTR [ebx+0x2708e1c8]
  51dc09:	stc    
  51dc0a:	lods   eax,DWORD PTR ds:[esi]
  51dc0b:	mov    cl,al
  51dc0d:	in     eax,dx
  51dc0e:	jnp    0x51dc33
  51dc10:	jg     0x51dc67
  51dc12:	inc    ebx
  51dc13:	pop    es
  51dc14:	ins    DWORD PTR es:[edi],dx
  51dc15:	and    DWORD PTR [esi-0x12cce74e],edx
  51dc1b:	icebp  
  51dc1c:	pop    edx
  51dc1d:	xor    ebx,ecx
  51dc1f:	jl     0x51dbd4
  51dc21:	imul   BYTE PTR [esp+ecx*2-0x53]
  51dc25:	mov    ch,0xdf
  51dc27:	xor    bh,BYTE PTR [edx+0x50]
  51dc2a:	push   ebx
  51dc2b:	sbb    edx,DWORD PTR [esi+0x3b]
  51dc2e:	dec    edx
  51dc2f:	jns    0x51dc9c
  51dc31:	in     eax,0x7e
  51dc33:	add    eax,ebp
  51dc35:	adc    dh,BYTE PTR [ecx+edi*4+0x79]
  51dc39:	and    al,0x5e
  51dc3b:	adc    BYTE PTR [esi+0x4650b048],0x9b
  51dc42:	adc    eax,0x753f2c02
  51dc47:	mov    edi,0xe013b5d9
  51dc4c:	push   cs
  51dc4d:	and    BYTE PTR [eax+0x3b3de63c],0x4d
  51dc54:	inc    ebp
  51dc55:	sbb    al,0x28
  51dc57:	inc    eax
  51dc58:	cmp    BYTE PTR [esi+0x46508de],ch
  51dc5e:	jb     0x51dc7a
  51dc60:	fs push ebp
  51dc62:	jp     0x51dc4c
  51dc64:	xor    DWORD PTR [edi+ebp*1-0x7114b563],esp
  51dc6b:	mov    edi,0xeb01a433
  51dc70:	pusha  
  51dc71:	lods   eax,DWORD PTR ss:[esi]
  51dc73:	dec    esi
  51dc74:	lea    esi,ds:0x4d2b7608
  51dc7a:	add    DWORD PTR [ebp+0x5d],ebx
  51dc7d:	icebp  
  51dc7e:	aad    0x49
  51dc80:	cmp    BYTE PTR [edi],bl
  51dc82:	mov    edi,DWORD PTR [esi+0x16bf5753]
  51dc88:	sar    BYTE PTR [ebp+edx*8-0x67],cl
  51dc8c:	jns    0x51dc37
  51dc8e:	mov    WORD PTR [eax+0x7819c63c],es
  51dc94:	jns    0x51dcc5
  51dc96:	add    ch,BYTE PTR [esi-0x3c]
  51dc99:	jg     0x51dcdc
  51dc9b:	loope  0x51dcc2
  51dc9d:	jne    0x51dc74
  51dc9f:	adc    eax,0xc386f4c2
  51dca4:	dec    edi
  51dca5:	popa   
  51dca6:	mov    eax,ds:0xf71d3db5
  51dcab:	addr16 push edx
  51dcad:	imul   esp,DWORD PTR [eax],0x53
  51dcb0:	dec    eax
  51dcb1:	js     0x51dcf5
  51dcb3:	add    bh,ah
  51dcb5:	scas   eax,DWORD PTR es:[edi]
  51dcb6:	sub    dl,bh
  51dcb8:	pop    ss
  51dcb9:	inc    edi
  51dcba:	aad    0x5d
  51dcbc:	ror    cl,0xbd
  51dcbf:	cmp    ch,al
  51dcc1:	cli    
  51dcc2:	stc    
  51dcc3:	add    esp,DWORD PTR [esi+0x69e841af]
  51dcc9:	mov    cl,0x93
  51dccb:	jmp    0x51dc5f
  51dccd:	test   al,0x53
  51dccf:	ret    
  51dcd0:	leave  
  51dcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51dcd2:	outs   dx,DWORD PTR ds:[esi]
  51dcd3:	sbb    ebp,edi
  51dcd5:	sub    cl,BYTE PTR [edi-0x32b79343]
  51dcdb:	push   edx
  51dcdc:	ds sbb eax,0x370d2907
  51dce2:	pop    ebp
  51dce3:	sub    bl,dh
  51dce5:	adc    BYTE PTR [edx-0x5149b924],cl
  51dceb:	sub    DWORD PTR [esi-0x7e],ecx
  51dcee:	outs   dx,DWORD PTR ds:[esi]
  51dcef:	ds sub eax,0xbffded57
  51dcf5:	jmp    0x51a4:0x6987a7bf
  51dcfc:	adc    edx,esi
  51dcfe:	adc    al,0x8c
  51dd00:	iret   
  51dd01:	into   
  51dd02:	ins    DWORD PTR es:[edi],dx
  51dd03:	sub    BYTE PTR [ecx+eax*1+0x2d16c916],al
  51dd0a:	push   0x7cf3af85
  51dd0f:	data16 cmp dl,BYTE PTR [edx+edi*4]
  51dd13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51dd14:	sbb    dh,BYTE PTR [edi]
  51dd16:	add    eax,DWORD PTR ds:0xe7325197
  51dd1c:	add    eax,0xda625add
  51dd21:	xchg   ebx,eax
  51dd22:	out    dx,al
  51dd23:	outs   dx,DWORD PTR ds:[esi]
  51dd24:	(bad)
  51dd28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51dd29:	mov    fs,ecx
  51dd2b:	dec    DWORD PTR es:[eax-0x6f]
  51dd2f:	inc    edi
  51dd30:	xor    al,0x7d
  51dd32:	cld    
  51dd33:	mov    ebx,0xcf890d24
  51dd38:	inc    edx
  51dd39:	pusha  
  51dd3a:	aad    0xa0
  51dd3c:	lahf   
  51dd3d:	xor    eax,0xb237ca04
  51dd42:	xchg   ebp,eax
  51dd43:	popa   
  51dd44:	ss dec esi
  51dd46:	or     BYTE PTR [edi+eax*4+0x59],dh
  51dd4a:	push   ebx
  51dd4b:	stos   BYTE PTR es:[edi],al
  51dd4c:	fiadd  DWORD PTR [eax+edi*2]
  51dd4f:	or     DWORD PTR [esi-0xaf31359],edi
  51dd55:	push   ss
  51dd56:	daa    
  51dd57:	sbb    ch,bh
  51dd59:	push   edi
  51dd5a:	dec    ebx
  51dd5b:	sub    DWORD PTR [esi+0x440b7468],esi
  51dd61:	or     al,0x84
  51dd63:	rep lods eax,DWORD PTR ds:[esi]
  51dd65:	jo     0x51dd23
  51dd67:	mov    dh,BYTE PTR [esi+0x2e97c311]
  51dd6d:	mov    ss,WORD PTR [esi-0x1ef5ac8d]
  51dd73:	popf   
  51dd74:	(bad)
  51dd77:	(bad)  
  51dd79:	movq   mm7,mm4
  51dd7c:	inc    ebp
  51dd7d:	or     eax,0x52d54ba6
  51dd82:	test   eax,0xb0698645
  51dd87:	(bad)
  51dd8a:	js     0x51dd92
  51dd8c:	fnsave [ecx+esi*1]
  51dd8f:	out    dx,al
  51dd90:	ja     0x51dd85
  51dd92:	mov    dh,0x3b
  51dd94:	mov    ebx,0xea7364c6
  51dd99:	sahf   
  51dd9a:	adc    al,0xe8
  51dd9c:	pop    ds
  51dd9d:	push   eax
  51dd9e:	mov    edx,0xa90d836
  51dda3:	aaa    
  51dda4:	mov    BYTE PTR [ecx],bl
  51dda6:	fs push edi
  51dda8:	lods   eax,DWORD PTR ds:[esi]
  51dda9:	lds    esp,FWORD PTR cs:0xee222f9b
  51ddb0:	div    eax
  51ddb2:	pop    ebx
  51ddb3:	les    ebx,FWORD PTR [ecx]
  51ddb5:	mov    ah,0xec
  51ddb7:	in     eax,0xb9
  51ddb9:	(bad)  
  51ddbb:	sbb    BYTE PTR [edi-0x4b43b197],0xa8
  51ddc2:	sbb    al,0x3
  51ddc4:	mov    eax,0x322273d9
  51ddc9:	sub    eax,0xf76d28de
  51ddce:	cld    
  51ddcf:	loope  0x51dd94
  51ddd1:	clc    
  51ddd2:	xchg   ah,bl
  51ddd4:	xchg   esp,eax
  51ddd5:	sbb    DWORD PTR [ecx+edx*2],0x8d668bcb
  51dddc:	fmul   QWORD PTR [edi-0x3390f0f8]
  51dde2:	das    
  51dde3:	pop    ecx
  51dde4:	inc    esi
  51dde5:	ss repnz das 
  51dde8:	adc    edx,edi
  51ddea:	int3   
  51ddeb:	pop    ss
  51ddec:	les    ecx,FWORD PTR [esp+edi*1]
  51ddef:	in     eax,0x1d
  51ddf1:	bound  esp,QWORD PTR [ecx+0x121d9fc3]
  51ddf7:	dec    esp
  51ddf8:	mov    al,ds:0xf29f9a45
  51ddfd:	mov    ds:0x5d2e4796,eax
  51de02:	lods   eax,DWORD PTR ds:[esi]
  51de03:	dec    edi
  51de04:	dec    ebx
  51de05:	xchg   DWORD PTR [ebx],ebp
  51de07:	sbb    DWORD PTR [edx+0x53],0xd2f0bed0
  51de0e:	mov    ebx,0xde9a3076
  51de13:	mov    bh,BYTE PTR [edx+0x3e62fa59]
  51de19:	aad    0x6d
  51de1b:	jno    0x51de49
  51de1d:	and    dl,BYTE PTR [esi-0x6ad4d72d]
  51de23:	add    ah,al
  51de25:	sti    
  51de26:	pop    eax
  51de27:	mov    ebx,0xef552679
  51de2c:	clc    
  51de2d:	data16 jnp 0x51dea3
  51de30:	inc    esi
  51de31:	fidivr WORD PTR [esi+0x50]
  51de34:	jg     0x51de46
  51de36:	jne    0x51de3f
  51de38:	inc    eax
  51de39:	jb     0x51de2b
  51de3b:	stos   BYTE PTR es:[edi],al
  51de3c:	aas    
  51de3d:	inc    ebx
  51de3e:	arpl   WORD PTR [edi-0x69e550b9],si
  51de44:	fwait
  51de45:	push   ss
  51de46:	sbb    eax,0x1cf7f13a
  51de4b:	sbb    eax,0x522353a5
  51de50:	mov    ds:0x14f5c5e0,eax
  51de55:	sbb    DWORD PTR [ebx],esi
  51de57:	scas   al,BYTE PTR es:[edi]
  51de58:	test   al,0xdf
  51de5a:	stos   BYTE PTR es:[edi],al
  51de5b:	popf   
  51de5c:	out    0x4f,al
  51de5e:	and    ch,BYTE PTR [ebx-0x1c4909d6]
  51de64:	inc    eax
  51de65:	in     al,0x85
  51de67:	mov    gs,ebx
  51de69:	clc    
  51de6a:	pop    eax
  51de6b:	mov    esi,0x6aa6fad3
  51de70:	xor    bh,0x88
  51de73:	shl    BYTE PTR ds:0x2c9fc4de,0xa4
  51de7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51de7b:	ds push 0x57fe1f3d
  51de81:	pusha  
  51de82:	push   ecx
  51de83:	lock inc ebp
  51de85:	push   edi
  51de86:	call   0x2840:0x22b9957a
  51de8d:	iret   
  51de8e:	fdiv   QWORD PTR [ebp-0x8326d9c]
  51de94:	cld    
  51de95:	push   esp
  51de96:	stc    
  51de97:	ins    DWORD PTR es:[edi],dx
  51de98:	fucom  st(4)
  51de9a:	jg     0x51deed
  51de9c:	add    bl,dh
  51de9e:	nop
  51de9f:	cli    
  51dea0:	add    ah,bh
  51dea2:	cld    
  51dea3:	pusha  
  51dea4:	ja     0x51def0
  51dea6:	std    
  51dea7:	adc    DWORD PTR [ebp+0x66],0x517e6f1c
  51deae:	and    DWORD PTR [edi+0x1b4fa6f3],ebx
  51deb4:	scas   al,BYTE PTR es:[edi]
  51deb5:	jp     0x51dec5
  51deb7:	inc    edx
  51deb8:	dec    ecx
  51deb9:	pop    ecx
  51deba:	jge    0x51de56
  51debc:	(bad)  
  51debd:	iret   
  51debe:	and    al,BYTE PTR [ecx-0x18fd0f9e]
  51dec4:	jle    0x51de6a
  51dec6:	sbb    al,0xbf
  51dec8:	icebp  
  51dec9:	sbb    ah,BYTE PTR [ebx-0x57]
  51decc:	retf   0xcaa6
  51decf:	push   0xffffffa3
  51ded1:	pop    ebp
  51ded2:	daa    
  51ded3:	push   esi
  51ded4:	push   edx
  51ded5:	fisubr DWORD PTR [esi]
  51ded7:	mov    esp,0xe9bb73cd
  51dedc:	cmp    edi,DWORD PTR [eax+esi*8]
  51dedf:	mov    eax,0x4a42746e
  51dee4:	test   ebx,edx
  51dee6:	push   0x56e7e149
  51deeb:	or     DWORD PTR ds:[esi+0x79],0x52
  51def0:	ret    0x52c4
  51def3:	repnz scas ax,WORD PTR es:[edi]
  51def6:	xor    dh,BYTE PTR [edx-0x11904d33]
  51defc:	inc    eax
  51defd:	or     BYTE PTR [edi+ebx*2-0xaa81f77],cl
  51df04:	test   eax,0x597e25b2
  51df09:	(bad)  [esi]
  51df0b:	inc    edi
  51df0c:	imul   edi,edx,0x26
  51df0f:	rep lods eax,DWORD PTR ds:[esi]
  51df11:	jb     0x51dea5
  51df13:	shl    BYTE PTR [ebp+0x65bab8b2],0xbf
  51df1a:	repnz mov esi,0xd82bf901
  51df20:	or     BYTE PTR [esi],ch
  51df22:	xchg   edx,eax
  51df23:	inc    ecx
  51df24:	imul   ecx,esp,0x59
  51df27:	leave  
  51df28:	test   eax,0x94254a2d
  51df2d:	stc    
  51df2e:	mov    cl,0x51
  51df30:	xor    eax,0x96329ceb
  51df35:	jp     0x51def5
  51df37:	push   0x5a5f4b29
  51df3c:	jl     0x51df89
  51df3e:	(bad)  
  51df3f:	mov    eax,esp
  51df41:	into   
  51df42:	fcmovne st,st(1)
  51df44:	iret   
  51df45:	mov    BYTE PTR [esp+edx*1],dh
  51df48:	jb     0x51dee3
  51df4a:	sub    BYTE PTR [edx],al
  51df4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51df4d:	inc    si
  51df4f:	sub    BYTE PTR [edx+0x63a7905e],dl
  51df55:	imul   ebp,edx,0xb5cbe309
  51df5b:	inc    ebx
  51df5c:	push   ebx
  51df5d:	in     eax,0x0
  51df5f:	add    al,0x7f
  51df61:	fdiv   DWORD PTR [ebx+0xc]
  51df64:	outs   dx,DWORD PTR ds:[esi]
  51df65:	xchg   esi,eax
  51df66:	(bad)  
  51df67:	loop   0x51def2
  51df69:	loope  0x51dfe0
  51df6b:	sub    BYTE PTR [edi-0x40],ch
  51df6e:	popa   
  51df6f:	adc    dl,BYTE PTR [esi-0x6b]
  51df72:	(bad)  [ebp-0x6ddf85e0]
  51df78:	jl     0x51dfef
  51df7a:	pop    ecx
  51df7b:	out    0xa2,al
  51df7d:	push   es
  51df7e:	jae    0x51df4c
  51df80:	stos   DWORD PTR es:[edi],eax
  51df81:	(bad)  
  51df82:	cmc    
  51df83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51df84:	pop    esi
  51df85:	mov    edi,0xe5643154
  51df8a:	xor    DWORD PTR [edi+0x24],0x39
  51df8e:	out    0xfc,eax
  51df90:	sbb    al,BYTE PTR [eax-0x12f0671d]
  51df96:	hlt    
  51df97:	xchg   esi,eax
  51df98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51df99:	xchg   esp,eax
  51df9a:	ss loopne 0x51dfe9
  51df9d:	cmp    al,0x10
  51df9f:	push   0x11
  51dfa1:	adc    al,0xcf
  51dfa3:	cmp    dh,bh
  51dfa5:	int3   
  51dfa6:	retf   
  51dfa7:	jmp    0x3f0bc61c
  51dfac:	and    al,0x8f
  51dfae:	shr    BYTE PTR [ebp-0x24],cl
  51dfb1:	lahf   
  51dfb2:	fld    QWORD PTR [esi+0x335615aa]
  51dfb8:	sbb    bl,BYTE PTR [edx]
  51dfba:	ss ins WORD PTR es:[edi],dx
  51dfbd:	push   0x5581c9ae
  51dfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51dfc3:	pop    ebx
  51dfc4:	adc    DWORD PTR [ebp-0x790b3231],esi
  51dfca:	rcr    DWORD PTR [ebp+0x38],1
  51dfcd:	add    ah,BYTE PTR [eax+0x12b5fe94]
  51dfd3:	les    eax,FWORD PTR [ebx+ebx*4]
  51dfd6:	xor    bl,0x2a
  51dfd9:	push   ecx
  51dfda:	xor    ah,BYTE PTR [edx+eax*2]
  51dfdd:	pop    eax
  51dfde:	push   0x9b692200
  51dfe3:	in     al,0x16
  51dfe5:	outs   dx,DWORD PTR ds:[esi]
  51dfe6:	iret   
  51dfe7:	js     0x51df87
  51dfe9:	scas   eax,DWORD PTR es:[edi]
  51dfea:	xchg   ebp,eax
  51dfeb:	and    al,0x62
  51dfed:	xor    bl,BYTE PTR [ecx]
  51dfef:	rcr    ebp,0x2b
  51dff2:	adc    BYTE PTR [ebx+edx*1-0x5c9cf7fd],al
  51dff9:	fmul   DWORD PTR [edx+0x5df374cb]
  51dfff:	pop    ds
  51e000:	jnp    0x51e043
  51e002:	sahf   
  51e003:	sti    
  51e004:	or     BYTE PTR [edi+0x0],dh
  51e007:	jae    0x51dff5
  51e009:	js     0x51dfea
  51e00b:	adc    al,0xa2
  51e00d:	std    
  51e00e:	push   edi
  51e00f:	adc    al,0xb3
  51e011:	shr    DWORD PTR [ecx-0x4f14ee5a],cl
  51e017:	pop    ebp
  51e018:	push   esp
  51e019:	into   
  51e01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e01b:	xor    dh,BYTE PTR [eax-0x53522f88]
  51e021:	push   ebx
  51e022:	xor    eax,0x8a18163b
  51e027:	push   0x80a122d1
  51e02c:	xchg   ebx,eax
  51e02d:	rcr    DWORD PTR [esi-0x4e],cl
  51e030:	adc    edx,edx
  51e032:	xor    al,0x49
  51e034:	and    eax,0x850eb9f8
  51e039:	adc    al,0x3f
  51e03b:	scas   al,BYTE PTR es:[edi]
  51e03c:	sub    ch,cl
  51e03e:	push   eax
  51e03f:	mov    edi,0x9990fc09
  51e044:	sub    al,0x50
  51e046:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e047:	pop    ecx
  51e048:	in     al,dx
  51e049:	je     0x51e033
  51e04b:	aas    
  51e04c:	(bad)  [ecx-0x4c]
  51e04f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e050:	inc    edx
  51e051:	lock and DWORD PTR [esi+edi*8-0x33e497fe],0xffffffcd
  51e05a:	jbe    0x51e009
  51e05c:	out    dx,al
  51e05d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e05e:	jle    0x51e0d3
  51e060:	scas   al,BYTE PTR es:[edi]
  51e061:	jb     0x51e0b9
  51e063:	imul   BYTE PTR [ecx-0x7704c215]
  51e069:	mov    cl,0x28
  51e06b:	hlt    
  51e06c:	imul   BYTE PTR ds:0x8d38867b
  51e072:	sbb    al,BYTE PTR [edi+0x69dc7793]
  51e078:	mov    ds:0x11ba4034,al
  51e07d:	test   BYTE PTR [eax+0x63],al
  51e080:	sub    eax,0x1278de72
  51e085:	sub    bl,dl
  51e087:	je     0x51e081
  51e089:	icebp  
  51e08a:	push   edi
  51e08b:	lahf   
  51e08c:	fmul   st,st(5)
  51e08e:	mov    esp,DWORD PTR [ebx+0x1378eb22]
  51e094:	retf   0x1541
  51e097:	pop    edi
  51e098:	sbb    DWORD PTR [esi+edi*2-0x14],ebp
  51e09c:	popa   
  51e09d:	outs   dx,DWORD PTR ds:[esi]
  51e09e:	pop    esi
  51e09f:	inc    edi
  51e0a0:	pushf  
  51e0a1:	push   0xffffffc8
  51e0a3:	xchg   DWORD PTR [ecx-0xa],edx
  51e0a6:	xchg   edi,eax
  51e0a7:	ret    
  51e0a8:	clc    
  51e0a9:	sub    edx,edx
  51e0ab:	pop    edi
  51e0ac:	and    dh,BYTE PTR [edi]
  51e0ae:	mov    al,0x35
  51e0b0:	stc    
  51e0b1:	mov    edi,0x1d8dc17a
  51e0b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e0b7:	outs   dx,BYTE PTR ds:[esi]
  51e0b8:	sub    al,0x24
  51e0ba:	in     eax,dx
  51e0bb:	pop    ebx
  51e0bc:	sbb    BYTE PTR [ebx],0x4f
  51e0bf:	add    dh,ah
  51e0c1:	push   0x33
  51e0c3:	and    ebp,DWORD PTR [edx-0x2c]
  51e0c6:	sbb    DWORD PTR [esi-0xa],esp
  51e0c9:	push   esi
  51e0ca:	or     BYTE PTR [eax+0x3],0x46
  51e0ce:	push   ss
  51e0cf:	add    dh,bh
  51e0d1:	xor    ecx,DWORD PTR [esi]
  51e0d3:	push   esi
  51e0d4:	push   esi
  51e0d5:	inc    DWORD PTR [ecx-0x24]
  51e0d8:	mov    BYTE PTR [ebp-0x51347f5],dh
  51e0de:	add    al,0xda
  51e0e0:	mov    BYTE PTR [ebx+0x17],ah
  51e0e3:	inc    edx
  51e0e4:	out    0x43,al
  51e0e6:	inc    eax
  51e0e7:	or     eax,0xe9a25b3c
  51e0ec:	bound  ebp,QWORD PTR [ebx+0x60]
  51e0ef:	dec    eax
  51e0f0:	mov    ds:0x45835702,al
  51e0f5:	sbb    al,dh
  51e0f7:	pop    eax
  51e0f8:	push   0xd24458f9
  51e0fd:	fisubr WORD PTR [ecx+0x1be1370e]
  51e103:	xchg   ecx,eax
  51e104:	xor    BYTE PTR [ecx],cl
  51e106:	mov    BYTE PTR [edx-0x2e3d3205],bh
  51e10c:	jnp    0x51e0ef
  51e10e:	xlat   BYTE PTR ds:[ebx]
  51e10f:	into   
  51e110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e111:	mov    es,esi
  51e113:	fild   QWORD PTR [edi-0x1e7cc11a]
  51e119:	xchg   esp,eax
  51e11a:	and    edx,esp
  51e11c:	fadd   DWORD PTR [eax+eax*1-0x61]
  51e120:	dec    esp
  51e121:	sub    BYTE PTR [ecx+0x1ca0dd62],al
  51e127:	inc    esi
  51e128:	sahf   
  51e129:	inc    esp
  51e12a:	imul   edx,esp,0x31
  51e12d:	pop    ebp
  51e12e:	pushf  
  51e12f:	add    al,0xbd
  51e131:	fwait
  51e132:	test   DWORD PTR [ecx-0xaa5f1fd],esp
  51e138:	imul   ebp,DWORD PTR [ebp+0x7c0d2f1c],0x5
  51e13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e140:	xor    DWORD PTR [ebx+0xe],edx
  51e143:	iret   
  51e144:	mov    BYTE PTR [ebx+0x4a6a0f65],bh
  51e14a:	fadd   QWORD PTR [ebx-0x39]
  51e14d:	sub    eax,0xdcded3f2
  51e152:	xchg   ebx,eax
  51e153:	sub    BYTE PTR [edi-0x2e23e602],ch
  51e159:	and    edi,DWORD PTR [eax-0x420a862a]
  51e15f:	outs   dx,DWORD PTR ds:[esi]
  51e160:	retf   
  51e161:	scas   al,BYTE PTR es:[edi]
  51e162:	add    eax,eax
  51e164:	or     bl,ch
  51e166:	fnstcw WORD PTR [ebp+0x3b773791]
  51e16c:	daa    
  51e16d:	inc    esp
  51e16e:	jp     0x51e138
  51e170:	les    ebp,FWORD PTR [esi]
  51e172:	add    al,0x55
  51e174:	adc    dh,BYTE PTR [esi+0x6b3da5dd]
  51e17a:	mov    es,esp
  51e17c:	test   eax,0x2fcd6857
  51e181:	in     eax,0xad
  51e183:	aam    0x63
  51e185:	test   ch,bh
  51e187:	xlat   BYTE PTR ds:[ebx]
  51e188:	pop    esp
  51e189:	call   eax
  51e18b:	mov    al,0x32
  51e18d:	ja     0x51e1a9
  51e18f:	push   ss
  51e190:	xlat   BYTE PTR cs:[ebx]
  51e192:	popa   
  51e193:	jbe    0x51e1b0
  51e195:	retf   
  51e196:	fucom  st(1)
  51e198:	adc    DWORD PTR [esi],ebp
  51e19a:	enter  0x6d50,0x48
  51e19e:	(bad)  
  51e19f:	sub    eax,0x9617eae2
  51e1a4:	dec    ecx
  51e1a5:	or     al,BYTE PTR [ecx+ebp*4]
  51e1a8:	inc    ecx
  51e1a9:	mov    ds:0xf9ffcf68,al
  51e1ae:	rcr    DWORD PTR [ecx],cl
  51e1b0:	pop    esp
  51e1b1:	lock (bad) 
  51e1b3:	std    
  51e1b4:	cmp    cl,BYTE PTR [edi-0x24]
  51e1b7:	xor    eax,0x241fe85b
  51e1bc:	lea    edi,[ebx+ebx*8-0x376c4a39]
  51e1c3:	(bad)  
  51e1c4:	leave  
  51e1c5:	xchg   BYTE PTR [esi-0x6256637e],bl
  51e1cb:	test   al,0x45
  51e1cd:	cmp    eax,ebp
  51e1cf:	ins    BYTE PTR es:[edi],dx
  51e1d0:	jnp    0x51e22f
  51e1d2:	mov    bh,0xcb
  51e1d4:	les    edi,FWORD PTR [edi]
  51e1d6:	fwait
  51e1d7:	retf   
  51e1d8:	push   ds
  51e1d9:	mov    eax,0x6b9f0e77
  51e1de:	cwde   
  51e1df:	rcl    DWORD PTR [edx-0xd852857],cl
  51e1e5:	mov    esp,0x750f39d9
  51e1ea:	lods   al,BYTE PTR ds:[esi]
  51e1eb:	and    eax,0x5baba969
  51e1f0:	mov    esi,0x7e48015
  51e1f5:	les    ebx,FWORD PTR [ecx+0x24]
  51e1f8:	call   0x395a:0x7e9a5734
  51e1ff:	les    ecx,FWORD PTR [ebx-0x4f]
  51e202:	dec    eax
  51e203:	out    dx,eax
  51e204:	adc    DWORD PTR [eax+ebx*4+0xcf5fb1c],ecx
  51e20b:	mov    edi,eax
  51e20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e20e:	sar    edx,0xc4
  51e211:	popa   
  51e212:	ds jb  0x51e20d
  51e215:	into   
  51e216:	cmp    edx,DWORD PTR [edx-0x32]
  51e219:	mov    edi,0xf0d237a8
  51e21e:	ja     0x51e1fd
  51e220:	sub    BYTE PTR [ecx-0x80],0xbf
  51e224:	int3   
  51e225:	shl    DWORD PTR [eax+0x6b17754d],0xdf
  51e22c:	jae    0x51e228
  51e22e:	nop
  51e22f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e230:	popa   
  51e231:	dec    esi
  51e232:	pop    ds
  51e233:	mov    ebx,0xe3b1f93
  51e238:	add    ecx,DWORD PTR [esi]
  51e23a:	pop    ebp
  51e23b:	fdecstp 
  51e23d:	fld    DWORD PTR [ebp-0x1e2dc409]
  51e243:	les    edi,FWORD PTR [ebx+0x32]
  51e246:	sar    edx,cl
  51e248:	in     al,0x49
  51e24a:	stos   BYTE PTR es:[edi],al
  51e24b:	popf   
  51e24c:	inc    eax
  51e24d:	ret    0x6fdb
  51e250:	mov    edi,DWORD PTR [ebp-0x10961300]
  51e256:	mov    cl,0x40
  51e258:	dec    DWORD PTR [edi-0x2fa8d5f2]
  51e25e:	pop    ebp
  51e25f:	mov    dl,0xba
  51e261:	sub    DWORD PTR ds:0x6033e9bd,eax
  51e267:	test   eax,0xeb4b98e4
  51e26c:	mov    eax,0x82c849c3
  51e271:	dec    edx
  51e272:	jp     0x51e25a
  51e274:	mov    DWORD PTR [ebp-0x4c4ecfdb],edi
  51e27a:	shr    BYTE PTR [ecx],0x7e
  51e27d:	xchg   edx,eax
  51e27e:	sbb    cl,0x85
  51e281:	mov    ah,0x53
  51e283:	xchg   esp,eax
  51e284:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e285:	loope  0x51e24d
  51e287:	lds    esi,FWORD PTR [ecx-0x19b5ff62]
  51e28d:	mov    esp,0xeb6ea30b
  51e292:	sti    
  51e293:	sbb    DWORD PTR [ecx+edi*1],ebp
  51e296:	adc    BYTE PTR [esi+0x277a4764],bh
  51e29c:	(bad)  
  51e29d:	stc    
  51e29e:	add    al,0x5f
  51e2a0:	fcomp  QWORD PTR [edx]
  51e2a2:	test   edi,esi
  51e2a4:	or     bl,ch
  51e2a6:	lods   al,BYTE PTR ds:[esi]
  51e2a7:	mov    bh,0x9a
  51e2a9:	rol    ah,cl
  51e2ab:	outs   dx,DWORD PTR ds:[esi]
  51e2ac:	push   DWORD PTR [edx-0x13]
  51e2af:	dec    esp
  51e2b0:	aaa    
  51e2b1:	das    
  51e2b2:	retf   0x2a7
  51e2b5:	loope  0x51e31d
  51e2b7:	adc    bl,bh
  51e2b9:	lahf   
  51e2ba:	mov    ds:0xc2180eed,al
  51e2bf:	push   edi
  51e2c0:	outs   dx,DWORD PTR ds:[esi]
  51e2c1:	mov    ds:0xaa552446,al
  51e2c6:	mov    ds:0xb09b667e,eax
  51e2cb:	iret   
  51e2cc:	jmp    0x51e278
  51e2ce:	call   0x56b082fd
  51e2d3:	in     eax,dx
  51e2d4:	mov    ds:0x3ee1c74e,eax
  51e2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e2da:	add    eax,0x4e1cada8
  51e2df:	sbb    BYTE PTR [eax+0x69],ch
  51e2e2:	fwait
  51e2e3:	jne    0x51e31f
  51e2e5:	(bad)  
  51e2e6:	jae    0x51e28f
  51e2e8:	das    
  51e2e9:	mov    esi,DWORD PTR [esi+ecx*8-0x1a]
  51e2ed:	out    0x95,eax
  51e2ef:	call   0x355ca0ae
  51e2f4:	es sbb eax,0xf942838c
  51e2fa:	xchg   DWORD PTR [eax+0x5c],esi
  51e2fd:	outs   dx,BYTE PTR ds:[esi]
  51e2fe:	mov    cl,0xd6
  51e300:	inc    eax
  51e301:	arpl   WORD PTR [esp+edx*1+0x5f],sp
  51e305:	dec    ebp
  51e306:	in     al,dx
  51e307:	ret    
  51e308:	jl     0x51e37b
  51e30a:	push   ebx
  51e30b:	and    al,BYTE PTR [edi-0x5a]
  51e30e:	fisubr DWORD PTR [ebx+0x742294b1]
  51e314:	ins    DWORD PTR es:[edi],dx
  51e315:	mov    esi,0x854c81d5
  51e31a:	cmc    
  51e31b:	sahf   
  51e31c:	mov    esi,DWORD PTR [ecx-0x48]
  51e31f:	mov    al,ds:0xc6e9e37e
  51e324:	cs repz inc edi
  51e327:	je     0x51e37a
  51e329:	mov    ah,0x55
  51e32b:	in     eax,0x3f
  51e32d:	cld    
  51e32e:	add    DWORD PTR [ebx+0x11882d6b],0xa
  51e335:	adc    DWORD PTR [ecx],edi
  51e337:	je     0x51e376
  51e339:	jl     0x51e32d
  51e33b:	leave  
  51e33c:	rcl    DWORD PTR [esi],0x1a
  51e33f:	and    BYTE PTR [ecx-0x4d],dh
  51e342:	sbb    dh,BYTE PTR [edi+0x22]
  51e345:	inc    ebx
  51e346:	mov    WORD PTR [ecx],cs
  51e348:	pop    ds
  51e349:	loopne 0x51e33c
  51e34b:	pushf  
  51e34c:	sbb    ebx,ebx
  51e34e:	push   ds
  51e34f:	loopne 0x51e2df
  51e351:	mov    dh,0x4d
  51e353:	(bad)  
  51e354:	(bad)  
  51e355:	ja     0x51e332
  51e357:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e358:	mov    edi,0xd167f5f2
  51e35d:	(bad)  
  51e35f:	popa   
  51e360:	or     esp,ecx
  51e362:	add    al,0xa6
  51e364:	sbb    dl,ah
  51e366:	pop    esp
  51e367:	popf   
  51e368:	lock lods al,BYTE PTR ds:[esi]
  51e36a:	mov    ds:0x5caec540,eax
  51e36f:	push   es
  51e370:	mov    al,0x48
  51e372:	push   0x2b2d2bf0
  51e377:	aas    
  51e378:	sub    esi,DWORD PTR [ebx]
  51e37a:	xor    BYTE PTR [edi],0x8f
  51e37d:	xchg   esi,eax
  51e37e:	aad    0x98
  51e380:	dec    eax
  51e381:	loopne 0x51e3a8
  51e383:	popf   
  51e384:	mov    ebx,0x198c964a
  51e389:	test   eax,0x626d34d9
  51e38e:	popf   
  51e38f:	or     al,0x39
  51e391:	in     eax,dx
  51e392:	fs mov ebp,ecx
  51e395:	push   ds
  51e396:	push   esp
  51e397:	jp     0x51e39a
  51e399:	add    eax,DWORD PTR [ebp-0x1f7f1a35]
  51e39f:	pop    edx
  51e3a0:	popa   
  51e3a1:	sub    eax,eax
  51e3a3:	rcl    ecx,cl
  51e3a5:	addr16 cs mov eax,0x467a8f98
  51e3ac:	popf   
  51e3ad:	dec    ebx
  51e3ae:	cld    
  51e3af:	xchg   BYTE PTR [ecx+ebx*8],al
  51e3b2:	or     esi,DWORD PTR [eax+0x33fdd26a]
  51e3b8:	out    dx,eax
  51e3b9:	and    BYTE PTR [ebp+0x32],al
  51e3bc:	daa    
  51e3bd:	fisttp WORD PTR [esp+ebx*1]
  51e3c0:	dec    ecx
  51e3c1:	int    0x55
  51e3c3:	stos   BYTE PTR es:[edi],al
  51e3c4:	xchg   edi,ebp
  51e3c6:	cmp    al,0xee
  51e3c8:	xchg   DWORD PTR [edx-0x45],eax
  51e3cb:	out    dx,al
  51e3cc:	ja     0x51e3df
  51e3ce:	mov    esi,0xfb24979a
  51e3d3:	in     al,dx
  51e3d4:	scas   al,BYTE PTR es:[edi]
  51e3d5:	cmp    BYTE PTR [eax],cl
  51e3d7:	jp     0x51e3df
  51e3d9:	pop    esp
  51e3da:	adc    dl,bh
  51e3dc:	pusha  
  51e3dd:	and    DWORD PTR [edx-0x14],0xff23028f
  51e3e4:	mov    eax,0x45d84fda
  51e3e9:	sub    edi,ebp
  51e3eb:	neg    DWORD PTR [eax+0x752f93a2]
  51e3f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e3f2:	es dec ebx
  51e3f4:	sbb    DWORD PTR [ebx+0x5dce8f3f],0xffffffe6
  51e3fb:	call   0xeab95f56
  51e400:	retf   
  51e401:	popa   
  51e402:	or     eax,0x44d46128
  51e407:	jecxz  0x51e466
  51e409:	loope  0x51e3e1
  51e40b:	cmp    eax,0x944a5731
  51e410:	and    DWORD PTR ds:0xfefa89fb,esp
  51e416:	push   es
  51e417:	cs mov dh,0x6f
  51e41a:	xor    eax,0x82ff96bd
  51e41f:	dec    ebp
  51e420:	dec    ebp
  51e421:	pop    ss
  51e422:	mov    eax,0x9c61bc20
  51e427:	push   ecx
  51e428:	and    bl,BYTE PTR [edx+0x146601]
  51e42e:	xchg   esi,eax
  51e42f:	xor    eax,0x19b5c1a8
  51e434:	jmp    FWORD PTR [ebp-0x20babcce]
  51e43a:	addr16 cmp eax,0x5bc1dd13
  51e440:	lea    edx,[esi+0x6529fe5b]
  51e446:	jl     0x51e432
  51e448:	dec    edx
  51e449:	jae    0x51e40e
  51e44b:	mov    ecx,0xddb10a21
  51e450:	mov    ch,0x1
  51e452:	push   ss
  51e453:	push   0xefd2d5b7
  51e458:	mov    ebp,0x52472b03
  51e45d:	add    al,0x5f
  51e45f:	push   es
  51e460:	hlt    
  51e461:	scas   eax,DWORD PTR es:[edi]
  51e462:	xchg   ebx,eax
  51e463:	xchg   ecx,eax
  51e464:	push   es
  51e465:	test   DWORD PTR [esi],ecx
  51e467:	pop    esi
  51e468:	and    edx,DWORD PTR [ebx+edx*8+0x39]
  51e46c:	inc    esi
  51e46d:	(bad)  
  51e46e:	gs fwait
  51e470:	adc    al,0x7e
  51e472:	jae    0x51e425
  51e474:	xchg   edx,eax
  51e475:	scas   eax,DWORD PTR es:[edi]
  51e476:	popf   
  51e477:	push   ss
  51e478:	popa   
  51e479:	repnz dec esp
  51e47b:	mov    ah,0xbc
  51e47d:	mov    bl,0x89
  51e47f:	js     0x51e445
  51e481:	inc    ebx
  51e482:	ret    
  51e483:	ds pop ds
  51e485:	popa   
  51e486:	out    dx,eax
  51e487:	popf   
  51e488:	jmp    0x1f4e57a2
  51e48d:	(bad)  
  51e48e:	enter  0x59a,0x8b
  51e492:	(bad)  
  51e493:	retf   0xee8a
  51e496:	mov    ch,0xdc
  51e498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e499:	shl    DWORD PTR [edi],cl
  51e49b:	jp     0x51e4ab
  51e49d:	and    ebx,edi
  51e49f:	add    edi,DWORD PTR [ebp*4-0x53f9604d]
  51e4a6:	out    0xc4,al
  51e4a8:	mov    al,0xf8
  51e4aa:	loope  0x51e4af
  51e4ac:	sub    DWORD PTR [edi],0xd66b0745
  51e4b2:	ins    DWORD PTR es:[edi],dx
  51e4b3:	inc    ebp
  51e4b4:	xchg   dh,cl
  51e4b6:	sbb    DWORD PTR [edx+0x24],edi
  51e4b9:	nop
  51e4ba:	cdq    
  51e4bb:	xchg   DWORD PTR [edx-0x34],edx
  51e4be:	mov    dh,0xf9
  51e4c0:	aad    0x8e
  51e4c2:	inc    esi
  51e4c3:	cwde   
  51e4c4:	(bad)  
  51e4c5:	(bad)  [edx+eiz*4]
  51e4c8:	mov    gs,edi
  51e4ca:	xor    ah,bh
  51e4cc:	pop    edx
  51e4cd:	cdq    
  51e4ce:	pop    edi
  51e4cf:	loopne 0x51e4a9
  51e4d1:	jg     0x51e4a8
  51e4d3:	imul   esi,DWORD PTR [edx-0xccf78f5],0xd62e7ee3
  51e4dd:	adc    eax,0xe48c1b36
  51e4e2:	or     BYTE PTR [edx+0x3b],dl
  51e4e5:	dec    eax
  51e4e6:	and    cl,ch
  51e4e8:	mov    esi,0xd923e5f0
  51e4ed:	cmp    bh,cl
  51e4ef:	das    
  51e4f0:	js     0x51e4b6
  51e4f2:	je     0x51e4d8
  51e4f4:	imul   ebx,DWORD PTR [edx],0x69dcf3ed
  51e4fa:	cs (bad) 
  51e4fc:	mov    ds:0xa25ee243,al
  51e501:	jp     0x51e4ce
  51e503:	or     esp,DWORD PTR [esi-0x2d324e51]
  51e509:	popa   
  51e50a:	shl    BYTE PTR [ecx-0x2e],cl
  51e50d:	popf   
  51e50e:	out    dx,eax
  51e50f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e510:	or     bh,BYTE PTR [esi]
  51e512:	ds jecxz 0x51e562
  51e515:	sub    BYTE PTR [ebx+0x76],dh
  51e518:	jo     0x51e54b
  51e51a:	add    DWORD PTR [edx-0x3f],esp
  51e51d:	mov    al,0x70
  51e51f:	mov    ebx,cs
  51e521:	sbb    DWORD PTR [ecx-0x72],ebx
  51e524:	jg     0x51e511
  51e526:	cmovno esp,DWORD PTR [ebx-0x7efa5718]
  51e52d:	bound  eax,QWORD PTR [eax-0x3af16795]
  51e533:	ds mov edx,edi
  51e536:	popf   
  51e537:	cdq    
  51e538:	ins    DWORD PTR es:[edi],dx
  51e539:	jmp    0x51e4c4
  51e53b:	dec    ebp
  51e53c:	jle    0x51e52a
  51e53e:	xchg   ecx,eax
  51e53f:	test   al,ah
  51e541:	jmp    DWORD PTR [edx+eax*4-0xc1e23dd]
  51e548:	in     al,0xc7
  51e54a:	mul    DWORD PTR [ebx+ebp*1+0x66afbce6]
  51e551:	mov    bl,0xc4
  51e553:	xchg   ebp,eax
  51e554:	int    0x2
  51e556:	push   ds
  51e557:	sbb    al,0xe9
  51e559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e55a:	push   ebp
  51e55b:	shl    eax,0x22
  51e55e:	clc    
  51e55f:	xchg   edx,eax
  51e560:	pop    edi
  51e561:	(bad)  
  51e562:	sti    
  51e563:	ins    DWORD PTR es:[edi],dx
  51e564:	aad    0x23
  51e566:	mov    ch,0xbd
  51e568:	jg     0x51e577
  51e56a:	test   al,0xa
  51e56c:	sbb    eax,0x22aed137
  51e571:	jmp    0x344f:0x4030cfff
  51e578:	jb     0x51e5b6
  51e57a:	mov    bh,0xe1
  51e57c:	inc    eax
  51e57d:	pminsw mm0,QWORD PTR [edi+0x2f]
  51e581:	jmp    0x51e527
  51e583:	add    ebp,edi
  51e585:	mov    al,ds:0xec97a6d1
  51e58a:	mov    eax,0xc258b6b9
  51e58f:	into   
  51e590:	lods   al,BYTE PTR ds:[esi]
  51e591:	mov    dl,0x7f
  51e593:	or     eax,0x22b131c2
  51e598:	pop    ebx
  51e599:	in     eax,dx
  51e59a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e59b:	jbe    0x51e5d5
  51e59d:	in     al,0x32
  51e59f:	ror    edx,cl
  51e5a1:	and    dh,BYTE PTR [ecx+0x20f70b95]
  51e5a7:	push   edi
  51e5a8:	rcl    BYTE PTR [ecx-0x3ad279cc],0x0
  51e5af:	jno    0x51e5c1
  51e5b1:	pop    edi
  51e5b2:	inc    edi
  51e5b3:	sbb    edi,edi
  51e5b5:	aaa    
  51e5b6:	sbb    esp,DWORD PTR [ebp-0x1]
  51e5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e5ba:	xor    DWORD PTR [eax],esp
  51e5bc:	cmp    BYTE PTR [ebx+0x21],dh
  51e5bf:	sub    eax,0xefdcf9dd
  51e5c4:	xlat   BYTE PTR ds:[ebx]
  51e5c5:	sbb    bl,BYTE PTR [edx-0xec6bef7]
  51e5cb:	mov    ecx,0x84563449
  51e5d0:	xchg   ebp,eax
  51e5d1:	pop    ecx
  51e5d2:	cld    
  51e5d3:	out    dx,al
  51e5d4:	jp     0x51e615
  51e5d6:	test   DWORD PTR [edi],ecx
  51e5d8:	sbb    esp,edi
  51e5da:	aam    0xb1
  51e5dc:	and    DWORD PTR [eax+0x7d],esp
  51e5df:	sub    DWORD PTR [edi-0x6c],ecx
  51e5e2:	cmp    DWORD PTR ds:0x31b3199b,edx
  51e5e8:	mov    al,ds:0x53363a0d
  51e5ed:	pop    ecx
  51e5ee:	xchg   esi,eax
  51e5ef:	pop    esi
  51e5f0:	xor    bl,ch
  51e5f2:	pop    ecx
  51e5f3:	sub    ecx,DWORD PTR [edx-0x715b0c8a]
  51e5f9:	hlt    
  51e5fa:	cmp    bh,al
  51e5fc:	aam    0xc0
  51e5fe:	jno    0x51e586
  51e600:	cmp    al,0x6d
  51e602:	adc    bl,ch
  51e604:	out    0xc7,al
  51e606:	out    dx,al
  51e607:	aad    0x5b
  51e609:	test   DWORD PTR [ebx+0x23fd7060],ebx
  51e60f:	and    esi,esp
  51e611:	cli    
  51e612:	or     cl,dh
  51e614:	push   cs
  51e615:	mov    dl,0xdb
  51e617:	sbb    BYTE PTR [ebx+0x5c],ah
  51e61a:	pop    edi
  51e61b:	mov    DWORD PTR [esi-0x7b70d902],edx
  51e621:	retf   
  51e622:	mov    bl,0x6e
  51e624:	xor    ecx,edx
  51e626:	test   DWORD PTR [edi-0x3fb5cb25],esp
  51e62c:	mov    ebp,0xd8085b5f
  51e631:	in     al,dx
  51e632:	sbb    eax,edi
  51e634:	add    eax,0xca86c8d8
  51e639:	aas    
  51e63a:	call   0xe233:0xa1f5997c
  51e641:	pop    esp
  51e642:	adc    BYTE PTR [ecx+ebp*2+0x46],bl
  51e646:	inc    edx
  51e647:	pop    ebx
  51e648:	pop    ebx
  51e649:	jns    0x51e5d2
  51e64b:	lods   al,BYTE PTR ds:[esi]
  51e64c:	xchg   ebx,eax
  51e64d:	or     eax,0xe44f2b9b
  51e652:	adc    DWORD PTR [ecx+0x2e],0x69
  51e656:	lock fst DWORD PTR [edi+0x303365eb]
  51e65d:	add    eax,edi
  51e65f:	(bad)  
  51e660:	pop    ds
  51e661:	push   ss
  51e662:	imul   ebx,DWORD PTR [edi],0xe3843f86
  51e668:	ja     0x51e650
  51e66a:	push   0xffffffc2
  51e66c:	stc    
  51e66d:	(bad)  
  51e66f:	int3   
  51e670:	cmp    ch,dh
  51e672:	and    eax,0xa44320fa
  51e677:	pop    edi
  51e678:	in     eax,0xc3
  51e67a:	ss inc ecx
  51e67c:	out    0x95,al
  51e67e:	pop    edi
  51e67f:	sahf   
  51e680:	mov    edx,0x16a84da4
  51e685:	pop    ebx
  51e686:	pop    ecx
  51e687:	sbb    al,0x2e
  51e689:	sbb    ebp,DWORD PTR [edi+0x1a2039ea]
  51e68f:	sbb    cl,ah
  51e691:	push   eax
  51e692:	sub    bh,BYTE PTR [ebp-0x4d]
  51e695:	dec    eax
  51e696:	mov    BYTE PTR [edi+edi*2-0xb],dh
  51e69a:	sbb    eax,0x4d54e09c
  51e69f:	xchg   ebp,eax
  51e6a0:	lods   eax,DWORD PTR ds:[esi]
  51e6a1:	add    al,0x93
  51e6a3:	out    dx,eax
  51e6a4:	into   
  51e6a5:	push   edx
  51e6a6:	push   ebx
  51e6a7:	dec    esp
  51e6a8:	mov    ecx,cs
  51e6aa:	into   
  51e6ab:	scas   eax,DWORD PTR es:[edi]
  51e6ac:	dec    esp
  51e6ad:	fcmovb st,st(2)
  51e6af:	push   edx
  51e6b0:	pop    edx
  51e6b1:	inc    edx
  51e6b2:	(bad)  
  51e6b3:	cmc    
  51e6b4:	cwde   
  51e6b5:	mov    esi,0xaebed6d8
  51e6ba:	call   0x9d43:0xa4da8bb5
  51e6c1:	mov    WORD PTR [edx],ss
  51e6c3:	shr    esp,0xb9
  51e6c6:	icebp  
  51e6c7:	sub    DWORD PTR [edi],esi
  51e6c9:	out    0x2,al
  51e6cb:	cmp    al,0xa7
  51e6cd:	int3   
  51e6ce:	inc    esp
  51e6cf:	in     eax,dx
  51e6d0:	mov    dl,0xe0
  51e6d2:	sbb    dh,BYTE PTR [ebx]
  51e6d4:	pop    ss
  51e6d5:	jmp    0x6917c94a
  51e6da:	fimul  DWORD PTR [ecx-0x4d4bd05b]
  51e6e0:	add    al,0x76
  51e6e2:	push   eax
  51e6e3:	idiv   DWORD PTR [eax]
  51e6e5:	std    
  51e6e6:	addr16 hlt 
  51e6e8:	push   cs
  51e6e9:	mov    bl,dl
  51e6eb:	dec    eax
  51e6ec:	es jae 0x51e6e0
  51e6ef:	arpl   WORD PTR [ecx+esi*4+0x7b63f61f],dx
  51e6f6:	sub    dl,ch
  51e6f8:	shl    BYTE PTR [ecx-0x47],cl
  51e6fb:	jmp    0x443f:0x4f6aa6a
  51e702:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e703:	jno    0x51e77e
  51e705:	sub    eax,0x210aa72e
  51e70a:	pop    ds
  51e70b:	v4fnmaddps zmm7{k3}{z},zmm4,XMMWORD PTR [edi+0xa0]
  51e712:	xor    BYTE PTR [esi+0x35],al
  51e715:	adc    al,0x79
  51e717:	(bad)  
  51e718:	and    al,0xdf
  51e71a:	lea    esi,[edx-0x20]
  51e71d:	mov    ch,0xe1
  51e71f:	cmc    
  51e720:	pop    esp
  51e721:	mov    edi,0xc83e6e80
  51e726:	mov    ebx,0x4eb317a2
  51e72b:	inc    edx
  51e72c:	in     eax,dx
  51e72d:	cmp    edi,DWORD PTR [edx]
  51e72f:	aas    
  51e730:	in     al,0xff
  51e732:	jg     0x51e6b6
  51e734:	sbb    BYTE PTR [ecx],cl
  51e736:	sbb    eax,0x5af54993
  51e73b:	sbb    DWORD PTR [eax+0x1e],ebp
  51e73e:	sahf   
  51e73f:	out    dx,eax
  51e740:	add    bh,BYTE PTR [ebp-0x36]
  51e743:	mov    dl,0x21
  51e745:	arpl   si,dx
  51e747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e748:	adc    BYTE PTR ds:0xdde2e83b,0x1
  51e74f:	cs jne 0x51e714
  51e752:	mov    cl,0x82
  51e754:	iret   
  51e755:	lea    ebx,[ebx+0x41f3ba39]
  51e75b:	gs inc ebp
  51e75d:	pop    es
  51e75e:	pushf  
  51e75f:	fcmovnbe st,st(1)
  51e761:	lods   eax,DWORD PTR ds:[esi]
  51e762:	dec    edx
  51e763:	sbb    al,0x98
  51e765:	pop    esi
  51e766:	mov    DWORD PTR [esi+ecx*1],ebx
  51e769:	push   esi
  51e76a:	aam    0xf6
  51e76c:	mov    al,ds:0xa9997a56
  51e771:	(bad)  
  51e772:	sub    DWORD PTR [edi],edi
  51e774:	xchg   DWORD PTR [ebp-0x7ef6b026],esi
  51e77a:	xor    eax,0xffebf359
  51e77f:	stos   BYTE PTR es:[edi],al
  51e780:	jnp    0x51e7fb
  51e782:	ficomp WORD PTR [ecx-0x5c4d1a3e]
  51e788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51e789:	add    al,0x8b
  51e78b:	enter  0x4730,0x2d
  51e78f:	dec    edx
  51e790:	xor    BYTE PTR [edx+0x6dc711cb],dh
  51e796:	adc    al,0x12
  51e798:	cmp    ebx,DWORD PTR [ebp+0x223c73d7]
  51e79e:	bound  esp,QWORD PTR [ecx+0x6197ab81]
  51e7a4:	test   DWORD PTR [esi+esi*2+0x21],ecx
  51e7a8:	loop   0x51e7e4
  51e7aa:	dec    ebx
  51e7ab:	mov    ds:0x7a60334b,eax
  51e7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51e7b1:	in     eax,dx
  51e7b2:	add    BYTE PTR [edi-0x35],bh
  51e7b5:	(bad)  
  51e7b6:	mov    esp,0x3cd1c6e3
  51e7bb:	stc    
  51e7bc:	dec    edx
  51e7bd:	mov    edi,0xd794074
  51e7c2:	cmp    BYTE PTR [edi+0x17a263ea],dl
  51e7c8:	sub    al,0x70
  51e7ca:	jbe    0x51e781
  51e7cc:	jae    0x51e7be
  51e7ce:	xchg   BYTE PTR [eax+0x1bf3c0d4],dh
  51e7d4:	adc    cl,al
  51e7d6:	push   edi
  51e7d7:	adc    DWORD PTR [ebp+0x58682450],ebp
  51e7dd:	xor    eax,0x2c3c46ec
  51e7e2:	ins    DWORD PTR es:[edi],dx
  51e7e3:	loope  0x51e783
  51e7e5:	xor    eax,0x94f18f4b
  51e7ea:	int    0xfd
  51e7ec:	cmp    DWORD PTR [edx-0x38],ebp
  51e7ef:	inc    esi
  51e7f0:	ss ss psllw mm5,mm3
  51e7f5:	pop    ebx
  51e7f6:	mov    esi,0x95c014b8
  51e7fb:	jg     0x51e78e
  51e7fd:	ins    DWORD PTR es:[edi],dx
  51e7fe:	retf   
  51e7ff:	add    dl,bl
  51e801:	xchg   ebx,eax
  51e802:	mov    edx,0xa918e7fa
  51e807:	jmp    0x51e7ac
  51e809:	repnz mov ds:0x7fcc12f5,eax
  51e80f:	in     al,0x52
  51e811:	bnd jno 0x51e81d
  51e814:	call   0x32598b7d
  51e819:	(bad)  
  51e81a:	outs   dx,BYTE PTR ds:[esi]
  51e81b:	es test al,bh
  51e81e:	sbb    DWORD PTR [esi+0x34b75d3a],ecx
  51e824:	and    DWORD PTR [ebx+ecx*1-0x1c],edi
  51e828:	dec    edi
  51e829:	jnp    0x51e840
  51e82b:	cmp    ecx,DWORD PTR [edx+0x7a]
  51e82e:	and    eax,0x80b5603
  51e833:	fidivr WORD PTR [esi-0x3215eed8]
  51e839:	fst    DWORD PTR [ecx]
  51e83b:	add    ch,BYTE PTR fs:[edx]
  51e83e:	imul   ebp,DWORD PTR [ebp+eiz*2-0x45],0x4b
  51e843:	lock dec eax
  51e845:	add    BYTE PTR fs:[eax],0x68
  51e849:	ins    BYTE PTR es:[edi],dx
  51e84a:	mov    eax,0xc7d17539
  51e84f:	inc    esp
  51e850:	les    ecx,FWORD PTR ds:0xe18be4a5
  51e856:	mov    al,ds:0x961060aa
  51e85b:	outs   dx,BYTE PTR ds:[esi]
  51e85c:	inc    esp
  51e85d:	and    al,0x5f
  51e85f:	pop    esi
  51e860:	lods   al,BYTE PTR ds:[esi]
  51e861:	xchg   ebp,eax
  51e862:	into   
  51e863:	or     al,0xca
  51e865:	add    ebx,esi
  51e867:	cld    
  51e868:	or     eax,0x77cceeb6
  51e86d:	dec    edx
  51e86e:	sbb    dh,BYTE PTR [esi]
  51e870:	xchg   ebx,eax
  51e871:	shr    BYTE PTR [eax],1
  51e873:	mov    edx,0x34c62aff
  51e878:	push   DWORD PTR [ebx]
  51e87a:	(bad)  
  51e87b:	sbb    DWORD PTR [si-0x7d],eax
  51e87f:	rol    DWORD PTR [esi+0x125e0c9c],0x53
  51e886:	jecxz  0x51e8d6
  51e888:	mov    cl,0xde
  51e88a:	mov    esp,0xcd8fe3db
  51e88f:	mov    ecx,DWORD PTR [ecx+0x7a]
  51e892:	mov    WORD PTR [eax-0x487dc458],cs
  51e898:	cld    
  51e899:	test   BYTE PTR [edx-0x6e],0xe5
  51e89d:	dec    esp
  51e89e:	mov    ah,0x1e
  51e8a0:	mov    dh,0xab
  51e8a2:	pop    ecx
  51e8a3:	test   ebx,edi
  51e8a5:	xor    eax,0xff4bb585
  51e8aa:	(bad)  
  51e8ab:	aaa    
  51e8ac:	cwde   
  51e8ad:	lock js 0x51e8da
  51e8b0:	dec    ecx
  51e8b1:	test   ebp,0xdac8b00b
  51e8b7:	repz xchg ecx,eax
  51e8b9:	clc    
  51e8ba:	aaa    
  51e8bb:	cmp    ebx,eax
  51e8bd:	cmp    BYTE PTR [ebx-0x5b3f99fb],0xcd
  51e8c4:	push   cs
  51e8c5:	outs   dx,DWORD PTR ds:[esi]
  51e8c6:	sbb    eax,0xfa07b54f
  51e8cb:	aad    0xcd
  51e8cd:	push   ds
  51e8ce:	sub    eax,0x74541ddb
  51e8d3:	push   eax
  51e8d4:	repnz xchg ecx,eax
  51e8d6:	pop    ebx
  51e8d7:	pop    ebx
  51e8d8:	rcr    DWORD PTR [eax-0x37cfa069],cl
  51e8de:	cmp    eax,0x4ba87ef6
  51e8e3:	fld    st(0)
  51e8e5:	jb     0x51e91d
  51e8e7:	mov    ebx,0x32812d36
  51e8ec:	xchg   ebx,eax
  51e8ed:	das    
  51e8ee:	add    esi,eax
  51e8f0:	scas   al,BYTE PTR es:[edi]
  51e8f1:	into   
  51e8f2:	out    dx,al
  51e8f3:	loopne 0x51e958
  51e8f5:	mov    bl,0xa2
  51e8f7:	retf   
  51e8f8:	mov    eax,0xbf22ace7
  51e8fd:	adc    BYTE PTR [edx+0x47],0xc0
  51e901:	sbb    al,0x5d
  51e903:	sub    al,0x58
  51e905:	mov    esp,0xdb2cc7e9
  51e90a:	jg     0x51e8fe
  51e90c:	pop    esi
  51e90d:	ret    
  51e90e:	pop    esi
  51e90f:	or     al,0x77
  51e911:	mov    al,0x39
  51e913:	lds    ecx,FWORD PTR [esi+0x47]
  51e916:	sub    DWORD PTR [ebp-0x19f64221],esi
  51e91c:	test   DWORD PTR [edi-0x4a],ebp
  51e91f:	pop    ebp
  51e920:	int3   
  51e921:	sbb    DWORD PTR [ecx-0x43],ebx
  51e924:	call   0xef6a4e80
  51e929:	aam    0xec
  51e92b:	add    dh,BYTE PTR [eax+0x535ca36c]
  51e931:	dec    edx
  51e932:	or     al,0xef
  51e934:	idiv   BYTE PTR [eax*4-0x52ffcdb9]
  51e93b:	add    DWORD PTR [ecx],ebx
  51e93d:	out    0xd2,eax
  51e93f:	fisttp WORD PTR [esi-0x8]
  51e942:	jle    0x51e9af
  51e944:	add    DWORD PTR [ebp-0x52a4e3d6],edi
  51e94a:	mov    BYTE PTR [edx-0x3379d8c8],0xfe
  51e951:	push   edi
  51e952:	bnd call 0x1d031348
  51e958:	cmp    BYTE PTR [esi-0x5c099290],bl
  51e95e:	and    DWORD PTR [ebp+0x52],0x7b682542
  51e965:	push   eax
  51e966:	jns    0x51e936
  51e968:	adc    eax,DWORD PTR [ecx]
  51e96a:	std    
  51e96b:	fstp   st(4)
  51e96d:	cmp    ebp,0xc9e4c151
  51e973:	call   0xffd49f28
  51e978:	xor    bh,ah
  51e97a:	std    
  51e97b:	enter  0x75c7,0x9b
  51e97f:	fs cmovne esi,eax
  51e983:	aam    0xd8
  51e985:	pop    eax
  51e986:	or     BYTE PTR [esi],dh
  51e988:	push   edi
  51e989:	cmp    eax,0x474026f0
  51e98e:	mov    dh,0x15
  51e990:	jbe    0x51e96b
  51e992:	out    0x62,eax
  51e994:	cld    
  51e995:	mov    eax,0x639873fe
  51e99a:	in     al,0x48
  51e99c:	mov    BYTE PTR [ebp-0x7a6adbed],0x22
  51e9a3:	cld    
  51e9a4:	mov    ecx,0xc93023e5
  51e9a9:	pop    ecx
  51e9aa:	ins    DWORD PTR es:[edi],dx
  51e9ab:	hlt    
  51e9ac:	fidivr DWORD PTR [eax]
  51e9ae:	push   edi
  51e9af:	inc    esi
  51e9b0:	sub    cl,BYTE PTR [ebx-0x72]
  51e9b3:	push   esi
  51e9b4:	xchg   ebp,eax
  51e9b5:	sub    DWORD PTR [ebx+0x15aa933f],esp
  51e9bb:	xlat   BYTE PTR ds:[ebx]
  51e9bc:	sub    DWORD PTR [esi],ecx
  51e9be:	out    0x85,eax
  51e9c0:	sar    DWORD PTR [esi+0x53],0x73
  51e9c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51e9c5:	out    dx,eax
  51e9c6:	add    BYTE PTR [ebx-0x1],ah
  51e9c9:	cld    
  51e9ca:	stos   BYTE PTR es:[edi],al
  51e9cb:	(bad)  
  51e9cc:	cmp    dh,BYTE PTR [edx-0x38bfda68]
  51e9d2:	pop    edx
  51e9d3:	mov    ebp,DWORD PTR [edi-0x70]
  51e9d6:	idiv   DWORD PTR [ebp+0x25083bfc]
  51e9dc:	add    BYTE PTR [esi+ebp*1-0xa1c46b0],dh
  51e9e3:	out    0x83,al
  51e9e5:	push   ebx
  51e9e6:	loop   0x51ea45
  51e9e8:	fs pop esp
  51e9ea:	retf   
  51e9eb:	lock and ecx,DWORD PTR [edi-0x25b305ae]
  51e9f2:	jne    0x51ea58
  51e9f4:	and    DWORD PTR [edi],eax
  51e9f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51e9f7:	ror    BYTE PTR [eax],1
  51e9f9:	inc    esi
  51e9fa:	clc    
  51e9fb:	add    edx,DWORD PTR [ecx]
  51e9fd:	das    
  51e9fe:	rol    esi,1
  51ea00:	call   0x7505:0x945e0f21
  51ea07:	sbb    cl,BYTE PTR [bp+si+0x2992]
  51ea0c:	mov    bl,BYTE PTR [esi+0x62ddae55]
  51ea12:	dec    ebp
  51ea13:	mov    BYTE PTR [ecx-0x2a],ah
  51ea16:	dec    ebp
  51ea17:	je     0x51ea6b
  51ea19:	call   FWORD PTR [ebp-0x6a6f0559]
  51ea1f:	rcl    al,cl
  51ea21:	int    0x32
  51ea23:	in     eax,0x3
  51ea25:	pop    edx
  51ea26:	jb     0x51e9e7
  51ea28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51ea29:	sbb    BYTE PTR [edi+0x3e902f0c],al
  51ea2f:	ins    BYTE PTR es:[edi],dx
  51ea30:	(bad)  
  51ea31:	ss stos BYTE PTR es:[edi],al
  51ea33:	or     BYTE PTR [edi+0x29283b03],bh
  51ea39:	mov    ds:0xc3d8dd1c,eax
  51ea3e:	cmp    bh,BYTE PTR [esi-0x7c562a38]
  51ea44:	mov    esp,0xd389c247
  51ea49:	mov    edx,0xac7121ca
  51ea4e:	int    0x36
  51ea50:	js     0x51eac3
  51ea52:	jb     0x51ea1c
  51ea54:	sub    eax,DWORD PTR [esi+0x1d]
  51ea57:	sbb    eax,0x89bae33e
  51ea5c:	and    edi,eax
  51ea5e:	ret    0x3f1c
  51ea61:	fiadd  DWORD PTR [ecx]
  51ea63:	cld    
  51ea64:	adc    DWORD PTR [ebp-0x8ce6766],ecx
  51ea6a:	enter  0x4b85,0x9a
  51ea6e:	(bad)  
  51ea6f:	into   
  51ea70:	test   BYTE PTR [edi+0x2e3a95dc],ah
  51ea76:	and    dl,BYTE PTR [esi-0x5d0a4bf]
  51ea7c:	inc    edi
  51ea7d:	mov    ds:0xce106813,eax
  51ea82:	sbb    al,0xb
  51ea84:	mov    cl,0xdd
  51ea86:	and    edx,ecx
  51ea88:	mov    bh,BYTE PTR [edx+0x7713c4c3]
  51ea8e:	xchg   al,ch
  51ea90:	sbb    DWORD PTR [ebx+edx*8+0x44],esp
  51ea94:	out    0x4b,al
  51ea96:	popa   
  51ea97:	pop    ds
  51ea98:	test   BYTE PTR [eax+0xf],bl
  51ea9b:	and    al,0xe9
  51ea9d:	xor    eax,0x46dbad55
  51eaa2:	lahf   
  51eaa3:	nop
  51eaa4:	les    esp,FWORD PTR [ebx]
  51eaa6:	loopne 0x51eb21
  51eaa8:	shl    DWORD PTR [edx-0x3a],cl
  51eaab:	pop    eax
  51eaac:	mov    ebp,0x6334c635
  51eab1:	sub    al,0xda
  51eab3:	hlt    
  51eab4:	sub    eax,0xece47dbf
  51eab9:	clc    
  51eaba:	jns    0x51ea92
  51eabc:	xchg   ebx,eax
  51eabd:	(bad)  
  51eabe:	xor    eax,0x24f08a84
  51eac3:	(bad)  
  51eac4:	ror    DWORD PTR [ecx+0x2f],cl
  51eac7:	jb     0x51eb20
  51eac9:	popa   
  51eaca:	fnstcw WORD PTR [ebx+0x66]
  51eacd:	fpatan 
  51eacf:	xor    eax,0xe1315364
  51ead4:	loopne 0x51ea81
  51ead6:	lods   eax,DWORD PTR ds:[esi]
  51ead7:	jno    0x51ea65
  51ead9:	push   ss
  51eada:	push   0x1d
  51eadc:	jge    0x51eae0
  51eade:	inc    eax
  51eadf:	hlt    
  51eae0:	outs   dx,BYTE PTR ds:[esi]
  51eae1:	push   eax
  51eae2:	sbb    bl,BYTE PTR [eax+0x19]
  51eae5:	into   
  51eae6:	aas    
  51eae7:	stos   BYTE PTR es:[edi],al
  51eae8:	cwde   
  51eae9:	jne    0x51eb07
  51eaeb:	popa   
  51eaec:	test   DWORD PTR [ebx-0x56ba029b],edx
  51eaf2:	add    bl,BYTE PTR [eax-0x1d]
  51eaf5:	xchg   ebx,eax
  51eaf6:	mov    ebx,0x95ce61d
  51eafb:	in     ax,0x75
  51eafe:	xor    eax,0x4c31279c
  51eb03:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51eb05:	jne    0x51eaa3
  51eb07:	in     al,0xfa
  51eb09:	test   eax,0xa36acb95
  51eb0e:	iret   
  51eb0f:	xor    cl,BYTE PTR [eax]
  51eb11:	inc    ebp
  51eb12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51eb13:	stc    
  51eb14:	int    0x23
  51eb16:	push   0x76
  51eb18:	mov    ds:0x539ac3be,eax
  51eb1d:	dec    edx
  51eb1e:	xlat   BYTE PTR ds:[ebx]
  51eb1f:	(bad)  
  51eb20:	jmp    0xd30eae1f
  51eb25:	sbb    al,BYTE PTR [esi-0x49]
  51eb28:	and    ch,BYTE PTR [ecx+ecx*8]
  51eb2b:	icebp  
  51eb2c:	enter  0x4599,0x73
  51eb30:	(bad)  
  51eb31:	(bad)  [edi+0x1abb47b5]
  51eb37:	xor    eax,DWORD PTR [edi-0x2e]
  51eb3a:	adc    al,ch
  51eb3c:	jp     0x51eb2d
  51eb3e:	jbe    0x51eb30
  51eb40:	lea    esp,[edi+0x3f8f1e07]
  51eb46:	outs   dx,DWORD PTR ds:[esi]
  51eb47:	les    eax,FWORD PTR [ebp-0x31]
  51eb4a:	xor    dl,bl
  51eb4c:	cmp    DWORD PTR ds:0x869698af,esp
  51eb52:	imul   edi,DWORD PTR [ebp+edi*2+0x58],0xffffff9c
  51eb57:	sub    DWORD PTR [ebx],0x6106cd30
  51eb5d:	sahf   
  51eb5e:	jmp    0x7f640e96
  51eb63:	pop    esi
  51eb64:	or     al,0x23
  51eb66:	icebp  
  51eb67:	mov    cl,0x50
  51eb69:	icebp  
  51eb6a:	fisttp QWORD PTR [esi+0x0]
  51eb6d:	ja     0x51ebd2
  51eb6f:	mov    al,ds:0x3aef303d
  51eb74:	mov    es,WORD PTR [ebp-0x28ffd1d]
  51eb7a:	sar    dh,cl
  51eb7c:	pop    edx
  51eb7d:	xchg   ebx,eax
  51eb7e:	mov    DWORD PTR [esi-0x784d8afd],esi
  51eb84:	xor    BYTE PTR [edx],dh
  51eb86:	cli    
  51eb87:	xchg   esi,eax
  51eb88:	pop    ecx
  51eb89:	push   edx
  51eb8a:	retf   
  51eb8b:	sub    eax,0x31af5dad
  51eb90:	sbb    al,0xf0
  51eb92:	lock sahf 
  51eb94:	(bad)  
  51eb95:	(bad)  
  51eb96:	leave  
  51eb97:	adc    al,0x3c
  51eb99:	dec    edi
  51eb9a:	and    edi,DWORD PTR [ecx+0x1b]
  51eb9d:	(bad)  [ecx]
  51eb9f:	xor    dl,BYTE PTR [eax]
  51eba1:	cli    
  51eba2:	mov    bl,0xb2
  51eba4:	adc    ch,BYTE PTR [edi+0x73]
  51eba7:	hlt    
  51eba8:	dec    edx
  51eba9:	dec    edi
  51ebaa:	(bad)  
  51ebab:	(bad)  
  51ebad:	xchg   ebp,eax
  51ebae:	sbb    cl,BYTE PTR [edi+0x66]
  51ebb1:	(bad)  [ecx+0x5]
  51ebb4:	push   esi
  51ebb5:	loopne 0x51eb99
  51ebb7:	sahf   
  51ebb8:	mov    eax,0x77bbed82
  51ebbd:	fidivr WORD PTR es:[ebx+0x6f]
  51ebc1:	mov    ecx,0xf7c52d5a
  51ebc6:	dec    esi
  51ebc7:	pop    ebx
  51ebc8:	jmp    0xa2d1:0xaa09942d
  51ebcf:	adc    ecx,DWORD PTR [ebp-0x7439ecdb]
  51ebd5:	xlat   BYTE PTR ds:[ebx]
  51ebd6:	scas   eax,DWORD PTR es:[di]
  51ebd8:	sub    ah,dh
  51ebda:	mov    ah,0x59
  51ebdc:	sub    ebx,ebx
  51ebde:	adc    BYTE PTR [esi],dh
  51ebe0:	or     esp,0xffffffd5
  51ebe3:	arpl   cx,sp
  51ebe5:	sbb    DWORD PTR [ecx-0x6298cb4c],edi
  51ebeb:	sti    
  51ebec:	mov    dh,0x3f
  51ebee:	daa    
  51ebef:	mov    bl,0x7
  51ebf1:	outs   dx,BYTE PTR ds:[esi]
  51ebf2:	jo     0x51ec1e
  51ebf4:	cmp    BYTE PTR [ecx+0x4c],al
  51ebf7:	push   ss
  51ebf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51ebf9:	test   DWORD PTR [ebx-0x34],esp
  51ebfc:	or     eax,0x7035583b
  51ec01:	push   esi
  51ec02:	stos   BYTE PTR es:[edi],al
  51ec03:	test   al,0xbf
  51ec05:	std    
  51ec06:	in     al,dx
  51ec07:	pop    esp
  51ec08:	(bad)  
  51ec09:	mov    ds:0x4c987c04,al
  51ec0e:	aad    0xd6
  51ec10:	ret    0xad6c
  51ec13:	dec    ecx
  51ec14:	cli    
  51ec15:	xlat   BYTE PTR ds:[ebx]
  51ec16:	push   esi
  51ec17:	test   eax,0x7ae190b7
  51ec1c:	jp     0x51ec4e
  51ec1e:	adc    dl,BYTE PTR [ebx+0x71]
  51ec21:	sub    esi,DWORD PTR [eax]
  51ec23:	cmp    edi,edx
  51ec25:	ret    0x4006
  51ec28:	imul   edx,DWORD PTR [eax+0x4c],0xa6d8c227
  51ec2f:	inc    esi
  51ec30:	adc    ah,BYTE PTR [ebp-0x8b698f0]
  51ec36:	push   ss
  51ec37:	loopne 0x51ebf8
  51ec39:	lods   al,BYTE PTR ds:[esi]
  51ec3a:	push   ecx
  51ec3b:	xor    DWORD PTR [edi-0x7f],ecx
  51ec3e:	pop    esi
  51ec3f:	or     al,0x65
  51ec41:	adc    BYTE PTR [ecx+0x3e],ch
  51ec44:	mov    bh,0x83
  51ec46:	out    0x20,eax
  51ec48:	add    BYTE PTR [edx*8+0x38cd4846],dl
  51ec4f:	out    dx,eax
  51ec50:	fs int3 
  51ec52:	adc    al,0xbc
  51ec54:	js     0x51ec54
  51ec56:	pop    ss
  51ec57:	popa   
  51ec58:	retf   
  51ec59:	dec    ebx
  51ec5a:	inc    ebx
  51ec5b:	fstp   QWORD PTR [esi+0x23]
  51ec5e:	outs   dx,BYTE PTR ds:[esi]
  51ec5f:	jnp    0x51ec61
  51ec61:	loopne 0x51ec27
  51ec63:	cmp    eax,0x1c610992
  51ec68:	xchg   BYTE PTR [eax-0x32],dl
  51ec6b:	or     al,0xe2
  51ec6d:	inc    esi
  51ec6e:	jl     0x51ec03
  51ec70:	bound  ebx,QWORD PTR [edi+ebx*8+0x29]
  51ec74:	call   0x4fbe:0xe4d2d128
  51ec7b:	neg    DWORD PTR [ebx-0x39773e6f]
  51ec81:	xlat   BYTE PTR ds:[ebx]
  51ec82:	dec    ebp
  51ec83:	outs   dx,DWORD PTR ds:[esi]
  51ec84:	dec    eax
  51ec85:	mov    edx,0x918faa03
  51ec8a:	dec    edi
  51ec8b:	mov    al,ds:0x5caa44f2
  51ec90:	stc    
  51ec91:	or     eax,0x666ffbec
  51ec96:	mov    bl,0xef
  51ec98:	cdq    
  51ec99:	dec    ebx
  51ec9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51ec9b:	or     BYTE PTR [eax-0x665a731e],ah
  51eca1:	icebp  
  51eca2:	jecxz  0x51ec51
  51eca4:	cmp    al,0x1a
  51eca6:	lods   eax,DWORD PTR ds:[esi]
  51eca7:	sbb    esp,esi
  51eca9:	fcmovnb st,st(2)
  51ecab:	mov    eax,ds:0x596046fe
  51ecb0:	and    DWORD PTR [esi+0x74d56767],ecx
  51ecb6:	mov    es:0xf34ec7bc,eax
  51ecbc:	mov    ebx,0xf2bf5a3b
  51ecc1:	add    DWORD PTR ds:0x25391a88,ebx
  51ecc7:	aas    
  51ecc8:	arpl   bx,sp
  51ecca:	add    BYTE PTR ds:0xbccdba3d,ch
  51ecd0:	mov    ds:0x5281c1dc,al
  51ecd5:	cld    
  51ecd6:	dec    edx
  51ecd7:	pop    edi
  51ecd8:	mov    ds:0xc8f57515,eax
  51ecdd:	pop    edx
  51ecde:	xchg   ebp,eax
  51ecdf:	jmp    0xb469:0x1b8e3a0b
  51ece6:	jbe    0x51ed4e
  51ece8:	ins    BYTE PTR es:[edi],dx
  51ece9:	inc    edi
  51ecea:	shr    edi,1
  51ecec:	push   esi
  51eced:	mov    gs,eax
  51ecef:	lods   eax,DWORD PTR ds:[esi]
  51ecf0:	ins    BYTE PTR es:[edi],dx
  51ecf1:	sbb    esi,DWORD PTR [ecx-0x1]
  51ecf4:	push   edx
  51ecf5:	jne    0x51ed28
  51ecf7:	or     dh,BYTE PTR [edx+0x611ce616]
  51ecfd:	sbb    eax,0xaeec5e5b
  51ed02:	xchg   BYTE PTR ds:0x5729a040,dl
  51ed08:	fadd   QWORD PTR [edx-0x16]
  51ed0b:	dec    ecx
  51ed0c:	sub    eax,0x39688f7c
  51ed11:	(bad)  
  51ed12:	mov    edi,0xa12a2c20
  51ed17:	or     ebx,esp
  51ed19:	inc    esp
  51ed1a:	or     DWORD PTR [edx-0x98b4baa],0x1ea38473
  51ed24:	(bad)
  51ed27:	pop    eax
  51ed28:	loopne 0x51ed89
  51ed2a:	lea    ebp,[eax+eiz*1+0x73eafa0c]
  51ed31:	gs test al,0x75
  51ed34:	mov    ch,0x28
  51ed36:	rol    DWORD PTR [ebx],0x9f
  51ed39:	rol    BYTE PTR [eax+0x578373d3],cl
  51ed3f:	jecxz  0x51ed51
  51ed41:	cmc    
  51ed42:	stos   BYTE PTR es:[edi],al
  51ed43:	sbb    DWORD PTR [esi],edx
  51ed45:	data16 sbb BYTE PTR [edx],bh
  51ed48:	cmp    eax,DWORD PTR [eax+0x49]
  51ed4b:	add    eax,0xb68f3d2e
  51ed50:	jmp    0x4d378d
  51ed55:	data16 loope 0x51ed3f
  51ed58:	stos   DWORD PTR es:[edi],eax
  51ed59:	jmp    0x51ed62
  51ed5b:	out    dx,al
  51ed5c:	jo     0x51ed58
  51ed5e:	adc    esi,DWORD PTR [esi*8+0x49293f95]
  51ed65:	out    dx,al
  51ed66:	jno    0x51ed80
  51ed68:	aad    0x5e
  51ed6a:	retf   0x837
  51ed6d:	mov    dl,0xd8
  51ed6f:	iret   
  51ed70:	jecxz  0x51edcc
  51ed72:	icebp  
  51ed73:	fist   WORD PTR [ecx-0x6dafdce9]
  51ed79:	pop    ecx
  51ed7a:	pop    ss
  51ed7b:	shl    BYTE PTR [eax],1
  51ed7d:	icebp  
  51ed7e:	imul   DWORD PTR [ebp+eiz*1-0x46]
  51ed82:	bound  edi,QWORD PTR [ecx]
  51ed84:	test   eax,0x6540879e
  51ed89:	adc    al,BYTE PTR [edx+ebp*1+0xa]
  51ed8d:	out    dx,eax
  51ed8e:	xchg   ecx,eax
  51ed8f:	sub    eax,0xb6a0f6ed
  51ed94:	adc    DWORD PTR [ecx],ecx
  51ed96:	xchg   edi,eax
  51ed97:	loop   0x51ed91
  51ed99:	jne    0x51edbe
  51ed9b:	sub    BYTE PTR [ebp+0x4ee2b671],dh
  51eda1:	ss mov edx,0xd7e54ee6
  51eda7:	pushf  
  51eda8:	or     al,0x4b
  51edaa:	nop
  51edab:	int3   
  51edac:	dec    ebx
  51edad:	cmp    DWORD PTR [eax],ecx
  51edaf:	mov    bh,0xe8
  51edb1:	ret    
  51edb2:	push   ds
  51edb3:	add    dh,BYTE PTR [ebp+edx*8-0x79]
  51edb7:	scas   al,BYTE PTR es:[edi]
  51edb8:	dec    edi
  51edb9:	and    dl,BYTE PTR [esi-0x5d82818c]
  51edbf:	(bad)  
  51edc0:	xchg   ebx,eax
  51edc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51edc2:	iret   
  51edc3:	or     al,0x37
  51edc5:	fcomp  QWORD PTR [ecx+ebx*4+0x1e]
  51edc9:	mov    eax,0xf4b32f03
  51edce:	out    0x54,al
  51edd0:	fcomip st,st(7)
  51edd2:	mov    ds:0x14a5ed87,al
  51edd7:	pop    esi
  51edd8:	rcr    ebx,0xf3
  51eddb:	std    
  51eddc:	sub    BYTE PTR [ecx],bh
  51edde:	ror    DWORD PTR [ecx+0x1b],1
  51ede1:	sbb    BYTE PTR [eax-0x3f847886],dh
  51ede7:	add    DWORD PTR ds:0x3bc07a69,ecx
  51eded:	iret   
  51edee:	mov    ecx,0x80c90baf
  51edf3:	jecxz  0x51ee62
  51edf5:	and    BYTE PTR [ebp+edx*8+0x0],al
  51edf9:	xchg   ecx,eax
  51edfa:	or     al,0xe9
  51edfc:	jnp    0x51ee20
  51edfe:	aas    
  51edff:	mov    al,ds:0x82149e16
  51ee04:	ss cli 
  51ee06:	cmc    
  51ee07:	cmp    edi,DWORD PTR [edi-0x50]
  51ee0a:	and    BYTE PTR [edi],0x97
  51ee0d:	and    BYTE PTR [ecx],al
  51ee0f:	stos   BYTE PTR es:[edi],al
  51ee10:	dec    ebp
  51ee11:	mov    eax,0x3eed70d3
  51ee16:	and    DWORD PTR [esi-0xb7fa85c],ebx
  51ee1c:	mov    esi,0x8c048ea5
  51ee21:	sub    al,0x21
  51ee23:	sbb    al,0xb0
  51ee25:	fcom   DWORD PTR [edi+0x79]
  51ee28:	aaa    
  51ee29:	stos   BYTE PTR es:[edi],al
  51ee2a:	adc    cl,ah
  51ee2c:	push   cs
  51ee2d:	push   ebx
  51ee2e:	mov    dl,0x15
  51ee30:	add    al,cl
  51ee32:	add    cl,ah
  51ee34:	adc    DWORD PTR [edx],ebx
  51ee36:	sub    esp,DWORD PTR [edi]
  51ee38:	imul   ebp,DWORD PTR [edx+ebx*8+0x27999489],0x4
  51ee40:	jecxz  0x51edf0
  51ee42:	test   BYTE PTR [eax],ch
  51ee44:	dec    edx
  51ee45:	ins    BYTE PTR es:[edi],dx
  51ee46:	dec    edi
  51ee47:	rol    DWORD PTR [edx+eiz*2-0x631a0bd8],1
  51ee4e:	push   cs
  51ee4f:	js     0x51ee76
  51ee51:	fwait
  51ee52:	(bad)  
  51ee53:	cmc    
  51ee54:	inc    esp
  51ee55:	adc    al,0xd4
  51ee57:	nop
  51ee58:	ror    DWORD PTR [edi],0x28
  51ee5b:	loop   0x51eeba
  51ee5d:	cmp    DWORD PTR [edx],ebp
  51ee5f:	repnz mov DWORD PTR [edx],esp
  51ee62:	in     eax,0xac
  51ee64:	repnz add al,0xd7
  51ee67:	lds    esi,FWORD PTR [edx]
  51ee69:	fst    QWORD PTR [ebx]
  51ee6b:	jns    0x51ee1f
  51ee6d:	add    esp,ebx
  51ee6f:	xchg   esp,eax
  51ee70:	add    DWORD PTR [ecx-0x5d],edi
  51ee73:	les    esi,FWORD PTR [edi+0x51b5b0b1]
  51ee79:	outs   dx,BYTE PTR ds:[esi]
  51ee7a:	hlt    
  51ee7b:	scas   al,BYTE PTR es:[edi]
  51ee7c:	in     eax,0x93
  51ee7e:	pop    esi
  51ee7f:	pusha  
  51ee80:	pop    edi
  51ee81:	fwait
  51ee82:	mov    esp,?
  51ee84:	xor    al,0x24
  51ee86:	xchg   esp,eax
  51ee87:	in     al,dx
  51ee88:	dec    BYTE PTR [edx]
  51ee8a:	mov    bh,BYTE PTR fs:[edi-0x30]
  51ee8e:	inc    ebp
  51ee8f:	sbb    al,0x6d
  51ee91:	and    dh,BYTE PTR [eax+0x779fcd76]
  51ee97:	cmc    
  51ee98:	sub    BYTE PTR [edi+0x67786254],ah
  51ee9e:	xor    eax,0xeb8f896d
  51eea3:	leave  
  51eea4:	push   0x2d454a
  51eea9:	inc    esi
  51eeaa:	cmp    ch,BYTE PTR [ebp*4-0x5fd704b4]
  51eeb1:	outs   dx,DWORD PTR ds:[esi]
  51eeb2:	sub    al,0xc0
  51eeb4:	dec    ecx
  51eeb5:	int3   
  51eeb6:	shl    dl,0xc3
  51eeb9:	cwde   
  51eeba:	not    esi
  51eebc:	mov    ecx,0x9660d601
  51eec1:	pop    esp
  51eec2:	sbb    eax,0x74e009c2
  51eec7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51eec8:	pop    ebx
  51eec9:	mov    al,0x14
  51eecb:	pop    ebx
  51eecc:	pop    esi
  51eecd:	dec    esi
  51eece:	and    al,0x5a
  51eed0:	daa    
  51eed1:	pop    ebp
  51eed2:	and    bh,ch
  51eed4:	sub    ebp,DWORD PTR [ecx+0x3ec7452f]
  51eeda:	lock in eax,dx
  51eedc:	jbe    0x51ef22
  51eede:	jle    0x51eecf
  51eee0:	sbb    eax,0x100da026
  51eee5:	pushf  
  51eee6:	int3   
  51eee7:	adc    bh,al
  51eee9:	pop    esp
  51eeea:	push   ss
  51eeeb:	(bad)  
  51eeec:	push   0xffffff9d
  51eeee:	shl    DWORD PTR [ecx],0x52
  51eef1:	add    al,0x71
  51eef3:	add    bh,ah
  51eef5:	pop    edx
  51eef6:	mov    BYTE PTR [edx+0x1b],0x42
  51eefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51eefb:	jle    0x51eee8
  51eefd:	imul   ebp,DWORD PTR [ebx-0x2dc6e0dd],0xbfae9d6f
  51ef07:	ins    BYTE PTR es:[edi],dx
  51ef08:	and    esi,0xffffffaf
  51ef0b:	(bad)  [esp+ebx*2+0x13]
  51ef0f:	enter  0xe51e,0x52
  51ef13:	fs adc al,0x53
  51ef16:	test   BYTE PTR [esi-0x28beafc5],bl
  51ef1c:	mov    esi,DWORD PTR [edx-0x3357d3da]
  51ef22:	mov    ecx,0x3949c43e
  51ef27:	sar    BYTE PTR [ebp+0x0],1
  51ef2a:	and    ch,BYTE PTR [ecx+esi*8-0x56]
  51ef2e:	sub    ch,BYTE PTR [edx+ebp*1+0x65]
  51ef32:	and    ecx,edi
  51ef34:	dec    ebx
  51ef35:	in     eax,dx
  51ef36:	inc    edi
  51ef37:	mov    esi,0x7b7b3642
  51ef3c:	fild   WORD PTR [ebx]
  51ef3e:	dec    ebp
  51ef3f:	cli    
  51ef40:	ins    DWORD PTR es:[edi],dx
  51ef41:	mov    al,ds:0xab644efe
  51ef46:	fdivr  st(5),st
  51ef48:	imul   edx,esi,0x45
  51ef4b:	leave  
  51ef4c:	or     ch,dh
  51ef4e:	sub    cl,dh
  51ef50:	cdq    
  51ef51:	inc    edx
  51ef52:	xlat   BYTE PTR es:[ebx]
  51ef54:	fbld   TBYTE PTR [edx+0x61]
  51ef57:	test   DWORD PTR [edi-0x2a],ebx
  51ef5a:	pop    edx
  51ef5b:	dec    ecx
  51ef5c:	call   0xe0e6:0x617acf97
  51ef63:	mov    edi,0x4fee87bf
  51ef68:	fcom   DWORD PTR [eax+esi*8+0x6]
  51ef6c:	js     0x51efec
  51ef6e:	data16 xchg BYTE PTR [eax+edx*4],bl
  51ef72:	mov    DWORD PTR [ebx-0x75],ebp
  51ef75:	retf   
  51ef76:	mov    esp,0x75118d98
  51ef7b:	data16 jge 0x51efc4
  51ef7e:	xchg   BYTE PTR [eax+edi*2],ch
  51ef81:	mov    esi,0x2f00be32
  51ef86:	mov    dh,0x17
  51ef88:	xor    cl,BYTE PTR [eax]
  51ef8a:	mov    dh,0x16
  51ef8c:	imul   edi,DWORD PTR [edx+0x1f77270f],0x66
  51ef93:	adc    ch,BYTE PTR [ebp+0x544bdb19]
  51ef99:	loop   0x51ef25
  51ef9b:	mov    ds:0x5dc46d86,eax
  51efa0:	xchg   esp,eax
  51efa1:	push   ss
  51efa2:	int3   
  51efa3:	clc    
  51efa4:	sbb    al,0xd4
  51efa6:	stc    
  51efa7:	and    esi,DWORD PTR [edx]
  51efa9:	enter  0xcd6f,0xa1
  51efad:	lock mov ds:0xa22100be,al
  51efb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51efb4:	cmp    ch,ch
  51efb6:	js     0x51ef6b
  51efb8:	jnp    0x51efef
  51efba:	clc    
  51efbb:	lods   al,BYTE PTR ds:[esi]
  51efbc:	xchg   ebp,eax
  51efbd:	xlat   BYTE PTR ds:[ebx]
  51efbe:	mov    al,0x4c
  51efc0:	jge    0x51efd2
  51efc2:	stos   BYTE PTR es:[edi],al
  51efc3:	push   0xf4a3083
  51efc8:	pop    eax
  51efc9:	xor    BYTE PTR [eax+0x5eccc229],0xd2
  51efd0:	fsubr  QWORD PTR [edx+0x26]
  51efd3:	and    esp,DWORD PTR [ebx-0xd]
  51efd6:	sbb    esi,DWORD PTR [edi]
  51efd8:	mov    ch,BYTE PTR [edi-0x32d69d0a]
  51efde:	pop    ds
  51efdf:	ss fistp QWORD PTR cs:[edi-0x20]
  51efe4:	push   0x87ee5e73
  51efe9:	mov    edx,0xfefe139a
  51efee:	in     eax,dx
  51efef:	xchg   edx,eax
  51eff0:	sub    al,0x9b
  51eff2:	xchg   ecx,eax
  51eff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51eff4:	push   esp
  51eff5:	scas   eax,DWORD PTR es:[edi]
  51eff6:	lock or dh,BYTE PTR [eax+ebp*2+0x39]
  51effb:	xchg   edi,eax
  51effc:	sbb    ah,bl
  51effe:	pop    ebp
  51efff:	add    dl,BYTE PTR [edi+0x54]
  51f002:	sub    BYTE PTR [esi+esi*8+0x7],al
  51f006:	xor    cl,BYTE PTR gs:[eax-0x36]
  51f00a:	jne    0x51f04f
  51f00c:	aas    
  51f00d:	xchg   ecx,eax
  51f00e:	sub    DWORD PTR [eax+0x10f5511],eax
  51f014:	pusha  
  51f015:	inc    ebp
  51f016:	mov    esi,0x4307cc9d
  51f01b:	rcr    DWORD PTR [ebp-0x3f1cf2c6],1
  51f021:	js     0x51f024
  51f023:	inc    esi
  51f024:	xor    ecx,DWORD PTR [edi]
  51f026:	pop    ss
  51f027:	cli    
  51f028:	xchg   ebp,eax
  51f029:	sti    
  51f02a:	adc    BYTE PTR [ecx-0x5b],ah
  51f02d:	sub    esp,DWORD PTR [ecx+0xf696836]
  51f033:	aad    0x49
  51f035:	je     0x51efc7
  51f037:	mov    eax,0x70599611
  51f03c:	popf   
  51f03d:	in     al,dx
  51f03e:	push   ebx
  51f03f:	push   eax
  51f040:	adc    eax,0x16c4e3f8
  51f045:	nop
  51f046:	call   0xfa26:0x81b1c49f
  51f04d:	mov    DWORD PTR [eax+0x29],0xd4555cda
  51f054:	ins    BYTE PTR es:[edi],dx
  51f055:	mov    ebp,es
  51f057:	rcr    DWORD PTR [edi+0x1dc29f05],1
  51f05d:	clc    
  51f05e:	loop   0x51f07a
  51f060:	hlt    
  51f061:	test   al,0xaa
  51f063:	popa   
  51f064:	cs cld 
  51f066:	or     DWORD PTR [ebp-0x11],edi
  51f069:	jmp    0x51f0c7
  51f06b:	add    ch,dh
  51f06d:	sbb    BYTE PTR [ebx+0x120abb0e],ch
  51f073:	mov    bl,BYTE PTR [edi+0x1a0130dc]
  51f079:	push   0x7a
  51f07b:	mov    ebx,DWORD PTR [esp+eiz*8]
  51f07e:	jl     0x51f0e7
  51f080:	fld    st(3)
  51f082:	lods   al,BYTE PTR ds:[esi]
  51f083:	and    al,0x84
  51f085:	sub    bh,BYTE PTR es:[eax-0x58]
  51f089:	loop   0x51f01d
  51f08b:	inc    ebp
  51f08c:	call   0x74de1672
  51f091:	add    esi,DWORD PTR [eax+ecx*4-0xad35888]
  51f098:	adc    al,0x64
  51f09a:	mov    bl,0x1f
  51f09c:	retf   
  51f09d:	in     al,0x9d
  51f09f:	jp     0x51f0c2
  51f0a1:	aam    0xa7
  51f0a3:	int3   
  51f0a4:	cli    
  51f0a5:	mov    esp,0xf18337d2
  51f0aa:	popa   
  51f0ab:	dec    eax
  51f0ac:	leave  
  51f0ad:	daa    
  51f0ae:	test   al,0x83
  51f0b0:	push   0xfffffff3
  51f0b2:	jecxz  0x51f125
  51f0b4:	in     al,dx
  51f0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f0b6:	aaa    
  51f0b7:	push   esi
  51f0b8:	adc    DWORD PTR [edi-0x1a],esp
  51f0bb:	loop   0x51f07a
  51f0bd:	inc    ebp
  51f0be:	test   eax,0xbb0ce904
  51f0c3:	(bad)  
  51f0c4:	in     eax,dx
  51f0c5:	outs   dx,DWORD PTR ds:[esi]
  51f0c6:	dec    esi
  51f0c7:	(bad)  
  51f0c8:	mov    BYTE PTR [edx+0xe9afcda],bh
  51f0ce:	sub    al,0xee
  51f0d0:	ss mov esp,0x3df82deb
  51f0d6:	xchg   ecx,eax
  51f0d7:	xor    eax,0x95849ff
  51f0dc:	test   DWORD PTR [edi-0x14],0xea2f8bd0
  51f0e3:	ror    BYTE PTR [ebp-0x50],cl
  51f0e6:	gs xchg edi,eax
  51f0e8:	sub    ebx,DWORD PTR [edi]
  51f0ea:	jl     0x51f11f
  51f0ec:	and    DWORD PTR [edx-0x44],0x61753cfd
  51f0f3:	fmul   st(3),st
  51f0f5:	sbb    al,0xe3
  51f0f7:	arpl   WORD PTR [eax-0x73],sp
  51f0fa:	data16 mov BYTE PTR [edx+eiz*2-0x5f153afd],0x2f
  51f103:	mov    al,0x8f
  51f105:	xor    ebp,DWORD PTR [ecx+esi*1]
  51f108:	jmp    0xbbd630db
  51f10d:	jo     0x51f142
  51f10f:	adc    edi,DWORD PTR [edi+esi*2+0x50]
  51f113:	test   eax,0xb55a8d82
  51f118:	cs jns 0x51f147
  51f11b:	pop    ebp
  51f11c:	mov    ebp,0x1a279087
  51f121:	sbb    BYTE PTR [ebp-0x7bc60b77],bh
  51f127:	pop    ds
  51f128:	ins    BYTE PTR es:[edi],dx
  51f129:	sub    BYTE PTR [ebx-0x725ec2ab],dh
  51f12f:	out    0xbb,al
  51f131:	xchg   ebp,eax
  51f132:	neg    BYTE PTR [esi]
  51f134:	xchg   esi,eax
  51f135:	mov    eax,0x1c964195
  51f13a:	sub    edi,DWORD PTR [ebp+0x6968a905]
  51f140:	jnp    0x51f0fc
  51f142:	jae    0x51f0e6
  51f144:	arpl   di,bp
  51f146:	push   edi
  51f147:	add    al,0x86
  51f149:	or     DWORD PTR [eax+eax*1+0x6f34f292],esi
  51f150:	add    al,0x84
  51f152:	icebp  
  51f153:	std    
  51f154:	mov    al,ds:0x6b322fe1
  51f159:	js     0x51f134
  51f15b:	mov    esi,DWORD PTR [eax-0xa]
  51f15e:	gs dec esp
  51f160:	std    
  51f161:	mov    eax,ds:0x622b64b8
  51f166:	js     0x51f166
  51f168:	clc    
  51f169:	dec    edi
  51f16a:	sub    ebp,ecx
  51f16c:	pop    es
  51f16d:	mov    eax,ds:0x3a1f410c
  51f172:	mov    ah,0xa9
  51f174:	test   eax,0x2f43c8e8
  51f179:	in     eax,0xf2
  51f17b:	loop   0x51f1ea
  51f17d:	add    DWORD PTR [ebp+0xb],0x7834a73d
  51f184:	aad    0x25
  51f186:	shr    BYTE PTR [esi-0x646b7bbb],0x71
  51f18d:	in     al,0x53
  51f18f:	popf   
  51f190:	pop    esp
  51f191:	push   esi
  51f192:	mov    cl,0x1d
  51f194:	mov    ecx,0x984ee8a8
  51f199:	inc    ebp
  51f19a:	daa    
  51f19b:	pushf  
  51f19c:	pmuludq mm1,QWORD PTR [edi+0x2b]
  51f1a0:	hlt    
  51f1a1:	cmp    bl,BYTE PTR [eax]
  51f1a3:	hlt    
  51f1a4:	jecxz  0x51f172
  51f1a6:	data16 jl 0x51f1e5
  51f1a9:	dec    esi
  51f1aa:	inc    ebx
  51f1ab:	scas   al,BYTE PTR es:[edi]
  51f1ac:	cmp    BYTE PTR [esi],0x4
  51f1af:	add    eax,0x9211931
  51f1b4:	cdq    
  51f1b5:	xchg   esp,eax
  51f1b7:	cmc    
  51f1b8:	daa    
  51f1b9:	push   0xb9634167
  51f1be:	mov    eax,ds:0xf530edbb
  51f1c3:	inc    esi
  51f1c4:	xchg   esi,eax
  51f1c5:	ror    DWORD PTR [ebp+eiz*4-0x2e3698b2],1
  51f1cc:	sbb    eax,0xa054263d
  51f1d1:	mul    DWORD PTR ds:0xf4984a05
  51f1d7:	nop
  51f1d8:	gs adc eax,0x13e7926f
  51f1de:	and    al,0xe7
  51f1e0:	add    esp,DWORD PTR [edx]
  51f1e2:	popw   es
  51f1e4:	sbb    eax,0x281ead56
  51f1e9:	jns    0x51f1c7
  51f1eb:	fist   DWORD PTR [eax-0x25]
  51f1ee:	lods   al,BYTE PTR ds:[esi]
  51f1ef:	add    cl,BYTE PTR [ebx+0x5c]
  51f1f2:	pop    es
  51f1f3:	retf   0xf5cd
  51f1f6:	cld    
  51f1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f1f8:	sbb    BYTE PTR [ebp+edx*4-0x410ee0de],0x4c
  51f200:	adc    al,0x29
  51f202:	dec    ebp
  51f203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f204:	or     eax,0x4e4f8cda
  51f209:	enter  0x55d0,0x68
  51f20d:	outs   dx,DWORD PTR ds:[esi]
  51f20e:	xchg   ebp,eax
  51f20f:	fadd   DWORD PTR [eax]
  51f211:	add    al,0x11
  51f213:	shl    BYTE PTR [edi+0x31],0x67
  51f217:	stc    
  51f218:	not    DWORD PTR [esp+edi*4-0x51beb046]
  51f21f:	and    al,ah
  51f221:	xor    al,0x89
  51f223:	mov    ebx,edx
  51f225:	ds je  0x51f26b
  51f228:	fadd   st(7),st
  51f22a:	push   eax
  51f22b:	pop    edi
  51f22c:	pop    ebx
  51f22d:	clc    
  51f22e:	aaa    
  51f22f:	pop    ss
  51f230:	dec    eax
  51f231:	inc    esi
  51f232:	mov    edi,0x1416dafa
  51f237:	jge    0x51f2ab
  51f239:	sub    BYTE PTR [edi],0x61
  51f23c:	xor    eax,0x5c7a9d1a
  51f241:	stos   BYTE PTR es:[edi],al
  51f242:	jmp    0x73b0:0x8635909e
  51f249:	in     eax,0xa0
  51f24b:	jnp    0x51f280
  51f24d:	xchg   ebx,esi
  51f24f:	jo     0x51f2ba
  51f251:	(bad)  
  51f252:	push   cs
  51f253:	mov    esp,0xef4059fd
  51f258:	xchg   edx,eax
  51f259:	scas   eax,DWORD PTR es:[edi]
  51f25a:	inc    eax
  51f25b:	sbb    dh,BYTE PTR [ebx+0x2414486c]
  51f261:	in     al,0x39
  51f263:	and    eax,0x5c341c92
  51f268:	bound  edx,QWORD PTR [edi+0x3a]
  51f26b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f26c:	dec    edi
  51f26d:	pop    ds
  51f26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51f26f:	(bad)  
  51f270:	adc    eax,0x43b3950b
  51f275:	dec    eax
  51f276:	fcmovnb st,st(7)
  51f278:	out    0x68,eax
  51f27a:	mov    eax,0x10e894a2
  51f27f:	lahf   
  51f280:	jnp    0x51f222
  51f282:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f283:	mov    DWORD PTR [esi+0x3809e2],esp
  51f289:	xchg   esp,eax
  51f28a:	aam    0x1b
  51f28c:	int    0xe2
  51f28e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f28f:	mov    esi,0x1d04dc8e
  51f294:	xchg   edi,eax
  51f295:	leave  
  51f296:	mov    ebp,0xda8b49a0
  51f29b:	cmp    DWORD PTR [edi+0x345424ce],esi
  51f2a1:	fwait
  51f2a2:	and    BYTE PTR [ecx],bh
  51f2a4:	xchg   DWORD PTR [esi-0x31338e3c],ebx
  51f2aa:	dec    ecx
  51f2ab:	lock aad 0x4f
  51f2ae:	out    dx,eax
  51f2af:	mov    esp,0x2e688a40
  51f2b4:	ret    
  51f2b5:	repz sbb BYTE PTR [esi+0x15],0xc5
  51f2ba:	push   eax
  51f2bb:	je     0x51f2ec
  51f2bd:	adc    DWORD PTR [ebx-0x3cf8ec53],edx
  51f2c3:	mov    ebp,DWORD PTR [esi-0x2d47f4c]
  51f2c9:	jl     0x51f2a7
  51f2cb:	fbld   TBYTE PTR [edx]
  51f2cd:	retf   
  51f2ce:	(bad)  
  51f2cf:	push   ebx
  51f2d0:	cmp    al,0x1c
  51f2d2:	mov    al,0x92
  51f2d4:	or     BYTE PTR [eax],al
  51f2d6:	call   0xcd46fe47
  51f2db:	out    dx,eax
  51f2dc:	mov    BYTE PTR [edi-0x4d],dh
  51f2df:	dec    esi
  51f2e0:	nop
  51f2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f2e2:	jbe    0x51f2e7
  51f2e4:	xchg   bh,dl
  51f2e6:	and    al,BYTE PTR [ebx*1+0x3577280c]
  51f2ed:	mov    BYTE PTR [edi+0x58],dl
  51f2f0:	es inc edi
  51f2f2:	(bad)  
  51f2f3:	push   edi
  51f2f4:	xlat   BYTE PTR ds:[ebx]
  51f2f5:	js     0x51f372
  51f2f7:	mov    dl,0x7a
  51f2f9:	repnz cdq 
  51f2fb:	mul    bh
  51f2fd:	mov    es,WORD PTR [ebx-0x3]
  51f300:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f301:	imul   edx,ebp,0xa4effccb
  51f307:	ins    BYTE PTR es:[edi],dx
  51f308:	cmp    eax,0x5cf7e30e
  51f30d:	and    DWORD PTR [ebp+esi*1-0x4afa3807],ecx
  51f314:	nop
  51f315:	(bad)  
  51f316:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f317:	fiadd  DWORD PTR [ebp+0x2860bd2d]
  51f31d:	dec    edx
  51f31e:	mov    ah,0x68
  51f320:	adc    ah,dh
  51f322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f323:	test   DWORD PTR [edi-0x53407e2e],0x2e0d7441
  51f32d:	jg     0x51f393
  51f32f:	stos   BYTE PTR es:[edi],al
  51f330:	loop   0x51f32c
  51f332:	test   BYTE PTR [edi+ebx*8],bh
  51f335:	mov    ah,0xa7
  51f337:	mov    ebp,gs
  51f339:	sti    
  51f33a:	(bad)  
  51f33b:	std    
  51f33c:	in     al,0x50
  51f33e:	cmp    eax,0x6e889af4
  51f343:	add    eax,0x87ca1972
  51f348:	sub    ecx,eax
  51f34a:	mov    dl,0x67
  51f34c:	mov    al,BYTE PTR [esi-0x16]
  51f34f:	and    esi,DWORD PTR [ebx+0x34]
  51f352:	arpl   WORD PTR [ebp-0x6cf5afb],di
  51f358:	jge    0x51f380
  51f35a:	jge    0x51f2e0
  51f35c:	lods   al,BYTE PTR ds:[esi]
  51f35d:	mov    ebp,DWORD PTR [di]
  51f360:	call   0xb2fd:0x761c7e03
  51f367:	fsub   QWORD PTR [eax]
  51f369:	push   esp
  51f36a:	je     0x51f38c
  51f36c:	inc    esp
  51f36d:	ss ss jp 0x51f35f
  51f371:	or     al,0x8c
  51f373:	sbb    ch,BYTE PTR [esi]
  51f375:	stos   BYTE PTR es:[edi],al
  51f376:	shr    DWORD PTR [ecx+ecx*8+0x3f],0x3d
  51f37b:	push   esi
  51f37c:	mov    ch,0x7
  51f37e:	mov    cl,0x3f
  51f380:	loopne 0x51f325
  51f382:	sti    
  51f383:	pop    ds
  51f384:	cs dec ebp
  51f386:	jne    0x51f313
  51f388:	and    eax,0x6902e700
  51f38d:	mov    esp,DWORD PTR [eax+eax*2]
  51f390:	inc    ebp
  51f391:	add    eax,0x7a2d8237
  51f396:	sbb    eax,eax
  51f398:	xchg   edx,eax
  51f399:	fild   DWORD PTR [edx-0xe54db5f]
  51f39f:	data16 in al,dx
  51f3a1:	push   ds
  51f3a2:	cmp    bl,BYTE PTR [ebx]
  51f3a4:	jbe    0x51f3d4
  51f3a6:	jmp    0xa787fcdc
  51f3ab:	in     eax,dx
  51f3ac:	int    0xe5
  51f3ae:	adc    eax,0xb2b56e65
  51f3b3:	push   esi
  51f3b4:	pop    esp
  51f3b5:	bnd ret 0x8518
  51f3b9:	sub    eax,0xa801db1b
  51f3be:	fs or  ah,ah
  51f3c1:	inc    edx
  51f3c2:	(bad)  
  51f3c3:	ins    DWORD PTR es:[edi],dx
  51f3c4:	in     al,0x47
  51f3c6:	les    eax,FWORD PTR [ecx+0x4d162e41]
  51f3cc:	inc    esi
  51f3cd:	daa    
  51f3ce:	xor    DWORD PTR [ebp+ebx*8+0x51],ecx
  51f3d2:	outs   dx,DWORD PTR ds:[esi]
  51f3d3:	xor    eax,DWORD PTR [eax+eiz*2]
  51f3d6:	neg    esp
  51f3d8:	(bad)  
  51f3d9:	jecxz  0x51f403
  51f3db:	lds    esi,FWORD PTR [esi-0x2]
  51f3de:	adc    BYTE PTR [ebx+0x40],ah
  51f3e1:	jge    0x51f446
  51f3e3:	rcr    esp,1
  51f3e5:	frstor [esp+ebp*2-0x13]
  51f3e9:	mov    bh,0x3d
  51f3eb:	sub    al,0xfb
  51f3ed:	(bad)  
  51f3ee:	neg    BYTE PTR [ebx-0x64]
  51f3f1:	je     0x51f437
  51f3f3:	imul   esi,DWORD PTR [ebx],0x88bd0e50
  51f3f9:	inc    edx
  51f3fa:	mov    al,0x22
  51f3fc:	repnz and ah,ch
  51f3ff:	(bad)  
  51f400:	or     esi,DWORD PTR [ebx]
  51f402:	or     eax,0x7ba56a5b
  51f407:	sti    
  51f408:	push   cs
  51f409:	inc    ebp
  51f40a:	clts   
  51f40c:	out    0x94,al
  51f40e:	sub    ecx,DWORD PTR [ebp-0x5264e1b6]
  51f414:	pop    edi
  51f415:	pop    es
  51f416:	arpl   ax,dx
  51f418:	and    al,0xd1
  51f41a:	adc    al,0x31
  51f41c:	mov    dl,0xb6
  51f41e:	mov    eax,0xd679632a
  51f423:	fst    DWORD PTR cs:[edi]
  51f426:	jmp    0xe236:0xe991013e
  51f42d:	dec    ebx
  51f42e:	pop    esi
  51f42f:	cmp    al,0x2c
  51f431:	stos   DWORD PTR es:[edi],eax
  51f432:	jg     0x51f427
  51f434:	mov    ah,0xf7
  51f436:	jae    0x51f425
  51f438:	ret    
  51f439:	fiadd  DWORD PTR [ebx+0x46]
  51f43c:	jb     0x51f418
  51f43e:	inc    eax
  51f43f:	(bad)  
  51f440:	jmp    0xce1a2250
  51f445:	je     0x51f40a
  51f447:	and    al,0xf7
  51f449:	adc    ebx,edx
  51f44b:	or     esi,DWORD PTR [ebp-0x11]
  51f44e:	in     al,dx
  51f44f:	cld    
  51f450:	add    ebp,DWORD PTR [edx-0x2d]
  51f453:	and    DWORD PTR [esi+0x4eb0dddb],esi
  51f459:	test   al,0x82
  51f45b:	mov    eax,0x31312248
  51f460:	cmp    DWORD PTR [edi],ecx
  51f462:	cdq    
  51f463:	and    al,0xd6
  51f465:	jno    0x51f472
  51f467:	mov    ds,WORD PTR [esi]
  51f469:	mov    bh,0x53
  51f46b:	push   ebx
  51f46c:	sub    al,0x73
  51f46e:	fmulp  st(1),st
  51f470:	jl     0x51f4ac
  51f472:	inc    eax
  51f473:	and    ch,bl
  51f475:	stc    
  51f476:	mov    ebx,0x74f8cce7
  51f47b:	mov    ds,WORD PTR [ecx-0x4ba6cb5a]
  51f481:	xor    DWORD PTR [eax-0x29b16649],ebp
  51f487:	popa   
  51f488:	pop    ebx
  51f489:	xchg   BYTE PTR [ecx+0x4f],dh
  51f48c:	out    0x13,eax
  51f48e:	call   0x9b3e372b
  51f493:	mov    ah,0x61
  51f495:	sti    
  51f496:	int3   
  51f497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f498:	push   ds
  51f499:	jmp    0x51f435
  51f49b:	push   esi
  51f49c:	mov    es,WORD PTR [ebx]
  51f49e:	push   edi
  51f49f:	push   cs
  51f4a0:	(bad)  
  51f4a1:	adc    eax,0x8ca3dcd8
  51f4a6:	retf   
  51f4a7:	test   al,0x4c
  51f4a9:	push   esi
  51f4aa:	in     al,0x7e
  51f4ac:	jae    0x51f4dc
  51f4ae:	fldenv [ebp+0x2a]
  51f4b1:	out    0x50,al
  51f4b3:	(bad)  
  51f4b4:	dec    edi
  51f4b5:	inc    edx
  51f4b6:	pop    DWORD PTR [ebp+0x37e9fc9d]
  51f4bc:	test   BYTE PTR [ebp+0x73],0x28
  51f4c0:	push   ds
  51f4c1:	mov    ?,WORD PTR [ebp+0x1fae974f]
  51f4c7:	imul   edi,esp,0xffffff8c
  51f4ca:	les    eax,FWORD PTR [ebx+0x681c6a9c]
  51f4d0:	shl    ah,1
  51f4d2:	or     dh,BYTE PTR [esp+0x42f8e8a4]
  51f4d9:	aam    0x7d
  51f4db:	mov    ds:0x5242b9cb,eax
  51f4e0:	dec    ebx
  51f4e1:	xchg   ebp,eax
  51f4e2:	test   dl,dh
  51f4e4:	push   ds
  51f4e5:	into   
  51f4e6:	scas   al,BYTE PTR es:[edi]
  51f4e7:	inc    ebp
  51f4e8:	jno    0x51f48b
  51f4ea:	fisubr WORD PTR ds:0x5b5200b1
  51f4f0:	ins    DWORD PTR es:[edi],dx
  51f4f1:	rcl    ch,cl
  51f4f3:	dec    esi
  51f4f4:	lea    esp,[edi+ebx*8-0x50]
  51f4f8:	stc    
  51f4f9:	es add bl,dl
  51f4fc:	adc    BYTE PTR [edi-0x71],ah
  51f4ff:	xor    edx,DWORD PTR [edx+0x24]
  51f502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f503:	js     0x51f54c
  51f505:	or     BYTE PTR [edi-0x14],cl
  51f508:	mov    ebx,cs
  51f50a:	and    esi,DWORD PTR [ebp+0x3d]
  51f50d:	sbb    BYTE PTR [esi+0x34],dl
  51f510:	cdq    
  51f511:	pop    ebx
  51f512:	push   ss
  51f513:	cdq    
  51f514:	and    al,0xfa
  51f516:	add    dl,ah
  51f518:	dec    ebp
  51f519:	in     eax,dx
  51f51a:	mov    ds:0x7403b7f0,eax
  51f51f:	dec    eax
  51f520:	popf   
  51f521:	xchg   BYTE PTR [ebp-0x5a4a2859],dl
  51f527:	arpl   WORD PTR [ecx],sp
  51f529:	hlt    
  51f52a:	cwde   
  51f52b:	fiadd  WORD PTR [eax]
  51f52d:	mov    ebx,DWORD PTR [edx-0x43]
  51f530:	pop    esp
  51f531:	mov    dh,0x3
  51f533:	mov    ebx,0x922bd897
  51f538:	add    al,0x5f
  51f53a:	adc    cl,bl
  51f53c:	cwde   
  51f53d:	ffree  st(4)
  51f53f:	dec    ebx
  51f540:	mov    ?,WORD PTR [eax]
  51f542:	or     edi,DWORD PTR gs:0xaa33585d
  51f549:	pop    esi
  51f54a:	push   ecx
  51f54b:	repz imul ebp,DWORD PTR [edx],0xffffffb8
  51f54f:	loope  0x51f585
  51f551:	cwde   
  51f552:	ins    DWORD PTR es:[edi],dx
  51f553:	jno    0x51f5d2
  51f555:	inc    ecx
  51f556:	and    cl,bh
  51f558:	sub    edx,DWORD PTR [eax-0x6f3396c2]
  51f55e:	stos   BYTE PTR es:[edi],al
  51f55f:	into   
  51f560:	ds test eax,0xa542a006
  51f566:	sub    ecx,DWORD PTR [edi+0x6a16b43a]
  51f56c:	mov    dl,BYTE PTR [eax+0x6]
  51f56f:	cwde   
  51f570:	pop    ds
  51f571:	jnp    0x51f4f9
  51f573:	cmp    BYTE PTR [edx+0x3bbf14f],cl
  51f579:	xchg   ebp,eax
  51f57a:	dec    edi
  51f57b:	mov    esi,0xeef6bc22
  51f580:	into   
  51f581:	aam    0x46
  51f583:	jl     0x51f509
  51f585:	pop    ds
  51f586:	or     DWORD PTR [edx+0x13],0x71
  51f58a:	scas   eax,DWORD PTR es:[edi]
  51f58b:	jp     0x51f57c
  51f58d:	popf   
  51f58e:	fistp  QWORD PTR [ebx]
  51f590:	pop    ecx
  51f591:	lea    ecx,[eax+0x5b9d3414]
  51f597:	fstp   QWORD PTR [ecx+0xf]
  51f59a:	sbb    eax,0x67276c85
  51f59f:	dec    eax
  51f5a0:	add    ebp,DWORD PTR [ebx]
  51f5a2:	popa   
  51f5a3:	mov    ch,0xc7
  51f5a5:	xor    al,0xba
  51f5a7:	jbe    0x51f5c9
  51f5a9:	xor    al,0x53
  51f5ab:	test   BYTE PTR [esi+ecx*8+0x32],ah
  51f5af:	ins    BYTE PTR es:[edi],dx
  51f5b0:	enter  0xdfa,0xc1
  51f5b4:	push   esp
  51f5b5:	(bad)  
  51f5b6:	imul   DWORD PTR [ebx+eax*2]
  51f5b9:	gs inc edi
  51f5bb:	jge    0x51f5c3
  51f5bd:	popa   
  51f5be:	push   ebp
  51f5bf:	es xor DWORD PTR ss:[esi+0x6a],edi
  51f5c4:	and    BYTE PTR [ebp-0x39],dl
  51f5c7:	push   edi
  51f5c8:	das    
  51f5c9:	inc    ebp
  51f5ca:	inc    eax
  51f5cb:	fld    QWORD PTR [eax-0xbc1fd3]
  51f5d1:	cmp    BYTE PTR [ecx],ch
  51f5d3:	pop    ds
  51f5d4:	mov    esi,0x5edb4720
  51f5d9:	stc    
  51f5da:	xchg   esp,eax
  51f5db:	ss jmp 0x8530379d
  51f5e1:	shl    BYTE PTR [edx],0x76
  51f5e4:	xchg   ecx,eax
  51f5e5:	retf   
  51f5e6:	dec    edi
  51f5e7:	sub    al,0xae
  51f5e9:	sbb    bh,dl
  51f5eb:	mov    ecx,DWORD PTR [edi+0xd]
  51f5ee:	push   es
  51f5ef:	pop    esi
  51f5f0:	fst    st(2)
  51f5f2:	fistp  DWORD PTR [ebp+0x7e]
  51f5f5:	repz mov edi,ds
  51f5f8:	fist   DWORD PTR [edi+0x46]
  51f5fb:	lock adc eax,0xe4f3daed
  51f601:	neg    DWORD PTR [esi-0x1fbe9c62]
  51f607:	mov    dl,0x4e
  51f609:	cwde   
  51f60a:	or     DWORD PTR cs:[ebp-0x11],0xed6c1118
  51f612:	xlat   BYTE PTR ds:[ebx]
  51f613:	idiv   ch
  51f615:	imul   edx,DWORD PTR [ebx-0x3b722cf4],0x8fd36660
  51f61f:	mov    ds:0x92234b25,al
  51f624:	and    eax,DWORD PTR [ebx+0x3aef2ad9]
  51f62a:	adc    dh,ch
  51f62c:	add    eax,ecx
  51f62e:	mov    WORD PTR [ebx],?
  51f630:	jbe    0x51f638
  51f632:	lods   eax,DWORD PTR ds:[esi]
  51f633:	stc    
  51f634:	mov    eax,DWORD PTR [edi]
  51f636:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51f637:	addr16 es in eax,dx
  51f63a:	stos   BYTE PTR es:[edi],al
  51f63b:	mov    eax,0xd0ecc301
  51f640:	fld    TBYTE PTR [edi+0x10]
  51f643:	(bad)  
  51f644:	mov    eax,ds:0xd970184b
  51f649:	shl    BYTE PTR [esi-0x72557e47],0xe2
  51f650:	add    DWORD PTR [ebp+0x612aaa61],ecx
  51f656:	cmp    eax,0x70b7c0c0
  51f65b:	adc    ebp,DWORD PTR [edx]
  51f65d:	jnp    0x51f622
  51f65f:	inc    ebp
  51f660:	xor    cl,BYTE PTR [edi-0x4a4eb8e1]
  51f666:	int    0x5b
  51f668:	cmp    DWORD PTR [ebx+0x69b28989],edx
  51f66e:	sub    eax,0xa00e3b50
  51f673:	stc    
  51f674:	push   eax
  51f675:	add    al,0xf3
  51f677:	aam    0xfa
  51f679:	dec    DWORD PTR [edi+eax*8-0x5def149a]
  51f680:	cmp    ah,BYTE PTR [esi+eax*2-0x1c9e4d97]
  51f687:	xchg   ebx,eax
  51f688:	jae    0x51f66e
  51f68a:	jmp    0x22c8:0x42dc364b
  51f691:	les    eax,FWORD PTR [ebp+0x1f]
  51f694:	into   
  51f695:	xor    DWORD PTR [edi],eax
  51f697:	xchg   ebp,eax
  51f698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f699:	pop    ecx
  51f69a:	cmc    
  51f69b:	cld    
  51f69c:	sub    DWORD PTR [ebp+0x18],eax
  51f69f:	repnz out dx,al
  51f6a1:	cmp    DWORD PTR [ebx+0x40],edi
  51f6a4:	push   es
  51f6a5:	and    ebx,DWORD PTR [edx+ebp*4]
  51f6a8:	inc    edx
  51f6a9:	les    esi,FWORD PTR ds:0xa0666395
  51f6af:	sub    eax,0x7a52a4f6
  51f6b4:	sub    dh,BYTE PTR ds:0x2756a8f6
  51f6ba:	stos   BYTE PTR es:[edi],al
  51f6bb:	lods   al,BYTE PTR ds:[esi]
  51f6bc:	xor    dh,BYTE PTR [esi]
  51f6be:	dec    ebp
  51f6bf:	and    dh,bh
  51f6c1:	dec    ebx
  51f6c2:	iret   
  51f6c3:	lods   eax,DWORD PTR ds:[esi]
  51f6c4:	xchg   ebp,eax
  51f6c5:	inc    ebp
  51f6c6:	in     eax,0x4f
  51f6c8:	adc    ah,BYTE PTR [ebx+edi*4-0x4ab30249]
  51f6cf:	mov    ds:0x3bc0e4eb,al
  51f6d4:	fwait
  51f6d5:	popf   
  51f6d6:	xchg   dh,cl
  51f6d8:	imul   ecx,DWORD PTR [ebx+edx*1-0x5f431d82],0x20
  51f6e0:	mov    ebp,0xd3cf7be4
  51f6e5:	addr16 xchg ebx,edi
  51f6e8:	jg     0x51f6df
  51f6ea:	cmc    
  51f6eb:	jp     0x51f74f
  51f6ed:	xchg   DWORD PTR [ebp+0x2a358f76],esi
  51f6f3:	cld    
  51f6f4:	push   esp
  51f6f5:	fst    QWORD PTR [ebp+esi*2-0x32]
  51f6f9:	sar    DWORD PTR [ebx+0x13b0a854],cl
  51f6ff:	loop   0x51f735
  51f701:	ss jmp 0xdd10a439
  51f707:	mov    al,0x4a
  51f709:	mov    ah,0xba
  51f70b:	stc    
  51f70c:	mov    ebx,0x73fd53f0
  51f711:	pop    esi
  51f712:	dec    edi
  51f713:	(bad)  [edi-0x43]
  51f716:	ins    BYTE PTR es:[edi],dx
  51f717:	(bad)  
  51f718:	scas   eax,DWORD PTR es:[edi]
  51f719:	cwde   
  51f71a:	mov    bh,BYTE PTR [ecx]
  51f71c:	push   ebx
  51f71d:	adc    eax,DWORD PTR [eax]
  51f71f:	js     0x51f6cd
  51f721:	jecxz  0x51f6d6
  51f723:	popa   
  51f724:	sbb    eax,0xf3fd4ebe
  51f729:	aad    0xca
  51f72b:	leave  
  51f72c:	in     eax,dx
  51f72d:	mov    eax,ds:0xdd3b7184
  51f732:	shr    DWORD PTR [ebx+ebx*8+0x562c8b49],0x51
  51f73a:	(bad)  
  51f73c:	push   esp
  51f73d:	fistp  WORD PTR [eax+0x25]
  51f740:	adc    dl,bl
  51f742:	jne    0x51f7a5
  51f744:	aad    0x7b
  51f746:	popf   
  51f747:	jae    0x51f72c
  51f749:	and    al,0xd1
  51f74b:	and    ecx,DWORD PTR [eax]
  51f74d:	inc    esp
  51f74e:	inc    eax
  51f74f:	and    DWORD PTR [edx-0x561b7792],0xffffff88
  51f756:	mov    esp,0x320dd7fc
  51f75b:	jl     0x51f791
  51f75d:	add    DWORD PTR [esi+edi*4-0x669aa2d9],esp
  51f764:	inc    esp
  51f765:	scas   al,BYTE PTR es:[edi]
  51f766:	mov    bl,0x8a
  51f768:	mov    edx,ebx
  51f76a:	je     0x51f767
  51f76c:	inc    esp
  51f76d:	mov    edx,DWORD PTR [ebp-0x66a3f95a]
  51f773:	rcr    BYTE PTR [esi-0x3a],cl
  51f776:	pushf  
  51f777:	loope  0x51f79a
  51f779:	mov    ds:0x474b1e5b,al
  51f77e:	push   eax
  51f77f:	add    DWORD PTR [ecx-0x689d98ec],0x7f
  51f786:	repz xchg ebp,eax
  51f788:	dec    ebp
  51f789:	cmp    al,0x43
  51f78b:	mov    ebx,0x52e3a9af
  51f790:	shl    DWORD PTR [edx-0xdcee5d0],1
  51f796:	xlat   BYTE PTR ds:[ebx]
  51f797:	and    DWORD PTR ss:[ecx],esp
  51f79a:	cmp    dh,BYTE PTR [ebx+esi*8-0x5fb9951b]
  51f7a1:	inc    ecx
  51f7a2:	lea    ebp,[edi]
  51f7a4:	(bad)  
  51f7a5:	push   ebx
  51f7a6:	call   0xd89a:0x168b3885
  51f7ad:	cld    
  51f7ae:	or     DWORD PTR [edx+eax*2+0x78],ecx
  51f7b2:	fwait
  51f7b3:	push   ecx
  51f7b4:	fs push 0xffffff87
  51f7b7:	out    dx,al
  51f7b8:	push   0xc262d8fd
  51f7bd:	sub    BYTE PTR [edx+0x265e8bba],ch
  51f7c3:	hlt    
  51f7c4:	mov    dl,BYTE PTR [edi]
  51f7c6:	shr    DWORD PTR [esp+ebx*2+0x19b73192],0xff
  51f7ce:	in     eax,0xcc
  51f7d0:	scas   al,BYTE PTR es:[edi]
  51f7d1:	cmovno ebp,DWORD PTR [ebp+0x7a]
  51f7d5:	rcl    BYTE PTR [eax+0xa],0x8f
  51f7d9:	xor    al,0x99
  51f7db:	cmp    bl,ah
  51f7dd:	ja     0x51f84b
  51f7df:	jo     0x51f809
  51f7e1:	mov    dl,0x1d
  51f7e3:	mov    al,ds:0xd6a04811
  51f7e8:	lock scas al,BYTE PTR es:[edi]
  51f7ea:	(bad)  
  51f7ec:	push   edx
  51f7ed:	add    cl,cl
  51f7ef:	pop    es
  51f7f0:	jmp    0xee65:0x8f2a6330
  51f7f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51f7f8:	fsubr  DWORD PTR [ebp-0x43d925ad]
  51f7fe:	or     DWORD PTR [esi+0x7c78e1c5],esi
  51f804:	pop    ds
  51f805:	out    0xc1,eax
  51f807:	stos   DWORD PTR es:[edi],eax
  51f808:	out    0x5f,eax
  51f80a:	dec    esp
  51f80b:	or     dh,bh
  51f80d:	ins    BYTE PTR es:[edi],dx
  51f80e:	sub    DWORD PTR [eax+0x63],ebx
  51f811:	rol    ch,cl
  51f813:	cwde   
  51f814:	xchg   edx,eax
  51f815:	jae    0x51f79d
  51f817:	push   edi
  51f818:	jg     0x51f7ba
  51f81a:	sbb    al,0x84
  51f81c:	dec    edi
  51f81d:	loop   0x51f86d
  51f81f:	sub    BYTE PTR [edx+0x674a275],0x72
  51f826:	xchg   esp,eax
  51f827:	or     al,0xeb
  51f829:	mov    ah,0x22
  51f82b:	push   edi
  51f82c:	xor    al,cl
  51f82e:	enter  0x218a,0x2c
  51f832:	pushf  
  51f833:	mov    al,ds:0x9691c7c3
  51f838:	pop    eax
  51f839:	icebp  
  51f83a:	mov    ebp,0xbd66d7a5
  51f83f:	jne    0x51f89a
  51f841:	xor    DWORD PTR [esi],esp
  51f843:	mov    al,0x82
  51f845:	stc    
  51f846:	neg    DWORD PTR [edx+0x7b782583]
  51f84c:	or     eax,DWORD PTR [ebx+0x6c]
  51f84f:	dec    ecx
  51f850:	xchg   BYTE PTR [edi],dh
  51f852:	and    DWORD PTR [ebx],eax
  51f854:	inc    ebp
  51f855:	adc    DWORD PTR [ecx+0x1a],ebx
  51f858:	sub    al,0xf5
  51f85a:	jmp    0xaf89:0x6bf5b00a
  51f861:	aam    0xc4
  51f863:	mov    edi,0x8b1796b9
  51f868:	or     al,0xf8
  51f86a:	add    bl,BYTE PTR [edx]
  51f86c:	adc    cl,0x81
  51f86f:	fidivr WORD PTR [edx+0x5f63f3b3]
  51f875:	repz mov edi,0x3521cf92
  51f87b:	inc    esp
  51f87c:	add    bl,ch
  51f87e:	ss cwde 
  51f880:	(bad)  
  51f881:	leave  
  51f882:	xor    DWORD PTR [ecx-0x6f7a3955],esp
  51f888:	sbb    ch,BYTE PTR [edi-0x2bf9d8a7]
  51f88e:	(bad)  [esi+0x18]
  51f891:	aaa    
  51f892:	add    ebx,ebx
  51f894:	push   ds
  51f895:	pop    ds
  51f896:	adc    edi,edx
  51f898:	push   es
  51f899:	stos   BYTE PTR es:[edi],al
  51f89a:	(bad)  
  51f89c:	or     eax,eax
  51f89e:	sub    dh,dh
  51f8a0:	mov    bl,0xd0
  51f8a2:	iret   
  51f8a3:	inc    edx
  51f8a4:	mov    bl,0xc5
  51f8a6:	jo     0x51f899
  51f8a8:	inc    ecx
  51f8a9:	out    dx,al
  51f8aa:	iret   
  51f8ab:	adc    al,0xf5
  51f8ad:	xchg   edi,eax
  51f8ae:	cdq    
  51f8af:	pop    ebx
  51f8b0:	xchg   ebx,eax
  51f8b1:	cmp    al,0x73
  51f8b3:	ror    esi,cl
  51f8b5:	test   eax,0xb47cf69
  51f8ba:	xchg   edx,eax
  51f8bb:	fisttp QWORD PTR [esp+eax*1-0x73ceb1f7]
  51f8c2:	not    dh
  51f8c4:	sbb    DWORD PTR [ebx+0x19],esi
  51f8c7:	ds stos DWORD PTR es:[edi],eax
  51f8c9:	clc    
  51f8ca:	push   ds
  51f8cb:	dec    edx
  51f8cc:	je     0x51f8de
  51f8ce:	fs aaa 
  51f8d0:	pop    ebp
  51f8d1:	out    dx,al
  51f8d2:	lahf   
  51f8d3:	xchg   ecx,eax
  51f8d4:	ss jle 0x51f94a
  51f8d7:	mov    eax,0xff8d8aeb
  51f8dc:	and    DWORD PTR [eax-0x2a],0x84b6a768
  51f8e3:	jmp    0x3569df56
  51f8e8:	push   esi
  51f8e9:	loopne 0x51f91f
  51f8eb:	(bad)  
  51f8ec:	jae    0x51f8f0
  51f8ee:	pop    es
  51f8ef:	or     dl,cl
  51f8f1:	mov    ds:0xd8d0d8ad,eax
  51f8f6:	or     eax,0x41f25048
  51f8fb:	ror    dl,0x97
  51f8fe:	cmp    DWORD PTR [ecx+0x550112f6],eax
  51f904:	icebp  
  51f905:	paddusb mm4,QWORD PTR ds:0xd44f50fd
  51f90c:	out    dx,eax
  51f90d:	xchg   esi,eax
  51f90e:	mov    dh,0xf4
  51f910:	xor    al,dl
  51f912:	mov    eax,DWORD PTR [eax+0x1f39667d]
  51f918:	test   eax,0x1d2c98b4
  51f91d:	jns    0x51f986
  51f91f:	cdq    
  51f920:	call   0xbd6adbe3
  51f925:	sub    eax,0x484c732e
  51f92a:	jns    0x51f978
  51f92c:	fisubr WORD PTR [ebx]
  51f92e:	xor    dl,BYTE PTR [eax-0x80]
  51f931:	test   al,0xc
  51f933:	dec    ebp
  51f934:	jecxz  0x51f900
  51f936:	or     edx,DWORD PTR [edx+eiz*4]
  51f939:	das    
  51f93a:	sbb    al,0xc8
  51f93c:	pop    esi
  51f93d:	jns    0x51f99d
  51f93f:	dec    edi
  51f940:	adc    DWORD PTR [esi-0x93a0931],ecx
  51f946:	jne    0x51f96d
  51f948:	or     dh,ch
  51f94a:	mul    BYTE PTR [ecx+0x128de0b3]
  51f950:	add    esi,DWORD PTR [ebp+ebx*2-0x5add1e76]
  51f957:	loope  0x51f910
  51f959:	mov    ds:0xd6ba31d4,al
  51f95e:	jno    0x51f989
  51f960:	outs   dx,BYTE PTR ds:[esi]
  51f961:	jmp    DWORD PTR [edi]
  51f963:	jl     0x51f921
  51f965:	dec    edi
  51f966:	pop    ds
  51f967:	popa   
  51f968:	call   FWORD PTR [ecx+0x43]
  51f96b:	cmp    BYTE PTR [eax-0x459b7748],bh
  51f971:	pop    es
  51f972:	fistp  DWORD PTR [edx-0x459cd62]
  51f978:	lds    esi,FWORD PTR [esi-0x466448b6]
  51f97e:	cld    
  51f97f:	pop    ebx
  51f980:	jl     0x51f903
  51f982:	jne    0x51f9f0
  51f984:	retf   
  51f985:	mov    eax,cs
  51f987:	push   cs
  51f988:	lods   eax,DWORD PTR ds:[esi]
  51f989:	test   DWORD PTR [esi+0x511b8b1f],esp
  51f98f:	xor    ebx,DWORD PTR [esi+0x31261999]
  51f995:	icebp  
  51f996:	(bad)  [esi-0x30]
  51f999:	scas   eax,DWORD PTR es:[edi]
  51f99a:	iret   
  51f99b:	xor    DWORD PTR [edi+0x75],ebx
  51f99e:	outs   dx,DWORD PTR ds:[esi]
  51f99f:	cmc    
  51f9a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51f9a1:	leave  
  51f9a2:	inc    edi
  51f9a3:	arpl   WORD PTR [esi],bp
  51f9a5:	jae    0x51f9ab
  51f9a7:	push   ebp
  51f9a8:	repz mov edx,0xc7ae0052
  51f9ae:	fcmovu st,st(4)
  51f9b0:	pop    ecx
  51f9b1:	add    esp,DWORD PTR [edi-0x70]
  51f9b4:	mov    DWORD PTR [ebx-0x2b],esi
  51f9b7:	xchg   ebp,eax
  51f9b8:	pop    ecx
  51f9b9:	retf   0x7703
  51f9bc:	sbb    al,0xb9
  51f9be:	jecxz  0x51f98d
  51f9c0:	(bad)  
  51f9c1:	dec    ecx
  51f9c2:	iret   
  51f9c3:	imul   ebp,DWORD PTR [edi],0xffffff93
  51f9c6:	lds    eax,FWORD PTR [ebp+0x6e53721]
  51f9cc:	adc    eax,0xdeb6262e
  51f9d1:	call   0x890afc0a
  51f9d6:	inc    ecx
  51f9d7:	dec    edx
  51f9d8:	push   edx
  51f9d9:	fs dec esp
  51f9db:	(bad)  
  51f9dc:	push   esi
  51f9dd:	ret    0x2781
  51f9e0:	imul   ebx,ecx,0x7120dcea
  51f9e6:	pop    cx
  51f9e8:	dec    edi
  51f9e9:	pushf  
  51f9ea:	repnz xchg edi,eax
  51f9ec:	stos   DWORD PTR es:[edi],eax
  51f9ed:	aam    0x4d
  51f9ef:	push   eax
  51f9f0:	mov    eax,0xe5bdf587
  51f9f5:	mov    WORD PTR [esi-0x51dcfb39],fs
  51f9fb:	mov    eax,0xb190d67e
  51fa00:	int    0x9
  51fa02:	out    dx,eax
  51fa03:	mov    edx,0x8ceb2591
  51fa08:	mov    BYTE PTR [ebx+0x53c1cfe3],0x8f
  51fa0f:	mov    ah,0x9
  51fa11:	sub    DWORD PTR [edx],eax
  51fa13:	cli    
  51fa14:	out    0x9b,eax
  51fa16:	or     al,0xcd
  51fa18:	(bad)
  51fa1b:	add    BYTE PTR [edi+edx*4-0xc],cl
  51fa1f:	fwait
  51fa20:	ret    
  51fa21:	or     dh,BYTE PTR [esi+0x17206689]
  51fa27:	pushf  
  51fa28:	jge    0x51f9f1
  51fa2a:	(bad)  
  51fa2b:	or     DWORD PTR [ecx+0x21],edi
  51fa2e:	add    ch,bh
  51fa30:	dec    eax
  51fa31:	push   esi
  51fa32:	and    DWORD PTR [ecx-0x6e0121c4],0x7830813d
  51fa3c:	dec    ebx
  51fa3d:	out    0x27,al
  51fa3f:	mov    esp,0xb95ac805
  51fa44:	stos   DWORD PTR es:[edi],eax
  51fa45:	scas   al,BYTE PTR es:[edi]
  51fa46:	mov    dh,0x9b
  51fa48:	lock jecxz 0x51fa9b
  51fa4b:	push   ecx
  51fa4c:	repz cmp esi,edi
  51fa4f:	call   DWORD PTR [ecx+0x74]
  51fa52:	dec    ecx
  51fa53:	call   0x5323:0xed1af359
  51fa5a:	aaa    
  51fa5b:	jns    0x51fa16
  51fa5d:	adc    bh,BYTE PTR [esp+ebx*8-0x34c5ae1d]
  51fa64:	lock xor DWORD PTR [eax+0x50af251e],edx
  51fa6b:	sub    esi,DWORD PTR [edi+0x34]
  51fa6e:	(bad)
  51fa73:	mov    edi,0x52950f91
  51fa78:	imul   ebx,DWORD PTR [edi+0x2f],0x44
  51fa7c:	and    al,0xe
  51fa7e:	sub    eax,0x6222004f
  51fa83:	shr    BYTE PTR [esi],0xdf
  51fa86:	push   ebp
  51fa87:	cmp    al,0x5a
  51fa89:	jae    0x51fae8
  51fa8b:	popa   
  51fa8c:	mov    ecx,0xa0e964a9
  51fa91:	sub    eax,DWORD PTR [esi+0x28]
  51fa94:	leave  
  51fa95:	sbb    dl,bl
  51fa97:	push   esi
  51fa98:	test   bh,ch
  51fa9a:	jo     0x51fa8b
  51fa9c:	outs   dx,BYTE PTR ds:[esi]
  51fa9d:	jnp    0x51faca
  51fa9f:	push   edi
  51faa0:	mov    ebp,ss
  51faa2:	fnstenv [esi]
  51faa4:	and    ecx,DWORD PTR [edx+0x7e]
  51faa7:	inc    esi
  51faa8:	(bad)  
  51faa9:	aad    0x74
  51faab:	in     eax,0x12
  51faad:	mov    bh,0xb
  51faaf:	xchg   ebx,eax
  51fab0:	imul   ebp,edx,0xffffffb1
  51fab3:	sub    DWORD PTR [ecx],ebx
  51fab5:	das    
  51fab6:	mov    ch,0xd5
  51fab8:	arpl   ax,bp
  51faba:	push   ebp
  51fabb:	xchg   esp,eax
  51fabc:	mov    dl,0x45
  51fabe:	sbb    al,0x36
  51fac0:	bound  ecx,QWORD PTR [edx]
  51fac2:	sbb    edi,edi
  51fac4:	jo     0x51fada
  51fac6:	lds    eax,FWORD PTR [edx]
  51fac8:	popf   
  51fac9:	bound  ecx,QWORD PTR [edx]
  51facb:	xchg   ebp,eax
  51facc:	mov    WORD PTR [ecx+0x70bef505],fs
  51fad2:	test   al,0x49
  51fad4:	xchg   DWORD PTR ds:0xf7dbe614,ebx
  51fada:	clc    
  51fadb:	gs jo  0x51fabe
  51fade:	pop    es
  51fadf:	ins    DWORD PTR es:[edi],dx
  51fae0:	sub    ecx,ebp
  51fae2:	in     al,dx
  51fae3:	pop    ecx
  51fae4:	outs   dx,DWORD PTR ds:[esi]
  51fae5:	xlat   BYTE PTR ds:[ebx]
  51fae6:	fdivp  st(1),st
  51fae8:	jl     0x51fb68
  51faea:	outs   dx,DWORD PTR ds:[esi]
  51faeb:	sub    DWORD PTR [ecx-0x22585181],0xb9c26e16
  51faf5:	mov    eax,0x4e1d104
  51fafa:	push   ss
  51fafb:	add    BYTE PTR [eax],0xba
  51fafe:	idiv   ebx
  51fb00:	or     bh,BYTE PTR [esi+0x6c227a03]
  51fb06:	icebp  
  51fb07:	pop    ss
  51fb08:	cmp    edx,ebx
  51fb0a:	inc    ebx
  51fb0b:	(bad)  
  51fb0c:	test   BYTE PTR [esi+0x68],dh
  51fb0f:	and    esi,DWORD PTR [eax]
  51fb11:	cmp    BYTE PTR ds:0xcc632d75,dl
  51fb17:	and    dl,bl
  51fb19:	mov    ds:0x311d3098,eax
  51fb1e:	and    eax,0xcf6be939
  51fb23:	retf   
  51fb24:	push   es
  51fb25:	xor    DWORD PTR [ebx-0x7a691f6f],esp
  51fb2b:	push   edi
  51fb2c:	sub    eax,0xcb3f824d
  51fb31:	push   edx
  51fb32:	mov    al,0x45
  51fb34:	in     eax,0x1b
  51fb36:	jle    0x51fada
  51fb38:	push   ebp
  51fb39:	cwde   
  51fb3a:	inc    esp
  51fb3b:	xchg   edi,eax
  51fb3c:	or     edi,DWORD PTR [ecx-0xd]
  51fb3f:	int3   
  51fb40:	mov    ch,BYTE PTR [ebp-0x24]
  51fb43:	push   0xffffffa4
  51fb45:	xor    dl,BYTE PTR [edx+0x2872308]
  51fb4b:	es (bad) 
  51fb4d:	adc    eax,0xdc311b10
  51fb52:	push   eax
  51fb53:	push   0xd6fe4032
  51fb58:	in     al,dx
  51fb59:	mov    dh,BYTE PTR [eax+eax*2-0xf85dbbb]
  51fb60:	fidivr DWORD PTR [eax+0x4e]
  51fb63:	cdq    
  51fb64:	(bad)  
  51fb65:	jle    0x51fb2f
  51fb67:	dec    eax
  51fb68:	(bad)  
  51fb69:	pop    esi
  51fb6a:	gs push ds
  51fb6c:	cmp    BYTE PTR [edx+0x6c],al
  51fb6f:	or     al,0xea
  51fb71:	inc    ecx
  51fb72:	repz imul edi,DWORD PTR [ebx],0xb108e84
  51fb79:	push   0x6e8d5867
  51fb7e:	ins    BYTE PTR es:[edi],dx
  51fb7f:	out    0xca,al
  51fb81:	jo     0x51fbd2
  51fb83:	mov    al,0xc0
  51fb85:	dec    esp
  51fb86:	data16 mov dh,BYTE PTR [edx]
  51fb89:	outs   dx,BYTE PTR ds:[esi]
  51fb8a:	adc    dh,BYTE PTR [edi]
  51fb8c:	in     al,dx
  51fb8d:	or     cl,cl
  51fb8f:	inc    edi
  51fb90:	pop    esi
  51fb91:	fld    TBYTE PTR [esi+0x6c274cd9]
  51fb97:	and    ecx,DWORD PTR [eax]
  51fb99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51fb9a:	sub    eax,0x6ec0370c
  51fb9f:	mov    ebx,0xd5e25566
  51fba4:	(bad)  
  51fba5:	repz sbb BYTE PTR [edi-0x4926d64c],ch
  51fbac:	cdq    
  51fbad:	rcr    DWORD PTR [ebp-0x4a6d4c53],cl
  51fbb3:	push   esp
  51fbb4:	pop    ebx
  51fbb5:	ror    esi,1
  51fbb7:	arpl   WORD PTR [ebp-0x1fe4af8b],dx
  51fbbd:	mov    ah,ch
  51fbbf:	out    dx,al
  51fbc0:	or     DWORD PTR [ecx-0x1e],esp
  51fbc3:	mov    ebp,DWORD PTR [ebx]
  51fbc5:	cmp    DWORD PTR [ecx+ebx*2+0x2b],esi
  51fbc9:	test   al,0x2a
  51fbcb:	dec    ebx
  51fbcc:	inc    esp
  51fbcd:	sub    eax,0x91a3ca99
  51fbd2:	push   ds
  51fbd3:	cwde   
  51fbd4:	stc    
  51fbd5:	fistp  QWORD PTR [eax+0x2b]
  51fbd8:	mov    cl,0x4b
  51fbda:	data16 cmp al,0x92
  51fbdd:	pop    es
  51fbde:	je     0x51fc53
  51fbe0:	loopne 0x51fc34
  51fbe2:	mov    esi,0x1735d40e
  51fbe7:	jp     0x51fbea
  51fbe9:	sub    bh,BYTE PTR ds:0xf63124
  51fbef:	ret    
  51fbf0:	enter  0x43a9,0x9f
  51fbf4:	repz xchg edx,eax
  51fbf6:	out    0x44,al
  51fbf8:	xor    al,0x36
  51fbfa:	mov    ds:0x85cbb364,eax
  51fbff:	jmp    0x63aad0e9
  51fc04:	neg    edi
  51fc06:	cmp    eax,0xab4c3b9b
  51fc0b:	aaa    
  51fc0c:	jae    0x51fbfa
  51fc0e:	xor    al,0xf9
  51fc10:	lods   al,BYTE PTR ds:[esi]
  51fc11:	sahf   
  51fc12:	fiadd  DWORD PTR [ebp+0xe]
  51fc15:	mov    ch,0x7a
  51fc17:	dec    ecx
  51fc18:	mov    dh,0x30
  51fc1a:	call   0xe307:0xde93a310
  51fc21:	sti    
  51fc22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51fc23:	sub    BYTE PTR [ecx+0x10b3860d],0xb2
  51fc2a:	jg     0x51fc2a
  51fc2c:	xchg   BYTE PTR [esi],cl
  51fc2e:	nop
  51fc2f:	shl    BYTE PTR [ecx-0x32],cl
  51fc32:	hlt    
  51fc33:	dec    ebx
  51fc34:	and    bl,BYTE PTR [ebp+eiz*8+0x2ed09968]
  51fc3b:	jp     0x51fbc6
  51fc3d:	es inc esi
  51fc3f:	sub    ecx,DWORD PTR [esp+edx*2]
  51fc42:	scas   eax,DWORD PTR es:[edi]
  51fc43:	add    bh,ah
  51fc45:	call   0x88f2f3b4
  51fc4a:	out    dx,eax
  51fc4b:	inc    ebx
  51fc4c:	xor    al,0x6f
  51fc4f:	dec    ebx
  51fc50:	mov    eax,ds:0x2678a8e9
  51fc55:	icebp  
  51fc56:	xchg   BYTE PTR [ebp-0x3691a868],ch
  51fc5c:	pushf  
  51fc5d:	loop   0x51fc1b
  51fc5f:	pop    edi
  51fc60:	mov    ds:0xa8be9492,al
  51fc65:	loop   0x51fc9b
  51fc67:	mov    al,0x3f
  51fc69:	cli    
  51fc6a:	jl     0x51fc20
  51fc6c:	out    dx,eax
  51fc6d:	xlat   BYTE PTR ds:[ebx]
  51fc6e:	inc    esi
  51fc6f:	jb     0x51fcc2
  51fc71:	xchg   ebx,eax
  51fc72:	repnz dec edi
  51fc74:	mov    esp,gs
  51fc76:	cs stc 
  51fc78:	mov    bh,0xbe
  51fc7a:	(bad)  
  51fc7b:	retf   0xc06f
  51fc7e:	dec    ecx
  51fc7f:	jge    0x51fcc9
  51fc81:	aas    
  51fc82:	je     0x51fce0
  51fc84:	cli    
  51fc85:	xor    esi,eax
  51fc87:	es or  al,0x98
  51fc8a:	(bad)  
  51fc8b:	std    
  51fc8c:	xor    edi,edx
  51fc8e:	ja     0x51fc55
  51fc90:	sar    BYTE PTR [eax+0x246ea48c],0x54
  51fc97:	xor    BYTE PTR [edi-0x461c7b3e],cl
  51fc9d:	inc    ecx
  51fc9e:	push   es
  51fc9f:	in     eax,dx
  51fca0:	(bad)  
  51fca1:	ret    0x2ab5
  51fca4:	les    edi,FWORD PTR [esi]
  51fca6:	call   0xeb32:0x536bb708
  51fcad:	nop
  51fcae:	adc    al,0x1f
  51fcb0:	xchg   ecx,eax
  51fcb1:	pop    esp
  51fcb2:	(bad)  
  51fcb3:	jge    0x51fc64
  51fcb5:	in     al,0x2c
  51fcb7:	or     eax,0x69962463
  51fcbc:	jecxz  0x51fca1
  51fcbe:	mov    cl,0xbe
  51fcc0:	in     al,0xf6
  51fcc2:	and    DWORD PTR [ebp+0x64b5bc1],ebp
  51fcc8:	clc    
  51fcc9:	or     esp,DWORD PTR [ecx+ebp*1-0x579cd6c6]
  51fcd0:	(bad)  
  51fcd1:	int3   
  51fcd2:	xchg   ebx,eax
  51fcd3:	loopne 0x51fd36
  51fcd5:	(bad)  
  51fcd6:	cmp    DWORD PTR [edi],esp
  51fcd8:	into   
  51fcd9:	sub    cl,bh
  51fcdb:	cmc    
  51fcdc:	push   ds
  51fcdd:	lds    edx,FWORD PTR [ecx]
  51fcdf:	rcl    DWORD PTR [esi-0x70],1
  51fce2:	or     al,0x52
  51fce4:	pop    ss
  51fce5:	sub    dh,BYTE PTR ds:0xa7b7e292
  51fceb:	mov    ah,0xa2
  51fced:	mov    ecx,0x1e69a7ff
  51fcf2:	mov    al,ds:0xe6a388ad
  51fcf7:	add    DWORD PTR [ecx],0x49cf6e0d
  51fcfd:	and    BYTE PTR [ecx],dh
  51fcff:	(bad)  
  51fd00:	cmp    BYTE PTR [edi+0x22],dh
  51fd03:	aad    0xfe
  51fd05:	ja     0x51fd1c
  51fd07:	loope  0x51fd7a
  51fd09:	lock mov esp,0x74c7c962
  51fd0f:	and    edi,edi
  51fd11:	inc    ebp
  51fd12:	ins    DWORD PTR es:[edi],dx
  51fd13:	jns    0x51fce0
  51fd15:	imul   al
  51fd17:	icebp  
  51fd18:	jmp    0x6ca373c3
  51fd1d:	into   
  51fd1e:	xor    al,0x1b
  51fd20:	test   eax,0xb7010c9a
  51fd25:	icebp  
  51fd26:	xchg   esp,eax
  51fd27:	jnp    0x51fd5e
  51fd29:	dec    eax
  51fd2a:	dec    esi
  51fd2b:	shr    DWORD PTR [esi+0x348ca8b],cl
  51fd31:	mov    bl,0xa0
  51fd33:	push   esi
  51fd34:	mov    edi,0xce49d15f
  51fd39:	retf   0xab42
  51fd3c:	xchg   dl,dh
  51fd3e:	xchg   BYTE PTR [edx],bl
  51fd40:	lahf   
  51fd41:	arpl   dx,si
  51fd43:	and    eax,0x90e4c837
  51fd48:	js     0x51fd4b
  51fd4a:	and    eax,0xb3208a3d
  51fd4f:	dec    ecx
  51fd50:	enter  0x150b,0x2f
  51fd54:	pop    ecx
  51fd55:	das    
  51fd56:	stos   BYTE PTR es:[edi],al
  51fd57:	mov    eax,0x4d5b5f8e
  51fd5c:	adc    DWORD PTR fs:[ebx+esi*8],esi
  51fd60:	test   DWORD PTR [eax-0x1d8bfe33],esp
  51fd66:	jae    0x51fd45
  51fd68:	mov    dl,0x77
  51fd6a:	fsub   DWORD PTR [ebx+0x11654365]
  51fd70:	mov    esi,0xd28cac48
  51fd75:	loope  0x51fd69
  51fd77:	push   esi
  51fd78:	pop    edx
  51fd79:	sub    BYTE PTR [esi+0x2fe52a86],bl
  51fd7f:	pop    es
  51fd80:	pop    es
  51fd81:	aam    0x41
  51fd83:	adc    BYTE PTR [eax],dl
  51fd85:	mov    ah,0x3c
  51fd87:	inc    ebp
  51fd88:	call   0xca2e:0x5fb6f335
  51fd8f:	arpl   cx,cx
  51fd91:	sub    DWORD PTR [ebp+ebp*8-0x79],ebp
  51fd95:	inc    edi
  51fd96:	in     eax,dx
  51fd97:	fld    TBYTE PTR [eax-0x25]
  51fd9a:	add    al,0x6e
  51fd9c:	pop    ds
  51fd9d:	jmp    0x94ef:0xfa14dbd
  51fda4:	jge    0x51fd8b
  51fda6:	ss jae 0x51fe13
  51fda9:	sbb    edi,ebp
  51fdab:	push   edi
  51fdac:	sub    BYTE PTR [ebx-0x13],ah
  51fdaf:	sbb    DWORD PTR [ebp-0x3],0x69
  51fdb3:	lock inc esp
  51fdb5:	pop    ds
  51fdb6:	jg     0x51fe21
  51fdb8:	xchg   BYTE PTR [ebx],cl
  51fdba:	sbb    ecx,edi
  51fdbc:	pop    es
  51fdbd:	test   BYTE PTR [eax],ch
  51fdbf:	stc    
  51fdc0:	dec    ebp
  51fdc1:	popa   
  51fdc2:	bound  esp,QWORD PTR [ecx+0x6538b673]
  51fdc8:	(bad)  
  51fdc9:	push   ecx
  51fdca:	je     0x51fd52
  51fdcc:	jae    0x51fe1c
  51fdce:	mov    edx,0x623330c2
  51fdd3:	xlat   BYTE PTR ds:[ebx]
  51fdd4:	shl    ebp,1
  51fdd6:	or     dh,BYTE PTR [esi+0x58879334]
  51fddc:	mov    eax,0xeec628b1
  51fde1:	mov    ebx,0x6024f0a2
  51fde6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  51fde7:	xchg   esi,eax
  51fde8:	push   edx
  51fde9:	sbb    BYTE PTR [esi+0x38],bl
  51fdec:	mov    dl,bl
  51fdee:	jmp    0xe6f9:0x4ad8527a
  51fdf5:	xor    DWORD PTR [esi],0x7
  51fdf8:	xor    BYTE PTR [edi-0x1],cl
  51fdfb:	pop    esp
  51fdfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51fdfd:	jmp    0x6c99e469
  51fe02:	lock out dx,al
  51fe04:	push   es
  51fe05:	cmp    eax,0x11444ca0
  51fe0a:	out    dx,eax
  51fe0b:	jge    0x51fe5e
  51fe0d:	push   esp
  51fe0e:	jp     0x51fd9e
  51fe10:	fsub   QWORD PTR ds:0x70b9ce98
  51fe16:	imul   DWORD PTR [esi+ebx*2-0x6e]
  51fe1a:	mov    ch,0x27
  51fe1d:	iret   
  51fe1e:	dec    cx
  51fe20:	std    
  51fe21:	xchg   DWORD PTR [edi+ebp*4+0x687c61cc],ebx
  51fe28:	(bad)  
  51fe29:	adc    al,0x33
  51fe2b:	in     eax,0x9c
  51fe2d:	add    eax,DWORD PTR [esi+0x24]
  51fe30:	adc    BYTE PTR [edx],dh
  51fe32:	sub    al,0x9e
  51fe34:	dec    esp
  51fe35:	xor    eax,0xb7fefad5
  51fe3a:	pop    esp
  51fe3b:	sub    eax,0xa28b1b23
  51fe40:	jo     0x51fdff
  51fe42:	xor    cl,0x5f
  51fe45:	(bad)  
  51fe46:	mov    DWORD PTR [eax],esp
  51fe48:	dec    ecx
  51fe49:	push   edi
  51fe4a:	and    BYTE PTR [ebx+0x1a],dl
  51fe4d:	jnp    0x51fe78
  51fe4f:	repnz sbb WORD PTR [esi+0x76],sp
  51fe54:	or     ch,BYTE PTR [eax+eiz*2]
  51fe57:	adc    eax,0x6d70894f
  51fe5c:	xchg   BYTE PTR [ebp-0x27],ah
  51fe5f:	js     0x51fe61
  51fe61:	ret    
  51fe62:	test   BYTE PTR [esi+0x2f67f236],0x73
  51fe69:	lods   al,BYTE PTR ds:[esi]
  51fe6a:	jmp    0x22a60847
  51fe6f:	in     al,0x2e
  51fe71:	fstp   TBYTE PTR [edx-0x4c948dc9]
  51fe77:	mov    ah,0x9f
  51fe79:	mov    dl,0x31
  51fe7b:	daa    
  51fe7c:	xor    ah,BYTE PTR [ecx+0x4d]
  51fe7f:	outs   dx,DWORD PTR ds:[esi]
  51fe80:	(bad)  
  51fe81:	sub    dl,dh
  51fe83:	cwde   
  51fe84:	sub    al,BYTE PTR [edx+0x76efa18d]
  51fe8a:	or     al,dl
  51fe8c:	aas    
  51fe8d:	inc    eax
  51fe8e:	xor    edi,DWORD PTR [edi-0x4f]
  51fe91:	cmp    bl,BYTE PTR [eax]
  51fe93:	neg    DWORD PTR [edx+0x35]
  51fe96:	loop   0x51feb6
  51fe98:	lods   al,BYTE PTR ds:[esi]
  51fe99:	mov    es,WORD PTR [esi+0x10]
  51fe9c:	neg    BYTE PTR ds:0x287043d6
  51fea2:	cdq    
  51fea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51fea4:	sub    al,0x15
  51fea6:	fistp  WORD PTR [ebx]
  51fea8:	mov    ds:0x96c3ca35,al
  51fead:	push   0xffffff8a
  51feaf:	push   0xffffffff
  51feb1:	es adc al,0x74
  51feb4:	arpl   WORD PTR [edi+edx*4-0x27404f98],cx
  51febb:	jbe    0x51ff29
  51febd:	mov    bh,0xf1
  51febf:	xchg   BYTE PTR [edi+0x1e],dh
  51fec2:	jle    0x51fe65
  51fec4:	into   
  51fec5:	sar    bl,0x6c
  51fec8:	mov    al,ds:0x1f5585b8
  51fecd:	dec    esp
  51fece:	ds ret 
  51fed0:	clc    
  51fed1:	jmp    0xa063:0x7566954
  51fed8:	call   0x2bd1395f
  51fedd:	jbe    0x51fec8
  51fedf:	in     al,0x7c
  51fee1:	add    ebx,DWORD PTR [edi-0x31eca1ed]
  51fee7:	or     ebp,edi
  51fee9:	inc    eax
  51feea:	loope  0x51fedd
  51feec:	pushf  
  51feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  51feee:	xchg   ebp,eax
  51feef:	jae    0x51ff37
  51fef1:	clc    
  51fef2:	out    dx,al
  51fef3:	inc    esi
  51fef4:	xor    bl,bh
  51fef6:	mov    dh,BYTE PTR [ecx-0x3312bd5b]
  51fefc:	dec    edi
  51fefd:	mov    eax,ds:0x1af51580
  51ff02:	xor    esp,DWORD PTR [edi+0x1742e787]
  51ff08:	add    ax,cx
  51ff0b:	into   
  51ff0c:	sub    ecx,esp
  51ff0e:	(bad)  
  51ff0f:	sbb    eax,0xe765b724
  51ff14:	jl     0x51ff12
  51ff16:	cmp    DWORD PTR [ebx+eiz*4],eax
  51ff19:	loope  0x51ff45
  51ff1b:	dec    ebp
  51ff1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  51ff1d:	in     eax,dx
  51ff1e:	jne    0x51fea3
  51ff20:	lea    edi,[edx+0x55]
  51ff23:	push   edx
  51ff24:	call   0xe97a:0x900ef26f
  51ff2b:	mov    dl,0x8f
  51ff2d:	jmp    0x51ff81
  51ff2f:	iret   
  51ff30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  51ff31:	stc    
  51ff32:	xchg   edx,eax
  51ff33:	mov    dh,0x0
  51ff35:	push   es
  51ff36:	rol    DWORD PTR [esi+0x33],0xfe
  51ff3a:	sub    al,0x86
  51ff3c:	gs sub eax,0x7a0f5d90
  51ff42:	and    eax,0xd008d9e2
  51ff47:	(bad)  
  51ff48:	jmp    0xf47b:0xd5d3a67a
  51ff4f:	dec    ebp
  51ff50:	mov    ds,WORD PTR ds:0xf93ffdae
  51ff56:	ja     0x51ff08
  51ff58:	cmp    eax,edx
  51ff5a:	les    esp,FWORD PTR [eax+0x6c]
  51ff5d:	ss mov dl,0x10
  51ff60:	test   eax,0xaea96371
  51ff65:	adc    bh,BYTE PTR [edi-0x60b5a9d2]
  51ff6b:	daa    
  51ff6c:	push   ebp
  51ff6d:	int    0xb1
  51ff6f:	ins    BYTE PTR es:[edi],dx
  51ff70:	or     esi,edi
  51ff72:	inc    ecx
  51ff73:	mov    bh,dl
  51ff75:	dec    esi
  51ff76:	fstp   TBYTE PTR [edx-0x40]
  51ff79:	mov    DWORD PTR [edx-0x5d530ff4],eax
  51ff7f:	xchg   edx,eax
  51ff80:	mov    bl,0xbe
  51ff82:	mov    bh,0x66
  51ff84:	cmp    dh,BYTE PTR [ecx-0xc68f4fc]
  51ff8a:	shl    DWORD PTR [eax],cl
  51ff8c:	push   ds
  51ff8d:	pop    ebx
  51ff8e:	pop    ds
  51ff8f:	enter  0x124d,0xd4
  51ff93:	test   al,0x7b
  51ff95:	mov    bl,0x42
  51ff97:	ret    0xb496
  51ff9a:	imul   esi,DWORD PTR ds:0x91035526,0x9dcc373f
  51ffa4:	xor    al,ah
  51ffa6:	setle  dh
  51ffa9:	arpl   WORD PTR [eax+ecx*8],bp
  51ffac:	and    al,ah
  51ffae:	or     al,dl
  51ffb0:	xchg   ecx,eax
  51ffb1:	lods   al,BYTE PTR ds:[esi]
  51ffb2:	or     eax,0x57724940
  51ffb7:	fs test al,0xf9
  51ffba:	shl    bl,1
  51ffbc:	pusha  
  51ffbd:	sub    BYTE PTR [edi],dh
  51ffbf:	sbb    al,0x4d
  51ffc1:	ins    DWORD PTR es:[edi],dx
  51ffc2:	repz dec eax
  51ffc4:	jmp    0xc308:0xcec8c989
  51ffcb:	loopne 0x51ff86
  51ffcd:	das    
  51ffce:	ins    BYTE PTR es:[edi],dx
  51ffcf:	clc    
  51ffd0:	lds    ecx,FWORD PTR [esi+0x59288c6b]
  51ffd6:	sub    al,0x38
  51ffd8:	jl     0x52000e
  51ffda:	mov    al,0xff
  51ffdc:	ret    0xbaae
  51ffdf:	ss jge 0x51ffbb
  51ffe2:	push   esp
  51ffe3:	cmp    BYTE PTR [edi+eax*2],0x3a
  51ffe7:	fwait
  51ffe8:	iret   
  51ffe9:	mov    al,BYTE PTR [eax+0x7]
  51ffec:	in     eax,dx
  51ffed:	(bad)  
  51ffee:	pop    esp
  51ffef:	add    BYTE PTR [ebx-0x4a],al
  51fff2:	icebp  
  51fff3:	leave  
  51fff4:	ret    
  51fff5:	mov    esp,DWORD PTR [ecx]
  51fff7:	cmp    dl,dl
  51fff9:	aad    0x14
  51fffb:	mov    ch,0x68
  51fffd:	mov    al,0x8f
  51ffff:	ret    
  520000:	mov    BYTE PTR [edi+0x20fa168],bh
  520006:	inc    esi
  520007:	(bad)  [edx]
  520009:	arpl   si,si
  52000b:	sar    DWORD PTR [ebx+esi*1+0x1],0xd7
  520010:	xchg   DWORD PTR [ebp+0x48625a9a],ecx
  520016:	nop
  520017:	xchg   edi,eax
  520018:	sbb    al,0xd5
  52001a:	push   edx
  52001b:	mov    dh,BYTE PTR [ebx]
  52001d:	mov    cs,WORD PTR [edi-0x50]
  520020:	push   esi
  520021:	push   eax
  520022:	pop    esi
  520023:	das    
  520024:	repz loop 0x51ffb3
  520027:	jl     0x51ffd0
  520029:	loope  0x51ffbf
  52002b:	mov    ebx,0xd5c74579
  520030:	and    cl,BYTE PTR [edx+ecx*8-0x240f4f52]
  520037:	es ins WORD PTR es:[edi],dx
  52003a:	cmp    dl,dh
  52003c:	repz shr DWORD PTR [eax],cl
  52003f:	xchg   esp,eax
  520040:	inc    eax
  520041:	jnp    0x51ffed
  520043:	push   edx
  520044:	jne    0x520087
  520046:	adc    ah,al
  520048:	jle    0x51ffcb
  52004a:	sbb    eax,0xd6666fac
  52004f:	xchg   esp,eax
  520050:	popf   
  520051:	cmp    al,0x27
  520053:	rcl    BYTE PTR [esi-0x5c],1
  520056:	sbb    al,0xb2
  520058:	bound  esi,QWORD PTR [edx]
  52005a:	sub    bl,bl
  52005c:	bound  esi,QWORD PTR [edi+eax*4+0x3e894389]
  520063:	pop    ebp
  520064:	fwait
  520065:	mov    BYTE PTR [eax],ah
  520067:	cmp    esp,0x7deaecef
  52006d:	sub    BYTE PTR [eax+0xecc4418],bh
  520073:	das    
  520074:	(bad)  
  520075:	pop    esi
  520076:	jne    0x52001b
  520078:	pop    edx
  520079:	mov    al,ds:0xd6e8c94e
  52007e:	inc    ebx
  52007f:	sahf   
  520080:	sbb    ecx,DWORD PTR [eax-0x54]
  520083:	inc    eax
  520084:	ret    0xfacf
  520087:	clc    
  520088:	neg    ah
  52008a:	jle    0x5200f8
  52008c:	ss int3 
  52008e:	jl     0x52008d
  520090:	push   ds
  520091:	mov    edx,0x4eab29fa
  520096:	jge    0x5200af
  520098:	mov    edi,0x4b6b65a3
  52009d:	mov    ebx,0x7ade97ec
  5200a2:	pop    ebx
  5200a3:	retf   
  5200a4:	sub    bl,BYTE PTR [eax-0x7debb68e]
  5200aa:	shr    DWORD PTR [edx+0x26bf164c],1
  5200b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5200b1:	(bad)
  5200b4:	dec    edx
  5200b5:	sub    DWORD PTR [eax-0x7b],esp
  5200b8:	jge    0x5200e1
  5200ba:	and    DWORD PTR [esp+edx*8-0x61e87a99],edi
  5200c1:	retf   
  5200c2:	jnp    0x520142
  5200c4:	mov    edi,0x72158820
  5200c9:	out    dx,al
  5200ca:	mov    al,BYTE PTR [ecx]
  5200cc:	mov    ah,0x6d
  5200ce:	push   esi
  5200cf:	push   cs
  5200d0:	rol    DWORD PTR [esi+ecx*8],1
  5200d3:	pop    es
  5200d4:	sbb    ch,bl
  5200d6:	sti    
  5200d7:	dec    ecx
  5200d8:	push   0xffffffc8
  5200da:	loop   0x520080
  5200dc:	imul   eax,DWORD PTR [eax-0x5278da8f],0xffffffde
  5200e3:	sub    eax,0x10ac69d3
  5200e8:	xchg   edi,eax
  5200e9:	and    eax,0xa37f8a1a
  5200ee:	aas    
  5200ef:	and    DWORD PTR [ecx+0x6a],esp
  5200f2:	mov    BYTE PTR [edx+0x50],bl
  5200f5:	dec    ebx
  5200f6:	adc    al,0xe5
  5200f8:	cmp    BYTE PTR [edi-0xe7e9258],dh
  5200fe:	xchg   esi,eax
  5200ff:	ret    0x66c7
  520102:	sbb    eax,0x425a84f4
  520107:	pop    ebx
  520108:	push   esp
  520109:	mov    WORD PTR [edi+0x73],ds
  52010c:	mov    dh,0xb
  52010e:	mov    DWORD PTR [eax+eiz*4-0x2f7df284],esp
  520115:	or     eax,0xf5bf29aa
  52011a:	jg     0x5200ff
  52011c:	dec    ebp
  52011d:	xchg   DWORD PTR [ebp+0x1d38fea7],esi
  520123:	ds retf 0x3dff
  520127:	js     0x5200c2
  520129:	jp     0x520105
  52012b:	aas    
  52012c:	sbb    al,0x95
  52012e:	mov    ch,0x67
  520130:	sub    ah,BYTE PTR [esi-0x5145290b]
  520136:	popf   
  520137:	js     0x5200d9
  520139:	les    eax,FWORD PTR [ecx+0x2f2fb9ea]
  52013f:	jmp    0x421f6f5e
  520144:	sub    al,BYTE PTR [eax-0x16]
  520147:	imul   DWORD PTR [edi-0xd4b35a3]
  52014d:	add    DWORD PTR [esi],0xbac066dd
  520153:	loopne 0x520127
  520155:	out    0x4d,al
  520157:	mov    al,0xb
  520159:	mov    al,0x55
  52015b:	xor    ebx,DWORD PTR [edx+eiz*2+0x32]
  52015f:	pop    esi
  520160:	scas   eax,DWORD PTR es:[edi]
  520161:	mov    dl,0xcb
  520163:	aad    0x6e
  520165:	push   0x43
  520167:	xchg   esi,eax
  520168:	cmp    DWORD PTR ds:0x90d9f3ca,edi
  52016e:	sti    
  52016f:	test   DWORD PTR [esi-0x1f204cad],esi
  520175:	shl    edx,cl
  520177:	xor    ah,ch
  520179:	jl     0x52017f
  52017b:	lds    ecx,FWORD PTR [ebp-0x6]
  52017e:	fstp   QWORD PTR [ebx+eiz*2-0x6d7e60fc]
  520185:	mov    eax,0xb32f4c9f
  52018a:	ror    ebx,0xa5
  52018d:	sub    al,ch
  52018f:	es aam 0xab
  520192:	das    
  520193:	mov    dl,BYTE PTR [ebx]
  520195:	sbb    esi,edi
  520197:	inc    eax
  520198:	mov    DWORD PTR [ebp+0x457db58c],esi
  52019e:	mov    cl,BYTE PTR [eax]
  5201a0:	pusha  
  5201a1:	sub    DWORD PTR [eax-0x681f8f5f],esp
  5201a7:	iret   
  5201a8:	bound  eax,QWORD PTR [ecx+0x1a]
  5201ab:	mov    edx,0x8d2227f7
  5201b0:	test   DWORD PTR [eax],0x9348bd1f
  5201b6:	pop    ss
  5201b7:	call   0x653:0x63b7698c
  5201be:	mov    edi,0x141b03b3
  5201c3:	jae    0x5201c2
  5201c5:	cmp    BYTE PTR [esi],al
  5201c7:	ficom  WORD PTR [ebp+0x45]
  5201ca:	fdiv   st(4),st
  5201cc:	or     eax,0xf0c955c3
  5201d1:	push   esp
  5201d2:	adc    eax,0x2faeb58b
  5201d7:	out    0x6b,eax
  5201d9:	test   DWORD PTR [esi],edi
  5201db:	adc    DWORD PTR [ebx-0x11],ebp
  5201de:	pop    edx
  5201df:	cwde   
  5201e0:	mov    eax,0x5f78f324
  5201e5:	mov    ch,0x70
  5201e7:	and    ebp,ebx
  5201e9:	dec    esi
  5201ea:	cmc    
  5201eb:	in     eax,dx
  5201ec:	or     eax,0x81c64d5a
  5201f1:	mov    ds:0xff6775ec,eax
  5201f6:	ret    0x9881
  5201f9:	cli    
  5201fa:	aam    0xb6
  5201fc:	jmp    0x461b:0xf1203ab6
  520203:	mov    ah,0xc6
  520205:	dec    edx
  520206:	cwde   
  520207:	mov    si,0x545e
  52020b:	add    al,0xe4
  52020d:	jo     0x520191
  52020f:	aas    
  520210:	sbb    ch,BYTE PTR [ecx]
  520212:	dec    esi
  520213:	jne    0x52025e
  520215:	ficom  WORD PTR [edi]
  520217:	pop    eax
  520218:	xchg   eax,ecx
  52021a:	inc    ebx
  52021b:	leave  
  52021c:	(bad)  
  52021d:	lods   al,BYTE PTR ds:[esi]
  52021e:	inc    ebp
  52021f:	inc    edi
  520220:	(bad)  
  520221:	mov    al,ds:0x5db7a0b1
  520226:	pop    es
  520227:	or     edi,DWORD PTR [edi-0x791771c9]
  52022d:	nop
  52022e:	sbb    eax,0x481c8100
  520233:	mov    bl,0x64
  520235:	sahf   
  520236:	ds repz in al,dx
  520239:	outs   dx,BYTE PTR ds:[esi]
  52023a:	(bad)  
  52023c:	sbb    BYTE PTR [ebp+0x60],dl
  52023f:	add    eax,0x75fef26c
  520244:	mov    dl,0x50
  520246:	inc    edi
  520247:	push   edi
  520248:	gs mov dl,0xc4
  52024b:	ja     0x5202b4
  52024d:	dec    esp
  52024e:	lds    edi,FWORD PTR [eax+0x7f]
  520251:	pop    esp
  520252:	lahf   
  520253:	scas   eax,DWORD PTR es:[edi]
  520254:	lds    esi,FWORD PTR [esi+0x33]
  520257:	push   edi
  520258:	div    DWORD PTR [di-0xe36]
  52025d:	xchg   ebx,eax
  52025e:	lea    ebx,[esi-0x2af4fcc4]
  520264:	popa   
  520265:	or     eax,ebx
  520267:	xor    eax,0x4b63445b
  52026c:	jle    0x5202d8
  52026e:	sbb    ebx,DWORD PTR [edx-0x2466aa00]
  520274:	and    eax,0x5561c66
  520279:	gs aas 
  52027b:	xchg   DWORD PTR [edi+0x77520b98],ecx
  520281:	inc    esi
  520282:	das    
  520283:	aas    
  520284:	cdq    
  520285:	rcr    edi,cl
  520287:	sbb    DWORD PTR [eax+edi*1+0x4c],0x41202434
  52028f:	push   ecx
  520290:	sbb    ecx,DWORD PTR [edx]
  520292:	into   
  520293:	dec    eax
  520294:	lods   eax,DWORD PTR ds:[esi]
  520295:	dec    ebx
  520296:	repz pop ebx
  520298:	jne    0x520284
  52029a:	call   0xaed1:0xc899732f
  5202a1:	xchg   esi,eax
  5202a2:	pop    edi
  5202a3:	nop
  5202a4:	(bad)  
  5202a5:	imul   DWORD PTR [eax]
  5202a7:	jns    0x520288
  5202a9:	dec    edi
  5202aa:	pop    edx
  5202ab:	(bad)  
  5202ac:	fsubr  QWORD PTR [ecx]
  5202ae:	sti    
  5202af:	in     al,dx
  5202b0:	pop    edx
  5202b1:	sbb    DWORD PTR [ecx+0x1820255],edi
  5202b7:	mov    al,0xa8
  5202b9:	cs int3 
  5202bb:	shl    DWORD PTR [edx],0xa3
  5202be:	or     DWORD PTR [ebx+0x2d260592],ecx
  5202c4:	sub    dh,cl
  5202c6:	aas    
  5202c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5202c8:	sar    BYTE PTR [ecx-0x7040da33],0x34
  5202cf:	sti    
  5202d0:	jg     0x520297
  5202d2:	and    BYTE PTR [eax-0x376f9385],bl
  5202d8:	jg     0x520296
  5202da:	jns    0x520332
  5202dc:	pop    ebx
  5202dd:	pop    ss
  5202de:	(bad)  
  5202df:	push   cs
  5202e0:	dec    ebx
  5202e1:	inc    eax
  5202e2:	mov    al,0x1a
  5202e4:	aad    0x4d
  5202e6:	cmp    DWORD PTR [ebp+esi*4-0xbaa91a9],0x58bb8602
  5202f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5202f2:	ds inc ebx
  5202f4:	mov    eax,ds:0xd0e0b8dc
  5202f9:	xchg   dl,ch
  5202fb:	xchg   BYTE PTR [esi+ebp*8-0x76444e67],bh
  520302:	inc    ebx
  520303:	pop    ebx
  520304:	lods   al,BYTE PTR ds:[esi]
  520305:	and    BYTE PTR [edx+0x1],dl
  520308:	mov    bh,0xba
  52030a:	inc    esi
  52030b:	mov    fs,WORD PTR [eax]
  52030d:	mov    esp,0x59a2990a
  520312:	out    0x7d,eax
  520314:	pop    esp
  520315:	mov    bl,0xd4
  520317:	sar    BYTE PTR [ecx],0x46
  52031a:	dec    ebp
  52031b:	sub    eax,0x9d2d42f5
  520320:	mov    cl,0x52
  520322:	icebp  
  520323:	stos   BYTE PTR es:[edi],al
  520324:	push   0xffffffa8
  520326:	jno    0x520340
  520328:	sti    
  520329:	jnp    0x52039d
  52032b:	aas    
  52032c:	mov    ecx,0x89ffedec
  520331:	inc    esi
  520332:	xchg   edx,eax
  520333:	ror    DWORD PTR [edx+0x53],0xfd
  520337:	jge    0x520394
  520339:	fisubr WORD PTR [edi+ebx*1]
  52033c:	fmul   st(1),st
  52033e:	push   ecx
  52033f:	test   eax,0x13645437
  520344:	mov    ebp,0x566b0836
  520349:	cdq    
  52034a:	out    dx,al
  52034b:	test   esi,edi
  52034d:	xlat   BYTE PTR ds:[ebx]
  52034e:	adc    al,0x19
  520350:	pop    ebp
  520351:	push   ds
  520352:	add    BYTE PTR gs:[esi-0x2b],bh
  520356:	loopne 0x520399
  520358:	in     eax,0x3a
  52035a:	or     al,0xea
  52035c:	popa   
  52035d:	out    0x13,eax
  52035f:	and    BYTE PTR [edx-0x1f],bh
  520362:	mov    edx,0x21049ed7
  520367:	mov    fs,WORD PTR [ebp+0x69]
  52036a:	push   0xffffff81
  52036c:	(bad)  [ecx]
  52036e:	or     BYTE PTR [ebp-0x37b6c205],ah
  520374:	jb     0x5203c3
  520376:	dec    esi
  520377:	es cli 
  520379:	xchg   DWORD PTR [edx+0x29],esi
  52037c:	retf   
  52037d:	jmp    0x34c:0x8238ccf1
  520384:	pop    ebx
  520385:	inc    edx
  520386:	adc    eax,0x1fc42467
  52038b:	retf   
  52038c:	(bad)  
  52038d:	ficomp DWORD PTR [ecx]
  52038f:	push   ebp
  520390:	addr16 inc ebp
  520392:	fdiv   QWORD PTR [ecx]
  520394:	xor    BYTE PTR [ebp-0x7b89238f],0x66
  52039b:	sbb    BYTE PTR [ebp-0x297fb7cb],0x47
  5203a2:	(bad)  
  5203a3:	sub    al,0xa6
  5203a5:	xor    edx,esi
  5203a7:	cwde   
  5203a8:	adc    al,0x91
  5203aa:	inc    BYTE PTR [esi-0x1363adae]
  5203b0:	add    edx,ecx
  5203b2:	and    ebp,DWORD PTR [eax+0x710ddd70]
  5203b8:	aaa    
  5203b9:	dec    esp
  5203ba:	popaw  
  5203bc:	inc    esp
  5203bd:	mov    ebx,DWORD PTR ds:0x2f6f9d17
  5203c3:	aam    0xc3
  5203c5:	inc    ecx
  5203c6:	popa   
  5203c7:	rcr    DWORD PTR ds:0xc732a713,1
  5203cd:	sub    DWORD PTR fs:[edx],esi
  5203d0:	ds cmc 
  5203d2:	unpckhps xmm2,XMMWORD PTR [edx+0x4c]
  5203d6:	test   al,0xaa
  5203d8:	call   FWORD PTR [ebx+0x7d]
  5203db:	bound  ebp,QWORD PTR [edi-0xa]
  5203de:	into   
  5203df:	and    BYTE PTR [ecx-0x48c9b324],0x74
  5203e6:	jecxz  0x52040c
  5203e8:	push   0x7de05158
  5203ed:	mov    dl,0x45
  5203ef:	sbb    BYTE PTR [edi+0x53],dl
  5203f2:	pop    esp
  5203f3:	push   esi
  5203f4:	les    edi,FWORD PTR [edi+eax*8+0x5b]
  5203f8:	dec    eax
  5203f9:	adc    al,0x47
  5203fb:	(bad)  
  5203fc:	xor    BYTE PTR [esi],ah
  5203fe:	jno    0x5203f3
  520400:	pop    ecx
  520401:	je     0x5203a3
  520403:	inc    ebp
  520404:	dec    ebx
  520405:	ins    BYTE PTR es:[edi],dx
  520406:	cmp    bh,0x57
  520409:	mov    DWORD PTR [edi],edi
  52040b:	dec    ebp
  52040c:	and    DWORD PTR [edx-0x7e1bb04],eax
  520412:	imul   esi,DWORD PTR [ecx],0x51
  520415:	jns    0x520426
  520417:	jp     0x520440
  520419:	xchg   DWORD PTR [ebp-0x759b03b7],ecx
  52041f:	cmp    dl,BYTE PTR [edx+0x6ebe8153]
  520425:	lahf   
  520426:	dec    edi
  520427:	pop    ecx
  520428:	pop    edi
  520429:	call   0xd73f523f
  52042e:	das    
  52042f:	mov    ?,WORD PTR [ebp+0x6ed90295]
  520435:	and    al,0x18
  520437:	cmp    edi,DWORD PTR [edi+0x34]
  52043a:	add    DWORD PTR [edx-0xf62acc2],esi
  520440:	sti    
  520441:	sbb    BYTE PTR [ebx+0x77a63a29],dl
  520447:	(bad)  
  520448:	retf   0x358d
  52044b:	mov    ch,0xf4
  52044d:	fidivr WORD PTR [edx]
  52044f:	cli    
  520450:	or     al,0x8
  520452:	adc    al,0x1e
  520454:	xchg   esp,eax
  520455:	push   edi
  520456:	test   DWORD PTR [edx+0x432f0723],edi
  52045c:	std    
  52045d:	je     0x5203ea
  52045f:	mov    ds:0x9a172c76,al
  520464:	xchg   BYTE PTR [ecx],al
  520466:	scas   al,BYTE PTR es:[edi]
  520467:	mov    esp,eax
  520469:	(bad)  
  52046a:	stos   BYTE PTR es:[edi],al
  52046b:	dec    esp
  52046c:	stc    
  52046d:	loope  0x52047f
  52046f:	imul   ecx,DWORD PTR [eax+esi*2+0x334ecd9e],0xcc7a2af
  52047a:	ss jg  0x5204ef
  52047d:	mov    bh,0xdc
  52047f:	adc    BYTE PTR [esi],0x17
  520482:	loope  0x520494
  520484:	add    edi,ebx
  520486:	in     al,dx
  520487:	hlt    
  520488:	rcr    BYTE PTR cs:[eax+0x41ce105b],cl
  52048f:	loope  0x520447
  520491:	sbb    eax,0x117c33f
  520496:	inc    edx
  520497:	lods   eax,DWORD PTR ds:[esi]
  520498:	pop    edx
  520499:	(bad)  
  52049b:	lea    esp,[ebp-0x43]
  52049e:	test   bh,dl
  5204a0:	cmp    DWORD PTR [edx+eiz*4-0x3a],edi
  5204a4:	cmp    esp,esi
  5204a6:	cs xchg esp,eax
  5204a8:	mov    al,ds:0x3251ccad
  5204ad:	sub    al,dh
  5204af:	or     bh,cl
  5204b1:	out    0xce,eax
  5204b3:	mov    BYTE PTR [eax],bh
  5204b5:	pop    ebp
  5204b6:	mov    bl,0x64
  5204b8:	loopne 0x52052e
  5204ba:	inc    ebx
  5204bb:	mov    ah,BYTE PTR [eax]
  5204bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5204be:	adc    ebp,DWORD PTR [ebp-0x43]
  5204c1:	mov    bh,0x1
  5204c3:	repz gs aaa 
  5204c6:	inc    eax
  5204c7:	call   0x9277423b
  5204cc:	call   0x4b089adc
  5204d1:	int    0x87
  5204d3:	shl    BYTE PTR [esi],0x26
  5204d6:	ret    0x4d67
  5204d9:	mov    ebp,0xb9a72879
  5204de:	call   0x5d4eae6f
  5204e3:	add    ebp,ebx
  5204e5:	stos   BYTE PTR es:[edi],al
  5204e6:	sbb    al,0x58
  5204e9:	(bad)  
  5204ea:	aad    0x30
  5204ec:	mov    ecx,0x1e0baf62
  5204f1:	cmc    
  5204f2:	jae    0x52054b
  5204f4:	outs   dx,DWORD PTR ds:[esi]
  5204f5:	std    
  5204f6:	push   edi
  5204f7:	mov    bl,0xa2
  5204f9:	loope  0x520565
  5204fb:	cmp    DWORD PTR [esi+0xf1bf94b],esp
  520501:	ret    0x429d
  520504:	ret    0x10ef
  520507:	icebp  
  520508:	pusha  
  520509:	xchg   DWORD PTR [edi],ebx
  52050b:	pop    edx
  52050c:	int    0xf2
  52050e:	mov    eax,0xc6445896
  520513:	xor    edi,0x1c941917
  520519:	mov    esi,0xf2ed7186
  52051e:	cmp    DWORD PTR [ecx],esi
  520520:	sahf   
  520521:	sbb    cl,al
  520523:	or     al,0xa2
  520525:	or     eax,0x564f0d80
  52052a:	push   edx
  52052b:	rcr    DWORD PTR [ecx],cl
  52052d:	into   
  52052e:	sbb    eax,0x1cd8801e
  520533:	out    0xdc,al
  520535:	mov    ch,0xcc
  520537:	pop    ds
  520538:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520539:	xchg   ebx,eax
  52053a:	mov    edi,0xb4fac36d
  52053f:	(bad)  
  520540:	cmp    eax,0x59587c6a
  520545:	adc    ecx,eax
  520547:	pop    ss
  520548:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520549:	pop    ecx
  52054a:	pop    ebp
  52054b:	repnz rcr BYTE PTR [edi+0x5db4ed38],cl
  520552:	and    al,0xbf
  520554:	add    esi,DWORD PTR [edx]
  520556:	iret   
  520557:	dec    edi
  520558:	xor    eax,0x4643b6c8
  52055d:	add    esi,DWORD PTR [ebx+ecx*8+0x46]
  520561:	sar    BYTE PTR [ebx+eiz*8+0x7e],0x3b
  520566:	pushf  
  520567:	adc    ch,0x78
  52056a:	pushf  
  52056b:	mov    ebx,0x2a58dd05
  520570:	xor    eax,0x98c2afe6
  520575:	or     ah,BYTE PTR [esi+0x32]
  520578:	push   ds
  520579:	push   esi
  52057a:	mov    esi,0x75d4bcd5
  52057f:	daa    
  520580:	dec    edx
  520581:	pushf  
  520582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520583:	add    ch,0x11
  520586:	xchg   DWORD PTR [ecx+0x1],ebp
  520589:	pop    esp
  52058a:	dec    ecx
  52058b:	push   edx
  52058c:	mov    DWORD PTR [bp+si-0x5],eax
  520590:	pop    ebp
  520591:	inc    ebp
  520592:	mov    ds:0x11f18a43,al
  520597:	retf   0x94de
  52059a:	and    eax,0x55a88f98
  52059f:	sub    esi,DWORD PTR [eax-0x52153eb6]
  5205a5:	xchg   DWORD PTR [ecx+0x2c],esi
  5205a8:	add    BYTE PTR [ebp+0x62],al
  5205ab:	jnp    0x52060c
  5205ad:	add    eax,0xa8f580ed
  5205b2:	ins    DWORD PTR es:[edi],dx
  5205b3:	popa   
  5205b4:	out    dx,eax
  5205b5:	xchg   esi,eax
  5205b6:	mov    ecx,0x317b194a
  5205bb:	ss mov esp,0x6373e5d
  5205c1:	cli    
  5205c2:	xchg   ecx,eax
  5205c3:	je     0x520628
  5205c5:	fcomp  st(3)
  5205c7:	or     eax,0x4adfe8a9
  5205cc:	ja     0x52057a
  5205ce:	mov    ebp,0xff385bc6
  5205d3:	icebp  
  5205d4:	bound  esp,QWORD PTR [edi]
  5205d6:	sub    DWORD PTR [ecx-0x5],ebx
  5205d9:	add    al,0x46
  5205db:	adc    esi,DWORD PTR [ecx-0x15ac6b13]
  5205e1:	fidiv  DWORD PTR [edi+0x15]
  5205e4:	mov    DWORD PTR [eax-0xd526a12],edi
  5205ea:	xchg   ebp,eax
  5205eb:	mov    edx,0x8f428dfb
  5205f0:	jo     0x5205a8
  5205f2:	dec    ebp
  5205f3:	in     eax,dx
  5205f4:	pop    ss
  5205f5:	push   cs
  5205f6:	in     eax,0x6c
  5205f8:	xchg   edi,eax
  5205f9:	aaa    
  5205fa:	dec    esp
  5205fb:	lahf   
  5205fc:	push   ds
  5205fd:	cmp    eax,0x19090c06
  520602:	sbb    al,0xc2
  520604:	add    esp,DWORD PTR [eax+ebx*4-0x23]
  520608:	dec    edi
  520609:	mov    edi,0xd54b24e6
  52060e:	ds ret 
  520610:	aam    0xa2
  520612:	out    dx,eax
  520613:	inc    esi
  520614:	sub    edi,eax
  520616:	push   0x4212ae88
  52061b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52061c:	rol    BYTE PTR [edx+0x70a3c932],1
  520622:	icebp  
  520623:	mov    ?,esi
  520625:	inc    ecx
  520626:	fnstcw WORD PTR [ecx]
  520628:	in     al,dx
  520629:	mov    esi,0xcae11b91
  52062e:	dec    esi
  52062f:	sbb    eax,0x92b7668e
  520634:	push   edi
  520635:	dec    ebx
  520636:	mov    ds:0xd6ddda84,al
  52063b:	data16 add BYTE PTR [edx+0x1645d0cb],bh
  520642:	fldenv [ebx-0x8ae9a34]
  520648:	jg     0x52068a
  52064a:	push   es
  52064b:	push   es
  52064c:	push   esi
  52064d:	mov    edi,0xab3a3ff0
  520652:	xchg   esi,eax
  520653:	call   FWORD PTR [edi+esi*2+0x7b]
  520657:	pop    ebp
  520658:	ins    DWORD PTR es:[edi],dx
  520659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52065a:	fimul  WORD PTR [eax]
  52065c:	pop    ebp
  52065d:	xchg   esi,eax
  52065e:	jbe    0x5205ff
  520660:	inc    ebx
  520661:	add    dh,BYTE PTR [ecx-0x6a]
  520664:	fwait
  520665:	gs (bad) 
  520667:	das    
  520668:	imul   ebx,ebp,0x492cbb6d
  52066e:	mov    dh,0x63
  520670:	ror    bl,1
  520672:	ds out dx,al
  520674:	push   ss
  520675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520676:	xor    bl,BYTE PTR [eax-0x675f785d]
  52067c:	jle    0x520651
  52067e:	scas   al,BYTE PTR es:[edi]
  52067f:	aas    
  520680:	scas   al,BYTE PTR es:[di]
  520682:	hlt    
  520683:	lods   eax,DWORD PTR ds:[esi]
  520684:	fisubr DWORD PTR [ebp+ebx*2-0x79c35abd]
  52068b:	xchg   ebx,eax
  52068c:	or     eax,0x8b05624c
  520691:	or     BYTE PTR [edi],al
  520693:	call   0x683f:0x4aee2366
  52069a:	mov    fs,WORD PTR [edi-0x36]
  52069d:	pop    edi
  52069e:	stos   BYTE PTR es:[edi],al
  52069f:	jae    0x52068f
  5206a1:	inc    ecx
  5206a2:	cdq    
  5206a3:	fdivr  st(3),st
  5206a5:	cmp    al,0x9b
  5206a7:	fmul   QWORD PTR [ebx]
  5206a9:	push   edi
  5206aa:	xchg   edx,eax
  5206ab:	sahf   
  5206ac:	mov    ds:0x4af3833f,al
  5206b1:	ja     0x52067f
  5206b3:	ret    
  5206b4:	push   ebp
  5206b5:	ss stos BYTE PTR es:[edi],al
  5206b7:	jmp    0xa28f:0xda7efdeb
  5206be:	in     eax,0xe4
  5206c0:	mov    dh,0xe8
  5206c2:	and    al,al
  5206c4:	jle    0x52070a
  5206c6:	out    dx,eax
  5206c7:	dec    edi
  5206c8:	cli    
  5206c9:	ret    0x41a6
  5206cc:	mov    al,0xfa
  5206ce:	retf   
  5206cf:	in     eax,dx
  5206d0:	(bad)  
  5206d1:	push   eax
  5206d2:	loope  0x52066b
  5206d4:	sbb    eax,0x3bfafc32
  5206da:	push   ebp
  5206db:	jl     0x520699
  5206dd:	sub    al,0x68
  5206df:	test   DWORD PTR [edi],ebx
  5206e1:	inc    ecx
  5206e2:	jmp    0x5120e522
  5206e7:	inc    ecx
  5206e8:	ret    
  5206e9:	jne    0x520763
  5206eb:	(bad)  
  5206ed:	aad    0xb
  5206ef:	xor    edi,DWORD PTR [ebx+0x48fd3cb4]
  5206f5:	pop    ebx
  5206f6:	sbb    DWORD PTR ds:0x42ee3241,ebx
  5206fc:	xchg   DWORD PTR [edi],eax
  5206fe:	loop   0x5206f5
  520700:	mov    dl,0x90
  520702:	jno    0x520696
  520704:	ret    0xa6c0
  520707:	mov    esi,0xe8d99d7b
  52070c:	inc    edx
  52070d:	popf   
  52070e:	stos   BYTE PTR es:[edi],al
  52070f:	sbb    BYTE PTR [ebx],bh
  520711:	push   ebx
  520712:	scas   al,BYTE PTR es:[edi]
  520713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520714:	dec    ebp
  520715:	or     eax,0x81c7235f
  52071a:	clc    
  52071b:	mov    eax,ds:0xaeac4c9d
  520720:	add    bh,BYTE PTR [eax+0x42cd4152]
  520726:	test   al,0x22
  520728:	jns    0x520745
  52072a:	pop    ebx
  52072b:	add    BYTE PTR [esi],dl
  52072d:	sbb    eax,0xbdc8ea45
  520732:	cli    
  520733:	xlat   BYTE PTR ds:[ebx]
  520734:	jp     0x5206d5
  520736:	sbb    DWORD PTR [esi],eax
  520738:	mov    ebp,DWORD PTR [esi]
  52073a:	outs   dx,BYTE PTR ds:[esi]
  52073b:	ins    DWORD PTR es:[edi],dx
  52073c:	pop    esp
  52073d:	adc    eax,0x68a07f00
  520742:	pushf  
  520743:	dec    edx
  520744:	int3   
  520745:	push   esp
  520746:	aas    
  520747:	pushf  
  520748:	adc    esi,DWORD PTR [ebx]
  52074a:	pop    eax
  52074b:	sub    BYTE PTR [edi-0x34],dl
  52074e:	outs   dx,BYTE PTR ds:[esi]
  52074f:	dec    edx
  520750:	rcl    DWORD PTR [ebx],1
  520752:	jb     0x5206d5
  520754:	or     al,0x2c
  520756:	adc    BYTE PTR [ebx+0x1077d597],al
  52075c:	cmp    eax,0x81fa1079
  520761:	mov    eax,0x798cbfe0
  520766:	lock pop esi
  520768:	cli    
  520769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52076a:	inc    ebp
  52076b:	outs   dx,DWORD PTR ds:[esi]
  52076c:	xchg   ch,ch
  52076e:	mov    ch,BYTE PTR [esp+eiz*8+0xf]
  520772:	adc    DWORD PTR [eax+0x43165564],0x62aae8d2
  52077c:	jae    0x520729
  52077e:	add    al,0xbc
  520780:	(bad)  [esi+0x5305867e]
  520786:	inc    ebp
  520787:	sbb    al,0x3f
  520789:	xchg   ebp,eax
  52078a:	mov    eax,ds:0x6a3e2c53
  52078f:	cmp    BYTE PTR [ecx],bl
  520791:	inc    ebx
  520792:	fld    TBYTE PTR [ecx]
  520794:	xor    BYTE PTR [esi+0x1704dfdc],dl
  52079a:	addr16 aaa 
  52079c:	inc    ebp
  52079d:	test   DWORD PTR [edi+0x4a32f865],0xb42a6589
  5207a7:	mov    eax,0x7a039e95
  5207ac:	mov    esi,0x6fb09532
  5207b1:	mov    cl,bh
  5207b3:	xchg   DWORD PTR [edx+0xcda6d3c],edx
  5207b9:	mov    DWORD PTR [edi+0x7747d1bb],ebx
  5207bf:	pop    esp
  5207c0:	popf   
  5207c1:	cdq    
  5207c2:	jo     0x5207a4
  5207c4:	retf   
  5207c5:	sub    esi,DWORD PTR [edi-0x4d18e23d]
  5207cb:	mov    ds:0xaa1e7294,al
  5207d0:	inc    edx
  5207d1:	rol    DWORD PTR [ebp+0x35ddba5b],cl
  5207d7:	clc    
  5207d8:	mov    al,BYTE PTR [edx-0x71]
  5207db:	and    al,0xe8
  5207dd:	inc    eax
  5207de:	loopne 0x5207d2
  5207e0:	push   0xffffff86
  5207e2:	dec    ecx
  5207e3:	mov    ch,0x5c
  5207e5:	pop    ebp
  5207e6:	repz aam 0x93
  5207e9:	lahf   
  5207ea:	mov    ds,WORD PTR [eax+0x6d]
  5207ed:	mov    ss,WORD PTR [ebx-0x2cef97a3]
  5207f3:	test   BYTE PTR [ecx-0x6],ah
  5207f6:	call   DWORD PTR [ecx]
  5207f8:	call   0x36bd:0xdee3c005
  5207ff:	push   0x3b5b0f5d
  520804:	in     eax,dx
  520805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520806:	mov    ebx,0x7155cb3a
  52080b:	stos   DWORD PTR es:[edi],eax
  52080c:	out    dx,eax
  52080d:	retf   
  52080e:	xor    DWORD PTR [edx+edi*1],ecx
  520811:	xchg   DWORD PTR [esi+eax*8+0x84f25c4],ebx
  520818:	je     0x520889
  52081a:	xchg   esi,eax
  52081b:	inc    ebp
  52081c:	jb     0x520802
  52081e:	sub    DWORD PTR [eax+0x5736dc4f],ecx
  520824:	and    edx,eax
  520826:	loope  0x520815
  520828:	rcr    DWORD PTR [edx],0x6f
  52082b:	into   
  52082c:	stos   BYTE PTR es:[edi],al
  52082d:	or     dl,dl
  52082f:	popf   
  520830:	xor    dl,dl
  520832:	mov    edi,0x8e9a25ee
  520837:	(bad)  
  520838:	adc    DWORD PTR [edx-0x5a],eax
  52083b:	sub    dl,BYTE PTR [eax+0x4c]
  52083e:	cmp    dh,cl
  520840:	es aam 0x58
  520843:	call   0x22fef91e
  520848:	pop    edx
  520849:	fwait
  52084a:	push   ecx
  52084b:	repnz les esi,FWORD PTR [ecx]
  52084e:	test   DWORD PTR [esi+0x2b],esi
  520851:	xchg   ebp,eax
  520852:	leave  
  520853:	pop    ds
  520854:	push   ecx
  520855:	(bad)  
  520856:	out    0xc5,eax
  520858:	mov    cl,0x53
  52085a:	rcr    BYTE PTR [ebx+0x2c01e1ff],1
  520860:	xchg   ecx,eax
  520861:	test   eax,0x31816626
  520866:	fdivr  st,st(0)
  520868:	ror    DWORD PTR ds:0xee394516,0x18
  52086f:	push   esp
  520870:	xchg   edx,eax
  520871:	xor    BYTE PTR [edx],0x10
  520874:	xchg   esi,eax
  520875:	addr16 js 0x520845
  520878:	mov    ebx,0xb1ed07a
  52087d:	inc    ecx
  52087e:	(bad)
  520881:	mov    cl,bh
  520883:	enter  0x7b5f,0x37
  520887:	jle    0x520880
  520889:	cli    
  52088a:	call   0x9cba:0x229859f3
  520891:	xchg   ebx,eax
  520892:	cmp    edx,DWORD PTR [eax]
  520894:	inc    esp
  520895:	push   ds
  520896:	test   al,0xf0
  520898:	in     eax,0xc1
  52089a:	inc    ebp
  52089b:	jae    0x5208bb
  52089d:	sar    dl,cl
  52089f:	in     eax,0x77
  5208a1:	aaa    
  5208a2:	loop   0x52085b
  5208a4:	sub    esp,edi
  5208a6:	cmp    al,0x51
  5208a8:	inc    edx
  5208a9:	outs   dx,BYTE PTR ds:[esi]
  5208aa:	sub    BYTE PTR [ebx+0x6a52fa41],dl
  5208b0:	xchg   ebx,eax
  5208b1:	arpl   si,bx
  5208b3:	jne    0x520919
  5208b5:	push   es
  5208b6:	rcr    DWORD PTR [edx],1
  5208b8:	mov    ebx,0xcf74b841
  5208bd:	cmp    eax,0x2b4d4146
  5208c2:	ds jl  0x5208a4
  5208c5:	dec    edi
  5208c6:	repnz push ds
  5208c8:	enter  0x526a,0xe5
  5208cc:	or     DWORD PTR [edx+0x1d],esi
  5208cf:	cli    
  5208d0:	rcr    edi,0xb5
  5208d3:	mov    ecx,0xaade9657
  5208d8:	mov    WORD PTR [edx-0x190050f6],gs
  5208de:	sub    ecx,0x6a
  5208e1:	cli    
  5208e2:	sti    
  5208e3:	icebp  
  5208e4:	in     eax,dx
  5208e5:	jp     0x52090d
  5208e7:	stos   DWORD PTR es:[edi],eax
  5208e8:	shl    ebp,1
  5208ea:	sbb    edx,0xffffffdb
  5208ed:	jle    0x5208d8
  5208ef:	shl    edx,1
  5208f1:	outs   dx,DWORD PTR ds:[esi]
  5208f2:	pop    es
  5208f3:	icebp  
  5208f4:	das    
  5208f5:	test   ecx,ebx
  5208f7:	mov    dh,BYTE PTR [ecx]
  5208f9:	pop    edx
  5208fa:	mov    BYTE PTR ds:0x837dc7ce,ah
  520900:	or     al,0xba
  520902:	aam    0x72
  520904:	mov    eax,ds:0xf01ccc54
  520909:	(bad)  
  52090a:	cs lahf 
  52090c:	std    
  52090d:	fxch   st(6)
  52090f:	int    0xc6
  520911:	adc    eax,0xf3165661
  520916:	(bad)  
  520917:	sub    al,0x51
  520919:	mov    al,0xd2
  52091b:	and    BYTE PTR [esp],bh
  52091e:	jmp    0x5208f9
  520920:	call   0x3226de43
  520925:	mov    ebx,0x8c10379b
  52092a:	xchg   esp,eax
  52092b:	xlat   BYTE PTR ds:[ebx]
  52092c:	inc    ebx
  52092d:	jne    0x520930
  52092f:	ins    BYTE PTR es:[di],dx
  520931:	daa    
  520932:	push   edx
  520933:	xchg   BYTE PTR [ebx+0x2d57a134],ch
  520939:	mov    ds:0x2c8dcb43,al
  52093e:	dec    edx
  52093f:	cmp    edi,esi
  520941:	scas   al,BYTE PTR es:[edi]
  520942:	xchg   ebp,eax
  520943:	adc    edx,DWORD PTR [edi-0x8445ab1]
  520949:	dec    eax
  52094a:	xlat   BYTE PTR ds:[ebx]
  52094b:	dec    esp
  52094c:	shr    DWORD PTR [esi+0x3f],1
  52094f:	repz or al,0xd
  520952:	jp     0x5208e4
  520954:	jmp    0xf0a48579
  520959:	mov    cs:0xf42fe52c,eax
  52095f:	dec    edi
  520960:	xchg   edx,eax
  520961:	jle    0x5208e3
  520963:	sub    al,0xf2
  520965:	dec    eax
  520966:	std    
  520967:	mov    edx,0x4aeca63d
  52096c:	in     al,0xc6
  52096e:	sbb    eax,DWORD PTR [ecx+esi*1-0x921e724]
  520975:	sub    dh,BYTE PTR [ebp+0x2080312a]
  52097b:	jg     0x5209bb
  52097d:	cmp    BYTE PTR [esi],ah
  52097f:	scas   eax,DWORD PTR es:[edi]
  520980:	sub    dl,dl
  520982:	mov    ah,0xc9
  520984:	jecxz  0x52098d
  520986:	push   0x55
  520988:	push   eax
  520989:	pop    edi
  52098a:	jmp    0x28c4c637
  52098f:	(bad)  
  520990:	(bad)  
  520992:	in     eax,dx
  520993:	and    DWORD PTR [esi+ebp*2-0xe],eax
  520997:	cs and al,0x42
  52099a:	div    dh
  52099c:	cmc    
  52099d:	retf   0xcd3
  5209a0:	inc    eax
  5209a1:	dec    edx
  5209a2:	loop   0x5209b2
  5209a4:	sub    ecx,DWORD PTR [eax+0x63]
  5209a7:	pop    esp
  5209a8:	ficom  WORD PTR [eax-0x366844bd]
  5209ae:	pop    ecx
  5209af:	inc    ecx
  5209b0:	adc    ebp,DWORD PTR [esp+eiz*8+0x13da3fa2]
  5209b7:	ficom  DWORD PTR [ebx]
  5209b9:	(bad)  
  5209ba:	push   0x68
  5209bc:	pop    es
  5209bd:	dec    eax
  5209be:	inc    esi
  5209bf:	inc    ebp
  5209c0:	push   ebx
  5209c1:	xor    ecx,DWORD PTR es:[eax+0x41]
  5209c5:	loopne 0x5209d5
  5209c7:	test   ecx,esi
  5209c9:	dec    ebp
  5209ca:	jo     0x5209f3
  5209cc:	adc    bl,BYTE PTR [ebx+0x14ea68cb]
  5209d2:	push   es
  5209d3:	dec    esi
  5209d4:	cmp    al,0x96
  5209d6:	rcl    ecx,1
  5209d8:	or     edx,edi
  5209da:	(bad)  
  5209db:	in     eax,0x96
  5209dd:	test   al,0xcd
  5209df:	adc    BYTE PTR [eax],dl
  5209e1:	cli    
  5209e2:	enter  0xb761,0x63
  5209e6:	jns    0x520a29
  5209e8:	js     0x5209b3
  5209ea:	aad    0x79
  5209ec:	mov    cl,0x5c
  5209ee:	(bad)  
  5209f0:	je     0x520a07
  5209f2:	jmp    0x54dbf64d
  5209f7:	adc    eax,DWORD PTR [ecx-0x45]
  5209fa:	jmp    0x325a:0x101c700b
  520a01:	push   ss
  520a02:	outs   dx,DWORD PTR ds:[esi]
  520a03:	add    al,0xad
  520a05:	aad    0x8d
  520a07:	or     bh,al
  520a09:	and    edi,DWORD PTR [ebx+eax*4+0x5c60ddb2]
  520a10:	jb     0x5209e6
  520a12:	jno    0x520a87
  520a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520a15:	jmp    0xdf3a1f0a
  520a1a:	sub    DWORD PTR es:[ecx],0x2d0670cc
  520a21:	jbe    0x520a3f
  520a23:	int3   
  520a24:	and    eax,0xc5ac89a2
  520a29:	dec    ebx
  520a2a:	mov    edx,0x91e506fd
  520a2f:	mov    dh,0x88
  520a31:	rol    BYTE PTR [eax],1
  520a33:	js     0x520a72
  520a35:	jp     0x520a6a
  520a37:	fcom   DWORD PTR [eax]
  520a39:	into   
  520a3a:	gs mov ebx,0x79ddfb9
  520a40:	jg     0x520a6a
  520a42:	dec    edi
  520a43:	sub    dh,ch
  520a45:	stos   BYTE PTR es:[edi],al
  520a46:	fsub   QWORD PTR [ecx-0x6417c366]
  520a4c:	jmp    0x520aaa
  520a4e:	bound  edx,QWORD PTR [edx+0x5635f11f]
  520a54:	jmp    0x6e89:0xa2f2303a
  520a5b:	sbb    edi,ebp
  520a5d:	repnz int 0xcc
  520a60:	sub    eax,0x4968363
  520a65:	adc    ch,ah
  520a67:	cld    
  520a68:	test   BYTE PTR [ebx+eiz*2-0x3284eeb6],ah
  520a6f:	cmp    eax,0xebbf16eb
  520a74:	jns    0x520ae8
  520a76:	sbb    DWORD PTR [ebp+eax*1-0x16],edi
  520a7a:	out    0x58,eax
  520a7c:	mov    ecx,0xf1a9b85f
  520a81:	sub    eax,edi
  520a83:	inc    ebx
  520a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520a85:	pop    esp
  520a86:	inc    ecx
  520a87:	push   0xb57e3274
  520a8c:	fwait
  520a8d:	scas   al,BYTE PTR es:[edi]
  520a8e:	ss push 0x36
  520a91:	xchg   DWORD PTR [edx+0x7b],ebp
  520a94:	inc    esp
  520a95:	mov    ecx,0xe68b07b7
  520a9a:	mov    ch,0x97
  520a9c:	fdivr  QWORD PTR [edx]
  520a9e:	leave  
  520a9f:	mov    eax,0xcde3375
  520aa4:	mov    ds:0x45166d9a,al
  520aa9:	aam    0x8d
  520aab:	ret    
  520aac:	inc    esi
  520aad:	(bad)  
  520aaf:	addr16 inc eax
  520ab1:	adc    bh,BYTE PTR [esp+edi*2+0x31]
  520ab5:	or     al,0xcb
  520ab7:	nop
  520ab8:	dec    ebp
  520ab9:	ret    0x5639
  520abc:	js     0x520aa7
  520abe:	or     ebx,ecx
  520ac0:	lahf   
  520ac1:	mov    WORD PTR [ebx+0x23],gs
  520ac4:	push   0xe44cf76b
  520ac9:	or     DWORD PTR [esp+eiz*2],ebx
  520acc:	or     DWORD PTR [eax-0x6e],ecx
  520acf:	push   cs
  520ad0:	das    
  520ad1:	inc    esi
  520ad2:	xchg   ebx,eax
  520ad3:	loopne 0x520a80
  520ad5:	sbb    eax,0x1639b8da
  520ada:	cmp    bl,BYTE PTR ds:[edx-0x66]
  520ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  520adf:	lahf   
  520ae0:	push   es
  520ae1:	inc    esi
  520ae2:	int3   
  520ae3:	cwde   
  520ae4:	addr16 dec ebp
  520ae6:	rcr    cl,0x52
  520ae9:	pop    es
  520aea:	daa    
  520aeb:	jo     0x520ae7
  520aed:	retf   0x7a9e
  520af0:	push   ss
  520af1:	je     0x520b44
  520af3:	fwait
  520af4:	fwait
  520af5:	cwde   
  520af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520af7:	(bad)  
  520af8:	cmc    
  520af9:	jge    0x520ab2
  520afb:	dec    esi
  520afc:	rcl    BYTE PTR [eax-0x25],0x33
  520b00:	std    
  520b01:	jmp    FWORD PTR [esi-0x7288b6ad]
  520b07:	adc    eax,0x5d516e84
  520b0c:	mov    eax,0x6ee04374
  520b11:	fld    st(6)
  520b13:	inc    ebx
  520b14:	(bad)  
  520b15:	ins    DWORD PTR es:[edi],dx
  520b16:	push   ebx
  520b17:	mov    dl,0xf3
  520b19:	fld    TBYTE PTR [esi+0x9]
  520b1c:	xor    eax,0x2931f830
  520b21:	inc    eax
  520b22:	xor    eax,0xe1cf9f5d
  520b27:	mov    eax,0xff4dfae0
  520b2c:	out    dx,eax
  520b2d:	test   ebp,0x67d01f68
  520b33:	cdq    
  520b34:	mov    edx,0x6681bca7
  520b39:	arpl   WORD PTR [esi-0x676e9dd2],dx
  520b3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520b40:	call   0xb3a1:0x2f0abc6f
  520b47:	out    0xf4,al
  520b49:	inc    edi
  520b4a:	dec    ebx
  520b4b:	ins    BYTE PTR es:[edi],dx
  520b4c:	repz std 
  520b4e:	sub    esi,DWORD PTR [ebx]
  520b50:	cld    
  520b51:	das    
  520b52:	enter  0x7a8b,0xfa
  520b56:	jmp    0x520b19
  520b58:	stos   BYTE PTR es:[edi],al
  520b59:	mov    edx,0xf2de1bf0
  520b5e:	into   
  520b5f:	imul   ebp,DWORD PTR [ebp+0xeadabdc],0xfffffff0
  520b66:	pusha  
  520b67:	js     0x520b8b
  520b69:	pusha  
  520b6a:	add    BYTE PTR [ecx],al
  520b6c:	(bad)  
  520b6d:	mov    ch,0xfd
  520b6f:	lods   eax,DWORD PTR ds:[esi]
  520b70:	jmp    0x2c3b9f9f
  520b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520b76:	les    ebp,FWORD PTR [edx+eax*2+0x76]
  520b7a:	test   ebx,0x751f957b
  520b80:	lods   eax,DWORD PTR ds:[esi]
  520b81:	inc    edx
  520b82:	sub    ebp,edx
  520b84:	test   BYTE PTR [edx],dh
  520b86:	xchg   BYTE PTR [ecx+esi*8-0x59],bl
  520b8a:	iret   
  520b8b:	loopne 0x520ba4
  520b8d:	int    0x61
  520b8f:	mov    bh,0x1d
  520b91:	push   esi
  520b92:	inc    edx
  520b93:	jmp    0x520b65
  520b95:	cmc    
  520b96:	int3   
  520b97:	push   eax
  520b98:	xchg   esp,eax
  520b99:	lahf   
  520b9a:	push   ebx
  520b9b:	adc    bl,al
  520b9d:	fidivr DWORD PTR [edx]
  520b9f:	sbb    BYTE PTR [ebx-0x7eb4ec67],0x77
  520ba6:	jne    0x520bcd
  520ba8:	xchg   ecx,eax
  520ba9:	in     al,dx
  520baa:	push   eax
  520bab:	cs inc ebp
  520bad:	scas   eax,DWORD PTR es:[edi]
  520bae:	xchg   esp,eax
  520baf:	popa   
  520bb0:	pop    edx
  520bb1:	cmc    
  520bb2:	dec    ebp
  520bb3:	xor    ecx,DWORD PTR [eax+esi*8-0xf]
  520bb7:	or     BYTE PTR [edi],bl
  520bb9:	inc    ecx
  520bba:	mov    bl,0x35
  520bbc:	retf   
  520bbd:	inc    ebx
  520bbe:	inc    esp
  520bbf:	test   DWORD PTR [ebp+0xf27c55a],ecx
  520bc5:	and    eax,ebx
  520bc7:	dec    eax
  520bc8:	push   ecx
  520bc9:	or     DWORD PTR [eax-0xe],esp
  520bcc:	cmp    eax,0xed05470e
  520bd1:	and    eax,DWORD PTR [ebp+0x32]
  520bd4:	hlt    
  520bd5:	push   eax
  520bd6:	(bad)  
  520bd7:	fst    DWORD PTR [esi]
  520bd9:	push   ebp
  520bda:	mov    bl,0x6
  520bdc:	ja     0x520bfb
  520bde:	xchg   edi,eax
  520bdf:	into   
  520be0:	push   ds
  520be1:	sub    cl,BYTE PTR [ebx+0x70]
  520be4:	jno    0x520b67
  520be6:	into   
  520be7:	xor    DWORD PTR [ecx],0xb565ead7
  520bed:	mov    esp,0xb5149901
  520bf2:	call   0xb625:0x2537e6ae
  520bf9:	dec    eax
  520bfa:	test   BYTE PTR [edx],bh
  520bfc:	push   ebx
  520bfe:	loop   0x520c66
  520c00:	adc    eax,0xe447ae11
  520c05:	mov    ebx,0xb2ce9d5f
  520c0a:	stos   BYTE PTR es:[edi],al
  520c0b:	jb     0x520bc2
  520c0d:	je     0x520bb6
  520c0f:	xchg   ebp,eax
  520c10:	out    0xc5,al
  520c12:	inc    ebp
  520c13:	cmp    al,0xbd
  520c15:	xor    bl,al
  520c17:	imul   esp,DWORD PTR [edi+0x4e],0xffffff91
  520c1b:	add    DWORD PTR [eax-0x7765a831],ecx
  520c21:	cmc    
  520c22:	(bad)  
  520c23:	sub    esp,DWORD PTR [edi]
  520c25:	fwait
  520c26:	into   
  520c27:	add    DWORD PTR [ebp+0x305caa61],0x479ead7b
  520c31:	sar    ebx,cl
  520c33:	sub    al,0xe5
  520c35:	test   DWORD PTR [edi-0x2b7d5c4d],eax
  520c3b:	cmc    
  520c3c:	jle    0x520cbc
  520c3e:	je     0x520c1d
  520c40:	shl    dl,cl
  520c42:	pop    ecx
  520c43:	inc    edi
  520c44:	dec    ecx
  520c45:	xchg   ebp,eax
  520c46:	cs popf 
  520c48:	dec    esp
  520c49:	or     BYTE PTR [edx],cl
  520c4b:	xchg   esp,eax
  520c4c:	cmp    DWORD PTR ds:0x286110ef,ebx
  520c52:	jle    0x520c6e
  520c54:	mov    WORD PTR [ebx+0x2f],fs
  520c57:	sub    dl,bh
  520c59:	xor    edi,eax
  520c5b:	cld    
  520c5c:	(bad)  
  520c5d:	add    DWORD PTR ds:0x2f1185f3,edi
  520c63:	sbb    edx,DWORD PTR [esp+edx*1-0x65]
  520c67:	sub    dl,BYTE PTR [edx]
  520c69:	jno    0x520bff
  520c6b:	(bad)  
  520c6c:	mov    cl,0xe3
  520c6e:	popa   
  520c6f:	inc    edi
  520c70:	pop    edi
  520c71:	mov    al,ds:0xcfbe6581
  520c76:	leave  
  520c77:	call   0x890d:0x8d61f2ea
  520c7e:	or     bl,BYTE PTR [edx]
  520c80:	ins    DWORD PTR es:[edi],dx
  520c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  520c82:	pop    es
  520c83:	imul   ecx,DWORD PTR [esi+0x3],0xabede17b
  520c8a:	jnp    0x520c74
  520c8c:	loope  0x520cc0
  520c8e:	or     al,0x3c
  520c90:	mov    ds:0x338bb2f3,al
  520c95:	popa   
  520c96:	lods   eax,DWORD PTR es:[esi]
  520c98:	addr16 or eax,0xe599474d
  520c9e:	mov    edx,0x70f34c6
  520ca3:	mov    cl,0x95
  520ca5:	test   BYTE PTR [esi+0x50],al
  520ca8:	enter  0xb228,0x67
  520cac:	xchg   ebp,eax
  520cad:	mov    ebp,0x4602935c
  520cb2:	mov    eax,0x348704a2
  520cb7:	ins    DWORD PTR es:[edi],dx
  520cb8:	div    DWORD PTR [ebp+0x52]
  520cbb:	mov    dl,0xb2
  520cbd:	clc    
  520cbe:	aam    0x4a
  520cc0:	adc    al,0x44
  520cc2:	into   
  520cc3:	scas   eax,DWORD PTR es:[edi]
  520cc4:	inc    edx
  520cc5:	scas   eax,DWORD PTR es:[edi]
  520cc6:	mov    al,0x24
  520cc8:	inc    ebp
  520cc9:	push   esp
  520cca:	scas   al,BYTE PTR es:[edi]
  520ccb:	sbb    DWORD PTR [edx],edi
  520ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  520cce:	and    edi,DWORD PTR [ebx-0x4]
  520cd1:	bound  esp,QWORD PTR [edi]
  520cd3:	mov    BYTE PTR [esi-0x2d],0x85
  520cd7:	in     eax,dx
  520cd8:	bound  ebp,QWORD PTR [ebp+0x3e668e31]
  520cde:	mov    BYTE PTR [ecx+0x3daf8c67],cl
  520ce4:	add    BYTE PTR [esi-0x9],ch
  520ce7:	rol    BYTE PTR [esi-0x1b0b0701],1
  520ced:	push   0x59478ff7
  520cf2:	dec    eax
  520cf3:	ud1    ebp,edi
  520cf6:	aas    
  520cf7:	movq   mm3,QWORD PTR [edx+0x33]
  520cfb:	out    0xcc,al
  520cfd:	jl     0x520cc8
  520cff:	push   ss
  520d00:	dec    edx
  520d01:	pop    eax
  520d02:	push   0x364f8f43
  520d07:	ins    DWORD PTR es:[edi],dx
  520d08:	adc    BYTE PTR [edi-0x1bb156c9],0xf0
  520d0f:	dec    ebx
  520d10:	dec    esi
  520d11:	mov    ah,0xa1
  520d13:	or     BYTE PTR [ecx-0x73aa13af],al
  520d19:	inc    esi
  520d1a:	mov    bh,0xa5
  520d1c:	pop    edx
  520d1d:	les    eax,FWORD PTR [ebp+0x7a]
  520d20:	add    DWORD PTR [esi+edx*4],ebx
  520d23:	add    BYTE PTR [edi+0x3588147d],bh
  520d29:	hlt    
  520d2a:	stos   BYTE PTR es:[edi],al
  520d2b:	rol    ebp,cl
  520d2d:	dec    eax
  520d2e:	retf   0xeaa3
  520d31:	push   cs
  520d32:	xchg   esi,eax
  520d33:	repz fwait
  520d35:	push   esp
  520d36:	addr16 in al,0x8d
  520d39:	sbb    ecx,ecx
  520d3b:	xchg   esi,eax
  520d3c:	loop   0x520cc7
  520d3e:	aad    0x61
  520d40:	mov    dl,0xa1
  520d42:	rcl    DWORD PTR [edx],cl
  520d44:	neg    BYTE PTR [ecx]
  520d46:	into   
  520d47:	into   
  520d48:	xor    ebx,0x12c3ad3f
  520d4e:	sbb    BYTE PTR [edi+eax*8],dh
  520d51:	mov    esi,0xfe7aac67
  520d56:	fs dec eax
  520d58:	dec    esp
  520d59:	int    0x97
  520d5b:	push   ss
  520d5c:	xor    ebx,DWORD PTR ds:0x4e9c2ce4
  520d62:	dec    eax
  520d63:	out    dx,eax
  520d64:	gs add eax,0x2948d46f
  520d6a:	int    0x33
  520d6c:	sbb    edi,DWORD PTR [eax+0x280ffab7]
  520d72:	fs add eax,0x4083b17b
  520d78:	call   0xa966:0xb5855f89
  520d7f:	jno    0x520de4
  520d81:	inc    edi
  520d82:	jae    0x520df3
  520d84:	add    bh,BYTE PTR [esi+esi*8]
  520d87:	or     eax,0xa2b73c0c
  520d8c:	xor    ecx,DWORD PTR [ebx]
  520d8e:	mov    esi,0xae9ce283
  520d93:	dec    ebx
  520d94:	ss add al,0x8a
  520d97:	add    cl,bh
  520d99:	add    ebp,esp
  520d9b:	cwde   
  520d9c:	inc    ecx
  520d9d:	adc    bl,BYTE PTR [esi]
  520d9f:	fistp  DWORD PTR [edi-0x64]
  520da2:	or     DWORD PTR [eax+eiz*2-0x674f294],esi
  520da9:	cmp    BYTE PTR [ebx+0x57e92667],0x5e
  520db0:	dec    eax
  520db1:	dec    ebp
  520db2:	repnz and edx,DWORD PTR ds:0x489d0fa1
  520db9:	fisttp WORD PTR [ebx]
  520dbb:	in     al,dx
  520dbc:	sub    edi,DWORD PTR [eax-0x1e]
  520dbf:	das    
  520dc0:	outs   dx,BYTE PTR ds:[esi]
  520dc1:	rol    DWORD PTR [esi],cl
  520dc3:	inc    edi
  520dc4:	xchg   esp,eax
  520dc5:	push   ecx
  520dc6:	fisttp QWORD PTR [ecx]
  520dc8:	mov    ah,BYTE PTR [edi+0x7cbfabfe]
  520dce:	dec    edi
  520dcf:	push   0x6a
  520dd1:	es lahf 
  520dd3:	idiv   edi
  520dd5:	in     eax,0xca
  520dd7:	cmc    
  520dd8:	adc    ch,BYTE PTR [edi+0x4c92dcc8]
  520dde:	and    eax,0xf1ad2bd9
  520de3:	nop
  520de4:	ja     0x520d95
  520de6:	sbb    al,0xe7
  520de8:	into   
  520de9:	rcr    DWORD PTR [edi],cl
  520deb:	sbb    dl,al
  520ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520dee:	popf   
  520def:	(bad)  
  520df0:	mov    ebx,0x591cdb44
  520df5:	adc    ch,BYTE PTR [esi+0x38]
  520df8:	or     BYTE PTR [edi+eiz*1+0x696a2199],0x5e
  520e00:	in     eax,dx
  520e01:	sub    eax,0x141fd6cd
  520e06:	add    eax,0xd3ea1592
  520e0b:	cmp    eax,DWORD PTR [eax+ecx*2+0x71]
  520e0f:	mov    edi,0xc05bce74
  520e14:	cmp    BYTE PTR [edi],al
  520e16:	dec    ebp
  520e17:	sbb    esi,ebx
  520e19:	fimul  DWORD PTR [edx+0x431da24d]
  520e1f:	shl    BYTE PTR [esi+0x2e],1
  520e22:	mov    ds:0xe4e6c01,eax
  520e27:	aad    0xe0
  520e29:	mov    al,0xa6
  520e2b:	lahf   
  520e2c:	dec    ebx
  520e2d:	mov    edi,0xc877daf4
  520e32:	fst    DWORD PTR [ebx-0x20]
  520e35:	xchg   ebp,eax
  520e36:	jno    0x520e44
  520e38:	stos   BYTE PTR es:[edi],al
  520e39:	xor    ch,dl
  520e3b:	mov    esi,0x315d33e8
  520e40:	hlt    
  520e41:	dec    ebp
  520e42:	adc    al,0x46
  520e44:	cwde   
  520e45:	inc    esp
  520e46:	sub    edx,DWORD PTR [edx]
  520e48:	sub    BYTE PTR [edi],bl
  520e4a:	scas   al,BYTE PTR es:[edi]
  520e4b:	pop    ecx
  520e4c:	int    0x15
  520e4e:	(bad)  
  520e4f:	out    dx,eax
  520e50:	push   edx
  520e51:	add    al,0x47
  520e53:	xlat   BYTE PTR ds:[ebx]
  520e54:	jae    0x520e83
  520e56:	ficomp WORD PTR [esi+0x57416220]
  520e5c:	and    ah,BYTE PTR [ebx+0x30]
  520e5f:	addr16 inc esp
  520e61:	jge    0x520e5c
  520e63:	sbb    DWORD PTR [ebp+0x25f1f168],ebx
  520e69:	push   0x7b
  520e6b:	mov    ebx,0x4225a0e8
  520e70:	lock fdiv DWORD PTR [edx-0x1]
  520e74:	clc    
  520e75:	mov    DWORD PTR [esi+0x45],esp
  520e78:	xchg   ah,bl
  520e7a:	stos   BYTE PTR es:[edi],al
  520e7b:	les    esi,FWORD PTR [ebp+eax*1+0x19]
  520e7f:	mov    esi,esi
  520e81:	idiv   BYTE PTR [edi+0x21]
  520e84:	out    dx,al
  520e85:	stc    
  520e86:	or     BYTE PTR [ebx-0x36650abd],al
  520e8c:	les    ecx,FWORD PTR [ebx+0x6dc5984d]
  520e92:	test   esp,edx
  520e94:	sbb    al,0x1a
  520e96:	cmp    DWORD PTR [edi+0x3d262833],esp
  520e9c:	pop    esi
  520e9d:	or     eax,DWORD PTR [ecx-0x1c]
  520ea0:	fnstenv [edx]
  520ea2:	sbb    dl,BYTE PTR [esi]
  520ea4:	xor    BYTE PTR [esi-0x52],dl
  520ea7:	jb     0x520e44
  520ea9:	cmp    ebp,DWORD PTR [edi-0x61]
  520eac:	pop    ss
  520ead:	fadd   st,st(5)
  520eaf:	sar    BYTE PTR [esi+0x2a],cl
  520eb2:	lahf   
  520eb3:	dec    edi
  520eb4:	(bad)  
  520eb5:	mov    eax,0x30e96bba
  520eba:	xor    dl,ch
  520ebc:	inc    edx
  520ebd:	pop    ss
  520ebe:	imul   edx,DWORD PTR [ebp-0x6e],0xffffffb5
  520ec2:	jle    0x520ed9
  520ec4:	mov    esi,0x7c5eeeb2
  520ec9:	aam    0xba
  520ecb:	repnz mov WORD PTR [esi+0x27],es
  520ecf:	dec    ebx
  520ed0:	sti    
  520ed1:	pushf  
  520ed2:	xchg   esi,eax
  520ed3:	or     eax,0x9927476b
  520ed8:	popa   
  520ed9:	cmp    DWORD PTR [ecx-0x37],edx
  520edc:	and    eax,DWORD PTR [edx+0x3158c05c]
  520ee2:	mov    dh,cl
  520ee4:	or     ebx,eax
  520ee6:	adc    DWORD PTR [edx-0x63],esi
  520ee9:	push   cs
  520eea:	mov    dh,0x83
  520eec:	shl    DWORD PTR [edi],1
  520eee:	ss add esi,eax
  520ef1:	sub    al,0xcb
  520ef3:	xor    DWORD PTR [esi],eax
  520ef5:	or     ah,0x1f
  520ef8:	int    0xaf
  520efa:	lahf   
  520efb:	jbe    0x520ef8
  520efd:	ficom  WORD PTR [ecx-0x6f]
  520f00:	or     ch,dh
  520f02:	pop    esi
  520f03:	mov    edi,0xeccb6fc9
  520f08:	jmp    0x2ab500ff
  520f0d:	ins    BYTE PTR es:[edi],dx
  520f0e:	or     BYTE PTR [eax+0x49],al
  520f11:	pop    ebx
  520f12:	pushf  
  520f13:	mov    edx,0x1f0b75ae
  520f18:	push   eax
  520f19:	cmp    DWORD PTR [ebp+0x2811bbcc],0xfffffff3
  520f20:	rcl    DWORD PTR [ecx],cl
  520f22:	fst    QWORD PTR [eax]
  520f24:	pop    esi
  520f25:	xchg   ecx,eax
  520f26:	(bad)  
  520f27:	lea    esp,[ecx-0x62be1d6a]
  520f2d:	add    eax,DWORD PTR [ecx]
  520f2f:	push   edi
  520f30:	fsubr  QWORD PTR [eax]
  520f32:	lods   al,BYTE PTR ds:[esi]
  520f33:	in     eax,dx
  520f34:	rol    BYTE PTR ds:0xbb820c59,1
  520f3a:	aas    
  520f3b:	and    DWORD PTR ds:0xa1593aea,0x4c5c4957
  520f45:	xor    DWORD PTR [ebx-0xb9fe858],esi
  520f4b:	xchg   edx,eax
  520f4c:	int    0x91
  520f4e:	js     0x520ee2
  520f50:	xor    al,0x3
  520f52:	add    edi,DWORD PTR [esi+0x21b4b7af]
  520f58:	mov    cl,0x6a
  520f5a:	(bad)  
  520f5b:	cdq    
  520f5c:	inc    ecx
  520f5d:	mov    bh,0xc1
  520f5f:	mov    bl,0x92
  520f61:	and    bl,ah
  520f63:	mov    al,0x16
  520f65:	addr16 ds inc edi
  520f68:	xchg   DWORD PTR [esi-0x159d7860],esp
  520f6e:	add    dh,BYTE PTR [eax]
  520f70:	out    dx,eax
  520f71:	fmul   QWORD PTR [edx]
  520f73:	xchg   ebx,eax
  520f74:	ds dec esi
  520f76:	ins    BYTE PTR es:[edi],dx
  520f77:	stos   BYTE PTR es:[edi],al
  520f78:	xchg   esp,eax
  520f79:	sub    ah,BYTE PTR [ecx+0x7f]
  520f7c:	addr16 data16 jne 0x520ffe
  520f80:	lds    edx,FWORD PTR [edi+0x2f5106de]
  520f86:	test   BYTE PTR [esi],bl
  520f88:	dec    ecx
  520f89:	hlt    
  520f8a:	fst    DWORD PTR [eax-0x2d3d1d7f]
  520f90:	xchg   edi,eax
  520f91:	jmp    0x64f4:0x9573f76e
  520f98:	rol    DWORD PTR [ecx+0x60],0xa
  520f9c:	cmp    BYTE PTR [edx],al
  520f9e:	mov    edx,0x4cccd093
  520fa3:	push   esi
  520fa4:	mov    esi,DWORD PTR [edx-0x6778691d]
  520faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  520fab:	jge    0x520fa3
  520fad:	jge    0x520f48
  520faf:	add    al,0x81
  520fb1:	adc    ch,BYTE PTR [edi]
  520fb3:	mov    ebx,DWORD PTR [edx-0x68623ea3]
  520fb9:	jmp    0xc7fa610c
  520fbe:	stos   DWORD PTR es:[edi],eax
  520fbf:	jnp    0x521026
  520fc1:	(bad)  
  520fc2:	mov    ebx,0x1629208f
  520fc7:	mov    cl,0x47
  520fc9:	ret    0x80d7
  520fcc:	jne    0x521014
  520fce:	xor    al,0x42
  520fd0:	push   ecx
  520fd1:	mov    edx,0xbc8b8465
  520fd6:	(bad)  
  520fd7:	mov    ecx,0xdc3a4295
  520fdc:	mov    al,BYTE PTR [eax]
  520fde:	adc    bl,BYTE PTR [ebp+ebp*4-0x3f01f3ad]
  520fe5:	mov    dl,ch
  520fe7:	jno    0x521051
  520fe9:	mov    ds:0xeef1fcc,eax
  520fee:	mov    DWORD PTR [ebp-0x7f3972f7],ebp
  520ff4:	sbb    BYTE PTR [ecx-0x14bc865e],al
  520ffa:	xchg   esp,eax
  520ffb:	leave  
  520ffc:	repnz enter 0xa38e,0x79
  521001:	cmp    edx,ebx
  521003:	sub    DWORD PTR [edx+0x78],0xffffffd8
  521007:	lods   al,BYTE PTR ds:[esi]
  521008:	inc    esp
  521009:	jmp    0x53518049
  52100e:	cli    
  52100f:	imul   esi,ebx,0xffffff8e
  521012:	mov    eax,0x7ff94b0e
  521017:	adc    esp,DWORD PTR [ebx]
  521019:	pop    edi
  52101a:	inc    edi
  52101b:	mov    ebp,0xf40f6d7c
  521020:	test   DWORD PTR [ecx+0x3a],ebx
  521023:	(bad)  
  521024:	jb     0x521050
  521026:	or     ebp,0xffffff8c
  521029:	dec    edi
  52102a:	nop
  52102b:	lahf   
  52102c:	pop    esp
  52102d:	sbb    DWORD PTR [ebx+0x7b],ecx
  521030:	jne    0x520fda
  521032:	mov    al,0xe9
  521034:	ins    BYTE PTR es:[edi],dx
  521035:	inc    esi
  521036:	mov    ch,0x14
  521038:	pop    edx
  521039:	xchg   bh,bl
  52103b:	push   eax
  52103c:	(bad)  
  52103d:	fwait
  52103e:	jmp    0xc860872c
  521043:	or     dh,BYTE PTR [ebp-0x215349c2]
  521049:	ins    BYTE PTR es:[edi],dx
  52104a:	adc    esp,DWORD PTR [esi-0x3e5f06df]
  521050:	test   DWORD PTR [edi+eiz*2-0x1ffc8808],eax
  521057:	and    BYTE PTR gs:[eax+0x1e953115],0xe6
  52105f:	fdiv   QWORD PTR [ebp+0x27]
  521062:	lds    esi,FWORD PTR [ecx+0x5b3f199f]
  521068:	sbb    DWORD PTR [edi-0x75],esi
  52106b:	cmp    al,0xa3
  52106d:	mov    edi,0x9a3fdb4
  521072:	or     ah,bl
  521074:	and    al,0xb3
  521076:	fsub   st(0),st
  521078:	arpl   di,bx
  52107a:	stos   BYTE PTR es:[edi],al
  52107b:	mov    edx,0x16c8efb0
  521080:	jno    0x52104a
  521082:	jbe    0x5210ac
  521084:	imul   ebp,DWORD PTR [edi+0x5d88d4fe],0x9
  52108b:	iret   
  52108c:	sub    dl,BYTE PTR [ebx+0x2c]
  52108f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  521090:	mov    ds:0x217f5836,al
  521095:	imul   edi,edx,0x35ae918f
  52109b:	jle    0x521035
  52109d:	pop    es
  52109e:	add    esi,edi
  5210a0:	ins    BYTE PTR es:[edi],dx
  5210a1:	sbb    eax,0x21762d3
  5210a6:	or     esi,0xffffff87
  5210a9:	in     al,dx
  5210aa:	mov    eax,ds:0x6007052c
  5210af:	jmp    0x5210e7
  5210b1:	inc    esi
  5210b2:	ss scas eax,DWORD PTR es:[edi]
  5210b4:	(bad)  
  5210b5:	ins    DWORD PTR es:[edi],dx
  5210b6:	je     0x521092
  5210b8:	or     al,0x9d
  5210ba:	outs   dx,BYTE PTR ds:[esi]
  5210bb:	out    dx,eax
  5210bc:	outs   dx,BYTE PTR ds:[esi]
  5210bd:	or     dl,al
  5210bf:	xor    bl,BYTE PTR [ebx-0x554c2209]
  5210c5:	inc    ebx
  5210c6:	sub    BYTE PTR [edx-0x3b],ch
  5210c9:	push   es
  5210ca:	pusha  
  5210cb:	adc    edi,DWORD PTR [ebx+0x13]
  5210ce:	inc    BYTE PTR [eax+edx*4-0x6970527f]
  5210d5:	pop    ecx
  5210d6:	push   0xffffff9e
  5210d8:	adc    ebx,DWORD PTR [edx]
  5210da:	push   esi
  5210db:	shl    BYTE PTR [edi+eax*2-0x80],cl
  5210df:	je     0x5210d7
  5210e1:	mov    al,0x50
  5210e3:	push   ebp
  5210e4:	loop   0x521160
  5210e6:	ins    BYTE PTR es:[edi],dx
  5210e7:	lea    ebx,[edi]
  5210e9:	push   0x46
  5210eb:	xchg   DWORD PTR [ecx],edx
  5210ed:	or     ch,BYTE PTR [esi+ebp*2]
  5210f0:	add    eax,0xe46d0b73
  5210f5:	outs   dx,BYTE PTR ds:[esi]
  5210f6:	rcl    BYTE PTR [ebp-0x2803b5ab],cl
  5210fc:	aaa    
  5210fd:	push   esp
  5210fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5210ff:	adc    al,BYTE PTR [edi+0x1c56066]
  521105:	adc    ecx,DWORD PTR [ecx]
  521107:	xor    DWORD PTR [ebx],0xebc6a1f4
  52110d:	imul   edx,DWORD PTR [eax],0xcb932295
  521113:	mov    bh,0x8e
  521115:	div    BYTE PTR [edi+0x35]
  521118:	ffreep st(6)
  52111a:	jns    0x5210ec
  52111c:	retf   
  52111d:	dec    esi
  52111e:	xor    DWORD PTR [ebx],0xffffffbd
  521121:	fidiv  WORD PTR [edx-0x34c1c8d4]
  521127:	push   ecx
  521128:	les    esi,FWORD PTR [edx+0x77788648]
  52112e:	ret    0x8133
  521131:	aam    0x74
  521133:	mov    bh,0xea
  521135:	xchg   esi,eax
  521136:	mov    dl,0xe2
  521138:	mov    dl,0xff
  52113a:	mov    ebx,0x4d80902f
  52113f:	stos   BYTE PTR es:[edi],al
  521140:	fnstcw WORD PTR [edi+ebp*2-0x441a5835]
  521147:	pushf  
  521148:	jo     0x52117e
  52114a:	lods   al,BYTE PTR ds:[esi]
  52114b:	adc    edx,DWORD PTR [esi+esi*1]
  52114e:	cmp    eax,0xa2de1769
  521153:	ret    
  521154:	add    eax,0x2d3f524b
  521159:	and    eax,0x9b446bd2
  52115e:	test   DWORD PTR [edx],esp
  521160:	cmp    eax,0x1120b770
  521165:	inc    esi
  521166:	or     dl,cl
  521168:	mov    ds:0x5fd06c25,al
  52116d:	(bad)  
  52116e:	fstp   QWORD PTR [eax]
  521170:	sub    eax,0xe445b69b
  521175:	retf   0x2770
  521178:	cmp    ecx,DWORD PTR [edi]
  52117a:	xchg   DWORD PTR [esi-0x40416a6c],edx
  521180:	pop    esi
  521181:	mov    esp,0x64dc771e
  521186:	in     al,0x76
  521188:	xchg   DWORD PTR ss:[ebx-0x5e],eax
  52118c:	popf   
  52118d:	xchg   esp,eax
  52118e:	mov    al,0x79
  521190:	ret    0x19a0
  521193:	cld    
  521194:	out    dx,eax
  521195:	lods   ax,WORD PTR ds:[esi]
  521197:	mov    gs,WORD PTR [edi+0x2]
  52119a:	test   al,0xd0
  52119c:	jp     0x5211cd
  52119e:	aam    0x74
  5211a0:	cmp    al,0xc8
  5211a2:	adc    edx,esp
  5211a4:	repnz mov ebp,cr7
  5211a8:	mov    al,ds:0x583c7af4
  5211ad:	test   al,0xce
  5211af:	inc    esi
  5211b0:	mov    edi,0xc70ea299
  5211b5:	sub    al,0xc7
  5211b7:	xchg   edi,eax
  5211b8:	loope  0x52115a
  5211ba:	dec    ebp
  5211bb:	fdivr  st(1),st
  5211bd:	mov    DWORD PTR [ebx-0x46],ebp
  5211c0:	dec    esi
  5211c1:	lock (bad) 
  5211c3:	lock pop eax
  5211c5:	dec    edi
  5211c6:	test   al,0xd2
  5211c8:	bnd jo 0x5211fd
  5211cb:	jne    0x52118a
  5211cd:	cmp    BYTE PTR [ecx+0x4a853dbf],ch
  5211d3:	dec    eax
  5211d4:	mov    bh,0x92
  5211d6:	call   0x9ddc:0xb6dba0cc
  5211dd:	jecxz  0x521241
  5211df:	idiv   DWORD PTR [esi]
  5211e1:	and    DWORD PTR [eax],ecx
  5211e3:	fld    DWORD PTR [ecx]
  5211e5:	inc    ecx
  5211e6:	out    dx,al
  5211e7:	aas    
  5211e8:	inc    ecx
  5211e9:	es inc edx
  5211eb:	out    dx,al
  5211ec:	mov    bh,0xd4
  5211ee:	push   0xffffffa6
  5211f0:	jp     0x5211e1
  5211f2:	sub    esi,eax
  5211f4:	in     al,dx
  5211f5:	test   edx,ecx
  5211f7:	rol    edx,0x32
  5211fa:	sar    DWORD PTR [ebp+0x3e6477d0],cl
  521200:	sar    DWORD PTR ds:0x94bc0845,0xbd
  521207:	mov    BYTE PTR [edi],0x33
  52120a:	dec    esp
  52120b:	std    
  52120c:	dec    edx
  52120d:	push   ds
  52120e:	inc    edi
  52120f:	cdq    
  521210:	sbb    BYTE PTR [edx],0x32
  521213:	addr16 in eax,dx
  521215:	test   eax,0xc00eba8
  52121a:	mov    WORD PTR [edx-0x53f6af5d],ds
  521220:	fisub  DWORD PTR [ebx+edi*4+0x16]
  521224:	mov    DWORD PTR [eax+0x78],0xb50deffd
  52122b:	jp     0x521272
  52122d:	push   ss
  52122e:	loop   0x5212a8
  521230:	and    eax,0x4e01d3d7
  521235:	inc    ebp
  521236:	add    edi,DWORD PTR ds:0xc781d2ca
  52123c:	mov    bh,0xc9
  52123e:	cs pop es
  521240:	mov    edx,0x8098f576
  521245:	sbb    eax,0x3d935e8d
  52124a:	test   edx,edi
  52124c:	push   ebx
  52124d:	fcomp  DWORD PTR [ecx+0x400137a7]
  521253:	popf   
  521254:	jne    0x521270
  521256:	popf   
  521257:	push   ebx
  521258:	fsub   st(2),st
  52125a:	jl     0x521249
  52125c:	xchg   ebx,eax
  52125d:	je     0x52125d
  52125f:	lock test dh,dl
  521262:	out    dx,eax
  521263:	(bad)  
  521264:	fcom   DWORD PTR [edx+0x13e0ed23]
  52126a:	sub    ch,BYTE PTR [edx-0x8765d3f]
  521270:	mov    ch,0x74
  521272:	pop    ebx
  521273:	mov    ds:0x7f8d2a54,al
  521278:	mov    ch,0xa0
  52127a:	out    0x8c,al
  52127c:	sub    al,dh
  52127e:	dec    esp
  52127f:	push   0x553268e4
  521284:	mov    eax,ds:0xb212e3a
  521289:	out    0x6f,eax
  52128b:	jmp    FWORD PTR [esi-0x2523549]
  521291:	fild   DWORD PTR [esi]
  521293:	int3   
  521294:	pop    eax
  521295:	cmp    dh,cl
  521297:	xor    bl,BYTE PTR [ecx-0x28]
  52129a:	dec    esi
  52129b:	cdq    
  52129c:	xor    esi,DWORD PTR [ebx+esi*4]
  52129f:	sbb    BYTE PTR [ebp-0x3c09e307],ch
  5212a5:	jp     0x5212a5
  5212a7:	mov    ch,0xb6
  5212a9:	test   DWORD PTR ss:[ecx+0x3cc3304],0xb366075a
  5212b4:	cmp    esp,esp
  5212b6:	fst    QWORD PTR [ebx]
  5212b8:	jge    0x52131b
  5212ba:	mov    ecx,DWORD PTR [edi]
  5212bc:	mov    ds:0x82269461,al
  5212c1:	aam    0x61
  5212c3:	das    
  5212c4:	les    edx,FWORD PTR [ecx]
  5212c6:	pop    eax
  5212c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5212c8:	push   es
  5212c9:	mov    ecx,0xc1af05d4
  5212ce:	scas   eax,DWORD PTR es:[edi]
  5212cf:	push   cs
  5212d0:	int3   
  5212d1:	push   ebp
  5212d2:	add    dh,ch
  5212d4:	pop    ss
  5212d5:	test   eax,0x39787dfe
  5212da:	stc    
  5212db:	push   esi
  5212dc:	fs pop edi
  5212de:	xchg   esi,eax
  5212df:	mov    ch,0x17
  5212e1:	ds std 
  5212e3:	outs   dx,DWORD PTR ds:[esi]
  5212e4:	push   ebx
  5212e5:	sbb    dh,BYTE PTR [esi]
  5212e7:	out    0x91,al
  5212e9:	adc    DWORD PTR [eax],0xfc15d94a
  5212ef:	rcr    bh,1
  5212f1:	mov    ds:0x75c83aa,al
  5212f6:	xchg   edx,eax
  5212f7:	shl    DWORD PTR [edi-0x28],cl
  5212fa:	adc    edi,ecx
  5212fc:	xchg   edi,eax
  5212fd:	outs   dx,BYTE PTR ds:[esi]
  5212fe:	inc    eax
  5212ff:	dec    esp
  521300:	jmp    0x52136e
  521302:	std    
  521303:	out    0x4a,al
  521305:	aad    0x7
  521307:	popf   
  521308:	out    0xd2,al
  52130a:	pop    edx
  52130b:	fadd   st,st(1)
  52130d:	jecxz  0x5212ef
  52130f:	push   esp
  521310:	fimul  DWORD PTR [ebp-0x61]
  521313:	adc    esp,esp
  521315:	mov    dl,0x2
  521317:	inc    dx
  521319:	data16 jle 0x52136b
  52131c:	enter  0x3e59,0x8c
  521320:	ja     0x521386
  521322:	jbe    0x5212a6
  521324:	sahf   
  521325:	xor    dh,BYTE PTR [eax-0x3]
  521328:	out    0x7f,al
  52132a:	dec    ebp
  52132b:	inc    ecx
  52132c:	cmp    esp,DWORD PTR [eax+0x1]
  52132f:	or     BYTE PTR [edi],ah
  521331:	rcl    dh,0x80
  521334:	aad    0xe0
  521336:	mov    al,ds:0x4b161c7b
  52133b:	push   edx
  52133c:	cmp    al,0xd3
  52133e:	xor    BYTE PTR [esi+0x5f],0xb1
  521342:	push   0xffffffb4
  521344:	enter  0x7ff0,0x41
  521348:	xor    DWORD PTR [ebx-0x2],0x71c0613f
  52134f:	fwait
  521350:	xor    BYTE PTR [edi],0xb9
  521353:	lds    esp,FWORD PTR [ecx+0x1]
  521356:	xor    DWORD PTR [ebp+0x4ada2bd8],edx
  52135c:	and    DWORD PTR [ebx-0x33],eax
  52135f:	mov    cl,BYTE PTR [edi]
  521361:	mov    al,ds:0xa0563f5
  521366:	jp     0x5213bb
  521368:	pop    edi
  521369:	icebp  
  52136a:	mov    cl,0x35
  52136c:	add    BYTE PTR [esi-0x70],0x44
  521370:	cmp    BYTE PTR [edx-0x453fc59a],ah
  521376:	rcr    ebp,cl
  521378:	loopne 0x5213e0
  52137a:	mov    bh,0x6b
  52137c:	mov    WORD PTR [ecx+0x2cc019b7],ds
  521382:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521383:	daa    
  521384:	hlt    
  521385:	mov    esi,0x48968a08
  52138a:	sbb    dl,BYTE PTR [esi+0x24]
  52138d:	mov    dl,0x57
  52138f:	inc    ecx
  521390:	or     DWORD PTR [esi+0x51d779c1],ebp
  521396:	dec    ecx
  521397:	test   DWORD PTR [edx],ebx
  521399:	mov    ds:0x74fe88a3,eax
  52139e:	push   ebp
  52139f:	outs   dx,DWORD PTR ds:[esi]
  5213a0:	xor    al,0x4e
  5213a2:	inc    edi
  5213a3:	(bad)
  5213a7:	ins    DWORD PTR es:[edi],dx
  5213a8:	outs   dx,BYTE PTR ds:[esi]
  5213a9:	loopne 0x521335
  5213ab:	inc    ebx
  5213ac:	loope  0x521348
  5213ae:	rcl    BYTE PTR [esi+0x1e],0x70
  5213b2:	out    dx,eax
  5213b3:	arpl   WORD PTR [ebx],bx
  5213b5:	mov    esp,0x449717fd
  5213ba:	adc    DWORD PTR [edx],edx
  5213bc:	test   al,0xa9
  5213be:	fld    DWORD PTR [edi]
  5213c0:	stos   BYTE PTR es:[edi],al
  5213c1:	mov    BYTE PTR gs:[ecx*4-0x796ed934],al
  5213c9:	neg    DWORD PTR [ebx+ecx*1+0x72]
  5213cd:	in     al,0xee
  5213cf:	xchg   edx,eax
  5213d0:	pop    edi
  5213d1:	arpl   WORD PTR [eax],ax
  5213d3:	sbb    DWORD PTR [edx-0x11],esi
  5213d6:	mov    DWORD PTR [esi+ecx*4+0x30e769f5],esi
  5213dd:	xor    dl,BYTE PTR [ecx-0x453bdc25]
  5213e3:	mov    esp,0xcfde5f8d
  5213e8:	jns    0x52140d
  5213ea:	into   
  5213eb:	mov    al,0x54
  5213ed:	out    dx,eax
  5213ee:	jg     0x5213c0
  5213f0:	jmp    0x5213fc
  5213f2:	(bad)  
  5213f3:	cmp    eax,0x6833de95
  5213f8:	imul   DWORD PTR [edx-0x13494db2]
  5213fe:	ja     0x5213f4
  521400:	adc    bh,BYTE PTR [eax-0x3a]
  521403:	pop    edx
  521404:	repz inc bx
  521407:	push   0xd267d53d
  52140c:	mov    eax,0x602d792e
  521411:	mov    ebx,0x4bf41fc1
  521416:	fiadd  DWORD PTR [ecx+0x34d67487]
  52141c:	push   esi
  52141d:	xchg   ebp,eax
  52141e:	sbb    DWORD PTR [ebx-0x7276392e],esp
  521424:	mov    esp,0x1ea2ee8c
  521429:	push   ss
  52142a:	add    ecx,edx
  52142c:	ror    BYTE PTR [edi-0x79],0x49
  521430:	pop    ecx
  521431:	aam    0xb7
  521433:	push   esi
  521434:	mov    edx,0x17b7e23c
  521439:	xor    ch,BYTE PTR [ebx]
  52143b:	push   esi
  52143c:	sub    edx,DWORD PTR [ebp+0x1e]
  52143f:	es out dx,al
  521441:	dec    edi
  521442:	ficom  DWORD PTR [eax+ecx*8+0x5b648097]
  521449:	xchg   DWORD PTR fs:[edx+0xc],eax
  52144d:	mov    BYTE PTR [ebx+0x5],dh
  521450:	lds    ebx,FWORD PTR ds:0xeb442363
  521456:	shl    esi,cl
  521458:	inc    DWORD PTR ds:0xb24f6bbb
  52145e:	add    al,0x47
  521460:	in     eax,dx
  521461:	push   esp
  521462:	in     eax,dx
  521463:	or     DWORD PTR [ebx],esi
  521465:	retf   0xeec4
  521468:	dec    ecx
  521469:	ds add eax,0xbe0469fe
  52146f:	test   DWORD PTR [edx],eax
  521471:	(bad)
  521474:	mov    ah,0x7b
  521476:	fs and eax,0x2586d5d
  52147c:	jno    0x52144c
  52147e:	shl    BYTE PTR [edx],cl
  521480:	adc    al,0x1c
  521482:	jns    0x52145c
  521484:	mov    ch,0x77
  521486:	pusha  
  521487:	or     eax,0x5cd5c113
  52148c:	xor    edx,DWORD PTR [ebx+eax*1]
  52148f:	in     al,0x1c
  521491:	repz push eax
  521493:	dec    edx
  521494:	add    al,0x27
  521496:	inc    ecx
  521497:	dec    eax
  521498:	enter  0x7e4d,0xe8
  52149c:	fcmovnb st,st(5)
  52149e:	mov    eax,0xca36d872
  5214a3:	jmp    0x6f63784f
  5214a8:	jge    0x521521
  5214aa:	inc    edx
  5214ab:	pop    esi
  5214ac:	push   esp
  5214ad:	and    eax,0xedb43adc
  5214b2:	loop   0x5214b1
  5214b4:	add    al,0x66
  5214b6:	cli    
  5214b7:	pop    es
  5214b8:	inc    ebx
  5214b9:	sub    cl,dh
  5214bb:	movhps QWORD PTR [esi+0x7c],xmm5
  5214bf:	push   esp
  5214c0:	dec    ebp
  5214c1:	out    0x9c,al
  5214c3:	add    al,0xe8
  5214c5:	xchg   esi,eax
  5214c6:	repnz retf 0x3555
  5214ca:	push   0xba8e0f5
  5214cf:	inc    ebx
  5214d0:	mov    eax,0x480195a0
  5214d5:	aad    0xf3
  5214d7:	imul   ecx,DWORD PTR [ecx],0x2d
  5214da:	out    dx,eax
  5214db:	cs int3 
  5214dd:	cmp    al,0x12
  5214df:	enter  0x82ab,0x52
  5214e3:	das    
  5214e4:	test   al,0xb7
  5214e6:	jbe    0x5214c9
  5214e8:	sbb    al,0x4b
  5214ea:	iret   
  5214eb:	jp     0x5214a5
  5214ed:	or     ebx,esp
  5214ef:	out    0x95,eax
  5214f1:	mov    eax,0xe61b1e84
  5214f6:	and    eax,0x6b2dbac5
  5214fb:	mov    dl,0xf4
  5214fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5214fe:	stos   DWORD PTR es:[edi],eax
  5214ff:	dec    edi
  521500:	lods   eax,DWORD PTR ds:[esi]
  521501:	adc    BYTE PTR [edi+0x37],dh
  521504:	dec    esp
  521505:	or     DWORD PTR [esi-0x7b79aeb2],edi
  52150b:	daa    
  52150c:	cmp    ch,BYTE PTR [ebx]
  52150e:	lock test al,0x67
  521511:	(bad)  
  521512:	push   ebp
  521513:	js     0x5214ea
  521515:	enter  0x19f3,0x3b
  521519:	cmp    al,0x26
  52151b:	push   ds
  52151c:	mov    fs,WORD PTR [eax]
  52151e:	sar    DWORD PTR [edi+0x51fbea9e],cl
  521524:	add    DWORD PTR [ebp+0x3f614696],edx
  52152a:	in     eax,0x69
  52152c:	in     eax,0x2b
  52152e:	test   al,0xe
  521530:	xchg   esp,eax
  521531:	ins    BYTE PTR es:[edi],dx
  521532:	pop    edx
  521533:	adc    al,0x21
  521535:	repz fnstcw WORD PTR [esi]
  521538:	outs   dx,DWORD PTR ds:[esi]
  521539:	mov    al,ds:0xe93cd0e4
  52153e:	repnz pop edx
  521540:	ds loopne 0x5214db
  521543:	pop    ecx
  521544:	cmp    ch,BYTE PTR [esi]
  521546:	mov    bh,0xb8
  521548:	ja     0x521500
  52154a:	lods   eax,DWORD PTR ds:[esi]
  52154b:	cmp    eax,DWORD PTR [edx+0x216c1fe2]
  521551:	add    ecx,DWORD PTR [ebp-0xadf2374]
  521557:	mov    ah,0xa9
  521559:	stos   BYTE PTR es:[edi],al
  52155a:	jge    0x5214e1
  52155c:	push   0x9
  52155e:	dec    edi
  52155f:	dec    ebp
  521560:	mov    al,ds:0x8ed256a1
  521565:	adc    ebp,DWORD PTR [ecx+0x51938e0b]
  52156b:	test   DWORD PTR [ebx],ebp
  52156d:	imul   ebx,edi,0x43de1087
  521573:	cld    
  521574:	cs jmp 0x52157d
  521577:	add    ebp,DWORD PTR [edx+ebp*1]
  52157a:	pushf  
  52157b:	int    0xe9
  52157d:	mov    edi,0x75cce48
  521582:	fs cwde 
  521584:	push   eax
  521585:	cmp    DWORD PTR [ebx+ebp*1+0x6150cc3a],0xd7f4fa24
  521590:	mov    eax,0xcd07ea72
  521595:	xor    BYTE PTR [esi],bh
  521597:	push   eax
  521598:	push   cs
  521599:	(bad)  
  52159a:	fnstsw WORD PTR [ebx+eiz*1+0xd]
  52159e:	cs scas eax,DWORD PTR es:[edi]
  5215a0:	xor    DWORD PTR [edx],edi
  5215a2:	scas   al,BYTE PTR es:[edi]
  5215a3:	outs   dx,DWORD PTR ds:[esi]
  5215a4:	adc    DWORD PTR [ecx+0x45639d5c],edi
  5215aa:	pop    edi
  5215ab:	push   0xd55f33b6
  5215b0:	or     al,0x0
  5215b2:	xchg   edx,eax
  5215b3:	push   cs
  5215b4:	dec    ebp
  5215b5:	outs   dx,DWORD PTR ds:[esi]
  5215b6:	adc    al,0x33
  5215b8:	jge    0x5215f7
  5215ba:	jecxz  0x521606
  5215bc:	xor    eax,0x6de19b7c
  5215c1:	movups xmm7,xmm4
  5215c4:	or     DWORD PTR [ebx],ecx
  5215c6:	xchg   DWORD PTR [esi],eax
  5215c8:	ja     0x521564
  5215ca:	std    
  5215cb:	(bad)  
  5215cf:	ss daa 
  5215d1:	loope  0x5215ab
  5215d3:	mov    bl,0xe8
  5215d5:	cmp    esi,DWORD PTR [eax-0x73]
  5215d8:	je     0x5215bc
  5215da:	adc    BYTE PTR [ecx-0x33398947],dh
  5215e0:	dec    eax
  5215e1:	jne    0x521602
  5215e3:	mov    ah,0x88
  5215e5:	scas   al,BYTE PTR es:[edi]
  5215e6:	rol    BYTE PTR [edi+0x26d9d551],0x60
  5215ed:	shl    DWORD PTR [ebx],cl
  5215ef:	rcr    DWORD PTR [ebx],1
  5215f1:	pop    edx
  5215f2:	sbb    DWORD PTR [edx+0x24e1fe1],ecx
  5215f8:	fstp   TBYTE PTR [esi-0x8]
  5215fb:	or     BYTE PTR [edi+0x47],ch
  5215fe:	and    eax,0xe40097d5
  521603:	iret   
  521604:	fs jle 0x52166b
  521607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521608:	ins    BYTE PTR es:[edi],dx
  521609:	sbb    bh,BYTE PTR [eax+0x4a]
  52160c:	out    0xbe,al
  52160e:	addr16 aad 0x54
  521611:	int    0xe6
  521613:	jecxz  0x5215d7
  521615:	ror    cl,cl
  521617:	xlat   BYTE PTR ds:[ebx]
  521618:	arpl   WORD PTR [ebx+0x7],bp
  52161b:	push   edx
  52161c:	sbb    al,0xe
  52161e:	shr    BYTE PTR [eax-0x4e],1
  521621:	sbb    eax,0xab6662e1
  521626:	div    DWORD PTR [edx+0x129d3d1a]
  52162c:	js     0x5215c9
  52162e:	xchg   esi,eax
  52162f:	adc    ecx,ecx
  521631:	xchg   ebx,eax
  521632:	cmc    
  521633:	not    BYTE PTR [esi]
  521635:	mov    DWORD PTR [ebp-0x31],ebx
  521638:	jge    0x521684
  52163a:	scas   eax,DWORD PTR es:[edi]
  52163b:	gs lahf 
  52163d:	or     al,ah
  52163f:	test   eax,0xc84dec52
  521644:	xlat   BYTE PTR ds:[ebx]
  521645:	jmp    0xc493:0x9fe7594c
  52164c:	jne    0x5216b2
  52164e:	add    DWORD PTR [edi+0x48],ecx
  521651:	call   0x4912:0x18adca6d
  521658:	pop    ebx
  521659:	pop    esi
  52165a:	or     eax,0x5591b608
  52165f:	repnz repnz imul esp,DWORD PTR [edi],0x5c202095
  521667:	data16 rcl BYTE PTR [ebp-0x22],1
  52166b:	stos   BYTE PTR es:[edi],al
  52166c:	out    0xe1,eax
  52166e:	push   ebp
  52166f:	and    eax,0xbd077638
  521674:	retf   0x2296
  521677:	mul    BYTE PTR [eax+0x27]
  52167a:	aad    0x5a
  52167c:	outs   dx,DWORD PTR ds:[esi]
  52167d:	inc    esi
  52167e:	nop
  52167f:	push   esp
  521680:	cmc    
  521681:	inc    edx
  521682:	or     edi,DWORD PTR [ebp-0x23d0041e]
  521688:	or     esp,esi
  52168a:	ret    
  52168b:	lahf   
  52168c:	in     al,dx
  52168d:	scas   al,BYTE PTR es:[edi]
  52168e:	shr    ah,0xf
  521691:	inc    edx
  521692:	dec    esi
  521693:	fimul  DWORD PTR [ebp-0x751cb066]
  521699:	stos   DWORD PTR es:[edi],eax
  52169a:	out    0xa6,eax
  52169c:	(bad)  
  52169e:	cmp    dl,BYTE PTR [edi]
  5216a0:	lock pop ebx
  5216a2:	nop
  5216a3:	fistp  WORD PTR [ebp-0x1f]
  5216a6:	test   eax,0x6c28de99
  5216ab:	adc    BYTE PTR [esi-0x13837700],0x37
  5216b2:	xor    al,0xd7
  5216b4:	mov    bl,0x9c
  5216b6:	fstp   DWORD PTR [esi+eiz*8]
  5216b9:	sahf   
  5216ba:	cmp    ebp,DWORD PTR [esi-0x55]
  5216bd:	hlt    
  5216be:	cmp    esi,DWORD PTR [edi]
  5216c0:	out    0x71,eax
  5216c2:	gs inc esp
  5216c4:	in     eax,0x7f
  5216c6:	jecxz  0x521698
  5216c8:	stos   BYTE PTR es:[edi],al
  5216c9:	pop    ecx
  5216ca:	bound  edi,QWORD PTR [ecx]
  5216cc:	cs repnz loopne 0x521703
  5216d0:	out    dx,al
  5216d1:	js     0x5216e4
  5216d3:	int    0xa9
  5216d5:	pop    eax
  5216d6:	dec    eax
  5216d7:	or     esi,DWORD PTR [ecx]
  5216d9:	pop    ebx
  5216da:	mov    ecx,DWORD PTR [ecx-0x2a]
  5216dd:	pushf  
  5216de:	pusha  
  5216df:	pop    esp
  5216e0:	mov    eax,0x385c4e31
  5216e5:	add    al,0x44
  5216e7:	pop    ebx
  5216e8:	stos   DWORD PTR es:[edi],eax
  5216e9:	jae    0x52172d
  5216eb:	mov    ds:0x7f98fdf5,al
  5216f0:	mov    WORD PTR [ecx-0x7b684210],gs
  5216f6:	loop   0x5216fb
  5216f8:	shr    esi,0xf0
  5216fb:	adc    eax,0x282d41aa
  521700:	das    
  521701:	xchg   ecx,eax
  521702:	movd   mm1,DWORD PTR [ebx]
  521705:	cdq    
  521706:	ins    BYTE PTR es:[edi],dx
  521707:	mov    ah,ch
  521709:	imul   ebx,DWORD PTR [esi-0x4d207f18],0xdb1c2383
  521713:	dec    ecx
  521714:	cmc    
  521715:	push   edi
  521716:	ds ret 
  521718:	test   BYTE PTR [eax+edx*8-0x1c24691c],bh
  52171f:	cs enter 0xac7,0x41
  521724:	dec    eax
  521725:	adc    BYTE PTR [esp+esi*4+0x75b3168b],ah
  52172c:	jle    0x5216c6
  52172e:	imul   esp,DWORD PTR [edi+0x2c92dea4],0xf93d2629
  521738:	int3   
  521739:	mov    ecx,0xb5b86a64
  52173e:	sbb    BYTE PTR [ecx+ecx*1+0x3831291b],bh
  521745:	and    al,0xf5
  521747:	cmp    bh,BYTE PTR [ebp-0x31]
  52174a:	test   eax,0xccb85a5c
  52174f:	into   
  521750:	cld    
  521751:	mov    bl,0x7d
  521753:	std    
  521754:	add    DWORD PTR [eax],esp
  521756:	in     al,0x99
  521758:	popa   
  521759:	mov    ch,0xd6
  52175b:	(bad)  
  52175c:	push   edx
  52175d:	pop    esp
  52175e:	xchg   cl,al
  521760:	xchg   esi,eax
  521761:	fs mov edx,0x330a0d2e
  521767:	add    DWORD PTR [ebx*8+0x6daf9eff],esp
  52176e:	enter  0x62eb,0x32
  521772:	or     DWORD PTR [ebx],0x28
  521775:	iret   
  521776:	and    eax,0x730f8f90
  52177b:	fs pop eax
  52177d:	sahf   
  52177e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52177f:	scas   eax,DWORD PTR es:[edi]
  521780:	dec    esp
  521781:	dec    edi
  521782:	inc    eax
  521783:	add    eax,DWORD PTR cs:[edi+edx*1-0xa]
  521788:	clc    
  521789:	sub    DWORD PTR [esi],eax
  52178b:	fdiv   QWORD PTR [edx+edx*2+0x7a84281b]
  521792:	call   FWORD PTR [edx]
  521794:	push   ds
  521795:	outs   dx,DWORD PTR ds:[esi]
  521796:	daa    
  521797:	loop   0x521736
  521799:	xchg   ebp,eax
  52179a:	stos   BYTE PTR es:[edi],al
  52179b:	xor    DWORD PTR [edx],ebx
  52179d:	cs jmp 0x521723
  5217a0:	lods   eax,DWORD PTR ds:[esi]
  5217a1:	sub    cl,BYTE PTR [edi+0x38d6082d]
  5217a7:	outs   dx,BYTE PTR ds:[esi]
  5217a8:	cmp    eax,0xdc5467db
  5217ad:	mov    ebx,0x406be437
  5217b2:	cmp    dl,BYTE PTR [ebx+edi*8-0xd]
  5217b6:	sbb    DWORD PTR [ebx+eiz*2-0x4b1ecbb2],ebx
  5217bd:	sub    ecx,DWORD PTR [edi+esi*4+0x5f278050]
  5217c4:	fisub  WORD PTR [esi]
  5217c6:	mov    esi,0x679607e7
  5217cb:	adc    BYTE PTR [edx-0x125d9680],al
  5217d1:	or     eax,0x2319d0d7
  5217d6:	lea    edx,[ecx]
  5217d8:	inc    edx
  5217d9:	test   eax,0x9286e69d
  5217de:	and    ch,ch
  5217e0:	daa    
  5217e1:	hlt    
  5217e2:	xlat   BYTE PTR ds:[ebx]
  5217e3:	dec    esp
  5217e4:	ret    0x7372
  5217e7:	or     DWORD PTR [edi+0x32],edx
  5217ea:	sub    esi,DWORD PTR ds:0x49fb5f91
  5217f0:	jg     0x521862
  5217f2:	mov    WORD PTR [edi+0x4f],ss
  5217f5:	or     eax,0x9f2c804d
  5217fa:	sahf   
  5217fb:	jo     0x5217ae
  5217fd:	and    al,0x46
  5217ff:	es stc 
  521801:	inc    ebp
  521802:	xor    al,0x4b
  521804:	push   ds
  521805:	jnp    0x521830
  521807:	push   ds
  521808:	jmp    0xdbe1:0x2622f7c0
  52180f:	aam    0xbd
  521811:	xchg   edx,eax
  521812:	lods   eax,DWORD PTR ds:[esi]
  521813:	xchg   edx,eax
  521814:	adc    BYTE PTR [ebx+0x7014ef60],bh
  52181a:	icebp  
  52181b:	push   ebx
  52181c:	xchg   BYTE PTR [esi-0x785c8fe5],ch
  521822:	(bad)  
  521823:	jne    0x52188d
  521825:	lods   eax,DWORD PTR ds:[esi]
  521826:	outs   dx,DWORD PTR ds:[esi]
  521827:	mov    al,0x95
  521829:	adc    DWORD PTR [eax-0x7],ebx
  52182c:	mov    dl,0xb0
  52182e:	aam    0xdd
  521830:	dec    eax
  521831:	sub    al,0x1c
  521833:	cmc    
  521834:	into   
  521835:	je     0x521804
  521837:	inc    ebp
  521838:	je     0x52184f
  52183a:	xlat   BYTE PTR ds:[ebx]
  52183b:	out    0xe4,eax
  52183d:	loope  0x521878
  52183f:	jmp    0x10a59826
  521844:	imul   DWORD PTR [eax+0x18]
  521847:	stos   DWORD PTR es:[edi],eax
  521848:	mov    edi,0xda19a0c7
  52184d:	push   0x2d62cd93
  521852:	jbe    0x2867838b
  521858:	das    
  521859:	inc    eax
  52185a:	mov    ebx,DWORD PTR [ecx-0x58]
  52185d:	loopne 0x521811
  52185f:	jnp    0x5217eb
  521861:	mov    ah,0x77
  521863:	repz popa 
  521865:	sbb    esp,DWORD PTR fs:[ebp+0x51]
  521869:	pop    ebp
  52186a:	sbb    eax,0x76e58a26
  52186f:	xchg   ecx,eax
  521870:	inc    edi
  521871:	push   edi
  521872:	and    eax,0x4069d2b9
  521877:	or     BYTE PTR [eax+0x5629b0c1],ah
  52187d:	outs   dx,BYTE PTR ds:[esi]
  52187e:	jmp    0x5218b6
  521880:	call   0xb7645b89
  521885:	repnz retf 0x33f5
  521889:	ror    DWORD PTR [edi],0x18
  52188c:	shl    DWORD PTR [edi-0x27869871],cl
  521892:	rcr    ecx,0x8b
  521895:	mov    al,ds:0x3e1b105f
  52189a:	in     eax,dx
  52189b:	neg    BYTE PTR [ebx+0x400bda3e]
  5218a1:	cmp    DWORD PTR [ecx+0x5],eax
  5218a4:	mov    esi,0x3b86288c
  5218a9:	(bad)  
  5218aa:	jle    0x5218e6
  5218ac:	into   
  5218ad:	inc    eax
  5218ae:	pop    ebx
  5218af:	call   0xa5c8c630
  5218b4:	icebp  
  5218b5:	fsub   st(2),st
  5218b7:	outs   dx,DWORD PTR ds:[esi]
  5218b8:	jmp    0xd615c82a
  5218bd:	push   0xe1a16363
  5218c2:	adc    DWORD PTR [eax+eax*8-0x31bd908e],edi
  5218c9:	lahf   
  5218ca:	jmp    0xec22cce3
  5218cf:	adc    edx,edi
  5218d1:	leave  
  5218d2:	mov    al,0xdc
  5218d4:	clc    
  5218d5:	les    ebx,FWORD PTR [ecx-0x35]
  5218d8:	enter  0x7359,0x31
  5218dc:	xor    al,0x1c
  5218de:	push   ecx
  5218df:	sbb    ecx,ebx
  5218e1:	sbb    eax,0xfc3a42ce
  5218e6:	adc    ch,BYTE PTR [esi-0x70]
  5218e9:	loop   0x521934
  5218eb:	jmp    0x5218f2
  5218ed:	add    DWORD PTR [eax],edx
  5218ef:	inc    edx
  5218f0:	(bad)  
  5218f1:	fsubr  QWORD PTR [ecx+0x3b]
  5218f4:	outs   dx,BYTE PTR ds:[esi]
  5218f5:	scas   al,BYTE PTR es:[edi]
  5218f6:	cmc    
  5218f7:	push   ebx
  5218f8:	push   edx
  5218fa:	mov    ds:0x32b191ae,eax
  5218ff:	sahf   
  521900:	inc    ebp
  521901:	fldenv [eax-0x3216a7f2]
  521907:	xor    eax,0xf10109a6
  52190c:	popa   
  52190d:	scas   al,BYTE PTR es:[edi]
  52190e:	fmul   st(0),st
  521910:	cs dec esp
  521912:	mov    ebp,0xad167e6c
  521917:	iret   
  521918:	push   edx
  521919:	mov    WORD PTR [eax+0x14a2a79e],ds
  52191f:	adc    eax,0xf36adca9
  521924:	js     0x52199d
  521926:	leave  
  521927:	call   0xa19d7514
  52192c:	mov    esp,0xf9c36bd8
  521931:	adc    dh,BYTE PTR [ecx-0x1ccb65e8]
  521937:	mov    al,0x7f
  521939:	sub    DWORD PTR [ecx-0x236d4f17],edx
  52193f:	jne    0x52197b
  521941:	sbb    DWORD PTR [ebx],esi
  521943:	rcl    DWORD PTR [ecx+esi*8],cl
  521946:	cwde   
  521947:	jae    0x52197d
  521949:	js     0x521994
  52194b:	xchg   cl,cl
  52194d:	xlat   BYTE PTR ds:[ebx]
  52194e:	cdq    
  52194f:	faddp  st(4),st
  521951:	xchg   ebp,eax
  521952:	or     esp,DWORD PTR gs:[esi+ebx*1+0x4f]
  521957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521958:	test   DWORD PTR [eax+0xe],edi
  52195b:	mov    bl,0xa0
  52195d:	int3   
  52195e:	pop    edi
  52195f:	mov    DWORD PTR [edx-0x427f2505],ebp
  521965:	cmp    al,0x9c
  521967:	cs gs add eax,0xe3b345e2
  52196e:	jns    0x521963
  521970:	stc    
  521971:	mov    eax,0x166d5726
  521976:	imul   esi,DWORD PTR [eax],0xc365f42e
  52197c:	retf   
  52197d:	out    0x27,al
  52197f:	les    esi,FWORD PTR [edi+0x7290c514]
  521985:	mov    al,0xce
  521987:	mov    ebp,0x48a30cf2
  52198c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52198d:	fdivr  QWORD PTR [eax]
  52198f:	sahf   
  521990:	adc    eax,0xb26dccd8
  521995:	cmp    eax,edx
  521997:	jns    0x52191f
  521999:	in     eax,dx
  52199a:	cdq    
  52199b:	xor    bh,BYTE PTR [esi+0x2b51c021]
  5219a1:	push   ds
  5219a2:	ficom  DWORD PTR [esi]
  5219a4:	iret   
  5219a5:	dec    esi
  5219a6:	es into 
  5219a8:	mul    ebp
  5219aa:	fs jp  0x5219db
  5219ad:	ret    
  5219ae:	not    DWORD PTR [edi+esi*1-0x20]
  5219b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5219b3:	add    eax,0x23b222ea
  5219b8:	in     eax,dx
  5219b9:	test   BYTE PTR [ebx-0x4],bl
  5219bc:	es scas eax,DWORD PTR es:[edi]
  5219be:	mov    ch,0x49
  5219c0:	jl     0x5219da
  5219c2:	lods   eax,DWORD PTR ds:[esi]
  5219c3:	popa   
  5219c4:	pop    edx
  5219c5:	jl     0x5219ff
  5219c7:	enter  0x5414,0x36
  5219cb:	lds    edx,FWORD PTR [ebx]
  5219cd:	int3   
  5219ce:	add    BYTE PTR [edx],bh
  5219d0:	inc    ebx
  5219d1:	dec    edi
  5219d2:	imul   esi,ecx,0x2e236ca6
  5219d8:	ins    DWORD PTR es:[edi],dx
  5219d9:	add    DWORD PTR [esp+esi*4],0xffffff88
  5219dd:	push   ecx
  5219de:	add    cl,cl
  5219e0:	imul   ah
  5219e2:	fild   QWORD PTR [esi+0x684a2611]
  5219e8:	jge    0x5219d3
  5219ea:	cmp    cl,BYTE PTR [edx]
  5219ec:	into   
  5219ed:	mov    bh,0xf0
  5219ef:	xor    DWORD PTR [edx],esi
  5219f1:	ror    DWORD PTR [edi+0x41e1350],cl
  5219f7:	ja     0x521a61
  5219f9:	jle    0x521992
  5219fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5219fc:	scas   al,BYTE PTR es:[edi]
  5219fd:	out    0x5b,eax
  5219ff:	mov    ds:0x10130d97,al
  521a04:	jne    0x521a61
  521a06:	adc    ebx,DWORD PTR [ebp+0x16]
  521a09:	mov    edx,0x148a5b42
  521a0e:	imul   ebp,DWORD PTR [eax+eax*2],0xf
  521a12:	test   BYTE PTR [eax-0x1d],ch
  521a15:	push   0xfc82a801
  521a1a:	das    
  521a1b:	aam    0x51
  521a1d:	push   cs
  521a1e:	mov    dh,0xcc
  521a20:	dec    ecx
  521a21:	mov    ds:0x27a4e715,eax
  521a26:	push   es
  521a27:	mov    WORD PTR [edx+0x5a],ds
  521a2a:	mov    ds:0xbebd4aa1,eax
  521a2f:	or     eax,0xcc8d71a
  521a34:	enter  0x9d4b,0x8a
  521a38:	fstp   DWORD PTR [ebp-0x42785c20]
  521a3e:	mov    cl,0x87
  521a40:	sub    eax,0xdb7a3d64
  521a45:	adc    al,0xbc
  521a47:	aas    
  521a48:	inc    ebx
  521a49:	enter  0x1d03,0xdc
  521a4d:	and    DWORD PTR [eax+0x5b],0xffffffb9
  521a51:	cli    
  521a52:	xor    BYTE PTR [esi+0x17],bh
  521a55:	iret   
  521a56:	imul   ebp,DWORD PTR [edx],0xe1c5fac1
  521a5c:	in     al,0x36
  521a5e:	push   0x4fb584fd
  521a63:	mov    bl,0xf9
  521a65:	adc    DWORD PTR [ecx-0x3a],ebx
  521a68:	sti    
  521a69:	xchg   ecx,eax
  521a6a:	push   ebx
  521a6b:	fyl2xp1 
  521a6d:	mov    dl,0xfb
  521a6f:	shr    bh,0x6b
  521a72:	mov    bl,BYTE PTR [ebx-0x5ba1c0b3]
  521a78:	fwait
  521a79:	mov    ebx,fs
  521a7b:	pushf  
  521a7c:	cmc    
  521a7d:	xchg   edi,eax
  521a7e:	dec    esp
  521a7f:	mov    ds:0xcc5dec1b,al
  521a84:	repnz jmp 0x7a06:0x324febb5
  521a8c:	cmp    eax,0x91879b1d
  521a91:	cld    
  521a92:	mov    edx,0x43f86c44
  521a97:	aaa    
  521a98:	fs pop esp
  521a9a:	dec    esi
  521a9b:	inc    esi
  521a9c:	aam    0xd8
  521a9e:	xor    al,ah
  521aa0:	cmp    edx,DWORD PTR [eax]
  521aa2:	retf   
  521aa3:	push   ss
  521aa4:	mov    ebx,0x82bc678b
  521aa9:	pusha  
  521aaa:	retf   
  521aab:	xor    eax,0x5c101980
  521ab0:	cmp    BYTE PTR [edi],ah
  521ab2:	push   ds
  521ab3:	or     BYTE PTR [ebx],ah
  521ab5:	jp     0x521b21
  521ab7:	jno    0x521a47
  521ab9:	add    al,0xfe
  521abb:	repnz adc al,bl
  521abe:	sbb    eax,0x4895641d
  521ac3:	arpl   sp,si
  521ac5:	push   edx
  521ac6:	inc    BYTE PTR [esi+0x6f]
  521ac9:	ss and al,0x7c
  521acc:	test   DWORD PTR [eax+edi*8],edi
  521acf:	outs   dx,DWORD PTR ds:[esi]
  521ad0:	repz cmp ebp,esi
  521ad3:	loop   0x521b17
  521ad5:	adc    ecx,DWORD PTR [edi]
  521ad7:	adc    BYTE PTR [esp+edx*8],0x31
  521adb:	add    eax,0xed367bea
  521ae0:	and    DWORD PTR [edx],ecx
  521ae2:	mov    ds:0x25e24aa2,eax
  521ae7:	jl     0x521a78
  521ae9:	test   al,0xd1
  521aeb:	pop    ss
  521aec:	imul   ebp,esi,0xd6c17bc2
  521af2:	jnp    0x521a96
  521af4:	xchg   edx,eax
  521af5:	cpuid  
  521af7:	repz jns 0x521aab
  521afa:	out    dx,eax
  521afb:	mov    al,ds:0x6c66d357
  521b00:	jnp    0x521ace
  521b02:	retf   0x2b8
  521b05:	xor    esp,edi
  521b07:	xor    eax,0x215cfd75
  521b0c:	lods   al,BYTE PTR ds:[esi]
  521b0d:	mov    eax,ds:0xecc5769
  521b12:	lea    esi,[esi]
  521b14:	mov    esp,0x658e2d8a
  521b19:	rol    BYTE PTR [ecx+0x25d14d96],0x9a
  521b20:	test   eax,0x1609e990
  521b25:	loopne 0x521b6c
  521b27:	cld    
  521b28:	int    0xf
  521b2a:	add    ch,BYTE PTR [edx]
  521b2c:	mov    al,ds:0xc293cf70
  521b31:	xor    DWORD PTR [ecx],0xf0f8129a
  521b37:	or     BYTE PTR [eax-0x3b],ch
  521b3a:	or     DWORD PTR [ecx],eax
  521b3c:	in     al,dx
  521b3d:	push   ebx
  521b3e:	loope  0x521b92
  521b40:	sahf   
  521b41:	jge    0x521aec
  521b43:	into   
  521b44:	jae    0x521b0d
  521b46:	(bad)  
  521b47:	or     DWORD PTR [edi+edx*2-0x12ba6c9a],esp
  521b4e:	icebp  
  521b4f:	inc    esi
  521b50:	sub    bh,0xd6
  521b53:	sar    BYTE PTR [esi],cl
  521b55:	loope  0x521b8c
  521b57:	(bad)  
  521b58:	cdq    
  521b59:	or     dl,BYTE PTR [esi-0x31]
  521b5c:	push   ss
  521b5d:	adc    BYTE PTR [edx],0xae
  521b60:	or     ecx,esp
  521b62:	fs pop eax
  521b64:	fmul   st(4),st
  521b66:	xor    ch,BYTE PTR [edx+0x55af5310]
  521b6c:	inc    edx
  521b6d:	ret    
  521b6e:	jne    0x521bc1
  521b70:	push   esp
  521b71:	mov    ?,WORD PTR [ebx+0x4f725365]
  521b77:	pop    eax
  521b78:	cmp    cl,dh
  521b7a:	loope  0x521b39
  521b7c:	stc    
  521b7d:	mov    ebp,0xfa9a4b48
  521b82:	mov    edx,DWORD PTR [eax+ebp*2]
  521b85:	fist   DWORD PTR [ebx+0x132b22bd]
  521b8b:	test   BYTE PTR [eax+0x204c9f36],dh
  521b91:	popa   
  521b92:	push   ebp
  521b93:	xchg   edx,eax
  521b94:	inc    ebp
  521b95:	push   ebp
  521b96:	and    al,0x71
  521b98:	in     eax,0x77
  521b9a:	mov    dh,0xc4
  521b9c:	dec    DWORD PTR [edi+0x4664b115]
  521ba2:	loope  0x521b9f
  521ba4:	pop    edx
  521ba5:	in     al,0x98
  521ba7:	aas    
  521ba8:	lock aam 0x4f
  521bab:	aam    0x89
  521bad:	pop    es
  521bae:	pop    ecx
  521baf:	and    dl,BYTE PTR [edx+0x104d3cd6]
  521bb5:	xchg   esi,eax
  521bb6:	cmp    esp,DWORD PTR [ecx+0x171b514f]
  521bbc:	pop    ecx
  521bbd:	jne    0x521bff
  521bbf:	and    edi,esp
  521bc1:	xor    DWORD PTR [esi-0x22],edx
  521bc4:	fcmovnu st,st(2)
  521bc6:	add    BYTE PTR [edx+0x13],ah
  521bc9:	addr16 repnz xchg esi,eax
  521bcc:	(bad)  
  521bcf:	call   0x5b8c:0xd66a1cdd
  521bd6:	jno    0x521bae
  521bd8:	push   0x27ef6bf7
  521bdd:	pop    es
  521bde:	sbb    DWORD PTR [ecx-0x4f8c54d7],0x367f907c
  521be8:	repnz add DWORD PTR [esi-0x2b],ecx
  521bec:	dec    edx
  521bed:	in     eax,0x6d
  521bef:	cmp    al,0x7d
  521bf1:	inc    ebx
  521bf2:	xor    DWORD PTR [edx-0x7d2c8aae],ecx
  521bf8:	push   ecx
  521bf9:	or     BYTE PTR [edi+0x7812736],0xe4
  521c00:	add    BYTE PTR [ecx-0x15],cl
  521c03:	add    ecx,0x665e7284
  521c09:	int    0x86
  521c0b:	xchg   esp,eax
  521c0c:	enter  0x56bf,0xd1
  521c10:	mov    BYTE PTR [esi+0x56603e5d],bh
  521c16:	nop
  521c17:	sub    BYTE PTR ds:0x6f2db959,dl
  521c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  521c1e:	mov    bh,0x59
  521c20:	stos   BYTE PTR es:[edi],al
  521c21:	mov    ds:0x486876b7,eax
  521c26:	mov    ch,0x70
  521c28:	fsubr  DWORD PTR [edx+eax*2]
  521c2b:	pop    es
  521c2c:	add    edi,DWORD PTR [ebx]
  521c2e:	movhps QWORD PTR ds:0x7eb9cb7f,xmm5
  521c35:	xor    BYTE PTR [esi-0xb72920],bl
  521c3b:	sbb    al,0xb8
  521c3d:	mov    eax,ds:0x36cbca3e
  521c42:	adc    esp,DWORD PTR [esi+0x6e]
  521c45:	add    eax,0x5227f6b5
  521c4a:	hlt    
  521c4b:	loope  0x521c49
  521c4d:	fdivr  st,st(5)
  521c4f:	sti    
  521c50:	imul   edi,DWORD PTR [eax],0xffffff81
  521c53:	cmp    eax,0xa1052c0e
  521c58:	daa    
  521c59:	rcr    DWORD PTR [edx+0x55],1
  521c5c:	jne    0x521ca1
  521c5e:	iret   
  521c5f:	mov    ecx,?
  521c61:	and    ebx,DWORD PTR [ecx+0xdd218b7]
  521c67:	adc    DWORD PTR [edi+0x23],0xa7c6d717
  521c6e:	shl    DWORD PTR [ebx+0x37],cl
  521c71:	inc    ebp
  521c72:	push   edi
  521c73:	mov    bl,0xef
  521c75:	push   ds
  521c76:	add    eax,0x625be484
  521c7b:	mov    ecx,0xdc7043b8
  521c80:	pop    edi
  521c81:	push   ebp
  521c82:	sbb    eax,0x7fd7d63c
  521c87:	(bad)  
  521c88:	aam    0x79
  521c8a:	push   es
  521c8b:	jp     0x521c30
  521c8d:	ret    0xdac3
  521c90:	cmc    
  521c91:	ss cmp al,0x55
  521c94:	cmp    DWORD PTR [edi-0x2b384ef0],ecx
  521c9a:	add    bh,BYTE PTR [edi+edi*8-0x48914e49]
  521ca1:	in     al,0xf7
  521ca3:	fwait
  521ca4:	pop    edi
  521ca5:	add    DWORD PTR [ebp+0xa],esp
  521ca8:	loopne 0x521cd3
  521caa:	out    0xae,al
  521cac:	(bad)  
  521cad:	js     0x521d01
  521caf:	js     0x521ca4
  521cb1:	gs mov dh,bh
  521cb4:	jl     0x521c42
  521cb6:	cmovns ebp,DWORD PTR [edx+0x4b]
  521cba:	add    edi,DWORD PTR ds:0x74011ba2
  521cc0:	or     edx,DWORD PTR [esp+ebx*8+0x1bf47fcc]
  521cc7:	mov    ebp,0x234f7a72
  521ccc:	and    al,0x56
  521cce:	inc    edi
  521ccf:	je     0x521c84
  521cd1:	sahf   
  521cd2:	ja     0x521c9e
  521cd4:	js     0x521d1e
  521cd6:	push   ss
  521cd7:	inc    esp
  521cd8:	jl     0x521ce6
  521cda:	dec    esp
  521cdb:	test   al,0xf5
  521cdd:	jle    0x521c71
  521cdf:	icebp  
  521ce0:	lahf   
  521ce1:	adc    BYTE PTR [esi],0x2a
  521ce4:	mov    edi,0xaee92a76
  521ce9:	add    DWORD PTR [edi+0x3a],ecx
  521cec:	addr16 ss inc edi
  521cef:	fnstsw WORD PTR [edx-0x52]
  521cf2:	xor    eax,0x94a07ad6
  521cf7:	in     eax,0x96
  521cf9:	mov    gs,eax
  521cfb:	mov    ah,BYTE PTR [eax-0x4e06f79a]
  521d01:	scas   al,BYTE PTR es:[edi]
  521d02:	sbb    ch,bl
  521d04:	ret    
  521d05:	lea    ecx,[edi-0x17b83d53]
  521d0b:	das    
  521d0c:	retf   
  521d0d:	aaa    
  521d0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521d0f:	xchg   BYTE PTR [ecx+0x2c],cl
  521d12:	pop    edx
  521d13:	push   esp
  521d14:	push   ebx
  521d15:	xchg   esi,eax
  521d16:	sub    al,0xd7
  521d18:	xor    BYTE PTR [edx+0x40],bh
  521d1b:	push   0xffffffb7
  521d1d:	jae    0x521d33
  521d1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521d20:	xor    ecx,DWORD PTR [esi+0x59]
  521d23:	and    eax,0x45aa04e5
  521d28:	cmp    bh,BYTE PTR [ebx-0x10949eb0]
  521d2e:	mov    eax,0xfc5e06ec
  521d33:	in     eax,dx
  521d34:	mov    edi,DWORD PTR [edi-0x5ce0bf0e]
  521d3a:	popa   
  521d3b:	and    BYTE PTR [edx-0xce27a7c],al
  521d41:	inc    esp
  521d42:	mov    edi,0x11b1b999
  521d47:	pop    ebp
  521d48:	inc    eax
  521d49:	bound  esi,QWORD PTR [edx+0x3e5ae280]
  521d4f:	scas   al,BYTE PTR es:[edi]
  521d50:	dec    ecx
  521d51:	adc    DWORD PTR [ebp+0x6385982f],esp
  521d57:	add    dl,ch
  521d59:	jne    0x521d2b
  521d5b:	adc    esp,0xffffffdb
  521d5e:	inc    edi
  521d5f:	call   0x1c3819e5
  521d64:	jb     0x521ce7
  521d66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521d67:	jle    0x521d33
  521d69:	jg     0x521d57
  521d6b:	push   0xffffffbe
  521d6d:	sub    al,0x84
  521d6f:	mov    ecx,0xcaf08522
  521d74:	scas   eax,DWORD PTR es:[edi]
  521d75:	(bad)  
  521d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521d77:	mov    al,ds:0x2b2a4197
  521d7c:	(bad)  [ebp-0x396fa13b]
  521d82:	adc    BYTE PTR [esi],0x2e
  521d85:	repz jl 0x521d3f
  521d88:	outs   dx,BYTE PTR ds:[esi]
  521d89:	xor    BYTE PTR [edx+eax*4-0x37],al
  521d8d:	or     DWORD PTR [ecx],edx
  521d8f:	hlt    
  521d90:	in     al,dx
  521d91:	(bad)  
  521d92:	out    dx,eax
  521d93:	sub    esi,DWORD PTR [eax]
  521d95:	fs dec esp
  521d97:	(bad)  
  521d98:	adc    al,0x5
  521d9a:	jmp    0x521d1d
  521d9c:	ins    DWORD PTR es:[edi],dx
  521d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  521d9e:	iret   
  521d9f:	in     al,0x3
  521da1:	mov    dh,0x93
  521da3:	xor    esi,DWORD PTR [ecx+edi*4-0x57f1b799]
  521daa:	fnclex 
  521dac:	test   DWORD PTR [esi+edi*1],0xb0dd3834
  521db3:	jmp    0x97e668a2
  521db8:	dec    esp
  521db9:	pop    esi
  521dba:	jl     0x521d68
  521dbc:	cmp    BYTE PTR [edi+0x76],ah
  521dbf:	mov    esi,0xdeea0777
  521dc4:	dec    edi
  521dc5:	leave  
  521dc6:	out    0x71,eax
  521dc8:	inc    ebp
  521dc9:	mov    ch,0x7a
  521dcb:	mov    WORD PTR [edx+0x7e],gs
  521dce:	adc    edx,0xf502efa9
  521dd4:	mov    dh,0xaf
  521dd6:	jbe    0x521d61
  521dd8:	mov    WORD PTR [ecx+eiz*2+0xd],ss
  521ddc:	call   0xbc2c0df6
  521de1:	inc    eax
  521de2:	cld    
  521de3:	sbb    al,0x73
  521de5:	pop    es
  521de6:	lds    ecx,FWORD PTR [ecx-0x7fae5182]
  521dec:	cmp    DWORD PTR ds:0x37b059e4,edx
  521df2:	pop    ss
  521df3:	cmp    al,dh
  521df5:	jmp    FWORD PTR [edx+0x8a740cf]
  521dfb:	enter  0x9818,0x30
  521dff:	loope  0x521e48
  521e01:	popf   
  521e02:	lahf   
  521e03:	cs pushf 
  521e05:	dec    ebp
  521e06:	mov    edi,DWORD PTR [edx+0x4a92935b]
  521e0c:	xlat   BYTE PTR ds:[ebx]
  521e0d:	hlt    
  521e0e:	fisubr DWORD PTR [edi+0x45d1bcbe]
  521e14:	dec    DWORD PTR [esi+0x57101bde]
  521e1a:	mov    al,ds:0x4f516ade
  521e1f:	xor    ax,0x547b
  521e23:	add    DWORD PTR [esi+ebp*1],edx
  521e26:	loop   0x521dc4
  521e28:	push   ss
  521e29:	xchg   ecx,eax
  521e2a:	and    esi,DWORD PTR [edi+0x72]
  521e2d:	les    ebx,FWORD PTR [eax-0x76]
  521e30:	repnz inc edi
  521e32:	popf   
  521e33:	jnp    0x521ea5
  521e35:	add    BYTE PTR [ebx-0xdea583d],0xc7
  521e3c:	dec    BYTE PTR [ebx]
  521e3e:	mov    eax,0x3ae829b1
  521e43:	lea    ebp,[ebx]
  521e45:	adc    BYTE PTR [ecx-0x7f13716f],bl
  521e4b:	push   0x8fb5c79
  521e50:	xchg   DWORD PTR [edx-0x3868933a],esp
  521e56:	jl     0x521e3a
  521e58:	pop    ss
  521e59:	popa   
  521e5a:	sbb    DWORD PTR [eax],ecx
  521e5c:	call   0xd8860dba
  521e61:	div    BYTE PTR [ecx-0x4324011d]
  521e67:	gs adc al,0x51
  521e6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521e6b:	out    dx,eax
  521e6c:	in     eax,dx
  521e6d:	mov    ebp,0xb081cd55
  521e72:	repnz and bh,BYTE PTR [edi-0x1c]
  521e76:	push   edx
  521e77:	push   esp
  521e78:	inc    esi
  521e79:	add    al,0x15
  521e7b:	xor    ecx,edx
  521e7d:	out    0x33,eax
  521e7f:	shl    DWORD PTR [edx+0x7e],1
  521e82:	sub    cl,bl
  521e84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  521e85:	sub    eax,0x421130d2
  521e8a:	mov    al,ds:0x4363d04b
  521e8f:	sub    eax,0x8a22012b
  521e94:	sub    BYTE PTR [eax+0x10e54258],dl
  521e9a:	imul   BYTE PTR ds:0xc9f5b307
  521ea0:	ins    DWORD PTR es:[edi],dx
  521ea1:	(bad)  
  521ea2:	shr    BYTE PTR [ecx-0x20],cl
  521ea5:	ret    0x9461
  521ea8:	push   ebx
  521ea9:	enter  0xa58a,0x7d
  521ead:	mov    eax,DWORD PTR [ecx-0x1dd4b2b2]
  521eb3:	push   edi
  521eb4:	inc    edx
  521eb5:	mov    cl,0x65
  521eb7:	lock or al,0xef
  521eba:	loop   0x521ed9
  521ebc:	push   es
  521ebd:	aad    0xf6
  521ebf:	xchg   edx,eax
  521ec0:	sbb    eax,0x7a081c03
  521ec5:	and    eax,0xa33e3df0
  521eca:	inc    ecx
  521ecb:	mov    bh,0xb0
  521ecd:	or     DWORD PTR [edi+eiz*1-0x60],esi
  521ed1:	xor    DWORD PTR [ecx+ecx*4+0x6b67c2b4],esi
  521ed8:	fsubr  QWORD PTR [ebx]
  521eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  521edb:	je     0x521f5c
  521edd:	(bad)  
  521ede:	cmp    al,0x73
  521ee0:	sub    esp,DWORD PTR [eax-0x584e8b83]
  521ee6:	or     eax,0x68570f82
  521eeb:	mov    ah,0x3b
  521eed:	jmp    0x6556b234
  521ef2:	imul   esp,DWORD PTR [esi-0x5065681d],0x12ce2135
  521efc:	in     eax,0xab
  521efe:	add    eax,0xb577a3fc
  521f03:	fist   DWORD PTR [ebx]
  521f05:	cmp    al,BYTE PTR [ecx-0x7b]
  521f08:	jb     0x521e8d
  521f0a:	out    dx,eax
  521f0b:	jmp    0x521f14
  521f0d:	leave  
  521f0e:	sbb    eax,0xf891417f
  521f13:	and    al,0xcb
  521f15:	xor    al,0xd9
  521f17:	aas    
  521f18:	xor    eax,ebp
  521f1a:	aam    0x4d
  521f1c:	cwde   
  521f1d:	enter  0x2d6a,0x30
  521f21:	mov    al,0xd4
  521f23:	cwde   
  521f24:	test   BYTE PTR [ecx],0x91
  521f27:	(bad)  
  521f28:	xor    eax,0x57a246ff
  521f2d:	add    al,bl
  521f2f:	jmp    0xad9c:0xf9ec01af
  521f36:	adc    al,0x27
  521f38:	mov    esi,0xc50db17b
  521f3d:	jp     0x521f77
  521f3f:	fs scas al,BYTE PTR es:[edi]
  521f41:	lea    eax,[eax+0x3f5809bb]
  521f47:	fsubp  st(3),st
  521f49:	repnz xor eax,0x646e1f9e
  521f4f:	add    BYTE PTR [esi],bh
  521f51:	sbb    DWORD PTR [ebx-0x65],edx
  521f54:	pop    ss
  521f55:	js     0x521f61
  521f57:	js     0x521fb1
  521f59:	sub    ebp,DWORD PTR [esi+0x71448f86]
  521f5f:	mov    DWORD PTR [ebx+0x9],ecx
  521f62:	call   0x5de1:0x6c6915dc
  521f69:	pusha  
  521f6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  521f6b:	std    
  521f6c:	mov    edx,0xf7beaff5
  521f71:	adc    BYTE PTR [esi],0xc5
  521f74:	jno    0x521f23
  521f76:	into   
  521f77:	cld    
  521f78:	mov    al,al
  521f7a:	adc    eax,0x133e88f8
  521f7f:	jmp    0xdcaba278
  521f84:	xor    ch,ah
  521f86:	mov    eax,0x5fada5b6
  521f8b:	mov    es,WORD PTR [edx-0x3bddd3cb]
  521f91:	or     bh,BYTE PTR [esi-0x16834a73]
  521f97:	fdiv   DWORD PTR [ecx]
  521f99:	das    
  521f9a:	hlt    
  521f9b:	clc    
  521f9c:	mov    cl,0xe6
  521f9e:	(bad)  
  521f9f:	repz xor bh,cl
  521fa2:	sbb    BYTE PTR [ebp-0x8],dl
  521fa5:	imul   eax,ebp,0xffffff94
  521fa8:	sub    dl,BYTE PTR [ecx-0x3c]
  521fab:	pop    edi
  521fac:	xchg   esp,eax
  521fad:	xchg   edi,eax
  521fae:	adc    BYTE PTR [eax],ch
  521fb0:	push   edi
  521fb1:	push   esp
  521fb2:	fsubr  st,st(2)
  521fb4:	pop    ebx
  521fb5:	push   es
  521fb6:	jns    0x522003
  521fb8:	push   ds
  521fb9:	xor    dh,ah
  521fbb:	enter  0xe9c1,0x40
  521fbf:	jns    0x521f8c
  521fc1:	mov    ch,0xc9
  521fc3:	bound  edi,QWORD PTR [ecx]
  521fc5:	xchg   edi,eax
  521fc6:	daa    
  521fc7:	push   ss
  521fc8:	icebp  
  521fc9:	(bad)
  521fcd:	shl    BYTE PTR [ebx-0x6b],cl
  521fd0:	cmp    DWORD PTR [ebp-0xd],ebx
  521fd3:	nop
  521fd4:	stos   BYTE PTR es:[edi],al
  521fd5:	call   0xc865:0xc1437d60
  521fdc:	data16 (bad) 
  521fde:	fisub  DWORD PTR [ebx-0x7b]
  521fe1:	xor    ecx,eax
  521fe3:	sub    eax,0x35d9414c
  521fe8:	clc    
  521fe9:	jae    0x521fed
  521feb:	popf   
  521fec:	push   ebx
  521fed:	es adc al,0xdf
  521ff0:	sbb    dl,BYTE PTR [ebx]
  521ff2:	sbb    al,0xe2
  521ff4:	iret   
  521ff5:	out    dx,al
  521ff6:	cld    
  521ff7:	dec    ebp
  521ff8:	lds    esi,FWORD PTR [edx]
  521ffa:	lods   al,BYTE PTR ds:[esi]
  521ffb:	mov    ebp,DWORD PTR [ebx]
  521ffd:	loopne 0x52206d
  521fff:	jnp    0x52206c
  522001:	in     eax,0x77
  522003:	mov    ah,0x63
  522005:	in     al,0x67
  522007:	xchg   ebp,eax
  522008:	mov    ecx,0x16f6e8cd
  52200d:	xor    ch,al
  52200f:	fidiv  DWORD PTR [eax-0x44c651ab]
  522015:	inc    eax
  522016:	mov    ah,0xc1
  522018:	push   cs
  522019:	inc    edi
  52201a:	mov    ds:0x3fcc0072,al
  52201f:	sbb    ecx,DWORD PTR [ebx-0x38]
  522022:	shl    BYTE PTR [edx+0x6c],1
  522025:	sub    eax,0x78173331
  52202a:	dec    edi
  52202b:	push   ebp
  52202c:	ret    0x9337
  52202f:	sahf   
  522030:	cld    
  522031:	out    0x9e,eax
  522033:	sub    cl,BYTE PTR [ecx+0x62]
  522036:	in     al,0xd8
  522038:	cmp    eax,DWORD PTR [ecx]
  52203a:	sbb    BYTE PTR [eax],dl
  52203c:	pushf  
  52203d:	ror    DWORD PTR [edx+0xe13dd1f],1
  522043:	add    DWORD PTR [ebx-0x5],0x64
  522047:	xor    eax,0x6b88c2a
  52204c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52204d:	data16 sbb al,BYTE PTR [edx]
  522050:	jne    0x521ff1
  522052:	mov    ch,0xb5
  522054:	sub    edi,0x3c234446
  52205a:	sti    
  52205b:	cmp    bl,BYTE PTR [ebp-0x67]
  52205e:	push   ecx
  52205f:	test   eax,edx
  522061:	shr    esp,0x32
  522064:	sub    eax,DWORD PTR [eax-0x633215ba]
  52206a:	and    DWORD PTR [edi+0x17b86a53],ebx
  522070:	mov    dh,0xc9
  522072:	pop    ss
  522073:	adc    DWORD PTR [eax-0x33],edx
  522076:	sar    ecx,0xd2
  522079:	inc    esp
  52207a:	cli    
  52207b:	pop    edi
  52207c:	add    al,0xbe
  52207e:	ds add bl,dh
  522081:	push   ebx
  522082:	fnstsw WORD PTR [ebx]
  522084:	push   cs
  522085:	pop    ds
  522086:	adc    al,0xb
  522088:	std    
  522089:	pop    edi
  52208a:	dec    esi
  52208b:	mov    eax,0xb147a5bb
  522090:	inc    ebx
  522091:	in     al,dx
  522092:	stos   BYTE PTR es:[edi],al
  522093:	sbb    BYTE PTR [edx],cl
  522095:	push   ebx
  522096:	sbb    BYTE PTR [eax],bh
  522098:	sbb    BYTE PTR [esi],cl
  52209a:	jle    0x522057
  52209c:	inc    esi
  52209d:	dec    edi
  52209e:	jl     0x5220be
  5220a0:	mov    ?,WORD PTR [ecx+0x1]
  5220a3:	cli    
  5220a4:	mov    ah,0x4a
  5220a6:	mov    ebx,0xe648f7ae
  5220ab:	sub    eax,0x15139bd4
  5220b0:	iret   
  5220b1:	jmp    0x64404190
  5220b6:	ss in  al,0xcc
  5220b9:	pop    esp
  5220ba:	mov    al,BYTE PTR [edi-0x16]
  5220bd:	inc    edi
  5220be:	scas   al,BYTE PTR es:[edi]
  5220bf:	test   DWORD PTR [edx-0x7ec3bec2],0x8b4eb1e1
  5220c9:	add    eax,0xf7cb349f
  5220ce:	(bad)  
  5220cf:	das    
  5220d0:	inc    edx
  5220d1:	mov    ah,0xc2
  5220d3:	(bad)  
  5220d5:	push   esp
  5220d6:	adc    dh,al
  5220d8:	leave  
  5220d9:	aaa    
  5220da:	fidiv  DWORD PTR [ecx+0x5f63cedb]
  5220e0:	mov    al,ds:0xb1f2aa89
  5220e5:	fmul   QWORD PTR [ecx]
  5220e7:	jb     0x52211f
  5220e9:	xchg   ebp,eax
  5220ea:	push   ecx
  5220eb:	sbb    BYTE PTR [edi+0x13],ah
  5220ee:	out    dx,al
  5220ef:	aam    0x6a
  5220f1:	jge    0x52216a
  5220f3:	xor    DWORD PTR [edx+0x2b],edi
  5220f6:	xor    DWORD PTR [eax],eax
  5220f8:	out    0x74,eax
  5220fa:	mov    al,0x2e
  5220fc:	push   edx
  5220fd:	or     eax,0x45a031d1
  522102:	aam    0x8a
  522104:	pop    esi
  522105:	sti    
  522106:	cmc    
  522107:	stc    
  522108:	mov    dh,0xf7
  52210a:	stos   DWORD PTR es:[edi],eax
  52210b:	in     eax,0xdb
  52210d:	popf   
  52210e:	sahf   
  52210f:	sub    al,0xa0
  522111:	mov    al,0x57
  522113:	loopne 0x52216e
  522115:	adc    eax,0xf0aa17af
  52211a:	das    
  52211b:	add    ch,BYTE PTR [esi+0x5b]
  52211e:	adc    ebx,DWORD PTR [esi]
  522120:	arpl   dx,di
  522122:	push   edi
  522123:	aaa    
  522124:	mov    dh,0x82
  522126:	mov    dl,BYTE PTR [edi-0x31b0e2b]
  52212c:	daa    
  52212d:	div    BYTE PTR [eax-0x866ab16]
  522133:	sub    DWORD PTR [eax+0x6b],edi
  522136:	sbb    bl,ch
  522138:	outs   dx,DWORD PTR ds:[esi]
  522139:	pushf  
  52213a:	push   ebp
  52213b:	mov    edi,0xe8870d01
  522140:	pop    esi
  522141:	retf   0x26f3
  522144:	add    dl,BYTE PTR [ebp+eiz*8+0x59]
  522148:	out    0xa,eax
  52214a:	adc    eax,0xcb1f141f
  52214f:	jnp    0x5221b1
  522151:	adc    al,0x67
  522153:	aaa    
  522154:	leave  
  522155:	adc    ch,BYTE PTR [edi-0x2d]
  522158:	icebp  
  522159:	push   ecx
  52215a:	enter  0x7f54,0x9
  52215e:	pusha  
  52215f:	and    eax,0xba3967df
  522164:	jmp    0xe4f:0xb37bc542
  52216b:	dec    ebx
  52216c:	add    al,0xc5
  52216e:	or     DWORD PTR ds:0x3c258eb3,edi
  522174:	dec    esi
  522175:	sar    DWORD PTR [esi+0x0],cl
  522178:	cli    
  522179:	mov    bh,0xbc
  52217b:	xchg   esp,eax
  52217c:	in     al,dx
  52217d:	call   0x18fa0bb3
  522182:	(bad)  
  522183:	mov    BYTE PTR [ebx],dh
  522185:	mov    eax,0x5348f050
  52218a:	xor    eax,0x84810f40
  52218f:	pop    es
  522190:	test   eax,0x2b9624a2
  522195:	dec    ebp
  522196:	add    DWORD PTR [eax+0x69a04a30],ecx
  52219c:	push   eax
  52219d:	or     DWORD PTR [esi],ecx
  52219f:	jb     0x5221b2
  5221a1:	xor    DWORD PTR cs:[eax-0x7f],ecx
  5221a5:	es sbb eax,0x7e7b5b2d
  5221ab:	pop    ss
  5221ac:	xchg   edi,eax
  5221ad:	push   edi
  5221ae:	aam    0x71
  5221b0:	push   es
  5221b1:	push   edi
  5221b2:	inc    esp
  5221b3:	popf   
  5221b4:	and    al,0x8d
  5221b6:	mov    ecx,0xa6c8ad6b
  5221bb:	es dec edx
  5221bd:	stos   DWORD PTR es:[edi],eax
  5221be:	fwait
  5221bf:	aaa    
  5221c0:	xor    BYTE PTR [esi-0xb92122b],ah
  5221c6:	fldcw  WORD PTR [edx+0x533dc65b]
  5221cc:	jp     0x522199
  5221ce:	mov    DWORD PTR ds:0x51acb2c7,esi
  5221d4:	sbb    al,0x3c
  5221d6:	sbb    BYTE PTR [esi],bl
  5221d8:	not    BYTE PTR [ebp-0x177fa276]
  5221de:	cmp    BYTE PTR [ebx],al
  5221e0:	inc    ebp
  5221e1:	mov    cl,0xe5
  5221e3:	adc    edx,DWORD PTR [ecx]
  5221e5:	dec    ebp
  5221e6:	jmp    0x6f13480c
  5221eb:	add    al,0x6a
  5221ed:	mov    bh,0xa8
  5221ef:	and    eax,0x4cd85624
  5221f4:	(bad)  
  5221f5:	mov    BYTE PTR [ebp-0x12c8c79],cl
  5221fb:	ret    
  5221fc:	dec    eax
  5221fd:	ret    
  5221fe:	loop   0x522237
  522200:	mov    ds:0x71a4eece,eax
  522205:	sub    BYTE PTR [ebp+0x2a212a27],0x9
  52220c:	push   ebx
  52220d:	mov    edi,0xf7de0bc3
  522212:	cmp    eax,0x8b4b0a7b
  522217:	retf   
  522218:	mov    esp,esp
  52221a:	mov    ecx,0xafc5c677
  52221f:	or     DWORD PTR [edx-0x4f],ebp
  522222:	jno    0x522212
  522224:	inc    ecx
  522225:	mov    edx,0xd76ac800
  52222a:	and    BYTE PTR [ecx+ebp*4],bl
  52222d:	jno    0x52227c
  52222f:	(bad)  
  522230:	lods   eax,DWORD PTR ds:[esi]
  522231:	out    dx,eax
  522232:	inc    ebx
  522233:	cli    
  522234:	mov    esp,0xfe144874
  522239:	pop    ebx
  52223a:	inc    edx
  52223b:	arpl   WORD PTR [edx+edi*1],bx
  52223e:	sbb    ecx,DWORD PTR [esi]
  522240:	push   ss
  522241:	cmp    ebx,DWORD PTR [ebx+0x1352871c]
  522247:	aas    
  522248:	cwde   
  522249:	jo     0x522274
  52224b:	addr16 icebp 
  52224d:	jg     0x5221cf
  52224f:	xchg   ecx,eax
  522250:	and    BYTE PTR [edi-0x53],bh
  522253:	push   edi
  522254:	cmp    dh,BYTE PTR [eax+0x41935fef]
  52225a:	inc    edi
  52225b:	out    0xbd,eax
  52225d:	push   ebp
  52225e:	pusha  
  52225f:	fcmovb st,st(5)
  522261:	icebp  
  522262:	inc    ebp
  522263:	ret    0x743c
  522266:	xor    eax,0x5c217221
  52226b:	push   es
  52226c:	mov    BYTE PTR [eax+0x2f],dl
  52226f:	cs mov esi,0x889a885b
  522275:	pusha  
  522276:	icebp  
  522277:	mov    cl,0x63
  522279:	imul   ecx,DWORD PTR [edx+0x17],0xf7d634c1
  522280:	xchg   DWORD PTR [ebp-0x3f],esi
  522283:	fdivp  st(7),st
  522285:	or     eax,DWORD PTR [ebp-0x42]
  522288:	xchg   ebx,eax
  522289:	hlt    
  52228a:	ins    DWORD PTR es:[edi],dx
  52228b:	mov    ah,0xa6
  52228d:	jmp    FWORD PTR [edi+0xddd92a1]
  522293:	js     0x522231
  522295:	mov    al,0xc2
  522297:	and    BYTE PTR [edx],al
  522299:	daa    
  52229a:	fmul   DWORD PTR [ebx-0x30]
  52229d:	rcl    bh,cl
  52229f:	xchg   ecx,eax
  5222a0:	cmp    ch,BYTE PTR [edx]
  5222a2:	pop    edi
  5222a3:	lea    edx,[edi-0x2d]
  5222a6:	mov    esi,0xf8952413
  5222ab:	xor    DWORD PTR [eax+ecx*4-0x4d2e58f8],ebp
  5222b2:	sub    eax,0xec963ef0
  5222b7:	fisubr WORD PTR [ebp+0x2a]
  5222ba:	add    DWORD PTR [ecx-0x7a],esp
  5222bd:	mov    bl,0x53
  5222bf:	test   eax,0xe325a75
  5222c4:	icebp  
  5222c5:	xchg   esp,eax
  5222c6:	cmp    edx,DWORD PTR [edx]
  5222c8:	pusha  
  5222c9:	or     esp,DWORD PTR [edi+0xf]
  5222cc:	popa   
  5222cd:	dec    BYTE PTR [eax+eiz*8-0xa4d7b1f]
  5222d4:	xor    al,BYTE PTR [eax+ebx*1+0x3b39437c]
  5222db:	adc    dl,BYTE PTR [edx]
  5222dd:	dec    esi
  5222de:	pop    ebp
  5222df:	cdq    
  5222e0:	fs pop esi
  5222e2:	pushf  
  5222e3:	(bad)  
  5222e4:	mov    ecx,0x3a5b6971
  5222e9:	add    al,BYTE PTR [edx-0x67]
  5222ec:	stos   BYTE PTR es:[edi],al
  5222ed:	cdq    
  5222ee:	jle    0x5222e0
  5222f0:	add    dh,BYTE PTR [ebx]
  5222f2:	push   esi
  5222f3:	daa    
  5222f4:	mov    al,ds:0x9760b063
  5222f9:	or     BYTE PTR [eax+0x34d02b2f],al
  5222ff:	xor    eax,0xcce51d39
  522304:	push   0xffffffc6
  522306:	or     BYTE PTR [ecx-0x2b],ch
  522309:	mov    WORD PTR [eax-0x5800049b],?
  52230f:	pop    edi
  522310:	sub    eax,0xc8c12349
  522315:	leave  
  522316:	add    al,0x9
  522318:	fs test al,0xc2
  52231b:	sbb    ch,BYTE PTR [edi]
  52231d:	js     0x5222be
  52231f:	or     DWORD PTR gs:[edi+0x7d28dab8],esp
  522326:	sub    al,0xad
  522328:	cli    
  522329:	sub    BYTE PTR [esi-0x10436b75],ch
  52232f:	outs   dx,BYTE PTR ds:[esi]
  522330:	jmp    0xcc63:0xbcadc896
  522337:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  522339:	jne    0x5223a0
  52233b:	mov    bl,BYTE PTR [ecx-0xb105573]
  522341:	pop    ebx
  522342:	and    eax,0xd5a555ec
  522347:	mov    eax,ds:0x9139f5dc
  52234c:	push   cs
  52234d:	stos   BYTE PTR es:[edi],al
  52234e:	inc    esi
  52234f:	dec    edi
  522350:	(bad)  
  522352:	pop    esi
  522353:	imul   ecx,edi,0x6c
  522356:	mov    edx,0x4950f2f0
  52235b:	pop    esi
  52235c:	mov    ebp,0xab1346a7
  522361:	push   ebx
  522362:	adc    dh,BYTE PTR [ebx]
  522364:	cmp    edx,DWORD PTR [edi+0x54]
  522367:	mov    ds:0xc8614268,al
  52236c:	(bad)  
  52236d:	nop
  52236e:	lahf   
  52236f:	enter  0x222e,0x57
  522373:	inc    esp
  522374:	add    BYTE PTR ds:0xb42fb75,dh
  52237a:	lock sbb DWORD PTR es:[ebp-0x269a28e4],esp
  522382:	push   ebx
  522383:	push   ebp
  522384:	and    eax,0x52d06ac0
  522389:	sub    eax,0x59a7e780
  52238e:	aaa    
  52238f:	mov    bl,0x3d
  522391:	or     eax,0x9360b819
  522396:	ins    BYTE PTR es:[edi],dx
  522397:	jae    0x5223b1
  522399:	into   
  52239a:	add    ch,BYTE PTR [ecx]
  52239c:	lahf   
  52239d:	lahf   
  52239e:	icebp  
  52239f:	adc    dl,BYTE PTR [eax]
  5223a1:	mov    eax,ds:0x5e5c65ea
  5223a6:	test   al,0x25
  5223a8:	test   al,0x28
  5223aa:	stc    
  5223ab:	enter  0x80c,0x5b
  5223af:	loop   0x5223dd
  5223b1:	mov    es,WORD PTR [eax+0x63be6791]
  5223b7:	and    bl,BYTE PTR [eax]
  5223b9:	mov    esi,gs
  5223bb:	sbb    al,0x17
  5223bd:	mov    ebx,0x841f0504
  5223c2:	lods   al,BYTE PTR ds:[esi]
  5223c3:	push   es
  5223c4:	or     ecx,0xffffffbc
  5223c7:	push   0x78
  5223c9:	jbe    0x522435
  5223cb:	pop    es
  5223cc:	sub    DWORD PTR [ecx+0x0],edi
  5223cf:	aas    
  5223d0:	fisttp WORD PTR [esi+0x20686047]
  5223d6:	and    dl,BYTE PTR [eax-0x21]
  5223d9:	ja     0x522406
  5223db:	and    BYTE PTR [eax+0x2d60000],ah
  5223e1:	jg     0x522398
  5223e3:	mov    eax,ds:0x960c2019
  5223e8:	fdivr  st(3),st
  5223ea:	leave  
  5223eb:	jl     0x52244d
  5223ed:	dec    ecx
  5223ee:	mov    edi,0xa57e8e0d
  5223f3:	xchg   BYTE PTR [esi],dh
  5223f5:	cmp    eax,DWORD PTR [edx+0x6ecbcf5f]
  5223fb:	jne    0x522417
  5223fd:	mov    ecx,0x5626f36b
  522402:	jae    0x5223ae
  522404:	cwde   
  522405:	xchg   ebp,eax
  522407:	fucomip st,st(6)
  522409:	addr16 gs xchg ebx,eax
  52240c:	fmul   DWORD PTR [edx-0x5f]
  52240f:	retf   
  522410:	das    
  522411:	(bad)  
  522412:	ins    DWORD PTR es:[edi],dx
  522413:	push   cs
  522414:	std    
  522415:	mov    ch,0x24
  522417:	lds    ecx,FWORD PTR [edi-0x66023d21]
  52241d:	sub    ebx,DWORD PTR [edx-0xda20262]
  522423:	ss enter 0x693a,0x5
  522428:	fbstp  TBYTE PTR [eax+0xb6b52b6]
  52242e:	clc    
  52242f:	xlat   BYTE PTR ds:[ebx]
  522430:	xor    al,0x6d
  522432:	sub    BYTE PTR [esi+0x7f],ch
  522435:	bound  ebx,QWORD PTR [ebp+0x23bac4fd]
  52243b:	in     al,dx
  52243c:	rcl    BYTE PTR [ebx-0x5145e6dc],1
  522442:	(bad)  [eax]
  522444:	or     ecx,DWORD PTR [ebp-0x11]
  522447:	aam    0xcf
  522449:	push   ecx
  52244a:	dec    edx
  52244b:	call   0x9330ac0
  522450:	rcr    BYTE PTR ds:[esi+edi*1+0x57],0x10
  522456:	scas   eax,DWORD PTR es:[edi]
  522457:	or     ch,al
  522459:	shl    BYTE PTR ds:0x6337892e,0xb7
  522460:	repz and al,BYTE PTR cs:[esi]
  522464:	jne    0x52241a
  522466:	mov    esi,DWORD PTR [eax]
  522468:	stc    
  522469:	jge    0x5224ab
  52246b:	call   0x73ba:0x1287205c
  522472:	ja     0x5224a7
  522474:	jno    0x5224b6
  522476:	mov    ch,0xf5
  522478:	dec    ebx
  522479:	fistp  DWORD PTR [edi+esi*8]
  52247c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52247d:	scas   al,BYTE PTR es:[edi]
  52247e:	(bad)  
  52247f:	pop    ss
  522480:	xor    edi,DWORD PTR [ecx+ecx*1]
  522483:	push   ebp
  522484:	mov    ds:0x11b851cd,eax
  522489:	xor    dh,BYTE PTR [ecx]
  52248b:	in     eax,0xd2
  52248d:	sub    esp,edi
  52248f:	and    edi,DWORD PTR [eax]
  522491:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522492:	add    ebx,DWORD PTR [esi-0x1f]
  522495:	rcl    esi,0x6e
  522498:	lods   al,BYTE PTR ds:[esi]
  522499:	cmp    ch,BYTE PTR [ecx-0x402589e1]
  52249f:	js     0x522446
  5224a1:	aas    
  5224a2:	cmp    edi,esi
  5224a4:	icebp  
  5224a5:	imul   eax,esi,0xffffffff
  5224a8:	jecxz  0x52247d
  5224aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5224ab:	push   eax
  5224ac:	(bad)  
  5224ad:	pop    ds
  5224ae:	js     0x52246e
  5224b0:	mov    ah,BYTE PTR [esi]
  5224b2:	push   ebx
  5224b3:	adc    BYTE PTR [ecx],dl
  5224b5:	retf   0xcd19
  5224b8:	out    dx,al
  5224b9:	mov    ecx,0x84ffadf1
  5224be:	mov    edx,0x846c6327
  5224c3:	pop    edx
  5224c4:	push   es
  5224c5:	shl    DWORD PTR [ebx+0x61b6ef6e],1
  5224cb:	sbb    eax,0x7195eb36
  5224d0:	addr16 sub dl,bh
  5224d3:	fcomi  st,st(7)
  5224d5:	or     dh,BYTE PTR [esi-0x1e0cad54]
  5224db:	out    0x5f,al
  5224dd:	jmp    0x63c7:0x40536088
  5224e4:	inc    ebx
  5224e5:	or     DWORD PTR [edx-0x68254d61],ecx
  5224eb:	xchg   ebx,eax
  5224ec:	mov    ds:0x936d4f01,eax
  5224f1:	sbb    BYTE PTR [esi-0x48],al
  5224f4:	cdq    
  5224f5:	sub    BYTE PTR [ebx],bl
  5224f7:	inc    esi
  5224f8:	push   edi
  5224f9:	loopne 0x52250c
  5224fb:	popa   
  5224fc:	pop    edx
  5224fd:	out    0xd0,eax
  5224ff:	or     ecx,edi
  522501:	add    al,0xaa
  522503:	lahf   
  522504:	inc    edi
  522505:	loop   0x52250f
  522507:	pop    ss
  522508:	xor    esi,DWORD PTR [ebp-0x11]
  52250b:	add    eax,0x787f764c
  522510:	out    dx,al
  522511:	ins    DWORD PTR es:[edi],dx
  522512:	retf   
  522513:	mov    ch,0x37
  522515:	hlt    
  522516:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522517:	shr    DWORD PTR [esi+0x2ebf3c5d],cl
  52251d:	jmp    0xc2e7:0x7ed14e16
  522524:	sbb    DWORD PTR [ebp-0x2c],ecx
  522527:	xor    DWORD PTR [edi],0x51f3c137
  52252d:	adc    BYTE PTR [ecx+esi*2+0x4a142514],bh
  522534:	mov    DWORD PTR [ecx+eax*2-0x6c62f3da],ebp
  52253b:	and    ecx,edx
  52253d:	adc    eax,0x719f515
  522542:	mov    al,0x2c
  522544:	sbb    al,0x4e
  522546:	mov    al,ds:0x7ba42524
  52254b:	dec    ecx
  52254c:	lahf   
  52254d:	jo     0x522557
  52254f:	lahf   
  522550:	in     eax,0x3b
  522552:	push   ds
  522553:	sub    al,BYTE PTR [eax+esi*4-0x20]
  522557:	inc    ebx
  522558:	or     bl,BYTE PTR [esi-0x190b6218]
  52255e:	jb     0x5224fc
  522560:	aaa    
  522561:	retf   
  522562:	leave  
  522563:	add    dl,BYTE PTR [ecx-0x67]
  522566:	sahf   
  522567:	int3   
  522568:	mov    edx,0x4dc5a08d
  52256d:	mov    ecx,0x6c1c4af3
  522572:	sbb    DWORD PTR [edx+eax*2-0x2f0322ac],edi
  522579:	push   ss
  52257a:	mov    bl,0x50
  52257c:	mov    esi,0x8a047544
  522581:	xchg   edi,eax
  522582:	cs cmp al,0x4a
  522585:	repz gs cwde 
  522588:	cli    
  522589:	mov    al,ds:0xca890210
  52258e:	pop    eax
  52258f:	pop    ecx
  522590:	ds rcr dh,0x3c
  522594:	inc    edx
  522595:	jg     0x5225b1
  522597:	mov    edx,0x8f96a1aa
  52259c:	jb     0x522550
  52259e:	fcmovbe st,st(7)
  5225a0:	xlat   BYTE PTR ds:[ebx]
  5225a1:	add    DWORD PTR [ecx+0x22],edx
  5225a4:	push   edi
  5225a5:	adc    DWORD PTR [edx+0x1951fc01],0xb89eff6e
  5225af:	lock dec ebx
  5225b1:	shr    DWORD PTR [ecx+0x5e],cl
  5225b4:	fsubr  DWORD PTR [esp+ecx*4]
  5225b7:	sbb    BYTE PTR [esi-0x79b53589],cl
  5225bd:	int    0x35
  5225bf:	sub    al,0x88
  5225c1:	jmp    0x91b3:0x8cc4c715
  5225c8:	jmp    0x2ccd:0xafbddf68
  5225cf:	inc    esi
  5225d0:	das    
  5225d1:	sub    eax,0xdb0f6d5a
  5225d6:	push   edi
  5225d7:	and    eax,DWORD PTR [ebx-0x7890da48]
  5225dd:	test   cl,0x15
  5225e0:	lods   al,BYTE PTR ds:[esi]
  5225e1:	stos   BYTE PTR es:[edi],al
  5225e2:	and    al,0xf5
  5225e4:	and    edi,DWORD PTR [edx+0x3f3c2005]
  5225ea:	mov    dl,0x4f
  5225ec:	stc    
  5225ed:	in     al,0xb2
  5225ef:	gs ffree st(1)
  5225f2:	lods   eax,DWORD PTR ds:[esi]
  5225f3:	or     al,al
  5225f5:	int3   
  5225f6:	addr16 pop edi
  5225f8:	in     eax,dx
  5225f9:	mov    ch,BYTE PTR [edx+0x76]
  5225fc:	setns  BYTE PTR [ecx]
  5225ff:	mov    eax,0xaf562fac
  522604:	push   ss
  522605:	and    ch,BYTE PTR ds:0x10d97392
  52260b:	dec    ebx
  52260c:	mov    ss,WORD PTR [ecx]
  52260e:	arpl   WORD PTR [edx+0x78d72c27],bp
  522614:	mov    al,ds:0x2f2376bf
  522619:	test   BYTE PTR ds:0x1336d0e5,ch
  52261f:	aam    0xd1
  522621:	repz repz test BYTE PTR [edx-0x26],bh
  522626:	repnz inc ebp
  522628:	jmp    0x52268f
  52262a:	cmc    
  52262b:	sub    al,BYTE PTR ss:[edx]
  52262e:	or     al,0xe5
  522630:	(bad)  
  522631:	imul   ebx,DWORD PTR [ebx+0x40],0x72
  522635:	xchg   DWORD PTR [ebx-0x25],eax
  522638:	(bad)  
  522639:	lds    edi,FWORD PTR [eax-0x6b]
  52263c:	test   BYTE PTR [ebp-0x1f511d77],dh
  522642:	lods   al,BYTE PTR ds:[esi]
  522643:	loope  0x522629
  522645:	inc    ebx
  522646:	ret    
  522647:	adc    eax,0x100e5a44
  52264d:	xor    dh,BYTE PTR [ecx-0x1b1da2f3]
  522653:	(bad)  
  522654:	jg     0x5226b7
  522656:	dec    ecx
  522657:	xchg   BYTE PTR [eax],dh
  522659:	adc    DWORD PTR [edi-0x4085dcda],0x709910
  522663:	xor    edx,DWORD PTR [esi*8+0x68e07628]
  52266a:	cmp    ch,dl
  52266c:	sub    DWORD PTR [ebx-0x7c12a5fb],0xffffffb8
  522673:	jmp    0x522618
  522675:	push   ds
  522676:	sub    edi,DWORD PTR [esi+0x26]
  522679:	sub    eax,0x56deb182
  52267e:	and    al,0xbe
  522680:	loop   0x5226f4
  522682:	fidiv  DWORD PTR [ecx+0x0]
  522685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  522686:	push   cs
  522687:	int3   
  522688:	sbb    BYTE PTR [esi-0x6d2caf77],ch
  52268e:	sub    esi,ebp
  522690:	mov    es,ebp
  522692:	adc    DWORD PTR [ecx-0x49],0xfe621d4f
  522699:	es pop ds
  52269b:	(bad)  
  52269c:	frstor [esi]
  52269e:	inc    ecx
  52269f:	ficomp WORD PTR [ecx+0x55]
  5226a2:	mov    al,0x90
  5226a4:	call   0x9203:0x7e387251
  5226ab:	rcl    edx,0x7a
  5226ae:	mul    eax
  5226b0:	outs   dx,BYTE PTR ds:[esi]
  5226b1:	lods   eax,DWORD PTR ds:[esi]
  5226b2:	and    DWORD PTR [ecx],ecx
  5226b4:	dec    ebx
  5226b5:	pop    esi
  5226b6:	test   DWORD PTR [ebp*1-0x2b39fe68],ecx
  5226bd:	in     al,0xe9
  5226bf:	mov    ds:0xc21cca38,eax
  5226c4:	push   ecx
  5226c5:	xchg   ebx,eax
  5226c6:	out    dx,al
  5226c7:	pop    ss
  5226c8:	in     al,0x50
  5226ca:	and    al,0xad
  5226cc:	jg     0x522724
  5226ce:	xor    al,0xd
  5226d0:	rcl    DWORD PTR [edx-0x1d],0xb9
  5226d4:	out    dx,eax
  5226d5:	xchg   esp,eax
  5226d6:	fst    QWORD PTR [ecx+0x2]
  5226d9:	add    BYTE PTR [edx+0x52],bh
  5226dc:	je     0x52272d
  5226de:	addr16 sbb al,0xfd
  5226e1:	push   0xda34e0a0
  5226e6:	and    esi,DWORD PTR [ebp-0x14]
  5226e9:	xchg   BYTE PTR [ecx],ah
  5226eb:	sub    edi,DWORD PTR [ecx]
  5226ed:	inc    edx
  5226ee:	iret   
  5226ef:	fs cwde 
  5226f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5226f2:	sub    eax,0xa5ed4e2c
  5226f7:	lods   al,BYTE PTR ds:[esi]
  5226f8:	scas   al,BYTE PTR es:[edi]
  5226f9:	inc    esp
  5226fa:	and    ebp,DWORD PTR [edi+0x1f]
  5226fd:	ficomp DWORD PTR [eax+ebx*1]
  522700:	xchg   esi,eax
  522701:	rsqrtps xmm1,XMMWORD PTR [eax]
  522704:	stos   DWORD PTR es:[edi],eax
  522705:	mov    esp,0x744aac23
  52270a:	push   0xcb77e98e
  52270f:	cmp    ch,dh
  522711:	data16 js 0x522703
  522714:	sub    ah,BYTE PTR [ebp+esi*1-0x7e83f08e]
  52271b:	sub    eax,0x6bd3803d
  522720:	mov    ds,WORD PTR [ecx]
  522722:	mov    ebp,es
  522724:	addr16 mov esp,0xb88cd505
  52272a:	dec    ebp
  52272b:	pop    edi
  52272c:	in     eax,dx
  52272d:	cwde   
  52272e:	adc    eax,0x5cc0c5c2
  522733:	mov    eax,ds:0x147d5102
  522738:	sar    al,cl
  52273a:	je     0x52275c
  52273c:	psubusb mm3,QWORD PTR [edi+0x16]
  522740:	shl    BYTE PTR [eax-0x43bff2f3],0x47
  522747:	jmp    0x70d1:0x29808eba
  52274e:	(bad)  
  52274f:	lock in eax,0x91
  522752:	int    0xbf
  522754:	jns    0x5226e0
  522756:	add    dl,ah
  522758:	fmul   DWORD PTR [edi]
  52275a:	ret    
  52275b:	dec    ecx
  52275c:	leave  
  52275d:	jp     0x522704
  52275f:	int    0x5e
  522761:	aas    
  522762:	scas   eax,DWORD PTR es:[edi]
  522763:	(bad)  
  522764:	push   ebp
  522765:	dec    eax
  522766:	jbe    0x522794
  522768:	popf   
  522769:	imul   edi,ebx,0x5e
  52276c:	nop
  52276d:	xchg   ebx,eax
  52276e:	mov    ah,0x2d
  522770:	push   ebx
  522771:	xor    BYTE PTR [eax+0x1d],bh
  522774:	jo     0x522769
  522776:	pop    ebp
  522777:	sub    DWORD PTR [eax+0x61],eax
  52277a:	pusha  
  52277b:	pop    edx
  52277c:	iret   
  52277d:	hlt    
  52277e:	xor    DWORD PTR [esi-0x249685b6],ebx
  522784:	jns    0x522778
  522786:	dec    edi
  522787:	stos   BYTE PTR es:[edi],al
  522788:	mov    dh,0x65
  52278a:	adc    al,0x75
  52278c:	aaa    
  52278d:	lock ins BYTE PTR es:[edi],dx
  52278f:	stos   BYTE PTR es:[edi],al
  522790:	mov    edx,0xa5adc6df
  522795:	pop    es
  522796:	std    
  522797:	cmp    dl,BYTE PTR [ebp+0x7]
  52279a:	adc    dh,cl
  52279c:	jb     0x52278d
  52279e:	push   ss
  52279f:	not    BYTE PTR ds:[edi]
  5227a2:	outs   dx,DWORD PTR ds:[esi]
  5227a3:	cmp    eax,0xd28e3858
  5227a8:	push   ebp
  5227a9:	xor    al,0x26
  5227ab:	pop    esi
  5227ac:	mov    ds:0x5f049fdc,al
  5227b1:	imul   ebp,DWORD PTR [edi-0x27],0x8
  5227b5:	pushf  
  5227b6:	rcl    BYTE PTR [eax+0x4295268e],0xbb
  5227bd:	add    al,0x45
  5227bf:	dec    ebp
  5227c0:	out    dx,eax
  5227c1:	inc    ebx
  5227c2:	cmp    bh,BYTE PTR [ebx-0x28]
  5227c5:	xor    eax,0xe351405
  5227ca:	stc    
  5227cb:	repnz fwait
  5227cd:	pop    ebx
  5227ce:	inc    edx
  5227cf:	mov    dh,BYTE PTR [edi]
  5227d1:	in     eax,dx
  5227d2:	sti    
  5227d3:	sbb    ecx,eax
  5227d5:	add    bl,BYTE PTR [esi]
  5227d7:	inc    ebx
  5227d8:	cmp    DWORD PTR [eax-0x573809e8],edi
  5227de:	call   esi
  5227e0:	mov    DWORD PTR [ebp-0x3f548fb9],edi
  5227e6:	pop    edx
  5227e7:	xor    edx,DWORD PTR [ebx+0x31f55144]
  5227ed:	dec    esi
  5227ee:	ficom  DWORD PTR [edi+0x44]
  5227f1:	mov    eax,0x58f98aa3
  5227f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5227f7:	push   es
  5227f8:	push   edx
  5227f9:	aaa    
  5227fa:	idiv   DWORD PTR [ebp+0x5318a6a4]
  522800:	jno    0x52281c
  522802:	icebp  
  522803:	push   ecx
  522805:	div    DWORD PTR [ebx]
  522807:	push   cs
  522808:	xor    DWORD PTR [ecx+esi*4+0x2ef6309c],edi
  52280f:	aad    0x36
  522811:	lods   eax,DWORD PTR ds:[esi]
  522812:	mov    al,0x55
  522814:	sbb    DWORD PTR [ebp+0x73],ebp
  522817:	imul   edx,DWORD PTR [esi],0x6c120fb9
  52281d:	jecxz  0x522868
  52281f:	mov    edi,0x935740a0
  522824:	or     DWORD PTR [esi+0x36],eax
  522827:	pop    ds
  522828:	cmp    eax,0x322d9bb2
  52282d:	xlat   BYTE PTR ds:[ebx]
  52282e:	in     al,0x3f
  522830:	add    bl,ch
  522832:	jno    0x522864
  522834:	and    dl,BYTE PTR [edi+0x4da5b3e0]
  52283a:	xchg   edx,eax
  52283b:	jle    0x522892
  52283d:	callw  0x7a7e
  522841:	inc    ebx
  522842:	and    ecx,ecx
  522844:	dec    edx
  522845:	test   eax,0xef7ba66d
  52284a:	(bad)  
  52284b:	fs mov edx,ebp
  52284e:	dec    esp
  52284f:	pushf  
  522850:	push   ebx
  522851:	(bad)  
  522852:	div    esi
  522854:	shl    BYTE PTR [ecx],cl
  522856:	cld    
  522857:	and    al,ah
  522859:	mov    al,ds:0xe4c4b2ea
  52285e:	jnp    0x52286d
  522860:	cmp    ecx,edi
  522862:	or     eax,0x337f6a06
  522867:	cwde   
  522868:	loopne 0x5228e2
  52286a:	mov    edx,0xe49b2656
  52286f:	lea    ecx,[ecx]
  522871:	push   esi
  522872:	inc    eax
  522873:	mov    ebp,edi
  522875:	jge    0x522863
  522877:	mov    dl,dl
  522879:	mov    es,WORD PTR [esi-0x2b1c037b]
  52287f:	dec    edx
  522880:	sub    BYTE PTR [edi],dl
  522882:	or     ebx,DWORD PTR ds:[ecx+0x8f80083]
  522889:	in     al,0xd2
  52288b:	pop    esi
  52288c:	out    0xc,eax
  52288e:	jne    0x522820
  522890:	xchg   DWORD PTR [esi+0x51],esp
  522893:	add    BYTE PTR [edi-0x6c],dh
  522896:	adc    BYTE PTR [edx-0x11ea6af4],bl
  52289c:	xor    dh,0x6c
  52289f:	stc    
  5228a0:	fisttp WORD PTR [edi+eax*2+0x5ff64d94]
  5228a7:	inc    ebx
  5228a8:	add    esp,DWORD PTR [eax]
  5228aa:	or     DWORD PTR ds:0x8c815156,0xc5d9add2
  5228b4:	jo     0x5228f1
  5228b6:	and    ch,ah
  5228b8:	ret    
  5228b9:	add    BYTE PTR [edx+0x4918de26],ch
  5228bf:	cwde   
  5228c0:	sub    cl,ch
  5228c2:	adc    bh,BYTE PTR [ebp+0x6d]
  5228c5:	lea    edi,ds:0x95c3df05
  5228cb:	sub    bl,al
  5228cd:	test   eax,0x807cd470
  5228d2:	sti    
  5228d3:	and    BYTE PTR [ebp-0x6b],0xfa
  5228d7:	inc    esp
  5228d8:	jae    0x522869
  5228da:	jnp    0x5228cf
  5228dc:	clc    
  5228dd:	bound  edi,QWORD PTR [edx]
  5228df:	inc    edi
  5228e0:	cld    
  5228e1:	inc    edx
  5228e2:	sub    bh,BYTE PTR es:[ebp+0x44f54d6a]
  5228e9:	daa    
  5228ea:	call   0xddf294d9
  5228ef:	fdiv   QWORD PTR [edi]
  5228f1:	dec    ebp
  5228f2:	shr    dh,1
  5228f4:	outs   dx,BYTE PTR ds:[esi]
  5228f5:	or     BYTE PTR [ebx-0x71f2af3],dh
  5228fb:	jns    0x52289c
  5228fd:	cmp    eax,0x5d21e059
  522902:	push   ds
  522903:	test   eax,0xd42936f8
  522908:	jecxz  0x522910
  52290a:	push   DWORD PTR [edi]
  52290c:	mov    al,ds:0xc0fc930a
  522911:	in     al,0x35
  522913:	jae    0x52291d
  522915:	ds cld 
  522917:	mov    ecx,DWORD PTR [ebp-0x6c82a886]
  52291d:	scas   eax,DWORD PTR es:[edi]
  52291e:	or     al,0x33
  522920:	jle    0x522927
  522922:	pop    ecx
  522923:	test   edx,ebp
  522925:	cmp    al,0x4
  522927:	hlt    
  522928:	aas    
  522929:	adc    DWORD PTR [esp+edi*1+0x59199994],edi
  522930:	into   
  522931:	or     cl,BYTE PTR [edi+0x46]
  522934:	mov    edx,0x18a54404
  522939:	(bad)  
  52293a:	push   eax
  52293b:	jb     0x522947
  52293d:	mov    ebp,0x354fa688
  522942:	adc    DWORD PTR [edx+0xb],ebp
  522945:	pop    ds
  522946:	cld    
  522947:	frstor [ecx+ebp*4]
  52294a:	sahf   
  52294b:	and    al,0x96
  52294d:	or     esp,0x6dda370d
  522953:	xchg   edi,eax
  522954:	sar    BYTE PTR [esi],cl
  522956:	(bad)  
  522957:	hlt    
  522958:	int    0x78
  52295a:	or     bl,BYTE PTR [ebp+0x2d]
  52295d:	scas   eax,DWORD PTR es:[edi]
  52295e:	sar    esp,1
  522960:	(bad)
  522963:	add    DWORD PTR [ecx+edi*8+0x75d34d75],0xdbc09e61
  52296e:	std    
  52296f:	or     dl,BYTE PTR [edi]
  522971:	jb     0x5229cc
  522973:	outs   dx,DWORD PTR ds:[esi]
  522974:	les    eax,FWORD PTR [esi]
  522976:	mov    BYTE PTR [esi],cl
  522978:	mov    al,0xa1
  52297a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52297b:	rcr    BYTE PTR [eax],1
  52297d:	xor    al,0x79
  52297f:	rcl    DWORD PTR [ebp-0x1cf8efbb],cl
  522985:	enter  0xbdce,0x34
  522989:	sbb    eax,0xe577822e
  52298e:	cmp    al,0xa1
  522990:	cmp    al,BYTE PTR [edx-0x67]
  522993:	pop    edx
  522994:	add    DWORD PTR [eax],ebx
  522996:	loop   0x5229aa
  522998:	cdq    
  522999:	push   0x454b34a9
  52299e:	adc    BYTE PTR [eax+0x290cc788],dh
  5229a4:	adc    al,0x70
  5229a6:	fwait
  5229a7:	inc    ebx
  5229a8:	cwde   
  5229a9:	in     al,dx
  5229aa:	jge    0x5229e5
  5229ac:	pop    edi
  5229ad:	lods   al,BYTE PTR ds:[esi]
  5229ae:	stos   DWORD PTR es:[edi],eax
  5229af:	pop    ds
  5229b0:	call   FWORD PTR [esp+esi*2-0x78]
  5229b4:	ret    0xaf04
  5229b7:	iret   
  5229b8:	addr16 and al,0x83
  5229bb:	lods   eax,DWORD PTR ds:[esi]
  5229bc:	imul   edx,eax,0x30393e24
  5229c2:	dec    edx
  5229c3:	ds gs test eax,0xf8a6b20f
  5229ca:	jno    0x522978
  5229cc:	int    0x7c
  5229ce:	out    dx,al
  5229cf:	push   0x9783f74b
  5229d4:	rol    DWORD PTR [ebp-0x58],cl
  5229d7:	push   cs
  5229d8:	mov    bh,0x85
  5229da:	rcl    ebx,cl
  5229dc:	sub    ebp,DWORD PTR [esi]
  5229de:	xchg   ebp,eax
  5229df:	inc    eax
  5229e0:	fadd   st,st(6)
  5229e2:	int3   
  5229e3:	and    DWORD PTR [ebp-0x12884985],ecx
  5229e9:	xchg   edi,eax
  5229ea:	sbb    al,0xeb
  5229ec:	in     al,dx
  5229ed:	fdiv   DWORD PTR ds:0xa1291e54
  5229f3:	cmp    eax,0xb5dd51bf
  5229f8:	add    DWORD PTR gs:[edx],ebp
  5229fb:	cmp    bl,BYTE PTR [ebp+0x3dc1c07d]
  522a01:	dec    edx
  522a02:	test   DWORD PTR ds:0x7d3d3b03,ebx
  522a08:	fs fwait
  522a0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522a0b:	dec    ebx
  522a0c:	loopne 0x5229bb
  522a0e:	pop    esp
  522a0f:	mov    edx,0x63dcd9b3
  522a14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522a15:	sub    ah,BYTE PTR [eax+ecx*1+0x7bac4040]
  522a1c:	xor    DWORD PTR [ecx+0x7a],esp
  522a1f:	int    0x86
  522a21:	daa    
  522a22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522a23:	inc    esp
  522a24:	(bad)  
  522a25:	std    
  522a26:	dec    ebx
  522a27:	repnz xlat BYTE PTR ds:[ebx]
  522a2a:	sbb    esi,DWORD PTR cs:[ecx]
  522a2d:	fistp  DWORD PTR [esi+0xc]
  522a30:	outs   dx,BYTE PTR ds:[esi]
  522a31:	mov    edx,ss
  522a33:	sbb    eax,DWORD PTR [eax]
  522a35:	adc    esi,esp
  522a37:	in     al,0xd6
  522a39:	cmc    
  522a3a:	daa    
  522a3b:	adc    eax,0xfd653280
  522a40:	pop    edi
  522a41:	jp     0x5229ce
  522a43:	loop   0x522aba
  522a45:	push   cs
  522a46:	arpl   WORD PTR [eax],cx
  522a48:	arpl   WORD PTR [edx],bp
  522a4a:	and    bl,ah
  522a4c:	inc    ebx
  522a4d:	test   DWORD PTR [eax+esi*8],esi
  522a50:	out    dx,eax
  522a51:	add    cl,cl
  522a53:	cld    
  522a54:	xor    al,0xd6
  522a56:	jne    0x522a68
  522a58:	test   DWORD PTR [eax-0x3f],ebp
  522a5b:	pop    edx
  522a5c:	or     BYTE PTR [esi-0x1e],al
  522a5f:	dec    ecx
  522a60:	(bad)  
  522a61:	cdq    
  522a62:	mov    ?,WORD PTR ds:0x7b46ac08
  522a68:	xor    al,0xa2
  522a6a:	jae    0x522a4a
  522a6c:	pop    ebp
  522a6d:	sti    
  522a6e:	shl    DWORD PTR [ebx+ebp*2+0x5d],0x1b
  522a73:	aas    
  522a74:	stc    
  522a75:	or     esp,esp
  522a77:	aaa    
  522a78:	pushf  
  522a79:	fdivp  st(3),st
  522a7b:	stc    
  522a7c:	pop    eax
  522a7d:	ret    0x12e5
  522a80:	xlat   BYTE PTR ds:[ebx]
  522a81:	push   esp
  522a82:	sbb    BYTE PTR [edx-0x33],bh
  522a85:	out    0xe1,al
  522a87:	retf   0x4d54
  522a8a:	and    BYTE PTR [edi-0x53a9ebe1],ah
  522a90:	nop
  522a91:	out    dx,al
  522a92:	cdq    
  522a93:	push   0x7b8c58e3
  522a98:	aad    0xbf
  522a9a:	adc    dh,dl
  522a9c:	mov    al,ds:0x95fe4238
  522aa1:	jbe    0x522ac6
  522aa3:	gs mov ecx,0x47d9ac95
  522aa9:	push   eax
  522aaa:	jne    0x522aaa
  522aac:	clc    
  522aad:	int    0x53
  522aaf:	loopne 0x522afe
  522ab1:	dec    esi
  522ab2:	add    ebx,DWORD PTR [ecx-0x25]
  522ab5:	inc    ecx
  522ab6:	xchg   edi,eax
  522ab7:	push   eax
  522ab8:	icebp  
  522ab9:	xor    eax,0x57c4c7d2
  522abe:	ror    DWORD PTR [esi],1
  522ac0:	dec    edx
  522ac1:	js     0x522ad5
  522ac3:	mov    esp,0xca4184b
  522ac8:	(bad)  [ecx+edx*8-0x31218385]
  522acf:	cli    
  522ad0:	cmp    ah,BYTE PTR [edi-0x1177e9ea]
  522ad6:	or     al,0xe2
  522ad8:	mov    ds:0xbfd9a21c,al
  522add:	arpl   WORD PTR [edi-0x71],bx
  522ae0:	in     al,dx
  522ae1:	mov    esi,0x571dc82f
  522ae6:	pushf  
  522ae7:	mov    bh,0x83
  522ae9:	jecxz  0x522b34
  522aeb:	mov    bh,0xc3
  522aed:	call   0x5aa5:0x7bc297ff
  522af4:	into   
  522af5:	and    edi,esp
  522af7:	mov    eax,ds:0x5f5ca963
  522afc:	xchg   DWORD PTR [edi-0x264ce040],eax
  522b02:	pop    edx
  522b03:	aam    0x5
  522b05:	rcl    al,1
  522b07:	jecxz  0x522aa4
  522b09:	xchg   DWORD PTR [esi],eax
  522b0b:	lods   al,BYTE PTR ss:[esi]
  522b0d:	stos   BYTE PTR es:[edi],al
  522b0e:	mov    ah,0xad
  522b10:	or     bh,BYTE PTR [ecx+0x2b0b1435]
  522b16:	add    al,0xfc
  522b18:	sub    esi,DWORD PTR [edi+ecx*8]
  522b1b:	dec    edi
  522b1c:	lea    esp,[ebx]
  522b1e:	rcl    DWORD PTR ds:0xd3cfc58b,1
  522b24:	ret    
  522b25:	mov    cl,dh
  522b27:	and    BYTE PTR [ecx],0xfd
  522b2a:	cmc    
  522b2b:	or     ebx,eax
  522b2d:	(bad)  
  522b2e:	pop    esp
  522b2f:	das    
  522b30:	cwde   
  522b31:	test   BYTE PTR [eax+0x5c779d5a],cl
  522b37:	mov    eax,0x5c3984aa
  522b3c:	cmc    
  522b3d:	and    al,0xf8
  522b3f:	mov    DWORD PTR ds:0x26fe0bd9,eax
  522b45:	sbb    dl,BYTE PTR [ecx+0x58]
  522b48:	xchg   edi,eax
  522b49:	nop
  522b4a:	repnz pop esi
  522b4c:	mov    ds:0x20e7cfe9,eax
  522b51:	mov    ebx,0x215a9582
  522b56:	js     0x522b73
  522b58:	aad    0x2b
  522b5a:	aaa    
  522b5b:	pop    esp
  522b5c:	mov    edx,0xf16f5e9d
  522b61:	loop   0x522b26
  522b63:	or     dl,bh
  522b65:	push   0xbd46c887
  522b6a:	push   ecx
  522b6b:	repnz stos DWORD PTR es:[edi],eax
  522b6d:	loope  0x522afa
  522b6f:	call   0xaa10:0xaa188006
  522b76:	sub    DWORD PTR [ebx-0x21],0x5be82984
  522b7d:	push   0xccc5e936
  522b82:	pusha  
  522b83:	int3   
  522b84:	or     edi,DWORD PTR [esi+0x493f15d0]
  522b8a:	retf   0x19d4
  522b8d:	xchg   edi,eax
  522b8e:	int    0xb7
  522b90:	sbb    DWORD PTR [ebp-0x42],ebx
  522b93:	xchg   BYTE PTR [ebx+esi*4-0x49f480f5],bl
  522b9a:	mov    al,0x3f
  522b9c:	adc    esi,DWORD PTR [esi+0x62]
  522b9f:	push   0x49
  522ba1:	outs   dx,BYTE PTR ds:[esi]
  522ba2:	inc    edi
  522ba3:	loope  0x522bbb
  522ba5:	push   cs
  522ba6:	scas   al,BYTE PTR es:[edi]
  522ba7:	adc    ebp,esp
  522ba9:	mov    dh,BYTE PTR [edi-0x2c]
  522bac:	daa    
  522bad:	cs and al,0x53
  522bb0:	push   0xde7d18e6
  522bb5:	(bad)  
  522bb6:	pop    esi
  522bb7:	push   eax
  522bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  522bb9:	ins    DWORD PTR es:[edi],dx
  522bba:	and    DWORD PTR [edi-0x46],ebp
  522bbd:	je     0x522c01
  522bbf:	scas   eax,DWORD PTR es:[edi]
  522bc0:	mov    edx,0xfc952ef5
  522bc5:	das    
  522bc6:	repnz mov ds:0x76600f40,al
  522bcc:	iret   
  522bcd:	mov    DWORD PTR ds:[ecx+0x35],0x6cb27e79
  522bd5:	data16 jle 0x522be9
  522bd8:	pusha  
  522bd9:	xor    esp,DWORD PTR [ebp-0x501caa8e]
  522bdf:	sub    BYTE PTR ds:0x5d21e1fd,bh
  522be5:	xor    eax,0x671d410e
  522bea:	outs   dx,DWORD PTR ds:[esi]
  522beb:	ficom  WORD PTR [ebx+eiz*4+0x2d]
  522bef:	scas   eax,DWORD PTR es:[edi]
  522bf0:	sbb    edi,DWORD PTR [ecx-0x3f]
  522bf3:	mov    bl,BYTE PTR [edi-0x6f]
  522bf6:	sbb    dh,BYTE PTR [ecx-0x24]
  522bf9:	lods   eax,DWORD PTR ds:[esi]
  522bfa:	sbb    DWORD PTR [ecx],esi
  522bfc:	es mov ch,0x8e
  522bff:	pop    ecx
  522c00:	dec    eax
  522c01:	or     dh,BYTE PTR [esi+0x46bcd75e]
  522c07:	mov    cl,0xe9
  522c09:	xchg   ecx,eax
  522c0a:	daa    
  522c0b:	adc    eax,0x632cdf8d
  522c10:	jge    0x522c3a
  522c12:	jns    0x522c65
  522c14:	pop    ss
  522c15:	shl    BYTE PTR [ebx+0xe],1
  522c18:	push   es
  522c19:	rcl    edx,0x7c
  522c1c:	arpl   WORD PTR [eax],cx
  522c1e:	jb     0x522bc1
  522c20:	dec    ebp
  522c21:	popf   
  522c22:	lds    ebp,FWORD PTR [esi-0x5a]
  522c25:	sbb    dl,BYTE PTR [ecx-0x2c]
  522c28:	lock out dx,eax
  522c2a:	mov    ch,0xe5
  522c2c:	pop    ebp
  522c2d:	inc    esp
  522c2e:	xchg   ebx,eax
  522c2f:	clc    
  522c30:	loope  0x522be3
  522c32:	shl    edi,1
  522c34:	call   0x574efcd2
  522c39:	mov    dl,0x87
  522c3b:	lock inc eax
  522c3d:	ss xchg ebx,eax
  522c3f:	jno    0x522c5f
  522c41:	mov    al,ds:0xa3beb2e7
  522c46:	sub    DWORD PTR [ebp-0x62d22f62],eax
  522c4c:	bound  esp,QWORD PTR [ebx+0x41]
  522c4f:	fcomp  QWORD PTR [ecx+ebx*4]
  522c52:	mov    bh,0xbf
  522c54:	mov    edi,0x609f1cf6
  522c59:	push   ds
  522c5a:	and    eax,0xd1e6394
  522c5f:	push   ebx
  522c60:	dec    eax
  522c61:	imul   ecx,DWORD PTR [edx+0x4d5e54c5],0xa0b46bf
  522c6b:	sbb    al,0xea
  522c6d:	dec    ecx
  522c6e:	push   ecx
  522c6f:	pop    ebx
  522c70:	sbb    DWORD PTR [edi],edi
  522c72:	ja     0x522c07
  522c74:	sbb    BYTE PTR [edx],cl
  522c76:	pop    eax
  522c77:	jns    0x522c2e
  522c79:	aaa    
  522c7a:	adc    BYTE PTR [ebp-0x747b3d76],ah
  522c80:	mov    eax,0x6020878e
  522c85:	adc    BYTE PTR [ebp+0xbe846e],ch
  522c8b:	dec    edi
  522c8c:	adc    al,0x8e
  522c8e:	jne    0x522cc1
  522c90:	data16 sub al,0x10
  522c93:	and    eax,0xddac2cd3
  522c98:	mov    eax,0x40e8714c
  522c9d:	mov    ch,0x39
  522c9f:	mov    ah,0x97
  522ca1:	pop    esp
  522ca2:	hlt    
  522ca3:	push   ebx
  522ca4:	inc    ebp
  522ca5:	pop    esp
  522ca6:	scas   eax,DWORD PTR es:[edi]
  522ca7:	aad    0x82
  522ca9:	lods   al,BYTE PTR ds:[esi]
  522caa:	daa    
  522cab:	retf   
  522cac:	lds    edi,FWORD PTR [ebx+0x16]
  522caf:	int    0x78
  522cb1:	outs   dx,DWORD PTR ds:[esi]
  522cb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522cb3:	add    eax,0x5cae941e
  522cb8:	ins    BYTE PTR es:[edi],dx
  522cb9:	stc    
  522cba:	inc    BYTE PTR [edx+0x2696da49]
  522cc0:	sub    dh,cl
  522cc2:	and    BYTE PTR [ecx],dl
  522cc4:	sbb    al,0x5e
  522cc6:	iret   
  522cc7:	push   es
  522cc8:	je     0x522d2f
  522cca:	rcr    ecx,1
  522ccc:	fsub   DWORD PTR [eax+0x76de3dea]
  522cd2:	maxps  xmm0,XMMWORD PTR [eax-0xdbac300]
  522cd9:	sbb    DWORD PTR [esi+0x78],edi
  522cdc:	lods   eax,DWORD PTR ds:[esi]
  522cdd:	cmp    bh,dh
  522cdf:	pop    edi
  522ce0:	test   DWORD PTR [esi],ebp
  522ce2:	jno    0x522cab
  522ce4:	daa    
  522ce5:	add    BYTE PTR [ecx+0x69333e82],cl
  522ceb:	inc    esp
  522cec:	dec    ebx
  522ced:	jp     0x522d65
  522cef:	mov    eax,0x9b298ef6
  522cf4:	cld    
  522cf5:	stos   BYTE PTR es:[edi],al
  522cf6:	pop    ds
  522cf7:	data16 (bad) 
  522cf9:	push   edx
  522cfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522cfb:	cli    
  522cfc:	mov    edx,DWORD PTR [esi-0x341b1f8]
  522d02:	sbb    eax,0x3c128bae
  522d07:	mov    al,0x8f
  522d09:	pop    ebp
  522d0a:	pushf  
  522d0b:	push   edi
  522d0c:	fs push edx
  522d0e:	lahf   
  522d0f:	push   ecx
  522d10:	icebp  
  522d11:	shl    DWORD PTR [esi+ecx*4],cl
  522d14:	clc    
  522d15:	lock aaa 
  522d17:	xor    DWORD PTR [edx-0x4f],eax
  522d1a:	adc    DWORD PTR [esi],edx
  522d1c:	ret    0x2a39
  522d1f:	jmp    0x522d92
  522d21:	pop    ds
  522d22:	push   ebx
  522d23:	es mov eax,0xeefaf5fc
  522d29:	dec    eax
  522d2a:	outs   dx,BYTE PTR ds:[esi]
  522d2b:	mov    bh,cl
  522d2d:	or     ah,BYTE PTR [eax]
  522d2f:	jne    0x522cc2
  522d31:	fld    TBYTE PTR [ebp-0x21]
  522d34:	dec    edx
  522d35:	adc    BYTE PTR [ebp-0x5d],cl
  522d38:	xchg   esp,eax
  522d39:	fcom   QWORD PTR [ebx+0x7c]
  522d3c:	mov    esi,0x8270aa4a
  522d41:	call   0xcdd9e752
  522d46:	xor    al,0x3b
  522d48:	in     al,dx
  522d49:	push   esi
  522d4a:	ret    
  522d4b:	in     eax,0xa8
  522d4d:	repz js 0x522cff
  522d50:	stos   DWORD PTR es:[edi],eax
  522d51:	repnz fisttp WORD PTR [edi-0x6a69bbe1]
  522d58:	jp     0x522d2b
  522d5a:	(bad)  
  522d5c:	ins    DWORD PTR es:[edi],dx
  522d5d:	pop    es
  522d5e:	enter  0xda3c,0xb8
  522d62:	jno    0x522da8
  522d64:	mov    ch,0xc1
  522d66:	ins    DWORD PTR es:[edi],dx
  522d67:	add    DWORD PTR [ecx],esp
  522d69:	push   0x61
  522d6b:	pushf  
  522d6c:	push   ds
  522d6d:	mov    dh,0x2d
  522d6f:	jmp    0x2d7abb08
  522d74:	mov    ch,0x6e
  522d76:	jmp    0xef0d:0xad3c6dd1
  522d7d:	mov    esp,ebp
  522d7f:	or     DWORD PTR [eax],ebx
  522d81:	or     al,0x9a
  522d83:	sbb    esi,DWORD PTR [ebx+0x5f84ca61]
  522d89:	dec    esp
  522d8a:	pop    ecx
  522d8b:	cmp    DWORD PTR [esi],eax
  522d8d:	hlt    
  522d8e:	jns    0x522df8
  522d90:	and    DWORD PTR [eax+0x17],0xffffffe4
  522d94:	pop    esi
  522d95:	sbb    bl,BYTE PTR [ebp+0x9a95caf]
  522d9b:	int    0x4c
  522d9d:	mov    edi,0x59e24622
  522da2:	jle    0x522de3
  522da4:	cmc    
  522da5:	fsub   DWORD PTR [ebp+0x32]
  522da8:	inc    esi
  522da9:	mov    al,0xb9
  522dab:	js     0x522e23
  522dad:	mov    ebx,0xc9f2e2ac
  522db2:	fist   DWORD PTR [edx]
  522db4:	out    dx,al
  522db5:	popf   
  522db6:	sub    eax,0xeb671609
  522dbb:	test   al,0xc
  522dbd:	adc    al,0xce
  522dbf:	sbb    dh,BYTE PTR [edi+0x20]
  522dc2:	adc    al,0x20
  522dc4:	adc    dl,al
  522dc6:	out    dx,eax
  522dc7:	jp     0x522e3e
  522dc9:	test   al,0xdb
  522dcb:	gs jo  0x522e1a
  522dce:	std    
  522dcf:	addr16 jae 0x522de6
  522dd2:	xor    ch,bl
  522dd4:	fsub   DWORD PTR [ebx+0x74010cd2]
  522dda:	mov    edi,0xccf047a6
  522ddf:	inc    edi
  522de0:	and    esp,DWORD PTR [ebp-0x73]
  522de3:	neg    DWORD PTR ds:0x242dc050
  522de9:	xchg   ebp,eax
  522dea:	jp     0x522e50
  522dec:	sar    DWORD PTR [ebx+0x39],1
  522def:	sub    BYTE PTR [esi+0x46],dl
  522df2:	icebp  
  522df3:	call   0xbd826668
  522df8:	jmp    0x3144663
  522dfd:	cmp    eax,0x761ef2c5
  522e02:	pop    ss
  522e03:	or     al,BYTE PTR [ebp+0x1872531a]
  522e09:	fwait
  522e0a:	and    DWORD PTR [edi+0x61a119ac],0x62
  522e11:	dec    edi
  522e12:	call   0x5bc9:0x7d277867
  522e19:	and    ch,BYTE PTR [ecx+0x45]
  522e1c:	mov    esi,0x865e94f9
  522e21:	add    eax,0x65890704
  522e26:	popf   
  522e27:	jp     0x522daa
  522e29:	push   ebp
  522e2a:	mov    ds:0xdb433017,eax
  522e2f:	add    eax,0xe691606a
  522e34:	jo     0x522ea8
  522e36:	sub    ch,BYTE PTR [eax]
  522e38:	and    al,0x18
  522e3a:	sub    ebx,DWORD PTR [ebx-0x35]
  522e3d:	dec    ebp
  522e3e:	dec    edi
  522e3f:	int3   
  522e40:	jb     0x522e66
  522e42:	pop    ecx
  522e43:	xor    BYTE PTR [edi-0x5ff284d9],0x40
  522e4a:	hlt    
  522e4b:	jecxz  0x522df8
  522e4d:	(bad)  
  522e4e:	jnp    0x522e40
  522e50:	sbb    DWORD PTR [esi-0x500a3513],ebp
  522e56:	pushf  
  522e57:	cmp    ebx,ecx
  522e59:	pop    ebp
  522e5a:	retf   
  522e5b:	pop    esi
  522e5c:	pop    esp
  522e5d:	mov    edx,0x4b4f3286
  522e62:	popa   
  522e63:	pop    ecx
  522e64:	fs (bad) 
  522e66:	cld    
  522e67:	imul   ecx,DWORD PTR [edx-0x50],0xf0adade9
  522e6e:	test   BYTE PTR [ecx+eiz*2-0x4ca1bff1],ch
  522e75:	jno    0x522e8e
  522e77:	dec    esi
  522e78:	mov    esi,0xadf23ffe
  522e7d:	lods   al,BYTE PTR ds:[esi]
  522e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  522e7f:	mov    al,ds:0xda660887
  522e84:	fsubr  DWORD PTR [ecx+0x40]
  522e87:	xor    al,BYTE PTR ds:0xcdead494
  522e8d:	das    
  522e8e:	or     BYTE PTR [edx-0xd],al
  522e91:	mov    bh,0xab
  522e93:	(bad)  
  522e94:	xchg   edx,eax
  522e95:	mov    ecx,0xabd01a76
  522e9a:	sub    eax,0x3cf2f95c
  522e9f:	jb     0x522e78
  522ea1:	loop   0x522e25
  522ea3:	sub    DWORD PTR [ecx-0x260a5583],ecx
  522ea9:	push   0x503c218b
  522eae:	lds    esp,FWORD PTR ds:0xd6674358
  522eb4:	pop    esi
  522eb5:	inc    edx
  522eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522eb7:	fsub   QWORD PTR [ecx-0x2a]
  522eba:	jo     0x522f1b
  522ebc:	cmp    eax,0x70816423
  522ec1:	in     al,0xc2
  522ec3:	cmc    
  522ec4:	in     al,dx
  522ec5:	pop    edx
  522ec6:	leave  
  522ec7:	into   
  522ec8:	int3   
  522ec9:	sub    al,0x9d
  522ecb:	mov    al,ds:0x45b90999
  522ed0:	jo     0x522f11
  522ed2:	and    eax,DWORD PTR [ecx]
  522ed4:	xchg   ecx,eax
  522ed5:	inc    eax
  522ed6:	xchg   esi,eax
  522ed7:	mov    eax,ds:0x9fdb9a2f
  522edc:	dec    ecx
  522edd:	inc    esi
  522ede:	idiv   DWORD PTR [eax-0xa]
  522ee1:	shl    DWORD PTR [edi-0x2a216727],cl
  522ee7:	test   BYTE PTR [edi+0x1f87424d],0x15
  522eee:	shl    BYTE PTR [eiz*2-0xc7a0026],cl
  522ef5:	in     eax,0x7a
  522ef7:	hlt    
  522ef8:	popf   
  522ef9:	jmp    0xd015b7a6
  522efe:	mov    esi,0x2733db17
  522f03:	xor    eax,0x7d8b7708
  522f08:	ss mov bh,0xfd
  522f0b:	in     al,0x4f
  522f0d:	add    BYTE PTR [edx-0x64],bh
  522f10:	add    DWORD PTR [ebx+0x9],ebp
  522f13:	adc    eax,eax
  522f15:	jmp    0xee25:0xfa726dab
  522f1c:	mov    DWORD PTR [ecx+edx*2-0x4d1985ab],0x4a7ddff5
  522f27:	xchg   DWORD PTR [edi+0x2f0a3cce],ebx
  522f2d:	imul   ebp,DWORD PTR [ecx-0x70],0xfae2ad7f
  522f34:	and    edi,esi
  522f36:	fst    DWORD PTR [ebp+eiz*4+0x1d]
  522f3a:	sar    BYTE PTR [esi+0x15],0x74
  522f3e:	(bad)  
  522f3f:	fstp   TBYTE PTR [esp+edx*4-0x50]
  522f43:	fs add ax,dx
  522f47:	xor    bl,BYTE PTR [esi]
  522f49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  522f4a:	out    dx,eax
  522f4b:	pop    edx
  522f4c:	xchg   ebx,eax
  522f4d:	jno    0x522f91
  522f4f:	or     al,BYTE PTR [ecx-0x49]
  522f52:	dec    ebp
  522f53:	xor    BYTE PTR ds:0x5a5dce74,al
  522f59:	pop    esi
  522f5a:	sbb    BYTE PTR [edx+0x58],cl
  522f5d:	mov    cs,ebp
  522f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  522f60:	lahf   
  522f61:	mov    ds:0xfc3e2a6c,al
  522f66:	rcl    DWORD PTR [eax],0x69
  522f69:	sub    al,0x98
  522f6b:	clc    
  522f6c:	std    
  522f6d:	push   edi
  522f6e:	(bad)  
  522f6f:	das    
  522f70:	test   edi,edi
  522f72:	retf   0x1b3d
  522f75:	std    
  522f76:	icebp  
  522f77:	leave  
  522f78:	stos   BYTE PTR es:[edi],al
  522f79:	xchg   ecx,eax
  522f7a:	fidivr DWORD PTR [di-0x545]
  522f7f:	fcmovnu st,st(4)
  522f81:	ds aad 0x8e
  522f84:	ficomp WORD PTR [ebx-0x67]
  522f87:	and    eax,edi
  522f89:	fisub  WORD PTR ds:0x56b123de
  522f8f:	ret    
  522f90:	cwde   
  522f91:	pop    es
  522f92:	mov    ebx,0x9b90cb2b
  522f97:	aad    0x1
  522f99:	clc    
  522f9a:	int3   
  522f9b:	dec    esp
  522f9c:	adc    BYTE PTR [esp+eax*8],dh
  522f9f:	jbe    0x523017
  522fa1:	fidivr WORD PTR [ebx]
  522fa3:	cmp    BYTE PTR [edi-0x56],bh
  522fa6:	xchg   DWORD PTR [ebx-0x7f],ebx
  522fa9:	sub    al,0xaf
  522fab:	lock xchg esp,eax
  522fad:	scas   al,BYTE PTR es:[edi]
  522fae:	xchg   ebx,eax
  522faf:	(bad)  
  522fb0:	xlat   BYTE PTR ds:[ebx]
  522fb1:	dec    edx
  522fb2:	in     eax,dx
  522fb3:	mov    dl,0x4
  522fb5:	pusha  
  522fb6:	mov    bh,0xfc
  522fb8:	cmp    eax,DWORD PTR [edx]
  522fba:	cmp    ebx,DWORD PTR [ebp-0x2]
  522fbd:	inc    edi
  522fbe:	jmp    0x519d03e9
  522fc3:	pop    esi
  522fc4:	push   edx
  522fc5:	sar    DWORD PTR [esi+0x55625e9b],cl
  522fcb:	mov    ah,0x39
  522fcd:	in     al,dx
  522fce:	and    al,ch
  522fd0:	cmp    al,BYTE PTR [edi]
  522fd2:	mov    cl,0x39
  522fd4:	aad    0x38
  522fd6:	push   esi
  522fd7:	sub    BYTE PTR [bp+si],bh
  522fda:	cmp    BYTE PTR [eax+edx*1],dl
  522fdd:	mov    edi,DWORD PTR [eax-0x61225663]
  522fe3:	fnstcw WORD PTR [edi+0x3b]
  522fe6:	cmp    al,0x78
  522fe8:	retf   0xb023
  522feb:	clc    
  522fec:	je     0x523018
  522fee:	neg    BYTE PTR [eax-0x1a]
  522ff1:	es pop ebx
  522ff3:	test   DWORD PTR [ebx+0x4a],esp
  522ff6:	popa   
  522ff7:	jmp    0x69b0:0x63f24ae5
  522ffe:	jb     0x522f93
  523000:	retf   0xeb25
  523003:	adc    bh,BYTE PTR [ecx+0x52d12bc3]
  523009:	jle    0x52300e
  52300b:	inc    eax
  52300c:	(bad)
  52300f:	inc    ebp
  523010:	inc    edx
  523011:	cmp    BYTE PTR [edx],0x15
  523014:	mov    dl,0xd8
  523016:	inc    ecx
  523017:	mov    BYTE PTR [ebx-0x7f],dh
  52301a:	push   edi
  52301b:	pop    ss
  52301c:	xor    ebx,DWORD PTR [edx+0x1a7421ab]
  523022:	(bad)  
  523023:	mov    dh,0x47
  523025:	adc    DWORD PTR ds:0x24920209,edi
  52302b:	fst    DWORD PTR [esi+0x3e013701]
  523031:	int    0x61
  523033:	std    
  523034:	rol    DWORD PTR [edi+0x1d],1
  523037:	rol    BYTE PTR es:[esi],0x84
  52303b:	iret   
  52303c:	push   cs
  52303d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52303e:	mov    edx,DWORD PTR [ecx-0x9]
  523041:	adc    eax,0x1ce96306
  523046:	adc    al,0xdf
  523048:	cmc    
  523049:	pop    es
  52304a:	fwait
  52304b:	imul   edx,ecx,0x3d491bc0
  523051:	jbe    0x523026
  523053:	jge    0x522fef
  523055:	jae    0x523070
  523057:	data16 jge 0x52305d
  52305a:	mov    bh,0xe3
  52305c:	cmp    edx,DWORD PTR [esi-0x3ecd095]
  523062:	mov    ds,WORD PTR [ebp+eax*2-0x27]
  523066:	xor    ebp,DWORD PTR [ebp+0x76]
  523069:	mov    ds:0x2950d196,al
  52306e:	push   esi
  52306f:	mov    edi,0xfa841c7d
  523074:	xor    eax,0x4fb002e3
  523079:	(bad)  
  52307b:	rcl    DWORD PTR [ebp+0x6a2e8d1a],1
  523081:	shl    DWORD PTR [ebp+0x4359f99a],1
  523087:	push   ss
  523088:	pop    ds
  523089:	add    al,0x20
  52308b:	sub    BYTE PTR [edi],cl
  52308d:	dec    edx
  52308e:	mov    ebp,DWORD PTR [esi-0x3a]
  523091:	nop
  523092:	sbb    eax,0x20ce79fc
  523097:	out    dx,eax
  523098:	enter  0x5080,0x85
  52309c:	pop    esp
  52309d:	mov    ch,0xcb
  52309f:	js     0x523056
  5230a1:	sbb    bl,BYTE PTR [ebx]
  5230a3:	inc    edx
  5230a4:	pop    edi
  5230a5:	fiadd  WORD PTR [ebx-0x69bae132]
  5230ab:	jmp    0xbadf:0xa4b172ed
  5230b2:	int3   
  5230b3:	mov    ecx,0x4ffc745f
  5230b8:	sbb    eax,0xbf33d3ff
  5230bd:	mov    dl,dh
  5230bf:	rcr    DWORD PTR [ebp+0x79e6e1c8],0xba
  5230c6:	push   ds
  5230c7:	jb     0x5230fa
  5230c9:	dec    esp
  5230ca:	jnp    0x52310d
  5230cc:	and    edx,DWORD PTR [ebp-0x3f]
  5230cf:	sti    
  5230d0:	jae    0x523082
  5230d2:	ret    
  5230d3:	or     ebx,DWORD PTR [ecx]
  5230d5:	mov    cl,0xa5
  5230d7:	add    al,0x20
  5230d9:	icebp  
  5230da:	mov    eax,esp
  5230dc:	imul   ebx,DWORD PTR [eax-0x39],0xffffffbd
  5230e0:	xchg   ebx,eax
  5230e2:	mov    ebx,0xe6164301
  5230e7:	dec    ebx
  5230e8:	inc    ebp
  5230e9:	mov    ecx,0xbad11bf5
  5230ee:	aam    0x33
  5230f0:	jmp    0xbeff:0xe2471cbc
  5230f7:	inc    ecx
  5230f8:	mov    ebx,0xb83eca4
  5230fd:	jmp    0x523114
  5230ff:	xchg   ebx,eax
  523100:	or     eax,0xfb9fa40d
  523105:	mov    edi,0x45282dcd
  52310a:	mov    ds:0x65142dd4,al
  52310f:	inc    edx
  523110:	icebp  
  523111:	cmp    BYTE PTR [ebx+0x5e],cl
  523114:	push   ds
  523115:	add    eax,0xb5d2b06c
  52311a:	addr16 mov al,ds:0xa3
  52311e:	cdq    
  52311f:	stos   DWORD PTR es:[edi],eax
  523120:	mov    dh,0xc5
  523122:	sahf   
  523123:	(bad)  
  523124:	push   ecx
  523125:	push   edx
  523126:	mov    BYTE PTR [edi*1-0x2e184953],ah
  52312d:	in     al,0xd7
  52312f:	sub    eax,0xa317ed14
  523134:	cdq    
  523135:	arpl   WORD PTR [edx+0x69e0ce89],bx
  52313b:	inc    ecx
  52313c:	cwde   
  52313d:	stos   BYTE PTR es:[edi],al
  52313e:	dec    ebx
  52313f:	cmp    al,0xc6
  523142:	inc    esp
  523143:	fwait
  523144:	jmp    0x50fc3fa3
  523149:	cmp    al,0xde
  52314b:	mov    ah,0xf4
  52314d:	mov    ch,0x40
  52314f:	mov    ch,0xf9
  523151:	adc    esi,ebx
  523153:	add    al,0x4b
  523155:	imul   esi,DWORD PTR [edi+0x6b],0x9817638b
  52315c:	push   esi
  52315d:	daa    
  52315e:	pop    edi
  52315f:	sbb    BYTE PTR [ecx-0x4630698c],cl
  523165:	sub    dl,bl
  523167:	sti    
  523168:	jmp    0xb1fc:0x8b41d834
  52316f:	dec    edx
  523170:	xchg   edx,eax
  523171:	pop    es
  523172:	mov    ebp,0xbde110f2
  523177:	push   eax
  523178:	xor    ebx,esp
  52317a:	xrelease xchg DWORD PTR [esi+edx*2],edx
  52317e:	in     eax,dx
  52317f:	idiv   BYTE PTR [edx-0x71a91c09]
  523185:	out    dx,al
  523186:	inc    ebp
  523187:	pusha  
  523188:	push   esi
  523189:	xchg   DWORD PTR [ebp+0x23],eax
  52318c:	scas   al,BYTE PTR es:[edi]
  52318d:	test   al,0x7e
  52318f:	repnz inc edi
  523191:	cwde   
  523192:	add    al,0x8f
  523194:	(bad)  
  523196:	in     eax,dx
  523197:	cmp    eax,0x1ec61ff6
  52319c:	jmp    0x6371ad41
  5231a1:	mov    ch,0x1f
  5231a3:	push   ds
  5231a4:	daa    
  5231a5:	mov    bl,0xfd
  5231a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5231a8:	xor    DWORD PTR [ebp-0x158e856],ecx
  5231ae:	pop    ebp
  5231af:	add    edi,ebx
  5231b1:	sahf   
  5231b2:	mov    eax,ds:0xda4c3230
  5231b7:	or     al,BYTE PTR [eax]
  5231b9:	in     al,dx
  5231ba:	mov    ebx,0xdc19c66b
  5231bf:	into   
  5231c0:	inc    eax
  5231c1:	dec    esp
  5231c2:	daa    
  5231c3:	add    DWORD PTR [eax-0x2ea902d0],esi
  5231c9:	mov    ecx,0x54a5ff0
  5231ce:	in     eax,dx
  5231cf:	xor    al,0x5f
  5231d1:	push   ecx
  5231d2:	int3   
  5231d3:	test   al,0x9f
  5231d5:	dec    ecx
  5231d6:	sbb    bl,dh
  5231d8:	cmp    eax,0x40373753
  5231dd:	push   ds
  5231de:	inc    edi
  5231df:	mov    es,WORD PTR [ecx]
  5231e1:	sub    BYTE PTR [ebp+0x2a],ch
  5231e4:	rol    al,0xdc
  5231e7:	and    BYTE PTR [edx],dl
  5231e9:	cmp    BYTE PTR [edx+0x4ea4b48b],al
  5231ef:	dec    ebx
  5231f0:	pop    ebx
  5231f1:	jmp    FWORD PTR [ebx]
  5231f3:	gs mov ebx,0xdc239414
  5231f9:	mov    cl,0xfa
  5231fb:	(bad)  
  5231fc:	mov    DWORD PTR [edi-0x6a],esi
  5231ff:	mov    ecx,DWORD PTR [edi-0x6d]
  523202:	sbb    DWORD PTR [ebx+ebx*1+0x21588757],eax
  523209:	inc    di
  52320b:	cdq    
  52320c:	mov    DWORD PTR [ebp-0x22],ebx
  52320f:	aam    0xdd
  523211:	cmp    eax,0xe9040937
  523216:	xor    esp,DWORD PTR [ecx-0x621325f2]
  52321c:	popa   
  52321d:	dec    ebx
  52321e:	xor    dl,BYTE PTR [esi-0x33]
  523221:	mov    edx,DWORD PTR [ebp-0x246c43a9]
  523227:	scas   al,BYTE PTR es:[edi]
  523228:	jns    0x523295
  52322a:	push   ss
  52322b:	jnp    0x5231f1
  52322d:	test   eax,0x4d6acd26
  523232:	sub    DWORD PTR [esi+0x7b],edi
  523235:	jbe    0x523253
  523237:	fsubr  DWORD PTR [edx]
  523239:	rol    BYTE PTR [edi],1
  52323b:	adc    eax,0x35a72347
  523240:	imul   ebx,DWORD PTR [ecx+0x2a],0xe3e26e11
  523247:	push   edx
  523248:	pop    ds
  523249:	mov    bl,0xc9
  52324b:	cmp    eax,0x2fff4e5b
  523250:	and    BYTE PTR [esi+0x17],al
  523253:	popa   
  523254:	imul   esi,DWORD PTR [edi],0xffffff81
  523257:	xor    ebx,DWORD PTR [ebx+0x7f]
  52325a:	aad    0x8b
  52325c:	or     ecx,esi
  52325e:	or     eax,0x743a2c0
  523263:	add    bl,ch
  523265:	in     al,0x91
  523267:	iret   
  523268:	xor    eax,0x58cbe4b6
  52326d:	sub    DWORD PTR [esi],ecx
  52326f:	cmc    
  523270:	mov    ah,0x8c
  523272:	mov    eax,ds:0x6359403
  523277:	test   eax,0x6839a25a
  52327c:	fistp  WORD PTR [ecx+0xfafcf0]
  523282:	and    eax,0xe9343af9
  523287:	cmp    al,0x92
  523289:	push   es
  52328a:	xor    al,0x45
  52328c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52328d:	lds    eax,FWORD PTR [ecx+esi*1+0x6b7c1c21]
  523294:	dec    ecx
  523295:	rcl    BYTE PTR [edi],cl
  523297:	xor    al,0xe
  523299:	inc    ebx
  52329a:	fimul  WORD PTR [edx+0x45]
  52329d:	retf   
  52329e:	sub    al,0x1b
  5232a0:	xor    cl,bl
  5232a2:	call   0xd2d9:0x9fe9ab24
  5232a9:	mov    al,0xdf
  5232ab:	jns    0x523309
  5232ad:	and    DWORD PTR [ebx+0x59],edx
  5232b0:	inc    esi
  5232b1:	clc    
  5232b2:	jmp    0xb30c:0x84898c34
  5232b9:	std    
  5232ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5232bb:	and    eax,0x482f6525
  5232c0:	mov    al,ds:0x5a372fd1
  5232c5:	fidiv  DWORD PTR [edx+0x44b653b3]
  5232cb:	sbb    edx,ebx
  5232cd:	pop    edx
  5232ce:	imul   esp,ebp,0x32c4e9aa
  5232d4:	lahf   
  5232d5:	paddq  mm6,mm1
  5232d8:	rol    DWORD PTR [eax-0x9],cl
  5232db:	cdq    
  5232dc:	in     eax,dx
  5232dd:	jmp    0x1d2c:0x98700c9b
  5232e4:	xchg   BYTE PTR [eax+esi*4-0x2499b47b],cl
  5232eb:	cld    
  5232ec:	popa   
  5232ed:	(bad)  
  5232ee:	add    eax,0x2b0a0510
  5232f3:	inc    esp
  5232f4:	mov    ebx,0x20a475b5
  5232f9:	add    edi,DWORD PTR [ecx+0x784052b8]
  5232ff:	stc    
  523300:	cld    
  523301:	mov    BYTE PTR [esi-0x23],bh
  523304:	std    
  523305:	push   es
  523306:	retf   
  523307:	and    al,0xf1
  523309:	mov    al,0x89
  52330b:	daa    
  52330c:	fwait
  52330d:	je     0x523319
  52330f:	mov    edi,DWORD PTR [eax-0xd]
  523312:	add    al,0x9b
  523314:	fwait
  523315:	je     0x5232d4
  523317:	out    dx,eax
  523318:	jo     0x52333c
  52331a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52331b:	pop    ss
  52331c:	daa    
  52331d:	fdivr  st,st(3)
  52331f:	mov    ah,0x43
  523321:	call   0x19426201
  523326:	imul   ebp,DWORD PTR [edx+0x3f],0x1ecb6c1
  52332d:	retf   
  52332e:	icebp  
  52332f:	bound  ecx,QWORD PTR [ebx-0x6ab2fe28]
  523335:	pop    ecx
  523337:	call   0x13fd:0x29bf0621
  52333e:	(bad)
  523342:	cmp    ah,0x20
  523345:	(bad)  
  523346:	mov    cl,BYTE PTR [edx]
  523348:	iret   
  523349:	mul    BYTE PTR [esi+edx*4+0x66877c0e]
  523350:	loop   0x523306
  523352:	stos   BYTE PTR es:[edi],al
  523353:	push   ss
  523354:	jmp    0x942ed27b
  523359:	adc    al,0x74
  52335b:	sbb    bh,bh
  52335d:	iret   
  52335e:	les    ebx,FWORD PTR [ecx-0x1d]
  523361:	js     0x52339b
  523363:	cli    
  523364:	bound  ebx,QWORD PTR [edi]
  523366:	jb     0x5233af
  523368:	ins    DWORD PTR es:[edi],dx
  523369:	mov    eax,ds:0xe93316fc
  52336e:	test   al,0x37
  523370:	stos   BYTE PTR es:[edi],al
  523371:	fsub   QWORD PTR [esi+eax*4-0x148ec62e]
  523378:	inc    ecx
  523379:	mov    ecx,0x7d5fbd55
  52337e:	push   eax
  52337f:	in     al,dx
  523380:	sub    ebx,DWORD PTR [eax-0x39]
  523383:	push   esi
  523384:	pop    ecx
  523385:	mov    ebx,0x45f56845
  52338a:	icebp  
  52338b:	shl    edx,cl
  52338d:	dec    ebx
  52338e:	pushf  
  52338f:	les    eax,FWORD PTR [esi+eax*2-0xa]
  523393:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523394:	ficomp WORD PTR [edi-0x74f19fc5]
  52339a:	inc    ecx
  52339b:	ins    BYTE PTR es:[edi],dx
  52339c:	xchg   ebp,eax
  52339d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  52339f:	jmp    0x52338d
  5233a1:	sbb    ebx,esi
  5233a3:	pop    eax
  5233a4:	call   DWORD PTR cs:[esi-0x60]
  5233a8:	ror    DWORD PTR [edi-0xdf5fc82],cl
  5233ae:	rcl    BYTE PTR [ecx-0x7cc279b4],1
  5233b4:	xchg   ebx,eax
  5233b5:	lds    ebp,FWORD PTR [esi-0x6d]
  5233b8:	mul    BYTE PTR [esi-0x2e]
  5233bb:	data16 sub cl,BYTE PTR [eax]
  5233be:	test   al,0x72
  5233c0:	leave  
  5233c1:	inc    eax
  5233c2:	push   ds
  5233c3:	lds    ecx,FWORD PTR [ebx-0x5db6946d]
  5233c9:	or     al,0x41
  5233cb:	sahf   
  5233cc:	pop    ebp
  5233cd:	fidivr WORD PTR [ecx-0x37]
  5233d0:	sbb    eax,0x655d67d6
  5233d5:	mov    esp,0x94ddb4
  5233da:	mov    ecx,0x5e7d4c14
  5233df:	dec    eax
  5233e0:	inc    ebp
  5233e1:	daa    
  5233e2:	or     esp,esp
  5233e4:	mov    cs,WORD PTR [esi-0x63]
  5233e7:	jle    0x523438
  5233e9:	lods   al,BYTE PTR ds:[esi]
  5233ea:	je     0x5233c3
  5233ec:	push   ebp
  5233ed:	sbb    DWORD PTR [edx+edi*1-0x6e6e3cca],esi
  5233f4:	ins    DWORD PTR es:[edi],dx
  5233f5:	lock sbb al,0xd2
  5233f8:	repnz in eax,dx
  5233fa:	ins    DWORD PTR es:[edi],dx
  5233fb:	(bad)  
  5233fc:	lock mov esi,eax
  5233ff:	adc    dh,BYTE PTR [ecx-0x1ac93cd]
  523405:	sti    
  523406:	sar    BYTE PTR [eax],0xd
  523409:	(bad)  
  52340a:	in     eax,dx
  52340b:	mov    cl,0xcb
  52340d:	rcr    DWORD PTR [edi+0x44],1
  523410:	out    0x8c,al
  523412:	mov    ecx,0xf701ddd2
  523417:	inc    edx
  523418:	sub    bl,dl
  52341a:	push   ebp
  52341b:	(bad)  
  52341c:	jmp    0xfe4b:0xee080b26
  523423:	add    DWORD PTR [esi-0x21],eax
  523426:	das    
  523427:	mov    eax,0x233d04ef
  52342c:	jg     0x523402
  52342e:	push   0x16
  523430:	shl    eax,cl
  523432:	xor    esp,DWORD PTR [edx+eax*4+0x1f]
  523436:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523437:	inc    BYTE PTR [eax+0x6a]
  52343a:	push   eax
  52343b:	mov    al,ds:0x65b01b99
  523440:	cdq    
  523441:	fcmovb st,st(3)
  523443:	pop    eax
  523444:	or     ecx,DWORD PTR [edx+0x22b404a5]
  52344a:	jns    0x5233ef
  52344c:	mov    bl,0x56
  52344e:	ins    BYTE PTR es:[edi],dx
  52344f:	call   0x63f3d33b
  523454:	pusha  
  523455:	mov    BYTE PTR [eax+ebp*4+0x43315e12],ah
  52345c:	stos   DWORD PTR es:[edi],eax
  52345d:	xchg   DWORD PTR [ebx],eax
  52345f:	or     eax,0xc6cfcd73
  523464:	push   eax
  523465:	outs   dx,DWORD PTR ds:[esi]
  523466:	fdivr  DWORD PTR [esi+0x7cc55bec]
  52346c:	icebp  
  52346d:	push   0xffffffd1
  52346f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523470:	rol    DWORD PTR [edi-0x4],1
  523473:	push   ebp
  523474:	imul   edi,DWORD PTR [ebx+ebp*1],0xffffffdb
  523478:	pop    edi
  523479:	mov    DWORD PTR [edx+0x6b],esi
  52347c:	sbb    al,0x39
  52347e:	sbb    DWORD PTR [ebp+edi*1+0xd41f67a],esp
  523485:	push   ss
  523486:	cmp    eax,DWORD PTR [ebx+0x3d]
  523489:	add    BYTE PTR [ebx+0x30],ah
  52348c:	push   es
  52348d:	das    
  52348e:	out    dx,eax
  52348f:	imul   eax,DWORD PTR cs:[edx-0x58],0x559dd3d8
  523497:	fcmovbe st,st(0)
  523499:	je     0x52346e
  52349b:	fistp  WORD PTR [eax]
  52349d:	in     al,dx
  52349e:	inc    edi
  52349f:	lds    ebp,FWORD PTR [eax]
  5234a1:	(bad)  
  5234a2:	cmp    eax,0xd3445a29
  5234a7:	inc    dh
  5234a9:	nop
  5234aa:	sahf   
  5234ab:	stc    
  5234ac:	test   eax,0x16b60894
  5234b1:	jns    0x523525
  5234b3:	(bad)  
  5234b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5234b5:	out    0x8,al
  5234b7:	sub    DWORD PTR [ebp-0x7f],0x69
  5234bb:	and    esp,DWORD PTR gs:[ebp-0x44]
  5234bf:	jle    0x52345d
  5234c1:	out    dx,eax
  5234c2:	xchg   edi,eax
  5234c3:	add    edx,DWORD PTR [edi]
  5234c5:	push   esi
  5234c6:	ds jg  0x5234a1
  5234c9:	data16 lods al,BYTE PTR ds:[esi]
  5234cb:	or     esp,DWORD PTR [esi]
  5234cd:	(bad)  
  5234ce:	xor    BYTE PTR ds:0xa13b4423,al
  5234d4:	(bad)  
  5234d6:	inc    esp
  5234d7:	dec    edx
  5234d8:	inc    ebx
  5234d9:	icebp  
  5234da:	(bad)  
  5234db:	mov    ah,0x46
  5234dd:	scas   al,BYTE PTR es:[edi]
  5234de:	add    al,0x29
  5234e1:	aaa    
  5234e2:	in     eax,0x1b
  5234e4:	sub    edx,DWORD PTR [edi-0x7920ec08]
  5234ea:	sub    bh,BYTE PTR [eax]
  5234ec:	lds    ecx,FWORD PTR [edx]
  5234ee:	out    dx,al
  5234ef:	ds push 0xce7ce134
  5234f5:	mov    ds:0xff8d9338,al
  5234fa:	xor    edi,ebx
  5234fc:	mov    al,0x2f
  5234fe:	push   ebp
  5234ff:	cdq    
  523500:	ror    DWORD PTR [ebp+0x43],cl
  523503:	fisub  DWORD PTR [esi+0x1a]
  523506:	add    eax,0xbbf49564
  52350b:	jo     0x523567
  52350d:	inc    edx
  52350e:	pop    es
  52350f:	repz and WORD PTR cs:[ebp+0x43],0xffed
  523516:	iret   
  523517:	cmp    bl,ah
  523519:	ds pushf 
  52351b:	sub    ebx,ebp
  52351d:	jae    0x523594
  52351f:	iret   
  523520:	sub    eax,0x60b5c0c6
  523525:	outs   dx,BYTE PTR ds:[esi]
  523526:	test   DWORD PTR [edx-0x5c],ebx
  523529:	loop   0x5235a2
  52352b:	call   0xe706:0x7a7446db
  523532:	ds cli 
  523534:	les    ecx,FWORD PTR [eax]
  523536:	jmp    FWORD PTR [esi-0x2]
  523539:	sbb    al,0xd2
  52353b:	bound  ecx,QWORD PTR [esi+0x1c752cfa]
  523541:	std    
  523542:	cmp    eax,0xdb2f0d76
  523547:	jbe    0x523554
  523549:	jmp    0x4218:0x67a55462
  523550:	int3   
  523551:	(bad)
  523554:	pushf  
  523555:	push   es
  523556:	sub    al,0x67
  523558:	fisubr DWORD PTR [edx-0x6c96ec6b]
  52355e:	dec    esp
  52355f:	dec    edx
  523560:	jnp    0x5235b6
  523562:	rol    BYTE PTR [edi-0x7f],1
  523565:	xor    al,0xbd
  523567:	and    DWORD PTR [esi+0x76],edx
  52356a:	nop
  52356b:	in     eax,0x0
  52356d:	ins    BYTE PTR es:[edi],dx
  52356e:	add    DWORD PTR [ecx-0x3b488e97],ebx
  523574:	push   ebp
  523575:	dec    ebx
  523576:	sbb    edi,esp
  523578:	pop    esi
  523579:	fiadd  WORD PTR [ecx+0x38]
  52357c:	mov    eax,0x9eb5109d
  523581:	add    ebp,edi
  523583:	jae    0x5235df
  523585:	retf   
  523586:	mov    ebp,0xf4d756a3
  52358b:	mov    edx,0xfec01317
  523590:	daa    
  523591:	sbb    esi,DWORD PTR [ebx-0x39d5c971]
  523597:	fldln2 
  523599:	mov    DWORD PTR ds:0x642fa1d4,edi
  52359f:	pop    ecx
  5235a0:	dec    edi
  5235a1:	xor    eax,0xbc803c3d
  5235a6:	pushf  
  5235a7:	aam    0xdb
  5235a9:	inc    ecx
  5235aa:	sub    edi,edi
  5235ac:	imul   ebp,eax,0xe8081218
  5235b2:	xchg   BYTE PTR [ecx-0x6],dl
  5235b5:	shr    DWORD PTR [ecx-0x79],0xc8
  5235b9:	je     0x5235d8
  5235bb:	in     eax,0x9b
  5235bd:	fwait
  5235be:	iret   
  5235bf:	mov    bl,0xda
  5235c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5235c2:	adc    ecx,DWORD PTR [edi-0x4e]
  5235c5:	pop    eax
  5235c6:	push   edx
  5235c7:	stos   BYTE PTR es:[edi],al
  5235c8:	dec    edx
  5235c9:	pop    ebp
  5235ca:	jge    0x523618
  5235cc:	(bad)  
  5235cd:	clc    
  5235ce:	sbb    eax,0xfba29df1
  5235d3:	and    DWORD PTR [eax-0x5],edi
  5235d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5235d7:	fwait
  5235d8:	sbb    al,ch
  5235da:	jge    0x523566
  5235dc:	imul   ecx,DWORD PTR [eax+0x7633e452],0x7e5791a7
  5235e6:	adc    al,0xd3
  5235e8:	repnz test BYTE PTR [ebp+eiz*1+0x50],bl
  5235ed:	or     DWORD PTR [esi-0x42cfe7a4],esp
  5235f3:	sbb    cl,ah
  5235f5:	ret    
  5235f6:	jge    0x5235a5
  5235f8:	in     al,dx
  5235f9:	ds ret 0xd1a6
  5235fd:	repz out dx,al
  5235ff:	loop   0x523677
  523601:	(bad)  
  523602:	and    edx,DWORD PTR [ecx-0x7c42535]
  523608:	xlat   BYTE PTR ds:[ebx]
  523609:	xchg   esi,eax
  52360a:	pop    es
  52360b:	and    edi,DWORD PTR [ebp+0x4235667f]
  523611:	ret    0xc293
  523614:	popf   
  523615:	and    ecx,DWORD PTR [ebx]
  523617:	hlt    
  523618:	call   0x6705dabf
  52361d:	adc    BYTE PTR [ebx-0x60e71f2e],dh
  523623:	mov    bh,BYTE PTR [eiz*4-0x1c9d9b20]
  52362a:	adc    DWORD PTR [ebx+0x799cfa21],edx
  523630:	mov    esi,0xc78cbc0d
  523635:	loopne 0x523608
  523637:	bound  esp,QWORD PTR [edx+eiz*8]
  52363a:	jns    0x5236a6
  52363c:	sbb    bl,BYTE PTR [edi]
  52363e:	mov    dl,0x14
  523640:	mov    cl,0x31
  523642:	inc    ebx
  523643:	cli    
  523644:	shl    BYTE PTR [edx+eiz*1-0x72],cl
  523648:	mov    ah,0x16
  52364a:	fadd   DWORD PTR [ebx+0x6d]
  52364d:	(bad)  
  52364e:	xlat   BYTE PTR ds:[ebx]
  52364f:	sub    al,0x55
  523651:	sub    ecx,ebp
  523653:	sbb    edi,edx
  523655:	or     BYTE PTR [ebx+esi*2-0x13],bh
  523659:	and    al,0x20
  52365b:	pop    esp
  52365c:	(bad)  
  52365d:	in     eax,dx
  52365e:	aam    0xaa
  523660:	xchg   esi,eax
  523661:	adc    al,0x3b
  523663:	das    
  523664:	(bad)  
  523665:	sub    eax,0x44066336
  52366a:	push   esp
  52366b:	dec    ebp
  52366c:	mov    esp,0x50cc3789
  523671:	xlat   BYTE PTR ds:[ebx]
  523672:	mov    bl,0xfa
  523674:	ss adc al,0x4a
  523677:	aam    0x7e
  523679:	out    0x61,eax
  52367b:	xchg   esp,eax
  52367c:	push   cs
  52367d:	or     ah,BYTE PTR [edi-0x14]
  523680:	mov    ebp,0xac441279
  523685:	sti    
  523686:	popf   
  523687:	stos   BYTE PTR es:[edi],al
  523688:	push   eax
  523689:	mov    ds:0xeb23e6c4,al
  52368e:	fs mov eax,0x33ba6302
  523694:	push   edi
  523695:	dec    ax
  523697:	add    al,0xa7
  523699:	cmp    bh,BYTE PTR [eax]
  52369b:	fld    QWORD PTR [ecx+0x141e6a61]
  5236a1:	cmp    ebp,DWORD PTR [edx+0x1b4b0e5e]
  5236a7:	inc    BYTE PTR [ebx-0x46]
  5236aa:	idiv   BYTE PTR [esi+0x6f]
  5236ad:	fstp   QWORD PTR [esp+ebp*8]
  5236b0:	jp     0x5236ad
  5236b2:	pop    ecx
  5236b3:	fwait
  5236b4:	jp     0x523671
  5236b6:	out    dx,al
  5236b7:	jae    0x523732
  5236b9:	stc    
  5236ba:	jmp    0xfc21d7d
  5236bf:	push   es
  5236c0:	fcom   QWORD PTR [ebp+0x252023d]
  5236c6:	or     al,0x24
  5236c8:	jg     0x52369e
  5236ca:	sub    eax,0x1bcb1844
  5236cf:	clc    
  5236d0:	or     edi,0x79
  5236d3:	in     al,dx
  5236d4:	sbb    eax,0xa2304b70
  5236d9:	push   edx
  5236da:	dec    esp
  5236db:	fcomp  QWORD PTR [edi]
  5236dd:	jae    0x5236cc
  5236df:	inc    ebp
  5236e0:	inc    esi
  5236e1:	dec    esp
  5236e2:	push   edx
  5236e3:	dec    edi
  5236e4:	jmp    0xb1fe:0xff3a7436
  5236eb:	and    DWORD PTR [edx-0x3a],0x56462d4c
  5236f2:	(bad)  
  5236f3:	mov    cl,0xb6
  5236f5:	mov    eax,ds:0x587f4a54
  5236fa:	shl    BYTE PTR [esi-0x1e],1
  5236fd:	stos   DWORD PTR es:[edi],eax
  5236fe:	ret    0x6247
  523701:	test   al,0x92
  523703:	sub    al,BYTE PTR ds:0xbfca26f8
  523709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52370a:	push   0x16d458aa
  52370f:	sahf   
  523710:	push   es
  523711:	jnp    0x5236f6
  523713:	fptan  
  523715:	gs cdq 
  523717:	sub    DWORD PTR ss:[esi+0x35],edi
  52371b:	xchg   ebp,eax
  52371c:	push   ebx
  52371d:	jbe    0x5236d4
  52371f:	mov    ah,0x8a
  523721:	lahf   
  523722:	jmp    0xb10a01cc
  523727:	and    bh,BYTE PTR fs:[eax]
  52372a:	cmp    eax,0x5b32622e
  52372f:	mov    dh,0x67
  523731:	adc    DWORD PTR [eax+0x21],0x7e70c27f
  523738:	stos   BYTE PTR es:[edi],al
  523739:	or     DWORD PTR [ebx-0x63818606],ecx
  52373f:	pop    edx
  523740:	clc    
  523741:	inc    ebp
  523742:	stos   DWORD PTR es:[edi],eax
  523743:	sbb    edi,esp
  523745:	dec    esp
  523746:	add    ebx,DWORD PTR [eax]
  523748:	add    DWORD PTR [edi-0x75],esp
  52374b:	loope  0x52374a
  52374d:	ss cmp ah,ch
  523750:	out    dx,al
  523751:	push   0xc238feab
  523756:	add    BYTE PTR [edi-0x12],bl
  523759:	repz add dl,cl
  52375c:	mov    cl,dl
  52375e:	jbe    0x52375b
  523760:	rol    DWORD PTR [ecx-0x18],0x46
  523764:	mov    eax,0x425bbd3d
  523769:	mov    WORD PTR [edi+ebx*1],es
  52376c:	ret    
  52376d:	ins    DWORD PTR es:[edi],dx
  52376e:	fstp   DWORD PTR [edx-0x54]
  523771:	xchg   ebp,eax
  523772:	clc    
  523773:	inc    ecx
  523774:	jmp    0x52379f
  523776:	popf   
  523777:	add    al,0x77
  523779:	jnp    0x523799
  52377b:	fstp   TBYTE PTR [edi+0x34]
  52377e:	push   ebp
  52377f:	xlat   BYTE PTR ds:[ebx]
  523780:	das    
  523781:	fst    DWORD PTR [eax-0x7a5c692e]
  523787:	out    0x4a,eax
  523789:	or     eax,0x5b7d4e7f
  52378f:	nop
  523790:	fwait
  523791:	dec    ebx
  523792:	test   cl,dl
  523794:	scas   al,BYTE PTR es:[edi]
  523795:	jle    0x523744
  523797:	inc    edx
  523798:	xchg   DWORD PTR [eax],edi
  52379a:	xor    al,0x57
  52379c:	mov    al,ds:0x8cfa8c8
  5237a1:	fisttp QWORD PTR [ebp+0x61]
  5237a4:	mov    al,ds:0xa8aa2b3b
  5237a9:	retf   0xedca
  5237ac:	or     ebp,DWORD PTR ds:0xe62a38b1
  5237b2:	daa    
  5237b3:	cmp    eax,0x342cae06
  5237b8:	shr    BYTE PTR [edi],0xb5
  5237bb:	sbb    al,0x79
  5237bd:	xor    BYTE PTR [ebx+0x0],ch
  5237c0:	sub    edx,DWORD PTR [esp+ebp*4+0x5d]
  5237c4:	mov    ss,WORD PTR [ecx]
  5237c6:	int3   
  5237c7:	jnp    0x52382f
  5237c9:	sub    dl,BYTE PTR [esi-0x45c05413]
  5237cf:	xor    eax,0x93da874b
  5237d4:	cdq    
  5237d5:	clc    
  5237d6:	(bad)  
  5237d7:	sub    al,0x69
  5237d9:	imul   edx,DWORD PTR [edx+0x11],0xffffffad
  5237dd:	ss jmp 0x486ff2df
  5237e3:	int    0x81
  5237e5:	mov    eax,ecx
  5237e7:	stc    
  5237e8:	and    eax,0xa581f749
  5237ed:	mov    fs,WORD PTR [esi]
  5237ef:	push   edi
  5237f0:	and    eax,esi
  5237f2:	ss inc edi
  5237f4:	sar    DWORD PTR [ebx],1
  5237f6:	pop    ecx
  5237f7:	outs   dx,BYTE PTR ds:[esi]
  5237f8:	sbb    DWORD PTR [eax-0x1b],edx
  5237fb:	into   
  5237fc:	jge    0x52378f
  5237fe:	pop    ds
  5237ff:	add    dl,ah
  523801:	in     eax,0xe8
  523803:	sbb    ebx,DWORD PTR [esi-0x10618172]
  523809:	leave  
  52380a:	cli    
  52380b:	aas    
  52380c:	test   al,0x31
  52380e:	cli    
  52380f:	push   0xf4886ecb
  523814:	mov    al,0x52
  523816:	(bad)  
  52381a:	cmp    bh,BYTE PTR [ecx-0x107aed68]
  523820:	aam    0x63
  523822:	fistp  WORD PTR [ebx]
  523824:	mov    bh,BYTE PTR [edi]
  523826:	inc    edi
  523827:	cmp    al,0x6b
  523829:	mov    DWORD PTR [eax],eax
  52382b:	cwde   
  52382c:	jle    0x52389e
  52382e:	adc    BYTE PTR [esi-0x4dfa60f1],bh
  523834:	(bad)  
  523835:	bound  ecx,QWORD PTR cs:[ecx]
  523838:	bnd jl 0x523831
  52383b:	push   ebx
  52383c:	inc    edi
  52383d:	jne    0x52383d
  52383f:	popf   
  523840:	(bad)  
  523841:	loopne 0x52380b
  523843:	cmp    DWORD PTR [edx+0x53b49378],esi
  523849:	add    dh,bl
  52384b:	add    al,0xa6
  52384d:	mov    ch,0x9e
  52384f:	in     al,0xef
  523851:	nop
  523852:	push   eax
  523853:	push   ebx
  523854:	push   ebp
  523855:	push   esp
  523856:	fdivr  QWORD PTR [eax]
  523858:	outs   dx,DWORD PTR ds:[esi]
  523859:	test   DWORD PTR [ebp+0x4c049768],esp
  52385f:	xchg   edx,eax
  523860:	mov    bl,0xaa
  523862:	aam    0x6d
  523864:	pop    ecx
  523865:	stos   DWORD PTR es:[edi],eax
  523866:	sbb    DWORD PTR [edx-0x70],eax
  523869:	and    BYTE PTR [ebx+0x423b5ee0],0x2c
  523870:	xchg   esi,eax
  523871:	adc    al,0xdf
  523873:	push   ss
  523874:	stc    
  523875:	fstp   TBYTE PTR [edx]
  523877:	pop    ecx
  523878:	sbb    al,0x71
  52387a:	pop    edi
  52387b:	jecxz  0x52389a
  52387d:	in     al,0x51
  52387f:	jno    0x5238c9
  523881:	lea    ecx,[edi-0x1bb28f68]
  523887:	jp     0x5238d4
  523889:	fwait
  52388a:	jg     0x523891
  52388c:	jg     0xa2c48d19
  523892:	test   eax,0x1226258a
  523897:	mov    edx,0x5ce7f598
  52389c:	mov    bl,0xf5
  52389e:	jne    0x523899
  5238a0:	ss mov esp,0x762e34f8
  5238a6:	mov    eax,ds:0x9e1c0f4b
  5238ab:	das    
  5238ac:	pusha  
  5238ad:	(bad)  
  5238ae:	pop    ss
  5238af:	retf   0x9064
  5238b2:	lods   al,BYTE PTR ds:[esi]
  5238b3:	push   ecx
  5238b4:	inc    ebp
  5238b5:	rcl    DWORD PTR [esi],0x2e
  5238b8:	rcl    DWORD PTR [eax-0x716868ac],0xd6
  5238bf:	test   eax,0x4dd933c3
  5238c4:	aam    0xc2
  5238c6:	shl    BYTE PTR [ebx-0x18],0x2d
  5238ca:	icebp  
  5238cb:	das    
  5238cc:	(bad)  
  5238cd:	sbb    DWORD PTR [esi+0x5ea1472f],esp
  5238d3:	or     edx,DWORD PTR [eax+0x6e7184a8]
  5238d9:	fistp  DWORD PTR [esi-0x5f5ed552]
  5238df:	jne    0x523887
  5238e1:	ret    0x29b6
  5238e4:	cld    
  5238e5:	jb     0x523869
  5238e7:	clc    
  5238e8:	mov    BYTE PTR [edi+0x74ea614e],bl
  5238ee:	push   ebp
  5238ef:	xor    esi,DWORD PTR [edx+0x1e8712a9]
  5238f5:	(bad)  
  5238f6:	sbb    eax,0xfb00fe22
  5238fb:	push   ebx
  5238fc:	mov    bl,0x1e
  5238fe:	stos   BYTE PTR es:[edi],al
  5238ff:	(bad)  
  523901:	and    al,al
  523903:	jno    0x5238c4
  523905:	jecxz  0x523973
  523907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523908:	test   ebp,0xd9e0f9bd
  52390e:	inc    edi
  52390f:	sbb    eax,0xf1eb2a1
  523914:	pop    eax
  523915:	and    al,BYTE PTR [edi+0x57352456]
  52391b:	mov    eax,ds:0x98ae07e8
  523920:	push   esp
  523921:	cmp    eax,0x89b73e77
  523926:	cwde   
  523927:	push   ds
  523928:	lods   al,BYTE PTR ds:[esi]
  523929:	rol    DWORD PTR [edi+0x78],0x58
  52392d:	mov    WORD PTR [ebp-0xee8fa86],es
  523933:	and    eax,0x9184ecf8
  523938:	mov    ah,0xb3
  52393a:	fadd   st(7),st
  52393c:	pusha  
  52393d:	cmp    bh,BYTE PTR [edx]
  52393f:	mov    DWORD PTR [ecx-0x7c],eax
  523942:	(bad)
  523946:	add    ah,BYTE PTR [ebx+0x671e747]
  52394c:	pusha  
  52394d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52394e:	push   esp
  52394f:	xor    eax,0x422fb3f5
  523954:	sub    al,BYTE PTR [eax+0x6117197b]
  52395a:	bound  ebp,QWORD PTR [eax+0x69]
  52395d:	fs mov dl,0x24
  523960:	push   esi
  523961:	jle    0x5239d7
  523963:	fs mov esi,0xdd65ca94
  523969:	inc    edx
  52396a:	out    0x6c,al
  52396c:	sub    esp,DWORD PTR [ebx]
  52396e:	sbb    DWORD PTR [esi-0x1d],ecx
  523971:	out    0xa8,al
  523973:	push   esi
  523974:	dec    esp
  523975:	jmp    0x1882db5c
  52397a:	sbb    al,0x1f
  52397d:	out    dx,al
  52397e:	sub    al,0x7d
  523980:	pop    es
  523981:	(bad)  
  523983:	or     bh,BYTE PTR [esi+0x1b]
  523986:	jg     0x5239bb
  523988:	sbb    ch,BYTE PTR [edx+esi*4]
  52398b:	std    
  52398c:	mov    ebp,0x7e1c4239
  523991:	ins    BYTE PTR es:[edi],dx
  523992:	popf   
  523993:	lds    eax,FWORD PTR [ebp-0x52]
  523996:	jno    0x52397b
  523998:	or     ah,BYTE PTR [eax-0x1d]
  52399b:	dec    ecx
  52399c:	out    0x1f,al
  52399e:	stos   DWORD PTR es:[edi],eax
  52399f:	sti    
  5239a0:	loope  0x523a0c
  5239a2:	and    BYTE PTR [ebp+0x48],ah
  5239a5:	xor    al,0x3
  5239a7:	jno    0x523a1c
  5239a9:	fstp   DWORD PTR [eax-0x5b]
  5239ac:	icebp  
  5239ad:	jo     0x5239db
  5239af:	inc    edi
  5239b0:	pop    ecx
  5239b1:	leave  
  5239b2:	cmp    BYTE PTR [ebx+0x41],ah
  5239b5:	cmp    ebx,DWORD PTR [ebp+edx*8+0x31342277]
  5239bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5239bd:	pop    esp
  5239be:	lock int3 
  5239c0:	jge    0x523979
  5239c2:	inc    edi
  5239c3:	sub    BYTE PTR [ecx+0x2bb73f04],dh
  5239c9:	adc    al,0x1c
  5239cb:	std    
  5239cc:	mov    dl,0x26
  5239ce:	ret    0xd0ee
  5239d1:	cli    
  5239d2:	push   cs
  5239d3:	into   
  5239d4:	imul   esi
  5239d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5239d7:	or     eax,0x50966376
  5239dc:	jmp    0x523a5a
  5239de:	xchg   DWORD PTR [ecx+0x58fc09af],ecx
  5239e4:	jg     0x523a1b
  5239e6:	xchg   esi,eax
  5239e7:	pop    ecx
  5239e8:	pop    eax
  5239e9:	xchg   BYTE PTR [esi+0x6c2dacde],dl
  5239ef:	cwde   
  5239f0:	into   
  5239f1:	cwde   
  5239f2:	inc    eax
  5239f3:	repnz loopne 0x523a29
  5239f6:	adc    al,cl
  5239f8:	dec    ebp
  5239f9:	xchg   ebp,eax
  5239fa:	xchg   WORD PTR [ecx-0x6f],bp
  5239fe:	repz or eax,DWORD PTR ds:0x4229563f
  523a05:	sub    eax,0x1e5a604f
  523a0a:	retf   0xb56b
  523a0d:	test   al,0x50
  523a0f:	mov    dl,0xc7
  523a11:	sbb    eax,0x190bfe3c
  523a16:	and    ah,BYTE PTR [edx+0x5a139728]
  523a1c:	adc    DWORD PTR [ebx-0x1a],0x4d
  523a20:	imul   esi,DWORD PTR [esi],0x79ea0f47
  523a26:	add    esp,DWORD PTR [esi+0x1ffdf65c]
  523a2c:	sub    DWORD PTR [edi+eiz*8+0xff5657e],esi
  523a33:	or     edx,edi
  523a35:	push   ecx
  523a36:	imul   edi,DWORD PTR [esi],0xffffffcd
  523a39:	push   edi
  523a3a:	in     eax,dx
  523a3b:	sub    DWORD PTR [edx-0xc],eax
  523a3e:	repz pop es
  523a40:	sub    ebx,DWORD PTR [ebx+0x59]
  523a43:	or     eax,0xcbc3d8e0
  523a48:	mov    ebp,0x3d77dddf
  523a4d:	dec    ebp
  523a4e:	test   eax,0x16e2c85a
  523a53:	jo     0x523a7c
  523a55:	fnstcw WORD PTR [ecx-0x4d]
  523a58:	out    dx,al
  523a59:	cmp    bl,dl
  523a5b:	jecxz  0x523a1b
  523a5d:	fisubr DWORD PTR [eax]
  523a5f:	sar    DWORD PTR [eax-0x3c],1
  523a62:	mov    ds:0xf7654816,eax
  523a67:	dec    bx
  523a69:	mov    ch,0xaf
  523a6b:	test   ch,dh
  523a6d:	jne    0x523aa1
  523a6f:	cmp    eax,0x4127f5e1
  523a74:	call   0x64c:0xcdd373cb
  523a7b:	outs   dx,BYTE PTR ds:[esi]
  523a7c:	gs iret 
  523a7e:	in     al,0x3f
  523a80:	fstp   QWORD PTR [ebp-0x5e]
  523a83:	shr    BYTE PTR fs:[edi+0x4dec57f9],cl
  523a8a:	popa   
  523a8b:	and    edi,edx
  523a8d:	mov    ebx,0x5aa3097c
  523a92:	mov    dl,0x2f
  523a94:	sahf   
  523a95:	cmc    
  523a96:	sti    
  523a97:	popf   
  523a98:	xchg   edx,eax
  523a99:	mov    ebp,0xb27fadc1
  523a9e:	outs   dx,DWORD PTR ds:[esi]
  523a9f:	inc    ebp
  523aa0:	fchs   
  523aa2:	fwait
  523aa3:	ud2    
  523aa5:	xchg   BYTE PTR [edx+0x5d4bf5b2],ch
  523aab:	iret   
  523aac:	repnz xor eax,0xca1e69f3
  523ab2:	arpl   WORD PTR [ecx],bp
  523ab4:	add    bl,BYTE PTR [ecx+edi*8]
  523ab7:	jnp    0x523a9f
  523ab9:	push   edi
  523aba:	ins    DWORD PTR es:[edi],dx
  523abb:	mov    ecx,DWORD PTR [edx]
  523abd:	fldcw  WORD PTR [ebx-0x4f6026de]
  523ac3:	mov    ecx,DWORD PTR [ecx+0x1462afb]
  523ac9:	push   esi
  523aca:	dec    esi
  523acb:	cmp    eax,0x22264ecc
  523ad0:	add    al,0xef
  523ad2:	dec    edi
  523ad3:	cmp    dh,bl
  523ad5:	xchg   edx,eax
  523ad6:	push   edi
  523ad7:	push   esi
  523ad8:	jp     0x523b09
  523ada:	mov    ds:0x4fadb585,eax
  523adf:	ret    0xe979
  523ae2:	sbb    DWORD PTR [eax],0xb8645c95
  523ae8:	outs   dx,BYTE PTR ds:[esi]
  523ae9:	dec    edx
  523aea:	fwait
  523aeb:	imul   esp,DWORD PTR [esi],0x74
  523aee:	sbb    BYTE PTR [edx+ebx*8],dh
  523af1:	add    BYTE PTR [esi-0x4f],cl
  523af4:	(bad)  
  523af5:	jbe    0x523aeb
  523af7:	out    0x40,al
  523af9:	add    BYTE PTR [ebp-0x76bff9f7],bl
  523aff:	into   
  523b00:	mov    bl,0x43
  523b02:	sahf   
  523b03:	lds    esi,FWORD PTR [esi]
  523b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523b06:	jno    0x523a98
  523b08:	lea    esi,[edi]
  523b0a:	popa   
  523b0b:	xor    ecx,ebx
  523b0d:	icebp  
  523b0e:	cdq    
  523b0f:	stc    
  523b10:	adc    DWORD PTR [ecx-0x4d1d9af1],edi
  523b16:	push   ss
  523b17:	leave  
  523b18:	loope  0x523b6d
  523b1a:	mov    ah,0xa5
  523b1c:	or     DWORD PTR [ebx+0x4d50c34],esi
  523b22:	mov    ecx,0xab7ee25b
  523b27:	sahf   
  523b28:	(bad)
  523b2c:	xlat   BYTE PTR ds:[ebx]
  523b2d:	repnz sub eax,0xe5ae742
  523b33:	sar    DWORD PTR [edx-0x64bf5b77],1
  523b39:	paddusb mm2,QWORD PTR [eax]
  523b3c:	out    dx,al
  523b3d:	push   cs
  523b3e:	jno    0x523b38
  523b40:	jns    0x523b69
  523b42:	and    ecx,DWORD PTR [esi]
  523b44:	dec    eax
  523b45:	aaa    
  523b46:	or     bh,BYTE PTR [ebp-0x4f]
  523b49:	adc    bh,BYTE PTR [ebp-0x1397030d]
  523b4f:	iret   
  523b50:	fs cmp eax,0x660a7f1a
  523b56:	jno    0x523af1
  523b58:	scas   eax,DWORD PTR es:[edi]
  523b59:	push   edx
  523b5a:	add    al,0xa
  523b5c:	jle    0x523b9b
  523b5e:	xchg   esp,eax
  523b5f:	outs   dx,BYTE PTR cs:[esi]
  523b61:	(bad)  
  523b62:	and    BYTE PTR [eax+eax*4-0x67ef19db],cl
  523b69:	jns    0x523ba5
  523b6b:	(bad)  
  523b6c:	rcr    DWORD PTR [edx+0x16],1
  523b6f:	dec    ebp
  523b70:	je     0x523b1d
  523b72:	pop    ebx
  523b73:	call   0x30cbe55c
  523b78:	xchg   edx,eax
  523b79:	call   DWORD PTR cs:[esi+edi*8+0x28d229d6]
  523b81:	jne    0x523bc7
  523b83:	cli    
  523b84:	pop    esp
  523b85:	mov    eax,0x925077ed
  523b8a:	mov    ebp,0xa667ba46
  523b8f:	rcl    BYTE PTR [ebp+ebx*1-0x6],cl
  523b93:	or     DWORD PTR [edi-0x51fe3e59],edi
  523b99:	mov    ss,edi
  523b9b:	cs pusha 
  523b9d:	test   DWORD PTR ds:0x802183c,esp
  523ba3:	mov    ah,0xc3
  523ba5:	mov    DWORD PTR ds:0x8f9f55f9,edx
  523bab:	jbe    0x523b4d
  523bad:	jg     0x523bec
  523baf:	dec    edi
  523bb0:	and    edx,esi
  523bb2:	sub    cl,BYTE PTR [ebx+0x3c0b946c]
  523bb8:	mov    esp,0x1a9ca8b8
  523bbd:	daa    
  523bbe:	nop
  523bbf:	xchg   esi,eax
  523bc0:	adc    eax,0x15ec14ab
  523bc5:	hlt    
  523bc6:	xor    ebx,DWORD PTR [eax-0x6d610897]
  523bcc:	daa    
  523bcd:	or     ebp,ebp
  523bcf:	jb     0x523ba1
  523bd1:	sbb    edi,ebx
  523bd3:	jne    0x523b6b
  523bd5:	cld    
  523bd6:	push   edx
  523bd7:	rcr    ecx,cl
  523bd9:	sbb    ch,ch
  523bdb:	cmc    
  523bdc:	cli    
  523bdd:	xlat   BYTE PTR ds:[ebx]
  523bde:	in     eax,0x8
  523be0:	mov    esi,0x1276c1bb
  523be5:	fist   WORD PTR [edi+0x37]
  523be8:	inc    eax
  523be9:	adc    esp,esp
  523beb:	sub    bl,dl
  523bed:	sti    
  523bee:	fdivr  DWORD PTR ss:[edx+0x73]
  523bf2:	call   FWORD PTR [ebx-0x30ad6673]
  523bf8:	cmp    eax,0x4fb2cc0e
  523bfd:	add    BYTE PTR [eax-0x5d],0x4
  523c01:	icebp  
  523c02:	xchg   esp,eax
  523c03:	add    DWORD PTR [ebx],edi
  523c05:	fsub   QWORD PTR [ebp+0x49]
  523c08:	jmp    0x523b8d
  523c0a:	xchg   DWORD PTR [ebx-0x4b86a322],ebp
  523c10:	stc    
  523c11:	push   ds
  523c12:	pop    ss
  523c13:	out    0xa9,al
  523c15:	cmp    ch,0xda
  523c18:	add    BYTE PTR [edx+0x596420b],dl
  523c1e:	outs   dx,DWORD PTR ds:[esi]
  523c1f:	xor    edi,esp
  523c21:	or     ah,BYTE PTR ds:0xd1024faf
  523c27:	aaa    
  523c28:	arpl   WORD PTR [ecx],bx
  523c2a:	mov    esp,0xe82af24a
  523c2f:	(bad)  
  523c30:	in     eax,dx
  523c31:	aad    0xf
  523c33:	push   ebx
  523c34:	mov    ah,0x7e
  523c36:	adc    ch,0x3a
  523c39:	jb     0x523cb1
  523c3b:	mov    ah,0x23
  523c3d:	bound  esp,QWORD PTR [ebp+0x5be0fdbd]
  523c43:	mov    ah,0x6f
  523c45:	mov    dh,0x28
  523c47:	xchg   edx,eax
  523c48:	out    dx,eax
  523c49:	shr    BYTE PTR [ebx],1
  523c4b:	push   ss
  523c4c:	in     al,dx
  523c4d:	test   dl,bl
  523c4f:	mov    esp,cs
  523c51:	pop    es
  523c52:	or     DWORD PTR [eax-0x57],ebx
  523c55:	aas    
  523c56:	pop    ds
  523c57:	push   ds
  523c58:	adc    eax,0xd29701bb
  523c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523c5e:	fs cmp ecx,esi
  523c61:	test   DWORD PTR [ebx-0x44bdaa3],0xfbddbd21
  523c6b:	jmp    0x5e5b:0x325ccf07
  523c72:	jno    0x523ca1
  523c74:	sbb    eax,esi
  523c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523c77:	fwait
  523c78:	dec    edx
  523c79:	fs inc esp
  523c7b:	jmp    0xa8c1:0xae49e923
  523c82:	ins    DWORD PTR es:[edi],dx
  523c83:	mov    WORD PTR [esi+0x3e],fs
  523c86:	daa    
  523c87:	cmp    al,0xdf
  523c89:	rcl    BYTE PTR [esi+edi*8-0x6d1f4f7a],1
  523c90:	pop    ecx
  523c92:	or     ecx,ecx
  523c94:	(bad)  
  523c95:	mov    ecx,0xb619c38
  523c9a:	add    eax,0xc26fb6d9
  523c9f:	mov    ecx,0xe5bb82fa
  523ca4:	cmp    DWORD PTR [ebx],edi
  523ca6:	out    0xf6,eax
  523ca8:	rcr    BYTE PTR [ecx+0x67],cl
  523cab:	xor    al,0x71
  523cad:	inc    esi
  523cae:	jno    0x523d2f
  523cb0:	jno    0x523d1b
  523cb2:	jp     0x523cac
  523cb4:	cmp    DWORD PTR [ecx-0x1e6f4cf7],esp
  523cba:	fld    DWORD PTR [ebx+0xd]
  523cbd:	xor    DWORD PTR [ebx-0x45],0xffffffb2
  523cc1:	dec    ebp
  523cc2:	add    dl,BYTE PTR [edi]
  523cc4:	lds    edi,FWORD PTR [ebp-0x43]
  523cc7:	pusha  
  523cc8:	xchg   BYTE PTR [ecx*8-0xe67482e],al
  523ccf:	or     ecx,DWORD PTR [esi-0x6c]
  523cd2:	cmp    DWORD PTR [eax-0x7c],ebx
  523cd5:	xchg   ebx,eax
  523cd6:	xor    eax,0xe063b2b4
  523cdb:	push   ecx
  523cdc:	dec    ebx
  523cdd:	mov    ebx,0x919a3532
  523ce2:	xor    DWORD PTR [ebx],0xffffff90
  523ce5:	mov    edi,0x90702d4
  523cea:	or     BYTE PTR [eax-0x795d4b0],0x88
  523cf1:	adc    ecx,DWORD PTR [eax+0x44]
  523cf4:	(bad)  [edx]
  523cf6:	mov    edi,0x51c9eb0e
  523cfb:	push   cs
  523cfc:	sbb    BYTE PTR ss:[esi],cl
  523cff:	mov    ds:0xad81f598,eax
  523d04:	or     al,0x96
  523d06:	scas   eax,DWORD PTR es:[edi]
  523d07:	enter  0xdca0,0x2f
  523d0b:	shr    ebx,cl
  523d0d:	inc    ecx
  523d0e:	fstp   QWORD PTR [edi-0x3b]
  523d11:	inc    ecx
  523d12:	jmp    0x523d48
  523d14:	pusha  
  523d15:	into   
  523d16:	idiv   DWORD PTR [ebx+eiz*2-0x23]
  523d1a:	daa    
  523d1b:	fdivr  DWORD PTR [ecx+0x19]
  523d1e:	ret    0x5bc7
  523d21:	into   
  523d22:	xor    BYTE PTR [edx+0x6e],dh
  523d25:	add    DWORD PTR [ebx+0x7a],edi
  523d28:	or     DWORD PTR [ecx],edx
  523d2a:	jae    0x523d87
  523d2c:	xor    bh,BYTE PTR [edi+0x43]
  523d2f:	or     eax,0xbbf4237a
  523d34:	mov    edi,0x4310ef5e
  523d39:	sub    ebp,DWORD PTR [ebp-0x6ab3cdf0]
  523d3f:	in     eax,dx
  523d40:	je     0x523dac
  523d42:	popa   
  523d43:	jmp    0x523dbb
  523d45:	push   ebx
  523d46:	jg     0x523d38
  523d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523d49:	data16 sbb BYTE PTR [eax-0x4e],al
  523d4d:	fwait
  523d4e:	cmp    eax,0x63139370
  523d53:	xor    BYTE PTR [esi-0x5669a6f4],ah
  523d59:	arpl   bp,ax
  523d5b:	push   ebp
  523d5c:	mov    edi,0x90d7d2b
  523d61:	jl     0x523d9b
  523d63:	je     0x523d5c
  523d65:	in     al,dx
  523d66:	mov    esp,0xa8ef44f
  523d6b:	pop    es
  523d6c:	xlat   BYTE PTR ds:[ebx]
  523d6d:	sbb    BYTE PTR [edx+esi*2+0x43],bh
  523d71:	and    al,0xcc
  523d73:	jnp    0x523d27
  523d75:	xor    eax,0x2694158c
  523d7a:	and    esp,ebx
  523d7c:	add    BYTE PTR [eax],0xa9
  523d7f:	lahf   
  523d80:	retf   0x48de
  523d83:	js     0x523d26
  523d85:	fld    QWORD PTR [esi+eax*1]
  523d88:	shl    BYTE PTR [eax],0xe9
  523d8b:	push   esi
  523d8c:	jns    0x523d8b
  523d8e:	pop    ss
  523d8f:	mov    cl,0x16
  523d91:	mov    cl,0xc0
  523d93:	mov    edi,0xc96e23f2
  523d98:	push   eax
  523d99:	push   edx
  523d9a:	sbb    DWORD PTR [ebp-0xdf63329],0xffffffcc
  523da1:	sbb    DWORD PTR [eax+0x7b],edx
  523da4:	dec    edx
  523da5:	dec    edx
  523da6:	aad    0x3f
  523da8:	shr    BYTE PTR [eax-0x47e4bbb5],1
  523dae:	jne    0x523deb
  523db0:	dec    esp
  523db1:	mov    ds,WORD PTR [ecx+0x54]
  523db4:	jmp    0xd161:0xe788c302
  523dbb:	jnp    0x523e35
  523dbd:	rcl    BYTE PTR [esi-0x32],cl
  523dc0:	je     0x523e04
  523dc2:	push   edx
  523dc3:	loopne 0x523d8e
  523dc5:	xchg   edx,eax
  523dc6:	shl    edi,0x65
  523dc9:	cmp    al,0xd9
  523dcb:	jns    0x523d73
  523dcd:	bound  edi,QWORD PTR [ebx-0x37]
  523dd0:	and    BYTE PTR [ebp+0x201ec910],bl
  523dd6:	div    BYTE PTR [esi+0x256d622c]
  523ddc:	pop    ss
  523ddd:	jg     0x523e00
  523ddf:	pop    edi
  523de0:	mov    bl,0xdc
  523de2:	cmp    eax,0x5feada18
  523de7:	sbb    eax,DWORD PTR [ecx]
  523de9:	inc    ebx
  523dea:	in     al,0x63
  523dec:	xchg   esp,eax
  523ded:	cmp    bh,dh
  523def:	jmp    0x5b07:0xa8d46dcd
  523df6:	fimul  WORD PTR [ebp-0x793f871b]
  523dfc:	fcom   QWORD PTR [esi]
  523dfe:	sbb    BYTE PTR [ebx-0x41],ah
  523e01:	test   esi,eax
  523e03:	cmp    eax,0xa1620586
  523e08:	pop    ebp
  523e09:	es mov bl,0xc1
  523e0c:	aaa    
  523e0d:	push   ss
  523e0e:	ret    0x7d47
  523e11:	rol    eax,cl
  523e13:	or     al,0xf5
  523e15:	mov    ds:0x98dbc846,eax
  523e1a:	std    
  523e1b:	stc    
  523e1c:	sub    BYTE PTR [ecx],bh
  523e1e:	jae    0x523de4
  523e20:	and    bl,BYTE PTR [esi+0x2b]
  523e23:	or     eax,0x7f07fa89
  523e28:	je     0x523ddb
  523e2a:	mov    ch,0x11
  523e2c:	ja     0x523e95
  523e2e:	sahf   
  523e2f:	jle    0x523ddc
  523e31:	stos   BYTE PTR es:[edi],al
  523e32:	mov    edi,0x22d516a
  523e37:	cld    
  523e38:	xor    BYTE PTR ds:[esi+0x35],bh
  523e3c:	adc    al,0x4d
  523e3e:	dec    ah
  523e40:	xchg   ebx,eax
  523e41:	fnstcw WORD PTR [ebx+0x331f950f]
  523e47:	(bad)  
  523e48:	clc    
  523e49:	mov    dl,0xd0
  523e4b:	adc    eax,esp
  523e4d:	iret   
  523e4e:	cmp    edx,ebx
  523e50:	data16 fisubr DWORD PTR [edx]
  523e53:	sbb    BYTE PTR [ebx+0x29b69ac1],ch
  523e59:	push   ss
  523e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  523e5b:	dec    esp
  523e5c:	inc    esp
  523e5d:	ret    0xe5ff
  523e60:	jle    0x523de9
  523e62:	imul   ecx,DWORD PTR [edx-0x593029bb],0x64c1c716
  523e6c:	dec    edx
  523e6d:	pusha  
  523e6e:	and    bl,BYTE PTR [edi-0x72cdc7d1]
  523e74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  523e75:	mov    ebp,0x2c18ee6
  523e7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523e7b:	inc    eax
  523e7c:	into   
  523e7d:	xor    ebp,DWORD PTR [esi-0x6481bfcb]
  523e83:	mov    dh,0x7c
  523e85:	daa    
  523e86:	nop
  523e87:	(bad)  
  523e88:	sbb    esp,esi
  523e8a:	xor    al,0x2a
  523e8c:	or     DWORD PTR [ebx],edx
  523e8e:	es jle 0x523e72
  523e91:	push   cs
  523e92:	rcr    DWORD PTR [ebx-0x3f],1
  523e95:	inc    ebp
  523e96:	xchg   ebx,eax
  523e97:	push   ebx
  523e98:	test   al,0xe
  523e9a:	pop    ss
  523e9b:	dec    esp
  523e9c:	xor    eax,0xf8b19521
  523ea1:	pop    eax
  523ea2:	ja     0x523ea2
  523ea4:	rol    DWORD PTR [esp+ebx*4],cl
  523ea7:	imul   eax,ecx,0x89677820
  523ead:	(bad)  
  523eae:	jmp    0xd7ae:0xba8f7ec0
  523eb5:	xlat   BYTE PTR ds:[ebx]
  523eb6:	dec    ecx
  523eb7:	ret    
  523eb8:	jmp    0x523efc
  523eba:	push   0xffffff8c
  523ebc:	push   ds
  523ebd:	fst    st(2)
  523ebf:	out    0x5d,eax
  523ec1:	jle    0x523ee0
  523ec3:	pop    ebp
  523ec4:	leave  
  523ec5:	mov    ch,0x83
  523ec7:	and    eax,0x60d0b4d1
  523ecc:	iret   
  523ecd:	xchg   BYTE PTR [edx+eax*1-0x2248dece],ah
  523ed4:	imul   bp,WORD PTR [esi],0x2c
  523ed8:	jmp    0x54bd:0xd266af41
  523edf:	scas   al,BYTE PTR es:[edi]
  523ee0:	bound  edx,QWORD PTR [ecx-0x7c]
  523ee3:	push   es
  523ee4:	pop    ebp
  523ee5:	out    0x51,al
  523ee7:	aad    0x10
  523ee9:	dec    ebx
  523eea:	adc    eax,0x84238bdd
  523eef:	pop    edi
  523ef0:	loope  0x523ea4
  523ef2:	lods   eax,DWORD PTR ds:[esi]
  523ef3:	aas    
  523ef4:	iret   
  523ef5:	sbb    BYTE PTR [ebx+0x2413b5f4],al
  523efb:	push   ebp
  523efc:	fsub   QWORD PTR [eax-0x33]
  523eff:	das    
  523f00:	test   DWORD PTR [edi],ebp
  523f02:	(bad)  
  523f03:	dec    edi
  523f04:	cs ins BYTE PTR es:[edi],dx
  523f06:	daa    
  523f07:	aad    0xd7
  523f09:	push   ds
  523f0a:	push   0xb05a39e3
  523f0f:	lds    ebx,FWORD PTR [eax+0x53b691cc]
  523f15:	mov    esi,0x3dc03a90
  523f1a:	xchg   ecx,eax
  523f1b:	xchg   esp,eax
  523f1c:	add    BYTE PTR [edi],bh
  523f1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  523f1f:	in     eax,dx
  523f20:	outs   dx,DWORD PTR ds:[esi]
  523f21:	stc    
  523f22:	sbb    dh,BYTE PTR [eax]
  523f24:	jmp    ebx
  523f26:	(bad)  
  523f27:	scas   al,BYTE PTR es:[edi]
  523f28:	pop    ss
  523f29:	mov    esi,0x5f6242ef
  523f2e:	cli    
  523f2f:	sub    dh,cl
  523f31:	sub    bl,dh
  523f33:	shr    DWORD PTR [esi+0x55],0x62
  523f37:	loop   0x523ef9
  523f39:	pusha  
  523f3a:	mov    edx,0x3a833790
  523f3f:	fcomp  st(3)
  523f41:	adc    ecx,esp
  523f43:	(bad)  es:[edx-0x18]
  523f47:	pop    ss
  523f48:	push   ds
  523f49:	popf   
  523f4a:	std    
  523f4b:	(bad)  [ebx]
  523f4d:	out    dx,al
  523f4e:	xchg   BYTE PTR [esi+0x1f1824df],al
  523f54:	test   al,0x33
  523f56:	pop    es
  523f57:	fwait
  523f58:	imul   esp,eax,0x6415bf9c
  523f5e:	in     al,0xeb
  523f60:	ret    
  523f61:	xchg   BYTE PTR [edx+0x42],cl
  523f64:	rcl    edx,1
  523f66:	in     eax,dx
  523f67:	repnz mov edx,0xedaf247e
  523f6d:	mov    ah,0x5
  523f6f:	jae    0x523fe9
  523f71:	cmp    ebx,DWORD PTR [edi+0x24]
  523f74:	inc    esi
  523f75:	jns    0x523fe6
  523f77:	popa   
  523f78:	inc    esp
  523f79:	jmp    0x61bf3e36
  523f7e:	outs   dx,DWORD PTR ds:[esi]
  523f7f:	add    al,0x45
  523f81:	cmp    esp,edi
  523f83:	or     bl,dl
  523f85:	adc    DWORD PTR [eax-0x36],edi
  523f88:	sub    DWORD PTR ds:0x28440968,ecx
  523f8e:	clc    
  523f8f:	(bad)  
  523f91:	xchg   ebx,eax
  523f92:	cmp    eax,0x91376d04
  523f97:	push   es
  523f98:	cli    
  523f99:	push   edi
  523f9a:	out    0x13,al
  523f9c:	pusha  
  523f9d:	mov    es,WORD PTR [esi-0x8]
  523fa0:	push   esp
  523fa1:	dec    esp
  523fa2:	lods   al,BYTE PTR ds:[esi]
  523fa3:	pop    edi
  523fa4:	(bad)  
  523fa5:	push   ebp
  523fa6:	xor    DWORD PTR [esi-0x3e],ebp
  523fa9:	dec    ebp
  523faa:	xchg   edi,eax
  523fab:	cmp    edi,DWORD PTR [ecx+ecx*1-0x111a7159]
  523fb2:	mov    fs,WORD PTR [edi]
  523fb4:	out    dx,al
  523fb5:	push   ebx
  523fb6:	or     eax,0x96914933
  523fbb:	in     al,dx
  523fbc:	ss sub eax,0x80ba4965
  523fc2:	sub    edx,DWORD PTR [ebp*8+0xcce50ea]
  523fc9:	ret    
  523fca:	xchg   BYTE PTR [edx+0x28],al
  523fcd:	mov    bh,ah
  523fcf:	push   es
  523fd0:	hlt    
  523fd1:	icebp  
  523fd2:	int3   
  523fd3:	bswap  esi
  523fd5:	mov    dh,0x60
  523fd7:	push   ss
  523fd8:	test   BYTE PTR [edi],bl
  523fda:	inc    ebx
  523fdb:	mov    ecx,0x20c2680d
  523fe0:	sbb    DWORD PTR [eax],ecx
  523fe2:	test   DWORD PTR [ecx-0x573ebcf],0xf8c5f5c
  523fec:	pop    ebp
  523fed:	sahf   
  523fee:	in     al,dx
  523fef:	push   ds
  523ff0:	xlat   BYTE PTR ds:[ebx]
  523ff1:	call   0x2503:0x1d6463a9
  523ff8:	xchg   esp,eax
  523ff9:	push   ds
  523ffa:	add    eax,0x5c4fd092
  523fff:	mov    ds:0x7adfc280,eax
  524004:	and    ah,BYTE PTR [eax-0x12]
  524007:	mov    eax,0xc444fbe5
  52400c:	(bad)  
  52400d:	fcomp  DWORD PTR [edi*4-0x21fb6197]
  524014:	dec    edi
  524015:	aam    0xa3
  524017:	or     esp,ecx
  524019:	xor    al,0x9e
  52401b:	popa   
  52401c:	pop    esp
  52401d:	imul   DWORD PTR [ecx]
  52401f:	imul   esp,esi,0xfffffff3
  524022:	jno    0x52401b
  524024:	jp     0x524092
  524026:	sub    DWORD PTR [edi],esp
  524028:	mov    al,0x6d
  52402a:	pop    esi
  52402b:	sub    DWORD PTR [eax],esi
  52402d:	inc    edi
  52402e:	dec    eax
  52402f:	sbb    al,0x9e
  524031:	stos   BYTE PTR es:[edi],al
  524032:	hlt    
  524033:	aam    0xdf
  524035:	jmp    0x524066
  524037:	xchg   edx,eax
  524038:	repz pop eax
  52403a:	loop   0x523fef
  52403c:	inc    edx
  52403d:	gs push ebp
  52403f:	inc    esi
  524040:	pop    ebp
  524041:	dec    ebp
  524042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524044:	add    DWORD PTR [ebp*8+0x4aed2163],ebp
  52404b:	pop    es
  52404c:	mul    DWORD PTR [ecx-0x3e6cc3cd]
  524052:	and    al,BYTE PTR [eax]
  524054:	outs   dx,BYTE PTR ds:[esi]
  524055:	pushf  
  524056:	adc    BYTE PTR ds:0x9868269c,cl
  52405c:	push   eax
  52405d:	enter  0x5534,0xa8
  524061:	sub    dl,dh
  524063:	cli    
  524064:	in     eax,dx
  524065:	pop    esp
  524066:	push   eax
  524067:	jbe    0x524018
  524069:	stos   BYTE PTR es:[edi],al
  52406a:	push   0x37
  52406c:	gs jl  0x52407c
  52406f:	sub    DWORD PTR [ebx],0x41adbd6b
  524075:	stos   DWORD PTR es:[edi],eax
  524076:	push   esi
  524077:	aaa    
  524078:	cmp    DWORD PTR [eax+0x23],edx
  52407b:	ja     0x5240f2
  52407d:	xchg   bl,bl
  52407f:	cld    
  524080:	cmp    ecx,DWORD PTR [ecx-0x13c95bec]
  524086:	(bad)  
  524087:	cmp    cl,BYTE PTR [esi]
  524089:	inc    ebx
  52408a:	fimul  WORD PTR [ebp+ebx*4-0x65]
  52408e:	ror    DWORD PTR [ecx-0x20],1
  524091:	pop    ebx
  524092:	jecxz  0x5240b9
  524094:	dec    ecx
  524095:	mov    ebx,0xceb3abdc
  52409a:	std    
  52409b:	clc    
  52409c:	ins    DWORD PTR es:[edi],dx
  52409d:	inc    ebp
  52409e:	rol    DWORD PTR [ebp+0x359b92eb],cl
  5240a4:	xchg   edi,eax
  5240a5:	imul   ebx,DWORD PTR [esi+0x155d71b],0x23f6d708
  5240af:	test   BYTE PTR es:[ebx+0x3f1ff8c8],ah
  5240b6:	dec    edi
  5240b7:	and    eax,0x433bdd08
  5240bc:	cli    
  5240bd:	test   DWORD PTR [edx-0x5c],ebp
  5240c0:	fcom   st(0)
  5240c2:	out    0xf7,al
  5240c4:	test   al,0xde
  5240c6:	arpl   sp,cx
  5240c8:	mov    ds:0xc79c0cbd,eax
  5240cd:	mov    esp,0x1d1a6661
  5240d2:	xor    eax,0xb52e1090
  5240d7:	out    0x69,al
  5240d9:	cmp    DWORD PTR [eax],edx
  5240db:	bnd jae 0x524123
  5240de:	icebp  
  5240df:	div    DWORD PTR [esi+0x19d355f9]
  5240e5:	dec    ebp
  5240e6:	adc    eax,0x5323f0d8
  5240eb:	imul   al
  5240ed:	sbb    ebp,DWORD PTR [edi]
  5240ef:	je     0x524081
  5240f1:	rcl    edi,cl
  5240f3:	jmp    0x5708:0x6776705d
  5240fa:	jge    0x5240d8
  5240fc:	(bad)  
  5240fd:	das    
  5240fe:	pop    eax
  5240ff:	daa    
  524100:	add    al,0xce
  524102:	mov    bh,0x58
  524104:	ds in  eax,0xba
  524107:	pop    edx
  524108:	push   edx
  524109:	jmp    0x8bce:0x87b7b7a0
  524110:	pop    ds
  524111:	inc    ebx
  524112:	xchg   esi,eax
  524113:	ds clc 
  524115:	test   DWORD PTR [eax-0x4e904e90],ebx
  52411b:	(bad)  
  52411c:	out    0x7c,eax
  52411e:	cli    
  52411f:	cmp    esp,DWORD PTR [ebp+0xe32ebb9]
  524125:	add    DWORD PTR [ebp+0x32],edx
  524128:	ret    0x7ed9
  52412b:	add    bl,dl
  52412d:	imul   edi,DWORD PTR [esp+ecx*1-0x6],0x29
  524132:	ja     0x524135
  524134:	or     al,0xc3
  524136:	sbb    al,0x4a
  524138:	inc    esp
  524139:	lods   eax,DWORD PTR ds:[esi]
  52413a:	cmp    DWORD PTR [esi+0x16c9a4a2],esp
  524140:	bound  eax,QWORD PTR [eax-0x61c341d0]
  524146:	pop    DWORD PTR [edx+eiz*1]
  524149:	addr16 inc ebp
  52414b:	dec    ebx
  52414c:	push   esi
  52414d:	sub    ch,BYTE PTR [edi+0x30]
  524150:	push   cs
  524151:	sub    al,0x25
  524153:	repz jne 0x524114
  524156:	cmp    bh,BYTE PTR [ebx]
  524158:	sub    DWORD PTR [eax+eiz*2-0x5d],0x3b
  52415d:	mov    ds:0x7beb73c,eax
  524162:	cmp    DWORD PTR [ebx-0x315a3fdd],edi
  524168:	jb     0x52411d
  52416a:	lock sar BYTE PTR [edi-0x6],cl
  52416e:	jno    0x52416d
  524170:	call   0xfba5:0xc34c7532
  524177:	pop    edi
  524178:	xchg   esi,eax
  524179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52417a:	fldcw  WORD PTR [edx-0x20]
  52417d:	pop    ecx
  52417e:	out    0xd7,eax
  524180:	adc    eax,0xc9bf4367
  524185:	push   esi
  524186:	dec    edx
  524187:	call   0x1548:0x34721446
  52418e:	sub    al,0xce
  524190:	out    dx,eax
  524191:	xor    ecx,DWORD PTR [esi-0x22]
  524194:	sahf   
  524195:	mov    edx,0x92c904b2
  52419a:	cmp    esi,DWORD PTR [ecx+0x7393084b]
  5241a0:	das    
  5241a1:	retf   0x6e4
  5241a4:	mov    bh,BYTE PTR [ecx]
  5241a6:	daa    
  5241a7:	arpl   WORD PTR [ecx],di
  5241a9:	jle    0x524209
  5241ab:	outs   dx,BYTE PTR ds:[esi]
  5241ac:	cmp    dl,BYTE PTR [eax-0x48]
  5241af:	pop    edx
  5241b0:	fcomip st,st(1)
  5241b2:	fiadd  WORD PTR [ebp-0x1df4ecb7]
  5241b8:	mov    dl,0x3d
  5241ba:	mov    WORD PTR [edx],gs
  5241bc:	dec    ecx
  5241bd:	sar    DWORD PTR ss:[edi+0x7b37a8d],0x96
  5241c5:	js     0x5241b9
  5241c7:	dec    edx
  5241c8:	int3   
  5241c9:	sar    DWORD PTR ds:0x22915e29,0x30
  5241d0:	sbb    DWORD PTR [edx],0xffffffaa
  5241d3:	sar    BYTE PTR [edx+0x26],0x5c
  5241d7:	xor    ecx,edi
  5241d9:	je     0x52420e
  5241db:	mov    eax,ds:0x4e44c3b8
  5241e0:	dec    edi
  5241e1:	fninit 
  5241e3:	(bad)  
  5241e4:	mov    eax,ds:0x439383e4
  5241e9:	test   edi,ecx
  5241eb:	inc    edx
  5241ec:	dec    eax
  5241ed:	les    ebp,FWORD PTR [ecx-0x43]
  5241f0:	cwde   
  5241f1:	out    dx,al
  5241f2:	ret    0x761a
  5241f5:	jno    0x5241da
  5241f7:	xor    al,0x60
  5241f9:	inc    esp
  5241fa:	fucomi st,st(2)
  5241fc:	and    edx,ecx
  5241fe:	sub    BYTE PTR [ebx+0x50],ch
  524201:	dec    edi
  524202:	test   al,0x71
  524204:	loopne 0x52419b
  524206:	jmp    0xa67b:0x80890270
  52420d:	test   al,0x7d
  52420f:	push   ss
  524210:	cs xchg ebx,eax
  524212:	push   0x49
  524214:	and    BYTE PTR [esi-0x53],cl
  524217:	mov    WORD PTR [edx-0x188afb36],?
  52421d:	or     DWORD PTR cs:[eax+0x7e],ebx
  524221:	mov    esp,0x6e96e9c7
  524226:	dec    eax
  524227:	or     dh,BYTE PTR [eax-0x5d]
  52422a:	lock icebp 
  52422c:	fnstenv [ecx+edx*1+0x4f077d9e]
  524233:	sbb    eax,0xdae4b433
  524238:	in     eax,dx
  524239:	sahf   
  52423a:	push   es
  52423b:	mov    esi,DWORD PTR [ebx]
  52423d:	std    
  52423e:	mov    esi,0x11fb52ec
  524243:	rcl    BYTE PTR [eax+esi*1],cl
  524246:	ret    
  524247:	mov    al,ds:0x85e4beda
  52424c:	pop    ebx
  52424d:	mov    ah,BYTE PTR [ebx+eiz*8]
  524250:	(bad)  
  524251:	xchg   edx,eax
  524252:	xchg   edi,eax
  524253:	dec    DWORD PTR fs:[edi-0x1e]
  524257:	xor    bh,BYTE PTR [ebx-0x6d26cc9c]
  52425d:	pop    esi
  52425e:	dec    edx
  52425f:	shl    DWORD PTR [eax-0x52],cl
  524262:	xchg   cl,al
  524264:	dec    ecx
  524265:	loope  0x5241f0
  524267:	sbb    DWORD PTR [ecx],0x20d3f290
  52426d:	push   ebx
  52426e:	in     al,dx
  52426f:	sbb    DWORD PTR [edx],ebp
  524271:	pop    edi
  524272:	cdq    
  524273:	hlt    
  524274:	sub    DWORD PTR [edi],esi
  524276:	xchg   edi,eax
  524277:	xlat   BYTE PTR ds:[ebx]
  524278:	test   DWORD PTR [eax-0x44],ebx
  52427b:	dec    edi
  52427c:	scas   eax,DWORD PTR es:[edi]
  52427d:	push   ebx
  52427e:	dec    esi
  52427f:	bound  eax,QWORD PTR [ecx-0x58947b53]
  524285:	mov    eax,0x2dd191ad
  52428a:	mov    ebx,0x6a811e7e
  52428f:	and    ch,BYTE PTR [ecx+0x6735870c]
  524295:	xchg   ebp,eax
  524296:	loope  0x5242db
  524298:	mov    ch,0x22
  52429a:	mov    BYTE PTR [esi+edi*2+0x42],dh
  52429e:	cmc    
  52429f:	(bad)  
  5242a0:	lods   eax,DWORD PTR ds:[esi]
  5242a1:	push   edx
  5242a2:	cmc    
  5242a3:	iret   
  5242a4:	add    esi,DWORD PTR [edx+0x22]
  5242a7:	int3   
  5242a8:	clc    
  5242a9:	dec    edx
  5242aa:	cmp    al,0x8e
  5242ac:	sub    BYTE PTR [edx+edx*1-0x45a4d592],cl
  5242b3:	jecxz  0x5242fe
  5242b5:	push   ebp
  5242b6:	xchg   DWORD PTR [ecx],edi
  5242b8:	(bad)
  5242bc:	hlt    
  5242bd:	mov    edx,DWORD PTR [ecx+eax*1-0x137055d7]
  5242c4:	adc    eax,DWORD PTR [eax]
  5242c6:	fdiv   QWORD PTR [edi+0x31]
  5242c9:	add    al,0x7
  5242cb:	jo     0x5242db
  5242cd:	sub    esp,DWORD PTR [ecx-0x6b582581]
  5242d3:	mov    eax,ds:0xf451fc1d
  5242d8:	inc    esp
  5242d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5242da:	fmul   QWORD PTR [ebp+0x19ec12f7]
  5242e0:	ja     0x5242fc
  5242e2:	shr    BYTE PTR [esi-0x13fe8f6c],1
  5242e8:	imul   ecx,DWORD PTR [eax-0x60],0x12f05c6a
  5242ef:	jns    0x524306
  5242f1:	loopne 0x524283
  5242f3:	adc    DWORD PTR [eax+0x457b9e7c],ecx
  5242f9:	call   0xaf768168
  5242fe:	test   eax,0xb15aac75
  524303:	jge    0x5242f5
  524305:	popa   
  524306:	push   ecx
  524307:	clc    
  524308:	mov    al,0xb0
  52430a:	nop
  52430b:	std    
  52430c:	ret    
  52430d:	neg    DWORD PTR [edx+0x30fa1078]
  524313:	daa    
  524314:	aad    0xa
  524316:	test   BYTE PTR ds:0x6420d162,al
  52431c:	push   esp
  52431d:	aam    0x6
  52431f:	rcl    BYTE PTR [eax+0x6b684b2e],1
  524325:	fbstp  TBYTE PTR [edx]
  524327:	loope  0x52430f
  524329:	js     0x524356
  52432b:	push   0x4bcd0c0
  524330:	adc    al,BYTE PTR [ebx]
  524332:	and    cl,cl
  524334:	pop    ecx
  524335:	nop
  524336:	(bad)  [ecx]
  524338:	dec    esp
  524339:	mov    esp,0xc939f568
  52433e:	mov    al,ds:0x7b813841
  524343:	in     eax,dx
  524344:	dec    ebp
  524345:	rcl    DWORD PTR [edx],cl
  524347:	rcl    DWORD PTR [eax],1
  524349:	mov    ds:0x72c2abf1,al
  52434e:	inc    ebx
  52434f:	or     DWORD PTR [ebx-0x33],ecx
  524352:	xchg   esp,eax
  524353:	xor    DWORD PTR [ebx],edi
  524355:	sar    DWORD PTR ds:0xd0f9d496,1
  52435b:	clc    
  52435c:	call   FWORD PTR ds:0xeda849f2
  524362:	sub    ah,BYTE PTR [ebp+0x768abc8]
  524368:	in     eax,dx
  524369:	shr    DWORD PTR [eax+0x6f2a51fe],cl
  52436f:	lock dec eax
  524371:	les    ebx,FWORD PTR [edi+0x55]
  524374:	jle    0x52432f
  524376:	mov    ch,0xbb
  524378:	xor    ecx,DWORD PTR [esi]
  52437a:	sub    al,0x2
  52437c:	pop    edx
  52437d:	sub    BYTE PTR [edx],al
  52437f:	mov    dh,0xf7
  524381:	ss arpl sp,cx
  524384:	aaa    
  524385:	dec    edx
  524386:	jno    0x52437b
  524388:	dec    edi
  524389:	fcmovb st,st(1)
  52438b:	aam    0xa6
  52438d:	enter  0x5cf7,0x0
  524391:	sbb    eax,0x41ed2a0e
  524396:	(bad)  
  524397:	pop    ebp
  524398:	xor    eax,0xee9b7bf0
  52439d:	cmc    
  52439e:	pop    eax
  52439f:	fstp   QWORD PTR [ecx-0x14feb4ea]
  5243a5:	push   0x33
  5243a7:	mov    ebp,0x173a3d5d
  5243ac:	fisubr DWORD PTR [ecx]
  5243ae:	or     al,0xe5
  5243b0:	add    edx,esp
  5243b2:	(bad)  
  5243b3:	jne    0x5243a7
  5243b5:	push   es
  5243b6:	popa   
  5243b7:	daa    
  5243b8:	sti    
  5243b9:	mov    esp,0xa2e5f94c
  5243be:	mov    dl,0x7a
  5243c0:	(bad)  
  5243c1:	addr16 pop edi
  5243c3:	retf   0x5819
  5243c6:	outs   dx,DWORD PTR ds:[esi]
  5243c7:	lea    ecx,[edx]
  5243c9:	sub    DWORD PTR [ebp-0x1f],eax
  5243cc:	fist   WORD PTR [esi-0x80]
  5243cf:	lds    edi,FWORD PTR [eax-0x1ce33fe2]
  5243d5:	fmul   QWORD PTR [ebx+0x60]
  5243d8:	mov    edx,DWORD PTR [ebx]
  5243da:	stc    
  5243db:	mov    edx,0xc4bf809
  5243e0:	je     0x5243f2
  5243e2:	push   edi
  5243e3:	jge    0x5243de
  5243e5:	scas   eax,DWORD PTR es:[edi]
  5243e6:	jle    0x52441d
  5243e8:	jl     0x52436b
  5243ea:	xor    eax,0xb7a9511f
  5243ef:	push   ebx
  5243f0:	out    dx,eax
  5243f1:	or     al,BYTE PTR [ebx]
  5243f3:	cmp    DWORD PTR [esi-0x27],0x950238c7
  5243fa:	bound  esp,QWORD PTR [edx]
  5243fc:	add    edx,DWORD PTR [edi+0x23]
  5243ff:	stos   BYTE PTR es:[edi],al
  524400:	inc    ecx
  524402:	xchg   DWORD PTR ds:0x352ffb28,edx
  524408:	les    ecx,FWORD PTR [esi+0x53e503b7]
  52440e:	in     al,dx
  52440f:	int    0x24
  524411:	add    BYTE PTR [esi],ah
  524413:	outs   dx,BYTE PTR ds:[esi]
  524414:	mov    cl,0xb7
  524416:	push   esp
  524417:	bound  ebx,QWORD PTR [eax-0x72]
  52441a:	xor    bl,0x2c
  52441d:	dec    esp
  52441e:	ret    
  52441f:	xor    cl,dh
  524421:	ficom  WORD PTR [esi-0x1f]
  524424:	sbb    al,0xf8
  524426:	hlt    
  524427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524428:	add    BYTE PTR [edi-0x7a],0xa5
  52442c:	pop    ebp
  52442d:	(bad)  
  52442e:	addr16 js 0x5243cd
  524431:	and    eax,0x6f8f3ce1
  524436:	cmp    dl,BYTE PTR [edi+0x2f9a959d]
  52443c:	mov    cl,0x78
  52443e:	lea    ecx,[ecx]
  524440:	(bad)  
  524441:	dec    ebx
  524442:	cmp    al,0xdd
  524444:	and    DWORD PTR [ebp+edx*4-0x5dbc1515],esp
  52444b:	cmp    bl,dl
  52444d:	pusha  
  52444e:	xor    eax,0xb4c3bbd2
  524453:	jo     0x5244cf
  524455:	cmp    DWORD PTR [eax-0x7],edi
  524458:	test   DWORD PTR [edi],esp
  52445a:	ret    0x1c9e
  52445d:	psrlw  mm1,QWORD PTR cs:[edi]
  524461:	mov    ch,0x94
  524463:	mov    ch,0x4b
  524465:	shl    dh,1
  524467:	dec    esp
  524468:	ins    BYTE PTR es:[edi],dx
  524469:	adc    ebp,edi
  52446b:	add    eax,ebp
  52446d:	jo     0x5244ca
  52446f:	jno    0x524455
  524471:	jae    0x5244c7
  524473:	and    esp,esp
  524475:	xchg   esp,eax
  524476:	aam    0x37
  524478:	push   ss
  524479:	jbe    0x5244c3
  52447b:	cmp    eax,0x8c6ffe54
  524480:	cmc    
  524481:	push   0xe1fde465
  524486:	test   BYTE PTR [edx-0x53],dl
  524489:	jmp    0x57d8:0x71e4d1d6
  524490:	jae    0x524473
  524492:	inc    edi
  524493:	(bad)  
  524494:	xchg   ecx,eax
  524495:	cmp    eax,0xadb6fdf8
  52449a:	cdq    
  52449b:	push   ebp
  52449c:	retf   
  52449d:	cmp    esp,DWORD PTR [eax-0x32b73ddf]
  5244a3:	(bad)  
  5244a5:	mov    ah,BYTE PTR [eax]
  5244a7:	jb     0x524446
  5244a9:	call   0xc158:0x753a6fd7
  5244b0:	pop    ds
  5244b1:	sub    edx,ecx
  5244b3:	adc    ah,BYTE PTR [ebx+0x8ff157a]
  5244b9:	sahf   
  5244ba:	aaa    
  5244bb:	stc    
  5244bc:	lods   al,BYTE PTR ds:[esi]
  5244bd:	xchg   ecx,eax
  5244be:	or     DWORD PTR ds:0xf67789e,edi
  5244c4:	mov    esi,0xa4a17ef2
  5244c9:	pop    esp
  5244ca:	sbb    dl,bl
  5244cc:	adc    esp,esp
  5244ce:	icebp  
  5244cf:	inc    eax
  5244d0:	jns    0x524534
  5244d2:	icebp  
  5244d3:	and    edx,esp
  5244d5:	jecxz  0x524493
  5244d7:	xlat   BYTE PTR ds:[ebx]
  5244d8:	and    ebx,0x6e7b0261
  5244de:	xor    BYTE PTR [ebx],0xd2
  5244e1:	mov    ah,0xb5
  5244e3:	mov    DWORD PTR [ecx+0x478b266c],ecx
  5244e9:	mov    eax,ds:0xd871f43e
  5244ee:	inc    ebx
  5244ef:	dec    eax
  5244f0:	pop    ecx
  5244f1:	call   0x953b97ba
  5244f6:	cmp    DWORD PTR [edi+esi*1],ecx
  5244f9:	popa   
  5244fa:	add    al,0xf5
  5244fc:	cmp    eax,DWORD PTR [ebx+0x26ccb357]
  524502:	mov    esp,0x136ce40e
  524507:	addr16 int3 
  524509:	or     al,0xb7
  52450b:	push   eax
  52450c:	scas   eax,DWORD PTR es:[edi]
  52450d:	push   0xc441c4ff
  524512:	call   0x7253:0x1d22dcd3
  524519:	pop    esi
  52451a:	pop    ebp
  52451b:	sub    edx,ebx
  52451d:	and    BYTE PTR [ecx+edx*4-0x78],cl
  524521:	or     esp,DWORD PTR [eax+0x29]
  524524:	inc    ecx
  524525:	sbb    BYTE PTR ds:0xb7da5cf8,al
  52452b:	xor    DWORD PTR [edi-0x40664d96],esp
  524531:	inc    esp
  524532:	ja     0x524535
  524534:	je     0x524584
  524536:	pop    edi
  524537:	fisubr WORD PTR [ebp+ecx*1-0xa]
  52453b:	sbb    BYTE PTR [edx],ch
  52453d:	jmp    0x32f5:0xd20e21c
  524544:	jae    0x5245a8
  524546:	addr16 out dx,eax
  524548:	frstor [ebx+0x6a0b4922]
  52454e:	mov    DWORD PTR [edi-0x11],esi
  524551:	cmp    bh,dh
  524553:	push   ss
  524554:	mov    bl,0xb0
  524556:	das    
  524557:	inc    esi
  524558:	sub    edi,eax
  52455a:	pushf  
  52455b:	into   
  52455c:	mov    esp,0x57c77927
  524561:	aas    
  524562:	jae    0x524568
  524564:	mov    ebx,0xdd63b31
  524569:	aas    
  52456a:	mov    WORD PTR [edi+0x7f3078d5],?
  524570:	lods   eax,DWORD PTR ds:[esi]
  524571:	mov    DWORD PTR [ebx-0x45fafbbe],esi
  524577:	enter  0xa0f5,0xf0
  52457b:	ins    DWORD PTR es:[edi],dx
  52457c:	or     al,0x8d
  52457e:	std    
  52457f:	test   edi,0x487e737b
  524585:	cmp    cl,BYTE PTR [ebp+0x50]
  524588:	inc    ebp
  524589:	sbb    bl,BYTE PTR [eax-0x33]
  52458c:	(bad)  
  52458e:	(bad)  
  52458f:	xchg   edi,eax
  524591:	xor    BYTE PTR es:[esi],ah
  524594:	add    eax,0xaf67c368
  524599:	sbb    DWORD PTR [esi+0xe],esp
  52459c:	pop    esp
  52459d:	(bad)
  5245a1:	xchg   edi,eax
  5245a2:	outs   dx,BYTE PTR ds:[esi]
  5245a3:	sti    
  5245a4:	cs retf 
  5245a6:	repnz fs aas 
  5245a9:	dec    ebx
  5245aa:	(bad)  
  5245ab:	adc    edi,DWORD PTR [ecx+0x40]
  5245ae:	or     BYTE PTR [eax-0x2],al
  5245b1:	jns    0x524586
  5245b3:	lock xor DWORD PTR [ecx+ecx*1],ecx
  5245b7:	mov    edx,0x3e04a409
  5245bc:	imul   esi,DWORD PTR [esi-0x2f],0x5d
  5245c0:	jmp    0xee2b9158
  5245c5:	jb     0x5245d3
  5245c7:	fst    QWORD PTR [esi+0x4c]
  5245ca:	sbb    al,0x4f
  5245cc:	aaa    
  5245cd:	test   al,0x1c
  5245cf:	or     ebx,DWORD PTR [ebx+0x56]
  5245d2:	sub    eax,0x185db8fc
  5245d7:	pop    edi
  5245d8:	mov    bh,0xbb
  5245da:	or     ch,BYTE PTR [ebp+0x63]
  5245dd:	push   ss
  5245de:	std    
  5245df:	xchg   DWORD PTR [eax+0x7681848f],esi
  5245e5:	mov    ch,0x26
  5245e7:	rol    DWORD PTR [ebx+0x4f],cl
  5245ea:	pop    es
  5245eb:	add    esp,DWORD PTR [ebp-0x3e]
  5245ee:	sbb    DWORD PTR [eax],0x2d
  5245f1:	stos   BYTE PTR es:[edi],al
  5245f2:	ins    BYTE PTR es:[edi],dx
  5245f3:	sub    eax,0x7346fdb9
  5245f8:	(bad)  
  5245f9:	in     al,0xd0
  5245fb:	or     bh,ah
  5245fd:	dec    ebp
  5245fe:	cmc    
  5245ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524600:	repz fimul DWORD PTR [ebx-0x10]
  524604:	xor    BYTE PTR ds:0xfdde406b,bl
  52460a:	test   edi,0xf8762b07
  524610:	stos   BYTE PTR es:[edi],al
  524611:	imul   esp,DWORD PTR [ebp-0x19],0xffffff8a
  524615:	xchg   DWORD PTR [esi-0x16f05f0e],ebp
  52461b:	ins    BYTE PTR es:[edi],dx
  52461c:	(bad)  
  52461d:	mov    bh,0x10
  52461f:	cmp    DWORD PTR [edi],ebx
  524621:	sub    al,0xcd
  524623:	pop    eax
  524624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  524625:	popf   
  524626:	pop    ebp
  524627:	adc    edx,DWORD PTR [esi-0x65]
  52462a:	bound  esp,QWORD PTR [ecx]
  52462c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52462d:	inc    edx
  52462e:	adc    BYTE PTR [eax-0x16],bl
  524631:	xchg   edi,eax
  524632:	push   edi
  524633:	outs   dx,BYTE PTR ds:[esi]
  524634:	adc    al,0x2c
  524636:	jmp    0x5b242bea
  52463b:	bswap  ebp
  52463d:	add    cl,BYTE PTR [eax+0x47]
  524640:	clc    
  524641:	mov    al,0x2e
  524643:	push   cs
  524644:	mov    cl,0x8b
  524646:	ror    BYTE PTR [esi+0x109df6e6],cl
  52464c:	fdiv   QWORD PTR [eax+0x4d]
  52464f:	data16 ja 0x5245f1
  524652:	loope  0x5246d1
  524654:	int3   
  524655:	push   ebx
  524656:	xor    ch,bh
  524658:	sti    
  524659:	pop    esp
  52465a:	repz cmp DWORD PTR [eax],0xffffffe9
  52465e:	js     0x524694
  524660:	push   ds
  524661:	sbb    WORD PTR [edi-0x39c1d2c4],dx
  524668:	sbb    bh,BYTE PTR [ecx+0x11]
  52466b:	and    DWORD PTR [ebx+eiz*2],ebp
  52466e:	or     eax,0x3ce0945e
  524673:	inc    esp
  524674:	add    BYTE PTR [ecx],cl
  524676:	adc    bl,ah
  524678:	cmp    al,0x67
  52467a:	jl     0x52460a
  52467c:	pushf  
  52467d:	mov    ah,0xee
  52467f:	inc    BYTE PTR [ebx+0x48]
  524682:	pop    ebx
  524683:	dec    eax
  524684:	jge    0x524683
  524686:	out    0x2c,eax
  524688:	leave  
  524689:	int    0xf3
  52468b:	dec    ebx
  52468c:	stos   BYTE PTR es:[edi],al
  52468d:	std    
  52468e:	adc    al,0x8d
  524690:	push   cs
  524691:	lods   eax,DWORD PTR ds:[esi]
  524692:	loop   0x524620
  524694:	scas   eax,DWORD PTR es:[edi]
  524695:	inc    esi
  524696:	data16 or BYTE PTR fs:[ebx],bl
  52469a:	test   eax,0xee937088
  52469f:	mov    edx,0x3346f0cc
  5246a4:	or     BYTE PTR [eax+ebx*1],bh
  5246a7:	test   eax,0x7ca33b72
  5246ac:	ret    0x29ea
  5246af:	rol    DWORD PTR [edx],cl
  5246b1:	mov    esp,0xee00e2ea
  5246b6:	js     0x5246cf
  5246b8:	or     edi,edi
  5246ba:	adc    BYTE PTR [ecx+0x69],ah
  5246bd:	sbb    cl,cl
  5246bf:	mov    dh,0xec
  5246c1:	(bad)  
  5246c2:	pop    esp
  5246c3:	or     al,0x2e
  5246c5:	leave  
  5246c6:	and    eax,0xe0754020
  5246cb:	jl     0x524736
  5246cd:	xor    DWORD PTR [esi+edi*4],ebx
  5246d0:	adc    cl,BYTE PTR [edx]
  5246d2:	adc    DWORD PTR [eax+edx*4-0x69e96f3a],ebx
  5246d9:	cmc    
  5246da:	and    BYTE PTR [eax-0x2b8713c5],bh
  5246e0:	retf   
  5246e1:	jbe    0x5246c2
  5246e3:	xor    al,0x2a
  5246e5:	mov    ds:0xedae585c,al
  5246ea:	out    dx,eax
  5246eb:	iret   
  5246ec:	in     eax,dx
  5246ed:	int3   
  5246ee:	or     esi,DWORD PTR [ebx+ebx*1+0xeaf9b5b]
  5246f5:	jne    0x5246d9
  5246f7:	loop   0x52469b
  5246f9:	in     al,dx
  5246fa:	js     0x524738
  5246fc:	xchg   DWORD PTR [ebp-0x2ccc0d92],edx
  524702:	mov    WORD PTR [edx-0x1b],?
  524705:	push   ds
  524706:	in     al,0xbf
  524708:	dec    edi
  524709:	jp     0x524709
  52470b:	inc    edx
  52470c:	fdivrp st(5),st
  52470e:	mov    bh,BYTE PTR [ebx]
  524710:	xor    esp,DWORD PTR [eax+0x1d]
  524713:	ret    0x8da3
  524716:	test   edi,ebp
  524718:	sar    BYTE PTR [ecx],cl
  52471a:	mov    al,ds:0x2c1bd1c5
  52471f:	dec    ecx
  524720:	add    BYTE PTR [ebx],0x30
  524723:	stos   DWORD PTR es:[edi],eax
  524724:	mov    al,ds:0x8aeaf05b
  524729:	sahf   
  52472a:	cdq    
  52472b:	aam    0x4e
  52472d:	icebp  
  52472e:	mov    esi,DWORD PTR [ebx+0x52]
  524731:	mov    dl,0xc1
  524733:	ret    0xc7b1
  524736:	repnz (bad) 
  524738:	(bad)  
  52473a:	out    dx,eax
  52473b:	push   eax
  52473c:	xchg   edx,eax
  52473d:	push   edi
  52473e:	mov    ch,0xfd
  524740:	inc    eax
  524741:	and    DWORD PTR [eax+0x7e],0xffffffca
  524745:	xor    dl,BYTE PTR ds:0x3e7710c2
  52474b:	leave  
  52474c:	adc    ah,BYTE PTR [ecx]
  52474e:	xor    eax,0xecf01a73
  524753:	stos   BYTE PTR es:[edi],al
  524754:	push   cs
  524755:	jmp    0x8aa1:0xf74b6ba5
  52475c:	orps   xmm1,XMMWORD PTR gs:[eax-0x32f88eef]
  524764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524765:	lods   eax,DWORD PTR ds:[esi]
  524766:	aad    0xb8
  524768:	cmp    ecx,ebx
  52476a:	shl    ebp,0xbb
  52476d:	pop    esi
  52476e:	mov    ecx,0x128adf3c
  524773:	ss jge 0x524791
  524776:	mov    ecx,0xd76cc143
  52477b:	sub    BYTE PTR [ecx],bl
  52477d:	in     eax,0x3c
  52477f:	xor    al,0xe0
  524781:	xor    BYTE PTR [eax],ch
  524783:	ins    BYTE PTR es:[edi],dx
  524784:	test   ch,al
  524786:	data16 jl 0x5247ac
  524789:	adc    eax,0xe9de123e
  52478e:	(bad)  
  52478f:	push   0x47
  524791:	lods   al,BYTE PTR ds:[esi]
  524792:	inc    esi
  524793:	sbb    eax,ecx
  524795:	adc    eax,0xd91d24bb
  52479a:	cmp    al,0x9e
  52479c:	imul   edx,DWORD PTR [eax-0x7a],0xffffffa1
  5247a0:	add    al,0x3d
  5247a2:	jmp    0x816:0x78d3a80
  5247a9:	out    dx,al
  5247aa:	into   
  5247ab:	sub    al,0x35
  5247ad:	mov    ds:0x72d01449,eax
  5247b2:	mov    bh,0xdc
  5247b4:	xchg   esp,eax
  5247b5:	loop   0x524823
  5247b7:	mov    edx,0x8eaad5ab
  5247bc:	xor    cl,dh
  5247be:	push   ds
  5247bf:	or     ebx,DWORD PTR [esi-0x73]
  5247c2:	xor    BYTE PTR [ecx-0x55],dh
  5247c5:	(bad)  
  5247c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5247c7:	retf   0xa671
  5247ca:	loop   0x524810
  5247cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5247cd:	jge    0x524827
  5247cf:	ret    0x71b3
  5247d2:	mov    ebp,0x51a7a5be
  5247d7:	mov    ds:0xc5bb1d74,eax
  5247dc:	jmp    0x99e8:0xb173ba28
  5247e3:	sbb    al,0x51
  5247e5:	call   0xed47:0x56248ba7
  5247ec:	(bad)  
  5247ee:	test   eax,0x2d6ba06
  5247f3:	mov    cl,BYTE PTR [ecx+0x52]
  5247f6:	dec    esi
  5247f7:	out    dx,eax
  5247f8:	mov    esi,0x1e32adec
  5247fd:	cmp    eax,0x673cc4fc
  524802:	in     eax,dx
  524803:	sub    eax,0x6b936afb
  524808:	ins    DWORD PTR es:[edi],dx
  524809:	jmp    0xccc0:0xcf4d41b0
  524810:	jmp    0x8694:0x2d4f458d
  524817:	push   edx
  524818:	push   ebp
  524819:	xlat   BYTE PTR ds:[ebx]
  52481a:	nop
  52481b:	or     eax,0xe49770b2
  524820:	ins    BYTE PTR es:[edi],dx
  524821:	xchg   edi,eax
  524822:	inc    DWORD PTR [eax-0x7e]
  524825:	cmp    ah,BYTE PTR [eax+0xd]
  524828:	js     0x52481b
  52482a:	jg     0x524885
  52482c:	mov    bl,0xc4
  52482e:	or     bl,BYTE PTR [esi-0x60]
  524831:	cli    
  524832:	lock mov esp,0x379181bc
  524838:	fs leave 
  52483a:	or     BYTE PTR [eax-0x3611dede],cl
  524840:	jmp    0xc2ba:0x9d0f97b9
  524847:	mov    ebp,0xeef3ab7c
  52484c:	and    al,0x91
  52484e:	adc    DWORD PTR [ecx],0x2e
  524851:	int3   
  524852:	jne    0x52488f
  524854:	mov    ah,0x51
  524856:	ja     0x524818
  524858:	jns    0x524873
  52485a:	aas    
  52485b:	pusha  
  52485c:	sbb    DWORD PTR [eax+edi*4-0x1239a9e3],edi
  524863:	lock jae 0x5247f6
  524866:	sti    
  524867:	retf   0xaa6d
  52486a:	cdq    
  52486b:	js     0x524810
  52486d:	sub    al,0x8d
  52486f:	dec    esi
  524870:	jl     0x524841
  524872:	jmp    0x92b2:0xa00efab7
  524879:	in     al,dx
  52487a:	xor    eax,0xb976f651
  52487f:	sahf   
  524880:	push   ecx
  524881:	adc    DWORD PTR [ecx+ebp*2-0x6d],eax
  524885:	pop    ds
  524886:	daa    
  524887:	xchg   esi,eax
  524889:	dec    esp
  52488a:	aad    0x4a
  52488c:	aaa    
  52488d:	call   0x26ae253
  524892:	add    esp,ebx
  524894:	test   al,0x65
  524896:	iret   
  524897:	or     DWORD PTR [ecx+0x7a6125b0],0xffffff92
  52489e:	push   es
  52489f:	call   ebp
  5248a1:	sbb    bl,BYTE PTR ds:0xf832e1f5
  5248a7:	std    
  5248a8:	and    edx,edi
  5248aa:	mov    bh,0xfd
  5248ac:	shl    BYTE PTR [edx],1
  5248ae:	sbb    BYTE PTR [ebx+eiz*4],0x23
  5248b2:	mov    esp,0x223288e1
  5248b7:	sbb    cl,BYTE PTR [ebx]
  5248b9:	push   ebp
  5248ba:	or     al,0xe8
  5248bc:	and    eax,0xb0fc8666
  5248c1:	sub    al,0xea
  5248c3:	lods   eax,DWORD PTR ds:[esi]
  5248c4:	mov    eax,0x73b02e38
  5248c9:	mov    BYTE PTR [edi+edi*8+0x17],cl
  5248cd:	in     al,dx
  5248ce:	(bad)  
  5248d1:	repz cmp esp,DWORD PTR [ebp+0x72b09234]
  5248d8:	push   cs
  5248d9:	or     al,0x25
  5248db:	sbb    DWORD PTR [ebp+edi*8+0x6d],eax
  5248df:	inc    edi
  5248e0:	popa   
  5248e1:	or     DWORD PTR [esi-0x31],ebp
  5248e4:	mov    edx,0xa953a1a5
  5248e9:	and    eax,0xbefff69e
  5248ee:	stos   DWORD PTR es:[edi],eax
  5248ef:	sbb    bh,BYTE PTR [ebx+0x53]
  5248f2:	jl     0x5248e1
  5248f4:	or     DWORD PTR [esi+ebx*1+0x1f],esp
  5248f8:	xchg   ebx,eax
  5248f9:	ins    DWORD PTR es:[edi],dx
  5248fa:	push   esi
  5248fb:	cmp    DWORD PTR [esi+0x6c],esp
  5248fe:	out    dx,al
  5248ff:	mov    bh,0xdf
  524901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524902:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524903:	in     eax,dx
  524904:	repz add edi,0x17
  524908:	xchg   edx,eax
  524909:	xor    eax,0x53f81623
  52490e:	xor    bh,al
  524910:	enter  0xc448,0xf2
  524914:	sub    bl,ch
  524916:	in     al,dx
  524917:	repnz ins DWORD PTR es:[edi],dx
  524919:	mov    DWORD PTR [edx-0x7a],edx
  52491c:	xchg   edi,eax
  52491d:	iret   
  52491e:	dec    edx
  52491f:	jne    0x524973
  524921:	adc    ecx,DWORD PTR [esi+ecx*2-0x47220a76]
  524928:	lods   eax,DWORD PTR ds:[esi]
  524929:	in     eax,0x99
  52492b:	cld    
  52492c:	stos   BYTE PTR es:[edi],al
  52492d:	mov    BYTE PTR [ecx-0x43],dh
  524930:	push   cs
  524931:	adc    eax,0x3428e292
  524936:	or     ebp,0x9a734065
  52493c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52493d:	(bad)  
  52493e:	aas    
  52493f:	cld    
  524940:	rcl    edi,cl
  524942:	mov    DWORD PTR ds:0x97e7f030,edi
  524948:	dec    eax
  524949:	imul   esp,edi,0xffffff90
  52494c:	pop    esi
  52494d:	inc    esi
  52494e:	push   ebp
  52494f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  524950:	pcmpeqd mm7,QWORD PTR [eax*1-0x26e7615d]
  524958:	xor    dh,bl
  52495a:	sbb    eax,0x84037a2a
  52495f:	xor    al,dl
  524961:	sbb    eax,0x18fb19d9
  524966:	sbb    esp,DWORD PTR [ebp-0x9]
  524969:	mov    al,0xba
  52496b:	pushf  
  52496c:	mov    cl,0xc1
  52496e:	inc    eax
  52496f:	cwde   
  524970:	leave  
  524971:	pop    ecx
  524972:	xchg   edi,eax
  524973:	jp     0x5249bb
  524975:	pop    ecx
  524976:	lods   eax,DWORD PTR ds:[esi]
  524977:	enter  0xb7e4,0x11
  52497b:	adc    al,0x82
  52497d:	test   al,dl
  52497f:	add    bh,ah
  524981:	or     ebx,DWORD PTR [esi+esi*8+0x7c]
  524985:	cmp    DWORD PTR [edi-0x6fd94f90],ecx
  52498b:	mov    ebp,gs
  52498d:	das    
  52498e:	mov    cl,0x4b
  524990:	mov    ebp,0x75cc3f4f
  524995:	addr16 mov edx,0x99e240da
  52499b:	jne    0x52496a
  52499d:	enter  0x754,0x1
  5249a1:	xchg   DWORD PTR [eax],ebp
  5249a3:	adc    esp,ebx
  5249a5:	shr    ecx,1
  5249a7:	dec    ecx
  5249a8:	(bad)  
  5249a9:	rol    edi,cl
  5249ab:	mov    ds:0x126d8999,eax
  5249b0:	daa    
  5249b1:	sbb    BYTE PTR [ecx+0x345aa3ca],dh
  5249b7:	mov    eax,ds:0xca9f648c
  5249bc:	push   edi
  5249bd:	out    0xa4,eax
  5249bf:	test   BYTE PTR [edi+0x39af852d],0x1
  5249c6:	into   
  5249c7:	addr16 xchg edi,eax
  5249c9:	inc    ecx
  5249ca:	and    eax,DWORD PTR [ebp+0x47]
  5249cd:	add    ebx,eax
  5249cf:	add    ah,BYTE PTR [ecx-0x48518935]
  5249d5:	or     al,0x76
  5249d7:	(bad)  
  5249d8:	imul   ecx,DWORD PTR [esi],0x4a
  5249db:	mov    al,ds:0x69f40f72
  5249e0:	ret    0xd9e
  5249e3:	mov    al,0xd6
  5249e5:	mov    edx,0x12a045d1
  5249ea:	nop
  5249eb:	repnz pusha 
  5249ed:	out    0xfc,al
  5249ef:	push   esi
  5249f0:	dec    edx
  5249f1:	sub    BYTE PTR [ebx],bh
  5249f3:	out    0x21,al
  5249f5:	or     eax,0x597633d8
  5249fa:	shl    dh,cl
  5249fc:	mov    al,ds:0x4221305c
  524a01:	push   ss
  524a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524a03:	lds    eax,FWORD PTR [edi]
  524a05:	in     eax,0x95
  524a07:	iret   
  524a08:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524a0a:	(bad)  
  524a0b:	fstp   TBYTE PTR [esi]
  524a0d:	mov    al,ds:0xf15fd337
  524a12:	cmp    DWORD PTR [edi+0x79],0x6e
  524a16:	push   0xffffffd2
  524a18:	cli    
  524a19:	dec    eax
  524a1a:	add    BYTE PTR [ecx+0x5a],0x93
  524a1e:	push   ebp
  524a1f:	int    0x4f
  524a21:	imul   ecx,DWORD PTR [esi+eax*1],0x11
  524a25:	mov    bl,0x4e
  524a27:	iret   
  524a28:	dec    ecx
  524a29:	out    dx,eax
  524a2a:	mov    ebx,0xa50cb788
  524a2f:	rcl    BYTE PTR [eax],cl
  524a31:	adc    eax,0x1c1fecde
  524a36:	ret    0x97f4
  524a39:	out    dx,eax
  524a3a:	das    
  524a3b:	gs or  al,0xf8
  524a3e:	mov    eax,ds:0x31c92998
  524a43:	xchg   BYTE PTR [edx-0x12],cl
  524a46:	sub    al,0x52
  524a48:	mov    esi,0xeb1da3ea
  524a4d:	fsubr  DWORD PTR [ebp+edi*8-0x136cb068]
  524a54:	outs   dx,DWORD PTR ds:[esi]
  524a55:	push   ss
  524a56:	or     eax,0xf63b9ebe
  524a5b:	rcl    ecx,0xfa
  524a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524a5f:	sbb    BYTE PTR [edx-0x6b],ch
  524a62:	or     edx,0x36152ee0
  524a68:	push   ebx
  524a69:	gs xchg edx,eax
  524a6b:	sbb    eax,0xc25baffa
  524a70:	test   cl,dh
  524a72:	dec    edi
  524a73:	inc    ebx
  524a74:	nop
  524a75:	shl    DWORD PTR [ebp-0x3b],1
  524a78:	(bad)  
  524a79:	sub    esi,DWORD PTR [ebx-0x5475dd01]
  524a7f:	(bad)  
  524a80:	cli    
  524a81:	adc    DWORD PTR [edi],ecx
  524a83:	adc    BYTE PTR [ecx],0x9a
  524a86:	xchg   bh,dl
  524a88:	int3   
  524a89:	add    ah,ch
  524a8b:	xchg   ebp,eax
  524a8c:	jnp    0x524a31
  524a8e:	xchg   DWORD PTR [edi],eax
  524a90:	int    0x85
  524a92:	(bad)  
  524a93:	std    
  524a94:	lods   al,BYTE PTR ds:[esi]
  524a95:	mov    eax,0x49c6d0dd
  524a9a:	jmp    0x524a89
  524a9c:	push   es
  524a9d:	sub    BYTE PTR [esi],ah
  524a9f:	fldcw  WORD PTR ds:0x8347d76
  524aa5:	dec    ecx
  524aa6:	pop    eax
  524aa7:	mov    ecx,0xa2a2c682
  524aac:	mov    al,ds:0xf23d1c5d
  524ab1:	outs   dx,BYTE PTR ds:[esi]
  524ab2:	loopne 0x524a65
  524ab4:	jbe    0x524aec
  524ab6:	shld   DWORD PTR [ebx-0x2e75259a],ebx,0x42
  524abe:	xchg   edx,eax
  524abf:	sti    
  524ac0:	dec    esp
  524ac1:	sbb    dl,BYTE PTR [edi+0x519bcbea]
  524ac7:	stos   DWORD PTR es:[edi],eax
  524ac8:	inc    ecx
  524ac9:	jnp    0x524af0
  524acb:	adc    DWORD PTR [ecx+0x1a],edx
  524ace:	cmp    eax,0xea2049b6
  524ad3:	jbe    0x524b4c
  524ad5:	imul   BYTE PTR [edx+0x5bc44554]
  524adb:	ror    DWORD PTR [eax],0xdc
  524ade:	xchg   esi,eax
  524adf:	sub    edx,edi
  524ae1:	mov    bl,BYTE PTR [eax+0x2965b129]
  524ae7:	sbb    ecx,DWORD PTR [edi]
  524ae9:	in     al,dx
  524aea:	adc    al,0x38
  524aec:	or     BYTE PTR [edx+0x1c3a6edd],bh
  524af2:	push   ecx
  524af3:	cdq    
  524af4:	inc    ebp
  524af5:	fisub  WORD PTR [edx-0x23f171f0]
  524afb:	ja     0x524b78
  524afd:	add    eax,0xb9666c3f
  524b02:	jecxz  0x524aac
  524b04:	mov    dh,0xaa
  524b06:	outs   dx,DWORD PTR ds:[esi]
  524b07:	dec    eax
  524b08:	inc    ebp
  524b09:	(bad)  
  524b0a:	mov    dh,0x2
  524b0c:	push   ecx
  524b0d:	fisubr DWORD PTR [eax+0x5e]
  524b10:	inc    edx
  524b11:	mov    BYTE PTR [edi-0x41],ah
  524b14:	pop    ebx
  524b15:	inc    edx
  524b16:	data16 (bad) 
  524b18:	sbb    edi,DWORD PTR [edx-0x2a]
  524b1b:	vmread DWORD PTR [ecx],edi
  524b1e:	cwde   
  524b1f:	sahf   
  524b20:	ja     0x524b17
  524b22:	add    dl,BYTE PTR [ecx]
  524b24:	push   0xe8fe85e9
  524b29:	adc    al,0xeb
  524b2b:	test   al,0x71
  524b2d:	and    eax,0xa140eb3f
  524b32:	mov    ebp,0xfdd69039
  524b37:	xchg   ebx,eax
  524b38:	loope  0x524b95
  524b3a:	push   esp
  524b3b:	mov    edi,0x33760809
  524b40:	mov    BYTE PTR [ebp+0x2b],bh
  524b43:	ja     0x524b2c
  524b45:	or     al,0xce
  524b47:	cmp    eax,0x4cd74867
  524b4c:	(bad)  [esi+0x21755ebc]
  524b52:	mul    esp
  524b54:	mov    WORD PTR [esi+0xf],cs
  524b57:	adc    al,0xb
  524b59:	push   es
  524b5a:	out    dx,eax
  524b5b:	xchg   edi,eax
  524b5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524b5d:	in     eax,dx
  524b5e:	addr16 ds clc 
  524b61:	hlt    
  524b62:	ror    BYTE PTR [esi],1
  524b64:	xor    dl,BYTE PTR [edx+ebp*8-0x68b8f2a7]
  524b6b:	jmp    0x625780c2
  524b70:	out    0x2a,al
  524b72:	mov    cl,0x91
  524b74:	lods   al,BYTE PTR ds:[esi]
  524b75:	fist   WORD PTR [eax]
  524b77:	es in  eax,dx
  524b79:	(bad)  
  524b7b:	xor    al,BYTE PTR [esi-0x64]
  524b7e:	cwde   
  524b7f:	data16 into 
  524b81:	test   dh,bh
  524b83:	mov    ds:0x23f94ab1,eax
  524b88:	in     eax,dx
  524b89:	jp     0x524bf2
  524b8b:	ds push edx
  524b8d:	cmp    bl,bh
  524b8f:	xchg   esi,eax
  524b90:	pop    ebx
  524b91:	push   es
  524b92:	jne    0x524b3d
  524b94:	mov    al,ds:0x8f82ecb6
  524b99:	sbb    eax,0x552801f2
  524b9e:	cli    
  524b9f:	sub    ebp,DWORD PTR [ecx-0x773ac907]
  524ba5:	mov    al,ds:0xdfc67ca9
  524baa:	inc    edi
  524bab:	in     al,0x9b
  524bad:	jecxz  0x524bb6
  524baf:	sahf   
  524bb0:	arpl   bp,bx
  524bb2:	cmp    al,0x8b
  524bb4:	or     dh,BYTE PTR [edx+0x6e]
  524bb7:	ror    esi,1
  524bb9:	sbb    al,BYTE PTR [esi-0x6e441608]
  524bbf:	popf   
  524bc0:	nop
  524bc1:	int3   
  524bc2:	sti    
  524bc3:	mov    ebp,0x7c3d6997
  524bc8:	add    ecx,ebx
  524bca:	dec    ebx
  524bcb:	aas    
  524bcc:	xchg   edi,eax
  524bcd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524bce:	nop
  524bcf:	jmp    0x524bc9
  524bd1:	lock mov ebx,0xdec4ec70
  524bd7:	hlt    
  524bd8:	pop    eax
  524bd9:	enter  0xbd19,0xe1
  524bdd:	scas   al,BYTE PTR es:[edi]
  524bde:	jmp    0x524b7d
  524be0:	lar    esi,WORD PTR [ebx]
  524be3:	out    dx,eax
  524be4:	inc    edx
  524be5:	out    0xc8,eax
  524be7:	andps  xmm6,XMMWORD PTR [ebx*8+0x57234ded]
  524bef:	not    esp
  524bf1:	xchg   edi,eax
  524bf2:	popf   
  524bf3:	pop    ss
  524bf4:	clc    
  524bf5:	mov    ebp,DWORD PTR [ecx-0x4864b67a]
  524bfb:	xor    DWORD PTR [esi],ecx
  524bfd:	xor    al,0x9
  524bff:	iret   
  524c00:	mov    cs:0x8fe084b3,al
  524c06:	mov    cl,0x4e
  524c08:	ret    0xd22e
  524c0b:	xchg   esi,eax
  524c0c:	mov    ds:0x796366cd,al
  524c11:	sub    ebp,DWORD PTR [ebx+0x11d00232]
  524c17:	push   0x52
  524c19:	mov    esi,0x177b524e
  524c1e:	sub    eax,0x21f65e0c
  524c23:	push   es
  524c24:	dec    ecx
  524c25:	stos   BYTE PTR es:[edi],al
  524c26:	int3   
  524c27:	xlat   BYTE PTR ds:[ebx]
  524c28:	cmp    al,0x51
  524c2a:	shr    DWORD PTR cs:[ebx+0x6abaee89],cl
  524c31:	mov    dh,0xf3
  524c33:	pop    edx
  524c34:	in     al,0x64
  524c36:	iret   
  524c37:	popf   
  524c38:	cmp    ebp,DWORD PTR [esp+ebx*2-0x34]
  524c3c:	sbb    eax,0x6682b090
  524c41:	mov    ebx,0x5e0d9470
  524c46:	mov    ah,0xca
  524c48:	mov    bh,0xff
  524c4a:	sub    BYTE PTR [edi-0x9],ah
  524c4d:	push   cs
  524c4e:	popa   
  524c4f:	mov    esi,0xa047764b
  524c54:	icebp  
  524c55:	inc    ebx
  524c56:	push   ecx
  524c57:	sub    BYTE PTR [ecx-0x22],dl
  524c5a:	fisub  WORD PTR [ecx]
  524c5c:	xor    eax,DWORD PTR [eax]
  524c5e:	sbb    bl,BYTE PTR [ebp+0x771fdacc]
  524c64:	jmp    0x524c70
  524c66:	mov    ebx,0xb3c8cdd
  524c6b:	cli    
  524c6c:	inc    ecx
  524c6d:	or     BYTE PTR ds:[edi-0x6c],dh
  524c71:	xor    eax,0x42ffa380
  524c76:	xchg   ebx,eax
  524c77:	or     DWORD PTR [eax],edx
  524c79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524c7a:	in     al,0xcd
  524c7c:	pushf  
  524c7d:	cmp    BYTE PTR [ebx+0x6c7d0561],dl
  524c83:	js     0x524c42
  524c85:	stos   BYTE PTR es:[edi],al
  524c86:	pop    edx
  524c87:	rcl    DWORD PTR [ebp+esi*1+0x6bd7fb31],1
  524c8e:	sbb    bl,BYTE PTR [edi-0x24bf7dc2]
  524c94:	cs mov ecx,0xad1a62d7
  524c9a:	adc    al,BYTE PTR [edx]
  524c9c:	stos   DWORD PTR es:[edi],eax
  524c9d:	leave  
  524c9e:	repnz mov dl,0x3f
  524ca1:	fbld   TBYTE PTR [esi]
  524ca3:	mov    eax,ds:0x55c07935
  524ca8:	dec    esp
  524ca9:	adc    DWORD PTR [ebx+ebp*2],eax
  524cac:	icebp  
  524cad:	xor    eax,0x1b8aab8f
  524cb2:	adc    eax,DWORD PTR [edx+edi*8]
  524cb5:	sbb    al,0xa9
  524cb7:	sub    eax,0x87bd6a2f
  524cbc:	aam    0x94
  524cbe:	or     DWORD PTR [ecx+0xafd83e1],esp
  524cc4:	lods   al,BYTE PTR ds:[esi]
  524cc5:	jecxz  0x524c99
  524cc7:	data16 mov cl,0x6a
  524cca:	xor    BYTE PTR [edx-0x36],bh
  524ccd:	sub    BYTE PTR [ebx],cl
  524ccf:	out    dx,al
  524cd0:	dec    edi
  524cd1:	push   cs
  524cd2:	mov    ebp,0x5a3f6ece
  524cd7:	scas   al,BYTE PTR es:[edi]
  524cd8:	xor    eax,0x6223c181
  524cdd:	mov    dh,0xe8
  524cdf:	mov    al,cs:0xa84e73e2
  524ce5:	pop    edi
  524ce6:	in     al,dx
  524ce7:	sub    ch,al
  524ce9:	ss scas eax,DWORD PTR es:[edi]
  524ceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524cec:	push   esi
  524ced:	loopne 0x524d20
  524cef:	(bad)  
  524cf0:	and    eax,0x2184e762
  524cf5:	and    BYTE PTR [ebx+0x651b7d93],0x9b
  524cfc:	inc    ebx
  524cfd:	fwait
  524cfe:	cmp    DWORD PTR [edx],esp
  524d00:	mov    bl,bh
  524d02:	mov    cl,0x4
  524d04:	repnz mov eax,0xf57f2ac2
  524d0a:	xchg   ecx,eax
  524d0b:	fwait
  524d0c:	jbe    0x524d5d
  524d0e:	nop
  524d0f:	mov    BYTE PTR ds:0xa4da9f4e,dl
  524d15:	or     BYTE PTR [edx],dl
  524d17:	xchg   esp,eax
  524d18:	daa    
  524d19:	ja     0x524cb2
  524d1b:	(bad)  
  524d1c:	inc    ecx
  524d1d:	mov    ch,0x7d
  524d1f:	add    eax,0x3b9daee6
  524d24:	rcl    bl,1
  524d26:	addr16 push cs
  524d28:	dec    DWORD PTR ds:0x7404c6d
  524d2e:	fisubr WORD PTR [ebx]
  524d30:	lahf   
  524d31:	push   ds
  524d32:	imul   eax,DWORD PTR [eax-0x1d9e2e69],0x85360243
  524d3c:	addr16 jnp 0x524d20
  524d3f:	and    DWORD PTR [ecx-0x6],0xfc422e63
  524d46:	jne    0x524d6f
  524d48:	cdq    
  524d49:	xlat   BYTE PTR ds:[ebx]
  524d4a:	cmp    edx,DWORD PTR [edi-0x24]
  524d4d:	mov    gs,WORD PTR [esi-0x11]
  524d50:	lods   al,BYTE PTR ds:[esi]
  524d51:	mov    ecx,0x9cf2eab8
  524d56:	int3   
  524d57:	in     al,dx
  524d58:	xor    al,0x51
  524d5a:	clc    
  524d5b:	lods   al,BYTE PTR ds:[esi]
  524d5c:	test   BYTE PTR [esi],cl
  524d5e:	cld    
  524d5f:	and    DWORD PTR [ebx+0x2c763d9e],ebx
  524d65:	ja     0x524d92
  524d67:	pop    ds
  524d68:	fld    DWORD PTR [edi+0x2f]
  524d6b:	push   esp
  524d6c:	sub    ah,dl
  524d6e:	ror    DWORD PTR [ebx],cl
  524d70:	mov    ds,WORD PTR [esi]
  524d72:	arpl   WORD PTR [ebp-0x8],bp
  524d75:	mov    cl,0xb7
  524d77:	or     eax,0x9fbb45e9
  524d7c:	je     0x524d2a
  524d7e:	std    
  524d7f:	adc    DWORD PTR [eax-0x2917b153],edi
  524d85:	shl    DWORD PTR [ebx-0x76],cl
  524d88:	mov    dl,0x69
  524d8a:	repnz in eax,dx
  524d8c:	add    ah,BYTE PTR [eax+0x2c]
  524d8f:	aas    
  524d90:	(bad)
  524d94:	push   ss
  524d95:	into   
  524d96:	sbb    edi,DWORD PTR [eax+0x59a713f0]
  524d9c:	inc    ecx
  524d9d:	imul   ebp,DWORD PTR [ebx+0x4cb93039],0x5e
  524da4:	mov    ss,WORD PTR [ebx]
  524da6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  524da7:	xor    eax,0x7bb9a76a
  524dac:	xor    DWORD PTR [ecx-0x30],ebx
  524daf:	push   edi
  524db0:	clc    
  524db1:	pop    ebp
  524db2:	jecxz  0x524de3
  524db4:	push   edx
  524db5:	pop    eax
  524db6:	inc    eax
  524db7:	xor    DWORD PTR [ecx-0x23],ebp
  524dba:	sub    BYTE PTR [eax+0x7a],0x82
  524dbe:	add    al,bh
  524dc0:	xchg   edx,eax
  524dc1:	mov    cl,0x77
  524dc3:	xchg   ebx,eax
  524dc4:	xchg   ecx,eax
  524dc5:	in     al,dx
  524dc6:	jno    0x524ddf
  524dc8:	mov    WORD PTR [edx+eiz*1],cs
  524dcb:	lock in eax,dx
  524dcd:	mov    eax,ds:0xff5365c5
  524dd2:	xchg   esp,eax
  524dd3:	jbe    0x524df6
  524dd5:	jecxz  0x524e49
  524dd7:	mov    ebx,0x6258efd
  524ddc:	and    DWORD PTR [ecx-0x16],esi
  524ddf:	or     eax,0xa02d030f
  524de4:	jge    0x524e52
  524de6:	loop   0x524db1
  524de8:	fucomp st(6)
  524dea:	pop    es
  524deb:	adc    bl,BYTE PTR [ebx+0x2c]
  524dee:	dec    ecx
  524def:	adc    DWORD PTR [esi-0x5cecf490],0x753c76d1
  524df9:	cmp    BYTE PTR [edx-0x21],cl
  524dfc:	sbb    DWORD PTR [eax+0x2fed0c67],ebx
  524e02:	xchg   edi,eax
  524e03:	hlt    
  524e04:	adc    esp,DWORD PTR cs:[ecx]
  524e07:	je     0x524e3a
  524e09:	aam    0xda
  524e0b:	in     eax,dx
  524e0c:	(bad)  
  524e0d:	pop    ecx
  524e0e:	xchg   edi,eax
  524e0f:	rol    DWORD PTR [edi+0x14906a70],1
  524e15:	sbb    ebx,esp
  524e17:	stos   BYTE PTR es:[edi],al
  524e18:	icebp  
  524e19:	hlt    
  524e1a:	mov    al,ds:0x4203dc2
  524e1f:	out    dx,eax
  524e20:	dec    esp
  524e21:	ds cmp al,0x3c
  524e24:	out    dx,eax
  524e25:	iret   
  524e26:	dec    dl
  524e28:	dec    eax
  524e29:	ins    BYTE PTR es:[edi],dx
  524e2a:	mov    ah,0x1a
  524e2c:	jecxz  0x524de6
  524e2e:	and    dl,cl
  524e30:	xchg   edi,eax
  524e31:	test   DWORD PTR [eax+edi*2-0x73b31c6],eax
  524e38:	hlt    
  524e39:	mov    edi,0xc7e48352
  524e3e:	cmp    ah,ch
  524e40:	inc    esi
  524e41:	mov    WORD PTR ds:0x9f984eda,ds
  524e47:	nop
  524e48:	int    0x25
  524e4a:	fcmovb st,st(1)
  524e4c:	fcom   QWORD PTR [ecx-0x3f722ec2]
  524e52:	mov    cs,WORD PTR [eax]
  524e54:	cmc    
  524e55:	call   0x880a4e87
  524e5a:	shr    DWORD PTR [edi+0x23],cl
  524e5d:	hlt    
  524e5e:	mov    fs,WORD PTR [ebp-0x14]
  524e61:	pop    ebx
  524e62:	jne    0x524ee3
  524e64:	and    esp,DWORD PTR [ebx+ebx*2]
  524e67:	loopne 0x524e48
  524e69:	je     0x524e4f
  524e6b:	int3   
  524e6c:	sub    al,0x57
  524e6e:	jnp    0x524e57
  524e70:	and    edi,edx
  524e72:	push   ds
  524e73:	push   ebx
  524e74:	mov    eax,ds:0x8f1eda7e
  524e79:	sub    BYTE PTR [ecx+0x6a1d23f3],dl
  524e7f:	and    DWORD PTR [esi],ecx
  524e81:	mov    dh,0xe2
  524e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  524e84:	jo     0x524e26
  524e86:	push   ebp
  524e87:	push   ds
  524e88:	sub    al,0x6e
  524e8a:	arpl   WORD PTR [ebx+0x12],sp
  524e8d:	lahf   
  524e8e:	(bad)  
  524e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  524e90:	retf   
  524e91:	cmp    al,0x43
  524e93:	fild   WORD PTR [ecx-0x5f1bc5c4]
  524e99:	mov    eax,ds:0x4d47d45d
  524e9e:	fcmovb st,st(2)
  524ea0:	adc    al,0x29
  524ea2:	dec    esp
  524ea3:	xchg   edx,eax
  524ea4:	mov    ds:0xf5e6e6a9,eax
  524ea9:	mov    al,ds:0xe3fdc102
  524eae:	xor    al,0x5d
  524eb0:	push   0xffffffc4
  524eb2:	mov    al,0x69
  524eb4:	call   0xd80068
  524eb9:	inc    esp
  524eba:	adc    eax,0xe8e8b520
  524ebf:	loop   0x524f18
  524ec1:	test   BYTE PTR [edi+0x60ef0ecf],0xd9
  524ec8:	leave  
  524ec9:	jmp    0x7a58b17d
  524ece:	loop   0x524e85
  524ed0:	or     cl,BYTE PTR ds:0x2fad0d5e
  524ed6:	mov    edx,0xefec4486
  524edb:	dec    esp
  524edc:	fucom  st(5)
  524ede:	outs   dx,BYTE PTR ds:[esi]
  524edf:	mov    edx,0x50bc8c69
  524ee4:	lahf   
  524ee5:	xor    al,0x69
  524ee7:	push   0x49131ce2
  524eec:	jmp    0x70ce:0xcfcdec72
  524ef3:	ds jl  0x524f4a
  524ef6:	add    ebp,ebx
  524ef8:	sub    bl,BYTE PTR [esi+ecx*8]
  524efb:	dec    eax
  524efc:	bound  edi,QWORD PTR [ecx+0x19ac0d37]
  524f02:	fmulp  st(3),st
  524f04:	fwait
  524f05:	test   DWORD PTR [esi],ebx
  524f07:	rcl    esp,cl
  524f09:	xchg   ecx,eax
  524f0a:	mov    cl,0x25
  524f0c:	sbb    ch,BYTE PTR [edi]
  524f0e:	fidiv  WORD PTR [ebx]
  524f10:	xor    BYTE PTR [eax+0x71],al
  524f13:	test   al,0x8d
  524f15:	xchg   DWORD PTR [ecx],ecx
  524f17:	or     eax,edx
  524f19:	ret    0x55db
  524f1c:	pop    ss
  524f1d:	nop
  524f1e:	sub    DWORD PTR [esi+eiz*2-0x531cdf30],ecx
  524f25:	or     BYTE PTR [ebx],dh
  524f27:	enter  0xa4a4,0x2e
  524f2b:	dec    ebp
  524f2c:	xor    dl,cl
  524f2e:	xor    eax,0xf947b973
  524f33:	cdq    
  524f34:	ins    BYTE PTR es:[edi],dx
  524f35:	or     BYTE PTR [edi+edi*4-0xf],0x9c
  524f3a:	cmp    al,0x92
  524f3c:	cmc    
  524f3d:	(bad)  
  524f3e:	in     eax,dx
  524f3f:	jg     0x524ed6
  524f41:	lahf   
  524f42:	and    edi,eax
  524f44:	push   ss
  524f45:	jge    0x524eff
  524f47:	sbb    al,0xda
  524f49:	mov    esp,0x337428bd
  524f4e:	stc    
  524f4f:	sbb    edx,edi
  524f51:	mov    dh,0xd0
  524f53:	test   esp,esp
  524f55:	out    dx,al
  524f56:	pusha  
  524f57:	call   0x9fbe:0xd7d68076
  524f5e:	adc    ch,cl
  524f60:	cld    
  524f61:	scas   al,BYTE PTR es:[edi]
  524f62:	jno    0x524f59
  524f64:	cwde   
  524f65:	inc    esp
  524f66:	aam    0x57
  524f68:	addr16 stc 
  524f6a:	xlat   BYTE PTR ds:[ebx]
  524f6b:	jmp    DWORD PTR [esi+0x3]
  524f6e:	pop    ecx
  524f6f:	ins    DWORD PTR es:[edi],dx
  524f70:	mov    ah,0x18
  524f72:	fst    st(1)
  524f74:	sub    al,0x31
  524f76:	hlt    
  524f77:	sub    BYTE PTR [eax+0x28],al
  524f7a:	rcl    dl,1
  524f7c:	push   esp
  524f7d:	and    esi,esp
  524f7f:	loopne 0x524fea
  524f81:	mov    ch,0xb
  524f83:	rep stos DWORD PTR es:[edi],eax
  524f85:	hlt    
  524f86:	fs mov cl,0xc3
  524f89:	push   0xffffffbf
  524f8b:	xchg   ecx,eax
  524f8c:	xchg   cl,al
  524f8e:	inc    edi
  524f8f:	push   es
  524f90:	mov    edx,0x80fcac87
  524f95:	(bad)  
  524f96:	out    0xb,eax
  524f98:	push   0xffffffdc
  524f9a:	push   ds
  524f9b:	jae    0x524f3b
  524f9d:	je     0x525012
  524f9f:	adc    BYTE PTR [ebx+0x60bb2068],ah
  524fa5:	jno    0x524f6d
  524fa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  524fa8:	(bad)  
  524fa9:	fadd   QWORD PTR [ebp+0x77]
  524fac:	push   ds
  524fad:	and    ebx,DWORD PTR [esi-0x7f]
  524fb0:	cmp    eax,0x20a432d
  524fb5:	jo     0x524fd3
  524fb7:	cmp    esi,DWORD PTR [edx]
  524fb9:	pop    ebp
  524fba:	pop    esp
  524fbb:	push   eax
  524fbc:	repnz xlat BYTE PTR ds:[ebx]
  524fbe:	mov    ecx,0x7e8364a7
  524fc3:	add    dh,BYTE PTR [ebx+eiz*8]
  524fc6:	(bad)  
  524fc7:	mov    gs,WORD PTR [ecx+0x276c18ee]
  524fcd:	out    0x8e,eax
  524fcf:	sub    esi,DWORD PTR [ebp+0x54]
  524fd2:	nop
  524fd3:	push   cs
  524fd4:	push   es
  524fd5:	pop    edi
  524fd6:	(bad)  
  524fd8:	lods   eax,DWORD PTR ds:[esi]
  524fd9:	jl     0x524faa
  524fdb:	nop
  524fdc:	add    BYTE PTR [ebx+0x15],ah
  524fdf:	into   
  524fe0:	mov    al,0x21
  524fe2:	lods   eax,DWORD PTR ds:[esi]
  524fe3:	jae    0x52504b
  524fe5:	(bad)  
  524fe6:	push   esi
  524fe7:	and    DWORD PTR [edi-0x5c95c45b],ecx
  524fed:	xchg   ebp,eax
  524fee:	dec    edx
  524fef:	cs aam 0x2a
  524ff2:	push   es
  524ff3:	(bad)  
  524ff4:	stc    
  524ff5:	cli    
  524ff6:	dec    edx
  524ff7:	cmp    esp,ebx
  524ff9:	adc    ebx,DWORD PTR [ebp+0x75]
  524ffc:	sti    
  524ffd:	push   edx
  524ffe:	sti    
  524fff:	loope  0x525020
  525001:	enter  0xe514,0x28
  525005:	or     BYTE PTR [ebx+0x51ba98c],cl
  52500b:	jl     0x524fb4
  52500d:	mov    ah,0x5b
  52500f:	dec    ecx
  525010:	and    eax,0xc89e88ba
  525015:	loop   0x524fbf
  525017:	mov    BYTE PTR [edi+0x48],ch
  52501a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52501b:	xchg   edx,eax
  52501c:	push   ebp
  52501d:	xchg   edi,eax
  52501e:	xor    BYTE PTR [ecx+esi*4],bh
  525021:	sbb    eax,0x5e3dbd5a
  525026:	push   eax
  525027:	mov    DWORD PTR [ebp-0x4fb7fe53],ebx
  52502d:	fsubr  QWORD PTR gs:[eax+ebx*8-0x57]
  525032:	ins    DWORD PTR es:[edi],dx
  525033:	jne    0x524fd7
  525035:	repnz mov eax,ds:0xc2a449d6
  52503b:	mov    ds:0x5061bc5b,al
  525040:	cmc    
  525041:	mov    esp,0x38a4b5ab
  525046:	dec    edi
  525047:	mov    esp,0x7430c55a
  52504c:	(bad)  
  52504e:	xchg   esi,eax
  52504f:	aam    0x13
  525051:	sahf   
  525052:	outs   dx,DWORD PTR ds:[esi]
  525053:	rcl    DWORD PTR [ebx+esi*1],1
  525056:	mov    ch,0x6f
  525058:	clc    
  525059:	inc    esp
  52505a:	sbb    dl,BYTE PTR [esi+0x45076699]
  525060:	jb     0x524fe2
  525062:	push   es
  525063:	popf   
  525064:	dec    ecx
  525065:	ret    0x36d8
  525068:	mov    ecx,0x6eb34632
  52506d:	push   edx
  52506e:	shl    DWORD PTR [ecx+0x36],1
  525071:	bound  ebx,QWORD PTR [ebx-0x6026dd6b]
  525077:	adc    eax,0x531b2559
  52507c:	das    
  52507d:	and    al,0x42
  52507f:	add    dl,BYTE PTR [ebp-0x45ebca9c]
  525085:	pop    ecx
  525086:	xor    ebp,DWORD PTR [ebp+0x23]
  525089:	arpl   WORD PTR ds:0xbec0229a,sp
  52508f:	or     DWORD PTR [esi+eiz*2-0x62],esi
  525093:	adc    al,0xd4
  525095:	(bad)  
  525096:	xchg   ebx,eax
  525097:	ja     0x525047
  525099:	cmp    BYTE PTR [eax],cl
  52509b:	retf   
  52509c:	sbb    DWORD PTR [ecx-0x79],eax
  52509f:	aaa    
  5250a0:	sbb    ebx,eax
  5250a2:	jbe    0x525075
  5250a4:	mov    ah,0x73
  5250a6:	retf   0x18fc
  5250a9:	pop    es
  5250aa:	jbe    0x5250bc
  5250ac:	rol    BYTE PTR [ecx],0xcf
  5250af:	cld    
  5250b0:	lahf   
  5250b1:	jmp    0xd01d:0xf55ccc76
  5250b8:	std    
  5250b9:	mov    WORD PTR [eax+0x5d],es
  5250bc:	xor    al,0x1c
  5250be:	loop   0x5250d1
  5250c0:	fnstsw WORD PTR [esi-0x3a6b7d6b]
  5250c6:	int    0x54
  5250c8:	inc    esp
  5250c9:	or     edx,edx
  5250cb:	pop    edi
  5250cc:	mov    ecx,0xbc3c1991
  5250d1:	push   ecx
  5250d2:	and    BYTE PTR [edx],0xe8
  5250d5:	pop    ebp
  5250d6:	shl    dh,1
  5250d8:	fs dec esi
  5250da:	sub    ecx,DWORD PTR [ebx]
  5250dc:	xor    dh,BYTE PTR [esi-0x63]
  5250df:	mov    bh,0x37
  5250e1:	adc    ecx,DWORD PTR [edx+0x7e]
  5250e4:	inc    esp
  5250e5:	dec    ecx
  5250e6:	ins    DWORD PTR es:[edi],dx
  5250e7:	jns    0x5250c5
  5250e9:	xchg   ebx,eax
  5250ea:	int3   
  5250eb:	ret    0x6626
  5250ee:	jg     0x52513a
  5250f0:	mov    WORD PTR [esi+0x47],fs
  5250f3:	das    
  5250f4:	dec    eax
  5250f5:	(bad)  
  5250f6:	clc    
  5250f7:	cli    
  5250f8:	inc    eax
  5250f9:	outs   dx,DWORD PTR ds:[esi]
  5250fa:	sub    al,0xab
  5250fc:	dec    ebx
  5250fd:	(bad)  
  5250fe:	dec    edi
  5250ff:	sub    eax,0x11238bf4
  525104:	pop    esi
  525105:	lock loop 0x525155
  525108:	scas   al,BYTE PTR es:[edi]
  525109:	jecxz  0x525189
  52510b:	sub    edx,edx
  52510d:	addr16 inc ecx
  52510f:	inc    eax
  525110:	jmp    0x3a9f:0x5fc1e44d
  525117:	nop
  525118:	iret   
  525119:	xor    eax,0xe7a80739
  52511e:	push   ebx
  52511f:	xchg   dl,dh
  525121:	stos   BYTE PTR es:[edi],al
  525122:	pop    es
  525123:	sti    
  525124:	std    
  525125:	sbb    al,0xd8
  525127:	loope  0x5250e1
  525129:	ss sbb al,0xb7
  52512c:	pusha  
  52512d:	mov    BYTE PTR [edi],0x1b
  525130:	pop    ss
  525131:	jl     0x52513b
  525133:	repnz into 
  525135:	jge    0x52519d
  525137:	and    eax,DWORD PTR [edi-0x2e]
  52513a:	cmp    DWORD PTR ds:0xe788f97b,edx
  525140:	mov    ss,WORD PTR [ebx-0x2d]
  525143:	cmp    edx,DWORD PTR [ebx-0x4e77a1d7]
  525149:	xor    BYTE PTR [ecx+0x3d],cl
  52514c:	bound  ebx,QWORD PTR [eax-0x26]
  52514f:	xchg   ebp,eax
  525150:	adc    edx,ebp
  525152:	jns    0x525181
  525154:	or     ah,cl
  525156:	mov    bh,0xb1
  525158:	pop    ebx
  525159:	mov    ch,0xaa
  52515b:	and    edi,DWORD PTR [eax-0x597895c5]
  525161:	pop    ebx
  525162:	shl    DWORD PTR [eax],1
  525164:	cli    
  525165:	(bad)  
  525166:	shr    DWORD PTR [eax],1
  525168:	in     al,0xd
  52516a:	push   eax
  52516b:	add    ah,BYTE PTR ds:0x3d065012
  525171:	or     BYTE PTR [edx+0x92e7ae3],al
  525177:	inc    edi
  525178:	fwait
  525179:	adc    esi,DWORD PTR [edi-0x3692fec2]
  52517f:	outs   dx,BYTE PTR ds:[esi]
  525180:	mov    bl,0x9c
  525182:	inc    eax
  525183:	imul   ecx,DWORD PTR [ebp+0x7b26ae6],0xf704455b
  52518d:	(bad)  
  52518e:	jmp    0x525123
  525190:	(bad)  
  525192:	xchg   BYTE PTR [ecx*2+0x7a0705ae],al
  525199:	jmp    0xfc6b:0xdf60faaf
  5251a0:	cwde   
  5251a1:	sti    
  5251a2:	mov    edi,0x96cfa8c5
  5251a7:	daa    
  5251a8:	and    al,0xbc
  5251aa:	fprem1 
  5251ac:	adc    al,0xd3
  5251ae:	sub    al,0xfd
  5251b0:	rcr    DWORD PTR [esi+0x27],cl
  5251b3:	xor    esi,esp
  5251b5:	test   edi,edi
  5251b7:	dec    ecx
  5251b8:	xor    esi,esp
  5251ba:	(bad)  [ebp+0x6f6e49f4]
  5251c0:	inc    edi
  5251c1:	jns    0x525161
  5251c3:	add    al,0x72
  5251c5:	mov    edi,0x905c2c1b
  5251ca:	int3   
  5251cb:	xchg   dx,si
  5251ce:	ffree  st(6)
  5251d0:	(bad)
  5251d3:	test   eax,0xfbf9a719
  5251d8:	outs   dx,BYTE PTR ds:[esi]
  5251d9:	js     0x52523f
  5251db:	adc    BYTE PTR [ecx+edx*1+0x3c],bl
  5251df:	cli    
  5251e0:	js     0x525224
  5251e2:	push   eax
  5251e3:	sbb    DWORD PTR [edi+ebx*1],esi
  5251e6:	dec    edi
  5251e7:	push   ds
  5251e8:	(bad)
  5251ec:	js     0x525222
  5251ee:	sbb    eax,0x7f76b72b
  5251f3:	mov    esi,0x1e52eaf9
  5251f8:	stos   BYTE PTR es:[edi],al
  5251f9:	push   0xffffff91
  5251fb:	fcomi  st,st(4)
  5251fd:	push   ecx
  5251fe:	mov    ds:0xd585ece0,al
  525203:	arpl   WORD PTR [edi+0x14],bp
  525206:	jo     0x525252
  525208:	rol    BYTE PTR ds:0xa577d877,0x1e
  52520f:	sti    
  525210:	xlat   BYTE PTR ds:[ebx]
  525211:	bound  ecx,QWORD PTR [ebp+0x4e630c74]
  525217:	pop    ecx
  525218:	adc    DWORD PTR [edi],0x466a720b
  52521e:	xor    al,0xa3
  525220:	adc    eax,0x9fe09088
  525225:	inc    eax
  525226:	inc    edx
  525227:	test   DWORD PTR [ecx+0x58f263a],esp
  52522d:	adc    al,0x5a
  52522f:	test   al,0x3b
  525231:	mov    dl,0x3b
  525233:	push   eax
  525234:	xor    ebx,esp
  525236:	push   es
  525237:	lods   eax,DWORD PTR ds:[esi]
  525238:	cmp    cl,BYTE PTR [edi-0x5b]
  52523b:	cld    
  52523c:	ror    BYTE PTR [edx-0x353a413c],0x15
  525243:	scas   eax,DWORD PTR es:[edi]
  525244:	xchg   edi,eax
  525245:	lods   eax,DWORD PTR ds:[esi]
  525246:	mov    cl,bl
  525248:	iret   
  525249:	mov    dl,0x63
  52524b:	loope  0x5252b1
  52524d:	sbb    eax,0x8e44867c
  525252:	mov    edx,DWORD PTR [ecx+0x6]
  525255:	xchg   esi,eax
  525256:	call   0x3ce93449
  52525b:	xchg   bl,bl
  52525d:	dec    ebp
  52525e:	adc    eax,0x7cb90aaf
  525263:	js     0x525268
  525265:	mov    al,ds:0x29e7bf79
  52526a:	adc    DWORD PTR [eax],edi
  52526c:	mov    WORD PTR [ebp+0x5b],gs
  52526f:	psubusw mm1,QWORD PTR ds:0xda9a2b60
  525276:	cmp    bh,dh
  525278:	dec    BYTE PTR [ebx]
  52527a:	dec    edx
  52527b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52527c:	jmp    0x52529b
  52527e:	dec    ecx
  52527f:	loopne 0x5252a0
  525281:	out    0xa9,eax
  525283:	fisub  DWORD PTR [eax-0x74]
  525286:	adc    edx,DWORD PTR [esi+eax*2+0x58]
  52528a:	mov    dh,0x55
  52528c:	fs ins BYTE PTR es:[edi],dx
  52528e:	pop    ds
  52528f:	es cmp al,0xda
  525292:	outs   dx,DWORD PTR ds:[esi]
  525293:	sti    
  525294:	sub    dl,BYTE PTR [ebx+ecx*1+0x1840e086]
  52529b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52529c:	jmp    DWORD PTR [ebp+edx*1+0x2218b7d5]
  5252a3:	test   al,0x3c
  5252a5:	imul   ebp,DWORD PTR [ebx-0x4ca4bdc6],0x9d8f152c
  5252af:	push   es
  5252b0:	and    cl,BYTE PTR [eax+0x68]
  5252b3:	out    dx,eax
  5252b4:	rcl    DWORD PTR [ebx+0x169f5fd0],1
  5252ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5252bb:	adc    al,0x36
  5252bd:	leave  
  5252be:	dec    ebp
  5252bf:	icebp  
  5252c0:	jle    0x525267
  5252c2:	mov    ah,0x55
  5252c4:	xor    esi,edx
  5252c6:	push   0xffffffb0
  5252c8:	loopne 0x5252f3
  5252ca:	jecxz  0x5252a5
  5252cc:	bound  ebx,QWORD PTR [eax-0x68]
  5252cf:	lods   al,BYTE PTR ds:[esi]
  5252d0:	lock cmp DWORD PTR [ebp-0x20],0x14
  5252d5:	jp     0x52531e
  5252d7:	jmp    0x7e1f:0x401c7226
  5252de:	out    dx,al
  5252df:	mov    esp,DWORD PTR [eax+0x1db68da7]
  5252e5:	sub    al,0x51
  5252e7:	fs pop edi
  5252e9:	sar    BYTE PTR [ebx],1
  5252eb:	jne    0x525337
  5252ed:	in     eax,0x7d
  5252ef:	mov    ecx,0xa96283d4
  5252f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5252f5:	ins    BYTE PTR es:[edi],dx
  5252f6:	add    esp,ebx
  5252f8:	add    esi,DWORD PTR [ecx-0x568e9bfd]
  5252fe:	test   al,0x1a
  525300:	pushf  
  525301:	xor    BYTE PTR [ebp+0x596a7500],dl
  525307:	and    eax,0xedb5181f
  52530c:	leave  
  52530d:	xchg   ebx,ebx
  52530f:	mov    cl,0x57
  525311:	or     eax,DWORD PTR [ecx]
  525313:	test   BYTE PTR [ebx-0x38],bl
  525316:	pop    ds
  525317:	iret   
  525318:	push   ebp
  525319:	dec    edi
  52531a:	mov    bl,0x7f
  52531c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52531d:	ins    BYTE PTR es:[edi],dx
  52531e:	test   al,0x63
  525320:	hlt    
  525321:	push   cs
  525322:	aad    0xbc
  525324:	or     BYTE PTR [esi-0x7cd274ef],ah
  52532a:	call   0xe56d1195
  52532f:	sbb    DWORD PTR [edx],esp
  525331:	inc    edx
  525332:	sbb    eax,0x7101b466
  525337:	inc    edi
  525338:	and    eax,DWORD PTR [edx+0x5e32a005]
  52533e:	(bad)  
  52533f:	push   edx
  525340:	xchg   edx,eax
  525341:	dec    edx
  525342:	add    eax,0x3de43861
  525347:	aas    
  525348:	fldenv [edx-0x15ac78eb]
  52534e:	pop    ds
  52534f:	in     eax,dx
  525350:	ins    BYTE PTR es:[edi],dx
  525351:	push   esi
  525352:	aaa    
  525353:	push   ebp
  525354:	(bad)  
  525356:	pushf  
  525357:	lds    ecx,FWORD PTR [ecx]
  525359:	in     eax,0xee
  52535b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52535c:	(bad)  
  52535e:	mov    ebx,0x32b3c796
  525363:	jmp    0xc5a7:0x39dbe73f
  52536a:	in     al,dx
  52536b:	test   BYTE PTR [esi],0x98
  52536e:	in     eax,0x98
  525370:	xor    BYTE PTR [esi+esi*8+0x60c9c70a],bh
  525377:	(bad)  
  525378:	stc    
  525379:	repnz inc ebx
  52537b:	sub    esp,DWORD PTR [ebp+edx*8+0x70fa2d75]
  525382:	mov    WORD PTR [ebx-0x6b891547],ss
  525388:	jge    0x525337
  52538a:	dec    edi
  52538b:	pop    ecx
  52538c:	bound  esi,QWORD PTR [eax-0x4dd8378b]
  525392:	push   ss
  525393:	retf   0x104c
  525396:	pop    edi
  525397:	ficomp WORD PTR [ecx-0x67]
  52539a:	push   ds
  52539b:	mov    dl,0xc
  52539d:	push   eax
  52539e:	imul   esi,DWORD PTR [ebx-0xd],0xfffffffd
  5253a2:	push   esp
  5253a3:	ins    BYTE PTR es:[edi],dx
  5253a4:	fimul  DWORD PTR [ebx+0x29]
  5253a7:	ret    0xb0b2
  5253aa:	inc    ebx
  5253ab:	fidivr WORD PTR [edx+0x5becae08]
  5253b1:	cmp    cl,BYTE PTR [eax]
  5253b3:	jo     0x5253e8
  5253b5:	fcomp  DWORD PTR [esp+ebp*1+0x34]
  5253b9:	xor    al,0xd3
  5253bb:	sub    eax,0x53b43158
  5253c0:	fsub   DWORD PTR [esi]
  5253c2:	test   al,0x69
  5253c4:	lahf   
  5253c5:	(bad)  
  5253c6:	cdq    
  5253c7:	mov    ah,0x37
  5253c9:	retf   0x88e2
  5253cc:	inc    esp
  5253cd:	lds    ebx,FWORD PTR [ecx-0x67526a57]
  5253d3:	in     eax,dx
  5253d4:	shl    BYTE PTR [ecx-0x53],cl
  5253d7:	sub    eax,0x7c14a89d
  5253dc:	repnz aaa 
  5253de:	pushf  
  5253df:	sub    al,0xdf
  5253e1:	mov    bh,0x17
  5253e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5253e4:	push   ebp
  5253e5:	sahf   
  5253e6:	adc    eax,0x223983b9
  5253eb:	in     eax,dx
  5253ec:	push   eax
  5253ed:	aam    0x4
  5253ef:	pop    ss
  5253f0:	aas    
  5253f1:	xchg   ecx,eax
  5253f2:	xchg   ecx,eax
  5253f3:	aas    
  5253f4:	or     eax,0x92cd25a5
  5253f9:	pop    ecx
  5253fa:	stos   DWORD PTR es:[edi],eax
  5253fb:	je     0x525382
  5253fd:	sahf   
  5253fe:	and    ebp,0xf725490c
  525404:	shl    BYTE PTR [eax-0x3a204da6],1
  52540a:	mov    BYTE PTR [ebp-0x4f],cl
  52540d:	add    esi,DWORD PTR [ebx+0x5e]
  525410:	repnz and DWORD PTR [esi+ebp*2],esp
  525414:	sbb    ch,0x51
  525417:	sub    esi,esi
  525419:	inc    edx
  52541a:	sbb    ecx,DWORD PTR [esi+edx*8+0x2f]
  52541e:	xchg   esi,eax
  52541f:	pop    esi
  525420:	js     0x5253c9
  525422:	cmp    DWORD PTR [edi],esi
  525424:	neg    DWORD PTR [edx+0x2f5dc13a]
  52542a:	pop    edx
  52542b:	sub    al,0xb
  52542d:	in     eax,0x46
  52542f:	rol    esp,0xb4
  525432:	rcr    ah,1
  525434:	pop    ds
  525435:	outs   dx,BYTE PTR ds:[esi]
  525436:	js     0x52547a
  525438:	(bad)  [esi+0x7a645f60]
  52543e:	js     0x525460
  525440:	pop    ss
  525441:	pushf  
  525442:	mov    dh,0x19
  525444:	idiv   ecx
  525446:	inc    ecx
  525447:	xor    DWORD PTR ds:0x1fc85dfd,ebx
  52544d:	outs   dx,BYTE PTR ds:[esi]
  52544e:	add    eax,edi
  525450:	mov    eax,0x8144c9f0
  525455:	adc    BYTE PTR [ecx-0x6f679f21],dl
  52545b:	and    al,0xf6
  52545d:	leave  
  52545e:	pop    esp
  52545f:	das    
  525460:	aas    
  525461:	jmp    FWORD PTR [ecx]
  525463:	ss repz mov dh,0x8a
  525467:	xor    eax,0x7939fd78
  52546c:	cmp    esi,ebp
  52546e:	pop    eax
  52546f:	(bad)  
  525470:	inc    ebx
  525471:	lds    eax,FWORD PTR [ebx+esi*8+0x73354075]
  525478:	nop
  525479:	or     eax,0x36260581
  52547e:	adc    DWORD PTR [ecx-0x26],0xb4ee9280
  525485:	loop   0x525503
  525487:	mov    ch,dl
  525489:	cmp    dh,BYTE PTR [ebx-0x2bcd8e2d]
  52548f:	push   edi
  525490:	mov    ebp,0xd028f37f
  525495:	inc    edx
  525496:	mov    ah,0x10
  525498:	and    BYTE PTR [esi-0xa],dl
  52549b:	lds    ebx,FWORD PTR [edx+0xd]
  52549e:	sub    al,BYTE PTR [edx-0x4c561d24]
  5254a4:	test   DWORD PTR [ecx+0x49],ecx
  5254a7:	mov    ecx,0x3ef42de9
  5254ac:	js     0x525520
  5254ae:	fiadd  WORD PTR [edi+edx*2]
  5254b1:	mov    dl,0x12
  5254b3:	ins    DWORD PTR es:[edi],dx
  5254b4:	jge    0x5254af
  5254b6:	ja     0x525464
  5254b8:	mov    dl,BYTE PTR [ecx+eiz*4+0x6e]
  5254bc:	in     eax,dx
  5254bd:	pushf  
  5254be:	pusha  
  5254bf:	sub    DWORD PTR [edx-0x3bee5f1e],ebp
  5254c5:	pop    ebx
  5254c6:	push   eax
  5254c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5254c8:	mov    al,0x89
  5254ca:	mov    DWORD PTR [ebx+0x113c6042],eax
  5254d0:	or     ebx,ecx
  5254d2:	push   0x76
  5254d4:	iret   
  5254d5:	rol    BYTE PTR [esp+ebx*8+0x45],0x10
  5254da:	cmp    BYTE PTR [eax],ah
  5254dc:	xlat   BYTE PTR ds:[ebx]
  5254dd:	std    
  5254de:	cmp    ecx,DWORD PTR [edx-0x6ef77253]
  5254e4:	add    esp,DWORD PTR ds:0x64453e29
  5254ea:	pop    ebp
  5254eb:	in     eax,dx
  5254ec:	out    dx,al
  5254ed:	outs   dx,BYTE PTR ds:[esi]
  5254ee:	fild   QWORD PTR [eax-0x4a8e55c3]
  5254f4:	push   ecx
  5254f5:	push   edi
  5254f6:	mov    ecx,0x5c2de457
  5254fb:	dec    eax
  5254fc:	jle    0x525548
  5254fe:	cmp    cl,dl
  525500:	inc    esi
  525501:	inc    esi
  525502:	mov    dh,ah
  525504:	mov    esi,ds
  525506:	out    0x39,al
  525508:	in     eax,dx
  525509:	pushf  
  52550a:	jno    0x525502
  52550c:	push   ds
  52550d:	jmp    0x5254f4
  52550f:	in     al,0x12
  525511:	fsubr  DWORD PTR [ecx]
  525513:	sub    bh,BYTE PTR [eax-0x73]
  525516:	leave  
  525517:	xchg   ecx,eax
  525518:	jl     0x525509
  52551a:	loop   0x52556d
  52551c:	mov    esi,0x891be226
  525521:	fsubp  st(1),st
  525523:	std    
  525524:	dec    ebp
  525525:	push   ds
  525526:	jbe    0x5254f8
  525528:	or     DWORD PTR [ecx],edx
  52552a:	rcl    bl,0x9f
  52552d:	mov    ebp,DWORD PTR ds:0x7d56ceef
  525533:	fisttp QWORD PTR [edx]
  525535:	out    0xf3,al
  525537:	xor    BYTE PTR [eax],ch
  525539:	mov    DWORD PTR [ecx-0x330e16da],eax
  52553f:	mov    ds:0x46e04664,al
  525544:	inc    ebp
  525545:	ins    DWORD PTR es:[edi],dx
  525546:	mov    edx,0x5c0fa554
  52554b:	jg     0x5255b6
  52554d:	test   DWORD PTR [ecx-0x611adeb7],edi
  525553:	dec    esp
  525554:	loop   0x525581
  525556:	div    ebp
  525558:	jp     0x525545
  52555a:	xor    edi,edi
  52555c:	mov    BYTE PTR [ecx],bh
  52555e:	sbb    eax,0xb4b316ae
  525563:	inc    edi
  525564:	jo     0x52557e
  525566:	stc    
  525567:	cdq    
  525568:	push   cs
  525569:	mov    ds:0x80585092,eax
  52556e:	sahf   
  52556f:	aaa    
  525570:	or     eax,0xdabb4e91
  525575:	jo     0x525573
  525577:	pop    es
  525578:	fs stos BYTE PTR es:[edi],al
  52557a:	arpl   WORD PTR [ecx-0x23df36f7],ax
  525580:	inc    edi
  525581:	call   0x310d:0xd5dc430d
  525588:	(bad)  
  525589:	call   0x7ebf1977
  52558e:	xchg   esp,eax
  52558f:	cs ss mov ah,0x4a
  525593:	ret    0x7913
  525596:	(bad)  
  525597:	jo     0x525529
  525599:	les    edx,FWORD PTR [ebx-0x65]
  52559c:	pop    esp
  52559d:	rcl    BYTE PTR [ebx+eax*8-0x31],cl
  5255a1:	jecxz  0x52560c
  5255a3:	add    esp,DWORD PTR [ebx-0x5c9249a3]
  5255a9:	xor    ah,BYTE PTR fs:[esi-0x1cb89fc]
  5255b0:	jg     0x52559e
  5255b2:	lock lahf 
  5255b4:	sub    al,bh
  5255b6:	out    0xe9,eax
  5255b8:	popf   
  5255b9:	xchg   esp,eax
  5255ba:	adc    eax,0x1400416c
  5255bf:	ins    DWORD PTR es:[edi],dx
  5255c0:	lahf   
  5255c1:	jb     0x525587
  5255c3:	lock mov ah,0x3
  5255c6:	fcomp  DWORD PTR [esi]
  5255c8:	xchg   ecx,eax
  5255c9:	mov    al,ds:0x6886695b
  5255ce:	or     cl,dl
  5255d0:	js     0x52562f
  5255d2:	(bad)  
  5255d3:	std    
  5255d4:	mov    ah,0x4d
  5255d6:	push   ebp
  5255d7:	and    ebx,edx
  5255d9:	mov    dl,0x3
  5255db:	and    DWORD PTR ds:0xd53af4b0,ebx
  5255e1:	push   ebp
  5255e2:	sbb    cl,BYTE PTR [edx-0x705f7859]
  5255e8:	call   0x896425d8
  5255ed:	sub    DWORD PTR [ecx+0x22b95c42],ebp
  5255f3:	imul   eax,DWORD PTR [ebx-0x32cccdc9],0x67
  5255fa:	stos   DWORD PTR es:[edi],eax
  5255fb:	lods   al,BYTE PTR ds:[esi]
  5255fc:	loopne 0x5255ae
  5255fe:	cmp    eax,0xb715f469
  525603:	sub    al,0x4c
  525605:	daa    
  525606:	jg     0x52565a
  525608:	imul   ebp,DWORD PTR [eax+0x7a4c049a],0xffffffe0
  52560f:	and    bl,BYTE PTR [eax-0x3b650e27]
  525615:	sub    ecx,DWORD PTR ds:0x259baf93
  52561b:	aaa    
  52561c:	or     BYTE PTR [eax+0x19],ah
  52561f:	(bad)  
  525620:	in     eax,0x13
  525622:	lahf   
  525623:	cdq    
  525624:	jmp    0x525636
  525626:	cdq    
  525627:	mov    BYTE PTR [eax-0x20],cl
  52562a:	leave  
  52562b:	or     ebx,DWORD PTR [edi]
  52562d:	add    BYTE PTR [edx-0x242418cf],0x6c
  525634:	xchg   BYTE PTR [ebx-0xd6211a9],ch
  52563a:	pop    ebp
  52563b:	std    
  52563c:	ds xor eax,0xefed5196
  525642:	dec    edi
  525643:	mov    DWORD PTR cs:[ecx+0x6366cd88],ebx
  52564a:	aad    0x59
  52564c:	mov    edx,0x4d063724
  525651:	fwait
  525652:	lahf   
  525653:	xor    al,0xa8
  525655:	test   al,0x33
  525657:	addr16 loope 0x5256d9
  52565a:	sub    al,0xf0
  52565c:	xor    DWORD PTR [ecx-0x520da1fc],eax
  525662:	mov    ds:0xa3099d65,eax
  525667:	add    esp,eax
  525669:	dec    edi
  52566a:	adc    eax,0xea67bcfb
  52566f:	sub    al,ah
  525671:	lahf   
  525672:	cmp    al,0x4c
  525674:	jbe    0x52563e
  525676:	cmp    bh,BYTE PTR [ecx]
  525678:	mov    bl,0xec
  52567a:	xchg   DWORD PTR [ecx],ecx
  52567c:	cmc    
  52567d:	and    esi,DWORD PTR [eax]
  52567f:	add    DWORD PTR [eax+ecx*1+0x6da18104],ecx
  525686:	mov    cl,0x7e
  525688:	stos   DWORD PTR es:[edi],eax
  525689:	dec    edi
  52568a:	sahf   
  52568b:	cli    
  52568c:	fsubrp st(2),st
  52568e:	inc    ecx
  52568f:	cmp    esi,esp
  525691:	sub    BYTE PTR [edi],al
  525693:	loope  0x5256b3
  525695:	push   es
  525696:	mov    WORD PTR [edi+ebp*4],?
  525699:	xchg   bl,al
  52569b:	(bad)
  52569e:	mov    al,ds:0xb6ee76d2
  5256a3:	mov    dh,0x34
  5256a5:	cld    
  5256a6:	mov    ah,0x90
  5256a8:	dec    edx
  5256a9:	mov    esp,0xda8bde03
  5256ae:	jmp    0x17d7:0x11dac94d
  5256b5:	adc    BYTE PTR [ebp+0x14],ah
  5256b8:	jns    0x52563a
  5256ba:	es mov bl,0x43
  5256bd:	xchg   BYTE PTR [ebx],ah
  5256bf:	out    0x3f,eax
  5256c1:	(bad)  
  5256c2:	jl     0x5256c3
  5256c4:	jbe    0x5256f1
  5256c6:	mov    ds:0x2aa1c5c7,al
  5256cb:	(bad)  
  5256cc:	retf   
  5256cd:	icebp  
  5256ce:	add    ah,BYTE PTR [ebp-0x6e]
  5256d1:	dec    ecx
  5256d2:	getsec 
  5256d4:	or     BYTE PTR [edx+0xb2fcb2a],cl
  5256da:	inc    ebp
  5256db:	adc    eax,0x9bf9f9e9
  5256e0:	jecxz  0x525669
  5256e2:	sub    BYTE PTR [ebx+0x25e455ff],0x3e
  5256e9:	mov    esi,0xd37ed9c1
  5256ee:	test   DWORD PTR [eax+0x28],ebx
  5256f1:	repnz hlt 
  5256f3:	cwde   
  5256f4:	in     al,0xce
  5256f6:	scas   al,BYTE PTR es:[edi]
  5256f7:	jnp    0x525727
  5256f9:	retf   
  5256fa:	sahf   
  5256fb:	push   ecx
  5256fc:	shl    DWORD PTR [ebp-0x6fbfb1c3],0x58
  525703:	int    0xc3
  525705:	mov    ch,0xd5
  525707:	adc    DWORD PTR [ebx-0x17cb42e9],ecx
  52570d:	lods   al,BYTE PTR ds:[esi]
  52570e:	and    al,0xb9
  525710:	lods   al,BYTE PTR ds:[esi]
  525711:	pop    edx
  525712:	gs addr16 in al,dx
  525715:	out    dx,eax
  525716:	icebp  
  525717:	cmp    bh,BYTE PTR [ebx]
  525719:	cld    
  52571a:	mov    dl,0xd9
  52571c:	add    al,0x98
  52571e:	(bad)
  525722:	scas   al,BYTE PTR es:[edi]
  525723:	out    dx,eax
  525724:	aam    0x7e
  525726:	and    esp,ecx
  525728:	in     al,dx
  525729:	into   
  52572a:	push   esi
  52572b:	xor    dh,bh
  52572d:	mov    cl,0xc1
  52572f:	das    
  525730:	adc    esp,DWORD PTR [ebp-0x63]
  525733:	test   BYTE PTR [ecx-0xb],dl
  525736:	bound  ebx,QWORD PTR [esi+0x81d147]
  52573c:	cmp    eax,0x83046c1e
  525741:	aam    0x12
  525743:	and    BYTE PTR [edi-0x20],0x7
  525747:	mov    edi,es
  525749:	sub    ah,BYTE PTR [edx+0x30]
  52574c:	push   ss
  52574d:	test   ebx,eax
  52574f:	or     DWORD PTR [ebp+0x39],0x4d
  525753:	xchg   ebp,eax
  525754:	mov    esp,DWORD PTR [edi-0xe]
  525757:	ret    0x2010
  52575a:	gs test esp,esi
  52575d:	dec    esi
  52575e:	or     BYTE PTR [ecx-0x5b247855],cl
  525764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525765:	xor    DWORD PTR [eax-0x2c],edi
  525768:	shl    BYTE PTR [eax+0x388e7a75],cl
  52576e:	mov    eax,0xa6dbf190
  525773:	sahf   
  525774:	test   BYTE PTR [ebx-0x499fdde1],bh
  52577a:	add    ebp,edi
  52577c:	(bad)  
  52577d:	push   esi
  52577e:	test   al,0x2a
  525780:	gs into 
  525782:	sti    
  525783:	sahf   
  525784:	iret   
  525785:	ds push edi
  525787:	nop
  525788:	les    esi,FWORD PTR [ebx]
  52578a:	fs adc dl,bh
  52578d:	cmp    eax,0x626292ea
  525792:	cli    
  525793:	mov    eax,0x445b16f8
  525798:	ins    BYTE PTR es:[edi],dx
  525799:	(bad)  
  52579a:	cmp    DWORD PTR [ebx],eax
  52579c:	mov    dl,0xd2
  52579e:	sub    BYTE PTR [ebp+0x33d0bf40],0x7c
  5257a5:	xor    BYTE PTR [esi],cl
  5257a7:	dec    edx
  5257a8:	jbe    0x5257a5
  5257aa:	fyl2x  
  5257ac:	push   ebx
  5257ad:	pop    esi
  5257ae:	stos   BYTE PTR es:[edi],al
  5257af:	dec    eax
  5257b0:	pop    ds
  5257b1:	or     DWORD PTR [esi+0x8],0x1b72d980
  5257b8:	adc    BYTE PTR [ebx],ch
  5257ba:	arpl   WORD PTR [esi],di
  5257bc:	sub    eax,0x11990715
  5257c1:	or     al,0xe6
  5257c3:	not    dh
  5257c5:	mov    ah,0xb7
  5257c7:	sbb    bh,ah
  5257c9:	cwde   
  5257ca:	shl    BYTE PTR [ebx+0x331f7418],cl
  5257d0:	data16 jp 0x525850
  5257d3:	rcr    DWORD PTR [ecx],cl
  5257d5:	inc    ecx
  5257d6:	push   ds
  5257d7:	loope  0x525828
  5257d9:	xchg   edx,eax
  5257da:	jo     0x5257a8
  5257dc:	das    
  5257dd:	push   esi
  5257de:	add    bh,BYTE PTR [edi-0x25]
  5257e1:	mov    ch,0x1e
  5257e3:	add    al,0x57
  5257e5:	xchg   edi,eax
  5257e6:	scas   eax,DWORD PTR es:[edi]
  5257e7:	pushf  
  5257e8:	pop    ss
  5257e9:	stos   DWORD PTR es:[edi],eax
  5257ea:	fdivr  st(0),st
  5257ec:	or     BYTE PTR [eax+0x3d],cl
  5257ef:	mov    ds:0x12a20603,eax
  5257f4:	push   ss
  5257f5:	int3   
  5257f6:	push   edx
  5257f7:	outs   dx,DWORD PTR ds:[esi]
  5257f8:	add    ebx,DWORD PTR [esi+edi*4+0xe]
  5257fc:	add    ecx,ecx
  5257fe:	xchg   BYTE PTR [edx+0x72],bl
  525801:	dec    ecx
  525802:	loop   0x525794
  525804:	leave  
  525805:	repnz xlat BYTE PTR ss:[ebx]
  525808:	ins    DWORD PTR es:[edi],dx
  525809:	mov    DWORD PTR [ebp-0x40],edx
  52580c:	cmp    BYTE PTR ss:[ecx],0xc8
  525810:	jae    0x525866
  525812:	add    DWORD PTR [ebp-0x3a],edi
  525815:	rcr    esi,0x17
  525818:	jae    0x525858
  52581a:	inc    ebp
  52581b:	retf   0x22bd
  52581e:	mov    bl,cl
  525820:	xor    DWORD PTR [esi-0x3a],ebx
  525823:	mov    dl,BYTE PTR [ecx]
  525825:	sahf   
  525826:	dec    ecx
  525827:	mov    bh,0xb8
  525829:	sbb    eax,0x6f8a50de
  52582e:	jle    0x525860
  525830:	mov    bh,0x1a
  525832:	popf   
  525833:	cwde   
  525834:	shl    dl,0xd5
  525837:	and    ah,ah
  525839:	or     al,0xc0
  52583b:	fmul   st(2),st
  52583d:	pop    ds
  52583e:	repz fcom QWORD PTR [eax]
  525841:	adc    bh,BYTE PTR [edi+0x5e]
  525844:	enter  0x5228,0xc
  525848:	aad    0x1a
  52584a:	int3   
  52584b:	loopne 0x52581f
  52584d:	mov    ebx,0x5a737490
  525852:	xchg   ecx,eax
  525853:	adc    al,0xa9
  525855:	call   0x7ba07c44
  52585a:	popf   
  52585b:	xchg   edx,eax
  52585c:	jecxz  0x52587e
  52585e:	sub    bh,dh
  525860:	outs   dx,DWORD PTR ds:[esi]
  525861:	(bad)  
  525862:	call   0x20483e53
  525867:	call   0x34f1:0xfaaceea3
  52586e:	ss xchg edi,eax
  525870:	aad    0xad
  525872:	add    DWORD PTR [ebp+0x31d58b4],edx
  525878:	adc    al,0x93
  52587a:	popa   
  52587b:	stos   DWORD PTR es:[edi],eax
  52587c:	fldz   
  52587e:	or     BYTE PTR [ecx+0x1b],dl
  525881:	xchg   ebx,eax
  525882:	dec    esp
  525883:	push   eax
  525884:	or     DWORD PTR [ecx+0x2c32f41],0x2b683ce
  52588e:	jo     0x525898
  525890:	call   0x5ed92875
  525895:	inc    edx
  525896:	pop    ds
  525897:	call   0x699d:0x5a5f5402
  52589e:	rol    BYTE PTR [eax],cl
  5258a0:	cs xor dl,bh
  5258a3:	xchg   esp,eax
  5258a4:	in     al,dx
  5258a5:	adc    BYTE PTR [ecx],al
  5258a7:	inc    ebx
  5258a8:	push   edx
  5258a9:	push   ds
  5258aa:	retf   
  5258ab:	mov    esi,0xf3e11706
  5258b0:	(bad)  
  5258b1:	mov    fs,WORD PTR [ebx-0x4e]
  5258b4:	inc    esp
  5258b5:	out    dx,al
  5258b6:	(bad)  
  5258b7:	or     esi,DWORD PTR [ebx-0x63]
  5258ba:	enter  0x20d0,0x3
  5258be:	fs sbb al,0xc5
  5258c1:	sahf   
  5258c2:	leave  
  5258c3:	xor    edi,DWORD PTR [eax-0x40b11eac]
  5258c9:	xchg   BYTE PTR [edi],bl
  5258cb:	mov    ?,WORD PTR [esi+0x5765fc99]
  5258d1:	or     BYTE PTR [edx],cl
  5258d3:	sub    al,0x93
  5258d5:	add    edi,DWORD PTR [ecx+0x40]
  5258d8:	cmp    ecx,DWORD PTR [edx]
  5258da:	ins    DWORD PTR es:[edi],dx
  5258db:	cmp    eax,0x27224e90
  5258e0:	in     al,0x72
  5258e2:	fcomp  QWORD PTR [ebp+0x549eda52]
  5258e8:	mov    edi,0x67bcefb4
  5258ed:	pop    ebx
  5258ee:	and    eax,0x9606e948
  5258f3:	psadbw mm2,QWORD PTR [ebp+0x41a0abc9]
  5258fa:	jp     0x5258b8
  5258fc:	frstor [esi-0x77e8b341]
  525902:	sub    BYTE PTR [ebx+0x7197095c],al
  525908:	and    al,0x63
  52590a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52590b:	cs pop ebp
  52590d:	inc    ebp
  52590e:	mov    bl,0xd5
  525910:	icebp  
  525911:	jne    0x5258bf
  525913:	add    DWORD PTR [edx+edx*8],ecx
  525916:	pop    ds
  525917:	pop    ebp
  525918:	imul   eax,DWORD PTR [esi],0xc40faa1
  52591e:	jns    0x525932
  525920:	icebp  
  525921:	dec    esi
  525922:	(bad)  
  525923:	test   al,0x66
  525925:	cld    
  525926:	and    ebx,edx
  525928:	or     eax,0xa3cba1c7
  52592d:	push   edx
  52592e:	mov    DWORD PTR [edx+0xe],ebx
  525931:	inc    ebp
  525932:	cmp    eax,0x1df6a498
  525937:	shr    bh,0x92
  52593a:	std    
  52593b:	cwde   
  52593c:	mov    al,ds:0x87ab9669
  525941:	ja     0x5259c2
  525943:	adc    DWORD PTR ds:0x27297dcc,esi
  525949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52594a:	pop    edx
  52594b:	idiv   DWORD PTR [eax+0x2d]
  52594e:	mov    ?,WORD PTR [edx]
  525950:	lds    esp,FWORD PTR [esi-0x7724de2a]
  525956:	pop    ecx
  525957:	or     eax,ebp
  525959:	push   edx
  52595a:	mov    eax,es
  52595c:	mul    BYTE PTR [edx-0x75f9fc8a]
  525962:	repnz mov eax,0x1c0284c8
  525968:	jbe    0x52591d
  52596a:	out    0x4b,eax
  52596c:	pop    ebp
  52596d:	aas    
  52596e:	adc    al,0x42
  525970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525971:	sub    eax,0x5bfe4250
  525976:	mov    eax,0x32197aae
  52597b:	mov    dl,0x5f
  52597d:	sahf   
  52597e:	push   esp
  52597f:	and    eax,0xed59cb71
  525984:	mov    edi,0x25a47a4b
  525989:	ds (bad) 
  52598b:	fldenv [edi-0x1f]
  52598e:	outs   dx,BYTE PTR ds:[esi]
  52598f:	mov    ebp,0xd75652d2
  525994:	js     0x5259df
  525996:	inc    esp
  525997:	loope  0x525988
  525999:	inc    esi
  52599a:	fwait
  52599b:	ret    0xd39b
  52599e:	popa   
  52599f:	mov    ebx,0x9970455d
  5259a4:	dec    BYTE PTR [esi-0x1]
  5259a7:	in     eax,0x27
  5259a9:	cmp    eax,edx
  5259ab:	jmp    0x5259ce
  5259ad:	fs inc edx
  5259af:	xchg   BYTE PTR [edx],al
  5259b1:	sub    esp,edx
  5259b3:	out    dx,al
  5259b4:	pop    edx
  5259b5:	jg     0x525a0c
  5259b7:	sub    DWORD PTR [ebp-0x47f81a5c],ebx
  5259bd:	xor    edx,DWORD PTR [esp+esi*1+0x4d]
  5259c1:	lods   eax,DWORD PTR ds:[esi]
  5259c2:	ss pop esi
  5259c4:	ds stc 
  5259c6:	movd   DWORD PTR [eax+0x3ccc4975],mm5
  5259cd:	and    bh,bh
  5259cf:	(bad)  
  5259d0:	adc    al,0x25
  5259d2:	jnp    0x525982
  5259d4:	mov    edi,0xa208cd0b
  5259d9:	inc    eax
  5259da:	(bad)  
  5259db:	std    
  5259dc:	or     dh,BYTE PTR [edi+0x6ae25702]
  5259e2:	pusha  
  5259e3:	jl     0x525a22
  5259e5:	adc    al,0x23
  5259e7:	xor    eax,0x333496d6
  5259ec:	in     al,dx
  5259ed:	adc    bh,BYTE PTR [edi-0x48ef99ee]
  5259f3:	jge    0x5259c3
  5259f5:	les    edi,FWORD PTR [edx-0x345594b3]
  5259fb:	pop    es
  5259fc:	mov    dl,0xfb
  5259fe:	xlat   BYTE PTR cs:[ebx]
  525a00:	cmc    
  525a01:	pop    ecx
  525a02:	aad    0x99
  525a04:	repnz aas 
  525a06:	(bad)  
  525a07:	mov    ecx,0xeaae8959
  525a0c:	mov    ah,0xeb
  525a0e:	pop    es
  525a0f:	out    0xbf,al
  525a11:	pop    ebp
  525a12:	mov    ch,0xfe
  525a14:	xchg   edi,eax
  525a15:	data16 fisubr WORD PTR [ecx]
  525a18:	std    
  525a19:	loopne 0x525a43
  525a1b:	nop
  525a1c:	stc    
  525a1d:	mov    dh,ch
  525a1f:	push   esp
  525a20:	lods   al,BYTE PTR ds:[esi]
  525a21:	dec    esi
  525a22:	pop    esp
  525a23:	repnz test al,0xcd
  525a26:	push   ss
  525a27:	sub    eax,0x992f742e
  525a2c:	jge    0x525a4d
  525a2e:	cli    
  525a2f:	imul   ebp,DWORD PTR [ebp+0x6],0x64af8cd7
  525a36:	hlt    
  525a37:	adc    al,0x7b
  525a39:	jne    0x525a59
  525a3b:	lea    edx,[esi+0x32]
  525a3e:	jno    0x525aab
  525a40:	xor    BYTE PTR [ebx],dl
  525a42:	scas   eax,DWORD PTR es:[edi]
  525a43:	xchg   edi,eax
  525a44:	push   ss
  525a45:	add    ch,BYTE PTR [edx+0x15]
  525a48:	pop    esp
  525a49:	fstp   TBYTE PTR [esi-0x59c97fe6]
  525a4f:	sbb    dh,BYTE PTR [edx+ebp*4+0x2c4fe9d6]
  525a56:	push   cs
  525a57:	adc    al,0x1e
  525a59:	dec    edx
  525a5a:	out    dx,al
  525a5b:	mov    eax,ds:0x3acc50bf
  525a60:	sbb    al,0xe5
  525a62:	dec    esp
  525a63:	leave  
  525a64:	outs   dx,DWORD PTR ds:[esi]
  525a65:	out    0x23,eax
  525a67:	(bad)  
  525a68:	cmp    eax,0xf5d0f977
  525a6d:	idiv   bh
  525a6f:	shl    BYTE PTR [ebp+edx*1-0x47294687],cl
  525a76:	push   ecx
  525a77:	imul   esp,ebp,0x4655849a
  525a7d:	sti    
  525a7e:	aas    
  525a7f:	ror    ecx,0x70
  525a82:	and    eax,0x14141536
  525a87:	cmp    DWORD PTR [eax],0x6e
  525a8a:	and    edx,eax
  525a8c:	adc    BYTE PTR [ecx+0x26],ah
  525a8f:	sub    dh,dh
  525a91:	test   DWORD PTR [ebp+edx*4+0x24],esp
  525a95:	out    0x75,eax
  525a97:	cmp    al,0xe8
  525a99:	mov    ch,0x2e
  525a9b:	push   0xfffffffd
  525a9d:	daa    
  525a9e:	mov    cl,0xf8
  525aa0:	or     DWORD PTR [edx-0x2c],edx
  525aa3:	out    dx,eax
  525aa4:	fprem1 
  525aa6:	imul   edx,DWORD PTR [esp+ecx*1-0x39],0x6c
  525aab:	mov    ch,0x2c
  525aad:	imul   DWORD PTR [esi-0xf83a620]
  525ab3:	dec    ebp
  525ab4:	mov    ecx,0xf04b8f52
  525ab9:	ins    DWORD PTR es:[edi],dx
  525aba:	dec    ecx
  525abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525abc:	clc    
  525abd:	in     al,dx
  525abe:	jae    0x525acf
  525ac0:	push   eax
  525ac1:	frstor [ebx-0x72]
  525ac4:	mov    cl,BYTE PTR [edi+edx*8]
  525ac7:	lock bound ebx,QWORD PTR [esi-0x5a]
  525acb:	js     0x525b47
  525acd:	(bad)  
  525ace:	xlat   BYTE PTR ds:[ebx]
  525acf:	(bad)  
  525ad0:	xchg   ebx,eax
  525ad1:	shl    DWORD PTR [edx],0x5
  525ad4:	fsubr  st(2),st
  525ad6:	fadd   st,st(7)
  525ad8:	clc    
  525ad9:	jbe    0x525a7a
  525adb:	ror    DWORD PTR [ecx-0x58fd7f6],0xef
  525ae2:	fs fs sbb edi,edi
  525ae6:	mov    edx,DWORD PTR [eax]
  525ae8:	dec    ebx
  525ae9:	or     BYTE PTR [ebx-0x5e],0x13
  525aed:	jb     0x525aec
  525aef:	int3   
  525af0:	call   0x84a4:0xdec71a68
  525af7:	mov    eax,ds:0x296b348e
  525afc:	repnz sbb eax,0xd2cca0ed
  525b02:	sbb    ch,dh
  525b04:	ret    0xf905
  525b07:	dec    edi
  525b08:	lahf   
  525b09:	test   al,0x1a
  525b0b:	ror    al,cl
  525b0d:	dec    esi
  525b0e:	sbb    esp,DWORD PTR [ecx+ecx*2-0x45c9562c]
  525b15:	mov    eax,ds:0x5f4fde01
  525b1a:	adc    DWORD PTR [eax],esi
  525b1c:	lock pop ecx
  525b1e:	inc    ebx
  525b1f:	bound  esi,QWORD PTR [ecx-0x71]
  525b22:	push   cs
  525b23:	fisub  DWORD PTR [edx-0x7a]
  525b26:	inc    esp
  525b27:	ja     0x525aed
  525b29:	mov    ah,0x6c
  525b2b:	or     cl,BYTE PTR [ecx+0x70]
  525b2e:	jge    0x525b7d
  525b30:	data16 aad 0xe7
  525b33:	test   dh,dh
  525b35:	cdq    
  525b36:	sbb    DWORD PTR [esi-0xa],ebp
  525b39:	mov    ah,0xd5
  525b3b:	xlat   BYTE PTR ds:[ebx]
  525b3c:	jo     0x525b1a
  525b3e:	adc    eax,0x89389bdd
  525b43:	push   0x6b
  525b45:	push   edi
  525b46:	jge    0x525ad3
  525b48:	loope  0x525acb
  525b4a:	mov    cl,BYTE PTR [edi+0x2403666b]
  525b50:	test   BYTE PTR [esi-0x5d00176f],al
  525b56:	test   ah,ah
  525b58:	test   BYTE PTR [ebx+0x57],dh
  525b5b:	adc    eax,0x56017782
  525b60:	js     0x525ba6
  525b62:	repnz (bad) 
  525b64:	sub    DWORD PTR [ebx],ecx
  525b66:	mov    bh,0x42
  525b68:	imul   eax,ebp,0x129bb1e6
  525b6e:	(bad)  
  525b6f:	hlt    
  525b70:	adc    cl,dl
  525b72:	or     ebp,edi
  525b74:	sbb    ebp,DWORD PTR [edx+0x34]
  525b77:	and    DWORD PTR [ebp+0xe],0x27
  525b7b:	and    ecx,ebp
  525b7d:	jo     0x525b77
  525b7f:	cld    
  525b80:	(bad)  
  525b81:	sub    ebp,DWORD PTR [ebx+0x197c7e3e]
  525b87:	enter  0x2eb3,0x90
  525b8b:	fsubrp st(7),st
  525b8d:	mov    BYTE PTR ds:0x32fb8522,dh
  525b93:	jnp    0x525b96
  525b95:	dec    esp
  525b96:	inc    ebp
  525b97:	jp     0x525bde
  525b99:	mov    WORD PTR [esi+esi*8+0x5f],ds
  525b9d:	hlt    
  525b9e:	addr16 (bad) 
  525ba0:	xor    ebx,ebp
  525ba2:	sbb    eax,0x1bf875ed
  525ba7:	cwde   
  525ba8:	adc    al,0x42
  525baa:	push   es
  525bab:	sub    bl,BYTE PTR ds:0x3822ea17
  525bb1:	pop    edi
  525bb2:	daa    
  525bb3:	test   edx,edx
  525bb5:	pusha  
  525bb6:	pop    esi
  525bb7:	jbe    0x525c36
  525bb9:	inc    eax
  525bba:	or     eax,DWORD PTR [edx]
  525bbc:	or     cl,BYTE PTR [ecx]
  525bbe:	scas   al,BYTE PTR es:[edi]
  525bbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  525bc0:	push   ds
  525bc1:	or     al,0xa5
  525bc3:	pop    ebp
  525bc4:	idiv   edi
  525bc6:	in     eax,dx
  525bc7:	xlat   BYTE PTR ds:[ebx]
  525bc8:	mov    dl,0xee
  525bca:	div    DWORD PTR [eax-0x4135ccd4]
  525bd0:	fisttp QWORD PTR [ebx-0x72c41169]
  525bd6:	push   edi
  525bd7:	pop    es
  525bd8:	mov    ds:0xa219abba,eax
  525bdd:	push   ecx
  525bde:	pop    eax
  525bdf:	inc    ecx
  525be0:	jp     0x525c4e
  525be2:	repz daa 
  525be4:	lahf   
  525be5:	jmp    0x6ece4fe7
  525bea:	je     0x525ba1
  525bec:	pop    ebx
  525bed:	in     eax,dx
  525bee:	fcomp  DWORD PTR [ebx+0x60]
  525bf1:	in     al,0xfe
  525bf3:	or     eax,0xd9d57b60
  525bf8:	test   al,0x55
  525bfa:	push   0x38
  525bfc:	shl    DWORD PTR [eax-0x22],0x68
  525c00:	gs fs xor edi,ebx
  525c04:	mov    ch,0xdc
  525c06:	add    ah,ch
  525c08:	mov    al,ds:0xfb24ed23
  525c0d:	push   es
  525c0e:	fwait
  525c0f:	js     0x525c7e
  525c11:	mov    eax,0x53feffd8
  525c16:	popf   
  525c17:	aad    0xe9
  525c19:	jbe    0x525bb5
  525c1b:	sub    ch,BYTE PTR [esi]
  525c1d:	jle    0x525c85
  525c1f:	mov    dh,0xd5
  525c21:	movhps QWORD PTR [ecx],xmm4
  525c24:	sar    DWORD PTR [ecx+ebp*2],0xa
  525c28:	push   edx
  525c29:	or     al,0x9d
  525c2b:	mov    ebx,0xd1101e0e
  525c30:	out    0xaa,eax
  525c32:	js     0x525c2d
  525c34:	mov    edx,?
  525c36:	pop    eax
  525c37:	xchg   BYTE PTR [eax+0xf],al
  525c3a:	lahf   
  525c3b:	push   esp
  525c3c:	add    ebx,ecx
  525c3e:	jmp    0xd516d368
  525c43:	and    eax,esi
  525c45:	cmp    al,0xe2
  525c47:	xchg   ecx,eax
  525c48:	mov    eax,ds:0xd1d6edb5
  525c4d:	scas   eax,DWORD PTR es:[edi]
  525c4e:	add    ebp,DWORD PTR [ebp+0x6d]
  525c51:	and    eax,0x289fa928
  525c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525c57:	cmp    eax,DWORD PTR [esi+ecx*8+0x61]
  525c5b:	or     eax,0x2782e4e7
  525c60:	rol    esp,0x93
  525c63:	prefetcht1 BYTE PTR [ebx]
  525c66:	push   edx
  525c67:	js     0x525ca9
  525c69:	outs   dx,DWORD PTR ds:[esi]
  525c6a:	ins    DWORD PTR es:[edi],dx
  525c6b:	repz inc esi
  525c6d:	jmp    0x2c17480e
  525c72:	jo     0x525c9f
  525c74:	into   
  525c75:	lock and DWORD PTR [esi+0xa],ebp
  525c79:	dec    ebx
  525c7a:	adc    BYTE PTR [edi+0x761eb5a0],dh
  525c80:	adc    DWORD PTR [edx],esi
  525c82:	and    BYTE PTR [edi+edx*4+0x2f],dh
  525c86:	xchg   edi,eax
  525c87:	cmp    ebp,ebx
  525c89:	mov    ds:0xba08e5d1,al
  525c8e:	cmp    bl,BYTE PTR [edx]
  525c90:	sub    eax,0xa3e2f4f5
  525c95:	daa    
  525c96:	sar    BYTE PTR [ebx+0x55602ba8],1
  525c9c:	sahf   
  525c9d:	shr    DWORD PTR [esp+ebx*1-0x5d],0x7b
  525ca2:	push   es
  525ca3:	adc    bh,BYTE PTR [ecx]
  525ca5:	rcl    BYTE PTR [esi+edx*1],cl
  525ca8:	loopne 0x525c90
  525caa:	retf   0xab54
  525cad:	jle    0x525c40
  525caf:	ror    DWORD PTR [edi+0x4859659c],1
  525cb5:	mov    eax,edi
  525cb7:	pop    esp
  525cb8:	pop    ecx
  525cb9:	pop    ebp
  525cba:	arpl   di,bp
  525cbc:	fisub  DWORD PTR [eax]
  525cbe:	or     DWORD PTR [ebp+0x15],ebp
  525cc1:	jbe    0x525cc9
  525cc3:	cvtdq2ps xmm4,XMMWORD PTR [edx+ecx*4+0x29]
  525cc8:	xlat   BYTE PTR ds:[ebx]
  525cc9:	adc    DWORD PTR [ebx+0x564ee9ee],eax
  525ccf:	sub    al,0xc4
  525cd1:	push   ds
  525cd2:	mov    dh,0xd3
  525cd4:	mov    eax,0xdfce3aaf
  525cd9:	sti    
  525cda:	xchg   esi,eax
  525cdb:	and    DWORD PTR [edx+0x3d],edx
  525cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  525cdf:	add    edi,ebp
  525ce1:	push   esi
  525ce2:	aam    0xd5
  525ce4:	es sahf 
  525ce6:	push   esi
  525ce7:	mov    edi,DWORD PTR [ebp+0x63]
  525cea:	push   ebp
  525ceb:	or     bh,0xa
  525cee:	pop    ebx
  525cef:	(bad)
  525cf2:	inc    ebx
  525cf3:	mov    ss,WORD PTR [ebx]
  525cf5:	inc    DWORD PTR [eax+0x21c0b6aa]
  525cfb:	sub    DWORD PTR [ebx-0x739729e0],esi
  525d01:	xlat   BYTE PTR ds:[ebx]
  525d02:	sub    DWORD PTR [esp+edx*4],ecx
  525d05:	fild   DWORD PTR cs:[ebx+0x224667c8]
  525d0c:	mov    ecx,0x9ce60000
  525d11:	mov    al,ds:0x30104ab
  525d16:	and    al,0xed
  525d19:	adc    BYTE PTR [ebx+eax*2-0x18],al
  525d1d:	pushf  
  525d1e:	ret    
  525d1f:	add    BYTE PTR [edi+eax*8+0x36546b23],0xdd
  525d27:	xchg   DWORD PTR [edi],eax
  525d29:	dec    edi
  525d2a:	jl     0x525d8a
  525d2c:	dec    ebp
  525d2d:	int3   
  525d2e:	test   eax,0x6eeb386
  525d33:	jb     0x525d42
  525d35:	adc    edx,DWORD PTR [edx]
  525d37:	callw  0x9332
  525d3b:	add    BYTE PTR [ecx*2-0x590d1632],bl
  525d42:	add    BYTE PTR [eax+0x3d],dl
  525d45:	lock push esp
  525d47:	cdq    
  525d48:	xchg   ebp,eax
  525d49:	xchg   esi,eax
  525d4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525d4b:	adc    al,0x9
  525d4d:	jg     0x525cef
  525d4f:	(bad)
  525d52:	sub    al,0x56
  525d54:	xor    BYTE PTR [ebp+eiz*4-0x426b16bf],0x3d
  525d5c:	cli    
  525d5d:	dec    edx
  525d5e:	mov    ds:0x1bdee1eb,eax
  525d63:	stc    
  525d64:	lods   eax,DWORD PTR ds:[esi]
  525d65:	(bad)  
  525d66:	fimul  DWORD PTR [ebx+0x3d]
  525d69:	inc    edx
  525d6a:	pusha  
  525d6b:	pop    edx
  525d6c:	xchg   esp,eax
  525d6d:	add    DWORD PTR [ecx-0x30278674],ebx
  525d73:	es or  al,0xb4
  525d76:	fisttp QWORD PTR [edx]
  525d78:	mov    ebx,0x8c38ed95
  525d7d:	fwait
  525d7e:	gs jg  0x525d97
  525d81:	fiadd  WORD PTR [ecx-0x5536fdfe]
  525d87:	jl     0x525e03
  525d89:	xor    ch,cl
  525d8b:	retf   
  525d8c:	cmp    ah,BYTE PTR [edx+eax*8-0x7e]
  525d90:	sbb    al,0xc1
  525d92:	(bad)  
  525d93:	mov    ah,BYTE PTR [ebx+0x29315103]
  525d99:	in     eax,0xf7
  525d9b:	jo     0x525d7d
  525d9d:	or     BYTE PTR [ecx+0x10],dh
  525da0:	call   0x2203:0x439e0e8a
  525da7:	(bad)  
  525da8:	push   0xffffffa9
  525daa:	or     al,0xb1
  525dac:	btc    DWORD PTR [ebx-0x4c675bb4],ebx
  525db3:	mov    ecx,0x6c5e5cc
  525db8:	ror    DWORD PTR [ebx+0x14],1
  525dbb:	scas   al,BYTE PTR es:[edi]
  525dbc:	dec    esi
  525dbd:	xchg   ebx,eax
  525dbe:	add    bl,BYTE PTR [esi+0x7e]
  525dc1:	or     BYTE PTR [edi+0x5cd72508],dh
  525dc7:	lods   eax,DWORD PTR ds:[esi]
  525dc8:	fcmovnbe st,st(0)
  525dca:	in     eax,0xd3
  525dcc:	sbb    al,0x77
  525dce:	retf   
  525dcf:	mov    ah,0x15
  525dd1:	mov    edx,0x3322ec32
  525dd6:	mov    ds:0xeccc5938,eax
  525ddb:	mov    al,ds:0xf6683060
  525de0:	call   0x7792a813
  525de5:	dec    ecx
  525de6:	cli    
  525de7:	pop    eax
  525de8:	push   ebx
  525de9:	push   cs
  525dea:	outs   dx,BYTE PTR ds:[esi]
  525deb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  525dec:	dec    eax
  525ded:	xchg   dl,cl
  525def:	pusha  
  525df0:	dec    edx
  525df1:	aas    
  525df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525df3:	xchg   esp,eax
  525df4:	xchg   ah,cl
  525df6:	loop   0x525e72
  525df8:	enter  0x7595,0x1f
  525dfc:	or     eax,0x1bbf6f60
  525e01:	mov    eax,ds:0xf60a2ae1
  525e06:	gs imul esi,edx,0x4b959364
  525e0d:	(bad)  
  525e0f:	push   ecx
  525e10:	dec    esi
  525e11:	mov    ebp,0x35f2a31
  525e16:	cmp    al,0xac
  525e18:	mov    es,WORD PTR [edx]
  525e1a:	int3   
  525e1b:	bound  ebx,QWORD PTR [esi]
  525e1d:	add    edx,DWORD PTR [edx-0x134c2ded]
  525e23:	aad    0x44
  525e25:	shl    BYTE PTR [esi],cl
  525e27:	je     0x525db7
  525e29:	sbb    DWORD PTR [edx+ebx*2+0x785e6c7e],0xffffff88
  525e31:	inc    edi
  525e32:	std    
  525e33:	pop    ebx
  525e34:	mov    ah,0x66
  525e36:	mov    BYTE PTR [ebx+edx*2+0x4406cd75],bl
  525e3d:	sbb    ah,BYTE PTR [edi+ecx*1-0x5d797d23]
  525e44:	jbe    0x525e9b
  525e46:	pop    ebp
  525e47:	clc    
  525e48:	inc    esi
  525e49:	gs loopne 0x525ebb
  525e4c:	in     al,0x53
  525e4e:	out    dx,al
  525e4f:	add    edx,ebx
  525e51:	fisttp WORD PTR [eax+edx*1]
  525e54:	xor    al,0x3f
  525e56:	pop    ecx
  525e57:	les    ecx,FWORD PTR [eax]
  525e59:	mov    edi,0xa9997697
  525e5e:	nop
  525e5f:	dec    esi
  525e60:	mov    esi,0x656823cd
  525e65:	rol    BYTE PTR [edx+edi*1-0x67afdbf8],cl
  525e6c:	cwde   
  525e6d:	ja     0x525e1d
  525e6f:	jns    0x525e00
  525e71:	or     eax,0x2a0062d5
  525e76:	shl    ebx,cl
  525e78:	int    0xb8
  525e7a:	add    BYTE PTR [edi+0x1ab074d5],bl
  525e80:	mov    BYTE PTR [esi+0x6],bh
  525e83:	cmp    eax,0xc59fb172
  525e88:	mov    dh,0x7e
  525e8a:	push   esi
  525e8b:	pop    eax
  525e8c:	cmp    DWORD PTR [ebp-0x40a1e7fd],0xffffff94
  525e93:	imul   edx,edi,0x58
  525e96:	cdq    
  525e97:	test   al,0xa4
  525e99:	gs push esi
  525e9b:	sti    
  525e9c:	xchg   esi,eax
  525e9d:	pop    ds
  525e9e:	popa   
  525e9f:	cmp    al,0x68
  525ea1:	nop
  525ea2:	xchg   edx,eax
  525ea3:	or     esi,DWORD PTR [ecx+0x5c]
  525ea6:	pushf  
  525ea7:	stc    
  525ea8:	loopne 0x525e5b
  525eaa:	rcl    DWORD PTR [ebp-0xccfa092],cl
  525eb0:	sbb    al,bl
  525eb2:	loope  0x525e53
  525eb4:	dec    eax
  525eb5:	out    dx,eax
  525eb6:	mov    bh,0xe9
  525eb8:	and    bh,BYTE PTR [edi+0x2c89b289]
  525ebe:	mov    ds:0xd8d7e1a0,al
  525ec3:	cmp    BYTE PTR [ecx],ch
  525ec5:	loopne 0x525f20
  525ec7:	jb     0x525eb1
  525ec9:	mov    ds:0x75f1147c,al
  525ece:	dec    ebp
  525ecf:	jb     0x525f40
  525ed1:	xchg   edi,eax
  525ed2:	push   esp
  525ed3:	cmp    eax,0xc3668511
  525ed8:	popf   
  525ed9:	bound  ebp,QWORD PTR [edx+edi*4-0x42]
  525edd:	pushf  
  525ede:	pop    ds
  525edf:	adc    al,0x5b
  525ee1:	sbb    BYTE PTR [eax-0x19],ah
  525ee4:	xor    esp,DWORD PTR [esp+edi*1+0x113cc37c]
  525eeb:	jg     0x525ec2
  525eed:	lds    ecx,FWORD PTR [ecx+0x49]
  525ef0:	cli    
  525ef1:	adc    al,0x34
  525ef3:	dec    ebp
  525ef4:	(bad)
  525ef9:	inc    edi
  525efa:	adc    al,0xf3
  525efc:	into   
  525efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525efe:	cmp    BYTE PTR [esi+0x77fbd32c],bl
  525f04:	sbb    ebp,DWORD PTR [edx+0x2f84292f]
  525f0a:	mov    ah,0x86
  525f0c:	sbb    ecx,DWORD PTR [ecx+0x40]
  525f0f:	test   al,0xc8
  525f11:	jbe    0x525ed7
  525f13:	sahf   
  525f14:	(bad)  [ecx-0x62]
  525f17:	jns    0x525f93
  525f19:	stos   BYTE PTR es:[edi],al
  525f1a:	xlat   BYTE PTR ds:[ebx]
  525f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525f1c:	lds    ebx,FWORD PTR [ebp+0x19]
  525f1f:	cwde   
  525f20:	jae    0x525f18
  525f22:	and    eax,0xd8c81932
  525f27:	cmp    BYTE PTR [ebx+0x51ac74e4],dl
  525f2d:	std    
  525f2e:	and    BYTE PTR [eax-0x76],al
  525f31:	test   DWORD PTR [esi+0x2e],ebp
  525f34:	sbb    DWORD PTR [ebp-0x63],edi
  525f37:	dec    BYTE PTR [ebx]
  525f39:	cmp    al,0x62
  525f3b:	daa    
  525f3c:	and    eax,0xf9e0cf4e
  525f41:	lea    eax,[ebp+0x67759d3b]
  525f47:	retf   
  525f48:	cmp    cl,dl
  525f4a:	mov    es,WORD PTR [eax-0x34]
  525f4d:	mov    edx,0xfcf894e9
  525f52:	repz leave 
  525f54:	ffreep st(3)
  525f56:	fldenv [ebp-0x48b8868]
  525f5c:	pusha  
  525f5d:	retf   
  525f5e:	xor    DWORD PTR [ebx+0x56],0x578847a
  525f65:	stos   DWORD PTR es:[edi],eax
  525f66:	or     edi,DWORD PTR [esi+0x6e]
  525f69:	into   
  525f6a:	adc    DWORD PTR [edi-0x21],ebx
  525f6d:	icebp  
  525f6e:	inc    eax
  525f6f:	stc    
  525f70:	sbb    eax,0x9de9b9c7
  525f75:	mov    ebp,0x46b163cc
  525f7a:	sub    BYTE PTR [edx-0x2c43d2e2],dh
  525f80:	daa    
  525f81:	add    al,0x0
  525f83:	ret    0x25f4
  525f86:	xchg   esi,eax
  525f87:	inc    edx
  525f88:	clc    
  525f89:	dec    eax
  525f8a:	pop    edx
  525f8b:	jl     0x525fc4
  525f8d:	or     DWORD PTR [edi-0x58],ebp
  525f90:	cmp    al,0x2f
  525f92:	or     al,0xef
  525f94:	test   al,0x64
  525f96:	jnp    0x525f64
  525f98:	loopne 0x526015
  525f9a:	test   ah,bl
  525f9c:	and    DWORD PTR [ecx+0x21],ebx
  525f9f:	das    
  525fa0:	mov    ecx,0xf21a7936
  525fa5:	popa   
  525fa6:	fnstsw WORD PTR [edi-0x6c7a44a0]
  525fac:	call   ecx
  525fae:	(bad)  
  525faf:	jp     0x525fc8
  525fb1:	jle    0x526018
  525fb3:	popf   
  525fb4:	fwait
  525fb5:	dec    edx
  525fb6:	jge    0x525f56
  525fb8:	push   edx
  525fb9:	xchg   esp,eax
  525fba:	adc    dh,BYTE PTR ss:0x44265c73
  525fc1:	std    
  525fc2:	(bad)  
  525fc3:	stc    
  525fc4:	jle    0x525f60
  525fc6:	inc    eax
  525fc7:	in     eax,dx
  525fc8:	ins    BYTE PTR es:[edi],dx
  525fc9:	jmp    0x2b83afad
  525fce:	cmp    ebp,DWORD PTR [ecx+0x6ab58d81]
  525fd4:	int    0x4c
  525fd6:	xor    ecx,DWORD PTR [eax+0x3f]
  525fd9:	and    DWORD PTR [ebx+0x1d],esi
  525fdc:	std    
  525fdd:	shl    DWORD PTR [edx],0xcf
  525fe0:	inc    ebx
  525fe1:	xor    eax,0x8ed8ae5c
  525fe6:	cs dec ebp
  525fe8:	mov    bl,0x59
  525fea:	dec    ebp
  525feb:	(bad)  
  525fec:	ss leave 
  525fee:	or     al,0xad
  525ff0:	inc    esp
  525ff1:	mov    DWORD PTR [eax],edi
  525ff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  525ff4:	fild   QWORD PTR [esi-0x35]
  525ff7:	mov    bh,0xfa
  525ff9:	mul    edx
  525ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  525ffc:	or     BYTE PTR [esi],0x89
  525fff:	cmc    
  526000:	(bad)  
  526001:	pop    ds
  526002:	psubb  mm1,QWORD PTR [eax-0x30]
  526006:	mov    eax,ds:0xee2a54ec
  52600b:	repz push esi
  52600d:	icebp  
  52600e:	nop
  52600f:	ds jl  0x525fec
  526012:	fsubr  DWORD PTR [ebx+edi*8+0xa5e229b]
  526019:	jp     0x525fc8
  52601b:	mov    ds:0x70c6bec7,al
  526020:	outs   dx,DWORD PTR ds:[esi]
  526021:	xchg   edx,eax
  526022:	inc    edx
  526023:	push   edx
  526024:	or     al,ch
  526026:	add    eax,0x19b9daff
  52602b:	mov    ss,esi
  52602d:	outs   dx,DWORD PTR ds:[esi]
  52602e:	pop    ss
  52602f:	outs   dx,DWORD PTR ds:[esi]
  526030:	adc    BYTE PTR [edi],ah
  526032:	nop
  526033:	mov    ?,WORD PTR [ebp-0x34]
  526036:	jmp    DWORD PTR [edi]
  526038:	lods   al,BYTE PTR ds:[esi]
  526039:	lock dec esi
  52603b:	fcom   QWORD PTR [ebp+0x10]
  52603e:	sbb    ecx,ebp
  526040:	les    eax,FWORD PTR [edx+0x51]
  526043:	fs stos BYTE PTR es:[edi],al
  526045:	jo     0x526008
  526047:	sbb    al,BYTE PTR [ecx]
  526049:	mov    dh,0xad
  52604b:	push   ds
  52604c:	cmp    ah,bh
  52604e:	ja     0x525fea
  526050:	push   ss
  526051:	adc    esi,DWORD PTR [ebp-0x1b]
  526054:	push   ebp
  526055:	pusha  
  526056:	sub    BYTE PTR [eax+eiz*4-0x4c],al
  52605a:	nop
  52605b:	imul   edi,DWORD PTR [ebx+0x46],0x34
  52605f:	repz inc ebp
  526061:	sti    
  526062:	je     0x5260aa
  526064:	mov    dh,0x0
  526066:	hlt    
  526067:	sahf   
  526068:	(bad)  
  526069:	mov    edi,0x9f6d4ea5
  52606e:	mov    ds:0xdcca1467,al
  526073:	cmc    
  526074:	in     al,dx
  526075:	cs cmp al,0x7c
  526078:	sbb    BYTE PTR [esp+eax*8-0x20],al
  52607c:	or     dh,cl
  52607e:	call   0xba9c83d
  526083:	cld    
  526084:	jge    0x5260ef
  526086:	out    dx,eax
  526087:	outs   dx,BYTE PTR ds:[esi]
  526088:	popa   
  526089:	and    DWORD PTR [ecx-0x37],0xffbebf53
  526090:	mov    al,ds:0xe4caf280
  526095:	xor    al,BYTE PTR [eax-0x2a]
  526098:	push   esi
  526099:	les    eax,FWORD PTR [ebp+0x3a0e2f0f]
  52609f:	mov    ch,0xc3
  5260a1:	mov    al,ds:0xa03defc4
  5260a6:	popf   
  5260a7:	or     eax,0x19f450c
  5260ac:	mov    cl,0x95
  5260ae:	mul    ebp
  5260b0:	push   0x405e595b
  5260b5:	rol    BYTE PTR [edi-0x28],cl
  5260b8:	jl     0x52610b
  5260ba:	sbb    esp,DWORD PTR [edi+0x6b4af60d]
  5260c0:	test   DWORD PTR [ecx+eax*2-0x8],edx
  5260c4:	jae    0x52607a
  5260c6:	aad    0x8c
  5260c8:	mov    dh,0x43
  5260ca:	xor    eax,0xcd5102f
  5260cf:	mov    bl,0x18
  5260d1:	adc    esi,DWORD PTR [edi-0x3e]
  5260d4:	add    bh,BYTE PTR [ebx-0xa]
  5260d7:	mov    al,0xd0
  5260d9:	out    dx,al
  5260da:	pop    es
  5260db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5260dc:	outs   dx,BYTE PTR ds:[esi]
  5260dd:	cs inc edi
  5260df:	push   es
  5260e0:	lahf   
  5260e1:	sbb    bh,dh
  5260e3:	ja     0x5260d6
  5260e5:	popf   
  5260e6:	sbb    eax,0xb209aed9
  5260eb:	mov    cl,0xff
  5260ed:	cmp    eax,0xa6918ea7
  5260f2:	ds pop ecx
  5260f4:	cmp    DWORD PTR [ecx+ebx*1+0x8a2d163],ebx
  5260fb:	cmp    al,0xb9
  5260fd:	mov    ds:0x81440d43,eax
  526102:	push   ecx
  526104:	pop    DWORD PTR [esi-0x7d]
  526107:	cdq    
  526108:	add    dh,bh
  52610a:	test   al,0x79
  52610c:	loopne 0x526115
  52610e:	loope  0x526120
  526110:	xchg   ebp,eax
  526111:	sub    BYTE PTR [edx],dl
  526113:	or     ebx,ecx
  526115:	mov    bh,ah
  526117:	dec    ebp
  526118:	stos   BYTE PTR es:[edi],al
  526119:	popf   
  52611a:	or     al,0xd7
  52611c:	push   ds
  52611d:	fild   QWORD PTR [ebx]
  52611f:	retf   
  526120:	jle    0x52611c
  526122:	inc    eax
  526123:	dec    ebp
  526124:	dec    esi
  526125:	neg    ebx
  526127:	and    edx,DWORD PTR [esi+0x70]
  52612a:	retf   0x2072
  52612d:	enterw 0x491e,0x85
  526132:	in     eax,dx
  526133:	sub    ecx,DWORD PTR [eax+0x28a17e14]
  526139:	sub    DWORD PTR [edi],esi
  52613b:	(bad)  
  52613c:	pop    edx
  52613d:	or     ebp,esi
  52613f:	jmp    0x4421:0xa5b9d5fe
  526146:	loop   0x52616d
  526148:	pxor   mm3,mm7
  52614b:	loope  0x526129
  52614d:	rcl    BYTE PTR [ebp+0xbe67934],cl
  526153:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526154:	shl    BYTE PTR [eax],1
  526156:	dec    esi
  526157:	lods   eax,DWORD PTR ds:[esi]
  526158:	cld    
  526159:	mov    DWORD PTR [ecx],esi
  52615b:	add    al,0xf0
  52615d:	(bad)  
  52615e:	cmp    edx,DWORD PTR [edi]
  526160:	add    DWORD PTR ds:0xeeaf9b4e,ebx
  526166:	sub    al,0x3f
  526168:	add    esi,DWORD PTR [eax-0x71]
  52616b:	adc    al,BYTE PTR [edx-0x2dcd232]
  526171:	adc    edi,DWORD PTR [edi+0x1234a3f0]
  526177:	scas   eax,DWORD PTR es:[edi]
  526178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  526179:	dec    BYTE PTR [edi]
  52617b:	xchg   ebp,eax
  52617c:	adc    eax,0xa6a7e45
  526181:	push   es
  526182:	inc    ebx
  526183:	xor    DWORD PTR [ebx-0x73],ecx
  526186:	mov    ecx,0x537ae047
  52618b:	jnp    0x5261f1
  52618d:	pop    esi
  52618e:	test   eax,0x1f93f1e3
  526193:	in     al,0x75
  526195:	xchg   BYTE PTR [edx],dh
  526197:	pop    ds
  526198:	repz add BYTE PTR [ebp-0x12],bh
  52619c:	jno    0x52613d
  52619e:	enter  0xf003,0x39
  5261a2:	repnz sub DWORD PTR [ecx+0x7f],edx
  5261a6:	push   ss
  5261a7:	jge    0x52616c
  5261a9:	ds push 0xffffff90
  5261ac:	test   dl,cl
  5261ae:	(bad)  
  5261af:	cwde   
  5261b0:	ret    
  5261b1:	(bad)  
  5261b2:	xchg   esp,eax
  5261b3:	fwait
  5261b4:	cmp    edi,DWORD PTR [edi-0x26]
  5261b7:	es dec ecx
  5261b9:	pop    ds
  5261ba:	push   0x2d
  5261bc:	xor    BYTE PTR [ebp-0x14],dh
  5261bf:	scas   al,BYTE PTR es:[edi]
  5261c0:	hlt    
  5261c1:	fwait
  5261c2:	out    dx,eax
  5261c3:	cdq    
  5261c4:	adc    al,0xc6
  5261c6:	fsub   QWORD PTR [ecx-0x42ee008d]
  5261cc:	test   BYTE PTR [edx],cl
  5261ce:	fstp   QWORD PTR [ebx]
  5261d0:	or     al,0x98
  5261d2:	retf   0x9dc7
  5261d5:	lods   al,BYTE PTR ds:[esi]
  5261d6:	icebp  
  5261d7:	add    edi,DWORD PTR [ebx]
  5261d9:	lods   eax,DWORD PTR ds:[esi]
  5261da:	push   ds
  5261db:	rcr    DWORD PTR [ebx-0xf],cl
  5261de:	leave  
  5261df:	sbb    edi,DWORD PTR [edi]
  5261e1:	inc    DWORD PTR [edx+0x4e2e2bdf]
  5261e7:	inc    eax
  5261e8:	rcl    DWORD PTR [ecx],0x14
  5261eb:	mov    ds,WORD PTR [esi-0x4b]
  5261ee:	and    DWORD PTR [ecx+eiz*8-0x1],esp
  5261f2:	mov    edi,0xb92b947d
  5261f7:	mov    edi,0x74cf23be
  5261fc:	fst    DWORD PTR [esi+0xa]
  5261ff:	xor    BYTE PTR [ecx+0x16c9d2a3],0x36
  526206:	in     al,dx
  526207:	loope  0x5261c5
  526209:	fcomp  QWORD PTR [esi+0x1683bd24]
  52620f:	dec    esi
  526210:	push   ds
  526211:	repnz ficom DWORD PTR [ebx-0x2061ab4]
  526218:	xor    DWORD PTR [ecx-0x22432567],ebx
  52621e:	push   es
  52621f:	inc    ecx
  526220:	jno    0x526226
  526222:	xor    edi,DWORD PTR ds:0xbddf135
  526228:	push   esp
  526229:	out    dx,eax
  52622a:	in     eax,dx
  52622b:	push   edi
  52622c:	fst    DWORD PTR [ebx-0x4c4e9004]
  526232:	dec    ecx
  526233:	xor    eax,0x4eb885c6
  526238:	push   ss
  526239:	clc    
  52623a:	mov    ah,0x73
  52623c:	inc    esp
  52623d:	or     eax,0x7e80cf37
  526242:	ds cmp eax,0x50861ac6
  526248:	retf   
  526249:	sub    ebx,esi
  52624b:	xor    eax,0x7c086368
  526250:	leave  
  526251:	ins    DWORD PTR es:[edi],dx
  526252:	ror    edx,0x82
  526255:	pop    ebp
  526256:	jecxz  0x5262a9
  526258:	out    0x2b,eax
  52625a:	inc    edx
  52625b:	addr16 aaa 
  52625d:	xor    ebx,esi
  52625f:	lds    eax,FWORD PTR [edx+0x23]
  526262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526263:	loope  0x5262bd
  526265:	jns    0x5261f6
  526267:	(bad)
  52626a:	(bad)  
  52626c:	iret   
  52626d:	dec    DWORD PTR [ecx-0x1f]
  526270:	(bad)  [ebp-0x54290e58]
  526276:	mov    DWORD PTR [esi],edi
  526278:	stc    
  526279:	retf   0x1fbb
  52627c:	ja     0x526282
  52627e:	xor    dl,BYTE PTR [ebx+eiz*2]
  526281:	in     eax,0x67
  526283:	and    BYTE PTR [ebx-0x22],ch
  526286:	inc    ecx
  526287:	(bad)  
  526288:	fidiv  DWORD PTR [ebx]
  52628a:	sbb    dh,bh
  52628c:	pop    ebx
  52628d:	cwde   
  52628e:	(bad)  
  52628f:	cmp    BYTE PTR [eax-0x25],al
  526292:	sbb    DWORD PTR [eax],eax
  526294:	mov    edx,0x59b6aaf9
  526299:	cmp    al,0x3a
  52629b:	cli    
  52629c:	fidiv  DWORD PTR ds:0x9a45fa49
  5262a2:	xor    DWORD PTR [ebp+0x10],esp
  5262a5:	stc    
  5262a6:	pop    ebp
  5262a7:	dec    edx
  5262a8:	pop    edi
  5262a9:	mov    edx,DWORD PTR [ebx+0x4a0298c5]
  5262af:	in     eax,0xab
  5262b1:	pop    ebp
  5262b2:	sar    BYTE PTR [esi+eiz*1+0x4dbe2632],cl
  5262b9:	cmp    DWORD PTR [esi],esp
  5262bb:	xor    al,0x20
  5262bd:	mov    ebx,0x86ad5eca
  5262c2:	xchg   dh,dl
  5262c4:	stos   DWORD PTR es:[edi],eax
  5262c5:	popf   
  5262c6:	mov    al,ds:0x7e844d3a
  5262cb:	cwde   
  5262cc:	sub    esp,edx
  5262ce:	cmp    al,0x74
  5262d0:	lock pop ebx
  5262d2:	pop    eax
  5262d3:	inc    ebp
  5262d4:	inc    eax
  5262d5:	test   eax,0x33c078ce
  5262da:	mov    DWORD PTR [edx],esi
  5262dc:	mov    DWORD PTR [ebp+0x34],edi
  5262df:	test   ah,bl
  5262e1:	aad    0x93
  5262e3:	addr16 out dx,al
  5262e5:	cmp    edx,ebp
  5262e7:	dec    ecx
  5262e8:	cmp    al,0xf0
  5262ea:	cdq    
  5262eb:	pop    ebx
  5262ec:	test   eax,0xc313808e
  5262f1:	bnd ss jo 0x52631a
  5262f5:	ins    DWORD PTR es:[edi],dx
  5262f6:	inc    ecx
  5262f7:	xor    dh,0x96
  5262fa:	bound  ecx,QWORD PTR [edx+0x2f]
  5262fd:	mov    cl,BYTE PTR [edx]
  5262ff:	sub    DWORD PTR [edi-0x2ef9fa9a],esp
  526305:	or     bl,BYTE PTR ss:[ebx-0x1f]
  526309:	aas    
  52630a:	xchg   ecx,eax
  52630b:	jae    0x52631a
  52630d:	sub    ecx,DWORD PTR [edi]
  52630f:	mov    ah,0x3c
  526311:	xor    al,0xfa
  526313:	cmp    DWORD PTR [eax+ebx*8+0x1fe10908],eax
  52631a:	hlt    
  52631b:	xlat   BYTE PTR ds:[ebx]
  52631c:	pop    ebx
  52631d:	rcr    DWORD PTR [ecx+0x5ba11cb0],1
  526323:	ret    0x41c2
  526326:	fwait
  526327:	mov    ecx,0x6885442c
  52632c:	bswap  edx
  52632e:	pushf  
  52632f:	inc    ecx
  526330:	aas    
  526331:	mov    ?,ebp
  526333:	jge    0x5262e5
  526335:	ror    DWORD PTR [esi+0x2c],1
  526338:	sub    eax,0xa652612f
  52633d:	retf   0x624f
  526340:	pop    edi
  526341:	xor    BYTE PTR [edi-0x480f470f],ah
  526347:	push   ecx
  526348:	xor    BYTE PTR [esi],bl
  52634a:	push   esi
  52634b:	jno    0x526392
  52634d:	fmul   st(4),st
  52634f:	data16 cld 
  526351:	in     eax,0xed
  526353:	mov    esp,DWORD PTR [ebp-0x69ea03b4]
  526359:	ret    
  52635a:	ja     0x526326
  52635c:	pop    esi
  52635d:	(bad)  
  52635e:	pop    ss
  52635f:	ins    BYTE PTR es:[edi],dx
  526360:	jno    0x526386
  526362:	ss cli 
  526364:	and    BYTE PTR [ecx+0x2eef209a],bl
  52636a:	mov    bh,0x97
  52636c:	xchg   edi,eax
  52636d:	xchg   edi,eax
  52636e:	push   ss
  52636f:	sbb    DWORD PTR [edx],esp
  526371:	jmp    0x27dbbb11
  526376:	mov    ds:0x9f8a528b,eax
  52637b:	jl     0x526380
  52637d:	es jnp 0x5263bc
  526380:	bound  eax,QWORD PTR [ebp+0x2b3cf1de]
  526386:	dec    edi
  526387:	jl     0x52633c
  526389:	iret   
  52638a:	retf   0x5b48
  52638d:	add    dh,ah
  52638f:	mov    dh,0x7b
  526391:	(bad)
  526394:	and    dh,BYTE PTR [ebx]
  526396:	jle    0x52639d
  526398:	or     DWORD PTR [eax],ebx
  52639a:	mov    ebx,0x709bec64
  52639f:	sbb    ah,BYTE PTR [esi-0x5b]
  5263a2:	mov    dl,0xe6
  5263a4:	mov    al,ds:0x48b59fa9
  5263a9:	mov    BYTE PTR [edi],bl
  5263ab:	pop    ecx
  5263ac:	lods   eax,DWORD PTR ds:[esi]
  5263ad:	add    eax,0xa624e496
  5263b2:	repz call FWORD PTR [esp+eax*2]
  5263b6:	mov    BYTE PTR [ebx-0x26edd74e],bl
  5263bc:	nop
  5263bd:	fwait
  5263be:	mul    BYTE PTR [ebx]
  5263c0:	xor    al,BYTE PTR [ebx]
  5263c2:	sub    al,0x75
  5263c4:	inc    edx
  5263c5:	cwde   
  5263c6:	stc    
  5263c7:	outs   dx,BYTE PTR ds:[esi]
  5263c8:	fisubr DWORD PTR [eax+0x5c]
  5263cb:	cmp    DWORD PTR [edi],esi
  5263cd:	fld    QWORD PTR [edi-0x62]
  5263d0:	imul   ebp,DWORD PTR [esi-0x35c2e6de],0xcbb2f96
  5263da:	jae    0x526361
  5263dc:	icebp  
  5263dd:	dec    edx
  5263de:	retf   0x5eb1
  5263e1:	mov    esi,0x1d2a8ffa
  5263e6:	fmul   DWORD PTR [eax]
  5263e8:	push   es
  5263e9:	call   0x7ec630f7
  5263ee:	adc    bh,BYTE PTR [edi]
  5263f0:	fadd   st,st(4)
  5263f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  5263f3:	cmp    eax,0x71820414
  5263f8:	ret    
  5263f9:	dec    ebx
  5263fa:	pop    esp
  5263fb:	call   0xe4f3:0xf48ecf54
  526402:	inc    esi
  526403:	jmp    0x517e:0xd32c62f
  52640a:	push   0xffffffd0
  52640c:	(bad)  
  52640d:	aas    
  52640e:	dec    eax
  52640f:	ja     0x5263fb
  526411:	test   DWORD PTR fs:[esp+eiz*2+0x2e8683bf],ebp
  526419:	dec    ebx
  52641a:	xor    al,0xcd
  52641c:	rcr    BYTE PTR [ecx+0x35],cl
  52641f:	cs xor al,0xa3
  526422:	pop    es
  526423:	or     BYTE PTR [edx+0x304c607c],ch
  526429:	or     ch,BYTE PTR [ecx]
  52642b:	test   al,0x81
  52642d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52642e:	and    eax,0xb6f50ab9
  526433:	jnp    0x526402
  526435:	hlt    
  526436:	daa    
  526437:	pop    eax
  526438:	or     bh,dl
  52643a:	pop    eax
  52643b:	jns    0x5264a3
  52643d:	in     al,0x87
  52643f:	jl     0x5263c5
  526441:	(bad)  
  526442:	(bad)  
  526443:	pop    edi
  526444:	ins    DWORD PTR es:[edi],dx
  526445:	sti    
  526446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526447:	ror    DWORD PTR ds:0xd5c0652a,0xdb
  52644e:	adc    al,0x5d
  526450:	pop    esp
  526451:	push   esp
  526452:	jmp    0x5264b3
  526454:	dec    esp
  526455:	push   ds
  526456:	sub    ecx,0xffffffd3
  526459:	mov    ds:0x729500f5,al
  52645e:	in     eax,dx
  52645f:	sub    DWORD PTR [edx+0x6c],ebx
  526462:	add    eax,0x81584dff
  526467:	sub    eax,DWORD PTR [ebx-0x1a41c9aa]
  52646d:	pop    es
  52646e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  52646f:	or     esi,DWORD PTR [ebx+eax*4+0x4c]
  526473:	shl    esp,1
  526475:	ins    DWORD PTR es:[edi],dx
  526476:	push   0xffffffa8
  526478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526479:	mov    al,0xb1
  52647b:	outs   dx,BYTE PTR ds:[esi]
  52647c:	xchg   edx,eax
  52647d:	mov    ecx,0x6fd58c75
  526482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  526483:	jl     0x52646f
  526485:	out    dx,al
  526486:	rcl    BYTE PTR [ecx+0x66],1
  526489:	out    dx,al
  52648a:	mov    ds:0xe8aa106f,al
  52648f:	lahf   
  526490:	pop    ds
  526491:	setle  BYTE PTR [ebx]
  526494:	dec    edx
  526495:	push   0x7fd0c6cd
  52649a:	outs   dx,DWORD PTR ds:[esi]
  52649b:	mov    ch,0xec
  52649d:	mov    ch,0xdb
  52649f:	inc    edx
  5264a0:	dec    ecx
  5264a1:	je     0x526443
  5264a3:	dec    ecx
  5264a4:	loope  0x526493
  5264a6:	or     ebp,esp
  5264a8:	jl     0x526436
  5264aa:	pop    ss
  5264ab:	(bad)  
  5264ac:	mov    es,WORD PTR [esp+eiz*2]
  5264af:	sub    eax,0x2d6c666d
  5264b4:	test   al,0x5d
  5264b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  5264b7:	add    dl,0xc2
  5264ba:	ret    0x7441
  5264bd:	jae    0x526448
  5264bf:	dec    ebp
  5264c0:	push   ds
  5264c1:	iret   
  5264c2:	jl     0x52652d
  5264c4:	mov    ds:0xd01ea81f,eax
  5264c9:	div    BYTE PTR [ebx-0x61]
  5264cc:	dec    edx
  5264cd:	push   0xf7305cd5
  5264d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5264d3:	push   ebx
  5264d4:	xchg   ecx,eax
  5264d5:	sub    edx,DWORD PTR [ecx+eax*2+0x1e]
  5264d9:	dec    ebp
  5264da:	fild   DWORD PTR [esi+0x12]
  5264dd:	repnz xchg esp,eax
  5264df:	inc    edx
  5264e0:	int3   
  5264e1:	dec    edx
  5264e2:	(bad)  
  5264e3:	loopne 0x5264d0
  5264e5:	(bad)  
  5264e6:	retf   
  5264e7:	push   esi
  5264e8:	daa    
  5264e9:	rol    DWORD PTR [ebp+0x7a],0x10
  5264ed:	or     ebp,DWORD PTR [esi-0x1a]
  5264f0:	mov    edx,0x8441f8ec
  5264f5:	scas   eax,DWORD PTR es:[edi]
  5264f6:	lahf   
  5264f7:	adc    al,0x27
  5264f9:	push   edx
  5264fa:	fidivr WORD PTR [eax]
  5264fc:	cmp    DWORD PTR [esi+eax*2-0x4641a8eb],ebp
  526503:	(bad)  
  526504:	or     esi,DWORD PTR [esi]
  526506:	dec    edx
  526507:	and    DWORD PTR [ebx+0x24707ca8],eax
  52650d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52650e:	and    eax,0xbd03ead7
  526513:	fistp  WORD PTR [edx+edi*2-0x32ae2ef2]
  52651a:	adc    DWORD PTR [di+0x5d],ecx
  52651e:	fwait
  52651f:	mov    bh,0xef
  526521:	stc    
  526522:	fisub  WORD PTR [edx+0x619a227e]
  526528:	add    ah,BYTE PTR [ecx]
  52652a:	push   ss
  52652b:	or     ah,BYTE PTR [ecx-0x2e]
  52652e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  52652f:	movq   QWORD PTR [edi-0x136e19b1],mm0
  526536:	mov    edx,0xb68549c5
  52653b:	adc    ebp,DWORD PTR [esi-0x14]
  52653e:	cdq    
  52653f:	rcl    BYTE PTR [ebx+esi*1],0x9c
  526543:	lods   eax,DWORD PTR ds:[esi]
  526544:	inc    esp
  526545:	xor    ebp,DWORD PTR [eax-0x6fcd3750]
  52654b:	(bad)  
  52654c:	in     al,0xeb
  52654e:	mov    esp,0x3a9f8601
  526553:	leave  
  526554:	mov    eax,ds:0xf568cc4e
  526559:	xor    eax,0xaa69e365
  52655e:	(bad)
  526561:	fidiv  WORD PTR [ebx]
  526563:	add    al,0x68
  526565:	xchg   edx,eax
  526566:	or     eax,0xa6a6b543
  52656b:	out    0xf0,al
  52656d:	clc    
  52656e:	xchg   BYTE PTR [ebx+0x55],bh
  526571:	xor    BYTE PTR ds:0x6891da40,ch
  526577:	(bad)  
  526578:	jmp    0xc25ce735
  52657d:	data16 (bad) 
  52657f:	lds    ebp,FWORD PTR [ebp+0x846162b]
  526585:	(bad)  
  526586:	pusha  
  526587:	cld    
  526588:	adc    eax,0x420687e5
  52658d:	xor    esp,DWORD PTR [esi+0x1d]
  526590:	fmul   DWORD PTR [edi-0xf133732]
  526596:	hlt    
  526597:	clc    
  526598:	cmp    cl,BYTE PTR [edi+0x20019d05]
  52659e:	push   esi
  52659f:	fist   DWORD PTR [eax]
  5265a1:	pop    ebx
  5265a2:	fcom   QWORD PTR [edx+edi*1]
  5265a5:	pushf  
  5265a6:	push   es
  5265a7:	sbb    al,0xbc
  5265a9:	mov    ebp,0x612f109
  5265ae:	inc    esp
  5265af:	sub    al,0x3c
  5265b1:	loope  0x526556
  5265b3:	sbb    eax,0xdd48f16f
  5265b8:	dec    ebp
  5265b9:	pop    edx
  5265ba:	dec    eax
  5265bb:	jnp    0x52656c
  5265bd:	xlat   BYTE PTR ds:[ebx]
  5265be:	sbb    al,0x86
  5265c0:	pushf  
  5265c1:	xor    BYTE PTR [ecx-0x41611c89],0x0
  5265c8:	push   0x56ebc8ec
  5265cd:	push   esi
  5265ce:	pop    edi
  5265cf:	jmp    DWORD PTR [edx]
  5265d1:	mov    eax,ds:0x4c68b2d
  5265d6:	aaa    
  5265d7:	mov    ch,0x1
  5265d9:	(bad)  
  5265da:	cld    
  5265db:	mov    ds,WORD PTR [edi+eiz*4-0x4f]
  5265df:	or     BYTE PTR [ebp-0x1d],dh
  5265e2:	cmp    al,0xc7
  5265e4:	add    BYTE PTR [edx+0x7d],0x5d
  5265e8:	das    
  5265e9:	aam    0x22
  5265eb:	dec    esp
  5265ec:	sbb    eax,0x97f79cd3
  5265f1:	sbb    BYTE PTR [edx],dl
  5265f3:	sub    eax,0xac302eed
  5265f8:	jnp    0x5265b3
  5265fa:	cmp    eax,0x9d6ae2ae
  5265ff:	push   esp
  526600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526601:	dec    ebp
  526602:	add    bl,dh
  526604:	pop    ebx
  526605:	xchg   ecx,eax
  526606:	outs   dx,BYTE PTR ds:[esi]
  526607:	sub    eax,0x5483ad12
  52660c:	test   DWORD PTR [edi],0x1430a35
  526612:	and    esi,DWORD PTR [edi+eiz*4]
  526615:	mov    cs:0xb3738c32,eax
  52661b:	push   0x79
  52661d:	outs   dx,BYTE PTR ds:[esi]
  52661e:	leave  
  52661f:	sbb    edi,ebx
  526621:	shl    DWORD PTR [eax+0xfcef08],0x8
  526628:	push   0x3d
  52662a:	mov    esp,0x7b9c6378
  52662f:	xchg   BYTE PTR [esi+edi*1+0x4d],ah
  526633:	adc    eax,0x8dc3dc85
  526638:	xor    al,0xf7
  52663a:	test   DWORD PTR [ebp+eax*4-0x17993b6a],ebx
  526641:	dec    eax
  526642:	ss hlt 
  526644:	mov    esp,0x2cae351e
  526649:	xor    ah,BYTE PTR [edi+0x4b]
  52664c:	div    BYTE PTR [edi+0x1e621412]
  526652:	inc    ebx
  526653:	sbb    al,0xe
  526655:	sbb    bh,bh
  526657:	jmp    DWORD PTR [ebx-0x5]
  52665a:	mov    bh,0xf6
  52665c:	loopne 0x5266b0
  52665e:	add    ecx,DWORD PTR [esi]
  526660:	cld    
  526661:	jge    0x52660b
  526663:	std    
  526664:	addr16 push ebx
  526666:	add    edx,DWORD PTR [edi-0x3abced34]
  52666c:	xchg   BYTE PTR [edx-0x146fb4d6],bh
  526672:	xor    DWORD PTR [edx+0x6d],ecx
  526675:	test   al,0x87
  526677:	les    edx,FWORD PTR [ecx]
  526679:	xchg   edi,eax
  52667a:	pop    ecx
  52667b:	add    eax,0x33ffb207
  526680:	xchg   ecx,eax
  526681:	pop    ds
  526682:	jge    0x526647
  526684:	jg     0x5266e7
  526686:	int3   
  526687:	xor    al,BYTE PTR [edx+0x2c44a538]
  52668d:	pop    esp
  52668e:	scas   eax,DWORD PTR es:[edi]
  52668f:	xor    ch,BYTE PTR [esi-0x2c]
  526692:	cmp    bl,bl
  526694:	mov    eax,0x88ad688f
  526699:	sbb    esp,DWORD PTR [ebp+0x649168a4]
  52669f:	(bad)  
  5266a0:	jl     0x526671
  5266a2:	ss adc dh,cl
  5266a5:	dec    eax
  5266a6:	int    0x95
  5266a8:	dec    ebx
  5266a9:	sbb    edi,DWORD PTR [ebp+0x46926cfa]
  5266af:	inc    ecx
  5266b0:	hlt    
  5266b1:	and    DWORD PTR [ecx+ecx*4],edx
  5266b4:	or     edi,DWORD PTR [edx]
  5266b6:	mov    eax,0x829c7d4a
  5266bb:	dec    edx
  5266bc:	and    BYTE PTR ss:[ebp+0xe],al
  5266c0:	stos   BYTE PTR es:[edi],al
  5266c1:	mov    esp,0x8a9b942e
  5266c6:	adc    DWORD PTR [edi-0x89d3164],ecx
  5266cc:	fstp   TBYTE PTR [esi-0x2f]
  5266cf:	mov    ecx,DWORD PTR [edx]
  5266d1:	xchg   ebx,eax
  5266d2:	adc    bh,bh
  5266d4:	les    esi,FWORD PTR [edi+0xf5dd045]
  5266da:	in     eax,dx
  5266db:	xchg   DWORD PTR [edi],esp
  5266dd:	jo     0x5266b3
  5266df:	inc    edi
  5266e0:	sub    BYTE PTR [ebp+0x32],cl
  5266e3:	scas   eax,DWORD PTR es:[edi]
  5266e4:	(bad)  
  5266e5:	mov    eax,ds:0xf57f904b
  5266ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5266eb:	int3   
  5266ec:	test   ebx,ebp
  5266ee:	inc    DWORD PTR [ecx+0x64]
  5266f1:	inc    ebx
  5266f2:	idiv   dh
  5266f4:	repnz sub edi,ebx
  5266f7:	and    ch,BYTE PTR [ebp-0x12]
  5266fa:	sub    esi,esi
  5266fc:	inc    esp
  5266fd:	adc    ecx,DWORD PTR [eax]
  5266ff:	or     ebp,eax
  526701:	ins    DWORD PTR es:[edi],dx
  526702:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  526704:	sbb    eax,0x741b1dc7
  526709:	xor    DWORD PTR [ecx+0x67d7e744],ecx
  52670f:	mov    ecx,0xf6953dd
  526714:	cmc    
  526715:	jbe    0x526755
  526717:	shl    ch,0xb1
  52671a:	out    dx,al
  52671b:	jecxz  0x5266a2
  52671d:	dec    DWORD PTR [edi+0x184f63f3]
  526723:	sub    DWORD PTR [edi+esi*2-0x76c57738],edi
  52672a:	repz dec esi
  52672c:	fsubrp st(1),st
  52672e:	mov    al,0x77
  526730:	mov    ebp,0x42d4568f
  526735:	scas   eax,DWORD PTR es:[edi]
  526736:	xchg   ebx,eax
  526737:	aad    0xf3
  526739:	mov    gs,WORD PTR [ecx+eax*4-0x56860edf]
  526740:	cli    
  526741:	ja     0x526761
  526743:	aaa    
  526744:	xor    BYTE PTR [ebx-0x3c],bh
  526747:	xchg   ecx,eax
  526748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526749:	push   0xa
  52674b:	pop    edx
  52674c:	pop    edi
  52674d:	push   cs
  52674e:	imul   esi,esi,0x189fd27e
  526754:	in     al,0xa0
  526756:	push   ss
  526757:	push   cs
  526758:	out    0x30,al
  52675a:	imul   ebp
  52675c:	cmp    al,0xf7
  52675e:	mov    bl,0xc4
  526760:	and    bh,bl
  526762:	sub    esi,edi
  526764:	ins    DWORD PTR es:[edi],dx
  526765:	unpcklps xmm4,XMMWORD PTR [ebx+0x47]
  526769:	imul   edx,DWORD PTR [ebx-0x68],0xd3736f1
  526770:	mov    ds:0xc3554809,al
  526775:	sub    al,0x91
  526777:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526778:	je     0x5267ce
  52677a:	xor    DWORD PTR [edx+0x49],ebx
  52677d:	and    al,0xa9
  52677f:	push   es
  526780:	aam    0xa6
  526782:	in     al,0xd1
  526784:	sbb    eax,0x520223a1
  526789:	hlt    
  52678a:	add    dl,BYTE PTR [eax]
  52678c:	xchg   esi,eax
  52678d:	stos   DWORD PTR es:[edi],eax
  52678e:	imul   edi,DWORD PTR [edi+0x5596d606],0x12
  526795:	and    DWORD PTR [ebx-0x70707bd6],esi
  52679b:	shr    BYTE PTR [esi-0x706c7017],1
  5267a1:	fmul   DWORD PTR [edx]
  5267a3:	fbld   TBYTE PTR [esi+0x4530e0a1]
  5267a9:	mov    esp,0xe8b6666d
  5267ae:	aam    0xe8
  5267b0:	mov    bl,0x59
  5267b2:	mov    esp,0x89d0e791
  5267b7:	mov    ecx,0x3e8924b0
  5267bc:	mov    dh,0x39
  5267be:	and    BYTE PTR ds:0x60059e72,0x8f
  5267c5:	add    BYTE PTR [eax],bl
  5267c7:	loop   0x5267f3
  5267c9:	jnp    0x526776
  5267cb:	test   eax,0xa019b989
  5267d0:	and    eax,edi
  5267d2:	int3   
  5267d3:	into   
  5267d4:	dec    ebx
  5267d5:	mov    ebx,DWORD PTR [edx+0x26]
  5267d8:	inc    ebx
  5267d9:	fnstenv [ecx-0x7f]
  5267dc:	inc    esi
  5267dd:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  5267df:	mov    cl,0x13
  5267e1:	dec    ebx
  5267e2:	ja     0x52677c
  5267e4:	xor    BYTE PTR [ecx+0x40d03a3b],bh
  5267ea:	sub    esi,DWORD PTR [ebx-0x8]
  5267ed:	mov    esp,0x1c9cb9ea
  5267f2:	inc    ebx
  5267f3:	add    al,0xa0
  5267f5:	push   ds
  5267f6:	adc    ch,BYTE PTR [ecx]
  5267f8:	add    esi,ecx
  5267fa:	in     eax,0x63
  5267fc:	test   DWORD PTR [edi],ebx
  5267fe:	push   edi
  5267ff:	fcmovu st,st(1)
  526801:	loopne 0x526870
  526803:	xor    al,BYTE PTR [edx+0x49df0a37]
  526809:	stc    
  52680a:	and    DWORD PTR [esi-0x64],ecx
  52680d:	jno    0x52683b
  52680f:	xchg   esp,eax
  526810:	ret    
  526811:	sbb    DWORD PTR [edx+edx*2],ebp
  526814:	test   BYTE PTR ds:0x79418f68,ah
  52681a:	loop   0x52681d
  52681c:	adc    ecx,DWORD PTR [esi-0x47]
  52681f:	xchg   ebp,eax
  526820:	push   es
  526821:	retf   0xc47e
  526824:	adc    edx,DWORD PTR [esi]
  526826:	and    DWORD PTR [edx+0x65],esp
  526829:	ror    BYTE PTR [edx+ecx*4-0x34ebad13],0x2a
  526831:	or     al,0x2
  526833:	mov    eax,ds:0xa539d58
  526838:	or     al,0x8e
  52683a:	lods   al,BYTE PTR ds:[esi]
  52683b:	in     al,dx
  52683c:	mov    eax,0x1409ed21
  526841:	jp     0x5268b7
  526843:	outs   dx,BYTE PTR ds:[esi]
  526844:	imul   esp,DWORD PTR [ecx],0x1b9b2660
  52684a:	add    dh,BYTE PTR [ebx+0x41451a16]
  526850:	and    eax,0xd33bb0a7
  526855:	mov    esp,DWORD PTR [edi]
  526857:	out    dx,al
  526858:	in     eax,0xce
  52685a:	scas   al,BYTE PTR es:[edi]
  52685b:	(bad)  
  52685c:	jmp    0x71d3:0x88df28ab
  526863:	adc    DWORD PTR [ecx],edi
  526865:	call   0x58d7a4ec
  52686a:	hlt    
  52686b:	test   eax,0x7429ab77
  526870:	ins    DWORD PTR es:[edi],dx
  526871:	ds xchg ebp,eax
  526873:	nop
  526874:	xchg   ebp,eax
  526875:	pop    ebx
  526876:	stc    
  526877:	xchg   edx,eax
  526878:	jmp    0x5268a6
  52687a:	stos   BYTE PTR es:[edi],al
  52687b:	stc    
  52687c:	out    dx,al
  52687d:	fs pop edx
  52687f:	neg    DWORD PTR [ecx-0x2d]
  526882:	push   ss
  526883:	std    
  526884:	sbb    bl,BYTE PTR [esi]
  526886:	dec    edx
  526887:	xor    dl,ah
  526889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  52688a:	inc    esi
  52688b:	icebp  
  52688c:	stos   DWORD PTR es:[edi],eax
  52688d:	mov    edi,0xc9bdeadb
  526892:	or     al,0x51
  526894:	test   eax,0xfaa65cdb
  526899:	in     eax,0xfd
  52689b:	dec    esi
  52689c:	mov    ebp,0x7b23575d
  5268a1:	mov    edi,0xcdf6de10
  5268a6:	push   ebp
  5268a7:	test   BYTE PTR [edx],0x2a
  5268aa:	ins    DWORD PTR es:[edi],dx
  5268ab:	daa    
  5268ac:	add    eax,0x82cb139d
  5268b1:	pop    eax
  5268b2:	je     0x526889
  5268b4:	cmp    DWORD PTR [edi+0x4a],ecx
  5268b7:	jp     0x52683e
  5268b9:	cmp    DWORD PTR [edx],esp
  5268bb:	jmp    DWORD PTR [eax-0x3960e31e]
  5268c1:	pop    esi
  5268c2:	stc    
  5268c3:	mov    al,0x97
  5268c5:	mov    esi,0x60557fb5
  5268ca:	sti    
  5268cb:	mov    dl,0x52
  5268cd:	mov    ds,WORD PTR [edx-0x116e6eec]
  5268d3:	or     ebx,DWORD PTR [edx-0x2d]
  5268d6:	xchg   edx,eax
  5268d7:	cli    
  5268d8:	(bad)  
  5268d9:	xor    dh,BYTE PTR [edi+0x40cfd4db]
  5268df:	mov    esi,0xba26f45f
  5268e4:	inc    ebx
  5268e5:	ffreep st(2)
  5268e7:	adc    DWORD PTR [edx+eiz*4],0xf62707ca
  5268ee:	mov    esi,0x45ac6b5e
  5268f3:	xor    al,0xdf
  5268f5:	arpl   WORD PTR [esi+0x528f8680],bp
  5268fb:	push   esi
  5268fc:	aad    0xeb
  5268fe:	push   ds
  5268ff:	add    al,0x75
  526901:	mov    bl,0x80
  526903:	or     esi,DWORD PTR [edx+edi*8-0x70]
  526907:	out    0x4b,eax
  526909:	mov    ch,0x42
  52690b:	and    bl,al
  52690d:	jp     0x52694f
  52690f:	push   es
  526910:	sub    DWORD PTR [esi-0x49],esp
  526913:	ret    
  526914:	mov    edx,0xc0bd42cf
  526919:	mov    edi,0x47556d87
  52691e:	jns    0x52694c
  526920:	cwde   
  526921:	push   ebx
  526922:	iret   
  526923:	mov    al,0xf9
  526925:	push   esi
  526926:	pop    ecx
  526927:	imul   esp,DWORD PTR [edi-0x22],0x8260b658
  52692e:	cmc    
  52692f:	sbb    esi,ecx
  526931:	push   esp
  526932:	adc    al,0xd0
  526934:	adc    ebx,DWORD PTR [ebx]
  526936:	adc    al,0xda
  526938:	add    al,0x98
  52693a:	push   eax
  52693b:	inc    esi
  52693c:	sbb    bl,0xab
  52693f:	and    edi,DWORD PTR [esi+0x46]
  526942:	jmp    0x151ebc97
  526947:	xor    esp,edi
  526949:	ins    DWORD PTR es:[edi],dx
  52694a:	into   
  52694b:	pushf  
  52694c:	call   0x67fa:0x65692e5c
  526953:	sub    cl,al
  526955:	push   esp
  526956:	sub    DWORD PTR [bx-0x29],ebp
  52695a:	lea    edi,[ebp-0x2cec3373]
  526960:	xor    BYTE PTR [edx-0x78],dh
  526963:	or     DWORD PTR [ebp+0x10],ebp
  526966:	popf   
  526967:	mov    eax,ds:0xe8aca9d9
  52696c:	and    DWORD PTR ds:0xd1806325,ecx
  526972:	dec    eax
  526973:	lds    esi,FWORD PTR ds:0x3e947076
  526979:	gs out 0x35,eax
  52697c:	xlat   BYTE PTR ds:[ebx]
  52697d:	imul   edi,DWORD PTR [ecx+edi*4-0x52f4c4ef],0xa5a11736
  526988:	dec    edi
  526989:	adc    eax,0x299488ca
  52698e:	sbb    al,0xd4
  526990:	push   ds
  526991:	out    0x9a,al
  526993:	lods   al,BYTE PTR ds:[esi]
  526994:	test   al,0x57
  526996:	bound  ebx,QWORD PTR [ebp-0x3487eab5]
  52699c:	(bad)  
  52699d:	jp     0x5269a5
  52699f:	jne    0x52694f
  5269a1:	cdq    
  5269a2:	or     BYTE PTR [esi],bl
  5269a4:	jecxz  0x5269ac
  5269a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  5269a7:	test   DWORD PTR [ecx+0x76cd2a3],esp
  5269ad:	(bad)  fs:[esi+0x7e4ab1bc]
  5269b4:	jecxz  0x526a0d
  5269b6:	sbb    BYTE PTR [edx],0xc4
  5269b9:	push   ds
  5269ba:	xor    DWORD PTR [esi-0xdfdd09b],edx
  5269c0:	adc    ah,ah
  5269c2:	or     BYTE PTR [esp+eiz*4],dh
  5269c5:	gs ds mov bl,0x3
  5269c9:	addr16 mov al,0x1c
  5269cc:	fbld   TBYTE PTR [edx+0x5ac07cca]
  5269d2:	cwde   
  5269d3:	push   0xf14c19d3
  5269d8:	jmp    0x4d34ccfd
  5269dd:	sub    DWORD PTR [esi],ebp
  5269df:	adc    al,0x18
  5269e1:	or     ah,BYTE PTR [edi]
  5269e3:	mov    bh,0x2b
  5269e5:	cmp    DWORD PTR [esp+ecx*1-0xf],ebx
  5269e9:	mov    eax,0xf106dcd9
  5269ee:	xchg   edx,eax
  5269ef:	jbe    0x5269b3
  5269f1:	adc    al,0x9b
  5269f3:	fistp  WORD PTR [esi]
  5269f5:	inc    edi
  5269f6:	or     cl,BYTE PTR [ebx+ebp*1+0xb]
  5269fa:	leave  
  5269fb:	popf   
  5269fc:	bound  edx,QWORD PTR [edi+0x1ebd4789]
  526a02:	push   cs
  526a03:	or     esp,eax
  526a05:	lea    eax,[edi+edi*1+0x31ee8281]
  526a0c:	test   ecx,eax
  526a0e:	mov    ebx,0x4604f92b
  526a13:	mov    ebp,0x78c280d0
  526a18:	jo     0x526a78
  526a1a:	push   esi
  526a1b:	add    DWORD PTR ss:[bx+0x48],esp
  526a20:	or     DWORD PTR [ecx],ebp
  526a22:	fdivr  DWORD PTR [edx+0x19880201]
  526a28:	xchg   edi,eax
  526a29:	stc    
  526a2a:	ins    DWORD PTR es:[edi],dx
  526a2b:	jnp    0x526a85
  526a2d:	js     0x526a66
  526a2f:	mov    ebp,DWORD PTR [ecx+ebp*4-0x3]
  526a33:	ins    DWORD PTR es:[edi],dx
  526a34:	inc    edi
  526a35:	lea    ebp,[ecx]
  526a37:	call   0xf951:0x718904d
  526a3e:	mov    dl,0x98
  526a40:	enter  0xcfea,0xa
  526a44:	rol    BYTE PTR [edi-0x16],1
  526a47:	adc    ch,ch
  526a49:	adc    BYTE PTR [ebx-0x10],0x37
  526a4d:	ret    
  526a4e:	jbe    0x526aac
  526a50:	lock in al,dx
  526a52:	idiv   DWORD PTR [eax+0x278a90ce]
  526a58:	pop    ds
  526a59:	mov    DWORD PTR [ebx-0x36da80ed],ebp
  526a5f:	(bad)  [edx+0x2c70d99a]
  526a65:	stos   BYTE PTR es:[edi],al
  526a66:	jne    0x526ad6
  526a68:	or     eax,0x1bd24413
  526a6d:	pop    ecx
  526a6e:	xor    DWORD PTR [ecx-0xb],ebp
  526a71:	div    BYTE PTR ds:0xed97ddbf
  526a77:	lock push esi
  526a79:	call   0xfdfbde7a
  526a7e:	push   edx
  526a7f:	jb     0x526ae6
  526a81:	ss int 0xd7
  526a84:	push   ebx
  526a85:	xor    esi,ebx
  526a87:	add    eax,eax
  526a89:	neg    edi
  526a8b:	lahf   
  526a8c:	lahf   
  526a8d:	inc    ebp
  526a8e:	inc    esi
  526a8f:	frstor [esi+edi*8+0x24d636c8]
  526a96:	jae    0x526a8e
  526a98:	(bad)
  526a9c:	shl    BYTE PTR [eax-0x6d53f0de],1
  526aa2:	pop    es
  526aa3:	mov    dl,0x54
  526aa5:	jg     0x526ad5
  526aa7:	dec    eax
  526aa8:	sbb    ch,BYTE PTR [edi+0x4f6b6f21]
  526aae:	add    eax,0x1bcabd37
  526ab3:	xor    ebp,edx
  526ab5:	imul   esi,esp,0x3f155495
  526abb:	xor    eax,0xab6e7d98
  526ac0:	je     0x526a42
  526ac2:	push   es
  526ac3:	sbb    al,0xbb
  526ac5:	add    DWORD PTR [ebx+ebp*4],eax
  526ac8:	or     DWORD PTR [esi+eiz*4],esi
  526acb:	(bad)  
  526acc:	push   ecx
  526acd:	mov    ecx,0xd82cab19
  526ad2:	repnz cmp BYTE PTR [ebp-0x5e3b282e],0xb6
  526ada:	dec    edx
  526adb:	int    0x7f
  526add:	outs   dx,DWORD PTR ds:[esi]
  526ade:	jns    0x526a90
  526ae0:	aaa    
  526ae1:	and    al,BYTE PTR [esi-0x42]
  526ae4:	int3   
  526ae5:	sub    dl,ch
  526ae7:	cmp    eax,0xc9825cc2
  526aec:	icebp  
  526aed:	or     al,BYTE PTR [esi+esi*4-0x7a]
  526af1:	mov    bh,0xb9
  526af3:	xor    ah,ah
  526af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526af6:	in     al,dx
  526af7:	mov    eax,0x34e70fc3
  526afc:	ins    DWORD PTR es:[edi],dx
  526afd:	sbb    eax,0xd164f495
  526b02:	(bad)  
  526b03:	mov    ss,WORD PTR fs:[eax+0x43dd98e6]
  526b0a:	out    dx,al
  526b0b:	and    eax,0x7dd15247
  526b10:	out    dx,al
  526b11:	xor    esp,DWORD PTR [esp+ebp*2-0x5161f118]
  526b18:	sahf   
  526b19:	push   edx
  526b1a:	(bad)  
  526b1b:	xor    al,0x49
  526b1d:	dec    esi
  526b1e:	je     0x526aa1
  526b20:	lahf   
  526b21:	in     al,0xff
  526b23:	in     al,dx
  526b24:	push   ds
  526b25:	bound  ecx,QWORD PTR [ebx+0x29]
  526b28:	dec    esi
  526b29:	xlat   BYTE PTR ds:[ebx]
  526b2a:	outs   dx,DWORD PTR ds:[esi]
  526b2b:	sbb    ah,BYTE PTR [edi-0x7c]
  526b2e:	dec    esp
  526b2f:	push   0x15
  526b31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526b32:	stos   BYTE PTR es:[edi],al
  526b33:	cmp    edi,DWORD PTR [ecx-0x6d2d70f7]
  526b39:	mul    DWORD PTR [esi]
  526b3b:	ficomp DWORD PTR [edi*8-0x5e0bd1db]
  526b42:	imul   edi,DWORD PTR cs:[ecx+edx*8-0x118888f7],0xebc82145
  526b4e:	jnp    0x526bac
  526b50:	loope  0x526b78
  526b52:	imul   eax,DWORD PTR [ebx],0xffffff9c
  526b55:	jno    0x526b3f
  526b57:	or     esi,DWORD PTR [edx]
  526b59:	ror    DWORD PTR [edx],1
  526b5b:	xchg   ebp,eax
  526b5c:	jbe    0xce1355f8
  526b62:	adc    edx,DWORD PTR [ebx-0x3c]
  526b65:	cwde   
  526b66:	jne    0x526b5b
  526b68:	test   eax,0x3ed8246b
  526b6d:	test   DWORD PTR [eax+0x544a73ab],ebp
  526b73:	retf   
  526b74:	imul   ebx,DWORD PTR [edx],0x38
  526b77:	add    ch,BYTE PTR [edx-0x54]
  526b7a:	jmp    0xdd82:0x19a1ecad
  526b81:	pop    edi
  526b82:	test   BYTE PTR [edx-0xdd6bc4f],dh
  526b88:	cmp    ebp,DWORD PTR [ebp+esi*1-0x50382ebc]
  526b8f:	push   ebx
  526b90:	adc    ch,al
  526b92:	pop    ebp
  526b93:	lods   eax,DWORD PTR ds:[esi]
  526b94:	lahf   
  526b95:	icebp  
  526b96:	adc    dl,BYTE PTR [edx]
  526b98:	iret   
  526b99:	ret    0xa981
  526b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526b9d:	sub    DWORD PTR [ebx+0x6],0x6a788019
  526ba4:	repnz inc esi
  526ba6:	mov    ds:0x63fe06fc,al
  526bab:	mov    eax,0x9a287d9a
  526bb0:	dec    esi
  526bb1:	bnd ret 0xe80e
  526bb5:	aad    0x78
  526bb7:	out    dx,al
  526bb8:	popf   
  526bb9:	cmp    al,0x66
  526bbb:	add    BYTE PTR [edi],bl
  526bbd:	scas   eax,DWORD PTR es:[edi]
  526bbe:	pop    ss
  526bbf:	push   edi
  526bc0:	and    edx,0xffffffd4
  526bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526bc4:	ins    DWORD PTR es:[edi],dx
  526bc5:	or     dh,BYTE PTR [ebp+0xf]
  526bc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  526bc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526bca:	dec    ecx
  526bcb:	stc    
  526bcc:	xor    eax,0xa497b9ba
  526bd1:	sub    al,0x3c
  526bd3:	xchg   esp,eax
  526bd5:	mov    BYTE PTR [eax+edi*1],0xb2
  526bd9:	xchg   ecx,eax
  526bda:	dec    esi
  526bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526bdc:	xchg   BYTE PTR [esi],bl
  526bde:	xor    ah,BYTE PTR [edi]
  526be0:	sar    ah,0x15
  526be3:	dec    eax
  526be4:	pushf  
  526be5:	push   ss
  526be6:	sub    eax,edi
  526be8:	push   eax
  526be9:	add    edi,edx
  526beb:	fmul   st,st(7)
  526bed:	out    0x8c,eax
  526bef:	or     DWORD PTR [esi-0x4573a152],ebp
  526bf5:	cmovl  edx,eax
  526bf8:	push   esi
  526bf9:	sahf   
  526bfa:	repz ror DWORD PTR [esi-0x19874f99],0x60
  526c02:	pusha  
  526c03:	push   eax
  526c04:	sahf   
  526c05:	mov    edi,0xc35cfccc
  526c0a:	cmp    eax,0xa24a4a87
  526c0f:	mov    edi,0x8bde71e5
  526c14:	mov    ch,0x5b
  526c16:	xor    edx,DWORD PTR [ecx]
  526c18:	sbb    bl,BYTE PTR [ecx]
  526c1a:	push   es
  526c1b:	jp     0x526c92
  526c1d:	pop    edx
  526c1e:	cmp    BYTE PTR [ebp+0x325d8dad],ah
  526c24:	lock sub ch,BYTE PTR [esi-0x756c7b6f]
  526c2b:	repz fcomp QWORD PTR [ecx-0x32a00295]
  526c32:	stos   BYTE PTR es:[edi],al
  526c33:	mov    al,0xd2
  526c35:	or     al,0xe2
  526c37:	sbb    BYTE PTR [esi-0x65],ch
  526c3a:	inc    esi
  526c3b:	inc    esi
  526c3c:	add    BYTE PTR [ecx+edi*2+0x176b692c],cl
  526c43:	test   BYTE PTR [esi-0x5b],dh
  526c46:	mov    edi,0x551cd00a
  526c4b:	loop   0x526c0c
  526c4d:	cmp    eax,edi
  526c4f:	sub    al,dl
  526c51:	push   es
  526c52:	inc    esi
  526c53:	add    esi,ebp
  526c55:	je     0x526cac
  526c57:	mov    eax,ds:0x749c6e4
  526c5c:	mov    al,ds:0x76d8ee38
  526c61:	bound  esp,QWORD PTR [eax]
  526c63:	dec    eax
  526c64:	ins    DWORD PTR es:[edi],dx
  526c65:	pop    edi
  526c66:	sbb    DWORD PTR [ebx+0x3b],esi
  526c69:	sbb    ebx,0xae27eec0
  526c6f:	loope  0x526cd3
  526c71:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  526c73:	inc    edi
  526c74:	and    eax,0x8d01c9c7
  526c79:	jl     0x526cb4
  526c7b:	pop    ebx
  526c7c:	mov    ah,0xa1
  526c7e:	(bad)  
  526c80:	mov    ah,ch
  526c82:	fld    QWORD PTR [ebx]
  526c84:	jmp    0x96d708c4
  526c89:	push   edi
  526c8a:	and    al,0xc6
  526c8c:	outs   dx,DWORD PTR ds:[esi]
  526c8d:	ins    BYTE PTR es:[edi],dx
  526c8e:	jg     0x526cee
  526c90:	push   ds
  526c91:	cmp    BYTE PTR ds:0x3cbabc17,0xea
  526c98:	push   ss
  526c99:	imul   esp,edi,0x147733b2
  526c9f:	mov    ch,0x40
  526ca1:	jb     0x526c90
  526ca3:	cld    
  526ca4:	outs   dx,DWORD PTR ds:[esi]
  526ca5:	and    eax,0x758feef4
  526caa:	add    eax,DWORD PTR [edi-0x66b7a825]
  526cb0:	push   eax
  526cb2:	sbb    eax,0xbacaaaf5
  526cb7:	push   cs
  526cb8:	xchg   edx,eax
  526cb9:	xor    eax,0x15e7ce55
  526cbe:	in     eax,0xa2
  526cc0:	inc    edx
  526cc1:	imul   edx,eax,0x1a1a87ec
  526cc7:	test   eax,0x923414a6
  526ccc:	add    esi,ebp
  526cce:	in     al,dx
  526ccf:	fs jmp 0xe698:0xb34bd9e1
  526cd7:	jb     0x526d42
  526cd9:	mov    ebx,0x7c652b0e
  526cde:	mov    bh,0x49
  526ce0:	shl    DWORD PTR ds:0xc8f3af3d,0xb2
  526ce7:	bound  ebx,QWORD PTR gs:0x1b1b5ade
  526cee:	sub    ebx,DWORD PTR [eax-0x73]
  526cf1:	push   edi
  526cf2:	inc    ebx
  526cf3:	pop    ebp
  526cf4:	data16 icebp 
  526cf6:	and    eax,0x932b45d3
  526cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526cfc:	dec    esi
  526cfd:	mov    eax,0xb46e765d
  526d02:	clc    
  526d03:	enter  0x7809,0xda
  526d07:	xchg   ecx,eax
  526d08:	cli    
  526d09:	outs   dx,BYTE PTR ds:[esi]
  526d0a:	ret    0xf06f
  526d0d:	sub    ah,BYTE PTR [ebp-0x38d67fb5]
  526d13:	push   ds
  526d14:	jp     0x526d31
  526d16:	add    dl,bh
  526d18:	jb     0x526ce9
  526d1a:	jne    0x526d51
  526d1c:	mov    bh,0x7a
  526d1e:	fisub  DWORD PTR ds:0x6cf22fe9
  526d24:	out    dx,al
  526d25:	dec    esp
  526d26:	dec    ebx
  526d27:	nop
  526d28:	iret   
  526d29:	inc    eax
  526d2a:	mov    ds:0x1c5a10a,eax
  526d2f:	(bad)  
  526d30:	rcr    DWORD PTR [edx],cl
  526d32:	mov    edx,0xb3cd91e4
  526d37:	dec    ebx
  526d38:	(bad)  [edx]
  526d3a:	jecxz  0x526cda
  526d3c:	loop   0x526dae
  526d3e:	push   es
  526d3f:	sbb    BYTE PTR [eax],0x42
  526d42:	aam    0x2
  526d44:	shl    DWORD PTR [ebp-0x4f],1
  526d47:	and    DWORD PTR [edx+0x6f],ebx
  526d4a:	aas    
  526d4b:	aas    
  526d4c:	mov    al,0xd2
  526d4e:	retf   
  526d4f:	out    dx,eax
  526d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  526d51:	adc    ah,ch
  526d53:	mov    WORD PTR [ecx+ebp*8+0x52],ss
  526d57:	loop   0x526cde
  526d59:	shl    BYTE PTR [edx-0xd],cl
  526d5c:	inc    edx
  526d5d:	hlt    
  526d5e:	jle    0x526cfa
  526d60:	sbb    dh,BYTE PTR [ecx+0x49]
  526d63:	sbb    eax,0x1f6dea6b
  526d68:	cmp    edx,ebx
  526d6a:	aaa    
  526d6b:	or     ebx,esp
  526d6d:	pusha  
  526d6e:	shl    BYTE PTR [eax+0x25],1
  526d71:	aad    0x1e
  526d73:	dec    ebp
  526d74:	ss dec eax
  526d76:	mov    eax,0x3ae98a98
  526d7b:	or     ch,dh
  526d7d:	cmp    eax,0x80ab2ab0
  526d82:	icebp  
  526d83:	inc    esp
  526d84:	mov    esp,0x928c13d3
  526d89:	sbb    edx,DWORD PTR [ebx-0x18]
  526d8c:	dec    esi
  526d8d:	icebp  
  526d8e:	retf   0x8850
  526d91:	pop    ecx
  526d92:	xchg   DWORD PTR [ecx-0x3cd749dd],ecx
  526d98:	sub    BYTE PTR [edi],0xa5
  526d9b:	cmp    eax,DWORD PTR [eax-0x12]
  526d9e:	sub    BYTE PTR [edx+ebp*4],dl
  526da1:	and    dh,0xbc
  526da4:	pop    es
  526da5:	dec    edx
  526da6:	sub    DWORD PTR [eax+0x75],eax
  526da9:	mov    eax,0x178438a8
  526dae:	repz mov ah,0x78
  526db1:	lods   al,BYTE PTR ds:[esi]
  526db2:	push   edx
  526db3:	retf   
  526db4:	les    ebx,FWORD PTR ds:0x529995fd
  526dba:	ror    BYTE PTR [ecx],1
  526dbc:	ins    DWORD PTR es:[edi],dx
  526dbd:	inc    edx
  526dbe:	add    DWORD PTR [esi-0x5b],ebx
  526dc1:	fs inc edx
  526dc3:	mov    ebx,0xb5dfa7de
  526dc8:	inc    ebp
  526dc9:	sub    ch,BYTE PTR [eax+0x5e6eccd7]
  526dcf:	or     al,0x4c
  526dd1:	shl    edi,cl
  526dd3:	and    bh,bh
  526dd5:	popf   
  526dd6:	retf   
  526dd7:	test   al,0xaf
  526dd9:	sub    cl,dl
  526ddb:	pcmpgtb mm4,QWORD PTR [edi]
  526dde:	xor    eax,0xd7b88f7f
  526de3:	pop    edi
  526de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  526de5:	out    0x80,eax
  526de7:	in     eax,0xa6
  526de9:	cmp    bh,BYTE PTR [eax-0x545e7858]
  526def:	loopne 0x526d7e
  526df1:	mov    cl,0xb8
  526df3:	cmp    BYTE PTR [ecx+0x6adca39a],dh
  526df9:	and    edi,esi
  526dfb:	sub    DWORD PTR [edi+0x14],edi
  526dfe:	sti    
  526dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526e00:	imul   ebx,DWORD PTR [ebx+0x3d5ba83e],0x8f08beb7
  526e0a:	not    DWORD PTR [ebx+0x25]
  526e0d:	mov    ebx,DWORD PTR es:[edx-0x30b561e]
  526e14:	adc    al,0x22
  526e16:	push   esp
  526e17:	into   
  526e18:	xchg   edx,eax
  526e19:	and    eax,0x928790e
  526e1e:	jne    0x526ded
  526e20:	and    ch,bl
  526e22:	sar    BYTE PTR [ebx-0x44],0x9a
  526e26:	add    ch,BYTE PTR [ebx+0x2972a632]
  526e2c:	add    dh,BYTE PTR [eax-0x4b]
  526e2f:	adc    DWORD PTR [ecx],ecx
  526e31:	hlt    
  526e32:	cmp    eax,DWORD PTR [esi-0x51d13eab]
  526e38:	test   DWORD PTR [esi-0x36],ebp
  526e3b:	test   al,bl
  526e3d:	loope  0x526e16
  526e3f:	pop    eax
  526e40:	inc    esp
  526e41:	mov    bh,BYTE PTR [eax-0x36]
  526e44:	push   esp
  526e45:	sar    DWORD PTR [ecx],1
  526e47:	push   es
  526e48:	cmp    BYTE PTR [ecx],ah
  526e4a:	sub    ebx,DWORD PTR [ebx]
  526e4c:	pop    ebp
  526e4d:	fs popf 
  526e4f:	or     bl,BYTE PTR [ebp-0x5df1f6ad]
  526e55:	mov    ah,0x10
  526e57:	xor    ecx,DWORD PTR [edi-0x76]
  526e5a:	cmp    DWORD PTR ds:0xed114667,0x1
  526e61:	lahf   
  526e62:	or     eax,0x78198dcc
  526e67:	jno    0x526e67
  526e69:	int    0x2
  526e6b:	mov    al,ds:0x706e7dc3
  526e70:	popw   ss
  526e72:	ss push eax
  526e74:	hlt    
  526e75:	mov    eax,0xcea25b4b
  526e7a:	add    al,0xa2
  526e7c:	xor    esp,esi
  526e7e:	push   cs
  526e7f:	jo     0x526e7d
  526e81:	push   esp
  526e82:	jl     0x526eba
  526e84:	or     DWORD PTR [edi],ecx
  526e86:	mov    dh,ah
  526e88:	push   edx
  526e89:	sbb    al,0x59
  526e8b:	cmp    bl,al
  526e8d:	(bad)  
  526e8e:	(bad)  
  526e8f:	aam    0x45
  526e91:	inc    ebx
  526e92:	shl    BYTE PTR [ecx+0x7e],1
  526e95:	jle    0x526ef2
  526e97:	or     eax,0xf0d1b27a
  526e9c:	cdq    
  526e9d:	or     ecx,DWORD PTR [eax]
  526e9f:	(bad)  
  526ea0:	fld    QWORD PTR [esi+esi*1]
  526ea3:	fdiv   DWORD PTR ds:0x4387db7d
  526ea9:	push   ebx
  526eaa:	sub    BYTE PTR [eax-0x1],0x4b
  526eae:	ins    BYTE PTR es:[edi],dx
  526eaf:	and    bh,ch
  526eb1:	cmp    DWORD PTR [esi-0x79],0x4e
  526eb5:	sti    
  526eb6:	mov    bl,0x42
  526eb8:	dec    ebx
  526eb9:	mov    DWORD PTR [ebx+0x7292517e],eax
  526ebf:	imul   esi,DWORD PTR [ecx+0x74d0a715],0xb
  526ec6:	fsubr  DWORD PTR [eax-0x24]
  526ec9:	sbb    DWORD PTR [ebx+0x7bada356],ebx
  526ecf:	retf   
  526ed0:	fld    TBYTE PTR [edi-0x75]
  526ed3:	adc    cl,BYTE PTR [eax+0xf]
  526ed6:	scas   al,BYTE PTR es:[edi]
  526ed7:	ret    
  526ed8:	call   0x740f686e
  526edd:	sub    eax,0x236b6670
  526ee2:	ret    0x4935
  526ee5:	and    eax,0xfab29943
  526eea:	mov    eax,ds:0x996378e9
  526eef:	gs ds push ebx
  526ef2:	sbb    al,0xf4
  526ef4:	mov    edx,0xf447790
  526ef9:	sbb    DWORD PTR [esi+0x51334038],ebx
  526eff:	adc    eax,0x6969e981
  526f04:	shl    DWORD PTR [edi],0x8e
  526f07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  526f08:	loope  0x526f2e
  526f0a:	jae    0x526e8e
  526f0c:	test   DWORD PTR [ecx],ebp
  526f0e:	add    DWORD PTR ss:[ebp+0x738853dd],ebp
  526f15:	les    ecx,FWORD PTR [edi]
  526f17:	fcomp  st(1)
  526f19:	mov    dh,dh
  526f1b:	repnz add BYTE PTR [edi],bh
  526f1e:	repnz call FWORD PTR [ecx-0x66]
  526f22:	nop
  526f23:	retf   
  526f24:	stc    
  526f25:	pop    edx
  526f26:	inc    esp
  526f27:	ja     0x526f96
  526f29:	mov    eax,ds:0xf0ded50f
  526f2e:	sub    BYTE PTR [eax-0x25],ch
  526f31:	lods   eax,DWORD PTR ds:[esi]
  526f32:	add    ebp,esi
  526f34:	or     dl,dh
  526f36:	in     al,0xe2
  526f38:	ret    0x55fe
  526f3b:	xchg   BYTE PTR fs:[ecx-0x1c55739d],ah
  526f42:	adc    eax,0xe3f253ab
  526f47:	jbe    0x526ee6
  526f49:	rol    dl,0x85
  526f4c:	out    dx,al
  526f4d:	xor    eax,0x21ffffb6
  526f52:	adc    edx,0x94032e03
  526f58:	push   cs
  526f59:	lds    ecx,FWORD PTR [edi]
  526f5b:	xchg   esp,eax
  526f5c:	or     al,0x8c
  526f5e:	mov    edx,0x3007568d
  526f63:	retf   
  526f64:	ds sbb al,0xfe
  526f67:	fnstenv [ebx+0x4b]
  526f6a:	add    ebx,DWORD PTR [edi+0x53]
  526f6d:	enter  0xec60,0xa5
  526f71:	loopne 0x526f14
  526f73:	jl     0x526f93
  526f75:	ret    0x239c
  526f78:	cmp    ah,bh
  526f7a:	and    ch,ch
  526f7c:	or     BYTE PTR [edx+0x31f783ec],ch
  526f82:	inc    esp
  526f83:	dec    ebx
  526f84:	sar    DWORD PTR [esi],cl
  526f86:	mov    ebx,0x5a5fbe59
  526f8b:	adc    edi,esp
  526f8d:	push   0x9629f995
  526f92:	add    BYTE PTR [ebx],0xbf
  526f95:	add    BYTE PTR [esi-0x21],dl
  526f98:	test   eax,0x245af74d
  526f9d:	retf   0xcf41
  526fa0:	jge    0x527015
  526fa2:	dec    ecx
  526fa3:	sete   BYTE PTR [edx+eiz*2]
  526fa7:	mov    WORD PTR [edx+0x3c1b690c],gs
  526fad:	xor    al,0xe6
  526faf:	mov    edx,0xbf420737
  526fb4:	retf   
  526fb5:	lock icebp 
  526fb7:	imul   eax,DWORD PTR [edi+0x64d6c183],0x82937793
  526fc1:	fneni(8087 only) 
  526fc3:	or     dl,al
  526fc5:	xchg   ebx,eax
  526fc6:	in     eax,0x9b
  526fc8:	add    eax,0x3fd44a00
  526fcd:	push   esp
  526fce:	adc    BYTE PTR [esi+edi*8+0x2273bb0d],al
  526fd5:	pop    ss
  526fd6:	xor    ah,BYTE PTR [edx+0x3f099c32]
  526fdc:	in     eax,0x31
  526fde:	inc    edi
  526fdf:	fcom   DWORD PTR [ecx+esi*4-0x9]
  526fe3:	push   0xb6858a93
  526fe8:	mov    BYTE PTR [edi+0xe83c875],al
  526fee:	push   cs
  526fef:	inc    ecx
  526ff0:	mov    eax,ds:0x22841fb5
  526ff5:	lods   eax,DWORD PTR ds:[esi]
  526ff6:	sbb    eax,0x778e350d
  526ffb:	neg    BYTE PTR [ebx+esi*2+0x40]
  526fff:	mov    ds,WORD PTR [edx-0x2f]
  527002:	dec    esi
  527003:	addr16 pop edi
  527005:	dec    edi
  527006:	les    ecx,FWORD PTR [edi]
  527008:	rcpps  xmm3,xmm2
  52700b:	imul   edx,DWORD PTR [esi+esi*8-0xf],0x3a
  527010:	dec    esi
  527011:	xchg   BYTE PTR [ebx],cl
  527013:	sar    DWORD PTR [ecx-0x22],cl
  527016:	cmp    esi,DWORD PTR [ebx+ebx*4+0x9]
  52701a:	push   ss
  52701b:	dec    ebx
  52701c:	and    DWORD PTR [ebx+0x1c],edx
  52701f:	stos   BYTE PTR es:[edi],al
  527020:	ins    BYTE PTR es:[edi],dx
  527021:	add    BYTE PTR [ebx+ecx*2],dl
  527024:	cmp    al,0x8
  527026:	dec    eax
  527027:	xchg   edx,ebp
  527029:	ja     0x52709a
  52702b:	sahf   
  52702c:	lahf   
  52702d:	test   BYTE PTR [ecx-0x65],dl
  527030:	inc    ebp
  527031:	adc    eax,0xb4599db
  527036:	add    dl,BYTE PTR [esi+0x7d9866d9]
  52703c:	cwde   
  52703d:	mov    ch,0xd6
  52703f:	xor    eax,0x5a7b2de1
  527044:	dec    esp
  527045:	shl    BYTE PTR [ebx-0x35c1a608],cl
  52704b:	mov    ah,0x96
  52704d:	mov    ds:0xff897c33,eax
  527052:	cmp    DWORD PTR [ecx+edx*4+0x4d],ebp
  527056:	pop    edi
  527057:	cmp    BYTE PTR ds:0x874e7d51,dh
  52705d:	cmp    BYTE PTR ds:0xde4f6abb,bl
  527063:	loopne 0x527072
  527065:	iret   
  527066:	adc    al,0x4c
  527068:	fwait
  527069:	shr    esp,1
  52706b:	stc    
  52706c:	(bad)  
  52706d:	scas   eax,DWORD PTR es:[edi]
  52706e:	div    BYTE PTR [eax-0x1706fee5]
  527074:	int3   
  527075:	pop    ebx
  527076:	push   0xffffff98
  527078:	pop    edi
  527079:	aas    
  52707a:	(bad)  [edx-0xb9c9961]
  527080:	and    al,0xc4
  527082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  527083:	mov    ch,0x31
  527085:	aas    
  527086:	outs   dx,BYTE PTR ds:[esi]
  527087:	fmulp  st(4),st
  527089:	and    eax,0x21e4e03f
  52708e:	ins    DWORD PTR es:[edi],dx
  52708f:	mov    ds:0x2bb30ea1,eax
  527094:	out    0xf9,al
  527096:	popa   
  527097:	or     edx,DWORD PTR [esi-0x72b88374]
  52709d:	jae    0x52703a
  52709f:	mov    esi,0x9168ac05
  5270a4:	jo     0x5270fb
  5270a6:	retf   
  5270a7:	mov    BYTE PTR [esi],0x86
  5270aa:	jmp    0x527104
  5270ac:	push   cs
  5270ad:	jbe    0x52708d
  5270af:	mov    al,0xfe
  5270b1:	test   al,0xd5
  5270b3:	pop    es
  5270b4:	adc    ch,BYTE PTR [eax-0x1c]
  5270b7:	jmp    0xea88ccbf
  5270bc:	mov    esi,0x4dc4b013
  5270c1:	ins    DWORD PTR es:[edi],dx
  5270c2:	icebp  
  5270c3:	int    0x18
  5270c5:	cmp    DWORD PTR [ecx+ebx*2],ebx
  5270c8:	and    dh,BYTE PTR [ebp-0x21]
  5270cb:	push   eax
  5270cc:	(bad)  
  5270cd:	sbb    al,0x88
  5270cf:	adc    esp,DWORD PTR [edi-0x2b]
  5270d2:	inc    edx
  5270d3:	sbb    dh,bl
  5270d5:	sub    BYTE PTR [edx-0x25],al
  5270d8:	cld    
  5270d9:	es push ds
  5270db:	or     DWORD PTR [eax],edx
  5270dd:	adc    esp,edx
  5270df:	mov    edi,0x4f4503ce
  5270e4:	xchg   edi,eax
  5270e5:	mov    DWORD PTR [edx],ebx
  5270e7:	mov    ecx,0x36b19d05
  5270ec:	or     al,0xa
  5270ee:	fnstsw WORD PTR [edx-0x7f]
  5270f1:	dec    edi
  5270f2:	xchg   edi,eax
  5270f3:	dec    edx
  5270f4:	in     al,0x15
  5270f6:	jo     0x5270a5
  5270f8:	inc    ecx
  5270f9:	leave  
  5270fa:	xor    al,0x1e
  5270fc:	popf   
  5270fd:	jge    0x527102
  5270ff:	cmp    DWORD PTR [edi+0x736e8a32],ebx
  527105:	jp     0x527132
  527107:	enter  0x8b9d,0x87
  52710b:	pop    ebp
  52710c:	pop    es
  52710d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  52710e:	ror    bh,1
  527110:	addr16 xchg esi,eax
  527112:	aas    
  527113:	mov    esp,0x69721ceb
  527118:	imul   esp,eax,0x135585c6
  52711e:	(bad)  
  52711f:	clc    
  527120:	fsubp  st(4),st
  527122:	pop    ebp
  527123:	cli    
  527124:	fs mov ebx,0xe882dad7
  52712a:	dec    ebp
  52712b:	xlat   BYTE PTR ds:[ebx]
  52712c:	xchg   BYTE PTR [ecx-0x27db8781],bh
  527132:	ins    BYTE PTR es:[edi],dx
  527133:	and    bh,BYTE PTR [ebx+0x15]
  527136:	std    
  527137:	or     ah,BYTE PTR [ebp+edi*2-0x79]
  52713b:	leave  
  52713c:	dec    edi
  52713d:	xor    DWORD PTR [ecx-0x3c90ce80],esi
  527143:	rol    cl,0x6
  527146:	imul   edx,DWORD PTR [ebp+0x3406e6b5],0x55
  52714d:	shl    BYTE PTR [ecx-0x6939f40f],cl
  527153:	inc    esi
  527154:	in     eax,dx
  527155:	sbb    eax,0xba38837
  52715a:	lock push ss
  52715c:	or     al,0xd3
  52715e:	sbb    esi,esp
  527160:	pop    ebx
  527161:	or     al,0xb4
  527163:	push   0x6c
  527165:	jb     0x52713e
  527167:	inc    esp
  527168:	aam    0xec
  52716a:	mov    ebx,0xf4ed6d26
  52716f:	fst    QWORD PTR [ebx-0x31f3c2ca]
  527175:	gs jbe 0x527117
  527178:	ficom  DWORD PTR ds:0x4dc4e1bd
  52717e:	adc    dl,BYTE PTR [esp+eax*4]
  527181:	sti    
  527182:	xor    al,0xcf
  527184:	jo     0x52713c
  527186:	(bad)  
  527187:	es std 
  527189:	(bad)  
  52718a:	cmp    DWORD PTR [edx],ebp
  52718c:	pop    ss
  52718d:	sbb    esp,DWORD PTR [ebx]
  52718f:	push   cs
  527190:	xor    eax,0x22688987
  527195:	add    DWORD PTR [edx+eiz*2-0x207c5fa1],edx
  52719c:	sub    BYTE PTR [edi+0x22],al
  52719f:	ds pop esi
  5271a1:	mov    ebp,DWORD PTR [esi-0x7212880c]
  5271a7:	cs retf 0x3bf7
  5271ab:	xchg   esi,eax
  5271ac:	mov    al,0x62
  5271ae:	leave  
  5271af:	jmp    0x52715a
  5271b1:	jmp    0x6eeed92a
  5271b6:	add    eax,0xc412be97
  5271bb:	in     eax,0x1e
  5271bd:	inc    eax
  5271be:	sti    
  5271bf:	xchg   edi,eax
  5271c0:	dec    ecx
  5271c1:	sbb    cl,BYTE PTR [ecx+eiz*8+0x60]
  5271c5:	call   0x5e88:0xd3cecc69
  5271cc:	ret    0xd0f4
  5271cf:	(bad)  
  5271d0:	into   
  5271d1:	hlt    
  5271d2:	mov    ds:0x8b09cc89,al
  5271d7:	popf   
  5271d8:	dec    eax
  5271d9:	adc    sp,bp
  5271dc:	sar    dh,0x29
  5271df:	aam    0x2
  5271e1:	or     esp,DWORD PTR [ecx]
  5271e3:	pushf  
  5271e4:	loopne 0x52716e
  5271e6:	aaa    
  5271e7:	jp     0x5271d0
  5271e9:	dec    edx
  5271ea:	sar    DWORD PTR [esi+ebp*2],cl
  5271ed:	jmp    0x9f0c5036
  5271f2:	or     eax,0x3039c378
  5271f7:	pop    esi
  5271f8:	pop    esp
  5271f9:	out    0x6f,eax
  5271fb:	push   edx
  5271fc:	pop    edi
  5271fd:	les    edx,FWORD PTR [edi+ecx*1+0x38]
  527201:	popa   
  527202:	shr    DWORD PTR [edx],0x15
  527205:	mov    cl,0x33
  527207:	call   0x68ec:0x27a93995
  52720e:	leave  
  52720f:	xchg   esi,eax
  527210:	out    0xd1,al
  527212:	shl    edi,0x2e
  527215:	and    DWORD PTR [esi-0xd],0x35
  527219:	mov    bl,0x21
  52721b:	js     0x52728d
  52721d:	cmp    al,BYTE PTR fs:[edx]
  527220:	mov    ecx,0xae1135bd
  527225:	test   DWORD PTR [ebx+0x522b25be],0xc2d3d024
  52722f:	stc    
  527230:	inc    esi
  527231:	add    al,0xdb
  527233:	cmp    DWORD PTR [ecx],esp
  527235:	mov    eax,0xfd04fb51
  52723a:	add    BYTE PTR [eax],al
  52723c:	add    BYTE PTR [eax],al
  52723e:	add    BYTE PTR [eax],al
  527240:	pusha  
  527241:	mov    esi,0x508000
  527246:	lea    edi,[esi-0x107000]
  52724c:	push   edi
  52724d:	mov    ebp,esp
  52724f:	lea    ebx,[esp-0x3e80]
  527256:	xor    eax,eax
  527258:	push   eax
  527259:	cmp    esp,ebx
  52725b:	jne    0x527258
  52725d:	inc    esi
  52725e:	inc    esi
  52725f:	push   ebx
  527260:	push   0x125517
  527265:	push   edi
  527266:	add    ebx,0x4
  527269:	push   ebx
  52726a:	push   0x1f239
  52726f:	push   esi
  527270:	add    ebx,0x4
  527273:	push   ebx
  527274:	push   eax
  527275:	mov    DWORD PTR [ebx],0x20003
  52727b:	nop
  52727c:	nop
  52727d:	nop
  52727e:	nop
  52727f:	nop
  527280:	push   ebp
  527281:	push   edi
  527282:	push   esi
  527283:	push   ebx
  527284:	sub    esp,0x7c
  527287:	mov    edx,DWORD PTR [esp+0x90]
  52728e:	mov    DWORD PTR [esp+0x74],0x0
  527296:	mov    BYTE PTR [esp+0x73],0x0
  52729b:	mov    ebp,DWORD PTR [esp+0x9c]
  5272a2:	lea    eax,[edx+0x4]
  5272a5:	mov    DWORD PTR [esp+0x78],eax
  5272a9:	mov    eax,0x1
  5272ae:	movzx  ecx,BYTE PTR [edx+0x2]
  5272b2:	mov    ebx,eax
  5272b4:	shl    ebx,cl
  5272b6:	mov    ecx,ebx
  5272b8:	dec    ecx
  5272b9:	mov    DWORD PTR [esp+0x6c],ecx
  5272bd:	movzx  ecx,BYTE PTR [edx+0x1]
  5272c1:	shl    eax,cl
  5272c3:	dec    eax
  5272c4:	mov    DWORD PTR [esp+0x68],eax
  5272c8:	mov    eax,DWORD PTR [esp+0xa8]
  5272cf:	movzx  esi,BYTE PTR [edx]
  5272d2:	mov    DWORD PTR [ebp+0x0],0x0
  5272d9:	mov    DWORD PTR [esp+0x60],0x0
  5272e1:	mov    DWORD PTR [eax],0x0
  5272e7:	mov    eax,0x300
  5272ec:	mov    DWORD PTR [esp+0x64],esi
  5272f0:	mov    DWORD PTR [esp+0x5c],0x1
  5272f8:	mov    DWORD PTR [esp+0x58],0x1
  527300:	mov    DWORD PTR [esp+0x54],0x1
  527308:	mov    DWORD PTR [esp+0x50],0x1
  527310:	movzx  ecx,BYTE PTR [edx+0x1]
  527314:	add    ecx,esi
  527316:	shl    eax,cl
  527318:	lea    ecx,[eax+0x736]
  52731e:	cmp    DWORD PTR [esp+0x74],ecx
  527322:	jae    0x527332
  527324:	mov    eax,DWORD PTR [esp+0x78]
  527328:	mov    WORD PTR [eax],0x400
  52732d:	add    eax,0x2
  527330:	loop   0x527328
  527332:	mov    ebx,DWORD PTR [esp+0x94]
  527339:	xor    edi,edi
  52733b:	mov    DWORD PTR [esp+0x48],0xffffffff
  527343:	mov    edx,ebx
  527345:	add    edx,DWORD PTR [esp+0x98]
  52734c:	mov    DWORD PTR [esp+0x4c],edx
  527350:	xor    edx,edx
  527352:	cmp    ebx,DWORD PTR [esp+0x4c]
  527356:	je     0x527cd8
  52735c:	movzx  eax,BYTE PTR [ebx]
  52735f:	shl    edi,0x8
  527362:	inc    edx
  527363:	inc    ebx
  527364:	or     edi,eax
  527366:	cmp    edx,0x4
  527369:	jle    0x527352
  52736b:	mov    ecx,DWORD PTR [esp+0xa4]
  527372:	cmp    DWORD PTR [esp+0x74],ecx
  527376:	jae    0x527ce0
  52737c:	mov    esi,DWORD PTR [esp+0x74]
  527380:	and    esi,DWORD PTR [esp+0x6c]
  527384:	mov    eax,DWORD PTR [esp+0x60]
  527388:	mov    edx,DWORD PTR [esp+0x78]
  52738c:	shl    eax,0x4
  52738f:	mov    DWORD PTR [esp+0x44],esi
  527393:	add    eax,esi
  527395:	cmp    DWORD PTR [esp+0x48],0xffffff
  52739d:	lea    ebp,[edx+eax*2]
  5273a0:	ja     0x5273ba
  5273a2:	cmp    ebx,DWORD PTR [esp+0x4c]
  5273a6:	je     0x527cd8
  5273ac:	shl    DWORD PTR [esp+0x48],0x8
  5273b1:	movzx  eax,BYTE PTR [ebx]
  5273b4:	shl    edi,0x8
  5273b7:	inc    ebx
  5273b8:	or     edi,eax
  5273ba:	mov    eax,DWORD PTR [esp+0x48]
  5273be:	mov    dx,WORD PTR [ebp+0x0]
  5273c2:	shr    eax,0xb
  5273c5:	movzx  ecx,dx
  5273c8:	imul   eax,ecx
  5273cb:	cmp    edi,eax
  5273cd:	jae    0x5275b0
  5273d3:	mov    DWORD PTR [esp+0x48],eax
  5273d7:	mov    eax,0x800
  5273dc:	sub    eax,ecx
  5273de:	mov    cl,BYTE PTR [esp+0x64]
  5273e2:	sar    eax,0x5
  5273e5:	mov    esi,0x1
  5273ea:	lea    eax,[edx+eax*1]
  5273ed:	movzx  edx,BYTE PTR [esp+0x73]
  5273f2:	mov    WORD PTR [ebp+0x0],ax
  5273f6:	mov    eax,DWORD PTR [esp+0x74]
  5273fa:	and    eax,DWORD PTR [esp+0x68]
  5273fe:	mov    ebp,DWORD PTR [esp+0x78]
  527402:	shl    eax,cl
  527404:	mov    ecx,0x8
  527409:	sub    ecx,DWORD PTR [esp+0x64]
  52740d:	sar    edx,cl
  52740f:	add    eax,edx
  527411:	imul   eax,eax,0x600
  527417:	cmp    DWORD PTR [esp+0x60],0x6
  52741c:	lea    eax,[ebp+eax*1+0xe6c]
  527423:	mov    DWORD PTR [esp+0x14],eax
  527427:	jle    0x5274f7
  52742d:	mov    eax,DWORD PTR [esp+0x74]
  527431:	sub    eax,DWORD PTR [esp+0x5c]
  527435:	mov    edx,DWORD PTR [esp+0xa0]
  52743c:	movzx  eax,BYTE PTR [edx+eax*1]
  527440:	mov    DWORD PTR [esp+0x40],eax
  527444:	shl    DWORD PTR [esp+0x40],1
  527448:	mov    ecx,DWORD PTR [esp+0x40]
  52744c:	lea    edx,[esi+esi*1]
  52744f:	mov    ebp,DWORD PTR [esp+0x14]
  527453:	and    ecx,0x100
  527459:	cmp    DWORD PTR [esp+0x48],0xffffff
  527461:	lea    eax,[ebp+ecx*2+0x0]
  527465:	mov    DWORD PTR [esp+0x3c],ecx
  527469:	lea    ebp,[eax+edx*1]
  52746c:	ja     0x527486
  52746e:	cmp    ebx,DWORD PTR [esp+0x4c]
  527472:	je     0x527cd8
  527478:	shl    DWORD PTR [esp+0x48],0x8
  52747d:	movzx  eax,BYTE PTR [ebx]
  527480:	shl    edi,0x8
  527483:	inc    ebx
  527484:	or     edi,eax
  527486:	mov    eax,DWORD PTR [esp+0x48]
  52748a:	mov    cx,WORD PTR [ebp+0x200]
  527491:	shr    eax,0xb
  527494:	movzx  esi,cx
  527497:	imul   eax,esi
  52749a:	cmp    edi,eax
  52749c:	jae    0x5274c1
  52749e:	mov    DWORD PTR [esp+0x48],eax
  5274a2:	mov    eax,0x800
  5274a7:	sub    eax,esi
  5274a9:	mov    esi,edx
  5274ab:	sar    eax,0x5
  5274ae:	cmp    DWORD PTR [esp+0x3c],0x0
  5274b3:	lea    eax,[ecx+eax*1]
  5274b6:	mov    WORD PTR [ebp+0x200],ax
  5274bd:	je     0x5274e1
  5274bf:	jmp    0x5274ef
  5274c1:	sub    DWORD PTR [esp+0x48],eax
  5274c5:	sub    edi,eax
  5274c7:	mov    eax,ecx
  5274c9:	lea    esi,[edx+0x1]
  5274cc:	shr    ax,0x5
  5274d0:	sub    cx,ax
  5274d3:	cmp    DWORD PTR [esp+0x3c],0x0
  5274d8:	mov    WORD PTR [ebp+0x200],cx
  5274df:	je     0x5274ef
  5274e1:	cmp    esi,0xff
  5274e7:	jle    0x527444
  5274ed:	jmp    0x527568
  5274ef:	cmp    esi,0xff
  5274f5:	jg     0x527568
  5274f7:	lea    edx,[esi+esi*1]
  5274fa:	mov    ebp,DWORD PTR [esp+0x14]
  5274fe:	add    ebp,edx
  527500:	cmp    DWORD PTR [esp+0x48],0xffffff
  527508:	ja     0x527522
  52750a:	cmp    ebx,DWORD PTR [esp+0x4c]
  52750e:	je     0x527cd8
  527514:	shl    DWORD PTR [esp+0x48],0x8
  527519:	movzx  eax,BYTE PTR [ebx]
  52751c:	shl    edi,0x8
  52751f:	inc    ebx
  527520:	or     edi,eax
  527522:	mov    eax,DWORD PTR [esp+0x48]
  527526:	mov    cx,WORD PTR [ebp+0x0]
  52752a:	shr    eax,0xb
  52752d:	movzx  esi,cx
  527530:	imul   eax,esi
  527533:	cmp    edi,eax
  527535:	jae    0x527550
  527537:	mov    DWORD PTR [esp+0x48],eax
  52753b:	mov    eax,0x800
  527540:	sub    eax,esi
  527542:	mov    esi,edx
  527544:	sar    eax,0x5
  527547:	lea    eax,[ecx+eax*1]
  52754a:	mov    WORD PTR [ebp+0x0],ax
  52754e:	jmp    0x5274ef
  527550:	sub    DWORD PTR [esp+0x48],eax
  527554:	sub    edi,eax
  527556:	mov    eax,ecx
  527558:	lea    esi,[edx+0x1]
  52755b:	shr    ax,0x5
  52755f:	sub    cx,ax
  527562:	mov    WORD PTR [ebp+0x0],cx
  527566:	jmp    0x5274ef
  527568:	mov    edx,DWORD PTR [esp+0x74]
  52756c:	mov    eax,esi
  52756e:	mov    ecx,DWORD PTR [esp+0xa0]
  527575:	mov    BYTE PTR [esp+0x73],al
  527579:	mov    BYTE PTR [edx+ecx*1],al
  52757c:	inc    edx
  52757d:	cmp    DWORD PTR [esp+0x60],0x3
  527582:	mov    DWORD PTR [esp+0x74],edx
  527586:	jg     0x527595
  527588:	mov    DWORD PTR [esp+0x60],0x0
  527590:	jmp    0x527cb0
  527595:	cmp    DWORD PTR [esp+0x60],0x9
  52759a:	jg     0x5275a6
  52759c:	sub    DWORD PTR [esp+0x60],0x3
  5275a1:	jmp    0x527cb0
  5275a6:	sub    DWORD PTR [esp+0x60],0x6
  5275ab:	jmp    0x527cb0
  5275b0:	mov    ecx,DWORD PTR [esp+0x48]
  5275b4:	sub    edi,eax
  5275b6:	mov    esi,DWORD PTR [esp+0x60]
  5275ba:	sub    ecx,eax
  5275bc:	mov    eax,edx
  5275be:	shr    ax,0x5
  5275c2:	sub    dx,ax
  5275c5:	cmp    ecx,0xffffff
  5275cb:	mov    WORD PTR [ebp+0x0],dx
  5275cf:	mov    ebp,DWORD PTR [esp+0x78]
  5275d3:	lea    esi,[ebp+esi*2+0x0]
  5275d7:	mov    DWORD PTR [esp+0x38],esi
  5275db:	ja     0x5275f3
  5275dd:	cmp    ebx,DWORD PTR [esp+0x4c]
  5275e1:	je     0x527cd8
  5275e7:	movzx  eax,BYTE PTR [ebx]
  5275ea:	shl    edi,0x8
  5275ed:	shl    ecx,0x8
  5275f0:	inc    ebx
  5275f1:	or     edi,eax
  5275f3:	mov    ebp,DWORD PTR [esp+0x38]
  5275f7:	mov    eax,ecx
  5275f9:	shr    eax,0xb
  5275fc:	mov    dx,WORD PTR [ebp+0x180]
  527603:	movzx  ebp,dx
  527606:	imul   eax,ebp
  527609:	cmp    edi,eax
  52760b:	jae    0x52765f
  52760d:	mov    esi,eax
  52760f:	mov    eax,0x800
  527614:	sub    eax,ebp
  527616:	mov    ebp,DWORD PTR [esp+0x58]
  52761a:	sar    eax,0x5
  52761d:	mov    ecx,DWORD PTR [esp+0x54]
  527621:	lea    eax,[edx+eax*1]
  527624:	mov    edx,DWORD PTR [esp+0x38]
  527628:	mov    DWORD PTR [esp+0x50],ecx
  52762c:	mov    ecx,DWORD PTR [esp+0x78]
  527630:	mov    WORD PTR [edx+0x180],ax
  527637:	mov    eax,DWORD PTR [esp+0x5c]
  52763b:	mov    DWORD PTR [esp+0x54],ebp
  52763f:	mov    DWORD PTR [esp+0x58],eax
  527643:	xor    eax,eax
  527645:	cmp    DWORD PTR [esp+0x60],0x6
  52764a:	setg   al
  52764d:	add    ecx,0x664
  527653:	lea    eax,[eax+eax*2]
  527656:	mov    DWORD PTR [esp+0x60],eax
  52765a:	jmp    0x5278d3
  52765f:	mov    esi,ecx
  527661:	sub    edi,eax
  527663:	sub    esi,eax
  527665:	mov    eax,edx
  527667:	shr    ax,0x5
  52766b:	mov    ecx,DWORD PTR [esp+0x38]
  52766f:	sub    dx,ax
  527672:	cmp    esi,0xffffff
  527678:	mov    WORD PTR [ecx+0x180],dx
  52767f:	ja     0x527697
  527681:	cmp    ebx,DWORD PTR [esp+0x4c]
  527685:	je     0x527cd8
  52768b:	movzx  eax,BYTE PTR [ebx]
  52768e:	shl    edi,0x8
  527691:	shl    esi,0x8
  527694:	inc    ebx
  527695:	or     edi,eax
  527697:	mov    ebp,DWORD PTR [esp+0x38]
  52769b:	mov    edx,esi
  52769d:	shr    edx,0xb
  5276a0:	mov    cx,WORD PTR [ebp+0x198]
  5276a7:	movzx  eax,cx
  5276aa:	imul   edx,eax
  5276ad:	cmp    edi,edx
  5276af:	jae    0x527798
  5276b5:	mov    ebp,0x800
  5276ba:	mov    esi,edx
  5276bc:	sub    ebp,eax
  5276be:	mov    DWORD PTR [esp+0x34],0x800
  5276c6:	mov    eax,ebp
  5276c8:	sar    eax,0x5
  5276cb:	lea    eax,[ecx+eax*1]
  5276ce:	mov    ecx,DWORD PTR [esp+0x38]
  5276d2:	mov    WORD PTR [ecx+0x198],ax
  5276d9:	mov    eax,DWORD PTR [esp+0x60]
  5276dd:	mov    ecx,DWORD PTR [esp+0x44]
  5276e1:	shl    eax,0x5
  5276e4:	add    eax,DWORD PTR [esp+0x78]
  5276e8:	cmp    edx,0xffffff
  5276ee:	lea    ebp,[eax+ecx*2]
  5276f1:	ja     0x527709
  5276f3:	cmp    ebx,DWORD PTR [esp+0x4c]
  5276f7:	je     0x527cd8
  5276fd:	movzx  eax,BYTE PTR [ebx]
  527700:	shl    edi,0x8
  527703:	shl    esi,0x8
  527706:	inc    ebx
  527707:	or     edi,eax
  527709:	mov    dx,WORD PTR [ebp+0x1e0]
  527710:	mov    eax,esi
  527712:	shr    eax,0xb
  527715:	movzx  ecx,dx
  527718:	imul   eax,ecx
  52771b:	cmp    edi,eax
  52771d:	jae    0x52777f
  52771f:	sub    DWORD PTR [esp+0x34],ecx
  527723:	sar    DWORD PTR [esp+0x34],0x5
  527728:	mov    esi,DWORD PTR [esp+0x34]
  52772c:	mov    DWORD PTR [esp+0x48],eax
  527730:	cmp    DWORD PTR [esp+0x74],0x0
  527735:	lea    eax,[edx+esi*1]
  527738:	mov    WORD PTR [ebp+0x1e0],ax
  52773f:	je     0x527cd8
  527745:	xor    eax,eax
  527747:	cmp    DWORD PTR [esp+0x60],0x6
  52774c:	mov    ebp,DWORD PTR [esp+0xa0]
  527753:	mov    edx,DWORD PTR [esp+0x74]
  527757:	setg   al
  52775a:	lea    eax,[eax+eax*1+0x9]
  52775e:	mov    DWORD PTR [esp+0x60],eax
  527762:	mov    eax,DWORD PTR [esp+0x74]
  527766:	sub    eax,DWORD PTR [esp+0x5c]
  52776a:	mov    al,BYTE PTR [ebp+eax*1+0x0]
  52776e:	mov    BYTE PTR [esp+0x73],al
  527772:	mov    BYTE PTR [edx+ebp*1],al
  527775:	inc    edx
  527776:	mov    DWORD PTR [esp+0x74],edx
  52777a:	jmp    0x527cb0
  52777f:	sub    esi,eax
  527781:	sub    edi,eax
  527783:	mov    eax,edx
  527785:	shr    ax,0x5
  527789:	sub    dx,ax
  52778c:	mov    WORD PTR [ebp+0x1e0],dx
  527793:	jmp    0x5278b7
  527798:	mov    eax,ecx
  52779a:	sub    esi,edx
  52779c:	shr    ax,0x5
  5277a0:	mov    ebp,DWORD PTR [esp+0x38]
  5277a4:	sub    cx,ax
  5277a7:	sub    edi,edx
  5277a9:	cmp    esi,0xffffff
  5277af:	mov    WORD PTR [ebp+0x198],cx
  5277b6:	ja     0x5277ce
  5277b8:	cmp    ebx,DWORD PTR [esp+0x4c]
  5277bc:	je     0x527cd8
  5277c2:	movzx  eax,BYTE PTR [ebx]
  5277c5:	shl    edi,0x8
  5277c8:	shl    esi,0x8
  5277cb:	inc    ebx
  5277cc:	or     edi,eax
  5277ce:	mov    ecx,DWORD PTR [esp+0x38]
  5277d2:	mov    eax,esi
  5277d4:	shr    eax,0xb
  5277d7:	mov    dx,WORD PTR [ecx+0x1b0]
  5277de:	movzx  ecx,dx
  5277e1:	imul   eax,ecx
  5277e4:	cmp    edi,eax
  5277e6:	jae    0x52780b
  5277e8:	mov    esi,eax
  5277ea:	mov    eax,0x800
  5277ef:	sub    eax,ecx
  5277f1:	mov    ebp,DWORD PTR [esp+0x38]
  5277f5:	sar    eax,0x5
  5277f8:	lea    eax,[edx+eax*1]
  5277fb:	mov    WORD PTR [ebp+0x1b0],ax
  527802:	mov    eax,DWORD PTR [esp+0x58]
  527806:	jmp    0x5278ab
  52780b:	mov    ecx,esi
  52780d:	sub    edi,eax
  52780f:	sub    ecx,eax
  527811:	mov    eax,edx
  527813:	shr    ax,0x5
  527817:	sub    dx,ax
  52781a:	mov    eax,DWORD PTR [esp+0x38]
  52781e:	cmp    ecx,0xffffff
  527824:	mov    WORD PTR [eax+0x1b0],dx
  52782b:	ja     0x527843
  52782d:	cmp    ebx,DWORD PTR [esp+0x4c]
  527831:	je     0x527cd8
  527837:	movzx  eax,BYTE PTR [ebx]
  52783a:	shl    edi,0x8
  52783d:	shl    ecx,0x8
  527840:	inc    ebx
  527841:	or     edi,eax
  527843:	mov    esi,DWORD PTR [esp+0x38]
  527847:	mov    eax,ecx
  527849:	shr    eax,0xb
  52784c:	mov    dx,WORD PTR [esi+0x1c8]
  527853:	movzx  ebp,dx
  527856:	imul   eax,ebp
  527859:	cmp    edi,eax
  52785b:	jae    0x52787d
  52785d:	mov    esi,eax
  52785f:	mov    eax,0x800
  527864:	sub    eax,ebp
  527866:	mov    ebp,DWORD PTR [esp+0x38]
  52786a:	sar    eax,0x5
  52786d:	lea    eax,[edx+eax*1]
  527870:	mov    WORD PTR [ebp+0x1c8],ax
  527877:	mov    eax,DWORD PTR [esp+0x54]
  52787b:	jmp    0x5278a3
  52787d:	mov    esi,ecx
  52787f:	sub    edi,eax
  527881:	sub    esi,eax
  527883:	mov    eax,edx
  527885:	shr    ax,0x5
  527889:	sub    dx,ax
  52788c:	mov    eax,DWORD PTR [esp+0x38]
  527890:	mov    WORD PTR [eax+0x1c8],dx
  527897:	mov    edx,DWORD PTR [esp+0x54]
  52789b:	mov    eax,DWORD PTR [esp+0x50]
  52789f:	mov    DWORD PTR [esp+0x50],edx
  5278a3:	mov    ecx,DWORD PTR [esp+0x58]
  5278a7:	mov    DWORD PTR [esp+0x54],ecx
  5278ab:	mov    ebp,DWORD PTR [esp+0x5c]
  5278af:	mov    DWORD PTR [esp+0x5c],eax
  5278b3:	mov    DWORD PTR [esp+0x58],ebp
  5278b7:	xor    eax,eax
  5278b9:	cmp    DWORD PTR [esp+0x60],0x6
  5278be:	mov    ecx,DWORD PTR [esp+0x78]
  5278c2:	setg   al
  5278c5:	add    ecx,0xa68
  5278cb:	lea    eax,[eax+eax*2+0x8]
  5278cf:	mov    DWORD PTR [esp+0x60],eax
  5278d3:	cmp    esi,0xffffff
  5278d9:	ja     0x5278f1
  5278db:	cmp    ebx,DWORD PTR [esp+0x4c]
  5278df:	je     0x527cd8
  5278e5:	movzx  eax,BYTE PTR [ebx]
  5278e8:	shl    edi,0x8
  5278eb:	shl    esi,0x8
  5278ee:	inc    ebx
  5278ef:	or     edi,eax
  5278f1:	mov    dx,WORD PTR [ecx]
  5278f4:	mov    eax,esi
  5278f6:	shr    eax,0xb
  5278f9:	movzx  ebp,dx
  5278fc:	imul   eax,ebp
  5278ff:	cmp    edi,eax
  527901:	jae    0x527932
  527903:	mov    DWORD PTR [esp+0x48],eax
  527907:	mov    eax,0x800
  52790c:	sub    eax,ebp
  52790e:	shl    DWORD PTR [esp+0x44],0x4
  527913:	sar    eax,0x5
  527916:	mov    DWORD PTR [esp+0x2c],0x0
  52791e:	lea    eax,[edx+eax*1]
  527921:	mov    WORD PTR [ecx],ax
  527924:	mov    eax,DWORD PTR [esp+0x44]
  527928:	lea    ecx,[ecx+eax*1+0x4]
  52792c:	mov    DWORD PTR [esp+0x10],ecx
  527930:	jmp    0x5279a4
  527932:	sub    esi,eax
  527934:	sub    edi,eax
  527936:	mov    eax,edx
  527938:	shr    ax,0x5
  52793c:	sub    dx,ax
  52793f:	cmp    esi,0xffffff
  527945:	mov    WORD PTR [ecx],dx
  527948:	ja     0x527960
  52794a:	cmp    ebx,DWORD PTR [esp+0x4c]
  52794e:	je     0x527cd8
  527954:	movzx  eax,BYTE PTR [ebx]
  527957:	shl    edi,0x8
  52795a:	shl    esi,0x8
  52795d:	inc    ebx
  52795e:	or     edi,eax
  527960:	mov    dx,WORD PTR [ecx+0x2]
  527964:	mov    eax,esi
  527966:	shr    eax,0xb
  527969:	movzx  ebp,dx
  52796c:	imul   eax,ebp
  52796f:	cmp    edi,eax
  527971:	jae    0x5279ae
  527973:	mov    DWORD PTR [esp+0x48],eax
  527977:	mov    eax,0x800
  52797c:	sub    eax,ebp
  52797e:	shl    DWORD PTR [esp+0x44],0x4
  527983:	sar    eax,0x5
  527986:	mov    DWORD PTR [esp+0x2c],0x8
  52798e:	lea    eax,[edx+eax*1]
  527991:	mov    edx,DWORD PTR [esp+0x44]
  527995:	mov    WORD PTR [ecx+0x2],ax
  527999:	lea    ecx,[ecx+edx*1+0x104]
  5279a0:	mov    DWORD PTR [esp+0x10],ecx
  5279a4:	mov    DWORD PTR [esp+0x30],0x3
  5279ac:	jmp    0x5279dd
  5279ae:	sub    esi,eax
  5279b0:	sub    edi,eax
  5279b2:	mov    eax,edx
  5279b4:	mov    DWORD PTR [esp+0x48],esi
  5279b8:	shr    ax,0x5
  5279bc:	mov    DWORD PTR [esp+0x2c],0x10
  5279c4:	sub    dx,ax
  5279c7:	mov    DWORD PTR [esp+0x30],0x8
  5279cf:	mov    WORD PTR [ecx+0x2],dx
  5279d3:	add    ecx,0x204
  5279d9:	mov    DWORD PTR [esp+0x10],ecx
  5279dd:	mov    ecx,DWORD PTR [esp+0x30]
  5279e1:	mov    edx,0x1
  5279e6:	mov    DWORD PTR [esp+0x28],ecx
  5279ea:	lea    ebp,[edx+edx*1]
  5279ed:	mov    esi,DWORD PTR [esp+0x10]
  5279f1:	add    esi,ebp
  5279f3:	cmp    DWORD PTR [esp+0x48],0xffffff
  5279fb:	ja     0x527a15
  5279fd:	cmp    ebx,DWORD PTR [esp+0x4c]
  527a01:	je     0x527cd8
  527a07:	shl    DWORD PTR [esp+0x48],0x8
  527a0c:	movzx  eax,BYTE PTR [ebx]
  527a0f:	shl    edi,0x8
  527a12:	inc    ebx
  527a13:	or     edi,eax
  527a15:	mov    eax,DWORD PTR [esp+0x48]
  527a19:	mov    dx,WORD PTR [esi]
  527a1c:	shr    eax,0xb
  527a1f:	movzx  ecx,dx
  527a22:	imul   eax,ecx
  527a25:	cmp    edi,eax
  527a27:	jae    0x527a41
  527a29:	mov    DWORD PTR [esp+0x48],eax
  527a2d:	mov    eax,0x800
  527a32:	sub    eax,ecx
  527a34:	sar    eax,0x5
  527a37:	lea    eax,[edx+eax*1]
  527a3a:	mov    edx,ebp
  527a3c:	mov    WORD PTR [esi],ax
  527a3f:	jmp    0x527a56
  527a41:	sub    DWORD PTR [esp+0x48],eax
  527a45:	sub    edi,eax
  527a47:	mov    eax,edx
  527a49:	shr    ax,0x5
  527a4d:	sub    dx,ax
  527a50:	mov    WORD PTR [esi],dx
  527a53:	lea    edx,[ebp+0x1]
  527a56:	mov    esi,DWORD PTR [esp+0x28]
  527a5a:	dec    esi
  527a5b:	mov    DWORD PTR [esp+0x28],esi
  527a5f:	jne    0x5279ea
  527a61:	mov    cl,BYTE PTR [esp+0x30]
  527a65:	mov    eax,0x1
  527a6a:	shl    eax,cl
  527a6c:	sub    edx,eax
  527a6e:	add    edx,DWORD PTR [esp+0x2c]
  527a72:	cmp    DWORD PTR [esp+0x60],0x3
  527a77:	mov    DWORD PTR [esp+0xc],edx
  527a7b:	jg     0x527c68
  527a81:	add    DWORD PTR [esp+0x60],0x7
  527a86:	cmp    edx,0x3
  527a89:	mov    eax,edx
  527a8b:	jle    0x527a92
  527a8d:	mov    eax,0x3
  527a92:	mov    esi,DWORD PTR [esp+0x78]
  527a96:	shl    eax,0x7
  527a99:	mov    DWORD PTR [esp+0x24],0x6
  527aa1:	lea    eax,[esi+eax*1+0x360]
  527aa8:	mov    DWORD PTR [esp+0x8],eax
  527aac:	mov    eax,0x1
  527ab1:	lea    ebp,[eax+eax*1]
  527ab4:	mov    esi,DWORD PTR [esp+0x8]
  527ab8:	add    esi,ebp
  527aba:	cmp    DWORD PTR [esp+0x48],0xffffff
  527ac2:	ja     0x527adc
  527ac4:	cmp    ebx,DWORD PTR [esp+0x4c]
  527ac8:	je     0x527cd8
  527ace:	shl    DWORD PTR [esp+0x48],0x8
  527ad3:	movzx  eax,BYTE PTR [ebx]
  527ad6:	shl    edi,0x8
  527ad9:	inc    ebx
  527ada:	or     edi,eax
  527adc:	mov    eax,DWORD PTR [esp+0x48]
  527ae0:	mov    dx,WORD PTR [esi]
  527ae3:	shr    eax,0xb
  527ae6:	movzx  ecx,dx
  527ae9:	imul   eax,ecx
  527aec:	cmp    edi,eax
  527aee:	jae    0x527b08
  527af0:	mov    DWORD PTR [esp+0x48],eax
  527af4:	mov    eax,0x800
  527af9:	sub    eax,ecx
  527afb:	sar    eax,0x5
  527afe:	lea    eax,[edx+eax*1]
  527b01:	mov    WORD PTR [esi],ax
  527b04:	mov    eax,ebp
  527b06:	jmp    0x527b1d
  527b08:	sub    DWORD PTR [esp+0x48],eax
  527b0c:	sub    edi,eax
  527b0e:	mov    eax,edx
  527b10:	shr    ax,0x5
  527b14:	sub    dx,ax
  527b17:	lea    eax,[ebp+0x1]
  527b1a:	mov    WORD PTR [esi],dx
  527b1d:	mov    ebp,DWORD PTR [esp+0x24]
  527b21:	dec    ebp
  527b22:	mov    DWORD PTR [esp+0x24],ebp
  527b26:	jne    0x527ab1
  527b28:	lea    edx,[eax-0x40]
  527b2b:	cmp    edx,0x3
  527b2e:	mov    DWORD PTR [esp],edx
  527b31:	jle    0x527c5e
  527b37:	mov    eax,edx
  527b39:	mov    esi,edx
  527b3b:	sar    eax,1
  527b3d:	and    esi,0x1
  527b40:	lea    ecx,[eax-0x1]
  527b43:	or     esi,0x2
  527b46:	cmp    edx,0xd
  527b49:	mov    DWORD PTR [esp+0x20],ecx
  527b4d:	jg     0x527b6b
  527b4f:	mov    ebp,DWORD PTR [esp+0x78]
  527b53:	shl    esi,cl
  527b55:	add    edx,edx
  527b57:	mov    DWORD PTR [esp],esi
  527b5a:	lea    eax,[ebp+esi*2+0x0]
  527b5e:	sub    eax,edx
  527b60:	add    eax,0x55e
  527b65:	mov    DWORD PTR [esp+0x4],eax
  527b69:	jmp    0x527bc1
  527b6b:	lea    edx,[eax-0x5]
  527b6e:	cmp    DWORD PTR [esp+0x48],0xffffff
  527b76:	ja     0x527b90
  527b78:	cmp    ebx,DWORD PTR [esp+0x4c]
  527b7c:	je     0x527cd8
  527b82:	shl    DWORD PTR [esp+0x48],0x8
  527b87:	movzx  eax,BYTE PTR [ebx]
  527b8a:	shl    edi,0x8
  527b8d:	inc    ebx
  527b8e:	or     edi,eax
  527b90:	shr    DWORD PTR [esp+0x48],1
  527b94:	add    esi,esi
  527b96:	cmp    edi,DWORD PTR [esp+0x48]
  527b9a:	jb     0x527ba3
  527b9c:	sub    edi,DWORD PTR [esp+0x48]
  527ba0:	or     esi,0x1
  527ba3:	dec    edx
  527ba4:	jne    0x527b6e
  527ba6:	mov    eax,DWORD PTR [esp+0x78]
  527baa:	shl    esi,0x4
  527bad:	mov    DWORD PTR [esp],esi
  527bb0:	add    eax,0x644
  527bb5:	mov    DWORD PTR [esp+0x20],0x4
  527bbd:	mov    DWORD PTR [esp+0x4],eax
  527bc1:	mov    DWORD PTR [esp+0x1c],0x1
  527bc9:	mov    eax,0x1
  527bce:	mov    ebp,DWORD PTR [esp+0x4]
  527bd2:	add    eax,eax
  527bd4:	mov    DWORD PTR [esp+0x18],eax
  527bd8:	add    ebp,eax
  527bda:	cmp    DWORD PTR [esp+0x48],0xffffff
  527be2:	ja     0x527bfc
  527be4:	cmp    ebx,DWORD PTR [esp+0x4c]
  527be8:	je     0x527cd8
  527bee:	shl    DWORD PTR [esp+0x48],0x8
  527bf3:	movzx  eax,BYTE PTR [ebx]
  527bf6:	shl    edi,0x8
  527bf9:	inc    ebx
  527bfa:	or     edi,eax
  527bfc:	mov    eax,DWORD PTR [esp+0x48]
  527c00:	mov    dx,WORD PTR [ebp+0x0]
  527c04:	shr    eax,0xb
  527c07:	movzx  esi,dx
  527c0a:	imul   eax,esi
  527c0d:	cmp    edi,eax
  527c0f:	jae    0x527c2c
  527c11:	mov    DWORD PTR [esp+0x48],eax
  527c15:	mov    eax,0x800
  527c1a:	sub    eax,esi
  527c1c:	sar    eax,0x5
  527c1f:	lea    eax,[edx+eax*1]
  527c22:	mov    WORD PTR [ebp+0x0],ax
  527c26:	mov    eax,DWORD PTR [esp+0x18]
  527c2a:	jmp    0x527c4b
  527c2c:	sub    DWORD PTR [esp+0x48],eax
  527c30:	sub    edi,eax
  527c32:	mov    eax,edx
  527c34:	shr    ax,0x5
  527c38:	sub    dx,ax
  527c3b:	mov    eax,DWORD PTR [esp+0x18]
  527c3f:	mov    WORD PTR [ebp+0x0],dx
  527c43:	mov    edx,DWORD PTR [esp+0x1c]
  527c47:	inc    eax
  527c48:	or     DWORD PTR [esp],edx
  527c4b:	mov    ecx,DWORD PTR [esp+0x20]
  527c4f:	shl    DWORD PTR [esp+0x1c],1
  527c53:	dec    ecx
  527c54:	mov    DWORD PTR [esp+0x20],ecx
  527c58:	jne    0x527bce
  527c5e:	mov    esi,DWORD PTR [esp]
  527c61:	inc    esi
  527c62:	mov    DWORD PTR [esp+0x5c],esi
  527c66:	je     0x527cc1
  527c68:	mov    ecx,DWORD PTR [esp+0xc]
  527c6c:	mov    ebp,DWORD PTR [esp+0x74]
  527c70:	add    ecx,0x2
  527c73:	cmp    DWORD PTR [esp+0x5c],ebp
  527c77:	ja     0x527cd8
  527c79:	mov    eax,DWORD PTR [esp+0xa0]
  527c80:	mov    edx,ebp
  527c82:	sub    eax,DWORD PTR [esp+0x5c]
  527c86:	add    edx,DWORD PTR [esp+0xa0]
  527c8d:	lea    esi,[eax+ebp*1]
  527c90:	mov    al,BYTE PTR [esi]
  527c92:	inc    esi
  527c93:	mov    BYTE PTR [esp+0x73],al
  527c97:	mov    BYTE PTR [edx],al
  527c99:	inc    edx
  527c9a:	inc    DWORD PTR [esp+0x74]
  527c9e:	dec    ecx
  527c9f:	je     0x527cb0
  527ca1:	mov    ebp,DWORD PTR [esp+0xa4]
  527ca8:	cmp    DWORD PTR [esp+0x74],ebp
  527cac:	jb     0x527c90
  527cae:	jmp    0x527cc1
  527cb0:	mov    eax,DWORD PTR [esp+0xa4]
  527cb7:	cmp    DWORD PTR [esp+0x74],eax
  527cbb:	jb     0x52737c
  527cc1:	cmp    DWORD PTR [esp+0x48],0xffffff
  527cc9:	ja     0x527ce0
  527ccb:	cmp    ebx,DWORD PTR [esp+0x4c]
  527ccf:	mov    eax,0x1
  527cd4:	je     0x527cff
  527cd6:	jmp    0x527cdf
  527cd8:	mov    eax,0x1
  527cdd:	jmp    0x527cff
  527cdf:	inc    ebx
  527ce0:	sub    ebx,DWORD PTR [esp+0x94]
  527ce7:	xor    eax,eax
  527ce9:	mov    edx,DWORD PTR [esp+0x9c]
  527cf0:	mov    ecx,DWORD PTR [esp+0x74]
  527cf4:	mov    DWORD PTR [edx],ebx
  527cf6:	mov    ebx,DWORD PTR [esp+0xa8]
  527cfd:	mov    DWORD PTR [ebx],ecx
  527cff:	add    esp,0x7c
  527d02:	pop    ebx
  527d03:	pop    esi
  527d04:	pop    edi
  527d05:	pop    ebp
  527d06:	add    esi,DWORD PTR [ebx-0x4]
  527d09:	add    edi,DWORD PTR [ebx-0x8]
  527d0c:	xor    eax,eax
  527d0e:	lea    ecx,[esp-0x100]
  527d15:	mov    esp,ebp
  527d17:	push   eax
  527d18:	cmp    esp,ecx
  527d1a:	jne    0x527d17
  527d1c:	mov    esp,ebp
  527d1e:	xor    ecx,ecx
  527d20:	pop    esi
  527d21:	mov    edi,esi
  527d23:	mov    ecx,0x34cd
  527d28:	mov    al,BYTE PTR [edi]
  527d2a:	inc    edi
  527d2b:	sub    al,0xe8
  527d2d:	cmp    al,0x1
  527d2f:	ja     0x527d28
  527d31:	cmp    BYTE PTR [edi],0x2
  527d34:	jne    0x527d28
  527d36:	mov    eax,DWORD PTR [edi]
  527d38:	mov    bl,BYTE PTR [edi+0x4]
  527d3b:	shr    ax,0x8
  527d3f:	rol    eax,0x10
  527d42:	xchg   ah,al
  527d44:	sub    eax,edi
  527d46:	sub    bl,0xe8
  527d49:	add    eax,esi
  527d4b:	mov    DWORD PTR [edi],eax
  527d4d:	add    edi,0x5
  527d50:	mov    al,bl
  527d52:	loop   0x527d2d
  527d54:	lea    edi,[esi+0x125000]
  527d5a:	mov    eax,DWORD PTR [edi]
  527d5c:	or     eax,eax
  527d5e:	je     0x527da5
  527d60:	mov    ebx,DWORD PTR [edi+0x4]
  527d63:	lea    eax,[eax+esi*1+0x1276a4]
  527d6a:	add    ebx,esi
  527d6c:	push   eax
  527d6d:	add    edi,0x8
  527d70:	call   DWORD PTR [esi+0x1276e0]
  527d76:	xchg   ebp,eax
  527d77:	mov    al,BYTE PTR [edi]
  527d79:	inc    edi
  527d7a:	or     al,al
  527d7c:	je     0x527d5a
  527d7e:	mov    ecx,edi
  527d80:	jns    0x527d89
  527d82:	movzx  eax,WORD PTR [edi]
  527d85:	inc    edi
  527d86:	push   eax
  527d87:	inc    edi
  527d88:	mov    ecx,0xaef24857
  527d8d:	push   ebp
  527d8e:	call   DWORD PTR [esi+0x1276e4]
  527d94:	or     eax,eax
  527d96:	je     0x527d9f
  527d98:	mov    DWORD PTR [ebx],eax
  527d9a:	add    ebx,0x4
  527d9d:	jmp    0x527d77
  527d9f:	call   DWORD PTR [esi+0x1276f4]
  527da5:	mov    ebp,DWORD PTR [esi+0x1276e8]
  527dab:	lea    edi,[esi-0x1000]
  527db1:	mov    ebx,0x1000
  527db6:	push   eax
  527db7:	push   esp
  527db8:	push   0x4
  527dba:	push   ebx
  527dbb:	push   edi
  527dbc:	call   ebp
  527dbe:	lea    eax,[edi+0x1df]
  527dc4:	and    BYTE PTR [eax],0x7f
  527dc7:	and    BYTE PTR [eax+0x28],0x7f
  527dcb:	pop    eax
  527dcc:	push   eax
  527dcd:	push   esp
  527dce:	push   eax
  527dcf:	push   ebx
  527dd0:	push   edi
  527dd1:	call   ebp
  527dd3:	pop    eax
  527dd4:	popa   
  527dd5:	lea    eax,[esp-0x80]
  527dd9:	push   0x0
  527ddb:	cmp    esp,eax
  527ddd:	jne    0x527dd9
  527ddf:	sub    esp,0xffffff80
  527de2:	jmp    0x519f99
	...

Disassembly of section .rsrc:

00528000 <.rsrc>:
  528000:	add    BYTE PTR [eax],al
  528002:	add    BYTE PTR [eax],al
  528004:	outs   dx,DWORD PTR ds:[esi]
  528005:	ss and al,0x4e
  528008:	add    DWORD PTR [eax],eax
  52800a:	add    al,BYTE PTR [eax]
  52800c:	add    BYTE PTR [eax],al
  52800e:	add    eax,DWORD PTR [eax]
  528010:	add    eax,DWORD PTR [eax]
  528012:	add    BYTE PTR [eax],al
  528014:	sub    BYTE PTR [eax],al
  528016:	add    BYTE PTR [eax+0xe],al
  52801c:	push   0x10800000
  528021:	add    BYTE PTR [eax],al
  528023:	add    BYTE PTR [eax+0x800000],ch
	...
  528035:	add    BYTE PTR [ecx],al
  528037:	add    BYTE PTR [ecx],al
  528039:	add    BYTE PTR [eax],al
  52803b:	add    BYTE PTR [eax+0x0],al
  52803e:	add    BYTE PTR [eax+0x0],al
	...
  52804c:	add    BYTE PTR [eax],al
  52804e:	add    DWORD PTR [eax],eax
  528050:	add    BYTE PTR [eax],al
  528052:	add    BYTE PTR [eax],al
  528054:	pop    eax
  528055:	add    BYTE PTR [eax],al
  528057:	add    ah,ch
  528059:	adc    BYTE PTR [edx],0x0
  52805c:	dec    eax
  52805d:	add    al,BYTE PTR [eax]
	...
  52806b:	add    BYTE PTR [edi+0x36],ch
  52806e:	and    al,0x4e
  528070:	add    DWORD PTR [eax],eax
  528072:	add    al,BYTE PTR [eax]
  528074:	add    BYTE PTR [eax],al
  528076:	add    DWORD PTR [eax],eax
  528078:	add    DWORD PTR [eax],eax
  52807a:	add    BYTE PTR [eax],al
  52807c:	add    BYTE PTR [eax],0x0
  52807f:	add    BYTE PTR [eax],0x0
  528082:	add    BYTE PTR [eax],al
  528084:	outs   dx,DWORD PTR ds:[esi]
  528085:	ss and al,0x4e
  528088:	add    DWORD PTR [eax],eax
  52808a:	add    al,BYTE PTR [eax]
  52808c:	add    BYTE PTR [eax],al
  52808e:	add    DWORD PTR [eax],eax
  528090:	add    BYTE PTR [eax],al
  528092:	add    BYTE PTR [eax],al
  528094:	cwde   
  528095:	add    BYTE PTR [eax],al
  528097:	add    BYTE PTR [eax],bh
  528099:	adc    DWORD PTR [edx],0x0
  52809c:	adc    al,0x0
  52809e:	add    BYTE PTR [eax],al
  5280a0:	mov    al,0x4
	...
  5280aa:	add    BYTE PTR [eax],al
  5280ac:	outs   dx,DWORD PTR ds:[esi]
  5280ad:	ss and al,0x4e
  5280b0:	add    DWORD PTR [eax],eax
  5280b2:	add    al,BYTE PTR [eax]
  5280b4:	add    BYTE PTR [eax],al
  5280b6:	add    DWORD PTR [eax],eax
  5280b8:	add    DWORD PTR [eax],eax
  5280ba:	add    BYTE PTR [eax],al
  5280bc:	rol    BYTE PTR [eax],0x0
  5280bf:	add    BYTE PTR [eax],0x0
  5280c2:	add    BYTE PTR [eax],al
  5280c4:	outs   dx,DWORD PTR ds:[esi]
  5280c5:	ss and al,0x4e
  5280c8:	add    DWORD PTR [eax],eax
  5280ca:	add    al,BYTE PTR [eax]
  5280cc:	add    BYTE PTR [eax],al
  5280ce:	add    DWORD PTR [eax],eax
  5280d0:	or     DWORD PTR [eax+eax*1],eax
  5280d3:	add    al,bl
  5280d5:	add    BYTE PTR [eax],al
  5280d7:	add    BYTE PTR [eax-0x7d],dl
  5280da:	adc    al,BYTE PTR [eax]
  5280dc:	push   esp
  5280dd:	add    eax,DWORD PTR [eax]
  5280df:	add    BYTE PTR [eax+0x4],dh
  5280e5:	add    BYTE PTR [eax],al
  5280e7:	add    al,ch
  5280e9:	push   eax
  5280ea:	adc    al,BYTE PTR [eax]
  5280ec:	sub    BYTE PTR [eax],al
  5280ee:	add    BYTE PTR [eax],al
  5280f0:	sbb    BYTE PTR [eax],al
  5280f2:	add    BYTE PTR [eax],al
  5280f4:	xor    BYTE PTR [eax],al
  5280f6:	add    BYTE PTR [eax],al
  5280f8:	add    DWORD PTR [eax],eax
  5280fa:	add    al,0x0
  5280fc:	add    BYTE PTR [eax],al
  5280fe:	add    BYTE PTR [eax],al
  528100:	add    BYTE PTR [ecx],0x0
	...
  528117:	add    BYTE PTR [eax],al
  528119:	add    BYTE PTR [eax+0x800000],al
  52811f:	add    BYTE PTR [eax],al
  528121:	add    BYTE PTR [eax+0x8000],0x0
  528128:	add    BYTE PTR [eax],0x80
  52812b:	add    BYTE PTR [eax-0x7fffff80],al
  528131:	add    BYTE PTR [eax-0x3f3f4000],0x0
  528138:	add    BYTE PTR [eax],al
  52813a:	inc    DWORD PTR [eax]
  52813c:	add    bh,bh
  52813e:	add    BYTE PTR [eax],al
  528140:	add    bh,bh
  528142:	inc    DWORD PTR [eax]
  528144:	inc    DWORD PTR [eax]
  528146:	add    BYTE PTR [eax],al
  528148:	inc    DWORD PTR [eax]
  52814a:	inc    DWORD PTR [eax]
  52814c:	(bad)  
  52814d:	inc    DWORD PTR [eax]
  52814f:	add    bh,bh
  528151:	(bad)  
  528152:	inc    DWORD PTR [eax]
	...
  528160:	xchg   BYTE PTR [edi+0x77],dh
  528163:	ja     0x5281dc
  528165:	addr16 ja 0x5281df
  528168:	ja     0x5281d0
  52816a:	push   0xffffffa0
  52816c:	xchg   BYTE PTR [edi+0x77],dh
  52816f:	ja     0x5281e8
  528171:	addr16 ja 0x5281eb
  528174:	ja     0x5281dc
  528176:	push   0xffffffa0
  528178:	xchg   BYTE PTR [edi+0x77],dh
  52817b:	ja     0x5281f4
  52817d:	addr16 ja 0x5281f7
  528180:	ja     0x5281e8
  528182:	push   0xffffffa0
  528184:	xchg   BYTE PTR [edi+0x77],dh
  528187:	ja     0x528200
  528189:	addr16 ja 0x528203
  52818c:	ja     0x5281f4
  52818e:	push   0xffffffa0
  528190:	xchg   BYTE PTR [edi+0x77],dh
  528193:	ja     0x52820c
  528195:	addr16 ja 0x52820f
  528198:	ja     0x528200
  52819a:	push   0xffffffa0
  52819c:	xchg   BYTE PTR [edi+0x77],dh
  52819f:	ja     0x528218
  5281a1:	addr16 ja 0x52821b
  5281a4:	ja     0x52820c
  5281a6:	push   0xffffffa0
  5281a8:	xchg   BYTE PTR [edi+0x77],dh
  5281ab:	ja     0x528224
  5281ad:	addr16 ja 0x528227
  5281b0:	ja     0x528218
  5281b2:	push   0xffffffa0
  5281b4:	xchg   BYTE PTR [edi+0x77],dh
  5281b7:	ja     0x528230
  5281b9:	addr16 ja 0x528233
  5281bc:	ja     0x528224
  5281be:	push   0xffffffa0
  5281c0:	xchg   BYTE PTR [edi+0x77],dh
  5281c3:	ja     0x52823c
  5281c5:	addr16 ja 0x52823f
  5281c8:	ja     0x528230
  5281ca:	push   0xffffffa0
  5281cc:	xchg   BYTE PTR [edi+0x77],dh
  5281cf:	ja     0x528248
  5281d1:	addr16 ja 0x52824b
  5281d4:	ja     0x52823c
  5281d6:	push   0xffffffa0
  5281d8:	jbe    0x528240
  5281da:	addr16 data16 data16 data16 data16 daa 
  5281e0:	jb     0x528248
  5281e2:	and    ah,BYTE PTR [eax+0x67666686]
  5281e8:	data16 data16 data16 jb 0x52825f
  5281ed:	sub    ah,BYTE PTR es:[eax]
  5281f0:	xchg   BYTE PTR [edi+0x66],ah
  5281f3:	data16 addr16 data16 data16 jb 0x52826b
  5281f9:	and    ch,BYTE PTR [edx]
  5281fb:	mov    al,ds:0x67666786
  528200:	addr16 data16 data16 jb 0x528227
  528205:	and    ch,BYTE PTR [edx]
  528207:	mov    al,ds:0x66666676
  52820c:	data16 data16 data16 and ah,BYTE PTR [edx]
  528211:	and    ah,BYTE PTR [edx]
  528213:	and    BYTE PTR [esi+0x77777777],al
  528219:	addr16 ja 0x528293
  52821c:	ja     0x528284
  52821e:	push   0xffffffa0
  528220:	jbe    0x528288
  528222:	addr16 ja 0x52829c
  528225:	addr16 ja 0x52829f
  528228:	ja     0x528290
  52822a:	push   0xffffffa0
  52822c:	jbe    0x528294
  52822e:	addr16 ja 0x5282a8
  528231:	addr16 ja 0x5282ab
  528234:	ja     0x52829c
  528236:	push   0xffffffa0
  528238:	jbe    0x5282a0
  52823a:	addr16 ja 0x5282b4
  52823d:	addr16 ja 0x5282b7
  528240:	ja     0x5282a8
  528242:	push   0xffffffa0
  528244:	xchg   BYTE PTR [edi+0x77],dh
  528247:	ja     0x5282c0
  528249:	addr16 ja 0x528273
  52824c:	ja     0x5282b4
  52824e:	push   0xffffffa0
  528250:	xchg   BYTE PTR [esi+0x66],ah
  528253:	data16 data16 data16 data16 and ah,BYTE PTR [edx]
  528259:	and    ah,BYTE PTR [edx]
  52825b:	and    BYTE PTR [esi+0x66666666],al
  528261:	data16 data16 and ah,BYTE PTR [edx]
  528265:	and    ah,BYTE PTR [edx]
  528267:	and    BYTE PTR [esi+0x77777777],al
  52826d:	addr16 ja 0x5282e7
  528270:	ja     0x5282d8
  528272:	push   0xffffffa0
	...
  528334:	xor    BYTE PTR [ebx+0x12],dl
  528337:	add    BYTE PTR [eax],al
  528339:	add    BYTE PTR [ecx],al
  52833b:	add    BYTE PTR [ecx],al
  52833d:	add    BYTE PTR [eax],bl
  52833f:	sbb    BYTE PTR [eax],dl
  528341:	add    BYTE PTR [eax],al
  528343:	add    BYTE PTR [eax],al
  528345:	add    BYTE PTR [eax+0x2],cl
  528348:	add    BYTE PTR [eax],al
  52834a:	add    DWORD PTR [eax],eax
  52834c:	inc    esp
  52834d:	push   ebx
  52834e:	adc    al,BYTE PTR [eax]
  528350:	push   esp
  528351:	add    esi,DWORD PTR [eax+eax*1]
  528354:	add    BYTE PTR [eax],al
  528356:	push   esi
  528357:	add    BYTE PTR [ebx+0x0],dl
  52835a:	pop    edi
  52835b:	add    BYTE PTR [esi+0x0],dl
  52835e:	inc    ebp
  52835f:	add    BYTE PTR [edx+0x0],dl
  528362:	push   ebx
  528363:	add    BYTE PTR [ecx+0x0],cl
  528366:	dec    edi
  528367:	add    BYTE PTR [esi+0x0],cl
  52836a:	pop    edi
  52836b:	add    BYTE PTR [ecx+0x0],cl
  52836e:	dec    esi
  52836f:	add    BYTE PTR [esi+0x0],al
  528372:	dec    edi
  528373:	add    BYTE PTR [eax],al
  528375:	add    BYTE PTR [eax],al
  528377:	add    BYTE PTR [ebp+0xfeef04],bh
  52837d:	add    BYTE PTR [ecx],al
  52837f:	add    BYTE PTR [edx],al
  528381:	add    BYTE PTR [esi],al
  528383:	add    BYTE PTR [edi],al
  528385:	add    BYTE PTR [eax],al
  528387:	add    BYTE PTR [edx],al
  528389:	add    BYTE PTR [esi],al
  52838b:	add    BYTE PTR [edi],al
	...
  528395:	add    BYTE PTR [eax],al
  528397:	add    BYTE PTR [eax+eax*1],al
  52839a:	add    BYTE PTR [eax],al
  52839c:	add    DWORD PTR [eax],eax
	...
  5283aa:	add    BYTE PTR [eax],al
  5283ac:	inc    esp
  5283ad:	add    BYTE PTR [eax],al
  5283af:	add    BYTE PTR [eax],al
  5283b1:	add    BYTE PTR [esi+0x0],dl
  5283b4:	popa   
  5283b5:	add    BYTE PTR [edx+0x0],dh
  5283b8:	inc    esi
  5283b9:	add    BYTE PTR [ecx+0x0],ch
  5283bc:	ins    BYTE PTR es:[edi],dx
  5283bd:	add    BYTE PTR [ebp+0x0],ah
  5283c0:	dec    ecx
  5283c1:	add    BYTE PTR [esi+0x0],ch
  5283c4:	data16 add BYTE PTR [edi+0x0],ch
  5283c8:	add    BYTE PTR [eax],al
  5283ca:	add    BYTE PTR [eax],al
  5283cc:	and    al,0x0
  5283ce:	add    al,0x0
  5283d0:	add    BYTE PTR [eax],al
  5283d2:	push   esp
  5283d3:	add    BYTE PTR [edx+0x0],dh
  5283d6:	popa   
  5283d7:	add    BYTE PTR [esi+0x0],ch
  5283da:	jae    0x5283dc
  5283dc:	ins    BYTE PTR es:[edi],dx
  5283dd:	add    BYTE PTR [ecx+0x0],ah
  5283e0:	je     0x5283e2
  5283e2:	imul   eax,DWORD PTR [eax],0x6e006f
  5283e8:	add    BYTE PTR [eax],al
  5283ea:	add    BYTE PTR [eax],al
  5283ec:	or     DWORD PTR [eax+esi*4],eax
  5283ef:	add    al,0xb4
  5283f1:	add    al,BYTE PTR [eax]
  5283f3:	add    BYTE PTR [ecx],al
  5283f5:	add    BYTE PTR [ebx+0x0],dl
  5283f8:	je     0x5283fa
  5283fa:	jb     0x5283fc
  5283fc:	imul   eax,DWORD PTR [eax],0x67006e
  528402:	inc    esi
  528403:	add    BYTE PTR [ecx+0x0],ch
  528406:	ins    BYTE PTR es:[edi],dx
  528407:	add    BYTE PTR [ebp+0x0],ah
  52840a:	dec    ecx
  52840b:	add    BYTE PTR [esi+0x0],ch
  52840e:	data16 add BYTE PTR [edi+0x0],ch
  528412:	add    BYTE PTR [eax],al
  528414:	nop
  528415:	add    al,BYTE PTR [eax]
  528417:	add    BYTE PTR [ecx],al
  528419:	add    BYTE PTR [eax],dh
  52841b:	add    BYTE PTR [eax+eax*1],dh
  52841e:	xor    BYTE PTR [eax],al
  528420:	cmp    DWORD PTR [eax],eax
  528422:	xor    BYTE PTR [eax],al
  528424:	xor    al,0x0
  528426:	inc    edx
  528427:	add    BYTE PTR [eax],dh
  528429:	add    BYTE PTR [eax],al
  52842b:	add    BYTE PTR [eax],bh
  52842d:	add    BYTE PTR [eax],ah
  52842f:	add    BYTE PTR [ecx],al
  528431:	add    BYTE PTR [ebx+0x0],al
  528434:	outs   dx,DWORD PTR ds:[esi]
  528435:	add    BYTE PTR [ebp+0x0],ch
  528438:	ins    DWORD PTR es:[edi],dx
  528439:	add    BYTE PTR [ebp+0x0],ah
  52843c:	outs   dx,BYTE PTR ds:[esi]
  52843d:	add    BYTE PTR [eax+eax*1+0x73],dh
  528441:	add    BYTE PTR [eax],al
  528443:	add    BYTE PTR [edx+0x0],al
  528446:	imul   eax,DWORD PTR [eax],0x74006c
  52844c:	ins    DWORD PTR es:[edi],dx
  52844d:	add    BYTE PTR [edi+0x0],ch
  528450:	jb     0x528452
  528452:	add    BYTE PTR gs:[eax],ah
  528455:	add    BYTE PTR [esi+0x0],dl
  528458:	imul   eax,DWORD PTR [eax],0x73006e
  52845e:	outs   dx,DWORD PTR ds:[esi]
  52845f:	add    BYTE PTR [esi+0x0],ch
  528462:	add    BYTE PTR [eax],al
  528464:	pop    esp
  528465:	add    BYTE PTR [eax+eax*1],bh
  528468:	add    DWORD PTR [eax],eax
  52846a:	inc    ebx
  52846b:	add    BYTE PTR [edi+0x0],ch
  52846e:	ins    DWORD PTR es:[edi],dx
  52846f:	add    BYTE PTR [eax+0x0],dh
  528472:	popa   
  528473:	add    BYTE PTR [esi+0x0],ch
  528476:	jns    0x528478
  528478:	dec    esi
  528479:	add    BYTE PTR [ecx+0x0],ah
  52847c:	ins    DWORD PTR es:[edi],dx
  52847d:	add    BYTE PTR [ebp+0x0],ah
  528480:	add    BYTE PTR [eax],al
  528482:	add    BYTE PTR [eax],al
  528484:	push   esp
  528485:	add    BYTE PTR [ebp+0x0],ah
  528488:	ins    BYTE PTR es:[edi],dx
  528489:	add    BYTE PTR [eax],ah
  52848b:	add    BYTE PTR [ebx+0x0],al
  52848e:	outs   dx,DWORD PTR ds:[esi]
  52848f:	add    BYTE PTR [edx+0x0],dh
  528492:	imul   eax,DWORD PTR [eax],0x74006e
  528498:	push   0x49002000
  52849d:	add    BYTE PTR [ebx+0x0],ch
  5284a0:	add    BYTE PTR gs:[eax],ah
  5284a3:	add    BYTE PTR [edi+0x0],cl
  5284a6:	ins    BYTE PTR es:[edi],dx
  5284a7:	add    BYTE PTR [ecx+0x0],ch
  5284aa:	jbe    0x5284ac
  5284ac:	add    BYTE PTR gs:[edx+0x0],dh
  5284b0:	and    BYTE PTR [eax],al
  5284b2:	dec    edi
  5284b3:	add    BYTE PTR [edx+0x0],dh
  5284b6:	add    BYTE PTR gs:[edi+0x0],ah
  5284ba:	outs   dx,DWORD PTR ds:[esi]
  5284bb:	add    BYTE PTR [esi+0x0],ch
  5284be:	add    BYTE PTR [eax],al
  5284c0:	push   eax
  5284c1:	add    BYTE PTR [eax],ch
  5284c3:	add    BYTE PTR [ecx],al
  5284c5:	add    BYTE PTR [esi+0x0],al
  5284c8:	imul   eax,DWORD PTR [eax],0x65006c
  5284ce:	inc    esp
  5284cf:	add    BYTE PTR [ebp+0x0],ah
  5284d2:	jae    0x5284d4
  5284d4:	arpl   WORD PTR [eax],ax
  5284d6:	jb     0x5284d8
  5284d8:	imul   eax,DWORD PTR [eax],0x740070
  5284de:	imul   eax,DWORD PTR [eax],0x6e006f
  5284e4:	add    BYTE PTR [eax],al
  5284e6:	add    BYTE PTR [eax],al
  5284e8:	inc    esi
  5284e9:	add    BYTE PTR [edx+0x0],dh
  5284ec:	popa   
  5284ed:	add    BYTE PTR [esi+0x0],ch
  5284f0:	arpl   WORD PTR [eax],ax
  5284f2:	imul   eax,DWORD PTR [eax],0x65006e
  5284f8:	and    BYTE PTR [eax],al
  5284fa:	push   eax
  5284fb:	add    BYTE PTR [eax+0x0],ch
  5284fe:	imul   eax,DWORD PTR [eax],0x69006c
  528504:	jo     0x528506
  528506:	jo     0x528508
  528508:	imul   eax,DWORD PTR [eax],0x65006e
  52850e:	add    BYTE PTR [eax],al
  528510:	jl     0x528512
  528512:	pop    eax
  528513:	add    BYTE PTR [ecx],al
  528515:	add    BYTE PTR [eax+eax*1+0x65],cl
  528519:	add    BYTE PTR [edi+0x0],ah
  52851c:	popa   
  52851d:	add    BYTE PTR [eax+eax*1+0x43],ch
  528521:	add    BYTE PTR [edi+0x0],ch
  528524:	jo     0x528526
  528526:	jns    0x528528
  528528:	jb     0x52852a
  52852a:	imul   eax,DWORD PTR [eax],0x680067
  528530:	je     0x528532
  528532:	add    BYTE PTR [eax],al
  528534:	push   edi
  528535:	add    BYTE PTR [ecx+0x0],ch
  528538:	ins    BYTE PTR es:[edi],dx
  528539:	add    BYTE PTR [ebx+0x0],dh
  52853c:	outs   dx,DWORD PTR ds:[esi]
  52853d:	add    BYTE PTR [esi+0x0],ch
  528540:	and    BYTE PTR [eax],al
  528542:	inc    ebp
  528543:	add    BYTE PTR [ebp+0x0],dh
  528546:	jb     0x528548
  528548:	popa   
  528549:	add    BYTE PTR [ebx+0x0],dh
  52854c:	imul   eax,DWORD PTR [eax],0x200061
  528552:	inc    ebx
  528553:	add    BYTE PTR [edi+0x0],ch
  528556:	outs   dx,BYTE PTR ds:[esi]
  528557:	add    BYTE PTR [esi+0x0],ah
  52855a:	jne    0x52855c
  52855c:	arpl   WORD PTR [eax],ax
  52855e:	imul   eax,DWORD PTR [eax],0x6e0061
  528564:	imul   eax,DWORD PTR [eax],0x6d0073
  52856a:	and    BYTE PTR [eax],al
  52856c:	inc    esi
  52856d:	add    BYTE PTR [ecx+0x0],ah
  528570:	je     0x528572
  528572:	imul   eax,DWORD PTR [eax],0x61006d
  528578:	and    BYTE PTR [eax],al
  52857a:	inc    esp
  52857b:	add    BYTE PTR [edx+0x0],ch
  52857e:	popa   
  52857f:	add    BYTE PTR [ebx+0x0],ch
  528582:	popa   
  528583:	add    BYTE PTR [edx+0x0],dh
  528586:	je     0x528588
  528588:	popa   
  528589:	add    BYTE PTR [eax],al
  52858b:	add    BYTE PTR [eax+eax*1+0x24],al
  52858f:	add    BYTE PTR [ecx],al
  528591:	add    BYTE PTR [eax+0x0],dl
  528594:	jb     0x528596
  528596:	outs   dx,DWORD PTR ds:[esi]
  528597:	add    BYTE PTR [eax+eax*1+0x75],ah
  52859b:	add    BYTE PTR [ebx+0x0],ah
  52859e:	je     0x5285a0
  5285a0:	dec    esi
  5285a1:	add    BYTE PTR [ecx+0x0],ah
  5285a4:	ins    DWORD PTR es:[edi],dx
  5285a5:	add    BYTE PTR [ebp+0x0],ah
  5285a8:	add    BYTE PTR [eax],al
  5285aa:	add    BYTE PTR [eax],al
  5285ac:	dec    ebp
  5285ad:	add    BYTE PTR [ecx+0x0],ah
  5285b0:	bound  eax,QWORD PTR [eax]
  5285b2:	add    BYTE PTR gs:[eax+eax*1+0x20],ch
  5285b7:	add    BYTE PTR [edi+0x0],al
  5285ba:	popa   
  5285bb:	add    BYTE PTR [ecx+0x0],ch
  5285be:	outs   dx,BYTE PTR ds:[esi]
  5285bf:	add    BYTE PTR [ebp+0x0],ah
  5285c2:	jae    0x5285c4
  5285c4:	jbe    0x5285c6
  5285c6:	imul   eax,DWORD PTR [eax],0x6c006c
  5285cc:	add    BYTE PTR gs:[eax],al
  5285cf:	add    BYTE PTR [eax+eax*1],dh
  5285d2:	adc    al,0x0
  5285d4:	add    DWORD PTR [eax],eax
  5285d6:	inc    esi
  5285d7:	add    BYTE PTR [ecx+0x0],ch
  5285da:	ins    BYTE PTR es:[edi],dx
  5285db:	add    BYTE PTR [ebp+0x0],ah
  5285de:	push   esi
  5285df:	add    BYTE PTR [ebp+0x0],ah
  5285e2:	jb     0x5285e4
  5285e4:	jae    0x5285e6
  5285e6:	imul   eax,DWORD PTR [eax],0x6e006f
  5285ec:	add    BYTE PTR [eax],al
  5285ee:	add    BYTE PTR [eax],al
  5285f0:	add    BYTE PTR ss:[esi],ch
  5285f3:	add    BYTE PTR [eax],dh
  5285f5:	add    BYTE PTR [edx],dh
  5285f7:	add    BYTE PTR [esi],ch
  5285f9:	add    BYTE PTR [eax],dh
  5285fb:	add    BYTE PTR [eax],dh
  5285fd:	add    BYTE PTR [eax],dh
  5285ff:	add    BYTE PTR [edi],dh
  528601:	add    BYTE PTR [eax],al
  528603:	add    BYTE PTR [eax],bh
  528605:	add    BYTE PTR [eax+eax*1],dl
  528608:	add    DWORD PTR [eax],eax
  52860a:	push   eax
  52860b:	add    BYTE PTR [edx+0x0],dh
  52860e:	outs   dx,DWORD PTR ds:[esi]
  52860f:	add    BYTE PTR [eax+eax*1+0x75],ah
  528613:	add    BYTE PTR [ebx+0x0],ah
  528616:	je     0x528618
  528618:	push   esi
  528619:	add    BYTE PTR [ebp+0x0],ah
  52861c:	jb     0x52861e
  52861e:	jae    0x528620
  528620:	imul   eax,DWORD PTR [eax],0x6e006f
  528626:	add    BYTE PTR [eax],al
  528628:	add    BYTE PTR ss:[esi],ch
  52862b:	add    BYTE PTR [eax],dh
  52862d:	add    BYTE PTR [edx],dh
  52862f:	add    BYTE PTR [esi],ch
  528631:	add    BYTE PTR [eax],dh
  528633:	add    BYTE PTR [eax],dh
  528635:	add    BYTE PTR [eax],dh
  528637:	add    BYTE PTR [edi],dh
  528639:	add    BYTE PTR [eax],al
  52863b:	add    BYTE PTR [eax+eax*1],ch
  52863e:	or     al,0x0
  528640:	add    DWORD PTR [eax],eax
  528642:	dec    ecx
  528643:	add    BYTE PTR [esi+0x0],ch
  528646:	je     0x528648
  528648:	add    BYTE PTR gs:[edx+0x0],dh
  52864c:	outs   dx,BYTE PTR ds:[esi]
  52864d:	add    BYTE PTR [ecx+0x0],ah
  528650:	ins    BYTE PTR es:[edi],dx
  528651:	add    BYTE PTR [esi+0x0],cl
  528654:	popa   
  528655:	add    BYTE PTR [ebp+0x0],ch
  528658:	add    BYTE PTR gs:[eax],al
  52865b:	add    BYTE PTR [eax+0x0],bh
  52865e:	popa   
  52865f:	add    BYTE PTR [eax+0x0],dh
  528662:	ja     0x528664
  528664:	ins    BYTE PTR es:[edi],dx
  528665:	add    BYTE PTR [eax],al
  528667:	add    BYTE PTR [eax+eax*1],bh
  52866a:	adc    al,0x0
  52866c:	add    DWORD PTR [eax],eax
  52866e:	dec    edi
  52866f:	add    BYTE PTR [edx+0x0],dh
  528672:	imul   eax,DWORD PTR [eax],0x690067
  528678:	outs   dx,BYTE PTR ds:[esi]
  528679:	add    BYTE PTR [ecx+0x0],ah
  52867c:	ins    BYTE PTR es:[edi],dx
  52867d:	add    BYTE PTR [esi+0x0],al
  528680:	imul   eax,DWORD PTR [eax],0x65006c
  528686:	outs   dx,BYTE PTR ds:[esi]
  528687:	add    BYTE PTR [ecx+0x0],ah
  52868a:	ins    DWORD PTR es:[edi],dx
  52868b:	add    BYTE PTR [ebp+0x0],ah
  52868e:	add    BYTE PTR [eax],al
  528690:	js     0x528692
  528692:	popa   
  528693:	add    BYTE PTR [eax+0x0],dh
  528696:	ja     0x528698
  528698:	ins    BYTE PTR es:[edi],dx
  528699:	add    BYTE PTR [esi],ch
  52869b:	add    BYTE PTR [ebp+0x0],ah
  52869e:	js     0x5286a0
  5286a0:	add    BYTE PTR gs:[eax],al
	...
  5286af:	add    BYTE PTR [edi+eax*4],al
  5286b2:	adc    al,BYTE PTR [eax]
  5286b4:	loopne 0x52863c
  5286b6:	adc    al,BYTE PTR [eax]
	...
  5286c4:	adc    DWORD PTR [edi-0x7903ffee],eax
  5286ca:	adc    al,BYTE PTR [eax]
	...
  5286e0:	push   ds
  5286e1:	xchg   DWORD PTR [edx],edx
  5286e3:	add    BYTE PTR [edi+eax*4],ch
  5286e6:	adc    al,BYTE PTR [eax]
  5286e8:	cmp    al,0x87
  5286ea:	adc    al,BYTE PTR [eax]
  5286ec:	dec    esp
  5286ed:	xchg   DWORD PTR [edx],edx
  5286ef:	add    BYTE PTR [edx-0x79],bl
  5286f2:	adc    al,BYTE PTR [eax]
  5286f4:	push   0x1287
  5286f9:	add    BYTE PTR [eax],al
  5286fb:	add    BYTE PTR [ecx+0x2],ch
  5286fe:	add    BYTE PTR [eax+0x0],al
  528704:	dec    ebx
  528705:	inc    ebp
  528706:	push   edx
  528707:	dec    esi
  528708:	inc    ebp
  528709:	dec    esp
  52870a:	xor    esi,DWORD PTR [edx]
  52870c:	cs inc esp
  52870e:	dec    esp
  52870f:	dec    esp
  528710:	add    BYTE PTR [ebp+0x53],cl
  528713:	push   esi
  528714:	inc    edx
  528715:	push   esi
  528716:	dec    ebp
  528717:	xor    BYTE PTR ss:[esi],ch
  52871a:	inc    esp
  52871b:	dec    esp
  52871c:	dec    esp
  52871d:	add    BYTE PTR [eax],al
  52871f:	add    BYTE PTR [edi+ebp*2+0x61],cl
  528723:	fs dec esp
  528725:	imul   esp,DWORD PTR [edx+0x72],0x41797261
  52872c:	add    BYTE PTR [eax],al
  52872e:	inc    edi
  52872f:	gs je  0x528782
  528732:	jb     0x5287a3
  528734:	arpl   WORD PTR [ecx+0x64],ax
  528737:	fs jb  0x52879f
  52873a:	jae    0x5287af
  52873c:	add    BYTE PTR [eax],al
  52873e:	push   esi
  52873f:	imul   esi,DWORD PTR [edx+0x74],0x506c6175
  528746:	jb     0x5287b7
  528748:	je     0x5287af
  52874a:	arpl   WORD PTR [eax+eax*1+0x0],si
  52874e:	push   esi
  52874f:	imul   esi,DWORD PTR [edx+0x74],0x416c6175
  528756:	ins    BYTE PTR es:[edi],dx
  528757:	ins    BYTE PTR es:[edi],dx
  528758:	outs   dx,DWORD PTR ds:[esi]
  528759:	arpl   WORD PTR [eax],ax
  52875b:	add    BYTE PTR [esi+0x69],dl
  52875e:	jb     0x5287d4
  528760:	jne    0x5287c3
  528762:	ins    BYTE PTR es:[edi],dx
  528763:	inc    esi
  528764:	jb     0x5287cb
  528766:	add    BYTE PTR gs:[eax],al
  528769:	add    BYTE PTR [ebp+0x78],al
  52876c:	imul   esi,DWORD PTR [eax+edx*2+0x72],0x7365636f
  528774:	jae    0x528776
	...
